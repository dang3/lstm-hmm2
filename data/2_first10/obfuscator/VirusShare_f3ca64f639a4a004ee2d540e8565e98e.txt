sub
and
dec
cmc
add
and
add
es
lods
jg
incl
mov
add
movl
lea
push
push
add
add
ret
sti
fisttps
jne
lea
push
sub
je
or
leave
ret
inc
jae
mov
aaa
mov
dec
cld
cmp
push
push
call
jnp
pushw
inc
not
aaa
mov
push
jae
xor
xor
pop
mov
add
mov
lea
push
push
lcall
xor
mov
add
clc
push
lret
insl
insl
sti
movsb
or
cwtl
push
pushl
cmp
xchg
or
inc
rolb
ss
dec
jno
pop
addl
fldl
outsb
negl
xor
loope
xorl
fincstp
xlat
jns
push
clc
push
xor
out
adc
push
mov
stos
mov
and
std
mov
push
mov
add
mov
push
push
mov
mov
not
push
add
mov
iret
not
pop
add
mov
pushl
dec
mov
sbb
push
inc
div
dec
inc
mov
xchg
icebp
test
mov
push
push
sub
dec
xor
push
jns
xor
rcll
pop
setp
imul
or
popa
in
add
sub
in
xlat
loope
mov
lods
mov
je
dec
pop
aam
push
lret
pop
fcoml
push
imul
jbe
popa
mov
call
pop
fincstp
sar
addr16
shrb
aaa
arpl
in
pop
mov
insb
mov
pushl
pop
sub
pop
dec
pushl
neg
add
repnz
inc
subl
or
inc
jge
dec
lock
popf
lds
mov
nop
inc
ficoml
das
cs
pop
movsb
addl
push
fimull
rcr
clc
in
pop
xchg
andl
fucomip
ds
dec
enter
ret
into
loopne
jle
fbstp
mov
push
or
jg
xchg
pop
dec
mul
inc
xchg
adc
hlt
mov
stc
lock
mov
shll
mov
repnz
or
jbe
testl
clc
xor
cmp
cmp
push
outsb
push
jns
or
mov
jge
pop
pushf
xor
test
xlat
ret
arpl
mov
dec
xchg
jmp
insl
lock
dec
pop
mov
push
out
mov
dec
mov
xor
inc
and
rclb
mov
stos
xchg
test
push
faddl
mov
xor
mov
int3
dec
arpl
push
or
insb
mov
and
into
adc
push
out
test
add
xchg
adc
out
jp
or
negl
dec
insl
push
add
dec
ret
mov
push
addr16
jbe
fstl
pop
jns
enter
xchg
popf
inc
xor
repnz
push
sub
push
adc
cli
adc
in
ljmp
or
dec
mov
mov
mov
add
inc
dec
neg
sbb
call
inc
inc
test
or
jne
mov
pop
pop
roll
lock
push
inc
cmp
jo
sti
fists
dec
int3
push
lock
pop
mov
mov
inc
pop
mov
sbb
ds
rolb
add
in
push
movsl
or
test
xor
dec
mov
mov
fwait
sbb
fs
js
outsb
inc
push
in
sbb
dec
push
mov
out
add
dec
aam
addr16
mov
mov
sub
xor
pop
ss
add
clc
clc
imul
popf
or
mov
jnp
sub
push
pusha
in
fbstp
iret
cmp
into
push
aaa
or
or
loope
aad
sarl
lock
call
ret
aad
enter
fs
inc
aaa
add
xor
jl
mov
js
cmp
inc
mov
or
lret
mov
jmp
ja
add
inc
jg
dec
aad
add
mov
or
jmp
repnz
js
dec
jns
push
divl
clc
push
dec
jne
rolb
jle
adc
aam
dec
imul
in
pushf
fisubs
lock
xor
xorl
fdivs
dec
loopne
xchg
jnp
sub
cwtl
jns
xorl
push
jl
pop
lds
xor
push
dec
or
repz
mov
xor
cmp
xlat
les
loop
pop
hlt
fsubs
in
ja
arpl
aaa
aad
push
mov
ja
dec
sub
mov
lret
imul
stc
mov
push
shrl
push
mul
xchg
outsb
lahf
push
fidivrs
mov
mov
push
hlt
cwtl
xchg
adc
add
mov
push
push
push
pop
adc
or
add
loopne
in
sbb
add
mov
add
out
push
and
pop
sbb
jecxz
pop
test
and
push
or
jbe
add
inc
sarl
or
cmp
inc
xchg
pushl
ret
in
cli
imul
jne
mov
sbb
mov
fistps
mov
aaa
pop
je
push
or
push
push
pop
orl
mov
sub
cmp
cmp
movsb
movl
and
jl
idivb
dec
cmp
dec
ljmp
lret
inc
mov
push
dec
inc
fdivs
mov
insl
shr
or
sbb
push
je
incl
cmpsl
imul
shrb
outsl
inc
push
push
ja
add
out
add
xchg
movsb
and
and
mov
cwtl
out
inc
pop
add
cwtl
push
push
sub
add
ret
rol
loopne
pop
dec
dec
or
adc
pop
repnz
lods
jne
xchg
stos
scas
fwait
sub
xor
xlat
cmc
lds
or
inc
nop
or
cltd
lock
push
cld
inc
je
push
add
or
pushf
in
or
sub
rcl
mov
insl
add
push
or
dec
enter
and
cld
sub
loope
clc
aaa
mov
mov
or
xlat
maskmovq
negl
push
and
arpl
cmp
xor
pop
fxch
pop
ljmp
xchg
inc
jno
inc
xlat
ror
and
pushf
fisubrl
cwtl
jno
inc
inc
pop
arpl
movsl
mov
fcoml
jmp
cmp
mov
or
sbb
pop
or
bound
jns
adc
sub
mov
aam
mov
div
jmp
stos
in
push
mov
mov
dec
jne
xlat
clc
and
jns
push
das
inc
or
pop
and
in
push
inc
cmp
movsl
pop
jbe
ret
inc
xlat
shl
or
test
add
xchg
jns
data16
aas
add
or
shr
rolb
sbb
xor
add
ds
xorl
inc
push
dec
into
push
mov
aad
push
push
popa
inc
jae
add
inc
arpl
loopne
fnsave
inc
xor
jae
or
or
xorl
test
xor
dec
aas
sbb
aas
fst
jge
movsb
in
sbb
orb
arpl
divl
shll
loopne
fwait
lock
neg
push
dec
inc
add
adc
sub
mov
hlt
sub
mov
cmpsb
sub
sbb
sbb
fisubs
inc
dec
dec
inc
add
mov
mov
stos
fs
push
mov
or
sti
dec
test
leave
lock
iret
inc
sub
cmp
into
sub
sahf
and
adc
pop
dec
inc
push
inc
adc
dec
mov
jb
add
insb
xchg
inc
rolb
or
jo
neg
jle
fcmovnu
pop
jbe
dec
add
sbb
lock
inc
push
cmpsb
dec
inc
nop
test
insb
inc
sub
shll
mov
mov
lret
dec
adc
jne
leave
ljmp
imul
sarb
aaa
fnstsw
push
jne
add
pop
fs
lcall
push
int
inc
mov
push
push
leave
loopne
sub
push
lds
sub
js
mov
cmpsb
dec
xor
testb
add
dec
mov
call
aas
mov
push
mov
push
mov
ss
xor
mov
rcl
aas
xlat
adc
mov
sahf
jne
ja
fwait
pshufw
push
orl
sbb
lret
sub
mov
or
sub
mov
out
jecxz
mov
aaa
addr16
rcl
popf
prefetch
psllw
aad
iret
gs
mov
sub
in
and
aad
les
arpl
cli
add
xchg
xlat
les
stos
xor
mov
dec
add
push
inc
jo
inc
push
test
cmp
sub
adc
dec
mov
scas
in
pop
ret
imul
jp
imul
add
stos
push
add
iret
fistl
add
push
add
push
dec
jnp
xchg
mov
int3
cmp
add
jmp
cmp
adc
sub
nop
add
inc
movsl
add
int
jg
add
insb
outsl
cmc
mov
push
sub
pop
pop
lahf
or
mov
and
sti
aaa
mov
or
and
or
lock
sarl
pop
addb
add
sbb
pop
and
add
mov
add
pop
sti
pop
jae
ljmp
add
and
fidivs
xor
in
and
rcll
sbb
imull
call
sub
fsubrp
add
fbstp
sarb
mov
add
enter
testb
les
test
inc
mov
cmp
js
mov
add
in
mov
adc
jl
add
pop
xor
cmp
cld
dec
orl
xlat
or
add
or
repz
jne
xor
jbe
out
dec
sbb
inc
push
fsubr
out
iret
add
sub
pop
movsl
xchg
inc
xchg
add
testb
pop
or
data16
lahf
dec
adc
pusha
add
add
jb
sbb
ds
ret
out
or
xor
fdivrl
or
xchg
outsl
test
in
ret
int
ss
cmc
cmp
push
cmp
and
pushf
add
cmp
shll
and
aad
pop
sbb
dec
es
stos
lret
lcall
sarl
xor
push
in
rcrl
fcmovb
hlt
xchg
jo
xor
cmp
dec
in
or
cs
xor
mov
ficomps
in
out
jne
pusha
cmp
rcrb
flds
cmpsl
cmp
aas
mov
adcb
movsl
test
or
add
push
das
incl
js
rorb
sub
ret
into
cmpsl
jo
push
add
adc
repnz
test
ret
mov
add
push
popf
mov
mov
daa
fisttpll
inc
mov
mov
pcmpgtb
or
fidivrs
sub
add
or
scas
fldcw
aas
movsb
mov
push
gs
push
mov
lea
add
add
movsb
ret
iret
xchg
inc
xchg
push
call
bound
mov
shrl
shlb
dec
movd
fdivs
lahf
fwait
shll
sub
cmp
mov
jmp
xchg
cmp
add
movsb
adc
stos
add
push
stc
lock
dec
jns
pop
divl
adc
xorl
and
add
and
hlt
enter
pop
mov
loop
arpl
loopne
stc
xor
out
sti
dec
cld
sti
mov
jb
scas
popa
jl
clc
push
ljmp
fcomps
xchg
jmp
or
mov
je
pop
sub
cmc
xchg
out
cmpsb
inc
pushf
and
js
frstor
rolb
fwait
mov
inc
or
dec
fildl
lret
insb
mov
pop
pop
rcll
jl
xlat
lahf
fwait
fwait
mov
add
sub
in
or
mov
or
adc
pop
push
int3
fmull
ja
stos
mov
or
add
xchg
ret
imul
stc
xor
or
xchg
mov
js
das
cmp
pop
sahf
pop
mov
dec
cld
push
pop
inc
ja
jl
ljmp
or
push
jne
add
jo
stos
and
fimull
mov
in
int
xchg
mov
cs
xlat
or
test
lret
adcb
das
mov
mov
mov
in
loope
jno
add
call
sbb
sbb
push
rol
andb
cltd
push
cmp
jg
sub
mov
nop
mov
cmp
pop
mov
fwait
pop
and
movsb
fldt
xchg
and
add
jmp
push
cmp
pop
fadd
hlt
in
push
fisttpll
push
mov
lock
js
dec
lock
push
fidivrs
mov
push
cmp
push
out
je
in
push
jne
mov
and
pop
or
stc
mov
mov
in
lahf
std
lds
inc
scas
sbb
jnp
push
stos
push
adc
outsb
shlb
mov
into
jp
sub
jle
jg
pop
jge
add
xchg
adc
gs
movsl
add
pop
sbbl
idivl
rcrl
lock
in
aaa
adc
push
cld
mov
push
lods
aad
in
out
hlt
xorb
or
xchg
jmp
fmull
push
jle
popa
inc
jge
push
xor
mov
movsb
or
loope
cs
pushf
xchg
in
xor
stos
lret
jo
add
jmp
push
mov
lock
jno
out
in
rcr
cwtl
int
outsb
push
fwait
sarb
in
loope
sub
push
sbb
mov
jmp
cli
cmpsl
insl
or
sub
sbb
jp
dec
xor
xor
lcall
sbb
pop
jl
and
cmp
mov
xlat
test
xor
rclb
inc
or
hlt
or
and
or
in
ret
lods
and
andps
pop
stc
cmp
repz
mov
jmp
popf
and
cmp
aam
xchg
clc
shlb
push
popa
jnp
in
mov
inc
clc
or
fidivrl
les
es
sub
test
roll
inc
shr
push
pushf
ficomps
pop
shlb
xchg
dec
push
fneni(8087
sbb
inc
jnp
fiaddl
imul
rorl
push
sbb
je
sub
out
out
inc
sti
jo
jae
xchg
pusha
mov
adc
mov
inc
add
into
inc
xchg
mov
setnp
out
loope
and
repz
pop
icebp
mov
cmp
loopne
add
xor
or
daa
fstp
add
pop
loope
jbe
xchg
mov
movsl
scas
sub
xchg
loop
add
js
sub
movsl
inc
jmp
iret
and
fucomp
adc
icebp
xchg
xor
andl
shll
shr
imul
mov
cmp
icebp
jbe
in
es
call
xchg
andb
cmp
rcr
xchg
aaa
test
add
mov
inc
dec
mov
add
inc
push
lock
loop
or
mov
movl
dec
stc
clc
in
push
mov
loope
cmp
add
sbb
test
orb
neg
clc
rorb
inc
imul
jne
add
add
imul
mov
mov
clc
test
data16
adc
mov
xchg
jns
pop
lods
mov
lods
adc
inc
ja
pusha
add
pop
mov
icebp
xor
jnp
roll
inc
test
cs
cmp
jge
add
xor
stc
paddb
imull
unpcklps
cs
add
ja
adc
or
pop
sbb
andl
test
and
push
je
fiadds
shrl
mov
or
sti
aaa
pusha
ret
and
inc
pop
xchg
push
andl
repnz
jo
inc
std
sbb
jl
mov
cmp
xor
shlb
cld
loope
mov
mov
mov
cltd
jle
cmp
pop
ss
adcl
and
scas
rorl
push
lahf
jp
mov
cmp
add
aad
add
shlb
dec
ja
inc
push
pop
jl
out
dec
dec
push
shlb
ja
inc
inc
jl
xor
movsb
data16
ds
xchg
mov
fildll
ret
test
xchg
mov
lods
and
cmp
push
xor
jl
orb
enter
in
imul
rorb
movsb
sbb
adcl
insb
subl
mov
cmc
dec
pop
pop
push
jmp
dec
fstps
jl
jo
jns
jecxz
and
dec
xor
pop
loop
sbb
arpl
es
and
mov
out
mov
mov
out
aad
xor
sarl
pop
add
dec
in
pop
incl
mov
pop
subb
addr16
call
xchg
popf
fwait
lock
cld
xchg
lret
fiaddl
gs
push
jl
bound
inc
push
cmp
aas
mov
test
pop
sub
or
pop
xchg
fwait
pop
fsubrl
xchg
daa
js
cmp
ljmp
push
push
jo
add
js
nop
inc
push
js
scas
mov
fs
jnp
xlat
clc
sbb
xchg
repnz
pop
mov
inc
scas
push
cmp
repnz
shrb
addl
mov
and
mov
mov
push
test
pop
jns
fstpt
les
sub
push
in
mov
test
ds
divl
xlat
testb
inc
shlb
pusha
sbb
sub
add
repnz
mov
adcb
inc
dec
data16
or
arpl
scas
push
ss
cmp
xor
sbb
adc
and
mov
out
sbb
sahf
mov
mov
divb
or
sub
jp
mov
pop
out
mov
adc
xchg
mov
xor
jl
push
cmp
roll
mov
xchg
cld
adc
jbe
scas
push
cltd
mov
jo
imul
mov
shll
and
nop
movsl
mov
jp
sbb
test
xchg
pop
lds
xchg
popf
mov
fdivrl
inc
dec
xor
cmc
mov
cwtl
cli
out
fiadds
add
hlt
rcrb
inc
push
cli
mov
sub
aas
push
hlt
bound
xchg
or
andl
inc
jmp
push
xlat
adc
cmc
inc
movsl
inc
inc
adc
cmpsl
scas
or
dec
cld
roll
jno
pop
jo
sbb
mov
fadd
push
jns
negl
stos
in
or
in
pop
aaa
cmp
aas
add
cmpsb
jae
or
push
mov
loopne
mov
fidivrl
or
push
sbb
outsb
mov
sahf
lds
sub
cld
pop
xlat
je
imull
mov
dec
or
lret
jmp
sbb
add
jne
mov
stos
xlat
sbb
popa
dec
lcall
stos
ss
or
test
inc
push
mov
push
add
mov
sub
andb
dec
call
es
sbb
mov
sub
test
push
mov
in
mov
pop
and
stc
insb
pop
lret
pmulhw
jmp
icebp
or
mov
lahf
pop
inc
mov
jle
xchg
mov
mov
adc
pop
or
inc
cmp
jnp
popf
out
xor
sahf
rorb
add
mov
xchg
das
lea
add
jle
and
fistpl
cs
or
dec
sub
xchg
cmovae
jecxz
xchg
cmp
xor
add
sbb
es
xor
hlt
mov
sahf
out
test
lds
dec
adc
mov
cs
xlat
cmp
mov
cmp
lock
popf
xchg
mov
mov
dec
fnstenv
push
mov
pop
inc
push
jno
das
sbb
in
js
xchg
ret
or
inc
lea
sub
mov
jbe
loopne
mov
jl
push
lret
movsl
andl
lcall
or
add
or
repz
sub
hlt
hlt
into
jno
lret
xor
clc
mov
mov
mov
aas
push
fldenv
cmp
lods
rcrl
mov
pusha
jl
or
push
cmp
xchg
mov
popa
mov
rcl
inc
sbb
in
pusha
lret
mov
rorl
xor
push
pop
hlt
dec
dec
dec
insb
hlt
daa
add
outsb
pop
pop
sub
mov
fdivr
mov
gs
or
int3
mov
sbb
dec
jb
dec
sbb
movsl
loope
test
gs
out
nop
or
repnz
dec
and
cmpsl
mov
inc
mov
sub
mov
cmc
or
mov
in
mov
fidivs
push
push
incb
cmpsl
subb
stos
lods
add
fistl
xorl
pop
jecxz
into
add
sbb
push
inc
lahf
fwait
or
movsb
ljmp
outsb
or
and
push
mov
xchg
lods
push
testl
push
repnz
mov
in
outsb
movsb
int3
rclb
pop
call
jnp
jne
js
fidivs
pop
pop
enter
fmulp
call
inc
or
xlat
lock
es
sti
dec
lea
add
mov
push
mov
cmpsb
test
stos
push
imul
cli
inc
sti
fcomp
cli
cmp
clc
dec
pop
or
pop
lock
cmp
push
fstps
bt
or
xchg
mov
insb
mov
push
push
jo
cmp
fcomi
or
sbb
sbb
cmpl
mov
inc
and
stos
push
mov
call
gs
mov
enter
pop
gs
stc
repz
push
addr16
xorb
mov
out
pop
or
lock
mov
xchg
sub
xor
xlat
mov
lret
sbb
hlt
lcall
aad
inc
int
icebp
cli
orb
ret
add
cmp
mov
icebp
push
insl
cmp
xchg
xchg
add
ret
test
inc
mov
sbb
pop
out
push
ret
and
js
jno
sbbb
lock
dec
xlat
cmc
sahf
dec
adc
pop
lods
fisubrs
ficoms
fildll
xor
mov
clc
ja
pop
mov
push
sti
fisubrl
push
bnd
inc
div
add
sub
aad
test
je
and
hlt
and
ja
dec
shll
jnp
int
cmp
sub
xlat
sbb
aas
rolb
sbb
inc
dec
aam
jg
ror
inc
jnp
mov
pusha
insb
add
sub
push
sub
out
dec
xlat
mov
aas
mov
clc
sahf
dec
mov
nop
dec
mov
fcomps
push
aas
jbe
push
icebp
dec
stos
or
mov
dec
pop
mov
mov
mov
mov
pop
xchg
push
xchg
push
dec
mov
ljmp
mov
cwtl
sbb
clc
test
das
cld
std
in
stos
add
mov
inc
insl
xor
insl
imul
inc
nop
in
or
loop
jbe
push
adc
jmp
push
pop
loopne
xor
imul
add
aaa
mov
movsb
pop
das
rcrb
mov
call
divb
push
pop
dec
test
das
fstpl
test
sub
sahf
sahf
rcl
adc
nop
dec
hlt
dec
pop
mov
sbb
add
aaa
fnstcw
ds
mov
fnstenv
pop
mov
cmpsl
or
xlat
jecxz
add
fsubrs
into
push
pop
xchg
add
dec
test
aas
repz
xorb
jge
push
mul
fwait
mov
int
inc
outsl
nop
xor
pop
or
xchg
int
or
std
xor
push
cmp
aaa
icebp
mov
mov
or
mov
push
cmp
idivb
leave
dec
sbb
loope
sbb
ljmp
in
mov
sbb
mov
popf
les
add
cmp
ret
adc
adc
mov
jg
sbb
out
sbb
arpl
mov
jp
fdivrp
mov
inc
jp
mov
push
icebp
cmpsb
pop
iret
push
xchg
test
or
vorpd
mov
test
ficomps
stos
popf
call
push
hlt
pop
xorl
das
jmp
jb
test
dec
sbb
adc
test
mov
pop
mov
rolb
jle
sbb
xor
repz
push
or
pop
xchg
imul
mov
sub
jne
aad
xor
sbb
repnz
stos
mov
scas
sbbl
lret
out
or
sub
xchg
into
jne
inc
lea
leave
push
movsl
fs
adc
in
xchg
adc
adc
inc
sbb
pop
adc
pop
mov
push
fiadds
pop
in
xchg
mov
jns
and
loopne
xchg
sub
or
add
ljmp
xchg
fwait
mov
js
mov
mov
movsl
sub
stos
pop
call
or
aad
adc
shrd
mov
and
push
pop
mul
jmp
aam
add
icebp
ljmp
push
xor
loopne
test
aad
int
loop,pt
add
jp
ds
hlt
sbb
ja
and
xor
jp
dec
nop
scas
mov
dec
cmp
aas
call
xchg
mov
idivb
mov
adc
xchg
adc
shl
cmp
cs
fnsave
test
popf
mov
lret
push
mov
lret
in
jns
cmp
fnstenv
jmp
inc
jae
inc
adc
es
ss
stos
mov
push
aam
mov
shlb
imulb
cli
repz
fdivl
add
popa
loope
bound
push
jne
insb
leave
clc
mov
pop
mov
leave
ret
cld
or
add
shrb
push
pop
pop
in
pop
fsubr
ds
cld
mov
mov
in
lock
jno
test
push
dec
add
test
cmp
or
fidivrs
jle
lods
cli
and
jno
repnz
mov
add
or
mov
hlt
or
test
inc
cmp
xchg
lods
cmp
mov
inc
scas
scas
jecxz
jmp
and
sbb
ret
cmp
fwait
dec
or
cmp
or
sbb
lret
shll
cmp
inc
cwtl
xchg
xor
stos
inc
sub
jnp
imul
inc
idivb
dec
andb
ja
inc
cld
pop
ret
std
test
pop
fdivs
scas
fadds
jl
pop
mov
ss
or
mov
fwait
push
cmp
pop
mov
bound
or
roll
loope
mov
dec
inc
sbb
addr16
push
jmp
clc
sarl
pop
and
shrl
outsl
cmpb
xchg
aaa
add
out
lods
out
and
fwait
pop
pop
insb
dec
xchg
cltd
add
cmp
sahf
dec
clc
loop
fdivl
xor
sbb
aad
sbb
mov
dec
test
adcl
mov
or
xchg
mov
pop
clc
clc
and
dec
push
push
xor
xchg
or
inc
jnp
mov
out
adc
xchg
dec
jp
cs
bound
pop
hlt
mov
mov
inc
or
clc
hlt
fsubp
pop
and
jg
xchg
mov
adcb
jmp
inc
loopne
xlat
push
lock
insl
xchg
scas
mov
mov
stos
push
es
push
jp
mov
fcoml
add
jg
sub
movsl
inc
xor
cmp
out
mov
push
leave
cmpsb
cmc
lds
add
or
jg
push
cmp
push
sahf
bound
jno
pop
xchg
xchg
sbb
outsb
outsb
pop
loope
test
sbb
mov
lock
xchg
xor
mov
imul
outsb
inc
fisubrl
bt
push
rcrb
or
outsb
mov
xchg
sub
subl
mov
cs
mov
mov
push
repz
pop
lret
ljmp
sub
pop
xchg
ljmp
lret
popa
repnz
cvtps2pi
dec
lock
sub
dec
mov
mov
in
pop
int
mov
pop
mov
rclb
hlt
cltd
sub
fstps
mov
popa
inc
in
sar
or
add
arpl
shrd
not
test
pop
push
sbb
xor
or
mov
or
inc
cmp
add
aaa
xchg
lods
jp
dec
outsb
or
pusha
rorl
add
nop
jmp
sbb
pusha
mov
loope
out
roll
push
cmp
mov
rorl
inc
ds
repz
pop
fiaddl
lret
insl
inc
fdivl
inc
xchg
cmc
sti
mov
jb
and
movsb
pop
and
or
or
lock
mov
dec
mov
test
push
mov
or
daa
mov
xchg
cmp
pop
push
orb
inc
jnp
sub
lahf
cmp
cmp
or
sub
aas
sub
ret
loopne,pt
rolb
sbb
xchg
push
orl
cmp
mov
add
cs
push
test
xor
jge
or
lds
fld
cs
movsb
inc
mov
push
mov
scas
hlt
xor
scas
and
pop
jg
mov
cli
pop
mov
jns
push
sbb
mov
fisttps
push
aam
inc
or
sbb
sub
pop
in
add
or
fs
pop
sbb
repnz
scas
inc
and
cs
jb
push
outsb
scas
insl
repz
loope
mov
cwtl
in
or
ds
insb
lret
js
mov
and
mov
xchg
cmp
dec
sub
jecxz
dec
jne
xchg
ja
lret
arpl
test
cmp
mov
xor
sbb
add
out
push
pop
ljmp
add
dec
adc
mov
mov
mov
cld
mov
inc
push
xor
cmp
bound
inc
cli
imul
hlt
add
jl
xor
push
sub
mov
sub
aad
in
mov
scas
add
sti
add
mov
imul
push
jge
adc
movsb
int3
fwait
test
mov
xor
inc
or
xchg
clc
xchg
fwait
mov
cwtl
lds
xor
rorb
mov
inc
fldenv
pushf
jnp
aaa
push
lcall
andb
not
fwait
adc
orb
or
mov
adc
cmp
mov
cmp
cmp
inc
stos
orl
pop
inc
es
jmp
sub
or
xor
pop
or
ss
cwtl
dec
aas
adc
icebp
hlt
and
out
xchg
fsubl
movsb
mov
aaa
loopne
out
out
ja
and
mov
repz
test
mov
xor
mov
hlt
jo
das
cmp
jo
mov
movsl
or
arpl
imul
mov
jmp
lret
push
mov
cmp
fcompl
fmull
jbe
sub
leave
adc
jmp
mov
mov
mov
sbb
jp
mov
sbb
pop
js
imul
stc
jp
scas
add
int3
imul
sti
test
pop
sbb
push
lcall
dec
push
mov
push
in
enter
icebp
or
test
add
push
push
outsb
push
loopne
dec
stos
xor
jae
mov
cmp
or
cmp
jle
mov
jg
cltd
fucomp
subl
adc
aas
jo
lcall
aam
cmp
jle
loope
add
orb
pop
pop
push
xchg
or
sbb
or
jo
lea
movsl
test
xchg
dec
and
out
pop
jmp
icebp
jl
push
repnz
add
sti
mov
mov
jg
mov
stos
sub
mov
fmuls
outsl
inc
lods
cmp
xchg
negb
mov
test
je
out
add
aas
jp
cmp
out
mov
cld
xchg
cmp
in
and
xorb
stos
sub
rcrl
pop
cmp
clc
imul
push
test
mov
insl
push
lret
outsb
cmpl
fadds
xor
call
sbb
mov
dec
pushf
jnp
test
cmp
aas
das
sahf
fidivl
jp
inc
iret
cmp
add
push
jbe
rcrl
cld
sub
add
vmwrite
mov
inc
push
xchg
shl
stc
pop
scas
jae
mov
test
cmp
xor
add
or
ret
decl
sbb
push
les
jp
push
sbbl
test
dec
movsb
jecxz
icebp
stos
loopne
push
cmpsb
int3
das
mov
aad
hlt
ds
sub
inc
add
pop
pop
cmp
adc
out
ficomps
iret
das
sub
add
cmp
enter
ss
adc
push
xor
pop
lahf
ffreep
loop
and
fdiv
out
rcrl
pop
or
add
mov
movsl
fwait
jno
cli
pop
sub
dec
repz
sub
push
cs
xor
lret
stos
add
adcl
mov
dec
mov
andl
lea
cmp
adc
out
xorb
cmp
xor
ror
daa
or
xchg
xchg
in
xor
fnstenv
and
pop
xchg
dec
mov
add
ds
sbbl
imul
scas
movb
sbb
sahf
jno
std
mov
aas
mov
rclb
sub
lea
js
mov
in
lods
je
mov
movq
jp
or
sub
sub
out
mov
test
cmp
mov
lock
pop
clc
or
ds
call
cs
mov
aaa
sub
aam
xchg
loop
adc
mov
fstpl
mov
adc
jbe
icebp
repnz
ds
push
scas
shrb
fdivl
mov
in
xchg
icebp
push
fimuls
inc
incb
sahf
mov
je
push
push
loopne
pop
scas
xor
inc
dec
dec
sub
ja
sahf
mov
dec
adc
dec
notl
mov
gs
ja
adc
loopne
push
add
mov
mov
push
in
lcall
ljmp
or
sub
mov
aas
push
mov
loop
xchg
and
sbb
shrl
xor
btc
test
mov
jo
or
mov
pop
jecxz
stos
xchg
sahf
out
xchg
dec
shr
mov
push
push
vpshufd
dec
stc
jmp
loopne
aaa
mov
cmc
cwtl
out
push
pop
jne
insb
aad
sub
or
mov
sbb
test
addb
lahf
xchg
fdivrl
push
inc
xorl
sub
or
imul
arpl
lahf
outsb
jmp
xor
push
add
adc
aaa
push
jno
sub
ret
add
sbb
test
add
cmp
jnp
pop
out
pusha
mov
jo
cld
repz
jle
inc
jne
pushf
add
pop
mov
test
in
xor
or
add
and
leave
scas
push
dec
and
dec
cld
subl
scas
inc
das
or
retw
or
xchg
les
cmp
push
pop
mov
subb
mov
stos
mov
jl
push
stos
addr16
jbe
jp
xchg
lods
popl
pop
jne
iret
out
jns
or
addr16
hlt
pop
data16
or
aad
mov
icebp
add
filds
lea
cmpsb
and
jle
push
dec
ds
push
ja
subb
inc
sub
js
icebp
fistl
cmp
cli
insl
pop
lret
adc
or
fdivl
test
int3
imul
subb
cmpl
data16
jbe
mov
jp
addr16
rorl
fsub
lds
jne
mov
mov
add
pop
jle
repz
jle
idiv
flds
loop
mov
cmp
jl
or
adc
pop
mov
ffree
cmp
push
sbb
pop
xchg
mov
jbe
jo
jle
outsl
enter
cmp
sbbl
push
jns
sarb
inc
pop
fldl
jno,pn
pop
das
imul
loope
pop
add
xchg
and
dec
scas
shrb
mov
mov
repnz
add
xchg
mov
and
insb
orb
and
rclb
jecxz
movsl
lock
loop
mov
push
lea
mov
and
or
pop
pop
and
cmp
mov
push
mov
cmpsl
shlb
mov
inc
movsl
push
test
push
jmp
ret
lods
movsb
xchg
adc
jecxz
fstpl
je
add
inc
rolb
fldl
inc
inc
dec
fstpl
mov
sbb
lods
mov
outsb
sub
fld
subl
push
jmp
cli
jne
sub
pop
cmpsl
adc
cld
and
xchg
add
inc
aam
fld
jae
adcl
daa
and
in
test
fisubl
mov
stos
fucomp
ret
or
data16
andl
push
mov
xchg
jecxz
mov
cwtl
iret
jecxz
inc
push
mov
mov
lcall
cmpsl
adc
inc
aas
bound
lods
ljmp
jl
cmp
sbb
les
in
or
sub
mov
push
fnsave
out
lods
push
ja
out
shlb
mov
add
test
insb
and
clc
cmp
cmp
sbb
jb
pop
dec
add
jae
inc
mov
icebp
or
mov
or
repnz
push
std
jo
cmp
rorb
sbb
popa
xchg
cmpsb
jge
xchg
mov
subb
dec
jae
loope
xchg
push
jo
sub
cmc
inc
jae
jno
add
xchg
mov
sub
sahf
dec
xor
sti
mov
cmp
mov
pop
test
shr
push
add
fnstsw
xor
pop
add
jecxz
stos
call
shrl
inc
cmpsb
sub
push
fisubrl
jb
scas
je
jae
pop
das
ret
or
rorl
test
and
sub
cmp
adc
pop
imul
loop
ss
lret
ret
in
into
dec
daa
int
lock
cmp
mov
or
cmp
dec
iret
xchg
cmp
adc
inc
mov
and
sbb
lods
dec
mov
iret
pop
add
call
add
jmp
ljmp
sbb
movsl
bnd
int3
iret
pusha
mov
insb
mov
ffreep
cmpsl
adc
pop
jae
pop
mov
dec
xor
pop
mov
out
rclb
and
nop
xchg
inc
or
in
imull
xchg
xchg
mov
push
hlt
popa
int3
imul
mov
inc
ficoml
dec
cmp
ret
and
xchg
mov
sub
xchg
jp
cs
adc
in
adc
iret
dec
popa
clc
pop
addr16
and
push
sarb
gs
stos
outsb
mov
movsb
adc
rcrl
adc
das
stc
nop
cmp
and
mov
clc
lock
test
sub
or
sarb
fldt
push
mov
or
lds
mov
cwtl
mov
mov
xlat
push
pop
fldl
inc
test
mov
cmp
mov
lret
addb
pushf
imul
popl
imul
sahf
xchg
mov
rcrl
or
mov
cli
mov
insb
mov
push
jbe
push
pop
sub
lods
cmp
repnz
and
fwait
adc
ds
lds
jmp
test
inc
lcall
data16
fcompl
xor
insb
push
sbb
sti
sbb
xor
rcrb
shrb
push
imul
sub
loopne
in
sub
mov
push
icebp
dec
ret
xor
repnz
jg
or
push
and
fsub
imul
xchg
fwait
insb
cwtl
mov
int
mov
inc
mov
mov
xlat
loopne
mov
sub
imul
mov
pop
push
adc
popa
fwait
inc
mov
in
cli
add
dec
xchg
adc
xchg
fsubs
out
std
pop
cmp
sub
push
bound
dec
lcall
out
shlb
insl
push
jl
dec
mov
xor
and
cmp
sbb
test
mov
inc
xchg
sub
faddp
lods
and
out
loop
loope
xcrypt-cfb
cmpsl
and
push
jnp
and
out
repnz
loopne
into
pop
outsb
lods
mov
mov
jno
mov
push
inc
push
dec
sar
push
mov
ss
fsubr
filds
rolb
data16
mov
iret
lods
lret
mov
and
sahf
xlat
aad
adc
movsl
mov
aad
inc
mov
outsb
icebp
movsb
dec
dec
dec
push
pop
out
mov
clc
dec
pop
mov
pusha
ja
xlat
rorl
in
mov
sbb
cmp
mov
lret
cmp
sarl
mov
mov
dec
xchg
pop
mov
pop
pop
mov
add
ds
mov
btc
mov
fildl
and
add
push
enter
arpl
arpl
movb
outsb
xchg
cmpsb
in
adc
add
icebp
inc
jg
xor
int3
test
test
push
adc
faddl
jno
cltd
xchg
push
outsl
mov
xor
in
add
mov
dec
lock
loopne
fidivrl
lahf
addb
cmc
rorl
pop
xchg
test
xor
inc
xor
aas
adc
mov
inc
lahf
sbb
cwtl
xchg
cltd
inc
pop
sub
in
hlt
jno
xor
xor
dec
push
dec
mov
mov
jae
mov
jbe
lcall
add
loopne
and
into
xchg
mov
shll
setns
inc
cli
xchg
sub
cmp
aam
sbb
xchg
push
aam
out
mov
and
ds
dec
jl
add
adc
stos
push
fbld
into
xor
or
dec
inc
dec
adcl
inc
scas
push
fidivs
lock
inc
xchg
add
xor
cmc
cld
test
out
aam
rorl
inc
sbb
out
loopne
pop
mov
mov
mov
lcall
in
imul
sbb
cld
and
adc
sbb
xor
adc
popf
cli
movb
xchg
sub
pop
nop
inc
cmp
stc
cmp
xchg
push
pop
insl
aas
mov
mov
iret
jae
xlat
xor
fstl
loop
popa
ljmp
stos
hlt
or
xor
in
cmpb
mov
xor
icebp
movsl
int
je
je
push
add
frstor
inc
clc
push
xchg
leave
inc
sti
add
daa
dec
xchg
cmp
mov
mov
insl
add
ret
ds
mov
jp
push
adc
xchg
stos
pop
mov
dec
icebp
mov
adc
xchg
sub
into
lret
jge
pop
pop
inc
shrl
outsb
cmp
test
cmpsb
inc
inc
mov
rorl
jno
into
mov
sbb
or
push
push
ret
xchg
test
sahf
fwait
test
inc
push
and
outsl
je
sbb
and
dec
orl
mov
mov
mov
ss
adc
cmc
sub
adc
hlt
pop
mov
sub
call
movsb
popf
push
mov
mov
mov
fcoms
sbb
jmp
cmp
xor
mov
xchg
negl
sbb
push
popf
test
cld
faddp
xor
add
adc
mov
sub
fs
sub
notb
leave
loopne
in
scas
adc
outsb
xchg
ds
jo
sbb
push
sub
xor
rcll
lds
jbe
sub
rorb
orl
addr16
pop
mov
dec
xlat
andb
or
stos
cmp
xchg
jo
cmp
cmpsl
cli
stos
xchg
xchg
roll
mov
test
mov
les
lods
xor
or
js
mov
aam
mov
addr16
sbb
mov
cmp
push
push
fwait
jmp
mov
mov
aas
lahf
ss
mov
mov
pop
push
fucom
pop
and
cli
xchg
mov
sub
inc
int
fwait
sub
pop
test
sub
scas
outsl
jg
out
lahf
lods
xor
scas
popa
xor
orl
pop
stc
adc
cmp
scas
mov
andl
ljmp
push
je
push
mov
mov
mov
cwtl
mov
mov
std
out
add
or
inc
mov
cltd
out
sti
cmp
je
rolb
xchg
pop
xchg
fcomps
js
test
xchg
xchg
pushf
inc
push
push
mov
lea
mov
xlat
inc
scas
outsl
jns
mov
jg
adc
in
pop
jg
mov
adc
push
xor
je
or
pop
sub
fmull
xchg
punpckldq
jg
jle
clc
pop
inc
push
inc
or
mul
inc
je
or
scas
jmp
mov
add
adc
stos
movsl
repz
cltd
aad
and
scas
add
insl
xchg
imul
test
lret
icebp
sbbb
push
cli
scas
testb
mov
sbb
add
mov
lret
aaa
ljmp
mov
cwtl
mov
xchg
les
jle
stc
or
testl
pop
sub
ja
stos
push
pusha
sti
cmp
mov
incl
or
mov
sbb
or
pop
pop
jl
push
addr16
inc
jne
jo
sub
xor
mov
andb
mov
jb
fisubs
test
jl
mov
cs
jbe
cmpsl
scas
pop
fucom
pop
mov
push
hlt
push
pop
xor
inc
out
cltd
push
add
mov
jo
out
stos
ja
jl
jbe
inc
jno
aaa
xor
test
les
andl
cs
stos
outsb
dec
cmp
mov
and
push
ss
stc
insb
test
xchg
aam
aaa
shrd
jp
mov
sbb
push
movsb
stc
jae
stos
dec
std
shlb
insl
mov
insb
ret
jo
sbb
pop
mov
pop
jg
mov
mov
icebp
in
cmp
cmp
pop
dec
data16
adcb
loop
lret
add
stos
jb
lcall
sahf
aam
adc
push
mov
inc
jg
jmp
inc
and
xchg
mov
xchg
js
sub
in
pop
mov
or
cmc
ficoms
iret
inc
mov
push
lods
inc
outsb
movsb
test
mov
or
stc
xor
inc
insl
pop
daa
arpl
scas
out
ret
adc
pop
push
hlt
lret
out
or
jmp
jg
xor
mov
cltd
and
cmp
inc
fs
cli
or
iret
adc
push
cmpsb
sahf
in
js
jecxz
das
pop
aad
cmp
adc
test
mov
cs
lret
and
test
repz
notb
adc
pusha
pushf
xor
dec
adc
xchg
imul
stos
cmp
insl
jecxz
fwait
test
into
imul
aaa
scas
jo
int
movsb
jl
mov
ret
mov
push
repz
lea
pop
cli
cld
cmp
cli
ja
lcall
repnz
cmp
sub
arpl
test
cmp
ljmp
cmp
addb
lds
cmpsb
out
adc
loope
sub
xchg
mov
aad
mov
rol
push
xchg
dec
and
pop
jmp
fistl
xor
adcb
cmpsl
divl
out
xchg
call
mov
mov
cmp
and
ja
sahf
sub
jp
mov
mov
dec
mov
lret
mov
scas
fiaddl
mov
js
pop
repz
movsl
sbb
mov
mov
fsubrs
mov
pop
or
mov
mov
inc
jo
pop
and
inc
fs
insb
sub
pop
cmc
inc
jbe
popa
inc
negb
pusha
fsubs
xchg
scas
fadds
push
cli
push
inc
mov
jbe
and
pop
adc
cmp
push
mov
mov
mov
mov
mov
addr16
rcrl
xchg
das
sbb
mov
lahf
jnp
imul
aaa
mov
shlb
or
mov
pop
sbb
or
das
push
scas
mov
and
pop
jge
mov
stc
push
mov
jl
cld
call
enter
pop
add
arpl
push
loopne
enter
rolb
sub
fmulp
add
lods
jbe
push
jno
insb
cld
nop
push
cli
fs
adc
sbb
mov
cli
test
jns
cmp
enter
test
push
mov
inc
test
es
inc
sbb
lods
lret
jle
lcall
push
push
out
es
enter
fmuls
in
scas
cmpsl
fidivrl
inc
ds
pop
lret
mov
sbb
sahf
lock
call
ljmp
lcall
mov
std
jge
call
aad
cmp
cli
jno
out
mov
js
pop
lcall
push
adc
inc
mov
hlt
adc
adc
mov
dec
lahf
xchg
out
xorl
pusha
ret
dec
xchg
dec
mov
and
ret
pusha
pop
sbb
jb
cmp
add
sub
aaa
mov
add
cwtl
in
or
orb
mov
ficompl
pop
arpl
pop
or
movsl
sbb
jecxz
sub
cmp
stc
call
adc
jb
dec
adc
inc
cmpsb
xor
jl
add
les
add
push
push
or
jg
repz
xor
cmp
adc
xchg
lcall
syscall
xchg
loop
jl
dec
lret
inc
xor
mov
push
or
mov
orl
jno
nop
mov
out
inc
pop
lock
xor
xorb
in
cmp
jl
in
sub
cmp
xor
mov
cmpsl
pop
or
mov
cmp
inc
insl
pop
mov
xchg
sarb
add
stos
jbe
int
stc
ljmp
or
sbbb
test
loop,pt
add
in
mov
lock
aam
imul
scas
outsb
in
std
test
mov
xor
push
xor
call
mov
sarb
adc
push
jo
mov
out
flds
inc
inc
push
addb
xchg
cmp
mov
jl
push
add
shl
shll
sbb
push
jmp
sbb
dec
std
cld
out
add
stc
cmp
mov
mulb
enter
aam
fwait
lock
and
mov
mov
stos
push
fs
cmpsb
les
push
scas
push
lahf
or
add
push
inc
roll
mov
clc
js,pt
call
add
cmc
test
or
xor
loop
push
push
add
inc
mov
arpl
and
sub
outsl
add
or
pop
arpl
push
dec
dec
rorl
daa
pop
imul
add
fldcw
lock
mov
popa
push
sub
pop
rorl
das
cs
jbe
roll
add
xchg
pop
movsl
pop
ljmp
mov
and
xor
push
adc
scas
mov
mov
cmp
jmp
arpl
sarl
or
jle
roll
push
enter
sbb
cmp
gs
cmc
orl
adc
dec
das
lcall
idivl
cltd
fisubs
arpl
out
cmpsl
push
inc
shrl
or
dec
or
out
push
stc
shlb
xor
lret
test
mov
loop
loope
xchg
jecxz
in
dec
mov
jne
mov
mov
stos
mov
pop
mov
xchg
stos
insb
cmp
adc
xchg
nop
cmp
push
shrb
add
je
cs
lea
iret
jnp
nop
pop
add
fdivrp
add
sub
stos
cld
inc
adc
int3
inc
or
in
mov
jl
cmp
lcall
cmc
push
pop
jnp
push
fucomip
fsubl
scas
loope
jmp
cmc
mov
and
sub
stc
sahf
sbb
xchg
fwait
dec
jmp
mov
add
or
js
adc
sbb
and
sbb
out
or
shlb
fldcw
movsl
sarb
mov
out
test
lahf
xchg
dec
movl
sub
push
aaa
mov
cmp
jne
sti
sbb
lock
inc
push
test
rcr
imul
lock
sbb
pop
pop
sbb
movsl
jo,pt
stc
add
popa
mov
scas
mov
movsl
sbb
xor
pop
cmpsl
int
xor
cmp
adc
call
mov
hlt
imul
test
cmpb
fstpl
fadds
rolb
mov
jge
imul
cmp
push
xlat
repz
cmp
test
dec
mov
test
addl
inc
pop
add
or
mov
mov
stos
iret
rclb
pop
stc
jno
and
js
xchg
pop
lds
lahf
dec
in
test
movsl
js
mov
js
cmc
imul
std
xor
repnz
sbb
cmc
mov
add
ljmp
mov
js
inc
or
aas
jbe
cmp
push
or
jg
rclb
dec
aam
lds
add
sbb
addr16
nop
imul
jp
aaa
ljmp
ss
sub
movsl
emms
jecxz
cmp
dec
adc
shll
andl
fiaddl
ljmp
mov
int3
xlat
cltd
push
mov
xchg
jae
sbb
mov
popa
cmp
lds
mov
cmp
mov
cmp
inc
dec
cmp
inc
jmp
rcrb
cmp
out
int
daa
push
pop
lods
mov
adc
and
mov
lods
pushf
out
cs
cmp
mov
and
ljmp
scas
ret
negl
fisubs
mov
cltd
hlt
push
aaa
mov
aam
lret
mov
cmpsl
cmp
adc
cmp
lea
cmp
cltd
aas
cmc
mov
fcoms
pop
mov
push
inc
jne
lea
pop
aaa
mov
loop
xchg
cmp
mov
fstpl
add
ret
jg
xchg
mov
adc
cmpsb
mov
ret
sarb
jo
out
add
push
sarl
or
push
jecxz
ds
lds
into
jge
mov
pop
pop
ds
adc
push
mov
jp
dec
dec
and
cmp
adc
sbb
aam
or
push
or
nop
pop
ret
ret
mov
push
push
xor
pop
movsb
or
outsl
rcl
popa
ss
shll
mov
les
push
sub
mov
sbb
stc
and
pusha
test
inc
xor
push
pop
imul
adcl
in
jp
lods
jle
shrl
das
xor
int
in
mov
scas
sbb
je
int
push
outsl
and
cli
cmpsb
sbb
clc
or
movsb
leave
push
sub
mov
in
or
xor
xlat
aam
jmp
dec
loopne
jns
test
lret
fiadds
push
sahf
test
or
std
xchg
in
nop
scas
dec
cmp
rcll
mov
xchg
pop
bnd
std
cmc
add
iret
out
xor
xor
and
xor
paddsb
ja
add
ljmp
dec
jo
or
cli
add
mov
iret
es
mov
push
cld
mov
jle
mov
xor
repnz
popa
call
mov
addr16
sti
dec
mov
imull
iret
not
rcrb
idiv
lods
data16
aam
lret
adc
lds
out
insl
and
sar
test
repnz
cli
mov
add
cmc
loope
sti
jno
loop
scas
lock
add
push
pushf
les
jg
pop
test
je
std
daa
mov
out
xlat
jecxz
push
lods
fbstp
in
subl
dec
pop
jl
lea
pop
fnstcw
out
xchg
push
sbb
cmpsb
and
jno
aas
lods
pop
imul
push
pop
ja
pushf
addr16
mov
dec
xchg
in
mov
sbb
dec
leave
inc
je
js
repz
xor
rcll
sbb
pop
push
cmc
imul
push
movsl
dec
sbb
push
xor
mov
jo
adc
mov
insb
clc
aam
test
dec
and
jo
ja
addr16
ficompl
outsb
mov
loopne
aad
clc
inc
fwait
es
or
punpckhdq
loopne
cmp
lock
fildll
lcall
icebp
addl
cmp
outsl
fdivrs
pusha
sbb
cmpsl
bound
push
movsl
shll
aam
sbb
push
xlat
enter
pop
push
sbb
and
pop
clc
mov
cmpsl
push
adc
push
xchg
testl
inc
pop
add
dec
push
test
je
test
xor
mul
xor
sub
mov
add
stos
mov
fsts
adc
jg
push
mov
dec
popa
push
jbe
mov
dec
pop
dec
aaa
adc
or
das
shlb
out
fnsave
push
dec
sub
stos
ret
clc
push
inc
fildl
dec
mov
add
rorb
sbb
xor
fmuls
shl
sahf
pmulhw
pop
cs
inc
dec
pop
pop
mov
xor
idivl
or
jecxz
push
mov
or
xor
aas
ljmp
mov
outsl
cmp
test
cmp
mov
adc
and
jne
stos
je
cwtl
ds
xor
jge
andl
inc
mov
inc
mov
rclb
fwait
sti
test
xor
mov
cmc
clc
xor
outsb
pop
mov
push
call
mov
dec
fwait
pop
push
jb
mov
add
dec
shl
pop
push
test
rorl
or
cmpl
mov
out
ret
adcb
insb
add
fisttpl
rcrb
or
or
movhps
xor
into
out
divb
dec
lods
push
cmp
mov
es
jb
fildl
into
mov
adc
mov
add
and
lods
cld
gs
lods
jecxz,pn
or
inc
adc
fisttpll
mov
push
xor
fwait
push
or
jo
fcmovnb
jecxz
repnz
cmp
test
xchg
pop
jge
mov
push
shll
mov
fmuls
lds
repz
or
in
popf
push
sbb
stc
jmp
cli
cli
je
cmp
adc
ret
xor
lea
je
cld
push
aad
pusha
out
mov
das
add
call
xchg
push
xor
cs
int
shl
pop
or
sub
adc
ucomiss
scas
jae
sbbb
xor
jns
cmp
push
fcmovnbe
test
movsb
adc
ret
cmp
mov
aad
fldenv
aam
or
jbe
pop
sbb
scas
xchg
dec
dec
scas
popa
mov
loop
mov
hlt
out
mov
dec
enter
add
dec
push
fwait
push
sub
xchg
insb
cmp
loop
hlt
es
subl
xor
cwtl
mov
mov
je
sbb
int3
ljmp
mov
clc
xlat
je
stos
sbb
push
pop
mov
add
add
or
push
data16
and
ss
and
dec
cli
pop
push
out
out
fistl
inc
movsb
and
cmp
sbb
stos
cmp
fistps
clc
jmp
mov
fsubs
push
xchg
loopne
les
inc
push
jno
test
dec
or
jb
and
call
pop
fisubrs
test
scas
and
and
push
dec
sbb
nop
cmp
sbb
in
mov
push
xchg
push
addr16
inc
out
enter
push
jmp
and
jp
pop
fmuls
test
mov
aam
test
inc
adcb
sbb
scas
loopne
fsubrs
pusha
push
mov
mov
lret
mov
shll
cmpsl
or
icebp
and
mov
pop
sub
push
int3
mul
adcl
dec
in
ret
out
push
das
mov
mov
in
in
inc
adc
mov
orb
js
cmp
cli
xchg
push
popa
dec
jl
gs
jge
xchg
cmp
ret
mov
in
out
mov
cmpsl
add
out
outsl
test
lcall
cmp
js
mov
subl
or
rcr
mov
mov
jnp
dec
jno
inc
xchg
inc
divl
lock
andl
sub
out
icebp
es
dec
fnstsw
cmpsb
sub
inc
aaa
push
mov
add
out
mov
out
popf
cmp
int
push
jl
jecxz
dec
pushf
test
xchg
jnp
cwtl
div
adc
mov
hlt
fistpll
or
push
popa
or
push
test
scas
pop
push
push
jmp
into
sbb
lds
fimull
and
mov
push
shlb
mov
imul
outsb
pop
mov
roll
mov
xorb
je
or
xorb
icebp
mov
fst
and
jge
cmc
in
inc
jnp
sbb
lret
loopne
sbbl
push
hlt
rcrl
aad
pcmpeqb
fcmove
pop
lahf
scas
sbb
je
add
fucomi
and
pop
cld
loopne
addb
push
xchg
nopl
mov
inc
push
fdivrl
push
xchg
fsubr
clc
inc
and
xor
dec
mov
out
leave
cli
in
popl
daa
ljmp
jbe
mov
in
add
xchg
cmc
imul
lods
jge
mov
aaa
cmp
cmp
cmp
mov
bnd
mov
std
js
dec
mov
and
js
xchg
sbb
cmp
stos
pop
pushf
shl
inc
add
push
sub
inc
lret
out
sub
jmp
lahf
outsl
call
cmp
cs
adc
or
stos
push
or
pop
mov
mov
push
dec
add
inc
in
xchg
push
sub
cmp
js
mov
and
add
jb
enter
lea
bound
pushf
int
lret
dec
int3
into
scas
mov
mov
jecxz
inc
cmpsl
sti
sub
inc
jle
jns
mov
or
push
pop
out
aas
std
frndint
je
cmp
insl
pop
inc
jb
mov
push
std
cmp
out
inc
xor
xor
pop
pop
lret
fs
mov
insb
or
pop
jl
pop
shr
xchg
inc
xor
in
mov
arpl
orb
das
out
sbb
pop
std
and
push
sbb
mov
nop
add
cld
fcomps
cld
push
lods
adc
push
inc
sub
jge
mov
sbb
push
dec
rcl
xchg
pop
daa
enter
xchg
lahf
insb
push
pop
loop
xor
cmpsb
movsl
cld
dec
add
jecxz
stos
pop
data16
xor
push
cmp
dec
loop
inc
ss
andb
sbb
xor
ds
push
test
and
inc
pop
mov
cmpsl
mov
xchg
mov
lods
sub
clc
sbb
out
outsb
xor
adcb
inc
and
xchg
push
jns
push
popa
gs
pop
jp
dec
test
fcmove
push
push
push
in
adc
loope
mov
mov
lods
test
je
mov
adc
mov
fimull
mov
mov
mov
mov
repnz
loopne
push
xor
ret
test
jb
mov
mov
cmp
pushf
jg
add
sub
mov
and
and
pusha
pop
fbstp
push
push
pop
lods
lods
sbb
cli
mov
or
adc
test
push
ss
mov
repnz
fs
push
xchg
mov
mov
push
dec
mov
jge
ss
bound
xor
cmpb
psubsb
outsb
cmp
dec
jmp
and
add
add
mov
inc
xchg
cmpsl
lock
fcompl
inc
std
jl
outsb
push
sbb
jbe
hlt
mov
movsb
arpl
leave
cmp
adc
cmpsl
adc
pushf
xchg
outsb
pop
pop
dec
xchg
out
rcr
je
xchg
int
jno
lods
push
or
cmp
into
pop
pop
cld
add
or
lds
or
lea
rcrb
xchg
cld
bound
repnz
xor
ret
push
pop
pop
and
xchg
xchg
aam
imull
lock
aaa
loope
cmp
xor
mov
subb
pop
push
or
adc
jo
sti
or
cmp
cmp
mov
movsb
rolb
pop
mov
into
hlt
loopne
mov
push
xor
fwait
addl
pop
dec
int3
int3
mov
jp
sti
roll
call
or
mov
lea
push
xor
jle
movb
ret
mov
push
scas
pop
push
lret
mov
loope
pop
out
push
fisubl
mov
xor
adc
cli
push
add
cmp
xor
add
sbb
test
pushf
testl
mov
call
inc
xchg
lock
mov
imul
adcb
test
mov
xchg
mov
ret
adc
into
ret
aad
mov
add
sbb
lods
sub
repnz
adc
jp
lock
sbbb
cli
fsubs
mov
pusha
inc
push
stos
pop
jns
ds
xor
inc
xchg
sbb
sub
xchg
jp
adc
xchg
xor
imul
jg
jl
push
adc
push
call
pop
jns
mov
inc
sub
int3
add
or
insb
inc
stos
scas
or
pusha
mov
xchg
insb
imul
arpl
std
icebp
outsb
mov
out
out
mov
mov
into
push
loopne
mov
pop
push
and
jnp
data16
incb
aam
push
push
push
cmpsb
cmc
stos
jecxz
push
mov
and
loop
outsl
jae
out
xor
push
push
mov
mov
insl
sbb
add
xchg
stos
cmpsb
imul
sbb
mov
scas
xchg
leave
xchg
or
add
clc
clc
adc
mov
test
cwtl
shrb
rcr
js
in
jmp
mov
or
cld
mov
aad
xlat
adc
stos
cmp
jno
or
mov
and
cmp
mov
mov
sbb
xor
sahf
ja
and
fsubr
lock
add
adc
ja
mov
cmpsb
push
lock
rcrl
aas
out
adc
fidivs
sbb
sbb
or
pop
jle
jnp
outsb
hlt
stc
jne
decl
push
adc
into
xchg
mov
in
cmpsl
inc
sub
pop
push
jb
call
ret
movsb
leave
dec
push
push
mov
dec
aad
pop
test
fnstcw
aam
sub
push
js,pt
or
mov
mov
pushf
mov
filds
xchg
xchg
mov
int
mov
or
outsb
add
call
sbb
or
orb
pop
cltd
dec
mov
and
and
pop
jbe
push
jecxz
aaa
push
mov
lcall
or
hlt
xor
test
push
xor
dec
or
or
das
hlt
inc
pop
daa
cmp
mov
cmpsb
jge
out
mov
insl
sub
ds
sub
cmp
mov
xchg
lret
cs
or
mov
popa
mov
sub
inc
ret
out
xchg
nop
mov
rcrb
imul
jge
adc
mov
pop
sbb
les
stc
lock
outsb
movsl
pop
adcl
sbb
mov
aaa
mov
aam
adc
add
push
std
and
test
aam
and
enter
mov
inc
sub
pop
outsb
or
adc
mov
mov
mov
xchg
pushf
jno
nop
cmp
test
stos
std
cli
leave
andb
lret
inc
addl
rcll
aam
inc
stos
push
jg
orl
add
ja
sub
add
mov
inc
int
lods
sbb
mov
addb
xchg
aas
stos
and
sbb
cmp
pop
lea
adc
repnz
cld
imul
mov
xchg
data16
jns
and
rol
push
cmpsb
jo
shll
xchg
jecxz
pop
bound
or
mov
stos
pop
ficomps
nop
repz
cld
xchg
jmp
jo
out
mov
sbb
xchg
add
lds
dec
push
sbb
push
adc
fistpl
loopne
mov
push
dec
jg
sub
push
retw
addr16
or
in
pop
enter
lods
xlat
cs
adc
dec
fimull
cmp
add
jp
scas
push
std
jge
add
mov
in
js
jne
adc
sub
xchg
repz
pop
std
add
sbb
mulb
cs
mov
and
push
adc
pop
xor
in
into
bound
int
cld
out
ret
jno
mov
dec
ret
fwait
sub
sub
dec
xor
cli
cmp
sbb
ficomps
scas
jnp
sbb
imul
out
fcoml
push
mov
mov
cmp
ja
pop
add
out
sbb
pop
pop
cmp
mov
lahf
pop
push
in
cli
xchg
subb
je
ret
movsb
lock
cmp
test
ds
xor
xchg
mov
xor
lods
nop
ja,pn
cmp
fnsave
dec
mov
rcll
cld
or
pop
insb
cmp
out
mov
sbb
mov
fisttpl
fsubrl
negl
in
in
pusha
dec
imul
mov
push
adc
mov
add
cs
dec
dec
lahf
test
clc
loopne
iret
xchg
arpl
sbb
mov
sbb
jge
mov
mov
int
and
cmpl
mov
add
pop
mov
pusha
mov
inc
roll
mov
sbb
push
movsb
mov
cmp
test
sbb
add
orl
lret
xchg
dec
xor
shlb
mov
jb
notb
mov
add
mov
orl
ds
push
push
popf
pop
adc
std
out
and
mov
xchg
shlb
pop
lea
xchg
daa
add
or
push
dec
mov
sahf
out
xor
stos
inc
cmp
inc
add
imul
in
loope
sti
adc
jnp
xchg
cmp
cmp
das
lock
aas
mov
test
outsl
pop
and
xor
push
or
test
add
repz
cmpsb
lret
loopne
jbe
xor
in
adc
fwait
loope
cli
pusha
ret
daa
ja
xor
fstpl
pop
or
jae
mov
pop
xchg
scas
or
fsubs
cwtl
out
mov
sbb
pop
inc
in
ljmp
repnz
xchg
out
adc
cmp
mov
int
mov
out
xchg
cmp
cmp
xchg
fimuls
inc
mov
mov
push
pop
inc
pop
mov
push
ss
loopne
xchg
clc
addr16
inc
int3
mov
mov
push
movsb
jb
cmc
ret
je
pop
jno,pt
loopne
push
push
pop
loope
call
loop
shrl
pop
or
call
sti
jecxz
xor
adc
lahf
inc
and
lods
xor
mov
adc
jae
xor
lret
shlb
lock
jg
pop
sbbl
mov
sar
test
movsb
bound
sub
incb
sarb
jp
mov
mov
and
hlt
cmp
jl
xor
jp
lret
jnp
in
add
xchg
sbb
adc
and
mov
cmp
or
mov
adc
or
ret
ret
or
fwait
mov
xchg
imul
mov
insb
mov
pminsw
sti
pop
inc
repnz
cld
jle
call
clc
push
dec
int
enter
cmc
cmpsl
ja
mov
pusha
inc
or
add
pop
sbb
dec
push
lock
addb
loop
mov
les
subb
test
adc
mov
sbb
inc
fstl
jp
call
add
pop
loopne
inc
add
inc
and
cmp
inc
add
dec
mov
jno
dec
add
popa
scas
cmp
shl
mov
or
pusha
jnp
std
pop
not
sub
cmp
hlt
adc
movsb
ljmp
sub
std
add
push
add
dec
mov
mov
decl
dec
inc
cmp
xlat
fcmovnb
leave
outsb
lods
adc
negl
jmp
sti
mov
loopne
rcrb
andb
les
fsin
aam
stos
dec
mov
imul
fcomps
push
ss
xor
sub
xlat
adc
xor
dec
into
xchg
sbb
jnp
mov
orb
std
clc
xchg
push
gs
lock
inc
aaa
push
dec
cmc
out
sub
push
cld
in
out
cmovnp
inc
or
add
ret
add
push
hlt
in
mov
stos
dec
mov
mov
ret
pop
or
xchg
or
inc
xchg
mov
mov
sub
push
in
ffreep
cmp
popa
pop
mov
xchg
xor
test
and
shr
in
sub
out
jo
idivl
push
jae
push
adcb
mov
aaa
pop
icebp
jecxz
cmpsl
ja
xchg
sbb
add
or
insl
data16
test
cld
jmp
stos
sahf
rol
rol
mov
les
add
mov
and
cmpsl
vmread
maxps
ljmp
ret
rcll
push
xchg
pusha
das
sarb
mov
pop
rorb
xchg
and
js
cli
loop
lcall
sbb
call
xchg
stc
or
dec
push
inc
insl
mov
and
andb
or
mov
cwtl
mov
bound
cmpl
lock
add
test
push
cmc
jge
mov
push
mov
testb
scas
cmc
cmpsl
nop
jge
lret
enter
and
loopne
jnp
xor
or
or
add
inc
lock
stos
xlat
inc
imul
or
and
lret
pop
aaa
es
cmc
mov
outsl
push
pop
sbbl
cmp
add
adc
push
cli
push
js
or
js
xor
fadd
pop
mov
mov
or
add
arpl
aaa
loop
sub
cmp
jp
jl
or
movsb
mov
lods
cwtl
sbb
pop
or
in
xchg
aam
repz
mov
shl
inc
div
xor
ret
push
jp
pop
pop
cld
pop
adc
cld
out
cmpsl
in
push
jecxz
mov
out
test
jne
incl
repnz
mov
cli
lods
adc
mov
stos
mov
pop
stos
into
sbb
fwait
stos
pop
call
sub
repnz
sub
add
shl
sub
jmp
mov
sub
and
cmp
sarb
mov
push
hlt
aad
xchg
rolb
push
in
dec
call
aaa
ficoms
push
add
stc
ljmp
scas
out
add
loop
aad
sbb
es
call
dec
add
jae
push
jnp
ret
and
orl
sbb
sbb
popa
or
cmp
popf
rolb
jp
and
cli
mov
lahf
loopne
push
aad
cwtl
aaa
add
and
xchg
nop
hlt
fisttps
iret
push
xchg
mov
mov
sub
mov
mov
xchg
imull
inc
xchg
outsl
pop
xchg
enter
sub
lock
adc
test
inc
push
stos
cmp
sub
out
dec
popf
icebp
inc
arpl
bound
jecxz
ljmp
mov
pushf
stos
clc
push
push
fistps
mov
adcl
rorb
xor
js
dec
cmp
lods
daa
fdivrl
incb
scas
dec
ffreep
or
and
add
stos
push
movsb
inc
je
movsb
mov
js
rolb
cmp
mov
xor
mov
pop
stc
jl
fnstenv
jge
inc
scas
sbb
mov
jbe
lods
lcall
jno
ffreep
adcb
mov
mov
push
cli
das
shll
and
mov
lret
mov
inc
mov
test
adc
pop
stc
mov
jae
pop
jl
scas
movl
fwait
mov
and
jge
jns
mov
lret
jge
cld
dec
cmp
fcmovb
lds
loopne
sahf
inc
dec
mov
addr16
xchg
pop
pop
mov
pop
call
into
jns
cwtl
mov
je
jno
ja
mov
mov
mov
dec
pop
dec
inc
pop
push
adc
mov
les
sti
sahf
push
fst
jne
push
or
or
pusha
mov
subl
faddp
xchg
scas
cmpsl
pop
mov
xor
mov
dec
jecxz
fmull
and
add
push
xor
sbb
insb
or
and
pop
movsb
out
cmpsl
movsb
test
stos
inc
loopne
roll
fs
adc
mov
ss
cmpsl
mov
mov
in
pop
pop
rcrb
sbb
in
push
aam
mov
mov
bound
movsb
xchg
push
xor
cmp
mov
nop
xor
ret
fdivs
mov
jl
ret
in
cs
push
jp
aad
push
addr16
stos
pop
rcrb
mov
fildl
xchg
orl
loop
dec
mov
popa
in
sbb
push
add
rcr
xchg
scas
dec
scas
pushf
push
push
clc
dec
mov
inc
insl
jge
and
jne
insl
jl
bound
nop
xchg
test
pop
dec
rorl
push
cmp
lea
pop
pop
ss
cmp
sbb
ss
mov
test
es
repz
mov
jmp
add
pop
jle
dec
push
loop
scas
call
shll
jae
mov
push
jo
push
adc
pusha
fsubrl
in
ret
jecxz
cmp
pop
daa
xor
leave
add
pop
out
mov
das
fs
lahf
or
xchg
stos
sbb
cmp
sarb
ror
insl
xor
loopne
inc
int
add
adc
push
push
shrb
scas
pusha
aas
lcall
shrl
or
jo
dec
jo
mov
loop
or
and
imul
xchg
cmc
jle
lods
insb
fidivrl
mov
les
add
dec
popf
push
sbb
rcl
pop
xor
loope
lods
xor
sbb
pop
stos
xchg
out
lods
into
mull
add
call
rcl
andb
pop
mov
bound
push
stos
aam
adc
mov
mov
and
outsl
or
xchg
out
aam
mov
mov
mov
cmpsl
sub
cmpsl
or
mov
jo
or
xorb
cmpl
or
jmp
roll
mov
xchg
push
mulb
aad
ret
mov
ja
lret
inc
arpl
cmp
mov
orb
adc
negb
xchg
pop
orb
ljmp
adc
lock
cwtl
cmpsl
in
insb
cmp
loope
mov
rcl
pop
lds
scas
aaa
mov
bound
out
aad
scas
xorl
int
jp
cmp
push
aas
lea
lret
sahf
das
imul
imul
jnp
mov
sbb
xchg
xor
mov
jmp
inc
cs
sub
mov
mov
maskmovq
divl
in
loopne
jmp
jo
and
add
add
cli
xchg
mov
daa
mov
bnd
movsb
cmp
xor
dec
adc
inc
mov
push
test
outsb
fdiv
movsb
or
ljmp
cld
inc
ds
adc
in
shll
clc
mov
jp
push
xor
js
and
adc
rol
loopne
movsl
andl
sti
ljmp
icebp
vmovhlps
mov
rcrb
jnp
repnz
dec
int
mov
mov
inc
mov
aaa
jno
pop
insl
fisubrl
inc
sahf
iret
mov
loopne
dec
pushf
add
add
ret
push
cmpsb
out
repnz
pop
xor
fsubl
pop
clc
xchg
push
out
je
loope
iret
dec
mov
and
adc
ret
mov
js
and
movsb
fimuls
shll
out
inc
enter
repz
xor
mov
mov
mov
lds
hlt
imul
aas
push
ljmp
pusha
in
mov
loopne
sbb
stc
jns
adc
cmpsb
adc
add
insl
or
sub
lods
xor
sbb
shl
pop
ds
lahf
clc
aaa
shlb
shll
rorb
rcll
lcall
ret
ja
pop
popf
fnstsw
mov
sub
imul
sub
outsb
mov
les
mov
pop
add
mov
sahf
aas
xor
cmc
add
or
inc
jmp
pop
or
js
adc
mov
aas
mov
or
adc
movsl
push
je
xor
sub
fincstp
into
add
and
mov
ds
and
pop
pop
jns
sub
rol
xchg
addl
dec
stc
ficomps
mov
and
ljmp
fsubrs
shlb
fimuls
add
adc
add
adc
lcall
adcl
fsts
or
dec
mov
sub
sub
and
mov
sbb
rcr
loop
enter
clc
push
cltd
and
ds
arpl
add
mov
cmp
mov
rolb
pop
je
mov
test
cmpsb
mov
add
scas
adc
and
dec
jo
cmpl
popa
les
cli
loop
jmp
push
push
fwait
pop
clc
push
inc
and
adc
mov
data16
push
adc
pop
pushf
and
jbe
xor
add
lds
daa
cmp
push
fldcw
push
loop
sahf
lret
in
mov
cmp
in
aas
aad
scas
call
inc
call
stc
fwait
mov
shrb
jne
mov
lahf
jcxz
icebp
and
sub
aad
mov
push
int
xchg
lea
loop,pt
mov
mov
test
aad
sub
js
add
hlt
xchg
xchg
jle
movsl
mov
data16
add
jmp
imul
je
lds
dec
jns
adc
enter
fsubr
mov
mov
ret
xchg
movsl
add
add
repz
cmc
scas
cmc
pop
cmpsb
andb
mov
pop
jecxz
mov
clc
jo
scas
fwait
icebp
cmp
xor
push
mov
sbb
pusha
push
and
loop
or
dec
inc
out
jbe
int3
jp
dec
xor
imul
in
ret
xchg
cmp
outsl
imul
jle
sbb
and
push
lock
divb
pop
dec
xlat
inc
dec
sub
mov
mov
lods
jbe
std
xlat
sbb
test
aad
flds
and
mov
pop
cltd
loopne
stos
cmp
in
lahf
jecxz
mov
lods
call
je
rcrb
push
test
shlb
dec
pop
jo
pop
add
sbb
loopne
pop
int
xchg
sti
cs
aam
pop
outsl
or
and
testl
fimuls
js
dec
movsb
mov
sub
shlb
arpl
idivb
jp
into
imul
dec
mov
js
fnstsw
int3
push
fmuls
cmp
call
out
dec
xor
jl
in
test
loopne,pt
and
lods
sbb
mov
adc
pop
je
ret
xor
jo
ss
xor
lock
iret
loopne
adc
mov
call
push
xchg
mov
adc
loopne
pop
adc
cmp
dec
add
aaa
sub
popa
mov
bound
cmc
xor
aad
mov
fsubl
das
into
pmuludq
mov
leave
pop
loop
jle
bnd
loop
mov
sahf
test
ficoml
cmp
pop
add
or
mov
out
movb
adc
sub
ret
fadds
bound
mov
enter
popa
push
cmp
xor
push
jecxz
adc
pushf
inc
adc
cmpsb
mov
xchg
push
jecxz
and
insb
mov
add
inc
sbb
rcrb
jns
push
fbstp
mov
movsl
imul
mov
cmp
and
jl
daa
sbb
test
add
pop
xor
call
and
cmp
mov
gs
xchg
sub
out
out
loope
std
fwait
sub
rcr
sbb
inc
or
repnz
jle
or
pop
push
inc
push
add
ds
mov
rcrl
xchg
jns
ss
push
pop
and
mov
rorl
push
in
in
lret
pop
aaa
mov
das
inc
out
fs
mov
or
orb
mov
or
adc
js
inc
adc
adc
add
add
pop
outsl
inc
dec
mov
jecxz
arpl
mov
cmpsl
adc
push
pop
in
or
jp
cmp
gs
xchg
popf
aaa
pop
pop
ljmp
sbb
add
insb
cmp
sarb
adc
add
pop
sub
sbbb
xor
lahf
lret
int
inc
loope
imul
leave
sarl
mov
push
sbb
int3
xor
sub
lret
dec
xchg
aam
dec
std
and
add
adc
pop
test
lods
and
ret
jo
je
jl
lds
fnstenv
testl
push
push
mov
andl
scas
sbb
test
cmc
mov
adc
mov
sbb
add
jo
dec
adc
push
out
inc
jmp
cltd
pop
mov
inc
sub
aam
lods
cltd
push
adc
adc
mov
dec
xchg
out
arpl
pusha
pop
xor
test
cmp
shll
lret
hlt
mov
fnstenv
lock
sub
aas
push
test
mov
xchg
adc
fidivrs
pop
lret
stos
into
fdivrl
adc
inc
cmp
lea
test
cmp
push
jecxz
or
jp
sub
aam
cmpl
icebp
push
cs
fcmovnb
fdiv
pop
xor
mov
popa
out
mov
dec
or
pop
roll
cmpl
cmp
mov
loope
lahf
push
outsb
inc
lds
ud0
rol
sbb
hlt
repz
inc
int
pusha
femms
cmp
jnp
lret
add
inc
mov
scas
mov
add
pop
push
mov
add
mov
loope
xchg
jle
xor
ljmp
sbb
jbe
dec
jl
push
bound
mov
sbb
or
in
jb
fwait
xor
out
add
mov
mov
pop
lods
push
dec
pop
rclb
pop
test
les
inc
cmp
xchg
pop
cld
ficoms
cli
mov
das
inc
push
mov
and
add
pop
jmp
insb
cmp
ss
std
sbb
lret
mov
iret
mov
push
jbe
sub
lcall
adc
mov
jmp
sti
jl
mov
adc
pusha
cmp
inc
enter
sbb
xlat
outsl
inc
or
jae
dec
cmp
pop
xchg
mov
dec
sbbb
pusha
icebp
adcb
rorb
xchg
test
lock
out
hlt
cli
mov
inc
dec
ss
jb
mov
rolb
loope
loope
adc
mov
addr16
andl
xchg
inc
push
mov
jmp
mov
ljmp
dec
call
lahf
add
pushf
pop
call
shlb
jns
out
dec
ljmp
cwtl
aaa
xchg
cmp
inc
inc
add
mov
cmp
cld
add
test
cmp
cmc
mov
insl
jbe
daa
movsb
cmp
hlt
shl
outsl
fwait
incl
mov
sub
int
fucomip
aas
add
jle
shrb
fisttps
mov
push
xor
mov
jo
popa
xchg
in
scas
cmpsb
mov
sub
push
jns
mov
pop
inc
cmp
push
push
cmp
in
push
lret
mov
cwtl
push
cs
loopne
into
xchg
push
xor
jnp
cltd
sub
pop
jp
mov
dec
or
mov
or
repz
xchg
push
fstpl
jl
add
xor
inc
dec
imul
sbb
es
mov
into
dec
xchg
inc
dec
and
popa
mov
icebp
cmp
ret
cmp
pop
inc
jbe
clc
fwait
div
rep
cmpsl
mov
xchg
pop
sbb
sbb
jp
hlt
popf
hlt
inc
ffreep
stos
popa
mov
push
push
jno
test
cmp
in
test
ds
pop
pop
daa
cld
mov
mov
into
inc
jp
xchg
mov
and
pop
or
fstps
loope
mov
push
fwait
push
pop
mov
xor
out
repz
mov
xchg
cmpsl
sub
lcall
out
adc
or
sets
clc
mov
clc
stos
sti
adc
jmp
imul
cmpsl
fnclex
push
popf
push
jo
stos
notb
xor
pop
pop
push
adc
cmp
pop
in
xchg
mov
pop
pushf
add
imul
push
popa
sbb
jg
cmp
lcall
fisubl
sub
jge
dec
push
stc
jl
push
inc
add
lock
insb
nop
jns
or
jbe
mov
push
cs
in
add
lods
inc
lahf
xor
pop
sub
adc
adc
mov
sub
adcb
or
mov
push
out
jnp
lea
xor
lea
rcrl
mov
dec
adc
cmp
xchg
cmpsb
sub
pop
xchg
mov
outsl
data16
cmp
int3
in
fdivrl
mov
xlat
xchg
in
jecxz
push
sub
push
cmp
jmp
clc
fs
in
rcrb
aaa
scas
sarl
fildl
test
popa
mov
mov
and
xor
inc
pop
push
das
jge
adc
or
xorl
stos
pop
test
leave
push
roll
shl
pop
mov
push
cmp
ret
lcall
pop
inc
js
or
js
jl
mov
sti
pop
mov
fwait
sti
scas
loop
aaa
or
fadds
in
pop
orb
scas
inc
sub
push
bswap
cmpl
enter
xchg
inc
dec
sbb
and
je
test
movsl
mov
jnp
jle
inc
pushf
popf
jo
push
push
popa
aad
pop
fwait
dec
mov
out
mov
divl
ja
mov
popa
sub
push
push
outsl
faddl
mov
inc
movl
stos
push
jbe
repnz
pop
sbb
dec
repnz
inc
dec
lods
fwait
icebp
fwait
mov
sbb
popa
icebp
mov
outsb
cli
int
jbe
adc
mov
sub
loopne
cmp
ret
dec
bound
xor
push
addl
lcall
jl
adc
shr
ret
xchg
jle
jg
int
ret
add
or
or
ret
push
das
lahf
push
dec
gs
sbb
loope
jne
sarl
adc
insl
or
inc
mov
das
mov
mov
jnp
mov
outsl
stc
addb
mov
mov
cmp
pop
sub
inc
cmpsb
daa
dec
in
mov
sub
arpl
fimull
dec
ljmp
xor
addb
push
cmpl
push
push
sbb
lea
jmp
idivb
mov
dec
adc
in
orb
addb
rcl
push
ret
insb
pop
xchg
push
pop
cs
cmp
or
js
rol
sarl
or
fstpt
inc
les
or
dec
mov
arpl
std
hlt
fisubrs
and
into
jbe
in
idivl
in
and
dec
mov
ljmp
push
mov
push
and
jno
cwtl
dec
mov
jne
dec
add
test
push
loop
scas
divl
lcall
pop
fsubr
popl
add
aaa
xorb
test
pop
or
dec
xor
aam
add
fcmovb
clc
sbb
icebp
push
jb
ret
gs
push
ja
mov
cmp
dec
fstl
aam
sbbb
add
je
sbb
mov
mov
cltd
sbb
jns
hlt
ljmp
xchg
pop
divb
std
test
loop
and
rorb
cmp
mov
adc
or
or
push
popa
jo
mov
mov
in
xchg
les
pop
data16
ds
cmp
jecxz
cmp
adc
je
scas
push
jge
inc
mov
dec
add
push
ljmp
jp
sbb
sub
push
mov
pop
mov
cmp
xchg
mov
mov
add
les
ficoml
subb
jbe
cwtl
iret
mov
subl
or
jge
in
addb
push
fimull
test
xadd
mov
or
in
imul
mov
test
mov
scas
jmp
insb
inc
jmp
jo
sbb
jecxz
jnp
loopne
inc
jmp
paddw
mov
ss
repz
out
rorb
inc
lods
push
test
cmp
sub
imul
sarl
lock
jl
in
xlat
test
scas
rcrb
scas
add
std
add
xlat
sub
divl
add
pushw
push
clc
shlb
clc
roll
ljmp
jo
movsl
je
lret
inc
scas
addb
mov
in
add
call
dec
inc
cmp
xor
lea
popa
push
mov
lods
in
mov
test
cli
push
sahf
mov
inc
fmull
mov
lock
push
test
das
add
push
and
mov
insl
fisubrs
jp
shr
inc
pop
mov
xchg
push
or
ds
push
std
mov
mov
dec
inc
mov
lret
jge
or
push
loopne
xchg
dec
pop
or
sub
inc
inc
aad
lods
scas
rol
pushw
sub
push
inc
xchg
and
scas
pop
movsl
pop
dec
lcall
stos
scas
mov
push
mov
mov
lods
xchg
sbb
cld
push
aaa
mov
xchg
aam
jns
push
jae
ret
push
fiadds
or
cld
add
jbe
pop
cmpsl
das
jle
and
arpl
sbb
orl
adc
pop
fnstenv
cs
fs
inc
mov
fidivrs
cmp
es
out
movsl
push
les
sub
add
frstor
fldl
sar
xchg
push
xor
cmp
add
ret
flds
out
push
loop
sub
insb
dec
in
or
cld
mov
add
leave
jns
icebp
or
loop
or
jmp
adc
jo
add
ljmp
pop
test
shl
xor
jle
push
mov
insl
sbb
jecxz
enter
jecxz
add
popaw
hlt
into
das
pop
pushf
dec
lea
out
pop
out
cmp
sub
aaa
and
mov
xchg
fmuls
popf
jp
outsl
jmpw
jmp
int3
cmp
jnp
jo
sbb
push
lret
mov
insl
addr16
sbb
push
cmp
aad
push
cli
pop
xchg
iret
out
and
int
adc
lea
inc
mov
xchg
jne
pop
and
sbb
stos
and
lret
stos
scas
cmp
imul
aaa
lods
adc
sbb
sub
add
mov
sub
mov
dec
inc
jp
stos
jl
test
in
daa
mov
jg
cmp
in
xchg
lods
mov
arpl
cmp
imul
das
test
lods
push
inc
fdivl
cmp
jo
ljmp
jno
lock
and
mov
scas
sub
jno
xchg
lock
xchg
sub
jmp
push
pop
inc
out
icebp
lds
test
jl
pop
rolb
xor
lds
xchg
cmp
dec
mov
mov
out
lea
jbe
fwait
adc
add
pusha
inc
cmp
inc
sbb
push
xor
jge
mov
push
mov
fwait
rcrl
xor
push
pop
and
stc
or
pop
inc
fistl
sbb
leave
shll
loope
push
pop
mov
sar
add
push
outsb
mov
jl
mov
pop
arpl
push
push
pop
push
and
adc
push
enter
in
and
add
cmp
test
cmpsb
sbb
mov
sti
inc
add
jno
mov
push
xorl
mov
ljmp
dec
pop
jb
pop
cs
or
xor
icebp
xchg
mov
sbb
lea
inc
mov
mov
or
fs
loop
lds
push
icebp
es
ds
xor
and
dec
cmp
pushf
adc
cmp
or
filds
sub
and
inc
mov
inc
xchg
mov
xor
pusha
sub
mov
pop
aad
dec
movb
test
bound
into
fildl
sti
cltd
popf
mov
into
adc
inc
into
add
dec
mov
or
sahf
or
jle
dec
fs
decb
popf
push
daa
push
or
nop
gs
xor
pop
sub
outsl
xor
movsl
ret
gs
ret
sbb
addl
outsl
pop
push
sbb
sub
mov
lods
testl
fdiv
popa
sub
or
inc
pusha
cmpsl
sti
or
mov
inc
dec
push
add
decb
mov
stos
inc
scas
xlat
or
movsl
insl
call
lea
xchg
or
inc
lahf
lahf
mov
lods
pusha
cmp
fbld
cmc
push
pop
jo
rolb
sahf
cld
mov
sbbl
int
call
adc
es
sub
fsubp
pop
icebp
testl
adc
mov
mov
mov
push
es
inc
roll
push
fwait
call
enter
das
add
mov
add
es
cld
js
sub
cli
hlt
test
rcr
dec
xchg
bound
test
lods
jbe
push
lock
les
cmc
cmp
lret
pop
push
mov
hlt
dec
lahf
test
push
xor
sbb
xor
push
fwait
mov
test
imul
repnz
out
mov
mov
iret
xor
out
and
push
push
loopne
jo
push
mov
or
fstpt
aam
test
mov
or
push
pop
jo
outsb
pop
add
je
jnp
ds
mov
ret
into
mov
mov
mov
push
loop
popa
imul
xchg
sahf
fisubl
push
and
mov
xor
mov
clc
shrb
push
xor
lcall
push
cmpsb
pop
jg
adc
adc
mov
loopne
and
jbe
es
mov
sub
ret
cwtl
popa
ds
or
ficoml
in
or
js
int3
mov
shrl
jp
mov
rcr
mov
pop
out
inc
mov
in
mov
dec
lahf
push
xor
xor
cld
setge
clc
test
dec
ret
cmp
adc
add
roll
lods
aam
xchg
or
mov
aam
mov
push
int
push
rolb
sti
and
inc
inc
sub
lock
nop
adc
call
lods
daa
mov
add
in
or
push
push
sbb
ja
dec
in
sbb
cwtl
loope
jbe
cmp
clc
or
lea
sub
xchg
sub
dec
test
push
cmp
nop
aad
mov
mov
das
jo
arpl
ss
bswap
and
or
pop
fldl
test
mov
adc
imul
in
sbb
xchg
xor
andl
push
adc
pop
inc
or
mov
iret
fistps
xor
outsl
xchg
xchg
jl
cmpsl
jmp
sbb
cmpsb
pop
mov
mov
inc
rol
jg
fs
jge
je
movsl
insl
mov
not
lea
xchg
and
hlt
pop
rcr
movsl
cs
out
mov
xchg
fcmovb
lcall
dec
mov
inc
fdivrs
dec
loopne
jg
inc
sub
scas
adcb
mov
insb
outsb
pop
cmp
in
daa
mov
stos
ficoml
cwtl
adc
push
pop
andb
or
mov
in
mov
mov
push
or
fs
adc
int
dec
inc
addr16
stos
sbbl
add
pop
or
bound
or
mov
sbbl
mov
fwait
sti
mov
or
out
int3
jg
adc
push
push
cmpsl
cmpsb
cmp
add
adc
mov
fxch
xor
js
shll
jae
add
inc
cwtl
jns
aad
movsb
cmpsl
js
repz
je
sarb
jae
out
das
jno
std
aad
adc
jnp
xchg
mov
fwait
xor
lea
loop
add
sub
mov
lea
fidivrs
inc
or
and
sub
jns
call
aaa
jecxz
adc
clc
and
mov
pop
imul
dec
pop
and
sbb
pop
outsb
mov
cmp
dec
and
mov
loope
jo
mov
sti
jp
das
cmp
dec
pop
pop
mov
stos
repnz
pop
cwtl
push
and
cmpsl
lcall
mov
mulb
mov
mov
ret
mov
call
pop
xchg
hlt
xchg
cmp
dec
js
iret
sbb
add
push
std
ds
push
jmp
xor
xchg
mov
mov
mov
pop
sub
lret
dec
jl
jae
xchg
aas
jecxz
jle
orl
sar
xor
movsl
out
jl
add
sarb
push
fdivp
dec
and
push
lahf
nop
data16
pop
pop
sub
fists
xor
dec
sub
and
dec
xchg
jg
sub
fildl
dec
sbb
insl
hlt
mov
mov
xor
aaa
out
movl
mov
or
dec
adc
push
mov
xor
cmp
mov
sub
pop
dec
mov
je
out
or
push
fdivrp
dec
out
push
int
scas
sti
jne
dec
fdivr
loopne
pop
push
ljmp
sahf
adc
mov
call
pusha
in
fwait
jnp
stc
xor
pop
hlt
movsl
call
pushf
pop
pop
out
daa
aad
push
inc
pushl
dec
stos
mov
add
or
dec
inc
std
rcrb
std
sub
sbb
sbb
negb
ret
and
je
mov
mov
mov
sbb
outsb
or
repnz
dec
aaa
lcall
push
nop
lods
int3
pop
fldenv
pop
xor
inc
test
lret
scas
bts
push
test
testb
das
inc
sub
mov
ljmp
pop
lret
mov
mov
dec
adcl
mov
and
xchg
xlat
jae
hlt
aaa
push
dec
jno
cmp
cltd
cmp
and
data16
lods
xchg
xor
pop
mov
jmp
jb
movsl
mov
ljmp
push
adc
shlb
mov
pop
mov
xlat
ficomps
test
adc
fadd
sub
es
xchg
sbb
add
ret
lcall
popa
and
mov
int3
lret
push
jg
loopne
mov
call
hlt
cs
sub
rorl
cmp
lret
lea
mov
push
icebp
cmp
shrb
mov
minps
mov
mov
lea
mov
mov
xor
int
dec
aas
push
scas
sub
out
inc
jl
jp
and
mov
mov
nop
mov
adc
xchg
push
sub
adc
cmpl
enter
pop
cmp
daa
push
mov
jl
icebp
push
out
or
sub
cmpsb
les
and
lock
add
fsubrs
cli
sbb
mov
mov
int3
pop
mov
fiadds
aas
sete
or
xchg
inc
pop
dec
inc
scas
je
into
inc
add
and
loope
rol
ljmp
xor
lea
push
loope
ret
gs
int
aaa
dec
or
add
jg
sub
sbb
and
cmc
andl
mov
jl
lds
loope
sub
sub
repz
cmp
js
mov
push
jge
add
sub
push
loopne
stc
mov
stc
test
lcall
sub
jmp
fdivs
inc
mov
mov
js
jns
sbb
pop
lock
add
loope
insl
pusha
ret
adc
in
in
mov
mov
or
aam
fstl
pop
fsubl
dec
adc
add
push
xchg
add
aas
pop
testb
addr16
pop
cli
mov
mov
sbb
jnp
jecxz
ret
and
lret
sbbl
ljmp
xlat
inc
icebp
xchg
loopne
and
loop
shl
lods
scas
and
test
fistpl
mov
push
stc
scas
jbe
sbb
pop
lea
mov
je
je
sub
aad
fwait
jmp
fwait
dec
jnp
js
push
xchg
sbb
mov
xchg
ja
lret
das
imul
fcmovbe
add
je
xchg
bound
leave
or
mov
inc
dec
xor
mov
xor
pop
push
js
mov
push
or
add
pop
jl
jp
fidivrl
sub
xchg
add
dec
out
shrl
push
xor
mov
or
cmp
add
pop
pop
xchg
mov
pop
pushf
sbb
cli
fnstsw
pop
or
mov
clc
sbb
fisubl
adc
pop
mov
jns
cmp
dec
daa
rcll
in
popf
sbb
mov
aas
loopne
imul
mov
mov
mov
daa
jecxz
lds
in
std
sbb
je
mov
sarl
add
pusha
shlb
in
adc
cmpsb
test
or
fisubl
push
in
test
cs
shrb
xor
dec
push
pop
push
or
icebp
adc
mov
or
cmp
lret
fwait
les
stc
xor
push
add
xchg
shlb
mov
xlat
adc
xorl
aas
lcall
les
sub
mov
push
rclb
cmc
mov
rolb
sbb
xchg
sub
mov
fs
sbb
repz
pop
clc
inc
aaa
stos
lods
test
xchg
jle
das
pop
fs
sbb
jne
pop
and
jle
add
jne
faddl
into
sub
lret
mov
cs
xchg
ret
adc
pop
mov
pop
shll
les
add
pop
rcr
icebp
repz
mov
add
out
stos
insb
dec
push
je
inc
xchg
xor
jmp
sahf
pop
push
cs
push
fwait
dec
out
push
test
lock
movb
nop
shlb
xor
arpl
dec
cli
xchg
popf
sub
inc
cmpsb
inc
fucomp
test
fimuls
dec
pop
jmp
sub
push
mov
pop
cs
sbb
lds
pop
lock
push
sbb
imul
movsb
sub
jne
ja
mov
fmuls
movsl
mov
pusha
sbb
lret
and
arpl
clc
les
outsb
jns
stos
dec
or
movl
shrb
test
aad
ljmp
and
and
jo
test
clc
pusha
cmpps
pop
adcl
sbb
pop
adc
mov
xor
je
and
add
xchg
cmc
jle
jge
add
mov
daa
pusha
xchg
fwait
sbb
lret
push
fsub
sub
or
sbb
jecxz
fmull
jne
or
popf
jmp
adc
mov
cltd
cmpsb
imul
cmp
push
gs
jae
adc
pop
xchg
push
pop
scas
scas
lahf
movsl
out
mov
xor
jg
stc
subl
in
flds
lret
adc
cmp
lods
inc
repz
sbb
ds
pop
mov
ret
pop
jbe
bound
dec
js
jmp
add
lods
fs
cs
mov
push
movsl
cmp
and
xor
sbbl
add
fcoms
and
scas
push
mov
inc
mov
rol
xor
mov
gs
sbb
push
jge
mov
stc
lcall
loop
nop
testb
les
mov
test
leave
push
mulb
jp
rcrl
xlat
push
sbb
movl
out
or
sbb
mov
call
cmc
stos
pop
push
or
dec
jbe
sub
fmull
imul
push
inc
sahf
push
jmp
leavew
pop
inc
cmpb
dec
fwait
das
cmp
dec
add
add
lret
test
dec
lods
mov
outsl
adc
or
les
icebp
nop
cld
clc
sahf
sub
cmp
xor
or
and
cli
cmc
add
lock
orl
jns
and
dec
dec
mov
xchg
loope
jno
mov
test
fcom
aaa
mov
pushf
add
push
adc
adc
sbb
cmp
xor
addb
fbstp
push
std
adc
jno
mov
faddl
or
les
jo
jl
adcl
rorl
mov
dec
fimull
xchg
xchg
jnp
test
add
mov
fbld
pushf
fiadds
push
and
std
int
ljmp
in
clc
sti
pop
cli
sub
test
add
faddl
mov
fidivl
xchg
jp
stos
mov
mov
insl
xchg
ret
mov
call
jg
mov
fldenv
push
push
sarl
mov
test
rcrb
fbstp
pusha
or
pop
bound
loop
xor
xor
jns
ss
xor
insl
adc
push
shl
jecxz
and
mov
outsb
fs
adc
nop
fwait
dec
fwait
cmp
mov
fnstcw
mov
pusha
pop
dec
mov
mov
es
jnp
sub
jno
cli
popa
scas
pop
add
and
add
push
loopne
outsb
das
sbb
xor
aam
add
je
cs
lahf
fwait
mov
faddl
mov
les
mov
sahf
aas
sti
mov
push
mov
or
or
xchg
dec
and
fsubr
mov
cmp
int3
mov
shr
xor
fstpl
das
aad
jbe
daa
test
loop
pop
push
movsl
rcrb
shrl
mov
jae
sahf
icebp
inc
out
and
mov
xlat
andl
jmp
dec
gs
inc
lods
jo
push
mov
dec
clc
shll
stos
or
in
jp
incb
push
dec
mov
or
push
and
jae
decb
test
inc
pushf
xchg
filds
or
aaa
add
shl
push
dec
jo
jl
ret
sbb
mov
sub
test
movsb
jbe
adc
mov
xchg
sub
mov
je
mov
push
out
fsubs
push
xor
mov
and
inc
mov
cmpsl
mov
xor
mov
add
xchg
jbe
call
test
dec
int
or
cmpsl
mov
push
orl
or
mov
pop
rcrl
rcrb
addl
cmp
sub
mov
imul
lret
js
mov
pusha
pop
jle
je
xchg
mov
xchg
nop
add
push
sbb
push
icebp
hlt
sbb
aas
test
cmp
pop
es
mov
xchg
add
jae
insl
jae
sarb
adc
fmul
pusha
mov
cmp
add
or
mov
fstpt
lock
into
into
ret
xor
jecxz
loop
out
clc
rol
pop
repz
or
int3
xorb
or
mov
jo
jecxz
or
sub
lahf
push
pop
push
out
mov
sbb
clc
dec
dec
mov
aad
push
pop
mulps
push
pop
cmp
xchg
cmp
movsl
ret
scas
mov
inc
jp
mov
pop
icebp
jp
mov
iret
inc
adc
andb
cmp
fwait
pop
jle
inc
lds
pusha
xchg
push
add
insb
and
into
in
sub
shr
int
cmp
and
xchg
jns
add
xchg
rolb
fwait
mov
aas
pop
fcompl
icebp
repz
add
lcall
mov
pop
mov
mov
out
inc
pop
fldl
add
push
call
add
jl
cmp
mov
mov
ret
push
sbb
pop
cmp
adc
scas
sarb
adc
insl
in
mov
jg
aad
repz
ret
es
push
leave
fwait
aas
lahf
inc
jb
sahf
adc
sub
lret
mov
dec
cli
mov
test
sub
xor
jo
jecxz
jge
cli
xchg
adc
xor
adc
push
push
cmp
sbb
into
inc
fiaddl
int3
leave
adc
lret
mov
jne
lcall
xor
mov
ljmp
mov
push
jp
fwait
mov
xor
sbb
cmp
outsb
fisubs
jbe
mov
fnstsw
fdivs
popa
repz
cli
sub
es
movsb
pop
and
mov
or
jbe
ret
repz
lods
jb
js
lods
cmpsl
push
jnp
push
jne
das
arpl
sub
xchg
lods
les
iret
push
lods
mov
aaa
add
sub
xor
ja
dec
sbb
inc
or
mov
fildl
std
lds
shrb
push
push
stos
and
and
xlat
sbb
nop
jecxz
add
iret
and
fcmovnb
jo
mov
adc
into
add
lods
dec
mov
xlat
imul
in
nop
adc
les
scas
ja
insb
rolb
cmpsb
inc
loope
mov
clc
pusha
test
in
mov
xorb
mov
outsl
sti
mov
mov
aam
int3
jmp
movl
sbb
add
sahf
or
loopne
outsb
scas
pop
cmp
cmp
int3
mov
int
mov
mov
insl
std
les
int
das
lods
les
mov
fmull
in
ret
push
adc
push
insl
cli
jle
xor
and
cmp
pop
and
sub
cmpsb
hlt
cmp
or
mov
cmp
lods
fildll
stos
scas
adc
icebp
ljmp
mov
call
dec
push
setl
test
lahf
pusha
arpl
sti
or
and
loopne
call
int
test
stc
mov
js
add
jmp
rcrl
mov
cld
sbbb
out
scas
call
sbb
dec
add
mov
jp
jb
mov
je
and
orb
fwait
inc
mov
adc
mov
jb
push
pop
push
dec
and
int3
frstor
jbe
or
sbb
mov
in
gs
jl
mov
lods
mov
pop
jb
push
ss
jp
int3
adc
mov
or
enter
rcrb
sbbl
pop
push
in
jmp
dec
xor
ja
sub
outsl
xchg
out
sub
dec
xor
add
or
xchg
in
popa
xchg
mov
mov
jl
jbe
sub
inc
jmp
jno
psubd
rorb
adc
stc
add
push
and
dec
aam
inc
addr16
push
adc
andb
cmpsl
pop
scas
jb
cmp
mov
and
pop
arpl
insl
ljmp
push
shll
stos
push
shll
jbe
cmpsl
pop
je
mov
int3
or
dec
dec
cmpsb
mov
and
hlt
inc
outsl
scas
mov
lahf
in
xchg
data16
mov
mov
sub
lods
in
dec
fcomip
sbb
lcall
lods
xor
adc
and
test
or
xchg
fildl
int3
rolb
sub
pop
es
sub
faddl
push
sbb
xchg
pop
movb
loopne
add
nop
inc
ja
adc
pop
jge
andb
cmp
popf
mov
lea
add
inc
add
sbb
mov
jnp
xchg
xor
pop
sbb
inc
stos
ret
inc
add
xor
push
jg
leave
mov
jmp
movsl
dec
cmp
mov
jnp
scas
lock
add
mov
jmp
or
dec
cwtl
arpl
pop
pop
xor
mov
xor
cmpb
or
push
add
jo
pop
mov
fimull
ds
cmp
jns
jno
sbb
inc
fldl
cmpsl
inc
fistpl
pop
out
sbb
pusha
jo
in
add
mov
std
jg
fnstenv
pop
pusha
pusha
aam
bound
leave
inc
dec
push
dec
aam
mov
bound
jecxz
pop
push
loope
cmp
mov
int
test
mov
aas
mov
lods
push
jl
popf
jp
ds
push
les
test
jmp
sub
lcall
mov
lods
loope
daa
push
insb
ljmp
pop
mov
push
rorb
add
aas
scas
lahf
xor
stos
mov
cmpsl
adc
pop
arpl
lret
jbe
mov
push
jo
pop
cmp
mov
aaa
sub
add
cmp
push
mov
mov
or
std
jle
repz
mov
hlt
adc
aaa
sar
push
lods
adc
not
jge
jp
pop
sbb
cltd
push
sbb
out
aaa
pop
stc
cmp
dec
aad
jmp
js
pop
push
popf
sahf
aaa
mov
xchg
addr16
shlb
cs
call
bound
test
gs
sbb
fidivrs
popf
popa
jno
fnstcw
cmc
and
sbb
ja
int
mov
fs
shrb
inc
mov
inc
adc
int3
add
lahf
std
cmpl
ss
icebp
icebp
inc
sub
aaa
sub
lods
popa
xor
xchg
idivb
jns
gs
push
mov
lods
loopne
nop
fildl
or
cmc
push
add
pusha
pusha
cmp
lahf
test
dec
cld
xchg
test
jg
fildll
das
or
in
lahf
mov
outsb
jo
push
movsb
icebp
sub
cmp
shll
jb
int
mov
ret
inc
pusha
jl
test
cld
js
mov
inc
mov
push
scas
add
dec
pop
and
mov
mov
cli
punpckldq
pop
dec
pop
add
ja
cmp
sahf
jle
std
jg
dec
mov
dec
sub
std
cmc
ljmp
and
repnz
addb
jmp
cltd
mov
push
enter
xchg
xorb
aaa
stc
mov
jmp
ljmp
mov
cmp
loop
jo
cld
cmp
sub
jb
xor
or
mov
push
push
jl
gs
mov
ret
addl
imul
mov
adc
pusha
loop
jge
jne
sub
and
add
or
dec
out
movsb
daa
jbe
mov
inc
pop
test
aam
adc
add
push
inc
outsl
out
mov
idiv
jp
iret
stc
mov
add
sub
in
mov
sarb
jg,pt
mov
push
pop
sti
lret
rcrl
jnp
mov
aas
cmc
add
dec
jae
xchg
inc
inc
mov
orb
clc
adc
cmp
and
out
pop
sbbl
pop
out
popa
loopne
insl
mov
fisttpl
xor
mov
dec
lret
call
scas
xor
sub
test
call
scas
rcrl
pop
inc
inc
pop
ss
push
push
stos
mov
and
mov
call
push
push
fwait
idivb
rcrl
sub
cmpsl
adc
cld
std
inc
divl
and
stc
push
fs
jno
add
push
ret
pop
gs
cmp
push
pop
or
lahf
cmpsl
cmp
scas
out
repnz
adc
push
jecxz
pop
pusha
xchg
xchg
outsb
in
daa
decl
aaa
loope
push
or
call
or
sub
mov
in
adc
outsb
popf
push
cli
mov
loop
or
and
xchg
adc
insl
or
xchg
cmp
enter
xor
mov
sub
jp
push
pusha
insl
pop
shlb
add
push
frndint
js
sbb
xor
nop
mov
add
jl
lods
mov
and
mov
lret
mov
pop
xchg
cmp
sahf
addl
pop
cld
sarl
imul
ret
push
mov
aas
bound
popf
xor
sbb
add
push
sbb
jbe
es
cmp
jbe
pushf
xor
inc
pop
dec
stos
pop
jo
dec
test
xchg
push
xor
lock
pop
inc
or
loope
pop
in
adc
cmc
or
adc
add
inc
or
add
inc
stc
insl
sub
xchg
jl
scas
hlt
push
pop
test
mov
js
jne
add
xchg
sbb
dec
pop
jne
jbe
scas
leave
test
or
je
sub
gs
enter
test
pop
dec
sbb
push
dec
and
jbe
shrb
lret
scas
xor
pop
mov
int
js
int
adcl
cmp
mov
pop
cmp
addb
icebp
lahf
cmc
add
xchg
mov
mov
add
adc
test
je
insl
iret
rorb
gs
cld
xor
pusha
xlat
out
fildl
inc
and
add
mov
cmp
test
jp
xor
pop
inc
pusha
aaa
xlat
movsb
and
dec
push
js
push
add
lds
push
repnz
popa
das
xor
fcompl
roll
push
testl
fcomps
dec
stc
fwait
jns
mov
cmp
or
pop
fstpt
mov
sahf
aad
popf
sub
lods
sub
cmc
lcall
sub
push
pop
sub
jo
adc
add
sbb
adc
cmp
sub
cwtl
pushl
xchg
push
dec
xorb
adc
ret
add
sub
decl
xlat
push
clc
pop
lret
mov
jl
les
lcall
jbe
push
mov
lds
ja
mov
cld
inc
movsl
push
jae
adc
rclb
push
push
roll
call
rcrb
sbb
movsb
das
pop
sbb
inc
dec
add
jb
mov
cs
lret
hlt
add
push
scas
mov
or
ja
jp
mov
cmp
xchg
xchg
jg
lret
push
push
add
mov
inc
out
rorl
mov
into
add
shlb
clc
jb
mov
std
inc
shlb
mov
xchg
rol
loope
jbe
mov
sbb
fldenv
test
ljmp
jmp
jg
pop
pushf
push
adc
jo
cld
mov
fadd
les
lret
add
sub
aaa
add
sbb
mov
jbe
fnstcw
icebp
enter
and
leave
movsb
push
scas
cltd
push
push
imul
rclb
jl
insb
jae
sbbl
loop
xchg
mov
jecxz
call
adcl
mov
adc
xchg
ret
mov
sub
test
out
xor
test
sbb
or
mov
pop
add
push
jmp
out
dec
test
jbe
aaa
push
or
push
or
sub
sbb
lret
cld
push
rcrl
out
xor
popf
add
enter
in
rclb
or
rcrb
push
sahf
xor
or
insl
in
loopne
call
bound
push
dec
lcall
lock
fwait
pop
mov
or
and
push
dec
clc
dec
cli
push
je
decb
stos
push
jnp
insb
dec
add
or
xchg
adcl
mov
or
out
es
bound
testl
mov
lret
mov
pushf
jbe
mov
outsl
clc
call
dec
cmp
inc
sub
push
cmp
mov
addb
cmp
shrb
test
fadd
xchg
out
inc
sub
push
call
test
dec
dec
pusha
lods
sbb
cmp
push
jle
push
xchg
dec
mov
jp
movsl
or
das
aam
das
test
out
imul
xchg
imul
inc
sbb
cmp
jmp
or
cmp
push
sahf
rorb
int
daa
daa
and
addl
cltd
xchg
mov
push
stc
in
add
daa
mov
jno
cmp
cs
rcrb
loope
fimull
mov
mov
lret
add
fdivl
loopne
insb
sub
ret
pop
pushf
clc
mov
rcrl
mov
ret
out
sub
clc
add
xor
mov
xor
sbb
insb
jnp
pop
mov
jo
pusha
ljmp
fcmovbe
sbb
test
sub
or
iret
fidivl
mov
stos
testl
sub
xor
cwtl
es
sbb
mov
out
dec
ljmp
sti
fstpt
data16
gs
mov
mov
fiadds
mov
stos
push
rorl
roll
or
inc
mov
aad
inc
aad
fsubrl
jne
push
mov
je
ret
add
jge
jnp
pop
pusha
jnp
inc
add
or
mul
in
sbb
pop
mov
icebp
test
sub
cmp
jno
xchg
sbb
into
mov
fdivrl
cld
mov
enter
fsubs
scas
mov
scas
aam
mov
pop
cmp
or
clc
fwait
sbb
repnz
xor
cltd
sub
mov
or
das
pop
ss
cli
inc
fcmovbe
les
stos
sbb
aam
lods
es
jb
ret
adc
jae
jmp
adc
sbb
xlat
and
loope
dec
sub
xor
je
cmpsl
and
dec
cld
arpl
add
aam
sbb
addl
jo
xor
pop
rcl
mov
inc
jns
mov
and
out
scas
jnp
xchg
lret
iret
lret
pop
push
notl
dec
adc
rorb
and
outsl
inc
lret
jp
jle,pn
and
jo
jp
lods
test
push
ret
mov
pop
cmp
push
lock
pop
mov
push
iret
les
pusha
dec
negl
sub
test
loop
add
or
in
push
incb
and
das
push
push
sbb
outsl
lcall
sub
jl
mov
push
pop
push
enter
push
movsb
sbb
fbstp
addr16
lods
push
xor
jl
inc
gs
push
ds
ret
inc
or
ret
int3
ret
push
js
bound
jp
test
insl
xchg
dec
imul
lcall
add
mov
and
inc
inc
sub
out
daa
fwait
insl
scas
dec
ret
lret
or
shlb
icebp
popa
mov
pushf
push
faddl
leave
sahf
inc
out
enter
push
out
xchg
push
inc
test
lods
sbb
push
sahf
inc
dec
xlat
pop
inc
sub
push
cmp
and
ljmp
dec
inc
xor
xchg
mov
mov
fists
mov
testb
rcl
or
xor
adc
out
les
arpl
xchg
jb
xchg
mov
pusha
divl
cmp
mov
adc
pop
push
inc
shr
lods
fldl
sbb
int
daa
insl
push
insl
mov
adc
les
sbb
ds
cmp
es
sub
iret
pop
push
jle
fsubrs
inc
push
ret
jne,pn
ficoml
pop
mov
stos
sbb
clc
xor
xchg
sbb
clc
repnz
pop
stos
rcl
jle
fidivl
sbb
jp
fwait
sbb
in
rol
jp
ss
xor
inc
pop
pusha
jmp
insl
push
cld
aam
mov
lock
iret
jno
sbb
cwtl
cmp
cmp
xor
adc
sbb
add
push
imul
cltd
mov
aaa
mov
mov
cmp
jg
adcb
outsl
mov
negl
jmp
mov
add
mov
xor
add
aad
inc
ret
and
in
ds
out
xor
mov
cmp
jecxz
sbb
fdivl
lods
cmpsl
xchg
sbb
push
insl
lds
das
rol
mov
mov
add
shr
icebp
sahf
jo
xorl
push
or
or
cmp
jge
xchg
pop
mov
inc
mov
jp
jecxz
ret
enter
dec
into
mov
adc
jno
inc
pop
sub
ret
pop
pop
mov
lret
and
mov
xchg
scas
mov
sbb
jp
test
pop
pop
mov
jp
cld
outsb
outsb
rolb
movsb
ret
adc
dec
cmp
fnsave
fildl
adc
stc
and
cwtl
mov
adc
scas
out
inc
add
fmuls
cmc
sahf
or
les
mov
mov
fidivrl
adcb
aas
or
clc
cwtl
inc
mov
test
mov
push
sti
imul
add
aam
mov
ja
fstps
xor
xor
xchg
xchg
jmp
aad
mov
xchg
cmc
push
mov
inc
or
cmc
pop
push
pop
mov
push
repnz
jne
ljmp
mov
add
les
insl
jle
or
pusha
cmp
loopne
or
adc
push
fmuls
sbb
daa
out
and
sbb
repz
push
leave
push
mov
mov
pusha
stos
stos
add
push
gs
ret
mulb
stos
pop
das
rcrl
movsb
or
repz
lock
dec
scas
xchg
dec
in
lds
and
and
mov
xor
data16
rolb
in
fsubrl
lock
adc
inc
cmp
mov
jmp
rcr
pop
inc
xchg
jle
jo
sbb
adc
std
shll
adc
mov
or
sub
repz
fidivrs
sbb
lods
add
jge
ss
add
xchg
cmc
sub
ss
jle
in
jno
arpl
pop
test
jno
add
test
pop
scas
jmp
jmp
fbld
test
aas
dec
sbb
les
ds
mov
shl
dec
xchg
dec
pop
and
fs
mov
adc
sub
pop
lret
xor
xchg
mov
stos
cmpsb
fcomps
cld
nop
add
xlat
daa
fs
sbb
dec
pop
mov
enter
js
loop
out
pop
test
stos
inc
dec
push
ds
inc
push
daa
sub
cli
mov
inc
aam
loope
ljmp
icebp
dec
add
pop
mov
vmovdqu
push
ss
lahf
outsb
icebp
add
mov
adc
int
add
lock
sub
push
cld
jne
scas
mov
stos
mov
pop
in
lock
jl
adc
hlt
test
or
or
jl
sti
xchg
lret
and
sarb
add
insb
roll
fistpl
int3
cmp
scas
mov
ss
and
mov
test
mov
dec
jg
push
push
xorb
data16
or
mov
add
and
or
xchg
jg
xchg
shrb
out
pop
pop
jp
shll
setnp
ds
xchg
mov
xchg
aad
cmp
mov
adc
jbe
lcall
inc
push
pop
dec
loop
lds
push
adc
jle
mov
lods
sub
mov
cwtl
ret
push
push
xchg
clc
sub
cwtl
mov
mov
movsl
mov
in
mov
insl
or
cwtl
and
loope
and
jno
mov
add
jg
rcl
mov
iret
inc
cld
les
mov
cmc
nop
sub
push
xchg
cmpsl
jecxz
cli
ds
sub
insb
pop
push
push
pop
sub
ds
test
mulb
mov
imul
pop
out
xchg
stos
fwait
or
lea
addr16
fadd
jp
dec
ret
dec
leave
rorl
mov
inc
je
fwait
add
cli
add
adc
jns
hlt
push
add
xchg
inc
jge
rclb
daa
xlat
fnstenv
push
data16
das
jmp
orb
sub
sbb
addl
rcll
pusha
inc
mov
and
mov
adc
testb
cmc
push
nop
stos
out
inc
fs
jno
sbb
xorb
adc
lds
add
nop
in
test
push
test
jl
in
hlt
outsl
pop
sub
or
std
xor
add
cltd
test
xlat
out
push
stos
movl
or
ret
pop
insb
mov
cmp
cwtl
adc
jl
mov
bound
les
xchg
rclb
lret
loop
or
xchg
fwait
ret
add
or
cmp
sahf
cmpsb
or
xchg
push
xchg
pop
mov
xlat
sbb
dec
add
jnp
stos
push
pop
mov
cmc
fwait
jge
mov
dec
mov
shll
inc
push
mov
and
xor
insb
push
add
fiadds
jg
lods
cmp
dec
mov
pop
fisubl
mov
ret
add
out
and
jge
addl
push
or
bound
mov
inc
imul
jne
outsb
adc
jae
std
pop
cmp
aaa
std
in
in
addb
mov
dec
pushf
jb
ljmp
jge
push
cmpsb
mov
jnp
int
sbb
xchg
jo
pushf
fidivs
shrl
mov
mov
lahf
repnz
rorb
adc
js
adc
sbb
dec
ret
je
dec
jmp
das
je
xchg
std
dec
cmc
rcll
jnp
sbb
jne
pop
adc
xchg
push
fsubrl
or
jno
xor
stos
cmp
dec
cmp
dec
push
std
mov
mov
inc
sbbb
into
fs
ret
jge
ja
xor
pop
or
ja
das
inc
push
aaa
loop
cmpsl
jg
sbb
pop
int3
lret
sti
nop
sbb
int
jecxz
cmp
inc
pop
pop
scas
cmpsl
or
mov
lret
lock
jb
nop
rorb
cmp
cltd
or
sub
push
in
xor
or
mov
loopne
adc
xchg
and
lds
jne
lea
jmp
in
adc
sbbb
mov
pop
sub
add
add
xchg
int
outsl
cwtl
and
in
cmp
mov
mov
loope
dec
stc
andb
inc
stos
dec
push
pop
sbb
add
mov
inc
pop
add
inc
pop
lock
mov
mov
sbb
iret
sub
sbb
fs
icebp
xchg
and
pusha
xor
add
pop
mov
jo
pop
mov
cltd
repnz
das
out
jl
xor
inc
inc
xchg
pop
jbe
test
cli
add
not
push
sbbb
add
xlat
sub
xchg
inc
push
test
jb
fsub
push
cmp
sbbb
inc
sahf
inc
mov
insb
movsb
dec
out
les
test
enter
cmp
test
jbe
lods
dec
cmp
pusha
push
int
scas
push
pusha
loop
pop
mov
andl
rcr
stos
and
leave
je
mov
pop
je
sahf
lods
fstpt
mov
mov
sbb
pop
xlat
mov
jne
cmpb
push
xchg
inc
jl
jl
adc
sarl
ret
cmp
int3
ja
incb
mov
cmc
mov
aam
adc
ret
cwtl
arpl
cwtl
pop
jl
mov
movsbl
dec
mov
mov
jle
push
loope
sti
movsl
enter
adc
xchg
mov
test
add
inc
cwtl
push
pop
mov
jle
adc
sub
fisubrl
fwait
ds
sbb
cmp
mov
mov
xchg
movsb
fidivl
clc
jne
and
pushf
fstl
jb
mov
pop
pushf
ss
inc
dec
gs
loope
push
loope
mov
jp
stos
push
es
rorl
mov
xorb
mov
mov
cs
adc
mov
decb
cmp
inc
in
shlb
call
subb
adc
stos
adc
cmp
add
sti
bound
dec
das
mov
shll
pop
add
mov
add
lods
sbb
cmp
mov
icebp
es
aas
gs
jno
fsubl
push
mov
push
out
aam
dec
mov
sub
hlt
add
inc
sub
rcl
std
jo
mov
jg
adc
dec
and
adc
adc
sub
and
and
sub
shlb
inc
aam
xor
add
jno
outsl
cli
adc
and
ljmp
out
jo
mov
xlat
mov
idivb
xor
lods
mov
sub
cwtl
lea
dec
jecxz
leave
sbb
mov
sub
fldt
pop
loope
add
push
ljmp
out
cmp
rcr
inc
and
inc
sbb
inc
je
mov
into
mov
mov
push
add
sub
jmp
leave
mov
aad
lcall
push
ficoms
jecxz
xorl
loop,pt
xchg
popa
cmpsb
push
scas
mov
pop
push
pavgb
dec
dec
mov
orl
les
jno
lods
clc
sub
test
sti
jbe
mov
pop
shrb
sbbb
mov
add
cltd
sbb
push
aas
loope
add
call
fnclex
sub
mov
ret
inc
pmaddwd
xlat
add
pop
nop
mov
push
fdivrs
mov
or
repnz
jecxz
mov
mov
cltd
xor
lret
dec
adc
insl
gs
add
pop
pusha
cmp
rol
jge
addr16
mov
push
dec
add
pop
cs
xor
stos
mov
xor
js
and
insb
mov
loope
or
push
das
cmp
xchg
es
movsl
or
mov
mov
cwtl
loope
xor
out
push
push
not
jl
lods
sub
je
je
sub
dec
xor
lret
xlat
cmovl
inc
insl
je
sbb
dec
xor
sbb
jbe
test
sub
pop
das
or
into
pop
flds
jmp
dec
subl
iret
adc
test
cs
mov
lret
push
mov
adc
jecxz
jle
mov
push
mov
jnp
push
pop
in
insb
cltd
lea
pop
aam
repnz
or
jns
push
push
sub
lsl
jp
test
pop
push
cld
pop
cltd
test
iret
mov
add
dec
xchg
jb
scas
jg
test
aas
shl
mov
ljmp
or
test
lods
mov
int
sbb
push
or
lahf
pop
or
mov
insb
cli
fwait
inc
jge
mov
shrl
insb
scas
add
subl
inc
clc
mov
mov
ljmp
pop
jl
add
loopne
sub
pop
xchg
out
dec
insl
mov
mov
pusha
jl
sbb
ret
iret
pop
and
or
push
les
lock
adc
or
sbb
xor
filds
out
pop
cmpl
mov
xchg
mov
dec
addb
push
cli
push
jb
inc
pop
ljmp
fmull
inc
cmp
xchg
test
jp
dec
pop
jecxz
ss
pop
lds
sbb
ret
pop
and
mov
cli
push
mov
push
add
pop
mov
mov
neg
je
dec
pop
sahf
inc
stc
dec
sbb
fs
outsl
sub
pop
inc
lahf
cmpsl
push
cmc
and
loopne
cmp
idivl
notb
or
sub
inc
roll
mov
pop
rclb
cld
or
shrb
loop
mov
sti
sbbb
jnp
jno
ret
into
sbb
add
adc
shlb
adc
add
or
mov
fiaddl
cmpl
fidivl
jne
imul
ja
std
loop
jecxz
hlt
xchg
jle
cmp
mov
data16
xchg
orb
out
lret
hlt
mov
leave
or
in
push
jecxz
mov
add
outsb
data16
shlb
xchg
cmp
and
jbe
and
dec
lcall
mov
and
jle
sub
sbb
sub
jne
xchg
jmp
aaa
and
pop
daa
xor
loop
call
jg
loop
int3
aas
fidivs
mov
divl
into
mov
insb
adcb
jne
cmpsl
xor
pop
std
mov
orb
fstl
hlt
sbb
sahf
cmp
test
int3
mov
dec
rclb
mov
dec
popa
jbe
leave
dec
imul
sub
mov
sub
pop
mov
sub
aam
imul
dec
push
jmp
arpl
cli
insb
jmp
scas
dec
cmp
pop
jl
push
das
cwtl
fadds
in
mov
movsl
push
xchg
mov
ss
xor
mov
inc
dec
dec
test
add
or
push
dec
andl
sti
xor
aam
test
sub
xor
mov
loop
in
jl
push
sub
cld
ds
rolb
addr16
pusha
lock
jo
xor
adc
mov
cmp
scas
fldl2e
jge
fdivp
or
cwtl
imul
jp
and
cvtpi2ps
jbe
stos
sarb
sub
sbb
je
or
jle
out
add
adcb
jle
xlat
iret
mov
and
cmpsb
scas
cmp
mov
xchg
outsb
jle
dec
mov
rcr
ljmp
or
mov
xchg
cld
or
mov
pop
sbb
popa
mov
jle
shrb
cwtl
scas
push
imul
mov
rcl
mov
lods
push
sbb
xchg
or
adc
xchg
add
jbe
pop
mov
sub
lahf
push
add
push
cmp
mov
test
cmc
pop
or
sarl
or
loopne
sub
in
movsb
or
mov
popf
rcr
adc
mov
ret
dec
push
cmp
xchg
call
xor
insb
mov
jp
sbb
cltd
push
mov
sbb
push
cmp
add
mov
push
mov
test
add
jecxz
dec
jl
xor
popa
add
adc
enter
out
xor
pop
xchg
mov
pop
lahf
mov
or
and
mov
push
jno
xchg
fwait
pop
rcrl
fisubrl
enter
je
mov
aad
inc
in
add
jns
xchg
arpl
dec
and
loopne
icebp
cwtl
xor
jge
mov
nop
add
pusha
enter
sbb
jnp
xchg
test
jne
test
jp
pop
idivl
xchg
dec
cmp
icebp
jns
adc
jae
out
clc
jle
dec
sahf
std
aam
mov
mov
icebp
mov
bound
idivb
lods
inc
enter
jp
dec
call
stc
and
inc
in
jge
aaa
add
push
jnp
jp
xchg
inc
push
cmp
notl
ret
lods
push
rorb
pop
std
adc
lahf
push
pusha
dec
insl
inc
add
add
push
cmpsl
adc
shr
xchg
fxam
shll
test
jge
dec
mov
mov
pop
cmp
push
jle
sub
jg
rol
arpl
lret
xor
lcall
cmp
je
push
fadds
hlt
mov
pop
imul
mov
lods
scas
int3
rorb
test
dec
movsl
ja
mov
mov
cmp
xorb
fwait
ret
shl
aam
pop
jl
xchg
scas
in
mov
rcr
adc
cld
aas
adcb
js
test
jne
jmp
mov
insl
push
pop
cmc
xor
idiv
add
mov
jo
sub
out
sarb
aad
arpl
push
jecxz
test
outsb
fnstsw
mov
das
mov
test
sub
xchg
out
add
stos
mov
inc
mov
ljmp
fs
mov
out
push
and
pop
jp
je
xor
mov
xchg
dec
mov
fiaddl
cs
cli
pop
push
adc
push
jg
adc
mov
push
jmp
inc
push
or
xor
mov
popa
in
hlt
movsb
xor
daa
mov
ljmp
out
shr
mov
pushf
mov
shlb
loopne
pusha
mov
mov
mov
jne
std
orb
pop
jns
pop
cmp
ret
jmp
ja
cmpsb
es
fistl
inc
cmp
or
and
pop
into
jp
js
jns
xlat
scas
call
filds
cmc
cmpsl
add
bound
rorb
add
mov
pop
addl
push
mov
cli
cmpsl
fs
out
lret
jnp
lret
push
call
iret
divb
enter
pop
lahf
cmp
pusha
and
or
jecxz
push
push
mov
lcall
nop
rol
imulb
mov
xchg
and
shll
mov
push
jl
and
out
push
mov
push
fildll
testl
ja
popa
dec
pop
insb
dec
into
inc
push
jae
fsubrs
inc
push
adc
pop
mov
dec
sbbl
dec
movsl
ret
mov
mov
gs
xor
xchg
jmp
mov
adc
lock
adc
jne
imul
pop
lds
les
jge,pt
int
in
fwait
xor
dec
lret
lahf
loopne
imul
mov
mov
sub
mov
lods
loop
push
mov
cmp
jmp
test
add
imul
aam
push
sub
std
mov
cmp
sahf
add
push
cmpsl
out
adc
fdivrs
push
sbb
xor
push
push
ljmp
xlat
inc
scas
mov
mov
leave
hlt
lds
jecxz
mov
lahf
sub
gs
idiv
push
into
and
lock
add
xor
sahf
sbbl
push
pop
xor
mov
and
push
xor
je
loopne
popa
in
xor
rorb
cmpsl
pop
icebp
ret
pop
add
popa
call
clc
ljmp
sub
inc
cmpsb
cmp
sarb
ss
mov
mov
cltd
test
shll
pop
movsb
icebp
roll
aaa
add
add
sbb
movsb
mov
add
pusha
mov
movsb
iret
mov
cmpsl
cmp
fstpt
mov
leave
sahf
and
shrl
fadd
pop
lods
cmp
sub
decb
dec
stc
mov
mov
pop
loop
jo
fwait
add
das
rorb
stos
add
xor
xchg
cmp
and
lret
loopne
inc
call
out
rcrb
shlb
mov
addb
mov
add
int
add
lock
push
mov
jo
and
mov
xchg
mov
das
pop
andl
push
loopne
movb
ja
popl
test
fisttpl
or
hlt
mov
lods
filds
mov
mov
fistl
adc
arpl
jle
xor
shrb
xlat
xor
js
mov
rclb
cltd
roll
pop
pushf
in
or
and
mov
clc
or
ret
push
fisttpl
sar
les
push
pop
add
orb
mov
push
cmp
or
push
mov
lock
push
push
clc
jo
jmp
mov
sbb
or
fs
mov
rcl
cmpsl
rclb
ja
push
jne
ret
and
push
sbb
dec
adc
sbb
hlt
and
scas
sbb
clc
test
sarb
dec
testb
pop
mov
rorb
pop
mov
pop
add
mov
adc
lock
shr
orb
stc
ljmp
insl
cmpsb
into
or
push
xor
pop
js
pop
test
scas
in
xchg
cmpsl
xchg
inc
clc
or
data16
push
push
jecxz
in
mov
and
push
test
sbb
jl
cwtl
mov
cwtl
mov
dec
add
arpl
xchg
aas
push
mov
scas
sub
adc
scas
inc
stos
push
subb
mov
xor
arpl
cltd
lock
sbb
stos
les
shl
jb
dec
dec
cmp
pusha
in
fbstp
and
pop
andl
shrl
jecxz
dec
das
sbb
lret
shlb
mov
test
popa
add
push
loope
push
mov
sbb
inc
jle
inc
cwtl
lahf
mov
mov
sbb
cmc
loop
push
xor
and
jb
push
scas
clc
mull
adc
inc
pop
adc
push
cmp
pop
sbb
rorl
pop
idivl
jbe
fwait
stos
mov
ja
jmp
push
xchg
add
mov
test
fildll
lea
jo
cmpsb
sbb
xchg
pop
mulb
mov
fldl
shrb
fistpll
lods
insb
lahf
inc
jle
adc
adc
dec
inc
test
rcrl
jne
jbe
mov
mov
push
and
mov
add
push
arpl
dec
pop
or
movb
pop
test
lds
sub
aaa
cld
push
mov
movsl
das
mov
stos
mov
mov
push
ret
jb
mov
ds
push
daa
sub
test
lea
incb
and
xchg
sub
jae
mov
push
mov
jmp
das
out
daa
sbb
ret
jge
lret
adc
jne
add
fists
iret
mov
inc
shrl
xchg
stos
sbb
mov
insb
cmc
add
and
ja
dec
les
mov
testl
push
je
bound
aaa
lahf
or
dec
push
jg
or
lock
mov
idiv
or
jns
fistpll
cmp
clc
xchg
sub
mov
mov
pop
aad
aaa
js
add
push
cmpsb
test
cli
lock
pop
xchg
jo
movsl
push
push
xor
sbb
jg
mov
push
push
pop
aas
mov
mov
pop
enter
jge
rorb
inc
pusha
mov
jb
ret
cmp
dec
loop
mov
push
cmc
sbb
cmpsb
inc
pop
ljmp
mov
in
pop
or
xchg
add
mov
hlt
cltd
cli
push
clc
adc
pop
cmpl
mov
adcl
pop
popa
iret
test
push
out
les
loop
pop
xor
test
sbb
push
mov
bound
cs
jp
call
mov
ss
out
testb
push
aam
mov
sub
inc
lods
mov
and
popf
push
fwait
pop
popa
and
dec
repz
mov
mov
bound
jle
or
dec
add
in
cmp
and
shlb
ljmp
adc
clc
je
add
add
inc
in
ja
daa
jl
out
push
inc
jmp
pop
iret
push
pop
and
pop
hlt
cmpsb
mov
xor
cmc
ds
nop
int3
ret
leave
je
jecxz
push
or
jl
jl
call
imulb
repz
pop
xor
inc
call
dec
push
pop
lock
sti
cmp
xor
push
jb
in
ror
js
or
xchg
scas
fmuls
cmp
push
inc
aas
fldenv
mov
jmp
inc
push
loopne
pop
pop
test
iret
push
pop
push
pop
dec
jae
jo
jl
mov
sbb
inc
outsl
std
sbb
cltd
xor
adc
cmp
mov
sbb
vmovsd
adc
or
stc
jo
movsl
xor
scas
aas
push
push
jmp
sahf
lods
adc
roll
jge
fsub
xchg
xor
jge
mov
xor
push
jno
pop
ret
dec
jo
bound
xabort
add
cmpl
dec
jmp
sahf
jae
test
sub
nop
stos
lret
or
lods
and
fsubs
icebp
or
mov
lock
lds
xchg
out
ss
insl
aas
add
lods
iret
es
mov
push
pusha
and
cmp
mov
push
mov
into
xlat
daa
mov
sbb
bound
jp
jle
fstpl
daa
push
jb
fcmove
and
xor
push
or
push
pop
pop
stos
and
call
push
push
jne
inc
enter
or
mulb
aas
pop
rorl
and
ds
mov
and
cmp
pop
push
sti
daa
dec
adc
adc
jne
add
sub
fisubrs
xchg
cmp
xor
mov
test
arpl
dec
sti
enter
call
pop
sub
adc
es
outsl
push
inc
or
push
std
add
xchg
int
jbe
jg
cmpl
cltd
lcall
adc
inc
dec
adc
insl
test
or
adc
in
pop
insb
dec
test
cmpsl
pop
popl
push
pop
icebp
mov
xor
sbb
jle
lret
lret
adc
int3
dec
push
pusha
mov
fs
mov
sbb
xchg
add
loop
mov
jecxz
fimull
sahf
shlb
loopne
add
and
push
pop
or
dec
mov
mov
movsl
pop
push
mov
pop
je
icebp
rol
add
sti
mov
pop
mov
pop
inc
push
add
notl
cli
insb
mov
jecxz
fcoml
cld
stos
lret
adc
jmp
roll
cmp
jb
mov
cmpsb
mov
ficoml
rcr
pop
add
loope
cmp
popa
adc
lock
fcmovnb
inc
cltd
jg
fisubs
mov
mov
cli
sarb
pushf
xor
xchg
js
xchg
hlt
sub
mov
int3
pop
xchg
sahf
pop
int3
pop
bound
scas
add
fiadds
pop
inc
les
mov
push
push
mov
push
mov
into
cmp
das
jge
mov
test
mov
mov
icebp
adc
pusha
xor
push
cmp
out
enter
pop
xchg
jp
fidivl
xchg
sub
push
inc
push
xchg
ja
loop
mov
xor
add
cld
aad
fdivrs
into
enter
testb
jo
mov
mov
mov
inc
sub
mov
cli
outsb
mov
icebp
push
mov
aas
mov
push
inc
jg
dec
fimuls
pushf
pop
fdivp
popa
sbbb
ds
lea
je
clc
mov
nop
sub
jl
inc
pop
adc
mov
cld
adc
outsl
or
xchg
or
cmp
jg
jne
fisttpl
dec
cmc
xor
dec
pushf
push
mov
sbb
movsb
push
cmp
mov
xchg
mov
lea
lds
imul
adc
adc
mov
test
or
popf
mov
int
aas
daa
add
or
loope
push
xor
fiadds
mov
outsl
ja
add
xchg
add
jmp
fsubr
add
pushl
aam
rcrb
inc
adc
add
add
insb
lahf
ret
loope
add
stc
xchg
add
js
add
push
sbb
xor
push
pop
sbb
mov
pusha
mov
shll
ficoml
ds
mov
fucomi
jecxz
fs
mov
mov
pop
push
mov
push
jo
daa
mov
aad
aam
mov
out
pop
sti
sbb
and
mov
call
jae
lahf
add
jb
push
pop
cmp
xlat
push
lods
mov
inc
lcall
test
rclb
cmp
dec
jnp
leave
mov
outsb
lds
movsb
dec
xor
enter
rorl
leave
inc
xchg
sbb
push
jo
aam
sbb
add
xor
nop
clc
sbb
je
and
pop
adc
mov
scas
mov
ret
aas
add
xor
dec
and
dec
movb
push
and
iret
scas
loope
jnp
sbb
mov
lock
ret
push
jecxz
adc
loope
fwait
sub
push
sbb
mov
jo
push
cmpsb
adc
enter
push
adc
xchg
lahf
sbb
jg
fists
icebp
ds
mov
loope
scas
pop
movsl
cmpsb
inc
jp
add
ss
push
push
roll
and
or
loope
or
pop
pushf
sbb
dec
or
ja
pop
add
iret
cld
icebp
aaa
rcl
xchg
add
shlb
fisubrs
mov
andl
xchg
into
inc
cmp
mov
adc
insl
and
inc
and
pusha
adc
push
sbb
and
sti
jecxz
jae
xchg
test
loopne
cmp
inc
ja
mov
faddp
or
fdivs
cltd
xor
fistps
ljmp
push
mov
sub
mov
add
rsqrtps
int
and
out
cwtl
cld
mov
pop
push
sub
clc
aas
and
fwait
mov
mov
or
lods
or
inc
fwait
jb
sahf
mov
scas
loop
push
inc
and
loop
outsb
repnz
ljmp
pusha
add
adc
push
or
mov
inc
jl
cld
js
pop
faddl
mov
bound
loopne
ss
or
mov
jmp
push
xchg
movsl
add
hlt
sbb
mov
mov
or
push
and
or
dec
fwait
jbe
push
jl
out
add
and
sbb
lds
push
jg
ret
pop
fs
push
cmp
xchg
xor
dec
andl
add
fdivs
xor
mov
shrb
hlt
adc
aam
pusha
and
or
mov
aad
int
cmp
jmp
sbb
mov
movsb
add
cbtw
mov
push
adc
push
scas
clc
pusha
add
movsl
mov
es
rorb
in
call
push
decb
imul
add
push
mov
clc
test
or
mov
and
cs
inc
sbb
push
je
push
test
test
ljmp
and
bound
sub
jecxz
in
orb
push
jns
cmpsl
rorb
push
jg
sbb
testl
xorb
mov
mov
jecxz
adc
fldt
stos
mov
test
aaa
hlt
fcmovnb
adc
fidivl
xor
mov
sub
rorl
xchg
mov
pop
das
cs
cli
xor
jecxz
fnstenv
inc
jl
cmpsl
sbb
pusha
mov
inc
pop
ds
cmp
sbb
sbb
adc
fs
or
mov
rcll
jp
repz
jl
mov
and
push
cs
add
lods
stos
xor
pusha
and
enter
out
lret
inc
dec
add
jmp
and
dec
aad
push
add
push
sbb
fwait
rdmsr
mov
and
pop
lret
mov
inc
int
lea
mull
pop
adc
pop
loope
mov
hlt
outsl
xlat
push
dec
loope
jnp
pop
mov
mov
ljmp
mov
lods
daa
stos
adc
pushf
stos
push
mov
mov
ret
adc
mov
stc
push
xor
cli
faddp
push
fnstcw
xchg
out
xor
mov
mov
pusha
ljmp
dec
or
or
les
scas
scas
mov
and
mov
pusha
das
call
push
mov
jnp
sub
add
adc
movsb
outsl
loope
pop
jns
ret
out
push
cld
cs
fldenv
fisttpl
ds
shlb
adc
inc
dec
bnd
xchg
sbb
mov
pop
sbb
js
add
push
enter
mov
mov
push
add
pop
lret
add
pop
xor
insb
xlat
les
jo
lds
std
xor
pop
lds
cli
jnp
jecxz
mov
hlt
push
pop
sub
fcoml
jns
mov
fcompl
lock
daa
setl
mov
outsl
xchg
stos
sbb
in
std
out
cmpsb
xor
scas
aas
jno
jg
and
fsubrs
jp
mov
cli
lock
mov
sbb
loope
dec
jns
repz
jmp
jle
or
jne
jns
xlat
loopne
mov
out
dec
cs
jp
loopne
adc
test
xchg
fdivr
dec
add
or
inc
in
mov
cmpsb
adcl
jl
cwtl
sbb
loopne
xchg
add
pop
cwtl
mov
adc
mov
dec
add
stos
ret
fyl2xp1
cmp
loopne
arpl
cmpb
rcrl
sub
mov
sub
mov
xchg
add
pop
dec
ret
cmp
cmp
loop
inc
xlat
xorb
jmp
push
sub
push
insb
mov
mov
faddl
rolb
js
scas
mov
push
and
xchg
add
push
xor
push
sbb
dec
lcall
xor
dec
push
pop
push
pop
aad
push
movsl
xchg
mov
push
out
lods
ret
popa
sti
or
insl
mov
mov
aad
outsl
and
into
mov
mov
sub
fidivrl
popfw
stos
xchg
mov
clc
adc
and
mov
mov
inc
mov
pop
ja
mov
and
int3
loop
and
sub
mov
pushf
ret
push
pop
ds
cli
pushf
mov
cld
sbb
fcompl
scas
adc
mov
lds
cld
xor
push
orl
nop
aaa
pusha
pop
jg
mov
sbb
into
pop
and
js
clc
lods
jg
xchg
add
jns
daa
aas
push
cltd
outsl
add
fldl
inc
imul
fisubrs
xchg
ljmp
shrd
or
lock
xor
cmp
in
imul
sbb
inc
sub
or
sbb
rolb
in
jmp
popf
sbb
pop
fs
rorl
mulb
test
popf
mov
mov
sbb
fildl
cs
fnstcw
nop
rclb
aaa
pop
jmp
add
in
stos
cmp
cs
xchg
pop
arpl
add
scas
cmpb
add
mov
movsl
jecxz
sub
in
mov
dec
mov
mov
pusha
pusha
mov
cmp
dec
ds
test
ss
cli
ljmp
lods
jmp
std
fnstcw
pop
xchg
cmp
enter
or
stos
inc
sbb
pop
pop
xor
shlb
fucomi
pushl
pop
mov
rorb
es
cmp
shrl
mov
lods
lea
test
jmp
fimull
push
inc
repnz
or
adc
sub
rcl
insb
out
int
jp
dec
adc
shrb
outsb
clc
mov
sti
test
dec
or
xchg
cld
icebp
ret
inc
mov
xor
cmc
xchg
sub
mov
call
push
mov
mov
imul
pop
outsl
inc
andl
sahf
dec
or
mov
adc
cmpl
adc
cltd
sbb
bound
pusha
sub
scas
ljmp
lods
data16
test
insb
lret
shlb
enter
incb
xor
sub
jo
roll
jnp
std
orb
sub
test
mov
pop
push
or
sub
mov
push
xor
aaa
jecxz
aaa
fcomp
xchg
mov
sbb
aad
mov
sti
push
xor
out
sub
enter
pop
fdivr
jb
xchg
roll
or
clc
out
mov
loope
mov
test
js
adc
push
es
dec
push
mov
dec
cwtl
cmp
in
stos
lods
ret
adc
sub
inc
fists
or
jb
test
repnz
mov
aad
pop
movsl
or
xchg
jl
mov
mov
ret
push
push
lahf
mov
pop
jge
hlt
ljmp
cmpsb
das
jl
or
clc
subb
hlt
pop
and
xchg
xor
or
jge
pushf
mov
or
not
call
pusha
loop
push
adc
orl
mov
stos
int3
and
es
inc
xchg
out
add
cltd
fldenv
lds
adc
pop
outsl
sub
mov
xchg
pop
ljmp
loope
xor
mov
int
cmp
enter
push
lock
cmp
cmpsb
fbstp
mov
xor
and
adc
xchg
mov
clc
lods
xchg
ret
adc
cs
lock
mov
or
mov
pop
adc
pusha
clc
or
mov
out
js
nop
cs
in
adc
adc
or
cmpsl
loope
out
hlt
or
mov
dec
loop
loop
mov
enter
jg
rolb
test
out
cmp
xchg
or
mov
idivl
add
sbb
push
stos
xchg
push
repz
dec
lods
cmp
aam
divl
icebp
fsubr
push
and
sarl
sub
mull
pop
or
mov
das
jp
loope
mov
sub
je
jg
mov
hlt
mov
push
call
jno
insb
push
outsl
jbe
cs
sub
xor
sbb
sbb
mov
push
mov
and
pop
push
cmp
jp
pop
gs
xchg
fwait
sahf
sbb
fbld
ffreep
arpl
sub
or
cmp
sbb
jl
fnsave
cwtl
or
add
fcompl
or
push
sub
icebp
ljmp
and
jne
xor
cmc
dec
push
push
sti
sarb
mov
subb
mov
add
bound
pop
icebp
stos
js
add
fs
jb
cmpsl
hlt
dec
jae
aas
subb
dec
push
fistl
cmp
call
adc
mov
cli
dec
stc
lock
cli
lods
pop
pushf
jge
pop
mov
xchg
shrb
rolb
cli
cwtl
addr16
adc
gs
add
into
fisubrs
iret
sub
or
lcall
push
aad
or
xor
sub
cmp
cmpb
test
fmull
dec
sub
ja
inc
lahf
imul
adc
in
mov
cmp
loop
stc
loop
sbb
inc
xchg
out
notb
lret
xchg
inc
rcrb
pop
sub
sbb
lretw
mov
mov
mov
or
and
lods
dec
ror
aaa
push
clc
popa
movsb
fisubrs
test
and
lret
jb
notb
push
pusha
adc
mov
mov
inc
jbe
out
mov
out
pushf
xchg
fadds
daa
xor
faddl
inc
fimuls
xchg
or
jle
xchg
dec
cmpsl
or
mov
inc
mov
push
pusha
sti
pandn
inc
add
insb
jbe
mov
rcrb
push
loope
arpl
shlb
lret
aas
cmpl
out
sbb
movsb
popa
push
cmp
mov
test
lock
ret
and
out
xchg
mov
addr16
xchg
jp
movsl
inc
iret
jbe
pop
or
fcomps
fwait
inc
or
jp
push
psubsb
test
mov
std
or
out
scas
mov
sti
mov
mov
sub
fs
sbb
aas
mov
rcll
inc
decb
jbe
ds
add
mov
xchg
xchg
outsb
lock
xchg
adc
mov
mov
repnz
test
call
sub
mov
push
imul
mov
cld
mov
add
and
sbb
pop
ja
mov
mov
jb
insb
cli
sbb
mov
in
sbb
add
add
adc
lock
pusha
lods
fcmovnu
sbb
clc
sbb
sbb
xlat
imul
out
mov
lret
mov
xchg
sbb
adc
cli
pusha
xchg
outsb
out
rclb
lods
sub
mov
nop
push
lcall
inc
lods
data16
lods
fcomps
je
push
mov
icebp
sbb
mov
stos
dec
xor
std
ss
push
shlb
xor
fcompl
lods
nop
push
jecxz
adc
pop
dec
pusha
add
mov
mov
call
leave
push
test
jno
dec
push
mov
sub
arpl
clc
cmp
std
inc
addr16
and
add
addr16
or
outsb
pop
lock
cmp
jge
cmp
cs
or
rorl
xor
leave
call
dec
out
sub
testl
jmp
mov
mov
and
mov
repz
pop
aad
cld
or
mov
mov
les
notl
push
push
pop
xlat
andl
lahf
or
das
push
sbb
push
loopne
push
sub
push
push
cmp
sub
add
mov
data16
lret
sbb
pop
mov
adc
xchg
mov
repnz
or
cs
cmpsb
xchg
sbb
sbb
rolb
lods
int
adc
ds
mov
mov
adc
shrb
jo
pop
fnstcw
and
or
or
test
add
sahf
xchg
sub
sub
ds
pop
xchg
and
pop
sub
stos
aas
xchg
insl
cmp
stos
xor
pop
mov
fwait
cmpsl
sub
insl
xchg
jo
pop
sub
inc
xlat
and
mov
dec
js
mov
jg
cli
xchg
and
cs
cmp
faddp
push
stos
into
xchg
dec
sbb
stos
rcrl
sbb
test
pop
jle
add
shlb
rcll
out
popf
rolb
push
sub
rorl
mov
mov
adc
cmp
fidivrs
in
inc
pop
sbb
jnp
push
je
jg
mul
pushl
and
pop
cmpsb
jb
fcomi
mov
aaa
mov
into
je
jo
out
imul
sbb
clc
xor
jmp
adc
and
push
inc
push
call
jp
inc
insl
lock
les
enter
mov
push
sbb
add
add
sti
stos
test
pusha
sti
jne
je
inc
add
loopne
xchg
xor
and
das
mov
in
jne
add
pop
ds
cmpl
xlat
dec
lret
or
mov
stos
pushf
inc
jo
and
add
outsb
data16
fwait
ror
xor
loopne
test
mov
push
add
push
fidivrl
sbb
pop
push
inc
das
sbb
inc
in
mov
aas
arpl
dec
fucom
pop
push
dec
xor
lds
call
jle
or
mov
pop
or
xchg
rcl
mov
and
pop
in
lret
movsl
mov
aad
and
bound
aam
js
pop
or
and
bound
movsl
inc
out
leave
push
bound
or
cmp
aas
or
push
imul
pop
pop
aad
jbe
adc
sbb
js
inc
sbb
dec
and
xchg
cmp
lea
jecxz
inc
xchg
pop
in
add
cmpsl
mov
nop
popa
scas
push
popf
push
adc
cltd
inc
rcll
bound
lahf
push
out
or
pushf
test
lock
sub
out
cmc
mov
push
hlt
in
sbb
lock
jle
out
or
add
ret
jns
popa
mov
cwtl
mov
fs
loop
loop
sbb
mov
in
js
cmp
aaa
cli
xor
mov
test
das
lea
call
pusha
lds
mov
shlb
push
mov
hlt
push
xlat
add
cmp
mov
mov
mov
xchg
sti
sub
dec
xchg
jbe
xor
pop
push
cmp
pop
jbe
mov
and
ja
sub
std
leave
sub
add
and
cli
inc
pop
adc
jo
mov
mov
fwait
mov
xorb
mov
bnd
frstor
test
jge
je
scas
xchg
xor
repz
out
adc
push
insw
or
mov
pop
ss
jge
out
jp
sarb
mov
hlt
and
jl
push
sub
movsl
fimuls
mov
push
and
incb
cmpb
push
add
shlb
inc
clc
xlat
lds
arpl
icebp
xchg
sbb
inc
pop
xchg
or
push
jns
aad
je
inc
notb
addr16
mov
mov
bnd
jecxz
shrb
mov
les
xchg
into
xchg
fs
pop
mov
mov
pop
fsubrl
dec
mov
sti
fisubrl
mov
je
mov
inc
mov
sbbb
adc
int
adc
inc
ret
std
and
adc
popa
and
jmp
scas
call
pop
out
mov
cld
cwtl
mov
loope
test
adcl
mov
and
outsb
pop
mov
and
xor
shrl
dec
aam
xchg
mov
mov
sbb
mov
inc
cld
jo
push
cwtl
stc
adc
mov
pusha
mov
pop
mov
jg
sbb
lock
in
mov
rcll
sahf
fs
inc
xor
jb
lcall
cmpsb
jo
in
dec
into
in
and
aaa
fwait
jle
push
outsl
divw
insl
xor
ret
outsb
jbe
and
ret
xchg
addb
push
mov
mov
fwait
dec
fiaddl
out
sbb
sbb
pop
sarb
scas
pusha
xor
cmc
jl
scas
mov
mov
cmp
jne
fwait
push
mov
icebp
mov
mov
cmp
jo
aaa
test
add
subl
xchg
lock
mov
enter
mov
in
aad
aaa
add
repnz
es
je
sub
pop
mov
in
lds
ss
dec
movsl
sub
movb
push
ficompl
mov
stos
sub
mov
xor
iret
pusha
jle
dec
fildl
lods
add
inc
xor
cmp
inc
ja
pop
xchg
jae
bound
popa
jg
add
aam
mov
loopne
adc
mov
mov
es
dec
jae
lea
cmp
ret
xor
jle
mov
ds
rolb
push
pop
js
xor
addr16
orl
mov
add
pop
cmc
test
movsb
or
pop
hlt
mov
cwtl
mov
push
jb
fs
xchg
inc
add
aam
sahf
int
ret
inc
sbb
xchg
mov
loopne
sbb
in
sub
jl
notl
or
inc
sahf
aad
dec
sub
add
mov
push
mov
outsb
ds
hlt
test
xchg
adc
lret
ja
or
insl
rcrb
or
jg
push
movsb
mov
cmpsl
add
mov
sahf
dec
mov
hlt
insb
mov
mov
mov
insl
inc
jecxz
not
cmp
fistpl
call
repz
stos
scas
out
ficoms
cmpsb
test
xchg
hlt
jge
pop
push
pushf
push
cmp
mov
push
inc
dec
push
cmpsl
scas
out
pop
mov
push
mov
xorb
movb
or
insb
mov
ss
push
mov
enter
xchg
mov
mov
jg
dec
dec
add
push
clc
lcall
mov
jne
jg
mov
in
je
hlt
add
in
add
fsubs
adc
sbb
mov
lock
cmp
inc
jg
inc
out
jae
nop
cmp
or
mov
ja
rcr
or
mov
mov
sub
cltd
rolb
xchg
cmp
add
out
add
jmp
lcall
in
rol
cmpsb
dec
mov
cmp
and
push
cmpsl
std
ret
push
inc
adc
nop
push
js
nop
pop
ret
sub
aad
dec
loope
sbb
insl
mov
mov
ljmp
rcrb
adc
insl
or
pop
ljmp
adc
mov
cmp
aam
rcrb
scas
sub
or
mov
xchg
icebp
lods
adc
mov
cwtl
out
or
out
idivl
shll
cmp
sub
inc
mov
push
enter
lods
std
loope
scas
add
movsb
imul
daa
out
lock
in
pop
sbb
jnp
mull
sbb
mov
ss
insl
pusha
lcall
cld
sahf
jp
sti
test
insl
bound
jae
cmp
int
pop
icebp
or
loope
mov
loop
sti
call
xchg
sar
sbb
push
data16
mov
out
cmpl
xchg
pop
add
push
add
mov
subl
cmp
loopne
cmp
icebp
cltd
clc
xor
and
test
push
xor
sub
mov
or
fs
jl
mov
outsl
arpl
les
loope
sub
les
pushf
daa
fucomi
pop
jbe
push
les
lea
pop
mov
and
add
sub
std
outsb
mov
xor
fidivrs
pop
push
clc
insb
clc
loop
nop
fistpl
out
dec
xor
les
dec
hlt
cmp
dec
pop
cmp
and
and
loopne
inc
ret
in
dec
sbb
jle
call
repnz
adc
test
sets
push
dec
pop
adc
bswap
mov
jae
ljmp
and
aad
inc
in
popf
and
mov
repnz
jb
shr
shll
imul
rolb
scas
bound
call
lds
jo
push
js
ss
mov
loop
or
test
shl
std
in
ror
mov
push
scas
cld
std
popf
and
xchg
sub
xor
mov
loopne
dec
add
jb
cmp
pop
ljmp
mov
adc
cmp
dec
add
test
stos
push
lahf
or
push
adc
mov
xchg
pusha
sub
shll
in
orl
lods
dec
mov
jo
aam
and
loopne
cmpl
ja
scas
int3
aam
mov
add
jne
adc
lret
loop
xor
mov
dec
inc
push
cmp
dec
or
mov
icebp
or
and
cmc
pop
clc
cmp
jno
adc
jns
ret
sbb
cld
loopne
fidivrl
shrb
xor
mov
xor
scas
shl
outsl
and
push
scas
jecxz
push
mov
imul
xchg
mov
int
adc
or
mov
cmpb
inc
icebp
divb
icebp
xchg
fcomps
jle
dec
dec
lcall
pusha
mov
cmpsl
and
jg
insb
add
cmc
rorb
inc
in
push
rcl
ds
dec
mov
aas
and
cmp
lock
adc
bound
lock
cmp
sbb
cmpsb
or
out
fcomps
pusha
jge
popa
out
jmp
push
popl
rolb
push
dec
jl
jb
and
inc
repnz
aas
fucom
add
faddl
xor
add
repnz
rcl
cmpsl
jbe
lock
and
subb
mov
andb
add
push
ret
sbb
cmpsb
mov
bound
fstpl
jle
inc
ret
and
repnz
or
idivl
xchg
adc
add
sbb
mov
jbe
lods
mov
fucomi
fnstsw
adc
adc
jnp
pop
sbb
popa
mov
push
cmpsb
sbb
and
aam
mov
mov
and
inc
and
sbb
aam
pop
out
and
or
pusha
movsl
aaa
inc
pop
rcr
cmp
cli
or
pushf
or
adc
sub
aad
or
sub
cmp
ret
popa
push
mov
jo
shlb
movsb
aad
pusha
loopne,pt
popl
inc
inc
xor
mov
popl
movsb
lret
xlat
adc
lahf
inc
rolb
mov
adc
xchg
out
jae
ljmp
loopne
movsb
out
stc
test
dec
scas
int
out
jp
or
add
cltd
push
mov
dec
sub
sbb
jle
xchg
sub
pop
sti
mov
mov
mov
in
aas
fadds
filds
sbb
dec
shrl
mov
std
xchg
mov
xor
sti
dec
addr16
hlt
pop
popa
sbb
call
inc
cmp
js
ja
sbb
mov
shrl
mov
pop
sub
push
jbe
inc
jg
mov
push
or
push
push
adc
xor
push
mov
stos
rorb
arpl
out
out
adc
nop
cld
sar
repnz
lret
mov
lret
ret
rcr
cli
cmc
stc
aaa
scas
push
xorb
pop
sub
aaa
fmull
popa
outsb
xchg
aas
int3
daa
lods
shr
push
pop
inc
das
ret
sti
mov
inc
jl
imul
jle
lock
sbb
push
in
outsb
mov
jb
in
icebp
outsb
stos
adc
ficoms
js
lock
dec
fs
push
decb
sub
pop
xor
sub
loop
les
sub
ljmp
hlt
or
rcrb
jno
xchg
fcompl
aas
lods
xorb
or
mov
mov
aaa
dec
or
mov
add
push
push
int3
push
icebp
push
outsl
pop
mov
fisubrs
data16
add
lret
jp
jmp
cltd
cmp
inc
insb
sub
andb
test
mov
imul
mov
scas
shrl
add
sti
shl
les
gs
add
test
outsl
fldt
push
js
dec
fisubrs
jnp
and
pop
adcl
cmp
addb
or
dec
clc
jmp
call
add
adc
movsb
add
cmp
cmpsl
xor
pmulhuw
mov
jae
adc
ljmp
aam
movsl
add
aaa
jp
jo
out
inc
push
xchg
sub
je
aaa
lcall
outsl
lahf
sti
cmpsl
sbb
loopne
out
xchg
and
xlat
xor
ret
fdivrl
inc
ljmp
pop
mov
aaa
ljmp
or
stc
push
rorb
mov
or
mov
nop
jmp
adc
rorb
inc
xchg
outsb
ss
xor
adc
xchg
js
pop
mov
les
add
pushf
jne
inc
pop
in
hlt
pcmpeqb
pop
sarl
or
lock
jge
mov
lcall
fwait
arpl
jnp
sub
jb
mov
mov
xchg
dec
je
daa
in
mov
por
stos
test
movsl
xchg
cli
pop
pop
scas
out
mov
jns
js
cmc
fsubrl
jae
jnp
aad
xor
out
pusha
das
push
push
imul
call
pop
inc
xor
cltd
adc
pop
add
sub
xor
lret
inc
je
jge
sti
push
sub
bound
fiaddl
fs
or
or
loopne
scas
stos
pusha
rcll
push
xchg
sub
and
dec
notb
cmp
test
lods
sbb
xchg
pushf
add
jge
xchg
jb
lods
lods
clc
mov
and
hlt
aaa
sub
decb
call
lods
outsb
push
xchg
jp
mov
inc
in
fisttps
roll
test
sahf
fldcw
pop
js
test
push
push
iret
or
movsl
dec
sbb
xchg
push
shr
bound
cmc
pop
repz
pop
jp
sti
rolb
and
lock
dec
scas
sbb
cld
test
pop
sbb
insl
xchg
xor
inc
test
mov
cli
insl
mov
aad
sub
mov
push
cmp
fsubr
lds
sbb
std
fldenv
scas
dec
shrl
mov
cmp
lcall
xchg
aad
pop
fistl
dec
lock
xor
and
jl
mov
cmpsl
mov
inc
xor
fstps
dec
loope
xor
lods
addb
scas
shlb
pushf
scas
out
jp
pop
shrb
mov
scas
xchg
mov
ret
pop
loop
sub
or
or
cmp
jno
ja
movsl
out
fsubrs
sahf
mov
sbb
andl
or
out
lods
aad
cwtl
adc
jp
aad
clc
fimull
cmp
mov
loop
add
icebp
test
jp
and
sbb
cmp
insl
je
mov
in
lar
daa
cmp
insb
inc
cli
fisttpl
dec
sbb
fadd
ja
xorb
loope
add
cwtl
cs
rolb
ljmp
into
mov
pusha
adc
popf
push
sti
lret
loop
dec
jg
arpl
mov
cwtl
inc
add
gs
sti
push
mov
fiadds
dec
insl
jno
or
int3
js
movsl
jge
pop
jo
mov
add
jb
adc
mov
ljmp
shll
push
std
sarb
out
pop
pop
pop
mov
adc
cld
popf
cli
mov
mov
outsb
dec
add
jmp
xchg
jle
cmp
or
xor
and
or
sub
popf
mov
rol
ss
out
adc
bnd
pop
pop
or
adc
pushf
sbb
rorb
jmp
fdivrl
shrb
pop
scas
addl
movsl
add
cmpsb
rorb
lea
push
cltd
aas
inc
test
pop
in
mov
and
clc
sbb
pop
jle
fidivrs
jg
ret
pop
cmp
in
jmp
xchg
sbb
inc
stos
inc
mov
pushf
jecxz
push
data16
jo
xchg
cld
add
test
fcomps
xor
aas
out
xchg
mov
loop
stc
pop
jmp
addb
or
daa
jl
adc
and
inc
ss
adc
decl
cli
sbb
add
enter
push
rorl
adc
mov
test
cmpsb
movsl
sahf
push
inc
mov
scas
call
popa
xchg
pop
add
lods
pop
sbb
sbb
gs
add
cmp
lds
mov
inc
dec
loopne
mov
pop
jbe
cmpsb
sarl
cmp
adc
add
pop
test
add
sbb
push
clc
or
notb
inc
mov
scas
push
inc
mov
lods
mov
cmpsb
and
sbb
push
rcll
push
les
jb
push
popa
cld
in
adc
or
popa
insl
sbb
push
js
mov
jge
push
ljmp
and
xor
sti
sbb
lds
shrb
cs
xchg
or
mov
lods
icebp
jnp
cmp
ret
xor
pop
pop
sbb
mov
ret
into
mov
jmp
mov
mov
repnz
ficoml
pop
out
jns
sbb
pop
cmpl
add
push
out
les
fwait
xchg
xchg
movsb
or
les
sbb
in
clc
and
dec
fidivs
mov
aam
add
outsb
cltd
test
sahf
fildl
sbb
push
xchg
nop
cmc
sub
test
mov
mov
cmp
dec
cltd
scas
in
loopne
sub
cli
fisttpll
int3
jge,pn
fcomip
mov
sub
enter
dec
sub
cmp
mov
mov
nop
ljmp
cmpsb
pop
orb
dec
gs
icebp
inc
pop
push
loope
ds
or
mov
icebp
cmpsl
push
cwtl
gs
shlb
mov
testb
lods
adcb
ret
pop
testb
or
popa
fsubrl
jl
outsb
lcall
ljmp
jb
jbe
in
ret
aam
fucomi
dec
into
ret
testl
adc
mov
and
loope
xchg
ficompl
vmread
cmc
dec
dec
inc
mov
add
and
clc
out
fwait
adc
std
mov
and
bound
cmpsl
add
sbb
lods
mov
outsl
cwtl
add
sub
ss
cmp
sbb
ret
cltd
mov
adc
mov
adc
mov
push
ret
outsl
jo
xchg
iret
jns
js
or
push
fs
xchg
in
cwtl
incl
in
xor
inc
aam
scas
xor
cltd
ret
xchg
je
sub
cmp
or
mov
xchg
xchg
cli
xorb
pop
cmpsb
add
mov
test
pushl
push
dec
adc
js
jle
ret
nop
sbbl
subl
xchg
dec
arpl
sub
add
jbe
push
mov
call
push
incb
les
or
push
pop
dec
push
push
test
push
sbb
xchg
js
repz
xor
sub
dec
insb
imul
rcrl
xchg
bound
icebp
and
loopne
mov
or
js,pn
pushf
adc
pushf
push
hlt
testl
sahf
mov
insb
mov
aam
lds
insb
imul
cmp
add
test
aam
sub
inc
sub
out
fisubrl
clc
push
adc
or
mov
daa
adc
mov
test
jmp
push
push
push
sub
adc
jnp
pop
push
or
aaa
xchg
add
stos
int
or
mov
xchg
sub
and
push
aam
or
int3
cwtl
test
push
mov
cmpsl
data16
adcb
mov
xor
jbe
jbe
dec
cli
push
pop
or
ljmp
or
mov
outsl
sub
mov
sub
loopne
xchg
orl
sbb
in
dec
std
inc
ds
sbb
jb
dec
xor
stos
pop
jecxz
ds
mov
push
push
lods
sbb
sarb
jge
and
adc
inc
push
in
out
les
mov
mov
cwtl
and
dec
fsubr
ret
push
leave
add
clc
fsubrs
mov
sti
mov
jo
dec
cli
push
fs
test
push
repnz
js
adc
js
fldcw
adcl
xor
push
xchg
push
jmp
call
pop
jmp
cmpsb
cmp
icebp
lea
sbbb
mov
pop
or
arpl
mov
sub
mov
pop
mov
out
xchg
jno
out
jge
fnstsw
roll
icebp
mov
mov
xchg
sbb
dec
cmp
ja
or
jmp
shlb
out
lcall
cmp
icebp
xchg
les
mov
mov
gs
and
sbb
lods
fdiv
pop
sbb
lods
mov
in
pop
icebp
push
sarb
repnz
loope
rolb
in
mov
push
loope
pusha
mov
repz
add
ficoms
mov
cmp
xchg
xor
xchg
sub
push
data16
adc
lods
into
and
loopne
adc
push
repz
repnz
ss
cli
test
into
add
add
or
inc
add
adc
inc
mov
or
clc
arpl
adc
cmp
xchg
inc
jno
mov
xchg
lock
inc
jns
int
mov
aad
sahf
jbe
inc
cld
cmp
sbb
fs
inc
in
jo
cwtl
shlb
adc
dec
mov
aaa
test
mov
jecxz
add
push
add
mov
xchg
or
mov
loope
in
scas
int
mov
sahf
cmp
xchg
sub
ljmp
das
jmp
ja
mov
mov
ds
icebp
cli
jns
lods
mov
mov
push
into
aam
lret
and
jno
pop
test
call
push
mulb
das
js
lock
add
or
aas
pop
pusha
pop
pusha
scas
clc
nop
test
pop
xchg
je
les
mov
sbb
subb
inc
push
std
xor
lahf
cmp
insl
cld
jo
sbb
bound
cli
cmp
sti
call
jecxz
lret
push
dec
adc
adc
xorl
push
push
inc
aaa
sahf
xlat
in
xor
ja
js
xor
test
or
mov
adc
pop
jle
mov
rcrl
dec
mov
leave
insb
dec
stos
icebp
push
loopne
or
sbb
jmp
cmc
mov
push
mov
jg
stos
sbbl
clc
je
sbb
xor
outsl
arpl
or
adc
mov
mov
cmp
fisubrl
dec
pusha
xor
mov
add
aad
lret
fwait
or
dec
cmp
movsl
aas
adc
xor
nopl
ljmp
shlb
push
mov
scas
notb
les
and
or
gs
mov
xchg
xor
lock
lock
push
enter
movsb
es
or
in
add
repnz
fcmovbe
ds
push
xchg
dec
lcall
or
icebp
xchg
aad
jge
repnz
pop
and
aam
icebp
aad
jp
ffree
loopne
popf
mov
add
popa
ljmp
aas
or
mov
pop
fdivrl
dec
mov
add
sahf
rolb
outsl
cmc
sbbl
pop
add
lock
xchg
cli
mov
push
ret
mov
inc
lods
sub
mov
sarl
xor
insl
fisubs
or
mov
mov
sbb
adc
add
xor
addl
dec
mov
dec
nop
ss
insl
imul
push
outsb
pop
add
ret
fists
and
inc
scas
jle
mov
and
mov
mov
push
or
pop
jp
inc
mov
and
push
cli
lods
or
dec
mov
jmp
outsb
lahf
cmpsl
xor
cmp
pop
and
outsl
idivb
rolb
ret
mov
mov
stos
cmp
shrd
out
cmp
inc
fistps
mov
int3
lcall
push
arpl
pusha
inc
fisubs
dec
pop
pop
cli
jb
xchg
jle
xor
fadd
fldl
decl
lock
xor
cmp
lds
xchg
js
cmpsl
mov
rclb
popf
mov
les
sub
push
shl
les
mov
lahf
mov
outsb
inc
les
pop
pop
and
dec
mov
lock
xchg
inc
sub
insl
fidivrl
mov
xor
mov
loopne
sbbl
jecxz
jl
dec
xchg
jp
aam
ficomps
xor
push
mov
cmp
add
pusha
mov
inc
sub
push
add
dec
mov
xor
aad
aaa
inc
mov
imul
sbb
inc
or
leave
inc
cmp
test
xchg
lcall
inc
and
sbb
sbb
pop
or
jmp
mov
cltd
push
jae
dec
ret
xor
push
dec
shlb
scas
loop
lcall
jecxz
andb
enter
mov
xchg
icebp
icebp
or
push
pop
jp
or
sbb
dec
dec
or
rorb
cmp
push
sbb
sbb
stos
aad
in
xor
mov
mov
aaa
mov
jbe
and
jbe
pop
adc
dec
sub
push
scas
xor
xor
mov
daa
mov
mov
outsb
addl
insb
cmp
jne
mov
xchg
or
rcrl
lods
mov
out
fs
inc
stos
mov
and
fadd
mov
jnp
loope
mov
inc
add
cltd
jl
icebp
lock
dec
stos
lods
lret
pop
movsb
or
mov
mov
and
out
fs
cmp
push
sbb
std
adc
ljmp
call
movsl
pop
outsb
scas
adcb
ret
and
push
aad
fs
std
push
sarl
loop,pn
cmpsb
hlt
cmpb
test
xchg
aam
mov
mov
aas
jl
stc
mov
cld
xlat
push
arpl
mov
shlb
jl
out
sbb
iret
add
pop
rolb
push
scas
pop
sti
ja
pop
xor
mov
decb
jecxz
lahf
mov
jle
inc
repnz
cli
push
dec
sub
iret
sub
jle
loopne
out
pop
cmp
lock
mov
sbb
cmpb
jno
test
push
orl
mov
aad
or
cmpsb
mov
and
rcrl
inc
test
add
or
dec
mov
aaa
push
fcoms
sub
mov
adc
add
lahf
cli
jbe
and
call
inc
jg
xor
sbb
xor
cmp
adc
aas
outsl
xchg
pop
push
faddp
mov
inc
enter
ret
dec
lods
orl
sub
cmpl
dec
icebp
es
push
lds
and
inc
add
mov
push
ret
and
loop
out
movswl
pop
pop
mov
in
xor
xor
pop
pop
sbb
std
inc
insb
scas
push
pushf
mov
shl
inc
shr
imul
cmp
jg
hlt
push
test
xorl
insl
mov
push
js
cmc
mov
sbb
movsb
or
cli
fidivl
dec
ljmp
xlat
or
pop
adc
pop
sbb
mov
fs
js
jmp
pop
in
mov
mov
cmp
test
stos
adc
ljmp
inc
jbe
loop
lret
cmp
adc
ja
cltd
push
sbb
xchg
push
lea
std
jnp
cmpsb
std
and
repnz
cmpxchg
lds
dec
pusha
xor
ljmp
mov
daa
mov
pop
push
add
in
inc
shll
cmp
in
xchg
imul
and
sbb
cmc
add
fs
in
fimull
dec
add
add
jl
icebp
loopne
push
in
dec
pop
mov
loopne
sbb
inc
les
aas
or
push
in
and
or
aas
fidivl
loope
push
out
dec
fcmovnb
mov
mov
lea
push
repz
xchg
mov
mov
data16
mov
inc
cmpsl
sub
test
jns
push
jae
mov
ret
push
adc
stc
xor
adc
jg
scas
mov
cmp
xor
cltd
popa
and
mov
aas
add
jne
call
xchg
cmpb
jb
lea
sahf
push
pusha
addr16
mov
mov
jp
pop
xchg
movsb
inc
or
mov
dec
push
lcall
les
sub
fdivs
mov
mov
lds
mov
mov
dec
push
mov
adc
das
js
mov
lcall
insb
mov
das
push
mov
xor
push
xlat
jmp
aaa
sub
inc
int3
xor
push
jecxz
push
jp
mov
adc
mov
push
imull
jg
ret
mov
sbb
stc
sbb
pshufw
sub
ljmp
mov
push
push
xor
pop
mov
stos
mov
inc
imul
shll
lods
pop
and
and
les
sub
jbe
pop
cmp
fistl
mov
movb
lret
pop
sub
clc
adc
mov
not
or
pushl
dec
stos
xchg
inc
pop
fucom
cli
mov
and
cli
test
inc
enter
mov
and
ficoms
or
pop
pop
push
in
imul
dec
mov
in
or
call
stos
mov
scas
into
fstl
sti
jg
and
add
stos
inc
push
sbb
aaa
fwait
mov
in
mov
mov
outsb
jecxz
inc
dec
sarl
insb
mov
in
ljmp
sbb
sbb
jo
pop
ret
out
push
cwtl
xlat
mov
pop
mov
xchg
xchg
jb
loopne
push
or
imul
add
imul
push
jp
mov
cmc
decb
mov
sbb
push
add
pop
and
sti
cmp
gs
in
xchg
pusha
int3
or
and
jmp
lods
mov
shlb
sub
hlt
cmpl
jle
xchg
lcall
jae
mov
stos
icebp
pusha
pop
lcall
mov
mov
mov
push
mov
cmp
adc
adc
mov
inc
dec
out
fs
js
pop
test
mov
or
push
pop
adc
push
fiadds
mov
mov
fs
pop
pushf
andb
jg
int3
pop
icebp
dec
fwait
sbb
and
sbbl
js
mov
std
push
pop
jbe
mov
fbstp
mov
adc
ljmp
fisttps
lock
pop
xor
xlat
lahf
pop
or
leave
cmc
data16
push
leave
sbb
das
add
xor
adc
loope
je
pop
pushf
mov
adc
and
aam
ss
inc
and
scas
jmp
inc
mov
fadd
or
xlat
dec
fwait
add
xchg
in
add
movsl
mov
rolb
adc
mov
push
jp
mov
mov
sbb
sub
inc
mov
push
les
add
mov
repnz
adc
inc
mov
and
mov
adc
jle
jnp
and
jne
ret
aad
push
in
inc
lahf
mov
sahf
mov
jp
push
pop
insb
dec
cmp
sub
push
scas
or
fdivp
ret
inc
test
addb
mov
cli
push
mov
mov
jbe
and
or
or
fcomip
jo
lock
movl
add
add
sub
daa
test
fmull
into
out
sub
xor
xchg
pusha
jae
fdiv
xor
xor
jb
xor
or
lea
xchg
idivl
mov
leave
es
dec
test
inc
add
jecxz
mov
inc
insl
cld
mov
hlt
add
loopne
rorb
mov
xor
loopne
pop
jns
inc
imul
clc
inc
ds
out
mov
inc
std
add
rolb
loopne
add
inc
ss
js
call
in
pop
mov
nop
int3
or
data16
arpl
fsubrp
adc
mov
cltd
clc
test
push
test
pop
jbe
jns
cwtl
mov
in
inc
ss
aas
add
xchg
test
ds
loope
icebp
sbb
pop
shll
push
mov
mov
out
movsb
cmc
das
mov
jle
push
xchg
dec
inc
sbb
lret
sub
pop
subl
jne
cwtl
jo
or
inc
xchg
shrb
fisttps
jge
mov
sub
stos
js
push
lock
imulb
jp
inc
call
ret
jp
or
push
mov
or
popf
inc
mov
rolb
sahf
lock
sub
adc
push
rcl
pop
lods
push
in
cmp
xor
mov
jmp
popf
mov
and
and
inc
loopne
insl
flds
adc
out
sub
cli
mov
data16
sbb
pop
out
lock
test
sti
add
cwtl
lcall
mov
icebp
jnp
stos
and
xchg
mov
dec
lock
jl
and
push
jbe
sub
in
sub
dec
xchg
mov
or
test
pop
add
into
or
push
push
loopne
or
lret
pop
cmc
mov
cmp
jle
adc
jo
fistps
fwait
sbb
push
adc
into
orl
pop
out
inc
and
lods
in
sbb
roll
enter
add
inc
xlat
xchg
and
rorl
aas
das
add
adc
sbb
call
cli
cmpsb
mov
outsl
ja
mov
fcomi
pop
lret
jae
in
lahf
inc
outsl
mov
sahf
mov
sbb
sarb
jle
imulb
pop
cs
pusha
or
je
lock
in
jbe
push
push
push
or
cld
sub
pusha
loop
lods
mov
sahf
mov
roll
in
fcoml
loopne
movsl
mov
sbb
push
sbb
cld
add
mov
subb
outsb
or
inc
pop
add
ret
push
out
xchg
adc
lock
jg
adc
mov
sbb
test
sbbb
inc
cwtl
mov
stos
test
push
xor
lret
or
xlat
pop
lret
out
mov
jl
add
call
inc
out
cmp
mov
push
mov
loop
cmpsb
or
sbb
xor
add
adc
leave
sub
pop
mov
sti
clc
add
push
pop
push
and
fsubrs
aam
out
orl
pop
mov
xchg
jbe
call
icebp
jnp
jge
inc
jb
lret
cwtl
vmovaps
sbb
ficoml
stos
aam
aaa
stos
add
cwtl
sub
mov
add
push
jp
push
jp
mov
mov
sub
jb
fstps
mov
ret
mov
fisubrl
jo
mov
pop
mov
das
sarb
pop
rorb
pop
fbld
adc
add
or
es
insb
push
mov
mov
les
push
inc
mov
and
push
or
lret
mov
in
fldt
mov
roll
adc
add
or
jmp
xchg
xor
out
aam
jns
pop
adc
hlt
jmp
sahf
xchg
xchg
test
loopne
jno
addr16
lret
jp
pop
cmc
loope
cld
dec
sbb
push
xor
loope
cvtps2pi
xchg
test
xor
xor
xor
push
adc
aas
int
mov
subb
inc
push
mov
bound
push
push
sarl
loopne
int
lods
mov
add
scas
xchg
jle
aad
test
pop
std
add
repnz
xchg
add
cmp
fsubrs
xor
pop
pushf
sub
icebp
loopne
sbb
cmp
xchg
mov
js
in
jo
fildl
push
dec
xchg
add
adc
push
shrb
dec
lods
sbb
jo
repnz
sub
inc
sbbl
ret
mov
aad
mov
clc
cltd
inc
lods
lret
add
pop
js
mov
sub
cs
roll
mov
sub
sahf
insb
into
out
cltd
icebp
adc
mov
fstl
mov
es
rcr
sbb
lcall
sbb
mov
cmp
sub
push
sahf
pop
fadd
pop
mov
and
mov
adc
iret
and
dec
pop
dec
mov
adc
sub
rcrb
es
outsb
or
xor
ret
dec
fcompl
push
inc
mov
and
jnp
cmpsb
cmp
test
dec
outsb
and
and
imul
jbe
push
xchg
pop
push
xlat
rclb
and
outsl
ss
out
filds
repz
lret
fwait
jo
lock
pop
add
test
mov
sbbb
insb
movsb
sub
int3
test
mov
lretw
dec
mov
ss
and
or
imul
scas
pusha
xchg
outsl
and
imul
rcrb
jnp
xchg
shrl
jns
jae
outsb
push
push
je
js
lods
aas
cmpl
xchg
sub
testb
mov
and
sbb
pusha
scas
add
dec
lahf
cmc
repz
lock
push
out
out
std
add
test
bnd
testl
dec
popa
pop
adc
add
fsubr
and
cmp
sub
insl
mov
jl
jg
mov
cmpsb
push
or
fadds
and
ljmp
sub
repz
add
pusha
add
xor
outsb
adc
lods
cli
jge
lods
mov
or
sub
mov
mov
out
test
rcll
daa
shlb
je
loope
mov
pop
popf
inc
shl
out
mov
cld
pop
insl
aas
movsb
add
fidivs
imul
jmp
fcomp
push
stos
or
add
inc
xor
jle
test
mov
clc
or
addb
mul
pop
les
ja
or
xor
test
loopne
sub
add
test
nop
pop
jl
test
cld
sar
cmp
gs
loop
mul
pop
cltd
rcll
jge
daa
jmp
adc
lds
mov
push
dec
test
mov
jbe
cltd
inc
daa
jne
notb
sahf
push
mov
jnp
inc
push
sub
out
inc
out
jmp
or
mov
sub
mov
in
push
mov
lods
push
or
sub
jecxz
stos
jl
pop
test
mov
add
lcall
lods
cs
or
cmp
ss
mov
sbb
add
push
sub
sub
mov
sarl
insl
push
xor
cmp
mov
mov
mov
out
pop
sub
cmp
mov
cmp
imul
popf
cmp
pop
pusha
mov
inc
or
pop
push
mov
stos
push
mov
or
add
inc
push
rcrl
loop
ret
ds
pop
mov
or
out
loopne
push
jge
inc
push
ds
mov
ds
xchg
or
pop
lods
pusha
cmpb
add
fs
mov
imul
pushf
iret
sbb
push
pop
xor
sub
cmp
xor
jns
loope
shrl
xchg
or
mov
faddl
aam
loopne
daa
std
pusha
sub
hlt
push
add
push
loop
loop
cli
or
push
test
and
mov
in
in
push
mov
fdivl
push
sbb
pop
or
xor
test
xlat
lret
sub
jns
or
push
mov
addr16
push
push
push
push
xchg
dec
sub
sbb
stos
mov
adc
jp
sahf
push
mov
fisubrs
aam
sbb
pop
jle
inc
pusha
push
cs
lcall
ljmp
xchg
jnp
add
cmp
jnp
sahf
mov
sbb
push
in
push
add
jbe
mov
gs
pop
mov
addb
push
sbb
jge
adc
hlt
dec
add
adc
aaa
cld
jg
sbb
inc
pop
idivl
xorb
sbbl
int
or
jno
pop
and
cmp
jnp
imull
cli
mov
jae
aam
add
rcrb
push
insl
pop
std
popa
mov
jnp
inc
into
sub
in
pop
inc
das
hlt
out
jecxz
sbbb
into
sub
daa
sarl
adc
imul
sub
mov
mov
dec
sti
cmp
mov
cmc
pop
ss
rorl
push
les
in
inc
push
dec
push
movsl
insb
push
pusha
jno
in
and
in
push
push
or
xchg
aad
lcall
mov
sub
adc
mov
push
cmpsb
cmp
pushf
xchg
cwtl
xor
xchg
incb
lret
push
sbb
pop
sub
adc
lea
popl
and
daa
or
aas
pop
hlt
testl
test
mov
sbb
out
jbe
lock
mov
pop
enter
call
test
hlt
clc
and
aam
adc
adc
lods
cmp
sti
leave
shl
xor
test
cmp
mov
out
loopne
inc
ret
xor
sbb
insb
add
add
mov
jle
inc
mov
test
jp
push
and
jno
repnz
xchg
and
and
sbb
pop
outsb
inc
xchg
add
sbb
mov
dec
mov
mov
dec
cs
mov
mov
es
push
insl
cli
fadds
adc
cmc
add
jo
xlat
cmp
push
xchg
cmp
movsb
int
sbb
jae
pusha
xor
cmpsl
out
icebp
pop
cli
push
jne
mov
pusha
or
inc
rolb
pop
repz
inc
addr16
orb
push
in
pop
call
xor
adc
dec
mov
pop
daa
mov
call
adc
xchg
out
pop
pop
lods
and
mov
mov
cld
rclb
push
push
mov
pushf
stos
ja
add
mov
pusha
inc
lcall
clc
jmp
sbb
aam
sbb
andb
or
mov
push
sbb
pop
jle
mov
jge
or
mov
and
hlt
xor
aaa
and
jmp
mov
ja
mov
add
cmp
lds
jo
scas
push
push
stos
aam
outsl
mov
push
adc
pop
dec
push
jle
push
mov
xchg
xchg
sbb
neg
outsl
add
shlb
adc
sbb
js
add
seto
inc
stc
fisubrs
or
sbb
sarb
and
cmp
fsub
clc
dec
idiv
mov
test
adc
mov
sub
outsb
sub
fbld
or
clc
and
addr16
mov
sbb
je
jo
subb
ljmp
sbb
test
push
mov
orb
fadds
and
icebp
aaa
gs
imul
test
lahf
cmp
inc
in
cwtl
jbe
cmp
clc
jo
das
sbb
fists
jl
lods
or
orl
xchg
jo
add
and
ljmp
in
add
aam
push
or
loope
inc
clc
daa
mov
adc
add
rorb
mov
xor
imul
pusha
xchg
js
mov
push
cmp
lcall
adcl
and
xor
jno
repz
jg
into
cmp
pop
add
inc
movsl
out
pop
add
mov
int3
add
jp
push
pop
popf
add
iret
iret
rcll
mov
stos
rcll
movsl
sarb
ret
outsl
sbb
sbb
js
cs
imul
push
into
add
sub
jp
and
push
js
aaa
mov
adcb
push
lods
mov
and
push
mov
shll
cmp
adc
pusha
mov
sub
call
fisubs
in
sbb
add
mov
clc
xchg
jle
mov
fs
or
add
push
mov
cmpb
inc
pop
xchg
dec
lret
dec
push
enter
adc
stos
mov
shlb
mov
pop
add
loopne
inc
push
dec
jp
add
xor
and
or
filds
add
out
cli
cmpsb
movsb
lods
xchg
cli
and
ret
bnd
rolb
sub
pop
mov
bnd
push
add
or
sbb
or
rorb
adc
stos
sahf
jne
sbb
into
in
adc
shll
dec
movsb
icebp
fimull
das
add
pushf
insl
fcompl
xor
xor
cmpsb
jp
aam
hlt
dec
out
fnstsw
mov
mov
jmp
sahf
pop
add
add
scas
in
jg
ret
scas
lock
push
jno
imul
mov
fwait
scas
mov
mov
cld
xchg
add
pop
int
test
ret
aam
prefetch
or
scas
aas
mov
jo
add
lods
dec
mov
cmp
aad
mov
std
mov
loop
call
mov
das
ss
fcom
mov
xchg
adc
pop
or
adc
push
add
fwait
xor
pop
push
dec
iret
add
ret
popa
in
jle
cmp
push
adc
jecxz
into
or
xchg
call
cmpsl
inc
enter
fmull
roll
movsb
and
or
jp
call
mov
call
push
cli
fldenv
loope
inc
sub
test
enter
and
jae
push
xchg
jecxz
outsl
sub
test
cwtl
test
movsl
jl
lods
std
inc
cli
fdivr
outsb
es
fiadds
mov
jbe
mov
cli
adc
fdivl
pop
pop
xchg
mull
clc
shlb
jl
addr16
xor
fsub
inc
mov
icebp
lock
ret
sarb
add
xor
add
or
out
clc
lods
in
add
fisubs
mov
arpl
fldenv
loop
lods
or
hlt
inc
fsubrl
mov
ret
push
lcall
jmp
mov
sbb
push
mov
pop
or
xchg
lret
out
xor
mov
dec
inc
fsubrl
aam
add
inc
das
push
jg
mov
push
dec
ret
or
push
mov
xor
stos
add
ljmp
imul
out
adc
mov
adc
lds
sub
xchg
out
cli
mov
test
les
lods
pop
cld
and
mov
adc
out
sahf
xchg
jg
cmc
dec
push
popf
pusha
push
push
xor
shrl
adcl
js
inc
and
gs
jg
add
cmp
movsb
pop
pop
cmp
xchg
out
push
movsb
int3
add
sub
fists
lret
adc
mov
push
pushf
sub
jl
xorb
ficoms
imulb
or
das
pushf
nop
xor
movsl
jmp
cli
loope
adc
add
and
adc
push
ljmp
push
clc
push
xor
push
and
flds
ljmp
shl
out
xchg
ret
aas
or
cld
pop
les
lods
push
mov
xchg
pop
inc
aas
shll
aas
lea
jae
dec
jl
les
sub
adc
push
push
or
mov
orl
loopne
clc
xchg
pusha
jl
sarb
loopne
jne
sub
sarl
and
ss
push
daa
xchg
push
dec
int3
sbb
cltd
mov
cld
adc
adc
push
int3
mov
inc
mov
shll
push
test
add
sub
or
insl
sub
outsb
add
adc
sbb
gs
incl
mov
cs
sub
cmp
loop
jmp
xchg
loopne
ljmp
fisubs
ljmp
sahf
jle
lret
mov
mov
push
stc
cli
pushf
push
sub
and
and
mov
pop
fucomip
and
lods
push
and
fadds
cmc
lret
ret
out
jno
dec
pop
pop
sub
adc
sbb
or
jne
add
lcall
cmp
dec
clc
cmpsl
xor
cs
push
sbb
pushf
or
in
imul
ljmp
repz
aam
test
add
sbb
in
bound
jg
inc
mov
lcall
sarl
out
jle
fsubr
sbb
jae
cmp
leave
add
in
push
sbb
xchg
aaa
pop
lods
or
lea
pop
or
fldenv
or
mov
clc
into
test
loopne
cld
fistps
cmp
inc
push
jmp
pop
jbe
inc
mov
aam
sbb
pop
cmp
jg
pop
dec
add
add
cmp
movsb
push
fwait
xchg
mov
xor
mov
pusha
fadds
adc
cmp
push
in
in
mov
mov
sub
or
out
sbb
fnstcw
std
add
inc
aad
xor
xchg
xchg
mov
in
rorb
js
pop
mov
fistps
fldl
mov
add
cwtl
jl
repnz
dec
fs
dec
iret
push
out
lea
mov
out
mov
sbb
sahf
femms
xor
jmp
jnp
and
sbb
test
js
shll
push
jp
outsl
mov
sahf
nop
jb
sbb
mov
push
pop
add
mov
push
mov
lods
cmpsb
mov
orb
popa
loop
cs
rcrb
add
adc
lcall
dec
int
in
lea
jae
ret
je
dec
mov
sub
sbb
pop
loope
aad
cmp
out
mov
xor
adcb
push
repnz
inc
nop
mov
pusha
push
ret
sub
addb
lret
std
inc
or
push
out
or
cmpl
mov
clc
lods
xlat
inc
push
xchg
sbb
dec
and
adc
cmpsb
push
mov
mov
das
xor
in
and
xor
pop
jno
fistps
add
insb
mov
adc
pusha
and
jns
jecxz
out
subl
or
mov
pop
mov
fidivrl
nop
mov
xlat
xchg
push
pop
pushf
imul
lahf
cmpsl
aas
cmpsb
add
dec
jp
mov
or
adc
lahf
mov
ja
shlb
test
mov
fisubs
lods
jge
jge
jne
inc
jecxz
subb
pop
jge
add
dec
cmp
movsb
incb
and
sbb
lret
pop
bswap
mov
mov
sahf
and
and
pop
or
jb
nop
insb
add
add
dec
cmc
xchg
xor
cld
push
push
jne
jle
dec
cwtl
lcall
push
dec
xlat
nop
push
popa
adcb
stos
test
call
lds
inc
stos
add
clc
lea
mov
push
sbb
imul
jle
negl
arpl
or
loop
inc
hlt
into
stos
mov
js
out
push
dec
mov
ds
sbb
and
sbb
adc
das
sub
test
and
cmpsl
mulb
jo
ret
mov
fwait
dec
int3
andl
not
aad
enter
sub
ss
pop
stos
jbe
scas
inc
clc
pop
push
or
mov
repz
inc
pop
and
and
jle
sbb
int3
push
hlt
dec
inc
pop
inc
rorl
sub
aam
fsubrl
lods
add
mov
add
mov
mov
jmp
test
aam
sbb
test
mov
decb
jbe
sbb
ljmp
out
mov
ret
testb
pushw
lods
aam
dec
mov
or
pop
stc
jl
sbb
add
mov
inc
push
loop
or
aam
fisttpl
popf
push
mov
repnz
cmp
js
cmp
icebp
inc
jl
stos
imul
loop
jbe
insl
push
dec
dec
lret
inc
mov
test
sub
aas
cli
pop
orb
cmp
scas
mov
jecxz
orb
stos
and
outsb
jle
mov
fists
mov
jg
out
fadds
sarb
sbb
jecxz
out
int
pop
outsb
jle
in
mov
jecxz
bound
ss
adc
filds
loopne
jp
movsb
or
test
pop
rclb
fs
dec
out
push
test
rolb
arpl
hlt
inc
lcall
xchg
and
sbb
insl
rcl
arpl
in
cmp
sub
mov
push
shr
data16
das
jo
out
notl
fistl
fs
jmp
mov
in
inc
inc
jns
mov
add
xor
enter
xor
lock
lret
sub
bound
pcmpgtd
leave
xor
xor
mov
fcmovnbe
out
mov
pop
mov
xor
rcrl
mov
das
sarb
cli
pop
jmp
insb
jp
repnz
adc
jo
scas
imul
xchg
mov
mov
lahf
fwait
imul
cmp
mov
stos
pop
pop
insb
mov
inc
pop
faddp
cmp
shll
pop
int
out
pop
mov
outsl
clc
inc
mov
add
call
shrl
imul
aas
imul
ret
fisubs
mov
push
jge
push
dec
dec
cmp
and
add
out
sbb
dec
sbb
push
jl
pop
sbb
pop
loope
pop
add
lock
push
jl
jno
loop
out
jg
in
out
sbb
push
rsm
addb
xor
xor
aad
test
aaa
xchg
xchg
nop
add
loope
loope
jle
mov
pop
or
hlt
or
mov
inc
lret
push
sbb
jge
lds
lcall
cwtl
adc
cwtl
mov
bound
aaa
sub
add
inc
mov
xor
xchg
mov
jb
adcl
lods
add
test
xor
dec
add
ljmp
push
orb
cmp
jbe
jle
repnz
xchg
sahf
sub
insb
xor
xchg
lock
cmp
mov
movsl
jmp
mov
or
lahf
mov
iret
mov
mov
xchg
cmp
out
xchg
jp
push
in
jmp
loopne
or
jp
cmpsb
push
in
mov
fs
dec
xor
shll
jo
inc
mov
mov
icebp
xor
jl
out
cmp
mov
shlb
ja
xchg
or
insb
mov
imul
mov
cmpsb
sub
adc
in
xor
lds
sarb
fs
lods
sub
jbe
mov
mov
lcall
dec
out
loopne
push
jle
dec
rorl
lds
mov
popa
mov
fisubs
push
mov
stos
push
ja
mov
mov
dec
cmpsl
cmp
and
push
xor
add
lock
or
je
mov
ret
cmp
mov
mov
sub
int
pusha
xor
inc
sbb
int
movsl
sub
gs
sub
fisttpll
dec
test
mov
test
add
pop
mov
test
jg
sti
pop
dec
cmp
adc
pop
fstl
hlt
sbb
push
hlt
dec
cmp
es
cmp
scas
jbe
cs
scas
pop
mov
popf
in
pop
adc
sub
push
inc
mov
inc
shlb
dec
loopne
cwtl
and
scas
mov
stc
loope
cltd
test
out
mov
xchg
pop
inc
sbb
mov
xor
lods
jp
enter
rorb
das
jb
stos
es
lods
sub
xlat
mov
or
pop
dec
inc
fisubrl
stc
mov
inc
sub
inc
mov
push
xor
push
ljmp
pop
les
fmull
call
movsb
mov
arpl
test
fwait
call
xor
adc
add
sub
mov
test
scas
xchg
ss
pop
and
cmp
in
icebp
add
jne
sub
mov
sbb
clc
lods
scas
lret
mov
pop
aam
shrl
or
popa
ja
lock
lcall
loop
pop
pushf
pop
insb
out
jmp
mov
daa
mov
fadd
push
mov
mov
repz
pop
jmp
cmp
lret
adc
cmp
jle
pusha
xchg
and
insb
sbb
xor
shrl
inc
jbe
loope
dec
icebp
xchg
scas
lcall
inc
pop
in
clc
xchg
rcr
pop
ja
mov
push
pop
mov
and
shlb
xor
stc
shlw
jecxz
je
sbb
cmp
mov
inc
ss
mov
adc
cmp
cmpsb
jle
push
mov
fs
or
sar
add
shll
into
sbb
jne
inc
ficomps
es
pop
sub
push
in
jle
pop
mov
sub
push
sbb
jne
hlt
xor
xchg
inc
add
shlb
mov
add
or
shlb
out
ret
rol
xchg
and
or
out
cmpb
out
ss
mov
inc
mov
mov
movsb
lock
sub
daa
stos
xchg
imul
mov
dec
or
fs
mov
jecxz
call
mov
int
xchg
wbinvd
pop
fisttpl
push
or
stos
andb
dec
xor
mov
pusha
add
rol
jecxz
lods
xchg
insl
fwait
mov
or
jl
inc
jno
adc
clc
jbe
subb
sbb
cli
in
adc
outsb
insb
ret
jl
xchg
mov
inc
rclb
push
cmp
push
adc
movl
or
xor
inc
xorb
push
inc
fadd
stc
repnz
adc
mov
in
pushf
repnz
psllq
imul
mov
sarb
dec
call
stc
aad
aas
and
nop
fidivl
mov
cltd
stc
inc
jnp
mov
decl
mov
mov
pop
cmp
pusha
decb
hlt
mov
aad
cltd
sbbb
add
andb
lods
xor
fisubl
push
push
push
pop
xor
fbld
sbb
pusha
mov
sub
sbb
les
pop
sub
push
push
lret
subl
lods
outsl
pushf
repnz
and
ret
inc
inc
icebp
xor
clc
jge
mov
jl
stos
int
push
add
inc
sub
sbb
cs
pop
lahf
jb
testb
xor
outsl
jno
mov
adc
dec
xor
dec
sbb
ljmp
mov
mov
scas
popf
jecxz
adc
sub
repnz
push
and
push
mov
add
mov
pop
xor
push
inc
js
out
enter
and
dec
movsb
xchg
popa
push
fcoml
mov
jo
dec
hlt
adc
es
test
jp
mov
dec
mov
hlt
or
insl
sbb
cmpsb
fisubrs
insb
mov
rorb
movsb
lods
xchg
mov
stos
das
pusha
pop
cld
jg
pusha
cwtl
aam
and
add
add
push
sbbb
mov
imul
mov
sbbb
in
shlb
sub
add
into
or
leave
lahf
push
idiv
push
push
and
inc
sbb
iret
or
sbbb
lahf
dec
or
sbb
cmc
loop
inc
bound
out
push
xorb
xchg
lea
shlb
out
ljmp
push
mov
sbb
es
fninit
dec
in
and
sbb
fwait
and
popa
sub
imul
xorl
imul
lods
xorb
incb
arpl
cmpsl
add
xor
out
mov
pop
fwait
and
adc
orb
mov
mov
jl
cmp
mov
push
add
test
imul
out
or
mov
and
mov
sub
ljmp
roll
pop
shrb
mov
and
xchg
pusha
faddl
aaa
jecxz
pop
inc
pushf
xor
bound
lcall
cmp
cmpsl
popf
movb
in
inc
inc
cmp
dec
ds
scas
movsl
lods
mov
repz
cmp
push
push
roll
inc
jb
push
js
jbe
daa
mov
pop
inc
sbb
iret
mov
mov
mov
and
add
popa
cs
loope
fnstsw
cli
pop
mov
lea
ret
fdiv
hlt
mov
aaa
dec
lock
test
mov
sub
mov
cli
ljmp
rorl
cmp
aaa
cmp
in
roll
adc
fmuls
fstpt
orb
xchg
adc
js
jl
jnp
pop
cld
hlt
jne
sub
test
or
inc
cli
aaa
ret
outsb
lock
pop
rolb
jne
jo
pop
cmpsl
xorl
add
mov
mov
mov
cmc
loopne
push
adc
loopne
pop
in
pop
pushf
imul
lret
jp
aad
lea
addr16
cmp
and
ljmp
jae
cmp
push
sahf
iret
rcrb
mov
out
adc
imul
fwait
push
pop
scas
lds
jo
fmull
in
xchg
mov
in
das
jmp
out
rolb
in
xor
hlt
mov
call
decl
adc
inc
xchg
out
inc
jl
jbe
xchg
cmpl
pop
lret
sbb
scas
dec
xor
mov
inc
fisttpll
xchg
loopne
mov
jecxz
jmp
fiaddl
inc
imull
or
add
sub
inc
aaa
js
mov
aad
cld
js
push
cmpsl
and
mov
insb
pop
push
inc
mov
sbb
fists
fmull
rcl
jecxz
jecxz
fadds
shlb
jg
inc
sbb
or
loop
cs
insl
mov
push
sti
insb
mov
or
int
push
mov
js
lahf
push
leave
cmp
sbb
es
inc
ret
in
jge
js
dec
xor
imulb
scas
sbb
sbb
adc
mov
outsb
loop
push
fidivrs
add
cmp
mov
dec
mov
je
scas
inc
ljmp
lea
js
adc
add
dec
aam
daa
fdiv
xchg
test
outsb
jo
push
pop
loope
orl
pop
inc
ljmp
enter
push
xlat
stc
xorb
add
sahf
shrb
test
mov
lcall
fsubr
push
bound
pop
push
shrl
xchg
cli
insl
lahf
sub
aad
or
push
push
pop
lods
pop
mov
sub
lock
movsb
xlat
mov
xchg
lret
fcomp
sub
sbb
sub
mov
out
mov
out
decb
cmp
addr16
push
enter
lods
aaa
add
pop
push
sahf
sti
mov
mov
inc
lock
and
add
push
mov
sub
jp
lcall
xor
dec
mov
pop
mov
and
jno
addl
mov
fucomp
test
dec
inc
ds
stos
jnp
cli
pushf
pop
mov
das
pop
movsl
mov
or
in
iret
push
enter
ds
in
xlat
mov
adc
stos
jecxz
loopne
pop
jmp
push
pop
mov
popa
and
dec
sbb
or
xor
push
cmc
fs
sbb
subl
sti
mov
jle
mov
fs
mov
aam
xchg
mov
mov
dec
je
mov
outsb
fs
les
push
mov
loopne
sahf
ds
push
pusha
lods
mov
jle
xchg
mov
mov
mov
inc
into
fs
clc
das
add
sbb
pop
sub
xor
xchg
das
jmp
push
jle
dec
andl
hlt
push
repnz
ljmp
pop
push
jne
ljmp
sbb
and
mov
mov
ja
outsl
rclb
adc
or
add
filds
dec
out
fistpll
decl
push
adc
test
lock
pop
aam
pusha
aam
das
sbb
sub
cmp
cmpl
cmp
xor
and
ficompl
mov
inc
pop
in
dec
mov
int
add
inc
inc
dec
cmpsb
lcall
lret
mov
pop
lock
lret
jo
ds
mov
int3
cmc
mov
clc
hlt
sbb
inc
negb
xor
mov
cmc
jle
daa
dec
hlt
bound
push
cmp
xchg
pop
lea
test
xchg
ljmp
jle
std
dec
jecxz
xchg
hlt
ret
pop
scas
sbb
xchg
adc
add
ret
inc
mov
jg
pushl
fbstp
cmp
mov
test
fiaddl
test
mov
mov
sarl
aam
movsb
add
mov
mov
and
aas
or
adc
test
xchg
scas
rol
cmpsb
jno
cli
popf
xchg
xchg
add
stc
push
out
push
mov
xor
cmp
jmp
repnz
ds
leave
repz
sbb
leave
cmp
movb
xchg
cmp
insb
out
fdivrl
pop
cmp
mov
arpl
jbe
lock
fs
leave
leave
lcall
cmp
rol
jmp
xchg
sbb
sbb
fildl
fiadds
fcoml
in
sbb
xor
sub
mov
mov
sti
pop
jns
cmp
xchg
jmp
out
mov
mov
dec
lea
into
les
pop
mov
mov
push
mov
mov
outsb
sub
xor
dec
test
stos
lock
dec
addl
cli
inc
ret
cmpsb
call
and
mov
push
pop
stos
gs
mov
scas
sub
sbb
cwtl
sbb
adc
pop
xchg
bnd
mov
add
xor
or
stos
push
aas
in
mov
in
mov
dec
repnz
and
pushf
cmp
pop
leave
dec
jl
shlb
cmp
les
mov
fmuls
cmp
and
jp
mov
xchg
lock
push
xor
jno
dec
cmpsb
lock
and
movsb
cmp
mov
and
mov
dec
callw
adc
sub
inc
fidivrl
or
hlt
mov
lods
sub
adc
out
and
out
loop
in
rcrb
or
incl
mov
mov
rolb
gs
add
js
or
jns
push
push
jg
jne
jmp
roll
adc
add
clc
adc
test
out
jg
mov
push
adc
lcall
mov
cmpsl
js
scas
cld
lods
push
fldt
add
lahf
shlb
cmp
lfs
jle,pn
add
or
push
movsl
movsl
xchg
dec
pop
pop
mov
mov
fwait
cmp
mov
jo
fptan
mov
int3
mov
rcl
push
js
add
or
loop
push
arpl
push
mov
pop
lcallw
mov
mov
fdiv
bound
mov
jge
xchg
pop
add
scas
icebp
in
fdivrl
mov
sub
push
push
cmp
cmp
fdivrs
lds
insl
outsb
inc
in
mov
addr16
mov
popa
pop
push
pop
enter
cwtl
pop
das
cmc
cli
out
hlt
sbb
movsb
inc
inc
arpl
rcl
sub
pop
in
gs
insb
jno
pushl
dec
int
dec
cs
sbb
push
jbe
aad
fadd
cmp
cmpsl
jne
sbb
ljmp
and
or
lods
insb
pop
gs
stc
mov
or
leave
ds
ds
mov
inc
mov
push
mov
inc
push
mov
and
outsb
pop
hlt
add
mov
lahf
mov
push
mov
movsl
das
adc
xor
daa
test
pop
mov
cltd
test
xor
clc
add
push
roll
ja
sub
xor
hlt
push
xchg
cmp
push
js
inc
leave
mov
je
fwait
sbb
or
jle
ret
mov
mov
mov
cmp
mov
in
xchg
mov
aas
jge
mov
orl
push
xchg
dec
test
sbb
fsub
rolb
lock
inc
out
pop
inc
fisubrl
scas
aad
ret
aaa
push
jns
inc
addr16
into
pop
insl
pop
test
clc
mov
jge
fadds
call
and
stos
inc
scas
dec
jmp
int3
in
sarb
fiadds
scas
mov
out
and
push
push
sbb
popa
sub
and
std
adc
sahf
enter
dec
pop
add
stos
test
mov
sbb
jo
xor
ja
mov
mov
ljmp
das
dec
subb
orl
addl
in
push
jp
popf
push
cwtl
cmp
in
pop
in
and
rcll
in
jns
test
or
xor
cmpsb
pusha
and
inc
adcl
es
loopne
sbb
inc
pop
dec
cmpsb
fildll
notl
into
stos
rcl
mov
xor
sbb
lcall
adc
xor
or
mov
mov
push
xchg
pop
fsubs
jbe
inc
fwait
inc
scas
lss
sbb
movb
sub
cmp
pusha
fists
push
pop
sub
in
lcall
aam
pop
xchg
les
inc
inc
ljmp
out
outsl
sbb
adc
and
scas
das
pop
pop
inc
arpl
jp
sbbl
jnp
add
repnz
mov
pop
loope
push
inc
dec
add
xor
pop
in
and
inc
sub
mov
push
rcrb
or
xchg
rorb
adc
sub
pusha
add
fwait
jnp
cld
jne
sbbb
pop
jo
insl
les
adc
xchg
pop
mov
mov
xchg
insb
push
push
cmpsl
cld
int
cli
cmp
nop
cli
push
insb
inc
incl
test
enter
icebp
jo
adc
test
and
scas
aam
jae
cld
call
ss
ret
je
es
scas
xchg
repnz
sub
adc
imul
jle
and
test
pop
mov
xchg
adc
xchg
cltd
and
mov
xchg
ja
and
add
pushf
loopne
sub
loopne
and
rcr
inc
jle,pn
aaa
or
aad
es
punpckhbw
movsl
sti
out
mov
lds
int
ss
fnsave
mov
dec
fwait
add
xchg
pop
pop
mov
inc
xchg
and
out
js
mov
rolb
lcall
dec
pop
fstps
or
mov
dec
cmc
and
addb
jne
adc
xchg
cmp
lret
pop
inc
in
xor
pop
cmp
daa
out
adc
jge
or
jb
mov
out
test
into
xchg
sub
add
jnp
fwait
stos
sbb
rorl
mov
insl
ss
movsb
js
aaa
sti
test
mov
inc
into
cld
ljmp
jp
pop
cli
push
loope
cld
add
pop
xor
mov
pop
out
cmp
imul
cld
loopne
inc
push
or
add
or
enter
sub
push
push
cmpsb
dec
out
adc
jg
xor
pop
popf
std
roll
jp
adc
xchg
clc
push
cwtl
mov
popf
in
jp
inc
nop
push
mov
stos
xor
cmp
push
jp
cmp
sbb
call
mov
shrb
sbb
xchg
adc
mov
mov
sub
mov
stos
dec
ret
out
and
negl
push
jle
push
popl
push
cwtl
stc
pop
inc
rcrb
mov
loope
or
add
mov
mov
imulb
fistps
mov
add
fbld
inc
mov
jno
pop
pusha
push
shrl
outsl
cld
dec
fldcw
push
sti
jecxz
fyl2x
sarb
pushf
jle
push
test
push
push
jle
insl
insl
ljmp
test
and
repnz
and
test
mov
shlb
pop
pop
jmp
push
mov
rcll
mov
cli
scas
fistpl
int
ds
daa
xor
or
into
mov
add
dec
and
ds
clc
jbe
jo
es
inc
aaa
or
cs
addr16
jge
popf
dec
fcmovb
sbb
clc
test
add
fidivrl
push
lret
or
mov
add
jp
mov
inc
mov
in
imul
aaa
repz
ss
mov
push
pushf
hlt
or
or
fcomps
jecxz
daa
loopne
negl
add
sub
mov
inc
aas
icebp
sbb
sbb
dec
pushf
cmc
lods
cmpsl
jnp
adc
sbb
lea
mov
push
cmp
in
push
repnz
lock
rorb
push
test
subl
xchg
test
jne
or
rclb
notb
clc
sub
loope
mov
push
in
pop
mov
imul
push
or
mov
xor
add
aas
add
lea
jnp
sbb
or
rolb
xor
and
sbb
cmp
dec
or
int3
push
jno
push
ret
and
aas
je
std
ljmp
gs
inc
cltd
movsl
lahf
pop
jo
jmp
cli
xchg
push
std
xor
addr16
lds
mov
enter
push
pop
jecxz
cs
fcoms
punpcklbw
int3
adc
sub
iret
int
mov
mov
imul
fdivrl
mov
mov
cmp
sub
mov
into
mov
stos
daa
pop
dec
mov
shlb
inc
cmp
aam
push
push
xchg
dec
cmp
scas
adc
test
pop
pop
dec
pusha
mov
sub
loopne
aam
lods
xchg
fildl
addl
mov
movsl
fidivrl
hlt
lahf
repnz
loop
pusha
sub
cmp
pop
or
shl
hlt
jmp
aam
inc
out
push
xchg
daa
sub
pushf
fisttpll
lods
les
and
push
insb
lahf
or
stc
inc
cmp
pop
xchg
ret
fwait
cwtl
sub
cmp
xor
dec
add
mov
and
fs
lods
mov
push
dec
xchg
sbb
add
or
loope
or
fsub
jbe
test
or
sbb
adcb
lock
cld
cmp
bound
jle
xchg
int
bound
cmpb
mov
pop
andl
or
scas
add
mov
cmc
idivb
ss
repnz
jns
insb
push
fildll
pop
push
xchg
in
fucomp
orb
dec
mov
mov
add
stos
jmp
rorb
mov
std
dec
clc
and
out
mov
stos
adc
fistpl
fcmovnb
idiv
inc
stos
push
es
push
dec
fimull
mov
adc
std
mov
mov
cld
and
lods
or
push
inc
push
pop
fwait
jbe
mov
seta
xchg
jne
fildll
jle
add
ss
cwtl
cmpb
inc
push
es
insl
ljmp
sbb
insb
adc
ljmp
pop
int3
fwait
movsb
mov
sub
fdivl
add
adc
ret
incb
in
out
stos
cmpb
lcall
sub
sahf
pop
mov
test
add
popf
sti
mov
xor
mov
push
mov
mov
mov
outsl
pusha
dec
add
rorb
mov
test
add
lret
jmp
bound
fcoms
lds
jns
ret
push
out
ljmp
pop
xchg
testl
in
jle
fstps
movsb
inc
jo
dec
fbld
cmpsb
cmp
push
popa
push
jno
or
test
test
xor
js
ljmp
pop
add
sbb
push
jl
jecxz
dec
pop
add
rorl
inc
sbb
clc
mov
mov
pushf
mov
data16
stc
test
ds
adc
gs
jae
mov
out
sub
mov
out
xor
push
cli
cmpsb
sbb
shl
ret
mov
cwtl
push
lock
inc
pop
rorb
sbb
add
add
addr16
inc
out
mov
mov
xlat
out
pop
hlt
add
pop
cmp
sbb
test
dec
inc
inc
add
dec
adc
lahf
sbb
sub
jle
lcall
inc
movsl
in
mov
adc
sarb
mov
pusha
sub
push
sub
pop
clc
and
ret
je
inc
xor
mov
aas
jmp
sub
aam
or
sbb
or
sub
push
lods
test
mov
mov
or
jae
pop
mov
dec
out
jg
add
push
loopne
push
out
scas
addr16
loopne
inc
lods
clc
orl
je
inc
mov
jecxz
mov
lock
bound
sub
xchg
cmp
mov
sbb
cmp
xor
add
in
mov
xchg
inc
mov
outsb
push
push
inc
ret
mov
or
shll
shrl
xor
xchg
pop
xlat
popf
test
xor
lods
xchg
adc
inc
cmc
daa
das
mov
xchg
jg
and
xchg
pop
lahf
cmpsb
cs
mov
call
cmpsb
add
rclb
mov
int
arpl
adc
add
aad
je
pop
push
loop
xor
dec
xchg
out
jmp
les
es
jg
add
clc
cmp
fsubr
add
sub
xchg
dec
adc
fiaddl
lret
lods
push
lahf
mov
push
pop
pop
pop
jp
ss
dec
push
addl
pop
jge
sub
pusha
jg
mov
nop
sbb
push
dec
push
mov
nop
pop
iret
push
aam
insb
mov
xlat
scas
inc
in
js
xor
jbe
adc
negb
mov
add
push
jp
leave
jo
mov
int3
push
mov
pop
shrb
push
add
or
std
push
lock
movsl
rcll
les
mov
push
vaddpd
rcl
in
mov
or
pop
sub
mov
orl
cld
xchg
mulb
mov
jp
pop
push
sub
andb
outsl
jbe
jl
bound
scas
fldl
adc
ret
test
mov
fs
xor
xchg
cvtps2pi
call
add
mov
dec
in
mov
cltd
cs
fldl
cmpsl
popf
xchg
sbb
rcrb
xchg
adc
hlt
push
mov
ljmp
push
mov
popl
adc
dec
adc
fdivrp
loop
pop
fs
shrb
pop
cmc
pushf
xlat
jmp
fstpt
call
dec
daa
popa
loop
xchg
and
jnp
popa
xor
popf
cmp
adc
les
lcall
add
mov
inc
ret
hlt
ret
inc
sub
jp
loopne
or
adc
jecxz
jl
bound
push
test
pop
fs
pusha
inc
push
push
fimuls
or
outsl
fs
xor
dec
adc
adc
jle
and
jb
push
dec
ret
out
ficompl
repz
dec
or
mov
add
xor
inc
fs
and
leave
pusha
jmp
jp
lock
xor
xor
xlat
rcrl
fimuls
push
lock
inc
inc
sbb
fcoml
pop
jge
add
xchg
mov
repnz
xchg
lea
movsl
xor
cmpsl
dec
minps
out
cmp
mov
int3
push
int3
pop
lds
adc
adc
sbb
addr16
pusha
das
orb
mov
mov
cmpsb
inc
clc
xchg
gs
mov
jmp
add
and
outsl
add
sbb
and
jl
dec
jno
jns
pop
test
das
push
mov
stc
repnz
sub
mov
mov
or
rolb
xchg
mov
jmp
cld
xchg
insb
int
ja
es
das
pop
cld
push
xor
add
pop
fs
js
fimuls
ss
jl
js
repz
mov
push
sbb
xchg
xor
subps
mov
cmp
popa
insl
cli
popa
sub
push
jo
and
scas
xchg
cwtl
stc
pop
sbb
inc
sti
lret
dec
ficoms
cmc
lahf
sub
fwait
jp
cs
xchg
mov
mov
aas
sbb
test
mov
loop
push
adc
std
pop
adc
gs
int
xchg
push
pop
and
test
fdivr
hlt
ret
add
push
xor
jmp
xor
hlt
pusha
dec
mov
push
or
mov
mov
jmp
mov
push
outsb
push
nop
adc
jo
cmp
xorl
or
inc
sub
xchg
popa
sbb
jo
out
popa
sbb
mov
movsb
pop
orl
test
mov
fiaddl
xor
mov
out
fcom
and
decb
movsb
nop
negl
nop
sub
popf
xorb
shlb
or
scas
loopne
xor
push
sub
cmp
pop
stos
add
sbb
mov
sbb
aam
xchg
test
cltd
outsl
clc
add
call
cld
push
dec
mov
mov
pop
int3
fdiv
mov
pusha
jbe
aaa
xor
and
add
cmp
dec
inc
stos
push
dec
push
push
push
mov
aaa
jbe
dec
scas
fsubp
popa
sub
js
aas
inc
clc
push
mov
scas
ljmp
pop
sbb
push
mov
inc
inc
out
lods
push
loopne
or
xchg
mov
icebp
dec
lahf
sbb
aaa
mov
sub
test
clc
mov
int3
xchg
das
and
insb
push
insb
shl
es
das
pop
mov
mov
mov
repnz
lods
sti
adc
popa
dec
push
cmp
push
push
popa
sarl
cmp
shlb
sbbb
pusha
loop
in
sbb
popa
sbb
test
inc
push
jo
pusha
mov
fidivs
pushf
adc
cs
jo
sti
ficompl
das
lods
cld
xchg
mov
nop
scas
ljmp
xlat
call
insl
fs
jns
lret
pop
subb
dec
inc
fsubrs
push
adc
js
sahf
adc
or
mov
aaa
or
sub
dec
clc
dec
lods
scas
push
cmc
xchg
xchg
or
and
inc
aas
orb
fwait
sbbb
sub
and
subl
adc
inc
cmp
mov
imul
mov
cs
or
loope
mov
mov
pop
int3
mov
fadds
repnz
xchg
sub
into
pop
dec
mov
testl
cltd
inc
jb
ss
dec
cmp
and
pop
xor
mov
ret
leave
or
mov
sbb
lret
loop
mov
loop
pushf
movsl
push
std
sbb
sahf
int3
testb
push
loope
andb
repnz
adc
push
xor
mov
and
test
lahf
bound
push
data16
lret
push
mov
cmpsb
mov
rol
sub
scas
nop
shr
adc
mov
scas
jae
or
xchg
xlat
cmpsb
outsl
mov
xor
popl
mov
lock
jecxz
jle
popa
mov
cmp
sub
push
arpl
inc
mov
aam
push
mov
cmpsl
jo
push
jns
mov
ret
hlt
pop
lock
cld
cmc
clc
adc
les
jecxz
orl
mov
lock
test
ljmp
sub
push
or
sbb
stos
in
je
add
xchg
lds
lock
mov
outsb
mov
lret
arpl
cmc
add
sub
clc
imul
fwait
mov
subl
inc
inc
xor
shl
and
and
mov
enter
dec
push
repnz
mov
mov
pusha
xor
fidivl
adc
imul
sub
outsl
cmc
xor
rorl
jnp
sbb
ljmp
test
mov
pusha
jg
out
fdivrp
dec
push
lods
push
sub
mov
mov
xchg
lock
repnz
das
and
push
test
and
ret
popf
xor
mov
mov
jb
dec
mov
lcall
push
mov
psadbw
fdivs
loopne
jle
or
mov
in
int
mov
adc
jo
dec
les
stos
sub
inc
rsm
or
sbb
push
push
shrb
loopne
nop
cli
shlb
and
ret
sub
leave
jmp
lret
ficoms
arpl
test
pop
xor
stos
pop
lods
adc
mov
in
call
jl
mov
imull
lock
inc
add
jmp
push
popa
outsl
aad
or
xchg
and
sub
sbb
xchg
shlb
pop
lock
inc
push
test
push
loope
enter
sub
mulb
mov
gs
cmpxchg
jo
mov
or
stos
daa
and
out
or
xchg
subl
in
pushf
sub
xchg
shrb
jbe
sbb
imulb
clc
popa
pop
push
cli
outsb
subb
sbbb
or
pop
cmpsb
imul
xchg
cmp
aas
data16
and
popa
cld
fisubrl
push
cmpsb
adcb
pop
shl
xchg
sub
jbe
outsb
xchg
sub
inc
in
mov
mov
lods
pop
push
push
jnp
in
aaa
jl
dec
out
int3
push
add
adc
inc
jmp
pand
lock
popf
in
jl
xchg
loop
movsb
and
sub
jl
inc
sti
lock
lahf
test
inc
xchg
mov
repz
mov
push
jo
int3
push
aam
adc
fstps
push
mov
or
cmp
lret
sbb
cmp
and
loope
fdivl
adcb
pop
sub
xchg
pop
movsb
adc
add
dec
jne
lods
sub
pop
adc
leave
test
inc
insl
push
mov
xchg
inc
mov
inc
inc
cld
adc
testl
push
sbb
aam
sub
das
adc
pusha
sarl
or
hlt
dec
sahf
data16
and
cmp
jns
lock
xchg
push
sbb
jbe
mov
adc
sbb
sbbb
jne
add
rclb
into
repnz
iret
mov
or
loope
adc
imul
sbb
fnstsw
pop
or
add
dec
outsb
cmp
cli
ds
cmpsl
mov
sub
in
jmp
stc
ljmp
sub
iret
jo
aad
ret
xchg
int
cmpsb
aaa
jg
rcr
mov
dec
adc
dec
push
push
loopne
rcrb
aad
mov
js
dec
mov
ds
pop
adc
je
out
fisttps
dec
ljmp
dec
pusha
test
shll
push
jg
xchg
lods
jb
sbb
enter
addl
in
add
out
in
ds
mov
repnz
mov
mov
mov
cmpb
in
mov
mov
hlt
jbe
inc
mov
jne
pop
sbb
jl
ss
shll
sub
jne
xor
cld
mov
pop
adc
fisubrl
add
and
xor
outsb
bswap
xor
mov
imulb
or
fsubrs
xchg
sub
inc
jge
lock
sbb
sbb
inc
es
cmp
and
orb
and
rcr
ljmp
mov
mov
int
add
sub
shlb
mov
sbb
mov
movsb
int
sbb
cltd
fists
cmova
add
fs
dec
rcl
dec
fisttpl
add
fwait
sbb
js
clc
mov
ret
rclb
scas
mov
ds
mov
xor
inc
pushf
ja
or
aad
mov
sub
xorb
lea
push
andb
mov
and
or
scas
pop
add
sub
xor
xor
xlat
hlt
repnz
icebp
divl
insb
ret
out
adc
mov
jo
mov
dec
xlat
mov
lret
shll
les
mov
outsl
sub
aam
mov
incb
insl
enter
pop
imul
or
cmp
ljmp
pop
adc
and
mov
push
mov
mul
xchg
or
in
js
and
es
cmpsb
mov
inc
ficomps
sbb
scas
ret
int3
cmpsb
pushf
sbb
fs
shlb
sub
repz
adc
inc
leave
pop
cmc
pop
cld
into
das
mov
or
adcb
inc
or
fadds
mov
sahf
inc
xor
push
adc
stc
js
mov
mov
subb
add
or
xchg
test
push
aad
pushf
pop
inc
daa
shlb
jl
stos
imul
es
or
cs
mov
inc
push
or
mov
enter
xor
loop
insl
in
or
mov
pusha
fstps
dec
int
cs
imul
mov
mov
mov
jmp
in
scas
test
pushf
dec
or
fbld
daa
outsl
in
inc
rorb
sbb
xor
add
mov
pop
lods
xchg
add
les
cs
scas
out
cmp
subb
clc
jmp
stc
xor
jg
arpl
sub
addr16
aaa
cs
or
loopne
clc
adc
and
inc
std
test
xor
insl
add
adc
test
push
fistpl
mov
jne
fistl
pop
inc
dec
insl
xor
mov
sahf
add
push
push
pop
sbb
inc
mov
pop
popf
mov
aam
dec
xor
jge
lods
mov
sbb
orl
and
fcoml
mov
sbb
je
xlat
in
add
sahf
ljmp
sbb
lock
sub
in
out
aam
addr16
lahf
sbb
inc
mov
mov
cs
add
dec
jmp
mov
mov
sub
jno,pt
sbb
lret
outsb
xchg
or
cmp
shlb
cmpsb
dec
mov
push
jno
ja
sub
or
push
mov
jbe
pushf
sbb
outsl
out
daa
fldt
int3
aam
mov
sbbl
adc
jmp
xchg
mov
push
xor
push
cmp
outsb
lcall
sbb
xchg
cmc
dec
jmp
or
movsl
mulb
mov
cs
adc
imul
cli
in
aam
clc
cli
aaa
dec
test
fwait
movd
int3
mov
les
dec
jle
cmpsl
push
adc
adc
clc
cs
outsl
ss
pop
dec
or
cwtl
pop
push
pop
jp
pop
cmp
xor
push
subl
outsb
mov
and
repz
mov
cmc
shlb
or
movsl
sub
icebp
push
lret
mov
loopne
xor
std
inc
mov
pop
lret
ds
inc
xchg
sub
pop
add
mov
cli
xchg
mov
pop
in
test
ds
ja
inc
push
das
xor
data16
adcb
xchg
sbbb
daa
test
jno
mov
fdivrl
inc
les
add
mov
ret
and
mov
neg
fcos
ret
imul
roll
inc
and
in
push
loopne
mov
jnp
call
divl
pop
cs
jp
ret
imul
push
movsl
outsb
jo
cmpb
pop
movsb
les
add
call
mov
mov
dec
cmp
add
jnp
push
loopne
jl
test
mov
scas
xor
and
adc
pop
movsb
add
mov
ljmp
cmp
shrb
push
cmp
xchg
sub
xor
xchg
js
loopne
test
add
inc
ljmp
les
push
push
mov
mov
ficomps
add
mov
sub
sbb
test
flds
lods
out
lcall
aad
xor
aam
nop
clc
clc
xchg
int3
ds
hlt
lock
aas
mov
or
adc
jle
xor
sub
fcomps
dec
pop
jl
jle
xorb
sub
cmp
xchg
sub
adc
pop
sub
xchg
movsb
rorl
mov
dec
inc
jb
xchg
subb
ja
add
adc
mov
add
or
clc
or
sub
xor
pop
jmp
rcll
lea
outsb
rorb
fmuls
sbb
push
loopne
hlt
subl
lcall
jl
xchg
imul
adc
call
pop
or
scas
lods
pop
sub
outsl
ret
aaa
out
mov
lds
punpcklbw
cli
cli
es
add
idivb
jbe
mov
xor
xchg
xor
loopne
clc
into
inc
adc
inc
out
sbb
and
add
fistps
out
dec
scas
pop
sbb
or
sub
add
ret
xor
cli
jne
and
outsb
adc
mov
test
xor
movsl
and
je
test
imul
mov
xorb
outsl
int3
xor
enter
mov
loope
arpl
orl
test
je
push
imul
clc
cli
mov
notb
jb
mov
add
cwtl
sub
aaa
std
push
cwtl
mov
fdivrl
sbb
jo
loopne
or
das
mov
lock
orl
sub
mov
imul
in
cmp
iret
jle
add
pop
cli
inc
outsb
push
cmpl
mov
test
std
sbb
lods
inc
pusha
pushw
cmp
pop
fimuls
and
das
jno
and
imul
sbb
or
ds
mov
push
out
inc
sti
jne
pop
out
mov
loope
faddp
mov
out
rolb
push
adc
push
add
cmp
mov
clc
ret
insb
mov
ret
sub
data16
mul
adc
jg
aam
add
std
dec
push
push
mov
sub
mov
sbb
sti
jl
inc
xchg
sbb
mov
and
addb
jle
int3
mov
flds
jp
adc
sahf
test
fcomip
or
repz
enter
jae
add
add
movsl
push
mov
sub
mov
ret
and
xchg
dec
repz
repnz
aam
push
inc
call
xor
adc
jae
imul
jecxz
cmpsb
cmp
lcall
in
push
jg
mov
leave
mov
inc
or
jb
mov
mov
mov
inc
or
and
push
add
inc
sub
int3
decl
inc
xchg
bound
push
icebp
dec
add
jb
test
add
jns
lods
sbb
call
mov
movsl
sahf
mov
mov
push
push
stos
movsl
lock
into
inc
jl
mov
rclb
je
outsb
push
sbb
pop
scas
mov
adc
cli
mov
xor
cmp
push
cmp
push
pop
jp
rcl
mov
scas
mov
pop
inc
repz
pop
fsubs
jl
jp
xor
enter
dec
js
and
xchg
inc
pop
mov
insl
or
outsl
jge
into
popa
xchg
ds
js
and
and
shlb
mov
pop
jo
add
push
aam
nop
xchg
enter
sub
mov
push
lcall
xor
or
inc
add
jecxz
stos
add
or
test
push
xor
adc
and
add
cmp
adc
fwait
xchg
and
cmp
mov
push
pop
jle
pop
les
test
pop
adc
movsb
mov
dec
les
shll
mov
cmc
inc
inc
jp
es
push
loope
and
push
in
mov
or
jge
cmpb
gs
fcmovnb
jl
mov
insl
xchg
xchg
and
leave
jae
and
and
mov
dec
fsubrl
pushf
imull
clc
dec
mov
test
loope,pt
imul
sahf
inc
pop
jo
jne
cmp
adc
inc
aas
repnz
xlat
mov
mov
in
ret
jl
push
adc
inc
sbb
mov
sahf
popf
cmp
inc
jle
js
xor
mov
loopne
xchg
mov
dec
aas
add
dec
nop
inc
pop
fsub
xchg
mov
mov
mov
dec
es
sbb
lret
dec
jno
cmp
hlt
xchg
add
pop
jp
in
mov
inc
cmpsl
jnp
dec
push
test
imul
mov
repz
xchg
dec
dec
push
std
dec
xchg
fmuls
int3
loop
mov
mov
in
shr
lcall
shlw
xchg
test
ss
mov
xchg
sbbb
and
sub
cmc
adc
cwtl
and
push
popf
push
cmp
dec
fs
ret
mov
nop
push
mov
dec
ret
aaa
cmp
mov
not
out
ret
testl
inc
jl
loop
xor
cs
and
outsl
sbb
enter
jb
lcall
mov
pop
dec
mov
push
xchg
cmp
ds
mov
ja
movsl
jb
lret
test
add
mov
sbb
out
cs
cld
sbb
je
add
pop
fcomps
mov
inc
dec
push
in
cmc
fsubrs
push
or
imul
sbbb
mov
push
mov
imul
mov
sbb
es
lds
or
mov
mov
test
push
xlat
adc
inc
sbb
decl
jl
outsl
sub
js
mov
cmp
daa
dec
aaa
pop
fmuls
fistpll
aam
jle
roll
dec
or
push
subb
jecxz
jge
hlt
fnstcw
lods
mov
xor
clc
rcll
push
xchg
mov
push
syscall
mov
ja
sbb
movsb
dec
cmp
push
pop
std
not
adc
sbb
lods
dec
ja
loope
xchg
cmp
fbstp
loop
mov
pop
jb
add
mov
or
add
mov
fimuls
ds
mov
jg
mov
push
ljmp
mov
cld
test
sub
sub
push
rorb
addr16
movsl
mov
loop
inc
inc
int
loope
xor
xor
sbb
sbb
iret
mov
test
jnp
xchg
add
test
pop
inc
lock
pop
pop
or
fwait
sbb
jge
xor
jne
sub
adc
fcmovnu
jmp
mov
shrb
or
xor
ja
add
ret
bound
push
push
loop
lahf
mov
add
cmc
and
in
rorb
jle
aas
push
cld
jo
jno
je
arpl
sbb
out
cmp
shlb
pop
jne
aaa
dec
push
jecxz
mov
sub
push
inc
js
or
pop
adc
dec
addr16
jmp
cmp
mov
jmp
sbb
pop
pusha
outsl
sub
cmpsl
or
or
sbb
in
fiaddl
decl
lret
jp
ret
stc
mov
icebp
std
call
loope
imul
inc
cmp
adc
adc
je
icebp
lock
jno
sahf
push
pmovmskb
cmp
pop
adc
sarb
nop
aad
cli
xor
pusha
insb
aad
call
imul
mov
add
cli
lock
cmp
mov
pushf
jnp
add
imul
push
pushf
mov
add
or
mov
repnz
cli
mov
xlat
or
iret
aad
fnstenv
xor
push
jb
fs
fs
loopne
stos
mov
scas
mov
pop
mov
mov
enter
pop
outsb
xor
xchg
insb
insb
add
test
insb
pop
jno
and
fsubrs
cmp
xor
push
inc
mov
cmp
push
mov
hlt
int
stos
jg
lret
in
insb
iret
pop
hlt
push
lds
clc
ret
lret
aam
inc
mov
add
mov
pop
mov
add
lahf
add
js
sbb
mov
push
dec
push
call
fimull
jo
loopne
adc
add
in
adc
pop
test
xlat
xor
dec
cmpsl
in
dec
in
push
sbb
cli
jmp
jne
push
cwtl
in
cmpsb
push
int
out
shll
clc
call
sarl
in
test
cmp
xchg
xchg
lea
repnz
and
jno
pop
cmp
aas
dec
test
cmp
and
mov
xlat
jb
std
subb
mov
mov
xchg
sbb
sahf
fs
pop
andb
aas
jne
jg
xchg
mov
adc
mov
dec
pop
fcmovbe
in
nop
and
xchg
xlat
arpl
mov
cltd
clc
adc
imul
aas
stc
sti
adc
push
lock
out
mov
lret
or
hlt
bound
cmp
in
mov
rorl
mov
arpl
inc
popaw
rorl
shll
push
and
loope
xchg
sbb
mov
scas
mov
and
movsl
lret
dec
mov
clc
out
pop
sub
or
mov
push
mov
les
push
sti
and
fiaddl
jp
bnd
js
mov
cmpsl
enter
and
dec
push
push
add
mov
push
pop
jecxz
aas
sbb
xor
mov
push
push
call
push
or
push
pop
inc
fcomip
inc
ret
js
pop
shlb
bound
out
push
push
dec
lds
loopne
addl
outsb
jnp
ja
insb
xor
sub
or
fcmovnu
push
dec
dec
or
movsb
int3
pop
inc
xchg
push
js
xor
mov
ret
mov
sub
jg
outsb
clc
shll
rolb
call
push
push
sbb
das
ret
xor
jb
xlat
js
imul
or
or
push
mov
dec
pusha
shl
mov
xchg
push
movd
or
cmp
mov
and
scas
jge
inc
and
cmp
sarb
lds
dec
inc
subb
or
jp
jmp
dec
inc
das
xlat
jae
and
mov
mov
bound
scas
jbe,pn
ss
cld
fisubl
jb
fnstenv
incb
js
scas
leave
ret
arpl
jnp
cmp
int
sti
arpl
orb
ret
cmp
in
into
sub
pop
gs
aam
daa
push
sbb
inc
and
ljmp
outsb
or
test
hlt
gs
push
or
mov
movsb
gs
stos
loop
out
inc
adc
call
xlat
and
push
mov
adc
mov
xchg
dec
nop
inc
mov
pop
hlt
push
jg
pop
mov
mov
imul
lods
test
sbb
xor
clc
xchg
je
mov
push
mov
stc
jmp
insb
je
mov
pop
sub
negb
out
and
jl
jne
lods
mov
test
xchg
sub
fcomip
lahf
push
outsb
int3
xchg
iret
rclb
push
test
outsb
add
inc
inc
fisttpl
mov
loope
mov
shrl
cld
imul
data16
mov
mov
gs
or
flds
mov
xlat
test
mov
lock
pop
mov
mov
movsl
cmp
out
push
pop
orl
insl
imul
inc
xchg
scas
aad
imul
jle
mov
xchg
das
push
fsts
inc
or
out
mov
mov
imul
mov
or
daa
ficomps
ljmp
decl
push
mov
pop
fdivrs
mov
and
dec
sar
jp
xor
jmp
es
mov
in
loope
xlat
ljmp
stos
jp
test
sbb
push
push
ret
push
mov
and
xchg
imul
fdivs
in
sub
cmpl
pop
push
enter
fdivrl
popa
fidivrs
test
jg
xchg
mov
mov
adc
faddl
dec
lock
mov
imul
fldpi
xchg
cli
sub
loop
arpl
xchg
in
push
mov
pop
pop
or
movsl
push
sarb
fdivl
lds
cmp
lods
xorps
dec
jge
rcrb
adc
mov
push
sti
out
inc
xor
add
fidivs
fsubrl
call
mov
addr16
lock
push
test
jne
adc
js
loopne
and
xchg
add
xor
pop
ret
lock
dec
jnp
mov
test
jg
inc
insb
movsl
pop
xlat
dec
inc
jmp
stos
outsb
pop
leave
jb
sahf
call
push
fwait
test
sbbl
push
xchg
dec
inc
cltd
xor
aas
cld
or
add
xor
dec
jmp
lods
inc
dec
jae
jno
das
inc
xor
adc
mov
add
xchg
jecxz
test
sbb
fidivl
mov
pop
mov
nop
cmpsl
rcrl
jecxz
push
add
andb
ds
pushl
and
dec
add
pusha
or
sbb
out
lcall
add
jge
push
and
scas
mov
dec
cmp
cmp
lock
xor
out
popf
rclb
xchg
push
inc
nop
push
mov
cmpb
sub
adc
fwait
outsl
inc
fdivl
dec
add
mov
dec
aad
clc
pusha
sarl
pop
sbb
push
mov
scas
out
mov
mov
inc
pop
mov
hlt
sbb
cmp
jle
or
negb
mov
xor
ljmp
les
jne
popa
into
adc
mov
xor
sbb
in
push
jmp
push
pop
cld
adc
sarl
jns
shrb
imul
jnp
pop
shlb
jo
pop
mov
ds
jnp
out
push
dec
add
add
lods
push
and
out
cs
cs
imul
jp
es
sbb
add
test
std
sahf
push
jl
push
leave
mov
sbb
jp
movsb
popl
aas
xor
out
add
subb
lcall
js
shrl
inc
fbld
dec
xchg
jae
loop
push
xor
push
sub
out
xchg
imul
hlt
inc
push
or
jae
dec
and
push
lods
arpl
xor
test
and
or
pushf
cmp
orb
loope
rcrl
rorl
xchg
testb
rolb
xor
mov
jp
xchg
push
add
xor
data16
test
and
aas
shrb
adc
mov
mov
pop
dec
into
jne
mov
loope
push
push
or
insb
test
push
adcl
push
and
cmp
in
sub
int3
and
aas
xor
lret
sub
xlat
cltd
test
aas
loopne
sub
push
ss
and
clc
add
ss
icebp
xor
lahf
fs
data16
cmp
adc
stos
icebp
sbb
rcrb
cmpsb
mov
cwtl
pop
test
scas
loopne
xchg
loope
addl
sti
cmp
push
ss
stos
inc
inc
lahf
mov
add
add
test
adc
pop
scas
imul
dec
ss
cwtl
or
fiaddl
shrb
sub
mov
js
push
test
lea
add
xchg
subl
mov
jne
or
outsb
pop
cs
mov
loopne
add
mov
pop
test
push
daa
scas
cmp
or
mov
jmp
pop
or
mov
pop
jnp
and
or
lds
inc
shll
xchg
and
xchg
je
shlb
daa
les
lock
out
and
xor
sti
mov
or
in
nop
cli
mov
jo
push
mov
fcmovnu
sbbb
rcrb
xchg
inc
rorb
mov
fildl
lods
hlt
lock
sar
lods
add
cltd
add
setge
add
push
pop
into
lds
ret
jge
pop
ret
subb
out
fwait
jecxz
into
cmpb
mov
out
pop
fstl
push
loop
iret
push
lods
gs
pop
call
mov
cmp
and
into
mov
pop
rcrl
inc
bound
movsl
xchg
cmp
fcoml
fcomp
loope
cmpsb
addb
adc
mov
fidivrs
test
mulb
adc
leave
or
sbb
outsb
hlt
fldpi
jmp
or
push
int
and
xchg
movsb
mov
inc
pop
dec
pop
push
ja
sbb
mov
aas
push
mov
inc
jmp
inc
jmp
push
test
dec
icebp
ret
int
pop
cs
js
push
jne
test
dec
cli
insb
repnz
inc
jp
scas
or
addb
sub
sub
sbb
into
shr
clc
jno
fcmovnu
sub
jo
sub
ja
outsl
std
mov
repnz
jl
sub
lcall
mov
std
lea
cmp
addr16
cmp
add
sub
addl
imull
jo
mov
add
fstps
mov
and
inc
insl
insl
repnz
cli
sub
push
jo
mov
adc
pusha
in
xchg
ljmp
cli
faddl
jns
mov
mov
fistpll
mov
or
dec
mov
sbb
movsl
shll
aaa
rol
sbb
or
les
das
dec
push
test
mov
push
in
sbb
cmp
xchg
pushf
loop
lds
mov
or
push
sub
rolb
out
adc
jg
fwait
jmp
ja
jecxz
es
jp
cmp
out
movsl
inc
jle
dec
imul
push
loop
cmp
mov
add
scas
pop
stc
pop
cmp
inc
pop
adc
push
inc
or
mov
pop
xchg
pop
fbld
adcb
js
sbb
aad
or
mov
mov
push
xor
inc
mov
push
jbe
fistps
insl
test
or
push
pop
xor
xor
xchg
mov
add
dec
pusha
adc
push
rcrb
mov
push
mov
les
pop
js
inc
fadds
bound
out
mov
dec
cli
or
add
add
loopne
add
cmpsb
mov
rcr
xchg
iret
ret
pusha
add
mov
pusha
add
adc
cld
jle
jmp
dec
lret
roll
fs
jg
dec
lods
decl
or
fwait
add
adc
add
push
cmpb
lret
mov
jbe
pop
jmp
rcl
dec
jae
mov
mov
or
jmp
mov
imulb
sbbl
xchg
pushf
push
les
mov
dec
stc
xchg
iret
stc
fcmovu
hlt
decl
or
subl
popf
cwtl
loop
adc
daa
cmc
stos
daa
insb
mov
mov
test
and
add
fisubrl
and
outsl
stc
js
push
fsubl
xchg
sub
inc
iret
mov
inc
les
lods
or
or
mov
mov
xor
nop
jns
mov
mov
mov
adc
lret
push
stos
ret
jo
xchg
iret
sbb
mov
dec
stc
adc
ljmp
jecxz
xor
je
out
sub
mov
jp
ljmp
mov
or
test
dec
pop
xor
cmpsl
ret
int
negl
enter
pop
call
js
and
repz
outsl
sar
in
xlat
add
sbb
in
cmc
cmpsb
mov
adc
nop
inc
pop
call
pop
jp
jl
inc
enter
aas
cmp
fiadds
mov
movsl
sbb
add
xor
loopne
sub
loopne
addb
punpcklbw
lahf
pop
addr16
addr16
mov
add
cmpsl
ss
mov
sbb
push
jle
imul
scas
sub
popa
std
jne
push
call
or
mov
jmp
test
cmp
fcoml
cmp
mov
dec
daa
add
push
dec
sbb
push
pop
xchg
repz
mov
cmp
xor
sbb
and
jb
lock
mov
sbb
adc
xor
lods
sbb
inc
cmp
xor
imul
adc
aam
pop
lock
stos
sbb
jo
ja
lods
or
enter
xor
mov
or
dec
cmp
mov
cli
int3
pop
popf
mov
push
scas
xor
daa
test
dec
xchg
scas
icebp
sub
mov
push
mov
push
dec
cmp
scas
popa
jl
or
jg
fistps
sub
cwtl
or
popf
xchg
add
loope
lds
shlb
shl
insl
adc
out
mov
cli
cmp
aas
fs
dec
mov
jmp
mov
test
add
rcll
push
cmpsl
cmpsb
cs
jl
test
mov
mov
mov
xlat
incb
add
imul
and
sbb
addl
sbb
sbb
aam
mov
out
cltd
in
xchg
inc
clc
rcrb
and
mov
push
dec
enter
lods
inc
lea
and
jg
push
stos
les
in
fiaddl
mov
es
inc
add
and
dec
bound
inc
out
sbb
hlt
and
push
and
lahf
imul
test
iret
or
jg
das
shl
in
cmp
jecxz
jmp
cmpsl
pop
fwait
jmp
jne
ret
sbbl
push
adc
inc
std
jne
shl
add
rorl
stos
pop
clc
pop
push
sahf
push
pop
xor
pop
addr16
lods
in
lock
dec
cld
add
mov
hlt
lods
popl
xlat
cmpsb
mov
push
aaa
push
mov
call
cld
pop
mov
cmp
movsb
pop
jb
loopne
out
fidivrl
add
push
mov
add
and
scas
push
cld
dec
pop
cmp
mov
and
or
push
jge
sub
fildl
pop
xchg
mov
das
fadds
call
mov
mov
js
imul
sbb
punpcklbw
in
mov
ffree
or
adc
fadds
push
mov
mov
mov
addb
mov
sbbb
std
cmp
jg
xor
push
add
push
lahf
bound
cmp
jl
int
fstpt
test
incl
xchg
push
adc
push
rcrb
aad
jmp
xor
lods
mov
ss
aaa
pusha
shlb
jbe
dec
dec
imul
dec
cli
xchg
xchg
std
add
clc
or
inc
ds
mov
xor
pop
stos
inc
dec
ds
or
sahf
mov
jno
icebp
into
lods
push
mov
or
stos
sarl
push
es
cld
dec
imul
testl
mov
call
pop
xor
jne
inc
loope
inc
xchg
jp
mov
mov
or
in
pop
cwtl
mov
inc
mov
push
xor
or
dec
imul
lods
shlb
out
imul
lea
sbb
adc
mov
pop
imul
je
mov
pop
std
add
test
imul
pop
add
mov
test
aam
or
dec
les
mov
repnz
loop
clc
insl
mov
inc
or
push
loop
push
adc
inc
orl
movsl
sbb
mov
mov
aaa
je
sub
inc
xchg
jp
pusha
out
sub
add
adc
pop
movsb
wbinvd
aas
in
pop
aas
mov
mov
sub
inc
outsl
cld
shlb
add
enter
ret
movsb
inc
sub
adc
mov
scas
orb
movsb
mov
in
leave
aam
insl
inc
rol
movsb
lock
push
inc
or
call
sub
push
rol
stc
stos
xchg
pop
mov
inc
inc
pusha
fists
les
mov
mov
sub
ds
pop
mov
sbb
pop
enter
popa
movsb
rorb
mov
rolb
bound
or
mov
mov
sti
fisttpll
je
into
adc
out
push
xor
repz
and
cmpsb
and
loope
cmc
insl
push
pop
add
ja
and
mov
mov
mov
mov
push
push
add
bound
pushf
shll
aaa
pop
cld
push
cmp
into
push
jno
dec
dec
mov
mov
sbb
push
sub
je
in
std
jns
jmp
cmpsl
push
test
call
adc
add
shrb
push
icebp
dec
push
ds
or
test
jmp
das
cmp
lcall
sti
cmp
test
je
movsb
data16
lods
movsb
lock
xchg
clc
xorl
or
in
mov
sub
mov
inc
jle
xor
bound
mov
add
shrl
push
lret
outsl
sbb
out
andb
mov
mov
xor
dec
xchg
push
and
jle
inc
xchg
and
and
mov
rorb
add
mov
xor
adc
mov
xor
mov
test
or
pop
lret
and
sub
xchg
or
sbb
hlt
pop
lahf
xchg
popa
out
jecxz
fiaddl
mov
fldt
dec
test
repz
cli
jp
jl
daa
and
hlt
sub
xchg
or
std
insb
mov
data16
outsb
pusha
mov
push
loopne
inc
cmp
test
int3
aas
mov
pop
call
scas
and
mov
mov
mov
mov
cmp
or
jl
adc
mov
test
hlt
inc
lret
inc
cli
jl
lret
fidivs
shrb
mov
shrl
add
fsubrl
jo
into
cmp
cld
add
mov
in
xlat
jno
sahf
xchg
shrb
mov
pusha
nop
mov
sbb
shl
xor
test
daa
outsl
pushf
xor
addl
xor
mov
cmpsl
stos
out
cmpsb
hlt
cmpsb
shl
je
in
stos
adcl
push
les
jno
push
push
or
gs
mov
xchg
sbbb
ret
inc
or
and
mov
sub
mov
fwait
loop
lahf
push
addb
test
jle
stos
js
and
mov
or
pop
into
aas
adc
or
je
enter
add
push
sbb
and
int3
cmp
sub
addr16
lcall
je
icebp
cmp
ss
sub
sahf
jmp
mov
rolb
push
mov
sbb
push
cmp
test
insw
push
mov
sbb
lock
mov
ret
scas
ss
mov
push
or
jge
xchg
mov
xchg
mov
pop
ret
stos
lret
lds
xchg
add
lods
inc
rcl
pop
repnz
mov
push
sbb
xor
mov
mov
jecxz
scas
mov
jg
adc
addr16
xchg
les
inc
js
or
cmp
pop
mov
push
sar
es
jge
js
xor
scas
idiv
cmp
jmp
js
das
adc
cmp
jle
rcl
pop
jae
data16
xchg
test
lcall
xchg
or
push
cmp
add
in
popf
sbb
mov
push
into
jmp
test
push
jbe
jg
sub
rcl
xlat
mov
xchg
lods
dec
movsl
out
movsl
mov
sub
mov
pop
cmp
loopne
adc
inc
push
mov
loopne
cwtl
mov
mov
xor
mov
rcrb
iret
push
cmp
jnp
add
push
loop
jp
jo
aad
sub
test
mov
cli
inc
add
push
ss
jge
push
rcrb
mov
add
push
add
push
push
in
es
sbb
sbb
cmp
pop
jl
xor
and
xor
test
jnp
std
dec
pusha
cmp
mov
loope
cwtl
aad
xchg
xlat
std
mov
sbb
std
sbb
and
adc
ffree
cmp
jb
aas
pop
addl
in
pop
pushf
hlt
ja
leave
inc
outsb
jae
sub
adc
iret
mov
lock
mov
inc
dec
sbb
jmp
or
fiadds
and
adc
push
inc
daa
scas
dec
dec
and
mov
movsl
lahf
insb
lret
int
decb
sub
add
inc
int3
arpl
js
mov
stos
icebp
ror
cwtl
ss
push
shll
dec
pusha
push
mul
aam
xor
inc
push
stc
clc
leave
xchg
mov
jmp
and
outsb
ljmp
cwtl
jo
sub
fdivs
imul
stos
repnz
imul
push
lods
ds
jne
push
or
cmc
fisttpl
push
xor
movsb
add
pushf
push
fincstp
mov
mov
ret
xor
mov
mov
xchg
test
js
push
add
mov
fs
in
lret
xchg
push
mov
mov
adc
pop
fbld
mov
inc
int3
xchg
ds
ret
push
mov
cld
and
test
icebp
dec
icebp
sti
test
sbb
inc
aaa
aad
add
pop
fwait
sbbl
lahf
rol
mov
lock
ret
icebp
inc
jmp
hlt
lret
add
shll
xchg
cwtl
cmpsb
lahf
dec
cli
mov
sbb
repnz
add
fxch
adc
add
jno
lcall
inc
ss
scas
and
push
xchg
push
adc
or
arpl
pop
dec
nop
ss
mov
dec
sbb
outsl
aam
inc
pop
and
call
cld
ja
lods
mov
add
sahf
jb
and
popa
es
or
lahf
outsb
xor
lock
sahf
sub
adc
rolb
pop
bnd
or
cmpsb
or
aaa
xchg
inc
mov
jo
daa
sti
sbb
sbb
sub
inc
jl
ffreep
fsubrs
stos
add
jge
xor
lea
mov
xchg
and
xchg
and
adc
pop
and
mov
popa
xchg
fcoms
shrl
xchg
push
push
mov
mov
in
mov
push
inc
test
out
pop
test
xor
lods
sbb
jg
xor
orb
dec
or
rol
cmp
cld
stos
sbb
prefetch
fs
dec
jno
sarl
out
sti
mov
fistpll
pop
scas
or
adc
movsl
sub
pop
xor
roll
das
cmpl
fisttpl
icebp
xchg
movb
loope
aaa
add
mov
int3
lds
dec
adc
jp
jbe
and
std
adc
call
adc
adc
jle
add
jnp
les
js
dec
outsl
fs
xorb
subl
les
xor
adc
into
mov
in
mull
sub
sub
popa
lds
sbb
test
cmovbe
cmp
mov
adc
sub
cltd
aaa
decl
clc
mov
sub
bound
ljmp
xchg
pop
push
sub
sub
xor
xchg
roll
sub
cmpsl
test
jg
dec
jo
dec
push
movsb
aaa
pop
leave
xor
xor
fists
sub
je
ret
jns
adc
pop
mov
pop
int3
in
sbb
push
aam
vmovsd
in
movsb
add
hlt
inc
clc
sub
stos
pop
pop
mov
loopne
jge
testl
inc
and
xor
add
inc
push
inc
shl
pop
dec
fs
out
mov
es
jns
lret
push
mov
aam
in
out
lds
and
sub
jne
sub
xchg
push
clc
ficoms
mov
mov
outsl
inc
mov
jns
faddl
test
mov
mov
sub
and
repz
ja
dec
mov
ror
add
xchg
mov
rclb
dec
fstl
ds
aam
in
pop
cmpsb
lods
pop
iret
mov
push
cmp
cmp
mov
lods
inc
outsl
ds
out
mov
icebp
stos
jae
push
nop
mov
mov
add
into
cmp
pop
rdtsc
pop
stos
xor
sahf
pop
cs
call
outsb
hlt
aaa
hlt
add
inc
out
mov
and
addb
sbb
popa
jmp
bound
xor
push
cmc
mov
mov
cmp
cmp
into
mov
test
jb
scas
push
and
out
or
and
lcall
jbe
aas
push
cld
lods
sub
ret
adc
mov
add
xchg
mov
inc
jg
jnp
js
adc
pop
add
pop
inc
icebp
mov
ret
test
mov
lea
scas
fs
pop
hlt
loopne
test
mov
xchg
jmp
ret
lret
push
ss
push
jl
lock
ficoml
sbb
xchg
add
add
mov
xchg
mov
jge
scas
xchg
loopne
add
mov
sub
jnp
and
jb
pop
push
cld
insl
sbb
fcoml
ds
and
outsb
xchg
sbb
add
xchg
test
pop
les
lea
mov
fstl
cmc
sub
sub
nop
lahf
ret
or
fiadds
fidivs
add
hlt
lret
aam
xor
add
test
push
aas
mov
mov
inc
and
jg
sti
adc
in
xor
outsb
into
ret
xlat
and
fdivrl
notl
movsb
mov
jns
in
das
push
jecxz
fisubl
xchg
cmp
xor
xchg
mov
xchg
sub
push
push
and
dec
mov
call
out
jbe
nop
pop
out
test
cmp
test
int
out
push
js
lods
cmp
jbe
mov
jp
std
cmp
xchg
adc
and
adc
sub
pop
cmp
mov
icebp
bound
mov
adc
fistps
iret
fmuls
imul
inc
cmp
xchg
dec
repz
loop
sbb
out
inc
call
push
mov
adc
mov
push
icebp
loopne
jnp
lods
inc
mov
fstps
pop
pusha
inc
aam
shlb
add
cmp
cld
inc
adc
jae
fisubrs
and
and
inc
sbb
jl
int3
add
adc
add
out
call
inc
ret
or
or
test
pop
call
add
mov
cmp
mov
cmpsl
cmpsl
lock
sbb
jne
or
xor
adc
pop
mov
adc
sbb
xchg
mov
std
sub
aad
and
sbb
dec
imul
mulb
mov
sub
hlt
cmp
scas
mov
xor
adc
in
xor
stos
add
add
sub
fs
push
enter
xlat
cltd
fs
rorl
ds
sbb
xor
jae
mov
scas
and
lret
pop
mov
dec
hlt
out
mov
pop
mov
cmp
stos
insb
jl
sub
pop
inc
outsl
inc
cmpsb
icebp
cmpsb
fbld
gs
insb
and
mov
xchg
push
cmp
nop
xor
faddl
sti
cli
sub
and
fisttpll
add
in
fldenv
js
sbb
push
ret
cmp
xor
lock
rcrb
pop
scas
mov
enter
loopne
imul
es
add
inc
inc
and
and
xor
mov
adc
jnp
pop
mov
xchg
das
hlt
xchg
mov
xchg
lock
nop
fwait
sbb
popa
mov
jle
add
aaa
adc
adc
jnp
xlat
dec
mov
and
fstpl
aam
and
push
xor
mov
mov
scas
adc
insl
imul
repnz
and
and
pusha
push
je
xchg
lea
out
push
lock
xchg
sub
push
sarb
rorl
out
adc
out
mov
and
xor
mov
stos
cmpsb
or
xchg
daa
or
shrb
cmp
push
insl
mov
sub
movsb
push
gs
es
xor
push
ss
ljmp
jbe
cmp
sbb
fidivrl
dec
mov
les
lock
mov
fnstcw
lea
hlt
and
enter
jecxz
popf
inc
jbe
nop
xchg
adc
or
loope
push
test
xchg
movsb
ds
adc
dec
cmp
popa
fadds
adc
dec
es
les
ljmp
xor
and
push
jge
int
mov
iret
mov
lret
scas
rorb
pop
imul
mov
or
dec
fcoml
fldl
mov
mov
mov
and
mov
fwait
mov
adc
fwait
or
sub
clc
outsb
mov
and
popf
int
mov
pop
jmp
mov
cmpsb
lods
jge
inc
push
add
movsl
cmp
in
add
fsubs
adc
lds
push
fwait
push
mov
mov
mov
sbb
mov
rclb
inc
mov
dec
movsl
and
or
jp
ljmp
jbe
mov
jecxz
jp
ret
jmp
dec
cmpb
mov
push
sahf
lods
dec
lahf
push
sub
mov
out
outsb
pop
shr
ret
inc
lods
adc
das
sub
ss
adc
idivl
int3
and
pop
and
nop
inc
push
jb
inc
pop
and
insb
sbb
adc
stos
mov
inc
sbb
jnp
loope
sub
call
push
idivl
mov
inc
iret
lret
add
and
jg
xor
push
push
push
sbb
add
out
cmp
or
jmp
jecxz
test
pop
mov
inc
jp
in
lcall
ret
mov
jo
or
clc
pop
enter
test
push
add
xor
scas
loopne
pop
cmp
clc
dec
sub
stos
xchg
out
xchg
lods
inc
rcrb
inc
test
stc
jle
mov
fcoms
testl
rorb
jecxz
bound
pop
loope
xorb
mov
or
scas
movsl
rorb
mov
lods
data16
push
push
or
fisubs
das
outsl
adc
jb
jge
das
pop
mov
inc
jne
add
xchg
jecxz
jb
ds
call
cmp
gs
orb
add
dec
cmc
xorb
sbb
pusha
mov
sti
mov
sahf
push
lret
fadds
jmp
mov
imul
xlat
stos
xor
movsl
cs
mov
les
bnd
xchg
and
and
and
mov
pop
push
xchg
add
inc
nop
adc
mov
push
dec
xchg
test
and
and
out
push
fidivl
sbb
push
aad
in
hlt
add
add
jb
jl
mov
cwtl
test
push
lahf
mov
and
es
insb
pop
cli
loop
pushf
cmpsb
fisubrl
xchg
es
cs
pushw
push
mov
testb
mov
into
imul
add
out
xchg
mov
pusha
xor
movsl
xchg
cmc
call
jp
jge
fbstp
repnz
cmp
or
ror
neg
leave
push
lcall
testb
cmp
enter
fsubl
fiadds
push
pop
enter
stc
push
mov
dec
sbb
push
shrl
dec
insl
clc
out
jecxz
xor
mov
mov
inc
pop
jnp
inc
cli
popa
add
daa
xor
stos
in
je
stos
addr16
or
fildll
cld
je
push
adc
xor
add
insb
or
sub
push
std
mov
mov
ds
mov
faddl
fdivs
fs
mov
rorb
pop
subb
call
xor
lods
pushf
xchg
into
sbb
in
adc
imul
stos
sub
pop
add
mov
pop
std
and
ja
fcmovnbe
scas
lcall
into
ljmp
pusha
fisttps
ret
popa
pop
jmp
cmpsb
push
jp
cli
aaa
fsub
mov
jbe
pop
movsb
sbb
jne
inc
rorb
jl
lea
stos
loope
or
in
cmpsb
mov
shll
fidivrs
cmp
ud2
mov
jbe
call
mov
frstor
mov
sti
aam
or
xchg
push
inc
mov
loope
push
int3
lea
cmp
dec
pop
adc
insl
add
icebp
add
rolb
adc
inc
push
xchg
pop
jecxz
sub
loop
shrl
fsubl
pop
sti
addl
xor
cli
out
data16
push
loop
icebp
repnz
out
push
pop
lock
inc
push
dec
out
es
fimull
and
pop
xor
xchg
or
lcall
test
xor
sahf
fs
aad
xorb
das
push
sub
or
movsl
mov
ds
xor
and
fistpl
xchg
fiaddl
addb
aaa
fwait
hlt
sbb
add
incb
cmp
push
jo
ret
xchg
xorb
jb
outsb
fdivrl
or
add
xor
lahf
push
pushf
xor
cmp
adc
insb
shrb
sub
pusha
scas
cs
or
sbb
and
mov
adc
cmp
ret
in
cli
dec
or
sbb
sbb
add
push
push
test
lahf
lock
cmp
les
aam
ds
fisttpl
or
push
fnstenv
je
in
shrl
outsl
in
stc
cltd
mov
andb
xchg
bound
fwait
cs
adc
das
in
scas
rolb
inc
das
push
rolb
jns
xorl
sbb
push
sub
add
mov
test
das
cmp
push
loope
sbb
imul
jns
xor
loop
movsb
push
push
or
fbstp
cld
cmc
push
xor
dec
lcall
cli
fiaddl
xchg
add
adc
mov
ficompl
clc
pop
adc
push
jg
mov
adc
push
dec
xchg
cmp
hlt
dec
insl
jg
adc
mov
push
jge
sahf
les
ljmp
xchg
enter
xchg
and
cmpb
push
addb
rolb
dec
pop
jne
push
push
shrb
scas
mov
icebp
test
inc
sbb
idivb
adc
dec
sub
out
movsl
lock
sub
mov
je
jle
loope
pop
xchg
cwtl
cli
sar
iret
lods
std
mov
idivl
lahf
xor
fiaddl
enter
fs
sbb
pop
ja
push
dec
inc
jnp
daa
mov
sbbl
mov
cli
stc
int3
sbb
or
pop
inc
fbld
sbb
in
popf
insb
sub
mov
cli
jle
enter
into
ja
mov
fdivs
and
xchg
push
xor
push
dec
lahf
and
cmc
addr16
scas
hlt
ss
out
push
shll
inc
mov
out
outsb
add
rcrl
loope
lock
es
mov
adc
mov
sti
aad
mov
cwtl
jnp
push
ret
addr16
push
and
loop
icebp
adc
pusha
hlt
cmpsl
ret
out
push
mov
pop
cmp
adc
insl
loopne
jl
inc
xchg
jg
in
sti
cli
pop
fsubl
push
mov
push
add
idivl
push
mov
lret
xor
mov
mov
and
xchg
shl
call
andl
xchg
int
pop
sbb
dec
aaa
movsl
cmp
rcll
lods
cld
std
sahf
clc
pop
inc
in
outsl
inc
or
add
jne
add
je
sub
and
test
xor
div
movsl
enter
xor
addr16
add
adc
bound
call
div
in
push
jns
shlb
test
clc
test
bound
jmp
lods
and
sbb
gs
fidivl
cmp
icebp
ret
cmp
jg
pop
push
pusha
pop
cmp
aam
imul
jo
push
jmp
pop
pop
pushf
sbb
jg
sbb
jne
pop
lock
xorb
jle
xor
pop
push
push
mov
cmp
pop
mov
xchg
sub
out
xor
adc
sbb
cld
fcomps
pushf
mov
std
lcall
roll
or
mov
and
add
dec
mov
out
pop
lcallw
arpl
dec
ljmp
sbb
push
jl
sub
out
jnp
test
outsb
in
add
push
mov
sbbb
lea
pop
stc
sub
xchg
lds
or
xor
outsb
adc
loopne
loopne
hlt
adc
adc
cmpsb
dec
les
adc
lods
lcall
in
push
std
inc
lret
mov
mov
push
xor
aad
push
lds
pop
push
mov
cmpsb
sarl
out
add
mov
ss
push
sub
std
xchg
fstl
lahf
fldt
insl
and
pop
mov
mov
cli
pextrw
jl
jb
ljmp
fsubl
adc
mov
or
mov
mov
std
cmc
mov
inc
vpsadbw
cmp
mov
test
outsl
mov
push
shll
xchg
push
addb
adc
test
jl
push
cwtl
in
cmpsl
mov
pop
mov
inc
out
sub
sahf
pop
and
xor
cld
jmp
loopne
pop
sbbb
mov
sub
dec
xor
or
in
std
test
xchg
sbb
jp
dec
mov
lods
cmpsb
xchg
push
stc
jno
stos
mov
pop
pop
mov
push
add
mov
sbb
dec
inc
cs
mov
or
cmp
jge
mov
sbb
cld
lea
sbb
xchg
push
push
mov
aaa
add
pop
inc
cltd
daa
add
jne
push
xchg
or
imul
out
sbb
inc
jae
addr16
test
int
xor
cmpsl
dec
lods
cmp
push
pop
sbb
mov
call
inc
mov
mov
pusha
xchg
xor
push
sub
pop
pop
out
xchg
adc
pop
mov
add
je
scas
mov
push
cld
push
sub
jb
popa
or
jp
adc
rcrb
gs
stos
in
dec
and
dec
inc
mov
add
lsl
xchg
leave
mov
in
fsubs
aad
pop
mov
scas
adc
and
je
add
xorl
push
cwtl
pop
mov
push
push
xor
es
ljmp
mov
insl
adc
jp
push
sarb
lods
pusha
lcall
pop
movsb
jg
or
in
dec
xorb
addb
pop
insl
lea
push
xor
mov
jne
dec
lea
int
out
stos
test
popl
imul
dec
inc
insb
dec
mov
in
pop
pop
mov
pop
push
xor
ja
mov
pop
fldl
stos
pusha
sub
adc
mov
pop
push
in
and
decl
mov
fstpl
test
test
jb
ret
rolb
insb
pop
lods
sahf
mov
xchg
mov
inc
cld
add
jae
pop
xchg
or
aas
dec
cmp
imul
iret
je
scas
mov
rclb
pushl
data16
pushf
aas
cmp
cs
mov
pop
shrb
or
and
pop
inc
mov
push
cwtl
mov
roll
sahf
repnz
or
xor
push
incb
dec
inc
jbe
add
repnz
xchg
aas
push
mov
dec
sbb
incl
lret
xchg
sbb
or
push
pop
inc
jg
or
shr
cld
add
cmpb
lret
mov
scas
lcall
popf
and
sub
adcl
jl
pop
push
jb
cmpb
icebp
xchg
lods
pop
xor
rorl
shll
push
icebp
pop
jo
mov
fucomip
retw
movsl
nop
jns
test
repz
add
aad
std
shlb
and
rcrl
adcb
bound
ss
stos
icebp
js
sbb
test
jge
jp
push
les
or
fbstp
inc
aad
testb
or
fdivl
call
and
pop
jmp
decl
inc
repz
insl
xor
in
pop
dec
jl
pop
pop
lcall
imul
mov
or
mov
das
incb
sahf
out
adc
or
cli
stos
jl
jmpw
xchg
inc
ljmp
scas
cmp
jo
or
test
mov
or
das
add
mov
push
out
mov
mov
sbb
inc
jl
clc
mov
clc
cmpsb
int3
and
clc
jle
addr16
arpl
stc
jg
icebp
push
das
add
cmp
inc
cwtl
add
ljmp
xchg
dec
mov
fst
xchg
xchg
mov
in
mov
add
mov
and
loop
add
jnp
cmp
jp
pop
push
add
jge
aaa
sbb
inc
cmp
ja
cmp
jecxz
mov
inc
int3
imul
fldl
xchg
outsl
in
inc
mov
mov
movsl
fistpl
das
addb
loope
or
push
repnz
es
sbbl
call
xchg
mov
cmp
clc
subl
xor
fld
dec
sahf
fidivl
push
shll
jno
jle
pop
add
clc
mov
push
dec
mov
test
mov
enter
and
push
clc
jecxz
sbb
pop
inc
fdivrs
push
xchg
sahf
test
fstps
inc
aaa
mov
cmc
mov
popf
rclb
mov
in
xor
lock
xchg
lock
pop
add
sahf
dec
cmc
sbb
push
xor
ror
cmp
incl
inc
sub
cmpsb
leave
ss
inc
loopne
jbe
cmp
xor
add
jne
shl
mov
aam
imul
test
fs
mov
xchg
push
js
dec
rcr
nop/reserved
scas
out
dec
dec
sub
ljmp
pop
mov
dec
jge
mov
in
inc
fsqrt
int3
imul
in
test
sub
mov
in
stos
ret
xor
mov
mov
fisubl
movsl
add
sub
enter
jmp
fcomp
adc
outsb
fwait
in
bound
xor
lret
ljmp
clc
popf
dec
loopne
pop
outsl
sub
notl
shll
push
inc
mov
jae
add
or
push
out
pop
andb
rorl
push
or
mov
jl
mov
xor
loop
js
mov
inc
inc
cmp
aam
adc
shl
imul
aaa
cmpb
sub
jge
lcall
push
les
aam
lds
frstor
nop
push
lods
fwait
mov
push
dec
test
pop
out
sbb
add
pop
dec
mov
addl
leave
inc
rcrb
jp
insb
stos
xor
mov
mov
mov
push
icebp
rcll
sub
dec
test
push
mov
pop
xchg
mov
push
shll
insb
sbbb
xor
add
xchg
shlb
mov
cmpb
bt
adc
pop
icebp
and
les
fadds
int
jecxz
inc
lea
mov
mov
addb
rorb
push
ficoms
dec
or
push
dec
loopne
inc
sbb
and
fdivrs
repnz
jle
jnp
and
mov
in
mov
inc
mov
adc
movsl
test
clc
dec
adcb
jg
and
es
or
lcall
xchg
aaa
push
xor
mov
les
jo
loop
ds
or
xchg
cmp
xchg
cmc
ror
ds
orl
arpl
lock
incl
cmp
inc
mov
mov
push
test
and
and
cli
ss
je
cld
xor
xor
dec
xlat
sub
mov
std
lods
and
lret
test
lds
mov
mov
mov
pop
aam
sbb
mov
call
sub
push
xor
arpl
mov
sbb
pop
ds
dec
mulb
xchg
dec
aad
lcall
out
xchg
push
sub
jo
std
jbe
sub
stos
mov
insl
inc
ljmp
lds
std
push
sahf
cmp
mov
pop
shrl
clc
mov
or
outsb
push
ds
fbld
mov
sbb
mov
addl
cmp
loopne
xchg
rolb
mov
out
clc
pop
fdivl
lahf
push
notl
inc
and
xor
mov
loopne
nop
frstor
xchg
data16
outsb
or
cmp
sbb
cmpsl
decl
adc
cmp
decl
jmp
in
clc
mov
cmp
rcl
std
call
mov
sub
int3
test
pop
jg
add
insl
shrb
pushf
stc
movsb
add
cmp
inc
inc
std
adc
sbb
in
decb
notl
iret
xchg
push
cwtl
and
pop
js
mov
lret
jne
jns
sbbb
and
and
or
mov
jmp
sbbb
sbb
scas
or
add
fisubrl
inc
divb
iret
and
adc
test
push
shrl
pop
mov
adc
sub
add
and
inc
jg
popf
cmpsb
ds
loopne
cmp
dec
adc
insb
sub
cs
movsl
sub
insl
adc
push
decb
aas
mov
sbb
iret
in
test
and
mov
imul
or
sub
push
testl
cs
out
test
adc
fcompl
test
aad
xchg
fiadds
gs
nop
sti
push
mov
mov
sbbl
push
cmp
pop
push
jmp
cli
jecxz
lahf
rcrl
sbb
pop
dec
pop
inc
out
cs
xchg
adc
aad
lea
mov
xchg
adc
stc
mov
xchg
jae
mov
push
rolb
mov
jne
push
pop
mov
sahf
mov
fildll
add
push
out
mov
push
ss
cld
and
clc
mov
pop
sbb
mov
inc
dec
pop
test
pusha
push
aad
mov
mov
sbb
xor
cmpsb
scas
cmpsl
jecxz
adc
and
pop
dec
hlt
sbb
mov
das
fsubs
aad
into
lret
adc
xchg
dec
xchg
fcomip
mov
push
out
xorb
in
sub
jg
or
jle
mov
out
push
lock
jp
pop
insb
bsr
sbb
imulb
mov
mov
fs
cltd
rcrb
and
stc
pop
mov
mov
ss
add
pop
xor
ficoml
push
add
jg
nop
dec
sarl
pop
xor
or
popa
mov
xchg
cmp
cli
xchg
pop
faddl
aam
cmp
mov
or
mov
and
pop
jno
or
sbb
lods
xchg
jecxz
fmuls
cvtpi2ps
sub
fs
cwtl
clc
or
ja
mov
fisttpl
push
cmpsl
xor
xchg
xchg
lahf
leave
lds
xor
mov
in
sub
mov
outsb
fbld
jo
mov
rcrl
enter
and
adc
pop
pop
cmp
xor
adc
call
aam
jbe
inc
fists
jl
aam
jbe
dec
repnz
dec
subb
repz
mov
jecxz
out
mov
mov
push
sbb
cmp
push
sbb
xchg
jmp
sbb
aam
xlat
pop
mov
push
sbb
test
jnp
jg
add
pop
lea
bound
sub
stos
call
mov
xchg
xchg
xchg
add
loope
mov
fucomip
fisubs
rorb
mov
fcomip
cld
dec
push
outsb
dec
aam
fadds
ss
test
lock
push
pop
xor
cli
fwait
inc
lods
xchg
mov
or
sti
xorl
aam
pop
push
psrld
or
fimuls
add
das
cld
xchg
jae
xlat
or
push
fcmovbe
iret
rolb
jge
leave
cld
das
jns
gs
mov
rorb
jge
inc
lret
add
or
mov
pop
dec
add
jmp
push
push
or
inc
movsb
call
cmp
pop
fdivrl
dec
pushf
mov
push
xor
rorb
clc
xchg
xchg
mov
xor
in
mov
movsb
xor
std
mov
and
imull
push
stc
aam
pmuludq
push
add
jns
or
pusha
imul
lds
in
jg
cli
test
push
sbb
les
aaa
scas
js
dec
cli
clc
add
xor
and
push
push
shl
shrb
aam
cli
mov
mov
xchg
std
ss
sar
add
mov
sub
jle
pop
xchg
push
ja
xchg
inc
out
leave
lcall
jns
push
mov
scas
xlat
dec
pop
clc
out
pop
pusha
mov
addr16
jg
push
and
sbb
xor
jne
outsl
cmp
push
mov
inc
inc
call
push
cmpsl
push
adc
mov
or
js
idivb
inc
jecxz
jle
inc
add
andb
into
sub
and
jmp
movsl
adc
pop
xlat
push
hlt
or
push
in
lds
mov
push
mov
sbb
mov
loopne
mov
orb
inc
incb
sbb
sbb
or
mov
js
mov
ficompl
std
cmpsl
int3
dec
cld
fstpl
int
jge
sbb
filds
stos
stos
nop
pop
cmp
pop
cmp
jne
mov
or
hlt
movsl
mov
adc
addb
jmp
and
sub
aam
pop
cld
mov
es
sub
inc
and
lods
adc
fstpt
mov
fcmove
ljmp
mov
test
push
add
push
cld
out
je
adc
cmp
xchg
ror
mov
sbb
scas
xchg
mov
idivb
lcall
or
test
pop
jl
cmp
dec
rolb
aas
mov
ror
mov
iret
es
sbb
mov
cmp
mov
in
or
stos
inc
pusha
or
adc
mov
fdivrl
sub
aas
push
and
dec
sub
sarl
test
mov
mov
icebp
xchg
loop
push
jbe
loope
in
es
stos
push
xor
sub
sar
bound
mov
or
dec
jmp
enter
addb
pop
and
insl
xlat
jmp
pop
cmp
rcrl
pop
push
inc
jo
sub
xchg
out
movsl
or
stos
sub
mov
insl
sbb
dec
jb
sbb
ret
es
out
pop
push
mov
les
jno
cmp
inc
cmpsl
push
cli
gs
fdivp
movsb
dec
sbb
loop
sahf
sub
add
or
pop
insb
jg
outsl
mov
mov
insb
cwtl
mov
jo
mov
call
aas
ljmp
cmp
shr
lock
pop
sub
inc
mov
dec
divl
stos
rcrb
add
adc
mov
push
cli
jb
cltd
xchg
push
scas
das
mov
pushf
hlt
sbb
push
sbb
mov
push
and
push
mov
dec
stc
js
pusha
insl
fwait
mov
fstp
in
jmp
nop
cmp
scas
les
push
out
jp
incl
test
ret
mov
push
sbb
lock
cmpsb
aas
in
dec
in
push
loopne
cmp
cs
mov
cmp
ljmp
adc
mov
dec
fstpt
mov
xor
inc
fiaddl
test
outsb
test
xor
sub
loop
pop
loop
push
cwtl
xor
fwait
and
out
inc
xchg
test
push
mov
in
les
dec
or
ret
jg
loopne
sub
jno
fistps
jae
outsb
jmp
push
jns
adc
inc
cld
xor
insl
aas
push
out
in
in
push
jle
mov
pusha
lock
subb
sub
fsub
jmp
dec
clc
call
icebp
je
mov
icebp
roll
inc
adc
orl
das
js
and
or
enter
jmp
mov
testl
popa
cmp
xor
pusha
or
cmpsl
dec
data16
loope
mov
sub
jbe
movsl
pop
mov
fbld
mov
add
stos
inc
movsb
mov
sub
scas
mov
ret
loop
incb
adc
out
fmull
bound
mov
fnsave
pop
cmpl
add
inc
rorl
jg
ret
stos
push
mov
mov
test
pushf
lcall
push
push
mov
lods
push
or
and
xor
cmp
and
subl
repz
mov
dec
cmp
mov
add
mov
cwtl
cmp
daa
cmc
nop
mov
in
decl
xchg
mov
stos
pop
lods
push
sbb
je
nop
mov
lock
xor
mov
push
shlb
popa
test
enter
idivb
cmc
adc
mov
push
push
je
mov
repnz
inc
outsl
dec
lea
int3
dec
mov
sbb
sti
jo
mov
adc
outsb
ja
mov
inc
loope
lcall
fwait
add
prefetcht2
fcomip
jo
push
add
add
popa
popf
inc
sarb
pop
mov
push
jl
in
xor
pop
or
push
xor
jecxz
leave
sbb
sbb
into
push
nop
ja
mov
imul
push
fcompl
pop
ret
push
enter
fs
sub
inc
movsb
sbb
lds
loop
jge
jge
or
xchg
test
rcll
push
and
cld
xor
enter
jle
jge
sbb
adc
xchg
rolb
add
in
addl
incb
lahf
adc
jmp
ficomps
xor
mov
dec
add
dec
jl
xchg
stc
push
lock
repnz
inc
or
fistpl
push
dec
adc
pop
lret
rcrb
shll
adc
mov
mov
add
loopne
pop
fldcw
mov
fcmovnbe
aas
out
sub
ret
cmp
dec
jae
test
popf
push
je
insb
mov
mov
adc
popl
jne
or
mov
pop
inc
inc
push
push
jne
bound
shlb
lret
lods
jge
push
rolb
and
rclb
fidivl
in
aaa
loop
xor
shlb
sbb
je
mov
add
pop
pop
adc
adc
and
shrb
push
pop
mov
jmp
pop
xlat
cwtl
enter
mov
inc
cmp
mov
and
add
pcmpeqw
jnp
sbb
call
aas
aaa
je
jle
insl
sub
adc
std
fmuls
mov
push
cs
xor
scas
jnp
std
pop
mov
stos
push
popl
lock
mov
xor
sbb
mov
push
sbb
out
cmp
rol
mov
outsb
leave
inc
out
imul
mov
repnz
mov
sub
rcll
rorl
in
aaa
mov
in
xor
fcomps
ds
adc
popf
roll
inc
ljmp
inc
cs
mov
push
cwtl
getsec
lcall
mov
dec
scas
in
int3
and
cmp
test
imul
mov
push
out
push
mov
add
arpl
sar
and
mov
jecxz
mov
mov
lahf
pusha
cmp
vmovsldup
sbb
daa
mov
pop
jg
pusha
mov
jno
mov
sbb
lds
dec
mov
jge
lock
sbb
add
shl
jae
dec
mov
repnz
cmpsb
fbstp
orl
mov
mov
mov
push
clc
rcr
mov
loopne
cmp
push
pop
mov
lahf
fists
dec
cwtl
sbb
mov
aam
add
ret
cmpsb
jmp
dec
dec
popa
repnz
mov
fimull
aam
insb
jle
push
lds
js
scas
inc
pop
and
pusha
jle
out
push
cmp
adc
add
pusha
insl
add
sahf
in
lahf
pop
adc
or
mov
inc
ss
sub
mov
aas
pop
xchg
sbb
add
xchg
mov
jne
aad
sub
pop
pop
scas
mov
in
js
test
jg
in
clc
pusha
shll
arpl
cmpsb
add
mull
cli
dec
xchg
stos
fwait
rcl
lods
pop
push
pop
sub
jg
in
movsb
dec
jnp
jp
cld
and
loop
pop
push
nop
xchg
loope
add
loop
aad
jg
fistpl
add
mov
fs
push
add
xor
sbb
cli
ss
int
jae
or
mov
pusha
adc
push
sarb
movsb
push
aam
test
pop
stc
in
fcmovu
clc
and
xor
cli
cs
mov
clc
sarb
bound
dec
fisubrs
jge
pop
popa
int3
lcall
sub
ret
aas
call
gs
inc
mov
jmp
lds
push
loopne
and
adc
ljmp
loop
ret
sub
out
dec
cmp
jp
or
pop
mov
mov
rcr
test
fildll
mov
and
add
outsb
dec
or
lahf
aad
data16
lret
push
cmp
add
icebp
add
lock
cli
push
pop
stos
mov
cli
mov
adc
insl
cmc
mov
sbb
pop
sub
aaa
cld
pop
sbb
addl
mov
cld
or
jmp
popl
add
aaa
mov
inc
push
mov
or
inc
fmull
shlb
inc
xchg
cmp
xchg
mov
or
stc
stos
rcrl
rorl
gs
sbb
push
inc
mov
jb
lea
mov
test
lcall
mov
mov
dec
mov
fcoml
out
mov
mov
push
ffree
in
rolb
clc
loope
sub
fcoml
rorb
call
stos
js
out
insl
movsl
aas
adc
jecxz
cmpsl
mov
lea
adc
shll
fcoms
aad
push
jl
into
in
push
mov
xchg
push
push
adc
loope
inc
mov
jge
or
or
ds
xor
pop
jns
push
pop
gs
cwtl
inc
jnp
jns
push
inc
leave
adc
call
pop
sbbb
cs
fildl
sbb
ja
push
int3
or
and
scas
leave
pusha
xchg
or
push
imul
ret
fmuls
loopne
incb
push
arpl
mov
cmp
hlt
pop
aas
fwait
mov
dec
ficompl
inc
fdivr
ljmp
js
fcomi
add
push
and
inc
xchg
ss
jge
test
ss
stos
push
mov
test
push
movsb
stos
pop
loopne
cmp
sub
shrl
fdivl
ficompl
lods
ds
jle
lds
cld
mov
lds
mov
mov
loope
xor
or
ret
add
mov
push
cld
jle
aaa
mov
or
jo
push
mov
add
push
outsl
push
adc
sub
das
push
and
add
sub
mov
mov
sbb
fisubrl
add
and
clc
adc
dec
rolb
cwtl
fstps
out
add
mov
inc
cmc
push
sub
hlt
sarb
mov
push
lea
xchg
sub
loopne
mov
je
outsb
scas
clc
xor
insl
inc
scas
or
nop
push
incb
pop
pop
sbbl
jo
aaa
xor
inc
adc
ja
enter
jae
mov
cld
ja
mov
in
cmp
idivb
add
mov
add
xor
data16
sbb
cwtl
rorl
xchg
jge
jae
loop
or
lcall
cwtl
loope,pn
shr
mov
sbb
loope
ss
xchg
daa
das
mov
stc
out
pop
loopne
in
loop
ret
and
or
dec
fisttpll
push
and
lods
and
aad
movsb
out
out
jbe
in
or
xchg
fistps
xchg
add
loopne
test
mov
cs
mov
push
rcrb
sbb
push
push
push
lcall
ja
popf
dec
add
or
.byte
sub
and
dec
cmc
add
and
add
es
lods
jg
incl
mov
add
movl
lea
push
push
add
add
ret
sti
fisttps
jne
lea
push
sub
je
or
leave
ret
inc
jae
mov
aaa
mov
dec
cld
cmp
push
push
call
jnp
pushw
inc
not
aaa
mov
push
jae
xor
xor
pop
mov
add
mov
lea
push
push
lcall
xor
mov
add
clc
push
lret
insl
insl
sti
movsb
or
cwtl
push
pushl
cmp
xchg
or
inc
rolb
ss
dec
jno
pop
addl
fldl
outsb
negl
xor
loope
xorl
fincstp
xlat
jns
push
clc
push
xor
out
adc
push
mov
stos
mov
and
std
mov
push
mov
add
mov
push
push
mov
mov
not
push
add
mov
iret
not
pop
add
mov
pushl
dec
mov
sbb
push
inc
div
dec
inc
mov
xchg
icebp
test
mov
push
push
sub
dec
xor
push
jns
xor
rcll
pop
setp
imul
or
popa
in
add
sub
in
xlat
loope
mov
lods
mov
je
dec
pop
aam
push
lret
pop
fcoml
push
imul
jbe
popa
mov
call
pop
fincstp
sar
addr16
shrb
aaa
arpl
in
pop
mov
insb
mov
pushl
pop
sub
pop
dec
pushl
neg
add
repnz
inc
subl
or
inc
jge
dec
lock
popf
lds
mov
nop
inc
ficoml
das
cs
pop
movsb
addl
push
fimull
rcr
clc
in
pop
xchg
andl
fucomip
ds
dec
enter
ret
into
loopne
jle
fbstp
mov
push
or
jg
xchg
pop
dec
mul
inc
xchg
adc
hlt
mov
stc
lock
mov
shll
mov
repnz
or
jbe
testl
clc
xor
cmp
cmp
push
outsb
push
jns
or
mov
jge
pop
pushf
xor
test
xlat
ret
arpl
mov
dec
xchg
jmp
insl
lock
dec
pop
mov
push
out
mov
dec
mov
xor
inc
and
rclb
mov
stos
xchg
test
push
faddl
mov
xor
mov
int3
dec
arpl
push
or
insb
mov
and
into
adc
push
out
test
add
xchg
adc
out
jp
or
negl
dec
insl
push
add
dec
ret
mov
push
addr16
jbe
fstl
pop
jns
enter
xchg
popf
inc
xor
repnz
push
sub
push
adc
cli
adc
in
ljmp
or
dec
mov
mov
mov
add
inc
dec
neg
sbb
call
inc
inc
test
or
jne
mov
pop
pop
roll
lock
push
inc
cmp
jo
sti
fists
dec
int3
push
lock
pop
mov
mov
inc
pop
mov
sbb
ds
rolb
add
in
push
movsl
or
test
xor
dec
mov
mov
fwait
sbb
fs
js
outsb
inc
push
in
sbb
dec
push
mov
out
add
dec
aam
addr16
mov
mov
sub
xor
pop
ss
add
clc
clc
imul
popf
or
mov
jnp
sub
push
pusha
in
fbstp
iret
cmp
into
push
aaa
or
or
loope
aad
sarl
lock
call
ret
aad
enter
fs
inc
aaa
add
xor
jl
mov
js
cmp
inc
mov
or
lret
mov
jmp
ja
add
inc
jg
dec
aad
add
mov
or
jmp
repnz
js
dec
jns
push
divl
clc
push
dec
jne
rolb
jle
adc
aam
dec
imul
in
pushf
fisubs
lock
xor
xorl
fdivs
dec
loopne
xchg
jnp
sub
cwtl
jns
xorl
push
jl
pop
lds
xor
push
dec
or
repz
mov
xor
cmp
xlat
les
loop
pop
hlt
fsubs
in
ja
arpl
aaa
aad
push
mov
ja
dec
sub
mov
lret
imul
stc
mov
push
shrl
push
mul
xchg
outsb
lahf
push
fidivrs
mov
mov
push
hlt
cwtl
xchg
adc
add
mov
push
push
push
pop
adc
or
add
loopne
in
sbb
add
mov
add
out
push
and
pop
sbb
jecxz
pop
test
and
push
or
jbe
add
inc
sarl
or
cmp
inc
xchg
pushl
ret
in
cli
imul
jne
mov
sbb
mov
fistps
mov
aaa
pop
je
push
or
push
push
pop
orl
mov
sub
cmp
cmp
movsb
movl
and
jl
idivb
dec
cmp
dec
ljmp
lret
inc
mov
push
dec
inc
fdivs
mov
insl
shr
or
sbb
push
je
incl
cmpsl
imul
shrb
outsl
inc
push
push
ja
add
out
add
xchg
movsb
and
and
mov
cwtl
out
inc
pop
add
cwtl
push
push
sub
add
ret
rol
loopne
pop
dec
dec
or
adc
pop
repnz
lods
jne
xchg
stos
scas
fwait
sub
xor
xlat
cmc
lds
or
inc
nop
or
cltd
lock
push
cld
inc
je
push
add
or
pushf
in
or
sub
rcl
mov
insl
add
push
or
dec
enter
and
cld
sub
loope
clc
aaa
mov
mov
or
xlat
maskmovq
negl
push
and
arpl
cmp
xor
pop
fxch
pop
ljmp
xchg
inc
jno
inc
xlat
ror
and
pushf
fisubrl
cwtl
jno
inc
inc
pop
arpl
movsl
mov
fcoml
jmp
cmp
mov
or
sbb
pop
or
bound
jns
adc
sub
mov
aam
mov
div
jmp
stos
in
push
mov
mov
dec
jne
xlat
clc
and
jns
push
das
inc
or
pop
and
in
push
inc
cmp
movsl
pop
jbe
ret
inc
xlat
shl
or
test
add
xchg
jns
data16
aas
add
or
shr
rolb
sbb
xor
add
ds
xorl
inc
push
dec
into
push
mov
aad
push
push
popa
inc
jae
add
inc
arpl
loopne
fnsave
inc
xor
jae
or
or
xorl
test
xor
dec
aas
sbb
aas
fst
jge
movsb
in
sbb
orb
arpl
divl
shll
loopne
fwait
lock
neg
push
dec
inc
add
adc
sub
mov
hlt
sub
mov
cmpsb
sub
sbb
sbb
fisubs
inc
dec
dec
inc
add
mov
mov
stos
fs
push
mov
or
sti
dec
test
leave
lock
iret
inc
sub
cmp
into
sub
sahf
and
adc
pop
dec
inc
push
inc
adc
dec
mov
jb
add
insb
xchg
inc
rolb
or
jo
neg
jle
fcmovnu
pop
jbe
dec
add
sbb
lock
inc
push
cmpsb
dec
inc
nop
test
insb
inc
sub
shll
mov
mov
lret
dec
adc
jne
leave
ljmp
imul
sarb
aaa
fnstsw
push
jne
add
pop
fs
lcall
push
int
inc
mov
push
push
leave
loopne
sub
push
lds
sub
js
mov
cmpsb
dec
xor
testb
add
dec
mov
call
aas
mov
push
mov
push
mov
ss
xor
mov
rcl
aas
xlat
adc
mov
sahf
jne
ja
fwait
pshufw
push
orl
sbb
lret
sub
mov
or
sub
mov
out
jecxz
mov
aaa
addr16
rcl
popf
prefetch
psllw
aad
iret
gs
mov
sub
in
and
aad
les
arpl
cli
add
xchg
xlat
les
stos
xor
mov
dec
add
push
inc
jo
inc
push
test
cmp
sub
adc
dec
mov
scas
in
pop
ret
imul
jp
imul
add
stos
push
add
iret
fistl
add
push
add
push
dec
jnp
xchg
mov
int3
cmp
add
jmp
cmp
adc
sub
nop
add
inc
movsl
add
int
jg
add
insb
outsl
cmc
mov
push
sub
pop
pop
lahf
or
mov
and
sti
aaa
mov
or
and
or
lock
sarl
pop
addb
add
sbb
pop
and
add
mov
add
pop
sti
pop
jae
ljmp
add
and
fidivs
xor
in
and
rcll
sbb
imull
call
sub
fsubrp
add
fbstp
sarb
mov
add
enter
testb
les
test
inc
mov
cmp
js
mov
add
in
mov
adc
jl
add
pop
xor
cmp
cld
dec
orl
xlat
or
add
or
repz
jne
xor
jbe
out
dec
sbb
inc
push
fsubr
out
iret
add
sub
pop
movsl
xchg
inc
xchg
add
testb
pop
or
data16
lahf
dec
adc
pusha
add
add
jb
sbb
ds
ret
out
or
xor
fdivrl
or
xchg
outsl
test
in
ret
int
ss
cmc
cmp
push
cmp
and
pushf
add
cmp
shll
and
aad
pop
sbb
dec
es
stos
lret
lcall
sarl
xor
push
in
rcrl
fcmovb
hlt
xchg
jo
xor
cmp
dec
in
or
cs
xor
mov
ficomps
in
out
jne
pusha
cmp
rcrb
flds
cmpsl
cmp
aas
mov
adcb
movsl
test
or
add
push
das
incl
js
rorb
sub
ret
into
cmpsl
jo
push
add
adc
repnz
test
ret
mov
add
push
popf
mov
mov
daa
fisttpll
inc
mov
mov
pcmpgtb
or
fidivrs
sub
add
or
scas
fldcw
aas
movsb
mov
push
gs
push
mov
lea
add
add
movsb
ret
iret
xchg
inc
xchg
push
call
bound
mov
shrl
shlb
dec
movd
fdivs
lahf
fwait
shll
sub
cmp
mov
jmp
xchg
cmp
add
movsb
adc
stos
add
push
stc
lock
dec
jns
pop
divl
adc
xorl
and
add
and
hlt
enter
pop
mov
loop
arpl
loopne
stc
xor
out
sti
dec
cld
sti
mov
jb
scas
popa
jl
clc
push
ljmp
fcomps
xchg
jmp
or
mov
je
pop
sub
cmc
xchg
out
cmpsb
inc
pushf
and
js
frstor
rolb
fwait
mov
inc
or
dec
fildl
lret
insb
mov
pop
pop
rcll
jl
xlat
lahf
fwait
fwait
mov
add
sub
in
or
mov
or
adc
pop
push
int3
fmull
ja
stos
mov
or
add
xchg
ret
imul
stc
xor
or
xchg
mov
js
das
cmp
pop
sahf
pop
mov
dec
cld
push
pop
inc
ja
jl
ljmp
or
push
jne
add
jo
stos
and
fimull
mov
in
int
xchg
mov
cs
xlat
or
test
lret
adcb
das
mov
mov
mov
in
loope
jno
add
call
sbb
sbb
push
rol
andb
cltd
push
cmp
jg
sub
mov
nop
mov
cmp
pop
mov
fwait
pop
and
movsb
fldt
xchg
and
add
jmp
push
cmp
pop
fadd
hlt
in
push
fisttpll
push
mov
lock
js
dec
lock
push
fidivrs
mov
push
cmp
push
out
je
in
push
jne
mov
and
pop
or
stc
mov
mov
in
lahf
std
lds
inc
scas
sbb
jnp
push
stos
push
adc
outsb
shlb
mov
into
jp
sub
jle
jg
pop
jge
add
xchg
adc
gs
movsl
add
pop
sbbl
idivl
rcrl
lock
in
aaa
adc
push
cld
mov
push
lods
aad
in
out
hlt
xorb
or
xchg
jmp
fmull
push
jle
popa
inc
jge
push
xor
mov
movsb
or
loope
cs
pushf
xchg
in
xor
stos
lret
jo
add
jmp
push
mov
lock
jno
out
in
rcr
cwtl
int
outsb
push
fwait
sarb
in
loope
sub
push
sbb
mov
jmp
cli
cmpsl
insl
or
sub
sbb
jp
dec
xor
xor
lcall
sbb
pop
jl
and
cmp
mov
xlat
test
xor
rclb
inc
or
hlt
or
and
or
in
ret
lods
and
andps
pop
stc
cmp
repz
mov
jmp
popf
and
cmp
aam
xchg
clc
shlb
push
popa
jnp
in
mov
inc
clc
or
fidivrl
les
es
sub
test
roll
inc
shr
push
pushf
ficomps
pop
shlb
xchg
dec
push
fneni(8087
sbb
inc
jnp
fiaddl
imul
rorl
push
sbb
je
sub
out
out
inc
sti
jo
jae
xchg
pusha
mov
adc
mov
inc
add
into
inc
xchg
mov
setnp
out
loope
and
repz
pop
icebp
mov
cmp
loopne
add
xor
or
daa
fstp
add
pop
loope
jbe
xchg
mov
movsl
scas
sub
xchg
loop
add
js
sub
movsl
inc
jmp
iret
and
fucomp
adc
icebp
xchg
xor
andl
shll
shr
imul
mov
cmp
icebp
jbe
in
es
call
xchg
andb
cmp
rcr
xchg
aaa
test
add
mov
inc
dec
mov
add
inc
push
lock
loop
or
mov
movl
dec
stc
clc
in
push
mov
loope
cmp
add
sbb
test
orb
neg
clc
rorb
inc
imul
jne
add
add
imul
mov
mov
clc
test
data16
adc
mov
xchg
jns
pop
lods
mov
lods
adc
inc
ja
pusha
add
pop
mov
icebp
xor
jnp
roll
inc
test
cs
cmp
jge
add
xor
stc
paddb
imull
unpcklps
cs
add
ja
adc
or
pop
sbb
andl
test
and
push
je
fiadds
shrl
mov
or
sti
aaa
pusha
ret
and
inc
pop
xchg
push
andl
repnz
jo
inc
std
sbb
jl
mov
cmp
xor
shlb
cld
loope
mov
mov
mov
cltd
jle
cmp
pop
ss
adcl
and
scas
rorl
push
lahf
jp
mov
cmp
add
aad
add
shlb
dec
ja
inc
push
pop
jl
out
dec
dec
push
shlb
ja
inc
inc
jl
xor
movsb
data16
ds
xchg
mov
fildll
ret
test
xchg
mov
lods
and
cmp
push
xor
jl
orb
enter
in
imul
rorb
movsb
sbb
adcl
insb
subl
mov
cmc
dec
pop
pop
push
jmp
dec
fstps
jl
jo
jns
jecxz
and
dec
xor
pop
loop
sbb
arpl
es
and
mov
out
mov
mov
out
aad
xor
sarl
pop
add
dec
in
pop
incl
mov
pop
subb
addr16
call
xchg
popf
fwait
lock
cld
xchg
lret
fiaddl
gs
push
jl
bound
inc
push
cmp
aas
mov
test
pop
sub
or
pop
xchg
fwait
pop
fsubrl
xchg
daa
js
cmp
ljmp
push
push
jo
add
js
nop
inc
push
js
scas
mov
fs
jnp
xlat
clc
sbb
xchg
repnz
pop
mov
inc
scas
push
cmp
repnz
shrb
addl
mov
and
mov
mov
push
test
pop
jns
fstpt
les
sub
push
in
mov
test
ds
divl
xlat
testb
inc
shlb
pusha
sbb
sub
add
repnz
mov
adcb
inc
dec
data16
or
arpl
scas
push
ss
cmp
xor
sbb
adc
and
mov
out
sbb
sahf
mov
mov
divb
or
sub
jp
mov
pop
out
mov
adc
xchg
mov
xor
jl
push
cmp
roll
mov
xchg
cld
adc
jbe
scas
push
cltd
mov
jo
imul
mov
shll
and
nop
movsl
mov
jp
sbb
test
xchg
pop
lds
xchg
popf
mov
fdivrl
inc
dec
xor
cmc
mov
cwtl
cli
out
fiadds
add
hlt
rcrb
inc
push
cli
mov
sub
aas
push
hlt
bound
xchg
or
andl
inc
jmp
push
xlat
adc
cmc
inc
movsl
inc
inc
adc
cmpsl
scas
or
dec
cld
roll
jno
pop
jo
sbb
mov
fadd
push
jns
negl
stos
in
or
in
pop
aaa
cmp
aas
add
cmpsb
jae
or
push
mov
loopne
mov
fidivrl
or
push
sbb
outsb
mov
sahf
lds
sub
cld
pop
xlat
je
imull
mov
dec
or
lret
jmp
sbb
add
jne
mov
stos
xlat
sbb
popa
dec
lcall
stos
ss
or
test
inc
push
mov
push
add
mov
sub
andb
dec
call
es
sbb
mov
sub
test
push
mov
in
mov
pop
and
stc
insb
pop
lret
pmulhw
jmp
icebp
or
mov
lahf
pop
inc
mov
jle
xchg
mov
mov
adc
pop
or
inc
cmp
jnp
popf
out
xor
sahf
rorb
add
mov
xchg
das
lea
add
jle
and
fistpl
cs
or
dec
sub
xchg
cmovae
jecxz
xchg
cmp
xor
add
sbb
es
xor
hlt
mov
sahf
out
test
lds
dec
adc
mov
cs
xlat
cmp
mov
cmp
lock
popf
xchg
mov
mov
dec
fnstenv
push
mov
pop
inc
push
jno
das
sbb
in
js
xchg
ret
or
inc
lea
sub
mov
jbe
loopne
mov
jl
push
lret
movsl
andl
lcall
or
add
or
repz
sub
hlt
hlt
into
jno
lret
xor
clc
mov
mov
mov
aas
push
fldenv
cmp
lods
rcrl
mov
pusha
jl
or
push
cmp
xchg
mov
popa
mov
rcl
inc
sbb
in
pusha
lret
mov
rorl
xor
push
pop
hlt
dec
dec
dec
insb
hlt
daa
add
outsb
pop
pop
sub
mov
fdivr
mov
gs
or
int3
mov
sbb
dec
jb
dec
sbb
movsl
loope
test
gs
out
nop
or
repnz
dec
and
cmpsl
mov
inc
mov
sub
mov
cmc
or
mov
in
mov
fidivs
push
push
incb
cmpsl
subb
stos
lods
add
fistl
xorl
pop
jecxz
into
add
sbb
push
inc
lahf
fwait
or
movsb
ljmp
outsb
or
and
push
mov
xchg
lods
push
testl
push
repnz
mov
in
outsb
movsb
int3
rclb
pop
call
jnp
jne
js
fidivs
pop
pop
enter
fmulp
call
inc
or
xlat
lock
es
sti
dec
lea
add
mov
push
mov
cmpsb
test
stos
push
imul
cli
inc
sti
fcomp
cli
cmp
clc
dec
pop
or
pop
lock
cmp
push
fstps
bt
or
xchg
mov
insb
mov
push
push
jo
cmp
fcomi
or
sbb
sbb
cmpl
mov
inc
and
stos
push
mov
call
gs
mov
enter
pop
gs
stc
repz
push
addr16
xorb
mov
out
pop
or
lock
mov
xchg
sub
xor
xlat
mov
lret
sbb
hlt
lcall
aad
inc
int
icebp
cli
orb
ret
add
cmp
mov
icebp
push
insl
cmp
xchg
xchg
add
ret
test
inc
mov
sbb
pop
out
push
ret
and
js
jno
sbbb
lock
dec
xlat
cmc
sahf
dec
adc
pop
lods
fisubrs
ficoms
fildll
xor
mov
clc
ja
pop
mov
push
sti
fisubrl
push
bnd
inc
div
add
sub
aad
test
je
and
hlt
and
ja
dec
shll
jnp
int
cmp
sub
xlat
sbb
aas
rolb
sbb
inc
dec
aam
jg
ror
inc
jnp
mov
pusha
insb
add
sub
push
sub
out
dec
xlat
mov
aas
mov
clc
sahf
dec
mov
nop
dec
mov
fcomps
push
aas
jbe
push
icebp
dec
stos
or
mov
dec
pop
mov
mov
mov
mov
pop
xchg
push
xchg
push
dec
mov
ljmp
mov
cwtl
sbb
clc
test
das
cld
std
in
stos
add
mov
inc
insl
xor
insl
imul
inc
nop
in
or
loop
jbe
push
adc
jmp
push
pop
loopne
xor
imul
add
aaa
mov
movsb
pop
das
rcrb
mov
call
divb
push
pop
dec
test
das
fstpl
test
sub
sahf
sahf
rcl
adc
nop
dec
hlt
dec
pop
mov
sbb
add
aaa
fnstcw
ds
mov
fnstenv
pop
mov
cmpsl
or
xlat
jecxz
add
fsubrs
into
push
pop
xchg
add
dec
test
aas
repz
xorb
jge
push
mul
fwait
mov
int
inc
outsl
nop
xor
pop
or
xchg
int
or
std
xor
push
cmp
aaa
icebp
mov
mov
or
mov
push
cmp
idivb
leave
dec
sbb
loope
sbb
ljmp
in
mov
sbb
mov
popf
les
add
cmp
ret
adc
adc
mov
jg
sbb
out
sbb
arpl
mov
jp
fdivrp
mov
inc
jp
mov
push
icebp
cmpsb
pop
iret
push
xchg
test
or
vorpd
mov
test
ficomps
stos
popf
call
push
hlt
pop
xorl
das
jmp
jb
test
dec
sbb
adc
test
mov
pop
mov
rolb
jle
sbb
xor
repz
push
or
pop
xchg
imul
mov
sub
jne
aad
xor
sbb
repnz
stos
mov
scas
sbbl
lret
out
or
sub
xchg
into
jne
inc
lea
leave
push
movsl
fs
adc
in
xchg
adc
adc
inc
sbb
pop
adc
pop
mov
push
fiadds
pop
in
xchg
mov
jns
and
loopne
xchg
sub
or
add
ljmp
xchg
fwait
mov
js
mov
mov
movsl
sub
stos
pop
call
or
aad
adc
shrd
mov
and
push
pop
mul
jmp
aam
add
icebp
ljmp
push
xor
loopne
test
aad
int
loop,pt
add
jp
ds
hlt
sbb
ja
and
xor
jp
dec
nop
scas
mov
dec
cmp
aas
call
xchg
mov
idivb
mov
adc
xchg
adc
shl
cmp
cs
fnsave
test
popf
mov
lret
push
mov
lret
in
jns
cmp
fnstenv
jmp
inc
jae
inc
adc
es
ss
stos
mov
push
aam
mov
shlb
imulb
cli
repz
fdivl
add
popa
loope
bound
push
jne
insb
leave
clc
mov
pop
mov
leave
ret
cld
or
add
shrb
push
pop
pop
in
pop
fsubr
ds
cld
mov
mov
in
lock
jno
test
push
dec
add
test
cmp
or
fidivrs
jle
lods
cli
and
jno
repnz
mov
add
or
mov
hlt
or
test
inc
cmp
xchg
lods
cmp
mov
inc
scas
scas
jecxz
jmp
and
sbb
ret
cmp
fwait
dec
or
cmp
or
sbb
lret
shll
cmp
inc
cwtl
xchg
xor
stos
inc
sub
jnp
imul
inc
idivb
dec
andb
ja
inc
cld
pop
ret
std
test
pop
fdivs
scas
fadds
jl
pop
mov
ss
or
mov
fwait
push
cmp
pop
mov
bound
or
roll
loope
mov
dec
inc
sbb
addr16
push
jmp
clc
sarl
pop
and
shrl
outsl
cmpb
xchg
aaa
add
out
lods
out
and
fwait
pop
pop
insb
dec
xchg
cltd
add
cmp
sahf
dec
clc
loop
fdivl
xor
sbb
aad
sbb
mov
dec
test
adcl
mov
or
xchg
mov
pop
clc
clc
and
dec
push
push
xor
xchg
or
inc
jnp
mov
out
adc
xchg
dec
jp
cs
bound
pop
hlt
mov
mov
inc
or
clc
hlt
fsubp
pop
and
jg
xchg
mov
adcb
jmp
inc
loopne
xlat
push
lock
insl
xchg
scas
mov
mov
stos
push
es
push
jp
mov
fcoml
add
jg
sub
movsl
inc
xor
cmp
out
mov
push
leave
cmpsb
cmc
lds
add
or
jg
push
cmp
push
sahf
bound
jno
pop
xchg
xchg
sbb
outsb
outsb
pop
loope
test
sbb
mov
lock
xchg
xor
mov
imul
outsb
inc
fisubrl
bt
push
rcrb
or
outsb
mov
xchg
sub
subl
mov
cs
mov
mov
push
repz
pop
lret
ljmp
sub
pop
xchg
ljmp
lret
popa
repnz
cvtps2pi
dec
lock
sub
dec
mov
mov
in
pop
int
mov
pop
mov
rclb
hlt
cltd
sub
fstps
mov
popa
inc
in
sar
or
add
arpl
shrd
not
test
pop
push
sbb
xor
or
mov
or
inc
cmp
add
aaa
xchg
lods
jp
dec
outsb
or
pusha
rorl
add
nop
jmp
sbb
pusha
mov
loope
out
roll
push
cmp
mov
rorl
inc
ds
repz
pop
fiaddl
lret
insl
inc
fdivl
inc
xchg
cmc
sti
mov
jb
and
movsb
pop
and
or
or
lock
mov
dec
mov
test
push
mov
or
daa
mov
xchg
cmp
pop
push
orb
inc
jnp
sub
lahf
cmp
cmp
or
sub
aas
sub
ret
loopne,pt
rolb
sbb
xchg
push
orl
cmp
mov
add
cs
push
test
xor
jge
or
lds
fld
cs
movsb
inc
mov
push
mov
scas
hlt
xor
scas
and
pop
jg
mov
cli
pop
mov
jns
push
sbb
mov
fisttps
push
aam
inc
or
sbb
sub
pop
in
add
or
fs
pop
sbb
repnz
scas
inc
and
cs
jb
push
outsb
scas
insl
repz
loope
mov
cwtl
in
or
ds
insb
lret
js
mov
and
mov
xchg
cmp
dec
sub
jecxz
dec
jne
xchg
ja
lret
arpl
test
cmp
mov
xor
sbb
add
out
push
pop
ljmp
add
dec
adc
mov
mov
mov
cld
mov
inc
push
xor
cmp
bound
inc
cli
imul
hlt
add
jl
xor
push
sub
mov
sub
aad
in
mov
scas
add
sti
add
mov
imul
push
jge
adc
movsb
int3
fwait
test
mov
xor
inc
or
xchg
clc
xchg
fwait
mov
cwtl
lds
xor
rorb
mov
inc
fldenv
pushf
jnp
aaa
push
lcall
andb
not
fwait
adc
orb
or
mov
adc
cmp
mov
cmp
cmp
inc
stos
orl
pop
inc
es
jmp
sub
or
xor
pop
or
ss
cwtl
dec
aas
adc
icebp
hlt
and
out
xchg
fsubl
movsb
mov
aaa
loopne
out
out
ja
and
mov
repz
test
mov
xor
mov
hlt
jo
das
cmp
jo
mov
movsl
or
arpl
imul
mov
jmp
lret
push
mov
cmp
fcompl
fmull
jbe
sub
leave
adc
jmp
mov
mov
mov
sbb
jp
mov
sbb
pop
js
imul
stc
jp
scas
add
int3
imul
sti
test
pop
sbb
push
lcall
dec
push
mov
push
in
enter
icebp
or
test
add
push
push
outsb
push
loopne
dec
stos
xor
jae
mov
cmp
or
cmp
jle
mov
jg
cltd
fucomp
subl
adc
aas
jo
lcall
aam
cmp
jle
loope
add
orb
pop
pop
push
xchg
or
sbb
or
jo
lea
movsl
test
xchg
dec
and
out
pop
jmp
icebp
jl
push
repnz
add
sti
mov
mov
jg
mov
stos
sub
mov
fmuls
outsl
inc
lods
cmp
xchg
negb
mov
test
je
out
add
aas
jp
cmp
out
mov
cld
xchg
cmp
in
and
xorb
stos
sub
rcrl
pop
cmp
clc
imul
push
test
mov
insl
push
lret
outsb
cmpl
fadds
xor
call
sbb
mov
dec
pushf
jnp
test
cmp
aas
das
sahf
fidivl
jp
inc
iret
cmp
add
push
jbe
rcrl
cld
sub
add
vmwrite
mov
inc
push
xchg
shl
stc
pop
scas
jae
mov
test
cmp
xor
add
or
ret
decl
sbb
push
les
jp
push
sbbl
test
dec
movsb
jecxz
icebp
stos
loopne
push
cmpsb
int3
das
mov
aad
hlt
ds
sub
inc
add
pop
pop
cmp
adc
out
ficomps
iret
das
sub
add
cmp
enter
ss
adc
push
xor
pop
lahf
ffreep
loop
and
fdiv
out
rcrl
pop
or
add
mov
movsl
fwait
jno
cli
pop
sub
dec
repz
sub
push
cs
xor
lret
stos
add
adcl
mov
dec
mov
andl
lea
cmp
adc
out
xorb
cmp
xor
ror
daa
or
xchg
xchg
in
xor
fnstenv
and
pop
xchg
dec
mov
add
ds
sbbl
imul
scas
movb
sbb
sahf
jno
std
mov
aas
mov
rclb
sub
lea
js
mov
in
lods
je
mov
movq
jp
or
sub
sub
out
mov
test
cmp
mov
lock
pop
clc
or
ds
call
cs
mov
aaa
sub
aam
xchg
loop
adc
mov
fstpl
mov
adc
jbe
icebp
repnz
ds
push
scas
shrb
fdivl
mov
in
xchg
icebp
push
fimuls
inc
incb
sahf
mov
je
push
push
loopne
pop
scas
xor
inc
dec
dec
sub
ja
sahf
mov
dec
adc
dec
notl
mov
gs
ja
adc
loopne
push
add
mov
mov
push
in
lcall
ljmp
or
sub
mov
aas
push
mov
loop
xchg
and
sbb
shrl
xor
btc
test
mov
jo
or
mov
pop
jecxz
stos
xchg
sahf
out
xchg
dec
shr
mov
push
push
vpshufd
dec
stc
jmp
loopne
aaa
mov
cmc
cwtl
out
push
pop
jne
insb
aad
sub
or
mov
sbb
test
addb
lahf
xchg
fdivrl
push
inc
xorl
sub
or
imul
arpl
lahf
outsb
jmp
xor
push
add
adc
aaa
push
jno
sub
ret
add
sbb
test
add
cmp
jnp
pop
out
pusha
mov
jo
cld
repz
jle
inc
jne
pushf
add
pop
mov
test
in
xor
or
add
and
leave
scas
push
dec
and
dec
cld
subl
scas
inc
das
or
retw
or
xchg
les
cmp
push
pop
mov
subb
mov
stos
mov
jl
push
stos
addr16
jbe
jp
xchg
lods
popl
pop
jne
iret
out
jns
or
addr16
hlt
pop
data16
or
aad
mov
icebp
add
filds
lea
cmpsb
and
jle
push
dec
ds
push
ja
subb
inc
sub
js
icebp
fistl
cmp
cli
insl
pop
lret
adc
or
fdivl
test
int3
imul
subb
cmpl
data16
jbe
mov
jp
addr16
rorl
fsub
lds
jne
mov
mov
add
pop
jle
repz
jle
idiv
flds
loop
mov
cmp
jl
or
adc
pop
mov
ffree
cmp
push
sbb
pop
xchg
mov
jbe
jo
jle
outsl
enter
cmp
sbbl
push
jns
sarb
inc
pop
fldl
jno,pn
pop
das
imul
loope
pop
add
xchg
and
dec
scas
shrb
mov
mov
repnz
add
xchg
mov
and
insb
orb
and
rclb
jecxz
movsl
lock
loop
mov
push
lea
mov
and
or
pop
pop
and
cmp
mov
push
mov
cmpsl
shlb
mov
inc
movsl
push
test
push
jmp
ret
lods
movsb
xchg
adc
jecxz
fstpl
je
add
inc
rolb
fldl
inc
inc
dec
fstpl
mov
sbb
lods
mov
outsb
sub
fld
subl
push
jmp
cli
jne
sub
pop
cmpsl
adc
cld
and
xchg
add
inc
aam
fld
jae
adcl
daa
and
in
test
fisubl
mov
stos
fucomp
ret
or
data16
andl
push
mov
xchg
jecxz
mov
cwtl
iret
jecxz
inc
push
mov
mov
lcall
cmpsl
adc
inc
aas
bound
lods
ljmp
jl
cmp
sbb
les
in
or
sub
mov
push
fnsave
out
lods
push
ja
out
shlb
mov
add
test
insb
and
clc
cmp
cmp
sbb
jb
pop
dec
add
jae
inc
mov
icebp
or
mov
or
repnz
push
std
jo
cmp
rorb
sbb
popa
xchg
cmpsb
jge
xchg
mov
subb
dec
jae
loope
xchg
push
jo
sub
cmc
inc
jae
jno
add
xchg
mov
sub
sahf
dec
xor
sti
mov
cmp
mov
pop
test
shr
push
add
fnstsw
xor
pop
add
jecxz
stos
call
shrl
inc
cmpsb
sub
push
fisubrl
jb
scas
je
jae
pop
das
ret
or
rorl
test
and
sub
cmp
adc
pop
imul
loop
ss
lret
ret
in
into
dec
daa
int
lock
cmp
mov
or
cmp
dec
iret
xchg
cmp
adc
inc
mov
and
sbb
lods
dec
mov
iret
pop
add
call
add
jmp
ljmp
sbb
movsl
bnd
int3
iret
pusha
mov
insb
mov
ffreep
cmpsl
adc
pop
jae
pop
mov
dec
xor
pop
mov
out
rclb
and
nop
xchg
inc
or
in
imull
xchg
xchg
mov
push
hlt
popa
int3
imul
mov
inc
ficoml
dec
cmp
ret
and
xchg
mov
sub
xchg
jp
cs
adc
in
adc
iret
dec
popa
clc
pop
addr16
and
push
sarb
gs
stos
outsb
mov
movsb
adc
rcrl
adc
das
stc
nop
cmp
and
mov
clc
lock
test
sub
or
sarb
fldt
push
mov
or
lds
mov
cwtl
mov
mov
xlat
push
pop
fldl
inc
test
mov
cmp
mov
lret
addb
pushf
imul
popl
imul
sahf
xchg
mov
rcrl
or
mov
cli
mov
insb
mov
push
jbe
push
pop
sub
lods
cmp
repnz
and
fwait
adc
ds
lds
jmp
test
inc
lcall
data16
fcompl
xor
insb
push
sbb
sti
sbb
xor
rcrb
shrb
push
imul
sub
loopne
in
sub
mov
push
icebp
dec
ret
xor
repnz
jg
or
push
and
fsub
imul
xchg
fwait
insb
cwtl
mov
int
mov
inc
mov
mov
xlat
loopne
mov
sub
imul
mov
pop
push
adc
popa
fwait
inc
mov
in
cli
add
dec
xchg
adc
xchg
fsubs
out
std
pop
cmp
sub
push
bound
dec
lcall
out
shlb
insl
push
jl
dec
mov
xor
and
cmp
sbb
test
mov
inc
xchg
sub
faddp
lods
and
out
loop
loope
xcrypt-cfb
cmpsl
and
push
jnp
and
out
repnz
loopne
into
pop
outsb
lods
mov
mov
jno
mov
push
inc
push
dec
sar
push
mov
ss
fsubr
filds
rolb
data16
mov
iret
lods
lret
mov
and
sahf
xlat
aad
adc
movsl
mov
aad
inc
mov
outsb
icebp
movsb
dec
dec
dec
push
pop
out
mov
clc
dec
pop
mov
pusha
ja
xlat
rorl
in
mov
sbb
cmp
mov
lret
cmp
sarl
mov
mov
dec
xchg
pop
mov
pop
pop
mov
add
ds
mov
btc
mov
fildl
and
add
push
enter
arpl
arpl
movb
outsb
xchg
cmpsb
in
adc
add
icebp
inc
jg
xor
int3
test
test
push
adc
faddl
jno
cltd
xchg
push
outsl
mov
xor
in
add
mov
dec
lock
loopne
fidivrl
lahf
addb
cmc
rorl
pop
xchg
test
xor
inc
xor
aas
adc
mov
inc
lahf
sbb
cwtl
xchg
cltd
inc
pop
sub
in
hlt
jno
xor
xor
dec
push
dec
mov
mov
jae
mov
jbe
lcall
add
loopne
and
into
xchg
mov
shll
setns
inc
cli
xchg
sub
cmp
aam
sbb
xchg
push
aam
out
mov
and
ds
dec
jl
add
adc
stos
push
fbld
into
xor
or
dec
inc
dec
adcl
inc
scas
push
fidivs
lock
inc
xchg
add
xor
cmc
cld
test
out
aam
rorl
inc
sbb
out
loopne
pop
mov
mov
mov
lcall
in
imul
sbb
cld
and
adc
sbb
xor
adc
popf
cli
movb
xchg
sub
pop
nop
inc
cmp
stc
cmp
xchg
push
pop
insl
aas
mov
mov
iret
jae
xlat
xor
fstl
loop
popa
ljmp
stos
hlt
or
xor
in
cmpb
mov
xor
icebp
movsl
int
je
je
push
add
frstor
inc
clc
push
xchg
leave
inc
sti
add
daa
dec
xchg
cmp
mov
mov
insl
add
ret
ds
mov
jp
push
adc
xchg
stos
pop
mov
dec
icebp
mov
adc
xchg
sub
into
lret
jge
pop
pop
inc
shrl
outsb
cmp
test
cmpsb
inc
inc
mov
rorl
jno
into
mov
sbb
or
push
push
ret
xchg
test
sahf
fwait
test
inc
push
and
outsl
je
sbb
and
dec
orl
mov
mov
mov
ss
adc
cmc
sub
adc
hlt
pop
mov
sub
call
movsb
popf
push
mov
mov
mov
fcoms
sbb
jmp
cmp
xor
mov
xchg
negl
sbb
push
popf
test
cld
faddp
xor
add
adc
mov
sub
fs
sub
notb
leave
loopne
in
scas
adc
outsb
xchg
ds
jo
sbb
push
sub
xor
rcll
lds
jbe
sub
rorb
orl
addr16
pop
mov
dec
xlat
andb
or
stos
cmp
xchg
jo
cmp
cmpsl
cli
stos
xchg
xchg
roll
mov
test
mov
les
lods
xor
or
js
mov
aam
mov
addr16
sbb
mov
cmp
push
push
fwait
jmp
mov
mov
aas
lahf
ss
mov
mov
pop
push
fucom
pop
and
cli
xchg
mov
sub
inc
int
fwait
sub
pop
test
sub
scas
outsl
jg
out
lahf
lods
xor
scas
popa
xor
orl
pop
stc
adc
cmp
scas
mov
andl
ljmp
push
je
push
mov
mov
mov
cwtl
mov
mov
std
out
add
or
inc
mov
cltd
out
sti
cmp
je
rolb
xchg
pop
xchg
fcomps
js
test
xchg
xchg
pushf
inc
push
push
mov
lea
mov
xlat
inc
scas
outsl
jns
mov
jg
adc
in
pop
jg
mov
adc
push
xor
je
or
pop
sub
fmull
xchg
punpckldq
jg
jle
clc
pop
inc
push
inc
or
mul
inc
je
or
scas
jmp
mov
add
adc
stos
movsl
repz
cltd
aad
and
scas
add
insl
xchg
imul
test
lret
icebp
sbbb
push
cli
scas
testb
mov
sbb
add
mov
lret
aaa
ljmp
mov
cwtl
mov
xchg
les
jle
stc
or
testl
pop
sub
ja
stos
push
pusha
sti
cmp
mov
incl
or
mov
sbb
or
pop
pop
jl
push
addr16
inc
jne
jo
sub
xor
mov
andb
mov
jb
fisubs
test
jl
mov
cs
jbe
cmpsl
scas
pop
fucom
pop
mov
push
hlt
push
pop
xor
inc
out
cltd
push
add
mov
jo
out
stos
ja
jl
jbe
inc
jno
aaa
xor
test
les
andl
cs
stos
outsb
dec
cmp
mov
and
push
ss
stc
insb
test
xchg
aam
aaa
shrd
jp
mov
sbb
push
movsb
stc
jae
stos
dec
std
shlb
insl
mov
insb
ret
jo
sbb
pop
mov
pop
jg
mov
mov
icebp
in
cmp
cmp
pop
dec
data16
adcb
loop
lret
add
stos
jb
lcall
sahf
aam
adc
push
mov
inc
jg
jmp
inc
and
xchg
mov
xchg
js
sub
in
pop
mov
or
cmc
ficoms
iret
inc
mov
push
lods
inc
outsb
movsb
test
mov
or
stc
xor
inc
insl
pop
daa
arpl
scas
out
ret
adc
pop
push
hlt
lret
out
or
jmp
jg
xor
mov
cltd
and
cmp
inc
fs
cli
or
iret
adc
push
cmpsb
sahf
in
js
jecxz
das
pop
aad
cmp
adc
test
mov
cs
lret
and
test
repz
notb
adc
pusha
pushf
xor
dec
adc
xchg
imul
stos
cmp
insl
jecxz
fwait
test
into
imul
aaa
scas
jo
int
movsb
jl
mov
ret
mov
push
repz
lea
pop
cli
cld
cmp
cli
ja
lcall
repnz
cmp
sub
arpl
test
cmp
ljmp
cmp
addb
lds
cmpsb
out
adc
loope
sub
xchg
mov
aad
mov
rol
push
xchg
dec
and
pop
jmp
fistl
xor
adcb
cmpsl
divl
out
xchg
call
mov
mov
cmp
and
ja
sahf
sub
jp
mov
mov
dec
mov
lret
mov
scas
fiaddl
mov
js
pop
repz
movsl
sbb
mov
mov
fsubrs
mov
pop
or
mov
mov
inc
jo
pop
and
inc
fs
insb
sub
pop
cmc
inc
jbe
popa
inc
negb
pusha
fsubs
xchg
scas
fadds
push
cli
push
inc
mov
jbe
and
pop
adc
cmp
push
mov
mov
mov
mov
mov
addr16
rcrl
xchg
das
sbb
mov
lahf
jnp
imul
aaa
mov
shlb
or
mov
pop
sbb
or
das
push
scas
mov
and
pop
jge
mov
stc
push
mov
jl
cld
call
enter
pop
add
arpl
push
loopne
enter
rolb
sub
fmulp
add
lods
jbe
push
jno
insb
cld
nop
push
cli
fs
adc
sbb
mov
cli
test
jns
cmp
enter
test
push
mov
inc
test
es
inc
sbb
lods
lret
jle
lcall
push
push
out
es
enter
fmuls
in
scas
cmpsl
fidivrl
inc
ds
pop
lret
mov
sbb
sahf
lock
call
ljmp
lcall
mov
std
jge
call
aad
cmp
cli
jno
out
mov
js
pop
lcall
push
adc
inc
mov
hlt
adc
adc
mov
dec
lahf
xchg
out
xorl
pusha
ret
dec
xchg
dec
mov
and
ret
pusha
pop
sbb
jb
cmp
add
sub
aaa
mov
add
cwtl
in
or
orb
mov
ficompl
pop
arpl
pop
or
movsl
sbb
jecxz
sub
cmp
stc
call
adc
jb
dec
adc
inc
cmpsb
xor
jl
add
les
add
push
push
or
jg
repz
xor
cmp
adc
xchg
lcall
syscall
xchg
loop
jl
dec
lret
inc
xor
mov
push
or
mov
orl
jno
nop
mov
out
inc
pop
lock
xor
xorb
in
cmp
jl
in
sub
cmp
xor
mov
cmpsl
pop
or
mov
cmp
inc
insl
pop
mov
xchg
sarb
add
stos
jbe
int
stc
ljmp
or
sbbb
test
loop,pt
add
in
mov
lock
aam
imul
scas
outsb
in
std
test
mov
xor
push
xor
call
mov
sarb
adc
push
jo
mov
out
flds
inc
inc
push
addb
xchg
cmp
mov
jl
push
add
shl
shll
sbb
push
jmp
sbb
dec
std
cld
out
add
stc
cmp
mov
mulb
enter
aam
fwait
lock
and
mov
mov
stos
push
fs
cmpsb
les
push
scas
push
lahf
or
add
push
inc
roll
mov
clc
js,pt
call
add
cmc
test
or
xor
loop
push
push
add
inc
mov
arpl
and
sub
outsl
add
or
pop
arpl
push
dec
dec
rorl
daa
pop
imul
add
fldcw
lock
mov
popa
push
sub
pop
rorl
das
cs
jbe
roll
add
xchg
pop
movsl
pop
ljmp
mov
and
xor
push
adc
scas
mov
mov
cmp
jmp
arpl
sarl
or
jle
roll
push
enter
sbb
cmp
gs
cmc
orl
adc
dec
das
lcall
idivl
cltd
fisubs
arpl
out
cmpsl
push
inc
shrl
or
dec
or
out
push
stc
shlb
xor
lret
test
mov
loop
loope
xchg
jecxz
in
dec
mov
jne
mov
mov
stos
mov
pop
mov
xchg
stos
insb
cmp
adc
xchg
nop
cmp
push
shrb
add
je
cs
lea
iret
jnp
nop
pop
add
fdivrp
add
sub
stos
cld
inc
adc
int3
inc
or
in
mov
jl
cmp
lcall
cmc
push
pop
jnp
push
fucomip
fsubl
scas
loope
jmp
cmc
mov
and
sub
stc
sahf
sbb
xchg
fwait
dec
jmp
mov
add
or
js
adc
sbb
and
sbb
out
or
shlb
fldcw
movsl
sarb
mov
out
test
lahf
xchg
dec
movl
sub
push
aaa
mov
cmp
jne
sti
sbb
lock
inc
push
test
rcr
imul
lock
sbb
pop
pop
sbb
movsl
jo,pt
stc
add
popa
mov
scas
mov
movsl
sbb
xor
pop
cmpsl
int
xor
cmp
adc
call
mov
hlt
imul
test
cmpb
fstpl
fadds
rolb
mov
jge
imul
cmp
push
xlat
repz
cmp
test
dec
mov
test
addl
inc
pop
add
or
mov
mov
stos
iret
rclb
pop
stc
jno
and
js
xchg
pop
lds
lahf
dec
in
test
movsl
js
mov
js
cmc
imul
std
xor
repnz
sbb
cmc
mov
add
ljmp
mov
js
inc
or
aas
jbe
cmp
push
or
jg
rclb
dec
aam
lds
add
sbb
addr16
nop
imul
jp
aaa
ljmp
ss
sub
movsl
emms
jecxz
cmp
dec
adc
shll
andl
fiaddl
ljmp
mov
int3
xlat
cltd
push
mov
xchg
jae
sbb
mov
popa
cmp
lds
mov
cmp
mov
cmp
inc
dec
cmp
inc
jmp
rcrb
cmp
out
int
daa
push
pop
lods
mov
adc
and
mov
lods
pushf
out
cs
cmp
mov
and
ljmp
scas
ret
negl
fisubs
mov
cltd
hlt
push
aaa
mov
aam
lret
mov
cmpsl
cmp
adc
cmp
lea
cmp
cltd
aas
cmc
mov
fcoms
pop
mov
push
inc
jne
lea
pop
aaa
mov
loop
xchg
cmp
mov
fstpl
add
ret
jg
xchg
mov
adc
cmpsb
mov
ret
sarb
jo
out
add
push
sarl
or
push
jecxz
ds
lds
into
jge
mov
pop
pop
ds
adc
push
mov
jp
dec
dec
and
cmp
adc
sbb
aam
or
push
or
nop
pop
ret
ret
mov
push
push
xor
pop
movsb
or
outsl
rcl
popa
ss
shll
mov
les
push
sub
mov
sbb
stc
and
pusha
test
inc
xor
push
pop
imul
adcl
in
jp
lods
jle
shrl
das
xor
int
in
mov
scas
sbb
je
int
push
outsl
and
cli
cmpsb
sbb
clc
or
movsb
leave
push
sub
mov
in
or
xor
xlat
aam
jmp
dec
loopne
jns
test
lret
fiadds
push
sahf
test
or
std
xchg
in
nop
scas
dec
cmp
rcll
mov
xchg
pop
bnd
std
cmc
add
iret
out
xor
xor
and
xor
paddsb
ja
add
ljmp
dec
jo
or
cli
add
mov
iret
es
mov
push
cld
mov
jle
mov
xor
repnz
popa
call
mov
addr16
sti
dec
mov
imull
iret
not
rcrb
idiv
lods
data16
aam
lret
adc
lds
out
insl
and
sar
test
repnz
cli
mov
add
cmc
loope
sti
jno
loop
scas
lock
add
push
pushf
les
jg
pop
test
je
std
daa
mov
out
xlat
jecxz
push
lods
fbstp
in
subl
dec
pop
jl
lea
pop
fnstcw
out
xchg
push
sbb
cmpsb
and
jno
aas
lods
pop
imul
push
pop
ja
pushf
addr16
mov
dec
xchg
in
mov
sbb
dec
leave
inc
je
js
repz
xor
rcll
sbb
pop
push
cmc
imul
push
movsl
dec
sbb
push
xor
mov
jo
adc
mov
insb
clc
aam
test
dec
and
jo
ja
addr16
ficompl
outsb
mov
loopne
aad
clc
inc
fwait
es
or
punpckhdq
loopne
cmp
lock
fildll
lcall
icebp
addl
cmp
outsl
fdivrs
pusha
sbb
cmpsl
bound
push
movsl
shll
aam
sbb
push
xlat
enter
pop
push
sbb
and
pop
clc
mov
cmpsl
push
adc
push
xchg
testl
inc
pop
add
dec
push
test
je
test
xor
mul
xor
sub
mov
add
stos
mov
fsts
adc
jg
push
mov
dec
popa
push
jbe
mov
dec
pop
dec
aaa
adc
or
das
shlb
out
fnsave
push
dec
sub
stos
ret
clc
push
inc
fildl
dec
mov
add
rorb
sbb
xor
fmuls
shl
sahf
pmulhw
pop
cs
inc
dec
pop
pop
mov
xor
idivl
or
jecxz
push
mov
or
xor
aas
ljmp
mov
outsl
cmp
test
cmp
mov
adc
and
jne
stos
je
cwtl
ds
xor
jge
andl
inc
mov
inc
mov
rclb
fwait
sti
test
xor
mov
cmc
clc
xor
outsb
pop
mov
push
call
mov
dec
fwait
pop
push
jb
mov
add
dec
shl
pop
push
test
rorl
or
cmpl
mov
out
ret
adcb
insb
add
fisttpl
rcrb
or
or
movhps
xor
into
out
divb
dec
lods
push
cmp
mov
es
jb
fildl
into
mov
adc
mov
add
and
lods
cld
gs
lods
jecxz,pn
or
inc
adc
fisttpll
mov
push
xor
fwait
push
or
jo
fcmovnb
jecxz
repnz
cmp
test
xchg
pop
jge
mov
push
shll
mov
fmuls
lds
repz
or
in
popf
push
sbb
stc
jmp
cli
cli
je
cmp
adc
ret
xor
lea
je
cld
push
aad
pusha
out
mov
das
add
call
xchg
push
xor
cs
int
shl
pop
or
sub
adc
ucomiss
scas
jae
sbbb
xor
jns
cmp
push
fcmovnbe
test
movsb
adc
ret
cmp
mov
aad
fldenv
aam
or
jbe
pop
sbb
scas
xchg
dec
dec
scas
popa
mov
loop
mov
hlt
out
mov
dec
enter
add
dec
push
fwait
push
sub
xchg
insb
cmp
loop
hlt
es
subl
xor
cwtl
mov
mov
je
sbb
int3
ljmp
mov
clc
xlat
je
stos
sbb
push
pop
mov
add
add
or
push
data16
and
ss
and
dec
cli
pop
push
out
out
fistl
inc
movsb
and
cmp
sbb
stos
cmp
fistps
clc
jmp
mov
fsubs
push
xchg
loopne
les
inc
push
jno
test
dec
or
jb
and
call
pop
fisubrs
test
scas
and
and
push
dec
sbb
nop
cmp
sbb
in
mov
push
xchg
push
addr16
inc
out
enter
push
jmp
and
jp
pop
fmuls
test
mov
aam
test
inc
adcb
sbb
scas
loopne
fsubrs
pusha
push
mov
mov
lret
mov
shll
cmpsl
or
icebp
and
mov
pop
sub
push
int3
mul
adcl
dec
in
ret
out
push
das
mov
mov
in
in
inc
adc
mov
orb
js
cmp
cli
xchg
push
popa
dec
jl
gs
jge
xchg
cmp
ret
mov
in
out
mov
cmpsl
add
out
outsl
test
lcall
cmp
js
mov
subl
or
rcr
mov
mov
jnp
dec
jno
inc
xchg
inc
divl
lock
andl
sub
out
icebp
es
dec
fnstsw
cmpsb
sub
inc
aaa
push
mov
add
out
mov
out
popf
cmp
int
push
jl
jecxz
dec
pushf
test
xchg
jnp
cwtl
div
adc
mov
hlt
fistpll
or
push
popa
or
push
test
scas
pop
push
push
jmp
into
sbb
lds
fimull
and
mov
push
shlb
mov
imul
outsb
pop
mov
roll
mov
xorb
je
or
xorb
icebp
mov
fst
and
jge
cmc
in
inc
jnp
sbb
lret
loopne
sbbl
push
hlt
rcrl
aad
pcmpeqb
fcmove
pop
lahf
scas
sbb
je
add
fucomi
and
pop
cld
loopne
addb
push
xchg
nopl
mov
inc
push
fdivrl
push
xchg
fsubr
clc
inc
and
xor
dec
mov
out
leave
cli
in
popl
daa
ljmp
jbe
mov
in
add
xchg
cmc
imul
lods
jge
mov
aaa
cmp
cmp
cmp
mov
bnd
mov
std
js
dec
mov
and
js
xchg
sbb
cmp
stos
pop
pushf
shl
inc
add
push
sub
inc
lret
out
sub
jmp
lahf
outsl
call
cmp
cs
adc
or
stos
push
or
pop
mov
mov
push
dec
add
inc
in
xchg
push
sub
cmp
js
mov
and
add
jb
enter
lea
bound
pushf
int
lret
dec
int3
into
scas
mov
mov
jecxz
inc
cmpsl
sti
sub
inc
jle
jns
mov
or
push
pop
out
aas
std
frndint
je
cmp
insl
pop
inc
jb
mov
push
std
cmp
out
inc
xor
xor
pop
pop
lret
fs
mov
insb
or
pop
jl
pop
shr
xchg
inc
xor
in
mov
arpl
orb
das
out
sbb
pop
std
and
push
sbb
mov
nop
add
cld
fcomps
cld
push
lods
adc
push
inc
sub
jge
mov
sbb
push
dec
rcl
xchg
pop
daa
enter
xchg
lahf
insb
push
pop
loop
xor
cmpsb
movsl
cld
dec
add
jecxz
stos
pop
data16
xor
push
cmp
dec
loop
inc
ss
andb
sbb
xor
ds
push
test
and
inc
pop
mov
cmpsl
mov
xchg
mov
lods
sub
clc
sbb
out
outsb
xor
adcb
inc
and
xchg
push
jns
push
popa
gs
pop
jp
dec
test
fcmove
push
push
push
in
adc
loope
mov
mov
lods
test
je
mov
adc
mov
fimull
mov
mov
mov
mov
repnz
loopne
push
xor
ret
test
jb
mov
mov
cmp
pushf
jg
add
sub
mov
and
and
pusha
pop
fbstp
push
push
pop
lods
lods
sbb
cli
mov
or
adc
test
push
ss
mov
repnz
fs
push
xchg
mov
mov
push
dec
mov
jge
ss
bound
xor
cmpb
psubsb
outsb
cmp
dec
jmp
and
add
add
mov
inc
xchg
cmpsl
lock
fcompl
inc
std
jl
outsb
push
sbb
jbe
hlt
mov
movsb
arpl
leave
cmp
adc
cmpsl
adc
pushf
xchg
outsb
pop
pop
dec
xchg
out
rcr
je
xchg
int
jno
lods
push
or
cmp
into
pop
pop
cld
add
or
lds
or
lea
rcrb
xchg
cld
bound
repnz
xor
ret
push
pop
pop
and
xchg
xchg
aam
imull
lock
aaa
loope
cmp
xor
mov
subb
pop
push
or
adc
jo
sti
or
cmp
cmp
mov
movsb
rolb
pop
mov
into
hlt
loopne
mov
push
xor
fwait
addl
pop
dec
int3
int3
mov
jp
sti
roll
call
or
mov
lea
push
xor
jle
movb
ret
mov
push
scas
pop
push
lret
mov
loope
pop
out
push
fisubl
mov
xor
adc
cli
push
add
cmp
xor
add
sbb
test
pushf
testl
mov
call
inc
xchg
lock
mov
imul
adcb
test
mov
xchg
mov
ret
adc
into
ret
aad
mov
add
sbb
lods
sub
repnz
adc
jp
lock
sbbb
cli
fsubs
mov
pusha
inc
push
stos
pop
jns
ds
xor
inc
xchg
sbb
sub
xchg
jp
adc
xchg
xor
imul
jg
jl
push
adc
push
call
pop
jns
mov
inc
sub
int3
add
or
insb
inc
stos
scas
or
pusha
mov
xchg
insb
imul
arpl
std
icebp
outsb
mov
out
out
mov
mov
into
push
loopne
mov
pop
push
and
jnp
data16
incb
aam
push
push
push
cmpsb
cmc
stos
jecxz
push
mov
and
loop
outsl
jae
out
xor
push
push
mov
mov
insl
sbb
add
xchg
stos
cmpsb
imul
sbb
mov
scas
xchg
leave
xchg
or
add
clc
clc
adc
mov
test
cwtl
shrb
rcr
js
in
jmp
mov
or
cld
mov
aad
xlat
adc
stos
cmp
jno
or
mov
and
cmp
mov
mov
sbb
xor
sahf
ja
and
fsubr
lock
add
adc
ja
mov
cmpsb
push
lock
rcrl
aas
out
adc
fidivs
sbb
sbb
or
pop
jle
jnp
outsb
hlt
stc
jne
decl
push
adc
into
xchg
mov
in
cmpsl
inc
sub
pop
push
jb
call
ret
movsb
leave
dec
push
push
mov
dec
aad
pop
test
fnstcw
aam
sub
push
js,pt
or
mov
mov
pushf
mov
filds
xchg
xchg
mov
int
mov
or
outsb
add
call
sbb
or
orb
pop
cltd
dec
mov
and
and
pop
jbe
push
jecxz
aaa
push
mov
lcall
or
hlt
xor
test
push
xor
dec
or
or
das
hlt
inc
pop
daa
cmp
mov
cmpsb
jge
out
mov
insl
sub
ds
sub
cmp
mov
xchg
lret
cs
or
mov
popa
mov
sub
inc
ret
out
xchg
nop
mov
rcrb
imul
jge
adc
mov
pop
sbb
les
stc
lock
outsb
movsl
pop
adcl
sbb
mov
aaa
mov
aam
adc
add
push
std
and
test
aam
and
enter
mov
inc
sub
pop
outsb
or
adc
mov
mov
mov
xchg
pushf
jno
nop
cmp
test
stos
std
cli
leave
andb
lret
inc
addl
rcll
aam
inc
stos
push
jg
orl
add
ja
sub
add
mov
inc
int
lods
sbb
mov
addb
xchg
aas
stos
and
sbb
cmp
pop
lea
adc
repnz
cld
imul
mov
xchg
data16
jns
and
rol
push
cmpsb
jo
shll
xchg
jecxz
pop
bound
or
mov
stos
pop
ficomps
nop
repz
cld
xchg
jmp
jo
out
mov
sbb
xchg
add
lds
dec
push
sbb
push
adc
fistpl
loopne
mov
push
dec
jg
sub
push
retw
addr16
or
in
pop
enter
lods
xlat
cs
adc
dec
fimull
cmp
add
jp
scas
push
std
jge
add
mov
in
js
jne
adc
sub
xchg
repz
pop
std
add
sbb
mulb
cs
mov
and
push
adc
pop
xor
in
into
bound
int
cld
out
ret
jno
mov
dec
ret
fwait
sub
sub
dec
xor
cli
cmp
sbb
ficomps
scas
jnp
sbb
imul
out
fcoml
push
mov
mov
cmp
ja
pop
add
out
sbb
pop
pop
cmp
mov
lahf
pop
push
in
cli
xchg
subb
je
ret
movsb
lock
cmp
test
ds
xor
xchg
mov
xor
lods
nop
ja,pn
cmp
fnsave
dec
mov
rcll
cld
or
pop
insb
cmp
out
mov
sbb
mov
fisttpl
fsubrl
negl
in
in
pusha
dec
imul
mov
push
adc
mov
add
cs
dec
dec
lahf
test
clc
loopne
iret
xchg
arpl
sbb
mov
sbb
jge
mov
mov
int
and
cmpl
mov
add
pop
mov
pusha
mov
inc
roll
mov
sbb
push
movsb
mov
cmp
test
sbb
add
orl
lret
xchg
dec
xor
shlb
mov
jb
notb
mov
add
mov
orl
ds
push
push
popf
pop
adc
std
out
and
mov
xchg
shlb
pop
lea
xchg
daa
add
or
push
dec
mov
sahf
out
xor
stos
inc
cmp
inc
add
imul
in
loope
sti
adc
jnp
xchg
cmp
cmp
das
lock
aas
mov
test
outsl
pop
and
xor
push
or
test
add
repz
cmpsb
lret
loopne
jbe
xor
in
adc
fwait
loope
cli
pusha
ret
daa
ja
xor
fstpl
pop
or
jae
mov
pop
xchg
scas
or
fsubs
cwtl
out
mov
sbb
pop
inc
in
ljmp
repnz
xchg
out
adc
cmp
mov
int
mov
out
xchg
cmp
cmp
xchg
fimuls
inc
mov
mov
push
pop
inc
pop
mov
push
ss
loopne
xchg
clc
addr16
inc
int3
mov
mov
push
movsb
jb
cmc
ret
je
pop
jno,pt
loopne
push
push
pop
loope
call
loop
shrl
pop
or
call
sti
jecxz
xor
adc
lahf
inc
and
lods
xor
mov
adc
jae
xor
lret
shlb
lock
jg
pop
sbbl
mov
sar
test
movsb
bound
sub
incb
sarb
jp
mov
mov
and
hlt
cmp
jl
xor
jp
lret
jnp
in
add
xchg
sbb
adc
and
mov
cmp
or
mov
adc
or
ret
ret
or
fwait
mov
xchg
imul
mov
insb
mov
pminsw
sti
pop
inc
repnz
cld
jle
call
clc
push
dec
int
enter
cmc
cmpsl
ja
mov
pusha
inc
or
add
pop
sbb
dec
push
lock
addb
loop
mov
les
subb
test
adc
mov
sbb
inc
fstl
jp
call
add
pop
loopne
inc
add
inc
and
cmp
inc
add
dec
mov
jno
dec
add
popa
scas
cmp
shl
mov
or
pusha
jnp
std
pop
not
sub
cmp
hlt
adc
movsb
ljmp
sub
std
add
push
add
dec
mov
mov
decl
dec
inc
cmp
xlat
fcmovnb
leave
outsb
lods
adc
negl
jmp
sti
mov
loopne
rcrb
andb
les
fsin
aam
stos
dec
mov
imul
fcomps
push
ss
xor
sub
xlat
adc
xor
dec
into
xchg
sbb
jnp
mov
orb
std
clc
xchg
push
gs
lock
inc
aaa
push
dec
cmc
out
sub
push
cld
in
out
cmovnp
inc
or
add
ret
add
push
hlt
in
mov
stos
dec
mov
mov
ret
pop
or
xchg
or
inc
xchg
mov
mov
sub
push
in
ffreep
cmp
popa
pop
mov
xchg
xor
test
and
shr
in
sub
out
jo
idivl
push
jae
push
adcb
mov
aaa
pop
icebp
jecxz
cmpsl
ja
xchg
sbb
add
or
insl
data16
test
cld
jmp
stos
sahf
rol
rol
mov
les
add
mov
and
cmpsl
vmread
maxps
ljmp
ret
rcll
push
xchg
pusha
das
sarb
mov
pop
rorb
xchg
and
js
cli
loop
lcall
sbb
call
xchg
stc
or
dec
push
inc
insl
mov
and
andb
or
mov
cwtl
mov
bound
cmpl
lock
add
test
push
cmc
jge
mov
push
mov
testb
scas
cmc
cmpsl
nop
jge
lret
enter
and
loopne
jnp
xor
or
or
add
inc
lock
stos
xlat
inc
imul
or
and
lret
pop
aaa
es
cmc
mov
outsl
push
pop
sbbl
cmp
add
adc
push
cli
push
js
or
js
xor
fadd
pop
mov
mov
or
add
arpl
aaa
loop
sub
cmp
jp
jl
or
movsb
mov
lods
cwtl
sbb
pop
or
in
xchg
aam
repz
mov
shl
inc
div
xor
ret
push
jp
pop
pop
cld
pop
adc
cld
out
cmpsl
in
push
jecxz
mov
out
test
jne
incl
repnz
mov
cli
lods
adc
mov
stos
mov
pop
stos
into
sbb
fwait
stos
pop
call
sub
repnz
sub
add
shl
sub
jmp
mov
sub
and
cmp
sarb
mov
push
hlt
aad
xchg
rolb
push
in
dec
call
aaa
ficoms
push
add
stc
ljmp
scas
out
add
loop
aad
sbb
es
call
dec
add
jae
push
jnp
ret
and
orl
sbb
sbb
popa
or
cmp
popf
rolb
jp
and
cli
mov
lahf
loopne
push
aad
cwtl
aaa
add
and
xchg
nop
hlt
fisttps
iret
push
xchg
mov
mov
sub
mov
mov
xchg
imull
inc
xchg
outsl
pop
xchg
enter
sub
lock
adc
test
inc
push
stos
cmp
sub
out
dec
popf
icebp
inc
arpl
bound
jecxz
ljmp
mov
pushf
stos
clc
push
push
fistps
mov
adcl
rorb
xor
js
dec
cmp
lods
daa
fdivrl
incb
scas
dec
ffreep
or
and
add
stos
push
movsb
inc
je
movsb
mov
js
rolb
cmp
mov
xor
mov
pop
stc
jl
fnstenv
jge
inc
scas
sbb
mov
jbe
lods
lcall
jno
ffreep
adcb
mov
mov
push
cli
das
shll
and
mov
lret
mov
inc
mov
test
adc
pop
stc
mov
jae
pop
jl
scas
movl
fwait
mov
and
jge
jns
mov
lret
jge
cld
dec
cmp
fcmovb
lds
loopne
sahf
inc
dec
mov
addr16
xchg
pop
pop
mov
pop
call
into
jns
cwtl
mov
je
jno
ja
mov
mov
mov
dec
pop
dec
inc
pop
push
adc
mov
les
sti
sahf
push
fst
jne
push
or
or
pusha
mov
subl
faddp
xchg
scas
cmpsl
pop
mov
xor
mov
dec
jecxz
fmull
and
add
push
xor
sbb
insb
or
and
pop
movsb
out
cmpsl
movsb
test
stos
inc
loopne
roll
fs
adc
mov
ss
cmpsl
mov
mov
in
pop
pop
rcrb
sbb
in
push
aam
mov
mov
bound
movsb
xchg
push
xor
cmp
mov
nop
xor
ret
fdivs
mov
jl
ret
in
cs
push
jp
aad
push
addr16
stos
pop
rcrb
mov
fildl
xchg
orl
loop
dec
mov
popa
in
sbb
push
add
rcr
xchg
scas
dec
scas
pushf
push
push
clc
dec
mov
inc
insl
jge
and
jne
insl
jl
bound
nop
xchg
test
pop
dec
rorl
push
cmp
lea
pop
pop
ss
cmp
sbb
ss
mov
test
es
repz
mov
jmp
add
pop
jle
dec
push
loop
scas
call
shll
jae
mov
push
jo
push
adc
pusha
fsubrl
in
ret
jecxz
cmp
pop
daa
xor
leave
add
pop
out
mov
das
fs
lahf
or
xchg
stos
sbb
cmp
sarb
ror
insl
xor
loopne
inc
int
add
adc
push
push
shrb
scas
pusha
aas
lcall
shrl
or
jo
dec
jo
mov
loop
or
and
imul
xchg
cmc
jle
lods
insb
fidivrl
mov
les
add
dec
popf
push
sbb
rcl
pop
xor
loope
lods
xor
sbb
pop
stos
xchg
out
lods
into
mull
add
call
rcl
andb
pop
mov
bound
push
stos
aam
adc
mov
mov
and
outsl
or
xchg
out
aam
mov
mov
mov
cmpsl
sub
cmpsl
or
mov
jo
or
xorb
cmpl
or
jmp
roll
mov
xchg
push
mulb
aad
ret
mov
ja
lret
inc
arpl
cmp
mov
orb
adc
negb
xchg
pop
orb
ljmp
adc
lock
cwtl
cmpsl
in
insb
cmp
loope
mov
rcl
pop
lds
scas
aaa
mov
bound
out
aad
scas
xorl
int
jp
cmp
push
aas
lea
lret
sahf
das
imul
imul
jnp
mov
sbb
xchg
xor
mov
jmp
inc
cs
sub
mov
mov
maskmovq
divl
in
loopne
jmp
jo
and
add
add
cli
xchg
mov
daa
mov
bnd
movsb
cmp
xor
dec
adc
inc
mov
push
test
outsb
fdiv
movsb
or
ljmp
cld
inc
ds
adc
in
shll
clc
mov
jp
push
xor
js
and
adc
rol
loopne
movsl
andl
sti
ljmp
icebp
vmovhlps
mov
rcrb
jnp
repnz
dec
int
mov
mov
inc
mov
aaa
jno
pop
insl
fisubrl
inc
sahf
iret
mov
loopne
dec
pushf
add
add
ret
push
cmpsb
out
repnz
pop
xor
fsubl
pop
clc
xchg
push
out
je
loope
iret
dec
mov
and
adc
ret
mov
js
and
movsb
fimuls
shll
out
inc
enter
repz
xor
mov
mov
mov
lds
hlt
imul
aas
push
ljmp
pusha
in
mov
loopne
sbb
stc
jns
adc
cmpsb
adc
add
insl
or
sub
lods
xor
sbb
shl
pop
ds
lahf
clc
aaa
shlb
shll
rorb
rcll
lcall
ret
ja
pop
popf
fnstsw
mov
sub
imul
sub
outsb
mov
les
mov
pop
add
mov
sahf
aas
xor
cmc
add
or
inc
jmp
pop
or
js
adc
mov
aas
mov
or
adc
movsl
push
je
xor
sub
fincstp
into
add
and
mov
ds
and
pop
pop
jns
sub
rol
xchg
addl
dec
stc
ficomps
mov
and
ljmp
fsubrs
shlb
fimuls
add
adc
add
adc
lcall
adcl
fsts
or
dec
mov
sub
sub
and
mov
sbb
rcr
loop
enter
clc
push
cltd
and
ds
arpl
add
mov
cmp
mov
rolb
pop
je
mov
test
cmpsb
mov
add
scas
adc
and
dec
jo
cmpl
popa
les
cli
loop
jmp
push
push
fwait
pop
clc
push
inc
and
adc
mov
data16
push
adc
pop
pushf
and
jbe
xor
add
lds
daa
cmp
push
fldcw
push
loop
sahf
lret
in
mov
cmp
in
aas
aad
scas
call
inc
call
stc
fwait
mov
shrb
jne
mov
lahf
jcxz
icebp
and
sub
aad
mov
push
int
xchg
lea
loop,pt
mov
mov
test
aad
sub
js
add
hlt
xchg
xchg
jle
movsl
mov
data16
add
jmp
imul
je
lds
dec
jns
adc
enter
fsubr
mov
mov
ret
xchg
movsl
add
add
repz
cmc
scas
cmc
pop
cmpsb
andb
mov
pop
jecxz
mov
clc
jo
scas
fwait
icebp
cmp
xor
push
mov
sbb
pusha
push
and
loop
or
dec
inc
out
jbe
int3
jp
dec
xor
imul
in
ret
xchg
cmp
outsl
imul
jle
sbb
and
push
lock
divb
pop
dec
xlat
inc
dec
sub
mov
mov
lods
jbe
std
xlat
sbb
test
aad
flds
and
mov
pop
cltd
loopne
stos
cmp
in
lahf
jecxz
mov
lods
call
je
rcrb
push
test
shlb
dec
pop
jo
pop
add
sbb
loopne
pop
int
xchg
sti
cs
aam
pop
outsl
or
and
testl
fimuls
js
dec
movsb
mov
sub
shlb
arpl
idivb
jp
into
imul
dec
mov
js
fnstsw
int3
push
fmuls
cmp
call
out
dec
xor
jl
in
test
loopne,pt
and
lods
sbb
mov
adc
pop
je
ret
xor
jo
ss
xor
lock
iret
loopne
adc
mov
call
push
xchg
mov
adc
loopne
pop
adc
cmp
dec
add
aaa
sub
popa
mov
bound
cmc
xor
aad
mov
fsubl
das
into
pmuludq
mov
leave
pop
loop
jle
bnd
loop
mov
sahf
test
ficoml
cmp
pop
add
or
mov
out
movb
adc
sub
ret
fadds
bound
mov
enter
popa
push
cmp
xor
push
jecxz
adc
pushf
inc
adc
cmpsb
mov
xchg
push
jecxz
and
insb
mov
add
inc
sbb
rcrb
jns
push
fbstp
mov
movsl
imul
mov
cmp
and
jl
daa
sbb
test
add
pop
xor
call
and
cmp
mov
gs
xchg
sub
out
out
loope
std
fwait
sub
rcr
sbb
inc
or
repnz
jle
or
pop
push
inc
push
add
ds
mov
rcrl
xchg
jns
ss
push
pop
and
mov
rorl
push
in
in
lret
pop
aaa
mov
das
inc
out
fs
mov
or
orb
mov
or
adc
js
inc
adc
adc
add
add
pop
outsl
inc
dec
mov
jecxz
arpl
mov
cmpsl
adc
push
pop
in
or
jp
cmp
gs
xchg
popf
aaa
pop
pop
ljmp
sbb
add
insb
cmp
sarb
adc
add
pop
sub
sbbb
xor
lahf
lret
int
inc
loope
imul
leave
sarl
mov
push
sbb
int3
xor
sub
lret
dec
xchg
aam
dec
std
and
add
adc
pop
test
lods
and
ret
jo
je
jl
lds
fnstenv
testl
push
push
mov
andl
scas
sbb
test
cmc
mov
adc
mov
sbb
add
jo
dec
adc
push
out
inc
jmp
cltd
pop
mov
inc
sub
aam
lods
cltd
push
adc
adc
mov
dec
xchg
out
arpl
pusha
pop
xor
test
cmp
shll
lret
hlt
mov
fnstenv
lock
sub
aas
push
test
mov
xchg
adc
fidivrs
pop
lret
stos
into
fdivrl
adc
inc
cmp
lea
test
cmp
push
jecxz
or
jp
sub
aam
cmpl
icebp
push
cs
fcmovnb
fdiv
pop
xor
mov
popa
out
mov
dec
or
pop
roll
cmpl
cmp
mov
loope
lahf
push
outsb
inc
lds
ud0
rol
sbb
hlt
repz
inc
int
pusha
femms
cmp
jnp
lret
add
inc
mov
scas
mov
add
pop
push
mov
add
mov
loope
xchg
jle
xor
ljmp
sbb
jbe
dec
jl
push
bound
mov
sbb
or
in
jb
fwait
xor
out
add
mov
mov
pop
lods
push
dec
pop
rclb
pop
test
les
inc
cmp
xchg
pop
cld
ficoms
cli
mov
das
inc
push
mov
and
add
pop
jmp
insb
cmp
ss
std
sbb
lret
mov
iret
mov
push
jbe
sub
lcall
adc
mov
jmp
sti
jl
mov
adc
pusha
cmp
inc
enter
sbb
xlat
outsl
inc
or
jae
dec
cmp
pop
xchg
mov
dec
sbbb
pusha
icebp
adcb
rorb
xchg
test
lock
out
hlt
cli
mov
inc
dec
ss
jb
mov
rolb
loope
loope
adc
mov
addr16
andl
xchg
inc
push
mov
jmp
mov
ljmp
dec
call
lahf
add
pushf
pop
call
shlb
jns
out
dec
ljmp
cwtl
aaa
xchg
cmp
inc
inc
add
mov
cmp
cld
add
test
cmp
cmc
mov
insl
jbe
daa
movsb
cmp
hlt
shl
outsl
fwait
incl
mov
sub
int
fucomip
aas
add
jle
shrb
fisttps
mov
push
xor
mov
jo
popa
xchg
in
scas
cmpsb
mov
sub
push
jns
mov
pop
inc
cmp
push
push
cmp
in
push
lret
mov
cwtl
push
cs
loopne
into
xchg
push
xor
jnp
cltd
sub
pop
jp
mov
dec
or
mov
or
repz
xchg
push
fstpl
jl
add
xor
inc
dec
imul
sbb
es
mov
into
dec
xchg
inc
dec
and
popa
mov
icebp
cmp
ret
cmp
pop
inc
jbe
clc
fwait
div
rep
cmpsl
mov
xchg
pop
sbb
sbb
jp
hlt
popf
hlt
inc
ffreep
stos
popa
mov
push
push
jno
test
cmp
in
test
ds
pop
pop
daa
cld
mov
mov
into
inc
jp
xchg
mov
and
pop
or
fstps
loope
mov
push
fwait
push
pop
mov
xor
out
repz
mov
xchg
cmpsl
sub
lcall
out
adc
or
sets
clc
mov
clc
stos
sti
adc
jmp
imul
cmpsl
fnclex
push
popf
push
jo
stos
notb
xor
pop
pop
push
adc
cmp
pop
in
xchg
mov
pop
pushf
add
imul
push
popa
sbb
jg
cmp
lcall
fisubl
sub
jge
dec
push
stc
jl
push
inc
add
lock
insb
nop
jns
or
jbe
mov
push
cs
in
add
lods
inc
lahf
xor
pop
sub
adc
adc
mov
sub
adcb
or
mov
push
out
jnp
lea
xor
lea
rcrl
mov
dec
adc
cmp
xchg
cmpsb
sub
pop
xchg
mov
outsl
data16
cmp
int3
in
fdivrl
mov
xlat
xchg
in
jecxz
push
sub
push
cmp
jmp
clc
fs
in
rcrb
aaa
scas
sarl
fildl
test
popa
mov
mov
and
xor
inc
pop
push
das
jge
adc
or
xorl
stos
pop
test
leave
push
roll
shl
pop
mov
push
cmp
ret
lcall
pop
inc
js
or
js
jl
mov
sti
pop
mov
fwait
sti
scas
loop
aaa
or
fadds
in
pop
orb
scas
inc
sub
push
bswap
cmpl
enter
xchg
inc
dec
sbb
and
je
test
movsl
mov
jnp
jle
inc
pushf
popf
jo
push
push
popa
aad
pop
fwait
dec
mov
out
mov
divl
ja
mov
popa
sub
push
push
outsl
faddl
mov
inc
movl
stos
push
jbe
repnz
pop
sbb
dec
repnz
inc
dec
lods
fwait
icebp
fwait
mov
sbb
popa
icebp
mov
outsb
cli
int
jbe
adc
mov
sub
loopne
cmp
ret
dec
bound
xor
push
addl
lcall
jl
adc
shr
ret
xchg
jle
jg
int
ret
add
or
or
ret
push
das
lahf
push
dec
gs
sbb
loope
jne
sarl
adc
insl
or
inc
mov
das
mov
mov
jnp
mov
outsl
stc
addb
mov
mov
cmp
pop
sub
inc
cmpsb
daa
dec
in
mov
sub
arpl
fimull
dec
ljmp
xor
addb
push
cmpl
push
push
sbb
lea
jmp
idivb
mov
dec
adc
in
orb
addb
rcl
push
ret
insb
pop
xchg
push
pop
cs
cmp
or
js
rol
sarl
or
fstpt
inc
les
or
dec
mov
arpl
std
hlt
fisubrs
and
into
jbe
in
idivl
in
and
dec
mov
ljmp
push
mov
push
and
jno
cwtl
dec
mov
jne
dec
add
test
push
loop
scas
divl
lcall
pop
fsubr
popl
add
aaa
xorb
test
pop
or
dec
xor
aam
add
fcmovb
clc
sbb
icebp
push
jb
ret
gs
push
ja
mov
cmp
dec
fstl
aam
sbbb
add
je
sbb
mov
mov
cltd
sbb
jns
hlt
ljmp
xchg
pop
divb
std
test
loop
and
rorb
cmp
mov
adc
or
or
push
popa
jo
mov
mov
in
xchg
les
pop
data16
ds
cmp
jecxz
cmp
adc
je
scas
push
jge
inc
mov
dec
add
push
ljmp
jp
sbb
sub
push
mov
pop
mov
cmp
xchg
mov
mov
add
les
ficoml
subb
jbe
cwtl
iret
mov
subl
or
jge
in
addb
push
fimull
test
xadd
mov
or
in
imul
mov
test
mov
scas
jmp
insb
inc
jmp
jo
sbb
jecxz
jnp
loopne
inc
jmp
paddw
mov
ss
repz
out
rorb
inc
lods
push
test
cmp
sub
imul
sarl
lock
jl
in
xlat
test
scas
rcrb
scas
add
std
add
xlat
sub
divl
add
pushw
push
clc
shlb
clc
roll
ljmp
jo
movsl
je
lret
inc
scas
addb
mov
in
add
call
dec
inc
cmp
xor
lea
popa
push
mov
lods
in
mov
test
cli
push
sahf
mov
inc
fmull
mov
lock
push
test
das
add
push
and
mov
insl
fisubrs
jp
shr
inc
pop
mov
xchg
push
or
ds
push
std
mov
mov
dec
inc
mov
lret
jge
or
push
loopne
xchg
dec
pop
or
sub
inc
inc
aad
lods
scas
rol
pushw
sub
push
inc
xchg
and
scas
pop
movsl
pop
dec
lcall
stos
scas
mov
push
mov
mov
lods
xchg
sbb
cld
push
aaa
mov
xchg
aam
jns
push
jae
ret
push
fiadds
or
cld
add
jbe
pop
cmpsl
das
jle
and
arpl
sbb
orl
adc
pop
fnstenv
cs
fs
inc
mov
fidivrs
cmp
es
out
movsl
push
les
sub
add
frstor
fldl
sar
xchg
push
xor
cmp
add
ret
flds
out
push
loop
sub
insb
dec
in
or
cld
mov
add
leave
jns
icebp
or
loop
or
jmp
adc
jo
add
ljmp
pop
test
shl
xor
jle
push
mov
insl
sbb
jecxz
enter
jecxz
add
popaw
hlt
into
das
pop
pushf
dec
lea
out
pop
out
cmp
sub
aaa
and
mov
xchg
fmuls
popf
jp
outsl
jmpw
jmp
int3
cmp
jnp
jo
sbb
push
lret
mov
insl
addr16
sbb
push
cmp
aad
push
cli
pop
xchg
iret
out
and
int
adc
lea
inc
mov
xchg
jne
pop
and
sbb
stos
and
lret
stos
scas
cmp
imul
aaa
lods
adc
sbb
sub
add
mov
sub
mov
dec
inc
jp
stos
jl
test
in
daa
mov
jg
cmp
in
xchg
lods
mov
arpl
cmp
imul
das
test
lods
push
inc
fdivl
cmp
jo
ljmp
jno
lock
and
mov
scas
sub
jno
xchg
lock
xchg
sub
jmp
push
pop
inc
out
icebp
lds
test
jl
pop
rolb
xor
lds
xchg
cmp
dec
mov
mov
out
lea
jbe
fwait
adc
add
pusha
inc
cmp
inc
sbb
push
xor
jge
mov
push
mov
fwait
rcrl
xor
push
pop
and
stc
or
pop
inc
fistl
sbb
leave
shll
loope
push
pop
mov
sar
add
push
outsb
mov
jl
mov
pop
arpl
push
push
pop
push
and
adc
push
enter
in
and
add
cmp
test
cmpsb
sbb
mov
sti
inc
add
jno
mov
push
xorl
mov
ljmp
dec
pop
jb
pop
cs
or
xor
icebp
xchg
mov
sbb
lea
inc
mov
mov
or
fs
loop
lds
push
icebp
es
ds
xor
and
dec
cmp
pushf
adc
cmp
or
filds
sub
and
inc
mov
inc
xchg
mov
xor
pusha
sub
mov
pop
aad
dec
movb
test
bound
into
fildl
sti
cltd
popf
mov
into
adc
inc
into
add
dec
mov
or
sahf
or
jle
dec
fs
decb
popf
push
daa
push
or
nop
gs
xor
pop
sub
outsl
xor
movsl
ret
gs
ret
sbb
addl
outsl
pop
push
sbb
sub
mov
lods
testl
fdiv
popa
sub
or
inc
pusha
cmpsl
sti
or
mov
inc
dec
push
add
decb
mov
stos
inc
scas
xlat
or
movsl
insl
call
lea
xchg
or
inc
lahf
lahf
mov
lods
pusha
cmp
fbld
cmc
push
pop
jo
rolb
sahf
cld
mov
sbbl
int
call
adc
es
sub
fsubp
pop
icebp
testl
adc
mov
mov
mov
push
es
inc
roll
push
fwait
call
enter
das
add
mov
add
es
cld
js
sub
cli
hlt
test
rcr
dec
xchg
bound
test
lods
jbe
push
lock
les
cmc
cmp
lret
pop
push
mov
hlt
dec
lahf
test
push
xor
sbb
xor
push
fwait
mov
test
imul
repnz
out
mov
mov
iret
xor
out
and
push
push
loopne
jo
push
mov
or
fstpt
aam
test
mov
or
push
pop
jo
outsb
pop
add
je
jnp
ds
mov
ret
into
mov
mov
mov
push
loop
popa
imul
xchg
sahf
fisubl
push
and
mov
xor
mov
clc
shrb
push
xor
lcall
push
cmpsb
pop
jg
adc
adc
mov
loopne
and
jbe
es
mov
sub
ret
cwtl
popa
ds
or
ficoml
in
or
js
int3
mov
shrl
jp
mov
rcr
mov
pop
out
inc
mov
in
mov
dec
lahf
push
xor
xor
cld
setge
clc
test
dec
ret
cmp
adc
add
roll
lods
aam
xchg
or
mov
aam
mov
push
int
push
rolb
sti
and
inc
inc
sub
lock
nop
adc
call
lods
daa
mov
add
in
or
push
push
sbb
ja
dec
in
sbb
cwtl
loope
jbe
cmp
clc
or
lea
sub
xchg
sub
dec
test
push
cmp
nop
aad
mov
mov
das
jo
arpl
ss
bswap
and
or
pop
fldl
test
mov
adc
imul
in
sbb
xchg
xor
andl
push
adc
pop
inc
or
mov
iret
fistps
xor
outsl
xchg
xchg
jl
cmpsl
jmp
sbb
cmpsb
pop
mov
mov
inc
rol
jg
fs
jge
je
movsl
insl
mov
not
lea
xchg
and
hlt
pop
rcr
movsl
cs
out
mov
xchg
fcmovb
lcall
dec
mov
inc
fdivrs
dec
loopne
jg
inc
sub
scas
adcb
mov
insb
outsb
pop
cmp
in
daa
mov
stos
ficoml
cwtl
adc
push
pop
andb
or
mov
in
mov
mov
push
or
fs
adc
int
dec
inc
addr16
stos
sbbl
add
pop
or
bound
or
mov
sbbl
mov
fwait
sti
mov
or
out
int3
jg
adc
push
push
cmpsl
cmpsb
cmp
add
adc
mov
fxch
xor
js
shll
jae
add
inc
cwtl
jns
aad
movsb
cmpsl
js
repz
je
sarb
jae
out
das
jno
std
aad
adc
jnp
xchg
mov
fwait
xor
lea
loop
add
sub
mov
lea
fidivrs
inc
or
and
sub
jns
call
aaa
jecxz
adc
clc
and
mov
pop
imul
dec
pop
and
sbb
pop
outsb
mov
cmp
dec
and
mov
loope
jo
mov
sti
jp
das
cmp
dec
pop
pop
mov
stos
repnz
pop
cwtl
push
and
cmpsl
lcall
mov
mulb
mov
mov
ret
mov
call
pop
xchg
hlt
xchg
cmp
dec
js
iret
sbb
add
push
std
ds
push
jmp
xor
xchg
mov
mov
mov
pop
sub
lret
dec
jl
jae
xchg
aas
jecxz
jle
orl
sar
xor
movsl
out
jl
add
sarb
push
fdivp
dec
and
push
lahf
nop
data16
pop
pop
sub
fists
xor
dec
sub
and
dec
xchg
jg
sub
fildl
dec
sbb
insl
hlt
mov
mov
xor
aaa
out
movl
mov
or
dec
adc
push
mov
xor
cmp
mov
sub
pop
dec
mov
je
out
or
push
fdivrp
dec
out
push
int
scas
sti
jne
dec
fdivr
loopne
pop
push
ljmp
sahf
adc
mov
call
pusha
in
fwait
jnp
stc
xor
pop
hlt
movsl
call
pushf
pop
pop
out
daa
aad
push
inc
pushl
dec
stos
mov
add
or
dec
inc
std
rcrb
std
sub
sbb
sbb
negb
ret
and
je
mov
mov
mov
sbb
outsb
or
repnz
dec
aaa
lcall
push
nop
lods
int3
pop
fldenv
pop
xor
inc
test
lret
scas
bts
push
test
testb
das
inc
sub
mov
ljmp
pop
lret
mov
mov
dec
adcl
mov
and
xchg
xlat
jae
hlt
aaa
push
dec
jno
cmp
cltd
cmp
and
data16
lods
xchg
xor
pop
mov
jmp
jb
movsl
mov
ljmp
push
adc
shlb
mov
pop
mov
xlat
ficomps
test
adc
fadd
sub
es
xchg
sbb
add
ret
lcall
popa
and
mov
int3
lret
push
jg
loopne
mov
call
hlt
cs
sub
rorl
cmp
lret
lea
mov
push
icebp
cmp
shrb
mov
minps
mov
mov
lea
mov
mov
xor
int
dec
aas
push
scas
sub
out
inc
jl
jp
and
mov
mov
nop
mov
adc
xchg
push
sub
adc
cmpl
enter
pop
cmp
daa
push
mov
jl
icebp
push
out
or
sub
cmpsb
les
and
lock
add
fsubrs
cli
sbb
mov
mov
int3
pop
mov
fiadds
aas
sete
or
xchg
inc
pop
dec
inc
scas
je
into
inc
add
and
loope
rol
ljmp
xor
lea
push
loope
ret
gs
int
aaa
dec
or
add
jg
sub
sbb
and
cmc
andl
mov
jl
lds
loope
sub
sub
repz
cmp
js
mov
push
jge
add
sub
push
loopne
stc
mov
stc
test
lcall
sub
jmp
fdivs
inc
mov
mov
js
jns
sbb
pop
lock
add
loope
insl
pusha
ret
adc
in
in
mov
mov
or
aam
fstl
pop
fsubl
dec
adc
add
push
xchg
add
aas
pop
testb
addr16
pop
cli
mov
mov
sbb
jnp
jecxz
ret
and
lret
sbbl
ljmp
xlat
inc
icebp
xchg
loopne
and
loop
shl
lods
scas
and
test
fistpl
mov
push
stc
scas
jbe
sbb
pop
lea
mov
je
je
sub
aad
fwait
jmp
fwait
dec
jnp
js
push
xchg
sbb
mov
xchg
ja
lret
das
imul
fcmovbe
add
je
xchg
bound
leave
or
mov
inc
dec
xor
mov
xor
pop
push
js
mov
push
or
add
pop
jl
jp
fidivrl
sub
xchg
add
dec
out
shrl
push
xor
mov
or
cmp
add
pop
pop
xchg
mov
pop
pushf
sbb
cli
fnstsw
pop
or
mov
clc
sbb
fisubl
adc
pop
mov
jns
cmp
dec
daa
rcll
in
popf
sbb
mov
aas
loopne
imul
mov
mov
mov
daa
jecxz
lds
in
std
sbb
je
mov
sarl
add
pusha
shlb
in
adc
cmpsb
test
or
fisubl
push
in
test
cs
shrb
xor
dec
push
pop
push
or
icebp
adc
mov
or
cmp
lret
fwait
les
stc
xor
push
add
xchg
shlb
mov
xlat
adc
xorl
aas
lcall
les
sub
mov
push
rclb
cmc
mov
rolb
sbb
xchg
sub
mov
fs
sbb
repz
pop
clc
inc
aaa
stos
lods
test
xchg
jle
das
pop
fs
sbb
jne
pop
and
jle
add
jne
faddl
into
sub
lret
mov
cs
xchg
ret
adc
pop
mov
pop
shll
les
add
pop
rcr
icebp
repz
mov
add
out
stos
insb
dec
push
je
inc
xchg
xor
jmp
sahf
pop
push
cs
push
fwait
dec
out
push
test
lock
movb
nop
shlb
xor
arpl
dec
cli
xchg
popf
sub
inc
cmpsb
inc
fucomp
test
fimuls
dec
pop
jmp
sub
push
mov
pop
cs
sbb
lds
pop
lock
push
sbb
imul
movsb
sub
jne
ja
mov
fmuls
movsl
mov
pusha
sbb
lret
and
arpl
clc
les
outsb
jns
stos
dec
or
movl
shrb
test
aad
ljmp
and
and
jo
test
clc
pusha
cmpps
pop
adcl
sbb
pop
adc
mov
xor
je
and
add
xchg
cmc
jle
jge
add
mov
daa
pusha
xchg
fwait
sbb
lret
push
fsub
sub
or
sbb
jecxz
fmull
jne
or
popf
jmp
adc
mov
cltd
cmpsb
imul
cmp
push
gs
jae
adc
pop
xchg
push
pop
scas
scas
lahf
movsl
out
mov
xor
jg
stc
subl
in
flds
lret
adc
cmp
lods
inc
repz
sbb
ds
pop
mov
ret
pop
jbe
bound
dec
js
jmp
add
lods
fs
cs
mov
push
movsl
cmp
and
xor
sbbl
add
fcoms
and
scas
push
mov
inc
mov
rol
xor
mov
gs
sbb
push
jge
mov
stc
lcall
loop
nop
testb
les
mov
test
leave
push
mulb
jp
rcrl
xlat
push
sbb
movl
out
or
sbb
mov
call
cmc
stos
pop
push
or
dec
jbe
sub
fmull
imul
push
inc
sahf
push
jmp
leavew
pop
inc
cmpb
dec
fwait
das
cmp
dec
add
add
lret
test
dec
lods
mov
outsl
adc
or
les
icebp
nop
cld
clc
sahf
sub
cmp
xor
or
and
cli
cmc
add
lock
orl
jns
and
dec
dec
mov
xchg
loope
jno
mov
test
fcom
aaa
mov
pushf
add
push
adc
adc
sbb
cmp
xor
addb
fbstp
push
std
adc
jno
mov
faddl
or
les
jo
jl
adcl
rorl
mov
dec
fimull
xchg
xchg
jnp
test
add
mov
fbld
pushf
fiadds
push
and
std
int
ljmp
in
clc
sti
pop
cli
sub
test
add
faddl
mov
fidivl
xchg
jp
stos
mov
mov
insl
xchg
ret
mov
call
jg
mov
fldenv
push
push
sarl
mov
test
rcrb
fbstp
pusha
or
pop
bound
loop
xor
xor
jns
ss
xor
insl
adc
push
shl
jecxz
and
mov
outsb
fs
adc
nop
fwait
dec
fwait
cmp
mov
fnstcw
mov
pusha
pop
dec
mov
mov
es
jnp
sub
jno
cli
popa
scas
pop
add
and
add
push
loopne
outsb
das
sbb
xor
aam
add
je
cs
lahf
fwait
mov
faddl
mov
les
mov
sahf
aas
sti
mov
push
mov
or
or
xchg
dec
and
fsubr
mov
cmp
int3
mov
shr
xor
fstpl
das
aad
jbe
daa
test
loop
pop
push
movsl
rcrb
shrl
mov
jae
sahf
icebp
inc
out
and
mov
xlat
andl
jmp
dec
gs
inc
lods
jo
push
mov
dec
clc
shll
stos
or
in
jp
incb
push
dec
mov
or
push
and
jae
decb
test
inc
pushf
xchg
filds
or
aaa
add
shl
push
dec
jo
jl
ret
sbb
mov
sub
test
movsb
jbe
adc
mov
xchg
sub
mov
je
mov
push
out
fsubs
push
xor
mov
and
inc
mov
cmpsl
mov
xor
mov
add
xchg
jbe
call
test
dec
int
or
cmpsl
mov
push
orl
or
mov
pop
rcrl
rcrb
addl
cmp
sub
mov
imul
lret
js
mov
pusha
pop
jle
je
xchg
mov
xchg
nop
add
push
sbb
push
icebp
hlt
sbb
aas
test
cmp
pop
es
mov
xchg
add
jae
insl
jae
sarb
adc
fmul
pusha
mov
cmp
add
or
mov
fstpt
lock
into
into
ret
xor
jecxz
loop
out
clc
rol
pop
repz
or
int3
xorb
or
mov
jo
jecxz
or
sub
lahf
push
pop
push
out
mov
sbb
clc
dec
dec
mov
aad
push
pop
mulps
push
pop
cmp
xchg
cmp
movsl
ret
scas
mov
inc
jp
mov
pop
icebp
jp
mov
iret
inc
adc
andb
cmp
fwait
pop
jle
inc
lds
pusha
xchg
push
add
insb
and
into
in
sub
shr
int
cmp
and
xchg
jns
add
xchg
rolb
fwait
mov
aas
pop
fcompl
icebp
repz
add
lcall
mov
pop
mov
mov
out
inc
pop
fldl
add
push
call
add
jl
cmp
mov
mov
ret
push
sbb
pop
cmp
adc
scas
sarb
adc
insl
in
mov
jg
aad
repz
ret
es
push
leave
fwait
aas
lahf
inc
jb
sahf
adc
sub
lret
mov
dec
cli
mov
test
sub
xor
jo
jecxz
jge
cli
xchg
adc
xor
adc
push
push
cmp
sbb
into
inc
fiaddl
int3
leave
adc
lret
mov
jne
lcall
xor
mov
ljmp
mov
push
jp
fwait
mov
xor
sbb
cmp
outsb
fisubs
jbe
mov
fnstsw
fdivs
popa
repz
cli
sub
es
movsb
pop
and
mov
or
jbe
ret
repz
lods
jb
js
lods
cmpsl
push
jnp
push
jne
das
arpl
sub
xchg
lods
les
iret
push
lods
mov
aaa
add
sub
xor
ja
dec
sbb
inc
or
mov
fildl
std
lds
shrb
push
push
stos
and
and
xlat
sbb
nop
jecxz
add
iret
and
fcmovnb
jo
mov
adc
into
add
lods
dec
mov
xlat
imul
in
nop
adc
les
scas
ja
insb
rolb
cmpsb
inc
loope
mov
clc
pusha
test
in
mov
xorb
mov
outsl
sti
mov
mov
aam
int3
jmp
movl
sbb
add
sahf
or
loopne
outsb
scas
pop
cmp
cmp
int3
mov
int
mov
mov
insl
std
les
int
das
lods
les
mov
fmull
in
ret
push
adc
push
insl
cli
jle
xor
and
cmp
pop
and
sub
cmpsb
hlt
cmp
or
mov
cmp
lods
fildll
stos
scas
adc
icebp
ljmp
mov
call
dec
push
setl
test
lahf
pusha
arpl
sti
or
and
loopne
call
int
test
stc
mov
js
add
jmp
rcrl
mov
cld
sbbb
out
scas
call
sbb
dec
add
mov
jp
jb
mov
je
and
orb
fwait
inc
mov
adc
mov
jb
push
pop
push
dec
and
int3
frstor
jbe
or
sbb
mov
in
gs
jl
mov
lods
mov
pop
jb
push
ss
jp
int3
adc
mov
or
enter
rcrb
sbbl
pop
push
in
jmp
dec
xor
ja
sub
outsl
xchg
out
sub
dec
xor
add
or
xchg
in
popa
xchg
mov
mov
jl
jbe
sub
inc
jmp
jno
psubd
rorb
adc
stc
add
push
and
dec
aam
inc
addr16
push
adc
andb
cmpsl
pop
scas
jb
cmp
mov
and
pop
arpl
insl
ljmp
push
shll
stos
push
shll
jbe
cmpsl
pop
je
mov
int3
or
dec
dec
cmpsb
mov
and
hlt
inc
outsl
scas
mov
lahf
in
xchg
data16
mov
mov
sub
lods
in
dec
fcomip
sbb
lcall
lods
xor
adc
and
test
or
xchg
fildl
int3
rolb
sub
pop
es
sub
faddl
push
sbb
xchg
pop
movb
loopne
add
nop
inc
ja
adc
pop
jge
andb
cmp
popf
mov
lea
add
inc
add
sbb
mov
jnp
xchg
xor
pop
sbb
inc
stos
ret
inc
add
xor
push
jg
leave
mov
jmp
movsl
dec
cmp
mov
jnp
scas
lock
add
mov
jmp
or
dec
cwtl
arpl
pop
pop
xor
mov
xor
cmpb
or
push
add
jo
pop
mov
fimull
ds
cmp
jns
jno
sbb
inc
fldl
cmpsl
inc
fistpl
pop
out
sbb
pusha
jo
in
add
mov
std
jg
fnstenv
pop
pusha
pusha
aam
bound
leave
inc
dec
push
dec
aam
mov
bound
jecxz
pop
push
loope
cmp
mov
int
test
mov
aas
mov
lods
push
jl
popf
jp
ds
push
les
test
jmp
sub
lcall
mov
lods
loope
daa
push
insb
ljmp
pop
mov
push
rorb
add
aas
scas
lahf
xor
stos
mov
cmpsl
adc
pop
arpl
lret
jbe
mov
push
jo
pop
cmp
mov
aaa
sub
add
cmp
push
mov
mov
or
std
jle
repz
mov
hlt
adc
aaa
sar
push
lods
adc
not
jge
jp
pop
sbb
cltd
push
sbb
out
aaa
pop
stc
cmp
dec
aad
jmp
js
pop
push
popf
sahf
aaa
mov
xchg
addr16
shlb
cs
call
bound
test
gs
sbb
fidivrs
popf
popa
jno
fnstcw
cmc
and
sbb
ja
int
mov
fs
shrb
inc
mov
inc
adc
int3
add
lahf
std
cmpl
ss
icebp
icebp
inc
sub
aaa
sub
lods
popa
xor
xchg
idivb
jns
gs
push
mov
lods
loopne
nop
fildl
or
cmc
push
add
pusha
pusha
cmp
lahf
test
dec
cld
xchg
test
jg
fildll
das
or
in
lahf
mov
outsb
jo
push
movsb
icebp
sub
cmp
shll
jb
int
mov
ret
inc
pusha
jl
test
cld
js
mov
inc
mov
push
scas
add
dec
pop
and
mov
mov
cli
punpckldq
pop
dec
pop
add
ja
cmp
sahf
jle
std
jg
dec
mov
dec
sub
std
cmc
ljmp
and
repnz
addb
jmp
cltd
mov
push
enter
xchg
xorb
aaa
stc
mov
jmp
ljmp
mov
cmp
loop
jo
cld
cmp
sub
jb
xor
or
mov
push
push
jl
gs
mov
ret
addl
imul
mov
adc
pusha
loop
jge
jne
sub
and
add
or
dec
out
movsb
daa
jbe
mov
inc
pop
test
aam
adc
add
push
inc
outsl
out
mov
idiv
jp
iret
stc
mov
add
sub
in
mov
sarb
jg,pt
mov
push
pop
sti
lret
rcrl
jnp
mov
aas
cmc
add
dec
jae
xchg
inc
inc
mov
orb
clc
adc
cmp
and
out
pop
sbbl
pop
out
popa
loopne
insl
mov
fisttpl
xor
mov
dec
lret
call
scas
xor
sub
test
call
scas
rcrl
pop
inc
inc
pop
ss
push
push
stos
mov
and
mov
call
push
push
fwait
idivb
rcrl
sub
cmpsl
adc
cld
std
inc
divl
and
stc
push
fs
jno
add
push
ret
pop
gs
cmp
push
pop
or
lahf
cmpsl
cmp
scas
out
repnz
adc
push
jecxz
pop
pusha
xchg
xchg
outsb
in
daa
decl
aaa
loope
push
or
call
or
sub
mov
in
adc
outsb
popf
push
cli
mov
loop
or
and
xchg
adc
insl
or
xchg
cmp
enter
xor
mov
sub
jp
push
pusha
insl
pop
shlb
add
push
frndint
js
sbb
xor
nop
mov
add
jl
lods
mov
and
mov
lret
mov
pop
xchg
cmp
sahf
addl
pop
cld
sarl
imul
ret
push
mov
aas
bound
popf
xor
sbb
add
push
sbb
jbe
es
cmp
jbe
pushf
xor
inc
pop
dec
stos
pop
jo
dec
test
xchg
push
xor
lock
pop
inc
or
loope
pop
in
adc
cmc
or
adc
add
inc
or
add
inc
stc
insl
sub
xchg
jl
scas
hlt
push
pop
test
mov
js
jne
add
xchg
sbb
dec
pop
jne
jbe
scas
leave
test
or
je
sub
gs
enter
test
pop
dec
sbb
push
dec
and
jbe
shrb
lret
scas
xor
pop
mov
int
js
int
adcl
cmp
mov
pop
cmp
addb
icebp
lahf
cmc
add
xchg
mov
mov
add
adc
test
je
insl
iret
rorb
gs
cld
xor
pusha
xlat
out
fildl
inc
and
add
mov
cmp
test
jp
xor
pop
inc
pusha
aaa
xlat
movsb
and
dec
push
js
push
add
lds
push
repnz
popa
das
xor
fcompl
roll
push
testl
fcomps
dec
stc
fwait
jns
mov
cmp
or
pop
fstpt
mov
sahf
aad
popf
sub
lods
sub
cmc
lcall
sub
push
pop
sub
jo
adc
add
sbb
adc
cmp
sub
cwtl
pushl
xchg
push
dec
xorb
adc
ret
add
sub
decl
xlat
push
clc
pop
lret
mov
jl
les
lcall
jbe
push
mov
lds
ja
mov
cld
inc
movsl
push
jae
adc
rclb
push
push
roll
call
rcrb
sbb
movsb
das
pop
sbb
inc
dec
add
jb
mov
cs
lret
hlt
add
push
scas
mov
or
ja
jp
mov
cmp
xchg
xchg
jg
lret
push
push
add
mov
inc
out
rorl
mov
into
add
shlb
clc
jb
mov
std
inc
shlb
mov
xchg
rol
loope
jbe
mov
sbb
fldenv
test
ljmp
jmp
jg
pop
pushf
push
adc
jo
cld
mov
fadd
les
lret
add
sub
aaa
add
sbb
mov
jbe
fnstcw
icebp
enter
and
leave
movsb
push
scas
cltd
push
push
imul
rclb
jl
insb
jae
sbbl
loop
xchg
mov
jecxz
call
adcl
mov
adc
xchg
ret
mov
sub
test
out
xor
test
sbb
or
mov
pop
add
push
jmp
out
dec
test
jbe
aaa
push
or
push
or
sub
sbb
lret
cld
push
rcrl
out
xor
popf
add
enter
in
rclb
or
rcrb
push
sahf
xor
or
insl
in
loopne
call
bound
push
dec
lcall
lock
fwait
pop
mov
or
and
push
dec
clc
dec
cli
push
je
decb
stos
push
jnp
insb
dec
add
or
xchg
adcl
mov
or
out
es
bound
testl
mov
lret
mov
pushf
jbe
mov
outsl
clc
call
dec
cmp
inc
sub
push
cmp
mov
addb
cmp
shrb
test
fadd
xchg
out
inc
sub
push
call
test
dec
dec
pusha
lods
sbb
cmp
push
jle
push
xchg
dec
mov
jp
movsl
or
das
aam
das
test
out
imul
xchg
imul
inc
sbb
cmp
jmp
or
cmp
push
sahf
rorb
int
daa
daa
and
addl
cltd
xchg
mov
push
stc
in
add
daa
mov
jno
cmp
cs
rcrb
loope
fimull
mov
mov
lret
add
fdivl
loopne
insb
sub
ret
pop
pushf
clc
mov
rcrl
mov
ret
out
sub
clc
add
xor
mov
xor
sbb
insb
jnp
pop
mov
jo
pusha
ljmp
fcmovbe
sbb
test
sub
or
iret
fidivl
mov
stos
testl
sub
xor
cwtl
es
sbb
mov
out
dec
ljmp
sti
fstpt
data16
gs
mov
mov
fiadds
mov
stos
push
rorl
roll
or
inc
mov
aad
inc
aad
fsubrl
jne
push
mov
je
ret
add
jge
jnp
pop
pusha
jnp
inc
add
or
mul
in
sbb
pop
mov
icebp
test
sub
cmp
jno
xchg
sbb
into
mov
fdivrl
cld
mov
enter
fsubs
scas
mov
scas
aam
mov
pop
cmp
or
clc
fwait
sbb
repnz
xor
cltd
sub
mov
or
das
pop
ss
cli
inc
fcmovbe
les
stos
sbb
aam
lods
es
jb
ret
adc
jae
jmp
adc
sbb
xlat
and
loope
dec
sub
xor
je
cmpsl
and
dec
cld
arpl
add
aam
sbb
addl
jo
xor
pop
rcl
mov
inc
jns
mov
and
out
scas
jnp
xchg
lret
iret
lret
pop
push
notl
dec
adc
rorb
and
outsl
inc
lret
jp
jle,pn
and
jo
jp
lods
test
push
ret
mov
pop
cmp
push
lock
pop
mov
push
iret
les
pusha
dec
negl
sub
test
loop
add
or
in
push
incb
and
das
push
push
sbb
outsl
lcall
sub
jl
mov
push
pop
push
enter
push
movsb
sbb
fbstp
addr16
lods
push
xor
jl
inc
gs
push
ds
ret
inc
or
ret
int3
ret
push
js
bound
jp
test
insl
xchg
dec
imul
lcall
add
mov
and
inc
inc
sub
out
daa
fwait
insl
scas
dec
ret
lret
or
shlb
icebp
popa
mov
pushf
push
faddl
leave
sahf
inc
out
enter
push
out
xchg
push
inc
test
lods
sbb
push
sahf
inc
dec
xlat
pop
inc
sub
push
cmp
and
ljmp
dec
inc
xor
xchg
mov
mov
fists
mov
testb
rcl
or
xor
adc
out
les
arpl
xchg
jb
xchg
mov
pusha
divl
cmp
mov
adc
pop
push
inc
shr
lods
fldl
sbb
int
daa
insl
push
insl
mov
adc
les
sbb
ds
cmp
es
sub
iret
pop
push
jle
fsubrs
inc
push
ret
jne,pn
ficoml
pop
mov
stos
sbb
clc
xor
xchg
sbb
clc
repnz
pop
stos
rcl
jle
fidivl
sbb
jp
fwait
sbb
in
rol
jp
ss
xor
inc
pop
pusha
jmp
insl
push
cld
aam
mov
lock
iret
jno
sbb
cwtl
cmp
cmp
xor
adc
sbb
add
push
imul
cltd
mov
aaa
mov
mov
cmp
jg
adcb
outsl
mov
negl
jmp
mov
add
mov
xor
add
aad
inc
ret
and
in
ds
out
xor
mov
cmp
jecxz
sbb
fdivl
lods
cmpsl
xchg
sbb
push
insl
lds
das
rol
mov
mov
add
shr
icebp
sahf
jo
xorl
push
or
or
cmp
jge
xchg
pop
mov
inc
mov
jp
jecxz
ret
enter
dec
into
mov
adc
jno
inc
pop
sub
ret
pop
pop
mov
lret
and
mov
xchg
scas
mov
sbb
jp
test
pop
pop
mov
jp
cld
outsb
outsb
rolb
movsb
ret
adc
dec
cmp
fnsave
fildl
adc
stc
and
cwtl
mov
adc
scas
out
inc
add
fmuls
cmc
sahf
or
les
mov
mov
fidivrl
adcb
aas
or
clc
cwtl
inc
mov
test
mov
push
sti
imul
add
aam
mov
ja
fstps
xor
xor
xchg
xchg
jmp
aad
mov
xchg
cmc
push
mov
inc
or
cmc
pop
push
pop
mov
push
repnz
jne
ljmp
mov
add
les
insl
jle
or
pusha
cmp
loopne
or
adc
push
fmuls
sbb
daa
out
and
sbb
repz
push
leave
push
mov
mov
pusha
stos
stos
add
push
gs
ret
mulb
stos
pop
das
rcrl
movsb
or
repz
lock
dec
scas
xchg
dec
in
lds
and
and
mov
xor
data16
rolb
in
fsubrl
lock
adc
inc
cmp
mov
jmp
rcr
pop
inc
xchg
jle
jo
sbb
adc
std
shll
adc
mov
or
sub
repz
fidivrs
sbb
lods
add
jge
ss
add
xchg
cmc
sub
ss
jle
in
jno
arpl
pop
test
jno
add
test
pop
scas
jmp
jmp
fbld
test
aas
dec
sbb
les
ds
mov
shl
dec
xchg
dec
pop
and
fs
mov
adc
sub
pop
lret
xor
xchg
mov
stos
cmpsb
fcomps
cld
nop
add
xlat
daa
fs
sbb
dec
pop
mov
enter
js
loop
out
pop
test
stos
inc
dec
push
ds
inc
push
daa
sub
cli
mov
inc
aam
loope
ljmp
icebp
dec
add
pop
mov
vmovdqu
push
ss
lahf
outsb
icebp
add
mov
adc
int
add
lock
sub
push
cld
jne
scas
mov
stos
mov
pop
in
lock
jl
adc
hlt
test
or
or
jl
sti
xchg
lret
and
sarb
add
insb
roll
fistpl
int3
cmp
scas
mov
ss
and
mov
test
mov
dec
jg
push
push
xorb
data16
or
mov
add
and
or
xchg
jg
xchg
shrb
out
pop
pop
jp
shll
setnp
ds
xchg
mov
xchg
aad
cmp
mov
adc
jbe
lcall
inc
push
pop
dec
loop
lds
push
adc
jle
mov
lods
sub
mov
cwtl
ret
push
push
xchg
clc
sub
cwtl
mov
mov
movsl
mov
in
mov
insl
or
cwtl
and
loope
and
jno
mov
add
jg
rcl
mov
iret
inc
cld
les
mov
cmc
nop
sub
push
xchg
cmpsl
jecxz
cli
ds
sub
insb
pop
push
push
pop
sub
ds
test
mulb
mov
imul
pop
out
xchg
stos
fwait
or
lea
addr16
fadd
jp
dec
ret
dec
leave
rorl
mov
inc
je
fwait
add
cli
add
adc
jns
hlt
push
add
xchg
inc
jge
rclb
daa
xlat
fnstenv
push
data16
das
jmp
orb
sub
sbb
addl
rcll
pusha
inc
mov
and
mov
adc
testb
cmc
push
nop
stos
out
inc
fs
jno
sbb
xorb
adc
lds
add
nop
in
test
push
test
jl
in
hlt
outsl
pop
sub
or
std
xor
add
cltd
test
xlat
out
push
stos
movl
or
ret
pop
insb
mov
cmp
cwtl
adc
jl
mov
bound
les
xchg
rclb
lret
loop
or
xchg
fwait
ret
add
or
cmp
sahf
cmpsb
or
xchg
push
xchg
pop
mov
xlat
sbb
dec
add
jnp
stos
push
pop
mov
cmc
fwait
jge
mov
dec
mov
shll
inc
push
mov
and
xor
insb
push
add
fiadds
jg
lods
cmp
dec
mov
pop
fisubl
mov
ret
add
out
and
jge
addl
push
or
bound
mov
inc
imul
jne
outsb
adc
jae
std
pop
cmp
aaa
std
in
in
addb
mov
dec
pushf
jb
ljmp
jge
push
cmpsb
mov
jnp
int
sbb
xchg
jo
pushf
fidivs
shrl
mov
mov
lahf
repnz
rorb
adc
js
adc
sbb
dec
ret
je
dec
jmp
das
je
xchg
std
dec
cmc
rcll
jnp
sbb
jne
pop
adc
xchg
push
fsubrl
or
jno
xor
stos
cmp
dec
cmp
dec
push
std
mov
mov
inc
sbbb
into
fs
ret
jge
ja
xor
pop
or
ja
das
inc
push
aaa
loop
cmpsl
jg
sbb
pop
int3
lret
sti
nop
sbb
int
jecxz
cmp
inc
pop
pop
scas
cmpsl
or
mov
lret
lock
jb
nop
rorb
cmp
cltd
or
sub
push
in
xor
or
mov
loopne
adc
xchg
and
lds
jne
lea
jmp
in
adc
sbbb
mov
pop
sub
add
add
xchg
int
outsl
cwtl
and
in
cmp
mov
mov
loope
dec
stc
andb
inc
stos
dec
push
pop
sbb
add
mov
inc
pop
add
inc
pop
lock
mov
mov
sbb
iret
sub
sbb
fs
icebp
xchg
and
pusha
xor
add
pop
mov
jo
pop
mov
cltd
repnz
das
out
jl
xor
inc
inc
xchg
pop
jbe
test
cli
add
not
push
sbbb
add
xlat
sub
xchg
inc
push
test
jb
fsub
push
cmp
sbbb
inc
sahf
inc
mov
insb
movsb
dec
out
les
test
enter
cmp
test
jbe
lods
dec
cmp
pusha
push
int
scas
push
pusha
loop
pop
mov
andl
rcr
stos
and
leave
je
mov
pop
je
sahf
lods
fstpt
mov
mov
sbb
pop
xlat
mov
jne
cmpb
push
xchg
inc
jl
jl
adc
sarl
ret
cmp
int3
ja
incb
mov
cmc
mov
aam
adc
ret
cwtl
arpl
cwtl
pop
jl
mov
movsbl
dec
mov
mov
jle
push
loope
sti
movsl
enter
adc
xchg
mov
test
add
inc
cwtl
push
pop
mov
jle
adc
sub
fisubrl
fwait
ds
sbb
cmp
mov
mov
xchg
movsb
fidivl
clc
jne
and
pushf
fstl
jb
mov
pop
pushf
ss
inc
dec
gs
loope
push
loope
mov
jp
stos
push
es
rorl
mov
xorb
mov
mov
cs
adc
mov
decb
cmp
inc
in
shlb
call
subb
adc
stos
adc
cmp
add
sti
bound
dec
das
mov
shll
pop
add
mov
add
lods
sbb
cmp
mov
icebp
es
aas
gs
jno
fsubl
push
mov
push
out
aam
dec
mov
sub
hlt
add
inc
sub
rcl
std
jo
mov
jg
adc
dec
and
adc
adc
sub
and
and
sub
shlb
inc
aam
xor
add
jno
outsl
cli
adc
and
ljmp
out
jo
mov
xlat
mov
idivb
xor
lods
mov
sub
cwtl
lea
dec
jecxz
leave
sbb
mov
sub
fldt
pop
loope
add
push
ljmp
out
cmp
rcr
inc
and
inc
sbb
inc
je
mov
into
mov
mov
push
add
sub
jmp
leave
mov
aad
lcall
push
ficoms
jecxz
xorl
loop,pt
xchg
popa
cmpsb
push
scas
mov
pop
push
pavgb
dec
dec
mov
orl
les
jno
lods
clc
sub
test
sti
jbe
mov
pop
shrb
sbbb
mov
add
cltd
sbb
push
aas
loope
add
call
fnclex
sub
mov
ret
inc
pmaddwd
xlat
add
pop
nop
mov
push
fdivrs
mov
or
repnz
jecxz
mov
mov
cltd
xor
lret
dec
adc
insl
gs
add
pop
pusha
cmp
rol
jge
addr16
mov
push
dec
add
pop
cs
xor
stos
mov
xor
js
and
insb
mov
loope
or
push
das
cmp
xchg
es
movsl
or
mov
mov
cwtl
loope
xor
out
push
push
not
jl
lods
sub
je
je
sub
dec
xor
lret
xlat
cmovl
inc
insl
je
sbb
dec
xor
sbb
jbe
test
sub
pop
das
or
into
pop
flds
jmp
dec
subl
iret
adc
test
cs
mov
lret
push
mov
adc
jecxz
jle
mov
push
mov
jnp
push
pop
in
insb
cltd
lea
pop
aam
repnz
or
jns
push
push
sub
lsl
jp
test
pop
push
cld
pop
cltd
test
iret
mov
add
dec
xchg
jb
scas
jg
test
aas
shl
mov
ljmp
or
test
lods
mov
int
sbb
push
or
lahf
pop
or
mov
insb
cli
fwait
inc
jge
mov
shrl
insb
scas
add
subl
inc
clc
mov
mov
ljmp
pop
jl
add
loopne
sub
pop
xchg
out
dec
insl
mov
mov
pusha
jl
sbb
ret
iret
pop
and
or
push
les
lock
adc
or
sbb
xor
filds
out
pop
cmpl
mov
xchg
mov
dec
addb
push
cli
push
jb
inc
pop
ljmp
fmull
inc
cmp
xchg
test
jp
dec
pop
jecxz
ss
pop
lds
sbb
ret
pop
and
mov
cli
push
mov
push
add
pop
mov
mov
neg
je
dec
pop
sahf
inc
stc
dec
sbb
fs
outsl
sub
pop
inc
lahf
cmpsl
push
cmc
and
loopne
cmp
idivl
notb
or
sub
inc
roll
mov
pop
rclb
cld
or
shrb
loop
mov
sti
sbbb
jnp
jno
ret
into
sbb
add
adc
shlb
adc
add
or
mov
fiaddl
cmpl
fidivl
jne
imul
ja
std
loop
jecxz
hlt
xchg
jle
cmp
mov
data16
xchg
orb
out
lret
hlt
mov
leave
or
in
push
jecxz
mov
add
outsb
data16
shlb
xchg
cmp
and
jbe
and
dec
lcall
mov
and
jle
sub
sbb
sub
jne
xchg
jmp
aaa
and
pop
daa
xor
loop
call
jg
loop
int3
aas
fidivs
mov
divl
into
mov
insb
adcb
jne
cmpsl
xor
pop
std
mov
orb
fstl
hlt
sbb
sahf
cmp
test
int3
mov
dec
rclb
mov
dec
popa
jbe
leave
dec
imul
sub
mov
sub
pop
mov
sub
aam
imul
dec
push
jmp
arpl
cli
insb
jmp
scas
dec
cmp
pop
jl
push
das
cwtl
fadds
in
mov
movsl
push
xchg
mov
ss
xor
mov
inc
dec
dec
test
add
or
push
dec
andl
sti
xor
aam
test
sub
xor
mov
loop
in
jl
push
sub
cld
ds
rolb
addr16
pusha
lock
jo
xor
adc
mov
cmp
scas
fldl2e
jge
fdivp
or
cwtl
imul
jp
and
cvtpi2ps
jbe
stos
sarb
sub
sbb
je
or
jle
out
add
adcb
jle
xlat
iret
mov
and
cmpsb
scas
cmp
mov
xchg
outsb
jle
dec
mov
rcr
ljmp
or
mov
xchg
cld
or
mov
pop
sbb
popa
mov
jle
shrb
cwtl
scas
push
imul
mov
rcl
mov
lods
push
sbb
xchg
or
adc
xchg
add
jbe
pop
mov
sub
lahf
push
add
push
cmp
mov
test
cmc
pop
or
sarl
or
loopne
sub
in
movsb
or
mov
popf
rcr
adc
mov
ret
dec
push
cmp
xchg
call
xor
insb
mov
jp
sbb
cltd
push
mov
sbb
push
cmp
add
mov
push
mov
test
add
jecxz
dec
jl
xor
popa
add
adc
enter
out
xor
pop
xchg
mov
pop
lahf
mov
or
and
mov
push
jno
xchg
fwait
pop
rcrl
fisubrl
enter
je
mov
aad
inc
in
add
jns
xchg
arpl
dec
and
loopne
icebp
cwtl
xor
jge
mov
nop
add
pusha
enter
sbb
jnp
xchg
test
jne
test
jp
pop
idivl
xchg
dec
cmp
icebp
jns
adc
jae
out
clc
jle
dec
sahf
std
aam
mov
mov
icebp
mov
bound
idivb
lods
inc
enter
jp
dec
call
stc
and
inc
in
jge
aaa
add
push
jnp
jp
xchg
inc
push
cmp
notl
ret
lods
push
rorb
pop
std
adc
lahf
push
pusha
dec
insl
inc
add
add
push
cmpsl
adc
shr
xchg
fxam
shll
test
jge
dec
mov
mov
pop
cmp
push
jle
sub
jg
rol
arpl
lret
xor
lcall
cmp
je
push
fadds
hlt
mov
pop
imul
mov
lods
scas
int3
rorb
test
dec
movsl
ja
mov
mov
cmp
xorb
fwait
ret
shl
aam
pop
jl
xchg
scas
in
mov
rcr
adc
cld
aas
adcb
js
test
jne
jmp
mov
insl
push
pop
cmc
xor
idiv
add
mov
jo
sub
out
sarb
aad
arpl
push
jecxz
test
outsb
fnstsw
mov
das
mov
test
sub
xchg
out
add
stos
mov
inc
mov
ljmp
fs
mov
out
push
and
pop
jp
je
xor
mov
xchg
dec
mov
fiaddl
cs
cli
pop
push
adc
push
jg
adc
mov
push
jmp
inc
push
or
xor
mov
popa
in
hlt
movsb
xor
daa
mov
ljmp
out
shr
mov
pushf
mov
shlb
loopne
pusha
mov
mov
mov
jne
std
orb
pop
jns
pop
cmp
ret
jmp
ja
cmpsb
es
fistl
inc
cmp
or
and
pop
into
jp
js
jns
xlat
scas
call
filds
cmc
cmpsl
add
bound
rorb
add
mov
pop
addl
push
mov
cli
cmpsl
fs
out
lret
jnp
lret
push
call
iret
divb
enter
pop
lahf
cmp
pusha
and
or
jecxz
push
push
mov
lcall
nop
rol
imulb
mov
xchg
and
shll
mov
push
jl
and
out
push
mov
push
fildll
testl
ja
popa
dec
pop
insb
dec
into
inc
push
jae
fsubrs
inc
push
adc
pop
mov
dec
sbbl
dec
movsl
ret
mov
mov
gs
xor
xchg
jmp
mov
adc
lock
adc
jne
imul
pop
lds
les
jge,pt
int
in
fwait
xor
dec
lret
lahf
loopne
imul
mov
mov
sub
mov
lods
loop
push
mov
cmp
jmp
test
add
imul
aam
push
sub
std
mov
cmp
sahf
add
push
cmpsl
out
adc
fdivrs
push
sbb
xor
push
push
ljmp
xlat
inc
scas
mov
mov
leave
hlt
lds
jecxz
mov
lahf
sub
gs
idiv
push
into
and
lock
add
xor
sahf
sbbl
push
pop
xor
mov
and
push
xor
je
loopne
popa
in
xor
rorb
cmpsl
pop
icebp
ret
pop
add
popa
call
clc
ljmp
sub
inc
cmpsb
cmp
sarb
ss
mov
mov
cltd
test
shll
pop
movsb
icebp
roll
aaa
add
add
sbb
movsb
mov
add
pusha
mov
movsb
iret
mov
cmpsl
cmp
fstpt
mov
leave
sahf
and
shrl
fadd
pop
lods
cmp
sub
decb
dec
stc
mov
mov
pop
loop
jo
fwait
add
das
rorb
stos
add
xor
xchg
cmp
and
lret
loopne
inc
call
out
rcrb
shlb
mov
addb
mov
add
int
add
lock
push
mov
jo
and
mov
xchg
mov
das
pop
andl
push
loopne
movb
ja
popl
test
fisttpl
or
hlt
mov
lods
filds
mov
mov
fistl
adc
arpl
jle
xor
shrb
xlat
xor
js
mov
rclb
cltd
roll
pop
pushf
in
or
and
mov
clc
or
ret
push
fisttpl
sar
les
push
pop
add
orb
mov
push
cmp
or
push
mov
lock
push
push
clc
jo
jmp
mov
sbb
or
fs
mov
rcl
cmpsl
rclb
ja
push
jne
ret
and
push
sbb
dec
adc
sbb
hlt
and
scas
sbb
clc
test
sarb
dec
testb
pop
mov
rorb
pop
mov
pop
add
mov
adc
lock
shr
orb
stc
ljmp
insl
cmpsb
into
or
push
xor
pop
js
pop
test
scas
in
xchg
cmpsl
xchg
inc
clc
or
data16
push
push
jecxz
in
mov
and
push
test
sbb
jl
cwtl
mov
cwtl
mov
dec
add
arpl
xchg
aas
push
mov
scas
sub
adc
scas
inc
stos
push
subb
mov
xor
arpl
cltd
lock
sbb
stos
les
shl
jb
dec
dec
cmp
pusha
in
fbstp
and
pop
andl
shrl
jecxz
dec
das
sbb
lret
shlb
mov
test
popa
add
push
loope
push
mov
sbb
inc
jle
inc
cwtl
lahf
mov
mov
sbb
cmc
loop
push
xor
and
jb
push
scas
clc
mull
adc
inc
pop
adc
push
cmp
pop
sbb
rorl
pop
idivl
jbe
fwait
stos
mov
ja
jmp
push
xchg
add
mov
test
fildll
lea
jo
cmpsb
sbb
xchg
pop
mulb
mov
fldl
shrb
fistpll
lods
insb
lahf
inc
jle
adc
adc
dec
inc
test
rcrl
jne
jbe
mov
mov
push
and
mov
add
push
arpl
dec
pop
or
movb
pop
test
lds
sub
aaa
cld
push
mov
movsl
das
mov
stos
mov
mov
push
ret
jb
mov
ds
push
daa
sub
test
lea
incb
and
xchg
sub
jae
mov
push
mov
jmp
das
out
daa
sbb
ret
jge
lret
adc
jne
add
fists
iret
mov
inc
shrl
xchg
stos
sbb
mov
insb
cmc
add
and
ja
dec
les
mov
testl
push
je
bound
aaa
lahf
or
dec
push
jg
or
lock
mov
idiv
or
jns
fistpll
cmp
clc
xchg
sub
mov
mov
pop
aad
aaa
js
add
push
cmpsb
test
cli
lock
pop
xchg
jo
movsl
push
push
xor
sbb
jg
mov
push
push
pop
aas
mov
mov
pop
enter
jge
rorb
inc
pusha
mov
jb
ret
cmp
dec
loop
mov
push
cmc
sbb
cmpsb
inc
pop
ljmp
mov
in
pop
or
xchg
add
mov
hlt
cltd
cli
push
clc
adc
pop
cmpl
mov
adcl
pop
popa
iret
test
push
out
les
loop
pop
xor
test
sbb
push
mov
bound
cs
jp
call
mov
ss
out
testb
push
aam
mov
sub
inc
lods
mov
and
popf
push
fwait
pop
popa
and
dec
repz
mov
mov
bound
jle
or
dec
add
in
cmp
and
shlb
ljmp
adc
clc
je
add
add
inc
in
ja
daa
jl
out
push
inc
jmp
pop
iret
push
pop
and
pop
hlt
cmpsb
mov
xor
cmc
ds
nop
int3
ret
leave
je
jecxz
push
or
jl
jl
call
imulb
repz
pop
xor
inc
call
dec
push
pop
lock
sti
cmp
xor
push
jb
in
ror
js
or
xchg
scas
fmuls
cmp
push
inc
aas
fldenv
mov
jmp
inc
push
loopne
pop
pop
test
iret
push
pop
push
pop
dec
jae
jo
jl
mov
sbb
inc
outsl
std
sbb
cltd
xor
adc
cmp
mov
sbb
vmovsd
adc
or
stc
jo
movsl
xor
scas
aas
push
push
jmp
sahf
lods
adc
roll
jge
fsub
xchg
xor
jge
mov
xor
push
jno
pop
ret
dec
jo
bound
xabort
add
cmpl
dec
jmp
sahf
jae
test
sub
nop
stos
lret
or
lods
and
fsubs
icebp
or
mov
lock
lds
xchg
out
ss
insl
aas
add
lods
iret
es
mov
push
pusha
and
cmp
mov
push
mov
into
xlat
daa
mov
sbb
bound
jp
jle
fstpl
daa
push
jb
fcmove
and
xor
push
or
push
pop
pop
stos
and
call
push
push
jne
inc
enter
or
mulb
aas
pop
rorl
and
ds
mov
and
cmp
pop
push
sti
daa
dec
adc
adc
jne
add
sub
fisubrs
xchg
cmp
xor
mov
test
arpl
dec
sti
enter
call
pop
sub
adc
es
outsl
push
inc
or
push
std
add
xchg
int
jbe
jg
cmpl
cltd
lcall
adc
inc
dec
adc
insl
test
or
adc
in
pop
insb
dec
test
cmpsl
pop
popl
push
pop
icebp
mov
xor
sbb
jle
lret
lret
adc
int3
dec
push
pusha
mov
fs
mov
sbb
xchg
add
loop
mov
jecxz
fimull
sahf
shlb
loopne
add
and
push
pop
or
dec
mov
mov
movsl
pop
push
mov
pop
je
icebp
rol
add
sti
mov
pop
mov
pop
inc
push
add
notl
cli
insb
mov
jecxz
fcoml
cld
stos
lret
adc
jmp
roll
cmp
jb
mov
cmpsb
mov
ficoml
rcr
pop
add
loope
cmp
popa
adc
lock
fcmovnb
inc
cltd
jg
fisubs
mov
mov
cli
sarb
pushf
xor
xchg
js
xchg
hlt
sub
mov
int3
pop
xchg
sahf
pop
int3
pop
bound
scas
add
fiadds
pop
inc
les
mov
push
push
mov
push
mov
into
cmp
das
jge
mov
test
mov
mov
icebp
adc
pusha
xor
push
cmp
out
enter
pop
xchg
jp
fidivl
xchg
sub
push
inc
push
xchg
ja
loop
mov
xor
add
cld
aad
fdivrs
into
enter
testb
jo
mov
mov
mov
inc
sub
mov
cli
outsb
mov
icebp
push
mov
aas
mov
push
inc
jg
dec
fimuls
pushf
pop
fdivp
popa
sbbb
ds
lea
je
clc
mov
nop
sub
jl
inc
pop
adc
mov
cld
adc
outsl
or
xchg
or
cmp
jg
jne
fisttpl
dec
cmc
xor
dec
pushf
push
mov
sbb
movsb
push
cmp
mov
xchg
mov
lea
lds
imul
adc
adc
mov
test
or
popf
mov
int
aas
daa
add
or
loope
push
xor
fiadds
mov
outsl
ja
add
xchg
add
jmp
fsubr
add
pushl
aam
rcrb
inc
adc
add
add
insb
lahf
ret
loope
add
stc
xchg
add
js
add
push
sbb
xor
push
pop
sbb
mov
pusha
mov
shll
ficoml
ds
mov
fucomi
jecxz
fs
mov
mov
pop
push
mov
push
jo
daa
mov
aad
aam
mov
out
pop
sti
sbb
and
mov
call
jae
lahf
add
jb
push
pop
cmp
xlat
push
lods
mov
inc
lcall
test
rclb
cmp
dec
jnp
leave
mov
outsb
lds
movsb
dec
xor
enter
rorl
leave
inc
xchg
sbb
push
jo
aam
sbb
add
xor
nop
clc
sbb
je
and
pop
adc
mov
scas
mov
ret
aas
add
xor
dec
and
dec
movb
push
and
iret
scas
loope
jnp
sbb
mov
lock
ret
push
jecxz
adc
loope
fwait
sub
push
sbb
mov
jo
push
cmpsb
adc
enter
push
adc
xchg
lahf
sbb
jg
fists
icebp
ds
mov
loope
scas
pop
movsl
cmpsb
inc
jp
add
ss
push
push
roll
and
or
loope
or
pop
pushf
sbb
dec
or
ja
pop
add
iret
cld
icebp
aaa
rcl
xchg
add
shlb
fisubrs
mov
andl
xchg
into
inc
cmp
mov
adc
insl
and
inc
and
pusha
adc
push
sbb
and
sti
jecxz
jae
xchg
test
loopne
cmp
inc
ja
mov
faddp
or
fdivs
cltd
xor
fistps
ljmp
push
mov
sub
mov
add
rsqrtps
int
and
out
cwtl
cld
mov
pop
push
sub
clc
aas
and
fwait
mov
mov
or
lods
or
inc
fwait
jb
sahf
mov
scas
loop
push
inc
and
loop
outsb
repnz
ljmp
pusha
add
adc
push
or
mov
inc
jl
cld
js
pop
faddl
mov
bound
loopne
ss
or
mov
jmp
push
xchg
movsl
add
hlt
sbb
mov
mov
or
push
and
or
dec
fwait
jbe
push
jl
out
add
and
sbb
lds
push
jg
ret
pop
fs
push
cmp
xchg
xor
dec
andl
add
fdivs
xor
mov
shrb
hlt
adc
aam
pusha
and
or
mov
aad
int
cmp
jmp
sbb
mov
movsb
add
cbtw
mov
push
adc
push
scas
clc
pusha
add
movsl
mov
es
rorb
in
call
push
decb
imul
add
push
mov
clc
test
or
mov
and
cs
inc
sbb
push
je
push
test
test
ljmp
and
bound
sub
jecxz
in
orb
push
jns
cmpsl
rorb
push
jg
sbb
testl
xorb
mov
mov
jecxz
adc
fldt
stos
mov
test
aaa
hlt
fcmovnb
adc
fidivl
xor
mov
sub
rorl
xchg
mov
pop
das
cs
cli
xor
jecxz
fnstenv
inc
jl
cmpsl
sbb
pusha
mov
inc
pop
ds
cmp
sbb
sbb
adc
fs
or
mov
rcll
jp
repz
jl
mov
and
push
cs
add
lods
stos
xor
pusha
and
enter
out
lret
inc
dec
add
jmp
and
dec
aad
push
add
push
sbb
fwait
rdmsr
mov
and
pop
lret
mov
inc
int
lea
mull
pop
adc
pop
loope
mov
hlt
outsl
xlat
push
dec
loope
jnp
pop
mov
mov
ljmp
mov
lods
daa
stos
adc
pushf
stos
push
mov
mov
ret
adc
mov
stc
push
xor
cli
faddp
push
fnstcw
xchg
out
xor
mov
mov
pusha
ljmp
dec
or
or
les
scas
scas
mov
and
mov
pusha
das
call
push
mov
jnp
sub
add
adc
movsb
outsl
loope
pop
jns
ret
out
push
cld
cs
fldenv
fisttpl
ds
shlb
adc
inc
dec
bnd
xchg
sbb
mov
pop
sbb
js
add
push
enter
mov
mov
push
add
pop
lret
add
pop
xor
insb
xlat
les
jo
lds
std
xor
pop
lds
cli
jnp
jecxz
mov
hlt
push
pop
sub
fcoml
jns
mov
fcompl
lock
daa
setl
mov
outsl
xchg
stos
sbb
in
std
out
cmpsb
xor
scas
aas
jno
jg
and
fsubrs
jp
mov
cli
lock
mov
sbb
loope
dec
jns
repz
jmp
jle
or
jne
jns
xlat
loopne
mov
out
dec
cs
jp
loopne
adc
test
xchg
fdivr
dec
add
or
inc
in
mov
cmpsb
adcl
jl
cwtl
sbb
loopne
xchg
add
pop
cwtl
mov
adc
mov
dec
add
stos
ret
fyl2xp1
cmp
loopne
arpl
cmpb
rcrl
sub
mov
sub
mov
xchg
add
pop
dec
ret
cmp
cmp
loop
inc
xlat
xorb
jmp
push
sub
push
insb
mov
mov
faddl
rolb
js
scas
mov
push
and
xchg
add
push
xor
push
sbb
dec
lcall
xor
dec
push
pop
push
pop
aad
push
movsl
xchg
mov
push
out
lods
ret
popa
sti
or
insl
mov
mov
aad
outsl
and
into
mov
mov
sub
fidivrl
popfw
stos
xchg
mov
clc
adc
and
mov
mov
inc
mov
pop
ja
mov
and
int3
loop
and
sub
mov
pushf
ret
push
pop
ds
cli
pushf
mov
cld
sbb
fcompl
scas
adc
mov
lds
cld
xor
push
orl
nop
aaa
pusha
pop
jg
mov
sbb
into
pop
and
js
clc
lods
jg
xchg
add
jns
daa
aas
push
cltd
outsl
add
fldl
inc
imul
fisubrs
xchg
ljmp
shrd
or
lock
xor
cmp
in
imul
sbb
inc
sub
or
sbb
rolb
in
jmp
popf
sbb
pop
fs
rorl
mulb
test
popf
mov
mov
sbb
fildl
cs
fnstcw
nop
rclb
aaa
pop
jmp
add
in
stos
cmp
cs
xchg
pop
arpl
add
scas
cmpb
add
mov
movsl
jecxz
sub
in
mov
dec
mov
mov
pusha
pusha
mov
cmp
dec
ds
test
ss
cli
ljmp
lods
jmp
std
fnstcw
pop
xchg
cmp
enter
or
stos
inc
sbb
pop
pop
xor
shlb
fucomi
pushl
pop
mov
rorb
es
cmp
shrl
mov
lods
lea
test
jmp
fimull
push
inc
repnz
or
adc
sub
rcl
insb
out
int
jp
dec
adc
shrb
outsb
clc
mov
sti
test
dec
or
xchg
cld
icebp
ret
inc
mov
xor
cmc
xchg
sub
mov
call
push
mov
mov
imul
pop
outsl
inc
andl
sahf
dec
or
mov
adc
cmpl
adc
cltd
sbb
bound
pusha
sub
scas
ljmp
lods
data16
test
insb
lret
shlb
enter
incb
xor
sub
jo
roll
jnp
std
orb
sub
test
mov
pop
push
or
sub
mov
push
xor
aaa
jecxz
aaa
fcomp
xchg
mov
sbb
aad
mov
sti
push
xor
out
sub
enter
pop
fdivr
jb
xchg
roll
or
clc
out
mov
loope
mov
test
js
adc
push
es
dec
push
mov
dec
cwtl
cmp
in
stos
lods
ret
adc
sub
inc
fists
or
jb
test
repnz
mov
aad
pop
movsl
or
xchg
jl
mov
mov
ret
push
push
lahf
mov
pop
jge
hlt
ljmp
cmpsb
das
jl
or
clc
subb
hlt
pop
and
xchg
xor
or
jge
pushf
mov
or
not
call
pusha
loop
push
adc
orl
mov
stos
int3
and
es
inc
xchg
out
add
cltd
fldenv
lds
adc
pop
outsl
sub
mov
xchg
pop
ljmp
loope
xor
mov
int
cmp
enter
push
lock
cmp
cmpsb
fbstp
mov
xor
and
adc
xchg
mov
clc
lods
xchg
ret
adc
cs
lock
mov
or
mov
pop
adc
pusha
clc
or
mov
out
js
nop
cs
in
adc
adc
or
cmpsl
loope
out
hlt
or
mov
dec
loop
loop
mov
enter
jg
rolb
test
out
cmp
xchg
or
mov
idivl
add
sbb
push
stos
xchg
push
repz
dec
lods
cmp
aam
divl
icebp
fsubr
push
and
sarl
sub
mull
pop
or
mov
das
jp
loope
mov
sub
je
jg
mov
hlt
mov
push
call
jno
insb
push
outsl
jbe
cs
sub
xor
sbb
sbb
mov
push
mov
and
pop
push
cmp
jp
pop
gs
xchg
fwait
sahf
sbb
fbld
ffreep
arpl
sub
or
cmp
sbb
jl
fnsave
cwtl
or
add
fcompl
or
push
sub
icebp
ljmp
and
jne
xor
cmc
dec
push
push
sti
sarb
mov
subb
mov
add
bound
pop
icebp
stos
js
add
fs
jb
cmpsl
hlt
dec
jae
aas
subb
dec
push
fistl
cmp
call
adc
mov
cli
dec
stc
lock
cli
lods
pop
pushf
jge
pop
mov
xchg
shrb
rolb
cli
cwtl
addr16
adc
gs
add
into
fisubrs
iret
sub
or
lcall
push
aad
or
xor
sub
cmp
cmpb
test
fmull
dec
sub
ja
inc
lahf
imul
adc
in
mov
cmp
loop
stc
loop
sbb
inc
xchg
out
notb
lret
xchg
inc
rcrb
pop
sub
sbb
lretw
mov
mov
mov
or
and
lods
dec
ror
aaa
push
clc
popa
movsb
fisubrs
test
and
lret
jb
notb
push
pusha
adc
mov
mov
inc
jbe
out
mov
out
pushf
xchg
fadds
daa
xor
faddl
inc
fimuls
xchg
or
jle
xchg
dec
cmpsl
or
mov
inc
mov
push
pusha
sti
pandn
inc
add
insb
jbe
mov
rcrb
push
loope
arpl
shlb
lret
aas
cmpl
out
sbb
movsb
popa
push
cmp
mov
test
lock
ret
and
out
xchg
mov
addr16
xchg
jp
movsl
inc
iret
jbe
pop
or
fcomps
fwait
inc
or
jp
push
psubsb
test
mov
std
or
out
scas
mov
sti
mov
mov
sub
fs
sbb
aas
mov
rcll
inc
decb
jbe
ds
add
mov
xchg
xchg
outsb
lock
xchg
adc
mov
mov
repnz
test
call
sub
mov
push
imul
mov
cld
mov
add
and
sbb
pop
ja
mov
mov
jb
insb
cli
sbb
mov
in
sbb
add
add
adc
lock
pusha
lods
fcmovnu
sbb
clc
sbb
sbb
xlat
imul
out
mov
lret
mov
xchg
sbb
adc
cli
pusha
xchg
outsb
out
rclb
lods
sub
mov
nop
push
lcall
inc
lods
data16
lods
fcomps
je
push
mov
icebp
sbb
mov
stos
dec
xor
std
ss
push
shlb
xor
fcompl
lods
nop
push
jecxz
adc
pop
dec
pusha
add
mov
mov
call
leave
push
test
jno
dec
push
mov
sub
arpl
clc
cmp
std
inc
addr16
and
add
addr16
or
outsb
pop
lock
cmp
jge
cmp
cs
or
rorl
xor
leave
call
dec
out
sub
testl
jmp
mov
mov
and
mov
repz
pop
aad
cld
or
mov
mov
les
notl
push
push
pop
xlat
andl
lahf
or
das
push
sbb
push
loopne
push
sub
push
push
cmp
sub
add
mov
data16
lret
sbb
pop
mov
adc
xchg
mov
repnz
or
cs
cmpsb
xchg
sbb
sbb
rolb
lods
int
adc
ds
mov
mov
adc
shrb
jo
pop
fnstcw
and
or
or
test
add
sahf
xchg
sub
sub
ds
pop
xchg
and
pop
sub
stos
aas
xchg
insl
cmp
stos
xor
pop
mov
fwait
cmpsl
sub
insl
xchg
jo
pop
sub
inc
xlat
and
mov
dec
js
mov
jg
cli
xchg
and
cs
cmp
faddp
push
stos
into
xchg
dec
sbb
stos
rcrl
sbb
test
pop
jle
add
shlb
rcll
out
popf
rolb
push
sub
rorl
mov
mov
adc
cmp
fidivrs
in
inc
pop
sbb
jnp
push
je
jg
mul
pushl
and
pop
cmpsb
jb
fcomi
mov
aaa
mov
into
je
jo
out
imul
sbb
clc
xor
jmp
adc
and
push
inc
push
call
jp
inc
insl
lock
les
enter
mov
push
sbb
add
add
sti
stos
test
pusha
sti
jne
je
inc
add
loopne
xchg
xor
and
das
mov
in
jne
add
pop
ds
cmpl
xlat
dec
lret
or
mov
stos
pushf
inc
jo
and
add
outsb
data16
fwait
ror
xor
loopne
test
mov
push
add
push
fidivrl
sbb
pop
push
inc
das
sbb
inc
in
mov
aas
arpl
dec
fucom
pop
push
dec
xor
lds
call
jle
or
mov
pop
or
xchg
rcl
mov
and
pop
in
lret
movsl
mov
aad
and
bound
aam
js
pop
or
and
bound
movsl
inc
out
leave
push
bound
or
cmp
aas
or
push
imul
pop
pop
aad
jbe
adc
sbb
js
inc
sbb
dec
and
xchg
cmp
lea
jecxz
inc
xchg
pop
in
add
cmpsl
mov
nop
popa
scas
push
popf
push
adc
cltd
inc
rcll
bound
lahf
push
out
or
pushf
test
lock
sub
out
cmc
mov
push
hlt
in
sbb
lock
jle
out
or
add
ret
jns
popa
mov
cwtl
mov
fs
loop
loop
sbb
mov
in
js
cmp
aaa
cli
xor
mov
test
das
lea
call
pusha
lds
mov
shlb
push
mov
hlt
push
xlat
add
cmp
mov
mov
mov
xchg
sti
sub
dec
xchg
jbe
xor
pop
push
cmp
pop
jbe
mov
and
ja
sub
std
leave
sub
add
and
cli
inc
pop
adc
jo
mov
mov
fwait
mov
xorb
mov
bnd
frstor
test
jge
je
scas
xchg
xor
repz
out
adc
push
insw
or
mov
pop
ss
jge
out
jp
sarb
mov
hlt
and
jl
push
sub
movsl
fimuls
mov
push
and
incb
cmpb
push
add
shlb
inc
clc
xlat
lds
arpl
icebp
xchg
sbb
inc
pop
xchg
or
push
jns
aad
je
inc
notb
addr16
mov
mov
bnd
jecxz
shrb
mov
les
xchg
into
xchg
fs
pop
mov
mov
pop
fsubrl
dec
mov
sti
fisubrl
mov
je
mov
inc
mov
sbbb
adc
int
adc
inc
ret
std
and
adc
popa
and
jmp
scas
call
pop
out
mov
cld
cwtl
mov
loope
test
adcl
mov
and
outsb
pop
mov
and
xor
shrl
dec
aam
xchg
mov
mov
sbb
mov
inc
cld
jo
push
cwtl
stc
adc
mov
pusha
mov
pop
mov
jg
sbb
lock
in
mov
rcll
sahf
fs
inc
xor
jb
lcall
cmpsb
jo
in
dec
into
in
and
aaa
fwait
jle
push
outsl
divw
insl
xor
ret
outsb
jbe
and
ret
xchg
addb
push
mov
mov
fwait
dec
fiaddl
out
sbb
sbb
pop
sarb
scas
pusha
xor
cmc
jl
scas
mov
mov
cmp
jne
fwait
push
mov
icebp
mov
mov
cmp
jo
aaa
test
add
subl
xchg
lock
mov
enter
mov
in
aad
aaa
add
repnz
es
je
sub
pop
mov
in
lds
ss
dec
movsl
sub
movb
push
ficompl
mov
stos
sub
mov
xor
iret
pusha
jle
dec
fildl
lods
add
inc
xor
cmp
inc
ja
pop
xchg
jae
bound
popa
jg
add
aam
mov
loopne
adc
mov
mov
es
dec
jae
lea
cmp
ret
xor
jle
mov
ds
rolb
push
pop
js
xor
addr16
orl
mov
add
pop
cmc
test
movsb
or
pop
hlt
mov
cwtl
mov
push
jb
fs
xchg
inc
add
aam
sahf
int
ret
inc
sbb
xchg
mov
loopne
sbb
in
sub
jl
notl
or
inc
sahf
aad
dec
sub
add
mov
push
mov
outsb
ds
hlt
test
xchg
adc
lret
ja
or
insl
rcrb
or
jg
push
movsb
mov
cmpsl
add
mov
sahf
dec
mov
hlt
insb
mov
mov
mov
insl
inc
jecxz
not
cmp
fistpl
call
repz
stos
scas
out
ficoms
cmpsb
test
xchg
hlt
jge
pop
push
pushf
push
cmp
mov
push
inc
dec
push
cmpsl
scas
out
pop
mov
push
mov
xorb
movb
or
insb
mov
ss
push
mov
enter
xchg
mov
mov
jg
dec
dec
add
push
clc
lcall
mov
jne
jg
mov
in
je
hlt
add
in
add
fsubs
adc
sbb
mov
lock
cmp
inc
jg
inc
out
jae
nop
cmp
or
mov
ja
rcr
or
mov
mov
sub
cltd
rolb
xchg
cmp
add
out
add
jmp
lcall
in
rol
cmpsb
dec
mov
cmp
and
push
cmpsl
std
ret
push
inc
adc
nop
push
js
nop
pop
ret
sub
aad
dec
loope
sbb
insl
mov
mov
ljmp
rcrb
adc
insl
or
pop
ljmp
adc
mov
cmp
aam
rcrb
scas
sub
or
mov
xchg
icebp
lods
adc
mov
cwtl
out
or
out
idivl
shll
cmp
sub
inc
mov
push
enter
lods
std
loope
scas
add
movsb
imul
daa
out
lock
in
pop
sbb
jnp
mull
sbb
mov
ss
insl
pusha
lcall
cld
sahf
jp
sti
test
insl
bound
jae
cmp
int
pop
icebp
or
loope
mov
loop
sti
call
xchg
sar
sbb
push
data16
mov
out
cmpl
xchg
pop
add
push
add
mov
subl
cmp
loopne
cmp
icebp
cltd
clc
xor
and
test
push
xor
sub
mov
or
fs
jl
mov
outsl
arpl
les
loope
sub
les
pushf
daa
fucomi
pop
jbe
push
les
lea
pop
mov
and
add
sub
std
outsb
mov
xor
fidivrs
pop
push
clc
insb
clc
loop
nop
fistpl
out
dec
xor
les
dec
hlt
cmp
dec
pop
cmp
and
and
loopne
inc
ret
in
dec
sbb
jle
call
repnz
adc
test
sets
push
dec
pop
adc
bswap
mov
jae
ljmp
and
aad
inc
in
popf
and
mov
repnz
jb
shr
shll
imul
rolb
scas
bound
call
lds
jo
push
js
ss
mov
loop
or
test
shl
std
in
ror
mov
push
scas
cld
std
popf
and
xchg
sub
xor
mov
loopne
dec
add
jb
cmp
pop
ljmp
mov
adc
cmp
dec
add
test
stos
push
lahf
or
push
adc
mov
xchg
pusha
sub
shll
in
orl
lods
dec
mov
jo
aam
and
loopne
cmpl
ja
scas
int3
aam
mov
add
jne
adc
lret
loop
xor
mov
dec
inc
push
cmp
dec
or
mov
icebp
or
and
cmc
pop
clc
cmp
jno
adc
jns
ret
sbb
cld
loopne
fidivrl
shrb
xor
mov
xor
scas
shl
outsl
and
push
scas
jecxz
push
mov
imul
xchg
mov
int
adc
or
mov
cmpb
inc
icebp
divb
icebp
xchg
fcomps
jle
dec
dec
lcall
pusha
mov
cmpsl
and
jg
insb
add
cmc
rorb
inc
in
push
rcl
ds
dec
mov
aas
and
cmp
lock
adc
bound
lock
cmp
sbb
cmpsb
or
out
fcomps
pusha
jge
popa
out
jmp
push
popl
rolb
push
dec
jl
jb
and
inc
repnz
aas
fucom
add
faddl
xor
add
repnz
rcl
cmpsl
jbe
lock
and
subb
mov
andb
add
push
ret
sbb
cmpsb
mov
bound
fstpl
jle
inc
ret
and
repnz
or
idivl
xchg
adc
add
sbb
mov
jbe
lods
mov
fucomi
fnstsw
adc
adc
jnp
pop
sbb
popa
mov
push
cmpsb
sbb
and
aam
mov
mov
and
inc
and
sbb
aam
pop
out
and
or
pusha
movsl
aaa
inc
pop
rcr
cmp
cli
or
pushf
or
adc
sub
aad
or
sub
cmp
ret
popa
push
mov
jo
shlb
movsb
aad
pusha
loopne,pt
popl
inc
inc
xor
mov
popl
movsb
lret
xlat
adc
lahf
inc
rolb
mov
adc
xchg
out
jae
ljmp
loopne
movsb
out
stc
test
dec
scas
int
out
jp
or
add
cltd
push
mov
dec
sub
sbb
jle
xchg
sub
pop
sti
mov
mov
mov
in
aas
fadds
filds
sbb
dec
shrl
mov
std
xchg
mov
xor
sti
dec
addr16
hlt
pop
popa
sbb
call
inc
cmp
js
ja
sbb
mov
shrl
mov
pop
sub
push
jbe
inc
jg
mov
push
or
push
push
adc
xor
push
mov
stos
rorb
arpl
out
out
adc
nop
cld
sar
repnz
lret
mov
lret
ret
rcr
cli
cmc
stc
aaa
scas
push
xorb
pop
sub
aaa
fmull
popa
outsb
xchg
aas
int3
daa
lods
shr
push
pop
inc
das
ret
sti
mov
inc
jl
imul
jle
lock
sbb
push
in
outsb
mov
jb
in
icebp
outsb
stos
adc
ficoms
js
lock
dec
fs
push
decb
sub
pop
xor
sub
loop
les
sub
ljmp
hlt
or
rcrb
jno
xchg
fcompl
aas
lods
xorb
or
mov
mov
aaa
dec
or
mov
add
push
push
int3
push
icebp
push
outsl
pop
mov
fisubrs
data16
add
lret
jp
jmp
cltd
cmp
inc
insb
sub
andb
test
mov
imul
mov
scas
shrl
add
sti
shl
les
gs
add
test
outsl
fldt
push
js
dec
fisubrs
jnp
and
pop
adcl
cmp
addb
or
dec
clc
jmp
call
add
adc
movsb
add
cmp
cmpsl
xor
pmulhuw
mov
jae
adc
ljmp
aam
movsl
add
aaa
jp
jo
out
inc
push
xchg
sub
je
aaa
lcall
outsl
lahf
sti
cmpsl
sbb
loopne
out
xchg
and
xlat
xor
ret
fdivrl
inc
ljmp
pop
mov
aaa
ljmp
or
stc
push
rorb
mov
or
mov
nop
jmp
adc
rorb
inc
xchg
outsb
ss
xor
adc
xchg
js
pop
mov
les
add
pushf
jne
inc
pop
in
hlt
pcmpeqb
pop
sarl
or
lock
jge
mov
lcall
fwait
arpl
jnp
sub
jb
mov
mov
xchg
dec
je
daa
in
mov
por
stos
test
movsl
xchg
cli
pop
pop
scas
out
mov
jns
js
cmc
fsubrl
jae
jnp
aad
xor
out
pusha
das
push
push
imul
call
pop
inc
xor
cltd
adc
pop
add
sub
xor
lret
inc
je
jge
sti
push
sub
bound
fiaddl
fs
or
or
loopne
scas
stos
pusha
rcll
push
xchg
sub
and
dec
notb
cmp
test
lods
sbb
xchg
pushf
add
jge
xchg
jb
lods
lods
clc
mov
and
hlt
aaa
sub
decb
call
lods
outsb
push
xchg
jp
mov
inc
in
fisttps
roll
test
sahf
fldcw
pop
js
test
push
push
iret
or
movsl
dec
sbb
xchg
push
shr
bound
cmc
pop
repz
pop
jp
sti
rolb
and
lock
dec
scas
sbb
cld
test
pop
sbb
insl
xchg
xor
inc
test
mov
cli
insl
mov
aad
sub
mov
push
cmp
fsubr
lds
sbb
std
fldenv
scas
dec
shrl
mov
cmp
lcall
xchg
aad
pop
fistl
dec
lock
xor
and
jl
mov
cmpsl
mov
inc
xor
fstps
dec
loope
xor
lods
addb
scas
shlb
pushf
scas
out
jp
pop
shrb
mov
scas
xchg
mov
ret
pop
loop
sub
or
or
cmp
jno
ja
movsl
out
fsubrs
sahf
mov
sbb
andl
or
out
lods
aad
cwtl
adc
jp
aad
clc
fimull
cmp
mov
loop
add
icebp
test
jp
and
sbb
cmp
insl
je
mov
in
lar
daa
cmp
insb
inc
cli
fisttpl
dec
sbb
fadd
ja
xorb
loope
add
cwtl
cs
rolb
ljmp
into
mov
pusha
adc
popf
push
sti
lret
loop
dec
jg
arpl
mov
cwtl
inc
add
gs
sti
push
mov
fiadds
dec
insl
jno
or
int3
js
movsl
jge
pop
jo
mov
add
jb
adc
mov
ljmp
shll
push
std
sarb
out
pop
pop
pop
mov
adc
cld
popf
cli
mov
mov
outsb
dec
add
jmp
xchg
jle
cmp
or
xor
and
or
sub
popf
mov
rol
ss
out
adc
bnd
pop
pop
or
adc
pushf
sbb
rorb
jmp
fdivrl
shrb
pop
scas
addl
movsl
add
cmpsb
rorb
lea
push
cltd
aas
inc
test
pop
in
mov
and
clc
sbb
pop
jle
fidivrs
jg
ret
pop
cmp
in
jmp
xchg
sbb
inc
stos
inc
mov
pushf
jecxz
push
data16
jo
xchg
cld
add
test
fcomps
xor
aas
out
xchg
mov
loop
stc
pop
jmp
addb
or
daa
jl
adc
and
inc
ss
adc
decl
cli
sbb
add
enter
push
rorl
adc
mov
test
cmpsb
movsl
sahf
push
inc
mov
scas
call
popa
xchg
pop
add
lods
pop
sbb
sbb
gs
add
cmp
lds
mov
inc
dec
loopne
mov
pop
jbe
cmpsb
sarl
cmp
adc
add
pop
test
add
sbb
push
clc
or
notb
inc
mov
scas
push
inc
mov
lods
mov
cmpsb
and
sbb
push
rcll
push
les
jb
push
popa
cld
in
adc
or
popa
insl
sbb
push
js
mov
jge
push
ljmp
and
xor
sti
sbb
lds
shrb
cs
xchg
or
mov
lods
icebp
jnp
cmp
ret
xor
pop
pop
sbb
mov
ret
into
mov
jmp
mov
mov
repnz
ficoml
pop
out
jns
sbb
pop
cmpl
add
push
out
les
fwait
xchg
xchg
movsb
or
les
sbb
in
clc
and
dec
fidivs
mov
aam
add
outsb
cltd
test
sahf
fildl
sbb
push
xchg
nop
cmc
sub
test
mov
mov
cmp
dec
cltd
scas
in
loopne
sub
cli
fisttpll
int3
jge,pn
fcomip
mov
sub
enter
dec
sub
cmp
mov
mov
nop
ljmp
cmpsb
pop
orb
dec
gs
icebp
inc
pop
push
loope
ds
or
mov
icebp
cmpsl
push
cwtl
gs
shlb
mov
testb
lods
adcb
ret
pop
testb
or
popa
fsubrl
jl
outsb
lcall
ljmp
jb
jbe
in
ret
aam
fucomi
dec
into
ret
testl
adc
mov
and
loope
xchg
ficompl
vmread
cmc
dec
dec
inc
mov
add
and
clc
out
fwait
adc
std
mov
and
bound
cmpsl
add
sbb
lods
mov
outsl
cwtl
add
sub
ss
cmp
sbb
ret
cltd
mov
adc
mov
adc
mov
push
ret
outsl
jo
xchg
iret
jns
js
or
push
fs
xchg
in
cwtl
incl
in
xor
inc
aam
scas
xor
cltd
ret
xchg
je
sub
cmp
or
mov
xchg
xchg
cli
xorb
pop
cmpsb
add
mov
test
pushl
push
dec
adc
js
jle
ret
nop
sbbl
subl
xchg
dec
arpl
sub
add
jbe
push
mov
call
push
incb
les
or
push
pop
dec
push
push
test
push
sbb
xchg
js
repz
xor
sub
dec
insb
imul
rcrl
xchg
bound
icebp
and
loopne
mov
or
js,pn
pushf
adc
pushf
push
hlt
testl
sahf
mov
insb
mov
aam
lds
insb
imul
cmp
add
test
aam
sub
inc
sub
out
fisubrl
clc
push
adc
or
mov
daa
adc
mov
test
jmp
push
push
push
sub
adc
jnp
pop
push
or
aaa
xchg
add
stos
int
or
mov
xchg
sub
and
push
aam
or
int3
cwtl
test
push
mov
cmpsl
data16
adcb
mov
xor
jbe
jbe
dec
cli
push
pop
or
ljmp
or
mov
outsl
sub
mov
sub
loopne
xchg
orl
sbb
in
dec
std
inc
ds
sbb
jb
dec
xor
stos
pop
jecxz
ds
mov
push
push
lods
sbb
sarb
jge
and
adc
inc
push
in
out
les
mov
mov
cwtl
and
dec
fsubr
ret
push
leave
add
clc
fsubrs
mov
sti
mov
jo
dec
cli
push
fs
test
push
repnz
js
adc
js
fldcw
adcl
xor
push
xchg
push
jmp
call
pop
jmp
cmpsb
cmp
icebp
lea
sbbb
mov
pop
or
arpl
mov
sub
mov
pop
mov
out
xchg
jno
out
jge
fnstsw
roll
icebp
mov
mov
xchg
sbb
dec
cmp
ja
or
jmp
shlb
out
lcall
cmp
icebp
xchg
les
mov
mov
gs
and
sbb
lods
fdiv
pop
sbb
lods
mov
in
pop
icebp
push
sarb
repnz
loope
rolb
in
mov
push
loope
pusha
mov
repz
add
ficoms
mov
cmp
xchg
xor
xchg
sub
push
data16
adc
lods
into
and
loopne
adc
push
repz
repnz
ss
cli
test
into
add
add
or
inc
add
adc
inc
mov
or
clc
arpl
adc
cmp
xchg
inc
jno
mov
xchg
lock
inc
jns
int
mov
aad
sahf
jbe
inc
cld
cmp
sbb
fs
inc
in
jo
cwtl
shlb
adc
dec
mov
aaa
test
mov
jecxz
add
push
add
mov
xchg
or
mov
loope
in
scas
int
mov
sahf
cmp
xchg
sub
ljmp
das
jmp
ja
mov
mov
ds
icebp
cli
jns
lods
mov
mov
push
into
aam
lret
and
jno
pop
test
call
push
mulb
das
js
lock
add
or
aas
pop
pusha
pop
pusha
scas
clc
nop
test
pop
xchg
je
les
mov
sbb
subb
inc
push
std
xor
lahf
cmp
insl
cld
jo
sbb
bound
cli
cmp
sti
call
jecxz
lret
push
dec
adc
adc
xorl
push
push
inc
aaa
sahf
xlat
in
xor
ja
js
xor
test
or
mov
adc
pop
jle
mov
rcrl
dec
mov
leave
insb
dec
stos
icebp
push
loopne
or
sbb
jmp
cmc
mov
push
mov
jg
stos
sbbl
clc
je
sbb
xor
outsl
arpl
or
adc
mov
mov
cmp
fisubrl
dec
pusha
xor
mov
add
aad
lret
fwait
or
dec
cmp
movsl
aas
adc
xor
nopl
ljmp
shlb
push
mov
scas
notb
les
and
or
gs
mov
xchg
xor
lock
lock
push
enter
movsb
es
or
in
add
repnz
fcmovbe
ds
push
xchg
dec
lcall
or
icebp
xchg
aad
jge
repnz
pop
and
aam
icebp
aad
jp
ffree
loopne
popf
mov
add
popa
ljmp
aas
or
mov
pop
fdivrl
dec
mov
add
sahf
rolb
outsl
cmc
sbbl
pop
add
lock
xchg
cli
mov
push
ret
mov
inc
lods
sub
mov
sarl
xor
insl
fisubs
or
mov
mov
sbb
adc
add
xor
addl
dec
mov
dec
nop
ss
insl
imul
push
outsb
pop
add
ret
fists
and
inc
scas
jle
mov
and
mov
mov
push
or
pop
jp
inc
mov
and
push
cli
lods
or
dec
mov
jmp
outsb
lahf
cmpsl
xor
cmp
pop
and
outsl
idivb
rolb
ret
mov
mov
stos
cmp
shrd
out
cmp
inc
fistps
mov
int3
lcall
push
arpl
pusha
inc
fisubs
dec
pop
pop
cli
jb
xchg
jle
xor
fadd
fldl
decl
lock
xor
cmp
lds
xchg
js
cmpsl
mov
rclb
popf
mov
les
sub
push
shl
les
mov
lahf
mov
outsb
inc
les
pop
pop
and
dec
mov
lock
xchg
inc
sub
insl
fidivrl
mov
xor
mov
loopne
sbbl
jecxz
jl
dec
xchg
jp
aam
ficomps
xor
push
mov
cmp
add
pusha
mov
inc
sub
push
add
dec
mov
xor
aad
aaa
inc
mov
imul
sbb
inc
or
leave
inc
cmp
test
xchg
lcall
inc
and
sbb
sbb
pop
or
jmp
mov
cltd
push
jae
dec
ret
xor
push
dec
shlb
scas
loop
lcall
jecxz
andb
enter
mov
xchg
icebp
icebp
or
push
pop
jp
or
sbb
dec
dec
or
rorb
cmp
push
sbb
sbb
stos
aad
in
xor
mov
mov
aaa
mov
jbe
and
jbe
pop
adc
dec
sub
push
scas
xor
xor
mov
daa
mov
mov
outsb
addl
insb
cmp
jne
mov
xchg
or
rcrl
lods
mov
out
fs
inc
stos
mov
and
fadd
mov
jnp
loope
mov
inc
add
cltd
jl
icebp
lock
dec
stos
lods
lret
pop
movsb
or
mov
mov
and
out
fs
cmp
push
sbb
std
adc
ljmp
call
movsl
pop
outsb
scas
adcb
ret
and
push
aad
fs
std
push
sarl
loop,pn
cmpsb
hlt
cmpb
test
xchg
aam
mov
mov
aas
jl
stc
mov
cld
xlat
push
arpl
mov
shlb
jl
out
sbb
iret
add
pop
rolb
push
scas
pop
sti
ja
pop
xor
mov
decb
jecxz
lahf
mov
jle
inc
repnz
cli
push
dec
sub
iret
sub
jle
loopne
out
pop
cmp
lock
mov
sbb
cmpb
jno
test
push
orl
mov
aad
or
cmpsb
mov
and
rcrl
inc
test
add
or
dec
mov
aaa
push
fcoms
sub
mov
adc
add
lahf
cli
jbe
and
call
inc
jg
xor
sbb
xor
cmp
adc
aas
outsl
xchg
pop
push
faddp
mov
inc
enter
ret
dec
lods
orl
sub
cmpl
dec
icebp
es
push
lds
and
inc
add
mov
push
ret
and
loop
out
movswl
pop
pop
mov
in
xor
xor
pop
pop
sbb
std
inc
insb
scas
push
pushf
mov
shl
inc
shr
imul
cmp
jg
hlt
push
test
xorl
insl
mov
push
js
cmc
mov
sbb
movsb
or
cli
fidivl
dec
ljmp
xlat
or
pop
adc
pop
sbb
mov
fs
js
jmp
pop
in
mov
mov
cmp
test
stos
adc
ljmp
inc
jbe
loop
lret
cmp
adc
ja
cltd
push
sbb
xchg
push
lea
std
jnp
cmpsb
std
and
repnz
cmpxchg
lds
dec
pusha
xor
ljmp
mov
daa
mov
pop
push
add
in
inc
shll
cmp
in
xchg
imul
and
sbb
cmc
add
fs
in
fimull
dec
add
add
jl
icebp
loopne
push
in
dec
pop
mov
loopne
sbb
inc
les
aas
or
push
in
and
or
aas
fidivl
loope
push
out
dec
fcmovnb
mov
mov
lea
push
repz
xchg
mov
mov
data16
mov
inc
cmpsl
sub
test
jns
push
jae
mov
ret
push
adc
stc
xor
adc
jg
scas
mov
cmp
xor
cltd
popa
and
mov
aas
add
jne
call
xchg
cmpb
jb
lea
sahf
push
pusha
addr16
mov
mov
jp
pop
xchg
movsb
inc
or
mov
dec
push
lcall
les
sub
fdivs
mov
mov
lds
mov
mov
dec
push
mov
adc
das
js
mov
lcall
insb
mov
das
push
mov
xor
push
xlat
jmp
aaa
sub
inc
int3
xor
push
jecxz
push
jp
mov
adc
mov
push
imull
jg
ret
mov
sbb
stc
sbb
pshufw
sub
ljmp
mov
push
push
xor
pop
mov
stos
mov
inc
imul
shll
lods
pop
and
and
les
sub
jbe
pop
cmp
fistl
mov
movb
lret
pop
sub
clc
adc
mov
not
or
pushl
dec
stos
xchg
inc
pop
fucom
cli
mov
and
cli
test
inc
enter
mov
and
ficoms
or
pop
pop
push
in
imul
dec
mov
in
or
call
stos
mov
scas
into
fstl
sti
jg
and
add
stos
inc
push
sbb
aaa
fwait
mov
in
mov
mov
outsb
jecxz
inc
dec
sarl
insb
mov
in
ljmp
sbb
sbb
jo
pop
ret
out
push
cwtl
xlat
mov
pop
mov
xchg
xchg
jb
loopne
push
or
imul
add
imul
push
jp
mov
cmc
decb
mov
sbb
push
add
pop
and
sti
cmp
gs
in
xchg
pusha
int3
or
and
jmp
lods
mov
shlb
sub
hlt
cmpl
jle
xchg
lcall
jae
mov
stos
icebp
pusha
pop
lcall
mov
mov
mov
push
mov
cmp
adc
adc
mov
inc
dec
out
fs
js
pop
test
mov
or
push
pop
adc
push
fiadds
mov
mov
fs
pop
pushf
andb
jg
int3
pop
icebp
dec
fwait
sbb
and
sbbl
js
mov
std
push
pop
jbe
mov
fbstp
mov
adc
ljmp
fisttps
lock
pop
xor
xlat
lahf
pop
or
leave
cmc
data16
push
leave
sbb
das
add
xor
adc
loope
je
pop
pushf
mov
adc
and
aam
ss
inc
and
scas
jmp
inc
mov
fadd
or
xlat
dec
fwait
add
xchg
in
add
movsl
mov
rolb
adc
mov
push
jp
mov
mov
sbb
sub
inc
mov
push
les
add
mov
repnz
adc
inc
mov
and
mov
adc
jle
jnp
and
jne
ret
aad
push
in
inc
lahf
mov
sahf
mov
jp
push
pop
insb
dec
cmp
sub
push
scas
or
fdivp
ret
inc
test
addb
mov
cli
push
mov
mov
jbe
and
or
or
fcomip
jo
lock
movl
add
add
sub
daa
test
fmull
into
out
sub
xor
xchg
pusha
jae
fdiv
xor
xor
jb
xor
or
lea
xchg
idivl
mov
leave
es
dec
test
inc
add
jecxz
mov
inc
insl
cld
mov
hlt
add
loopne
rorb
mov
xor
loopne
pop
jns
inc
imul
clc
inc
ds
out
mov
inc
std
add
rolb
loopne
add
inc
ss
js
call
in
pop
mov
nop
int3
or
data16
arpl
fsubrp
adc
mov
cltd
clc
test
push
test
pop
jbe
jns
cwtl
mov
in
inc
ss
aas
add
xchg
test
ds
loope
icebp
sbb
pop
shll
push
mov
mov
out
movsb
cmc
das
mov
jle
push
xchg
dec
inc
sbb
lret
sub
pop
subl
jne
cwtl
jo
or
inc
xchg
shrb
fisttps
jge
mov
sub
stos
js
push
lock
imulb
jp
inc
call
ret
jp
or
push
mov
or
popf
inc
mov
rolb
sahf
lock
sub
adc
push
rcl
pop
lods
push
in
cmp
xor
mov
jmp
popf
mov
and
and
inc
loopne
insl
flds
adc
out
sub
cli
mov
data16
sbb
pop
out
lock
test
sti
add
cwtl
lcall
mov
icebp
jnp
stos
and
xchg
mov
dec
lock
jl
and
push
jbe
sub
in
sub
dec
xchg
mov
or
test
pop
add
into
or
push
push
loopne
or
lret
pop
cmc
mov
cmp
jle
adc
jo
fistps
fwait
sbb
push
adc
into
orl
pop
out
inc
and
lods
in
sbb
roll
enter
add
inc
xlat
xchg
and
rorl
aas
das
add
adc
sbb
call
cli
cmpsb
mov
outsl
ja
mov
fcomi
pop
lret
jae
in
lahf
inc
outsl
mov
sahf
mov
sbb
sarb
jle
imulb
pop
cs
pusha
or
je
lock
in
jbe
push
push
push
or
cld
sub
pusha
loop
lods
mov
sahf
mov
roll
in
fcoml
loopne
movsl
mov
sbb
push
sbb
cld
add
mov
subb
outsb
or
inc
pop
add
ret
push
out
xchg
adc
lock
jg
adc
mov
sbb
test
sbbb
inc
cwtl
mov
stos
test
push
xor
lret
or
xlat
pop
lret
out
mov
jl
add
call
inc
out
cmp
mov
push
mov
loop
cmpsb
or
sbb
xor
add
adc
leave
sub
pop
mov
sti
clc
add
push
pop
push
and
fsubrs
aam
out
orl
pop
mov
xchg
jbe
call
icebp
jnp
jge
inc
jb
lret
cwtl
vmovaps
sbb
ficoml
stos
aam
aaa
stos
add
cwtl
sub
mov
add
push
jp
push
jp
mov
mov
sub
jb
fstps
mov
ret
mov
fisubrl
jo
mov
pop
mov
das
sarb
pop
rorb
pop
fbld
adc
add
or
es
insb
push
mov
mov
les
push
inc
mov
and
push
or
lret
mov
in
fldt
mov
roll
adc
add
or
jmp
xchg
xor
out
aam
jns
pop
adc
hlt
jmp
sahf
xchg
xchg
test
loopne
jno
addr16
lret
jp
pop
cmc
loope
cld
dec
sbb
push
xor
loope
cvtps2pi
xchg
test
xor
xor
xor
push
adc
aas
int
mov
subb
inc
push
mov
bound
push
push
sarl
loopne
int
lods
mov
add
scas
xchg
jle
aad
test
pop
std
add
repnz
xchg
add
cmp
fsubrs
xor
pop
pushf
sub
icebp
loopne
sbb
cmp
xchg
mov
js
in
jo
fildl
push
dec
xchg
add
adc
push
shrb
dec
lods
sbb
jo
repnz
sub
inc
sbbl
ret
mov
aad
mov
clc
cltd
inc
lods
lret
add
pop
js
mov
sub
cs
roll
mov
sub
sahf
insb
into
out
cltd
icebp
adc
mov
fstl
mov
es
rcr
sbb
lcall
sbb
mov
cmp
sub
push
sahf
pop
fadd
pop
mov
and
mov
adc
iret
and
dec
pop
dec
mov
adc
sub
rcrb
es
outsb
or
xor
ret
dec
fcompl
push
inc
mov
and
jnp
cmpsb
cmp
test
dec
outsb
and
and
imul
jbe
push
xchg
pop
push
xlat
rclb
and
outsl
ss
out
filds
repz
lret
fwait
jo
lock
pop
add
test
mov
sbbb
insb
movsb
sub
int3
test
mov
lretw
dec
mov
ss
and
or
imul
scas
pusha
xchg
outsl
and
imul
rcrb
jnp
xchg
shrl
jns
jae
outsb
push
push
je
js
lods
aas
cmpl
xchg
sub
testb
mov
and
sbb
pusha
scas
add
dec
lahf
cmc
repz
lock
push
out
out
std
add
test
bnd
testl
dec
popa
pop
adc
add
fsubr
and
cmp
sub
insl
mov
jl
jg
mov
cmpsb
push
or
fadds
and
ljmp
sub
repz
add
pusha
add
xor
outsb
adc
lods
cli
jge
lods
mov
or
sub
mov
mov
out
test
rcll
daa
shlb
je
loope
mov
pop
popf
inc
shl
out
mov
cld
pop
insl
aas
movsb
add
fidivs
imul
jmp
fcomp
push
stos
or
add
inc
xor
jle
test
mov
clc
or
addb
mul
pop
les
ja
or
xor
test
loopne
sub
add
test
nop
pop
jl
test
cld
sar
cmp
gs
loop
mul
pop
cltd
rcll
jge
daa
jmp
adc
lds
mov
push
dec
test
mov
jbe
cltd
inc
daa
jne
notb
sahf
push
mov
jnp
inc
push
sub
out
inc
out
jmp
or
mov
sub
mov
in
push
mov
lods
push
or
sub
jecxz
stos
jl
pop
test
mov
add
lcall
lods
cs
or
cmp
ss
mov
sbb
add
push
sub
sub
mov
sarl
insl
push
xor
cmp
mov
mov
mov
out
pop
sub
cmp
mov
cmp
imul
popf
cmp
pop
pusha
mov
inc
or
pop
push
mov
stos
push
mov
or
add
inc
push
rcrl
loop
ret
ds
pop
mov
or
out
loopne
push
jge
inc
push
ds
mov
ds
xchg
or
pop
lods
pusha
cmpb
add
fs
mov
imul
pushf
iret
sbb
push
pop
xor
sub
cmp
xor
jns
loope
shrl
xchg
or
mov
faddl
aam
loopne
daa
std
pusha
sub
hlt
push
add
push
loop
loop
cli
or
push
test
and
mov
in
in
push
mov
fdivl
push
sbb
pop
or
xor
test
xlat
lret
sub
jns
or
push
mov
addr16
push
push
push
push
xchg
dec
sub
sbb
stos
mov
adc
jp
sahf
push
mov
fisubrs
aam
sbb
pop
jle
inc
pusha
push
cs
lcall
ljmp
xchg
jnp
add
cmp
jnp
sahf
mov
sbb
push
in
push
add
jbe
mov
gs
pop
mov
addb
push
sbb
jge
adc
hlt
dec
add
adc
aaa
cld
jg
sbb
inc
pop
idivl
xorb
sbbl
int
or
jno
pop
and
cmp
jnp
imull
cli
mov
jae
aam
add
rcrb
push
insl
pop
std
popa
mov
jnp
inc
into
sub
in
pop
inc
das
hlt
out
jecxz
sbbb
into
sub
daa
sarl
adc
imul
sub
mov
mov
dec
sti
cmp
mov
cmc
pop
ss
rorl
push
les
in
inc
push
dec
push
movsl
insb
push
pusha
jno
in
and
in
push
push
or
xchg
aad
lcall
mov
sub
adc
mov
push
cmpsb
cmp
pushf
xchg
cwtl
xor
xchg
incb
lret
push
sbb
pop
sub
adc
lea
popl
and
daa
or
aas
pop
hlt
testl
test
mov
sbb
out
jbe
lock
mov
pop
enter
call
test
hlt
clc
and
aam
adc
adc
lods
cmp
sti
leave
shl
xor
test
cmp
mov
out
loopne
inc
ret
xor
sbb
insb
add
add
mov
jle
inc
mov
test
jp
push
and
jno
repnz
xchg
and
and
sbb
pop
outsb
inc
xchg
add
sbb
mov
dec
mov
mov
dec
cs
mov
mov
es
push
insl
cli
fadds
adc
cmc
add
jo
xlat
cmp
push
xchg
cmp
movsb
int
sbb
jae
pusha
xor
cmpsl
out
icebp
pop
cli
push
jne
mov
pusha
or
inc
rolb
pop
repz
inc
addr16
orb
push
in
pop
call
xor
adc
dec
mov
pop
daa
mov
call
adc
xchg
out
pop
pop
lods
and
mov
mov
cld
rclb
push
push
mov
pushf
stos
ja
add
mov
pusha
inc
lcall
clc
jmp
sbb
aam
sbb
andb
or
mov
push
sbb
pop
jle
mov
jge
or
mov
and
hlt
xor
aaa
and
jmp
mov
ja
mov
add
cmp
lds
jo
scas
push
push
stos
aam
outsl
mov
push
adc
pop
dec
push
jle
push
mov
xchg
xchg
sbb
neg
outsl
add
shlb
adc
sbb
js
add
seto
inc
stc
fisubrs
or
sbb
sarb
and
cmp
fsub
clc
dec
idiv
mov
test
adc
mov
sub
outsb
sub
fbld
or
clc
and
addr16
mov
sbb
je
jo
subb
ljmp
sbb
test
push
mov
orb
fadds
and
icebp
aaa
gs
imul
test
lahf
cmp
inc
in
cwtl
jbe
cmp
clc
jo
das
sbb
fists
jl
lods
or
orl
xchg
jo
add
and
ljmp
in
add
aam
push
or
loope
inc
clc
daa
mov
adc
add
rorb
mov
xor
imul
pusha
xchg
js
mov
push
cmp
lcall
adcl
and
xor
jno
repz
jg
into
cmp
pop
add
inc
movsl
out
pop
add
mov
int3
add
jp
push
pop
popf
add
iret
iret
rcll
mov
stos
rcll
movsl
sarb
ret
outsl
sbb
sbb
js
cs
imul
push
into
add
sub
jp
and
push
js
aaa
mov
adcb
push
lods
mov
and
push
mov
shll
cmp
adc
pusha
mov
sub
call
fisubs
in
sbb
add
mov
clc
xchg
jle
mov
fs
or
add
push
mov
cmpb
inc
pop
xchg
dec
lret
dec
push
enter
adc
stos
mov
shlb
mov
pop
add
loopne
inc
push
dec
jp
add
xor
and
or
filds
add
out
cli
cmpsb
movsb
lods
xchg
cli
and
ret
bnd
rolb
sub
pop
mov
bnd
push
add
or
sbb
or
rorb
adc
stos
sahf
jne
sbb
into
in
adc
shll
dec
movsb
icebp
fimull
das
add
pushf
insl
fcompl
xor
xor
cmpsb
jp
aam
hlt
dec
out
fnstsw
mov
mov
jmp
sahf
pop
add
add
scas
in
jg
ret
scas
lock
push
jno
imul
mov
fwait
scas
mov
mov
cld
xchg
add
pop
int
test
ret
aam
prefetch
or
scas
aas
mov
jo
add
lods
dec
mov
cmp
aad
mov
std
mov
loop
call
mov
das
ss
fcom
mov
xchg
adc
pop
or
adc
push
add
fwait
xor
pop
push
dec
iret
add
ret
popa
in
jle
cmp
push
adc
jecxz
into
or
xchg
call
cmpsl
inc
enter
fmull
roll
movsb
and
or
jp
call
mov
call
push
cli
fldenv
loope
inc
sub
test
enter
and
jae
push
xchg
jecxz
outsl
sub
test
cwtl
test
movsl
jl
lods
std
inc
cli
fdivr
outsb
es
fiadds
mov
jbe
mov
cli
adc
fdivl
pop
pop
xchg
mull
clc
shlb
jl
addr16
xor
fsub
inc
mov
icebp
lock
ret
sarb
add
xor
add
or
out
clc
lods
in
add
fisubs
mov
arpl
fldenv
loop
lods
or
hlt
inc
fsubrl
mov
ret
push
lcall
jmp
mov
sbb
push
mov
pop
or
xchg
lret
out
xor
mov
dec
inc
fsubrl
aam
add
inc
das
push
jg
mov
push
dec
ret
or
push
mov
xor
stos
add
ljmp
imul
out
adc
mov
adc
lds
sub
xchg
out
cli
mov
test
les
lods
pop
cld
and
mov
adc
out
sahf
xchg
jg
cmc
dec
push
popf
pusha
push
push
xor
shrl
adcl
js
inc
and
gs
jg
add
cmp
movsb
pop
pop
cmp
xchg
out
push
movsb
int3
add
sub
fists
lret
adc
mov
push
pushf
sub
jl
xorb
ficoms
imulb
or
das
pushf
nop
xor
movsl
jmp
cli
loope
adc
add
and
adc
push
ljmp
push
clc
push
xor
push
and
flds
ljmp
shl
out
xchg
ret
aas
or
cld
pop
les
lods
push
mov
xchg
pop
inc
aas
shll
aas
lea
jae
dec
jl
les
sub
adc
push
push
or
mov
orl
loopne
clc
xchg
pusha
jl
sarb
loopne
jne
sub
sarl
and
ss
push
daa
xchg
push
dec
int3
sbb
cltd
mov
cld
adc
adc
push
int3
mov
inc
mov
shll
push
test
add
sub
or
insl
sub
outsb
add
adc
sbb
gs
incl
mov
cs
sub
cmp
loop
jmp
xchg
loopne
ljmp
fisubs
ljmp
sahf
jle
lret
mov
mov
push
stc
cli
pushf
push
sub
and
and
mov
pop
fucomip
and
lods
push
and
fadds
cmc
lret
ret
out
jno
dec
pop
pop
sub
adc
sbb
or
jne
add
lcall
cmp
dec
clc
cmpsl
xor
cs
push
sbb
pushf
or
in
imul
ljmp
repz
aam
test
add
sbb
in
bound
jg
inc
mov
lcall
sarl
out
jle
fsubr
sbb
jae
cmp
leave
add
in
push
sbb
xchg
aaa
pop
lods
or
lea
pop
or
fldenv
or
mov
clc
into
test
loopne
cld
fistps
cmp
inc
push
jmp
pop
jbe
inc
mov
aam
sbb
pop
cmp
jg
pop
dec
add
add
cmp
movsb
push
fwait
xchg
mov
xor
mov
pusha
fadds
adc
cmp
push
in
in
mov
mov
sub
or
out
sbb
fnstcw
std
add
inc
aad
xor
xchg
xchg
mov
in
rorb
js
pop
mov
fistps
fldl
mov
add
cwtl
jl
repnz
dec
fs
dec
iret
push
out
lea
mov
out
mov
sbb
sahf
femms
xor
jmp
jnp
and
sbb
test
js
shll
push
jp
outsl
mov
sahf
nop
jb
sbb
mov
push
pop
add
mov
push
mov
lods
cmpsb
mov
orb
popa
loop
cs
rcrb
add
adc
lcall
dec
int
in
lea
jae
ret
je
dec
mov
sub
sbb
pop
loope
aad
cmp
out
mov
xor
adcb
push
repnz
inc
nop
mov
pusha
push
ret
sub
addb
lret
std
inc
or
push
out
or
cmpl
mov
clc
lods
xlat
inc
push
xchg
sbb
dec
and
adc
cmpsb
push
mov
mov
das
xor
in
and
xor
pop
jno
fistps
add
insb
mov
adc
pusha
and
jns
jecxz
out
subl
or
mov
pop
mov
fidivrl
nop
mov
xlat
xchg
push
pop
pushf
imul
lahf
cmpsl
aas
cmpsb
add
dec
jp
mov
or
adc
lahf
mov
ja
shlb
test
mov
fisubs
lods
jge
jge
jne
inc
jecxz
subb
pop
jge
add
dec
cmp
movsb
incb
and
sbb
lret
pop
bswap
mov
mov
sahf
and
and
pop
or
jb
nop
insb
add
add
dec
cmc
xchg
xor
cld
push
push
jne
jle
dec
cwtl
lcall
push
dec
xlat
nop
push
popa
adcb
stos
test
call
lds
inc
stos
add
clc
lea
mov
push
sbb
imul
jle
negl
arpl
or
loop
inc
hlt
into
stos
mov
js
out
push
dec
mov
ds
sbb
and
sbb
adc
das
sub
test
and
cmpsl
mulb
jo
ret
mov
fwait
dec
int3
andl
not
aad
enter
sub
ss
pop
stos
jbe
scas
inc
clc
pop
push
or
mov
repz
inc
pop
and
and
jle
sbb
int3
push
hlt
dec
inc
pop
inc
rorl
sub
aam
fsubrl
lods
add
mov
add
mov
mov
jmp
test
aam
sbb
test
mov
decb
jbe
sbb
ljmp
out
mov
ret
testb
pushw
lods
aam
dec
mov
or
pop
stc
jl
sbb
add
mov
inc
push
loop
or
aam
fisttpl
popf
push
mov
repnz
cmp
js
cmp
icebp
inc
jl
stos
imul
loop
jbe
insl
push
dec
dec
lret
inc
mov
test
sub
aas
cli
pop
orb
cmp
scas
mov
jecxz
orb
stos
and
outsb
jle
mov
fists
mov
jg
out
fadds
sarb
sbb
jecxz
out
int
pop
outsb
jle
in
mov
jecxz
bound
ss
adc
filds
loopne
jp
movsb
or
test
pop
rclb
fs
dec
out
push
test
rolb
arpl
hlt
inc
lcall
xchg
and
sbb
insl
rcl
arpl
in
cmp
sub
mov
push
shr
data16
das
jo
out
notl
fistl
fs
jmp
mov
in
inc
inc
jns
mov
add
xor
enter
xor
lock
lret
sub
bound
pcmpgtd
leave
xor
xor
mov
fcmovnbe
out
mov
pop
mov
xor
rcrl
mov
das
sarb
cli
pop
jmp
insb
jp
repnz
adc
jo
scas
imul
xchg
mov
mov
lahf
fwait
imul
cmp
mov
stos
pop
pop
insb
mov
inc
pop
faddp
cmp
shll
pop
int
out
pop
mov
outsl
clc
inc
mov
add
call
shrl
imul
aas
imul
ret
fisubs
mov
push
jge
push
dec
dec
cmp
and
add
out
sbb
dec
sbb
push
jl
pop
sbb
pop
loope
pop
add
lock
push
jl
jno
loop
out
jg
in
out
sbb
push
rsm
addb
xor
xor
aad
test
aaa
xchg
xchg
nop
add
loope
loope
jle
mov
pop
or
hlt
or
mov
inc
lret
push
sbb
jge
lds
lcall
cwtl
adc
cwtl
mov
bound
aaa
sub
add
inc
mov
xor
xchg
mov
jb
adcl
lods
add
test
xor
dec
add
ljmp
push
orb
cmp
jbe
jle
repnz
xchg
sahf
sub
insb
xor
xchg
lock
cmp
mov
movsl
jmp
mov
or
lahf
mov
iret
mov
mov
xchg
cmp
out
xchg
jp
push
in
jmp
loopne
or
jp
cmpsb
push
in
mov
fs
dec
xor
shll
jo
inc
mov
mov
icebp
xor
jl
out
cmp
mov
shlb
ja
xchg
or
insb
mov
imul
mov
cmpsb
sub
adc
in
xor
lds
sarb
fs
lods
sub
jbe
mov
mov
lcall
dec
out
loopne
push
jle
dec
rorl
lds
mov
popa
mov
fisubs
push
mov
stos
push
ja
mov
mov
dec
cmpsl
cmp
and
push
xor
add
lock
or
je
mov
ret
cmp
mov
mov
sub
int
pusha
xor
inc
sbb
int
movsl
sub
gs
sub
fisttpll
dec
test
mov
test
add
pop
mov
test
jg
sti
pop
dec
cmp
adc
pop
fstl
hlt
sbb
push
hlt
dec
cmp
es
cmp
scas
jbe
cs
scas
pop
mov
popf
in
pop
adc
sub
push
inc
mov
inc
shlb
dec
loopne
cwtl
and
scas
mov
stc
loope
cltd
test
out
mov
xchg
pop
inc
sbb
mov
xor
lods
jp
enter
rorb
das
jb
stos
es
lods
sub
xlat
mov
or
pop
dec
inc
fisubrl
stc
mov
inc
sub
inc
mov
push
xor
push
ljmp
pop
les
fmull
call
movsb
mov
arpl
test
fwait
call
xor
adc
add
sub
mov
test
scas
xchg
ss
pop
and
cmp
in
icebp
add
jne
sub
mov
sbb
clc
lods
scas
lret
mov
pop
aam
shrl
or
popa
ja
lock
lcall
loop
pop
pushf
pop
insb
out
jmp
mov
daa
mov
fadd
push
mov
mov
repz
pop
jmp
cmp
lret
adc
cmp
jle
pusha
xchg
and
insb
sbb
xor
shrl
inc
jbe
loope
dec
icebp
xchg
scas
lcall
inc
pop
in
clc
xchg
rcr
pop
ja
mov
push
pop
mov
and
shlb
xor
stc
shlw
jecxz
je
sbb
cmp
mov
inc
ss
mov
adc
cmp
cmpsb
jle
push
mov
fs
or
sar
add
shll
into
sbb
jne
inc
ficomps
es
pop
sub
push
in
jle
pop
mov
sub
push
sbb
jne
hlt
xor
xchg
inc
add
shlb
mov
add
or
shlb
out
ret
rol
xchg
and
or
out
cmpb
out
ss
mov
inc
mov
mov
movsb
lock
sub
daa
stos
xchg
imul
mov
dec
or
fs
mov
jecxz
call
mov
int
xchg
wbinvd
pop
fisttpl
push
or
stos
andb
dec
xor
mov
pusha
add
rol
jecxz
lods
xchg
insl
fwait
mov
or
jl
inc
jno
adc
clc
jbe
subb
sbb
cli
in
adc
outsb
insb
ret
jl
xchg
mov
inc
rclb
push
cmp
push
adc
movl
or
xor
inc
xorb
push
inc
fadd
stc
repnz
adc
mov
in
pushf
repnz
psllq
imul
mov
sarb
dec
call
stc
aad
aas
and
nop
fidivl
mov
cltd
stc
inc
jnp
mov
decl
mov
mov
pop
cmp
pusha
decb
hlt
mov
aad
cltd
sbbb
add
andb
lods
xor
fisubl
push
push
push
pop
xor
fbld
sbb
pusha
mov
sub
sbb
les
pop
sub
push
push
lret
subl
lods
outsl
pushf
repnz
and
ret
inc
inc
icebp
xor
clc
jge
mov
jl
stos
int
push
add
inc
sub
sbb
cs
pop
lahf
jb
testb
xor
outsl
jno
mov
adc
dec
xor
dec
sbb
ljmp
mov
mov
scas
popf
jecxz
adc
sub
repnz
push
and
push
mov
add
mov
pop
xor
push
inc
js
out
enter
and
dec
movsb
xchg
popa
push
fcoml
mov
jo
dec
hlt
adc
es
test
jp
mov
dec
mov
hlt
or
insl
sbb
cmpsb
fisubrs
insb
mov
rorb
movsb
lods
xchg
mov
stos
das
pusha
pop
cld
jg
pusha
cwtl
aam
and
add
add
push
sbbb
mov
imul
mov
sbbb
in
shlb
sub
add
into
or
leave
lahf
push
idiv
push
push
and
inc
sbb
iret
or
sbbb
lahf
dec
or
sbb
cmc
loop
inc
bound
out
push
xorb
xchg
lea
shlb
out
ljmp
push
mov
sbb
es
fninit
dec
in
and
sbb
fwait
and
popa
sub
imul
xorl
imul
lods
xorb
incb
arpl
cmpsl
add
xor
out
mov
pop
fwait
and
adc
orb
mov
mov
jl
cmp
mov
push
add
test
imul
out
or
mov
and
mov
sub
ljmp
roll
pop
shrb
mov
and
xchg
pusha
faddl
aaa
jecxz
pop
inc
pushf
xor
bound
lcall
cmp
cmpsl
popf
movb
in
inc
inc
cmp
dec
ds
scas
movsl
lods
mov
repz
cmp
push
push
roll
inc
jb
push
js
jbe
daa
mov
pop
inc
sbb
iret
mov
mov
mov
and
add
popa
cs
loope
fnstsw
cli
pop
mov
lea
ret
fdiv
hlt
mov
aaa
dec
lock
test
mov
sub
mov
cli
ljmp
rorl
cmp
aaa
cmp
in
roll
adc
fmuls
fstpt
orb
xchg
adc
js
jl
jnp
pop
cld
hlt
jne
sub
test
or
inc
cli
aaa
ret
outsb
lock
pop
rolb
jne
jo
pop
cmpsl
xorl
add
mov
mov
mov
cmc
loopne
push
adc
loopne
pop
in
pop
pushf
imul
lret
jp
aad
lea
addr16
cmp
and
ljmp
jae
cmp
push
sahf
iret
rcrb
mov
out
adc
imul
fwait
push
pop
scas
lds
jo
fmull
in
xchg
mov
in
das
jmp
out
rolb
in
xor
hlt
mov
call
decl
adc
inc
xchg
out
inc
jl
jbe
xchg
cmpl
pop
lret
sbb
scas
dec
xor
mov
inc
fisttpll
xchg
loopne
mov
jecxz
jmp
fiaddl
inc
imull
or
add
sub
inc
aaa
js
mov
aad
cld
js
push
cmpsl
and
mov
insb
pop
push
inc
mov
sbb
fists
fmull
rcl
jecxz
jecxz
fadds
shlb
jg
inc
sbb
or
loop
cs
insl
mov
push
sti
insb
mov
or
int
push
mov
js
lahf
push
leave
cmp
sbb
es
inc
ret
in
jge
js
dec
xor
imulb
scas
sbb
sbb
adc
mov
outsb
loop
push
fidivrs
add
cmp
mov
dec
mov
je
scas
inc
ljmp
lea
js
adc
add
dec
aam
daa
fdiv
xchg
test
outsb
jo
push
pop
loope
orl
pop
inc
ljmp
enter
push
xlat
stc
xorb
add
sahf
shrb
test
mov
lcall
fsubr
push
bound
pop
push
shrl
xchg
cli
insl
lahf
sub
aad
or
push
push
pop
lods
pop
mov
sub
lock
movsb
xlat
mov
xchg
lret
fcomp
sub
sbb
sub
mov
out
mov
out
decb
cmp
addr16
push
enter
lods
aaa
add
pop
push
sahf
sti
mov
mov
inc
lock
and
add
push
mov
sub
jp
lcall
xor
dec
mov
pop
mov
and
jno
addl
mov
fucomp
test
dec
inc
ds
stos
jnp
cli
pushf
pop
mov
das
pop
movsl
mov
or
in
iret
push
enter
ds
in
xlat
mov
adc
stos
jecxz
loopne
pop
jmp
push
pop
mov
popa
and
dec
sbb
or
xor
push
cmc
fs
sbb
subl
sti
mov
jle
mov
fs
mov
aam
xchg
mov
mov
dec
je
mov
outsb
fs
les
push
mov
loopne
sahf
ds
push
pusha
lods
mov
jle
xchg
mov
mov
mov
inc
into
fs
clc
das
add
sbb
pop
sub
xor
xchg
das
jmp
push
jle
dec
andl
hlt
push
repnz
ljmp
pop
push
jne
ljmp
sbb
and
mov
mov
ja
outsl
rclb
adc
or
add
filds
dec
out
fistpll
decl
push
adc
test
lock
pop
aam
pusha
aam
das
sbb
sub
cmp
cmpl
cmp
xor
and
ficompl
mov
inc
pop
in
dec
mov
int
add
inc
inc
dec
cmpsb
lcall
lret
mov
pop
lock
lret
jo
ds
mov
int3
cmc
mov
clc
hlt
sbb
inc
negb
xor
mov
cmc
jle
daa
dec
hlt
bound
push
cmp
xchg
pop
lea
test
xchg
ljmp
jle
std
dec
jecxz
xchg
hlt
ret
pop
scas
sbb
xchg
adc
add
ret
inc
mov
jg
pushl
fbstp
cmp
mov
test
fiaddl
test
mov
mov
sarl
aam
movsb
add
mov
mov
and
aas
or
adc
test
xchg
scas
rol
cmpsb
jno
cli
popf
xchg
xchg
add
stc
push
out
push
mov
xor
cmp
jmp
repnz
ds
leave
repz
sbb
leave
cmp
movb
xchg
cmp
insb
out
fdivrl
pop
cmp
mov
arpl
jbe
lock
fs
leave
leave
lcall
cmp
rol
jmp
xchg
sbb
sbb
fildl
fiadds
fcoml
in
sbb
xor
sub
mov
mov
sti
pop
jns
cmp
xchg
jmp
out
mov
mov
dec
lea
into
les
pop
mov
mov
push
mov
mov
outsb
sub
xor
dec
test
stos
lock
dec
addl
cli
inc
ret
cmpsb
call
and
mov
push
pop
stos
gs
mov
scas
sub
sbb
cwtl
sbb
adc
pop
xchg
bnd
mov
add
xor
or
stos
push
aas
in
mov
in
mov
dec
repnz
and
pushf
cmp
pop
leave
dec
jl
shlb
cmp
les
mov
fmuls
cmp
and
jp
mov
xchg
lock
push
xor
jno
dec
cmpsb
lock
and
movsb
cmp
mov
and
mov
dec
callw
adc
sub
inc
fidivrl
or
hlt
mov
lods
sub
adc
out
and
out
loop
in
rcrb
or
incl
mov
mov
rolb
gs
add
js
or
jns
push
push
jg
jne
jmp
roll
adc
add
clc
adc
test
out
jg
mov
push
adc
lcall
mov
cmpsl
js
scas
cld
lods
push
fldt
add
lahf
shlb
cmp
lfs
jle,pn
add
or
push
movsl
movsl
xchg
dec
pop
pop
mov
mov
fwait
cmp
mov
jo
fptan
mov
int3
mov
rcl
push
js
add
or
loop
push
arpl
push
mov
pop
lcallw
mov
mov
fdiv
bound
mov
jge
xchg
pop
add
scas
icebp
in
fdivrl
mov
sub
push
push
cmp
cmp
fdivrs
lds
insl
outsb
inc
in
mov
addr16
mov
popa
pop
push
pop
enter
cwtl
pop
das
cmc
cli
out
hlt
sbb
movsb
inc
inc
arpl
rcl
sub
pop
in
gs
insb
jno
pushl
dec
int
dec
cs
sbb
push
jbe
aad
fadd
cmp
cmpsl
jne
sbb
ljmp
and
or
lods
insb
pop
gs
stc
mov
or
leave
ds
ds
mov
inc
mov
push
mov
inc
push
mov
and
outsb
pop
hlt
add
mov
lahf
mov
push
mov
movsl
das
adc
xor
daa
test
pop
mov
cltd
test
xor
clc
add
push
roll
ja
sub
xor
hlt
push
xchg
cmp
push
js
inc
leave
mov
je
fwait
sbb
or
jle
ret
mov
mov
mov
cmp
mov
in
xchg
mov
aas
jge
mov
orl
push
xchg
dec
test
sbb
fsub
rolb
lock
inc
out
pop
inc
fisubrl
scas
aad
ret
aaa
push
jns
inc
addr16
into
pop
insl
pop
test
clc
mov
jge
fadds
call
and
stos
inc
scas
dec
jmp
int3
in
sarb
fiadds
scas
mov
out
and
push
push
sbb
popa
sub
and
std
adc
sahf
enter
dec
pop
add
stos
test
mov
sbb
jo
xor
ja
mov
mov
ljmp
das
dec
subb
orl
addl
in
push
jp
popf
push
cwtl
cmp
in
pop
in
and
rcll
in
jns
test
or
xor
cmpsb
pusha
and
inc
adcl
es
loopne
sbb
inc
pop
dec
cmpsb
fildll
notl
into
stos
rcl
mov
xor
sbb
lcall
adc
xor
or
mov
mov
push
xchg
pop
fsubs
jbe
inc
fwait
inc
scas
lss
sbb
movb
sub
cmp
pusha
fists
push
pop
sub
in
lcall
aam
pop
xchg
les
inc
inc
ljmp
out
outsl
sbb
adc
and
scas
das
pop
pop
inc
arpl
jp
sbbl
jnp
add
repnz
mov
pop
loope
push
inc
dec
add
xor
pop
in
and
inc
sub
mov
push
rcrb
or
xchg
rorb
adc
sub
pusha
add
fwait
jnp
cld
jne
sbbb
pop
jo
insl
les
adc
xchg
pop
mov
mov
xchg
insb
push
push
cmpsl
cld
int
cli
cmp
nop
cli
push
insb
inc
incl
test
enter
icebp
jo
adc
test
and
scas
aam
jae
cld
call
ss
ret
je
es
scas
xchg
repnz
sub
adc
imul
jle
and
test
pop
mov
xchg
adc
xchg
cltd
and
mov
xchg
ja
and
add
pushf
loopne
sub
loopne
and
rcr
inc
jle,pn
aaa
or
aad
es
punpckhbw
movsl
sti
out
mov
lds
int
ss
fnsave
mov
dec
fwait
add
xchg
pop
pop
mov
inc
xchg
and
out
js
mov
rolb
lcall
dec
pop
fstps
or
mov
dec
cmc
and
addb
jne
adc
xchg
cmp
lret
pop
inc
in
xor
pop
cmp
daa
out
adc
jge
or
jb
mov
out
test
into
xchg
sub
add
jnp
fwait
stos
sbb
rorl
mov
insl
ss
movsb
js
aaa
sti
test
mov
inc
into
cld
ljmp
jp
pop
cli
push
loope
cld
add
pop
xor
mov
pop
out
cmp
imul
cld
loopne
inc
push
or
add
or
enter
sub
push
push
cmpsb
dec
out
adc
jg
xor
pop
popf
std
roll
jp
adc
xchg
clc
push
cwtl
mov
popf
in
jp
inc
nop
push
mov
stos
xor
cmp
push
jp
cmp
sbb
call
mov
shrb
sbb
xchg
adc
mov
mov
sub
mov
stos
dec
ret
out
and
negl
push
jle
push
popl
push
cwtl
stc
pop
inc
rcrb
mov
loope
or
add
mov
mov
imulb
fistps
mov
add
fbld
inc
mov
jno
pop
pusha
push
shrl
outsl
cld
dec
fldcw
push
sti
jecxz
fyl2x
sarb
pushf
jle
push
test
push
push
jle
insl
insl
ljmp
test
and
repnz
and
test
mov
shlb
pop
pop
jmp
push
mov
rcll
mov
cli
scas
fistpl
int
ds
daa
xor
or
into
mov
add
dec
and
ds
clc
jbe
jo
es
inc
aaa
or
cs
addr16
jge
popf
dec
fcmovb
sbb
clc
test
add
fidivrl
push
lret
or
mov
add
jp
mov
inc
mov
in
imul
aaa
repz
ss
mov
push
pushf
hlt
or
or
fcomps
jecxz
daa
loopne
negl
add
sub
mov
inc
aas
icebp
sbb
sbb
dec
pushf
cmc
lods
cmpsl
jnp
adc
sbb
lea
mov
push
cmp
in
push
repnz
lock
rorb
push
test
subl
xchg
test
jne
or
rclb
notb
clc
sub
loope
mov
push
in
pop
mov
imul
push
or
mov
xor
add
aas
add
lea
jnp
sbb
or
rolb
xor
and
sbb
cmp
dec
or
int3
push
jno
push
ret
and
aas
je
std
ljmp
gs
inc
cltd
movsl
lahf
pop
jo
jmp
cli
xchg
push
std
xor
addr16
lds
mov
enter
push
pop
jecxz
cs
fcoms
punpcklbw
int3
adc
sub
iret
int
mov
mov
imul
fdivrl
mov
mov
cmp
sub
mov
into
mov
stos
daa
pop
dec
mov
shlb
inc
cmp
aam
push
push
xchg
dec
cmp
scas
adc
test
pop
pop
dec
pusha
mov
sub
loopne
aam
lods
xchg
fildl
addl
mov
movsl
fidivrl
hlt
lahf
repnz
loop
pusha
sub
cmp
pop
or
shl
hlt
jmp
aam
inc
out
push
xchg
daa
sub
pushf
fisttpll
lods
les
and
push
insb
lahf
or
stc
inc
cmp
pop
xchg
ret
fwait
cwtl
sub
cmp
xor
dec
add
mov
and
fs
lods
mov
push
dec
xchg
sbb
add
or
loope
or
fsub
jbe
test
or
sbb
adcb
lock
cld
cmp
bound
jle
xchg
int
bound
cmpb
mov
pop
andl
or
scas
add
mov
cmc
idivb
ss
repnz
jns
insb
push
fildll
pop
push
xchg
in
fucomp
orb
dec
mov
mov
add
stos
jmp
rorb
mov
std
dec
clc
and
out
mov
stos
adc
fistpl
fcmovnb
idiv
inc
stos
push
es
push
dec
fimull
mov
adc
std
mov
mov
cld
and
lods
or
push
inc
push
pop
fwait
jbe
mov
seta
xchg
jne
fildll
jle
add
ss
cwtl
cmpb
inc
push
es
insl
ljmp
sbb
insb
adc
ljmp
pop
int3
fwait
movsb
mov
sub
fdivl
add
adc
ret
incb
in
out
stos
cmpb
lcall
sub
sahf
pop
mov
test
add
popf
sti
mov
xor
mov
push
mov
mov
mov
outsl
pusha
dec
add
rorb
mov
test
add
lret
jmp
bound
fcoms
lds
jns
ret
push
out
ljmp
pop
xchg
testl
in
jle
fstps
movsb
inc
jo
dec
fbld
cmpsb
cmp
push
popa
push
jno
or
test
test
xor
js
ljmp
pop
add
sbb
push
jl
jecxz
dec
pop
add
rorl
inc
sbb
clc
mov
mov
pushf
mov
data16
stc
test
ds
adc
gs
jae
mov
out
sub
mov
out
xor
push
cli
cmpsb
sbb
shl
ret
mov
cwtl
push
lock
inc
pop
rorb
sbb
add
add
addr16
inc
out
mov
mov
xlat
out
pop
hlt
add
pop
cmp
sbb
test
dec
inc
inc
add
dec
adc
lahf
sbb
sub
jle
lcall
inc
movsl
in
mov
adc
sarb
mov
pusha
sub
push
sub
pop
clc
and
ret
je
inc
xor
mov
aas
jmp
sub
aam
or
sbb
or
sub
push
lods
test
mov
mov
or
jae
pop
mov
dec
out
jg
add
push
loopne
push
out
scas
addr16
loopne
inc
lods
clc
orl
je
inc
mov
jecxz
mov
lock
bound
sub
xchg
cmp
mov
sbb
cmp
xor
add
in
mov
xchg
inc
mov
outsb
push
push
inc
ret
mov
or
shll
shrl
xor
xchg
pop
xlat
popf
test
xor
lods
xchg
adc
inc
cmc
daa
das
mov
xchg
jg
and
xchg
pop
lahf
cmpsb
cs
mov
call
cmpsb
add
rclb
mov
int
arpl
adc
add
aad
je
pop
push
loop
xor
dec
xchg
out
jmp
les
es
jg
add
clc
cmp
fsubr
add
sub
xchg
dec
adc
fiaddl
lret
lods
push
lahf
mov
push
pop
pop
pop
jp
ss
dec
push
addl
pop
jge
sub
pusha
jg
mov
nop
sbb
push
dec
push
mov
nop
pop
iret
push
aam
insb
mov
xlat
scas
inc
in
js
xor
jbe
adc
negb
mov
add
push
jp
leave
jo
mov
int3
push
mov
pop
shrb
push
add
or
std
push
lock
movsl
rcll
les
mov
push
vaddpd
rcl
in
mov
or
pop
sub
mov
orl
cld
xchg
mulb
mov
jp
pop
push
sub
andb
outsl
jbe
jl
bound
scas
fldl
adc
ret
test
mov
fs
xor
xchg
cvtps2pi
call
add
mov
dec
in
mov
cltd
cs
fldl
cmpsl
popf
xchg
sbb
rcrb
xchg
adc
hlt
push
mov
ljmp
push
mov
popl
adc
dec
adc
fdivrp
loop
pop
fs
shrb
pop
cmc
pushf
xlat
jmp
fstpt
call
dec
daa
popa
loop
xchg
and
jnp
popa
xor
popf
cmp
adc
les
lcall
add
mov
inc
ret
hlt
ret
inc
sub
jp
loopne
or
adc
jecxz
jl
bound
push
test
pop
fs
pusha
inc
push
push
fimuls
or
outsl
fs
xor
dec
adc
adc
jle
and
jb
push
dec
ret
out
ficompl
repz
dec
or
mov
add
xor
inc
fs
and
leave
pusha
jmp
jp
lock
xor
xor
xlat
rcrl
fimuls
push
lock
inc
inc
sbb
fcoml
pop
jge
add
xchg
mov
repnz
xchg
lea
movsl
xor
cmpsl
dec
minps
out
cmp
mov
int3
push
int3
pop
lds
adc
adc
sbb
addr16
pusha
das
orb
mov
mov
cmpsb
inc
clc
xchg
gs
mov
jmp
add
and
outsl
add
sbb
and
jl
dec
jno
jns
pop
test
das
push
mov
stc
repnz
sub
mov
mov
or
rolb
xchg
mov
jmp
cld
xchg
insb
int
ja
es
das
pop
cld
push
xor
add
pop
fs
js
fimuls
ss
jl
js
repz
mov
push
sbb
xchg
xor
subps
mov
cmp
popa
insl
cli
popa
sub
push
jo
and
scas
xchg
cwtl
stc
pop
sbb
inc
sti
lret
dec
ficoms
cmc
lahf
sub
fwait
jp
cs
xchg
mov
mov
aas
sbb
test
mov
loop
push
adc
std
pop
adc
gs
int
xchg
push
pop
and
test
fdivr
hlt
ret
add
push
xor
jmp
xor
hlt
pusha
dec
mov
push
or
mov
mov
jmp
mov
push
outsb
push
nop
adc
jo
cmp
xorl
or
inc
sub
xchg
popa
sbb
jo
out
popa
sbb
mov
movsb
pop
orl
test
mov
fiaddl
xor
mov
out
fcom
and
decb
movsb
nop
negl
nop
sub
popf
xorb
shlb
or
scas
loopne
xor
push
sub
cmp
pop
stos
add
sbb
mov
sbb
aam
xchg
test
cltd
outsl
clc
add
call
cld
push
dec
mov
mov
pop
int3
fdiv
mov
pusha
jbe
aaa
xor
and
add
cmp
dec
inc
stos
push
dec
push
push
push
mov
aaa
jbe
dec
scas
fsubp
popa
sub
js
aas
inc
clc
push
mov
scas
ljmp
pop
sbb
push
mov
inc
inc
out
lods
push
loopne
or
xchg
mov
icebp
dec
lahf
sbb
aaa
mov
sub
test
clc
mov
int3
xchg
das
and
insb
push
insb
shl
es
das
pop
mov
mov
mov
repnz
lods
sti
adc
popa
dec
push
cmp
push
push
popa
sarl
cmp
shlb
sbbb
pusha
loop
in
sbb
popa
sbb
test
inc
push
jo
pusha
mov
fidivs
pushf
adc
cs
jo
sti
ficompl
das
lods
cld
xchg
mov
nop
scas
ljmp
xlat
call
insl
fs
jns
lret
pop
subb
dec
inc
fsubrs
push
adc
js
sahf
adc
or
mov
aaa
or
sub
dec
clc
dec
lods
scas
push
cmc
xchg
xchg
or
and
inc
aas
orb
fwait
sbbb
sub
and
subl
adc
inc
cmp
mov
imul
mov
cs
or
loope
mov
mov
pop
int3
mov
fadds
repnz
xchg
sub
into
pop
dec
mov
testl
cltd
inc
jb
ss
dec
cmp
and
pop
xor
mov
ret
leave
or
mov
sbb
lret
loop
mov
loop
pushf
movsl
push
std
sbb
sahf
int3
testb
push
loope
andb
repnz
adc
push
xor
mov
and
test
lahf
bound
push
data16
lret
push
mov
cmpsb
mov
rol
sub
scas
nop
shr
adc
mov
scas
jae
or
xchg
xlat
cmpsb
outsl
mov
xor
popl
mov
lock
jecxz
jle
popa
mov
cmp
sub
push
arpl
inc
mov
aam
push
mov
cmpsl
jo
push
jns
mov
ret
hlt
pop
lock
cld
cmc
clc
adc
les
jecxz
orl
mov
lock
test
ljmp
sub
push
or
sbb
stos
in
je
add
xchg
lds
lock
mov
outsb
mov
lret
arpl
cmc
add
sub
clc
imul
fwait
mov
subl
inc
inc
xor
shl
and
and
mov
enter
dec
push
repnz
mov
mov
pusha
xor
fidivl
adc
imul
sub
outsl
cmc
xor
rorl
jnp
sbb
ljmp
test
mov
pusha
jg
out
fdivrp
dec
push
lods
push
sub
mov
mov
xchg
lock
repnz
das
and
push
test
and
ret
popf
xor
mov
mov
jb
dec
mov
lcall
push
mov
psadbw
fdivs
loopne
jle
or
mov
in
int
mov
adc
jo
dec
les
stos
sub
inc
rsm
or
sbb
push
push
shrb
loopne
nop
cli
shlb
and
ret
sub
leave
jmp
lret
ficoms
arpl
test
pop
xor
stos
pop
lods
adc
mov
in
call
jl
mov
imull
lock
inc
add
jmp
push
popa
outsl
aad
or
xchg
and
sub
sbb
xchg
shlb
pop
lock
inc
push
test
push
loope
enter
sub
mulb
mov
gs
cmpxchg
jo
mov
or
stos
daa
and
out
or
xchg
subl
in
pushf
sub
xchg
shrb
jbe
sbb
imulb
clc
popa
pop
push
cli
outsb
subb
sbbb
or
pop
cmpsb
imul
xchg
cmp
aas
data16
and
popa
cld
fisubrl
push
cmpsb
adcb
pop
shl
xchg
sub
jbe
outsb
xchg
sub
inc
in
mov
mov
lods
pop
push
push
jnp
in
aaa
jl
dec
out
int3
push
add
adc
inc
jmp
pand
lock
popf
in
jl
xchg
loop
movsb
and
sub
jl
inc
sti
lock
lahf
test
inc
xchg
mov
repz
mov
push
jo
int3
push
aam
adc
fstps
push
mov
or
cmp
lret
sbb
cmp
and
loope
fdivl
adcb
pop
sub
xchg
pop
movsb
adc
add
dec
jne
lods
sub
pop
adc
leave
test
inc
insl
push
mov
xchg
inc
mov
inc
inc
cld
adc
testl
push
sbb
aam
sub
das
adc
pusha
sarl
or
hlt
dec
sahf
data16
and
cmp
jns
lock
xchg
push
sbb
jbe
mov
adc
sbb
sbbb
jne
add
rclb
into
repnz
iret
mov
or
loope
adc
imul
sbb
fnstsw
pop
or
add
dec
outsb
cmp
cli
ds
cmpsl
mov
sub
in
jmp
stc
ljmp
sub
iret
jo
aad
ret
xchg
int
cmpsb
aaa
jg
rcr
mov
dec
adc
dec
push
push
loopne
rcrb
aad
mov
js
dec
mov
ds
pop
adc
je
out
fisttps
dec
ljmp
dec
pusha
test
shll
push
jg
xchg
lods
jb
sbb
enter
addl
in
add
out
in
ds
mov
repnz
mov
mov
mov
cmpb
in
mov
mov
hlt
jbe
inc
mov
jne
pop
sbb
jl
ss
shll
sub
jne
xor
cld
mov
pop
adc
fisubrl
add
and
xor
outsb
bswap
xor
mov
imulb
or
fsubrs
xchg
sub
inc
jge
lock
sbb
sbb
inc
es
cmp
and
orb
and
rcr
ljmp
mov
mov
int
add
sub
shlb
mov
sbb
mov
movsb
int
sbb
cltd
fists
cmova
add
fs
dec
rcl
dec
fisttpl
add
fwait
sbb
js
clc
mov
ret
rclb
scas
mov
ds
mov
xor
inc
pushf
ja
or
aad
mov
sub
xorb
lea
push
andb
mov
and
or
scas
pop
add
sub
xor
xor
xlat
hlt
repnz
icebp
divl
insb
ret
out
adc
mov
jo
mov
dec
xlat
mov
lret
shll
les
mov
outsl
sub
aam
mov
incb
insl
enter
pop
imul
or
cmp
ljmp
pop
adc
and
mov
push
mov
mul
xchg
or
in
js
and
es
cmpsb
mov
inc
ficomps
sbb
scas
ret
int3
cmpsb
pushf
sbb
fs
shlb
sub
repz
adc
inc
leave
pop
cmc
pop
cld
into
das
mov
or
adcb
inc
or
fadds
mov
sahf
inc
xor
push
adc
stc
js
mov
mov
subb
add
or
xchg
test
push
aad
pushf
pop
inc
daa
shlb
jl
stos
imul
es
or
cs
mov
inc
push
or
mov
enter
xor
loop
insl
in
or
mov
pusha
fstps
dec
int
cs
imul
mov
mov
mov
jmp
in
scas
test
pushf
dec
or
fbld
daa
outsl
in
inc
rorb
sbb
xor
add
mov
pop
lods
xchg
add
les
cs
scas
out
cmp
subb
clc
jmp
stc
xor
jg
arpl
sub
addr16
aaa
cs
or
loopne
clc
adc
and
inc
std
test
xor
insl
add
adc
test
push
fistpl
mov
jne
fistl
pop
inc
dec
insl
xor
mov
sahf
add
push
push
pop
sbb
inc
mov
pop
popf
mov
aam
dec
xor
jge
lods
mov
sbb
orl
and
fcoml
mov
sbb
je
xlat
in
add
sahf
ljmp
sbb
lock
sub
in
out
aam
addr16
lahf
sbb
inc
mov
mov
cs
add
dec
jmp
mov
mov
sub
jno,pt
sbb
lret
outsb
xchg
or
cmp
shlb
cmpsb
dec
mov
push
jno
ja
sub
or
push
mov
jbe
pushf
sbb
outsl
out
daa
fldt
int3
aam
mov
sbbl
adc
jmp
xchg
mov
push
xor
push
cmp
outsb
lcall
sbb
xchg
cmc
dec
jmp
or
movsl
mulb
mov
cs
adc
imul
cli
in
aam
clc
cli
aaa
dec
test
fwait
movd
int3
mov
les
dec
jle
cmpsl
push
adc
adc
clc
cs
outsl
ss
pop
dec
or
cwtl
pop
push
pop
jp
pop
cmp
xor
push
subl
outsb
mov
and
repz
mov
cmc
shlb
or
movsl
sub
icebp
push
lret
mov
loopne
xor
std
inc
mov
pop
lret
ds
inc
xchg
sub
pop
add
mov
cli
xchg
mov
pop
in
test
ds
ja
inc
push
das
xor
data16
adcb
xchg
sbbb
daa
test
jno
mov
fdivrl
inc
les
add
mov
ret
and
mov
neg
fcos
ret
imul
roll
inc
and
in
push
loopne
mov
jnp
call
divl
pop
cs
jp
ret
imul
push
movsl
outsb
jo
cmpb
pop
movsb
les
add
call
mov
mov
dec
cmp
add
jnp
push
loopne
jl
test
mov
scas
xor
and
adc
pop
movsb
add
mov
ljmp
cmp
shrb
push
cmp
xchg
sub
xor
xchg
js
loopne
test
add
inc
ljmp
les
push
push
mov
mov
ficomps
add
mov
sub
sbb
test
flds
lods
out
lcall
aad
xor
aam
nop
clc
clc
xchg
int3
ds
hlt
lock
aas
mov
or
adc
jle
xor
sub
fcomps
dec
pop
jl
jle
xorb
sub
cmp
xchg
sub
adc
pop
sub
xchg
movsb
rorl
mov
dec
inc
jb
xchg
subb
ja
add
adc
mov
add
or
clc
or
sub
xor
pop
jmp
rcll
lea
outsb
rorb
fmuls
sbb
push
loopne
hlt
subl
lcall
jl
xchg
imul
adc
call
pop
or
scas
lods
pop
sub
outsl
ret
aaa
out
mov
lds
punpcklbw
cli
cli
es
add
idivb
jbe
mov
xor
xchg
xor
loopne
clc
into
inc
adc
inc
out
sbb
and
add
fistps
out
dec
scas
pop
sbb
or
sub
add
ret
xor
cli
jne
and
outsb
adc
mov
test
xor
movsl
and
je
test
imul
mov
xorb
outsl
int3
xor
enter
mov
loope
arpl
orl
test
je
push
imul
clc
cli
mov
notb
jb
mov
add
cwtl
sub
aaa
std
push
cwtl
mov
fdivrl
sbb
jo
loopne
or
das
mov
lock
orl
sub
mov
imul
in
cmp
iret
jle
add
pop
cli
inc
outsb
push
cmpl
mov
test
std
sbb
lods
inc
pusha
pushw
cmp
pop
fimuls
and
das
jno
and
imul
sbb
or
ds
mov
push
out
inc
sti
jne
pop
out
mov
loope
faddp
mov
out
rolb
push
adc
push
add
cmp
mov
clc
ret
insb
mov
ret
sub
data16
mul
adc
jg
aam
add
std
dec
push
push
mov
sub
mov
sbb
sti
jl
inc
xchg
sbb
mov
and
addb
jle
int3
mov
flds
jp
adc
sahf
test
fcomip
or
repz
enter
jae
add
add
movsl
push
mov
sub
mov
ret
and
xchg
dec
repz
repnz
aam
push
inc
call
xor
adc
jae
imul
jecxz
cmpsb
cmp
lcall
in
push
jg
mov
leave
mov
inc
or
jb
mov
mov
mov
inc
or
and
push
add
inc
sub
int3
decl
inc
xchg
bound
push
icebp
dec
add
jb
test
add
jns
lods
sbb
call
mov
movsl
sahf
mov
mov
push
push
stos
movsl
lock
into
inc
jl
mov
rclb
je
outsb
push
sbb
pop
scas
mov
adc
cli
mov
xor
cmp
push
cmp
push
pop
jp
rcl
mov
scas
mov
pop
inc
repz
pop
fsubs
jl
jp
xor
enter
dec
js
and
xchg
inc
pop
mov
insl
or
outsl
jge
into
popa
xchg
ds
js
and
and
shlb
mov
pop
jo
add
push
aam
nop
xchg
enter
sub
mov
push
lcall
xor
or
inc
add
jecxz
stos
add
or
test
push
xor
adc
and
add
cmp
adc
fwait
xchg
and
cmp
mov
push
pop
jle
pop
les
test
pop
adc
movsb
mov
dec
les
shll
mov
cmc
inc
inc
jp
es
push
loope
and
push
in
mov
or
jge
cmpb
gs
fcmovnb
jl
mov
insl
xchg
xchg
and
leave
jae
and
and
mov
dec
fsubrl
pushf
imull
clc
dec
mov
test
loope,pt
imul
sahf
inc
pop
jo
jne
cmp
adc
inc
aas
repnz
xlat
mov
mov
in
ret
jl
push
adc
inc
sbb
mov
sahf
popf
cmp
inc
jle
js
xor
mov
loopne
xchg
mov
dec
aas
add
dec
nop
inc
pop
fsub
xchg
mov
mov
mov
dec
es
sbb
lret
dec
jno
cmp
hlt
xchg
add
pop
jp
in
mov
inc
cmpsl
jnp
dec
push
test
imul
mov
repz
xchg
dec
dec
push
std
dec
xchg
fmuls
int3
loop
mov
mov
in
shr
lcall
shlw
xchg
test
ss
mov
xchg
sbbb
and
sub
cmc
adc
cwtl
and
push
popf
push
cmp
dec
fs
ret
mov
nop
push
mov
dec
ret
aaa
cmp
mov
not
out
ret
testl
inc
jl
loop
xor
cs
and
outsl
sbb
enter
jb
lcall
mov
pop
dec
mov
push
xchg
cmp
ds
mov
ja
movsl
jb
lret
test
add
mov
sbb
out
cs
cld
sbb
je
add
pop
fcomps
mov
inc
dec
push
in
cmc
fsubrs
push
or
imul
sbbb
mov
push
mov
imul
mov
sbb
es
lds
or
mov
mov
test
push
xlat
adc
inc
sbb
decl
jl
outsl
sub
js
mov
cmp
daa
dec
aaa
pop
fmuls
fistpll
aam
jle
roll
dec
or
push
subb
jecxz
jge
hlt
fnstcw
lods
mov
xor
clc
rcll
push
xchg
mov
push
syscall
mov
ja
sbb
movsb
dec
cmp
push
pop
std
not
adc
sbb
lods
dec
ja
loope
xchg
cmp
fbstp
loop
mov
pop
jb
add
mov
or
add
mov
fimuls
ds
mov
jg
mov
push
ljmp
mov
cld
test
sub
sub
push
rorb
addr16
movsl
mov
loop
inc
inc
int
loope
xor
xor
sbb
sbb
iret
mov
test
jnp
xchg
add
test
pop
inc
lock
pop
pop
or
fwait
sbb
jge
xor
jne
sub
adc
fcmovnu
jmp
mov
shrb
or
xor
ja
add
ret
bound
push
push
loop
lahf
mov
add
cmc
and
in
rorb
jle
aas
push
cld
jo
jno
je
arpl
sbb
out
cmp
shlb
pop
jne
aaa
dec
push
jecxz
mov
sub
push
inc
js
or
pop
adc
dec
addr16
jmp
cmp
mov
jmp
sbb
pop
pusha
outsl
sub
cmpsl
or
or
sbb
in
fiaddl
decl
lret
jp
ret
stc
mov
icebp
std
call
loope
imul
inc
cmp
adc
adc
je
icebp
lock
jno
sahf
push
pmovmskb
cmp
pop
adc
sarb
nop
aad
cli
xor
pusha
insb
aad
call
imul
mov
add
cli
lock
cmp
mov
pushf
jnp
add
imul
push
pushf
mov
add
or
mov
repnz
cli
mov
xlat
or
iret
aad
fnstenv
xor
push
jb
fs
fs
loopne
stos
mov
scas
mov
pop
mov
mov
enter
pop
outsb
xor
xchg
insb
insb
add
test
insb
pop
jno
and
fsubrs
cmp
xor
push
inc
mov
cmp
push
mov
hlt
int
stos
jg
lret
in
insb
iret
pop
hlt
push
lds
clc
ret
lret
aam
inc
mov
add
mov
pop
mov
add
lahf
add
js
sbb
mov
push
dec
push
call
fimull
jo
loopne
adc
add
in
adc
pop
test
xlat
xor
dec
cmpsl
in
dec
in
push
sbb
cli
jmp
jne
push
cwtl
in
cmpsb
push
int
out
shll
clc
call
sarl
in
test
cmp
xchg
xchg
lea
repnz
and
jno
pop
cmp
aas
dec
test
cmp
and
mov
xlat
jb
std
subb
mov
mov
xchg
sbb
sahf
fs
pop
andb
aas
jne
jg
xchg
mov
adc
mov
dec
pop
fcmovbe
in
nop
and
xchg
xlat
arpl
mov
cltd
clc
adc
imul
aas
stc
sti
adc
push
lock
out
mov
lret
or
hlt
bound
cmp
in
mov
rorl
mov
arpl
inc
popaw
rorl
shll
push
and
loope
xchg
sbb
mov
scas
mov
and
movsl
lret
dec
mov
clc
out
pop
sub
or
mov
push
mov
les
push
sti
and
fiaddl
jp
bnd
js
mov
cmpsl
enter
and
dec
push
push
add
mov
push
pop
jecxz
aas
sbb
xor
mov
push
push
call
push
or
push
pop
inc
fcomip
inc
ret
js
pop
shlb
bound
out
push
push
dec
lds
loopne
addl
outsb
jnp
ja
insb
xor
sub
or
fcmovnu
push
dec
dec
or
movsb
int3
pop
inc
xchg
push
js
xor
mov
ret
mov
sub
jg
outsb
clc
shll
rolb
call
push
push
sbb
das
ret
xor
jb
xlat
js
imul
or
or
push
mov
dec
pusha
shl
mov
xchg
push
movd
or
cmp
mov
and
scas
jge
inc
and
cmp
sarb
lds
dec
inc
subb
or
jp
jmp
dec
inc
das
xlat
jae
and
mov
mov
bound
scas
jbe,pn
ss
cld
fisubl
jb
fnstenv
incb
js
scas
leave
ret
arpl
jnp
cmp
int
sti
arpl
orb
ret
cmp
in
into
sub
pop
gs
aam
daa
push
sbb
inc
and
ljmp
outsb
or
test
hlt
gs
push
or
mov
movsb
gs
stos
loop
out
inc
adc
call
xlat
and
push
mov
adc
mov
xchg
dec
nop
inc
mov
pop
hlt
push
jg
pop
mov
mov
imul
lods
test
sbb
xor
clc
xchg
je
mov
push
mov
stc
jmp
insb
je
mov
pop
sub
negb
out
and
jl
jne
lods
mov
test
xchg
sub
fcomip
lahf
push
outsb
int3
xchg
iret
rclb
push
test
outsb
add
inc
inc
fisttpl
mov
loope
mov
shrl
cld
imul
data16
mov
mov
gs
or
flds
mov
xlat
test
mov
lock
pop
mov
mov
movsl
cmp
out
push
pop
orl
insl
imul
inc
xchg
scas
aad
imul
jle
mov
xchg
das
push
fsts
inc
or
out
mov
mov
imul
mov
or
daa
ficomps
ljmp
decl
push
mov
pop
fdivrs
mov
and
dec
sar
jp
xor
jmp
es
mov
in
loope
xlat
ljmp
stos
jp
test
sbb
push
push
ret
push
mov
and
xchg
imul
fdivs
in
sub
cmpl
pop
push
enter
fdivrl
popa
fidivrs
test
jg
xchg
mov
mov
adc
faddl
dec
lock
mov
imul
fldpi
xchg
cli
sub
loop
arpl
xchg
in
push
mov
pop
pop
or
movsl
push
sarb
fdivl
lds
cmp
lods
xorps
dec
jge
rcrb
adc
mov
push
sti
out
inc
xor
add
fidivs
fsubrl
call
mov
addr16
lock
push
test
jne
adc
js
loopne
and
xchg
add
xor
pop
ret
lock
dec
jnp
mov
test
jg
inc
insb
movsl
pop
xlat
dec
inc
jmp
stos
outsb
pop
leave
jb
sahf
call
push
fwait
test
sbbl
push
xchg
dec
inc
cltd
xor
aas
cld
or
add
xor
dec
jmp
lods
inc
dec
jae
jno
das
inc
xor
adc
mov
add
xchg
jecxz
test
sbb
fidivl
mov
pop
mov
nop
cmpsl
rcrl
jecxz
push
add
andb
ds
pushl
and
dec
add
pusha
or
sbb
out
lcall
add
jge
push
and
scas
mov
dec
cmp
cmp
lock
xor
out
popf
rclb
xchg
push
inc
nop
push
mov
cmpb
sub
adc
fwait
outsl
inc
fdivl
dec
add
mov
dec
aad
clc
pusha
sarl
pop
sbb
push
mov
scas
out
mov
mov
inc
pop
mov
hlt
sbb
cmp
jle
or
negb
mov
xor
ljmp
les
jne
popa
into
adc
mov
xor
sbb
in
push
jmp
push
pop
cld
adc
sarl
jns
shrb
imul
jnp
pop
shlb
jo
pop
mov
ds
jnp
out
push
dec
add
add
lods
push
and
out
cs
cs
imul
jp
es
sbb
add
test
std
sahf
push
jl
push
leave
mov
sbb
jp
movsb
popl
aas
xor
out
add
subb
lcall
js
shrl
inc
fbld
dec
xchg
jae
loop
push
xor
push
sub
out
xchg
imul
hlt
inc
push
or
jae
dec
and
push
lods
arpl
xor
test
and
or
pushf
cmp
orb
loope
rcrl
rorl
xchg
testb
rolb
xor
mov
jp
xchg
push
add
xor
data16
test
and
aas
shrb
adc
mov
mov
pop
dec
into
jne
mov
loope
push
push
or
insb
test
push
adcl
push
and
cmp
in
sub
int3
and
aas
xor
lret
sub
xlat
cltd
test
aas
loopne
sub
push
ss
and
clc
add
ss
icebp
xor
lahf
fs
data16
cmp
adc
stos
icebp
sbb
rcrb
cmpsb
mov
cwtl
pop
test
scas
loopne
xchg
loope
addl
sti
cmp
push
ss
stos
inc
inc
lahf
mov
add
add
test
adc
pop
scas
imul
dec
ss
cwtl
or
fiaddl
shrb
sub
mov
js
push
test
lea
add
xchg
subl
mov
jne
or
outsb
pop
cs
mov
loopne
add
mov
pop
test
push
daa
scas
cmp
or
mov
jmp
pop
or
mov
pop
jnp
and
or
lds
inc
shll
xchg
and
xchg
je
shlb
daa
les
lock
out
and
xor
sti
mov
or
in
nop
cli
mov
jo
push
mov
fcmovnu
sbbb
rcrb
xchg
inc
rorb
mov
fildl
lods
hlt
lock
sar
lods
add
cltd
add
setge
add
push
pop
into
lds
ret
jge
pop
ret
subb
out
fwait
jecxz
into
cmpb
mov
out
pop
fstl
push
loop
iret
push
lods
gs
pop
call
mov
cmp
and
into
mov
pop
rcrl
inc
bound
movsl
xchg
cmp
fcoml
fcomp
loope
cmpsb
addb
adc
mov
fidivrs
test
mulb
adc
leave
or
sbb
outsb
hlt
fldpi
jmp
or
push
int
and
xchg
movsb
mov
inc
pop
dec
pop
push
ja
sbb
mov
aas
push
mov
inc
jmp
inc
jmp
push
test
dec
icebp
ret
int
pop
cs
js
push
jne
test
dec
cli
insb
repnz
inc
jp
scas
or
addb
sub
sub
sbb
into
shr
clc
jno
fcmovnu
sub
jo
sub
ja
outsl
std
mov
repnz
jl
sub
lcall
mov
std
lea
cmp
addr16
cmp
add
sub
addl
imull
jo
mov
add
fstps
mov
and
inc
insl
insl
repnz
cli
sub
push
jo
mov
adc
pusha
in
xchg
ljmp
cli
faddl
jns
mov
mov
fistpll
mov
or
dec
mov
sbb
movsl
shll
aaa
rol
sbb
or
les
das
dec
push
test
mov
push
in
sbb
cmp
xchg
pushf
loop
lds
mov
or
push
sub
rolb
out
adc
jg
fwait
jmp
ja
jecxz
es
jp
cmp
out
movsl
inc
jle
dec
imul
push
loop
cmp
mov
add
scas
pop
stc
pop
cmp
inc
pop
adc
push
inc
or
mov
pop
xchg
pop
fbld
adcb
js
sbb
aad
or
mov
mov
push
xor
inc
mov
push
jbe
fistps
insl
test
or
push
pop
xor
xor
xchg
mov
add
dec
pusha
adc
push
rcrb
mov
push
mov
les
pop
js
inc
fadds
bound
out
mov
dec
cli
or
add
add
loopne
add
cmpsb
mov
rcr
xchg
iret
ret
pusha
add
mov
pusha
add
adc
cld
jle
jmp
dec
lret
roll
fs
jg
dec
lods
decl
or
fwait
add
adc
add
push
cmpb
lret
mov
jbe
pop
jmp
rcl
dec
jae
mov
mov
or
jmp
mov
imulb
sbbl
xchg
pushf
push
les
mov
dec
stc
xchg
iret
stc
fcmovu
hlt
decl
or
subl
popf
cwtl
loop
adc
daa
cmc
stos
daa
insb
mov
mov
test
and
add
fisubrl
and
outsl
stc
js
push
fsubl
xchg
sub
inc
iret
mov
inc
les
lods
or
or
mov
mov
xor
nop
jns
mov
mov
mov
adc
lret
push
stos
ret
jo
xchg
iret
sbb
mov
dec
stc
adc
ljmp
jecxz
xor
je
out
sub
mov
jp
ljmp
mov
or
test
dec
pop
xor
cmpsl
ret
int
negl
enter
pop
call
js
and
repz
outsl
sar
in
xlat
add
sbb
in
cmc
cmpsb
mov
adc
nop
inc
pop
call
pop
jp
jl
inc
enter
aas
cmp
fiadds
mov
movsl
sbb
add
xor
loopne
sub
loopne
addb
punpcklbw
lahf
pop
addr16
addr16
mov
add
cmpsl
ss
mov
sbb
push
jle
imul
scas
sub
popa
std
jne
push
call
or
mov
jmp
test
cmp
fcoml
cmp
mov
dec
daa
add
push
dec
sbb
push
pop
xchg
repz
mov
cmp
xor
sbb
and
jb
lock
mov
sbb
adc
xor
lods
sbb
inc
cmp
xor
imul
adc
aam
pop
lock
stos
sbb
jo
ja
lods
or
enter
xor
mov
or
dec
cmp
mov
cli
int3
pop
popf
mov
push
scas
xor
daa
test
dec
xchg
scas
icebp
sub
mov
push
mov
push
dec
cmp
scas
popa
jl
or
jg
fistps
sub
cwtl
or
popf
xchg
add
loope
lds
shlb
shl
insl
adc
out
mov
cli
cmp
aas
fs
dec
mov
jmp
mov
test
add
rcll
push
cmpsl
cmpsb
cs
jl
test
mov
mov
mov
xlat
incb
add
imul
and
sbb
addl
sbb
sbb
aam
mov
out
cltd
in
xchg
inc
clc
rcrb
and
mov
push
dec
enter
lods
inc
lea
and
jg
push
stos
les
in
fiaddl
mov
es
inc
add
and
dec
bound
inc
out
sbb
hlt
and
push
and
lahf
imul
test
iret
or
jg
das
shl
in
cmp
jecxz
jmp
cmpsl
pop
fwait
jmp
jne
ret
sbbl
push
adc
inc
std
jne
shl
add
rorl
stos
pop
clc
pop
push
sahf
push
pop
xor
pop
addr16
lods
in
lock
dec
cld
add
mov
hlt
lods
popl
xlat
cmpsb
mov
push
aaa
push
mov
call
cld
pop
mov
cmp
movsb
pop
jb
loopne
out
fidivrl
add
push
mov
add
and
scas
push
cld
dec
pop
cmp
mov
and
or
push
jge
sub
fildl
pop
xchg
mov
das
fadds
call
mov
mov
js
imul
sbb
punpcklbw
in
mov
ffree
or
adc
fadds
push
mov
mov
mov
addb
mov
sbbb
std
cmp
jg
xor
push
add
push
lahf
bound
cmp
jl
int
fstpt
test
incl
xchg
push
adc
push
rcrb
aad
jmp
xor
lods
mov
ss
aaa
pusha
shlb
jbe
dec
dec
imul
dec
cli
xchg
xchg
std
add
clc
or
inc
ds
mov
xor
pop
stos
inc
dec
ds
or
sahf
mov
jno
icebp
into
lods
push
mov
or
stos
sarl
push
es
cld
dec
imul
testl
mov
call
pop
xor
jne
inc
loope
inc
xchg
jp
mov
mov
or
in
pop
cwtl
mov
inc
mov
push
xor
or
dec
imul
lods
shlb
out
imul
lea
sbb
adc
mov
pop
imul
je
mov
pop
std
add
test
imul
pop
add
mov
test
aam
or
dec
les
mov
repnz
loop
clc
insl
mov
inc
or
push
loop
push
adc
inc
orl
movsl
sbb
mov
mov
aaa
je
sub
inc
xchg
jp
pusha
out
sub
add
adc
pop
movsb
wbinvd
aas
in
pop
aas
mov
mov
sub
inc
outsl
cld
shlb
add
enter
ret
movsb
inc
sub
adc
mov
scas
orb
movsb
mov
in
leave
aam
insl
inc
rol
movsb
lock
push
inc
or
call
sub
push
rol
stc
stos
xchg
pop
mov
inc
inc
pusha
fists
les
mov
mov
sub
ds
pop
mov
sbb
pop
enter
popa
movsb
rorb
mov
rolb
bound
or
mov
mov
sti
fisttpll
je
into
adc
out
push
xor
repz
and
cmpsb
and
loope
cmc
insl
push
pop
add
ja
and
mov
mov
mov
mov
push
push
add
bound
pushf
shll
aaa
pop
cld
push
cmp
into
push
jno
dec
dec
mov
mov
sbb
push
sub
je
in
std
jns
jmp
cmpsl
push
test
call
adc
add
shrb
push
icebp
dec
push
ds
or
test
jmp
das
cmp
lcall
sti
cmp
test
je
movsb
data16
lods
movsb
lock
xchg
clc
xorl
or
in
mov
sub
mov
inc
jle
xor
bound
mov
add
shrl
push
lret
outsl
sbb
out
andb
mov
mov
xor
dec
xchg
push
and
jle
inc
xchg
and
and
mov
rorb
add
mov
xor
adc
mov
xor
mov
test
or
pop
lret
and
sub
xchg
or
sbb
hlt
pop
lahf
xchg
popa
out
jecxz
fiaddl
mov
fldt
dec
test
repz
cli
jp
jl
daa
and
hlt
sub
xchg
or
std
insb
mov
data16
outsb
pusha
mov
push
loopne
inc
cmp
test
int3
aas
mov
pop
call
scas
and
mov
mov
mov
mov
cmp
or
jl
adc
mov
test
hlt
inc
lret
inc
cli
jl
lret
fidivs
shrb
mov
shrl
add
fsubrl
jo
into
cmp
cld
add
mov
in
xlat
jno
sahf
xchg
shrb
mov
pusha
nop
mov
sbb
shl
xor
test
daa
outsl
pushf
xor
addl
xor
mov
cmpsl
stos
out
cmpsb
hlt
cmpsb
shl
je
in
stos
adcl
push
les
jno
push
push
or
gs
mov
xchg
sbbb
ret
inc
or
and
mov
sub
mov
fwait
loop
lahf
push
addb
test
jle
stos
js
and
mov
or
pop
into
aas
adc
or
je
enter
add
push
sbb
and
int3
cmp
sub
addr16
lcall
je
icebp
cmp
ss
sub
sahf
jmp
mov
rolb
push
mov
sbb
push
cmp
test
insw
push
mov
sbb
lock
mov
ret
scas
ss
mov
push
or
jge
xchg
mov
xchg
mov
pop
ret
stos
lret
lds
xchg
add
lods
inc
rcl
pop
repnz
mov
push
sbb
xor
mov
mov
jecxz
scas
mov
jg
adc
addr16
xchg
les
inc
js
or
cmp
pop
mov
push
sar
es
jge
js
xor
scas
idiv
cmp
jmp
js
das
adc
cmp
jle
rcl
pop
jae
data16
xchg
test
lcall
xchg
or
push
cmp
add
in
popf
sbb
mov
push
into
jmp
test
push
jbe
jg
sub
rcl
xlat
mov
xchg
lods
dec
movsl
out
movsl
mov
sub
mov
pop
cmp
loopne
adc
inc
push
mov
loopne
cwtl
mov
mov
xor
mov
rcrb
iret
push
cmp
jnp
add
push
loop
jp
jo
aad
sub
test
mov
cli
inc
add
push
ss
jge
push
rcrb
mov
add
push
add
push
push
in
es
sbb
sbb
cmp
pop
jl
xor
and
xor
test
jnp
std
dec
pusha
cmp
mov
loope
cwtl
aad
xchg
xlat
std
mov
sbb
std
sbb
and
adc
ffree
cmp
jb
aas
pop
addl
in
pop
pushf
hlt
ja
leave
inc
outsb
jae
sub
adc
iret
mov
lock
mov
inc
dec
sbb
jmp
or
fiadds
and
adc
push
inc
daa
scas
dec
dec
and
mov
movsl
lahf
insb
lret
int
decb
sub
add
inc
int3
arpl
js
mov
stos
icebp
ror
cwtl
ss
push
shll
dec
pusha
push
mul
aam
xor
inc
push
stc
clc
leave
xchg
mov
jmp
and
outsb
ljmp
cwtl
jo
sub
fdivs
imul
stos
repnz
imul
push
lods
ds
jne
push
or
cmc
fisttpl
push
xor
movsb
add
pushf
push
fincstp
mov
mov
ret
xor
mov
mov
xchg
test
js
push
add
mov
fs
in
lret
xchg
push
mov
mov
adc
pop
fbld
mov
inc
int3
xchg
ds
ret
push
mov
cld
and
test
icebp
dec
icebp
sti
test
sbb
inc
aaa
aad
add
pop
fwait
sbbl
lahf
rol
mov
lock
ret
icebp
inc
jmp
hlt
lret
add
shll
xchg
cwtl
cmpsb
lahf
dec
cli
mov
sbb
repnz
add
fxch
adc
add
jno
lcall
inc
ss
scas
and
push
xchg
push
adc
or
arpl
pop
dec
nop
ss
mov
dec
sbb
outsl
aam
inc
pop
and
call
cld
ja
lods
mov
add
sahf
jb
and
popa
es
or
lahf
outsb
xor
lock
sahf
sub
adc
rolb
pop
bnd
or
cmpsb
or
aaa
xchg
inc
mov
jo
daa
sti
sbb
sbb
sub
inc
jl
ffreep
fsubrs
stos
add
jge
xor
lea
mov
xchg
and
xchg
and
adc
pop
and
mov
popa
xchg
fcoms
shrl
xchg
push
push
mov
mov
in
mov
push
inc
test
out
pop
test
xor
lods
sbb
jg
xor
orb
dec
or
rol
cmp
cld
stos
sbb
prefetch
fs
dec
jno
sarl
out
sti
mov
fistpll
pop
scas
or
adc
movsl
sub
pop
xor
roll
das
cmpl
fisttpl
icebp
xchg
movb
loope
aaa
add
mov
int3
lds
dec
adc
jp
jbe
and
std
adc
call
adc
adc
jle
add
jnp
les
js
dec
outsl
fs
xorb
subl
les
xor
adc
into
mov
in
mull
sub
sub
popa
lds
sbb
test
cmovbe
cmp
mov
adc
sub
cltd
aaa
decl
clc
mov
sub
bound
ljmp
xchg
pop
push
sub
sub
xor
xchg
roll
sub
cmpsl
test
jg
dec
jo
dec
push
movsb
aaa
pop
leave
xor
xor
fists
sub
je
ret
jns
adc
pop
mov
pop
int3
in
sbb
push
aam
vmovsd
in
movsb
add
hlt
inc
clc
sub
stos
pop
pop
mov
loopne
jge
testl
inc
and
xor
add
inc
push
inc
shl
pop
dec
fs
out
mov
es
jns
lret
push
mov
aam
in
out
lds
and
sub
jne
sub
xchg
push
clc
ficoms
mov
mov
outsl
inc
mov
jns
faddl
test
mov
mov
sub
and
repz
ja
dec
mov
ror
add
xchg
mov
rclb
dec
fstl
ds
aam
in
pop
cmpsb
lods
pop
iret
mov
push
cmp
cmp
mov
lods
inc
outsl
ds
out
mov
icebp
stos
jae
push
nop
mov
mov
add
into
cmp
pop
rdtsc
pop
stos
xor
sahf
pop
cs
call
outsb
hlt
aaa
hlt
add
inc
out
mov
and
addb
sbb
popa
jmp
bound
xor
push
cmc
mov
mov
cmp
cmp
into
mov
test
jb
scas
push
and
out
or
and
lcall
jbe
aas
push
cld
lods
sub
ret
adc
mov
add
xchg
mov
inc
jg
jnp
js
adc
pop
add
pop
inc
icebp
mov
ret
test
mov
lea
scas
fs
pop
hlt
loopne
test
mov
xchg
jmp
ret
lret
push
ss
push
jl
lock
ficoml
sbb
xchg
add
add
mov
xchg
mov
jge
scas
xchg
loopne
add
mov
sub
jnp
and
jb
pop
push
cld
insl
sbb
fcoml
ds
and
outsb
xchg
sbb
add
xchg
test
pop
les
lea
mov
fstl
cmc
sub
sub
nop
lahf
ret
or
fiadds
fidivs
add
hlt
lret
aam
xor
add
test
push
aas
mov
mov
inc
and
jg
sti
adc
in
xor
outsb
into
ret
xlat
and
fdivrl
notl
movsb
mov
jns
in
das
push
jecxz
fisubl
xchg
cmp
xor
xchg
mov
xchg
sub
push
push
and
dec
mov
call
out
jbe
nop
pop
out
test
cmp
test
int
out
push
js
lods
cmp
jbe
mov
jp
std
cmp
xchg
adc
and
adc
sub
pop
cmp
mov
icebp
bound
mov
adc
fistps
iret
fmuls
imul
inc
cmp
xchg
dec
repz
loop
sbb
out
inc
call
push
mov
adc
mov
push
icebp
loopne
jnp
lods
inc
mov
fstps
pop
pusha
inc
aam
shlb
add
cmp
cld
inc
adc
jae
fisubrs
and
and
inc
sbb
jl
int3
add
adc
add
out
call
inc
ret
or
or
test
pop
call
add
mov
cmp
mov
cmpsl
cmpsl
lock
sbb
jne
or
xor
adc
pop
mov
adc
sbb
xchg
mov
std
sub
aad
and
sbb
dec
imul
mulb
mov
sub
hlt
cmp
scas
mov
xor
adc
in
xor
stos
add
add
sub
fs
push
enter
xlat
cltd
fs
rorl
ds
sbb
xor
jae
mov
scas
and
lret
pop
mov
dec
hlt
out
mov
pop
mov
cmp
stos
insb
jl
sub
pop
inc
outsl
inc
cmpsb
icebp
cmpsb
fbld
gs
insb
and
mov
xchg
push
cmp
nop
xor
faddl
sti
cli
sub
and
fisttpll
add
in
fldenv
js
sbb
push
ret
cmp
xor
lock
rcrb
pop
scas
mov
enter
loopne
imul
es
add
inc
inc
and
and
xor
mov
adc
jnp
pop
mov
xchg
das
hlt
xchg
mov
xchg
lock
nop
fwait
sbb
popa
mov
jle
add
aaa
adc
adc
jnp
xlat
dec
mov
and
fstpl
aam
and
push
xor
mov
mov
scas
adc
insl
imul
repnz
and
and
pusha
push
je
xchg
lea
out
push
lock
xchg
sub
push
sarb
rorl
out
adc
out
mov
and
xor
mov
stos
cmpsb
or
xchg
daa
or
shrb
cmp
push
insl
mov
sub
movsb
push
gs
es
xor
push
ss
ljmp
jbe
cmp
sbb
fidivrl
dec
mov
les
lock
mov
fnstcw
lea
hlt
and
enter
jecxz
popf
inc
jbe
nop
xchg
adc
or
loope
push
test
xchg
movsb
ds
adc
dec
cmp
popa
fadds
adc
dec
es
les
ljmp
xor
and
push
jge
int
mov
iret
mov
lret
scas
rorb
pop
imul
mov
or
dec
fcoml
fldl
mov
mov
mov
and
mov
fwait
mov
adc
fwait
or
sub
clc
outsb
mov
and
popf
int
mov
pop
jmp
mov
cmpsb
lods
jge
inc
push
add
movsl
cmp
in
add
fsubs
adc
lds
push
fwait
push
mov
mov
mov
sbb
mov
rclb
inc
mov
dec
movsl
and
or
jp
ljmp
jbe
mov
jecxz
jp
ret
jmp
dec
cmpb
mov
push
sahf
lods
dec
lahf
push
sub
mov
out
outsb
pop
shr
ret
inc
lods
adc
das
sub
ss
adc
idivl
int3
and
pop
and
nop
inc
push
jb
inc
pop
and
insb
sbb
adc
stos
mov
inc
sbb
jnp
loope
sub
call
push
idivl
mov
inc
iret
lret
add
and
jg
xor
push
push
push
sbb
add
out
cmp
or
jmp
jecxz
test
pop
mov
inc
jp
in
lcall
ret
mov
jo
or
clc
pop
enter
test
push
add
xor
scas
loopne
pop
cmp
clc
dec
sub
stos
xchg
out
xchg
lods
inc
rcrb
inc
test
stc
jle
mov
fcoms
testl
rorb
jecxz
bound
pop
loope
xorb
mov
or
scas
movsl
rorb
mov
lods
data16
push
push
or
fisubs
das
outsl
adc
jb
jge
das
pop
mov
inc
jne
add
xchg
jecxz
jb
ds
call
cmp
gs
orb
add
dec
cmc
xorb
sbb
pusha
mov
sti
mov
sahf
push
lret
fadds
jmp
mov
imul
xlat
stos
xor
movsl
cs
mov
les
bnd
xchg
and
and
and
mov
pop
push
xchg
add
inc
nop
adc
mov
push
dec
xchg
test
and
and
out
push
fidivl
sbb
push
aad
in
hlt
add
add
jb
jl
mov
cwtl
test
push
lahf
mov
and
es
insb
pop
cli
loop
pushf
cmpsb
fisubrl
xchg
es
cs
pushw
push
mov
testb
mov
into
imul
add
out
xchg
mov
pusha
xor
movsl
xchg
cmc
call
jp
jge
fbstp
repnz
cmp
or
ror
neg
leave
push
lcall
testb
cmp
enter
fsubl
fiadds
push
pop
enter
stc
push
mov
dec
sbb
push
shrl
dec
insl
clc
out
jecxz
xor
mov
mov
inc
pop
jnp
inc
cli
popa
add
daa
xor
stos
in
je
stos
addr16
or
fildll
cld
je
push
adc
xor
add
insb
or
sub
push
std
mov
mov
ds
mov
faddl
fdivs
fs
mov
rorb
pop
subb
call
xor
lods
pushf
xchg
into
sbb
in
adc
imul
stos
sub
pop
add
mov
pop
std
and
ja
fcmovnbe
scas
lcall
into
ljmp
pusha
fisttps
ret
popa
pop
jmp
cmpsb
push
jp
cli
aaa
fsub
mov
jbe
pop
movsb
sbb
jne
inc
rorb
jl
lea
stos
loope
or
in
cmpsb
mov
shll
fidivrs
cmp
ud2
mov
jbe
call
mov
frstor
mov
sti
aam
or
xchg
push
inc
mov
loope
push
int3
lea
cmp
dec
pop
adc
insl
add
icebp
add
rolb
adc
inc
push
xchg
pop
jecxz
sub
loop
shrl
fsubl
pop
sti
addl
xor
cli
out
data16
push
loop
icebp
repnz
out
push
pop
lock
inc
push
dec
out
es
fimull
and
pop
xor
xchg
or
lcall
test
xor
sahf
fs
aad
xorb
das
push
sub
or
movsl
mov
ds
xor
and
fistpl
xchg
fiaddl
addb
aaa
fwait
hlt
sbb
add
incb
cmp
push
jo
ret
xchg
xorb
jb
outsb
fdivrl
or
add
xor
lahf
push
pushf
xor
cmp
adc
insb
shrb
sub
pusha
scas
cs
or
sbb
and
mov
adc
cmp
ret
in
cli
dec
or
sbb
sbb
add
push
push
test
lahf
lock
cmp
les
aam
ds
fisttpl
or
push
fnstenv
je
in
shrl
outsl
in
stc
cltd
mov
andb
xchg
bound
fwait
cs
adc
das
in
scas
rolb
inc
das
push
rolb
jns
xorl
sbb
push
sub
add
mov
test
das
cmp
push
loope
sbb
imul
jns
xor
loop
movsb
push
push
or
fbstp
cld
cmc
push
xor
dec
lcall
cli
fiaddl
xchg
add
adc
mov
ficompl
clc
pop
adc
push
jg
mov
adc
push
dec
xchg
cmp
hlt
dec
insl
jg
adc
mov
push
jge
sahf
les
ljmp
xchg
enter
xchg
and
cmpb
push
addb
rolb
dec
pop
jne
push
push
shrb
scas
mov
icebp
test
inc
sbb
idivb
adc
dec
sub
out
movsl
lock
sub
mov
je
jle
loope
pop
xchg
cwtl
cli
sar
iret
lods
std
mov
idivl
lahf
xor
fiaddl
enter
fs
sbb
pop
ja
push
dec
inc
jnp
daa
mov
sbbl
mov
cli
stc
int3
sbb
or
pop
inc
fbld
sbb
in
popf
insb
sub
mov
cli
jle
enter
into
ja
mov
fdivs
and
xchg
push
xor
push
dec
lahf
and
cmc
addr16
scas
hlt
ss
out
push
shll
inc
mov
out
outsb
add
rcrl
loope
lock
es
mov
adc
mov
sti
aad
mov
cwtl
jnp
push
ret
addr16
push
and
loop
icebp
adc
pusha
hlt
cmpsl
ret
out
push
mov
pop
cmp
adc
insl
loopne
jl
inc
xchg
jg
in
sti
cli
pop
fsubl
push
mov
push
add
idivl
push
mov
lret
xor
mov
mov
and
xchg
shl
call
andl
xchg
int
pop
sbb
dec
aaa
movsl
cmp
rcll
lods
cld
std
sahf
clc
pop
inc
in
outsl
inc
or
add
jne
add
je
sub
and
test
xor
div
movsl
enter
xor
addr16
add
adc
bound
call
div
in
push
jns
shlb
test
clc
test
bound
jmp
lods
and
sbb
gs
fidivl
cmp
icebp
ret
cmp
jg
pop
push
pusha
pop
cmp
aam
imul
jo
push
jmp
pop
pop
pushf
sbb
jg
sbb
jne
pop
lock
xorb
jle
xor
pop
push
push
mov
cmp
pop
mov
xchg
sub
out
xor
adc
sbb
cld
fcomps
pushf
mov
std
lcall
roll
or
mov
and
add
dec
mov
out
pop
lcallw
arpl
dec
ljmp
sbb
push
jl
sub
out
jnp
test
outsb
in
add
push
mov
sbbb
lea
pop
stc
sub
xchg
lds
or
xor
outsb
adc
loopne
loopne
hlt
adc
adc
cmpsb
dec
les
adc
lods
lcall
in
push
std
inc
lret
mov
mov
push
xor
aad
push
lds
pop
push
mov
cmpsb
sarl
out
add
mov
ss
push
sub
std
xchg
fstl
lahf
fldt
insl
and
pop
mov
mov
cli
pextrw
jl
jb
ljmp
fsubl
adc
mov
or
mov
mov
std
cmc
mov
inc
vpsadbw
cmp
mov
test
outsl
mov
push
shll
xchg
push
addb
adc
test
jl
push
cwtl
in
cmpsl
mov
pop
mov
inc
out
sub
sahf
pop
and
xor
cld
jmp
loopne
pop
sbbb
mov
sub
dec
xor
or
in
std
test
xchg
sbb
jp
dec
mov
lods
cmpsb
xchg
push
stc
jno
stos
mov
pop
pop
mov
push
add
mov
sbb
dec
inc
cs
mov
or
cmp
jge
mov
sbb
cld
lea
sbb
xchg
push
push
mov
aaa
add
pop
inc
cltd
daa
add
jne
push
xchg
or
imul
out
sbb
inc
jae
addr16
test
int
xor
cmpsl
dec
lods
cmp
push
pop
sbb
mov
call
inc
mov
mov
pusha
xchg
xor
push
sub
pop
pop
out
xchg
adc
pop
mov
add
je
scas
mov
push
cld
push
sub
jb
popa
or
jp
adc
rcrb
gs
stos
in
dec
and
dec
inc
mov
add
lsl
xchg
leave
mov
in
fsubs
aad
pop
mov
scas
adc
and
je
add
xorl
push
cwtl
pop
mov
push
push
xor
es
ljmp
mov
insl
adc
jp
push
sarb
lods
pusha
lcall
pop
movsb
jg
or
in
dec
xorb
addb
pop
insl
lea
push
xor
mov
jne
dec
lea
int
out
stos
test
popl
imul
dec
inc
insb
dec
mov
in
pop
pop
mov
pop
push
xor
ja
mov
pop
fldl
stos
pusha
sub
adc
mov
pop
push
in
and
decl
mov
fstpl
test
test
jb
ret
rolb
insb
pop
lods
sahf
mov
xchg
mov
inc
cld
add
jae
pop
xchg
or
aas
dec
cmp
imul
iret
je
scas
mov
rclb
pushl
data16
pushf
aas
cmp
cs
mov
pop
shrb
or
and
pop
inc
mov
push
cwtl
mov
roll
sahf
repnz
or
xor
push
incb
dec
inc
jbe
add
repnz
xchg
aas
push
mov
dec
sbb
incl
lret
xchg
sbb
or
push
pop
inc
jg
or
shr
cld
add
cmpb
lret
mov
scas
lcall
popf
and
sub
adcl
jl
pop
push
jb
cmpb
icebp
xchg
lods
pop
xor
rorl
shll
push
icebp
pop
jo
mov
fucomip
retw
movsl
nop
jns
test
repz
add
aad
std
shlb
and
rcrl
adcb
bound
ss
stos
icebp
js
sbb
test
jge
jp
push
les
or
fbstp
inc
aad
testb
or
fdivl
call
and
pop
jmp
decl
inc
repz
insl
xor
in
pop
dec
jl
pop
pop
lcall
imul
mov
or
mov
das
incb
sahf
out
adc
or
cli
stos
jl
jmpw
xchg
inc
ljmp
scas
cmp
jo
or
test
mov
or
das
add
mov
push
out
mov
mov
sbb
inc
jl
clc
mov
clc
cmpsb
int3
and
clc
jle
addr16
arpl
stc
jg
icebp
push
das
add
cmp
inc
cwtl
add
ljmp
xchg
dec
mov
fst
xchg
xchg
mov
in
mov
add
mov
and
loop
add
jnp
cmp
jp
pop
push
add
jge
aaa
sbb
inc
cmp
ja
cmp
jecxz
mov
inc
int3
imul
fldl
xchg
outsl
in
inc
mov
mov
movsl
fistpl
das
addb
loope
or
push
repnz
es
sbbl
call
xchg
mov
cmp
clc
subl
xor
fld
dec
sahf
fidivl
push
shll
jno
jle
pop
add
clc
mov
push
dec
mov
test
mov
enter
and
push
clc
jecxz
sbb
pop
inc
fdivrs
push
xchg
sahf
test
fstps
inc
aaa
mov
cmc
mov
popf
rclb
mov
in
xor
lock
xchg
lock
pop
add
sahf
dec
cmc
sbb
push
xor
ror
cmp
incl
inc
sub
cmpsb
leave
ss
inc
loopne
jbe
cmp
xor
add
jne
shl
mov
aam
imul
test
fs
mov
xchg
push
js
dec
rcr
nop/reserved
scas
out
dec
dec
sub
ljmp
pop
mov
dec
jge
mov
in
inc
fsqrt
int3
imul
in
test
sub
mov
in
stos
ret
xor
mov
mov
fisubl
movsl
add
sub
enter
jmp
fcomp
adc
outsb
fwait
in
bound
xor
lret
ljmp
clc
popf
dec
loopne
pop
outsl
sub
notl
shll
push
inc
mov
jae
add
or
push
out
pop
andb
rorl
push
or
mov
jl
mov
xor
loop
js
mov
inc
inc
cmp
aam
adc
shl
imul
aaa
cmpb
sub
jge
lcall
push
les
aam
lds
frstor
nop
push
lods
fwait
mov
push
dec
test
pop
out
sbb
add
pop
dec
mov
addl
leave
inc
rcrb
jp
insb
stos
xor
mov
mov
mov
push
icebp
rcll
sub
dec
test
push
mov
pop
xchg
mov
push
shll
insb
sbbb
xor
add
xchg
shlb
mov
cmpb
bt
adc
pop
icebp
and
les
fadds
int
jecxz
inc
lea
mov
mov
addb
rorb
push
ficoms
dec
or
push
dec
loopne
inc
sbb
and
fdivrs
repnz
jle
jnp
and
mov
in
mov
inc
mov
adc
movsl
test
clc
dec
adcb
jg
and
es
or
lcall
xchg
aaa
push
xor
mov
les
jo
loop
ds
or
xchg
cmp
xchg
cmc
ror
ds
orl
arpl
lock
incl
cmp
inc
mov
mov
push
test
and
and
cli
ss
je
cld
xor
xor
dec
xlat
sub
mov
std
lods
and
lret
test
lds
mov
mov
mov
pop
aam
sbb
mov
call
sub
push
xor
arpl
mov
sbb
pop
ds
dec
mulb
xchg
dec
aad
lcall
out
xchg
push
sub
jo
std
jbe
sub
stos
mov
insl
inc
ljmp
lds
std
push
sahf
cmp
mov
pop
shrl
clc
mov
or
outsb
push
ds
fbld
mov
sbb
mov
addl
cmp
loopne
xchg
rolb
mov
out
clc
pop
fdivl
lahf
push
notl
inc
and
xor
mov
loopne
nop
frstor
xchg
data16
outsb
or
cmp
sbb
cmpsl
decl
adc
cmp
decl
jmp
in
clc
mov
cmp
rcl
std
call
mov
sub
int3
test
pop
jg
add
insl
shrb
pushf
stc
movsb
add
cmp
inc
inc
std
adc
sbb
in
decb
notl
iret
xchg
push
cwtl
and
pop
js
mov
lret
jne
jns
sbbb
and
and
or
mov
jmp
sbbb
sbb
scas
or
add
fisubrl
inc
divb
iret
and
adc
test
push
shrl
pop
mov
adc
sub
add
and
inc
jg
popf
cmpsb
ds
loopne
cmp
dec
adc
insb
sub
cs
movsl
sub
insl
adc
push
decb
aas
mov
sbb
iret
in
test
and
mov
imul
or
sub
push
testl
cs
out
test
adc
fcompl
test
aad
xchg
fiadds
gs
nop
sti
push
mov
mov
sbbl
push
cmp
pop
push
jmp
cli
jecxz
lahf
rcrl
sbb
pop
dec
pop
inc
out
cs
xchg
adc
aad
lea
mov
xchg
adc
stc
mov
xchg
jae
mov
push
rolb
mov
jne
push
pop
mov
sahf
mov
fildll
add
push
out
mov
push
ss
cld
and
clc
mov
pop
sbb
mov
inc
dec
pop
test
pusha
push
aad
mov
mov
sbb
xor
cmpsb
scas
cmpsl
jecxz
adc
and
pop
dec
hlt
sbb
mov
das
fsubs
aad
into
lret
adc
xchg
dec
xchg
fcomip
mov
push
out
xorb
in
sub
jg
or
jle
mov
out
push
lock
jp
pop
insb
bsr
sbb
imulb
mov
mov
fs
cltd
rcrb
and
stc
pop
mov
mov
ss
add
pop
xor
ficoml
push
add
jg
nop
dec
sarl
pop
xor
or
popa
mov
xchg
cmp
cli
xchg
pop
faddl
aam
cmp
mov
or
mov
and
pop
jno
or
sbb
lods
xchg
jecxz
fmuls
cvtpi2ps
sub
fs
cwtl
clc
or
ja
mov
fisttpl
push
cmpsl
xor
xchg
xchg
lahf
leave
lds
xor
mov
in
sub
mov
outsb
fbld
jo
mov
rcrl
enter
and
adc
pop
pop
cmp
xor
adc
call
aam
jbe
inc
fists
jl
aam
jbe
dec
repnz
dec
subb
repz
mov
jecxz
out
mov
mov
push
sbb
cmp
push
sbb
xchg
jmp
sbb
aam
xlat
pop
mov
push
sbb
test
jnp
jg
add
pop
lea
bound
sub
stos
call
mov
xchg
xchg
xchg
add
loope
mov
fucomip
fisubs
rorb
mov
fcomip
cld
dec
push
outsb
dec
aam
fadds
ss
test
lock
push
pop
xor
cli
fwait
inc
lods
xchg
mov
or
sti
xorl
aam
pop
push
psrld
or
fimuls
add
das
cld
xchg
jae
xlat
or
push
fcmovbe
iret
rolb
jge
leave
cld
das
jns
gs
mov
rorb
jge
inc
lret
add
or
mov
pop
dec
add
jmp
push
push
or
inc
movsb
call
cmp
pop
fdivrl
dec
pushf
mov
push
xor
rorb
clc
xchg
xchg
mov
xor
in
mov
movsb
xor
std
mov
and
imull
push
stc
aam
pmuludq
push
add
jns
or
pusha
imul
lds
in
jg
cli
test
push
sbb
les
aaa
scas
js
dec
cli
clc
add
xor
and
push
push
shl
shrb
aam
cli
mov
mov
xchg
std
ss
sar
add
mov
sub
jle
pop
xchg
push
ja
xchg
inc
out
leave
lcall
jns
push
mov
scas
xlat
dec
pop
clc
out
pop
pusha
mov
addr16
jg
push
and
sbb
xor
jne
outsl
cmp
push
mov
inc
inc
call
push
cmpsl
push
adc
mov
or
js
idivb
inc
jecxz
jle
inc
add
andb
into
sub
and
jmp
movsl
adc
pop
xlat
push
hlt
or
push
in
lds
mov
push
mov
sbb
mov
loopne
mov
orb
inc
incb
sbb
sbb
or
mov
js
mov
ficompl
std
cmpsl
int3
dec
cld
fstpl
int
jge
sbb
filds
stos
stos
nop
pop
cmp
pop
cmp
jne
mov
or
hlt
movsl
mov
adc
addb
jmp
and
sub
aam
pop
cld
mov
es
sub
inc
and
lods
adc
fstpt
mov
fcmove
ljmp
mov
test
push
add
push
cld
out
je
adc
cmp
xchg
ror
mov
sbb
scas
xchg
mov
idivb
lcall
or
test
pop
jl
cmp
dec
rolb
aas
mov
ror
mov
iret
es
sbb
mov
cmp
mov
in
or
stos
inc
pusha
or
adc
mov
fdivrl
sub
aas
push
and
dec
sub
sarl
test
mov
mov
icebp
xchg
loop
push
jbe
loope
in
es
stos
push
xor
sub
sar
bound
mov
or
dec
jmp
enter
addb
pop
and
insl
xlat
jmp
pop
cmp
rcrl
pop
push
inc
jo
sub
xchg
out
movsl
or
stos
sub
mov
insl
sbb
dec
jb
sbb
ret
es
out
pop
push
mov
les
jno
cmp
inc
cmpsl
push
cli
gs
fdivp
movsb
dec
sbb
loop
sahf
sub
add
or
pop
insb
jg
outsl
mov
mov
insb
cwtl
mov
jo
mov
call
aas
ljmp
cmp
shr
lock
pop
sub
inc
mov
dec
divl
stos
rcrb
add
adc
mov
push
cli
jb
cltd
xchg
push
scas
das
mov
pushf
hlt
sbb
push
sbb
mov
push
and
push
mov
dec
stc
js
pusha
insl
fwait
mov
fstp
in
jmp
nop
cmp
scas
les
push
out
jp
incl
test
ret
mov
push
sbb
lock
cmpsb
aas
in
dec
in
push
loopne
cmp
cs
mov
cmp
ljmp
adc
mov
dec
fstpt
mov
xor
inc
fiaddl
test
outsb
test
xor
sub
loop
pop
loop
push
cwtl
xor
fwait
and
out
inc
xchg
test
push
mov
in
les
dec
or
ret
jg
loopne
sub
jno
fistps
jae
outsb
jmp
push
jns
adc
inc
cld
xor
insl
aas
push
out
in
in
push
jle
mov
pusha
lock
subb
sub
fsub
jmp
dec
clc
call
icebp
je
mov
icebp
roll
inc
adc
orl
das
js
and
or
enter
jmp
mov
testl
popa
cmp
xor
pusha
or
cmpsl
dec
data16
loope
mov
sub
jbe
movsl
pop
mov
fbld
mov
add
stos
inc
movsb
mov
sub
scas
mov
ret
loop
incb
adc
out
fmull
bound
mov
fnsave
pop
cmpl
add
inc
rorl
jg
ret
stos
push
mov
mov
test
pushf
lcall
push
push
mov
lods
push
or
and
xor
cmp
and
subl
repz
mov
dec
cmp
mov
add
mov
cwtl
cmp
daa
cmc
nop
mov
in
decl
xchg
mov
stos
pop
lods
push
sbb
je
nop
mov
lock
xor
mov
push
shlb
popa
test
enter
idivb
cmc
adc
mov
push
push
je
mov
repnz
inc
outsl
dec
lea
int3
dec
mov
sbb
sti
jo
mov
adc
outsb
ja
mov
inc
loope
lcall
fwait
add
prefetcht2
fcomip
jo
push
add
add
popa
popf
inc
sarb
pop
mov
push
jl
in
xor
pop
or
push
xor
jecxz
leave
sbb
sbb
into
push
nop
ja
mov
imul
push
fcompl
pop
ret
push
enter
fs
sub
inc
movsb
sbb
lds
loop
jge
jge
or
xchg
test
rcll
push
and
cld
xor
enter
jle
jge
sbb
adc
xchg
rolb
add
in
addl
incb
lahf
adc
jmp
ficomps
xor
mov
dec
add
dec
jl
xchg
stc
push
lock
repnz
inc
or
fistpl
push
dec
adc
pop
lret
rcrb
shll
adc
mov
mov
add
loopne
pop
fldcw
mov
fcmovnbe
aas
out
sub
ret
cmp
dec
jae
test
popf
push
je
insb
mov
mov
adc
popl
jne
or
mov
pop
inc
inc
push
push
jne
bound
shlb
lret
lods
jge
push
rolb
and
rclb
fidivl
in
aaa
loop
xor
shlb
sbb
je
mov
add
pop
pop
adc
adc
and
shrb
push
pop
mov
jmp
pop
xlat
cwtl
enter
mov
inc
cmp
mov
and
add
pcmpeqw
jnp
sbb
call
aas
aaa
je
jle
insl
sub
adc
std
fmuls
mov
push
cs
xor
scas
jnp
std
pop
mov
stos
push
popl
lock
mov
xor
sbb
mov
push
sbb
out
cmp
rol
mov
outsb
leave
inc
out
imul
mov
repnz
mov
sub
rcll
rorl
in
aaa
mov
in
xor
fcomps
ds
adc
popf
roll
inc
ljmp
inc
cs
mov
push
cwtl
getsec
lcall
mov
dec
scas
in
int3
and
cmp
test
imul
mov
push
out
push
mov
add
arpl
sar
and
mov
jecxz
mov
mov
lahf
pusha
cmp
vmovsldup
sbb
daa
mov
pop
jg
pusha
mov
jno
mov
sbb
lds
dec
mov
jge
lock
sbb
add
shl
jae
dec
mov
repnz
cmpsb
fbstp
orl
mov
mov
mov
push
clc
rcr
mov
loopne
cmp
push
pop
mov
lahf
fists
dec
cwtl
sbb
mov
aam
add
ret
cmpsb
jmp
dec
dec
popa
repnz
mov
fimull
aam
insb
jle
push
lds
js
scas
inc
pop
and
pusha
jle
out
push
cmp
adc
add
pusha
insl
add
sahf
in
lahf
pop
adc
or
mov
inc
ss
sub
mov
aas
pop
xchg
sbb
add
xchg
mov
jne
aad
sub
pop
pop
scas
mov
in
js
test
jg
in
clc
pusha
shll
arpl
cmpsb
add
mull
cli
dec
xchg
stos
fwait
rcl
lods
pop
push
pop
sub
jg
in
movsb
dec
jnp
jp
cld
and
loop
pop
push
nop
xchg
loope
add
loop
aad
jg
fistpl
add
mov
fs
push
add
xor
sbb
cli
ss
int
jae
or
mov
pusha
adc
push
sarb
movsb
push
aam
test
pop
stc
in
fcmovu
clc
and
xor
cli
cs
mov
clc
sarb
bound
dec
fisubrs
jge
pop
popa
int3
lcall
sub
ret
aas
call
gs
inc
mov
jmp
lds
push
loopne
and
adc
ljmp
loop
ret
sub
out
dec
cmp
jp
or
pop
mov
mov
rcr
test
fildll
mov
and
add
outsb
dec
or
lahf
aad
data16
lret
push
cmp
add
icebp
add
lock
cli
push
pop
stos
mov
cli
mov
adc
insl
cmc
mov
sbb
pop
sub
aaa
cld
pop
sbb
addl
mov
cld
or
jmp
popl
add
aaa
mov
inc
push
mov
or
inc
fmull
shlb
inc
xchg
cmp
xchg
mov
or
stc
stos
rcrl
rorl
gs
sbb
push
inc
mov
jb
lea
mov
test
lcall
mov
mov
dec
mov
fcoml
out
mov
mov
push
ffree
in
rolb
clc
loope
sub
fcoml
rorb
call
stos
js
out
insl
movsl
aas
adc
jecxz
cmpsl
mov
lea
adc
shll
fcoms
aad
push
jl
into
in
push
mov
xchg
push
push
adc
loope
inc
mov
jge
or
or
ds
xor
pop
jns
push
pop
gs
cwtl
inc
jnp
jns
push
inc
leave
adc
call
pop
sbbb
cs
fildl
sbb
ja
push
int3
or
and
scas
leave
pusha
xchg
or
push
imul
ret
fmuls
loopne
incb
push
arpl
mov
cmp
hlt
pop
aas
fwait
mov
dec
ficompl
inc
fdivr
ljmp
js
fcomi
add
push
and
inc
xchg
ss
jge
test
ss
stos
push
mov
test
push
movsb
stos
pop
loopne
cmp
sub
shrl
fdivl
ficompl
lods
ds
jle
lds
cld
mov
lds
mov
mov
loope
xor
or
ret
add
mov
push
cld
jle
aaa
mov
or
jo
push
mov
add
push
outsl
push
adc
sub
das
push
and
add
sub
mov
mov
sbb
fisubrl
add
and
clc
adc
dec
rolb
cwtl
fstps
out
add
mov
inc
cmc
push
sub
hlt
sarb
mov
push
lea
xchg
sub
loopne
mov
je
outsb
scas
clc
xor
insl
inc
scas
or
nop
push
incb
pop
pop
sbbl
jo
aaa
xor
inc
adc
ja
enter
jae
mov
cld
ja
mov
in
cmp
idivb
add
mov
add
xor
data16
sbb
cwtl
rorl
xchg
jge
jae
loop
or
lcall
cwtl
loope,pn
shr
mov
sbb
loope
ss
xchg
daa
das
mov
stc
out
pop
loopne
in
loop
ret
and
or
dec
fisttpll
push
and
lods
and
aad
movsb
out
out
jbe
in
or
xchg
fistps
xchg
add
loopne
test
mov
cs
mov
push
rcrb
sbb
push
push
push
lcall
ja
popf
dec
add
or
test
xor
add
add
hlt
mov
ss
xchg
xchg
fdivr
sahf
fisttps
hlt
in
jno
xchg
or
arpl
outsb
and
leave
inc
rcrl
in
subb
subb
ret
add
lock
sbb
inc
sbb
adc
pop
add
jnp
mov
cltd
xor
scas
dec
or
xlat
frstor
popf
js
ds
sbb
push
mov
push
lret
adc
mov
fldt
add
jmp
jle
xchg
jbe
daa
add
cmc
sbb
mov
ja
mov
dec
and
cmp
jno
xor
aas
out
mov
inc
jb
movsb
lcall
lock
ss
push
push
mov
add
pusha
add
in
mov
inc
mov
fistpl
rcl
pop
mov
andl
push
paddq
insl
dec
mov
mov
and
mov
fcomi
cltd
jb
subb
or
cmp
xor
outsb
or
mov
jo
jmp
fsubrl
jl
andl
push
and
push
scas
andl
mov
mov
ret
adc
and
push
inc
xchg
lcall
testb
fucomip
data16
pop
dec
inc
std
push
sbb
sub
push
jbe
rcll
adc
or
add
mov
fmuls
rcrb
outsl
icebp
and
fsubrl
jmp
clc
popl
imul
mov
loope
cmpsb
pop
lea
adc
cmp
mov
insl
idiv
shrl
popa
pushf
mov
sbb
cmp
pop
shlb
loop
fisubl
xor
xchg
push
cmc
inc
pop
or
aad
mov
xorb
jmp
or
or
dec
roll
addr16
je
pop
movb
push
jg
dec
in
repnz
adc
add
add
addb
adc
jae
mov
jp
mov
clc
sub
std
add
add
dec
push
in
xor
jno
cmp
xchg
inc
jbe
sahf
jg
nop
lds
subb
push
into
ds
xor
mov
mov
call
call
cmp
adc
fsubs
push
push
xor
popa
cmp
and
sub
call
fstpl
dec
mov
mov
addr16
cmpsl
inc
popa
adc
loope
mov
ret
es
pop
sub
inc
ja
repnz
mov
and
mov
fs
insb
add
mov
mov
ds
loopne
imul
or
dec
outsb
sbb
push
mov
pop
imul
icebp
mov
xor
xor
sbb
or
push
fnstsw
add
sub
in
pop
faddp
lret
add
orb
insb
jae
jmp
fwait
xchg
xor
lahf
mov
hlt
xchg
push
arpl
and
dec
adc
pop
movsw
jecxz
push
xchg
sahf
sub
clc
mov
inc
bound
ljmp
test
int3
mov
add
xor
sbb
mov
aas
shrb
dec
push
movsl
xor
push
inc
test
aad
lock
filds
xchg
adc
lock
xlat
or
add
decb
sbb
shrb
ljmp
rolb
mov
jl
pop
ds
rcll
ret
add
add
push
loop
fstps
xlat
sbbl
push
add
mov
test
aad
xchg
push
hlt
aad
push
mov
dec
sub
fucomi
or
adc
repz
push
addr16
add
and
xchg
jecxz
push
cmpsl
pushf
push
out
pop
push
stos
test
adc
pusha
and
incb
fistl
fnstcw
xor
nop
inc
std
inc
push
mov
adc
jmp
pusha
xchg
ss
inc
movsb
mov
mov
mov
pusha
push
movsb
rcll
shll
jne
and
fiaddl
push
lea
sbb
push
add
or
jnp
mov
mov
pusha
jg
out
add
or
add
add
xor
and
mov
add
cmpsb
mov
or
bound
push
xchg
scas
js
mov
adc
mov
push
les
push
outsb
ljmp
xchg
inc
mov
imul
and
pop
ljmp
cmp
jl
push
cmp
lock
loop
dec
jl
outsb
add
mov
jp
shlb
jl
rclb
sub
push
pop
sub
inc
xlat
add
lds
push
ret
and
dec
adc
ret
js
adc
jmp
sub
scas
push
fdivr
int3
sub
adc
syscall
ficomps
loop
push
lock
std
popf
push
je
mov
xchg
scas
cli
movups
jmp
test
movsl
lock
mov
ret
add
test
push
jns
sub
cmp
mov
push
out
xchg
jg
cmpsl
sbb
into
fwait
lea
loopne
dec
xor
lea
mov
adc
jbe
mov
sbb
outsb
xchg
lds
hlt
or
stos
push
mov
xor
and
mov
daa
data16
and
lods
roll
push
sbb
into
fmull
adc
push
call
jb
mov
rcl
leave
adc
pop
hlt
mov
push
ljmp
mov
inc
xor
cmpsl
in
lea
add
cmp
push
das
jo
cmpsl
mov
call
add
addb
ljmp
cmp
jp
inc
add
add
test
adc
rol
sbb
push
or
adc
imul
push
aam
ja
loop,pt
mov
jae
sub
lret
mov
mov
push
cmp
inc
add
cmc
jecxz
out
ret
jno
mov
add
mov
sub
xorl
xchg
in
add
cmp
inc
mov
mov
push
push
in
xchg
sbb
je
je
lock
in
and
daa
or
xorb
jbe
cmc
mulps
pop
fcompl
sbb
hlt
push
adc
mov
jb
fstl
adc
out
mov
adc
and
nop
roll
mov
mov
mov
inc
push
rol
dec
aaa
mov
mov
mov
push
mul
push
mov
mov
jp
dec
stc
lahf
fistps
dec
std
sub
notl
mov
cmp
lock
into
lahf
das
jb
cmp
stos
mov
add
mov
movl
push
clc
test
fsubl
xor
xchg
jbe
ficomps
pop
imul
inc
dec
imul
mov
daa
popa
movsl
push
fnstsw
xlat
cwtl
push
adc
mov
mov
rorb
mov
jle
pop
cld
ljmp
aam
mov
xor
ret
jecxz
icebp
das
cmp
adc
and
sub
nop
jno
scas
xorb
in
hlt
mov
ss
and
mov
jns
mov
cli
cmp
cmp
insl
xchg
imul
sub
gs
inc
mov
icebp
push
cld
outsl
aad
clc
popf
dec
cld
push
lret
xor
add
std
push
sub
mov
test
ss
inc
cltd
test
int3
inc
mov
mov
mov
push
sub
sbb
clc
in
xchg
pop
push
inc
mov
mov
or
lods
push
data16
ljmpw
mov
sbb
mov
sbb
pop
pop
and
jbe
scas
xchg
call
lods
aaa
mov
jo
xchg
mov
mov
nop
or
xorb
in
dec
imul
jnp
mov
test
imul
push
pop
das
testl
out
out
and
push
int
stos
xor
int
fdivr
out
xchg
jbe
and
cmpsb
xor
adc
sub
cmp
xchg
fisubrs
xchg
loope
clc
mov
pushf
sub
jp
push
sbb
mov
xchg
pop
divb
xchg
fwait
or
jp
int
decl
cltd
fwait
or
mov
test
pop
lock
mov
push
enter
jle
pop
ret
pop
sub
rol
lods
jmp
mov
or
mov
mov
ret
adc
cmp
les
lock
insl
mov
inc
xorl
aam
xchg
lahf
dec
stos
rorb
clc
cld
mov
dec
mov
sbb
add
jp
fimull
ss
inc
jg
orb
push
movsl
imul
mov
or
pop
rclb
mov
mov
push
in
sub
or
popf
mov
lahf
add
add
or
pop
loop
out
in
aaa
stos
dec
mov
data16
mov
scas
inc
xchg
mov
pop
mov
dec
rolb
mov
loopne
xchg
push
arpl
clc
inc
sbb
xlat
dec
mov
dec
inc
add
ss
mov
pop
test
sbb
xor
mov
pop
cli
xor
or
xor
mov
lahf
xchg
or
clc
outsb
cmp
dec
xchg
jb,pt
xor
cld
pop
rclb
hlt
push
sub
data16
lret
pop
sahf
flds
jl
outsl
mov
mov
adc
mov
push
daa
sub
mov
in
push
loope
or
push
std
lea
inc
cmp
rcrl
dec
das
js
lea
fstl
jecxz
cmp
mov
fildll
cld
or
inc
add
or
sahf
mov
push
cmpsb
shr
inc
push
cmp
test
cmp
int
add
ficompl
xchg
mov
push
jns
sub
dec
push
clc
cmp
push
push
push
mov
add
jl
pop
jecxz
fwait
pop
mov
shll
cmc
push
or
ljmp
add
mov
adc
push
icebp
aad
sbb
nop
mov
and
mov
movsl
in
mov
mov
sbb
sahf
mov
jp
jo
adc
push
push
or
ja
add
cmp
pusha
mov
pop
pop
orl
xor
push
sahf
orb
fwait
mov
movsl
add
into
pop
mov
sbb
xchg
jecxz
ds
cmpl
and
mov
jns
fiadds
pop
out
leave
ja
scas
les
push
fisubs
and
or
pop
mov
adc
cs
mov
xor
cwtl
sbb
je
shl
push
adcb
int3
jns
scas
das
inc
cltd
jno
pop
mov
loop
movsb
mov
or
jle
pop
ss
xlat
adc
pop
clc
imul
xchg
lods
xor
cwtl
nop
pushf
push
jmp
xor
bound
outsl
mov
repz
add
clc
pop
xchg
xor
cld
data16
xchg
mov
add
pop
cs
add
sbb
rclb
arpl
loope
sar
jecxz
adc
insb
clc
dec
pushf
outsb
push
pop
outsl
adc
imul
sbb
test
fucomi
add
xchg
mov
sbb
pop
mov
or
out
movsl
xor
fisubs
ret
fcomip
sbb
ljmp
addb
outsb
mov
add
fdivr
lcall
cmp
inc
clc
filds
and
xchg
lcall
les
movl
jns
dec
std
js
mov
stos
loop
jmp
mov
mov
dec
out
jb
lret
xchg
imul
out
call
and
cmc
jmp
and
sbb
iret
in
mov
in
outsb
dec
cld
movsl
imul
loopne
test
pop
addr16
inc
sbb
pop
jge
push
loopne
nop
xchg
stc
dec
addl
std
les
cmp
xor
jle
mov
xchg
sub
or
psrld
hlt
insb
and
rcr
andb
ljmp
ret
lahf
mov
loop
insb
dec
cld
adc
sub
int
shr
iret
lret
mov
sarl
negl
push
pop
cmp
les
cmp
pop
and
shll
pop
xorb
cld
loope
dec
mov
imul
jae
leave
mov
decl
fldl
aam
iret
dec
inc
xchg
xchg
lods
xchg
ret
test
pop
sbb
mov
cltd
cmp
fucomip
or
fmull
in
fcomi
ret
or
repnz
mov
jp
jo
cmp
nop
pop
subb
xchg
mov
adc
adc
mov
ret
addb
and
loopne
xor
sub
fildl
inc
push
push
fnstcw
cwtl
mov
add
icebp
loop
fidivl
ret
push
mov
mov
int
mov
cmp
push
xor
outsl
dec
ja
cli
fistl
cmp
das
mov
add
aas
nop
push
dec
pushf
insb
sub
mov
sbb
or
push
lods
clc
sub
mov
mov
call
sbb
shll
pop
js
test
icebp
xchg
scas
jns
sub
sbb
inc
push
push
sbbl
ret
outsb
pop
or
push
sbb
repnz
ret
lahf
or
inc
mov
hlt
push
dec
lods
imul
push
add
fwait
and
dec
inc
pop
xor
out
xchg
cmc
add
mov
bound
ret
aad
push
loopne
xor
aam
movsl
xchg
lret
push
and
ret
cmp
jne
mov
mov
outsb
jle
xor
cmpl
lods
fwait
mov
jge
loopne
les
and
push
lods
cli
subb
aaa
jle
ljmp
mov
mov
std
lock
push
adc
xchg
pop
xor
mov
outsb
test
mov
add
ficoml
xchg
sub
sti
movsb
aaa
sbb
cmc
scas
mov
jb
sbb
dec
add
out
xor
xchg
and
mov
cmp
or
mov
jecxz
mov
cwtl
sub
and
imul
xchg
clc
hlt
jmp
or
cmpsb
pop
int
icebp
xchg
arpl
mov
and
jmp
fnsave
inc
mov
mov
shl
adcb
inc
lds
dec
ret
jae
ljmp
jmp
push
scas
or
lea
push
popf
jl
and
rcll
inc
push
xor
scas
dec
adc
std
ret
sub
mov
cmp
push
sub
ss
mov
add
lds
cmpsl
in
sbb
push
rcrb
adc
cmp
loopne
xchg
cmp
insb
js
sbb
neg
dec
mov
sahf
cmc
je
movl
dec
loope
push
into
mov
dec
hlt
mov
adc
xchg
or
push
rcll
mov
dec
pop
pop
mov
mov
iret
mov
pop
nop
mov
jae
push
sub
and
jle
sti
iret
fsubrl
out
mov
pushl
xor
repnz
push
adc
addr16
adc
xchg
je
inc
daa
dec
mov
and
lahf
jge
push
xor
push
pop
pushaw
fcoms
dec
popl
sub
sbb
cs
pop
adc
sbb
pop
jo
aad
sahf
and
add
or
dec
dec
ja
lret
nop
in
dec
or
mov
imull
push
scas
sti
pop
scas
cmp
add
jle
inc
mov
push
aas
es
jne
aas
xchg
cmc
test
pop
dec
mov
mov
mov
adc
jle
mov
push
shrl
adc
hlt
cli
sbb
and
mov
push
push
lock
out
out
and
jmp
ljmp
mov
das
push
pop
adc
sti
ja
add
jmp
divl
xor
push
cli
add
dec
xchg
scas
sar
pop
xchg
jmp
push
inc
inc
add
xor
pop
lret
fucomip
outsb
arpl
push
adc
test
and
or
rorb
mov
pop
mov
negl
jl
push
pusha
std
push
adc
or
adc
shr
inc
fsubl
add
or
cmp
data16
cld
inc
fisttpl
sub
out
push
rolb
mov
mov
icebp
inc
push
push
inc
and
adc
xchg
or
add
shll
add
mov
add
xor
imul
inc
xor
rcr
cmc
mov
dec
jecxz
mov
mov
ss
push
jmp
dec
mov
add
and
pop
jo
out
es
fadds
push
adc
inc
rcr
aam
and
xor
hlt
mov
mov
xchg
in
idiv
jae
pop
sbb
mov
push
adc
out
mov
sbb
jl
fstl
dec
dec
es
push
lcall
data16
adc
push
pop
cmc
sarb
cld
xor
cmpsb
or
or
mov
pop
cs
mov
stos
cld
stos
mov
stos
cmp
and
adc
fimuls
sub
orps
fstp
icebp
mov
shr
clc
sbb
inc
xor
add
and
shlb
scas
ds
jo
jno
mov
and
in
cmp
dec
mov
popf
cmp
scas
jle
or
jle
scas
inc
das
mov
sbb
call
add
ret
xchg
aaa
je
loopne
or
leave
in
ja
adc
push
lock
mov
lds
jl
clc
rorl
mov
push
jle
inc
push
aas
addb
loope
or
adc
jo
cld
add
cmc
mov
add
ret
or
mov
lock
add
loope
fidivs
ds
pop
inc
inc
mov
insb
mov
and
sbb
insl
lret
gs
cmp
xchg
xor
add
sbb
xlat
jp
or
shlb
dec
or
into
and
js
or
rcll
push
fidivrl
das
sub
mov
sbbl
ja
jl
imull
push
scas
aaa
fdiv
mov
cmp
test
xor
loopne
insb
ficomps
inc
ret
sbbb
sub
aam
pop
mov
pop
mov
or
mulb
sbb
dec
dec
clc
addl
enter
scas
sub
mov
and
imul
shrb
lock
add
dec
mov
mov
jp
call
bound
insb
mov
fnsave
mov
std
insl
mov
clc
mov
add
jnp
lds
mov
jp
andl
or
and
imulb
lods
inc
loope
inc
inc
mov
xchg
mov
lahf
add
dec
aam
mov
sbb
int3
daa
testb
dec
mov
loop
shrb
sahf
xor
dec
jp
add
test
and
hlt
dec
pop
mov
scas
es
pop
stos
call
mov
aaa
adc
in
pop
imul
cli
add
add
ss
inc
cmp
mov
sbb
sarb
cli
fs
lock
pop
out
sub
lcall
mov
push
js
inc
mov
push
in
pop
push
cld
xchg
sbb
addr16
incl
sub
pop
add
push
dec
push
pop
data16
or
roll
pop
movsl
lods
push
fs
pop
imul
push
sahf
decb
inc
sbb
fucomip
aad
mov
loopne
add
sbbl
test
ss
or
insb
sti
bound
sub
pushf
sahf
dec
sahf
xchg
pop
orb
jne
cmp
rorb
inc
fmull
pop
cwtl
dec
sbb
in
call
xchg
mov
adc
xchg
mov
es
or
mov
ljmp
push
ret
push
lahf
dec
pop
add
aam
addl
fdivrl
sbb
pusha
mov
xor
sub
movsb
loop
or
sub
clc
mov
pop
cld
movsb
clc
cmpsl
outsb
ljmp
mov
mov
mov
aaa
pop
pop
xor
jmp
cli
movsb
lods
add
sbb
push
mov
cmc
jo
add
add
gs
push
sti
dec
inc
and
fmull
and
adc
xchg
aam
ret
js
xchg
mov
sub
jbe
jo
push
xchg
aad
mov
sbb
jns
mov
iret
mov
inc
adc
dec
sub
xor
cmp
pop
push
add
sub
movsl
sbb
xchg
outsl
int3
mov
hlt
aam
les
stos
mov
outsb
fdivrs
mov
mov
sarb
in
fisubrs
mov
bound
sbb
in
xlat
mov
in
imul
cld
cmc
es
sti
pusha
mov
sar
ror
cmpsb
xchg
sub
stos
stc
xlat
fwait
insb
std
mov
add
es
mov
jecxz
sbb
xor
cmpb
test
xchg
in
cli
mov
push
jg
cmc
paddsw
add
sbb
subb
test
je
mov
or
xor
lock
mov
loopne
cmp
sub
outsb
jb
test
lahf
pop
cmpsl
mov
xchg
cmp
cmc
xor
mov
hlt
js
xchg
or
push
xor
push
outsb
mov
fwait
shll
lea
subb
cmpsb
js
mov
data16
mov
or
loop
sub
fcoml
shlb
and
insb
lock
es
pop
addr16
xor
out
inc
inc
ljmp
inc
cmp
push
pop
adc
and
pop
pop
fwait
inc
mov
adc
pop
mov
lcall
xchg
cltd
add
or
daa
push
push
push
push
pop
mov
das
ss
inc
inc
or
test
jle
mov
cmp
add
das
sbb
cmp
stos
sub
test
dec
jo
inc
clc
call
xchg
mov
je
xor
clc
sbb
cs
mul
into
jecxz
cs
cmpsb
mov
dec
bound
clc
or
mov
cwtl
mov
push
fimull
push
push
push
pushf
dec
arpl
add
orb
lret
fldl
cli
loop
cld
jo
xchg
mov
or
lcall
mov
push
andb
mov
outsb
push
test
sbbb
scas
sarb
inc
jge
jnp
jge
add
sub
inc
sti
push
insb
sahf
fwait
add
ss
rorb
in
sub
loopne
outsb
mov
mov
or
mov
dec
lret
aam
pop
dec
rclb
mov
cltd
inc
add
pop
mov
xchg
sti
adc
push
xor
ret
fidivs
xor
arpl
xchg
dec
xchg
js
xor
push
roll
pop
call
xchg
daa
cmp
out
jmp
adc
jl
ret
mov
xor
int
adcl
add
clc
or
sbb
data16
les
sub
mov
inc
addr16
adc
rorl
pop
xchg
cmp
arpl
dec
ret
mov
inc
inc
mov
sbb
dec
push
in
pop
add
pop
sub
in
jg
add
add
ret
pop
es
pop
insb
enter
jne
mov
cs
mov
cld
inc
sbb
cmpsb
rclb
push
js
mov
and
pop
jo
inc
add
xor
inc
div
leave
push
xchg
ret
or
lahf
pushf
pop
add
nop
or
sahf
jle
repnz
push
dec
outsb
arpl
les
insb
test
fisttps
push
int
pop
aas
ss
sahf
or
cltd
into
cmp
xchg
xchg
out
push
stos
pop
xchg
mov
sbb
stos
das
sbbl
call
enter
popa
loopne
pop
or
pop
add
mov
mov
pusha
jo
cmp
out
push
inc
cmp
mov
iret
div
cmp
mov
and
cmp
add
pop
orl
pop
adc
push
or
into
pop
ret
rcrb
loope
mov
or
pusha
mov
sub
or
ret
push
mov
bound
mov
or
in
outsl
push
jl
inc
add
push
sahf
lcall
lret
or
dec
push
jbe
pop
xor
int
lahf
loop
jmp
lret
outsb
mov
bound
orb
mov
inc
arpl
mov
jne
lds
inc
add
sbb
idivb
aas
dec
push
pop
pop
rcrl
das
add
push
stos
lods
mov
test
imul
js
adc
cmp
pushf
mov
jle
inc
call
cmpsb
add
enter
mov
cmp
fisubl
mov
or
xchg
test
mov
mov
lahf
cmpsb
cltd
jmp
cmc
mov
xor
push
or
xchg
lods
fimull
ret
pop
pusha
test
dec
bound
fildl
cmp
inc
pop
jle
mov
loopne
fistps
sub
outsl
mov
xor
rorb
mov
inc
jmp
rcll
call
test
ret
push
movsl
test
xchg
cltd
int
js
cmc
pop
ja
pop
jl
aam
push
jb
sub
test
int
add
inc
in
test
xor
mov
sbb
fisttpl
lret
and
xor
cli
ljmp
add
inc
loop
stc
push
push
movsl
in
push
mov
call
xor
cmp
call
fdiv
sti
rorl
js
or
addr16
test
popl
hlt
outsl
pop
lock
or
sub
pop
lea
inc
sbb
mov
incl
inc
add
les
fidivrs
push
or
lret
loopne
in
pop
inc
out
xor
cwtl
xchg
dec
into
test
mov
lea
enter
adc
mov
call
mov
xchg
mov
mov
je
jbe
jl
xor
aaa
adc
jle
notb
add
iret
pop
sbb
cmp
loopne
adc
add
bound
scas
or
and
mov
fsubl
pop
call
dec
jl
sbb
dec
icebp
sti
sub
aaa
adc
test
std
repz
sahf
loopne
pop
lea
and
jp
cmp
jge
and
dec
daa
push
add
fs
xchg
sbb
imul
add
xor
inc
add
inc
daa
scas
sub
jo
out
xchg
push
or
push
mov
iret
dec
pushf
shl
dec
add
mov
stos
cmpsl
or
loope
stc
decb
cwtl
outsl
ja
adc
les
inc
subb
into
mov
les
push
into
gs
push
adc
imul
popa
shll
or
jge
cltd
pop
stos
mov
and
dec
aam
pop
rclb
and
pushl
movsl
add
iret
outsb
inc
jg
aas
add
mov
sub
lahf
sub
inc
clc
cs
mov
mov
sahf
daa
xchg
add
mov
adc
orl
pop
cmp
ret
lea
call
pop
les
or
add
movsl
jecxz
jecxz
leave
push
and
cmc
ret
lahf
lods
dec
sub
dec
cmc
or
sbb
pop
mov
sbb
xchg
lock
adc
cld
xlat
ret
in
add
jmp
sahf
jae
adc
add
test
aaa
sub
hlt
fisttps
mov
loopne
js
pop
jl
fcoms
pop
daa
sbbb
cmp
and
mov
push
mov
jno
loop
out
and
lock
adc
pop
sbb
inc
add
rcll
test
and
cmpb
cmp
pusha
int
mov
jo
xchg
hlt
js
imul
sbb
mov
jg
iret
loope
sahf
inc
pop
loope
test
shrl
sub
mov
mov
mov
inc
push
decb
cmpsb
nop
add
xor
icebp
mov
imul
pop
pop
in
add
push
sbb
jbe
mov
hlt
sti
lahf
scas
and
lret
cmp
adc
or
sarb
cmp
addl
aad
dec
daa
sbb
insl
inc
push
and
sbb
mov
pop
out
sahf
sbb
mov
xor
bound
ja
sub
iret
sti
mov
dec
stos
ja
add
arpl
dec
loope
aaa
imul
sub
int3
lahf
out
sbb
ljmp
sbb
inc
loopne
scas
cmp
scas
sub
imul
xchg
adc
hlt
sbb
cmpl
fdivrs
cmpsb
inc
fidivrs
push
and
xchg
jp
iret
jl
xchg
pop
sub
mov
shrl
rcrb
dec
faddl
mov
push
or
fwait
icebp
jle
and
and
ret
xchg
jne
sub
andb
cmp
xor
loopne
and
mov
jge
jge
cmc
idivl
or
fisubl
lret
test
insl
test
aad
iret
jmp
inc
sti
jg
adc
adc
lea
dec
stos
jns
and
mov
sbb
nop
movsl
stos
mov
push
fistpl
xchg
adc
lea
pop
into
stos
or
cmp
std
pop
jmp
pusha
fdivl
imul
xor
fstpt
lock
dec
pushf
les
mov
mov
push
mov
int
inc
popa
or
mov
push
xchg
out
mov
mov
dec
fcoms
fdivl
cmpsb
or
das
inc
out
jecxz
mov
dec
dec
or
cwtl
rcrb
pop
sub
andb
dec
hlt
rol
jmp
icebp
fsubrl
fisttps
loope
out
in
sub
push
mov
cmp
mov
test
lods
inc
std
lret
into
bound
fidivrs
lock
out
and
jo
ljmp
dec
add
aaa
shll
ret
imul
rol
loop
imul
test
cmp
insl
movsl
and
jmp
sahf
dec
cmp
fmuls
out
sbb
stos
sbb
cmp
loope
sbb
pushl
push
xchg
jp
data16
inc
stos
pop
xor
aam
lock
jbe
sub
imul
ds
and
andl
or
push
and
mov
dec
jb
test
xchg
add
and
ljmp
xchg
aad
or
ret
xchg
add
or
adc
sti
lds
xchg
inc
popf
mov
mov
gs
lock
fs
mov
lcall
mov
cmp
push
inc
push
mov
cmp
sub
xor
test
mov
and
stos
les
loop
in
jmp
inc
mov
ds
mov
mov
dec
and
xlat
mov
jne
cli
call
mov
mov
pop
stc
add
mov
cmp
pop
push
pop
and
icebp
ds
pop
and
idivl
lcall
inc
arpl
dec
ss
mov
adc
mov
fwait
add
inc
xor
clc
imull
cmp
jmp
add
add
repz
push
mov
shll
stc
hlt
sbb
dec
js
adc
shlb
sbb
test
mov
mov
les
push
int3
push
dec
sbb
mov
clc
lret
xchg
lret
in
aad
jb
sub
ja
rcl
cmc
sarl
cwtl
dec
mov
movsb
jo
inc
or
cmpsl
mov
xor
lock
adc
push
cmpsb
cmp
popl
adc
ficoms
and
sub
push
jo
lcall
sar
xchg
dec
mov
push
push
jns
sub
mov
mov
cmp
cmp
lret
das
je
push
fdiv
ud0
adc
xchg
sub
popa
mov
lock
mov
fadds
dec
test
add
inc
fs
js
imul
pusha
stc
aad
faddl
push
jge
mov
shrl
movsl
loopne
lahf
jle
pop
jmp
adc
out
fldt
mov
js
xchg
sub
sbb
cmp
aaa
mov
push
push
fwait
outsl
insb
xlat
jae
pop
adc
movsb
sbb
cmpsl
mov
lock
outsb
pop
adc
idivb
cld
imul
inc
in
adc
test
sbb
popa
aas
jl
loop
xchg
test
ss
push
pop
and
sbb
sbb
adc
sahf
mov
sti
fucomi
dec
clc
orl
pop
cmp
or
pop
je
aas
xchg
pop
test
mov
lret
loopne
inc
jge
int3
andb
add
out
jg
cmp
addl
pop
pop
sti
adc
mov
lods
dec
xchg
mov
insb
sub
jle
pop
mov
shrl
dec
pushl
xchg
jnp
mov
pop
loop
sbb
mov
movsl
sub
pop
shll
js
or
cs
mov
jle
inc
lahf
in
ljmp
test
jle
pop
or
popa
dec
mov
jmp
mov
mov
rcrb
clc
arpl
push
data16
add
ljmp
dec
add
icebp
or
xchg
ret
pop
mov
pusha
jp
orb
ja
push
add
stos
mov
cmpsb
or
test
aam
repz
fstps
jo
nop
jnp
dec
int
push
in
addl
push
cwtl
sub
iret
pusha
insl
ds
sbb
incl
les
mov
push
push
sti
add
test
ret
inc
cmp
mov
scas
icebp
xchg
mov
mov
rcr
cwtl
ja
or
test
loope
int3
add
xor
pop
fidivrl
mov
or
mov
push
cmp
ds
xchg
test
jg
lds
ljmp
mov
jno
xchg
int3
or
xlat
mov
cli
jp
hlt
sahf
push
dec
test
add
pop
jbe
mov
mov
push
or
add
lock
inc
or
jle
shrb
mov
xor
mov
outsb
pusha
andl
cli
ljmp
inc
sbb
aaa
jns
xchg
mov
into
and
cmpsb
push
add
call
push
push
push
ja
testb
out
test
mov
lea
xor
sbb
lds
xchg
movsl
inc
sbb
clc
dec
or
mov
adc
les
dec
subl
jecxz
out
das
sub
mov
jecxz
mov
ss
mov
movsb
pop
cmc
rcll
ret
sbb
xchg
jb
jge
pop
jb
push
jmp
fnstcw
or
je
add
ss
rcl
aam
icebp
add
push
es
cmp
add
xchg
xor
pop
clc
sub
sbb
and
mov
jp
jnp
and
fstps
loope
mov
or
push
fwait
and
jp
push
mov
enter
push
dec
sahf
lds
pop
ss
aaa
lods
inc
sbbl
push
xchg
bound
es
jge
in
ds
shrl
adc
mov
bound
or
dec
and
loope
movsl
mov
in
shll
push
cltd
cmp
ret
je
cmp
sar
stos
aaa
push
push
lock
push
jbe
sti
mov
mov
ret
mov
push
sub
leave
jbe
repz
pop
push
xchg
push
scas
mov
mov
or
test
inc
lret
jae
push
add
pop
adc
pushf
push
jo
add
mov
scas
or
frstor
sti
addb
sub
xlat
xchg
test
jl
mov
js
mov
pop
jg
icebp
pop
enter
test
mov
add
pop
insb
loope
orb
icebp
push
xchg
lods
jp
test
xchg
sbbl
cmp
lcall
sub
loope
jnp
mov
mov
loop
imull
mov
mov
jo
jae
rcrb
repz
js
add
xchg
jno
push
pop
dec
fwait
cld
add
push
loop
loop
sbb
mov
cld
pop
mov
lcall
mov
shr
aad
lock
add
xor
dec
pop
sub
les
cmp
iret
jle
ret
stos
add
imul
js
test
mov
cmp
xchg
arpl
mov
lock
xchg
shrb
sahf
dec
add
aam
add
sbb
adc
ficoms
clc
test
emms
dec
mov
add
clc
mov
cld
jl
outsb
pop
sub
loopne
sbb
int3
adc
push
dec
add
insb
mov
cmc
addb
sub
ret
xchg
inc
mov
divb
pop
push
stos
sbb
push
das
mov
inc
jle
into
outsl
fcoml
imulb
adc
and
rolb
xchg
inc
cmp
pop
stc
mov
int3
inc
rorl
orb
add
out
arpl
pop
pusha
lock
push
cmp
andl
xor
xchg
pop
mov
mov
push
stos
repnz
cmp
ret
jae
int3
and
aam
sbb
cmp
ja
mov
mov
addl
icebp
mov
push
insb
insb
dec
orb
sti
lcall
lahf
divb
xchg
rol
lock
inc
jns
cmpsb
outsb
in
out
ret
mov
cld
dec
inc
push
add
lcall
addl
push
call
dec
or
mov
cwtl
out
xchg
mov
mov
sub
pop
divb
xor
add
loop
ljmp
test
addr16
sbb
pop
rclb
ret
pusha
popl
shll
mulb
xchg
insl
jns
jbe
pusha
jmp
call
sbbb
pop
jg
xchg
hlt
inc
sahf
fs
fisttps
inc
or
sbb
cli
mov
jg
mov
arpl
jo
pop
subb
push
test
mov
std
mov
das
pop
clc
sahf
mov
test
test
xchg
jl
roll
loope
mov
insl
and
outsl
rorb
lods
sub
xchg
outsl
jg
add
mov
clts
dec
ljmp
sbb
outsl
mov
pop
and
or
cld
test
fldl
add
inc
test
outsb
or
les
call
sbb
inc
out
enter
and
scas
scas
pushf
mov
lahf
adc
mov
pop
jnp
mov
mov
cmp
icebp
cmp
jl
neg
shrl
stos
pop
iret
cs
adcl
jne
pop
js
cmc
xor
or
jg
andb
stc
imull
xorb
and
test
adc
fists
fadds
xchg
in
xor
lds
aaa
or
sbb
push
ss
enter
ljmp
adc
lahf
data16
sbb
test
ljmp
adc
cmpsb
adc
or
cli
jno
dec
fbld
sbb
sub
push
xlat
adc
enter
scas
jp
sarb
push
pop
jmp
dec
fistl
lods
lcall
inc
push
mov
out
or
clc
mov
shll
push
movsb
jecxz
psllw
sarl
sar
stos
adc
mov
ret
mov
outsl
shrl
adc
xor
cmc
mov
push
xor
adcb
dec
push
mov
add
cmp
push
ja
lea
imul
cmp
or
sbb
or
int
test
ds
lret
push
std
lahf
xchg
push
mov
pop
pushf
je
loopne
out
loope
ljmp
clc
or
xchg
and
loope
mov
out
mov
lods
sahf
inc
adc
ljmp
ds
leave
xchg
mov
test
push
jl
cmc
rorb
orb
mov
es
adc
sbb
xchg
test
fs
lods
lds
fldcw
dec
cld
adc
inc
add
jns
ret
mov
div
cmp
mov
inc
rolb
in
and
adc
push
push
add
lock
push
or
push
jno
in
pop
mov
dec
add
xor
pop
adc
mov
fisubrl
and
incb
dec
rcrb
mov
lods
imul
lret
loopne
push
bound
inc
mov
xor
inc
mov
or
mov
xchg
enter
test
push
mov
enter
loop
test
popf
xor
lcall
out
inc
in
clc
mov
add
xchg
add
int3
and
or
mov
orl
das
scas
iret
pop
jnp
rcll
sbb
ss
mov
rcl
repnz
sbbb
sbb
add
xlat
sahf
mov
sub
movsb
fiadds
ljmp
xchg
jae
sti
setg
jb
push
testl
add
ja
push
stc
clc
adc
pop
pop
mov
ss
in
dec
lret
lea
popf
cld
xor
pushf
jno
aaa
dec
movsl
xchg
lods
or
mov
xchg
clc
add
ds
jbe
xchg
jo
les
repz
cmp
call
jbe
cmovns
lock
mov
mov
test
lret
nop
cld
fistpl
sub
int3
mov
test
add
dec
incl
cmp
add
xchg
push
pop
cmpsb
rorb
cmpsl
push
sbb
cmpsl
xchg
fs
push
mov
dec
mov
aad
and
out
std
lahf
inc
sub
jno
repz
fstpt
stos
push
add
or
lahf
lahf
sub
lcall
add
leave
sti
in
shr
inc
or
pop
arpl
cmp
and
das
dec
lock
pusha
outsb
push
decb
pop
add
fucomip
or
sarl
clc
and
push
arpl
insb
inc
lea
xchg
add
sub
aam
inc
adc
lcall
inc
rclb
pop
fstps
jne
les
sbb
add
push
js
jmp
in
and
je
ret
xlat
jp
lret
fdivrs
insb
fisubrl
dec
jge
ljmp
lret
jp
and
pop
dec
int3
cmc
pop
mov
test
xor
or
xor
lods
push
pop
ds
lcall
xchg
mov
add
test
aad
rcrb
xor
mov
mov
inc
and
dec
xlat
notb
cmc
jb
movb
cltd
loope
test
sti
inc
gs
ret
push
fnstsw
jp
sbb
xor
sub
repz
push
pop
into
fdivs
insl
xchg
sbb
sub
inc
push
mov
cmc
cwtl
loop
sbb
arpl
sbb
lret
and
aam
cmp
jge
cmpsb
and
lahf
push
jg
add
mov
push
cs
outsl
mov
pusha
jne
lret
insb
sbb
es
push
sub
stos
imul
push
push
jae
inc
loopne
jb
call
mov
and
jns
dec
jae
bound
ror
sbb
cmp
jb
push
mov
inc
clc
cs
orb
dec
jecxz
sbb
mov
sub
dec
inc
clc
insb
mov
out
mov
das
daa
or
jmp
outsb
inc
jg
pusha
sahf
lock
addr16
mov
add
stc
sti
popl
and
inc
push
adc
test
gs
xchg
xchg
sbb
pop
stos
sahf
mov
push
mov
push
mov
jns
js
pop
adcb
mov
imul
repnz
mov
jl
les
std
xchg
or
stos
fldenv
jp
ret
dec
ljmp
sbb
fldt
jecxz
xor
cvtdq2ps
push
cmp
mov
and
and
jnp
sbb
test
int
sbb
imull
les
jno
sbb
jp
mov
ret
data16
dec
mov
jg
test
test
cwtl
xchg
dec
jae
ret
inc
xor
push
cs
add
stos
add
xor
mov
orl
add
xchg
pop
push
jge
mov
push
and
pop
and
cli
cld
int3
cmpsl
adc
mov
je
imul
rolb
ss
and
sbb
pop
fcmovb
pop
push
xchg
or
shlb
and
push
out
ret
add
inc
scas
fsubrs
mov
mov
sahf
jmp
mov
inc
cmpsl
movsb
inc
sar
add
inc
mov
adc
mov
mov
loop
out
aaa
sub
add
std
mov
sub
inc
add
cmpsl
dec
pop
cbtw
lret
mov
loopne
jg
add
clc
cmc
pushf
mov
jl
push
inc
mov
subb
ds
call
out
cmp
dec
iret
mov
inc
jne
or
mov
pop
or
xorb
pushf
sbb
inc
in
jmp
mov
mov
jecxz
mov
sub
pusha
xlat
dec
lcall
fcmovnu
call
push
enter
or
mov
fildll
addb
test
sub
lret
das
mov
add
das
or
insb
enter
mov
fcompl
mov
repnz
cwtl
bound
pop
mov
lret
push
scas
xor
jno
fcomps
sahf
cmp
mov
ret
lods
test
scas
mov
lods
xchg
mov
jo
pushf
cs
mov
fdivrs
dec
mov
dec
mov
mov
movsl
mov
call
les
fstl
add
pop
mov
icebp
mov
sbb
add
loop
iret
mov
adc
shll
test
stos
lods
jecxz
or
push
xchg
test
mov
repnz
outsl
dec
add
addl
addl
sbb
push
call
dec
sbb
test
decl
add
adc
sbb
cld
idivb
inc
adc
cmp
inc
sbb
xor
pop
inc
pushf
inc
cld
rorl
add
loopne
dec
mov
mov
push
scas
xor
jbe
xchg
lods
fcomps
add
mov
add
aas
adc
clc
cmp
jle
dec
cmpsb
push
or
xchg
xor
add
push
dec
dec
imul
add
jp
mov
xchg
fs
sub
cld
out
push
or
push
clc
inc
lcall
scas
icebp
hlt
aas
ds
fbld
imul
xor
icebp
sub
das
gs
repnz
mov
fs
jg
mov
push
lret
mov
xor
jmp
in
sar
repnz
pop
fs
jp
jg
inc
xor
ja
xor
mov
adc
dec
and
testl
pop
pop
dec
mov
rorl
and
add
fsubrp
add
mov
scas
mov
es
push
cmp
push
sub
cmpsl
sbb
call
add
stos
or
mov
cmp
ret
in
and
push
outsb
jp
scas
mov
nop
stc
dec
or
popa
mov
int
and
mov
test
inc
or
xor
fidivs
rclb
or
outsb
push
popa
push
sbb
js
sub
mov
mov
fdivrl
shrb
dec
mov
scas
add
push
mov
push
sbb
loopne
mov
push
xor
pop
jmp
ret
loopne
or
push
insl
dec
shr
add
mov
sbb
int3
jnp
jg
add
aas
push
out
and
mov
xchg
mov
pushf
jnp
and
rol
mov
cmp
out
fs
xchg
or
or
and
dec
add
addb
outsl
or
mov
ret
lods
push
das
cmpb
adc
out
std
je
jp
inc
adcl
and
mov
or
scas
dec
shlb
out
insb
push
clc
sti
xor
add
add
pusha
cmpl
lock
popa
xor
filds
or
push
inc
stos
pop
addb
push
lahf
mov
cwtl
pop
mov
cld
jecxz
fsubrs
cmp
mov
cmpsl
scas
sahf
cmp
ljmp
aas
pop
fs
push
xlat
imul
mov
repnz
mov
cltd
and
das
mov
clc
pop
leave
cmp
lret
inc
sbb
lock
or
sahf
cmpl
inc
out
mov
push
shl
inc
sub
jbe
sub
ficomps
es
mov
out
inc
mov
shll
ds
std
icebp
aas
push
jp
mov
sub
lahf
stc
imul
xor
push
cmp
add
iret
rorl
push
leave
add
and
bound
or
and
out
sub
push
cmp
jmp
pop
cmp
dec
jo
xchg
push
sar
lret
icebp
mov
add
sbb
and
cmp
jbe
xchg
push
enter
stos
rcll
movsl
xchg
shll
jno
sub
xchg
dec
outsb
adc
sbb
jg
add
jmp
call
repnz
call
cmpsl
sbb
push
mov
jecxz
call
add
repnz
ss
sbb
in
test
jl
push
sarb
or
push
add
mov
adc
iret
mov
dec
insl
or
cmp
and
sti
int
or
aam
es
rclb
mov
add
orb
sbb
sbb
inc
cld
fidivl
ljmp
jo
aam
aad
jno
out
mov
mov
mov
or
mov
xor
in
add
mov
dec
add
call
nop
or
cmp
or
test
xor
daa
jle
xor
cs
xchg
aad
or
cmp
adcb
mov
add
lret
inc
cmp
jg
inc
mov
pop
out
mov
xor
add
mov
outsl
call
aam
mov
push
shrl
lds
adc
mov
jbe
mov
adcl
sub
movl
cmp
ret
inc
sub
in
jns
fmuls
inc
into
call
stos
jo
inc
incb
pusha
adc
push
popf
shrb
push
shlb
js
out
in
jl
xchg
shrl
int3
mov
ja
lret
je
add
shll
loop
lret
adc
cmpl
xchg
cld
mov
shlb
xchg
mov
jo
imul
mov
add
xor
je
cld
cmpsl
jb
andl
addb
inc
cmp
dec
pop
pushf
out
testl
mov
inc
pop
lea
loopne
inc
stos
jle
add
cwtl
inc
push
call
jbe
fwait
dec
out
outsl
loope
cltd
call
lods
dec
jae
aas
sbb
sbb
xchg
mov
jbe
clc
pop
jnp
sbb
data16
or
addr16
push
mov
aaa
cmp
add
daa
popa
xor
clc
scas
into
dec
repnz
inc
mov
sbb
orb
in
push
ljmp
push
andl
adcb
les
fmulp
shlb
and
out
fildll
aas
nop
jo
adc
pop
dec
cmp
cmp
bound
xchg
sub
test
xchg
test
clc
mov
sbb
jl
mov
int
sahf
pop
insl
mov
add
pushl
fisttps
dec
mov
das
jp
ss
lcall
xchg
imul
sarb
xchg
ss
mov
int3
cmp
add
arpl
pop
shr
mov
xor
mov
fcomps
sti
or
cli
adcb
push
push
sarl
outsb
xchg
cmp
test
mov
std
pop
out
inc
int
call
sub
sub
sarb
mov
leave
js
push
call
and
jge
cmp
xor
aad
xchg
xchg
pop
dec
xor
shrb
mov
xor
pop
cld
test
mov
mov
sub
lret
pop
mov
ret
xchg
cld
xor
mov
or
or
xchg
mov
dec
sub
push
aas
jle
push
arpl
push
jns
cmp
sub
mov
adc
iret
aas
mov
mov
jbe
cld
ror
negb
xchg
push
xchg
repnz
out
adcl
mov
xor
and
inc
push
jge
dec
rcrb
ss
or
adc
in
jne
inc
add
mov
dec
fs
cmp
or
ret
hlt
pushf
stos
scas
mov
enter
or
ret
shlb
lret
js
mov
jb
adc
push
test
mov
testl
adc
or
fidivl
cld
push
js
cmp
sbb
stos
or
inc
pop
loope
icebp
or
cs
adc
mov
xor
or
pop
mov
mov
test
lea
loopne
or
cmp
jb
clc
adc
jl
popf
xor
fwait
int3
xchg
inc
sbb
or
andb
pop
jl
mov
cmp
xor
mov
push
adc
add
mov
jecxz
lock
jo
mov
pop
add
mov
and
inc
adc
clc
lds
roll
xor
mov
in
adc
cmc
or
cmp
loop
mov
mov
xchg
fsubrs
push
js
loope
scas
or
orb
mov
fildll
pop
xchg
mov
inc
andl
fistpl
popf
add
push
out
andb
insb
add
add
sbb
popf
ljmp
xchg
inc
or
bound
or
lods
aam
dec
jecxz
lret
mov
ret
cmp
xchg
shlb
cmpsl
lahf
idivb
imul
pop
in
fdivl
and
inc
jl
push
jb
rorl
xchg
mov
cbtw
mov
adc
xorl
inc
sti
inc
xchg
into
pop
rcl
dec
pop
mov
mov
or
scas
rep
push
neg
cmp
mov
pop
mov
out
stc
loop
jg
and
pop
andb
mov
adc
jge
aam
das
add
stos
pop
cmp
cmc
mov
pcmpeqb
mov
loop
xor
push
xorl
stos
mov
add
js
imulb
jo
pop
add
stc
push
movsb
inc
mov
sbbl
mov
mov
or
cmp
cmp
push
lds
icebp
frstor
out
test
fimull
lds
repz
xchg
out
test
aam
jmp
aad
xorb
out
stos
push
sbb
sub
adc
pop
sbb
xor
inc
mov
gs
scas
icebp
and
jle
out
add
mov
mov
inc
test
ljmp
mov
movsb
ss
adc
inc
cld
push
out
dec
dec
xchg
and
icebp
ds
and
mov
mov
mov
out
mov
insb
dec
push
in
inc
xchg
dec
test
jb
sarl
cld
inc
xor
sub
fnstcw
andb
jne
fsubrl
lcall
pusha
cli
jl
enter
jl
mov
out
push
imul
adc
lea
int3
cmp
ss
in
mov
bound
xchg
cmpsb
add
jecxz
into
push
inc
sti
adc
cltd
pop
mov
xchg
lock
push
cmp
xchg
sbb
dec
addl
mov
int3
rcrb
imul
daa
pop
icebp
repnz
inc
adc
xlat
aad
jno
cmc
ss
add
mov
cmp
push
ss
pop
sub
dec
rcll
add
scas
jmp
sbb
movsb
sbb
movsb
xchg
pusha
mov
add
inc
outsl
shll
cwtl
and
and
ss
sub
loop
mulb
les
push
xor
pop
mov
fistpll
sahf
data16
inc
push
mov
cmp
push
es
enter
aas
out
and
jp
jle,pt
flds
jle
mov
and
push
shl
insl
cli
decl
and
repnz
in
mov
cmc
int
or
lds
xchg
lahf
add
imul
pop
call
xlat
xchg
lahf
repz
insl
in
cmp
rorl
sbb
shl
out
cmp
scas
ret
fimuls
imull
inc
push
or
cmp
jle
cld
movb
fiadds
fwait
data16
xor
test
sub
adc
jg
or
pop
scas
insl
daa
inc
push
push
enter
add
je,pn
loopne
cmp
dec
xor
fsubrl
jmp
jns
inc
frstor
jnp
mov
sbb
dec
fisubrl
mov
pop
pop
fsubrp
fnstenv
push
loop
in
sahf
or
ds
sub
xor
or
sbb
sbb
insb
inc
mov
pop
pop
cltd
jl
pop
gs
cmp
and
mull
cmp
icebp
cltd
call
add
mov
mov
les
roll
rolb
push
sub
push
and
dec
inc
add
jns
add
lret
fadds
lock
je
nop
call
push
pop
jp
xchg
push
leave
cmc
or
pop
ret
scas
adc
fiaddl
mov
pushf
lods
dec
adc
sbb
scas
xchg
mov
jo
sub
jp
pop
std
out
xchg
cmp
lret
add
lock
adc
pop
or
fdivrs
sbb
jo
cmc
sbb
or
stos
adc
cwtl
cmp
test
or
sub
std
add
xor
jp
or
aad
fcmovne
loop
inc
pushf
shll
cli
xor
out
sbb
jbe
push
push
cltd
iret
jo
or
int
lcall
xchg
xlat
and
mov
inc
or
std
xchg
std
orb
sbb
imul
mov
addr16
cmp
cmp
push
and
in
ja
mov
mov
leave
xchg
repnz
add
cmp
pop
sbb
jo
sahf
jecxz
xor
ret
inc
mov
lds
in
add
sahf
xchg
xchg
dec
add
pop
dec
dec
test
mov
pop
ret
add
adc
jecxz
dec
sbb
adc
add
mov
ss
ja
add
xchg
jle
push
cld
jns
xor
divb
out
icebp
sub
loopne
push
add
jbe
decl
mov
fdivr
jecxz
lods
pop
sub
insl
cwtl
adc
dec
fs
cli
loopne
jnp
in
outsb
loope
mov
ja
mov
lahf
lock
mov
dec
xor
out
fiaddl
push
shrl
sub
add
mov
rolb
pusha
lcall
lds
xlat
imul
lods
mov
lea
cwtl
jp
fimull
jno
mov
test
cmp
cmp
rcrb
jge
mov
push
flds
add
pusha
pop
hlt
ret
loopne
cmpb
in
hlt
dec
mov
pop
and
push
insb
icebp
push
cwtl
add
push
mov
popf
gs
pop
imul
and
repnz
pushf
adc
add
sti
or
dec
xor
fwait
pop
sar
cmp
jle
xor
cmp
in
test
mov
pop
or
inc
xor
aas
lret
icebp
adc
or
ljmp
xor
out
fsubrl
or
jmp
sarb
in
fchs
mov
out
mov
adc
je
mov
inc
xor
in
lock
leave
adc
inc
add
xor
loopne
pop
test
sarb
js
fwait
lock
push
pop
add
cmpsb
push
pushf
adc
jb
sub
imul
lcall
sub
aam
mov
add
mov
daa
inc
jg
outsb
insl
out
mov
cmp
inc
xchg
iret
add
mull
cli
jnp
mov
mov
cli
imul
add
sbb
mov
pop
mov
ds
inc
mov
xor
dec
or
pop
pop
and
js
jmp
fs
mov
icebp
push
sar
in
out
fdivs
lret
lcall
loop
arpl
stc
lret
daa
pop
nop
sar
mov
jnp
int
dec
jecxz
xchg
cld
test
aam
cmp
scas
xor
xchg
adc
adc
movsl
add
push
decb
mov
fists
pop
push
dec
fsubr
xor
xor
clc
loop
mov
sub
sbbl
ja
mov
ds
jo
lds
cmpsl
mov
jo
or
mov
jmp
popf
push
outsl
push
cmp
adc
pop
out
xchg
and
push
inc
and
pop
lret
pop
movsb
fwait
mov
push
out
out
js
push
daa
enter
push
pop
incl
mov
arpl
add
test
ss
xchg
mov
sub
subl
mov
mov
mov
fs
pop
mov
fcmovne
pop
cmp
rcr
pop
pop
dec
in
test
sub
daa
mov
inc
dec
shrl
test
jp
out
outsb
sbb
lret
mov
iret
pop
jecxz
mov
dec
fistps
shrb
loope
mov
int3
cmc
dec
jmp
jle
xor
sbb
jp
sub
xchg
mov
rorb
movsb
out
or
arpl
sub
outsl
shl
fisubs
pop
push
add
pop
push
mov
punpckhbw
sub
sub
stos
jecxz
sbb
push
lods
xchg
cmp
out
repnz
test
or
push
mov
mov
sbb
mov
push
cmpl
xchg
cltd
push
push
test
fisttps
paddusw
sub
sub
pop
add
insl
xchg
inc
imul
cmp
lcall
lret
shrb
add
popa
lea
jbe
xchg
cld
inc
cpuid
out
call
loopne
mov
pop
imulb
ret
adc
pop
je
jecxz
xor
daa
mov
out
xor
lock
jl
mov
add
cli
inc
mov
mov
loopne
mov
jb
inc
sub
pop
pop
loopne
push
xchg
stos
nop
lods
push
sbb
xor
cmp
les
stos
sarl
sti
je
dec
sub
mov
xorl
and
push
mov
push
lcall
fisttpll
xchg
js
out
mov
mov
and
adc
jle
cmp
aaa
decb
addr16
mov
pushf
mov
lods
cwtl
out
inc
xchg
xchg
flds
adc
loope
inc
sti
add
xor
mov
jbe
fsts
rcl
loope
cld
lods
cmp
out
out
jmp
cmp
inc
jl
jmp
dec
push
sbb
lods
jg
or
mov
dec
cld
js
nop
xchg
adcb
sahf
mov
hlt
les
popa
or
inc
repz
outsb
cs
xchg
mov
add
outsb
outsb
in
dec
pop
sub
push
sub
mov
loop
shl
add
into
jbe
mov
adc
cs
cmpl
pop
inc
std
out
mov
sbb
addl
jmp
mov
push
in
loopne
inc
pop
movsb
jno
je
add
fidivs
rcl
jo
mov
and
movsl
push
jge
pop
jb
in
mulb
outsl
js
scas
and
push
outsl
ljmp
stc
and
dec
or
jle
nop
cld
stc
out
sub
or
push
clc
dec
push
imul
jmp
mov
into
inc
daa
inc
push
pop
rcrl
call
push
rorl
sub
add
add
xchg
push
jl
mov
sbb
out
movsb
out
add
lea
andb
or
xchg
jle
xor
adc
push
repz
xchg
cltd
insl
adc
xor
arpl
rolb
mov
jge
push
sub
mov
popa
sub
xor
mov
sbb
lahf
ret
cwtl
cld
push
sar
je
mov
xor
xor
shrb
push
dec
test
xchg
call
mov
mov
push
shrl
subb
jae
fnstcw
int3
inc
rcll
mov
and
test
mov
add
jne
shl
mov
dec
jae
or
rcrb
sbb
push
cmp
jl
mov
pop
lock
jecxz
cmp
xor
sbb
out
shlb
xor
push
push
arpl
or
mov
push
add
fistpll
cld
vpmadcswd
arpl
mov
jp
lds
and
daa
push
jb
jae
ja
pop
insb
pop
lea
mov
xlat
lcall
or
mov
jg
ret
pop
sbbb
add
mov
pop
sahf
outsb
loop
iret
cld
xchg
adc
lret
cmp
shlb
loopne
sahf
push
jp
jne
das
aaa
es
xlat
ret
popf
dec
das
test
mov
dec
sub
push
pop
mov
mov
pop
push
sub
mov
jb
loopne
pop
mov
stos
mov
push
hlt
add
out
add
add
scas
shl
mov
ror
mov
outsl
add
sbb
inc
or
and
filds
xlat
or
push
sub
sarb
jmp
push
mov
pop
xchg
jle
dec
or
and
out
fldenv
cli
insb
and
mov
pushf
jno
stos
mov
xchg
jo
adcl
lods
stos
xor
mov
aam
sub
mov
and
imul
addl
or
popl
into
lock
daa
addr16
push
mov
xlat
ds
adc
or
dec
call
inc
das
pop
xor
popf
shlb
negb
rcll
shll
lahf
ret
pop
inc
sarl
fsubs
inc
popl
loopne
jno
mov
xor
push
arpl
fcompl
lahf
cmp
jle
inc
shrb
in
or
mov
orl
mov
adc
addb
add
or
roll
xchg
sbb
jmp
jg
not
lods
repnz
jb
and
inc
lds
dec
outsb
fisubrs
seta
lods
xor
xor
in
sub
test
nop
xchg
push
add
or
add
dec
movsl
mov
scas
fucom
sub
add
dec
mov
push
mov
sbb
pop
cld
pop
mov
sub
daa
in
lods
out
out
add
pop
in
in
mov
push
push
inc
leave
in
lret
add
jp
or
sbb
int
lahf
push
pop
adc
or
test
cs
fildll
push
insl
jp
in
sub
dec
and
add
lock
cli
push
lods
ljmp
adc
jbe
aam
mov
call
sbb
rorl
scas
jo
jnp
lcall
inc
xchg
sarb
xor
setb
mov
pop
pop
and
push
fistps
push
jmp
adc
pop
pop
xchg
sbb
in
addr16
cwtl
mov
add
pop
pop
mov
cmp
xchg
loop
mov
cmc
mov
cmp
loopne
push
mov
lahf
repnz
sbb
loop
lock
push
ret
addr16
popf
mov
xchg
xor
mov
rcll
out
or
lcall
push
inc
push
jne
inc
mov
add
add
mov
pop
add
cld
test
loop
inc
sub
lds
loop
fistpl
cmp
jbe
xchg
or
xor
fstpt
pop
adc
fsubrp
push
cmp
push
test
outsb
movsb
push
mov
or
pop
jb
stos
push
es
and
pop
or
dec
adc
aad
fsts
into
enter
vpsrld
nop
movsb
out
subb
repz
mov
xchg
test
add
add
sbb
ret
aad
ss
inc
popa
sti
bound
adcb
ds
jae
sbb
inc
mov
mov
xchg
call
push
enter
sub
fidivrl
in
jo
js
call
pop
aas
je
cmpsl
mov
insl
sti
cmp
lret
data16
cmpsb
fistl
pop
xlat
mov
dec
mov
push
adc
add
in
pop
stos
mov
insb
fcomps
loopne
loopne
idivb
xchg
push
pusha
sahf
xor
or
dec
pop
pop
sub
mov
xchg
std
js
jecxz
pop
ror
inc
loope
or
sub
jle
or
adc
mov
mov
pop
lock
add
mov
icebp
loop
nop
repz
pop
mov
mov
rorl
ret
pop
shlb
pop
adc
add
mov
jmp
xchg
jg
ret
outsb
add
or
sti
jne
into
xchg
arpl
jg
push
lret
dec
sbb
negb
push
sbb
scas
jp
jge
push
stos
je
fldlg2
fmull
or
sub
push
lods
dec
pop
dec
xorl
jl
jmp
ficompl
or
inc
pop
or
and
pop
inc
cltd
jno
faddl
shl
test
in
xor
mov
cmp
mov
out
mov
daa
in
fildll
jo
pop
and
int3
xchg
shrb
push
add
outsb
les
pop
sbb
insb
vunpckhps
ret
dec
jo
out
xchg
mov
mul
or
mov
xor
cmp
in
jbe
or
xchg
push
sub
sbb
adc
sbb
dec
jno
jnp
stos
adc
data16
sbb
scas
jle
sbb
xor
aas
sti
je
es
movsl
pop
lock
jbe
add
push
sbb
cmc
push
sahf
mov
pop
pop
and
dec
sbb
add
add
jno
popa
add
jae
rorb
xchg
fcmove
mov
push
outsb
or
in
call
xor
mov
aaa
bnd
stos
inc
push
add
ret
add
in
inc
aas
sub
clc
test
mov
sbb
scas
or
sti
test
bound
lret
jae
push
xchg
rolb
test
rol
push
dec
mov
jg
inc
lock
mov
das
dec
inc
jg
decl
enter
adc
xor
int3
cmpl
movsb
mov
fstpt
sub
adc
pop
out
push
or
out
daa
fs
cld
dec
fstpl
mulb
jp
dec
mov
aas
dec
out
push
inc
inc
cmp
cmpsl
das
mov
adc
fs
jmp
add
push
push
jp
mov
stos
mov
out
and
leave
ds
fsub
push
push
sahf
add
xchg
mov
sub
lea
cmpb
and
lret
sub
inc
add
mov
jmp
mov
out
ror
and
lods
std
shrl
lret
xchg
xchg
js
dec
sarb
je
cmp
and
into
inc
pop
pop
in
cmp
jnp
add
pop
icebp
jmp
lods
jp
jle
adc
push
enter
out
negl
ss
sbb
das
adc
imul
mov
lret
mov
adc
fwait
pop
add
add
mov
jo
sub
adcb
mov
add
loopne
outsb
imul
inc
mov
mov
addb
xor
cld
mov
dec
and
or
pop
xlat
mov
push
and
add
xor
adcl
shlb
xchg
out
addl
add
cmp
or
aaa
cmc
xor
invd
pop
in
out
fldl
ret
sub
mov
imul
pop
pop
pop
jmp
inc
mov
inc
lret
insl
ret
inc
jp
dec
adcl
push
pop
in
jmp
add
jg
fsubl
push
lcall
dec
stos
sbb
and
pop
pop
iret
mov
inc
jmp
out
scas
loope
xorl
subb
mov
stc
popa
aad
mov
mov
cld
and
mov
js
or
mov
sub
aaa
das
pop
ficompl
mov
pop
jo
mov
mov
repnz
aas
xor
add
jle
mov
mov
push
test
jecxz
jnp
adc
ficoml
sahf
xor
dec
outsl
push
cmpb
adc
rclb
adc
popa
ret
movsb
idiv
or
lea
sbbl
rorb
mov
lods
cmp
ss
mov
pushf
lahf
mov
pusha
mov
pop
aad
clc
dec
mov
mov
hlt
call
clc
mov
cmpsl
inc
xor
hlt
pop
or
mov
cwtl
outsl
mov
inc
xchg
lret
or
sub
inc
stc
xor
jbe
jne
push
dec
dec
mov
aaa
sub
into
push
cmp
pcmpeqb
sub
js
lds
dec
cmpsb
dec
aas
test
testb
mov
js
cmpsb
jns
jg
loop
rcrb
aaa
pop
jge
jmp
lcall
imulb
mov
rcrl
sahf
sti
icebp
xchg
out
mov
sti
inc
arpl
add
pop
mov
xchg
pop
push
inc
mov
xchg
aad
pop
cmp
in
repz
je
jb
outsl
rorb
icebp
dec
mov
loopne
jbe
cmp
mov
adc
movsb
jo
aas
je
aaa
inc
mov
xchg
and
dec
push
nop
loop
div
mov
jp
ret
add
lods
xchg
nop
and
and
je
mov
jmp
outsb
addr16
pop
out
jo
cmp
push
inc
pop
imul
sbb
hlt
jne
shrl
icebp
in
aam
stos
jnp
cld
stc
cmp
cmpsb
cmc
cmp
shlb
add
insb
pop
mov
es
mov
ss
fwait
ds
dec
clc
dec
test
cld
xor
sbb
subl
loop
pop
push
xchg
cs
xor
and
push
ret
mov
sub
xor
lods
or
call
fwait
xchg
pop
test
into
inc
addr16
jl
add
inc
mov
mov
rol
js
fwait
hlt
jmp
mov
lock
in
mov
sbb
jo
xor
inc
in
jle
add
inc
jmp
lret
mov
sub
cmp
push
popa
std
test
movsl
insb
std
insb
sarb
jg
test
dec
aam
repnz
das
inc
scas
lahf
or
in
int3
pop
pop
hlt
negb
cwtl
pop
dec
cmp
mov
add
popa
mov
adc
pusha
xchg
aam
cli
and
mov
mov
in
nop
outsb
cmp
sub
jnp
fdivr
mov
mov
dec
ss
pop
lods
cwtl
dec
or
mov
mov
mov
ret
dec
pop
rclb
inc
lcall
xchg
pop
mov
push
lock
lahf
or
xor
pop
sub
xlat
or
dec
pop
in
and
add
pop
or
shlb
push
jo
and
pop
push
pop
aad
hlt
or
push
icebp
pop
pop
aad
jae
mov
rcr
ret
adc
cmp
cmp
inc
loope
std
push
xchg
jb
adc
shl
cmpsb
rorb
xchg
add
addb
jnp
jg
and
test
inc
inc
repnz
cmp
mov
xor
inc
push
xor
or
xor
inc
shll
adc
sbbb
into
xor
roll
repnz
clc
push
cwtl
mov
shl
lods
adc
adcl
je
or
jl
clc
xor
movsb
pop
push
add
outsl
mov
mov
ficomps
stc
int
mov
pushl
sar
xchg
add
test
popf
js
mov
cmp
leave
jo
mov
loop
mov
stos
jp
lods
hlt
test
xor
notb
lods
or
in
or
inc
push
sub
sbb
or
xor
push
mov
rorb
cmpsl
pop
js
cli
push
sbb
and
add
jge
and
pop
aaa
pop
jbe
idivl
enter
xor
fstpt
or
push
mov
add
loopne
dec
cmp
push
jmp
lock
and
shll
ret
pop
mov
xor
out
xchg
incl
xor
je
add
les
aas
adc
lock
aaa
adc
cmp
dec
dec
adc
push
notl
push
cwtl
mov
lcall
cmp
stc
repz
movsl
dec
das
popf
add
add
or
inc
loop
and
cli
dec
mov
sub
sub
loop
mov
cmp
jg
aam
insl
push
push
decb
pop
test
add
jecxz
into
stos
aaa
xchg
mov
mov
cwtl
imul
in
cmp
jno
push
lret
push
sub
cmp
ret
scas
jne
xor
sub
aas
inc
mov
lock
ljmp
push
pop
sbb
and
jp
orl
fidivs
or
dec
neg
sbb
mov
js
outsl
mov
mov
negb
cld
outsl
js
mov
lods
mov
and
mov
lods
test
sti
adc
fisttps
pop
dec
xor
add
xchg
adc
mov
add
aaa
mov
jl
popf
cmpsl
lcall
sbb
or
imul
sbb
jns
test
and
loope
out
push
testb
sbbb
pop
xor
rclb
inc
adc
cmp
push
add
adc
xor
movsb
pop
js
dec
or
cmpl
adc
jle
mov
or
sub
int3
mov
loopne
sbb
pop
adc
inc
cmp
jge
inc
inc
push
mov
insl
mov
outsb
jae
ds
fs
sahf
mov
push
push
subl
mov
cltd
sbb
dec
mov
mov
and
push
iret
push
push
cmp
pop
xor
inc
inc
aad
outsl
push
hlt
xor
fs
sub
dec
mov
mov
mov
fmulp
sbb
push
fs
xchg
data16
sahf
xchg
cmp
mov
sub
sbb
int3
cmpsb
ret
adc
cmpsl
test
push
jmp
lods
testb
mov
push
or
adc
out
popa
clc
stos
xchg
mov
pop
add
ret
xlat
jge
test
rolb
xlat
sbb
push
ljmp
leave
fsubl
and
cmp
loop
jbe
addr16
cmpsb
add
dec
push
add
lahf
push
pop
add
inc
jp
mov
call
sub
xchg
lods
mov
addr16
sub
jecxz
xor
lret
insb
inc
and
or
icebp
mov
ret
ja
clc
fbstp
or
sub
sub
jp
hlt
push
outsb
pop
shrl
out
cwtl
xor
imul
frstor
add
into
add
popf
stc
adc
xchg
orl
rol
in
add
jnp
xor
ljmp
dec
and
or
mov
call
cmpsb
mov
inc
enter
ror
pop
xor
out
and
fwait
dec
pop
cld
and
aam
hlt
inc
push
push
je
xor
pushl
adc
leave
xchg
cmpsb
jbe
test
stos
insl
adc
daa
lods
adc
cmp
or
dec
fsubs
jno
sub
dec
inc
push
js
sbb
outsl
stc
sub
sar
mov
push
add
popa
mov
imul
add
adc
mov
or
dec
add
or
add
adc
and
jo
or
stc
adcb
add
add
or
not
mov
lock
or
sbb
fists
jecxz
mov
incl
sbb
out
mov
lods
aas
in
pop
xor
pop
xchg
add
fisubrl
jl
pop
minps
ja
icebp
data16
roll
or
and
cli
cmp
mov
out
aad
aam
dec
dec
or
dec
sbbb
ret
cli
lret
push
call
cmc
push
and
push
push
imul
idivb
fisubrs
and
negb
sbb
aam
pop
add
add
jp
xor
xor
loopne
jb
add
roll
andl
and
gs
inc
mov
inc
notl
pop
and
push
sbb
fsubs
pop
je
cmpsl
inc
jp
xchg
sbb
es
inc
and
js
subl
nop
pushf
pusha
sub
lcall
mov
inc
mov
jb
cld
xor
xor
jle
mov
jp
ds
fdivr
cmp
vmovlps
add
push
xor
je
push
es
add
insl
ds
aaa
movsb
call
add
inc
sub
ja,pt
xchg
mov
ljmp
addb
lods
test
add
inc
sbb
sbb
cs
mov
fdivs
mov
std
jo
jne
pop
test
adc
mov
xorb
lock
pop
mov
sbb
ds
jg
cmpb
mov
ret
jb
cmpsb
insb
cli
inc
xor
add
jae,pn
movsb
mov
fists
xor
sub
fiadds
movb
xor
fs
hlt
xor
or
jbe
mov
lds
mov
sahf
mov
inc
call
inc
lcall
inc
clc
ret
mov
mov
adc
or
mov
scas
push
pop
mov
jp
push
and
xor
cwtl
cmp
and
inc
ja
stos
je
sub
ljmp
movsb
inc
cs
mov
mov
jmp
aam
out
mov
lcall
das
and
sbb
orb
inc
add
push
and
insb
push
pushf
fsubl
enter
ljmp
leave
mov
xor
ss
or
arpl
cmp
xchg
jmp
dec
lahf
mov
call
xchg
std
and
jb
aas
pop
into
js
rolb
mov
inc
repnz
cld
adc
or
cmpsb
aas
arpl
movsl
adc
loopne
icebp
rcll
insb
das
mov
mov
stos
pop
fs
adc
adc
aad
jo
popf
or
jb
enter
pop
pop
jbe
jnp
mov
lcall
loope
cmp
pop
push
or
sub
out
popa
dec
xchg
and
fsubs
je
loope
jecxz
add
jmp
daa
loopne,pt
dec
outsb
out
cs
popaw
insb
filds
and
mov
fisubrs
jnp
inc
lcall
or
lahf
hlt
jns
outsl
jo
stos
out
sbbb
cmp
sub
out
xchg
jecxz
add
ret
das
xor
and
addb
lea
cmp
jl
addr16
fsubr
adc
subl
test
mov
mov
in
or
dec
rclb
xchg
mov
add
jge
fcoml
or
inc
jp
cs
shll
popa
inc
add
mov
stos
clc
and
mov
adc
pop
movsb
subl
jle
mov
mov
nop
jbe
movsb
sti
aam
popf
addb
mov
iret
popl
push
sbb
xor
cmp
sbb
dec
add
and
dec
inc
mov
xchg
fadds
xor
outsb
fistps
fmul
cmp
push
int
mov
adc
xchg
stos
stos
popf
xor
insb
test
or
xchg
rsqrtps
neg
or
scas
pushf
mov
out
xor
mov
pop
adc
xchg
cmc
popf
inc
mov
fisubs
xchg
or
scas
jp
mov
ret
adc
dec
adc
loop
xlat
pop
sub
out
mov
add
or
mov
aaa
repz
mov
addr16
jb
mov
push
dec
dec
mov
mov
shll
sub
enter
add
faddl
xlat
xlat
pop
aad
cmp
nop
inc
or
push
pop
mov
outsb
add
mov
out
ljmp
pusha
push
pop
dec
push
sub
int
mov
push
sbb
jo
je
xchg
call
mov
lods
loop
push
adc
mov
imul
cmc
sub
dec
add
das
lock
xchg
mov
inc
imull
cmp
out
cmp
pop
pusha
test
pop
aas
adc
das
push
push
and
dec
push
cmp
cwtl
shrb
into
imul
mov
sar
and
inc
add
xchg
ficomps
ret
lret
int
test
adc
in
cwtl
add
in
cmp
xchg
out
subb
xor
inc
add
outsl
aam
cmp
xor
mov
fs
dec
mov
icebp
mov
fmull
pop
imul
sub
ret
xchg
jecxz
mov
ss
rolb
mov
repnz
and
cmp
xor
test
outsb
mov
stos
pop
mov
xlat
xor
cs
jno
loop
push
test
xor
push
push
popa
cmpsl
adc
mov
cmp
aam
aam
and
or
inc
cld
mov
mov
lods
cli
jp
daa
das
pop
loop
cmpsl
stos
push
call
mov
cmp
adc
and
and
cmp
stc
pop
and
fcompl
mov
into
pop
adc
std
nop
inc
mov
add
mov
cs
lods
std
nop
test
iret
out
cmc
test
lds
fcomi
loop
les
mov
push
jmp
add
mov
loopne
push
outsl
add
sub
lods
or
clc
mov
fs
and
sbb
dec
cltd
dec
js
cli
call
or
cld
scas
mov
stos
sbbb
adc
imulb
cld
xorl
inc
jnp
aad
add
ja
and
jg
popf
repnz
in
push
jecxz
loope
pop
mov
pop
pop
sarb
jecxz
fnstenv
bound
inc
inc
xchg
sbb
into
arpl
inc
jae
cmp
adc
sub
mov
pop
loopne
ss
ret
inc
imul
mov
iret
jo
add
mov
cli
hlt
mov
rorb
and
dec
mov
mov
mov
addl
scas
lea
mov
sbb
sbb
and
les
je
xor
shrl
pop
and
int3
inc
jbe,pn
lahf
or
pop
mov
and
unpckhps
fadds
movsb
mov
fwait
ds
or
add
xor
adc
lcall
push
sarb
and
and
mov
fdivp
xor
lcall
rorw
test
cmp
pop
lcall
mov
jmp
xlat
pop
add
call
iret
xchg
xor
jns
loope
iret
ret
add
mov
or
jnp
inc
sub
pop
mov
pop
add
cli
dec
jnp
and
and
test
xchg
ret
loopne
iret
jb
push
test
js
push
mov
push
mov
lcall
inc
pusha
pop
add
sahf
js
stos
movl
sbb
mov
pop
loope
inc
loope
cmp
or
testb
mov
mov
idivl
and
push
xchg
add
xor
sbb
or
jecxz
and
xchg
cmpsb
stos
inc
lret
adc
aaa
cmpsl
cmp
push
push
xchg
fidivl
add
add
es
lds
add
mov
stc
sbb
out
cld
iret
jno
lcall
cli
nop
or
popl
xor
xor
sbb
js
aad
cmp
pusha
les
fcmovu
mov
or
xor
add
scas
lods
jmp
pusha
test
insl
dec
imul
shl
inc
mov
stos
mov
jp
jne
jl
sbb
inc
xor
scas
repnz
mov
cmp
push
ljmp
aaa
push
insb
mov
mov
jecxz
sub
mov
lods
int3
mov
lds
ja
inc
sbb
or
mov
test
jle
iret
test
sbb
shr
js
loopne
rol
push
push
adc
popa
mov
rolb
hlt
sti
mov
mov
popf
mov
and
mov
sbb
push
xchg
cs
cmp
enter
push
lret
shrl
int3
push
mov
std
adc
jmp
push
fisubrl
lret
jl
sbb
xchg
sub
inc
jmp
nop
sub
jmp
push
pushf
dec
mov
push
clc
lods
cmpl
dec
add
inc
inc
push
lock
cli
and
sbb
lret
stos
xchg
xchg
lds
mov
pop
xorb
cmc
mov
hlt
stos
out
addr16
push
scas
call
daa
data16
lods
and
adc
mov
clc
cltd
add
lods
mov
add
aaa
mov
lock
mov
in
mov
push
test
out
and
mov
cmp
adc
fldl
jl
cltd
cwtl
shlb
cmpsl
scas
outsb
je
xor
add
xor
mov
xor
mov
mov
mov
jnp
lods
cltd
sub
popa
jo
and
pop
cwtl
mov
dec
bound
addl
out
push
add
out
add
or
sub
mov
sbb
adc
sub
or
mov
mov
test
loop
test
sahf
fidivrs
pop
sub
add
or
jnp
push
movsb
in
push
dec
cmp
pop
lcall
test
mov
gs
sub
push
sub
xor
out
push
mov
lods
push
or
cmp
add
mov
cmp
icebp
push
hlt
dec
call
push
insb
jecxz
lcall
mov
xor
fildll
lods
dec
and
fwait
inc
ljmp
xor
cld
mov
test
jp
ljmp
fldt
orb
jle
dec
outsb
push
out
mov
jecxz
movsb
jno
dec
push
and
fldl
xor
push
or
fwait
dec
loopne
inc
xorl
add
test
ljmp
out
jno
iret
cmp
or
imul
jne
add
cmp
sub
mov
push
in
push
call
xchg
cmpsl
push
pop
dec
adc
mov
and
fstpl
push
xlat
mov
push
or
jbe
es
jl
or
aam
inc
std
adc
enter
rol
imul
movb
iret
xlat
insb
inc
pusha
cmpsl
fwait
mov
push
mov
orl
mov
dec
inc
push
push
scas
js
mov
add
fisubrs
das
mov
fidivs
mov
mov
add
pop
je
enter
mov
dec
adc
clc
xor
cmp
inc
loope
insb
cld
cmp
mov
loop
sbb
fwait
mov
scas
pop
lret
adc
mov
inc
push
mov
inc
in
mov
xor
jbe
and
arpl
ret
cmpsl
jp
mov
ret
adc
jg
xchg
sub
mov
push
add
out
cltd
cwtd
clc
shrb
push
jge
xchg
call
mov
outsb
mov
jb
cmp
notb
sbb
les
ljmp
cmp
push
ss
add
fmull
ss
fs
inc
lods
or
jae
or
mov
adc
out
xor
xchg
cmpl
les
adc
out
cmpl
insl
jns
dec
mov
sub
cmc
sbb
dec
sbb
adc
shl
adcb
outsl
clc
push
incl
add
jle
and
fsubr
pop
cmp
or
insb
push
adc
pop
sub
test
call
push
cmp
or
cmp
push
addb
dec
cmp
or
push
inc
push
inc
pop
imul
out
fidivl
pop
repz
loop
fdivrs
inc
leave
jns
addl
lret
testl
or
pop
cmp
mov
fimuls
pop
adc
movsb
lahf
popa
pop
loop
aas
sbb
enter
daa
ds
mov
pushaw
rorl
mov
rcl
adc
mov
add
in
loopne
ficomps
es
add
repnz
lods
jp
sti
add
inc
push
inc
leave
add
pushf
loop
lcall
pop
pop
loop
mov
out
adc
icebp
mov
push
fsubl
mov
sbb
push
mov
jge
jns
mov
and
or
sbb
adc
cwtl
out
mov
adc
adc
lock
imul
xchg
adc
mov
add
jecxz
cli
daa
out
mov
cs
and
xchg
or
sbb
dec
faddp
sub
xchg
mov
lods
int3
add
mov
sbb
decl
lds
addb
outsb
dec
lods
paddw
mov
lahf
xchg
inc
jmp
rolb
xor
fidivrl
add
mov
lods
cmp
data16
dec
mov
pop
xchg
push
and
add
dec
pop
cltd
fwait
add
ljmp
aaa
jl
add
cmpsb
sub
addr16
sub
cli
dec
and
lret
add
push
aad
cld
push
imull
out
push
mov
sub
and
outsl
push
fsubrp
pop
dec
adc
inc
roll
repz
outsl
js
adc
cs
mov
testb
fisubrl
jmp
mov
add
or
jbe
ret
fwait
push
icebp
cmpsl
cmp
pop
mov
add
jnp
outsl
push
xor
push
cmp
push
lds
in
rorl
or
or
ljmp
inc
cmc
pop
repnz
jecxz
jno
mov
movsb
mov
cs
sub
pop
pop
inc
xchg
mov
jecxz
lds
pushf
mov
or
xchg
shrb
mov
mov
lods
aad
jne
mov
les
imul
cmp
movd
fisttpl
out
stos
adc
loopne
scas
lea
adc
cli
mov
and
mov
adc
mul
pusha
subl
push
subb
jecxz
fnstsw
jno
shl
cmp
sbb
leave
or
add
push
bnd
lock
sbb
loope
xor
add
nop
loopne
clc
jb
jnp
je
inc
ret
xor
adc
sti
mov
adc
jg
sub
loope
test
xchg
xor
mov
fst
pop
cli
cmp
and
pop
aad
push
and
mov
pop
popa
call
jb
das
std
pushf
xor
lea
mov
popa
popf
mov
into
imul
out
inc
cld
xchg
mov
jo
test
mov
pop
or
movsl
iret
sbb
xor
sbb
or
pop
js
pop
iret
lds
sub
add
cmc
xor
jp
xchg
loopne
xor
insb
lahf
int3
cli
xor
lock
das
fmuls
add
pop
adc
pcmpgtw
cmpsb
call
sub
out
and
push
or
fwait
test
mov
stos
das
and
jno
into
js
mov
push
adc
cltd
addb
inc
int3
fmuls
out
jb
or
mov
lock
scas
xchg
add
cs
shlb
cli
fcomi
decl
or
lock
add
enter
jo
ljmp
xlat
sub
mov
fcmovb
mov
push
std
sahf
push
mov
ljmp
sub
inc
or
das
jmp
and
jg
add
and
jecxz
or
cli
fsubrl
test
jmp
test
pop
add
out
shl
adc
test
mov
outsl
and
jbe
mov
cli
movd
stc
fcompl
jno
test
push
out
mov
in
xlat
or
pushf
rcll
shll
or
movsb
jbe
cli
pop
shr
daa
xor
and
mov
mov
dec
jp
lea
les
pusha
aad
mov
enter
or
push
pusha
sarl
sbb
and
inc
lods
xchg
xor
fcomps
jle
lcall
test
dec
fdivrl
adc
nop
fimull
sbb
adc
jecxz
lock
adc
pop
push
sub
sub
mov
jmp
mov
adc
test
xchg
ds
mov
test
inc
dec
fld
outsb
lods
and
cmp
push
fwait
imul
xorl
mov
add
aas
ja
cmp
test
mov
jecxz
adc
pop
cmp
frstor
jb
es
cmc
mov
icebp
mov
xchg
push
ss
inc
inc
pop
cmpsl
js
es
push
js
movsl
pop
ljmp
xchg
sub
inc
rorb
inc
adc
dec
dec
adc
test
ljmp
imul
mov
jecxz
jnp
cltd
imul
push
jl
les
jge
ds
xchg
mov
je
xchg
iret
or
out
push
pop
adc
mov
aaa
sti
les
and
add
call
dec
add
inc
test
sub
lods
push
jecxz
ret
test
daa
add
add
inc
adc
mov
xor
test
int
sub
rcrl
popa
pop
cld
or
add
in
push
jecxz
inc
fwait
inc
rorb
dec
dec
sbb
addl
inc
idivl
mov
sbb
ret
ljmp
jns
inc
call
push
cld
arpl
sub
jne
std
je,pn
in
add
andl
sub
retw
pop
dec
fcomps
clc
into
stos
xor
push
pop
dec
sbb
mov
shrb
and
int3
sub
xchg
shlb
imulb
mov
push
loopne
sbbl
sti
xchg
in
mov
or
pop
scas
lods
rcl
xor
movsl
push
or
add
loopne
and
decl
mov
ret
test
das
or
fstps
int
lds
cs
sub
ret
and
popf
pop
cmc
popf
mov
jl
pop
cld
xchg
dec
mov
mov
shll
dec
dec
adcb
subb
sub
sub
pop
xor
cmpsl
aam
jnp
sbb
inc
pop
movsb
imul
inc
lret
sub
mov
pop
in
mov
push
cmpsl
lock
cs
jb
add
jl
add
mov
fs
lods
xchg
lahf
push
test
xor
out
into
insl
mov
sbb
mov
adc
jle
test
test
into
inc
sub
lret
fs
dec
mov
dec
pop
icebp
sub
mov
add
arpl
sub
in
pop
pop
adc
iret
and
inc
add
xchg
cli
sbb
rorb
jecxz
clc
fdivrs
sub
lock
loop
aad
inc
sbb
inc
inc
lahf
xchg
add
outsb
mov
ja
push
mov
inc
push
adc
ficoml
aas
dec
lea
mov
fildll
pop
ficoms
dec
bound
mov
fildl
in
scas
sbb
dec
xchg
cli
sub
into
mov
mov
orl
dec
sahf
bound
fadd
inc
test
inc
les
dec
push
jge
mov
jns
or
outsl
xchg
add
shr
fwait
xchg
sbb
aad
mulb
inc
adcl
or
jo
lock
popa
jg
dec
mov
rorl
pop
pusha
and
ficomps
and
out
aaa
fadds
xor
bound
mov
cli
inc
adc
dec
in
rcll
push
mov
cmp
xor
fucomip
fmull
mov
clc
push
sbb
inc
jl
out
ja
or
mov
and
stos
adc
sub
cmp
fsubs
fstps
ljmp
stc
sbb
inc
les
in
push
cmpsl
xchg
mov
das
fbld
mov
aam
jecxz
sbb
fcmovnu
loop
adc
add
xor
lods
rcrb
or
add
xchg
repz
stos
ret
sub
add
daa
add
cli
add
and
jns
mov
loop
mov
xor
or
xchg
imul
leave
es
nop
lock
push
repz
jae
add
sar
arpl
je
fdivp
sbb
in
inc
pop
dec
loopne
mov
inc
js
loop
cli
jge
lcall
pop
push
cmpsb
pop
aad
mov
test
mov
pop
fidivl
cmp
out
loopne
clts
aaa
sbb
rorb
xor
insl
fiadds
shl
mov
cld
pop
xor
sub
loop
jecxz
scas
addl
dec
in
mov
sbb
movsb
scas
xchg
punpcklwd
push
sub
int
and
out
mov
fwait
or
xcrypt-ctr
cmpsl
popf
xchg
jl
out
mov
adc
jnp
dec
cmp
loopne
push
xchg
andb
nop
push
mov
xchg
fstl
and
sub
sarl
aam
mov
dec
repnz
push
add
and
shl
ss
test
lock
je
dec
ret
xlat
jecxz
adc
scas
add
jb
or
shlb
insl
push
dec
and
outsl
jne
xor
pop
mov
push
sbb
lods
push
aad
add
xor
rclb
mov
outsb
cmp
fwait
shr
inc
inc
frstor
or
scas
lea
cld
shlb
arpl
int3
std
out
fimull
push
test
mov
mov
repnz
jmp
pop
movsl
add
lds
mov
cwtl
xchg
out
test
jecxz
pop
out
dec
jae
add
lock
mov
rcrb
mov
jae
mov
cmc
pop
mov
push
xor
xchg
aad
jne
testb
int
call
adc
call
jl
aas
xor
mov
shr
xchg
mov
mov
mov
fxch
sub
dec
cmp
out
sub
xor
add
or
icebp
iret
and
push
bound
jge
or
sbb
inc
jle
mov
or
push
sub
jp
ljmp
jo
sbb
int3
scas
in
mov
cmc
rorb
loop
add
call
je
cmp
adc
mov
paddw
xor
mov
aaa
push
jne
mov
loope
push
push
pusha
nop
lods
pop
cmp
decb
loope
sub
in
xchg
mov
mov
mov
adc
out
out
pop
xchg
sbbl
adc
cmpsb
stos
call
mov
add
jo
sub
fisttpll
cmc
xchg
jb
ljmp
inc
sbb
aaa
cmpb
les
inc
scas
adc
jo
add
push
xlat
loope
push
or
mov
shrb
fisubl
push
jno
pop
and
sahf
out
push
push
jo
inc
inc
add
mov
push
nop
push
es
sub
and
orl
mov
es
adc
pop
or
inc
cmp
xchg
sahf
cmp
cmp
push
ss
jo
lock
das
dec
push
pop
iret
sbb
hlt
cmp
xchg
test
mov
aad
dec
pop
and
fbld
ljmp
les
icebp
in
hlt
jbe
cld
addr16
and
rorb
outsb
mov
sbb
dec
push
pop
xorb
dec
adc
pop
orl
cld
sbb
lds
cli
stc
in
inc
adc
pop
shr
push
and
push
mov
cli
and
adc
or
dec
loop
xchg
mov
lret
into
jp
inc
cmp
jge
cmp
add
pop
fcomps
lock
push
xor
fidivrl
xor
lret
fistl
andb
divl
into
adc
movsb
dec
cld
ret
lret
aam
sbb
cmp
adc
inc
daa
sub
sub
daa
lret
cmp
jb
adc
testb
jecxz
sarb
mov
jl
fcoms
or
jmp
lock
lods
cmpsl
js
push
punpckhbw
mov
loope
test
call
adc
es
in
pop
or
sub
cmp
add
clc
daa
stc
mov
inc
mov
cmpl
xlat
lds
jecxz
jmp
mov
cmp
mov
addr16
fnstenv
jns
lds
cltd
pop
rolb
xor
or
daa
push
out
pop
out
and
mov
out
jns
std
sub
xchg
sub
imul
jle
xchg
mov
fnstsw
pushf
in
pop
ja
decl
cli
fld
sub
ljmp
sub
jae
fsubs
scas
xchg
pusha
imul
mov
xor
dec
and
lcall
shrb
sbb
cmc
xchg
aaa
cwtl
cmp
sbb
cmp
cli
shlb
ret
push
push
xchg
orb
rcl
loope
fcmove
orb
fisttpl
aam
push
mov
in
out
mov
push
xchg
adc
or
aas
push
and
pop
mov
std
sbb
mov
xor
mov
out
cmp
cmp
cmp
je
movb
stos
jno,pt
adcl
daa
das
mov
sti
or
mov
sub
andb
lcall
push
or
xchg
jle
mov
xor
pop
divb
jnp
sub
adc
filds
add
mov
sub
push
jnp
push
in
mov
pushf
fildll
dec
push
sarb
jns
cmp
imul
push
sub
push
cmp
adc
inc
mov
cs
sbb
fnsave
cwtl
int3
mov
jge
sub
or
bound
sbb
xor
xchg
test
mov
sub
push
call
add
push
adc
add
mov
sub
aam
inc
imul
push
fiaddl
lock
mov
das
imul
inc
push
lret
or
mov
push
je
xlat
fimuls
lcall
and
mov
ficompl
mov
inc
inc
scas
arpl
or
jno
mov
imul
add
rcr
sub
mov
fsts
cmpsb
push
xor
mov
jg
shrl
subb
jo
sub
popf
sbb
jmp
pop
shlb
add
or
out
add
pushf
test
adc
mov
mov
dec
dec
inc
pop
nop
sti
sbb
push
loopne
or
pop
sub
pop
add
mov
cli
add
test
int3
jno
cmc
ljmp
jecxz
scas
inc
cmp
inc
test
and
rorb
test
xor
dec
or
icebp
mov
fcom
pop
je
jae
inc
cli
not
nop
es
jp
mov
or
dec
cmpl
sbb
sbb
and
shll
aas
adc
xchg
adc
scas
cli
shlw
dec
js
pop
enter
jle
adc
dec
stc
inc
lret
sbb
push
in
and
jl
mov
and
int
sub
pop
in
dec
lock
test
out
movsb
clc
cmpsb
iret
push
pop
jbe
aad
jb
imul
insb
pushf
mov
clc
aaa
pop
fs
stos
add
cltd
dec
pop
xor
cmp
push
shrb
jo
fimull
ds
dec
test
cmpsb
inc
scas
mov
cmc
mov
hlt
ljmp
or
lret
loopne
sub
adc
stos
fildll
or
and
into
jo
out
aas
arpl
bound
cld
add
rol
push
jl
mov
cmp
dec
push
mov
jg
arpl
mov
lcall
decl
xor
cld
or
inc
loop
pop
mov
mov
fs
pop
je
ljmp
fwait
adc
es
add
bound
int
or
call
xchg
test
loope
in
mov
sub
test
fwait
cld
mov
cmc
jno
es
jge
loope
sub
sub
cmp
jb
jo
jae
ljmp
jne
faddl
jg
add
test
and
test
mov
adc
daa
sbb
aad
or
iret
sub
and
adc
mov
clc
aaa
out
xchg
sub
bound
pop
push
hlt
out
fmul
inc
pop
in
cli
test
fstpl
or
stos
jno
add
adc
cli
jge
mov
sub
cmp
mov
xchg
xchg
stos
inc
loop
pop
add
xchg
stos
xlat
cwtl
cld
cmp
js
aaa
xchg
push
sub
xor
ds
xchg
dec
sarb
push
fwait
mov
cmp
cli
popf
push
push
cwtl
xchg
or
ljmp
cmp
sub
rolb
orb
jmp
sbbb
sti
push
sub
outsb
dec
xchg
and
xlat
mov
jbe
xchg
int3
add
cld
adc
xchg
shll
inc
rep
nop
mov
sub
pusha
std
sbb
shll
mov
jo
cmp
std
sbb
stc
xchg
push
test
aam
loop
pop
cli
adc
push
mov
or
xchg
cli
testb
andb
test
push
mov
xchg
andps
mov
lahf
adcb
mov
in
push
icebp
loopne
mov
in
push
inc
pop
mov
pop
push
jle
test
xor
pop
imul
out
into
test
das
jmp
outsb
push
jecxz
aam
xlat
jge
push
popa
sub
jmp
sbb
add
rclb
mov
lock
adc
data16
test
shll
icebp
std
into
icebp
je
pop
and
pop
in
push
mov
test
addr16
andl
lahf
sbb
fcoml
es
aam
push
fs
test
sub
adc
jmp
cli
inc
loop,pt
rolb
popf
stc
orl
jp
sbbb
insl
pop
ss
adc
push
das
ds
stos
mov
or
jno
iret
xchg
and
sub
ret
test
add
or
fsubr
mov
pop
lock
aas
pop
nop
lcall
sahf
xor
mov
cmp
pop
and
xchg
repnz
ret
adcb
sar
fst
push
cmpsb
stos
int
dec
pushf
sbbl
dec
sbb
adc
jle
sub
cltd
sarl
xor
mov
jge
inc
cmp
int3
test
mov
out
add
outsb
lcall
insb
rclb
cmc
xchg
jo
adc
or
jne
ljmp
pusha
lods
inc
mov
mov
les
jbe
pop
std
lret
push
cld
mov
out
pop
mov
mov
mov
jmp
fstpl
jbe
adcl
fdivl
pop
sub
pop
mov
adc
inc
aam
jbe
and
sbb
pop
mov
jge
cltd
inc
add
je
fcompl
add
adc
and
mov
pop
gs
fisubl
mov
xchg
and
add
cmp
punpckhwd
test
ds
cs
adc
jae
in
mov
insb
hlt
jo
fstpt
xlat
cs
jle
ljmp
popa
das
jl
sbb
je
sbb
aam
dec
jecxz
repnz
addr16
ds
inc
pusha
mov
xorb
fnsave
fiadds
push
jl
mov
push
imul
sub
or
cmp
push
jecxz
xorb
mov
js
daa
lds
adc
popa
mov
or
jle
dec
push
test
test
mov
test
mov
ret
and
or
and
add
ljmp
addb
pop
xor
sub
xor
xchg
inc
loopne
cmpsl
clc
inc
incl
xchg
and
repnz
push
jo
jl
sbb
cmc
insl
in
ror
test
sbb
cmp
mov
dec
insb
test
cmp
push
outsl
pop
and
cmp
loop
add
ret
dec
fistpll
mov
jp
std
pop
repz
sbb
add
xor
jmp
sarl
iret
imul
int
mov
adc
mov
jmp
inc
data16
aas
adc
mov
add
aad
aas
clc
add
inc
shl
mov
mov
or
fsubrs
lock
xor
daa
ljmp
sbb
movsl
dec
cmp
dec
mov
dec
bound
clc
movb
cmp
ret
out
ret
outsl
mov
add
test
loopne
mov
mov
rcrl
shlb
dec
sbb
call
fistl
out
cmpsb
pop
ret
adc
xor
push
pop
jge
xchg
icebp
cld
push
mov
addl
mov
cmpsl
mov
push
rol
push
mov
jmp
jo
jne
dec
stos
stc
imul
popa
mov
mov
ret
sub
bound
add
pushf
inc
loop
add
and
fisubrl
outsb
and
fwait
pop
cmp
pop
faddp
jg
fwait
add
mov
jp
add
sub
jbe
jo
les
in
call
aam
mov
ficoml
push
pop
lock
shrb
cs
iret
sbb
lods
add
mov
xchg
std
cli
idivb
sbb
pop
jns
push
rcll
sahf
mov
jp
test
and
pop
pop
push
jmp
push
dec
sbb
aaa
call
xchg
push
adc
stos
mov
dec
or
mov
in
std
add
xor
repz
iret
mov
pop
ror
or
push
push
lods
jmp
mov
outsb
sbb
and
mov
movsb
cmp
out
adc
test
xor
mov
pop
pop
jl
jno
jecxz
fsub
dec
out
je
push
xor
outsb
push
fistpll
cld
add
mov
fwait
outsl
scas
and
das
loope
incl
imul
out
scas
mov
dec
xchg
mov
push
jecxz
incb
aad
mov
push
mov
ret
push
cli
sub
loopne
mov
add
rorl
loop
mov
jg
jl
out
loop
test
add
data16
adc
mov
push
jmp
inc
das
dec
and
and
cmp
lcall
adcl
pusha
pop
orl
lock
push
mov
mov
inc
dec
mov
lock
mov
int
xchg
cmc
daa
sub
leave
aas
or
jae
push
push
inc
add
popf
clc
test
incb
pushf
push
pop
push
incl
push
das
es
clc
je
xchg
mov
and
pop
stos
stos
inc
cmp
scas
cli
in
add
inc
pop
loop
in
outsl
ret
inc
leave
push
icebp
cmpsb
or
ficoml
pop
sub
jnp
pop
ficoml
cmp
movsl
cmp
inc
loopne
add
out
xor
movsb
pop
sub
insl
out
pop
jg
daa
xchg
icebp
push
inc
test
mov
cmpsl
mov
add
roll
jmp
aaa
pop
stos
jno
incl
inc
inc
aam
pop
xchg
aas
pop
out
faddl
inc
sub
mov
push
mov
out
xor
dec
pop
adc
mov
aas
pusha
jo
rorb
daa
negb
mov
daa
inc
push
stos
pop
ss
andb
stos
clc
xchg
push
aas
sbb
add
les
sub
stos
rcll
in
lahf
clc
in
mov
dec
jle
nop
das
sbb
insl
add
call
cld
sbb
jl
pusha
ret
sub
push
sub
repz
je
cmpsl
or
push
pop
idivl
jb
mov
xchg
aam
pop
mov
into
mov
std
loopne
rcr
aam
lods
test
sarb
or
shlb
mov
mov
ffreep
sbb
rcrb
shlb
xchg
ss
insb
aam
outsl
aam
and
in
lods
mov
int
imul
ret
sbb
or
add
sbbb
andb
mov
pop
or
insb
pop
cmp
lahf
jge
ret
add
and
lahf
mov
push
and
xchg
stc
lods
dec
test
pop
orb
or
test
sbb
aad
xchg
subl
jae
sub
in
jmp
cs
xchg
push
js
pushf
lret
call
push
cmpsb
xchg
addr16
test
inc
rcrb
gs
and
imul
mov
cmc
cs
loope
push
subl
xchg
cld
test
mov
jecxz
xchg
mov
lea
adc
add
mov
jmp
cs
aam
lods
inc
test
pop
jge
add
mov
imul
adc
in
mov
lahf
fdivrs
stc
pop
cmp
xchg
addb
ss
cmp
push
push
sub
and
lahf
cwtl
aaa
push
inc
sbb
in
adcl
js
dec
sbb
push
repz
xor
push
iret
add
xor
in
jbe
and
ret
arpl
lahf
add
cmp
and
imul
add
add
mov
cmp
jmp
daa
cmp
or
hlt
cmpb
outsb
jp
icebp
xchg
xchg
cmp
stc
pop
dec
add
fiaddl
cmpl
jmp
add
lret
push
mov
paddusb
fistl
sbb
mov
push
add
add
mov
scas
iret
test
dec
das
cli
je
mov
sahf
push
jns
shl
push
pop
ss
clc
dec
call
lret
pop
das
pop
mov
nop
inc
mov
fnsave
push
mov
xchg
mov
add
push
insb
mov
mov
push
jp
es
mov
mov
addl
dec
and
rcrl
and
ret
clc
nop
aad
mov
das
mov
and
aas
sbb
xor
mov
les
int
push
imul
pop
call
add
js
push
sar
mov
lods
das
sar
popf
and
add
mov
xor
cmp
lret
icebp
sub
or
cmp
sbb
push
mov
jecxz
mov
gs
dec
mov
jne
cmp
sahf
lods
jp
add
pop
std
lahf
call
jecxz
ljmp
in
cli
ret
hlt
inc
add
sbb
push
push
mov
xchg
nop
repnz
aas
lea
dec
mov
insl
push
js
push
daa
and
icebp
mov
dec
xor
dec
add
add
adc
adc
pop
js
adc
shll
sub
icebp
mov
mov
dec
stos
pop
xchg
jge
int
or
inc
or
sub
pusha
addr16
jbe
add
fisubs
pop
int
mov
push
pop
testb
rcll
add
mov
jle
or
inc
sbb
mov
sbbl
xchg
int3
pop
push
in
les
xchg
sbbb
pop
lods
push
lcall
leave
or
cmc
cmp
add
mov
cmp
sti
cmpsb
xlat
mov
inc
jmp
jne
test
and
adc
mov
roll
lahf
clc
out
add
into
and
je
xchg
sub
insl
mov
cld
lods
subl
adc
rcl
push
lods
clc
sbb
mov
aad
mov
or
icebp
mov
lods
xchg
test
ret
push
adc
cmp
mov
gs
sbb
arpl
cli
ja
cmp
mov
enter
sub
es
stos
sub
cmpsl
fsub
lods
ds
ret
je
mov
aam
xlat
mov
or
inc
test
cmpb
scas
fistpl
mov
add
movl
scas
adc
mov
xchg
xchg
xchg
lret
push
cmp
push
mov
add
loop
clc
xchg
lds
bound
push
jp
mov
bnd
loop
outsb
sub
jne
popf
cld
sub
xchg
lock
jp
pop
stos
test
ja
dec
mov
cld
loope
sub
rcr
cmp
popa
mov
xor
roll
pop
jp
enter
inc
pop
testb
mov
aas
fs
xchg
push
cmc
or
movsl
sub
psrad
inc
fisubl
out
adc
add
int3
mov
or
or
clc
fimull
mov
inc
sbb
cwtl
and
fistl
cld
and
sbb
ljmp
negb
xchg
or
dec
sub
lret
mov
icebp
add
int
push
movsl
lahf
cmpsb
aad
lds
pop
rcl
andb
daa
lods
jo
dec
insl
mov
pop
fmull
int3
xor
add
xlat
jg
or
cs
dec
cld
push
lds
mov
inc
inc
mov
push
lret
cli
sub
leave
stc
pop
xchg
jge
mov
add
fimuls
adc
in
popf
outsb
cmpsb
sbb
push
pop
decb
adcl
dec
mov
sbb
xorw
xor
cli
leave
push
cmp
pusha
inc
xchg
popf
and
in
mov
adc
dec
leave
add
mov
inc
add
or
loope
xchg
jge
xchg
dec
xchg
mov
jl
loop
push
pusha
and
pop
int
cmpsl
push
cmp
iret
inc
notl
mov
incb
cmp
mov
or
movsl
add
push
mov
int3
lock
and
setge
in
loope
inc
into
fidivrl
push
or
cwtl
inc
scas
sub
xchg
xchg
rclb
push
xor
inc
leave
dec
mov
rcrl
push
mov
jl
xor
add
push
cwtl
loopne
pop
add
adc
sbbl
sub
imul
xchg
push
cmp
mov
sub
orl
mov
mov
loope
fcmovb
std
xor
scas
xchg
subb
and
mov
add
aad
aam
test
push
sbb
cmp
push
lods
mov
ret
mov
shlb
shll
iret
cli
or
jle
dec
inc
lock
call
es
cwtl
push
xchg
push
add
push
test
jp
imul
jmp
cmc
clc
sub
fiaddl
dec
dec
xor
int3
rclb
xor
xchg
mov
cmp
rcll
cli
cmp
dec
aam
mov
xchg
leave
xlat
or
aam
test
add
test
xor
jb
clc
push
dec
sbb
push
cli
les
jno
push
mov
rclb
add
enter
loop
outsb
in
cs
int3
mov
ja,pn
sar
daa
sti
push
jecxz
adc
orb
test
fmuls
push
scas
push
jno
sub
rclb
idivl
mov
jg
cmp
outsb
add
inc
movsl
jb
gs
stos
jle
jbe
movsl
or
insl
xchg
sbb
jb
xchg
sub
jmp
enter
dec
sbb
pop
ja
push
shlb
add
mov
adc
inc
cmp
jp
aaa
arpl
adc
cwtl
shlb
dec
in
cmpl
dec
jns
rolb
or
mov
dec
fdiv
lcall
push
cmp
inc
arpl
lret
push
push
jb
lcall
mull
push
dec
dec
sbb
or
sbb
xchg
lods
orb
cmp
dec
adc
mov
xchg
cmp
or
pop
mov
in
push
dec
loopne
incl
inc
or
in
dec
sub
push
or
cld
pop
sub
push
fcompl
mov
cli
add
fadds
ja
sbb
mov
stos
cmp
push
fcompl
push
sub
xor
dec
sbb
xchg
lcall
les
and
and
icebp
push
movsl
or
out
cmc
pop
push
stos
cmpsb
es
pop
imulb
aaa
ja
sub
inc
fimull
xor
shrb
cmp
adc
shll
out
outsb
dec
in
imul
add
inc
add
arpl
js
and
ljmp
dec
in
popf
mov
ud0
jbe
push
aam
cwtl
sarb
fs
mov
fcmovb
cld
and
push
adc
inc
cmp
inc
xlat
iret
ljmp
js
fucomp
push
push
sbb
adc
inc
xor
mov
or
mov
inc
jp
aad
jl
incb
in
test
out
neg
jge
push
pop
pop
ja
cmpsl
adc
mov
icebp
movsl
mov
mov
es
xor
xchg
cmpsl
and
sbb
xchg
push
mov
lret
mov
xor
adc
dec
fadds
rcll
arpl
mov
out
add
adcb
ss
mov
js
push
fwait
mov
sbb
or
push
push
test
scas
mov
call
call
jecxz
ja
or
or
loopne
mov
scas
out
jle
pop
mov
inc
in
push
or
out
mov
inc
out
in
aad
test
vmwrite
shlb
test
push
pushf
sbb
pusha
out
push
xchg
push
add
xchg
ret
mov
test
push
jle
xchg
movsl
or
lds
out
call
xor
movsb
xor
jne
repnz
jp
inc
andl
lahf
sbbb
mov
orl
hlt
stos
mov
xchg
cli
pusha
mov
stc
mov
roll
lock
scas
das
mov
adc
in
into
sub
add
inc
sbb
rcr
push
addr16
scas
inc
lock
jl
jbe
repnz
push
jnp
mov
dec
orb
xor
iret
addr16
adc
test
jle
push
loope
push
sbb
pop
repz
dec
cmpsb
push
push
mov
adc
inc
addl
xchg
jb
mov
loopne
cmp
ljmp
jbe
and
fs
sbb
jno
xchg
mov
les
or
lret
lock
ret
cmp
imul
in
repnz
ljmp
add
ret
mov
ja
std
sub
xorl
cmp
icebp
xor
or
jl
add
clc
jmp
mov
out
xor
fsubp
int
test
icebp
fwait
sbb
jmp
or
push
or
cmp
das
jbe
popa
scas
mov
loopne
repnz
xor
or
cmp
jmp
aas
add
xchg
dec
icebp
xor
sti
push
sbb
stos
outsl
sbb
mov
les
mov
add
jnp
outsb
xchg
and
outsb
bound
adc
sbb
and
bound
call
cld
aam
and
pop
dec
hlt
out
test
nop
mov
sbb
cmp
lds
jns
add
cmp
sub
push
bound
or
pop
aad
mov
adc
sarb
mov
loopne
je
add
into
imul
stc
mov
sarb
inc
test
xchg
ret
mov
notb
jp
dec
es
and
add
xor
jp,pn
loope
nop
sahf
stc
ficoms
mov
dec
add
or
or
lods
push
fdivl
adc
pop
mov
aad
mov
push
xchg
out
sbb
mov
pop
pushf
sbb
sbb
xchg
mov
sahf
inc
insb
mov
xchg
in
scas
push
fsubrs
pop
jmp
sub
mov
mov
dec
mov
ss
mov
dec
or
fstpt
jl
mov
mov
xchg
add
push
fsub
and
fisttps
lcall
dec
incl
inc
test
lods
mov
xchg
int
inc
pop
arpl
stos
pop
rcl
dec
mov
pop
mov
jmp
roll
xor
and
sbb
loop
push
sbbb
push
push
mov
ja
out
les
push
jmp
mov
or
inc
dec
decb
inc
loopne
aad
rol
mov
adc
xor
sbb
arpl
inc
rclb
pusha
rcr
lds
dec
pop
adc
mov
pushf
xchg
nop
sbb
aam
dec
je
orl
lahf
lds
daa
je
bound
je
mov
popa
xchg
xchg
lahf
push
loopne
lock
adc
pop
sub
and
ss
test
cld
mov
mov
pop
sub
rcl
cmp
mov
repz
add
inc
adc
sub
jle
xor
mov
push
bound
cli
mov
jp
mov
jo
bound
push
push
pop
jns
fstl
jno
jbe
sub
jmp
loopne
dec
mov
mov
test
dec
jge
pop
sbb
sbb
hlt
mov
inc
cli
or
mov
movl
andb
dec
mov
pop
fs
inc
lahf
icebp
jo
cmp
icebp
sbb
adc
mov
pop
mov
add
pop
cwtl
es
ja
lea
lods
inc
jb
or
dec
lock
push
inc
pop
outsl
pop
clc
push
mov
add
push
mov
pop
jp
testb
xchg
push
stos
ficomps
addr16
push
daa
push
xor
daa
lock
push
cs
mov
cli
or
divb
inc
mov
out
xor
rclb
cmpb
adc
mov
add
mov
add
scas
daa
xchg
jbe
jo
stos
xlat
mov
lea
mov
mov
aad
in
inc
cmp
cmp
dec
test
pusha
mov
mov
aam
xchg
clc
mov
ds
add
sbb
rcll
cmp
test
jg
push
fbstp
test
das
out
rorl
outsl
and
int
fisubrl
sbb
pop
jle
xor
adc
dec
in
icebp
mov
insl
outsl
adc
jne
rolb
adc
jl
fists
repz
mov
push
test
mov
pop
daa
inc
bsf
aad
subb
cmp
and
lahf
pusha
mov
idivb
add
and
xchg
jmp
pop
add
xor
pop
mov
test
dec
or
clc
dec
adc
add
jnp
test
jl
loope
movsl
adc
jno
lock
lds
cmp
aaa
ss
sub
inc
mov
cld
cs
cwtl
xchg
sub
addb
and
imul
pop
popa
loopne
cmc
cmpsl
stos
cli
push
cmp
daa
jnp
dec
cmp
scas
cmp
pop
es
push
icebp
test
xchg
shlb
mov
jo
fimull
repz
je
mov
outsl
sub
pop
push
mov
movsl
jp
fcoml
lock
das
pop
xlat
sub
les
jle
pop
mov
rcll
in
inc
push
js
pop
mov
pop
or
ficoml
add
enter
movsb
fs
in
push
inc
jecxz
fcmovb
push
in
cmp
pop
sub
adc
je
subb
hlt
scas
cli
push
int3
es
push
jg
add
pop
fmuls
xchg
pop
mov
and
clc
js
push
cmp
cmp
push
cwtl
les
jne
cmpsb
das
movsb
mov
enter
bound
ds
fmuls
mov
or
out
push
and
mov
xlat
cmp
sub
pop
push
mov
lret
add
jmp
sub
mov
loope
mov
test
je
xchg
or
jp
or
loope
add
mov
dec
aam
aad
xchg
loop
lret
and
clc
mov
jecxz
mov
outsb
call
cmp
jae
cmp
movsl
sub
and
add
dec
pushf
dec
and
pop
cld
bound
pushf
sahf
push
add
ss
jg
xchg
xchg
dec
aas
les
mov
enter
push
lock
dec
inc
inc
cltd
stc
or
out
out
pop
iret
push
cmp
fldenv
dec
add
xor
adc
ds
in
mov
sub
adc
fld
jo
adc
adc
and
aas
add
sbb
push
sahf
test
mov
lcall
jne
stos
push
popa
loope
stc
or
add
sub
mov
mov
mov
mov
mov
mov
adc
cmpsb
sbb
and
insb
sub
jbe
push
insl
mov
cmp
xchg
std
test
mov
daa
inc
mov
mov
adc
pop
lock
and
int3
andb
xor
rorb
or
inc
xor
or
lods
xchg
push
push
mov
push
xlat
into
push
add
sarl
subl
push
xchg
bound
lock
jne
imull
rolb
nop
sub
sbb
adc
and
cld
icebp
push
mov
inc
ljmp
rclb
xchg
adc
cli
or
mov
jb
xchg
add
mov
imul
mov
push
pop
iret
or
inc
mov
stos
jge
mov
mov
jns
push
sbb
jl
mov
jo
sbb
aam
cmp
sbb
adc
and
bound
push
sub
mov
mov
movsl
rcrl
adc
xlat
frstor
pop
jl
test
xchg
repnz
ds
xchg
cmp
or
xor
std
add
nop
aas
ds
push
add
adc
push
mov
cmp
mov
ror
shlb
and
loope
ljmp
push
push
lea
cmc
fadd
testl
test
pop
pop
xchg
call
lods
xor
das
mov
mov
adc
hlt
sbb
xor
sbb
push
bound
shr
mov
stos
movsl
mov
pop
xlat
scas
mov
inc
lock
and
daa
fstpt
movsl
push
dec
inc
clc
pop
jle
cld
xor
mov
das
sbb
int3
mov
inc
or
int
mov
cmpsl
sub
push
cwtl
nop
repz
xor
gs
frstor
or
clc
adc
ljmp
jp
pop
xor
cmpsb
pop
pushl
cmpsl
or
xchg
je
pop
mov
cmp
cmc
test
pop
or
lcall
push
or
jae
dec
shr
xlat
ret
pmullw
cmp
inc
jnp
add
sbb
into
ret
jecxz
push
lcall
xchg
neg
push
loopne
inc
cmp
notb
andl
enter
popf
in
adcb
je
push
add
aam
jnp
imul
lods
dec
or
roll
adc
mov
jecxz
inc
cmp
add
and
mov
pop
rorb
xchg
out
push
stc
loopne
and
or
fldl
in
vpandn
hlt
xlat
pop
fldl
mov
mov
ss
bound
test
sub
ja
roll
jg
int3
cmp
cmp
cmpsl
add
inc
xor
and
inc
adc
and
out
adc
test
rcl
sbbb
call
sub
loopne
xor
lcall
popa
add
xchg
sbb
push
sti
fwait
sarb
or
insl
mov
rcll
add
in
add
data16
pop
xor
in
std
cmpsl
inc
ja
mov
adc
pop
test
inc
popf
cmp
aad
adc
pushf
add
jmp
les
lcall
imul
inc
scas
adc
gs
mov
adc
loop
xchg
push
sub
add
out
and
mov
cmp
call
adc
and
fsubrl
ljmp
mov
mov
out
cld
pop
call
icebp
xchg
dec
fs
mov
xchg
and
sbb
bound
loope
mov
sbb
sub
fdivrp
jl
movsl
es
push
inc
sub
sbb
add
xlat
dec
inc
mov
push
stc
jo
out
outsb
dec
hlt
inc
cmp
scas
xchg
repnz
sbb
adc
lock
pop
aad
adc
pop
inc
add
inc
stc
clc
add
lcall
cli
or
shlb
mov
push
sub
pop
sub
mov
das
insb
cmpb
les
mov
mov
adc
loope
jl
xchg
mov
dec
ret
or
pop
pushf
pop
pop
leave
out
mov
cmp
pop
inc
sbb
mov
jae
jge
push
push
pop
sbb
jl
sub
lock
in
scas
movsb
movsl
pop
adc
mov
cld
and
fildll
add
cmp
push
inc
leave
xchg
pop
lock
movsb
daa
add
cmpsb
mov
sub
cmpsl
mov
lcall
mov
aas
imul
and
and
mov
pop
jle
add
cwtl
daa
insl
jg
je
arpl
sbb
xorb
les
ja
int
jecxz
jle
loope
jnp
and
pop
test
lods
and
icebp
call
cli
mov
sahf
sub
ljmp
jb
push
rcr
les
out
fs
push
add
jb
mov
js
dec
jo
jcxz
test
rcrb
insb
shrl
xchg
rorb
jae
push
pop
shr
mov
movsl
pusha
js
inc
pop
outsl
adc
cmp
lcall
or
pushf
push
jg
adc
clc
push
adc
add
mov
cli
add
push
cld
lods
ds
js
aam
rol
outsb
not
xlat
imul
jg
sub
xor
mov
inc
xor
out
clc
dec
out
fsubp
fstpt
add
or
repnz
in
mov
loope,pn
mov
test
jbe
out
fwait
inc
inc
clc
inc
adc
xchg
icebp
ficomps
xor
dec
ss
call
mov
dec
jns
push
js
ret
and
pop
cmp
icebp
cmp
lock
fadds
rcr
xchg
cmp
mov
cli
hlt
mov
and
push
dec
fldt
loopne
push
stos
jnp,pt
adc
jge
inc
mov
dec
cmp
adc
js
add
fists
leave
iret
call
pop
push
mov
or
lcall
icebp
pop
adc
lcall
xchg
mov
jb
cmpsl
or
ret
lock
fadds
in
imul
push
add
lods
aas
push
nop
sbb
movsl
cld
les
test
mov
ss
stos
jb
xchg
and
ljmp
add
add
push
sbb
jg
imul
inc
mov
xor
fldl
cmp
je
outsb
jg
cli
or
ficompl
aam
imul
sbbl
scas
mov
fildl
mov
pcmpeqw
or
jge
sub
add
push
fs
inc
push
jbe
pop
lea
aam
nop
sub
mov
lahf
ucomiss
popa
movsl
shll
sub
inc
inc
arpl
lret
rolb
mov
xchg
adc
pop
aaa
loopne
or
repnz
cmc
sahf
or
or
dec
mov
shrb
dec
cmp
mov
pop
sub
inc
cmp
cmp
jecxz
rorb
mov
push
or
insb
and
jge
add
lock
push
leave
mov
lods
push
lds
test
jb
xchg
rorl
mov
outsl
addl
test
lret
push
pop
or
push
sarl
aam
mov
xorl
lods
shrb
pop
or
test
xor
out
cmc
outsb
add
adc
adc
mov
add
dec
fwait
dec
xor
mov
push
fisttps
mov
inc
pop
or
add
and
das
mov
stc
jae
pusha
cmp
vunpckhps
popa
mov
mov
or
inc
jno
sub
lcall
inc
lods
es
cmc
add
add
push
sbb
ret
movsl
dec
dec
jns
pop
icebp
xchg
and
daa
pop
mov
mov
ret
divl
jle
add
dec
js
les
clc
jge
push
pusha
xor
mov
xchg
fdivr
xchg
sbb
stos
addb
adc
mov
cmp
out
mov
or
mov
cmp
mov
pusha
cli
adc
and
jp
nop
in
cltd
lock
aam
jl
nop
in
std
push
sub
mov
scas
push
in
mov
cmpsb
sub
outsb
jmp
sti
lea
inc
cmpsl
cmp
mov
fs
push
inc
out
xchg
xchg
das
mov
pop
mov
cs
xor
test
push
pop
and
arpl
iret
lahf
sbbb
cmp
int3
cli
jne
jle
es
int3
jne
das
clc
inc
outsl
xor
ja
mov
call
mov
mov
test
add
adc
cmp
ret
and
fimuls
rclb
and
mov
sbb
jno
jmp
jns
or
or
xchg
push
fmuls
push
add
or
mov
enter
lods
adcb
sbb
scas
and
pop
jne,pt
int3
icebp
and
pusha
or
sub
and
xor
in
cmc
test
ss
out
xchg
and
out
ficoms
roll
leave
ljmp
fsubs
jmp
lods
xchg
pop
insw
sub
xor
arpl
dec
pusha
xlat
sbb
ret
stos
cmp
decb
dec
sbb
lods
push
fadds
loope
mov
push
call
mov
and
dec
out
xchg
or
or
inc
jo
inc
jp
jae
adcl
pop
or
fcoms
frstor
xorl
cli
mov
fdivr
xchg
pop
enter
pop
std
orb
outsb
sub
jl
dec
ljmp
sub
scas
lahf
sub
out
fiadds
inc
pop
lea
jp
dec
push
and
jg
mov
fimuls
add
fidivl
mov
testb
xchg
jne
into
add
push
cli
push
pop
cli
add
inc
lock
fwait
es
xchg
cmpsl
mov
in
sarb
pusha
lcall
lcall
mov
and
sub
mov
push
loopne
loop
xchg
inc
in
lcall
mov
movsl
das
jnp
jle
push
add
and
pop
jl
jbe
xor
sbb
iret
or
jno
int3
or
cwtl
mov
lea
push
lea
test
sahf
out
insl
loopne
mov
sub
cmpl
lock
aam
mov
inc
clc
cmp
and
enter
ret
mov
xor
sub
lock
inc
mov
dec
imul
fwait
jae
out
lcall
mov
or
push
add
push
inc
cltd
mov
aad
ret
sti
jmp
jne
popl
fnstsw
std
inc
pushf
mov
cmp
fisttps
rorb
stos
insb
and
or
testl
das
adc
cmp
push
cmp
add
xor
pop
dec
xor
cli
inc
enter
fistpll
add
orw
fwait
ja
pop
or
push
inc
jns
mov
mov
or
inc
dec
lock
or
testl
pop
inc
dec
shl
inc
mov
inc
lods
inc
mov
push
and
or
lea
adc
sub
mov
jns
sub
inc
data16
push
add
bound
push
stos
dec
pop
mov
pop
push
cmp
ja
pop
push
test
stc
out
ficomps
sbb
add
pop
sub
gs
dec
das
sub
add
in
out
add
fcoml
lock
test
push
sub
add
inc
push
fcomps
jle
lock
fdivrs
add
insb
mov
pop
dec
and
int3
rcl
arpl
cmp
cmpsb
xchg
mov
outsb
xlat
inc
xchg
inc
insl
and
pop
and
jle
push
outsl
push
daa
add
add
push
push
pushl
xorb
scas
push
xchg
js
fwait
mov
mov
outsl
aam
jg
add
xlat
pop
or
ljmp
loope
dec
xor
or
and
add
fs
and
sub
rcll
decb
loope
pop
jnp
rolb
ret
jno
jp
je
mov
lcall
ret
jmp
leave
rolb
int
inc
filds
lock
adc
out
je
mov
insl
outsl
outsb
clc
jg
mov
loopne
leave
mov
out
hlt
ljmp
mov
les
mov
jle
add
outsb
cmp
add
iret
xlat
mov
outsl
in
orb
push
clc
mov
test
cmc
adc
aam
dec
test
and
pop
mov
cs
test
arpl
outsb
push
add
add
dec
sbb
popa
add
add
cmp
inc
push
cmpsb
pop
adc
or
mov
inc
cmp
mov
mov
sbb
mov
lock
jnp
gs
out
add
lahf
mov
push
mov
push
fsubs
dec
rcrb
adc
cwtl
sub
mov
movsb
lock
movsl
fidivs
dec
jmp
mov
push
fdivl
lds
aaa
dec
cwtl
push
bound
hlt
shrb
es
pop
sahf
mov
add
pop
mov
push
cld
add
fucom
xlat
pop
pop
mov
dec
das
inc
shlb
pop
loop
mov
lds
inc
adc
xchg
jp
mov
lret
jle
fiadds
mov
or
sbb
sbb
test
and
adc
popa
imul
iret
lds
cld
dec
xor
shrb
inc
clc
mov
decb
pmuludq
and
xchg
shll
add
sub
adc
mov
sarl
ror
lcall
test
mov
test
lods
les
dec
cmpsl
mov
adc
shlb
call
fsubs
lods
mov
mov
adc
sbb
add
stos
mov
and
es
pop
xchg
and
cmpsl
jb
add
inc
pusha
out
xchg
pop
mov
sub
mov
mov
adc
fisttpll
push
das
pop
jp
sub
xor
mov
sbb
into
add
cmpsl
mov
test
or
dec
jecxz
sbb
push
test
loopne
sahf
and
ficoms
fwait
and
add
mov
sbb
in
push
cli
movsl
cmpsb
inc
ret
iret
and
std
push
test
mov
in
push
xor
jge
dec
ja
lret
push
jp
sbb
lods
out
mov
xor
loopne
jle
add
sarb
sahf
xchg
test
ret
adc
add
sbb
mov
movsb
movsb
sub
mov
lods
fists
cs
mov
jnp
adc
xchg
xor
in
mov
aad
fmuls
inc
adc
or
or
sbb
or
test
rcl
jns
add
clc
inc
in
call
fcomps
pusha
outsb
mov
fwait
cmp
inc
imul
cli
jmp
out
xor
lods
cmp
test
jge
mov
push
or
inc
inc
es
xchg
fildl
loopne
daa
scas
dec
lods
test
pop
fstps
loopne
pop
lock
mov
inc
fisttps
push
cmp
lock
fiaddl
pop
xor
pop
in
jnp
mov
idivl
lea
mov
xchg
mov
mov
out
pop
loop
shrb
pop
in
insl
in
mov
inc
and
dec
loope
aas
stos
sub
xchg
imul
mov
hlt
ficoms
lock
cmpsl
fiadds
jae
in
push
lods
add
cwtl
fmul
add
inc
add
push
loope
jo
push
repz
cld
sub
or
sbb
out
inc
call
jmp
int
pop
fbld
lahf
sub
bound
outsl
test
bound
push
mov
fistps
sub
mov
pop
inc
insl
sbb
es
xchg
mov
mov
lret
push
fcomi
jg
hlt
or
add
sub
popa
push
test
jecxz
sbb
xchg
sbb
addr16
jg
dec
les
mov
mov
cmp
pop
mov
jge
lock
sbb
sub
shll
push
or
test
sbb
xor
scas
dec
xchg
cltd
es
call
daa
sub
cmp
push
push
outsb
and
jl
add
int
add
outsb
jb
push
adc
loope
shr
or
loop
popa
js
lods
xor
orb
cmp
mov
daa
loopne
xchg
sub
pusha
and
aad
mov
mov
xchg
test
fisttpll
arpl
jb
or
push
popa
not
cs
or
mulb
push
sbb
enter
jnp
push
test
jno
es
int3
jecxz
cmp
sub
mov
sbb
xor
ret
xchg
fwait
out
mov
scas
mov
and
les
jle
add
jmp
pop
pop
pop
loope
mov
sbb
les
and
mov
pop
push
mov
lcall
cmc
outsb
in
and
pop
dec
iret
daa
inc
xchg
adc
mov
in
orb
in
mov
xchg
popa
and
pusha
and
std
ret
imul
aam
pop
inc
ds
test
jbe
sar
inc
jno
jecxz
xor
mov
cmp
lods
sbb
push
mov
out
pop
sbb
lahf
call
sbb
add
mov
sub
lcall
lcall
xor
inc
loop
add
and
test
out
pop
test
push
and
push
ljmp
pusha
mov
pusha
sub
dec
push
lret
sub
or
push
add
lock
pop
pusha
mov
outsl
cs
cmovs
inc
push
lea
add
adc
ret
and
std
cwtl
mov
cmp
mov
bnd
sub
add
inc
cmpsb
pop
ja
mov
fnstsw
push
lock
movsb
in
and
adc
cld
sbb
jae
push
test
mov
mov
mov
bound
pop
js
scas
lea
adc
and
bound
rorl
pusha
and
xchg
xlat
inc
sub
xor
cmp
aam
add
pop
push
cwtl
mov
jmp
push
in
sub
xchg
cld
pop
int3
push
lds
sub
xor
add
pushf
xor
call
push
mov
cmp
aas
mov
out
jo
mov
stos
push
daa
sar
jo
mov
and
sub
lock
pop
add
out
icebp
sbb
cmpsl
xchg
mov
loopne
mov
mov
bound
pop
nop
push
adc
cwtl
rclb
and
arpl
popf
mov
cmp
mov
xchg
rolb
push
and
mov
ficoml
inc
and
mov
ret
pop
stos
jle
andb
jne
add
or
xor
imul
sarb
test
or
push
ljmp
sbb
test
xor
add
inc
inc
sub
push
push
pop
push
in
std
lret
sbb
fistpl
push
lret
stc
ja
cli
push
sbb
sub
pop
andb
ret
jp
sbb
dec
jmp
sti
dec
mov
jb
js
mov
pop
push
push
xchg
pop
imul
inc
sub
rorb
sub
ds
cmp
sahf
sub
push
cli
jp
sahf
test
mov
cli
push
dec
xor
add
push
sub
pop
lcall
inc
aas
sbb
decl
dec
mov
lock
enter
in
rcll
enter
shrl
sti
out
mov
xchg
adc
test
sub
jmp
mov
in
cmp
cmp
or
and
adc
insl
mov
fcoml
sub
push
test
sbb
xor
gs
mov
lahf
fsts
sub
rclb
outsl
icebp
std
mov
outsl
sub
inc
mov
push
das
rolb
jl
mov
dec
add
shl
rolb
faddp
sbb
popa
or
cmpsb
pop
ret
in
stos
cli
adc
mov
cmp
mov
dec
fistpll
and
and
hlt
xor
lahf
jecxz
out
mov
mov
push
mov
jge
sbb
lret
shlb
sub
mov
sahf
jo
addb
in
or
aam
adc
out
mov
sub
sub
push
cmc
cmp
icebp
adc
dec
pop
aas
js
jbe
push
sbb
lahf
insb
dec
fidivs
decb
test
add
fiaddl
stos
js
mov
ret
loopne
js
add
pusha
aam
cmp
sbb
insl
out
push
adc
sbb
xchg
rcll
push
mov
mov
xor
sbb
pop
outsl
sti
inc
sub
xlat
push
test
sub
cmp
rcrl
pushf
js
mov
sbb
cltd
sub
cld
jg
call
xor
jmp
pop
cmp
xchg
sub
out
loopnew,pn
or
jne
mov
out
jbe
loope
scas
movsl
sbb
dec
ja
jne
push
and
adc
push
insb
ds
inc
xchg
push
sub
insb
subb
sar
mov
sti
push
jbe
add
insb
mov
imul
repz
mov
ret
push
popa
scas
mov
movsl
or
push
das
sbbb
cmp
test
mov
pop
add
rolb
into
inc
cmp
adc
scas
mov
mov
ljmp
push
or
or
mov
jle
loop
mov
adc
into
inc
mov
icebp
fistpll
sbb
push
pop
push
xchg
fldl
lds
jno
dec
cmc
je
inc
pop
dec
int3
inc
lods
cli
inc
in
dec
faddp
fimuls
inc
mov
xor
filds
or
iret
popf
mov
sbb
in
xchg
jp
sbb
inc
cli
ret
out
cmp
inc
xchg
dec
mov
les
sub
dec
je
or
xchg
inc
maxps
test
loop
lret
add
insl
aad
mov
mov
mov
jl
sbb
movsl
vmovq
inc
call
dec
std
push
cmp
je
daa
dec
pop
dec
sbb
push
xor
lock
mov
mov
test
or
xor
pop
ficomps
or
icebp
sub
out
mov
sub
aad
mov
mov
mov
mov
and
jecxz
add
mov
inc
xlat
add
dec
mov
xor
sbb
cwtl
andb
mov
jg
xor
mov
inc
push
add
jge
xor
sub
pop
pusha
sbb
out
gs
loope
mov
cs
jno
loope
dec
test
mov
incl
in
in
and
mov
pop
imul
push
xlat
clc
rcll
mov
fisubrl
aad
jle
xor
jp
daa
aas
clc
xchg
das
call
mov
xchg
xor
jg
mov
stos
mov
xchg
rolb
rcrl
sbb
ds
xor
push
in
jp
pusha
add
push
add
jecxz
and
push
mov
insl
xor
or
mov
punpcklbw
mov
and
pop
pop
cs
mov
aaa
lea
pushf
adc
addr16
xor
adcb
mov
and
mov
lahf
adc
rcrl
xchg
pop
incb
mov
shll
out
out
push
add
scas
cli
pop
mov
imul
imul
pop
rcrb
mov
mov
mov
int3
jge
cmp
mov
fs
jb
xchg
shlb
push
sbb
and
aaa
in
out
mov
jp
data16
push
adcl
repnz
lahf
xor
outsl
xchg
cmp
add
std
dec
andb
aas
insl
dec
lds
popf
insb
frstor
xor
test
ret
ds
pop
xorl
outsl
xchg
xor
ss
cmp
and
pop
sbb
call
js
inc
imul
mov
scas
and
cmpsl
dec
inc
repz
jb
xor
mov
lcall
movsl
xor
mov
fdivrs
inc
xor
xchg
and
or
push
or
call
je
add
rol
iret
sbb
sbb
addb
cwtl
jb
lock
pop
sub
mov
inc
cltd
mov
and
stos
sbb
push
and
xor
mov
mov
and
dec
push
cs
jp
jmp
andl
xchg
jg
add
dec
jmp
adc
jp
aad
mov
ds
shll
pop
xchg
jne
push
fsubl
outsl
addr16
dec
ret
pop
sub
les
adc
dec
mov
sub
add
xor
jmp
mov
push
xor
mov
push
shlb
mov
mov
ss
out
aam
enter
add
mov
adc
cmp
add
jb
and
xchg
sub
mov
or
icebp
lods
mov
movsl
movl
out
cmp
js
lods
repz
dec
in
and
mov
xor
dec
ficompl
adc
push
jbe
rolb
int3
inc
inc
xor
cli
push
push
xchg
call
dec
push
loop
je
shlb
push
lock
lods
call
popa
cmpsl
test
mov
hlt
nop
lods
gs
fiaddl
outsl
test
mov
add
fstpl
jp
push
cmpsb
push
add
pop
add
or
test
mov
fndisi(8087
cs
ret
push
or
aas
gs
sbb
aad
inc
pop
ljmp
add
push
mov
les
pop
popf
add
ss
sbb
pop
jmp
xor
dec
in
mov
push
mov
repz
push
inc
xor
stos
sbb
test
rclb
jo
pop
cli
into
sahf
jge
pop
lahf
push
cld
aam
or
cmpsl
jg
jp
push
xchg
jno
insb
or
mov
loope
arpl
jle
jmp
push
popa
xchg
sub
cmp
inc
inc
stc
cmp
xchg
pop
popa
jmp
or
jge
mov
xchg
sbb
xchg
xlat
mov
lahf
mov
mov
fs
pusha
sbb
push
cmpsl
aam
insl
loopnew
bound
mov
mov
xchg
dec
xchg
push
sbb
add
stc
lcall
int3
and
fyl2x
loope
push
sti
adc
outsl
call
push
push
test
xor
in
xchg
out
dec
xchg
cmp
push
test
sub
jbe,pn
lret
inc
sbb
xchg
mov
lock
sub
mov
adc
dec
test
test
inc
xlat
aad
pop
test
fwait
inc
fiaddl
sub
gs
mov
pop
out
mov
leave
test
or
stos
in
lods
lock
inc
jl
stos
sarl
mov
imul
push
hlt
lret
pop
repnz
adc
mov
lds
repnz
push
mov
or
inc
loop
xlat
popa
add
scas
lods
dec
data16
sub
mov
shrb
mov
popf
test
ret
push
js
mov
cmpl
mov
add
add
cld
or
push
jl
or
jmp
outsb
xchg
pop
ds
sub
mov
lds
cmp
push
cmp
data16
adc
jbe
xor
or
in
sahf
adc
rcrb
insb
fwait
pusha
xor
sbb
je
fidivrl
shl
sti
aas
js
and
pop
jmp
insb
mov
jne
mov
jbe
lock
fisubrl
test
or
jb
sbb
in
adc
filds
insl
fsubrs
and
and
cmpsb
fstp
shr
test
push
clc
dec
out
into
pop
ljmp
mov
bound
negl
jl
adc
loope
lahf
dec
pop
clc
lcall
and
jle
push
and
add
test
out
out
adc
fisttpl
sbb
idivb
adc
add
sbb
add
xchg
test
push
push
fcmovnb
hlt
mov
push
aam
in
inc
jae
sbbb
out
push
add
mov
dec
mov
stos
testl
jmp
push
cmp
aad
shr
push
int3
mov
mov
jecxz
cltd
mov
adc
je
inc
sbb
setp
fwait
jl
decl
xlat
mov
in
mov
pop
out
mov
push
mov
shr
aaa
push
hlt
das
imul
mov
xor
mov
mov
ret
test
cli
adc
loop
fdivs
fsub
push
outsb
std
lret
jle
orb
arpl
ds
ss
push
aaa
out
lods
imul
cmpsb
sub
stc
pop
cmp
out
pop
iret
aam
and
jb
add
into
lds
ljmp
popa
jae
add
fwait
enter
mov
add
add
test
lret
hlt
mov
rcrl
test
adc
cwtl
jg
push
push
outsb
ljmp
cmp
mov
cwtl
ret
aas
adc
push
hlt
push
mov
pop
outsl
dec
cltd
sbb
sahf
inc
sbb
cmp
mov
inc
es
sub
cmp
fisubrs
xchg
and
int
cld
add
jnp
jns
and
mov
adc
sub
jg
mov
ss
frstor
out
inc
push
or
mov
imul
mov
push
movsl
and
jge
pop
xorb
fisubl
cmp
push
ljmp
mov
movsl
xor
int3
imul
inc
pop
aas
pop
and
push
popa
scas
xor
xchg
das
leave
dec
sbb
jecxz
cld
lahf
xor
xchg
adc
xor
rcr
clc
icebp
sbbl
dec
hlt
pop
clc
mov
and
cld
jl
mov
out
push
bound
jg
and
std
into
push
cmp
xor
fs
mulb
jmp
mov
pushf
int
movsb
inc
mov
adc
mov
pusha
dec
cld
mov
or
test
loop
nop
push
xor
xlat
mov
adc
dec
jae
lret
dec
int
in
ss
sbb
inc
push
mov
sahf
and
mov
dec
xchg
loop
ret
popa
addr16
dec
cmp
xchg
orb
sbb
mov
adcb
xchg
andb
decl
mov
xchg
push
adc
and
call
cmp
sub
sub
sub
into
ficompl
clc
add
mov
jmp
into
orb
push
fwait
dec
xor
add
jl
add
push
add
ja
xchg
dec
xor
arpl
push
push
in
adc
cmc
shll
fabs
in
lahf
adc
cmp
pop
pop
lock
in
jns
add
sbb
mov
sti
clc
daa
loop
inc
cs
test
add
add
sbbl
jne
sub
aam
js
mov
scas
movsb
hlt
dec
adc
ds
jecxz
lret
pop
lcall
bound
test
leave
jns
fwait
cmp
jge
cmpsl
popa
ds
loopne
pusha
adc
stos
mov
add
push
mov
dec
aas
dec
pop
cmp
jp
push
aam
sbb
out
jo
into
xchg
cwtl
int3
xlat
or
push
mov
or
mov
adc
mov
xchg
aad
mov
test
cmp
or
add
test
push
test
js
mov
rclb
cmp
subl
inc
adc
sub
push
xor
add
lock
jne
mov
mov
push
cmp
vmread
clc
outsl
xorl
sbb
lret
flds
js,pt
ljmp
sbb
lods
push
adc
cmc
jp
cmp
adc
int3
push
lds
jne
movsl
push
adc
nop
ds
mov
xor
cmp
rclb
mov
jecxz
mov
scas
int3
sti
jno
cmp
lret
mov
cld
mov
inc
je
push
adc
dec
cmpsb
test
mov
dec
aad
incb
cmp
and
call
dec
inc
mov
xchg
cmp
mov
inc
dec
fsin
and
ljmp
push
fdivl
xchg
test
inc
popf
pop
jge
pop
sar
sti
xlat
mov
pop
xor
dec
lds
cli
icebp
jno
pop
clc
dec
sbb
adcb
xor
xchg
xchg
push
adc
je
jmp
stos
fidivrl
or
xchg
ss
divb
scas
ds
int3
pop
fwait
inc
ret
sub
inc
adc
ljmp
clc
mov
push
pop
cmpl
xchg
pop
dec
stos
int
cli
sbb
scas
mov
mov
mov
jge
sub
sbb
adc
and
mov
xchg
mov
push
pop
pop
lahf
call
push
lds
cmp
xor
loope
pop
sbb
adc
jbe
out
test
mov
cmpsl
dec
add
pop
mov
fidivl
xor
mov
jg
addb
adc
mov
mov
gs
add
aaa
inc
sbb
mov
adc
inc
fildll
pop
test
jge
imul
subl
loopne
fildll
test
cmp
cmp
cli
cltd
inc
das
mov
cmc
js
loop
out
fsubrs
sub
dec
stc
adc
fwait
xor
fnstsw
xchg
mov
lcall
ds
dec
into
decb
pop
sbb
adc
cld
insl
fsubl
push
pop
add
mov
mov
mov
sub
jbe
jae
cld
mov
inc
xchg
xchg
lock
popa
ss
sbbb
inc
movl
shl
mov
push
jnp
lock
insl
pop
outsb
rcr
push
lds
rcll
push
hlt
sbb
aam
jl
and
push
jo
xor
iret
jge
mov
pop
sbb
inc
sarb
inc
pop
push
je
add
cmpsb
jecxz
notl
add
std
add
jg
dec
dec
pop
fistl
popf
lods
sbb
imulb
mov
sbb
jbe
dec
cmpsb
data16
daa
ret
lods
pop
push
mov
push
imulb
inc
push
in
lahf
loop
mov
mov
out
adc
fists
inc
cmp
rorb
scas
cwtl
jb
mov
rol
stos
push
jbe
fstps
cmpxchg
outsb
or
in
insb
push
pop
jp
mov
jge
adc
sub
mov
fbstp
les
loop
add
pop
jg
xchg
lret
adc
fiaddl
cmpsb
add
cmpsl
jnp
add
add
sub
or
outsl
xor
cli
push
lea
sub
mov
ret
xor
negb
popf
testl
or
sbb
xchg
and
loopne,pn
jnp
popf
ret
sti
add
and
xor
xor
xchg
arpl
lods
mov
mov
cmc
idivb
cld
pop
mov
add
inc
xchg
popf
lods
addr16
or
out
call
jb
hlt
add
pop
es
fwait
mov
sub
and
jo
into
pop
mov
pusha
jae
sub
inc
sbb
insl
aas
inc
ljmp
sbb
aad
xchg
sbbl
jecxz
xor
xor
push
ret
scas
mov
aaa
shrb
adc
adc
adc
fdiv
es
pop
xchg
int3
enter
jp
insb
enter
in
adc
pop
fldcw
fmulp
andps
insb
add
ljmp
setne
jns
xchg
and
loopne
out
rorl
pusha
xor
daa
pop
inc
add
arpl
adc
sub
pop
movsb
paddsb
mov
cmc
hlt
xchg
clc
rorb
stc
or
sbb
jno
lods
cmpsb
fsubs
into
cmc
mov
fmuls
mov
iret
ljmp
and
cmp
cmc
mov
sbb
loopne
xlat
mov
mov
in
push
clc
test
push
xorl
and
shll
enter
adcl
arpl
jns
dec
icebp
mov
insb
fdivl
push
clc
xor
dec
arpl
sar
or
cld
push
mov
test
mov
ja
mov
jmp
popa
les
dec
jecxz
xor
lcall
cmp
add
jbe
pop
rcr
fdivr
fbstp
scas
jns
addr16
sub
mov
mov
xorl
push
inc
mul
mov
test
sub
enter
clc
js
rcl
and
sbb
xchg
pextrw
xchg
cmp
gs
test
out
dec
sbb
mov
adc
repz
push
repz
scas
shrb
cmpsb
mov
xchg
jo
mov
push
mov
dec
mov
adcb
jp
adc
lret
pop
fbstp
addb
fisttpll
xchg
mov
into
adc
mov
mov
cmpsl
outsb
and
in
les
cmp
add
testb
test
pusha
mov
mov
or
pop
dec
shlb
add
cmp
dec
cld
mov
insb
lock
jbe
fdivp
add
cli
push
mov
jne
cmp
in
aad
aad
imul
xor
outsb
hlt
mov
repnz
xor
dec
sbbl
test
mov
push
clc
pop
and
stos
add
aam
fildl
testb
pop
sbb
lock
ret
inc
test
pop
mov
inc
push
xor
adc
ds
fwait
int3
in
pop
icebp
lcall
aaa
jno
test
xchg
stos
push
push
sub
aas
aad
or
cmp
mov
test
or
mov
gs
mov
shrl
push
movsl
pop
adc
jl
mov
fsubs
mov
movsb
sbb
insl
rolb
test
shlb
popa
jmp
push
inc
enter
ror
jnp
sahf
adc
jl
fidivrl
add
pop
daa
dec
lods
movsl
les
popa
cld
sti
in
xchg
roll
xchg
subb
pop
push
push
mov
xorb
dec
enter
scas
filds
lods
push
fdivrl
sbb
pop
movsl
shlb
dec
out
sbb
fistps
retw
inc
insb
mov
pop
iret
xor
xchg
xchg
pop
iret
repz
pop
out
loop
xor
or
xchg
push
lret
xor
push
cwtl
popa
imul
pop
adc
fdivrs
dec
ret
arpl
mov
dec
sbb
insb
cmp
push
push
adc
inc
aam
xor
jmp
cs
sbb
mov
sti
aam
cld
mov
dec
lret
loop
pop
inc
subps
clc
addl
add
iret
lret
dec
pop
mov
pop
or
aas
leave
loope
mulb
and
mov
pop
sub
mov
mov
add
mov
jnp
lahf
push
mov
movsb
scas
push
repnz
loopne
xchg
pop
rcr
adc
jae
out
fiadds
popa
add
icebp
int3
add
cmp
adc
jmp
pop
inc
lods
sti
sub
aaa
mov
cld
testb
jp
xor
cltd
and
aas
insb
sbb
pop
cmp
jl
xor
jns
cld
lret
jno
cmp
add
mov
add
repnz
inc
pop
call
cmpsl
lcall
shr
scas
mov
mov
rcrb
loopne
jge
adc
add
fistpll
cmc
inc
sbb
frstor
test
jo
scas
mov
jb
xlat
call
dec
cmp
sahf
add
add
repz
lret
inc
das
repnz
push
mov
js
jae
adc
push
add
cwtl
in
jmp
or
cmpsl
jge
mov
mov
shlb
fidivl
adc
dec
fisubrl
add
pop
and
jno
and
jo
mov
test
mov
cwtl
add
pop
dec
mov
mov
aaa
and
push
mov
jne
mov
push
insb
loope
push
or
adc
inc
jle
mov
or
outsb
aad
loope
push
cld
pop
and
mov
and
es
and
dec
andb
rdtsc
sahf
ja
lods
sub
pop
push
pop
mov
scas
mul
or
scas
cs
mov
scas
or
add
push
scas
adc
into
jns
es
xchg
xor
loopne
mov
test
cld
jl
pop
lret
sub
lods
inc
jecxz
insl
bound
add
push
and
sbb
rcrl
mov
xor
mov
push
lods
into
dec
loopne
loop
imul
mov
cmp
adc
cld
fistpll
movsl
bound
clc
jo
xor
lds
pop
cmc
ret
repz
and
mov
or
inc
div
repnz
sub
mov
add
mov
iret
daa
flds
fnstenv
popa
cltd
push
imul
mov
loopne
add
xchg
clc
ss
push
mov
mov
add
push
stos
negl
push
int
xchg
fidivs
inc
push
lret
add
pop
ja
in
inc
jge
inc
add
pusha
or
or
lods
push
dec
test
fmuls
sti
pop
push
mov
pop
cmp
imul
icebp
aaa
dec
cmp
mov
push
sub
pop
pop
das
push
cli
mov
popf
push
repnz
push
das
push
lods
or
adc
movl
repz
adc
pop
ret
mov
loop
sub
ret
lcall
pop
aad
sbb
cmp
fisttps
inc
sub
scas
insb
loope
sub
in
ret
hlt
sub
cwtl
das
xlat
add
mov
or
imul
mov
xchg
aad
popa
jns
cmp
pusha
push
int
leave
add
push
cltd
xchg
into
cmp
test
inc
mov
aad
push
pop
fcomps
hlt
jno
mov
addr16
and
mov
inc
shlb
lret
fbstp
mov
scas
or
ret
mov
js
pmulhuw
pop
pop
cld
fs
lods
out
jae
xchg
outsl
mov
aaa
mov
outsl
pop
push
pop
jp
imul
cld
lods
inc
ljmp
ret
inc
pop
add
push
xor
mov
and
add
or
sub
orl
inc
xchg
push
sub
inc
nop
scas
fstps
push
mov
imul
mov
lds
aas
xor
cs
lret
imul
sbb
mov
addl
aam
xchg
or
or
mov
add
movb
push
sub
into
imul
loop
lock
outsb
clc
push
dec
and
dec
pushf
or
rcr
mov
fmuls
nop
mov
imul
je
mov
sub
test
cmpsl
jg
into
mov
divl
std
shr
xor
lock
out
test
arpl
mov
cmp
jle
aam
inc
lods
test
ffree
clc
mov
mov
adc
rcl
sbb
sbb
sti
add
cmp
in
mov
or
mov
dec
je
mov
aad
xchg
and
mov
pop
pusha
mov
add
and
xor
aas
jbe
sbbb
dec
fmuls
mov
jecxz
xlat
mov
push
push
and
mov
cmc
pop
add
and
mov
sbbl
xchg
int
cmp
lock
inc
inc
test
cmp
repnz
pop
icebp
xchg
loope
sti
jb
fstl
mov
popa
fisubrs
ret
mov
sbb
clc
imul
and
mov
gs
aad
pop
jg
or
add
lods
mov
or
popa
inc
aad
or
ficoms
imul
mov
daa
mov
stos
repnz
dec
and
inc
jg
outsl
popa
add
xor
sbbb
and
pop
je
mov
lahf
dec
outsl
insl
cs
mov
je
orl
test
mov
clc
xchg
xchg
lret
mov
jbe
dec
push
cs
pop
es
jle
jnp
lods
popf
mov
and
push
hlt
and
mov
push
imul
adc
stos
cmp
adc
jo
sti
xor
inc
pop
lods
dec
dec
push
ljmp
out
add
jge
xchg
push
sub
dec
insl
ret
cli
jmp
fcmovbe
daa
cld
mov
jecxz
or
test
mov
or
pminub
mov
ds
and
test
nop
sahf
or
mov
lds
int
sbb
aaa
xchg
dec
out
lret
and
subl
lea
inc
cmp
shlb
and
sub
dec
bound
std
xchg
sub
push
add
xchg
jle
in
rcll
push
add
scas
push
push
push
popa
test
mov
add
jb
cltd
mov
in
jl
les
fistpl
sbbb
imul
or
add
int
pop
and
sub
sbb
fwait
aam
and
pop
sub
add
adc
mov
aaa
lock
mov
das
push
and
or
data16
sbb
push
push
rolb
fisubrl
fs
in
xor
pop
mov
jne,pt
lcall
jo
sbb
inc
dec
fbld
push
ficomps
loop
xor
cwtl
leave
enter
cli
xchg
sbb
stc
imul
or
xor
add
test
cli
pop
clc
pusha
loope
icebp
cmp
inc
mov
test
add
or
icebp
jbe
outsl
in
ret
pop
je
insb
xchg
mull
cs
push
sbb
xchg
xor
cmpsb
mov
push
pop
sub
mov
mov
popa
add
aaa
cmp
cli
jnp
adc
scas
pusha
das
repnz
repz
add
clc
sbb
mov
das
in
mov
fmull
inc
sahf
and
xor
mov
or
cs
ret
inc
or
pop
test
push
scas
inc
push
pop
aas
cmp
sub
js
push
and
loop
mov
jmp
jns
test
jne
adc
or
stos
adc
inc
cld
jg
jp
lods
add
xchg
es
sbb
insb
rcll
lahf
jnp
sub
sbb
cmp
dec
into
and
fcmovb
daa
cli
dec
adc
addl
mov
es
and
inc
inc
and
inc
pop
outsl
outsb
ss
out
data16
dec
aam
xchg
push
loope
std
jg
fwait
iret
pop
add
je
inc
mov
mov
leave
push
sbb
inc
shlb
fnsave
xor
dec
gs
push
cs
les
insb
pop
shll
and
or
sti
mov
xchg
icebp
pusha
push
xchg
pop
push
or
push
std
and
fsubp
je
add
lds
push
sub
sbb
inc
jg
outsl
jbe
add
jecxz
dec
mov
jno
add
test
test
jno
push
jo
cli
jp
and
lock
loopne
push
mov
fldl
xlat
and
filds
data16
test
std
lcall
fimull
dec
pop
cmp
adc
clc
push
stos
mov
sbb
and
jmp
sbb
xor
sbb
repnz
call
iret
xchg
in
sti
decl
jbe
repnz
mov
outsb
lcall
adc
rcr
add
jge
or
jge
push
jo
mov
popa
push
ret
add
fbld
repz
lds
pop
loope
das
sbb
jno
or
pop
mov
mov
add
push
in
mov
fnstsw
fimuls
cmp
popf
mov
or
rclb
nop
mov
jmp
cmc
jp
cld
push
lahf
ss
adc
and
add
xor
pop
es
sbb
mov
fs
movsb
rcll
cmp
hlt
notb
jmp
jbe
outsl
sub
sbb
add
aad
roll
fnstsw
rclb
jbe
mov
mov
pop
lcall
or
inc
jp
jmp
js
mov
test
test
sub
add
push
pop
adc
adc
and
push
scas
fisubrs
xlat
and
std
push
add
addr16
cmp
jb
and
push
nop
imul
shrl
movsl
mov
jo
mov
mov
loope
movsb
mov
fsubrl
pop
inc
lcall
mov
xchg
push
cmp
mov
or
or
sub
add
cmp
fistps
inc
jg
or
rolb
shlb
sbb
mov
or
and
mov
pop
fs
ret
lods
fdivrl
sub
stos
mov
push
aas
add
loope
and
iret
sbb
mov
mov
repnz
push
lods
cli
pop
add
mov
xor
out
push
jnp
and
rcrb
adc
xchg
pop
mov
jbe
movl
xchg
push
xor
or
pusha
sbb
and
je
add
popf
or
in
and
jg
nop
xor
or
pop
pop
aaa
jl
mov
ss
sub
jbe
sbb
cmpsl
pop
xor
jmp
shlb
icebp
jnp
mov
fisubs
stos
cmp
xor
jae
hlt
push
pop
pop
xor
shlb
stc
cmpsb
loop
xor
xor
mov
ja
pop
push
adc
cmp
dec
inc
std
test
xchg
rcrb
mov
mov
add
enter
jnp
or
or
jno
repnz
pop
dec
jnp
xor
inc
cmp
mov
adc
sbb
and
cmp
ret
sub
cmp
add
jb
in
xchg
aaa
mov
inc
test
add
movsb
mov
mov
push
insl
and
sbb
or
sub
sldt
out
xchg
pop
add
ja
mov
push
pop
xor
jp
mov
je
jbe
cmp
aad
aas
cmc
sub
cmpl
stos
in
adcb
enter
push
sahf
dec
sbb
dec
adc
and
inc
arpl
xorb
adc
pusha
jge
pusha
cmpsb
imul
fwait
lock
adc
cmp
pop
arpl
push
push
arpl
push
addb
and
fadds
push
out
mov
int
push
pop
jmp
out
les
ret
mov
dec
loopne
out
jb
and
or
das
shll
jo
sub
out
xor
in
inc
inc
call
rclb
in
sub
push
jecxz
jns
sbb
mov
in
arpl
sbb
sub
add
ljmp
jnp
fnsave
adc
imul
pop
clc
pop
sti
stos
and
movb
shlb
data16
repz
mov
pop
push
sar
pop
ucomiss
or
push
insb
or
outsl
push
add
ficomps
loopne
aaa
hlt
popf
into
pop
dec
mov
outsb
popa
pop
jp
inc
and
jle
add
fdivs
ret
cwtl
mov
inc
in
rclb
or
aaa
push
lock
mov
adc
or
jle
cmp
mov
jnp
mov
or
mov
jle
sub
or
mov
push
sahf
lahf
xlat
lds
fiaddl
and
sbb
mov
and
pop
js
call
xchg
xchg
hlt
mov
mov
aas
inc
call
push
repz
jno
xor
fwait
es
or
xor
inc
jp,pt
rolb
int
scas
mov
lods
loope
jecxz
out
push
faddl
addr16
stos
call
sahf
mov
fwait
mov
xor
cmp
push
loopne
add
out
inc
call
shrb
and
test
add
push
sbb
fimuls
xchg
mov
push
pop
xor
insl
cmpb
out
jmp
fildll
and
sub
repnz
lahf
mov
dec
sbb
out
nop
cli
int
pop
loope
shrl
mov
test
fisubl
inc
pop
jecxz
gs
mov
and
subb
jmp
push
adc
and
rol
daa
lds
ljmp
mov
push
mulb
js
cmp
aam
or
xorl
lret
push
out
pop
fadd
bound
or
mov
mov
fwait
ds
decl
xchg
push
inc
es
out
push
clc
mov
mov
adc
push
sub
add
push
push
mov
mov
sti
in
int3
pushf
std
adc
and
pusha
jmp
insl
lods
adc
jmp
incl
enter
xor
xchg
push
movsb
cmp
fisubrs
mov
stos
test
dec
shrb
out
nop
mov
repnz
sub
mov
jmp
jmp
adc
mov
jle
add
mov
jnp
cmpsb
push
rorl
jo
je
leave
gs
cmp
sub
stos
xchg
repz
popf
xchg
dec
arpl
xchg
mov
popf
in
push
pop
in
add
pop
or
lock
movsb
mov
push
pop
dec
int3
mul
in
inc
pop
popa
sub
loopne
xor
data16
call
mov
mov
jnp
mov
cmpsb
inc
adc
dec
mov
xchg
pop
dec
ds
push
leave
cltd
cs
pop
fbstp
das
or
pop
mov
roll
pop
add
mov
mov
mov
or
mov
dec
cs
mov
test
or
insl
or
arpl
dec
inc
sbb
les
aad
loopne
jo
cmp
mov
addl
mov
orb
fnstsw
aaa
mov
add
enter
add
pop
xor
fadd
adc
push
adc
out
jne
jmp
mov
lds
fmuls
daa
fisubrs
cmp
add
xchg
fisttpll
test
jno
adc
sbb
mov
adc
js
xchg
push
jb
rolb
je
popa
dec
jle
cmp
xlat
mov
cld
mov
and
jbe
jecxz
and
fbld
nop
xor
lds
jg
pop
fdivrs
arpl
sub
or
loope
mov
mov
cmp
add
sbb
lock
mov
data16
jbe
inc
or
ljmp
ja
ds
stc
sbb
mov
iret
enter
xchg
lock
js
add
dec
or
mov
or
mov
adc
adc
loopne
jmp
loope
lods
pop
mov
dec
lock
inc
push
loop
adc
ficomps
je
fnstenv
adc
jmp
push
cmpsb
cltd
dec
add
mov
mov
lods
cmp
and
or
xchg
js
adc
or
ret
ret
adc
out
loopne
pop
cmpb
mov
adc
jmp
or
add
insl
xor
dec
daa
and
mov
cmc
mov
sub
int3
dec
mov
or
ss
jno
outsl
sub
xor
jno
cli
ja
jecxz
leave
jg
or
mov
test
std
jno
sub
fbstp
adc
mov
xorb
adc
movsl
test
push
jle
cld
mov
cmp
inc
xor
sub
mov
mov
mov
cltd
clc
adc
mov
cmp
js
add
pop
loope
aaa
nop
mov
and
cmp
lods
mov
in
push
mov
xchg
je
je
push
xor
dec
inc
xchg
cli
mov
push
sbb
das
mov
fstpt
dec
cld
ret
inc
dec
js
pop
lock
dec
out
xor
push
cmc
das
call
adc
jae
mulb
mov
inc
ret
pop
lcall
loop
jg
orl
addr16
or
pop
add
inc
push
in
push
or
imul
adc
mov
loop
jl
lahf
sbb
jg
push
mov
and
mov
add
push
jmp
insl
aam
inc
mov
sbb
xlat
loope
dec
pop
mov
mov
jecxz
fsubrl
je
dec
and
jl
push
cld
pop
inc
enter
repz
popa
push
xor
adc
lea
pop
data16
mov
out
loop
fidivl
jge
outsl
dec
movsb
xchg
jl
push
inc
outsb
cmp
js
add
dec
loopne
push
and
ret
cltd
mov
inc
cli
je
sbb
movl
shll
lds
insl
ss
jo
mov
test
jo
lock
mov
hlt
pusha
push
sub
and
or
dec
cmpsl
xchg
xchg
jne
lds
xor
insl
loope
pop
jbe
mov
test
jecxz
or
mov
mov
sarl
insl
cwtl
mov
mov
pop
stos
sbbl
sub
dec
fstp
ljmp
inc
repz
hlt
xor
cmp
xor
icebp
sub
adc
pop
ss
fs
jl
and
add
cmp
or
movsl
test
setg
mov
push
sti
add
push
movsl
icebp
adc
fs
ret
dec
pop
data16
fdivs
push
cmp
xchg
cltd
les
imul
mov
add
and
pop
jecxz
mov
lea
lcall
cmp
into
mov
adc
and
sbb
xchg
pusha
add
pop
mov
movsl
mov
shrl
push
dec
js
cmp
aam
loope
xor
in
fs
push
out
adcb
mov
adc
xchg
mov
add
push
or
dec
mov
cmp
test
xor
cmp
mov
mov
js
add
clc
xchg
imulb
push
adc
test
dec
testb
mov
add
repnz
mov
and
clc
mov
sti
fidivrl
fcmovu
add
pop
or
push
iret
push
inc
mov
lock
or
fcmovbe
push
adc
mov
push
clc
cmp
pop
cli
jg
ret
mov
bound
pop
loopne
pop
mul
testl
pop
and
lods
leave
inc
fisttpll
xor
cli
adc
jo
shll
or
sbb
inc
cwtl
and
andl
mov
and
push
sub
and
test
cmp
and
out
jne
jo
sub
mov
in
mov
sub
scas
jmp
xchg
adc
and
imul
push
xchg
or
mov
push
lcall
push
add
sub
push
push
jg
xor
push
dec
cmc
push
jae
sub
je
jl
push
lds
xor
or
cltd
rolb
sub
mov
mov
test
xchg
mov
addb
pushf
pop
divl
ret
jmp
adc
pop
rcrl
adc
mov
rcll
push
sbbb
mov
cmpsl
sahf
addb
jp
and
cmpsb
repz
dec
movsb
dec
mov
popf
jns
jp
adc
sbb
aad
or
loope
sub
inc
push
push
jbe
sar
aaa
and
ret
add
stos
add
pop
and
testl
decb
mov
test
push
movsb
sti
add
adc
xchg
inc
or
fldenv
push
jns
push
fisttps
mov
cmpsl
jmp
sub
addl
inc
into
add
loope
add
push
mov
into
mov
push
out
xor
stc
ret
pop
pop
mov
addl
push
pusha
and
sti
lods
scas
scas
rolb
sti
mov
adc
dec
in
sub
push
ljmp
pop
out
insb
fnstenv
xchg
int3
jb
call
movsl
inc
lahf
jno
leave
pusha
jp
dec
out
xchg
jne
lods
sbb
cmc
incl
inc
andw
ja
mov
lds
mov
jle
leave
loope
fisttps
test
jbe
sbb
add
enter
iret
push
mov
mov
inc
add
sarb
int3
xchg
or
inc
gs
psubb
fstpt
mov
popf
cmpsl
jmp
jo
or
loopne
mov
in
ss
push
pop
or
outsl
ret
xchg
mov
add
push
aad
lock
pop
push
pop
sbb
lret
sub
xchg
mov
decb
mov
sbb
stos
mov
add
inc
nop
dec
cmp
cmp
dec
sbb
mov
int3
xor
jb
inc
icebp
xchg
in
bound
and
popa
pusha
cmp
cmpb
shlb
add
rcll
arpl
movsl
xor
mov
ds
sti
call
xor
mov
mov
clc
inc
adc
mov
into
add
cmp
ret
add
icebp
or
or
aad
mov
add
shrb
cmc
mov
sbb
cmp
xlat
mov
ds
ret
pop
sbb
cmpsb
scas
aaa
pushf
hlt
and
mov
ss
ljmp
sub
lahf
in
jo
xchg
cs
outsb
and
fwait
std
mov
outsb
pop
mov
or
or
lds
push
jg
pusha
cld
mov
dec
cmp
adc
inc
fcomps
jge
outsl
and
cmp
out
pop
cltd
adc
loope,pn
cmp
jmp
jle
adc
jne
sbb
sti
push
fs
addb
mov
xchg
add
addl
or
sub
in
mov
roll
fneni(8087
subl
inc
out
fisttpll
repz
adc
std
cmp
lods
adc
and
cmpsb
mov
jnp
cwtl
add
movsb
stos
sbb
mov
sub
sub
ret
pop
pop
jbe
jecxz
xchg
jb
in
outsl
insl
popa
inc
mov
nop
mov
rorl
test
cltd
push
arpl
xchg
ds
sbb
loop
push
xchg
cmp
popa
stos
sub
jno
lds
subb
push
xchg
adc
mov
adc
mov
sub
sbb
movd
inc
mov
add
les
pop
jl
push
jmp
jae
inc
fdivl
fwait
jp
cmpsl
divl
ret
jbe
cs
das
xchg
test
inc
push
test
inc
rolb
int
pop
rorl
pop
xor
cld
push
sbb
mov
xlat
js
inc
mov
ret
push
popa
mov
adc
mov
movsb
daa
jp
add
dec
push
notrack
out
loop
ffree
inc
xor
and
xchg
fs
pop
dec
out
adc
stos
jmp
stos
sub
push
inc
adc
fcomi
mov
ljmp
pop
xor
dec
mov
dec
push
push
or
pop
test
jp
xlat
addr16
bound
sub
outsb
or
stos
loope
test
xchg
jl
push
ljmp
add
mov
push
mov
in
lret
je
mov
loope
ljmp
sbb
inc
lahf
adc
sub
dec
pop
sbb
xor
mov
push
shrb
repnz
hlt
aad
pop
mov
xor
mov
and
andl
sub
dec
add
xchg
mov
xchg
bound
pop
stos
out
or
mov
mov
pop
jecxz
rcrb
sbb
aam
sbb
mov
sub
out
mov
mov
xchg
pop
sahf
ds
loop
jno
int3
int
xchg
dec
gs
push
testl
popa
add
or
lea
movl
adc
dec
jp
add
mov
sub
icebp
repnz
lret
lahf
data16
inc
dec
rcl
roll
outsb
enter
adc
mov
mov
nop
lret
cli
inc
cmp
dec
mov
mov
push
sti
mov
je
hlt
sar
add
movsb
hlt
inc
lcall
movsl
loopne
les
adc
pop
xor
adc
insb
clc
add
inc
pop
loope
inc
mov
int3
or
lret
pop
inc
stos
arpl
jge
mov
popf
out
fidivl
sbb
rorb
adc
jbe
in
sbb
imul
sbbl
loope
or
lea
pop
les
inc
lock
jle
inc
cmp
pop
pop
pop
test
scas
cwtl
pop
sbb
hlt
call
adc
mov
test
out
xchg
das
cli
sub
cmp
cmp
orl
pop
cmp
lock
jae
insl
mov
aam
cmp
adc
xor
insb
out
into
out
inc
cmp
add
test
sub
icebp
iret
add
push
fisttpll
aas
add
cmpsb
push
ret
dec
into
or
icebp
lds
imul
sub
jns
inc
push
leave
lcall
mov
je
inc
in
mov
xchg
mulb
movsb
addb
shlb
js
cmp
mov
mov
inc
ret
jbe
mov
xor
adc
ficoms
cwtl
outsl
ja
rcl
pop
push
sbb
push
xor
clc
popa
dec
mov
je
out
inc
leave
cwtl
push
mov
stos
xchg
in
inc
mov
int3
push
and
ja
iret
decl
cmovnp
mov
incl
mov
ret
aad
addb
jle
jmp
mov
out
pop
mov
jg
and
lahf
in
xchg
loopne
sahf
lea
pop
shlb
jbe
xor
scas
push
adc
or
mov
addb
lahf
int3
ret
cwtl
pop
clc
sbb
mov
ljmp
fisttps
sbb
add
insl
clc
adc
fwait
repnz
push
adc
orb
pop
int3
ror
fsubrs
sbb
cltd
lods
rcrl
or
in
cwtl
mov
mov
rorl
mov
bound
mov
cmp
pop
inc
and
dec
jmp
subl
notb
inc
in
jl
das
adc
adc
xchg
inc
and
in
pop
or
call
fcmovnb
lods
mov
xlat
dec
inc
aaa
mov
insl
call
sub
call
fcmove
or
sub
call
mov
push
fsubl
jno
xchg
push
or
jne
or
fisubs
push
cmpsb
push
pop
rcr
fwait
repnz
push
out
push
mov
cmpsl
stos
imul
or
adc
sti
ja
test
cltd
cmpsl
mov
adc
pop
sbb
inc
int3
sub
out
xor
mov
pop
out
out
outsb
insl
sub
jno
fisttpl
es
add
js
jnp
loopne
cmpsb
aaa
xchg
cmp
outsl
sarl
xchg
dec
add
pop
stc
add
sbb
loope
sub
cmpsl
je
subl
mov
push
dec
jp
fs
or
or
sub
lock
mov
cmp
mov
jp
inc
sbb
cmc
std
cld
leave
or
pop
mov
or
cmp
ret
push
push
mov
jne
clc
jnp
or
push
pushf
pusha
inc
adc
mov
cmp
and
or
cmpsl
inc
or
push
jle
addr16
pop
arpl
and
push
nop
test
jmp
sarb
cwtl
sbb
push
movsl
lock
pop
jns
lock
xorl
jns
or
std
pop
cs
xor
xor
push
ljmp
push
in
insl
call
add
xor
pop
add
je
sub
ret
cmp
add
shll
add
in
xchg
mov
lock
std
in
or
pop
inc
mov
pop
adc
or
psubb
cmpsl
into
adcl
add
daa
jae
dec
pop
push
aas
mov
cli
sbb
mov
mov
pop
lock
pop
xchg
add
hlt
mov
jo,pn
out
xchg
shlb
add
mov
pop
dec
in
movsb
and
pop
mov
movq
enter
fstpt
cmp
and
and
repz
fldenv
pushf
out
fisttps
orl
xchg
sub
pop
xor
cld
add
pop
out
dec
and
mov
mov
data16
rcl
add
lahf
les
lret
pop
jp
test
jmp
movsb
xchg
sbb
fcoml
mov
push
xorl
cli
rcrl
jg
jle
xchg
rolb
adc
ds
movsb
push
inc
xchg
dec
jae
inc
inc
popa
push
adc
push
cmc
mov
jge
int
push
movsb
insb
aad
mov
dec
enter
add
jg
mov
xchg
scas
add
loop
movsl
jecxz
cltd
lods
or
aas
ret
or
xor
frstor
mov
xor
sub
shlb
orb
out
orb
push
adc
mov
icebp
and
outsb
pop
mov
cmp
call
inc
xor
bswap
inc
mov
shlb
push
or
sub
out
pop
jo
scas
adc
test
fsubr
addr16
shrl
mov
xlat
clc
outsb
xor
mov
hlt
aad
and
mov
aad
or
xchg
mov
cs
xor
push
mov
iret
sarl
mov
ficoml
and
dec
clc
notb
push
cmpsl
cmpl
mov
xor
sub
push
pop
ja
js
add
sub
jg
pop
push
add
lea
movsb
sbb
fisttps
mov
push
inc
and
mov
push
popa
fiaddl
outsb
adc
shl
jne
das
ret
mov
and
jg
addr16
mov
fcompl
fs
xlat
dec
cmp
sbbl
mov
push
aas
push
adc
fadds
loopne
int
mov
mov
mov
sti
jbe
or
inc
lock
nop
xor
push
mov
cmc
mov
lods
out
inc
xorb
std
jecxz
call
add
enter
in
cmpsl
test
scas
outsb
dec
in
push
lret
jo
shrb
rclb
mov
loop
icebp
jecxz
pushf
mov
jmp
test
pop
push
or
mov
lock
idiv
add
dec
inc
shll
stc
adc
pusha
cld
filds
or
xchg
or
adc
test
aam
xchg
xor
std
stos
jge
xchg
loopne
nop
clc
jp
add
imul
in
scas
jle
add
add
sbb
pop
movsbl
jle
jecxz
cmp
add
pop
or
outsl
pop
cld
pop
js
das
stc
fbstp
push
stc
adc
inc
hlt
pusha
mov
jne
lods
and
ret
cmp
jbe
mov
clc
dec
or
imul
push
cld
ljmpw
stos
sbb
add
clc
add
imul
mov
test
int3
aam
pushf
shlb
hlt
lods
loopne
push
sbb
or
rorb
dec
adc
cld
push
or
dec
xor
jo
clc
mov
ljmp
stc
shrl
loop
cmpl
push
rorl
inc
dec
sub
icebp
adc
mov
xchg
std
adc
stos
fisubrl
inc
xchg
std
insb
xor
pop
je
add
loop
ss
or
dec
or
fucomp
and
xchg
imul
jmp
push
jle
push
dec
shrb
sbb
xlat
scas
lds
jecxz
adc
sub
out
and
imul
loope
out
scas
shlb
popf
hlt
rorl
jp
int3
mov
and
or
add
mov
mov
or
or
cld
inc
push
cmc
xchg
sarl
inc
leave
sbb
arpl
pop
filds
movsbl
lcall
pusha
or
in
sbb
cmp
and
mov
add
mov
add
fisttps
push
imull
pop
cmp
fdivrl
repz
mov
sbb
or
out
dec
lods
or
pop
cmp
jecxz
into
popf
jle
lcall
sbb
in
lds
and
xorl
mov
cwtl
mov
aaa
adc
arpl
cmp
test
push
push
mov
inc
mov
or
and
out
mov
push
or
cmp
pop
push
push
add
js
fnstcw
or
jg
sbb
es
scas
inc
adc
mov
adc
push
mov
inc
mov
pop
in
and
sub
dec
adc
dec
into
lcall
sbb
fwait
jle
stos
cmpb
xchg
and
add
or
pop
js
mov
call
and
js
inc
in
daa
std
mov
sbb
ja
out
push
xchg
stos
jl
sub
jo
mov
cld
add
dec
mov
clc
cmp
cwtl
inc
xchg
cwtl
lahf
roll
rol
xor
jno
mov
rorb
cmp
sbb
les
mov
cmp
aam
mull
pop
dec
lcall
test
js
movb
mov
mov
push
jo
or
rcl
ficoms
cs
mov
and
cs
xor
int
rorl
mov
dec
xorl
pop
push
mov
pop
add
pop
sbb
push
mov
aad
sub
push
inc
jae
lret
ds
roll
inc
xchg
xchg
sbb
popa
movsb
repz
clc
add
or
dec
insb
jecxz
ret
cmpsb
push
cmp
mov
mov
in
xor
push
mov
scas
imul
inc
lcall
frstor
in
scas
or
mov
push
pop
sbb
cmp
shlb
add
rol
loope
in
push
pusha
fmuls
inc
xchg
fs
inc
dec
push
scas
pop
mov
je
cltd
cmpsb
xchg
sub
in
movsb
sub
insb
cmp
pusha
push
test
test
ja
mov
test
jne
sbb
xor
into
mov
mov
pop
lret
sbb
aad
int
inc
or
push
adc
add
clc
mov
jno
cld
lods
adc
or
mov
nop
add
popa
mov
arpl
ret
pushf
jge
hlt
jg
daa
sbb
clc
ljmp
add
stos
sbbl
inc
pop
adc
push
push
xchg
pop
xchg
or
cmc
sbb
stos
mov
adc
les
lock
mov
push
aam
arpl
mov
jb
in
sbb
cli
lret
test
mov
into
mov
fucom
outsb
cmpsb
mov
adc
paddusb
hlt
add
mov
inc
dec
pop
dec
jl
cld
mov
ss
sub
jle
adc
int
mov
cld
or
stc
int3
insl
xchg
mov
jle
daa
sub
jnp
jmp
push
mov
cmp
cmp
mov
push
dec
xor
jbe
pusha
pop
test
movsb
mov
aas
cli
fstpt
add
popa
inc
mov
push
lret
inc
xor
jb
sub
rorb
rcrl
lcall
sbb
xchg
sub
sbb
mov
sbb
mov
sbb
xchg
hlt
mov
dec
dec
inc
pop
hlt
jmp
and
inc
inc
dec
int3
and
je
fstl
fisubrl
mov
jl
std
lods
jp
or
rol
xlat
and
mov
and
add
icebp
pop
xor
inc
xor
lret
sbb
mov
mov
bnd
lret
loope
pop
rorl
push
xor
mov
rcll
stc
adc
cmp
push
ret
mov
adc
jmp
and
push
loope
insb
inc
add
pop
ljmp
imull
mov
test
mov
jnp
adc
jp
mov
dec
jmp
addb
insl
add
xor
jmp
add
xchg
lods
push
inc
fs
or
xorb
xor
xchg
mov
int
loopne
das
clc
push
fistpll
setl
mov
push
push
inc
inc
pop
loopne
and
mov
add
call
push
lret
bound
out
sbb
mov
rcr
xchg
aaa
inc
mov
fistpll
xor
out
and
rcrb
out
scas
adc
ljmp
adc
aas
jmp
test
js
mov
stos
xorb
dec
lcall
mov
mov
test
leave
scas
test
outsb
cltd
add
jg
pop
mov
out
lds
out
mov
mov
arpl
repz
pop
sbbb
rclb
lea
and
or
add
mov
sahf
loopne
mov
or
or
add
lcall
add
inc
lock
icebp
pop
xchg
cmp
hlt
mov
dec
mov
std
mov
adc
sub
imul
mov
mov
xchg
movsb
pop
ret
test
fs
jl
xacquire
inc
sbb
lahf
jge
mov
je
out
mov
xchg
sbb
push
mov
shlb
scas
inc
mov
hlt
in
xchg
jo
mov
xor
xor
and
or
xor
xor
xchg
adc
js
push
dec
test
jecxz
push
in
adc
mov
fwait
mov
and
mov
add
test
cmpb
out
or
mov
in
das
test
ficoms
fnstenv
inc
xchg
push
jp
insl
mov
xlat
das
add
stos
xorb
ja
sbb
xor
jle
mov
sub
mov
jg
cmp
dec
outsb
sbb
dec
xchg
clc
inc
mov
ret
mov
pop
add
sbb
push
pop
add
adc
int3
les
mov
in
aam
add
outsl
and
fwait
adc
sahf
and
lods
fldlg2
into
idivb
test
insb
dec
xlat
jle
mov
jl
inc
imul
sub
mov
fstpt
dec
bnd
xor
inc
je
fdivrp
aas
lcall
and
js
ljmp
or
dec
test
das
insb
mov
fiaddl
sub
mov
stc
xor
xchg
cmc
push
jp
dec
cmpsb
insb
pop
lock
js
sub
ficompl
in
xchg
sbb
movb
sarb
popa
and
push
or
fs
mov
js
mov
or
jne
or
or
push
jno
xchg
insl
jmp
xchg
jb
lcall
mov
jp
mov
mov
push
scas
insb
mov
mov
sarb
and
shl
pop
out
daa
pop
shlb
jg
sub
sub
adc
aas
add
or
push
mov
mov
push
sub
sahf
lret
movl
xor
push
popa
adc
adc
pop
pop
or
xchg
cld
fdivl
ds
scas
push
mov
pusha
and
pop
data16
add
aam
or
hlt
mov
pand
dec
das
cwtl
clc
mov
mov
cmc
andb
testl
rclb
jno
cld
mov
xor
fistpll
sti
and
inc
loop
in
xchg
lea
sbbb
dec
addr16
call
lock
jno
mov
mov
push
xor
rcrb
test
fldl
add
pop
mov
mov
fdivrl
mov
hlt
cli
pop
xchg
cmp
repnz
add
inc
or
ret
push
xor
lds
push
inc
js
push
loopne
push
inc
rorb
push
test
in
sahf
dec
sahf
pop
insl
imul
fistps
sub
sub
in
fdiv
stos
and
repnz
dec
into
inc
out
scas
aas
mov
orl
js
cli
ss
aam
add
loop
push
sbb
scas
imul
jmp
addb
loopne
mov
xchg
rep
add
or
cmp
orl
in
sbb
xor
or
dec
lret
inc
out
add
push
xchg
sahf
fiaddl
out
pop
mov
mov
push
xchg
loopne
or
scas
jo
leave
cmp
cwtl
cld
mov
cwtl
and
push
loope
add
sub
pushfw
popf
hlt
push
shlb
mov
std
push
enter
adc
mov
adc
dec
add
std
addl
lcall
mov
outsb
jp
pop
out
cld
rolb
ds
je
jbe
inc
negl
xor
dec
lods
pushf
aas
add
sub
mov
bound
call
scas
js
dec
call
idivl
push
outsl
inc
or
inc
mov
mov
nop
je
inc
pop
repz
data16
imul
dec
push
add
cmc
mov
popa
repz
mov
rcll
adc
sarl
int
fs
popa
stc
xor
sub
fdivrs
mov
xlat
jb
stos
das
pop
clc
cmc
or
shll
fld
inc
xchg
das
call
cmp
and
shlb
rolb
inc
xor
test
xchg
mov
mov
pop
jo
mulb
mov
mov
arpl
divb
je
or
add
mov
sti
push
inc
and
lcall
enter
icebp
xor
or
jo
or
add
jge
mov
movb
mov
or
es
andl
cli
movb
out
push
dec
inc
push
loop
xchg
in
pop
push
jecxz
loop
movsl
lea
or
mov
cmpsb
mov
jp
jle
cmpsb
shll
add
out
pushf
out
inc
js
push
sbb
inc
push
mov
adc
push
adc
push
ja
jg
adc
cmp
testl
jo
sbb
sub
or
ret
jae
or
cmpsl
jbe
lds
mov
mov
mov
push
mov
dec
std
lods
fs
stos
pslld
add
adc
call
sbb
push
adc
call
lock
clc
sahf
add
lcall
jo
add
lods
mov
dec
cmpb
pop
add
lods
or
and
pop
mov
mov
push
pop
lock
into
out
pushf
or
mov
pop
inc
inc
ret
push
loope
lods
push
pop
mov
incb
out
xchg
pop
mov
jp
mov
cmp
out
xchg
pusha
dec
test
movsl
pushf
xor
lcall
pop
jbe
ja
sbb
sbb
sub
xor
xor
icebp
int3
xchg
sbb
xor
int3
fisubrs
or
xchg
loopne
bound
xor
js
gs
in
or
test
inc
shll
jb
ror
frstor
call
dec
push
test
ret
cmp
xchg
push
inc
adc
call
add
sbb
aaa
jbe
or
imul
popa
fdivs
std
mov
cwtl
notl
ja
or
insl
jl
inc
add
rcl
ret
inc
jbe
daa
push
hlt
or
aam
cmp
add
aaa
or
mov
mov
mov
xor
aam
mov
test
outsb
xchg
fistpl
ret
jg
sub
inc
leave
sbb
test
lea
adc
in
dec
aad
jo
inc
lret
push
mov
jl
and
pop
inc
push
cs
cltd
sbb
fdivs
leave
fsubrl
adc
lret
in
push
pop
in
aas
xchg
add
add
cmp
mov
fldt
jo
mov
mov
cli
iret
and
cmpsl
shlb
mov
push
dec
push
mov
and
adc
cs
mov
hlt
xchg
or
nop
push
mov
mov
or
scas
push
bound
pusha
shrl
and
cli
dec
mov
jns
cmp
mov
rcrl
mov
sub
or
add
push
inc
cmpsl
sbbl
js
and
loop
repz
cmp
stc
push
jg
adc
pusha
push
adc
dec
rcrl
xchg
fwait
push
test
aas
scas
mov
filds
js
jg
mov
and
pop
jmp
mov
clc
ss
jp
adc
mov
push
mov
pop
jbe
mov
pop
adc
cwtl
add
inc
jp
icebp
cmp
lock
les
roll
cmp
jg
or
out
enter
enter
mov
js
or
popf
and
popa
or
push
aam
pop
stos
inc
cmp
ret
pop
dec
xchg
push
or
shrb
add
shll
or
out
add
pusha
xchg
sbb
push
mov
xor
cmp
dec
enter
loop
ss
idivl
add
std
cli
outsb
mov
pop
andb
popf
add
aam
sub
sbb
inc
aam
or
filds
mov
rorb
orb
mov
andl
pop
push
cmpxchg
mov
xlat
xchg
lret
repz
xorb
les
adc
mov
cmp
les
loop
add
adc
jnp
jl
dec
arpl
clc
cmpsb
mov
decl
arpl
jmp
mov
adc
mov
lret
lods
mov
js
jle
xchg
ret
dec
je
xor
js
scas
and
push
pop
adc
cmp
push
std
test
xlat
jnp
aaa
and
lcall
jno
sub
sbb
das
dec
int3
pop
cmp
inc
shll
jno
dec
push
jo
aam
out
pop
loopne
repnz
lahf
mov
and
mov
xor
ret
inc
jl
popf
hlt
scas
sbb
test
xchg
aad
scas
in
cmpsb
nop
jno
sub
mov
jle
ds
in
add
js
ficomps
nop
add
stc
lret
out
shlb
lock
add
pop
mov
inc
pop
pusha
enter
dec
add
test
push
sbb
roll
call
sbb
aad
in
mov
aam
sbb
mov
inc
xchg
sub
jne
popf
xor
push
lahf
movsb
push
cmc
lret
jns
add
das
fsubrs
push
jbe
push
lock
cs
dec
pop
inc
jmp
mov
testl
adc
lock
fcom
bound
in
popf
or
pop
cli
jne
in
pop
ds
sahf
rolb
popf
xor
add
mov
mov
adc
mov
sbb
inc
enter
add
ss
or
sub
das
jmp
mov
outsb
or
mov
mov
out
add
jl
enter
jnp
adc
or
mov
push
or
push
and
mov
push
cmp
add
mov
mov
fistps
push
shlb
cmp
or
lcall
mov
push
mov
cwtl
dec
jb
rcrb
jmp
outsl
xchg
fbld
and
cmp
add
in
test
xchg
into
xor
out
xchg
sub
or
faddl
adc
pop
ja
mov
testb
fucomip
mov
mov
add
movsl
ja
js
cwtl
aaa
push
pop
xchg
mov
popl
cld
add
mov
call
and
andb
mov
mov
mov
out
dec
lahf
ja
repz
pop
cmp
mov
xchg
rcrb
cmc
inc
lods
push
mov
inc
sbb
mov
push
std
inc
insb
imul
add
pop
movsl
mov
out
sbb
rorb
loop
jle
data16
pop
pusha
mov
enter
js
cmp
aas
cmpsb
mov
push
ret
mov
inc
cmp
push
fimull
movsb
cwtl
fadds
xchg
mov
lret
cld
pusha
pop
inc
push
shl
popa
and
push
and
inc
sahf
fnstcw
mov
cmp
xchg
adc
mov
in
jo
jmp
pop
das
push
add
add
lahf
ret
mov
mov
mov
dec
push
aaa
sub
mov
push
inc
inc
jl
lock
in
loopne
imul
movsb
dec
fmulp
aam
adc
jl
loop
iret
add
cli
outsb
jle
scas
lods
je
out
fmuls
xchg
or
aas
les
push
cmp
add
out
sub
repz
sbbl
leave
push
js
loopne
sub
nop
xchg
adc
jg
lahf
mov
xchg
andb
movsl
decl
test
xchg
mov
std
arpl
mov
daa
inc
subl
mov
dec
clc
or
cld
sub
push
mov
mov
loopne
in
pop
inc
ljmp
and
outsl
psubb
push
arpl
dec
dec
mov
or
and
add
add
and
pushf
mov
not
xchg
daa
mov
movb
lea
and
xchg
and
or
pop
mov
cmp
sub
stos
xcrypt-ofb
cmpsl
sub
xchg
movsl
mov
popa
adc
loopne
sub
push
push
sub
shr
inc
mov
push
fildll
xor
adc
orl
montmul
cmpsb
test
push
sti
roll
cmp
xchg
bound
in
mov
inc
add
repnz
stos
inc
int3
scas
jbe
subb
int3
push
inc
movl
fucom
inc
incl
add
inc
inc
stos
mov
gs
nop
sub
sub
cmp
fsts
or
add
adc
data16
sbb
add
negb
dec
and
xor
sub
add
insl
fidivl
mov
inc
orl
out
outsl
mov
and
test
push
adc
lret
adc
inc
lea
and
cmpsl
leave
mov
aam
mov
in
add
jle
sub
add
fimull
insb
inc
fs
or
mov
jl
add
loop
sub
push
iret
lret
push
xor
sub
sub
jno
scas
je
xchg
push
sub
xor
adc
add
sti
mov
fsubl
lea
test
pop
pushf
mov
push
sbb
clc
sbb
test
or
add
ret
jl
mov
dec
sti
or
sub
ss
pop
mulb
mov
add
push
inc
cld
push
pop
and
hlt
in
scas
sbb
adc
sti
dec
xchg
add
pop
pop
es
mov
push
push
fstpt
stos
imul
or
and
push
add
add
adc
cmpsb
fstpt
into
inc
clc
cltd
push
scas
mov
cmc
scas
lret
inc
dec
outsl
imul
addr16
cli
xchg
jmp
adc
mov
inc
add
les
call
xchg
pushf
jmp
lock
adc
push
scas
pop
add
pop
xchg
rcrb
fisubs
shlb
ret
fsubl
jnp
inc
aaa
sub
cmp
xchg
push
pop
fistl
in
push
ds
xor
push
incl
or
clc
sub
jb
mov
push
or
sbb
or
sub
mov
in
ljmp
in
loope
or
cmp
sbb
xorl
ljmp
int
test
rclb
jns
sub
ja
mov
add
movsl
shl
rclb
test
aaa
mov
sub
gs
xchg
mov
pusha
imul
std
or
xchg
sbbl
stos
aam
push
dec
ficompl
imul
mov
sbb
xor
loope
adc
mov
pop
sub
and
push
lods
inc
shll
mov
dec
xchg
dec
mov
xlat
decl
ficomps
and
bound
dec
add
inc
call
test
and
cs
pop
add
mov
arpl
rorb
mov
lock
sbb
pop
mov
mov
mov
add
jbe
popf
outsb
push
cmp
fs
es
sarb
push
mov
sub
insb
jp
lock
pop
hlt
adc
push
bnd
sbb
inc
or
push
cmpsl
mov
inc
shrd
sbb
add
in
idivl
sub
and
xchg
mov
xchg
mov
xchg
sbb
jmp
mov
jo
in
xorb
inc
leave
push
dec
and
pop
fucomp
aaa
push
loopne
dec
les
and
xlat
mov
gs
jmp
xor
sub
mov
add
add
js
out
adc
add
push
cmp
and
test
subb
sub
inc
cs
xor
mov
hlt
fst
cmc
lret
dec
in
sub
cmp
mov
leave
jp
pop
out
mov
adc
jle
ja
adc
dec
xchg
pop
jp
mov
or
xchg
dec
cli
pop
pop
mov
clts
xchg
ds
push
inc
rcll
insb
movsl
clc
mov
sub
sbb
hlt
aas
ss
jge
clc
xor
adc
test
push
and
pop
icebp
push
insl
jl
or
sbb
sub
mov
movsb
pop
add
addb
or
sub
mov
pop
inc
pop
adc
adc
fadd
ret
jnp
adc
sahf
or
ret
test
mov
loope
sti
fdivs
in
adc
add
shrb
mov
mov
scas
pop
jl
cmp
push
sub
xor
xor
push
mov
imul
fwait
iret
inc
insl
push
pop
mov
jl
pop
std
sarb
jmp
sarl
and
rcll
sub
mov
xchg
sahf
jle
lea
xlat
or
fsubs
in
and
or
xor
sub
push
es
les
mov
cs
test
out
mov
jle
int
pop
inc
xor
mov
out
cs
cmp
or
mov
cld
pop
sarb
sub
es
mov
adc
in
xchg
cmp
fdivrs
fldl2e
stos
dec
test
jmp
jg
sub
gs
push
jmp
lds
je
or
aaa
sbb
hlt
xor
ret
dec
push
testb
je
cmp
stc
lods
push
je
fucomi
or
mov
adc
outsb
mov
adc
fucomi
jmp
mov
adc
pop
out
jp
test
bound
ficompl
sbb
sbb
jle
jle
sub
dec
dec
les
sti
scas
pop
lock
xlat
or
xchg
nop
rorl
sub
push
pop
pop
push
shr
cmp
cld
mov
cmp
rcrb
jbe
sahf
jp
pop
sub
jl
or
jo
test
push
sub
movsl
aad
gs
loopne
shrb
xor
inc
push
pop
or
out
rcrl
std
pop
shl
popf
mov
mov
pop
subb
cmp
mov
out
leave
ss
cmp
nopl
incl
pushf
add
sub
adc
pop
mov
push
in
adc
sbb
inc
stc
cmp
pushf
je
addr16
mov
mov
stc
pop
fnsave
xchg
js
addl
in
mov
pop
sar
out
and
push
jo
jmp
mov
les
fisubrl
jp
inc
mov
and
mov
mov
adc
test
xorb
lock
fs
push
push
mov
movsb
insb
outsl
cli
aad
push
fsubrl
cmp
lcall
int
sbb
mov
push
pushl
inc
repz
pop
pop
cmp
cmpsl
push
cmpsl
mov
movsl
fldl
mov
push
ds
pop
push
in
pop
outsb
xor
incb
cmp
sbb
in
inc
aas
in
add
repz
adc
add
outsb
in
xor
test
outsb
mov
add
lcall
adc
push
cld
movl
xchg
ss
add
add
mov
add
dec
ljmp
xor
mov
loope
bound
dec
xchg
mov
and
mov
add
mov
ljmp
xchg
lock
fimuls
xchg
mov
sbb
scas
lret
movsb
rorb
test
cmpl
rcll
clc
dec
fcmovu
scas
adc
jbe
pop
add
mov
popf
fxch
xchg
mov
imul
push
ljmp
sbb
movsl
jmp
loop
pop
loopne
or
xchg
jl
mov
clc
xchg
or
pusha
cmp
pusha
pop
insl
je
repnz
loope
gs
loopne
nop
add
insl
jge
jbe
push
dec
scas
outsl
addl
mov
rorl
add
or
aas
inc
jnp
gs
movsb
cld
and
xor
sub
enter
fsubrs
fildl
pusha
rcr
pop
inc
pop
shll
lods
enter
jne
loopne
cs
neg
sub
loopne
lahf
sub
cmp
lea
leave
pop
cmpl
fs
jle
or
icebp
mov
incl
dec
fsubp
jg
orl
sub
fsubl
test
add
sub
mov
mov
roll
jo
call
inc
xor
call
std
mov
or
cltd
mov
imul
and
add
lcall
insl
jp
dec
pop
insb
std
mov
jmp
mov
out
imul
xchg
mov
mov
pop
test
es
inc
inc
xchg
mov
test
pop
insb
lahf
int3
push
iret
jp
out
loop
push
rorl
dec
sbb
push
rcr
mov
push
inc
push
mov
cld
stos
mov
in
jb
into
out
adc
daa
jp
mov
outsb
outsb
in
mov
cmp
xchg
fsub
mov
cs
adc
int
fbld
loope
mov
inc
mov
mov
mov
or
jbe
mov
int3
movsb
mov
cmp
fcomip
popf
cmp
pop
loope
mull
push
mov
add
adc
stos
popf
mov
movb
push
popl
cmp
insl
adc
sbbb
sbbl
shlb
xor
mov
sub
xchg
adc
mov
xor
iret
bound
fdivrs
sbb
loopne
mov
xchg
mov
jge
sbb
jno
jl
xor
bound
dec
and
stos
jmp
pop
add
or
clc
cmp
pop
xor
sbb
ja
popa
rcr
lods
fs
pop
ss
pop
pop
jmp
sbb
inc
out
adc
add
popa
enter
insl
and
mov
mov
and
daa
mov
ret
cmp
out
mov
lock
je
mov
jno
arpl
fmuls
jecxz
test
push
push
rorb
loopne
lds
add
lret
pop
dec
mov
data16
in
jl
xchg
or
iret
jl
pop
rorb
adc
in
fnsave
into
pop
or
xchg
jbe
in
xchg
rol
lahf
stc
mov
cwtl
leave
xchg
mov
mov
icebp
and
push
and
in
stos
mov
mov
pop
outsb
jmp
mov
or
xchg
insb
push
std
push
stos
in
pop
stos
push
jg
xchg
clc
out
mov
push
push
jg
dec
push
add
sub
negl
xor
pop
pop
aad
mov
loopne
dec
xor
cmp
inc
pop
adc
cli
pop
aas
add
je
and
fcomps
push
cmp
repnz
mov
psllw
add
mov
lds
xchg
popa
rcl
mov
jp
es
fimull
icebp
mov
or
pop
cwtl
in
inc
add
lahf
add
pop
dec
bound
nop
clc
cmp
ficoml
repz
es
ds
lret
inc
add
dec
and
mov
test
es
push
inc
push
xor
push
cmpsl
jbe
mov
test
outsb
inc
sbb
mov
push
add
push
loopne
out
lret
sub
add
pop
test
adc
jge
push
sahf
in
icebp
loop
fidivs
mov
mov
pop
lock
mov
std
dec
sbb
subb
insb
cs
pop
xchg
arpl
dec
mov
in
inc
sub
mov
clc
inc
xor
lcall
mov
pop
add
js
cmp
pusha
and
mov
leave
imul
and
jecxz
sar
sbb
test
xchg
mov
xchg
push
les
xchg
ret
es
mov
sub
je
sub
movsl
andb
scas
add
sahf
bound
je
mov
negl
xchg
cmp
pop
jle
daa
fsubl
xchg
cmpsb
stos
test
jl
jo
push
scas
and
or
jno
jne
lea
pop
fnstcw
punpckhwd
addl
shl
out
sbb
push
iret
inc
dec
cmp
ficoml
xor
cs
mov
jg
lods
jns
lcall
xchg
inc
es
pop
rorb
adc
cmc
push
push
dec
xchg
les
push
je
mov
pop
outsb
lods
adc
loop
cmpsb
rorb
cmp
cmp
add
loop
and
mov
pshufw
or
daa
xor
xchg
jg
xor
pop
jl
lcall
add
add
dec
inc
cld
lret
mov
lock
xchg
jmp
or
loope
xchg
push
aad
push
add
mov
outsb
xor
lods
jecxz
and
push
inc
push
clc
data16
mov
ss
jp
add
push
leave
shrb
mov
xor
or
inc
pop
int3
sbb
cmpb
lret
xor
pop
scas
sahf
lret
xchg
stos
sbb
sub
push
out
cli
jmp
fcmove
xchg
push
add
ja
adc
push
in
push
sbb
pop
mov
dec
fdivl
rcrl
ljmp
mov
mov
cmp
add
nop
sbb
and
mov
outsl
or
ja
jae
jmp
in
mov
lea
cld
pop
inc
mov
pusha
mov
bound
xor
mov
roll
hlt
outsl
cli
jbe
clc
sub
jne
popa
mov
dec
incl
jg
int3
add
mov
pop
adc
ds
shlb
push
adc
negl
fmuls
lds
and
inc
ss
mov
inc
cltd
outsl
mov
lcall
mov
cmc
or
pushf
jae
inc
adc
mov
icebp
mov
shll
pop
lds
jle
mov
pusha
xchg
je
fisubrl
xchg
test
or
mov
or
rolb
test
ret
jne
xchg
xchg
je
hlt
pop
aam
pop
and
xor
jo
dec
push
sti
test
fisubl
push
cli
pop
xchg
loopne
das
repz
out
test
mov
ret
shll
cmp
adc
xor
push
pop
fs
mov
int
push
iret
sub
xor
sarb
mov
and
popa
dec
sbbb
jmp
ffreep
and
push
xchg
les
sbb
push
insb
add
add
and
test
mov
das
orl
pop
jl
mov
clc
inc
adc
and
in
ljmp
mov
dec
ror
add
data16
cmp
lcall
idiv
mov
pop
xor
stos
xchg
stos
addb
sub
fidivrs
push
push
adc
out
mov
inc
loopne
int3
inc
sub
adc
faddl
push
mov
adc
sar
scas
cwtl
pushf
cld
and
and
and
jmp
jo
sub
sbb
fildll
mov
data16
dec
notl
clc
jge
or
dec
stos
fwait
popa
cld
inc
aad
shlb
push
inc
mov
shrb
sub
pushf
ds
mov
aad
arpl
movsl
jecxz
mov
mov
adc
jo
pop
inc
add
es
jb
gs
and
pusha
cmp
sar
fdivs
push
jl
in
add
or
ljmp
jno
shr
loopne
andl
aad
rcll
sbb
lock
dec
or
inc
movsl
and
shlb
mov
int3
jle
add
cs
inc
pop
pop
mov
lds
faddp
cwtl
inc
mov
cwtl
sarl
les
xor
insb
and
and
and
int3
mov
into
loopne
dec
or
dec
jge
insl
push
loope
push
lret
or
lock
xor
mov
mov
and
or
ret
repnz
mov
int3
into
and
movsl
inc
and
pusha
mov
lods
mov
adc
js
bound
xchg
test
fcompl
fs
movb
inc
sbb
rolb
out
jg
out
push
sbb
pusha
clc
int
les
rorl
lods
out
push
test
clc
fwait
push
sbb
cmp
call
aam
test
jnp
xchg
sub
lock
sub
sti
pop
jg
bound
daa
jno
cld
test
dec
stos
js
sbb
pop
mov
pop
pop
rclb
xchg
sbb
stos
inc
fsts
sub
sub
fistl
je
lock
xlat
test
nop
push
sbbl
pusha
sbb
pusha
and
pop
in
xor
iret
lret
stos
test
in
andb
xchg
lret
scas
ss
sbb
dec
out
stos
push
jl
jge
jns
push
push
rorl
push
sarb
cmp
stos
fsubr
cltd
dec
mov
dec
inc
orb
cli
pop
cmp
mov
sbb
hlt
les
lock
xor
addl
ret
push
push
pop
mov
and
sbb
xchg
xor
xchg
stos
jp
add
fildll
notb
dec
jle
ret
add
xchg
cmp
adc
xor
push
xchg
ljmp
mov
arpl
lock
addr16
idivb
jae
cmpsl
mov
push
pop
mul
cmp
out
mul
movsl
fistpl
outsb
add
pusha
leave
lret
fstpl
ljmp
sub
mov
cli
jmp
pop
mov
xchg
adc
add
mov
xor
mov
cwtl
xchg
imul
pop
cli
inc
mov
cld
or
sti
sbb
xor
and
hlt
sub
movsb
adc
pop
aas
pop
stos
movsb
test
mov
ret
fsubs
mov
pop
std
rclb
imul
stc
ret
loopne
add
outsl
loope
into
inc
inc
out
es
push
pop
jmp
aad
and
mov
push
inc
push
sub
inc
sub
sub
inc
pop
sbb
lock
push
pop
inc
fldt
jp
add
push
pop
ja
jg
stc
inc
je
sar
add
pusha
ja
pop
sbb
mov
jo
cmpsb
lods
stos
out
add
or
inc
cs
pop
pop
dec
xchg
or
sub
and
mov
scas
dec
loope
int
loope
sub
push
sbb
mov
dec
cwtl
mov
es
in
xchg
mov
test
call
out
push
mov
sub
pop
rolb
rol
loope
arpl
dec
js
shrl
adc
hlt
push
xchg
test
pop
and
scas
ja
and
jno
and
setp
mov
in
aas
mov
fdivrs
call
fcmovb
add
js
fidivrl
mov
adc
mov
inc
mov
enter
mov
push
loop
push
adc
pushf
push
push
pop
mov
dec
jnp
inc
jmp
pop
adc
pop
loop
test
mov
lock
dec
std
mov
pop
mov
rcrb
pop
in
repz
pusha
cmc
pop
push
cli
push
push
xchg
mov
dec
mov
cwtl
sub
and
ljmp
lock
pop
and
pop
sbb
imul
outsl
cmc
cld
aam
dec
out
pop
xchg
dec
push
daa
js
sbb
scas
sub
xor
mov
push
nop
in
jbe
mov
add
insb
jb
mov
add
daa
push
mov
fidivs
or
in
es
and
insl
mov
test
jns
add
cmc
ret
pop
and
cmp
movsb
movsl
test
or
push
cmp
cli
sub
and
push
add
adc
jge
dec
shlb
mov
mov
and
cli
add
insb
popa
push
aad
shl
cmc
jmp
push
mov
daa
stos
mov
sub
sahf
test
imul
jecxz
cmpsb
mov
mov
dec
cli
dec
push
lcall
sbb
and
sub
mov
adc
dec
add
xchg
sbb
adc
jo
mov
movsl
ror
add
lret
fwait
jle
in
jge
movsb
mov
lea
mov
insb
push
jle
sub
and
xchg
add
push
sub
in
js
fsubl
add
add
push
lret
push
lods
push
xor
inc
adc
out
shlb
not
xorb
push
sub
adc
jo
icebp
xchg
pop
push
or
dec
dec
sbb
jmp
cli
inc
nop
xor
fisubrs
sbb
push
ds
ss
xchg
mov
lret
adc
mov
or
jecxz
outsl
cmpsb
jbe
cltd
daa
fcmovbe
insl
popa
pusha
fisubrs
sub
xor
loopne
lods
js,pn
pop
dec
cmp
stos
ucomiss
and
ljmp
lcall
jle
adc
inc
sahf
jle
ja
jp
add
jns
popa
and
push
pop
xchg
mov
or
es
jo
cwtl
aad
and
or
addl
inc
cmpsb
icebp
ficomps
mov
aas
inc
adc
lcall
insl
icebp
rcr
icebp
ret
jle
pop
cs
pop
jne
cs
in
fisubs
cld
mov
movsl
cmp
movsl
inc
fsubrl
fdivr
pop
adc
clc
in
jecxz
sbb
or
dec
sbb
sub
js
sbb
inc
pop
sub
jle
mov
cmp
fdivrl
leave
push
push
sub
xor
add
inc
dec
jp
push
mov
jo
bound
mov
push
add
add
insl
enter
loop
icebp
adc
cmp
repz
mov
int
lds
int
cmpb
add
jle
out
jge
mov
xchg
add
dec
loope
movb
inc
out
mov
pop
mov
testl
xor
adc
xlat
pop
mov
test
jl
add
mov
mov
shlb
test
rcll
inc
mov
xchg
shrb
jmp
xlat
adc
pusha
pop
pop
fwait
jle
test
test
imul
lcall
adc
test
sub
push
shrb
push
push
repnz
adc
fmulp
jl
es
cli
adc
mov
mov
jns
jle
xchg
dec
pop
xchg
aam
sti
cld
cmc
fistl
aam
jecxz
jmp
cwtl
test
sbb
subl
mov
cmp
sbbb
es
lock
std
dec
push
out
dec
movq
jno
fs
and
ficomps
mov
pop
jl
js
adcb
jne
aaa
sub
enter
sub
add
inc
call
rcrb
loop
icebp
push
push
add
ss
pop
fcoml
inc
push
cltd
add
xor
lcall
aas
add
push
nop
pop
outsb
test
push
addl
lcall
inc
xor
sub
adc
sbb
sbb
jae
push
sar
or
dec
jnp
adc
mov
out
mov
pop
jbe
fs
loopne
imul
cli
in
sbb
xor
pop
rcrl
sub
mov
adc
cmp
sub
jb
and
pop
dec
fidivrl
xlat
aaa
bound
mov
add
mov
adc
insl
cmp
jg
jl
std
adc
rcl
push
mov
push
sti
pop
mov
scas
cmp
test
pop
add
mov
aas
clc
add
jg
cmp
mov
out
lods
loopne
adc
hlt
cmp
stos
fimull
and
out
sbb
jle
dec
push
cmp
or
pop
call
jecxz
je
pop
lret
lods
adc
or
outsb
cmp
cli
cmpsl
mov
test
pushf
pop
push
rolb
and
loopne
mov
or
jg
cs
cs
outsl
dec
stc
testl
mov
jo
pop
mov
enter
add
ds
mov
dec
sub
fsubrs
rcrb
add
pop
add
fs
add
and
adc
push
xchg
into
int3
aad
adc
jo
daa
roll
or
neg
cmp
ljmp
jne
sub
and
inc
fcmovb
mov
push
pop
fdivr
jp
inc
pop
xor
cmpsl
dec
cmpb
cmpsb
test
icebp
and
xor
push
adc
push
fldl
jecxz
mov
ficomps
leave
inc
mov
push
or
dec
repnz
mov
loop
xlat
or
loop
jo
xor
add
xchg
loopne
int
nop
fcomps
dec
fwait
repz
orb
xchg
int
xchg
xlat
xchg
mov
sbb
hlt
push
ret
lahf
dec
or
lcall
jo
scas
mov
inc
aas
pop
ret
pusha
xchg
dec
in
das
pop
je
xchg
or
xchg
add
or
lock
bound
loope
add
aad
lahf
stos
sbb
lock
roll
add
mov
mov
das
push
fiadds
and
or
dec
dec
jmp
daa
in
pop
inc
cltd
test
dec
mov
shlb
jecxz
fadd
bound
mulb
inc
mov
mov
enter
cmpsb
mov
xchg
out
std
enter
dec
cmp
mov
sbb
and
ret
rolb
or
sub
sbb
loopne
fcmovbe
stos
iret
xor
and
outsb
cs
sbb
sbb
mov
sbb
adc
fwait
cld
or
rcrl
rcr
sub
rolb
adc
lods
cmpsl
inc
sbb
cmp
inc
pop
test
add
or
dec
into
xor
add
nop
lret
movsl
or
push
mov
ljmp
inc
mov
fs
push
jne
jno
adc
cli
push
xchg
pop
pop
pop
mov
dec
mov
cli
mov
sbb
lock
stc
das
ret
dec
mov
pop
or
addr16
pop
push
or
movsb
inc
push
imul
insl
jo
or
jno
adc
aas
xchg
or
sbbl
into
xor
mov
mov
je
inc
push
sub
shll
dec
cld
lods
xor
add
or
xor
jl
sub
out
cwtl
cmp
sahf
subl
jmp
push
ljmp
or
push
mov
xor
fwait
outsb
rclb
add
test
push
hlt
sub
pop
test
cmp
loopne
xlat
dec
and
cmp
dec
addb
and
mov
sbb
icebp
mov
inc
lahf
stos
loopne
out
stc
test
push
inc
cmc
out
or
xchg
cmc
insl
out
dec
xorb
mov
rolb
xchg
jns
lret
pusha
sti
xlat
mov
cmp
and
hlt
mov
jne
adc
add
enter
arpl
sbb
gs
clc
add
mov
into
icebp
ja
inc
pop
xchg
jmp
cmpsb
mov
hlt
insb
cld
jno
sbb
jp
add
push
dec
push
sbb
cli
mov
sub
movsb
mov
cmpsb
dec
pop
jle
cmpsb
sub
ljmp
leave
lock
and
mov
and
testl
pop
xor
mov
mov
sahf
xchg
or
xchg
leave
inc
stos
negl
xor
push
xor
jae
jle
inc
cli
rol
push
mov
mov
xorb
inc
push
negb
and
sbbb
cmp
add
scas
xchg
jge
pop
push
test
push
adc
dec
add
mov
cmp
inc
jmp
pusha
cltd
aaa
pop
ss
xchg
jge
js
cmp
out
mov
nop
mov
xchg
mov
inc
and
push
push
out
mov
fucompp
ja
popa
cmc
inc
jbe
mov
negl
pop
jg
lea
ss
sbb
out
mov
decl
scas
jae
jge
int
outsb
or
sub
repz
or
sbb
stc
mov
and
adcb
jg
adc
fcoml
js
subl
push
clc
push
mov
ret
jle
inc
sub
jbe
adc
mov
ret
pop
sbb
adc
and
mov
mov
jg
xor
adc
pop
xchg
xchg
es
bndstx
inc
mov
jp
add
push
pmaxub
cmp
stc
mov
mov
shlb
cmc
dec
rol
cmp
mov
mov
add
pop
jmp
adc
pop
ret
pop
pop
pcmpeqb
mov
outsb
pusha
jecxz
pop
adc
call
mov
cli
adc
dec
push
push
pop
mov
dec
cmp
push
mov
add
or
and
push
push
push
stos
add
dec
test
add
mov
std
lods
shr
xlat
fdivrl
jb
jno
popf
addr16
push
movsb
movsl
pop
push
lar
sub
jo
sarb
lret
cmpsb
xlat
sub
pop
mov
lret
sub
imul
es
inc
or
jp
add
xor
jno
adc
mov
mov
jb
cmc
push
imul
dec
cwtl
rorb
mov
cmp
mov
sbb
sub
add
jl
xor
cmpsl
pop
stos
call
push
ror
add
ficompl
std
mov
sbb
lds
data16
jmp
je
fiadds
std
add
push
ret
xor
sbb
jle
push
pminsw
out
cwtl
mov
fisubl
jmp
inc
pop
jmp
das
push
out
mov
xchg
sahf
aam
push
aad
ret
fsubs
pop
lds
push
mov
clc
roll
loop
hlt
enter
mov
mov
inc
jb
push
pushf
jnp
cmp
fmull
shlb
jmp
lods
add
insb
pop
jmp
adc
and
stos
sub
add
push
and
lcall
cld
mov
adc
ljmp
outsb
mov
movsl
mov
push
ljmp
mov
faddl
stos
jmp
testb
pushf
nop
ss
lret
xchg
jp,pt
mov
out
sub
push
pop
clc
out
add
cmc
ret
cmp
int3
cltd
and
scas
cmc
mov
mov
cli
adcl
xorl
lahf
and
jbe
adc
mov
adc
inc
and
or
or
add
out
xchg
xor
rorb
adc
aas
adc
rcll
or
int3
arpl
adc
mov
scas
aam
inc
mov
subl
popl
sub
push
jl
jg
adc
push
or
sar
push
lcall
out
out
adc
jg
in
roll
mov
push
xchg
adc
je
aam
mov
inc
les
nop
pop
mov
xchg
xchg
pusha
xor
addb
cmp
sub
or
push
add
pusha
inc
mov
inc
xor
push
cmp
fcomps
push
fistpll
das
mov
inc
adc
notb
out
mov
enter
dec
add
insl
and
test
lea
xchg
inc
adc
xor
inc
scas
xchg
pop
inc
xor
jnp
jge
xor
sahf
jno
test
sarb
test
cli
repz
xor
pop
sub
mov
jle
add
or
dec
sub
and
pushf
pop
ret
lahf
mov
mov
xor
ja
pop
rol
jnp
xstore-rng
cmpsl
les
aam
push
and
mov
sub
aaa
jmp
into
mov
or
cld
adcl
add
arpl
add
out
inc
out
push
xchg
adcl
mov
lods
and
push
push
xchg
adc
pusha
shl
stos
adc
dec
cwtl
push
cmp
and
xorb
mov
inc
into
push
fildl
push
bound
mov
shlb
cmpsl
or
addb
pop
adc
aaa
int3
sbb
cmp
pop
hlt
dec
loop
add
mov
mov
inc
inc
js
popf
adc
dec
test
pop
jecxz
outsb
dec
insb
mov
scas
ja
jmp
lea
dec
jle
scas
sbb
fists
imul
das
shll
cld
ds
mov
fsub
rcrb
fldcw
mov
xchg
jno
inc
popf
xlat
fwait
adc
pop
ficompl
jnp
jmp
loope
inc
cmp
mov
sbbb
lods
adc
insl
adc
sub
ljmp
hlt
push
aad
in
loope
push
adc
outsb
dec
sbb
gs
xlat
adc
add
adc
je
test
mov
jge
fidivrs
loope
nop
fiaddl
xchg
add
or
mov
inc
add
or
clc
inc
adc
xor
repz
in
cmp
iret
jge
jp
cmp
inc
daa
aad
mov
adc
push
xchg
jl
pop
sub
arpl
cmpsl
ja
insb
loope
sub
dec
cs
cs
or
mov
sbb
sub
cli
and
xor
std
dec
jmp
push
test
sti
mov
push
ficoms
mov
lock
jge
jnp
xor
jno
das
xchg
hlt
stos
push
loopne
in
leave
in
ljmp
adc
out
pop
mov
div
loopne
daa
mov
xchg
imul
ret
stos
inc
xor
dec
mov
cld
adc
xchg
in
add
mov
or
cld
je
inc
jbe
movsl
fsub
data16
inc
xchg
adc
xor
icebp
stos
mov
sbb
cmp
into
js
and
rorb
movl
lret
push
int3
cmp
jge
mov
icebp
pop
movsb
aas
or
jo
mov
xchg
and
sbbl
cmpsl
push
call
inc
hlt
push
popf
mov
scas
test
test
dec
or
cmp
push
push
pop
popa
sar
dec
jecxz
or
inc
jo
das
add
test
xor
adc
lods
icebp
jo
sbb
shrb
push
jb
into
lock
in
call
dec
arpl
cmpsb
lds
leave
inc
pop
bound
clc
push
js
sahf
out
rep
repnz
in
rcl
ljmp
push
xchg
adc
fwait
cmp
mov
mov
rcl
out
pop
jg
cld
cmp
mov
shlb
push
xor
cld
test
cltd
into
jnp
js
jecxz
xchg
in
jns
addr16
pop
cld
fcoms
pop
sub
and
loope
mov
shl
fstpt
cmp
jae
and
add
dec
sbbb
nop
fldl
add
mov
gs
les
aam
cmp
adcl
lea
cmpsb
add
ss
cs
jg
loop
roll
shrb
data16
aas
mov
jbe
std
rorb
les
xor
lds
cmp
bound
hlt
or
inc
lods
push
pop
fucomi
xor
lock
sub
fdivr
test
mov
pop
sub
into
sahf
pop
mov
fidivrl
lods
test
in
pusha
scas
js,pt
lea
cwtl
mov
jge
divps
repz
lcall
inc
out
lea
mov
rcl
mov
or
lcall
pmullw
inc
sub
sti
fstpl
pop
clc
andl
mov
lods
jp
dec
sub
or
inc
into
add
mov
push
pop
push
lret
into
push
push
xor
mov
jp
lods
cmp
scas
lods
aaa
outsl
fisttpll
xchg
add
add
les
xchg
sahf
sbb
mov
inc
sbb
clc
imul
cmp
lods
ljmp
shll
rol
in
clc
jge
adc
addb
ds
push
aam
lcall
mov
jg
shll
push
lret
push
clc
or
sub
xchg
mov
add
mov
icebp
or
lods
in
aaa
mov
or
xor
inc
mov
cmpsb
dec
xchg
cld
std
inc
pop
ss
mov
cmp
mov
push
pusha
testb
dec
ret
pop
cmpb
push
ljmp
cmp
lock
mov
mov
inc
adc
mov
dec
sbb
aas
ljmp
cmpsb
lock
cli
imul
mov
xchg
ds
insb
in
lea
pop
sbb
xchg
push
rorb
loopne
jbe
orl
push
jne
jle
leave
sbb
test
cli
loop
fldl
stos
push
aam
jns
sbb
pusha
scas
nop
mov
inc
ja
push
sbb
shll
and
pop
xor
jg
add
pop
loop
push
push
pop
xor
js
cmp
jmp
mov
jno
je
fldl
mov
sbbb
xlat
xor
inc
nop
in
mov
out
sub
adc
xchg
jle
mov
clc
sub
push
push
cmp
add
daa
pop
stos
push
out
inc
mov
outsb
cmp
push
stc
adc
and
pushf
inc
mov
add
mov
int
ret
pop
lret
cmpsl
sbb
mov
push
push
cmp
out
cld
mov
xor
imul
sbb
inc
ret
data16
repnz
add
mov
jl
mov
pusha
lds
sbb
mov
push
into
popa
xchg
adc
shlb
sbbb
mov
dec
mov
mov
scas
xor
ja
dec
inc
pop
or
push
lods
out
es
out
xor
loope
cwtl
stc
jg
lods
and
and
adc
push
scas
int
js
pop
leave
andb
jg
test
repnz
lds
ss
xor
loopne
dec
dec
arpl
pop
or
cmpsl
push
xor
iret
mov
sti
push
mov
scas
std
ss
pushf
enter
mov
movsb
mov
mov
mov
mov
add
push
cmp
loop
std
mov
fstl
je
mov
xchg
inc
idiv
and
pop
pop
loope
mov
int
mov
cmp
test
je
out
sbb
lods
add
test
repz
mov
into
cmp
push
sub
cmpb
mov
out
mov
cli
aad
mov
pop
and
and
sbb
mov
lea
and
sbb
loop
scas
cmpsl
fdivs
cmpb
pop
inc
push
pop
aaa
mov
mov
cmp
xchg
or
subb
popf
addr16
cmc
decl
les
push
cmp
adc
mov
fildll
pop
xor
test
pop
add
adc
sub
incb
push
out
mov
ja
cli
adc
ror
add
les
jmp
xorb
fwait
push
mov
inc
cld
cli
sbb
mov
lods
rcll
sahf
jae
jmp
and
cld
inc
sub
or
mov
fsubr
lea
dec
inc
ret
dec
push
sbb
ret
or
sbb
xchg
mov
inc
test
movsl
clc
inc
adc
fdivp
inc
ljmp
das
rorb
mov
data16
sbbl
cmp
inc
inc
lcall
sbb
lahf
xchg
aaa
je
ss
sbb
push
jecxz
mov
mov
jle
push
mov
fdiv
dec
and
iret
rcr
sbb
inc
inc
js
pusha
rcll
les
jp
mov
fbld
mov
loop
inc
loopnew
jb
outsb
dec
mov
xchg
jmp
add
ja
cli
jp
inc
call
push
nop
lea
jp
push
cltd
test
sbb
lds
dec
aam
cmp
push
hlt
push
lcall
mov
push
push
mov
shr
fucomip
jne
cs
push
lea
gs
jmp
sub
leave
and
out
jle
test
fcom
adc
rol
cmpsb
mov
in
sub
mov
add
inc
test
loopne
roll
xor
dec
pusha
aaa
divl
inc
sar
or
stos
into
bnd
js
fdivrs
pop
dec
call
pop
dec
mov
jmp
push
add
popa
das
gs
int3
std
jmp
popf
pop
jnp
les
arpl
insl
add
mov
jo
addr16
lock
mov
fidivs
dec
adc
rorb
dec
sbb
adc
mov
hlt
xor
jmp
xchg
ljmp
mov
cmp
int3
rorl
jmp
js
inc
inc
push
cwtl
fwait
and
js
add
mov
fiaddl
add
mov
or
mov
test
push
xor
out
xlat
lods
sbb
in
sub
add
xchg
ljmp
inc
lcall
fisubrs
inc
add
pop
mov
and
sti
sub
fs
pushf
sub
mov
xchg
ret
scas
sub
mov
test
push
stos
stos
sub
pop
cli
jecxz
push
ret
icebp
pushf
and
sbb
dec
and
addr16
sub
dec
rcrl
das
mov
jnp
imul
cmp
add
lock
cli
rcrl
stos
adc
mov
mov
sbb
stc
iret
or
in
and
adc
push
clc
daa
movsl
cmpsl
pop
xchg
repnz
clc
outsb
mov
sti
pop
or
iret
adc
jg
in
mov
in
mov
aas
mov
pop
or
push
jge
js
shrl
test
not
cs
jb
dec
pusha
movsl
push
add
cld
stos
out
fcmovbe
xor
aam
mov
jecxz
add
lods
push
jl
push
pop
aaa
pop
lock
inc
test
sbb
sbb
inc
dec
add
pop
sub
cmc
loopne
dec
out
push
mov
pop
insb
mov
add
jl
nop
pop
mov
sbb
invd
lods
arpl
xchg
loop
add
lds
rcrl
push
lds
rolb
nop
and
and
xchg
jo
mov
mov
cmp
lahf
incb
and
dec
lods
faddl
dec
mov
dec
adc
fidivrl
dec
loop
mov
test
call
add
ss
sub
push
outsl
hlt
in
mov
inc
cmp
jl
push
lea
outsb
mov
pop
dec
add
add
dec
je
sbbl
or
mov
dec
xchg
mov
cmp
jbe
dec
xor
mov
mov
or
and
lock
mov
loopne
dec
je
mov
in
xor
daa
jecxz
decb
xor
arpl
mov
mov
inc
inc
insl
dec
std
inc
fildll
or
push
std
sbb
dec
pusha
mov
jl
jle
jbe
arpl
sub
adc
pop
sbb
stos
jbe
adc
adc
pop
ljmp
push
addr16
pop
lret
push
lahf
rcr
cwtl
push
add
dec
pop
sbb
sub
cmp
iret
rclb
or
adc
pop
adc
es
add
adc
test
or
sahf
scas
cli
push
sti
mov
xor
or
inc
inc
mov
mov
test
or
mov
jg
push
xor
fwait
shl
movsl
ds
mov
pop
shrb
jbe
xchg
jecxz
sbb
jl
out
clc
cmpsb
sbb
test
sub
adc
add
test
imul
and
dec
jge
aam
jo
mov
hlt
lock
mov
pop
leave
int
mov
mov
adc
jno
jns
clc
mov
inc
push
dec
jo
nop
cli
push
xchg
xchg
xchg
mov
add
push
dec
in
bound
aas
jno
push
mov
pop
inc
pop
mov
aas
xchg
inc
mov
popf
call
imul
xchg
dec
sub
jmp
xlat
add
outsl
fsubs
addb
sarl
sar
inc
jbe
lea
lods
mov
push
cmp
int3
and
loopne
ret
ret
data16
imul
push
icebp
shlb
mov
xor
int
ror
adc
ds
xchg
and
cmp
inc
xor
xchg
and
div
ud2
cmp
add
sub
negb
idivb
mov
add
push
inc
push
mov
mov
rorb
adc
sti
icebp
and
sub
or
and
mov
ss
cwtl
repnz
mov
aad
cmp
jns
jmp
cmp
orb
inc
push
clc
inc
jmp
pop
shrl
out
insb
lds
shrb
fisttpll
popf
stos
popa
dec
dec
clc
cwtl
jnp
add
cmp
lret
pop
push
sbb
clc
jl
jns
pushf
insb
dec
outsl
test
sahf
mov
mov
daa
aaa
or
loope
rorb
ljmp
repz
ret
mov
mov
jle
les
adc
jge
bound
xchg
lea
hlt
fists
js
outsl
cli
scas
pop
ror
dec
in
je
je
push
cwtl
mov
sub
jno
fistpll
push
add
hlt
lods
mov
daa
mov
je
rorb
out
sbb
xchg
or
out
sub
ret
xchg
ljmp
jle
es
hlt
sar
pop
lods
xchg
testl
test
pop
stos
adc
sbb
jns
cli
enter
or
rclb
cmp
pop
insb
and
and
add
adc
icebp
lods
enter
clc
sbb
push
dec
push
outsb
les
push
shll
mov
orb
sub
mov
pop
xor
and
scas
dec
testb
lret
adc
dec
or
jb
and
mov
addl
fisttpll
and
add
sar
test
popf
imul
gs
pop
jne
loopne
push
xor
pop
je
js
shrb
shl
rolb
jp
inc
and
sar
jecxz
out
xor
sbb
sahf
cld
xor
jp
or
pop
push
inc
push
pop
jae
outsl
pop
repnz
xchg
push
cmp
mov
pop
or
scas
add
mov
and
and
mov
push
lods
or
add
mov
mov
je
std
adc
mov
pop
ror
mov
or
and
imul
xchg
mov
setle
out
inc
push
or
pushf
pop
jne
dec
dec
pop
mov
push
aaa
loope
or
ret
imul
call
aas
aaa
imul
sub
iret
popf
in
pop
imul
sub
dec
mov
insl
jae
ds
push
lahf
cmp
cmpsb
fistpll
lods
mov
or
mov
lret
rorb
hlt
and
dec
aas
les
mov
loop
jmp
pop
inc
sahf
sbb
or
push
pop
xchg
and
pop
loopne
cwtl
mov
dec
pop
out
rcll
pusha
pusha
and
clc
dec
push
cmpb
sbb
mov
jmp
add
ljmp
loop
cmpsb
ret
or
into
cmp
cmp
fmuls
scas
push
push
mov
mov
popa
pusha
fdivrs
xlat
loope
mov
in
add
into
add
or
adc
movsb
add
pop
mov
jno
adc
xchg
ret
or
mov
outsl
aas
aaa
and
ret
fisubrl
cld
popf
push
mov
test
mov
jb
ret
inc
sbb
mov
scas
cmp
lahf
mov
xchg
adc
and
jg
std
lods
inc
cmp
xor
int
mov
rcrl
outsb
add
push
sti
dec
aam
loop
jp
sub
and
int
jle
sub
push
call
ret
nop
ret
sar
sbb
adc
pop
fnstsw
das
mov
pop
xor
xchg
cli
test
in
push
xchg
mov
xchg
and
jmp
sahf
hlt
inc
mov
xor
push
inc
push
mov
rcrl
mov
sbb
xchg
cli
test
es
inc
adcl
sbb
outsl
data16
add
and
je
call
mov
mov
sqrtps
adc
push
dec
mulb
xor
cmp
test
add
mov
xlat
or
fistps
sbb
cmp
clc
push
or
and
mov
and
sbb
inc
fsubrs
cmc
add
sbb
mov
fcmovnbe
xorb
jg
xchg
or
out
and
or
cmp
cltd
icebp
push
add
dec
fdivrl
sub
hlt
xchg
fs
inc
pop
clc
push
sbb
inc
sbbb
mov
ret
fdivrs
and
filds
push
xchg
sub
pop
mov
or
popf
adc
mov
or
pop
push
add
ret
inc
rcrl
aas
fidivrl
cmp
in
nop
add
mov
fs
cs
xlat
mov
stc
jge
loopne
jp
xchg
call
fdivrl
xor
sbb
mov
mov
cs
dec
push
dec
test
jbe
outsb
sbb
in
jno
js
out
cld
adc
add
hlt
das
add
dec
adc
cs
hlt
leave
mov
aad
add
imul
cld
add
sbb
je
xorb
cmp
jmp
clc
je
mov
or
jns
inc
outsl
cmp
shlb
ret
inc
nop
sub
sahf
mov
jle
pop
aas
dec
dec
pop
movsl
in
or
fs
call
push
cli
mov
rclb
ret
ret
push
mov
push
add
xor
in
scas
mov
sbb
cmp
lret
inc
mov
out
sbb
push
orb
sbb
sbbb
push
cmp
dec
push
adc
inc
cmp
add
inc
push
sbb
push
mov
test
push
cld
jle
loopne
and
cs
loopne
mov
mov
cmp
mov
xchg
sbb
cmc
fildl
lret
xchg
js
loope
cmpsl
xchg
shll
pop
pop
inc
scas
mov
lret
mov
inc
xor
or
xor
clc
pop
pop
jecxz
addb
fimuls
sbb
clc
push
lret
add
mov
cs
inc
rorl
cli
mov
sub
outsb
imul
adc
mov
and
aad
insl
mov
pop
mov
adc
mov
add
iret
ss
addl
addl
aas
mov
mov
fcomps
fscale
movsb
aam
clc
mov
push
sub
pop
gs
jecxz
inc
jbe
pop
lock
mov
fstl
insb
lea
and
push
sub
xchg
bound
mov
mov
imul
adc
cs
int3
filds
jns
dec
test
int3
mov
sub
sub
and
cmp
pop
jne
mov
adc
loopne
push
in
mov
lcall
push
or
adc
sbb
loop
pop
pop
inc
sbb
push
fistpl
sbbl
mov
movsb
test
clc
jnp
sahf
iret
and
push
and
repz
add
xchg
mov
inc
ljmp
mov
and
shrl
adc
jmp
ja
cli
movsl
cmp
loop
je
pusha
or
jge
mov
and
xchg
xchg
cs
fidivrl
or
enter
les
sub
nop
cmc
lcall
pop
and
dec
popf
test
lods
gs
adc
mov
shlb
inc
sub
adc
push
pop
jo
test
scas
sbb
mulb
pop
out
mov
push
pop
jl
shrl
std
ret
lods
inc
faddl
pop
jbe
inc
jmp
pop
hlt
sub
mov
iret
into
mov
mov
repnz
fsubl
fdivrs
mov
adc
mov
pusha
fcom
pop
in
call
fisubs
mov
popf
sub
jne
and
ja
inc
ucomiss
push
sbb
into
mov
lods
push
loope
xchg
sbb
mov
add
test
repz
pop
cld
mov
dec
inc
adc
inc
das
mov
xor
jmp
jle
push
cli
ss
adc
outsl
adcb
pop
fimull
addl
stos
jg
xor
lock
imul
inc
cld
mov
testb
les
xchg
mov
cmp
pop
jl
pop
rolb
xchg
jp
test
faddp
push
pop
inc
or
and
sbb
shlb
icebp
out
hlt
adc
rorb
xor
filds
inc
ret
add
sbb
jg
ret
jmp
xlat
add
lds
push
dec
jp
int3
jp
pusha
sbb
mov
sub
stos
xor
lea
aad
aam
cli
inc
mul
mov
ljmp
jne
push
mov
adc
push
mov
aaa
aad
test
dec
leave
clc
lret
mov
mov
cmc
jmp
mov
lcall
adc
pop
mov
lock
push
outsl
popw
cmp
push
pop
out
repnz
in
pop
add
sub
lret
fisubrs
xor
je
sub
mov
negl
jmp
sbb
xor
inc
les
lods
mov
or
xorl
xor
cmp
adcl
aas
js
sub
cmp
outsb
int
dec
push
fldenv
sbb
push
scas
xchg
inc
jno
push
test
pop
sbb
movl
fdivp
pop
pop
cld
adc
fsubrl
punpckhdq
inc
adcl
insl
inc
mov
add
pop
jno
mov
adc
popl
decl
lret
clc
push
mov
pop
xchg
shrb
push
and
loopne
test
adc
mov
or
mov
and
or
addr16
mov
sub
and
push
sbbl
and
js
add
pop
cmp
popa
sbb
xor
xlat
imul
lahf
cmp
sbb
sub
inc
and
push
loopne
pusha
cmc
xor
pusha
mov
loope
push
icebp
orl
aam
ficoms
lea
dec
sub
cltd
hlt
and
ret
lret
xchg
les
movsb
shl
sub
cmp
cmp
sbb
ret
xor
cld
nop
sarl
test
cmc
dec
jae
dec
rorb
out
popa
insl
cmpsb
pushf
mov
fcompl
ret
outsb
bound
sbb
outsb
jl
dec
out
sbb
sbb
fs
mov
pop
cmpsl
dec
stos
imul
jne
fldenv
scas
cmpsl
idivb
stos
cmc
fs
mov
pop
pop
add
into
lds
bound
push
aad
push
xor
cmc
movsb
lahf
js
pusha
rorl
mov
cs
aam
jge
or
in
adc
jo
scas
cmp
mov
pop
test
xchg
jb
sbb
pop
mov
out
pushf
sbb
lds
data16
add
sbb
mov
stc
mov
add
pop
adc
push
add
push
add
inc
ss
repz
jne
add
adc
mov
js
sbb
test
mov
clc
test
inc
andb
sbb
cmp
push
in
loopne
push
add
out
je
add
incl
lret
mov
inc
jbe
std
xor
inc
push
and
int3
pop
addr16
enter
cmp
lret
add
add
nop
and
outsl
sbb
adc
aad
pushl
inc
stos
mov
or
dec
push
dec
sbb
fwait
jae
dec
loope
mov
dec
outsb
ljmp
pop
dec
mov
dec
js
ret
aam
out
fidivl
enter
lcall
cmc
pusha
test
pop
sub
cmpsl
pop
js
and
je
mov
stos
les
out
stos
add
in
cmp
loop
out
sub
mov
dec
push
push
mov
inc
cmp
mov
fiadds
cmp
sub
out
lock
add
mov
es
aaa
push
mov
in
cmp
movsb
out
adc
call
lahf
cmpsb
dec
js
adc
lea
dec
jp
loop
int3
cmp
sbb
aam
jp
insl
data16
mov
stos
mov
xchg
pushf
jo
loop
or
mov
xchg
sub
jnp
aam
shrb
push
cmovle
sub
stos
aas
dec
jno
cld
cmc
cld
js
add
movsl
inc
or
lods
push
xchg
inc
xchg
adc
in
adc
clc
or
xchg
lds
inc
jb
fimull
nop
and
lds
or
mov
cli
mov
mov
test
mov
jb
fs
mov
jle
shlb
call
mov
fisubs
and
fidivrl
outsl
sub
xchg
pusha
sbb
xor
negl
or
mov
jo
pop
jne
adc
xorb
xchg
rorb
jne
push
movsb
dec
adc
clc
cli
clc
add
adc
push
pop
call
push
or
jg
pushf
xor
pop
lcall
inc
xor
call
dec
adc
jle
add
pop
jle
int3
nop
add
inc
inc
and
mov
mov
inc
add
push
mov
lea
fadd
sub
mov
adc
sbb
pop
test
stos
inc
or
out
sub
sti
daa
push
repnz
dec
and
aam
mov
test
cmpsb
xlat
pop
and
inc
fnsave
inc
mov
aam
mov
fistpll
imul
inc
sbb
orb
mov
shrb
fisubl
or
jl
mov
jns
fistpll
mov
jo
hlt
shrl
test
stos
mov
jno
cmp
shll
cs
sbbb
or
jbe
jg
sbb
dec
pop
pop
xlat
inc
cmp
mov
adc
cmpsl
fisubrs
sbb
push
inc
mov
dec
roll
jne
add
push
dec
dec
jl
xor
add
xor
mov
imul
jae
adc
mov
insb
jb
inc
mov
jl
loope
pop
cwtl
mov
adc
mov
xlat
mov
jg
dec
pop
mov
adc
dec
cmp
jecxz
lahf
dec
mov
mov
xor
cwtl
insb
add
lods
push
or
mov
jmp
mov
cs
mov
cmp
test
mov
xchg
sbb
push
mov
pop
dec
cmp
or
cli
push
jmp
test
push
icebp
mov
lods
cli
test
xchg
push
or
outsl
xor
xor
cmpsb
icebp
and
shll
inc
outsb
ficoms
fmuls
xchg
sbb
or
pop
jbe
loopne
or
scas
cli
mov
xor
mov
adc
or
inc
adc
push
popa
addr16
outsl
xor
in
filds
cwtl
or
push
pop
lods
imul
mov
sub
cmp
lock
and
or
aaa
mov
mov
sub
pop
xchg
mov
enter
ret
or
into
xorb
mov
mov
out
adc
in
mov
call
jg
lret
sub
cmp
jle
sar
adc
lods
jle
cli
sbb
fcomps
push
add
daa
inc
push
jmp
ficomps
inc
repnz
iret
movsb
testl
shl
or
mov
pop
pusha
insb
clc
jbe
and
adc
jg
pop
lock
jl
jmp
test
push
test
shlb
mov
or
mov
xor
adc
in
cmp
sti
test
jo
push
add
or
cld
add
ljmp
dec
into
dec
push
push
inc
nop
push
sti
bound
jmp
mov
mov
mov
leave
or
or
sbb
repz
dec
ljmp
lret
mov
add
inc
mov
pop
pop
and
sbb
ret
rcrl
outsl
xlat
les
mov
or
inc
lcall
psubb
cmp
sahf
push
jle
xchg
xchg
cmp
or
xchg
push
outsl
dec
arpl
dec
pop
inc
dec
ljmp
decb
test
icebp
movsb
ss
cmp
mov
push
pop
iret
jle
sbb
cmc
orl
fwait
xor
mov
cmpl
mov
mov
adc
sub
lahf
xchg
fstpt
fwait
mov
dec
jmp
pop
shlb
mov
adc
jle
inc
daa
mov
inc
pusha
add
push
dec
and
sbb
push
mov
add
inc
pop
call
mov
fisubs
mov
sub
xchg
pop
repnz
ret
test
lea
sub
sbb
pushf
lods
sub
in
fwait
jge
cmp
xchg
std
pop
scas
loop
adc
mov
test
xor
sub
sub
scas
pusha
or
jae
dec
fisttpll
scas
sbb
call
fisttps
das
rcrl
dec
xor
inc
mov
outsl
xor
xchg
cli
fwait
rolb
jo
out
or
rorb
cmp
mov
pop
mov
and
ret
leave
movsl
ds
sbb
adc
xor
push
imul
cmpl
shll
pop
mov
sub
jmp
out
mov
add
ljmp
popf
dec
push
and
ds
pop
cmpsl
out
xlat
inc
ljmp
push
xchg
mov
lock
inc
jne
push
xor
sbb
mov
xchg
repz
sbb
adc
sti
mov
mov
lods
scas
outsb
fsts
orb
hlt
cli
outsl
in
inc
or
add
add
nop
subb
jg
mov
lods
int3
or
js
je
loope
add
sbb
loopne
loop
jg
push
push
mov
inc
pop
or
mov
popa
std
sahf
int3
cld
int
add
inc
sahf
nop
ret
mov
cmp
loop
test
rorl
cmp
data16
jp
and
xchg
pop
dec
add
xchg
sahf
mov
rcr
push
sub
adc
loope
call
adc
mov
stc
xor
out
sub
push
sbb
sbb
adc
fadd
inc
scas
hlt
hlt
inc
movsl
jp
adc
jo
pop
test
add
xor
cs
adc
or
insb
and
jge
sahf
mov
cmp
push
aas
das
stos
xchg
in
mov
mov
loopne
std
xor
fsubp
call
inc
pusha
pop
test
and
sbb
jp
push
inc
push
xchg
inc
push
fcmovnb
adc
fsin
orl
addl
nop
mov
andl
xchg
fcmovbe
xchg
hlt
clc
ss
xor
mov
das
xchg
sbb
add
and
jl
out
add
filds
test
add
decl
mov
push
clc
cli
loop
scas
pushf
sub
push
cmpsl
push
test
out
stc
sbbb
jns
dec
mov
jecxz
mov
add
stc
lea
pop
and
ljmp
fadd
pop
mov
and
cwtl
jo
sub
adc
add
ret
xchg
dec
mov
insl
mov
mov
mov
jne
mov
dec
push
or
or
mov
mov
mov
xchg
sbb
add
xor
pop
mov
add
xchg
daa
or
push
jns
fbstp
in
lret
dec
mov
push
xor
mov
or
flds
faddl
enter
push
scas
and
insl
or
mov
arpl
fisubrl
cwtl
adc
push
pop
or
mov
int
inc
adc
cmp
jae
lret
xchg
rcl
orl
fcmovnbe
in
sub
push
pop
xorl
fldl
outsb
jo
jl
add
mov
je
stos
jl
mov
pop
data16
inc
mov
push
loopne
inc
push
dec
insl
decb
push
or
inc
int
inc
rolb
xor
fsubrp
inc
rcrb
jmp
lods
jbe
dec
pop
adc
insb
xorl
xor
shlb
dec
fcomp
int3
jbe
mov
mov
push
je
mov
scas
jo
cmpsb
movsl
push
call
in
int3
addl
ss
cs
outsl
mov
jmp
add
xchg
cmp
je
or
inc
call
clc
xor
push
xor
rorl
scas
cmp
and
dec
subl
test
pop
cmp
scas
clc
pushl
adc
push
inc
pop
add
xor
ret
pop
and
xlat
inc
add
push
neg
push
mov
dec
addb
fdivrs
mov
sbb
adc
mov
inc
add
or
xor
filds
decb
enter
pop
mov
mov
aad
pop
or
mov
cmp
scas
mov
ss
aas
js
aad
jno
xor
aaa
push
outsl
push
sbb
xor
rorl
rol
xor
repnz
push
enter
mov
data16
xchg
push
pop
fsts
pop
sbb
push
xchg
mov
in
add
mov
pusha
xor
mov
or
push
dec
data16
pop
xchg
push
nop
xchg
mov
sahf
mov
cli
cmp
loopne
pop
mov
mov
test
jo
outsl
dec
sub
outsb
push
imul
mov
jbe
push
pop
nop
push
lret
or
and
les
and
out
mov
or
xchg
xor
push
cli
jg
xchg
add
dec
mov
dec
add
aad
pusha
scas
sbb
sub
ret
push
push
pusha
shll
add
mov
insb
jnp
stos
fdiv
cwtl
mov
repnz
add
popa
jp
push
call
insb
dec
lret
xor
inc
js
mov
jns
mov
repnz
lock
sub
jno
inc
fwait
lods
and
loope
and
fnstcw
pop
sarb
xor
imul
out
mov
or
dec
jno
imul
jge
enter
adc
sti
mov
push
loop
mov
loope
adc
cli
dec
adc
imul
dec
in
cli
mov
cmpsl
or
imul
out
test
enter
js
mov
jg
loope
mov
xchg
dec
sub
dec
push
inc
mov
jbe
rorb
xor
add
cmpsb
popl
lods
cmp
rcll
add
jno
dec
pop
or
add
xlat
sbb
movsl
add
arpl
xchg
push
dec
pop
dec
push
jmp
mov
adc
mov
cld
push
sub
sub
out
enter
push
mov
inc
lret
mov
jne
sub
imul
push
fists
dec
push
xor
jbe
out
or
outsl
mov
mov
fsubrs
lahf
cmp
push
inc
popa
sub
pusha
testl
addr16
xor
out
je
push
xchg
ja
and
mov
outsb
sub
xchg
out
ja
push
insl
inc
jmp
mov
lock
pop
push
jge
fcmovne
psubsb
adc
jno
ss
lds
sbb
stos
faddp
repnz
les
push
push
pop
jo
call
jle
dec
arpl
cmp
fs
fs
jge
ret
ret
mov
jne
loop
xorl
loope
insb
testb
inc
inc
pop
add
aaa
xor
shr
inc
jns
adcl
pop
aam
mov
push
test
fldenv
push
jb
ss
add
sbb
xor
addr16
xchg
subl
mov
xchg
inc
jo
mov
or
xor
shl
aam
movsl
inc
pop
jmp
or
push
push
xor
bound
jb
ret
dec
in
pop
add
fsubs
mov
lcall
fnstsw
cld
xchg
iret
add
xchg
cmc
sbb
loop
hlt
rcrb
or
xchg
ret
pop
sbb
outsb
inc
lock
push
pop
stc
pop
testb
subb
out
cmpb
and
pop
mov
mov
add
mov
mov
or
call
dec
pop
inc
and
jg
loopne
les
insb
in
push
pop
test
testl
ljmp
andl
ficoml
insb
roll
mov
adc
inc
and
cmc
addl
ds
add
xor
cwtl
mov
sub
and
and
insl
add
sub
and
sub
sbb
leave
push
mov
mov
icebp
loope
pop
cmpb
xor
les
pop
xor
faddl
jg
adc
or
shlb
stos
xchg
in
test
inc
push
jp
fdivl
clc
fimull
push
loopne
frstpm(287
clc
daa
mov
popa
pop
imul
lock
pusha
dec
clc
cmp
imul
push
pusha
inc
test
add
test
mov
lcall
fsubrs
mov
adc
jle
mov
jl
cld
mov
xor
push
imul
jle
je
popf
orb
xor
jle
and
sarb
loop
ja
je
or
lods
loopne
sti
pop
iret
pop
dec
mov
sub
pop
subb
jmp
xchg
push
fcoms
add
add
cmp
sbb
jmp
and
or
mov
mov
push
mov
sub
inc
push
outsb
mov
sahf
loopne
push
dec
sub
adc
nop
mov
add
sub
inc
xchg
pop
cld
fisubrl
sbb
cmp
rolb
loopne
jp
inc
in
pop
and
sub
cmpsb
out
pushf
test
cmp
push
jno
pusha
test
call
rcll
aam
orb
dec
jnp
dec
cwtl
and
gs
mov
ljmp
sub
jmp
arpl
lock
std
bsf
dec
inc
sarl
pop
cmp
imul
mov
in
gs
out
or
inc
scas
fwait
mov
mulb
icebp
pop
adc
pop
hlt
pop
dec
or
dec
xor
push
mov
std
fstl
push
mov
cmp
push
das
xor
mov
test
rcrb
mov
leave
mov
inc
mov
incb
sbb
ss
popf
roll
rolb
push
out
push
out
dec
pop
push
cmpsb
dec
call
pop
jae
sahf
sub
std
mov
xor
sar
xor
mov
scas
dec
test
mov
xor
push
mov
and
and
insl
adc
add
enter
lcall
cmp
call
jle
add
stc
jo
and
aas
popa
ja
cmp
aam
psrlw
shlb
cmpsb
add
jo
mov
scas
inc
mov
fidivrs
mov
mov
in
adc
in
pushf
mov
ss
and
cmp
hlt
mov
fildl
mov
mov
bound
add
test
aas
push
aad
cltd
sub
cmpb
cmp
cmpsl
out
mov
add
push
cmp
aaa
pop
dec
clc
in
xor
cwtl
scas
jno
or
adcl
mov
testb
cmp
xor
cmpb
enter
cli
mov
mov
movsl
rol
push
mov
clc
inc
and
and
hlt
movsb
mov
push
pop
pop
fwait
out
mov
inc
mov
sbb
lret
leave
fidivs
jo
push
outsl
pop
jle
push
cmp
mov
or
add
cmp
push
ret
orl
imul
cmp
add
lret
das
xor
or
outsb
push
pop
inc
pop
mov
fists
adc
inc
enter
aas
cmp
dec
aam
dec
imul
int
mov
cmpb
sub
jnp
cmp
xor
add
inc
jb
sbb
adcb
mov
orb
pop
xor
add
jmp
arpl
xor
in
daa
xchg
pushf
inc
clc
mov
lcall
jae
lods
in
mov
sbb
insl
data16
lods
dec
xor
jp
mov
mov
jbe
test
insl
dec
xchg
pop
cmp
jge
add
cmp
les
cli
inc
xchg
notl
adc
bswap
rcl
jbe
in
mov
cmp
sar
jl
inc
push
testb
daa
xor
xchg
or
scas
scas
pop
shlb
mov
dec
xchg
cmpsb
pop
push
rcl
add
and
mov
sbb
cmpsb
xchg
movsl
outsl
jecxz
push
jmp
pop
jne
sahf
sbb
xor
jne
add
pop
std
imulb
xor
cs
jge
jg
sbb
push
jle
dec
cmpsl
shrl
dec
jle
ret
inc
cmpsb
dec
push
mov
adc
push
cmpb
idivl
push
mov
xchg
jbe
int3
lret
inc
add
idivb
in
addr16
scas
jg
sub
data16
js
or
iret
mov
sbb
lcall
push
inc
sarl
xchg
sti
xchg
and
imul
or
icebp
lcall
hlt
sub
add
test
and
sbb
inc
mov
movsb
test
mov
push
or
xchg
dec
aas
addb
dec
pushf
add
dec
jle
test
mov
pop
mov
and
lods
pusha
push
pop
cld
fwait
sub
fistps
cmpsb
notb
out
insb
push
xor
fisubl
lahf
mov
ljmp
add
and
mov
adc
imul
cmp
mov
sub
mov
jnp
mov
jb
adc
xor
in
xor
cmpsb
jecxz
push
pop
movsl
iret
fisubrs
cmpl
cmpsl
out
das
push
jns
pop
or
out
enter
inc
les
push
inc
pop
lahf
dec
loope
inc
xchg
cmp
sbb
sbb
sbb
cmp
xor
ja
mov
fidivrs
jle
inc
sbbb
cmpsb
push
push
or
adc
cmp
push
jg
push
nop
mov
mov
sbb
popa
push
shrl
xor
popf
jb
cmp
in
adc
or
mov
inc
push
int3
dec
scas
mov
add
sbb
fdiv
push
push
sbb
test
and
loop
push
fsubrs
cmp
out
pop
orb
or
repnz
shl
das
sbb
out
aam
shl
fwait
or
aad
mov
push
and
aas
daa
sub
sub
xorb
pop
mov
dec
pop
and
jg
popa
add
push
movl
fnstsw
scas
test
ja
mov
push
inc
sub
iret
ja
ja
sub
scas
jbe
pop
jecxz
push
jae
xchg
push
mov
jmp
and
push
movsb
jle
adc
push
ret
loope
push
adc
fidivs
adc
push
adc
outsl
xor
pop
mov
ds
orb
and
les
clc
idivb
orl
scas
push
jp
popa
xchg
mov
or
aas
sub
in
sahf
enter
pusha
sub
jmp
xchg
xchg
std
lahf
int3
in
jp
adc
mov
or
loop
xor
ljmp
inc
xchg
cmp
pop
pushf
mov
das
xor
cmp
pop
pop
xchg
inc
or
sub
pop
and
mov
mov
or
or
cs
loopne
pop
mov
add
pop
add
jns
imul
xor
pushf
js
imul
das
or
push
testl
pop
inc
sbb
jno
pop
inc
nop
out
xor
mov
cld
mov
jecxz
jo
aaa
push
scas
or
aam
cmpsb
fbstp
jecxz
iret
inc
lods
jl
shrb
cld
push
sarb
jp
cli
flds
movsl
stos
aaa
add
and
aas
mov
testl
xor
dec
sub
in
push
dec
cmp
iret
cmpsb
lods
mov
hlt
adc
and
jo
cmpsl
sub
fwait
cmpsb
mov
ss
push
mov
loop
lahf
es
pop
sbb
adc
stos
imul
xchg
lea
sbb
mov
and
sbb
sub
lods
pusha
lods
inc
aam
fsubr
int
fimuls
clc
cmpsb
xor
sbb
lcall
movsb
pop
mov
adc
rolb
adc
mov
jmp
pop
outsb
xchg
fsubrl
test
and
hlt
cli
push
mov
push
imul
fcmovnb
std
and
scas
sub
or
cs
fwait
dec
test
pusha
sbb
movsb
mov
xor
cmp
les
add
repz
aam
je
inc
xchg
dec
sbb
jbe
call
sbb
adc
and
dec
and
mov
jb
jmp
lock
icebp
sahf
repnz
iret
mov
pop
xor
and
xchg
outsl
and
jbe
jo
inc
fidivrl
in
jp
insb
push
mov
ljmp
jl
or
push
cmp
cmp
sbb
adcl
push
xor
mov
aas
or
inc
aas
add
push
xor
sbb
jne
mov
pop
pop
jg
call
hlt
adc
pop
rcrl
cmpsb
pop
xorps
shll
add
sahf
lret
pushf
jnp
cmp
ljmp
push
call
mov
mov
push
sub
adc
je
mov
js
sahf
pop
dec
push
or
push
ss
cmpsb
out
xchg
xchg
jno
nop
dec
aam
pop
xor
cmc
popf
mov
data16
loope
pop
push
ljmp
mov
mov
inc
push
lcall
call
pop
or
mov
mov
stos
dec
rcl
ljmp
clc
ret
sbb
hlt
add
lds
adc
call
xchg
pop
js
cli
xchg
shlb
lret
out
arpl
clc
leave
pop
int3
push
in
jp
add
or
add
push
push
push
or
stos
or
cmp
mov
loope
inc
imul
out
cs
sub
arpl
pop
shlb
jb
stos
sbb
mov
int
ret
jbe
jp
xor
xor
ret
mov
std
inc
es
jae
fs
ret
adc
mov
mov
xor
or
sbb
sbb
sub
fdiv
loope
js
inc
push
pop
testb
ret
mov
fsts
adc
xchg
mov
outsl
jle
xor
aas
ljmp
loopne
inc
jno
inc
nop
mov
mov
pop
mov
movd
test
pop
inc
xchg
andb
adc
mov
pop
insl
cmp
xchg
jge
popf
xchg
adc
testb
nop
cmp
fisubrl
cmpsb
cmpsb
call
inc
inc
adc
mov
cmp
cmp
int
andb
and
call
mov
jno
pushf
fdivrp
jmp
bound
aam
sbb
and
jmp
fwait
mov
mov
cmpsl
sbb
cmpsl
or
adc
inc
aas
lock
scas
stos
and
cmpsb
andb
dec
bound
sub
adc
fs
and
decl
hlt
ss
jo
lea
rcll
pop
cmp
lcall
icebp
lret
loope
or
adc
out
shrl
cld
sbb
loopne
shlb
fadds
xchg
xor
cmp
jg
mov
mov
fimull
push
scas
and
mov
jno
cmp
movl
jb
jb
and
xchg
adc
mov
subl
shll
cs
mov
lret
dec
pop
rcrl
stos
incb
adc
int3
jb
gs
xor
cs
insb
mov
inc
xor
dec
dec
push
insb
push
gs
dec
jb,pt
popa
ja
shrl
cld
arpl
outsl
jns
inc
dec
dec
push
inc
ss
mov
ss
xor
inc
jbe
js
imul
mov
inc
pop
inc
adc
jae
push
rcr
push
movsb
cli
popaw
ss
jae
xchg
jg
cmpl
and
dec
test
sahf
scas
repz
adc
or
andl
cli
ficomps
jo
sbb
jge
mov
les
pop
and
mov
arpl
loopne
lcall
ss
mov
rcrl
test
mov
push
sbb
pop
icebp
pushl
and
pop
sbb
aas
xchg
jmp
mov
cmpsl
loopne
mov
jg
dec
daa
test
mov
arpl
lahf
insl
and
sub
stos
addr16
jmp
test
xor
xchg
cld
mov
adc
loop
arpl
jg
popf
jae
decl
in
push
push
pop
mov
loop
and
rclb
lcall
lcall
and
lds
mov
popf
in
inc
push
add
lcall
mov
add
sbb
mov
ds
pop
mov
in
jge
punpckhwd
ljmp
ljmp
mov
cmp
repnz
dec
cmpsl
mov
adc
in
jmp
inc
mov
dec
sbb
dec
mov
pop
mov
mov
jle
leave
push
loopne
call
dec
push
movsb
jbe
js
incl
aad
vmread
mov
leave
sbb
cmp
mov
cs
ljmp
pop
mov
or
sub
cmp
push
scas
pop
lcall
lcall
and
pusha
into
fcompl
adc
cmp
push
xchg
pusha
addr16
mov
pushl
ds
out
test
cmp
cld
push
out
fs
xchg
push
sbb
mov
das
inc
loop
ljmp
clc
dec
xchg
in
shl
cmp
mov
mov
cmp
xor
lcall
push
lods
mov
stc
loopne
sbb
cmpl
in
sub
clc
lcall
paddusb
pcmpgtb
shrl
insb
mov
in
in
dec
sub
mov
decl
sub
jge
jae
leave
pop
nop
jmp
negb
or
pusha
xchg
call
mov
jge
or
ficomps
jl
or
fsubrs
clc
inc
movsb
stc
dec
movsl
orl
insb
les
jno
daa
adc
xorb
sub
add
ljmp
and
pushf
mov
in
sub
std
push
call
mov
lcall
and
lock
clc
jmp
mov
fdivr
jg
outsl
xor
cmpsb
push
mov
imul
adc
jle
xor
rorl
jmp
mov
xor
int3
push
lods
and
sub
jge
push
das
cli
stc
repnz
stos
out
es
jl
mov
rorb
ss
push
pop
mov
movsb
sar
jno
mov
cmp
jecxz
jp
lods
aam
das
inc
arpl
jno
and
enter
mov
dec
fwait
hlt
pop
pop
or
aad
enter
jmp
in
mov
andl
adc
xchg
incl
shrb
into
fucomip
xor
stc
push
scas
push
enter
xlat
add
addb
push
idiv
pop
hlt
jg
movsl
cld
rclb
add
cmp
dec
lds
std
pushl
inc
mov
pusha
adc
ret
pushf
or
lret
mov
out
pop
add
mov
outsb
cli
filds
ja
inc
cwtl
lock
call
jl
mov
movsl
rcl
push
inc
mov
sbb
jle
pop
mov
jl
mov
rclb
rcrb
cwtl
jo
mov
mov
pop
inc
jmp
dec
push
push
in
pop
loop
fidivs
int3
stos
sub
movsl
or
mov
pushl
lock
sub
inc
xchg
out
scas
push
xor
mov
addr16
es
mov
incl
push
xchg
inc
xor
dec
dec
push
adc
inc
jmp
adc
jl
bound
fwait
ljmp
bound
mov
inc
aad
sub
dec
sti
dec
movsb
dec
loopne
sbb
pop
add
aad
jg
jnp
gs
ja
xchg
cmpsl
jmp
or
je
jnp
and
das
xchg
mov
mov
lcall
dec
imul
pusha
mov
push
in
pop
outsl
lret
jl
aas
pushf
hlt
sahf
outsl
push
std
scas
push
ret
mov
adc
mov
adc
lret
cwtl
ljmp
inc
inc
xchg
call
movsb
out
scas
shrl
xchg
ljmp
pop
lcall
mov
dec
mov
imul
and
jg
outsb
cld
push
repz
xchg
ss
shrb
pushl
and
sbb
xchg
and
das
mov
aas
pusha
movsb
push
out
mulb
mov
fcoms
fsubrl
jle
pop
lock
xor
pusha
mov
pop
mov
addb
repz
ljmp
jbe
push
es
push
sbb
xchg
jb
sahf
mov
decl
mov
adc
outsb
cmp
sahf
idiv
call
rol
mov
arpl
popw
lods
mov
insb
pop
cli
daa
testb
pop
incl
imul
shrl
lock
pushf
dec
shrl
inc
sbb
mov
ljmp
enter
in
and
inc
icebp
clc
mov
push
cli
sbb
sbb
call
cld
aaa
fisubrs
fstl
cltd
xor
push
add
jbe
ljmp
clc
mov
fnsave
out
sbb
inc
mov
pop
fildll
repnz
mov
loopne
mov
sub
cmp
jl
pop
ljmp
repnz
ljmp
shrb
or
push
lahf
testl
jo
sub
shlb
jp
inc
pop
mov
movsb
mov
lods
add
imul
fdivrl
clc
jmp
pop
in
cmp
dec
xor
stos
push
pop
lds
insl
es
call
add
ds
jo
pop
int3
push
cmp
xlat
sub
pushl
outsl
mov
mov
jb
fidivs
push
add
cli
test
jo
iret
stos
cltd
out
dec
sub
andl
pop
ror
inc
gs
data16
aaa
pusha
jne
ljmp
aas
or
push
lds
pop
lock
std
lret
test
push
stos
mov
add
outsb
outsb
pop
xor
mov
xor
ljmp
mov
int3
mov
jecxz
imul
test
mov
std
pushf
in
fwait
sub
mov
jbe
cltd
stos
addr16
or
fldt
test
push
cmpsb
jmp
cltd
jge
mov
pushl
fwait
sahf
lock
adc
or
in
inc
sahf
adcb
std
mov
push
mov
js
cmp
xchg
xor
ljmp
xchg
gs
push
cmp
loopne
fcomip
iret
icebp
add
mov
dec
cli
decl
mov
repnz
ds
out
sub
jecxz
incl
cld
outsl
out
rolb
lds
jl
mov
add
test
adc
call
arpl
jbe
lods
std
fdivl
mov
rolb
stos
or
testl
decl
mov
pop
jp
cmp
jae
inc
outsb
lock
sub
rcl
rcl
in
aad
mov
call
mov
and
push
stos
add
or
addr16
fisubl
jp
push
imul
aas
cltd
ljmp
sbb
mov
je
arpl
xchg
call
push
push
add
mov
jae
out
rcrl
loop
add
shrb
sbb
js
ds
sbb
push
and
inc
hlt
push
decl
fsubs
fistps
jnp
ja
push
divl
xchg
add
pop
mov
dec
dec
or
xor
mov
xchg
pop
mov
decl
sub
mov
repz
pop
add
cmp
mov
or
fdivs
mov
js
insb
push
mov
mov
mov
jg
call
and
mov
or
movsb
outsb
outsl
or
inc
sbb
rcll
dec
mov
push
or
test
or
cli
push
pop
xor
nop
push
jbe
jl
scas
push
jne
loopne
outsl
fcomip
lcall
sub
idivb
xchg
in
inc
outsl
adcb
sbb
mov
mov
in
xchg
xchg
imul
pop
xor
ror
mov
sbb
mov
cmpsl
sbb
rolb
sub
into
shrb
outsl
fistpll
push
outsl
or
xor
test
and
dec
push
lcall
ret
mov
jne
adc
or
cmpsl
inc
mov
lock
inc
cli
insl
add
arpl
push
enter
or
pop
pop
insl
push
popf
jecxz
test
add
and
testl
mov
jns
pushl
rol
icebp
sti
rcll
sub
push
xor
icebp
fistpll
adc
cwtl
sub
pop
dec
es
xor
cld
push
scas
pop
jg
in
sti
lds
stc
pushf
fs
loop
repz
pop
js
push
xchg
push
sub
jle
push
sbb
jmp
add
pop
or
cmc
rcrb
aas
mov
jg
add
mov
mov
outsl
sub
mov
sub
incl
ljmp
add
jp
int3
and
mov
jl
dec
cmp
in
inc
adc
sahf
xchg
sub
popf
clc
xchg
in
jg
lcall
cmp
ljmp
outsb
jb
aaa
fcmovbe
cmc
xchg
repz
push
imul
stos
mov
cmpsl
push
sub
fiaddl
out
inc
jno
xlat
lcall
pop
jno
in
lods
and
enter
inc
cmpsb
fwait
mov
mov
dec
in
insb
les
mov
sbb
aad
push
int3
movsb
mov
pop
aas
into
dec
sub
mov
pop
sbb
andl
cld
outsl
dec
mov
js
mov
test
das
cli
cmp
xor
inc
pop
xchg
aad
mov
int
and
jno
in
xchg
xor
rolb
pop
cmp
icebp
dec
or
push
sbb
les
loopne
fcoms
loopne
clc
scas
iret
call
and
imul
lret
mov
add
in
push
jge
xchg
lods
sbb
shll
cld
call
std
outsl
mov
dec
xor
les
sbb
mov
add
cmp
movsl
mov
filds
inc
xor
leave
pop
dec
xor
push
stos
xchg
sbb
pop
icebp
sbb
aas
jmp
xor
repz
sub
push
jg
mov
sbb
fnstenv
push
mov
lahf
negl
hlt
decl
jp
cmc
out
adc
ss
shll
repnz
sti
push
loope
adc
rorb
push
lcall
mov
mov
fstps
movsb
fldcw
test
push
notb
shrl
inc
lcall
insl
sarl
push
in
testb
movsl
out
sti
or
mov
push
addr16
sub
inc
repz
aam
mov
ljmp
cli
mov
cmp
inc
mov
mov
hlt
mov
jo
mov
popf
mov
and
add
jl
or
jg
pop
fadds
jp
inc
cmp
mov
mov
or
push
imul
icebp
addr16
inc
mov
in
fcomps
iret
loop
in
test
sub
daa
add
jne
push
std
jmp
xchg
out
shl
adc
jno
cmp
lret
jp
in
mov
arpl
imulb
pop
xor
testb
int
or
pop
std
jmp
out
sahf
jnp
scas
inc
xchg
add
jne
pop
insl
enter
dec
adcb
cld
xchg
icebp
dec
mov
mov
decb
fwait
cmp
jb
xor
jmp
sub
rclb
mov
adc
push
dec
mov
xor
push
in
inc
dec
rorb
push
push
lret
cs
outsb
mov
inc
jmp
inc
imull
ljmp
pop
popa
daa
daa
xor
mov
bound
jno
inc
push
push
sub
les
sub
cwtl
daa
loope
sbb
inc
rorl
pop
std
incl
outsb
std
xadd
mov
pop
into
rcll
ljmp
jg
mov
jno
andl
xlat
or
push
repz
scas
pop
xchg
jp
mov
rolb
add
daa
and
xchg
inc
sarl
mov
sub
pusha
jnp
or
lret
push
adc
pushf
xor
lock
scas
out
lds
mov
sub
insb
add
lds
jge
pop
mov
movsl
stc
adc
pop
hlt
jae
push
sbb
sub
jmp
lods
adc
shll
js
fisubrs
sub
lea
adc
leave
jbe
call
adc
xchg
out
mov
sub
add
mov
in
pop
adc
and
and
mov
cmp
iret
xchg
fwait
push
nop
pop
dec
mov
dec
cmpsl
or
dec
shrl
jmp
dec
jmp
loopne
inc
mov
cmp
mov
add
jo
fbld
sahf
call
cld
mov
test
mov
pop
mov
jbe
mov
rorl
xorb
cld
sbbl
xor
stos
insb
mov
cltd
repnz
jg
jmp
push
add
pop
mov
push
sbb
jg
repnz
ljmp
lds
ljmp
cmp
and
cmc
inc
xor
icebp
pop
pop
hlt
mov
ja
stos
mov
jmp
pop
fwait
pop
jle
sbb
cmp
test
fcoml
or
out
jbe
outsl
js
lods
xchg
adc
shll
ret
sbb
push
xchg
stos
pop
mov
clc
pop
jg
das
inc
arpl
jge
mov
dec
pushf
hlt
pop
push
popf
movsl
xchg
test
lahf
mov
or
cli
dec
sub
call
in
push
stos
in
scas
mov
insl
ret
and
in
mov
pop
inc
pusha
int
xchg
push
scas
or
inc
aam
ja
jg
in
mov
cmp
jns
lods
cld
xchg
jp
rcr
or
movl
loop
pushl
jle
movsb
cld
stos
jne
in
mov
imul
cli
pop
push
incl
push
push
lahf
loope
fwait
outsb
push
adc
jp
jmp
push
mov
rorl
xchg
xchg
in
gs
mov
mov
imul
stos
ljmp
adc
adc
pop
adcl
and
and
sar
ficoms
nop
rcl
in
test
loop
mov
jne
ljmp
fadds
sub
pop
mov
hlt
sub
mov
imul
sbb
int
out
in
mov
inc
add
xchg
fcmovne
fs
sar
pop
loopne
add
push
aaa
addr16
loopne
mov
or
mov
add
cli
mov
outsl
andl
pop
jne
ljmp
or
mov
inc
xor
movsb
std
push
and
sub
jne
js
cs
dec
jno
jmp
nop
mov
cmp
pop
mov
das
xorl
mov
jl
cmp
push
decl
pusha
mov
ret
clc
dec
mov
xor
pop
popf
push
cmp
mov
subl
add
or
pop
jmp
lods
add
push
cld
ljmp
test
jno
mov
adc
pop
or
lcall
cli
push
lcall
cli
out
push
stos
nop
mov
sbb
and
es
sbb
jmp
inc
loopne
clc
jo
incl
and
add
mov
test
pop
mov
lcall
decl
sbb
xchg
cmpb
xchg
repz
fnstcw
leave
call
inc
cmc
adc
push
mov
xor
xchg
in
mov
test
sahf
in
andb
sarb
inc
pop
mov
icebp
jg
incb
call
push
or
cmp
jb
loop
enter
fists
out
pusha
mov
iret
les
cmp
adc
ljmp
mov
sub
dec
mov
ret
ret
and
addl
sub
mov
cwtl
pop
out
icebp
inc
mov
mov
fdivs
into
and
bound
jns
popa
jae
add
das
xchg
pusha
jb
jne
insb
inc
insb
insb
outsl
outsl
mulb
jbe
push
insb
insl
data16
cmp
add
jo
jmp
outsb
gs
aaa
insb
imul
mov
and
add
cmp
pop
inc
ljmp
add
je
outsl
fs
gs
imul
out
insl
gs
daa
push
jns
je
insl
inc
gs
xor
dec
inc
dec
inc
sub
in
ljmp
fs
imul
sbb
gs
js
mov
inc
push
inc
sub
insl
jo
gs
je
imul
dec
push
arpl
and
mov
jle
push
jb
arpl
jae
fs
outsl
push
push
imul
pop
sti
fsubl
sbb
push
push
int
faddl
test
pushf
test
push
sub
jnp
fisubl
cmc
sbb
push
imul
add
jns
jne
outsb
xor
pushl
fistl
dec
jo
sbb
push
imul
imul
outsl
iret
imul
ret
outsb
adc
xlat
dec
popa
mov
inc
dec
fs
popa
cwtl
fiadds
fsubrs
and
or
lahf
sahf
dec
add
imul
inc
fldcw
xchg
cltd
inc
push
imul
outsb
dec
pop
std
inc
fs
jne
lahf
mov
ret
push
imul
mov
cmp
pop
push
dec
arpl
jne
je
mov
and
popa
addr16
pop
lock
call
imul
imul
cmpsb
jl
dec
sub
push
iret
and
pop
insl
sbb
sahf
pusha
mov
dec
mov
and
cmp
in
push
add
lods
adc
lret
sub
adc
sbb
add
bound
lret
pusha
ds
push
push
js
pop
dec
outsl
cmp
jns
arpl
and
pop
testb
faddl
pop
or
pop
push
xchg
sub
loope
enter
jb
jns
ret
inc
jb
push
aaa
pop
outsl
movsl
jns
imul
lods
sub
push
jne
jns
push
jne
fisttps
lock
sbb
lock
pop
pop
push
add
and
and
or
in
lock
mov
mov
mov
jp
sub
or
sidtl
es
outsl
out
sbb
ds
push
adc
in
push
mov
scas
sti
jnp
pop
add
sbb
push
mov
sub
adc
or
mov
or
add
ss
or
inc
outsb
loopne
sub
and
cmp
or
sti
and
int3
je
ja
iret
neg
inc
or
add
add
mov
cs
and
dec
es
mov
rcrb
jo
in
sahf
adc
add
repnz
pusha
dec
add
fsub
ja
inc
aaa
pusha
add
scas
arpl
or
dec
xchg
and
add
test
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
