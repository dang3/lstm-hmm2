call
in
sub
push
lea
push
add
push
pushl
push
push
in
outsb
insb
imul
mov
add
sti
ja
jg
jbe
inc
inc
inc
sub
pop
dec
mov
mov
sahf
leave
add
jmp
jbe
ja
add
adc
mov
sub
frstpm(287
push
add
dec
and
imull
movl
dec
adc
add
jmp
add
stc
adc
sub
sbb
mov
dec
add
jbe
cld
fsubrs
sub
mov
divb
cmp
repnz
mov
loopne
jno
jne
push
or
lea
push
push
in
cmc
mov
mov
insb
andl
in
aaa
dec
add
pop
push
in
xor
cmp
xchg
filds
hlt
push
cld
popa
lods
pop
xor
jge
cmp
inc
mov
push
push
or
mov
add
add
dec
hlt
push
push
mov
push
ret
cld
sbbb
mov
add
sub
test
push
sti
pop
test
jo
adc
mov
fs
cmpsb
or
je
fcompl
outsb
ret
ja
arpl
mov
push
loope
into
xchg
shrl
je
dec
je
jne
push
outsb
jns
in
pop
xor
push
sbb
aaa
push
and
cmp
iret
adc
sub
mov
mov
sub
inc
inc
mov
testl
dec
enter
mov
outsb
mov
fldt
dec
loopne
pop
mov
push
in
add
lea
or
sbb
aas
dec
js
outsl
fstpt
add
xchg
out
ss
pop
popa
sub
fwait
push
out
jg
inc
push
jns
xor
ret
dec
xor
outsl
add
arpl
insb
add
cmpsb
repz
inc
fcoms
jg
jle
lret
in
popa
outsl
loope
fistpll
mov
push
push
and
outsl
fcompl
mov
add
lahf
xlat
lods
cmc
push
mov
dec
icebp
push
inc
pop
shlb
lock
outsb
cmpsl
popl
cwtl
inc
test
sbb
push
add
xor
push
xchg
push
push
insl
aaa
outsl
ja
popa
sbb
iret
out
push
jns
adc
mulb
pop
pop
and
into
gs
out
mov
addb
dec
adc
repnz
mov
add
das
add
cld
jp
push
jns
cmp
cmpsl
rorl
add
fsubs
mov
and
xchg
dec
jb
jae
ljmp
ss
adc
addl
fildll
jge
add
add
add
cvtpi2ps
add
lods
outsb
mov
arpl
or
pop
mov
mov
or
add
add
adc
fidivrl
out
ficompl
sbb
add
clc
add
jbe
pop
fiadds
cmp
mov
ss
daa
push
adc
adc
cmp
cld
in
divl
lock
add
inc
rolb
mov
xchg
sbb
jo
jge
jae
out
add
mov
mov
add
scas
add
rclb
ret
jg
jg
cmp
mov
loope
testl
jg
jge
push
andb
in
add
inc
lds
pushl
or
dec
add
add
jnp
sbb
add
push
int
mov
sub
call
xor
int
addr16
lock
call
mov
in
out
cld
cmp
or
add
mov
cmp
adc
ret
add
mov
adc
sbb
inc
pop
addl
sub
sbb
bswap
stos
add
sub
add
mov
mov
testb
add
stc
or
scas
push
xor
outsl
out
jnp
cmp
inc
aam
shlb
sbb
mov
or
cmc
mov
and
cs
call
mov
xor
add
dec
das
cmp
pop
into
xor
dec
incb
test
adc
ja
loope
add
or
adc
cli
mov
push
decb
push
rcrl
inc
lahf
scas
mov
shlb
inc
int
or
and
addr16
aaa
lahf
dec
xor
pop
adc
lds
push
dec
cld
jg
add
jle
mov
jl
btc
and
data16
xchg
jg
lock
int3
sbbl
cltd
js
mov
out
data16
xchg
in
mov
hlt
insl
xor
xchg
repz
daa
inc
enter
cmp
pusha
pop
cmpsb
outsb
sbb
jnp
push
insb
leave
cwtl
aas
push
jmp
mov
push
scas
mov
lcall
push
xchg
push
fsubrl
mov
xchg
push
popf
jno
xchg
sbb
inc
fistpl
lea
cmp
shlw
ss
call
adc
mov
lcall
add
and
cmpsb
inc
and
lods
sarl
aad
add
mov
adc
adc
or
mov
loop
dec
int
idivl
cmp
cmpsb
or
add
add
jmp
push
jb
xor
lcall
cmp
in
pop
jnp
or
inc
adc
xchg
test
movsl
push
xchg
insl
shll
imul
outsl
mov
popa
mov
fcoml
sbb
scas
sti
and
pusha
sbb
shll
mov
fmull
mov
adc
lods
sti
ja
push
repz
mov
or
jmp
shll
repz
add
ret
cmp
or
rcrb
push
movsl
es
jle
add
add
arpl
or
mov
or
arpl
jecxz
aas
pop
sbb
movsl
int
ret
or
xchg
insb
das
sbb
scas
arpl
adc
xchg
sahf
push
int
mov
push
lock
lahf
cmc
stc
hlt
cmpsl
test
pushf
add
and
fsubl
mov
push
add
les
cmp
mov
call
xchg
cmpsb
pop
adc
fmul
and
sub
xchg
in
sub
add
inc
jle
add
je
sbb
dec
pop
clc
or
cmp
sub
dec
ss
mov
push
ja
jbe
addb
scas
push
popa
arpl
enter
push
sbb
lock
jle
dec
xchg
das
lock
jb
hlt
daa
mov
mov
xchg
in
ret
lea
mov
out
mov
bound
adc
pop
push
push
or
mov
push
add
inc
clc
pop
inc
or
lret
aaa
imul
test
inc
dec
dec
popf
push
mov
mov
push
test
push
dec
test
fwait
sahf
std
pushf
and
subl
add
add
mov
jne
bound
mov
dec
lods
lods
xor
xchg
adc
rol
cmp
cltd
dec
mov
ret
in
and
sub
mov
loopne
mov
mov
into
pop
jns
adc
xor
sti
test
orb
cmc
and
lea
mov
mov
clc
jae
aas
adc
xchg
mov
outsl
cltd
sbbl
insl
clc
and
shrb
push
adc
dec
dec
sbb
fstps
add
outsl
out
shrl
add
push
mov
rclb
jp
rcrb
inc
fisttps
adc
push
xor
notb
clc
das
lret
leave
nop
or
xor
testb
adc
int
fwait
outsl
lock
test
mov
mov
dec
mov
sbb
bound
lcall
add
inc
cltd
imul
xor
pop
jle,pn
loop
idivb
xchg
mov
add
ja
stos
std
adc
pop
les
out
push
mov
and
decl
insb
sbb
rolb
in
daa
jge
pusha
sbb
jle
pusha
ffreep
out
jecxz
leave
mov
adc
xchg
leave
inc
add
jmp
fcomi
sub
pop
mov
stos
mov
int3
push
pop
daa
jle
pop
or
subb
or
das
int
push
mov
push
xor
cmpsl
pop
dec
outsb
mov
cwtl
mov
sbb
ss
loope
test
incl
cs
fidivl
subb
push
jno
inc
fwait
cmp
in
jae
hlt
push
mov
test
sbb
loope
xor
mov
fisttps
mov
fmuls
nop
aaa
xor
add
and
push
mov
fdivs
push
adc
ds
shlb
xor
mov
add
mov
jns,pn
xchg
and
rcll
xchg
xlat
mov
pop
clc
lcall
imul
jb
ljmp
outsb
in
inc
lahf
and
jbe
out
sub
jnp
xor
test
inc
ds
and
addl
test
aaa
jbe
pop
insl
cld
mov
lcall
loope
in
mov
mov
fmul
dec
xchg
sbb
cmp
in
fnsave
sbb
in
sub
or
int3
cmp
fistpl
rorl
lods
es
sub
addr16
inc
int3
test
arpl
mov
mov
adc
es
dec
cmp
inc
fiaddl
movsb
imul
shlb
add
and
sub
fcmovne
or
inc
mov
mov
aam
pop
pop
pop
clc
jmp
inc
fs
outsb
mov
iret
fwait
and
xchg
xor
data16
lcall
roll
arpl
movsl
cs
cmp
testl
movl
int
mov
jbe
sarb
mov
cmp
das
test
in
pop
jns
cld
push
sub
dec
xor
xor
ret
cmpsb
push
mov
test
lea
frstor
jg
stos
sub
cwtl
jb
inc
pop
cmp
push
lcall
cmp
dec
iret
aaa
adc
rclb
cmp
and
xor
in
mov
cld
cmp
lock
sbb
pop
pop
jp
loopne
es
stc
lods
adc
out
add
cmpsb
xor
adc
cld
in
xchg
jae
out
popa
push
jnp
jbe,pt
fisubrl
cmpsb
inc
sbb
mov
loope
pop
icebp
pop
arpl
roll
mov
or
mov
xchg
ss
imul
jge
lods
sub
cs
jecxz
das
push
mov
fdivrl
mov
cmp
sbb
cli
adc
and
jp
pop
jne
js
pop
aas
and
or
movb
fisubrs
adc
dec
sub
inc
shl
mov
pusha
add
xor
dec
test
mov
stos
mov
jmp
dec
sbb
or
pop
outsl
pop
jecxz
sahf
sahf
ds
xchg
and
mov
or
fildl
add
pop
jmp
testl
inc
stos
loope
push
and
scas
jge
dec
pop
gs
mov
out
cmp
sbb
loopne
icebp
testb
push
arpl
fstl
pop
stos
jb
test
jl
or
gs
sbb
je
cltd
fimuls
lock
idiv
xor
and
cmpsl
daa
jge
jmp
xor
aas
cmpsb
iret
arpl
rcl
sbb
and
repz
fs
push
xlat
adc
jns
ficoml
inc
cmp
outsl
jbe
push
repnz
les
add
cwtl
cli
sub
mov
popf
mov
push
icebp
scas
jg
pop
ficoml
adc
mov
mov
call
adc
add
subl
and
lock
xor
mov
hlt
fsts
mov
jge
ja
push
flds
scas
ret
cmp
xor
dec
sbb
push
adc
and
das
stc
ret
or
adc
mov
test
xor
or
sbb
lret
test
sbb
mov
je
and
imul
lods
mov
jns
rcll
int3
dec
mov
sarl
mov
out
loop
jge
cld
push
xchg
jmp
and
mov
xchg
sbb
mov
iret
sbb
mov
inc
dec
rclb
xor
add
std
test
lods
repnz
cmp
adc
push
rcr
lahf
aam
jge
inc
lock
dec
fidivrl
xor
pop
pop
pop
sub
jo
loope
pavgw
popa
and
pusha
xchg
fidivrs
fisubrs
dec
subl
pusha
out
ljmp
jle
nop
outsb
dec
push
in
iret
xchg
mov
cmpxchg
jmp
stos
pop
or
push
dec
loope
mov
flds
dec
pop
imul
adc
lods
push
push
popw
aas
xchg
jle
jg
jp
jno
mov
dec
loopne
pop
lods
test
dec
push
mov
ljmp
jne,pt
mov
lret
aaa
cli
mov
lret
lret
sti
push
test
insb
or
dec
xchg
or
jno
lods
push
or
push
sti
adc
sbb
and
sub
mov
jl
adc
out
jp
jb
outsb
push
outsb
cltd
adc
jne
cmp
cmp
dec
aad
xchg
imul
cmpsl
clc
inc
or
jae
pop
push
jbe
pop
lds
lahf
jne
call
mov
push
inc
dec
cmpb
mov
fs
jecxz
push
xchg
push
rolb
lds
les
shll
sub
mov
arpl
test
ficoms
fdivl
push
pop
pop
adc
lock
add
cmp
lahf
lods
sar
dec
xchg
sbb
rolb
mov
movsl
sub
jl
lea
push
outsl
int3
mov
bswap
cmp
adc
mov
cli
popf
lret
inc
and
sbb
fnstcw
xchg
lret
cmpsb
or
inc
fwait
imul
jns
cmp
mov
adc
and
inc
dec
fnsave
das
das
std
lock
dec
pop
or
outsl
int
loope
mov
lcall
movsb
inc
sub
cmp
sbb
inc
add
sub
mov
add
xchg
repnz
and
iret
xchg
push
test
xor
cmpl
popa
xor
xchg
xorl
loop
dec
mov
popf
test
ja
rolb
aas
popl
imul
xlat
rcl
mov
xchg
inc
popf
cmp
repnz
rol
imul
sbb
add
jb
gs
sarb
inc
stc
js
mov
cld
test
fildll
adc
push
and
test
fcompl
mov
push
outsb
adc
jb
cli
pop
inc
dec
mov
mulb
or
pop
sbb
mov
pusha
xor
mov
cmp
inc
push
xor
and
add
lret
inc
faddl
rcl
mov
sbbb
jo
shll
push
and
rol
es
es
pop
or
xor
sbb
dec
scas
mov
or
xor
mov
scas
movsl
push
cmpb
shlb
aaa
sub
sbb
jnp
out
cltd
dec
in
pop
lret
or
and
jle
cmp
jge
add
or
sub
pop
rcrl
dec
jbe
adcb
xlat
add
sub
int3
ret
xchg
adc
sbbl
push
movsb
out
push
or
fcoml
das
dec
mov
loopne
out
loope
inc
fidivs
cmp
xchg
add
cmp
xor
push
xchg
cld
push
and
cld
push
sbb
int3
fsubr
repz
aas
psubb
ds
sbb
cmp
cmp
clc
notl
jge
and
fnstsw
jecxz
lods
and
mov
loopne
xor
cmp
jnp
pop
xor
jb
and
jo
dec
xchg
dec
outsb
and
movsl
mov
cmp
js
rcrl
and
jb
lods
mov
mov
cltd
shlb
lods
jmp
dec
mov
cs
mov
push
sub
icebp
sub
sbb
sahf
insl
movsb
inc
jecxz
sub
add
pop
cmp
mov
sub
gs
inc
shll
negl
ljmp
fadd
or
mov
pop
jl
xor
inc
cltd
es
sub
dec
sbb
adc
pop
cld
mov
jne
mov
shll
leave
pop
inc
dec
inc
sbb
pop
mov
pop
jno
lret
insb
and
dec
mov
xor
loopne
xor
in
scas
fwait
cmp
ret
shrb
inc
aam
inc
xor
mov
iret
pop
lods
mov
ret
aaa
clc
lcall
pop
inc
inc
cmpsb
xchg
xor
insl
icebp
gs
push
repz
movsl
daa
test
rcll
in
loop
mov
push
push
xchg
clc
mov
adc
loopne
dec
loope
mov
enter
mov
jo
jl
add
ljmp
adc
scas
xchg
or
pop
push
jle
xchg
jp
mov
mov
mov
cwtl
enter
pop
shlb
data16
and
push
pop
scas
add
pop
cltd
cmp
cld
orl
sahf
loop
mov
fiaddl
int3
xorb
unpckhps
arpl
mov
xor
pusha
push
je
out
mov
pop
call
in
push
xchg
pop
jle
cld
fcoml
or
pop
arpl
sbb
sbb
xchg
adc
push
cmpsb
mov
hlt
push
in
fiaddl
push
inc
ret
or
loopne
rcll
dec
sub
push
gs
enter
daa
iret
inc
in
jl
popa
cmp
pusha
fwait
push
shlb
push
nop
fcompl
jmp
lds
stos
cmc
mov
jmp
mov
mov
adc
push
mov
mov
jg
lret
pop
mov
push
outsb
cmpsl
mov
aam
sarb
loope
test
push
nop
icebp
add
sbb
stc
jno
cmp
mov
mov
pop
push
ja
mov
dec
adc
and
js
sub
gs
mov
push
arpl
xor
in
pop
mov
hlt
std
insl
arpl
dec
enter
popf
cld
push
clc
adc
test
inc
mov
call
jecxz
repz
mov
dec
push
pop
adc
fcmovb
pusha
mov
in
call
cmc
shll
repz
popa
addr16
add
xchg
or
mov
scas
std
pandn
and
push
dec
lret
stc
sbb
jmp
mov
data16
stos
push
or
inc
push
pop
sbb
outsl
push
addr16
loopne
xchg
pop
shll
pop
inc
popa
movsl
jmp
push
in
js
fisttpll
mov
push
xchg
loope
mov
shlb
loop
xchg
mov
dec
int
xchg
sbb
jno
lock
cli
and
cli
cmp
inc
dec
sub
cmp
mov
ljmp
test
fcomip
mov
lahf
and
add
popa
js
xor
or
popf
cmp
jg
insl
out
loop
push
add
repz
mov
inc
negb
cmp
lock
xchg
les
addr16
cmc
loop
cmp
inc
add
mov
ja
leave
or
push
push
in
xor
outsl
ja
mov
leave
or
lods
cmc
adc
pop
adc
add
aam
cld
sbb
imull
orb
dec
lea
fimull
mov
int
ja
jae
mov
adc
push
js
xor
jecxz
xlat
test
inc
es
outsl
out
mov
inc
call
loope
sbb
jnp
out
inc
and
adc
movsb
sti
xor
addb
loop
mov
cmp
cmp
cmp
lea
mov
cmp
push
jecxz
sbb
add
mov
or
xchg
nop
adc
dec
cmp
cmpb
orb
jns
push
sub
mov
jbe
mov
mov
pop
push
outsb
and
pop
popa
fistpl
imulb
cmp
xchg
cmp
jp
push
pop
pop
shlb
mov
test
movsl
loop
cld
movl
sub
fbld
jmp
pop
iret
shll
pushf
and
stos
mov
mov
aad
aam
cmpsb
cs
inc
mov
gs
insb
xchg
and
mov
shl
es
test
lea
jmp
aam
loopne
lods
jmp
xchg
push
push
pusha
into
sbb
je
js
jo
mov
inc
out
clc
jecxz
movsl
inc
push
add
add
ds
cmp
imul
fiadds
adc
lret
out
sub
or
test
movsb
mov
loope
or
fisubs
cmpsl
push
mov
aas
in
sub
aaa
rorb
cmp
dec
and
pop
in
mov
movb
mov
xchg
cmp
mov
push
and
xchg
test
push
imul
jbe
inc
xorb
sub
and
push
das
fstpt
inc
or
ds
call
and
enter
jb
pop
in
lsl
sbb
pop
pop
shrl
jo
mov
fidivrs
lret
sub
jbe
inc
xor
push
lock
adc
mov
hlt
cmc
scas
test
insl
loop
in
jb
rorl
jp
or
lcall
cmp
andb
xchg
mov
sbb
sti
scas
loop
push
dec
push
inc
or
fwait
adc
mov
add
jge
je
mov
js
inc
nop
and
nop
fists
out
cmc
sub
icebp
sub
or
sub
or
jl
mov
mov
and
add
fcoms
lods
lods
aam
add
lahf
pop
sahf
fiadds
mov
ret
imul
mov
pop
mov
js
pop
mov
fmull
and
aad
repnz
ss
stc
sub
sbb
or
dec
rorb
mov
lret
data16
push
nop
push
cmp
mov
cltd
ljmp
and
mov
pop
ss
jecxz
sbb
insb
cmp
jge
mov
lods
cmpsl
adc
shl
pop
lret
lea
cmp
fsubrl
test
loopne
js
mov
add
or
dec
jno
mov
adc
mov
cmpl
or
cld
aam
xchg
pop
xchg
pop
dec
out
inc
sub
mov
inc
sbbl
sub
sbb
scas
cmp
xor
leave
dec
sarb
das
jne
mov
push
sbbl
mov
xor
insb
and
fiaddl
pcmpeqd
rcll
pop
lock
pop
push
cmp
test
arpl
ja
jmp
loopne
sub
movsl
or
rcrb
add
pop
cli
out
mov
pop
icebp
xor
sti
xchg
leave
jo
mov
arpl
push
push
pop
push
setl
or
xchg
je
jmp
clc
xlat
xor
mov
push
mov
cmp
push
orl
jmp
adc
lahf
in
adc
push
out
aaa
jne
push
cmpsl
dec
fwait
cmpb
cmc
adc
xor
jecxz
or
loopne
pop
pop
ljmp
jb
xchg
mov
cmp
push
xchg
pop
cwtl
aas
xchg
pop
pop
mov
and
jo
leave
adc
fidivl
movsb
jp
push
loope
add
lret
push
xor
inc
add
sti
xchg
ljmp
mov
js
jnp
push
clc
push
cli
mov
jmp
or
sbb
cmc
mov
adc
jno
sub
pop
pop
mov
mov
mov
cmp
mov
outsl
push
lea
lret
push
xor
mov
pop
jle
inc
repnz
ret
hlt
cmp
loop
insl
loope
cwtl
lret
scas
dec
in
dec
pop
mov
xor
aad
jo
mov
in
ss
xchg
decl
aas
test
cmp
adc
add
adc
addr16
data16
js
adc
jle
xlat
pop
jo
ds
xchg
lods
out
insl
jmp
or
bound
push
cltd
jo
jb
stc
adc
jg
scas
lea
ss
pop
bnd
rcrl
out
insb
inc
cmp
add
mov
mov
xor
mov
into
test
push
aaa
shll
out
std
or
xchg
mov
lea
rcrb
daa
xchg
cli
xor
lock
sbb
pop
mov
call
imul
or
loop
inc
mov
push
lcall
xchg
lods
inc
mov
inc
or
mov
sub
cmp
out
push
lods
jns
das
fscale
loopne
fldt
les
xchg
pop
jecxz
sbb
cmpl
cli
mov
test
mov
add
and
cmp
pop
sub
int3
lods
std
insl
cmp
loope
mov
push
pop
xorb
aas
mov
rclb
outsb
rolb
or
lcall
rcrb
jb
sbb
sahf
adc
cmpsb
clc
dec
mov
jge
push
je
les
int3
lea
mov
mov
cmp
lahf
mov
ss
adc
scas
inc
sbb
cmp
push
jne
sub
loop
into
loopne
dec
clc
pop
xchg
popa
and
repz
and
shl
movsb
jecxz
xor
jl
les
add
xor
arpl
out
in
addl
faddp
icebp
mov
movsb
inc
add
or
mov
push
adc
hlt
insl
push
and
dec
lret
xor
aaa
lock
sbb
testl
mov
sbb
gs
dec
push
pop
add
fcom
lock
dec
cltd
out
adc
sub
testb
lods
insl
scas
sbb
xor
int3
inc
cmpsl
xchg
fsubrp
pop
and
jmp
jge
es
sahf
push
add
rorl
add
dec
push
in
jb
outsl
sbbb
xchg
outsl
and
cmp
lock
sti
sbb
cmpsb
jne
jge
adc
cmp
push
outsl
cmp
pop
int
sbb
pop
and
mov
jnp
je
dec
inc
in
jnp
sub
popf
gs
pusha
or
add
sahf
lods
clc
subl
outsl
clc
popf
scas
in
loope
data16
and
fiaddl
push
fadd
push
mov
fsubs
jl
repnz
insb
lods
stc
xchg
lea
jae
call
jmp
push
ja
xchg
movsb
scas
mov
outsb
mov
subl
inc
push
mov
cmpsb
inc
xlat
or
push
cmp
jmp
inc
mov
data16
xor
fwait
js
xor
inc
sbb
cs
push
rol
or
xchg
insl
ret
aad
push
lods
das
sbb
not
out
or
lahf
lods
mov
add
adc
cmp
sub
fdivs
jo
hlt
cmp
or
cs
sbb
out
sub
packuswb
jl
xchg
pop
push
cli
lea
or
lea
dec
in
push
fldt
cmp
pop
into
mov
clc
jecxz
and
insl
xlat
sub
sub
pop
pusha
and
and
adc
jb
xor
in
sbb
inc
jne
mov
or
mov
or
scas
mov
andl
push
mov
dec
icebp
adc
or
lcall
push
ror
cli
jnp
bound
mov
cld
fisttps
xchg
bound
sbb
imull
ss
sbb
xchg
test
or
sbb
les
aad
test
inc
pop
mov
testl
out
andl
hlt
add
daa
jmp
lods
mov
in
mov
add
ret
mov
sbb
subb
fwait
mov
lods
dec
mov
mov
xor
inc
fwait
cmp
cmc
inc
ja
jmp
or
test
cmp
jb
and
rcl
cmc
sbb
jbe
pop
adc
inc
and
pop
fwait
mov
sti
pop
sub
mov
jmp
cmp
je
stc
mov
mov
lret
jne
mov
xchg
shrl
test
jno
push
orb
into
dec
insl
pop
test
inc
aam
inc
dec
aaa
jne
inc
xor
mov
rolb
cwtl
das
pop
mov
aam
or
mov
scas
mov
sbb
xor
add
lock
mov
and
inc
sub
adc
in
clc
sbb
hlt
mov
mov
mov
pop
pop
inc
push
das
sbb
fisttps
jno
xlat
inc
pop
fcmovnb
lods
icebp
lea
ss
js
jle
mov
push
cli
inc
orl
pop
addr16
cwtl
repz
jbe
std
xorl
movsb
bts
lock
scas
ficompl
ss
mov
mov
int
push
adc
inc
jmp
fisubrl
in
pushf
mov
mov
jae
sarl
xchg
push
leave
sbb
imul
hlt
inc
fsubrl
pop
mov
test
notb
push
jb
test
or
mov
push
call
xor
mov
sti
xchg
xor
and
aas
add
incl
xchg
int3
xchg
or
add
inc
xor
aad
xor
adcl
cli
sbb
loop
popa
push
mov
cli
cmp
pop
into
enter
shrb
testb
subb
outsl
adc
xchg
push
sbb
scas
jb
cmp
and
mov
stos
es
or
ss
pop
fidivrl
cltd
pop
lock
mov
mov
dec
imul
iret
cmp
lahf
fnstenv
leave
pop
jge
adc
and
ja
clc
ja
push
add
dec
mov
fcompl
xor
nop
push
pusha
aaa
xchg
jb
lock
mov
fcmovnbe
or
sarb
xchg
adc
sahf
mov
outsb
aas
hlt
in
fidivrl
adc
loope
scas
test
cld
es
ljmp
cwtl
fiaddl
lods
into
push
pop
sub
dec
or
arpl
loope
testl
sub
sbb
jg
mov
test
ljmp
mov
les
mov
add
xchg
es
icebp
stos
push
jo
dec
orb
pop
sarl
into
mov
test
mov
cmp
inc
arpl
push
stos
sbb
mov
and
add
mov
adcb
je
inc
insl
mov
or
push
adc
enter
sti
std
int
inc
sahf
adc
jmp
movsb
sahf
jo
fdivrs
push
cltd
lea
loopne
fildll
jecxz
aaa
cwtl
int3
lcall
fcmovnbe
sbb
mov
xchg
and
ja
mov
and
notb
cld
and
scas
fistpll
nop
in
clc
jmp
stos
arpl
in
ret
lea
cltd
mov
cmpsb
cld
push
inc
enter
ret
mov
inc
mov
pop
mov
mov
iret
dec
decl
aaa
inc
and
push
adc
jae
sub
shrd
pushf
adc
xchg
mov
out
clc
xchg
dec
out
into
sub
or
or
or
addl
aad
xchg
adc
xorb
lods
sbb
inc
or
mov
push
jae
decl
inc
sbb
mov
lea
sbb
mov
pop
stos
push
sub
dec
adc
mov
movsb
sbbl
fwait
adc
shll
ss
js
add
call
and
sub
mov
or
shlb
and
lahf
xchg
push
notb
jecxz
mov
shll
pop
stos
xchg
or
mov
mov
add
aaa
xchg
lret
mov
pop
pop
call
fcoms
jae
adc
add
cmpl
les
mov
loop
xchg
test
fsts
sub
shlb
rcll
or
dec
arpl
fisttpl
pop
std
sbbb
stos
mov
outsl
push
and
pop
outsb
jg
mov
inc
inc
add
mov
fstpl
push
push
mov
imul
pusha
mov
and
stos
or
cmp
mov
dec
outsb
sub
popf
lods
push
js
xrelease
icebp
inc
out
push
fsubrl
xor
and
cmpsb
ret
mov
insl
xor
inc
mov
jle
nop
jmp
add
push
pusha
das
push
ss
adc
mov
mov
dec
push
xor
inc
jmp
lock
ljmp
arpl
stos
xor
or
dec
xchg
roll
inc
frstor
xor
leave
lds
sbb
cmc
in
xor
icebp
or
sub
jo
in
adc
stos
cmc
mov
mov
dec
push
push
cmp
xchg
mov
roll
adc
add
mov
mov
jg
popf
in
out
mov
mov
pop
dec
and
xchg
ss
aas
mov
pop
shrb
les
ret
mov
pop
adc
push
cmp
js
ret
lods
out
add
es
iret
inc
or
inc
inc
push
fldenv
cs
xor
mov
pop
jo
lods
jmp
push
loopne
call
test
pop
xor
add
dec
mov
xchg
imul
add
repz
clc
push
and
mov
pop
pop
cmp
and
call
pop
cwtl
out
fs
add
or
mov
aam
jmp
dec
lret
pop
cld
mov
rcr
xchg
in
push
push
sub
push
inc
pusha
outsl
jae
movsb
sub
mov
movsl
adc
cmc
je
sub
loop
pop
iret
je
push
insl
mov
pusha
adcl
sbb
out
sahf
clc
cmc
lahf
jecxz
jg
fucomip
jle
jecxz
inc
and
mull
lods
add
mov
jnp
push
bound
sub
sbb
cmpsl
rorb
and
dec
cmpsb
and
push
mov
ja
jg
in
loopne
lods
jae
les
icebp
jp
rcll
scas
or
cli
test
ror
insb
and
add
adc
lret
in
sahf
jge
mov
fidivl
out
addr16
mov
push
int3
xor
ja
cmp
test
mov
jl
ja
pop
jg,pn
dec
mov
mov
inc
shl
ljmp
std
pushf
cmp
test
in
repz
pop
lock
xchg
xchg
lahf
jb
je
test
test
add
cmpsb
pcmpeqd
pop
imul
mov
out
or
rol
mov
cmp
std
clc
mov
add
loopne
nop
mov
iret
xchg
fwait
pop
data16
ret
outsl
xbegin
sbb
mov
jae
or
test
std
hlt
jmp
icebp
jp
outsl
sbb
sbb
fisttpl
jbe
adc
out
xor
xor
std
ret
call
mov
adcl
mov
pop
loope
int3
loope
jg
fmuls
int3
pop
js
push
ds
xchg
lret
sub
lock
and
pop
push
cmp
gs
push
inc
hlt
es
clc
cs
popf
mov
or
jb
stc
xchg
mov
pushf
adc
dec
and
pop
loop
push
sbb
pusha
in
mov
cmpb
inc
xchg
push
and
aaa
outsb
lock
lea
cmp
mov
push
fdiv
and
cmc
push
sbb
ret
add
pop
inc
cmpsl
hlt
push
out
sbb
xor
ret
push
push
adc
nop
mov
mov
aas
rcl
shll
insb
dec
cmp
and
repz
testl
jbe
mov
cwtl
mov
scas
ret
mov
loope
jle
cs
mov
test
leave
jbe
sbb
mov
mov
fucomp
mov
daa
loopne
lret
inc
pop
or
inc
ret
out
outsb
ss
fs
pusha
adc
jg
loop
cli
loopne
adc
dec
faddl
nop
insl
dec
cmpb
ja
fildl
xchg
pop
cmp
cli
cld
adc
icebp
test
dec
test
jno
push
cmp
pop
pop
mov
adc
xchg
loope
push
jg
add
scas
inc
and
pop
lods
loopne
cs
dec
lods
test
pop
mov
test
lods
sbb
stos
popa
mov
pop
sub
xchg
or
or
and
popa
in
loop
mov
fcoml
sub
add
js
orb
inc
xchg
imul
xor
inc
fdivrp
push
or
inc
pop
inc
popa
jecxz
pop
push
cmpl
cld
fildll
push
shlb
adc
fwait
cs
cmp
lret
push
mov
popf
rolb
scas
repz
jl
cmp
inc
sahf
sbb
sbb
shl
cltd
shlb
sar
std
hlt
jl
fildl
insb
cld
mov
dec
mov
cmp
psubsw
or
dec
inc
clc
shl
mov
or
mov
clc
pop
dec
aam
insb
int3
daa
cmpl
data16
rol
pop
jne
push
push
fwait
stos
clc
cmp
sbb
mov
cmpsb
outsl
insb
ljmp
lcall
mov
push
pop
jge
inc
inc
rcrl
add
jle
push
negb
add
xorl
mov
movsb
dec
lahf
mov
shll
js
hlt
add
test
push
adc
js
hlt
cmp
addl
lcall
sbb
test
or
pop
dec
out
push
jo
mov
das
jge
sub
inc
rcrl
in
inc
jmp
out
add
movsb
pop
dec
dec
cmp
stos
mov
js
pop
and
push
or
andl
dec
addr16
mov
xchg
push
inc
mov
jne
xchg
fwait
and
mov
adc
jge
test
jmp
push
adc
rorl
xchg
pop
icebp
or
cld
mov
js
inc
nop
loopne
cmp
push
js
js
addb
mov
xchg
pop
ja
cs
imulb
mov
cmp
and
adcl
aaa
xchg
or
adc
mov
pop
lret
outsb
andb
mov
xor
or
jle
lock
cmc
pusha
js
adc
mov
ss
adc
sbb
push
inc
mov
adc
arpl
add
xor
loop
maxps
daa
outsl
dec
add
test
test
in
fs
mov
sbb
push
in
std
add
sub
outsb
sub
gs
int3
ret
sbb
decl
add
jb
mov
mov
aad
pop
sbb
jbe
imul
fdivr
xor
icebp
jno
push
fldcw
hlt
pop
inc
rcrl
ss
xchg
sub
xchg
hlt
xor
mov
test
pop
es
push
test
and
or
test
xlat
lahf
jp
loop
adcl
in
sub
cli
jo
lahf
fwait
adc
mov
pop
mov
pop
xor
aad
insl
sbb
jb
adc
adc
jp
fdivrs
pop
jl
incl
mov
sub
lcall
xchg
test
out
or
or
pop
pop
scas
mov
xchg
mov
daa
mov
ret
mov
scas
mov
xor
jmp
and
jo
es
test
or
popa
mov
sub
lds
sbb
xor
fstp
or
adc
fildll
call
jae
repz
or
mov
push
sub
outsb
ret
xchg
jne
jecxz
adc
xchg
jecxz
mov
fistps
jae
pop
fdivrs
addr16
pusha
jnp
js
sub
aam
xchg
andb
sub
fucom
int
test
je
sub
in
push
je
cmc
inc
repz
xorb
push
mov
or
ror
pop
gs
mov
adc
insb
adc
mov
xchg
rcll
shr
loopne
lock
jg
push
xchg
mov
mov
sbb
test
jge
imul
fstpt
filds
xchg
gs
adc
mov
sub
incl
test
and
mov
adcb
push
mov
mov
cltd
out
cmp
lea
jno
adc
push
addr16
les
sub
clc
push
out
add
pusha
push
test
call
jmp
scas
lds
and
rcrb
fstpt
push
xor
test
xchg
daa
cmp
dec
push
mov
ret
aaa
and
in
addb
frstor
rorl
adc
inc
cli
mov
psubusw
addr16
mov
ljmp
and
add
pusha
loope
ficomps
movsl
and
jae
jmp
std
repz
ja
xor
jbe
pop
push
pop
mov
loope
mov
pop
out
and
ljmp
sbb
jnp
inc
mov
std
lahf
pop
inc
in
mov
and
inc
sbb
ljmp
dec
sbb
add
mov
mov
frstor
and
pusha
jl
inc
mov
outsl
fists
sub
push
adc
sbb
mov
fsts
orl
jb
imul
dec
lahf
push
es
bound
xor
mov
loopne
pop
out
sbb
mov
dec
sbb
push
push
ret
stos
dec
mov
jg
push
std
in
and
pop
jo
cli
dec
insl
pop
sbb
mov
subl
popf
rcll
and
xchg
lds
punpckhbw
add
mov
add
aaa
out
xor
enter
and
jecxz
bound
pop
and
ficompl
push
sbb
mov
cmp
inc
or
or
out
arpl
jle
inc
xchg
xchg
sub
popa
fwait
mov
push
in
rorb
cmp
in
xor
das
das
fadd
pusha
gs
call
add
mov
sbb
sbb
imul
lock
fstp
push
pop
jecxz
mov
adc
mov
loope
in
and
pop
aam
hlt
std
int3
dec
bound
xor
cmp
push
es
lods
das
roll
nop
pop
icebp
imul
out
mov
or
jge
jo
xchg
int3
xchg
jno
dec
jl
mov
cli
fbstp
jno
jle
push
hlt
test
fisubs
fiaddl
inc
adc
mov
stos
xchg
mov
popf
rcrb
cmpsl
rol
mov
cmpb
insl
xchg
xchg
test
out
pop
movl
adc
shlb
cmc
push
test
dec
inc
lock
iret
int
and
addl
scas
in
hlt
adc
test
punpckhbw
xor
push
sti
aad
sub
rcl
ds
in
divl
into
call
jns
hlt
mov
addr16
or
mov
push
insl
out
fisubrs
loopne
in
push
push
cmpsl
jle
jecxz
sub
mov
pop
mov
fists
jnp
pop
aaa
sbb
pop
sbb
cmc
add
push
or
push
mov
jno
sbb
sub
xor
loopne
cld
mov
lahf
rorl
pop
push
jge
push
loope
addr16
fadds
adcb
adc
leave
shll
jne
pop
stos
popl
incl
imul
inc
xchg
mov
push
inc
dec
pop
xchg
mov
jbe
xor
pop
inc
test
cmpsb
aas
lahf
imul
pop
and
or
push
test
sahf
sbb
or
mov
bound
ljmp
xor
lret
test
dec
xor
xchg
add
sti
push
mov
clc
insl
mov
rcrb
fwait
clc
cwtl
je
test
xlat
pop
mov
cli
imul
jo
push
into
jb
bound
lock
adc
incl
aad
mov
fstps
mov
inc
jns
pusha
sahf
adc
mov
inc
fiadds
sbb
or
pop
outsl
or
shrb
insb
fimull
ror
jecxz
imul
adc
les
movsl
bound
push
repnz
sti
aad
in
pop
gs
xchg
cmp
or
ds
scas
xor
std
xchg
mov
add
movsl
pop
ror
ret
loop
cli
sub
dec
shlb
in
mov
add
ficoms
or
mov
mov
dec
leave
lret
jne
dec
faddl
outsb
sub
mov
rcrl
inc
dec
or
jo
lret
sahf
xchg
inc
stos
test
stos
push
dec
pop
lret
aam
ret
movsl
xchg
aaa
mov
jmp
scas
fstpl
pop
insl
jne
enter
push
je
and
aas
add
lcall
add
call
lcall
nop
aas
push
fwait
rorl
test
shlb
test
test
xchg
and
jne
sub
insb
or
push
outsl
movswl
push
xchg
adcb
in
rorb
fwait
add
in
fs
jbe
nop
inc
shll
mov
pop
scas
cmp
scas
decl
and
call
mov
xchg
cli
adc
cld
push
lock
or
jns
hlt
incl
mov
sbb
arpl
cmpsl
sbb
jge
imul
mov
cmpsl
int3
adc
mov
sub
out
inc
les
inc
mov
and
loop
mov
pop
inc
lods
lahf
and
and
sub
pop
mov
lods
rcrl
insb
cmp
fldt
in
pop
pop
inc
call
jle
and
test
push
xchg
or
add
xor
addr16
jge
cli
pop
ret
xchg
in
push
mov
lods
jbe
lods
scas
push
pop
sbb
mov
mov
pop
fiadds
shrl
mov
insl
jge
dec
sbb
daa
push
adc
fcomi
es
sbb
shlb
arpl
inc
or
inc
ds
inc
lcall
lea
xchg
test
jbe
jnp
sbb
sub
fwait
xor
adc
mov
push
sbb
and
out
imul
fistpll
fidivl
adc
jnp
enter
push
push
add
outsb
call
mov
movsl
xor
and
cmc
or
push
das
dec
sub
subb
ljmp
push
arpl
jmp
mov
push
jo
stos
or
popl
aas
cmp
mov
mov
call
push
sbb
xchg
dec
jge
sbb
jecxz
test
mov
push
push
movsl
ja
shl
mov
jl
xchg
push
inc
and
test
jmp
rorl
mov
nop
dec
sub
xor
arpl
out
xchg
jle
dec
lret
dec
lret
mov
cmpsl
ljmp
fisttpl
icebp
push
mov
push
pop
divl
cmp
ffreep
stos
iret
inc
shll
inc
call
push
adc
cs
push
inc
sbb
pop
mov
popa
mov
jne
jnp
mov
pusha
mov
push
ret
jbe
shr
lea
outsl
pop
outsb
addr16
add
add
iret
jl
inc
aaa
mov
cmp
ret
sub
xor
push
dec
mov
mov
push
xchg
mov
ret
icebp
jb
cli
aam
ss
icebp
js
mov
fldl
filds
sahf
movq
imul
rcrb
sub
jp
and
in
or
sbb
pushf
push
movsb
loope
movsl
mov
imul
jae
xchg
jo
push
or
lret
shlb
dec
xor
push
rorb
imul
mov
inc
cwtl
pusha
shrb
mov
in
shlb
testb
out
pop
xchg
jmp
aaa
mov
add
sub
gs
outsb
jb
sub
imul
push
or
jns
and
in
jnp
test
sahf
sub
icebp
pusha
test
and
push
jnp
mov
mov
jmp
loope
test
dec
enter
inc
push
loope
mov
mov
sub
std
cmpsb
mov
sbb
xchg
or
xchg
inc
cmp
and
cmc
les
test
out
mov
andl
push
xchg
in
add
clc
pop
test
daa
push
out
test
sbb
in
scas
push
mov
push
cld
clc
sbb
into
clc
pop
gs
mov
xchg
imul
jbe
sub
in
push
dec
jne
pusha
je
cltd
pop
loopne
hlt
cmpb
ret
or
push
aaa
call
pop
stc
push
cmp
pop
js
insb
xor
inc
in
mov
cmp
enter
loopne
fstpt
xchg
add
ror
je
test
mov
dec
orb
inc
ret
pop
push
rcrb
sbb
scas
mov
lret
add
sarl
icebp
mov
daa
cmp
or
dec
fs
in
add
shrl
adc
push
shrb
stos
lea
cmpsb
cmpl
xor
fucomi
scas
xchg
push
and
or
ss
mov
fists
mov
insl
imul
inc
test
mov
pop
loopne
out
out
loope
out
out
and
leave
sbb
or
movsb
lret
cmp
ret
push
mov
push
cmp
mov
xchg
sub
mov
stos
or
inc
aam
repz
sub
mov
mov
dec
jb
jmp
push
aaa
mov
push
and
cld
sbb
push
out
movsl
in
ds
xor
fmul
std
mov
mov
jb
mov
das
pusha
scas
outsl
aam
and
cwtl
cmpl
and
inc
pusha
sbb
mov
pop
ds
mov
aam
je
mov
rcrb
lods
subl
aas
jmp
cmpsb
sti
sub
sbb
std
lock
mov
dec
jle
sbb
jo
mov
mov
and
mov
pop
mov
inc
les
fsubrs
sub
pand
sub
mov
cmp
adc
fcomp
fmuls
or
xor
test
jle
sarl
inc
shlb
push
mov
sbb
xlat
ljmp
outsb
adc
sbb
out
pop
sbb
cli
push
in
rorl
jl
lret
popf
jl
push
jg
jne
out
shlb
dec
mov
stos
add
inc
dec
push
shrl
int
adcl
mov
xor
sbb
pop
jl
ret
imul
fnsave
call
pushf
adc
jecxz
mov
push
dec
and
mov
ljmp
xchg
adc
lock
outsb
pop
cmp
sbb
push
push
js
mov
loopne
xor
xor
xor
int
adc
sbb
ret
mov
sub
aaa
clc
loopne
and
sub
insb
inc
bound
das
mov
xchg
cli
loopne
adc
cmovp
mov
jg
adc
pop
cmp
ret
outsb
sub
sti
ljmp
push
xchg
lods
dec
jmp
leave
push
lret
inc
pop
lds
jbe
into
aas
jbe
jge
inc
test
jae
or
shll
decl
fnstenv
ss
in
ss
out
mov
mov
mov
das
jnp
xchg
sub
fwait
and
stos
pop
mov
aaa
loopne
dec
add
movzwl
mov
jmp
loopne
in
xchg
loope
pop
xchg
mov
iret
dec
cs
xchg
push
rclb
ficomps
lea
dec
lock
xor
jo
mull
jmp
dec
out
xorb
test
lea
xor
mov
ljmp
test
jp
cmp
jae
cmp
push
xchg
jl
aad
push
clc
sub
mov
test
dec
cmp
sbb
lahf
das
aad
and
mov
insb
mov
sbbl
fs
clc
push
hlt
or
dec
mov
adc
dec
pop
push
sub
pop
add
pushf
sub
das
dec
clc
fbstp
mull
dec
push
ss
mov
push
and
jmp
mov
dec
rolb
mov
sbb
icebp
inc
add
fistps
push
mov
mov
or
mov
mov
mov
mov
jmp
add
loop
sbb
inc
cmp
cs
nop
cmp
in
cli
scas
xlat
loop
xchg
arpl
bound
pop
push
xlat
and
pop
xor
add
mov
dec
fs
daa
jecxz
push
arpl
icebp
cs
sbb
cmp
test
cli
lods
jle
es
cltd
ficoms
inc
add
or
out
lods
out
pusha
sub
pushf
cmp
ret
xor
jg
stos
imul
rcrb
cmp
adc
aas
loopne
cmpl
xchg
cmp
idivl
aad
adc
inc
mov
lds
mov
push
push
fisttpll
pop
test
mov
or
rcrl
or
dec
cmp
sub
and
fidivs
push
fildl
insb
pusha
fidivrl
imul
lock
test
std
cmpsl
inc
hlt
inc
cmp
or
mov
cmpb
insb
rcrl
xor
cmc
pop
jne
sti
mul
int
fcompl
or
pop
xchg
dec
or
xchg
imul
mov
fsubrl
lcall
xchg
and
mov
lds
push
jmp
out
push
jmp
and
push
jg
outsb
pop
pop
mov
sarb
adc
pop
sbb
lds
dec
mov
jmp
and
mov
dec
xor
or
pop
shrb
mov
hlt
add
xor
pop
mov
inc
push
out
xor
stos
push
xor
sbb
mov
pop
sub
scas
pop
xorl
push
scas
rol
bsr
add
out
mov
xor
sbb
fwait
mov
jne
movsl
and
js
xchg
fisubrl
data16
test
std
mov
pop
mov
jnp
pop
je
push
cmc
rcrb
pop
pop
out
ss
fisubrl
outsb
cs
loope
lret
mov
cld
call
cmp
stc
popf
ds
and
sub
xor
stc
xor
pop
mov
fsubrs
add
push
insl
sarl
xchg
jecxz
aam
fistps
ja
fistps
or
dec
test
push
mov
fistpll
fcoms
fs
test
pop
test
push
inc
jo
xchg
ds
jge
je
push
lock
pushf
shlb
sub
mov
scas
loopne
cmp
mov
jnp
fcomps
xchg
mov
clc
and
adc
jns
jns
mov
inc
fcmovnb
mov
mov
or
hlt
dec
jge
test
gs
std
aaa
push
stc
jae
sar
mov
int
inc
push
cmpsb
mov
sbb
push
and
adc
sub
mov
sahf
add
sub
inc
mov
outsb
aam
and
int3
out
pop
cmp
lock
dec
icebp
lods
rorb
inc
mov
arpl
jl
das
mov
lahf
sub
data16
lods
lret
rcr
pop
stos
addr16
add
jne
push
mov
pop
lcall
inc
xchg
add
push
lods
loope
rclb
fcmovne
leave
and
lcall
mov
jno
and
jp
aam
or
pop
mov
aad
cwtl
push
daa
mov
add
rcr
mov
es
setnp
lds
pop
jne
push
mov
or
test
loop
imul
mov
sar
jmp
movsb
mov
adc
or
mov
mov
push
imul
jl
push
jne
in
fildl
mov
notl
add
cld
push
call
dec
movsb
or
jp
mov
iret
shll
out
jmp
bound
push
sbb
xchg
enter
icebp
test
cmc
sbb
in
cmc
and
cmp
cmpb
ja
aaa
jge,pt
dec
push
adcb
sub
pop
and
insl
shr
cmc
imul
xlat
and
pop
inc
pop
insl
inc
mov
ror
jecxz
daa
ljmp
sbb
xor
mov
add
es
sbb
scas
aad
pop
pop
mov
add
mov
cmp
lds
add
mov
pop
in
mov
cmp
mov
pop
cld
xor
loopne
loope
adc
neg
xchg
add
sahf
rcll
jmp
faddl
test
jbe
xor
cmc
add
add
or
in
dec
mov
jl
mov
loope
jmp
inc
sub
and
and
inc
rcrb
sub
jne
leave
scas
mov
iret
push
push
add
inc
xchg
into
stos
ficoms
push
mov
inc
xchg
lods
jae
lret
movb
mov
mov
movsl
cld
xor
scas
fsubrs
out
cmp
push
mov
outsl
es
adc
fidivrl
jl
mov
loopne
pop
loop
icebp
or
loope
xchg
adc
loopne
cmpsb
xchg
mov
pusha
inc
filds
ss
sub
mov
lds
dec
nop
mov
inc
add
mov
loop
pop
ss
fidivs
orl
adc
daa
andl
outsb
xchg
fwait
sbb
xor
icebp
fisttpll
lock
repnz
ret
fstps
iret
cmc
test
mov
xchg
xchg
jo
iret
push
fistps
xchg
loop
shll
add
xchg
and
mov
mov
or
testb
sub
push
ja
dec
cmp
std
add
lcall
pop
inc
push
pop
scas
xor
test
pop
insb
in
cmp
or
aaa
cmp
rcl
loopne
test
cld
sbb
adc
pop
pop
pop
rcr
lcall
pop
inc
jns
and
push
out
imul
xor
pop
mov
fwait
cs
fisubrs
mov
test
adc
fildl
rolb
dec
dec
sub
cli
jecxz
fcomps
fistpll
or
test
mov
push
imul
sub
jl
mov
lret
mov
leave
dec
adc
dec
add
lea
fstpt
push
movsl
add
ds
dec
xorl
xor
jae
dec
mov
fsub
pop
out
sarb
xchg
push
mov
xchg
orl
mov
mov
push
cmc
cmp
enter
mov
and
mov
aad
push
xchg
in
mov
incb
push
stc
movsb
adc
jg
pop
stos
stc
mov
pop
test
sub
dec
mov
adc
or
sbb
enter
jecxz
push
nop
mov
mov
mov
loopne
sarl
adc
push
into
push
add
mov
fcmovnbe
lds
push
mov
outsl
fnstsw
leave
out
lahf
in
movsb
cmp
ss
data16
nop
mov
outsl
fwait
lea
in
jle
rclb
jge
mov
adc
cmp
ja
fists
inc
jl
push
jge
stos
lea
shl
js
xor
xchg
outsb
insb
xchg
imul
push
addr16
icebp
andl
jmp
pusha
xor
sub
push
sti
pop
test
stos
dec
les
push
es
mov
outsl
sbb
rcrb
xchg
dec
sbb
sbb
shrb
pop
xchg
add
sbbb
test
cli
sub
xchg
inc
mov
adc
push
pop
adc
and
andb
adc
mov
cmp
jbe
cld
jmp
mov
jo
jge
xchg
sbb
in
stos
mov
movsb
movhps
xchg
lret
fs
std
cmc
loopne
mov
and
and
push
sar
clc
data16
pop
shl
sub
xlat
dec
inc
daa
adc
fidivs
lahf
test
in
push
cmpsl
lcall
xlat
sbb
or
push
cld
clc
sbb
mov
outsb
outsl
mov
cmp
dec
mov
inc
sti
outsl
xchg
jle
test
loopne
aas
cwtl
lea
popf
mov
inc
sub
insb
fdivs
dec
shll
add
ljmp
mov
sbb
cmp
outsb
fisubrs
xor
lret
movsb
push
in
shrl
aad
jg
push
and
or
and
push
mov
jne
faddl
pop
add
fwait
or
sub
xorl
int3
call
inc
sbb
or
cltd
inc
js
aaa
sbb
iret
je
and
cmp
fincstp
add
clc
push
sbb
push
inc
test
mov
mov
out
cmc
jno
in
gs
mov
outsl
ja
dec
aam
nop
push
js
rcll
loop
shl
xchg
xchg
sbb
inc
mov
add
or
lds
mov
add
pushf
aam
fimuls
pop
clc
pop
dec
es
shll
or
mov
pushf
lcall
push
lahf
in
or
outsb
pop
loope
je
mov
scas
xor
aad
cmc
jbe
shlb
mov
add
inc
addb
paddsb
arpl
test
loope
mov
sub
or
mov
mov
test
sbb
mov
inc
add
xorl
sbb
xchg
loop
inc
pushf
jmp
icebp
pop
mov
int3
xor
inc
je,pn
push
inc
nop
dec
test
xlat
out
adc
pop
pop
sub
fcomps
push
sbb
clc
lret
sub
xchg
loope
sti
jnp
and
lea
xchg
ss
call
je
push
mov
imul
lret
xor
mov
lock
jmp
jg
push
mov
dec
cmp
xchg
stos
mov
cmpsb
pop
loop
pop
aas
mov
fistpl
hlt
shrb
or
sub
cld
mov
into
mov
iret
dec
stos
mov
mov
add
adc
jae
das
pop
daa
push
inc
outsl
push
xchg
fmull
popf
or
cwtl
cs
movl
rolb
jl
mov
out
mov
pop
cld
adc
and
lds
pop
cmpsl
push
incl
and
push
pop
stc
jnp
test
add
and
xchg
sbb
inc
ljmp
pop
ljmp
dec
stc
mov
int3
repnz
pop
mov
mov
loope
mov
iret
out
xchg
inc
rcll
jg
push
jecxz
es
lds
clc
outsb
shrl
rorb
push
or
aam
pushf
and
addr16
cs
adc
stc
test
adc
mov
mov
sub
cmp
movsb
leave
jo
cli
cmp
loopne
pop
push
mov
mov
pop
mov
mov
stos
hlt
or
rorl
pushf
sbb
push
jo
lock
pop
jge
sub
sti
aaa
ss
push
les
jl
push
mov
cmp
es
jnp
data16
enter
fbld
dec
test
push
or
andb
adc
aaa
sub
orb
or
pop
or
insl
xor
repz
fmuls
xor
das
sub
in
test
movsl
cmpl
sub
filds
sbb
daa
pop
shrb
in
loop
cmp
rol
or
xor
mov
mov
sub
cmc
mov
stos
mov
mov
sub
icebp
icebp
ficoml
and
lretw
push
adcl
jbe
sub
pop
add
je
insl
shl
andl
and
dec
sub
adc
shll
inc
std
rcll
je
scas
dec
lods
insb
xchg
in
jmp
ret
cmp
lahf
in
sbb
and
jmp
ss
mov
imul
or
mov
or
mov
inc
pop
fistpl
jbe
in
imul
loop
jmp
push
add
sub
lods
xor
idivb
sbb
call
pop
stos
mov
push
fsub
jmp
xchg
mov
outsl
jg
arpl
sub
stc
es
sti
das
add
dec
mov
xchg
mov
pop
jnp
jae
clc
lock
sahf
or
mov
iret
les
jl
push
pop
test
lock
jns
lahf
and
adc
sbb
ja
cltd
push
mov
cltd
pusha
sub
fsubrl
test
ljmp
aas
daa
mov
mov
pop
mov
mov
into
in
cld
lods
movsl
xchg
sbb
push
mov
jmp
add
xchg
cmp
hlt
jo
dec
mov
mov
pop
dec
sbb
pop
inc
and
push
ja
push
popf
scas
daa
pop
xor
into
push
cmpsl
shll
stos
bound
cli
jno
and
xor
jo
loop
jp
je
mov
scas
pop
mov
lods
push
int3
or
ds
inc
cmp
jmp
add
mov
jle
sub
bound
mov
test
push
outsb
fsubrl
loopne
fwait
mov
sarb
pop
mov
stos
fnsave
mov
movsb
stos
sbb
je
ja
ficoms
addb
jp
scas
outsb
xchg
mov
pop
cmp
pop
lret
dec
pop
int
int3
iret
xor
scas
andb
sti
push
data16
mov
pop
insl
mov
jmp
divb
out
jle
aas
jecxz
cmpsb
jno
rolb
push
mov
inc
ds
mov
repz
xchg
or
icebp
sbb
aas
push
sti
xchg
loope
insl
mov
loop
sbb
inc
mov
dec
out
cmpb
lret
dec
mov
out
or
lock
push
or
fnstsw
mov
inc
jnp
jmp
and
gs
fs
mov
je
in
call
enter
ljmp
in
fistpll
cmc
push
mov
imul
je
sbb
adc
pop
mov
jno
dec
mov
or
push
or
xlat
test
pop
cmp
pushw
test
icebp
dec
or
adc
jg
push
inc
add
xlat
mov
fisttpl
ds
js
push
shll
or
fdivrl
sub
jo
mov
lret
cmc
add
jo
push
or
jp
movsl
and
or
aam
adc
mov
push
pop
pop
sub
inc
and
fwait
adc
mov
das
test
mov
pop
call
mov
sub
mov
imul
mov
xchg
sub
inc
or
andb
jecxz
adc
idiv
cmpsl
and
testl
push
sahf
inc
cmp
mov
lea
lock
add
loopne
or
pop
mov
mov
cmpsb
jns
fs
pop
loopne
orb
push
nop
in
leave
dec
xchg
loope
mov
mov
mov
sbb
leave
movsb
xchg
lret
sbb
xchg
in
rorb
loop
and
add
xchg
push
outsb
ret
rorb
stos
scas
sub
test
js
add
push
ret
fsubl
cmp
mov
cmc
mov
clc
int3
adc
fldenv
movl
out
jecxz
jmp
repz
dec
or
in
inc
pop
sub
loop
test
repnz
lea
push
dec
push
lds
mov
rolb
inc
sbb
enter
or
mov
pop
mov
or
mov
add
ret
push
dec
cmpl
mov
push
mov
adc
mov
aaa
add
iret
stos
sbb
add
gs
dec
fwait
xchg
mov
push
call
mov
mov
push
and
mov
lea
xor
add
add
loopne
test
pop
push
das
lea
pop
and
pop
ljmp
jp
rol
jbe
pop
xchg
lea
xchg
mov
mov
xchg
int
test
lret
jp
loope
movsl
mov
loop
inc
test
out
pusha
jmp
jno
lret
mov
orb
add
mov
sub
test
sbb
movsb
adc
cs
or
pop
sub
xor
mov
xor
ljmp
outsb
aaa
mov
add
out
add
mov
fwait
push
ss
xchg
scas
jo
add
cwtl
cwtl
xchg
bound
dec
loopne
xchg
mov
sahf
sbb
pushw
cmp
adc
xchg
adc
add
cwtl
add
pusha
jbe
loope,pn
xchg
out
mov
std
in
daa
pusha
cs
add
mov
xchg
mov
xlat
aam
pop
dec
cmc
lods
hlt
pop
push
dec
subb
cld
pop
xor
mov
sub
jmp
inc
xchg
mov
inc
sbb
mov
xchg
ret
inc
imul
int
xchg
or
cli
and
adc
mov
scas
orl
xor
shlb
mov
shl
mov
sub
iret
xor
lods
loope
daa
mov
xchg
outsl
mov
fildll
mov
mov
lock
or
int
sub
mov
adc
out
or
pop
push
push
jo
sub
cmp
sahf
or
cmp
dec
repnz
jp
mov
and
xor
adc
add
test
cmpb
test
mov
cltd
and
paddq
clc
xor
xor
or
jns
dec
sbb
adc
sbb
xchg
pop
imul
jp
or
mov
cld
fisubrl
lods
in
mov
add
sbb
inc
ljmp
add
ret
test
loopne
clc
les
mov
test
adc
sbb
out
dec
mov
cmp
xor
jae
push
rol
outsl
das
mov
push
scas
cwtl
add
jge
sub
pop
into
ret
xorb
aas
mov
pop
std
xchg
sub
xchg
lret
pushl
lea
out
fdivrs
and
jno
xchg
jb
push
hlt
imulb
insl
mov
cmp
ja
daa
mov
inc
loop
leave
pop
add
clc
sub
cmovb
pop
cmp
cs
cltd
mov
cmp
add
xor
pop
cmp
adc
mov
adc
sub
xchg
test
daa
lret
test
pop
fildll
cwtl
xchg
icebp
xor
xlat
sti
dec
roll
ljmp
loop
fcom
pop
fcmovne
or
pop
pop
sub
int
mov
mov
pushf
ror
mov
shlb
test
cmpl
sbb
push
mov
mov
sarl
loopne
imul
data16
pop
ljmp
jbe
fistpl
rol
call
xor
gs
dec
push
sub
pusha
sbb
xchg
cmp
xchg
sbb
loope
rcrl
loopne
xor
sahf
in
pop
jle
test
sub
inc
adc
aaa
adc
data16
imul
xor
in
in
sbbb
push
mov
movsl
cmp
push
jl
sub
mov
xor
std
inc
pop
inc
fs
lcall
pop
ret
test
das
lahf
test
fwait
mov
loop
sbb
cltd
cmp
add
stos
fcmovnu
dec
scas
aam
in
ljmp
loope
xchg
jg
in
inc
hlt
sbb
mov
call
or
mov
loop
jbe
jne
clc
adc
adc
xor
bound
imul
xor
data16
push
aam
fildl
dec
fwait
ret
sub
out
cmp
mov
ret
cmp
cli
mov
push
inc
add
or
adc
jle
pop
mov
pop
fidivrl
sub
sub
sub
jle
xor
pop
daa
jnp
dec
test
mov
sbb
enter
push
pop
les
popa
pop
mov
lock
mov
ret
inc
mov
push
pop
add
xor
out
lods
test
int
in
movb
pop
sarl
and
data16
outsl
cld
scas
push
inc
jbe
push
std
xor
jl
sbb
shll
fidivl
mov
cmp
icebp
mov
cltd
xor
fistl
add
jne
mov
or
sub
dec
jp
push
jmp
sti
sbb
mov
int3
into
adc
jno
pushf
in
pop
pop
jp
pop
bound
sub
jge
pop
xor
jp
push
data16
test
add
mov
mov
mov
or
sarl
fbld
mov
jge
adcl
test
std
lds
push
pop
lcall
int
loopne
dec
jecxz
test
loope
fstl
jb
push
lcall
pop
cmp
or
fbstp
cmp
xor
cmp
loopne
out
adc
mov
jl
out
push
loope
adc
mov
sbb
cwtl
popa
or
sbb
cld
aam
inc
scas
in
inc
mov
inc
cmp
mov
repz
andb
push
adc
aad
add
pop
push
movb
popw
dec
sub
sbb
or
mov
inc
je
xchg
pushl
scas
fbstp
ret
scas
clc
jl
icebp
pusha
add
xchg
sahf
add
jne
insl
add
mov
lods
jns
mov
mov
or
ret
loope
jns
pop
jle
insb
inc
mov
notl
jl
pushw
cmp
xchg
pop
test
sub
dec
cmp
inc
ss
call
and
repnz
inc
inc
and
insb
fs
negl
fistl
cs
mov
add
adc
bound
mov
stos
jmp
xchg
fistps
pop
call
ret
testl
sub
xchg
mov
dec
dec
jbe
dec
movl
fs
mulb
inc
pop
jp
aas
pop
push
xlat
fldl
dec
or
sahf
outsb
shll
adc
sub
xchg
mov
sbb
sbb
mov
das
shl
lods
mov
insb
stc
adc
out
movsl
mov
add
test
xor
mov
outsl
aaa
inc
adc
push
push
lods
sbb
push
add
in
in
scas
cmp
mov
fldl
scas
xor
ror
push
pushf
adc
sbb
int3
call
out
jnp
adc
test
pop
inc
pop
jecxz
addr16
js
jno
loop
add
mov
xchg
mov
or
pop
and
outsb
fcomps
hlt
popl
mov
loop
jmp
push
enter
push
cmp
mov
adc
inc
icebp
xor
decl
inc
insl
add
lret
xchg
call
es
mov
mov
pusha
pop
and
and
loopne
lea
ljmp
dec
icebp
loop
leave
cmc
inc
xor
scas
and
add
inc
sbb
xor
int3
xlat
stos
testb
xor
lfs
imul
cmc
popf
mov
xor
popf
roll
push
cs
pop
imul
rcrb
lret
divb
mov
or
scas
cs
bswap
inc
mov
test
and
popf
jne
std
and
das
mov
test
js
inc
push
or
incl
in
xchg
in
push
or
test
pusha
or
and
jnp
test
fs
lret
rorb
jmp
pop
jp
stos
clc
push
popa
mov
pop
or
push
cmp
add
inc
and
pusha
adc
js
mov
push
sub
xchg
push
jge
add
add
add
outsb
dec
pop
push
jle
lea
jbe
xor
xchg
movsl
insl
add
pop
push
sbb
xchg
cmp
jns
mul
outsb
in
test
cmpsb
xchg
cwtl
mov
mov
pop
cli
rol
mov
lock
lock
xchg
or
xchg
and
in
mov
stos
cwtl
add
mov
scas
mov
add
inc
lcall
xor
jbe
jo
cmpl
dec
and
push
loop
push
ss
dec
fwait
inc
mov
and
adc
lock
pusha
mov
pop
and
and
sub
cmp
loopne
mov
notb
lcall
xor
mov
mov
adc
pop
sarb
in
das
daa
mov
clc
jecxz
push
jle
jae
ret
aas
jo
xchg
js
sub
scas
and
xchg
ss
mov
push
loope
rcrl
xor
pop
into
add
dec
pusha
hlt
ret
xchg
in
lret
mov
into
mov
xchg
rorb
movsl
js
mov
cmpsl
jl
neg
xchg
rcr
xchg
inc
xchg
sub
loopne
fistpll
imull
mov
or
ds
imul
cmpl
sbb
push
fldl
call
ja
or
stos
pushf
test
nop
sub
ret
or
cld
adc
lock
xchg
les
adc
mov
dec
fiaddl
jae
sub
xlat
jb
mov
cmpsl
inc
add
sbb
outsl
cmpsb
dec
or
xchg
lods
bound
xchg
inc
icebp
xor
cmp
ss
jnp
cmp
adc
mov
ljmp
dec
scas
cld
xchg
sbb
mov
faddl
inc
enter
insl
mov
cmp
inc
scas
add
sub
fbstp
scas
xchg
mov
hlt
mov
gs
out
or
pop
fwait
cli
jbe
out
or
sarl
push
pop
idiv
flds
jecxz
jo
jecxz
or
leave
add
mov
mov
push
inc
pop
mov
dec
ret
push
lret
mov
mov
mov
movsb
cmp
mov
push
pop
cwtl
mov
call
pop
pop
or
jg
pop
ja
jmp
clc
popf
std
es
fisubs
jp
in
dec
inc
add
add
pop
inc
dec
add
cmp
xchg
or
mulb
cmpsb
shrl
sbb
repnz
cmpl
mov
movl
test
xor
mov
lods
push
ret
sbb
popf
ja
add
loop
stos
add
fstpt
clc
xchg
pop
jbe
cmp
add
adc
cmp
mov
repz
jp
mov
incb
and
cmp
add
fs
popl
inc
loop
jge
sub
hlt
pop
test
or
cmpsb
sub
cmp
mov
mov
cs
cmc
push
je
cld
test
xchg
ja
fiadds
push
imul
shrl
inc
sub
mov
pop
stc
pop
fnstcw
mov
mov
call
jae
adc
cmp
fildl
push
ja
xchg
and
push
xchg
pop
jg
dec
insl
jmp
dec
fnstsw
pop
inc
xchg
push
mov
xchg
or
mov
mov
and
clc
in
push
xchg
mov
jae
or
sbb
cmpl
and
or
pop
jno
iret
mov
hlt
mov
xchg
or
les
adc
inc
cmp
aaa
jmp
testl
mov
pop
or
sti
ret
clc
int
xchg
inc
pop
dec
outsl
fwait
cmp
mov
cltd
dec
xchg
lea
xchg
mov
lods
jbe
sub
xor
test
add
mov
fwait
adc
push
rcrb
adc
push
sahf
add
mov
sar
push
lock
push
mov
sbb
lea
inc
loopne
xor
std
call
mov
cmp
lret
dec
rolb
les
xchg
mov
inc
mov
jns
mov
roll
adc
mov
rcrb
xchg
cs
movsb
dec
push
jg
and
push
dec
rorl
or
test
iret
jo,pt
mov
dec
popa
int3
ret
mov
xchg
push
cmpsb
jno
mov
repnz
jge
cli
testb
jno
pushl
add
mov
mov
es
xor
jge
stos
add
aaa
cltd
cwtl
lahf
mov
fwait
ljmp
rclb
mov
sbb
or
addr16
jg
out
sub
mov
cmpsb
mov
aas
mov
movsl
jg
and
cmpsb
loopne
xor
outsb
pop
mov
mov
adc
pop
xor
addb
or
ffreep
imul
xchg
cmc
jp
sbb
jge
outsb
clc
sub
cmp
test
xchg
sbb
mov
repnz
mov
sub
pop
and
mov
and
jle
or
or
das
dec
mov
ja
or
pop
cmpsl
mov
mov
mov
or
js
mov
setns
push
inc
jg
push
adc
jp
add
mov
cmp
jge
aam
outsb
jb
cmp
or
int
fists
popf
inc
push
xor
jno
pop
js
in
jo
rorb
jmp
pop
sarl
or
dec
pop
test
mov
cmp
inc
cmp
dec
shlb
nop
dec
mov
or
cld
adc
or
subl
cld
push
insl
mov
dec
in
popf
mov
sbb
mov
ret
pop
lret
aaa
jmp
aam
adc
push
cmp
je
stmxcsr
xchg
or
jbe
mov
repz
or
insl
stc
xor
mov
mov
add
xor
push
pop
bound
pop
ret
adc
dec
ret
push
jl
lock
xor
dec
prefetch
or
outsl
lcall
add
sarl
les
mov
dec
mov
adc
jg
sahf
ror
or
mov
pop
scas
ja
int3
mov
push
jl
mov
pusha
mov
adc
mov
mov
push
outsl
jge
jnp
dec
jle
inc
push
inc
xchg
jo
ljmp
sub
xorb
insb
fistpll
inc
xlat
and
in
adc
sbb
dec
data16
pop
mov
sub
pusha
mov
mov
jg
lock
push
aaa
cld
imul
pop
leave
sbb
iret
mov
dec
adcl
out
pop
mov
addb
push
out
in
xor
test
xor
enter
ret
movsl
or
out
add
adc
loop
repz
push
aam
push
leave
andl
test
loopne
aas
jle
fwait
pop
into
sub
sub
je
mov
sar
in
add
bound
mov
xchg
pop
lahf
inc
test
jb
mov
ret
shlb
cmp
int
mov
inc
iret
hlt
jbe
mov
stos
mov
scas
test
xchg
fildl
push
popf
push
mov
call
adc
and
dec
inc
jmp
and
adc
jne
mov
adc
fimull
cwtl
out
mov
pop
xchg
or
outsb
dec
add
hlt
scas
stc
in
pop
lock
out
adc
or
mov
clc
mov
xor
fimull
mov
push
push
addr16
movl
idiv
in
push
std
lcall
mov
mov
push
data16
ds
lea
in
je
cltd
mov
sub
jge
ljmp
push
jge
push
cmc
push
test
fcompl
lret
pop
push
test
popa
arpl
hlt
dec
inc
outsl
pop
mov
insb
sbb
cs
lock
cmpb
pop
pop
pop
jl
das
mov
shl
and
faddp
inc
icebp
or
push
xchg
or
mov
cmp
loopne
fnstsw
icebp
jp
out
cmp
jo
inc
shll
inc
cmc
sti
subl
ja
pushf
sub
jno
leave
stc
stos
dec
pop
je
pop
fmuls
mov
mov
jnp
aaa
pop
insb
or
mov
mov
xchg
adc
mov
push
push
pop
adc
shrl
and
mov
adc
lea
add
or
mov
jae
and
mov
dec
fs
mov
jbe
in
rol
mov
xor
movd
or
dec
cmc
mov
scas
ret
push
cwtl
in
xchg
mov
es
adcb
sub
shlb
not
out
in
push
and
pop
aam
orb
mov
repz
lahf
pop
in
inc
mov
lahf
data16
jae
ljmp
or
arpl
and
mov
xor
add
loope
outsl
dec
or
mov
cmp
mov
adc
mov
mov
jmp
cmp
js
cli
mov
lods
pop
mov
push
enter
or
dec
das
fmul
jmp
mov
imulb
fdiv
adc
sarl
mov
add
adc
lret
aam
add
rorl
outsb
or
shrl
mov
pop
clc
das
incl
daa
mov
push
dec
enter
fdiv
in
xchg
icebp
xchg
movsb
jns
popl
xchg
sbb
add
pop
mov
lds
dec
xchg
mov
call
xchg
outsb
test
loop
test
pop
test
add
and
out
jne
xchg
data16
push
xchg
loope
fmuls
jl
push
pop
mov
or
sub
sahf
lods
ss
aas
sbb
push
popf
xor
mov
mov
sub
or
mov
ja
jb
xor
mov
fbstp
add
mov
clc
xor
jp
cwtl
add
jne
inc
xchg
test
lods
cld
in
clc
adc
push
stos
push
fnstenv
sbbb
mov
icebp
push
pusha
ret
or
or
mov
mov
cld
mov
mov
sti
mul
les
adc
xlat
pop
push
pop
or
push
rolb
inc
sbb
ret
sub
jg
outsb
jnp
fildl
pop
loopne
iret
pop
adc
jbe
jg
push
or
cs
adc
lret
pop
xchg
subb
sti
scas
jmp
pop
or
inc
xchg
js
mov
xor
mov
sub
add
mov
and
addb
in
icebp
lock
xchg
sub
or
mov
xor
mov
xchg
mov
sub
test
mov
cld
push
mov
rcrl
fsubl
test
in
fimull
xchg
scas
testl
loope
pusha
or
and
aaa
jns
shrl
mov
ja
dec
or
out
pop
inc
daa
and
ljmp
mov
sbb
cli
adc
push
adc
mov
shll
jnp
mov
jge
mov
cmp
dec
mov
das
cmp
imul
cmp
addl
movsl
cltd
sbb
cwtl
insb
jo
push
mov
mov
outsb
push
outsl
xchg
dec
pop
cmp
clc
xor
hlt
gs
dec
sbb
out
out
shl
imul
lret
mov
dec
insl
push
pop
or
insl
and
mov
out
add
pop
inc
adc
aad
jg
jecxz
enter
xor
mov
inc
sub
dec
scas
push
test
mov
scas
das
mov
mov
cmp
add
fisttps
mov
ja
jno
fildll
pop
push
xchg
add
rorb
and
sub
lcall
cmpl
cmpsl
ds
fwait
sbbb
cwtl
xorb
push
daa
push
bound
outsb
ja
push
fisttps
inc
mov
pop
outsb
push
mov
test
add
cmp
scas
dec
sbb
fsubl
mov
xor
pusha
gs
pop
js
cli
mov
push
es
enter
cmc
aad
movsl
or
pushf
into
xchg
mov
and
cwtl
cmp
jae
test
ffreep
inc
insb
repnz
pop
sub
jmp
std
pop
call
cmp
adc
xlat
mov
jl
xor
insb
mov
imul
or
in
aas
sbb
sbb
sub
in
jge
rorl
fwait
repnz
sti
les
lock
adc
mov
inc
loope
cmp
or
mov
pusha
push
jo
cmp
cmpsb
icebp
pop
orb
movsb
adc
inc
jno
mov
add
es
cmpsb
popa
popf
dec
sbb
ja
sub
shlb
in
or
jle
jp
mov
add
dec
jmp
inc
ret
add
stc
push
sbb
lea
add
in
pushl
sbb
stos
sub
sub
mov
dec
mov
pop
sbb
and
mov
mov
and
js
mov
fbstp
push
mov
xchg
dec
push
and
add
mov
arpl
or
or
add
stc
clc
test
pop
fbld
mov
inc
in
pop
jmp
dec
add
inc
adc
movsb
xor
loopne
outsl
loop
lds
xor
in
mov
jg
sub
or
call
cltd
xchg
icebp
inc
sbb
ficoml
shrb
shrb
dec
jne
ljmp
ret
mov
push
mov
or
add
pushf
adc
out
mov
lret
insb
adcl
push
loope
mov
loope
call
idivb
sbb
and
and
pop
and
ss
fwait
pop
insb
cli
push
xchg
cmpsl
scas
mov
fidivs
stos
mov
fwait
sub
push
dec
mov
in
dec
dec
shlb
jg
in
cwtl
ss
lock
adc
and
mov
mov
dec
xor
bound
adc
pop
jp
stos
fcoml
jmp
or
jle
sbb
mov
or
or
add
mov
rorl
adc
xchg
mov
inc
sbb
insl
push
ljmp
pushf
mov
sti
inc
fs
xchg
outsb
mov
jbe
pop
add
mov
in
jb
fldcw
lods
repnz
outsl
mov
sarb
les
test
push
lcall
mov
inc
sahf
jb
out
call
dec
in
icebp
dec
ljmp
icebp
xchg
notb
push
ss
mull
jbe
scas
pop
sub
push
lds
jecxz
jns
push
jbe
mov
cmp
and
xorb
loope
push
ret
add
lea
les
je
divl
jo
sub
out
and
jb
dec
push
xor
pushf
hlt
dec
sbb
adc
mov
shl
pop
mov
je
add
fdiv
sarb
jmp
fstl
xchg
outsl
fisttps
movsl
mov
pop
inc
test
repnz
xchg
mov
pop
outsl
pop
addl
in
dec
sub
test
jb
aam
push
int3
lcall
sbb
mov
jo
pop
test
jp
mov
mov
pop
cli
movb
out
fnstsw
call
addb
std
decb
fdivl
jo
mov
cmp
pop
mov
lods
out
add
jae
mov
js
add
in
sub
mov
sti
cmpsl
cmp
clc
js
orl
inc
mov
pop
fmull
or
test
and
sar
jbe
fisubl
mov
test
jle
jp
rol
inc
and
roll
inc
cmp
jbe
mov
std
push
or
ljmp
in
insb
adc
mov
xchg
push
and
popf
sbb
scas
push
inc
stc
ss
sarb
push
and
shl
imul
push
or
cmpsb
jbe
xchg
jle
fwait
or
daa
scas
insb
dec
mov
add
fimull
jne
lods
std
xchg
or
mov
adc
out
out
add
outsl
pop
out
nop
push
mov
mov
pop
add
int3
dec
push
mov
les
mov
insl
das
out
cmp
lock
pop
dec
dec
jne
fstpt
aas
test
mov
mov
mov
sub
movsb
aas
dec
jbe
jbe
ss
dec
add
cli
xchg
sbbl
push
mov
icebp
outsl
mov
test
rclb
subb
aad
popa
pop
jnp
ret
add
call
sub
ret
mov
add
mov
dec
sarb
inc
pusha
or
pop
sbb
adc
sbb
pop
push
and
and
clc
or
mov
sub
aaa
fcmovu
js
repz
movsl
repz
jmp
shl
pop
out
add
xchg
mov
stos
enter
push
and
cmp
lahf
mov
sti
pop
xor
jmp
ljmp
or
xor
mov
jbe
out
or
cmp
es
bound
cltd
mov
cwtl
xchg
xchg
popa
in
scas
pop
mov
cs
shlb
int
out
loope
mov
loopne
mov
jg
pop
cmp
xchg
inc
rcll
push
pop
cmp
repz
mov
push
add
test
sbb
outsb
mov
call
leave
or
dec
leave
mov
fcom
dec
inc
dec
mov
xchg
pop
mov
xor
es
cld
cld
sahf
les
in
nop
mov
ljmp
pop
sbb
cmpsb
push
dec
into
sub
movsl
das
test
loope
js
push
ja
outsb
shl
mov
int3
add
sbb
jmp
clc
cmp
cmc
mov
arpl
pop
mov
push
ljmp
sti
outsl
mov
adc
mov
sbb
fstpt
je
and
push
mov
in
xchg
incb
mov
and
test
dec
cmpsb
jge
call
jbe
mov
in
mov
xor
lret
push
mulb
pop
lock
movb
adc
mov
push
mov
xor
jb
insl
outsb
stc
adc
shlb
mov
pop
lods
or
mov
or
inc
and
cld
add
push
push
adc
hlt
dec
shlb
adc
add
xlat
dec
xor
add
inc
pop
push
aaa
or
loopne
mov
cmove
jnp
xchg
and
mov
aaa
lds
lahf
cwtl
mov
mov
add
sub
or
or
dec
cmp
xchg
adc
or
incl
inc
xor
mov
jb
fdivrs
push
cmp
xchg
dec
push
sub
jbe
cmp
loopne
lods
mov
mov
inc
je
fld1
pop
or
loopne
andl
fnsave
sbb
jno
lret
out
adc
xchg
xchg
mov
sub
adc
int3
fdivs
adc
mov
shrl
pusha
jle
push
mov
fbstp
mov
push
jle
mov
pop
mov
js
cwtl
and
insb
pop
xchg
jae
pop
subb
outsl
sbb
mov
push
push
mov
movsl
push
stos
push
mov
push
mov
xlat
icebp
add
mov
lret
mov
mov
mov
sbb
sbb
mov
fidivs
adc
sub
lock
fisttpl
fstl
lcall
test
xor
ljmp
push
rol
push
dec
insl
clc
pop
adc
repnz
ss
jl
sti
scas
or
lahf
outsl
mov
jb
push
jecxz
jle
fcmove
or
or
repnz
out
xchg
lea
jp
daa
std
cltd
repz
sub
filds
shrb
push
aaa
pop
orb
sub
push
scas
bound
hlt
lods
jnp
jnp
jl
lods
mov
adc
sbb
call
and
stc
jno
outsb
push
mov
in
sahf
les
sub
fs
add
mov
adc
pop
out
das
xchg
push
adc
add
sbb
ret
fdivrp
cmp
add
js
cwtl
push
cmpsb
ljmp
rolb
sbb
insl
add
jl
das
mov
and
xchg
cmp
cmp
loopne
in
adc
pop
icebp
xlat
add
mov
enter
loopne
sub
xchg
mov
xor
outsl
fldl
lods
push
shll
inc
mov
stos
in
and
jae
arpl
nop
leave
outsb
mov
movsb
jb
sbb
dec
nop
xchg
outsl
sarl
mov
sbb
push
pop
mov
test
lret
adcl
jne
push
insb
enter
insb
adc
mov
adc
mov
push
pusha
jp
sti
out
push
lea
lret
pusha
push
leave
cmp
lods
insl
add
call
xor
stos
insl
xchg
mov
stos
scas
mov
lock
int
and
and
test
aaa
mov
add
ss
lcall
xor
iret
arpl
cli
loope
push
pusha
popa
push
clc
aas
mov
test
cmp
negb
cmpsl
rorl
sbb
test
pusha
pop
js
pop
inc
test
pop
push
test
test
or
scas
add
push
cmp
aad
sbb
dec
in
ret
cltd
cltd
sub
je
adc
outsb
call
or
stos
pop
or
cmpb
arpl
push
xchg
xor
cmp
mov
sbb
jmp
push
xchg
sub
ja
xchg
ja
jne
hlt
add
inc
pop
addb
dec
incl
rcrl
mov
push
push
push
ja
std
ljmp
in
shlb
jno
out
lds
inc
mov
mov
imul
and
mov
es
xor
inc
push
push
rcl
mulb
mov
cmpsb
xlat
sbb
push
subl
fcoml
fucomp
push
dec
loop
incb
scas
jnp
lcall
push
mov
rcll
mov
cmc
rol
fildl
in
fldenv
loope
mov
mov
ror
leave
aaa
loop
xchg
mov
mov
xor
mov
mov
lods
nop
es
lds
mov
sub
shll
rorb
or
setae
jp
mov
mov
outsb
rolb
sbb
push
cmp
inc
add
mov
ds
fwait
enter
les
jp
ret
andnps
lock
aaa
or
pop
movsl
int
enter
push
shll
aad
cwtl
and
xchg
in
decl
xor
mov
cwtl
jle
push
ss
fdivl
in
test
add
addr16
jne
add
inc
stc
imul
jbe
testb
ljmp
push
jecxz
xor
test
add
xchg
and
sbb
push
add
jp
mov
jecxz
clc
mov
and
test
fcmovnu
dec
sub
cltd
js
sub
push
fdivrp
imul
sbbl
push
ja
jge
push
mov
sbb
test
iret
lods
xchg
test
xor
inc
fs
ret
inc
push
nop
movsl
js
into
add
cmp
pop
ret
movsl
dec
mov
lret
mov
dec
in
cmp
popf
add
sbbl
cmp
pushl
fistpl
pop
popa
and
push
fwait
mov
xchg
sub
xchg
rolb
xor
push
sbb
lahf
arpl
adc
icebp
mov
rorl
add
push
incl
and
test
popa
and
jne
mov
lds
inc
insl
call
mov
cwtl
mov
push
add
sbb
adc
shrb
fldt
pushl
inc
mov
test
mov
push
fcmovbe
jle
mov
pop
adc
pop
ds
xchg
push
sub
push
int
cmpsl
jo
pop
cmp
jle
inc
jne
xor
lock
jbe
mov
js
push
dec
icebp
dec
jns
rcl
mov
ret
ret
cmp
in
inc
cmp
or
mov
xlat
mov
jne
fstp
mov
pop
aaa
jmp
mov
push
out
lods
gs
sub
out
ret
push
testl
mov
movsl
adc
cmp
push
xor
jbe
jp
rclb
fistps
cli
xorb
fs
mov
cli
mov
scas
lret
sbb
cld
lea
ljmp
and
mov
xor
mov
sbbl
or
xor
lds
test
mov
xchg
std
dec
fnstenv
xor
shll
imul
ret
or
lods
and
fidivrs
inc
andl
enter
rorw
movsb
push
pop
adc
xchg
shll
sub
adc
test
ficompl
xchg
and
add
ds
dec
hlt
mov
in
mov
lret
pop
cwtl
pop
push
cmpsb
inc
jns
pop
add
adcl
arpl
jmp
test
test
sbb
lods
mov
mov
sbb
idivl
pop
mov
xchg
sub
jecxz
in
sub
mov
pop
mov
and
xchg
arpl
dec
pusha
or
sbb
pop
arpl
clc
and
fadd
ret
adc
frstor
aam
pop
mov
jae
mov
mov
ret
inc
in
pop
push
ret
inc
dec
add
xor
xchg
or
mov
sbb
imul
flds
mov
push
std
scas
sahf
pop
dec
dec
sbb
dec
in
xchg
incb
xchg
xchg
or
and
lahf
repz
mov
mov
jmp
mov
pop
mov
aam
enter
sub
filds
or
mov
xor
mov
lods
xor
pop
jno
xchg
or
mov
nop
xchg
mov
push
xor
inc
push
mov
mov
dec
mov
cmp
shll
inc
pusha
push
add
mov
mov
fadd
xchg
subb
in
sbb
fdiv
lea
in
fdivrl
lds
mov
jle
push
pop
xchg
lret
cmp
jecxz
ss
mov
repnz
xor
sti
or
push
in
sbb
sbb
sub
out
cmp
mov
or
lret
ret
pop
sti
pmaxub
aad
dec
xchg
cltd
inc
movsb
pop
scas
fildl
or
stc
rorb
mov
fisttpll
or
mov
lahf
mov
jb
xchg
mov
fs
fisttpl
and
xchg
pop
cs
shrb
mov
loopne
jg
mov
js
jb
scas
or
cwtl
xchg
movsb
cmpsb
in
loopew
mov
repnz
cmp
dec
xchg
out
sbb
sbb
aas
int3
or
shrl
jb
sbb
popa
dec
or
roll
fstps
scas
adc
into
xchg
cmp
std
xchg
mov
xchg
cwtl
ds
add
mov
test
add
cld
mov
xchg
ret
enter
add
jbe
shll
pop
ds
outsl
mov
and
mov
push
jbe
pop
stos
push
xchg
inc
pop
jo
jl
lcall
or
mov
xor
push
repnz
inc
mov
sub
and
or
fdivrp
cs
ret
aad
jle
mov
mov
mov
std
mov
aaa
pop
mov
adc
fs
sbb
stos
stos
mov
add
addl
clc
dec
fucomip
rcr
decb
decl
shr
xor
insb
or
ret
jnp
mov
call
cmpl
mov
mov
adc
jle
xlat
loop
add
pop
cs
adc
jmp
dec
sub
mulb
addr16
cli
ljmp
loop
dec
or
adc
mov
push
faddp
inc
sbb
rcll
arpl
aam
sbb
mov
xchg
movsb
xchg
mov
adc
inc
js
pop
push
movsb
fidivs
add
mov
shll
cmp
mov
fldenv
sbb
or
mov
addr16
stos
aam
xchg
mov
add
cmp
sbb
mov
push
lds
or
incb
ljmp
sbb
stos
pop
push
pop
push
es
leave
adc
push
mov
out
jnp
fistpll
xchg
pop
adc
in
xchg
pop
sbb
sub
push
push
mov
adc
rolb
mov
ret
and
jmp
mov
sbb
sub
icebp
je
gs
add
pop
jbe
outsl
incl
cld
aam
lds
mov
pusha
jp
or
fiadds
add
pop
cmp
add
cmp
daa
mov
aam
add
mov
add
ljmp
nop
aam
cs
adc
jno
pop
cmpsl
adc
or
dec
adc
movsb
ret
push
sub
pusha
sbb
lcall
add
shll
and
jg
mov
mov
dec
mov
decl
sub
popf
lea
rclb
push
mull
stos
imul
lret
add
shlb
insb
mov
aad
ret
jns
shlb
dec
and
cmp
call
pushf
and
xchg
push
repnz
jg
out
data16
lods
jb
cmp
rclb
jle
adc
aam
mov
dec
inc
inc
xor
or
pop
push
es
jne
jecxz
in
pop
lret
pop
push
adc
rolb
ret
dec
push
mov
jge
push
in
mov
add
lcall
fs
gs
mov
insb
pusha
subb
scas
or
or
das
mov
inc
mov
ret
add
dec
mov
insl
push
sub
imul
mov
dec
inc
lods
add
jb
mov
jmp
rcrb
fwait
jl
inc
icebp
adc
push
lock
and
push
sbb
sbb
shll
js
mov
jo
fwait
in
shr
test
sub
test
xor
outsl
data16
scas
jbe
mov
fsubrl
sbb
leave
xor
push
movsb
add
ljmp
mov
or
mov
ds
mov
inc
stos
xchg
ja
lea
dec
jno
je
in
mov
push
loopne
sub
into
sbb
mov
scas
sahf
bndldx
add
or
xchg
enter
stos
fisttpll
mov
inc
addr16
push
movsl
lods
ret
ja
mov
mov
mov
push
sub
mov
push
push
popa
cmp
sub
loope
sbb
xchg
shlb
mov
ja
pop
outsb
test
inc
in
loop
pusha
pop
cmc
pusha
adc
movl
dec
pop
les
ss
or
leave
test
ljmp
es
into
cmp
pop
imul
mov
mov
and
mulb
or
aaa
pop
sbb
nop
mov
jnp
sbb
fistpl
jns
es
clc
jg
adcb
cli
add
in
subb
inc
into
mov
jge
cmc
inc
ljmp
ljmp
mov
hlt
jle
jbe
jg
scas
mov
sub
out
push
xor
popa
add
scas
sub
ret
outsb
mov
aaa
aad
data16
cmp
xor
icebp
push
mov
lds
adc
rol
pusha
jecxz
aad
mov
not
jle
stos
fwait
cli
mov
dec
loop
xchg
andl
mov
dec
lds
mov
inc
sub
jp
mov
push
xchg
scas
in
pop
ffreep
cmpsb
je
add
call
push
fisubrl
jnp
sub
and
mov
cmpsl
scas
push
out
or
mov
fadd
cmpsb
xchg
out
pop
outsb
int
mov
sbb
pop
and
inc
inc
iret
roll
xlat
jae
andl
mov
shll
cmp
mov
sub
pop
inc
cmp
stos
outsb
jl
push
pop
arpl
mov
mov
inc
sub
pop
mov
int3
jb
push
scas
rep
repz
stos
or
pop
inc
sarb
mov
mov
rcrl
xchg
jne
mov
aad
scas
sub
addl
lods
arpl
and
mov
es
lds
testl
scas
daa
pop
lods
std
xchg
mov
ja
imul
scas
fcmovne
inc
adc
pop
jo
or
sbb
add
mov
mov
mov
jecxz
xor
stc
test
lods
movsb
decb
cltd
push
not
push
inc
jmp
movaps
inc
je
jno
xchg
dec
int3
iret
adc
add
mov
ret
cltd
xorl
das
in
push
sarl
clc
mov
or
in
sub
xor
sub
pop
jno
rclb
mov
arpl
jbe
mov
jle
dec
jg
repnz
lds
jg
jg
pop
mov
add
xor
xor
es
mov
lret
mov
movsb
sbb
push
jmp
cmpsb
inc
push
mulb
fildl
ss
ret
mov
test
pop
std
xchg
dec
in
sbb
dec
inc
sub
or
or
fcmovnu
movsl
inc
push
out
shl
aad
enter
ud1
push
and
pop
jg
sbb
clc
outsl
loopne
aam
aaa
movsl
daa
ja
ret
sub
push
std
pop
add
rol
mov
in
pop
mov
mov
sti
cmp
dec
ja
fcoml
pushf
inc
xchg
xchg
sub
fisttpl
sbb
fstl
cmp
movsl
js
int3
lods
in
es
mov
push
ret
jge
adc
subl
pushf
fimull
xchg
in
loop
add
sbb
jg
in
xor
or
cli
and
popf
dec
kaddw
inc
mov
test
xor
dec
mov
adc
cwtl
aas
out
test
movsb
pop
sub
movsb
add
jle
add
mov
pushf
in
and
in
push
pop
sbb
fistpll
in
subl
jo,pt
mov
pusha
xchg
out
sbb
call
push
jnp
ret
loope
sbb
aad
cwtl
lret
inc
push
pop
lcall
and
shrl
call
les
insl
mov
ficomps
les
mov
cwtl
daa
in
fisubrl
cmp
add
arpl
jmp
jmp
sahf
sub
rolb
and
bound
push
in
pop
test
sub
xchg
out
dec
out
lock
test
xchg
js
das
and
push
stc
cmp
stos
inc
fdivrs
mov
daa
lahf
add
pop
insl
jecxz
push
mov
adc
sub
inc
aad
xor
sbb
adc
lock
fcoms
out
rclb
adc
es
pop
adcb
dec
xchg
and
push
sbb
out
ret
ret
push
sub
xchg
sbb
and
dec
popa
rcll
push
jge
idiv
xchg
inc
push
ljmp
or
pop
fsts
jns
mov
outsl
repz
pop
push
insl
jp
aad
nop
movsb
in
inc
xor
push
jge
leave
add
xchg
pop
lea
cli
fstpt
hlt
or
push
in
push
rorl
sbb
mov
mov
pushf
sbb
pop
xor
adc
ret
pop
fcmovnu
mov
sbb
push
xchg
test
fisubrs
push
jbe
pop
sbb
cmp
fildll
fimuls
sbb
jmp
pop
jl
adc
sub
inc
xor
push
andb
or
lods
adc
clc
mov
filds
mov
mov
inc
adc
fildll
sar
mov
outsb
fwait
jbe
or
cli
sbb
mov
cwtl
or
inc
call
test
les
call
inc
or
adc
add
addr16
jne
call
cwtl
pop
push
jg
xlat
mov
dec
or
aaa
pop
jecxz
mov
loope
inc
mov
xchg
mov
push
inc
mov
pop
push
or
xchg
iret
jns
pop
pop
xchg
jge
aad
dec
add
mov
lods
sti
jmp
fcoml
mov
sub
cli
adc
xor
jg
add
iret
cmp
ss
mov
hlt
adc
das
mov
outsl
mov
and
adc
fiadds
mov
mov
imul
pop
stc
xor
mov
jle
adc
ja
pop
adc
icebp
xchg
xor
inc
icebp
jmp
or
sbb
pop
imul
sbb
cld
mov
or
fcmovnb
shll
outsl
rcrb
or
xchg
or
cmpb
fcmove
cmp
add
mov
and
adc
divb
adc
dec
data16
in
cmp
cmp
jmp
push
cltd
lahf
lea
push
lock
das
fdivrl
add
jge
add
xchg
xchg
add
or
cmp
dec
data16
add
sub
div
aaa
adc
scas
mov
sbb
jmp
push
sbb
cmp
je
in
mov
shlb
push
sub
loopne
push
les
ljmp
aaa
dec
repz
or
cwtl
mov
dec
and
adc
push
fcom
pop
jb
xchg
or
iret
pop
inc
mul
pop
add
into
hlt
jge
insl
call
sub
fcoml
sub
loope
mov
sahf
pusha
cmp
rorl
sbb
nop
mov
repnz
jmp
clc
into
mov
xor
testb
aaa
mov
popa
pop
jae
xchg
arpl
aaa
xor
outsl
mov
into
xchg
cltd
xchg
movsb
icebp
outsl
jl
cwtl
or
rolb
pop
loope
iret
inc
daa
sub
jge
loop
outsl
insl
adc
outsl
in
ljmp
ds
rcll
mov
loope
pop
or
dec
mov
sbbl
faddl
mov
pusha
pusha
test
leave
mov
incb
xchg
or
cmpsb
cltd
in
inc
add
popf
pop
sbb
scas
les
loop
test
lret
mov
fs
nop
and
shll
mov
xchg
jne
inc
lea
dec
cmp
or
int3
push
push
pop
pop
sbb
push
shll
sbbl
cmp
lret
fwait
mov
jge
cmc
sbb
xor
sti
lds
shlb
sub
add
roll
js
mov
fptan
loopne
stc
sbb
ds
mov
xorb
leave
loope
mov
jbe
push
xchg
mov
mov
cmpsb
push
cmpl
mov
push
inc
repz
icebp
inc
lock
xchg
xchg
imul
daa
fwait
iret
xchg
jb
movsb
pop
mov
cs
insb
add
loopne
cs
leave
sbb
fdivr
pop
insb
int
xchg
shlb
in
inc
lea
lock
cmpsb
daa
add
imul
mov
insb
xor
mov
add
popa
popf
cltd
test
mov
and
outsb
rcll
in
scas
aam
das
xchg
xchg
add
dec
jge
xchg
mov
icebp
and
leave
mov
dec
sahf
mov
cs
ret
sub
xchg
popa
xchg
lahf
hlt
or
mov
je
test
les
fiaddl
and
pop
rcrl
jg
in
js
push
jo
sub
push
ficomps
jmp
enter
adc
les
loop
xchg
add
lcall
bound
out
jp
ljmp
mov
inc
es
imul
enter
dec
mov
test
fisttpl
movsb
ret
sahf
adc
sub
mov
loope
wrmsr
outsl
inc
ficomps
mov
jmp
repnz
mov
inc
add
sahf
movl
mov
xchg
jo
jle
cmp
mov
dec
cld
sbb
testl
cmp
aad
cmp
fsts
insl
aad
fbstp
sti
dec
adc
jmp
xchg
dec
fildll
fcom
mov
cltd
adc
inc
add
push
in
adcb
and
loop
bound
push
jnp
inc
subb
pop
or
cld
popa
fsubs
ds
add
movsl
dec
pop
xchg
fwait
sbb
push
push
push
repz
and
sub
ficoms
sub
imul
push
adc
inc
in
xor
pop
mov
hlt
in
cmp
ja
test
pcmpgtd
mov
xchg
add
cs
dec
test
ret
nop
jo
outsb
mov
std
loop,pn
adcl
out
jl
mov
adc
ret
adc
fidivs
cmpsb
and
loop
mov
mov
out
dec
fsubrl
sarl
inc
pop
outsl
mov
push
rcrb
shll
jns
pop
ret
mov
pop
jbe
mov
adc
mov
andb
fisubrl
pop
fldl
sbb
test
cmpsb
mov
loopne
pop
ljmp
cmp
das
call
je
bound
inc
scas
add
mov
subb
jg
shll
shrl
idivl
sub
pop
lret
add
gs
mov
jmp
movl
jno
pop
popa
pop
je
scas
loop
push
adc
push
clc
cwtl
dec
mov
dec
dec
fisubrs
dec
test
ds
icebp
cli
fisttpl
xor
mov
lds
ret
mov
mov
mov
xor
mov
repnz
js
dec
xchg
cmpsb
inc
mov
roll
test
clc
push
mov
add
inc
sub
dec
out
cmpsl
or
mov
imul
pop
inc
mull
sub
mov
jo
loope
jmp
push
insl
aas
in
sbb
sbb
cmpsb
mov
call
fisttpl
mov
andb
adc
pop
cmpsb
mov
into
sub
gs
add
and
mov
arpl
adc
insb
mov
mov
push
adc
adc
cmp
test
out
add
inc
sub
rclb
jecxz
jl,pn
mov
push
cmpb
lret
add
ds
lea
sahf
or
stos
mov
sbb
stos
inc
imul
xor
rcll
aam
sarb
aaa
ljmp
mov
mov
fistpl
cmpsl
pop
or
data16
aas
mov
pop
mov
or
fimull
and
scas
adc
dec
out
int
sbb
inc
jg
xchg
iret
sub
sbb
adc
mov
sti
push
sub
push
shrb
loop
gs
adc
cmp
jo
cmpsl
xchg
dec
mov
call
out
shrl
jp
outsl
fldl
fists
xchg
xor
jmp
stos
aas
fldl
inc
mov
cmpsb
mov
cmpsb
or
push
xlat
inc
daa
nop
addb
sub
paddb
add
mov
adc
mov
sub
and
imul
push
or
xor
or
mov
xor
dec
mov
ror
xchg
cli
push
addr16
mov
push
in
jp
lods
std
inc
inc
jbe
aam
out
cmp
mov
mov
or
test
fwait
loope
jb
xchg
add
mov
push
ja
lea
adc
repnz
maxps
popf
ljmp
mov
jmp
push
cmpsb
sbb
adc
mov
mov
xor
mov
lahf
push
jp
push
or
mov
mov
dec
push
mov
and
or
mov
jne
aas
hlt
das
ljmp
mov
push
xor
dec
out
sarl
cltd
mov
lret
cmc
sub
enter
or
mov
icebp
or
sbbb
stos
jg
aam
add
fidivrs
cld
inc
sbb
jl
push
sub
mov
hlt
xor
jbe
push
test
adc
es
fwait
iret
sbb
lcall
cli
vmaxpd
jle
pop
int3
pop
ja
cmp
inc
pop
ljmp
les
lock
jl
int3
dec
inc
inc
or
arpl
add
pop
in
sbb
mov
adc
in
mov
std
cli
push
sub
je
or
xchg
xorb
inc
inc
insl
cs
mov
pop
js
jo
xchg
xor
pusha
les
call
repnz
movl
mov
dec
push
mov
je
fbstp
sbb
mov
push
jp
push
inc
je
jmp
inc
daa
mov
cmpsl
inc
icebp
icebp
push
mov
mov
fcom
out
roll
inc
fmuls
loopne
hlt
mov
pop
xchg
xchg
outsb
pop
or
imul
xlat
push
pop
inc
sbb
mov
loop
mov
repnz
mov
inc
incb
xor
push
fimuls
jge
sbb
les
inc
push
xorb
xor
sbb
or
fbstp
and
push
lret
dec
cmpsl
jbe
mov
pop
fwait
cs
inc
adcl
push
test
jl
stos
lcall
insl
loopne
xorl
or
mov
outsl
ret
nop
or
mov
jge
mov
imul
sbb
adc
addl
jne
xor
shl
cmpsb
cli
mov
insl
rcll
fists
shrb
rolb
outsb
es
into
mov
jle
test
outsl
popa
js
ret
xchg
mov
imul
jb
lods
pop
sub
or
mov
mov
add
pop
subl
jns
mov
push
das
xor
fs
lret
push
sbb
cmp
inc
push
arpl
pop
pop
movsb
fs
or
jge
mov
pop
outsb
mov
add
bound
xchg
mov
fisubrs
int3
decl
mov
lea
sbb
dec
roll
jnp
inc
inc
and
push
lds
or
repz
arpl
pop
add
bound
outsb
cmp
push
clc
xchg
enter
adc
cmp
pop
addr16
cld
int
imul
arpl
gs
mov
mov
add
mov
cmpsl
mov
xor
pushf
inc
jg
imul
scas
sub
fdivl
int3
cmp
cmpsb
xchg
ss
mov
adc
ret
xchg
faddl
sub
pop
sub
dec
nop
imul
adc
fcomi
test
jg
test
inc
mov
sbb
sub
lods
and
popl
ficomps
orb
int3
sbb
ja
fwait
jecxz
pop
pushf
add
loopne
lret
mov
mov
in
sub
inc
adc
ret
mov
lret
call
sub
test
cmp
icebp
xlat
int3
dec
push
lds
or
sbb
out
push
das
fidivrl
mov
or
cmp
dec
add
lret
out
mov
decl
imul
mov
and
and
adcb
push
call
addr16
cmpsl
adc
lret
pop
insb
sub
pop
push
cmp
mov
xchg
adc
or
jbe
push
icebp
pop
mov
movb
movsb
xchg
and
cli
and
subb
adc
in
fcoms
dec
cmc
insl
jg
in
pop
inc
push
repnz
fstpt
mov
mov
add
inc
movsb
loopne
cmp
sbb
jne
daa
or
mov
scas
push
adc
je
cmc
mov
fistpl
push
dec
lds
shrb
mov
lret
pusha
add
sub
and
inc
adc
mov
jb
aaa
sub
out
and
lods
outsb
pop
adc
lahf
adc
cwtl
mov
lcall
fildl
mov
in
and
into
sub
mov
pop
icebp
add
test
adc
xchg
mov
mov
je
mov
push
out
push
je
push
cmc
sbb
lock
and
repz
into
je
push
mov
jae
xor
mov
icebp
add
dec
cmp
inc
mov
lret
fstpt
push
movsb
psrlw
lock
ret
xor
dec
dec
cli
cmp
pushf
jo
sbb
test
fs
xlat
xor
xor
ja
jns
xchg
cmc
push
aad
fucomi
xchg
and
mov
in
sbb
in
addr16
std
mov
loope
mov
divb
enter
ja
sti
mov
sub
jmp
rorl
and
and
rolb
mov
mov
popf
dec
stc
mov
aad
mov
mov
and
push
jns
push
icebp
mov
xchg
jg
mov
repnz
aad
mov
dec
rcr
les
ficoms
into
sti
xor
les
add
mov
sti
inc
sbbl
outsl
or
sbb
mov
push
cwtl
pop
cmpsl
mov
jl
sahf
shr
mov
sub
xor
or
sub
cmp
mov
imull
pop
mov
inc
ffreep
sbbb
fistpll
outsb
das
pusha
jle
xor
push
sbb
push
dec
push
das
outsb
sub
popf
sbb
aad
scas
test
pop
fisubrs
jg
enter
dec
cwtl
add
icebp
adc
jl
inc
fwait
test
sbb
lret
sbb
mov
test
sbb
fdivp
inc
sbb
imul
in
jbe
aaa
push
std
cmp
push
xorb
add
cld
negb
out
add
ds
add
jp
loopne
orl
outsl
fcoms
add
dec
push
dec
les
fwait
pop
mov
mov
inc
xor
cmp
insl
pusha
or
test
in
fadds
push
jg
aaa
out
cs
outsl
insb
pop
xor
inc
xor
dec
add
and
mov
push
pop
das
add
or
loopne
or
cmp
in
rorl
ss
mov
lds
repz
int3
inc
inc
pop
aad
enter
or
xor
dec
shll
inc
cmpsl
insl
jnp
in
mov
jle
arpl
jmp
and
push
pop
pop
jl
popf
mov
js
mov
xchg
or
mov
fdivr
and
stos
adc
adc
test
add
fwait
mov
xlat
jne
and
int
ja,pn
jecxz
inc
loop
sbbb
pop
mov
outsl
movsb
and
mov
fldt
mov
mov
mov
sub
xor
cli
inc
mov
shrb
cmpsb
fidivrl
push
leave
add
out
clc
mov
adc
icebp
dec
pop
mov
mov
push
popf
sub
sbb
xlat
jg
in
into
loopne
mov
add
add
iret
push
scas
mov
cli
mov
sub
mov
or
push
bound
je
inc
lock
lock
iret
cli
xor
or
pop
mov
scas
lock
popa
subl
ja
mov
inc
and
out
adc
or
call
sub
jne
mov
lcall
andl
andl
mov
popa
push
stos
xor
adc
mov
inc
and
hlt
xchg
add
jmp
icebp
movsl
push
lods
mov
mov
stos
sbb
pop
jns
loope
sbb
outsl
mov
dec
inc
jp
cmpsb
rol
or
ss
pop
push
add
int3
imul
xchg
imul
pop
jmp
popf
sahf
push
pop
dec
xchg
pop
fbld
fimull
pop
xchg
lea
fmull
pop
xor
mov
or
mov
dec
test
adc
and
inc
pop
xchg
sbb
dec
mov
or
imul
cmp
jnp
pop
jp
outsl
ljmp
lock
lods
adc
inc
pop
stc
dec
in
cli
cwtl
mov
imul
dec
popf
xchg
imull
cltd
in
ret
data16
mov
xchg
cmc
add
push
jecxz
lods
adc
les
fwait
movsl
mov
fucomi
divb
pop
das
bound
push
stos
mov
pushf
cmp
mov
stos
in
dec
sbbb
imul
xchg
ret
jmp
in
inc
adc
xchg
in
clc
ror
push
mov
jl
mov
pusha
sub
stos
adc
arpl
push
scas
or
mov
dec
mov
lock
mov
pop
xor
std
aaa
jbe
sti
je
mov
jle
nop
xchg
dec
shrl
call
push
cmp
jmp
fsubrp
jbe
mov
and
xchg
jno
sbb
scas
mov
ljmp
jbe
scas
test
outsb
jge
xchg
fdivrp
outsl
fs
or
fisubrs
pop
inc
inc
mov
dec
sub
jo
pop
jne
pop
cmpsl
or
sub
pop
aaa
xor
pop
icebp
add
lock
mov
insl
dec
inc
bound
lds
lds
adc
or
test
shlb
lea
scas
jbe
jle
fldt
and
or
xor
je
div
fadds
stos
lods
mov
pushf
xchg
cmpsl
mov
mov
loopne
xchg
adcb
aas
dec
in
mov
shr
jo
arpl
movl
out
sbb
negl
not
xlat
xor
arpl
aas
cld
xchg
xchg
clc
loop
loopne
aam
loope
cmp
lods
imul
or
fcomi
lods
rolb
inc
sbb
sti
push
mov
andb
inc
push
test
bound
lret
fs
ja
jbe
jmp
inc
dec
sub
scas
push
sbb
push
dec
pop
push
scas
scas
clc
xchg
mov
push
mov
adc
fisubl
fldt
sub
xchg
add
mov
aad
cwtl
cmp
pop
rcll
test
andl
mov
push
jp,pn
jnp
add
push
add
mov
sub
adc
bts
js
mov
mov
test
in
inc
mov
es
aaa
dec
ror
jb
inc
test
ret
mov
fs
jo
popa
movl
ljmp
cmp
call
je
loope
sbb
aam
jno
stos
movsl
xor
idivl
rorl
mov
subl
jl
push
rcrb
je
ja
push
fsubrs
mov
stos
ds
test
and
es
mov
outsl
push
pop
cld
fstpt
mov
cld
sbb
imul
pop
mov
lretw
xorb
push
xor
cli
pop
dec
add
dec
lret
clc
or
orb
decl
test
mov
add
std
push
lret
movsl
ret
cli
lods
mov
push
sub
ss
cli
cmpsl
mov
jnp
stc
xchg
rol
jnp
cld
movsl
sbb
jmp
add
in
xchg
jns
adc
mov
mov
ret
inc
jg
out
mov
out
lds
push
mov
aaa
adc
das
std
sarl
andb
xchg
ljmp
mov
lea
test
fnstenv
icebp
lock
mov
clc
sub
adc
test
pop
mov
inc
test
mov
jo
xchg
pusha
inc
mov
push
xchg
and
cli
xor
xchg
jbe
jmp
mov
cmp
movsb
add
jg
cmc
ffreep
sub
pop
call
jle
imul
mov
add
daa
push
popa
xchg
push
cmp
sbb
inc
fstp
outsb
mov
ds
xor
inc
aaa
push
lds
mov
inc
inc
adc
jb
movsb
xchg
aam
xchg
cmpsb
and
ficompl
cmp
popa
jno
or
sbb
pop
mul
push
mov
scas
ret
jmp
jbe
bound
xor
cwtl
cmc
jns
movsl
stos
das
dec
xchg
hlt
in
mov
xchg
lea
cld
mov
mov
push
jl
add
sti
xor
pop
aad
movsb
mov
mov
cmp
adc
or
aaa
hlt
es
loopne
adc
sarb
movsl
or
ret
cmp
sbb
add
jne
dec
sub
add
es
enter
jp
pop
pop
repnz
mov
mov
and
clc
fsubl
pop
dec
mov
pop
mov
cli
pop
push
sbb
mov
fcmovbe
push
aaa
add
xchg
test
aad
mov
fcomps
jle
nop
mov
or
insl
mov
lahf
jnp
lock
test
mov
add
sti
mov
pop
jle
push
fdivr
cmc
or
mov
mov
call
mov
push
jb
dec
iret
ret
sarb
sbb
loopne
stos
mov
pop
dec
xor
outsb
scas
dec
or
xchg
add
in
sarl
or
lock
inc
mov
sbb
mov
sub
addr16
lea
cmp
aaa
popa
in
sub
adc
stos
dec
sub
xchg
or
jns
repnz
int
xchg
ja
insl
sbb
incl
pusha
pop
inc
adc
in
sub
mov
mov
sub
push
push
mov
jmp
add
xlat
in
sub
lds
loop
aam
rcrl
in
dec
sub
cld
mov
mov
mov
enter
xlat
mov
imul
pop
into
inc
stc
adc
and
inc
inc
mov
sbb
inc
mov
jge
inc
test
rcll
pusha
daa
xchg
or
mov
js
cli
loop
subb
popf
jp
push
fcom
inc
int
lea
add
push
outsb
sub
ror
jae
xchg
mov
push
mov
xor
dec
inc
or
push
lahf
lcall
in
inc
negb
enter
test
into
mov
ds
push
pusha
mov
mov
pushf
mov
or
rorl
popf
jg
out
rolb
cmc
nopl
add
js
pop
mov
arpl
mov
sbb
lret
lock
adc
add
loopne
ss
out
push
xchg
outsb
mov
rorb
push
mov
push
mov
imulb
adc
cmpl
fmull
sahf
imul
xor
sarb
mov
sbb
aaa
push
dec
push
xchg
mov
sub
test
test
push
jbe
cmp
and
movsl
mov
mov
pop
jl
and
pop
ja
neg
into
addr16
fsubl
pop
outsl
mov
cmc
cltd
in
inc
adc
mov
push
mov
mov
out
mov
sarl
xor
mov
sbb
jmp
ror
pop
add
fisttpll
pop
inc
aad
pop
mov
aas
outsl
stos
repz
sub
test
inc
icebp
dec
jge
outsl
cmpsb
cmpxchg
pop
xor
ja
ja
inc
loopne
xor
popf
repnz
cmp
pop
outsl
mov
cli
lret
inc
xlat
iret
aad
outsl
std
gs
pop
mov
cmp
lret
sbb
xchg
rolb
filds
push
fisubrs
mov
andb
add
aaa
in
data16
jecxz
add
push
decl
jge
fdivs
cmp
xchg
and
test
cmpsb
dec
adc
lods
mov
mov
int3
push
or
fimull
jb
incb
xor
xor
roll
sbb
adc
insl
je
adc
inc
dec
xchg
iret
insl
pop
dec
push
dec
fists
xchg
ret
pop
cs
lret
sti
cmpsl
or
push
xchg
add
inc
lods
xchg
mov
add
sbb
dec
xchg
cmc
aaa
pop
insl
mov
xor
add
xlat
jp
cmp
cmpsb
fisubrl
inc
lahf
pop
mov
pop
daa
jle
inc
adc
push
mov
std
pushl
repz
rolb
cmp
fbstp
cld
cmpsb
pop
push
sub
fwait
adc
rol
push
ret
sub
adcl
leave
shll
inc
pop
xchg
movsb
mov
hlt
subl
shl
mov
xchg
popa
pop
push
data16
jge
and
mov
mov
xor
push
or
fwait
call
mov
aaa
jb
add
test
lcall
ja
xor
cs
nop
or
xchg
fiaddl
mov
enter
cmc
outsl
ret
adc
rorb
pop
cli
data16
lea
sbb
ficomps
lock
cmp
sbb
jbe
xchg
pop
mov
loope
fcomps
paddb
mov
jge
icebp
push
jne
and
mov
or
test
xchg
or
cld
mov
lock
je
xchg
inc
or
cmp
mov
dec
cs
shr
jp
out
insl
cltd
jbe,pn
push
pop
gs
fwait
inc
add
data16
sub
popf
jae
data16
inc
dec
adc
ja
or
dec
cs
hlt
mov
jb
insb
mov
outsl
inc
movsl
shlb
dec
mov
dec
xlat
inc
lods
or
dec
aaa
cs
adc
ds
and
rcrl
orb
pop
loopne
js
mov
pop
dec
aam
inc
add
sub
subl
mov
mov
push
mov
adc
jns
stos
xchg
cmp
push
fiaddl
sub
mov
lods
xchg
sbb
dec
mov
xor
push
mov
cli
sahf
cmp
and
fidivs
fstpt
mov
and
dec
xchg
or
jg
sahf
fs
rorl
in
mov
or
cmp
adc
mov
xchg
jle
sub
ss
std
decl
mov
sbb
insb
mov
sbb
mov
das
inc
insb
cmp
popa
nop
fsubrl
iret
leave
test
hlt
mov
sti
xchg
mov
arpl
xchg
scas
cmovl
jb
nop
shl
fldt
lret
mov
ds
mov
pop
push
add
mov
scas
jb
ret
push
inc
and
mov
pop
dec
jbe
sbb
xorb
scas
dec
pop
fdivs
bound
hlt
icebp
outsb
loope
rcr
or
aas
fs
push
rcll
mov
jbe
in
push
dec
add
jl
insb
pusha
push
sub
in
and
cmp
cli
outsl
je
mov
xchg
xchg
mov
data16
int
fsts
push
cmp
and
ret
mov
fidivrl
add
cltd
mov
lods
jge
inc
adc
mov
in
or
arpl
daa
and
outsb
jne
jge
dec
out
test
pop
aaa
movsb
push
lods
leave
sub
mov
push
popf
enter
mov
or
mov
adc
dec
fistps
fildl
loopne
and
inc
inc
arpl
incl
lods
push
and
inc
stc
aas
xor
shll
iret
inc
pop
sti
pop
jbe
jae
je
int
mov
shl
add
mov
push
js
jge
leave
xor
sbb
jae
and
cld
mov
push
stos
shrb
mov
adc
cli
mov
mov
xchg
xor
dec
int
mov
jg
pop
fbld
xchg
sub
loop
mov
testb
out
push
fidivs
data16
stc
and
mov
clc
outsl
mov
mov
cltd
adc
iret
xor
xchg
repz
push
pusha
push
je
fidivl
jmp
xchg
mov
outsb
pop
loop
push
adc
insb
or
jg
pop
mov
cmp
mov
insb
pop
push
int3
sti
xchg
roll
mov
scas
cmp
cmp
and
push
mov
adc
enter
test
mov
in
pop
vsqrtss
test
mov
lret
pop
push
or
mull
frstor
jno
hlt
arpl
pop
push
mov
out
outsl
add
cltd
sub
popf
movsb
jns
icebp
mov
xchg
jnp
adc
adc
push
jbe
es
rcll
mov
scas
ljmp
add
fisttpl
xchg
xchg
popa
jo
outsb
push
jle
cmp
push
cmc
sub
push
jo
mov
adc
aad
aas
pop
outsl
jo
mov
outsl
test
js
jne
sbb
lahf
outsb
xchg
dec
xlat
push
arpl
inc
inc
js
insb
test
cmp
dec
fcmove
dec
lahf
push
repnz
popl
in
bound
in
jle
or
int
icebp
aas
lea
cmpl
and
sbb
cmp
out
and
pop
mov
jecxz
loope
scas
or
push
cltd
add
and
in
imul
insl
int
fcmovne
je
pop
push
inc
inc
add
dec
notb
jmp
mov
mov
ljmp
mov
out
imul
ret
push
jbe
cmpsl
pop
sub
shll
lahf
push
cli
unpckhps
jno
inc
push
jl
mov
push
jae
loop
xchg
fadds
test
mov
mov
mov
pop
xchg
cli
jno
xor
adc
inc
scas
imul
pop
pop
cmp
dec
add
movsb
push
mov
call
adc
ja
dec
mov
sbb
pop
pop
sub
xchg
lds
enter
lock
fs
xchg
sbb
sub
rorl
dec
push
lret
pop
mov
outsl
or
mov
sbb
dec
fbstp
inc
loopne
xchg
loopne
jo
xchg
pushf
sub
stc
jo
sub
movsb
push
loop
fwait
mov
or
ret
sti
jb
pushl
call
in
test
lock
sub
pop
pop
mov
push
xlat
inc
pop
sarl
imul
insl
icebp
fnstsw
repnz
popf
lods
or
and
sub
sbb
in
adc
add
fildl
pop
lods
lock
test
push
mov
es
inc
aaa
stos
loope
dec
ja
stos
adc
test
pop
xchg
or
fildll
pop
pop
les
inc
mov
movsl
lea
aad
and
sbb
jno
ficompl
jge
push
movb
fs
aam
fcom
pop
pushf
xor
aam
imul
loopne
pop
mov
leave
mov
push
pop
cmp
sub
push
sar
xlat
bswap
push
mov
pop
shrl
mov
fldt
outsb
xor
enter
out
icebp
rol
cmpsl
pop
mov
mov
mov
cli
fucomip
imul
xchg
mov
push
and
mov
movsb
or
or
pusha
rol
fistl
xchg
cltd
ret
sbb
push
push
pop
lock
xor
sarb
push
rcr
sarb
add
stos
lea
rorl
incb
mov
cmpsl
pop
outsl
push
cmc
cmpsb
es
repz
fildll
fisubl
sbb
xor
jp
mov
repz
sbb
or
xor
pop
dec
inc
sti
dec
call
adc
pop
cwtl
add
stos
pop
jo
leave
jbe
insl
in
loop
testl
dec
loopne
mov
pop
fcoms
add
imull
jecxz
inc
mov
push
cmpsb
dec
ja
mov
or
dec
lahf
mov
mov
push
dec
mov
push
shl
je
jg
mov
aad
aaa
loop
adc
cwtl
std
add
adc
mov
add
and
aad
lods
fisttpl
lcall
lods
fildll
cmpsl
push
mov
popa
ja
rcrl
sbb
mov
pusha
inc
sbb
clc
inc
outsl
int3
loop
movsl
pop
mov
mov
ret
push
mov
add
fdivs
and
es
mov
ret
mov
and
bound
div
ficoml
hlt
jg
add
push
fildll
jo
mov
jg
sub
out
inc
adc
xchg
mov
xor
xchg
push
shrl
cmp
fistpll
lods
mov
xchg
sub
or
repnz
or
daa
mov
daa
fcoms
out
jmp
loopne
loope
jge
pop
adc
adc
cmp
pop
sti
xchg
dec
les
dec
outsb
dec
mov
ss
jnp
imul
mov
in
sub
movsl
mov
push
adc
call
fnsave
adc
fadds
and
lock
je
inc
and
mov
movsl
inc
lock
add
sbb
mov
adc
andb
and
adc
xchg
cmc
sub
pop
in
int3
mov
aaa
dec
xchg
mov
mov
adc
aas
mov
dec
btr
push
leave
and
cli
mov
shl
stos
divl
or
adc
xor
cwtl
add
mov
jbe
imul
data16
adc
push
incb
push
push
outsb
loop
ljmp
mov
aaa
or
lods
fs
rcrl
sub
in
push
in
and
and
test
fstl
jle
movsl
mov
lahf
js
jp
dec
andb
imul
adc
jge
inc
pop
shll
inc
adc
mov
mov
and
loop
dec
jl
ja
test
iret
cmp
out
cmp
into
jo
inc
in
stos
jo
jb
das
mov
rolb
sub
outsb
cmp
unpcklps
sbb
xchg
out
das
push
ficoml
sbb
xchg
or
adc
sbb
and
add
adc
or
add
sub
pop
add
mov
sub
ljmp
jno
cwtl
outsl
adc
and
js
cmp
shlb
lods
and
mov
xchg
jno
jbe
sbbl
testb
popf
pop
jg
push
mov
inc
cmpsl
out
lock
inc
sub
ja
or
movsb
dec
call
dec
xchg
mov
das
mov
ss
clc
sub
pusha
shl
mov
mov
call
pop
das
test
mov
addr16
push
sub
loopne
sub
xchg
mov
mov
ret
push
pop
ljmp
lahf
scas
pusha
mov
outsb
jg
cmp
fwait
stos
mov
mov
adc
mov
test
mov
add
jge
push
test
lret
mov
mov
enter
clc
shll
dec
xor
xchg
iret
shll
lret
pop
sub
orl
mov
jl
scas
inc
and
pop
xor
dec
push
push
out
fistpll
lea
bound
push
enter
out
mov
cmp
add
mov
xor
xchg
lods
xchg
jmp
xchg
jae
loopne
push
xchg
lock
inc
pop
sub
decl
add
sub
xor
push
inc
rcrl
push
ret
mov
xor
inc
fadd
push
stc
mov
ror
jno
pop
das
lea
push
jge
pop
push
movl
sub
cli
shrb
pop
mov
mov
popa
stos
cmp
je
xchg
xor
sub
mov
add
icebp
jnp
jbe
add
adc
divb
dec
push
jbe
out
test
add
out
jb
dec
lea
add
sbb
popa
adc
xor
sbb
sub
adc
lods
andb
fwait
or
ljmp
push
sbb
pop
adc
inc
jge
subl
xrelease
pop
popa
mov
push
imul
std
xorl
cmp
enter
jmp
mov
or
pop
jae
sbb
adc
sub
test
shlb
dec
std
pusha
stos
shlb
addr16
out
xor
sar
mov
pop
add
sbb
sbb
mov
jno
movb
pop
sbb
hlt
mov
mov
sbb
mov
mov
inc
pop
sub
xor
push
adc
test
je
mov
fcomp
neg
xor
cmp
insl
push
mov
dec
sbb
lret
bound
push
pop
lock
pop
lock
xor
mov
adc
and
scas
inc
mov
xor
adc
loopne
xchg
push
inc
fscale
mov
jno
cmp
and
js
pop
movsl
dec
mov
and
loop
jo
push
popf
sub
or
in
test
jge
or
stos
inc
pop
dec
jecxz
sahf
and
mov
aaa
xor
and
mov
shrl
dec
jns
jle
sbb
inc
xor
pop
loop
loop
pop
decb
mov
or
push
mov
loopne
jmp
lds
sti
sbb
or
aad
add
push
divb
inc
ffree
cmpsb
xchg
cmp
push
jl
js
inc
in
dec
sub
mov
mov
ljmp
call
or
lea
mov
jae
pop
or
les
and
mov
in
aas
out
jb
test
pop
cmp
in
pop
lds
mov
cmp
cmp
movsl
daa
mov
hlt
pop
adcb
or
fldl
add
dec
scas
mov
repnz
mov
cmp
mov
in
or
inc
popa
xchg
sub
gs
aad
into
sbb
in
lret
sbb
inc
mov
add
fidivs
fsubp
shlb
sub
ss
add
in
add
iret
sarl
imul
dec
adc
push
out
mov
sub
xor
lods
add
aad
add
jbe
inc
mov
fldt
jle
testb
and
out
fidivrs
inc
outsb
mov
cmp
add
bound
mov
loope
pop
mov
mov
aaa
sub
out
addr16
cmp
sub
jo
dec
ret
clc
rolb
xlat
scas
outsb
push
push
popa
ret
fdivl
pusha
adc
fsubrl
in
fisubrl
pusha
lock
and
fcomi
aaa
aas
test
test
enter
insl
fsubrp
cli
jmp
nop
mov
jnp
loope
push
add
jge
ret
mov
sbb
mov
jae
pop
lahf
pop
daa
dec
adc
mov
outsb
push
aas
sbb
push
mov
adc
loopne
cmc
outsb
sbb
xor
inc
or
insb
and
repz
fbstp
subb
mov
in
xor
push
dec
sub
xchg
push
push
dec
ds
sub
lods
add
cmp
rcrl
adc
mov
arpl
jl
jbe
push
fldl
add
dec
mov
sbb
mov
push
dec
push
fdivr
jno
sbb
lds
sbb
rolb
sub
sub
jb
test
test
adcb
lret
adc
in
imul
andb
daa
xor
adcl
mov
mov
enter
arpl
int3
sbb
or
in
sub
mov
pop
or
jp
movsl
or
inc
cltd
clc
cs
and
inc
add
push
mov
pop
xor
jmp
stos
or
jle
dec
adc
mov
push
mov
jl
dec
cmp
push
cmp
nop
aam
mov
test
adc
mov
lods
leave
outsb
push
into
repz
mov
mov
inc
cs
xchg
mov
add
xchg
dec
aas
sub
mov
inc
repnz
outsb
insl
jmp
jmp
sbbb
xchg
and
shl
out
mov
inc
test
in
scas
enter
and
pop
daa
xchg
push
mov
outsb
aaa
fmuls
movsb
adc
xchg
mov
popl
lods
pop
fldt
lret
inc
mov
jns
rorb
out
or
pand
adc
or
cltd
out
jnp
lock
pop
dec
imul
sarl
test
fwait
pop
mov
outsb
cmp
hlt
pop
pop
push
mov
mov
outsl
sbb
fldcw
sub
or
ja
add
inc
aaa
lock
sbb
adc
loopne
pop
mov
arpl
cmpsb
push
xchg
test
push
movsl
push
mov
fwait
pop
cmp
and
in
orb
push
inc
test
xchg
inc
mov
jg
or
sbb
cmpsl
pop
outsl
xchg
jne
jmp
adc
out
adc
sub
fs
mov
ljmp
mov
adc
std
mov
mov
cmc
ret
shrb
cli
cmp
add
mov
push
rolb
push
pop
clc
test
inc
jle
test
das
jl
add
inc
mov
sub
sahf
pusha
test
add
xor
sbb
call
icebp
jnp
subb
cmpsb
mov
push
arpl
inc
add
cld
mov
cmp
or
add
pop
adc
inc
mov
cmc
in
adc
xor
push
sub
mov
rcrb
cmp
xor
les
mov
or
pop
pop
jnp
and
pop
mov
mov
lds
rcrl
push
cltd
mov
call
add
or
dec
jnp
pop
into
in
aad
arpl
stos
mov
add
es
mov
fwait
stc
cld
mov
xchg
sbb
and
arpl
pop
mov
adcb
clc
out
call
jns
jle
sub
jno
mov
push
cmc
dec
frstor
xchg
lcall
lcall
movsl
ljmp
lcall
sub
adc
mov
inc
cmpb
adc
push
or
jg
fisttps
jecxz
push
mov
icebp
scas
mov
mov
arpl
sti
jmp
xchg
fdivp
add
ja
or
rcll
sub
mov
mov
xchg
mov
aam
dec
or
push
push
mov
movsb
fcoml
fildll
call
sti
xchg
or
dec
pop
inc
pop
xchg
sbb
or
push
rolb
imul
lods
fwait
mov
pop
rcr
inc
sbb
inc
pop
jo
pop
adc
add
add
adc
inc
push
test
hlt
push
adc
mov
adc
mov
loop
stos
cmc
enter
jg
dec
sbb
cwtl
mov
jmp
nop
les
inc
mov
test
xor
icebp
or
clc
mov
mov
out
xchg
mov
and
clc
push
je
test
in
or
js
mulb
nop
js
xchg
gs
std
sbb
jo
mov
imulb
andl
andb
and
mov
inc
iret
in
leave
sub
clc
ljmp
bound
insb
inc
mov
daa
ffree
test
shlb
mov
shll
scas
rcll
loop
out
pop
mov
xchg
inc
or
jno
or
sbb
or
scas
stc
out
mov
cmp
xchg
jb
popl
js
lods
and
bound
jmp
mov
push
push
lea
test
or
cwtl
call
gs
inc
cmp
sbb
and
std
xor
cs
pop
incl
pop
outsl
xchg
dec
sti
mov
call
int
call
pop
jne
push
lcall
pusha
in
stos
icebp
andb
lcall
aaa
xor
outsb
lret
dec
xchg
pop
std
ffreep
push
mov
in
mov
test
int3
sbb
push
xchg
and
lea
add
jns
das
aas
and
pop
fsubrs
sbb
pop
icebp
in
sbb
ja
stos
push
sarb
insb
lods
xchg
subl
push
fwait
lods
pop
and
mov
scas
lds
inc
jb
jno
mov
insb
sbb
cmc
scas
mov
int3
int3
data16
iret
aad
lock
pop
mov
loope
jbe
gs
cmp
into
loop
pop
popf
push
rorb
dec
xchg
xor
lea
arpl
in
outsl
sti
cmpsb
cld
cmp
xchg
mov
jecxz
imul
pop
cmp
mov
inc
aaa
mov
sub
push
or
jbe
sti
push
andl
ss
rolb
les
mov
pop
mov
dec
out
inc
push
mov
sbb
mov
out
xchg
mov
lock
lods
fsubs
scas
add
outsb
cmpl
int3
pop
sub
or
jnp
pop
push
xchg
cwtl
xlat
repz
movl
je
lcall
push
shr
push
dec
pop
inc
fisubrs
icebp
aad
sbb
aas
sbb
popf
mov
xchg
mov
sbb
shrb
mov
sub
pop
xor
push
dec
lcall
cltd
add
addl
lods
movl
icebp
push
incb
pop
loop
cmp
bound
hlt
inc
push
scas
imull
bound
xchg
les
add
sub
aam
jecxz
mov
mov
inc
imul
stos
daa
xlat
inc
or
xor
dec
inc
sti
aaa
cld
cmp
into
inc
rorl
xor
push
loope
mov
fs
push
dec
xor
sbb
daa
mov
outsb
ret
sti
cltd
aad
shr
xor
testl
or
outsl
dec
adc
sbb
pop
aad
ljmp
fadd
xor
inc
xchg
cmc
pop
mov
sti
ficoms
js
mov
mov
mov
adc
test
pop
fwait
pop
cmc
cmp
push
dec
sbb
jmp
add
scas
dec
std
push
mov
xor
pop
push
or
mov
insl
mov
cmc
lret
mov
shr
mov
mov
mov
ficoml
ljmp
ljmp
lds
and
lock
es
ljmp
inc
cmpsl
jecxz
leave
cmp
popa
jecxz
mov
mov
and
mov
pusha
pop
lods
hlt
dec
cmp
pushl
movsb
test
push
sti
sub
bound
and
shl
xor
dec
sub
imul
or
out
fbld
mov
mov
loop
incl
add
mov
addb
jae
or
mov
jno
leave
fdivl
xor
lahf
sbb
scas
test
jnp
cwtl
out
loop
xchg
cmc
ror
jae
movsl
aaa
pop
sub
test
mov
in
jg
pop
xlat
or
inc
fs
rcrl
dec
push
sti
repnz
shlb
push
jg
pop
cmp
jnp
cld
jno
sbb
inc
jecxz
sbb
cmp
movsl
das
and
iret
lahf
call
mov
shr
cmp
inc
js
test
std
fwait
inc
sarb
push
mov
adcb
leave
push
mov
push
inc
into
and
inc
sbb
aaa
xor
aaa
sub
int3
dec
ljmp
ficoms
push
enter
outsl
xlat
or
cmpsb
add
mov
add
les
or
dec
cmp
pop
cmp
mov
rolb
lods
mov
pusha
add
push
test
out
sbb
pop
arpl
push
in
loop
pop
and
int
sub
decb
mov
mov
cmp
aam
push
aam
add
push
dec
jnp
jbe
repz
shl
out
mov
sub
test
pop
xlat
xchg
lds
jge
sbb
adc
fistpll
shl
scas
push
ffreep
mulps
test
lds
dec
and
push
push
fcom
mov
and
rol
dec
loope
mov
mov
jl
pop
test
and
movsb
inc
mov
in
inc
inc
iret
cs
scas
ret
nop
jle
jbe
enter
cs
inc
ljmpw
das
lcall
inc
enter
mov
sbb
call
stos
aad
call
imul
mov
pop
hlt
mov
rclb
ret
push
sub
inc
filds
xor
pushf
test
into
les
in
inc
popa
stos
and
cmp
in
cwtl
mov
push
push
jno
daa
dec
notl
jl
and
mov
lds
enter
pushf
cmp
mov
xchg
adc
hlt
push
adc
adc
popf
cmc
adc
jno
pop
push
inc
aad
bound
mov
jo
repz
mov
xchg
push
mov
nop
jae
rol
cld
in
jo
in
push
push
pop
test
sbb
sub
aas
mov
push
mov
xlat
loopne
or
mov
loop
mov
xlat
mov
outsb
roll
in
mov
mov
call
xchg
pushf
cmp
ljmp
sbb
sub
xchg
sbb
nop
pop
cmpsl
movsb
sub
mov
mov
xor
mov
cmp
jg
jmp
mov
adc
mov
add
arpl
or
dec
push
or
repnz
pop
xchg
mov
out
mov
jge
mov
dec
shr
xchg
arpl
ret
clc
push
sub
mov
popf
xchg
lock
push
leave
add
rcl
cs
xchg
add
aam
mov
pop
pop
mov
adc
jne
or
lret
outsl
cmc
mov
sub
xor
jge
fs
addr16
jno
inc
inc
int3
lret
pusha
loopne
aas
push
push
push
sbb
mov
push
pop
fs
pop
popf
arpl
fwait
jns
inc
xchg
andb
mov
jne
jns
pop
inc
ljmp
push
push
mov
dec
mov
mov
das
sub
test
push
test
sbb
sti
cmpsl
mov
hlt
fs
lret
mov
push
adc
add
xor
sti
or
add
jle
outsl
scas
mov
test
and
and
ljmp
pushl
push
jbe
lahf
shll
sub
data16
or
cli
ljmp
mov
add
lahf
inc
lods
ss
sub
and
mov
adc
pop
xor
sbb
pop
cmpsl
or
lea
jo
call
adc
das
jno
or
icebp
test
sahf
xchg
fldt
mov
pop
adc
mov
push
dec
mov
cmp
and
sub
or
or
arpl
in
add
mov
addr16
fsubrp
mov
fildll
adc
mov
fnsave
ss
lahf
ror
mov
lods
addb
fisubrl
and
lahf
mov
cmp
insl
stos
and
cli
lods
mov
enter
outsb
xchg
cmp
push
js
adc
add
lcall
leave
movsb
ret
xchg
jno
stc
adc
jle
adc
sub
aaa
mov
cmc
pop
cltd
inc
sbb
loop
shll
push
fwait
imul
flds
scas
sbb
arpl
mov
xchg
jl
jne
pusha
xchg
popa
push
mov
or
test
rolb
push
js
nop
loop
sub
mov
loope
imul
mov
and
enter
mov
pop
xor
jecxz
out
mov
inc
cmp
mov
dec
mov
addr16
jns
into
pop
push
inc
mov
dec
xor
rorl
jg
fwait
mov
ljmp
cwtl
mov
rcll
or
scas
icebp
jnp
xchg
or
or
push
das
jae
add
insb
pop
scas
ret
shlb
mov
sub
test
sbb
or
push
pop
xchg
pop
mov
outsb
or
push
push
in
lea
push
cmpsl
inc
aam
icebp
das
or
fcoms
das
test
push
and
mov
or
aam
lods
test
rcrb
insb
sub
cmc
stos
mov
bound
dec
or
pop
in
mov
dec
inc
aaa
jge
popa
sti
add
inc
dec
pop
push
pop
repnz
push
bound
and
mov
lret
jecxz
lret
cmp
add
sub
or
pop
dec
movb
mov
ds
mov
imul
out
fidivrs
sub
push
mov
mov
test
cmp
mov
push
push
jl
xchg
outsb
push
in
sub
xchg
xor
dec
push
push
mov
sbb
pop
pop
sbb
xchg
aas
lret
push
mov
jnp
movsl
or
xor
in
cli
add
inc
or
insl
jo
enter
jp
lods
mov
test
jb
sarb
jbe
mov
adc
mov
jecxz
ss
xor
lret
mov
push
insl
jp
dec
dec
cmpsl
add
sbb
sbb
xor
iret
or
and
push
and
xor
sbb
lret
stos
call
int
repz
adc
push
mov
sbb
jp
push
push
icebp
xchg
aaa
mov
sub
xor
pop
js
cmp
mov
mov
jnp
pop
adc
andb
inc
ja
das
ror
xlat
fisttpll
inc
dec
fisubs
cmpsl
pop
cs
sub
lds
jbe
pop
mov
pop
or
sub
and
jns
sbb
aaa
js
inc
mov
stos
test
add
cs
push
mov
cld
xchg
lods
push
mov
imul
xor
jb
arpl
outsb
mov
mov
add
or
testb
ja
cli
aaa
adc
pushf
nop
inc
sub
mov
popf
mov
sub
pcmpgtd
gs
dec
sub
fbstp
dec
and
mov
mov
rorb
imul
shlb
dec
arpl
mov
cmp
call
lcall
cli
out
in
mov
jo
mov
test
inc
mov
dec
jp
ja
test
call
mov
and
and
jl
and
in
xchg
aas
xor
mov
aaa
push
fdivr
subb
insl
push
adc
lods
cwtl
or
stc
pop
sbb
out
es
push
daa
xor
jge
pop
cmpsb
pushl
inc
ret
in
js
cs
in
inc
mov
js
dec
sti
and
loope
xor
arpl
ret
xchg
shll
jns
mov
ret
out
jp
cmp
nop
imul
pop
in
inc
in
incb
sub
pusha
fstpt
cmp
pop
mov
jmp
cli
sub
mov
test
cmp
insl
loopne
sub
outsl
inc
or
pop
addr16
cli
mov
aas
xor
aas
mov
mov
loope
addl
and
mov
fdivr
je
outsb
mov
push
mov
das
or
cmp
test
inc
scas
gs
dec
pop
test
ss
rorb
xchg
movzwl
lcall
test
or
repz
or
cmc
mov
adc
push
outsb
xor
insb
sbb
int
sbb
pop
test
mov
hlt
mov
es
pop
and
test
mov
fdivrl
repz
out
add
add
mov
cmp
xchg
stc
inc
test
xor
mov
sbb
add
mov
inc
aad
ret
mov
push
das
mov
ss
cmp
mov
aam
adc
mov
les
loop
out
outsb
push
cmp
fmuls
or
jl
add
push
push
hlt
loop
pop
inc
push
lcall
or
or
jmp
xor
mov
icebp
out
jns
pop
xchg
jne
or
pop
mov
xor
repnz
jb
xor
push
mov
mov
adc
in
das
jno
mov
add
in
push
loop
mov
rcrl
loop
jge
mov
push
imul
push
mov
or
inc
gs
ss
cmp
fdivp
test
mov
test
or
movsl
outsb
pop
std
push
mov
dec
adc
popa
dec
jnp
test
cwtl
movsb
cltd
cmc
jnp
xchg
imul
nop
cmp
dec
mov
pop
out
jg
mov
mov
jnp
notl
pop
daa
inc
adc
cltd
push
mov
gs
movsl
fwait
pusha
loope
ljmp
or
popa
jo
mov
mov
js
es
mov
sub
or
sbb
fstpt
dec
sar
and
mov
rorb
pop
add
test
dec
mulb
jg
add
inc
mov
mov
or
shlb
and
fildl
fbstp
clc
inc
or
pop
sahf
repz
jge
pop
test
push
gs
jne
ja
movsb
movl
push
inc
cmp
pop
stos
fdivrs
push
in
mov
push
divl
mov
push
add
mov
cmc
xchg
fldcw
fistl
and
xor
pop
adc
inc
scas
imul
das
fdivl
xor
sbb
jecxz
pop
sbb
cld
out
adc
jo
test
fcoml
pop
add
loop
in
mov
or
xchg
mov
mov
mov
jae
push
sbb
xchg
sbb
repnz
jae
adc
pop
dec
enter
ja
mov
xor
mov
and
jp
test
loopne
cmp
and
mov
sub
dec
and
sti
push
sbb
pop
mov
sarl
push
les
js
and
dec
xchg
sub
cmpsb
fistpl
or
nop
xor
inc
cmpsl
fidivs
add
loope
xor
mov
xchg
or
dec
adc
seta
mov
cld
ljmp
inc
sbb
filds
fldt
movsl
add
jmp
ds
cmc
cmp
xlat
and
roll
cmp
test
fsubs
push
mov
mov
pop
xor
adc
mov
leave
repz
jae
rclb
jmp
insb
shll
or
push
int
jg
das
mov
int
enter
das
or
xchg
inc
mov
call
sub
out
arpl
adc
sub
inc
clc
fists
insb
mov
sbb
mov
insl
xor
mov
filds
pop
mov
inc
stc
orb
addr16
mov
cmpsl
sub
jb
fildll
sub
outsl
cmp
rorl
mov
aaa
pop
cmp
pop
movsl
in
ss
xchg
cmp
mov
pop
push
fdivs
popl
insb
sbb
clc
inc
and
push
sbb
subb
jno
xchg
cwtl
xor
fidivl
cmp
add
hlt
cmp
inc
popf
adcb
and
repnz
outsl
popl
dec
cmp
and
sarb
out
mov
mov
scas
pop
mov
push
and
sub
adcl
push
icebp
mov
cs
je
cmc
and
fwait
je
std
lret
mov
clc
test
loope
mov
pop
mov
popf
mov
jb
es
into
outsb
sbb
stc
xor
mov
aas
repnz
js
popa
pop
imull
and
mov
adc
and
dec
sbb
popf
movb
inc
roll
push
sbb
scas
cmc
mov
inc
sub
shrb
xchg
mov
hlt
popf
pop
cli
mov
xchg
js
cmp
sbbw
cmp
ret
pop
ret
hlt
scas
movsl
mov
dec
test
lds
je
mov
or
lcall
adc
mov
ret
adc
fdivp
sbb
mov
dec
jg
dec
fs
inc
cmp
call
fisubrl
movhps
dec
and
dec
cs
xchg
cmp
pop
jno
call
pop
or
ret
in
sti
aad
cmpb
add
mov
lods
lock
aaa
add
xlat
int3
dec
repnz
fisubl
in
inc
aaa
mov
mov
das
push
or
dec
leave
dec
movsb
adc
push
sbb
loop
mov
test
loop
iret
jb
adc
cmpl
icebp
out
sub
lret
mov
dec
sub
and
mov
pop
paddq
or
mov
mov
add
or
in
push
adc
inc
inc
andl
sbb
jmp
aam
dec
int
fnstcw
xor
in
push
mov
in
jg
dec
adc
cs
sbb
lea
add
jg
lahf
ret
sbb
mov
or
inc
nop
ret
jno
call
popl
sbb
cmp
popa
pop
ss
push
cmp
or
mov
add
sub
pop
xlat
ja
jne
ret
shr
testb
jl
jo
mov
aaa
ss
movsb
popf
push
and
ja
les
inc
add
push
dec
inc
mov
xor
cmpsb
sbb
outsb
xchg
cmp
iret
or
loopne
inc
scas
jge
xchg
call
or
ja
sahf
jo
pop
mov
mov
inc
push
sub
mov
inc
mov
lcall
push
cmp
sbb
je
mov
mov
mov
xor
inc
jne
inc
jnp
stc
fcoml
jo
lcall
mov
push
adc
add
bound
push
dec
rclb
jne
mov
inc
inc
dec
pop
fdivr
outsl
test
js
sbb
xchg
ret
dec
adc
or
mov
dec
out
addr16
loop
loopne
dec
lods
xchg
dec
fldt
inc
std
or
sub
sbb
fisttpl
in
test
sub
mov
es
jmp
in
sbb
out
mov
fsubrl
pushf
jg
and
inc
ja
lea
mov
and
mov
mov
inc
sub
mov
fnstsw
je
arpl
addl
das
fldenv
je
pop
scas
cli
xor
jo
clc
stc
outsl
pop
fsubp
sbb
shlb
movsb
enter
dec
mov
nop
inc
call
and
inc
dec
iret
arpl
push
ds
adc
ret
mov
sub
imul
shlb
xor
aaa
lahf
sub
inc
call
clc
sbb
and
xchg
pop
and
aas
out
test
mov
xchg
fisubs
shlb
pushl
add
add
fs
push
in
xchg
mov
or
aaa
pop
shlb
pop
push
inc
lods
pusha
add
fs
adc
inc
sbb
mov
div
fsubs
lahf
shl
jl
dec
cmp
hlt
test
and
jle
inc
das
inc
jmp
push
icebp
push
out
dec
push
sub
aad
aam
lock
and
jl
or
or
jmp
jbe
push
inc
insb
jnp
push
movsl
pop
mov
lcall
out
adc
pop
ja
push
fcmovbe
or
mov
or
ret
rolb
clc
push
adc
gs
xlat
jbe
mov
lods
in
out
or
inc
wbinvd
and
dec
push
mov
cltd
sbb
in
daa
sarb
mov
ja
push
sub
lock
adc
mov
decl
lahf
mov
and
fstps
pop
dec
outsl
cmp
mov
push
push
add
fs
mov
sub
inc
mov
popf
or
sub
in
insl
ret
pop
lea
pop
dec
int3
out
push
cmpsb
xchg
ljmp
jge
notl
or
or
in
mov
lods
fildl
aam
cmp
push
shlb
xchg
inc
jl
rorb
std
add
outsl
jecxz
add
mov
jp
ss
push
ret
or
es
fs
aam
lret
xchg
or
pop
subl
add
pop
roll
mov
aad
lds
xchg
aaa
push
test
cmp
xlat
xchg
add
ljmp
bound
aad
in
stos
imul
cmp
xor
test
pop
jle
xor
int
or
cmp
mov
mov
fdivrs
ficomps
push
jbe
fcmovnbe
adc
cmc
mov
jecxz
pop
pop
loopne
outsl
dec
in
dec
loope
xor
sub
jb
jecxz
jmp
sub
notb
adc
cmp
inc
loopne
dec
dec
leave
inc
add
stos
ret
jp
sbb
fdivl
sub
jbe
stos
sarl
jbe
push
pushf
arpl
mov
pushf
pop
cli
cmp
mov
adc
pop
push
mulb
sub
mov
mov
icebp
setg
xor
add
push
popa
cltd
ljmp
ficompl
pop
data16
repnz
lds
test
cld
dec
std
aaa
jb
mov
xchg
test
dec
lret
jbe
fwait
adc
jae
fdivrl
mov
jns
fistps
xchg
xor
les
mov
pop
fsubrl
aad
adc
jb
jo
lcall
je,pn
fcmovu
pusha
mov
jecxz
inc
xchg
and
mov
push
xor
lcall
enter
pop
mov
fcomps
lahf
aas
mov
bound
jno
out
push
dec
adc
xchg
add
mov
out
mov
pop
aad
out
xchg
xchg
adc
loopne
fstps
out
mov
adc
dec
xor
roll
mov
test
call
idivb
jl
mov
arpl
test
int3
push
jl
gs
test
pop
test
pop
add
cmp
aam
popf
sub
lods
outsb
insl
out
rolb
mov
or
aas
sahf
lea
push
cmp
mov
pop
dec
push
lea
jg
call
add
mov
and
cmpsb
or
inc
adc
fdiv
cmp
mov
inc
clc
int
or
dec
bound
xchg
in
mov
dec
push
lods
inc
mov
data16
cmp
or
jmp
push
adc
pop
cld
lea
leave
adc
sub
adc
pop
fstp
hlt
in
fidivs
imul
out
or
out
jb
xchg
push
sub
inc
pop
clc
ljmp
cvtdq2ps
or
jecxz
into
lds
push
ljmp
popa
mov
ds
cmc
cld
and
xchg
call
jbe
adc
mov
jb
orb
js
pop
inc
and
cs
xchg
mov
and
push
inc
pop
dec
iret
sahf
cmp
xor
mov
pop
and
xchg
testb
sub
cmc
and
sub
sub
mov
in
pushf
test
xor
jmp
pusha
inc
cld
cmp
ret
test
cli
sar
popa
fs
push
xor
mov
arpl
xchg
out
and
sub
mov
mov
sbb
mov
addb
jns
in
inc
adc
push
decl
sbb
mov
sub
mov
dec
push
push
jne
mov
ljmp
add
scas
jmp
jns
mov
cli
scas
pcmpgtd
mov
ljmp
adcb
push
cld
movsl
push
or
nop
sbb
adc
add
or
jo
mov
push
adc
add
out
adc
jle
data16
insl
test
scas
repz
pop
and
and
fwait
mov
andl
mov
or
adcl
ficompl
out
pop
sub
int3
lret
sub
rolb
in
aam
mov
adc
mov
fcoml
xchg
sbb
iret
push
mov
or
and
cld
pop
scas
or
pop
je
jae
jne
push
loop
jle
daa
cmp
sbb
aad
pop
ret
pusha
out
mov
mov
jno
mov
loope
mov
pop
mov
dec
int
sbb
jp
mov
popa
rolb
inc
or
pop
cmpsl
xchg
mov
and
add
test
add
loope
cmc
ljmp
xor
add
decb
pop
jo
pop
ret
in
loop
or
aad
inc
mov
xchg
or
add
js
jg
push
xchg
dec
push
or
out
mov
shrl
push
sub
dec
xchg
sbb
push
icebp
dec
ds
xchg
jg
fists
test
loop
push
out
aas
pusha
fs
out
sbb
push
imul
lds
xor
push
xlat
data16
and
filds
hlt
dec
or
enter
mov
adc
mov
pop
sbb
mov
or
ljmp
dec
test
in
insl
shr
jae
cmc
fdivrl
mov
out
inc
or
cmp
icebp
push
movsl
sbbb
cs
lds
faddl
loope
addr16
dec
jle
movsb
adc
mov
inc
inc
aam
pop
out
daa
aad
mov
dec
and
add
xchg
push
adc
call
fisubrs
fists
jb
inc
mov
xor
dec
lods
sub
stos
jae
jo
in
adc
out
pop
dec
dec
xchg
lret
outsl
and
push
into
int
xchg
ret
lret
push
or
cmp
add
pop
mov
adc
or
inc
push
arpl
rclb
lock
fwait
mov
jbe
inc
lock
test
mov
dec
js
mov
push
inc
mov
aas
rclb
and
insb
je
das
in
mov
ljmp
cmp
ret
jbe
mov
cmp
xchg
fistps
and
test
mov
outsb
loope
popa
adcl
inc
mov
jg
inc
mov
xchg
ret
jb
push
insb
sbb
les
sbb
sbb
push
xlat
cmp
aas
aam
cwtl
addr16
mov
push
pop
add
int
and
and
xchg
or
subl
orb
lcall
hlt
add
dec
xlat
lods
sbb
das
into
std
aaa
pop
mov
ja
push
inc
sub
or
test
dec
in
jnp
xchg
adc
pusha
jnp
enter
ljmp
inc
pop
xchg
fwait
dec
sub
mov
dec
rorl
mov
or
xchg
push
mov
mov
rolb
imul
mov
sub
or
out
sub
leave
mov
mov
les
clc
sub
or
setg
xchg
int
and
je
dec
mov
out
ljmp
hlt
dec
test
sub
outsl
hlt
pop
sbb
inc
pop
mov
mov
popa
fdivr
incl
js
loope
mov
fs
fmulp
arpl
pushf
sbb
inc
xlat
pop
enter
pop
in
mov
sbb
scas
add
jmp
hlt
in
dec
out
jp
loope
dec
mov
les
xor
or
push
cmp
in
push
jbe
or
outsb
scas
pusha
rorl
dec
or
and
or
int3
xor
or
inc
ja
jb
jmp
mov
push
adc
loopne
jbe
mov
int3
push
push
pop
push
sahf
mov
mov
and
mov
push
mov
cmp
clc
jbe
clc
lds
add
outsb
outsl
add
outsl
cmp
rcl
pop
inc
xchg
jp
and
inc
mov
cmc
mov
loope
into
dec
xchg
test
insl
insb
orb
and
insl
outsl
das
test
icebp
sub
mov
sbb
and
stc
outsl
or
sub
jne
out
push
mov
and
push
mov
push
jle
aam
jne
dec
adc
jbe
scas
dec
xor
imul
or
jno
pop
xchg
rorl
scas
mov
push
mov
xor
sbb
push
jl
pop
inc
inc
ja
or
pop
nop
cltd
cltd
stos
lret
add
mov
and
ss
cmpb
lock
popf
lock
push
mov
lahf
push
cltd
in
mov
mov
jmp
jl
imul
pusha
or
pop
sbb
pop
push
jmp
test
or
rcll
ljmp
push
es
sar
stc
jge
sub
cltd
dec
push
in
outsl
shl
outsl
jge
aaa
dec
repnz
mov
in
dec
movsb
mov
mov
jbe
in
pusha
pop
dec
mov
faddl
xchg
xchg
dec
aad
push
iret
jg
fidivrs
mov
call
xor
jmp
adc
mov
rorl
outsl
add
testl
cli
mov
push
mov
mov
mov
mov
mov
add
inc
add
jmp
inc
and
push
sub
xchg
mov
sub
fdivs
sub
mov
aad
mov
sub
fimuls
addr16
pop
fisubrl
outsl
loope
adc
lea
mov
aam
pop
jmp
shl
mov
mov
inc
fistpl
out
fwait
xchg
mov
jecxz
xor
and
pop
cmp
mov
aas
out
sub
or
icebp
data16
cmc
mov
xor
sub
inc
and
push
ss
xchg
mov
outsl
shlb
in
ret
xchg
in
insl
xchg
ret
inc
sub
imul
test
xor
mov
sub
es
ss
test
inc
mov
clc
pop
inc
cli
inc
dec
inc
sbb
fistl
lock
cmp
cmp
mov
sarl
and
inc
sub
jge
dec
daa
sbb
sbbb
outsb
jae
xor
arpl
insb
jl
pop
xor
repnz
push
ja
mov
pop
iret
int
insb
pop
and
enter
mov
sti
rcrl
push
sub
je
or
push
sbb
cmpsl
sbb
fildl
pop
dec
sbb
lcall
addl
pop
mov
es
rcrb
pushf
imul
pop
push
fisttpll
fnop
pop
mov
cmpsb
or
lcall
test
test
xor
inc
shrl
stos
dec
and
mov
inc
icebp
stos
inc
popf
loop
add
pop
mov
push
jg
sbb
mov
adc
loop
xchg
sbb
mov
inc
ret
pop
hlt
xchg
mov
xor
aaa
leave
add
sbb
orb
fstpt
js
and
testb
lods
push
ficompl
pop
lcall
scas
std
xor
push
dec
push
out
rolb
adc
inc
add
mov
sarb
aas
push
test
std
push
loope
mov
push
mov
mov
ret
xchg
inc
xor
lcall
call
push
test
ja,pn
call
shlb
sub
mov
daa
adc
xchg
fildl
fnsave
mov
les
mov
aaa
pusha
xchg
and
test
test
sub
int
dec
cmc
vandps
arpl
jecxz
dec
enter
pop
xchg
xchg
push
inc
jne
or
jmp
test
or
inc
cli
loop
fdivrs
ret
and
dec
into
hlt
mov
jnp
pop
dec
inc
adc
sbb
scas
mov
popa
and
push
lds
mov
pop
ja
pop
mov
andl
sahf
addl
and
rolb
out
cli
in
cmpsb
movzwl
sbb
pop
or
int3
int3
sub
insl
inc
or
iret
je
or
lret
adc
ss
push
decl
mov
rolb
jb
and
or
fldcw
lret
pop
mov
pusha
cmp
mov
jecxz
jmp
daa
pop
xchg
sbb
shr
roll
mov
push
fisttpl
mov
push
insb
es
mov
jp
es
cmp
aad
mov
sahf
leave
sahf
mov
jg
aam
or
insl
push
jp
push
dec
out
data16
mov
pop
add
sbb
je
dec
mov
xchg
movsb
cmp
adc
pop
sbb
sbb
add
test
jae
add
mov
mov
fidivrs
mov
push
das
sub
lock
iret
arpl
jg
dec
ljmp
push
pop
out
or
incl
inc
fldt
cmp
lret
jl
neg
and
adc
xchg
shlb
fcmovnbe
fstpt
or
or
fmuls
xor
sbb
aam
std
lds
pop
dec
push
ret
add
mov
test
ret
inc
insb
shll
jecxz
fxch
sti
cli
dec
pop
xor
rcrl
xchg
outsb
in
pusha
pop
push
nop
inc
scas
pop
cli
lods
add
std
xor
push
sar
in
push
into
sbb
notb
xor
dec
pop
dec
sub
inc
xor
insl
aaa
adc
sub
adc
sti
stos
and
aam
stos
adc
or
in
adc
adc
push
add
icebp
sbb
or
sbb
dec
mov
or
popf
jl
inc
das
shrl
and
push
adc
cmovl
test
mov
and
jg
sub
mov
les
mov
sahf
push
fcoml
in
orb
bound
fistps
sbb
out
sbb
adcl
pop
stos
sbbb
or
push
mov
cmp
inc
lods
sub
outsb
push
sub
push
add
xchg
xor
dec
scas
mov
mov
sbb
insb
fbstp
or
dec
imul
or
pop
movsb
popa
mov
and
fdivs
fwait
and
icebp
mov
add
cmp
sahf
loopne
movsl
push
dec
push
das
xor
fildll
aaa
sub
jmp
inc
add
loop
or
orl
insb
mov
leave
adc
sub
arpl
push
das
push
adc
push
pop
inc
pop
sbb
mov
mov
xchg
and
loop
popf
or
iret
push
adcl
and
mov
sub
or
jg
loopne
stc
enter
cwtl
dec
out
push
push
ss
sbb
in
xchg
fcomps
xor
dec
mov
outsb
inc
fildl
sbb
leave
cmp
push
cmp
xor
in
gs
dec
je
push
int3
push
sbb
sub
jo
cmp
adc
sbb
mov
test
sub
xor
call
les
scas
mov
jbe
pop
mov
fdivrp
xor
xor
out
mov
dec
jne
adc
pusha
loope
fdivp
mov
xchg
scas
js
inc
shr
add
outsl
pause
ja
out
mov
pop
mov
mov
mov
and
mov
lods
and
push
popf
hlt
dec
fucomi
outsb
fisubl
adc
mov
das
adc
dec
hlt
repnz
rorb
push
add
mov
jle
outsb
in
aas
pop
pop
stos
ret
inc
sub
dec
rol
mov
leave
fcmovb
arpl
testb
loope
arpl
dec
sbb
and
cmc
or
mov
arpl
jl
jge
pop
jno
aad
cmc
inc
sub
xor
addr16
push
rcl
test
adc
ret
push
sub
jno
mov
loope
add
ficoml
nop
movsb
pop
pop
sbb
mov
sub
loope
out
or
data16
movups
add
stc
cwtl
sub
dec
ss
js
dec
mov
in
out
shrb
loopne
inc
cld
fisttpll
mov
cld
jo
add
mov
cmp
xor
je
pop
mov
bound
ret
or
push
fcoml
in
xchg
ss
xchg
push
repnz
xor
leave
push
ret
fnsave
jno
and
dec
sbb
or
sub
mov
dec
mov
sbb
jge
dec
xchg
lret
add
leave
pop
xchg
mov
or
lcall
mov
rcrl
mov
xchg
add
mov
dec
ja
cld
adc
mov
sbb
out
nop
sbb
mov
notb
lds
inc
mov
mov
lods
adc
mov
insl
inc
jo
test
lock
icebp
mov
out
jg
rclb
pop
test
mov
and
add
shlb
mov
wbinvd
adc
pop
push
mov
lods
adc
in
lods
add
add
sub
nop
mov
adc
and
addr16
mov
fisttpl
jl
cmp
xor
pop
push
divb
loopne
dec
adc
cltd
in
fmull
pop
bnd
test
pushf
inc
decl
mov
and
sub
xor
or
iret
lock
xorl
pop
mov
xchg
test
inc
cltd
cmpb
xchg
ret
icebp
jo
lock
mov
lahf
adc
jecxz,pn
push
dec
add
ja
imul
lods
and
dec
ja
mov
cs
jne
movsl
movsl
imul
jp
mov
lgs
outsl
ljmp
jns,pt
stos
sub
or
xor
das
mov
bound
push
mov
lret
mov
sbb
inc
cmp
addr16
adc
mov
xor
xchg
inc
popf
lods
add
or
adc
sbb
scas
icebp
aaa
mov
push
add
push
jge
jg
jae
call
lods
dec
shlb
mov
sti
ficoml
mov
mov
enter
das
insb
aaa
push
cmc
cli
xlat
or
or
cmc
or
xchg
push
add
jnp
out
sub
fcoms
or
jge
vmwrite
loop
and
mov
pop
movsl
or
aad
sti
cmp
loope
call
mov
rorl
adc
sub
xor
rcrb
pop
inc
cmpsl
lds
push
jne
cmp
mov
outsb
adc
sub
mov
dec
jae
inc
pop
daa
addr16
lods
daa
xchg
pushf
xchg
add
jp
sub
jp
loopne
adc
adc
pop
aaa
mov
mov
pushf
mov
addr16
pop
mov
fsub
rcrl
mov
idiv
dec
ds
enter
inc
push
push
adc
lret
pop
aad
dec
outsl
aas
rolb
lret
pop
xchg
cld
lods
hlt
filds
mov
sub
push
pop
lret
xchg
mov
mov
shrl
call
js
push
fcoms
push
lods
fcmovu
or
mov
fdivp
push
mov
ljmp
pop
add
cli
mov
or
sub
addb
mov
add
loop
popf
mov
int3
test
push
pop
ds
mov
ljmp
or
icebp
testb
out
stos
testl
jecxz
mov
je
sub
and
cmp
loopne
cltd
aad
add
arpl
stos
lock
scas
sub
sbb
xor
scas
sub
push
je
movb
or
or
movsl
xor
out
orb
nop
mov
jbe
int
mov
jg
mov
and
aaa
ret
push
lea
in
ret
pop
shl
fdivr
ljmp
mov
add
jbe
paddq
inc
stos
mov
cmovs
iret
push
jge
sti
iret
lcall
xor
jno
int3
lea
out
and
inc
lock
ret
jmp
cs
or
dec
fistps
add
inc
decb
xchg
loop
inc
adc
push
sti
and
shl
inc
scas
test
mov
repnz
add
aaa
sub
in
jbe
pop
mov
cmp
pop
fisubrl
xchg
push
stos
pop
lea
pop
lds
out
std
sub
cli
dec
pop
add
pop
mulb
mov
inc
mov
lods
and
stos
ficoml
outsl
imull
in
sar
arpl
loopw
test
mov
add
cld
sub
cs
insb
pop
dec
test
pop
hlt
add
adc
mov
add
inc
cmp
into
sti
mov
mov
rorl
sub
and
cmp
aaa
add
cs
gs
adc
pushl
inc
fstpt
mov
pop
cltd
insl
loopne
mov
sub
ds
push
orb
aaa
aas
mov
xchg
or
mov
fdivrl
inc
lds
scas
loopne
adc
test
adc
dec
push
or
dec
dec
lock
test
cmp
push
mov
or
xor
stos
lcall
fistl
push
pop
mov
cmp
imul
jle
pop
adc
inc
push
xchg
rorb
inc
test
sub
faddl
jb
pop
xchg
cli
repnz
jbe
out
sbb
add
outsl
testb
clc
mov
fchs
xchg
dec
sub
sbb
rcrb
sbb
add
mov
lret
lea
sti
mov
movsb
call
push
fs
push
dec
lret
sbb
xor
insl
adc
movsl
jmp
mov
fsubr
add
je
pop
xor
aam
imul
out
sahf
fidivrl
outsb
mov
lcall
test
test
loopne,pt
xorb
sbb
jo
add
add
cmp
add
and
xchg
fistl
js
fstpl
arpl
mov
jmp
pop
shrb
js
cmpsb
or
mov
sbb
pop
xchg
ja
pushf
cmp
push
mov
and
movl
ss
mov
adc
jae
ljmp
arpl
sbb
push
dec
xchg
mov
call
dec
icebp
ds
xchg
out
inc
int3
incl
popa
imul
or
ret
jbe
inc
mov
insl
sub
stos
insl
aaa
shrl
andb
mov
xor
mov
out
arpl
and
cmp
aaa
cmp
push
mov
insl
fwait
test
cwtl
cs
nopl
mov
subl
pop
mov
mov
stos
sbb
mov
sti
lods
das
scas
leave
add
cmp
xchg
sbb
or
mov
shll
clc
adc
fsubrs
fisttpll
pop
stos
insl
sahf
add
rol
je
or
pop
repz
add
mov
mov
mov
push
mov
stos
mov
cmp
dec
lret
repnz
cmp
mov
jle
arpl
cmp
mov
push
orb
cmp
xor
pop
daa
mov
push
mov
insb
adc
xor
bound
or
xchg
pop
roll
sub
jle
adc
loopne
scas
sub
cmp
push
bound
ljmp
dec
dec
test
jg
sti
xchg
dec
scas
push
dec
add
outsl
cltd
xchg
iret
jns
inc
in
cli
ljmp
lods
push
jl
sbb
aas
movsb
int
mov
mov
add
lea
loopne
aam
dec
and
xchg
dec
and
mov
fwait
test
jge
dec
jmp
and
loope
cmpsb
mov
bound
add
adc
mov
push
js
clc
sarl
push
sub
mov
rol
jmp
jns
shlb
cld
or
jne
jb
ficoms
cs
pusha
mov
cli
mov
daa
fstp
decb
lea
outsb
ja
mov
and
lock
and
fisubrs
movsl
push
xlat
ret
dec
test
mov
aad
ja
add
vmaskmovdqu
stc
testl
daa
pop
and
inc
push
xlat
push
pusha
ljmp
and
xchg
repz
outsl
xor
ljmp
xor
and
imul
lea
and
bound
cli
fnstsw
out
insl
ljmp
add
fisubl
sbb
dec
lret
push
outsb
or
das
mov
insb
xor
add
incl
in
les
push
add
test
pop
jno
jp
cmp
push
mov
jne
enter
aaa
popa
mov
and
sbb
call
cmpsl
xor
ljmpw
pop
mov
add
add
mov
mov
lods
clc
cmc
or
jbe
icebp
cmp
inc
jecxz
add
addr16
adc
loopne
push
ss
xor
xor
cli
jg
pop
negb
adc
pop
mov
inc
mov
stos
mov
ja
cmpb
loop
push
mov
pop
cld
lods
or
iret
pop
aam
cwtl
push
and
adc
sbb
xor
xor
inc
mov
int3
in
orl
pushf
adc
roll
hlt
mov
add
ss
rcll
jo
xor
int3
test
and
fwait
push
cmpb
push
ljmp
nop
stc
sub
sub
subb
inc
psllw
cld
inc
mov
pop
mov
or
add
cli
xchg
sub
aas
mov
aaa
cs
jg
test
dec
and
cwtl
and
or
in
jp
ret
mov
xor
mov
lods
pop
test
and
pop
mov
push
inc
pop
std
mov
push
mov
out
push
mov
adc
das
push
setbe
sti
sub
pop
pop
pop
mov
pushl
xchg
inc
jle
test
or
xlat
in
pop
cli
aaa
adc
arpl
mov
out
or
inc
mov
inc
ficompl
loopne
pop
icebp
lock
jmp
insb
in
loope
xchg
mov
movsl
in
push
adc
xlat
xchg
sbb
leave
push
jp
inc
pop
clc
cwtl
sbb
lret
cmc
or
sub
test
pop
pop
fbstp
lods
cmp
gs
arpl
jg
mov
pop
call
mov
xchg
mov
mov
jnp
mov
mov
mov
push
gs
scas
notb
push
adc
or
imul
insb
sti
xchg
cmc
ficomps
jge
je
aad
and
mov
or
icebp
and
in
inc
das
in
push
test
lods
ja
mov
sub
and
xor
xchg
jbe
add
pushf
pop
lea
cmp
in
cli
dec
movsb
and
mov
xchg
cli
add
jb
sti
cmp
das
fdivl
mov
inc
sub
aad
add
mov
in
sub
and
and
xchg
fcmovu
push
aas
fs
movsb
push
or
xor
je
pop
fidivs
pop
or
jl
gs
jb
add
pop
lds
sub
imul
in
in
pop
pop
sub
push
pop
sub
pop
call
dec
aaa
mov
sbb
dec
jge
rorl
out
scas
sub
inc
imul
inc
mov
push
jae
orl
test
aad
outsb
push
fstl
lea
and
aam
mov
jl
shl
cld
jg
mov
imul
test
mov
addb
adcl
je
aaa
scas
mov
mov
aad
std
add
je
cld
lret
flds
mov
ficompl
sti
ds
aas
mov
hlt
jno
les
push
cwtl
xchg
out
push
xchg
rcll
incl
xchg
mov
out
je
xchg
ficoms
add
rorl
pop
and
orb
jmp
push
add
repz
xchg
mov
lcall
push
inc
jno
xchg
les
sub
orl
push
fcompl
mov
mov
lcall
xchg
in
sub
mov
mov
iret
aas
adc
or
mov
cld
xchg
fimuls
js
out
inc
ret
mov
es
cmp
cmp
mov
das
lods
mov
pop
out
jecxz
adc
sub
or
ljmp
sbb
pop
mov
dec
rcrb
jb
mov
in
inc
pop
loopne
pusha
dec
orl
sbb
or
inc
and
pushl
je,pn
jo
fwait
bound
popf
jbe
adc
sbb
mov
sub
and
outsb
cmp
jbe
push
add
mov
cmp
sbb
popa
add
outsb
hlt
std
sub
adc
inc
lock
into
ja
movsb
add
jle
sub
subl
js
inc
insb
jmp
test
pop
je
repz
aad
mov
mov
out
inc
mov
xchg
pop
and
inc
cmp
xchg
dec
sbb
aad
push
rcll
jg
mov
dec
push
and
aad
push
mov
inc
mov
sbb
xor
fcom
xchg
in
pop
dec
aas
cs
pop
test
psllq
clc
inc
mov
btr
aad
ret
pushf
dec
mov
testl
mov
das
inc
add
movsb
or
call
pop
insb
movsl
mov
stc
lock
notb
fsubrs
movsb
push
pop
jmp
lock
mov
sub
insb
das
xor
lcall
fdivl
dec
mov
mov
std
scas
ss
ljmp
jnp
mov
mov
rol
shrb
add
insb
mov
mov
sub
inc
mov
add
xor
mov
xchg
jecxz
push
shl
lcall
mov
sub
mov
pop
cli
ljmp
jge
pop
lods
mov
ret
jecxz
out
or
jmp
or
lods
leave
std
mov
add
xor
fidivs
cld
popl
mov
jbe
cmpsl
mov
rorl
pop
jo
lahf
cli
sbb
repnz
cmp
mov
loop
mov
mov
adc
cli
or
out
add
mov
pop
push
shll
loop
inc
inc
idivl
fs
rolb
xor
mov
push
adc
pop
or
pop
adc
in
xchg
aad
std
xchg
sub
pop
or
lret
mov
sub
ss
jno
aam
imul
data16
sarb
jne
rorl
popf
adc
scas
add
push
jg
sub
call
loop
nop
cmp
jae
xor
loope
mov
sahf
mov
dec
shlb
add
shlb
jg
frstor
add
add
int
dec
popa
sbb
iret
jb
insl
mov
or
or
adc
int
adc
mov
sbb
movsb
push
jbe
sub
dec
push
push
inc
shrl
jle
test
mov
and
jge
push
xorb
pop
add
stc
outsb
cwtl
loop
inc
adc
std
jl
das
push
mov
rol
cs
push
lock
shl
ret
fildll
rcl
ja
ret
add
fildll
adc
adcb
lods
lcall
pop
add
inc
aad
jns
xchg
push
sub
cmp
pop
xchg
sarl
in
pusha
xor
das
mov
push
lret
ja
inc
jge
clc
and
call
mov
test
jl
cmp
xor
hlt
testl
cs
add
pop
jl
imul
int3
sub
imul
push
sbb
add
pop
mov
and
rorb
sti
jmp
cmc
sar
int3
add
or
cmp
adc
popf
in
js
xor
loopne
pop
jg
push
sbb
in
sahf
subb
or
add
dec
pop
cltd
dec
test
inc
pop
and
stos
pop
mov
idiv
rcr
clc
jecxz
ljmp
ds
or
pop
push
inc
pop
mov
adcb
sbb
sbb
mov
in
addl
ret
add
out
adc
loop
shlb
fidivrl
xlat
imul
ss
jle
out
add
cmp
and
dec
mov
cmp
rorb
lea
jb
bnd
xor
or
mov
dec
jno
in
pop
jbe
cmc
inc
or
jne
xlat
xchg
pop
mov
call
pop
cmp
xor
mov
rol
cmpsb
inc
adc
cmp
sbb
pushf
enter
cmp
hlt
lea
mov
adc
cmp
imul
jo
stos
aam
mov
stos
or
add
inc
inc
rolb
jp
pop
in
push
repz
inc
xor
movsb
loope
rorb
jnp
imul
divl
lods
jbe
das
xor
xor
push
push
mov
fidivrs
cltd
xchg
hlt
mov
mov
and
icebp
mov
jecxz
inc
sti
mov
dec
rcrl
mov
cs
xchg
movb
mov
fisttpl
aaa
lock
fisubl
hlt
jle
pop
xor
pop
dec
adc
add
mov
jle
mov
divb
lea
xchg
movsb
xor
cs
mov
lods
mov
mov
shll
test
aaa
cmp
or
in
pushl
xchg
mov
dec
adc
mov
jl
in
outsb
insb
cld
jo
movsl
add
aaa
inc
sarb
xchg
sahf
or
loope
sbb
test
into
fcmovnbe
and
lcall
adc
push
shlb
cmp
jmp
fistpl
mov
sarb
rorl
cmc
outsl
add
cmp
jge
inc
mov
inc
aam
ffreep
scas
push
jno
daa
rcl
or
sbb
inc
xchg
imul
dec
pusha
pop
in
shl
test
mov
mov
fstpt
push
rcr
js
xchg
inc
loop
mov
push
clc
push
add
mov
mov
sbb
inc
not
sbb
fiadds
add
add
movsl
mov
and
adc
inc
fsubrs
dec
and
loope
leave
push
idivb
mov
js
jl
cltd
sub
dec
minps
jmp
lret
add
add
sbb
ret
push
or
rolb
adc
push
into
jns
aaa
je
mov
push
adc
mov
jo
loopne
rorb
loop
xchg
loope
call
jae
aaa
cld
gs
je
test
mov
stc
aaa
and
in
jmp
arpl
je
outsl
mov
add
sar
dec
lock
cmp
fiadds
mov
nop
mov
dec
cmp
jbe
subb
jnp
and
or
clc
mov
ficoml
rorb
popa
jg
leave
in
cs
jmp
sub
cmc
push
and
repnz
xor
insl
dec
je
sbb
pusha
rolb
cmc
out
mov
adc
sbb
pop
mov
mov
or
cmpsb
push
jp
sti
ficompl
pop
test
xorl
call
or
mov
mov
mov
mov
mov
mov
stos
dec
adc
addl
shr
loopne
xchg
repnz
xor
add
pop
in
jle
ror
gs
imul
jb
imul
mov
or
pop
jle
sub
xor
je
daa
sbb
sub
clc
lods
mov
pop
fmull
adc
aas
and
subl
pop
xor
repz
mov
nop
pop
ret
xor
notb
fidivl
xchg
cmpsb
pop
mov
xor
fisubl
jmp
lods
out
push
or
cmpsb
sti
jmp
hlt
xlat
lret
add
and
xchg
xlat
jo
add
xchg
or
mov
adc
cmp
dec
xchg
and
rcll
mov
sub
fs
test
rorl
loope
add
popf
jmp
nop
push
lock
in
adc
cmp
push
sub
test
neg
cmp
pop
das
adc
sub
test
and
sub
xchg
outsl
test
push
xchg
stos
and
arpl
jbe
fdiv
fsubrs
loope
mov
jle
and
add
out
ljmp
inc
jl
mov
loop
dec
aas
stc
or
clc
or
fildl
jp
push
mov
cmpsb
xchg
and
push
pop
mov
mov
sbb
pop
ljmp
xor
je
or
sub
jmp
jecxz
lds
popf
xlat
insb
xorb
cmc
jb
mov
loopne
test
add
das
mov
cmp
pop
jp
rclb
or
incb
arpl
mov
xor
cmp
lds
mov
xor
jae
loopne
mov
repnz
decb
repz
aam
leave
inc
add
add
dec
pop
or
sbb
add
pop
fcom
clc
out
add
inc
cmp
sbb
xchg
ss
cmp
leave
dec
cmp
add
ret
push
xlat
int
or
push
fidivrl
test
push
leave
aaa
lock
mov
arpl
mov
arpl
mov
sub
add
pop
hlt
xor
or
add
push
aas
jo
sbb
out
jp
push
jnp
out
inc
xchg
xchg
jo
inc
movsl
dec
mov
sub
jmp
and
push
fnsave
sbb
rol
push
push
cwtl
xor
lock
mov
lock
fsubrs
aam
mov
and
jo
and
mov
fxch
push
fmuls
jg
xor
imul
inc
push
mov
test
xchg
clc
pop
and
movsl
or
jno
mov
pop
fsub
sub
push
inc
ficomps
fistps
outsl
jl
and
cld
stos
loopne
sub
push
cli
ss
mov
rorb
es
xor
outsb
fstpl
lds
jb
fbstp
stos
ret
adcl
mov
cmpsl
pop
mov
mov
mov
dec
or
add
nop
pop
ds
mov
or
jmp
rclb
mov
mov
pop
in
jne
jmp
stos
aam
shrb
cmp
add
jmp
adc
mov
cmpsl
mov
mov
aas
test
jle
std
pop
jo
inc
pop
xchg
int3
int3
push
out
push
sub
mov
xor
ja
loop
scas
shll
movl
inc
inc
cmc
mov
orb
or
push
mov
adc
or
dec
mov
fisubl
push
cmpsb
push
adc
les
lods
ljmp
push
add
pop
pop
mov
mov
add
fidivl
jl
rorb
daa
add
jp
movsb
andps
jo
ss
mov
mov
jmp
xor
test
push
jle
sti
jnp
scas
jb
loopne
int
push
jnp
add
jo
sti
sbb
pusha
rorl
inc
push
in
jmp
arpl
fcmovnbe
xor
sub
aas
sbb
loopne
sbb
sbb
mov
loop
adc
lcall
and
and
inc
jg
insl
add
mov
lds
cmp
call
outsl
mov
fs
nop
ficomps
mov
push
bound
mov
jb
mov
shll
test
dec
inc
jle
inc
jne
pop
sub
cld
mov
add
or
dec
out
je
enter
cld
divb
sub
pop
sub
mov
xor
pop
sub
sub
mov
scas
aas
test
push
andb
jl
adc
mov
insb
enter
push
push
std
push
pusha
xchg
inc
cmp
inc
call
push
cmp
push
pop
pushl
lock
jmp
fisttpl
xchg
mov
scas
dec
hlt
mov
jo
or
sahf
xchg
jnp
shrb
xchg
push
ja
scas
mov
int3
sahf
lcall
dec
popf
int3
add
and
sub
scas
fldt
add
xchg
mov
loope
add
fistpll
add
outsb
cmc
lods
adc
pop
mov
insb
or
ljmp
xlat
movsb
or
sbb
xchg
and
test
inc
sbb
enter
and
and
fnstsw
jg
and
mov
pusha
mov
adc
mov
rolb
fstps
aad
inc
int3
adc
sbb
mov
popf
fsubrs
cltd
sub
mov
outsb
jne
jge
hlt
sbb
insl
or
xchg
scas
adc
test
cmp
clc
sbbb
es
iret
inc
add
pop
pop
out
out
clc
lahf
ret
jb
pusha
sti
mov
shlb
xor
fisttpl
cld
mov
pop
mov
test
adc
inc
pushf
or
mov
je
lock
pop
mov
testb
dec
repz
repnz
push
mov
sub
cmp
shll
lcall
jno
mov
das
mov
jns
out
mov
js
sub
add
sub
outsl
or
fnstcw
test
jbe
cmc
test
mov
or
push
pop
jno
jb
fdivl
sti
cmp
outsb
mov
adc
mov
mov
jno,pn
cwtl
lods
sahf
adc
push
xchg
fists
or
mov
inc
popf
cmpb
jecxz
sarl
test
shl
mov
and
filds
inc
push
push
pop
dec
mov
push
rcr
cwtl
jnp
fisubrl
mov
test
pop
das
mov
loope
les
dec
sbb
mov
mov
or
adc
loope
mov
xor
rcrl
repnz
rcr
push
sub
mov
mov
pop
fsubs
cmp
xchg
push
mov
dec
mov
mov
jecxz
xchg
sub
push
or
cmpsb
xlat
icebp
xlat
and
rclb
mov
inc
jns
sti
in
sub
rolb
xor
pushf
dec
mov
in
or
stc
mov
adc
mov
xchg
xor
xchg
adc
mov
push
enter
pop
ja
pushf
adc
test
mov
and
push
xchg
mov
pop
xchg
popf
jecxz
aad
outsl
imul
add
adc
push
rclb
pop
aas
in
push
loope
push
roll
in
pushf
push
xchg
imul
jg
jl
hlt
addr16
fwait
and
sub
es
emms
or
shll
std
bnd
inc
inc
in
pop
shlb
lds
cmp
icebp
xor
inc
pushf
scas
and
mov
pop
or
loope
jge
cmp
xchg
sahf
notl
fdiv
sub
cwtl
adc
xlat
push
pusha
inc
add
int3
jbe
adc
stos
xchg
out
ficoms
orb
test
mov
pusha
dec
lock
orl
mov
mov
push
movsb
pop
dec
sub
add
jp
mov
xchg
js
inc
push
mov
and
mov
cmpsb
push
das
fwait
mov
jge
adc
js
pop
push
and
adc
jo
pop
sarl
and
les
push
mulb
std
or
inc
aas
aam
subl
lcall
call
test
mov
jo
das
movsb
adc
push
pop
insl
add
cmp
push
roll
insl
je
jo
jae
shl
and
imul
xor
out
data16
pushl
inc
pop
add
shl
mov
popa
testb
or
out
call
sub
inc
add
push
shlb
std
or
add
ret
jmp
inc
mov
mov
lcall
or
dec
xchg
int3
test
lock
mulb
cmpsl
push
mov
jmp
mov
dec
aaa
std
lcall
push
test
pop
mov
xor
cltd
xchg
pop
mov
sub
pusha
inc
fcoms
sahf
jle
xchg
sti
and
rorl
std
mov
rclb
cmp
fnstsw
xor
and
or
add
add
cmpsb
ja
cmp
and
mov
das
xchg
or
add
add
adc
mov
push
or
sbb
es
push
mov
lods
push
mov
mov
outsb
outsl
xchg
sbb
xor
pop
aaa
clc
mov
sbb
add
push
imulb
shll
xor
filds
call
push
and
sbb
sbb
leave
sahf
pop
lea
sub
jbe
icebp
cltd
nop
test
xchg
or
mov
clc
dec
adc
push
cmpsl
adc
cmp
fistl
outsb
push
mov
sar
xor
aaa
rcll
inc
cmpsb
and
add
mov
xchg
jns
popa
mov
mov
dec
sbb
cmp
neg
rcll
push
daa
jmp
xchg
mov
or
dec
mov
adc
sbb
popl
pop
js
lret
push
jo
insb
cmp
fdivr
push
mov
push
inc
ja
fildll
jle
dec
stos
out
dec
ja
jge
sti
and
or
pusha
or
xlat
and
pop
xor
shlb
outsl
xor
push
shrl
jp
cmp
aaa
add
sbb
dec
xchg
push
or
cli
mov
fisubrl
sbb
jae
and
filds
ficoms
mov
in
fimull
sub
jae
and
or
lods
filds
cmc
outsb
sub
mov
jns
repnz
scas
xor
sahf
jno
sahf
pop
lcall
lock
js
push
outsb
cmc
mov
repz
movsl
loope
hlt
cmp
sub
pusha
cmc
inc
dec
sti
pop
stos
fsubrp
cs
inc
sub
leave
mov
fs
in
addr16
test
dec
fs
scas
mov
dec
shll
xchg
pushl
shll
pop
push
cmp
mov
leave
xchg
mov
in
loop
pop
jo
cmp
pop
sbb
jg
pop
bound
and
xchg
sbb
test
iret
mov
aad
std
dec
cmp
mov
mov
test
fcomps
lea
pop
jle
insb
cmpsl
inc
sub
and
mov
mov
rcrl
pop
imul
xor
cs
cmp
sbb
xchg
addb
aam
movb
int3
inc
or
scas
pop
xchg
in
add
cmp
or
mov
ja
mov
repnz
cmpb
inc
pusha
add
call
pop
push
and
add
mov
jae
mov
hlt
insb
fldt
or
mov
cs
mov
jne
pop
lds
adc
pusha
loopne
sub
in
inc
xor
fwait
cli
pop
cld
jl
adc
jmp
call
fmuls
push
jne
sub
add
mov
out
fs
or
pop
lods
shll
jp
inc
imul
test
cmp
sahf
je
xchg
inc
rorl
movsl
cmovl
in
scas
rcrl
fs
mov
xor
xor
xchg
xchg
adc
imul
les
push
fisubl
jmp
cmc
inc
ret
jl
sbb
outsl
insb
adc
mov
lods
add
xchg
inc
xchg
push
pop
jb
dec
insl
pop
subb
push
inc
subb
xor
jge
lods
cmp
jg
or
sbb
jecxz
add
enter
fisubrs
mov
dec
fisubrs
sub
dec
sbb
inc
xlat
pop
shrl
hlt
mov
mov
arpl
jo
dec
cmp
adc
xor
lea
pushf
pop
fadds
jle
add
xchg
jmp
dec
div
add
test
stos
jno
repnz
inc
jb
popf
or
inc
sbb
mov
in
cmp
xchg
jo
xchg
test
mov
fbld
jno
dec
nop
std
jg
hlt
cmp
stos
pusha
cmpsb
shrb
test
das
xor
add
or
std
jle
sbb
jbe
jg
inc
jmp
xchg
scas
incb
cmp
cmp
jnp
xor
push
pop
or
sub
iret
pop
mov
inc
xchg
ret
ljmp
lods
jo
mov
push
jp
mov
cmp
mov
push
inc
repnz
pop
add
std
pop
xor
ja
push
xor
or
mov
push
mov
push
dec
cli
pop
fcom
mov
cmp
or
fnsave
jbe
mov
mov
mov
pop
mov
das
push
fcmovne
cltd
xor
jl
push
xor
or
mov
mov
or
test
hlt
dec
sbb
mov
lods
add
mov
or
or
lret
mov
jae
mov
xlat
push
inc
mov
fisubs
xchg
inc
pcmpgtb
sub
lods
or
imul
inc
add
push
in
push
ret
cmp
and
inc
ss
jo
push
mov
jecxz
pop
bnd
bnd
add
addb
bound
cmp
pop
add
inc
je
int
inc
jne
jo
and
loope
jmp
insl
daa
jo
sub
pop
or
sub
or
in
out
jb
or
incb
push
add
mov
xlat
lods
mov
push
loope
dec
push
jl
data16
push
push
mov
and
mov
push
push
inc
xchg
fs
push
loop
cs
psrlw
js
subb
imul
or
inc
adc
mov
in
and
outsb
addb
push
adc
jg
or
neg
fidivrs
sahf
xlat
in
push
and
adc
ljmp
popa
rcl
fxch
adc
sar
dec
mov
mov
jmp
insl
aad
outsb
sbb
mov
pusha
pop
mov
adc
addb
subb
das
xor
pop
daa
test
std
jg
jl
and
in
je
cld
rcrb
icebp
lret
rorb
imul
ror
xlat
mov
push
sub
les
cmp
sbbb
out
jne
jg
call
adc
jbe
add
aaa
or
inc
pop
in
and
jp
fdivl
inc
sub
lret
decl
lea
push
nop
mov
int3
mov
or
add
mov
mov
sub
frstor
xor
call
xchg
cmp
lods
mov
xchg
das
sub
ja
in
scas
or
call
stos
lea
push
push
add
or
aam
insl
popa
movsl
das
jnp
xchg
insb
fadds
cld
aas
cltd
mov
push
cwtl
push
push
cmp
insl
cmp
sub
or
cmp
icebp
mov
dec
jb
mov
stos
stos
aam
inc
incl
pushf
sbb
inc
push
mov
cmc
mov
sub
mov
out
rorb
push
mov
int3
sub
or
cmpsb
dec
xor
mov
sbb
nop
add
push
mov
lock
inc
lret
je
sti
mov
or
cltd
flds
add
jle
inc
mov
pop
push
loop
outsl
insl
add
sub
jo
lods
fucom
enter
dec
orl
sub
mov
mov
pop
cmc
push
pop
mov
inc
movl
fcomi
jbe
sbb
aam
mov
into
mov
addl
jb
and
push
imul
ja
cmp
dec
mov
fcompl
aad
cs
push
inc
insl
insl
in
lea
jne
fsubrl
dec
lods
pop
dec
ja
ret
lods
and
cmp
inc
je
sarb
inc
mov
mov
rorl
mov
cs
shll
pusha
mov
negb
pop
ret
xor
in
js
inc
sbb
out
xor
push
mov
pop
cltd
in
cmc
out
mov
sub
or
mov
mov
sub
push
mov
push
insb
or
rolb
shll
and
fiadds
sbb
ds
movsb
dec
scas
das
sbb
fstpt
popa
ljmp
aad
ss
xchg
lods
or
aaa
mov
aam
jecxz
cmc
leave
lea
aam
sub
mov
sbb
mov
push
push
jp
pop
xchg
loope
add
push
daa
dec
sub
incl
orl
inc
pop
dec
hlt
in
jmp
mov
movsb
push
je
stos
icebp
adc
adc
clc
pop
jmp
or
fistps
and
push
pop
adc
nop
mov
xor
sbb
jb
stos
pop
jg
js
or
pop
adc
ss
mov
icebp
or
or
ja
sbb
loopne
stos
add
pop
adcb
xchg
or
mov
loopne
mov
push
outsb
in
lret
jecxz
mov
mov
cmp
mov
shr
sbb
jmp
test
in
push
inc
adcb
mov
in
push
push
jge
call
pop
divl
mov
mov
scas
add
int3
lods
sahf
out
sub
sub
pop
mov
dec
lea
sub
and
mov
jnp
push
mov
dec
leave
inc
hlt
daa
inc
adc
push
arpl
loopne
js
stos
ljmp
test
sub
inc
fcompl
fdivrs
inc
jmp
pop
int
mov
xchg
cmp
pop
out
add
push
clc
pop
arpl
js
or
pop
out
push
aas
cmp
xchg
pop
shlb
mov
fimuls
dec
and
hlt
lret
imul
sahf
sbb
enter
fstpt
js
xor
and
pop
cmc
xchg
imul
xchg
lcall
repnz
fisttps
push
in
dec
jmp
push
cmp
outsb
mov
lahf
adc
sahf
push
and
jge
push
bound
mov
xlat
xchg
icebp
sub
inc
cmp
cwtl
add
push
and
out
mov
incb
mov
add
outsb
mov
hlt
lods
xchg
mov
orl
outsl
push
fsubrs
imul
pop
mov
aaa
adc
lods
xchg
jmp
int3
or
stc
jbe
in
xlat
lods
ljmp
xchg
inc
xor
dec
cs
leave
sbb
mov
mov
mov
cmp
inc
xchg
mov
rorb
jge
mov
and
adc
adc
outsb
mov
test
repz
mov
dec
adc
mov
fildl
arpl
imul
pop
mov
ficoml
dec
jae
push
sbb
pop
addb
hlt
inc
sti
pop
mov
ljmp
fs
and
xchg
mov
rol
mov
jl
add
pop
mov
jo
sbb
call
mov
es
add
fildll
in
add
xorl
lea
ss
and
in
or
fists
shl
push
lock
push
clc
ret
mov
push
xchg
ret
into
rclb
push
stc
mov
clc
rcrb
shll
lods
inc
jecxz
ljmp
add
add
loop
stos
sbb
lahf
push
das
pop
and
enter
aaa
pusha
xor
mov
das
dec
xchg
xchg
add
mov
in
shl
insl
pop
subb
and
inc
xchg
push
add
mov
mov
mov
ret
cli
ret
in
mov
sub
jmp
aaa
call
push
aas
push
jp
outsb
cmp
ds
and
mov
test
das
add
or
out
orl
call
and
fwait
mov
push
addr16
pop
jmp
push
or
or
mov
cltd
inc
movsl
xchg
shll
inc
pop
sbb
negb
mov
aad
je
dec
aas
das
fdiv
push
and
in
push
mov
inc
pop
adc
stos
outsb
mov
dec
pop
imul
mov
test
icebp
push
dec
aam
cmp
es
mov
divb
cld
shl
scas
repz
lahf
mov
add
mov
jns
mov
mov
scas
test
pushf
adc
ja
sub
and
jb
mov
loopne
insb
adc
mov
add
pop
decb
push
hlt
xor
or
nop
stc
scas
sbb
repz
or
leave
xor
cmp
pop
insb
jl
mov
ljmp
adc
sarl
leave
mov
mov
pop
adc
lea
lods
jmp
stos
jecxz
pop
clc
pop
mov
es
pushf
stos
xchg
pop
sbb
mov
jo
aas
jp
inc
mov
cmp
mov
rcr
lcall
jp
sub
push
nop
adc
lods
xor
xorb
test
mov
pop
in
nop
mov
mov
inc
in
pop
aam
adc
adc
repnz
push
shrb
sahf
ja
rorl
mov
inc
or
add
mov
push
jo
xor
aad
out
incl
dec
nop
dec
xchg
call
push
mov
dec
adc
lret
adc
jl
inc
mov
push
mov
inc
pop
push
ja
mov
xchg
or
repnz
pushl
xorl
push
cmp
cmp
pop
pop
jno
mov
popa
inc
outsl
push
bound
cmp
jl
ret
xchg
xchg
rolb
cs
mov
xchg
sbb
mov
add
dec
or
cld
mov
and
sbb
stc
jmp
jno
mov
adcl
or
xchg
std
adc
cwtl
lock
je
repz
pop
shlb
mov
cs
shlb
dec
xor
mov
enter
mov
adc
pop
mov
cltd
inc
mov
adc
rclb
test
jbe
sub
gs
or
cltd
mov
sub
jmp
jnp
mov
lock
in
daa
pushf
mov
mov
cltd
and
xchg
mov
ret
fstps
andb
ja
xchg
push
mov
cmp
out
push
or
xchg
cmc
lcall
scas
shll
ja
sbb
std
ja
mov
add
add
jmp
xor
fidivs
sbb
jne
sub
cwtl
push
jge
or
mov
lock
cmp
mov
fwait
pusha
bound
mov
or
inc
mov
in
mov
lods
ljmp
fsub
jne
int3
mov
cmpl
mov
out
mov
fildll
pop
stos
ljmp
cmp
push
pop
fdivl
lods
das
cltd
iret
sub
cli
lcall
sti
xor
movsb
push
clc
test
inc
sbb
mov
iret
sahf
leave
mov
mov
scas
and
test
adc
mov
ljmp
mov
daa
add
int3
ret
clc
pop
mov
cmp
push
cmpsl
push
adc
sbb
cmp
icebp
inc
sub
fcomps
cld
shl
mov
imul
jo
lahf
add
aas
mov
push
into
xchg
out
jo
xchg
and
mov
mov
sub
jbe
das
sub
lea
inc
cmp
mov
inc
mov
outsl
cmp
insl
xor
mov
jmp
call
int3
cltd
test
data16
aas
or
mov
or
loopne
push
or
stos
jge
push
sbb
dec
cmpsb
dec
xchg
xor
mov
cli
push
adc
cmpsb
cmp
or
cmp
test
aaa
dec
xchg
scas
movsl
adcl
subb
dec
mov
xor
rclb
fbld
lods
clc
jmp
stc
test
rol
jno
sti
pop
clc
cltd
mov
inc
pop
cmpsl
mov
mov
and
push
sbb
xchg
add
aam
enter
pop
fwait
mov
push
out
add
aam
mov
rcrb
mov
mov
add
lds
push
addb
out
add
aaa
pop
push
stos
scas
loop
xchg
outsb
scas
loope
pusha
into
cltd
push
mov
or
xchg
rolb
mov
pop
aad
sbb
xor
jns
or
mov
jle
and
lcall
int
adc
pop
roll
addb
movsb
aad
dec
sbb
je
cmpb
jne
mov
mov
xor
and
or
fdiv
out
adc
inc
jmp
icebp
fadds
mov
lock
sub
ss
icebp
outsl
dec
insl
adc
sub
sub
shrb
pop
cli
outsl
mov
and
mov
and
push
cmp
es
rcll
jge
or
fimuls
xor
jg
mov
out
push
sbb
pop
mov
std
mov
roll
and
mov
inc
pop
fadds
inc
rol
decl
pop
sbb
inc
mov
addr16
push
aad
dec
jae
cmp
mov
or
lahf
dec
js
fisttps
and
fstps
push
popf
int
rorb
or
repnz
cmp
pop
pop
push
subl
mov
loop
sub
jbe
xor
in
push
lods
call
mov
dec
call
inc
cmpsl
adc
pop
mov
adcl
mov
xor
mov
lods
dec
out
dec
push
jl
loope
or
sti
push
movsl
cmp
cld
xchg
fisubrs
andb
repnz
sbb
mov
and
loop
sar
adc
mov
sub
ret
sub
push
dec
mov
push
sub
icebp
movsl
push
out
sbb
aaa
mov
shrb
pop
popa
inc
sbb
mov
push
shll
clc
fs
pop
mov
xlat
arpl
cld
stc
or
shll
inc
xchg
xchg
outsb
mov
jb
inc
in
inc
enter
aas
xlat
sub
and
test
out
mov
stos
sub
inc
mov
iret
xor
jle
push
pop
mov
mov
mov
add
test
ja
inc
cwtl
popf
adc
xchg
xor
adc
mov
nop
mov
enter
xlat
aam
call
outsb
xchg
fwait
sbb
lahf
loop
popa
inc
out
jo
add
xchg
out
rolb
and
or
dec
mov
and
lcall
stc
push
fildl
and
int
fs
negl
mov
andl
aaa
add
fstpt
and
mov
fisubrl
cmp
insl
jae
lds
and
add
dec
mov
stc
inc
ret
xor
or
cmp
mov
pop
pop
sbbb
sbb
or
cmpb
sarl
mov
xor
subl
jo
mov
cmp
mov
lret
mov
aad
mov
ss
aaa
cs
int3
adc
dec
inc
adc
iret
or
jbe
lock
int3
sbb
jl
test
add
dec
mov
fildl
fdivs
ret
push
add
fsubrl
push
xor
ja
mov
inc
or
mov
sbb
int3
adc
adc
adc
fidivl
cltd
mov
cli
movb
dec
xor
sub
inc
dec
out
fldl
in
jb
aaa
xlat
push
in
and
inc
xchg
cmp
cmp
test
adc
lcall
out
mov
sub
aas
shll
pop
pop
mov
mov
aad
adcl
test
mov
inc
inc
imul
pusha
dec
jnp
cmp
ret
icebp
loope
add
or
pop
lds
mov
ljmp
sbb
add
test
mov
mov
jl
push
mov
pop
shlb
mov
mov
or
or
jnp
lods
inc
outsb
add
dec
adc
inc
rcll
mov
jb
mov
lods
shl
pop
inc
std
add
cmp
das
xchg
push
stos
and
cld
sub
cli
fwait
call
sbb
adc
adc
or
jns
jb
adc
fimuls
out
sbb
in
dec
mov
gs
or
jecxz
or
scas
mov
inc
jge
mov
pop
push
cwtl
jb
lock
imul
movsl
pop
call
add
adc
je
and
mov
sbb
mov
nop
adc
xor
rcrw
pushf
ds
notb
mulps
xor
or
fldt
insl
inc
inc
in
pusha
sub
pop
and
sbbl
movsl
adc
fsubs
cmp
sub
fisttpl
out
sbb
mov
popa
push
pop
lods
push
cwtl
daa
jg
xor
lock
cmpb
lods
push
sahf
es
adc
das
dec
test
rolb
rorl
adc
loopne
imul
scas
enter
ss
fists
out
mov
mov
cmp
test
push
push
aas
jno
jge
bound
pushf
and
inc
inc
popa
ret
add
js
and
sbbb
loope
pop
ds
xor
dec
and
in
cmp
dec
mov
jne
lods
mov
int3
or
out
pop
mov
mov
cmp
push
je
mov
in
dec
fistpl
loop
std
mov
mov
js
cmpsb
fisttps
outsb
ja
incl
mov
std
scas
gs
scas
test
mov
cli
or
mov
and
push
pop
shlb
sub
jp
xor
mov
test
push
movsb
mov
xor
dec
incb
adc
neg
shr
movsl
sbb
dec
leave
sti
mov
pop
sub
aad
imul
cs
mov
jp
mov
fimuls
mov
pop
cs
rol
fwait
dec
aad
test
sbb
adc
push
mov
jl
fisttpl
mov
xor
addr16
jb
add
push
push
addl
outsb
jle
call
arpl
mov
test
pop
mov
mov
cmp
adc
cmc
mov
add
adc
or
mov
fbld
scas
pop
adc
pop
pop
cmpb
or
mov
dec
mov
pusha
xor
negb
andl
mov
add
lods
fimull
and
add
aaa
hlt
wbinvd
sub
test
mov
sbb
pushl
cmc
fs
add
cltd
mov
cmp
stos
mov
ret
jmp
jnp
aad
dec
jmp
push
mov
filds
mov
cmp
or
clc
enter
ret
mov
ljmp
cmp
adc
cmp
dec
push
fcoml
lcall
push
add
ss
test
pop
mov
pop
test
sub
jb
cli
test
and
push
inc
xchg
sbb
pop
add
cmp
inc
push
shll
aaa
xor
inc
test
and
mov
jmp
push
test
sub
out
push
sbb
lods
mov
clc
lds
sub
mov
outsl
push
cltd
pop
add
jge
xchg
cmp
mov
imul
cs
xchg
adc
cmp
aaa
je
mov
mov
adcb
test
sub
sub
sub
outsl
sbb
idivl
and
lret
cmpsb
sub
fildll
jmp
sbb
sar
stos
js
mov
pop
rclb
ss
pop
lcall
sbb
mov
and
inc
outsb
pop
inc
sti
aas
dec
and
mov
lahf
popa
mov
test
jg
inc
push
xchg
scas
daa
lret
setg
sbb
sbbb
ret
jno
xchg
test
cwtl
and
shrl
leave
loopne
shrb
adc
push
mov
das
pop
fsubs
ficompl
test
in
xchg
lods
je
mov
mov
push
iret
fwait
call
cmpsl
xchg
movsl
fmull
or
not
test
push
test
sbb
jl
cli
sbb
dec
notb
sub
fldl
sub
ss
push
lock
outsl
jl
cltd
les
jg
inc
in
xor
test
jne
lret
loop
scas
add
dec
jmp
sub
rorb
clc
ja
aad
ljmp
xchg
and
jo
cmpsl
sbb
inc
std
outsl
cld
and
sub
outsb
sub
adcl
imul
dec
and
rclb
sti
add
sub
lock
pop
mov
aad
mov
jo
xor
ffree
and
and
les
xor
call
add
push
mov
cltd
rcrb
mov
insb
lds
xor
ljmp
loop
jb
xor
aas
lods
cmp
test
fdivrl
icebp
mov
xchg
inc
pushf
jl
imul
and
inc
leave
testb
popl
lods
mov
ss
je
mov
xchg
fdivl
xchg
inc
test
in
popa
cwtl
pop
dec
dec
in
fistpl
sub
imul
push
xchg
mov
repnz
mov
movsl
mov
popa
jecxz
addr16
jbe
add
into
lret
push
push
adc
shrl
cmp
pop
pop
outsl
bound
fnstenv
in
and
lret
lret
outsb
adc
repnz
roll
sub
adc
clc
push
or
rcr
adc
push
sbb
xor
add
inc
mov
add
daa
pop
mov
sti
ja
cmpsl
addl
loopne
inc
in
int
jmp
int
adc
xchg
lds
inc
dec
das
lahf
scas
xorb
xor
in
movsb
xor
or
or
mov
shll
insl
cmpsb
pop
or
and
repnz
fiadds
or
subb
dec
jl
cs
add
add
orb
push
or
jmp
dec
inc
inc
sub
adc
test
mov
dec
jle
pop
lods
aaa
jno
mov
pop
cmc
fnsave
cli
dec
movsb
les
push
shrb
sub
inc
and
cmpb
cmpsb
mov
movsb
bound
mov
repnz
lcall
movsb
pop
clc
iret
icebp
xchg
xchg
movsl
or
mov
and
inc
into
and
add
outsb
add
movb
xor
rol
mov
in
lret
pop
fmuls
out
inc
fucomip
rol
jno
cwtl
mov
mov
mov
outsb
mov
ljmp
outsl
je
aas
sbb
mov
mov
roll
cmpsb
cmpsb
shll
mov
or
lods
mov
jns
or
jns
cli
mov
mov
or
lea
call
mov
pop
cmp
dec
subl
arpl
loopne
dec
sub
test
adc
movswl
push
addr16
pop
aam
pop
push
aad
rcrb
push
test
sub
subl
lds
iret
xchg
popa
leave
je
push
fwait
inc
scas
push
fwait
sbb
xchg
mov
push
loop
pop
mov
cld
cs
pop
cmp
iret
rdpmc
cmp
inc
mov
into
mov
ljmp
rcll
adc
hlt
dec
or
cmp
adc
aaa
sub
sar
fistpll
or
xchg
js
add
pop
shlb
add
sub
xor
clc
clc
mov
pop
stos
fs
sub
adc
fists
push
xor
out
xlat
sbb
pop
jbe
repnz
in
out
mov
or
cwtl
ficompl
clc
push
inc
inc
pop
sub
pop
cs
in
andb
hlt
jmp
lods
ss
lahf
clc
cmc
inc
clc
imul
fisubrl
ljmp
pop
movsb
or
in
ret
and
and
js
sahf
lds
inc
std
das
inc
insb
scas
pop
inc
and
orb
and
fldl
xchg
adc
xorl
cmp
xchg
pop
sub
std
or
call
xor
push
scas
lods
pop
pop
jle
inc
cmp
lock
jns
add
xchg
ret
mov
sbb
dec
cld
iret
loope
cs
mov
inc
ja
lea
fsubs
push
fsubl
jecxz
shrl
mov
rcl
dec
shll
mov
loopne
aas
pop
push
ss
icebp
and
pop
xor
jo
fidivs
repnz
sub
adc
lcall
rol
cli
jbe
stc
jg
call
rcrl
mov
out
sbb
dec
push
shlb
fcoms
enter
fnstsw
mov
adc
ss
pop
jbe
lret
shll
mov
cmp
lcallw
fdivrp
lcall
cmc
add
rcll
cli
dec
hlt
xor
push
adc
inc
fistpll
xchg
inc
pop
adc
mov
pop
test
xor
mov
and
inc
fcomi
cmp
adc
lret
pop
adc
mov
das
inc
subb
mov
scas
rorb
mov
cmp
sbb
sbb
push
je
and
lahf
cwtl
ss
shrb
or
ret
aad
jge
mov
pop
cs
in
ss
add
popa
mov
xchg
sti
shll
leave
mov
loop
daa
xchg
pop
addps
movsl
ret
mov
xor
mov
push
cmp
jnp
test
std
movsl
fistpl
mov
push
and
cmc
and
dec
dec
shrl
xor
mov
fnstenv
or
incb
out
sbb
xchg
and
xchg
sbb
insb
sub
mov
pop
ljmp
hlt
xchg
cli
adc
iret
ss
mov
cmp
outsl
aas
cli
adc
aaa
xor
mov
cli
aaa
push
inc
ret
adc
cmp
in
movb
or
nop
mov
sbb
inc
pop
lock
push
add
out
outsl
fcom
aad
add
pop
aaa
js
or
lahf
sub
jnp
sbb
cmp
mov
outsl
mov
lods
mov
loope
push
cwtl
add
mov
dec
dec
add
out
loopne
push
and
lahf
pop
mov
mov
xchg
xor
push
dec
sahf
or
das
xlat
iret
xchg
and
loop
inc
insb
pop
fsubs
xchg
movsb
out
cli
bound
insl
andb
xor
xchg
ret
pop
jo
mov
mov
rcrb
lock
int
inc
mov
push
xchg
or
add
ficoml
jecxz
dec
mov
aaa
clc
pop
shlb
mov
jge
inc
jbe
adc
sbb
jae
pop
and
jg
xlat
fldt
dec
rcr
sub
imul
mov
xchg
fwait
cwtl
push
add
push
dec
mov
dec
lea
mov
outsb
test
and
ljmp
icebp
jbe
mov
sub
ret
je
pop
inc
sbbl
outsl
in
mov
lds
jecxz
dec
test
mov
jp
push
mov
add
add
cwtl
fs
call
push
xchg
sub
cli
es
mov
mov
data16
mov
push
push
lcall
hlt
in
ja
push
ljmp
js
aas
cmp
sbb
stos
addl
orb
stc
lds
push
loopne
movsl
mov
enter
sbb
rcll
pop
mov
cld
icebp
inc
inc
js
jb
aam
test
jp
das
mov
fbld
pop
call
add
mov
add
ds
int3
fistpll
in
xlat
push
xor
mov
fcoms
outsl
insl
outsl
sahf
rolb
and
call
pusha
mov
cwtl
push
mov
sarb
adc
imul
test
xchg
pop
outsb
pop
add
add
adc
xchg
jg
jmp
enter
in
push
lahf
jnp
xchg
inc
inc
sbbl
push
aad
fisttps
cmp
and
nop
das
sbb
lret
mov
xchg
hlt
sbb
call
in
aad
aaa
xor
lds
dec
bound
insb
or
push
jmp
jnp
xchg
mov
lcall
adc
adc
ret
inc
mov
es
negb
mov
sub
shrb
jg
mov
stos
add
sub
call
js
pop
enter
sbb
adc
aas
pop
fwait
mov
std
popf
or
pop
jne
in
insl
rcrl
push
ja
xchg
or
mov
jmp
mov
inc
jns
adc
outsb
dec
mov
add
ljmp
or
ljmp
jb
xchg
xchg
or
pop
icebp
xchg
iret
add
addl
out
fwait
outsb
xor
fildll
rcr
xor
mov
cmpsl
data16
add
mov
in
fbstp
mov
imul
pop
bound
sub
or
gs
aam
mov
jb
cmpsl
test
cld
dec
mov
pop
stos
pop
xchg
or
mov
mov
lea
adc
sar
lods
std
stos
mov
push
lock
lea
adc
leave
adc
mov
xlat
insl
mov
add
push
sbbb
ficompl
outsl
test
adc
jp
iret
icebp
or
jge
dec
or
sbb
xchg
test
add
int
dec
insl
loope
call
rorl
jg
mov
mov
jne
sbb
lods
jecxz
into
push
insl
jns
push
addr16
clc
add
hlt
inc
or
add
cs
pop
outsb
or
pop
jno
adc
add
xchg
jle
loop
mov
or
pop
imul
pop
das
fisubs
xor
aam
jmp
xor
daa
pop
shr
popf
adc
sti
test
stos
jg
push
in
in
dec
or
insl
sbb
and
ljmp
xor
mov
cld
xchg
jmp
push
dec
shrl
cmp
sbb
xchg
jnp
rolb
fldt
mov
popa
pop
shlb
pusha
insl
mov
icebp
push
xchg
test
inc
add
lds
imul
leave
jo
repnz
push
outsb
inc
inc
adc
jge
ret
sub
inc
rol
movsb
adc
sbb
stc
push
test
pop
xchg
popf
jb
cltd
pop
cwtl
cmpsb
aas
mov
std
or
lock
xor
movsb
cli
jl
test
mov
mov
pop
push
push
test
mov
insb
pop
test
push
test
fcomip
xor
movsl
or
decb
mov
out
cmp
fildl
int
sbb
mov
test
cmpsb
cwtl
xor
jb
cwtl
stos
fcmovu
cs
movntq
out
sbb
popa
sbb
jb
test
lock
push
dec
xchg
xchg
cld
push
fimuls
xchg
aas
xchg
pop
add
clc
inc
filds
les
mov
sub
rcl
les
daa
out
mov
out
xchg
inc
aam
adc
and
imulb
xchg
jecxz
lea
aad
add
add
lock
flds
xchg
insl
sub
call
or
dec
pushl
nop
jae
add
subl
insb
adc
push
fsubrl
cmpsb
mov
fstl
loop
shll
or
inc
and
aas
mov
add
inc
pop
jle
dec
jmp
xchg
movsl
mov
lds
mov
lea
fldl
mov
leave
repz
pusha
inc
test
or
in
add
cli
add
rcl
mov
repz
adc
sbb
and
cltd
scas
fstpt
ja
rorl
mov
xchg
sub
jne
outsb
ljmp
and
cmpb
xchg
shrl
aad
xor
fisubl
add
dec
push
fadd
add
xchg
or
push
add
and
fdivs
mov
add
icebp
push
mov
clc
imul
scas
adc
push
sbb
ja
cld
mov
loope
out
iret
movsb
add
mov
sbb
sub
jg
xchg
pop
ss
or
mov
jbe
insl
nop
sub
icebp
out
mov
xlat
das
js,pn
into
push
xor
adc
add
and
mov
call
mov
sarb
xorl
mov
add
xor
inc
outsl
sub
nop
mov
cmpsl
test
in
sbb
fstl
fidivl
or
xchg
loopne
popa
mov
outsb
sub
lods
adc
push
clc
adc
push
bswap
mov
ja
jae
ja
sbb
cmp
xchg
lret
je
and
push
es
cmpsl
outsb
or
int
and
push
notb
mov
cmp
es
je
lea
or
inc
fdivrl
addb
cwtl
test
in
outsl
mov
mov
cs
lods
sub
aas
fcmovbe
imul
icebp
sti
ret
add
dec
sub
pop
mov
mov
push
outsb
shl
outsl
fsub
inc
xchg
or
and
pop
daa
and
icebp
das
fmull
mov
jle
jne,pt
sbb
cmpl
sub
jp
cld
dec
jg
leave
test
push
daa
mov
jge
adc
inc
sbb
push
iret
js
enter
mov
inc
push
and
mull
sahf
mov
ljmp
jp
or
in
xlat
leave
push
and
sub
fwait
sub
pushf
cmp
fists
jp
mov
icebp
xor
push
outsl
inc
jmp
fdivr
repz
add
into
jne
ljmp
sub
mov
mov
inc
pop
add
jecxz
pop
mov
jl
inc
test
inc
mov
ja
icebp
push
std
mov
adc
test
iret
pop
pop
mull
jae
push
sahf
fldt
mov
ficompl
mov
push
in
fwait
sub
out
sbb
push
push
test
call
cs
stos
inc
mov
adc
sub
and
vpmacsdql
test
and
or
rcll
outsb
cltd
jle
mov
out
pop
mov
cmp
roll
sbb
pop
hlt
mov
orl
enter
inc
xchg
insb
adc
fs
pop
pop
xlat
xchg
jnp
jo
outsl
mov
sub
sbb
inc
dec
push
and
jne
orl
aam
mov
lds
popf
ss
das
push
or
dec
imul
shl
cmc
ja
jne
data16
push
push
xchg
mov
test
loopne
mov
push
jge
inc
dec
inc
xchg
adc
mov
dec
sahf
cmp
addl
sbb
add
or
xchg
fcomi
cmpsb
dec
push
repz
xchg
pop
inc
les
add
push
arpl
cmc
call
or
sub
movl
insl
outsl
mov
repz
pop
cmp
cmpsb
pop
es
dec
loope
mov
dec
add
sbb
push
aaa
mov
out
fldt
jne
cmp
jmp
inc
dec
es
jo
inc
push
and
mov
push
imulb
push
jl
inc
add
and
push
sub
jl
outsb
outsl
fwait
pusha
mov
sbb
pushl
mov
xor
ret
cmp
je
test
outsl
push
shl
mov
arpl
mov
hlt
add
mov
cmpl
inc
xor
inc
sbb
cmp
adc
sub
lret
and
mov
jg
mov
insl
add
lods
mov
or
in
pop
pop
xor
cmpsb
mov
out
and
xlat
ret
iret
mov
add
or
outsb
aad
dec
lret
stos
movsb
insl
repnz
in
aaa
sbb
mov
mov
mov
call
cmpsl
das
push
cmp
xchg
xor
mov
outsl
loopne
mov
and
fdivr
decl
call
loop
test
push
lret
and
push
jne
test
inc
lock
jmp
or
pop
push
inc
jmp
je
aad
out
sub
mov
and
xchg
ljmp
jge
xchg
mov
mov
in
pop
jae
mov
push
dec
mov
hlt
lock
pop
fcmovb
lods
inc
out
ja
rcrl
aad
insl
adc
pop
negl
mov
adc
inc
inc
rcll
pop
pusha
xor
int
das
jb
stc
pop
and
addl
xchg
clc
xchg
idiv
arpl
rorb
and
imul
jb
push
mov
xor
outsb
mov
mov
shlb
mov
decb
subb
fs
adc
repnz
call
ret
arpl
sub
lcall
mov
jne
and
insb
inc
cmp
mov
in
adcb
sahf
sub
pop
pop
mov
mov
jnp
repnz
xor
test
mov
adc
push
outsl
loop
xchg
in
mov
cmp
mov
inc
sub
push
mov
icebp
mov
adcl
mov
fnsave
sub
sbb
cmpb
cmp
jmp
mov
daa
lahf
pusha
mov
rorb
sub
or
lds
cltd
xor
or
mov
popa
push
stc
cwtl
icebp
inc
cld
jmp
shll
mov
clc
out
fistps
cmp
mov
out
mov
push
mov
inc
insb
cmpsb
test
test
xchg
leave
adc
fsubl
test
movb
mov
lods
xchg
push
fucomip
das
std
dec
xchg
out
dec
dec
shrl
aam
pop
sub
in
lcall
mov
mov
jb
cmpsl
sbb
jmp
push
push
push
loop
cmp
mov
mov
adc
and
xor
mov
xor
pop
nop
icebp
mov
or
inc
shlb
pop
flds
in
dec
outsb
es
call
or
repnz
movsl
pop
cmp
icebp
jg
sbb
jae,pn
ret
loope
xor
std
scas
inc
dec
mov
test
mov
mov
xchg
ja
mov
cmpsb
jne
mov
push
scas
mov
or
lcall
cmp
call
gs
or
dec
in
data16
mov
dec
sbb
sub
dec
pop
sbb
and
xchg
cltd
cmpsl
lcall
fildl
je
stos
fildll
es
pop
mov
cmc
adc
adc
imul
and
gs
adc
push
sbb
push
mov
adc
mov
dec
jmp
in
mov
mov
mov
add
clc
lock
sbbl
mov
and
push
int3
das
fcoms
clc
add
popl
les
push
mov
shl
pop
arpl
rcrb
cmpb
pop
popf
xchg
or
mov
aas
mov
adc
push
adc
mov
or
loopne
frstor
dec
roll
xchg
sub
mov
mov
sub
pop
push
push
mov
fiadds
mov
push
dec
lds
js
add
cli
data16
ret
pop
add
movsl
pop
push
mov
inc
xor
jp
loop
ja
test
mov
ret
mov
ret
push
rolb
inc
sbb
ret
rorb
dec
pop
push
out
or
add
inc
into
jg
inc
ja
test
lahf
jecxz
dec
mov
cmp
hlt
sbb
push
xchg
iret
mov
scas
pop
push
mov
push
and
push
push
repz
fadds
dec
popa
pop
jmp
push
mov
test
aad
mov
xor
inc
mov
inc
jmp
and
dec
mov
bt
cmpsl
cltd
std
pop
pop
and
clc
sbb
and
cmc
lret
sub
jg
dec
dec
ljmp
inc
xchg
add
add
fadd
negb
mov
mov
jecxz
cli
movzwl
xchg
jp
sbb
in
pop
mov
sahf
test
adc
enter
test
in
test
insb
inc
bnd
mov
jge
sbb
inc
and
hlt
test
add
sub
jnp
clc
shr
mov
add
popf
push
popa
sub
jno
adc
daa
lea
jecxz
lret
xor
pusha
mov
xor
mov
sub
cmp
mov
lods
fisttpl
lds
fcompl
add
stos
dec
cmp
push
jne
lods
xchg
daa
xchg
int3
fsubs
inc
cld
mov
jl
fildll
loopne
adc
outsl
inc
add
outsb
call
lock
test
ds
or
aaa
push
cli
xchg
add
aaa
or
push
adc
repnz
scas
mov
mov
cmpl
adc
dec
dec
push
inc
xchg
push
dec
jge
ljmp
inc
add
dec
movl
cmpsb
xchg
inc
sub
jmp
aas
mov
lret
fsts
cltd
pop
mov
adc
jp
xchg
sub
xor
push
repz
out
xor
mov
fmuls
jo
mov
dec
cwtl
add
and
inc
cwtl
repz
and
mov
std
fiadds
sahf
mov
arpl
orl
sub
push
xlat
inc
mov
fsubs
loop
xor
out
fcoml
notb
sub
push
std
cmpsb
sub
cmpsb
sbb
shlb
fwait
jl
inc
rorb
dec
sub
sub
mov
sbb
xor
xor
scas
jno
sahf
fcomi
xchg
mov
out
and
mov
mov
mov
and
sub
cmp
mov
out
xchg
fmul
int
sti
cmpsb
pop
or
mov
rcl
push
lcall
sbb
jns
into
cmpsb
jbe
mov
in
lcall
into
cmp
inc
stc
insb
shr
outsl
add
jl
cmp
into
aad
mov
stos
add
rcr
inc
lods
jmp
mov
or
cltd
loope
add
mov
sbb
xor
mov
jae
cld
outsl
insb
cmp
insl
pop
mov
push
enter
sbb
jmp
lcall
or
mov
mov
sarb
add
scas
mov
imul
or
icebp
dec
pop
lds
lods
xor
lea
repnz
xor
lock
pop
or
mov
push
mov
adc
jmp
cs
push
inc
push
push
cmp
bound
jne
push
mov
dec
test
je
nop
sbb
mov
pop
push
testb
scas
and
add
js
add
push
stos
aam
push
loope
sarl
and
inc
mov
xchg
adc
mov
mov
cmp
push
or
mov
inc
fldt
out
shll
repnz
mov
dec
or
or
adc
mov
movsl
xchg
jmp
dec
fwait
subb
addr16
cmp
fmull
cmpsl
cltd
xchg
clc
call
fistps
push
mov
jne
dec
imul
fcmovne
scas
ljmp
jmp
je
in
inc
mov
stc
std
or
mov
leave
jle
js
mov
inc
sub
in
aaa
movl
pop
pushf
sbbb
std
inc
movsb
pop
movsl
arpl
aas
push
and
pop
adc
jnp
push
jge
sbb
xorb
xlat
shlb
dec
xchg
cld
fistpl
xlat
lods
cmc
dec
lahf
dec
add
xchg
in
cmp
jo
pop
int
cltd
out
adc
into
ss
xchg
lret
xchg
leave
xor
and
das
cld
mov
pusha
and
jle
arpl
xchg
dec
inc
mov
mov
inc
mov
movsb
hlt
mov
jp
pop
mov
jecxz
imul
mov
das
add
sub
cvtdq2ps
fsubrl
inc
dec
inc
imul
xorb
shll
sbbb
inc
stos
inc
xchg
cmp
pop
mov
and
out
cmp
call
test
xlat
shlb
dec
aaa
push
inc
into
cmp
xchg
mov
xchg
inc
jp
stos
inc
jle
xchg
in
mov
inc
enter
lea
addl
ljmp
mov
sub
fstpl
sarb
cmpb
cmp
adcb
cmp
push
js
shlb
aaa
adc
loope
mov
or
pop
jne
sbb
lret
jb
sub
jle
pushf
arpl
mov
roll
outsl
fdivrl
sub
subl
jge
add
bound
mov
jne
subl
fsubs
loopne
pop
adc
popf
js
xor
testb
mov
sub
fiadds
or
adc
cmp
adcl
call
shlb
mov
add
fnstcw
and
scas
add
mov
push
int3
and
mov
mov
test
jne
shlb
in
or
loop
incb
mov
mov
icebp
dec
jmp
std
adc
jne
xchg
sbb
icebp
fidivrs
dec
lahf
cmp
je
cmp
pop
pop
mov
cmp
adc
lock
adc
dec
adc
rclb
js
loop
mov
xchg
lea
ljmp
stc
jg
mov
loop
mov
pop
sti
mov
rcrb
xchg
lods
stos
mov
adc
rcrl
shll
mov
pop
jo
sbb
xor
dec
lahf
cmc
push
repnz
rcll
mov
xchg
cmpsb
hlt
or
bts
cwtl
mov
call
mov
imul
ror
in
pop
xchg
les
movsb
or
test
push
lahf
mov
aad
int3
mov
mov
cmp
or
nop
pop
mov
xchg
cmpsl
out
jns
mov
mulb
mov
push
xor
clc
daa
call
ja
mov
aam
xsha256
cmpsb
adc
push
adc
mov
nop
jp
or
mov
cmp
fdivr
mov
jnp
mov
jb
mov
push
aas
lret
jnp
loope
frstor
ret
sti
nop
enter
cld
inc
jmp
add
push
and
dec
or
pop
mov
pop
das
pop
movsb
xchg
movsl
cli
sahf
jo
mov
and
xchg
mov
jbe
and
push
sti
out
pushl
int3
in
pop
adc
xlat
cmpsb
mov
stos
test
adc
cmp
fs
pop
inc
jno
mov
jnp
in
ljmp
into
test
jns
or
dec
in
push
xchg
pop
cwtl
inc
push
mov
movsl
inc
jne
xor
loope
and
mov
fstpt
dec
xchg
push
in
or
es
fidivrl
cli
push
in
aaa
arpl
mov
stos
and
pop
sbb
add
pop
cmpsb
adc
cli
jne
leave
mov
stc
pop
inc
jns
mov
dec
mov
shlb
xchg
nop
sub
and
fwait
xorb
sbb
push
or
jbe
mov
lret
inc
outsb
add
xor
addb
or
dec
cltd
lods
xchg
or
mov
rcr
sarb
shrb
cld
mov
xchg
or
add
push
fucomp
out
and
mov
cmc
pop
push
add
inc
sub
or
inc
rcll
mov
adc
subb
mov
scas
push
and
cld
jmp
aad
jae
and
insb
std
mov
out
add
ds
mov
loop
movsb
outsl
sub
sbb
insl
ffreep
dec
popa
popf
adc
fwait
pop
fdivrp
negb
xchg
sub
or
jge
cld
movsb
or
outsl
or
sbb
push
rcr
fldt
jbe
andl
adc
insl
outsb
fnstenv
inc
icebp
jg
in
ds
cs
out
subb
out
loope
testl
mov
sub
fiadds
or
or
dec
les
jl
and
in
cmp
fnstenv
inc
stos
clc
sub
dec
shlb
jae
adc
push
mov
cmc
push
je
adc
and
adc
jb
repnz
pop
pop
out
mov
fwait
outsl
lret
or
sbb
adc
mov
pop
jae
sub
cld
lea
pop
aas
std
mov
pop
mov
shl
test
mov
sbb
gs
cld
push
jecxz
xchg
mov
mov
leave
aaa
ret
push
stos
or
fsubs
call
or
mov
push
cmp
rol
inc
repnz
jle
scas
cmp
ret
mov
push
in
testl
jo
test
popa
sbb
mov
dec
mov
push
or
shlb
cmpsl
adc
lods
loope
repz
jle
loope
mov
mov
sbbb
jno
test
jae
adc
xlat
outsl
outsl
lods
xor
jno
movsl
cmp
dec
mov
lea
insb
mov
emms
nop
push
adc
in
icebp
arpl
ja
outsl
xchg
stc
sbb
mov
and
or
xchg
mov
sub
test
push
and
leave
dec
xor
sti
add
aaa
or
jg
cld
inc
or
xchg
sub
xor
or
mov
popf
or
xor
lea
aaa
or
dec
ret
push
jns
out
and
mov
dec
and
ficompl
push
dec
insl
js
pop
adc
mov
mov
xchg
mov
divl
icebp
sub
iret
mov
subb
sbb
xchg
inc
jae
mov
pop
sub
fistpl
in
cmc
push
leave
push
adcl
stc
xchg
push
stos
call
push
push
jne
inc
mov
cli
xor
dec
xchg
ja
pop
js
xor
int3
sbb
in
mov
cmp
test
movq
fists
pop
inc
or
jecxz
sub
lcall
aaa
mov
add
lret
adc
pushf
pop
and
ja
adc
fs
aad
arpl
es
or
lds
jbe
jb
xor
dec
pop
mov
xor
dec
lods
xlat
aad
mov
add
mov
inc
jecxz
mov
add
int
mov
aaa
mov
in
xor
ret
jbe
sbb
ret
sub
pop
sbb
sbb
and
mov
je
xchg
xchg
mov
fiadds
xor
xchg
cmp
pop
xchg
mov
test
push
mov
das
das
insb
mov
rcrl
push
push
icebp
lea
pusha
push
xchg
fidivs
and
aam
jmp
push
mov
cmp
sub
into
push
fistpll
push
pop
mov
adc
inc
inc
rcrl
aaa
mov
xchg
pop
cmp
inc
inc
sub
call
icebp
outsl
daa
cmc
or
fbld
cmp
add
rorb
push
orb
addb
call
in
sub
push
lea
push
add
push
pushl
push
push
in
outsb
insb
imul
mov
add
sti
ja
jg
jbe
inc
inc
inc
sub
pop
dec
mov
mov
sahf
leave
add
jmp
jbe
ja
add
adc
mov
sub
frstpm(287
push
add
dec
and
imull
movl
dec
adc
add
jmp
add
stc
adc
sub
sbb
mov
dec
add
jbe
cld
fsubrs
sub
mov
divb
cmp
repnz
mov
loopne
jno
jne
push
or
lea
push
push
in
cmc
mov
mov
insb
andl
in
aaa
dec
add
pop
push
in
xor
cmp
xchg
filds
hlt
push
cld
popa
lods
pop
xor
jge
cmp
inc
mov
push
push
or
mov
add
add
dec
hlt
push
push
mov
push
ret
cld
sbbb
mov
add
sub
test
push
sti
pop
test
jo
adc
mov
fs
cmpsb
or
je
fcompl
outsb
ret
ja
arpl
mov
push
loope
into
xchg
shrl
je
dec
je
jne
push
outsb
jns
in
pop
xor
push
sbb
aaa
push
and
cmp
iret
adc
sub
mov
mov
sub
inc
inc
mov
testl
dec
enter
mov
outsb
mov
fldt
dec
loopne
pop
mov
push
in
add
lea
or
sbb
aas
dec
js
outsl
fstpt
add
xchg
out
ss
pop
popa
sub
fwait
push
out
jg
inc
push
jns
xor
ret
dec
xor
outsl
add
arpl
insb
add
cmpsb
repz
inc
fcoms
jg
jle
lret
in
popa
outsl
loope
fistpll
mov
push
push
and
outsl
fcompl
mov
add
lahf
xlat
lods
cmc
push
mov
dec
icebp
push
inc
pop
shlb
lock
outsb
cmpsl
popl
cwtl
inc
test
sbb
push
add
xor
push
xchg
push
push
insl
aaa
outsl
ja
popa
sbb
iret
out
push
jns
adc
mulb
pop
pop
and
into
gs
out
mov
addb
dec
adc
repnz
mov
add
das
add
cld
jp
push
jns
cmp
cmpsl
rorl
add
fsubs
mov
and
xchg
dec
jb
jae
ljmp
ss
adc
addl
fildll
jge
add
add
add
cvtpi2ps
add
lods
outsb
mov
arpl
or
pop
mov
mov
or
add
add
adc
fidivrl
out
ficompl
sbb
add
clc
add
jbe
pop
fiadds
cmp
mov
ss
daa
push
adc
adc
cmp
cld
in
divl
lock
add
inc
rolb
mov
xchg
sbb
jo
jge
jae
out
add
mov
mov
add
scas
add
rclb
ret
jg
jg
cmp
mov
loope
testl
jg
jge
push
andb
in
add
inc
lds
pushl
or
dec
add
add
jnp
sbb
add
push
int
mov
sub
call
xor
int
addr16
lock
call
mov
in
out
cld
cmp
or
add
mov
cmp
adc
ret
add
mov
adc
sbb
inc
pop
addl
sub
sbb
bswap
stos
add
sub
add
mov
mov
testb
add
stc
or
scas
push
xor
outsl
out
jnp
cmp
inc
aam
shlb
sbb
mov
or
cmc
mov
and
cs
call
mov
xor
add
dec
das
cmp
pop
into
xor
dec
incb
test
adc
ja
loope
add
or
adc
cli
mov
push
decb
push
rcrl
inc
lahf
scas
mov
shlb
inc
int
or
and
addr16
aaa
lahf
dec
xor
pop
adc
lds
push
dec
cld
jg
add
jle
mov
jl
btc
and
data16
xchg
jg
lock
int3
sbbl
cltd
js
mov
out
data16
xchg
in
mov
hlt
insl
xor
xchg
repz
daa
inc
enter
cmp
pusha
pop
cmpsb
outsb
sbb
jnp
push
insb
leave
cwtl
aas
push
jmp
mov
push
scas
mov
lcall
push
xchg
push
fsubrl
mov
xchg
push
popf
jno
xchg
sbb
inc
fistpl
lea
cmp
shlw
ss
call
adc
mov
lcall
add
and
cmpsb
inc
and
lods
sarl
aad
add
mov
adc
adc
or
mov
loop
dec
int
idivl
cmp
cmpsb
or
add
add
jmp
push
jb
xor
lcall
cmp
in
pop
jnp
or
inc
adc
xchg
test
movsl
push
xchg
insl
shll
imul
outsl
mov
popa
mov
fcoml
sbb
scas
sti
and
pusha
sbb
shll
mov
fmull
mov
adc
lods
sti
ja
push
repz
mov
or
jmp
shll
repz
add
ret
cmp
or
rcrb
push
movsl
es
jle
add
add
arpl
or
mov
or
arpl
jecxz
aas
pop
sbb
movsl
int
ret
or
xchg
insb
das
sbb
scas
arpl
adc
xchg
sahf
push
int
mov
push
lock
lahf
cmc
stc
hlt
cmpsl
test
pushf
add
and
fsubl
mov
push
add
les
cmp
mov
call
xchg
cmpsb
pop
adc
fmul
and
sub
xchg
in
sub
add
inc
jle
add
je
sbb
dec
pop
clc
or
cmp
sub
dec
ss
mov
push
ja
jbe
addb
scas
push
popa
arpl
enter
push
sbb
lock
jle
dec
xchg
das
lock
jb
hlt
daa
mov
mov
xchg
in
ret
lea
mov
out
mov
bound
adc
pop
push
push
or
mov
push
add
inc
clc
pop
inc
or
lret
aaa
imul
test
inc
dec
dec
popf
push
mov
mov
push
test
push
dec
test
fwait
sahf
std
pushf
and
subl
add
add
mov
jne
bound
mov
dec
lods
lods
xor
xchg
adc
rol
cmp
cltd
dec
mov
ret
in
and
sub
mov
loopne
mov
mov
into
pop
jns
adc
xor
sti
test
orb
cmc
and
lea
mov
mov
clc
jae
aas
adc
xchg
mov
outsl
cltd
sbbl
insl
clc
and
shrb
push
adc
dec
dec
sbb
fstps
add
outsl
out
shrl
add
push
mov
rclb
jp
rcrb
inc
fisttps
adc
push
xor
notb
clc
das
lret
leave
nop
or
xor
testb
adc
int
fwait
outsl
lock
test
mov
mov
dec
mov
sbb
bound
lcall
add
inc
cltd
imul
xor
pop
jle,pn
loop
idivb
xchg
mov
add
ja
stos
std
adc
pop
les
out
push
mov
and
decl
insb
sbb
rolb
in
daa
jge
pusha
sbb
jle
pusha
ffreep
out
jecxz
leave
mov
adc
xchg
leave
inc
add
jmp
fcomi
sub
pop
mov
stos
mov
int3
push
pop
daa
jle
pop
or
subb
or
das
int
push
mov
push
xor
cmpsl
pop
dec
outsb
mov
cwtl
mov
sbb
ss
loope
test
incl
cs
fidivl
subb
push
jno
inc
fwait
cmp
in
jae
hlt
push
mov
test
sbb
loope
xor
mov
fisttps
mov
fmuls
nop
aaa
xor
add
and
push
mov
fdivs
push
adc
ds
shlb
xor
mov
add
mov
jns,pn
xchg
and
rcll
xchg
xlat
mov
pop
clc
lcall
imul
jb
ljmp
outsb
in
inc
lahf
and
jbe
out
sub
jnp
xor
test
inc
ds
and
addl
test
aaa
jbe
pop
insl
cld
mov
lcall
loope
in
mov
mov
fmul
dec
xchg
sbb
cmp
in
fnsave
sbb
in
sub
or
int3
cmp
fistpl
rorl
lods
es
sub
addr16
inc
int3
test
arpl
mov
mov
adc
es
dec
cmp
inc
fiaddl
movsb
imul
shlb
add
and
sub
fcmovne
or
inc
mov
mov
aam
pop
pop
pop
clc
jmp
inc
fs
outsb
mov
iret
fwait
and
xchg
xor
data16
lcall
roll
arpl
movsl
cs
cmp
testl
movl
int
mov
jbe
sarb
mov
cmp
das
test
in
pop
jns
cld
push
sub
dec
xor
xor
ret
cmpsb
push
mov
test
lea
frstor
jg
stos
sub
cwtl
jb
inc
pop
cmp
push
lcall
cmp
dec
iret
aaa
adc
rclb
cmp
and
xor
in
mov
cld
cmp
lock
sbb
pop
pop
jp
loopne
es
stc
lods
adc
out
add
cmpsb
xor
adc
cld
in
xchg
jae
out
popa
push
jnp
jbe,pt
fisubrl
cmpsb
inc
sbb
mov
loope
pop
icebp
pop
arpl
roll
mov
or
mov
xchg
ss
imul
jge
lods
sub
cs
jecxz
das
push
mov
fdivrl
mov
cmp
sbb
cli
adc
and
jp
pop
jne
js
pop
aas
and
or
movb
fisubrs
adc
dec
sub
inc
shl
mov
pusha
add
xor
dec
test
mov
stos
mov
jmp
dec
sbb
or
pop
outsl
pop
jecxz
sahf
sahf
ds
xchg
and
mov
or
fildl
add
pop
jmp
testl
inc
stos
loope
push
and
scas
jge
dec
pop
gs
mov
out
cmp
sbb
loopne
icebp
testb
push
arpl
fstl
pop
stos
jb
test
jl
or
gs
sbb
je
cltd
fimuls
lock
idiv
xor
and
cmpsl
daa
jge
jmp
xor
aas
cmpsb
iret
arpl
rcl
sbb
and
repz
fs
push
xlat
adc
jns
ficoml
inc
cmp
outsl
jbe
push
repnz
les
add
cwtl
cli
sub
mov
popf
mov
push
icebp
scas
jg
pop
ficoml
adc
mov
mov
call
adc
add
subl
and
lock
xor
mov
hlt
fsts
mov
jge
ja
push
flds
scas
ret
cmp
xor
dec
sbb
push
adc
and
das
stc
ret
or
adc
mov
test
xor
or
sbb
lret
test
sbb
mov
je
and
imul
lods
mov
jns
rcll
int3
dec
mov
sarl
mov
out
loop
jge
cld
push
xchg
jmp
and
mov
xchg
sbb
mov
iret
sbb
mov
inc
dec
rclb
xor
add
std
test
lods
repnz
cmp
adc
push
rcr
lahf
aam
jge
inc
lock
dec
fidivrl
xor
pop
pop
pop
sub
jo
loope
pavgw
popa
and
pusha
xchg
fidivrs
fisubrs
dec
subl
pusha
out
ljmp
jle
nop
outsb
dec
push
in
iret
xchg
mov
cmpxchg
jmp
stos
pop
or
push
dec
loope
mov
flds
dec
pop
imul
adc
lods
push
push
popw
aas
xchg
jle
jg
jp
jno
mov
dec
loopne
pop
lods
test
dec
push
mov
ljmp
jne,pt
mov
lret
aaa
cli
mov
lret
lret
sti
push
test
insb
or
dec
xchg
or
jno
lods
push
or
push
sti
adc
sbb
and
sub
mov
jl
adc
out
jp
jb
outsb
push
outsb
cltd
adc
jne
cmp
cmp
dec
aad
xchg
imul
cmpsl
clc
inc
or
jae
pop
push
jbe
pop
lds
lahf
jne
call
mov
push
inc
dec
cmpb
mov
fs
jecxz
push
xchg
push
rolb
lds
les
shll
sub
mov
arpl
test
ficoms
fdivl
push
pop
pop
adc
lock
add
cmp
lahf
lods
sar
dec
xchg
sbb
rolb
mov
movsl
sub
jl
lea
push
outsl
int3
mov
bswap
cmp
adc
mov
cli
popf
lret
inc
and
sbb
fnstcw
xchg
lret
cmpsb
or
inc
fwait
imul
jns
cmp
mov
adc
and
inc
dec
fnsave
das
das
std
lock
dec
pop
or
outsl
int
loope
mov
lcall
movsb
inc
sub
cmp
sbb
inc
add
sub
mov
add
xchg
repnz
and
iret
xchg
push
test
xor
cmpl
popa
xor
xchg
xorl
loop
dec
mov
popf
test
ja
rolb
aas
popl
imul
xlat
rcl
mov
xchg
inc
popf
cmp
repnz
rol
imul
sbb
add
jb
gs
sarb
inc
stc
js
mov
cld
test
fildll
adc
push
and
test
fcompl
mov
push
outsb
adc
jb
cli
pop
inc
dec
mov
mulb
or
pop
sbb
mov
pusha
xor
mov
cmp
inc
push
xor
and
add
lret
inc
faddl
rcl
mov
sbbb
jo
shll
push
and
rol
es
es
pop
or
xor
sbb
dec
scas
mov
or
xor
mov
scas
movsl
push
cmpb
shlb
aaa
sub
sbb
jnp
out
cltd
dec
in
pop
lret
or
and
jle
cmp
jge
add
or
sub
pop
rcrl
dec
jbe
adcb
xlat
add
sub
int3
ret
xchg
adc
sbbl
push
movsb
out
push
or
fcoml
das
dec
mov
loopne
out
loope
inc
fidivs
cmp
xchg
add
cmp
xor
push
xchg
cld
push
and
cld
push
sbb
int3
fsubr
repz
aas
psubb
ds
sbb
cmp
cmp
clc
notl
jge
and
fnstsw
jecxz
lods
and
mov
loopne
xor
cmp
jnp
pop
xor
jb
and
jo
dec
xchg
dec
outsb
and
movsl
mov
cmp
js
rcrl
and
jb
lods
mov
mov
cltd
shlb
lods
jmp
dec
mov
cs
mov
push
sub
icebp
sub
sbb
sahf
insl
movsb
inc
jecxz
sub
add
pop
cmp
mov
sub
gs
inc
shll
negl
ljmp
fadd
or
mov
pop
jl
xor
inc
cltd
es
sub
dec
sbb
adc
pop
cld
mov
jne
mov
shll
leave
pop
inc
dec
inc
sbb
pop
mov
pop
jno
lret
insb
and
dec
mov
xor
loopne
xor
in
scas
fwait
cmp
ret
shrb
inc
aam
inc
xor
mov
iret
pop
lods
mov
ret
aaa
clc
lcall
pop
inc
inc
cmpsb
xchg
xor
insl
icebp
gs
push
repz
movsl
daa
test
rcll
in
loop
mov
push
push
xchg
clc
mov
adc
loopne
dec
loope
mov
enter
mov
jo
jl
add
ljmp
adc
scas
xchg
or
pop
push
jle
xchg
jp
mov
mov
mov
cwtl
enter
pop
shlb
data16
and
push
pop
scas
add
pop
cltd
cmp
cld
orl
sahf
loop
mov
fiaddl
int3
xorb
unpckhps
arpl
mov
xor
pusha
push
je
out
mov
pop
call
in
push
xchg
pop
jle
cld
fcoml
or
pop
arpl
sbb
sbb
xchg
adc
push
cmpsb
mov
hlt
push
in
fiaddl
push
inc
ret
or
loopne
rcll
dec
sub
push
gs
enter
daa
iret
inc
in
jl
popa
cmp
pusha
fwait
push
shlb
push
nop
fcompl
jmp
lds
stos
cmc
mov
jmp
mov
mov
adc
push
mov
mov
jg
lret
pop
mov
push
outsb
cmpsl
mov
aam
sarb
loope
test
push
nop
icebp
add
sbb
stc
jno
cmp
mov
mov
pop
push
ja
mov
dec
adc
and
js
sub
gs
mov
push
arpl
xor
in
pop
mov
hlt
std
insl
arpl
dec
enter
popf
cld
push
clc
adc
test
inc
mov
call
jecxz
repz
mov
dec
push
pop
adc
fcmovb
pusha
mov
in
call
cmc
shll
repz
popa
addr16
add
xchg
or
mov
scas
std
pandn
and
push
dec
lret
stc
sbb
jmp
mov
data16
stos
push
or
inc
push
pop
sbb
outsl
push
addr16
loopne
xchg
pop
shll
pop
inc
popa
movsl
jmp
push
in
js
fisttpll
mov
push
xchg
loope
mov
shlb
loop
xchg
mov
dec
int
xchg
sbb
jno
lock
cli
and
cli
cmp
inc
dec
sub
cmp
mov
ljmp
test
fcomip
mov
lahf
and
add
popa
js
xor
or
popf
cmp
jg
insl
out
loop
push
add
repz
mov
inc
negb
cmp
lock
xchg
les
addr16
cmc
loop
cmp
inc
add
mov
ja
leave
or
push
push
in
xor
outsl
ja
mov
leave
or
lods
cmc
adc
pop
adc
add
aam
cld
sbb
imull
orb
dec
lea
fimull
mov
int
ja
jae
mov
adc
push
js
xor
jecxz
xlat
test
inc
es
outsl
out
mov
inc
call
loope
sbb
jnp
out
inc
and
adc
movsb
sti
xor
addb
loop
mov
cmp
cmp
cmp
lea
mov
cmp
push
jecxz
sbb
add
mov
or
xchg
nop
adc
dec
cmp
cmpb
orb
jns
push
sub
mov
jbe
mov
mov
pop
push
outsb
and
pop
popa
fistpl
imulb
cmp
xchg
cmp
jp
push
pop
pop
shlb
mov
test
movsl
loop
cld
movl
sub
fbld
jmp
pop
iret
shll
pushf
and
stos
mov
mov
aad
aam
cmpsb
cs
inc
mov
gs
insb
xchg
and
mov
shl
es
test
lea
jmp
aam
loopne
lods
jmp
xchg
push
push
pusha
into
sbb
je
js
jo
mov
inc
out
clc
jecxz
movsl
inc
push
add
add
ds
cmp
imul
fiadds
adc
lret
out
sub
or
test
movsb
mov
loope
or
fisubs
cmpsl
push
mov
aas
in
sub
aaa
rorb
cmp
dec
and
pop
in
mov
movb
mov
xchg
cmp
mov
push
and
xchg
test
push
imul
jbe
inc
xorb
sub
and
push
das
fstpt
inc
or
ds
call
and
enter
jb
pop
in
lsl
sbb
pop
pop
shrl
jo
mov
fidivrs
lret
sub
jbe
inc
xor
push
lock
adc
mov
hlt
cmc
scas
test
insl
loop
in
jb
rorl
jp
or
lcall
cmp
andb
xchg
mov
sbb
sti
scas
loop
push
dec
push
inc
or
fwait
adc
mov
add
jge
je
mov
js
inc
nop
and
nop
fists
out
cmc
sub
icebp
sub
or
sub
or
jl
mov
mov
and
add
fcoms
lods
lods
aam
add
lahf
pop
sahf
fiadds
mov
ret
imul
mov
pop
mov
js
pop
mov
fmull
and
aad
repnz
ss
stc
sub
sbb
or
dec
rorb
mov
lret
data16
push
nop
push
cmp
mov
cltd
ljmp
and
mov
pop
ss
jecxz
sbb
insb
cmp
jge
mov
lods
cmpsl
adc
shl
pop
lret
lea
cmp
fsubrl
test
loopne
js
mov
add
or
dec
jno
mov
adc
mov
cmpl
or
cld
aam
xchg
pop
xchg
pop
dec
out
inc
sub
mov
inc
sbbl
sub
sbb
scas
cmp
xor
leave
dec
sarb
das
jne
mov
push
sbbl
mov
xor
insb
and
fiaddl
pcmpeqd
rcll
pop
lock
pop
push
cmp
test
arpl
ja
jmp
loopne
sub
movsl
or
rcrb
add
pop
cli
out
mov
pop
icebp
xor
sti
xchg
leave
jo
mov
arpl
push
push
pop
push
setl
or
xchg
je
jmp
clc
xlat
xor
mov
push
mov
cmp
push
orl
jmp
adc
lahf
in
adc
push
out
aaa
jne
push
cmpsl
dec
fwait
cmpb
cmc
adc
xor
jecxz
or
loopne
pop
pop
ljmp
jb
xchg
mov
cmp
push
xchg
pop
cwtl
aas
xchg
pop
pop
mov
and
jo
leave
adc
fidivl
movsb
jp
push
loope
add
lret
push
xor
inc
add
sti
xchg
ljmp
mov
js
jnp
push
clc
push
cli
mov
jmp
or
sbb
cmc
mov
adc
jno
sub
pop
pop
mov
mov
mov
cmp
mov
outsl
push
lea
lret
push
xor
mov
pop
jle
inc
repnz
ret
hlt
cmp
loop
insl
loope
cwtl
lret
scas
dec
in
dec
pop
mov
xor
aad
jo
mov
in
ss
xchg
decl
aas
test
cmp
adc
add
adc
addr16
data16
js
adc
jle
xlat
pop
jo
ds
xchg
lods
out
insl
jmp
or
bound
push
cltd
jo
jb
stc
adc
jg
scas
lea
ss
pop
bnd
rcrl
out
insb
inc
cmp
add
mov
mov
xor
mov
into
test
push
aaa
shll
out
std
or
xchg
mov
lea
rcrb
daa
xchg
cli
xor
lock
sbb
pop
mov
call
imul
or
loop
inc
mov
push
lcall
xchg
lods
inc
mov
inc
or
mov
sub
cmp
out
push
lods
jns
das
fscale
loopne
fldt
les
xchg
pop
jecxz
sbb
cmpl
cli
mov
test
mov
add
and
cmp
pop
sub
int3
lods
std
insl
cmp
loope
mov
push
pop
xorb
aas
mov
rclb
outsb
rolb
or
lcall
rcrb
jb
sbb
sahf
adc
cmpsb
clc
dec
mov
jge
push
je
les
int3
lea
mov
mov
cmp
lahf
mov
ss
adc
scas
inc
sbb
cmp
push
jne
sub
loop
into
loopne
dec
clc
pop
xchg
popa
and
repz
and
shl
movsb
jecxz
xor
jl
les
add
xor
arpl
out
in
addl
faddp
icebp
mov
movsb
inc
add
or
mov
push
adc
hlt
insl
push
and
dec
lret
xor
aaa
lock
sbb
testl
mov
sbb
gs
dec
push
pop
add
fcom
lock
dec
cltd
out
adc
sub
testb
lods
insl
scas
sbb
xor
int3
inc
cmpsl
xchg
fsubrp
pop
and
jmp
jge
es
sahf
push
add
rorl
add
dec
push
in
jb
outsl
sbbb
xchg
outsl
and
cmp
lock
sti
sbb
cmpsb
jne
jge
adc
cmp
push
outsl
cmp
pop
int
sbb
pop
and
mov
jnp
je
dec
inc
in
jnp
sub
popf
gs
pusha
or
add
sahf
lods
clc
subl
outsl
clc
popf
scas
in
loope
data16
and
fiaddl
push
fadd
push
mov
fsubs
jl
repnz
insb
lods
stc
xchg
lea
jae
call
jmp
push
ja
xchg
movsb
scas
mov
outsb
mov
subl
inc
push
mov
cmpsb
inc
xlat
or
push
cmp
jmp
inc
mov
data16
xor
fwait
js
xor
inc
sbb
cs
push
rol
or
xchg
insl
ret
aad
push
lods
das
sbb
not
out
or
lahf
lods
mov
add
adc
cmp
sub
fdivs
jo
hlt
cmp
or
cs
sbb
out
sub
packuswb
jl
xchg
pop
push
cli
lea
or
lea
dec
in
push
fldt
cmp
pop
into
mov
clc
jecxz
and
insl
xlat
sub
sub
pop
pusha
and
and
adc
jb
xor
in
sbb
inc
jne
mov
or
mov
or
scas
mov
andl
push
mov
dec
icebp
adc
or
lcall
push
ror
cli
jnp
bound
mov
cld
fisttps
xchg
bound
sbb
imull
ss
sbb
xchg
test
or
sbb
les
aad
test
inc
pop
mov
testl
out
andl
hlt
add
daa
jmp
lods
mov
in
mov
add
ret
mov
sbb
subb
fwait
mov
lods
dec
mov
mov
xor
inc
fwait
cmp
cmc
inc
ja
jmp
or
test
cmp
jb
and
rcl
cmc
sbb
jbe
pop
adc
inc
and
pop
fwait
mov
sti
pop
sub
mov
jmp
cmp
je
stc
mov
mov
lret
jne
mov
xchg
shrl
test
jno
push
orb
into
dec
insl
pop
test
inc
aam
inc
dec
aaa
jne
inc
xor
mov
rolb
cwtl
das
pop
mov
aam
or
mov
scas
mov
sbb
xor
add
lock
mov
and
inc
sub
adc
in
clc
sbb
hlt
mov
mov
mov
pop
pop
inc
push
das
sbb
fisttps
jno
xlat
inc
pop
fcmovnb
lods
icebp
lea
ss
js
jle
mov
push
cli
inc
orl
pop
addr16
cwtl
repz
jbe
std
xorl
movsb
bts
lock
scas
ficompl
ss
mov
mov
int
push
adc
inc
jmp
fisubrl
in
pushf
mov
mov
jae
sarl
xchg
push
leave
sbb
imul
hlt
inc
fsubrl
pop
mov
test
notb
push
jb
test
or
mov
push
call
xor
mov
sti
xchg
xor
and
aas
add
incl
xchg
int3
xchg
or
add
inc
xor
aad
xor
adcl
cli
sbb
loop
popa
push
mov
cli
cmp
pop
into
enter
shrb
testb
subb
outsl
adc
xchg
push
sbb
scas
jb
cmp
and
mov
stos
es
or
ss
pop
fidivrl
cltd
pop
lock
mov
mov
dec
imul
iret
cmp
lahf
fnstenv
leave
pop
jge
adc
and
ja
clc
ja
push
add
dec
mov
fcompl
xor
nop
push
pusha
aaa
xchg
jb
lock
mov
fcmovnbe
or
sarb
xchg
adc
sahf
mov
outsb
aas
hlt
in
fidivrl
adc
loope
scas
test
cld
es
ljmp
cwtl
fiaddl
lods
into
push
pop
sub
dec
or
arpl
loope
testl
sub
sbb
jg
mov
test
ljmp
mov
les
mov
add
xchg
es
icebp
stos
push
jo
dec
orb
pop
sarl
into
mov
test
mov
cmp
inc
arpl
push
stos
sbb
mov
and
add
mov
adcb
je
inc
insl
mov
or
push
adc
enter
sti
std
int
inc
sahf
adc
jmp
movsb
sahf
jo
fdivrs
push
cltd
lea
loopne
fildll
jecxz
aaa
cwtl
int3
lcall
fcmovnbe
sbb
mov
xchg
and
ja
mov
and
notb
cld
and
scas
fistpll
nop
in
clc
jmp
stos
arpl
in
ret
lea
cltd
mov
cmpsb
cld
push
inc
enter
ret
mov
inc
mov
pop
mov
mov
iret
dec
decl
aaa
inc
and
push
adc
jae
sub
shrd
pushf
adc
xchg
mov
out
clc
xchg
dec
out
into
sub
or
or
or
addl
aad
xchg
adc
xorb
lods
sbb
inc
or
mov
push
jae
decl
inc
sbb
mov
lea
sbb
mov
pop
stos
push
sub
dec
adc
mov
movsb
sbbl
fwait
adc
shll
ss
js
add
call
and
sub
mov
or
shlb
and
lahf
xchg
push
notb
jecxz
mov
shll
pop
stos
xchg
or
mov
mov
add
aaa
xchg
lret
mov
pop
pop
call
fcoms
jae
adc
add
cmpl
les
mov
loop
xchg
test
fsts
sub
shlb
rcll
or
dec
arpl
fisttpl
pop
std
sbbb
stos
mov
outsl
push
and
pop
outsb
jg
mov
inc
inc
add
mov
fstpl
push
push
mov
imul
pusha
mov
and
stos
or
cmp
mov
dec
outsb
sub
popf
lods
push
js
xrelease
icebp
inc
out
push
fsubrl
xor
and
cmpsb
ret
mov
insl
xor
inc
mov
jle
nop
jmp
add
push
pusha
das
push
ss
adc
mov
mov
dec
push
xor
inc
jmp
lock
ljmp
arpl
stos
xor
or
dec
xchg
roll
inc
frstor
xor
leave
lds
sbb
cmc
in
xor
icebp
or
sub
jo
in
adc
stos
cmc
mov
mov
dec
push
push
cmp
xchg
mov
roll
adc
add
mov
mov
jg
popf
in
out
mov
mov
pop
dec
and
xchg
ss
aas
mov
pop
shrb
les
ret
mov
pop
adc
push
cmp
js
ret
lods
out
add
es
iret
inc
or
inc
inc
push
fldenv
cs
xor
mov
pop
jo
lods
jmp
push
loopne
call
test
pop
xor
add
dec
mov
xchg
imul
add
repz
clc
push
and
mov
pop
pop
cmp
and
call
pop
cwtl
out
fs
add
or
mov
aam
jmp
dec
lret
pop
cld
mov
rcr
xchg
in
push
push
sub
push
inc
pusha
outsl
jae
movsb
sub
mov
movsl
adc
cmc
je
sub
loop
pop
iret
je
push
insl
mov
pusha
adcl
sbb
out
sahf
clc
cmc
lahf
jecxz
jg
fucomip
jle
jecxz
inc
and
mull
lods
add
mov
jnp
push
bound
sub
sbb
cmpsl
rorb
and
dec
cmpsb
and
push
mov
ja
jg
in
loopne
lods
jae
les
icebp
jp
rcll
scas
or
cli
test
ror
insb
and
add
adc
lret
in
sahf
jge
mov
fidivl
out
addr16
mov
push
int3
xor
ja
cmp
test
mov
jl
ja
pop
jg,pn
dec
mov
mov
inc
shl
ljmp
std
pushf
cmp
test
in
repz
pop
lock
xchg
xchg
lahf
jb
je
test
test
add
cmpsb
pcmpeqd
pop
imul
mov
out
or
rol
mov
cmp
std
clc
mov
add
loopne
nop
mov
iret
xchg
fwait
pop
data16
ret
outsl
xbegin
sbb
mov
jae
or
test
std
hlt
jmp
icebp
jp
outsl
sbb
sbb
fisttpl
jbe
adc
out
xor
xor
std
ret
call
mov
adcl
mov
pop
loope
int3
loope
jg
fmuls
int3
pop
js
push
ds
xchg
lret
sub
lock
and
pop
push
cmp
gs
push
inc
hlt
es
clc
cs
popf
mov
or
jb
stc
xchg
mov
pushf
adc
dec
and
pop
loop
push
sbb
pusha
in
mov
cmpb
inc
xchg
push
and
aaa
outsb
lock
lea
cmp
mov
push
fdiv
and
cmc
push
sbb
ret
add
pop
inc
cmpsl
hlt
push
out
sbb
xor
ret
push
push
adc
nop
mov
mov
aas
rcl
shll
insb
dec
cmp
and
repz
testl
jbe
mov
cwtl
mov
scas
ret
mov
loope
jle
cs
mov
test
leave
jbe
sbb
mov
mov
fucomp
mov
daa
loopne
lret
inc
pop
or
inc
ret
out
outsb
ss
fs
pusha
adc
jg
loop
cli
loopne
adc
dec
faddl
nop
insl
dec
cmpb
ja
fildl
xchg
pop
cmp
cli
cld
adc
icebp
test
dec
test
jno
push
cmp
pop
pop
mov
adc
xchg
loope
push
jg
add
scas
inc
and
pop
lods
loopne
cs
dec
lods
test
pop
mov
test
lods
sbb
stos
popa
mov
pop
sub
xchg
or
or
and
popa
in
loop
mov
fcoml
sub
add
js
orb
inc
xchg
imul
xor
inc
fdivrp
push
or
inc
pop
inc
popa
jecxz
pop
push
cmpl
cld
fildll
push
shlb
adc
fwait
cs
cmp
lret
push
mov
popf
rolb
scas
repz
jl
cmp
inc
sahf
sbb
sbb
shl
cltd
shlb
sar
std
hlt
jl
fildl
insb
cld
mov
dec
mov
cmp
psubsw
or
dec
inc
clc
shl
mov
or
mov
clc
pop
dec
aam
insb
int3
daa
cmpl
data16
rol
pop
jne
push
push
fwait
stos
clc
cmp
sbb
mov
cmpsb
outsl
insb
ljmp
lcall
mov
push
pop
jge
inc
inc
rcrl
add
jle
push
negb
add
xorl
mov
movsb
dec
lahf
mov
shll
js
hlt
add
test
push
adc
js
hlt
cmp
addl
lcall
sbb
test
or
pop
dec
out
push
jo
mov
das
jge
sub
inc
rcrl
in
inc
jmp
out
add
movsb
pop
dec
dec
cmp
stos
mov
js
pop
and
push
or
andl
dec
addr16
mov
xchg
push
inc
mov
jne
xchg
fwait
and
mov
adc
jge
test
jmp
push
adc
rorl
xchg
pop
icebp
or
cld
mov
js
inc
nop
loopne
cmp
push
js
js
addb
mov
xchg
pop
ja
cs
imulb
mov
cmp
and
adcl
aaa
xchg
or
adc
mov
pop
lret
outsb
andb
mov
xor
or
jle
lock
cmc
pusha
js
adc
mov
ss
adc
sbb
push
inc
mov
adc
arpl
add
xor
loop
maxps
daa
outsl
dec
add
test
test
in
fs
mov
sbb
push
in
std
add
sub
outsb
sub
gs
int3
ret
sbb
decl
add
jb
mov
mov
aad
pop
sbb
jbe
imul
fdivr
xor
icebp
jno
push
fldcw
hlt
pop
inc
rcrl
ss
xchg
sub
xchg
hlt
xor
mov
test
pop
es
push
test
and
or
test
xlat
lahf
jp
loop
adcl
in
sub
cli
jo
lahf
fwait
adc
mov
pop
mov
pop
xor
aad
insl
sbb
jb
adc
adc
jp
fdivrs
pop
jl
incl
mov
sub
lcall
xchg
test
out
or
or
pop
pop
scas
mov
xchg
mov
daa
mov
ret
mov
scas
mov
xor
jmp
and
jo
es
test
or
popa
mov
sub
lds
sbb
xor
fstp
or
adc
fildll
call
jae
repz
or
mov
push
sub
outsb
ret
xchg
jne
jecxz
adc
xchg
jecxz
mov
fistps
jae
pop
fdivrs
addr16
pusha
jnp
js
sub
aam
xchg
andb
sub
fucom
int
test
je
sub
in
push
je
cmc
inc
repz
xorb
push
mov
or
ror
pop
gs
mov
adc
insb
adc
mov
xchg
rcll
shr
loopne
lock
jg
push
xchg
mov
mov
sbb
test
jge
imul
fstpt
filds
xchg
gs
adc
mov
sub
incl
test
and
mov
adcb
push
mov
mov
cltd
out
cmp
lea
jno
adc
push
addr16
les
sub
clc
push
out
add
pusha
push
test
call
jmp
scas
lds
and
rcrb
fstpt
push
xor
test
xchg
daa
cmp
dec
push
mov
ret
aaa
and
in
addb
frstor
rorl
adc
inc
cli
mov
psubusw
addr16
mov
ljmp
and
add
pusha
loope
ficomps
movsl
and
jae
jmp
std
repz
ja
xor
jbe
pop
push
pop
mov
loope
mov
pop
out
and
ljmp
sbb
jnp
inc
mov
std
lahf
pop
inc
in
mov
and
inc
sbb
ljmp
dec
sbb
add
mov
mov
frstor
and
pusha
jl
inc
mov
outsl
fists
sub
push
adc
sbb
mov
fsts
orl
jb
imul
dec
lahf
push
es
bound
xor
mov
loopne
pop
out
sbb
mov
dec
sbb
push
push
ret
stos
dec
mov
jg
push
std
in
and
pop
jo
cli
dec
insl
pop
sbb
mov
subl
popf
rcll
and
xchg
lds
punpckhbw
add
mov
add
aaa
out
xor
enter
and
jecxz
bound
pop
and
ficompl
push
sbb
mov
cmp
inc
or
or
out
arpl
jle
inc
xchg
xchg
sub
popa
fwait
mov
push
in
rorb
cmp
in
xor
das
das
fadd
pusha
gs
call
add
mov
sbb
sbb
imul
lock
fstp
push
pop
jecxz
mov
adc
mov
loope
in
and
pop
aam
hlt
std
int3
dec
bound
xor
cmp
push
es
lods
das
roll
nop
pop
icebp
imul
out
mov
or
jge
jo
xchg
int3
xchg
jno
dec
jl
mov
cli
fbstp
jno
jle
push
hlt
test
fisubs
fiaddl
inc
adc
mov
stos
xchg
mov
popf
rcrb
cmpsl
rol
mov
cmpb
insl
xchg
xchg
test
out
pop
movl
adc
shlb
cmc
push
test
dec
inc
lock
iret
int
and
addl
scas
in
hlt
adc
test
punpckhbw
xor
push
sti
aad
sub
rcl
ds
in
divl
into
call
jns
hlt
mov
addr16
or
mov
push
insl
out
fisubrs
loopne
in
push
push
cmpsl
jle
jecxz
sub
mov
pop
mov
fists
jnp
pop
aaa
sbb
pop
sbb
cmc
add
push
or
push
mov
jno
sbb
sub
xor
loopne
cld
mov
lahf
rorl
pop
push
jge
push
loope
addr16
fadds
adcb
adc
leave
shll
jne
pop
stos
popl
incl
imul
inc
xchg
mov
push
inc
dec
pop
xchg
mov
jbe
xor
pop
inc
test
cmpsb
aas
lahf
imul
pop
and
or
push
test
sahf
sbb
or
mov
bound
ljmp
xor
lret
test
dec
xor
xchg
add
sti
push
mov
clc
insl
mov
rcrb
fwait
clc
cwtl
je
test
xlat
pop
mov
cli
imul
jo
push
into
jb
bound
lock
adc
incl
aad
mov
fstps
mov
inc
jns
pusha
sahf
adc
mov
inc
fiadds
sbb
or
pop
outsl
or
shrb
insb
fimull
ror
jecxz
imul
adc
les
movsl
bound
push
repnz
sti
aad
in
pop
gs
xchg
cmp
or
ds
scas
xor
std
xchg
mov
add
movsl
pop
ror
ret
loop
cli
sub
dec
shlb
in
mov
add
ficoms
or
mov
mov
dec
leave
lret
jne
dec
faddl
outsb
sub
mov
rcrl
inc
dec
or
jo
lret
sahf
xchg
inc
stos
test
stos
push
dec
pop
lret
aam
ret
movsl
xchg
aaa
mov
jmp
scas
fstpl
pop
insl
jne
enter
push
je
and
aas
add
lcall
add
call
lcall
nop
aas
push
fwait
rorl
test
shlb
test
test
xchg
and
jne
sub
insb
or
push
outsl
movswl
push
xchg
adcb
in
rorb
fwait
add
in
fs
jbe
nop
inc
shll
mov
pop
scas
cmp
scas
decl
and
call
mov
xchg
cli
adc
cld
push
lock
or
jns
hlt
incl
mov
sbb
arpl
cmpsl
sbb
jge
imul
mov
cmpsl
int3
adc
mov
sub
out
inc
les
inc
mov
and
loop
mov
pop
inc
lods
lahf
and
and
sub
pop
mov
lods
rcrl
insb
cmp
fldt
in
pop
pop
inc
call
jle
and
test
push
xchg
or
add
xor
addr16
jge
cli
pop
ret
xchg
in
push
mov
lods
jbe
lods
scas
push
pop
sbb
mov
mov
pop
fiadds
shrl
mov
insl
jge
dec
sbb
daa
push
adc
fcomi
es
sbb
shlb
arpl
inc
or
inc
ds
inc
lcall
lea
xchg
test
jbe
jnp
sbb
sub
fwait
xor
adc
mov
push
sbb
and
out
imul
fistpll
fidivl
adc
jnp
enter
push
push
add
outsb
call
mov
movsl
xor
and
cmc
or
push
das
dec
sub
subb
ljmp
push
arpl
jmp
mov
push
jo
stos
or
popl
aas
cmp
mov
mov
call
push
sbb
xchg
dec
jge
sbb
jecxz
test
mov
push
push
movsl
ja
shl
mov
jl
xchg
push
inc
and
test
jmp
rorl
mov
nop
dec
sub
xor
arpl
out
xchg
jle
dec
lret
dec
lret
mov
cmpsl
ljmp
fisttpl
icebp
push
mov
push
pop
divl
cmp
ffreep
stos
iret
inc
shll
inc
call
push
adc
cs
push
inc
sbb
pop
mov
popa
mov
jne
jnp
mov
pusha
mov
push
ret
jbe
shr
lea
outsl
pop
outsb
addr16
add
add
iret
jl
inc
aaa
mov
cmp
ret
sub
xor
push
dec
mov
mov
push
xchg
mov
ret
icebp
jb
cli
aam
ss
icebp
js
mov
fldl
filds
sahf
movq
imul
rcrb
sub
jp
and
in
or
sbb
pushf
push
movsb
loope
movsl
mov
imul
jae
xchg
jo
push
or
lret
shlb
dec
xor
push
rorb
imul
mov
inc
cwtl
pusha
shrb
mov
in
shlb
testb
out
pop
xchg
jmp
aaa
mov
add
sub
gs
outsb
jb
sub
imul
push
or
jns
and
in
jnp
test
sahf
sub
icebp
pusha
test
and
push
jnp
mov
mov
jmp
loope
test
dec
enter
inc
push
loope
mov
mov
sub
std
cmpsb
mov
sbb
xchg
or
xchg
inc
cmp
and
cmc
les
test
out
mov
andl
push
xchg
in
add
clc
pop
test
daa
push
out
test
sbb
in
scas
push
mov
push
cld
clc
sbb
into
clc
pop
gs
mov
xchg
imul
jbe
sub
in
push
dec
jne
pusha
je
cltd
pop
loopne
hlt
cmpb
ret
or
push
aaa
call
pop
stc
push
cmp
pop
js
insb
xor
inc
in
mov
cmp
enter
loopne
fstpt
xchg
add
ror
je
test
mov
dec
orb
inc
ret
pop
push
rcrb
sbb
scas
mov
lret
add
sarl
icebp
mov
daa
cmp
or
dec
fs
in
add
shrl
adc
push
shrb
stos
lea
cmpsb
cmpl
xor
fucomi
scas
xchg
push
and
or
ss
mov
fists
mov
insl
imul
inc
test
mov
pop
loopne
out
out
loope
out
out
and
leave
sbb
or
movsb
lret
cmp
ret
push
mov
push
cmp
mov
xchg
sub
mov
stos
or
inc
aam
repz
sub
mov
mov
dec
jb
jmp
push
aaa
mov
push
and
cld
sbb
push
out
movsl
in
ds
xor
fmul
std
mov
mov
jb
mov
das
pusha
scas
outsl
aam
and
cwtl
cmpl
and
inc
pusha
sbb
mov
pop
ds
mov
aam
je
mov
rcrb
lods
subl
aas
jmp
cmpsb
sti
sub
sbb
std
lock
mov
dec
jle
sbb
jo
mov
mov
and
mov
pop
mov
inc
les
fsubrs
sub
pand
sub
mov
cmp
adc
fcomp
fmuls
or
xor
test
jle
sarl
inc
shlb
push
mov
sbb
xlat
ljmp
outsb
adc
sbb
out
pop
sbb
cli
push
in
rorl
jl
lret
popf
jl
push
jg
jne
out
shlb
dec
mov
stos
add
inc
dec
push
shrl
int
adcl
mov
xor
sbb
pop
jl
ret
imul
fnsave
call
pushf
adc
jecxz
mov
push
dec
and
mov
ljmp
xchg
adc
lock
outsb
pop
cmp
sbb
push
push
js
mov
loopne
xor
xor
xor
int
adc
sbb
ret
mov
sub
aaa
clc
loopne
and
sub
insb
inc
bound
das
mov
xchg
cli
loopne
adc
cmovp
mov
jg
adc
pop
cmp
ret
outsb
sub
sti
ljmp
push
xchg
lods
dec
jmp
leave
push
lret
inc
pop
lds
jbe
into
aas
jbe
jge
inc
test
jae
or
shll
decl
fnstenv
ss
in
ss
out
mov
mov
mov
das
jnp
xchg
sub
fwait
and
stos
pop
mov
aaa
loopne
dec
add
movzwl
mov
jmp
loopne
in
xchg
loope
pop
xchg
mov
iret
dec
cs
xchg
push
rclb
ficomps
lea
dec
lock
xor
jo
mull
jmp
dec
out
xorb
test
lea
xor
mov
ljmp
test
jp
cmp
jae
cmp
push
xchg
jl
aad
push
clc
sub
mov
test
dec
cmp
sbb
lahf
das
aad
and
mov
insb
mov
sbbl
fs
clc
push
hlt
or
dec
mov
adc
dec
pop
push
sub
pop
add
pushf
sub
das
dec
clc
fbstp
mull
dec
push
ss
mov
push
and
jmp
mov
dec
rolb
mov
sbb
icebp
inc
add
fistps
push
mov
mov
or
mov
mov
mov
mov
jmp
add
loop
sbb
inc
cmp
cs
nop
cmp
in
cli
scas
xlat
loop
xchg
arpl
bound
pop
push
xlat
and
pop
xor
add
mov
dec
fs
daa
jecxz
push
arpl
icebp
cs
sbb
cmp
test
cli
lods
jle
es
cltd
ficoms
inc
add
or
out
lods
out
pusha
sub
pushf
cmp
ret
xor
jg
stos
imul
rcrb
cmp
adc
aas
loopne
cmpl
xchg
cmp
idivl
aad
adc
inc
mov
lds
mov
push
push
fisttpll
pop
test
mov
or
rcrl
or
dec
cmp
sub
and
fidivs
push
fildl
insb
pusha
fidivrl
imul
lock
test
std
cmpsl
inc
hlt
inc
cmp
or
mov
cmpb
insb
rcrl
xor
cmc
pop
jne
sti
mul
int
fcompl
or
pop
xchg
dec
or
xchg
imul
mov
fsubrl
lcall
xchg
and
mov
lds
push
jmp
out
push
jmp
and
push
jg
outsb
pop
pop
mov
sarb
adc
pop
sbb
lds
dec
mov
jmp
and
mov
dec
xor
or
pop
shrb
mov
hlt
add
xor
pop
mov
inc
push
out
xor
stos
push
xor
sbb
mov
pop
sub
scas
pop
xorl
push
scas
rol
bsr
add
out
mov
xor
sbb
fwait
mov
jne
movsl
and
js
xchg
fisubrl
data16
test
std
mov
pop
mov
jnp
pop
je
push
cmc
rcrb
pop
pop
out
ss
fisubrl
outsb
cs
loope
lret
mov
cld
call
cmp
stc
popf
ds
and
sub
xor
stc
xor
pop
mov
fsubrs
add
push
insl
sarl
xchg
jecxz
aam
fistps
ja
fistps
or
dec
test
push
mov
fistpll
fcoms
fs
test
pop
test
push
inc
jo
xchg
ds
jge
je
push
lock
pushf
shlb
sub
mov
scas
loopne
cmp
mov
jnp
fcomps
xchg
mov
clc
and
adc
jns
jns
mov
inc
fcmovnb
mov
mov
or
hlt
dec
jge
test
gs
std
aaa
push
stc
jae
sar
mov
int
inc
push
cmpsb
mov
sbb
push
and
adc
sub
mov
sahf
add
sub
inc
mov
outsb
aam
and
int3
out
pop
cmp
lock
dec
icebp
lods
rorb
inc
mov
arpl
jl
das
mov
lahf
sub
data16
lods
lret
rcr
pop
stos
addr16
add
jne
push
mov
pop
lcall
inc
xchg
add
push
lods
loope
rclb
fcmovne
leave
and
lcall
mov
jno
and
jp
aam
or
pop
mov
aad
cwtl
push
daa
mov
add
rcr
mov
es
setnp
lds
pop
jne
push
mov
or
test
loop
imul
mov
sar
jmp
movsb
mov
adc
or
mov
mov
push
imul
jl
push
jne
in
fildl
mov
notl
add
cld
push
call
dec
movsb
or
jp
mov
iret
shll
out
jmp
bound
push
sbb
xchg
enter
icebp
test
cmc
sbb
in
cmc
and
cmp
cmpb
ja
aaa
jge,pt
dec
push
adcb
sub
pop
and
insl
shr
cmc
imul
xlat
and
pop
inc
pop
insl
inc
mov
ror
jecxz
daa
ljmp
sbb
xor
mov
add
es
sbb
scas
aad
pop
pop
mov
add
mov
cmp
lds
add
mov
pop
in
mov
cmp
mov
pop
cld
xor
loopne
loope
adc
neg
xchg
add
sahf
rcll
jmp
faddl
test
jbe
xor
cmc
add
add
or
in
dec
mov
jl
mov
loope
jmp
inc
sub
and
and
inc
rcrb
sub
jne
leave
scas
mov
iret
push
push
add
inc
xchg
into
stos
ficoms
push
mov
inc
xchg
lods
jae
lret
movb
mov
mov
movsl
cld
xor
scas
fsubrs
out
cmp
push
mov
outsl
es
adc
fidivrl
jl
mov
loopne
pop
loop
icebp
or
loope
xchg
adc
loopne
cmpsb
xchg
mov
pusha
inc
filds
ss
sub
mov
lds
dec
nop
mov
inc
add
mov
loop
pop
ss
fidivs
orl
adc
daa
andl
outsb
xchg
fwait
sbb
xor
icebp
fisttpll
lock
repnz
ret
fstps
iret
cmc
test
mov
xchg
xchg
jo
iret
push
fistps
xchg
loop
shll
add
xchg
and
mov
mov
or
testb
sub
push
ja
dec
cmp
std
add
lcall
pop
inc
push
pop
scas
xor
test
pop
insb
in
cmp
or
aaa
cmp
rcl
loopne
test
cld
sbb
adc
pop
pop
pop
rcr
lcall
pop
inc
jns
and
push
out
imul
xor
pop
mov
fwait
cs
fisubrs
mov
test
adc
fildl
rolb
dec
dec
sub
cli
jecxz
fcomps
fistpll
or
test
mov
push
imul
sub
jl
mov
lret
mov
leave
dec
adc
dec
add
lea
fstpt
push
movsl
add
ds
dec
xorl
xor
jae
dec
mov
fsub
pop
out
sarb
xchg
push
mov
xchg
orl
mov
mov
push
cmc
cmp
enter
mov
and
mov
aad
push
xchg
in
mov
incb
push
stc
movsb
adc
jg
pop
stos
stc
mov
pop
test
sub
dec
mov
adc
or
sbb
enter
jecxz
push
nop
mov
mov
mov
loopne
sarl
adc
push
into
push
add
mov
fcmovnbe
lds
push
mov
outsl
fnstsw
leave
out
lahf
in
movsb
cmp
ss
data16
nop
mov
outsl
fwait
lea
in
jle
rclb
jge
mov
adc
cmp
ja
fists
inc
jl
push
jge
stos
lea
shl
js
xor
xchg
outsb
insb
xchg
imul
push
addr16
icebp
andl
jmp
pusha
xor
sub
push
sti
pop
test
stos
dec
les
push
es
mov
outsl
sbb
rcrb
xchg
dec
sbb
sbb
shrb
pop
xchg
add
sbbb
test
cli
sub
xchg
inc
mov
adc
push
pop
adc
and
andb
adc
mov
cmp
jbe
cld
jmp
mov
jo
jge
xchg
sbb
in
stos
mov
movsb
movhps
xchg
lret
fs
std
cmc
loopne
mov
and
and
push
sar
clc
data16
pop
shl
sub
xlat
dec
inc
daa
adc
fidivs
lahf
test
in
push
cmpsl
lcall
xlat
sbb
or
push
cld
clc
sbb
mov
outsb
outsl
mov
cmp
dec
mov
inc
sti
outsl
xchg
jle
test
loopne
aas
cwtl
lea
popf
mov
inc
sub
insb
fdivs
dec
shll
add
ljmp
mov
sbb
cmp
outsb
fisubrs
xor
lret
movsb
push
in
shrl
aad
jg
push
and
or
and
push
mov
jne
faddl
pop
add
fwait
or
sub
xorl
int3
call
inc
sbb
or
cltd
inc
js
aaa
sbb
iret
je
and
cmp
fincstp
add
clc
push
sbb
push
inc
test
mov
mov
out
cmc
jno
in
gs
mov
outsl
ja
dec
aam
nop
push
js
rcll
loop
shl
xchg
xchg
sbb
inc
mov
add
or
lds
mov
add
pushf
aam
fimuls
pop
clc
pop
dec
es
shll
or
mov
pushf
lcall
push
lahf
in
or
outsb
pop
loope
je
mov
scas
xor
aad
cmc
jbe
shlb
mov
add
inc
addb
paddsb
arpl
test
loope
mov
sub
or
mov
mov
test
sbb
mov
inc
add
xorl
sbb
xchg
loop
inc
pushf
jmp
icebp
pop
mov
int3
xor
inc
je,pn
push
inc
nop
dec
test
xlat
out
adc
pop
pop
sub
fcomps
push
sbb
clc
lret
sub
xchg
loope
sti
jnp
and
lea
xchg
ss
call
je
push
mov
imul
lret
xor
mov
lock
jmp
jg
push
mov
dec
cmp
xchg
stos
mov
cmpsb
pop
loop
pop
aas
mov
fistpl
hlt
shrb
or
sub
cld
mov
into
mov
iret
dec
stos
mov
mov
add
adc
jae
das
pop
daa
push
inc
outsl
push
xchg
fmull
popf
or
cwtl
cs
movl
rolb
jl
mov
out
mov
pop
cld
adc
and
lds
pop
cmpsl
push
incl
and
push
pop
stc
jnp
test
add
and
xchg
sbb
inc
ljmp
pop
ljmp
dec
stc
mov
int3
repnz
pop
mov
mov
loope
mov
iret
out
xchg
inc
rcll
jg
push
jecxz
es
lds
clc
outsb
shrl
rorb
push
or
aam
pushf
and
addr16
cs
adc
stc
test
adc
mov
mov
sub
cmp
movsb
leave
jo
cli
cmp
loopne
pop
push
mov
mov
pop
mov
mov
stos
hlt
or
rorl
pushf
sbb
push
jo
lock
pop
jge
sub
sti
aaa
ss
push
les
jl
push
mov
cmp
es
jnp
data16
enter
fbld
dec
test
push
or
andb
adc
aaa
sub
orb
or
pop
or
insl
xor
repz
fmuls
xor
das
sub
in
test
movsl
cmpl
sub
filds
sbb
daa
pop
shrb
in
loop
cmp
rol
or
xor
mov
mov
sub
cmc
mov
stos
mov
mov
sub
icebp
icebp
ficoml
and
lretw
push
adcl
jbe
sub
pop
add
je
insl
shl
andl
and
dec
sub
adc
shll
inc
std
rcll
je
scas
dec
lods
insb
xchg
in
jmp
ret
cmp
lahf
in
sbb
and
jmp
ss
mov
imul
or
mov
or
mov
inc
pop
fistpl
jbe
in
imul
loop
jmp
push
add
sub
lods
xor
idivb
sbb
call
pop
stos
mov
push
fsub
jmp
xchg
mov
outsl
jg
arpl
sub
stc
es
sti
das
add
dec
mov
xchg
mov
pop
jnp
jae
clc
lock
sahf
or
mov
iret
les
jl
push
pop
test
lock
jns
lahf
and
adc
sbb
ja
cltd
push
mov
cltd
pusha
sub
fsubrl
test
ljmp
aas
daa
mov
mov
pop
mov
mov
into
in
cld
lods
movsl
xchg
sbb
push
mov
jmp
add
xchg
cmp
hlt
jo
dec
mov
mov
pop
dec
sbb
pop
inc
and
push
ja
push
popf
scas
daa
pop
xor
into
push
cmpsl
shll
stos
bound
cli
jno
and
xor
jo
loop
jp
je
mov
scas
pop
mov
lods
push
int3
or
ds
inc
cmp
jmp
add
mov
jle
sub
bound
mov
test
push
outsb
fsubrl
loopne
fwait
mov
sarb
pop
mov
stos
fnsave
mov
movsb
stos
sbb
je
ja
ficoms
addb
jp
scas
outsb
xchg
mov
pop
cmp
pop
lret
dec
pop
int
int3
iret
xor
scas
andb
sti
push
data16
mov
pop
insl
mov
jmp
divb
out
jle
aas
jecxz
cmpsb
jno
rolb
push
mov
inc
ds
mov
repz
xchg
or
icebp
sbb
aas
push
sti
xchg
loope
insl
mov
loop
sbb
inc
mov
dec
out
cmpb
lret
dec
mov
out
or
lock
push
or
fnstsw
mov
inc
jnp
jmp
and
gs
fs
mov
je
in
call
enter
ljmp
in
fistpll
cmc
push
mov
imul
je
sbb
adc
pop
mov
jno
dec
mov
or
push
or
xlat
test
pop
cmp
pushw
test
icebp
dec
or
adc
jg
push
inc
add
xlat
mov
fisttpl
ds
js
push
shll
or
fdivrl
sub
jo
mov
lret
cmc
add
jo
push
or
jp
movsl
and
or
aam
adc
mov
push
pop
pop
sub
inc
and
fwait
adc
mov
das
test
mov
pop
call
mov
sub
mov
imul
mov
xchg
sub
inc
or
andb
jecxz
adc
idiv
cmpsl
and
testl
push
sahf
inc
cmp
mov
lea
lock
add
loopne
or
pop
mov
mov
cmpsb
jns
fs
pop
loopne
orb
push
nop
in
leave
dec
xchg
loope
mov
mov
mov
sbb
leave
movsb
xchg
lret
sbb
xchg
in
rorb
loop
and
add
xchg
push
outsb
ret
rorb
stos
scas
sub
test
js
add
push
ret
fsubl
cmp
mov
cmc
mov
clc
int3
adc
fldenv
movl
out
jecxz
jmp
repz
dec
or
in
inc
pop
sub
loop
test
repnz
lea
push
dec
push
lds
mov
rolb
inc
sbb
enter
or
mov
pop
mov
or
mov
add
ret
push
dec
cmpl
mov
push
mov
adc
mov
aaa
add
iret
stos
sbb
add
gs
dec
fwait
xchg
mov
push
call
mov
mov
push
and
mov
lea
xor
add
add
loopne
test
pop
push
das
lea
pop
and
pop
ljmp
jp
rol
jbe
pop
xchg
lea
xchg
mov
mov
xchg
int
test
lret
jp
loope
movsl
mov
loop
inc
test
out
pusha
jmp
jno
lret
mov
orb
add
mov
sub
test
sbb
movsb
adc
cs
or
pop
sub
xor
mov
xor
ljmp
outsb
aaa
mov
add
out
add
mov
fwait
push
ss
xchg
scas
jo
add
cwtl
cwtl
xchg
bound
dec
loopne
xchg
mov
sahf
sbb
pushw
cmp
adc
xchg
adc
add
cwtl
add
pusha
jbe
loope,pn
xchg
out
mov
std
in
daa
pusha
cs
add
mov
xchg
mov
xlat
aam
pop
dec
cmc
lods
hlt
pop
push
dec
subb
cld
pop
xor
mov
sub
jmp
inc
xchg
mov
inc
sbb
mov
xchg
ret
inc
imul
int
xchg
or
cli
and
adc
mov
scas
orl
xor
shlb
mov
shl
mov
sub
iret
xor
lods
loope
daa
mov
xchg
outsl
mov
fildll
mov
mov
lock
or
int
sub
mov
adc
out
or
pop
push
push
jo
sub
cmp
sahf
or
cmp
dec
repnz
jp
mov
and
xor
adc
add
test
cmpb
test
mov
cltd
and
paddq
clc
xor
xor
or
jns
dec
sbb
adc
sbb
xchg
pop
imul
jp
or
mov
cld
fisubrl
lods
in
mov
add
sbb
inc
ljmp
add
ret
test
loopne
clc
les
mov
test
adc
sbb
out
dec
mov
cmp
xor
jae
push
rol
outsl
das
mov
push
scas
cwtl
add
jge
sub
pop
into
ret
xorb
aas
mov
pop
std
xchg
sub
xchg
lret
pushl
lea
out
fdivrs
and
jno
xchg
jb
push
hlt
imulb
insl
mov
cmp
ja
daa
mov
inc
loop
leave
pop
add
clc
sub
cmovb
pop
cmp
cs
cltd
mov
cmp
add
xor
pop
cmp
adc
mov
adc
sub
xchg
test
daa
lret
test
pop
fildll
cwtl
xchg
icebp
xor
xlat
sti
dec
roll
ljmp
loop
fcom
pop
fcmovne
or
pop
pop
sub
int
mov
mov
pushf
ror
mov
shlb
test
cmpl
sbb
push
mov
mov
sarl
loopne
imul
data16
pop
ljmp
jbe
fistpl
rol
call
xor
gs
dec
push
sub
pusha
sbb
xchg
cmp
xchg
sbb
loope
rcrl
loopne
xor
sahf
in
pop
jle
test
sub
inc
adc
aaa
adc
data16
imul
xor
in
in
sbbb
push
mov
movsl
cmp
push
jl
sub
mov
xor
std
inc
pop
inc
fs
lcall
pop
ret
test
das
lahf
test
fwait
mov
loop
sbb
cltd
cmp
add
stos
fcmovnu
dec
scas
aam
in
ljmp
loope
xchg
jg
in
inc
hlt
sbb
mov
call
or
mov
loop
jbe
jne
clc
adc
adc
xor
bound
imul
xor
data16
push
aam
fildl
dec
fwait
ret
sub
out
cmp
mov
ret
cmp
cli
mov
push
inc
add
or
adc
jle
pop
mov
pop
fidivrl
sub
sub
sub
jle
xor
pop
daa
jnp
dec
test
mov
sbb
enter
push
pop
les
popa
pop
mov
lock
mov
ret
inc
mov
push
pop
add
xor
out
lods
test
int
in
movb
pop
sarl
and
data16
outsl
cld
scas
push
inc
jbe
push
std
xor
jl
sbb
shll
fidivl
mov
cmp
icebp
mov
cltd
xor
fistl
add
jne
mov
or
sub
dec
jp
push
jmp
sti
sbb
mov
int3
into
adc
jno
pushf
in
pop
pop
jp
pop
bound
sub
jge
pop
xor
jp
push
data16
test
add
mov
mov
mov
or
sarl
fbld
mov
jge
adcl
test
std
lds
push
pop
lcall
int
loopne
dec
jecxz
test
loope
fstl
jb
push
lcall
pop
cmp
or
fbstp
cmp
xor
cmp
loopne
out
adc
mov
jl
out
push
loope
adc
mov
sbb
cwtl
popa
or
sbb
cld
aam
inc
scas
in
inc
mov
inc
cmp
mov
repz
andb
push
adc
aad
add
pop
push
movb
popw
dec
sub
sbb
or
mov
inc
je
xchg
pushl
scas
fbstp
ret
scas
clc
jl
icebp
pusha
add
xchg
sahf
add
jne
insl
add
mov
lods
jns
mov
mov
or
ret
loope
jns
pop
jle
insb
inc
mov
notl
jl
pushw
cmp
xchg
pop
test
sub
dec
cmp
inc
ss
call
and
repnz
inc
inc
and
insb
fs
negl
fistl
cs
mov
add
adc
bound
mov
stos
jmp
xchg
fistps
pop
call
ret
testl
sub
xchg
mov
dec
dec
jbe
dec
movl
fs
mulb
inc
pop
jp
aas
pop
push
xlat
fldl
dec
or
sahf
outsb
shll
adc
sub
xchg
mov
sbb
sbb
mov
das
shl
lods
mov
insb
stc
adc
out
movsl
mov
add
test
xor
mov
outsl
aaa
inc
adc
push
push
lods
sbb
push
add
in
in
scas
cmp
mov
fldl
scas
xor
ror
push
pushf
adc
sbb
int3
call
out
jnp
adc
test
pop
inc
pop
jecxz
addr16
js
jno
loop
add
mov
xchg
mov
or
pop
and
outsb
fcomps
hlt
popl
mov
loop
jmp
push
enter
push
cmp
mov
adc
inc
icebp
xor
decl
inc
insl
add
lret
xchg
call
es
mov
mov
pusha
pop
and
and
loopne
lea
ljmp
dec
icebp
loop
leave
cmc
inc
xor
scas
and
add
inc
sbb
xor
int3
xlat
stos
testb
xor
lfs
imul
cmc
popf
mov
xor
popf
roll
push
cs
pop
imul
rcrb
lret
divb
mov
or
scas
cs
bswap
inc
mov
test
and
popf
jne
std
and
das
mov
test
js
inc
push
or
incl
in
xchg
in
push
or
test
pusha
or
and
jnp
test
fs
lret
rorb
jmp
pop
jp
stos
clc
push
popa
mov
pop
or
push
cmp
add
inc
and
pusha
adc
js
mov
push
sub
xchg
push
jge
add
add
add
outsb
dec
pop
push
jle
lea
jbe
xor
xchg
movsl
insl
add
pop
push
sbb
xchg
cmp
jns
mul
outsb
in
test
cmpsb
xchg
cwtl
mov
mov
pop
cli
rol
mov
lock
lock
xchg
or
xchg
and
in
mov
stos
cwtl
add
mov
scas
mov
add
inc
lcall
xor
jbe
jo
cmpl
dec
and
push
loop
push
ss
dec
fwait
inc
mov
and
adc
lock
pusha
mov
pop
and
and
sub
cmp
loopne
mov
notb
lcall
xor
mov
mov
adc
pop
sarb
in
das
daa
mov
clc
jecxz
push
jle
jae
ret
aas
jo
xchg
js
sub
scas
and
xchg
ss
mov
push
loope
rcrl
xor
pop
into
add
dec
pusha
hlt
ret
xchg
in
lret
mov
into
mov
xchg
rorb
movsl
js
mov
cmpsl
jl
neg
xchg
rcr
xchg
inc
xchg
sub
loopne
fistpll
imull
mov
or
ds
imul
cmpl
sbb
push
fldl
call
ja
or
stos
pushf
test
nop
sub
ret
or
cld
adc
lock
xchg
les
adc
mov
dec
fiaddl
jae
sub
xlat
jb
mov
cmpsl
inc
add
sbb
outsl
cmpsb
dec
or
xchg
lods
bound
xchg
inc
icebp
xor
cmp
ss
jnp
cmp
adc
mov
ljmp
dec
scas
cld
xchg
sbb
mov
faddl
inc
enter
insl
mov
cmp
inc
scas
add
sub
fbstp
scas
xchg
mov
hlt
mov
gs
out
or
pop
fwait
cli
jbe
out
or
sarl
push
pop
idiv
flds
jecxz
jo
jecxz
or
leave
add
mov
mov
push
inc
pop
mov
dec
ret
push
lret
mov
mov
mov
movsb
cmp
mov
push
pop
cwtl
mov
call
pop
pop
or
jg
pop
ja
jmp
clc
popf
std
es
fisubs
jp
in
dec
inc
add
add
pop
inc
dec
add
cmp
xchg
or
mulb
cmpsb
shrl
sbb
repnz
cmpl
mov
movl
test
xor
mov
lods
push
ret
sbb
popf
ja
add
loop
stos
add
fstpt
clc
xchg
pop
jbe
cmp
add
adc
cmp
mov
repz
jp
mov
incb
and
cmp
add
fs
popl
inc
loop
jge
sub
hlt
pop
test
or
cmpsb
sub
cmp
mov
mov
cs
cmc
push
je
cld
test
xchg
ja
fiadds
push
imul
shrl
inc
sub
mov
pop
stc
pop
fnstcw
mov
mov
call
jae
adc
cmp
fildl
push
ja
xchg
and
push
xchg
pop
jg
dec
insl
jmp
dec
fnstsw
pop
inc
xchg
push
mov
xchg
or
mov
mov
and
clc
in
push
xchg
mov
jae
or
sbb
cmpl
and
or
pop
jno
iret
mov
hlt
mov
xchg
or
les
adc
inc
cmp
aaa
jmp
testl
mov
pop
or
sti
ret
clc
int
xchg
inc
pop
dec
outsl
fwait
cmp
mov
cltd
dec
xchg
lea
xchg
mov
lods
jbe
sub
xor
test
add
mov
fwait
adc
push
rcrb
adc
push
sahf
add
mov
sar
push
lock
push
mov
sbb
lea
inc
loopne
xor
std
call
mov
cmp
lret
dec
rolb
les
xchg
mov
inc
mov
jns
mov
roll
adc
mov
rcrb
xchg
cs
movsb
dec
push
jg
and
push
dec
rorl
or
test
iret
jo,pt
mov
dec
popa
int3
ret
mov
xchg
push
cmpsb
jno
mov
repnz
jge
cli
testb
jno
pushl
add
mov
mov
es
xor
jge
stos
add
aaa
cltd
cwtl
lahf
mov
fwait
ljmp
rclb
mov
sbb
or
addr16
jg
out
sub
mov
cmpsb
mov
aas
mov
movsl
jg
and
cmpsb
loopne
xor
outsb
pop
mov
mov
adc
pop
xor
addb
or
ffreep
imul
xchg
cmc
jp
sbb
jge
outsb
clc
sub
cmp
test
xchg
sbb
mov
repnz
mov
sub
pop
and
mov
and
jle
or
or
das
dec
mov
ja
or
pop
cmpsl
mov
mov
mov
or
js
mov
setns
push
inc
jg
push
adc
jp
add
mov
cmp
jge
aam
outsb
jb
cmp
or
int
fists
popf
inc
push
xor
jno
pop
js
in
jo
rorb
jmp
pop
sarl
or
dec
pop
test
mov
cmp
inc
cmp
dec
shlb
nop
dec
mov
or
cld
adc
or
subl
cld
push
insl
mov
dec
in
popf
mov
sbb
mov
ret
pop
lret
aaa
jmp
aam
adc
push
cmp
je
stmxcsr
xchg
or
jbe
mov
repz
or
insl
stc
xor
mov
mov
add
xor
push
pop
bound
pop
ret
adc
dec
ret
push
jl
lock
xor
dec
prefetch
or
outsl
lcall
add
sarl
les
mov
dec
mov
adc
jg
sahf
ror
or
mov
pop
scas
ja
int3
mov
push
jl
mov
pusha
mov
adc
mov
mov
push
outsl
jge
jnp
dec
jle
inc
push
inc
xchg
jo
ljmp
sub
xorb
insb
fistpll
inc
xlat
and
in
adc
sbb
dec
data16
pop
mov
sub
pusha
mov
mov
jg
lock
push
aaa
cld
imul
pop
leave
sbb
iret
mov
dec
adcl
out
pop
mov
addb
push
out
in
xor
test
xor
enter
ret
movsl
or
out
add
adc
loop
repz
push
aam
push
leave
andl
test
loopne
aas
jle
fwait
pop
into
sub
sub
je
mov
sar
in
add
bound
mov
xchg
pop
lahf
inc
test
jb
mov
ret
shlb
cmp
int
mov
inc
iret
hlt
jbe
mov
stos
mov
scas
test
xchg
fildl
push
popf
push
mov
call
adc
and
dec
inc
jmp
and
adc
jne
mov
adc
fimull
cwtl
out
mov
pop
xchg
or
outsb
dec
add
hlt
scas
stc
in
pop
lock
out
adc
or
mov
clc
mov
xor
fimull
mov
push
push
addr16
movl
idiv
in
push
std
lcall
mov
mov
push
data16
ds
lea
in
je
cltd
mov
sub
jge
ljmp
push
jge
push
cmc
push
test
fcompl
lret
pop
push
test
popa
arpl
hlt
dec
inc
outsl
pop
mov
insb
sbb
cs
lock
cmpb
pop
pop
pop
jl
das
mov
shl
and
faddp
inc
icebp
or
push
xchg
or
mov
cmp
loopne
fnstsw
icebp
jp
out
cmp
jo
inc
shll
inc
cmc
sti
subl
ja
pushf
sub
jno
leave
stc
stos
dec
pop
je
pop
fmuls
mov
mov
jnp
aaa
pop
insb
or
mov
mov
xchg
adc
mov
push
push
pop
adc
shrl
and
mov
adc
lea
add
or
mov
jae
and
mov
dec
fs
mov
jbe
in
rol
mov
xor
movd
or
dec
cmc
mov
scas
ret
push
cwtl
in
xchg
mov
es
adcb
sub
shlb
not
out
in
push
and
pop
aam
orb
mov
repz
lahf
pop
in
inc
mov
lahf
data16
jae
ljmp
or
arpl
and
mov
xor
add
loope
outsl
dec
or
mov
cmp
mov
adc
mov
mov
jmp
cmp
js
cli
mov
lods
pop
mov
push
enter
or
dec
das
fmul
jmp
mov
imulb
fdiv
adc
sarl
mov
add
adc
lret
aam
add
rorl
outsb
or
shrl
mov
pop
clc
das
incl
daa
mov
push
dec
enter
fdiv
in
xchg
icebp
xchg
movsb
jns
popl
xchg
sbb
add
pop
mov
lds
dec
xchg
mov
call
xchg
outsb
test
loop
test
pop
test
add
and
out
jne
xchg
data16
push
xchg
loope
fmuls
jl
push
pop
mov
or
sub
sahf
lods
ss
aas
sbb
push
popf
xor
mov
mov
sub
or
mov
ja
jb
xor
mov
fbstp
add
mov
clc
xor
jp
cwtl
add
jne
inc
xchg
test
lods
cld
in
clc
adc
push
stos
push
fnstenv
sbbb
mov
icebp
push
pusha
ret
or
or
mov
mov
cld
mov
mov
sti
mul
les
adc
xlat
pop
push
pop
or
push
rolb
inc
sbb
ret
sub
jg
outsb
jnp
fildl
pop
loopne
iret
pop
adc
jbe
jg
push
or
cs
adc
lret
pop
xchg
subb
sti
scas
jmp
pop
or
inc
xchg
js
mov
xor
mov
sub
add
mov
and
addb
in
icebp
lock
xchg
sub
or
mov
xor
mov
xchg
mov
sub
test
mov
cld
push
mov
rcrl
fsubl
test
in
fimull
xchg
scas
testl
loope
pusha
or
and
aaa
jns
shrl
mov
ja
dec
or
out
pop
inc
daa
and
ljmp
mov
sbb
cli
adc
push
adc
mov
shll
jnp
mov
jge
mov
cmp
dec
mov
das
cmp
imul
cmp
addl
movsl
cltd
sbb
cwtl
insb
jo
push
mov
mov
outsb
push
outsl
xchg
dec
pop
cmp
clc
xor
hlt
gs
dec
sbb
out
out
shl
imul
lret
mov
dec
insl
push
pop
or
insl
and
mov
out
add
pop
inc
adc
aad
jg
jecxz
enter
xor
mov
inc
sub
dec
scas
push
test
mov
scas
das
mov
mov
cmp
add
fisttps
mov
ja
jno
fildll
pop
push
xchg
add
rorb
and
sub
lcall
cmpl
cmpsl
ds
fwait
sbbb
cwtl
xorb
push
daa
push
bound
outsb
ja
push
fisttps
inc
mov
pop
outsb
push
mov
test
add
cmp
scas
dec
sbb
fsubl
mov
xor
pusha
gs
pop
js
cli
mov
push
es
enter
cmc
aad
movsl
or
pushf
into
xchg
mov
and
cwtl
cmp
jae
test
ffreep
inc
insb
repnz
pop
sub
jmp
std
pop
call
cmp
adc
xlat
mov
jl
xor
insb
mov
imul
or
in
aas
sbb
sbb
sub
in
jge
rorl
fwait
repnz
sti
les
lock
adc
mov
inc
loope
cmp
or
mov
pusha
push
jo
cmp
cmpsb
icebp
pop
orb
movsb
adc
inc
jno
mov
add
es
cmpsb
popa
popf
dec
sbb
ja
sub
shlb
in
or
jle
jp
mov
add
dec
jmp
inc
ret
add
stc
push
sbb
lea
add
in
pushl
sbb
stos
sub
sub
mov
dec
mov
pop
sbb
and
mov
mov
and
js
mov
fbstp
push
mov
xchg
dec
push
and
add
mov
arpl
or
or
add
stc
clc
test
pop
fbld
mov
inc
in
pop
jmp
dec
add
inc
adc
movsb
xor
loopne
outsl
loop
lds
xor
in
mov
jg
sub
or
call
cltd
xchg
icebp
inc
sbb
ficoml
shrb
shrb
dec
jne
ljmp
ret
mov
push
mov
or
add
pushf
adc
out
mov
lret
insb
adcl
push
loope
mov
loope
call
idivb
sbb
and
and
pop
and
ss
fwait
pop
insb
cli
push
xchg
cmpsl
scas
mov
fidivs
stos
mov
fwait
sub
push
dec
mov
in
dec
dec
shlb
jg
in
cwtl
ss
lock
adc
and
mov
mov
dec
xor
bound
adc
pop
jp
stos
fcoml
jmp
or
jle
sbb
mov
or
or
add
mov
rorl
adc
xchg
mov
inc
sbb
insl
push
ljmp
pushf
mov
sti
inc
fs
xchg
outsb
mov
jbe
pop
add
mov
in
jb
fldcw
lods
repnz
outsl
mov
sarb
les
test
push
lcall
mov
inc
sahf
jb
out
call
dec
in
icebp
dec
ljmp
icebp
xchg
notb
push
ss
mull
jbe
scas
pop
sub
push
lds
jecxz
jns
push
jbe
mov
cmp
and
xorb
loope
push
ret
add
lea
les
je
divl
jo
sub
out
and
jb
dec
push
xor
pushf
hlt
dec
sbb
adc
mov
shl
pop
mov
je
add
fdiv
sarb
jmp
fstl
xchg
outsl
fisttps
movsl
mov
pop
inc
test
repnz
xchg
mov
pop
outsl
pop
addl
in
dec
sub
test
jb
aam
push
int3
lcall
sbb
mov
jo
pop
test
jp
mov
mov
pop
cli
movb
out
fnstsw
call
addb
std
decb
fdivl
jo
mov
cmp
pop
mov
lods
out
add
jae
mov
js
add
in
sub
mov
sti
cmpsl
cmp
clc
js
orl
inc
mov
pop
fmull
or
test
and
sar
jbe
fisubl
mov
test
jle
jp
rol
inc
and
roll
inc
cmp
jbe
mov
std
push
or
ljmp
in
insb
adc
mov
xchg
push
and
popf
sbb
scas
push
inc
stc
ss
sarb
push
and
shl
imul
push
or
cmpsb
jbe
xchg
jle
fwait
or
daa
scas
insb
dec
mov
add
fimull
jne
lods
std
xchg
or
mov
adc
out
out
add
outsl
pop
out
nop
push
mov
mov
pop
add
int3
dec
push
mov
les
mov
insl
das
out
cmp
lock
pop
dec
dec
jne
fstpt
aas
test
mov
mov
mov
sub
movsb
aas
dec
jbe
jbe
ss
dec
add
cli
xchg
sbbl
push
mov
icebp
outsl
mov
test
rclb
subb
aad
popa
pop
jnp
ret
add
call
sub
ret
mov
add
mov
dec
sarb
inc
pusha
or
pop
sbb
adc
sbb
pop
push
and
and
clc
or
mov
sub
aaa
fcmovu
js
repz
movsl
repz
jmp
shl
pop
out
add
xchg
mov
stos
enter
push
and
cmp
lahf
mov
sti
pop
xor
jmp
ljmp
or
xor
mov
jbe
out
or
cmp
es
bound
cltd
mov
cwtl
xchg
xchg
popa
in
scas
pop
mov
cs
shlb
int
out
loope
mov
loopne
mov
jg
pop
cmp
xchg
inc
rcll
push
pop
cmp
repz
mov
push
add
test
sbb
outsb
mov
call
leave
or
dec
leave
mov
fcom
dec
inc
dec
mov
xchg
pop
mov
xor
es
cld
cld
sahf
les
in
nop
mov
ljmp
pop
sbb
cmpsb
push
dec
into
sub
movsl
das
test
loope
js
push
ja
outsb
shl
mov
int3
add
sbb
jmp
clc
cmp
cmc
mov
arpl
pop
mov
push
ljmp
sti
outsl
mov
adc
mov
sbb
fstpt
je
and
push
mov
in
xchg
incb
mov
and
test
dec
cmpsb
jge
call
jbe
mov
in
mov
xor
lret
push
mulb
pop
lock
movb
adc
mov
push
mov
xor
jb
insl
outsb
stc
adc
shlb
mov
pop
lods
or
mov
or
inc
and
cld
add
push
push
adc
hlt
dec
shlb
adc
add
xlat
dec
xor
add
inc
pop
push
aaa
or
loopne
mov
cmove
jnp
xchg
and
mov
aaa
lds
lahf
cwtl
mov
mov
add
sub
or
or
dec
cmp
xchg
adc
or
incl
inc
xor
mov
jb
fdivrs
push
cmp
xchg
dec
push
sub
jbe
cmp
loopne
lods
mov
mov
inc
je
fld1
pop
or
loopne
andl
fnsave
sbb
jno
lret
out
adc
xchg
xchg
mov
sub
adc
int3
fdivs
adc
mov
shrl
pusha
jle
push
mov
fbstp
mov
push
jle
mov
pop
mov
js
cwtl
and
insb
pop
xchg
jae
pop
subb
outsl
sbb
mov
push
push
mov
movsl
push
stos
push
mov
push
mov
xlat
icebp
add
mov
lret
mov
mov
mov
sbb
sbb
mov
fidivs
adc
sub
lock
fisttpl
fstl
lcall
test
xor
ljmp
push
rol
push
dec
insl
clc
pop
adc
repnz
ss
jl
sti
scas
or
lahf
outsl
mov
jb
push
jecxz
jle
fcmove
or
or
repnz
out
xchg
lea
jp
daa
std
cltd
repz
sub
filds
shrb
push
aaa
pop
orb
sub
push
scas
bound
hlt
lods
jnp
jnp
jl
lods
mov
adc
sbb
call
and
stc
jno
outsb
push
mov
in
sahf
les
sub
fs
add
mov
adc
pop
out
das
xchg
push
adc
add
sbb
ret
fdivrp
cmp
add
js
cwtl
push
cmpsb
ljmp
rolb
sbb
insl
add
jl
das
mov
and
xchg
cmp
cmp
loopne
in
adc
pop
icebp
xlat
add
mov
enter
loopne
sub
xchg
mov
xor
outsl
fldl
lods
push
shll
inc
mov
stos
in
and
jae
arpl
nop
leave
outsb
mov
movsb
jb
sbb
dec
nop
xchg
outsl
sarl
mov
sbb
push
pop
mov
test
lret
adcl
jne
push
insb
enter
insb
adc
mov
adc
mov
push
pusha
jp
sti
out
push
lea
lret
pusha
push
leave
cmp
lods
insl
add
call
xor
stos
insl
xchg
mov
stos
scas
mov
lock
int
and
and
test
aaa
mov
add
ss
lcall
xor
iret
arpl
cli
loope
push
pusha
popa
push
clc
aas
mov
test
cmp
negb
cmpsl
rorl
sbb
test
pusha
pop
js
pop
inc
test
pop
push
test
test
or
scas
add
push
cmp
aad
sbb
dec
in
ret
cltd
cltd
sub
je
adc
outsb
call
or
stos
pop
or
cmpb
arpl
push
xchg
xor
cmp
mov
sbb
jmp
push
xchg
sub
ja
xchg
ja
jne
hlt
add
inc
pop
addb
dec
incl
rcrl
mov
push
push
push
ja
std
ljmp
in
shlb
jno
out
lds
inc
mov
mov
imul
and
mov
es
xor
inc
push
push
rcl
mulb
mov
cmpsb
xlat
sbb
push
subl
fcoml
fucomp
push
dec
loop
incb
scas
jnp
lcall
push
mov
rcll
mov
cmc
rol
fildl
in
fldenv
loope
mov
mov
ror
leave
aaa
loop
xchg
mov
mov
xor
mov
mov
lods
nop
es
lds
mov
sub
shll
rorb
or
setae
jp
mov
mov
outsb
rolb
sbb
push
cmp
inc
add
mov
ds
fwait
enter
les
jp
ret
andnps
lock
aaa
or
pop
movsl
int
enter
push
shll
aad
cwtl
and
xchg
in
decl
xor
mov
cwtl
jle
push
ss
fdivl
in
test
add
addr16
jne
add
inc
stc
imul
jbe
testb
ljmp
push
jecxz
xor
test
add
xchg
and
sbb
push
add
jp
mov
jecxz
clc
mov
and
test
fcmovnu
dec
sub
cltd
js
sub
push
fdivrp
imul
sbbl
push
ja
jge
push
mov
sbb
test
iret
lods
xchg
test
xor
inc
fs
ret
inc
push
nop
movsl
js
into
add
cmp
pop
ret
movsl
dec
mov
lret
mov
dec
in
cmp
popf
add
sbbl
cmp
pushl
fistpl
pop
popa
and
push
fwait
mov
xchg
sub
xchg
rolb
xor
push
sbb
lahf
arpl
adc
icebp
mov
rorl
add
push
incl
and
test
popa
and
jne
mov
lds
inc
insl
call
mov
cwtl
mov
push
add
sbb
adc
shrb
fldt
pushl
inc
mov
test
mov
push
fcmovbe
jle
mov
pop
adc
pop
ds
xchg
push
sub
push
int
cmpsl
jo
pop
cmp
jle
inc
jne
xor
lock
jbe
mov
js
push
dec
icebp
dec
jns
rcl
mov
ret
ret
cmp
in
inc
cmp
or
mov
xlat
mov
jne
fstp
mov
pop
aaa
jmp
mov
push
out
lods
gs
sub
out
ret
push
testl
mov
movsl
adc
cmp
push
xor
jbe
jp
rclb
fistps
cli
xorb
fs
mov
cli
mov
scas
lret
sbb
cld
lea
ljmp
and
mov
xor
mov
sbbl
or
xor
lds
test
mov
xchg
std
dec
fnstenv
xor
shll
imul
ret
or
lods
and
fidivrs
inc
andl
enter
rorw
movsb
push
pop
adc
xchg
shll
sub
adc
test
ficompl
xchg
and
add
ds
dec
hlt
mov
in
mov
lret
pop
cwtl
pop
push
cmpsb
inc
jns
pop
add
adcl
arpl
jmp
test
test
sbb
lods
mov
mov
sbb
idivl
pop
mov
xchg
sub
jecxz
in
sub
mov
pop
mov
and
xchg
arpl
dec
pusha
or
sbb
pop
arpl
clc
and
fadd
ret
adc
frstor
aam
pop
mov
jae
mov
mov
ret
inc
in
pop
push
ret
inc
dec
add
xor
xchg
or
mov
sbb
imul
flds
mov
push
std
scas
sahf
pop
dec
dec
sbb
dec
in
xchg
incb
xchg
xchg
or
and
lahf
repz
mov
mov
jmp
mov
pop
mov
aam
enter
sub
filds
or
mov
xor
mov
lods
xor
pop
jno
xchg
or
mov
nop
xchg
mov
push
xor
inc
push
mov
mov
dec
mov
cmp
shll
inc
pusha
push
add
mov
mov
fadd
xchg
subb
in
sbb
fdiv
lea
in
fdivrl
lds
mov
jle
push
pop
xchg
lret
cmp
jecxz
ss
mov
repnz
xor
sti
or
push
in
sbb
sbb
sub
out
cmp
mov
or
lret
ret
pop
sti
pmaxub
aad
dec
xchg
cltd
inc
movsb
pop
scas
fildl
or
stc
rorb
mov
fisttpll
or
mov
lahf
mov
jb
xchg
mov
fs
fisttpl
and
xchg
pop
cs
shrb
mov
loopne
jg
mov
js
jb
scas
or
cwtl
xchg
movsb
cmpsb
in
loopew
mov
repnz
cmp
dec
xchg
out
sbb
sbb
aas
int3
or
shrl
jb
sbb
popa
dec
or
roll
fstps
scas
adc
into
xchg
cmp
std
xchg
mov
xchg
cwtl
ds
add
mov
test
add
cld
mov
xchg
ret
enter
add
jbe
shll
pop
ds
outsl
mov
and
mov
push
jbe
pop
stos
push
xchg
inc
pop
jo
jl
lcall
or
mov
xor
push
repnz
inc
mov
sub
and
or
fdivrp
cs
ret
aad
jle
mov
mov
mov
std
mov
aaa
pop
mov
adc
fs
sbb
stos
stos
mov
add
addl
clc
dec
fucomip
rcr
decb
decl
shr
xor
insb
or
ret
jnp
mov
call
cmpl
mov
mov
adc
jle
xlat
loop
add
pop
cs
adc
jmp
dec
sub
mulb
addr16
cli
ljmp
loop
dec
or
adc
mov
push
faddp
inc
sbb
rcll
arpl
aam
sbb
mov
xchg
movsb
xchg
mov
adc
inc
js
pop
push
movsb
fidivs
add
mov
shll
cmp
mov
fldenv
sbb
or
mov
addr16
stos
aam
xchg
mov
add
cmp
sbb
mov
push
lds
or
incb
ljmp
sbb
stos
pop
push
pop
push
es
leave
adc
push
mov
out
jnp
fistpll
xchg
pop
adc
in
xchg
pop
sbb
sub
push
push
mov
adc
rolb
mov
ret
and
jmp
mov
sbb
sub
icebp
je
gs
add
pop
jbe
outsl
incl
cld
aam
lds
mov
pusha
jp
or
fiadds
add
pop
cmp
add
cmp
daa
mov
aam
add
mov
add
ljmp
nop
aam
cs
adc
jno
pop
cmpsl
adc
or
dec
adc
movsb
ret
push
sub
pusha
sbb
lcall
add
shll
and
jg
mov
mov
dec
mov
decl
sub
popf
lea
rclb
push
mull
stos
imul
lret
add
shlb
insb
mov
aad
ret
jns
shlb
dec
and
cmp
call
pushf
and
xchg
push
repnz
jg
out
data16
lods
jb
cmp
rclb
jle
adc
aam
mov
dec
inc
inc
xor
or
pop
push
es
jne
jecxz
in
pop
lret
pop
push
adc
rolb
ret
dec
push
mov
jge
push
in
mov
add
lcall
fs
gs
mov
insb
pusha
subb
scas
or
or
das
mov
inc
mov
ret
add
dec
mov
insl
push
sub
imul
mov
dec
inc
lods
add
jb
mov
jmp
rcrb
fwait
jl
inc
icebp
adc
push
lock
and
push
sbb
sbb
shll
js
mov
jo
fwait
in
shr
test
sub
test
xor
outsl
data16
scas
jbe
mov
fsubrl
sbb
leave
xor
push
movsb
add
ljmp
mov
or
mov
ds
mov
inc
stos
xchg
ja
lea
dec
jno
je
in
mov
push
loopne
sub
into
sbb
mov
scas
sahf
bndldx
add
or
xchg
enter
stos
fisttpll
mov
inc
addr16
push
movsl
lods
ret
ja
mov
mov
mov
push
sub
mov
push
push
popa
cmp
sub
loope
sbb
xchg
shlb
mov
ja
pop
outsb
test
inc
in
loop
pusha
pop
cmc
pusha
adc
movl
dec
pop
les
ss
or
leave
test
ljmp
es
into
cmp
pop
imul
mov
mov
and
mulb
or
aaa
pop
sbb
nop
mov
jnp
sbb
fistpl
jns
es
clc
jg
adcb
cli
add
in
subb
inc
into
mov
jge
cmc
inc
ljmp
ljmp
mov
hlt
jle
jbe
jg
scas
mov
sub
out
push
xor
popa
add
scas
sub
ret
outsb
mov
aaa
aad
data16
cmp
xor
icebp
push
mov
lds
adc
rol
pusha
jecxz
aad
mov
not
jle
stos
fwait
cli
mov
dec
loop
xchg
andl
mov
dec
lds
mov
inc
sub
jp
mov
push
xchg
scas
in
pop
ffreep
cmpsb
je
add
call
push
fisubrl
jnp
sub
and
mov
cmpsl
scas
push
out
or
mov
fadd
cmpsb
xchg
out
pop
outsb
int
mov
sbb
pop
and
inc
inc
iret
roll
xlat
jae
andl
mov
shll
cmp
mov
sub
pop
inc
cmp
stos
outsb
jl
push
pop
arpl
mov
mov
inc
sub
pop
mov
int3
jb
push
scas
rep
repz
stos
or
pop
inc
sarb
mov
mov
rcrl
xchg
jne
mov
aad
scas
sub
addl
lods
arpl
and
mov
es
lds
testl
scas
daa
pop
lods
std
xchg
mov
ja
imul
scas
fcmovne
inc
adc
pop
jo
or
sbb
add
mov
mov
mov
jecxz
xor
stc
test
lods
movsb
decb
cltd
push
not
push
inc
jmp
movaps
inc
je
jno
xchg
dec
int3
iret
adc
add
mov
ret
cltd
xorl
das
in
push
sarl
clc
mov
or
in
sub
xor
sub
pop
jno
rclb
mov
arpl
jbe
mov
jle
dec
jg
repnz
lds
jg
jg
pop
mov
add
xor
xor
es
mov
lret
mov
movsb
sbb
push
jmp
cmpsb
inc
push
mulb
fildl
ss
ret
mov
test
pop
std
xchg
dec
in
sbb
dec
inc
sub
or
or
fcmovnu
movsl
inc
push
out
shl
aad
enter
ud1
push
and
pop
jg
sbb
clc
outsl
loopne
aam
aaa
movsl
daa
ja
ret
sub
push
std
pop
add
rol
mov
in
pop
mov
mov
sti
cmp
dec
ja
fcoml
pushf
inc
xchg
xchg
sub
fisttpl
sbb
fstl
cmp
movsl
js
int3
lods
in
es
mov
push
ret
jge
adc
subl
pushf
fimull
xchg
in
loop
add
sbb
jg
in
xor
or
cli
and
popf
dec
kaddw
inc
mov
test
xor
dec
mov
adc
cwtl
aas
out
test
movsb
pop
sub
movsb
add
jle
add
mov
pushf
in
and
in
push
pop
sbb
fistpll
in
subl
jo,pt
mov
pusha
xchg
out
sbb
call
push
jnp
ret
loope
sbb
aad
cwtl
lret
inc
push
pop
lcall
and
shrl
call
les
insl
mov
ficomps
les
mov
cwtl
daa
in
fisubrl
cmp
add
arpl
jmp
jmp
sahf
sub
rolb
and
bound
push
in
pop
test
sub
xchg
out
dec
out
lock
test
xchg
js
das
and
push
stc
cmp
stos
inc
fdivrs
mov
daa
lahf
add
pop
insl
jecxz
push
mov
adc
sub
inc
aad
xor
sbb
adc
lock
fcoms
out
rclb
adc
es
pop
adcb
dec
xchg
and
push
sbb
out
ret
ret
push
sub
xchg
sbb
and
dec
popa
rcll
push
jge
idiv
xchg
inc
push
ljmp
or
pop
fsts
jns
mov
outsl
repz
pop
push
insl
jp
aad
nop
movsb
in
inc
xor
push
jge
leave
add
xchg
pop
lea
cli
fstpt
hlt
or
push
in
push
rorl
sbb
mov
mov
pushf
sbb
pop
xor
adc
ret
pop
fcmovnu
mov
sbb
push
xchg
test
fisubrs
push
jbe
pop
sbb
cmp
fildll
fimuls
sbb
jmp
pop
jl
adc
sub
inc
xor
push
andb
or
lods
adc
clc
mov
filds
mov
mov
inc
adc
fildll
sar
mov
outsb
fwait
jbe
or
cli
sbb
mov
cwtl
or
inc
call
test
les
call
inc
or
adc
add
addr16
jne
call
cwtl
pop
push
jg
xlat
mov
dec
or
aaa
pop
jecxz
mov
loope
inc
mov
xchg
mov
push
inc
mov
pop
push
or
xchg
iret
jns
pop
pop
xchg
jge
aad
dec
add
mov
lods
sti
jmp
fcoml
mov
sub
cli
adc
xor
jg
add
iret
cmp
ss
mov
hlt
adc
das
mov
outsl
mov
and
adc
fiadds
mov
mov
imul
pop
stc
xor
mov
jle
adc
ja
pop
adc
icebp
xchg
xor
inc
icebp
jmp
or
sbb
pop
imul
sbb
cld
mov
or
fcmovnb
shll
outsl
rcrb
or
xchg
or
cmpb
fcmove
cmp
add
mov
and
adc
divb
adc
dec
data16
in
cmp
cmp
jmp
push
cltd
lahf
lea
push
lock
das
fdivrl
add
jge
add
xchg
xchg
add
or
cmp
dec
data16
add
sub
div
aaa
adc
scas
mov
sbb
jmp
push
sbb
cmp
je
in
mov
shlb
push
sub
loopne
push
les
ljmp
aaa
dec
repz
or
cwtl
mov
dec
and
adc
push
fcom
pop
jb
xchg
or
iret
pop
inc
mul
pop
add
into
hlt
jge
insl
call
sub
fcoml
sub
loope
mov
sahf
pusha
cmp
rorl
sbb
nop
mov
repnz
jmp
clc
into
mov
xor
testb
aaa
mov
popa
pop
jae
xchg
arpl
aaa
xor
outsl
mov
into
xchg
cltd
xchg
movsb
icebp
outsl
jl
cwtl
or
rolb
pop
loope
iret
inc
daa
sub
jge
loop
outsl
insl
adc
outsl
in
ljmp
ds
rcll
mov
loope
pop
or
dec
mov
sbbl
faddl
mov
pusha
pusha
test
leave
mov
incb
xchg
or
cmpsb
cltd
in
inc
add
popf
pop
sbb
scas
les
loop
test
lret
mov
fs
nop
and
shll
mov
xchg
jne
inc
lea
dec
cmp
or
int3
push
push
pop
pop
sbb
push
shll
sbbl
cmp
lret
fwait
mov
jge
cmc
sbb
xor
sti
lds
shlb
sub
add
roll
js
mov
fptan
loopne
stc
sbb
ds
mov
xorb
leave
loope
mov
jbe
push
xchg
mov
mov
cmpsb
push
cmpl
mov
push
inc
repz
icebp
inc
lock
xchg
xchg
imul
daa
fwait
iret
xchg
jb
movsb
pop
mov
cs
insb
add
loopne
cs
leave
sbb
fdivr
pop
insb
int
xchg
shlb
in
inc
lea
lock
cmpsb
daa
add
imul
mov
insb
xor
mov
add
popa
popf
cltd
test
mov
and
outsb
rcll
in
scas
aam
das
xchg
xchg
add
dec
jge
xchg
mov
icebp
and
leave
mov
dec
sahf
mov
cs
ret
sub
xchg
popa
xchg
lahf
hlt
or
mov
je
test
les
fiaddl
and
pop
rcrl
jg
in
js
push
jo
sub
push
ficomps
jmp
enter
adc
les
loop
xchg
add
lcall
bound
out
jp
ljmp
mov
inc
es
imul
enter
dec
mov
test
fisttpl
movsb
ret
sahf
adc
sub
mov
loope
wrmsr
outsl
inc
ficomps
mov
jmp
repnz
mov
inc
add
sahf
movl
mov
xchg
jo
jle
cmp
mov
dec
cld
sbb
testl
cmp
aad
cmp
fsts
insl
aad
fbstp
sti
dec
adc
jmp
xchg
dec
fildll
fcom
mov
cltd
adc
inc
add
push
in
adcb
and
loop
bound
push
jnp
inc
subb
pop
or
cld
popa
fsubs
ds
add
movsl
dec
pop
xchg
fwait
sbb
push
push
push
repz
and
sub
ficoms
sub
imul
push
adc
inc
in
xor
pop
mov
hlt
in
cmp
ja
test
pcmpgtd
mov
xchg
add
cs
dec
test
ret
nop
jo
outsb
mov
std
loop,pn
adcl
out
jl
mov
adc
ret
adc
fidivs
cmpsb
and
loop
mov
mov
out
dec
fsubrl
sarl
inc
pop
outsl
mov
push
rcrb
shll
jns
pop
ret
mov
pop
jbe
mov
adc
mov
andb
fisubrl
pop
fldl
sbb
test
cmpsb
mov
loopne
pop
ljmp
cmp
das
call
je
bound
inc
scas
add
mov
subb
jg
shll
shrl
idivl
sub
pop
lret
add
gs
mov
jmp
movl
jno
pop
popa
pop
je
scas
loop
push
adc
push
clc
cwtl
dec
mov
dec
dec
fisubrs
dec
test
ds
icebp
cli
fisttpl
xor
mov
lds
ret
mov
mov
mov
xor
mov
repnz
js
dec
xchg
cmpsb
inc
mov
roll
test
clc
push
mov
add
inc
sub
dec
out
cmpsl
or
mov
imul
pop
inc
mull
sub
mov
jo
loope
jmp
push
insl
aas
in
sbb
sbb
cmpsb
mov
call
fisttpl
mov
andb
adc
pop
cmpsb
mov
into
sub
gs
add
and
mov
arpl
adc
insb
mov
mov
push
adc
adc
cmp
test
out
add
inc
sub
rclb
jecxz
jl,pn
mov
push
cmpb
lret
add
ds
lea
sahf
or
stos
mov
sbb
stos
inc
imul
xor
rcll
aam
sarb
aaa
ljmp
mov
mov
fistpl
cmpsl
pop
or
data16
aas
mov
pop
mov
or
fimull
and
scas
adc
dec
out
int
sbb
inc
jg
xchg
iret
sub
sbb
adc
mov
sti
push
sub
push
shrb
loop
gs
adc
cmp
jo
cmpsl
xchg
dec
mov
call
out
shrl
jp
outsl
fldl
fists
xchg
xor
jmp
stos
aas
fldl
inc
mov
cmpsb
mov
cmpsb
or
push
xlat
inc
daa
nop
addb
sub
paddb
add
mov
adc
mov
sub
and
imul
push
or
xor
or
mov
xor
dec
mov
ror
xchg
cli
push
addr16
mov
push
in
jp
lods
std
inc
inc
jbe
aam
out
cmp
mov
mov
or
test
fwait
loope
jb
xchg
add
mov
push
ja
lea
adc
repnz
maxps
popf
ljmp
mov
jmp
push
cmpsb
sbb
adc
mov
mov
xor
mov
lahf
push
jp
push
or
mov
mov
dec
push
mov
and
or
mov
jne
aas
hlt
das
ljmp
mov
push
xor
dec
out
sarl
cltd
mov
lret
cmc
sub
enter
or
mov
icebp
or
sbbb
stos
jg
aam
add
fidivrs
cld
inc
sbb
jl
push
sub
mov
hlt
xor
jbe
push
test
adc
es
fwait
iret
sbb
lcall
cli
vmaxpd
jle
pop
int3
pop
ja
cmp
inc
pop
ljmp
les
lock
jl
int3
dec
inc
inc
or
arpl
add
pop
in
sbb
mov
adc
in
mov
std
cli
push
sub
je
or
xchg
xorb
inc
inc
insl
cs
mov
pop
js
jo
xchg
xor
pusha
les
call
repnz
movl
mov
dec
push
mov
je
fbstp
sbb
mov
push
jp
push
inc
je
jmp
inc
daa
mov
cmpsl
inc
icebp
icebp
push
mov
mov
fcom
out
roll
inc
fmuls
loopne
hlt
mov
pop
xchg
xchg
outsb
pop
or
imul
xlat
push
pop
inc
sbb
mov
loop
mov
repnz
mov
inc
incb
xor
push
fimuls
jge
sbb
les
inc
push
xorb
xor
sbb
or
fbstp
and
push
lret
dec
cmpsl
jbe
mov
pop
fwait
cs
inc
adcl
push
test
jl
stos
lcall
insl
loopne
xorl
or
mov
outsl
ret
nop
or
mov
jge
mov
imul
sbb
adc
addl
jne
xor
shl
cmpsb
cli
mov
insl
rcll
fists
shrb
rolb
outsb
es
into
mov
jle
test
outsl
popa
js
ret
xchg
mov
imul
jb
lods
pop
sub
or
mov
mov
add
pop
subl
jns
mov
push
das
xor
fs
lret
push
sbb
cmp
inc
push
arpl
pop
pop
movsb
fs
or
jge
mov
pop
outsb
mov
add
bound
xchg
mov
fisubrs
int3
decl
mov
lea
sbb
dec
roll
jnp
inc
inc
and
push
lds
or
repz
arpl
pop
add
bound
outsb
cmp
push
clc
xchg
enter
adc
cmp
pop
addr16
cld
int
imul
arpl
gs
mov
mov
add
mov
cmpsl
mov
xor
pushf
inc
jg
imul
scas
sub
fdivl
int3
cmp
cmpsb
xchg
ss
mov
adc
ret
xchg
faddl
sub
pop
sub
dec
nop
imul
adc
fcomi
test
jg
test
inc
mov
sbb
sub
lods
and
popl
ficomps
orb
int3
sbb
ja
fwait
jecxz
pop
pushf
add
loopne
lret
mov
mov
in
sub
inc
adc
ret
mov
lret
call
sub
test
cmp
icebp
xlat
int3
dec
push
lds
or
sbb
out
push
das
fidivrl
mov
or
cmp
dec
add
lret
out
mov
decl
imul
mov
and
and
adcb
push
call
addr16
cmpsl
adc
lret
pop
insb
sub
pop
push
cmp
mov
xchg
adc
or
jbe
push
icebp
pop
mov
movb
movsb
xchg
and
cli
and
subb
adc
in
fcoms
dec
cmc
insl
jg
in
pop
inc
push
repnz
fstpt
mov
mov
add
inc
movsb
loopne
cmp
sbb
jne
daa
or
mov
scas
push
adc
je
cmc
mov
fistpl
push
dec
lds
shrb
mov
lret
pusha
add
sub
and
inc
adc
mov
jb
aaa
sub
out
and
lods
outsb
pop
adc
lahf
adc
cwtl
mov
lcall
fildl
mov
in
and
into
sub
mov
pop
icebp
add
test
adc
xchg
mov
mov
je
mov
push
out
push
je
push
cmc
sbb
lock
and
repz
into
je
push
mov
jae
xor
mov
icebp
add
dec
cmp
inc
mov
lret
fstpt
push
movsb
psrlw
lock
ret
xor
dec
dec
cli
cmp
pushf
jo
sbb
test
fs
xlat
xor
xor
ja
jns
xchg
cmc
push
aad
fucomi
xchg
and
mov
in
sbb
in
addr16
std
mov
loope
mov
divb
enter
ja
sti
mov
sub
jmp
rorl
and
and
rolb
mov
mov
popf
dec
stc
mov
aad
mov
mov
and
push
jns
push
icebp
mov
xchg
jg
mov
repnz
aad
mov
dec
rcr
les
ficoms
into
sti
xor
les
add
mov
sti
inc
sbbl
outsl
or
sbb
mov
push
cwtl
pop
cmpsl
mov
jl
sahf
shr
mov
sub
xor
or
sub
cmp
mov
imull
pop
mov
inc
ffreep
sbbb
fistpll
outsb
das
pusha
jle
xor
push
sbb
push
dec
push
das
outsb
sub
popf
sbb
aad
scas
test
pop
fisubrs
jg
enter
dec
cwtl
add
icebp
adc
jl
inc
fwait
test
sbb
lret
sbb
mov
test
sbb
fdivp
inc
sbb
imul
in
jbe
aaa
push
std
cmp
push
xorb
add
cld
negb
out
add
ds
add
jp
loopne
orl
outsl
fcoms
add
dec
push
dec
les
fwait
pop
mov
mov
inc
xor
cmp
insl
pusha
or
test
in
fadds
push
jg
aaa
out
cs
outsl
insb
pop
xor
inc
xor
dec
add
and
mov
push
pop
das
add
or
loopne
or
cmp
in
rorl
ss
mov
lds
repz
int3
inc
inc
pop
aad
enter
or
xor
dec
shll
inc
cmpsl
insl
jnp
in
mov
jle
arpl
jmp
and
push
pop
pop
jl
popf
mov
js
mov
xchg
or
mov
fdivr
and
stos
adc
adc
test
add
fwait
mov
xlat
jne
and
int
ja,pn
jecxz
inc
loop
sbbb
pop
mov
outsl
movsb
and
mov
fldt
mov
mov
mov
sub
xor
cli
inc
mov
shrb
cmpsb
fidivrl
push
leave
add
out
clc
mov
adc
icebp
dec
pop
mov
mov
push
popf
sub
sbb
xlat
jg
in
into
loopne
mov
add
add
iret
push
scas
mov
cli
mov
sub
mov
or
push
bound
je
inc
lock
lock
iret
cli
xor
or
pop
mov
scas
lock
popa
subl
ja
mov
inc
and
out
adc
or
call
sub
jne
mov
lcall
andl
andl
mov
popa
push
stos
xor
adc
mov
inc
and
hlt
xchg
add
jmp
icebp
movsl
push
lods
mov
mov
stos
sbb
pop
jns
loope
sbb
outsl
mov
dec
inc
jp
cmpsb
rol
or
ss
pop
push
add
int3
imul
xchg
imul
pop
jmp
popf
sahf
push
pop
dec
xchg
pop
fbld
fimull
pop
xchg
lea
fmull
pop
xor
mov
or
mov
dec
test
adc
and
inc
pop
xchg
sbb
dec
mov
or
imul
cmp
jnp
pop
jp
outsl
ljmp
lock
lods
adc
inc
pop
stc
dec
in
cli
cwtl
mov
imul
dec
popf
xchg
imull
cltd
in
ret
data16
mov
xchg
cmc
add
push
jecxz
lods
adc
les
fwait
movsl
mov
fucomi
divb
pop
das
bound
push
stos
mov
pushf
cmp
mov
stos
in
dec
sbbb
imul
xchg
ret
jmp
in
inc
adc
xchg
in
clc
ror
push
mov
jl
mov
pusha
sub
stos
adc
arpl
push
scas
or
mov
dec
mov
lock
mov
pop
xor
std
aaa
jbe
sti
je
mov
jle
nop
xchg
dec
shrl
call
push
cmp
jmp
fsubrp
jbe
mov
and
xchg
jno
sbb
scas
mov
ljmp
jbe
scas
test
outsb
jge
xchg
fdivrp
outsl
fs
or
fisubrs
pop
inc
inc
mov
dec
sub
jo
pop
jne
pop
cmpsl
or
sub
pop
aaa
xor
pop
icebp
add
lock
mov
insl
dec
inc
bound
lds
lds
adc
or
test
shlb
lea
scas
jbe
jle
fldt
and
or
xor
je
div
fadds
stos
lods
mov
pushf
xchg
cmpsl
mov
mov
loopne
xchg
adcb
aas
dec
in
mov
shr
jo
arpl
movl
out
sbb
negl
not
xlat
xor
arpl
aas
cld
xchg
xchg
clc
loop
loopne
aam
loope
cmp
lods
imul
or
fcomi
lods
rolb
inc
sbb
sti
push
mov
andb
inc
push
test
bound
lret
fs
ja
jbe
jmp
inc
dec
sub
scas
push
sbb
push
dec
pop
push
scas
scas
clc
xchg
mov
push
mov
adc
fisubl
fldt
sub
xchg
add
mov
aad
cwtl
cmp
pop
rcll
test
andl
mov
push
jp,pn
jnp
add
push
add
mov
sub
adc
bts
js
mov
mov
test
in
inc
mov
es
aaa
dec
ror
jb
inc
test
ret
mov
fs
jo
popa
movl
ljmp
cmp
call
je
loope
sbb
aam
jno
stos
movsl
xor
idivl
rorl
mov
subl
jl
push
rcrb
je
ja
push
fsubrs
mov
stos
ds
test
and
es
mov
outsl
push
pop
cld
fstpt
mov
cld
sbb
imul
pop
mov
lretw
xorb
push
xor
cli
pop
dec
add
dec
lret
clc
or
orb
decl
test
mov
add
std
push
lret
movsl
ret
cli
lods
mov
push
sub
ss
cli
cmpsl
mov
jnp
stc
xchg
rol
jnp
cld
movsl
sbb
jmp
add
in
xchg
jns
adc
mov
mov
ret
inc
jg
out
mov
out
lds
push
mov
aaa
adc
das
std
sarl
andb
xchg
ljmp
mov
lea
test
fnstenv
icebp
lock
mov
clc
sub
adc
test
pop
mov
inc
test
mov
jo
xchg
pusha
inc
mov
push
xchg
and
cli
xor
xchg
jbe
jmp
mov
cmp
movsb
add
jg
cmc
ffreep
sub
pop
call
jle
imul
mov
add
daa
push
popa
xchg
push
cmp
sbb
inc
fstp
outsb
mov
ds
xor
inc
aaa
push
lds
mov
inc
inc
adc
jb
movsb
xchg
aam
xchg
cmpsb
and
ficompl
cmp
popa
jno
or
sbb
pop
mul
push
mov
scas
ret
jmp
jbe
bound
xor
cwtl
cmc
jns
movsl
stos
das
dec
xchg
hlt
in
mov
xchg
lea
cld
mov
mov
push
jl
add
sti
xor
pop
aad
movsb
mov
mov
cmp
adc
or
aaa
hlt
es
loopne
adc
sarb
movsl
or
ret
cmp
sbb
add
jne
dec
sub
add
es
enter
jp
pop
pop
repnz
mov
mov
and
clc
fsubl
pop
dec
mov
pop
mov
cli
pop
push
sbb
mov
fcmovbe
push
aaa
add
xchg
test
aad
mov
fcomps
jle
nop
mov
or
insl
mov
lahf
jnp
lock
test
mov
add
sti
mov
pop
jle
push
fdivr
cmc
or
mov
mov
call
mov
push
jb
dec
iret
ret
sarb
sbb
loopne
stos
mov
pop
dec
xor
outsb
scas
dec
or
xchg
add
in
sarl
or
lock
inc
mov
sbb
mov
sub
addr16
lea
cmp
aaa
popa
in
sub
adc
stos
dec
sub
xchg
or
jns
repnz
int
xchg
ja
insl
sbb
incl
pusha
pop
inc
adc
in
sub
mov
mov
sub
push
push
mov
jmp
add
xlat
in
sub
lds
loop
aam
rcrl
in
dec
sub
cld
mov
mov
mov
enter
xlat
mov
imul
pop
into
inc
stc
adc
and
inc
inc
mov
sbb
inc
mov
jge
inc
test
rcll
pusha
daa
xchg
or
mov
js
cli
loop
subb
popf
jp
push
fcom
inc
int
lea
add
push
outsb
sub
ror
jae
xchg
mov
push
mov
xor
dec
inc
or
push
lahf
lcall
in
inc
negb
enter
test
into
mov
ds
push
pusha
mov
mov
pushf
mov
or
rorl
popf
jg
out
rolb
cmc
nopl
add
js
pop
mov
arpl
mov
sbb
lret
lock
adc
add
loopne
ss
out
push
xchg
outsb
mov
rorb
push
mov
push
mov
imulb
adc
cmpl
fmull
sahf
imul
xor
sarb
mov
sbb
aaa
push
dec
push
xchg
mov
sub
test
test
push
jbe
cmp
and
movsl
mov
mov
pop
jl
and
pop
ja
neg
into
addr16
fsubl
pop
outsl
mov
cmc
cltd
in
inc
adc
mov
push
mov
mov
out
mov
sarl
xor
mov
sbb
jmp
ror
pop
add
fisttpll
pop
inc
aad
pop
mov
aas
outsl
stos
repz
sub
test
inc
icebp
dec
jge
outsl
cmpsb
cmpxchg
pop
xor
ja
ja
inc
loopne
xor
popf
repnz
cmp
pop
outsl
mov
cli
lret
inc
xlat
iret
aad
outsl
std
gs
pop
mov
cmp
lret
sbb
xchg
rolb
filds
push
fisubrs
mov
andb
add
aaa
in
data16
jecxz
add
push
decl
jge
fdivs
cmp
xchg
and
test
cmpsb
dec
adc
lods
mov
mov
int3
push
or
fimull
jb
incb
xor
xor
roll
sbb
adc
insl
je
adc
inc
dec
xchg
iret
insl
pop
dec
push
dec
fists
xchg
ret
pop
cs
lret
sti
cmpsl
or
push
xchg
add
inc
lods
xchg
mov
add
sbb
dec
xchg
cmc
aaa
pop
insl
mov
xor
add
xlat
jp
cmp
cmpsb
fisubrl
inc
lahf
pop
mov
pop
daa
jle
inc
adc
push
mov
std
pushl
repz
rolb
cmp
fbstp
cld
cmpsb
pop
push
sub
fwait
adc
rol
push
ret
sub
adcl
leave
shll
inc
pop
xchg
movsb
mov
hlt
subl
shl
mov
xchg
popa
pop
push
data16
jge
and
mov
mov
xor
push
or
fwait
call
mov
aaa
jb
add
test
lcall
ja
xor
cs
nop
or
xchg
fiaddl
mov
enter
cmc
outsl
ret
adc
rorb
pop
cli
data16
lea
sbb
ficomps
lock
cmp
sbb
jbe
xchg
pop
mov
loope
fcomps
paddb
mov
jge
icebp
push
jne
and
mov
or
test
xchg
or
cld
mov
lock
je
xchg
inc
or
cmp
mov
dec
cs
shr
jp
out
insl
cltd
jbe,pn
push
pop
gs
fwait
inc
add
data16
sub
popf
jae
data16
inc
dec
adc
ja
or
dec
cs
hlt
mov
jb
insb
mov
outsl
inc
movsl
shlb
dec
mov
dec
xlat
inc
lods
or
dec
aaa
cs
adc
ds
and
rcrl
orb
pop
loopne
js
mov
pop
dec
aam
inc
add
sub
subl
mov
mov
push
mov
adc
jns
stos
xchg
cmp
push
fiaddl
sub
mov
lods
xchg
sbb
dec
mov
xor
push
mov
cli
sahf
cmp
and
fidivs
fstpt
mov
and
dec
xchg
or
jg
sahf
fs
rorl
in
mov
or
cmp
adc
mov
xchg
jle
sub
ss
std
decl
mov
sbb
insb
mov
sbb
mov
das
inc
insb
cmp
popa
nop
fsubrl
iret
leave
test
hlt
mov
sti
xchg
mov
arpl
xchg
scas
cmovl
jb
nop
shl
fldt
lret
mov
ds
mov
pop
push
add
mov
scas
jb
ret
push
inc
and
mov
pop
dec
jbe
sbb
xorb
scas
dec
pop
fdivs
bound
hlt
icebp
outsb
loope
rcr
or
aas
fs
push
rcll
mov
jbe
in
push
dec
add
jl
insb
pusha
push
sub
in
and
cmp
cli
outsl
je
mov
xchg
xchg
mov
data16
int
fsts
push
cmp
and
ret
mov
fidivrl
add
cltd
mov
lods
jge
inc
adc
mov
in
or
arpl
daa
and
outsb
jne
jge
dec
out
test
pop
aaa
movsb
push
lods
leave
sub
mov
push
popf
enter
mov
or
mov
adc
dec
fistps
fildl
loopne
and
inc
inc
arpl
incl
lods
push
and
inc
stc
aas
xor
shll
iret
inc
pop
sti
pop
jbe
jae
je
int
mov
shl
add
mov
push
js
jge
leave
xor
sbb
jae
and
cld
mov
push
stos
shrb
mov
adc
cli
mov
mov
xchg
xor
dec
int
mov
jg
pop
fbld
xchg
sub
loop
mov
testb
out
push
fidivs
data16
stc
and
mov
clc
outsl
mov
mov
cltd
adc
iret
xor
xchg
repz
push
pusha
push
je
fidivl
jmp
xchg
mov
outsb
pop
loop
push
adc
insb
or
jg
pop
mov
cmp
mov
insb
pop
push
int3
sti
xchg
roll
mov
scas
cmp
cmp
and
push
mov
adc
enter
test
mov
in
pop
vsqrtss
test
mov
lret
pop
push
or
mull
frstor
jno
hlt
arpl
pop
push
mov
out
outsl
add
cltd
sub
popf
movsb
jns
icebp
mov
xchg
jnp
adc
adc
push
jbe
es
rcll
mov
scas
ljmp
add
fisttpl
xchg
xchg
popa
jo
outsb
push
jle
cmp
push
cmc
sub
push
jo
mov
adc
aad
aas
pop
outsl
jo
mov
outsl
test
js
jne
sbb
lahf
outsb
xchg
dec
xlat
push
arpl
inc
inc
js
insb
test
cmp
dec
fcmove
dec
lahf
push
repnz
popl
in
bound
in
jle
or
int
icebp
aas
lea
cmpl
and
sbb
cmp
out
and
pop
mov
jecxz
loope
scas
or
push
cltd
add
and
in
imul
insl
int
fcmovne
je
pop
push
inc
inc
add
dec
notb
jmp
mov
mov
ljmp
mov
out
imul
ret
push
jbe
cmpsl
pop
sub
shll
lahf
push
cli
unpckhps
jno
inc
push
jl
mov
push
jae
loop
xchg
fadds
test
mov
mov
mov
pop
xchg
cli
jno
xor
adc
inc
scas
imul
pop
pop
cmp
dec
add
movsb
push
mov
call
adc
ja
dec
mov
sbb
pop
pop
sub
xchg
lds
enter
lock
fs
xchg
sbb
sub
rorl
dec
push
lret
pop
mov
outsl
or
mov
sbb
dec
fbstp
inc
loopne
xchg
loopne
jo
xchg
pushf
sub
stc
jo
sub
movsb
push
loop
fwait
mov
or
ret
sti
jb
pushl
call
in
test
lock
sub
pop
pop
mov
push
xlat
inc
pop
sarl
imul
insl
icebp
fnstsw
repnz
popf
lods
or
and
sub
sbb
in
adc
add
fildl
pop
lods
lock
test
push
mov
es
inc
aaa
stos
loope
dec
ja
stos
adc
test
pop
xchg
or
fildll
pop
pop
les
inc
mov
movsl
lea
aad
and
sbb
jno
ficompl
jge
push
movb
fs
aam
fcom
pop
pushf
xor
aam
imul
loopne
pop
mov
leave
mov
push
pop
cmp
sub
push
sar
xlat
bswap
push
mov
pop
shrl
mov
fldt
outsb
xor
enter
out
icebp
rol
cmpsl
pop
mov
mov
mov
cli
fucomip
imul
xchg
mov
push
and
mov
movsb
or
or
pusha
rol
fistl
xchg
cltd
ret
sbb
push
push
pop
lock
xor
sarb
push
rcr
sarb
add
stos
lea
rorl
incb
mov
cmpsl
pop
outsl
push
cmc
cmpsb
es
repz
fildll
fisubl
sbb
xor
jp
mov
repz
sbb
or
xor
pop
dec
inc
sti
dec
call
adc
pop
cwtl
add
stos
pop
jo
leave
jbe
insl
in
loop
testl
dec
loopne
mov
pop
fcoms
add
imull
jecxz
inc
mov
push
cmpsb
dec
ja
mov
or
dec
lahf
mov
mov
push
dec
mov
push
shl
je
jg
mov
aad
aaa
loop
adc
cwtl
std
add
adc
mov
add
and
aad
lods
fisttpl
lcall
lods
fildll
cmpsl
push
mov
popa
ja
rcrl
sbb
mov
pusha
inc
sbb
clc
inc
outsl
int3
loop
movsl
pop
mov
mov
ret
push
mov
add
fdivs
and
es
mov
ret
mov
and
bound
div
ficoml
hlt
jg
add
push
fildll
jo
mov
jg
sub
out
inc
adc
xchg
mov
xor
xchg
push
shrl
cmp
fistpll
lods
mov
xchg
sub
or
repnz
or
daa
mov
daa
fcoms
out
jmp
loopne
loope
jge
pop
adc
adc
cmp
pop
sti
xchg
dec
les
dec
outsb
dec
mov
ss
jnp
imul
mov
in
sub
movsl
mov
push
adc
call
fnsave
adc
fadds
and
lock
je
inc
and
mov
movsl
inc
lock
add
sbb
mov
adc
andb
and
adc
xchg
cmc
sub
pop
in
int3
mov
aaa
dec
xchg
mov
mov
adc
aas
mov
dec
btr
push
leave
and
cli
mov
shl
stos
divl
or
adc
xor
cwtl
add
mov
jbe
imul
data16
adc
push
incb
push
push
outsb
loop
ljmp
mov
aaa
or
lods
fs
rcrl
sub
in
push
in
and
and
test
fstl
jle
movsl
mov
lahf
js
jp
dec
andb
imul
adc
jge
inc
pop
shll
inc
adc
mov
mov
and
loop
dec
jl
ja
test
iret
cmp
out
cmp
into
jo
inc
in
stos
jo
jb
das
mov
rolb
sub
outsb
cmp
unpcklps
sbb
xchg
out
das
push
ficoml
sbb
xchg
or
adc
sbb
and
add
adc
or
add
sub
pop
add
mov
sub
ljmp
jno
cwtl
outsl
adc
and
js
cmp
shlb
lods
and
mov
xchg
jno
jbe
sbbl
testb
popf
pop
jg
push
mov
inc
cmpsl
out
lock
inc
sub
ja
or
movsb
dec
call
dec
xchg
mov
das
mov
ss
clc
sub
pusha
shl
mov
mov
call
pop
das
test
mov
addr16
push
sub
loopne
sub
xchg
mov
mov
ret
push
pop
ljmp
lahf
scas
pusha
mov
outsb
jg
cmp
fwait
stos
mov
mov
adc
mov
test
mov
add
jge
push
test
lret
mov
mov
enter
clc
shll
dec
xor
xchg
iret
shll
lret
pop
sub
orl
mov
jl
scas
inc
and
pop
xor
dec
push
push
out
fistpll
lea
bound
push
enter
out
mov
cmp
add
mov
xor
xchg
lods
xchg
jmp
xchg
jae
loopne
push
xchg
lock
inc
pop
sub
decl
add
sub
xor
push
inc
rcrl
push
ret
mov
xor
inc
fadd
push
stc
mov
ror
jno
pop
das
lea
push
jge
pop
push
movl
sub
cli
shrb
pop
mov
mov
popa
stos
cmp
je
xchg
xor
sub
mov
add
icebp
jnp
jbe
add
adc
divb
dec
push
jbe
out
test
add
out
jb
dec
lea
add
sbb
popa
adc
xor
sbb
sub
adc
lods
andb
fwait
or
ljmp
push
sbb
pop
adc
inc
jge
subl
xrelease
pop
popa
mov
push
imul
std
xorl
cmp
enter
jmp
mov
or
pop
jae
sbb
adc
sub
test
shlb
dec
std
pusha
stos
shlb
addr16
out
xor
sar
mov
pop
add
sbb
sbb
mov
jno
movb
pop
sbb
hlt
mov
mov
sbb
mov
mov
inc
pop
sub
xor
push
adc
test
je
mov
fcomp
neg
xor
cmp
insl
push
mov
dec
sbb
lret
bound
push
pop
lock
pop
lock
xor
mov
adc
and
scas
inc
mov
xor
adc
loopne
xchg
push
inc
fscale
mov
jno
cmp
and
js
pop
movsl
dec
mov
and
loop
jo
push
popf
sub
or
in
test
jge
or
stos
inc
pop
dec
jecxz
sahf
and
mov
aaa
xor
and
mov
shrl
dec
jns
jle
sbb
inc
xor
pop
loop
loop
pop
decb
mov
or
push
mov
loopne
jmp
lds
sti
sbb
or
aad
add
push
divb
inc
ffree
cmpsb
xchg
cmp
push
jl
js
inc
in
dec
sub
mov
mov
ljmp
call
or
lea
mov
jae
pop
or
les
and
mov
in
aas
out
jb
test
pop
cmp
in
pop
lds
mov
cmp
cmp
movsl
daa
mov
hlt
pop
adcb
or
fldl
add
dec
scas
mov
repnz
mov
cmp
mov
in
or
inc
popa
xchg
sub
gs
aad
into
sbb
in
lret
sbb
inc
mov
add
fidivs
fsubp
shlb
sub
ss
add
in
add
iret
sarl
imul
dec
adc
push
out
mov
sub
xor
lods
add
aad
add
jbe
inc
mov
fldt
jle
testb
and
out
fidivrs
inc
outsb
mov
cmp
add
bound
mov
loope
pop
mov
mov
aaa
sub
out
addr16
cmp
sub
jo
dec
ret
clc
rolb
xlat
scas
outsb
push
push
popa
ret
fdivl
pusha
adc
fsubrl
in
fisubrl
pusha
lock
and
fcomi
aaa
aas
test
test
enter
insl
fsubrp
cli
jmp
nop
mov
jnp
loope
push
add
jge
ret
mov
sbb
mov
jae
pop
lahf
pop
daa
dec
adc
mov
outsb
push
aas
sbb
push
mov
adc
loopne
cmc
outsb
sbb
xor
inc
or
insb
and
repz
fbstp
subb
mov
in
xor
push
dec
sub
xchg
push
push
dec
ds
sub
lods
add
cmp
rcrl
adc
mov
arpl
jl
jbe
push
fldl
add
dec
mov
sbb
mov
push
dec
push
fdivr
jno
sbb
lds
sbb
rolb
sub
sub
jb
test
test
adcb
lret
adc
in
imul
andb
daa
xor
adcl
mov
mov
enter
arpl
int3
sbb
or
in
sub
mov
pop
or
jp
movsl
or
inc
cltd
clc
cs
and
inc
add
push
mov
pop
xor
jmp
stos
or
jle
dec
adc
mov
push
mov
jl
dec
cmp
push
cmp
nop
aam
mov
test
adc
mov
lods
leave
outsb
push
into
repz
mov
mov
inc
cs
xchg
mov
add
xchg
dec
aas
sub
mov
inc
repnz
outsb
insl
jmp
jmp
sbbb
xchg
and
shl
out
mov
inc
test
in
scas
enter
and
pop
daa
xchg
push
mov
outsb
aaa
fmuls
movsb
adc
xchg
mov
popl
lods
pop
fldt
lret
inc
mov
jns
rorb
out
or
pand
adc
or
cltd
out
jnp
lock
pop
dec
imul
sarl
test
fwait
pop
mov
outsb
cmp
hlt
pop
pop
push
mov
mov
outsl
sbb
fldcw
sub
or
ja
add
inc
aaa
lock
sbb
adc
loopne
pop
mov
arpl
cmpsb
push
xchg
test
push
movsl
push
mov
fwait
pop
cmp
and
in
orb
push
inc
test
xchg
inc
mov
jg
or
sbb
cmpsl
pop
outsl
xchg
jne
jmp
adc
out
adc
sub
fs
mov
ljmp
mov
adc
std
mov
mov
cmc
ret
shrb
cli
cmp
add
mov
push
rolb
push
pop
clc
test
inc
jle
test
das
jl
add
inc
mov
sub
sahf
pusha
test
add
xor
sbb
call
icebp
jnp
subb
cmpsb
mov
push
arpl
inc
add
cld
mov
cmp
or
add
pop
adc
inc
mov
cmc
in
adc
xor
push
sub
mov
rcrb
cmp
xor
les
mov
or
pop
pop
jnp
and
pop
mov
mov
lds
rcrl
push
cltd
mov
call
add
or
dec
jnp
pop
into
in
aad
arpl
stos
mov
add
es
mov
fwait
stc
cld
mov
xchg
sbb
and
arpl
pop
mov
adcb
clc
out
call
jns
jle
sub
jno
mov
push
cmc
dec
frstor
xchg
lcall
lcall
movsl
ljmp
lcall
sub
adc
mov
inc
cmpb
adc
push
or
jg
fisttps
jecxz
push
mov
icebp
scas
mov
mov
arpl
sti
jmp
xchg
fdivp
add
ja
or
rcll
sub
mov
mov
xchg
mov
aam
dec
or
push
push
mov
movsb
fcoml
fildll
call
sti
xchg
or
dec
pop
inc
pop
xchg
sbb
or
push
rolb
imul
lods
fwait
mov
pop
rcr
inc
sbb
inc
pop
jo
pop
adc
add
add
adc
inc
push
test
hlt
push
adc
mov
adc
mov
loop
stos
cmc
enter
jg
dec
sbb
cwtl
mov
jmp
nop
les
inc
mov
test
xor
icebp
or
clc
mov
mov
out
xchg
mov
and
clc
push
je
test
in
or
js
mulb
nop
js
xchg
gs
std
sbb
jo
mov
imulb
andl
andb
and
mov
inc
iret
in
leave
sub
clc
ljmp
bound
insb
inc
mov
daa
ffree
test
shlb
mov
shll
scas
rcll
loop
out
pop
mov
xchg
inc
or
jno
or
sbb
or
scas
stc
out
mov
cmp
xchg
jb
popl
js
lods
and
bound
jmp
mov
push
push
lea
test
or
cwtl
call
gs
inc
cmp
sbb
and
std
xor
cs
pop
incl
pop
outsl
xchg
dec
sti
mov
call
int
call
pop
jne
push
lcall
pusha
in
stos
icebp
andb
lcall
aaa
xor
outsb
lret
dec
xchg
pop
std
ffreep
push
mov
in
mov
test
int3
sbb
push
xchg
and
lea
add
jns
das
aas
and
pop
fsubrs
sbb
pop
icebp
in
sbb
ja
stos
push
sarb
insb
lods
xchg
subl
push
fwait
lods
pop
and
mov
scas
lds
inc
jb
jno
mov
insb
sbb
cmc
scas
mov
int3
int3
data16
iret
aad
lock
pop
mov
loope
jbe
gs
cmp
into
loop
pop
popf
push
rorb
dec
xchg
xor
lea
arpl
in
outsl
sti
cmpsb
cld
cmp
xchg
mov
jecxz
imul
pop
cmp
mov
inc
aaa
mov
sub
push
or
jbe
sti
push
andl
ss
rolb
les
mov
pop
mov
dec
out
inc
push
mov
sbb
mov
out
xchg
mov
lock
lods
fsubs
scas
add
outsb
cmpl
int3
pop
sub
or
jnp
pop
push
xchg
cwtl
xlat
repz
movl
je
lcall
push
shr
push
dec
pop
inc
fisubrs
icebp
aad
sbb
aas
sbb
popf
mov
xchg
mov
sbb
shrb
mov
sub
pop
xor
push
dec
lcall
cltd
add
addl
lods
movl
icebp
push
incb
pop
loop
cmp
bound
hlt
inc
push
scas
imull
bound
xchg
les
add
sub
aam
jecxz
mov
mov
inc
imul
stos
daa
xlat
inc
or
xor
dec
inc
sti
aaa
cld
cmp
into
inc
rorl
xor
push
loope
mov
fs
push
dec
xor
sbb
daa
mov
outsb
ret
sti
cltd
aad
shr
xor
testl
or
outsl
dec
adc
sbb
pop
aad
ljmp
fadd
xor
inc
xchg
cmc
pop
mov
sti
ficoms
js
mov
mov
mov
adc
test
pop
fwait
pop
cmc
cmp
push
dec
sbb
jmp
add
scas
dec
std
push
mov
xor
pop
push
or
mov
insl
mov
cmc
lret
mov
shr
mov
mov
mov
ficoml
ljmp
ljmp
lds
and
lock
es
ljmp
inc
cmpsl
jecxz
leave
cmp
popa
jecxz
mov
mov
and
mov
pusha
pop
lods
hlt
dec
cmp
pushl
movsb
test
push
sti
sub
bound
and
shl
xor
dec
sub
imul
or
out
fbld
mov
mov
loop
incl
add
mov
addb
jae
or
mov
jno
leave
fdivl
xor
lahf
sbb
scas
test
jnp
cwtl
out
loop
xchg
cmc
ror
jae
movsl
aaa
pop
sub
test
mov
in
jg
pop
xlat
or
inc
fs
rcrl
dec
push
sti
repnz
shlb
push
jg
pop
cmp
jnp
cld
jno
sbb
inc
jecxz
sbb
cmp
movsl
das
and
iret
lahf
call
mov
shr
cmp
inc
js
test
std
fwait
inc
sarb
push
mov
adcb
leave
push
mov
push
inc
into
and
inc
sbb
aaa
xor
aaa
sub
int3
dec
ljmp
ficoms
push
enter
outsl
xlat
or
cmpsb
add
mov
add
les
or
dec
cmp
pop
cmp
mov
rolb
lods
mov
pusha
add
push
test
out
sbb
pop
arpl
push
in
loop
pop
and
int
sub
decb
mov
mov
cmp
aam
push
aam
add
push
dec
jnp
jbe
repz
shl
out
mov
sub
test
pop
xlat
xchg
lds
jge
sbb
adc
fistpll
shl
scas
push
ffreep
mulps
test
lds
dec
and
push
push
fcom
mov
and
rol
dec
loope
mov
mov
jl
pop
test
and
movsb
inc
mov
in
inc
inc
iret
cs
scas
ret
nop
jle
jbe
enter
cs
inc
ljmpw
das
lcall
inc
enter
mov
sbb
call
stos
aad
call
imul
mov
pop
hlt
mov
rclb
ret
push
sub
inc
filds
xor
pushf
test
into
les
in
inc
popa
stos
and
cmp
in
cwtl
mov
push
push
jno
daa
dec
notl
jl
and
mov
lds
enter
pushf
cmp
mov
xchg
adc
hlt
push
adc
adc
popf
cmc
adc
jno
pop
push
inc
aad
bound
mov
jo
repz
mov
xchg
push
mov
nop
jae
rol
cld
in
jo
in
push
push
pop
test
sbb
sub
aas
mov
push
mov
xlat
loopne
or
mov
loop
mov
xlat
mov
outsb
roll
in
mov
mov
call
xchg
pushf
cmp
ljmp
sbb
sub
xchg
sbb
nop
pop
cmpsl
movsb
sub
mov
mov
xor
mov
cmp
jg
jmp
mov
adc
mov
add
arpl
or
dec
push
or
repnz
pop
xchg
mov
out
mov
jge
mov
dec
shr
xchg
arpl
ret
clc
push
sub
mov
popf
xchg
lock
push
leave
add
rcl
cs
xchg
add
aam
mov
pop
pop
mov
adc
jne
or
lret
outsl
cmc
mov
sub
xor
jge
fs
addr16
jno
inc
inc
int3
lret
pusha
loopne
aas
push
push
push
sbb
mov
push
pop
fs
pop
popf
arpl
fwait
jns
inc
xchg
andb
mov
jne
jns
pop
inc
ljmp
push
push
mov
dec
mov
mov
das
sub
test
push
test
sbb
sti
cmpsl
mov
hlt
fs
lret
mov
push
adc
add
xor
sti
or
add
jle
outsl
scas
mov
test
and
and
ljmp
pushl
push
jbe
lahf
shll
sub
data16
or
cli
ljmp
mov
add
lahf
inc
lods
ss
sub
and
mov
adc
pop
xor
sbb
pop
cmpsl
or
lea
jo
call
adc
das
jno
or
icebp
test
sahf
xchg
fldt
mov
pop
adc
mov
push
dec
mov
cmp
and
sub
or
or
arpl
in
add
mov
addr16
fsubrp
mov
fildll
adc
mov
fnsave
ss
lahf
ror
mov
lods
addb
fisubrl
and
lahf
mov
cmp
insl
stos
and
cli
lods
mov
enter
outsb
xchg
cmp
push
js
adc
add
lcall
leave
movsb
ret
xchg
jno
stc
adc
jle
adc
sub
aaa
mov
cmc
pop
cltd
inc
sbb
loop
shll
push
fwait
imul
flds
scas
sbb
arpl
mov
xchg
jl
jne
pusha
xchg
popa
push
mov
or
test
rolb
push
js
nop
loop
sub
mov
loope
imul
mov
and
enter
mov
pop
xor
jecxz
out
mov
inc
cmp
mov
dec
mov
addr16
jns
into
pop
push
inc
mov
dec
xor
rorl
jg
fwait
mov
ljmp
cwtl
mov
rcll
or
scas
icebp
jnp
xchg
or
or
push
das
jae
add
insb
pop
scas
ret
shlb
mov
sub
test
sbb
or
push
pop
xchg
pop
mov
outsb
or
push
push
in
lea
push
cmpsl
inc
aam
icebp
das
or
fcoms
das
test
push
and
mov
or
aam
lods
test
rcrb
insb
sub
cmc
stos
mov
bound
dec
or
pop
in
mov
dec
inc
aaa
jge
popa
sti
add
inc
dec
pop
push
pop
repnz
push
bound
and
mov
lret
jecxz
lret
cmp
add
sub
or
pop
dec
movb
mov
ds
mov
imul
out
fidivrs
sub
push
mov
mov
test
cmp
mov
push
push
jl
xchg
outsb
push
in
sub
xchg
xor
dec
push
push
mov
sbb
pop
pop
sbb
xchg
aas
lret
push
mov
jnp
movsl
or
xor
in
cli
add
inc
or
insl
jo
enter
jp
lods
mov
test
jb
sarb
jbe
mov
adc
mov
jecxz
ss
xor
lret
mov
push
insl
jp
dec
dec
cmpsl
add
sbb
sbb
xor
iret
or
and
push
and
xor
sbb
lret
stos
call
int
repz
adc
push
mov
sbb
jp
push
push
icebp
xchg
aaa
mov
sub
xor
pop
js
cmp
mov
mov
jnp
pop
adc
andb
inc
ja
das
ror
xlat
fisttpll
inc
dec
fisubs
cmpsl
pop
cs
sub
lds
jbe
pop
mov
pop
or
sub
and
jns
sbb
aaa
js
inc
mov
stos
test
add
cs
push
mov
cld
xchg
lods
push
mov
imul
xor
jb
arpl
outsb
mov
mov
add
or
testb
ja
cli
aaa
adc
pushf
nop
inc
sub
mov
popf
mov
sub
pcmpgtd
gs
dec
sub
fbstp
dec
and
mov
mov
rorb
imul
shlb
dec
arpl
mov
cmp
call
lcall
cli
out
in
mov
jo
mov
test
inc
mov
dec
jp
ja
test
call
mov
and
and
jl
and
in
xchg
aas
xor
mov
aaa
push
fdivr
subb
insl
push
adc
lods
cwtl
or
stc
pop
sbb
out
es
push
daa
xor
jge
pop
cmpsb
pushl
inc
ret
in
js
cs
in
inc
mov
js
dec
sti
and
loope
xor
arpl
ret
xchg
shll
jns
mov
ret
out
jp
cmp
nop
imul
pop
in
inc
in
incb
sub
pusha
fstpt
cmp
pop
mov
jmp
cli
sub
mov
test
cmp
insl
loopne
sub
outsl
inc
or
pop
addr16
cli
mov
aas
xor
aas
mov
mov
loope
addl
and
mov
fdivr
je
outsb
mov
push
mov
das
or
cmp
test
inc
scas
gs
dec
pop
test
ss
rorb
xchg
movzwl
lcall
test
or
repz
or
cmc
mov
adc
push
outsb
xor
insb
sbb
int
sbb
pop
test
mov
hlt
mov
es
pop
and
test
mov
fdivrl
repz
out
add
add
mov
cmp
xchg
stc
inc
test
xor
mov
sbb
add
mov
inc
aad
ret
mov
push
das
mov
ss
cmp
mov
aam
adc
mov
les
loop
out
outsb
push
cmp
fmuls
or
jl
add
push
push
hlt
loop
pop
inc
push
lcall
or
or
jmp
xor
mov
icebp
out
jns
pop
xchg
jne
or
pop
mov
xor
repnz
jb
xor
push
mov
mov
adc
in
das
jno
mov
add
in
push
loop
mov
rcrl
loop
jge
mov
push
imul
push
mov
or
inc
gs
ss
cmp
fdivp
test
mov
test
or
movsl
outsb
pop
std
push
mov
dec
adc
popa
dec
jnp
test
cwtl
movsb
cltd
cmc
jnp
xchg
imul
nop
cmp
dec
mov
pop
out
jg
mov
mov
jnp
notl
pop
daa
inc
adc
cltd
push
mov
gs
movsl
fwait
pusha
loope
ljmp
or
popa
jo
mov
mov
js
es
mov
sub
or
sbb
fstpt
dec
sar
and
mov
rorb
pop
add
test
dec
mulb
jg
add
inc
mov
mov
or
shlb
and
fildl
fbstp
clc
inc
or
pop
sahf
repz
jge
pop
test
push
gs
jne
ja
movsb
movl
push
inc
cmp
pop
stos
fdivrs
push
in
mov
push
divl
mov
push
add
mov
cmc
xchg
fldcw
fistl
and
xor
pop
adc
inc
scas
imul
das
fdivl
xor
sbb
jecxz
pop
sbb
cld
out
adc
jo
test
fcoml
pop
add
loop
in
mov
or
xchg
mov
mov
mov
jae
push
sbb
xchg
sbb
repnz
jae
adc
pop
dec
enter
ja
mov
xor
mov
and
jp
test
loopne
cmp
and
mov
sub
dec
and
sti
push
sbb
pop
mov
sarl
push
les
js
and
dec
xchg
sub
cmpsb
fistpl
or
nop
xor
inc
cmpsl
fidivs
add
loope
xor
mov
xchg
or
dec
adc
seta
mov
cld
ljmp
inc
sbb
filds
fldt
movsl
add
jmp
ds
cmc
cmp
xlat
and
roll
cmp
test
fsubs
push
mov
mov
pop
xor
adc
mov
leave
repz
jae
rclb
jmp
insb
shll
or
push
int
jg
das
mov
int
enter
das
or
xchg
inc
mov
call
sub
out
arpl
adc
sub
inc
clc
fists
insb
mov
sbb
mov
insl
xor
mov
filds
pop
mov
inc
stc
orb
addr16
mov
cmpsl
sub
jb
fildll
sub
outsl
cmp
rorl
mov
aaa
pop
cmp
pop
movsl
in
ss
xchg
cmp
mov
pop
push
fdivs
popl
insb
sbb
clc
inc
and
push
sbb
subb
jno
xchg
cwtl
xor
fidivl
cmp
add
hlt
cmp
inc
popf
adcb
and
repnz
outsl
popl
dec
cmp
and
sarb
out
mov
mov
scas
pop
mov
push
and
sub
adcl
push
icebp
mov
cs
je
cmc
and
fwait
je
std
lret
mov
clc
test
loope
mov
pop
mov
popf
mov
jb
es
into
outsb
sbb
stc
xor
mov
aas
repnz
js
popa
pop
imull
and
mov
adc
and
dec
sbb
popf
movb
inc
roll
push
sbb
scas
cmc
mov
inc
sub
shrb
xchg
mov
hlt
popf
pop
cli
mov
xchg
js
cmp
sbbw
cmp
ret
pop
ret
hlt
scas
movsl
mov
dec
test
lds
je
mov
or
lcall
adc
mov
ret
adc
fdivp
sbb
mov
dec
jg
dec
fs
inc
cmp
call
fisubrl
movhps
dec
and
dec
cs
xchg
cmp
pop
jno
call
pop
or
ret
in
sti
aad
cmpb
add
mov
lods
lock
aaa
add
xlat
int3
dec
repnz
fisubl
in
inc
aaa
mov
mov
das
push
or
dec
leave
dec
movsb
adc
push
sbb
loop
mov
test
loop
iret
jb
adc
cmpl
icebp
out
sub
lret
mov
dec
sub
and
mov
pop
paddq
or
mov
mov
add
or
in
push
adc
inc
inc
andl
sbb
jmp
aam
dec
int
fnstcw
xor
in
push
mov
in
jg
dec
adc
cs
sbb
lea
add
jg
lahf
ret
sbb
mov
or
inc
nop
ret
jno
call
popl
sbb
cmp
popa
pop
ss
push
cmp
or
mov
add
sub
pop
xlat
ja
jne
ret
shr
testb
jl
jo
mov
aaa
ss
movsb
popf
push
and
ja
les
inc
add
push
dec
inc
mov
xor
cmpsb
sbb
outsb
xchg
cmp
iret
or
loopne
inc
scas
jge
xchg
call
or
ja
sahf
jo
pop
mov
mov
inc
push
sub
mov
inc
mov
lcall
push
cmp
sbb
je
mov
mov
mov
xor
inc
jne
inc
jnp
stc
fcoml
jo
lcall
mov
push
adc
add
bound
push
dec
rclb
jne
mov
inc
inc
dec
pop
fdivr
outsl
test
js
sbb
xchg
ret
dec
adc
or
mov
dec
out
addr16
loop
loopne
dec
lods
xchg
dec
fldt
inc
std
or
sub
sbb
fisttpl
in
test
sub
mov
es
jmp
in
sbb
out
mov
fsubrl
pushf
jg
and
inc
ja
lea
mov
and
mov
mov
inc
sub
mov
fnstsw
je
arpl
addl
das
fldenv
je
pop
scas
cli
xor
jo
clc
stc
outsl
pop
fsubp
sbb
shlb
movsb
enter
dec
mov
nop
inc
call
and
inc
dec
iret
arpl
push
ds
adc
ret
mov
sub
imul
shlb
xor
aaa
lahf
sub
inc
call
clc
sbb
and
xchg
pop
and
aas
out
test
mov
xchg
fisubs
shlb
pushl
add
add
fs
push
in
xchg
mov
or
aaa
pop
shlb
pop
push
inc
lods
pusha
add
fs
adc
inc
sbb
mov
div
fsubs
lahf
shl
jl
dec
cmp
hlt
test
and
jle
inc
das
inc
jmp
push
icebp
push
out
dec
push
sub
aad
aam
lock
and
jl
or
or
jmp
jbe
push
inc
insb
jnp
push
movsl
pop
mov
lcall
out
adc
pop
ja
push
fcmovbe
or
mov
or
ret
rolb
clc
push
adc
gs
xlat
jbe
mov
lods
in
out
or
inc
wbinvd
and
dec
push
mov
cltd
sbb
in
daa
sarb
mov
ja
push
sub
lock
adc
mov
decl
lahf
mov
and
fstps
pop
dec
outsl
cmp
mov
push
push
add
fs
mov
sub
inc
mov
popf
or
sub
in
insl
ret
pop
lea
pop
dec
int3
out
push
cmpsb
xchg
ljmp
jge
notl
or
or
in
mov
lods
fildl
aam
cmp
push
shlb
xchg
inc
jl
rorb
std
add
outsl
jecxz
add
mov
jp
ss
push
ret
or
es
fs
aam
lret
xchg
or
pop
subl
add
pop
roll
mov
aad
lds
xchg
aaa
push
test
cmp
xlat
xchg
add
ljmp
bound
aad
in
stos
imul
cmp
xor
test
pop
jle
xor
int
or
cmp
mov
mov
fdivrs
ficomps
push
jbe
fcmovnbe
adc
cmc
mov
jecxz
pop
pop
loopne
outsl
dec
in
dec
loope
xor
sub
jb
jecxz
jmp
sub
notb
adc
cmp
inc
loopne
dec
dec
leave
inc
add
stos
ret
jp
sbb
fdivl
sub
jbe
stos
sarl
jbe
push
pushf
arpl
mov
pushf
pop
cli
cmp
mov
adc
pop
push
mulb
sub
mov
mov
icebp
setg
xor
add
push
popa
cltd
ljmp
ficompl
pop
data16
repnz
lds
test
cld
dec
std
aaa
jb
mov
xchg
test
dec
lret
jbe
fwait
adc
jae
fdivrl
mov
jns
fistps
xchg
xor
les
mov
pop
fsubrl
aad
adc
jb
jo
lcall
je,pn
fcmovu
pusha
mov
jecxz
inc
xchg
and
mov
push
xor
lcall
enter
pop
mov
fcomps
lahf
aas
mov
bound
jno
out
push
dec
adc
xchg
add
mov
out
mov
pop
aad
out
xchg
xchg
adc
loopne
fstps
out
mov
adc
dec
xor
roll
mov
test
call
idivb
jl
mov
arpl
test
int3
push
jl
gs
test
pop
test
pop
add
cmp
aam
popf
sub
lods
outsb
insl
out
rolb
mov
or
aas
sahf
lea
push
cmp
mov
pop
dec
push
lea
jg
call
add
mov
and
cmpsb
or
inc
adc
fdiv
cmp
mov
inc
clc
int
or
dec
bound
xchg
in
mov
dec
push
lods
inc
mov
data16
cmp
or
jmp
push
adc
pop
cld
lea
leave
adc
sub
adc
pop
fstp
hlt
in
fidivs
imul
out
or
out
jb
xchg
push
sub
inc
pop
clc
ljmp
cvtdq2ps
or
jecxz
into
lds
push
ljmp
popa
mov
ds
cmc
cld
and
xchg
call
jbe
adc
mov
jb
orb
js
pop
inc
and
cs
xchg
mov
and
push
inc
pop
dec
iret
sahf
cmp
xor
mov
pop
and
xchg
testb
sub
cmc
and
sub
sub
mov
in
pushf
test
xor
jmp
pusha
inc
cld
cmp
ret
test
cli
sar
popa
fs
push
xor
mov
arpl
xchg
out
and
sub
mov
mov
sbb
mov
addb
jns
in
inc
adc
push
decl
sbb
mov
sub
mov
dec
push
push
jne
mov
ljmp
add
scas
jmp
jns
mov
cli
scas
pcmpgtd
mov
ljmp
adcb
push
cld
movsl
push
or
nop
sbb
adc
add
or
jo
mov
push
adc
add
out
adc
jle
data16
insl
test
scas
repz
pop
and
and
fwait
mov
andl
mov
or
adcl
ficompl
out
pop
sub
int3
lret
sub
rolb
in
aam
mov
adc
mov
fcoml
xchg
sbb
iret
push
mov
or
and
cld
pop
scas
or
pop
je
jae
jne
push
loop
jle
daa
cmp
sbb
aad
pop
ret
pusha
out
mov
mov
jno
mov
loope
mov
pop
mov
dec
int
sbb
jp
mov
popa
rolb
inc
or
pop
cmpsl
xchg
mov
and
add
test
add
loope
cmc
ljmp
xor
add
decb
pop
jo
pop
ret
in
loop
or
aad
inc
mov
xchg
or
add
js
jg
push
xchg
dec
push
or
out
mov
shrl
push
sub
dec
xchg
sbb
push
icebp
dec
ds
xchg
jg
fists
test
loop
push
out
aas
pusha
fs
out
sbb
push
imul
lds
xor
push
xlat
data16
and
filds
hlt
dec
or
enter
mov
adc
mov
pop
sbb
mov
or
ljmp
dec
test
in
insl
shr
jae
cmc
fdivrl
mov
out
inc
or
cmp
icebp
push
movsl
sbbb
cs
lds
faddl
loope
addr16
dec
jle
movsb
adc
mov
inc
inc
aam
pop
out
daa
aad
mov
dec
and
add
xchg
push
adc
call
fisubrs
fists
jb
inc
mov
xor
dec
lods
sub
stos
jae
jo
in
adc
out
pop
dec
dec
xchg
lret
outsl
and
push
into
int
xchg
ret
lret
push
or
cmp
add
pop
mov
adc
or
inc
push
arpl
rclb
lock
fwait
mov
jbe
inc
lock
test
mov
dec
js
mov
push
inc
mov
aas
rclb
and
insb
je
das
in
mov
ljmp
cmp
ret
jbe
mov
cmp
xchg
fistps
and
test
mov
outsb
loope
popa
adcl
inc
mov
jg
inc
mov
xchg
ret
jb
push
insb
sbb
les
sbb
sbb
push
xlat
cmp
aas
aam
cwtl
addr16
mov
push
pop
add
int
and
and
xchg
or
subl
orb
lcall
hlt
add
dec
xlat
lods
sbb
das
into
std
aaa
pop
mov
ja
push
inc
sub
or
test
dec
in
jnp
xchg
adc
pusha
jnp
enter
ljmp
inc
pop
xchg
fwait
dec
sub
mov
dec
rorl
mov
or
xchg
push
mov
mov
rolb
imul
mov
sub
or
out
sub
leave
mov
mov
les
clc
sub
or
setg
xchg
int
and
je
dec
mov
out
ljmp
hlt
dec
test
sub
outsl
hlt
pop
sbb
inc
pop
mov
mov
popa
fdivr
incl
js
loope
mov
fs
fmulp
arpl
pushf
sbb
inc
xlat
pop
enter
pop
in
mov
sbb
scas
add
jmp
hlt
in
dec
out
jp
loope
dec
mov
les
xor
or
push
cmp
in
push
jbe
or
outsb
scas
pusha
rorl
dec
or
and
or
int3
xor
or
inc
ja
jb
jmp
mov
push
adc
loopne
jbe
mov
int3
push
push
pop
push
sahf
mov
mov
and
mov
push
mov
cmp
clc
jbe
clc
lds
add
outsb
outsl
add
outsl
cmp
rcl
pop
inc
xchg
jp
and
inc
mov
cmc
mov
loope
into
dec
xchg
test
insl
insb
orb
and
insl
outsl
das
test
icebp
sub
mov
sbb
and
stc
outsl
or
sub
jne
out
push
mov
and
push
mov
push
jle
aam
jne
dec
adc
jbe
scas
dec
xor
imul
or
jno
pop
xchg
rorl
scas
mov
push
mov
xor
sbb
push
jl
pop
inc
inc
ja
or
pop
nop
cltd
cltd
stos
lret
add
mov
and
ss
cmpb
lock
popf
lock
push
mov
lahf
push
cltd
in
mov
mov
jmp
jl
imul
pusha
or
pop
sbb
pop
push
jmp
test
or
rcll
ljmp
push
es
sar
stc
jge
sub
cltd
dec
push
in
outsl
shl
outsl
jge
aaa
dec
repnz
mov
in
dec
movsb
mov
mov
jbe
in
pusha
pop
dec
mov
faddl
xchg
xchg
dec
aad
push
iret
jg
fidivrs
mov
call
xor
jmp
adc
mov
rorl
outsl
add
testl
cli
mov
push
mov
mov
mov
mov
mov
add
inc
add
jmp
inc
and
push
sub
xchg
mov
sub
fdivs
sub
mov
aad
mov
sub
fimuls
addr16
pop
fisubrl
outsl
loope
adc
lea
mov
aam
pop
jmp
shl
mov
mov
inc
fistpl
out
fwait
xchg
mov
jecxz
xor
and
pop
cmp
mov
aas
out
sub
or
icebp
data16
cmc
mov
xor
sub
inc
and
push
ss
xchg
mov
outsl
shlb
in
ret
xchg
in
insl
xchg
ret
inc
sub
imul
test
xor
mov
sub
es
ss
test
inc
mov
clc
pop
inc
cli
inc
dec
inc
sbb
fistl
lock
cmp
cmp
mov
sarl
and
inc
sub
jge
dec
daa
sbb
sbbb
outsb
jae
xor
arpl
insb
jl
pop
xor
repnz
push
ja
mov
pop
iret
int
insb
pop
and
enter
mov
sti
rcrl
push
sub
je
or
push
sbb
cmpsl
sbb
fildl
pop
dec
sbb
lcall
addl
pop
mov
es
rcrb
pushf
imul
pop
push
fisttpll
fnop
pop
mov
cmpsb
or
lcall
test
test
xor
inc
shrl
stos
dec
and
mov
inc
icebp
stos
inc
popf
loop
add
pop
mov
push
jg
sbb
mov
adc
loop
xchg
sbb
mov
inc
ret
pop
hlt
xchg
mov
xor
aaa
leave
add
sbb
orb
fstpt
js
and
testb
lods
push
ficompl
pop
lcall
scas
std
xor
push
dec
push
out
rolb
adc
inc
add
mov
sarb
aas
push
test
std
push
loope
mov
push
mov
mov
ret
xchg
inc
xor
lcall
call
push
test
ja,pn
call
shlb
sub
mov
daa
adc
xchg
fildl
fnsave
mov
les
mov
aaa
pusha
xchg
and
test
test
sub
int
dec
cmc
vandps
arpl
jecxz
dec
enter
pop
xchg
xchg
push
inc
jne
or
jmp
test
or
inc
cli
loop
fdivrs
ret
and
dec
into
hlt
mov
jnp
pop
dec
inc
adc
sbb
scas
mov
popa
and
push
lds
mov
pop
ja
pop
mov
andl
sahf
addl
and
rolb
out
cli
in
cmpsb
movzwl
sbb
pop
or
int3
int3
sub
insl
inc
or
iret
je
or
lret
adc
ss
push
decl
mov
rolb
jb
and
or
fldcw
lret
pop
mov
pusha
cmp
mov
jecxz
jmp
daa
pop
xchg
sbb
shr
roll
mov
push
fisttpl
mov
push
insb
es
mov
jp
es
cmp
aad
mov
sahf
leave
sahf
mov
jg
aam
or
insl
push
jp
push
dec
out
data16
mov
pop
add
sbb
je
dec
mov
xchg
movsb
cmp
adc
pop
sbb
sbb
add
test
jae
add
mov
mov
fidivrs
mov
push
das
sub
lock
iret
arpl
jg
dec
ljmp
push
pop
out
or
incl
inc
fldt
cmp
lret
jl
neg
and
adc
xchg
shlb
fcmovnbe
fstpt
or
or
fmuls
xor
sbb
aam
std
lds
pop
dec
push
ret
add
mov
test
ret
inc
insb
shll
jecxz
fxch
sti
cli
dec
pop
xor
rcrl
xchg
outsb
in
pusha
pop
push
nop
inc
scas
pop
cli
lods
add
std
xor
push
sar
in
push
into
sbb
notb
xor
dec
pop
dec
sub
inc
xor
insl
aaa
adc
sub
adc
sti
stos
and
aam
stos
adc
or
in
adc
adc
push
add
icebp
sbb
or
sbb
dec
mov
or
popf
jl
inc
das
shrl
and
push
adc
cmovl
test
mov
and
jg
sub
mov
les
mov
sahf
push
fcoml
in
orb
bound
fistps
sbb
out
sbb
adcl
pop
stos
sbbb
or
push
mov
cmp
inc
lods
sub
outsb
push
sub
push
add
xchg
xor
dec
scas
mov
mov
sbb
insb
fbstp
or
dec
imul
or
pop
movsb
popa
mov
and
fdivs
fwait
and
icebp
mov
add
cmp
sahf
loopne
movsl
push
dec
push
das
xor
fildll
aaa
sub
jmp
inc
add
loop
or
orl
insb
mov
leave
adc
sub
arpl
push
das
push
adc
push
pop
inc
pop
sbb
mov
mov
xchg
and
loop
popf
or
iret
push
adcl
and
mov
sub
or
jg
loopne
stc
enter
cwtl
dec
out
push
push
ss
sbb
in
xchg
fcomps
xor
dec
mov
outsb
inc
fildl
sbb
leave
cmp
push
cmp
xor
in
gs
dec
je
push
int3
push
sbb
sub
jo
cmp
adc
sbb
mov
test
sub
xor
call
les
scas
mov
jbe
pop
mov
fdivrp
xor
xor
out
mov
dec
jne
adc
pusha
loope
fdivp
mov
xchg
scas
js
inc
shr
add
outsl
pause
ja
out
mov
pop
mov
mov
mov
and
mov
lods
and
push
popf
hlt
dec
fucomi
outsb
fisubl
adc
mov
das
adc
dec
hlt
repnz
rorb
push
add
mov
jle
outsb
in
aas
pop
pop
stos
ret
inc
sub
dec
rol
mov
leave
fcmovb
arpl
testb
loope
arpl
dec
sbb
and
cmc
or
mov
arpl
jl
jge
pop
jno
aad
cmc
inc
sub
xor
addr16
push
rcl
test
adc
ret
push
sub
jno
mov
loope
add
ficoml
nop
movsb
pop
pop
sbb
mov
sub
loope
out
or
data16
movups
add
stc
cwtl
sub
dec
ss
js
dec
mov
in
out
shrb
loopne
inc
cld
fisttpll
mov
cld
jo
add
mov
cmp
xor
je
pop
mov
bound
ret
or
push
fcoml
in
xchg
ss
xchg
push
repnz
xor
leave
push
ret
fnsave
jno
and
dec
sbb
or
sub
mov
dec
mov
sbb
jge
dec
xchg
lret
add
leave
pop
xchg
mov
or
lcall
mov
rcrl
mov
xchg
add
mov
dec
ja
cld
adc
mov
sbb
out
nop
sbb
mov
notb
lds
inc
mov
mov
lods
adc
mov
insl
inc
jo
test
lock
icebp
mov
out
jg
rclb
pop
test
mov
and
add
shlb
mov
wbinvd
adc
pop
push
mov
lods
adc
in
lods
add
add
sub
nop
mov
adc
and
addr16
mov
fisttpl
jl
cmp
xor
pop
push
divb
loopne
dec
adc
cltd
in
fmull
pop
bnd
test
pushf
inc
decl
mov
and
sub
xor
or
iret
lock
xorl
pop
mov
xchg
test
inc
cltd
cmpb
xchg
ret
icebp
jo
lock
mov
lahf
adc
jecxz,pn
push
dec
add
ja
imul
lods
and
dec
ja
mov
cs
jne
movsl
movsl
imul
jp
mov
lgs
outsl
ljmp
jns,pt
stos
sub
or
xor
das
mov
bound
push
mov
lret
mov
sbb
inc
cmp
addr16
adc
mov
xor
xchg
inc
popf
lods
add
or
adc
sbb
scas
icebp
aaa
mov
push
add
push
jge
jg
jae
call
lods
dec
shlb
mov
sti
ficoml
mov
mov
enter
das
insb
aaa
push
cmc
cli
xlat
or
or
cmc
or
xchg
push
add
jnp
out
sub
fcoms
or
jge
vmwrite
loop
and
mov
pop
movsl
or
aad
sti
cmp
loope
call
mov
rorl
adc
sub
xor
rcrb
pop
inc
cmpsl
lds
push
jne
cmp
mov
outsb
adc
sub
mov
dec
jae
inc
pop
daa
addr16
lods
daa
xchg
pushf
xchg
add
jp
sub
jp
loopne
adc
adc
pop
aaa
mov
mov
pushf
mov
addr16
pop
mov
fsub
rcrl
mov
idiv
dec
ds
enter
inc
push
push
adc
lret
pop
aad
dec
outsl
aas
rolb
lret
pop
xchg
cld
lods
hlt
filds
mov
sub
push
pop
lret
xchg
mov
mov
shrl
call
js
push
fcoms
push
lods
fcmovu
or
mov
fdivp
push
mov
ljmp
pop
add
cli
mov
or
sub
addb
mov
add
loop
popf
mov
int3
test
push
pop
ds
mov
ljmp
or
icebp
testb
out
stos
testl
jecxz
mov
je
sub
and
cmp
loopne
cltd
aad
add
arpl
stos
lock
scas
sub
sbb
xor
scas
sub
push
je
movb
or
or
movsl
xor
out
orb
nop
mov
jbe
int
mov
jg
mov
and
aaa
ret
push
lea
in
ret
pop
shl
fdivr
ljmp
mov
add
jbe
paddq
inc
stos
mov
cmovs
iret
push
jge
sti
iret
lcall
xor
jno
int3
lea
out
and
inc
lock
ret
jmp
cs
or
dec
fistps
add
inc
decb
xchg
loop
inc
adc
push
sti
and
shl
inc
scas
test
mov
repnz
add
aaa
sub
in
jbe
pop
mov
cmp
pop
fisubrl
xchg
push
stos
pop
lea
pop
lds
out
std
sub
cli
dec
pop
add
pop
mulb
mov
inc
mov
lods
and
stos
ficoml
outsl
imull
in
sar
arpl
loopw
test
mov
add
cld
sub
cs
insb
pop
dec
test
pop
hlt
add
adc
mov
add
inc
cmp
into
sti
mov
mov
rorl
sub
and
cmp
aaa
add
cs
gs
adc
pushl
inc
fstpt
mov
pop
cltd
insl
loopne
mov
sub
ds
push
orb
aaa
aas
mov
xchg
or
mov
fdivrl
inc
lds
scas
loopne
adc
test
adc
dec
push
or
dec
dec
lock
test
cmp
push
mov
or
xor
stos
lcall
fistl
push
pop
mov
cmp
imul
jle
pop
adc
inc
push
xchg
rorb
inc
test
sub
faddl
jb
pop
xchg
cli
repnz
jbe
out
sbb
add
outsl
testb
clc
mov
fchs
xchg
dec
sub
sbb
rcrb
sbb
add
mov
lret
lea
sti
mov
movsb
call
push
fs
push
dec
lret
sbb
xor
insl
adc
movsl
jmp
mov
fsubr
add
je
pop
xor
aam
imul
out
sahf
fidivrl
outsb
mov
lcall
test
test
loopne,pt
xorb
sbb
jo
add
add
cmp
add
and
xchg
fistl
js
fstpl
arpl
mov
jmp
pop
shrb
js
cmpsb
or
mov
sbb
pop
xchg
ja
pushf
cmp
push
mov
and
movl
ss
mov
adc
jae
ljmp
arpl
sbb
push
dec
xchg
mov
call
dec
icebp
ds
xchg
out
inc
int3
incl
popa
imul
or
ret
jbe
inc
mov
insl
sub
stos
insl
aaa
shrl
andb
mov
xor
mov
out
arpl
and
cmp
aaa
cmp
push
mov
insl
fwait
test
cwtl
cs
nopl
mov
subl
pop
mov
mov
stos
sbb
mov
sti
lods
das
scas
leave
add
cmp
xchg
sbb
or
mov
shll
clc
adc
fsubrs
fisttpll
pop
stos
insl
sahf
add
rol
je
or
pop
repz
add
mov
mov
mov
push
mov
stos
mov
cmp
dec
lret
repnz
cmp
mov
jle
arpl
cmp
mov
push
orb
cmp
xor
pop
daa
mov
push
mov
insb
adc
xor
bound
or
xchg
pop
roll
sub
jle
adc
loopne
scas
sub
cmp
push
bound
ljmp
dec
dec
test
jg
sti
xchg
dec
scas
push
dec
add
outsl
cltd
xchg
iret
jns
inc
in
cli
ljmp
lods
push
jl
sbb
aas
movsb
int
mov
mov
add
lea
loopne
aam
dec
and
xchg
dec
and
mov
fwait
test
jge
dec
jmp
and
loope
cmpsb
mov
bound
add
adc
mov
push
js
clc
sarl
push
sub
mov
rol
jmp
jns
shlb
cld
or
jne
jb
ficoms
cs
pusha
mov
cli
mov
daa
fstp
decb
lea
outsb
ja
mov
and
lock
and
fisubrs
movsl
push
xlat
ret
dec
test
mov
aad
ja
add
vmaskmovdqu
stc
testl
daa
pop
and
inc
push
xlat
push
pusha
ljmp
and
xchg
repz
outsl
xor
ljmp
xor
and
imul
lea
and
bound
cli
fnstsw
out
insl
ljmp
add
fisubl
sbb
dec
lret
push
outsb
or
das
mov
insb
xor
add
incl
in
les
push
add
test
pop
jno
jp
cmp
push
mov
jne
enter
aaa
popa
mov
and
sbb
call
cmpsl
xor
ljmpw
pop
mov
add
add
mov
mov
lods
clc
cmc
or
jbe
icebp
cmp
inc
jecxz
add
addr16
adc
loopne
push
ss
xor
xor
cli
jg
pop
negb
adc
pop
mov
inc
mov
stos
mov
ja
cmpb
loop
push
mov
pop
cld
lods
or
iret
pop
aam
cwtl
push
and
adc
sbb
xor
xor
inc
mov
int3
in
orl
pushf
adc
roll
hlt
mov
add
ss
rcll
jo
xor
int3
test
and
fwait
push
cmpb
push
ljmp
nop
stc
sub
sub
subb
inc
psllw
cld
inc
mov
pop
mov
or
add
cli
xchg
sub
aas
mov
aaa
cs
jg
test
dec
and
cwtl
and
or
in
jp
ret
mov
xor
mov
lods
pop
test
and
pop
mov
push
inc
pop
std
mov
push
mov
out
push
mov
adc
das
push
setbe
sti
sub
pop
pop
pop
mov
pushl
xchg
inc
jle
test
or
xlat
in
pop
cli
aaa
adc
arpl
mov
out
or
inc
mov
inc
ficompl
loopne
pop
icebp
lock
jmp
insb
in
loope
xchg
mov
movsl
in
push
adc
xlat
xchg
sbb
leave
push
jp
inc
pop
clc
cwtl
sbb
lret
cmc
or
sub
test
pop
pop
fbstp
lods
cmp
gs
arpl
jg
mov
pop
call
mov
xchg
mov
mov
jnp
mov
mov
mov
push
gs
scas
notb
push
adc
or
imul
insb
sti
xchg
cmc
ficomps
jge
je
aad
and
mov
or
icebp
and
in
inc
das
in
push
test
lods
ja
mov
sub
and
xor
xchg
jbe
add
pushf
pop
lea
cmp
in
cli
dec
movsb
and
mov
xchg
cli
add
jb
sti
cmp
das
fdivl
mov
inc
sub
aad
add
mov
in
sub
and
and
xchg
fcmovu
push
aas
fs
movsb
push
or
xor
je
pop
fidivs
pop
or
jl
gs
jb
add
pop
lds
sub
imul
in
in
pop
pop
sub
push
pop
sub
pop
call
dec
aaa
mov
sbb
dec
jge
rorl
out
scas
sub
inc
imul
inc
mov
push
jae
orl
test
aad
outsb
push
fstl
lea
and
aam
mov
jl
shl
cld
jg
mov
imul
test
mov
addb
adcl
je
aaa
scas
mov
mov
aad
std
add
je
cld
lret
flds
mov
ficompl
sti
ds
aas
mov
hlt
jno
les
push
cwtl
xchg
out
push
xchg
rcll
incl
xchg
mov
out
je
xchg
ficoms
add
rorl
pop
and
orb
jmp
push
add
repz
xchg
mov
lcall
push
inc
jno
xchg
les
sub
orl
push
fcompl
mov
mov
lcall
xchg
in
sub
mov
mov
iret
aas
adc
or
mov
cld
xchg
fimuls
js
out
inc
ret
mov
es
cmp
cmp
mov
das
lods
mov
pop
out
jecxz
adc
sub
or
ljmp
sbb
pop
mov
dec
rcrb
jb
mov
in
inc
pop
loopne
pusha
dec
orl
sbb
or
inc
and
pushl
je,pn
jo
fwait
bound
popf
jbe
adc
sbb
mov
sub
and
outsb
cmp
jbe
push
add
mov
cmp
sbb
popa
add
outsb
hlt
std
sub
adc
inc
lock
into
ja
movsb
add
jle
sub
subl
js
inc
insb
jmp
test
pop
je
repz
aad
mov
mov
out
inc
mov
xchg
pop
and
inc
cmp
xchg
dec
sbb
aad
push
rcll
jg
mov
dec
push
and
aad
push
mov
inc
mov
sbb
xor
fcom
xchg
in
pop
dec
aas
cs
pop
test
psllq
clc
inc
mov
btr
aad
ret
pushf
dec
mov
testl
mov
das
inc
add
movsb
or
call
pop
insb
movsl
mov
stc
lock
notb
fsubrs
movsb
push
pop
jmp
lock
mov
sub
insb
das
xor
lcall
fdivl
dec
mov
mov
std
scas
ss
ljmp
jnp
mov
mov
rol
shrb
add
insb
mov
mov
sub
inc
mov
add
xor
mov
xchg
jecxz
push
shl
lcall
mov
sub
mov
pop
cli
ljmp
jge
pop
lods
mov
ret
jecxz
out
or
jmp
or
lods
leave
std
mov
add
xor
fidivs
cld
popl
mov
jbe
cmpsl
mov
rorl
pop
jo
lahf
cli
sbb
repnz
cmp
mov
loop
mov
mov
adc
cli
or
out
add
mov
pop
push
shll
loop
inc
inc
idivl
fs
rolb
xor
mov
push
adc
pop
or
pop
adc
in
xchg
aad
std
xchg
sub
pop
or
lret
mov
sub
ss
jno
aam
imul
data16
sarb
jne
rorl
popf
adc
scas
add
push
jg
sub
call
loop
nop
cmp
jae
xor
loope
mov
sahf
mov
dec
shlb
add
shlb
jg
frstor
add
add
int
dec
popa
sbb
iret
jb
insl
mov
or
or
adc
int
adc
mov
sbb
movsb
push
jbe
sub
dec
push
push
inc
shrl
jle
test
mov
and
jge
push
xorb
pop
add
stc
outsb
cwtl
loop
inc
adc
std
jl
das
push
mov
rol
cs
push
lock
shl
ret
fildll
rcl
ja
ret
add
fildll
adc
adcb
lods
lcall
pop
add
inc
aad
jns
xchg
push
sub
cmp
pop
xchg
sarl
in
pusha
xor
das
mov
push
lret
ja
inc
jge
clc
and
call
mov
test
jl
cmp
xor
hlt
testl
cs
add
pop
jl
imul
int3
sub
imul
push
sbb
add
pop
mov
and
rorb
sti
jmp
cmc
sar
int3
add
or
cmp
adc
popf
in
js
xor
loopne
pop
jg
push
sbb
in
sahf
subb
or
add
dec
pop
cltd
dec
test
inc
pop
and
stos
pop
mov
idiv
rcr
clc
jecxz
ljmp
ds
or
pop
push
inc
pop
mov
adcb
sbb
sbb
mov
in
addl
ret
add
out
adc
loop
shlb
fidivrl
xlat
imul
ss
jle
out
add
cmp
and
dec
mov
cmp
rorb
lea
jb
bnd
xor
or
mov
dec
jno
in
pop
jbe
cmc
inc
or
jne
xlat
xchg
pop
mov
call
pop
cmp
xor
mov
rol
cmpsb
inc
adc
cmp
sbb
pushf
enter
cmp
hlt
lea
mov
adc
cmp
imul
jo
stos
aam
mov
stos
or
add
inc
inc
rolb
jp
pop
in
push
repz
inc
xor
movsb
loope
rorb
jnp
imul
divl
lods
jbe
das
xor
xor
push
push
mov
fidivrs
cltd
xchg
hlt
mov
mov
and
icebp
mov
jecxz
inc
sti
mov
dec
rcrl
mov
cs
xchg
movb
mov
fisttpl
aaa
lock
fisubl
hlt
jle
pop
xor
pop
dec
adc
add
mov
jle
mov
divb
lea
xchg
movsb
xor
cs
mov
lods
mov
mov
shll
test
aaa
cmp
or
in
pushl
xchg
mov
dec
adc
mov
jl
in
outsb
insb
cld
jo
movsl
add
aaa
inc
sarb
xchg
sahf
or
loope
sbb
test
into
fcmovnbe
and
lcall
adc
push
shlb
cmp
jmp
fistpl
mov
sarb
rorl
cmc
outsl
add
cmp
jge
inc
mov
inc
aam
ffreep
scas
push
jno
daa
rcl
or
sbb
inc
xchg
imul
dec
pusha
pop
in
shl
test
mov
mov
fstpt
push
rcr
js
xchg
inc
loop
mov
push
clc
push
add
mov
mov
sbb
inc
not
sbb
fiadds
add
add
movsl
mov
and
adc
inc
fsubrs
dec
and
loope
leave
push
idivb
mov
js
jl
cltd
sub
dec
minps
jmp
lret
add
add
sbb
ret
push
or
rolb
adc
push
into
jns
aaa
je
mov
push
adc
mov
jo
loopne
rorb
loop
xchg
loope
call
jae
aaa
cld
gs
je
test
mov
stc
aaa
and
in
jmp
arpl
je
outsl
mov
add
sar
dec
lock
cmp
fiadds
mov
nop
mov
dec
cmp
jbe
subb
jnp
and
or
clc
mov
ficoml
rorb
popa
jg
leave
in
cs
jmp
sub
cmc
push
and
repnz
xor
insl
dec
je
sbb
pusha
rolb
cmc
out
mov
adc
sbb
pop
mov
mov
or
cmpsb
push
jp
sti
ficompl
pop
test
xorl
call
or
mov
mov
mov
mov
mov
mov
stos
dec
adc
addl
shr
loopne
xchg
repnz
xor
add
pop
in
jle
ror
gs
imul
jb
imul
mov
or
pop
jle
sub
xor
je
daa
sbb
sub
clc
lods
mov
pop
fmull
adc
aas
and
subl
pop
xor
repz
mov
nop
pop
ret
xor
notb
fidivl
xchg
cmpsb
pop
mov
xor
fisubl
jmp
lods
out
push
or
cmpsb
sti
jmp
hlt
xlat
lret
add
and
xchg
xlat
jo
add
xchg
or
mov
adc
cmp
dec
xchg
and
rcll
mov
sub
fs
test
rorl
loope
add
popf
jmp
nop
push
lock
in
adc
cmp
push
sub
test
neg
cmp
pop
das
adc
sub
test
and
sub
xchg
outsl
test
push
xchg
stos
and
arpl
jbe
fdiv
fsubrs
loope
mov
jle
and
add
out
ljmp
inc
jl
mov
loop
dec
aas
stc
or
clc
or
fildl
jp
push
mov
cmpsb
xchg
and
push
pop
mov
mov
sbb
pop
ljmp
xor
je
or
sub
jmp
jecxz
lds
popf
xlat
insb
xorb
cmc
jb
mov
loopne
test
add
das
mov
cmp
pop
jp
rclb
or
incb
arpl
mov
xor
cmp
lds
mov
xor
jae
loopne
mov
repnz
decb
repz
aam
leave
inc
add
add
dec
pop
or
sbb
add
pop
fcom
clc
out
add
inc
cmp
sbb
xchg
ss
cmp
leave
dec
cmp
add
ret
push
xlat
int
or
push
fidivrl
test
push
leave
aaa
lock
mov
arpl
mov
arpl
mov
sub
add
pop
hlt
xor
or
add
push
aas
jo
sbb
out
jp
push
jnp
out
inc
xchg
xchg
jo
inc
movsl
dec
mov
sub
jmp
and
push
fnsave
sbb
rol
push
push
cwtl
xor
lock
mov
lock
fsubrs
aam
mov
and
jo
and
mov
fxch
push
fmuls
jg
xor
imul
inc
push
mov
test
xchg
clc
pop
and
movsl
or
jno
mov
pop
fsub
sub
push
inc
ficomps
fistps
outsl
jl
and
cld
stos
loopne
sub
push
cli
ss
mov
rorb
es
xor
outsb
fstpl
lds
jb
fbstp
stos
ret
adcl
mov
cmpsl
pop
mov
mov
mov
dec
or
add
nop
pop
ds
mov
or
jmp
rclb
mov
mov
pop
in
jne
jmp
stos
aam
shrb
cmp
add
jmp
adc
mov
cmpsl
mov
mov
aas
test
jle
std
pop
jo
inc
pop
xchg
int3
int3
push
out
push
sub
mov
xor
ja
loop
scas
shll
movl
inc
inc
cmc
mov
orb
or
push
mov
adc
or
dec
mov
fisubl
push
cmpsb
push
adc
les
lods
ljmp
push
add
pop
pop
mov
mov
add
fidivl
jl
rorb
daa
add
jp
movsb
andps
jo
ss
mov
mov
jmp
xor
test
push
jle
sti
jnp
scas
jb
loopne
int
push
jnp
add
jo
sti
sbb
pusha
rorl
inc
push
in
jmp
arpl
fcmovnbe
xor
sub
aas
sbb
loopne
sbb
sbb
mov
loop
adc
lcall
and
and
inc
jg
insl
add
mov
lds
cmp
call
outsl
mov
fs
nop
ficomps
mov
push
bound
mov
jb
mov
shll
test
dec
inc
jle
inc
jne
pop
sub
cld
mov
add
or
dec
out
je
enter
cld
divb
sub
pop
sub
mov
xor
pop
sub
sub
mov
scas
aas
test
push
andb
jl
adc
mov
insb
enter
push
push
std
push
pusha
xchg
inc
cmp
inc
call
push
cmp
push
pop
pushl
lock
jmp
fisttpl
xchg
mov
scas
dec
hlt
mov
jo
or
sahf
xchg
jnp
shrb
xchg
push
ja
scas
mov
int3
sahf
lcall
dec
popf
int3
add
and
sub
scas
fldt
add
xchg
mov
loope
add
fistpll
add
outsb
cmc
lods
adc
pop
mov
insb
or
ljmp
xlat
movsb
or
sbb
xchg
and
test
inc
sbb
enter
and
and
fnstsw
jg
and
mov
pusha
mov
adc
mov
rolb
fstps
aad
inc
int3
adc
sbb
mov
popf
fsubrs
cltd
sub
mov
outsb
jne
jge
hlt
sbb
insl
or
xchg
scas
adc
test
cmp
clc
sbbb
es
iret
inc
add
pop
pop
out
out
clc
lahf
ret
jb
pusha
sti
mov
shlb
xor
fisttpl
cld
mov
pop
mov
test
adc
inc
pushf
or
mov
je
lock
pop
mov
testb
dec
repz
repnz
push
mov
sub
cmp
shll
lcall
jno
mov
das
mov
jns
out
mov
js
sub
add
sub
outsl
or
fnstcw
test
jbe
cmc
test
mov
or
push
pop
jno
jb
fdivl
sti
cmp
outsb
mov
adc
mov
mov
jno,pn
cwtl
lods
sahf
adc
push
xchg
fists
or
mov
inc
popf
cmpb
jecxz
sarl
test
shl
mov
and
filds
inc
push
push
pop
dec
mov
push
rcr
cwtl
jnp
fisubrl
mov
test
pop
das
mov
loope
les
dec
sbb
mov
mov
or
adc
loope
mov
xor
rcrl
repnz
rcr
push
sub
mov
mov
pop
fsubs
cmp
xchg
push
mov
dec
mov
mov
jecxz
xchg
sub
push
or
cmpsb
xlat
icebp
xlat
and
rclb
mov
inc
jns
sti
in
sub
rolb
xor
pushf
dec
mov
in
or
stc
mov
adc
mov
xchg
xor
xchg
adc
mov
push
enter
pop
ja
pushf
adc
test
mov
and
push
xchg
mov
pop
xchg
popf
jecxz
aad
outsl
imul
add
adc
push
rclb
pop
aas
in
push
loope
push
roll
in
pushf
push
xchg
imul
jg
jl
hlt
addr16
fwait
and
sub
es
emms
or
shll
std
bnd
inc
inc
in
pop
shlb
lds
cmp
icebp
xor
inc
pushf
scas
and
mov
pop
or
loope
jge
cmp
xchg
sahf
notl
fdiv
sub
cwtl
adc
xlat
push
pusha
inc
add
int3
jbe
adc
stos
xchg
out
ficoms
orb
test
mov
pusha
dec
lock
orl
mov
mov
push
movsb
pop
dec
sub
add
jp
mov
xchg
js
inc
push
mov
and
mov
cmpsb
push
das
fwait
mov
jge
adc
js
pop
push
and
adc
jo
pop
sarl
and
les
push
mulb
std
or
inc
aas
aam
subl
lcall
call
test
mov
jo
das
movsb
adc
push
pop
insl
add
cmp
push
roll
insl
je
jo
jae
shl
and
imul
xor
out
data16
pushl
inc
pop
add
shl
mov
popa
testb
or
out
call
sub
inc
add
push
shlb
std
or
add
ret
jmp
inc
mov
mov
lcall
or
dec
xchg
int3
test
lock
mulb
cmpsl
push
mov
jmp
mov
dec
aaa
std
lcall
push
test
pop
mov
xor
cltd
xchg
pop
mov
sub
pusha
inc
fcoms
sahf
jle
xchg
sti
and
rorl
std
mov
rclb
cmp
fnstsw
xor
and
or
add
add
cmpsb
ja
cmp
and
mov
das
xchg
or
add
add
adc
mov
push
or
sbb
es
push
mov
lods
push
mov
mov
outsb
outsl
xchg
sbb
xor
pop
aaa
clc
mov
sbb
add
push
imulb
shll
xor
filds
call
push
and
sbb
sbb
leave
sahf
pop
lea
sub
jbe
icebp
cltd
nop
test
xchg
or
mov
clc
dec
adc
push
cmpsl
adc
cmp
fistl
outsb
push
mov
sar
xor
aaa
rcll
inc
cmpsb
and
add
mov
xchg
jns
popa
mov
mov
dec
sbb
cmp
neg
rcll
push
daa
jmp
xchg
mov
or
dec
mov
adc
sbb
popl
pop
js
lret
push
jo
insb
cmp
fdivr
push
mov
push
inc
ja
fildll
jle
dec
stos
out
dec
ja
jge
sti
and
or
pusha
or
xlat
and
pop
xor
shlb
outsl
xor
push
shrl
jp
cmp
aaa
add
sbb
dec
xchg
push
or
cli
mov
fisubrl
sbb
jae
and
filds
ficoms
mov
in
fimull
sub
jae
and
or
lods
filds
cmc
outsb
sub
mov
jns
repnz
scas
xor
sahf
jno
sahf
pop
lcall
lock
js
push
outsb
cmc
mov
repz
movsl
loope
hlt
cmp
sub
pusha
cmc
inc
dec
sti
pop
stos
fsubrp
cs
inc
sub
leave
mov
fs
in
addr16
test
dec
fs
scas
mov
dec
shll
xchg
pushl
shll
pop
push
cmp
mov
leave
xchg
mov
in
loop
pop
jo
cmp
pop
sbb
jg
pop
bound
and
xchg
sbb
test
iret
mov
aad
std
dec
cmp
mov
mov
test
fcomps
lea
pop
jle
insb
cmpsl
inc
sub
and
mov
mov
rcrl
pop
imul
xor
cs
cmp
sbb
xchg
addb
aam
movb
int3
inc
or
scas
pop
xchg
in
add
cmp
or
mov
ja
mov
repnz
cmpb
inc
pusha
add
call
pop
push
and
add
mov
jae
mov
hlt
insb
fldt
or
mov
cs
mov
jne
pop
lds
adc
pusha
loopne
sub
in
inc
xor
fwait
cli
pop
cld
jl
adc
jmp
call
fmuls
push
jne
sub
add
mov
out
fs
or
pop
lods
shll
jp
inc
imul
test
cmp
sahf
je
xchg
inc
rorl
movsl
cmovl
in
scas
rcrl
fs
mov
xor
xor
xchg
xchg
adc
imul
les
push
fisubl
jmp
cmc
inc
ret
jl
sbb
outsl
insb
adc
mov
lods
add
xchg
inc
xchg
push
pop
jb
dec
insl
pop
subb
push
inc
subb
xor
jge
lods
cmp
jg
or
sbb
jecxz
add
enter
fisubrs
mov
dec
fisubrs
sub
dec
sbb
inc
xlat
pop
shrl
hlt
mov
mov
arpl
jo
dec
cmp
adc
xor
lea
pushf
pop
fadds
jle
add
xchg
jmp
dec
div
add
test
stos
jno
repnz
inc
jb
popf
or
inc
sbb
mov
in
cmp
xchg
jo
xchg
test
mov
fbld
jno
dec
nop
std
jg
hlt
cmp
stos
pusha
cmpsb
shrb
test
das
xor
add
or
std
jle
sbb
jbe
jg
inc
jmp
xchg
scas
incb
cmp
cmp
jnp
xor
push
pop
or
sub
iret
pop
mov
inc
xchg
ret
ljmp
lods
jo
mov
push
jp
mov
cmp
mov
push
inc
repnz
pop
add
std
pop
xor
ja
push
xor
or
mov
push
mov
push
dec
cli
pop
fcom
mov
cmp
or
fnsave
jbe
mov
mov
mov
pop
mov
das
push
fcmovne
cltd
xor
jl
push
xor
or
mov
mov
or
test
hlt
dec
sbb
mov
lods
add
mov
or
or
lret
mov
jae
mov
xlat
push
inc
mov
fisubs
xchg
inc
pcmpgtb
sub
lods
or
imul
inc
add
push
in
push
ret
cmp
and
inc
ss
jo
push
mov
jecxz
pop
bnd
bnd
add
addb
bound
cmp
pop
add
inc
je
int
inc
jne
jo
and
loope
jmp
insl
daa
jo
sub
pop
or
sub
or
in
out
jb
or
incb
push
add
mov
xlat
lods
mov
push
loope
dec
push
jl
data16
push
push
mov
and
mov
push
push
inc
xchg
fs
push
loop
cs
psrlw
js
subb
imul
or
inc
adc
mov
in
and
outsb
addb
push
adc
jg
or
neg
fidivrs
sahf
xlat
in
push
and
adc
ljmp
popa
rcl
fxch
adc
sar
dec
mov
mov
jmp
insl
aad
outsb
sbb
mov
pusha
pop
mov
adc
addb
subb
das
xor
pop
daa
test
std
jg
jl
and
in
je
cld
rcrb
icebp
lret
rorb
imul
ror
xlat
mov
push
sub
les
cmp
sbbb
out
jne
jg
call
adc
jbe
add
aaa
or
inc
pop
in
and
jp
fdivl
inc
sub
lret
decl
lea
push
nop
mov
int3
mov
or
add
mov
mov
sub
frstor
xor
call
xchg
cmp
lods
mov
xchg
das
sub
ja
in
scas
or
call
stos
lea
push
push
add
or
aam
insl
popa
movsl
das
jnp
xchg
insb
fadds
cld
aas
cltd
mov
push
cwtl
push
push
cmp
insl
cmp
sub
or
cmp
icebp
mov
dec
jb
mov
stos
stos
aam
inc
incl
pushf
sbb
inc
push
mov
cmc
mov
sub
mov
out
rorb
push
mov
int3
sub
or
cmpsb
dec
xor
mov
sbb
nop
add
push
mov
lock
inc
lret
je
sti
mov
or
cltd
flds
add
jle
inc
mov
pop
push
loop
outsl
insl
add
sub
jo
lods
fucom
enter
dec
orl
sub
mov
mov
pop
cmc
push
pop
mov
inc
movl
fcomi
jbe
sbb
aam
mov
into
mov
addl
jb
and
push
imul
ja
cmp
dec
mov
fcompl
aad
cs
push
inc
insl
insl
in
lea
jne
fsubrl
dec
lods
pop
dec
ja
ret
lods
and
cmp
inc
je
sarb
inc
mov
mov
rorl
mov
cs
shll
pusha
mov
negb
pop
ret
xor
in
js
inc
sbb
out
xor
push
mov
pop
cltd
in
cmc
out
mov
sub
or
mov
mov
sub
push
mov
push
insb
or
rolb
shll
and
fiadds
sbb
ds
movsb
dec
scas
das
sbb
fstpt
popa
ljmp
aad
ss
xchg
lods
or
aaa
mov
aam
jecxz
cmc
leave
lea
aam
sub
mov
sbb
mov
push
push
jp
pop
xchg
loope
add
push
daa
dec
sub
incl
orl
inc
pop
dec
hlt
in
jmp
mov
movsb
push
je
stos
icebp
adc
adc
clc
pop
jmp
or
fistps
and
push
pop
adc
nop
mov
xor
sbb
jb
stos
pop
jg
js
or
pop
adc
ss
mov
icebp
or
or
ja
sbb
loopne
stos
add
pop
adcb
xchg
or
mov
loopne
mov
push
outsb
in
lret
jecxz
mov
mov
cmp
mov
shr
sbb
jmp
test
in
push
inc
adcb
mov
in
push
push
jge
call
pop
divl
mov
mov
scas
add
int3
lods
sahf
out
sub
sub
pop
mov
dec
lea
sub
and
mov
jnp
push
mov
dec
leave
inc
hlt
daa
inc
adc
push
arpl
loopne
js
stos
ljmp
test
sub
inc
fcompl
fdivrs
inc
jmp
pop
int
mov
xchg
cmp
pop
out
add
push
clc
pop
arpl
js
or
pop
out
push
aas
cmp
xchg
pop
shlb
mov
fimuls
dec
and
hlt
lret
imul
sahf
sbb
enter
fstpt
js
xor
and
pop
cmc
xchg
imul
xchg
lcall
repnz
fisttps
push
in
dec
jmp
push
cmp
outsb
mov
lahf
adc
sahf
push
and
jge
push
bound
mov
xlat
xchg
icebp
sub
inc
cmp
cwtl
add
push
and
out
mov
incb
mov
add
outsb
mov
hlt
lods
xchg
mov
orl
outsl
push
fsubrs
imul
pop
mov
aaa
adc
lods
xchg
jmp
int3
or
stc
jbe
in
xlat
lods
ljmp
xchg
inc
xor
dec
cs
leave
sbb
mov
mov
mov
cmp
inc
xchg
mov
rorb
jge
mov
and
adc
adc
outsb
mov
test
repz
mov
dec
adc
mov
fildl
arpl
imul
pop
mov
ficoml
dec
jae
push
sbb
pop
addb
hlt
inc
sti
pop
mov
ljmp
fs
and
xchg
mov
rol
mov
jl
add
pop
mov
jo
sbb
call
mov
es
add
fildll
in
add
xorl
lea
ss
and
in
or
fists
shl
push
lock
push
clc
ret
mov
push
xchg
ret
into
rclb
push
stc
mov
clc
rcrb
shll
lods
inc
jecxz
ljmp
add
add
loop
stos
sbb
lahf
push
das
pop
and
enter
aaa
pusha
xor
mov
das
dec
xchg
xchg
add
mov
in
shl
insl
pop
subb
and
inc
xchg
push
add
mov
mov
mov
ret
cli
ret
in
mov
sub
jmp
aaa
call
push
aas
push
jp
outsb
cmp
ds
and
mov
test
das
add
or
out
orl
call
and
fwait
mov
push
addr16
pop
jmp
push
or
or
mov
cltd
inc
movsl
xchg
shll
inc
pop
sbb
negb
mov
aad
je
dec
aas
das
fdiv
push
and
in
push
mov
inc
pop
adc
stos
outsb
mov
dec
pop
imul
mov
test
icebp
push
dec
aam
cmp
es
mov
divb
cld
shl
scas
repz
lahf
mov
add
mov
jns
mov
mov
scas
test
pushf
adc
ja
sub
and
jb
mov
loopne
insb
adc
mov
add
pop
decb
push
hlt
xor
or
nop
stc
scas
sbb
repz
or
leave
xor
cmp
pop
insb
jl
mov
ljmp
adc
sarl
leave
mov
mov
pop
adc
lea
lods
jmp
stos
jecxz
pop
clc
pop
mov
es
pushf
stos
xchg
pop
sbb
mov
jo
aas
jp
inc
mov
cmp
mov
rcr
lcall
jp
sub
push
nop
adc
lods
xor
xorb
test
mov
pop
in
nop
mov
mov
inc
in
pop
aam
adc
adc
repnz
push
shrb
sahf
ja
rorl
mov
inc
or
add
mov
push
jo
xor
aad
out
incl
dec
nop
dec
xchg
call
push
mov
dec
adc
lret
adc
jl
inc
mov
push
mov
inc
pop
push
ja
mov
xchg
or
repnz
pushl
xorl
push
cmp
cmp
pop
pop
jno
mov
popa
inc
outsl
push
bound
cmp
jl
ret
xchg
xchg
rolb
cs
mov
xchg
sbb
mov
add
dec
or
cld
mov
and
sbb
stc
jmp
jno
mov
adcl
or
xchg
std
adc
cwtl
lock
je
repz
pop
shlb
mov
cs
shlb
dec
xor
mov
enter
mov
adc
pop
mov
cltd
inc
mov
adc
rclb
test
jbe
sub
gs
or
cltd
mov
sub
jmp
jnp
mov
lock
in
daa
pushf
mov
mov
cltd
and
xchg
mov
ret
fstps
andb
ja
xchg
push
mov
cmp
out
push
or
xchg
cmc
lcall
scas
shll
ja
sbb
std
ja
mov
add
add
jmp
xor
fidivs
sbb
jne
sub
cwtl
push
jge
or
mov
lock
cmp
mov
fwait
pusha
bound
mov
or
inc
mov
in
mov
lods
ljmp
fsub
jne
int3
mov
cmpl
mov
out
mov
fildll
pop
stos
ljmp
cmp
push
pop
fdivl
lods
das
cltd
iret
sub
cli
lcall
sti
xor
movsb
push
clc
test
inc
sbb
mov
iret
sahf
leave
mov
mov
scas
and
test
adc
mov
ljmp
mov
daa
add
int3
ret
clc
pop
mov
cmp
push
cmpsl
push
adc
sbb
cmp
icebp
inc
sub
fcomps
cld
shl
mov
imul
jo
lahf
add
aas
mov
push
into
xchg
out
jo
xchg
and
mov
mov
sub
jbe
das
sub
lea
inc
cmp
mov
inc
mov
outsl
cmp
insl
xor
mov
jmp
call
int3
cltd
test
data16
aas
or
mov
or
loopne
push
or
stos
jge
push
sbb
dec
cmpsb
dec
xchg
xor
mov
cli
push
adc
cmpsb
cmp
or
cmp
test
aaa
dec
xchg
scas
movsl
adcl
subb
dec
mov
xor
rclb
fbld
lods
clc
jmp
stc
test
rol
jno
sti
pop
clc
cltd
mov
inc
pop
cmpsl
mov
mov
and
push
sbb
xchg
add
aam
enter
pop
fwait
mov
push
out
add
aam
mov
rcrb
mov
mov
add
lds
push
addb
out
add
aaa
pop
push
stos
scas
loop
xchg
outsb
scas
loope
pusha
into
cltd
push
mov
or
xchg
rolb
mov
pop
aad
sbb
xor
jns
or
mov
jle
and
lcall
int
adc
pop
roll
addb
movsb
aad
dec
sbb
je
cmpb
jne
mov
mov
xor
and
or
fdiv
out
adc
inc
jmp
icebp
fadds
mov
lock
sub
ss
icebp
outsl
dec
insl
adc
sub
sub
shrb
pop
cli
outsl
mov
and
mov
and
push
cmp
es
rcll
jge
or
fimuls
xor
jg
mov
out
push
sbb
pop
mov
std
mov
roll
and
mov
inc
pop
fadds
inc
rol
decl
pop
sbb
inc
mov
addr16
push
aad
dec
jae
cmp
mov
or
lahf
dec
js
fisttps
and
fstps
push
popf
int
rorb
or
repnz
cmp
pop
pop
push
subl
mov
loop
sub
jbe
xor
in
push
lods
call
mov
dec
call
inc
cmpsl
adc
pop
mov
adcl
mov
xor
mov
lods
dec
out
dec
push
jl
loope
or
sti
push
movsl
cmp
cld
xchg
fisubrs
andb
repnz
sbb
mov
and
loop
sar
adc
mov
sub
ret
sub
push
dec
mov
push
sub
icebp
movsl
push
out
sbb
aaa
mov
shrb
pop
popa
inc
sbb
mov
push
shll
clc
fs
pop
mov
xlat
arpl
cld
stc
or
shll
inc
xchg
xchg
outsb
mov
jb
inc
in
inc
enter
aas
xlat
sub
and
test
out
mov
stos
sub
inc
mov
iret
xor
jle
push
pop
mov
mov
mov
add
test
ja
inc
cwtl
popf
adc
xchg
xor
adc
mov
nop
mov
enter
xlat
aam
call
outsb
xchg
fwait
sbb
lahf
loop
popa
inc
out
jo
add
xchg
out
rolb
and
or
dec
mov
and
lcall
stc
push
fildl
and
int
fs
negl
mov
andl
aaa
add
fstpt
and
mov
fisubrl
cmp
insl
jae
lds
and
add
dec
mov
stc
inc
ret
xor
or
cmp
mov
pop
pop
sbbb
sbb
or
cmpb
sarl
mov
xor
subl
jo
mov
cmp
mov
lret
mov
aad
mov
ss
aaa
cs
int3
adc
dec
inc
adc
iret
or
jbe
lock
int3
sbb
jl
test
add
dec
mov
fildl
fdivs
ret
push
add
fsubrl
push
xor
ja
mov
inc
or
mov
sbb
int3
adc
adc
adc
fidivl
cltd
mov
cli
movb
dec
xor
sub
inc
dec
out
fldl
in
jb
aaa
xlat
push
in
and
inc
xchg
cmp
cmp
test
adc
lcall
out
mov
sub
aas
shll
pop
pop
mov
mov
aad
adcl
test
mov
inc
inc
imul
pusha
dec
jnp
cmp
ret
icebp
loope
add
or
pop
lds
mov
ljmp
sbb
add
test
mov
mov
jl
push
mov
pop
shlb
mov
mov
or
or
jnp
lods
inc
outsb
add
dec
adc
inc
rcll
mov
jb
mov
lods
shl
pop
inc
std
add
cmp
das
xchg
push
stos
and
cld
sub
cli
fwait
call
sbb
adc
adc
or
jns
jb
adc
fimuls
out
sbb
in
dec
mov
gs
or
jecxz
or
scas
mov
inc
jge
mov
pop
push
cwtl
jb
lock
imul
movsl
pop
call
add
adc
je
and
mov
sbb
mov
nop
adc
xor
rcrw
pushf
ds
notb
mulps
xor
or
fldt
insl
inc
inc
in
pusha
sub
pop
and
sbbl
movsl
adc
fsubs
cmp
sub
fisttpl
out
sbb
mov
popa
push
pop
lods
push
cwtl
daa
jg
xor
lock
cmpb
lods
push
sahf
es
adc
das
dec
test
rolb
rorl
adc
loopne
imul
scas
enter
ss
fists
out
mov
mov
cmp
test
push
push
aas
jno
jge
bound
pushf
and
inc
inc
popa
ret
add
js
and
sbbb
loope
pop
ds
xor
dec
and
in
cmp
dec
mov
jne
lods
mov
int3
or
out
pop
mov
mov
cmp
push
je
mov
in
dec
fistpl
loop
std
mov
mov
js
cmpsb
fisttps
outsb
ja
incl
mov
std
scas
gs
scas
test
mov
cli
or
mov
and
push
pop
shlb
sub
jp
xor
mov
test
push
movsb
mov
xor
dec
incb
adc
neg
shr
movsl
sbb
dec
leave
sti
mov
pop
sub
aad
imul
cs
mov
jp
mov
fimuls
mov
pop
cs
rol
fwait
dec
aad
test
sbb
adc
push
mov
jl
fisttpl
mov
xor
addr16
jb
add
push
push
addl
outsb
jle
call
arpl
mov
test
pop
mov
mov
cmp
adc
cmc
mov
add
adc
or
mov
fbld
scas
pop
adc
pop
pop
cmpb
or
mov
dec
mov
pusha
xor
negb
andl
mov
add
lods
fimull
and
add
aaa
hlt
wbinvd
sub
test
mov
sbb
pushl
cmc
fs
add
cltd
mov
cmp
stos
mov
ret
jmp
jnp
aad
dec
jmp
push
mov
filds
mov
cmp
or
clc
enter
ret
mov
ljmp
cmp
adc
cmp
dec
push
fcoml
lcall
push
add
ss
test
pop
mov
pop
test
sub
jb
cli
test
and
push
inc
xchg
sbb
pop
add
cmp
inc
push
shll
aaa
xor
inc
test
and
mov
jmp
push
test
sub
out
push
sbb
lods
mov
clc
lds
sub
mov
outsl
push
cltd
pop
add
jge
xchg
cmp
mov
imul
cs
xchg
adc
cmp
aaa
je
mov
mov
adcb
test
sub
sub
sub
outsl
sbb
idivl
and
lret
cmpsb
sub
fildll
jmp
sbb
sar
stos
js
mov
pop
rclb
ss
pop
lcall
sbb
mov
and
inc
outsb
pop
inc
sti
aas
dec
and
mov
lahf
popa
mov
test
jg
inc
push
xchg
scas
daa
lret
setg
sbb
sbbb
ret
jno
xchg
test
cwtl
and
shrl
leave
loopne
shrb
adc
push
mov
das
pop
fsubs
ficompl
test
in
xchg
lods
je
mov
mov
push
iret
fwait
call
cmpsl
xchg
movsl
fmull
or
not
test
push
test
sbb
jl
cli
sbb
dec
notb
sub
fldl
sub
ss
push
lock
outsl
jl
cltd
les
jg
inc
in
xor
test
jne
lret
loop
scas
add
dec
jmp
sub
rorb
clc
ja
aad
ljmp
xchg
and
jo
cmpsl
sbb
inc
std
outsl
cld
and
sub
outsb
sub
adcl
imul
dec
and
rclb
sti
add
sub
lock
pop
mov
aad
mov
jo
xor
ffree
and
and
les
xor
call
add
push
mov
cltd
rcrb
mov
insb
lds
xor
ljmp
loop
jb
xor
aas
lods
cmp
test
fdivrl
icebp
mov
xchg
inc
pushf
jl
imul
and
inc
leave
testb
popl
lods
mov
ss
je
mov
xchg
fdivl
xchg
inc
test
in
popa
cwtl
pop
dec
dec
in
fistpl
sub
imul
push
xchg
mov
repnz
mov
movsl
mov
popa
jecxz
addr16
jbe
add
into
lret
push
push
adc
shrl
cmp
pop
pop
outsl
bound
fnstenv
in
and
lret
lret
outsb
adc
repnz
roll
sub
adc
clc
push
or
rcr
adc
push
sbb
xor
add
inc
mov
add
daa
pop
mov
sti
ja
cmpsl
addl
loopne
inc
in
int
jmp
int
adc
xchg
lds
inc
dec
das
lahf
scas
xorb
xor
in
movsb
xor
or
or
mov
shll
insl
cmpsb
pop
or
and
repnz
fiadds
or
subb
dec
jl
cs
add
add
orb
push
or
jmp
dec
inc
inc
sub
adc
test
mov
dec
jle
pop
lods
aaa
jno
mov
pop
cmc
fnsave
cli
dec
movsb
les
push
shrb
sub
inc
and
cmpb
cmpsb
mov
movsb
bound
mov
repnz
lcall
movsb
pop
clc
iret
icebp
xchg
xchg
movsl
or
mov
and
inc
into
and
add
outsb
add
movb
xor
rol
mov
in
lret
pop
fmuls
out
inc
fucomip
rol
jno
cwtl
mov
mov
mov
outsb
mov
ljmp
outsl
je
aas
sbb
mov
mov
roll
cmpsb
cmpsb
shll
mov
or
lods
mov
jns
or
jns
cli
mov
mov
or
lea
call
mov
pop
cmp
dec
subl
arpl
loopne
dec
sub
test
adc
movswl
push
addr16
pop
aam
pop
push
aad
rcrb
push
test
sub
subl
lds
iret
xchg
popa
leave
je
push
fwait
inc
scas
push
fwait
sbb
xchg
mov
push
loop
pop
mov
cld
cs
pop
cmp
iret
rdpmc
cmp
inc
mov
into
mov
ljmp
rcll
adc
hlt
dec
or
cmp
adc
aaa
sub
sar
fistpll
or
xchg
js
add
pop
shlb
add
sub
xor
clc
clc
mov
pop
stos
fs
sub
adc
fists
push
xor
out
xlat
sbb
pop
jbe
repnz
in
out
mov
or
cwtl
ficompl
clc
push
inc
inc
pop
sub
pop
cs
in
andb
hlt
jmp
lods
ss
lahf
clc
cmc
inc
clc
imul
fisubrl
ljmp
pop
movsb
or
in
ret
and
and
js
sahf
lds
inc
std
das
inc
insb
scas
pop
inc
and
orb
and
fldl
xchg
adc
xorl
cmp
xchg
pop
sub
std
or
call
xor
push
scas
lods
pop
pop
jle
inc
cmp
lock
jns
add
xchg
ret
mov
sbb
dec
cld
iret
loope
cs
mov
inc
ja
lea
fsubs
push
fsubl
jecxz
shrl
mov
rcl
dec
shll
mov
loopne
aas
pop
push
ss
icebp
and
pop
xor
jo
fidivs
repnz
sub
adc
lcall
rol
cli
jbe
stc
jg
call
rcrl
mov
out
sbb
dec
push
shlb
fcoms
enter
fnstsw
mov
adc
ss
pop
jbe
lret
shll
mov
cmp
lcallw
fdivrp
lcall
cmc
add
rcll
cli
dec
hlt
xor
push
adc
inc
fistpll
xchg
inc
pop
adc
mov
pop
test
xor
mov
and
inc
fcomi
cmp
adc
lret
pop
adc
mov
das
inc
subb
mov
scas
rorb
mov
cmp
sbb
sbb
push
je
and
lahf
cwtl
ss
shrb
or
ret
aad
jge
mov
pop
cs
in
ss
add
popa
mov
xchg
sti
shll
leave
mov
loop
daa
xchg
pop
addps
movsl
ret
mov
xor
mov
push
cmp
jnp
test
std
movsl
fistpl
mov
push
and
cmc
and
dec
dec
shrl
xor
mov
fnstenv
or
incb
out
sbb
xchg
and
xchg
sbb
insb
sub
mov
pop
ljmp
hlt
xchg
cli
adc
iret
ss
mov
cmp
outsl
aas
cli
adc
aaa
xor
mov
cli
aaa
push
inc
ret
adc
cmp
in
movb
or
nop
mov
sbb
inc
pop
lock
push
add
out
outsl
fcom
aad
add
pop
aaa
js
or
lahf
sub
jnp
sbb
cmp
mov
outsl
mov
lods
mov
loope
push
cwtl
add
mov
dec
dec
add
out
loopne
push
and
lahf
pop
mov
mov
xchg
xor
push
dec
sahf
or
das
xlat
iret
xchg
and
loop
inc
insb
pop
fsubs
xchg
movsb
out
cli
bound
insl
andb
xor
xchg
ret
pop
jo
mov
mov
rcrb
lock
int
inc
mov
push
xchg
or
add
ficoml
jecxz
dec
mov
aaa
clc
pop
shlb
mov
jge
inc
jbe
adc
sbb
jae
pop
and
jg
xlat
fldt
dec
rcr
sub
imul
mov
xchg
fwait
cwtl
push
add
push
dec
mov
dec
lea
mov
outsb
test
and
ljmp
icebp
jbe
mov
sub
ret
je
pop
inc
sbbl
outsl
in
mov
lds
jecxz
dec
test
mov
jp
push
mov
add
add
cwtl
fs
call
push
xchg
sub
cli
es
mov
mov
data16
mov
push
push
lcall
hlt
in
ja
push
ljmp
js
aas
cmp
sbb
stos
addl
orb
stc
lds
push
loopne
movsl
mov
enter
sbb
rcll
pop
mov
cld
icebp
inc
inc
js
jb
aam
test
jp
das
mov
fbld
pop
call
add
mov
add
ds
int3
fistpll
in
xlat
push
xor
mov
fcoms
outsl
insl
outsl
sahf
rolb
and
call
pusha
mov
cwtl
push
mov
sarb
adc
imul
test
xchg
pop
outsb
pop
add
add
adc
xchg
jg
jmp
enter
in
push
lahf
jnp
xchg
inc
inc
sbbl
push
aad
fisttps
cmp
and
nop
das
sbb
lret
mov
xchg
hlt
sbb
call
in
aad
aaa
xor
lds
dec
bound
insb
or
push
jmp
jnp
xchg
mov
lcall
adc
adc
ret
inc
mov
es
negb
mov
sub
shrb
jg
mov
stos
add
sub
call
js
pop
enter
sbb
adc
aas
pop
fwait
mov
std
popf
or
pop
jne
in
insl
rcrl
push
ja
xchg
or
mov
jmp
mov
inc
jns
adc
outsb
dec
mov
add
ljmp
or
ljmp
jb
xchg
xchg
or
pop
icebp
xchg
iret
add
addl
out
fwait
outsb
xor
fildll
rcr
xor
mov
cmpsl
data16
add
mov
in
fbstp
mov
imul
pop
bound
sub
or
gs
aam
mov
jb
cmpsl
test
cld
dec
mov
pop
stos
pop
xchg
or
mov
mov
lea
adc
sar
lods
std
stos
mov
push
lock
lea
adc
leave
adc
mov
xlat
insl
mov
add
push
sbbb
ficompl
outsl
test
adc
jp
iret
icebp
or
jge
dec
or
sbb
xchg
test
add
int
dec
insl
loope
call
rorl
jg
mov
mov
jne
sbb
lods
jecxz
into
push
insl
jns
push
addr16
clc
add
hlt
inc
or
add
cs
pop
outsb
or
pop
jno
adc
add
xchg
jle
loop
mov
or
pop
imul
pop
das
fisubs
xor
aam
jmp
xor
daa
pop
shr
popf
adc
sti
test
stos
jg
push
in
in
dec
or
insl
sbb
and
ljmp
xor
mov
cld
xchg
jmp
push
dec
shrl
cmp
sbb
xchg
jnp
rolb
fldt
mov
popa
pop
shlb
pusha
insl
mov
icebp
push
xchg
test
inc
add
lds
imul
leave
jo
repnz
push
outsb
inc
inc
adc
jge
ret
sub
inc
rol
movsb
adc
sbb
stc
push
test
pop
xchg
popf
jb
cltd
pop
cwtl
cmpsb
aas
mov
std
or
lock
xor
movsb
cli
jl
test
mov
mov
pop
push
push
test
mov
insb
pop
test
push
test
fcomip
xor
movsl
or
decb
mov
out
cmp
fildl
int
sbb
mov
test
cmpsb
cwtl
xor
jb
cwtl
stos
fcmovu
cs
movntq
out
sbb
popa
sbb
jb
test
lock
push
dec
xchg
xchg
cld
push
fimuls
xchg
aas
xchg
pop
add
clc
inc
filds
les
mov
sub
rcl
les
daa
out
mov
out
xchg
inc
aam
adc
and
imulb
xchg
jecxz
lea
aad
add
add
lock
flds
xchg
insl
sub
call
or
dec
pushl
nop
jae
add
subl
insb
adc
push
fsubrl
cmpsb
mov
fstl
loop
shll
or
inc
and
aas
mov
add
inc
pop
jle
dec
jmp
xchg
movsl
mov
lds
mov
lea
fldl
mov
leave
repz
pusha
inc
test
or
in
add
cli
add
rcl
mov
repz
adc
sbb
and
cltd
scas
fstpt
ja
rorl
mov
xchg
sub
jne
outsb
ljmp
and
cmpb
xchg
shrl
aad
xor
fisubl
add
dec
push
fadd
add
xchg
or
push
add
and
fdivs
mov
add
icebp
push
mov
clc
imul
scas
adc
push
sbb
ja
cld
mov
loope
out
iret
movsb
add
mov
sbb
sub
jg
xchg
pop
ss
or
mov
jbe
insl
nop
sub
icebp
out
mov
xlat
das
js,pn
into
push
xor
adc
add
and
mov
call
mov
sarb
xorl
mov
add
xor
inc
outsl
sub
nop
mov
cmpsl
test
in
sbb
fstl
fidivl
or
xchg
loopne
popa
mov
outsb
sub
lods
adc
push
clc
adc
push
bswap
mov
ja
jae
ja
sbb
cmp
xchg
lret
je
and
push
es
cmpsl
outsb
or
int
and
push
notb
mov
cmp
es
je
lea
or
inc
fdivrl
addb
cwtl
test
in
outsl
mov
mov
cs
lods
sub
aas
fcmovbe
imul
icebp
sti
ret
add
dec
sub
pop
mov
mov
push
outsb
shl
outsl
fsub
inc
xchg
or
and
pop
daa
and
icebp
das
fmull
mov
jle
jne,pt
sbb
cmpl
sub
jp
cld
dec
jg
leave
test
push
daa
mov
jge
adc
inc
sbb
push
iret
js
enter
mov
inc
push
and
mull
sahf
mov
ljmp
jp
or
in
xlat
leave
push
and
sub
fwait
sub
pushf
cmp
fists
jp
mov
icebp
xor
push
outsl
inc
jmp
fdivr
repz
add
into
jne
ljmp
sub
mov
mov
inc
pop
add
jecxz
pop
mov
jl
inc
test
inc
mov
ja
icebp
push
std
mov
adc
test
iret
pop
pop
mull
jae
push
sahf
fldt
mov
ficompl
mov
push
in
fwait
sub
out
sbb
push
push
test
call
cs
stos
inc
mov
adc
sub
and
vpmacsdql
test
and
or
rcll
outsb
cltd
jle
mov
out
pop
mov
cmp
roll
sbb
pop
hlt
mov
orl
enter
inc
xchg
insb
adc
fs
pop
pop
xlat
xchg
jnp
jo
outsl
mov
sub
sbb
inc
dec
push
and
jne
orl
aam
mov
lds
popf
ss
das
push
or
dec
imul
shl
cmc
ja
jne
data16
push
push
xchg
mov
test
loopne
mov
push
jge
inc
dec
inc
xchg
adc
mov
dec
sahf
cmp
addl
sbb
add
or
xchg
fcomi
cmpsb
dec
push
repz
xchg
pop
inc
les
add
push
arpl
cmc
call
or
sub
movl
insl
outsl
mov
repz
pop
cmp
cmpsb
pop
es
dec
loope
mov
dec
add
sbb
push
aaa
mov
out
fldt
jne
cmp
jmp
inc
dec
es
jo
inc
push
and
mov
push
imulb
push
jl
inc
add
and
push
sub
jl
outsb
outsl
fwait
pusha
mov
sbb
pushl
mov
xor
ret
cmp
je
test
outsl
push
shl
mov
arpl
mov
hlt
add
mov
cmpl
inc
xor
inc
sbb
cmp
adc
sub
lret
and
mov
jg
mov
insl
add
lods
mov
or
in
pop
pop
xor
cmpsb
mov
out
and
xlat
ret
iret
mov
add
or
outsb
aad
dec
lret
stos
movsb
insl
repnz
in
aaa
sbb
mov
mov
mov
call
cmpsl
das
push
cmp
xchg
xor
mov
outsl
loopne
mov
and
fdivr
decl
call
loop
test
push
lret
and
push
jne
test
inc
lock
jmp
or
pop
push
inc
jmp
je
aad
out
sub
mov
and
xchg
ljmp
jge
xchg
mov
mov
in
pop
jae
mov
push
dec
mov
hlt
lock
pop
fcmovb
lods
inc
out
ja
rcrl
aad
insl
adc
pop
negl
mov
adc
inc
inc
rcll
pop
pusha
xor
int
das
jb
stc
pop
and
addl
xchg
clc
xchg
idiv
arpl
rorb
and
imul
jb
push
mov
xor
outsb
mov
mov
shlb
mov
decb
subb
fs
adc
repnz
call
ret
arpl
sub
lcall
mov
jne
and
insb
inc
cmp
mov
in
adcb
sahf
sub
pop
pop
mov
mov
jnp
repnz
xor
test
mov
adc
push
outsl
loop
xchg
in
mov
cmp
mov
inc
sub
push
mov
icebp
mov
adcl
mov
fnsave
sub
sbb
cmpb
cmp
jmp
mov
daa
lahf
pusha
mov
rorb
sub
or
lds
cltd
xor
or
mov
popa
push
stc
cwtl
icebp
inc
cld
jmp
shll
mov
clc
out
fistps
cmp
mov
out
mov
push
mov
inc
insb
cmpsb
test
test
xchg
leave
adc
fsubl
test
movb
mov
lods
xchg
push
fucomip
das
std
dec
xchg
out
dec
dec
shrl
aam
pop
sub
in
lcall
mov
mov
jb
cmpsl
sbb
jmp
push
push
push
loop
cmp
mov
mov
adc
and
xor
mov
xor
pop
nop
icebp
mov
or
inc
shlb
pop
flds
in
dec
outsb
es
call
or
repnz
movsl
pop
cmp
icebp
jg
sbb
jae,pn
ret
loope
xor
std
scas
inc
dec
mov
test
mov
mov
xchg
ja
mov
cmpsb
jne
mov
push
scas
mov
or
lcall
cmp
call
gs
or
dec
in
data16
mov
dec
sbb
sub
dec
pop
sbb
and
xchg
cltd
cmpsl
lcall
fildl
je
stos
fildll
es
pop
mov
cmc
adc
adc
imul
and
gs
adc
push
sbb
push
mov
adc
mov
dec
jmp
in
mov
mov
mov
add
clc
lock
sbbl
mov
and
push
int3
das
fcoms
clc
add
popl
les
push
mov
shl
pop
arpl
rcrb
cmpb
pop
popf
xchg
or
mov
aas
mov
adc
push
adc
mov
or
loopne
frstor
dec
roll
xchg
sub
mov
mov
sub
pop
push
push
mov
fiadds
mov
push
dec
lds
js
add
cli
data16
ret
pop
add
movsl
pop
push
mov
inc
xor
jp
loop
ja
test
mov
ret
mov
ret
push
rolb
inc
sbb
ret
rorb
dec
pop
push
out
or
add
inc
into
jg
inc
ja
test
lahf
jecxz
dec
mov
cmp
hlt
sbb
push
xchg
iret
mov
scas
pop
push
mov
push
and
push
push
repz
fadds
dec
popa
pop
jmp
push
mov
test
aad
mov
xor
inc
mov
inc
jmp
and
dec
mov
bt
cmpsl
cltd
std
pop
pop
and
clc
sbb
and
cmc
lret
sub
jg
dec
dec
ljmp
inc
xchg
add
add
fadd
negb
mov
mov
jecxz
cli
movzwl
xchg
jp
sbb
in
pop
mov
sahf
test
adc
enter
test
in
test
insb
inc
bnd
mov
jge
sbb
inc
and
hlt
test
add
sub
jnp
clc
shr
mov
add
popf
push
popa
sub
jno
adc
daa
lea
jecxz
lret
xor
pusha
mov
xor
mov
sub
cmp
mov
lods
fisttpl
lds
fcompl
add
stos
dec
cmp
push
jne
lods
xchg
daa
xchg
int3
fsubs
inc
cld
mov
jl
fildll
loopne
adc
outsl
inc
add
outsb
call
lock
test
ds
or
aaa
push
cli
xchg
add
aaa
or
push
adc
repnz
scas
mov
mov
cmpl
adc
dec
dec
push
inc
xchg
push
dec
jge
ljmp
inc
add
dec
movl
cmpsb
xchg
inc
sub
jmp
aas
mov
lret
fsts
cltd
pop
mov
adc
jp
xchg
sub
xor
push
repz
out
xor
mov
fmuls
jo
mov
dec
cwtl
add
and
inc
cwtl
repz
and
mov
std
fiadds
sahf
mov
arpl
orl
sub
push
xlat
inc
mov
fsubs
loop
xor
out
fcoml
notb
sub
push
std
cmpsb
sub
cmpsb
sbb
shlb
fwait
jl
inc
rorb
dec
sub
sub
mov
sbb
xor
xor
scas
jno
sahf
fcomi
xchg
mov
out
and
mov
mov
mov
and
sub
cmp
mov
out
xchg
fmul
int
sti
cmpsb
pop
or
mov
rcl
push
lcall
sbb
jns
into
cmpsb
jbe
mov
in
lcall
into
cmp
inc
stc
insb
shr
outsl
add
jl
cmp
into
aad
mov
stos
add
rcr
inc
lods
jmp
mov
or
cltd
loope
add
mov
sbb
xor
mov
jae
cld
outsl
insb
cmp
insl
pop
mov
push
enter
sbb
jmp
lcall
or
mov
mov
sarb
add
scas
mov
imul
or
icebp
dec
pop
lds
lods
xor
lea
repnz
xor
lock
pop
or
mov
push
mov
adc
jmp
cs
push
inc
push
push
cmp
bound
jne
push
mov
dec
test
je
nop
sbb
mov
pop
push
testb
scas
and
add
js
add
push
stos
aam
push
loope
sarl
and
inc
mov
xchg
adc
mov
mov
cmp
push
or
mov
inc
fldt
out
shll
repnz
mov
dec
or
or
adc
mov
movsl
xchg
jmp
dec
fwait
subb
addr16
cmp
fmull
cmpsl
cltd
xchg
clc
call
fistps
push
mov
jne
dec
imul
fcmovne
scas
ljmp
jmp
je
in
inc
mov
stc
std
or
mov
leave
jle
js
mov
inc
sub
in
aaa
movl
pop
pushf
sbbb
std
inc
movsb
pop
movsl
arpl
aas
push
and
pop
adc
jnp
push
jge
sbb
xorb
xlat
shlb
dec
xchg
cld
fistpl
xlat
lods
cmc
dec
lahf
dec
add
xchg
in
cmp
jo
pop
int
cltd
out
adc
into
ss
xchg
lret
xchg
leave
xor
and
das
cld
mov
pusha
and
jle
arpl
xchg
dec
inc
mov
mov
inc
mov
movsb
hlt
mov
jp
pop
mov
jecxz
imul
mov
das
add
sub
cvtdq2ps
fsubrl
inc
dec
inc
imul
xorb
shll
sbbb
inc
stos
inc
xchg
cmp
pop
mov
and
out
cmp
call
test
xlat
shlb
dec
aaa
push
inc
into
cmp
xchg
mov
xchg
inc
jp
stos
inc
jle
xchg
in
mov
inc
enter
lea
addl
ljmp
mov
sub
fstpl
sarb
cmpb
cmp
adcb
cmp
push
js
shlb
aaa
adc
loope
mov
or
pop
jne
sbb
lret
jb
sub
jle
pushf
arpl
mov
roll
outsl
fdivrl
sub
subl
jge
add
bound
mov
jne
subl
fsubs
loopne
pop
adc
popf
js
xor
testb
mov
sub
fiadds
or
adc
cmp
adcl
call
shlb
mov
add
fnstcw
and
scas
add
mov
push
int3
and
mov
mov
test
jne
shlb
in
or
loop
incb
mov
mov
icebp
dec
jmp
std
adc
jne
xchg
sbb
icebp
fidivrs
dec
lahf
cmp
je
cmp
pop
pop
mov
cmp
adc
lock
adc
dec
adc
rclb
js
loop
mov
xchg
lea
ljmp
stc
jg
mov
loop
mov
pop
sti
mov
rcrb
xchg
lods
stos
mov
adc
rcrl
shll
mov
pop
jo
sbb
xor
dec
lahf
cmc
push
repnz
rcll
mov
xchg
cmpsb
hlt
or
bts
cwtl
mov
call
mov
imul
ror
in
pop
xchg
les
movsb
or
test
push
lahf
mov
aad
int3
mov
mov
cmp
or
nop
pop
mov
xchg
cmpsl
out
jns
mov
mulb
mov
push
xor
clc
daa
call
ja
mov
aam
xsha256
cmpsb
adc
push
adc
mov
nop
jp
or
mov
cmp
fdivr
mov
jnp
mov
jb
mov
push
aas
lret
jnp
loope
frstor
ret
sti
nop
enter
cld
inc
jmp
add
push
and
dec
or
pop
mov
pop
das
pop
movsb
xchg
movsl
cli
sahf
jo
mov
and
xchg
mov
jbe
and
push
sti
out
pushl
int3
in
pop
adc
xlat
cmpsb
mov
stos
test
adc
cmp
fs
pop
inc
jno
mov
jnp
in
ljmp
into
test
jns
or
dec
in
push
xchg
pop
cwtl
inc
push
mov
movsl
inc
jne
xor
loope
and
mov
fstpt
dec
xchg
push
in
or
es
fidivrl
cli
push
in
aaa
arpl
mov
stos
and
pop
sbb
add
pop
cmpsb
adc
cli
jne
leave
mov
stc
pop
inc
jns
mov
dec
mov
shlb
xchg
nop
sub
and
fwait
xorb
sbb
push
or
jbe
mov
lret
inc
outsb
add
xor
addb
or
dec
cltd
lods
xchg
or
mov
rcr
sarb
shrb
cld
mov
xchg
or
add
push
fucomp
out
and
mov
cmc
pop
push
add
inc
sub
or
inc
rcll
mov
adc
subb
mov
scas
push
and
cld
jmp
aad
jae
and
insb
std
mov
out
add
ds
mov
loop
movsb
outsl
sub
sbb
insl
ffreep
dec
popa
popf
adc
fwait
pop
fdivrp
negb
xchg
sub
or
jge
cld
movsb
or
outsl
or
sbb
push
rcr
fldt
jbe
andl
adc
insl
outsb
fnstenv
inc
icebp
jg
in
ds
cs
out
subb
out
loope
testl
mov
sub
fiadds
or
or
dec
les
jl
and
in
cmp
fnstenv
inc
stos
clc
sub
dec
shlb
jae
adc
push
mov
cmc
push
je
adc
and
adc
jb
repnz
pop
pop
out
mov
fwait
outsl
lret
or
sbb
adc
mov
pop
jae
sub
cld
lea
pop
aas
std
mov
pop
mov
shl
test
mov
sbb
gs
cld
push
jecxz
xchg
mov
mov
leave
aaa
ret
push
stos
or
fsubs
call
or
mov
push
cmp
rol
inc
repnz
jle
scas
cmp
ret
mov
push
in
testl
jo
test
popa
sbb
mov
dec
mov
push
or
shlb
cmpsl
adc
lods
loope
repz
jle
loope
mov
mov
sbbb
jno
test
jae
adc
xlat
outsl
outsl
lods
xor
jno
movsl
cmp
dec
mov
lea
insb
mov
emms
nop
push
adc
in
icebp
arpl
ja
outsl
xchg
stc
sbb
mov
and
or
xchg
mov
sub
test
push
and
leave
dec
xor
sti
add
aaa
or
jg
cld
inc
or
xchg
sub
xor
or
mov
popf
or
xor
lea
aaa
or
dec
ret
push
jns
out
and
mov
dec
and
ficompl
push
dec
insl
js
pop
adc
mov
mov
xchg
mov
divl
icebp
sub
iret
mov
subb
sbb
xchg
inc
jae
mov
pop
sub
fistpl
in
cmc
push
leave
push
adcl
stc
xchg
push
stos
call
push
push
jne
inc
mov
cli
xor
dec
xchg
ja
pop
js
xor
int3
sbb
in
mov
cmp
test
movq
fists
pop
inc
or
jecxz
sub
lcall
aaa
mov
add
lret
adc
pushf
pop
and
ja
adc
fs
aad
arpl
es
or
lds
jbe
jb
xor
dec
pop
mov
xor
dec
lods
xlat
aad
mov
add
mov
inc
jecxz
mov
add
int
mov
aaa
mov
in
xor
ret
jbe
sbb
ret
sub
pop
sbb
sbb
and
mov
je
xchg
xchg
mov
fiadds
xor
xchg
cmp
pop
xchg
mov
test
push
mov
das
das
insb
mov
rcrl
push
push
icebp
lea
pusha
push
xchg
fidivs
and
aam
jmp
push
mov
cmp
sub
into
push
fistpll
push
pop
mov
adc
inc
inc
rcrl
aaa
mov
xchg
pop
cmp
inc
inc
sub
call
icebp
outsl
daa
cmc
or
fbld
cmp
add
rorb
push
orb
addb
hlt
mov
shrb
ret
int
and
sti
push
push
pop
sub
inc
out
inc
push
movsb
scas
and
mov
nop
adc
loop
in
mov
popf
jmp
push
add
fildl
xchg
insl
sbb
xchg
stos
fbstp
repz
std
xchg
popa
push
jge
sbb
sbb
in
subb
lcall
ja
fisttpl
and
mov
dec
cmc
push
pop
adc
or
push
jge
xchg
into
push
test
push
cld
pop
or
dec
or
dec
add
loop
lods
aad
fsubs
iret
mov
lock
sbb
sbb
jge
or
ret
jecxz
lret
mov
ljmp
mov
xor
sarl
out
pushf
lcall
xor
out
sbb
sbb
mov
and
test
push
fwait
push
clc
lcall
mov
enter
ficoml
in
outsb
das
add
adc
jmp
test
xchg
cmp
sbb
jg
cmp
cmc
mov
les
cmpsl
repnz
mov
mov
nop
sbb
or
push
insb
mov
fwait
jo
test
nop
xchg
int3
icebp
xor
mov
test
inc
xor
or
sbb
dec
add
inc
lahf
adc
dec
scas
fildll
arpl
pop
sub
xchg
das
cmp
or
jo
jbe
cs
fs
ss
mov
cld
das
call
inc
or
call
adc
repz
ljmp
int
push
sub
aam
rcrl
loop
or
inc
mov
test
jno
outsl
test
cmp
ljmp
dec
test
adc
mov
and
test
pop
sub
adc
shl
rclb
hlt
enter
imul
aaa
pop
jle
or
adc
dec
and
pop
xlat
rdmsr
std
adc
mov
sbb
add
into
adc
xorl
inc
aad
inc
mov
add
and
scas
push
fldl
and
sbb
push
insl
lea
pop
arpl
jecxz
push
push
mov
xchg
cli
jb
movsl
xchg
mov
pop
jne
in
push
cmpb
lock
clc
xchg
xor
xorb
mov
jp
popf
daa
movsb
jo
sbb
mov
stos
mov
jne
sti
je
icebp
pop
outsl
pop
xor
cwtl
xor
push
movsl
push
hlt
in
push
jb
rcrb
loope
cmpsb
aaa
push
dec
int3
js
inc
or
push
jns
vfmadd231ss
push
cmp
sub
xor
stc
dec
or
insl
adc
add
adc
fcomp
mov
lds
mov
or
stc
add
sarl
aas
rcl
mov
lods
sub
sbb
cmp
shl
fs
or
push
cmc
mov
mov
sub
je
sbb
cmp
pop
adc
std
adc
lret
rol
mov
sbb
cwtl
sub
and
jns
clc
dec
lcall
or
or
out
pop
mov
and
lret
pusha
dec
rorl
xchg
jmp
sbbb
xor
inc
cmpsb
std
xorb
and
std
fistps
hlt
and
cwtl
in
jo
test
out
mov
daa
cmpb
insb
leave
int3
movsb
xor
rolb
mov
test
das
mov
cmc
push
xor
aaa
ficoms
shll
add
adcb
call
in
sbb
lcall
dec
dec
stos
rol
movsl
mov
or
aaa
mov
cli
lds
mov
sub
jg
mov
push
mov
out
pop
add
jno
pop
xor
pop
aas
pop
aas
add
loopne
mov
pop
mov
daa
scas
fldt
mov
call
jbe
mov
ss
add
or
or
dec
aas
add
addb
fildll
adc
adc
out
mov
jl
jle
loope
movsb
inc
adc
jae
enter
fsubrl
sbbb
push
and
xor
pop
or
imul
icebp
out
std
int
shll
add
mov
hlt
loopne
xor
lods
adc
sti
fstp
fidivs
loop
mov
push
push
lock
mov
mov
in
pop
cld
xchg
xchg
aas
dec
imul
test
icebp
out
lea
clc
inc
sub
dec
fucomip
jmp
cmp
sbbl
or
inc
mov
loop
lds
sbb
scas
dec
ret
loop
std
or
sahf
dec
xchg
pop
icebp
mov
lcall
jno
shll
mov
add
or
push
push
add
lcall
sbb
test
outsl
pop
mov
fstpl
adc
push
outsb
sub
push
push
icebp
lods
add
adc
in
sbb
cmpsl
cltd
hlt
lret
pop
fadds
les
jnp
xor
push
xor
adc
mov
mov
fcom
xchg
xchg
fisubrl
or
imul
xchg
jbe
jno
lds
scas
mov
add
scas
ljmp
ret
mov
jge
sub
stos
push
pop
stos
cs
or
aad
cmpl
imul
mov
cwtl
ja
loope
jecxz
je
xchg
pushf
call
popa
xor
shll
mov
add
movsl
je
jbe
aam
adc
pop
loop
push
shrl
pusha
divl
fmuls
xchg
outsl
jge
mov
add
dec
icebp
or
push
push
pop
inc
scas
cmpsl
das
rcll
repnz
push
fildl
lret
shlb
push
lds
call
loop
dec
inc
aad
pop
loop
mov
shlb
sbb
js
jnp
and
jmp
mov
int3
and
rcr
test
cmc
call
cs
aam
lods
fcomip
lretw
xorl
mov
jb
and
je
pop
iret
lds
or
xor
aam
mov
inc
cwtl
aaa
jnp
add
push
imul
mov
xchg
pop
pop
fbstp
jecxz
push
idivl
mov
push
aaa
mov
test
xlat
xchg
dec
pop
jbe
clc
and
fidivl
call
adc
jg
push
or
gs
test
call
push
xor
cmp
fiaddl
bswap
inc
mov
lods
mov
lock
in
mov
jle
into
inc
rcll
mov
adc
pop
scas
icebp
pusha
fwait
mov
add
ss
mov
ret
in
sbb
jecxz
and
sbb
mov
add
fldt
push
flds
or
outsl
cmp
mov
pop
stc
pop
sbb
sbb
or
pusha
xchg
les
adc
cmpsb
mov
clc
add
dec
mov
adc
mov
mov
cwtl
pop
sub
push
dec
mov
lahf
stc
or
nop
xor
sbb
aas
fwait
push
test
insb
insb
dec
xor
jnp
cltd
rclb
clc
mov
push
sbbl
rolb
pop
adc
jne
jne
lret
sbb
adc
mov
test
inc
cmpsb
inc
rep
outsb
fwait
clc
adc
mov
mov
scas
pop
pop
outsb
outsl
pushf
adc
or
mov
fiadds
jg
cld
push
jmp
cmpsb
dec
arpl
sub
fildl
cmp
fsubrs
fidivrs
arpl
sub
sbb
add
jg
fs
rcr
push
lret
adc
push
mov
pop
imul
sub
jl
dec
pop
shlb
xor
push
call
or
or
loop
push
dec
cmp
jnp
sub
mov
pop
bound
lret
pop
mov
testl
stos
in
dec
adc
lds
pop
xchg
les
adc
mov
int
lds
push
push
jle
lods
xchg
mov
ja
add
and
xor
push
dec
or
mov
jnp
mov
daa
xchg
xchg
sahf
fstl
ds
push
xor
aad
fistpll
jmp
rcll
loopne
xchg
add
mov
filds
and
popf
sahf
stos
xor
jp
aaa
push
icebp
cmp
mov
stc
jl
lcall
lods
lods
xchg
popf
push
movsl
or
insl
cmp
lock
jbe
out
mov
dec
stos
loop
decl
mov
and
dec
icebp
mov
mov
xor
stos
xor
sub
sti
call
repnz
loopne
xorb
adc
inc
sahf
test
mov
cli
jb
add
fs
jne
movb
mov
lea
lods
mov
mov
add
test
mov
fbld
sbb
cltd
and
mov
sbbl
aam
pop
inc
xor
ja
fwait
rcrl
mov
xchg
ret
mov
xchg
inc
adc
sbb
add
lods
es
inc
and
pop
je
out
sbb
dec
movsl
in
push
and
dec
push
sbb
sub
in
cmp
cmp
clc
adc
push
pop
push
adc
ror
adc
sar
pop
js
ss
sahf
fisubs
in
enter
mov
aad
xlat
testl
flds
pop
mov
js
test
dec
push
pop
jmp
lret
or
pusha
push
mov
pop
loop
pusha
adc
mov
push
adc
emms
mov
frstor
push
fcoms
loopne,pn
sub
fisttps
push
pop
pushf
adc
fildll
pop
insl
test
rorl
test
jp
mov
push
xchg
cmp
test
jbe
rorb
mov
xchg
into
push
lret
rcr
adc
or
sahf
test
inc
repz
test
add
push
sti
push
cmpsb
andl
lods
add
sbb
lods
fadds
jg
sub
out
sti
in
out
pop
and
push
jg
xchg
int3
push
mov
dec
stc
and
outsl
pop
loopne
imul
sbb
xchg
add
cs
lea
lahf
into
cmpsl
mov
push
add
in
mov
sbb
pop
mov
mov
ret
push
cwtl
or
xor
mov
push
stos
mov
or
icebp
ret
mov
xchg
insl
push
jnp
scas
or
mov
fistpll
sub
sub
das
mov
nop
rolb
or
lcall
dec
je
mov
inc
fldt
mov
add
xor
mov
add
mov
xchg
cmp
cwtl
repz
nop
dec
mov
add
and
shlb
cmp
mov
xor
ret
pop
dec
xchg
mov
lcall
push
push
jecxz
inc
pop
scas
and
jmp
ds
jg
bound
icebp
aaa
ud1
rclb
fcomip
lods
aad
xor
fsts
mov
arpl
or
leave
push
xchg
jne
mov
push
sub
jecxz
sub
push
rcr
adc
or
in
outsl
sub
push
popf
xchg
mov
lcall
cmpb
movsl
adc
cli
inc
mov
and
adc
xchg
fildll
loope
mov
pop
lods
and
jae
or
jo
adc
lret
enter
repnz
add
int3
clc
sbb
pop
adc
addr16
cmp
inc
add
je
icebp
add
mov
inc
aaa
dec
mov
add
inc
ficoms
clc
adc
adc
ljmp
jecxz
push
inc
dec
mov
mov
rolb
and
sub
das
iret
pushf
or
sub
and
lods
sbb
or
push
scas
jmp
loope
adc
pop
adc
cltd
std
aaa
shrl
pop
push
mov
lahf
push
pop
adc
outsb
inc
js
pop
xlat
fcomp
push
dec
je
into
incb
pop
add
or
nop
adc
jg
pop
and
fistpl
cld
adc
jns
inc
stos
test
popf
pusha
pop
dec
pop
arpl
mov
in
mov
mov
push
insb
push
push
adc
outsl
adc
sbb
in
mov
adc
icebp
mov
sub
sub
test
and
xchg
dec
fisubl
cmp
jnp
push
push
pop
ret
add
lock
mov
pop
gs
call
mov
push
addr16
mov
push
xchg
mov
cmp
or
fisttpl
outsb
sub
inc
xor
jmp
pop
andb
push
mov
dec
push
das
sub
daa
cmp
hlt
jmp
mov
cwtd
push
cmp
outsl
outsl
jo
pop
and
jle
loop
mov
loop
or
inc
je
outsb
or
jle
das
mov
add
jmp
xchg
xchg
mul
outsl
call
sub
xor
lahf
arpl
or
clc
or
dec
pop
fdivr
sbb
mov
adc
jo
cmp
cld
adc
mov
mov
pop
aas
jecxz
mov
cld
sub
sbb
rorb
incl
xchg
fnstsw
sub
ficoms
rclb
xor
mov
xchg
test
inc
xor
push
js
aaa
sub
arpl
sbb
sbb
cs
or
push
call
fnstenv
cmp
or
ficoml
pushf
dec
cmpsl
pop
pop
cld
cli
pop
mov
mov
ja
addr16
test
mov
aaa
clc
pop
rcll
ja
mov
out
mov
pop
dec
dec
cli
jmp
popa
push
into
cli
xlat
into
ss
insl
sti
out
jg
enterw
sbb
sbb
stos
sahf
inc
mov
xchg
add
scas
subl
inc
mov
add
and
push
cli
dec
mov
push
imul
mov
movsl
xor
mov
or
fs
mov
cwtl
pop
mov
sbb
cmp
mov
insl
jmp
rolb
push
into
int3
lods
xor
iret
das
shl
pop
jnp
jmp
mov
ss
push
or
pop
sub
clc
jg
in
jmp
push
inc
nop
iret
pop
add
push
push
test
int3
insb
in
pop
aaa
adc
mov
mov
mov
mov
ret
stos
movsl
or
mov
aad
mov
das
and
cmpsl
push
push
mov
cmp
dec
aad
cld
inc
mov
or
jge
or
inc
dec
and
sub
pusha
inc
daa
mov
lcall
adc
enter
notl
and
mov
outsl
push
je
int3
cmp
mov
loope
dec
mov
pop
inc
jnp
pinsrw
lea
dec
or
ret
lods
jnp
ffreep
pop
xorb
lea
adc
cmc
out
pop
enter
and
enter
insl
aas
xchg
add
dec
or
push
arpl
subb
mov
mov
ljmp
std
sar
push
jmp
fstpt
add
stc
in
fisttps
xchg
call
xchg
gs
jbe
and
sti
push
sbb
data16
jecxz
movsl
gs
mov
add
outsb
xchg
jns
aaa
xor
pop
in
or
sbbb
pop
xchg
in
jecxz
push
sbb
push
inc
xor
cmp
shll
fisttpl
ret
lds
jns
mov
rolb
and
daa
add
jne
cmp
call
insl
sti
lods
mov
push
cmp
aaa
aam
push
fnsetpm(287
and
aam
and
pop
outsb
test
sbb
iret
mov
jmp
cmpsl
mov
data16
dec
add
dec
lret
ljmp
pusha
test
call
and
sbb
scas
push
lret
aam
in
xchg
and
adcb
push
sub
rorb
mov
mov
xor
jge
shll
test
add
mov
repz
jo
mov
pop
lods
xor
scas
inc
outsl
sub
jecxz
fistpl
fcomp
push
xchg
pop
jae
inc
mov
mov
xor
pop
test
cmc
aas
testl
subl
inc
lds
sub
cmpl
xor
pop
in
outsb
or
mov
push
lds
mov
popf
and
pop
xor
xchg
add
and
outsl
pop
xchg
sub
divb
jmp
les
sub
pop
inc
jo
adc
jle
or
mov
adc
outsb
cli
mov
sub
xor
hlt
gs
clc
arpl
cmp
js
pop
sbb
jge
push
add
xor
mov
inc
mov
outsl
outsb
jecxz
movsl
sbbb
xor
push
adc
incb
fildll
data16
add
mov
cmc
jmp
jmp
sub
xor
iret
or
dec
jecxz
adc
movsb
test
or
in
clc
cmp
pop
aad
nop
pop
xor
and
mov
repnz
and
inc
or
icebp
mov
out
push
mov
fildll
sbb
jp
and
push
gs
mov
rcl
ja
push
jno
mov
aaa
fs
fcmovnbe
cmpsl
cwtl
aad
push
ret
hlt
cli
or
call
roll
pop
clc
pop
push
pushf
pop
ja
xchg
cltd
jns
inc
es
daa
sbb
add
sub
cmc
pop
push
xor
scas
scas
sub
sbb
dec
xchg
lret
cs
bound
sarb
dec
inc
dec
pop
fdivrs
lds
cmp
out
call
mov
dec
pop
push
inc
dec
es
fstp
andb
push
xor
sbb
cmovb
lds
lods
mov
or
lret
dec
mov
mov
shr
push
ss
xchg
and
cmpsl
loopne
xchg
jns
or
jnp
addr16
fwait
xchg
inc
jnp
and
not
fcmovnb
or
lds
sub
enter
cld
cmp
fcmovbe
pop
mov
fimuls
iret
or
mov
mov
and
daa
jmp
adc
subb
rcl
mov
sub
ds
adc
mov
add
sbb
test
mov
loope
jg
dec
sub
jp
aaa
xor
xor
cltd
aad
dec
mov
push
arpl
inc
int
add
imull
lock
cld
dec
out
xor
clc
pop
jle
stos
sub
xchg
jns
leave
call
mov
push
xor
sub
push
lret
ja
inc
rolb
push
rcr
js
xchg
push
aam
xchg
js
addl
jns
sub
mov
pop
lcall
fwait
jecxz
pop
mov
mov
sub
negb
xor
jno
fistps
xchg
mov
dec
ss
mov
or
dec
xchg
movsl
xchg
mov
jl
daa
sub
push
lret
movb
mov
add
call
jb
cmc
xor
pop
cmp
scas
push
jecxz
push
clc
push
lcall
std
and
bound
ja
mov
inc
mov
mov
push
mov
fs
imul
mov
pop
jbe
clc
xor
jge
repnz
lcall
jae
out
in
aad
add
xor
mov
int3
push
xchg
enter
movsl
aam
andl
fdiv
in
sub
inc
cmp
aam
js
xchg
push
sbb
push
sub
pop
int3
ds
sbb
mov
fisubl
test
inc
sub
add
mov
rorb
lret
ja
pop
lods
test
inc
in
in
fbstp
aad
or
sti
out
sbb
jae
and
cli
mov
outsb
sbbl
inc
je
stos
lock
mov
stos
add
sbb
je
add
mov
ljmp
xchg
adc
add
push
cmpsl
xchg
mov
aaa
ss
xlat
inc
cld
enter
faddl
insl
inc
pushf
mov
shlb
sub
mov
mov
cmp
inc
add
addb
std
mov
dec
jno
out
or
mov
inc
push
xchg
jl
loope
mov
in
arpl
push
sar
test
aad
pop
inc
jg
js
dec
popa
jno
inc
lds
jb
sub
das
cmp
out
and
lds
insl
hlt
jne
sub
lahf
out
push
std
lods
mov
faddp
inc
adc
mov
inc
movsb
in
jnp
add
jl
inc
sub
popa
fcompl
sti
stos
pop
or
push
pop
mov
ret
fsubs
in
ljmp
sti
js
pop
pop
repz
mov
mov
dec
and
jno
or
pop
repnz
dec
xchg
cmp
pop
jnp
gs
push
ljmp
mov
call
add
mov
push
cmp
sbb
xor
insl
xchg
jmp
lret
push
push
test
jg
imul
mov
push
inc
jne
and
push
mov
xchg
xor
mov
arpl
jp
jg
inc
mov
enter
push
xchg
sbb
mov
jnp
adc
jo
call
pop
mov
imul
jle
inc
sti
out
cmp
mov
sarb
insb
inc
push
push
je
pop
decb
adc
push
or
xrelease
jg
lret
aam
sbb
xchg
jo
push
adcl
and
test
inc
insl
fisttps
loop
mov
pop
sub
aaa
and
shl
pop
push
fwait
outsl
roll
clc
cmpl
push
in
and
shlb
lds
imul
push
mov
in
dec
in
mov
sub
mov
gs
sti
sbb
cmp
mov
jecxz
fdivr
adc
sahf
push
cli
rolb
sbb
lret
push
cmp
jle
mov
subb
mov
cmp
repnz
dec
pop
jb
decb
cmp
sub
test
repnz
mov
xchg
or
mov
fcomps
mov
pop
mov
loopne
pop
add
xor
mov
loop
add
mov
push
stos
icebp
pop
inc
mov
test
add
shll
lret
loop
mov
movb
icebp
jns
push
pop
dec
dec
mov
repz
cmp
pop
sbb
decl
xchg
sub
dec
mov
xchg
ljmp
shlb
int
mov
mov
fcomps
mov
add
fwait
xor
mov
dec
les
cmpl
and
ljmp
das
es
cmp
adc
or
dec
sub
lea
push
add
mov
repz
notl
dec
sahf
adc
ror
arpl
lock
jecxz
jp
mov
push
lods
decl
es
test
insl
jle
push
mov
dec
mov
mov
adc
cmpl
aas
add
test
mov
in
fnstcw
jle
jg
xchg
pusha
mov
test
and
pop
pop
mov
outsl
les
xchg
jb
mov
add
insb
imul
movsl
push
hlt
sub
jo
add
adc
fisttps
sahf
cmp
loope
sbb
fildl
pop
adc
mov
es
sti
movsl
mov
mov
test
cltd
xchg
cld
push
xchg
cmpsb
loopne
and
and
std
jae
sbb
dec
mov
addr16
cmpsl
add
pop
sbb
adc
outsl
movsb
xorb
mov
test
add
clc
out
test
pop
std
or
cmp
pop
das
push
push
fld
cmp
insl
or
mov
jne
shrl
mov
inc
add
rolb
in
sub
jp
mov
mov
or
out
jnp,pn
push
ljmp
mov
shll
xor
or
fldt
je
mov
adc
into
mov
ret
popf
out
xor
jnp
mov
jmp
leave
xchg
mov
mov
sub
flds
sbb
loop
stos
push
out
mov
aam
leave
push
mov
mov
movsl
mov
pop
lret
push
jp
mov
insl
add
paddsb
or
mov
aaa
jbe
repz
in
lods
inc
push
xor
cltd
clc
out
xchg
xchg
adc
bswap
lds
lds
or
dec
lds
repnz
push
sub
dec
cmp
call
in
incl
xchg
jg
inc
push
mov
int3
push
into
add
inc
inc
inc
mov
push
lock
mov
pop
fdivs
fwait
or
inc
lds
adc
add
and
adc
sub
int3
inc
jb
loopne
out
fadds
mov
xchg
lret
or
adc
or
or
push
adc
in
clc
sbb
outsb
in
adc
cmp
fdivs
push
out
fnstsw
leave
shrb
mov
mov
mov
ja
lock
into
dec
adc
test
test
add
idivl
jb
sbb
test
pop
inc
daa
inc
and
sbb
dec
xchg
mov
push
jmp
sbb
sub
incl
stos
dec
lret
les
jnp
out
jg
sti
dec
lods
pop
mov
mov
push
lea
or
decl
fs
aad
repz
enter
mov
icebp
das
sub
nop
xor
orl
or
lret
call
xor
sbb
push
mov
dec
cmp
mov
add
lret
cmp
or
leave
push
cmpb
lea
adc
mov
movsl
dec
xor
inc
mov
cli
sbb
xor
xchg
or
in
pop
push
jo
xor
addl
or
cmpl
push
mov
mov
movsl
pop
jl
data16
cld
aam
pushf
pop
or
dec
mov
sub
mov
sbb
into
cmpsl
or
or
mov
pop
mull
ljmp
pop
cs
fstpt
nop
cld
addl
push
jle
adc
mov
rcl
lds
xchg
enter
adc
out
sbb
mov
pop
pop
sub
xor
mov
push
stos
es
inc
adc
scas
mov
mov
mov
or
jg
bound
outsl
addr16
mov
xor
in
cmpsl
mov
into
inc
loop
shld
add
pop
xchg
inc
in
sub
push
fmull
rcrl
sub
pop
loopne
adc
mov
iret
mov
xchg
insb
mov
add
shrb
test
into
in
fisttps
cmc
jmp
sub
jmp
or
or
mov
push
pop
jp
mov
fisubl
push
xlat
rol
sahf
bound
dec
movsl
sbb
out
stos
adc
sbbb
jecxz
mov
inc
mov
pop
mov
js
in
in
inc
shl
loopne
outsb
dec
fnstsw
mov
xchg
aas
stc
outsb
movsb
pop
or
cli
aad
pop
cmp
jne
test
pusha
das
ret
repz
into
jne
and
inc
pop
jecxz
xchg
jo
xchg
sub
inc
aas
int3
das
jns
xchg
mov
push
jb
sub
mov
insl
add
sbbl
roll
or
add
or
add
add
adc
int3
mov
dec
clc
fwait
loop
out
loop
sbb
dec
lods
je
pushf
xor
mov
cli
sbb
jp
xchg
mov
movsl
loopne
adc
lcall
lds
dec
sbb
jmp
xor
loope
lea
outsl
jecxz
mov
subb
sub
fnsave
stos
adc
adc
ret
cmp
dec
sub
cltd
push
pop
aaa
imul
add
or
or
adc
decl
push
cmpsb
in
xchg
cmpsl
mov
inc
daa
jp
fidivs
mov
add
push
andb
lods
pop
les
sbb
sbb
movsl
stos
sub
dec
sbbb
call
sbb
ljmp
mov
inc
jecxz
xchg
leave
dec
or
sbb
and
jne
decl
and
push
movsl
std
stc
pop
fistpll
add
mov
cli
push
das
cli
mov
adc
call
clc
cwtl
jecxz
mov
lret
clc
and
dec
insb
jno
or
aam
or
add
push
movsl
ljmp
mov
dec
or
jmp
push
test
repnz
shll
mov
push
out
mov
push
pushf
popa
sbb
lret
int3
xchg
imul
or
add
rclb
sub
xchg
in
shlb
mov
and
aaa
lods
js
decl
adc
divb
cmp
imul
fcmovb
mov
inc
inc
jne
icebp
inc
pop
add
in
scas
popf
rolb
cli
push
arpl
mov
xchg
push
cmpl
xchg
jne
sbb
imul
mov
and
mov
bound
daa
outsl
pop
fbstp
lods
sbb
sbb
sarb
std
outsl
test
into
fdivrl
incb
mov
insl
test
arpl
jb
sbb
outsl
leave
jmp
sbb
imul
out
push
sub
test
mov
ftst
pop
shl
jecxz
or
imul
outsb
add
push
xor
dec
cmp
mov
sub
divb
dec
push
add
lock
mov
mov
icebp
incl
adc
fwait
cmp
add
and
fwait
ja
filds
xor
push
es
xchg
or
adc
out
loope
or
repnz
add
jl
pusha
xor
bound
cmpsl
cmp
rcr
or
testb
inc
push
push
cli
sub
jbe
in
mov
shl
mov
pop
loop
jmp
mov
add
mov
das
xor
pop
adc
enter
jg
xchg
sub
push
jl
or
dec
aam
push
mov
hlt
mov
mov
push
pop
lods
loop
loope
cmp
or
inc
adc
leave
jle
scas
jae
adc
adc
aas
mov
xchg
stc
pop
add
cld
mov
xor
dec
pop
loop
mov
fidivrl
and
ret
mov
pop
movsl
jb
hlt
mov
aaa
test
mov
or
out
imul
int3
notl
jp
sbb
nopl
sub
scas
test
scas
ret
mov
shrl
jo
xchg
push
sbb
imull
sbb
nop
mov
push
pusha
push
mov
and
pop
sub
add
and
icebp
or
outsl
add
mov
lods
mov
xchg
ja
in
mov
push
pushf
push
sbbb
xchg
movsb
jmp
pop
dec
std
mov
incb
inc
jle
sbb
lcall
decb
sub
rcl
lock
jecxz
sbb
sahf
add
push
sub
jae
xorl
xor
adc
adc
mov
sub
shll
and
aas
mov
clc
rolb
lock
pop
div
cmpsb
mov
xor
mov
jp
xor
inc
cmc
pop
inc
idiv
loopne
sarl
rcr
mov
mov
sbb
sub
xchg
sub
inc
leave
sub
test
lea
pop
dec
pusha
xor
shl
ss
test
sub
add
dec
mov
dec
sbb
movsl
in
push
fldcw
inc
jmp
inc
jecxz
pop
pop
xor
push
mov
xor
loop
adc
stc
jns
add
hlt
pop
pop
stc
cld
push
mov
pop
jbe
cmpsl
ds
or
enter
lahf
or
xchg
and
loop
je
adc
jg
cmp
add
mov
xchg
imul
dec
mov
sub
loop
push
lock
loopne
push
daa
add
mov
sbb
or
lahf
loopne
jge
sub
mov
mov
imul
cmpsl
and
icebp
pushf
aad
fistl
outsl
in
sbb
jo
bound
or
movsb
sbb
in
outsb
loope
push
or
imul
test
or
clc
ret
xor
or
jecxz
orb
insb
aam
add
fistpll
inc
andl
movsl
add
push
jb
pop
lock
sub
xor
fstps
movsl
fdivr
push
xchg
mov
sahf
push
mov
sub
lock
jge
loopne
push
sbb
test
js
mov
push
jno
les
ds
rcrl
lcall
and
and
pop
popa
jne
fcmovnu
push
ss
dec
adc
inc
movsb
cmp
out
pop
icebp
adc
pushl
lahf
aaa
mov
adc
and
jecxz
std
jbe
call
push
jb,pt
xor
scas
or
aad
add
clc
xor
or
sbbl
test
decl
and
adc
pop
dec
or
inc
loopne
mov
pop
mov
lods
ffree
fstpt
clc
outsb
and
arpl
fstpt
mov
cmp
xor
jg
ja
fs
jecxz
dec
into
jg
push
les
and
sbbl
rol
mov
inc
int
shl
call
inc
sahf
pop
lea
jg
push
push
outsb
push
or
imul
std
mov
loope
leave
es
xor
dec
mov
sub
dec
push
inc
cld
ret
or
jae,pn
cmp
mov
cltd
dec
or
pop
dec
out
mov
add
add
subb
jne
pop
mov
int3
and
mov
in
pop
push
adc
ss
xchg
outsb
push
outsl
push
push
flds
sub
outsl
shrb
lahf
stc
rolb
inc
xchg
mov
xor
mov
xor
fnsave
ja
inc
addr16
push
mov
push
push
xchg
rol
aaa
ficompl
pushf
or
jecxz
fildl
mov
aaa
mov
add
and
icebp
adc
sbb
repnz
fsubrl
mov
outsl
or
and
xchg
lods
cmp
push
idivl
in
mov
mov
add
popa
jp
mov
xchg
pop
jbe
mov
pushl
outsb
mov
add
pop
mov
mov
mov
sub
xchg
or
sub
sti
and
adc
mov
mov
mov
loope
call
mov
sbbb
js
cwtl
mov
jg
or
loopne
dec
and
sar
aaa
xlat
pop
jbe
decl
xchg
sub
aaa
sub
jl
jl
gs
pop
adc
adc
mov
lret
mov
push
iret
or
jbe
aaa
call
imul
mov
or
sub
jbe
lret
mov
addl
jg
loopne
and
xchg
mov
inc
mov
add
sbb
dec
mov
ljmp
sub
mov
pop
data16
sti
push
sbb
sub
pop
test
mov
loope,pt
shlb
add
mov
or
mov
adc
cld
add
stos
mov
ja
xlat
imulb
xor
int3
fcomps
mov
adc
push
dec
mov
decl
sbb
push
aam
rol
pop
cmp
and
mov
and
or
bound
xor
cmovb
mov
loope
fistps
das
and
add
xchg
cld
aaa
cmp
or
in
jg
lods
inc
adc
jl
add
sbb
call
movsl
test
or
test
mov
incb
fnstsw
adc
aas
pop
int3
test
call
xchg
xchg
dec
jae
jmp
fstpt
adc
bound
les
add
ret
mov
add
leave
mov
mov
pushf
cltd
mov
outsb
mov
inc
xor
int3
mov
outsl
sub
mov
into
cmp
mov
std
or
test
das
cwtl
adc
jecxz
dec
cld
aaa
mov
aam
cmpsb
push
call
and
xchg
imul
stc
ret
dec
repnz
test
jp,pn
sar
int3
pop
scas
xchg
pop
loopne
fldl2t
or
sbb
enter
mov
mov
inc
fistl
pop
mov
mov
inc
adc
push
lea
imul
daa
pusha
fdivrs
cmp
enter
test
fdivrs
sahf
jle
movsb
mov
insl
jg
fdivrl
mov
cld
test
out
xor
cwtl
rol
lcall
outsl
xor
lret
shll
mov
rcl
push
inc
popa
or
orl
pushf
fs
rol
stos
leave
jne
jnp
aad
out
mov
push
mov
mov
pusha
or
mov
inc
sbb
lahf
iret
clc
add
push
cmc
jg
pop
jbe
mov
jge
fsubrl
ret
incl
and
cmpsb
cmpsl
testb
leave
inc
sbb
mov
cld
inc
mov
fsts
mov
fistpll
mov
shlb
test
test
test
cmp
cli
adc
fidivl
cmc
push
mov
sub
incb
in
scas
xchg
adc
mov
inc
rcr
sbb
jae
push
adc
out
add
int
xor
xchg
jg
sti
inc
push
popf
ds
pop
pop
fcomp
pop
stos
jno
mov
hlt
jmp
movsb
mov
cwtl
or
shll
jecxz
imul
add
ljmp
add
rolb
xor
jg
outsl
imul
ja
mov
add
cld
movsl
clc
inc
stc
xor
ret
mov
and
popa
outsl
jp
cmp
test
rcll
push
xor
jbe
in
xor
lods
adc
sub
js
add
fwait
and
push
adcb
xorl
rcrb
out
xor
pop
les
add
test
inc
mov
mov
lock
sarb
push
dec
lret
adc
int3
inc
push
inc
pop
aam
add
push
aad
shll
add
push
leave
test
mov
stc
pop
pop
lds
aad
mov
xor
sub
mov
test
dec
push
imul
jg
mov
jg
jge
rcrl
fs
sub
loop
cli
add
rcll
dec
sub
lds
hlt
sub
add
jno
aad
adc
add
sbb
and
test
mov
add
push
cs
sub
fists
out
rol
lahf
lock
mov
mov
jns
cmpsb
mov
aas
hlt
and
inc
ja
jae
mov
ljmp
xchg
push
mov
fisubs
push
sub
pusha
mov
add
inc
cmp
and
pop
or
mov
jo
cmp
push
pop
mov
xchg
int
out
ds
mov
mov
pop
clc
sbb
push
push
gs
repz
jle
fmuls
add
mov
outsl
xor
adc
ja
adc
dec
xchg
sub
jmp
lock
lea
outsb
je
add
dec
add
jmp
dec
inc
add
andl
outsl
push
jg
repz
call
jl
or
xchg
add
lds
divb
mov
mov
sub
inc
dec
xor
pop
loope
repz
das
je
adc
nop
sub
xchg
jg
push
sbb
pop
mov
xor
ret
mov
arpl
popl
pop
push
cli
adc
or
enter
test
insl
or
add
mov
push
lods
jle
movsl
iret
inc
mov
mov
outsl
or
dec
xrstor
shrl
mov
sti
mov
pop
push
pushl
jmp
inc
sbb
inc
jg
dec
sub
xchg
ljmp
mov
inc
push
sub
call
sbb
pop
push
mov
pop
cmpsb
mov
jne
xor
imul
jnp
xor
pop
loopne
pop
fistl
orl
and
mov
clc
das
pop
test
out
xor
push
lret
cmpsb
lahf
andl
or
xchg
push
bswap
inc
sarl
sub
xorl
outsl
sbbb
mov
sub
mov
push
push
pop
enter
and
test
push
pop
dec
std
mov
mov
fwait
xor
mov
enter
pop
cli
daa
dec
xchg
test
or
sti
shlb
sar
inc
inc
sti
aam
push
das
out
jo
movb
sub
gs
cltd
mulb
pop
mov
das
jo
insb
bnd
pop
out
adc
loopne
lcall
movsl
push
movsl
pop
adc
jp
icebp
adc
jmp
arpl
sahf
cmpsb
jle
fwait
jle
loope
xor
fstps
movsl
dec
xchg
je
add
test
insl
add
and
pop
leave
xor
cmp
cld
xchg
ds
roll
mov
xchg
int3
xchg
ja
jecxz
push
mov
ja
in
insl
sub
mov
cmpsb
mov
cwtl
inc
js
pop
js
loopne
mulb
cmc
cmpsb
mov
dec
aam
rorl
rcll
pop
jae
test
leave
add
push
fidivl
movsl
push
inc
jno
pop
or
iret
jmp
enter
data16
movsl
push
or
and
add
aad
idivl
incb
aaa
clc
mov
sbb
pop
mov
pop
pop
stos
push
dec
pop
or
mov
xor
fcoms
fistps
jecxz
cmp
mov
movsb
rcll
sbb
dec
mov
aaa
sub
dec
cli
xchg
push
mov
insb
inc
loope
lea
out
inc
cltd
add
xor
adc
mov
pop
iret
add
mov
mov
incb
mov
repnz
movsb
xor
jnp
or
fisubl
jl
lea
mov
outsb
or
pop
cs
dec
pusha
stos
sarb
imul
xchg
mov
fwait
xchg
outsl
lahf
add
sbb
jmp
mov
outsl
in
scas
inc
inc
cld
dec
cs
leave
jge
maskmovq
and
cmp
xchg
fcmovb
cld
add
xlat
imul
dec
pop
or
adc
jl
adc
xor
sbb
pop
inc
xor
int
subl
xlat
mov
ds
mov
xchg
daa
or
add
int3
scas
adc
popf
push
xchg
lret
xor
and
aad
shll
xor
pop
mov
xor
pop
sarl
aaa
cmc
test
out
cvtpi2ps
mov
movsl
xor
fidivrs
mov
mov
fcmove
jne
dec
jb
fistpl
std
sub
shl
pop
sahf
xchg
mov
mov
xchg
jmp
add
lds
outsb
fdiv
lds
fcmovnu
push
lcall
icebp
aad
cmc
lds
jae
outsl
outsl
jo
mov
outsb
pop
add
add
xor
fistpl
out
xchg
fwait
sbb
or
sub
cli
mov
call
pop
mov
xor
rcrl
add
pop
sbb
js
xchg
clc
jne
xchg
inc
lock
or
loopne
dec
dec
or
vorps
aaa
add
jb
lods
fsubl
outsb
aad
movsb
filds
pop
adc
cld
mov
js
cmc
push
in
adc
push
or
or
ds
pop
fisttpll
adc
and
push
loop
shl
insl
mov
cmpsb
pop
or
stos
ljmp
add
std
fldenv
mov
jle
loope
neg
sahf
loop
lea
jb
gs
xchg
ljmp
out
pop
in
cmp
add
fimuls
mov
mov
ss
mov
cmc
mov
sarb
adc
mov
sub
fcomip
pusha
roll
popl
test
and
es
add
in
mov
in
leave
cld
ret
inc
adc
add
stos
jmp
mov
or
mov
lea
inc
insb
sub
call
stos
xlat
and
les
xchg
jp
or
mov
adc
cmp
pop
outsb
subb
mov
xchg
test
push
inc
stc
insl
jge
mov
push
mov
cmc
lcall
jge
mov
mov
scas
mov
test
or
insb
jge
mov
push
add
mov
dec
cwtl
and
inc
jno
adc
cld
in
mov
jo
rorl
jge
xor
xlat
inc
mov
outsl
push
loopne
in
aad
jl
test
test
mov
and
inc
pop
inc
and
call
mov
dec
ss
cmp
cmp
xor
out
inc
pop
adcl
inc
jbe
cli
jmp
and
jl
mov
add
and
sub
fwait
clc
adc
xchg
sbb
push
fxam
cmp
js
xor
adc
gs
add
cli
iret
mov
scas
testb
and
clc
cli
addr16
mov
pop
mov
outsl
jg
and
fdiv
js
dec
ret
lcall
jmp
lret
test
jp
and
sbb
arpl
adc
add
outsl
je
clc
and
xor
mov
add
std
cli
push
push
push
test
add
push
sbb
sbb
les
sub
out
inc
pop
sub
std
movsl
daa
mov
movsl
cmp
pop
fisttps
aam
pop
dec
dec
or
aam
rcr
hlt
lock
or
outsl
jg
outsb
in
frstor
rorl
dec
imul
stos
std
out
loop
mov
or
stos
js
or
push
mov
mov
scas
out
mov
or
cmp
imul
sbb
xchg
or
enter
mov
lea
out
add
icebp
fcmovb
inc
leave
mov
mov
in
ja
or
orb
lret
sbb
jmp
leave
movsl
sahf
dec
pop
and
add
cmp
or
add
shll
inc
mov
sub
lret
mov
mov
adc
repz
push
outsl
adc
cli
addl
and
sbb
in
sbb
adc
xor
psrld
xor
sub
inc
sbb
jo
or
in
rorl
lods
das
pop
or
inc
popa
adc
nop
repz
push
sub
or
add
out
jno
es
test
mov
fbld
call
popf
push
into
mov
inc
inc
std
mov
addl
pop
call
call
lret
lcall
jns
mov
imul
sub
scas
movsb
out
popf
fcmovbe
popa
ficoml
inc
and
sti
xor
or
push
jne
xor
insb
insl
push
cmp
adc
pop
add
push
cltd
test
pushf
enter
stc
dec
or
lods
lcall
loope
loopne
push
nop
pusha
mov
dec
adc
lea
add
mov
clc
or
and
cwtl
lcall
sbb
lods
xchg
sarl
sbb
push
les
add
mov
fdivs
pop
mov
mov
jo
nop
es
add
jg
mov
hlt
and
cmp
movsb
xor
sub
dec
dec
incl
addb
jge
mov
mov
add
fstl
bound
jecxz
jno
and
inc
ret
or
cltd
pop
insb
add
jo
sbb
scas
mov
addl
lret
mov
sub
aaa
hlt
aam
mov
adc
fimuls
add
testb
ds
jmp
cld
adc
adc
sbb
lret
add
xor
movsb
jp
push
pop
inc
test
sbb
pop
fmuls
cmp
lahf
push
push
dec
or
lcall
inc
sub
jecxz
loope
das
jl
pop
dec
inc
sub
mov
int3
dec
xchg
or
xlat
sub
xor
shrl
mov
cmpb
jo
jecxz
lds
lock
mov
insl
mov
addr16
xor
mov
stc
mov
jl
pushf
lds
or
call
mov
xlat
rclb
lret
push
pop
mov
out
cmpsb
mov
add
es
sub
add
xchg
push
bound
lea
mov
test
cld
mov
sub
mov
outsl
inc
or
pop
je
outsl
mov
inc
xor
pop
sbb
insl
add
rolb
mov
mov
pop
jg
cli
add
jne
jg
mov
fisttpl
or
nop
inc
and
aas
rcrb
xchg
mov
dec
pushf
pop
loopne
cmp
jo
and
cmp
outsl
insb
jge
psllw
aam
dec
push
push
lret
fsubl
mov
clc
dec
mov
cmp
inc
cltd
ret
outsl
je
std
pop
jmp
hlt
inc
pop
test
leave
ss
sub
fistpl
xchg
testb
andb
insl
sti
push
or
cmp
sbb
fdivrp
lods
push
mov
and
mov
fucomip
or
rclb
adc
jge
adc
lods
jmp
xchg
out
cmc
sbb
ja
mov
push
push
dec
clc
pop
rcll
sub
out
das
int3
cltd
cmp
fnstsw
xor
andb
add
cmp
sti
out
and
cmp
add
pop
mov
addb
mov
faddl
xor
loop
pop
mov
pop
scas
push
fildll
add
inc
fidivl
pusha
jmp
lcallw
int3
pop
sbb
pop
fcoml
push
adc
sarl
sub
xchg
test
mov
aam
pop
add
sbb
cld
and
pop
mov
jne
stos
stc
fwait
adc
fsubs
decl
cmp
mov
in
mov
dec
es
xor
adc
std
outsb
xchg
xor
insl
inc
rcrb
cmp
movlps
test
out
test
ja
xor
mov
and
or
push
loop
cwtl
loope
add
in
insl
fldcw
xlat
cmp
xchg
pusha
sbb
dec
imul
add
and
in
and
inc
arpl
repz
jp
movsl
fisttps
rorb
aaa
insb
xchg
or
pop
sub
jle
lods
xor
clc
push
lds
push
adc
mov
xchg
jbe
das
enter
and
out
or
inc
aaa
stc
dec
xor
adc
insl
daa
inc
shlb
loope
subb
xchg
push
push
push
xchg
add
and
xor
lods
ljmp
xor
sti
sub
lods
clc
cltd
leave
ja
add
lods
fistpl
xchg
sub
jecxz
js
xor
ficomps
cli
out
out
cltd
mov
popa
sbb
out
in
cmp
lds
sbb
fisttpl
xchg
xchg
mov
jo
cld
loope
fcomp
jle
adc
push
repnz
pop
test
into
fdivs
in
setg
lods
test
daa
sub
jb
in
adcl
xchg
enter
mov
fistl
fwait
int
nop
dec
rorb
pop
mov
cmc
outsl
or
in
repnz
pop
pop
cmp
pop
arpl
jno
sti
mov
pop
das
popf
cmpsb
out
aad
int3
add
push
jo
sub
std
or
lods
out
mov
in
insb
jne
movb
add
ret
jp
mov
xchg
add
xchg
insb
lods
or
adc
jg
into
mov
lcall
lds
inc
pop
inc
jecxz
lret
sbb
ljmp
inc
lret
mov
jge
call
fisttpl
inc
xor
iret
mov
ffree
jg
repz
sbb
repz
out
sbb
mov
add
cmp
adc
das
cmpsl
dec
mov
aas
adc
push
movsl
mov
stc
out
lods
add
mov
push
aam
outsb
stos
cld
pop
cmp
mov
cld
pop
incb
ljmp
scas
pop
push
or
jb
test
cli
stos
cmp
dec
loope
je
loope
sbb
push
push
lret
xchg
cwtl
sub
clc
dec
arpl
loope
jnp
push
cs
ja
xchg
xor
js
outsl
inc
cmp
xor
adc
daa
mov
inc
adc
stos
adc
dec
add
dec
mov
fisttpll
push
fwait
int
mov
or
push
push
xor
fbstp
popf
add
mov
nop
js
sbb
orb
pop
dec
push
push
sub
cli
cmp
jg
or
les
sbb
mov
rcl
sub
dec
mov
sti
dec
sub
pop
dec
pop
lock
pop
sbb
jmp
mov
mov
mov
dec
dec
icebp
sub
adc
xlat
adc
dec
mov
sbb
xchg
js
sbb
adc
enter
cld
movsl
mov
rcll
or
sub
rorl
or
sub
push
mov
rorl
imul
jg
sbbb
sub
add
push
add
inc
add
ja
xor
mov
ret
andl
es
out
xor
pop
push
stc
sbb
fcompl
and
das
or
and
xchg
lods
ja
push
mov
adc
push
mov
fiaddl
mov
outsb
mov
pop
cmp
repz
movsb
push
cmp
jecxz
mov
push
pushf
in
scas
lods
lahf
cli
jae
cmp
jbe
push
aad
mov
lea
inc
xchg
cmp
mov
mov
fdivs
lret
loopne
stos
std
pop
mov
pop
bound
dec
fisubl
pushf
add
lret
push
pop
adc
das
add
sbb
iret
mov
aad
fidivrl
jle
int3
fldl
jmp
adc
xor
cmpsb
fmuls
scas
ja
fildll
push
dec
sbb
xchg
dec
fadds
mov
adc
aas
sub
cli
into
aad
hlt
cmpb
mov
jne
inc
jmp
cmp
push
test
pop
xor
pushf
mov
add
movsb
sahf
pop
cld
mov
and
test
dec
out
subb
sbb
or
mov
fucom
mov
mov
das
or
testl
jg
in
scas
lods
push
sarl
pushaw
insb
and
lds
push
ror
pop
pop
dec
push
jnp
push
inc
dec
mov
jg
call
cmpb
shl
sub
lds
je
loopne
push
inc
cmp
add
pop
cmpsb
push
add
mov
sub
imul
rcl
shlb
push
sub
adc
test
js
sub
or
insl
sti
pop
add
add
popa
or
mov
ja
mov
cmp
or
add
mov
push
sub
dec
inc
push
cmp
aaa
loope
mov
es
or
ds
fidivs
insb
out
ficomps
jmp
xchg
dec
nop
aad
xor
ss
divl
inc
cmpb
mov
jecxz
in
fwait
mov
pop
iret
jg
stc
pmullw
xchg
enter
mov
out
xchg
cmp
mov
call
icebp
lcall
das
ffree
das
out
cmc
or
mov
daa
test
in
sub
lret
pusha
fildll
mov
cli
stos
push
pop
rcr
sbb
mov
fcmovnbe
sbb
jl
outsl
nop
shl
loop
lcall
cld
dec
sub
jae
push
mov
xor
fcompl
mov
lahf
test
gs
out
adc
cs
or
push
dec
sbb
jnp
popf
scas
addr16
mov
cmpb
into
push
push
lcall
loop
test
dec
and
inc
icebp
mov
xchg
pop
bound
and
adcl
pop
mov
pop
loopne
jmpw
js
pop
or
xchg
loop
pop
sub
movsl
repnz
mov
and
scas
mov
and
negl
fsubrs
jnp
test
pop
jno
sbb
xlat
jp
jno
jle
cmp
add
sub
je
in
daa
pminsw
dec
lret
lahf
outsb
test
sbb
mov
ret
xchg
hlt
dec
lock
out
imul
or
sbb
xor
adc
mov
jns
jmp
add
mov
sub
push
or
mul
lea
mov
add
and
inc
gs
iret
repnz
sbb
adc
adc
jnp
pushl
movsb
dec
dec
ret
dec
jge
or
arpl
adc
adcb
and
call
in
mov
pop
gs
ret
xor
shlb
inc
and
push
je
adc
cmp
jbe
lahf
daa
push
lock
sbb
xchg
or
xor
call
add
ss
jg
add
incb
mov
jp
sbb
mov
fs
cmp
cmc
subb
rcll
jo
jle
or
fwait
cmp
aas
mov
mov
adc
add
loop
add
add
cmp
out
xchg
sbbl
outsb
in
mov
fstp
lar
push
jle
fdiv
inc
fadds
addr16
pop
push
cmp
or
mov
sbb
or
xchg
dec
push
ja
dec
sbb
or
cs
add
cwtl
xor
xchg
clc
jge
shlb
imul
jmp
arpl
push
fldt
xchg
sub
stos
subl
add
fcomps
stc
push
ror
call
ret
outsl
fbstp
cmp
mov
jg
ss
in
and
xchg
pop
mov
jl
ljmp
and
ljmp
inc
movb
push
fcmove
out
pop
js
test
xchg
rorl
fiadds
mov
inc
insl
jno
lods
pop
int3
bnd
mov
jb
fs
dec
in
sub
decb
rclb
nop
sti
ljmp
imul
aaa
int3
pop
sti
jp
xor
and
fnstsw
mov
rcl
xchg
inc
mov
js
xchg
cltd
call
pop
loopne
inc
adc
and
or
arpl
addr16
outsl
movsl
fildl
out
xchg
ret
sti
ret
arpl
or
or
mov
add
pop
pop
fsubrl
mov
xchg
stc
sub
and
test
ljmp
imul
lock
jecxz
psubq
movsl
in
aas
or
sahf
inc
or
jp
test
cmp
mov
add
pop
push
mov
fsubs
fs
sub
dec
lock
cmp
out
adcb
sbb
shll
sti
inc
sbb
mov
loope
ljmp
dec
out
test
pop
mov
sbb
jmp
or
and
or
aas
xchg
cmp
mov
pop
cs
mov
pop
sub
test
cmc
push
inc
data16
inc
dec
pop
pop
ja
movsl
dec
clc
sbb
add
inc
adcb
imul
call
pop
mov
pop
loopne
cmpsl
adc
xor
cld
hlt
sti
and
sub
fbld
pop
sub
mov
lds
fsubrl
sub
pop
in
xchg
dec
mov
jge
mov
enter
pop
mov
mov
int
mov
mov
fimuls
push
and
pop
je
lods
out
popa
imul
or
push
inc
add
pop
adc
push
mov
adc
mov
or
outsb
loope
mov
jae
test
clc
jg
sbb
xchg
or
arpl
mov
inc
cmp
xchg
std
pop
rclb
div
sub
mov
add
fidivrl
mov
xor
rorl
mov
repnz
imul
cld
sub
xor
imul
sbb
mov
pop
and
dec
inc
leave
cmpsb
and
cmp
in
xchg
pop
or
scas
dec
add
xor
test
push
push
flds
call
or
in
dec
mov
je
movsb
add
call
in
xchg
mov
push
sub
sbb
add
push
clc
or
mov
add
andl
sub
add
cmp
inc
mov
pop
and
iret
inc
incl
or
mov
inc
dec
adc
addr16
addr16
stc
fildll
aad
dec
xchg
orb
std
pop
in
mov
push
loope
out
pusha
push
cmp
ljmp
sbb
dec
adc
mov
adc
in
scas
test
pop
pop
add
clc
mov
and
leave
push
dec
mov
jmp
andb
xor
pop
pusha
adc
add
shl
push
lods
ljmp
icebp
jns
cltd
stos
insl
inc
dec
jo
push
das
mov
sub
inc
jbe
jb
repz
pop
pop
insl
mov
insb
into
mov
mov
cmp
or
test
jmp
mov
fistps
leave
cltd
push
cmp
loopne
subl
movsl
mov
insl
jl
lcall
push
lahf
cmp
adc
mov
lds
les
push
adc
sub
call
adc
add
pop
jae
outsl
not
mov
push
outsb
aaa
fimuls
movsb
negl
adc
push
mov
cli
stos
enter
mov
mov
movsl
mov
std
sbb
adc
cwtl
pushf
jae
lods
add
loopne
das
sub
mov
fcmovnbe
mov
into
sbb
les
add
pop
pop
in
jp
pop
sarl
mov
lds
jno
jo
cltd
test
sub
fdivl
pusha
mov
lods
ret
ja
sub
sbbb
addr16
call
and
inc
sub
roll
pop
adc
dec
pop
pop
inc
jge
inc
lea
jp
mov
sbb
xchg
arpl
dec
stos
cli
ljmp
outsb
xchg
or
mov
lock
stos
test
mov
mov
and
xor
cwtl
add
fisubrs
jno
inc
scas
xor
push
mov
decb
dec
xchg
or
push
mov
ljmp
mov
test
outsl
outsl
lret
adc
imul
push
dec
in
das
xor
pop
sub
push
loope
jb
jecxz
and
pop
add
shlb
decl
std
jl
mov
mov
out
mov
and
dec
push
into
insl
adcb
mov
inc
ja
int3
sub
aam
sub
test
cmp
add
inc
inc
movq
test
mul
inc
push
sbb
jae
sub
dec
jmp
mov
xchg
outsb
aam
cmpsl
mov
andl
jg
push
pop
inc
mov
insl
add
orl
mov
ja
fcmovnu
jnp
in
call
dec
sahf
push
fldt
xchg
ja
cltd
push
adc
andb
push
call
call
in
scas
jp
pop
dec
call
mov
dec
mov
pop
pop
sbb
push
jmp
imul
int
xchg
dec
add
add
jns
xchg
test
orb
sbb
xchg
xlat
aaa
jle
cmc
imull
pop
out
jae
mov
lods
adc
mov
xor
in
repnz
adcb
aaa
inc
jmp
and
rcrb
inc
and
inc
mov
imul
das
sub
add
cs
mov
decb
and
adc
mov
jns
pop
stos
out
pop
and
xchg
jecxz
pop
ljmp
cli
inc
or
jbe
adc
dec
sbb
adc
hlt
jbe
dec
dec
les
popa
popa
rorl
cli
cld
mov
pop
mov
jecxz
xor
push
sbb
adc
add
push
push
cmp
decl
incl
pushf
sbb
mov
add
mov
shlb
pushf
lea
sbb
mov
push
test
mov
cmpsb
mov
inc
inc
sub
add
notb
inc
movsl
sbb
lea
insb
mov
int3
outsb
sub
sti
test
lock
and
pop
sub
add
add
imul
push
mov
inc
mov
fs
mov
incb
xchg
add
jmp
ja
and
mov
cld
shll
pop
mov
sub
xchg
clc
add
sahf
int
andl
pop
mov
dec
cmp
aaa
push
sbb
sub
cmp
aas
mov
or
jno
xchg
out
xchg
mov
mov
gs
in
ljmp
xchg
pop
cs
lods
pop
xchg
ret
add
jmp
cld
sbb
lea
test
clc
or
cs
mov
jl
jle
test
xchg
jnp
nop
push
divb
and
dec
and
orb
mov
in
push
imul
outsl
std
jmp
fsubl
inc
hlt
xchg
sar
jecxz
imul
and
lods
cld
leave
test
iret
push
mov
or
je
xor
mov
add
inc
and
and
out
add
adc
or
push
call
cmp
cmp
pop
xor
jnp
pop
mov
sbb
jle
movsl
sub
mov
iret
adc
jmp
mov
sbb
sti
mov
stc
test
sub
lds
sbb
scas
lcall
mov
ffree
sbb
das
inc
je
jge
jmp
mov
stc
je
in
mov
jb
push
sub
lcall
rcr
ljmp
lcall
jb
inc
cwtl
mov
sbb
movsb
adc
loopne
dec
xchg
cmp
mov
into
jo
mov
sbb
mov
add
and
mov
fldt
mov
or
out
pop
inc
dec
jg
mov
mov
scas
dec
aas
sbb
and
aad
idivb
mov
cwtl
bound
scas
and
mov
dec
jo
xchg
mov
mov
xlat
cmpsl
xchg
add
fisubl
mov
and
into
push
xlat
cmpsb
sbb
mov
lahf
js
jecxz
add
mov
sub
dec
adc
cmp
insl
divl
notb
push
data16
ret
mov
cmp
addr16
std
lods
add
sti
push
pop
mov
adc
sbb
or
iret
sub
mov
or
loopne
sbb
dec
sbb
jl
loope
call
fwait
mov
pop
mov
jge
pusha
mov
int3
or
jg
es
push
out
out
rclb
loopne
inc
ficoms
mov
inc
inc
call
in
mov
sbb
enter
cmp
out
push
add
cmp
dec
orb
and
jo
roll
repnz
dec
pop
repnz
ss
loopne
jne
data16
aam
cmp
jge
fisubl
mov
test
fs
lahf
adc
ja
dec
sub
out
xchg
pop
push
repnz
outsl
push
jmp
pop
push
cmp
and
mov
lock
push
mov
aaa
test
inc
dec
pop
adc
dec
sbb
aam
test
adc
call
or
cs
lods
pop
mov
loopne
addr16
push
push
inc
push
leave
add
mov
aaa
inc
dec
xchg
mov
flds
jle
pop
das
std
scas
push
int3
sbbl
push
push
cwtl
cmpsb
fisttpll
dec
pop
call
dec
in
loope
lret
push
ret
stos
test
stc
call
xor
daa
xor
div
andl
and
movsb
cltd
nop
cwtl
outsb
mov
or
adc
sbb
xor
xorl
fildll
ljmp
sbb
or
add
jecxz
push
pop
adc
push
pop
push
enter
and
jns
add
ljmp
or
adc
outsb
jmp
sbb
fwait
jmp
mov
loopne
in
mov
xchg
popf
lret
or
loope
outsb
mov
xor
jmp
lods
inc
dec
or
pop
or
pop
sbb
inc
shlb
dec
mov
pop
inc
inc
xor
shll
aas
cmp
movsl
xchg
dec
inc
lahf
cmp
rclb
xchg
fwait
scas
jge
xchg
mov
sarl
ret
lret
adc
xorb
cmp
subl
in
frndint
or
or
mov
cld
mov
leave
add
xchg
fcmovnu
push
addr16
lret
jecxz
out
fisubrs
mov
fldcw
pop
test
or
subb
add
lods
fisttpll
pop
and
mov
mov
jmp
push
repnz
inc
filds
repz
add
sbb
add
add
cmp
mov
mov
clc
lods
fsts
fs
ret
xor
xchg
xchg
lods
or
mov
stc
jno
scas
and
jae
out
loop
mov
fdivr
push
movsb
clc
mov
mov
ss
push
xchg
push
icebp
dec
adc
ja
in
insb
pop
mov
mov
pop
cld
mov
xchg
mov
mov
clc
les
jae
push
shrb
das
aaa
je
cmp
inc
loopne
pop
sbb
mov
add
sbb
inc
or
movsl
dec
call
pop
gs
xor
jl
inc
dec
jl
mov
mov
mov
mov
jle
andb
push
rclb
pop
pop
mov
mov
insb
adc
mov
iret
pop
mov
pop
mov
dec
test
mov
add
adc
xlat
xor
insb
orl
xor
pop
pop
add
stos
jne
push
mov
test
mov
add
pusha
push
or
xchg
sbbl
insb
jae
ret
lock
xchg
mov
cmpsl
int3
xor
fbld
add
add
repnz
notb
dec
cmp
mov
fdivrl
insl
ret
das
shll
pop
jecxz
pop
clc
test
mov
fistps
xor
mov
arpl
jo
mov
leave
dec
sahf
loop
lods
das
xor
sub
push
stos
mov
jne
sbb
std
add
pusha
or
mov
loopne
in
push
mov
mov
mov
and
mov
xor
cmpsl
jmp
add
pushl
sbb
mov
test
lea
sbb
sub
scas
jne
xchg
or
mulb
dec
and
int3
data16
test
ja
jge
mov
pop
push
pushf
fcmovbe
mov
clc
push
dec
in
push
movsl
ret
jmp
mov
neg
cmp
scas
mov
in
ja
mov
add
mov
fs
aad
mov
mov
test
ja
jne
lret
xchg
jo
dec
das
cltd
test
sbb
push
fsubl
push
inc
mov
and
outsb
push
jmp
mov
lret
xor
leave
jno
xchg
inc
je
sbb
lods
les
sub
in
or
pop
or
push
int
lahf
pusha
nop
fidivs
or
rorl
inc
pop
cmpsl
and
les
xchg
ljmp
data16
rclb
pop
dec
rcll
xchg
pop
mov
mov
notb
popa
mov
add
push
int
push
fisubrl
cmp
xor
and
outsb
movsl
pop
push
fisttpl
sub
jne
mov
cmp
daa
sbb
inc
enter
divb
lds
jo
hlt
into
push
bound
shlb
pusha
movntq
popf
pop
es
inc
call
test
mov
xor
jmp
jo
outsl
fcomi
rol
js
xchg
xorl
pop
jge
mov
orl
test
push
andl
das
mov
xchg
decl
sbb
pop
je
incl
cmp
mov
leave
faddl
scas
mov
cld
and
jb
adc
xor
stc
push
mov
lahf
enter
lahf
jecxz
add
scas
out
push
les
stos
push
inc
std
sarb
adc
and
clc
mulb
fcomp
xchg
lret
test
add
mov
je
pop
jae
lret
out
push
add
popa
mov
into
jnp
cltd
inc
or
mov
xor
mov
dec
stos
mov
xchg
gs
pusha
mov
in
pop
or
sub
adc
push
fiadds
or
orl
mov
setbe
mov
movsb
cmpsb
inc
mov
icebp
xor
push
es
out
sbb
sbb
js
js
jecxz
stos
sbb
and
xor
cmp
push
je
nop
pop
ss
dec
mov
fnstsw
mov
repz
inc
jecxz
sub
mov
aam
lds
aad
xor
out
lcall
cmp
dec
cwtl
cmp
insl
jg
pop
push
adc
test
push
sub
ds
cmc
push
push
xchg
mov
movl
not
mov
fimull
fisttpl
xchg
mov
inc
pop
scas
test
es
outsb
mov
jnp
subb
pop
adc
aaa
clc
stc
loop
mov
subl
or
inc
mov
pop
xor
and
shrb
mov
mov
sub
test
and
mov
mov
pop
out
iret
andl
cmpsb
adc
lods
ljmp
mov
fs
jmp
jne
xchg
push
xlat
cwtl
inc
dec
stos
inc
mov
rol
lds
mov
push
scas
js
dec
and
and
add
cmp
mov
mov
or
xchg
dec
mov
or
shlb
mov
repnz
and
push
hlt
stc
push
fists
cmpsb
cmpsb
ss
sahf
repz
test
xchg
mov
test
mov
add
push
inc
or
pop
push
es
outsb
jl
inc
push
cwtl
jns
and
popa
pop
into
cli
andb
xchg
mov
xor
fldt
ja
or
lods
sbb
add
pop
push
fimuls
add
jnp
movsb
jo
jno
stos
dec
xorb
sti
sbb
dec
lds
pushf
inc
out
mov
xchg
inc
pop
inc
xor
imul
mov
les
inc
shl
insl
cmc
dec
or
fcmovb
loop
icebp
mov
in
int
in
popf
mov
sub
adc
add
cmc
or
movsb
les
je
push
psllq
aam
fldt
mov
mov
inc
test
movsl
js
rcll
cld
xchg
jmp
fstpt
mov
fdiv
hlt
sbb
adc
sub
outsl
insl
mov
or
loop
cs
pop
jne
cli
mov
pusha
jnp
xlat
test
lods
js
push
fs
fnstsw
data16
jl
call
jns
std
lock
xorl
and
lock
lods
dec
dec
stos
loope
inc
dec
mov
mov
add
push
popa
jns
clc
mov
inc
jle
inc
mov
or
pop
xor
mov
jecxz
adc
xor
loopne
jl
ja
xchg
jne
jmp
pop
popa
loop
sub
popf
mov
xchg
inc
xor
mov
out
loopne
int
sahf
aad
xor
das
adc
mov
sub
in
sbb
pop
and
mov
movsb
fs
test
cs
cld
aam
lahf
or
ret
adc
test
insl
dec
int
int3
inc
data16
pop
call
fdiv
bound
jp,pn
pusha
and
fstpl
insb
or
push
adc
jo
aas
and
xor
cmp
jo
mov
push
add
sub
fidivl
pop
clc
adc
loopne
test
inc
inc
out
cltd
les
or
mov
jns
dec
mov
shl
ficoml
mov
arpl
mov
loop
rclb
hlt
and
rolb
jb
test
or
or
cmp
dec
outsl
sub
cld
inc
sbb
ja
push
test
push
lret
andb
mov
mov
xlat
test
fwait
add
popa
and
outsb
std
mov
sbb
mov
roll
xchg
bound
test
xorl
ja
add
insb
push
jbe
sti
test
ret
mov
dec
jb
xor
lahf
subb
insl
cmp
dec
add
movsl
pop
popa
mov
lds
fildl
add
adc
lock
pop
sub
test
adc
std
fstps
stc
push
cmpsl
scas
xchg
stos
push
xchg
sub
mov
outsb
sbb
into
test
sarl
mov
xor
daa
xor
push
inc
pop
xor
adc
imul
ds
mov
out
inc
shrb
pop
adc
xor
jbe
movups
sbb
add
cmc
mov
mull
and
cli
ja
mov
sub
ret
or
shll
arpl
ret
into
sbb
sbbl
clc
inc
add
repz
xchg
push
dec
xchg
adc
mov
subb
cmpsb
pop
test
test
mov
push
sbb
out
or
jge
push
adc
lea
sub
je
add
sti
scas
push
dec
jae
sbb
sub
pop
xor
rclb
rol
adc
xchg
mov
andl
inc
das
fcoml
cltd
testb
xchg
xor
mov
hlt
ljmp
ja
popa
add
outsl
stos
pop
jl
mov
lods
push
pop
xor
push
inc
push
je
pop
mov
inc
xor
js
lea
mov
sub
dec
add
test
mov
dec
movsl
popa
inc
inc
dec
outsb
and
aas
push
push
jecxz
mov
sbb
push
push
pop
aaa
fs
subl
mov
add
mov
inc
pop
js
mov
ficoms
and
mov
cmp
xor
js
add
mov
in
sbb
add
popa
xchg
mov
mov
and
or
insb
push
sbb
mov
mov
jae
mov
pushf
fiadds
test
call
cld
cmp
es
sbb
fdivp
xchg
outsl
fisttpl
cmp
xor
lcall
xor
or
or
mov
adc
js
lret
cmpsb
pop
or
insl
add
in
fcoml
fucomp
push
jb
outsb
in
xchg
repnz
sub
cwtl
xor
mov
jmp
fistpl
adc
cltd
shlb
mov
adc
in
inc
push
dec
cs
inc
adc
mov
popa
popf
mov
lods
or
mov
pushf
jecxz
repnz
rclb
rol
fnstsw
repz
mulb
sbbl
inc
int3
xchg
js
subl
pop
addb
addr16
shrl
xlat
inc
adc
push
mov
xchg
jnp
push
push
xchg
orl
xchg
bound
push
or
or
and
and
cli
sbb
push
jmp
sub
add
and
popa
adcl
add
pop
icebp
jg
jbe
mov
add
dec
pop
add
sahf
and
insb
aaa
mov
sub
jae
sbb
sti
jbe
daa
out
jo,pn
inc
cmp
das
mov
outsl
lods
jne
pop
or
push
sbb
ret
mov
addb
inc
les
or
sbb
in
repnz
test
adc
pop
or
in
lahf
outsl
mov
aad
mov
mov
push
pop
clc
ret
push
xchg
xchg
mov
scas
orl
popa
loopne
rclb
hlt
je
inc
jbe
adc
or
jbe
nop
mov
rolb
sbb
adc
sub
jo
adc
mov
icebp
adc
popf
dec
movsl
lods
mov
aad
loopne
sub
shlb
fsubrs
scas
outsl
fs
inc
shll
scas
and
cmp
ljmp
sbb
cmp
pop
or
jmp
adc
aaa
inc
mov
mov
jne
mov
mov
jecxz
lcall
rolb
pop
test
aam
xor
or
jge
jne
mov
es
mov
outsl
mov
inc
ret
add
cli
xchg
lea
or
int
pop
or
popfw
push
outsl
xor
ljmp
cmp
imul
pop
lahf
push
sbb
or
mov
pop
and
adc
mov
adc
loop
adc
mov
and
mov
push
add
in
mov
adcb
pop
and
lret
stos
mov
mov
sbb
mov
in
stos
sbb
push
lret
insb
les
outsl
ja
push
cmp
xor
insl
dec
xchg
sbb
hlt
lahf
or
in
clc
into
cmc
xor
mov
das
mov
shl
enter
or
in
andl
rolb
dec
pusha
or
nop
or
hlt
aad
fmull
fsubrl
insb
loopne
mov
out
orb
pushf
mov
xchg
scas
jo
mov
icebp
or
fildl
cld
orb
test
test
lret
add
or
fidivs
jge
ja
add
stos
cmp
sti
pop
inc
and
lods
test
test
mov
pop
sti
push
js
lock
sub
shll
cld
and
out
ja
rorb
out
mov
sub
aaa
adc
test
sbb
fmul
lock
pop
cli
pop
pop
pop
into
cmpsl
xchg
sbbb
adc
push
sub
push
andl
sbb
int3
sub
ret
out
enter
xchg
xchg
popa
adc
into
jl
outsl
cs
call
jl
dec
sub
add
cmc
dec
rorl
fadds
mov
xchg
fildl
lcall
or
mov
rcll
clc
inc
mov
jg
mov
mov
mov
fwait
dec
hlt
ljmp
xlat
xorb
push
jbe
mov
loopne
push
and
das
les
lods
sbb
clc
inc
xchg
xchg
test
add
pop
pop
add
test
test
je
fisttps
mov
pop
mov
lret
jae
and
sbb
cmp
addb
or
mov
out
adc
clc
dec
outsl
je
addr16
mov
mov
ret
sahf
ja
push
repnz
push
icebp
ret
cmp
and
jnp
mov
sarb
cmp
cmc
mov
fdivl
imul
addb
aas
cs
dec
mov
and
push
adc
add
sub
das
add
arpl
imul
or
mov
push
push
ret
inc
and
dec
adc
and
xor
pop
push
add
mov
imul
mov
gs
clc
outsl
or
mov
aam
jle
out
cli
xchg
shr
movsb
out
and
mov
jo
stc
scas
sbb
outsb
push
jbe
cltd
mov
out
sbb
fildl
aaa
je
out
testl
loop
push
aas
add
mov
sbb
cwtl
lea
or
pop
mov
mov
cwtl
test
js
arpl
pop
loop
mov
xor
mov
in
mov
pop
loopne
gs
adc
adc
ja
shll
mov
xor
push
adc
aaa
inc
aam
fstpt
stos
daa
add
dec
in
cltd
mov
jl
call
push
add
or
and
fisubs
inc
jne
cmp
push
jl
int
loopne
stos
mov
icebp
sbb
add
fdivrp
cmp
jle
mov
test
aaa
hlt
stc
xchg
test
pusha
inc
call
jbe
xchg
xchg
lods
push
xchg
adc
xchg
popa
insb
cli
scas
fimuls
pushl
aas
push
pop
inc
mov
and
cli
out
inc
aad
insl
add
mov
into
aam
das
mov
adc
cs
enter
icebp
mov
jecxz
cmp
ljmp
mov
push
lea
push
mov
testl
test
lock
insl
negl
mov
inc
and
lret
or
popa
jl
sbb
out
out
dec
movsb
xor
ss
test
mov
leave
mov
sub
call
or
les
and
or
mov
push
mov
sub
cli
inc
pop
cmc
inc
in
mov
mov
cmp
xchg
cmpsb
in
stos
andl
sbb
rol
lea
push
gs
test
push
sub
mov
shlb
shrl
add
sbb
js
or
ret
std
movsl
outsl
shrb
jb
cld
imul
cmpsb
or
pusha
and
and
or
lock
test
push
outsl
jae
aam
jp
sub
out
sarl
outsl
pop
or
or
shlb
hlt
sub
daa
pop
adc
adc
dec
mov
jp
pop
mov
push
mov
pop
lret
idiv
scas
mov
xchg
rorb
pop
clc
loope
adc
ds
sub
mov
mov
das
je
ss
inc
mov
lcall
iret
arpl
sahf
xchg
sub
rolb
movsb
pop
arpl
pusha
aas
mov
pop
pop
lods
xchg
insl
lds
mov
mov
mov
inc
sub
xor
sub
adc
popf
jno
clc
adc
aam
push
das
aam
mov
sbb
and
int
xor
add
sub
and
mov
or
push
mov
sub
fs
mov
jb
mov
subl
negl
mov
fbld
aas
scas
push
mov
xchg
rcrb
sub
inc
pop
dec
clc
jge
pop
in
and
sarb
fisubrl
add
ret
jge
outsb
or
pop
call
popa
fucom
repz
clc
mov
xchg
push
scas
bnd
movzwl
adc
outsl
inc
and
stos
ret
or
jns
clc
xchg
test
icebp
xchg
push
pop
into
popf
add
scas
popa
fs
mov
jl
test
in
bound
cli
sarb
aam
add
clc
fdivrl
push
outsb
shl
shll
cmp
cmpsb
test
ja
jnp
adc
fidivs
mov
sbb
test
imul
enter
jno
stc
loopne
mov
sub
mov
sub
popa
mov
loopne
mov
mov
call
push
push
sbb
stos
adc
loope
dec
xchg
jno
in
out
out
shll
push
add
adc
in
push
mov
in
xchg
pop
mov
push
xchg
inc
sbb
fucomi
aaa
ret
push
sbb
cmpsl
orb
sbb
fstl
mov
nop
nop
pop
sbb
pusha
or
and
jmp
jecxz
or
mov
cmp
sub
add
pop
pop
frstor
addr16
fistpll
loopne
pop
call
pop
mov
shrb
dec
aaa
jbe
orb
lock
push
dec
mov
js
je
push
js
fmull
dec
fiadds
test
mov
movsb
sbb
pop
adc
xlat
btr
mov
lcall
negl
incl
adc
cmp
negb
fwait
pop
clc
movsl
jle
movsl
pop
xor
or
imul
pop
push
dec
lahf
mov
xor
outsl
or
jecxz
js
lods
jl
fcomps
in
xor
aam
pandn
ja
adc
and
pop
ljmp
inc
cmpsl
add
push
or
or
jb
mov
les
add
or
push
fisubl
mov
fnstsw
and
mov
je
outsl
jge
add
and
jae
or
pop
pop
loopne
dec
lret
lods
out
push
leave
add
test
sbb
sbb
or
in
add
mov
out
push
add
in
adc
mov
or
push
pop
inc
ds
insb
imul
adc
jmp
les
pop
mov
jae
add
xchg
xchg
rolb
insb
pop
jbe
ljmp
push
cmovnp
or
adc
mov
dec
popf
sbb
rcr
stos
pop
push
add
mov
cli
xor
daa
shrb
jo
fdivs
push
ss
xchg
mov
sub
iret
daa
ss
cld
cmc
mov
xchg
fists
std
mov
pop
add
mov
inc
mov
mov
or
or
imul
dec
nop
ret
inc
ret
sub
mov
shl
shlb
jp
xor
insb
pop
insb
xchg
outsb
cld
ret
push
stos
mov
jg
mov
in
xor
dec
xchg
je
in
popa
sub
ss
mov
fidivl
mov
push
push
aaa
pop
sbb
test
adc
repnz
xchg
mov
cmc
mov
mov
mov
adc
aaa
adc
call
mov
pop
sarb
push
mov
dec
jne
push
cmp
xchg
push
mov
ret
and
mov
and
mov
aas
loopne
movsb
cld
inc
lods
shld
adc
fistl
iret
outsl
mov
das
push
add
fldt
add
das
jge
sahf
sub
repnz
test
jle
xchg
cli
call
mov
add
aaa
push
add
movsl
fistpll
rorb
inc
lock
mov
ret
inc
dec
dec
push
rorb
push
or
or
pop
lds
pusha
push
scas
add
mov
imul
pop
inc
pop
test
xchg
pop
jge
outsb
pushf
sub
push
ds
sub
sbb
mov
pusha
cmpsb
push
dec
xor
decl
cmpsb
fidivrs
or
push
outsl
scas
cmpsb
mov
jecxz
fldt
xor
cwtl
mov
scas
cmp
inc
add
inc
gs
dec
mov
out
rep
sub
inc
nop
gs
and
mov
push
lock
mov
addb
fcmovu
xor
mov
cmc
mov
test
das
shll
bound
aam
movsl
fbstp
into
mov
popa
jle
add
inc
inc
or
add
fisubrs
ret
cli
in
nop
push
clc
ljmp
and
loope
hlt
mov
insl
in
push
cmp
pop
mov
mov
cmp
leave
push
mov
pop
dec
or
push
sub
sub
cwtl
fdivr
ljmp
sub
add
xchg
nop
add
aad
in
out
jne
cli
aam
repz
outsb
pop
xor
adc
jl
ficomps
jno
ds
std
stos
mov
mov
cmp
push
jno
imul
cltd
testb
and
scas
add
pop
roll
daa
push
dec
adc
out
mov
xor
sbb
call
ljmp
dec
pop
fadds
inc
movsl
cmp
incl
hlt
and
mov
push
add
fidivs
out
cmc
add
test
hlt
inc
xorb
addb
add
xchg
mov
lock
outsl
and
adc
shll
pop
js
mov
jp
test
mov
dec
inc
add
js
jle
sbbl
js
sarb
fimull
pop
fsub
mov
pop
aam
bound
lds
cmp
sbb
mov
and
lods
test
add
cmp
xchg
xor
jns
fdivs
mov
sbb
push
call
test
ss
mov
sbb
rcr
xchg
pop
and
push
push
xchg
imul
xchg
or
test
add
cmp
outsb
les
fidivrl
adc
add
fs
ficoms
add
mov
or
and
cmp
mov
rcll
shl
push
cs
in
add
shlb
dec
mov
push
mov
jb
push
fiadds
insb
shrb
inc
mov
inc
dec
movsl
je
stos
test
testl
jecxz
aad
movsl
pop
in
es
push
bound
pop
push
gs
inc
pop
jb
jne
cwtl
inc
loope
imul
or
and
adc
mov
mov
mov
repz
insb
or
lds
lods
jne
cmpsb
cmpsb
divb
dec
mov
sarl
push
sar
and
pop
and
fwait
ret
push
das
js
ds
or
lock
push
lock
mov
pop
in
pop
inc
mov
idivb
fbstp
mov
addr16
das
add
pop
rolb
sub
pop
mov
pop
xor
or
pop
xor
jg
mov
or
mov
loop
stos
insl
and
dec
pop
shll
fmull
pop
sahf
jmp
and
mov
mov
inc
jne
jge
inc
cwtl
or
inc
repnz
inc
pop
pop
mov
xor
xlat
adc
stos
mov
rcl
dec
sub
roll
mov
cltd
inc
mov
xlat
out
mov
aaa
fistpll
add
dec
sbb
inc
sbb
lock
stos
mov
add
fs
faddl
fstpt
sbb
jle
ret
out
xor
outsl
cmp
adc
and
bnd
les
and
test
mov
lds
sub
xchg
pop
aad
pop
pop
and
aad
adc
js
and
fdiv
out
cld
pop
lock
add
ficompl
test
mov
fcomip
mov
add
lods
push
lret
or
and
insb
aaa
add
adc
jae
subb
fisubrs
js
or
inc
sti
iret
fldl
fldenv
mov
gs
in
mov
in
and
scas
xchg
insl
push
dec
dec
cwtl
insl
outsl
jge,pt
mov
sti
pop
cmpsb
shll
sbb
jge
adc
aad
dec
push
out
jns
popa
loope
inc
sahf
xor
add
push
xchg
fwait
xorl
hlt
pushfw
cmpsl
sbb
xor
and
cmpsl
mov
or
xor
nop
inc
dec
int3
push
test
push
or
ds
jbe
test
add
pusha
leave
pop
inc
inc
test
test
sub
xor
pop
xor
loopne
sahf
fsubl
inc
sbbb
frstor
or
aas
mov
icebp
xor
pop
inc
in
push
adcb
add
rcrb
jge
outsl
jb
popa
enter
sub
push
imul
push
jnp
jle
or
jb
inc
hlt
loope
mov
pop
nop
inc
in
mov
dec
dec
fdivrs
dec
shrb
pop
push
mov
in
jns
stos
pusha
cli
jecxz
outsb
cmp
ret
or
dec
pop
push
testb
call
pusha
and
adcl
cltd
mov
inc
sbb
rcll
cli
je
add
mov
push
xor
inc
lea
outsb
cld
mov
push
loope
sub
push
pop
int3
add
xchg
dec
je
adc
jle
outsb
lods
mov
mov
cmp
sbb
mov
sbb
es
dec
sub
ljmp
mov
push
push
jo
test
adc
jp
aaa
inc
loope
imul
mov
adc
pop
mov
xlat
push
sub
sub
mov
cli
aaa
dec
roll
xchg
adc
pop
mov
sbb
rcll
test
or
lods
add
fistps
add
call
roll
xor
dec
jge
icebp
sbb
xchg
divb
and
fiaddl
divb
dec
jg
mov
push
scas
jnp
cmp
mov
mov
add
adc
das
mov
sbb
shll
add
out
call
jl
inc
dec
pop
cld
sub
mov
mov
push
push
dec
paddq
mov
or
pop
inc
sbb
and
addr16
int3
or
outsb
sbb
xor
push
test
sbb
push
dec
test
and
movsl
outsl
andb
mov
aaa
mov
cld
dec
popf
and
adc
addl
mov
inc
mov
rol
jle
cmp
addr16
add
add
neg
inc
mov
cmp
rcrl
inc
inc
push
jmp
mov
and
add
dec
push
sarb
jmp
out
mov
sub
and
call
int3
adc
jp
clc
lods
mov
and
out
xchg
cmpsl
imul
xor
sbb
loope
addr16
pop
xor
push
mov
inc
add
rorb
xor
lcall
push
cmp
or
jb
sub
mov
lret
or
vmovaps
fisttps
adc
rolb
inc
xlat
xchg
loop
pop
call
mov
mov
inc
jecxz
jp
test
icebp
js
jle
or
outsb
stos
sub
pop
shrb
ja
shrb
push
lods
leave
push
cli
and
fildl
rcrl
pop
and
mov
inc
cmp
sbb
es
inc
mov
jg
add
cmc
jno
adc
lods
jne
and
cld
aad
imull
cld
icebp
xchg
inc
sbb
loope
pop
lea
out
push
sub
jne
clc
dec
jb
push
adc
xchg
dec
hlt
lret
jge
xor
bound
rcr
fcmovu
fimuls
dec
dec
lock
lods
and
jp
int
pop
addb
aas
and
pop
clc
and
xchg
xor
jo
movsl
stos
jbe
jmp
mov
out
xor
aaa
mov
in
sti
push
and
or
cmc
fcmovnb
mov
fbstp
add
je
cmp
and
cmc
add
cmpsl
jne,pn
push
imull
mov
mov
dec
adc
dec
pop
adc
mov
push
dec
jne
inc
and
and
negb
stos
test
repnz
sbb
das
jnp
pusha
xor
sub
inc
push
fists
sub
push
pushf
xchg
cld
jae
mov
int
pop
es
jge
add
or
xor
sti
fildl
call
dec
push
mov
cmp
inc
ds
mov
jae
mov
hlt
inc
jecxz
cmp
lock
mov
inc
add
dec
test
pop
mov
cmp
jge
enter
fistps
xor
das
ja
hlt
add
xchg
xchg
or
out
mov
bound
xor
jb
mov
shll
mov
or
aad
aaa
push
cmpsb
subb
dec
mov
dec
pusha
loopne
mov
repz
cwtl
push
adc
mov
sub
sub
das
sub
inc
or
call
sub
mov
out
cmp
jp
add
pop
pop
lcall
push
into
xlat
cmp
cli
push
lcall
mov
pop
pop
cmp
cwtl
mov
lret
xchg
outsb
cld
mov
sti
pusha
jle
lods
fdivs
in
dec
pop
and
outsb
stos
push
jle
mov
and
lock
cmpsl
lock
mov
xlat
dec
popf
hlt
pop
and
pop
cs
rorb
and
mov
mov
push
das
add
or
pop
mov
in
xorb
push
jmp
mov
cmp
lea
lcall
cmc
cmp
mov
dec
lock
mov
cmp
adc
push
outsl
mov
adc
mov
jae
test
pop
mov
push
sahf
lret
xor
aaa
push
cmc
jg
es
sub
cmp
mov
mov
cmp
sub
outsl
pop
or
outsl
inc
mov
xlat
mov
mov
mov
xchg
push
cmp
sub
scas
xchg
xor
add
push
inc
outsl
add
and
rol
pusha
mov
xchg
ss
mov
xchg
jl
sub
xchg
rol
data16
test
or
das
pop
cs
fidivrl
cmc
cmpsb
lods
dec
fildl
or
les
ret
pusha
push
repnz
outsl
jae
sub
push
incb
test
xchg
sahf
mov
add
sti
inc
imul
xor
fldt
das
mov
jecxz
shll
inc
aaa
mov
mov
or
jle
mov
popf
add
decl
mov
push
and
dec
add
js
push
xor
or
sub
shlb
mov
aad
mov
pop
test
push
cld
scas
outsl
mov
movsb
das
rcl
push
xchg
inc
sbb
movsl
dec
and
jns
fstpt
gs
fwait
xor
cmc
pop
rcrl
jge
push
repz
inc
push
movsl
repz
test
xchg
int
pop
lret
xor
mov
addb
lds
lcall
lods
sub
rcrb
aam
xor
hlt
xchg
pop
or
fwait
cmp
jb
hlt
push
movsl
pop
push
pop
push
sti
push
int3
lds
add
ja
insl
das
xor
lods
cmp
popf
add
push
dec
ficomps
lahf
fcmovnbe
jbe
pop
enter
imul
pop
out
cli
stos
add
or
dec
dec
push
or
pop
dec
fisubrl
stc
test
mov
mov
and
or
sbb
push
push
add
rorb
push
cmp
dec
inc
adc
ret
notb
dec
cwtl
sbb
cmp
xchg
call
add
scas
and
inc
xchg
cmp
mov
add
lds
scas
cwtl
aas
call
xor
mov
out
sarl
popf
call
xor
xchg
inc
mov
add
shr
ret
sub
movsl
mov
mov
mov
fstpl
mov
ret
cltd
sbb
adc
repz
test
push
push
cmp
jle
push
and
shl
cmc
out
fstl
and
mov
and
hlt
mov
shlb
xchg
add
mov
pop
inc
loopne
fnstsw
popfw
fdivl
cmpsl
or
and
cmp
pop
dec
ds
mov
scas
fstps
dec
loopne
sub
mov
loop
lods
pop
and
pop
jecxz
sub
and
or
shrl
sbb
dec
cs
fildl
push
lods
loop
dec
xor
aaa
inc
test
mov
adc
in
sbb
ja
jne
mov
ret
jo
das
sti
jge
dec
jne
jp
cmp
push
lret
leave
icebp
fs
and
add
adc
jmp
or
jbe
and
iret
ja
jge
or
in
inc
cld
or
pop
loopne
fisubrl
and
push
leave
outsb
push
cmp
inc
or
les
mov
push
inc
ret
rcr
and
jae
je
add
mov
and
test
sahf
shlb
roll
mov
inc
sub
das
aaa
push
mov
mov
sbb
aad
fldl
push
into
rorb
inc
sbb
jmp
jnp
stos
jge
loop
shlb
imul
loope
mov
aas
lcall
push
call
jle
push
sub
sub
pop
jle
pop
adc
out
out
dec
mov
sbb
icebp
sbb
and
add
dec
jne
inc
mov
fildl
push
popf
or
xchg
adc
cmpsb
push
inc
push
lea
js
leave
imul
lock
int
add
xor
or
in
lea
incb
push
fdivrp
xor
inc
test
inc
cmp
pusha
mov
outsb
in
push
int
push
repz
jle
neg
daa
jne
add
xor
icebp
popl
movsl
mov
nop
popf
mov
loope
mov
bound
and
fnstenv
dec
jge
dec
aad
shlb
mov
dec
pcmpeqb
pop
adc
pop
jp
stos
and
mov
daa
negl
popf
or
jp
push
mov
jg
push
adc
jo
adc
repz
jg
push
das
int3
inc
lods
orl
mov
push
push
pop
xchg
out
jge
inc
cs
jb
pusha
mov
aam
and
jmp
insl
int
xchg
sbb
and
pop
cmp
int3
js
mov
jg
xchg
stos
dec
mov
bound
mov
arpl
int3
jle
ficoms
inc
inc
jg
xchg
repz
mov
pop
sbb
cmp
push
inc
pop
push
in
mov
push
mov
inc
scas
adc
cmp
lods
jecxz
adc
pusha
xor
ss
loopne
sbb
test
aad
cld
push
aam
sub
push
mov
inc
xor
cs
inc
xchg
add
cltd
imul
push
pop
or
mov
test
jle
mov
imulb
test
addr16
sbb
orl
scas
dec
les
mov
inc
lret
movsl
mov
push
jmp
bound
adc
cmc
fdivl
jmp
or
mov
and
stc
inc
das
sbb
mov
and
cmc
sub
popf
int3
cmpb
pop
out
pop
push
xor
xchg
push
adcb
mov
lock
leave
mov
rclb
orb
dec
jge
sub
sub
repz
pop
inc
fcomps
mov
add
or
rorl
ret
icebp
incb
imul
push
mov
or
out
push
ret
push
and
movsl
mov
insl
fcmovnbe
jnp
sbb
insb
sbbb
mov
mov
das
shlb
andl
jo
inc
cwtl
sbbb
fldt
push
jae
cmpsl
pop
push
scas
mov
fldenv
ffreep
adc
add
push
push
std
or
roll
icebp
insl
add
addr16
roll
cmp
jg
call
mov
xchg
outsl
push
jbe
push
xor
ja
dec
movsl
dec
test
push
xor
aam
les
xchg
cmp
mov
cltd
fdiv
inc
lret
adc
and
mov
fists
jle
and
sub
sub
cmpsl
cmpl
add
xchg
push
stos
mov
jno
test
outsl
and
add
or
push
stos
testb
loopne
xor
or
pusha
and
ds
in
pop
fsts
out
jge
fldl
das
and
movb
inc
pop
xchg
xlat
lds
rorb
dec
lahf
jecxz
dec
movl
and
sub
jl
add
mov
xchg
add
cmpsb
sbb
mov
dec
mov
xchg
in
leave
nop
les
cld
scas
inc
ja
add
pop
jbe
xchg
aaa
jbe
pop
cmpsl
icebp
pop
ret
sbb
addr16
cmp
push
adc
cli
push
or
jb
mov
dec
ficoml
dec
xor
gs
lock
xchg
mov
inc
mov
shll
pop
or
addb
mov
dec
jae
adc
xor
sti
outsl
and
sub
imul
or
adc
aam
mov
adc
xlat
sbb
mov
test
outsl
dec
jno
push
mov
or
js
pop
pop
pop
imull
adc
popa
and
add
and
fldcw
repz
clc
mov
rolb
jne
adc
or
adc
lea
das
or
scas
push
sub
push
addl
jmp
add
xchg
cmpsb
popa
sti
pop
jp
push
mov
xchg
cld
lods
lcall
mov
xchg
out
subb
movsl
in
rcll
xor
or
mov
push
cmc
es
loop
es
sub
push
inc
push
pop
mov
cld
pop
jo
imul
sbb
and
pushf
push
inc
popa
rcrb
out
mov
mov
dec
inc
cmpsl
std
test
test
pop
rcr
test
jl
jp
popl
xchg
jmp
dec
cmp
mov
fdivrs
xchg
leave
stos
subb
outsl
sub
and
jg
adc
and
negb
aaa
mov
leave
mov
sbb
mov
jg
in
nop
adc
out
mov
mulb
push
shrw
xchg
xchg
ss
inc
rolb
or
pushf
xchg
int
inc
in
fucomi
mov
xchg
dec
into
sbb
add
pop
mov
adc
jle
jp
daa
mov
insb
jle
testb
mov
mov
jp
mov
xor
sbb
mov
in
mov
sbb
adc
inc
add
test
iret
push
add
fidivrs
je
mov
dec
xchg
mov
repnz
testb
jbe
inc
push
je
hlt
cmp
aam
movsl
nop
es
pop
into
jl
stos
push
xor
add
in
and
cmp
jecxz
jno
insb
cld
or
mov
cmp
popf
aam
std
jle
sub
sub
push
jmp
orl
add
pop
out
jnp
mov
cmp
push
stos
pop
sbb
dec
inc
mov
pop
ror
cmp
ficomps
test
mov
cmp
add
push
xchg
dec
mov
pop
aad
fwait
pop
je
push
sti
fists
push
je
shrl
cmp
mov
inc
push
ja
mov
sarl
mov
inc
push
push
out
push
insb
inc
lock
jbe
push
cs
cltd
pop
inc
xorl
ljmp
lods
pop
mov
fildl
adc
mov
lcall
cld
popa
jmp
int
and
mov
pop
fdivl
mov
xor
sub
fstl
sub
jmp
hlt
inc
sbb
loope
jle
or
sub
add
push
mov
pop
or
sarl
jbe
add
mov
jne
fistpll
push
mov
les
outsl
mov
sbb
xchg
mov
lcall
jne
rcll
roll
xchg
ljmp
inc
pop
xor
or
daa
insl
inc
dec
das
xor
lcall
add
andb
jl
pop
push
mov
call
adc
gs
imul
les
adc
int
jg
sbb
or
or
in
or
cmc
test
xchg
icebp
add
mov
dec
adc
xor
jge
mov
rol
inc
cmp
jne
aaa
pop
andb
sbb
enter
cmpsb
ret
std
movsl
inc
out
cmp
insl
jns
mov
out
mov
and
ret
in
xchg
and
test
les
cs
insl
pop
fisttpl
not
es
push
pop
js
xchg
bts
mov
jge
mulb
add
shrl
std
xchg
or
clc
stos
jl
gs
push
cmpsb
pop
icebp
mov
dec
aam
jnp
mov
mov
notb
mov
int
inc
inc
adc
pushf
adc
nop
call
jmp
test
adc
cmp
or
add
and
repnz
mov
jecxz
jmp
jle
dec
lods
mov
enter
lret
stos
add
fwait
out
in
add
mov
shr
test
cmc
das
cmp
cmp
inc
and
negb
dec
cmpsb
lret
sbb
xchg
inc
cmpsb
stos
mov
hlt
xor
jg
lock
lahf
loop
loope
rcl
ds
outsl
push
xchg
test
shlb
lock
fistl
fcoms
sub
xor
cmp
mov
in
xchg
cmp
addr16
jb
add
stc
jge
int
inc
jbe
loop
adc
push
mov
das
jmp
or
push
mov
aam
lock
jl
nop
dec
lcall
push
mov
push
fcmovnu
test
outsl
or
es
adc
dec
sahf
push
push
push
xor
add
inc
lret
in
jecxz
jmp
jle
xor
jmp
lret
outsb
pop
in
mov
out
push
xchg
mov
add
and
or
sbb
add
or
mov
cs
popf
lods
in
test
fs
lods
sub
mov
or
or
cmpsb
or
dec
decb
and
dec
popa
call
jp
frstor
cli
adcb
add
sbb
bsr
push
pusha
mov
dec
jmp
or
subb
dec
inc
jp
sub
ljmp
xor
ss
outsl
xor
aad
subl
push
aas
fidivs
std
adc
fisttpl
outsl
fimuls
mov
dec
push
iret
sbb
sahf
mov
mov
xchg
icebp
ljmp
inc
nop
mov
jns
aas
shl
pop
stos
mov
pop
or
xchg
lods
jne
cmc
sbb
and
ficompl
adc
lret
sbb
push
out
cmp
notb
je
fldenv
or
mov
mov
add
movsl
scas
aad
mov
xor
mov
sbb
addb
inc
shrl
ss
data16
xor
pop
out
adc
das
jl
cld
test
push
movsl
lahf
mov
movsb
mov
mov
push
sbb
inc
mov
inc
popa
inc
adcb
lock
sub
or
pop
sti
mov
mov
cltd
xchg
adc
mov
pop
sub
cmp
cltd
and
in
dec
in
out
orb
and
push
addb
add
and
mov
push
push
xor
das
jl
in
xor
fsubl
dec
je
xchg
addr16
test
in
xchg
into
fwait
rcr
incb
pop
mov
fmuls
mov
pop
loopne
pop
in
jbe
push
xadd
lea
je
add
pop
mov
add
mov
jbe
inc
inc
inc
int
aad
rcrb
adc
push
or
jnp
mov
test
pushf
add
xchg
fimull
and
lcall
loopne
xchg
movsl
mov
xchg
xor
fdivr
mov
scas
mov
mov
adc
lret
orb
fucomp
push
in
xor
xor
pop
pop
loopne
lahf
mov
repz
cmp
js
mov
aaa
mov
inc
clc
out
leave
int3
push
mov
pop
or
test
xor
decb
pushf
popa
cltd
sbb
test
fistps
sub
mov
xchg
sub
dec
pop
pop
cwtl
cmp
clc
in
mov
fwait
or
or
repnz
shrl
and
icebp
mov
movsl
pop
test
jp
push
xor
adc
test
pop
sbb
inc
pusha
add
xchg
fwait
test
jne
clc
push
push
fsubrl
ds
fistpl
ret
arpl
sub
pop
and
movsb
outsl
jge
ror
and
push
test
sub
rcrl
rorl
aam
push
push
cltd
lods
or
jg
stos
push
pop
pop
outsl
jbe
adc
fadds
insl
js
add
insl
insl
movsl
outsl
xchg
push
enter
into
test
push
das
inc
adc
push
fwait
push
cld
test
cmp
lock
hlt
fists
xor
ror
mov
mov
add
adc
jns
sarb
ret
add
repnz
in
lods
xchg
mov
cmpsl
je
inc
add
push
sbb
xor
daa
incl
cmpsl
dec
cmp
int3
subl
or
daa
jge
lcall
movsl
dec
shlb
xor
lock
adc
mov
clc
inc
jge
orl
shl
mulb
cmp
jge
or
inc
xchg
dec
test
popa
rorl
jne
cli
mov
test
sti
repz
ljmp
and
pop
jns
adc
mov
loopne
push
sbb
and
push
iret
addr16
push
fcomi
adc
adc
adc
ljmp
xor
imul
inc
scas
jo
mov
imul
lods
test
dec
xor
aaa
sbb
das
cld
ret
xchg
mov
sub
xchg
loope
inc
push
add
push
outsb
lock
sbb
jg
cmp
xchg
mov
int
enter
mov
inc
push
sarl
arpl
or
mov
shl
jno
call
loope
or
jb
inc
ficoml
insb
aam
mov
pop
test
pop
lret
cmp
jb
jg
push
das
push
and
dec
inc
ror
rcrl
jge
and
jmp
insb
pop
push
xlat
adc
pop
iret
cmpsb
outsl
rol
cmp
fdivs
shlb
push
dec
std
cltd
cmc
mov
arpl
push
mov
pop
subl
cmp
vpunpcklqdq
je
test
cmpsl
inc
xchg
jnp
push
jno
xor
mov
jnp
mov
jmp
les
filds
pop
sub
sarb
das
orb
insl
test
pop
push
mov
pop
sbbl
jae
in
adc
mov
mov
sti
ljmp
mov
imul
jl,pn
sub
scas
cmp
inc
dec
pop
or
add
ds
mov
dec
arpl
xchg
inc
std
mov
fidivl
mov
adc
pop
ja
cld
or
cmp
in
or
push
aas
mov
dec
roll
mov
insl
arpl
mov
inc
data16
sbb
jl
out
pop
inc
mov
lock
push
or
lods
push
in
imul
or
cli
mov
cmpsb
mov
jl
adc
mov
mov
mov
jecxz
adc
mov
icebp
xchg
add
lea
sbb
adc
mov
sahf
loop
sub
inc
rcr
adc
stos
scas
jne
arpl
cltd
icebp
pusha
stc
icebp
sub
inc
push
into
lcall
lds
inc
mov
ret
or
xchg
mov
mov
adc
mov
mov
cld
aad
out
pop
push
sub
cmc
mov
dec
loopne
lret
and
fs
cld
fdivs
ja
dec
mov
rolb
mov
push
push
gs
dec
mov
adc
pop
loop
out
stos
scas
pop
jbe
daa
sub
dec
xor
pop
and
dec
adcb
lds
xchg
add
lea
xor
mov
jmp
into
leave
fucom
sti
movsl
fwait
mov
push
xchg
inc
mov
fwait
cmpsb
xchg
xor
inc
in
fcmovne
in
bound
daa
dec
jno
or
incl
cmp
mov
inc
stos
fnsave
test
rcr
repnz
add
xor
jmp
pop
enter
gs
push
js
les
push
mov
das
flds
push
jmp
mov
out
pop
mov
aas
dec
cmp
pushf
cmpb
jae
in
and
sub
mov
mov
int3
je
insb
negb
hlt
lahf
xor
dec
jno
aad
mov
xchg
movd
add
xchg
lret
add
adc
sbb
xorb
add
jbe
sti
ja
cmpsl
xchg
movsl
inc
push
xchg
xchg
sbb
jle
xchg
fadds
mov
add
inc
cmp
das
int3
push
add
fisubrl
loope
push
arpl
arpl
ljmp
inc
iret
lcall
add
cltd
rcrl
adc
jne
xchg
adc
pop
repz
das
add
xor
out
ret
mov
imulb
popf
jne
cmp
sar
out
ljmp
mov
cli
mov
into
repz
pop
sub
dec
jb
mov
xchg
xchg
cltd
pop
and
and
sbb
fbld
cmc
push
fildll
mov
lcall
fildl
push
pop
sub
mov
dec
ljmp
lods
sbb
xor
xchg
hlt
je,pn
xchg
sub
outsl
fcomps
das
or
repnz
inc
adc
mov
cltd
dec
push
divl
jne
test
inc
hlt
cmpl
dec
pop
lret
sti
push
pop
dec
xchg
inc
ja
pop
adc
aas
aaa
push
jg
mov
xchg
cmpsl
mov
or
ljmp
lods
fsubrp
or
ret
jle
dec
dec
mov
cmp
inc
lea
popf
leave
or
or
jp
sub
fadd
or
sub
cmp
insb
pop
and
mov
jp
ljmp
inc
in
test
mov
shrl
test
iret
jno
sbb
push
jle
std
fnstcw
mov
fwait
dec
cmp
xchg
test
repz
mov
mov
inc
adc
inc
sti
sbb
rcrb
pop
jno
xchg
pushf
lahf
xor
mov
mov
sbb
pop
xor
mov
in
inc
inc
inc
fs
xor
aas
int
inc
jne
or
xchg
gs
xchg
inc
pop
call
test
pop
imul
insl
fsubrl
lcall
xchg
fwait
outsb
or
add
sbb
pusha
test
icebp
pop
pop
addb
ja
xchg
icebp
push
filds
lds
int3
mov
fsts
fisubs
xor
push
inc
ret
pushf
pxor
ljmp
dec
sbb
sub
clc
rclb
imulb
icebp
icebp
add
aam
movsb
mov
sbb
sbb
mov
dec
mov
inc
pop
sahf
das
stc
loop
cmpsl
sarl
add
pop
add
mov
out
loope
pop
popa
add
out
mov
mov
int
stc
mov
fcmovbe
insl
push
sub
pop
mov
inc
push
dec
push
popa
push
add
inc
lcall
subb
js
jnp
pop
xchg
pop
inc
pop
mov
sub
xlat
sbb
clc
add
in
push
lret
mov
shl
xchg
adcb
inc
popf
in
lods
mov
pop
jo
xlat
adc
movsb
cmp
ljmp
fimull
sbb
mov
cmp
jb
cli
and
and
or
inc
mov
inc
sbb
inc
sbb
push
lods
mov
sti
not
inc
lea
je
shll
fwait
xor
aaa
xabort
sarb
int3
les
pop
cwtl
stos
xor
or
or
loopne
rcrl
addr16
mul
pop
add
cmpsb
xchg
sti
and
sbbl
fs
xchg
mov
loope
das
mov
lods
in
dec
and
and
xchg
fs
aam
imul
in
ss
mov
add
cs
fistl
mov
xor
mov
or
mov
xor
sub
popf
push
lds
pop
fmulp
xchg
jmp
adc
std
add
cmp
das
push
inc
pop
inc
pop
shl
mov
mov
icebp
xchg
jp
jo
mov
push
ds
mov
jne
sub
and
xor
pop
insl
movl
jo
fdivrs
mov
sub
sub
popa
ds
mov
movsl
fmuls
enter
jmp
in
mov
call
or
lea
dec
jg
into
jns
daa
pop
in
mov
das
add
sub
add
lea
pop
in
insb
pop
push
add
int3
stc
xor
adc
pop
push
cmp
cmpb
adc
xchg
push
mov
rorb
outsl
aaa
aam
push
xchg
mov
mov
mov
enter
or
mov
pop
adc
sub
enter
andb
add
mov
push
scas
loopne
shlb
pop
and
pop
add
fdivs
or
aas
cld
shr
jmp
push
jecxz
sbb
cmp
or
jbe
fcmovu
aaa
add
cs
mov
mov
mov
iret
dec
outsl
test
jbe
xchg
xchg
push
out
and
call
add
scas
fucomi
pop
pop
cmpsb
mov
xchg
rolb
pop
xor
push
jne
xchg
add
lods
push
sti
add
mov
sbb
loop
fldl
test
scas
ret
push
movsl
jo
push
jge
adc
insl
test
inc
inc
hlt
cmp
pop
inc
push
mov
ret
cwtl
cmpsl
or
je
adc
imul
mov
shrl
andb
pop
xor
mov
mov
push
lock
dec
cmp
push
ficoms
inc
mov
add
xchg
call
sub
xchg
roll
mov
add
in
dec
fsubrl
jno,pt
test
dec
inc
mov
aas
adc
mov
lcall
jge
ficomps
dec
addr16
loope
cld
inc
stos
mov
push
or
xor
das
add
mov
pop
lahf
xchg
push
andb
loopne
decl
in
xlat
scas
mov
cmc
stc
out
test
mov
lock
xor
in
pop
push
xchg
idivl
cmp
clc
xchg
pop
imul
mov
add
jno
xchg
pop
mov
inc
mov
frstor
stos
add
jl
outsl
inc
in
clc
mov
js
mov
push
loopne
adc
xchg
pop
sub
and
xchg
loop
pop
mov
xor
sbb
xor
inc
adc
in
mov
daa
int
stos
test
xor
add
xor
and
pop
adc
addl
cmpsb
cli
adcl
loope
jbe
pushf
jne
xor
fcoml
aaa
rcll
sbb
rorb
je
mov
ret
orl
test
mov
add
stos
mov
push
lret
psllq
subl
stos
add
stos
daa
lcall
jg
scas
jmp
sarb
mov
rcll
incl
fwait
dec
cmpsl
push
idivl
push
dec
icebp
dec
xor
mov
sahf
add
les
adc
aas
fisubrl
pop
nop
mov
idiv
leave
mov
xor
push
push
or
les
pop
addl
jnp
adc
mov
inc
in
test
or
add
out
jecxz
fsubs
jnp
sbb
ror
jno
fidivs
and
fmul
aam
out
stos
jmp
mov
jne
inc
xor
sub
mov
ret
mov
jle
mov
xor
mov
cmp
xor
insb
push
lea
aas
test
pusha
aas
and
cmp
ja
or
inc
hlt
imulb
rol
push
fcoml
dec
sahf
add
mov
fdivs
rorb
cmp
sub
adc
pop
adc
pusha
cli
js
mov
push
push
popf
ficoms
outsl
mov
add
pop
test
xlat
cmpsl
cmp
ds
iret
rclb
sub
dec
adc
outsl
aaa
mov
adc
pop
pop
cwtl
pop
push
arpl
inc
shl
enter
adc
aas
mov
fldt
fcomip
mov
fcomi
lea
cmp
sub
adc
push
mov
into
cmp
push
add
push
roll
push
pop
out
or
fsqrt
pop
mov
adc
push
and
or
clc
int
cli
cwtl
imul
testl
imul
or
shll
cwtl
cli
and
mov
mov
mov
fs
in
ret
rcrl
cwtl
lret
mov
sti
fstl
add
add
push
cld
mov
fsubrs
pop
dec
add
test
push
je
imul
xor
fimull
insl
mov
arpl
lea
filds
adc
adc
imul
xlat
mov
jnp
add
add
fildll
ja
jno
xchg
mov
in
pushf
adc
inc
sub
nopl
dec
shlb
int
mov
or
lock
rol
adc
test
adc
mov
adc
aad
call
mov
xor
add
adc
add
outsb
mov
inc
push
imul
mov
out
scas
pushl
jnp
es
mov
or
mov
popf
jl
in
es
jne
and
mov
sar
cltd
jg
and
aaa
inc
sub
sub
test
or
rclb
pop
in
lea
jnp
es
clc
mov
mov
mov
fs
sub
jae
dec
jle
ss
js
stos
test
xchg
fcoms
cltd
cltd
loopne
test
jmp
pop
in
sub
cwtl
ja
push
mov
scas
inc
in
pop
insb
mov
adc
fsubrl
call
push
adc
movsb
je
jb
dec
orb
or
sbb
or
mov
loope
lock
mov
inc
xchg
add
mov
push
push
les
int
pop
out
add
cmp
test
shlb
inc
and
test
insb
dec
sub
addb
loop
mov
cld
mov
and
movsb
pop
inc
movsb
fs
jno
adc
sub
cli
xchg
xor
push
sbb
lret
inc
adc
popf
push
fcoms
ljmp
cmp
dec
xchg
or
test
lahf
add
adc
clc
jle
mov
pushf
xchg
jp
iret
icebp
inc
insl
mov
iret
push
inc
sbb
jmp
add
icebp
dec
aaa
clc
cmp
cmc
pop
mov
rcll
dec
add
cs
push
xchg
and
lcall
xchg
mov
fcoms
imul
das
pop
sarl
jecxz
andl
push
pop
sub
mov
jecxz
fdivr
outsb
pop
aam
ja
sarb
outsb
add
cmc
cmp
adc
loop
add
mov
jne
xor
jle
adc
xchg
stos
mov
mov
pop
adc
scas
sub
jne
adc
insl
fs
push
pop
ds
add
mov
test
dec
mov
inc
adc
cmc
push
mov
xchg
sbb
sub
fildll
adc
and
xchg
leave
add
sbbb
add
ss
sub
push
jns
out
sub
andb
sbb
xor
jo
test
pop
pushf
jmp
jne
push
add
fdivs
mov
in
outsl
jp
daa
sub
inc
push
sub
xor
fists
dec
test
sbb
cmp
mov
daa
in
or
lock
cmp
inc
lcall
stc
inc
aam
pop
insl
mov
test
adc
pop
xchg
mov
inc
adc
add
jb
mov
inc
push
push
sarb
fcoml
hlt
pop
or
insb
dec
test
or
or
lea
das
arpl
fs
cld
leave
push
sti
pop
cmp
pop
push
jnp
cltd
fisttps
xor
mov
inc
loop
loopne
add
sub
clc
add
les
and
sbb
inc
sti
adc
mov
push
int3
or
dec
or
mov
inc
std
mov
sbb
lock
fdivr
mov
mov
push
adc
sub
ljmp
pushf
pusha
and
test
push
call
dec
pop
and
mov
lods
ret
ljmp
push
in
pop
lahf
add
and
loop
outsb
and
and
mov
jno
ret
sbb
icebp
xor
push
outsl
lahf
call
dec
add
add
repz
decl
sbb
cmpsb
add
aas
and
repz
in
mov
sbb
xor
and
enter
add
fistpll
repnz
push
jmp
shrb
or
add
push
mov
test
sbb
outsb
leave
or
mov
shlb
in
xchg
push
and
pop
andb
movsl
or
sub
ret
pushf
je
add
test
mov
rorb
xlat
cmp
mov
cmc
roll
nop
push
pop
test
test
mov
aad
pushf
push
insl
lret
push
gs
into
or
adc
bound
out
dec
adc
clc
dec
jns
cmp
mov
stos
movsl
test
call
mov
adc
push
xchg
push
imul
pop
inc
aam
push
dec
or
aaa
mov
cmpsl
shlb
test
loope
ds
lock
jl
mov
cld
xor
js
add
add
std
push
jecxz
ret
xchg
cs
sub
js
jmp
mov
mov
out
push
lea
pop
sub
cmp
cli
add
int
rcll
into
jle
ret
and
mov
rolb
fiadds
push
test
fisubrs
int3
scas
test
inc
aad
pop
cli
jg
ret
jg
inc
sub
jo
je
dec
mov
dec
xchg
dec
in
scas
xor
fistl
mov
sbbl
out
inc
aad
add
orb
lret
push
cmp
cmpsb
mov
in
test
cmpsl
push
jge
lods
fbld
ret
stc
lock
pop
rclb
ret
mov
fisubs
scas
mov
pop
or
loop
mov
sub
sub
dec
xchg
cld
in
out
outsb
mov
dec
fildl
adc
and
in
outsl
stos
adc
pop
rol
sub
cmc
mov
mov
dec
mov
and
sbb
mov
stos
fimull
cmpsb
mov
ret
loope
sarb
pop
ret
and
orb
imul
sub
xchg
nop
rcrb
push
or
push
outsl
mov
cmp
adc
jmp
jo
int
pushf
jecxz
rcll
insb
movsl
dec
add
dec
mov
xchg
cmpsb
add
in
mov
int3
adc
fiaddl
clc
mov
fsubl
loop
dec
or
test
test
iret
in
repz
dec
notb
push
cmc
mov
cmpl
pop
xor
push
in
popa
andb
cltd
mov
jmp
decb
nop
cmp
loope
mov
in
dec
je
jle
jge
fnstsw
mov
cmpsb
andb
sbb
test
add
mov
hlt
int3
push
and
and
xchg
inc
xchg
clc
pop
mov
add
add
adc
sbb
adcb
sbb
insb
cmpsl
dec
sub
sbb
mov
decb
xchg
rorb
or
or
out
push
stc
dec
push
pop
cs
inc
aam
loope
jp
cltd
aas
sbb
inc
pop
nop
sti
clc
cmp
mov
and
pop
mov
orb
xor
push
insl
adc
gs
mov
jmp
or
add
imul
push
or
or
test
lods
int
test
out
sub
jecxz
mov
jle
sbb
sbb
popf
insb
add
or
xor
mov
pop
xchg
or
leave
mov
stos
jmp
dec
stc
or
ret
hlt
push
mov
mov
or
or
mov
add
mov
and
dec
add
out
xor
loopne
mov
filds
add
shlb
call
stos
sub
call
insl
sbb
mov
stc
lds
pop
je
fs
mov
pop
call
and
cmp
ds
xchg
lcall
sahf
add
cli
outsb
xchg
lret
cmp
outsb
mov
fmuls
mov
fistpl
subb
pushl
push
loop
popf
mov
lock
jle
movsl
cmpsl
inc
nop
fmuls
loop
jle
dec
jb
mov
xlat
adc
shrb
jmp
aad
sbb
sbb
pop
in
pop
jns
and
add
jecxz
sbb
int
aam
outsb
pop
jo
jp
pusha
scas
xchg
pop
cmpsb
out
clc
push
sbb
rclb
mov
addb
pop
test
insb
jno
push
xchg
and
push
loop
add
rolb
out
cmc
push
mov
mov
jne
repz
bound
aaa
jp
inc
nop
push
or
pop
mov
pusha
adc
add
xchg
jo
filds
inc
or
add
sbb
call
mov
pop
mov
out
mov
push
pop
cli
das
jmp
inc
push
and
push
pop
fstpl
pop
mov
dec
int3
adc
adc
lds
pop
std
pop
outsb
fucomp
adc
out
or
mov
jnp
aam
sbb
sahf
fld1
hlt
and
pop
push
out
daa
imul
subl
xchg
mov
pop
push
push
imul
dec
out
or
and
lcall
add
int3
and
mov
popf
aam
repz
push
inc
dec
je
enter
pop
cmc
call
test
out
stos
mov
call
cld
outsl
mov
aaa
push
popa
leave
lods
je
clc
mov
fnsave
lret
cmp
rcr
pop
fcoms
add
xchg
push
sub
test
cmp
mov
inc
insb
ffreep
nop
ja
or
popf
outsb
fstp
cmp
mov
jno
sub
or
iret
adc
jne
mov
or
xor
adc
inc
and
xor
repz
pop
clc
pop
mov
sub
pop
jle
jle
out
inc
adc
dec
iret
dec
xor
xorl
stos
cli
xor
pop
arpl
jno
jnp
sbb
and
movsl
xchg
jne
outsl
dec
sar
sbb
fldt
adcb
inc
decl
std
adcb
and
daa
cmp
dec
xlat
mov
inc
je
sbb
add
pop
add
scas
loope
out
mov
add
js
mov
test
loopne
add
pop
or
pop
les
mov
stos
cmp
xchg
arpl
fstps
sub
loope
sub
movsl
sbb
lds
pop
xchg
push
loop
imul
fldt
mov
push
pop
fcmovnbe
das
sub
push
lcall
inc
imul
outsl
adc
das
divb
cld
push
add
sbb
push
dec
adc
aam
add
fs
fsubs
dec
sahf
rep
cmp
fcmovnb
pop
adc
pop
sub
dec
adc
adc
mov
test
outsl
or
jb
mov
sahf
inc
xlat
adc
dec
lea
pop
rol
sbb
dec
fiaddl
lret
ss
cs
lcall
push
sub
movsl
sbb
or
pop
mov
fisttpll
xlat
stos
mov
push
sbb
lock
fwait
jb
imul
repnz
cltd
jnp
testb
jne
rcl
xor
std
cmp
ja
add
stos
imul
scas
lods
loop
pop
push
jge
add
out
jbe
movsl
es
scas
mulb
add
and
mov
mov
mov
popa
dec
cwtl
sti
mov
setns
test
xchg
iret
leave
push
lcall
cmp
or
fwait
ss
pusha
add
out
call
mov
pop
lds
lods
dec
or
pop
add
nop
push
or
int
std
lods
mov
mov
std
addl
mov
outsl
insb
pop
push
jmp
and
mov
bound
repnz
cmp
daa
ret
pop
fistl
dec
movsb
clc
fcoml
cmc
add
fistpll
stos
or
mov
pusha
mov
add
xchg
xor
jne
push
or
mov
je
push
push
mov
add
add
dec
dec
adc
sub
dec
in
test
ret
daa
sbb
mov
movl
std
mov
sbb
push
push
push
insl
out
std
jl
pop
push
push
push
pusha
add
filds
and
out
incb
orl
clc
push
fistpl
insb
jge
jb
mov
clc
push
push
add
repz
lcall
in
call
inc
sub
sbb
sub
add
mov
or
cs
push
add
lret
ret
or
call
shrb
push
stos
in
cld
in
ret
fldl
lock
mov
pushl
mov
inc
dec
lret
cld
push
hlt
push
or
add
push
hlt
inc
js
sbbl
jle
pop
mov
rcll
inc
imul
jg
stc
add
inc
dec
sub
push
pop
clc
jbe
push
add
push
push
push
push
clc
push
cmp
xchg
or
outsb
jge
xor
cld
jne
push
dec
xchg
fs
lods
xor
mov
into
adc
jbe
push
add
xlat
mov
add
xor
popf
or
xor
mov
rcr
outsb
pop
mov
mov
jo
or
mov
mov
negl
into
adc
inc
adc
or
aaa
testl
xor
or
outsl
push
dec
outsb
lret
insb
mov
insl
or
loopne
std
pop
xor
dec
pop
xor
push
aas
cmp
pop
push
adc
xor
push
xor
inc
jae
cmp
push
lock
ds
mov
sbb
add
fs
je
dec
xor
out
add
les
in
push
out
outsb
popl
xor
xor
imul
jmp
push
or
cmc
mov
add
dec
push
aad
imul
pop
sbb
dec
sub
add
test
nop
and
push
xor
push
inc
dec
addr16
jno
jb
pop
fldl
xor
insb
negl
xor
dec
into
sarl
addr16
inc
add
xchg
mov
cmp
and
jo
aas
adc
push
push
neg
jae
sub
in
pop
andl
out
arpl
inc
out
hlt
and
loope
out
pop
xor
lahf
mov
testl
ljmp
pop
sub
mov
push
push
sub
das
std
mov
adc
inc
pop
sbb
add
mov
aad
hlt
dec
push
dec
or
dec
gs
push
jo
xchg
mov
mov
icebp
add
dec
push
fsubs
add
ljmp
dec
push
imul
jnp
aas
inc
add
add
add
dec
add
ret
inc
mov
repnz
popa
pop
ja
xchg
or
dec
push
dec
and
add
in
outsl
add
jbe
popa
inc
and
js
inc
int
mov
aam
inc
js
je
pop
loope
dec
mov
mov
fmuls
add
jge
je
dec
and
shll
mov
movsl
mov
mov
push
shl
jg
and
pop
fadds
jl
mov
out
xor
js
fisttps
push
mov
jo
mov
mov
sbb
fisttps
add
mov
and
dec
inc
mov
sbb
enter
neg
test
xor
or
mov
adc
mov
out
mov
adc
dec
into
inc
cmp
lods
sub
and
and
in
insl
mov
mov
popf
mov
popa
mov
inc
mov
push
leave
lahf
pop
pop
ret
ret
sti
or
sub
sbb
add
sub
sub
mov
mov
jo
sbb
iret
inc
mov
aas
mov
add
sub
push
pop
les
faddp
xor
mov
push
arpl
jbe
adc
push
push
push
sub
mov
outsb
neg
jbe
int3
add
dec
insl
bound
push
inc
sub
inc
dec
aas
fdivr
test
int
bound
dec
sbb
test
mov
lods
inc
adc
inc
jmp
pop
push
mov
mov
mov
inc
mov
ds
mov
lret
lods
fimull
xlat
cmpsl
inc
pop
push
xor
mov
ja
xor
xor
arpl
mov
sub
jo
pop
sahf
lret
jo
dec
mov
mov
adc
imul
test
dec
mov
shrb
iret
outsb
pop
mov
push
addr16
jo
xchg
insl
push
fcomps
jae
add
sbb
sbb
loope
pushw
and
dec
outsb
xorb
std
sub
xor
adc
or
testb
sub
mov
loop
mov
mov
add
add
add
mov
cmp
in
jb
pop
fcomp
js
outsb
push
push
add
clc
and
insb
inc
shrb
pop
fwait
outsb
push
es
call
mov
mov
inc
ret
outsb
pusha
xchg
es
xlat
jne
add
pop
loopne
lret
andb
lds
mov
and
adc
lcall
dec
das
mov
hlt
push
dec
cmp
lds
pop
insb
faddp
push
arpl
mov
jg
jo
add
dec
mov
jae
clc
push
push
push
xor
addr16
or
or
lods
dec
aaa
pop
or
cmc
inc
fdivl
imul
out
aam
xor
setb
mov
push
jo
out
imul
mov
icebp
mov
addr16
inc
push
jg
and
mov
push
in
sub
rcrb
cli
shlb
loopne
inc
fisubl
mov
aas
push
mov
pop
nop
inc
push
jmp
rcl
push
pop
mov
dec
pushl
inc
dec
adc
xor
rcl
ret
xor
ja
dec
jge
ret
push
leave
push
mov
test
push
xchg
dec
fcoms
xor
mov
mov
call
inc
mov
xor
pusha
push
in
or
xchg
es
icebp
lea
mov
adc
add
ret
movsb
mov
addb
sub
aaa
jnp
loope
ss
scas
xchg
and
mov
fcomi
adc
aaa
js
jns
add
or
sub
sbbb
div
cmpsb
pusha
adc
imulb
lock
test
scas
jnp
aaa
push
dec
shrl
sub
mov
sbb
outsb
adc
rcrl
push
js
mov
inc
aaa
pushl
or
xor
inc
pusha
lahf
lahf
sub
dec
call
lahf
lahf
push
dec
outsb
out
adc
and
cmc
jo
sub
or
in
jbe
aaa
mov
dec
shr
das
xchg
add
dec
hlt
negb
add
push
xor
mov
xor
push
sub
daa
add
xor
inc
jecxz
mov
cmc
xor
xor
out
and
dec
test
xorl
inc
jo
daa
inc
sub
sbb
dec
mov
dec
add
adc
mov
inc
add
out
jno
gs
gs
addr16
aad
rdpmc
loopne
in
mov
mov
dec
outsl
jns
sti
lods
fisttpl
adc
lcall
in
mov
hlt
scas
push
dec
xor
inc
xchg
jp
jg
push
pop
bound
push
popa
sub
pop
push
les
push
xor
xor
dec
xor
dec
loopne
dec
popa
scas
aas
leave
movsb
add
push
fsubrs
test
int
jle
xor
pop
pop
push
jno
xor
out
pushf
lock
mov
inc
dec
mov
pop
xor
jno
cmp
inc
add
fimuls
mov
test
add
insl
clc
mov
and
add
loopne,pt
aad
sub
call
or
push
dec
aaa
jmp
add
mov
sbb
and
jno
test
loope
sub
inc
aas
xor
dec
fwait
js
mov
mov
adc
lock
rclb
mov
mov
insb
and
js
push
inc
inc
mov
jne
push
fimuls
jno
dec
inc
fucomp
shrb
cmp
jo
push
popl
outsb
or
pop
sub
popa
pop
mov
insl
sbb
clc
jb
push
js
das
sti
xor
or
loopne
js
inc
sarl
sbb
scas
pop
jno
popa
insl
clc
xchg
adc
sbb
mov
loopne
push
negl
push
je
ret
outsb
pop
je
pop
ret
test
fs
adc
jmp
sub
addr16
push
mov
or
mov
mov
adc
push
jne
and
scas
inc
push
je
int3
inc
hlt
adc
leave
dec
sbb
mov
jne
imul
loop
sbb
mov
xchg
add
leave
ret
inc
lds
dec
sti
insb
mov
lods
in
ja
loopne
adcl
mov
jno
in
pop
incl
sahf
add
fwait
jl
mov
push
push
sbb
xchg
arpl
gs
call
outsb
xchg
adc
lea
stos
or
mov
shll
xor
shlb
faddl
add
jo
xchg
loop
int3
je
push
aam
punpcklbw
mov
repnz
cmpsb
mov
sbbl
pop
dec
mov
inc
mov
mov
pop
inc
or
inc
mov
mov
sub
push
imul
add
pop
or
clc
inc
jo
dec
jae
fimuls
rorb
inc
fisttps
aad
xorb
stos
mov
pushl
das
pop
dec
js
sbb
dec
sbb
adc
gs
pop
mov
repnz
mov
mov
dec
dec
sbb
mov
pop
stos
cmp
outsl
add
add
dec
add
into
jmp
dec
jns
xchg
pop
and
inc
sbb
aam
sti
jbe
sub
add
sbb
mov
lret
outsl
insl
pushf
clc
out
clc
inc
dec
jo
dec
and
push
js
dec
lods
add
mov
or
imul
sub
inc
add
jl,pn
ja
lcall
fmuls
fidivl
cmp
inc
pop
xor
es
add
dec
lcall
inc
ret
pop
adc
adc
pop
mov
fidivrs
inc
jae
xor
adc
cwtl
ja
sub
mov
inc
sub
mov
push
jb
push
add
xor
mov
out
cmp
xor
xor
cli
mov
dec
sbb
lcall
lahf
cmp
aad
ja
arpl
dec
mov
lret
cmpsb
mov
fistpll
add
aam
fimull
popf
lcall
jns
jns
push
mov
push
push
jo
outsl
mov
jmp
dec
push
push
ss
fsub
shlb
cwtl
loopne
iret
mov
pushf
aaa
fidivl
inc
imul
sbb
mov
leave
dec
inc
outsl
js
sbb
inc
je
dec
mov
pop
fadds
loope
sbb
dec
cld
dec
fsubs
inc
dec
rcll
jne
fsts
sub
mov
sbb
and
cmp
add
je
push
jno
fs
enter
loopne
pop
xor
xor
mov
notl
sub
jnp
aam
insb
dec
push
dec
xchg
fs
lea
test
daa
push
int
add
call
xor
inc
dec
adc
ficoms
xchg
or
nop
aad
dec
adc
dec
jmp
fldenv
jne
imul
xchg
icebp
pop
rcrl
subl
jns
inc
push
lock
dec
loope
adcl
push
lods
mov
stos
lods
scas
push
xor
aad
addr16
in
jo
shlb
nop
add
dec
out
push
sbb
mul
push
out
dec
cmpsb
or
dec
movsb
shll
mov
push
pop
lock
fs
xor
add
popa
push
popa
push
inc
fdivr
sub
les
push
push
xchg
lar
std
ljmp
test
loopne
dec
int3
pop
ljmp
and
push
pop
xchg
dec
xchg
insb
ss
mov
mov
push
ss
stos
pop
mov
push
jae
loopne
lret
lock
xchg
enter
cmp
imul
push
dec
data16
imul
xor
push
jecxz
pop
adc
pop
xchg
cli
inc
insl
push
insl
call
add
lcall
push
mov
dec
push
mov
daa
pop
mov
popa
jo
inc
mov
inc
into
aas
jb
shll
inc
and
cmp
lods
xor
outsb
fs
pop
jno
push
inc
pop
push
insw
cld
adc
add
mov
adc
sbb
cmp
add
push
push
outsb
leave
aad
lea
mov
push
lcall
xor
js
addr16
inc
insb
mov
mov
mov
rcrb
ss
push
fld
cmp
jns
jbe
jo
scas
sahf
xorb
loopne
push
sub
mov
push
popf
aaa
testl
addl
or
inc
inc
inc
push
add
lds
mov
mov
js
jo
add
pop
pop
jae
lcall
adc
mov
pop
out
pop
add
mov
inc
aaa
pop
sarb
cs
notb
pop
push
gs
icebp
ret
jnp
xor
dec
jno
adc
add
insl
jmp
or
or
testl
cmp
xor
hlt
cmp
cmc
ffreep
popa
cmp
inc
mov
sub
mov
and
js
insb
repz
subb
jl
sub
push
dec
xchg
mov
arpl
push
inc
pop
loope
sbb
xor
xchg
ds
cmp
push
ss
ret
in
adc
push
adc
inc
notl
push
pop
push
inc
mov
mov
add
push
xorl
pop
es
sahf
fstl
mov
mov
push
ss
aaa
xor
xchg
insb
cmp
sbb
ss
mov
js
jg
jmp
jp
mov
cmpsb
hlt
je
push
je
sbb
adc
les
bound
dec
std
loopne
jns
in
cli
roll
mov
adc
dec
push
mov
mov
inc
fldt
cmp
xchg
or
movsb
sbb
pusha
xor
sti
sub
inc
xor
add
or
jo
adc
or
xchg
rclb
sbb
insl
je
mov
lods
adc
or
dec
mov
imul
push
inc
add
outsl
xor
mov
lcall
mov
bound
add
imul
dec
scas
in
xor
inc
or
inc
pop
cmp
push
mov
inc
or
jbe
add
xchg
addb
push
lods
test
pop
test
add
xchg
out
popf
dec
test
xor
aaa
mov
inc
je
rol
and
add
pop
mov
inc
jle
adc
arpl
mov
mov
rorl
sbb
xchg
dec
mov
lds
rcrl
test
pop
push
testb
lahf
add
bnd
mov
add
jbe
fs
xor
mov
icebp
les
pop
imul
setbe
lods
fimuls
adc
loopne
xor
cli
enter
jo
ljmp
gs
movsl
and
dec
pop
das
inc
add
lea
jecxz
dec
sub
xorl
push
andb
push
lock
sub
push
std
insb
dec
aaa
pop
repz
adcb
cmp
js
mov
push
dec
mov
dec
xchg
in
fcmovbe
outsb
dec
dec
xchg
xor
pop
data16
rolb
rol
popf
xchg
into
test
test
push
dec
push
jns
mov
cld
stc
and
jo
fst
dec
adc
push
dec
xchg
cmp
inc
push
mov
cmc
rolb
dec
add
sbb
negb
dec
sbb
dec
ja
sub
fbstp
sti
mov
dec
ja
or
clc
fsubs
fwait
jno
popa
xor
cmp
stos
insb
pop
bound
and
and
pusha
test
loop
push
loopne
jge
mov
mov
push
cwtl
or
in
sti
adc
inc
add
or
inc
adc
movsb
mov
jle
add
sti
call
or
adc
add
lret
inc
and
int3
fbstp
int
pop
add
inc
sub
ret
idivl
or
ds
add
in
inc
xchg
inc
xchg
sub
pop
add
xchg
cltd
adc
cwtl
jns
xor
adc
add
cmc
cwtl
in
sub
adc
push
fwait
stc
aaa
idivl
popa
loop
cmp
jae
inc
xor
push
sbb
mov
sbb
mov
ret
insl
sti
pop
push
jb
sti
incl
jne
mov
xor
jmp
ss
mov
pop
mov
mov
sti
lcall
jns
stos
je
pop
jnp
push
or
jmp
inc
cmp
out
pushf
or
icebp
xorb
ss
ja
fists
ja
mov
lock
lea
and
pushf
dec
mov
jnp
fstpt
add
adc
cmp
lcall
sub
adc
enter
or
jae
lods
ljmp
push
sbb
jge
inc
cmpsl
xchg
es
sbbl
pushl
or
jge
movsb
or
sub
or
lahf
idiv
cmp
in
in
stos
add
pop
pop
xlat
jl
adc
cmpl
jns
add
popa
and
ret
imul
faddl
lcall
push
pop
jae
dec
clc
jle
xchg
fsubrs
cmc
push
mov
ja
mov
pop
push
pop
inc
jns
adc
and
mov
jnp
adcb
inc
les
pop
jo
arpl
into
inc
loope
jnp,pt
adc
inc
xchg
movsl
mov
into
cld
fistpll
imulb
and
aam
xchg
punpcklbw
push
mov
scas
ret
out
pop
dec
xchg
aad
js
jg
inc
add
in
adc
test
mov
nop
rcrb
nop
jae
pop
pop
mov
inc
mov
shrb
hlt
dec
xlat
and
pushl
out
inc
and
xchg
out
sbb
gs
inc
mov
cmp
aad
movsb
lret
repnz
cmpsb
notb
into
mov
inc
cmpsb
jg
std
mov
cmp
xchg
cmp
cmp
adc
adc
adc
mov
into
mov
lds
cmc
or
jp
adc
and
jae
sbb
jge
mov
pushf
or
shl
and
negb
popf
popf
mov
push
subl
jae
sbb
sub
in
or
scas
ret
or
pop
ret
call
lea
sbb
aad
push
mov
xchg
adc
dec
inc
add
inc
negl
out
insb
push
lods
scas
out
les
mov
ret
pop
mov
fdivrp
mov
out
ret
pop
xor
leave
pop
pop
xchg
popf
sti
in
lcall
fcoms
mov
mov
out
sbb
adc
jnp
jo
sbb
fcmovnu
jno
pop
xchg
popf
inc
xor
sar
xchg
or
add
test
inc
imul
stos
mov
jg
jl
repz
imul
sbb
cmp
enter
adc
and
push
pushl
xor
dec
test
aam
xor
push
lahf
push
aas
jae
lods
mov
xchg
push
xchg
ret
nop
mov
lds
decl
inc
add
xor
aad
pushf
mov
call
xor
out
mov
pop
xchg
adc
jnp
mov
sbb
ret
jnp
iret
ss
cmp
jg
mov
divb
or
sub
lahf
loope
pushf
or
push
icebp
test
out
pxor
mov
rcrb
ljmp
idivl
pop
in
das
xor
popa
mov
fidivl
cwtl
das
mov
push
mov
stos
inc
mov
gs
lock
jnp
int
stc
adc
outsb
sub
cmp
out
push
jmp
inc
fmulp
or
ja,pn
inc
pop
ljmp
shlb
xchg
sbb
hlt
jle
js
fcoms
ret
mov
add
fninit
jg
add
cmovg
cwtl
fcmovnbe
lcall
lcall
jl
sbb
pop
pop
fldcw
jnp
aad
inc
andl
ljmp
jae
or
or
out
jg
fst
repz
xchg
out
pop
or
xor
ss
mov
je
inc
fnsave
mov
mov
lods
pop
aas
add
pop
xchg
inc
jbe
fidivrs
dec
scas
xchg
mov
cbtw
push
sahf
dec
fistpll
idiv
inc
dec
mov
rclb
adcl
filds
and
jb
pushf
rcrb
mov
loope
xchg
add
lds
cwtl
dec
int
outsl
lods
pop
fnsave
lahf
push
add
cs
xchg
push
sub
mov
testb
lea
or
jmp
jnp
adc
xchg
ficomps
push
inc
adc
cli
aas
push
cmpsl
or
jbe
push
add
les
mov
std
in
lret
adc
fwait
cmpsl
pop
loopne
ffreep
or
jl
push
ja
lea
mov
mov
xchg
push
and
into
cmp
cs
aaa
inc
adc
mov
or
mov
dec
orb
std
pop
fadd
call
add
mov
jbe
xor
clc
push
push
inc
aas
vmovsldup
or
repz
cmp
lret
xchg
js
int
mov
cmp
shlb
jle
jns
jbe
push
cmp
adc
ja
aad
icebp
xchg
push
test
data16
fs
or
out
lods
lods
push
fwait
out
mov
dec
mov
rcr
dec
loopne
mov
adc
mov
pushl
and
xlat
mov
aam
movsl
sti
fimull
out
pushl
push
pop
fs
fldt
mov
scas
stc
mov
std
fnstenv
shl
int3
aaa
push
mov
inc
pop
jg
jg
push
outsl
pop
jno
arpl
lock
addl
dec
clc
jg
cltd
enter
jp
je
out
xchg
mov
jmp
lock
loope
shl
outsb
pop
cld
fdivrs
jmp
sbb
aas
jo
pop
fidivrl
test
incb
inc
mov
hlt
pop
adc
inc
jnp
in
mov
push
pop
adc
in
adc
pop
mov
jl
xor
stc
rcrl
push
dec
out
jno
and
ds
cmp
sbb
popf
jns
mov
xor
ffreep
rcr
push
adc
jle
sbb
add
ja
pushl
data16
test
pop
pop
inc
xorb
inc
sub
out
fistps
pop
lret
stc
andl
outsl
pop
jne
push
fstl
shl
loop
sbb
stos
negb
inc
inc
inc
sub
xor
mov
test
test
mov
cs
nop
inc
mov
nop
inc
mov
inc
lret
popf
pop
insl
push
jb
adc
pop
jmp
lret
jnp
rol
dec
or
pushl
and
out
test
loop
cmpsb
inc
push
jmp
sub
push
mov
adc
movb
cli
ds
ja
mov
add
in
repnz
ret
lock
scas
mov
ret
mov
mov
lret
pusha
dec
lock
fstps
mov
xchg
mov
dec
jno
add
lret
pop
xchg
cmp
pop
fcoml
cmp
xorl
mov
test
xchg
cmp
sbb
jp
imul
jmp
jge
scas
in
incl
or
and
jno
aaa
push
sub
fmull
jg
cltd
in
and
push
push
xchg
pop
fimull
mov
out
hlt
adc
xor
jle
aas
sbb
mov
adcb
inc
and
xor
clc
sub
popf
lock
sub
out
sbb
and
cmp
mov
inc
inc
std
or
clc
outsl
add
sub
cmp
lea
xchg
mov
icebp
out
mov
or
adc
fdivrs
jge
std
gs
sahf
inc
outsb
popf
and
jmp
pop
and
cmp
jg
mov
ret
cmp
cmc
sbb
cld
cmp
aaa
push
std
fistl
cltd
sbb
add
mov
sbb
add
lret
popa
lods
rcrl
lcall
test
cmpsb
push
stos
sbb
sti
lahf
call
sub
mov
sbb
push
jmp
cli
paddusb
mov
in
and
mull
gs
or
lock
pop
das
xor
push
jge
daa
in
jecxz
int
movsl
and
je
shrl
cmp
pop
out
add
into
stos
push
sbb
mov
sub
ja
lock
fsts
cmp
outsl
fmuls
xor
ret
adc
sti
mov
mov
or
test
outsl
and
inc
popa
fs
mov
inc
xchg
mov
hlt
inc
jbe
mov
mov
push
xchg
cmp
pop
sbb
mov
or
jp
in
lds
fsts
cmpl
clc
rcrb
dec
psubsw
pop
cli
in
lock
pop
pop
mov
add
xor
lock
jecxz
push
ffreep
and
in
leave
iret
add
cwtl
jnp
xchg
xor
in
inc
pushl
out
fidivs
mov
mov
xor
and
jnp
ja
jo
jl
mov
rcll
xchg
and
aas
orl
mov
sbb
mov
pop
rcrl
mov
out
mov
sbb
xchg
decl
rcll
in
dec
xchg
add
pop
sarl
xchg
push
cld
fildll
mov
xor
add
das
idiv
std
dec
insl
divb
cli
jmp
fisubl
stc
ja
stos
add
jg
ljmp
push
repz
sub
fucomp
pop
and
cmpsl
xor
aaa
cmp
jb
iret
loopne
pushf
aad
inc
cmpsb
or
add
mov
xor
arpl
mov
es
test
inc
mov
and
adc
cld
incl
mov
or
leavew
pop
mov
out
mov
pop
sub
sti
pop
lock
pop
cmp
cli
jae
popf
inc
idivl
js
or
cli
out
shl
mov
or
test
inc
pop
mov
std
ds
cmpsl
scas
mov
punpckhbw
mov
cli
repz
dec
xchg
leave
sub
ds
adc
incl
or
in
adcl
pop
ja
pop
and
add
stos
or
ja
jg
pop
dec
or
stos
and
cmc
inc
xchg
sbb
decl
adc
movsl
jbe
mov
stos
pop
jmp
jb
lds
je
rorl
inc
ss
mov
lahf
jge
mov
sbb
inc
into
push
dec
jb
ss
std
pop
mov
js
bound
xchg
addr16
inc
cmp
jg
jns
out
pop
dec
dec
imul
pop
int
scas
mov
js
or
sub
mov
add
dec
lods
test
sub
addl
xchg
adc
xchg
mov
mov
lock
mov
popa
leave
jb
sub
and
pushl
push
mov
scas
xchg
push
adcb
das
js
daa
neg
sti
repz
and
out
add
adc
hlt
inc
outsl
xchg
xchg
lock
lcall
sahf
imul
loope
cmp
mov
push
sbb
std
test
fistps
push
arpl
adcb
aam
hlt
aaa
inc
mov
popf
jnp
je
addr16
pop
sub
clc
jge
and
sbb
dec
icebp
lret
jg
adc
rcr
push
xchg
cwtl
sub
adc
mov
cmp
daa
je
fists
cwtl
nop
mov
fdivl
xor
movsb
test
je
inc
inc
inc
mov
clc
pop
dec
incl
outsb
mov
fimuls
adc
mov
imul
mov
notl
mov
cmp
pop
mov
addr16
mov
lock
lret
mov
adc
push
sbb
xchg
ret
icebp
xchg
rol
js
mov
int
outsl
cwtl
in
aas
push
push
leave
fdivrl
sbb
popa
inc
pushf
sub
js
sbb
sub
pushf
mov
xor
xchg
cmp
jns
inc
ss
sti
sub
xor
lea
sub
mov
lods
fcoml
stos
loope
sahf
out
and
shll
xlat
fsubrp
dec
shrl
test
mov
pop
xchg
jl
cmp
fadds
ret
xor
and
dec
inc
sub
inc
xchg
into
pop
cmpsb
xchg
stos
fwait
nop
pop
inc
aas
sbb
out
adc
insl
xor
pop
xor
ret
cwtl
push
mov
jo
arpl
arpl
mov
mov
fs
sub
aas
and
fwait
jo
enter
mov
mov
xor
cmp
js
jo
pusha
inc
pusha
inc
sbb
jmp
pop
mov
xchg
mov
pop
nop
icebp
popa
lock
fdivs
adc
ja
in
ret
ja
cmp
imulb
mov
pusha
cmp
dec
cmpsl
jg
xchg
cwtl
cmpb
ljmp
xchg
jmp
movsl
ds
subb
lods
mov
in
jl
add
xchg
jmp
ja
mov
mov
sahf
pop
xchg
lock
push
lods
cmc
stc
pushf
cmpsl
inc
add
push
lcall
or
jnp
push
loope
fdivrp
pop
cli
out
into
sub
inc
nop
mov
aas
loope
sub
sbb
dec
cli
arpl
inc
add
jg
mov
shlb
ror
std
arpl
add
cmp
dec
mov
js
sti
out
mov
shrb
arpl
sbb
dec
mov
and
dec
or
and
sub
push
sbb
stc
mov
popf
insl
pop
aaa
cli
fdivrl
cmpsl
inc
xchg
leave
push
mov
es
mov
sbb
call
add
pop
add
bsf
adc
mov
xor
sti
xchg
loope
aam
lcall
mov
pop
mov
jb
test
clc
adc
lcall
mov
insl
xor
jge
or
roll
rclb
scas
xlat
cli
into
adc
fs
or
popf
sti
xor
xor
pop
lahf
movsl
or
js
dec
into
and
jg
xchg
stc
mov
sub
inc
loopne
cmp
fdivs
bnd
bound
fwait
negb
outsb
fidivrs
jae
add
push
sarl
mov
xchg
ljmp
push
or
sbb
dec
ret
push
jno
pop
xchg
ja
ja
push
xchg
in
test
or
jo
sbb
fcompl
loope
jno
add
cltd
daa
js
cwtl
test
aaa
or
inc
out
aam
ficoms
aam
cli
jg
mov
arpl
mov
jg
jbe
xchg
cmp
rcl
out
adc
insb
stc
sbb
pop
ficomps
sbb
cld
in
ja
pop
jmp
inc
push
xchg
xchg
adc
into
sub
leave
sub
inc
cmpb
rorb
lret
loope
jbe
das
imul
aas
gs
mov
sbb
sti
iret
jb
jle
push
or
and
loopne
or
cmp
pop
test
gs
aad
std
sbb
jo
adc
dec
scas
lret
add
fisubl
dec
cmp
push
mov
pop
stos
idiv
test
out
mov
aam
insb
fcoml
inc
dec
cli
lock
pop
cli
add
in
and
xchg
xor
push
addb
sarl
sti
sub
inc
adc
hlt
and
incb
jecxz
add
push
push
pop
je
sbb
jbe
fucom
jg
cmpsl
dec
inc
dec
scas
sbb
mov
shll
movl
imulb
inc
fdivr
ss
or
xchg
xchg
out
mov
and
inc
mov
and
or
mov
pop
inc
add
ja
incl
mov
or
pop
jb
aaa
sbb
fsubrp
sbb
cli
mov
push
inc
pop
fldenv
xor
lea
jnp
jbe
bound
aas
dec
aas
jle
pop
int3
loope
inc
cmpsl
xchg
in
dec
sbb
push
xor
xchg
fwait
xchg
inc
mov
sarb
stos
cmp
push
insl
mov
sbb
pop
lods
and
outsl
cli
pop
sub
pushf
inc
xchg
xor
pop
clc
mov
jg
lea
jge
push
sarb
imul
sti
adc
add
dec
sub
add
jle
fisttpll
test
bound
imul
xchg
int
lods
int
mov
dec
xchg
sbb
daa
hlt
sbb
jns
dec
sub
in
push
cmp
xor
out
xor
mov
push
push
test
clc
and
xchg
outsb
out
push
push
push
insb
and
cld
add
dec
lret
and
incl
push
mov
into
ja
aad
push
pop
jge
adc
ja
hlt
fisttpll
mov
mov
and
bound
addr16
andl
pop
pop
imul
sbb
mov
inc
push
dec
adc
loope
jae
mov
movsl
sub
pop
sarl
gs
lahf
sti
jg
push
cli
insl
mov
or
sbb
and
lea
dec
jg
add
arpl
xor
sub
rorl
pop
incl
cmp
xor
out
add
mov
loop
dec
jecxz
popf
lods
int3
mov
push
add
or
add
clc
pop
imul
out
inc
cmp
pushf
les
test
out
decl
add
out
into
jb
in
lcall
aas
sti
mov
cmp
div
add
in
push
ss
gs
in
pushl
dec
hlt
dec
mov
subb
fnstcw
pusha
dec
out
lock
in
cld
add
rorl
bound
inc
sti
outsb
xchg
pop
adc
mov
pop
mov
adc
or
and
pop
andps
aas
adc
xorb
xchg
fbld
loope
cmp
push
mov
into
fs
sbb
add
icebp
incb
mov
mov
icebp
and
stos
mov
mov
sbb
clc
filds
mov
pop
bound
mov
xor
ss
movsb
incb
lea
dec
loopne
pop
lock
push
mov
fdivr
add
outsl
icebp
mov
push
dec
dec
add
incl
into
xor
jl
add
mov
dec
sbb
xor
mov
adc
add
cmpsl
pop
aad
test
push
fisubs
push
andb
adc
cltd
ljmp
in
ss
ret
jle
mov
push
imul
cltd
xchg
push
push
ds
sti
iret
std
jg
cwtl
je
sti
ja
cmp
pop
inc
cwtl
or
lock
jp
pop
fsubrs
jg
das
dec
sar
jge
dec
jecxz
mov
dec
mov
pushl
push
cmp
add
in
out
xor
pusha
add
sub
aam
or
mov
sbb
push
pop
push
cmpsl
std
cmpsl
rorl
out
mov
je
fstps
loope
cmp
addr16
push
inc
jmp
cltd
adc
dec
cmp
mov
test
mov
inc
ds
sarl
jge
sbb
jp
push
dec
loopne
xorl
ret
xor
testb
cld
aad
xchg
pusha
int
fcomi
aaa
adc
pop
mov
push
dec
jge
or
dec
mov
mov
and
or
jne
decb
lock
pusha
imul
movsb
aas
lock
pop
sub
sbb
enter
jg
fstl
sub
icebp
jbe
call
sbb
pop
dec
cmp
stc
das
bound
or
leave
mov
pop
adc
movb
loope
mov
mov
mov
pop
fisttpll
hlt
sub
adcb
pop
icebp
add
or
std
ja
lahf
mov
stc
mov
add
mov
inc
aas
das
inc
sbb
jnp
jne
and
jge
cli
lock
aaa
jge
xchg
add
pop
and
jg
inc
mov
jg
repz
sub
adc
lods
cmp
shll
sbb
addr16
stos
cld
rcll
mov
cmp
adcl
dec
addr16
or
sub
out
fildl
pop
cmp
xor
add
stos
sbb
and
pushf
neg
xchg
sbb
adc
cld
pop
cli
adc
jecxz
loope
mov
jne
mov
cmpsl
test
pop
push
arpl
ss
push
jbe
fiaddl
sbb
cmp
test
lahf
icebp
outsl
mov
sahf
jno
cmpsl
int3
and
pop
xor
inc
subb
xchg
loopne
icebp
mov
movsb
pop
mov
cli
push
mov
cmp
push
jns
adc
ja
aas
icebp
imul
pusha
sbb
fs
aam
mov
mov
mov
jecxz
in
mov
add
es
push
nop
sub
mov
jecxz
out
in
xchg
xor
mov
sub
call
or
mov
das
icebp
ja
sbb
mov
icebp
xlat
add
pop
js
lock
leave
pop
mov
adc
cmp
pxor
or
cli
js
push
js
push
or
cld
mov
mov
shl
cmc
enter
lock
pusha
cltd
cmp
aas
mov
ja
jl
mov
fsubrl
jmp
ja
jecxz
xchg
sbb
test
inc
mov
stos
xor
add
pop
pop
pushf
rorb
js
mov
pop
push
inc
add
mov
jae
rcrl
lds
mov
dec
sub
dec
fbstp
or
push
nop
jmp
popf
fidivrl
repnz
or
jl
repz
adcl
mov
loope
jg
ljmp
popf
jb
push
jg
mov
cwtl
clc
sbb
popa
push
mov
pushl
lds
dec
jmp
mov
popa
cs
mov
shr
and
jb
lahf
test
add
xchg
xor
jecxz
jmp
icebp
ljmp
call
push
add
push
xor
inc
std
xor
dec
push
stos
int3
hlt
pop
push
call
mov
mov
inc
leave
jecxz
sbb
cmp
dec
stos
incl
nop
xchg
mov
ja
test
push
fisubrl
mov
inc
ja
mov
hlt
add
xlat
lahf
jge
inc
lock
test
jle
cmpsl
loope
sub
mov
xchg
inc
lcall
filds
push
int
fwait
in
outsb
dec
xorl
and
dec
call
mov
setno
jo
mov
cmpsl
fwait
rclb
xchg
cmp
filds
mov
xchg
enter
aam
or
je
add
cmpsl
pop
push
or
ljmp
xor
xor
loop
call
push
pop
movsl
insl
push
jb
inc
pop
hlt
clc
xor
mov
imul
pop
jmp
in
and
test
sbb
push
aam
mov
ljmp
fbld
jecxz
inc
mov
add
mov
das
and
ret
decl
fwait
xchg
mov
push
inc
in
jg
mov
addr16
out
sbb
jne
nop
sub
or
in
jg
jecxz
sbbb
int3
xorl
and
lahf
aad
leave
mov
pop
mov
cmp
arpl
or
lcall
xchg
out
inc
sbb
jl
sub
shlb
lcall
cmpsl
xor
loop
xchg
cmp
or
dec
je
ss
icebp
comiss
out
jnp
or
sarb
cmp
jecxz
jno
jne
ret
aas
mov
filds
lret
scas
ja
xchg
or
mov
sbb
test
mov
movsb
dec
in
push
push
xchg
cli
filds
pop
adc
push
scas
pop
loopne
push
daa
pop
stos
mov
ja
clc
jg
shrb
push
fstpl
jecxz
dec
add
shlb
call
dec
mov
test
jnp
pop
adc
aas
push
ljmp
call
std
mov
out
or
stos
lret
repz
xor
lods
cmp
jecxz
int3
push
or
in
jmp
jmp
data16
dec
sahf
stos
pop
jmp
xchg
push
mov
ja
jmp
dec
push
push
pusha
das
lret
cmp
pop
lret
ficomps
mov
lahf
test
mov
rolb
push
ret
mov
std
addr16
cmp
xor
inc
add
fs
pushf
mov
push
pop
ljmp
test
in
xchg
inc
sti
sub
push
cs
in
std
cs
lods
jge
in
lret
iret
andl
sbb
jae
pusha
xchg
pop
sbbb
cmpsb
pop
mov
out
push
push
lock
push
mov
int
mov
xchg
aas
inc
mov
daa
mov
adc
and
lcall
pop
mov
sti
gs
cmp
in
jg
or
add
cmpl
out
in
inc
sub
adc
and
adc
sbb
aas
inc
sub
and
scas
decl
jmp
int
out
pop
lods
sarb
sbbl
arpl
or
cmp
xchg
pop
aad
fbstp
adc
push
xorl
and
cmc
pop
outsl
jae
add
loopne
call
arpl
out
mov
sub
arpl
pushl
pop
and
cmp
loope
aas
aaa
mov
arpl
cmp
mov
add
xchg
cmp
les
mov
addb
adc
cmpsb
in
pop
cmpsl
in
inc
xor
jnp
mov
popf
aad
cltd
movl
cli
movsb
mov
icebp
das
rcr
dec
sbb
stos
jnp
insb
scas
inc
loopne
jnp
sub
add
arpl
stc
push
mov
out
je
ficompl
dec
ds
xchg
pop
cld
aas
sbb
or
outsb
loope
pop
sbb
cmpsl
adc
lret
cmpsb
jg
adc
jo
mov
pop
pop
add
ret
pushf
push
cs
in
adc
add
inc
gs
pop
in
mov
in
cmp
and
mov
sahf
and
push
jp
add
sub
stos
in
cmp
cli
cld
ds
pushf
repz
ljmp
lret
ja
push
test
mov
inc
fstl
iret
adc
aas
pushf
incb
cmp
mov
and
incl
fmul
daa
xorb
xorl
aad
lret
push
ret
mov
xor
xor
add
dec
mov
lods
push
inc
add
dec
sahf
insl
mov
xor
dec
xchg
ja
push
sbb
sbb
add
out
into
pop
test
inc
out
add
testb
fs
and
sbb
aaa
icebp
dec
inc
sub
in
clc
in
pop
adc
dec
xchg
jecxz
mov
mov
lcall
shr
fidivrs
in
incl
mov
pop
aam
push
das
mov
bound
mov
push
rolb
aad
out
push
push
dec
inc
psllq
cmp
test
xor
or
maskmovq
mull
cld
push
pop
jns
movsl
and
dec
mov
loope
mov
shrb
in
mov
scas
pop
imul
sarl
pop
test
arpl
ja
dec
clc
dec
loop
add
inc
xor
inc
in
pusha
ret
inc
inc
or
xor
cld
pop
mov
imul
fiadds
in
jecxz
add
insl
js
xchg
inc
clc
add
pushf
filds
insb
jno
pop
jl
enter
out
or
cwtl
adc
add
mov
out
sbb
mov
mov
iret
bound
in
mov
jnp
inc
jg
ja
cmp
lods
scas
es
xchg
aam
jl
or
daa
inc
clc
pop
movsb
cmp
add
adc
push
ljmp
add
and
sub
cmpsb
mov
xor
mov
add
shlb
seta
push
fs
pop
add
pop
fcomi
xchg
add
inc
push
push
pop
mov
mov
ja
dec
cmp
out
and
jnp
pop
jmp
sbb
adc
mov
pushl
fisubl
sahf
adc
sub
xlat
cltd
and
cmp
add
shll
je
bound
sub
xlat
cmp
mov
inc
fisubl
adcb
pop
mov
cmc
clc
out
push
pushf
loop
mov
loopne
mov
mov
clc
jg
push
sbb
mov
jns
push
addr16
or
lahf
sbb
bound
sub
inc
sbb
adc
rcll
push
adc
mov
cmc
or
popa
js
test
mov
in
and
adc
or
and
repnz
push
imul
push
xchg
adc
xchg
js
mov
jg
pop
mov
adc
cs
out
add
hlt
out
loope
pop
lds
adc
cmp
adc
mov
push
adc
xchg
adc
je
xchg
repz
push
je
xchg
add
jnp
pop
dec
mov
icebp
jg
aaa
adc
out
fistpll
mull
lcall
in
sbb
or
ja
clc
ja
out
loopne
in
test
sbb
mov
scas
cmpsb
and
out
ljmp
sbb
sub
in
aas
mov
pop
xchg
sbb
orb
loop
dec
or
mov
enter
cmp
cmp
and
pop
cmp
fisubs
dec
or
enter
jns
push
fprem1
xor
lahf
sti
xchg
mov
cmp
popw
in
aas
hlt
out
das
adc
lock
ds
and
andl
mov
xor
cmp
out
iret
cli
mov
add
stos
or
xorb
ja
stc
xchg
fdivrs
ficoms
clc
mov
cmpl
mov
aas
bound
jnp
sub
mull
and
xchg
pop
sbb
xchg
cmpsb
repnz
push
and
outsb
dec
call
pop
hlt
outsb
sarb
loope
add
jecxz
cmpsb
pop
loop
mov
pop
push
rorb
inc
dec
cmc
bound
jle
ja
fistpll
je
cmp
dec
xchg
cmp
cmp
lahf
mov
xor
repz
push
ja
or
mov
sbb
sbb
jbe
sub
sbb
xchg
xor
iret
std
pop
lahf
pushf
xchg
push
jp
mov
shl
xchg
adc
mov
mul
mov
cltd
sub
je
in
out
xlat
dec
iret
pusha
mov
sahf
fidivrl
xchg
jmp
enter
js
sub
lods
xor
mov
push
cmpsl
jno
or
mov
mov
xchg
adc
sbb
dec
repz
pop
jne
jne
add
mov
push
pushl
sar
sbb
shll
add
repz
push
shrb
mov
fwait
jmp
clc
sub
clc
inc
test
xor
fwait
xor
adc
dec
fwait
or
shlb
dec
scas
lcall
out
lods
xchg
sbb
inc
cmc
or
inc
out
dec
hlt
pop
andl
fildl
pop
std
out
cmc
lock
idiv
stos
or
xchg
iret
dec
cmpsl
or
dec
cmp
inc
mov
addr16
dec
xchg
mov
or
sbb
in
pusha
hlt
mov
dec
scas
cmpsb
rcrl
lods
ror
paddsb
or
add
int
std
or
push
push
inc
mulb
mov
lods
mov
xchg
inc
sub
aas
inc
std
xchg
sbb
inc
cmp
gs
inc
ss
out
jl
aas
fdivrp
xchg
sub
mov
insb
pop
jne
pop
repnz
fucom
sbb
xor
das
jg
push
loope
mov
movsb
jg
pop
add
leave
ficompl
push
sbb
or
or
jnp
and
xor
call
pop
sub
inc
mov
cmp
pop
and
aam
mov
mov
adcl
outsl
cmc
mov
sub
mov
stos
cld
cmp
loopne
call
aad
lea
sbb
gs
inc
clc
out
push
dec
or
out
leave
pushl
cmc
inc
xchg
fcomps
mov
xor
lret
aas
push
push
jmp
stos
adc
and
xor
cmc
cmpsb
popf
ret
adc
pop
incb
aam
addr16
mov
xor
sub
and
or
dec
call
sbb
dec
add
or
data16
cld
cmp
mov
cmp
mov
out
sbb
adc
dec
lcall
cmp
js
mov
and
loopne
xchg
bound
imul
jne
lahf
iret
clc
pop
bound
pop
xchg
mov
cmpsb
test
outsl
hlt
jg
clc
adc
in
out
cmpsb
xchg
pop
inc
inc
ja
pop
cwtl
mov
xchg
dec
sbb
fs
mov
adc
pop
out
scas
lret
ss
cmp
aas
inc
test
adc
push
incl
orl
mov
and
adc
xchg
lret
adc
push
mov
or
xlat
icebp
jge,pn
mov
adcl
mov
addb
adc
mov
lahf
sbb
inc
adc
je
sub
or
pop
cmp
pusha
cs
pop
negb
outsb
mov
iret
in
inc
mov
daa
popf
push
in
outsb
inc
xchg
in
stos
cmp
lret
inc
inc
push
or
mov
movsl
je
shrb
loop
shll
pop
imul
inc
jo
fistps
cs
jns
daa
outsb
ret
jle
scas
mov
loope
or
push
jg
inc
sbbl
popl
adc
xchg
adc
xor
mov
outsl
mov
test
aaa
xor
mov
not
xchg
pop
inc
sub
lods
mov
or
out
ja
cmp
lock
ds
mov
leave
lret
test
sbb
and
aaa
dec
movsl
dec
dec
cli
das
xchg
jb
inc
loope
mov
stc
cmc
adc
dec
int3
mov
jge
testl
mov
rorb
mov
mov
push
fucomp
xchg
mov
into
sbb
push
repnz
aam
mov
mov
loope
or
movsb
xor
sbb
fidivrs
lret
mov
or
add
sti
test
pop
push
ljmp
push
in
push
es
loope
ret
push
fcomp
cs
mov
clc
jp
push
lcall
xlat
inc
in
stos
jb
mov
sbb
or
stos
movsb
push
cld
lahf
xchg
lods
cld
jb
test
icebp
adc
out
stos
jg
js
jb
and
les
call
cmp
je
data16
sub
pop
jle
lock
aad
rcll
pop
push
or
clc
out
jno
push
adc
sub
sbb
arpl
mov
stos
test
test
jg
sbb
xchg
pop
aad
ljmp
repnz
cltd
subb
xorl
add
cwtl
hlt
arpl
or
rol
leave
nop/reserved
jns
loopne
add
push
pop
xchg
ret
dec
popf
fstpt
sbb
push
loope
jp
scas
test
and
std
popf
mov
imul
jle
xchg
shlb
mov
subl
xchg
cmpsb
popa
dec
decl
fiadds
repz
adc
hlt
ret
sub
popf
mov
push
sbb
mov
or
scas
js
int3
insb
fisubl
pop
sub
ss
popf
xor
pop
cmc
fistl
xchg
gs
ret
jg
fidivs
dec
inc
mov
popf
jns
setno
sub
dec
inc
inc
push
push
dec
add
lcall
jg
popa
aaa
sub
adc
mov
out
imull
or
lahf
fdivrp
adc
pusha
push
jg
lods
mov
scas
push
mov
or
stos
push
jg
aas
and
pop
addr16
mov
xchg
xchg
jg
mov
cltd
popa
and
addb
cld
notl
iret
clc
adc
mov
out
outsl
outsl
shlb
sarb
fidivrs
fidivrs
sbb
or
cwtl
mov
sti
sbb
pop
push
fcompl
ret
xchg
fidivs
add
mov
in
sub
loope
fwait
inc
xchg
mov
rclb
add
inc
mov
fcoml
xor
and
push
dec
fwait
adcb
jecxz
or
jb
rcl
lret
push
test
sbb
cmp
mov
scas
or
call
lock
jne
repz
lahf
call
sub
test
mov
adc
les
addr16
push
je
mov
inc
xchg
mov
hlt
or
xchg
add
jle
inc
out
adc
decl
orl
lret
xchg
bnd
call
sub
pop
or
mov
sub
je
bound
insb
or
push
std
pop
push
lahf
sub
cmpsb
jp
mov
pop
loope
popa
out
mov
and
ljmp
xchg
and
mov
sbb
jns
scas
in
xor
lret
les
xchg
jae
clc
dec
stos
jns
scas
jae
cli
and
sub
cmc
call
lcall
scas
push
cmp
xchg
addr16
lock
dec
incl
out
movsl
mov
adc
incb
in
inc
mov
sbb
xchg
xchg
dec
lods
cmc
loopne
cmp
movsl
dec
jae
andb
mov
test
pop
xor
cmp
jl,pt
cs
xlat
std
stos
mov
and
mov
movsb
stos
leave
pushf
add
in
ret
jmp
mov
add
and
incl
dec
xchg
mov
icebp
lcall
cld
sbb
dec
loop
push
lcall
idivb
aas
mov
rorl
mov
add
inc
call
loopne
adc
adc
js
push
pusha
dec
shrb
mov
loop
ljmp
push
and
jnp
mov
aaa
cmp
hlt
je
lock
jmp
shrl
xchg
in
fnstsw
xchg
cmp
arpl
mov
ret
dec
movsb
mov
ljmp
lods
aaa
test
sbb
xchg
and
pop
leave
jecxz
pop
mov
jne
pop
sarb
iret
and
jl
out
inc
or
ja
fisttps
dec
xor
add
adc
aad
push
jecxz
out
repz
mov
sbb
mov
push
int3
adc
mov
and
mov
push
leave
sbb
ljmp
mov
push
stc
jnp
xchg
fwait
xchg
cmp
jle
mov
loope,pt
xchg
mov
push
xorb
pop
cmc
xor
das
lcall
divl
and
call
inc
or
ficoms
pop
sbb
sbb
push
pop
cmp
sbb
or
stos
and
mov
out
push
or
mov
jl
or
mov
xchg
jp
loopne
movsl
in
lods
dec
and
icebp
xor
fwait
lock
pop
dec
out
push
cld
aas
nop
out
orb
call
rolb
scas
enter
cmp
sub
mov
sbb
push
aad
push
scas
adcl
cli
lahf
test
xor
adc
adc
xor
mov
dec
mov
sbb
xorl
mov
add
pop
out
lcall
lods
dec
mov
jmp
xor
lock
movsl
out
fdivrl
xchg
xchg
fistpl
mov
les
shll
aam
pop
imul
cmpsl
xlat
loopne
ja
sbb
pop
xchg
pop
cmpsl
pop
cmp
int
aas
mov
push
pop
lret
ret
add
daa
xchg
int
sti
in
sub
js
xlat
icebp
pop
out
pop
in
mov
push
ja
mov
add
out
mov
xchg
or
and
add
std
idiv
dec
repnz
push
enter
pop
adc
add
adc
in
repz
sub
sti
jmp
js
daa
test
add
cmc
out
jo
adc
pop
push
sbb
adc
dec
jle
mov
or
jno
add
jecxz
out
loopne
stos
mov
cmp
lret
xor
iret
xchg
adc
xchg
ret
cmp
ja
inc
jo
fildl
aas
stc
mov
lret
add
lock
jp
ret
mov
jmp
fdivs
cmp
mov
arpl
jmp
sbb
cmp
dec
in
add
cmpsb
idiv
imul
popa
adc
xor
imul
add
aas
add
jnp
pop
out
cwtl
lock
test
jne
xor
and
fistps
adc
inc
pop
call
aad
data16
cld
aam
clc
lahf
sti
cmp
arpl
in
adc
and
scas
push
loop
xor
add
shr
push
pop
aad
mov
in
mov
and
pop
fcomps
xor
loopne
incl
idiv
ja
mov
dec
mov
pushf
aas
sbb
bound
ja
pop
loope
cmp
mov
push
pop
aam
call
mov
push
les
loop
push
lods
clc
mov
ret
das
jnp
dec
inc
pop
enter
sbb
and
mov
mov
es
dec
repnz
mov
push
daa
fsubs
iret
and
jns
xor
pop
loopne
sub
pop
rcl
jg
neg
cmpsl
or
enter
sub
or
stos
mov
push
sbb
add
mov
mov
mov
lods
xchg
xchg
push
enter
cmp
cli
cmpsb
into
es
mov
sbb
cmp
sbbb
xchg
sub
dec
jmp
jge
sbb
pop
xchg
loope
fsubl
es
sbb
sbb
or
inc
and
loopne
sub
addr16
adc
cli
or
roll
cs
mov
je
fadds
mov
jne
call
imul
sbb
sub
shll
add
dec
std
push
lcall
jmp
imul
leave
clc
cmp
sbbb
outsb
mov
popf
incb
fisubl
mov
test
add
push
cmp
pushl
repnz
aas
mov
movzwl
xchg
stos
int3
movsb
loop
dec
fsubs
xchg
lods
pop
insb
pusha
rol
cmc
loop
inc
call
push
push
pop
mov
sbb
cmp
xor
sbb
lock
in
push
inc
sbb
sbb
mov
incb
pop
out
push
test
ffreep
rclb
push
filds
mov
push
jg
cli
mov
adc
les
arpl
cli
xchg
aaa
popf
inc
cmpsl
mov
cli
outsb
shrb
xor
je
in
ds
andl
pop
fdivrs
push
scas
subb
cli
pop
cli
call
sbb
xchg
mov
notb
pusha
loopne
push
mov
or
cwtl
pop
adc
rorl
mov
lds
subb
cs
xchg
test
jns
push
xchg
mov
lcall
cld
int
mov
idiv
xchg
jo
movsb
std
push
fsubrl
push
and
push
inc
std
movsb
ljmp
fsub
sbb
or
imul
icebp
out
test
es
xchg
pop
ret
frstor
in
cmpxchg
add
mov
dec
icebp
popf
sti
aas
orb
or
test
push
sbb
insb
sbb
icebp
daa
fisttps
lods
outsb
add
mov
cld
out
lods
and
popf
leave
push
cld
testl
and
adc
inc
inc
popf
into
clc
cmpsl
dec
icebp
loop
xchg
icebp
repnz
orl
test
adc
loope
lods
ret
dec
shrl
jno
xor
daa
cmc
idiv
rorb
shl
and
dec
mov
in
hlt
rcl
outsb
popa
cs
out
push
mov
mov
loopne
shl
test
xor
test
add
xchg
adc
sbb
mov
and
mov
rorl
dec
les
andl
insb
adc
test
call
lock
fidivs
popa
notl
jb
inc
repz
xchg
push
push
sbb
dec
nop
mov
sub
adc
xor
push
aam
decl
stos
loop
sti
or
push
fsubrl
cmpsb
in
xchg
sub
pop
adc
sbb
push
xor
adc
dec
dec
push
mov
jg
in
cwtl
pop
cmp
into
pop
push
jnp
mov
scas
xor
xchg
lods
sbb
sub
mov
popf
rolb
paddw
and
ja
stos
dec
hlt
cmc
pusha
std
ret
imul
fiadds
xor
icebp
fnstcw
add
jns
pop
dec
in
test
pop
dec
jmp
scas
inc
add
in
sbb
mov
outsl
push
mov
xchg
sbb
mov
enter
ret
jo
push
push
pop
popa
pop
mov
jecxz
xlat
stos
cli
xchg
idivl
xchg
sbb
mov
je
adc
insl
cmc
or
orl
jg
cli
pop
outsl
lcall
cs
aas
testl
push
je
orb
mov
jg
ret
fildll
pop
sbb
or
jmp
notl
push
scas
mov
sbb
push
and
sub
dec
js
jmp
ret
adc
xor
sbb
aas
int3
outsb
call
mov
sbb
xor
out
jmp
jnp
ja
popf
dec
nop
dec
jl
test
mov
pop
and
pop
mov
insl
je
xchg
or
sti
xchg
test
jmp
daa
mov
hlt
les
pushl
or
loop
imul
decl
pop
fisttpl
mov
dec
loope
or
mov
aas
mov
and
sbb
lods
sub
add
fists
mov
popf
out
or
and
outsb
bswap
mov
mov
mov
sub
sbb
xor
aas
je
inc
jb
lods
mov
jg
clc
les
cld
pop
test
mov
insb
xor
lret
scas
add
add
sbb
push
in
jg
add
sahf
shll
dec
rclb
mov
or
lcall
les
pop
pop
ds
jecxz
int3
and
mov
dec
fistps
nop
repz
pop
adc
mov
jecxz
jp
gs
mov
inc
xor
aas
push
lock
mov
mov
and
pushf
mov
mov
sti
xchg
das
push
test
ffree
dec
popa
sarl
mov
dec
fs
outsb
xor
or
push
dec
in
jge
adc
jg
decb
stc
imulb
movsb
inc
sub
jns
lea
cmp
mov
mov
aas
push
out
in
jecxz
stos
ficomps
adc
cmpsl
xor
mov
loope
push
movsb
push
fidivrs
sub
mov
fsubp
repnz
pop
je
mov
into
std
lahf
cwtl
loope
stc
cli
cltd
std
bound
jo
add
mov
je
ja
sti
add
inc
xor
js
sahf
jle
and
push
inc
punpckhdq
push
mov
frstor
pushf
push
xor
mov
clc
xor
in
push
ss
in
push
lds
loopne
pop
sbb
add
ret
arpl
jo
loopne
mov
and
ja
std
sbb
aas
jecxz
pop
mov
jge
je
mov
lock
fldl
add
mov
adc
movsb
lea
cli
pop
repnz
clc
mov
loope
push
ss
or
xchg
stc
mov
test
push
mov
loopne
out
sub
bound
cmp
cld
inc
js
jmp
jecxz
sahf
xor
outsl
sbb
push
dec
sbb
or
js
mov
jg
pusha
dec
pop
sub
out
or
lcall
dec
stos
adc
cmc
inc
mov
scas
pushf
xchg
call
ret
cmpsl
incl
insl
push
jae
vphadddq
and
add
dec
inc
xor
decl
or
and
imul
out
and
sbb
or
pop
jmp
lock
arpl
mov
sub
out
push
out
add
jne
mov
test
or
jge
xor
xchg
xchg
ret
inc
jmp
adc
movsl
ret
push
stc
and
jp
pop
cmpsl
push
add
idivl
test
gs
js
out
jae
sti
xchg
jl
and
dec
xor
js
loope
adc
cmc
and
sub
mov
jge
ret
int3
inc
mov
int3
mov
aaa
in
jge
sbb
loopne
divl
incb
add
jle
imul
mov
push
push
mov
mov
jns
xlat
mov
stos
outsl
clc
cwtl
in
jge,pt
xor
sub
jmp
stos
and
xchg
xchg
and
mov
jnp
inc
mov
jbe
jg
pop
arpl
inc
out
ja
imul
inc
dec
ja
fcoml
push
cld
loop
lds
jecxz
int3
and
daa
subb
lock
jnp
divb
add
es
out
pop
dec
inc
jmp
adc
out
js
loopne
lock
incl
lock
test
test
lcall
xlat
jmp
pop
stc
add
jmp
outsl
dec
scas
sub
mov
nop
lahf
push
add
jo
in
or
imul
pop
sbb
or
or
ret
dec
or
inc
loope
fwait
in
test
mov
lock
fdivr
loope
subb
add
test
ret
mov
pop
sti
pop
lea
orl
push
loopne
in
loop
mov
iret
subb
dec
out
jge
test
jle
jl
stos
ds
push
sub
lock
aam
je
sub
and
xchg
jbe
pusha
repz
push
jo
sbb
fwait
out
in
mov
daa
arpl
js
cmpsb
imul
lahf
ja
sub
sbb
lock
fldenv
fucom
decb
hlt
bound
sbb
outsb
inc
sub
adc
daa
cld
xchg
out
stos
nop
clc
adc
popf
aam
or
aam
or
fnstenv
jge
nop
or
lock
pusha
and
fwait
addr16
cmpsl
xchg
or
jmp
jb
sbb
xor
fstpt
add
shll
pop
or
or
inc
std
fistps
push
push
jnp
aas
add
fdiv
push
enter
pop
insl
push
ret
call
push
mov
popa
sbb
inc
std
sub
mov
xor
pushf
iret
rorb
cmp
add
outsb
add
adc
fimuls
scas
jnp
imul
addr16
shll
jnp
filds
jns
insl
sub
xchg
insl
ljmp
ret
adc
pop
jnp
dec
pusha
lea
pusha
fimuls
adc
aas
cltd
or
mov
stos
call
ljmp
int3
or
add
push
xor
in
mov
nop
push
pop
inc
lock
cmpsb
jo
inc
dec
aad
sbbb
dec
and
push
aam
push
stc
push
bound
mov
out
sbb
sahf
xor
pop
pusha
cld
jecxz
pop
pop
lock
stos
jae
sbb
dec
xchg
push
sar
cld
jg
out
dec
inc
divb
dec
mov
and
orb
adc
inc
sbb
sbb
es
call
loope
sub
nop
inc
jns
push
mov
pushl
adc
push
add
sub
sti
sub
outsl
cli
xchg
movsb
iret
test
test
adc
rcrl
dec
jmp
mov
call
out
mov
loop
push
lret
cli
cmp
icebp
bsr
inc
rorb
shlb
int
ja
push
jbe
mov
jnp
pop
jne
call
add
rorl
movsb
aas
sub
jl
clc
mov
sub
ja
push
in
pop
and
fidivs
xchg
push
add
shrl
cmp
js
lods
mov
scas
mov
add
dec
mov
loope
incl
movsl
test
aam
dec
je
sbb
out
hlt
mov
inc
or
fnstcw
sub
or
sahf
mov
divb
das
add
fimuls
cmp
aas
cmc
sbb
sub
mov
add
sub
popf
sbb
mov
fwait
push
inc
int
dec
out
rep
adc
pushf
and
mov
push
out
xor
les
filds
xlat
push
cld
insl
dec
push
scas
test
lock
scas
jo
test
pushl
call
es
jno
dec
mov
cmp
pop
cmpl
push
push
xor
int
fucom
call
xlat
push
lcall
cmp
add
scas
das
push
fistpll
cs
ret
jae
jmp
stc
sbb
mov
arpl
pop
jp
mov
dec
inc
dec
push
xchg
cmp
mov
cld
dec
aad
push
dec
sbb
scas
repnz
cmp
lds
dec
fmull
das
je
stc
scas
testb
sti
in
sub
cs
and
aas
sbb
or
adc
aam
inc
into
pusha
cltd
sti
push
push
sub
sbb
jp
xchg
add
xchg
jb
icebp
mov
sub
lret
pop
pop
and
jmp
mov
cmpsb
jle
pop
cmp
ja
dec
test
insb
and
cmc
lcall
jb
fnclex
xchg
rorl
lds
and
cld
outsb
sbb
cmp
in
dec
hlt
push
and
int
inc
add
shlb
inc
ret
pop
jecxz
cmc
jns
jecxz
jg
or
fistps
cmc
xchg
fstl
dec
popf
push
cld
aas
mov
decb
outsb
ret
rolb
enter
imul
loopne
or
inc
hlt
push
call
mov
mov
fiaddl
hlt
fldl
cmp
sbb
pushl
in
push
out
stos
dec
mov
mov
add
out
adc
ret
sbb
stos
mov
dec
call
loopne
dec
push
cmp
adc
mov
shll
repnz
aaa
scas
mov
ja
inc
mov
negl
cmp
pop
ret
adc
sbb
mov
movsl
xor
cmp
out
mov
pop
add
pop
push
test
inc
aas
imul
bound
xchg
idivb
sbb
jo
and
popl
cld
push
cmpl
imul
loope
jnp
mov
jmp
mov
rorl
inc
mov
es
add
pusha
pop
cmc
loop
lret
add
pop
stos
clc
sbb
ret
sar
jg
stos
mov
daa
sub
add
test
pop
jl
lea
clc
insl
sbb
sub
add
loopne
sarl
mov
dec
sub
test
add
jecxz
xor
or
mov
in
sbb
loope
inc
ja
mov
pusha
ret
sti
adc
aad
leave
aaa
xor
shlb
push
xchg
test
jl
fucom
loopne
adc
cmpsb
mov
push
es
mov
cmp
lds
call
fdivrl
rol
pop
icebp
cmp
push
jle
icebp
or
mov
cmpsb
mov
adc
sbb
aas
cwtl
rorl
ds
inc
std
mov
ja
incl
add
test
jecxz
lock
les
cld
mov
mov
scas
add
mov
fcmovnb
inc
mov
xchg
and
iret
xor
mov
pop
dec
je
jo
push
in
fldl
bound
cld
leave
mov
sarb
js
add
mov
or
scas
jb
pop
sbb
fdivs
test
js
imul
int3
xor
movsl
fwait
les
sbb
pop
pop
jecxz
xchg
imul
mov
cltd
lret
and
xchg
cmc
mov
sub
decb
scas
jg
sbb
mov
mov
daa
les
add
aad
cmc
test
daa
push
xor
push
mov
cli
pusha
pop
jecxz
mov
adc
add
outsl
xor
xchg
in
jp
push
cmpsl
aad
daa
je
lcall
inc
mov
sub
mov
lahf
bound
mov
stc
std
mov
adc
pop
bound
pop
push
loopne
cmp
aad
add
addb
out
stos
adc
mov
imul
popf
adc
inc
in
push
push
pop
inc
jge
pusha
insb
dec
jmp
adc
cs
cmp
and
aaa
dec
lds
push
outsl
pop
mov
mov
sub
pop
dec
add
dec
data16
cmc
insb
subl
fs
pminub
cld
fwait
loop
lret
adc
push
js
jg
xor
pop
xchg
movsl
push
xor
jae
ja
cmp
adc
dec
ss
shl
push
ljmp
into
pop
inc
ja
in
fiadds
jle
xlat
cmp
outsb
inc
jmp
jo
sub
mov
ja
repz
adc
fisubrl
cmpsl
push
pop
ljmp
pusha
ficompl
rcll
js
sub
incl
call
sti
addr16
mov
add
or
sub
add
cli
lock
cli
or
jmp
in
call
and
jo
fsubrl
inc
movsb
xchg
je
pop
inc
fnstcw
adc
adc
mov
lahf
add
call
cld
pop
mov
scas
or
push
adc
sahf
mov
ja
aas
pop
mov
sti
movsl
push
and
and
psllw
test
cld
aas
push
xchg
cmc
lcall
lret
mov
popf
shl
ljmp
jmp
mov
aad
or
rcll
inc
mov
push
aaa
mov
jae
sahf
push
cmp
cld
incl
inc
loop
jnp
xor
mov
add
iret
decb
call
call
cmp
in
pop
fadd
jg
iret
out
xchg
xor
or
fildl
xchg
or
out
mov
shll
icebp
sub
inc
out
mov
add
jg
sub
stc
ret
orb
test
xor
cmc
pop
sub
popa
in
scas
mov
push
std
or
jo
das
lcall
xchg
jo
aas
push
add
sahf
mov
in
vzeroall
cmpsl
decl
adc
ds
and
out
mov
out
std
aas
push
jae
push
push
imul
ret
adc
cmpsl
test
stc
int3
mov
into
or
sarl
sub
jnp
test
stos
aaa
jecxz
xor
xchg
enter
cmp
fdivrp
dec
jg
cmpsl
push
int3
pop
jnp
jno
and
iret
push
cs
or
adc
mul
xchg
mov
out
hlt
repz
xchg
push
push
push
and
orb
jbe
xchg
dec
mov
icebp
mov
pop
jns
xor
addr16
lods
ret
sbb
pop
shll
pop
push
cmp
sub
mov
jp
sbb
pop
and
test
push
stc
loop
push
xchg
jg
loop
cmp
push
inc
xchg
add
movsl
mov
enter
jnp
jae
cmc
pop
lock
inc
rclb
cmpsl
mov
mulb
hlt
mov
inc
loopne
rcll
adc
and
out
scas
mov
mov
out
repnz
cld
adc
pop
pop
xor
test
or
push
add
jno
or
stc
inc
loop
rorl
movsb
adc
loopne
push
and
fistpll
or
stos
ljmp
xlat
push
dec
shll
cmp
adc
mov
jg,pt
xchg
insb
xchg
aam
dec
out
hlt
mov
aaa
and
cs
xor
repnz
cmp
jmp
fwait
push
notb
fsubs
int3
roll
sbb
xor
xor
mov
jg
sub
jne
jge
mov
push
xchg
mov
test
lret
push
data16
testb
inc
push
cs
mov
inc
cmp
movzbl
bound
mov
push
imul
std
ja
addr16
dec
pushf
mov
mov
arpl
fisubrl
out
lahf
ret
mov
std
jo
pop
and
xchg
xchg
cwtl
push
jge
insb
push
ss
aad
sti
pop
mov
sub
cld
cmpsl
dec
sbb
popf
push
cli
mov
sub
xor
popa
lods
mov
and
mov
add
imul
and
in
daa
pop
hlt
and
dec
cmp
popa
pop
lahf
xchg
dec
push
std
mov
fwait
xchg
test
push
cld
pop
addr16
bound
mov
mov
lahf
cmp
das
std
fistps
and
mov
int3
clc
xor
cld
add
add
mov
mov
mov
push
inc
adc
mov
loopne
push
cmp
imul
adc
popf
cmp
lock
ret
adc
in
pop
cld
xor
rcrb
aaa
jb
sbb
dec
and
int3
pop
xor
cmp
pop
xchg
in
popf
mov
pop
testb
mov
jle
pushf
sbb
arpl
sub
addr16
and
outsl
and
ja
adc
movsb
and
push
mov
mov
jg
cmpb
loope
enter
mov
cld
loope
popa
aaa
xor
cmp
cli
mov
out
jnp
push
dec
hlt
sahf
push
dec
lret
xchg
cld
pop
or
fucomi
jo
xor
lcall
dec
aam
adc
mov
cli
aas
mov
loope
in
cwtl
cmc
fs
mov
cmpsl
pop
sub
adc
test
stc
std
cmc
cli
adc
xchg
pop
orl
jle
cmp
push
fistps
clc
jno
mov
dec
loop,pn
outsl
das
inc
mov
es
int3
cmc
fisubrl
push
sahf
or
xchg
inc
mov
jb
xchg
adc
adc
or
call
enter
xchg
mov
jg
clc
in
leave
and
push
adc
mov
push
cmpsl
sub
shll
xor
pop
mov
or
pop
xor
pop
push
repz
pop
sub
dec
jae
adc
jnp
jecxz
xor
push
shl
mov
mov
adc
loopne
inc
jg
mov
imul
aaa
jmp
aaa
xor
testb
orl
fistpl
lret
dec
cltd
call
test
xchg
cmpsb
inc
push
in
insl
cmp
cmp
daa
adc
cmpsl
bound
and
or
and
negl
xor
jae
jg
jle
cmp
xchg
push
iret
lock
fnstcw
jmp
and
xlat
out
outsb
dec
loop
pop
xchg
adc
push
lods
test
sbb
orl
pop
xor
lds
jae
into
nop
pop
cmp
out
std
popf
arpl
jae
jmp
insb
call
call
sbb
xor
cmp
jo
addr16
call
xchg
fucomip
mov
pushf
and
std
jnp
bound
sub
pop
mov
jo
jne
adc
cmp
mov
scas
jp
test
repz
cld
dec
mov
jmp
fs
sbbl
testb
and
out
or
out
and
inc
cmp
xchg
push
insb
addl
std
pop
cmpl
fldl
or
arpl
pushf
popa
lcall
popa
lret
dec
push
orl
clc
ffreep
decb
jmp
ss
mov
adc
dec
sub
in
pop
jo
sti
cmp
mov
aam
inc
jle
push
and
xor
idivb
ret
jge
dec
pop
notb
mov
jmp
and
loope
clc
fistps
cld
dec
gs
fcoml
xlat
or
neg
push
dec
or
or
data16
inc
cli
lods
pop
insb
cwtl
mov
test
pop
clc
subl
cld
daa
push
jl
cmp
mov
jp
iret
scas
lcall
cli
push
and
cmp
lods
sbb
out
xor
fwait
arpl
mov
js
jg
adc
ret
xor
xchg
or
jb
and
out
add
mov
hlt
mov
out
lahf
in
testl
test
sti
cmpsl
push
sub
loop
cmp
dec
test
lods
dec
mov
jb
imul
or
sbb
aam
cs
fdiv
movl
and
push
sbb
dec
pop
loopne
cmp
loop
ljmp
or
mov
pop
jecxz
jne
in
orl
push
hlt
pop
adc
mov
xor
cmpl
int
xor
jecxz
cmp
in
jmp
jge
dec
pop
loope
arpl
add
cmc
mov
mov
fildll
in
cld
pop
leave
jmp
xlat
or
test
pop
push
mov
out
mov
pavgw
sarb
mov
lds
scas
ficompl
push
addr16
call
push
inc
inc
lock
shl
cmp
clc
pop
test
mov
sub
bnd
or
fwait
mov
jg
pop
lods
sbb
sbb
jo
rorb
lcall
rol
out
dec
or
pop
ret
daa
jnp
dec
rcrl
inc
mov
test
das
xor
cld
pop
mov
aam
push
jg
mov
cmp
xchg
sub
inc
pop
pop
lcall
out
lret
ror
sarl
push
insl
and
inc
xchg
nopl
sar
pop
outsb
enter
hlt
ja
iret
adc
pop
lret
add
iret
jle
push
outsl
dec
add
scas
mov
aas
sti
test
cld
xor
inc
cmp
aas
push
stos
adc
or
mov
push
cmc
jg
jae
pop
addr16
icebp
sti
pusha
int
addr16
adc
lahf
nop
rcl
ds
in
inc
jmp
pushf
push
xchg
test
adc
outsb
cli
dec
cld
pop
pop
xor
add
mov
pop
sub
adc
pop
cmpsb
push
mov
jae
loop
imul
jp
jno
out
pop
icebp
lods
push
adc
aas
push
outsl
out
sub
cld
sub
pop
xor
lock
push
xor
xor
mov
jnp
jl
and
pop
decb
cmpsl
loopne
in
mov
clc
mov
stos
jns
xor
mov
add
movsb
push
filds
adc
cs
fwait
hlt
pop
lcall
rcll
push
or
pop
test
test
stos
mov
mov
scas
loopne
push
pop
aad
addb
fwait
pop
jmp
cmp
jl
repnz
mov
gs
icebp
mov
out
mov
cmp
pop
shll
sbb
test
sub
xchg
xor
fucom
jbe
pop
icebp
pop
cld
dec
out
mov
pop
popl
loope
or
xchg
sub
pop
mov
into
mov
xchg
clc
lahf
popa
xchg
jns
push
pushf
push
push
mov
std
jmp
sbb
jno
inc
fisttpll
rol
cmp
push
outsl
cld
mov
lods
or
xchg
mov
mov
jle
movd
mov
test
aam
dec
in
sub
jmp
imul
iret
stos
dec
inc
ljmp
add
pop
mov
sbb
scas
or
icebp
insl
sbb
jecxz
mov
call
test
pop
lock
dec
mov
and
sbb
jle
rcr
mov
out
pushf
pop
jbe
enter
lahf
leave
mov
pusha
and
pop
lods
mov
mov
mov
fidivl
testl
fcmovne
insb
mov
cmp
push
cli
push
xchg
addr16
nop
fmulp
and
lods
rcrl
fcmovu
mov
cmpsl
pop
xor
pop
test
or
in
jp
gs
add
out
add
cwtl
div
mov
inc
cmc
sbb
cmc
fidivrl
lock
lret
fs
dec
js
mov
mov
pop
adc
mov
pop
shr
cld
dec
sub
test
rcll
inc
out
loopne
push
mov
push
hlt
test
inc
inc
dec
sbb
inc
clc
mov
pop
mov
ret
aas
jb
test
mov
shlb
pop
lcall
inc
cld
dec
jmp
rcrl
lds
xor
push
inc
pop
push
dec
push
pop
mov
sbb
inc
adc
lahf
dec
hlt
ud1
pop
lea
rcll
push
lea
pop
cmpsb
sbb
nop
jns
mov
pop
jl
out
dec
in
sbb
jmp
cld
sub
js
mov
ja
or
es
cmpxchg
js
hlt
in
out
leave
jmp
std
std
xchg
sbb
jmp
push
xor
mov
mov
cmc
ja
ja
ss
adc
sbbl
test
enter
lcall
pushf
jecxz
mov
xchg
push
aaa
enter
loope
cmove
dec
mov
mov
stos
push
out
ffreep
lea
sub
shr
icebp
mov
notl
push
call
inc
imul
sbbl
fisttpl
adc
mov
lods
mov
xchg
pop
push
xchg
adc
inc
pop
outsb
mov
stc
and
inc
mov
adc
jecxz
and
popf
xor
scas
enter
mov
jae
dec
pusha
call
fs
outsl
loop
cmp
adc
push
in
lcall
and
jecxz
inc
addr16
inc
or
pop
jp
loope
test
nop
xor
movsb
mov
adc
pop
cmpsl
push
mov
aaa
push
push
sbb
das
or
incb
aam
push
shrb
dec
xor
push
add
or
fwait
push
mov
sbb
sub
incl
cmp
movl
push
pop
add
mov
cld
add
mov
push
push
jb
js
add
rorb
or
outsl
outsl
xor
sub
adc
aad
movsb
jl
addl
dec
inc
jge
dec
push
push
add
push
push
or
add
mov
in
add
call
outsl
mov
add
imul
shrb
and
cli
push
adc
push
dec
adc
ret
sbb
inc
push
mov
mov
jg
mov
sub
jno,pn
aaa
arpl
adc
inc
push
movsb
jae
or
test
cmp
pop
push
fwait
lret
ret
push
sub
or
push
xchg
mov
or
sbbl
push
shrb
push
mov
inc
cmp
push
rorl
add
push
pop
sub
dec
inc
add
push
jno
arpl
das
or
mov
ret
push
push
push
push
sub
ficomps
nop
dec
aad
out
inc
push
sbb
out
out
mov
out
jbe
test
insl
sbb
lret
jge
das
das
dec
mov
dec
add
dec
pop
jno
or
fsub
pop
add
xchg
cmp
ret
push
loopne
add
or
push
push
out
xchg
add
jns
ret
bound
inc
push
adc
movsl
pop
imul
jge
rorl
pop
js
push
ja
outsb
fldl
push
aam
sub
dec
pushf
jns
popl
mov
mov
sub
lods
icebp
aas
jbe
push
xor
dec
ja
sbb
mov
xorb
cmp
fsubr
and
mov
xor
cli
push
ret
fcoms
jl
ret
sbb
pop
dec
pop
mov
push
inc
xor
sti
movsl
push
mov
stos
push
inc
or
or
out
mov
iret
sbb
mov
rolb
sti
pop
in
dec
mov
mov
xor
mov
cmp
inc
mov
dec
xor
pop
sub
inc
mov
mov
push
adc
xor
popa
js
pop
ret
push
loope
push
sub
jne
cmp
aad
sbb
rolb
add
mov
or
imul
ret
arpl
inc
inc
adc
xor
adc
dec
push
mov
lea
jb
fstpt
dec
jno
xor
push
imul
dec
fs
jmp
into
pop
popl
push
pop
jo
inc
addr16
inc
add
dec
add
das
divl
push
push
push
dec
aam
pop
cmpsl
aaa
cwtl
xor
inc
jecxz
add
dec
sbb
add
movsb
sarb
push
inc
push
cmpsb
cmp
xor
add
dec
adc
std
sub
rorb
daa
jl
outsb
dec
jno
in
sarl
jae
repnz
adc
testl
add
push
sbb
sub
mov
fistl
add
mov
and
mov
popf
fs
popa
jb
scas
pusha
sub
push
add
outsb
jnp
stos
xorb
xchg
stc
lret
xchg
fisttps
jmp
rolb
jp
ja
fbstp
xchg
outsb
xchg
pop
push
pop
je
pushf
and
mov
cmp
lods
add
nop
cwtl
xor
icebp
lods
add
add
and
nop
int
into
adc
or
fdivrl
cmp
pop
push
repnz
push
sbb
sbb
sti
xchg
push
jae
ds
cltd
sbb
fisttpll
in
inc
shrl
cld
xchg
inc
popa
mov
mov
adc
das
inc
xor
pop
or
sbb
or
out
push
and
pop
insl
or
in
arpl
mov
aaa
mov
add
jmp
jns
loope
mov
add
xchg
enter
mov
fcoms
push
or
xchg
je
imul
mov
or
cwtl
call
sub
pop
xor
outsl
in
or
insb
jae
divb
push
repnz
jle
loope
pop
out
sub
mov
iret
ja
jge
lret
sub
adc
or
ss
dec
lds
adc
adc
leave
cmp
in
leave
loopne
lods
push
aam
xchg
xor
jecxz
in
stc
xchg
jl
mov
mov
add
jge
insl
inc
pop
popa
mov
or
dec
mov
aaa
push
ret
loope
and
dec
adc
add
ds
ss
xchg
fs
xor
int
decb
pop
shr
or
xchg
or
mov
rcll
iret
test
inc
les
mov
xchg
loope
popa
mov
mov
and
insb
iret
ror
adc
out
mov
jb
aad
jne
in
add
or
push
jecxz
pop
adc
lea
push
int
add
mov
sbb
push
push
and
icebp
or
adc
scas
aam
inc
push
shl
inc
sbb
inc
jle
mov
ret
or
add
je
jp
sbb
push
into
pusha
inc
add
fs
and
xor
xchg
mov
cmp
add
ret
sub
mov
push
pop
ljmp
mov
and
xchg
push
mov
leave
cli
or
mov
dec
add
push
shrl
jb
adc
popl
dec
jl
push
add
sub
or
mov
mov
shrl
and
push
and
mov
sbb
and
pop
lcall
mov
pushf
test
jb
pushf
cmpsl
add
das
movsb
pushf
mov
leave
xor
and
mov
mov
fldcw
pop
clc
cmpsl
mov
call
sbb
add
jle
push
rcrl
lret
stos
mov
jne
xchg
sbb
sti
fldl
arpl
jmp
dec
fistpl
ljmp
test
in
into
add
mov
sbb
inc
sbb
pop
cmc
mov
inc
dec
xchg
pop
les
loopne
lea
xchg
cmp
and
push
cmp
sbb
fnstcw
sub
into
pushf
mov
movsb
out
xor
enter
jne
xor
xchg
lret
in
jae
inc
mov
adc
xor
pop
or
dec
test
lea
outsb
mov
or
fsubl
xchg
test
sub
movq
mov
scas
std
adc
jne
and
sbbl
mov
lahf
lret
call
and
clc
into
add
mov
daa
inc
es
xor
mov
in
popa
daa
sub
xchg
sub
insb
pushf
les
subb
out
and
pop
adc
jb
or
mov
js
in
mov
shrl
hlt
add
xlat
and
aas
dec
jmp
cltd
andl
adc
sbb
call
outsb
ret
jno
es
add
mov
loope
jg
mov
and
push
pop
add
ljmp
jbe
sbb
lods
xor
xchg
lea
inc
movsb
push
fstp
jae
loopne
mov
push
rolb
pop
sub
orl
fstpl
add
sub
out
test
dec
es
and
test
push
or
testb
sub
andb
push
sub
pop
sahf
lcall
add
mov
mov
out
inc
ss
data16
nop
fnsave
pop
pop
xlat
subl
das
enter
roll
shrb
pop
in
nop
mov
outsl
iret
in
sub
xor
pop
sub
inc
dec
mov
mov
ret
mov
dec
xchg
incb
push
test
ds
or
sub
add
and
hlt
push
add
dec
nop
les
mov
cmpsb
jecxz
sbb
ret
cmpsb
push
cltd
adc
mov
xchg
inc
hlt
lahf
aaa
movsl
xchg
insl
adc
and
or
sbb
mov
cmp
push
dec
call
insb
ds
int3
sub
inc
cmp
jge
inc
jae
sbb
push
lock
outsb
js
sahf
stc
iret
mov
push
or
mov
pop
lods
push
jbe
les
jo
dec
rol
sbb
inc
pop
arpl
sub
or
lahf
mov
movsl
add
adc
and
test
add
aad
movsb
addr16
mov
push
out
mov
in
into
int
icebp
cmpl
fldenv
xchg
loope
sub
xor
fs
lods
insl
push
pop
pushf
mov
pop
dec
push
in
sub
sahf
pop
andb
insb
lret
int3
or
mov
jl
lea
in
inc
push
xchg
sub
cmpsl
jae
dec
pusha
sub
push
std
cmp
jp,pt
stos
add
addr16
dec
or
out
xchg
mov
inc
fisubrl
mov
and
fmuls
jbe
adc
popf
push
loope
jp
lds
movsb
imul
idiv
mov
clc
shrb
jae
into
adc
std
jmp
mov
sahf
or
dec
add
ror
mov
or
stos
cltd
out
aam
xchg
icebp
jo
gs
mov
mov
out
add
mov
add
add
imul
mov
pop
sub
fisttpll
loop
aad
jno
addr16
sbb
pop
das
add
and
inc
cmp
mov
push
test
into
and
popf
or
jae
jl
or
cld
dec
dec
add
dec
inc
pop
push
je
popa
aas
sahf
add
sar
bound
adcb
or
pop
in
cmp
mov
or
daa
pop
rorb
adc
iret
mov
out
in
pop
inc
jnp
and
push
pushf
adc
leave
xor
leave
popf
xchg
outsb
dec
or
cmp
jle
or
ss
notl
cmc
in
or
lret
insb
inc
xchg
out
mov
sub
mov
frstor
cmp
or
lret
ret
ret
test
dec
cld
call
cmp
imul
jmp
cmp
push
push
cmp
rcrb
xchg
sbb
int3
pusha
mov
push
int3
pop
push
addr16
sub
cmp
pop
leave
bound
insl
cli
cmp
pop
mov
fsubl
jg
mov
jo
mov
enter
scas
adc
push
mov
icebp
push
mov
mov
and
or
movsl
sub
mov
das
ss
pushf
test
and
push
test
sbb
out
mov
mov
pop
mov
cmp
clc
mov
jecxz
and
xchg
push
xchg
add
sti
jne
pop
addl
and
sbb
mov
pop
mov
jbe
clc
push
mov
push
repnz
test
and
idiv
insb
push
aad
and
pusha
sti
sub
mov
dec
mov
roll
dec
test
rcrb
imulb
inc
mov
fimuls
sub
xchg
jl
push
jmp
out
xchg
andl
dec
subl
subl
mov
sbb
pop
sbb
aam
ret
dec
dec
clc
bound
jne
xlat
cltd
ja,pn
pop
inc
mov
push
rorb
or
ljmp
xchg
or
fisttps
addb
pop
imul
popf
jno
leave
pop
or
outsl
movsb
xchg
or
sbb
push
frstor
gs
lahf
cmp
push
jb
mov
jb
jb
shlb
lcall
jp
lcall
or
ret
pop
xchg
lret
adc
ret
insl
dec
movsb
or
and
faddl
sahf
add
paddusw
xor
movsb
xchg
and
ret
cld
cmp
ds
mov
dec
sbb
inc
and
xchg
movsl
push
lock
pusha
push
mov
push
jae
inc
ds
out
andb
out
cmp
jp
fsubrs
mov
or
jne
lahf
pop
xorb
add
jo
or
loope
mov
sahf
xchg
pop
les
inc
ds
movsl
dec
adc
xchg
shlb
sbb
imul
add
leave
xchg
cmp
mov
pop
cmpsl
js
popa
sbb
test
jle
jo
mov
xlat
pop
or
js
xchg
lods
incb
sbb
test
pop
call
test
xchg
mov
and
pusha
inc
lds
and
mov
in
daa
test
mov
dec
cli
test
fcoml
test
data16
lock
mov
enter
js
ss
addr16
loop
mov
es
loope
jl
sahf
movl
push
mov
lcall
push
mov
pop
lds
es
jge
push
push
adc
xchg
xchg
jg
scas
pop
nop
in
pop
jg
mov
je
leave
and
sbb
ss
add
adc
pop
insl
mov
dec
call
and
inc
jbe
mov
xor
ficoms
sbb
mov
mov
and
mov
inc
sub
jne
dec
inc
pushf
and
lret
mov
mov
dec
xchg
fnstcw
stos
pop
sub
inc
jp
fmuls
or
mov
pop
xchg
es
aaa
or
lods
sbb
notl
push
mov
pop
sub
sbb
mov
lret
in
mov
les
daa
es
lods
out
cmp
nop
mov
sbb
jb
test
mov
fimull
sahf
inc
cmp
mov
mov
into
enter
adc
xor
push
or
or
or
loop
pushf
insb
out
pop
mov
inc
in
nop
adc
add
mov
inc
fcom
stc
xlat
sub
test
arpl
xchg
cltd
es
sbb
jmp
push
inc
cmp
fisttps
mov
jp
jg
xlat
stos
cmpsl
orb
bound
jmp
pop
leave
and
or
or
outsb
jno
pushf
cmp
xor
mov
andl
bound
icebp
pop
scas
mov
lret
jo
sbb
pop
lahf
add
lret
mov
mov
ss
cmp
fdivrl
mov
xchg
sbb
popa
int
cwtl
adc
clc
iret
addl
mov
xchg
loop
push
add
cmpsb
test
dec
lods
faddl
rolb
push
add
cltd
lahf
test
in
cmc
pop
xorb
dec
sbb
dec
popf
add
out
adc
adcl
not
aam
mov
xor
dec
pop
add
leave
mov
mov
cltd
push
cmpsl
dec
add
mov
sub
xor
inc
adc
or
pop
mov
mov
jge
cmp
xchg
shll
fldenv
nop
jbe
nop
out
inc
mov
mov
lock
insl
lcall
inc
cltd
rolb
cmpsb
and
mov
filds
cmp
loopne
jmp
mov
cmp
shlb
inc
add
pop
int
jg
div
add
es
adcl
hlt
shrl
ds
movsl
adc
adc
mov
push
push
loop
adc
adc
xchg
sbb
add
in
out
dec
fsubp
xchg
insl
mov
cli
adc
mov
mov
repz
loop
mov
pop
out
or
dec
dec
or
cmpsl
lcall
add
mov
add
adc
les
lods
arpl
bound
sub
inc
push
ret
xchg
stos
mov
or
adc
je
or
mov
shlb
xchg
ficoms
cwtl
xchg
loop
sbb
add
fprem1
mov
das
mov
dec
xor
push
fldt
mov
push
in
pusha
xor
iret
jmp
xchg
int
adc
test
add
iret
jle
push
mov
jb
mov
adc
xor
fs
xor
mov
xor
mov
pop
sahf
clc
sahf
pop
and
das
dec
cmp
clc
rcrl
pusha
stos
push
test
fldl
sub
loop
inc
jae
call
cmpsl
dec
out
pop
pusha
sbb
sub
adc
pop
jb
repnz
inc
idivl
add
and
clc
in
inc
pop
fwait
jmp
aam
pop
add
lds
xor
lock
dec
lock
test
or
lds
insb
and
dec
mov
cmp
and
ja
xchg
adc
jmp
mov
in
push
aaa
pop
mov
and
mov
pop
mov
aaa
jmp
mov
sbb
imul
jno
inc
loopne
cli
xor
add
je
sub
xchg
test
mov
lods
rcrb
mov
enter
xchg
add
pop
push
push
push
xchg
sbb
mov
fistpl
loope
jns
sahf
shll
imulb
mov
addl
dec
xor
test
push
pop
and
pop
je
push
addl
pop
or
in
pop
jno
mov
inc
loope
dec
adc
ljmp
daa
ds
pop
mov
adc
pop
test
sub
rol
or
mulb
arpl
fstps
gs
stc
cmp
scas
pushf
in
and
shll
repz
or
inc
pop
or
pop
cmp
mov
shrl
clc
xor
stos
dec
mov
xorb
movsb
and
pop
sbb
out
dec
aaa
out
sbb
sbb
dec
mov
sbbb
push
or
xchg
push
inc
insl
or
aaa
push
sar
mov
fiaddl
cwtl
loop
outsl
out
out
clc
les
lret
add
push
adc
popa
clc
push
fcompl
in
fdivp
cmp
js
pop
mov
loopne
call
movsl
imul
imul
gs
rcrl
and
hlt
push
pop
dec
pusha
xchg
aaa
test
mov
add
lahf
bound
xor
dec
cmp
cmpsl
fs
roll
sbb
ret
mov
sbb
inc
dec
test
sub
xchg
cmp
jb
nop
jnp
mov
dec
sub
sub
push
cmp
repnz
addl
cli
xor
mov
cwtl
movsb
sbb
test
pop
adc
pop
mov
stc
dec
repnz
mov
inc
or
xor
scas
cmp
and
mov
inc
movsb
ja
test
push
jl
add
push
shlb
lock
xchg
andb
out
jo
or
ss
mov
aas
and
xchg
in
adc
adc
push
pop
fistps
in
lcall
sbb
mov
mov
pop
bound
pusha
ss
ret
or
push
cltd
ja
dec
mov
cmp
xor
and
jae
mov
test
repnz
es
cmp
ja
and
mov
mov
mov
sbbb
inc
icebp
rclb
mov
fiadds
pop
cli
ret
cmp
in
ljmp
fwait
in
fbld
mov
push
pop
sahf
mov
shl
push
loop
push
lods
add
les
xchg
je
cmp
sti
dec
or
notl
xor
and
xlat
cmp
jecxz
jp
and
xlat
lods
dec
enter
inc
loope
xchg
aaa
lds
add
pop
dec
push
rcll
popa
push
or
es
outsb
xchg
mov
hlt
bound
mov
aam
mov
aad
lahf
arpl
adc
stos
cs
rcll
loope
roll
and
xlat
test
mov
rclb
cmp
sbb
xchg
or
inc
and
arpl
insb
out
mov
in
cld
sbb
adc
fcoms
fstpt
and
negb
cmp
push
pop
inc
dec
js
pop
js
cmp
ja
aam
pop
fildll
fstps
aas
dec
pop
inc
stos
dec
push
xchg
cld
cmp
push
ret
mov
xchg
cld
xchg
or
push
xchg
xchg
in
rcrl
and
stc
jno
js
imul
pop
sub
jecxz
aaa
push
xor
or
xorb
and
inc
inc
push
repz
fisubrl
out
data16
cltd
jno
repz
int
fadds
fiadds
inc
lds
inc
sub
sahf
fisubrl
test
ja
and
nop
rolb
add
into
mov
jo
outsb
fcom
jbe
daa
loopne
xchg
push
dec
inc
stos
and
nop
pusha
decb
sahf
sbb
mov
test
pop
and
sbb
sub
loope
fs
push
outsb
je
push
mov
int
mov
mov
mov
ficompl
je
int
cmpsl
cli
mov
nop
add
xor
jge
adc
repnz
jmp
sarl
pop
add
je
inc
shl
jmp
ds
negb
stos
mov
push
lahf
dec
xchg
mov
or
sbbb
xchg
fisubrl
das
dec
js
aaa
out
dec
mov
clc
pop
dec
inc
push
sbb
add
xchg
sub
data16
ljmp
xor
cmp
je
in
movsb
ja
rorl
movsb
loopne
and
dec
add
sti
adc
sub
into
cld
loopne
push
pop
xor
xchg
repz
sbb
push
lret
xchg
lods
cmp
xlat
pop
and
test
stc
add
mov
pop
dec
fisubrl
and
mov
insl
out
jnp
movsb
pusha
jae
mov
into
cmpsl
sub
jb
cmpsl
dec
mov
add
lds
testb
jo
fsts
sbb
or
push
mov
lret
mov
cmp
enter
mov
outsl
test
add
push
cmp
mov
dec
flds
lds
cmp
clc
push
stc
jbe
jbe
data16
jl
sub
popa
loopne
mov
fcomps
jno
push
pop
inc
push
nop
adc
or
inc
int
inc
sbb
andb
scas
insb
dec
dec
dec
sub
inc
ja
or
daa
shll
pop
pop
test
popf
adc
add
fnstenv
mov
cli
jno
cmp
add
push
jp
pop
cmpb
test
lcall
pop
hlt
inc
inc
fsubrs
into
iret
lods
add
dec
fcoms
stos
cmp
adc
xorl
std
or
add
sahf
cmpsl
das
call
negb
test
xchg
and
mov
push
cli
call
pop
cmp
mov
js
flds
or
add
fisttps
mov
sbb
mov
ss
jg
scas
push
shll
icebp
fwait
arpl
scas
shl
outsb
pop
jecxz
nop
push
mov
mov
mov
cmpsb
inc
jne
pop
pop
sti
arpl
fimull
add
jne
pop
outsl
int3
stos
fs
mov
shrb
sub
nop
mov
in
xchg
xor
pop
push
sbb
lret
jb
pop
jno
pushf
cmp
pop
xchg
sub
or
lds
fldcw
xor
jo
mov
hlt
test
movsb
dec
xor
jne
jo
jle
and
out
daa
pop
inc
rorb
add
or
mov
arpl
nop
mov
mov
ja
cmp
out
mov
jo
fbstp
cmp
push
mov
sbb
fbstp
loopne
jne
add
cmp
fidivrl
mov
push
sbb
mov
bound
mov
into
or
jle
leave
jmp
dec
mov
leave
out
mov
pushf
hlt
je
fistpl
inc
pop
call
ds
or
mov
mov
xchg
es
mov
stos
idiv
mov
jge
jbe
ret
rcrl
in
gs
xlat
stc
add
icebp
add
int
mov
mov
add
and
sub
pop
dec
mov
jl
add
outsl
stos
jecxz
xor
imul
lahf
fst
push
inc
sbb
or
sub
jnp
ja
lods
push
push
mov
cli
stc
ret
push
mov
or
pusha
ljmp
xchg
pop
inc
sub
test
into
aaa
and
ljmp
stos
jg
jl
repnz
cmp
gs
cwtl
mov
aad
push
jae
or
pop
jbe
fs
dec
pop
pusha
pop
dec
orb
mov
xor
lcall
or
loop
jl
mov
pop
lods
adc
pop
dec
push
data16
sbb
mov
lcall
aas
pusha
pusha
imul
mov
dec
push
xorb
je
xchg
sbb
or
jp
nop
or
jo,pt
cwtl
jmp
aam
addb
inc
roll
cmp
or
xlat
outsb
and
jns
pusha
in
mov
test
mov
sbb
xorb
enter
or
xor
mov
call
pop
fistl
jp
mov
into
lahf
dec
rcrb
jecxz
rcrl
mov
xor
jbe
add
lret
andl
mov
push
aaa
or
in
xor
mov
or
les
pop
shrl
dec
addr16
sub
shlb
outsb
or
int3
mov
mov
orb
push
out
push
add
popf
ret
jnp
xor
xchg
mov
sbb
dec
cmp
sbb
pop
cwtl
mov
push
mov
jno
arpl
cmpsb
bound
aas
mov
outsl
out
and
inc
dec
pop
xchg
les
lock
mov
out
sbb
clc
xor
out
push
stos
or
mov
and
sub
mov
xor
jg
xchg
mov
xor
mov
aaa
add
lahf
add
push
nop
mov
fsts
iret
out
das
fwait
jp
pop
fcompl
cmp
mov
addr16
sbb
cli
mov
fcoml
stos
cmp
test
es
jne
outsb
cs
lea
icebp
sbb
pop
sub
jns
add
cmp
pop
mov
cmp
lahf
pop
mov
adc
jbe
mov
mov
mov
and
addl
mov
popf
imul
ds
ds
push
sub
pop
int
pop
out
adcl
lret
out
cmp
or
pop
fs
xchg
sbb
add
shlb
leave
push
adc
mov
or
mov
and
inc
out
push
orl
or
cmpsl
insb
pushf
xor
mov
xor
icebp
cmpsb
je
les
mov
push
shll
cli
push
nop
mov
lods
add
and
xchg
std
leave
pop
adc
xchg
push
jge
sar
or
xchg
movsb
subl
lret
fiaddl
je
adc
jle
test
cmp
test
inc
les
aaa
popa
adc
pop
negl
lret
out
inc
sbb
inc
jecxz
nop
mov
and
mov
das
xor
jb
fcmovb
sbb
out
and
fsubrs
inc
cmp
mov
xchg
ja
pop
mov
mov
dec
sub
pop
mov
or
push
dec
inc
xorb
sbb
dec
jg
ss
cmp
in
test
insl
pushf
mov
into
shlb
mov
stc
sub
jl
jecxz
and
in
jge
mov
js
mov
mov
push
add
outsb
movsb
jmp
test
lods
cmpsl
inc
aam
pop
cmp
loopne
mov
push
dec
in
jge
xchg
aad
sahf
inc
int
test
aas
ret
push
mov
cmp
andl
mov
xchg
sarl
cli
lea
pop
or
adcl
or
sahf
fistps
jbe
pop
push
sub
sbb
sbb
xchg
mov
ret
jp
in
dec
pop
push
or
adc
stos
jecxz
and
roll
pandn
movsb
push
mov
xchg
adc
icebp
dec
jae
cmpl
or
xchg
dec
andb
sub
jp
dec
test
or
mov
xchg
movsb
sub
movsb
pop
jb
bound
or
rcr
cmp
insl
stc
mov
test
mov
sub
call
enter
sbb
xor
xor
aam
ljmp
dec
stos
jne
lahf
les
hlt
loopne
aaa
lret
pop
or
xor
mov
push
sbb
mov
out
icebp
pop
mov
mov
sub
leave
push
aad
and
sub
daa
sub
loopne
frstor
pop
push
es
cwtl
or
add
or
je
rcl
pop
scas
cmp
cmpsb
stos
pop
xchg
test
insl
jno
xchg
aam
out
sub
sub
js
jns
sbb
lds
mov
lcall
in
std
pusha
andl
subb
xchg
adc
sbb
cmp
nop
push
xor
leave
ja
icebp
adcb
sub
xorb
inc
fwait
pop
ljmp
scas
cmpsl
and
push
xchg
sub
xchg
sbb
mov
or
xor
mov
fstl
lcall
mov
and
int3
push
adc
add
cmpb
shll
dec
ja
jmp
add
sbb
movsb
sbb
sbb
cmpsl
mov
sub
gs
pop
imul
sub
loop
rolb
bound
repz
rolb
mov
outsb
in
pop
in
xchg
inc
lea
xchg
rclw
cmp
lcall
mov
pop
xor
sbbl
mov
push
jge
sbb
lcall
mov
cmpsb
and
hlt
add
xlat
mov
mov
bound
cmp
scas
leave
pop
rolb
jl
pop
add
mov
adc
dec
jo
imul
orb
dec
push
sahf
fs
sub
mov
fnstcw
adcl
dec
popf
stc
ja
jnp
mov
pop
and
cwtl
mov
adc
mov
pop
rolb
cmp
push
and
dec
push
cmc
inc
into
jbe
adc
adc
das
loope
push
arpl
rcrl
daa
mov
loop
mov
xchg
cmp
fmul
bound
xchg
movsl
test
inc
cli
insb
test
aam
pushf
clc
add
test
jl
pop
sub
or
mov
shrl
test
adc
gs
cs
insb
jg
inc
movsb
int
pop
dec
add
xchg
loope
popa
mov
das
sbb
es
push
inc
push
push
xchg
sar
xor
repz
cmp
fwait
jmp
mov
stos
bound
shlb
xchg
arpl
push
fwait
sub
lret
pop
sarl
subb
rorb
sbb
mull
mov
int
ss
rorl
mov
mov
adc
cld
inc
pop
iret
or
lock
in
mov
add
cmp
fiadds
cmp
pop
in
ret
mov
bound
pop
in
inc
test
aad
or
mov
inc
mov
or
cli
mov
pop
imul
data16
adc
add
fnstsw
jne
pop
popf
cmp
xor
test
cmp
and
sub
test
je
clc
pusha
or
pusha
cmp
in
or
fcmovnb
insl
pop
xor
pop
bound
fcoms
add
rcll
cltd
inc
int3
cmpsl
xchg
lea
sbb
mov
xchg
and
popa
or
mov
dec
daa
inc
leave
movsb
iret
scas
jl
sbb
jle
aas
in
pushf
pop
dec
adc
shl
xor
inc
xchg
bound
inc
xchg
push
cmp
test
xchg
ds
cmp
outsb
loopne
mov
push
repnz
stos
or
ss
in
add
jge
xor
and
cmpsb
push
adc
bound
and
es
sub
or
xor
dec
jbe
out
xchg
sahf
inc
xchg
cmp
inc
lcall
lret
cmp
pop
daa
lahf
xor
stc
loopne
jnp
stc
les
adc
mov
roll
push
lret
xchg
shrb
es
icebp
mov
mov
pop
je
inc
mov
mov
dec
test
add
rol
add
repz
add
in
add
add
sbb
mov
adcb
push
jle
mov
fldt
aam
cltd
dec
or
inc
scas
inc
add
xchg
jns
ret
cmp
ud2
lcall
and
jl
xor
jl
adc
sahf
dec
jp
aas
aam
xor
xchg
shlb
loop
mov
sbb
xchg
mov
mov
pop
push
or
ja
int
rolb
pop
dec
push
jnp
scas
pop
movl
mov
je
push
in
clc
divb
jns
in
pop
jne
xchg
lds
pop
adc
or
inc
std
in
aaa
insb
cmp
jg
imul
mov
dec
inc
cmp
cmp
push
clc
gs
adc
addr16
xlat
daa
call
idiv
mov
insb
mov
test
cmp
test
fisttps
push
cmpsb
jno
daa
test
mov
xor
xchg
pop
mov
js
mov
mov
mov
stc
and
add
or
add
mov
mov
aam
mov
lea
cs
lret
lahf
imul
or
mov
fs
in
ror
add
mov
or
cmp
push
mov
arpl
push
fs
pop
ficomps
adc
scas
loope
lcall
jge
pop
inc
inc
sbb
sbbl
into
xorl
scas
cmp
or
push
repnz
ret
push
pop
lret
inc
mov
int3
and
pop
jl
and
lcall
push
jno
mov
sub
call
aaa
in
imul
ret
mov
dec
repz
cmp
outsl
fistpll
mov
jecxz
sub
outsl
lret
and
sbb
add
lret
or
xor
fnstenv
fbstp
das
js
inc
cmp
push
pusha
dec
fwait
pop
pop
addr16
outsb
aaa
test
test
std
stos
pop
sbb
xchg
movsl
mov
cmp
cmp
nop
dec
cmp
insl
imul
xor
sbb
shr
repnz
ja
dec
cmc
or
or
or
mov
jle
sub
push
pop
icebp
stos
flds
jae
ja
and
or
jbe
test
jp
scas
mov
enter
or
inc
jne
push
mov
nop
hlt
loopne
pop
mov
sbb
xchg
and
sbb
and
jbe
push
mov
pop
add
cmp
add
nop
push
ja
sbb
ret
popa
sub
jbe
jecxz
in
and
je
jge
je
inc
rcll
xor
out
push
mov
jb
mov
in
je
or
dec
jno
insb
and
jo
out
add
jp
dec
out
popa
push
fmull
xor
jmp
inc
xchg
cmp
test
push
pop
xchg
mov
jmp
push
int
ds
or
imul
les
or
stos
in
dec
daa
and
enter
cmp
insb
mov
push
in
mov
mov
mov
pop
dec
xchg
pop
mov
mov
xor
mov
test
inc
mov
pop
inc
cmpsl
punpcklwd
cmc
les
dec
push
mov
aaa
add
xchg
push
repnz
out
dec
sbb
jmp
and
addr16
jge
xchg
jo
jecxz
and
pushf
lcall
jmp
outsb
popa
sbb
add
movq
sub
ret
sahf
push
adc
jns
ljmp
lea
cmp
or
jbe
fs
inc
dec
pusha
call
popa
decl
xor
pop
test
loope
les
mov
addl
stos
dec
test
push
mov
lock
mov
sub
movsb
mov
pusha
sti
adc
mov
sub
ljmp
xorl
xchg
sahf
imul
or
add
adc
push
movsb
adc
or
sbb
push
sbb
push
push
stc
ljmp
cmp
inc
or
test
leave
add
cli
mov
pusha
push
xor
repnz
ja
pmuludq
in
test
add
outsl
andl
jb
jmp
popa
test
retw
movsb
fisttpll
mov
mov
mov
sbb
pop
aaa
or
in
mov
mov
mov
in
and
loopne
add
sub
stos
sbb
xor
adcl
lea
jecxz
arpl
std
cmp
dec
std
cld
lock
and
inc
insb
mov
cmp
arpl
lcall
jns
push
in
inc
cmp
scas
shll
jg
and
in
ja
dec
scas
test
add
adc
cli
pusha
inc
cmp
jmp
jb
sub
push
inc
dec
stc
sub
push
imul
mov
leave
leave
orb
sbb
mov
sbb
and
and
dec
and
mov
shl
xchg
cmp
into
inc
or
and
sub
pop
push
mov
xchg
or
add
popf
andb
ss
dec
mov
and
pop
mov
xorb
dec
cmp
rcll
outsb
hlt
jecxz
adc
inc
shll
pop
cli
sbb
mov
mov
sbbl
push
add
sbb
test
je
loopne
imul
mov
sbb
sub
pusha
mov
xlat
push
fldenv
mov
cmpsl
je
inc
mov
nop
adc
jno
jns
jbe
pop
pop
insl
or
mov
movsl
push
dec
ja
into
movsb
aas
sub
adcl
lds
test
fsubrl
dec
lock
inc
bnd
fldl2e
into
test
mov
mov
mov
mov
push
fnstenv
arpl
scas
ja
sbb
jl
inc
push
movsl
or
mov
sbb
ss
gs
daa
cmp
ja
jmp
pop
add
mov
sbbb
xchg
sbb
sub
adc
xor
outsb
fisubs
inc
pop
addl
inc
sbb
inc
pop
xchg
hlt
pusha
aam
jle
lock
push
mov
adc
adcb
jbe
clc
push
cli
jecxz
lds
stc
sub
sub
mov
xor
or
add
xchg
mov
jmp
nop
les
jb
lds
bound
push
mov
ss
shl
mov
pop
pop
out
dec
shll
gs
nop
icebp
ret
icebp
nop
jae
lods
sahf
inc
pop
and
xchg
and
inc
fcmovnu
pusha
cmp
scas
inc
or
das
fdivrs
imul
in
call
icebp
mov
mov
jo
mov
cld
push
lahf
xor
ja
js
ret
cli
rorb
cmp
mov
stos
lds
xchg
inc
out
add
je
ds
and
push
ret
es
push
fisubs
and
imul
mov
adc
or
fbld
lahf
mov
pop
shrb
cmp
xlat
inc
mov
pop
lea
xchg
or
ret
dec
adc
or
xlat
dec
std
enter
sub
out
loopne
dec
push
pop
pop
xchg
insl
jae
lds
xchg
sub
les
push
mov
mov
sub
pop
int3
shlb
xor
rcr
add
fsubrs
mov
and
test
shl
dec
sub
in
pushf
test
sbbl
xchg
in
popa
repz
add
lret
or
lret
fdivrl
mov
cmpsl
loope
test
dec
jl
sti
mov
loope
mov
add
pop
aaa
mov
inc
adc
lods
scas
bound
mov
and
adc
mov
pop
xchg
loopne
out
dec
test
sub
inc
arpl
repnz
add
push
ds
imul
sbb
fidivrl
adc
daa
test
cld
andb
rclb
imul
cmc
shrl
inc
movsb
mov
or
xor
nop
loope
sbb
inc
testb
add
cwtl
sbb
sub
dec
xor
sub
and
mov
frstor
leave
push
sbb
jg
xchg
call
jecxz
loopne
dec
daa
shll
dec
loopne
push
call
aam
mov
aam
leave
or
and
mov
scas
sub
rcr
sbb
add
imul
out
cmp
adc
jge
mov
je
dec
cmp
stos
scas
aaa
aas
add
in
xchg
mov
dec
push
aam
test
idivb
xor
shlb
cmpsb
std
dec
ja
pop
mov
arpl
add
dec
add
xor
or
popf
mov
pop
fs
mov
std
and
nop
les
sub
les
loop
cmp
sbb
sti
dec
xor
mov
pop
mov
jle
lods
pop
inc
mov
popa
mov
jns
sbb
in
shrb
adc
xorl
dec
cld
pop
fwait
jb
sahf
adc
aad
jg
push
jl
pusha
test
mov
movsb
push
xor
inc
inc
jnp
pop
or
add
jb
sti
and
xchg
xchg
pop
ret
push
add
mov
jmp
movsl
adc
or
push
lods
out
push
jne
push
push
ret
leave
roll
adc
push
sarb
cmp
xor
mov
js
pop
stc
mov
test
cld
add
add
jle
push
mov
push
enter
stos
fs
in
and
jb
push
test
cmp
inc
or
and
lods
pop
out
mov
lock
cmpb
ds
push
pop
hlt
mov
imul
std
adc
and
and
xchg
cmpsb
xchg
leave
pop
or
cli
mov
pop
ret
add
scas
lret
sbb
adc
sarl
mov
cli
clc
cmp
addr16
sbb
xor
or
mov
lret
sub
ja
stc
insb
push
sarb
jb
fnstcw
dec
push
inc
imulb
rorb
mov
sub
lea
lahf
out
rorb
pop
adc
shlb
data16
aas
test
xchg
mov
fdivrp
and
aas
dec
dec
cmp
pop
mov
and
pop
outsl
ret
or
rcrb
ljmp
pop
pushf
push
addl
inc
sub
sbb
les
daa
into
mov
dec
jecxz
adc
jl
push
sub
mov
lock
inc
jae
jnp
xor
stc
aad
mov
adc
sub
dec
push
sub
lods
xchg
sbb
data16
or
mov
adc
mov
sarb
je
ret
add
fcomps
sub
pop
mov
xlat
inc
insb
inc
push
call
daa
jb
roll
je
ja
pop
pop
inc
je
push
jo
psrlq
fmul
sbbb
lds
enter
jmp
add
mov
inc
pop
push
cmp
cmp
and
test
ja
xchg
cmp
lret
repnz
in
fmull
xor
inc
cmp
into
pusha
nop
lods
es
in
out
mov
push
pop
jmp
ljmp
mov
jg
mov
daa
gs
push
pop
call
fidivrl
xor
loopne
jae
xchg
popl
xorl
faddl
mov
inc
cmpsb
sbb
inc
iret
repz
sbb
sub
dec
loop
iret
lods
in
out
adc
shr
push
jge
fcmove
ret
pop
inc
mov
fnsave
sahf
ljmp
mov
sarl
xchg
add
aas
cs
cmp
js
xor
inc
jle
roll
jnp
xor
sbb
adc
pop
cmp
mov
movsb
lcall
leave
mov
sbb
mov
fcmovnu
add
xor
sbb
imul
add
test
jge
cmpsb
mov
sbb
pop
lcall
sub
mov
mov
xor
nop
dec
add
and
stos
dec
jl
mov
leave
adc
jl
inc
mov
adc
adcl
daa
or
pop
fwait
xor
pop
push
push
ja
add
mov
mov
je
test
add
or
mov
sbb
and
lods
sub
arpl
test
and
lret
test
or
xor
cmp
mov
xor
mov
dec
adc
pop
jne
int
ss
leave
xchg
jg
cli
mov
mov
jecxz
jmp
xlat
push
xorl
js
push
insl
adc
scas
push
rcll
adc
add
addb
sbb
pop
leave
mov
insb
adc
jmp
shl
add
adc
or
fldl
sub
pop
cltd
leave
test
pop
call
fistl
dec
rol
and
int
je
push
mov
mov
add
mov
sbb
pop
xor
mov
dec
push
lds
add
add
cwtl
mov
repz
and
jne
add
and
mov
outsb
sbb
dec
pushf
adc
sahf
or
in
and
lret
xchg
dec
push
jge
pop
jle
xchg
mov
pop
sub
cmp
loopne
push
jg
ds
add
or
sub
jns
jmp
sbb
and
loop
mov
test
sahf
add
out
cmpsl
pop
lods
add
pop
push
sbb
cltd
mov
scas
push
xchg
cmpsl
push
pop
dec
sbb
cwtl
repnz
insl
jl
icebp
rorb
cmc
fisubrs
imul
cmp
mov
sbb
scas
fwait
outsl
divl
dec
xor
or
lds
mov
sub
mov
test
push
mov
aad
add
mov
adc
pop
cmpb
andb
inc
mov
sub
and
mov
lcall
lds
rol
mov
outsb
mov
adc
push
clc
aaa
movsb
das
aad
cmp
sub
inc
and
fisttpll
ret
mov
addl
pop
lock
das
inc
pop
inc
mull
dec
icebp
insl
inc
das
xor
push
stc
fadds
jl
and
adc
cmp
xchg
lahf
insb
mov
mov
inc
lock
jle
lods
push
mov
mov
jecxz
push
inc
std
andl
xor
push
mov
cmpsb
mov
rol
in
mov
setle
insb
movsl
xor
add
push
mov
sbb
push
pushl
sbb
add
dec
mov
andl
in
sbb
lds
stos
movsl
lahf
ret
dec
popf
xor
jo
std
in
inc
or
or
mov
rcrb
mov
dec
jo
fldenv
cld
addr16
dec
sub
icebp
fsts
mov
xor
mov
out
inc
fmull
inc
ss
pop
add
pop
loope
or
mul
aam
push
shl
pop
jp
and
mov
shll
xchg
push
dec
mov
bnd
xor
cmpb
xchg
inc
jg
mov
and
xchg
fmuls
in
inc
inc
movsb
rolb
cwtl
sti
or
adc
mov
sbb
lods
js
add
lcall
fstl
dec
or
es
inc
inc
xchg
or
push
ror
mov
andw
dec
xor
xchg
test
outsb
dec
out
dec
lock
adc
notb
sub
hlt
add
adc
push
rclb
mov
and
pop
push
int
jmp
sahf
in
lock
sbb
fstps
or
cli
cs
mov
and
sub
pop
jp
test
push
mov
dec
repz
sbb
leave
cmp
pop
sahf
scas
dec
aaa
mov
stos
les
std
movsb
dec
pop
roll
sbb
fld
in
test
dec
mov
dec
rcll
inc
push
data16
pop
fmull
nop
stos
pop
scas
pop
pop
jl
leave
push
stos
mov
mov
jecxz
lods
sub
mov
aam
mov
cmp
mov
xor
ja
mov
cmpb
mov
fsincos
shl
jae
inc
mulb
add
pusha
aam
jge
add
jae
cmc
ret
filds
ss
mov
mov
stos
daa
nop
cmp
sub
hlt
xor
es
sbb
xor
shll
inc
fcmovnb
std
daa
pop
pop
hlt
in
dec
or
cmp
test
pushf
mov
sub
insb
add
imul
xor
or
jge
or
sbb
ret
lods
mov
leave
fsubrl
sbb
xor
push
xchg
sub
dec
pop
ljmp
sti
cmpb
cmpl
cs
andb
adc
add
adc
add
leave
xchg
enter
dec
daa
inc
sbb
cmp
ror
shrb
xchg
ss
dec
shll
pop
cld
inc
dec
movsb
rcrb
or
xchg
aad
and
in
cmpxchg
iret
aas
push
and
mov
lds
pop
addr16
mov
loop
sbb
xor
mov
inc
es
sbb
fnsave
movsl
push
movntps
sbb
jl
out
lcall
lods
cld
lock
paddsw
lock
testl
inc
or
or
dec
xchg
ss
vmread
lret
outsl
dec
sahf
out
mov
jnp
ficompl
inc
adc
aad
mov
sub
adc
test
int
popa
movsl
test
mov
cmc
stos
mov
je
mov
xchg
mov
add
mov
jge
ljmp
xor
xor
jno
ds
fwait
push
scas
fsts
push
out
cmpsl
and
sbb
xor
mov
push
xchg
and
pushf
aaa
clc
lds
push
cltd
mov
cmp
pop
jp
fwait
in
sub
and
leave
add
enter
pusha
cld
lds
push
fsubs
sbb
push
lods
jne
jo
movsb
dec
inc
daa
daa
add
add
mov
addr16
ret
outsb
test
inc
dec
popa
xchg
subl
idivl
cmp
xchg
inc
ja
mov
out
jbe
xchg
cltd
cmc
popa
jne
push
cmp
ds
push
icebp
jmp
js
inc
dec
xchg
addr16
cmp
push
mov
arpl
inc
je
and
icebp
or
xchg
adc
icebp
mov
push
and
push
dec
fdivs
push
scas
mov
jecxz
mov
push
pushf
inc
daa
add
in
push
push
popf
sub
pop
daa
add
insl
sub
mov
clc
and
daa
dec
sbb
sbb
adc
and
cwtl
ljmp
stc
stos
aas
dec
in
cmpsb
cmp
js
add
test
jbe,pn
pop
imul
xchg
jo
push
repnz
lahf
xor
push
ljmp
dec
add
scas
xor
fwait
shrb
fwait
shl
and
ds
jl
jmp
adc
jmp
loope
xor
mov
adc
xor
ret
mov
shll
test
repz
ret
mov
and
inc
or
je
ds
dec
in
cld
dec
rolb
and
dec
xchg
mov
xor
movsb
rorl
and
sub
lcall
mov
push
cmpb
les
mov
cmp
xor
rcrb
jae
bound
popa
xorl
jns
cmp
loopne
scas
push
addl
push
bound
adc
xor
or
bound
sbb
je
cli
dec
inc
negl
dec
mov
dec
loopne
dec
inc
jmp
or
leave
adc
jmp
cld
sub
sbb
orb
mov
fcomps
and
in
xchg
xchg
outsl
jne
push
xor
ds
sbb
add
add
push
pop
pop
xchg
cmc
mov
mov
flds
lds
mov
dec
cld
shlb
cli
push
xor
test
sbb
in
xor
dec
or
cmp
xchg
nop
push
push
sub
push
clc
jo
push
jg
scas
popa
pop
jmp
adc
test
cmp
fisttpll
xor
pusha
mov
gs
jo
rolb
jne
or
push
pop
idiv
push
call
ror
sahf
inc
cmpl
jns
je
cli
and
sub
pop
lds
pop
push
inc
cmp
sbb
xchg
lret
push
pop
test
in
dec
pop
gs
call
lods
cmp
loope
shll
cmp
fwait
dec
mull
sbb
and
mov
push
push
scas
fdivrp
mov
mov
addl
push
outsb
les
mov
adc
jae
lock
adc
add
cmp
add
test
mov
inc
mov
inc
clc
xor
nop
lret
rcr
sbb
push
adc
inc
mov
sub
cltd
ss
ds
cmpsl
ret
pushf
mov
add
popf
mov
and
imul
mov
jecxz
and
scas
fabs
sbb
sarl
icebp
imul
xor
and
int
popa
aad
push
mov
mov
jno
mov
sbb
les
inc
shrb
mov
push
into
and
out
dec
jo
test
jae
in
inc
mov
push
xor
mov
hlt
mov
sub
nop
daa
mov
xchg
clc
or
and
inc
push
repnz
mov
add
sub
push
out
or
mov
or
mov
insb
rorl
insl
je
fs
fimuls
sbb
pop
xor
movsb
or
roll
adc
mov
xor
orb
cwtl
jb
cld
loop
mov
out
sub
dec
jb
shrl
dec
cmpsl
xchg
add
int3
inc
in
addr16
jmp
pop
dec
inc
lods
adc
clc
xchg
mov
lods
jbe,pn
sbb
test
jmp
js,pt
sub
fcoms
xchg
cmp
sub
push
mov
sbb
and
enter
xchg
in
test
enter
jl
pop
ds
xchg
jnp
push
mov
sti
je
loopne
and
loopne
xor
mov
pop
dec
and
nop
jae
inc
cmp
and
push
gs
out
and
cwtl
inc
dec
dec
mov
scas
sbbl
jno
cmc
cmp
int
mov
sbb
scas
inc
and
inc
push
adc
adc
rcll
push
les
mov
ds
shl
sub
orb
jecxz
sahf
cmpsl
mov
mov
out
mov
push
std
inc
push
loop
hlt
lock
add
mov
xor
and
add
or
or
fstp
or
push
xchg
cmp
sub
je
inc
lcall
mov
jp
xchg
cmc
dec
push
and
push
add
test
in
clc
fcomps
dec
push
inc
mov
pop
push
js
dec
out
jno
gs
pop
pop
fld
and
ss
mov
aad
or
scas
ret
push
xor
shl
ljmp
std
movsb
cli
es
fwait
mov
cmp
pop
push
ret
cmc
iret
jb
and
loop
inc
or
add
jmp
es
mov
push
cmp
testl
jnp
dec
out
mov
add
repnz
xor
ficompl
js
pop
in
xchg
movsl
or
lret
ret
out
iret
popf
rcl
xor
js
or
cwtl
mov
imul
call
jne
scas
sub
xchg
loopne
fs
dec
ljmp
rcr
ret
sub
faddl
loope
movsb
dec
mov
loop
jne
xchg
push
push
adc
pop
jecxz
leave
or
test
cmc
mov
adc
out
jne
xchg
xor
jo
xor
insl
js
jbe
mov
mov
imul
add
imul
add
int
mov
pop
jno
fisubl
adc
jbe
fdivrs
stos
mov
je
cmp
jb
hlt
stos
outsb
xor
mov
dec
or
in
aaa
add
std
into
sub
sti
push
dec
cld
add
sbbb
out
adc
cmpsl
cltd
call
jmp
and
sbb
orl
lcall
xor
xchg
scas
out
or
dec
popf
mov
push
mov
dec
pop
cmp
lahf
cmp
adc
stos
or
jecxz
jbe
lahf
jmp
push
jmp
sub
or
mov
mov
cli
shr
mov
push
loope
shll
shrb
sbb
sub
add
and
xchg
shlb
or
mov
insl
xor
xor
or
ss
cmp
adc
cltd
mov
cmp
clc
arpl
cmp
jmp
sub
cmpl
sbb
lds
and
xchg
sbb
or
pop
setae
lcall
adc
mov
sub
into
sub
mov
addl
mov
pop
fwait
sub
cli
push
pop
in
into
add
dec
dec
outsb
hlt
xor
jmp
lahf
arpl
and
addl
mov
stc
mov
daa
rcrl
adc
out
orl
addb
mov
and
add
and
rol
popa
repnz
sbb
gs
pop
push
call
imull
bound
aam
imul
inc
cli
mov
mov
mov
dec
loop
or
cmc
ds
sbb
cmp
clc
dec
orb
and
dec
hlt
bound
adc
imul
adc
loope
adc
and
and
icebp
jmp
xchg
sbb
repz
mov
in
mov
mov
pop
fbstp
lret
in
cmpsl
jecxz
mov
inc
fimull
pop
pop
sahf
rep
cmp
pop
xchg
pop
sbb
js
nop
sbb
popf
xor
vmwrite
int
lods
cmp
pop
test
pop
sub
sbb
pop
adc
shlb
xchg
test
inc
nop
pop
adc
setnp
push
add
mov
sarl
sti
cld
sti
insb
jg
rorl
mov
fisttpll
adc
xor
inc
notl
lea
pop
data16
xchg
rcrb
addr16
les
mov
jo
lea
jns
and
dec
add
lods
adc
sbb
test
adc
call
out
je
subb
adc
dec
aad
and
das
jnp
hlt
mov
pop
push
push
test
enter
add
hlt
insb
mov
jle
lcall
ss
rorl
xchg
test
clc
das
jno,pt
mov
xchg
rcrl
cwtl
sub
in
ja
ret
push
fldl
iret
fadds
pop
movsl
sarl
or
popf
mov
or
inc
mov
icebp
jl
pushf
inc
pop
or
sbb
cmc
mov
cmp
cmp
mov
in
cli
jge
sub
mov
pusha
jnp
pop
xor
push
push
or
push
test
addl
ds
adc
in
inc
aaa
mov
adc
dec
dec
ss
or
enter
iret
lcall
andb
push
movsl
ss
testb
fdivs
dec
out
xchg
insb
mov
cmpsb
inc
jns
or
inc
dec
push
adc
sub
movsb
fisubl
rcr
test
sahf
fistpll
jle
clc
jo
dec
fsubl
scas
ss
pop
sbb
lret
in
sbb
and
and
inc
jp
cmp
js
mov
fcomi
cmc
cmp
cmp
push
mov
in
fbld
mov
jmp
pop
add
xor
mov
and
in
jecxz
sbb
test
push
cmp
cmpsb
fs
mov
div
ljmp
addr16
pop
jmp
jecxz
adc
or
fcompl
fdivp
jg
sbb
fldt
jecxz
pop
mov
arpl
mov
test
fwait
jmp
lret
and
adc
test
push
mov
sub
ds
jg
test
sub
aas
jno
lds
dec
test
adc
sbb
push
dec
mov
ret
jle
or
pop
jl
daa
mov
shrl
jle
cmpsb
js
fsubrl
push
lods
xchg
adc
sub
lcall
ds
inc
test
data16
sbbl
rol
jmp
lret
call
add
pusha
push
ljmp
cmpsb
mov
fdivrl
mov
mov
mov
inc
push
xchg
sbb
arpl
jnp
mov
cmp
sbb
mov
mov
mov
stc
push
dec
push
cltd
jne
xchg
mov
jge
ret
mov
inc
jge,pt
loopne
test
andl
outsl
jl
add
dec
std
or
or
shlb
inc
add
test
sub
insl
dec
je
and
and
cwtl
adc
jl
repz
mov
loopne
or
mov
xchg
sbb
or
jp
addb
inc
pop
js
and
adc
aam
mov
movsb
sahf
xchg
int3
mov
daa
jo
push
ret
std
test
adc
and
sub
ja
mov
mov
imul
fadds
jnp
inc
fwait
dec
push
scas
movsl
adc
sahf
xchg
fstpt
inc
sbb
inc
fists
jl
jbe
ja
insl
movsl
in
or
add
xchg
mov
pop
push
dec
jae
addb
andb
mov
mov
xor
vpminsw
mov
inc
adc
jns
mov
push
jb
int
mov
and
stos
popa
aam
scas
sbb
cmp
mov
int3
adc
mov
lods
pop
and
cmp
lret
in
mov
orl
rolb
push
iret
icebp
fidivl
xchg
inc
push
pop
xor
sbb
mov
mov
fcompl
cld
sbb
adc
push
adc
push
mov
in
sub
fnstcw
sar
stos
sbb
mov
mov
push
scas
inc
jo
pop
lock
add
lods
test
out
inc
mov
fnstcw
cld
sub
mov
jmp
es
jecxz
movsb
sbb
ficomps
test
sbb
mov
loope
adc
rcrl
push
jnp
mov
rcr
into
sbb
stc
push
inc
imul
fisubs
lods
or
sbb
ret
mov
push
and
js
and
stos
push
movsb
push
xor
adc
jnp
das
es
adc
leave
popa
jg
arpl
sbb
push
outsb
sub
dec
int3
mov
out
inc
adc
adc
and
mov
cs
das
and
inc
sub
test
mov
mov
jmp
shll
xor
roll
mov
cmpl
pop
xor
hlt
stos
pop
movsl
adc
les
and
sbb
jle
shl
xor
or
imul
shrb
add
mov
fisubl
inc
sahf
mov
mov
mov
and
lret
out
and
and
cmpsb
sbb
ljmp
ret
js
push
jnp
or
xchg
popf
adc
loop
ljmp
shl
shll
and
shll
arpl
gs
in
clc
cmp
inc
fisubl
pop
in
dec
sbb
ret
loop
in
cltd
loopne
mov
xlat
lret
inc
outsb
stc
jmp
mov
cwtl
cmp
inc
xchg
jno
out
addr16
or
pop
mov
clc
ds
cmp
jnp
insl
inc
push
lds
inc
add
inc
mov
ss
fldt
sbb
sbb
fcoms
push
push
sbb
cmp
pop
nop
inc
rcrb
lock
add
push
or
inc
pushf
mov
mov
xchg
test
dec
mov
out
xchg
sahf
xor
push
adc
sbb
mov
jae
pop
push
lock
rol
andb
jl
dec
lcall
jmp
jmp
out
add
xor
add
pushf
scas
jo
add
mov
jnp
adc
dec
mov
pop
or
sbb
or
dec
and
and
xchg
adc
insb
sahf
and
in
sbb
shll
cltd
sub
repnz
xor
daa
sbb
cmp
cs
fimull
movsb
or
arpl
xor
xor
rcll
or
push
mov
lcall
mov
xor
mov
xchg
js
movl
lock
sub
dec
pop
and
sbb
cmp
sahf
sub
rol
outsl
push
pusha
sub
jecxz
out
stos
ss
outsb
dec
mov
insl
js
pop
dec
mov
faddl
ficompl
pop
xchg
sub
or
pusha
testb
pop
push
pushf
mov
repz
cmc
scas
lods
cltd
mov
add
pop
jge
dec
movsb
cmp
pop
pop
jae
dec
clc
inc
sbb
out
mov
xchg
in
test
xor
popa
shrl
call
push
and
push
xlat
dec
fld1
mov
ljmp
in
xor
mov
clc
mov
test
push
cmp
xchg
or
lret
mov
bound
add
mov
mov
pop
cld
mov
adc
sarl
outsl
inc
fmuls
ret
and
cmpsl
adc
mov
pop
test
jle
adc
and
popf
mov
mov
movhps
or
or
mov
stos
xor
in
into
cs
fcoml
popa
lds
sub
cmp
fisttpll
outsb
imul
push
aaa
dec
cmp
inc
mov
pop
cmc
clc
push
mov
call
sti
or
adcl
idiv
cmpsb
inc
repz
pop
xchg
inc
loopne
imul
clc
pop
add
clc
dec
fs
rclb
push
call
sbb
mov
mov
popf
inc
sbb
mov
push
and
movsl
and
or
or
fisubrl
imul
push
std
cmpb
fs
das
call
aaa
in
jp
ja
inc
fadds
cmp
aaa
xorl
sub
inc
xor
lcall
dec
cmc
repnz
sbb
and
shrb
cmp
dec
iret
mov
and
bound
outsl
or
cmp
ret
push
sbb
dec
shlb
pushl
aad
movsl
sbb
inc
cmp
lcall
add
mov
mov
mov
stc
outsb
movsb
xchg
dec
xor
dec
or
pop
pop
xor
mov
into
or
xchg
daa
inc
pop
xchg
xchg
add
pop
push
testb
mov
imulb
adc
pop
insl
inc
inc
fcoms
pandn
cmc
pop
sub
mov
and
hlt
je
cmp
mov
lds
mov
clc
cmp
andb
out
sbb
inc
js
ret
es
ficoms
push
push
dec
xchg
lret
dec
mov
jg
cmpb
xor
in
mov
sub
data16
add
sub
mov
pop
ljmp
aas
push
in
adc
jnp
xor
adc
add
inc
aam
dec
dec
inc
cmp
or
hlt
clc
inc
dec
sub
xchg
jl
pop
popf
pushf
mov
xlat
movq
dec
xor
xchg
jo
fmuls
push
das
lea
sbb
mov
and
roll
jno
dec
and
scas
andl
sbb
daa
stc
mov
fstl
lods
xor
mov
push
das
push
mov
dec
andb
clc
mov
mov
out
vmread
jle
rolb
ret
xor
gs
pop
pushf
xchg
pop
lret
pusha
cmp
lcall
fs
mov
push
dec
xor
sub
in
xchg
pop
flds
mov
lods
xor
xor
xor
rep
cli
adcb
cwtl
hlt
popf
xor
movsb
je
pop
sub
adc
xchg
adc
pop
jle
sbb
cmpxchg
inc
ljmp
or
loope
xor
sbb
ljmp
fmulp
pop
xor
and
sbb
jmp
pop
push
jle
movsb
mov
and
cmp
test
mov
push
out
rolb
add
ss
adc
mov
add
sahf
in
and
ljmp
and
dec
arpl
ss
fwait
cmp
int3
shll
addb
or
fnstsw
outsl
mov
adc
lcall
adc
pusha
adc
ja
xorb
cwtl
mov
mov
sub
jmp
inc
mov
pop
out
imul
mov
jge
dec
ret
int3
or
loope
pop
ljmp
and
mov
lret
ficompl
fsubrl
loopne
jg
jge
ss
bound
fs
xor
cmpb
notl
addr16
mov
popa
jb
mov
addr16
shrl
jb
adc
rolb
xchg
fdivl
daa
lret
pop
and
movb
jo
rorl
and
enter
mov
in
nop
jnp
insl
pop
push
lock
push
out
popf
or
dec
fwait
out
and
xchg
inc
test
pushf
test
push
scas
mov
mov
mov
or
mov
or
push
cltd
addr16
inc
cld
fdivr
sub
testb
add
imulb
adc
sbb
mov
call
xor
and
push
push
dec
mov
das
jg
fidivrl
add
ja
or
mov
jmp
mov
xchg
ds
mov
pop
stc
push
pop
adc
enter
jle
out
arpl
imul
sbb
dec
push
pop
pop
cmp
push
push
stos
sti
daa
jo
add
shl
dec
jg
add
lahf
je
sti
xchg
sti
les
das
js
sbb
mov
daa
pop
mov
jo
xchg
dec
jns
stc
inc
and
int
or
jbe
lcall
or
xchg
lcall
mov
jne
sahf
inc
cmc
sub
mov
sahf
cwtl
inc
addr16
loopne
loop
push
xor
cltd
jae
test
addr16
sbb
dec
sbb
cld
or
rcll
mov
insl
or
sbb
dec
xor
out
insl
rclb
adc
sub
ljmp
int
test
cmp
and
mov
inc
add
sub
and
nop
and
jl
jae
inc
cmp
or
xor
int3
bound
das
jae
test
pop
push
dec
xchg
loopne
fists
pop
les
cld
testb
and
hlt
aas
cmc
sub
push
push
and
sti
scas
pop
addr16
or
pop
pop
das
sub
sub
push
je
je
cmp
inc
setnp
movsb
or
sbb
xor
es
mov
adc
mov
add
sbb
or
or
pop
andb
in
enter
sbb
sbb
ljmp
sbb
xchg
scas
outsl
xchg
movsl
mov
push
ja
aad
xor
jns
or
or
std
and
inc
sbbl
jbe
dec
mov
pop
cmpsl
into
cmc
lds
outsl
inc
cld
jecxz
add
cmp
gs
clc
fidivl
add
ljmp
subb
filds
aam
add
sahf
inc
pop
cmp
xor
fcomps
jno
sub
jl
or
iret
cmp
mov
adc
jo
data16
mov
mov
shrl
jne
adc
jmp
loopne
mov
pop
flds
or
fcompl
call
ds
daa
jne
dec
xchg
sbb
jb
ljmp
or
sbb
mov
fwait
clc
stos
js
imul
mov
stos
ret
xor
sub
ldmxcsr
ss
xchg
add
movb
sbb
mov
push
sbb
cmp
mov
mov
shlb
movsb
cld
daa
xchg
xor
aaa
shll
scas
cli
pop
jne
inc
inc
sahf
loopne
xor
mov
idivb
sbb
push
sbb
xor
pop
mov
xor
pusha
cmpxchg
je
sub
scas
aam
adc
xchg
push
jne
adc
or
jg
cld
test
es
dec
jnp
ljmp
dec
xlat
inc
scas
push
into
loope
clc
repnz
mov
mov
dec
arpl
mov
mov
push
inc
pushfw
mov
push
dec
lret
cmc
ret
fdivrl
mov
dec
movsb
jp
push
test
fadds
out
add
push
add
stc
add
sub
pop
test
jp
cmp
in
lret
sub
int
and
imul
test
ret
std
rcll
add
in
pop
mov
outsl
mov
sbbb
push
nop
cltd
aad
nop
stos
inc
dec
in
into
dec
pop
xchg
push
cmp
fsubl
test
or
jecxz
sbb
test
sub
or
mov
lahf
incb
sahf
lret
jmp
lods
into
jp
xor
mov
test
ret
and
sub
hlt
add
adc
pop
mov
mov
and
inc
cmp
cmp
add
jg
cmp
nop
xchg
pop
sub
stos
push
dec
lret
mov
fcom
rorb
jae
or
mov
sub
jg
into
push
xchg
stos
dec
in
sub
dec
xchg
inc
push
inc
inc
push
mov
ljmp
mov
inc
out
xor
jle
add
lea
popf
fs
xor
inc
cmp
sbb
xchg
jb
loop
mov
mov
pop
sbbb
mov
add
lea
jp
loop
xchg
shl
mov
or
popa
loop
xor
mov
ja
add
addr16
das
jnp
or
xchg
push
mov
adcb
ret
or
cmpsl
xchg
push
sub
sbb
pop
jle
mov
ss
test
adc
fistpl
into
mov
xor
push
inc
mov
stos
cmpl
or
dec
popf
addr16
pop
and
cmpsl
cmpsb
rorl
and
hlt
jl
or
and
les
mov
push
les
fadd
sbb
orl
inc
out
push
jne
push
cmp
mov
out
or
insl
shrb
jns
adc
in
icebp
and
fsubl
outsb
leave
inc
cmp
or
pop
lods
jl
and
popf
xor
pop
lahf
adc
push
pop
pop
add
out
sbb
xor
in
adc
sahf
out
adc
mov
cmpsl
dec
push
aam
cs
iret
xchg
pop
inc
insb
push
sbb
and
std
cmp
adc
jno
dec
ret
cmp
out
fs
nop
mov
push
mov
insb
jae
ja
movsb
or
pop
add
jne
xchg
jb
shlb
adc
inc
je
or
mov
cmpsl
fistpl
arpl
sbb
mov
mov
adc
shlb
adc
mov
aaa
mov
dec
jae
mov
std
dec
sbb
adc
inc
popf
sbb
jmp
and
sbb
dec
mov
sub
push
mov
rcrl
ja
or
sub
shlb
sar
shll
push
aam
lcall
sbb
int
in
mov
dec
xchg
ljmp
lock
movsl
movsb
das
dec
lods
add
add
test
and
loop
outsb
loope
test
jmp
jp
stos
or
test
jle
nop
adc
sbb
sub
rorl
adc
adc
xor
jp
ja
add
addr16
xor
xchg
add
rcll
aaa
inc
pushf
jno
stc
mov
xchg
ljmp
cwtl
or
add
cmpsb
gs
sub
stc
or
outsb
pop
das
cmp
mov
imul
push
cmc
xor
sbb
lea
fisubs
daa
icebp
jb
pop
stc
or
fcmovb
xor
sbb
adc
pop
adc
call
jge
popf
lods
pusha
xchg
add
gs
sub
imul
add
daa
cltd
daa
xchg
xchg
xor
notl
mov
mov
lahf
sbb
jns
jp
pop
sbb
dec
push
mov
imul
sbb
pop
mov
cwtl
cmp
mov
lods
repz
mov
fwait
mov
andl
push
adc
mov
sub
in
xchg
or
insl
lods
shlb
and
sbb
loopne
jae
xchg
addl
xchg
sub
ret
dec
mov
outsb
jg
fs
iret
inc
sub
movsb
mov
js
movsl
pop
aad
or
dec
loop
scas
popa
inc
movsl
rolb
sbb
pushf
jecxz
movsb
inc
scas
mov
and
or
fcoml
mov
lods
dec
xchg
test
mov
push
popl
dec
aas
jmp
sbb
adc
lcall
mov
mov
in
mov
mov
jne
cmp
push
mov
cwtl
cld
cmp
out
dec
and
add
fwait
ret
mov
arpl
stos
rolb
fmuls
and
sbb
incb
insb
jge
movsb
call
jno
inc
pop
xchg
mov
jg
dec
inc
sysexit
icebp
or
bound
mov
popa
orl
aam
aad
xlat
clc
sbb
cmpl
adc
sbb
or
pop
das
xor
rorb
scas
hlt
jle
lcall
cmc
sbb
and
xchg
fsub
sub
lret
xor
mov
aad
xchg
lret
pop
pop
or
add
inc
test
dec
inc
xlat
xchg
movsb
push
sbb
rolb
shlb
dec
imul
mov
xlat
insb
pusha
mov
push
das
inc
or
scas
pop
pop
cli
sub
mov
sub
inc
outsb
push
out
mov
inc
cmp
call
sub
push
orl
xchg
push
dec
rcrb
leave
jbe
loope
out
ljmp
mov
push
adc
ret
add
rcr
sbb
wbinvd
and
mov
mov
fwait
clc
push
inc
dec
pop
add
inc
mov
imul
mov
mov
cmp
xchg
scas
push
call
hlt
and
add
jp
fisttpll
sub
mov
jno
and
sarl
and
xchg
pop
and
scas
inc
inc
xchg
xchg
aad
lods
or
imul
xchg
daa
loopne
adc
lock
aaa
fisttpll
pop
movsb
outsb
adc
sub
sbb
fmull
jns
add
adc
test
negl
mov
pop
and
rcrl
adc
cltd
aam
sbb
jnp
std
nop
cmp
out
inc
scas
cmp
mov
add
jne
push
sbb
loopne
cmpsb
mov
sysexit
pop
repnz
das
clc
push
sbb
outsb
je
dec
push
rcrb
dec
xchg
cli
or
ljmp
les
push
xor
dec
push
pop
and
orb
aam
mov
jg
push
or
push
and
push
xchg
popf
inc
adc
push
mov
mov
cmp
out
scas
cmpsl
orl
mov
dec
hlt
adc
ds
push
jecxz
nop
and
stc
mov
mov
or
adc
test
xor
imul
imul
jae
push
ret
xor
add
pop
xor
cmp
loopne
inc
aaa
call
inc
dec
sub
pop
in
mov
add
pusha
ret
or
lock
stos
popf
fs
xchg
mov
loop
xor
cmp
push
lods
shrl
inc
pop
in
jmp
sub
or
inc
xchg
sbb
movsl
fs
lods
mov
mov
adc
cmpl
dec
mov
dec
imul
and
adc
xchg
pop
fcom
xorl
push
lret
addr16
jp
pop
mov
xchg
cmc
sbbb
ret
pop
xor
jp
mov
push
jo
pusha
sti
or
fstpt
inc
mov
dec
push
pop
mov
dec
jl
push
ret
adc
test
outsl
jne
mov
or
adc
jae
in
loope
mov
sarl
rclb
cmpsb
mov
cwtl
jle
pop
loopne
ret
pop
inc
inc
sub
fwait
or
jae
and
aam
sbb
mov
mov
lock
jo
mov
jo
sar
data16
inc
jbe
inc
ljmp
mov
insl
inc
sub
fmull
movsb
bound
ds
orl
insl
dec
js
rcl
hlt
sbb
sbbb
xor
in
push
jbe
in
cli
ret
sbb
sahf
xor
aas
xchg
lret
sub
add
mov
test
push
fs
insl
fidivl
mov
xchg
pop
les
xchg
add
adcb
sub
cltd
adc
push
mov
mov
or
test
fimull
mov
pop
xchg
daa
add
jecxz
mov
sarb
pop
inc
aad
aam
mov
mov
iret
mov
jg
or
mov
inc
xchg
xor
jle
daa
mov
es
stos
xchg
rcll
xchg
pop
rorl
push
cmp
mov
loopne
int3
sub
sbb
rcll
push
lock
add
je
pop
test
inc
jle
fadds
ret
and
sub
mov
push
call
bound
fs
adc
sbb
and
sahf
cmp
ljmp
mov
pop
ret
pop
jne
in
or
mov
in
fbstp
mov
sbb
sti
mov
fimull
push
jbe
andl
stc
add
cmpsb
mov
xlat
js
imul
dec
shl
mov
xorl
ret
add
jle
inc
lahf
xchg
in
rorl
shlb
outsb
push
outsl
dec
and
mov
jp
cwtl
mov
cmp
in
aam
and
imul
je
cmpsb
lods
cmp
fdivl
aas
jmp
and
push
mov
out
xor
or
cmpsl
ret
xchg
outsl
std
movsl
adc
hlt
mov
inc
fs
xchg
sub
test
add
cmp
xlat
dec
cmc
jb
xor
push
sub
loop
out
inc
adc
movsb
mov
imul
xacquire
adc
inc
test
popa
test
and
je
enter
add
je
js
fisubs
in
loope
xchg
rcrb
call
loopne
sbb
shll
mov
mov
dec
aas
mov
push
popa
in
divl
jb
insb
sub
xchg
cmpl
test
gs
sub
add
icebp
dec
lods
pop
nop
adc
xchg
and
lcall
mov
clc
cmp
inc
jae
in
sub
inc
sti
adc
icebp
unpcklps
cli
repz
dec
aas
lock
mov
and
iret
js
aas
push
add
cmp
or
jbe
push
sbb
loope
shrb
pop
lds
xor
arpl
in
lds
xor
jl
fmul
mov
inc
pop
movsl
fldl
push
lret
out
add
test
adc
push
push
mov
sbb
das
das
sub
push
cmc
scas
mov
cmp
pop
jp
inc
loope
cmp
dec
fdivrs
inc
xor
loop
jb
pusha
add
add
cwtl
into
test
dec
mov
sbb
xchg
out
push
push
or
arpl
lea
jbe
cmp
mov
pop
pushf
mov
inc
adc
es
clc
add
inc
call
mov
out
pushf
add
pop
icebp
div
inc
xor
inc
je
or
mov
shrb
and
sub
cmp
insl
bound
cmp
ds
push
pusha
jecxz
test
fs
repnz
sub
movsb
xor
sbb
dec
adc
mov
scas
sbb
push
dec
divl
xchg
xchg
loop
mov
xchg
push
in
pop
push
loope
insl
cmpsl
and
pop
mov
rcrl
xor
pop
nop
stos
cmpsl
pusha
sbb
inc
sub
lock
fprem1
gs
in
loopne
dec
mov
scas
fmull
sub
adc
int
mov
out
arpl
lret
or
aaa
outsl
shlb
jp
popa
pushf
stos
mov
add
mov
sahf
cmpl
jl
pop
adc
xchg
lret
mov
xchg
out
push
js
xor
cmpsb
xchg
cmp
adc
out
add
jge
outsb
pop
fbstp
mov
adc
imul
aad
loopne
lock
fdivrs
hlt
lret
inc
enter
or
rcrb
push
cld
mov
inc
in
orl
xor
push
rorl
xchg
push
xchg
mov
push
mov
add
aam
popf
xor
insb
test
dec
mov
das
xchg
test
mov
xor
sub
dec
iret
pop
movsb
lds
lret
inc
scas
dec
jl
push
out
shl
mov
in
mov
add
pop
mov
fnclex
lret
arpl
mov
rcll
lds
loop
in
add
push
lock
fdivrs
neg
es
dec
mov
cmp
pop
sarl
push
push
jp
add
js
into
lods
sbb
clc
mov
mov
stos
cmpsl
or
sub
subb
dec
je
adc
popa
loope
push
enter
or
inc
jg
sbb
push
add
mov
xchg
dec
dec
icebp
push
andb
icebp
add
mov
call
jge
jae
not
arpl
inc
cmp
inc
dec
cs
sbb
mov
dec
and
inc
mov
jmp
test
xchg
pop
jecxz
mov
mov
mov
pusha
adc
lahf
jge
shlb
xor
jg
loop
leave
jmp
and
jae
adc
in
mov
ja
popa
jle
ret
insl
xor
jmp
push
xor
push
movsb
inc
les
lret
loope
and
add
rorb
inc
sbb
inc
icebp
push
adc
or
rol
shlb
mov
xor
sub
sub
adc
ret
xchg
je
mov
lock
imulb
cmp
mov
jp
shr
inc
popa
in
aas
xlat
cmpsl
sbb
adc
rolb
mov
test
cmp
clc
fcoml
jb
xchg
add
lods
fadd
out
pusha
test
lcall
mov
leave
loope
jo
mov
mov
lret
fwait
sub
push
xchg
bound
adc
mov
hlt
scas
loope
mov
gs
in
mov
mov
popf
jl
and
outsl
bsf
stos
cli
clc
xchg
mov
sub
inc
unpckhps
ror
mov
inc
sbb
stos
or
clc
addr16
js
adc
das
cli
sbb
test
inc
jmp
push
iret
mov
mov
iret
inc
mov
and
test
aam
imul
pop
mov
xor
adc
xchg
xor
push
dec
leave
aam
icebp
imul
mov
sub
mov
loopne
sbb
mov
jp
fwait
movl
pusha
loopne
jp
push
clc
or
popa
movsb
roll
sub
jne
loopne
dec
aaa
adc
xlat
loopne
pop
hlt
push
push
outsl
fsubrl
adc
or
test
adc
nop
or
not
daa
testl
ljmp
jno
pushf
fists
aaa
movb
jl
inc
ret
fcmovbe
test
mov
dec
xlat
xlat
sub
xchg
push
lods
xor
in
mov
mov
js
fwait
scas
call
std
jge
and
pop
push
aas
mov
incb
dec
pop
and
mov
and
orl
sub
add
cmc
mov
icebp
lock
shll
fcoms
ret
pop
push
push
sahf
xchg
cld
xchg
add
inc
repz
or
push
xchg
inc
and
cld
push
cmpsb
cli
dec
aas
lock
xor
add
leave
icebp
cs
cmc
or
add
dec
cld
adc
loop
das
jae
data16
jl
xor
mov
dec
xlat
add
bound
sbb
dec
pop
daa
in
adc
stos
xchg
sub
inc
cmpsl
incl
mov
dec
xor
rclb
mov
mov
dec
sbb
popf
jle
mov
movsb
pop
sub
repnz
push
mov
jne
push
sbb
leave
stos
sbb
and
adc
mov
fs
fsubr
cmp
jge
cmp
jle
sub
xor
cmp
mov
adc
mov
addb
or
mov
dec
jp
call
add
loop
scas
or
cltd
mov
and
jge
incl
mov
stos
das
xchg
cmp
push
or
addr16
mov
dec
lcall
pop
adc
mov
inc
stos
cmp
aad
aas
loope
pop
scas
xchg
aaa
cmpsb
push
enter
cmp
sbb
sub
jge
mov
pop
sub
imul
pop
andl
jp
vrcpss
mov
sbb
add
clc
testl
pop
dec
lock
mov
cmpsl
mov
sub
push
pop
xor
dec
insl
outsb
mov
mov
fstl
loope
push
ret
cmp
ret
cmp
test
outsl
jge
xor
in
pop
lods
lods
sbb
lea
mov
mov
out
mov
inc
cmp
in
adc
mov
xlat
sub
lods
xchg
in
jge,pt
xor
xchg
lods
sbb
push
lea
subb
nop
cmp
mov
fld
aaa
sub
add
arpl
adc
lsl
and
xchg
in
lock
ljmp
xchg
push
inc
roll
xor
pop
nop
mov
mov
push
stc
inc
ja
cmpsb
push
dec
lcall
mov
or
jecxz
fldt
and
sbb
enter
cmp
push
dec
sbb
call
xchg
and
fs
jmp
xor
iret
loope
rolb
jbe
add
inc
and
cli
and
out
sub
xor
mov
or
or
xor
push
lahf
and
mov
push
xchg
push
inc
mov
out
ficoms
mov
push
xchg
test
ljmp
lds
xchg
ss
faddp
fists
loopne
or
adc
or
adc
mov
mov
test
push
cltd
dec
sub
pop
push
ds
bound
arpl
cld
ss
outsl
cltd
add
and
mov
inc
cmp
cs
mov
dec
pop
aad
or
data16
lock
dec
lahf
push
and
mov
mov
scas
cld
clc
mov
sbb
addb
out
cld
add
out
xchg
test
jb
mov
adc
inc
mov
out
dec
push
pop
hlt
cmc
lock
push
ficoml
aaa
clc
sbb
jge
cltd
lds
adc
fcoml
in
daa
into
divl
je
sbb
cmp
stos
cmp
xchg
jl
shrl
clc
lods
or
push
xlat
or
daa
sbb
out
pop
xor
ja
adc
or
cmp
aad
adc
rclb
inc
imul
sub
add
dec
sbb
fcomps
push
pop
rol
arpl
add
xchg
lds
mov
and
cmp
sbb
dec
or
adc
je
rcll
mov
push
dec
and
insl
adc
xorb
jbe
getsec
dec
popf
and
push
fwait
jge
nop
cld
and
add
sahf
cmc
xchg
aam
bound
pop
subb
hlt
jo
xchg
nop
ret
mov
movsl
stos
out
mov
sbb
scas
jg
add
inc
push
dec
js
mov
jecxz
add
cs
sub
push
xchg
mov
pop
outsb
jg
jle
int
in
rolb
test
push
add
in
dec
iret
jne
loop
lahf
ljmp
loope
int
cmp
cltd
stc
clc
or
cmc
mov
jl
pop
icebp
add
pop
jno
push
mov
icebp
ficompl
fmul
js
push
and
mov
or
pop
lock
ficomps
mov
ret
sub
notb
xchg
jge
and
rcl
fisttps
mov
or
movsb
cmp
inc
loop
int
lahf
ljmp
loop
stc
aam
add
dec
sbb
fildl
addr16
sub
cmp
jg
outsl
fildl
cmp
mov
mov
insb
mov
cmp
scas
sub
je
push
shll
xchg
push
mov
or
mov
adc
nop
lret
jns
jecxz
mov
inc
mov
dec
lods
xor
push
sbb
lret
inc
out
and
and
nop
adc
fildl
pop
or
rcl
mov
dec
loop
mov
mov
lods
arpl
jecxz
imul
test
stc
les
adc
adc
fisubs
add
nop
adc
cltd
popa
adc
cmp
jg
shl
outsl
mov
adc
add
aam
adc
inc
mov
call
aaa
insl
push
mov
clc
push
mov
or
lahf
es
in
loop
xor
lea
mov
dec
jmp
xlat
adcl
lcall
dec
xchg
shrl
mov
pusha
mov
aas
sbb
pop
mov
inc
cs
cmpsb
fldl2e
pop
lret
pop
dec
push
mov
loope
sub
jg
hlt
push
test
mov
fstpl
test
rcl
add
xchg
mov
shrl
sub
mov
mov
aaa
jecxz
clc
push
test
inc
aaa
jb
lea
cmpsl
sbb
push
cmpsl
push
sbb
scas
gs
and
mov
push
popl
cmp
shrl
cltd
xchg
in
lods
jl
mov
movsl
pop
lock
add
lds
js
or
sbb
and
ret
sahf
adc
mov
cwtl
es
mov
adc
mov
xor
and
fiaddl
mul
testb
jns
scas
loopne
das
jb
jns
and
pop
dec
lds
push
roll
in
add
xchg
pusha
sbb
pop
and
adc
jno
mov
and
and
mov
mov
outsb
test
jbe
cld
and
arpl
mov
inc
xchg
adcb
inc
lods
cmp
hlt
sahf
insb
jmp
in
jmp
test
sbb
out
mov
fsubrs
shll
adc
adc
pop
mov
cmc
sbb
fwait
out
xor
les
and
in
decb
lcall
orl
adc
int
ror
sbb
xchg
pop
jl
mov
imul
dec
ret
jbe
and
outsb
inc
loop
push
sbb
cltd
repz
mov
dec
daa
or
mov
xchg
push
inc
xor
sbb
ds
jle
push
cmp
and
inc
imul
enter
push
insl
jl
ljmp
daa
mov
test
inc
or
imul
mov
out
inc
lods
in
push
gs
mov
xchg
scas
sub
and
les
inc
and
sub
jecxz
fmull
cli
jle
sbb
cmc
pop
icebp
hlt
add
mov
sbb
pop
lods
xchg
inc
cmpsl
lret
mov
cmp
rclb
mov
aad
lea
sub
hlt
lock
cmp
jns
rcrb
insl
dec
je
icebp
testb
xchg
xor
mov
fidivl
int
jle
or
inc
aas
and
jne
jno
xor
sahf
jae
inc
mov
gs
outsb
jnp
add
jnp
test
jmp
lcall
repz
xchg
stos
fisubs
sbb
test
adc
shrl
nop
xor
ds
xor
pop
aaa
imul
or
movsb
out
pop
clc
add
sbb
mov
mov
dec
addr16
or
cld
lret
outsb
mov
fstps
xchg
bound
dec
xchg
sbb
cmp
loopne
in
lods
das
cmp
fld
sub
repnz
add
add
xor
insl
rclb
cmp
repz
subl
push
ret
mov
subl
arpl
stos
inc
xlat
xor
daa
pop
cmp
fdiv
pop
lret
dec
xchg
sbb
or
shl
ret
icebp
dec
add
dec
pushf
fnstsw
cmp
popf
or
shl
jp
fs
test
pop
and
xor
sub
test
ljmp
xchg
jg
or
dec
mov
or
pop
xor
cmc
pop
lcall
out
test
jbe
jne
push
or
xor
dec
xlat
seta
xor
jne
lret
test
in
mov
sub
mov
rcl
adc
out
nop
or
movsl
loopne
mov
pop
add
ror
loopne
mov
inc
mov
aam
jmp
mov
outsb
sbb
pop
mov
adc
hlt
and
sbb
arpl
std
jnp
pushf
cmpsl
ds
sbb
cli
and
sub
lods
aas
cmp
dec
and
cmp
sub
adc
mov
mov
loopne
dec
xchg
sub
jl
and
push
xchg
orb
ja
jb
jmp
nop
loopne
xor
adc
jecxz
mov
mov
inc
push
hlt
orl
inc
cmp
mov
je
jne
or
ljmp
pop
notl
in
fmul
jb
inc
xorl
cvtdq2ps
loop
repz
push
inc
les
fistl
adc
xchg
pop
into
test
inc
mov
jl
pcmpgtb
sbb
movsb
clc
in
mov
mov
push
in
jecxz
mov
xchg
sbb
bound
cmp
inc
mov
loop
int3
add
add
popa
js
test
push
push
add
and
aas
add
out
xchg
mov
cmpsl
sti
xchg
cmpsl
lods
mul
mov
mov
mov
dec
dec
repnz
cmp
xor
test
dec
pop
jmp
ds
jno
je
jne
or
xchg
adc
divb
dec
movsl
xchg
cmp
mov
popa
loope
xchg
rcr
cli
add
ret
sbb
test
mov
xor
or
xchg
dec
call
or
out
inc
pusha
out
sub
cmp
fisttpl
xor
xchg
das
push
aad
sbb
nop
push
sbb
add
pop
cld
xchg
lret
pop
add
rcl
xor
or
hlt
pop
or
std
lock
mov
pop
rcrl
inc
pop
nop
xchg
hlt
aad
pop
pop
lar
dec
add
inc
daa
sbb
lods
mov
lods
ja
fwait
mov
addr16
and
ljmp
push
adc
lock
adc
mov
mov
sahf
sub
mov
mov
in
in
mov
dec
adc
mov
inc
fnstsw
insl
and
jno
jbe
or
mov
lret
cmp
mov
jbe
iret
push
cltd
clc
insl
aam
cmpsb
cmp
jnp
sub
or
mov
inc
jg
mov
pop
and
fdiv
or
cmp
icebp
scas
sbb
sbb
daa
push
pop
inc
test
sub
jle
cmc
inc
jp
adc
sbb
push
add
shrb
jp
pop
jg
or
mov
mov
lock
scas
subb
push
xor
clc
dec
sahf
adc
adc
psrlw
push
and
out
mov
ds
and
loope
outsl
push
push
jecxz
loope
pop
aam
xchg
movsb
insl
or
inc
cmp
pop
and
sar
mov
mov
xor
arpl
mov
mov
mov
hlt
leave
scas
sbb
xchg
ret
sbb
or
ds
sbb
cmp
inc
xor
push
or
mov
imul
test
js
adcb
xchg
mov
jp
fs
xor
popa
xchg
sbb
or
jmp
scas
outsb
outsl
aad
push
fcmove
push
je
daa
and
les
pop
test
pop
cmp
cld
mov
popa
daa
mov
leave
adc
jge
in
jo
push
push
lock
jecxz
mov
adc
push
push
fisttpl
adc
inc
insb
add
out
add
or
shll
fbld
popa
adc
int
lret
mov
int3
mov
push
ret
pop
and
hlt
push
insb
dec
cmpb
sbb
add
inc
cli
jle
dec
add
lock
push
scas
sbb
mov
pop
mov
jae
in
popa
jmp
jp
cltd
jnp
sbb
sahf
loope
cli
call
lcall
jle
ss
pop
hlt
inc
mov
mov
mov
aam
loopne
int
inc
dec
cmpsb
mov
mov
cld
jl
cmc
xchg
sbb
mov
cmpsb
aad
les
mov
inc
lock
inc
xchg
or
imul
xchg
mov
mov
scas
or
arpl
inc
cmp
rol
lods
addb
into
jne
testl
jmp
inc
cltd
rorl
cmp
jmp
mov
jb
call
lock
or
jno
sub
pop
fcmovnb
sbbb
adcb
add
jmp
xor
addr16
repnz
mov
lds
push
std
dec
loopne
fdivl
dec
add
aas
data16
ficompl
mov
jo
shlb
std
mov
add
inc
add
loopne
shll
cmp
rcll
push
sahf
fildl
inc
mov
jns
and
rorb
mov
xor
sahf
sbb
jmp
test
inc
je
push
rcrl
faddl
sbb
add
and
enter
cs
add
std
ljmp
adc
leave
mov
jne
test
shrb
pushf
out
xchg
lret
lret
fcom
sbb
jbe
andb
ljmp
sti
cmp
testl
mov
adc
add
xor
pop
cmp
sub
sbb
lock
in
dec
sub
frstor
dec
psubusb
add
mov
cmp
adc
loope
and
les
and
rcll
out
add
sub
ds
test
dec
push
cmpsl
inc
xchg
clc
ja
mov
adc
jnp
repz
add
mov
add
outsb
mov
out
push
xchg
cmp
inc
jbe
jo
pop
shrb
jecxz
adc
sbb
stc
jmp
inc
cld
out
jno
or
pop
or
sbb
cmp
jo
push
aad
cli
test
imul
jmpw
fcomps
mov
cmp
lds
mov
ret
lret
mov
outsb
lock
sub
insb
sub
insl
xchg
mov
mov
dec
lods
cmp
inc
scas
leave
cmp
popa
fistps
dec
mov
or
fimuls
sbb
xchg
add
jne
jnp
clc
pop
test
fcoms
cli
out
mov
adc
xchg
xchg
sub
lret
jmp
mov
inc
lods
stos
sub
ljmp
lea
pop
unpcklps
ja
sbb
arpl
push
jb
loop
cmc
aam
sub
cmp
pop
push
smsw
xor
inc
inc
popf
and
dec
mov
add
or
cmp
dec
mov
inc
xlat
push
pop
ljmp
inc
mov
rcr
outsb
loopne
mov
scas
dec
add
jl
xchg
dec
dec
push
setge
icebp
shll
and
test
and
repnz
xchg
clc
pop
xor
testb
and
add
jne
sub
lods
popf
and
aas
sbb
cli
cmpsb
jmp
movsl
rolb
jmp
xor
insl
push
dec
adc
cwtl
xchg
in
ja
push
mov
repnz
mov
pop
mov
shr
cmp
and
loopne
sub
fdivl
pop
mov
push
and
bswap
and
loopne
xor
pusha
inc
xchg
fisubs
pop
sub
sub
sahf
pop
lock
mov
call
popa
adc
fdivs
jg
pop
mov
add
xchg
sub
mov
adc
aaa
inc
cmpsb
js
scas
cmpsb
arpl
jae
jge
in
or
std
adc
cmp
je
cld
mov
add
shl
inc
and
into
dec
mov
mov
ror
popa
lock
jge
mov
or
inc
es
cmp
fcom
pop
insb
inc
sub
sbb
pop
and
mov
out
sbb
jbe
test
inc
pop
je
xchg
iret
sub
mov
push
jne
rol
xor
fisubrs
movsl
outsb
inc
mov
pop
cmp
dec
xchg
iret
sbb
inc
inc
out
add
dec
jge
mov
ret
pop
push
cmpsb
ljmp
ret
daa
lock
arpl
and
ret
or
aaa
repnz
jno
mov
push
jl
std
jne
sbb
mov
push
lods
xor
mov
sbbl
sahf
lcall
js
out
movntps
sbb
push
notb
push
jno
cmp
mov
adc
push
loope
adc
sub
or
xlat
xor
or
or
in
add
adc
arpl
leave
cmc
in
pop
inc
inc
jecxz
scas
xchg
mov
sti
push
loop
xor
xchg
outsb
aam
mul
icebp
int
and
pusha
sbb
ret
fildl
add
pop
push
mov
mov
inc
xor
mov
pusha
js
inc
xor
repz
das
xor
push
and
sub
cli
notb
out
sub
aad
loopne
inc
aaa
pop
mov
cmp
in
mov
shl
int
scas
and
das
in
jbe
sbb
lahf
xchg
pop
addr16
aas
shlb
icebp
subl
test
pusha
cmp
xor
lds
stc
int
dec
pop
imul
mov
mov
push
jns
inc
pop
mov
pop
sahf
mov
test
pop
inc
cmpsl
lods
cmpsl
cmp
xchg
aad
jo
stos
inc
rcrl
ljmp
or
loope
xchg
push
dec
ret
je
jmp
imul
mov
sub
inc
mov
push
and
out
mov
adc
ficoml
cmpl
mov
jnp
movsb
push
adc
addl
xor
fnsave
cmp
xlat
dec
mov
jg
repz
imul
testb
mov
mov
sbb
mov
nopl
les
add
cld
rcll
xchg
test
mov
popa
mov
or
pushw
mov
and
inc
mov
dec
icebp
xor
call
je
cwtl
cmp
xchg
ret
cmp
mov
mov
out
pop
inc
decb
fxch
iret
sbb
mov
add
fisttpll
mov
mov
lock
mov
jmp
cmpsb
and
sbb
jns,pt
fwait
mov
inc
cmp
scas
pop
or
or
hlt
inc
insl
pop
es
aaa
add
adc
mov
fwait
sub
subb
mov
mov
inc
inc
and
scas
or
xchg
scas
lock
pusha
xchg
mov
xor
jg
jge
inc
inc
aas
lds
fidivrl
enter
dec
in
ret
pop
jo
enter
add
add
inc
xor
subl
and
subb
mov
add
mov
fcoml
add
pop
cmpsl
aam
inc
sti
add
dec
mov
pop
mov
ja
call
xchg
xor
pop
cli
stc
push
in
push
pop
shll
mov
inc
xlat
and
or
sahf
mov
cmpl
movb
mov
jno
xchg
mov
inc
cmp
mov
mov
cmpsb
cmp
adc
call
test
sbb
popf
xor
xchg
lods
popa
push
or
mov
shlb
loopne
out
pop
lods
push
pop
jle
lcall
cmpsb
xor
rolb
mov
ds
and
jno
mov
movsb
inc
aaa
imul
outsl
imul
jb
add
insl
fiaddl
ljmp
lock
loop
inc
jo
mov
adc
or
shl
call
cmp
stos
inc
xor
scas
daa
inc
ret
push
bound
sti
lcall
enter
mov
les
imull
fadd
orb
mov
sbb
pop
and
int3
pop
push
out
sbb
pop
outsb
mov
mov
addb
xor
sarl
dec
loopne
imul
xchg
pop
jbe
sahf
xchg
mov
push
mov
lods
jnp
inc
mov
das
in
cmp
cmpsl
mov
das
ret
push
insl
add
test
mov
nop
cmp
stos
shr
xchg
xchg
ret
jno
pop
mov
sub
ljmp
cmp
enter
orl
add
fisttps
insb
fdivs
mov
jl
std
push
mull
sub
outsl
inc
fdivl
sarl
ss
cmp
sbb
or
dec
outsl
push
ret
inc
sbb
repz
push
out
je
dec
xchg
push
jno
pcmpgtd
imul
mov
push
jo
out
pop
mov
scas
ror
sub
sub
add
xor
xchg
lcall
dec
cmp
push
pop
inc
rorl
cwtl
sub
or
sbb
adc
int3
pop
xchg
ja
inc
daa
mov
add
ss
jl
push
outsb
pop
add
test
rcl
jb
out
mov
push
jle
sbb
sub
adc
sbb
mov
ljmp
lds
jecxz
pushf
fistl
ja
dec
rcrl
pop
pop
mov
mov
adc
aas
loope
lahf
or
and
fadds
mov
shll
mov
jl
add
out
aam
jmp
mov
mov
adc
shll
adc
add
addr16
test
loope
cmpl
jl,pn
sbb
fisubrs
loopne
test
push
cmp
cmc
sti
test
std
push
rcrl
das
or
mov
fdivs
in
int3
andl
cmpsb
add
pusha
sbb
dec
loop
test
adc
push
adcl
mov
inc
sbb
rcll
sbb
ficompl
xor
dec
and
dec
fwait
mov
add
cli
sbb
dec
mov
fs
stos
sub
dec
arpl
dec
sarl
dec
inc
testb
dec
ja
leave
or
rcrb
sub
dec
mov
nop
popf
xor
lret
push
cli
mov
mov
jp
ret
rolb
xchg
fiadds
ret
mov
or
scas
pop
scas
leave
xor
mov
bound
andl
je
icebp
or
pop
xor
test
push
sbbb
add
roll
push
pop
sbb
dec
inc
inc
xchg
popa
jnp
xlat
inc
shlb
push
adc
fadds
aaa
in
test
dec
aas
and
xchg
adc
stos
out
jo
cld
fadd
aam
inc
xchg
mov
jno
jecxz
add
mov
loopne
mov
ljmp
cmp
int3
das
aas
lock
pop
cli
lret
xor
and
pop
repz
lods
fcompl
jle
les
dec
sub
stos
ljmp
adc
inc
xor
pop
sarl
sbb
nop
and
sbb
push
or
pop
dec
cltd
sbb
mov
inc
sbb
mov
add
add
and
fs
inc
inc
adc
in
in
sbb
pop
ret
stos
popf
scas
lret
pop
pop
dec
cmp
mov
sbb
std
inc
adc
or
aad
mov
fadds
adc
in
loope
inc
push
js
or
jbe
movl
aam
jbe
out
jg
fisubs
xor
ja
sbb
xor
push
jl
mov
mov
adc
jecxz
adc
or
mov
or
jecxz
adc
dec
pop
sbb
mov
xorb
pushf
aaa
push
sbb
xorl
ljmp
shlb
mov
mov
jae
cmpsb
mov
push
dec
xor
adc
call
and
cld
mov
mov
loope
xchg
gs
xchg
add
sarb
inc
rcrb
gs
mov
jbe
out
adc
pop
je
call
or
mov
cltd
andb
rclb
fsts
cwtl
std
push
enter
adc
add
xchg
cwtl
pop
jp
dec
rsqrtps
xor
inc
inc
mov
aam
in
push
rorb
cli
out
icebp
mov
aad
add
sarb
lods
sbb
push
jne
xor
jo
test
rcpps
lods
pop
call
jp
imul
mov
mov
jge
inc
sbb
mov
sbbl
adc
pop
in
fwait
push
adcl
stos
mov
flds
and
mov
jg
in
mov
or
ss
dec
dec
icebp
pop
dec
loopne
into
and
mov
fucom
aaa
out
aas
adc
xchg
jo
loop
adc
pop
sbb
data16
std
in
sbb
mov
xor
xlat
ja
outsl
data16
cmpl
imul
pop
repnz
mov
hlt
pop
and
sub
subl
fnstsw
push
add
push
mov
fs
data16
push
push
mov
push
or
js
dec
aam
inc
bound
repz
inc
xor
dec
inc
aaa
xor
cmp
jo
push
mov
xlat
add
add
mov
lods
mov
or
mov
xchg
inc
outsl
insl
pop
xor
lock
adc
dec
dec
js
popa
jno
mov
pop
push
fmuls
push
adc
push
xor
lret
push
lods
or
cld
testb
loopne
sub
lock
jo
ret
movsb
inc
ret
xor
mov
loopne
ret
stos
imul
jle
push
in
imul
pop
loopne
incb
inc
hlt
xor
dec
test
gs
xchg
into
insb
jb
push
ja
hlt
or
mov
imull
jo
outsl
and
add
cld
fsubr
or
movsb
mov
loopne
das
inc
std
lds
lahf
loopne
dec
jno
jne
arpl
cmp
mov
mov
sbb
push
pushf
push
push
adc
xor
imul
mov
sarb
xor
out
mov
jo
bound
push
pop
sub
push
loopne
jb
movsl
pop
incl
sub
lret
inc
inc
sbb
adc
dec
cmp
je
imul
ja
icebp
fdivl
inc
outsl
fsubrl
mov
ds
inc
stos
test
or
inc
pop
in
jge
loope
mov
subb
sub
cmp
inc
jge
add
clc
shll
into
dec
test
sbbl
push
hlt
mov
rcl
into
xor
push
dec
inc
push
and
push
fs
fdivl
mov
fs
push
push
adc
out
sub
imul
and
push
icebp
push
inc
or
in
ljmp
dec
fs
jbe
and
addr16
clc
jb
inc
sub
add
sbb
xor
and
out
icebp
fidivl
jno
lock
pop
sahf
push
adc
mov
push
add
test
das
pushf
gs
xor
ret
fucomi
mov
dec
movsl
mov
leave
ret
mov
jg
out
sub
or
sub
dec
sbb
sub
mov
mov
mov
jne
dec
mov
fadd
lods
adc
inc
outsb
jb
cmp
adcb
adc
mov
rorl
addb
cmp
pushw
xor
cmp
mov
ds
ret
dec
je
xlat
mov
mov
ja
add
jne
lock
cs
dec
arpl
idiv
xor
xor
adc
in
sub
data16
adc
hlt
lock
add
addr16
clc
inc
outsb
add
jle
rorl
pop
ja
inc
out
push
test
ljmp
mov
pop
jbe
mov
add
into
inc
adc
mov
xlat
inc
add
mov
fistl
pop
loopne
ja
inc
inc
push
mov
mov
adc
sub
sbb
push
add
inc
adc
pop
sub
add
mov
call
fildl
mov
push
pop
xchg
popa
arpl
icebp
subl
push
xchg
sbb
adc
push
ss
jb
clc
cld
lret
add
pop
mov
mov
stc
loopne
sahf
in
jle
decl
repz
dec
mov
loope
xorl
add
loop
out
js
xor
dec
xor
dec
xchg
mov
jnp
add
pop
aaa
xchg
dec
cmp
fisttpl
mov
xor
jae
xor
dec
pusha
pop
imul
dec
and
arpl
mov
jge
jl
loop
and
lods
fistpl
adc
sbb
xor
and
inc
sahf
push
int3
frstor
cli
and
int3
out
push
dec
push
shl
inc
add
pop
push
arpl
adc
xorl
xor
mov
or
leave
rcll
add
cmpl
sbb
dec
outsl
out
mov
jle
mov
jmp
push
push
out
push
dec
xor
movsl
xor
jno
push
inc
dec
jae
loopne
test
testl
lods
push
xchg
sub
jae
sti
or
and
and
pop
dec
mov
inc
stos
sub
sub
clc
inc
ja
movsb
icebp
mov
pusha
xchg
iret
pop
mov
xchg
xchg
jo
test
andb
cmpsb
push
push
ljmpw
outsb
dec
dec
outsl
in
insb
jbe
ret
pop
jae
jb
test
cs
dec
sbb
cmp
mov
dec
add
add
dec
push
test
je
and
inc
jne
pop
jns
jae
dec
pop
push
js
fsubl
jae
gs
jns
xor
mov
or
mov
imul
mov
insl
addr16
outsb
ret
lret
and
inc
xchg
dec
mov
and
sub
jno
leave
ret
sbbl
jo
xchg
leave
push
push
jne
fistps
jle
imul
dec
pop
inc
push
pop
jae
and
sub
jns
jo
pop
scas
sbb
outsl
pop
mov
xchg
and
add
das
fs
or
test
cmc
loop
mov
lods
push
and
push
sarl
pushf
outsl
xor
pop
js
movsb
push
lods
xor
inc
aaa
dec
aam
jge
hlt
movl
push
add
out
pusha
add
sar
push
jns
inc
xor
out
jne
jecxz
push
adc
inc
mov
sbb
mov
adc
cmpl
xchg
pop
add
lds
jle
xor
push
pop
xor
clc
outsl
adc
subb
jmp
mov
stos
or
ljmp
mov
mov
adc
mov
mov
inc
loopne
adc
add
and
sbb
inc
xor
push
lret
into
pop
scas
push
rclb
push
pop
sub
orb
insl
inc
mov
das
insl
dec
ret
xor
fmull
push
into
icebp
je
jecxz
pop
jne
loop
mov
inc
dec
add
sub
mov
dec
inc
adc
add
sub
xchg
popa
sbb
jp
pop
mov
cwtl
sub
jb
pop
and
inc
push
or
inc
insb
sbb
outsl
hlt
jbe
push
out
push
push
push
xor
movsl
sbb
cmp
sbb
stos
xor
push
das
adc
cmpsb
jle
cld
dec
sbb
aaa
add
jo
dec
add
outsl
lock
sbb
push
lods
pop
push
xor
push
loop
ss
xchg
dec
inc
imul
shll
jecxz
xchg
test
push
and
popl
xor
out
adc
adc
dec
dec
pop
fs
popa
add
insb
pop
jb
dec
push
dec
dec
dec
cmpsb
ja
inc
inc
sub
push
mov
inc
leave
sub
iret
dec
or
ljmp
popa
lods
mov
adc
sbb
xor
sub
add
push
dec
outsl
outsl
shlb
inc
push
push
inc
jbe
inc
jns
ljmp
cltd
jmp
push
lock
roll
mov
divb
mov
mov
add
mov
repnz
mov
inc
push
mov
popf
shrb
push
imul
mov
pop
dec
fdivrs
jge
shl
pop
sbb
mov
out
ret
inc
jno
lret
shll
dec
pop
cmpl
xor
add
js
outsl
push
imul
push
pop
add
ss
insl
dec
outsl
imul
xchg
int3
popa
and
push
popa
dec
inc
mov
inc
dec
mov
inc
gs
lds
into
loop
and
add
popa
mov
dec
jbe
repz
or
inc
mov
in
push
int3
inc
in
cmp
mov
pmulhuw
inc
pop
or
lock
or
or
add
push
xor
xor
pop
arpl
dec
add
out
push
add
pop
lods
mov
mov
mov
add
inc
push
push
jo
popw
sub
xor
adcb
insl
pop
mov
dec
push
inc
vmulsd
add
push
xchg
into
fcoms
movsb
lods
fisubrl
popa
mov
into
roll
dec
sbb
ret
sub
jae
push
iret
les
je
sub
pusha
not
jne
jno
lret
push
pop
aaa
insl
dec
push
dec
into
loope
dec
jno
out
jne
insl
xor
roll
ja
inc
dec
sub
xor
scas
shll
je
aas
xor
xor
loope
cmp
cld
in
xchg
cld
aad
add
jb
adc
mov
aad
in
sbb
je
push
push
inc
inc
nop
push
mov
inc
jne
imul
adc
inc
mov
pop
mov
pop
sbb
jmp
jecxz
leave
imul
inc
pop
ss
mov
pop
inc
arpl
shrb
xor
or
pop
or
fdivl
cmp
decb
add
or
mov
jmp
lret
dec
mov
or
add
sbb
popa
lods
subl
or
and
and
or
dec
add
or
fisttpl
icebp
add
adc
push
add
add
and
aad
fisttpl
pop
add
dec
and
add
and
add
jbe
sub
adc
and
inc
or
imul
fiadds
add
add
add
jg
and
add
add
dec
add
pop
push
and
fsubl
inc
sub
pop
fisttpl
inc
outsb
push
pop
adc
jle
in
mov
jb
push
inc
add
imul
xlat
sbb
dec
pop
add
lcall
loope
mov
jnp
push
in
add
out
imul
imul
add
mov
pushf
jp
jne
stos
jo
pop
mov
jbe
in
add
int
sub
jnp
das
scas
xor
push
sti
push
cmp
adc
dec
das
sbb
xor
inc
cmp
out
or
adc
arpl
xchg
xor
icebp
insb
outsb
fistpl
and
stos
add
xchg
xor
inc
lar
outsb
imul
inc
and
xchg
xor
jnp
sub
or
movsl
pop
test
insl
outsb
and
or
aad
pop
xlat
or
push
dec
add
push
mov
ja
test
inc
aad
pop
test
out
sbb
mov
sbb
xchg
pop
jae
adc
shrb
and
and
fdiv
nop
sub
mov
and
lods
pusha
pop
dec
aaa
inc
lea
or
xor
xor
loopne
mov
jo
pop
stos
and
mov
jge
sbb
and
xchg
je
add
dec
rcrb
lcall
enter
shr
adc
mov
cltd
out
fwait
cmp
push
push
rcrb
mov
or
lcall
cwtl
imul
adc
pop
rcll
xorb
adc
fcomps
adc
inc
movsb
or
popa
imul
dec
adc
adc
adc
lcall
fwait
jle
shll
subl
cmp
cwtl
dec
push
or
xor
add
cmp
imul
mov
subb
xor
jne
xlat
outsb
imul
inc
add
ret
idiv
imul
gs
xor
cs
insb
cmpsb
adc
ss
add
and
and
inc
out
sbb
aam
jg
out
and
xor
jl
xchg
xchg
fidivrl
lods
xor
mov
cltd
or
or
jnp
sbb
setae
mov
inc
jns
xor
cltd
inc
call
sbb
add
xor
adc
add
rcrb
push
pop
andb
inc
lcall
fwait
mov
or
inc
lods
popa
xor
ficoms
cmp
cld
in
jnp
cltd
bound
shrl
insl
pop
add
aam
mov
cltd
out
mov
push
xchg
pop
lcall
dec
push
add
pop
outsb
les
xchg
loope,pt
jae
and
andps
push
fucomi
inc
bound
adc
popa
out
jae
pop
inc
sbb
add
cs
mov
push
and
add
lcall
or
sub
add
out
cwtl
inc
roll
add
imul
popa
je
gs
push
insl
mov
inc
outsl
outsb
jae
adc
imul
push
outsl
dec
jne
je
inc
jns
and
ffreep
pop
inc
outsl
jb
jo
dec
bound
arpl
js
out
out
insl
push
inc
imul
dec
outsb
outsw
jae
mov
push
outsb
aas
outsb
fs
jo
sbb
scas
sti
scas
je
push
jb
inc
outsb
or
imul
pop
jmp
push
sbb
lea
xor
popa
fs
mov
neg
jb
cmp
dec
gs
jae
sbb
jae
je
outsl
mov
mov
jae
insl
push
imul
neg
lods
mov
inc
jg
dec
outsl
dec
adc
int
aaa
sub
fs
orl
popa
inc
inc
jb
jb
loopne
jg
sub
adc
and
je
bound
jae
and
insl
or
add
adc
mov
jo
jb
popa
insl
and
insl
test
push
pop
arpl
loope
sub
dec
popa
arpl
sub
dec
dec
inc
inc
dec
pop
xlat
push
sbbb
inc
sbb
mov
call
or
push
add
outsb
arpl
gs
imul
lret
shrl
les
mov
addr16
mov
jp
and
popa
jo
imul
push
jae
and
jae
popa
addr16
inc
inc
insl
inc
fsubrs
or
mov
xlat
mov
gs
sbb
addr16
adc
dec
adc
lahf
imul
push
adcb
insb
inc
imul
jbe
and
ljmp
callw
xor
jb
push
cmp
xchg
mov
xor
mov
dec
notb
insl
xor
imul
and
fmuls
push
out
mov
fsubs
data16
push
adc
punpckhwd
sub
jne
sbb
dec
inc
push
or
bound
add
aam
mov
fdivs
or
int
and
pop
mov
jecxz
scas
or
inc
jb
cwtl
cmp
xchg
or
pop
ret
cmp
cmp
dec
push
imul
fs
mov
and
negb
inc
inc
add
mov
jae
adc
scas
rorb
xchg
jge
mov
movsl
fildl
outsl
xor
jae
aaa
push
xlat
xchg
push
test
xor
adc
jae
jnp
mov
addr16
jo
sub
dec
mov
inc
xchg
adc
idiv
ljmp
cvtps2pi
test
jb
add
sbb
inc
add
dec
jo
sbb
imul
pusha
mov
loopne
bound
rclb
sbb
popa
jbe
outsb
add
push
repz
xor
test
popa
jns
mov
ss
insl
inc
push
insl
test
add
or
xchg
adc
stos
xchg
out
push
call
dec
das
jbe
or
inc
outsb
lahf
int
les
call
arpl
sub
xchg
sub
and
xor
jbe
cmp
outsb
inc
imul
clc
je
add
imul
pop
or
bound
fiadds
dec
fildl
mov
xchg
add
adc
adc
jg
jo
pop
rol
inc
jae
inc
movsb
push
or
or
test
jo
bound
or
flds
adc
sbb
arpl
in
insb
push
inc
scas
xchg
or
xchg
push
push
inc
insl
shll
outsl
dec
cltd
jnp
fwait
jno
inc
dec
mov
pop
lea
jae
inc
lods
xchg
test
mov
inc
push
xchg
push
cmp
push
jp
sub
sub
xor
jns
js
add
fsubs
daa
aas
inc
lds
fisubrl
imul
mov
shr
sbbb
int
cmp
repz
jmp
jno
les
dec
sbb
loop
adc
push
test
or
sbb
imul
js
push
inc
pop
xchg
mov
or
imul
sbb
sbb
lds
inc
dec
pushf
clc
xor
push
popa
test
xchg
cmp
cmp
insl
lods
inc
jmp
cmp
inc
aaa
or
rolb
inc
adc
outsl
pop
cld
add
outsb
jbe
and
pop
jmp
inc
mov
enter
or
xchg
inc
pop
push
inc
lods
mov
in
adc
stos
xchg
pop
imul
btr
je
jne
in
fsubs
mov
jns
das
fdivs
adc
add
sub
mov
out
ja
push
popw
fucom
imul
clc
dec
imul
shrb
push
dec
sbb
xchg
outsb
jl
outsb
stc
test
pop
insb
xor
sbb
jp
mov
push
dec
jae
jns
fwait
stos
stos
jo
cmp
scas
gs
inc
imul
push
pop
fwait
dec
lods
or
ja
fs
inc
clc
rorl
pop
jp
mov
sarl
lcall
pop
sahf
imul
test
adc
cmpsl
inc
jne
data16
push
and
pop
int
icebp
xchg
xchg
push
ss
jne
cltd
cmp
stc
je
jae
mov
stos
loop
rorl
add
add
mov
add
adc
push
mov
int
fs
add
adc
xchg
xor
adc
add
ftst
adc
shr
add
sub
lret
pop
mov
push
add
shlb
mov
nop
jg
pop
add
insb
add
frstor
je
fldlg2
int
pop
jo
add
inc
loope
and
mov
pop
sbb
inc
add
xor
jae
es
cmp
adc
xchg
rorb
or
ja
jmp
dec
aam
add
clc
notl
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
