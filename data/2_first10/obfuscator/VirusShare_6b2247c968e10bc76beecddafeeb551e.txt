pushf
int
in
mov
push
sahf
cmp
or
mov
lds
stc
sub
stc
std
jne
mov
xchg
xchg
xorb
jmp
mov
nop
or
pop
fnstcw
sahf
xor
test
lcall
adc
cltd
stc
lret
into
jbe
leave
out
into
inc
lea
xchg
or
pusha
pop
xor
xor
shrb
ljmp
out
and
sbb
and
lods
cli
sbb
outsl
sbb
lea
mov
insl
pop
ljmp
fmull
mov
mov
xchg
in
add
mov
pop
repnz
xor
imul
pop
xchg
ret
mov
mov
xchg
lret
outsb
adc
shll
mov
les
mov
mov
cmp
stos
jo
cli
xchg
pop
sbb
movsb
cmpsb
ss
mov
cs
aad
push
rcrl
ret
imul
adc
cmpsb
fstps
lret
push
out
clc
test
xorb
fmuls
push
cmp
fcom
fistl
call
jo
lods
call
loope
in
jg
into
dec
adc
andb
in
stos
jge
sbb
mov
push
jae
in
data16
mov
dec
and
in
adc
lcall
icebp
mov
and
cwtl
sbb
mov
cmpsb
pushf
or
sub
push
sbb
push
dec
rcl
ja
int3
jmp
lret
leave
sub
rcrb
cld
xchg
sbb
test
jo
inc
mov
jmp
and
out
cmp
stc
jmp
jns
pop
add
lods
rep
fldcw
cmp
or
adc
in
jnp
repnz
sub
cmp
cltd
and
or
outsl
add
jg
push
xchg
out
repz
stos
adc
or
notb
into
mov
pusha
cmpsl
mov
mov
sub
cmpsl
mov
adc
cs
sti
pop
adc
inc
divb
jg
jno
imul
and
xchg
inc
daa
rcrl
cli
pop
es
mov
ffree
shrl
jle
pop
sti
or
fmuls
and
xchg
stos
movsb
xor
ja
repnz
push
je
mov
push
jae
sbb
insl
scas
push
push
mov
jecxz
pop
pusha
shll
mov
imul
mov
movsl
pop
add
in
push
jp
hlt
xor
cmp
andl
lea
push
cmp
mov
push
shl
inc
cmp
rclb
mov
je
adc
test
jle
mov
ss
insb
shlb
sub
mov
xchg
lods
dec
pop
sbb
xor
mov
int
inc
sub
hlt
mov
lret
adc
mov
dec
loope
pop
fbstp
test
jmp
lret
stos
fldl
inc
jecxz
pop
sub
and
data16
mov
cld
push
push
mov
xor
es
mov
fisubrs
fdivr
sub
in
sbb
sub
lret
cwtl
in
sbb
outsb
sbb
leave
mov
and
into
scas
fisubl
add
loop
pushf
dec
inc
out
add
xchg
ficoms
cmp
push
push
dec
cmp
out
int
xchg
xlat
mov
clc
gs
push
test
adc
push
mov
sahf
xlat
out
in
jb
cmc
ret
push
pop
xchg
pop
mov
je
add
out
int
and
mov
int
add
cs
insb
xlat
dec
cs
xchg
andb
pop
xor
scas
sub
add
dec
stos
lods
mov
jmp
fidivl
cmp
xor
mov
sub
push
or
out
test
mov
add
enter
mov
aas
mov
jp
dec
mov
popa
sub
jg
dec
push
mov
lret
or
inc
daa
leave
cmc
adc
inc
xor
pushf
inc
sbb
push
pushl
xor
or
es
sub
int
jecxz
leave
jo
movsb
movb
xor
add
xchg
xchg
mov
pop
or
add
ret
lret
in
pop
notl
sub
dec
mov
add
aas
add
outsl
jbe
in
dec
mov
inc
xchg
pop
cmp
xchg
inc
mov
fwait
or
iret
and
mov
xor
fists
ficompl
sub
enter
aam
mov
sbb
sub
sbb
movsl
push
sub
lcall
stos
lock
jo
jo
insl
out
adc
fidivrl
sbb
testl
sub
pop
xor
lcall
adc
xchg
int3
in
insl
movsb
cs
push
icebp
andb
sarb
sbb
jmp
push
and
lea
out
hlt
and
ss
adc
dec
and
pop
hlt
lock
mull
or
fistpll
nop
push
push
push
hlt
add
or
cmp
and
mov
dec
inc
sub
stos
or
lea
imul
loop
dec
test
ja
jns
rorl
jns
fisubs
sbb
jg
jge
and
js
mov
cs
insb
adc
iret
loop
addr16
jnp
arpl
roll
mov
ljmp
lret
pop
mov
out
dec
hlt
lahf
jns
dec
pop
das
rolb
pop
rorl
mov
inc
xlat
int3
add
adc
cmp
iret
pop
xchg
iret
dec
inc
pop
mov
dec
xchg
insb
pop
sbb
mov
adc
aam
push
mov
js
xchg
push
bound
sub
adc
addr16
stc
inc
inc
adc
jmp
xchg
inc
out
push
ds
cmc
xchg
fsubrl
insl
mov
fistpll
sbb
sub
jb
outsb
out
mov
or
pop
sub
popl
mov
mov
out
and
outsl
filds
inc
dec
or
mov
sbb
cmp
stc
add
andl
jne
cmp
add
rolb
push
jmp
add
add
push
inc
add
pusha
add
add
inc
add
pusha
add
add
add
scas
cmp
add
adc
jb
xchg
scas
mov
out
neg
cmpb
mov
pop
test
inc
loopne
adc
xor
cli
out
sub
inc
or
pop
sub
xchg
repz
std
pushf
out
imul
lds
repnz
imul
jae
cltd
data16
jecxz
repnz
dec
cmp
push
insl
aas
in
jle
and
xchg
rep
cmp
mov
cmp
loop
xchg
mov
pop
pop
pop
data16
xchg
push
push
mov
in
insb
je
or
outsb
xor
movsl
arpl
addr16
or
add
out
inc
mov
out
inc
jge
mov
or
cmp
push
dec
xor
dec
daa
sub
fidivrs
xor
jno
push
dec
mov
lahf
bound
add
into
or
mov
shll
or
and
mov
xchg
in
sub
pop
cltd
cmp
pop
test
jnp
inc
int
cmp
fs
loop
xchg
in
pop
ss
add
test
cltd
into
xchg
imul
dec
js
fldenv
dec
push
or
dec
mov
scas
xchg
adc
push
lret
lret
rolb
daa
lods
mov
fildll
mov
sahf
add
add
shlb
jo
cmpsb
or
dec
and
mov
mov
and
cmp
test
inc
pushf
and
inc
fistpll
or
push
out
inc
cmp
sahf
pop
xchg
add
scas
scas
enter
xchg
push
mov
loopne
cmpsb
pop
push
adc
push
pusha
jno
cmc
sub
mov
fwait
or
jle
int
icebp
push
mov
imul
pop
subl
insl
stc
or
pop
rcrl
imul
pop
xor
shll
lock
decl
mov
xchg
ret
insl
xlat
js
jno
imul
sub
addr16
inc
ja
sar
mov
lret
mov
push
push
aam
mov
or
or
push
mov
dec
enter
mov
inc
rol
stc
in
or
ds
or
jns
ret
inc
jmp
jbe
add
mov
repz
les
les
in
and
lahf
std
adc
lods
mov
or
cmpsl
int
jmp
push
adc
stc
repnz
daa
scas
das
cmp
dec
add
jp
mov
pushf
in
sbb
mov
and
xlat
jg
mov
push
pop
xor
xchg
add
dec
adcb
adcb
fisttps
pop
into
dec
popf
movsl
push
jp
fwait
ds
in
fdivl
mov
add
mov
xlat
fs
mov
std
push
popa
add
pop
flds
inc
fsub
test
fisubs
fdiv
mov
and
dec
mov
fwait
int3
pop
dec
jno
xor
or
inc
out
mov
fisttps
out
sub
mov
mov
mov
aas
inc
lcall
jge
sbb
or
lods
mov
insl
jl
add
push
cs
cmp
mov
or
lret
pushf
push
mov
pop
popa
jle
lcall
add
or
or
or
jb
mov
leave
fs
pop
out
xchg
jecxz
inc
fdivrs
xchg
lods
aaa
nop
popf
xchg
add
jl
hlt
add
add
bswap
stc
pop
sbb
sarb
mov
add
inc
push
imul
es
pop
push
mov
adc
pop
stos
dec
add
aas
dec
adc
stos
stc
sahf
mov
adc
mov
lcall
scas
imul
fsub
clc
xorb
lcall
jbe
pop
lahf
sub
es
jbe
sub
sub
cmp
pushf
mov
jne
pop
pop
mov
pop
sub
hlt
jbe
jb
inc
hlt
lods
jb
adc
fidivrl
inc
jge
sbb
inc
push
add
lahf
push
out
sbb
sbb
or
mov
mov
push
in
sbbl
and
jg
mov
mov
sahf
iret
pop
pop
out
mov
repz
sti
movsb
inc
inc
pop
outsl
adcb
popa
lcall
jno
imul
scas
iret
int3
in
stos
push
dec
add
jg
stos
ret
outsl
pop
or
outsl
xlat
xor
div
rclb
fmuls
pop
jp
sub
test
adc
test
add
inc
jg
push
dec
cwtl
repz
mov
sarl
sub
sub
cld
xchg
xor
lret
xchg
jnp
fbstp
imul
or
pop
jbe
and
and
inc
lcall
dec
cltd
icebp
mov
leave
dec
jl
sarb
adc
imul
mov
mov
jecxz
cmp
xchg
push
adc
xor
xchg
loop
adc
test
lods
fstl
xchg
rclb
int
sub
cmp
mov
scas
out
mov
cli
or
sub
lods
out
cmp
pop
push
test
push
and
stc
fs
sub
sahf
inc
jo
xorb
cmc
popf
xchg
pushf
enter
lret
inc
and
cmp
mov
or
aas
ds
xchg
xor
sbb
or
xchg
push
push
cmp
pop
push
and
dec
lahf
push
iret
mov
dec
dec
cmpsb
std
dec
cmp
cmp
adc
mov
ljmp
test
call
stos
es
add
clc
mov
and
or
push
imul
shl
cmp
and
sub
sub
fsubrl
xor
xchg
jb
or
xor
xchg
mov
adc
cltd
stos
stos
repnz
sub
or
popa
decb
or
xchg
das
ret
pop
aam
sub
dec
cmpsl
pop
aaa
dec
sub
pop
cld
cltd
lods
xchg
int
xorl
add
dec
ljmp
mov
insb
mov
pop
clc
add
xor
push
das
test
xor
add
je
add
add
add
inc
add
inc
add
pop
xor
dec
cld
test
cmp
dec
add
and
cmp
sbb
mov
xor
add
xchg
cmp
add
add
add
push
mov
push
mov
push
push
repz
mov
mov
push
movsl
xchg
push
cmp
jbe
jmp
and
xor
mov
lcall
repz
fdivrs
mov
pop
mov
jne
subb
outsb
sub
or
mov
dec
and
decb
test
pop
loop
mov
ljmp
pop
push
ds
mov
mov
jmp
mov
cmp
xchg
pop
jge
sbbl
dec
jp
les
fstpl
inc
push
adc
idivb
enter
push
arpl
push
mov
ret
test
sbb
mov
xor
inc
in
adc
mov
push
int3
push
mov
mov
push
push
adc
push
pop
jno
mov
lret
outsb
outsb
negl
divl
in
sti
jns
mov
es
int3
ss
aam
imul
xchg
daa
push
pop
test
repnz
sbbw
xor
mov
jmp
aaa
mov
loop
mov
add
call
fidivs
mov
xor
data16
lods
xchg
mov
ss
cmp
push
pop
push
sahf
sub
data16
jno
xor
inc
jmp
rcrb
call
cmc
hlt
and
xchg
jmp
dec
into
dec
inc
lods
or
aam
fsubrs
mov
out
xor
lods
icebp
ret
cmpsb
jp
mov
flds
fs
int3
mov
mov
mov
mov
xor
cld
arpl
sub
leave
pushf
outsl
fwait
outsb
adc
hlt
insb
shlb
mov
and
out
lcall
inc
imul
ds
ret
pop
jp
lahf
mov
mov
add
dec
push
cmpsl
mov
cwtl
ret
and
loopne
inc
pop
leave
cmp
jns
inc
stos
and
add
jl
adc
and
pop
lods
jns
and
call
pop
movsl
jns
aam
add
aam
adc
insb
sahf
subb
dec
jo
add
pop
fsts
fmuls
js
ja
adc
and
cmp
lods
enter
gs
stc
cmpsb
ret
aaa
test
int
rcll
xchg
xchg
fisubrl
or
xchg
data16
push
jne
pop
sti
jg
mov
jne
outsl
notl
cmp
fwait
push
fwait
in
stos
sbb
sbb
sbb
jbe
or
mov
loop
inc
push
inc
out
jae
stos
gs
pop
and
xor
ja
das
dec
cld
xor
enter
imulb
cmp
jno
adc
insb
dec
xchg
idiv
lret
test
lods
mov
cmp
ret
mov
jmp
stc
cmp
add
pop
movsl
out
incl
out
fdiv
add
or
xor
cmp
inc
jecxz
stos
shll
into
nop
inc
jno
ds
out
xchg
ja
mov
pop
inc
mov
into
imul
mov
lahf
xchg
pop
jb
pop
or
mov
cmp
fcompl
mov
out
jno
mov
push
pop
aaa
in
push
ds
insl
sub
loopne
ljmp
ljmp
loop
aad
sbb
out
pop
popa
mov
fcoms
adc
cli
fucomi
popa
call
jecxz
loopne
cmpsl
out
jmp
imul
out
mov
loopne
call
stos
fucomi
popa
lods
scas
fucomi
mov
sub
ljmp
negb
pop
inc
fs
jl
dec
arpl
roll
dec
int
out
fisttpl
or
test
lcall
das
rol
es
cmpsl
pop
lds
movsb
jbe
mov
cmpsl
stos
adc
fisttpll
pop
push
aaa
xchg
pop
mov
mulb
mov
bound
leave
inc
cmp
and
xchg
sbb
xor
int3
push
lock
sub
hlt
fcompl
xor
push
jle
cmp
int
pop
inc
ss
or
int3
shll
stc
adc
xor
lret
xor
repnz
and
bound
lock
mov
mov
add
or
data16
enter
jle
push
arpl
nop
out
popa
inc
cli
sti
xchg
icebp
inc
push
daa
push
in
out
xchg
and
aaa
xor
sbbb
arpl
stos
pushf
sub
stc
or
push
push
xchg
notl
repz
shufps
or
jecxz
sarb
cmp
jns
call
xchg
orb
sub
test
fstpt
test
mov
test
lcall
ret
scas
lahf
lret
fchs
mov
mov
xchg
rcll
push
xchg
add
xorl
mov
out
mov
rorb
pop
mov
xchg
push
pop
mov
xor
mov
mov
pop
or
cmp
arpl
and
mov
sbb
push
lret
outsb
mov
repnz
xor
shrb
ds
mov
mov
fwait
data16
ds
cs
add
jmp
loop
mov
mov
ljmp
mov
adc
nop
xchg
ret
arpl
sbb
inc
xor
cwtl
sbb
adc
rep
sub
repnz
add
dec
ret
loope
mov
xor
insl
add
dec
dec
dec
or
insl
sbb
lock
scas
scas
ficoms
push
mov
ja
fwait
inc
es
movsl
faddl
es
adc
imul
jg
sub
lret
jae
loop
push
loopne
fsubs
dec
mov
pop
loopne
cltd
outsb
pop
popf
xor
int
jecxz
ret
inc
fiaddl
sbb
cmp
xchg
test
cmpsb
jl
arpl
pop
xor
lcall
mov
mov
loopne
jb
stos
les
adc
movsb
mov
lods
or
je
daa
pushl
pextrw
lock
aad
dec
in
test
ss
sbb
testb
mov
movsl
out
cwtl
imul
add
into
sub
insl
sarl
fwait
sub
mov
out
xchg
movsl
and
lret
mov
lods
push
lods
repnz
cwtl
adc
push
cmpsb
fsubs
inc
inc
mov
mov
jp
iret
loope
xchg
mov
aam
cmc
fnstcw
inc
and
push
sbb
shl
stos
scas
adc
xor
cmpsl
xorb
xchg
lret
movntq
dec
fisttpl
and
mov
ror
lahf
inc
insb
aas
jae
pop
mov
or
enter
or
inc
jg
sbb
mov
std
pop
xchg
adcl
dec
dec
sub
int3
push
cmpsb
mov
sub
sbb
mov
stc
and
imul
je
es
fidivrl
push
scas
ljmp
dec
fstpt
mov
push
rep
bnd
adc
pop
call
add
inc
es
je
ljmp
sub
sub
pop
pusha
mov
popl
stos
stos
icebp
jge
mov
adc
push
or
shlb
mov
ret
xchg
stc
cli
test
jl
mov
jmp
les
mov
cmp
test
push
punpckhbw
dec
lahf
sub
outsl
out
cli
icebp
or
xchg
or
cmp
pop
jle,pt
mov
and
mov
daa
add
add
popf
fdivrs
faddl
xchg
pop
ret
loope
ljmp
test
adc
inc
ss
ja
and
fists
sahf
sub
lds
sub
in
cmp
jo
imulb
pop
and
cs
nopl
mov
pop
and
ljmp
pop
popa
repnz
imul
pop
hlt
mov
cwtl
cmc
loop
push
data16
cmp
pop
mov
cmpsl
mov
sub
adc
xlat
push
mov
jmp
cwtl
jle
and
in
shr
in
in
pop
fisttps
pop
jp
imul
adc
push
xchg
int3
mov
sbb
jnp
test
pop
cmpsl
loope
xor
xor
out
inc
inc
pusha
lds
or
pusha
mov
lcall
xchg
sti
mov
lods
aaa
lcall
sbb
xchg
fcoml
adc
lds
stos
and
push
dec
lods
xchg
mov
inc
outsl
ret
jmp
mov
je
fsqrt
mov
cmp
out
leave
rol
movl
out
lods
xchg
inc
cli
pop
push
or
cld
pop
movl
popf
inc
jmp
lahf
adc
fidivs
push
adc
loopne
dec
lret
repz
das
jb
push
outsb
cltd
jbe
xchg
sbbl
stos
xor
dec
dec
cld
jecxz
sbb
nop
jae
mov
or
dec
jno
inc
shrl
inc
cld
mov
xchg
sahf
lods
cmp
or
pushf
cli
dec
bound
test
mov
and
adc
dec
popf
fsts
fldt
das
pop
sub
push
pop
ret
xchg
cmp
push
add
xchg
or
and
ret
pop
and
out
inc
mov
imul
sbb
jno
lcall
cltd
inc
popa
aaa
enter
xor
mov
push
jmp
mov
addr16
ja
xchg
push
in
lcall
mov
jecxz
jns
stc
inc
into
fcompl
in
xchg
mov
mov
cmpsb
xchg
mov
mov
into
xchg
inc
ss
mov
or
fs
stc
aaa
jb
fadd
pop
mov
sub
jns
xchg
out
xor
xchg
pop
pop
pop
mov
fldl
inc
das
jmp
test
ss
mov
push
enter
lret
dec
std
loope
or
ret
or
mov
lock
push
mov
xor
mov
or
inc
test
push
lret
add
lahf
and
fs
mov
jns
xor
pop
sbb
ret
mov
jg
movb
or
shrb
xlat
sbb
repz
or
aaa
arpl
dec
and
inc
sub
xor
cmp
push
cltd
xor
xor
mov
nop
mov
xchg
adcl
jl
pop
shll
add
cltd
mov
or
sbbb
jecxz
mov
cmp
or
jmp
jo
out
lcall
mov
mov
repz
mov
sbb
pushf
mov
jl
push
mov
add
into
loope
adc
pop
cmc
or
inc
imul
ss
push
mov
shlb
or
or
cli
jo
outsl
sti
enter
inc
inc
push
lret
inc
xchg
mov
pop
scas
repnz
gs
jle
movsl
sbb
mov
push
loopne
cmp
repz
popf
mov
icebp
lea
iret
mov
inc
xor
push
dec
ret
xor
cltd
xchg
mov
sbb
out
movl
in
mov
mov
movzbl
xor
mov
inc
dec
test
jne
popa
leave
ret
add
add
add
add
or
scas
xor
imul
xchg
aaa
jle
cmp
fnstenv
sub
rcr
cmp
test
xchg
push
pop
subb
xor
push
mov
incl
xchg
mov
lahf
arpl
fmulp
leave
push
jb
xlat
lret
push
arpl
mov
xor
out
push
xchg
ljmp
sbb
push
insl
cmpsl
adc
clc
nop
leave
pop
cmp
push
int3
shrb
sub
shll
push
dec
loope
dec
rclb
mov
or
sahf
movsl
pop
repnz
icebp
bound
and
jo
mov
inc
pop
dec
scas
push
jne
cmp
scas
mov
mov
or
mov
jle
sbb
jge
xorb
adc
xchg
or
push
imul
stc
fadds
dec
pop
ds
fldl2t
cmc
mov
aas
mov
pusha
out
xchg
pushf
jae
mov
cld
jns
inc
pop
inc
ljmp
repnz
outsl
mov
mov
dec
inc
lock
inc
leave
adc
int3
mov
mov
dec
jmp
cmpsl
xor
xor
xchg
pusha
loopne
js
push
jl
adc
inc
mov
fwait
daa
push
divl
lcall
pop
sub
das
das
push
loope
cld
mov
mov
xchg
lods
mov
test
pop
out
roll
loop
jne
ret
clc
call
push
movsb
stos
inc
or
sahf
addr16
stos
cmpsl
fisttpl
push
xchg
fldt
and
out
int
push
xor
adc
dec
push
sbb
aas
mov
adc
or
jae
pshufw
pop
enter
fldenv
jbe
lret
cwtl
xlat
loope
mov
sbb
outsl
push
outsl
sbb
loope
sti
lahf
jbe
test
jne
cwtl
or
clc
push
into
aad
enter
nop
ds
out
pop
pop
sub
xlat
fdivr
add
pusha
sbb
pop
mov
or
enter
mov
and
inc
out
push
xorb
jb
das
lcall
xchg
sub
jnp
pusha
dec
sub
movsl
lods
in
xor
jne
pop
mov
bound
shl
cmp
push
loop
push
inc
fdiv
into
cmc
in
sbb
sbb
vmovdqu
repz
leave
sbb
xchg
dec
ss
gs
or
and
pop
out
pop
lahf
mov
call
ja
adc
mov
or
mov
or
jne
jp
or
push
shlb
mov
inc
test
orl
inc
les
xor
movsl
movsl
and
mov
mov
mov
cld
mov
mov
mov
and
aad
aad
and
adc
or
jb
arpl
and
insl
decb
mov
push
test
push
push
or
inc
lods
daa
cwtl
jo
push
pop
push
mov
es
jns
movswl
mov
lods
clc
inc
dec
pop
xor
pop
cmp
or
rorb
out
mov
mov
iret
lret
out
mov
aam
and
inc
jg
shl
pop
xor
fs
inc
push
cli
xor
xchg
cmc
dec
pop
xchg
jmp
into
ljmp
and
sub
movsl
sbb
fsubl
inc
xchg
std
dec
movsb
jno
add
out
and
fbld
outsb
or
cmp
aaa
add
mov
push
cmp
mov
dec
dec
push
inc
and
icebp
lret
push
push
cmp
adc
mov
stos
pop
inc
cmpsl
orb
fstl
mov
jl
das
ror
mov
sub
jns
jg
or
mov
orb
in
push
push
and
in
lcall
shl
outsb
xor
fstl
mov
test
xor
pop
or
sahf
mov
sarb
in
outsl
dec
stos
sarb
lahf
inc
clc
sbb
xor
push
arpl
push
sub
add
xor
pop
outsb
jne
insb
add
pop
ds
adc
push
movsl
adc
mov
and
dec
sub
shr
jecxz
dec
nop
je
xor
sub
pop
fmul
aas
pop
stc
mov
je
adc
stc
call
push
cltd
cmp
insl
push
sub
lret
insb
fldl
aas
cmp
pop
int3
nop
dec
mov
add
shlb
xchg
test
adc
xchg
test
out
adc
stc
pop
scas
inc
aaa
mov
int3
push
jl
aam
mov
adc
push
out
jp
aad
sub
out
sub
xor
push
or
cmp
or
xchg
pop
sbb
xchg
mov
daa
mov
inc
push
xchg
mov
out
sbb
sbb
aaa
jp
sub
xor
ds
arpl
mov
push
data16
inc
addl
mov
cmp
add
cmp
adc
xor
pushl
sbb
filds
loope
out
lret
clc
push
xor
pop
mov
cmp
or
cmc
mov
pop
adc
and
sub
lret
shlb
sbbb
push
mov
jns
ficoml
fldcw
out
sub
mov
xchg
cmp
xchg
stos
lret
inc
jb
aaa
in
push
mov
lock
das
decb
sub
in
fcompl
int3
std
jnp
aas
add
mov
daa
cltd
rcrb
jp
xchg
and
jg
jg
xchg
iret
inc
push
add
mov
mov
inc
add
xchg
xchg
push
out
or
mov
call
mov
or
sbb
jbe
loop
mov
add
add
pop
dec
adc
scas
cmp
imul
push
mov
dec
lahf
push
and
adc
cs
shlb
ja
pop
push
mov
out
rcll
inc
jp
xor
lods
mov
sbb
and
push
shll
sub
les
test
pop
lcall
xchg
popa
out
loop
and
inc
xor
insl
jbe
mov
jb
scas
jmp
push
lods
pop
push
insb
sbb
cmp
jmp
xor
loopne
jne
lock
lods
mov
lea
imul
push
nop
cmp
jecxz
pop
dec
sub
jo
das
in
pop
and
or
push
imul
jp
notb
mov
xor
xchg
bound
int
jg
out
jl
inc
or
mov
and
pop
inc
mov
insl
int3
mov
cmp
aaa
inc
cmp
test
pop
arpl
sbb
xchg
sarl
adc
cmpsb
dec
mov
sub
sbb
fistl
inc
test
insl
jg
mov
aam
push
sbb
ror
movb
xchg
mov
fdivl
sub
cmp
cmp
pop
ds
fcompl
jl
pushl
push
inc
cmpsb
into
dec
mov
in
inc
add
lods
call
aam
and
push
inc
cmp
cltd
pop
or
loop
call
test
push
das
js
jnp
adc
xchg
imul
sub
ret
dec
adc
rorl
cmpsb
movsl
cmp
inc
pop
mov
aam
or
jle
jb
push
es
pop
lcall
ficompl
fsubl
mov
dec
xchg
aas
cltd
xlat
test
mov
lret
pop
aam
push
xchg
loop
imul
call
sbb
cmpsb
shll
add
push
xchg
shrb
mov
mov
mov
daa
stos
idivb
xlat
pop
push
add
enter
fwait
and
test
mov
adc
es
mov
cli
aaa
xor
sahf
push
adc
mov
ss
push
push
enter
scas
lahf
mov
rolb
loope
out
jecxz
dec
sbb
add
lods
lods
mov
insb
das
mov
lock
inc
mov
jge
cmp
jle
out
lds
mov
aad
pop
xchg
in
mov
mov
jl
xor
jb
pop
xchg
jecxz
fmuls
xchg
xor
aaa
inc
push
js
ret
gs
sahf
pop
sub
movsb
mov
lods
aas
add
xor
push
in
dec
lahf
push
adc
and
jb
add
dec
cmp
inc
mov
xor
or
rcrb
js
or
mov
jo
leave
or
lods
cmp
faddp
lret
inc
rol
fisubs
out
pop
idivb
fs
xchg
or
and
inc
dec
or
ret
cli
sahf
lret
iret
push
out
push
mov
pop
mov
mov
into
test
dec
das
lds
lret
andb
rolb
jmp
dec
and
pop
aaa
pop
jg
shll
lds
imulb
lea
lock
jo
in
in
imul
add
repz
ljmp
into
cmc
push
inc
rolb
pop
adc
pop
add
or
jbe
push
fimuls
and
enter
xor
xchg
pusha
fmull
out
test
int
pop
add
pop
fdiv
shrb
mov
jge
add
adc
pop
pop
jg
xor
fsubrs
push
and
movb
mov
cld
push
mov
xor
imul
cld
repz
in
cmpb
out
test
and
add
icebp
repnz
dec
mov
add
mov
jo
xchg
lea
xorl
push
or
scas
push
cmp
test
push
cs
insl
adc
sbb
pop
xchg
cmp
aad
fstpl
push
push
sub
sub
mov
pop
nop
pop
cmp
inc
out
jnp
jns
sbb
pusha
pop
push
insl
mov
sub
fcmove
test
les
dec
push
jae
lcall
cmp
jb
xchg
hlt
pop
mull
cmp
jae
arpl
mov
push
sbb
and
stc
iret
lret
pop
ret
mov
ds
mov
and
lock
mov
jge
sbb
and
push
lods
jns
dec
jmp
nop
push
subl
mov
pop
dec
hlt
sbb
mov
mov
mov
jmp
push
sub
and
loopne
pop
imul
push
lds
cmp
jno
pop
aad
call
js
shlb
cmp
lock
mov
ret
xor
rorb
jecxz
jge
es
aaa
jbe
cltd
test
xor
jmp
imul
mov
xor
adc
mov
push
lahf
roll
and
jae
push
aas
adc
xchg
data16
push
lods
cmp
mov
jecxz
rorb
xchg
icebp
dec
pusha
jge
mov
lds
mov
popf
sti
outsb
adc
pushf
mov
aas
push
add
test
loop
sub
push
aaa
stos
nop
cmp
push
jns
adc
cmp
je
jmp
sahf
in
push
sub
pop
add
test
out
aad
mov
pop
push
inc
arpl
hlt
xchg
fistpll
xor
xchg
jge
inc
mov
cmpsb
inc
sub
jno
xchg
xchg
clc
sub
repz
jmp
add
mov
stos
rcrl
fldenv
loop
sub
lods
mov
push
push
bound
negb
push
in
jno
and
mov
test
mov
xor
jmp
add
loop
in
cs
xor
ret
mov
lea
mov
or
cmpb
inc
adc
xchg
mov
inc
pop
stos
jge
lahf
outsl
aas
mov
inc
cmc
push
mov
sbb
mov
mov
mov
aam
inc
addb
adc
lds
daa
nop
aam
in
hlt
or
jg
jecxz
sarb
mov
ljmp
push
mov
insl
je
jecxz
pop
dec
push
ret
frstor
ror
jbe
jle
lock
mov
popf
add
cwtl
adc
inc
lods
pop
push
xchg
lcall
jg
ja
mov
clc
cltd
fmulp
cmp
fldenv
mov
xchg
les
xor
xor
dec
push
dec
mov
inc
movb
jle
fldenv
push
das
scas
js
cmp
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
sub
pusha
push
mov
add
add
xor
add
add
pop
popa
leave
ret
add
add
mov
add
xchg
mov
gs
mov
dec
dec
jno
adc
fcomps
or
mov
shl
cs
sahf
fwait
and
out
fisttps
inc
movl
pop
push
jmp
xchg
mov
pop
sub
stos
add
pop
mov
stc
mov
xchg
mov
scas
xchg
jmp
jge
mov
nop
fs
xchg
or
inc
jo
sbb
or
or
dec
adc
xor
out
rcrb
jo
and
add
mov
lret
popf
xchg
or
shrl
jns
negl
mov
push
movsl
out
or
xchg
aaa
mov
shr
and
jno
xchg
repnz
inc
xchg
les
into
xlat
icebp
pop
lock
xor
mov
aas
cmp
cld
pop
dec
jmp
icebp
inc
and
sbb
rol
mov
aas
mov
mov
push
or
push
pop
sbbl
sti
mov
or
stc
and
add
push
insl
mov
xchg
iret
jno
adc
mov
cld
in
sbb
test
xchg
sahf
mov
cs
shlb
lcall
cmp
cltd
sub
call
cmpl
dec
add
addr16
out
aad
mov
sbbb
pop
ljmp
out
je
mov
mov
das
jp
xor
cmpsl
fsubl
sbb
popl
sahf
ret
adc
mov
push
stos
std
aas
fisttpll
xor
orl
jb
sarb
sbb
rcr
push
xchg
inc
dec
push
cmpsl
in
imul
loop
shlb
insl
faddl
xor
loopne
jge
sub
mov
push
push
cmp
arpl
jno
aas
sub
xor
sbb
pop
rolb
sub
loopne
push
mov
mov
add
mov
movsb
mov
or
test
test
out
out
add
or
mov
jnp
in
lret
cmp
mov
shlb
jns
mov
sbb
mov
xlat
mov
xlat
sbb
sub
mov
mov
mov
xchg
scas
sti
jmp
xor
pop
pop
cmp
cmovns
loopne
cs
ja
subl
or
push
into
mov
out
or
dec
out
and
jp
mov
insb
dec
popf
mov
scas
dec
push
mov
mov
adc
add
in
out
daa
or
clc
imul
mov
cmpsl
dec
xchg
adc
mov
rorb
cli
sbb
pop
outsl
pop
sbb
mov
cltd
mov
dec
mov
push
gs
addr16
repnz
and
dec
cmpl
mov
mov
lea
movsl
inc
cli
push
mov
dec
jge
test
addr16
push
movsl
mov
xchg
lcall
addr16
call
dec
mov
or
jle
mov
or
cmp
int3
jnp
mov
pop
xor
jns
push
cmp
je
pop
jns
dec
cli
xchg
sub
in
je
mov
in
jg
sub
pushf
dec
popa
pop
fadd
xlat
decb
xlat
iret
dec
inc
fildl
outsl
and
cwtl
outsb
pop
sahf
mov
dec
mov
testb
sbb
jg
out
mov
xchg
fistpl
iret
nop
add
mov
push
dec
xor
pop
adc
faddl
sub
mov
repnz
dec
notb
xor
mov
pusha
ret
mov
sbb
and
add
lea
xor
mov
imul
mov
hlt
dec
frstor
and
aas
mov
int
add
sbb
in
faddl
ss
cmp
sub
out
outsb
ficompl
xor
movsb
in
push
daa
pop
lods
loopne
mov
add
dec
lahf
je
jne
push
in
inc
push
in
les
sbbl
iret
or
arpl
pop
in
lods
cmp
xchg
les
ffreep
ja
dec
test
out
sub
inc
mov
cmp
pop
ret
hlt
jmp
loope
das
shrb
in
aas
or
in
or
push
xor
and
sub
and
push
pop
aas
inc
pop
mov
pushf
push
pop
push
inc
xchg
adc
mov
dec
cmpsb
and
pop
xchg
jb,pn
add
mov
push
pop
xor
add
xchg
push
mov
pop
aaa
jns
loopne
mov
imul
repz
or
pop
or
pop
adc
js
test
stos
mov
fwait
outsl
mov
sahf
in
rclb
add
adc
subb
jl
mov
add
pop
jle
cmp
rcll
mov
das
jae
cltd
cltd
cmpsb
lods
ja
stos
data16
mov
test
lcall
pop
and
inc
push
jae
sub
rclb
imul
sub
add
mov
mov
cmp
jno
push
push
rorb
out
sti
cmovg
aad
mov
popf
xchg
test
rcll
mov
jne
test
inc
shll
pop
cmpsb
or
inc
sbb
xor
in
int
adc
repz
iret
adcb
movsb
dec
sub
add
xchg
dec
inc
lcall
enter
repz
repnz
shlb
out
negb
push
cli
ds
dec
and
push
jo
xor
inc
cmp
mov
add
add
and
loop
jnp
lret
negl
xor
sub
aam
mov
fs
jb
mov
mov
mov
mov
jmp
fdivrs
inc
pop
xor
stos
cmp
nop
sub
cld
loopne
stos
fwait
imul
xchg
popf
add
ja
sahf
repz
cmp
push
pop
in
popf
rolb
and
pop
push
sbb
lret
lods
dec
rcll
iret
lcall
jge
lods
icebp
xchg
or
mov
xor
imul
xlat
test
add
movsl
jp
stos
xlat
pop
jo
xor
sub
pop
mov
mov
mov
leave
dec
cmc
jecxz
mov
mov
inc
in
push
pop
mov
mov
gs
sbb
lods
jbe
popf
push
std
xchg
adc
dec
or
loop
jns
add
faddl
sti
mov
jle
clc
cmp
enter
out
xchg
roll
and
mov
cltd
cmp
and
les
pop
add
rcrb
and
nop
loop
outsb
xor
sub
popa
adc
pop
js
in
sub
incl
push
mov
pop
lea
xor
mov
movsb
mov
mov
fisubrs
mov
cmp
dec
fldt
shr
gs
cltd
dec
and
push
insl
ja
cmpsb
xchg
daa
aad
sub
xlat
lock
iret
nop
dec
insb
inc
and
xchg
loope
rorl
jb
add
push
mov
outsb
repnz
mov
sub
mov
inc
scas
out
cmp
enter
cmp
inc
jecxz
nop
inc
push
mov
pop
dec
in
fbstp
xor
sub
mov
mov
jnp
cmp
pop
rcrl
movsl
testl
xchg
mov
imul
ss
inc
pop
push
outsl
out
test
outsl
pop
mov
mov
jmp
push
lock
sbb
add
jle
cmc
into
xchg
inc
mov
add
mov
adc
push
stos
sti
fsts
or
jno
mov
mov
xchg
adcb
std
or
sahf
imul
pop
and
sbb
roll
and
mov
mov
ja
pushf
loope
jae
fsubl
fwait
popa
cmp
mov
out
cmp
fsubrl
mov
fs
sbb
sbbb
mov
test
in
aam
into
dec
aas
jns
sbb
mov
loopne
push
cmp
into
or
mov
imul
mov
enter
or
pop
shlb
ja
pusha
vshufpd
stos
movsl
push
inc
sbb
lret
pop
cmp
mov
insb
adc
mov
fmuls
sti
or
push
push
pusha
mov
hlt
mov
fdivl
push
and
lock
push
xchg
xchg
cmpsl
adc
inc
nop
push
cmp
div
shr
loop
push
xor
incb
cmpsb
sbb
fisubrl
fcmovnbe
push
cs
pop
cld
pminub
enter
loope
cld
data16
frstor
test
fwait
jle
lods
lods
xchg
dec
fsubrs
mov
pop
lret
in
push
bound
rcrl
mov
scas
les
sarb
cmpsl
xor
das
xchg
xorl
hlt
in
popf
int
mov
pop
xor
pop
and
insb
cmpsb
add
xchg
and
fdivl
inc
cmpsl
mov
jmp
orl
mov
mov
gs
and
call
fldcw
stos
jns
test
fcoml
mov
pop
sub
and
hlt
insb
mov
aas
jns
sbb
scas
xor
sbb
lcall
jmp
pop
js
sub
fcoms
out
lahf
add
outsb
add
adc
int3
jge
fcoms
dec
mov
jae
jp
mov
cmpsb
inc
stos
lock
lret
mov
mov
inc
cmp
aam
outsl
add
jge
std
into
data16
out
add
hlt
fcomps
ljmp
mov
out
xchg
push
jp
sbb
cmp
adcb
jae
or
negb
fcoms
pop
or
cld
sub
push
fnstsw
pop
in
jbe
popf
pushf
fdivrs
cmp
cmp
jbe
cmp
pop
adc
sbb
xor
push
je
int3
add
int
sbb
jne
push
pop
inc
jb
insl
enter
jecxz
js
jnp
push
push
dec
lret
cmp
aam
fstpl
pop
sbb
mov
fs
sub
shlb
xorb
push
mov
adc
test
adc
out
pop
lods
and
xor
push
mov
ficoms
hlt
scas
jecxz
int
xor
push
movsl
push
mulb
mov
les
pop
sub
nop
jnp
cmp
mov
cmp
pop
mov
mov
sub
xchg
sbb
in
or
add
int
add
lds
or
pop
mov
js
mov
jl
test
xor
mov
cmpsb
cmp
push
cs
xor
add
push
jp
pop
into
push
ret
out
dec
sbbb
bound
or
xchg
xor
adc
pop
fsubrs
insl
and
test
or
movb
push
scas
test
sahf
in
xor
pop
mov
or
mov
adc
cs
in
push
lret
sub
sbb
mov
dec
mov
cld
mov
xor
pmulhw
fcoml
divl
lock
adc
pusha
jbe
cmp
inc
pusha
scas
xor
jno
prefetchw
or
pusha
sub
scas
sbb
mov
lea
out
rorb
cli
xlat
mov
fcomps
popf
popa
xchg
popa
adc
pop
aas
adc
add
push
mov
test
cmp
in
sbb
roll
push
imul
or
adc
lcall
fmul
sbb
repnz
insb
imul
xor
pop
and
fsubrs
mov
inc
sbb
cmp
lds
shl
xor
or
mov
fimull
mov
outsb
mov
xlat
mov
mov
adc
cld
in
sub
sub
sbb
imul
fmull
lea
ss
and
fdivr
and
into
outsb
xchg
mov
insl
mov
lcall
stos
repnz
mov
sbb
xlat
imul
dec
sbb
cmp
stc
aam
adc
cmp
idivl
in
push
bound
mov
test
mov
push
sbb
or
lcall
inc
cld
lds
int3
and
subl
roll
pop
ljmp
in
xor
mov
pop
test
inc
in
mov
jno
mov
or
in
pop
lods
jne
dec
rcl
test
pusha
nop
incl
cmp
add
mov
pop
mov
xchg
ds
scas
imul
cld
push
stos
mov
inc
aas
mov
push
mov
mov
inc
sub
int
pop
rcl
test
arpl
mov
cmp
pop
cmp
adc
jmp
fldenv
mov
mov
test
popa
fnop
adc
jp
xor
adc
in
inc
mov
call
mov
jno
inc
ljmp
mov
fwait
jbe
cmpl
and
cwtl
dec
loop
dec
aaa
test
jbe
add
pop
mov
test
mov
sub
and
mov
cmp
adc
and
push
jno
aaa
jb
call
add
call
xchg
mov
adc
pop
jae
in
add
dec
add
insl
test
ret
add
xor
mov
inc
js
scas
movsl
jne
pop
sub
int3
xor
shl
xor
adc
or
fwait
out
repnz
test
mov
mov
sub
sub
mov
jl
int3
dec
mov
sub
sub
sahf
sbb
sbb
pop
and
cmc
mov
mov
js
and
stos
xlat
sub
mov
cmp
sub
sbb
mov
loopne
and
sub
aas
je
jno
int
sub
jo
mov
daa
fs
lods
mov
inc
cmpsl
jecxz
int
mov
leave
sbb
mov
pop
hlt
mov
dec
notb
movsl
repnz
call
sbb
clc
cmpsl
rorl
mov
lcall
and
mov
imul
sbb
out
cmp
mov
push
push
mov
subl
push
push
pop
mov
js
out
out
daa
cmp
jge
in
mov
sbb
les
aam
test
mov
sub
aad
pushf
push
jb
stc
cmc
repnz
scas
fsubrl
push
int3
ja
inc
or
xor
jmp
aas
inc
xchg
enter
pop
addl
sbb
adc
mov
add
sub
lods
push
cmp
jno
addl
test
jb
cmpsl
dec
fiaddl
sbb
cwtl
xor
test
lock
mov
bound
sub
idivl
pushf
imul
cmp
mov
mov
dec
inc
out
adcb
outsb
xchg
data16
fidivs
stos
jnp
insb
popa
xlat
nop
ja
notl
or
xchg
lods
pop
ret
mov
cwtl
pop
in
lret
add
mov
push
jnp
pop
in
and
xchg
and
mov
xorl
insl
push
inc
es
dec
addl
push
xor
mov
jnp
adc
add
fcoms
push
shll
xchg
out
cmp
mov
notl
lods
sbb
jp
in
jae
xchg
pop
les
mov
scas
mov
jle
out
inc
dec
filds
sub
rcr
xor
dec
or
bound
or
inc
mov
dec
dec
and
push
pushf
jne
sub
or
mov
daa
adc
sbb
inc
cli
cltd
mov
xchg
mov
into
and
hlt
mov
into
js
cmp
imul
decl
aas
fstpt
jle
notl
imul
ret
inc
frstor
fdivrs
sbb
mov
pushf
fcomip
add
mov
add
test
icebp
std
cmp
je
or
loope
jne
stos
call
mov
int
jge
adc
popf
push
push
adc
mov
loopne
or
sbb
sahf
sub
lahf
mov
shll
dec
fdiv
adc
jae
jnp
push
ficompl
fisubl
mov
mov
bound
push
or
aaa
int
ljmp
into
jge
mov
loope
mull
sub
adc
je
js
les
mov
fidivs
pop
jle
sub
outsb
pushf
fsubs
ret
int3
arpl
insl
addb
ret
jo
aad
push
shl
xchg
rorl
sub
mov
add
leave
popa
mov
test
ret
sub
mov
mov
dec
or
test
xor
imul
dec
icebp
sub
or
stc
xchg
cwtl
loope
inc
rcll
inc
xchg
sti
movsl
dec
dec
mov
test
adc
pop
or
push
or
inc
mov
sarl
sarb
adc
dec
sub
cwtl
jbe
or
inc
stc
packuswb
push
pop
test
js
inc
lods
cs
incl
pop
mov
lret
imul
cmpsb
in
cmp
ret
cmp
jl
xor
add
xchg
pop
pushf
push
pop
lds
mov
fidivrs
stc
hlt
xchg
loopne
mov
mov
in
gs
mov
inc
push
adc
icebp
divb
ljmp
jmp
xchg
push
in
ss
adc
shrl
aam
pop
std
and
push
fs
add
sahf
add
movsb
jne
cmc
repz
adc
pop
mov
or
or
adc
pop
pop
add
pop
inc
pop
enter
scas
popa
mov
jg
loop
inc
xchg
flds
or
aad
aas
inc
lock
lret
push
or
ja
int3
iret
popf
gs
adc
xor
daa
bound
cltd
mov
pop
int3
sbb
pop
cmp
pushf
test
push
and
jmp
imul
pop
mov
ss
hlt
test
push
das
ljmp
out
xorl
std
push
mov
dec
xchg
fdiv
xchg
mov
movsl
inc
pop
pusha
hlt
mov
sbb
rorb
cmp
mov
inc
xor
adc
rolb
jnp
into
cmp
dec
cs
sbb
pop
and
dec
lock
fiaddl
aam
fldl
xor
push
insl
out
mov
xchg
insl
ret
sbb
sti
mov
inc
push
jge
and
popa
dec
jno
add
in
xchg
push
push
out
xchg
aad
sub
test
lods
push
dec
adc
mov
ljmp
add
test
cmp
inc
jge
out
add
bound
push
lds
sahf
leave
sub
mov
jo
push
cmpsb
sub
cmpsb
dec
out
hlt
inc
lock
iret
pop
adc
std
orb
mov
cvtps2pi
dec
loopne
adc
mov
jno
mov
test
inc
mov
inc
test
mov
cwtl
dec
test
stc
divb
mov
cmpsb
jp
dec
mov
add
jle
nop
lcall
repz
enter
in
fsubs
xchg
pop
mov
popa
push
sub
loope
addr16
stos
cwtl
pusha
jl
lea
fildll
imul
push
sbb
fimull
push
adc
insb
adc
adc
cmp
cmc
leave
mov
iret
sbb
mov
mov
xchg
pop
xor
mov
cld
mov
xchg
sbb
cmp
ds
mov
pop
sub
pusha
iret
out
mov
scas
inc
mov
sbb
mov
xlat
lcall
test
fldenv
jl
sarl
push
repz
fldcw
sub
shlb
ljmp
aad
xor
aam
stc
cmp
jl
pop
clc
dec
loop
mov
stos
scas
ss
xchg
push
into
pop
jecxz
dec
cmp
add
jecxz
mov
pushf
mov
out
cmp
test
push
xor
jns
outsb
xchg
lods
pop
adc
xor
mov
or
dec
mov
in
inc
leave
push
dec
decl
iret
mov
fisubl
scas
cmp
fwait
lods
imul
movsl
adc
jg
sub
mov
pop
out
sub
xor
adc
add
push
test
dec
lods
mov
jg
inc
jnp
fdiv
dec
fidivl
test
jno
jmp
xchg
jnp
loopne
aas
test
dec
cmp
adc
sarl
xchg
imul
int3
out
pop
aad
fildll
inc
shrb
mov
out
push
outsl
push
js
xchg
xchg
insb
and
cmp
push
push
push
jecxz
iret
in
ja
jno
or
push
jecxz
inc
sbb
adc
pmaddwd
xor
insb
pop
inc
rolb
aaa
push
fwait
xor
push
scas
mov
int3
pop
lcall
cs
cmp
pop
aad
pusha
and
aad
mov
xchg
insl
sbb
inc
aaa
ret
gs
mov
ficoml
add
cmp
or
movsl
xchg
rcrl
sbb
inc
mov
sbb
mov
outsb
in
scas
into
int3
cmp
inc
xchg
mov
cmp
mov
rcll
sbb
repnz
movsb
mov
and
in
je
aam
mov
push
cmc
das
add
cmpsl
out
sub
test
cs
lds
adcb
jmp
mov
adc
ret
xchg
or
cmp
mov
call
rcrb
lods
fwait
fisubrs
movsl
cmp
pop
jae
pop
int3
lds
stos
in
cld
xchg
sar
and
xchg
push
and
ds
mov
nop
rorb
mov
test
xlat
movsb
stos
stos
jecxz
add
test
sbb
push
popf
lock
mov
or
xor
in
int
jmp
xchg
adc
push
pop
psrld
jmp
mov
pop
and
pop
mov
testb
mov
mov
or
jl
fisubs
push
lcall
fcmovb
fwait
cld
mov
arpl
pop
jp
push
out
adc
xchg
imul
es
pushf
imul
mov
mov
xor
and
leave
mov
push
mov
jl
pop
sbb
fwait
lds
lods
punpcklwd
inc
jl
sahf
dec
push
adc
dec
push
je
cmp
fs
mov
bound
daa
sub
cli
in
pop
ds
adc
test
imul
mov
dec
stos
ret
sub
stos
cs
sbb
hlt
aaa
sub
cs
cmpsl
adc
pop
mov
push
sub
stos
cs
sbb
sub
push
movsb
xchg
push
xchg
push
ret
jne
mov
sub
mov
xchg
jno
ret
jne
mov
push
sub
and
shrb
mov
jno
out
es
loopne
jno
lcall
divb
sub
scas
xchg
jno
push
inc
stos
cmpsl
mov
popa
loopne
mov
mov
pop
cmpsl
roll
stos
cs
sub
cmpsl
adc
and
shrl
fisubrs
sub
pop
sub
pop
cs
repz
repz
stos
dec
nop
pop
pop
pop
sub
pop
sub
pop
sub
mov
jle
fisubrs
push
xchg
push
cs
repz
repz
stos
dec
cmpsb
pop
pop
pop
cli
sub
pop
sub
pop
sub
mov
jnp
mov
and
shrl
push
scas
mov
pop
stos
pop
inc
xor
mov
mov
jl
dec
inc
jmp
movsb
adc
dec
iret
es
xor
aaa
cmp
sub
in
cmp
fmuls
add
cltd
test
lea
rcll
aam
pop
jno
loop
out
sahf
dec
add
mov
mov
xorl
enter
lea
jno
mov
ss
push
xorb
or
jo
imul
add
cwtl
fwait
mov
gs
jno
gs
push
cmpsb
mov
pop
xor
xchg
xchg
test
icebp
dec
lods
mov
sbb
lret
xor
mov
add
push
xor
loopne
jbe
aad
sbbl
in
ds
xor
movsb
imul
in
push
lahf
xchg
mov
xchg
out
clc
inc
inc
adc
cltd
outsb
jge
lret
mov
fdivrl
xchg
mov
inc
ret
rcrb
xchg
fistps
or
mov
cltd
cmp
sub
je
rorb
fbld
push
jg
xor
sti
insb
adc
in
push
push
jle
aas
lcall
cmp
dec
push
rclb
leave
leave
les
xchg
add
xchg
sti
mov
stc
inc
testb
or
add
jnp
jl
cwtl
add
push
in
push
iret
daa
stos
xchg
repnz
mov
lahf
aad
sub
in
cmp
xor
dec
daa
mov
movsl
int3
nop
daa
jnp
or
sbb
xor
in
fsubrp
add
xchg
dec
lods
dec
lock
lock
dec
dec
stos
inc
jecxz
push
dec
addr16
rcll
je
sarl
outsb
sub
dec
adc
dec
dec
lock
adc
lock
lods
sub
adc
dec
mov
and
xchg
aad
ret
cmp
mov
ror
pop
xor
jmp
mull
adc
subb
jl
inc
or
js
and
out
repnz
or
push
mov
cmp
pcmpgtb
nop
lea
or
mov
or
mov
mov
ja
jo
inc
outsb
loope
cmp
push
cmc
cltd
popf
pop
mov
cmp
outsl
dec
movsb
pop
ja
fwait
rcrl
mov
cli
mov
jp
repz
cld
xor
sbb
sbb
xor
add
sbb
ja
out
scas
nop
int3
jecxz
repnz
mov
enter
gs
out
movsl
inc
ss
adc
fistps
and
xor
insb
std
inc
jecxz
outsl
jp
mov
inc
sub
add
push
lea
les
lock
mov
cmp
xor
popf
add
ret
aam
shll
inc
mov
outsl
inc
imul
push
inc
iret
cmp
std
adcb
fcoml
or
cld
xorb
mov
scas
cmp
mov
jmp
shlb
mov
rorb
sbb
cmp
push
out
mov
mov
insl
jle
push
loope
and
pop
arpl
sub
stos
in
fsubl
push
dec
cmp
cmp
jo
add
and
fucomip
and
push
movsb
outsl
adc
lret
movsb
cld
fldcw
repnz
and
repz
fcomps
push
adc
mov
call
iret
mov
loope
pop
xor
iret
sbb
pop
mov
mov
in
daa
in
xor
add
sahf
sub
pop
push
xchg
cld
outsl
push
inc
mov
xchg
push
push
pop
xchg
push
push
mov
fwait
rorl
idiv
loopne
mov
adc
aad
insb
mov
xchg
pop
test
xor
push
subl
hlt
imul
rcrb
out
mov
sbb
cmc
sbb
pop
jge
sbb
pop
lret
dec
xor
xor
xor
out
pop
ds
pop
arpl
push
and
pop
cmp
icebp
cmc
lea
bswap
and
xor
or
sbb
js
addb
xchg
ret
pushf
mov
or
jecxz
sbb
mov
stc
jns
shr
out
int3
fwait
adc
lahf
call
int3
and
sub
xor
addr16
push
sti
mov
and
cmp
inc
cmp
xor
or
enter
pop
lahf
vmaxss
mov
cltd
es
gs
xor
push
pusha
pusha
pop
test
xchg
scas
insb
sbb
cwtl
dec
out
xchg
fs
adc
mov
xor
ja
mov
xlat
mov
inc
xor
nop
int
and
sti
xchg
fbld
cmpsb
ss
mov
push
xchg
call
enter
mov
orl
jmp
xchg
insl
and
lahf
jbe
pop
imul
insb
sbb
and
jg
aaa
or
test
jecxz
xchg
jnp
add
sub
xor
mov
cmp
xchg
imul
ficoml
fstps
inc
jmp
xor
push
inc
lock
ja
clc
adc
xchg
cmp
ds
lcall
dec
repnz
out
adc
out
gs
cmpb
call
mov
enter
test
sub
fcoml
jns
inc
loopne
dec
add
loope
and
xor
dec
dec
jnp
cmp
or
out
clc
div
test
mov
xchg
dec
cli
cmpsb
cmp
fldenv
push
je
inc
jmp
in
and
shrl
xchg
loop
inc
mov
insb
mov
outsb
dec
test
aas
cltd
loopne
stos
xlat
push
mov
jo
xchg
pop
int
xchg
filds
fwait
mov
jl
adc
fiadds
into
pop
adc
xor
lock
jl
fadd
mov
mov
out
push
lret
shrb
test
push
adc
sbb
push
clc
frstor
ret
addb
xor
or
sbb
loope
popf
pop
mov
repnz
imul
daa
cmp
js
repnz
stc
xor
cwtl
add
mov
jne,pn
inc
out
cmp
pop
inc
sahf
stc
icebp
sub
mov
cmc
fsubl
ja
cmpsl
jmp
cmp
fcoms
mov
test
cltd
or
adc
xor
adc
mov
push
cmpsl
push
and
adcl
cltd
enter
jp
movsl
aas
mov
scas
std
divb
and
cmp
cwtl
xchg
adc
mov
sbbl
into
inc
lds
lods
sbb
pop
dec
or
jp
xchg
dec
les
and
rcrb
sbb
repnz
xchg
pop
dec
das
das
lock
mov
mov
mov
mov
and
rcrb
sbb
push
out
and
mov
cltd
test
sahf
jmp
mov
xlat
ffreep
loope
adc
shl
je
cmp
or
cmc
or
adc
mov
or
xchg
cmp
adcl
xchg
imul
mov
push
xchg
pop
xchg
clc
jg
or
dec
mov
orb
adc
scas
jecxz
les
pop
pop
dec
stos
inc
xchg
and
dec
mov
fs
push
inc
dec
mov
mov
adc
sub
popf
in
scas
sbb
out
adc
pop
fbstp
xorl
xor
fsubrl
jecxz
fldt
jo
mov
outsb
rorb
jbe
loope
test
cmp
fucom
mov
xor
add
jo
sub
dec
lret
in
ljmp
int3
popf
push
gs
and
loope
lods
sub
or
std
arpl
inc
push
and
or
dec
mov
aam
xor
decb
push
sub
xchg
jno
mov
cmpsb
push
sbb
ficoml
xor
addr16
xchg
loope
or
mov
sbb
sub
shrb
pop
lods
mov
adc
outsb
inc
int
cmp
ljmp
stos
push
sub
inc
sbb
test
or
add
mov
mov
or
enter
insl
fimull
cmp
mov
popf
mov
dec
dec
adc
pop
fistps
push
and
push
jns
add
outsl
lretw
sub
inc
mov
add
adc
ret
jecxz
sub
rcrl
mov
jecxz
test
rolb
scas
sub
enter
push
jl
lret
mov
sub
xchg
fbstp
icebp
aad
cmp
xchg
push
push
pop
je
scas
push
adc
lret
jp
adc
mov
jecxz
xor
jecxz
xor
loopne
cmp
cld
mov
xor
xor
push
sbb
call
decl
std
or
mov
std
or
inc
xchg
popa
dec
ret
mov
cmp
xor
insl
add
push
movl
mov
xor
js
hlt
test
xchg
fldcw
mov
aas
ss
inc
cmp
pop
lahf
inc
pcmpgtd
outsb
lcall
push
inc
loopne
insl
mull
jecxz
ror
mov
lods
cmp
dec
rcrl
dec
jecxz
ucomiss
shr
dec
arpl
sbb
adc
out
and
fmuls
inc
push
popf
scas
jge
cmpsb
in
mov
iret
notb
ds
test
mov
pop
pop
shlb
aaa
push
scas
or
gs
pop
ret
pop
jno
add
push
sub
std
jno
sub
daa
out
adc
push
sub
rcll
jns
and
mov
mov
xor
mov
or
inc
int
sub
cmp
sbb
mov
out
jae
mov
jbe
push
push
icebp
addr16
jge
mov
idivb
push
lcall
das
inc
sub
inc
push
and
cmp
jno
or
lea
adc
adc
and
jl
shll
imul
lods
xchg
xchg
sub
into
imul
bound
mov
pop
test
dec
sbb
jne
fmuls
mov
cmpsl
orl
mov
cmp
rorl
xor
clc
xchg
sbb
ljmp
sti
test
addr16
or
test
pop
icebp
leave
mov
sbb
cs
adc
int3
dec
push
mov
dec
mov
jecxz
mov
mov
pop
scas
pusha
mov
xchg
add
inc
mov
das
lods
pop
in
out
movsb
push
pop
inc
cmc
jnp
insb
out
cltd
aas
jns
push
mov
ret
test
xchg
cltd
test
and
int
adc
pop
movsb
rcr
movsb
aas
push
xchg
cmpsb
xchg
sbb
push
imul
mov
ja
mov
gs
call
sbb
int
or
inc
jmp
and
scas
mov
or
dec
or
ss
push
cmpsl
dec
pop
out
dec
mov
ds
sbb
jp
out
mov
dec
gs
ds
int3
data16
jnp
add
sub
cwtl
loop
mov
movsb
push
shlb
fsubl
stos
test
movsl
adc
mov
adc
xlat
sete
adc
dec
popw
adc
push
insl
mov
jg
adc
cmp
cmpsl
popf
in
dec
xor
xchg
adc
and
roll
rol
out
ljmpw
mov
fildll
xchg
inc
movb
adc
sbb
icebp
scas
add
repnz
mov
fistl
cld
out
dec
mov
jb
add
loope
xchg
int3
mov
dec
shrb
subb
je
and
nop
or
cmp
jp
subl
pop
pop
mov
cmp
int3
sti
inc
in
shll
fimuls
hlt
sti
sarl
in
push
cmc
sbb
lahf
adc
incl
mov
mov
popa
push
xor
popa
int
fnstenv
mov
inc
lea
mov
stc
sub
sub
ljmp
inc
sarl
je
pop
insb
stos
andl
xlat
loopne
loop
adc
test
jae
stos
and
mov
inc
es
pop
xchg
jb
sbb
mov
dec
adc
xchg
roll
sbb
xchg
lret
mull
push
hlt
lea
mov
das
mov
testl
adc
and
add
sahf
xchg
lcall
loope
xchg
or
mov
ret
lret
xchg
daa
dec
iret
in
jns
add
out
or
sbb
sarl
js
pop
adc
adc
jg
xchg
out
xor
dec
rorb
cmpsl
loop
js
test
adc
jb
inc
xchg
or
cmp
and
push
jno
sahf
adc
lret
inc
or
inc
pop
pop
or
in
push
sarb
leave
jnp
shr
mov
loopne
jp
sbb
push
lret
sbb
inc
mov
xchg
lahf
sbb
cs
cmpb
popa
cmp
hlt
and
arpl
push
jne
xchg
push
cmpsb
sti
jl
add
and
mov
add
aaa
popf
adc
arpl
fwait
cmpsl
xchg
jl
enter
and
sub
mov
xor
jle
jbe
inc
xor
inc
nop
xchg
jnp
push
ffree
inc
sub
mov
xor
adc
outsl
add
fs
out
inc
push
rcrb
add
outsl
or
stos
inc
jae
popa
ret
call
repnz
inc
call
jg
repnz
jae
sbb
mov
push
lret
ds
fdivrl
pop
mov
push
ljmp
andb
xor
clc
inc
inc
mov
inc
inc
mov
int
repnz
mov
add
in
int
pop
repz
xor
stos
into
das
pop
mov
push
popf
repnz
mov
fisubrl
pop
cli
push
int3
bound
jns
addr16
inc
pop
sub
test
mov
xchg
and
in
cmc
test
cmp
push
inc
mov
sub
xor
jno
adc
lods
test
jmp
and
mov
nop
ret
mov
inc
mov
lahf
mov
lret
aas
sti
xchg
mov
mov
movsb
pop
or
jbe
pop
int3
mov
popf
push
fwait
mov
sbb
cmpsb
leave
mov
sbb
leave
in
add
aam
pop
fisubrl
push
hlt
or
xchg
mov
pop
sarl
fnstenv
and
jl
push
mov
shlb
sub
nop
in
enter
sti
mov
push
leave
out
out
imul
mov
inc
call
subl
sti
sbb
enter
out
sbb
sub
imul
sbb
pop
stc
jmp
test
sbb
xchg
fisttpl
adc
cwtl
jno
add
add
cmp
mov
add
loop
jbe
dec
data16
in
jnp
arpl
lds
add
scas
sbb
rorl
adc
xchg
mov
mov
and
dec
mov
xor
clc
or
fisubrl
jmp
inc
jmp
pusha
xor
cld
jb
xchg
cwtl
outsl
pop
mov
cmp
dec
push
jp
mov
ffree
push
in
dec
popa
mov
and
or
lea
or
xor
lcall
inc
mov
fwait
or
adc
shrl
faddl
dec
pop
mov
lea
fidivl
adc
test
cmp
repz
fnstenv
mov
pop
sbb
mov
enter
negb
pushf
mov
push
loope
mov
lods
loopne
les
add
jl
movl
movsb
jl
fstl
in
call
cmp
stc
repnz
aas
movsl
pop
cmpsl
cmpsl
cs
sub
cltd
lret
imul
sub
cltd
xor
fiaddl
imul
in
or
mov
adc
mov
inc
xchg
pop
pop
sbb
jo
mov
inc
pop
add
cmpsb
loop
scas
pop
mov
pop
inc
or
aam
mov
sti
dec
aas
cmp
ljmp
jne
or
pop
xchg
add
cmc
sub
jne
lret
icebp
xchg
jmp
mov
mov
push
ret
push
dec
or
push
aad
jle
xchg
fisubl
dec
push
mov
sbb
adc
cmp
dec
in
iret
xchg
push
inc
stos
call
orps
mov
out
sub
mov
xor
pop
iret
jae
jo
and
clc
jp
rclb
aam
jmp
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
jl
xchg
mov
jae
out
pop
fwait
jle
adc
stos
mov
mov
push
lods
mov
cmpsl
out
test
push
jl
xchg
mov
jae
mov
or
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
sub
stos
dec
ja
mov
mov
push
cmp
xchg
test
add
dec
out
dec
push
pop
and
clc
mov
or
aas
insb
lahf
fisttpll
das
and
pop
xchg
in
xor
lds
or
mov
shlb
test
jge
repnz
lea
xor
ss
mov
inc
push
or
inc
xchg
insb
shr
add
aas
push
in
xor
sahf
xor
addr16
pop
mov
xchg
cmpsb
xor
mov
dec
lea
rol
xchg
movsb
arpl
and
xchg
les
mov
cli
das
lds
cmp
add
push
dec
inc
sub
or
pushf
pop
sahf
inc
fstl
ljmp
or
adc
out
aas
setp
mov
cwtl
popa
scas
test
imul
negb
arpl
dec
jnp
push
adc
or
call
dec
pushf
mov
mov
add
pop
fldcw
mov
push
std
rolb
icebp
jnp
leave
mov
es
and
cmp
inc
add
stc
jb
cld
in
shlb
adc
cltd
push
push
xchg
or
sub
and
lock
jl
jnp
inc
push
mov
pop
jmp
push
fcmovne
xchg
push
sbb
inc
mov
add
cld
insl
mov
xchg
pushf
sub
filds
int3
jne
adc
mov
jae
cmpsl
inc
sahf
adc
stos
xchg
out
jp
xchg
movsb
push
js
or
sahf
lea
push
push
sbb
adc
mov
mov
in
mov
jge
call
lret
dec
mov
ljmp
test
insb
fisttpl
add
add
out
sbbl
mov
cs
xchg
xor
sub
cmp
rcll
imul
add
cmp
xchg
and
xchg
pop
or
and
sbb
add
insb
cmp
pop
xchg
push
imul
pop
xchg
ret
test
in
jnp
subb
xchg
shl
decl
mov
cld
cmp
ja
and
or
fdivl
pushf
xchg
push
decl
shlb
jecxz
mov
adc
mov
stc
pop
in
mov
ljmp
jecxz
es
xor
and
or
push
test
imul
cmp
iret
in
adc
mov
mov
andb
xlat
cmpsb
fsts
loopne
popf
stos
push
addb
lock
scas
fsubp
out
xor
ljmp
fstpl
test
addr16
lret
xor
pop
rolb
in
inc
jecxz
jg
fcomps
rcrb
imul
mov
ret
stos
pop
adc
cmp
pop
imul
bound
lea
lahf
mov
mov
or
lock
ds
fildl
daa
sub
bound
push
stos
dec
cmp
push
js
leave
pop
clc
les
fists
jnp
adc
ja
mov
test
imul
dec
or
xchg
lret
test
shll
shlb
dec
adc
loopne
mul
fdivrl
imul
das
jno
hlt
movsl
ret
add
bound
adc
aam
in
push
xchg
in
mov
or
cmp
and
cmp
push
add
pop
shrl
adc
inc
jno
filds
add
shll
mov
ja
xchg
adc
pop
shrb
jge
xor
inc
add
adc
sbb
push
pop
repnz
adc
test
mov
push
xlat
les
xchg
mov
sub
data16
clc
mov
ret
bound
movsl
mov
fnstsw
outsb
xor
xchg
sahf
out
out
pop
ret
pop
push
lcall
rolb
loop
mov
iret
ljmp
inc
adc
xor
sub
mov
mov
out
xor
flds
cmpsl
pop
fstl
test
loope
fldenv
out
sbbb
dec
fs
mov
shlb
xchg
outsl
ret
fcomps
shll
cwtl
dec
pushf
xchg
out
sub
jmp
arpl
and
imul
call
jp
push
ret
mov
dec
add
mov
out
cs
jge
pop
mov
pop
inc
xlat
inc
lret
cmp
icebp
jno
inc
xchg
les
adc
jmp
ljmp
popa
sub
adc
rorl
inc
cmp
in
inc
jne
sbb
mov
ss
push
imulb
xor
popa
and
test
xchg
sbb
sbb
aaa
movsl
mov
xchg
mov
and
lods
xchg
dec
xor
xchg
cmp
pop
daa
pop
fisttpll
fucomp
loop
fsubrs
mov
pop
out
xchg
jp
pop
aad
mov
mov
js
push
cs
addr16
dec
jg
insl
mull
xor
arpl
lods
adc
jb
sub
ljmp
jb
mov
outsl
ja
aaa
adc
fistpl
repnz
inc
push
jp
out
lcall
push
xchg
inc
pop
add
in
es
std
aad
add
imul
shlb
dec
sahf
test
or
pop
stos
mov
arpl
push
fistl
push
leave
aas
and
xor
jno
pop
fistpl
mov
mov
in
inc
mov
in
xor
push
sub
loope
movsb
dec
cmpsb
lcall
pusha
push
dec
jae
loopne
popf
fbld
arpl
mov
push
cmpsl
mov
pop
call
xor
mov
jmp
rclb
in
inc
je
mov
xor
xor
xchg
inc
repnz
xlat
xchg
repnz
ss
je
gs
jge
dec
mov
dec
mov
data16
xchg
jmp
push
sbb
mov
in
xchg
fwait
push
lcall
pop
outsb
sbb
xlat
mov
mov
sar
xorb
jle
cltd
lret
sub
push
cmp
in
sbb
xlat
pop
inc
in
fwait
pop
lods
cltd
cmp
cmpsl
lods
sbb
push
fstps
in
add
cmp
push
mov
and
cwtl
pop
fcompl
cmp
sbb
movsl
dec
fwait
push
out
pop
cmpsl
xchg
mov
xorl
je
ja
push
or
xchg
mov
sti
jp
xchg
xchg
mov
inc
push
pop
adc
or
jmp
pop
cld
icebp
add
or
repnz
imul
dec
mov
push
scas
add
xor
enter
dec
mov
adc
or
mov
dec
xor
adc
sub
gs
sbb
sub
test
and
out
push
cmpb
ljmp
fistl
and
fisubrl
adc
adc
in
repz
mov
sbb
xchg
fnstsw
xor
cmp
fldcw
cmpsl
shlb
repz
mov
or
add
shlb
jno
loop
rol
pop
or
popa
pop
mov
imul
ljmp
addl
mov
push
xor
stos
hlt
xchg
lret
or
popf
cmpsl
jg
pop
or
aas
inc
ret
das
data16
jl
cmp
mov
lahf
fisubrs
dec
aam
lock
loope
jae
cs
pop
xchg
gs
mov
mov
imul
sbb
fstpl
jl
addl
jmp
loopne
lcall
aas
test
ljmp
jb
les
pop
loopw
push
add
push
mov
dec
mov
cs
and
es
inc
jl
jb
dec
pop
xchg
icebp
fs
dec
xor
xor
or
cld
cld
pop
ret
into
push
pop
mov
test
inc
popa
adc
xchg
mov
popa
add
mov
sub
data16
xchg
lret
mov
jg
jae
dec
in
fldcw
hlt
fsubs
fnstenv
mov
or
lds
fisttpl
mov
out
lahf
dec
add
divb
stos
add
dec
movsl
inc
gs
fsts
xchg
mov
dec
add
outsb
or
cwtl
sbb
pusha
or
shl
insl
or
cmp
mov
xchg
cltd
adc
aam
enter
add
aam
js
loop
aaa
mull
or
dec
or
and
mov
stc
xor
imul
int
rorb
fimull
mov
imul
xor
into
addr16
stc
bound
mov
xor
sub
jae
out
cmc
sub
dec
add
pop
gs
inc
stc
sahf
jg
test
loope
rorb
insb
add
imull
mov
mov
and
pop
and
sbb
sbb
mov
jae
push
and
mov
ja
cmp
xchg
ds
pop
into
adc
lock
clc
xchg
cmpsl
aad
lcall
sub
aas
pop
sub
pop
xor
movsl
in
aas
popf
jbe
xchg
imul
mov
jns
in
mov
push
xchg
push
test
test
jbe
test
mov
fs
out
or
mov
popa
les
pop
push
rolb
xchg
cmp
loopne
scas
push
aam
das
xor
dec
out
adc
sub
inc
or
ror
pop
iret
mov
add
scas
xchg
mov
sbb
hlt
dec
add
push
jno
mov
mov
xor
sti
insl
sbb
xor
scas
ds
sbb
inc
jnp
xor
sbb
int3
aaa
jg
fbld
lahf
int
and
cmp
out
and
in
inc
and
pop
jle
scas
icebp
or
dec
fidivrs
xchg
ret
jae
mov
lock
cmp
xchg
dec
aas
add
add
adc
sub
mov
dec
sbb
inc
sbb
inc
test
mov
dec
mov
in
or
addr16
lea
dec
push
ss
out
cwtl
sub
inc
mov
mov
sub
push
add
mov
addl
addb
xchg
sbb
mov
lahf
mov
fnstsw
call
rol
xchg
mov
popf
int3
in
insb
pop
mov
xor
andb
subb
pop
lods
push
enter
push
aas
add
divl
ds
xchg
outsl
jne
xchg
or
int
mov
insb
or
add
mov
sub
jnp
sarb
mov
stc
jl
ficompl
test
in
mov
add
jb
inc
mov
les
aam
cltd
imul
loopne
std
repz
je
fidivrs
push
cld
cmpsl
ror
mov
mov
ficomps
test
aad
int
ss
sub
mov
jmp
dec
out
pop
outsl
loope
sti
test
aaa
lcall
or
jle
scas
popf
imul
mov
inc
push
pusha
push
roll
push
rolb
cmp
inc
ret
adc
out
in
add
inc
repnz
out
and
mov
ljmp
aaa
cmp
lcall
mov
stc
xchg
add
in
inc
mov
into
aas
and
roll
test
jmp
cmp
inc
and
lcall
push
adc
add
cmp
loopne
mov
stos
mov
test
fidivrl
leave
outsl
inc
dec
adcb
repz
sbb
inc
sub
sbb
ljmp
pop
mov
mov
cmp
mov
xor
sahf
xchg
mov
adc
ret
or
push
xor
pop
xchg
addl
sahf
sub
push
mov
lock
xchg
push
xchg
outsb
je
push
add
sub
xchg
pop
int3
ficomps
ror
shlb
push
ficoml
pop
mov
pop
xor
mov
test
stos
mov
adc
mov
imull
ss
daa
lods
and
jecxz
push
xchg
add
rol
js
or
push
xor
popf
rolb
icebp
fcmovnu
into
push
cmpsl
cmp
xchg
adc
xor
rclb
mov
jg
push
mov
test
xchg
xchg
jne
adc
leave
clc
enter
pop
inc
mov
notl
call
cmpsb
lcall
xchg
dec
movb
outsb
or
lret
gs
popa
or
rcr
xchg
and
popf
arpl
fists
and
movsl
out
cmpb
xor
pop
push
fdivrl
sbb
subb
sarb
adc
and
add
push
jno
fs
test
xchg
lods
mov
adcl
fwait
inc
xchg
cltd
int
test
push
vpmacsdqh
sbb
cli
mov
mov
sub
std
imul
cmp
clc
fcmovnu
mov
pop
ficomps
outsb
mov
jae
xor
pop
mov
iret
into
sbb
inc
enter
dec
subb
test
outsl
cmp
movb
nop
inc
push
fcmove
jb
push
push
in
cmp
rorl
cmp
in
jae
test
sub
lods
icebp
cltd
sbb
dec
jle
clc
sbb
aad
jno
fmull
and
mov
icebp
loope
push
xchg
pop
inc
xlat
jnp
into
sub
sub
mov
mov
test
dec
dec
insl
ret
nop
scas
sub
hlt
repnz
cli
push
pop
call
gs
es
insb
inc
sti
dec
mov
sbb
and
movsb
iret
rcr
ss
cld
jle
add
push
cmpsb
inc
repz
add
insb
jb
mov
sti
popf
mov
push
je
gs
pushf
in
and
or
cmp
cmpsl
xchg
daa
scas
xchg
adc
dec
les
and
push
cltd
sbbb
sub
outsl
and
or
mov
and
hlt
inc
jle
mov
in
push
fs
mov
xchg
add
push
pop
or
pop
into
and
repz
adc
mov
jns
cmp
cmc
and
pop
leave
push
or
pop
sbb
pop
xchg
pop
or
fcoml
in
lahf
add
add
ss
call
add
push
aad
push
xor
cld
ljmp
out
lods
mov
lds
loopne
in
hlt
cltd
dec
pop
adc
scas
loopne
scas
lret
idiv
test
cmp
mov
inc
sbb
daa
mov
insb
jbe
xchg
pusha
ljmp
or
pop
sbb
shr
orl
movsl
dec
ja
mov
sub
leave
lds
aas
movsl
jge
je
push
test
jg
and
clc
pop
mov
xchg
inc
out
div
lods
and
or
mov
cmp
fnstcw
movsl
push
dec
imul
orl
mov
sti
cmp
ljmp
outsl
stc
mov
xchg
mov
subb
mov
adc
mov
mov
iret
fs
mov
xchg
mov
loope
push
cmpsl
repz
in
iret
push
pop
orl
xchg
leave
jg
xorl
or
int3
sbb
mov
mov
icebp
dec
xchg
imul
mov
repz
ret
jecxz
in
dec
or
mov
lahf
fwait
xor
pop
xorl
sub
aaa
insl
sbb
into
sub
and
ljmp
dec
pop
shrb
jo
jge
sub
xor
shll
pop
jle
pop
mov
jnp
sti
aad
push
push
out
pusha
push
and
imul
scas
push
mulps
push
adc
rolb
cltd
push
mov
xor
mov
inc
jmp
hlt
jle
sub
movsl
or
jl
hlt
add
loopne
insl
fs
mov
lret
lds
mov
ds
dec
and
mov
lcall
cmp
ljmp
fwait
push
and
fildll
jp
sbb
jge
or
fs
jbe
sarl
push
cmp
movsl
jmp
fs
pushf
lret
and
push
sbb
pop
cmp
mov
test
sahf
idivb
lahf
push
leave
add
stc
mov
sahf
movsl
jnp
xchg
xchg
push
jnp
xchg
xchg
cmp
dec
add
mov
cwtl
loop
jb
pop
arpl
filds
inc
sahf
inc
testb
mov
ds
mov
pop
nop
or
andl
ret
mov
sbb
push
fldcw
or
add
xchg
jno
or
movsb
pushf
sahf
dec
ja
inc
push
aas
ja
daa
inc
imul
pop
stos
pushl
rcrl
dec
inc
ds
add
xchg
mov
push
and
push
pusha
xor
xor
push
imul
mov
xchg
lret
sub
stc
pop
lods
sbb
add
adc
sbb
jg
arpl
int3
out
pop
lds
jle
xor
jl
push
dec
sub
adc
add
bound
sbb
repz
pop
ljmp
jp
stos
or
les
icebp
lret
inc
add
fistpl
out
sbb
stc
adc
mov
adc
add
inc
cs
jno
in
lds
adc
aam
sbb
loop
or
lds
enter
mov
dec
mov
imul
mov
adc
or
jp
xchg
xchg
jl
sub
jg
out
jae
sbb
sbbl
cmp
les
insb
push
aam
add
mov
test
je
adc
xchg
and
xchg
fs
lcall
fists
push
mov
add
cld
inc
cmp
cmp
adc
ficomps
xor
lret
xor
lret
insl
rcrb
enter
out
lahf
cs
out
lods
dec
pop
or
mov
push
pop
cmp
or
enter
iret
jne
or
sbb
aaa
cmp
divb
cmpsb
push
dec
mov
mov
xchg
push
lods
outsb
int3
push
push
push
call
imul
mov
xor
pushf
or
pop
pushf
loopne
call
mov
sub
lea
in
fwait
mov
bound
and
js
in
mov
inc
mov
dec
or
loopne
push
cmp
mulb
or
lcall
lea
imul
out
cmp
mov
and
xor
dec
mov
dec
mov
xchg
js
popf
push
pop
mov
daa
push
movsl
movb
inc
adc
pop
cld
in
loop
or
mov
ja
iret
in
and
adc
in
fsub
in
lods
scas
push
fcmovnb
lods
aaa
and
pop
cmc
and
mov
mull
xchg
nop
xchg
jb
dec
insb
shr
sub
push
outsl
out
es
inc
notl
jle
es
cmpsw
push
adcl
outsb
scas
push
inc
test
dec
jle
sti
lods
xchg
add
popf
sub
sub
jnp
test
jb
icebp
fwait
scas
jmp
cmpsb
mov
mov
jge
rcrb
or
stos
adc
sub
dec
es
mov
dec
test
jle
sbb
setl
xlat
arpl
out
mov
mov
iret
xchg
xchg
sub
mov
stos
aaa
jmp
scas
push
pop
xor
aaa
xchg
stos
adc
les
xchg
mov
xchg
bound
inc
inc
dec
rcrb
lods
lods
xchg
mov
int
cmp
adc
iret
mov
repz
inc
jecxz
add
jno
cmp
movsl
lret
sbb
or
adc
add
les
ss
push
adc
lahf
xchg
adc
xchg
jns
or
and
nop
jns
add
lret
mov
lock
addr16
xor
imul
and
mulb
div
lahf
and
jp
xchg
mov
adc
dec
cmp
repnz
mov
and
lret
clc
add
pusha
ret
pop
in
sub
daa
test
out
and
xchg
jno
pextrw
push
ss
stc
fcoml
xor
dec
daa
loopne
ds
std
jbe
mov
add
je
fwait
push
mov
xchg
mov
mov
mov
int3
xchg
jo
sbb
out
ds
cmp
mov
jge
mov
adc
jg
or
dec
sbb
cmp
push
sbb
add
mov
inc
scas
xor
mov
cli
iret
stc
jbe
lds
lds
sti
dec
mov
cwtl
mov
test
xchg
fwait
xchg
pop
std
xchg
loopne
xchg
xchg
insl
mov
out
lahf
lods
cmp
jmp
xchg
pop
mov
xchg
shlb
jl
and
scas
int
inc
notl
dec
jno
push
xchg
les
popf
test
movsb
ds
hlt
dec
jl
sub
mov
and
push
ds
inc
shlb
add
addr16
sub
lods
scas
cmp
xor
lret
cmpsl
dec
mov
fcomps
nop
mov
adc
sahf
push
sub
fisubrs
rorb
push
jbe
divl
cmp
jmp
sub
xlat
mov
call
fs
fmuls
xchg
adc
fs
sbb
sub
test
sub
jp
adc
popa
aam
xchg
xlat
sbb
lret
sbb
pusha
mov
lcall
shrd
in
xchg
leave
imul
jb
les
pop
or
into
mov
add
or
jb
dec
pop
ret
mov
mov
mov
jo
stos
stos
xchg
inc
data16
outsl
jge
ret
aaa
sahf
push
mov
mov
inc
int3
test
pop
and
stos
sahf
pop
add
lea
push
mov
testl
dec
mov
idiv
push
jge
push
pop
rsqrtps
lods
push
mov
dec
scas
test
xchg
sbb
cld
cmp
cltd
sbb
jne,pt
in
mov
dec
fcomps
cld
aas
jne
fadd
mov
in
addr16
insl
imul
jl
rorl
mov
dec
sbb
sbb
jl
inc
movsl
sub
movsl
jmp
mov
lahf
scas
dec
pop
test
inc
negl
pop
jno
hlt
rorb
ret
test
cs
adc
and
cmp
cmp
icebp
loop
jnp
clc
es
outsb
mov
sub
pop
test
pop
sub
lods
cld
and
push
ret
pop
outsb
sbbl
dec
fdivrs
dec
fldcw
imul
mov
ficomps
jg
push
sbb
jne
add
push
sarb
sub
mov
repnz
xor
int
push
mov
scas
sbb
mov
mov
rorl
lods
les
pop
out
pop
leave
test
xor
inc
lds
push
pop
cmp
aam
into
push
icebp
shl
dec
push
mov
add
pop
dec
adc
pop
mov
push
into
decl
leave
add
in
popa
pop
xchg
movsb
inc
sub
shrb
je
jnp
adc
xor
icebp
stc
das
hlt
inc
mov
addr16
shlb
inc
cmp
xor
sub
pop
mov
xor
lds
pop
test
pop
sub
or
pushf
dec
loopne
fiaddl
pop
jg
xchg
mov
inc
inc
nop
xchg
jg
test
cli
into
ja
mov
jl
stos
repnz
inc
sub
int
hlt
add
in
or
out
mov
inc
aam
sub
insl
sub
jp
mov
push
andb
mov
add
repz
sbb
cmpsb
add
or
in
jne
mov
fwait
push
outsb
push
pop
xchg
sub
call
add
ljmp
lods
fldenv
leave
xor
xchg
mov
adc
xor
push
ret
dec
adcb
fbstp
xchg
push
ljmp
xchg
in
in
xor
pop
xor
and
pop
addr16
jecxz
mov
sub
sbb
mov
cmp
mov
aam
mov
mov
loop
xorl
rorl
pop
cmp
leave
in
sti
mov
sbb
mov
sbb
xor
scas
lds
mov
xchg
out
dec
cmp
or
push
ljmp
int
movsl
push
cmp
adc
cmp
mov
lret
sbb
lret
adc
orl
rolb
sbb
xlat
leave
jg
addr16
jno
pop
inc
xchg
sar
fistps
popf
dec
lds
sti
imul
shll
pop
nop
loop
dec
pop
mov
mov
lret
mov
nop
das
adc
mov
mov
out
rclb
inc
enter
popf
pop
push
jo
arpl
scas
xchg
mov
js
jp
cltd
jle
xor
xchg
bound
cwtl
jns
mov
popa
push
bound
ljmp
ret
lds
lahf
mov
dec
and
cmp
sarl
xor
jb
out
test
roll
adc
popf
ror
fadds
out
sbb
dec
ljmp
or
idiv
inc
push
das
int3
scas
pop
out
mov
dec
sahf
popa
push
push
je
mov
pop
inc
aad
fstl
in
pop
aad
mov
inc
dec
ret
lods
notb
clc
mov
dec
mov
lahf
stc
fnstcw
imul
adc
pop
cmp
sti
mov
ds
mov
sahf
inc
pop
jae
and
and
loopne
cmp
lea
cmp
inc
xor
jecxz
loope
jl
scas
test
mov
adc
ret
bnd
mov
cmpsb
jns
xor
mov
dec
pop
cmp
cs
or
cmc
sbb
aaa
dec
test
popa
mov
mov
fwait
shr
xchg
push
lds
lea
jae
leave
sarb
test
dec
inc
adc
push
push
add
mov
ja
sub
aaa
aas
mov
and
jmp
push
js
test
sub
jecxz
jbe
pop
sub
lahf
test
pop
or
int
rol
mov
test
pop
xchg
mov
jo
loopne
jne
fnstsw
ror
lea
mov
outsb
mov
jge
xor
pop
and
aam
dec
hlt
scas
sbb
or
xorl
outsl
cli
pop
push
pop
pop
mov
jno
push
xor
jg
add
pop
lahf
dec
sahf
and
pop
dec
xchg
scas
push
fsubp
dec
imul
out
cltd
ret
test
into
and
or
inc
in
pushf
test
lds
out
push
inc
enter
shlb
test
cltd
mov
inc
adc
loop
sub
jge
in
in
test
loope
fwait
out
push
cs
jge
adc
adc
lods
jne
or
lret
in
vcvtps2dq
adc
xchg
ror
push
mov
aad
and
adc
lcall
xor
leave
cwtl
fstp
or
fwait
mov
fsubp
jl
xorl
aam
or
mov
dec
sub
push
dec
loop
sahf
ret
push
jmp
es
mov
leave
aam
add
dec
sub
loop
mov
and
fcoml
and
pop
cmp
test
mov
lods
xor
outsl
xlat
clc
jle
add
pop
jecxz
mov
ret
cmp
scas
add
or
adcb
lret
stos
cmp
and
shr
aas
sbb
push
or
sub
or
mov
jp
xor
xabort
cmp
rolb
push
add
mov
dec
daa
jp
dec
xor
add
inc
aam
inc
jns
movsb
xor
fisubrs
sbb
mov
stos
cld
adc
pushf
xchg
filds
push
dec
add
ljmp
std
lea
inc
bound
mov
jno
push
jnp
scas
mov
push
mov
push
adc
nop
out
in
mov
mov
push
push
out
cld
mov
push
xchg
dec
fsubrs
out
mov
pop
mov
out
push
pop
mov
add
clc
mov
out
fisubrs
lea
aas
adc
cltd
push
gs
jecxz
popf
jg
dec
mov
popf
cld
mov
sub
jae
push
lret
sub
out
sti
pop
pop
test
in
pop
negb
testb
push
adc
mov
je
test
enter
stos
insb
xor
lds
push
outsl
gs
xor
and
add
mov
xor
lret
ss
xor
movhps
mov
or
rcr
add
sti
dec
nop
add
ss
testl
in
ret
mov
lret
inc
int
cmp
imul
xor
out
pop
inc
add
lock
subl
fcmovb
or
xor
sarl
imul
negl
dec
and
in
mov
mov
push
movsl
jae
and
loope
xchg
nop
mov
mov
mov
xlat
or
aam
pop
pop
pop
sbb
push
or
out
loopne
and
cmp
stos
jecxz
sbb
push
xor
ja
mov
mov
cmp
mov
add
mov
je
cmp
out
adc
je
xor
xchg
bnd
push
dec
pop
lret
or
add
int
and
data16
repnz
xchg
mov
dec
sub
movsb
fstp
push
lds
outsb
push
cwtl
shl
push
xor
xchg
push
test
push
jg
out
incl
addr16
xor
push
sbb
insb
xchg
pusha
jo
in
jae
ret
jno,pn
fstps
imull
aam
mov
scas
iret
xor
ss
inc
push
imul
shll
xchg
enter
pop
or
in
push
mov
test
sbb
mov
jo
add
out
cmp
out
xchg
decb
sbb
add
loopne
ljmp
or
jmp
mov
mov
lcall
into
mov
dec
push
push
and
outsl
lcall
out
jb
das
dec
outsl
jl
push
stos
out
out
inc
jbe
aad
pop
inc
jge
inc
push
pop
ficompl
dec
std
add
in
mov
aas
out
xchg
push
cmp
ret
dec
sbb
icebp
sbb
std
dec
popa
pushf
mov
cmc
movsl
xor
mov
jbe
ja
jmp
clc
mov
negb
or
enter
push
daa
xor
mov
bound
mov
adc
std
cmpsb
mov
cmp
rorl
lods
or
daa
ret
js
push
ret
pop
push
or
and
jne
mov
sbb
xchg
pop
sbb
imul
mov
leave
fdivrl
jbe,pn
sar
fmull
in
outsl
popa
jb
cmc
jg
aas
scas
fistpl
dec
adc
cs
mov
sbb
sub
jbe
xlat
test
pop
sbb
mov
aam
add
jbe
jnp
pusha
mov
add
lret
pop
jae
insl
imul
cmc
inc
lret
cmpsb
in
sti
jmp
xchg
lock
xchg
ss
popa
mov
xchg
fwait
jnp
mov
inc
and
pop
fcomi
das
rol
push
test
adc
or
and
or
repnz
mov
adc
pushf
add
xchg
or
insb
ja
mov
dec
or
jle
or
dec
xor
mov
xorl
bound
jns
imul
cld
sub
jecxz
in
repnz
mov
add
icebp
pop
adc
cmpsl
aaa
push
dec
fwait
add
out
mov
adc
in
imul
aaa
out
sbb
mov
clc
ret
icebp
dec
jl
or
sbb
mov
mov
mov
add
movsl
mov
cmp
nop
shlb
das
push
push
xor
mov
pop
jo
lret
mov
sahf
scas
ficoms
into
mov
loope
in
bound
popa
rorb
mov
mov
mov
adc
sub
dec
enter
mov
movsb
jecxz
push
fs
stc
mov
cmp
das
xchg
push
pop
sahf
clc
sub
mov
cmp
out
and
out
cmp
int
into
cmp
inc
leave
jl
inc
cmpsb
sub
push
jl
inc
inc
mov
adc
ja
dec
dec
push
cwtl
adc
test
sbb
scas
push
shlb
dec
mov
or
xor
dec
mov
fwait
or
and
adc
aaa
add
push
imul
lods
fisubrs
out
outsb
loope
in
mov
mov
mov
xchg
or
and
xor
push
inc
xchg
pop
xchg
test
idiv
ljmp
sbb
bound
das
in
cltd
xchg
in
sbb
outsb
stc
popf
pushf
jp
mov
jg
jno
aaa
cltd
and
jge
popa
pop
movsl
cld
pop
decb
add
dec
repz
adc
fwait
pop
mov
cmp
cmp
push
sub
dec
jl
sbb
out
add
faddl
fnstsw
scas
cmpsl
js
or
in
scas
and
in
rcrb
fcmovnb
jne
and
mov
pusha
stc
pop
jecxz
dec
andb
push
leave
out
les
sub
jae
movsb
mov
inc
adc
xchg
dec
push
jecxz
fdivrp
addl
in
add
push
pop
mov
popa
outsb
stos
and
loop
mov
call
js
adc
dec
lret
inc
rorb
test
fidivrl
aas
adc
lds
pop
sbb
dec
mov
test
cmp
push
and
lods
rcll
jl
incl
xlat
cmpsb
fst
xchg
push
mov
inc
dec
cmp
cmp
inc
cmpsb
shlb
mov
dec
lret
pop
cwtl
pop
cmp
ss
out
mov
mov
dec
push
mov
dec
sub
je
dec
mov
dec
push
mov
xchg
jo
rorl
xor
sub
cmp
sti
test
xor
negb
aad
movsl
int3
ss
out
push
lahf
jl
pusha
xor
mov
stc
cmp
negl
inc
xchg
sbbb
adc
pop
sbb
stos
lcall
loopne
inc
daa
ljmp
inc
mov
stos
lea
js
mov
jnp
jo
inc
nop
push
add
sahf
mov
pop
aaa
imul
cmp
scas
and
orl
sbbl
movsl
test
pop
xor
push
adc
mov
loop
mov
daa
stc
pop
dec
ds
push
push
stos
sub
in
mov
xor
bound
mov
test
cmp
mov
sbb
inc
stos
xchg
xchg
in
das
shlb
pop
fldcw
test
xlat
cli
test
dec
pop
fnstcw
mov
scas
int
add
lods
je
shl
pushf
lock
jnp
and
adc
ds
mov
popf
std
or
pop
jns
xchg
fdivrs
js
mov
js
pop
mov
in
jmp
fcomps
cltd
pop
aaa
jb
into
xor
cmp
out
sbb
lahf
lods
addb
adc
mov
rcl
sub
cltd
push
not
sub
jae
cmp
and
jge
mov
or
out
xor
jl
jp
mov
hlt
outsb
mov
aam
jo
aas
dec
dec
and
lds
jbe
mov
jns
notb
stc
test
add
jae
pop
movsb
aad
pop
sub
int3
bswap
push
into
cwtl
in
ja
push
push
inc
es
cmpsl
mov
andl
xor
mov
mov
call
or
repz
aad
mov
mov
leave
cmp
loopne
ljmp
movsl
mov
mov
add
jnp
pop
xor
mov
icebp
mov
xchg
push
movsl
sarl
addl
test
adc
mov
arpl
pop
rcrl
jle
clc
fldenv
or
insl
push
in
pop
or
inc
cltd
pop
sub
xor
mov
and
lret
or
or
sub
add
test
push
bound
sub
clc
cltd
in
and
pop
in
in
inc
cmp
lods
lods
lods
mov
fstpt
or
scas
pop
bound
jge
arpl
jae
cltd
push
mov
outsb
leave
nop
sbb
insl
stos
movsl
xchg
jae
jmp
fnstenv
fucomp
jno
xchg
aad
les
into
push
jns
push
mulb
pop
lds
mov
inc
imul
movsl
inc
pushf
inc
xchg
test
lea
sub
daa
mov
pop
aam
mov
mov
out
hlt
add
aad
loopne
aas
jge
inc
repnz
ficoms
daa
aam
xor
ljmp
mov
dec
fwait
dec
mov
mov
xchg
bound
stc
add
insl
or
aas
jbe
pushf
cmp
enter
hlt
pop
mov
test
in
outsl
or
mov
sbb
sbb
push
cmp
jo
das
inc
jnp
push
inc
pop
pushf
aam
movsl
xor
pop
mov
cmp
and
sub
fidivl
sbb
cmp
in
stos
xor
rclb
push
in
sub
push
or
jge
cmp
push
mov
mov
popa
fmulp
cmp
rclb
sub
fbstp
mov
pop
xor
push
lods
or
push
shrb
cmpsb
fadd
mov
sub
mov
lea
cwtl
outsl
or
xchg
inc
jg
icebp
mov
jbe
and
jo
imul
lods
inc
or
mov
leave
xor
stos
loopne
xchg
xchg
pop
cld
xorl
sbb
sarb
adc
fidivl
or
test
lret
jne
add
xchg
jb
iret
icebp
fdivrl
push
stc
test
pop
push
push
fnstcw
mov
push
lea
lcall
cmp
adc
sarb
jge
pop
out
push
xchg
xchg
cmp
and
jle
pop
ret
dec
daa
jp
out
jbe
scas
dec
call
in
xchg
stos
loopne
jae
lea
mov
es
mov
mov
ret
int
cmpsb
stc
push
push
ror
xor
ret
loop
movsb
test
mov
cmp
push
scas
roll
les
fwait
int
add
scas
lahf
push
aas
fdivl
mov
out
test
inc
sub
and
aaa
movsl
push
notb
xor
xchg
jge
call
sbb
decb
pop
out
vmovapd
shlb
xchg
decl
or
outsb
inc
or
data16
loopne
jns
cmc
repz
iret
mov
shr
or
or
inc
xchg
in
mov
jl
mov
mov
pop
adc
pop
in
dec
xchg
in
es
bound
lds
rclb
add
insl
pushf
out
mov
push
je
test
sbb
andl
movsb
xchg
fsubrl
pop
ret
pop
out
frstor
sub
test
mov
or
sar
and
fisubs
mov
xchg
dec
loope
xchg
add
push
fimull
xchg
mov
cmp
sub
jbe
pop
jg
push
xor
inc
mov
mov
ret
sbb
lcall
ds
xchg
xor
rolb
out
rclb
xchg
pop
in
mov
dec
xor
pop
xchg
pop
sbb
out
push
int3
cli
and
fildl
jne
fistpl
pop
push
out
or
xorb
inc
test
loopne
repnz
or
dec
cmp
dec
cmp
cmp
jnp
sbb
das
sbb
or
fcmovnu
mov
push
push
ss
or
ja
pcmpgtw
cmp
imul
sbbb
pop
mov
push
insb
cs
inc
sahf
into
js
lea
leave
mov
out
cmp
daa
cmpsb
loop
fs
sti
cld
arpl
add
inc
or
mov
sbb
lret
lret
cli
stos
enter
sbbb
dec
mov
dec
inc
jle
aam
cmpsl
cmp
imul
out
test
push
xor
ja
shrl
pop
cmpsb
sbb
mov
aas
cmp
or
out
dec
sbb
xor
cmpl
ja
or
in
mov
popf
xor
dec
cmpsb
jp
and
int
test
xchg
insb
mov
sbbl
daa
mov
jnp
jecxz
adc
and
addl
inc
push
je
and
push
pop
xor
mov
aas
shl
sahf
or
xor
mov
mov
outsb
jnp
mov
or
inc
jns
gs
sbb
mov
or
jae
test
mov
mov
sbb
lea
data16
jle
jbe
pop
int3
mov
dec
xchg
xor
test
mov
shrl
imul
inc
mov
in
mov
push
test
test
xor
bound
lret
push
or
jle
pop
or
les
add
scas
mov
dec
xorb
add
sbb
cmp
mov
add
jmp
pop
push
jecxz
jecxz
push
stos
mov
jecxz
mov
scas
lea
stc
stos
inc
cmp
sub
or
addb
in
popf
xchg
jmp
sub
sbb
test
and
test
push
inc
sbb
out
inc
jl
pop
xchg
dec
int
jmp
inc
cltd
mov
mov
xchg
xchg
sub
es
pop
inc
sub
push
rcr
mov
pop
test
adc
mov
push
test
andb
sahf
inc
cmp
mov
push
or
out
or
xchg
movsl
xor
js
shr
add
xor
pop
xchg
jl
shrb
arpl
add
test
jns
cmp
mov
aaa
rorl
jne
jp
adc
in
roll
cmc
jge
push
lods
sbbl
lea
lods
jl
xchg
fdivr
popa
jl,pn
das
and
mov
xchg
rolb
test
or
fninit
mov
jmp
aas
jp
popa
pop
inc
jecxz
and
xor
cmc
aaa
ret
or
mov
jb
add
push
mov
jmp
add
push
mov
ret
iret
fdivrl
movsb
bound
orl
jbe
xchg
mov
lret
push
arpl
dec
push
mov
mov
shlb
out
js
push
inc
push
jnp
pop
pop
fmull
add
addl
outsb
and
es
mov
add
lock
rclb
push
xor
leave
xor
hlt
xchg
fimull
xchg
cli
xchg
xchg
bound
xor
xchg
ds
test
insb
enter
add
pop
out
imul
aaa
dec
push
shl
pusha
and
nop
aad
mul
push
adc
cmpsb
push
stos
jae
nop
cmc
pop
inc
icebp
sbb
int3
cmp
push
or
mov
test
xchg
cld
xor
mov
insl
xchg
lock
loopne
push
add
jle
sub
inc
or
cwtl
shld
sbb
sbb
cli
pop
outsb
or
pause
xlat
sar
mov
add
fstl
jno
push
push
rcll
fs
popa
mov
jbe
xor
out
and
push
inc
mov
filds
pop
pop
jno
push
mov
rcl
andb
or
cmc
adc
fwait
pop
outsb
or
fprem1
dec
icebp
pop
loop
push
mov
in
cmp
into
mov
or
or
shlb
scas
push
out
jnp
stos
jo
das
sub
mov
xchg
xor
pop
lock
aam
sbb
daa
push
mov
enter
xchg
divb
cmp
divb
sbb
out
cmp
sbb
jnp
cmp
mov
jb
test
lcall
daa
ror
loopne
sub
ffree
inc
xor
test
xchg
cs
mov
std
aaa
mov
cltd
leave
mov
mov
call
adc
in
fiaddl
fnstenv
in
push
mov
call
dec
adc
adc
xlat
and
sub
addr16
das
push
add
filds
mov
cmp
ljmp
push
fmull
pop
xor
aaa
lcall
adc
movsw
mull
clc
mov
pop
or
cmp
mov
sbb
roll
ljmp
xchg
jae
in
arpl
pop
mov
sbb
sarl
push
jge
movsb
pop
jae
cmp
push
mov
inc
insb
into
lods
push
add
cwtl
lahf
arpl
add
and
pop
or
ljmp
les
and
and
sbb
les
fs
fistpl
aam
mov
movsl
or
cmpsb
ds
mov
test
jnp,pn
pop
mov
imul
sub
sbb
sub
push
aaa
rolb
addr16
out
inc
inc
push
jne
popa
mov
xchg
icebp
addr16
cmc
test
iret
mov
jl
in
ss
pop
push
jg
cmp
mov
popa
jbe
fbld
adc
adcl
or
rorl
add
push
mov
loope
cmc
ss
push
addr16
fnstsw
rcrl
sbb
jne
push
dec
mov
test
jbe
gs
mov
jne
outsb
xchg
dec
jb
lods
mov
lret
or
add
add
mov
stc
outsl
mov
fsubrs
mov
mov
lcall
cmp
inc
in
mov
xor
pmulhuw
add
or
ret
fists
in
adc
rcr
stos
push
push
xor
jmpw
lcall
into
adc
lret
fmulp
in
xchg
js
jbe
inc
clc
xchg
add
mov
lahf
push
inc
stc
fcompl
jecxz
mov
ret
cmp
scas
rclb
add
stos
test
test
test
push
cli
imul
push
pop
ljmp
in
ss
call
or
dec
xor
leave
sub
cmp
jae
xchg
or
jae
push
fsub
xor
and
int
mov
fmul
adc
or
icebp
std
push
pop
call
pushf
shl
pop
pushf
in
add
rclb
fldt
fsubp
jae
test
adc
xchg
pop
std
aam
push
lret
inc
divl
push
sub
jge
imul
jmp
ret
inc
jo
sbbb
fldl
in
pop
aas
push
push
xor
jecxz
and
push
out
idivb
jecxz
repz
push
mov
outsb
loop
cltd
cmp
nop
push
pop
jl
cld
loop,pt
pop
mov
mov
loope
or
js
push
push
or
ficompl
sbb
test
and
sub
xor
repz
pop
push
jo
scas
xchg
dec
icebp
sbb
bound
aaa
arpl
nop
sub
imul
rcll
xor
pushf
mov
add
lret
add
notb
in
mov
rorl
pop
mov
jp
les
add
adc
in
mov
stos
xchg
and
jne
cmp
orl
ret
insb
push
je
push
sarl
mov
push
rcrl
shlb
fimull
jnp
pop
das
shlb
or
fcoms
or
xor
mov
movsl
inc
mov
rorb
jbe
or
sbb
imul
xor
jbe
scas
add
sbb
mov
adc
push
and
js
sub
in
push
in
pop
iret
je
pop
inc
sub
pop
aas
xchg
inc
push
push
mov
jle
mov
sub
mov
js
or
rcrl
aaa
es
xchg
inc
and
into
movsl
adc
xchg
sbb
inc
xchg
fstpl
int3
xor
fisubl
fisttpll
inc
cmp
mov
cmp
mov
lret
in
das
je
enter
mov
mov
sti
cmp
cmp
pop
decl
repz
movsl
mov
and
shrl
shll
iret
loope
adc
aam
test
xchg
inc
shll
pusha
addr16
push
adc
pop
xor
outsb
arpl
jmp
fidivl
rorl
add
sbb
shr
jl
pusha
into
adc
lods
jo
mov
mov
xlat
cltd
js
push
mov
mov
test
inc
or
jg
xchg
jbe
inc
push
lret
cmp
or
add
push
rorb
xchg
cli
xor
fisttpl
movsb
sub
pop
nop
repz
popa
xor
shlb
dec
icebp
adc
xchg
pop
test
cmp
pop
insb
mov
inc
ds
mov
and
mov
dec
divl
out
pop
dec
dec
xchg
jne
adc
fistpll
cmp
shll
inc
xor
ds
in
mov
mov
mov
ret
lahf
add
sbb
jo
xchg
decb
or
in
addr16
cmp
sarb
fisubl
mov
jo
mov
enter
mov
inc
dec
mov
pop
pop
imul
ljmp
cmc
leave
movsb
xchg
mov
cmc
orb
into
leave
outsb
lds
adc
pop
jne
lods
mov
je
push
lahf
fisubs
stos
mov
clc
jo
adc
and
out
movsb
adc
sub
addr16
stos
or
movsl
add
inc
adc
xor
or
dec
sub
out
aas
push
icebp
incl
pop
idiv
cld
mov
cmp
or
insb
xchg
daa
mov
ret
mov
cltd
pop
mov
movsb
mov
ljmp
gs
xor
cltd
cmp
ja
jmp
pop
enter
xor
pushf
or
enter
divl
inc
stc
fisubrs
movsl
xchg
mov
inc
movsl
jl
xchg
pushl
add
inc
lahf
inc
pop
dec
jp
adc
pop
scas
sub
and
arpl
in
xchg
jl
movsl
stc
fucom
inc
aas
lret
cmpsl
dec
cmpl
fwait
sahf
hlt
mov
gs
movsl
sub
xor
add
or
notl
fs
int3
adc
xor
sub
gs
xchg
or
mov
rcr
hlt
dec
fstps
out
out
or
call
sarb
stc
jecxz
xchg
das
add
xor
xchg
pop
xchg
in
jae
mov
sub
out
popf
xchg
repnz
or
jl
sahf
jno
mov
shr
jo
out
xchg
in
jnp
add
ret
and
sub
cmpsl
movb
fstpt
pop
and
adc
cli
mov
push
inc
in
sahf
inc
sbb
mov
or
add
cmc
cmc
movsb
jae
dec
xchg
aas
lods
cmp
in
je
imul
popa
in
jp
pop
mov
cwtl
ss
adc
mov
dec
xor
adc
add
movsb
gs
xrelease
daa
and
ret
js
jg
dec
lods
jle
sbb
call
sbb
sub
js
paddd
cmp
or
push
inc
hlt
stos
and
pop
icebp
sarb
adc
mov
jnp
mov
std
lds
cmp
push
pop
sub
mov
mov
mov
repz
sbb
inc
sahf
mov
cmp
xor
jnp
hlt
pop
jae
sti
call
test
mov
std
push
hlt
push
inc
mov
nop
adc
and
loop
icebp
push
sub
enter
mov
pop
shlb
ror
xor
xchg
sarl
clc
fcompl
push
repz
fwait
roll
xlat
stc
mov
mov
mov
fdivs
insl
cmc
cli
out
add
xchg
mov
scas
shrl
in
icebp
and
loope
in
sbb
pop
mov
mov
add
les
and
outsb
pop
sbb
call
lcall
xchg
dec
mov
sbb
mov
jb
lock
test
xchg
xchg
adc
inc
pop
movsl
cmp
inc
lea
in
fmull
sub
ret
stc
mov
pop
push
pop
fnstenv
ret
loope
orb
lahf
mov
fisubrl
hlt
or
lea
mov
orl
cmp
mov
push
jmp
lret
add
stc
lods
mov
push
cmp
or
jno
and
std
xchg
ss
mov
sub
inc
movsb
pop
fisttpl
leave
aaa
icebp
fmuls
fiaddl
test
fbld
xor
popf
cmp
test
adc
and
dec
sub
iret
inc
inc
pop
and
ret
in
out
stos
and
cmpsl
out
pop
decb
xchg
mov
xchg
fldl
xor
adc
int
sarl
mov
or
fsubs
sub
pop
sbb
ljmp
insb
add
sub
fstpt
cmpsb
iret
fnstcw
sti
in
hlt
mov
pop
inc
jae
in
rcrl
xchg
pop
xchg
out
incb
cwtl
adc
jg
mov
shll
lret
and
push
jb
mov
cmp
imul
dec
sarl
je
or
xchg
jge
jl
test
fmull
adc
scas
cli
loopne
pop
out
fucomp
scas
fidivl
loop
fstpt
pop
repnz
adc
out
mov
test
pop
push
scas
fcoms
mov
mov
or
sarl
flds
test
mov
add
xchg
lock
push
ljmp
dec
adc
cld
out
and
and
outsl
jg
sbb
imul
or
dec
inc
cmp
clc
pop
out
hlt
mov
jmp
imul
iret
in
or
push
mov
xchg
adc
repnz
lcall
push
inc
cmpsl
jbe
and
jno
pop
mov
xor
repz
jp
and
mov
mov
pusha
in
add
push
jnp
push
repz
mov
inc
cmp
cs
sarb
ret
mov
cld
mov
das
mov
test
test
out
mov
and
rorb
xor
repz
lea
sub
push
dec
rcrb
mov
jl
fs
or
dec
aaa
lods
shrd
pop
mov
pop
inc
or
pop
pushf
mov
cmp
pop
xchg
sahf
or
sarb
cmp
sbb
push
cmp
repnz
into
repz
out
jg
xor
fst
xor
shll
mov
stos
mov
imul
f2xm1
rcrb
lret
sahf
js
jno
hlt
pop
xor
cmp
adc
in
std
inc
and
mov
jb
loop
mov
jmp
dec
lea
sti
lahf
mov
cmp
cmc
aas
mov
fsub
inc
sbbb
or
fistps
rolb
subl
adc
nop
sub
inc
movntps
push
js
test
pop
push
sahf
outsl
xchg
loop
sahf
pop
jl
inc
mov
int
leave
dec
push
push
inc
xchg
rcrb
test
out
push
xor
enter
dec
fsub
mov
push
jne
das
inc
xor
lea
data16
into
or
mov
lret
fcoms
decb
jmp
xchg
leave
mov
popa
mov
pop
cli
xor
test
hlt
mov
xor
xchg
jp
cmp
fiaddl
adc
incl
and
jle
pop
mov
xchg
xchg
and
roll
push
or
xor
cmp
movsl
jmp
stos
inc
mov
push
jl
rdtsc
jo
push
push
jge
and
int3
adcl
mov
cli
jbe
pop
out
test
inc
jge
or
dec
or
pop
jae
xor
mov
inc
idivb
je
jmp
in
dec
mov
inc
push
scas
jo
xlat
push
mov
sub
cltd
mov
dec
pop
cmp
push
jecxz
hlt
and
call
mov
pop
jp
pop
and
loop
sbbl
repz
pop
xchg
aaa
sbb
icebp
mov
xlat
lock
outsb
fcmove
sahf
addb
mov
sub
stos
lods
insl
sub
mov
js
fidivl
inc
repnz
xor
daa
ja
push
out
rorb
shrl
fcomp
loop
fidivl
leave
add
mov
scas
adc
dec
sbb
mov
jb
xchg
int3
add
shll
ljmp
add
mov
push
test
iret
pop
bound
fstps
insb
je
ds
sbb
and
mov
xor
or
fmuls
or
bound
lahf
lea
xchg
xchg
lods
xchg
icebp
pop
or
sti
mov
aas
mov
cmp
xorb
xchg
lds
lods
daa
daa
daa
pop
or
movsl
rcl
aas
dec
cmp
cld
ret
bound
loope
ds
cmc
insl
out
adc
cmp
sub
push
push
icebp
lods
fsubs
imul
rcl
xor
pop
gs
lods
jnp
adc
or
mov
addr16
test
pop
movsb
cmp
aam
testb
stc
stc
pusha
cmpsl
push
pop
fs
dec
push
dec
xchg
adc
pop
notb
cmp
inc
jns
inc
jle
and
add
mov
enter
push
cmp
sbb
push
es
adc
cmp
test
cmp
pop
lret
out
pop
ljmp
add
push
mov
daa
dec
scas
push
or
lock
inc
mov
add
cmpl
lret
adc
fimull
xor
adc
inc
push
ljmp
push
test
and
push
hlt
xchg
xchg
push
xor
pop
das
xchg
xlat
cmpsb
shlb
pop
or
xor
or
xchg
dec
cmp
or
and
insl
nop
pusha
test
or
pop
shlb
addr16
ljmp
mov
iret
sti
mov
ret
andl
inc
jmp
jne
mov
bound
hlt
mov
pop
jnp
fdivl
xor
test
js
lcall
mov
sbb
or
dec
mov
push
clc
dec
idivb
sub
sub
mov
cwtl
mulb
mov
lods
mov
pop
mov
xor
aaa
aad
mov
push
outsb
sbb
insl
rcrl
mov
push
test
push
ljmp
lods
xor
ret
in
sub
jne
push
shl
fbld
cmp
xchg
pop
aaa
dec
call
dec
movsl
and
fs
jg
xor
sbb
mov
ljmpw
or
mov
cmp
gs
ret
fdiv
aad
inc
push
jnp
push
repz
lahf
dec
xchg
fists
scas
push
stc
nop
popa
aaa
je
push
pop
ja
xlat
stos
cs
inc
je
je
jmp
hlt
cmpl
fsubs
mulb
pop
mov
nop
mov
and
pop
out
iret
pop
and
es
jmp
add
cmp
popa
lods
or
xchg
xorl
call
call
call
push
fwait
movb
sahf
dec
jmp
inc
jge
inc
sub
xor
loop
xor
xchg
ja
cmpsl
mov
gs
jmp
addr16
mov
or
rcrl
mov
insb
lods
mov
inc
loop
jo
pop
ss
repnz
out
push
pusha
stc
dec
bsf
xor
jae
lods
sbb
jl
mov
adc
jecxz
jmp
push
fmull
fstp
push
dec
xlat
and
les
mov
aaa
dec
lods
dec
xchg
fimuls
popa
aaa
je
push
pop
ja
enter
xchg
push
sub
lock
fsts
and
jle
fs
xor
fidivs
lods
outsb
fwait
andb
pop
lods
push
push
fildl
jmp
sbb
ja
inc
data16
or
cmpsl
into
gs
add
mov
xchg
addr16
xchg
mov
cmp
test
push
test
lret
add
jnp
inc
lahf
lret
mov
inc
jae
pop
mov
mov
inc
push
call
test
adc
cli
pop
and
sarl
sahf
push
cmpsb
fs
ljmp
jp
arpl
mov
pop
lods
pushl
jbe
rorl
pop
mov
pop
pop
ja
mov
mov
lds
or
mov
sti
xor
mov
xor
fidivrs
iret
ficoml
fisttpll
inc
imul
sbb
icebp
ja
loope
int
pusha
pmaxub
lcall
pop
pop
lock
pop
lret
or
shlb
xchg
mov
pop
insl
push
mov
pop
jg
cmpsb
sti
ja
hlt
push
pusha
fldl
into
outsb
pop
mov
jge
mov
mov
fcomps
xchg
xchg
cld
inc
pop
cmpsl
mov
test
das
mov
and
mov
xchg
test
bound
in
mov
rol
ja
shlb
jbe
rcll
xor
in
fists
pusha
jecxz
sti
or
adcb
mov
xor
dec
add
pop
data16
mov
loop
es
movsl
pop
mov
sbb
enter
or
out
outsl
dec
xchg
aad
popf
shll
add
push
movsb
pop
sti
xor
sbb
adcb
jg
jb
cmpb
shll
push
loopne
lods
in
sub
into
testl
lods
jb
daa
inc
xchg
cmp
jnp
popa
sub
adc
and
aam
dec
in
in
lods
mov
xor
pop
jo
mov
xor
xor
lea
nop
sub
adc
cmp
cli
push
fsubp
lods
mov
orb
in
mov
insl
fisttps
mov
aaa
out
call
jecxz
lea
jo
test
mov
cmp
jne
push
scas
push
fwait
cmpb
pop
testl
mov
jge
lcall
pop
lods
mov
and
mov
rolb
cmpsl
and
adc
adc
movsl
in
outsb
subl
xor
mov
push
aam
push
mov
mov
stos
dec
and
fistps
int
mov
mov
arpl
mov
mov
xchg
mov
push
popf
pop
and
jecxz
jne
inc
ss
dec
xor
adc
and
mov
out
ds
pushf
and
pop
mov
and
stos
popa
jg
and
js
mov
push
imul
ret
scas
mov
adc
mov
lods
clc
mov
jnp
lea
jl
test
test
ss
in
arpl
push
clc
test
loop
aam
mov
xchg
roll
imul
into
pop
jmp
sarb
xchg
dec
and
cmp
test
rcrb
out
ja
aaa
dec
and
loop
and
shrb
repz
lock
rcrl
jne
xor
sub
jo
sahf
mov
inc
adc
jno
div
jecxz
xor
cmp
loope
add
sbb
lcall
push
add
ja
mov
and
mov
jmp
push
cltd
or
or
mov
push
mov
fcmovne
cmp
mov
imul
mov
mov
adc
inc
fnsave
or
jp
shlb
pop
pop
adc
cmc
pop
mov
sub
icebp
sahf
bound
add
into
and
mov
cmp
fcoml
lods
dec
and
add
std
inc
test
fsubrl
push
sub
sbbl
fisttps
jmp
xor
outsl
cli
xor
and
push
add
call
mov
loopne
cmp
mov
popa
jmp
mov
outsb
jno
or
fdivrl
into
sti
pop
out
js
scas
add
bound
sub
cmpsb
lock
mov
mov
scas
xchg
aaa
push
mov
dec
pushf
push
xor
or
xlat
leave
mov
or
scas
repnz
bound
je
repz
aas
call
adc
mov
testl
jmp
fcmovu
mov
push
sbb
pop
fists
scas
out
mov
cmp
fstpl
xlat
lahf
iret
and
push
jmp
sub
aas
lahf
sahf
push
jg
pop
std
popa
mov
test
sarl
mov
pop
rorl
int
mov
cmovge
pop
es
add
sub
xchg
les
adc
mov
lret
rorb
dec
pop
das
lcall
loope
cmpsb
dec
add
adc
ja
pop
arpl
fbstp
pop
mov
or
xchg
add
loop
rclb
mov
cmpsl
movsb
addl
les
jne
push
push
push
out
push
xchg
and
jge
mov
dec
jne
js
and
mov
xor
mov
shll
add
jge
fyl2x
lahf
das
sub
push
sarl
jo
stc
lret
adc
push
movsb
mov
mov
lret
lods
test
test
or
pop
and
loop
ds
cmp
in
fcmovb
xor
cltd
out
cmpsb
dec
adc
push
popa
pusha
mov
mov
nop
lds
sbb
xchg
or
jmp
sbb
insb
mov
inc
cltd
in
testb
or
or
cmp
fmull
mov
popf
xchg
jbe
push
cmc
mov
add
mov
add
dec
in
mov
jne
out
adc
xlat
push
push
push
rorl
push
or
jno
loope
and
lret
inc
mov
stos
pop
loopne
push
cmp
xchg
dec
stos
mov
in
pop
xor
adc
xor
subl
sbb
mov
pop
jecxz,pt
xchg
mov
adc
sahf
add
cmc
lret
jno
xor
and
in
cmp
test
or
cli
outsb
ljmp
mov
popa
lea
cmpsl
inc
aas
xlat
jecxz
fadds
push
cli
or
jl
and
add
arpl
and
and
or
les
fildll
cmp
aas
jno
pop
cltd
dec
idivb
notl
xor
dec
push
push
push
ja
stc
repnz
mov
pop
mov
popa
pusha
aad
scas
mov
jno
lds
test
into
and
in
or
lret
sahf
out
in
push
dec
fmulp
ficompl
sub
movsb
and
outsl
add
mov
push
lds
sub
mov
daa
jb
dec
mov
sub
sbb
adc
sub
pop
loope
pop
shl
push
push
scas
sub
sub
nop
addr16
loopne
pop
bound
cli
cmp
nop
call
dec
jmp
cmp
mov
mov
icebp
sbb
test
mov
clc
shrl
mov
mov
hlt
push
mov
sub
adc
mov
add
test
nopl
out
cli
mov
xor
xchg
cmp
fwait
repnz
add
mov
mov
lret
shrl
test
mov
aad
repnz
test
icebp
jbe
rcl
adc
push
aad
iret
aas
mov
hlt
add
fisttpl
inc
lods
jecxz
sti
lock
lods
adc
pop
sbb
dec
stos
jb
xadd
insb
mov
and
nop
add
fld
pop
mov
dec
or
mov
outsb
and
xlat
nop
pop
push
and
or
mov
push
add
test
outsl
jb
xchg
push
sbb
xchg
push
push
or
sub
ret
cmp
pusha
mov
test
lock
outsl
mov
push
sahf
sub
and
jg
into
add
fstps
xchg
add
test
imul
mov
cmp
out
sub
je
xor
fistl
popa
xchg
xchg
or
mov
lock
dec
imul
clc
push
mov
mov
and
and
jp
xor
in
jle
test
inc
sub
sahf
mov
sub
sub
pop
notl
stos
dec
inc
popa
sahf
loope
leave
shlb
sahf
lea
push
lret
add
sbb
push
ret
jecxz
loopne
xor
lods
pop
scas
or
xchg
es
xlat
mov
cmp
outsl
aaa
clc
push
sti
loop
imul
stc
test
xchg
je
xchg
push
cmpsl
stc
fs
movswl
insb
int3
hlt
mov
jae
clc
pop
dec
and
sbb
push
mov
ret
inc
pop
test
xor
adc
ds
xchg
push
mov
and
testl
je
sub
ljmp
not
out
lock
cmc
jno
or
mov
cmp
jnp
fwait
test
ret
or
ss
cmp
jecxz
push
mov
push
or
mov
sub
adc
js
mov
jl
xchg
xchg
in
rorb
and
aad
xchg
adc
mov
pop
or
add
inc
rcrb
sbb
adc
sub
jl
cmc
adc
aas
mov
mov
mov
push
fsubrs
lret
les
aad
mov
int
ds
xor
insl
loopne
ds
push
xorb
cmpsl
rolb
movsb
mov
add
rcrl
cmp
mov
push
mov
out
mov
xchg
mov
addr16
push
ret
cmp
call
cli
xor
mov
loop
push
in
imul
popf
out
mov
inc
ljmp
jbe
sbb
pusha
xchg
add
adc
jns
stos
push
push
dec
insl
inc
jp
popa
ss
leave
or
jg
mov
mov
push
sub
mov
testl
sbb
pop
push
orl
pushf
sti
stc
fstps
mov
push
xchg
cwtl
cld
jno
test
stos
pop
xor
test
out
cltd
pop
out
fwait
xchg
mov
mov
mov
jo
stos
cli
add
lods
je
fbstp
mov
adc
jns
sbb
outsb
stc
mov
sub
adc
sahf
loopne
mov
arpl
jae
in
mov
mov
dec
and
inc
sbb
and
mov
xor
fildl
aaa
sub
stos
sbb
adc
or
or
pop
inc
xor
scas
inc
int3
mov
pusha
lret
lcall
lock
jmp
lret
mov
inc
arpl
cmc
cmp
adc
dec
je
add
jg
mov
cli
jne
stos
push
insb
add
xor
fisubs
push
aaa
jo
sub
jle
sbb
lds
sti
ret
xor
flds
or
dec
fldl
pop
dec
cmp
cmpl
divb
or
loop
sub
rclb
sbb
mov
mov
shlb
jo
xlat
or
jb
adc
dec
aad
stos
jns
jbe
mov
mov
aam
pop
cs
xchg
cmp
fdivl
aad
cs
dec
mov
mov
faddl
push
or
mov
jb
mov
dec
cmpsb
stc
jno
ds
adc
lcall
jmp
test
lods
jb
xchg
cmc
xchg
les
mov
call
push
sbb
jecxz
ljmp
mov
mov
jl
push
sub
adc
push
dec
jae
push
inc
cltd
popl
dec
dec
shlb
pop
and
jne
xchg
hlt
xlat
pop
cmpsb
or
jge
xorl
sbb
adcl
inc
sub
cmp
std
cmp
sub
cmp
xchg
test
and
das
aad
xor
inc
jl
mov
or
hlt
pusha
dec
adc
jae
cld
fwait
lahf
orb
jns
cmp
lds
stos
push
xchg
push
cmp
pop
xchg
lahf
sub
add
inc
ja
dec
or
sub
test
push
lret
loopne
dec
push
je
or
ljmp
loopne
xchg
lret
test
pop
dec
in
aad
mov
pop
lock
pop
xchg
in
cmp
ja
out
dec
mov
ljmp
adc
or
cmp
adc
or
jp
add
and
pop
add
mov
nop
addr16
xchg
or
bound
in
cmp
repz
test
and
mov
cwtl
sbb
pop
pop
ret
or
insb
es
addb
mov
adc
cld
jnp
aas
cmpl
xor
dec
enter
insb
inc
mov
xchg
lock
adc
jno
fdivrs
pop
sbb
aad
add
mov
push
cmp
add
imul
sub
popf
lret
std
and
out
push
in
icebp
repz
fnstcw
ljmp
jle
xlat
pop
test
mov
js
xchg
mov
fbld
les
cmpb
jge
data16
sub
out
pop
idivb
pop
cmp
and
ret
andl
inc
adc
ret
in
or
dec
adc
pusha
push
or
dec
or
jbe
sub
and
dec
xchg
cld
cmp
adc
cmp
mov
adcb
popa
aaa
and
ret
and
sub
dec
cmovg
dec
inc
add
add
pusha
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
jmp
les
rclb
test
pop
pushl
inc
fsubp
jl
dec
add
iret
repnz
jp
loop
cmp
dec
add
inc
decl
cmp
xchg
rorb
inc
xchg
sub
ljmp
lret
lret
out
imul
popf
mov
mov
mov
out
lret
sbb
inc
jp
push
ret
adc
lods
pop
push
push
and
in
aas
out
fwait
pop
mull
cwtl
ret
pop
xor
test
fwait
cmp
or
pop
je
jae
jecxz
arpl
addr16
adcb
roll
pop
imul
mov
sbb
push
pop
lret
cmp
mov
cmp
into
dec
mov
cmp
push
jb
pop
or
push
and
insb
es
out
cmp
lret
ret
xlat
in
lds
loopne
fidivs
inc
fstp
sub
lea
or
outsb
add
xor
mov
ljmp
movsl
repz
frstor
cmp
ljmp
aad
rorl
sbb
rep
cli
push
jmp
pop
test
sub
scas
mov
shll
pop
push
lods
stos
inc
fsubrs
jle
xchg
adc
inc
xchg
imul
jno
jmp
push
cmc
cmc
and
mov
cmp
inc
imul
ljmp
in
xchg
bound
sbb
xor
mov
pusha
xlat
xchg
push
jo
fsubl
pusha
pop
call
cmp
ss
xorl
xlat
push
loop
sbb
jmp
xchg
xchg
mov
dec
cmp
cli
es
pop
scas
sub
test
cmp
test
xlat
dec
mov
xchg
mov
mov
mov
inc
sub
xor
or
xor
data16
xchg
add
mov
lea
stos
adc
inc
xchg
xor
cmp
xor
xor
fsubrs
dec
adc
jge
jne
sbbb
push
ret
xor
out
jmp
jmp
test
cmp
idiv
es
das
jge
es
mov
cmpsl
mov
pop
mov
ret
scas
sub
sub
mov
fdivl
popf
cli
mov
mov
dec
mov
xchg
sar
xchg
adc
or
mov
add
jecxz
out
je
rcll
sbb
cwtl
lods
adc
cwtl
xor
clc
fadds
jbe
sub
mov
iret
popf
or
outsl
mov
pop
insl
pop
xchg
xor
and
push
leave
adc
ljmp
out
add
jle
xchg
loope
icebp
push
cltd
mov
orb
push
lock
inc
xor
daa
mov
mov
or
in
dec
movsl
or
push
add
das
adc
movsl
fmuls
pop
push
imul
ret
fwait
repnz
arpl
lods
repz
and
fisubl
js
cltd
pop
jge
sahf
loop
xor
je
cli
cmp
movsb
sbb
xchg
fisttpll
insl
push
adc
fstpt
std
pop
lret
dec
jns
stos
leave
ficompl
mov
leave
and
ja
shl
cmpsl
in
add
mov
push
in
jecxz
inc
aam
xor
js
adc
mov
ret
mov
cmp
xor
out
insb
jmp
dec
sbb
aaa
fs
pop
ficoml
in
push
jns
sub
mov
outsb
popf
add
pop
dec
and
nop
xchg
xor
mov
out
lods
jp
leave
in
decb
xor
lahf
or
push
ficoms
gs
lahf
fsubrs
add
mov
pop
jo
imul
in
insb
jge
push
lock
imul
cmpsb
insl
rorb
lds
test
push
push
aas
sub
ljmp
enter
cwtl
mov
repz
push
jne
cmp
fnstsw
cmp
cs
into
xchg
ja
inc
clc
inc
sub
sub
mov
xchg
jne
push
fcoms
jge
cmp
sbb
fsts
mov
pop
in
leave
cld
mov
dec
jg
xchg
add
mov
or
adcb
pop
xchg
or
into
jnp
mov
inc
push
xor
push
out
std
or
jle
ds
or
icebp
sbb
or
inc
xchg
mov
inc
sub
or
je
lock
xor
into
add
in
out
pushf
daa
xor
dec
push
push
jp
inc
test
mov
loopne
sbb
aam
xor
pop
inc
cwtl
or
push
push
pop
out
xor
and
repnz
mov
or
cld
sub
mov
pop
adc
leave
xchg
nop
icebp
scas
push
ror
dec
je
and
inc
jns
lods
mov
test
mov
adc
addr16
decl
xlat
mov
lcall
xchg
inc
push
addb
inc
addb
inc
push
addb
inc
addb
add
addb
dec
inc
mov
and
out
xlat
xchg
fidivl
push
scas
shr
stos
les
lret
mov
sbb
inc
loope
or
leave
mov
js
xchg
pop
insb
out
jnp
sbb
mov
aas
jnp
jecxz
xchg
or
jmp
pop
push
xchg
daa
scas
adc
adc
in
push
test
les
add
xchg
fstp
nop
or
dec
jo
xlat
cmp
xor
int
dec
mov
sarl
popf
inc
imul
in
sub
mov
scas
ja
and
mov
jno
incb
movaps
cmp
add
ss
sbb
cmp
mov
xor
mov
rcrl
jae
jp
cmpsl
pop
pop
add
xchg
ds
sub
mov
dec
or
shrb
mov
sbbb
stc
xor
or
jns
cwtl
dec
add
fcmovnu
sbb
int
das
xchg
mov
cmp
insl
push
jmp
or
arpl
fdivl
or
aaa
fstpt
fwait
mov
and
dec
adc
ljmp
jg
adc
mov
scas
add
sbb
aam
sbb
dec
mov
aam
xchg
mov
cld
sbb
sub
enter
lods
or
fisubrs
add
filds
mov
cmpsl
dec
lahf
inc
lods
aas
aam
fistpll
bnd
sarl
push
insl
dec
adc
cmp
cmp
mov
fwait
ret
ljmp
mov
hlt
sub
imul
mov
xlat
popa
sub
bound
xchg
xchg
insl
dec
movsl
inc
insb
test
adc
or
adc
pop
push
inc
jne
or
fndisi(8087
sbb
mov
cmp
mov
fldt
dec
es
loop,pt
subl
push
pop
pop
lret
adc
aam
dec
fistpl
clc
or
inc
push
icebp
push
in
jb
lcall
dec
xchg
repz
jnp
inc
mov
mov
dec
rcll
enter
mov
pop
mov
aam
mov
lahf
pop
mov
repz
inc
jg
stc
pop
inc
cmpsb
push
es
out
mov
lock
je
test
push
xchg
mov
pusha
push
or
outsl
cmpsb
dec
jb
mov
lock
icebp
sar
push
add
mov
pop
jge
scas
dec
sbb
dec
in
add
fs
xchg
pop
push
or
sub
ljmp
push
add
cmc
or
xchg
pop
pop
and
and
jle
dec
push
test
xor
imul
push
or
inc
cmpsb
movsl
cwtl
hlt
adc
in
mov
jo
jg
std
dec
mov
out
lds
popf
pop
mov
inc
out
inc
repz
xor
mov
push
fadd
xor
mov
in
xor
inc
sub
out
pop
pop
imul
test
scas
inc
sub
test
fstpl
insb
pop
dec
fs
push
inc
fmull
ret
xorl
nop
dec
mov
cmp
test
jle,pn
clc
pop
push
cmc
jmp
mov
mov
xchg
lret
cmp
aam
cmp
sub
or
les
jbe
dec
dec
loopne
cld
sbb
sbb
mov
sub
dec
daa
in
pop
sub
dec
in
mov
mov
testl
ds
fcmove
mov
or
mov
and
and
and
dec
mov
jnp
jae
pop
shll
mov
daa
xor
adc
jecxz
lahf
xchg
addr16
fs
mov
ret
sbb
xchg
test
loopne
cmp
xchg
lcall
dec
in
fdivs
cmovns
add
enter
jle
jb
pusha
fsubl
in
pop
gs
bound
sbb
jns
adc
mov
pusha
jmp
xorb
mov
xchg
sub
mov
in
cmp
sub
adc
loop
movsl
inc
and
pop
aad
xchg
inc
pop
jge
or
pop
sahf
insl
fildll
xchg
mov
and
dec
movzwl
lods
fcoms
pop
and
loopne
or
in
add
mov
in
scas
imulb
or
mov
sahf
pop
push
cmp
cwtl
cmp
gs
jge
jecxz
addr16
jnp
inc
lcall
sbb
decl
mov
stos
jae
sbb
adc
lods
shlb
insb
hlt
adc
mov
pop
jle
gs
and
mov
add
out
jmp
clc
mov
mov
adc
lahf
inc
test
add
dec
out
mov
daa
jp
bnd
xchg
into
or
hlt
icebp
stos
leave
mov
arpl
mov
pop
roll
jb
fldcw
xor
sub
cmc
outsl
filds
or
sti
pusha
sbb
ficoml
add
fstpt
lret
popl
and
call
add
shl
fildl
sub
mov
pusha
gs
inc
in
mov
repz
repz
ss
fstpl
js
aad
lea
movsl
out
mov
cmpl
mov
lods
sbb
sbb
pop
rorl
and
mov
call
rorl
dec
mov
inc
rcr
in
jg
or
xchg
mov
enter
imul
jbe,pt
or
sub
daa
out
inc
into
arpl
scas
adc
je
sub
ljmp
sbb
push
add
mov
cmp
mov
stc
push
fst
or
mov
sbb
stos
dec
push
enter
push
sub
mov
mov
cs
mov
das
nop
cmpl
mov
loopne
test
lods
cmc
sub
or
xor
inc
nop
sub
test
add
cmpl
arpl
inc
cmp
push
xchg
xor
lcall
dec
cmpsl
adc
gs
out
sub
jbe
lcall
xchg
or
or
leave
xchg
xchg
ljmp
cmp
testl
mov
adc
push
scas
ficomps
or
push
inc
mov
in
lahf
fsub
fisttpl
daa
orb
in
sub
adc
xchg
mov
jle
adc
push
test
lcall
xor
pop
sbb
jne
in
cli
mov
sbb
pop
pop
lahf
pop
and
and
lea
sbb
lods
cld
pop
jle
imul
insl
sub
dec
imul
pusha
push
push
outsb
out
mov
xor
bound
popa
dec
xchg
dec
adc
lock
int3
jnp
test
arpl
and
std
addr16
mov
adc
jo
js
aad
jecxz
lods
jae
imull
popf
push
outsb
pop
pop
sub
in
mov
sbb
add
mov
mov
aas
stos
notl
popa
rolb
mov
mov
xor
mov
xchg
sbb
xchg
sbb
jb
mov
cmc
push
mov
aas
scas
jae
stos
or
enter
pop
add
mov
loop
aaa
fcoml
lods
and
mov
ficoml
and
loop
cltd
push
pop
add
ljmp
clc
insl
adc
and
data16
loope
lret
dec
dec
push
sbb
mov
andb
or
mov
push
loop
fisttpl
xchg
iret
lret
inc
mov
ljmp
push
seta
sbb
shr
push
dec
mov
test
inc
push
cwtl
mov
xor
pop
int
inc
addr16
sbb
stc
popf
push
dec
push
leave
iret
loopne
data16
xor
lea
mov
inc
pop
xchg
out
xor
jl
pop
cli
ljmp
test
fsubr
adc
push
daa
hlt
popf
ja
mov
mov
fs
mov
test
xor
dec
mov
int3
sbb
jge
sbb
movsl
jmp
mov
aaa
cld
inc
push
imul
add
inc
test
mov
push
es
jo
and
hlt
fyl2x
xchg
mov
ret
xchg
fcmovnb
fsubs
outsl
sbb
fwait
cmp
xchg
xchg
xchg
bound
movb
fwait
lds
jne
fistpll
lock
in
lret
pop
inc
mov
ja
jl
mov
ja
out
pop
mov
dec
xor
subl
xorl
mov
pop
jl
es
or
mov
jge
mov
sub
mov
inc
shrl
push
lods
shlb
dec
mov
fisubrs
movsl
insb
cmc
arpl
into
rol
pop
ss
out
leave
mov
inc
loop
pusha
pop
xorb
stos
cmp
mov
pop
and
mov
jnp
fs
push
inc
cmpsb
lcall
mov
iret
fistpl
lods
shl
sub
inc
jns
add
cmpsl
sub
pop
scas
or
pop
pop
xor
or
lcall
outsl
imul
or
push
lcall
or
mov
and
or
aad
mov
imul
inc
or
mov
inc
jnp
adc
shrb
fs
push
pop
dec
std
xchg
les
data16
in
jg
fdiv
cmpsl
mov
mov
enter
adc
xchg
insb
sbb
iret
aad
arpl
test
out
imul
cmc
ljmp
aam
into
mov
stos
dec
fldl
sub
push
clc
pushf
mov
cld
pop
insl
test
aaa
and
xchg
add
cwtl
push
cmc
jb
mov
loopne
ret
cmp
inc
mov
xlat
xchg
inc
popf
rolb
dec
adc
xor
lahf
bound
or
cmp
sub
fisttpll
jmp
adc
mov
mov
jne,pt
add
mov
dec
dec
mov
aas
push
test
fwait
dec
dec
inc
inc
push
cmp
sarl
push
into
inc
test
jbe
sub
hlt
mov
jmp
repz
lahf
dec
mov
out
loopne
dec
xchg
xlat
sti
pop
push
in
sbb
dec
cmp
mov
add
scas
pop
ficomps
xchg
inc
or
testb
les
xor
mov
fwait
cmpsb
mov
enter
or
outsl
push
outsb
push
je
fadds
mov
imul
enter
stos
fstp
int3
add
or
sbb
xchg
loop
adc
cmp
push
cmp
shll
cld
pop
shrb
pop
lods
and
xchg
call
aaa
and
xchg
mov
ljmp
push
aad
nop
lret
call
and
shlb
push
scas
cltd
imul
shlb
pushf
loopne
iret
fwait
xchg
jae
adcb
adc
and
out
inc
shrb
mov
inc
sahf
iret
jbe
pop
add
test
mov
inc
sub
push
mov
jno
pop
or
or
popf
sbb
out
es
push
mov
mov
daa
clc
jno
adcl
jno
cmp
push
mov
cmp
pop
daa
xor
popa
call
cmpsb
push
inc
jg
or
and
inc
dec
mov
fwait
dec
test
ljmp
mov
sub
mov
rolb
mov
sbb
cmpsb
adc
jg
fwait
enter
out
mov
jnp
repnz
mov
cwtl
cmp
mov
mov
mov
push
sarb
pop
mov
mov
imul
mov
jg
sbb
and
iret
shrb
fildll
mov
xor
das
xchg
xchg
and
fsub
test
or
fisubrs
push
pop
loop
sbbl
mov
stc
sub
faddl
cmp
or
mov
lock
dec
or
jne
cmp
ljmp
mov
push
push
hlt
loope
test
shrb
or
pusha
xchg
xlat
mov
jne
cmp
push
shrl
data16
xor
out
jb
out
aam
mov
xchg
cmp
in
out
sub
mov
jnp
pop
aas
adc
adc
adc
pop
xchg
xlat
jg
mov
stc
fwait
pop
test
or
inc
int3
mov
cmp
pop
lret
xchg
mov
mov
push
jne
stos
push
or
jb
inc
in
das
and
std
data16
mov
ljmp
jp
jns
loopne
push
xchg
or
or
adc
push
cmp
orl
fldl
scas
add
inc
lods
aas
fsubrs
js
imull
shll
les
mov
mov
loope
jl
inc
push
fsubl
dec
push
lahf
mov
mov
or
cli
sub
add
jae
pop
adc
xchg
jne
cmp
stos
add
xchg
test
push
or
inc
fidivrl
jl
fstps
mov
dec
sub
xor
inc
pop
das
loope
imul
and
add
and
adc
push
insl
xchg
mov
lea
jmp
mov
in
sub
out
inc
inc
sbb
adc
daa
add
movsl
xor
dec
insl
jnp
adc
xchg
in
push
sbb
jno
pop
pusha
xor
mov
test
filds
or
aad
sti
pop
cmpb
lods
fcoml
add
sub
test
push
in
cld
and
pop
mov
push
lods
sbb
in
jae
test
and
pop
cmp
or
sub
aaa
cs
arpl
clc
cmpsl
lahf
orl
aas
xchg
push
or
ret
jl
jae
loope
fisubrl
dec
xchg
and
sub
push
ds
mov
xchg
das
bound
push
cmpsb
pop
loope
outsb
push
popa
cltd
add
pop
movsl
mov
jle
jae
daa
adc
mov
arpl
pop
fnstcw
dec
ljmp
popf
enter
lea
lods
jns
cmp
mov
mov
daa
dec
add
bound
add
hlt
addl
adc
sub
push
fidivrl
sahf
adc
mov
and
data16
push
push
test
jecxz
das
inc
mov
add
es
cmp
fwait
shlb
out
call
mov
cwtl
inc
mov
or
jg
dec
nop
and
sbb
xchg
jb
js
testl
jbe
dec
xor
inc
cwtl
add
sub
xor
pop
insl
push
fbld
out
mov
aam
fsubr
push
mov
jge
jno
nop
aas
jb
into
xchg
mov
push
dec
insb
mov
fwait
xchg
mov
ret
mov
xchg
fisubrl
ja
adc
lods
sub
mov
xchg
leave
andb
xchg
pusha
dec
jmp
insb
pusha
ss
shll
xchg
xor
cli
sub
imul
out
cmp
xchg
shrb
sti
leave
es
rclb
pop
pop
in
aas
cmpb
fstl
and
or
shll
xor
fiaddl
mov
xor
or
out
sbb
xchg
jnp
dec
arpl
mov
outsl
in
mov
pushf
mov
jg
push
dec
jp
lea
dec
clc
test
lds
fcomps
negl
or
pop
adc
xchg
dec
sub
xchg
pop
fsubl
push
in
leave
jle
sbbb
leave
pusha
pop
test
dec
test
mov
out
in
shl
mov
lea
push
pop
mov
outsl
movsb
repnz
pop
in
out
adc
mov
mov
cltd
movsb
cmp
jno
popf
jno
gs
sub
inc
adc
mov
sub
stos
add
sub
or
jge
int
inc
push
jecxz
inc
cwtl
sbb
jle
mov
bound
insl
out
mov
inc
popf
test
jecxz
into
pop
movsb
scas
cld
leave
movl
shlb
movsl
fisubrl
inc
int3
adc
mov
sbb
mov
orb
lea
ss
cltd
mov
dec
jle
add
mov
ret
decl
jmp
mov
mov
loope
aaa
loope
adc
leave
push
out
sbb
push
cltd
jl
cltd
push
test
roll
mov
push
aas
push
es
pop
inc
add
ficompl
and
rorl
adc
sbb
cmp
xchg
cwtl
mov
xchg
les
fwait
dec
lock
mov
jns
mov
orb
sbb
cmp
inc
mov
cli
inc
imull
or
iret
xchg
fwait
in
mov
push
jb
mov
jns
addb
dec
fimull
imulb
in
xor
pop
xor
xchg
xchg
mov
adc
adc
push
pop
cltd
insl
ljmp
inc
push
mov
add
inc
jmp
cmp
jge
sbb
adc
cmp
cltd
mov
dec
cmp
ret
push
xchg
movsl
mov
mov
movsl
push
ljmp
and
js
adc
nop
push
add
ret
ds
pop
rcl
pusha
fldenv
jp
xchg
jp
call
and
add
aam
pop
nop
loopne
add
test
pop
in
ja
xchg
and
or
mov
ja
xchg
and
or
fadd
bound
daa
and
dec
adc
pusha
xchg
xchg
insl
xchg
push
lcall
std
repnz
jb
cltd
aad
xor
jbe
sub
stos
sub
mov
jl
jge
mov
leave
push
and
or
imul
push
inc
push
adc
popf
push
mov
lahf
pop
mov
xchg
inc
jecxz
cmp
js
mov
sub
inc
rorl
mov
add
orb
scas
sub
or
sbb
fwait
push
dec
pop
dec
jnp
sarb
jns
movsl
and
mov
xchg
sub
or
andl
push
int3
nop
or
lods
ja
cli
push
or
in
jecxz
sarb
cmpsb
xor
sarb
pop
out
add
add
cmc
popf
xchg
std
mov
inc
leave
add
xchg
iret
jl
pop
jnp
xor
andl
pusha
int3
fimull
mov
nop
fstpt
out
bsf
cmp
push
test
sub
outsl
mov
pushf
and
jb
and
xchg
ror
jo
xchg
lret
push
outsb
mov
ret
test
pop
outsb
adc
jmp
push
cld
outsb
in
or
out
dec
pop
push
pop
out
jp
inc
cmpsl
aad
cmp
gs
fs
lea
push
fadds
clc
inc
jnp
push
aaa
mov
arpl
sbb
jl
divb
mov
shll
lahf
xchg
dec
mov
scas
sub
sub
jo
mov
lret
or
je
cmp
lcall
or
xchg
inc
mov
pop
addr16
pop
push
fst
js
push
cmp
dec
lea
mov
js
and
js
dec
mov
add
mov
insb
shrl
xlat
out
and
lods
imul
sbb
push
jo
sub
fbld
xchg
enter
jno
adc
pop
test
push
xchg
cmpl
pop
ljmp
push
cwtl
xchg
outsl
add
push
pushl
mov
inc
jmp
imul
mov
xchg
pop
es
and
jp
jg
xor
dec
jge
jge
sub
ljmp
mov
gs
or
sub
sub
out
inc
sbb
sub
xchg
xor
add
jecxz
add
xor
cli
and
icebp
sub
push
xchg
sub
pop
aas
stc
fldl
jae
mov
stc
cld
jb
das
icebp
mull
clc
cmpsb
cmpsl
inc
pop
xchg
xlat
fstpt
in
stos
movsb
push
int3
scas
lea
xchg
inc
or
sahf
es
dec
or
roll
cmp
jb
mov
mov
lahf
ljmp
inc
xorl
ficoms
std
fisubrs
das
lock
incb
xor
xchg
mov
adc
dec
test
mov
gs
mov
pop
or
push
rcrl
and
adc
sti
test
roll
fwait
pop
xor
push
movsb
sbb
ret
adc
jg
jg
jb
imul
ret
fld
imulb
inc
lock
mov
inc
push
adc
xchg
sbb
ss
xchg
sbb
jp
test
cmpsb
jp
repz
sub
imul
jecxz
int3
cwtl
mov
popf
cs
inc
mov
mov
int
and
mov
or
jl
xchg
daa
pop
jb
jl
cltd
adc
adc
push
jmp
stos
mov
adc
loop
cmp
adc
add
insb
nop
lods
outsb
leave
adc
in
or
push
shlb
sub
or
and
rorl
push
cmpsl
mov
cmp
enter
sbb
sbb
fbld
ja
orl
sbb
push
cmp
or
nop
xchg
mov
mov
mov
stos
or
push
out
mov
fiaddl
pop
xchg
test
inc
jb
mov
mov
push
inc
or
jbe
jl
lock
hlt
adc
pop
dec
inc
arpl
fwait
xor
mov
lods
movb
fsts
jmp
adc
dec
fwait
shl
jo
sahf
into
iret
shll
mov
sarb
stc
sub
and
jnp
divb
jl
loopne
leave
dec
in
pusha
sti
dec
pop
cmc
cmp
push
jo
rorb
xor
icebp
jae
lea
push
shlb
stc
mov
scas
ret
testb
rcr
mov
sahf
vpaddsw
push
jno
jle
fildl
sarb
outsl
daa
push
dec
adc
sub
sub
xchg
add
cmp
and
jb
sub
push
sub
sti
test
mov
mov
movsb
aaa
cld
sbb
xchg
push
mov
pushf
push
orl
stos
stos
dec
adc
cmp
sahf
clc
outsl
loope
push
xor
xchg
psubusw
dec
jg
outsb
icebp
mov
sub
test
pop
dec
push
cmc
or
pop
xlat
pop
adc
cmpsb
clc
test
sub
cmp
ss
stos
loopne
push
mov
jno
pop
mulps
int
insb
in
add
out
ret
aas
xchg
fcom
rorl
imul
repz
loopne
cli
and
icebp
mov
out
sbbl
daa
mov
push
rclb
mov
filds
imul
clc
lret
pushf
or
lock
pushf
cmpsb
je
sbb
fstps
lods
notl
mov
inc
jno
fistpll
and
test
adc
dec
bound
cmp
add
fucomip
fidivrl
fsubl
mov
sbb
stos
out
andb
divb
add
sbb
int3
adc
sbb
sbb
repnz
roll
jbe
cltd
or
iret
jle
jnp
jne
jne
mov
gs
cmp
jno
jbe
xor
movsl
push
lret
mov
movsb
outsl
mov
jl
sbb
xor
mov
pop
fadds
sti
lret
mov
cli
xchg
fsubr
adc
ss
jo
dec
in
fildl
cmpl
mov
aad
or
icebp
cmp
sbb
xor
push
and
int3
xor
roll
sti
lock
insb
dec
in
iret
sahf
mov
daa
sbb
fsubs
pop
jle
push
mov
insb
mov
aad
pop
movsl
add
mov
pop
test
rolb
ret
ret
xchg
cmp
in
sbbb
cltd
cmc
loope
mov
gs
dec
push
xchg
movsl
xchg
mov
shrd
sbb
insb
out
push
dec
dec
out
inc
cli
sub
inc
xor
mov
leave
add
decl
fsubs
mov
push
inc
add
inc
mov
jl
dec
adcb
js
mov
dec
mov
jb
bound
adc
into
cmp
mov
xor
adc
cs
lods
imul
shrl
fadds
orl
lock
cmp
scas
add
inc
jnp
leave
loopne
stos
push
inc
fs
not
adc
cmp
movsl
pop
lods
push
cld
xchg
push
push
inc
jmp
push
pusha
dec
push
mov
rcr
mov
je
movsl
ficoml
adc
in
or
sbb
lret
aas
pop
gs
dec
or
lods
mov
xlat
adc
stc
iret
xchg
mov
add
pop
inc
lret
mov
mov
cltd
rol
push
add
xor
pop
adc
shr
xchg
mov
inc
cmc
jae
aam
or
mov
hlt
movsl
mov
movhlps
xchg
mov
mov
jnp
loop
add
and
sahf
and
jp
ret
lret
mov
inc
mov
xor
scas
leave
adc
push
dec
cld
sbb
xchg
mov
add
inc
daa
gs
cltd
jne
paddb
mov
cmpb
js
ja
rcll
hlt
cs
adc
in
cmp
xchg
dec
lods
fisubs
ss
int3
pushl
ffreep
jo
cmp
lds
mov
push
cmp
int
cltd
adc
push
int
loope
cmpsl
jge
jmp
loop
shlb
inc
adc
shrl
mov
sbb
mov
sub
leave
scas
add
stos
mov
jbe
mov
lcall
cmpsl
xchg
addr16
std
fldcw
cltd
sbb
push
sub
mov
scas
mov
ljmp
push
xor
popa
mov
jp
insb
push
jg
stos
mov
in
mov
fimuls
and
aaa
add
push
cmpsb
cld
lea
lret
movb
pop
dec
jb
test
scas
int3
shll
jns
push
loope
xchg
xchg
sub
scas
xchg
loopne
insl
rcrb
cmp
adc
push
cmovb
mov
out
int
fwait
inc
lret
aad
mov
lock
or
in
aas
mov
jp
and
test
arpl
fdivrl
cs
mov
pop
push
fistps
jmp
cs
adc
clc
icebp
push
lods
jmp
xor
insb
cmpsb
xor
pop
jbe
ffreep
push
xor
enter
xchg
dec
cwtl
jge
aad
push
fimull
fidivrs
fsts
shl
jg
adc
inc
fistps
xor
lea
rcrb
adc
stos
fidivl
dec
ja
cs
inc
cmp
and
jl
dec
fs
js
add
fidivrl
loopne
repnz
push
mov
lahf
mov
pop
mov
mov
xchg
cmp
dec
cmpsb
cltd
push
inc
mov
xchg
jno
mov
jb
and
push
inc
pushf
mov
movsl
jle
sbb
pop
es
mov
int3
mov
pop
xchg
or
fstpt
xchg
ss
gs
sub
jno
in
aas
pop
call
loopne
dec
movsb
je
sub
xchg
jns
mov
xor
sub
xchg
das
popa
cmc
jno
jo
cmp
or
cli
push
cwtl
jno
jge
mov
inc
rclb
pop
xchg
jl
sub
mull
cmp
fstps
xchg
mov
push
cmp
mov
cld
mov
lods
pop
xchg
and
decl
sub
lahf
push
sbb
sbb
stc
push
ficoml
push
add
jbe
out
add
cmp
lret
jge
shrl
iret
or
xor
sbb
lds
and
mov
int
lods
and
pop
cwtl
or
mov
add
rorl
out
mov
int3
sahf
cltd
cmp
cwtl
and
mov
les
or
xor
jecxz
jne
adc
outsl
popf
imul
cmp
fadds
fisttpll
cmpsl
in
insl
mov
or
cmp
sub
adc
sub
jmp
mov
jp
push
fidivrs
or
enter
dec
add
and
or
lods
shll
sbb
adc
or
inc
int
cmpsb
enter
data16
scas
aaa
aas
stc
push
lret
call
mov
out
ret
gs
or
xor
pusha
or
pop
imul
jbe
cmc
xor
xorb
fisttps
or
imul
mov
sarl
fisttps
nop
stos
insl
cmp
les
mov
or
and
jecxz
cmpsl
inc
jns
ja
xchg
or
xor
out
test
sbbb
inc
pop
icebp
mov
pop
adc
out
adc
pop
and
bound
repnz
pop
cltd
frstor
and
ret
jo
fisttpll
add
movsb
jns
jb
mov
faddl
rorb
mov
ja
fcompl
out
mov
and
ljmp
pop
mov
aad
xchg
xchg
movsb
mov
xchg
andb
aaa
dec
popf
cmp
lcall
shrl
lods
imul
xor
rcll
mov
jle
cmpsb
insb
shlb
clc
sbb
adc
mov
dec
inc
pop
pop
cmp
outsl
and
mov
jne
sbb
adc
mov
and
int3
insl
jle
jge
into
leave
jne
sub
adc
cmpl
mov
ss
xchg
dec
jle
pop
add
sbb
test
dec
out
in
cmp
xchg
in
gs
jnp
lahf
mov
nop
fbstp
neg
mov
jmpw
stos
aaa
xchg
push
mov
sbb
fisttps
mov
adc
mov
sub
mov
fwait
mov
test
mov
cs
mov
push
xor
push
cli
ret
dec
mov
rol
lods
rorb
mov
adc
sub
test
bound
pusha
add
rcrb
push
fistpl
lods
pop
fbstp
cli
mov
push
xchg
movsb
ret
dec
xchg
fucom
arpl
and
aad
out
and
jnp
cmp
jo
cmp
add
mov
sub
pushf
cmpsb
pusha
and
outsb
imul
xor
adc
ja
maxps
jp
adc
outsb
lods
jae
ret
loopne
pop
in
shrb
hlt
sbb
pop
mov
sbb
outsb
push
xchg
movsb
cs
sbb
sbb
pop
and
shr
daa
xor
ret
jne
fildl
sbb
into
push
jecxz
xor
in
jno
pop
out
cmp
jecxz
xchg
jmp
adc
lods
in
xor
xor
or
cmpsl
movsb
push
imul
mov
xor
push
testb
mov
mov
fcompl
push
mov
cmp
xor
jmp
mov
fldlg2
outsl
add
pushf
sub
aas
cmp
mov
push
or
sub
mov
sti
jbe
nop
data16
pop
in
add
xchg
dec
cmp
mov
rcl
push
sub
cmpsl
xchg
icebp
mov
stos
xchg
stc
xchg
pop
out
push
cmp
ljmp
inc
or
dec
es
push
ficomps
mov
sahf
inc
cmp
aad
and
xor
lods
lea
cli
pop
scas
add
cmp
mov
inc
cmovp
sbb
in
jle
cltd
jmp
mov
adc
lea
xchg
add
xchg
adc
cwtl
adcb
inc
pushl
out
push
mov
adc
push
mov
dec
sub
arpl
push
and
cmpsb
shrb
sahf
test
cmpsl
outsl
test
scas
mov
je
ss
lods
pop
mov
jmp
sub
mov
mov
and
jp
jle
pop
test
add
mov
out
cmpsb
jo
negb
rcr
pop
hlt
rolb
imul
outsl
lods
sahf
jae
mov
adc
add
adc
into
rclb
cmp
xchg
adc
push
stos
sar
sub
stos
data16
aaa
dec
sub
ljmp
inc
rcll
dec
xchg
sbb
xchg
add
addl
add
sub
jecxz
ret
lahf
ficoml
xor
push
inc
mov
pop
les
or
loopne
int3
and
mov
xor
pop
push
rcr
outsb
add
jge
xchg
and
out
decb
imul
mov
jb
mov
out
aaa
int
adc
dec
push
lret
add
fs
aaa
icebp
gs
testb
push
add
or
xor
fsubl
sub
sbb
loop
nop
shlb
clc
fwait
jnp
cmp
xchg
mov
out
popf
jae
fistps
mov
or
mov
push
loop
and
testb
popf
push
popa
cmpsb
mov
push
jo
daa
mov
das
fsubs
test
mov
inc
rorl
call
outsl
rcll
fdivr
adc
test
cld
inc
test
cmp
loop
adc
shlb
xor
jb
movsb
shll
je
hlt
xchg
sub
cld
cmpsb
in
ds
lods
cmc
test
push
fmull
xchg
sbb
inc
jne
cmp
xchg
and
dec
hlt
jge
push
push
fcoml
pop
and
inc
sti
pop
fsubr
das
mov
jne
fildll
xchg
nop
jecxz
test
daa
jle
pop
cli
fldt
mov
sbb
and
lret
jge
sub
xchg
dec
or
xor
js
into
icebp
and
push
push
pop
add
push
out
mov
in
cmp
adc
andl
and
sarb
pop
int
or
jle
leave
sbb
in
cmp
shl
mov
sub
mov
mov
or
fistps
mov
leave
mov
and
fdivs
lock
xor
jns
mov
andb
push
inc
inc
ljmp
fsubrl
out
sbb
and
jmp
and
mov
lret
cltd
je
xor
enter
lcall
stc
imul
mov
mov
xor
push
push
jbe
cld
testl
sub
mov
jge
cltd
in
sbb
pop
pop
sub
xchg
sti
ret
adc
mov
sbb
mov
pop
rolb
xchg
pop
cmp
andl
mov
mov
fbstp
pushf
sub
cmc
sub
jns
aad
pop
lods
pop
adc
and
push
sbb
sub
test
test
add
xchg
fmuls
xchg
xchg
or
or
pop
xchg
in
add
xor
push
stos
je
jmp
xor
jp
sbb
inc
pop
jnp
xchg
aas
scas
adc
outsb
xor
pop
int
js
aad
mov
aas
adc
dec
stos
clc
loopne
in
jnp
sub
mov
fisubrs
scas
mov
sub
fstpl
les
mov
call
xor
xchg
orb
sub
mov
aas
jnp
sbb
rcrl
getsec
cmp
cmp
and
ret
jne
addr16
mov
in
dec
or
stc
lds
pushf
fidivrl
pop
pop
pop
out
loopne
clc
clc
pop
out
pop
outsb
clc
clc
pop
push
mov
xchg
dec
pop
pop
pop
addr16
ss
inc
or
testb
mov
xor
inc
pop
outsl
aam
inc
pop
push
out
into
clc
clc
clc
mov
mov
push
test
add
cmpb
stos
clc
clc
clc
test
add
loop
into
lds
pop
pop
and
mov
cwtl
imul
xchg
xchg
or
or
ja
test
jns
jg
pop
xchg
fsts
push
cmovs
lahf
insl
in
adc
ja
aas
call
lods
sub
or
mov
jns
fiadds
movsb
data16
sbb
iret
cmc
bnd
sbb
es
or
inc
and
mov
mov
pop
sar
sahf
mov
push
dec
cmc
ret
inc
outsb
push
fildll
into
nop
jecxz
sbb
add
int3
fiadds
orb
daa
test
jl
dec
frstor
outsl
jne
xchg
dec
jge
sbb
test
cmp
fsts
push
sbb
clc
and
fcom
adc
lret
outsl
rolb
insb
push
mov
out
xchg
into
and
insb
arpl
mov
sahf
outsb
xchg
sbb
or
sbb
xchg
les
xor
in
sub
cmpl
out
jp
movsl
inc
cmp
ret
mov
sub
fs
fstl
push
cmpsl
mov
mulb
lret
jae
out
mov
push
pop
stos
and
add
in
cmp
out
and
sub
sbb
push
int
jae
inc
cwtl
add
test
insb
int
mov
add
or
mov
pop
pop
inc
adc
pusha
call
dec
push
push
sbb
test
out
cmp
aam
jb
cmp
stos
sbbl
xchg
mov
mov
mov
in
mov
push
mov
fists
cmp
mov
lea
sbb
out
int
jmp
and
mov
push
in
cmpsb
sbb
movsl
sbb
sti
mov
enter
cmc
lahf
adc
adc
ja
bound
jb
pusha
test
dec
mov
test
bound
push
inc
arpl
mov
stc
data16
mov
rcl
push
dec
and
and
adc
pop
push
enter
bnd
adc
popa
pop
jmp
mov
test
jg
repz
clc
cmp
mov
xor
inc
pop
outsl
insb
shll
push
fcoml
sbb
add
lret
push
data16
or
les
cmp
push
push
test
push
aad
aaa
cmpsb
mov
or
int3
dec
mov
add
int
mov
sbb
lock
push
cli
mov
and
fdivl
mov
repz
clc
fcmovnu
jmp
popa
neg
sub
xor
dec
dec
add
cmpb
js
push
sub
jbe
xor
popa
inc
test
dec
int
push
xor
ja
dec
xlat
loop
repz
fmul
sti
mov
inc
mov
pop
push
in
sub
adc
xchg
sub
mov
out
lods
mov
ror
cmpsb
roll
inc
mov
add
insb
pusha
pop
add
or
sbb
jnp
push
xchg
jmp
fists
push
and
sub
ljmp
mov
xchg
or
cmp
cmpb
jmp
mov
stc
lret
mov
push
add
shll
aam
shll
ljmp
int3
in
mov
sbb
sub
hlt
dec
aaa
cmp
adc
add
dec
cmpsb
outsb
or
push
dec
loope
jno
loope
or
pop
insb
jns
sub
sub
inc
push
es
xor
mov
shll
hlt
xor
jne
mov
jecxz
cld
daa
mov
test
dec
pop
das
pop
adc
xchg
lcall
mov
push
fsub
mov
cmp
adc
mov
xchg
sub
repnz
loop
and
cld
mov
ds
mov
lcall
mov
rcrb
les
xor
ds
adc
jo
mov
push
scas
or
lahf
adc
and
rorb
sub
dec
adc
mov
lcall
adc
out
loop
repnz
das
les
faddl
mov
pop
inc
cwtl
xchg
cmp
fnstsw
xchg
sbb
dec
mov
js
and
dec
ret
adc
and
imull
imul
adc
or
int3
ljmp
push
std
cmp
push
in
dec
ficoml
cmp
push
pop
mov
pop
in
fsubr
outsb
sbb
push
or
sahf
xor
mov
aas
inc
push
lret
in
pop
mov
dec
adc
sbb
out
mov
pop
scas
cltd
data16
sub
add
jmp
add
and
jmp
add
xchg
cmp
incl
jmp
add
in
add
add
pushl
rcll
push
push
call
mov
movzbl
push
pushl
pushl
call
add
cmp
jb
mov
pushl
pushl
call
nop
pushl
pushl
xor
pushl
pushl
call
xor
call
add
cmp
jb
call
call
leave
popa
ret
add
add
add
inc
sbb
mov
out
push
cmp
inc
data16
out
dec
mov
psubq
push
hlt
mov
fld
xor
add
mulb
push
mov
pop
shl
xor
pop
xor
shlb
mov
sbb
sbb
mov
frstor
jg
inc
movsb
mov
inc
fnsave
mov
sub
mov
lock
les
pop
mov
cli
loopne
jg
and
mov
aaa
bound
inc
jne
idiv
cmp
aad
push
dec
stos
and
xchg
testl
in
xor
in
movsb
insb
repnz
adc
push
into
pop
mov
mov
pop
repnz
mov
or
and
popf
jp
movsb
stos
push
cmp
in
ljmp
loop
movsl
or
or
mov
lea
pop
adcb
push
imull
mov
mov
lea
out
sub
cltd
cmp
lods
sbb
sbb
popf
or
adc
scas
leave
orl
ds
jns
mov
std
dec
xor
push
insl
push
inc
stc
repnz
cwtl
icebp
mov
jp
or
movsl
and
pop
enter
loopne
sub
lock
mov
jecxz
aas
xchg
mov
inc
ficomps
inc
adc
or
push
dec
int
ljmp
bound
cmp
sbb
dec
ret
jno
mov
ja
xchg
out
and
mov
shrb
mov
dec
sbb
jmp
cmp
bnd
lods
adc
mov
push
inc
addr16
push
pushf
adc
cmpsb
mov
ror
push
jbe
cld
cli
out
std
aam
sub
push
fnstsw
imul
mov
jmp
dec
pop
pushf
rcr
adc
lods
addr16
or
inc
fistl
insl
fcom
sbb
jnp
mov
mov
ret
cmp
push
test
and
sbb
jnp
and
xor
xchg
je
enter
stc
lahf
pop
idivb
insl
cmp
out
int3
jle
das
loop
gs
jns
fsubrl
clc
inc
mov
mov
mov
and
aas
into
cmp
test
push
dec
popa
xchg
mov
cmp
loopne
sub
xchg
scas
out
sahf
popf
inc
or
or
jge
push
fildl
mov
loop
jecxz
inc
fildll
aaa
in
out
jnp
sbb
xchg
cmp
sbb
pop
push
cmp
cmp
adc
lods
or
xor
jne
clc
or
loope
stos
pop
popf
adc
inc
ds
cmpsb
xchg
sub
lds
ficoml
test
or
lcall
jmp
inc
fisttps
xor
inc
stc
dec
outsl
sti
push
and
or
mov
cmp
push
setl
shlb
std
dec
lea
inc
int3
mov
add
mov
movsb
shll
xchg
jle
lods
pop
lahf
add
dec
push
jb
mov
js
int
and
jmp
or
and
cmp
jbe
jmp
ljmp
mov
addr16
mov
push
add
jne
adc
mov
les
xor
inc
fstps
jbe
cmpsb
fnstenv
fbld
jp
shr
aad
lock
push
aas
jl
out
out
or
xor
fidivl
leave
inc
add
push
clc
jne
pop
jecxz
jno
insl
inc
and
shrb
bound
dec
loopne
inc
std
mov
jl
cmpsl
inc
cltd
mov
loop
mov
sbb
stos
pushf
or
inc
jmp
in
das
jo
add
and
outsl
jmp
out
sbb
inc
jnp
sbb
push
pop
sbb
mov
imul
add
ljmp
pop
ljmp
lahf
bound
xor
pop
into
ja
fbld
stos
xor
lds
jnp
mov
xor
mov
cmp
mov
inc
filds
push
outsl
cmp
jb
in
lret
pop
mov
sub
jg
mov
mov
pop
cld
cltd
cwtl
jecxz
sti
test
jge
inc
icebp
cld
pop
jl
mov
cmpsb
lods
or
in
dec
in
pop
pushf
gs
out
cltd
dec
insb
sub
pop
les
int
test
loopne
out
sub
adc
fbld
in
adc
sub
xlat
dec
adc
mov
sbb
sahf
adc
push
arpl
mov
mov
ja
loopne
xor
jge
mov
sbb
jmp
lds
sar
jae
pop
pop
loop
push
jns
test
js
xor
fstpt
loop
or
xor
int
fcmovb
lock
and
mov
outsb
or
fcomi
clc
xchg
cmp
loop
mov
nop
out
mov
jns
xchg
idivl
push
push
jnp
pop
mov
adc
mov
jecxz
add
test
jecxz
xor
in
inc
sub
xchg
int
mov
sbb
scas
popf
clc
mov
xchg
dec
mov
daa
xor
das
add
clc
pusha
fs
mov
push
mov
push
ret
jmp
mov
into
shl
das
out
rcl
push
dec
fstpt
dec
xchg
add
shrb
ret
pop
test
sub
mov
test
push
pushf
jle
lods
icebp
iret
push
ja
mov
jmp
mov
push
xor
fbld
push
stos
dec
mov
mov
cmp
loop
loopne
dec
push
stos
shll
jl
push
les
adc
cltd
sub
xor
movsl
and
lods
sub
lods
mov
add
gs
push
mov
rolb
adc
ficoms
insb
clc
stos
lods
sbb
sbb
pop
ds
and
push
or
add
pop
push
hlt
cwtl
adc
lock
stos
sti
stc
daa
sti
push
cmp
mov
ds
adc
add
test
pop
lcall
imul
push
ja
cmpsl
std
push
lods
jae
mov
mov
dec
hlt
mov
dec
mov
pop
movsl
pop
testb
imul
jne
aaa
push
push
mov
xor
mov
jae
insb
push
mov
and
mov
jmp
in
mov
fstps
add
ja
mov
cmpsb
adc
mov
enter
push
lcall
enter
cmpsl
inc
and
loope
stc
ja
dec
and
das
lods
sbb
sbb
adc
in
adc
bound
xlat
in
popa
orb
pop
jns
and
mov
push
xchg
mov
loope
jge
adc
push
xchg
pop
inc
adc
mov
fisubs
testb
imul
add
fildl
jle
xor
xor
jge
out
or
pop
xor
mov
ds
and
and
mov
out
int
add
rol
and
ds
xorl
sbb
fcompl
scas
ret
cmpsl
aam
and
loop
stos
push
cmp
mov
or
mov
xchg
jbe
imul
and
xor
xor
das
add
insb
iret
shr
and
jno
rcrb
xor
and
jb
sbb
inc
xlat
push
sbb
lea
ds
mov
adc
sbb
scas
and
adc
mov
ljmp
mov
test
mov
adc
rcr
std
mov
inc
cmp
lcall
mov
movsl
adc
or
outsl
jg
sti
ss
scas
call
mov
test
and
ljmp
mov
mov
std
lods
scas
xchg
iret
or
popf
dec
es
jg
ljmp
sub
mov
lods
imul
mov
std
out
or
jl
loope
mov
fistl
lret
mov
and
lods
and
inc
pop
hlt
pop
cmc
pushf
mov
clc
mov
mov
fmul
push
dec
push
push
popf
leave
pop
loope
xor
or
mov
xchg
fwait
std
pop
xor
fdivrs
test
add
pop
cmp
sub
add
fprem1
ret
addr16
cmp
int
out
fsubrs
sub
jns
add
inc
push
mov
xor
push
xor
mov
cli
dec
fsub
add
mov
sub
push
jb
std
jg
lock
lcall
and
or
hlt
scas
lods
jbe
daa
push
ret
add
adc
repz
roll
pop
push
jg
cwtl
jnp
and
mov
sti
insb
and
into
mov
outsw
push
push
dec
jecxz
xor
mov
test
lods
push
imull
lods
inc
enter
add
mov
jae
aaa
icebp
pop
test
in
sarb
pop
dec
ret
pushf
imul
add
or
movsl
or
pop
pop
repnz
push
loop
adc
cwtl
xor
and
pop
sub
jg
nop
lods
ja
and
stos
xorb
mov
mov
jg
push
pushf
loopne
lret
inc
push
push
cs
fwait
das
xchg
pop
pop
pop
pop
popa
or
lea
dec
and
insb
xchg
dec
push
push
cli
jge
pop
scas
mov
xchg
subb
das
mov
imul
out
mov
jbe
mov
xlat
jp
jmp
dec
popf
jecxz
jne
mov
sbb
fidivs
hlt
rcrb
inc
icebp
jecxz
andb
pop
inc
rcll
vhaddps
mov
adc
scas
dec
jbe
sbb
test
shll
push
sbb
push
fwait
and
int
mov
cmp
iret
xchg
mov
sbb
xor
fdivrs
int
mov
lds
xchg
out
pusha
jo
movsb
hlt
mov
adc
data16
ljmp
movsb
add
jle
jnp,pn
cli
scas
out
jg
dec
or
ja
in
xchg
adc
dec
inc
inc
adc
fs
inc
add
push
or
pop
mov
or
xor
jl
jecxz
jl
add
add
out
mov
mov
icebp
adc
nop
xor
sbb
fcmovu
daa
dec
loope
jo
in
jle
dec
in
imul
rcrl
add
sbb
jle
sub
nop
push
jmp
cltd
test
movsl
test
fmul
pop
call
stos
cmpsl
cmp
jmp
lcall
ja
lcall
and
pop
mov
dec
jle
cmp
lea
cwtl
adc
xchg
jne
mov
dec
mov
jns
aam
jge
push
imul
outsl
jge
push
mov
pop
ljmp
xor
or
lea
shl
dec
repz
sub
cmpsb
and
in
pop
xchg
es
fidivrl
add
pop
leave
cmp
das
push
or
int3
test
xor
jge
cwtl
pop
test
lds
xchg
popf
fcmovnbe
sbb
push
and
mov
cmp
inc
cwtl
les
xchg
mov
imul
adc
cmc
push
sub
das
xor
repnz
push
or
jmp
enter
cmp
in
stos
sbb
call
aas
outsb
push
test
cltd
add
out
outsl
mov
add
add
mov
testb
mov
and
popl
cmpsl
fnsave
data16
repz
imul
fs
xchg
adcw
out
cwtl
ss
jmp
int
sbb
xor
xor
push
dec
xor
jg
xchg
not
les
jge
push
call
aaa
orb
mov
ret
stos
or
test
fstps
cli
outsl
outsb
es
inc
aaa
jle
aas
pop
stc
or
stos
shll
xchg
xlat
in
repz
inc
or
jbe
movsb
inc
mov
leave
aaa
dec
test
inc
and
sbb
xor
inc
js
add
in
cs
icebp
lret
daa
cmp
movsl
int3
aas
sub
jp
aas
mov
mov
push
popa
push
imul
int3
aas
sub
xlat
mov
in
mov
in
fnstcw
add
dec
shll
jb
mov
faddp
sbb
fwait
jle
mov
adc
mov
popa
sub
nop
dec
cld
das
ffreep
fadds
adc
mov
mov
jg
fiaddl
jmp
xor
sub
pop
js
cs
adc
sub
lods
icebp
out
dec
mov
fadds
loopne
in
mov
mov
dec
repz
and
cmp
push
sbb
mov
scas
adcl
stos
scas
push
adc
mov
cmp
mov
xchg
and
test
sub
lods
mov
jge
js
mov
test
cmpsb
and
dec
cmpsb
shrl
fstps
mov
fwait
mov
or
mov
aaa
shrb
gs
pop
ds
sub
fcoms
lahf
push
and
cmp
jp
xlat
leave
push
test
cmp
jecxz
mov
inc
gs
xchg
push
adc
xchg
sbb
cs
and
sbb
fdiv
push
sbb
clc
int3
xchg
leave
neg
ficoml
dec
popl
sub
sbb
pop
pop
aas
sbb
outsb
dec
fimuls
jns
enter
cltd
lahf
inc
shl
jo
and
mov
sar
out
mov
loope
xchg
movsl
or
inc
stos
nop
sub
or
mov
mov
jne
mov
lret
or
cli
push
ret
jb
inc
ret
adc
or
imul
cmpsl
xchg
cmpsl
push
sbb
lock
and
and
xchg
aas
adc
out
adc
in
add
dec
mov
jb
lods
jp
js
lds
pcmpeqw
xchg
rcl
jge
cwtl
sbb
pop
sahf
lds
or
dec
lahf
xchg
pushl
fs
jno
jns
push
jle
loop
sahf
and
ljmp
stos
push
pop
dec
sbb
ror
aas
push
pop
dec
in
imul
aam
daa
mov
ret
sahf
hlt
cwtl
bound
jecxz
or
dec
push
add
pusha
pushf
cmp
outsl
lret
dec
push
call
sarb
imul
rcl
lods
rcrb
push
adc
loopne
in
push
add
inc
sub
pop
adc
push
nop
pushf
lret
jae
dec
xor
push
cmp
pop
cmpsl
jae
test
pcmpgtb
int3
mov
iret
subb
xchg
sub
arpl
push
movsb
imul
iret
clc
add
or
ja
push
or
jl
xorl
add
inc
cmp
clc
xchg
fsubr
fldenv
fnsave
push
jae
icebp
adc
adc
fstpl
fldcw
push
mov
or
pushf
lea
gs
push
aaa
out
jge
fldln2
jg
xchg
scas
int
xchg
mov
dec
ret
aas
mov
out
jnp
add
test
notb
pop
mov
mov
or
pop
cmc
cld
jo
push
pop
andl
adc
aad
lahf
rcll
inc
cmpsl
shrb
scas
rcll
inc
mov
lea
andb
sbb
adc
inc
and
push
arpl
addb
cmpsl
xchg
out
pop
adc
xchg
dec
out
ds
movsl
aam
loopne
or
cmp
mov
lcall
ja
push
shlb
lds
pop
pop
sub
add
nop
jecxz
pop
out
outsl
jecxz
add
cld
hlt
nop
push
stos
dec
xchg
out
jge
ss
repnz
xchg
jbe
pop
push
adc
jge
cwtl
jne
jb
cmpb
jae
test
add
xor
std
iret
lcall
les
and
xor
iret
adc
sub
adc
push
rcrb
push
int3
movsb
repz
xchg
stc
stos
movb
out
mov
push
pushf
sahf
xchg
mov
jp
xchg
xchg
clc
call
sub
mov
xlat
inc
xchg
pop
pop
sub
mov
clc
sub
shr
jnp
adc
imulb
test
das
mov
leave
imul
sbb
ret
mov
pop
test
test
adc
ja
mov
fists
call
dec
adc
stc
cmp
jmp
jb
cwtl
ds
sbb
das
jne
sahf
or
nop
test
mov
fldenv
repz
pop
inc
enter
lods
rorb
dec
adc
adc
popa
push
les
out
adc
test
rclb
jl
sahf
or
pop
dec
adc
lods
cmp
dec
pop
inc
pop
movsb
cmp
test
into
sar
push
mov
push
sbb
test
cmp
mov
jae
jg
or
xor
jle
sbb
lods
insb
push
leave
xor
and
sbb
inc
stc
fistps
fimuls
cltd
popa
push
addr16
pop
test
xchg
pop
lods
push
ss
ja
jnp
dec
or
xor
cs
pop
cld
loopne
cmp
mov
push
adc
je
lds
mov
and
cmpsb
jae,pt
pop
js
ja
jno
xchg
mov
mov
data16
or
push
movsb
out
cs
ficomps
xchg
mov
imul
test
mov
cld
popa
mov
icebp
jb
mov
push
scas
pop
dec
dec
mov
fadds
ret
std
das
push
lret
sub
sbb
movsb
adc
imul
jp
mov
adc
xchg
inc
jp
sbb
popa
aad
popf
push
jae
xchg
mov
xor
leave
icebp
in
mov
out
and
out
cmc
jg
dec
fimull
xchg
jbe
mov
cmp
clc
add
mov
cld
add
ret
cmc
mov
push
cwtl
pop
lds
mov
adc
ret
and
mov
je
pop
repnz
mov
cmp
cmpsb
xchg
mov
or
jnp
mov
and
push
mov
mov
xchg
es
mov
jbe
mov
mov
push
es
jb
push
lods
xor
cmpsl
mov
mov
bndstx
cmpsb
in
imul
ljmp
loope
int3
mov
push
leave
pop
dec
std
sub
adc
fldt
mov
lahf
pop
arpl
pop
adc
call
scas
rol
pop
addl
mov
push
shl
je
push
js
jns
testb
out
push
fwait
and
inc
adc
cli
dec
jb
fwait
xchg
fistpl
mov
push
pop
jne
pop
stos
lock
jb
rcrb
movsb
add
sbb
pop
add
out
jno
loope
jo
popf
scas
nop
cld
bound
jbe
jecxz
pop
mov
dec
andb
bound
scas
enter
ljmp
pushl
cmp
shrl
cwtl
inc
sub
adc
or
std
jnp
mov
fsubrp
mov
mov
pop
pushf
sub
cs
in
mov
mov
es
dec
xchg
fnsave
scas
sbb
int
and
jno
cmc
test
outsl
out
push
push
clc
cmp
movaps
mov
mov
push
push
fwait
jecxz
jmp
xchg
dec
cli
or
and
sub
lea
in
pop
stos
test
sub
xchg
pop
xlat
cmp
jns
dec
lcall
jb
xchg
mov
aad
cmpsb
jns
mov
pop
cmp
loopne
clc
cmp
adc
gs
loope
mov
ret
daa
scas
aas
and
sti
pop
lods
call
test
xorb
aaa
sub
xor
sub
mov
mov
xor
dec
incb
subb
fadd
sub
mov
adc
inc
cltd
sub
inc
xchg
scas
pop
popf
cmp
adc
fistps
mov
sub
jge
ds
inc
add
pusha
pop
shlb
xchg
xor
jmp
or
mov
es
xchg
loop
lds
idiv
cmp
int
pop
dec
and
pop
es
jb
and
lahf
mov
dec
cwtl
push
out
fstps
jp
sbb
stc
xor
ds
xor
lahf
daa
jb
test
cld
sbb
out
popa
inc
insl
cld
sbb
out
popa
inc
insl
cld
sbb
out
popa
inc
insl
cld
sbb
out
popa
inc
insl
cld
sbb
out
popa
inc
insl
cld
sbb
out
push
mov
popf
add
movsb
add
sbb
xchg
push
jmp
xchg
aaa
cwtl
adc
pop
and
stos
mov
sti
into
pop
into
std
push
js
loope
lds
ljmp
jne
or
daa
ror
add
push
inc
mov
arpl
jb
mov
ret
sub
pop
push
call
sbb
lret
adc
and
push
gs
cmp
adc
pop
sub
les
scas
sub
lss
dec
pushf
and
jmp
cmp
aas
sti
sub
and
or
add
out
or
mov
mov
xor
movsl
scas
loopne
aaa
sbb
fucom
cmc
lods
inc
loope
xor
icebp
cmc
and
fidivs
sbb
mov
xchg
imull
out
clc
jp
test
in
mov
cmp
jnp
out
mov
xor
mov
sub
loope
push
mov
outsb
and
or
test
adc
cmp
mov
test
sbb
sbb
sti
pop
pop
and
cmp
int3
popa
sub
clc
dec
pop
xor
sub
mov
inc
notb
push
and
lahf
mov
inc
sahf
fldcw
xchg
dec
xlat
cmp
imul
out
push
in
mov
jbe
adc
mov
adc
dec
fists
jbe
into
xchg
inc
imul
add
and
or
fadd
inc
mov
push
insb
xchg
test
cmpl
inc
push
out
sub
jae
in
gs
popf
inc
in
add
mov
adc
jl
mov
mov
jge
aas
inc
sbb
adc
repz
sar
add
je
inc
pop
adc
shl
inc
mov
mov
sbb
pop
mov
push
mov
mov
or
clc
movsl
test
sub
pop
add
and
jge
push
add
or
ret
mov
aam
dec
bound
push
jle
jne
aad
insl
pop
mov
add
clc
dec
xchg
js
push
iret
add
lret
mov
cs
inc
jns
sbb
popa
mov
mov
inc
push
adc
into
fdiv
ds
and
pop
js
and
in
pop
loopne
adc
es
add
dec
sub
add
or
mov
inc
aad
mov
into
jl
mov
cli
mov
lods
arpl
pop
insl
out
clc
sub
sbb
xchg
out
and
inc
lcall
mov
mov
add
adc
push
jno
adc
ret
enter
and
inc
push
scas
mov
lahf
sbb
xor
mov
inc
adc
nop
xchg
std
or
pusha
add
ret
xor
mov
sbb
loop
outsl
push
jg
push
gs
mov
inc
jp
jg
add
mov
sti
je
fs
sub
xor
mov
test
mov
repz
in
mov
int3
or
inc
cmpsb
sub
clc
jno
jecxz
lods
push
push
and
dec
imul
jns
cmp
popa
cmp
pop
sbb
jg
ss
outsb
mov
or
pop
stos
f2xm1
lret
jle
rol
mov
cmp
push
sbb
out
hlt
shlb
or
inc
push
xchg
pop
in
in
stos
mov
jbe
cmp
ror
xchg
pop
cmp
mov
jmp
nop
dec
cmpl
jmp
jo
outsb
jle
inc
pop
xchg
adc
shll
jmp
sbbl
mov
add
adc
inc
adc
inc
adc
or
jle
into
fisubs
cli
js
rcll
pushf
mov
pop
cmp
jne
mov
mov
addr16
ljmp
popa
test
mov
push
add
add
shlb
mov
add
ret
mov
push
outsb
lret
mov
mov
pop
pop
lods
sarl
lock
imul
fbstp
add
xchg
and
negb
sub
pushf
mov
jbe
in
lods
popa
mov
or
xor
sub
sbb
pop
add
xchg
repnz
clc
out
pop
dec
xor
bound
sub
cmp
sub
pop
pop
jl
mov
aaa
sahf
lret
outsb
push
mov
xor
enter
xchg
repz
pop
fcmovbe
je
std
mov
mov
mull
imul
mov
push
pop
rcrl
mov
andb
ds
test
popa
inc
ds
je
loop
dec
dec
mov
stc
pop
out
or
mov
xor
or
pop
mov
aaa
mov
sbb
mov
push
or
cmp
ja
fsts
pop
adc
jnp
movsl
nop
push
repz
mov
je
and
adc
fwait
cld
cltd
arpl
mov
or
push
pop
cmp
sub
adc
jbe
add
sbb
mov
dec
mov
dec
imul
jecxz
ljmp
roll
lds
lods
ret
iret
gs
mov
into
mov
pop
lcall
nop
mov
pop
sub
fnsave
les
mov
clc
ljmp
push
stos
icebp
icebp
scas
fnstsw
pusha
out
xchg
add
lock
lods
sub
pop
aam
mov
or
mov
and
add
mov
fbld
sbb
push
dec
sbb
jnp
imul
nop
mov
mulb
mov
push
in
or
cmpsl
sbb
pop
jns
inc
jge
popa
movsl
stos
jo
mov
xor
cmc
out
aas
pop
ficomps
fiadds
dec
jns
out
lds
lcall
std
aaa
or
shlb
dec
dec
jbe
cltd
jno
ror
jo
and
inc
add
rorl
out
mov
cmp
fsubrl
mov
jne
push
mov
mov
inc
je
jo
mov
ja
into
mov
outsl
ret
fwait
insb
leave
js
or
cmp
push
xchg
stos
js
movsl
aad
in
push
adc
and
mov
cli
cmp
sbb
jmp
jle
push
dec
pusha
push
sub
imul
addr16
stos
sub
bound
sub
push
je
dec
sub
jo
popf
std
adc
inc
in
inc
sub
dec
mov
out
push
xchg
mov
mov
outsb
rcrl
xor
or
js
adc
xor
jmp
mov
cmp
mov
in
out
int
loopne
jge
mov
int
das
mov
push
jmp
in
push
dec
rcrb
cmp
outsl
imulb
call
cmpsb
pop
xor
fsubrs
sbbb
xchg
ret
pop
cmp
dec
sub
mov
in
xor
cmpsb
sub
je
adc
es
clc
jbe
push
mov
push
mov
out
je
pushf
stc
rorb
sub
es
insb
clc
in
push
pop
std
jmp
call
dec
ss
js
fmull
cmp
push
stc
lcall
mov
mov
sarl
or
mov
fwait
mulb
inc
aam
jg
popa
add
push
dec
std
fwait
imul
clc
or
mov
imul
fidivrl
add
adc
xlat
mov
pop
aaa
cmc
inc
shl
fwait
mov
push
add
pop
pop
out
lret
mov
aam
fisttps
js
push
sbb
cwtl
sahf
cmp
add
movb
ds
sub
fistl
hlt
mov
sbb
cwtl
inc
mov
lret
sbb
nop
lret
fsubs
repnz
jae
ret
addr16
in
addb
test
sub
jnp
pop
call
pop
adcb
xor
mov
sbb
adc
das
ds
xor
push
xchg
dec
hlt
ds
arpl
xlat
in
inc
pop
lods
popl
das
xchg
pop
cmp
and
adc
sub
ljmp
int3
imull
mov
nop
ja
sub
dec
pop
inc
lods
lret
jns
cmc
xchg
push
jmp
adc
outsb
leave
or
cmc
ret
aam
push
pop
and
and
cmc
dec
scas
out
dec
cmp
cmp
mov
cltd
in
sbb
sbb
mov
or
and
push
dec
into
jmp
push
pop
subl
push
mov
insl
jae
nop
dec
ss
xchg
push
dec
mov
add
ljmp
mov
lret
and
jl
mov
enter
lea
test
iret
aaa
popa
imul
sub
imul
imulb
xor
fsubrl
aaa
outsl
out
dec
testb
jo
push
jge
and
dec
adc
add
psraw
cld
or
notb
jb
ret
xor
pushf
int3
sbb
cmpsb
out
popf
inc
xor
mov
xchg
lea
sub
xor
or
pop
adc
push
and
aas
insb
mov
xchg
and
adc
dec
mov
dec
sub
pushf
cmp
daa
cmp
xchg
fwait
addb
mov
xor
out
ss
stos
push
dec
xchg
dec
jno
dec
inc
aad
rcl
sbb
cli
cmp
mov
lock
jle
lods
adcb
mov
push
mov
adc
pop
add
jmp
and
add
nop
sbb
fwait
jnp
lods
std
lret
inc
andb
mov
jle
mov
jle
pop
push
mov
int3
mov
sub
push
sub
inc
mov
xor
lret
mov
lds
push
insb
movsb
mov
mov
call
stos
fdivrs
pop
ret
inc
cwtl
in
mov
xor
lock
lods
xchg
push
nop
ljmp
cwtl
daa
xchg
or
cmp
cmp
cs
ficompl
movsb
or
mov
jmp
cmp
repz
jp
sbb
sub
jecxz
dec
flds
nop
es
sti
rclb
pop
adc
xorl
enter
das
ja
mov
mov
in
dec
fisubrl
or
xorb
jno
js
xchg
psubsw
sub
sub
xchg
sar
jl
popa
xor
sahf
adc
or
aam
sbb
insl
cmp
nop
sub
aad
sbb
call
adc
push
dec
shlb
pushf
pop
jp
jae
fwait
lcall
dec
xor
les
push
xchg
outsb
mov
xor
and
mov
mov
pushf
mov
mov
shl
or
dec
scas
leave
fwait
jns
mov
out
stos
pop
push
gs
popa
sbb
xchg
sti
and
loop
mov
sbb
iret
jno
pop
cmpl
mov
and
push
insl
add
mov
push
leave
pop
nop
xor
sbb
clc
hlt
and
sahf
cmp
push
or
rclb
test
or
mov
pushf
cltd
call
mov
cli
aad
loope
cld
jo
mov
mov
out
and
xor
xor
lock
stos
and
call
add
in
push
mov
lret
iret
xor
mov
adc
sub
sub
jne
daa
in
cmp
gs
xchg
stc
movsl
outsb
push
pop
xchg
jae
mov
scas
pop
push
cltd
sbb
out
sbb
mov
jp
push
push
push
stos
out
in
out
setle
pop
cli
lods
cmpxchg
in
fistl
inc
scas
adc
js
divb
test
mov
jno
in
in
addr16
leave
adc
sub
mov
setne
adc
push
cmp
fucompp
dec
cmpsl
mov
dec
push
out
sbb
jp
inc
or
lahf
dec
push
in
xor
dec
mov
popf
lret
xor
pop
mov
in
ja
and
inc
mov
mov
push
jecxz
out
mov
mov
subb
inc
data16
jp
cmp
mov
mov
jnp
jecxz
fsubr
gs
pop
sub
lcall
jg
add
and
movsl
push
sub
cmp
adcl
out
scas
cmc
sub
mov
dec
into
push
test
xor
mov
mov
ret
fstpl
dec
sti
adc
mov
test
mov
jp
mov
add
or
rcrl
js
scas
or
dec
rol
add
push
jmp
push
daa
or
into
je
test
dec
mov
push
push
leave
sbb
push
repnz
jl
mov
into
adc
add
sbb
jns
xor
lods
in
fcompl
ja
dec
pop
push
sub
int
sbb
sahf
in
sbbl
push
jl
mov
or
pop
inc
mov
inc
lret
and
js
cmp
sub
mov
cltd
inc
xchg
ret
shll
pushf
mov
jae
xlat
sti
and
clc
mov
ret
shlb
or
sbb
daa
lods
xchg
cwtl
fistpl
mov
aam
jle
fbld
xchg
mov
test
dec
xor
scas
pop
pop
sti
sbb
push
adc
push
testl
cmp
pop
sub
and
loop
test
add
push
cmc
adc
push
mov
int3
ja
out
loope
sbb
sub
addl
sub
jg
lods
or
lods
pop
enter
sahf
mov
stos
dec
push
test
jmp
mov
add
xor
fwait
inc
xchg
shll
sarb
adc
in
scas
xchg
lahf
or
mov
push
into
push
sbb
add
inc
stos
sti
lret
loopne
out
mov
add
and
push
sar
or
rcrl
and
cmc
out
jbe
leave
lret
pop
incl
cli
rcll
movsb
cld
and
inc
adc
mov
jle
cmc
mov
ss
xchg
sbb
fisubrs
dec
or
ret
jne,pn
outsl
cmp
clc
ljmp
fucomip
int3
and
xlat
aas
test
xor
data16
out
lret
and
fbstp
sub
andl
popa
jecxz
adc
das
rorl
das
xlat
jo
jae
out
out
jmp
movsb
add
inc
icebp
dec
push
mov
pop
lcall
inc
lret
mov
xor
in
jns
or
xchg
jns
adc
mov
jge
stc
and
fiaddl
push
mov
sbb
repnz
incl
imull
leave
pop
mov
xor
lahf
les
repnz
sbb
call
push
jb
jnp
sub
mov
cmp
insl
int
mov
mov
rol
adc
cmpl
ret
add
or
sbb
xchg
arpl
or
pop
ja
mov
sbb
jbe
mov
lret
jg
imul
adc
push
insb
dec
mov
jmp
mov
push
nop
ljmp
adc
push
xchg
mov
sbbb
inc
cmp
mov
push
and
lret
xor
sub
ud0
sbb
pop
mov
or
in
jp
out
lret
imul
push
adc
pop
lahf
and
xor
mov
jne
iret
jae
cmp
mov
mov
ret
sbb
sub
adc
and
inc
incl
add
stos
stos
sub
orb
fdivrs
into
mov
ds
or
cwtl
pop
stos
jno
bnd
inc
sbb
and
lret
mov
push
mov
pop
add
mov
ds
jge
ss
adc
cwtl
imul
clc
lods
stc
xchg
sbb
or
dec
dec
cmpsb
push
mov
test
das
in
lcall
lods
sbb
mov
pop
cltd
lods
sbb
sub
dec
mull
sub
icebp
into
inc
mov
imulb
pop
sbb
xor
mov
fucom
femms
mov
sbb
insb
andb
and
cmp
inc
cld
inc
fdivrl
xor
xor
movsl
pop
jns
xchg
pop
xchg
stos
mov
cli
enter
pop
mov
xchg
mov
rcrb
xorl
sahf
adc
std
cmp
pop
inc
mov
xchg
daa
sub
adc
push
push
lahf
movsl
fidivrl
xor
loop
jmp
push
lcall
and
lock
mov
add
mov
adc
scas
popa
mov
pop
pop
lahf
adc
cmpb
in
mov
lds
cwtl
and
popl
inc
cld
popf
fisttpl
test
in
and
push
jae
movsb
adc
cmp
enter
es
ljmp
xor
inc
push
das
enter
rcr
gs
addl
incl
xlat
pusha
popa
inc
sti
push
rcr
lods
movnti
push
pusha
vmaxsd
scas
sbb
fists
add
jb
or
ljmp
and
repnz
or
fcompl
cltd
pop
push
fsubl
cs
stos
mov
daa
out
sbb
roll
pop
ss
in
jmp
adc
test
jl
pop
or
cli
jne
push
lahf
cmpsb
and
loope
and
into
shll
jo
insl
test
mov
nop
ret
iret
daa
jne
js
adc
cmpl
rol
sub
gs
rclb
and
cmp
mov
mov
jg
xor
in
push
mov
mov
clc
mov
scas
add
and
inc
fdiv
push
clc
cltd
fmulp
cmp
fldenv
jbe
ss
xorl
jo
sub
pop
pop
gs
subb
fistpll
xchg
stos
pop
push
cmp
push
inc
dec
cmpl
fdiv
push
orl
push
mov
jg
push
pop
add
insb
leave
mov
outsl
pop
inc
mov
cmp
ljmp
jg
aam
mov
jo
outsb
lcall
and
ret
int
bound
in
cmpsb
dec
or
adc
mov
inc
repz
xor
loopne
push
loop
insb
icebp
sahf
xor
push
sbb
lock
stos
dec
data16
sarb
iret
les
mulb
and
lret
loop
push
es
lock
xchg
mov
jl
test
scas
ss
mov
push
pop
pop
mov
aam
clc
add
jmp
push
pop
mov
adc
mov
pop
sub
pop
hlt
dec
les
iret
ljmp
ja
cmp
popa
or
out
lods
iret
xor
popf
scas
imul
dec
push
lods
or
sbbb
orl
lahf
mov
outsb
mov
insb
push
ja
push
fcompl
repz
test
lea
sarb
xchg
int3
fsts
mov
sti
or
or
das
pop
lods
and
xor
shl
mov
or
pop
fcompl
pop
sbbl
add
jg
push
rcrl
push
xor
dec
or
ja
out
popa
and
addl
out
pop
dec
jecxz
mov
setno
mov
or
dec
sbbb
jne,pt
popa
cmp
cmp
lcall
mov
pop
insb
ret
cli
movsl
adc
jne
repz
sbb
test
les
and
mov
sbb
pop
dec
push
add
push
pop
aaa
subl
adc
mov
das
ljmp
jp
dec
scas
xchg
pop
or
ljmp
add
push
mov
sti
mov
test
das
popa
mov
call
mov
mov
dec
shlb
sahf
pushf
jb
cmp
cmp
imul
or
rep
aad
test
call
and
repz
aam
call
ret
insb
cmc
aas
add
xor
adc
xlat
mov
call
cmp
cmpb
leave
int
pop
int
push
mov
insl
xchg
or
add
mov
push
ret
cmp
dec
pop
cmp
or
aas
mov
push
clc
add
hlt
mov
mov
sub
scas
dec
xor
and
repnz
xor
push
frstor
lods
movsl
imul
loope
sbb
xor
sub
push
pop
fcmovnu
dec
rclb
popl
cmp
pusha
rclb
in
arpl
push
fistps
xorl
push
jo
js
les
xchg
out
cmpsl
sahf
mov
in
arpl
inc
pushf
sti
and
pop
movsb
mov
jle
sbb
mov
dec
hlt
call
mov
lds
aam
add
les
add
mov
or
push
mov
mov
jno
mov
pop
mov
jnp
ficoms
jecxz
sbb
enter
mov
ret
js
mov
lahf
mov
cli
sbb
adc
push
pop
sub
in
or
loop
sub
lret
xor
out
aad
out
ret
pushw
shl
xchg
dec
sbb
xchg
ja
pop
stos
sahf
dec
sbbl
cmp
mov
jno
push
in
push
dec
push
push
stos
in
call
sub
lahf
pop
mov
inc
mov
pop
insl
enter
addb
ds
xchg
push
pop
in
addr16
mull
fdivs
and
pop
xchg
pop
mov
iret
jl
cmp
popa
inc
fsub
dec
mov
movsb
mov
sub
add
ss
adc
leave
push
fidivrs
rcl
pop
mov
adc
out
test
leave
adc
cld
dec
lock
jp
sbb
cmp
loop
push
sbb
or
push
movsl
mov
xor
jg
push
fadds
test
rclb
pushfw
leave
xlat
and
jnp
imul
std
in
call
jae
es
push
push
pusha
ljmp
jnp
loop
dec
mov
and
cmpsl
in
scas
pop
repnz
or
pop
cmpsb
cmpsl
jb
cld
clc
xchg
xlat
mov
call
fildl
dec
div
sbb
inc
es
inc
out
pop
mov
aaa
lock
xchg
push
mov
rclb
jl
adc
lods
iret
orl
enter
xchg
or
nop
iret
call
in
repnz
push
int3
fbld
pop
fsub
push
dec
xor
mov
pop
xchg
push
daa
sub
fs
inc
fwait
jno
fs
cltd
sub
mov
fsqrt
jl
icebp
xor
cs
leave
mov
or
lods
idiv
decb
add
jne
rorb
inc
outsb
adc
adcl
int3
cmp
mov
mov
negb
push
out
ret
mov
jmp
fnclex
pop
mov
cmc
cmp
cmp
mov
sub
dec
pop
sub
cli
out
packssdw
popa
jg
add
sub
inc
add
inc
fnstcw
leave
jg
ror
mov
fidivrl
jmp
xchg
mov
push
cmpsl
push
push
mov
sub
mov
mulb
inc
and
inc
jl
and
sbb
inc
ret
call
out
add
mov
test
fnstsw
movq
fsqrt
in
mov
inc
shlb
and
add
mov
ja
sub
pop
shrb
int3
test
cmc
mov
pop
int
fcmovbe
cmp
mov
std
dec
jmp
icebp
je
cmp
daa
pop
mov
jno
scas
jae
and
insl
ret
test
inc
adc
fstpl
sub
cld
ljmp
sub
jo
jb,pn
mov
mov
mov
mov
jmp
mov
outsb
xor
add
lahf
mov
xchg
mov
mov
inc
dec
data16
movsl
xor
fimull
adc
mov
lahf
into
inc
push
dec
pop
add
xor
cmp
cmpsl
adc
fsts
fwait
sti
shl
aam
pop
mov
pop
scas
pop
jp
lret
inc
add
and
es
scas
scas
scas
repz
adc
int
icebp
jle
xchg
test
cmp
insl
imul
fldl
sub
xchg
imul
mov
fsts
out
pop
pop
push
xor
xor
add
addb
add
lds
or
dec
leave
mov
repz
adc
push
push
sub
sahf
shlb
or
inc
cmp
xchg
push
sbb
data16
mov
movsb
inc
rorb
out
mov
roll
mov
stos
sbb
xchg
fs
push
push
loopne
jbe
cmp
sbb
add
adc
cli
cmp
not
inc
out
xlat
pushf
or
sarb
je
repnz
jl
xchg
pusha
mov
scas
cltd
je
lock
fsts
cmp
adc
mov
ss
xchg
or
or
js
in
pop
imul
push
sub
mov
sahf
add
mov
dec
dec
push
xchg
xor
aaa
sub
stos
mov
ret
push
inc
lds
cmp
aam
pusha
aaa
push
outsb
stos
fs
lds
pusha
call
push
mov
insb
ja
xchg
dec
and
in
js
shl
add
pop
and
movsb
add
scas
or
inc
movsb
sub
pop
fsubs
lods
fadds
cmpsl
shlb
inc
push
cmpsb
jg
mov
hlt
inc
ja
lds
jmp
in
sqrtps
aaa
repz
jg
push
jae
ja
ja
adc
cmpsb
xchg
movsb
cmp
lret
movsb
xchg
mov
je
pop
ss
jo
sbb
jnp
and
ja
mov
pushf
jns
dec
test
daa
sub
bound
adcb
out
sub
jmp
arpl
xchg
lods
mov
jae
mov
xchg
mov
inc
cmp
cmp
fbstp
hlt
or
or
or
jnp
test
dec
mov
inc
rclb
div
lcall
sbb
push
cwtl
mov
adc
jg
push
mov
insb
adc
ror
inc
cmp
jmp
fs
xorl
pop
insl
mov
pop
mov
inc
xor
popa
push
push
cmpsb
sbb
loop
jmp
fldl
sbb
jne
cmp
nop
fcompl
cmp
mov
shlb
out
pop
lds
popf
push
add
or
adc
adc
jp
shll
mov
push
jb
imul
icebp
stos
lock
stos
jns
dec
xchg
jecxz
ficoms
mov
cmp
and
cmp
xor
mov
pop
xchg
leave
in
jb
iret
scas
cmp
dec
test
fwait
and
jb
shll
fcomps
test
adc
clc
inc
mov
fsubl
out
pop
shlb
shrb
jge
xor
mov
in
incb
mov
clc
mov
out
adc
mov
push
lea
push
xor
or
sarb
mov
mov
lret
xchg
xor
xor
insb
lcall
sbb
shlb
insb
mov
or
or
iret
pop
fmuls
lahf
and
icebp
fbstp
mov
icebp
sbb
mov
jmp
icebp
lcall
sahf
ljmp
popf
jle
or
in
ret
fidivs
push
in
loope
test
mov
add
lcall
mov
ret
iret
add
cwtl
aam
lea
mov
mov
sub
inc
xchg
sbb
sbb
inc
ret
loopne
mov
bound
push
mov
mov
out
rolb
lds
ss
and
ja
scas
iret
push
mov
int
out
jmp
ljmp
mov
ret
jae
nop
xchg
mov
and
test
sbb
push
pop
dec
aas
mov
xorb
mov
cmp
in
int3
loope
in
sarb
clc
xor
sub
add
enter
aaa
mov
std
mov
xchg
jmp
outsl
repnz
xchg
xchg
mov
dec
fbstp
adc
mov
jnp
dec
mov
pop
xchg
push
jg
lds
push
xchg
cld
sub
fstpt
adc
out
push
sub
xor
or
clc
pop
sub
inc
les
and
mov
mov
ss
mov
xor
stc
stc
sbb
cmp
mov
mov
add
push
insl
out
mov
mov
inc
and
push
out
mov
or
loope
psubw
outsl
stos
insl
sub
shlb
jno
iret
xor
inc
sub
sbb
iret
add
fbstp
into
jmp
mov
popa
mov
test
dec
nop
jbe
jle
inc
jae
pop
inc
out
jecxz
inc
sbb
in
pop
add
outsl
loop
repnz
and
push
movb
test
cmp
mov
and
lods
pop
iret
sarl
rcll
dec
push
mov
out
sbb
adc
sbb
in
push
lahf
call
push
mov
or
and
insl
sbb
jge
scas
dec
nop
mov
xor
xchg
fs
or
sbb
stc
xlat
sub
jo
je
push
mov
sub
mov
hlt
jecxz
cmp
dec
je
xor
fmuls
mov
pop
fcomps
mov
dec
nop
outsl
in
fucomip
inc
ds
js
pushf
lock
inc
jns
fsubp
push
dec
push
sbb
test
lcall
mov
mov
or
push
dec
xor
sbb
xlat
mov
imul
test
das
mov
lock
shrb
cltd
push
dec
in
insl
stc
dec
cmp
loop
fisubrs
pop
icebp
cmc
lret
lods
les
xchg
insb
adc
or
imul
push
xor
je
mov
data16
mov
cmp
loopne
out
lret
add
push
enter
enter
pop
or
and
dec
or
subl
pop
mov
insl
aas
enter
sub
les
add
sub
fidivrl
adc
js
and
inc
decl
int3
mov
fs
mov
mov
popa
cmc
test
sysret
push
cmp
js
cmp
sti
jg
test
in
negb
es
mov
dec
loope
inc
cld
ljmp
inc
addr16
xor
into
xchg
jo
iret
pop
fs
icebp
adc
sub
add
pop
ds
ret
out
clc
sbb
je
inc
or
pop
sub
inc
xor
pop
jno
in
icebp
dec
cmp
lret
push
popf
js
hlt
mov
movsb
sbb
and
pop
iret
pop
iret
and
jle
dec
sub
sahf
rcrb
or
jno
test
mov
inc
in
pop
fs
pop
pop
aaa
mov
loope
mov
pop
mov
mov
inc
out
inc
mov
xchg
cltd
ja
shr
jb
cmp
ret
movsl
mov
jns
popa
das
int
push
call
fnstenv
enter
test
lea
lret
mov
mov
andps
mov
sbb
inc
out
ror
xchg
push
jmp
test
add
xchg
lds
test
rclb
xchg
daa
repz
mov
aam
and
cmpsl
loop
call
mov
insl
sahf
insl
xchg
clc
sub
mov
pop
test
pop
cmp
dec
inc
pop
ffree
repnz
imulb
xchg
and
inc
xchg
mov
sbb
pop
mov
lahf
cwtl
and
sbb
jge
xchg
fcoml
imul
sub
mov
jns
cli
sub
xchg
sub
sti
or
sti
cltd
jmp
xor
inc
or
cs
mov
outsl
cs
lea
add
sub
pusha
jecxz
fisttpl
push
jge
cmpsl
sub
jno
pop
xchg
mov
mov
addr16
cmp
fbld
dec
push
popa
cmp
inc
dec
loopne
in
or
xchg
dec
push
jge
sub
sub
mov
sbb
mov
inc
sub
bound
fisubs
pop
imul
xchg
jne
ret
stos
push
or
lcall
sbbl
inc
arpl
push
xor
push
fidivrl
push
dec
fdivs
clc
sbb
insl
jmp
pop
push
stos
out
adc
movsb
in
inc
add
mov
stos
lods
inc
xor
sbb
xchg
movsl
mov
cmp
push
jbe
jmp
ss
sbb
xchg
or
iret
aaa
sub
stc
push
mov
xchg
add
aad
jge
xor
pop
mov
xor
gs
xchg
cmp
mov
out
xor
sbb
sbb
adc
add
insb
rcr
fwait
cmc
jmp
jmp
shll
xlat
adc
push
push
xchg
loope
xor
jl
mov
jno
mov
xor
add
clc
outsl
jle
ret
cwtl
mov
fadds
nop
pop
jb
stos
ss
cmp
xor
movsb
andb
jl
cwtl
mov
xchg
xchg
dec
pop
mov
push
out
cmp
xchg
faddp
test
jge
pop
mov
inc
cmp
jg
in
dec
aas
pop
aad
xchg
and
sbb
cmp
xor
pop
sub
mov
cmp
mov
adc
push
repz
dec
cmc
sbb
lret
sahf
push
in
test
das
push
dec
or
inc
pushf
arpl
mov
lea
shlb
mov
jecxz
lret
rol
and
sub
int
mov
mov
cld
mov
icebp
sub
inc
mov
sarb
mov
addr16
inc
push
sbb
xchg
sbb
jmp
insl
int3
mov
daa
mov
pop
out
test
dec
add
jne
cltd
inc
lea
jg
xchg
stc
adc
jp
lods
pop
dec
mov
test
cli
fwait
int
pop
shll
hlt
out
cmpb
ljmp
xchg
or
cltd
dec
xchg
cltd
lds
enter
and
cli
inc
adc
mov
mov
xchg
sub
lcall
pop
lods
inc
les
mov
outsl
pop
and
pop
test
test
push
mov
lds
xlat
addr16
movb
lcall
add
hlt
ljmp
stos
pop
or
xor
sbb
sub
addr16
sahf
loope
orl
mov
xchg
pop
cmp
leave
dec
mov
cmp
sub
loopne
mov
sahf
das
out
inc
ljmp
sub
pop
xchg
sub
bound
pusha
pop
adc
enter
push
cmpsb
in
insl
lock
xchg
repnz
pushf
mov
and
cmp
ds
pop
jae
cmp
imull
outsl
aaa
fsubrl
loopne
lods
mov
popf
xchg
or
sub
xchg
and
fcoml
cmc
mov
mov
xor
out
rorb
shlb
scas
addl
stos
test
inc
push
loope
das
adc
or
js
dec
lea
sti
in
xlat
iret
sub
jl
scas
popf
lret
subl
push
test
in
sti
fists
insb
ds
fdivs
loope
mov
sbb
in
jbe
cld
xchg
mov
int
inc
xchg
add
fistl
sub
xchg
mov
addr16
cmp
dec
or
pushf
mov
stos
shrl
rcr
shrl
mov
lcall
pop
xchg
fwait
sub
pop
fcompl
je
dec
sbb
push
test
movsl
adc
pop
mov
pop
pop
jne
loope
out
cwtl
mov
ret
lret
fs
daa
xchg
lods
dec
cld
stc
add
lret
lcall
pop
inc
stos
lcall
pushf
xchg
adc
rcrl
mov
xchg
in
and
rol
lds
into
add
inc
mov
pop
pusha
dec
std
push
mov
shll
and
jne
leave
pop
mov
jmp
jbe
stos
rol
je
mov
ja
cmp
push
pmulhw
pop
mov
pop
es
add
outsb
lods
es
ret
loop
pusha
daa
mov
inc
pop
std
hlt
pop
xchg
test
adc
xor
xchg
fimull
in
sub
push
bound
sbb
add
ret
rol
int3
cmp
pop
insl
jmp
sbb
mov
inc
xchg
mov
rcl
jo
jo
add
cltd
or
push
das
add
xor
adc
pop
ficompl
inc
aas
jle
in
adc
dec
add
sbb
mov
mov
imul
repnz
out
mov
stos
and
in
mov
imul
cmp
in
and
lea
les
lret
out
fistl
mov
xor
cli
lods
inc
jbe
mov
fs
cld
mov
adc
push
inc
push
xchg
dec
push
andb
sarb
loop
push
xor
aad
sub
sbb
lea
out
nop
pop
sti
lret
std
dec
mov
cld
xchg
mov
push
inc
cli
fcmovbe
dec
je
lock
into
jnp
jg
imul
pop
std
lods
jnp
sbb
jp
push
stos
sub
into
dec
and
mov
jmp
push
mov
fadds
cld
cmp
add
cwtl
mov
das
add
cwtl
out
dec
sub
pop
flds
jb
pop
loope
mov
sbbb
ljmp
and
push
ss
test
ss
xor
jo
xchg
js
iret
sbb
push
dec
int
loop
icebp
cmpsb
inc
test
ss
out
cmp
sbb
cli
fdivrl
mov
dec
mov
xchg
enter
xchg
ret
or
sbbb
pop
add
repz
cmp
xor
sbb
push
int3
imul
rorl
pusha
lret
mov
das
aam
out
xchg
movsb
push
push
stos
pcmpgtd
jb
f2xm1
sarl
jle
arpl
jo
test
adc
aam
adc
addr16
call
mov
leave
sub
push
in
push
bound
out
and
sbb
pop
test
sti
xor
xchg
cli
mov
mov
push
dec
push
jecxz
ret
ret
movsl
inc
pop
js
cmp
insb
arpl
add
mov
dec
inc
pop
imulb
inc
add
shlb
dec
adc
xchg
mov
ja
sub
jmp
push
fwait
ret
in
inc
dec
jle
movsl
call
pusha
add
inc
add
pusha
icebp
mov
outsl
adc
stos
mov
push
jecxz
add
jnp
push
rcl
std
test
inc
dec
inc
cmpl
jmp
cld
inc
scas
rorb
les
mov
out
fwait
lret
cltd
test
insb
inc
orb
cmp
bound
mov
mov
loop
mov
out
aam
lods
shll
imul
xor
je
pop
dec
mov
mov
mov
or
imul
out
je
into
dec
sti
inc
into
lock
es
mov
fxch
sbb
cmp
loopne
fcmovne
push
cmp
mov
inc
jge
pop
cmpsl
cwtl
fadds
shll
int
jns
adc
xor
pslld
popa
fdivl
or
push
jecxz
dec
mov
insb
leave
cmc
adc
mov
cld
mov
mov
dec
leave
xor
lds
cmp
jae
outsb
push
into
outsl
imul
pop
cmpsl
push
and
jo
push
in
push
lods
xchg
xor
mov
je
clc
dec
or
ds
fwait
dec
enter
arpl
ds
xor
add
jecxz
stos
std
arpl
mov
jp
ljmp
adc
scas
or
xor
mov
ja
mov
roll
decl
aaa
sbb
add
mov
inc
rcrb
xchg
mov
lahf
xchg
sub
jecxz
xchg
cmp
dec
imul
or
out
fldenv
xchg
fs
cmp
jne
push
lcall
cmp
pause
jae
mov
pop
xor
in
add
aad
cwtl
add
xlat
mov
adc
adc
adc
pop
ja
lods
mov
aas
and
ljmp
inc
fwait
repz
mov
xor
fbstp
popf
clc
xchg
fdivrs
cmpsl
lret
stc
add
dec
mov
idivl
outsl
or
pop
push
or
mov
lret
cwtl
stos
fdiv
in
inc
cmpsl
lods
inc
sbb
jne
hlt
out
push
mov
cmc
mov
out
jo
stos
cli
mov
and
xor
leave
adc
in
repz
pop
pop
ret
stos
ret
adcl
rorl
fistpl
sbb
inc
lods
imul
mov
xchg
fcmove
jns
dec
hlt
sub
pop
pop
in
push
and
sub
pop
jb
mov
pop
shr
setb
push
mov
lcall
das
or
ljmp
mov
ret
cmp
and
arpl
in
jb,pn
test
xor
inc
and
call
cli
adc
mov
pusha
xchg
test
xchg
sti
negl
sub
pop
ljmp
jecxz
arpl
pop
xchg
je
cmp
push
push
cmp
out
sbb
sub
sarl
shlw
imul
sub
js
mov
cli
mov
inc
hlt
lea
lret
je
sub
jne
repnz
movsl
ds
push
aas
sub
inc
cmp
push
xor
call
and
push
push
lret
clc
fists
inc
add
inc
push
cmpsb
xor
mov
lock
out
mov
mov
out
inc
shlb
mov
aad
mov
mov
push
adc
jle
jmp
push
xchg
cmp
cld
xlat
mov
cmp
mov
sahf
outsb
fcmovnu
movsb
lds
js
xor
jl
sub
mov
lods
mov
fsubrs
inc
fsubs
xchg
dec
cmp
aad
adc
mov
cmp
cmp
lret
cmp
add
inc
repz
add
push
add
push
lock
cltd
pop
gs
test
adc
rcl
mov
mov
subb
mov
push
stc
mov
aam
inc
push
xorb
lods
lret
adc
add
mov
out
jmp
fidivl
mov
or
xchg
rcr
clc
xchg
test
cmc
pop
push
mov
mov
in
test
cmp
cld
push
xchg
xchg
pop
shll
cld
or
cmpsl
cmpsb
sahf
inc
roll
sbb
or
pushf
pop
imul
outsl
and
push
xor
fbstp
cmp
fst
lcall
mov
cmp
outsl
rorl
mov
inc
jle
sbb
mov
xchg
pop
mov
or
adc
fnstsw
xchg
or
repz
push
mov
xor
das
je
movsb
mov
cmpl
pop
xor
mov
xor
xchg
addb
push
or
mov
or
lods
lock
ljmp
movsl
mov
leave
dec
mov
fisttpll
cmpl
jle
sahf
and
lret
or
icebp
and
pop
fdivr
pop
jno
sbb
push
popa
or
jl
push
test
inc
add
scas
popa
lahf
jo
cmc
fsts
jmp
fstpl
jnp
and
lret
and
dec
daa
movsl
lret
lret
shll
xlat
dec
lods
xor
int
adc
lea
mov
int
rclb
subl
cld
push
fistps
ret
lahf
cmovg
aaa
mov
insb
xchg
iret
jp
adc
pop
out
push
cmpsl
or
stos
dec
imul
and
pop
adc
inc
cmp
cmp
push
jle
sbb
and
inc
and
aaa
ss
test
jl
cli
in
mov
lods
cmp
add
xchg
lcall
ss
cwtl
xor
add
xlat
mov
jns
loopne
adc
test
jb
sub
aam
outsl
mov
xor
std
ds
pop
jmp
call
icebp
sbb
add
pushf
mov
push
push
jmp
xorb
cmp
pop
fwait
pop
mov
mov
movsl
cmp
mov
rcr
ja
cmp
js
clc
ja
xchg
sarl
pop
sbb
arpl
or
dec
mov
sti
jg
mov
cmpsb
cwtl
xchg
adc
or
add
rcrl
jmp
shlb
jns
sbb
std
bound
inc
test
mull
jle
and
enter
pusha
sahf
hlt
sbb
inc
xor
adc
pushf
jo
fistl
cmp
dec
add
sub
fcmovnbe
out
add
sbb
lds
pop
aam
in
cmp
ss
inc
imul
sbb
movsb
into
push
cmp
sahf
mov
inc
jae
or
mov
push
pop
mov
mov
outsb
mov
jl
add
pop
popf
xor
dec
in
daa
sub
sub
xchg
sbb
iret
shrl
and
xchg
jns
mov
mov
rolb
and
xlat
and
daa
pop
ds
sti
popf
repnz
out
sub
stos
mov
repnz
ja
add
mov
neg
in
aad
and
mov
push
xor
mov
loope
aam
pop
adc
rorl
push
call
cmp
loope
popf
lahf
pop
jg
mov
ja
pop
mov
aam
xchg
fs
cmp
jnp
cmp
out
add
in
in
aad
stos
orb
pop
pop
jbe
cmp
xchg
std
and
push
out
xor
ljmp
xchg
repz
scas
push
cld
xor
dec
fbld
jp
in
or
pushf
xor
xchg
flds
pop
das
jbe
xchg
xchg
mov
pop
repz
ss
dec
sub
inc
lock
std
shrb
jns
push
jae
dec
mov
adc
adc
ja
in
mov
jl
adcl
jge
out
xchg
pop
outsl
cmp
ret
test
mov
pop
jns
dec
adc
or
sub
dec
mov
fists
mov
not
pusha
idivb
mov
stos
add
lcall
inc
fwait
jne
dec
xchg
xchg
roll
popf
mov
sahf
inc
jl
dec
fdivrs
scas
popa
dec
push
or
fstpt
rolb
push
pop
mov
push
in
ja
sub
leave
out
out
mov
lea
and
fs
clc
pop
ss
push
cld
incb
outsl
jnp
jnp
fmull
adc
cmp
cmpsl
testl
mov
out
fidivrl
xchg
sbb
lahf
les
jbe
jge
mov
mov
mov
pop
xor
sub
jns
mov
inc
test
in
test
push
push
mov
add
stos
jg
push
loop
shlb
out
es
sub
and
add
pop
xchg
lods
adc
bound
cs
enter
xor
in
decl
push
and
jnp
lods
mov
push
adc
es
out
jle
out
pop
adc
jmp
mov
dec
fnstcw
enter
adc
mov
mov
cmp
hlt
xor
int3
mov
pop
les
sbb
into
les
add
repnz
inc
push
sahf
adc
aam
ja
xchg
sbb
and
sub
pop
pushf
imul
loop
ret
jmp
data16
adc
push
and
idivl
xchg
or
jae
arpl
mov
mov
push
les
push
pop
scas
out
and
push
mov
outsb
push
lods
sub
lods
add
out
pushf
in
cltd
scas
cmpsl
loopne
cltd
jno
xchg
lock
pop
insb
roll
xchg
pop
in
mov
sub
xchg
rol
add
jmp
mov
xor
xchg
mov
in
pusha
sbb
jne
shll
inc
test
lahf
xchg
jne
xchg
sub
int3
sub
daa
pop
mov
std
fnstsw
or
adc
insb
shrb
inc
arpl
push
pushl
in
scas
xor
jge
pop
pop
enter
stc
stos
and
mov
test
test
push
xchg
jp
pushf
clc
popa
push
popf
outsl
lret
fdivp
dec
xor
fwait
adc
mov
sub
push
inc
dec
add
shlb
inc
add
add
pop
mov
or
addl
nop
dec
dec
stc
inc
jnp
hlt
int3
mov
test
in
pushf
outsl
fdivr
pop
mov
arpl
iret
fstl
jge
ljmp
in
or
pusha
sub
out
add
sbb
xor
shll
xchg
sbb
stos
mov
in
cltd
mov
aas
pop
out
or
fistl
xor
cmp
sub
jl
call
xchg
sbb
cltd
outsb
fwait
stos
and
fstpl
or
loope
fdivrl
rcl
inc
pushf
push
add
loope
sub
inc
ja
mov
dec
lods
dec
mov
push
out
stc
shlb
hlt
push
sbb
inc
mov
jmp
testb
nop
lret
sti
pop
arpl
and
imul
fwait
dec
add
out
fnstcw
mov
popf
aad
xchg
jl
jae
in
mov
pusha
test
push
add
outsl
push
cmpsl
mov
imul
ja
mov
sbb
or
lods
and
pop
jge
cli
ret
jge
and
mov
mov
scas
movsb
adc
gs
sbb
lock
xchg
lret
test
push
lret
gs
push
bound
push
out
mov
mov
imul
ljmp
jecxz
xor
mov
mov
or
stos
outsl
jmp
push
jo
and
sarl
mov
xchg
xor
rorb
imul
inc
clc
test
sub
inc
adc
popa
xchg
xor
sbb
or
mov
adc
in
mov
mov
aam
push
mov
xchg
jo
mov
out
mov
lods
in
fiaddl
cmpsl
push
pop
ret
inc
dec
push
and
inc
sub
xchg
push
je
push
stos
jbe
add
mov
orl
adc
add
xchg
cmp
call
add
mov
pop
mov
ret
jle
add
cmc
pop
movsb
mov
push
sti
int3
popa
push
and
in
ss
cwtl
fcoml
sarl
sbb
das
xchg
adc
int
hlt
mov
pusha
fdivr
or
xor
pop
js
insb
xor
mov
xor
arpl
js
inc
out
jl
push
xchg
popf
push
mov
mov
xor
cmp
push
lahf
je
xor
scas
cmp
jecxz
ret
sbb
xchg
fisttpl
arpl
imul
and
push
scas
push
addw
movsl
pop
and
or
pop
test
dec
imul
inc
data16
les
xchg
adc
mov
mov
mov
pop
adc
mov
lret
xor
pusha
push
mov
pop
adc
int
xor
in
push
mov
xor
iret
pop
mov
loopne
or
xchg
fwait
aaa
pop
dec
out
fbstp
adc
out
sbb
mov
inc
fdivrl
jmp
ljmp
pushf
mov
stc
fsts
sub
fcomps
lahf
push
push
hlt
sub
int3
movsb
xchg
adc
xchg
fwait
or
repz
xor
pop
add
xor
cmp
je
aas
cmpl
or
xchg
push
add
jmp
mov
pop
out
mov
xlat
pop
sahf
test
cmp
dec
les
js
ds
or
sub
sub
in
sub
mov
push
aad
xchg
cltd
sub
cmpsl
and
inc
in
ljmp
test
sub
cmpsl
decl
shl
xor
push
jne
add
loopne
mov
adc
jno
push
insl
outsl
mov
jno
jg
pop
shlb
das
lret
sbb
xor
mov
out
mov
iret
cmp
and
or
add
clc
and
call
stc
hlt
mov
subl
adc
cmp
je
inc
dec
inc
pop
mov
sbb
push
xchg
stos
jmp
enter
sbb
shll
int
cmc
or
sub
data16
fdivr
scas
mov
or
ja
js
std
inc
lret
lret
lods
add
sbb
ret
scas
int
mov
fmul
orb
pminsw
movsb
mov
pushf
jle
cld
cwtl
int3
and
jmp
sbb
ja
in
sbb
pop
hlt
push
or
cltd
mov
gs
mov
sub
jecxz
push
push
sub
mov
sub
movsb
dec
mov
outsb
xchg
sarb
cmp
fimull
iret
and
incb
and
daa
in
mov
sub
std
cli
test
jmp
jmp
movsb
repnz
out
and
cli
movsl
outsl
mov
xchg
and
jo
mov
int
rolb
ficoml
inc
and
dec
lahf
rclb
mov
or
data16
insb
lret
cmpl
lods
fldcw
inc
ds
mov
pop
movsl
lahf
push
addl
repz
scas
mov
or
outsl
in
pop
xchg
xchg
add
push
or
jne
sarl
iret
xchg
fwait
dec
xor
pusha
jns
xchg
add
sub
mov
cmova
and
xchg
movsb
and
lret
cs
jae
and
pop
imul
xchg
fsts
stos
sarb
pushf
aaa
add
decl
jmp
push
mov
jl
cli
dec
lods
dec
push
sbbl
addb
inc
or
dec
push
push
push
mov
dec
push
xorb
mov
xorl
shr
xor
sarl
pop
imul
xor
push
in
mov
or
cmpb
sbb
dec
pop
push
test
fldl
mov
mov
or
lods
adcl
lods
xlat
add
ds
iret
lds
lock
out
mov
mov
insl
and
stos
loopne
fwait
jo
xor
adc
cmp
popf
in
hlt
lea
ret
cli
and
test
outsl
mov
and
inc
and
cmp
xchg
xrelease
aam
call
cmpsb
cmp
inc
jae
pop
jb
imul
dec
daa
ret
mov
rclb
popa
out
mov
mov
xlat
mov
in
cmpb
xor
dec
movsb
cmp
mov
dec
repnz
xchg
mov
xchg
jne
cmpsb
repz
loope
loope
inc
out
call
xchg
rcll
dec
xor
xchg
lods
lahf
movd
out
inc
imul
pop
xchg
stos
rorl
jmp
mov
test
xchg
or
es
inc
or
jb
arpl
jge
or
inc
cmpl
jmp
jo
xor
push
cmc
or
add
test
movhps
sub
mov
mov
mull
mov
pushf
adc
gs
hlt
sbb
or
iret
xor
orb
xchg
dec
cs
mov
negb
push
inc
cmc
fnstenv
cs
pushf
icebp
xchg
orb
inc
loopne
xchg
andl
rcl
dec
xchg
xor
stc
push
pop
push
or
in
add
cld
and
rep
ficoml
out
mov
ficomps
in
lods
icebp
jl
pop
mov
pusha
clc
loopne
mov
ret
adc
push
mov
sarl
push
dec
adc
cli
and
jg
sbb
shl
aaa
sub
mov
fwait
int3
hlt
dec
inc
ret
jo
mov
pop
jb
mov
jae
mov
xchg
pop
daa
cld
js
enter
fidivrs
and
inc
and
mov
and
addr16
push
imul
in
dec
scas
xchg
jmp
mov
insl
cmp
jmp
aad
inc
repnz
ljmp
jnp
mov
movsl
lret
push
mov
popf
addr16
dec
sub
xchg
pop
nop
mov
jge
sub
dec
in
dec
push
mov
nop
xchg
push
imul
fsubr
or
xor
pop
xchg
jbe
push
sub
ret
mov
push
or
inc
mov
jbe
cmpsb
add
rorb
cld
mov
rclb
and
addb
cmp
std
lahf
movsb
mov
cmp
xor
push
scas
and
pop
std
jmp
mov
icebp
push
mov
lods
push
mov
mov
shll
repz
data16
call
fidivs
loope
lods
lret
stc
daa
adc
sbb
xor
or
lock
ljmp
jbe
jb
in
ljmp
mov
test
sbb
add
fistpl
jecxz
or
ja
cmp
adc
mov
ficoml
jnp
fistpl
mov
test
mov
std
mov
fmulp
add
add
fwait
clc
repz
dec
pusha
push
xor
roll
in
xor
sbb
xchg
inc
cwtl
scas
aad
movsb
inc
sub
bound
xor
xchg
push
andb
outsl
or
xchg
add
stos
out
add
ds
adc
cltd
push
movsl
xor
lds
jno
test
mov
or
popa
clc
stos
push
rorb
mov
xchg
cmpsb
inc
out
jnp
sub
test
fst
or
mov
push
dec
pop
mov
frstor
repz
stos
clc
dec
test
fidivl
dec
push
cmpsl
inc
das
cmp
sub
mov
mov
xchg
cmpsb
xchg
popf
ljmp
out
out
xchg
jbe
xchg
adc
and
cmp
cmp
syscall
les
jb
ss
out
xlat
mov
mov
and
mov
stc
sbb
jne
add
cmp
pop
fnstsw
mov
pop
mov
movsl
jecxz
in
bound
std
out
mov
pop
sub
xchg
lods
fnstenv
xlat
mov
sbb
mov
loop
sti
sbb
ret
jbe
cltd
rcrb
push
in
sahf
aas
add
pop
ja
or
push
fistpll
inc
outsl
dec
xlat
mov
dec
mov
pushf
leave
jg
pop
sarb
rep
cld
push
mov
push
mov
mov
insb
adc
add
stc
pushf
or
aaa
adc
inc
leave
lock
int3
out
out
mov
and
je
roll
mov
ja
fnop
inc
inc
dec
xchg
cmp
push
test
push
push
lcall
or
jle
cmp
pop
shll
and
cmp
sub
inc
mov
enter
aaa
lock
pop
or
cltd
into
jecxz
sti
std
pop
leave
inc
add
fistpll
push
sbb
lock
push
ds
jb
syscall
dec
dec
inc
dec
or
in
mov
imul
pop
arpl
sar
cmp
in
push
pop
pop
push
gs
mov
add
xchg
adc
loopne
repnz
repz
daa
cmp
push
xor
mov
dec
mov
fmuls
xchg
pop
pop
inc
inc
rcll
jo
mov
mov
ret
inc
test
arpl
sub
mov
sub
cmc
inc
iret
xchg
xor
sub
jp
aas
inc
dec
icebp
jae
das
pop
cmp
push
loope
and
jmp
xchg
lcall
imul
mov
test
and
or
xor
insl
sbb
stos
pop
sti
fsubp
jb
adc
fcoms
dec
aad
push
stos
inc
add
add
jg
inc
add
inc
inc
add
add
mov
add
add
add
add
push
inc
add
cmpsb
inc
add
add
fiaddl
add
dec
imul
add
add
aam
add
inc
inc
add
add
mov
inc
add
arpl
enter
outsb
inc
inc
add
add
add
inc
add
xor
add
add
add
inc
inc
add
add
add
inc
add
add
add
add
add
mov
leave
push
sbb
jns
and
pop
sub
outsl
push
dec
iret
test
int
mov
lods
mov
sub
lcall
and
fcos
jl
push
test
xchg
mov
es
mov
lods
inc
sbb
loope
roll
call
adc
pop
fsubrl
mov
aad
cwtl
push
sbb
mov
xor
outsb
rolb
cmpsl
sbb
adc
aad
in
dec
push
outsl
xchg
mov
jne
xor
incl
test
lret
cmp
jp
rorl
or
lret
stos
out
call
loope
push
and
inc
xor
lahf
pushf
shrl
dec
lret
aad
insb
adc
add
and
dec
mov
xor
xchg
fisttpll
dec
push
sbb
frstor
lea
xchg
testl
add
fsts
and
push
mov
mov
mov
cs
ret
cmp
push
clc
push
movsb
lret
int3
pop
outsb
xchg
pusha
pop
push
divb
xchg
dec
lret
aad
dec
add
pop
enter
mov
dec
popf
inc
mov
aad
sbbb
jle
cmp
mov
gs
out
sbb
add
hlt
fs
jno
dec
dec
jl
pop
mov
dec
jle
lcall
sub
xchg
mov
arpl
test
bound
jge
lcall
inc
cld
ret
sbb
dec
inc
add
mov
jo
cmpsl
and
pop
rcll
fidivs
test
shr
hlt
jb
repz
or
ja
mov
xor
gs
into
jge
add
mov
lds
push
mov
ja
sub
insl
iret
push
dec
sbb
ret
in
nop
xchg
push
notl
fbld
cltd
mov
xchg
and
js
movsl
add
and
and
adc
daa
mov
inc
je
fisubrl
in
insl
iret
lock
fwait
daa
jo
dec
lds
in
addr16
outsl
int
jo
scas
je
test
std
cmp
enter
jo
lea
xchg
push
pop
dec
ret
lea
inc
push
xor
pop
mov
xlat
lret
or
sbb
and
fidivrl
jecxz
je
call
xor
out
xor
es
roll
cli
sarl
sbb
or
jp
lret
es
and
or
jmp
xor
xor
jae
adc
pop
dec
test
sbb
mov
fsubr
popa
mov
jb
and
inc
cwtl
xchg
sbb
aas
add
out
xchg
xchg
sbb
lods
cwtl
int
neg
in
loope
xchg
fwait
xchg
push
push
je
lret
inc
dec
mov
lret
dec
cmp
mov
mov
je
and
add
dec
xlat
sti
hlt
clc
mov
jg
inc
shlb
lods
sub
pushf
mov
cli
jl
fsubs
mov
stos
sbb
std
test
repz
xchg
inc
fadds
pop
pop
repnz
in
out
aaa
pop
push
testb
sub
mov
repz
mov
sbb
in
xor
mov
stos
data16
rorb
filds
in
mov
imul
clc
es
mov
into
rorl
inc
or
mov
fcoml
and
dec
xor
loop
sbb
mov
mov
sub
push
and
insb
xchg
jge
mov
jns
movsb
xchg
jnp
test
jns
sub
lods
subb
repz
xchg
mov
xchg
xchg
popa
sub
sub
inc
dec
or
test
cmp
sbb
mov
sbb
xor
les
inc
mov
fidivs
mov
neg
sahf
sbb
lahf
jmp
loopne
arpl
cli
dec
ja
sbb
xchg
out
xorl
sub
and
mov
and
je
inc
outsl
scas
aam
sbb
sub
mov
imul
imul
out
xchg
inc
adc
jbe
jb
xchg
leave
idivl
test
jle
ja
fldt
out
scas
xor
fisubs
cmp
inc
xchg
or
cmp
into
push
bound
push
or
aam
mov
lret
frstor
fidivl
int3
inc
or
adc
call
sub
call
daa
mov
jns
out
mov
repnz
cmpsb
dec
push
inc
cmp
mov
or
dec
sbb
ret
mov
out
push
lret
push
pop
and
iret
dec
push
data16
sbb
add
fidivrs
mov
mov
push
pop
xor
add
dec
xchg
push
fldpi
and
sub
dec
sbb
push
popf
fnstcw
push
mov
out
sub
ret
mov
and
cld
push
push
dec
clc
cmc
insl
xor
loop
int3
xchg
ret
xchg
jl
popa
xor
adc
mov
add
mov
sbb
in
dec
scas
xor
adcb
jle
fldcw
xchg
jl
and
jns
sahf
daa
call
in
addl
mov
imul
inc
shlb
push
aas
mov
xchg
cld
js
les
and
inc
xchg
cmpsb
inc
bound
sub
lods
pop
cwtl
getsec
cmp
xchg
ljmp
int
pop
mov
mov
mov
loopne
dec
or
mov
sub
xchg
outsb
aaa
leave
hlt
pextrw
inc
iret
mov
mov
lods
shlb
cs
mov
ja
jle
pushf
jnp
mov
cmp
jp
test
pop
negl
movsl
mov
mov
dec
cmc
or
and
popa
push
nop
ds
sub
pop
push
iret
ret
xor
ss
and
xlat
test
pop
je
popa
xor
push
push
lds
hlt
add
inc
sub
daa
test
sbb
nop
das
es
mov
nop
add
out
mov
mov
es
inc
mov
push
xchg
into
ret
fbld
dec
hlt
lock
cli
mov
loope
or
pop
cmp
cltd
dec
addl
fwait
mov
sbb
hlt
fldenv
in
scas
and
mov
lahf
adc
dec
test
sub
out
jb
jg
mov
out
lret
cmp
lea
or
xor
dec
aaa
cld
mov
adc
stc
rcrb
bound
call
das
out
nop
test
push
ss
xchg
fisubrl
cmp
push
add
std
cli
push
xor
adc
ljmp
cwtl
inc
aad
pop
imul
and
and
icebp
mov
sub
adc
push
jo
or
push
jmp
mov
lcall
or
push
mov
jecxz
fwait
ret
pop
pop
mov
push
mov
pop
and
shlb
sar
and
aas
mov
dec
xchg
sti
add
std
xchg
sub
sub
loop
imul
movsb
jp
sbb
adcl
imull
lea
lds
mov
int
push
xchg
inc
nop
jmp
push
lods
jne
shl
push
data16
loope
xor
xchg
dec
xor
not
lods
je
lret
andl
push
or
imul
mov
jle
mov
call
and
in
mov
scas
imul
push
or
dec
or
push
mov
fmuls
and
ds
fs
scas
cs
push
loop
xchg
cmp
jp
fldt
shll
dec
add
cltd
aaa
adc
data16
or
mov
jnp
push
rcrb
xor
cmpsl
scas
loop
sub
or
mov
and
faddp
das
mov
inc
cmp
imul
andl
push
pop
jb
jp
lret
and
pop
in
scas
mov
pop
jnp
jns
jl
mov
cmp
xchg
subb
push
jo
pushf
call
mov
push
clc
ja
xchg
mov
inc
lock
push
push
lock
sub
mul
or
pop
dec
adc
push
mov
sti
add
mov
xor
jb
and
inc
xor
or
jge
add
xchg
loopew
gs
xchg
int3
cld
inc
mov
jge
xchg
lret
push
fstl
aas
mov
push
add
cmp
dec
dec
je
or
in
xchg
push
bound
and
cmpl
cltd
gs
and
sub
or
push
hlt
jge
nop
jns
xor
leave
imul
xchg
and
mov
pushf
sarb
aam
add
cltd
addr16
scas
or
outsl
cmp
rorb
xchg
cmpsl
push
movsb
push
jae
mov
xchg
xchg
xchg
jmp
add
gs
fs
cltd
push
sbb
sub
in
scas
jmp
jns
in
std
ds
test
adcb
dec
sub
std
imul
in
mov
pop
cmp
mov
mov
add
mov
pop
lahf
std
jge
loopne
sbb
std
xchg
xor
imul
mov
or
nop
sub
push
cmp
and
adcb
push
cmpl
addb
or
loop
mov
aad
fldt
ss
sbb
add
xor
cmpsb
or
cs
or
add
adc
cmpsb
or
cmp
in
add
sbb
test
push
sbb
inc
xor
mulb
adc
inc
mov
add
mov
jp
jg
stos
dec
out
imul
jb
clc
lods
jmp
jns
xchg
stc
jb
mov
sub
push
cmp
adc
sbb
jae
lret
xchg
xchg
or
subb
rorl
je
negb
jl
sbb
or
lock
cmpsl
cli
adc
and
ret
mov
rorb
fiaddl
scas
adc
fisubs
movsb
outsl
inc
insb
pusha
std
stos
sbb
sub
push
inc
dec
insl
push
out
mov
add
push
and
mov
lods
jne
xchg
gs
cmpsb
leave
shrb
mov
repz
std
adc
dec
cmp
stc
mov
test
rcrl
or
inc
dec
dec
inc
shl
xor
popa
mov
xor
mov
fstps
push
loop
nop
loope
adc
sbb
xor
test
mov
cmpsb
xchg
testb
dec
add
add
sub
inc
dec
in
jne
jecxz
imul
push
loopne
lcall
adc
sbb
mov
std
sbb
pushf
dec
loop
xor
dec
shlb
push
sti
cmc
scas
popa
and
sub
dec
out
cmp
mov
loope
xor
inc
repnz
jmp
test
mov
pop
roll
pusha
xchg
cld
push
sub
leave
xchg
lds
inc
outsb
sub
push
mov
lret
dec
xchg
cmp
xor
jo
sub
pushf
scas
testl
out
ljmp
inc
sub
scas
mov
mov
rcl
cltd
das
mov
popa
scas
pop
fdivs
and
xor
mov
and
xchg
jle
mov
sbb
imul
mov
mov
lods
test
mov
outsb
pop
aad
cmc
stc
jp
mov
mov
shll
sub
nop
mov
call
xchg
out
mov
loope
mov
xchg
inc
inc
jle
pop
int
fs
popa
inc
lret
pusha
xchg
jns
adc
inc
sub
pop
test
lock
aas
adc
cs
adcl
sub
jne
int
sbb
js
mov
dec
imul
aad
inc
jae
mov
inc
bnd
lahf
rclb
xlat
xor
inc
push
mov
jl
enter
xchg
and
cmp
loop
into
inc
aas
rep
inc
dec
cmp
out
xchg
int
iret
xchg
dec
or
out
sahf
sub
jle
mov
dec
ficomps
jl
jecxz
in
add
xor
jl
xchg
and
orl
pop
stc
data16
xchg
mov
mov
je
pushf
mov
jp
js
push
div
sub
shr
test
push
out
mov
or
cmpsl
cmp
leave
cmp
lods
out
dec
inc
mov
cli
xor
jns
dec
sbb
jg
or
mov
push
loop
inc
leave
xchg
mov
call
jge
and
imul
xlat
mov
lock
je
xor
sub
pop
call
std
fidivrl
pop
outsb
pop
inc
addr16
movsl
cmp
loop
test
dec
inc
lret
imul
test
mov
push
fimuls
mov
pop
xchg
sbb
aas
es
pop
cmpsl
push
arpl
push
or
fistpl
xchg
push
jmp
and
aas
sbb
sbb
stc
or
dec
xchg
aam
ret
add
jp
inc
cmp
into
out
fwait
or
lds
insl
test
sub
jg
pop
add
inc
cmp
movsb
sbbb
in
scas
iret
xchg
addr16
inc
lahf
dec
push
fidivs
add
mov
arpl
inc
adc
push
fisttps
fstpt
out
sub
int3
loope
shr
repnz
sbb
icebp
int3
mov
cmp
mov
push
out
and
xchg
jp
daa
fdivl
bound
loopne
cmp
pop
sub
lds
popf
loope
fs
rorb
aad
mov
loop
mov
sub
inc
popf
sbb
sbb
loop
fistpl
and
cld
imul
js
mov
fndisi(8087
lahf
xlat
rol
shrb
arpl
push
cld
add
dec
mov
xorl
cmp
out
add
insl
cmp
dec
jno
push
ss
mov
adcl
or
int3
push
dec
adc
jp
insb
push
mov
mov
shr
sbb
mov
fldl
dec
ror
into
cld
xchg
dec
push
mov
sub
hlt
fs
xchg
push
mov
ds
jg
iret
mov
jge
and
adc
lahf
sbbl
add
xor
xlat
idivb
andl
cmp
mov
test
fmul
call
loope
xchg
stos
mov
push
mov
xor
outsl
inc
add
cmp
inc
mov
cld
aaa
shll
fwait
push
out
cmpsl
shrb
add
inc
or
in
sahf
inc
pop
add
test
idivl
pop
adc
shll
fcomps
and
test
inc
xor
testl
nop
cmpsb
sbb
ljmp
les
mov
sbb
sbb
jmp
jbe
jl
inc
int3
dec
jmp
mov
ficoml
pop
dec
test
xor
jb
loop
imul
xorl
and
push
rorl
mov
mov
dec
imul
mov
fs
dec
push
movsl
ds
mov
movsb
jae
int
pop
popa
push
cmc
and
xchg
xchg
mov
xor
mov
xor
fbld
sbb
icebp
test
sub
dec
in
xor
movsl
cmp
mov
and
cmp
jle
cmpsb
rcrl
test
inc
fwait
and
sbb
fisubs
pop
cmpsb
push
gs
cmp
cmpsb
mov
cs
jl,pt
mov
je
mov
dec
cwtl
xor
clc
mov
fnsave
cmpsl
sbb
pusha
nopl
call
test
xor
lret
fisttpll
jno
les
daa
xor
xchg
cmp
stos
inc
mov
stos
hlt
mov
push
xchg
xchg
push
mov
rcrl
les
psubusw
into
insl
and
fs
in
mov
aad
adc
div
cltd
pop
xor
xor
in
rol
roll
mov
ret
push
pop
je
roll
daa
mov
in
popf
hlt
adc
ret
add
pop
mov
into
xor
sti
cmp
insl
push
jmp
fdivs
lcall
cmp
dec
sbb
pushf
or
ret
sub
imul
sarb
ljmp
aas
jl
push
cmpsb
hlt
jne
bnd
mov
dec
dec
or
sub
ret
rcr
out
popf
jno
js
mov
jo
mov
mov
aad
int3
pop
jns
xchg
pop
jb
pop
mov
fs
add
int
add
sbbb
sbb
mov
pop
sbb
ja
imul
cmpsl
fiadds
lcall
push
or
push
scas
xchg
pop
popf
movsl
dec
shll
aam
outsb
flds
push
stos
mov
outsb
adc
sub
push
fcomp
xchg
inc
out
mov
push
inc
pop
shll
push
add
std
subl
xchg
mov
imul
or
outsl
inc
rol
neg
xor
xchg
mov
cmp
les
xchg
jecxz
leave
fstl
jae
inc
out
pop
out
stc
mov
daa
cmp
loop
add
dec
lock
fists
in
ds
add
out
jg
lods
inc
mov
decl
cwtl
int
movsb
pop
mov
fs
into
stos
jne
add
pusha
loopne
and
lret
jp
test
shll
add
push
adc
lcall
call
dec
roll
mov
lret
inc
outsl
into
or
sbb
mov
and
js
and
mov
test
xchg
sub
and
pop
push
je
mov
fcomip
fstpl
dec
push
repz
psubusw
loop
lods
mov
and
popf
jno
pop
ja
jmp
sbb
int3
dec
inc
aaa
fcmovne
mov
ja
das
jnp
adc
aas
xchg
movsb
xchg
sub
sub
movq
pop
mov
lock
and
dec
in
mov
in
seto
pusha
movsb
nop
lock
sbb
mov
pop
std
aad
fcmovu
fdivr
xchg
xchg
or
ret
mov
cmp
int3
push
out
mov
mov
js
sbb
sti
jg
jmp
cmp
sar
mov
xor
adc
data16
jle
shrb
loop
jge
loopne
pop
mov
sub
mov
jno
mov
mov
or
inc
pop
adc
pop
xchg
or
adc
push
andl
push
mov
cmpsl
jno
stc
dec
decl
test
push
jns
mov
add
ss
jp
jmp
mov
or
or
sarb
mov
or
jle
xor
call
push
rorb
loopne
sbb
repnz
pop
out
ja
sub
dec
mov
push
or
stc
push
outsb
jmp
dec
lahf
inc
or
mov
nop
cmp
movb
mov
sti
dec
into
inc
push
pop
js
push
sar
enter
jl
inc
test
push
push
sub
daa
lods
xchg
push
shll
jp
xor
sbb
sub
xor
jl
int
add
addr16
ret
int3
clc
cmp
push
fnstcw
and
push
or
sub
cmc
mov
cmc
fstpl
pop
push
lea
push
data16
loop
into
lods
jnp
add
or
fisubrl
push
and
popa
mov
ds
adc
and
aas
xchg
ja
movsl
lods
lret
lret
sub
test
pop
or
or
and
rcl
arpl
lahf
loop
sahf
nop
stos
inc
enter
push
push
clc
mov
xabort
mov
pop
sub
js
leave
sbb
data16
sbb
push
dec
fldcw
or
add
shrb
push
int3
add
test
xor
pop
mov
push
popf
and
scas
sub
sub
and
push
add
mov
loop
popf
jno
ja
mov
add
adc
subl
out
sub
add
cmp
out
in
pop
cmp
std
jo
fistpll
adc
sarb
mov
decl
je
daa
fs
sbb
fsubrs
test
addl
xchg
lret
hlt
bnd
orl
push
mov
rcr
ret
out
sub
pop
cmp
inc
mov
fwait
notb
inc
stc
pop
xchg
aam
jne
movsl
shll
xor
push
gs
dec
cmp
je
mov
mov
testb
loopne
cmp
dec
jp
dec
add
sarb
outsb
inc
push
xchg
mov
leave
xorl
or
push
popa
xchg
icebp
dec
mov
in
int
adc
dec
popa
fbld
lods
cmp
mov
mov
filds
jbe
js
add
lcall
sub
daa
jae
push
pop
mov
mov
dec
incl
decl
pop
pop
or
mov
sahf
and
pop
push
insl
dec
xchg
cmpsb
push
jbe
or
daa
jmp
sti
call
dec
and
mov
sti
fs
inc
jle
arpl
in
fildl
mov
out
in
sar
int3
ret
data16
mov
mov
inc
push
js
cwtl
fwait
mov
js
cmp
pop
dec
repz
and
in
insb
je
push
sub
fcoml
popf
mov
aad
cld
loopne
xlat
mov
mov
jle
mov
mov
imul
mov
imull
in
lock
xchg
lret
aam
shr
jo
mov
mov
mov
and
and
mov
jnp
pop
cli
sti
sub
add
filds
pop
outsl
pop
pop
adc
aad
ds
xor
cltd
or
push
mov
push
xchg
daa
xorl
int
aam
stos
mov
rcrl
jg
fstl
arpl
adc
mov
jnp
in
testb
adc
add
shrb
ss
cmpsl
or
xor
in
and
addb
sbb
pop
jae
les
jp
pop
xor
loop
cmc
call
ss
mov
dec
push
imul
mov
sahf
cltd
jge
or
mov
pop
dec
adc
mov
xchg
dec
add
mov
mov
call
cmovo
inc
inc
add
push
pop
pop
cld
stos
out
gs
movsb
icebp
adc
jl
loop
das
cmp
adc
sbb
les
pushf
xchg
ret
xchg
cmc
or
mov
in
ds
push
in
add
fs
lret
cld
dec
popa
cltd
add
mov
bnd
adc
ds
repnz
sbb
test
ficomps
popf
mov
push
mov
idivl
pop
add
ret
sbb
mov
call
cmpb
fstl
push
inc
test
ds
push
outsl
int3
jg
mov
aas
xor
mul
popf
stc
mov
testl
sbb
sarb
adc
and
dec
mov
sbb
loop
dec
fstl
add
xor
mov
xchg
call
test
scas
xchg
cli
dec
roll
adc
xor
pop
lods
mov
gs
jnp
mov
jge
and
cli
fwait
jle
and
or
test
push
and
negl
sbb
lret
mov
in
ffree
xor
jecxz
inc
leave
jmp
dec
fwait
lea
mov
ds
push
jg
mov
add
inc
mov
dec
popf
cmp
jmp
cmp
ret
cmp
ds
xor
hlt
sub
pop
cmp
daa
xchg
dec
or
and
stos
mov
sub
insb
scas
add
pusha
and
out
sub
dec
mov
es
or
bound
sbb
pop
cs
or
jl
push
addr16
mov
add
push
imul
loope
mov
xor
cld
icebp
mov
cmp
inc
add
data16
pop
arpl
outsb
xchg
sub
xchg
int
sbb
lahf
popa
cwtl
shll
arpl
push
jno
lea
lret
movsb
adc
pop
dec
loope
in
pop
repz
imul
subl
mov
scas
lds
repz
push
imul
sbb
or
dec
mov
jno
adc
cmp
cld
cmp
popf
rcl
jns
push
lds
mov
inc
es
jno
sbb
pop
sbb
sbb
xchg
lock
int3
call
mov
std
jbe
dec
and
xchg
movsw
addr16
scas
lret
add
add
pop
sub
data16
add
push
in
in
pop
push
push
out
mov
sub
repz
cwtl
xor
pop
imul
fistps
out
pop
inc
repz
inc
sbb
cmp
leave
cmpsb
out
xor
and
sub
cwtl
jno
scas
push
push
lds
fnstsw
adc
imul
rcr
outsb
lcall
clc
jo
push
push
jno
mov
sbb
jg
cmc
add
fdivrp
cmc
ja
push
dec
outsl
stos
ret
push
bound
rcl
in
sbb
in
mov
adc
push
xchg
push
fsts
cs
adc
int
xor
fcmovne
outsb
jae
push
mov
insb
stos
push
xchg
cld
ret
push
or
aad
lret
pop
movsb
into
clc
ljmp
pop
and
mov
and
lcall
pop
in
cltd
cmovns
sub
mov
adc
inc
cmp
cli
imul
cmpsb
popa
loop
popf
or
and
sub
cmp
movb
stos
dec
xchg
fildl
stos
imul
cmp
jne
je
cwtl
cwtl
leave
sbb
shlb
mov
cwtl
loop
adc
aas
scas
cs
test
fnstsw
out
dec
mov
pop
pop
sahf
test
add
stc
scas
pop
popa
mov
pop
adc
jecxz
pushf
fucom
jbe
repnz
push
stos
sarl
cmp
and
push
push
stc
rclb
popf
push
push
int
mov
adc
leave
push
dec
cmc
movsb
cmp
and
cld
loop
int
inc
push
lahf
mov
pop
pop
xor
dec
xchg
dec
or
xchg
in
xchg
imul
sbb
stos
cmp
roll
fcoms
sub
popf
mov
leave
scas
scas
inc
aaa
int3
int
sbbb
xchg
jle
jmp
sub
pop
in
jae,pt
add
inc
push
cwtl
push
je
enter
jnp
jno
cs
mov
pop
jl
lds
cli
fnstsw
inc
jg
xor
mov
mov
cmp
lds
imul
or
sbb
and
shlb
test
ret
pop
xchg
pushf
in
stos
pop
mov
pop
jg
std
fldenv
cwtl
mov
loop
add
or
xor
xchg
jge
dec
pop
mov
mov
faddl
shlb
sbb
xchg
test
sub
js
sub
mov
aam
repnz
ret
lods
lea
mov
dec
pushf
dec
movsb
jp
rclb
lcall
push
xor
or
and
stos
rcrl
insb
lret
sysexit
sub
xchg
add
jmp
jg
vandpd
addr16
movsb
jbe
inc
clc
fucomip
mov
dec
movsb
jb
cmp
loop
add
push
sub
fbld
push
mov
fcoml
aaa
inc
xchg
jno
je
cmc
sbb
jae
sbb
insb
mov
call
movsl
inc
testl
popl
ja
inc
xacquire
xor
cs
cli
mov
out
and
bnd
adc
xchg
mov
fnstcw
xor
pop
pop
pop
xchg
inc
adc
mov
aaa
mov
sub
xchg
rolb
mov
ret
repz
xchg
out
push
fldenv
or
add
sub
jmp
mov
std
xchg
inc
push
add
pop
sbb
gs
inc
cmp
xchg
orl
xor
mov
adc
xor
sbb
mov
sbb
lret
out
mov
sub
jmp
imul
cmpsl
cmp
dec
xchg
mov
add
push
repz
jp
popf
fwait
adc
sub
lds
scas
mov
iret
jle
cmp
mov
adc
cs
movsb
mov
stc
stos
cmp
mov
and
orl
jns
dec
pushaw
lea
lock
cltd
cmp
js
lods
lcall
xchg
add
push
iret
sbb
dec
jbe
xor
in
mov
xchg
ja
into
mov
push
jecxz
adc
test
inc
or
xor
push
xchg
hlt
pop
push
fdivrl
int3
int
sti
add
push
leave
test
lock
loop
sahf
and
push
rolb
cmpsb
sbb
sub
inc
adc
dec
push
inc
daa
fwait
decl
lret
dec
sarb
mov
ss
sti
lret
lret
or
jno
fcmovnbe
into
push
fdivrl
and
xchg
movsb
add
rcrb
fmull
inc
xor
xchg
fsubp
lea
mov
scas
add
xchg
add
xchg
scas
push
push
add
les
adc
add
pop
mov
movsb
sbb
inc
lods
or
fmul
scas
mov
dec
les
scas
enter
adc
jecxz
punpckhbw
push
mov
dec
adc
jl
int
mov
push
es
fwait
iret
mov
gs
fisubl
lahf
movb
xchg
sti
addw
popf
je
cmpsb
lds
