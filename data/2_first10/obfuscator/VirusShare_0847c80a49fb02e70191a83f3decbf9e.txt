push
push
cmc
inc
xchg
mov
mov
lea
js
je
inc
lock
aas
mov
stos
and
xchg
test
ds
insl
aas
cld
mov
mov
dec
and
imull
les
fsts
insb
je
test
out
mov
cmc
fwait
jb
xchg
mov
cmp
icebp
xchg
pop
out
rcl
in
scas
int3
in
sti
mov
xorl
jae
andl
lahf
lock
push
jo
inc
pop
cmc
adc
push
shrb
pop
pop
inc
mov
sbb
cmc
aad
or
lret
out
pusha
mov
adc
leave
cmp
pop
or
dec
sar
mov
jl
sahf
and
push
fidivrs
imul
sub
sub
int3
pop
sub
int3
shl
js
je
aad
imul
ja
cwtl
jno
lods
dec
mov
insl
sub
sbb
xchg
aam
jae
insb
ret
jp
ja
xchg
push
daa
rcll
es
loopne
andl
bnd
hlt
test
or
pop
add
fldl2t
add
push
test
or
dec
sub
xor
jp
jecxz
cltd
cwtl
int
cmpsb
jg
xlat
lret
xor
push
jle
mov
cld
cwtl
and
cs
jp
pop
test
dec
cmp
mov
ds
das
or
mov
popf
add
lret
push
adc
loopne
sub
sbb
das
mov
sbb
or
aad
aaa
pop
aas
cmp
sbb
push
xchg
inc
xchg
mov
fstp
addb
lcall
fbld
jo
test
stos
sub
and
or
adc
inc
lds
fsubl
pop
inc
scas
js
dec
inc
cmc
or
jnp
imul
inc
jg
cltd
aas
lods
sahf
push
pop
dec
cmp
mov
sub
push
pop
dec
xor
jb
or
dec
in
pop
movsl
adc
lret
lahf
cld
mov
xchg
sub
mov
mov
jno
outsb
sub
dec
test
sbb
mov
movsb
push
in
or
push
in
adc
sbb
pop
dec
xor
popf
mov
xor
push
test
sbb
sbb
mov
ds
mov
inc
xchg
inc
xchg
mov
ret
adc
xchg
sub
les
jb
inc
or
and
cld
dec
aaa
pop
inc
arpl
mov
scas
adcb
fadd
jecxz
leave
push
pop
dec
jge
dec
js
lret
push
sub
jmp
pushf
or
push
in
mov
call
and
cmp
sbb
fsubrp
cwtl
enter
cmpsb
test
pop
sbb
push
fidivrs
loop
mov
xchg
shlb
xchg
scas
jo
pop
pop
sub
jmp
mov
mov
movsb
cmc
inc
and
outsl
sbb
iret
nop
hlt
jmp
cli
shlb
ja
in
notl
inc
stos
adc
mull
add
adc
jle
adc
leave
inc
push
inc
xchg
push
clc
stc
mov
push
mov
adc
fsubs
outsl
aaa
shlb
movhps
inc
and
cli
sahf
xchg
dec
push
lods
pop
xor
adc
and
or
jne
cltd
insb
lods
push
cmp
dec
sbb
popa
or
push
repz
lods
out
mov
add
cli
xchg
scas
repz
lahf
iret
test
mov
jg
dec
sub
aaa
push
cmp
or
loopne
mov
js
mov
xchg
mulb
cltd
sbb
lahf
jmp
loopne
int
xchg
into
out
nop
js
inc
or
inc
jecxz
inc
outsl
push
dec
scas
cld
pop
pop
add
xlat
inc
inc
xchg
scas
jno
es
mov
decl
stos
mov
add
dec
das
jb
mov
aad
movsl
mov
fwait
fwait
xchg
xor
sarl
shll
dec
pop
jmp
int3
aad
or
ljmp
mov
xor
push
sbb
bound
cmp
sub
cs
jae
inc
lods
scas
mov
daa
repnz
mov
stos
das
pop
or
jns
cmp
push
ds
pushf
repnz
and
icebp
popf
mov
insl
mov
xchg
int3
jl
arpl
cld
ljmp
in
push
das
or
jb
inc
and
jnp
jae
dec
imul
pop
jge
mov
lcall
int
fimuls
scas
pop
xor
dec
in
push
inc
xchg
mov
aad
cli
sbb
loopne
outsl
sub
les
sbb
and
lock
sub
push
xchg
jns
xlat
inc
adc
popw
xchg
or
jns
xchg
sbb
mov
sti
sub
cwtl
sbb
sbb
xor
jo
lret
cmp
xchg
stos
lea
sbb
mov
xlat
push
js
pop
leave
jmp
mov
fisubl
pusha
insl
clc
mov
adc
or
pop
mov
stos
push
push
sbb
jge
jno
cwtl
push
or
into
xchg
mov
and
mov
adc
mov
dec
les
pop
mov
add
push
sbb
jl
pop
mov
fsubrp
test
cltd
loop
sbbl
cmp
int
sub
das
add
int
aad
je
inc
xor
mov
pop
push
cmp
jbe
scas
jnp
xor
mov
outsl
inc
sbb
xor
sbb
enter
ret
sub
loopne
or
push
and
pusha
std
popf
clc
mov
ret
mov
dec
inc
xchg
lods
jp
aaa
int3
xor
inc
enter
cli
movsl
leave
mov
jbe
dec
jnp
cs
add
mov
push
test
int
out
adc
aaa
jns
inc
xchg
lods
fcmovb
jnp
test
mov
insl
add
mov
inc
xchg
mov
call
aam
daa
xorb
push
stos
clc
xchg
mulb
adc
pop
popf
xchg
iret
pop
pop
push
call
sbb
cmp
call
fwait
xchg
add
inc
dec
lds
inc
and
dec
addr16
movb
mov
pusha
lea
jmp
push
movl
pushf
pushf
lea
jmp
movsl
mov
mov
and
xchg
iret
loop
stc
mov
mov
fsubrl
and
pop
sbb
pop
pop
adc
mov
jecxz
loope
adc
sbb
ds
ss
inc
notb
out
imul
js
lcall
lret
add
leave
imul
hlt
ljmp
bound
and
aad
jl,pn
fildll
adc
mov
xor
lods
xor
fsubrs
data16
cmp
out
data16
pop
mov
mov
out
outsl
stc
aas
sbb
hlt
dec
sub
arpl
mov
roll
mov
xchg
push
mov
xchg
xchg
xchg
repnz
mov
xchg
cld
sahf
sub
leave
mov
jo
shll
pop
sbb
dec
and
push
inc
dec
js
rorb
sub
mov
cmpsb
cld
inc
ds
push
push
fistpl
inc
xchg
stos
leave
sti
roll
test
icebp
fimull
in
in
das
inc
hlt
mov
pusha
loop
divl
and
add
jne
daa
mov
mov
ss
cmpsb
in
cvtps2pd
push
imull
popa
mov
push
out
xchg
imul
aas
jbe
push
pop
mov
in
jns
push
cmp
mov
inc
je
mov
es
add
sti
inc
xchg
stos
mov
and
daa
xor
inc
cmp
pop
loope
jmp
repz
iret
stos
ret
pop
outsb
jae
shlb
sub
daa
xor
xorb
push
dec
xor
iret
in
insb
notb
roll
mov
xor
jmp
mov
adc
pusha
inc
and
xor
mov
sbb
or
mov
add
out
push
inc
xchg
stos
lods
push
push
movb
pusha
pusha
movl
push
lea
jmp
pop
lds
jns
mov
ja
popf
daa
jne
push
stos
fdivrs
pusha
xchg
mov
xchg
mov
testl
out
adc
jbe
arpl
ds
jmp
or
pop
rcrl
push
lds
xor
mov
push
inc
xchg
stos
fs
xchg
jno
into
test
stc
mov
xchg
jecxz
adc
aam
mov
jbe
jecxz
addr16
adc
xchg
sub
in
test
inc
sbb
call
and
or
or
clc
mov
fwait
add
push
xchg
jecxz
ss
data16
outsb
sub
inc
xor
lret
jle
test
sub
jns
out
xchg
xorb
dec
add
xor
mov
inc
or
xor
xchg
stos
xor
jb
aad
mov
xor
jp
dec
and
scas
shl
test
mov
mov
cmpsb
pushf
sub
jns
jbe
je
loopne
jbe
jb
stos
sbbl
sub
pop
daa
jp
push
jmp
xchg
test
mov
pushf
pushl
movl
mov
pushf
mov
lea
jo
push
pushf
lea
jmp
pusha
mov
movl
pushf
movl
pushf
push
pushf
mov
lea
jmp
shrb
aad
add
or
push
xor
mov
pop
or
dec
insl
in
sub
and
mov
jno
mov
mov
into
sub
mov
adc
outsb
xor
pop
jae
mov
xchg
imul
shlb
xchg
inc
xchg
test
fld
jmp
or
jno
add
out
and
cmpsb
testb
fnstcw
xchg
out
shl
xchg
xor
sbb
mov
sub
popf
in
sub
or
les
in
mov
mov
or
jo
or
lahf
fwait
jne
lretw
roll
iret
xchg
mov
fstpt
int3
xchg
jge
xchg
cmpsl
and
iret
push
adc
mov
jmp
jp
cmp
shlb
push
add
loop
push
mov
jb
popa
lahf
int
pop
ljmp
pop
dec
arpl
inc
into
arpl
dec
xchg
movsl
cli
push
outsl
test
add
xor
sarb
stos
in
int3
xchg
mov
push
lret
aaa
xchg
xchg
ret
xor
cli
fwait
cld
pop
sbb
mov
adc
dec
push
ja
ja
xlat
inc
in
push
pop
cmpl
in
mov
test
and
popa
pop
jge
dec
fiadds
sub
cmp
push
push
push
xchg
lods
mov
mov
mov
adc
pop
sbbl
ret
in
add
adc
enter
movsb
mov
push
jecxz
outsl
dec
lods
sub
pop
faddp
inc
out
or
add
or
pop
sahf
inc
xchg
cmpsb
mov
repz
sbb
shll
xor
inc
push
mov
pushf
mov
iret
push
dec
push
std
xchg
cmp
call
stos
pop
cmp
pop
dec
test
ds
repz
movsl
aas
push
mov
push
mov
sti
xchg
mov
bound
add
insb
outsb
cmp
pusha
stc
mov
scas
out
pop
inc
xchg
cmpsl
and
repnz
repz
and
sub
mov
dec
insb
sti
bound
mov
mov
dec
stos
mov
mov
btr
xchg
sahf
push
add
sbb
arpl
push
push
jg
lahf
andb
sahf
mov
push
xor
addr16
fsubrl
stc
xchg
movsl
notl
jo
adcl
inc
pop
add
sbb
jge
nop
scas
jo
lods
repz
sbb
cmp
repz
iret
xchg
xchg
adc
out
dec
sbb
adc
pop
ret
adc
pop
call
pop
mov
je
jnp
out
ljmp
pop
lcall
mov
inc
xchg
into
lea
push
addb
inc
xchg
movsl
xchg
mov
pop
das
jne
stc
les
push
mov
adc
jle
bound
push
sub
and
mov
sbb
xchg
ljmp
cs
dec
es
push
loope
js
push
fcmovnbe
push
dec
arpl
test
pusha
sti
dec
and
sbb
push
inc
cmpsb
rcr
jp
cmp
cmp
in
sbb
leave
cli
fistpll
adc
add
ja
or
stc
jp
aaa
jns
mov
or
or
test
or
andb
push
mov
cmpsl
inc
adc
push
shll
and
arpl
sbb
add
jne
jb
adc
push
ja
mov
cli
ds
add
shll
inc
decl
push
dec
into
stos
iret
sti
call
cld
dec
cld
lret
cmp
pop
lret
out
movsl
sarl
push
dec
jecxz
movsb
inc
adc
sub
das
shlb
add
stc
jp
inc
jbe
in
outsl
xor
sti
xsha1
cmpsb
dec
jnp
or
adc
xor
dec
sbb
jle
or
repz
sbb
test
adc
mov
push
aaa
arpl
addr16
ljmp
push
cmp
and
clc
fdivrs
pop
push
push
or
lcall
outsl
aam
jnp
add
movsb
adc
sarb
popa
repnz
fildll
aaa
mov
sbb
and
pusha
or
dec
push
mov
cmp
pusha
in
sbb
pop
push
add
push
shlb
add
popf
std
mov
mov
movsb
fs
fcompl
and
lret
popf
sub
rorl
fdivs
or
popa
sti
loop
mov
icebp
stc
pop
aaa
mov
jge
pop
cltd
test
rolb
adc
call
dec
push
sti
sub
jle
imul
mov
pushf
fildll
sbb
jecxz
sahf
xor
in
sbb
aad
dec
push
loopne
sub
enter
movsb
aaa
jl
pushf
movl
jmp
fnstsw
pop
sti
push
icebp
lock
in
sbb
mov
fisubs
sub
dec
push
int
iret
or
aas
test
ret
dec
shll
dec
pop
dec
shrb
push
ds
cmp
mov
lock
aam
mov
call
or
sub
rorl
hlt
or
insl
test
dec
loopne
inc
mov
add
dec
lock
sub
push
sub
mov
loopne
or
scas
pop
pop
lds
add
jns
adc
pop
add
inc
push
jbe
rcl
bound
stos
ficoml
in
adc
mov
xor
divb
push
push
fs
pop
pop
stos
push
push
aas
mov
sub
mov
cmp
mov
xchg
jecxz
int3
fs
addr16
adcl
lods
das
std
rcll
inc
imul
fistpl
jb
ja
and
and
jle
or
cld
js
mov
stos
sbb
mov
das
and
xchg
ror
mov
imul
int3
mov
xlat
mov
and
mov
mov
shlb
popa
mov
and
subb
lds
insl
xor
in
into
push
mov
mul
sar
std
in
adc
fdivl
jle
mov
mov
movl
pusha
pushf
pushl
movl
pushf
lea
jmp
push
mov
pushf
pusha
movl
jmp
lea
ja
push
movl
call
mov
adc
xchg
and
pop
add
mov
nop
cmpsb
sbb
sbb
gs
icebp
ss
mov
cmc
pop
and
aam
and
mov
fwait
es
add
pop
add
xor
loop
dec
add
je
sub
push
aas
jns
inc
xchg
mov
je
mov
stos
int
rcll
cmpsb
aas
aad
dec
cmp
dec
xor
mov
dec
icebp
jge
mov
movsb
loop
aad
sti
xchg
sti
cld
inc
xchg
mov
bound
jbe
sarb
btr
nop
cld
cmc
sti
push
xor
iret
push
push
lods
sub
xchg
ljmp
pushf
inc
inc
std
int
dec
push
xor
hlt
xchg
or
jecxz
sub
inc
xchg
mov
or
and
cmp
pop
jb
jno
mov
ljmp
add
scas
adc
dec
or
jne
mov
jle
mov
pop
sub
cmp
and
movsl
lods
rcll
sub
bound
cld
dec
or
ds
jae
xchg
ret
jnp
push
pop
jno
push
in
rcrb
shrb
sub
scas
sbb
dec
dec
lods
hlt
sbb
aam
adcl
xor
aas
dec
in
xchg
mov
adc
test
scas
in
in
adc
into
fwait
les
cs
push
xor
clc
xchg
fsubs
fidivrs
ret
fdivrl
add
mov
pop
adc
arpl
bound
mov
lock
lods
icebp
jne
dec
cmpb
int3
jne
push
sti
repz
cwtl
jmp
dec
cltd
out
mov
push
push
xor
cwtl
pop
dec
mov
imul
dec
cmpsb
mov
push
xor
sub
movsl
pop
cmp
scas
fwait
test
enter
lock
dec
or
inc
xchg
lahf
into
cld
sarb
daa
sub
popa
add
jb
xchg
bnd
or
adc
shrb
stos
loope
ficomps
pop
ss
add
ficompl
add
push
xor
push
dec
or
add
add
lahf
mov
insl
jp
subl
pop
inc
xchg
lahf
dec
jp
dec
stos
lret
push
mov
aam
jbe
js
ja
inc
movb
out
leave
pusha
inc
je
imul
sbb
xor
nop
add
pusha
cmp
loopne
pusha
or
data16
mov
lds
mov
adc
push
cmpsl
bound
shrb
dec
aaa
jbe
adc
mov
cld
cmpsl
jbe
adc
jg
ss
push
inc
dec
rclb
lds
nop
push
in
ljmp
sub
ret
cltd
daa
add
push
mov
ss
mov
pop
cld
fwait
and
sarl
rcll
js
xchg
loopne
fldt
jl
loopne
xchg
cmp
sbb
fimull
dec
mov
xchg
fs
cmp
push
lock
stos
adc
mov
adc
rcr
dec
mov
pop
mov
iret
movsl
jno
into
in
adc
push
mov
mov
lahf
inc
pop
xor
shlb
push
lret
jge
cmp
inc
cmpsb
push
xchg
mov
xchg
cli
jae
jne
adc
xor
out
daa
enter
scas
sbb
xor
mov
dec
jg
pop
adc
out
push
jo
dec
and
movsb
mov
inc
push
lock
movsl
popf
mov
cmp
xlat
sbb
imul
test
jno
push
mov
jns
xchg
xorb
enter
das
xchg
mov
leave
mov
stos
push
push
je
out
xor
jge
aam
ljmp
xlat
mov
stos
hlt
test
inc
xchg
sahf
push
ss
jnp
fbld
fldt
in
and
pop
pop
xchg
hlt
mov
in
sbb
push
adc
mov
icebp
outsl
andb
inc
sub
inc
mov
xor
add
mov
mov
push
or
cmp
jl
mov
pop
mov
fldt
fsubrl
gs
cwtl
shlb
mov
cld
mov
xchg
cli
fwait
enter
cwtl
shl
sar
jb
loop
ja
rclb
xor
insl
sub
stos
pop
cmovle
inc
xchg
popf
sbb
dec
movsl
pop
sbb
adc
cmp
stos
cmpsl
add
jae
mov
ljmp
test
or
pop
call
mov
sbb
jmp
incl
cmp
sbb
std
mov
std
es
stos
ja
inc
xchg
ja
das
icebp
loope
outsb
xor
outsl
ds
sbb
pop
and
mov
xchg
and
or
das
xchg
outsl
sbb
out
fldl
imul
mov
fsubl
test
sub
ja
jno
and
into
test
into
dec
lea
push
in
mov
ljmp
lret
or
lahf
xchg
push
es
lret
inc
cmp
dec
dec
scas
loope
pop
push
jp
roll
sub
xchg
rcr
test
adc
aad
movsb
sub
fimuls
les
mov
sbb
cmp
fs
fisubrl
mov
xchg
mov
insl
imul
push
mov
lcall
fcoml
mov
push
int3
cmp
stos
push
adc
inc
outsb
daa
imul
jbe
push
fisubrl
cmp
xchg
out
inc
mov
fildl
lcall
popf
adc
popw
jb
or
ret
cmp
imul
stos
fsubrs
push
mov
inc
das
cs
stc
sahf
fwait
popf
fwait
xchg
mov
int
sbb
mov
sub
lds
mov
sub
cwtl
leave
mov
add
inc
cs
inc
xchg
lcall
cmpsl
jae
mov
adc
and
inc
sub
cmp
jmp
es
movsl
ds
icebp
leave
mov
inc
stos
ror
inc
mov
test
add
insl
cmp
mov
les
cmpsl
rol
into
xlat
add
adc
jo
dec
ljmp
lds
xor
dec
notb
inc
lahf
jne
lahf
and
bound
mov
cli
outsl
push
mov
sahf
adc
stos
mov
inc
loopne
xchg
insb
sub
xchg
sub
or
aam
and
mov
dec
and
aad
cli
xchg
mov
in
addl
adcl
push
shrb
cmp
nop
jle
xchg
cltd
decl
adc
jg
and
dec
and
scas
mov
movb
sub
test
cmpsl
call
ret
push
and
xchg
push
test
into
cmp
js
xchg
xchg
mov
mov
xchg
lcall
and
scas
fmull
call
cmp
mov
adc
ret
test
xchg
repnz
je
add
jp
bound
add
push
adc
mov
jb
jns
gs
fnsave
std
or
sub
outsb
xchg
rclb
insb
and
aas
aad
cltd
or
jp
xlat
loopne
ja
in
jmp
stc
push
icebp
lods
lcall
pop
mov
setae
adc
imul
push
push
xchg
push
out
jl
and
int3
sbb
dec
mov
pop
idiv
cmpsb
add
subb
pop
jg
xchg
adc
inc
or
lret
pop
xchg
ss
sbb
jp
int
and
pop
sbb
inc
xchg
push
mov
dec
mov
mov
rep
sbb
in
cmp
cmpsl
and
pop
ret
pop
mov
ja
add
cmpsl
sbb
pop
adc
jnp
std
inc
sub
dec
das
lahf
out
mov
dec
lret
sbb
cltd
pop
pop
mov
push
pop
leave
push
xlat
adc
repz
nop
shll
mov
enter
nop
stc
fst
cs
out
stos
mov
mov
xor
cltd
lock
lods
add
add
dec
jae
insb
stos
add
adc
mov
test
cmc
mov
lahf
adc
mov
sbb
fisttpll
jbe
mov
shrb
inc
xchg
cwtl
push
cmp
mov
xchg
sub
add
push
ds
xchg
fsubl
adc
out
clc
divl
arpl
aaa
mov
mov
push
dec
int
aad
pop
mov
push
or
sub
ja
xor
ss
mov
xchg
inc
mov
out
dec
adc
mov
rcrl
inc
gs
out
in
pop
stc
jecxz
daa
push
cli
mov
mov
sub
push
nop
cmp
push
mov
popf
jge
pop
scas
jmp
mov
jno
movsb
adc
repnz
popf
std
repnz
stc
sarb
ficomps
pop
inc
lods
int
jae
sbb
inc
cltd
sub
mov
adc
jle
rclb
or
push
cmp
in
cld
xor
inc
stos
mov
loope
push
jge
ret
mov
lock
insb
mov
push
mov
xchg
xchg
mov
jge
repz
enter
push
and
sbb
repnz
pusha
sahf
gs
clc
scas
or
aas
cli
or
insl
inc
mov
jne
fs
push
and
and
xchg
ret
pop
add
pop
mov
jecxz
icebp
sti
int
fldenv
daa
loope
mov
mov
or
fsts
and
xchg
arpl
push
lock
xor
cmc
mov
in
pusha
pop
add
fldl
faddp
repz
mov
and
mov
dec
aas
and
add
mov
add
jae
fstpt
inc
xchg
xchg
xor
lods
jno
inc
js
jne
loop
faddl
arpl
outsb
and
xchg
leave
cmpsb
sub
adc
mov
and
aas
push
dec
ljmp
jb
insb
push
jno
movsb
in
sbb
push
mov
fstpt
jnp
cmpsb
leave
sub
hlt
mov
mov
stc
add
cli
push
dec
or
lcall
inc
xchg
xchg
out
push
lea
jne
push
pushf
pushf
lea
jmp
aam
imul
scas
inc
sarl
jnp
imul
icebp
xchg
fistpl
xchg
out
imul
test
std
sahf
shrb
popa
push
sub
negb
fmul
xchg
push
popf
in
outsl
xchg
cmp
push
test
jns
cmc
outsl
ret
icebp
mov
in
fimull
jl
scas
mov
arpl
repz
ret
xchg
pop
inc
xchg
xchg
pop
add
jo
fwait
cmp
lret
ds
or
add
insb
es
and
repz
dec
add
in
fcompl
dec
repnz
xchg
ret
pop
ficomps
cmp
and
pushf
xchg
add
mov
out
cmc
dec
or
sub
push
aaa
push
push
cmpsl
inc
lret
jno
jne
sbb
test
sub
scas
jae
adc
xchg
neg
fs
or
xchg
sbb
ret
pop
add
sbb
pushl
xchg
xchg
mov
hlt
mov
sub
cs
jl
js
mov
push
arpl
push
mov
mov
repnz
les
mov
ss
sbbb
aas
sbb
imul
in
jmp
popf
insl
loopne
inc
jp
add
stc
cmp
dec
pusha
push
or
mov
das
popf
shl
jbe
mov
fmull
pusha
call
std
mov
dec
repz
daa
jno
int3
out
aaa
in
stos
movsb
adc
jae
or
mov
cmpsb
xchg
and
fwait
jle
inc
jbe
push
adc
leave
inc
inc
and
inc
mov
data16
ja,pt
fldt
aad
inc
dec
das
xchg
mov
inc
mov
cmpb
imul
fwait
add
jne
aas
pushf
mov
add
bound
xchg
jecxz
jns
sub
cld
pop
xor
inc
les
pop
sub
pop
jmp
cld
popf
aam
ret
push
adc
outsl
jmp
arpl
ret
jp
mov
push
les
test
shr
fs
push
pop
fs
dec
push
xor
cmp
ds
jne
jae
xchg
push
dec
xorl
or
push
dec
in
idiv
inc
outsb
fsqrt
sbb
xchg
dec
dec
push
cmp
inc
sbb
inc
xchg
xchg
push
push
rorb
and
inc
rcrl
jmp
movl
pushf
pushl
mov
movw
lea
jmp
divb
mov
sub
mov
push
cmp
test
ret
xchg
incl
scas
stc
fcomp
and
ss
repz
or
xlat
aad
out
stos
js
iret
xor
mov
mov
push
dec
lret
aaa
jp
pop
and
sbb
sahf
outsb
or
aas
push
aas
outsb
je
or
push
xchg
xor
push
pop
inc
add
test
and
dec
iret
arpl
mov
adc
xchg
xchg
push
add
add
nop
mov
push
push
pop
lret
inc
push
xor
xchg
lock
xchg
adc
mov
testb
rclb
or
shlb
clc
jg
cmp
test
cmp
xlat
iret
dec
sbb
shlb
iret
dec
xor
lahf
mov
loope
pusha
pop
fcmovne
jl
rorl
pop
mov
adc
mov
push
daa
jae
movsb
inc
xchg
xchg
sbb
xor
jnp
gs
add
imul
push
or
jb
aam
into
xchg
lret
data16
inc
sbb
dec
push
mov
and
aaa
push
dec
js
mov
mov
mov
rorb
insb
lret
push
and
sarb
mov
cld
mov
fcoml
cmc
xor
lods
adc
pop
push
jae
inc
decl
bound
push
lcall
rclb
scas
inc
xchg
xchg
mov
mov
sbb
push
lea
jmp
push
push
loope
pop
cmp
int
jecxz
xor
pop
lds
pop
pop
dec
cld
cwtl
push
and
cs
in
shlb
jg
pop
cwtl
call
push
negl
ret
mov
adcl
xor
nop
es
push
fs
sub
lods
int
inc
xchg
xchg
cmp
sub
mov
outsb
and
mov
dec
mov
sub
mov
mov
jnp
pop
mov
adc
push
mov
stos
adc
pop
es
aam
add
mov
xor
xchg
mov
xchg
sub
inc
movb
call
sbbl
inc
xor
xor
mov
and
sub
scas
sub
es
es
les
jge
xchg
nop
bound
jmp
jbe
sbb
xchg
sub
enter
sub
mov
xor
add
jno
push
cmp
push
dec
das
loope
jmp
inc
mov
jmp
and
jno
mov
push
ds
mov
and
out
gs
pushf
lea
jmp
pushl
movl
mov
push
pushf
push
lea
jmp
ss
test
test
in
mov
cmp
incl
aad
sub
test
cmp
mov
dec
push
jno
lds
xchg
stos
daa
cs
shll
xchg
shl
mov
push
xor
es
xchg
in
bound
cld
scas
loope
mov
addr16
push
lcall
mov
sub
iret
xorb
negb
call
xor
xchg
or
lea
clc
push
jp
les
pop
pusha
mov
and
jmp
xchg
fs
jno
cmp
xchg
xor
aam
jb
out
jp
xchg
fldenv
sub
mov
and
pusha
inc
xchg
pop
mov
jle
out
adc
dec
or
inc
xchg
mov
mov
out
xchg
shll
xor
fidivl
mov
mov
leave
pslld
add
js
fwait
pop
mov
loopne
sbb
pop
dec
imul
mov
icebp
addr16
cmp
cwtl
mov
ret
mov
push
xchg
mov
les
or
xchg
sbb
leave
xchg
icebp
dec
cmp
push
test
and
sarl
or
fcomps
rorl
leave
and
push
fldcw
gs
mov
loopne
cs
sahf
and
pop
add
popf
fisubl
xor
outsl
jbe
pop
pop
addr16
pop
and
stc
sbb
mov
inc
xchg
mov
jmp
movl
movw
push
pusha
movb
lea
jmp
mov
sbb
mov
popf
into
mov
mov
adc
mov
mov
outsb
mov
sbb
sbb
or
fadds
lea
sbb
jae
ds
inc
xor
mov
ss
mov
and
negl
nop
jae
aas
shlb
fwait
lret
xor
xchg
in
mov
aad
test
mov
hlt
cmc
sbb
xlat
ret
and
je
push
xchg
inc
xchg
lea
xrelease
xchg
lret
insl
or
dec
call
xorb
pop
push
ret
dec
mov
jbe
aas
outsb
add
inc
enter
sbb
adc
gs
cld
sub
inc
sbb
sbb
pop
out
pop
fnsave
mov
lods
test
adc
mov
jge
push
add
out
sub
push
inc
xchg
jmp
enter
or
or
and
ret
xchg
xor
mov
mov
sub
or
push
ret
fmul
pop
add
mov
iret
movsb
dec
lods
jno
xlat
cmp
xor
jbe
bound
sub
loopne
shl
dec
aas
ja
mov
mov
hlt
dec
push
xor
add
sbb
push
add
in
mov
mov
mov
cld
mov
mov
xchg
mov
xlat
jp
add
pop
mov
lds
mov
insb
add
pusha
pusha
movl
pushf
pushl
push
pushl
lea
jmp
add
test
popa
int3
mov
pop
or
dec
sbb
inc
cmc
mov
les
and
inc
push
pop
xor
sbb
mov
jle
cltd
les
ret
in
int3
in
not
push
cld
pop
fsts
mov
shr
jns
and
daa
jecxz
push
repnz
inc
sbb
in
push
xor
sahf
xor
int3
mov
inc
and
add
fisttpl
mov
and
jns
lahf
cltd
fldl
cli
fsubrs
cmpsb
icebp
dec
xor
xchg
mov
mov
aaa
push
mov
fwait
das
and
xor
mov
out
divl
loope
adcb
in
imul
cmc
dec
cltd
add
call
addr16
es
sub
push
movsb
push
or
or
shll
and
adc
sub
cmp
imul
push
pushf
mov
jle
mov
push
sbb
pop
inc
xchg
push
ss
rcl
jbe
rorl
lods
lahf
xor
in
lahf
pop
popf
rcrb
mov
ffreep
sbb
lahf
adc
stos
sub
int3
sub
movsl
shll
scas
push
scas
cli
stos
or
mov
pop
mov
sahf
mov
hlt
aas
mov
mov
jl
lahf
arpl
inc
outsb
or
mov
xchg
sbb
lcall
jge
adc
cmp
inc
inc
ljmp
pop
inc
jmp
jp
xchg
and
mov
inc
xchg
mov
fidivrl
xchg
outsb
push
push
mov
mov
imull
or
loopne
and
inc
push
sub
sbb
bound
addr16
jmp
scas
test
pushf
mov
push
push
lods
lock
fiadds
lods
pop
gs
mov
leave
jge
jne
pushf
sub
dec
sbb
dec
push
pop
fstpl
mull
imul
cmc
push
inc
xchg
mov
ret
mov
jmp
jo
jo
sbb
pop
fstpl
pusha
xor
out
or
lahf
cmp
cmpsb
mov
sub
rolb
jmp
inc
test
jmp
outsl
pop
or
add
mov
dec
inc
lea
insb
xorl
or
and
insb
pop
push
jmp
pop
xchg
adc
mul
add
mov
mov
xchg
mov
sub
shll
add
punpcklwd
addr16
pop
aad
rcrl
btr
and
push
inc
adc
cmc
mov
or
add
lret
movsb
pop
push
mov
loopne
stos
xlat
test
inc
es
pop
or
nop
ror
push
ljmp
xchg
ret
pop
div
cli
loop
int3
outsb
ret
jne
xchg
mov
push
fwait
test
in
mov
loopne
iret
ret
adc
dec
add
pop
mov
adc
push
pop
push
xchg
push
jae
add
mov
repz
or
adcl
popf
mov
dec
repz
pop
sub
pop
test
mull
jl
enter
xor
pop
popl
xchg
sarl
jl
cmp
xorl
dec
adc
sbb
testl
cmpsl
sbb
lret
shrl
jo
jl
inc
xchg
mov
and
push
dec
dec
and
cmpsl
jmp
and
sbb
dec
pop
cmp
fistpll
andnps
outsb
add
push
mov
or
inc
ror
jbe
or
xchg
fsubl
fisttpll
lcall
sbb
jbe
xor
rcr
mov
das
int3
negl
repnz
adc
in
divl
mov
dec
pop
jmp
outsb
jbe
addr16
icebp
jp
adc
mov
and
adc
or
sbb
inc
pmuludq
jae
or
dec
rorb
ljmp
dec
fisttps
in
inc
sbb
push
adc
xchg
mov
stc
cltd
push
das
mov
cmp
xchg
adc
sbb
dec
sbb
jg
or
jmp
sbb
test
add
lahf
adc
mov
pop
out
jne
xorl
outsb
push
insb
test
or
rolb
lahf
fldcw
iret
in
cmpsl
mov
pop
scas
cmp
bound
sub
adc
pusha
jmp
mov
add
mov
dec
lds
jns
mov
flds
mov
mov
dec
movsl
inc
pop
mov
push
imul
cmpsl
sbb
ret
mov
aas
jmp
cwtl
pushf
in
mov
insl
push
push
mov
xchg
idivl
mov
and
mov
bound
pop
aaa
push
sbb
push
pop
jle
or
pop
push
push
sub
jb
ljmp
mov
xchg
mov
adc
fs
add
xchg
mov
out
cltd
decb
nop
sub
repz
loop
mov
aam
mov
out
lds
fs
aam
ss
cmpsl
loopne
roll
ret
popa
xor
xor
inc
sbb
inc
xchg
xchg
or
xchg
cmp
inc
enter
sbb
dec
sbb
sub
pop
les
lods
inc
es
ljmp
test
fst
jo
dec
mov
mov
jmp
fmull
in
xor
push
or
ret
sbb
pop
dec
shrl
mov
pop
arpl
push
jge
shlw
sub
xchg
shl
or
push
std
add
stos
jge,pt
inc
push
jnp
rol
stos
xor
lods
in
imul
lahf
in
xor
pop
iret
dec
aaa
xchg
js
aaa
adc
sahf
xlat
stos
cmp
clc
enter
stos
imul
push
xchg
incl
dec
sbb
test
xchg
iret
xlat
lods
mov
mov
out
add
adc
mov
hlt
sub
push
loopne
out
cmp
pop
aas
into
sub
xlat
cwtl
xchg
insl
loop
mov
pop
dec
addr16
clc
stos
cmp
adc
fmull
addl
fimuls
adc
xor
xor
sub
pop
into
shll
gs
int
fsts
mov
pop
mov
xchg
jge
xchg
insb
bound
imul
sub
pop
add
dec
outsb
cmc
je
ficomps
or
and
mov
aad
sbb
xchg
inc
imul
pop
ljmp
in
xchg
fnstsw
mov
mov
je
imul
in
out
pushf
xor
outsl
xor
ret
js
imul
push
adc
jmp
inc
xchg
xchg
push
sti
pop
xchg
lds
lock
push
mov
movl
jbe
mov
push
sbb
mov
and
push
push
jp
jp
imul
push
mov
sbb
out
repnz
imul
ret
test
dec
sbb
movsl
xorb
rcr
out
xchg
mov
xor
sub
es
outsl
and
insb
push
ret
inc
xchg
test
xchg
imul
or
and
xchg
les
jns
xor
ja
mov
mov
in
push
push
push
mull
mov
fcomps
notb
jno
test
outsb
or
mov
pop
frstor
gs
jge
add
push
in
mov
mov
mov
xchg
cmp
test
popf
shrl
jmp
push
mov
outsl
and
and
inc
and
push
movsl
pusha
repz
adc
ret
and
or
pusha
add
xchg
sub
mov
movsl
daa
iret
call
test
pusha
xor
push
push
inc
xchg
add
and
jle
cmp
pushl
mov
lea
jmp
leave
push
push
sbb
dec
les
lahf
add
and
add
mov
lret
sbb
imul
push
ss
and
and
sub
mov
and
arpl
pop
daa
push
sarl
stc
dec
add
ljmp
xchg
test
movl
jmp
inc
jo
pushf
loop
pop
popa
or
aad
mov
push
sahf
sahf
sbb
loope
das
xchg
mov
out
movsl
push
mov
daa
movsl
or
dec
or
push
dec
or
test
pusha
les
and
push
rolb
out
pop
cmp
push
mov
push
adc
mov
push
in
nop
shlb
lods
fadd
xchg
adc
gs
xchg
stos
lret
dec
call
dec
imul
mov
pop
cwtl
pop
or
rcl
arpl
sbb
scas
sbb
lahf
adc
xchg
int
xchg
mov
add
jnp
mov
stc
fbstp
pop
dec
cmc
mov
mov
sahf
cmp
sbb
lds
or
into
xchg
cs
adc
push
sahf
fs
inc
iret
cmpl
fidivs
mov
jne
push
mov
and
sbb
inc
loopnew
out
test
rcl
fs
call
int3
mov
lods
cmpb
inc
jns
shl
in
fcompl
push
or
push
dec
das
popa
lods
incb
sub
pop
imul
add
jbe
icebp
cmp
fisubrs
js
pop
jmp
cmp
push
cmp
in
sti
add
test
fcmovu
mov
inc
push
dec
sbbb
filds
sub
or
mov
push
mov
mov
mov
pop
inc
pop
add
jmp
dec
dec
sbb
fisttpll
xlat
mov
lock
pop
and
add
xlat
push
fdivrs
stos
hlt
lahf
mov
xchg
addb
andb
jns
ret
add
sub
or
mov
lods
adc
or
pop
sbb
jg
or
iret
gs
push
or
jl
mov
jmp
sahf
ja
pusha
adc
push
dec
push
inc
mull
sbbl
cld
ficomps
int
jp
sub
xchg
pop
inc
xchg
and
dec
xor
jae
inc
jg
inc
shrl
push
push
in
pop
ds
dec
xor
fcmovb
or
xchg
jnp
inc
cmp
push
in
cltd
loop
decb
cltd
enter
iret
and
andl
sub
sbb
test
mov
stos
adc
cmp
jne
and
stos
push
jno
out
xchg
push
lods
and
mov
push
mov
xor
fdivrs
jbe
jo
fdivl
fistpl
xor
bnd
clc
mov
mov
push
and
pop
push
xchg
cmpsl
das
mov
icebp
dec
mov
mov
sbb
adc
ja
pop
in
inc
leave
lahf
les
daa
iret
mov
sbb
dec
add
sbb
or
jmp
cmp
fsubl
jp
cld
sti
cs
sub
ficompl
inc
xchg
subb
je
add
inc
and
aam
adc
pusha
mov
lea
jmp
pushf
movl
pusha
pushf
jmp
mov
mov
xchg
adc
jo
outsb
xor
imul
or
inc
or
movsl
xchg
negl
shl
out
xchg
dec
cs
adc
cmp
cltd
std
dec
add
jmp
icebp
in
xchg
je
mov
daa
add
arpl
fildl
pop
jo
fstps
or
inc
addb
scas
or
repnz
aas
xchg
mov
mov
xchg
push
ljmp
or
imul
xor
ret
xor
dec
mov
or
lods
stos
outsl
dec
sbb
in
icebp
rorl
and
sub
lret
mov
push
xchg
rcr
mov
push
jecxz
sarb
pushl
and
mov
sahf
sub
cs
cmc
mov
icebp
lods
arpl
pop
in
push
xchg
in
fisubrs
pop
adc
xor
ljmp
int3
std
jp
pop
fcmovne
outsl
mov
icebp
loopne
mov
sub
dec
popa
push
sbb
xor
fisubs
pop
fimull
and
imul
das
push
ds
clc
pop
mov
repnz
mov
xchg
push
xchg
cmp
adc
mov
gs
mov
jnp
or
in
ret
dec
xor
jae
daa
and
mov
xchg
shlb
inc
xchg
jg
inc
push
clc
push
push
sub
mov
scas
push
lea
stc
std
mov
fisubl
popf
inc
scas
adc
jp
scas
lret
push
add
lret
repnz
mov
add
and
bound
lock
shll
add
cltd
mov
lcall
out
lea
cmp
mov
in
sti
jle
scas
in
call
dec
push
out
sti
js
and
icebp
jp
push
xor
xlat
push
and
mov
iret
mov
and
dec
enter
aas
fadd
shrl
mov
sub
les
addr16
mov
mov
leave
shl
sbb
add
movsl
xchg
bound
and
xchg
dec
jg
xchg
mov
xchg
fisttpl
xchg
jle
jg
push
and
add
test
in
outsb
ljmp
xchg
or
or
and
push
cltd
jl
hlt
lahf
fidivrs
out
inc
cs
mov
jmp
add
fcoml
ljmp
mov
cmpsl
clc
les
adc
shrb
mov
insl
inc
test
jle
in
loope
jge
dec
push
dec
cld
lcall
sub
cmp
pop
push
push
js
es
mov
cmpsb
aad
inc
xchg
jle
pop
cli
jl
loope
arpl
sub
sub
cmp
push
popf
mov
or
cld
mov
mov
adc
mov
and
jge
mov
xchg
lods
push
dec
clc
add
cltd
fcompl
push
adc
pop
inc
jmp
sbb
xchg
and
pop
xchg
xchg
sbb
rclb
xor
inc
xchg
jl
fwait
jae
movl
pusha
pushf
push
pushf
lea
jmp
mov
push
mov
cwtl
scas
int
inc
and
dec
adc
sbb
ss
sbb
dec
lods
pop
and
inc
aad
xor
inc
fistps
outsl
xor
dec
add
nop
cs
sub
int
out
int
stos
mov
cmp
out
cmpsl
mov
ds
lcall
xor
xchg
addr16
adc
inc
mov
iret
fwait
mov
or
pop
sbb
jbe
jne
jle
test
lcall
xchg
jl
rcr
fbstp
inc
ljmpw
lea
push
cmc
fwait
mov
adc
cmpsb
or
or
clc
sti
pop
sbb
data16
jno
lret
push
jno
mov
ret
dec
inc
pop
aas
mov
push
fwait
les
inc
xchg
jl
pop
pop
repnz
adcl
popf
jmp
imul
ror
xchg
mov
nop
repnz
ds
adc
pusha
sbb
sti
push
js
daa
push
sbb
mov
addr16
pop
jge
lahf
mov
fbld
outsb
clc
sub
fiadds
jmp
cmpsl
fstps
dec
and
cwtl
mov
ret
xchg
in
adc
xchg
jl
jb
pop
nop
icebp
jne
mov
lcall
jmp
mov
stc
xchg
jne
adc
inc
xchg
and
insl
loopne
xor
pop
test
cwtl
mov
inc
int3
out
imul
test
sub
inc
push
and
sub
notl
push
gs
push
mov
cli
test
stos
cmp
fcompl
aaa
cmp
inc
xchg
adcl
xor
xchg
cs
or
mov
jnp
adc
imul
sbb
in
js
arpl
xchg
hlt
inc
adc
inc
xchg
jp
xchg
outsb
inc
xchg
push
test
mov
loop
mov
mov
xor
cmc
loope
popa
jnp
mov
aad
inc
je
fcomps
xchg
jnp
ror
rolb
push
xchg
mov
xchg
xchg
aaa
adc
jle
lods
and
jecxz
leave
sub
inc
sub
sahf
xor
pop
aaa
jb
cmp
neg
cli
mov
xor
test
push
mov
mov
push
mov
mov
inc
mov
imul
adc
roll
and
inc
or
xchg
jmp
adc
shll
mov
sahf
pop
fmuls
sub
ds
and
mov
xor
sbb
jne
rclb
ffreep
push
mov
xlat
nop
xchg
mov
in
cmp
pop
pop
dec
inc
repnz
sbb
jb
inc
lret
aas
jne
out
sarb
mov
adc
ret
andb
imul
xor
jp
sbb
jecxz,pn
and
adc
mov
lods
mov
lock
cmp
inc
daa
fs
mov
and
jp
inc
fmuls
or
movsl
nop
ss
mov
push
inc
and
adcb
adc
or
xor
icebp
jno
cmp
je
xchg
loop
push
sahf
test
fisttpl
clc
adc
mov
pusha
fcoms
push
sbb
xchg
js
mov
jle
and
pop
sbb
mov
mov
sub
jnp
sahf
movsb
dec
mov
jno
idivl
out
pop
jmp
sub
pop
and
shl
insl
add
adc
cmp
push
iret
push
dec
and
mov
xchg
cli
lahf
and
inc
xchg
jns
data16
lds
add
cmp
xchg
rolb
cli
adc
sub
push
or
xor
fsincos
arpl
outsb
stc
adc
and
btr
dec
xor
lret
pop
dec
bound
frstor
scas
add
pop
jnp
cmpsb
jno
xchg
inc
adcb
hlt
cmp
loope
mov
aad
sahf
aas
inc
xor
cmp
dec
sub
testb
push
inc
popa
icebp
and
movsb
pop
movsl
mov
loope
call
inc
xchg
js
sub
xorb
daa
dec
add
cli
divl
add
mov
cld
test
sub
in
testl
xchg
loope
in
enter
andb
outsb
ret
ficoml
push
fxch
ficompl
jno,pt
fnstenv
inc
xchg
js
jnp
pusha
mov
gs
lahf
loop
or
scas
sub
xor
sbb
mov
jmp
insl
fmulp
gs
mov
js
inc
pop
mov
xor
inc
dec
mov
sbb
xchg
movsl
lods
jmp
sbb
lcallw
sbb
mov
in
ljmp
popf
lods
cmp
es
add
dec
aas
scas
adc
je
push
cmp
xchg
ja
repz
adc
add
push
call
pushf
call
adc
test
lret
cmp
xchg
enter
int
and
jp
add
sub
fcomps
lahf
not
notb
mov
cmc
and
jns
sbb
dec
addr16
jo
mov
xor
sbbl
sub
rcrb
dec
push
sbb
arpl
fisubrl
lods
mov
cmp
xor
call
sub
mov
xchg
int
xor
into
mov
fstps
cwtl
insl
popf
mull
cld
repnz
add
call
cmpsl
pminsw
mov
cmpb
xchg
cmc
cmpsb
cli
mov
jbe
mov
push
pusha
movl
pusha
push
call
xchg
inc
sub
jno
pop
clc
mov
outsb
cs
testl
dec
jp
inc
cmp
mov
pop
inc
in
sbb
push
aas
push
out
add
push
dec
push
ss
adc
jge
mov
xchg
cld
mov
or
cltd
lock
or
dec
scas
inc
xchg
jbe
fucom
pop
mov
stos
push
dec
mov
xchg
lret
scas
jmp
xchg
out
xchg
pop
addr16
sub
gs
inc
add
dec
mov
movsb
mov
or
and
shll
mov
addr16
or
cwtl
push
rcrb
xchg
cltd
ja
jne
lea
cmpsb
iret
es
fmuls
jb
xchg
clc
jno
repz
inc
addb
jo
jb
cmp
xor
fdivl
pop
add
xchg
nop
cmpsl
call
call
out
aaa
jae
out
mov
pop
jnp
pop
pushf
cmp
dec
mov
sbb
xor
lret
add
push
jno
fstl
pop
pop
mov
mov
fstl
rorb
inc
pop
test
mov
test
call
adc
mov
jo
addr16
sahf
ret
and
nop
test
je
add
out
call
adc
mov
adc
repnz
enter
dec
aas
push
push
cmpb
out
jge
sbb
js
iret
js
sbb
jl
dec
push
imull
imul
xchg
cli
mov
xchg
or
mov
cli
inc
push
pusha
das
mov
cli
sahf
popf
stc
cld
inc
xchg
jne
inc
push
push
shrl
int
jg,pt
mov
loop
push
cmpsl
or
dec
fcomps
xor
test
sbb
jne
push
scas
jmp
pop
mov
lods
iret
xchg
movsb
rorb
or
inc
mov
ficomps
out
mov
les
jmp
cmp
pusha
xor
xor
in
lahf
jb
mov
stos
sbb
xchg
jne
jne
movl
push
movb
pushf
pusha
lea
jmp
lea
jge
xchg
jmp
adc
adc
xchg
mov
adc
sbb
add
xlat
aas
sbb
enter
push
scas
jmp
dec
cmpsb
movsl
cld
icebp
daa
ret
mov
jo
mov
add
out
sbb
jae
jge
xchg
imul
xor
decl
out
stos
cmp
push
in
and
scas
cltd
pop
subl
xlat
xchg
push
pop
mov
in
fisubl
gs
loopne
mov
sbb
outsb
iret
push
dec
mov
jp
ja
cmc
inc
xchg
jae
mov
adc
adc
lock
mov
in
adc
adc
repz
lods
test
mov
jge
sbb
outsb
mov
stc
jns
push
imul
sub
mov
mov
sahf
testl
aam
xchg
jb
sahf
or
stos
xchg
outsb
jecxz
push
mov
xor
push
cwtl
testl
sbb
xor
insb
dec
aas
and
lret
nop
push
popa
stos
inc
enter
add
test
jp
jo
jle
out
inc
xchg
jb
cmpl
jl
ljmp
lods
imulb
loope
jmp
push
push
add
fnsetpm(287
and
push
or
push
pop
sahf
push
je
mov
std
leave
lret
sbb
pop
das
xchg
lea
cmpsb
in
aam
xlat
mov
pop
and
movsl
sbb
and
call
add
or
push
push
add
jae
inc
inc
inc
and
aam
push
push
pushf
pusha
pushf
lea
jmp
push
movl
call
pop
mov
test
test
lods
call
xchg
movaps
adc
fnstenv
cmp
daa
in
scas
push
and
shl
xor
cltd
mov
and
inc
or
pushf
push
pop
inc
rorl
fs
mov
dec
jae
int3
sub
scas
aas
lret
or
sub
and
jl
adc
insl
jmp
dec
sahf
mov
je
jmp
dec
pop
js
pop
scas
aaa
ljmp
aaa
sbb
popa
fldl
pop
push
popf
push
add
xorl
add
pusha
mov
add
dec
or
add
inc
xchg
jno
mov
inc
mov
xchg
push
lock
aas
mov
and
int3
jl
js
sbb
rcll
ret
and
jns
cmp
sbb
sub
add
jecxz
mov
pop
sar
out
fs
ljmp
rcrl
shrl
push
sub
adc
idivb
sbbb
cmpsb
inc
xchg
jo
rclb
arpl
push
jae
push
dec
add
jns
push
andb
adc
mulb
xchg
mov
imul
ds
xor
xchg
mov
xor
mov
jp
cli
and
jne
jns
push
sbb
test
insb
out
shll
dec
stc
cmp
xchg
loopne
jmp
lahf
stos
cmc
jmp
xchg
fs
movsl
mov
pop
out
dec
mov
loop
add
dec
push
jecxz
cli
add
adc
in
and
push
pusha
or
shrl
aad
adc
xchg
mov
les
inc
sbb
jl
mov
push
sub
stos
adc
testb
mov
dec
sub
xchg
ret
push
in
ljmp
jg
mov
sub
ret
sub
add
xchg
frndint
adc
push
sub
cmp
mov
ja
mov
aaa
out
xchg
nop
jmp
mov
addr16
sar
inc
add
sahf
out
pop
int
cmp
mov
arpl
jnp
das
mov
pushf
jae
xor
pushf
in
mov
push
xchg
or
fs
push
test
push
push
in
lcall
outsl
xchg
push
push
lods
sub
push
jge
ret
jb
outsl
push
lods
and
adc
xor
shrl
aas
dec
mov
popa
bound
loopne
repz
sbb
dec
jnp
mov
cs
add
push
pushf
jmp
adc
js
xchg
popf
popa
pop
cmp
scas
or
orb
jle
inc
arpl
jp
mov
into
or
inc
popw
push
fdivr
push
jbe
lcall
cmp
repnz
iret
mov
sub
and
cmp
sarb
stc
mov
pop
jecxz
and
lods
sbbb
cmp
std
mov
and
xor
cwtl
sub
xchg
outsl
sub
sarb
inc
adc
jle
mov
mov
mov
mov
jb
pop
movsb
and
inc
rcrb
out
leave
or
in
mov
cmc
mov
std
jmp
sarl
imul
sti
xchg
nop
xor
xchg
ljmp
push
jo
scas
aas
pop
push
ja
fisttpll
xchg
outsl
and
xchg
aas
cli
ret
mov
pop
xor
ficoml
adc
mov
out
xchg
and
insl
dec
cmc
aad
lahf
stos
mov
sti
jb
xchg
aad
pop
xchg
outsl
cmp
and
fisubl
popf
xor
std
movsb
xchg
out
xor
in
std
fdivrs
outsb
out
cmp
cli
pop
sbb
sbbl
aad
loop
pop
js
jbe
movsl
xchg
loopne
arpl
minsd
inc
xchg
outsb
das
pop
push
jmp
lea
mov
inc
lret
xchg
mov
loope
mov
adc
mov
repz
mov
arpl
in
sbb
unpcklps
mov
mov
stos
or
cli
jle
push
cmpb
mov
mov
fwait
gs
ss
cmp
aaa
loop
in
adc
fsubrl
ret
or
xor
je
jp
popa
daa
mov
out
pop
mov
je
cs
mov
add
cwtl
in
lock
scas
push
loope
test
push
aaa
movl
sub
inc
xchg
insl
mov
js
scas
out
mov
test
cwtl
push
mov
xor
push
sbb
push
mov
iret
popl
jno
pop
sbb
imul
xchg
insl
dec
add
push
in
stc
mov
mov
aad
adc
out
insl
sub
in
sbbl
addr16
shrb
mov
xchg
pop
leave
adc
cmp
jb,pt
je
rolb
insb
outsl
scas
outsb
jne
fmull
gs
xor
cs
cli
add
int
xchg
cmp
xorl
mov
fucomip
adc
or
ja
shrb
int
gs
sub
adc
push
leave
je
xor
sub
popf
enter
les
xor
inc
adc
push
xchg
hlt
leave
dec
insl
jmp
add
in
scas
and
mov
mov
sahf
lds
inc
xchg
insl
xor
loop
imul
into
mov
cli
outsb
subb
lods
xchg
inc
mov
mov
testb
loop
xor
inc
dec
adc
imul
and
js
add
imul
mov
fdivl
jnp
mov
push
dec
pop
jne
xor
pop
jns
push
sub
call
mov
push
ljmp
mov
rcrl
mov
ja
movaps
ds
xor
fiadds
insb
and
pushf
adcl
sub
popf
ret
lods
out
lds
aaa
adc
jb
mov
xor
adc
repz
imul
out
cmp
iret
insb
dec
insl
lahf
or
inc
rcrl
stos
lcall
fmuls
in
inc
xchg
insb
pop
inc
cmc
fwait
gs
adc
dec
stc
aam
jns
nop
sbb
pop
and
mov
sbb
mov
jb
cwtl
pop
mov
pop
inc
bound
out
in
pop
dec
cmp
lds
xchg
int
xchg
adc
into
sahf
push
adc
cmc
test
insl
jge
fdivrs
test
jle
dec
shrb
mov
lods
into
sbb
out
dec
jae
sub
loop
mov
in
push
mov
ret
push
pop
inc
stos
in
loop
inc
lret
xor
mov
sbb
ljmp
lcall
sub
clc
je
cmc
rolb
lcall
es
adcl
not
enter
cmp
into
in
or
push
ret
pusha
lret
inc
adc
push
shl
lods
insl
inc
inc
push
stos
int3
push
shr
imul
lea
cmp
cmpsb
dec
shl
xlat
push
sub
imul
enter
inc
xchg
push
and
fldenv
mov
mov
pop
pusha
aas
mov
jp
mov
sbb
pushf
pushf
push
pop
insl
jae
or
jo
in
push
loopne
push
sahf
fmul
inc
sbb
inc
adc
jl
jns
adc
inc
je
push
push
loope
into
fsubp
std
rclb
inc
imul
data16
mov
inc
jg
xor
in
aam
jmp
out
test
mov
cltd
cmp
stc
iret
insb
ja
mov
xchg
push
testl
add
mov
scas
sbb
sub
push
fwait
xchg
add
sbb
mov
rorl
mov
and
test
test
sub
out
lret
cmp
pop
nop
add
test
in
mov
xchg
push
cmp
xchg
dec
cmp
xor
push
out
mov
fcoml
shl
bound
or
cli
push
pop
scas
mov
mov
bound
mov
out
int3
mov
jb
mov
dec
outsl
jecxz
xchg
imul
mov
scas
mov
push
adc
sbb
add
inc
xchg
push
bound
mov
mov
test
push
xor
xchg
mov
mov
je
and
scas
or
mov
stos
mov
sahf
push
inc
ret
dec
rcrl
sub
dec
cwtl
mov
fmull
in
test
add
aam
or
leave
adc
xorl
aaa
test
jge
fwait
sbb
ds
dec
imul
inc
ret
mov
sbb
mov
les
pop
cmp
movsb
repz
imul
mov
cmp
shrl
fcompl
xor
pop
mov
jne
jle
push
aam
into
push
lea
fisttpll
pop
addr16
in
lcall
sub
dec
ja
cmp
or
push
pop
push
cmp
xor
mov
inc
aad
rcrb
inc
pop
out
adc
shll
jnp
inc
xchg
lds
jno
dec
stc
lods
sbb
ljmp
mov
pop
mov
mov
push
je
pop
or
aas
je
pop
out
pop
aam
pop
inc
xchg
push
mov
dec
pushw
adc
iret
xchg
fdivl
into
es
ljmp
jecxz
cli
popf
int3
fwait
aad
mov
addr16
sbb
or
sbb
sahf
std
mov
inc
xchg
notl
clc
add
mov
fcompl
pop
sti
movsb
out
xchg
adc
cmpsb
and
and
cli
leave
sbb
popf
leave
jne
pop
sbb
sbb
ds
jno
dec
mov
mov
push
jge
jmp
loope
mov
dec
out
cmp
push
call
shlb
or
inc
xchg
addr16
jbe
mov
pop
mov
sub
jno
lahf
icebp
xchg
int
mov
aas
sub
mov
or
mov
insb
jno
loope
mov
mov
xchg
ficoml
sbb
xor
andb
or
je
aas
out
outsl
js
jmp
dec
mov
mov
ret
mov
inc
xchg
in
test
nop
test
xor
sub
pop
pop
imul
in
adc
jnp
or
add
popa
andl
inc
ss
orb
xchg
adc
frstor
and
inc
jnp
mov
lds
push
or
jp
sahf
loope
mov
testl
add
movsl
mov
sub
xchg
inc
das
aas
call
mov
jns
adc
das
push
shrl
je
mov
mov
pop
pop
es
lock
cli
mov
inc
lea
xchg
fs
out
adc
out
lcall
cmpsl
out
sahf
jle
push
xchg
inc
insb
insl
repnz
gs
dec
mov
addr16
sbb
add
cmpsl
dec
je
xchg
and
sub
pop
jp
insb
scas
push
outsl
lea
mov
mov
outsl
and
xor
or
inc
nop
inc
xchg
gs
xchg
jmp
sbb
adc
add
mov
push
xchg
out
adc
scas
push
mov
cmp
in
jae
add
push
hlt
out
cmp
or
sbb
cmp
mov
inc
pop
add
testl
add
lret
shrb
test
cmp
jecxz
iret
xchg
les
adcb
gs
xor
adc
pusha
cmp
and
mov
out
popf
lret
adc
test
mov
or
add
aad
and
push
mov
dec
sbb
cmp
ss
fstl
int
cs
cwtl
int
fcoml
inc
cmc
mov
inc
xchg
fs
mov
push
movl
pusha
lea
jl
pushf
movl
pusha
movb
pushf
lea
jmp
or
mov
sbb
rcl
jns
repnz
shll
jp
push
decb
and
insb
pop
push
mov
push
mov
mov
lods
pop
mov
inc
mov
sbb
jo
fs
xchg
sub
push
ja
mov
push
sub
mov
cwtl
lret
mov
xchg
push
cmp
add
mov
jno
rcrl
scas
pop
jae
test
inc
xchg
arpl
sbb
xor
ret
lcall
adc
repnz
mov
sti
testl
sahf
fsin
pop
sbb
int
ret
jae
adc
add
and
push
es
mov
jmp
push
adc
mov
dec
xor
mov
xchg
arpl
sub
pop
scas
mov
test
imul
and
mov
mov
aas
push
mov
sub
mov
jne
dec
jle
xchg
test
sbb
scas
or
dec
imul
ss
fdivl
fimuls
inc
mov
fistl
xchg
loop
xchg
out
sti
shll
rcl
pusha
jge
mov
xchg
enter
pusha
js
and
les
testb
push
xor
push
inc
pop
aam
push
xchg
shll
xor
sbbl
adc
lods
cs
push
lods
mov
push
adc
in
push
push
pop
sbb
add
xlat
push
adc
std
gs
cwtl
push
mov
mov
xchg
enter
inc
jp
test
cmp
jne
lret
mov
mov
imul
jo
xchg
cmp
frstor
sub
xchg
insb
and
push
cmp
fwait
mov
popa
dec
push
and
adc
pop
mov
std
fwait
mov
jmp
sub
jo
das
loop
int3
or
mov
mov
call
into
xchg
sub
movsb
or
lahf
dec
hlt
and
shl
sbb
adc
xor
jle
scas
fsub
inc
xchg
arpl
hlt
push
addr16
js
leave
push
mov
jne
dec
add
push
cmp
mov
fbstp
add
mov
dec
mov
cld
add
cmp
mov
inc
mov
add
or
sbb
imulb
jo
adc
popa
outsl
mov
orb
inc
test
jmp
cli
dec
adc
mov
mov
stc
jne
movsl
stc
add
or
shlb
mov
sbb
sub
lds
cmp
lods
aad
and
xor
in
xchg
popa
lcall
sub
outsb
or
lcall
ret
in
mov
xchg
jmp
xchg
ss
ss
je
pop
or
or
clc
and
push
add
sti
insl
jae
xchg
add
insl
mov
enter
in
inc
out
inc
scas
adc
and
rolb
pusha
movl
pushf
pushf
mov
pushf
lea
jmp
lds
lods
sbb
lcall
or
xchg
out
cmc
push
or
push
dec
into
push
das
ss
loope
cmp
pop
repnz
mov
mulb
xchg
sti
pusha
popa
inc
ret
inc
fnsave
lahf
loope
lock
lcall
inc
movsb
loop
xchg
negb
lock
and
imul
sub
mov
and
repz
xchg
pusha
nop
mov
and
aas
cmp
sub
pop
insl
cmp
add
sahf
add
push
sbb
cmp
pop
mov
mov
and
dec
push
push
and
add
rclb
rolb
and
fimuls
insb
xor
loop
gs
popf
push
xchg
mov
loope
mov
push
xor
out
scas
jo
dec
into
cltd
sahf
inc
mov
cld
add
repz
int
xor
idiv
xchg
sub
mov
mov
out
sbb
repz
idiv
mov
out
mov
push
inc
xchg
pusha
and
cmp
sbb
stc
dec
lds
inc
and
sbb
or
xor
push
lea
jmp
pop
dec
xchg
jno
dec
sbb
pop
jmp
mov
loope
mov
fwait
jmp
out
pusha
pop
xchg
jbe
int
xor
dec
shlb
adc
jns
pop
and
xchg
mov
push
test
xor
in
lods
std
pushf
fstpl
test
mov
inc
xchg
pop
addb
jmp
inc
mov
aam
stc
je
inc
sti
mov
movsl
mov
mull
pop
xchg
scas
or
xchg
jae
jg
dec
adc
add
or
cli
pop
int3
jmp
aam
pop
mov
push
or
scas
mull
xchg
pop
xchg
lcall
add
dec
adc
mov
mov
mov
xchg
push
ds
ret
sub
lret
lea
clc
daa
cwtl
mov
mov
inc
ret
xor
push
mov
pop
or
pop
out
andb
mov
push
fs
ljmp
js
or
test
xchg
fucomp
mov
or
dec
test
out
sti
jb
mov
dec
jno
aam
ror
jle
or
sbb
std
xor
cmp
push
push
imul
inc
fwait
icebp
pop
mov
mov
nop
cs
lret
push
and
imul
test
ljmp
std
xchg
sub
pusha
or
imul
je
adc
inc
and
mov
push
pushf
movl
pushf
push
push
lea
jmp
and
mov
sarl
cwtl
testl
pop
add
pop
inc
fcompl
clc
popl
fildll
ss
pop
inc
push
out
jecxz
cmp
scas
jmp
dec
sbb
push
jne
test
movsb
mov
nop
mov
cs
xchg
pop
das
pop
dec
movl
movl
push
lea
jmp
outsb
dec
sbb
jb
and
jl
mov
cmp
jns
mov
in
movsb
stos
and
mov
rorb
sub
lods
and
xor
xor
mov
jne
cmp
mov
icebp
mov
mov
sub
push
fs
in
cmp
arpl
jg
cmc
test
aam
dec
dec
mull
dec
push
lret
jp
cmp
pop
mov
fsubl
inc
sub
imul
sbb
ret
sub
movsl
or
in
xchg
incb
imul
push
dec
dec
inc
shll
jns
stos
xchg
pop
inc
mov
mov
subl
es
insb
movb
ficoml
gs
mov
scas
int3
sti
jne
addr16
xor
mov
or
fidivrs
std
and
iret
or
mov
pop
push
pusha
call
add
push
sbb
or
add
shlb
std
cmp
fcomps
inc
loopne
mov
roll
inc
cmp
add
xchg
jne
std
adc
mov
jns
fwait
hlt
scas
adc
inc
xchg
pop
shl
out
in
cmp
inc
push
dec
jo
cmpsl
aam
xor
movl
and
mov
clc
dec
jmp
inc
scas
repz
sbb
cmp
cmp
jp
outsl
sub
mov
xor
jnp
shr
lock
pop
je
jbe
mov
cmp
shrb
subl
sarb
into
fstpl
xor
lods
loope
rcll
ret
jae
or
cmp
cwtl
daa
add
rcrb
mov
imul
mov
movsl
xchg
popa
cltd
out
jmp
mov
in
jne
or
jmp
mov
mov
in
sbb
lret
pop
outsl
jno
xchg
faddl
jo
add
push
jb
dec
or
xchg
pop
push
jo
jmp
pusha
pusha
movl
pushf
movl
pushf
push
push
pushf
lea
jmp
mov
pop
inc
add
push
in
mov
add
and
push
xorl
ds
jnp
pop
jge,pt
test
sahf
enter
pop
daa
and
jmp
inc
js
cmpsb
adc
mov
icebp
rolb
sbb
aaa
std
mov
outsl
das
aaa
lds
and
inc
cld
imul
sarb
dec
mov
xchg
pop
into
xchg
jbe
xor
movl
mov
pushl
movl
pusha
movb
pushf
lea
jmp
jmp
xchg
inc
icebp
icebp
addl
hlt
inc
adc
jg
inc
pushf
imul
and
xor
adc
lret
xorb
xor
push
cmp
outsl
push
add
dec
and
jne
sti
outsb
out
mov
out
hlt
inc
cs
xor
outsl
mov
lret
shlb
popf
sub
mov
xchg
rcrb
imul
arpl
and
dec
push
or
dec
adc
fisttpl
shlb
pop
sar
loopne
lret
or
pop
or
fsubp
ret
das
std
icebp
jne
outsb
scas
pop
sub
push
cmp
cmp
jmp
idivl
add
mov
add
push
sbb
and
pop
es
sti
adc
xchg
and
sub
ret
cmp
hlt
inc
xchg
pop
or
mov
mov
adc
in
imul
push
dec
sub
out
nop
mov
xchg
sub
jae
jno
mov
dec
fstpl
mov
sub
in
lcall
repnz
mov
cmp
jbe
mov
daa
ja
xchg
lret
dec
inc
xchg
pop
jge
call
jmp
aas
add
sub
rclb
addr16
lock
ds
ret
mov
movsb
loope
insb
and
ss
push
call
dec
ret
js
test
adc
fldt
cmp
in
mov
add
pop
and
int
mov
push
or
rcll
dec
ss
cs
sub
xchg
pop
in
ja
mov
mov
mov
ror
movsb
cwtl
pop
arpl
adc
lock
jmp
sub
pop
cmp
push
mov
mov
aam
inc
jb
lahf
xchg
jl
pop
fsin
pop
jp
xchg
call
pop
mov
ret
sub
xor
cmp
mov
shrb
pop
mov
loop
adc
push
xor
lds
inc
and
sbb
int3
mov
pushl
mov
pusha
lea
jmp
movl
push
jmp
fimull
xor
or
les
repnz
push
js
xchg
sub
test
adc
xlat
sbbl
jo
test
dec
push
aas
das
sub
loopne
pop
mov
mov
pop
push
mov
aaa
sbb
fwait
jno
lcall
mov
dec
stos
dec
inc
inc
sahf
lea
xchg
mov
xchg
push
loope
jle
dec
and
push
add
popf
pushl
icebp
lcall
jge
data16
jnp
mov
cmp
cli
mov
jge
icebp
cmp
mov
into
cmp
stc
adc
or
sub
nop
fcompl
push
mov
xchg
dec
xor
and
shl
inc
out
add
inc
adc
mov
pop
inc
cmc
or
pop
xor
xchg
ss
vandps
add
sub
jae
or
mov
inc
sub
notl
dec
ss
clc
xchg
lock
jge
es
mov
sarb
testl
addr16
xchg
mov
daa
cmc
shl
imul
cli
mov
jne
pop
ds
mov
gs
mov
andl
cltd
stos
out
cld
lret
xor
filds
scas
das
pop
xchg
pop
mov
pop
sti
fsubs
addr16
sbb
and
add
mov
and
inc
and
pop
cmp
inc
xchg
push
mov
jge
aas
lret
subl
pop
aad
mov
pop
sub
sbb
aas
arpl
cli
loop
outsb
jge
insl
jo
lods
sub
xchg
rorb
out
lea
push
or
shll
mov
jbe
scas
je
insb
aad
mov
push
insb
das
cmp
pop
nop
xor
jmp
int
mov
je
lods
cld
dec
es
push
mov
lret
push
cmp
pusha
pushf
jmp
ljmp
rorl
dec
mov
mov
in
adc
sahf
mov
push
divl
push
push
into
push
xor
xor
add
movsl
jb
inc
lret
movb
ljmp
mov
pop
pop
or
cmp
das
xlat
test
jmp
sub
nop
inc
xchg
push
lods
mulb
xchg
int3
lods
testl
jmp
or
dec
mov
call
pop
adc
cmc
mov
test
test
inc
xchg
push
add
sub
jmp
cmp
shlb
cmpsb
stc
inc
aaa
gs
mov
out
loope
inc
push
xchg
sahf
cmp
pop
sarb
mov
imul
inc
fcmovb
jo
mov
mov
arpl
or
pop
mov
in
jecxz
fwait
popa
add
outsb
addb
clc
scas
in
mov
jnp
lods
or
dec
sub
jle
mov
cltd
adc
sbb
lods
sub
jno
punpckldq
xor
xor
push
mov
and
sbb
into
and
and
fdivrl
mov
call
outsb
push
xchg
adc
or
pop
xorb
insb
aam
jne
and
sbb
out
stc
outsb
imul
or
lods
xor
mov
mov
sbb
pop
nop
mov
loopne
iret
shrb
jp
mov
fcoml
add
jmp
sbb
into
andb
pop
sbb
mov
and
test
mov
pop
jnp
dec
pop
stos
rol
stos
test
adc
dec
push
dec
clc
push
sub
stos
mov
xor
insl
adc
inc
xchg
push
rol
call
jmp
ljmp
shll
fisubrl
mov
imul
orl
in
push
sub
jno
push
mov
shr
cmp
jmp
mov
into
daa
lret
in
fldl
sub
and
push
adcb
imul
pop
icebp
arpl
pop
adc
xchg
std
sbb
push
cmp
out
repnz
adc
jnp
inc
xchg
push
scas
hlt
addr16
movsb
lea
pop
pop
cmp
fdivrl
or
movsl
lret
nop
mov
daa
pop
sbbb
das
mov
jmp
mov
mov
cmpsb
mov
ret
cmpsb
cmp
imul
lret
jmp
mov
pop
pop
dec
sub
sbb
inc
xchg
push
mov
ret
pushl
movl
pusha
pushf
pushf
lea
jmp
push
call
cmpb
mov
in
test
pop
loope
xchg
jmp
jge
mov
and
out
js
sarb
sbb
stos
sub
test
sbb
js
test
cmp
sub
fldenv
lret
outsb
not
jle
stos
je
enter
out
sbb
call
inc
xchg
push
mov
inc
and
rcrl
movb
mov
push
call
fiadds
insl
in
inc
mov
lds
aas
dec
rorb
std
lods
icebp
rcl
notb
stos
mov
arpl
enter
jns
les
rorl
jnp
pop
cmc
lds
xchg
jl
ret
pop
cs
int
movsl
lea
mov
adcb
cwtl
in
jl
pop
sti
push
mov
icebp
jecxz
int
popf
mov
inc
test
inc
arpl
scas
js
rcrb
mov
fidivs
fisttpl
test
dec
shll
scas
out
add
xor
xchg
push
and
xor
mov
enter
mov
mov
push
and
mov
mov
ja
inc
dec
out
inc
push
std
cmp
jno
stos
or
cmp
inc
pop
das
push
sub
jb
xor
movsb
dec
hlt
inc
je
xchg
mov
and
popa
fldt
xor
test
pop
xchg
xchg
and
jmp
cwtl
pushf
call
jmp
cmp
inc
mov
adc
dec
add
jecxz
cmp
pop
add
dec
loope
arpl
cmp
jno
in
dec
mov
lods
lea
andl
lods
mov
or
sbb
push
test
out
mov
shl
imul
mov
sub
mov
inc
sub
pop
lcall
out
and
daa
jp
mov
enter
repz
cs
xor
sub
push
pushl
imul
insb
mov
and
pop
push
sahf
pop
imul
lds
cmp
add
aas
sub
or
mov
hlt
inc
sbb
ret
add
hlt
inc
fdiv
mov
xchg
out
lret
add
fs
push
lcall
or
outsb
lods
aas
ret
popf
sbb
enter
jb
fnstenv
xor
push
mov
mov
leave
pop
int
pop
dec
mov
xchg
mov
inc
sub
push
aam
mov
xor
xor
lret
cmc
sbb
rcr
mov
mov
xchg
push
leave
sti
shll
sub
leave
test
pushw
mov
or
add
or
pop
or
pusha
inc
pusha
lods
xchg
fsubr
xchg
add
sbb
inc
mov
inc
push
pavgw
sti
xchg
in
fadds
jns
jg
or
mov
xchg
cmp
push
pop
test
addb
mov
ds
or
shlb
fs
repz
or
fdivrs
dec
ficoms
aam
or
movb
es
das
data16
mov
das
cmp
xchg
loopne
mov
pop
inc
es
xor
jge
aad
dec
add
cs
lock
aaa
mov
xlat
mov
cmp
js
int3
xor
sbb
movsb
add
cli
push
test
mov
int3
xchg
jge
mov
xor
mov
xchg
dec
xor
mov
mov
mov
jge
sbbb
popf
and
sbb
insb
lea
mov
adc
pop
inc
stos
push
bound
fbstp
and
cli
jb
mov
out
sub
inc
fwait
sarb
stos
xchg
and
xlat
pushf
jg
repnz
icebp
sbb
jno
cmp
lock
inc
imul
bound
inc
push
jmp
xor
lcall
xorl
mov
push
xchg
push
or
icebp
lds
iret
cwtl
fldenv
mov
xchg
dec
or
xchg
rcll
add
mov
sbb
pop
cmp
movsb
int3
xchg
xor
pop
add
or
test
xor
lret
ja
rcl
into
sub
ds
daa
leave
mov
add
mov
les
adc
shlb
xchg
cmp
sbb
js
adc
rcrb
cltd
or
fisubrl
js
xchg
mov
xchg
cmp
fbstp
xchg
dec
stc
or
mov
movl
pushf
movl
pusha
push
pusha
mov
lea
jmp
and
jne
rcll
aam
fwait
cld
mov
shlb
mov
lret
inc
mov
int
aad
inc
add
jnp
dec
mov
mov
or
adc
or
stos
inc
add
sbb
jno
or
jge
sahf
push
sbb
sbb
jne
shrl
sub
dec
je
nop
and
sbb
sbb
push
jmp
and
imul
enter
fisttps
in
ror
std
dec
out
sbb
adc
insb
and
push
sbb
jge
outsb
dec
std
mov
cld
int3
out
js
and
jmp
cli
test
test
or
aaa
out
dec
fs
insb
sub
sub
mov
into
adc
mov
push
dec
pop
xor
aad
aam
clc
dec
aas
dec
je
xchg
dec
lret
mov
sbb
jmp
xor
adc
sbb
sbb
lcall
repnz
jnp
xorl
dec
xor
movsb
cltd
les
jmp
dec
cmp
idivl
adc
andl
push
cmp
js
fiaddl
dec
addr16
push
dec
cltd
das
push
inc
divb
bound
scas
fcomps
leave
mov
and
mov
cmpsl
cmp
pop
jp
ljmp
rcrb
sti
pop
xor
mov
lods
loop
mov
jmp
inc
loopne
cwtl
bound
sti
jp
fcompl
pop
cmp
mov
dec
mov
xor
ret
js
xchg
cmc
inc
fidivl
mov
je
adc
adc
dec
xlat
nop
adc
jge
jle
mov
inc
xchg
dec
and
pop
xchg
and
xor
pop
insb
in
leave
cltd
clc
dec
pop
push
and
imul
cmpsb
sub
jge
cld
mov
stc
lahf
negb
das
js
and
mov
jbe
mov
push
inc
cmpsl
push
fbld
pop
push
push
or
inc
xchg
dec
bound
sbb
scas
aam
mov
shrl
or
incb
sbb
std
dec
insb
stc
outsb
jno
movsl
test
dec
daa
cld
pop
shlb
inc
xchg
xchg
imul
sbb
hlt
sbb
stos
pop
repz
adc
adc
sbb
mov
mov
push
xchg
mov
cmc
popa
and
inc
lcall
lods
mov
xchg
loop
lds
je
je
dec
sub
cmpsb
fsubs
int
popa
cli
in
lods
mov
loope
mov
imul
xchg
dec
insb
mov
mov
in
pop
movsb
mov
push
cmpsb
xchg
xchg
xchg
shlb
repnz
sbb
adc
pop
das
hlt
mov
sbb
mov
xchg
jp
mov
adc
cmp
pop
cwtl
jmp
dec
imul
les
mov
mov
js
call
fisttpl
xchg
dec
dec
jg
inc
pop
mov
mov
mov
mov
adc
into
rclb
lret
mov
sti
pop
inc
bound
cmpb
call
insl
mov
add
push
das
cld
shll
insl
jae
pushf
dec
std
mov
push
ret
dec
js
gs
jns
int3
out
call
cmp
pop
lods
pop
nop
fadd
push
sbb
mov
cmp
jne
sbb
mov
pop
adc
jp
jmp
jno
mov
rorb
push
test
dec
rorl
xchg
push
dec
or
add
pop
dec
mov
mov
ljmp
movl
lds
div
push
mov
loopne
mov
in
nop
in
jp
imul
ret
mov
lock
aad
xchg
cmpsb
imul
mov
adc
mov
mov
inc
xchg
dec
out
inc
push
xor
dec
adc
scas
add
adc
lock
adc
inc
test
sbb
loopne
push
movsl
repz
outsl
mov
pop
jnp
shll
aam
dec
mov
cmp
push
pop
sar
iret
ds
in
push
mov
lods
mov
push
ljmp
jecxz
add
pushf
mov
rcrb
pop
shlb
add
minps
adc
add
mov
repnz
out
mov
call
adcl
xorb
or
stos
mov
jne
inc
cmp
xlat
out
imul
and
pushf
aam
sbb
je
xor
leave
push
push
stos
jg
mov
push
dec
bound
or
outsl
mov
sub
int
jmp
pop
push
inc
out
mov
xchg
jp
cld
popa
aaa
sub
js
lea
xor
mov
jbe
dec
and
inc
movsl
andb
je
push
dec
cmp
in
push
pusha
int3
cmp
pop
jle
pop
jbe
push
jo
xchg
xlat
fsub
cwtl
rcrb
inc
pop
fxtract
pop
cltd
pushf
iret
sub
das
add
sub
cmp
mov
enter
test
hlt
out
ljmp
fiaddl
js
repz
out
aad
out
push
shlb
sbb
push
cld
mov
lcall
imul
sbb
cwtl
and
cmp
daa
ss
sub
and
xchg
stos
fdivr
sbb
mov
mov
imul
mov
jnp
pop
lea
mov
ret
pop
popa
in
inc
out
sub
rcrb
nop
enter
daa
out
rolb
outsl
adc
js
shrb
sbb
test
and
jge
mov
mov
and
jecxz
mov
jmp
arpl
leave
ficoml
mov
stos
into
int
fildll
daa
test
cltd
into
mov
dec
or
xchg
js
mov
cli
jb
pop
jp
push
xorb
js
ja
lock
sub
je
jns
cmp
shl
inc
cmpsb
sub
jae
dec
mov
lahf
fbstp
xor
jno
inc
xchg
inc
mov
out
popa
mov
pop
outsl
xor
in
in
int3
lods
out
cmc
mov
mov
clc
mov
jmp
mov
test
mov
outsl
loopne
inc
push
je
dec
push
push
push
mov
xchg
add
mov
add
or
mov
mov
mov
int3
mov
in
cwtl
add
mov
hlt
clc
pop
inc
or
addr16
cmp
cmp
inc
dec
jp
lds
bound
shlb
inc
pop
jns
xchg
adc
adc
ds
enter
jmp
mov
xchg
adc
or
lret
push
andb
cs
addb
test
sub
fs
test
lea
xchg
inc
loope
fnstenv
in
add
sub
ss
out
sbb
pop
fcoms
imul
aam
fcmovu
jl
icebp
adc
leave
jmp
xor
pop
inc
xor
outsb
popf
scas
xchg
mov
mov
pushf
lcall
rorb
cmp
push
mov
lea
jbe
push
pushf
movl
pushf
movl
lea
jmp
jmp
dec
gs
movsl
lods
shll
mov
out
jns
xchg
push
push
adc
scas
push
pop
push
lods
cmp
adc
das
xchg
je
mov
push
pop
das
fmull
inc
xchg
popf
daa
jnp
lds
xchg
shl
dec
jl
jle
dec
mov
imul
xor
inc
and
xchg
inc
jge
mov
hlt
jnp
add
mov
mov
loopne
and
dec
outsb
xor
lcall
enter
daa
xchg
adc
adc
ljmp
pop
mov
dec
aam
cmc
xchg
pusha
sbb
and
dec
mov
adc
jmp
jl
stos
dec
mov
fstpl
shrb
mov
mov
stos
loopne
test
jns
movsl
push
jle
push
add
roll
xchg
lahf
call
inc
xchg
inc
pop
imul
cmpsb
outsb
test
inc
adc
gs
push
pop
outsb
shrb
loope
pop
mov
adc
xchg
in
sub
cvtps2pd
aam
iret
out
xor
mull
mov
and
repnz
ljmp
xor
xchg
cmpsb
cs
push
pop
pop
or
cmp
sti
fiaddl
mov
loope
xchg
ror
mov
adc
clc
out
push
xchg
mov
dec
sbbl
sub
cmp
inc
xchg
inc
mov
out
mov
push
add
xchg
xlat
dec
loope
mov
sub
mov
mov
dec
imul
mov
add
repnz
rol
xchg
inc
cmp
mov
notl
jmp
sub
or
ds
mov
fcmovnu
xchg
sahf
movsb
arpl
cmpsb
add
add
or
mov
rclb
sarl
push
clc
or
adc
push
or
inc
xchg
inc
jle
inc
pushf
pushf
movl
pushf
movl
mov
pushf
movw
lea
jmp
push
mov
movl
call
cmp
jne
pop
mov
fcos
jnp
xchg
ja
movsl
notl
dec
adc
daa
xchg
xor
call
inc
mov
in
mov
movsl
mov
xchg
add
cmpsl
inc
in
hlt
or
sbb
xor
mov
jbe
int3
adc
xchg
les
test
push
jp
push
aad
ror
inc
fwait
xor
cld
push
fmull
test
inc
sbb
fnstsw
sbb
mov
addr16
xchg
adc
aaa
int3
mov
fcompl
sbb
sbb
mov
xlat
nop
xchg
leave
cmp
mov
jp
pop
cmp
outsl
sub
mov
ret
mov
push
outsl
cmp
and
adc
push
lahf
fidivl
inc
inc
inc
push
add
xchg
xchg
push
inc
ss
push
jnp
outsb
adc
and
cmpl
mov
insl
fsubrl
ljmp
lret
mov
cmp
xchg
lret
pop
push
mov
mov
bound
sub
jge
xchg
mov
add
jecxz
xchg
mov
int3
jo
imul
in
icebp
test
adc
sub
push
fistps
push
jmp
jb
call
or
adc
dec
ret
hlt
les
xor
pop
push
rorb
outsb
fmuls
pop
adc
aas
stc
cld
das
or
rolb
xchg
clc
mov
in
cwtl
xchg
mov
pop
cltd
mov
or
pusha
push
jmp
sbb
test
mov
mov
cwtl
fdivrs
ret
mov
addl
xchg
fldl
roll
sub
sbb
icebp
test
adc
push
cld
jge,pn
sbb
inc
data16
and
or
outsl
shl
sbbl
push
call
addr16
outsl
jp
sahf
test
add
dec
push
cmp
and
or
inc
cwtl
xor
adc
xchg
sub
push
rorl
addr16
cltd
lcall
movsb
ret
mov
mov
pop
lods
lret
insl
popf
pop
dec
fwait
sub
sub
loopne
aaa
loop
jbe
add
rclb
int3
adc
push
mov
test
adc
jp
jo
sarl
mov
dec
push
xchg
out
push
sub
je
pop
sub
inc
xchg
inc
push
add
push
movb
pusha
movl
pusha
pushl
mov
movl
movb
pushl
movb
push
lea
jmp
push
movl
pusha
pushf
lea
jmp
stc
push
frstor
pushl
xor
mov
jg
fs
xchg
int
je
sbb
mov
mov
sahf
add
pop
push
dec
mov
fdivl
stos
push
dec
sub
ja
hlt
rorb
test
btc
pop
push
outsb
dec
out
leave
cs
call
gs
jne
inc
idivl
lock
sub
cli
sahf
das
inc
test
inc
mov
cltd
or
push
jnp
insb
out
xchg
inc
int3
dec
sbb
aad
mov
fstps
mov
mov
mov
cs
inc
xchg
lods
mov
pop
leave
pusha
jns
lret
out
jecxz
loope
fcoml
loope
xor
stc
arpl
mov
nop
add
fsub
popa
xchg
xchg
mov
adc
in
pop
insb
xchg
adc
cmpsl
leave
pop
movsb
andl
mov
lock
dec
and
xor
mov
or
jecxz
push
ja
add
or
cmp
out
pop
fdivl
repnz
icebp
push
xchg
ljmp
ljmp
fisubs
not
andb
clc
out
or
xchg
add
jae
inc
xchg
aas
mov
xor
or
push
in
lds
mov
or
cli
mov
test
sbb
pop
lods
push
mov
mov
pop
repz
jle
and
add
loop
sbb
sti
ret
mov
adc
out
or
lahf
in
mov
cwtl
enter
cmp
push
dec
sub
pop
inc
xchg
call
push
or
inc
test
ds
imul
adc
rorb
dec
sbb
cmp
mov
test
mov
jl
sub
in
stc
sbb
nop
jge
dec
jb
xchg
cmp
movsl
fstps
xlat
adc
insb
loope
divl
or
adc
dec
movsl
loopne
and
ja
dec
pop
aad
sahf
in
add
rorb
lret
pop
jae
inc
shll
pushf
sub
jle
cmp
repnz
shrl
xchg
aas
or
push
movl
push
pushf
pusha
pushf
lea
jmp
scas
ja
lea
aad
jecxz
aad
repz
sti
dec
sub
xor
mov
jl
sbb
lahf
xor
xchg
xor
cld
xchg
insl
sarl
subl
jae
push
lods
popa
cli
pop
mov
mov
outsb
mov
adc
xor
iret
xchg
aaa
mov
ja,pn
push
jecxz
dec
jecxz
out
add
movl
sahf
icebp
out
add
sub
xchg
or
lds
dec
dec
insb
addb
inc
lods
fidivrl
sbb
jl
shlb
lcall
and
sbbb
sti
test
pusha
inc
xchg
cmp
movsl
in
or
add
add
push
fists
fdivs
ror
and
sub
xlat
lret
push
mov
rsqrtps
in
shlb
mov
sub
cmp
popa
add
inc
xchg
cmp
cmpsl
sbb
mov
mov
movsb
shll
stos
and
imul
lods
inc
scas
pavgb
adc
cwtl
fadd
jbe
fsubrs
push
mov
lods
xchg
mov
mov
outsl
ljmp
cmp
mov
out
fdivr
shlb
adc
xor
mov
mov
mov
cmp
jge
inc
pop
fmuls
test
inc
popf
jl
or
dec
pop
xlat
gs
cmp
push
jnp
mov
dec
mov
imul
outsl
push
and
int3
xchg
sbb
lret
dec
outsl
inc
nop
repz
jle
test
xchg
inc
dec
mov
adc
sub
or
mov
dec
lret
mov
pushf
jl
and
mov
jae
cmpsl
loopw
add
mov
rolb
adcb
popa
in
stos
ret
js
int3
ret
mov
ljmp
popf
xor
inc
mulb
test
lea
lcall
aam
inc
xchg
cmp
inc
push
jne
roll
popf
inc
pop
xchg
push
or
fwait
cmp
and
sub
add
movb
xor
dec
lret
jb
loopne
jns
aaa
xchg
in
aam
aad
add
lods
call
jg
xor
push
mov
out
sub
mov
push
mov
mov
mov
test
pop
adc
xchg
cmp
insl
cmp
icebp
jg
xchg
negb
addl
je
mov
outsl
add
sub
es
push
push
popl
subb
cmp
inc
mov
ror
dec
push
xchg
push
xor
out
add
sbb
movb
into
xchg
jge
xchg
cmp
or
pusha
movl
push
pusha
movl
push
lea
jmp
mov
mov
imull
adc
stos
adc
outsb
ss
ficoml
pop
js
fs
das
and
mov
inc
fnstcw
mov
je
cmp
xor
sub
or
sub
or
cltd
lock
sbb
pop
leave
inc
xchg
cmp
and
or
in
push
out
dec
ja
mov
dec
imul
test
mov
addr16
ja
xchg
inc
xor
mov
test
mov
xchg
mov
andl
sub
int
int
in
add
lret
and
test
jle
stos
enter
lods
inc
xchg
cmp
xor
push
xchg
negl
dec
pop
ss
inc
insb
pop
fwait
add
in
mov
pusha
cmp
jmp
daa
ljmp
fwait
dec
cmp
nop
add
push
mov
movsl
sbb
adc
fisttps
xchg
push
movsb
inc
jns
cmpsb
fisubrl
sub
fcoml
xchg
cmp
popa
mov
jno
inc
push
dec
adc
ret
stos
adc
cmp
or
sbb
xor
ss
imul
xchg
fcmovb
dec
sbb
lods
and
sub
pop
shll
dec
cmp
pop
xchg
jb
push
int3
imul
fsubl
adc
dec
inc
xchg
cmp
and
cmpsb
inc
cmpl
push
push
out
nop
hlt
inc
and
or
enter
lock
jbe
inc
js
icebp
adcb
xchg
jl
jae
in
cmp
out
test
inc
dec
popw
sbb
nop
je
in
sahf
lock
xchg
jle
adc
stos
pop
add
mov
xchg
outsl
repz
lea
dec
divl
jg
shr
xor
adc
inc
xor
ret
pop
xchg
mov
jg
aad
rcrb
es
pop
inc
sahf
aaa
push
xor
lds
xchg
sub
mov
push
movsl
mov
and
mov
sbb
or
mov
mov
fcomps
inc
xchg
cmp
and
out
push
sbb
insb
cmp
sti
push
les
adc
pop
mov
mov
adc
pushf
sub
sub
in
test
cmp
aam
clc
adc
push
jo
ja
cmpsb
int
and
jnp
imul
sbbl
mov
cs
mov
rorb
lds
sti
gs
fisubrl
or
cwtl
pop
or
jae
push
and
arpl
mov
pusha
sti
adc
xchg
sbb
push
push
xchg
pusha
inc
lret
mov
mov
rorb
stc
int3
mov
fbld
add
stc
xor
aas
pop
cmp
pop
inc
adc
out
stos
mov
inc
mov
mov
fiaddl
aaa
fwait
test
mov
pop
or
stos
inc
push
ja
inc
push
jbe
dec
aam
or
mov
movsl
clc
mov
jb
xor
inc
mov
sbb
inc
pushf
push
cmpsl
data16
cs
lods
pop
dec
fmull
ljmp
orl
arpl
xchg
push
in
sub
hlt
push
or
add
inc
outsb
mov
ds
jg
pop
shll
adc
pop
addr16
hlt
xchg
and
xor
sbb
cmp
mov
aad
int
push
adc
in
pop
add
popf
pusha
mov
jle
or
ja
xchg
and
enter
outsb
mov
pop
fwait
imul
lock
sub
xchg
jle
xchg
jmp
push
sahf
xlat
dec
dec
xchg
mov
adc
adc
ffree
fwait
outsl
xchg
out
pop
out
repnz
cmpl
fcom
cli
in
in
xor
push
fwait
aad
push
out
mov
sti
push
pop
xchg
iret
mov
adc
jmp
mov
imul
pop
shlb
inc
arpl
adc
out
jae
pop
ss
mov
or
sbb
outsb
aad
shll
add
cld
sbb
shrl
cmp
pop
inc
sbb
std
mov
mov
jb
andb
dec
lea
das
pop
lret
dec
cmp
fs
inc
repz
sbb
sbb
repnz
in
mov
mov
inc
outsb
cmpsb
xchg
imulb
lds
and
and
test
leave
hlt
sub
push
push
enter
xchg
aaa
cmp
xchg
xor
inc
and
das
icebp
out
mov
pushl
lea
jmp
ljmp
nop
add
cld
add
jmp
jno
dec
cld
orb
or
data16
mov
je
xchg
xchg
jmp
int3
pusha
out
ror
and
jl
mov
hlt
add
push
clc
popf
fmull
mov
add
mov
ret
daa
sub
dec
adc
jg
push
push
js
imul
clc
fs
cld
repz
xchg
lret
mov
imul
in
push
or
sbb
add
cmc
outsb
adc
js
jo
testl
rol
xor
stos
arpl
nop
mov
decb
lea
inc
stos
addr16
mov
fmuls
push
subl
rorl
cmc
sub
push
push
inc
clc
jbe
mov
lods
jmp
js
scas
jb
in
std
loop
adcb
scas
inc
les
sarl
ret
xchg
xor
pushl
movl
pushf
call
pop
cmpsb
sbb
shrl
test
stc
mov
sbb
fs
jnp
cld
ss
mov
and
adc
daa
cmp
xor
dec
push
sub
sahf
xchg
out
or
and
outsl
dec
inc
sub
test
xchg
roll
adc
inc
into
rcr
ja
adc
mov
dec
sbb
sbb
push
add
inc
xchg
xor
js
mov
inc
fstpl
inc
add
or
mov
xchg
mov
out
mov
xor
cmpl
mov
adc
ss
jno
ljmp
add
cmp
lods
rolb
cli
incl
or
lods
pop
in
push
fsubrs
inc
mov
pushf
lret
inc
add
pop
pop
mov
les
or
in
mov
or
shrl
push
daa
inc
jecxz
sbb
xor
je
dec
jl
pop
adc
xor
jg
iret
dec
rol
push
cmc
push
xchg
push
std
cmpsb
mov
xchg
aaa
popa
fbld
fsts
bound
int3
rcrl
testb
dec
push
fiaddl
xor
jge
add
xor
cmc
xchg
and
mov
sbb
xchg
mov
insl
std
cmpsb
sbb
in
mov
enter
inc
xlat
insl
movsl
add
xor
sti
push
out
lock
sub
push
pop
addr16
cli
arpl
test
notl
scas
lahf
andb
cmp
insl
push
inc
adc
inc
xchg
xor
lea
repnz
add
xlat
data16
sahf
repz
mov
ret
jl
jns
pop
sbb
push
inc
aaa
lods
pop
nop
pop
shrb
dec
xchg
add
add
xchg
popf
fdivrs
push
xchg
inc
xchg
sbb
mov
in
sahf
adc
and
push
aad
das
push
in
dec
xchg
push
lahf
int3
mov
and
cwtl
sarb
mov
pop
js
mov
sbb
mov
popa
jge
dec
repnz
push
mov
xchg
jmp
shrb
pop
jge
in
xchg
inc
notl
and
ds
add
cmp
push
cmpsl
sub
xor
and
lret
mov
xcrypt-ofb
cmpsl
jmp
ret
in
mov
sub
xor
ja
lcall
clc
cltd
fyl2xp1
lea
adc
movsb
test
pop
lret
mov
mov
xor
mov
test
out
xor
xchg
jno
mov
push
imul
loope
or
jo
data16
sbb
adc
test
cmp
test
jns
movsb
scas
mov
cmp
rorl
dec
xlat
mov
mov
negl
je
mov
cmpsl
add
and
dec
mov
add
jo
mov
sbb
mov
insl
mov
popl
fisttpl
jb,pn
add
jge
aam
ror
jno
mov
aad
lcall
jg
xchg
xor
add
xchg
xchg
dec
loop
sub
arpl
dec
aam
shll
and
lods
xor
xchg
xchg
lea
cltd
push
mov
pushf
bound
adc
sbbl
xlat
cmp
jg
mov
and
jge
fcoms
aaa
mov
outsl
movhps
add
aad
mov
mov
jp
test
pusha
das
jg
lcall
fstp
inc
xchg
xor
dec
mov
or
cmp
dec
xlat
fs
aas
pop
cmp
pop
in
imul
outsl
jno
xchg
sbbb
xorl
and
repz
out
pop
sub
ss
sub
out
lret
push
jno
jecxz
push
add
dec
add
int
mov
pusha
and
sbb
inc
xchg
das
jb
or
push
lods
jns
or
xor
imul
mov
mov
dec
cmp
mov
pop
xor
pop
sub
or
xchg
push
dec
sahf
mov
pop
sub
loopne
dec
ret
test
fstl
push
mov
aaa
das
adc
dec
add
dec
cmp
xchg
rolb
inc
pop
adc
mov
cmp
mov
dec
sarl
sub
jo
andl
mov
testl
mov
sbb
jmp
nop
movl
xchg
mov
call
pop
jp
lret
lret
fdivr
cltd
sbb
call
lock
push
stos
pop
inc
or
cmp
adcl
push
sub
fidivl
in
xor
imul
icebp
call
rcrb
loopne
fmull
out
mov
call
add
cld
mov
sub
out
repnz
mov
mov
popf
mov
adc
fidivs
jmp
movsl
dec
pop
push
mov
lahf
imul
andb
roll
inc
sub
sub
xchg
clc
mov
sub
pop
push
mov
sbb
jp
xchg
cmpsl
call
sbb
jb
sub
rcrl
hlt
imull
adc
bound
dec
and
fists
pop
test
dec
mov
mov
xchg
aaa
je
sub
icebp
stos
dec
push
aaa
insl
dec
insl
nopl
mov
es
pop
rolb
cs
mov
add
iret
xor
sbb
fisttpll
add
add
leave
mov
or
sub
in
or
bswap
inc
or
bound
push
stos
jl
aaa
jno
out
adc
inc
ret
es
mov
and
xchg
inc
scas
inc
out
dec
ficompl
jp
push
xor
outsl
or
sbb
js
jns
xchg
or
push
cmp
and
push
aad
inc
xchg
cs
inc
push
sbb
out
clc
dec
out
push
cmp
jge
pop
add
shrl
aas
sbb
cmc
shlb
mov
insl
push
inc
js
or
js
xchg
jecxz
inc
test
inc
mov
lcall
and
mov
les
cmp
fld
stos
out
leave
pop
xor
push
ja
sti
mov
cs
inc
stc
push
and
repnz
pop
daa
sub
outsl
push
inc
and
mov
cmc
jmp
xchg
lods
jno
je
push
fnstcw
cmp
dec
int3
jbe
lods
sub
inc
test
push
or
adc
pop
push
jns
dec
ret
fwait
push
dec
into
sbb
cmp
pop
call
shl
adc
sarl
js
inc
xchg
sub
out
or
sub
shrl
and
inc
push
xorl
xchg
sbb
sbb
hlt
cmp
sti
mov
adc
das
ror
fs
lret
pop
lret
aas
jo
negl
push
and
sub
scas
mov
mov
push
pop
int3
jno
aam
mov
pop
loop
add
stos
push
ja
mov
add
repz
xor
out
ja
pop
add
add
outsb
mov
incb
into
pushf
xchg
or
aam
cmp
xchg
jnp
jns
aam
test
xor
inc
xchg
sub
loope
push
jp
pop
cs
jmp
enter
or
mov
call
xorl
pop
pop
lock
inc
mov
sti
test
out
lods
lret
je
dec
push
mov
addr16
icebp
lret
pop
lcall
iret
out
popa
in
rcrb
and
and
stos
cmp
and
jg
push
test
mov
mov
inc
xchg
sub
lret
adcl
pushf
push
fs
shll
jmp
nop
pop
mov
mov
lret
icebp
in
add
jnp
insl
push
dec
lods
pop
sbb
mov
xlat
sbbl
inc
cs
cli
scas
mov
mov
push
into
dec
imul
imul
pusha
inc
cli
lahf
or
nop
sti
mov
pop
jp
gs
notb
push
jno
xchg
cmp
xchg
int
sub
pushf
lods
test
push
rcrb
ljmp
js
addr16
jb
icebp
xor
mov
jle
loop
or
push
or
jg
sub
add
xlat
dec
push
pushf
mov
test
popa
hlt
mov
inc
xchg
sub
pop
push
xor
inc
in
cmp
xor
mov
or
cmp
sbb
subl
nop
mov
mov
in
inc
in
pop
jno,pn
test
pop
cmc
dec
es
sbb
mov
fstl
pop
das
faddl
add
lods
cmc
lods
ret
aad
int
and
sbb
inc
test
scas
sbb
cltd
std
pop
aaa
js
cmpsl
shl
mov
aaa
cli
and
inc
or
pop
xlat
dec
cmpsb
subb
inc
call
pop
mov
xchg
sarb
dec
int3
mov
jg
or
cmp
pop
add
data16
pop
adc
inc
xchg
sub
out
jmp
psubusb
add
push
divb
popa
jmp
sbb
lret
sub
and
jmp
pop
inc
push
ret
inc
adcl
mov
ds
scas
cmp
gs
sub
dec
xlat
adc
mov
mov
xchg
mov
notl
adc
jo
scas
rcr
add
adc
in
jno
rol
rolb
cmpsb
scas
aas
jb
pop
cmc
cmp
arpl
jne
mov
call
out
xchg
fs
sub
dec
into
adc
call
in
sbb
cmpl
jo
arpl
test
xchg
sub
add
add
stos
add
jo
mov
pop
or
aas
pusha
lock
mov
xchg
bnd
sti
stos
dec
mov
jmp
push
test
fwait
pop
sarl
mov
sub
repnz
decl
cmpl
mulb
cltd
pop
or
xor
imul
pop
push
jne
cli
popa
xchg
sbb
sbb
fcompl
lahf
out
pop
xor
out
sbb
mov
xchg
sub
cmp
ret
xchg
sarl
movsl
std
popf
ret
push
sub
pop
andb
cmp
in
inc
xchg
and
xor
or
jecxz
add
outsl
fdiv
xor
and
push
into
and
jp
insb
or
mov
sbb
push
sub
popa
add
loopne
dec
sbb
push
mov
xchg
sub
stc
leave
mov
fdiv
mov
adc
mov
in
arpl
mov
push
sbb
addr16
ret
xchg
push
inc
push
xchg
int3
aas
in
pop
dec
aam
sbb
dec
aas
mov
imull
adc
cmp
inc
adc
ret
dec
jno
cs
rcrb
roll
push
loope
jp
and
add
gs
aad
xchg
pop
sahf
dec
xchg
mov
and
adc
pop
jl
sub
jl
xchg
das
jne
addps
mov
daa
xlat
int
idiv
js
pop
xor
imul
testl
pop
arpl
xchg
jp
mov
mov
aam
incb
pop
adc
mov
int3
imul
aam
vpminub
jb
pop
cmp
stc
rclb
dec
cmc
lods
add
out
jp
lods
rorb
iret
test
fcomip
pop
cmp
out
mov
jp
mov
lds
inc
xchg
sub
jmp
and
jge
or
enter
fidivl
pop
cltd
call
mov
or
pop
dec
mov
mov
in
rclb
outsb
popf
adcb
push
or
push
data16
test
shr
sub
insl
jg
jnp
xchg
dec
dec
mov
push
fistl
push
push
sbb
leave
dec
lods
scas
sbb
add
or
mov
xchg
xor
ljmp
syscall
ljmp
mov
ret
xlat
dec
or
and
mov
pop
xchg
outsl
cmp
or
bound
cld
mov
bound
dec
jbe
fs
ds
into
test
inc
in
mov
clc
xchg
mov
dec
outsl
sub
outsb
jle
xchg
mov
pushf
jp
mov
push
arpl
cltd
rclb
cld
dec
mov
imul
dec
int3
outsl
out
mov
inc
daa
inc
add
inc
and
add
push
cmpl
jp
and
cmpsb
fildll
pop
aaa
jne
inc
xchg
and
cwtl
les
and
out
sbb
cli
stos
in
loope
sub
lea
mov
xlat
out
push
cmpsb
mov
mov
cltd
mov
mov
fimuls
cmp
icebp
int
cmp
xchg
jne
fidivs
in
mov
setne
inc
notl
jns
ret
mov
jl
in
int3
addl
imul
adc
cli
dec
pop
jl
ret
mov
mov
pop
inc
es
cs
or
inc
arpl
or
imul
pop
jne
xor
fadds
cmp
rolb
imul
popa
and
adc
push
add
xchg
and
add
cmp
push
adc
bound
jnp
data16
add
mov
sbb
shlb
xor
xchg
into
pop
xor
jp
cmp
inc
mov
and
cli
pop
and
sbb
dec
push
push
xor
push
dec
popl
cmp
jl
pop
xchg
jge
mov
mov
mov
fldenv
and
in
pusha
jmp
mov
pop
inc
sbb
test
js
movsl
xor
jl
ret
inc
mov
push
adc
push
in
lret
dec
jp
sbb
andl
or
cmp
out
jnp
adc
jecxz
loope
bnd
inc
xchg
and
mov
sti
insl
xchg
xchg
leave
mov
lods
sbb
pop
inc
sub
push
adc
mov
ja
jb
jno
lods
andb
mov
sub
dec
inc
pusha
insl
xlat
iret
movsb
outsb
lahf
add
mov
fistpl
adc
jbe
cmp
push
jg
inc
cld
and
icebp
mov
cli
or
test
or
jmp
scas
cmc
lods
mov
mov
inc
adcl
pop
xor
mov
enter
inc
jo
cwtl
pop
inc
imul
add
adc
inc
xchg
and
inc
push
pushf
movl
pusha
pushl
pushl
pushf
movl
pushf
pushf
lea
jmp
adc
outsl
test
pop
xor
in
lods
ret
lcall
iret
and
repz
std
repnz
xchg
cmp
pusha
loopne
ss
push
jp
jp
into
adcb
cltd
ljmp
pop
out
add
ss
add
lds
sub
jge
icebp
fbstp
fidivrl
or
aam
mov
inc
jmp
or
scas
adc
push
sub
out
inc
ss
popf
loopne
mov
push
xchg
mov
jg
inc
stos
jle
mov
pushf
shlb
sbb
adc
nop
repz
or
shl
neg
push
jp
pop
mov
sahf
test
inc
inc
pusha
jg
pushf
cld
jb
cltd
fldenv
mov
dec
add
dec
insb
imul
cmp
mov
jne
pushf
xor
mov
loope
mov
in
or
inc
push
dec
add
inc
xchg
and
and
js
push
pusha
pushl
pushf
mov
lea
jmp
push
mov
movl
pushf
push
lea
jmp
jmp
movl
pushl
pushl
lea
jmp
aaa
add
sub
scas
cli
mov
sub
xchg
les
in
mov
inc
sub
insb
add
jnp
imul
cmp
sub
push
mov
cmp
imul
sub
aaa
data16
adc
stos
in
mov
push
fnstenv
push
push
xchg
sbb
fisttpll
cli
lods
hlt
inc
jge
xchg
and
ljmp
pop
pop
and
scas
movl
mov
inc
mov
cmc
push
pusha
cmp
sbb
mov
mov
iret
mov
xor
addr16
out
jb
xchg
stos
pushf
push
dec
aam
sbb
sbb
inc
xchg
and
mov
movl
pushf
movb
pushl
pushf
movl
mov
lea
jmp
jge
cmp
xor
jno
jbe
xchg
enter
cld
mov
add
and
cmp
leave
jne
mov
add
popf
movsl
dec
add
ja
pop
int3
lea
in
js
imul
pop
jge
cs
pop
push
cli
mov
or
dec
lods
mov
lahf
fldl
pop
jle
cs
sbb
adc
and
cwtl
lret
cmp
mov
inc
xchg
and
dec
dec
xchg
pop
mov
and
mov
das
stos
fisttps
sub
cmp
adc
dec
xchg
add
shll
das
test
repz
cltd
test
in
decl
into
adc
mov
sub
aaa
pop
divl
add
or
lret
jl
sahf
mov
stc
icebp
je
or
mov
jg
sti
and
jmp
pop
and
out
ss
xor
add
sbb
inc
mov
pop
les
sub
inc
jbe
les
push
out
popa
stos
jg
fildll
dec
dec
push
push
adc
push
bound
js
fidivl
mov
iret
xchg
js
dec
xchg
in
cmpsl
pop
pop
bound
mov
jo
stos
jns
xchg
pop
cli
and
fwait
pop
mov
iret
ds
xchg
mov
outsl
rorl
repz
add
sub
xchg
mov
lahf
mov
adc
or
xor
iret
push
sahf
outsl
hlt
andb
sahf
xchg
push
dec
mov
mov
ret
lods
in
mov
xchg
pop
out
sbbb
mov
add
cwtl
jecxz
ss
insb
jmp
mov
mov
fwait
dec
lea
in
cli
mov
pop
inc
push
pop
and
mov
jmp
out
cmp
xlat
cmp
mov
int
add
popa
inc
xchg
pop
loop
out
movl
call
mov
pop
jmp
xor
test
xchg
cmp
mov
test
popa
lods
add
out
lds
lods
addr16
inc
add
popa
cmp
inc
xchg
pop
pop
sub
into
jmp
add
ret
jecxz
movsb
rorb
imul
xlat
aam
enter
mov
fwait
ret
add
inc
or
xchg
inc
adc
jmp
jne
mov
push
mov
lcall
pop
push
adc
cld
inc
xor
inc
pop
lock
test
adc
xor
addb
mov
mov
mov
xor
dec
push
loope
cmpb
pop
shll
out
test
xchg
pop
insb
movsl
pop
push
in
prefetchnta
in
inc
popf
mov
pop
loope
test
cmp
push
out
mov
ja
bound
jbe
mov
stos
cld
fists
xor
xchg
je
xchg
pop
xchg
outsl
cmp
xchg
push
adc
cmp
add
sahf
adcl
or
and
add
sub
adc
mov
shrl
dec
jo
jle
xchg
xor
sub
mov
mov
movsb
xor
fisttpl
mov
push
lahf
addl
and
ds
rcr
mov
scas
cmp
imul
repz
je
xor
sbb
mov
pop
out
mov
mov
repz
shll
xchg
shl
lret
ret
and
int
negl
inc
xchg
push
pop
pop
out
inc
xor
cli
mov
dec
sbb
xor
pushl
mov
div
mov
gs
dec
mov
in
aas
and
addb
enter
xchg
jecxz
mov
fwait
adc
push
pop
jp
mov
dec
jns
mov
cmp
pop
fcomps
add
in
push
aad
stos
jnp
ret
stos
push
and
bnd
dec
push
and
jl
scas
leave
mov
sub
push
enter
shrb
pop
jle
or
fstpt
xchg
sbb
out
or
out
cmp
inc
adc
dec
clc
in
popf
or
lret
std
push
dec
sub
jae
adc
fstl
dec
sub
xchg
pop
mov
lahf
xchg
stos
out
sti
cmpsl
mov
push
pop
loope
sbb
xchg
jmp
push
js
int3
adc
xchg
scas
imul
data16
leave
pop
js
lahf
push
pop
testl
push
inc
sbb
divl
inc
xchg
sbb
pop
and
test
inc
sbb
pop
xchg
push
dec
icebp
lods
loope
jmp
pop
push
sub
dec
push
leave
lahf
ja
cmpsl
mov
push
test
movsb
sarb
sahf
sti
cltd
mov
dec
int
jnp
mov
jnp
or
out
sbb
mov
dec
stos
ret
mov
fldl
push
cmp
lods
mov
int3
popl
mov
pop
xchg
out
sub
mov
lods
mov
inc
sbbl
sti
jno
sub
ficoms
xchg
xchg
dec
xlat
enter
out
addr16
xlat
cmpsb
xor
fs
fistpl
push
xchg
call
pusha
call
inc
push
sub
jmp
pop
cmp
mov
xchg
sbb
dec
sarb
pop
inc
cs
fcom
add
mov
imul
adc
inc
dec
mov
sbb
mov
mov
aam
shlb
add
push
xor
test
and
out
mov
adc
aad
push
mov
and
mov
pop
cmp
dec
out
xchg
sbb
sub
leave
dec
jbe
popa
mov
hlt
mov
out
aas
xchg
stos
mov
shl
cltd
push
mov
adc
cmpsl
pushf
cmp
push
std
mov
push
or
pop
jno
inc
decb
xlat
mov
stos
and
lds
and
or
sahf
cmc
inc
aaa
loope
xchg
sbb
imul
xchg
mov
test
outsl
ss
jnp
cltd
jmp
sbbb
inc
inc
pop
jecxz
call
add
xchg
dec
je
jo
adc
sarb
mov
dec
mov
daa
xchg
aas
rcr
or
int
adc
outsb
aaa
mov
jle
xchg
in
out
cmp
and
sbb
int3
mov
pushf
xlat
mov
inc
jl
pop
icebp
add
movsl
int
icebp
adc
mov
xor
jg
sbb
jne
test
imul
push
push
out
cmp
cli
test
ljmp
negl
pop
or
pop
stos
in
stos
call
imul
adc
sti
loop
sbb
data16
xchg
xchg
sub
arpl
je
xor
aam
and
ja
movsl
int3
int3
cmp
aas
aaa
test
into
lret
mov
ljmp
jbe
int3
mov
loopne
mov
xor
insb
mov
ret
flds
inc
sbb
orl
pop
pop
or
push
in
scas
negl
fnstenv
xlat
xchg
clc
inc
xor
clc
push
scas
stos
popf
jp
subl
pop
push
ja
dec
sbb
push
mov
cld
cmpsb
mov
iret
sbb
insb
insl
ja
movsb
stc
push
jb
pushf
add
xchg
push
mov
ja
push
mov
mov
inc
icebp
xor
or
push
xchg
cmpsl
pop
fsubrl
fldt
faddl
pop
lcall
dec
aas
mov
loope
cmpsl
loop
jl
xor
incl
bound
addb
loop
ss
mov
loope
mov
jg
dec
xor
mov
jle
ds
enter
roll
cmovae
popf
sbb
xchg
sbb
outsl
call
aad
lods
lods
lcall
cld
inc
and
mov
lods
inc
inc
add
movl
jns
pop
cmp
aaa
jo
sbb
sbb
rol
push
lret
mov
mov
xchg
sbb
jg
add
jg
push
call
mov
lods
and
bound
jnp
testl
jp
fcmove
sub
and
out
push
lock
lea
loopne
xchg
mov
push
push
sub
pop
pop
or
jle
loopne
add
inc
rolb
aas
dec
sbb
pusha
and
cmp
movsl
jp
xchg
cmp
leave
ds
mov
jp
push
cmp
jle
inc
xchg
pop
hlt
sbb
jmp
gs
les
fwait
movb
mov
arpl
aaa
aam
and
cmp
xchg
push
cmp
aad
bound
test
dec
xchg
lods
in
push
subb
jmp
fistps
push
xchg
push
lock
pushf
pop
popf
nop
rclb
jle
cwtl
loope
add
popa
ds
out
leave
sahf
mov
icebp
cmp
out
mov
pop
or
push
xchg
pop
mov
mov
push
or
xchg
cmp
int3
mov
pop
insl
test
ja
mov
xor
pop
push
adc
sub
xorl
pop
shrl
fsubs
or
sbb
push
adc
or
mov
inc
out
cmpsl
sbb
inc
xchg
push
cltd
lds
imul
ret
sbb
cwtl
or
das
hlt
int
fadds
ljmp
add
pop
mov
mov
push
dec
push
in
jmp
xor
sbbl
scas
bound
aaa
in
push
sub
inc
je
insl
dec
jnp
imul
add
inc
adc
push
sub
dec
std
sbb
and
outsl
ljmp
lds
inc
mov
sub
in
xor
push
lret
ds
leave
and
sub
sbb
movsb
sub
lds
call
cmp
jne
push
ret
aad
add
mov
lock
adc
das
sarb
push
or
lcall
ret
dec
and
inc
xchg
adc
push
or
aad
xchg
test
inc
cs
ret
lock
mov
jp
ret
cmp
lock
mov
out
sub
xchg
aas
xchg
cmp
shrb
test
lock
jecxz
addl
pop
nop
xchg
rclb
xchg
sti
ret
rcrb
push
mov
and
adc
inc
pushf
test
pop
xchg
aas
test
jp
cmp
rcrb
movsb
inc
xchg
adc
movl
and
mov
jns
add
call
aad
je
jns
mov
pop
lcall
mov
xor
test
lds
or
dec
add
mov
jns
or
push
dec
mov
andb
ss
push
add
inc
xchg
adc
cmc
mov
cmc
in
daa
xor
loopne
add
imul
and
popa
imul
xor
inc
mov
pusha
out
cmp
pop
mov
sti
decl
dec
xor
push
and
push
jo
shrb
xor
notb
inc
aaa
stc
in
shlb
je
jbe
out
xchg
adc
sbb
cmp
shlb
lcall
xchg
rcll
cwtl
mov
mov
add
lcall
je
data16
xchg
loop
mov
sti
shrl
push
or
cld
pushf
aam
push
ja
push
mov
stos
add
sub
mov
int
movsl
push
inc
xchg
adc
pushf
negb
dec
mov
rol
sbb
push
xor
pop
out
out
lock
not
mov
sub
adc
fists
sbb
lret
xchg
adc
outsb
inc
sub
add
cmc
into
insb
jbe
out
dec
xchg
movsb
mov
pop
testb
bound
xchg
pop
fsin
xchg
or
push
dec
pusha
das
repnz
fcmovnb
stos
push
xchg
les
outsl
add
inc
push
push
mov
movl
pushf
call
mov
cltd
movl
add
aaa
jmp
shlb
sub
push
fistpl
rorl
mov
sbb
sub
enter
test
mov
sub
aad
fbstp
adc
jg
movl
jmp
pushf
pusha
pusha
jmp
cmp
or
pop
adc
sub
mov
cmc
scas
out
mov
dec
or
mov
dec
out
mov
ror
jo
dec
test
es
cmc
inc
mov
lods
xchg
negl
lds
xchg
rclb
inc
push
jl
sbb
jmp
pop
add
sbb
jno
leave
dec
xchg
repz
in
repnz
push
movsl
push
movsl
leave
xchg
frstor
inc
xchg
adc
mov
push
adc
pop
cwtl
sub
cmp
inc
and
sub
sbb
inc
pop
pushf
aaa
in
sub
imul
int
addb
cmp
and
test
sbb
dec
xor
lods
xchg
popa
jnp
iret
sti
pushfw
mov
shlb
scas
mov
xchg
imul
jecxz
xorl
cltd
std
pop
sbb
call
cltd
cli
movsl
out
mov
mov
or
dec
cmpsb
addl
imul
cwtl
inc
xchg
adc
jmp
inc
pop
or
subb
fcmovne
in
mov
stos
testb
in
sbb
cmp
ss
sub
arpl
out
in
pop
xor
dec
or
jl
and
sti
fs
mov
or
and
lcall
out
sbb
or
movsl
cmp
mov
popf
mov
xchg
aad
fstpl
sbb
add
xchg
pop
sub
cltd
stos
das
pop
arpl
aad
out
xor
jo
mov
gs
cwtl
inc
sbb
or
nop
int3
test
js
dec
or
inc
xchg
adc
movl
call
dec
jno
mov
push
cmp
push
inc
idivb
xchg
in
pop
inc
or
orb
cmp
enter
inc
pop
fcmovbe
int
jns
fisttpl
sbb
cmpsb
mov
xor
lods
cmpl
ds
out
test
std
mov
sbbb
jp
push
ja
out
leave
cmp
inc
pop
out
xchg
add
adc
inc
xchg
adc
test
lcall
rclb
push
fistps
pop
clc
cli
divb
rclb
add
push
pop
adc
dec
and
mov
cmpsb
or
scas
jnp,pt
arpl
fadd
mov
sbb
adc
sub
sbb
xor
rcrl
fnstsw
sbb
pop
sbb
cwtl
lods
fisttps
imul
pusha
add
cmp
adc
dec
mov
jg
ds
mov
test
jae
in
push
stc
stos
mov
in
cmp
xlat
push
hlt
outsl
aad
movb
mov
stos
inc
xchg
push
dec
nop
jae
xchg
add
mov
jo
mov
push
mov
int
push
fwait
clc
repz
and
mov
add
pop
test
or
shr
mov
std
mov
push
cmp
jno
fsubs
call
movsb
lock
nop
pop
ret
mov
jb
rcr
dec
test
dec
cli
shll
mov
xor
pop
and
pop
or
jns
push
push
dec
imulb
mov
cmp
lahf
call
popf
ljmp
adc
push
lea
push
cs
out
mov
dec
cmp
mov
xchg
sub
imul
jmp
nop
xchg
ljmp
fstps
aam
sbb
sbb
movsl
pusha
adc
push
rorb
ficoms
sbb
inc
sti
leave
mov
lock
xor
mov
inc
xor
inc
mov
inc
mov
jle
dec
or
or
dec
mov
and
int
scas
lock
push
cmp
bound
push
mov
or
and
xor
sbbl
ss
mov
mov
pop
lret
aad
fsubrl
jp
jecxz
xlat
mov
inc
mov
push
xchg
sbb
enter
sbb
push
mov
cmpsl
sbb
clc
mov
mov
pminsw
iret
loopne
icebp
out
mov
shl
cwtl
fnstcw
cld
mov
xchg
pop
pop
pushf
pushf
jmp
mov
rcll
dec
mov
dec
dec
mov
xchg
sub
aad
xor
cmpsl
aad
cmp
jp
es
insb
cmp
shl
mov
sbb
sub
jl
pop
loopne
add
aam
xchg
insl
iret
cmp
add
nop
mov
and
mov
dec
lcall
in
xchg
sbb
stc
loope
cld
mov
push
ret
mov
and
mov
jbe
clc
leave
lods
lcall
and
aad
neg
sbb
sub
adc
lock
imul
cmp
sahf
cmpl
mov
add
loop
push
mov
adc
ffree
push
sarl
out
push
xchg
or
push
push
sbb
jne
xor
mov
inc
lret
push
cmp
out
sbb
push
add
sarb
pop
outsl
arpl
push
mov
add
xlat
and
fistps
in
xorb
gs
ljmp
iret
mov
outsl
fmuls
mov
leave
sbbb
in
and
in
jle
cmp
sbb
xor
outsb
sub
push
pop
stc
mov
int3
sbb
mov
nop
pop
inc
add
icebp
cltd
aam
movsl
faddp
js
mov
les
push
cmpsl
pop
sbb
inc
xchg
or
inc
and
std
and
movb
pushf
push
push
lea
jmp
call
iret
pop
sub
adc
pop
fsubrl
adc
adc
xor
push
outsl
mov
and
jg
in
andl
outsl
imul
fistl
pusha
es
or
push
test
cmp
stos
in
inc
inc
pop
fadds
es
jp
inc
xchg
or
movl
push
pushf
mov
pushf
lea
jmp
jnp
ficoml
popa
loop
jecxz
dec
push
cmpsl
idivl
jnp,pn
gs
repnz
int3
sbb
mov
mov
and
in
fstl
nop
cwtl
cmpsb
or
cmpsb
add
and
pop
lcall
mov
adc
xchg
fsqrt
lods
mov
add
sub
test
push
lea
stos
insl
ror
or
mov
dec
or
jb
or
pop
add
dec
xor
sahf
sbb
pop
pop
mov
inc
xchg
or
shrb
jbe
push
lds
lea
lea
cltd
pushf
pushf
pusha
lea
jmp
sub
mov
pop
cmp
xor
hlt
jb
mov
jmp
shl
jns
hlt
jne
jle
test
sub
pop
jnp
mov
pop
jae
jp
xchg
xor
subps
gs
and
push
xor
enter
adc
popa
pop
sbb
dec
test
pusha
int
add
jl
out
outsl
call
insl
and
cwtl
inc
xchg
or
jmp
cmp
mov
add
mov
xchg
xchg
cld
mov
aad
imull
imul
adcl
out
mov
jbe
ret
int3
pusha
sub
shrb
adc
out
repnz
push
xlat
mov
dec
cmpsb
add
mov
dec
fbld
out
adc
inc
push
inc
lock
cmp
dec
ret
sub
adc
push
clc
stos
mov
and
jmp
push
mov
dec
mov
pop
mov
dec
mov
lds
mov
mov
sbb
push
dec
push
adc
in
scas
ficomps
sahf
sbbb
outsl
mov
int3
jns
mov
xchg
or
sub
adc
das
test
adc
mov
add
cld
and
mov
mov
mov
add
jae
dec
cltd
inc
xchg
or
call
jmp
lock
arpl
fistl
imul
daa
popa
fcoms
push
cmp
and
ret
addr16
movsl
mov
popa
das
or
pop
popw
inc
or
or
dec
int3
xor
std
xor
int
faddl
lock
jne
add
dec
push
or
and
adc
popa
push
mov
mov
repz
and
jp
cmpb
pop
lcall
lret
sub
push
jecxz
iret
sahf
xchg
ret
pop
mov
sub
out
push
je
inc
pushf
mov
sub
xchg
outsl
inc
xchg
or
mov
stos
mov
inc
add
push
pusha
push
movl
call
cmc
or
rcll
push
mov
sub
push
rolb
insb
mov
sbb
cli
mov
fidivl
or
cmp
adcl
sbb
aad
std
sbb
cmc
fmull
movsb
dec
pop
jns
insb
mov
sbb
test
xor
sbb
insl
cs
xlat
nop
push
xlat
mov
popf
in
mov
inc
sbb
insl
aam
insb
inc
xchg
or
pop
or
pusha
movl
jmp
mov
fisttps
out
mov
or
pop
cmp
pcmpgtb
mov
add
std
stos
mov
leave
lahf
punpckhbw
sub
push
dec
fstpt
jmp
rcl
sahf
mov
cmc
jnp
xor
shll
xchg
dec
test
scas
fwait
sahf
cld
jb
adc
mov
mov
mov
sbb
mov
adc
push
or
push
pop
pop
in
xchg
icebp
movsl
ljmp
or
rcrb
hlt
add
push
repnz
cltd
lret
aas
push
scas
fdivs
push
imul
add
push
cmp
in
pushf
fdivl
mov
push
out
push
push
jg
mov
hlt
mov
int
nop
shrl
stos
pop
mov
sbb
push
jno
addr16
mov
and
xlat
nop
inc
inc
xchg
or
add
test
scas
mov
loopne
mov
jp
mov
xor
dec
mov
mov
idivl
fwait
sbb
inc
xchg
mov
pop
inc
xor
lea
leave
sarb
ljmp
icebp
inc
int
mov
pop
xlat
addb
shrl
pop
insb
sbb
add
inc
inc
je
int3
aas
hlt
push
dec
imul
jnp
adc
dec
ficomps
sbb
inc
xchg
or
mov
inc
and
fiaddl
dec
lds
ljmp
or
inc
and
stc
mov
pushl
push
pushf
lea
jmp
adc
dec
ja
cwtl
mov
pop
movsl
cmc
inc
xor
mov
ss
adc
push
adc
push
and
shlb
in
adc
inc
mov
inc
pop
sub
lock
and
mov
cli
test
or
cltd
adc
insb
push
push
or
push
pop
push
pushf
movw
movl
lea
jbe
pusha
movb
pushf
movl
pushf
lea
jmp
insb
nop
stc
stos
icebp
mov
dec
xlat
push
or
adc
gs
add
je
popf
test
stc
or
jp
dec
leave
sbb
xchg
js
das
adc
sti
lahf
shrb
add
pop
movsl
mov
dec
pop
add
les
and
or
inc
xchg
push
shl
push
iret
int
out
daa
mov
inc
dec
repnz
sbb
mov
push
out
mov
fwait
call
stc
mov
imul
loop
pop
jmp
xor
jle
out
fsubrs
cmpsb
push
addl
jb
loope
fnstsw
adc
jbe
stos
in
in
shlb
lcall
dec
and
xchg
mov
push
push
subb
sub
pop
inc
vdivsd
xor
cmp
inc
xchg
add
xchg
cld
jp
mov
lret
xchg
clc
mov
in
sbb
mov
sbb
addl
jbe
cmp
sub
out
add
dec
inc
pop
jae
scas
lea
and
push
pop
mov
mov
mov
adc
push
icebp
fistpl
inc
xchg
push
pop
inc
aad
and
cmp
aad
and
insl
out
lea
dec
cmp
pushf
fisubs
sub
mov
aas
sbb
jae
push
pop
cmp
jae
cmp
loop
lods
mov
inc
cmpsb
fstpt
dec
lock
or
lods
push
dec
dec
inc
xchg
add
shlb
pusha
xchg
fldt
ret
pushf
xchg
sbb
jg
scas
sub
inc
into
push
push
push
push
dec
and
push
jne
and
jmp
or
pop
mov
jp
icebp
xchg
xor
adc
cmp
movb
in
mov
sub
and
jg
mov
and
xchg
inc
mov
dec
cmp
xor
push
movsb
rclb
push
xor
inc
xchg
add
mov
and
add
inc
and
negl
movsl
pusha
cmc
mov
pusha
lea
jmp
mov
jnp
pop
or
mov
ds
loopne
call
enter
mov
rcl
jg
inc
fisubl
js
leave
scas
hlt
mov
adc
sbb
cmp
and
aad
mov
fcomps
jnp
xor
insl
push
push
adc
sub
dec
mov
int
scas
jno
sbb
lods
imul
les
add
jns
inc
jbe
mov
xchg
jecxz
into
and
mov
cmp
sbb
rcll
ljmp
lcall
mov
push
push
jmp
out
adc
mov
cmp
js
notl
push
and
orl
mov
jnp
ret
inc
xchg
add
and
ja
pusha
movl
jmp
fwait
push
popf
jno
xchg
lea
push
add
mov
mov
sbb
pop
jg
pop
or
push
xor
pop
and
insl
clc
xchg
aam
jns
mov
cmp
xor
ret
mov
call
jge
xor
shrl
or
xor
sti
and
xor
fmuls
cmp
mov
mov
in
and
or
mov
enter
test
out
aas
out
inc
xchg
add
and
js
ljmp
fisubrs
cwtl
adc
dec
aam
sahf
ror
cmc
scas
jno
loop
mov
mov
addb
sbb
push
cs
pusha
cmp
xchg
pop
fisttpl
sti
mov
inc
loop
int
nop
lods
xchg
jle
add
cmp
sbb
adc
addb
push
pop
or
xchg
lock
mov
in
loop
scas
or
dec
nop
mov
ja
stos
mov
leave
sub
jg
inc
and
gs
mov
sub
pop
sbb
stos
loope
mov
xabort
mov
add
data16
jmp
in
movsl
jae
xchg
add
push
sbb
add
popf
xlat
mov
add
add
pushf
pushf
lea
jmp
roll
jle
loopne
ficoml
dec
mov
ret
repz
pop
ret
movsb
loopne
add
ds
sub
jg
sub
add
imul
aad
outsb
dec
cmp
fstl
cmp
imul
mov
adc
std
nop
repnz
mov
or
out
mulb
jmp
lcall
dec
or
pushf
inc
xchg
add
push
mov
jno
nop
mov
cmp
adc
inc
adc
lods
mov
push
mov
mov
or
or
cmp
xlat
scas
ficoms
insb
lea
push
movsb
mov
cwtl
add
dec
xchg
and
aad
xchg
ret
jmp
pusha
adc
arpl
push
push
dec
leave
cmp
and
es
sub
xchg
add
adc
push
inc
xchg
add
sbb
xchg
or
jmp
out
dec
enter
cli
mov
pop
inc
pop
pop
leave
cmp
push
xchg
stc
addr16
cmpb
push
jbe
out
andb
lret
imul
hlt
jno
enter
jo
sbb
mov
mov
enter
mov
inc
test
xchg
adc
mov
mov
jg
push
push
sbb
test
fcoml
imul
in
insb
xor
inc
pop
or
inc
mov
jg
mov
sahf
xchg
gs
xor
test
mov
in
fcompl
bnd
js
pop
and
ret
repnz
cmp
ja
sbb
not
pop
inc
mov
lret
je
mov
inc
push
push
sbb
pop
ret
xchg
movb
imul
icebp
jo
mov
push
inc
sti
mov
cmc
mov
inc
mov
insb
xchg
out
mov
mov
pop
nop
adc
mov
mov
mov
sub
dec
jp
jmp
cmp
pusha
outsb
pop
pusha
aaa
test
test
ljmp
dec
or
inc
xchg
sub
sub
js
insb
dec
cmp
xor
imul
daa
lret
shl
lds
ljmp
jnp
dec
cmpsb
inc
nop
jmp
inc
and
or
mov
pusha
mov
movl
pushf
lea
jmp
scas
jns
pop
mov
rorl
sub
push
jne
out
dec
outsb
mov
mov
cmp
xor
lcall
into
fdivs
pop
addr16
movsl
mov
jne
cmc
mov
testl
jge
gs
xchg
jge
lds
fdivrs
jge
or
cs
repnz
adc
mov
ret
fmull
scas
sub
add
inc
nop
movsb
and
jmp
sub
xchg
imul
std
stos
leave
jg
mov
or
push
fsubl
inc
and
jae
or
mov
dec
and
stos
ss
data16
iret
sbb
mov
mov
pop
inc
sub
cwtl
in
lock
sub
pop
jmp
nop
jae
mov
out
jbe
mov
push
jns
jl
adc
or
push
insl
aaa
push
add
cmpsb
ja
mov
stos
pop
jae
out
inc
out
xchg
fwait
cmp
xchg
pop
pushl
mov
push
lds
in
add
pusha
aaa
imul
fwait
inc
nop
fsubr
loopne
push
cmpsl
jbe
xcrypt-cbc
cmpsl
adc
test
lcall
xor
mov
adc
lods
mov
ljmp
xor
xor
xchg
sbb
sbb
loope
orl
cmp
in
daa
enter
inc
and
jl
xlat
dec
or
mov
aad
aad
std
lcall
dec
sbb
cmpl
push
jo
xchg
sub
jne
dec
mov
and
xchg
mov
push
movl
jmp
jb
xor
push
jbe
nop
xor
cmp
add
popa
cmp
inc
hlt
jl
out
lret
dec
inc
dec
sarl
and
inc
out
jbe
mov
les
push
pusha
mov
adc
jae
jne
mov
adcb
and
movsl
sub
scas
pop
cld
lods
ljmp
pop
xchg
jns
insl
cmp
int3
mov
cltd
hlt
dec
sub
mov
sarb
ljmp
push
js
call
nop
leave
xchg
mov
les
stos
mov
jnp
pusha
xor
push
xor
sub
mov
mov
mov
in
adc
xchg
ret
jl
pop
and
cltd
adc
dec
dec
inc
nop
cld
mov
dec
fidivl
outsb
jmp
loop
gs
sub
stos
adc
insb
sbb
int3
outsb
xchg
imul
fcompl
or
out
jb
ja
cmp
in
shll
xchg
imull
lods
jb
adc
cld
outsl
popf
test
movl
push
pushl
lea
jmp
jb
fistl
mov
push
sbb
movsb
cmp
rorl
and
icebp
adc
and
dec
jb
negb
addr16
mov
and
and
push
sub
add
pop
dec
lahf
jmp
mov
outsl
xchg
aam
adc
pop
mov
nop
sti
mov
and
inc
and
sub
dec
lds
roll
xor
add
movl
rol
rorb
pop
sbb
stos
and
inc
loopne
mov
jl
imul
or
fcmovb
pop
and
adc
adc
mov
mov
cmp
mov
sbb
repz
pop
sub
fwait
repnz
and
dec
stos
pop
xor
aam
dec
lods
sarl
cwtl
sub
adc
subb
xchg
mov
lcall
and
push
push
xchg
and
mov
jnp
test
cltd
or
jns
mov
arpl
mov
mov
jmp
xor
mov
cmp
icebp
mov
dec
sbb
ja
test
inc
nop
cli
iret
iret
add
jl
cld
sbb
xorl
jecxz
sbb
add
adc
or
ja
inc
fwait
cmc
arpl
sbb
fstpl
adc
add
shlb
xchg
or
pop
cmp
and
lret
js
xchg
xor
jbe
pushf
idivb
adc
jne
inc
sahf
push
mov
repnz
cmp
lea
out
pusha
xor
nop
cli
pushf
scas
mov
arpl
mov
sbb
rcrb
jecxz
cs
fnstcw
push
push
dec
cmpsb
push
mov
and
mov
cmp
or
cmpsb
mov
sahf
loope
aad
sub
stos
adc
xchg
jp
xor
and
stc
sub
mov
adc
cmc
outsb
sub
lods
sti
addr16
fs
mov
push
ret
xchg
cwtl
cld
dec
insl
sub
push
hlt
sarb
push
sbb
insl
adc
cmpsl
fistpll
imul
in
inc
call
xor
testb
mov
mov
add
pop
push
mov
fidivrl
lods
mov
xchg
mov
sub
adc
int
jl
jbe
add
add
std
mov
leave
orb
mov
mov
add
jno
nop
stc
int
bound
mov
inc
daa
push
into
mov
pop
gs
xchg
stc
shrl
mov
xchg
insl
pop
jnp
xchg
aad
jg
nop
cli
add
mov
mov
fisttps
push
xor
stos
out
bound
mov
lods
push
imul
dec
xor
and
daa
int
icebp
inc
mov
push
stc
aaa
pushf
mov
pop
push
jb
dec
push
push
add
mov
nop
stc
mov
out
pusha
movb
pushf
movl
push
call
jbe
sub
xchg
push
dec
sbb
imul
insb
cmp
iret
xlat
xchg
loope
cltd
cli
push
stos
movsb
mov
xchg
nop
mov
push
test
push
test
xor
mov
lahf
and
mov
jmp
sbb
outsb
dec
mov
imul
dec
push
mov
jge
xchg
inc
lahf
xor
jge
ficoml
inc
pop
sbb
xlat
test
mov
cmp
popa
add
sbb
nop
clc
jnp
test
mov
imul
in
enter
sti
jno
js
push
loopne
adc
lret
dec
ffreep
test
pop
mov
inc
dec
stos
js
and
movsb
add
mov
jbe
dec
mov
or
cmp
jp
jle
inc
nop
clc
ret
call
mov
stos
or
jle
out
mov
jmp
mov
loope
mov
cmp
mov
push
call
or
cwtl
mov
mov
jge
cmp
pop
sbb
inc
pop
or
add
lods
mov
xor
jae
enter
jne
pop
sbb
cmp
adc
idivl
movl
pushl
pushf
movl
lea
jmp
and
mov
mov
inc
rcrb
outsb
jecxz
hlt
shll
sub
jg
cmc
mov
push
jno
stos
or
jle
cli
xlat
inc
rorb
cli
jb
cmp
fnstsw
xlat
pop
adc
stc
or
outsb
or
jns
ja
jle
sbb
push
xchg
xor
ret
cmp
inc
sub
inc
nop
clc
push
pop
cld
shr
insb
fisttpll
sub
psrlw
xor
adc
jg
dec
fistpl
lea
decb
loop
es
mov
jle
pop
insl
mov
and
sbbl
ret
mov
jne
clc
sahf
leave
xchg
ja
icebp
fwait
pop
push
pop
aas
arpl
mov
inc
adc
bound
cld
inc
nop
idivb
bound
cmp
leave
sbb
arpl
and
scas
imul
mov
mov
xchg
jns
iret
imul
inc
adc
mov
inc
add
pop
andl
mov
out
push
int
lahf
imulb
mov
nop
jg
popa
xor
inc
cmp
pop
adc
mov
mov
and
movsl
mov
test
test
xchg
lods
std
xchg
sub
inc
nop
idivb
out
dec
cwtl
lret
push
out
lcall
out
cmp
xor
xchg
add
or
adc
sub
cmp
outsb
pop
scas
rorb
mov
adc
sub
mov
xchg
xchg
mov
iret
shrl
stc
push
push
adc
mov
jecxz
into
mov
sahf
mov
daa
mov
fistpl
push
lds
lods
cmpsl
mov
cld
mov
fsub
inc
nop
negb
pop
push
test
insb
push
jae
popa
das
movsl
and
xor
mov
fwait
pop
jmp
stc
pop
adc
mov
lods
adc
xor
aam
jp
pop
aad
mov
iret
mov
xor
dec
mov
inc
jmp
shrb
jnp
inc
and
xor
lret
loopne
sti
mov
dec
pop
mov
mov
push
inc
nop
mulb
lods
popa
dec
pop
mov
and
ljmp
and
lock
into
mov
int3
pushf
pop
adc
and
cld
clc
inc
jns
popa
mov
or
hlt
push
inc
adc
sbb
jo
aaa
ficompl
inc
testb
nop
xor
in
aas
lahf
jge
dec
fst
xchg
inc
es
sub
fsubrs
bound
mov
push
outsb
jle
lock
popf
popf
pop
sub
and
test
mov
fidivl
fimuls
xor
and
nop
hlt
test
cmp
xor
dec
cli
mov
mov
int3
lahf
ret
add
jae
in
jl
repnz
or
int3
push
cmp
push
push
push
sbbb
lods
stos
mov
andb
adc
xor
cmp
nop
rolb
clc
pushf
xor
pop
jle
rcrl
add
xor
mov
sbb
cmc
pop
add
push
add
inc
and
push
icebp
push
lds
movb
pushf
movl
push
lea
jmp
push
pushf
lock
xchg
clc
inc
mov
push
fdivrl
adc
xor
xchg
push
dec
test
leave
pop
add
pop
pop
sub
fisttps
inc
arpl
sahf
xor
stos
dec
pop
in
push
in
cmp
mov
shrd
mov
sbb
fxch
sbb
inc
data16
mov
pop
or
adc
mov
int
sbb
push
movsl
popf
ss
and
shll
scas
push
push
cld
fnstcw
xor
xchg
in
mov
mov
stos
sbb
inc
inc
nop
hlt
or
push
movsb
pop
les
andl
in
mov
xor
ljmp
cmp
push
lea
aas
sarb
adc
cmp
pop
adc
clc
xor
stos
add
mov
das
ja
mov
xchg
or
fdivrp
sbb
sbb
mov
mov
mov
mov
xor
das
fwait
mov
mov
dec
std
inc
gs
inc
pop
je
pop
or
stos
mov
push
mov
adc
adc
pop
imul
pushf
adc
imul
mov
ja
mov
gs
mov
pushf
xor
outsb
jno
lds
xchg
imull
cmp
in
push
mov
mov
mov
xchg
lds
adc
and
fsubrs
dec
xchg
aas
and
cmp
mov
jle
repz
and
or
cmpsb
adc
or
out
lret
push
daa
jnp
jb
test
int3
xlat
add
mov
xchg
pop
adcl
mov
iret
sbb
scas
cmp
cmp
test
insb
lea
xchg
xlat
negl
pushf
xor
or
in
jp
mov
mov
aam
ret
inc
nop
icebp
mov
rorl
push
out
or
pop
xor
nop
inc
dec
mov
pop
in
sub
pop
mov
das
cmpsl
mov
lock
fmull
mov
repz
sub
jb
adc
ja
scas
ret
mov
pop
sub
adc
loop
cs
xchg
add
mov
mov
adc
sub
inc
nop
icebp
insl
lods
pushw
jmp
movl
pushf
pushf
movl
movb
pusha
mov
movl
lea
jmp
aam
jbe
je
mov
fbld
dec
add
scas
fdivrl
lcall
aas
cmpsl
mov
insb
daa
add
nop
push
aam
cli
sub
xchg
lret
or
mov
scas
sub
push
dec
push
ss
je
push
push
inc
push
jne
add
mov
mov
mov
nop
lock
cmp
and
aam
add
repz
dec
aad
cld
xchg
lret
mov
sub
jp
mov
inc
les
bound
mov
cltd
imul
cmp
pop
push
mov
mov
fidivl
aad
outsb
push
pop
and
dec
push
dec
call
insb
inc
nop
icebp
adc
negb
jmp
shrl
push
and
xchg
in
mov
lea
dec
inc
test
mov
pop
out
out
mov
mov
ds
jns
stc
popf
add
fimuls
mov
lds
cmc
jns
xchg
mov
fs
mov
xor
out
fiadds
repnz
xor
pop
inc
les
cmp
push
mov
in
cmpl
insl
in
pusha
push
lahf
pop
dec
lods
mov
sub
mov
jmp
mov
dec
xchg
andl
inc
imul
cmp
loop
or
ljmp
scas
xchg
cmc
icebp
popf
je
mov
inc
fnstenv
dec
in
outsb
adc
std
rcr
ret
clc
iret
or
pop
sbb
adc
lret
pop
dec
popa
sub
mov
gs
jge
nop
add
stos
int
repnz
sub
aas
nop
mov
addr16
inc
shlb
cmp
repz
mov
inc
nop
out
movsl
cmpsl
mov
mov
inc
popf
mov
xchg
mov
scas
lds
jo
data16
mov
cmc
aad
pop
pop
jbe
or
sbb
stc
pop
imul
test
testl
pop
in
ret
test
arpl
sbb
iret
adc
adc
mov
mov
lock
shll
pop
cmpsb
inc
nop
out
fucomi
loop
push
add
inc
lods
rclb
pop
js
int3
mov
cmp
xchg
mov
fdiv
push
fs
mov
scas
or
xchg
push
inc
je
xor
pop
fdivl
xor
stos
into
push
repnz
dec
frstor
js
scas
out
push
cmp
scas
push
testl
outsb
jnp
ret
mov
loop
int3
inc
xchg
inc
nop
out
rcrl
jmp
aam
pop
fldenv
or
dec
lret
scas
push
divl
repz
jp
lock
cmp
mov
xchg
stos
dec
cmc
push
mov
inc
mov
sub
dec
sbb
lods
add
xchg
xchg
mov
xor
dec
add
or
inc
nop
out
insb
lock
in
es
or
cmp
repz
gs
mov
xchg
aam
dec
adc
clc
rcll
pusha
push
stc
rol
inc
shrl
pop
adc
sub
pop
dec
test
jecxz
in
cmpsb
mov
adc
mov
and
pop
ja
xor
leave
xchg
in
in
sub
out
or
adc
add
or
insb
dec
and
movl
movl
pushf
lea
jmp
std
outsb
adc
lret
cmp
ljmp
in
lret
mov
scas
cmp
loopne
push
iret
rclb
popf
out
pop
fimull
lock
mov
xchg
rclb
popf
xor
sub
xlat
int3
mov
push
and
test
pusha
sbb
pop
xor
inc
nop
in
sahf
lods
cmpsl
fwait
xlat
cmpsb
ja
xor
mov
jo
imul
testb
and
mov
shll
int3
pop
lret
hlt
gs
mov
nop
pop
daa
je
shll
push
jle
adc
mov
imul
adc
lock
push
out
das
inc
mov
xor
mov
daa
mov
xchg
popa
push
xlat
loop
inc
mov
test
les
xor
cmpsb
rorl
fwait
sarb
jae,pt
insl
xlat
mov
sub
push
je
sub
jle
sub
or
jecxz
inc
call
fsubl
push
loopne
aad
add
cmpsb
mov
mov
adc
stc
add
xchg
aam
daa
movsb
frstor
iret
sbb
in
pop
push
jmp
shlb
xor
popa
or
movsl
leave
mov
test
pushf
xchg
jge
dec
dec
mov
in
hlt
xchg
sbb
pop
loop
inc
cmp
jge
in
scas
jno
sbb
xlat
and
cmp
mov
dec
pcmpeqb
xchg
cmp
in
inc
sub
inc
je
inc
stc
jb
jge
bound
push
rolb
push
fucompp
pop
cmpl
sbb
xor
jge
jbe
arpl
mov
inc
nop
in
pop
inc
setae
shr
fiaddl
mov
mov
mov
xchg
sub
add
jmp
mov
das
inc
add
sbb
cmpsb
cli
testl
rol
sub
jg
push
cltd
inc
nop
jmp
xchg
insb
jb
negl
inc
push
repnz
sti
mov
xor
jno
push
lds
mov
outsl
mov
or
enter
sub
mov
inc
pop
movsl
mov
add
icebp
xchg
xlat
mov
rclb
out
mov
mov
popf
lods
xor
movsb
mov
in
push
cld
xchg
dec
or
stos
sub
mov
mov
pushf
mov
mov
mov
push
insl
push
mov
call
out
pop
xlat
adc
lahf
fadds
movsl
fistpl
dec
pop
inc
sub
pusha
inc
jbe
push
lahf
lods
push
fdivr
push
lcall
mov
test
inc
nop
ljmp
xchg
jnp
gs
sbb
inc
add
or
and
or
dec
dec
es
mov
rcr
or
and
cs
in
inc
int
push
cmp
popa
in
push
mov
test
dec
lods
daa
jp
pop
or
push
fidivrs
add
out
push
das
sub
jle
and
push
mov
jmp
push
inc
mov
or
sub
pushf
jmp
dec
imul
or
mov
xchg
jl
je
mov
mov
insb
mov
pop
int
push
movsl
into
es
dec
notl
cwtl
dec
clc
sub
out
out
ret
fiaddl
sbb
lea
add
pop
adc
mov
lahf
and
mov
inc
inc
nop
ljmp
inc
stos
mov
std
imul
int3
mov
dec
std
jno
or
pushf
pop
jge
leave
push
dec
jb
jge
js
jnp
fwait
es
out
leave
cmp
and
mov
pop
shll
ss
mov
lcall
fadds
insl
add
fisubrl
sahf
mov
inc
nop
jmp
xchg
es
dec
lds
add
mov
mov
sub
leave
scas
enter
stos
fcmovb
mov
shrl
mov
in
pop
dec
insl
adc
ds
pop
mov
jbe
mov
push
repnz
mov
mov
adc
mov
repz
mov
pop
xchg
ret
cmpsb
jecxz
mov
jb
outsl
jl
imul
sbb
pop
dec
fbld
pushf
ror
shl
pop
imul
mov
push
xor
push
in
xchg
push
inc
nop
call
sbb
adc
mov
in
add
add
xchg
push
loop
pop
mov
xchg
mov
mov
add
cld
cmpsb
adc
mov
bound
and
stc
in
add
ja
int3
dec
lds
xchg
ja
je
push
xchg
pop
scas
xor
jg
fucomp
dec
mov
sub
out
dec
mov
add
pusha
js
lahf
and
stos
xlat
dec
jbe
pop
int3
dec
lcall
rcl
push
outsl
dec
cmpsb
int
xchg
repz
or
cmpsl
aas
mov
or
push
bswap
shrb
into
loopne
inc
imul
lods
adc
sub
pop
nop
out
pop
xor
cmc
mov
test
scas
stc
scas
or
iret
cld
or
ret
fs
stos
push
cmp
out
adcb
lock
pop
out
xchg
cltd
add
ret
sbb
jne
lret
pop
push
xchg
xlat
ss
aad
jl
dec
mov
js
addr16
jge
fnstsw
jae
out
dec
aad
sbb
adc
sbb
push
aaa
mov
hlt
xchg
int3
mov
test
sbb
movsl
mov
mov
lods
jmp
stos
out
mov
pop
je
nop
call
xchg
jmp
int
daa
jge
mov
jg
sub
mov
dec
fxch
lahf
outsl
jne
stc
push
xor
sti
loope
push
pop
into
dec
roll
orl
jmp
nop
cmp
arpl
lret
or
add
push
xor
daa
loopne
mov
add
sbb
je
adc
fistps
mov
ss
rcrb
dec
stos
cli
mov
fstl
mov
cmpsl
dec
inc
nop
call
mov
sbbb
adc
lahf
int
fidivl
mov
jbe
dec
adc
sbb
add
mov
xor
adc
je
lcall
imul
nop
call
shlb
dec
or
addr16
push
adc
mov
int
mov
aaa
js
xlat
imull
in
test
test
movsb
fstps
inc
nop
out
pop
dec
inc
lods
iret
push
mov
inc
dec
xchg
int3
jle
xchg
shll
icebp
xchg
mov
gs
call
or
lds
pop
icebp
mov
call
aaa
xor
xor
add
roll
imul
out
int
dec
and
jb
jnp
repz
aam
test
jbe
scas
inc
inc
nop
out
xor
pusha
jmp
psubusw
adc
jmp
sbb
cmp
jno
sub
and
pop
mov
das
pop
lods
cmp
push
pop
adc
out
xchg
xchg
adc
adc
pop
cmp
in
xor
inc
pop
cmp
add
sbb
pop
inc
lods
loop
jo
cmp
inc
adc
fcmovu
mov
jmp
jnp
and
xchg
push
cmp
lods
inc
out
stos
cs
repz
sub
jbe
push
popa
or
adc
jnp
mov
and
jb
ret
mov
sbb
dec
pop
lock
nop
in
xchg
test
loop
xor
inc
insl
jle
lret
jmp
hlt
test
mov
mov
mov
clc
pop
add
adc
mov
je
push
add
sbb
rorl
cltd
fisttps
insb
and
pop
adc
lds
fidivl
or
pop
lahf
lock
imul
cmp
cmpsl
mov
mov
int3
mov
test
mov
nop
in
adc
sbb
cmp
sbb
js
mov
mov
xor
push
fbstp
sahf
push
pop
cmp
mov
lods
sbb
nop
fdivs
cmp
roll
mov
repz
adc
push
inc
xchg
rcrl
pop
xchg
ds
gs
adc
add
stos
insb
add
adc
cmpsb
inc
nop
in
movsl
mov
xchg
cmpsl
jbe
jae
test
lahf
and
stos
ror
scas
fdivrp
std
or
xor
pop
dec
mov
call
xchg
daa
int
js
popf
pop
dec
pop
mov
shlb
imul
push
xchg
push
push
lcall
cwtl
repz
or
adc
add
push
ficoms
or
xchg
add
mov
daa
arpl
lahf
push
into
cmp
mov
rcr
pop
test
jecxz
push
jnp
lds
fisubrl
mov
jle
sarb
inc
cmp
test
mov
lea
push
aas
cmp
adc
cli
insl
addl
mov
or
in
jnp
movl
pusha
lea
jmp
shrl
mov
cmpsl
fistpll
in
mov
mov
mov
inc
mov
pushf
lret
add
mov
jno
xlat
and
dec
repz
test
lcall
adc
repnz
pop
cmp
inc
std
adc
cwtl
mov
xchg
jo
ljmp
adc
mov
mov
nop
jecxz
loopne
jne
inc
test
ret
mov
pusha
sbb
fstl
mov
mov
xchg
mov
fmul
fisttpl
stos
push
or
iret
jle
cmp
inc
push
and
sti
mov
sti
mov
pop
or
dec
pop
xor
add
outsl
ror
and
xchg
mov
cmpsl
lret
inc
sbb
mov
popf
mov
push
mov
hlt
xchg
pop
adc
ss
xchg
cmpsl
dec
lods
inc
hlt
mov
idivl
jmp
adcl
mov
sub
pop
dec
jb
orb
dec
sub
in
sub
mov
imul
push
push
jns
jbe
xchg
mov
mov
add
loope
cmp
dec
inc
stos
lock
pop
inc
cs
pushf
sbb
test
xchg
int3
lret
sbb
lret
lods
pop
push
or
lret
std
mov
and
scas
cltd
pop
repz
clc
xchg
xchg
push
mov
jne
sub
cmp
mov
aas
sahf
jno
xchg
in
jae
mov
mov
inc
arpl
cld
adc
data16
imul
daa
push
mov
jae
sarb
jo
or
add
xor
lds
xchg
iret
andb
push
scas
sbb
mov
mov
es
push
ret
scas
inc
jmp
js
pop
sub
inc
sub
sub
and
jno
inc
mov
out
and
pop
cmp
movsl
dec
fnstcw
fsubl
orl
and
mov
and
mov
pusha
cmp
add
mov
sbbb
adc
or
mov
adc
xchg
jecxz
out
adc
jbe
rclb
pop
xor
mov
xchg
dec
jae
enter
adc
mov
shl
mov
ficoml
shll
or
cmp
jo
loope
or
jo
in
sbb
aas
push
mov
std
add
aad
out
not
scas
mov
es
lea
xlat
mov
sbb
lock
or
push
in
mov
mov
cmpsb
or
test
dec
adc
outsb
cs
add
dec
cld
or
cmp
push
jae
or
fisubs
lret
in
pop
decl
inc
mov
loope
pop
bound
mov
add
xor
adc
js
movsl
mov
cld
xorb
jg
lods
jp
fcompl
xchg
inc
stos
xchg
push
aam
insl
ret
testb
pop
mov
cwtl
mov
pop
pop
popf
pop
adc
jecxz
pusha
add
repnz
jne
lcall
call
ds
jae
push
cmp
call
dec
insb
cmp
adc
iret
jge
sbb
ret
fs
mov
mov
push
clc
pop
sbb
cmp
cwtl
dec
stos
inc
imul
push
xchg
lods
push
dec
hlt
cmpsl
ds
popa
inc
cmpb
out
fsubrl
mov
jmp
adc
pop
icebp
les
not
jp
nop
xchg
cltd
rcrb
and
cmp
cmp
insl
es
add
push
sbb
pusha
cmp
adc
sbb
add
repz
add
iret
fwait
repnz
mov
fmuls
mov
fsincos
add
ja
mov
int
inc
nop
loopne
arpl
pop
xor
cmp
jnp
js
cmp
sbb
insb
mull
mov
pop
sub
jl
sbb
inc
lods
mov
jg
mov
out
les
arpl
add
xlat
stos
push
mov
ret
in
in
imul
mov
bound
push
sbb
pop
fbld
nop
fdivp
push
adc
jb
mov
scas
fstpl
ljmp
jae
icebp
shlb
movsl
lahf
je
sahf
mov
jne
jge
rclb
xchg
push
push
add
cld
sub
adc
shl
and
decb
xor
adc
adc
push
mov
test
cs
push
aam
enter
push
ret
lahf
cs
mov
dec
insl
repz
idiv
mov
jmp
shl
jne
mov
rep
sbb
inc
nop
fimuls
pop
int3
lret
je
inc
jb
fs
aas
mov
xchg
and
xor
xchg
jg
mov
mov
mov
jmp
pop
std
xchg
add
sub
add
jae
push
and
push
mov
pop
iret
or
and
mov
or
je
int3
ljmp
stos
mov
leave
dec
push
iret
jmp
testb
mov
fisttpll
xor
add
out
and
iret
mov
sub
ret
add
je
xlat
xchg
cwtl
cmp
push
xchg
mov
mov
pusha
cmp
cltd
stc
mov
xchg
push
repnz
jb
inc
jmp
sarb
push
jle
push
js
push
out
adc
fidivs
push
dec
mov
sbb
js
daa
xchg
xchg
imull
pop
or
dec
pop
insl
xor
or
and
cmp
inc
imul
sarl
fildll
sbb
jg
sub
pop
movsb
int
sub
dec
xor
and
loope
nop
fisubs
aad
lret
cltd
adc
mov
adc
out
adc
mov
jmp
lock
xchg
ja
hlt
rorb
mov
jmp
loopne
pop
add
sbb
lock
loop
sub
jo
pop
and
loopne
aad
add
das
fs
movsl
imul
jp
dec
sbb
mov
subb
fdiv
adc
fldenv
inc
enter
jp
jne
jae
cmpsl
or
pushf
outsb
hlt
loop
fistpl
pushf
add
nop
rorb
jno
test
mov
clc
mov
cmc
sbb
es
mov
sub
xchg
int
inc
sbb
ret
sub
jb
cld
aam
or
pushf
cmp
xchg
insb
jo
cmp
inc
sbb
insb
jmp
or
jae
jbe
pop
mov
js
iret
test
pop
mov
cld
mov
add
cmp
int
andl
imul
test
sub
stos
out
and
ljmp
pop
push
cmpsl
inc
mov
aas
inc
cmp
inc
pop
mov
mov
mov
movsb
out
out
and
lock
xor
push
jg
test
mov
sub
xor
lahf
test
test
aad
lret
iret
and
jl
xor
fdivr
inc
test
or
xchg
ja
push
inc
xor
mov
fninit
int3
jnp
lds
add
cmp
pop
dec
loope
cmpsb
xchg
cwtl
xchg
leave
ja
incl
dec
cwtl
push
jns
cmp
jge
cmp
xor
mov
out
orb
roll
hlt
dec
cmp
jl
pop
mov
fcmovne
jmp
ljmp
mov
jl
push
add
enter
sti
cltd
movl
mov
mov
ret
add
jne
jae
mov
or
xor
imul
nop
inc
pusha
ret
call
cmp
test
dec
pop
fldcw
jmp
xchg
lret
and
lea
addr16
cli
mov
imul
setns
iret
int3
outsb
sub
lcall
cli
mov
jns
sbb
dec
xor
adcb
iret
sbb
cmpsl
lret
popa
mov
lods
cld
cmpsb
sbb
sbb
loop
and
sub
add
pop
push
or
push
cmp
pop
inc
sub
mov
gs
inc
movsb
notb
push
sub
int3
inc
nop
fidivl
mov
xchg
inc
loop
fsubl
pop
pushf
bound
dec
add
clc
popa
ss
test
jge
add
cmpsb
and
data16
out
add
dec
add
pop
mov
or
fmul
jmp
pop
jmp
pusha
fbld
rol
jge
sub
jns
hlt
fistpl
test
mov
push
push
pop
xor
icebp
fs
scas
mov
pop
push
and
outsl
cmp
cwtl
add
daa
jns
addr16
shlb
inc
nop
fisubrl
adc
insl
mov
mov
daa
push
xor
fcomps
sbb
xchg
mov
xchg
aas
daa
movsb
and
jnp
or
mov
pop
push
push
xor
imul
movsl
icebp
cmp
imul
xchg
sbbb
into
fxch
sub
push
movsl
ljmp
xor
adc
imul
mov
and
incb
cmpsl
fildl
insb
fdivrp
push
ja
popf
stc
cld
cmp
push
mull
inc
sbb
ds
pop
or
cs
push
fistps
rcrb
pop
add
scas
sbb
push
mov
fs
inc
jo
fisubrl
mov
sbb
push
je
cmpsl
sbb
cmpsl
out
and
xlat
bound
xor
jecxz
sahf
and
sbb
and
add
mov
mov
ret
stos
inc
mov
xor
and
aaa
and
sbb
imul
push
push
popa
pop
and
push
push
inc
xor
sub
dec
stc
scas
mov
fldt
loop
lahf
js
add
lea
mov
fimull
out
push
sbb
xchg
repz
mov
popf
iret
mov
negb
std
data16
xor
jge
fldenv
cmp
loop
and
add
clc
mov
nop
push
mov
jmp
mov
mov
data16
sub
loop
pushf
mov
mov
sarl
fadds
mov
sahf
push
dec
mov
pop
fucomip
hlt
jb
not
insb
or
stos
gs
dec
sbb
insb
xorb
arpl
aad
imul
jns
out
scas
ds
jl
push
dec
fldenv
sub
xchg
xchg
ret
scas
lock
pop
inc
nop
xlat
loop
pop
test
and
das
or
stos
and
dec
adc
sub
pop
jl
jns
dec
inc
popa
js
mov
cmpsl
dec
sub
mov
aam
xchg
add
mov
mov
mov
xchg
jmp
lret
mov
cmp
in
pop
adc
xchg
outsl
mov
les
xchg
insb
inc
nop
fcoms
sbb
jae
inc
or
in
mov
pop
mov
add
lahf
out
lret
inc
adcb
add
jp
imul
into
insl
aaa
jns
loopne
xchg
shll
loope
add
and
stos
mov
fistpll
sbb
push
cmp
ss
push
addl
sub
mov
imul
mov
and
in
data16
sub
and
mov
mov
aam
push
inc
and
inc
sbb
pop
jecxz
adc
cmp
mov
push
push
jl
je
cmpsb
xchg
bound
rclb
arpl
cmp
lock
les
pop
xchg
xchg
sbb
cwtl
jnp
dec
out
or
inc
or
insl
ss
or
xor
adc
imul
cli
mov
ss
movlhps
mov
mov
cmp
xlat
dec
jp
loopne
push
inc
ss
jmp
mov
push
inc
mov
pop
add
movsb
icebp
cmpsb
out
aaa
pop
adc
dec
dec
inc
nop
mov
shr
mov
jns
fwait
int3
xchg
xlat
dec
lret
mov
pop
mov
jno
xchg
and
inc
sbb
and
and
cmp
or
pop
or
pop
xor
rorb
cmc
pop
sub
adc
fwait
mov
jae
insl
lret
test
ror
push
add
dec
cltd
add
ljmp
test
cmp
pop
add
cs
fdivr
sbb
xor
sub
ljmp
push
dec
xlat
cltd
mov
mov
add
xchg
xlat
ret
sub
dec
dec
pop
inc
add
pop
inc
ljmp
pop
dec
xlat
lcall
mov
stos
out
pop
adc
or
push
jecxz
or
adc
je
jbe
adc
outsl
bound
addr16
into
cltd
gs
xchg
inc
adc
nop
aad
ffreep
lea
push
add
mov
cmc
data16
mov
mov
push
enter
leave
or
pushf
call
jb
lret
in
jp
loope
subl
or
mov
pushf
and
sub
inc
nop
aam
lea
jge
in
lods
mov
std
dec
xchg
xchg
cltd
add
mov
mov
mov
ficomps
ljmp
scas
stc
fisubl
testb
imul
idiv
loopne
add
push
add
data16
pop
pop
das
pop
pushf
lret
cmpl
sub
mov
scas
jb
mov
cli
lret
adc
sbb
mov
mov
popf
lock
dec
push
ret
fiadds
fdivs
jl
pop
in
stc
pop
dec
push
stos
xlat
sbb
or
dec
addps
jae
jne
dec
icebp
sahf
leave
daa
inc
nop
aad
jae
pop
xor
and
js
enter
push
adcl
mov
lods
pop
push
loopne
xor
lds
les
adc
or
in
mov
sbb
push
imul
popf
jb
das
sahf
lds
je
stos
ret
pop
inc
nop
aam
jl
into
sbb
lods
hlt
inc
push
pop
jne,pt
test
mov
push
sub
test
mov
adc
adc
jp
mov
ljmp
push
pop
subl
mov
scas
jecxz
push
jnp
pop
aam
mov
insl
dec
xchg
cwtl
cmpsl
dec
lods
inc
inc
loope
cmp
cmp
jle
sub
add
push
mov
mov
pop
sub
loop
int
dec
mov
test
jl
inc
sub
inc
nop
shl
lcall
or
mov
out
xchg
enter
out
lcall
pusha
jbe
xchg
nop
push
pop
jmp
jg
add
out
push
lret
rcll
sbb
mov
insl
call
mov
pop
pop
xchg
sub
inc
cmp
cld
cmp
inc
popa
adc
push
cmp
aam
mov
cmp
enterw
jns
xchg
xchg
cmp
insl
and
jb
add
inc
push
ja
xor
iret
add
jns
xchg
repz
mov
rcrl
jne,pt
fsubrs
incb
xor
mov
dec
call
imul
lcall
mov
js
sub
mov
in
mov
ret
std
push
mov
push
loopne
mov
pop
sub
mov
icebp
mov
aaa
jo
test
jb
jmp
or
jecxz
das
pusha
dec
imul
fld
cmpsl
and
mov
mov
roll
mov
cmpsl
notb
sub
addl
jae
mov
nop
call
inc
nop
rorl
cmp
adc
mov
push
out
cli
mov
lods
stc
pop
jmp
addr16
popa
sub
scas
punpcklbw
ficompl
ds
adc
je
mov
xchg
cld
inc
loopne
mov
xchg
pop
jno
repnz
popa
add
or
lock
mov
int
inc
nop
shlb
push
inc
shll
jmp
mov
lahf
mov
dec
cs
xlat
cmc
push
jne
push
xchg
pop
add
shlb
xchg
repnz
lfs
add
sub
pop
jae
jne
cwtl
dec
insb
jmp
adc
push
sbb
ret
je
shlb
mov
and
cmp
repz
adc
push
pusha
movsb
pop
dec
in
lea
movsl
enter
int
sub
outsb
inc
lcall
insb
cmovnp
xor
fldenv
sbb
xor
lahf
inc
nop
shrb
out
push
xchg
fdivl
insb
clc
pop
jg
popa
dec
cmp
adc
sbbb
ds
pop
int3
lret
sbb
daa
sahf
jmp
in
add
mov
pushf
cmp
inc
hlt
and
test
outsb
inc
cmpsl
imul
pop
out
mov
jmp
push
xor
into
ss
nop
rorl
inc
push
pop
adc
pop
and
cmp
pop
in
sahf
loope
or
pop
inc
and
lds
mov
ss
repz
pop
xor
add
and
test
stos
cmc
pushf
lds
and
sub
xchg
scas
outsl
bnd
fcmovbe
inc
lock
mov
inc
cmp
imul
mov
mov
and
pop
add
add
mov
aam
movb
pop
jp
insb
idiv
add
and
adc
cmp
pop
std
dec
and
jno
push
push
cmp
stos
mov
sbb
out
sarl
adc
jl
ret
inc
nop
iret
test
jb
mov
sub
pop
cmp
xchg
in
outsb
ss
mov
jbe
shl
inc
pop
push
enter
addr16
sub
lea
out
or
push
mov
or
pop
inc
xor
mov
xor
ljmp
lahf
pop
or
movsb
fnstcw
pop
roll
jle
fwait
push
lock
std
std
mov
xchg
imul
pusha
jne
aas
add
ret
and
setns
push
pop
imul
lret
nop
addr16
popf
jge
cltd
in
push
cli
aam
push
ret
loop
sub
test
orl
arpl
xchg
push
lods
add
popf
fs
cmc
xchg
pop
insl
xor
loopne
jmp
adc
inc
clc
sub
push
dec
pop
inc
icebp
movsb
ljmp
icebp
sub
adc
adc
push
xchg
cmp
xchg
js
inc
divps
add
push
test
push
arpl
rcll
mov
rolb
rorb
or
les
lds
xor
lds
jmp
mov
loopne
aam
jmp
int
inc
nop
iret
and
dec
push
movl
call
cwtl
push
xor
cs
or
dec
incl
aaa
push
aas
jne
push
jbe
cli
sahf
scas
in
clc
pop
bound
dec
repnz
jo
divl
inc
pop
mov
inc
push
xchg
jl
jge
mov
test
jmp
xor
mov
popa
mov
adc
test
add
inc
nop
into
int3
incl
xor
pusha
jecxz
out
je
pop
out
xlat
mov
lahf
or
pop
sub
subb
sub
mov
push
mov
add
mov
cmp
xor
ficompl
dec
je
sub
outsb
mov
stos
jge
and
mov
negl
outsl
jge
dec
jmp
testb
push
fdivs
adc
mov
mov
mov
into
nop
ret
flds
ds
mov
jnp
cmp
and
jmp
outsb
inc
nop
into
adc
test
mov
jmp
xlat
sub
in
inc
loope
cwtl
or
xlat
loope
in
jmp
out
clc
inc
lds
and
lods
repz
cwtl
aas
ret
xor
cs
fdivs
mov
push
add
adc
jg
mov
xchg
mov
fs
pop
jmp
mov
mov
arpl
testb
xor
push
or
jnp
add
cmp
jge
mov
adcl
jl
push
in
jnp
mov
and
lcall
or
out
sbb
and
fbstp
xor
inc
and
pusha
jns
ret
pop
stos
movsb
mov
xchg
mov
in
and
inc
nop
int3
fadds
movsl
push
xor
inc
push
test
mov
stos
and
adc
imul
inc
scas
mov
or
mov
mov
ljmp
push
xchg
outsl
sub
xor
jae
and
inc
fstpt
dec
inc
pop
into
hlt
sti
insl
daa
jmp
xchg
dec
das
xchg
push
jecxz
nop
int3
mov
jg
es
cmp
fisttpll
out
pop
jp
or
and
orl
xchg
sub
mov
cltd
cwtl
inc
cmp
jp
daa
mov
stos
insl
mov
lea
jmp
orb
push
dec
dec
test
xchg
out
dec
cmp
inc
pop
roll
adc
jmp
inc
nop
lret
lret
stc
aaa
imul
std
sub
test
and
cmp
mov
push
in
xchg
adc
cmpb
dec
mov
push
test
inc
fs
cmpsl
imul
outsb
aam
outsb
push
inc
and
ds
mov
mov
push
dec
adc
xchg
out
test
daa
push
imul
sbb
inc
nop
lret
nop
mov
fs
fidivs
add
idiv
jno
pop
inc
icebp
js
push
sub
mov
xchg
and
out
inc
and
ret
cmp
std
jp
and
push
shrd
pop
mov
lods
dec
pusha
fstpt
ret
cmp
inc
adc
shlb
pushf
and
jg
sbb
push
push
mov
mov
lds
js
stos
les
bound
lret
pop
sub
and
movl
movw
pusha
jmp
call
movl
push
jmp
mov
movl
pusha
movb
jmp
out
add
pushf
das
pop
cmp
mov
pop
cmp
mov
add
and
repnz
inc
imul
mov
push
add
cmc
movl
sahf
lret
je
and
sub
sub
ja
sub
loope
push
les
into
adc
inc
nop
lret
add
popf
call
pusha
pushl
pusha
movl
mov
jmp
fdivp
mov
cmc
xchg
fistpl
popa
fwait
mov
std
sub
test
mov
push
lea
in
mov
jmp
push
mov
into
mov
adc
enter
int
push
int
outsb
adc
ret
inc
stos
cmp
shll
fildl
shlb
ret
shrb
clc
sti
rcll
orb
push
and
pusha
or
pop
xor
adc
and
stos
out
mov
in
mov
fcmovb
mov
sub
mov
fnsave
push
add
cmpsb
es
add
inc
nop
leave
push
outsb
movl
push
mov
lea
jmp
leave
and
in
sub
dec
mov
negb
out
adc
jmp
cmp
loopne
pop
jg
fldenv
mov
arpl
test
inc
inc
jb
lock
mov
fists
ffreep
xchg
mov
inc
sti
test
add
cld
pop
stos
sbb
xchg
mov
bts
rclb
ret
in
cli
insb
sub
pop
arpl
mov
xor
xchg
fwait
xchg
mov
cmpsl
add
xor
ror
or
lcall
mov
in
repnz
jb
rcr
mov
cltd
sub
xor
xor
test
std
nop
add
arpl
sub
pop
outsb
daa
xor
mov
int3
mov
imul
mov
xchg
ret
mov
push
fwait
jns
mov
loope
mov
xorb
pop
lea
and
ljmp
enter
adc
inc
nop
enter
mov
sub
dec
xor
outsl
adc
jmp
rclb
cltd
shl
cs
jmp
mov
loopne
cs
imull
push
aad
insl
cmc
inc
jecxz
enter
cmp
lcall
sub
leave
fnsave
xchg
jg
andl
xor
mov
mov
sbb
hlt
lcall
add
ja
add
fs
inc
nop
cmpsb
lret
movsl
bnd
hlt
cs
in
mov
inc
ds
loopne
maxps
loope
sbb
inc
pop
xor
push
call
call
sub
rolb
pop
cmc
xor
sbb
pop
sbb
xchg
fists
push
push
gs
enter
add
jo
and
sahf
lods
pushf
popa
dec
sbb
loop
aas
cmp
mov
dec
cmp
push
pushf
mov
dec
jg
stos
or
or
adc
call
pop
push
mov
fs
or
outsb
rcrb
push
xor
imul
lahf
adc
push
imul
je
inc
inc
inc
nop
mov
inc
cmp
ljmp
add
sub
sub
push
dec
jmp
repnz
stos
mov
aaa
insb
jo
xchg
add
decb
push
sub
cltd
lret
xlat
xchg
fisttpll
cmp
les
jp
rcr
call
lret
out
xchg
xor
mov
dec
sub
xchg
icebp
mov
inc
pop
sbb
ss
mov
pop
movsl
inc
arpl
or
enter
pop
jns
stos
cmp
push
cmp
mov
repz
and
fsubp
lret
add
jo
lret
dec
leave
pushf
jecxz
mov
dec
sbb
out
pop
icebp
dec
or
xchg
ffree
inc
xor
daa
cmp
test
pop
cmp
call
push
or
aas
xor
xchg
test
xor
jle
push
fbld
inc
nop
pop
add
pushf
movl
push
mov
movb
movl
pushf
lea
jmp
call
outsl
cmp
mov
xor
ljmp
xchg
int3
scas
out
or
push
test
adc
jbe
adc
push
test
xor
fsubrs
push
mov
mov
aaa
and
movsl
ljmp
adc
les
cmp
icebp
scas
sti
test
je
or
es
fiaddl
jbe
fadd
and
ss
sub
inc
nop
movb
push
xchg
mov
dec
mov
or
pop
sbb
push
add
inc
unpcklps
xchg
mov
fmull
xchg
sahf
loope
cmp
scas
sbb
fs
std
fsubrl
leave
mov
and
pushl
mov
mov
sar
or
and
lods
hlt
fdivl
pop
insb
cmp
xlat
push
or
mov
push
mov
mov
adc
movl
ds
inc
subl
xor
inc
jecxz
aam
mov
adc
sub
or
xchg
and
repnz
and
mov
xchg
mov
dec
ja
nop
lret
rorb
les
mov
mov
or
mov
lret
adc
xchg
aam
xchg
mov
cltd
lods
lahf
sbb
jg
les
fstps
push
mov
xchg
sub
push
mov
mov
aam
sub
and
lock
jns
inc
incl
cwtl
test
test
lods
dec
push
push
dec
inc
push
ja
gs
dec
pop
pop
popl
shl
enter
movl
pusha
movl
pusha
lea
jmp
icebp
mov
out
or
movsl
aad
sub
inc
push
mov
sbb
inc
pop
push
inc
mov
fs
or
sbb
sub
mov
outsl
enter
out
cmp
out
xchg
cmp
out
mov
ss
or
adc
inc
push
adc
lret
adc
movd
sub
mov
inc
and
ss
ds
sti
test
mov
pop
fnstsw
add
mov
insb
xchg
push
bound
ret
dec
insb
mov
shll
lods
roll
nop
ret
mov
push
sahf
dec
inc
push
mov
pop
push
rorl
pop
cli
jge
mov
leave
jbe
sub
dec
ss
gs
pop
rcr
lret
mov
pop
fcmovnb
inc
sbb
lea
stos
pop
ljmp
cwtl
xchg
mov
int
cmp
out
lods
sub
or
les
daa
push
push
andl
mov
push
daa
mov
nop
ret
or
add
mov
mov
les
mov
cmp
insb
enter
shll
out
aam
fisttps
aad
lcall
insb
and
hlt
cmp
add
testl
sbb
pushf
jae
cmpsl
mov
stos
jg
imul
roll
ret
push
movl
jnp
push
push
push
movl
pushf
lea
jmp
sub
jp
adc
and
orb
adc
jle
mov
fldenv
sti
imulb
imul
fisttpl
ret
jo
pop
fdivl
xor
adc
das
sbb
jle
push
dec
test
pop
dec
ljmp
in
cltd
inc
js
aaa
ficoms
call
das
mov
adc
mov
int
and
pop
call
popa
sti
push
imul
jmp
in
insb
xor
sbb
nop
ret
or
pop
pop
fistl
and
sbb
xor
scas
and
lahf
adc
sti
ss
dec
icebp
shll
std
mov
cld
out
add
cmp
enter
push
leave
lret
andl
dec
jle
mov
nop
and
dec
ds
ret
sub
shll
mov
iret
and
fidivs
std
cwtl
mov
pop
les
inc
sti
lcall
lret
adc
pop
mov
dec
les
es
pop
push
ljmp
or
sbb
jae
scas
maxps
xchg
icebp
inc
aaa
rcrb
mov
mov
xchg
push
hlt
inc
fs
rcr
int3
out
xchg
mov
daa
in
inc
pop
jo
addr16
mov
lcall
aaa
cmpsb
sbb
cli
xchg
sub
mov
shlb
pop
adc
aaa
jmp
cmpsb
sub
icebp
test
ds
cs
mov
pop
or
aad
xor
push
mov
adc
mov
cld
test
fisttps
in
mov
and
add
cltd
add
mov
js
jl
mov
rcll
movl
pushf
lea
jmp
jecxz
arpl
stos
hlt
mov
popf
in
mov
dec
push
or
sbb
mov
pop
cli
push
hlt
dec
mov
insl
xor
push
cmp
cmp
and
mov
xor
sti
fdivl
jl
sub
std
xchg
enter
nop
inc
nop
shr
decb
mov
out
test
xchg
mov
dec
pop
movl
sbb
or
or
inc
subl
mov
sbb
aaa
fisubrl
xlat
ret
push
xorb
je
sahf
dec
add
sub
inc
xlat
cmpsb
xor
jb
loop
nop
shlb
stos
pop
sub
sub
jae
mov
filds
sub
pop
jp
sub
add
inc
mov
cmp
cwtl
mov
fisubrl
xchg
jnp
xor
pop
gs
and
cmp
stos
aam
fdivrs
ror
push
cmpsb
ja
je
fs
loop
aas
ja
je
pop
nop
fistps
dec
or
nop
mov
jnp
sahf
addr16
data16
sub
pop
cmp
movb
shl
lods
call
ja
leave
xlat
xchg
xor
hlt
jl
test
sarl
sti
lret
and
bound
int3
and
mov
jo
sbb
std
mov
pushf
ret
jge
xchg
cmpb
jp
jns
data16
repnz
pop
cs
mov
outsb
in
mov
mov
and
sbb
sub
rcrl
jmp
jmp
movsb
and
push
or
call
sub
jge
or
shrb
shll
push
data16
jle
fwait
dec
mov
adc
data16
jbe
rorl
sub
jle
xchg
imul
push
dec
inc
push
xchg
testl
inc
nop
mov
js
test
mov
cltd
loop
in
cli
jae
inc
in
sub
pop
imul
popa
repnz
sub
mov
inc
jnp
dec
push
push
lods
sbb
stos
add
jno
and
int3
mov
jnp
push
mov
jge
ja
mov
mov
jp
mov
das
pop
or
pop
scas
cmp
pusha
jnp
mov
push
mov
cmp
cmp
push
xor
test
imul
add
jmp
adc
mov
dec
lds
cmpsl
pop
push
jo
mov
or
divb
rep
mov
aas
out
ret
push
loopne
vmread
push
clts
xchg
dec
pushf
add
inc
ja
push
test
xlat
adc
fst
divb
push
inc
test
add
ds
cmp
std
loope
in
lods
stc
mov
mov
add
arpl
mov
pop
das
xchg
mov
cmc
inc
pop
pop
xorb
xor
xor
cld
arpl
hlt
xchg
adc
bound
xor
cmpsb
neg
imul
xchg
stos
and
sbb
mov
jge
rcrb
and
jg
ret
pop
ja
ret
pop
arpl
push
in
adc
inc
or
jne
lock
mov
jo
lea
dec
lcall
test
fwait
xlat
xchg
dec
lds
pop
outsb
mov
in
aas
sbb
out
jecxz
add
lock
ja
cmp
adc
loope
dec
mov
imul
loopne
rclb
fwait
jne
inc
inc
ret
sbb
sub
cs
test
inc
xlat
pop
lret
into
daa
pop
stc
je
jnp
or
mov
push
rorb
cmp
push
loopne
pop
jae
in
gs
cmp
loopne
dec
and
mov
jle
mov
fbld
push
aas
mov
sbb
mov
or
js
movsl
mov
dec
mov
loope
int3
hlt
cmpb
sahf
pop
mulb
and
out
test
pop
fimuls
stc
mov
cmp
imul
call
mov
xor
insb
into
mov
or
pop
sbb
adc
fwait
pop
addr16
dec
mov
add
mov
or
xchg
loopne
push
mov
pop
aam
xchg
add
jbe
jne
jns
push
movsb
pop
xchg
pop
outsb
pop
push
jno
fstps
push
pop
cmpsb
cmc
and
add
outsl
xchg
fiaddl
mov
push
push
mov
leave
sub
outsb
cmp
adc
add
xchg
clc
in
cmpl
dec
popf
aas
int3
mov
test
cmpsb
loopne
out
cmp
push
out
popf
mov
out
or
mov
mov
loopne
out
lret
mov
sbb
nop
mov
iret
xchg
aaa
xor
divl
pop
fstpl
dec
adc
dec
xor
mov
shl
sbb
mov
loop
jnp
sbb
addr16
sub
add
sub
xor
mov
std
and
mov
shrb
hlt
gs
jecxz
xor
inc
sbb
addr16
xchg
loopne
js
nop
mov
int3
dec
lock
push
push
insl
insl
xchg
enter
sub
sbb
sub
pop
loopne
xchg
jecxz
xor
jo
jnp
xlat
dec
rcll
lea
fcomp
shlb
jnp
push
out
xor
push
adc
gs
rcrl
or
sub
cmp
fwait
xchg
dec
sub
test
mov
shlb
das
sarb
lods
fimull
push
jl
mov
inc
add
mov
mov
cmp
xchg
shll
adc
sub
out
adc
dec
pushf
push
lcall
and
sub
fsin
jnp
push
fldenv
push
jecxz
jmp
mov
insb
lods
inc
nop
mov
movl
jmp
pop
jo
and
push
or
shll
rolb
out
into
or
pusha
sahf
cmp
loope
mov
ss
mov
inc
ss
rcll
jg
gs
cmc
aad
mov
and
mov
dec
test
mov
into
cmovb
pushf
pushf
mov
movl
movb
pusha
movl
mov
lea
jmp
je
aad
pop
scas
les
lods
lods
xchg
shlb
andb
popa
and
test
idivl
jmp
inc
ljmp
leave
xor
push
daa
pop
or
pop
cltd
arpl
in
test
das
pop
fnstenv
xor
pop
inc
xor
dec
imull
nop
mov
ret
push
adc
or
lods
call
xchg
repnz
mov
dec
fxch
ret
fcompl
add
and
mov
fldenv
jne
xchg
rol
xor
lret
xchg
sbb
push
movl
sbb
lea
test
add
pop
or
or
pop
dec
xor
mov
cmpsl
push
push
jbe
sbb
fdivl
aam
int3
repz
adc
inc
negl
add
add
jp
dec
mov
and
std
incl
mov
pop
xchg
ja
popa
cmp
mov
fisubl
add
imul
sti
jae
cmpsl
adc
xchg
inc
inc
nop
mov
mov
movl
and
movsl
dec
lds
cs
call
push
mov
movl
pusha
pushl
call
out
mov
addr16
cwtl
mov
and
jle,pn
mov
je
sbb
out
sbb
js
ret
sbb
mov
fs
bnd
and
iret
mov
mov
mov
adc
add
insl
aas
cld
inc
cs
mov
xor
es
clc
pop
adcb
push
out
stos
insb
cmpl
push
pop
xchg
inc
int3
and
mov
inc
out
mov
aas
jmp
sbb
jae
fists
js
mov
lods
inc
nop
mov
mulb
mov
pop
popf
jg
lock
sub
cmp
cltd
sbb
test
sub
and
pop
xchg
mov
or
xlat
mov
jne
mov
cwtl
lret
mov
leave
xchg
popa
add
lock
mov
jmp
sbb
fistps
movsb
fimull
gs
nop
mov
in
xor
stos
in
cld
fwait
mov
aad
add
mov
jg
cltd
adc
loope
jno
sub
in
and
pop
lock
jnp
loope
xor
mov
lret
les
arpl
loopne
out
ss
adc
pop
jae
push
ret
xchg
jnp
mov
daa
inc
and
add
mov
and
addr16
inc
xchg
imull
test
mov
mov
and
xchg
add
mov
xor
cwtl
pop
ljmp
pop
js
xor
xchg
dec
and
dec
mov
and
addl
rcll
sub
ljmp
pop
test
test
fs
leave
int3
sub
mov
lods
in
sahf
sarb
nop
mov
fcomp
mov
jns
dec
std
push
loope
das
jb
push
push
mov
outsl
out
mov
mov
rclb
out
push
dec
push
jo
pop
imul
fisttps
inc
push
test
in
outsb
mov
xchg
fsubs
in
enter
mov
lods
xchg
fistl
mov
std
movsl
out
in
test
nop
mov
in
daa
fdivrl
xlat
cs
inc
dec
lcall
in
imulb
mov
repz
sarb
leave
mov
dec
jns
out
mov
loope
dec
icebp
xchg
leave
mov
or
and
push
pop
mov
jl
loope
pop
and
jmp
mov
loope
aad
jnp
pop
add
inc
pop
pop
je
addb
add
dec
adc
mov
fnstenv
and
xchg
aad
cmpsb
mov
mov
sbb
nop
pop
mov
cmp
inc
test
xchg
rcll
mov
xlat
mov
push
xchg
add
clc
xlat
mov
aad
mov
in
pop
add
inc
nop
mov
stc
notl
add
sar
aas
cld
cmpsb
cli
mov
ljmp
dec
test
mov
add
int
jns
ror
jge
adc
es
or
lcall
push
or
or
or
cltd
leave
out
mov
cmp
bound
pop
inc
sbb
sub
mov
fmul
daa
lret
pop
in
mov
pop
loop
inc
nop
mov
push
dec
cmpb
mov
xchg
les
mov
jae
rcl
jge
mov
ss
popl
jecxz
lret
push
cmp
cs
inc
nop
mov
mov
jmp
lcall
cld
jae
mov
arpl
mov
jecxz
divps
push
cmp
jns
gs
sub
es
mov
sahf
std
inc
nop
inc
nop
mov
repz
push
pushf
std
jl
mov
fisubs
cltd
shlb
xor
mov
js
push
pop
jle
shll
pop
mov
in
je
cmpsl
add
pop
iret
rcrb
xchg
jle
fildll
out
cmpsl
and
icebp
jns
push
pusha
fpatan
dec
and
inc
inc
add
arpl
cmpsl
je
insl
ljmp
push
or
imul
jge
sti
shll
lahf
punpckhdq
sarb
sub
inc
sbb
pop
sbb
sbb
mov
outsb
mov
movsb
stos
ljmp
mov
rorl
mov
ds
pushf
cmpsl
sti
adc
sub
outsl
pop
mov
ss
jbe
ja
lahf
fs
mov
lods
jmp
inc
or
iret
sbbb
pop
and
pop
pop
xchg
dec
mov
in
fwait
xchg
sti
inc
xchg
inc
nop
mov
lock
call
sub
gs
and
pop
mov
pop
in
jmp
xor
bound
lea
mov
scas
and
xor
aam
popf
mov
push
push
jbe
ret
mov
mov
xchg
add
into
mov
and
fdivrs
imull
lcall
pop
sahf
aam
pushf
cli
insb
jne
mov
pop
imul
fimull
jo
xchg
xor
mov
dec
pop
and
xor
pop
or
repnz
rcrb
in
in
cld
inc
sub
mov
aad
pusha
push
sbb
dec
andb
sbb
and
adc
nop
mov
xor
adc
lret
flds
call
mov
and
stos
add
or
scas
mov
xchg
jecxz
pop
mov
pop
dec
sub
dec
cmc
nop
mov
or
ss
test
mov
loopne
xor
mov
outsl
add
xchg
rcrb
sbb
xor
inc
dec
arpl
push
jecxz
rcrb
push
inc
and
jp
ss
int
jns
mov
les
mov
cmpb
adc
repnz
addl
jecxz
in
add
push
sub
mov
in
adc
adc
stc
aas
stos
out
enter
mov
daa
popf
push
insl
dec
out
cmpsl
push
or
or
in
loope
xchg
mov
push
in
popf
std
xchg
mull
mov
mov
in
icebp
mov
cmp
mov
mov
test
inc
scas
pop
mov
xchg
mov
mov
rolb
lods
ja
outsb
xor
stc
xchg
lret
mov
mov
clc
or
inc
dec
les
mov
mov
fsubrp
sbb
out
mov
cmpsb
in
aad
nop
mov
xor
cld
sub
xchg
mov
push
and
rorl
and
adc
sbb
int3
mov
les
jno
mov
mull
cwtl
scas
sbb
jge
adc
mov
jb
cmp
lods
js
xchg
xchg
mov
cs
daa
fiadds
out
push
add
cmc
adc
inc
inc
cmpb
jecxz
roll
scas
mov
out
enter
inc
push
add
je
add
push
and
nop
ret
scas
jno
mov
and
sti
xor
hlt
addr16
leave
pushf
fdivr
sbb
pop
sbb
adc
orl
repnz
jbe
imul
inc
mov
adc
lds
xor
std
mov
mov
jnp
cmp
sbb
dec
push
adc
clc
out
jg
sbb
mov
fcoml
addr16
aaa
push
xor
push
nop
scas
lahf
ret
or
repnz
xchg
xor
je
add
ret
xchg
aam
lea
dec
or
ficomps
divb
into
inc
nop
mov
push
pop
and
aad
ret
incb
out
dec
and
dec
ds
in
ds
bound
mov
lcall
sbb
cli
cltd
jmp
sbb
push
and
sbb
call
cmpsb
mov
add
jmp
pushf
movl
pushf
lea
jmp
call
add
insb
int
rcrl
test
sbb
bound
xchg
sbb
rcrl
pop
inc
cld
pop
js
lea
aaa
test
mov
mov
aad
push
mov
cmc
xor
xchg
inc
mov
inc
testb
in
adc
add
cmc
and
xor
pop
aad
lds
push
and
sub
test
movsb
stos
cltd
xor
rolb
sahf
enter
out
pop
adc
cmpsl
mov
mov
mov
les
xchg
jecxz
enter
rcl
sti
dec
pop
pusha
jge
imul
ret
add
scas
inc
inc
inc
xor
xchg
mov
jle
push
inc
or
je
jecxz
aad
lods
rcl
sti
xchg
cmpsb
inc
push
mov
repz
rcrl
aas
stc
push
int3
fs
push
scas
xrelease
and
fisttps
push
and
repnz
mov
cmpsb
sub
jae
dec
xor
test
pop
aam
inc
nop
scas
push
jne
int3
and
mulb
cmp
jno
cmpsl
jmp
stc
lods
sub
icebp
out
xchg
add
lret
pop
add
dec
xchg
push
add
lcall
jns
pop
jo
sub
adc
rclb
les
into
xor
push
xor
pop
lea
and
xchg
stos
inc
sbb
or
icebp
mov
fwait
adc
sarb
loope
in
pop
add
mov
sub
repz
and
sbb
sbb
dec
and
mov
add
sub
cmovp
outsb
les
es
or
push
and
std
mov
add
scas
dec
mov
fcmove
push
mov
mov
xchg
cltd
popl
scas
data16
sbb
push
and
fnstsw
out
imul
sbb
xchg
sub
dec
add
cmpsb
cmpsl
pop
stos
jmp
and
xor
cmp
jmp
pop
inc
mov
mov
lcall
shrb
inc
nop
scas
jne,pn
sbb
xchg
push
rcrb
jbe
pop
into
lods
mov
ljmp
ret
imul
sti
cli
loopne
fs
mov
mov
jne
dec
aam
push
mov
aaa
sbb
pop
out
das
negl
in
mov
xchg
mov
sarb
push
or
sti
imul
pop
mov
mov
mov
or
xlat
lahf
dec
sub
stc
lods
fmulp
sbb
cmpsl
testl
out
leave
push
inc
inc
lcall
enter
movsb
iret
mov
aad
negb
call
pop
adcb
cmp
daa
lods
fdivl
mov
sub
push
sbb
xor
out
pop
xorb
mov
outsb
inc
add
xor
mov
inc
and
push
push
add
outsl
sub
testl
repz
mov
and
jmp
xchg
sarb
and
divb
data16
lea
mov
xor
push
iret
mov
mov
and
and
push
inc
push
jno
or
adc
pop
jge
push
movsl
pop
or
jg
inc
or
inc
nop
stos
mov
and
xchg
adc
push
pusha
push
lea
jmp
sar
or
adc
sbb
inc
sub
inc
cmp
movsb
bnd
inc
mov
adc
xchg
dec
sub
das
loope
push
jne
lods
imul
xor
fs
stos
cld
loop
ja
cmpsb
jae
and
xchg
fisttpll
adc
mov
mov
nop
ljmp
insl
scas
inc
push
icebp
outsb
and
stos
test
xchg
mov
cmpsl
xor
sub
xchg
jne
mov
xor
dec
lods
jmp
test
imul
pop
xchg
and
push
and
nop
addr16
jg
inc
or
jecxz
sbb
fbstp
addr16
insb
sub
push
add
cmp
mov
nop
stos
leave
sarb
sub
ljmp
ret
pop
sub
movb
daa
xchg
sbb
sbb
enter
cltd
insb
dec
sub
and
push
addr16
jnp
fs
addb
adc
xchg
femms
loop
aam
sub
mov
in
push
xchg
out
or
push
out
outsb
je
xor
or
cmp
jnp,pt
sub
cs
mov
lods
and
mov
addr16
sub
scas
jge
nop
stos
ds
lea
ja
push
push
push
pushl
pusha
lea
jmp
push
movl
mov
movl
pusha
lea
jmp
sub
mov
and
sarb
aam
sbb
pop
fs
push
mov
jne
idiv
cmp
addb
dec
or
in
and
xor
jl
lods
fistps
sub
sahf
nop
pop
dec
jmp
xor
inc
out
cmp
fmul
ljmp
adc
lock
and
mov
cltd
sbb
inc
nop
test
cmp
push
sbb
testl
and
and
push
hlt
gs
cmp
pop
jp
popf
jmp
shll
adc
mov
cmp
repz
push
ret
sarl
fsts
inc
stos
mov
and
std
adc
xchg
jae
fcoml
push
adc
fists
xorb
dec
sub
out
add
cld
mov
adc
xor
pop
in
push
mov
testl
and
pop
daa
ret
sub
cmp
movsl
movsw
xchg
fistps
push
inc
push
xor
cld
imul
and
sbb
jle
stos
leave
mov
mov
inc
pop
dec
sub
inc
nop
test
mov
jnp
loop
pop
push
or
mov
xchg
roll
dec
clc
fnstsw
add
inc
enter
push
pop
xor
sti
movsb
stc
cmp
xchg
insb
push
dec
xor
lahf
rolb
ja
das
push
push
pop
add
pop
inc
arpl
xchg
mov
test
mov
ja
pop
jecxz
inc
nop
test
lock
std
std
mov
fs
mov
ret
jp
enter
pop
in
es
cltd
adc
pop
xchg
ss
ret
aas
or
jge
sub
shrl
iret
aam
push
iret
add
out
aad
adc
test
sbb
cwtl
add
mov
inc
xchg
scas
sub
push
push
stos
adc
pop
aaa
popa
pop
mov
fcom
repnz
cld
sbb
dec
mov
int3
push
repz
test
adc
inc
push
pushf
cmp
sub
out
in
mov
mov
insb
pushf
push
into
andl
xchg
push
xor
push
nop
xchg
jp
lea
scas
lods
cli
mov
stos
mov
fcoms
pop
push
mov
cs
xor
repz
sub
adc
push
jmp
ja
nop
cmpsl
clc
mov
shl
rol
and
sbb
mov
cltd
sbb
xor
mov
pushf
rcrl
outsl
sbb
xchg
and
cmp
adc
les
xchg
iret
lds
inc
testb
loopne
lods
cmp
test
or
fists
jbe
add
and
inc
sub
mov
repnz
pop
xchg
dec
movsb
and
sar
fstl
cmpsb
and
jmp
mov
pop
jno
int3
push
int3
inc
and
ss
psrlq
mov
into
imul
nop
push
fs
sahf
arpl
insl
lods
push
fistpll
jnp
xchg
int
arpl
idivl
rcrb
pushf
repz
and
je
roll
pop
nop
fcomip
ds
insl
jecxz
fadds
das
addr16
mov
fstps
inc
mov
sbb
sbb
sahf
jmp
sub
sbb
enter
into
les
in
adc
sbb
inc
jbe
in
test
dec
push
popa
or
pusha
fldcw
inc
nop
cmpsl
sub
enter
and
inc
and
insl
stos
dec
lds
inc
and
rcl
in
push
pusha
pushf
pushl
lea
jmp
leave
orps
shl
xchg
xor
sbbb
into
mov
das
notb
aam
es
jp
fisubrl
out
dec
jae
movsl
cmp
pop
aas
jp
in
adc
jmp
sbb
loop
outsl
jns
dec
mov
dec
imul
outsl
out
std
mov
mov
cmc
mov
mov
lock
adc
jns
jecxz
enter
fidivl
xor
nop
movsl
in
ss
stc
xor
stos
jp
cmp
jnp
fsubrl
in
cld
mov
fsubl
dec
or
sbb
mov
push
add
lods
push
daa
or
adc
adc
and
movsb
dec
test
or
cmc
jne
jmp
mov
ret
jle
das
xchg
out
mov
jp
cmpb
push
pop
adc
sub
xor
pop
xor
sbb
mov
sub
push
xor
adc
mov
jnp
pop
fwait
adc
dec
repz
jno
jge
xchg
and
std
sbb
sub
stc
cmpb
sbb
inc
ja
adc
mov
mov
pop
push
xlat
stos
add
mov
dec
jno
cmp
sar
jae
aaa
lcall
fiaddl
jns
stos
iret
jg
push
jb
push
xorl
mov
dec
jbe
cmc
inc
xchg
mov
je
jne
mov
pop
fsubrp
int
movsl
pop
fwait
scas
jecxz
or
ficoms
shrb
sbb
data16
insb
adc
pop
lcall
xchg
hlt
in
or
js
mov
sub
scas
add
xor
hlt
ret
mov
fs
leave
mov
std
cmpl
push
pop
pop
fld
lea
aam
sbb
jae
inc
nop
movsb
fucomip
out
aas
xchg
shr
mov
sbb
sahf
add
inc
pusha
std
cmpl
push
pop
and
push
ja
ret
in
and
jnp
inc
ds
aaa
lods
xor
inc
add
xchg
sbb
scas
xchg
push
nop
sahf
dec
sub
pop
out
fadd
arpl
add
aaa
mov
pop
sub
mov
inc
fbstp
les
nop
mov
pop
sub
mov
mov
push
or
xor
add
pop
fistpll
sbb
xchg
xchg
mov
add
xor
sub
outsl
and
call
call
addr16
mov
sti
mov
jecxz
jns
dec
in
xor
sbb
push
int3
into
xchg
cmp
mov
ja
dec
nop
sub
out
rcl
push
arpl
cmp
sbb
push
fwait
ljmp
cmp
or
mov
cmpsl
sbb
xchg
stc
mov
cltd
xchg
fisubrl
in
loopne
push
dec
pop
gs
add
ficomps
xor
mov
inc
nop
mov
lds
mov
pop
push
xor
xchg
insb
jno
std
xchg
push
pop
jle
int3
shl
cmp
insb
popf
std
loopne
inc
mov
mov
jb
adc
mov
push
cmpl
pop
imul
and
out
mov
lods
pop
in
sbb
mov
push
bnd
dec
sub
inc
addr16
mov
push
add
into
stos
pop
cmp
jne
mov
std
xchg
loop
nop
mov
std
mov
inc
adc
mov
xchg
dec
cmp
adc
adc
addr16
mov
shl
adc
out
iret
xor
push
xlat
or
mov
sbb
sub
out
jmp
jp
imul
jae
sub
int
dec
mov
xchg
push
xor
cmp
xorb
mov
push
jg
cmp
xchg
ficoms
sahf
push
pusha
cmovo
les
lcall
and
dec
push
mov
pushf
pop
xchg
jno
loop
sub
arpl
cld
pusha
pushf
mov
movl
pushf
push
lea
jo
pushf
movl
push
mov
mov
lea
jmp
pushf
pushl
movl
pushf
movl
push
pusha
movb
push
lea
jmp
in
or
xor
xchg
mov
adc
xlat
xchg
int
je
shrb
xchg
hlt
out
lock
pop
push
out
not
push
mov
imul
scas
adc
inc
pop
sub
sbb
pop
inc
scas
and
in
aad
cwtl
adc
dec
xor
inc
nop
mov
movl
pushf
jmp
jg
sarb
mov
pop
pushf
test
or
push
pusha
loop
test
mov
fstps
int3
push
xchg
or
adc
aas
push
adc
push
test
repnz
stos
out
add
push
mov
cmp
out
mov
sub
or
add
test
cmp
inc
nop
mov
insl
jp
aad
insl
insl
mov
negl
mov
cmp
mov
and
xor
les
mov
dec
sbb
pop
cmp
add
sub
fdivl
jecxz
out
into
dec
fadd
and
xor
sbb
leave
xchg
push
or
sti
mov
leave
inc
mov
testb
mov
shrl
js
popf
pop
iret
sub
lret
push
cli
dec
and
outsl
test
mov
sbb
mov
inc
xor
pop
aaa
cmp
mov
lds
inc
nop
lahf
jne
push
and
sub
out
pop
inc
in
out
mov
bound
in
out
rolb
mov
out
lret
mov
jg
cmp
std
icebp
adc
ret
xor
stos
movsl
dec
mov
push
dec
fsubrl
enter
mov
mov
lcall
ret
xchg
daa
push
or
or
pop
sbb
lods
mov
pop
xchg
gs
enter
cli
or
iret
gs
out
out
jmp
imul
xor
std
adc
roll
mov
ds
fsub
mov
iret
test
imul
movsl
pop
movsb
in
mov
mov
cwtl
data16
dec
sbb
pop
jp
sbb
jbe
movsl
lcall
inc
std
dec
xchg
loope
or
arpl
je
or
cmp
aas
add
out
sub
push
das
jno
pusha
xlat
push
int3
pop
sbb
bound
push
pop
jl
movsl
in
out
xchg
inc
shrl
mov
adc
mov
jne
arpl
mov
ljmp
icebp
mov
ret
or
and
aad
xor
fsts
push
jge
ret
mov
int3
xchg
jns
mov
adc
adc
das
ss
mov
out
fcoml
pop
xor
push
in
mov
mov
nop
sahf
in
lock
sbb
ss
sti
push
ret
dec
add
rol
and
mov
scas
repnz
jl
dec
adc
jae
pop
xor
inc
nop
sahf
adc
and
addl
adc
mov
shrb
popl
sbb
sub
scas
jmp
loop
xchg
sbb
nop
jecxz
xor
fmulp
jmp
jle
fs
inc
stos
inc
nop
popf
stos
lock
call
movl
pushf
jmp
filds
mov
lods
icebp
mov
insb
shlb
insb
cmp
scas
push
es
lods
jne
test
add
pop
pop
scas
inc
xchg
jns
adc
or
adc
push
ds
jno
cmc
mov
lret
inc
ret
xchg
in
mov
dec
inc
nop
popf
repz
jmp
mov
mov
push
push
stc
pop
inc
dec
fwait
in
pushf
decl
mov
fwait
cld
dec
lock
sbb
adc
in
nop
sbb
insl
in
push
lods
mov
sub
popl
or
mov
sub
xchg
jo
mov
and
inc
cmpsl
call
dec
sbb
lahf
xor
ret
mov
movsl
mov
and
jp
mov
add
enter
inc
pop
jnp
pop
sub
add
inc
nop
popf
inc
inc
dec
xor
sub
jecxz
cmp
cwtl
xor
notb
push
aam
iret
rorl
js
stc
jnp
dec
adc
nop
jno
stos
fildl
loopne
cli
stc
pop
sbb
fs
push
cmp
stc
dec
xor
xor
data16
aaa
dec
or
int3
add
fcomip
or
adc
pop
in
sbbl
sbb
incb
push
movsl
xchg
inc
xor
call
adc
mov
loop
sar
in
std
outsb
and
mov
adc
fdivr
es
sub
aaa
roll
pop
cmp
scas
arpl
pushf
and
cmp
adc
mov
pop
add
es
jle
ss
jae
mov
jl
cmpsb
ja
cli
inc
pop
jge
push
cltd
dec
add
shll
ret
mov
xor
pop
and
push
sbb
out
int3
ficoms
ret
add
xor
lods
mov
lcall
cltd
inc
nop
fwait
cmpsb
movsb
sahf
pusha
movl
pushf
pusha
movl
mov
lea
jmp
loopne
lods
fisttpl
cli
pop
ret
dec
enter
shrb
add
shl
mov
out
cmp
lods
push
sbb
sub
or
icebp
xor
xchg
cmp
mov
xchg
mov
lock
and
mov
jbe
loopne
lret
cmp
xor
cmp
mov
pop
sbb
lds
int3
sbb
cld
push
cmp
push
idivl
in
dec
sbb
int3
xchg
push
pop
cmovns
dec
adc
inc
pop
xorb
mov
ret
dec
add
bound
push
hlt
bound
lcall
jmp
orb
xor
push
rolb
adc
xchg
push
xchg
adc
mov
mov
xor
sarb
or
loopne
and
mov
int
sti
cmpb
test
add
scas
inc
jg
int
mov
pop
jae
out
jno
sbb
arpl
dec
mov
mov
mov
push
sbb
xor
ret
inc
nop
lcall
add
xor
addb
dec
mov
les
pop
outsl
ret
dec
mov
adc
pop
xlat
ja
xor
jl
insl
bound
xor
cltd
mov
jmp
mov
lcall
in
icebp
out
rcrb
jne
data16
push
push
sbb
cltd
stos
fdivrs
push
movl
pushf
jmp
push
movl
pushf
lea
jmp
xchg
dec
rorb
imull
and
mov
pop
push
test
mov
pop
loop
and
std
add
inc
mov
mov
or
add
cmpsl
in
xchg
sbb
jno
xchg
push
mov
movsb
std
insb
cmpxchg
bound
outsb
sub
nop
cltd
outsb
pushf
subb
mov
adc
notb
stc
xchg
stc
mov
mov
fmul
insl
inc
call
shrb
xor
outsl
stc
mov
jge
jge
pop
inc
or
dec
cmp
adc
inc
cli
add
rcrb
fisubrs
jecxz
into
adcl
lcall
out
iret
dec
sub
mov
push
mov
in
push
cli
add
sub
aaa
mov
jne
loop
repz
pop
or
sbb
or
inc
bound
dec
fstpl
pop
push
outsl
xor
inc
nop
cwtl
filds
add
call
jo
pushf
movl
call
movl
pushf
mov
pushl
push
lea
jmp
mov
movsb
and
in
jge
addr16
lret
sarl
adc
mov
out
dec
outsb
add
adc
popa
add
leave
mov
imul
inc
lahf
cmp
out
xchg
push
push
cli
test
add
cwtl
fwait
lods
negl
mov
je
adc
arpl
add
mov
in
xchg
mov
adc
sahf
and
out
add
lret
test
jmp
and
mov
jl
cmp
popa
aaa
pusha
and
inc
nop
xchg
subl
mov
push
cs
fidivrs
and
mull
adc
xor
adc
leave
sahf
pop
mov
nop
icebp
jo
and
std
jle
test
rcrl
adc
jp
jmp
mov
pop
cmp
pop
sub
cmpsl
cmc
sbb
cwtl
pop
outsb
pusha
push
arpl
ja
movsl
push
lcall
inc
sbb
ds
ret
in
xchg
stc
sub
fidivs
hlt
data16
enter
push
dec
ret
xchg
pop
stc
jmp
and
add
les
xchg
outsl
cmp
mov
and
call
hlt
cmpsb
test
inc
jnp
mov
inc
jmp
mov
lret
gs
inc
nop
xchg
xchg
test
mov
or
scas
and
cmpsl
out
mov
xor
push
iret
add
and
lret
inc
fisubl
cmp
icebp
mov
bound
add
xor
es
xchg
or
jle
test
inc
lods
scas
or
add
pushf
outsl
and
pop
push
cmp
pop
inc
sub
and
add
or
ja
imul
push
mov
adc
in
pop
cltd
mov
push
call
hlt
jmp
negb
pop
cwtl
xchg
push
in
insl
mov
cli
fnstcw
sbbl
add
push
xlat
add
cmp
mov
js
insb
scas
xor
sub
lahf
xor
shlb
les
lods
call
inc
sub
std
xchg
rcl
cmpsb
xlat
lahf
mov
jnp
mov
mov
lock
dec
pop
pop
leave
insb
jmp
push
dec
lods
jmp
mov
inc
push
pop
mov
xchg
iret
iret
add
aad
enter
push
insb
ss
sbb
arpl
adc
add
outsb
inc
xchg
cmp
lret
mov
push
jecxz
imul
ljmp
fstl
out
mov
xchg
imul
pop
pop
mov
ret
push
orl
ret
sub
aas
repz
and
cmp
repz
sar
or
dec
repz
ljmp
nop
xchg
cmp
and
and
xor
push
push
movb
pushf
lea
jmp
or
mov
cmp
loop
filds
cli
xchg
pop
add
cmp
es
inc
popa
daa
jp
cmp
andb
test
lods
sarb
push
fsts
or
movsl
add
mov
sbb
shrl
pop
stos
sub
repnz
sti
mov
pop
shr
imul
inc
pop
and
ffree
in
pop
push
lods
dec
jae
pop
sbb
mov
cmpsb
pop
and
xor
int3
sahf
pop
stc
xor
imul
scas
data16
pop
jmp
mov
push
insb
imul
or
sub
jg
ret
add
and
xorl
sbb
or
sahf
mov
xor
test
jmp
imul
into
cs
repz
push
in
arpl
push
data16
cmove
mov
stc
add
mov
out
movsl
inc
js
in
insl
cltd
lret
popf
push
dec
xchg
xchg
pop
push
mov
xchg
mov
mov
ret
js
pop
adcl
or
push
loop
loope
inc
pop
mov
mov
ss
pop
inc
add
cmp
mov
inc
adc
mov
pop
es
aam
fiadds
lahf
mov
or
pop
inc
es
or
xchg
mov
pop
sbb
and
xor
cmpb
sub
testb
or
inc
nop
out
pop
jecxz
mov
dec
mov
fcompl
rep
adc
inc
nop
xchg
addb
int3
inc
lds
or
push
mov
insl
lods
aam
roll
mov
jle
push
sbb
push
shrl
inc
nop
xchg
push
je
and
jns
push
jp
jge
data16
enter
sub
jge
push
mov
int
aad
ret
out
push
sbb
add
imul
je
fsubrs
nop
xchg
scas
fsub
push
call
and
subl
sbb
xchg
and
cmp
and
lea
xchg
mov
adc
cmp
jo
adc
mov
push
xor
or
mov
icebp
mov
stos
mov
test
mov
mov
int
pop
dec
outsl
adc
sarb
inc
nop
xchg
cmp
push
cwtl
mov
add
dec
xchg
lods
int3
jo
mov
repnz
xor
fwait
cmp
fsubrl
int
mov
mov
test
mov
arpl
mov
mov
inc
xor
popa
jl
out
sahf
loope
xchg
xor
and
lds
test
mov
xchg
insl
inc
nop
xchg
adc
int3
push
insl
aaa
mov
ja
loopne
imul
xchg
xchg
loope
xor
push
or
js
int3
jecxz
mov
xorb
das
leave
cmp
pop
lcall
int3
xchg
movsl
mov
loope
nop
test
lea
faddp
leave
dec
or
xchg
or
les
nop
xchg
call
push
mov
xor
xchg
icebp
mov
and
loop
fldl
mov
pop
aad
xchg
mov
imul
push
leave
mov
xchg
jmp
cmpsb
dec
fwait
cmpsl
aas
aaa
sub
inc
sub
lcall
arpl
data16
push
cmpl
cmp
cmp
xchg
clts
sub
cltd
push
imul
jo
pop
mov
shlb
inc
adc
lret
jno
into
sub
or
or
outsl
add
and
dec
push
ss
add
ficomps
fidivrs
das
inc
roll
xchg
jecxz
idivb
xor
test
test
push
xorl
xor
jecxz
ret
pop
inc
sbb
out
icebp
repnz
movsl
add
xchg
xchg
fistpl
int3
movsb
sti
xchg
fdivl
iret
mov
and
cmpsb
scas
pop
test
repnz
sbb
inc
nop
nop
jns
sbb
fsubs
mov
adc
cmpsb
into
push
aad
enter
cld
leave
adc
xor
dec
push
and
adc
imul
std
mov
xchg
leave
call
xchg
aas
mov
dec
mov
and
stos
idivl
xchg
xor
xchg
lods
push
push
arpl
push
and
fisttps
outsl
lret
insl
xlat
icebp
lods
lea
jg
jbe
mov
in
adc
push
or
mov
dec
inc
mov
mov
loopne
test
mov
pop
fwait
or
xchg
sub
push
ss
sbb
adc
mov
flds
mov
lahf
ficoml
pop
inc
nop
nop
and
adc
cltd
aad
cmp
ror
popa
dec
std
stos
loope
int
popl
mov
inc
mov
aas
stos
pushf
ja
shll
addb
sub
shl
pop
sbb
cmp
fldl
push
data16
shll
jo
lahf
test
vorps
pop
push
push
inc
test
jmp
xchg
rclb
xor
pushf
sub
outsb
fwait
pushf
pushf
movl
jmp
bound
sahf
jo
and
lcall
lods
leave
mov
adc
leave
pop
inc
int3
cltd
imull
mov
lret
jo
mov
enter
cmp
inc
push
lods
add
mov
aam
cmc
jp
push
pop
rcll
inc
int
loop
push
xchg
into
call
sbb
pop
dec
vpunpckhdq
push
lret
popf
rcr
push
in
aad
xor
add
data16
xor
dec
push
push
cmp
lea
arpl
test
outsl
subl
dec
mov
jbe
out
movsl
cmpsb
cld
jb
sub
xchg
in
add
jbe
or
dec
ret
imul
sub
mov
inc
es
adc
add
stos
push
adc
inc
and
mov
nop
mov
xor
subl
sbb
enter
push
loop
sbb
lods
cmp
and
lds
daa
xor
add
push
mov
stos
shr
xchg
add
loop
xor
add
pop
pushf
push
adc
nop
icebp
je
jecxz
mov
out
xchg
faddp
lahf
fsts
ret
xchg
sub
pop
add
xchg
in
ljmp
inc
nop
sub
call
clc
int
sub
adc
daa
inc
std
lahf
stc
inc
les
andb
sub
jle
leave
cld
adc
aam
jp
mov
inc
shll
lds
adc
arpl
sub
subb
lds
cmp
sbb
ror
add
in
mov
pop
out
out
mov
cmovnp
pop
mov
nop
lea
ret
lea
pop
aas
jns
mov
mov
add
sbb
stos
out
jb
cmpsb
je
or
cmp
mov
jae
scas
loopne
adcl
hlt
pop
rcrl
lea
mov
lock
rcl
aad
mov
push
mov
or
mov
cmpsb
andl
negl
js
iret
in
mov
or
call
shl
push
mov
out
mov
bound
sub
jp
jbe
out
pop
adc
and
xchg
add
xchg
es
into
sub
xchg
cmp
popf
movsb
cli
imulb
jle
cmp
inc
add
sbb
mov
subb
mov
jae
arpl
mov
or
adc
push
mov
xchg
cmp
xor
nop
ds
gs
sahf
or
cwtl
stc
fs
into
inc
test
cltd
mov
jno
pusha
and
xchg
fisubl
test
cmc
out
push
movsb
jmp
stos
fsubrl
push
mov
lret
inc
nop
lea
test
inc
and
add
fs
pushf
lea
jmp
movl
movb
lea
jmp
adc
jle
and
cmp
xchg
notl
lods
and
testl
adc
iret
shrl
sarb
loopne
je
cltd
mov
pusha
mov
mov
mov
outsl
xor
push
dec
in
lret
mov
nop
shl
scas
shr
lock
xlat
cwtl
sbb
xchg
mov
cli
adc
add
or
add
movsl
es
inc
add
dec
pop
cmova
test
insb
loope
loop
notb
inc
je
iret
orl
sub
xchg
popf
cmpl
fists
mov
je
xor
hlt
ja
push
sub
jb
imull
or
dec
mov
orl
arpl
mov
test
inc
nop
mov
sub
stos
pop
cmp
mov
dec
add
sbb
jno
mov
mov
cmp
or
push
test
cmpsl
dec
outsb
xor
mov
inc
repz
sub
xor
fldcw
movsl
xchg
cs
mov
test
leave
or
int3
xor
push
imul
mov
lret
movl
push
lea
jmp
fwait
movsb
sarb
ds
js
out
jle
out
push
jecxz
shlb
sbb
and
loop
aas
mov
insl
jmp
mov
out
imul
sub
lret
addl
loope
cmc
mov
mov
inc
nop
mov
mov
jmp
jo
bound
or
and
daa
test
dec
push
cmpb
and
mov
inc
hlt
stos
cld
mov
mov
shl
ror
loop
outsb
push
jge
adc
or
and
nop
mov
shr
fcoml
push
add
pushl
movl
call
jmp
movl
push
pushl
push
lea
jmp
pop
popf
and
jg
imul
in
repz
pushf
push
nop
enter
pop
inc
jl
mov
shlb
ret
aaa
xor
xchg
lock
jl
test
jl
adc
cltd
lock
or
pop
jns
xchg
adc
mov
jns
das
in
cmp
rclb
imull
cmp
inc
push
out
push
sbb
aad
cmp
push
ds
sti
lods
push
inc
jnp
fmull
cmp
pop
lods
mov
mov
xchg
and
mov
mov
jmp
pop
orl
inc
add
pop
add
xchg
xchg
aad
pop
aaa
xchg
lea
imul
sub
jge
or
lods
fnsave
mov
adc
jne
sub
shl
xor
stos
testl
insl
xchg
mov
mov
cmpl
out
mov
inc
nop
mov
and
or
lods
lds
into
dec
iret
cmpsb
int
sub
repz
outsl
je
xor
inc
and
loop
mov
jl
enter
or
mov
mov
repnz
mov
xchg
and
sub
mov
xlat
sbb
dec
cmp
xchg
and
aaa
cmp
xor
xor
aas
dec
sub
inc
nop
mov
scas
inc
mov
call
jg
pushf
divl
push
push
mov
mov
sbb
repz
xchg
in
cmp
sahf
mov
sub
cld
test
scas
mov
push
iret
and
mov
sbb
push
je
cmp
fwait
leave
add
mov
inc
and
ds
loopne
inc
nop
mov
jns
push
es
icebp
xor
int3
movsl
jmp
sbb
and
xor
lea
sub
rorb
mov
xor
repnz
push
jle
pop
xchg
add
clc
pop
scas
pusha
add
pop
mov
gs
ret
ja
dec
inc
cs
hlt
xchg
push
xor
rcrb
jl
mov
in
aam
lods
out
daa
into
jbe
pcmpgtw
push
rorb
inc
addr16
fcoml
pusha
das
gs
xchg
fwait
andb
repnz
out
nop
xchg
push
mov
aad
out
xlat
scas
mov
mov
and
pop
lea
ret
fmull
jns
sbb
aaa
dec
movnti
xor
ljmp
clc
cwtl
addr16
mov
jo
repz
mov
xchg
mov
pop
lea
xchg
cld
repnz
movl
pushf
call
cli
jecxz
add
fisttps
pusha
jo
in
sbb
icebp
stos
cmc
mov
push
jno
in
std
cmc
fstl
or
ds
stc
or
mov
xor
add
lds
and
cmp
pop
lods
fildl
mov
fistps
test
mov
fldl
inc
loope
js
push
or
outsb
out
mov
or
sub
mov
push
aas
arpl
sub
out
inc
push
arpl
cmpsl
fmull
or
inc
sub
lcall
jmp
mov
pop
shl
and
mov
rcr
adc
add
fdivl
jp
pop
hlt
out
cmp
xor
jmp
das
addr16
dec
lods
push
mov
mov
fnsave
jo
into
push
and
or
xchg
push
rolb
mov
aaa
and
mov
in
add
cmp
cmp
xchg
dec
loope
cmc
sti
mov
int
mov
pop
rcrl
xchg
repz
lret
xchg
pop
les
cltd
mov
cmp
sub
add
imul
data16
jno
roll
jo
mov
adc
inc
clc
sub
mov
mov
dec
ds
push
repz
adc
or
dec
adc
shll
add
icebp
lea
xor
push
lret
add
push
fwait
sbb
vmread
pusha
adc
pop
or
push
inc
es
mov
cmpsb
mov
ds
add
mov
test
das
push
int3
es
addl
add
xor
inc
mov
scas
insb
mov
std
pop
push
cmc
mov
cmp
mov
xchg
stos
jne
roll
sbb
fadds
out
ja
nop
test
add
adc
int3
mov
xor
maxps
mov
pop
pop
shl
sbbl
out
sub
enter
int
mov
mov
insl
pop
dec
and
outsl
adc
sub
push
mov
fimuls
and
pop
vpmacsdd
jmp
or
cmp
pop
int
and
mov
sbb
adc
ret
or
test
fisubrl
sbb
adc
jg
jmp
jmp
jbe
jae
inc
nop
test
bnd
push
iret
mov
add
jae
xor
adc
or
inc
aaa
mov
bnd
mov
aaa
adc
ja
adc
loope
mov
jae
test
adc
in
mov
jnp
cmpsl
scas
dec
pusha
int3
jns
push
fldcw
aam
jg
cmp
add
cmp
loopne
lret
andb
addl
pushf
dec
mov
addl
lock
fs
or
test
cwtl
mov
and
dec
cmp
adcb
and
xchg
mov
fistps
imul
adc
fbstp
shrl
jmp
mov
cld
bound
mov
popf
mov
imul
je
jo
cltd
fisttpll
or
jae
es
cltd
cmp
jbe
ret
adc
not
inc
xor
test
test
jae
inc
mov
aam
call
or
pushf
and
aad
sbb
cmc
lock
pop
stos
pop
cwtl
lret
push
out
cltd
clc
scas
fimull
stos
push
pop
xor
aam
fdivr
pop
jle
jle
movsb
dec
mov
xlat
divl
sbb
xchg
fsubl
loope
inc
nop
andl
jmp
shl
cmpsb
and
sbb
jns
and
lods
in
xor
push
sahf
addr16
cmp
jae
push
dec
les
out
aam
or
idivb
inc
adcb
add
cmp
inc
out
clc
jns
xchg
xor
jo
jge
add
mov
sub
dec
insb
sub
push
in
lods
into
mov
xchg
imul
das
cmpsl
mov
jl
xchg
divl
jecxz
aam
dec
push
dec
pop
pushf
add
rcrl
scas
and
and
ffreep
xchg
mov
lds
add
out
fnstenv
xor
mov
scas
in
pushf
and
jae
xchg
pusha
out
xchg
adc
and
lret
mov
repnz
in
mov
pop
cs
fisubs
jecxz
call
sub
push
clc
pushl
mov
mov
insb
ss
popf
sbb
mov
incb
cmp
inc
or
rcrl
mov
push
lret
sbb
push
push
push
dec
push
push
packssdw
adc
aas
dec
jb
xor
or
mov
dec
cli
mov
mov
jge
mov
inc
and
mov
dec
inc
add
push
jmp
mov
mov
in
mov
push
mov
or
dec
xor
cmp
aas
pop
fsts
mov
lea
cltd
sbb
aas
into
subl
shr
aad
push
stos
pop
stc
loop
sub
repz
jmp
xchg
inc
adc
shlb
add
adc
or
xchg
mov
push
cltd
imul
movsb
cs
lea
out
mov
cltd
sbb
ss
xorl
fimull
stos
sbb
mov
rol
sbb
andl
add
call
stos
cwtl
adc
hlt
popf
stc
popf
push
loopne
mov
fistpl
sub
mov
jmp
insl
rcrl
or
orl
jmp
data16
push
cs
sbb
adc
push
pop
hlt
scas
pop
and
std
repz
loopne
mov
push
lods
in
adc
pop
add
pop
or
push
add
nop
sbb
test
fsubrs
pusha
lea
jmp
add
mov
cmp
cs
stc
movsl
adc
arpl
xchg
pop
inc
pop
sbb
mov
xchg
fcos
cltd
inc
lcall
imul
out
push
mov
mov
mov
pop
out
inc
ljmp
fwait
pop
sbb
dec
aaa
outsl
aam
cmc
fwait
adc
xchg
into
inc
in
pop
push
int
xor
scas
inc
nop
sbbb
lret
ljmp
inc
sub
sbb
push
mov
xchg
pop
push
mov
xchg
pop
sar
fdivl
mov
out
dec
mov
ror
outsl
dec
xor
push
xor
aas
mov
mov
test
jecxz
xchg
shll
sbb
inc
nop
jg
lods
test
inc
and
xor
and
add
pushf
push
pushf
lea
jmp
imul
jb
pushf
sti
push
push
cmpsb
jmp
sbb
lret
js
sbbl
or
sub
in
mov
inc
adc
mov
and
and
sub
sahf
test
nop
or
push
addr16
scas
in
mov
fwait
inc
nop
jle
call
out
cmp
sarb
arpl
dec
sbb
add
shll
xor
xchg
call
jmp
aam
mov
mov
sub
fcoml
mov
shlb
xor
cld
adc
mov
fcompl
imul
mov
xor
aad
pusha
add
jge
dec
aam
xor
push
lock
or
push
mov
fwait
cmp
or
out
lock
xchg
out
lock
push
lods
mov
movsl
les
xor
jnp
jl
adc
mov
scas
xor
lret
and
outsl
xlat
cmc
idiv
xor
das
pop
divb
sub
cmp
mov
clc
fstpt
pop
jae
inc
arpl
mov
and
daa
push
push
adc
mov
aad
and
dec
shrl
and
sub
sub
xor
mov
cmpsl
xor
int3
sbb
pop
mov
insb
mov
and
imul
imul
out
adc
outsl
add
movl
jmp
pop
push
inc
dec
dec
addr16
adc
les
xchg
mov
adc
aad
insb
std
out
dec
imull
imul
sti
cmc
mov
imul
jbe
iret
insl
dec
outsb
xlat
daa
dec
cmp
jp
xchg
mov
and
add
xchg
jnp
mov
jle
xchg
loopne
jmp
stc
in
pop
sahf
push
int3
test
sbb
cmp
push
dec
scas
fstps
inc
nop
jge
int
insl
mov
lahf
lods
stos
sub
addb
pop
adc
inc
sub
pusha
jl
add
or
push
call
adc
cli
push
inc
hlt
xor
jbe
xchg
sbb
out
push
pushf
jecxz
xlat
mov
dec
push
or
arpl
mov
subl
add
sbb
inc
nop
jl
pushf
je
cltd
hlt
sets
pushf
lea
jmp
insl
test
jle
sub
push
inc
and
iret
call
jp
cmpsl
sti
mov
push
jo
cmpsb
jae
jle
push
and
adc
mov
call
inc
push
nop
xchg
das
jge
adc
sub
lahf
inc
sbb
and
pop
cmc
int3
jmp
mov
jb
push
push
lret
shlb
outsb
subb
or
rclb
and
push
dec
movsb
jmp
xchg
mov
add
mov
jae
sub
push
mov
push
or
in
cmpsb
ret
or
jmp
arpl
pop
sbb
pop
mov
xchg
stos
xchg
jb
xchg
loop
popa
fwait
test
inc
out
aaa
std
test
in
add
arpl
cmpsl
pop
jg
adc
inc
sub
es
or
inc
nop
jnp
xchg
pop
or
je
xchg
xchg
or
lret
insl
cld
pop
or
jnp
sbb
cmp
add
in
and
xchg
mov
push
mov
cs
lcall
in
inc
cmp
cmp
sbb
jl
hlt
adc
mov
mov
mov
mov
jl
push
mov
insb
pop
sub
sbb
mov
fnstcw
xchg
in
repnz
adc
lret
shll
fmulp
xor
adc
jmp
xchg
fisubl
xchg
outsb
not
test
test
sub
jp
nop
add
fsubs
icebp
dec
ss
inc
sbb
mov
in
fmul
daa
push
xchg
jnp
aaa
or
and
jmp
pusha
aaa
xor
out
jg
lret
aam
out
pop
clc
out
jp
movsb
sub
clc
push
in
sbb
jno
insb
daa
mov
cmp
push
movsl
xlat
lret
cs
fmuls
fwait
xchg
sbb
add
add
dec
adc
rorl
loope
scas
inc
nop
jnp
pop
pop
in
sbb
adc
imul
jns
outsl
divb
xchg
stos
or
sbb
or
insl
and
in
mov
mov
push
inc
lods
inc
xor
xor
pusha
es
scas
sbb
in
inc
nop
jp
stc
ljmp
sbb
mov
mov
in
loopne
ss
inc
out
pop
ret
loop
adc
xor
add
fdivrs
shl
fisubrs
scas
scas
aam
lds
add
shr
aam
imul
hlt
orb
inc
in
leave
mov
pop
iret
sarl
nop
mov
push
cwtl
jne
scas
mulb
cmp
add
sbb
cmp
jp
ja
test
sub
arpl
jo
xchg
mov
and
or
movsb
add
rolb
dec
jae
in
add
mov
jmp
sub
das
adc
clc
mov
mull
mov
imul
testl
push
inc
nop
jp
sbb
jle
dec
lds
decl
or
stc
stos
lret
mov
mov
adc
inc
nop
xchg
or
sar
adc
outsb
add
std
mov
push
xor
int3
jmp
mov
xchg
ljmp
dec
mov
insl
jo
inc
and
rolb
shll
cmp
xor
adc
inc
nop
js
cld
add
push
fildl
dec
mov
ja
jle
insl
add
test
mov
sbb
into
pop
cmp
into
push
adc
xor
jo
sub
ficoml
cld
mov
inc
nop
jns
or
int3
dec
insl
mov
jge
je
push
mov
xorl
int3
pop
cmp
mov
lcall
sbb
xchg
popa
aaa
mov
out
xchg
out
in
push
adc
mov
pop
mov
inc
in
cwtl
pop
rorb
sub
xchg
fbld
nop
daa
inc
mov
imull
or
stos
loope
test
dec
or
mov
fcmovnb
cs
sahf
sub
flds
jns
or
insb
adc
cmp
aad
pop
xor
or
test
das
sbbl
sub
addr16
push
imull
jmp
add
outsb
jge
arpl
xchg
or
inc
cwtl
push
push
clc
cld
sbb
and
in
xchg
iret
xchg
shlb
mov
stc
lds
and
call
lea
aad
mov
xor
nop
ja
mov
sub
shlb
fisubl
mov
mov
mov
cmp
je
ret
not
jb
inc
push
push
push
push
push
and
sub
mov
jno
fwait
xchg
cmp
pop
sbb
rorl
jg
scas
rolb
sub
cwtl
loopne
testb
pop
mov
adc
fldcw
lea
inc
nop
ja
hlt
in
and
cmpsb
pop
xchg
xor
mov
fistpll
xchg
std
loope
mov
movsl
dec
xlat
lret
ds
adc
call
repnz
insl
shr
jne
add
out
add
jb
jp
dec
pushf
xor
xor
cwtl
aas
gs
sbb
mov
add
sbb
stc
test
ficomps
jne
scas
add
sbb
data16
jno
mov
ds
nop
ja
dec
pop
pusha
movl
pusha
push
call
push
stos
filds
loope
mov
fstpt
adc
dec
mov
xor
into
sti
mov
add
sub
adc
ja
dec
scas
or
pop
pop
jge
and
test
mov
andb
imul
mov
inc
rolb
lahf
fmull
test
mov
mov
sbb
cmp
xchg
ret
jns
inc
nop
jbe
rol
xor
lods
sub
xor
aam
in
add
clc
fstps
rcrb
fxch
mov
int
cwtl
jo
sarb
jno
fbstp
test
sbb
mov
dec
inc
pop
xchg
sarl
aam
sti
lea
mov
loope
inc
nop
test
mov
mov
in
lret
faddl
pop
jb
cmp
insl
cwtl
sbb
clc
and
or
imul
push
inc
int
es
int3
push
mov
test
dec
mov
ja
cmp
dec
mov
adcb
fwait
ror
sub
jno
xor
fdivl
icebp
int3
loope
dec
cmp
arpl
pop
in
dec
push
aaa
movsb
mov
jb
loop
rolb
mov
lods
add
cli
inc
xor
fdivs
mov
jmp
js
icebp
add
movsl
inc
adc
mov
mov
enter
ljmp
push
jnp
int3
inc
cmp
adc
fnstsw
mov
sbb
pop
xchg
xchg
mov
or
test
outsb
or
adc
lahf
mov
pop
popf
jmp
mov
stos
pop
or
mov
fwait
and
pusha
aaa
jo
pop
mov
dec
dec
stos
pop
pop
add
mov
sub
les
int3
mov
or
jno
cmp
out
fnsave
pop
add
ficoml
je
lock
pop
sub
adcb
cmp
gs
out
repnz
aaa
pushf
or
jmp
std
mov
std
sbb
lahf
dec
inc
sub
inc
sub
and
sbb
aaa
mov
addr16
out
push
dec
xchg
inc
mov
arpl
test
mov
popf
xchg
xlat
mov
pop
sti
into
mov
das
xor
push
pop
adc
je
dec
mov
nop
je
std
repz
pusha
pushf
movl
mov
mov
jmp
in
ss
and
or
push
xorl
push
sti
mov
out
flds
sub
dec
pxor
jae
mov
jmp
pop
movsl
mov
cmc
jl
test
mov
outsl
jmp
mov
or
popf
aaa
or
xchg
movsl
ljmp
push
push
mov
mov
xchg
sub
insl
outsl
popa
js
jp
add
jb
jnp
mov
inc
nop
jae
push
pop
mov
mov
xor
test
mov
dec
mov
call
arpl
mov
ss
arpl
int3
xlat
mov
dec
pop
in
mov
push
pop
push
pop
mov
stos
adc
or
adc
ja
fsubl
rorb
stos
adc
mov
pop
inc
out
ja
pop
xchg
mov
outsb
sbb
es
mov
jns
arpl
pop
or
imul
sbb
xlat
outsb
push
push
adc
shll
or
push
ljmp
lods
shll
mov
addl
xchg
ja
aas
xchg
fwait
sub
dec
push
jo
and
push
and
int3
pusha
jge
sub
fwait
andb
jl
inc
repz
inc
nop
jae
push
outsl
push
pushf
movl
lea
jg
pusha
movl
pushf
lea
jmp
movl
pushf
lea
jmp
rcr
push
std
out
icebp
scas
sar
sbb
movb
call
xor
cwtl
jo
jo
jnp
dec
add
test
mov
mov
lock
or
inc
les
shlb
xchg
lea
mov
addr16
sbb
jb
cmp
jmp
push
shl
fldenv
test
add
sub
xchg
mov
fwait
std
lcall
data16
pop
mov
enter
daa
repz
mov
shl
mov
rcr
pop
jbe
cmp
cmp
jge
pop
pop
loope
dec
test
inc
xlat
pop
cmp
mov
lock
add
pusha
sub
jnp
test
mov
lods
in
daa
pop
jg
fs
mov
enter
push
sub
cmc
fistl
mov
je
inc
push
xor
mov
sti
push
jl
in
push
std
int3
aam
pop
cmpsb
call
jecxz
inc
adc
pop
aad
adc
mov
lcall
mov
jl
loopne
pop
mov
mov
jl
cltd
shrb
shll
repz
dec
inc
xchg
jbe
cwtl
fcoml
test
fwait
sarl
or
push
inc
cmpsl
mov
imul
push
mov
mov
xchg
cwtl
cltd
pop
mov
scas
clc
xchg
cs
ja
bswap
push
adc
jbe
inc
xchg
mov
sbb
addr16
call
cmc
fcoms
xchg
out
scas
mov
enter
adc
loopne
ret
sub
add
cs
xor
add
stos
divb
nop
jo
cmp
and
jg
push
call
push
xchg
divl
or
ret
ds
jle
pop
or
iret
dec
mov
adc
add
pop
jl
mov
aad
and
push
out
push
push
fwait
imul
inc
pusha
loop
repz
stos
or
xor
fs
ds
mov
test
nop
outsl
decl
ljmp
fstpl
mov
jmp
fnstcw
ss
cmp
fucomp
stos
lcall
shlb
sarb
in
dec
dec
imul
out
push
in
pop
js
ftst
xor
lds
icebp
ljmp
cmp
lret
pop
inc
nop
jo
setns
jmp
pop
addb
push
lock
cmpsl
int
add
inc
popa
xor
fcomps
mov
push
mov
repnz
shrl
push
dec
lret
aam
lods
enter
std
push
sarb
insl
add
cli
lahf
test
cmp
inc
mov
push
push
inc
jae
test
stos
mov
adc
cmc
test
fldt
xor
jl
rcrl
sub
pushf
dec
mov
mov
lds
inc
nop
outsl
das
je
popf
in
jmp
push
inc
push
jle
imul
sub
rolb
mov
sub
mov
insl
leave
cmpsl
lock
xor
leave
xor
push
sbb
mov
repnz
fs
mov
mov
jle
test
scas
mov
shl
rolb
cltd
mov
push
cmp
mov
mov
inc
nop
outsb
jno
xchg
push
nop
divl
fwait
lret
mov
call
inc
push
pop
int
test
shrb
fldt
lahf
mov
cmp
mov
mov
stos
push
sti
sub
call
xchg
add
imul
ret
push
dec
test
or
shl
adc
xchg
jge
pop
jge
cld
call
fnstenv
incb
imul
xor
push
clc
mov
rorl
ret
inc
nop
insl
clc
or
scas
fstpl
push
push
push
add
mov
jne
nop
aad
loopne
pop
aam
mull
xchg
cmpsb
mov
cwtl
push
adc
andl
int3
ds
gs
push
das
cld
dec
mov
and
ss
loopne
inc
adc
cltd
cmc
mov
mov
mov
enter
mov
pop
jno
and
mov
popf
mov
daa
dec
mov
mov
dec
lds
movl
pushl
mov
lea
jmp
movl
pushl
pushl
pushf
pushl
lea
jmp
jg
outsb
std
insl
int3
out
xchg
call
inc
pop
dec
or
add
cmp
add
xor
popf
or
test
rorb
or
fldl
scas
sub
pop
inc
sub
fs
xlat
rclb
add
out
sbb
inc
sahf
pop
add
mov
test
fwait
adc
test
inc
jg
mov
movsb
sbb
adc
lret
rorb
lahf
mov
push
dec
push
xor
adc
popf
or
add
mov
inc
nop
insl
and
call
push
sub
jecxz
fwait
xchg
int
stc
mov
ret
outsb
sub
cmc
outsl
popf
inc
mov
ficompl
insl
out
and
orl
movsb
push
cmc
sub
loope
mov
pushf
insl
mov
outsl
adc
adc
das
push
sbb
loope
jle
sub
mov
add
mov
and
popa
mov
nop
insb
mov
in
test
fbld
sbb
dec
xlat
test
ja
incl
fwait
ret
jp
js
push
or
mov
lret
gs
jb
cli
sub
hlt
cltd
std
xor
push
ret
xchg
pop
out
les
sbb
sub
cmc
ljmp
cld
lea
pop
scas
push
pop
mov
daa
mov
push
rorl
mov
inc
nop
insb
cs
dec
pusha
pusha
pushf
pushf
movl
movb
movl
mov
push
lea
jmp
push
jmp
aad
arpl
unpckhps
xor
orb
or
cmp
push
xor
rcrl
bound
or
enter
mov
in
jge
insl
push
jecxz
jl
test
mov
scas
loope
aaa
push
cmovbe
lock
jne
cmp
jp
pop
jns
cmp
inc
and
mov
mov
test
cld
xchg
pop
rcr
data16
and
test
rclb
repnz
push
fmulp
stos
mov
push
mov
rcll
popf
jo
sub
add
test
iret
and
fisttpl
pop
cmpsb
shl
ja
insl
cmp
mov
pop
cs
sahf
aas
jbe
xchg
pusha
leave
adc
pop
mov
inc
andb
mov
cwtl
sbb
pop
aas
xor
push
jne
jmp
sbb
fistl
sbbl
jno
sahf
not
pushf
stos
inc
mov
xor
xor
jae
je
mov
in
xorl
movsb
dec
in
adc
rolb
gs
inc
daa
test
inc
rcrb
push
xchg
pop
mov
mov
mov
jbe
andl
inc
push
movsl
xlat
mov
sbb
call
imul
sarb
sbb
and
mov
lods
jne
cmpsl
test
loopne
mov
jb
dec
inc
pop
jge
aas
mov
jb
pop
mov
fwait
adc
ljmp
cld
or
inc
xchg
divb
sbb
inc
mov
pop
inc
push
stos
rcrb
mov
mov
adc
sub
mov
rclb
ja
dec
and
inc
nop
imul
xor
ds
lret
push
xor
ljmp
sub
lds
pusha
dec
push
jne
stos
aas
insl
xchg
mov
push
lahf
fs
decb
lods
outsb
jmp
push
xor
test
mov
nop
push
adc
movl
pushl
mov
lea
jmp
call
adc
dec
pop
push
and
lcall
fcoms
mov
push
mov
into
xchg
roll
inc
inc
nop
imul
push
sbb
aad
add
xlat
mov
int3
outsl
call
lcall
push
ret
inc
mov
fldt
lret
cmp
mov
lea
out
fldcw
pop
aaa
jl
std
inc
nop
push
pop
shll
push
pop
out
pop
inc
sub
notl
xchg
jecxz
inc
not
or
ss
sub
sub
shrb
adc
xor
lret
push
mov
stc
adc
aas
or
push
nop
xchg
icebp
sbb
push
xchg
jg
mov
push
int3
mov
aas
jb
dec
adc
sub
push
inc
sub
in
scas
ja
lock
pop
mov
and
outsl
loop
fbstp
nop
push
cltd
out
test
adc
shll
lods
sbb
xor
xchg
cmpsb
sarl
sbb
movsb
pop
test
hlt
push
xor
mull
lret
es
dec
arpl
iret
sbb
mov
mov
mov
xor
lahf
mov
and
pop
inc
call
fcmovnb
pop
out
sub
inc
nop
mov
add
and
enter
pushf
movl
mov
pusha
push
lea
jmp
lods
jns
outsl
shrl
dec
fdivs
das
add
out
movsb
ja
in
dec
mov
cwtl
addr16
adc
arpl
adc
test
rcr
pop
sbb
hlt
sbb
ljmp
cmp
push
push
fnsave
cmp
test
rcrl
sbb
cmp
cmp
add
fstp
bound
add
pusha
test
sub
jge
or
insb
addr16
jmp
push
push
add
sahf
sbb
pop
inc
ffree
jg
aad
pop
insb
jb
xchg
push
mov
imul
inc
nop
data16
add
add
int3
sub
cmc
pusha
lea
jmp
mov
mov
inc
add
flds
roll
sub
xchg
addr16
adc
into
dec
push
frstor
in
adc
mov
mov
mov
cmp
and
andl
cmpsb
testl
es
inc
sbb
stos
es
pop
add
test
push
popf
cmpl
aas
mov
mov
addr16
push
pusha
lea
jb
push
push
mov
pushf
movl
pushf
lea
jmp
push
jle
xchg
xchg
jmp
rorl
iret
fsubs
mov
loopne
or
mov
out
or
fnsave
iret
into
aam
ret
pop
mov
je
cli
cmp
out
ss
popa
mov
inc
negb
daa
sbb
pop
pop
xor
dec
out
dec
idivl
jg
jne
sbb
loope
orb
arpl
ja
cmp
pop
jg
inc
orb
mov
or
xor
shrl
inc
inc
jp
ljmp
test
pusha
xor
mov
pop
mov
mov
adc
sbb
or
and
inc
nop
mov
cmpsb
jmp
dec
mov
fnstcw
push
or
cmpsb
mov
jmp
push
js
push
scas
xchg
xlat
nop
mov
movsb
xor
inc
xor
ret
push
add
pop
inc
add
jge
cmc
dec
sub
stos
leave
out
test
sbb
les
inc
and
xor
and
add
cmp
rol
jno
push
push
cs
cs
out
xor
imul
icebp
jg
lret
mov
test
cmc
shll
cltd
in
jg
bound
lret
jne
dec
jp
in
cmpsb
adc
andl
adc
push
jecxz
lods
aad
xchg
jg
in
fbstp
scas
popa
adc
xchg
mov
mov
fstps
push
xchg
rcl
movsb
int
in
daa
loopne
xor
xchg
ret
xor
mov
mov
jbe
pop
pushf
outsl
cmp
jecxz
mov
sti
inc
fdivl
sub
inc
outsb
jecxz
mov
add
ds
xchg
add
push
arpl
inc
decl
xchg
rorl
int3
xchg
sub
pusha
clc
out
loopne
inc
or
and
pusha
outsb
inc
nop
fs
std
fwait
push
sbb
ds
jge
jle
push
rclb
cwtl
cmpsb
xchg
xchg
push
adc
cmpb
mov
push
inc
mov
adc
addl
nop
jnp
pop
xchg
test
sbb
mov
imul
add
test
lret
scas
cwtl
les
push
test
pusha
fstpl
fwait
push
ljmp
pop
xchg
loopne
dec
push
pop
lods
and
aaa
xchg
xchg
xchg
mov
and
add
inc
int
mov
stos
cmp
imul
incb
jns
andl
xlat
in
add
into
data16
mov
mov
scas
mov
icebp
cmp
mov
ja
mov
push
push
imul
movsl
mov
sbb
and
push
add
xchg
mov
mov
mov
sahf
lret
dec
outsl
int3
jmp
pop
mov
sbb
mov
out
or
fdivrs
mov
ljmp
add
mov
xchg
insb
sbb
jns
mov
dec
sub
test
arpl
outsl
xor
shll
sbb
inc
sbb
sub
jle
jecxz
stos
jno
ja
arpl
scas
mov
mov
or
sub
mov
arpl
lds
stos
mov
mov
ljmp
dec
or
mov
inc
nop
xchg
lods
out
cs
lea
push
out
xchg
jae
nop
hlt
js
or
pop
adc
icebp
lods
mov
nop
ljmp
and
adc
test
loope
std
dec
aas
xor
xor
int
mov
sub
scas
daa
xchg
xor
lret
bound
pop
sbb
imul
cmpsb
ret
xchg
mov
lahf
stos
mov
imul
xchg
data16
mov
inc
nop
bound
xor
jmp
inc
cvtpi2ps
push
dec
ret
mov
cmpsl
movsb
mov
test
xchg
push
stos
jecxz
cmp
adc
xchg
int
in
out
inc
mov
mov
jo
les
dec
sub
pop
xor
sub
bound
inc
cld
push
popf
das
stc
idivb
lret
lods
in
and
andl
sahf
ljmp
pop
inc
pusha
jmp
jp
jbe
lret
pop
nopl
stos
mov
shlb
xchg
or
pop
sub
cwtl
jbe
aas
jp
sbb
xor
adc
cmp
addr16
imul
sub
mov
mov
adc
pop
sbb
mov
je
mov
nop
popa
in
icebp
add
inc
out
out
in
mov
arpl
int
cmp
inc
sub
sbbb
pop
and
push
sbb
test
mov
mov
xor
fcmovb
pop
and
mov
insl
push
imul
lock
xor
push
iret
xchg
mov
mov
mov
incl
test
mov
hlt
add
and
fisubl
jge
outsb
cmp
push
or
inc
nop
pusha
ja
jge
sahf
bnd
popf
dec
ja
mov
pop
aad
cmp
arpl
inc
or
bound
mov
lods
lea
icebp
andl
inc
mov
lcallw
xchg
mov
sub
xchg
xchg
mov
sub
repz
iret
leave
sarb
cmp
or
sbb
cmp
or
push
dec
test
sbb
sahf
cmc
jl
sbb
cmp
adc
push
btc
cwtl
movsb
and
push
jb
ljmp
push
mov
or
neg
pop
ja
inc
jnp
loop
mov
in
xchg
lcall
cmpsb
fisttpl
packuswb
push
movsl
shll
jno
call
or
iret
in
test
insl
dec
pop
mov
ss
dec
mov
fwait
xchg
push
loope
cmpsl
sub
adc
lret
adc
cmp
mov
ret
psubsw
adcl
fiadds
push
stos
cmp
mov
loope
test
inc
cli
sti
enter
add
add
inc
sbb
insl
iret
push
pop
sbb
adc
cmpsl
and
iret
mov
cltd
dec
inc
nop
pusha
unpcklps
mov
add
inc
loope
or
mov
push
xrelease
pop
and
pop
pusha
inc
jmp
je
rclb
in
jg
sub
iret
jp
jmp
xor
rcrb
je
adc
in
outsb
popf
imul
and
in
and
jmp
cltd
sub
rcll
push
repnz
pop
sbb
pop
mov
pop
fnstcw
jno
mov
daa
jl
lods
push
xor
nop
sbb
sub
insl
jns
int
jp
je
sbb
pop
mov
push
cltd
and
adc
rorb
or
inc
cmpsb
out
out
adc
rol
pop
lods
add
je
jg
push
jmp
adcl
or
lods
outsl
add
mov
into
bound
repnz
pop
jecxz
loopne
cmp
fadd
push
and
mov
add
inc
sbb
pop
in
dec
lods
adc
mov
xor
out
hlt
xor
lock
sbb
insl
iret
xor
add
test
jge
push
pushf
mov
inc
jmp
inc
xchg
icebp
pushf
and
xchg
popf
decl
outsl
test
pop
movsb
test
and
fcoms
sarb
pop
cmp
ss
or
mov
or
ss
cltd
test
xor
push
loopne
pop
ljmp
xor
stos
imul
dec
inc
rclb
shl
jle
cmp
and
sbb
push
and
inc
jb
dec
cmpsl
pusha
mov
sti
mov
mov
jge
pop
inc
iret
xor
add
jle
cmp
dec
daa
inc
cmp
std
je
xchg
ljmp
adc
mov
sti
or
cmp
cmp
pop
xchg
add
int
aaa
xchg
lods
pusha
and
push
gs
push
fisttps
stos
add
dec
cs
out
and
dec
mov
push
dec
mov
cltd
push
pop
mov
les
mov
mov
in
fdivrl
sub
cmp
or
mov
fadds
cli
or
scas
push
out
jecxz
jge
test
stos
sub
mov
push
rcrb
push
rorb
sbb
popa
sub
mov
pop
leave
xchg
push
shlb
jmp
inc
and
dec
add
mov
and
push
mov
mov
in
stos
arpl
ficoms
jnp
inc
cli
fdivl
rclb
fsubp
jb
sub
out
mov
cs
mov
pop
cwtl
stos
mov
inc
and
popa
dec
das
fisttps
lea
jmp
pusha
call
movl
pushf
pusha
movl
pushf
mov
pushf
lea
jmp
pusha
pushf
jmp
mov
dec
aaa
lods
ficompl
mov
mov
sub
pop
repz
sbb
pushf
pop
aas
imul
cmpsl
roll
nop
pop
ret
shrl
stos
jmp
inc
jl
mov
and
add
dec
mov
repnz
orb
mov
xchg
sub
movsl
andb
mov
insl
lods
dec
icebp
pop
pop
lock
es
fists
and
aad
fcomps
inc
nop
pop
push
jb
in
lret
mov
out
pop
sub
add
dec
push
js
mov
cmc
insl
insb
stc
jns
stos
push
dec
clc
mov
sbb
adc
in
sete
into
test
add
or
lock
jmp
movsl
or
sbb
fnstsw
imul
pop
fisubl
inc
nop
pop
cmpsw
orb
push
je
push
and
dec
div
and
inc
mov
in
jbe
ja
ja
mov
lahf
imulb
nop
pop
mov
repz
inc
nop
xorb
out
jb
mov
mov
dec
mov
cmc
or
data16
xor
xor
dec
es
dec
and
and
mov
loopne
ljmp
cmpsl
rolb
nop
pop
add
mov
xor
push
mov
call
mov
pop
gs
push
cld
loop
adcl
pop
pusha
lahf
xchg
sub
daa
sub
adc
fiadds
icebp
shll
lcall
cmp
cmp
imul
pop
js
adc
loope
popa
aaa
movsb
jb
imul
cmp
or
pop
jbe
mov
add
imul
sbbb
add
pusha
push
movl
mov
lea
jmp
add
jge
jge
andl
pop
ljmp
addl
aam
cmp
stc
push
les
loopne
dec
and
aas
mov
rclb
inc
insl
dec
and
leave
dec
mov
repnz
push
add
mov
adc
xchg
inc
nop
pop
daa
pop
push
mov
adc
aad
mov
shlb
jo
fwait
cld
mov
repz
ljmp
inc
loope
popa
cmp
pop
sbb
hlt
push
je
mov
insl
js
dec
out
es
stos
mov
daa
push
jb
roll
inc
nop
pop
inc
inc
pop
fidivl
mov
in
mov
pushf
das
dec
push
lcall
add
hlt
clc
mov
stos
aam
mov
xchg
jmp
push
in
pop
aas
cmpsb
mov
push
mov
push
ss
add
push
mov
adc
pop
push
jae
mov
movsl
pop
inc
seta
pusha
jo
shll
out
test
adc
lahf
es
test
or
sub
sbb
push
outsl
add
push
mov
js
sub
xchg
inc
inc
mov
fnstcw
or
int3
je
adc
and
add
int3
sbb
ja,pt
xor
pop
inc
sbb
inc
xchg
and
or
and
jmp
lock
cmp
xchg
sbb
sbb
je
dec
sub
icebp
jae
jge
push
or
out
popw
shl
mov
aam
mov
iret
xchg
xchg
push
pop
imul
pop
cmpsb
into
rcrb
imul
cld
jecxz
or
sbb
jmp
jno
test
mov
mov
sahf
andl
adc
inc
pop
fadds
sbb
inc
nop
pop
lahf
lods
cmpsb
push
movl
pusha
movl
push
pusha
push
lea
jmp
pop
data16
mov
shrb
mov
cmp
inc
xor
stos
mov
mov
sub
push
sub
push
dec
out
frstor
lret
mov
mov
cwtl
ror
ljmp
ds
ret
sti
fdivs
nop
inc
nop
push
shl
sbb
or
loope
mov
mov
jae
sbb
fiadds
aas
inc
xchg
or
mov
repz
inc
test
in
pop
inc
loopne
xor
mov
and
cli
roll
cmpsl
or
dec
test
mov
pop
jmp
fwait
jae
ljmp
jmp
cwtl
mov
in
loop
mov
add
xor
mov
nop
push
cli
and
xlat
xor
xchg
jecxz
or
lret
pop
cmp
or
or
mov
add
int3
mov
and
scas
or
jle
inc
dec
sbb
aaa
addr16
adc
lcall
cmp
lret
sub
ret
inc
nop
push
pop
xor
and
cs
vpmaddwd
push
add
fsubrs
dec
jl
imul
lods
in
cmpb
or
push
or
aaa
and
xchg
mov
les
add
pushf
cmp
aam
jb
daa
in
loopne
flds
pop
sbb
cld
mov
packssdw
fmull
fmull
lock
mov
push
xchg
repz
fsubrs
out
pop
imul
push
aad
in
push
adc
cmp
inc
mov
cs
fimuls
loope
movaps
push
int3
shll
mov
push
dec
in
cltd
and
inc
push
stc
jno
pop
cmpb
or
mov
leave
dec
adc
das
lea
clc
clc
push
addb
jns
jge
cmp
test
lds
enter
lea
leave
stos
inc
inc
nop
push
add
pop
and
jmp
cmp
pop
js
les
jo
enter
stos
mov
push
push
lods
ss
sub
mov
out
xor
cmpsb
sbb
mov
imul
in
addl
fsubrs
mov
fbstp
into
sbb
scas
dec
lret
testb
jp
xchg
jmp
out
mov
cmp
cmp
js
aam
fnstcw
dec
jmp
dec
sub
out
sbb
sbb
fstl
fistpll
push
imul
mov
cmc
pop
negb
in
dec
xor
popa
cmp
jg
ljmp
mov
jne
inc
inc
fdivs
adc
andb
adc
cmp
adc
pop
lds
rol
arpl
adc
pop
push
push
leave
xchg
push
dec
sub
jns
inc
sub
pop
adc
js
xor
dec
aas
add
ljmp
in
in
ffree
inc
call
mov
xor
je
sub
roll
dec
sub
loopne
push
push
pop
jmp
mov
rcrb
mov
mov
cmpl
test
mov
ror
jb
jno
mov
and
out
sub
mov
stos
insb
jmp
ficoms
pushf
jne
aam
fldenv
in
sub
mov
and
jg
movsb
repz
jge
or
lret
clc
mov
arpl
inc
call
mov
push
pop
pop
inc
nop
push
call
mov
push
or
out
push
xor
push
loopne
ret
jns
add
xor
push
sub
hlt
call
hlt
insl
xchg
jecxz
je
xor
clc
adc
cmp
dec
imul
and
add
rclb
sub
push
lahf
les
sbbb
sbb
mov
xchg
bound
int
pop
sub
mov
jns
fmulp
shl
jne
sarb
xor
inc
sbb
or
or
movsb
push
call
aad
pop
data16
gs
les
push
and
xchg
pop
push
stc
loop
mov
jb
pop
inc
pop
fstl
pop
in
dec
cmp
or
adc
push
adc
mov
pusha
dec
dec
ljmp
aam
push
daa
jp
cld
shll
lds
dec
push
pop
repz
lcall
jne
shrl
ja
addr16
adc
mov
jp
mov
jge
jnp
or
sbb
clc
movsb
loop
scas
ljmp
mov
add
push
or
xor
shl
sub
fidivs
hlt
xchg
fbstp
sbb
imul
or
dec
daa
add
cmp
and
aam
sbb
fiadds
fmul
xchg
and
ss
mov
mov
outsl
pusha
mov
jns
pop
push
inc
or
rcrl
insl
dec
push
test
hlt
out
arpl
dec
nop
outsl
jbe
ja
jmp
shrl
testl
mov
sti
jle
xor
push
fcom
lods
lret
mov
call
or
mov
jg
out
fstpl
adc
andb
mov
inc
cmp
lock
adc
lahf
subb
jmp
mov
or
popf
rclb
inc
and
lret
sub
imul
pop
cmp
stc
inc
nop
push
xchg
sbb
jbe
aad
mov
loopne
jecxz
or
push
addb
pop
stc
mov
mov
cmp
loope
lea
mov
mov
es
jo
jb
inc
sub
or
inc
nop
push
jbe
jbe
pusha
adc
mov
inc
jge
jo
dec
adc
cwtl
out
and
jo
pop
push
dec
jl
in
repnz
or
pop
popa
jl
push
jae
inc
push
aad
stos
cmp
cmp
sub
cmp
push
and
ljmp
ds
jae
jb
call
push
call
js
add
les
ret
pop
lahf
orl
leave
dec
iret
jge
sub
loopne
sbb
add
cmp
outsl
dec
mov
xchg
ret
and
dec
push
cmp
outsl
sub
std
mov
jno
cs
lret
cwtl
adc
mov
jge
rcrb
xchg
mov
push
cmpsb
fidivrs
lds
push
enter
sbb
push
or
ljmp
js
fwait
push
sbb
enter
mov
shll
loope
daa
cmp
insl
pop
aad
sub
and
je
sbb
fdivr
movb
outsb
push
add
sti
in
lods
sbb
push
pop
pop
jg
push
jle
imul
add
jge
enter
mov
and
sub
movw
pushf
lea
jmp
test
outsb
ljmp
cmp
jo
pop
xor
cld
cmpsb
or
mov
mov
pop
adc
or
push
dec
mov
mov
xor
push
pop
loop
xchg
dec
popa
nop
popa
jp
mov
loop
xor
test
xchg
in
lret
pop
inc
aas
sbb
std
adc
and
or
jne
dec
ljmp
push
pusha
movb
lea
jl
push
pusha
movb
mov
pusha
lea
jmp
pusha
movl
mov
pushl
movw
pushf
lea
jmp
dec
fistpl
sub
and
inc
repnz
outsl
shrb
cmp
add
jns
jb
pop
in
push
daa
pop
cmp
mov
xor
js
test
cld
xchg
notl
mov
mov
in
jp
lahf
xlat
js
push
xchg
mov
out
sub
push
je
pusha
movl
movl
pushl
mov
lea
jmp
pop
mov
es
sub
xor
and
mov
je
mov
aad
ja
or
orl
lret
ss
sarb
inc
or
jmp
mov
add
mov
minps
insb
inc
nop
dec
in
pop
or
loope
sti
push
les
es
pop
imul
pop
push
out
mov
repz
push
or
int3
mov
loopne
sub
gs
hlt
adc
fisubrl
mov
push
sar
add
rep
rolb
push
cmpsb
jnp
repnz
movsb
sub
in
ds
jno
cli
push
test
mov
adc
xchg
je
divl
or
insl
sub
xchg
test
popf
cmp
push
dec
lock
jmp
or
or
scas
andl
push
jne
jp
mov
xchg
imul
dec
dec
mov
out
mov
daa
out
movsl
cmc
xchg
mov
out
add
xor
ret
dec
clc
cmp
dec
or
shrb
pop
inc
nop
dec
push
sub
call
pusha
push
movb
pusha
movl
pushf
jmp
in
cltd
shr
shll
insl
insl
mov
adc
dec
lds
in
push
fidivs
dec
or
sarb
out
fstp
sub
xchg
dec
adc
and
dec
cmp
lcall
les
std
mov
adc
inc
lods
inc
in
dec
fisubrs
push
cmp
or
push
jo
push
mov
je
hlt
sbb
xchg
or
sub
pop
mov
std
in
cld
cltd
out
and
notl
shrl
xchg
mov
pop
sbb
jg
push
mov
aam
xor
xchg
sbb
pop
push
fsub
jns
sub
imul
push
pop
jp
ja
dec
fldl
aam
es
nop
cmc
test
xchg
cltd
decl
nop
dec
into
into
test
mov
mov
mov
es
push
fs
aam
icebp
insb
test
pop
in
test
fiadds
xchg
push
push
int3
or
sbb
insb
cmovns
mov
in
xchg
in
loop
out
inc
bound
pusha
inc
imul
sub
dec
sub
out
xor
lods
sbb
sbb
cli
dec
sub
sub
testb
jb
pop
inc
popa
add
subb
cmpsb
adc
loope
inc
stos
jns
adcl
fldenv
mov
cmp
push
pop
or
imul
push
lahf
idiv
sahf
adc
out
xchg
push
pushf
jmp
xor
push
or
lret
xchg
fiaddl
imul
jo
dec
jp
fnstcw
xchg
rcr
push
dec
bound
aam
jecxz
stos
daa
bound
sbb
hlt
mov
push
dec
push
mov
flds
mov
and
lds
aas
jo
inc
jl
andl
popf
add
enter
cmpsb
mov
outsb
pop
cmp
push
out
add
adc
lahf
pop
fcoml
xchg
jae
xchg
xchg
mov
hlt
sbb
mov
ret
iret
test
cmp
shlb
pop
ret
stos
sub
mov
stos
shrb
jp
or
jno
cli
inc
nop
dec
jnp
mov
jne
add
out
jecxz
shrb
jb
ret
cmp
push
cwtl
push
inc
pop
stos
shlb
pop
pop
inc
jp
and
jg
hlt
rcrl
mov
enter
xor
jp
xchg
shrb
imul
xor
call
push
or
xchg
insb
cs
sbb
iret
test
cwtl
fldcw
jnp
cmp
mov
jae
sbb
mov
add
scas
je
mov
mov
nop
dec
hlt
push
add
pushf
movb
movl
call
movl
pushf
pushf
pushf
lea
jmp
pushf
pushf
movl
push
pushf
pushf
lea
jmp
call
call
pop
xchg
sub
lret
pop
mov
jg
mov
lret
nop
cld
movsb
daa
dec
push
not
inc
outsb
mov
ret
fistpl
and
inc
out
ja
daa
loope
bnd
nop
mov
ds
repz
inc
repnz
jno
dec
and
sbb
add
inc
nop
dec
int
jmp
sbb
insl
test
add
cmp
pusha
pushf
lea
jmp
pushf
movl
pusha
call
cs
les
xor
cmc
fwait
pop
push
pop
popa
jg
mov
sahf
outsl
and
cmp
inc
test
dec
mov
inc
cwtl
mov
cmp
jmp
xchg
mov
xchg
cwtl
xor
aam
cmpsb
addl
sahf
push
or
mull
movsl
fdivrs
mov
out
and
ja
nop
pop
iret
mov
insb
add
loope
pop
xchg
jb
push
pop
cmc
ret
pop
in
adc
js
inc
lods
jecxz
xlat
cwtl
xchg
jp
loop
mov
push
cmpsb
adc
or
bound
adc
xchg
ljmp
adc
fidivrl
scas
and
sahf
or
movsl
add
test
movsb
cli
cmp
dec
fldpi
shll
insl
push
lahf
lcall
xchg
fimull
jo
hlt
dec
loope
cwtl
out
ret
in
xor
jg
dec
push
ljmp
sarb
cltd
sbb
inc
cld
dec
push
sbb
je
pop
add
mov
or
int3
int
xor
jmp
push
loop
jecxz
stc
inc
sbb
mov
mov
in
icebp
je
xor
jno
fdivl
setp
inc
enter
shll
pop
fdivs
push
stc
in
popf
sti
fistpl
not
arpl
stos
daa
pusha
adc
dec
mov
push
pop
or
mov
icebp
cmp
cmpb
add
lock
or
fmull
adc
js
in
sub
cmp
xchg
push
add
dec
stos
mov
add
pushf
insl
rcl
push
push
cmpsb
repnz
pop
out
sub
pop
or
mov
push
xchg
nop
in
push
xchg
mov
adc
into
or
fildl
cmp
pop
inc
push
call
test
out
jo
lds
jle
out
int
lods
mov
insb
lods
dec
mov
hlt
dec
insb
sub
idivl
xchg
ret
mov
inc
mov
aas
mov
sahf
mov
pop
je
pop
lds
pushf
test
test
in
imul
stos
test
cltd
das
inc
out
sub
jl
pop
daa
add
sti
mov
stos
out
mov
cmpsl
ret
fstpt
xchg
pop
jge
je
lods
cmc
dec
cmp
popa
add
outsl
scas
popa
in
insl
aas
xor
test
jno
mov
push
jb
fistps
mov
sbb
xor
xor
es
inc
test
jmp
sub
xor
sub
dec
daa
mov
fstpl
mov
repnz
cmp
dec
les
call
cwtl
jne
dec
pop
mov
inc
xor
popf
out
filds
pop
mov
nop
inc
mov
out
push
fcomps
sub
out
test
adc
pop
inc
stc
sub
xchg
aam
pop
daa
je
mov
jno
mov
or
clc
fisttpl
lret
and
add
pop
scas
clc
xor
pop
mov
ret
sbb
outsl
pop
outsl
pusha
ss
mov
cmp
dec
mov
mov
cmp
ror
mov
xor
out
bnd
ja
adc
jns
pop
or
mov
cli
repz
es
sbb
ret
test
xchg
mov
push
inc
nop
inc
inc
inc
test
fisubrs
sbb
ljmp
xor
pop
fdivrp
mov
mov
cmpsb
fnstcw
int
je
mov
scas
mov
fdivl
int
and
pop
lret
mov
rcrl
push
lea
push
push
sbb
mov
xchg
mov
xor
pop
iret
loopne
jecxz
sub
sbb
mov
pop
cmp
inc
nop
inc
xchg
fstps
xor
arpl
xor
nop
push
imul
mov
ret
xchg
cmp
push
add
addb
sub
cltd
sub
bound
sub
add
push
popf
xor
dec
and
lahf
mov
adc
insl
ja
push
ljmp
pop
pop
inc
adc
loope
dec
inc
nop
inc
or
mov
aad
in
ja,pn
inc
sbb
jge
jecxz
std
adc
mov
lds
adc
mov
push
sub
add
jae
sub
std
fdivs
in
loop
jns
mov
gs
outsl
jg,pt
mov
mov
nop
inc
or
ljmp
add
ret
ds
std
jne
mov
test
bound
xchg
xor
jb
loop
jnp
inc
fisubl
jle
out
or
push
mov
and
aad
push
jge
lcall
test
and
jge
mov
and
xor
movsl
inc
nop
inc
cmpsb
lea
mov
jne
mov
pop
jnp
push
or
cmp
fidivl
fsubp
xlat
sub
inc
ljmp
stos
aam
fisubs
xor
pop
xor
or
sub
mov
aad
sub
add
push
or
pop
xor
cld
cmpl
jmp
cmp
addb
in
in
das
addr16
mov
cmp
fs
bound
or
or
or
mov
inc
testb
adc
cmp
popf
mov
ret
add
data16
js
out
int
mov
mov
outsl
addl
push
loope
popl
xchg
mov
incl
sbbb
jns
ljmp
rolb
fadds
mov
sti
aas
cmp
cmp
cli
pop
fwait
jb
jmp
in
xor
jae
in
fs
cs
mov
sbb
stc
les
add
mov
push
adc
and
add
jle
xchg
mov
xchg
lcall
add
or
in
pop
iret
and
or
add
jne
rcrl
or
stc
stos
stc
xchg
into
shll
or
sbb
fdivr
xchg
dec
pop
clc
inc
fs
insl
cltd
lret
loopne
loop
std
push
inc
nop
inc
push
jne
pushf
jmp
push
dec
aam
mov
mov
loop
ret
jl
xchg
movsl
mov
mov
mov
pop
sub
dec
aaa
ja
test
push
fcmovne
stos
jbe
lods
jbe
aam
daa
clc
mov
xchg
ret
test
dec
aad
lret
mov
xor
popf
ffree
movsb
adc
or
push
pop
pop
in
aaa
push
enter
aam
or
lea
jno
sub
jl
pop
incb
decb
or
push
push
addr16
inc
nop
inc
ja
ja
aaa
inc
fcmovu
sub
iret
shrb
or
jg
cwtl
push
jo
inc
es
lods
cli
fstps
out
pop
cmp
sub
adc
repz
fsubs
jp
mov
jne
sub
adc
jge
dec
cld
aas
dec
push
subl
add
shrl
test
mov
sub
xchg
push
jbe
xchg
loope
xor
xor
and
in
mov
or
push
js
es
inc
iret
dec
icebp
das
push
push
ret
jne
mov
ret
and
scas
jne
dec
rcrb
xchg
pop
inc
or
xchg
inc
nop
inc
scas
fsub
out
add
sub
dec
xchg
repnz
shll
push
xchg
xlat
testl
jnp
int
sub
sbb
icebp
pop
cmp
or
aaa
fnstenv
mov
jo
cs
or
mov
rcll
insb
add
jp
ret
dec
mov
popfw
jmp
mov
dec
test
xlat
sub
fadds
inc
nop
inc
inc
inc
pop
and
mov
sub
ss
cmp
or
lahf
or
pop
loopne
mov
mov
js
jne
inc
and
nop
inc
and
mov
jmp
daa
dec
jl
hlt
ja
jle
mov
movsb
cli
mov
fdivrs
inc
nop
jns
jnp
andl
ds
mov
popf
push
dec
fs
cmp
pop
stos
in
insl
xor
pop
dec
fwait
inc
nop
inc
fsubr
loopne
ja
mov
xor
add
xchg
sbb
mov
cli
lods
and
je
loope
mov
loop
pop
lret
mov
fwait
daa
rclb
loope
popl
cwtl
adc
sub
imul
sub
arpl
cmp
les
fcompl
mov
mov
sub
mov
cmp
xchg
mov
inc
xor
sahf
adc
add
inc
and
add
int3
mov
and
jmp
insl
push
cmp
out
inc
lock
test
in
add
daa
pop
or
xor
outsb
aaa
add
ss
mov
sub
push
jae
mov
pushf
or
call
les
xor
fisubrl
rol
and
aam
data16
xor
xchg
mov
inc
nop
inc
jecxz
in
movl
movb
movl
pushl
pusha
lea
jmp
movl
pusha
pusha
movl
pushf
pushf
lea
jmp
jp
push
pushf
push
lea
jmp
imul
sub
call
mov
sub
pop
inc
and
gs
cwtl
fdivr
lcall
adc
mov
sub
ss
mov
cmpsb
cld
pushf
and
addr16
push
push
lods
imul
outsl
pop
jmp
in
push
push
pop
or
inc
nop
inc
push
jbe
pusha
pusha
call
sub
data16
sbb
dec
jnp
sub
clc
cmpsl
in
jecxz
aas
fisttpl
cmp
cmc
push
jmp
ds
psubd
enter
int
sbb
out
sub
mov
inc
xor
inc
test
adc
cmp
jmp
fnstcw
rorl
xlat
inc
add
pop
or
sbb
arpl
in
aas
cmp
pushf
jmp
xor
call
fisubrl
nop
ds
cld
push
call
movb
movl
push
pusha
movb
lea
jmp
push
pusha
pusha
movb
call
jmp
daa
sti
mov
fsqrt
out
sub
lds
int
adc
mov
xlat
int
popf
arpl
mov
icebp
cmp
xchg
inc
repz
mov
pop
nop
add
addr16
pushf
mov
push
jmp
xchg
adc
mov
enter
mov
mov
aad
test
lds
mov
sub
clc
jge
inc
call
int
or
js
mov
mov
bound
jge
inc
aaa
sub
cwtl
je
push
stos
popl
dec
dec
pop
mov
sbb
add
mov
sub
adc
bound
das
fcmove
insl
or
jns
inc
mov
rcrb
xchg
mov
add
lret
aaa
inc
outsb
xchg
jno
mov
imul
adc
in
movsb
iret
adc
xor
outsb
push
cmp
jae
pop
cmp
inc
nop
cmp
add
lea
xor
jmp
cmp
push
fisttpl
test
push
mov
js
mov
in
cli
inc
cmp
jbe
pop
inc
nop
cmp
xchg
push
dec
jmp
and
inc
lret
mov
xor
aam
cmp
adc
jmp
pop
adc
mov
sub
insb
fimull
sub
frstor
xor
cmpsl
pop
test
dec
dec
inc
nop
cmp
xchg
mov
or
icebp
inc
adc
jp
inc
out
int3
mov
and
mov
dec
xlat
lret
pop
das
mov
iret
repz
in
lods
inc
mov
in
dec
sub
sub
ljmp
shrl
shlb
aam
or
mov
mov
mov
addb
cmp
pusha
jo
std
jnp
rcr
ds
add
outsl
ss
hlt
mov
cmpsl
xor
scas
jp
loopne
scas
mov
push
jmp
movsl
int
mov
push
xlat
out
adc
lods
das
mov
ljmp
cmc
mov
ror
add
sub
jo
outsl
test
lds
das
ja
aad
jmp
sub
cmp
jb
and
jne
jo
xchg
enter
cwtl
inc
nop
cmp
jmp
jns
add
inc
cmp
mov
add
filds
xchg
in
scas
push
aam
jecxz
push
pop
int
add
pusha
push
popa
pop
pop
push
dec
es
int3
addb
cmp
push
dec
sub
rcrb
xchg
cmp
sbb
loope
add
cmp
or
loopne
nop
roll
cli
pushf
xchg
sub
iret
or
shrb
xor
jge
lahf
lods
stc
andl
in
or
sub
adc
add
dec
sbb
add
pushf
lgs
jle
and
sti
fisubs
sbb
inc
cmpsb
sub
pop
loopw
jo
cmp
cmp
loope
jg
popa
add
add
pop
fimull
cltd
push
or
out
or
fst
pop
adc
sbb
pushf
inc
nop
cmp
out
rolb
mov
test
movsb
es
push
push
inc
and
mov
jmp
sahf
push
lods
prefetch
orl
enter
xchg
push
xor
cmp
xor
and
ret
sti
inc
and
sbb
push
leave
push
pop
cmp
add
out
sub
lea
cmc
aad
cwtl
mov
sbb
push
mov
les
fchs
sub
lahf
addr16
and
xchg
idiv
popa
out
add
push
cmp
mov
mov
adc
adc
into
inc
nop
cmp
inc
and
movl
pushf
movb
pushf
lea
jmp
movl
pushl
pushf
call
pushl
movl
mov
movl
pushf
lea
jmp
fidivrl
dec
data16
xor
hlt
lcall
adc
xchg
mov
pop
xchg
mov
mov
sub
mov
fsts
pcmpgtd
inc
cli
push
out
aad
das
ret
cmp
sub
pop
mov
xchg
leave
imul
pop
pop
inc
push
mov
hlt
jl
nop
subl
std
adc
jle
pop
jbe
int
mov
xor
jmp
test
arpl
and
imul
ds
rclb
jb
in
lret
adc
sub
dec
outsl
aaa
pop
enter
movsl
mov
jae
sbb
test
hlt
int3
scas
ret
jl
pop
add
inc
nop
cmp
push
sub
lcall
mov
out
aas
inc
shrl
out
enter
loopne
xor
jmp
add
das
mov
inc
inc
xchg
and
fstps
xor
pop
inc
mov
push
xchg
imul
gs
insl
jo
arpl
push
cmp
mov
nop
cmp
cld
add
and
lret
lods
cld
ljmp
pushl
movl
lea
jmp
mov
mov
imul
clc
inc
adc
jge,pn
fs
mov
clc
in
cmp
sbb
xchg
mov
mov
repnz
xchg
sub
push
adc
push
push
push
dec
les
into
xlat
inc
cwtl
sarl
in
rcl
push
aad
pop
cmp
add
aad
nop
cmp
dec
dec
jmp
push
dec
push
xchg
into
movsb
xor
jl
inc
cwtl
aam
pop
pop
lret
shr
ror
jl
stc
out
ret
cmp
popf
add
mov
test
cmp
sub
push
pop
mov
jecxz
insl
adcl
pushf
sbb
mov
fcmovnu
cmc
mov
add
jb
dec
cmc
mov
rolb
cmp
mov
clc
pusha
jg
mov
add
jmp
pop
cmp
pop
inc
sub
or
xor
jge
sahf
fstpt
mov
loop
in
out
lods
xlat
pop
push
pop
inc
xor
pop
mov
mov
pusha
and
test
daa
mov
xchg
ret
cs
nop
cmp
outsl
jbe
and
jae
lea
pop
pop
insb
or
icebp
jae
and
dec
pop
xchg
scas
jo
adc
mov
es
mov
push
jecxz
xor
adc
mov
mov
xor
mov
ja
lahf
xchg
mov
test
mov
loopne
cmc
es
pop
inc
pop
sub
mov
mov
jg
stos
imulb
mov
rolb
adc
popf
sahf
hlt
xchg
push
dec
adc
imul
inc
js
xor
rcr
adc
pushl
js
test
mov
sub
bound
in
cmp
cmpsb
jo
dec
add
addr16
insl
out
stos
sar
push
inc
inc
add
lret
mov
mov
lea
or
push
movl
pusha
pusha
lea
jmp
pusha
test
jae
inc
sbb
mov
push
sbb
iret
pop
cmc
and
in
hlt
andl
cli
push
hlt
dec
mov
ret
pop
xor
data16
test
and
mov
or
fisubrs
xchg
rolb
stos
cmc
fsubrl
dec
adc
insw
sbb
into
push
sub
mov
add
sarl
inc
nop
aaa
aas
jg
in
in
xchg
mov
xchg
loopne
jns
stos
leave
sbb
cld
adc
xchg
aaa
adc
mov
in
aad
cli
inc
sub
out
in
mov
mov
lods
push
dec
out
push
add
xchg
out
cmp
aad
push
gs
test
ja
clc
sub
cltd
in
mov
lock
xchg
mov
xor
pop
mov
pop
gs
enter
stos
icebp
xchg
lret
ficomps
jae
nop
xchg
ds
push
or
adc
out
vsubpd
in
fiaddl
aaa
enter
lcall
mov
dec
mov
sub
dec
or
in
pop
mov
hlt
insl
pop
iret
call
cmp
add
pop
ss
mov
ss
inc
stos
mov
hlt
push
ja
sub
xor
inc
clc
jb
jo
jno
inc
push
or
clc
pop
inc
ret
mov
repz
loopne
in
sub
ret
push
int3
mov
test
dec
nop
jl
mov
lods
cs
dec
ljmp
lods
out
mov
test
or
jns
shl
nop
shll
and
loope
shll
aas
and
inc
nop
xor
leave
cs
mov
enter
movsl
pushf
int
adc
pop
jno
sub
or
in
notb
fdivs
sti
mov
cmp
push
xor
movsl
adc
in
sbb
and
test
push
dec
sub
sub
das
popf
sub
adc
inc
sbb
add
ljmp
xchg
adc
pop
sbb
nop
xor
stos
outsb
lds
push
jmp
sbb
jb
jb
rcll
sub
mov
and
jae
lock
in
jmp
xor
or
jp
ja
pop
inc
push
or
sbb
jmp
lahf
jno
in
stos
mov
std
orl
std
adc
dec
sub
pop
and
ja
mov
cli
jecxz
arpl
inc
add
mov
adc
sub
mov
lods
xchg
push
bound
mov
cmp
popf
dec
sahf
dec
jnp
mov
and
and
in
add
sbb
aam
jb
insb
jns
xor
xor
je
sub
iret
mov
mov
inc
sarb
dec
jo
sbb
mov
fnstenv
push
test
xor
in
jle
movl
pusha
mov
pushl
lea
jmp
or
popl
sarl
ss
pop
xchg
or
pusha
xor
outsl
jmp
in
out
stos
mov
push
add
mov
push
in
push
sbb
fnstsw
dec
mov
fadds
iret
mov
jnp
cld
inc
je
jmp
rcr
lock
stos
aaa
sub
inc
nop
xor
cli
sti
movl
push
pushf
lea
jmp
ljmp
notb
cmpsl
mov
out
out
dec
lea
xchg
rorl
fisttpl
test
sbb
mov
mov
pop
out
outsb
sbb
insl
aas
and
aam
aad
sub
adc
cwtl
add
lods
mov
inc
nop
xor
dec
inc
adc
xchg
sub
stos
scas
jg
xchg
ret
push
add
ja
insb
jmp
jbe
js
mov
ja
mov
or
je
in
adc
pop
and
and
xor
add
or
es
mov
js
sbb
clc
hlt
popf
aam
jo
nop
xor
xchg
dec
cmp
add
lcall
in
bound
incl
and
cmp
dec
push
lock
dec
push
filds
inc
sti
and
xchg
jp
outsb
pop
sbb
jl
xchg
cld
jno
add
xchg
push
cmp
xchg
mov
sub
cltd
jmp
inc
mov
cmp
push
cmp
fsts
je
fstps
ss
sbb
inc
nop
xor
jmp
pop
mov
sbb
fstps
in
adc
push
cmp
repz
xchg
popa
and
mov
or
inc
fwait
call
and
jecxz
add
scas
jge
sbb
repz
sub
xor
sub
addr16
lods
add
dec
sbb
mov
das
mov
test
es
lahf
sbb
push
jo
sbb
lods
inc
aad
clc
cmp
push
mov
push
pop
sbb
mov
mov
nop
xor
sbb
movl
movl
movb
lea
jmp
movl
movw
push
pusha
lea
jmp
jno
rclb
lahf
pop
mov
jle
mov
sbb
outsb
add
fwait
subb
gs
push
leave
fsubrl
out
sti
insl
scas
sub
fiaddl
addb
rcll
and
mov
out
addr16
aas
dec
int
jmp
xchg
jmp
jno
dec
sahf
ss
cmp
sub
fidivs
pop
mov
aaa
popa
or
inc
nop
xor
pusha
in
js
jmp
push
fdivp
and
adc
mov
cmp
fs
push
aas
fxch
and
repz
adc
sbb
xchg
out
mov
jne
imul
pop
into
fwait
addb
or
jo
add
xor
push
and
nop
xor
std
ret
fisubs
add
mov
mov
pand
mov
push
sub
dec
sbb
mov
sbb
pop
add
lods
fiadds
outsb
and
mov
inc
inc
cmc
or
sub
rcll
das
sub
movl
pushf
pushf
movb
call
dec
sbb
xor
repz
cli
cwtl
leave
xchg
lock
xor
cmpsl
stos
nop
jnp
aad
pop
ror
mov
daa
out
in
sahf
das
sbb
add
pop
cli
cs
fisubl
push
in
mov
and
jnp
lock
scas
sti
lcall
or
or
push
inc
arpl
jae
mov
push
adc
dec
and
popf
ficomps
inc
nop
das
lret
jmp
xchg
data16
arpl
lret
jg
jns
jge
xchg
imul
loop
lahf
ret
lahf
sbb
mov
lods
mov
push
shrl
or
paddusw
mov
add
mov
repnz
sub
or
push
mov
cmc
jmp
loop
jp
mov
jne
ret
push
add
incb
subl
fisubrl
jno
stos
les
or
test
and
icebp
ljmp
aaa
or
and
test
pop
push
mov
lcall
xchg
frstor
mov
arpl
das
cwtl
lahf
fistps
fildl
cs
jmp
jmp
cmp
pop
negb
loopne
out
mov
xor
jbe
jo
movsb
adc
push
fisttpll
xchg
mov
adc
insl
add
in
sbb
in
add
pushf
push
cli
arpl
sbb
cltd
stos
and
jecxz
add
mov
mov
inc
or
daa
or
mov
ja
inc
fiadds
rorb
push
xchg
inc
nop
sub
movw
pushl
movl
mov
push
movl
pusha
mov
lea
jmp
movl
push
mov
pusha
lea
jmp
movl
pusha
pushf
push
lea
jmp
add
mov
in
fisttpll
aam
push
daa
mov
pop
inc
stc
pop
lods
shll
dec
cs
sub
rcr
dec
clc
enter
pop
xchg
adc
in
rorb
mov
fcoml
enter
call
sbb
or
imul
dec
xchg
mov
cmp
adc
pop
movsb
shrl
fistl
outsb
jmp
inc
dec
test
dec
sbb
push
out
push
popa
loope
aas
xchg
pop
mov
ficoms
aad
cwtl
xchg
jmp
stos
enter
pop
inc
xchg
mov
clc
loopne
dec
stos
aaa
stos
mov
and
xchg
pop
mov
les
or
cltd
push
clc
movsl
add
scas
add
test
cmp
loop
mov
inc
sub
fs
inc
cmp
outsb
cmp
push
inc
mov
mov
push
xchg
shll
pop
xor
dec
adc
mov
cwtl
fdivr
scas
jecxz
and
or
mov
jl
cmpsl
popf
std
repz
pop
imul
inc
repnz
into
in
gs
mov
fmull
mov
ret
aam
daa
movsl
enter
mov
sub
inc
nop
sub
loope
es
hlt
push
mov
sti
movsb
lret
xchg
xor
push
jbe
and
and
or
sub
pop
or
loopne
fnstenv
repz
in
sbb
or
fadd
lds
add
cmp
sbb
lret
mov
jmp
jl
repnz
inc
sub
faddl
nop
sub
push
shrl
inc
or
jecxz
sbb
out
adc
jmp
sbb
pusha
adc
in
js
outsl
cld
push
int
enter
faddl
mov
push
inc
out
cmpsl
shll
sbb
adc
jne
jmp
ds
add
sarb
sub
cmp
xchg
inc
xor
inc
nop
sub
test
sahf
mov
or
sbb
insl
adc
ja
insb
hlt
jl
mov
dec
adc
jg
cmp
adc
xor
xchg
iret
pop
dec
cmpsb
jnp
sub
ficompl
enter
stc
xchg
fimuls
and
popa
mov
lods
aam
xchg
in
dec
test
pop
push
roll
sub
sub
movsl
and
xor
aad
sub
lock
ds
out
popa
mov
dec
jle
xchg
in
dec
cmp
ljmp
jg
scas
sub
pusha
mov
lds
inc
in
hlt
and
xchg
in
xor
xlat
cltd
sub
jb
sbb
xchg
jnp
shrb
jns
mov
inc
or
cli
cmpb
sub
imul
xchg
insb
outsl
pop
jl
and
sub
test
xchg
aad
popf
pop
addr16
adc
aaa
push
mov
jmp
outsl
in
mov
addr16
sbbb
xchg
push
movsl
jb
push
nop
push
inc
aam
out
push
mov
and
jge
or
mov
jns
int
nop
repnz
mov
es
lods
insl
aaa
cmp
ret
cmc
mov
in
addl
mov
bound
ja
test
jno
mov
jne
and
cltd
mov
push
rcll
mov
data16
inc
mov
stos
fnstenv
mov
and
cmp
roll
es
mov
fsubrl
aaa
shlb
lods
pop
sbb
add
jge
xor
rdtsc
nop
idivl
sub
jg
call
push
movl
pushf
movw
pushf
movl
pushl
lea
jmp
xchg
stos
out
pop
mov
aam
roll
jmp
sbb
mov
shll
nop
sbb
jbe
mov
scas
sbb
daa
adc
pop
rcr
mov
xor
push
in
xchg
sbb
jnp
je
cmpsl
lods
cld
cld
inc
nop
sub
iret
xorl
out
shlb
mov
pop
pop
mov
mov
pop
xor
or
cmp
push
adc
pop
sbb
jne
push
sbbl
std
fcoml
pop
lods
xchg
lods
in
cmp
jle
inc
nop
sub
lock
dec
jge
jmp
jecxz
fldenv
into
pusha
jne
cmpsb
pop
dec
testb
jle
gs
test
xchg
and
ljmp
outsl
popa
push
lds
icebp
mov
lret
push
or
call
lock
dec
push
repnz
cmp
shll
sti
loop
add
in
sub
push
rcll
cltd
jno
add
mov
cmovl
test
add
inc
jge
jmp
or
add
sub
out
cwtl
xchg
sarb
cmp
nop
sub
out
sbb
movsb
or
mov
cmp
xor
pop
mov
lcall
cmp
or
andl
shlb
stos
mov
inc
clc
add
roll
imul
or
push
lret
rorb
adc
xor
pop
inc
orb
scas
push
out
sbb
movl
mov
mov
ss
or
mov
xchg
and
ss
dec
cld
test
mov
punpckhwd
adc
daa
outsb
pushf
xchg
repz
hlt
push
push
and
movsb
add
fcoms
pop
dec
push
out
jle
mov
mov
mov
dec
push
jle
test
push
add
jl
and
xchg
dec
es
cld
inc
dec
dec
jp
pop
pop
fdivl
jne
cmp
xchg
clc
mov
add
push
fmull
fwait
push
lret
sahf
imulb
dec
jmp
fcompl
xor
pop
sbb
inc
nop
es
ja
aaa
in
aas
clc
nop
int3
int3
jecxz
std
mov
aad
add
and
pop
leave
pop
xchg
cmp
xor
pop
push
enter
jb
fimuls
inc
push
daa
imul
adc
loop
stc
mov
pop
fsubrp
mov
push
mov
mov
adc
fimull
mov
lods
and
stc
mov
mov
xor
jg
sub
push
les
xor
pop
ret
jle
insb
sub
pushl
adcl
fnstcw
adc
jne
inc
nop
movsb
cmpsb
mov
loopne
lock
shl
cwtl
mov
insb
add
aaa
mov
test
mov
or
sub
mov
mov
lret
shrb
scas
xchg
stc
lahf
leave
xor
pushf
gs
dec
jmp
xor
cmpsl
xchg
xor
rorb
mov
jbe
push
sub
mov
shlb
outsl
movsb
dec
clc
in
or
in
jg
xchg
xchg
sarb
js
nop
and
lea
cmp
pop
sbb
jnp
inc
xchg
lret
sub
and
mov
and
test
xchg
mov
mov
frstpm(287
xchg
insl
insb
inc
ljmp
roll
decl
mov
sbb
xchg
dec
pop
or
sub
mov
jno
mov
push
out
jecxz
shll
and
pop
movsb
xchg
push
mov
cmpsl
mov
push
lret
xlat
push
pop
aas
stc
stos
pop
jmp
mov
sub
pop
outsb
and
out
cmp
in
mov
cmc
sti
psubusw
js
jne
fsts
pop
mov
int
ud2
std
jp
mov
loope
inc
dec
repz
in
rcll
jg
cmp
push
xlat
es
mov
outsb
pop
push
xchg
xchg
mov
inc
xor
and
ret
sbb
push
cmp
jl
ret
or
and
sbb
mov
xchg
dec
push
shrb
xchg
clc
dec
cmp
loopne
nop
and
mov
pop
cmpsb
mov
sub
mov
mov
and
out
mov
mov
mov
or
xchg
and
and
cmp
js
pushf
inc
cli
jns
mov
fwait
jmp
dec
ljmp
mov
fcomps
fwait
bound
or
add
outsb
rcr
lahf
in
jl
inc
pop
into
xchg
cli
sub
fwait
bound
ss
or
cli
sahf
mov
movsb
push
xchg
lahf
jbe
cmp
mov
imul
daa
cmpsb
xchg
fmuls
mov
in
xor
jb
testb
xchg
jb
imul
dec
int3
adc
pop
xor
rol
mov
ds
jno
mov
mov
jns
ss
jnp
bsf
jle
outsl
aam
xor
lcall
ret
nop
and
dec
pop
push
mov
pusha
movl
pushf
movl
push
mov
pusha
lea
jmp
movl
push
movb
pushf
lea
jmp
pop
mov
pop
add
sub
jecxz
push
push
mov
roll
sbb
lock
cli
inc
xor
inc
nop
and
dec
fldt
or
push
dec
and
jnp
push
outsb
test
xlat
xchg
and
hlt
mov
int
mov
pop
shr
divl
jae
repz
mov
cmp
push
loopne
inc
nop
and
jns
pusha
call
inc
mov
addb
sti
jo
inc
and
insb
sub
lock
stos
mov
xor
icebp
cld
dec
stc
mov
out
hlt
jae
fistpl
dec
out
loopne
cmpb
jns
fcoml
scas
es
and
xorb
mov
orb
dec
jl
pop
aas
and
sbbb
push
cld
loopne
out
fnstsw
popf
andl
adc
or
in
mov
inc
nop
and
mov
jmp
or
inc
adc
pop
push
xor
filds
mov
test
not
cmp
test
enter
mov
pop
sar
mov
je
xor
jnp
jl
add
add
add
sub
cld
lcall
push
pop
or
addr16
inc
nop
and
xor
nop
and
in
push
inc
fcoml
xor
movsb
mov
dec
push
cmp
aam
mov
xor
dec
push
adc
pop
into
dec
adc
pop
inc
add
and
sbb
std
insl
cld
add
adc
pop
jo,pn
inc
nop
and
jae
add
lea
sub
push
pushf
pushf
lea
jmp
and
imul
fnsave
inc
push
lahf
ja
insb
xor
sbb
push
xchg
into
xlat
xchg
mov
aas
push
icebp
sub
mov
add
insb
je
cmp
fidivrl
rol
jns
and
shr
fdivrs
add
and
scas
sbb
lea
out
lret
xchg
jle
add
mov
pusha
xchg
cld
insl
aad
scas
cmp
pop
testb
leave
les
pop
sbb
jmp
fldcw
mov
adc
movsb
jne
jno
xlat
lret
sub
dec
pop
mov
in
dec
push
dec
into
add
lods
mov
dec
inc
jmp
pop
imul
mov
xor
fiadds
inc
icebp
incb
test
scas
movl
dec
mov
loop
fs
inc
jmp
or
mov
push
dec
scas
inc
call
xor
je
mov
or
data16
insb
adc
cwtl
rorb
adc
sbb
xor
or
stos
add
lret
add
jmp
stos
push
add
leave
pop
adc
push
insb
repz
sbb
sbb
inc
das
xor
adc
xchg
add
aad
enter
dec
outsl
mov
jns
push
cmp
inc
nop
and
aas
jmp
push
pop
jl
iret
inc
adc
cmp
pop
adc
adc
es
das
pusha
lods
push
pop
cmp
pop
xor
fucomp
out
ret
add
mov
xor
lret
or
adc
fwait
in
into
xchg
sub
outsl
sub
inc
nop
pop
fucomip
add
cmp
mov
sahf
aad
lds
fcmovnb
lea
mov
clc
jg
popa
jnp
cwtl
frstor
sub
pop
test
fwait
mov
loopne
inc
pop
inc
outsl
xchg
mov
iret
dec
adc
rep
les
nop
and
xchg
cmp
and
mov
pop
push
pushf
cmc
fwait
ret
popa
xor
and
xor
jl
xor
mov
dec
add
popf
repz
jl
fstpt
or
mov
push
sub
inc
cs
in
popa
dec
cmc
mull
out
push
jge
sarl
cmp
jle
adc
and
shr
jmp
jnp
lcall
insb
dec
les
dec
pusha
sbb
sub
jnp
add
sub
sub
fsubs
cmpsb
hlt
sbb
fs
push
mov
mov
jbe
gs
nop
movl
sub
xor
xlat
popf
xchg
mov
mov
ljmp
lret
or
pop
xor
sbb
mov
jp
push
jle
dec
lds
mov
imul
add
adc
push
mov
or
dec
das
xor
fisubl
fisubs
in
push
pop
fcomi
movsl
scas
inc
lods
mov
add
loope
sbb
xchg
xchg
inc
nop
push
in
addl
ljmp
fistpll
mov
mov
aad
lds
ss
or
mov
pop
cmp
sbb
nop
push
notl
add
aad
sbb
mov
je
push
xor
sbb
push
push
push
imul
cmpsb
jmp
popf
clc
cmpsl
popf
xor
inc
iret
push
movsb
xchg
daa
in
mov
jg
int
nop
sbb
inc
adc
std
jae
fisubrl
and
popa
adc
or
inc
arpl
adc
testl
rcll
mov
sub
aaa
lock
xchg
mov
push
and
and
push
rolb
xchg
xchg
mov
out
les
clc
ret
and
push
insb
dec
fimuls
dec
add
scas
ret
mov
ror
lret
xchg
mov
lock
ffreep
cs
fwait
imull
pop
adc
add
shll
ds
mov
pop
jno
lods
xchg
fnstenv
loopne
repnz
mov
xchg
sbb
cltd
lods
push
cmp
pop
out
sti
mov
jmp
ds
ss
add
pushf
icebp
inc
aas
pop
jmp
shrb
loopne
icebp
rcll
cwtl
mov
mov
sub
mov
mov
sub
xchg
movsb
jne
lea
add
stos
cwtl
jbe
mov
lods
in
sbb
ror
jae
outsl
inc
sub
sahf
mov
xor
imul
ja
mov
mov
mov
inc
nop
sbb
jmp
push
pushf
call
popf
inc
fildll
sub
call
fistpl
push
add
xchg
mov
jg
int
shrb
cwtl
lret
cmp
imul
push
fildll
iret
mov
scas
iret
cmpsb
lahf
fnstsw
outsb
in
sbb
push
aad
add
ja
repz
dec
adc
inc
nop
sbb
mov
dec
jns
addr16
in
scas
cmp
pop
es
cmp
add
js
popf
mov
icebp
push
pop
sbb
jecxz
ss
rcpps
imul
gs
sti
outsb
pusha
and
and
sub
sbb
sbb
mov
sbb
sub
jmp
les
mov
and
xchg
add
cmp
cld
pop
inc
leave
dec
or
ret
ja
test
sarl
cmp
jbe
jns
sub
push
shrb
aad
mov
movsl
xchg
dec
push
fsub
inc
mov
icebp
imul
out
and
pop
sbb
or
data16
sbb
je
adc
pop
or
push
je
ffree
mov
mov
ret
gs
stos
aas
andl
fwait
or
inc
bound
pop
daa
ds
jl
out
adc
fildll
dec
lcall
add
and
pop
push
imul
lahf
ret
daa
outsl
xorb
movsl
popa
adc
ret
mov
mov
and
and
mov
cmp
pop
dec
sahf
or
jns
mov
insl
enter
and
nop
pmulhw
pop
mov
dec
movsb
mov
sub
mov
cmp
ljmp
cmpsl
sahf
mov
xchg
xchg
cmp
cmp
sbb
sub
psubsw
jbe
mov
pop
or
push
xchg
dec
cmp
mov
mov
mov
sub
add
testb
push
mov
xlat
mov
sbb
cltd
mov
jne
aad
pusha
jo
cmp
movsb
aaa
sub
adc
lahf
in
orb
push
clc
lods
sub
ret
mov
mov
shlb
push
roll
pop
mov
cmpsb
push
lock
cwtl
iret
mov
scas
sbb
sbb
xor
jno
in
and
xchg
imull
sbb
sub
xor
mov
and
mov
icebp
jp
lret
into
mov
loop
popf
loope
ror
xchg
test
cmp
mov
popa
jne
mov
into
js
and
push
dec
adc
xor
rcll
inc
nop
sbb
pop
pushfw
movl
jbe
pusha
mov
pusha
movl
mov
lea
jmp
pusha
jmp
sub
into
sbb
sbb
push
sbb
idivb
int
cltd
push
push
loope
cmpsl
jb,pt
sbb
out
pushl
jecxz
cltd
andb
ljmp
and
dec
or
mov
add
or
inc
ljmp
cwtl
push
jb
call
insl
cmp
aaa
mov
cmp
nop
sbb
cld
jmp
and
sub
sbb
dec
cwtl
push
jno
std
adc
fcoml
popa
and
imul
cmp
mov
xchg
mov
pop
pop
repz
mov
ret
icebp
lcall
popf
aad
cltd
inc
test
cltd
jbe
jnp
fisubrs
rcll
xchg
mov
loopne
out
das
cmp
jp
outsb
cmp
ljmp
mov
addr16
iret
mov
fisttpll
aam
adc
sbb
sbb
bnd
push
pusha
jle
sti
pop
push
imul
adc
cmpsl
cld
fs
xor
sbbl
mov
mov
cli
fucom
mov
ret
mov
xor
push
sbb
adc
jne
push
mov
sub
push
mov
and
and
cmp
cmp
fwait
mov
jns
cmp
sbb
sub
adc
pushf
mov
inc
adc
fs
mov
jl
insb
jle
xchg
ds
test
sub
xor
mov
test
mov
xchg
push
mov
clc
mov
push
and
sub
and
inc
or
lret
pop
mov
aaa
out
test
adcl
cmp
popf
pop
fs
sub
push
adc
add
les
push
adc
push
add
mov
mov
jl
mov
mov
insl
add
hlt
xor
cmp
mov
dec
clc
int
sbb
adc
arpl
pop
inc
or
in
inc
in
sbb
gs
sbb
daa
xchg
xor
pop
lret
mov
sbb
cmp
inc
and
sbb
and
pushf
pusha
lea
jmp
pusha
movl
pushf
mov
pushl
movb
lea
jmp
arpl
pop
mov
call
inc
pop
pop
aas
je
mov
stos
not
ss
cwtl
dec
or
scas
lods
jnp
dec
cvtpi2ps
sbb
cli
add
inc
mov
pop
lods
ljmp
mov
loope
or
js
mov
repnz
mov
mov
push
sbb
push
imul
inc
nop
push
lret
stc
int3
das
fnstcw
rorl
inc
sub
flds
jge
fisubs
mov
cmp
popf
adc
push
xchg
mov
hlt
and
sub
xchg
int
out
int3
xchg
mov
jge
sub
jle
pop
and
shr
hlt
sbb
mov
and
pop
and
inc
nop
adc
mov
outsb
stos
mov
fwait
repz
cmpsl
les
in
pop
fwait
sub
sti
fidivs
movsl
inc
bound
xchg
mov
outsl
sub
sbb
sub
cmpsl
push
xchg
mov
addb
cmp
cmc
dec
jo
dec
stos
mov
daa
ds
xchg
cmpsb
and
jmp
xor
mov
div
sti
inc
or
jg
inc
xchg
inc
xchg
dec
adc
mov
std
mov
or
push
xor
add
xor
js
rcrl
mov
mov
mov
scas
mov
ljmp
lcall
xor
push
loope
movsl
test
test
sub
xlat
icebp
mov
inc
nop
adc
and
sti
add
fld
test
xor
mov
xor
clc
xchg
sbb
fwait
rolb
mov
in
out
loop
movsb
push
mov
insb
mov
mov
mov
lods
inc
bound
mov
cmp
cmp
pcmpgtd
dec
mov
icebp
cltd
mov
sbb
xchg
jae
scas
mov
and
lods
ret
mov
loope
xor
mov
lea
inc
pop
lods
imul
xor
jo
push
in
mov
loope
fidivl
jecxz
jns
cmpsb
repnz
test
aad
or
jle
scas
jne
test
sbb
jp
dec
imul
lret
dec
mov
add
lds
stos
lret
scas
in
or
push
negl
mov
mov
jbe
dec
cmp
push
jnp
sub
mov
into
sbb
push
sub
xor
jno
push
out
scas
repz
sarl
bnd
mov
je
mov
xchg
push
jne
inc
sub
inc
nop
adc
into
inc
imul
imul
mov
or
lods
into
scas
movl
mov
xchg
fs
mov
out
xor
int
aas
pop
xor
pop
add
stos
js
cmpb
stc
aas
fcomps
pop
loop
cltd
jecxz
jp
sbb
pop
cwtl
and
test
loope
sub
jle
mov
out
inc
nop
adc
push
call
rcrb
popf
xchg
pop
jb
dec
adc
arpl
adc
xchg
mov
out
jno
push
mov
xchg
push
inc
aad
xchg
mov
mov
inc
mov
sbb
dec
adc
scas
cmp
jmp
cli
out
inc
fs
cmpsl
mov
outsl
bound
dec
negl
notl
and
pop
or
inc
and
dec
scas
dec
lds
imul
adc
movl
mov
push
mov
movw
lea
jmp
in
fwait
push
adc
sub
dec
or
aam
cs
jne
or
cmp
push
ret
stos
mov
rolb
xchg
test
xorl
cltd
call
xchg
shr
push
adc
hlt
in
or
inc
sub
data16
sbb
inc
nop
adc
cmpsl
cmp
popf
enter
and
push
xorb
fcompl
mov
scas
cwtl
inc
push
and
cmp
jmp
cmp
cmp
inc
inc
xchg
mov
inc
imul
popf
xchg
mov
arpl
xor
jne
rolb
subl
and
and
idivb
dec
shll
mov
add
mov
push
lock
mov
mov
mov
in
stos
xor
xchg
aam
adc
cmp
lds
sub
push
xchg
mov
rorl
hlt
pop
xor
test
and
lcall
aam
jle
lcall
adc
or
mov
and
adc
inc
test
pop
adc
js
xchg
leave
mov
pop
pop
aad
sarb
ss
mov
pop
je
shlb
mov
daa
cmp
push
ret
jne
lds
pop
mov
arpl
push
shll
negl
nop
adc
xor
or
xor
inc
pushf
and
xor
inc
pop
push
adc
pop
pop
fmull
dec
lahf
mov
pop
data16
iret
push
ljmp
xchg
mov
fs
mov
push
dec
inc
push
cmp
outsl
mov
fbstp
jo
bnd
and
xor
mov
pop
add
loop
and
dec
out
and
insb
sub
jg
ja
dec
daa
in
nop
adc
xchg
add
fldl
mov
adc
push
sub
call
ja
outsb
insl
mov
pop
out
incl
pop
aad
add
out
dec
dec
cmp
push
add
adc
lahf
shrl
data16
scas
mov
cmpsl
add
sarl
cmp
sbb
and
sub
adc
cmp
in
int
lret
dec
xor
outsl
mov
mov
ret
fildl
scas
insb
jmp
js
jo
jae
inc
pop
cmp
adc
xor
xor
jmp
cmc
mov
into
test
pop
fs
push
mov
cmpsl
mov
orl
jg
mov
xchg
incb
js
inc
fwait
mov
cmc
mov
xchg
xor
add
push
mov
inc
adc
inc
nop
movd
push
ret
xchg
repz
push
aaa
adc
sbb
sub
adc
rcl
sub
in
gs
sub
cmp
int
or
mov
mov
pop
dec
repnz
imul
xor
mov
cmp
in
cmp
lds
or
sub
shlb
inc
pop
add
lahf
mov
shl
bound
jge
push
rcl
xor
push
inc
ljmp
xchg
call
icebp
mov
loop
pushf
and
mov
or
shlb
jmp
nop
mov
das
cmp
insb
adc
outsb
mov
mov
mov
aas
pop
gs
cmpsl
dec
xchg
jnp
fstpl
pop
divb
in
and
mov
subl
jnp
inc
sbb
cld
mov
sub
aaa
roll
jge
push
dec
pop
pop
aas
aad
nop
push
xchg
mov
aad
subb
loope
push
mov
sub
adc
int3
sahf
paddb
sbb
pop
inc
lcall
jp
sahf
sahf
test
cmp
sbb
jge
jae
aas
imul
call
je
daa
cmp
iret
daa
cmp
dec
adc
lods
js
addb
daa
outsl
shll
pop
xor
mov
mov
lcall
mov
inc
nop
add
sub
xchg
incb
hlt
jnp
mov
push
fbstp
xor
xchg
in
cmpsl
test
movsb
leave
xlat
fwait
andb
imul
adc
xchg
xor
xor
fimull
inc
fs
imul
in
popa
arpl
mov
sbb
lcall
adc
cmpb
pop
mov
dec
and
sarb
mov
ljmp
and
xor
push
loopne
sub
negb
popa
adc
imul
dec
push
lcall
push
jb
loope
or
sbb
ret
rorb
out
sub
mov
push
xor
xchg
movsl
push
clc
and
imul
in
xor
xchg
jge
out
dec
inc
push
xchg
pop
pop
xchg
sbb
or
test
jg
bound
push
cltd
vorpd
loope
leave
adc
pop
or
dec
imul
shlb
lret
jp
jb
insl
sub
js
dec
in
mov
stos
add
call
sbb
xor
gs
xchg
inc
popa
cmp
push
cld
test
rolb
or
mov
aad
mov
sbbl
sub
inc
nop
or
test
imul
and
inc
popf
ret
shl
mov
sbb
xchg
push
push
imul
les
scas
push
outsb
sbb
inc
pop
mov
jb
and
out
dec
out
pop
pop
pop
push
mov
nop
das
jl
imul
popf
out
or
cmp
inc
jmp
push
jo
cmp
or
push
lods
cld
fwait
mov
jle
divb
xor
sarb
nop
or
fstpt
call
sub
addr16
sub
dec
adc
cmp
push
cltd
add
aad
adc
loope
mov
out
fs
pop
xchg
mov
lds
adc
cmp
clc
stos
mov
daa
pop
sub
push
arpl
and
stos
mov
repnz
xlat
push
fcomp
das
pusha
inc
xor
mov
mov
ljmp
ss
adc
test
dec
iret
mov
loope
xchg
ljmp
fildll
pop
pop
jge
push
inc
push
ret
mov
loopne
imul
ret
jecxz
mov
or
xlat
adc
sub
pop
pusha
add
jnp
mov
pusha
ss
aas
jo
mov
and
or
and
ss
mov
cld
fcomps
in
popf
mov
xchg
and
xor
movsl
out
int3
mov
das
outsl
scas
cmp
mov
out
cmp
xor
out
pop
mov
ja
mov
divl
xor
push
xchg
jae
pop
xor
and
std
out
sub
test
push
xor
js
pushf
outsb
mov
adc
fwait
xlat
add
or
jp
push
inc
cmp
leave
fimuls
mov
lret
mov
inc
sahf
sub
in
add
icebp
fisubrs
stc
nop
xor
fstps
lods
jns
outsl
jbe
jne
jle
push
push
pop
push
outsl
dec
cmp
dec
lods
pop
and
push
mov
mov
sub
sbb
rolb
lahf
inc
nop
or
loop
dec
outsl
ss
lcall
imul
mov
pop
outsl
dec
cmp
mov
and
adc
test
data16
xchg
cmp
hlt
jb
sub
push
mov
or
sub
ss
mov
shrl
inc
sbb
in
mov
cld
dec
dec
ja
mov
lods
xor
add
aam
xchg
je
dec
mov
cmp
push
scas
aad
aaa
bound
pop
lock
neg
xchg
mov
inc
nop
or
jnp
scas
int3
outsl
test
sbbb
insb
or
mov
xor
xchg
cmpsb
add
xor
add
mov
push
inc
nop
mov
shll
sbb
jnp
insl
or
push
sbb
sbb
fstpl
insl
cmp
pop
popf
iret
push
jge
cwtl
fidivrs
inc
nop
or
and
test
stos
jg
and
xchg
es
sub
or
scas
mov
sarb
loope
js
rcll
lahf
lcallw
xor
xchg
leave
cmpsb
in
lahf
ror
xor
out
pop
bnd
outsb
push
sahf
sarl
jle
push
aam
cmp
inc
nop
or
pop
test
call
cmp
dec
shlb
push
sahf
insl
push
sbb
jmp
xor
dec
pop
dec
mov
and
mov
adc
and
fstpl
sub
ss
cmp
movsl
and
fcoms
lods
lea
sub
mov
inc
stos
shlb
mov
addl
icebp
jne
or
sub
mov
push
adc
test
sti
iret
jnp
sbb
pop
ljmp
mov
sub
jle
push
test
stc
and
lcall
or
xor
call
pop
jnp
push
rcrl
arpl
pop
pushl
mov
push
mov
ret
cld
sbb
enter
jbe
mov
int3
in
imul
js
ds
cmp
mov
or
aaa
xchg
mov
insb
mov
scas
push
int
lcall
jbe
mov
xor
ret
jp
jecxz
mov
xchg
aam
cmp
xlat
pop
push
mov
xor
sarl
mov
mov
scas
hlt
nop
scas
adc
sbb
fcomi
fs
jbe
add
ror
sub
mov
lret
sub
or
mov
add
push
movl
pusha
pushf
jmp
xor
jnp
pop
insl
sbb
cmp
mov
adc
sbb
or
xchg
xor
fisubrs
add
push
mov
loopne
or
fmull
cmp
loop
mov
cmp
insl
jno
lds
gs
fdivr
add
push
imul
out
mov
dec
push
inc
out
inc
nop
pop
sbb
cmp
mov
insl
jmp
shl
push
sti
cmp
push
cs
fmuls
xor
jo
inc
fisttpll
rol
mov
push
mov
and
fildll
dec
shl
aam
mov
add
mov
jb
jge
sbb
jb
lahf
jae
and
xchg
add
inc
add
shll
sub
jne
scas
icebp
jbe
in
aam
mov
bound
mov
in
ficoms
and
push
popa
sbb
xor
pop
repnz
loope
sbb
and
adc
dec
icebp
cmp
leave
mov
mov
push
in
stc
test
jle
lods
cmp
fwait
pop
and
push
mov
jbe
pop
repz
arpl
jmp
push
xor
or
dec
add
aas
addr16
rcl
push
orl
in
mov
aad
pop
adc
negb
adc
lea
cmpsl
sub
ljmp
rcrb
repz
xchg
jmp
mov
aaa
push
inc
cmp
xlat
enter
push
addl
shr
pushl
movl
pushf
push
pushf
pushl
lea
jmp
mov
dec
jne
fucomp
in
aad
repz
imul
mov
vpmulhuw
outsl
ja
dec
mov
pop
out
jae
jg
out
test
fwait
xor
cmp
add
push
xchg
sbb
lods
mov
iret
mov
jg
jb
ja
jp
mov
push
dec
push
lock
jmp
leave
adc
mov
rcrl
mov
pusha
fildll
lds
lea
bound
sbb
or
cmp
dec
dec
push
jno
lds
cld
mov
rclb
nop
add
inc
and
push
sbb
and
pushf
mov
lea
jmp
pushf
movl
movl
pusha
push
pusha
call
push
call
insl
jl
mov
std
lods
dec
push
xor
inc
ss
adc
stc
xchg
fimuls
fmull
frstor
dec
repnz
fwait
jne
inc
sub
repz
dec
add
jecxz
xchg
mov
subps
jl
and
adc
cmp
imul
daa
or
add
lods
inc
ficoml
jns
sub
pop
and
add
int
jmp
aas
call
sarl
jge
adc
addb
flds
fs
jb
clc
mov
jae
cli
or
lds
inc
mov
inc
hlt
mov
and
sub
adc
pusha
inc
test
sbb
dec
mov
xor
jge
fsubrs
lret
mov
xor
movsb
or
lea
imul
ja
test
fwait
int3
jne
and
aad
shr
adcb
cmp
lock
inc
mov
add
inc
nop
add
pushl
ja
dec
or
add
hlt
jnp
mov
movsl
push
call
pop
mov
decl
mov
adc
loopne
sbb
aas
outsb
imul
pop
and
pop
mov
imul
mov
data16
inc
nop
add
out
clc
fdivr
subl
mov
sahf
lret
pop
aaa
pop
add
cmp
jg
insl
jne
or
sbb
add
or
leave
icebp
mov
lods
lods
aaa
ficompl
cltd
xlat
sub
mov
fldt
in
mov
lods
sub
push
mov
ret
subl
lods
aas
xchg
pushl
movsl
xor
icebp
push
sti
cmp
and
jo
mov
sahf
sub
scas
out
jle
stos
and
rcr
lods
sbb
loope
pushf
icebp
jg
mov
lods
mov
rcrb
lock
das
xchg
arpl
movsl
in
lods
hlt
les
arpl
xlat
xchg
mov
jno
pop
je
imul
ret
sub
call
mov
aam
fwait
jp
push
xor
jnp
push
mov
clc
push
xchg
imul
iret
imull
cmp
ss
xor
pop
or
dec
inc
nop
add
cmp
call
inc
sahf
sarl
xor
push
lret
dec
jecxz
xor
imul
fsts
hlt
mov
dec
adc
out
sbb
mov
aam
loop
add
in
and
mov
cltd
xor
xchg
mov
dec
xchg
mov
mov
fsts
into
xor
mov
cld
fsubrp
cmc
jb
cmc
mov
pop
out
nop
add
sahf
pusha
pushf
movl
pusha
movl
movl
lea
jmp
int
pop
aad
jmp
fst
mov
mov
xchg
ljmp
pop
inc
adc
mov
mov
lods
jae
cli
ret
lods
in
std
or
or
adc
xorl
rcl
xchg
jo
fsubs
out
dec
cwtl
out
or
jnp
repnz
cmp
ja
pop
aaa
roll
imul
fcoms
ds
cmp
std
in
mov
outsb
sahf
or
cmp
adc
cmp
pop
add
mov
xchg
rcrl
xchg
rorl
and
mov
cmpsb
stos
je
sahf
iret
je
pop
sub
pushf
daa
push
jbe
and
xor
sub
jne
xchg
mov
push
repnz
dec
cmc
cmp
cmp
addr16
mov
lcall
inc
lds
ret
jns
fwait
ljmp
inc
nop
add
push
mov
aam
and
cltd
cli
mov
or
dec
loope
int3
sub
and
add
pop
dec
aaa
sub
mov
es
outsb
jb
sti
imul
mov
int3
idiv
xor
jmp
xchg
repnz
jnp
in
and
or
mov
or
cmpsb
xlat
jp
leave
mov
or
inc
lods
push
and
repnz
popl
dec
test
cmp
test
fiadds
mov
test
out
add
mov
inc
sbb
data16
push
divb
mov
mulb
lret
jno
cmp
loopne
nop
mov
xchg
and
lret
add
sbb
rcrl
popa
xchg
popf
ja
outsb
cmp
sbb
mov
jg
imul
adc
mov
cmpsl
arpl
xlat
lods
inc
push
mov
fbld
push
outsb
aaa
lret
or
xchg
or
xor
hlt
xchg
xorl
cmp
dec
xor
iret
ljmp
add
aam
imul
mov
jae
or
rorb
xchg
rolb
push
jg
xor
cld
xor
dec
dec
adc
movsb
pop
sub
outsl
pop
inc
lds
into
inc
jae
push
jmp
movl
push
mov
movb
movb
lea
jmp
pushf
movl
jmp
jmp
mov
pop
lea
lea
pusha
fimull
icebp
inc
jecxz
mov
out
mov
mov
pop
ljmp
test
dec
or
and
aad
das
cld
lds
movsb
loop
mov
cmp
adc
jp
dec
pop
movsl
sti
mov
scas
ret
fnsave
jp
jp
mov
repnz
shl
sbb
movsl
xor
jge
sub
jne
call
and
xchg
or
xor
jmp
jmp
in
popa
or
jge
fisttps
sahf
or
mov
into
in
outsl
xor
dec
movsl
iret
aam
lods
pop
jbe
fsubrs
xchg
push
aad
fnstsw
into
test
cli
lods
mov
sti
or
aaa
sub
mov
jmp
arpl
test
jmp
sub
jecxz
daa
mov
cli
decl
stos
pop
inc
stc
test
cmpl
outsb
add
jnp
inc
xchg
dec
outsb
add
movsb
aam
fistpl
dec
mov
les
pop
jecxz
mov
and
and
sbb
cltd
shrb
int
xchg
jecxz
mov
lock
mov
mov
adc
add
shr
inc
push
je
sub
test
pop
cmp
shrl
sub
cltd
xor
mov
push
sbb
fnsave
imul
mov
mov
js
gs
movsl
loope
popa
sar
cltd
inc
dec
fists
jle
pop
jl
xor
dec
xor
inc
cld
sub
push
shlb
sub
inc
cmp
scas
fists
push
lds
lds
fwait
addl
jbe
pusha
das
scas
fcoms
and
mov
pop
les
fs
push
xchg
and
rcrl
shrb
std
sub
divb
loop
dec
mov
fwait
les
aas
mov
cwtl
mov
and
dec
or
iret
and
into
out
sub
pop
movsb
cmp
insl
stc
or
adc
mov
xor
jno
push
add
insb
scas
movw
mov
jmp
call
faddp
inc
loop
mov
iret
mov
aam
or
dec
or
mov
push
dec
insb
arpl
inc
jo
cmpsb
dec
movsb
xor
movsl
xchg
sbb
loope
sahf
dec
ljmp
pop
pop
mov
sarb
or
jno
push
and
jnp
push
add
dec
inc
sti
hlt
push
add
ds
jmp
loope
les
and
scas
rcrb
pop
mov
cwtl
jle
push
loop
loop
push
stos
pop
jecxz
xchg
shll
mov
data16
jge
jmp
cld
ret
fistpll
dec
mov
jae
fwait
shrb
inc
cld
and
dec
inc
mov
lahf
pop
arpl
push
push
jnp
insl
and
loop
imul
cltd
scas
stc
mov
adc
sbb
lret
and
xchg
cwtl
std
lds
paddsw
dec
jns
test
dec
sti
or
xor
bound
cltd
int3
mov
mov
cmpl
lret
add
and
xor
pop
addr16
pop
adc
mov
sti
mov
ret
movl
call
push
je
test
or
stc
xor
fsubl
push
push
cmpsb
aad
icebp
inc
xor
mov
mov
cli
push
loop
pusha
int
shll
ret
dec
mov
pop
loop
mov
test
and
repz
lahf
mov
mov
xlat
cs
sub
adcb
inc
adc
shlb
inc
sti
pop
insb
jne
add
arpl
dec
sub
add
fildll
into
inc
ret
mov
cmp
repnz
sarb
mov
pop
pop
not
ss
cli
mov
push
adc
jl
or
mov
push
jne
or
add
movsb
fadds
and
sti
and
movsb
pop
xchg
cmp
call
sub
xchg
out
das
mov
in
jne
or
sbb
movsb
inc
mov
outsb
call
outsb
or
in
mov
pushf
jns
arpl
mov
sub
repnz
ret
ds
ret
fistps
adc
sub
bound
lea
aad
data16
in
push
inc
dec
add
rol
ror
cmp
testb
push
mov
pop
dec
adc
aad
lret
lcall
mov
push
adc
lret
frstor
daa
or
push
jno
jae
mov
xchg
adc
andl
popa
dec
dec
sub
adc
jnp
mov
xchg
out
data16
xchg
nop
sub
push
xchg
test
add
sub
add
jle
fwait
or
push
fs
daa
leave
sub
fcompl
lock
or
fidivrs
sub
sub
popf
rcll
inc
daa
push
jp
inc
sub
pop
pop
pop
mov
fidivs
sub
imul
push
xlat
or
xchg
jno
gs
ja
adc
adc
inc
cli
mov
jae
cld
inc
clc
jge
push
fst
mov
mov
cmp
arpl
test
mov
add
and
fbld
mov
test
insb
jg
addl
ss
mov
mov
cmpl
jns
arpl
mov
xchg
mov
push
in
mov
mov
cmp
ss
sub
inc
xchg
cmp
ds
lcall
out
pop
movsb
push
push
dec
mov
pusha
mov
lds
shlb
mov
out
outsl
pop
lods
cs
push
sbb
mov
cmpsl
push
push
mov
cmpsb
in
negb
aad
pop
out
mov
push
sahf
jae
xchg
cs
jmp
xor
clc
shl
call
les
mov
cld
test
scas
push
mov
dec
fwait
repz
mov
dec
movsb
push
xchg
leave
test
pushf
sbb
push
mov
or
das
push
cmp
stc
add
out
xor
push
pop
enter
mov
mov
xor
mov
ja
xchg
mov
addr16
pop
mov
adc
nop
and
sysenter
lret
gs
push
mov
mov
les
lcall
pop
or
jp
and
cld
push
or
in
sbb
lahf
jns
or
cs
jb
scas
rcrb
inc
clc
and
mov
movl
pushf
call
movl
movb
pushl
call
lret
cmpsl
jecxz
pushf
push
or
pop
adc
ret
test
dec
sub
mov
lods
lea
add
mov
or
lret
xor
insb
loope
push
data16
xchg
addl
and
repz
xor
jg
movsl
roll
jae
sbb
addr16
loop
mov
cmp
push
fs
dec
cmp
dec
outsb
jecxz
sahf
aas
call
sub
sub
bound
jo
jl
mov
testl
cs
pusha
pusha
lea
jmp
sub
iret
clc
jg
int
data16
popl
mov
cmc
cmpsl
test
mov
add
iret
ljmp
gs
cli
push
pop
mov
add
icebp
jno
xchg
mov
sahf
mov
adc
pop
pop
lods
pop
xchg
fmull
jmp
out
xchg
ss
popa
insl
cmpl
fs
fwait
ret
nop
das
inc
sbb
fwait
mov
je
pop
push
lock
push
out
cmp
lret
mov
mov
idiv
cmp
push
nop
cmp
shlb
lock
push
fisubrs
cmp
jno
pop
outsl
mov
int3
aad
or
push
push
addr16
cltd
and
push
push
inc
sub
push
mov
fs
pop
adcl
xlat
push
fdivr
ds
scas
popf
fistpl
inc
sbb
jle
xor
and
add
adc
jns
mov
push
addr16
cmp
pop
lea
in
mov
and
rorb
mov
push
mov
loopne
lret
mov
mov
aas
mov
sbbb
rcr
mov
inc
or
mov
inc
cmc
mov
pop
repnz
in
ja
arpl
test
dec
aaa
mov
out
dec
adc
dec
push
ss
pusha
cld
push
xchg
test
xchg
mov
or
adc
inc
add
mov
sub
dec
aaa
and
lahf
jl
inc
mov
inc
add
hlt
xchg
pop
inc
dec
xchg
pusha
pushl
pusha
jmp
out
sbb
testl
sub
xchg
sub
mov
into
add
ret
sahf
push
imul
sub
push
rolb
dec
add
aad
cmp
ds
add
gs
fstp
sbb
sub
leave
imul
inc
sub
push
adc
jo
out
dec
add
dec
push
push
test
icebp
dec
insl
mov
cmp
je
push
das
dec
add
cmc
push
sbb
adcl
xchg
js
sub
orl
jmp
sti
mov
xchg
int
repnz
xchg
mov
lods
sbb
bound
bound
test
push
mov
xchg
add
fs
cld
in
mov
add
ret
mov
out
xor
cltd
push
add
cmp
push
repz
ret
dec
test
xor
in
fdivrl
add
sahf
xchg
inc
test
xchg
push
sbb
jnp
std
mov
out
lds
sub
cmpsl
loope
mov
inc
sbb
and
rorl
fwait
or
out
mov
sti
sbb
nop
pop
pop
scas
je
popf
roll
pop
fs
mov
repz
ljmp
insl
mov
pop
inc
movsl
testl
and
hlt
and
lcall
data16
mov
popf
les
sub
xchg
rorl
add
enter
and
movsl
inc
push
in
sub
orl
jmp
jle
dec
pop
mulps
mov
aas
inc
push
mov
sbb
pop
jno
outsl
cltd
pushf
push
ja
pop
lea
push
mov
iret
xor
xchg
movsl
sub
push
inc
aaa
mov
xchg
stos
pop
fyl2xp1
test
rcl
je
fnstsw
gs
adc
ljmp
rcrb
mov
dec
pop
int
adc
outsl
dec
stos
stc
fnstenvs
push
push
pop
cmc
cmp
sbb
push
xchg
mov
pop
es
lods
pop
add
loopne
jg
and
adc
ljmp
cmpsl
mov
mov
xchg
push
mov
lcallw
testb
mov
add
and
icebp
rorl
popa
incl
cli
rol
lds
mov
push
jmp
loopne
adc
inc
repnz
mov
ror
cmp
int3
repz
shr
mov
sbb
nop
mov
out
adc
cli
pop
inc
push
pop
sub
dec
mov
xchg
js
lahf
cmp
sti
push
cmp
fmuls
mov
mov
dec
or
mov
lret
mov
sbb
stc
negl
mov
mov
and
mov
add
inc
icebp
pusha
movl
pushf
mov
pushf
pushf
lea
jmp
movb
movl
push
push
movl
mov
pusha
pushl
lea
jmp
pusha
pushf
movl
mov
push
pushl
push
lea
jmp
pusha
pushl
pusha
movl
pushf
push
lea
jns
pusha
movl
pusha
push
pushf
movb
lea
jmp
loop
pop
lock
in
imulb
sarb
dec
add
mov
or
sbb
mov
mov
push
cmpsl
cs
mov
imul
cmp
add
icebp
in
mov
popf
mov
xchg
test
mov
into
ss
pop
imul
mov
mov
stos
sbb
pop
bound
pusha
add
pop
add
push
dec
leave
and
into
sti
pop
inc
cli
mov
test
in
sbb
leave
mov
jne
lcall
jno
movl
push
lea
jmp
jl
push
pushf
jmp
jmp
orb
dec
iret
push
adc
adc
cmp
rcr
push
loop
adc
ds
add
pop
rcrb
pop
icebp
xchg
pop
inc
mov
jne
inc
add
addr16
mov
in
lock
push
hlt
jle
push
out
cwtl
leave
mov
lcall
lock
adc
jmp
push
inc
nop
jecxz
bnd
mov
mov
mov
mov
push
pop
mov
stos
cs
mov
je
inc
das
popf
sbb
cmpsb
mov
rcr
adc
aam
scas
sbb
rcrb
out
notb
add
pusha
push
pushf
movl
pusha
movl
mov
push
push
pushf
lea
jmp
pushl
jmp
fwait
mov
push
dec
pop
cmp
mov
xchg
shl
cld
xor
sti
cld
push
test
ret
ror
mov
sbb
mulb
mov
mulb
ss
pop
fdivs
push
cld
je
and
nop
dec
jg
loopne
scas
mov
mov
jp
sbb
out
cs
xor
cmp
mov
lcall
pusha
call
mov
jae
scas
push
loope
inc
cmpsl
mov
lods
push
fildl
test
outsl
cmc
stos
rcrb
xchg
push
rcrb
pop
sbb
add
insl
subl
xor
aas
mov
int3
jne
adcb
out
adc
aaa
push
js
stos
cmp
xchg
test
pushf
fstpt
cs
add
cmovo
pop
or
or
lahf
jmp
popf
and
mov
test
pop
imul
cmc
mov
push
mov
xlat
inc
out
fcmovbe
fstpt
aad
xchg
das
bound
jecxz
loop
not
mov
adc
mov
xor
mov
pop
xchg
and
xchg
cli
xchg
sub
lds
mov
ffreep
aaa
cmp
out
push
icebp
pop
inc
loopne
cmp
ret
or
int
or
cmp
addr16
daa
dec
dec
pop
adc
jmp
mov
stc
ss
and
push
push
xor
sti
aam
inc
out
jne,pn
pusha
jmp
addr16
subb
in
or
mov
stos
jmp
or
jbe
mov
into
out
push
or
call
daa
ljmp
shll
jg
test
leave
imul
out
movsb
movsl
rcr
push
fiaddl
pop
jle
fadd
loope
inc
pusha
call
mov
mov
inc
out
push
jne
movl
pushf
pushl
pusha
lea
jmp
lret
xor
mull
xor
jl
mov
jno
scas
das
dec
adc
mov
pop
sub
mov
lret
add
out
or
xlat
cmp
xchg
jg
mov
and
notb
loop
ds
sbb
or
sub
push
rcrl
nop
hlt
cs
pusha
xchg
les
xor
cmpsl
add
add
mov
mov
test
inc
les
inc
sbb
subl
inc
xchg
lahf
xchg
out
jb
jle
jle
lods
and
xor
inc
in
mov
and
jl
cmp
pop
mov
loop
sub
inc
loopne
repnz
push
adc
repnz
sub
in
jae
dec
insl
jne
jnp
add
negl
push
aam
cwtl
dec
adc
mov
rorb
jmp
iret
xchg
arpl
es
jle
clc
mov
loop
jle
es
lods
adc
push
cmp
xchg
push
stos
mov
mov
adc
pop
out
in
out
pop
add
js
arpl
rcll
push
test
mov
mov
or
pop
cld
std
stos
out
xor
lcall
dec
shll
xchg
mov
cmp
mov
dec
adc
lcall
lods
push
add
repz
dec
mov
orb
imul
jl
ficoms
dec
cwtl
jmp
adc
sub
shrb
test
call
imul
pop
arpl
mov
cmp
adc
xchg
sahf
iret
repz
push
scas
stos
enter
jo
ret
clc
cmpsl
test
and
fildll
sub
mov
lret
xchg
pop
push
lcall
aas
ret
wrmsr
xchg
rcrl
dec
push
mov
sbb
push
in
outsb
icebp
sbb
pop
mov
shrl
xor
adc
setnp
enter
daa
cmp
xchg
ss
imul
fiadds
push
dec
pop
gs
pusha
out
das
clc
pop
mov
xor
call
sbbb
in
xchg
sbb
xlat
add
add
cwtl
dec
das
sbb
jns
or
pop
inc
push
jmp
and
jmp
adcl
je
push
xor
inc
jmp
xchg
ffree
inc
and
jl
dec
cli
lcall
mov
jno
xchg
lcall
adc
xlat
mull
insb
loope
andb
dec
insb
testb
cwtl
xchg
xchg
or
push
cmpl
or
add
xchg
stos
cmp
out
add
test
mov
xlat
sbb
addr16
inc
sarl
into
test
cmpb
sbbl
cmp
cmp
int
and
and
jmp
dec
mov
add
xchg
push
pusha
lea
jmp
push
mov
jae
mov
loopne
stos
scas
adc
or
stos
roll
add
sbb
xchg
mov
rolb
dec
add
mov
sbb
lret
ja
iret
and
test
push
shrb
imul
std
lcall
mov
inc
mov
sti
jne
mov
pop
xchg
fdivs
inc
fldl
aam
in
mov
mov
cwtl
pop
mov
jl
stos
pusha
movsl
mov
mov
stc
and
mov
pop
jns
mov
and
leave
out
test
imul
sbb
pop
adc
addr16
mov
push
pop
dec
mov
push
mov
js
jns
es
adc
xor
mov
inc
mov
lea
je
push
movl
pusha
movl
pusha
pushf
lea
jmp
push
clc
xchg
push
in
addb
add
out
xchg
in
dec
adc
push
je
ja
sbb
push
sahf
les
sub
in
mov
mov
fcmove
xor
dec
add
ds
ds
out
leave
mov
sbb
mov
jg
sbb
xlat
cmp
or
inc
inc
ds
loope
mov
adc
popa
sub
shll
out
mov
xchg
sti
xlat
insl
dec
dec
jno
ja
jbe
repz
pusha
shll
outsl
andl
pop
icebp
xchg
mov
inc
adc
popf
loop
mov
test
test
adc
xchg
xchg
jne
mov
or
inc
xchg
adc
mov
xor
fwait
sbb
and
and
sbb
xchg
ficompl
jg
into
mov
mov
cmp
lea
xor
ljmp
ja
mov
xchg
jns
les
mov
jle
mov
and
lods
mov
xchg
adc
test
inc
aad
xchg
ror
es
push
xchg
ljmp
icebp
jmp
mov
fdivr
jne
jmp
pop
bnd
dec
test
lcall
xor
inc
out
out
test
cli
fdivrs
push
cmp
lods
lret
jnp
cld
push
xor
pop
inc
scas
outsb
aas
cmpb
popa
or
and
fldcw
or
sbb
xor
ds
iret
test
mov
sbb
cmp
push
jno
sbb
enter
fidivrs
inc
out
mov
and
mov
movl
movb
pushl
pushf
lea
jmp
call
out
cwtl
out
test
pop
pop
insl
push
xchg
stc
popf
stc
cmpsl
icebp
dec
icebp
je
lock
mov
mov
cmp
mov
inc
test
mov
xor
inc
dec
adc
lods
sub
aam
mov
shr
sub
test
mov
movsb
int3
js
xlat
popf
xchg
xchg
not
push
fdiv
adc
nop
fcomps
nop
leave
mov
sahf
icebp
stos
inc
inc
out
cmp
cmc
jge
outsl
add
sti
xchg
rolb
pop
inc
pushf
and
pushl
push
pop
xlat
xor
jb
jne
nop
ficompl
jbe
out
sbb
mov
fdivs
adc
cli
movsl
leave
mov
imul
lret
sahf
add
aas
push
pop
mov
pop
sub
pusha
cmp
jns
pushf
pop
mov
into
xchg
or
insl
popf
and
inc
out
test
push
dec
lds
add
jo
push
inc
push
pusha
push
push
lea
jmp
add
stc
adc
daa
inc
icebp
jge
push
add
and
lret
fwait
and
add
sub
push
lcall
nop
and
ds
dec
roll
and
sub
sub
sub
es
jle
dec
adc
mov
outsb
ss
arpl
push
cmpsl
enter
fstpt
xchg
shll
push
add
adc
insl
inc
out
jp
push
aaa
push
shrl
in
divl
push
xor
filds
cwtl
lcall
popa
pop
xor
mov
into
jle
stos
or
cmpsb
cs
and
iret
adc
mov
xor
mov
sbb
dec
pop
xor
jmp
popa
aaa
das
inc
sub
mov
leave
mov
sbb
insb
ss
xor
nop
iret
mov
xchg
lea
insb
ja
lcall
out
sarl
in
cmp
out
shlb
push
push
jp
or
jnp
push
and
mov
fistpll
cwtl
mulps
pop
iret
jmp
inc
in
cmc
sbb
sub
xchg
stos
dec
or
adc
push
inc
daa
mov
inc
push
loope
push
enter
push
sbb
pop
ss
xchg
sub
pusha
mov
in
out
cwtl
push
into
addr16
lahf
mov
test
adc
nop
into
arpl
sub
das
xlat
rol
into
xlat
cld
mov
or
mov
cmpsl
cmpl
dec
jbe
jb
std
jp
call
icebp
and
pop
out
sub
int3
inc
cmpsl
loopne
and
and
mov
push
sbb
push
jae
adc
nop
leave
pop
pop
outsl
push
dec
lret
mov
bound
push
inc
in
rcll
in
jnp
mov
add
xor
lock
jmp
add
fs
negl
lods
lea
mov
jno
inc
mov
rorb
sub
cmp
pop
pop
jns
bound
dec
or
pop
into
arpl
or
sub
in
or
pop
loopne
xor
inc
in
cmp
or
xor
out
inc
leave
inc
xor
mov
addr16
sbb
jecxz
mov
aas
add
fs
dec
stos
fstpl
mov
cmp
das
les
ret
sbb
in
mov
xchg
int
movsb
or
xchg
push
sub
mov
or
pop
inc
xchg
shl
sti
jl
jb
mov
pop
xchg
ljmp
jns
insb
mov
cmpsl
mov
test
push
pop
add
shll
adc
repz
jl
cld
jmp
fcmovb
das
ret
sbb
or
pop
fmuls
repnz
andl
sub
lea
jl
sbb
xor
inc
jecxz
aam
and
arpl
stos
cs
cltd
testb
push
mov
cmp
inc
push
rorl
call
cmp
cmp
sub
cmpsw
sbb
pop
js
mov
loope
fcos
insb
dec
test
lods
ficoml
sahf
hlt
out
add
outsl
insb
inc
pop
lds
sbb
push
push
sbb
xor
test
push
sub
sbb
je
mov
clc
jecxz
dec
inc
repnz
mov
pop
cmp
jbe
dec
mov
mov
xchg
cmp
in
adcb
je
inc
cs
sti
mov
pop
aad
jle
cmp
xchg
mov
and
leave
pop
inc
pop
out
pop
cmpsb
xor
mov
stos
lcall
inc
loop
adc
add
out
mov
btc
lock
loope
ret
mov
movsl
std
dec
int3
inc
repnz
jns
sub
fdivr
popa
jae
xor
xor
add
dec
xor
in
or
cmp
cltd
xor
jnp
test
sub
sbb
lret
lcall
inc
loope
cmc
push
push
jmp
aam
inc
sbb
inc
xor
mov
xchg
int3
add
sbbl
jp
repz
test
lcall
or
jl
outsl
mov
jmp
adc
push
jg
mov
or
cs
sbb
and
mov
push
or
xor
and
int3
vpsubb
mov
loope
rcl
jmp
mov
xor
bound
and
in
sub
mov
jno
cmp
push
outsb
or
cmp
inc
or
inc
aas
icebp
in
or
cmpsb
adc
dec
inc
mov
mov
push
in
mov
rorb
xchg
xor
xchg
xor
rclb
bound
loope
adc
sbb
add
es
ljmp
scas
ret
fdivrs
pop
cwtl
xor
or
push
das
imul
andl
mov
stos
xor
push
stos
repnz
pop
or
mov
fsub
test
fs
iret
popf
leave
hlt
push
out
hlt
imul
aam
lret
mov
loopne
mov
and
push
ljmp
and
movb
pushl
lea
jmp
pusha
pushl
movl
pusha
push
pushf
movl
mov
lea
jmp
sbb
mov
movsl
cmp
xor
xor
mov
stc
adc
sbb
nop
xor
cwtl
cmp
mov
push
lahf
loopne
into
cs
push
loop
imul
cmp
mov
test
mov
lea
inc
popa
int3
jle
fdivs
hlt
call
jecxz
jge
inc
ffreep
cmc
sbb
sbb
pop
insb
inc
js
outsb
jecxz
repnz
in
or
adc
or
xchg
push
xchg
mov
pushf
lods
jecxz
aad
cmp
jl
xor
or
std
daa
jae
mov
cwtl
int
mov
les
xchg
test
xchg
lret
daa
fisubs
fimuls
stos
inc
mov
jg
lcall
xchg
in
push
arpl
decl
fidivs
ja
ss
fsubs
cmp
aad
sub
or
xchg
outsl
es
addl
mov
xchg
rolb
dec
hlt
mov
inc
add
loopne
and
pop
outsb
leave
or
out
ret
sbb
mov
popa
nop
push
sbb
adc
data16
xchg
in
adc
or
aaa
fnsave
mov
sub
jge
sbb
xlat
or
pop
imull
fsts
xchg
dec
mov
fs
inc
and
lcall
jno
flds
push
das
imul
and
out
mov
jge
adc
iret
jns
pop
aad
arpl
mov
sarb
mov
xchg
stos
into
mov
push
xchg
xor
ror
cmp
std
cmp
stos
and
ret
cmp
add
push
ret
push
sbb
push
adc
loopne
notb
loop
fdivrl
xchg
jg
pusha
rcr
enter
ret
fidivl
les
subl
sbb
dec
stc
pop
jo
sbbb
cmp
int
mov
mov
xchg
pop
push
xor
sub
arpl
cmpsb
mov
pop
movsb
repnz
xchg
repz
adc
cmp
inc
adc
addb
daa
enter
enter
sarl
repnz
cli
outsl
and
pop
jle
popa
sbb
loope
xor
dec
ret
mov
orl
add
push
jns
pop
inc
push
aas
mov
dec
push
loope
int3
adc
push
insl
add
xchg
fdivl
mov
lods
popa
jg
sti
bound
divb
scas
bound
pop
cmc
jbe
pop
bound
movsb
notl
call
xor
pop
mov
mov
popa
in
iret
mov
iret
inc
adc
cld
je
cltd
cmp
call
push
push
in
sbb
cmp
fiadds
shll
push
test
push
pop
or
cs
push
and
mov
mov
add
iret
fstpt
xchg
mov
jmp
dec
dec
in
xor
sti
dec
jp
fldenv
fadd
mov
repnz
cs
dec
mov
mov
pushf
movl
fstl
pop
pusha
movl
mov
movl
pushf
pushf
pushf
lea
jmp
add
inc
mull
sub
cmp
or
inc
and
jg
jns
mov
inc
pop
std
fninit
leave
jle
sarb
insb
and
into
pop
sub
je
xor
cmp
and
call
xchg
mov
jbe
xchg
xchg
data16
into
and
in
sub
inc
add
fldenv
iret
lret
fnstsw
js
sub
insl
jmp
ret
ret
clc
pushf
clc
mov
sbb
push
cmp
ljmp
dec
lods
fcmovb
xorb
shlb
addl
and
idivb
hlt
sbb
data16
sbb
fwait
sbb
and
xchg
and
test
cld
out
and
jo
sahf
stos
mov
pop
push
pop
pop
mov
rcl
push
xlat
add
or
jae
in
imul
push
xor
mov
pop
dec
pop
jp
loope
cmp
pop
out
dec
aam
dec
sub
push
cs
adc
inc
fcmovnb
jmp
loopne
stc
lods
adc
sti
outsl
xchg
clc
adc
fisubs
pop
mov
push
dec
test
enter
iret
cmpsb
and
outsl
add
cmp
test
mov
and
ret
shl
dec
ja
cmc
mov
dec
adc
dec
movsb
inc
and
and
movb
pushf
lea
jmp
mov
push
div
mov
and
pop
add
stos
cli
out
xchg
and
mov
mov
mov
cmp
call
in
or
scas
sti
xchg
rolb
push
sbb
inc
push
jns
ret
jg
gs
adc
xchg
call
bound
mov
cmc
mov
shll
loopne
fdivs
jb
mov
or
movsl
lds
movsbl
push
mov
in
cmp
mov
pop
mov
dec
mov
pushf
xchg
lahf
dec
mov
pusha
inc
adcl
fsubrs
xor
inc
and
adc
imul
sti
push
sub
and
jae
and
inc
fadd
stos
daa
addb
xchg
mov
imul
test
fistl
out
and
mov
sbbl
dec
outsl
jne
lret
adc
xlat
jnp
test
xor
pop
clc
jmp
lret
cmp
fcoml
mov
popf
mov
xor
into
xchg
fbld
popl
fnstenv
jmp
mov
aad
icebp
test
or
pop
pop
mov
sbb
jae
stos
out
rolb
sbb
or
jg
stos
push
mov
sub
jg
inc
fnstcw
imul
jo
inc
and
inc
sbb
inc
fldt
and
inc
frstor
xor
ficomps
push
or
inc
je
add
outsl
add
aad
movsb
subl
inc
je
out
pop
pop
imulb
adc
outsl
hlt
cmpsl
inc
lds
in
aas
aad
xchg
sbb
lock
mov
insb
jo
sbb
jo
data16
mov
pop
mov
std
pop
inc
and
xor
iret
sbb
adc
in
mov
fisttpll
movswl
sub
cmp
mov
stc
movsb
test
in
or
scas
pop
sbb
mov
and
sbb
incl
cli
xor
leave
or
sub
ss
outsb
insl
enter
or
hlt
pusha
mov
clc
in
xchg
adc
inc
outsl
sahf
push
dec
pop
movsl
push
lret
pop
cmpsl
pop
sub
sbb
mov
movb
stos
sub
jo
sbb
sub
cmpsb
xchg
out
fldt
imul
movsb
add
into
xor
dec
shrb
aaa
pop
xor
aaa
sub
mov
inc
addr16
ds
push
aam
pop
iret
cmp
mov
fcom
repnz
jmp
movl
call
add
jl
lcall
ljmp
dec
pop
push
into
popa
cmp
pusha
test
orb
mov
xchg
inc
out
stos
mov
cltd
dec
xchg
clc
cmp
imul
mov
jnp
cmc
or
adc
mov
scas
mov
dec
pop
dec
dec
ss
rcll
dec
adc
insl
lods
inc
xlat
rcr
inc
stc
and
frstor
or
push
mov
jp
jle
xchg
cmp
dec
leave
or
xlat
into
dec
mov
xchg
push
inc
or
cmp
cmc
inc
and
xor
lods
mov
lret
jmp
ret
mov
aam
cli
lods
out
sahf
iret
lahf
pop
inc
xlat
loop
sahf
movl
jmp
jmp
push
movl
jmp
call
mov
pop
pop
mov
dec
incl
mov
pop
bound
cld
add
cmp
mov
or
cmpsl
clc
movsb
mov
bound
mov
cmpb
fcmovnb
and
sahf
pop
stos
mov
xchg
inc
jns
adc
inc
and
mov
lea
jmp
arpl
ret
jmp
insl
inc
adc
int
sbb
test
jmp
sub
inc
mov
adc
xchg
pushl
or
out
cmp
pop
rcll
xchg
inc
test
lods
dec
fildll
jge
jp
sbb
dec
cmpsb
or
xchg
sbb
andl
dec
dec
inc
out
cmp
xor
std
adc
mov
xchg
adc
xchg
pop
cmp
int3
fstp
popa
movsl
mov
fstpl
or
adc
inc
notb
sub
push
in
cmp
lret
icebp
push
ret
lret
inc
faddl
and
push
jbe
inc
fldl
jns
dec
mov
cmpsl
mov
adc
es
in
incb
arpl
xlat
shrb
xor
test
rolb
mov
and
xor
loopne
xor
cwtl
sbb
mov
rcrl
lds
cltd
fcom
repnz
inc
sub
mov
push
cmp
nop
shl
sbbl
loop
inc
mov
mov
pushf
pop
or
mov
sbb
inc
aad
stos
mov
ss
cs
add
rcll
or
push
outsb
add
loope
jae
mov
les
cltd
loop
enter
sbb
repnz
cmp
dec
outsb
nopl
add
or
jo
xlat
fiaddl
mov
pop
cmp
popf
fsubl
loop
loope
es
add
mov
daa
cltd
call
push
and
enter
mov
cmp
push
loope
aam
jl
subb
mov
out
out
sbb
push
pop
dec
cmpsl
and
daa
add
inc
pop
xor
cmp
jno
bound
xlat
inc
aam
cwtl
jne
clc
jp
loope
in
xor
inc
adc
jo
push
cmp
shll
sub
pop
mov
and
xchg
stc
pop
lds
repz
inc
and
or
and
xchg
mov
subl
fsubrl
aam
jns
or
popf
stos
and
jae
cli
dec
cs
or
adc
test
sub
push
jge
xchg
fnstenv
inc
aad
inc
mull
lock
cs
mov
aas
loope
fsub
mov
out
inc
xchg
cmpsl
jbe
mov
xlat
insl
pop
mov
cmp
inc
arpl
daa
test
sub
pop
cmpsb
pop
or
stos
sub
int3
mov
push
xor
push
movl
push
movl
movb
pusha
lea
jmp
stos
xchg
enter
mov
shlb
in
mov
jl
add
stc
imul
loopne
fs
xchg
xchg
fbstp
loopne
push
addl
daa
cmpsb
fadds
mulb
mov
lret
xchg
xchg
and
fcomp
std
ljmp
cmp
inc
shll
mov
je
add
xor
movl
jmp
movl
call
jmp
fwait
outsl
xor
or
jb
push
and
inc
das
cltd
stc
scas
sti
pop
and
enter
mov
cvtps2pi
push
aam
xlat
notl
test
test
dec
imul
xchg
add
add
cmpsb
adc
pop
mov
insb
add
sub
lret
inc
rorb
jp
push
push
enter
sub
push
sbb
psubusw
jne
inc
mov
data16
cmp
test
call
mov
cs
sub
jl
inc
rcr
ret
popa
add
mov
idivb
mov
iret
dec
iret
mov
shl
push
jno
lods
rorl
data16
mov
fldt
mov
das
sbb
jmp
jnp
insl
mov
hlt
xchg
shrb
push
dec
shll
xchg
pop
jle
jmp
movsb
adc
push
fwait
xchg
or
ret
inc
rol
sub
and
mov
mov
in
aad
cmp
xchg
pushf
lods
inc
out
and
lds
and
sbb
adc
int
popf
dec
mov
cmp
in
cmp
divb
push
mov
in
lods
repnz
jecxz
adc
sub
xor
jge
sub
dec
cltd
pop
xchg
lock
fld
fisttpll
in
enter
xchg
negl
cmp
sub
fsubs
push
jb
test
stos
dec
sbb
mov
dec
aam
pop
insl
dec
out
push
and
mov
inc
es
mov
ljmp
sbb
cmpsl
push
ret
adc
mov
shl
push
test
xor
xor
cs
out
mov
stos
xor
lea
pop
push
push
sub
xor
insb
cwtl
repnz
pop
cmp
stos
push
sti
mov
hlt
xchg
mov
clc
fwait
and
cmp
rolb
adc
lret
in
cli
xchg
iret
adc
push
mov
stos
iret
fiaddl
lahf
cmpl
test
frstor
addr16
sub
push
popf
adc
leave
sbb
push
mov
mov
sub
pop
sub
jnp
push
add
aaa
sub
and
or
adc
ficompl
insl
mov
inc
shll
or
aaa
inc
inc
and
sbb
and
mov
lea
jmp
movl
pushf
call
outsb
mov
sbb
mov
fdivl
mov
mov
movsb
lret
imul
fists
pop
jecxz
insl
dec
sub
repnz
inc
pop
push
dec
and
mov
lret
push
int3
adcl
rcll
xor
adc
stc
add
mov
incb
jle
loope
cltd
xor
or
ret
lds
sub
jbe
call
sbb
daa
leave
jnp
sti
mov
xchg
jnp
mov
push
inc
repnz
cs
fdivs
jno
mov
out
imul
dec
repnz
aaa
data16
xchg
push
sahf
les
inc
shlb
insb
dec
mov
push
or
and
out
or
lods
sbb
popa
ljmp
loopne
inc
add
call
bound
sbb
mov
aam
mov
xor
push
mov
xchg
test
mov
adc
fldt
ja
leave
shl
lahf
xchg
xchg
jge
mov
shrb
fadds
mov
iret
mov
cmpsb
cmp
into
mov
xchg
jmp
pop
jl
pushf
int
cld
cmpsb
adc
add
lret
lds
pop
push
dec
sub
pop
sbb
push
nop
fs
neg
cs
xchg
leave
inc
dec
mov
popf
out
iret
fs
punpcklwd
rcll
jno
cmp
or
inc
stc
orb
je
clc
push
orl
in
fcoml
test
lds
inc
sub
inc
into
lret
jmp
mov
sbb
dec
fisttps
into
mov
fimuls
pop
andb
popf
jns
jp
jnp
lods
nop
mov
xlat
dec
pop
in
or
and
sbb
mov
ficoml
arpl
jg
and
into
mov
movsb
rolb
lock
cmp
loope
ret
std
adc
std
sub
mov
inc
into
test
and
push
ret
movl
push
push
push
lea
jmp
adc
inc
fidivs
sbb
push
jae
or
jne
cmpsl
cmp
cld
imul
jg
je
test
mov
adcl
mov
in
lret
pop
xchg
cli
and
call
cltd
ret
test
cltd
insl
sbbb
test
push
mov
xor
repz
aaa
dec
push
push
hlt
data16
aam
fnsave
push
add
aaa
sub
and
jae
mov
loopne
scas
mov
movsl
aas
negl
hlt
lods
lcall
cmp
xor
adcb
pop
in
mov
std
jle
mov
xchg
negb
nop
jmp
dec
xlat
ret
mov
jnp
movsb
sbb
fwait
mov
clc
gs
into
fcoms
push
mov
sti
xchg
dec
jmp
jge
lods
lds
jbe
nop
jnp
and
cmpsb
popa
outsb
xor
les
inc
int3
mov
add
push
cmp
jg
out
loop
push
icebp
jne
xchg
mov
int
outsl
sub
mov
bound
cmp
int
jne
out
imul
adc
push
pusha
jle
shll
xor
lock
jo
pop
inc
adc
cmc
cltd
pop
insb
popf
sahf
cmp
xor
test
out
mov
add
mov
xor
dec
mov
call
sub
xor
jp
pop
pop
mov
les
cwtl
dec
push
add
imul
cmc
or
mov
jp
lcall
jo
add
push
inc
mov
je
repz
int3
and
push
aas
repz
inc
in
push
mov
add
add
and
hlt
push
adc
inc
aas
push
xor
and
in
dec
adc
mov
jmp
pop
jg
pushf
flds
inc
lret
insb
lock
sbb
add
in
es
rcll
lods
in
enter
enter
sub
mov
mov
shrl
mov
outsb
cmc
mov
jp
and
inc
loopne
and
push
aam
jecxz
hlt
aam
xor
xchg
adc
jns
testb
leave
mov
cwtl
enter
stos
xchg
les
push
cmp
sbb
pop
popf
dec
jae
xchg
cmp
mov
in
xor
jno
mov
pop
push
push
cmpsl
adc
ja
stos
push
inc
dec
push
je
inc
xchg
ja
pop
inc
ret
imul
testl
in
rcrl
or
je
mov
sub
jne
xor
xorl
inc
enter
mul
shrl
nop
mov
ficompl
and
or
rep
pop
mov
push
and
cmp
in
sbb
mov
xor
xor
je
lret
lahf
push
mov
roll
add
nop
iret
cwtl
cmp
loopne
decb
inc
jg
pushf
adc
sbb
dec
inc
pop
jbe
cltd
aad
cmpsb
inc
jb
pushl
pusha
jmp
jmp
or
popf
push
lret
pop
nop
shrb
jbe
or
pop
cld
mov
out
inc
xor
pop
inc
sbb
test
mov
scas
rcll
inc
inc
jmp
add
cmp
and
jecxz
or
out
xor
sti
cmpsb
jecxz
pop
xor
sahf
cmp
jge
lcall
cmp
sub
cmp
push
cmpsl
sbb
cwtl
mov
icebp
pop
fistl
sbbl
add
cltd
rclb
sub
inc
sbb
mov
sbb
in
cmpsb
lock
dec
sub
push
jp
mov
mov
push
pop
adc
and
popa
inc
and
loopne
das
adc
mov
cmpsb
xchg
cmp
dec
loope
push
sbb
in
push
inc
loop
and
fsubrs
sub
daa
jo
out
mov
loop
je
imul
jecxz
push
lcall
inc
stos
movl
pusha
mov
call
pusha
call
cltd
mov
movsb
mov
pop
adc
clc
pushf
ljmp
jmp
pop
ret
sahf
testb
pop
or
or
mov
loopne
jge
jp
mull
loopne
pop
mov
stos
inc
outsl
lock
fcomip
jg
cltd
sub
cwtl
rclb
push
cmp
jbe
mov
cmp
popa
cmp
incl
jno
mov
xchg
jb
mov
add
ror
in
ror
sub
cs
jge
imul
add
insb
ja
pop
and
js
fidivrs
nop
hlt
in
ljmp
mov
dec
insl
leave
mov
push
inc
pop
sbb
xchg
sub
cmc
mov
sub
mov
add
or
mov
fwait
mov
fcompl
loope
cmp
out
mov
imul
icebp
jl
dec
subl
xor
and
popa
push
pop
cmp
bound
clc
mov
fnstsw
or
leave
dec
jle
adcl
cltd
xor
pop
negb
xor
cs
cmovle
mov
inc
aad
cmpsl
loop
shlb
leave
aad
push
inc
add
xor
sahf
aas
leave
and
lret
push
mov
leave
jmp
into
mov
add
shlb
js
xor
dec
std
xchg
or
lock
loope
sbb
fnstsw
mov
lret
push
ffreep
fwait
adc
or
mov
sub
jmp
aad
outsl
ja
ret
divl
sub
mov
adc
pushf
push
dec
repz
ret
ja
arpl
fs
test
ja
pop
cmp
das
adc
xlat
add
jb
stos
adcl
movsl
outsl
scas
notl
test
mov
pop
jbe
loop
mov
ja
das
mov
aad
xor
adc
hlt
fcoml
pushf
cmc
cwtl
pop
mov
mov
jmp
loope
xchg
lret
lock
push
aad
or
std
jl
inc
cmp
aaa
mov
push
xor
sbb
std
imulb
sbbb
push
and
jge
lock
mov
pop
outsl
jecxz
aad
in
adc
outsb
and
dec
push
mov
push
mov
sub
dec
add
mov
lods
xchg
inc
in
and
inc
xchg
or
loopne
mov
mov
lea
ret
cmp
mov
mov
fbld
dec
sbb
repnz
add
push
dec
iret
lea
call
pop
lahf
inc
pop
movsb
cmpsb
inc
out
mov
pop
xor
mov
inc
sbb
pop
push
sub
out
sarb
test
mov
cmp
xchg
jnp
jno
mov
inc
ret
mov
xchg
fisubs
mov
int3
nop
addb
push
cli
adc
pop
xor
pop
or
inc
out
pop
jns
sub
mov
or
ds
xor
and
xchg
mov
jnp
xorl
sub
pop
cld
jl
mov
inc
and
push
or
pop
ret
rcl
sub
insb
out
or
lds
push
pop
stc
and
cmp
divl
out
push
mov
ss
mov
push
mov
mov
popf
loope
push
mov
inc
sbb
push
push
jns
js
jnp
sub
test
xorl
fcmovnbe
testl
dec
ss
add
inc
pop
dec
jg
jl
fisubrs
mov
mov
in
fisubl
mov
cmp
clc
jnp
adcb
nop
test
mov
daa
divl
inc
loopne
mov
inc
dec
scas
scas
or
pmaddwd
sbb
jge
ret
fs
insb
cmpb
mov
adc
inc
mov
mov
sub
shlb
sarb
lods
inc
pop
shl
lret
pop
rolb
dec
hlt
andb
mov
rcrl
hlt
roll
out
push
in
leave
negl
shrd
dec
insl
ljmp
lret
cld
notb
lock
dec
das
xchg
push
adc
xor
imul
cltd
mov
sub
mov
daa
subl
add
out
mov
or
xor
popa
jnp
sbb
push
decl
fisubrs
mov
enter
xchg
push
and
jecxz
mov
xor
lahf
push
dec
leave
imul
notb
add
fisubrs
dec
adc
cmp
aas
adc
mov
xchg
rcll
push
cmp
sbb
cmpsb
fbld
inc
pop
adc
scas
jmp
jmp
xchg
shll
jecxz
mov
push
mov
mov
pop
fistps
cmpsl
imul
xchg
mov
add
push
and
lahf
xor
out
data16
std
mov
pop
clc
mov
add
into
mov
add
jmp
lcall
pop
inc
pop
movsb
enter
and
mov
add
add
aaa
leave
mov
clc
outsb
xlat
test
xchg
mov
dec
int3
sahf
cmp
mov
mov
push
adc
das
mov
jnp
push
popf
cmpb
cmpsb
inc
ss
outsb
xor
out
fdivl
loopne
cmp
pusha
and
leavew
mov
arpl
sbb
test
push
jbe
repnz
sbbl
dec
dec
les
stos
mov
pop
xchg
mov
mov
adcl
std
std
addb
ret
jbe
pusha
iret
enter
gs
mov
pop
or
xchg
lea
cmp
jno
dec
inc
shll
aam
push
int3
add
in
sub
test
in
popf
and
mov
inc
ss
in
xchg
push
mov
jge
pop
mov
jmp
adc
inc
mov
lock
fstps
pop
outsb
cld
scas
mov
xor
pop
push
add
or
sbb
je
push
pop
sbb
push
les
inc
leave
shll
add
fadds
push
sub
cmpsb
mov
fwait
test
mov
mov
cwtl
jno
mov
loopne
pop
popa
arpl
inc
and
mov
pushf
lea
jmp
pusha
movl
jmp
gs
xor
xor
lea
scas
cwtl
fidivrs
pop
cltd
mov
repz
repz
inc
push
in
shlb
fistl
cld
xchg
fs
mov
xor
inc
lods
pop
in
sub
or
sti
xchg
xor
stos
icebp
lretw
xlat
daa
push
xchg
clc
pop
push
mov
sub
int3
enter
hlt
test
jne
outsl
jno
cmp
pop
mov
repz
test
xorb
aam
lret
pop
insb
mov
movl
jmp
out
dec
or
mov
repz
inc
sti
lods
in
gs
lcall
mov
mov
xchg
lahf
xchg
sbb
jmp
call
incl
dec
adc
loop
mov
daa
hlt
or
xchg
gs
and
sub
roll
xchg
in
pop
movsb
stos
jp
mov
push
call
inc
orl
clc
ss
push
movsb
pop
mov
fdivrs
sub
add
or
test
mov
or
stos
mov
mov
pop
mov
shl
xchg
inc
or
test
push
scas
lods
fsubrs
mov
mov
stos
stc
or
mov
pushf
scas
push
dec
adc
mov
pusha
test
mov
push
sbb
lods
movl
je
sub
fidivl
ljmp
pop
push
sub
jb
push
xchg
fbld
xor
lahf
mov
mov
lret
cwtl
or
add
ss
sbb
imul
imul
push
int3
and
sbb
jecxz
jnp
repnz
aam
lds
mov
xchg
or
addr16
add
xor
shr
xchg
mov
and
in
adc
inc
cmp
pop
or
jbe
pushf
jmp
or
jl
mov
fs
nop
test
xor
pushf
std
mov
jae
ret
fsts
inc
insl
jb
lretw
push
push
push
shlb
ret
ror
icebp
rcll
pop
scas
push
out
mov
dec
cmc
and
push
je
imul
cltd
jg
inc
sub
sbb
and
push
xchg
jne
push
rcr
adc
out
bound
sbb
std
inc
mov
lea
ja
push
movl
pusha
movl
push
pusha
pushl
lea
jmp
push
movl
call
sbbl
in
push
or
and
mov
mov
mov
lret
push
orl
push
pop
imul
push
inc
roll
sti
lods
inc
out
adc
push
stos
sbb
dec
push
add
dec
dec
imul
out
mov
rcll
ret
lahf
fisttpll
inc
mov
dec
or
add
iret
push
add
or
mov
ljmp
jg
dec
jp
push
pop
mov
mov
scas
jb
inc
dec
mov
xchg
pop
jmp
jb
push
lods
xor
iret
mov
adc
pop
jle
cs
arpl
cmc
jns
push
ficompl
std
sub
mov
inc
mov
jle
mov
and
sti
mov
bnd
push
shrl
add
cld
test
dec
adc
mov
add
sbb
or
pop
loopne
adc
push
pop
jnp
push
jno
adc
insl
dec
lea
dec
sub
push
in
lcall
jmp
cwtl
imul
push
je,pn
mov
push
call
jo
xor
imul
cltd
test
sbbl
shrb
adc
popl
jns
xor
imul
popa
iret
sub
sub
sbb
push
and
std
mov
mov
into
int3
xor
mov
stc
xor
pushf
clc
mov
dec
enter
add
cmp
pop
and
out
add
or
mov
dec
add
sub
push
or
stos
mov
fsts
repz
aaa
jmp
cmpsl
sahf
push
sbb
shl
lods
pop
in
mov
imul
add
stos
sti
test
inc
mov
pop
fdivl
imul
bound
inc
ss
mov
fldenv
jo
or
ret
dec
stos
stc
adc
popa
xchg
mov
sub
pop
lret
mov
or
test
add
and
movl
cwtl
movb
dec
pop
sub
out
in
sub
inc
pop
mov
jg
stos
inc
inc
mov
ret
ja
adc
out
call
scas
sub
aas
inc
jmp
xchg
mov
dec
mov
dec
xchg
pop
and
or
xlat
movsb
int
enter
adc
ficompl
adc
push
call
inc
pop
inc
shll
int
mov
mov
cmpsl
es
js
aam
xor
imul
cmp
add
std
dec
xchg
clc
scas
call
or
dec
adc
pop
out
rolb
mov
les
pop
shl
xor
test
inc
sub
xchg
mov
sub
gs
dec
hlt
xchg
mov
test
in
test
call
mov
or
mov
inc
int3
pop
mov
outsb
cmp
mov
push
or
inc
mulb
sbb
sahf
mov
nop
lea
fs
mov
loopne
inc
sahf
cs
and
cld
rolb
shlb
cltd
inc
adc
xchg
out
mov
cmpsl
hlt
mov
push
inc
insb
das
xor
mov
pop
inc
mov
ret
push
cmpsl
call
mov
sub
pop
rcll
push
cmc
inc
mov
jae
cmp
mov
xor
pop
outsb
and
jg
mov
lea
mov
mov
mov
push
or
fidivl
stc
push
int3
sbb
dec
mov
mov
mov
ret
insb
push
dec
xorl
xor
mull
push
xchg
mov
mov
adc
push
jns
hlt
mov
cmpsb
jl
imul
push
aad
adc
sbb
stos
jb
xor
mov
sbb
enter
mov
rcll
cmp
addl
stos
pop
out
xchg
stos
mov
xor
scas
in
rclb
inc
xor
cmp
rclb
add
ja
adc
mov
mov
fs
xor
enter
cmp
add
daa
xchg
adc
xchg
mov
inc
inc
out
cld
push
dec
push
xor
mov
inc
adc
mov
inc
sub
loopne
inc
repnz
mov
adc
push
jmp
fwait
loop
jno
xchg
lahf
pop
icebp
jae
jno
int
cmpsl
push
test
mov
mov
test
push
sub
and
pop
dec
sbbl
test
aad
jecxz
and
dec
cwtl
inc
mov
loope
ret
sub
xor
dec
or
add
or
ss
cs
mov
stos
dec
pusha
jg
cmp
insl
sbb
push
mov
lea
icebp
or
jg
inc
ss
sti
ficoms
rcll
dec
sub
cwtl
push
dec
and
xor
int
lock
push
pop
fsubr
mov
loope
jecxz
jle
mov
dec
daa
insb
xor
data16
mov
lcall
jb
inc
xchg
push
fs
in
or
or
pop
into
test
shlb
fdivl
mov
out
cmp
dec
imul
xchg
lea
daa
sarl
mov
pop
dec
adc
mov
push
punpckhwd
addr16
mov
dec
or
in
mov
sbb
repnz
clc
lods
lret
inc
adc
xchg
mov
in
jmp
lahf
pushw
fsubs
adc
decl
dec
jnp
shrl
dec
mov
in
aad
sbb
adc
stc
mov
mul
sub
jle
test
and
lea
insl
fiaddl
mov
xchg
std
lahf
and
stos
fbld
lret
mov
mov
test
pop
into
pusha
push
jo
xchg
adc
pop
push
mov
jo
aaa
adc
push
jecxz
ret
xchg
mov
fcomps
icebp
pusha
jp
pop
out
pop
not
or
jmp
lods
repnz
mov
andps
push
jns
inc
pop
test
imul
fwait
mov
xchg
mov
or
adc
mov
cs
and
push
cmp
stc
sbbb
cs
nop
call
jb
xchg
das
scas
into
stos
inc
inc
mov
call
dec
adc
stc
cmpsb
mov
test
mov
int
stos
stc
fldt
lcall
add
push
push
out
xlat
fadds
stos
mov
cli
fsubrl
frstor
inc
mov
lods
adcl
xchg
inc
xchg
stc
or
out
push
mov
add
jge
jmp
mov
lock
bound
vpsrld
dec
in
les
jno
lret
std
cmp
mov
pop
lahf
leave
mov
stc
mov
mov
inc
xor
lods
mov
mov
xchg
cmp
add
pop
std
sbb
inc
stos
add
add
dec
movaps
aaa
or
pusha
pop
mov
push
filds
mov
sti
dec
push
mov
aam
mov
jnp
cmp
mov
iret
gs
mov
inc
clc
sub
ret
mov
iret
mov
cmpsl
sbb
mov
sub
mov
inc
jno
pop
idivb
int
pop
inc
mov
pop
dec
push
or
xchg
add
sbb
out
mov
dec
push
mov
xor
stos
sbb
inc
mov
or
push
movl
pushf
pushf
pusha
pushf
lea
jmp
pusha
movl
pusha
mov
movl
mov
lea
jmp
pushf
jmp
pusha
movb
movl
call
jb
push
call
and
mov
push
and
sbb
fwait
scas
stos
sub
cmc
mov
sub
je
cld
scas
in
cwtl
jmp
or
je
mov
inc
mov
cmp
xor
jnp
jmp
pushf
pop
pop
daa
test
mov
cli
movsl
mov
push
xlat
cs
lcall
ret
aas
push
or
jbe,pn
sub
push
adc
cmc
imul
jns
cmpsl
aam
icebp
xchg
fisttpll
out
pop
jp
gs
ss
xor
cs
dec
mov
lret
repz
fwait
rorb
jecxz
shl
pop
jns
outsl
fwait
cmpsl
mov
mov
xchg
and
jo
adc
nop
mov
leave
or
xor
mov
xor
xchg
outsl
add
out
push
cmpsl
pop
cmp
lcall
loopne
sbb
je
mov
test
cmp
jae
push
dec
xor
mov
mov
adc
mov
xchg
sbb
dec
push
add
adc
cwtl
std
movsb
dec
inc
mov
push
test
xor
push
scas
mov
adc
aaa
mov
outsl
jecxz
fidivrs
dec
xor
pop
inc
jle
popf
push
insb
jo
scas
aas
dec
lea
out
sarl
add
pop
and
aad
mov
popf
rcrl
or
test
jmp
sahf
out
int3
test
inc
arpl
cmp
mov
and
fs
xor
xchg
mov
push
in
push
stc
movsb
call
xchg
mov
dec
scas
std
cmp
mov
mov
fdivrs
into
jo
push
and
xchg
ret
pushf
std
inc
lret
jl
inc
mov
cmc
inc
mov
aam
add
clc
inc
enter
ret
dec
jmp
repz
mov
or
inc
aas
push
dec
push
cmp
sub
push
movsl
adcb
lods
loopne
ss
pushf
inc
mov
xchg
or
lahf
pop
out
std
jae
out
xchg
movsb
ret
jo
test
pop
or
add
test
ret
pushf
xorb
and
cwtl
cmpsl
jecxz
add
je
loopne
push
jmp
and
pop
call
leave
imul
inc
aad
or
mov
sbb
xor
pusha
incl
fsubrs
push
cs
ja
movsl
repnz
cmp
pop
push
stos
inc
mov
inc
add
enter
movsl
pushf
cld
xchg
xlat
xchg
shll
pushf
push
push
sbb
or
js
pop
add
inc
arpl
jb
fs
test
repz
int
jno
fwait
mov
je
pop
nop
sti
leave
jno
data16
mov
mov
cmpl
outsb
sbb
pushf
xchg
ret
mov
pop
fdivrp
pop
jge
or
les
add
pusha
jns
and
aad
ss
cmpsb
nop
mov
xor
xlat
sub
mov
cmpsl
mov
dec
leave
sub
mov
inc
test
loopne
lock
cmp
mov
mov
std
repz
adc
in
in
iret
xchg
push
aad
das
inc
or
ficoml
xchg
mov
sbb
ljmp
mov
shlb
fs
int3
sbb
in
test
dec
inc
or
jg
aaa
addr16
movsl
hlt
mov
test
lahf
aam
fiaddl
sub
push
sbb
xchg
mov
xchg
inc
dec
dec
push
loop
sub
aam
mov
test
inc
mull
aaa
repz
fwait
mov
clc
movsl
sbb
jnp
or
enter
xchg
pop
test
sbbb
mov
mov
std
jle
cmpsl
sti
mov
out
or
insl
jae
dec
mov
cmc
sub
sbbb
mov
mov
adcl
mov
cmp
sbb
or
imul
cvtpi2ps
das
xor
clc
pop
jno
push
loop
and
popa
aam
pushl
lcall
ret
push
jno
bound
sub
clc
negb
cmp
lea
aam
xor
inc
mov
lock
std
inc
mov
lock
mov
sbb
scas
xor
pop
cvtps2pi
lret
retw
add
mov
gs
pop
lahf
mov
pop
mov
jmp
je
test
int3
jmp
pop
add
rcl
pop
xchg
shl
pop
stos
ss
sbb
mov
mov
push
stos
loopne
jle
pop
sti
lds
inc
out
mov
adc
inc
mov
pop
mov
pop
aas
xchg
jle
push
xchg
out
mov
sub
ret
dec
sub
add
andb
dec
ffree
sub
dec
cmpsb
jmp
into
add
aad
pop
pop
push
mov
loop
lret
add
adc
stc
lods
call
insb
call
arpl
pushf
xchg
negb
repz
out
imul
fsub
add
mov
xor
cmp
sub
mov
mov
xor
pushf
movl
call
xor
mov
dec
xchg
mov
dec
pushf
ret
mov
jo
mov
repz
dec
and
push
jb
lods
cmp
loope
push
addr16
shlb
jbe
pushf
ds
es
repz
mov
jle
jmp
jge
popa
js
add
gs
xchg
or
or
aas
mov
cmp
lds
mov
mov
stos
mov
std
jo
stos
movb
push
stc
inc
data16
ret
mov
dec
sub
sub
mov
jae
nop
jbe
jno
xchg
enter
cmp
pusha
js
ss
cs
popf
add
xor
fucom
cli
xchg
sbb
inc
and
mov
mov
mov
shl
out
fdivrl
sbb
xorb
mov
fwait
inc
mov
sbb
dec
and
xchg
das
cld
inc
scas
jge
xor
aam
lret
mov
push
xlat
lods
enter
mov
dec
sub
adc
lahf
fldcw
or
jno
pop
es
mov
and
lock
mov
les
mov
ss
mov
push
repz
inc
popf
inc
jecxz
push
fbld
pusha
sub
or
rolb
sbb
xchg
cmp
adc
ret
xchg
add
add
xor
vunpcklpd
dec
xor
push
jae
cmpsb
inc
pusha
rcrl
repz
in
lea
rcll
jbe
dec
and
repnz
mov
sub
and
loope
dec
jno
add
xchg
stos
scas
jp
jo
pusha
add
dec
sub
cltd
imul
lahf
sub
bound
dec
push
cltd
clc
dec
push
cmp
scas
add
lea
push
mov
lock
out
in
xchg
loopne
fsubl
and
sahf
lret
stos
dec
insl
mov
xor
stc
mov
aaa
inc
scas
dec
jle
bound
push
pop
dec
cmpsb
stos
pop
adc
xchg
repz
jb
movb
stos
sub
xlat
out
int
into
sub
rolb
icebp
fs
adc
leave
in
das
mov
jmp
pop
add
mov
shrb
enter
mov
lret
fsubs
inc
arpl
sub
test
pop
mov
in
pop
imul
mov
stos
mov
xchg
push
adc
mov
incb
popa
xchg
push
movsl
pushf
mov
sbb
popa
mov
fwait
mov
pop
cmp
xchg
jp
mov
sbb
jno
mov
adc
push
jle
and
aam
pop
add
mov
mov
leave
fisubrs
lock
xor
ja
push
sarl
adc
cmpsl
loopne
mov
stos
fucomip
mov
test
xor
push
pop
movsl
stc
int3
aas
imul
mov
scas
mov
cmc
add
out
fidivl
and
add
mov
cmpsl
repnz
mov
lods
mov
ret
js
aam
arpl
jmp
std
movsb
loop
and
je
das
lgs
call
dec
mov
push
inc
clc
mov
inc
ss
repnz
push
cmpsl
push
mov
push
jo
mov
ja
adc
sbb
and
sbbb
outsb
icebp
jl
je
push
bound
lret
ja
pop
scas
imul
and
pop
inc
imul
sbb
inc
icebp
outsb
out
iret
mov
push
inc
dec
mov
ret
mov
pop
dec
dec
or
incl
stc
adc
pop
dec
push
lods
movb
es
mov
stc
mov
aas
rcrb
insb
das
scas
lret
lods
sub
push
inc
xlat
adc
or
jnp
imul
xchg
jecxz
push
push
sbb
in
sbbb
mov
cmp
aaa
sub
out
testl
repz
jb,pt
enter
sbb
imul
in
scas
xlat
mov
cli
xor
loop
pop
fmul
ljmp
icebp
adc
xchg
sbb
mov
jl
mov
mov
lret
sbb
xlat
mov
stos
testb
inc
push
imul
lods
push
cmp
fdivrp
mov
les
sbb
jl
fstpt
push
lock
call
lock
aas
andb
cmp
adc
cmpsl
mov
jmp
xor
leave
push
jg
mov
mov
sbb
add
xlat
mov
stc
cmp
lods
inc
inc
jle
movb
pushf
movl
pushl
movw
lea
jmp
loopne
test
js
into
lods
xchg
aad
shll
dec
jmp
popf
dec
adcl
imul
push
pop
inc
hlt
push
and
shl
pusha
mov
les
jns
ja
aaa
inc
aaa
jns
mov
pop
mov
call
or
mov
sbb
adc
out
xchg
int3
in
jge
mov
notl
mov
scas
mov
fmull
xchg
and
addl
sub
and
add
cmp
and
fs
jmp
je
or
outsl
fstps
dec
ds
dec
mov
cmpsb
mov
pop
test
mov
jno
xchg
add
nop
jge
jg
xor
mov
andb
dec
lcall
idivl
sbb
mov
xchg
adc
cld
mov
or
mov
mov
int
stc
test
inc
stos
push
inc
lods
sbb
jne
movsl
mov
or
mov
adc
adcb
mov
imul
xchg
loopne
and
test
mov
lret
movsb
imul
icebp
jb
inc
sub
push
cmp
and
loopne
sbb
cmp
clc
test
insl
in
outsl
nop
inc
out
pop
and
es
stc
lcall
out
cmp
jl
cmp
leave
or
pusha
lahf
mov
shl
test
pop
and
fmulp
dec
mov
mov
pop
outsb
pop
out
mov
adc
jg
fucomp
dec
jne
jne
cli
sahf
daa
mov
mov
inc
push
push
add
in
inc
sbb
loop
add
jl
jg
scas
fstps
inc
out
sub
fbstp
xchg
loopne
test
mov
outsl
lahf
test
xor
fwait
out
cs
jge
mov
fs
add
ret
cltd
cmp
fcmovb
push
lret
ret
mov
adc
movsb
sub
in
push
ljmp
pop
addr16
inc
mov
aaa
add
xor
mov
int3
cmp
out
sahf
and
adc
mov
dec
jnp
push
xor
nop
cmp
mov
out
dec
int
jne
xor
adc
loope
push
jae
lock
aas
sbb
jle
mov
push
dec
pop
in
pop
and
push
test
push
and
aad
pop
cs
out
adc
cmp
xchg
ret
and
int3
in
mov
mov
lahf
int3
sub
mov
xchg
out
pop
and
xchg
in
std
cmp
outsl
add
xchg
cld
dec
ss
out
xchg
jmp
xchg
add
ljmp
cmc
xchg
fildll
fstl
das
insl
loop
mov
push
xor
int3
add
fs
enter
outsb
pop
ss
fdivl
out
arpl
andps
loopne
jmp
cli
fildl
cmp
repz
je
mov
sub
cs
shrl
xor
test
push
adc
hlt
add
mov
repnz
sbb
dec
add
xor
jle
adc
cmp
ljmp
mov
jb
mov
ret
imul
add
and
scas
aad
in
mov
popf
shrb
je
pop
jns
xor
push
shll
int
push
push
jle
jns
mov
outsb
push
inc
cmpsl
scas
hlt
dec
pushf
pushf
pushf
movl
mov
pushf
movl
pushf
push
pusha
lea
jmp
out
lock
sub
dec
int3
stos
ljmp
test
jecxz
icebp
push
pop
aas
inc
lods
mov
add
jp
out
cmc
adc
in
mov
mov
dec
testb
lock
pop
mov
fwait
aad
xchg
outsb
cs
popf
repz
inc
inc
jnp
jg
mov
cld
adc
icebp
mov
fldt
es
xor
daa
cmp
ja
cmp
rcll
xor
in
jne
adc
rorb
inc
xor
test
xchg
mov
arpl
out
or
mov
push
sbb
test
or
fisttpll
sub
xchg
xor
movsl
sbb
shlb
mov
leave
ret
xor
mov
std
ret
xor
xchg
mov
cld
in
xchg
imul
lds
fsts
inc
push
inc
ror
test
xchg
fimuls
ficoml
aam
or
inc
cmpsb
pushf
pushf
orb
shlb
imul
or
push
or
mov
int3
ficoml
jecxz
imul
adc
shl
jnp
push
pop
cmp
orb
inc
lock
jbe
shl
lods
stos
insb
rcll
sub
bound
jge
xchg
jge
dec
inc
sti
stos
adc
mov
jns
out
addr16
fldl
jmp
aad
repnz
loopne
mov
inc
leave
imul
lock
xchg
fisubl
adc
xchg
filds
xlat
adc
xchg
mov
xor
daa
loopne
adc
sub
push
inc
movsl
in
aaa
jl
adc
icebp
lods
out
fs
xchg
and
in
push
sbb
frstor
mov
lods
mov
lahf
popa
xor
in
sbb
dec
or
mov
aaa
mov
inc
gs
mov
adc
or
movsb
loopne
add
cltd
out
test
mov
sub
cmpsb
sub
jl
jmp
mov
mov
iret
popf
fimull
hlt
jbe
imul
or
push
push
dec
das
in
jb
push
push
dec
lcall
fstpl
adc
inc
sbb
gs
inc
movsb
xchg
fstps
insb
cwtl
ret
xchg
pop
inc
pop
mov
data16
mov
mov
or
jns
outsl
ja
push
mov
in
push
data16
inc
push
scas
dec
movsb
cmpsl
add
and
adc
test
xchg
fadd
test
lock
lods
sub
ss
out
lock
sbb
sub
jnp
inc
movsb
mov
mov
mov
pop
in
into
stos
adc
mov
arpl
and
or
sbb
mov
fwait
inc
out
mov
into
shll
mov
adc
xor
jnp
sahf
xchg
inc
mov
andl
cwtl
inc
or
or
std
cmpsl
cmc
xchg
incl
jle
push
jno
inc
movsl
sbb
ret
push
push
movl
mov
pushl
movb
lea
jmp
sub
insl
xacquire
stos
and
dec
pop
xor
push
in
mov
mov
lods
pop
inc
fsubrl
mov
push
jae
pop
jecxz
xlat
sub
or
fs
pop
das
out
cwtl
mov
fsubl
xor
xor
cmp
sbb
pop
stos
cld
jbe
aad
sbb
dec
sbb
cmp
mov
fs
inc
cmp
in
shl
nop
dec
jbe
movsl
scas
mov
imul
add
inc
pop
incl
mov
mov
nop
movsb
adc
and
xor
popf
in
hlt
inc
pusha
push
add
push
pop
inc
cmpsl
or
sbb
add
and
jg
in
fwait
iret
movsl
daa
and
clc
pop
lret
mov
mov
sub
test
out
xor
jl
movb
cmp
fdivrl
jp
dec
cs
andl
aaa
dec
inc
jo
adc
ja
fisubl
sbb
mov
xchg
and
sub
gs
and
pop
and
fbstp
jbe
shll
xor
xor
test
sbbl
out
jb
dec
inc
stc
loope
mov
cmp
mov
sbb
push
xor
popf
pop
mov
in
adc
push
mov
in
push
outsl
sbb
cld
sub
push
ret
jb
or
sbb
sbb
arpl
movsl
bound
cmpsb
ret
xchg
fdivrp
ret
repz
in
cmp
push
mov
xor
mov
xor
pusha
jne
fcoms
inc
add
pushf
sbb
jl
pop
or
movsb
lret
inc
popa
negb
dec
loopne
repz
pop
enter
loop
loop
cmp
inc
mov
push
pop
add
movl
pusha
lea
jmp
jge
pushf
mov
movb
movl
pusha
pusha
movw
call
push
push
pushf
movl
pushf
movl
push
lea
jmp
stc
xor
mov
xchg
mov
jnp
cmp
cmp
cld
mov
ror
dec
or
cmp
jnp
leave
mov
or
push
hlt
imul
and
dec
mov
out
add
dec
add
add
mov
jg
call
jp
and
mov
push
sbb
insb
sub
and
adc
mov
mov
xor
nop
sub
add
cmpsl
sbb
push
mov
or
iret
ds
lahf
push
xchg
dec
aaa
xchg
add
std
sbb
sub
push
aad
outsl
lret
inc
ja
adc
mov
test
xchg
xor
mov
mov
iret
push
ret
stc
jmp
cmp
enter
movsl
xchg
and
outsl
or
xchg
rol
fs
rol
cmp
subl
ds
cmpsl
xchg
shll
aaa
inc
mov
fs
stos
pushf
pop
xor
xchg
mov
repnz
jb
fadd
push
push
mov
mov
xchg
jmp
cmp
movl
cs
xchg
fisubrl
mov
mov
scas
xchg
or
jo
xchg
jmp
cmp
decl
dec
arpl
cmp
add
jle
aaa
jno
xor
cmpsl
inc
inc
lods
jb
jnp
xor
imul
sub
xor
cmpsb
in
hlt
cli
stos
jg
ljmp
andl
dec
sbbb
mov
sbb
mov
push
pop
sbb
es
negl
cmpsl
push
cmpl
push
aas
aad
xchg
xchg
jnp
push
xchg
cmpsl
mov
fistps
mov
and
std
add
pop
adc
or
mov
pop
fwait
jne
popf
push
arpl
or
xor
pop
out
inc
rcr
and
sbb
popa
xchg
std
ljmp
mov
push
push
movl
movb
pusha
lea
jmp
and
mov
mov
mov
shlb
lret
test
out
push
icebp
js
hlt
xor
test
push
or
int
cs
das
jno
xor
dec
or
lods
rorl
inc
loopne
leave
andl
shl
pop
inc
mov
mov
lahf
adc
sub
pop
jne
sub
mov
icebp
popf
sub
call
sub
clc
mov
cmp
jecxz
loopne
jl
lret
enter
fsubr
je
dec
sub
out
rcr
jge
inc
mov
push
fnstenv
inc
je
scas
lock
dec
inc
dec
or
adc
imul
cs
xor
inc
sahf
mov
xchg
aam
in
pop
add
add
pop
mov
cmp
cmp
jp
inc
mov
xor
add
mov
dec
andl
out
mov
dec
sbb
jp
fstpl
xor
inc
lahf
cmp
daa
add
sub
sbb
loope
push
gs
dec
hlt
push
loop
popa
inc
adc
dec
push
adc
cmp
mov
lods
sbb
rolb
loope
xlat
sbb
ret
dec
mov
lods
aas
jno
nop
ret
push
jb
cmp
push
pop
add
mov
cmp
jb
dec
sbb
pop
or
sahf
or
cmp
scas
in
mov
jne
callw
inc
add
subl
inc
jne
scas
es
clc
mov
mov
cmp
imul
pop
cmp
pop
pop
inc
and
cld
jnp
add
cmc
aam
test
jmp
pop
pop
in
cmp
dec
pop
push
movl
pushf
push
movl
lea
jmp
adc
mov
into
sbb
sbb
xchg
mov
sbb
outsl
or
sub
mov
push
adc
or
je
mov
xor
mov
push
add
repz
cwtl
cmc
dec
and
pusha
cmp
add
pop
inc
jp
or
jmp
lcall
mov
inc
inc
pushf
rol
in
jne
in
sbb
das
imul
and
pop
xlat
movsb
ret
jb
pop
or
mov
subb
mov
mov
scas
popf
push
loop
sbb
sbb
jno
or
cwtl
add
scas
or
add
mov
pop
sbb
ja
fsubs
out
lret
mov
sbb
ffreep
rolb
pop
inc
movsb
test
or
inc
stos
lret
jno
rolb
pushf
xchg
mov
call
mov
loop
nop
lcall
or
fsubl
jle
add
mov
ret
push
jne
ja
cmpsb
push
mov
int3
adc
mov
cli
mov
imul
add
movsb
sti
xchg
iret
xlat
cwtl
adc
jae
stos
sbbl
jl
pop
inc
sub
add
dec
or
pusha
xor
mov
imul
pusha
pushl
pushf
lea
jmp
lods
push
fildl
add
fcoml
or
adc
dec
int
push
cmp
pavgb
aaa
push
mov
mov
xchg
cli
inc
cmp
jb
aas
jp
add
sub
test
fstl
gs
call
inc
pushf
push
inc
push
ret
push
mov
std
ficomps
test
stos
sub
pop
fwait
adc
out
cmc
mov
fidivrl
call
cltd
lods
push
dec
movsl
ljmp
mov
lahf
test
push
xchg
loope
mov
test
sbb
pop
xor
lods
lods
iret
mov
mov
push
jmp
adcl
pop
push
or
jge
push
in
adc
xlat
push
cmpsl
idivb
mov
and
push
cmp
jmp
mov
push
sub
mov
inc
lcall
aad
sub
pop
pop
add
mov
sbb
jge
jne
adc
push
adc
arpl
inc
in
jbe
mov
push
mov
sbb
jmp
xchg
sahf
jb
sahf
popf
jg
arpl
jo
xchg
xchg
repz
imul
sbb
mov
push
pop
ret
mov
lcall
cs
addb
lods
divl
std
lcall
enter
jb
lock
sub
pop
jge
clc
icebp
outsb
ja
or
ds
lret
aad
mov
shr
loope
je
jle
test
pop
cmp
push
cli
mov
pushf
cvtpi2ps
insb
xor
jle
add
fs
xchg
mov
dec
mov
mov
add
pop
mov
mov
mov
mov
fsubs
jmp
mov
xchg
rorb
inc
hlt
push
fsubp
mov
push
inc
cltd
out
jae
ret
xor
fldcw
addr16
xchg
and
dec
repnz
jne
sub
push
enter
gs
test
gs
lret
inc
mov
jmp
and
dec
dec
std
add
mov
inc
push
ja
or
and
push
stos
push
jo
and
int3
dec
xchg
idivb
jg
pop
movsl
and
xchg
fs
mov
data16
scas
xchg
xchg
js
mov
pop
or
pusha
pop
mov
cwtl
dec
arpl
sub
pop
push
sub
loop
push
push
jecxz
cwtl
sbb
and
mov
inc
sbb
xor
filds
scas
mov
push
out
sarb
add
pusha
or
inc
cwtl
ja
or
push
dec
add
mov
shrl
mov
and
imul
sbb
loopne
outsl
pop
add
lcall
add
rcl
call
or
fiadds
movsb
sub
cmp
imul
bound
subl
cltd
mov
sbb
fisttpl
mov
push
nop
scas
shl
xlat
iret
jns
lods
sub
enter
cwtl
xchg
mov
add
mov
sahf
xor
fsts
jl
mov
das
inc
pop
pop
es
jbe
jns
pop
mov
pop
pop
xchg
jge
ror
dec
shr
inc
jne
divb
push
stos
or
imul
sub
imul
hlt
and
fcoml
enter
cmp
test
cmp
jnp
xchg
mov
push
hlt
pop
mov
push
push
mov
cwtl
adc
sub
inc
fadds
test
test
rcrb
pop
add
std
mov
ret
mov
ret
mov
shll
jnp
frstor
lret
sub
xor
dec
push
fdivr
adc
add
or
push
mov
stos
push
dec
cwtl
scas
adc
and
not
dec
xor
ja
hlt
popa
adc
fldenv
cmpsl
jmp
add
push
add
std
mov
insb
jno
les
in
mov
jnp
loopne
frstor
cmp
mov
dec
sub
ffreep
jnp
gs
es
add
stos
movsl
das
pop
sub
adc
mov
pop
scas
sbb
cli
out
jae
mov
cli
xchg
les
xchg
pushf
xchg
stc
xor
es
xchg
scas
push
jnp
mov
cld
mov
fsubr
dec
or
xlat
jae
cltd
mov
test
pop
cli
movsl
push
xchg
adc
inc
cmpsl
dec
test
pop
out
jne
or
add
mov
rcrl
xchg
out
rolb
mov
push
sbb
pop
mov
adc
mov
lret
mov
das
jo
add
stos
ja
cmp
sub
push
sbb
scas
repz
push
xchg
lods
aaa
xchg
or
std
sbb
pop
bound
sbb
add
dec
adc
mov
mov
push
push
xlat
movsb
ret
cmp
mov
lret
and
push
movl
pusha
mov
pusha
movl
push
lea
jmp
mov
shll
jns
mov
fistpll
je
push
in
in
or
pop
sbb
repnz
jo
inc
xor
push
rcrl
mov
pop
popa
in
push
pop
xor
repnz
jp
push
andb
fimull
push
mov
inc
and
lods
pop
sbb
mov
xchg
cli
mov
cld
jg
and
out
push
and
push
movsb
and
adc
add
es
inc
xchg
fadd
js
test
xchg
jle
sub
fistpl
jo
pop
xor
pop
jle
jbe
mov
les
mov
adc
lahf
and
mov
xor
jg
and
sbbb
out
cmp
push
pop
inc
fisubrs
ljmp
gs
xchg
out
lahf
xchg
stos
out
pop
lea
mov
mov
push
bsr
mov
rcr
addb
into
cltd
repnz
orl
cmc
cli
outsl
push
pop
add
pop
lods
push
and
jo
lock
std
fildl
iret
or
insb
pop
inc
movsl
test
adc
arpl
xchg
in
cmp
pop
imul
push
pop
cmp
xchg
enter
sbb
jge
cmovp
push
das
repz
adc
push
adc
cmpsb
fcoms
iret
pop
mov
fildll
test
sub
shlb
add
inc
and
push
testb
imul
xchg
sbb
push
push
pop
xor
scas
cli
mov
dec
sub
roll
jle
mov
adc
dec
sbb
mov
js
mov
lret
pop
out
adc
xchg
push
dec
out
xor
fisubrs
xor
mov
sti
popa
push
aas
add
rcr
out
dec
sub
mov
dec
cwtl
mov
xor
int
imul
dec
xor
cmp
jp
inc
xchg
mov
adc
cmp
mov
stos
scas
mov
mov
jmp
clc
jge
xchg
mov
shrl
mov
fs
mov
cmp
mov
push
mov
cmp
add
out
pop
clc
mov
fistps
out
mov
xor
outsb
fisttps
xlat
add
xchg
inc
inc
jns
out
fldenv
pop
jl
push
adc
ljmp
insl
adc
mov
adc
fwait
xlat
imul
aas
xchg
sub
pop
sbb
mov
sub
mov
fildl
mov
and
adc
push
push
jl
jbe
addr16
pop
mov
in
rcrb
ljmp
lret
jmp
pop
out
das
inc
sbb
loopne
stos
mov
or
sub
pop
jnp
lahf
or
cmc
scas
jle
adc
inc
scas
push
mulb
xchg
setle
icebp
sbb
sbb
cmp
cmp
sbb
jg
jns
dec
pusha
push
sub
insl
xor
sub
pop
das
jl
outsb
pushf
aas
and
add
mov
rorb
xchg
add
push
inc
xchg
xor
pushf
mov
movl
push
movb
push
lea
jmp
bound
mov
add
shrb
das
dec
pop
cmpsl
and
jbe
add
popf
or
clc
inc
mov
iret
push
or
test
dec
pushf
jb
jp
cs
mov
xchg
nop
in
pop
xor
jne
inc
adc
scas
ljmp
xor
jp
in
sub
inc
xchg
push
sub
jo
pushf
movl
jmp
pop
mov
push
mov
leave
pop
shrl
inc
sti
mov
mov
cmp
and
imul
insl
jno
cmc
lfs
push
dec
add
mov
push
cmpsb
dec
mov
and
int
lret
xorb
mov
scas
repz
popf
cmp
push
std
dec
adc
iret
add
sbb
mov
xchg
adc
std
mov
push
inc
xchg
dec
jge
sub
repnz
rorb
dec
out
mov
lods
and
bound
inc
stos
sbb
xlat
dec
push
mov
insb
decl
mov
or
loopne
push
or
mov
cltd
xor
mov
in
dec
push
orb
out
int
sub
out
mov
pop
or
out
inc
xchg
jo
jmp
pop
pop
lods
sbb
ds
loopne
enter
out
xchg
orb
mov
pop
jnp
out
cwtl
shll
inc
pusha
pushf
add
sub
out
mov
or
lods
xchg
pop
and
fimuls
jae
pop
push
jae
data16
int3
inc
nop
shrl
sub
into
cmpb
iret
stos
or
lock
pop
xor
shlb
jnp
cwtl
mov
das
jns
mov
bound
sarb
mov
jo
or
dec
sbb
mov
xchg
in
adc
cmp
stos
or
mov
sbb
push
jl
call
mov
mov
dec
jecxz
xchg
push
dec
sub
push
pop
lds
nop
ja
stos
jmp
ss
pushf
cmp
cmp
in
mov
arpl
bound
cmp
dec
push
std
sbb
inc
dec
sbb
pushf
mov
pop
stos
mov
gs
push
lods
push
pop
fisttpl
push
pushf
sub
sti
adc
lret
pop
shll
add
out
jne
sub
xor
fldcw
cmp
mov
inc
mov
fldenv
push
add
lds
cmc
or
xchg
cmp
pushf
test
inc
lret
jmp
sbb
data16
out
jge
xchg
mov
divl
pusha
add
mov
push
or
jle
mov
mov
movsb
enter
nop
sub
sub
scas
or
jp
cs
rcrb
mov
jle
fisubs
fisttpl
pop
inc
sbb
arpl
push
insl
je
stos
push
jo
sbb
shrb
dec
std
mov
dec
loop
dec
pop
mov
pop
push
cwtl
fwait
cli
jnp
stos
negl
push
pop
mov
or
dec
cltd
mov
inc
xchg
sbbl
addl
daa
xchg
and
mov
stc
or
pop
sub
xchg
lods
mov
xchg
insl
popf
ds
dec
fnsave
test
xchg
pop
push
fdivr
mov
in
fsubs
insl
je
bound
jmp
push
out
adc
clc
aas
cmp
cwtl
ljmp
imul
vmread
je
or
lret
jns
leave
jns
aaa
and
jp
adc
ret
add
push
int3
inc
mov
test
mov
in
repnz
popa
mov
cmc
jl
call
mov
mov
cwtl
push
test
mov
test
or
mov
and
push
sub
js
les
cmp
mov
jb
dec
aad
and
cmpl
or
jmp
shl
lds
ss
sbb
ss
mov
sti
ljmp
repnz
mov
push
dec
lcall
loop
je
mov
adc
aam
out
arpl
push
in
mov
shrl
add
popa
cmp
sbb
dec
and
xchg
es
pop
xlat
add
out
xor
lret
outsb
pushf
jbe
in
sbb
adc
pop
movsl
mov
int3
pusha
push
int3
xchg
mov
push
dec
push
cmpb
inc
mov
ljmp
push
cmpb
lahf
icebp
or
lods
sbb
mov
neg
outsb
jae
stos
loope
fmull
add
cli
data16
call
pushf
push
movl
movb
mov
lea
jmp
sub
mov
and
test
leave
xchg
lret
jnp
scas
cmp
scas
test
mov
pop
mov
rol
pop
jmp
stos
mov
insl
in
test
or
mov
pop
jno
clc
mov
test
and
mov
cmc
mov
lods
cmc
xchg
cs
xor
jae
inc
repnz
xchg
pop
int3
imul
xchg
jns
dec
push
push
lods
inc
mov
popf
push
push
push
pushf
movl
pushl
movb
lea
jmp
add
mov
scas
pop
out
mov
cmpsl
sbb
mov
jne
add
and
xor
sub
push
es
loopne
sti
add
fwait
lea
lock
sbb
fs
movsl
stc
je
ficompl
jbe
jge
dec
and
jge
in
hlt
cwtl
sub
insb
shl
adc
and
outsl
jbe
mov
or
inc
mov
repz
cld
and
in
push
sbb
xchg
pop
add
ret
inc
fs
mov
push
adcb
in
or
mov
test
pop
pop
cmp
mov
cmp
test
cltd
repz
ss
pop
inc
stos
sbb
adc
sti
sbb
push
pusha
daa
dec
cmc
gs
mov
jb
fcmovnu
or
lock
push
idivb
dec
and
sbb
insl
fsubrs
and
xchg
sub
sub
and
test
push
cmp
lock
sbb
aad
rolb
mov
mov
jl
fwait
add
and
mov
sub
sbb
iret
fisttpll
jne
push
inc
fmull
jae
stos
lock
aam
outsb
inc
mov
xor
push
movl
call
jae
in
cmpsl
jns
lock
push
xor
mov
jle
jp
stos
std
out
lds
paddusw
popf
pop
xchg
aaa
adc
mov
scas
loope
push
jnp
sub
jmp
lods
dec
enter
test
xchg
or
sub
in
lods
rcl
xchg
sub
into
aad
fidivl
ljmp
int
pop
or
mov
cmc
das
and
and
mov
sub
std
dec
sub
popl
mov
outsl
mov
rolb
xor
movsb
cld
stos
into
dec
sbb
pop
dec
rol
and
out
aam
pop
in
leave
pop
std
or
mov
inc
in
bound
inc
mov
cmp
xchg
aaa
and
rorl
fstl
jo
ret
xor
mov
pop
inc
out
push
and
inc
cmpsl
shll
xchg
jp
xchg
mov
rep
in
addl
adcl
aaa
sbb
ret
mov
shrb
jae
xor
or
test
scas
mov
insb
add
lret
stos
sub
xchg
mov
fidivrs
add
daa
dec
adcb
sbb
mov
leave
jns
jbe
sti
movsb
movsl
push
sti
jns
dec
aam
into
mov
mov
dec
stc
xor
push
pop
mov
push
or
inc
or
sbb
inc
leave
call
xchg
xor
xor
mov
mov
enter
das
stc
add
mov
adc
dec
outsb
xchg
adc
aas
icebp
pop
das
daa
xchg
cmpsl
xchg
sub
mov
or
inc
adcb
xor
dec
jp
adc
add
sti
dec
add
ficoml
adcl
mov
xchg
pusha
mov
xlat
sub
jno
pusha
and
mov
add
rcrl
cld
pop
sbb
aaa
pop
or
jb
insl
add
idiv
in
gs
ss
or
sub
dec
inc
fbstp
adc
push
jb
inc
testb
pop
lcall
ret
push
and
lods
ret
movsl
idivb
inc
or
fucomip
aam
aas
push
testb
insl
xor
push
cmpsb
dec
cwtl
lsl
jl
mov
mov
imul
int
mov
and
clc
out
ret
cmova
mov
push
xchg
je
mov
xor
and
xor
test
adc
repz
imul
ss
adc
mov
mov
dec
imul
jbe
je
mov
movsl
call
pop
scas
int3
add
mov
fstl
sub
add
jmp
idiv
lret
lods
mov
xor
cwtl
pop
inc
int
sub
in
mov
test
imul
adcb
pop
shlb
gs
fwait
push
dec
or
andb
test
roll
adc
repz
shlb
and
popl
xchg
sub
mov
mov
sub
test
mov
or
je
lock
sbb
insb
gs
cmpsb
das
jno
mov
pop
jno
push
cmp
or
xchg
fldenv
imul
jmp
add
push
mov
fnsave
or
mov
aam
push
xor
pop
push
inc
and
out
push
jg
dec
mov
lds
data16
dec
adc
mov
jp
pop
sub
xchg
inc
sbb
mov
loop
jb
ret
add
mov
cmc
dec
jne
jbe
pop
mov
sub
out
lock
mov
inc
cvtps2pi
push
sti
push
int
nop
jbe
and
mov
dec
movb
xorb
xchg
add
xchg
lods
cmp
and
in
pop
pushf
fcomi
lods
repnz
sahf
call
cld
push
das
shr
dec
mov
in
cmp
ret
mov
es
scas
repnz
test
loope
outsl
mov
push
xor
popf
push
fs
mov
rolb
inc
popl
shrl
mov
ja
xchg
clc
xchg
jnp
mov
dec
jp
sub
lds
sub
imul
dec
and
inc
popl
mov
jmp
insb
sub
popl
or
and
push
subl
sub
inc
push
pop
pushf
fistpll
adc
ljmp
jecxz
sub
mov
sub
xchg
jno
call
pushf
call
pushf
movl
push
movl
push
pushf
push
pusha
lea
jmp
call
jmp
jns
int
arpl
jecxz
add
adc
fwait
and
pop
adc
shll
pusha
xchg
add
mov
or
sub
iret
jae
pop
pop
sbb
cmp
jbe
mov
subl
lea
rol
fimull
js
pop
cmp
jecxz
das
xchg
int
repnz
add
mov
icebp
jae
dec
xlat
xchg
xlat
out
in
rolb
mov
mov
scas
cmp
push
push
jmp
sub
iret
jno
test
push
add
in
add
pushf
pop
mov
inc
mov
repnz
cld
js
mov
mov
out
aam
ret
mov
inc
push
int
or
add
cmp
ret
jecxz
leave
imul
sub
sbb
inc
fmuls
hlt
sub
insl
mov
adc
scas
arpl
mov
cmpb
inc
popl
jae
add
ret
outsl
sbbb
icebp
jno
inc
stc
gs
or
cmp
loope
imul
int
and
repnz
rcrl
or
fsubl
mov
jg
cwtl
xor
pop
sub
jl
leave
lods
xor
sub
and
sbb
out
fwait
pop
sub
arpl
mov
lds
popl
xchg
xchg
pop
pushf
int
or
mov
or
add
fnsave
test
enter
dec
mov
cmp
in
negb
repz
xchg
lds
mov
add
mov
push
adc
inc
popl
cmc
stos
sub
out
test
sbb
cmp
ret
fisttpll
iret
push
loopne
lods
repz
inc
add
repz
xchg
clc
push
subb
sbb
adc
and
sbb
xchg
cmp
inc
jnp
adc
jl
out
int3
das
mov
ret
mov
jmp
sbb
mov
imul
iret
pop
sbb
bound
mov
push
xor
adc
popa
fs
fdivl
jge
fbstp
cmp
and
loope
mov
pop
mov
mov
jg
dec
stos
add
and
andl
js
pop
or
lret
adc
or
inc
cli
fcoms
stos
mov
aad
jmp
scas
inc
popl
rcrb
or
adc
push
fisubl
int3
xchg
es
pushf
xorl
push
dec
dec
stc
mov
mov
jne
adc
pop
and
dec
cmp
xchg
pushf
aam
leave
xor
stos
scas
inc
lods
inc
bound
jle
xchg
into
pop
lock
mov
sbb
mov
and
push
push
std
xchg
aam
add
negb
mov
push
jne
sbb
xchg
or
movsb
int
or
inc
popl
add
movsl
ljmp
mov
lret
xchg
xor
pusha
lcall
xlat
call
sub
sub
jmp
outsb
test
push
xchg
call
adc
and
clc
outsl
jb
rcrb
jbe
into
and
ja
push
outsb
aas
pop
jmp
popl
mov
call
push
call
pop
rcrb
and
loopne
fnstcw
sbb
cmp
xor
and
jg
or
cli
push
mov
jnp
xchg
push
popf
cmpsl
pushf
popf
sub
sbb
fstl
gs
or
jno
lret
pop
adc
je
daa
add
or
mov
les
shll
sub
mov
mov
cmpsl
dec
lock
fs
push
pop
sbb
jp
lods
icebp
mov
and
popl
jbe
js
xchg
or
sti
xchg
rclb
inc
pop
test
mov
pop
loope
mov
aam
call
sbb
jne
lret
scas
push
adc
sub
push
addr16
push
test
sbb
jl
dec
or
adc
add
and
add
and
mov
and
pop
inc
popl
lcall
sub
push
sbb
out
cmp
jae
xor
mov
cltd
add
lcall
jmp
adc
sbb
xor
das
mov
addr16
jnp
nop
outsl
into
mov
inc
mulb
adc
push
dec
pop
jge
leave
ret
mov
sub
decb
pop
icebp
xchg
mov
cld
imul
push
jecxz
clc
xchg
inc
outsb
add
add
outsb
outsb
arpl
daa
lds
es
xor
cmpb
imul
popf
mov
lods
loope
pusha
mov
mov
sbbb
notb
push
xlat
sbb
dec
mov
les
jae
and
sbb
bound
inc
repnz
ret
mov
mov
iret
sbb
popl
test
jmp
add
sbb
test
push
cmc
in
mov
cmpsb
shll
dec
iret
jmp
jmp
sbb
push
dec
adc
or
outsb
jl
jnp
cltd
in
stos
jbe
xchg
std
mov
ret
inc
sbb
xchg
data16
loop
aaa
popa
push
call
push
pop
pop
pop
outsl
add
xor
jle
mov
das
add
aam
je
cltd
lret
or
inc
jg
mov
dec
cmpsl
test
ret
cmp
inc
and
mov
stos
out
das
or
dec
inc
ja
lret
lahf
inc
pop
mov
xchg
cmp
addr16
or
aaa
aam
xor
and
xchg
mov
nop
mov
pop
leave
decb
sub
push
push
xchg
xor
mov
dec
jecxz
loopne
je
arpl
divl
rorb
es
mov
je
lcall
and
and
and
push
xor
jo
int
out
or
out
mov
subb
out
stos
negb
inc
rorl
sub
mov
mov
adc
aaa
and
ror
out
or
je
nop
into
and
es
push
jb
leave
nop
movsb
sbb
cmp
push
ficoml
push
sbb
pop
dec
test
ds
leave
push
mov
sbb
sti
inc
pop
adc
popf
in
movsl
icebp
je
sahf
lea
push
or
push
mov
ss
sahf
add
push
cmp
push
xchg
or
inc
mov
dec
or
dec
sub
pop
dec
add
stc
xchg
mov
xchg
loopne
addr16
jnp
sbb
insb
mov
ret
mov
icebp
fwait
sub
xor
push
scas
and
fisttpl
and
arpl
inc
ds
mov
push
push
push
divl
test
push
jmp
mov
cmp
jg
push
cmc
int3
and
sbb
push
loop
lock
xchg
testb
cmp
or
jo
mov
imul
xlat
xchg
mov
push
push
add
dec
pop
dec
fwait
dec
sti
xchg
nop
dec
mov
icebp
notb
movzbl
in
xor
pop
dec
aas
sbb
ret
jb
outsl
pusha
mov
adc
or
jb
aam
out
push
jbe
inc
push
push
pop
sub
test
push
dec
pop
mov
call
sahf
mov
in
or
mov
movl
push
movl
movb
push
pushf
pushf
lea
jmp
mov
jmp
sbb
invd
or
sarb
sub
int
sbb
pop
pop
inc
xchg
aad
push
or
das
pop
pop
cmpsl
cmc
xchg
xor
and
mov
adc
repnz
dec
out
enter
mov
jae
imul
mov
inc
jge
ds
jns
xor
xchg
or
jnp
adc
mov
jo
jecxz
pop
inc
xchg
andb
jns
ror
fmul
sub
out
ret
hlt
ret
jge
mov
es
in
mov
sub
and
jbe
jne
mov
testl
ljmp
icebp
fsubrl
fisubs
xchg
testl
xor
push
ja
sti
lods
or
and
aas
mov
pushf
push
mov
js
lcall
out
scas
mov
fisttpl
mov
xor
in
in
sbb
push
pusha
aaa
mov
jne,pt
sub
mull
adc
cmp
xor
jo
pop
stos
notl
sub
cmp
mov
test
and
ss
xor
mov
fisubrs
xor
push
nop
inc
sbb
stos
push
shll
and
int3
cmpb
or
push
xchg
xchg
dec
hlt
xchg
adc
lds
xchg
mov
cs
pop
fidivs
adc
lock
adc
mov
jnp
xchg
jnp
scas
inc
push
jmp
popa
outsb
bound
and
fistl
sub
xchg
mov
cs
pop
fmull
mov
push
inc
loope
rcll
subl
mov
push
jbe
test
mov
cmp
xor
xchg
stc
call
dec
or
xchg
aam
mov
inc
pop
je
inc
and
clc
inc
jnp
scas
loopne
inc
and
imul
cmp
pushf
lea
jmp
xchg
scas
fmuls
or
incl
or
pop
sub
and
notl
push
jno
stc
push
inc
pusha
shll
xor
add
pop
mov
dec
mov
in
cli
jmp
inc
jg
fistpll
jmp
lods
pop
sub
xchg
xor
add
in
add
sbb
test
lahf
icebp
outsb
mov
iret
dec
fcmovb
in
ds
pushf
push
jmp
je
ret
aas
push
mov
xchg
push
and
lods
fstp
mov
and
push
sbb
jo
lcall
mov
js
mov
jge
popl
jle
xchg
in
mov
xchg
ror
add
sbb
inc
push
les
mov
or
stos
jmp
add
cmp
jo
xchg
cwtl
sahf
cmp
fs
cs
loope
adc
fldenv
inc
pusha
xchg
and
sub
jp
xor
lcall
ss
dec
in
lret
xchg
ficoms
and
sbb
shrl
jmp
pop
jl
xchg
mov
jns
adc
push
cld
arpl
rorb
loop
hlt
inc
das
dec
and
push
xchg
mov
addr16
mov
adc
mov
cltd
adc
lcall
cmp
push
dec
imul
fstps
fcomps
dec
mov
sti
jno
jnp
iret
test
ficoms
sbb
je
mov
mov
lock
jmp
mov
mov
adc
movsl
pop
sub
jns
ljmp
pop
pop
in
into
cltd
mov
in
ret
mov
xchg
cmp
jmp
int3
test
lcall
mov
mov
pop
in
int3
jns,pt
and
out
xchg
mov
cmpsb
and
jl
dec
or
sub
jns
int
mov
push
mov
pushl
cmp
mov
sub
or
lods
cwtl
pop
push
fisttps
nop
jmp
add
idivb
or
fisttpl
testl
loope
xchg
fwait
sub
fdivrp
outsb
sti
push
jo
add
adc
jns
jae
dec
xchg
jmp
test
cmp
lret
inc
adc
push
ljmp
iret
in
mov
mov
push
xorl
popa
aaa
mov
mov
mov
test
cwtl
repz
inc
fs
outsl
sub
fnstsw
imul
jl
pop
dec
sahf
dec
jg
loope
xchg
popa
adc
je
adc
icebp
lret
imul
adcl
push
push
xor
jp
jae
inc
xchg
inc
js
icebp
call
push
jle
cmp
pop
jl
lock
test
and
fildl
xor
or
push
jp
dec
adc
test
and
dec
mov
cmp
hlt
jo
into
dec
inc
xchg
lcall
push
adc
out
cs
cmpsb
pop
mov
or
fnsave
es
call
shlb
xchg
shll
mov
adc
js
pop
pop
jo
es
xor
movntps
shlb
push
jg
leave
cwtl
mov
or
inc
sub
dec
insb
nop
fwait
sub
dec
inc
enter
fcmovb
mov
pusha
dec
xor
pop
sub
pop
cmp
loop
cmpsl
mov
dec
decl
sub
cmp
jb
gs
fmuls
imul
sub
push
push
push
push
dec
sub
sub
cwtl
push
xchg
idivl
loope
mov
cmpl
cmp
fisubl
pushf
shll
fwait
clc
lods
and
or
int
jbe
jmp
outsl
jns
pop
or
std
aam
rclb
test
out
push
cmp
mov
es
movsl
mov
je
in
and
inc
loopne
loope
pop
inc
movsl
push
or
push
gs
mov
rorb
fabs
out
and
or
push
lock
push
cs
and
incl
cltd
ss
hlt
mov
gs
das
in
mov
in
push
nop
shl
js
shrb
or
xor
cmp
lods
cmp
outsl
insb
rcrl
or
adc
push
loope
fistpl
mov
addr16
xchg
fisubrl
xchg
add
sti
sarl
loop
or
adc
push
mov
push
pop
lock
js
dec
and
xor
stc
inc
mov
sub
pusha
sbb
fisubs
fwait
daa
pop
xor
dec
cmpsb
inc
jbe
mov
push
hlt
xor
aam
insb
insb
mov
insb
adc
fadd
mov
xor
lods
mov
mov
imul
jecxz
dec
sub
mov
mov
or
xchg
xor
jne
scas
outsl
mov
hlt
inc
lods
lret
addl
sbb
xor
push
xor
jnp
fsts
xchg
xlat
push
inc
or
fsubrp
mov
mov
sahf
pop
mov
cwtl
jle
out
testb
xor
jne
lds
pusha
or
cmc
mov
fidivrl
xor
push
dec
and
fdivs
repnz
filds
push
cltd
test
scas
pop
sbb
roll
int
jp
dec
mov
mov
insb
push
movsb
dec
push
adc
mov
lret
cltd
int3
movsb
sbb
jbe
inc
shlb
test
or
xchg
notb
outsl
sub
mov
or
jge
negl
sti
mov
mov
mov
out
hlt
jns
sub
cli
aas
es
jmp
cmc
in
lidtl
nop
lds
mov
je
sarl
call
or
cmp
pop
jno
jns
imul
mov
and
mov
lods
cmpsb
cmp
hlt
adc
iret
insl
jno
mov
cld
dec
xor
pop
lea
xchg
les
or
push
loop,pt
and
hlt
pushf
enter
out
ds
inc
je
xchg
cltd
out
jle
aam
sbb
jns
xchg
adc
bound
pop
shrb
sarb
js
je
cmpsb
shrb
sub
lock
in
sub
mov
aaa
pop
or
out
repnz
lods
pushl
nop
mov
or
pop
rorb
sbb
jmp
pop
sbb
imul
aam
fisubs
fimull
hlt
fidivs
xchg
insb
inc
scas
inc
test
jle
sub
gs
adc
mov
mov
mov
loope
out
je
pushf
and
pushf
dec
inc
je
cmp
mov
pop
mov
sti
stos
push
dec
push
xchg
call
pushf
or
sbb
mov
repz
cmp
repnz
cmpsb
clc
mov
cmp
outsl
lds
fdivrs
icebp
stos
in
jbe
rclb
imul
js
das
inc
test
leave
mov
add
mov
jo
stc
shlb
iret
and
lods
jecxz
dec
decl
adc
inc
jae
mov
clc
cmp
std
cld
jp
sbbb
fildll
mov
sahf
sbb
hlt
jnp
fisttpl
push
jecxz
mov
mov
xor
int3
and
into
fldl
inc
push
mov
addl
int3
cwtl
and
pop
jle
stos
xor
out
adc
cmp
mov
addr16
enter
rcrb
mov
xchg
fwait
mov
dec
sub
jbe
mov
mov
cmpsl
jae
pop
outsl
jns
cmp
mov
int3
push
dec
sub
ret
mov
std
jl
push
or
push
jmp
ficoms
or
mov
cmpsl
insl
in
mov
dec
ret
jns,pt
inc
push
sbb
mov
cmp
lea
lahf
pop
sub
cld
fidivs
jle
ja
pop
push
xchg
bound
fldcw
push
rclb
dec
int
jg
dec
pop
cli
sbb
cmpsl
mov
imul
sub
movsl
insl
inc
fwait
pop
jo
fs
stos
rcll
dec
addr16
loopne
add
outsl
xlat
adc
and
jne
dec
adc
sti
clc
lods
xor
mov
gs
xchg
inc
aaa
aas
push
leave
pop
call
rorb
inc
in
sti
add
mov
add
mov
sub
jns
out
arpl
sbb
cmp
out
mov
lea
sub
mov
push
cmpsl
das
jb
push
call
xchg
jmp
pushf
pop
push
sbb
dec
xor
lea
pusha
and
mulb
pop
xor
je
and
enter
jp
fnstsw
mov
xlat
aas
mov
dec
pop
dec
outsl
sbb
cmp
stos
mov
cmpsb
mov
cld
repnz
call
jg
test
dec
pop
shll
rorb
sar
adc
adc
jne
lcall
shrl
inc
jno
enter
add
scas
gs
int3
in
fcompl
sbb
movsl
sub
iret
imul
pop
adc
adc
fistps
cmp
cwtl
adcl
cmpb
mov
sub
ss
or
ljmp
fcomps
fistps
out
sbb
and
xor
shll
sub
rclb
daa
mov
fstpt
cmp
call
push
and
sbb
outsb
scas
mov
insl
lods
pushl
xchg
es
addr16
nop
in
or
scas
mov
dec
adc
mov
andb
aad
lret
push
cli
fiadds
sub
ds
out
jb
add
test
aam
adc
mov
movb
cmp
inc
bound
icebp
popf
mov
aam
mov
and
add
int
or
dec
mov
or
mov
leave
mov
pushf
sub
std
mov
lret
aaa
stos
fstp
jb
icebp
inc
pop
pop
inc
mov
pop
add
dec
pop
push
add
inc
outsl
mov
adc
outsl
xchg
lods
fildl
lcall
in
push
sub
push
jae
mov
jecxz
jnp
inc
ret
dec
fcmove
fldenv
mov
cmpsl
popf
je
jmp
lret
test
call
dec
test
jle
data16
mov
outsl
or
sbb
pop
in
std
mov
pop
cltd
aas
sub
out
push
mov
fistps
mov
outsl
repz
jmp
pushf
pusha
pusha
movl
call
movl
mov
movb
movw
lea
jmp
sub
cmp
jge
and
jmp
fldl
ds
mov
inc
push
push
add
fwait
push
lds
push
add
sbb
aad
shrb
je
enter
sbb
add
repnz
pop
pop
insb
jae
mov
lods
xchg
into
or
mov
xchg
jno
jle
xor
jle
cmp
xchg
roll
gs
cmp
jmp
and
jmp
mov
outsl
sub
mov
jmp
push
mov
es
idivl
cli
fstpl
gs
insb
jne
popf
jmp
in
repz
pop
inc
mov
sub
or
and
gs
push
sbb
pop
push
xchg
xor
mov
mov
insb
jle
push
stos
mov
popf
adc
jmp
lahf
xor
insl
adc
sbb
fisubs
inc
mov
jmp
popf
sbb
dec
hlt
jge
jle
dec
mov
outsb
mov
rolb
inc
xor
push
pop
test
push
loop
out
pop
add
fsubrs
inc
icebp
mov
popf
xchg
adc
repnz
push
xchg
and
mov
push
xchg
int
push
ret
xchg
adc
jo
loopne
test
outsb
icebp
fdivp
pop
and
xchg
bnd
xchg
mov
fldcw
hlt
test
inc
sbb
and
leave
js
jnp
xor
inc
stos
lea
sbb
or
xlat
cs
in
sub
and
xchg
xlat
fcoml
push
dec
mov
adc
push
or
sub
int
dec
sbb
jb
es
in
cmpsl
insl
out
int3
loop
ja
jmp
rcr
sub
jl
mov
cmp
js
mov
lds
roll
rcrl
out
sbb
push
mov
int3
enter
js
mov
roll
ss
int3
xchg
cli
pop
in
xchg
mov
fiaddl
repz
and
fwait
add
mov
cld
jp
clc
nop
cmpsb
adc
icebp
cwtl
sbb
enter
push
push
add
xor
xchg
ja
cwtl
ljmp
dec
sbb
bound
xlat
xchg
movsl
scas
mov
mov
loope
cmp
insl
cmp
loop
inc
les
xchg
lods
pop
jge
shll
sub
in
popa
xor
jns
add
mov
jp
adc
cmpsb
test
test
mov
adc
ja
ja
cmc
hlt
outsl
or
subb
and
rcll
mov
outsl
mov
jo
insl
ljmp
sbb
cmp
inc
insb
lret
in
aaa
sarl
stc
and
popf
xchg
inc
imulb
mov
cli
adc
mov
mov
cmpsl
add
je
sbb
sbb
adcl
or
into
adc
aas
or
jno
push
enter
sub
dec
xor
repnz
jle
dec
movsb
inc
imul
popf
dec
jmp
adc
push
sub
push
cmp
jg
cmp
mov
xchg
out
adc
xor
jmp
dec
pop
or
pop
lods
or
sub
jo
shlb
cmc
addl
outsb
jge
lret
xorb
fistpll
or
inc
imul
jmp
push
sbb
and
insb
maxps
je
mov
fnsave
aad
xchg
lret
lea
mov
jnp
movswl
in
push
aaa
add
in
inc
push
jo
pushf
fldenv
ret
inc
imul
lds
scas
sbb
in
cmp
cmp
lret
movsb
sbb
dec
adc
mov
stc
out
nop
repz
jae
mov
inc
xchg
push
fisubrs
cmp
push
and
lods
sgdtl
incb
test
mov
test
pop
cmp
loope
aam
pop
popa
cmp
inc
pusha
jg
rorl
pusha
cwtl
repnz
test
xchg
push
ds
in
fnstcw
mov
fs
movsb
sbb
stc
repnz
and
pop
ljmp
stos
int
mov
mov
xchg
shrl
out
pusha
bnd
iret
jno
xchg
jmp
dec
xor
daa
push
imul
imul
dec
add
ficoms
pop
cmp
cltd
or
add
push
mov
mov
scas
hlt
fs
inc
sub
mov
jb
dec
or
stos
inc
lds
aam
fcoml
xchg
pop
or
mov
add
pop
inc
xchg
jg
inc
sbb
fidivrl
xor
add
xor
cmpsl
or
or
xchg
or
jmp
fdivs
js
gs
lock
jo
add
enter
iret
push
movl
push
call
cli
data16
inc
dec
daa
in
lcall
jl
push
test
pop
xor
outsl
lods
or
mov
mov
insb
xor
pop
lret
push
mov
cwtl
mov
xchg
push
and
lret
fistps
push
adc
add
push
ss
adc
push
cs
iret
pop
mov
and
jle
mov
mov
inc
adc
inc
pop
out
iret
jo
insl
ja
pop
popf
sahf
ss
js
js
daa
addr16
mov
fwait
sub
inc
clc
xchg
jb
pop
cwtl
pop
xsave
ds
xchg
jnp
lods
ret
xchg
ljmp
sbb
sub
data16
push
mov
adc
mov
call
je
cld
cmp
lods
xlat
adc
repz
int
scas
mov
push
jno
pop
and
add
cwtl
test
cmpsb
jmp
cmp
popl
push
jno
mov
xor
push
and
adc
xorl
aas
xorl
mov
jns
dec
loop
int3
or
adc
and
gs
dec
mov
jno
je
ss
adc
fldt
pop
mov
pop
cs
cmpsl
pop
cmp
out
jno
iret
pop
aad
int
enter
mov
das
and
xor
sub
dec
popf
scas
mov
sbb
pop
xchg
jecxz
shll
mov
fisttpl
cwtl
xor
popf
jmp
aam
xchg
pushf
call
push
push
in
loop
add
rclb
loop
push
sbb
jmp
decl
cmc
xchg
int3
mov
nop
lock
jnp
outsb
jb
div
lds
xlat
in
lock
xchg
and
fisubrl
aad
xor
sub
stc
sub
iret
dec
stc
jmp
jmp
push
jns
adc
int
int
push
jle
sbb
decb
aam
cmp
sub
pop
xor
fs
jle
pop
aaa
cmpsl
cmpsl
in
push
aaa
jb
jl
outsb
adc
or
lea
mov
stos
cli
pop
inc
cmpsl
int3
cs
in
fadds
push
cld
cmp
sti
lods
in
ret
mov
enter
mov
fs
cmp
mov
scas
push
movsl
ds
ss
cmpsb
pusha
movl
movl
call
sub
cltd
sbb
cld
lea
jbe
push
add
lods
hlt
push
out
enter
adc
inc
pusha
cli
xchg
fistps
adc
sti
and
dec
outsl
testl
push
and
inc
dec
imul
mov
mov
cmpsl
fdivr
xchg
test
pop
cwtl
mov
outsb
lea
xor
outsb
fbld
data16
and
mov
and
popl
mov
xchg
jmp
out
fdivl
cs
lods
js
mov
sbb
xor
mov
jp
push
out
test
mov
aam
outsl
xchg
outsb
xor
and
subl
clc
inc
cmp
xor
pop
cli
sbb
xchg
test
mov
cmp
jl
mov
lock
adc
push
insl
add
inc
addr16
out
addr16
fdivrl
nop
lods
mov
sahf
shlb
sbb
dec
cmp
int
testl
add
insl
mov
aaa
mov
mov
mov
xor
cs
testl
mov
adc
push
jb
push
repnz
nop
shlb
cmp
inc
gs
aaa
xchg
adc
imul
aam
out
dec
sub
je
mov
xchg
hlt
or
or
adc
fiaddl
stc
xchg
mov
or
subl
sbb
inc
popaw
arpl
rclb
or
sbb
enter
fidivrs
inc
inc
mov
popf
and
push
mov
mov
cmp
push
inc
xchg
xchg
xor
pop
mov
sahf
mov
iret
div
pop
ds
push
int3
add
sti
loop
jle
leave
mov
and
loop
orl
push
add
add
jmp
js
xor
notl
pop
lods
mov
clc
jne
inc
fs
dec
repnz
push
imul
hlt
jp
add
movsb
call
fdivs
pusha
das
imul
je
xchg
jp
dec
sub
aam
mov
js
repz
mov
mov
mov
ss
leave
hlt
dec
ja
fs
shrb
imul
fbstp
daa
out
mov
inc
and
cmp
mov
fistl
cli
mov
sbb
add
aaa
mov
js
ja
add
pop
jns
jae
outsb
dec
stos
fdivrl
decb
mov
fwait
cmpsl
inc
xor
stc
sub
lahf
mov
mov
push
xor
inc
xor
not
andl
push
pushl
jl
inc
test
jo
inc
stos
inc
fs
jmp
pop
add
dec
insb
insl
daa
sub
ja
jno
pop
xor
or
scas
not
mov
jns
and
add
jo
cmp
sub
iret
fldcw
loop
imul
push
dec
mov
push
popa
jle
add
lcall
into
mov
cmpsb
xor
push
push
add
les
fs
push
movl
pusha
pushf
movl
pushl
pushf
mov
pushf
lea
jmp
pop
ret
stc
rcrb
shrl
popf
les
jmp
sub
repnz
pop
inc
aaa
and
push
dec
scas
push
leave
jae
cmp
fwait
decb
push
cmp
dec
or
mov
fistpl
push
sub
lret
cld
jno
jle
inc
arpl
ljmp
inc
mov
stc
pop
mov
jae
pop
sbb
or
dec
jle
or
push
mov
mov
je
add
js
sbb
mov
rorb
mov
leave
and
adcl
xor
jp
add
mov
add
addr16
or
add
cltd
jg
xor
mov
jae
mov
pop
repnz
or
ror
mov
out
cmp
insb
pop
sbb
xchg
psubq
sub
aaa
pop
jo
adc
pop
jnp
not
dec
and
test
lret
movsl
loope
mov
jl
hlt
xor
int3
cmp
outsb
and
in
mov
icebp
leave
mov
test
mov
lods
mov
push
sahf
xchg
push
stos
sub
and
mov
fildll
movsb
cmpsb
inc
mulb
stos
push
sbb
xor
xor
sbb
cvtdq2ps
insb
pop
sbb
inc
push
cld
mov
xchg
xchg
mov
popf
pushf
jne
into
sarl
sub
inc
popa
loopne
push
push
adc
loope
mov
scas
mov
clc
insl
push
cld
mov
loope
pushf
push
ffree
push
sarl
add
sub
repnz
in
adc
sub
mov
lock
movsl
xchg
fcmovnu
mov
jecxz
in
cmp
mov
inc
scas
inc
test
jmp
mov
les
inc
pop
int
inc
sbb
gs
imul
enter
ss
rcr
add
xor
out
les
nop
mov
xchg
xchg
cmp
inc
dec
dec
mov
loop
sbbb
and
inc
and
sub
bound
cwtl
movl
mov
lea
jmp
mov
push
movl
call
movl
pushf
movb
pushf
lea
jmp
pop
stc
popa
imul
pop
pop
pop
in
and
ds
adc
lods
mov
push
xchg
loope
es
mov
xlat
lock
xor
cld
mov
or
cwtl
fdivl
jb
or
jnp
cmpsb
daa
cwtl
addr16
cmp
sub
aas
mov
sbb
popa
ss
sbb
sti
mov
dec
dec
and
daa
or
and
scas
bound
insb
sub
or
push
mov
jmp
mov
nopl
mov
dec
pop
mov
jp
sub
pushf
cld
lods
iret
popf
sub
pusha
jmp
jle
sbbl
insl
outsb
inc
pusha
aam
in
ljmp
mov
inc
and
jno
pop
js
or
and
fnstcw
or
mov
jb
pop
cld
inc
sub
out
dec
shll
in
iret
or
rorb
xchg
test
sub
lods
cmc
cmpsl
mov
mov
mov
lahf
sub
mov
in
add
scas
sti
loope
or
icebp
jno
pop
or
std
jae
ds
aaa
icebp
xchg
pusha
dec
jnp
mov
mov
sbb
add
dec
pop
jl
pop
in
int
adc
sub
xor
xor
mov
push
adc
add
ret
mov
std
cmp
xor
sub
bound
sbb
jns
hlt
cmpsb
out
int3
gs
pop
sub
cmpsb
push
mov
pop
add
mov
and
pop
xchg
test
add
xchg
inc
pop
test
add
or
lds
push
or
adc
insb
roll
movsl
cmp
data16
stos
outsl
dec
cmc
dec
test
out
fidivrs
movsb
cmp
cmp
mov
sub
adc
loope
stos
mov
pushf
jg
fstpl
out
imul
out
mov
shlb
andl
dec
or
xor
movsb
mov
inc
data16
mov
addr16
aad
dec
adc
scas
mov
rclb
and
adc
jno
push
scas
outsl
mov
mov
js
ljmp
fdivl
jno
push
push
xchg
mov
mov
fisttpll
or
data16
xchg
insl
pop
add
push
jmp
cmpsl
fs
insb
add
cmp
mov
cld
out
iret
dec
inc
push
into
adc
and
jne
jle
imul
pop
adc
aam
ficomps
ds
stc
xor
dec
sub
push
and
and
daa
insl
test
pop
stc
out
add
jle
mov
or
inc
mov
call
aas
mov
rcll
shll
adc
stc
jge
xor
mov
imul
mov
push
je
and
cmpsb
pop
sub
sbb
int
dec
sub
adc
mov
pop
inc
inc
pop
les
jmp
inc
in
fdivp
jnp
dec
lock
push
dec
push
cmp
jge
test
mov
sbb
dec
mov
mov
mulb
jno
mov
insl
and
iret
adc
dec
es
xchg
mov
add
js
repnz
bound
icebp
xorb
aad
and
int
popf
dec
gs
xchg
clc
xor
pop
in
xor
push
jae
ss
xchg
pop
mov
rclb
push
pop
jecxz
xlat
mov
fcomp
into
cmp
add
mov
mov
mov
push
and
push
pop
pop
xor
jo
shrl
sarb
aad
test
jae
inc
shl
mov
mov
in
pop
lret
es
ficoms
jo
hlt
or
jge
mov
jns
ret
shr
dec
ja
aaa
mov
mov
out
mov
dec
xchg
js
add
pop
js
call
cld
movsl
loope
fldcw
in
inc
pop
xchg
mov
fdivl
sbb
adcl
loopne
sub
and
mov
fimull
dec
and
adc
mov
dec
or
inc
jno
push
insb
jg
fisubs
es
sbb
xchg
mov
int
mov
pop
push
pop
imul
inc
mov
std
fisubs
sahf
icebp
mov
inc
pop
pop
xor
or
add
shrb
or
out
aam
and
ret
andb
pusha
xor
fwait
subl
add
in
dec
aaa
fldcw
outsb
jno
push
sub
je
and
leave
rcll
bound
adc
mov
push
dec
jl
mov
sub
xor
add
cmp
pop
add
inc
pop
push
inc
push
pusha
mov
call
cmp
mov
pop
shrb
ja
rcll
jg
dec
xchg
dec
pop
pushf
in
lods
mov
addb
mov
sub
and
adc
mov
add
testl
out
test
push
or
scas
and
pop
fldcw
lcall
idivl
cmp
dec
pop
loop
or
push
adc
jle
or
fs
xor
or
lds
fistps
jb,pn
adc
pop
insl
mov
and
dec
sub
sub
add
push
add
add
cmp
xlat
test
jne
enter
jmp
lea
pushf
mov
sbb
xor
sbb
mov
fwait
js
test
shlb
gs
adc
and
inc
add
inc
pop
movsb
cmpsb
dec
mov
ljmp
into
mov
and
pop
xchg
mov
les
sub
pop
add
bound
adc
xchg
out
pop
adc
jmp
cmp
fcmovne
mov
pop
aad
push
fwait
mov
xchg
mov
sbb
cld
fnsetpm(287
xor
cltd
stos
fcmovu
sbb
out
loop
dec
cmp
pop
int
pushf
fadds
aam
jle
gs
in
add
and
mov
fisubs
sub
inc
arpl
xchg
sub
lret
mov
or
fincstp
fisubs
ret
ret
cmp
enter
loopne
cmc
inc
pop
add
xor
jmp
aas
inc
push
pushf
rorb
and
ds
sub
fdecstp
xchg
xor
mov
aam
fstpt
addr16
cmp
jl
cmp
sub
lods
pop
ljmp
xchg
fbld
arpl
sub
push
insl
jmp
in
in
fmull
pop
jne
mov
push
inc
jo
shl
inc
shlb
lods
lret
xchg
popa
jge
or
dec
sbb
and
std
fistpl
mov
in
hlt
xor
add
mov
jle
sti
adc
and
add
cld
dec
adc
or
js
fsubl
ret
mov
test
scas
inc
and
loope
sub
mov
sub
push
fwait
push
jnp
push
push
mov
sbb
or
stos
add
out
inc
dec
jmp
or
call
adcl
push
in
xor
ja
or
mov
inc
xor
lret
push
mov
push
xchg
fists
stc
cmp
mov
xor
push
fscale
insl
inc
decl
sub
repnz
jl
lret
push
jle
cmp
pop
lret
fnop
push
lcall
jb
test
xor
repnz
mov
or
xchg
jne
push
xchg
fisubrs
rclb
loopne
add
lods
insb
mov
frstor
std
lcall
test
mov
adc
loopne
jns,pn
cmp
dec
mov
add
cmp
add
fcmovb
mov
int3
pop
lock
test
rclb
xchg
test
lds
clc
sti
loop
aaa
andb
adc
jg
sbb
test
fcmovb
adc
into
into
addr16
lea
mov
lcall
sbb
inc
push
mov
sbb
inc
sbb
pusha
jmp
sub
ljmp
je
mov
push
cmp
mov
leave
cmp
es
pop
xor
or
imul
sbb
jbe
xchg
popf
test
cmp
outsb
cmp
inc
pop
push
inc
test
movsb
sub
xlat
imul
jae
test
jle
cmpsl
xchg
fiaddl
fnstenv
mov
insl
mov
fcoms
stc
in
xor
je
pop
nop
shl
js
insl
dec
mov
test
mov
enter
repz
jge
xchg
sub
dec
xchg
jmp
adc
push
or
pop
repnz
push
push
andl
icebp
mov
imul
scas
loope
inc
push
daa
and
cmp
jmp
out
inc
lret
scas
out
and
or
out
sahf
mov
mov
cmp
push
andl
sahf
jl
movsl
lds
push
cli
inc
or
dec
jo
adc
mov
xor
fbld
jbe
incl
mov
and
cld
mov
sarl
adc
push
sbb
cmpsb
xacquire
push
push
jecxz
fdivl
jl
lea
movsb
test
and
xchg
js
xchg
and
leave
sub
aaa
in
sbb
lea
popa
or
pop
pop
jg
pushf
ljmp
into
sub
xor
iret
addr16
in
inc
add
sarl
cs
outsb
test
and
mov
pop
xchg
in
inc
rorl
mov
mov
pop
pop
push
test
repz
pop
pop
add
mov
inc
divb
das
sahf
inc
mov
jnp
sub
sbb
inc
mov
mov
jp
add
xlat
pushf
push
fs
dec
pop
and
push
aad
shll
cmp
and
out
jne
push
xchg
pop
clc
jbe
cs
add
adc
les
and
enter
in
mov
fimull
jns
push
sarl
lds
jp
sub
imul
pop
xor
jge
mov
push
push
inc
mov
test
mov
or
xchg
add
mov
dec
jl
dec
and
stc
pop
rcll
shll
and
cmpsl
call
out
sbb
hlt
xchg
clc
jne
sbb
mov
js
cmp
pusha
loopne
push
addr16
mov
lea
sub
cmp
push
sub
inc
push
jge
add
faddp
dec
push
in
sub
mov
popf
shrb
adc
xchg
mov
cltd
out
ja
or
and
sbb
sub
je
stos
popf
xor
sub
inc
adc
sub
add
jp
test
pusha
out
lahf
or
dec
or
jns
cwtl
fdivrl
push
cmp
cmp
sub
xchg
out
divl
popa
add
std
test
loopne
pushf
push
lret
rorb
ficompl
mov
shl
frstor
cmp
call
add
hlt
mov
sub
stos
inc
push
leave
imul
jmp
xor
movsb
stc
fadds
imul
dec
mov
out
bound
loope
in
push
mov
push
push
cmp
call
imul
and
mov
push
cmp
xor
mov
adc
xchg
mov
outsb
cmp
pop
sbb
and
xlat
cmp
fstps
mov
subl
imul
sbbb
dec
pop
lock
mov
sub
test
cmc
mov
gs
sbb
push
pop
outsb
outsl
cmpsb
pushf
fcompl
mov
adc
outsb
ljmp
mov
imul
add
shrl
gs
jnp
dec
outsb
fdivs
xor
fisubrl
adc
mov
jmp
and
sub
pop
stc
pop
inc
das
mov
sbb
mov
loop
xorl
add
jp
cltd
adc
mov
jle
xor
jns
cmp
dec
sbb
inc
ret
mov
sbb
add
mov
insl
fidivrs
mov
ret
push
cmp
push
mov
test
lcall
push
ss
or
inc
sti
insl
cmc
cld
xchg
leave
insl
adc
insb
or
jnp
mov
mov
add
sub
mov
inc
pop
ljmp
test
mov
mov
dec
in
xchg
push
xlat
jl
fnstcw
and
mulb
and
pop
fidivs
loop
out
out
enter
js
pop
adc
andl
mov
ds
jae,pt
data16
sub
xchg
out
popa
mov
iret
ljmp
movsb
pop
or
mov
pop
outsb
scas
inc
push
aam
out
pop
lcall
popa
jno
shlb
std
lods
or
pop
inc
add
pop
mov
and
fucomip
lock
sub
cmpsb
add
jae
add
or
test
imul
ss
xchg
sub
out
or
insb
pop
xor
dec
ljmp
sbb
stos
enter
lds
cmp
push
dec
imul
iret
rcll
and
ret
jp
push
das
sti
inc
push
jl
inc
int3
push
pop
and
fistl
dec
sub
fisubrl
mov
pop
in
mov
push
shlb
pop
dec
sti
out
xchg
add
test
jnp,pt
adc
adcb
movsb
cmpsb
out
mov
aas
or
pusha
rclb
jns
aas
leave
push
roll
dec
cmp
mov
and
jg
pusha
mov
jno
cmpsl
cmc
and
decl
aaa
js
fdivl
jecxz
push
in
iret
mov
pushf
daa
mov
imul
lahf
xchg
ljmp
mov
arpl
loope
aad
pusha
inc
push
loope
loop
mov
outsb
js
cld
push
inc
pop
inc
or
repz
jmp
mov
out
test
or
loop
flds
pop
mov
cmp
mov
out
add
sbb
mov
xlat
add
pop
mov
decb
push
sti
cmp
ja
jge
or
xor
and
clc
cmova
sbb
std
jns
mov
pop
cmp
push
into
xchg
xchg
or
jmp
mov
dec
sbb
adc
out
pop
inc
push
sbb
enter
paddsw
into
xchg
and
icebp
push
sub
jo
outsl
sub
dec
pop
mov
ljmp
mov
xor
cmp
add
loope
int3
mov
ret
cltd
mov
call
test
cmp
call
pusha
mov
push
mov
mov
sbb
pop
cmp
sbb
mov
movsb
dec
pop
cmp
addr16
mov
push
imul
xchg
or
sti
lret
leave
dec
mov
jl
sbb
xchg
repnz
sub
mov
andl
mov
pop
pop
xor
sub
xchg
xchg
in
push
arpl
push
and
xchg
ljmp
insb
icebp
jmp
leave
jl
fidivl
repnz
xchg
sti
inc
xor
jae
lahf
call
daa
fldcw
add
jp
les
adc
mov
test
push
mov
pop
cmpsl
call
jmp
add
pop
std
stos
testb
push
mov
add
mov
das
pop
jnp
dec
out
pushf
in
and
xchg
scas
mov
loopne
inc
dec
or
mov
pop
ret
aam
push
lods
ljmp
dec
lock
jne
xor
dec
mov
jecxz
sbb
adc
pop
adc
js
jb
mov
test
ljmp
jl
adc
pop
sti
gs
loope
mov
push
adc
es
inc
addr16
arpl
fmul
mov
jbe
inc
xchg
stos
js
xor
push
testb
jnp
lcall
pop
inc
imul
jo
jb
fistl
jmp
pushf
add
aas
inc
dec
inc
inc
pop
pop
jecxz
fldl
cli
pop
add
lcall
sar
lea
push
mov
stos
mov
shlb
mov
cmovo
push
add
sbb
jmp
inc
loop
sbb
sub
xor
lea
lds
sbb
ret
mov
dec
mov
mov
jmp
lret
xchg
repnz
in
push
rcrl
pushf
cmp
outsl
or
mov
cmpl
push
ret
out
sbb
not
mov
pop
cmp
jne
cmp
ficoml
pushf
into
movsl
xor
clc
mov
jnp
xchg
push
mov
xor
stc
into
mov
outsb
and
cs
ss
mov
fildl
pusha
mov
imul
xchg
cli
movsb
shrb
cmp
out
inc
inc
jmp
xor
xchg
fwait
cmc
xchg
leave
mov
fs
push
in
xor
repnz
or
jae
or
and
pop
mov
call
popa
mov
jno
mov
jnp
mov
adc
negl
jp
adc
stc
jnp
cmpsl
cmp
jmp
lods
sub
sub
mov
dec
inc
outsl
test
jnp
add
adc
sarb
notl
jg
inc
push
xchg
pop
or
mov
jp
cwtl
flds
hlt
mov
pop
pop
mov
mov
mov
int3
sahf
faddl
sti
dec
add
movsb
pop
int
sti
das
pop
add
movsl
adc
cmp
adc
dec
outsl
popf
jo
call
jo
sub
mov
jae
shll
in
mov
mov
test
dec
je
sar
ja
push
push
mov
ss
aas
jl
rcll
sarl
jle
jecxz
int
xor
jmp
mov
out
push
fiaddl
addr16
adc
or
cwtl
movsb
inc
dec
sbb
faddp
sbb
dec
xor
xlat
pop
push
dec
sub
jno
leave
xor
jg
pop
loop
sub
mov
stos
ret
or
push
sub
dec
mov
and
and
add
dec
cmpsb
push
cmpb
loop
mov
scas
sub
std
jne
cmp
lret
es
adc
mov
rcrb
mov
cwtl
push
inc
dec
jmp
aaa
add
sub
js
sub
xor
adc
pop
cmp
xor
fs
jp
mov
sbb
mov
inc
cmpsl
popa
xchg
mov
xor
xlat
sbb
add
add
fisubrs
adc
das
mov
rcll
pop
inc
sbb
popa
fdivrs
dec
iret
cli
mov
scas
out
subl
out
xchg
cmp
mov
cmc
popf
jb
push
mov
ret
dec
idivb
mov
sbb
dec
xchg
and
jge
xor
std
xchg
pop
imul
adc
mov
int
js
inc
mov
mov
fists
pop
pop
in
aam
clc
fisubrs
mov
in
mov
jl
mov
mov
imul
mov
cltd
dec
imul
lcall
or
testl
movsl
enter
jns
cmpl
lock
push
lcall
testl
add
inc
pushf
mov
aas
das
pop
test
xorb
in
loopne
and
imul
and
mov
loop
stc
inc
jbe
jmp
jecxz
mov
data16
mov
popf
shll
jo
mov
addr16
cld
call
mov
jb
pop
adc
or
mov
or
dec
dec
jns
pushf
movl
mov
movw
pushf
pushf
lea
jmp
movl
pusha
lea
jmp
daa
push
lea
inc
loope
and
outsb
xor
mov
cmp
cmpsl
mov
or
or
sub
iret
call
mov
addr16
pop
ss
loopne
lods
xor
and
xor
mov
push
addr16
inc
mov
jmp
and
and
mov
push
xchg
jne
cmovp
push
mov
adc
iret
rcrb
mov
lcall
fwait
stc
cltd
test
mov
lock
lahf
jns
and
push
pop
xor
enter
mov
lods
inc
dec
push
out
push
push
loopne
xor
cmp
mov
clc
aam
and
or
sbb
icebp
cwtl
push
xchg
psubw
repz
xlat
pop
in
pop
movsb
pop
mov
lods
inc
mov
adc
jmp
rclb
jnp
pop
push
lea
inc
aad
mov
jmp
mov
pop
adc
xor
sbb
in
std
lcall
dec
popf
ljmp
rcrb
and
cmp
movl
lea
ja
push
pusha
pusha
pushf
lea
jmp
movl
mov
pushl
pusha
pushf
lea
jmp
fsubl
lcall
pop
xor
lock
es
xor
arpl
add
aad
ja
in
repnz
stc
dec
and
mov
icebp
adc
mov
not
mov
std
xor
dec
jmp
cmpsb
jle
sub
stos
fcoms
mov
cld
xchg
xlat
ret
mov
dec
or
leave
in
out
xchg
pop
leave
xlat
imul
and
xchg
inc
call
xor
cmc
in
xchg
in
mov
aaa
fisubrl
xchg
mov
out
hlt
sub
das
stos
das
cli
mov
sub
adc
cmp
sub
push
stos
and
lock
std
das
sahf
sub
call
jbe
push
and
imul
xchg
add
jne
js
jbe
sbb
xchg
test
push
xchg
jmp
movsb
js
and
dec
scas
movsb
cmp
sbb
cmc
dec
sub
loope
and
inc
popl
mov
cmpl
loopne
adc
xchg
out
in
shll
sbbb
int
ret
xchg
lahf
inc
xorb
fisubrl
ficoms
loop
shr
outsl
push
lcall
mov
imul
sahf
data16
push
sbb
mov
adc
popa
sub
jns
popl
cmp
cmp
push
es
jmp
addl
adc
adc
lahf
in
inc
ret
aas
ja
mov
sbb
jno
lcall
or
lret
cmp
mov
fistps
mov
lods
hlt
push
sbb
mov
imul
xchg
leave
js
pushf
pop
subb
jge
loope
jmp
cmp
repnz
pop
dec
outsl
sub
xchg
mov
add
lret
mov
or
dec
rcll
aas
xchg
mov
push
out
iret
sub
xlat
popf
mov
add
mov
cmp
xchg
lock
in
adc
jecxz
and
outsb
xor
adc
or
jb
sbb
in
repnz
out
mov
aas
add
mov
cltd
mulb
popl
cmp
pop
into
iret
jmp
sub
push
mov
jo
inc
sub
sbb
push
push
mov
xchg
lahf
xchg
arpl
jb
fbstp
push
mov
fmuls
or
inc
and
sbb
pushf
test
xchg
mov
or
mov
fimuls
fsub
xchg
jo
mov
mov
mov
mov
add
or
mov
inc
popl
mov
or
mov
ret
rol
jmp
in
pop
sub
push
imul
aas
js
aad
push
in
jne
cmpsb
roll
adc
cwtl
pop
imul
es
sbb
xor
cmp
ret
mov
inc
push
cmp
cwtl
jge
mov
fisubrs
jb
sub
xchg
adc
in
pop
dec
scas
inc
inc
sbb
add
add
sahf
fcoms
jbe
lret
sbb
and
and
fdivs
cmc
lods
sti
cmp
xchg
les
sbb
xor
outsb
movsl
xor
dec
sub
pushl
mov
push
xchg
fisttpll
mov
inc
test
xchg
or
std
mov
gs
lahf
sub
adc
and
xlat
lahf
leave
daa
loope
mov
mov
sub
inc
incl
in
pop
push
orl
inc
setnp
inc
pop
fsubr
add
ror
jge
xchg
ret
lcall
fcom
rorl
sub
jbe
insl
mov
call
inc
pop
repz
popl
add
xchg
aam
xlat
sti
fstpt
dec
push
jg
fdivs
mov
popa
cmc
imul
mov
inc
add
sub
cmp
add
jne
adc
cmp
and
call
call
mov
sub
es
add
cmpsb
jg
sub
je
gs
ss
jo
dec
push
push
sbb
mov
mov
push
in
jns
mov
popf
hlt
scas
adc
inc
popl
or
movsb
sbb
jmp
sub
and
cmpsl
sbb
mov
pop
add
in
test
push
cmp
into
rcrl
lock
jnp
xor
or
dec
mov
aaa
mov
je
or
out
iret
scas
ja
push
jmp
cmp
or
adc
clc
fidivrl
nop
mov
cli
cs
int3
jge
mov
out
hlt
push
mov
jmp
sbb
fcompl
outsl
lea
scas
adc
push
push
and
aaa
push
hlt
in
add
sbb
movsl
mov
adc
jmp
insl
sbb
cld
xchg
out
jbe
or
clc
insl
xchg
jnp
mov
xchg
sub
out
insb
or
or
out
lret
adc
movsb
arpl
inc
mov
pop
dec
dec
inc
popl
out
jecxz
xchg
enter
or
mov
or
jecxz
mov
pop
mov
ret
stos
mov
pop
pushf
lahf
ret
mov
mov
jecxz
lahf
sbb
sarb
sbb
ljmp
push
mov
sub
nop
cld
mov
and
xchg
movl
pushf
mov
push
lea
jmp
daa
sbb
add
jne
loope
add
movsb
fcoml
data16
loopne
push
jno
or
ljmp
outsb
negb
pop
in
or
lret
test
cmc
pop
ret
jle
cmc
test
cmp
rol
fdivrl
jo
movsl
push
jge
popa
push
pop
cs
repz
daa
add
or
rclb
xchg
inc
gs
insb
cwtl
lret
les
popl
xor
jmp
daa
fcomps
push
enter
or
fimuls
pop
out
popf
sub
jo
sbb
in
sbbb
call
mov
xlat
sub
jmp
xchg
fs
aad
cmp
xor
gs
mov
inc
xchg
popf
lret
xchg
mov
aad
stc
arpl
sbb
or
lahf
adc
jmp
and
inc
popl
mov
and
mov
dec
sti
add
dec
mov
mov
test
push
pop
fmull
lds
push
ja
push
je
arpl
mov
pop
sub
jp
push
sbb
or
filds
fldcw
or
inc
data16
or
sbb
lock
ret
or
sub
mov
or
sub
fistps
or
jecxz
and
xor
not
scas
mov
or
or
int3
out
add
push
or
xchg
lret
aam
mov
mov
mov
xchg
ror
ja
adc
shll
push
add
inc
popl
stos
inc
insl
mov
jp
rcl
jge
sahf
leave
scas
sbb
lock
mov
jo
sbb
test
add
or
test
sub
movsb
lret
dec
mov
cmp
dec
mov
ja
jg
mov
xor
leave
push
movsl
das
xchg
jmp
adc
cs
push
xor
lock
test
movsb
mov
scas
in
inc
popl
jp
pop
cmpsl
adc
pusha
test
fildl
jecxz
in
lret
and
call
pushf
xor
jmp
jbe
aad
sub
adc
adc
adc
std
push
mov
mov
pop
pop
sbb
cmp
sbb
mov
xchg
mov
push
int
cltd
les
mov
sarb
xlat
pop
js
and
mov
pushf
bswap
loopne
cmp
negb
xor
mov
xor
dec
and
inc
aas
lea
repnz
fcmove
mov
mov
leave
cmpsb
ret
popa
fimuls
xlat
scas
cmpsb
push
cmp
cmpsl
vaddps
mulb
push
cmp
mov
xchg
rcl
adc
out
inc
sub
cltd
sub
pop
rolb
decb
cmp
scas
in
lock
inc
popl
or
call
push
movl
jmp
pop
jmp
cmp
jbe
push
sub
lds
fsubs
fcomi
add
lock
call
xlat
dec
sahf
mov
xor
popf
lock
movsl
loope
and
sub
xor
je
add
jl
and
jo
xchg
dec
pop
or
mov
pop
xchg
xor
int
lahf
push
ret
dec
add
jne
or
sub
sub
push
or
add
sahf
hlt
mov
push
or
out
and
movsb
cmp
add
inc
movsb
imul
inc
add
mov
adc
imul
and
aaa
mov
cmp
orl
std
push
add
push
rclb
xor
scas
imull
sbb
sahf
orl
fmuls
push
ja
or
and
sbb
es
xor
sbb
fwait
jo
cmp
movl
pusha
mov
push
movl
push
pushf
lea
jmp
pop
mov
jl
fyl2xp1
iret
xchg
std
dec
push
movsb
sub
mov
mov
xor
jmp
mov
pop
jle
cli
int
dec
loop
loopne
inc
imulw
mov
cld
fsubs
addr16
adc
cmpsl
mov
cmpb
repz
pop
stc
fimuls
lods
adc
cld
in
rep
popf
cmp
in
shll
xorb
jmp
xlat
ds
movsl
dec
rcl
and
xor
std
add
ljmp
pop
sbb
shlb
lods
loopne
movzwl
lcall
push
ss
shl
push
cs
mov
sbbl
loop
enter
mov
cmp
mov
cltd
and
inc
and
xchg
jns
cmp
or
icebp
sbb
shlb
mov
les
js
mov
adc
dec
icebp
lods
pop
cmp
outsb
push
jnp
jb
std
inc
cmp
mov
scas
jmp
and
and
push
adc
sub
mov
fmuls
fnsave
mov
jnp
jae
add
mov
xchg
xor
je
pop
fisttpll
cmp
ljmp
inc
cmp
fdivl
les
push
fidivrl
rolb
or
dec
xlat
xchg
out
inc
gs
push
cmp
lods
jecxz
mov
in
ficomps
jle
inc
xor
cwtl
insb
cmp
jns
les
sub
add
inc
mov
rorb
or
lahf
cmc
mov
adc
sub
out
call
popa
inc
movsb
rclb
mov
bound
push
repz
cmp
cmp
add
inc
xchg
int3
push
pop
push
xlat
mov
aas
or
mov
or
push
pop
add
into
pushf
gs
lret
or
out
push
push
dec
or
lods
loop
mov
xlat
pusha
dec
popa
push
fdiv
nop
xor
inc
pop
ss
sbb
xchg
popa
fsubl
inc
cmp
insl
insb
rclb
mov
aas
pop
cmp
xchg
enter
in
shrl
lods
add
fwait
dec
pop
mov
push
jns
in
ljmp
in
lahf
jge
push
sub
or
ljmp
sub
xor
push
iret
daa
pop
pop
mov
mov
popa
or
addr16
mov
lcall
add
aad
pushf
cli
incb
cmp
outsl
fcmovb
add
cmpsb
fnstsw
mov
int
pop
mov
mov
inc
jl
xchg
popf
jb
fs
xchg
pop
xor
inc
xor
pop
sbb
repnz
xchg
mov
and
pminub
inc
pop
mov
sarl
and
cmp
push
inc
xchg
mov
push
adc
dec
sub
sarl
pop
scas
repz
cltd
mov
pop
add
mov
xor
xor
xchg
sub
test
fstpt
push
xchg
stos
add
shlb
sbb
xor
and
mov
cmp
xchg
fwait
mov
popa
cmpsb
xor
out
sti
pusha
xor
js
push
loop
mov
or
xchg
pop
test
aam
je
pop
mov
cltd
arpl
push
push
lock
es
scas
mov
xor
fidivl
push
ret
mov
and
jge
rorl
insl
imulb
data16
out
addr16
or
add
xchg
leave
imul
js
inc
push
cld
fldenv
dec
lret
adc
push
jne
push
pusha
jns
mov
inc
ret
movsl
negl
inc
cmp
push
cmp
subb
dec
ror
imul
sarb
inc
pop
sbb
fdivrp
push
fsubrp
adc
pop
or
lods
nop
mov
jb
xor
sbbb
daa
insl
cmp
mov
push
pop
loope
outsl
mov
imul
cs
in
scas
push
inc
cmp
xor
or
mov
movl
mov
push
push
pushl
lea
jmp
dec
inc
clc
pop
cltd
pop
or
and
sbb
dec
loop
cmpsb
in
divb
loope
cwtl
mov
pop
icebp
mov
push
mov
mov
jmp
test
fwait
or
xor
and
push
sarb
shrl
int3
scas
inc
inc
cmp
adc
aam
mov
mov
rcrb
add
cmp
add
fldl
popf
out
cmp
stc
mov
fdivp
lds
leave
pop
dec
js
xor
rorb
int3
lods
ret
inc
cmp
push
jmp
push
jmp
jno
xor
lds
je
stos
int
or
jnp
xchg
in
adc
lock
cld
popa
leave
sarl
xchg
sub
xor
outsb
add
adc
jbe
cld
iret
inc
loopne
fs
sbb
stc
inc
and
cli
jle
inc
cmp
fs
js
push
movl
jmp
cmp
push
sub
fildll
dec
mov
fwait
cltd
test
loop
in
pop
jg
fbld
add
xor
fdivrs
incl
arpl
cwtl
and
loope
enter
sbb
or
jmp
pop
mov
and
xchg
in
jne
adc
sub
push
shrb
cmp
xchg
push
xchg
test
and
jb
push
adc
pusha
xor
jle
sti
fcoml
js
or
dec
push
lret
std
xchg
lahf
xchg
data16
out
or
xchg
jns
fldcw
loopne
xchg
inc
popf
sub
inc
ds
xchg
ret
ficomps
imul
sbb
sti
out
bound
ret
push
insb
xor
pusha
inc
aaa
fsubrp
inc
inc
and
cs
cmpsl
stc
pusha
lea
jmp
sar
inc
daa
stos
pop
insb
call
cmp
add
mov
dec
cmp
push
jmp
add
xor
out
imul
mov
stc
mov
imul
push
cmp
repnz
or
iret
sbb
cmpsb
lock
ret
cwtl
fildll
aad
nop
push
movsl
pop
aas
rcl
and
iret
xlat
mov
rorb
aaa
addr16
inc
and
fadds
adc
push
movb
pushl
pushf
lea
jmp
test
and
in
aam
and
cs
loope
cmp
mov
push
jae
lds
loop
dec
outsl
mov
test
loope
dec
and
and
pop
jne
fisubl
pop
cmp
push
inc
sub
and
push
xchg
inc
and
push
out
pop
push
adc
mov
xchg
andb
dec
mov
into
mov
stos
xor
or
mov
adc
imul
inc
xchg
fiadds
rcl
arpl
outsl
pop
inc
ret
outsl
push
lock
mulb
aas
or
jmp
push
push
lahf
jl
test
dec
dec
push
jb
pop
xor
test
inc
nop
jnp
and
sahf
sub
fsubrs
ljmp
clc
test
imul
hlt
leave
jnp
repz
cmp
adc
loope
lret
ss
push
outsl
sub
pop
call
push
cs
out
inc
sbb
and
bound
es
inc
hlt
mov
jno
or
adc
pop
test
fnstenv
dec
dec
push
pop
faddp
call
mov
jl
jbe
mov
gs
xchg
stos
push
dec
sti
mov
mov
loop
mov
aad
scas
ss
ja
les
jo
sub
xchg
scas
cs
cmp
mov
sub
mov
es
xchg
xchg
lea
and
dec
adc
shll
fwait
or
xor
lods
rorl
stc
cmp
mov
out
test
and
mov
int
xchg
push
insl
jl
aaa
sub
push
xchg
mov
imul
les
ja
repz
dec
push
cmc
outsb
dec
in
fwait
push
sbb
pusha
mov
lahf
mov
push
loop
or
cmp
lea
cmp
movsb
cmpsb
jle
into
aas
fstpl
xchg
inc
popa
shlb
mov
jl
arpl
push
cld
mov
hlt
je
retw
divl
enter
cmp
sub
sbb
idiv
pop
cmovns
scas
insl
jecxz
popa
xor
jp
mov
jle
sub
std
lods
adc
out
mov
mov
jae
xor
std
repz
pop
ljmp
jb
ret
mov
in
and
sarb
jne
jg
jmp
std
loop
xor
lods
inc
ficomps
dec
jne
cld
mov
add
push
jo
add
and
int
fstpt
xlat
dec
or
pop
add
lret
stos
fdivr
mov
inc
jl
icebp
rorb
cmp
stos
dec
mov
or
roll
xor
jp
jmp
cld
loop
jle
push
or
jl
mov
cltd
hlt
test
jp
add
dec
pop
scas
fcmovnu
cmp
add
add
dec
sbb
test
xchg
pusha
aas
add
inc
arpl
sub
mov
mov
mov
in
sbb
insb
adc
outsb
dec
sarb
cmc
jmp
cmp
push
push
push
pusha
xor
dec
fiadds
xor
sbb
add
data16
mov
xchg
jecxz
stc
inc
ss
xchg
cmp
sahf
repnz
adc
out
pop
sbb
mov
cmpl
data16
lcall
add
push
dec
decl
lret
outsb
jbe
ret
add
push
lods
outsb
mov
and
fstpt
popa
mov
mov
repnz
sbb
push
loop
xchg
or
xor
pop
xlat
sub
leave
pushw
xchg
pusha
or
adc
add
jnp
insb
cmovno
fsubrl
mov
lcall
call
add
add
cmp
mov
pop
jmp
enter
jb
std
bound
data16
stos
mov
popa
or
js
or
fcomp
loope
push
push
jg
pushl
xchg
out
adc
sub
lcall
dec
arpl
in
xor
out
and
xor
repz
movsl
cmp
sub
mov
lods
into
test
mov
pop
pop
sub
inc
cmp
mov
cs
shlb
das
mov
mov
xor
popa
in
mov
push
pop
cmp
outsl
dec
xor
cltd
roll
and
inc
xor
push
cmp
pop
stc
cmp
push
sbb
add
mov
cltd
push
outsb
loopne
sub
pop
inc
out
jb
pushf
loop
push
ljmp
andb
jmp
jl
je
sub
stos
mov
pop
sar
repnz
call
push
fsts
les
cmp
jne
push
or
xchg
push
push
push
add
std
repz
xchg
adc
repnz
sbb
test
cmc
sbb
xor
hlt
push
jmp
push
jl
scas
dec
push
pop
into
jmp
inc
int3
mov
bound
arpl
jp
mov
inc
push
jecxz
lcall
mov
pop
inc
pop
mov
push
arpl
inc
insb
test
add
fldenv
rclb
push
add
jl
or
sbb
loop
aam
aad
or
fists
mov
enter
sbb
imul
or
inc
push
fisubs
jne
dec
jne
in
idivb
xchg
insb
xor
jbe
pop
or
outsl
push
lods
mov
imul
call
insb
add
pushl
lcall
cld
roll
xchg
movsl
mov
in
test
std
jmp
xchg
xchg
out
shlb
push
out
sbb
clc
inc
xor
cmp
add
hlt
dec
fcomps
and
mov
and
adc
mov
outsl
fs
jle
xchg
add
repnz
jne
jg
cmpsl
test
mov
jmp
push
push
xor
xchg
iret
xchg
xchg
inc
das
in
push
or
aam
aam
lahf
out
es
sbb
jbe
mov
enter
mov
mov
fstpt
inc
dec
cmp
jne
xchg
cmc
in
lods
mov
xchg
lahf
lcall
loopne
jns
inc
shll
cltd
inc
das
fcmovb
insb
movl
pushf
lea
jmp
adcb
loopne
rcrb
mov
push
fcompl
pop
mov
and
out
mov
push
fdivl
or
fldl
das
sahf
lods
mov
aam
sbb
sub
test
mov
leave
lcall
push
mov
jns
mov
xchg
mov
sub
pop
lcall
movsb
test
jle
jl
vmwrite
sbb
dec
inc
cs
push
sbb
add
push
pusha
pusha
movl
push
mov
mov
call
movl
pushf
push
pusha
pushl
lea
jmp
stos
sub
xchg
push
sbb
jae
mov
mov
fadd
lcall
sti
adc
xchg
and
push
imul
pop
fiadds
dec
sbb
pusha
fsts
inc
cmp
int3
dec
add
outsb
int
cmc
fcmove
add
cs
lds
fs
lcall
rcll
das
dec
dec
mov
pusha
sbb
adc
xor
shll
and
loope
dec
das
mov
jae
out
fsubrp
icebp
cwtl
mov
call
icebp
mov
out
mov
push
mov
lahf
mov
sbb
push
dec
add
sub
movsb
call
fildll
adc
jecxz
inc
in
decb
xchg
les
inc
sub
jmp
jmp
loop
stos
cmp
mov
popf
mov
sahf
adc
sub
stos
lret
adc
xlat
shrb
loope
fadd
imul
mov
xor
dec
pop
in
sbbl
incl
divb
in
sahf
shlb
xchg
push
pop
and
bndstx
mov
xchg
test
push
push
inc
sub
mov
mov
loope
lods
adc
sub
mov
mov
sub
lock
xchg
jb
inc
sub
mov
mov
mov
imul
add
mov
mov
jmp
subl
pop
lds
in
mov
jne
inc
in
lds
popf
sub
mov
jae
xchg
nop
xor
cmp
pusha
add
jmp
imul
movsb
sti
adc
sub
icebp
out
push
lret
xor
push
pop
push
or
inc
sub
mov
clc
repz
in
repnz
cmc
and
cmp
push
out
nop
lds
jne
jne
sbb
jge
pop
insb
dec
mov
mov
lret
adc
xchg
push
cwtl
clc
jno
popf
jo
mov
mov
aas
xchg
xor
mov
adc
xor
sbb
scas
mov
jge
hlt
ljmp
es
sub
pop
jge
sub
inc
enter
ds
inc
push
jne
mov
dec
sbb
stos
add
pop
pop
stc
pop
mov
cwtl
repz
pop
movsb
add
ffree
icebp
js
xor
adc
daa
push
dec
cs
aaa
and
fistpll
imul
test
jb
cmc
inc
sub
inc
and
mov
xor
push
movb
lea
jmp
jmp
call
pushf
pushf
movl
lea
jge
push
pushf
mov
lea
jmp
mov
mov
out
xchg
mov
add
js
aas
inc
pop
inc
xchg
mov
and
sti
add
xor
leave
fwait
mov
inc
daa
nop
xchg
cmc
mov
sbbl
stos
sub
jno
je
sahf
sbb
xchg
mov
mov
sbb
dec
popf
daa
in
into
cmpsl
cmpl
jno
push
xchg
inc
sub
adc
lds
xlat
leave
hlt
mov
push
dec
add
add
aas
and
js
sahf
jbe
mov
push
adc
fdivs
adc
sub
add
mov
push
add
or
mov
fcmovbe
lret
sbb
mov
xor
in
add
dec
push
cmpsl
clc
out
xchg
cld
clc
imulb
adc
shlb
out
jp
add
aaa
xchg
stc
dec
shll
jmp
mov
lahf
ja
cmp
push
lods
lock
aad
fisubs
mov
inc
and
inc
push
sub
jmp
adc
dec
mov
inc
xor
pop
or
ret
add
aam
fidivrl
data16
mov
mov
cs
dec
xchg
inc
lcall
js
xor
iret
pcmpgtb
dec
mov
cmpsb
mov
jmp
notb
pop
jge
aad
and
lds
sub
mov
mov
jnp
leave
cmp
lods
sbb
lret
cmpsb
and
inc
fnstcw
fiadds
lahf
xchg
aam
adc
cs
jecxz
inc
shll
adc
mov
sub
stc
out
and
mov
xchg
mov
dec
dec
lock
push
xorl
dec
mov
cmp
or
int3
xchg
xchg
mov
outsl
dec
roll
dec
xor
xchg
xchg
incl
inc
add
ror
mov
add
stc
push
dec
ja
inc
jmp
sbb
les
vpshaq
cmp
rorl
push
int3
adc
pop
aam
xchg
pop
xor
jo
jb
dec
xor
and
insl
insb
mov
sti
les
movsb
xchg
jne
es
push
aad
lret
scas
sbb
jae,pt
iret
xor
leave
sbb
push
pop
or
ret
icebp
sbb
out
mov
testl
jno
aas
sbb
add
sbb
xchg
mov
sbb
sub
fld
jo
mov
lds
pop
inc
int3
ljmp
outsl
mov
pcmpgtw
dec
sbb
iret
dec
cs
and
sbb
cmp
mov
ret
jl
mov
int
leave
les
and
shlb
dec
mov
mov
sub
mov
bound
int3
cltd
lcall
aaa
test
je
andl
cmpsl
adc
lds
pop
inc
mov
mov
fdivs
ret
loop
lods
jg
lds
mov
imul
xor
pop
push
dec
enter
sub
cwtl
jmp
shl
cmp
mov
add
movsl
clc
pop
add
int
call
test
push
aad
mov
or
aas
xchg
popa
pusha
lret
jne
mov
mov
xchg
jnp
mov
repnz
popa
inc
mov
fdiv
cmp
shlb
pop
dec
push
sbb
test
inc
aam
pop
xchg
into
or
sahf
inc
clc
int
outsb
sbb
add
inc
lret
test
nop
push
aam
mov
jl
popa
int3
sbb
lret
fwait
dec
out
arpl
mov
fdivl
xor
faddl
cmp
rcll
add
fsubs
adc
fidivs
add
mov
cmpsb
sub
ljmp
sub
repnz
je
or
lods
sbb
mov
or
les
clc
mov
jb
iret
push
adc
repz
push
inc
daa
lock
aam
add
scas
and
stc
mov
jecxz
or
or
in
ret
icebp
aam
je
out
insl
adc
push
in
ud2
cmp
add
push
adc
xchg
fs
jae
push
xchg
cwtl
push
popf
leave
inc
dec
mov
jp
mov
jno
inc
cli
mov
or
cwtl
jge
mov
adc
add
es
int
ds
add
fsub
sbb
push
das
cmpsb
stc
mov
insb
ficomps
or
stc
andb
jg
fiadds
mov
jne
dec
add
or
cmpsb
jp
mov
fidivrl
int
push
mov
cltd
shlb
loopne
fidivs
inc
daa
xor
loopne
stc
pop
into
push
lret
jno
into
stos
testb
leave
mov
lcall
das
add
lea
lcall
add
cmp
arpl
in
dec
and
in
orl
aas
inc
jg
add
sbb
fistps
adc
and
mov
cmp
xor
push
jp
xchg
or
dec
ja
cld
daa
cltd
mov
insb
jl
cmpsb
lea
push
out
jnp
lea
daa
lods
jmp
insb
ret
adc
and
sbb
push
jnp
xchg
jg
testl
dec
jnp
push
test
inc
cmpsb
xchg
add
jmp
ficomps
insb
xor
hlt
shll
gs
sbb
loop
mov
or
js
cmpsl
cli
pop
es
jle
imull
fs
hlt
je
sub
in
ret
and
addb
sbbl
fisubs
loope
mov
nop
xlat
and
aaa
sahf
jmp
rsqrtps
jle
sahf
jnp
fs
pop
fwait
out
and
mov
cs
rclb
cmp
rcrl
push
push
xor
sub
inc
push
cmc
adc
out
mov
jmp
push
rcr
mov
out
stos
cld
jno
popa
push
mov
push
and
popa
dec
repnz
mov
imul
jns
cmp
jle
pop
pop
addr16
jne
inc
sub
sahf
xchg
repz
lcall
push
pushf
call
pusha
movl
call
sub
je
sub
xchg
fld
lret
or
mov
and
xchg
sbb
iret
clc
cmp
xor
xchg
ret
lret
repz
scas
aas
js,pt
fnstcw
popf
hlt
dec
mov
shll
push
xor
pushf
loopne
jecxz
lret
mov
js
cmp
sti
sub
mov
xchg
das
inc
add
mov
and
mov
push
jecxz
into
dec
cmp
mov
sbbb
mov
je
pop
cmc
hlt
sbb
rcrb
in
stos
add
lcall
jecxz
stc
cmpsb
sbb
ljmp
fiaddl
cs
repnz
sub
call
js
in
pusha
movl
lea
jp
pusha
movl
push
pushl
pusha
lea
jmp
cmp
dec
fidivs
cmpsl
add
fdivr
add
ss
icebp
mov
negl
insb
jo
mull
sub
or
mov
clc
cmp
lods
loope
mov
sbbb
scas
pop
cmc
jmp
popf
xor
xchg
or
jnp
and
cli
mov
mov
push
pop
inc
and
insb
jo
arpl
add
pushf
pushf
call
xor
sbb
les
cli
mov
outsb
cmp
mov
mov
int3
add
js
int3
das
push
rclb
and
pop
xor
outsl
dec
ljmp
pmulhuw
cmc
bound
loopne
jmp
rolb
jge
pushf
es
jge
and
js
push
jo
adc
jns
inc
sbb
xchg
add
sub
insl
xlat
cmc
gs
xchg
cmp
fdiv
add
aam
pop
fbstp
add
jge
jb
out
jnp
stos
sbb
ljmp
pop
pop
xchg
inc
lods
scas
mov
adc
in
aad
je
cmpsb
lcall
jg
and
pop
iret
lret
gs
cmp
dec
fadd
pop
and
nop
hlt
pop
inc
and
push
mov
pop
sub
mov
cwtl
in
mov
repnz
pop
adc
push
dec
insl
ret
dec
cli
mov
lea
xchg
inc
jl
xor
cmp
adc
pop
movsl
mov
icebp
push
lods
push
mov
adc
xor
push
addr16
jno
mov
xchg
je
adc
lock
adc
xchg
es
push
jo
xor
jae
sbb
aam
fs
shlb
inc
add
stos
scas
ror
xor
sbb
pop
inc
mov
mov
cmp
push
dec
cld
xor
push
jo
lahf
cmp
lcall
pop
insl
ret
idivb
aaa
lock
in
adc
les
jo
pop
mov
lcall
or
or
cld
lahf
jae
and
push
xlat
and
test
aam
test
sbb
out
pop
pusha
sti
jbe
mov
mov
int3
rolb
movsb
mov
pop
cmp
cld
loopne
cmpsl
clc
stos
bound
xor
push
jl
xor
mov
insl
mov
movsb
mov
and
jae
icebp
mov
inc
and
xchg
mov
push
mov
push
shrb
arpl
cmpb
test
in
out
insl
sbb
stos
ds
or
fsts
add
jp
fstl
mov
shl
adc
push
dec
jb
mov
shll
push
dec
or
js
std
pop
or
daa
cltd
test
data16
xchg
xchg
loope
mov
push
fbld
inc
adc
inc
stc
adcl
sti
fcmovnb
negl
outsb
adc
or
adc
xchg
cltd
test
pop
mov
unpckhps
adcl
push
cmp
fiadds
testb
jg
in
and
add
mov
adc
test
repnz
in
insl
jle
or
mov
gs
in
pop
push
add
pop
ja
xor
je
sub
cwtl
testl
loopne
in
xor
pop
push
push
dec
push
lret
mov
push
add
in
and
loope
inc
and
in
lea
push
movl
pushf
pushl
movb
pushf
lea
jmp
push
push
call
jmp
cvttps2pi
in
jbe
mov
cmp
les
sub
mov
les
sbb
ja
js
xchg
jge
fadds
ja
shl
in
mov
out
imul
aad
rcll
test
sbb
addl
mov
lret
add
xchg
ret
and
pop
inc
push
push
jmp
ds
subb
adc
push
repz
std
inc
aas
dec
cmp
in
idivb
lret
sbb
sahf
call
in
xor
or
mov
pop
cli
test
mov
cmpsb
cli
mov
test
or
mov
clc
clc
sub
sbb
xchg
add
inc
js
pop
imul
fwait
inc
iret
push
mov
pop
push
cmp
mov
jo
inc
adc
jle
push
fiaddl
xchg
lock
jne
lds
xchg
fiaddl
mov
scas
test
jg
xchg
cli
fimull
outsb
and
pop
add
imul
dec
cmp
sbbl
dec
sti
pop
jno
push
roll
jle
fs
mov
stc
add
cmpsl
loop
ljmp
xchg
xchg
shr
mov
cmp
lea
rcpps
dec
and
mov
mov
mov
lret
adc
and
imul
xchg
pop
push
enter
xchg
lcall
mov
lock
and
or
jg
out
mov
add
das
inc
pop
xor
fcmove
mov
mov
jbe
test
stos
iret
mov
and
inc
ret
mov
out
scas
dec
mov
xchg
cmp
lods
sub
lods
stc
lods
mov
out
leave
jecxz
and
ret
cli
loope
or
cmpsl
xchg
xchg
call
loopne
mov
stc
pushf
and
das
dec
add
add
inc
sbb
mov
je
mov
mov
push
repnz
les
mov
js
and
adc
push
xchg
mov
mov
outsb
dec
push
mov
cltd
push
dec
int
rclb
or
fcmovnb
js
mov
out
inc
and
xor
sbb
loopne
or
sbb
int
repz
push
dec
out
and
adc
bound
sbb
add
popa
out
pop
enter
dec
add
add
dec
fldcw
xlat
dec
jno
xlat
in
cld
adc
xchg
loop
lret
movsl
sbb
jb
inc
sbb
ja
mov
ja
popf
add
in
pop
shlb
or
pop
fbld
jl
jmp
les
sbbb
repz
stos
push
fisttpl
mull
pop
sub
adcb
decb
sub
pusha
outsb
pop
sti
xchg
fimull
loope
fdivrs
notb
lahf
xchg
dec
jge
scas
test
xor
sahf
cmp
leave
mov
imul
sbb
push
xchg
aam
test
js
sbb
sbb
iret
out
push
rcll
adc
sbb
ss
aam
push
mov
adc
loop
and
xchg
push
test
sub
mov
jbe
mov
push
or
sbb
arpl
inc
inc
cmc
mov
cmpsb
push
inc
addr16
jmp
xor
sarl
or
pop
fs
je
inc
jl
inc
cld
add
pop
mov
or
pop
out
push
fs
rcll
sub
sbb
add
das
arpl
insb
test
sbb
les
mov
jmp
sub
adc
lods
fcoml
mov
scas
jmp
or
int3
icebp
add
js
outsl
mov
dec
loopne
divl
sub
int3
push
pop
dec
stos
clc
add
dec
imul
add
lods
cs
shll
add
pop
fisttpll
inc
sbb
jge
pusha
movl
pushf
pushl
jmp
popf
lods
or
loope
push
sahf
rolb
and
xor
ljmp
push
jmp
lret
jle
mov
popf
cld
xor
push
mov
sub
dec
mov
jecxz
push
mov
add
inc
xchg
mov
es
int
in
sub
lods
mov
add
stc
mov
movsb
int
mov
xor
loope
sub
mov
lahf
fwait
subb
sub
repnz
dec
inc
sbb
cmp
mov
jbe
push
mov
or
lods
sub
cwtl
pop
adc
jne
pop
or
jge
loope
pop
xor
lods
int3
jno
loop
scas
mov
ret
nop
fcom
fwait
loope
ror
outsl
dec
xlat
jmp
cltd
mov
rol
shlb
xchg
add
pop
or
inc
sbb
pop
inc
push
movl
pushf
pusha
jmp
pusha
push
movl
pushf
pushl
movl
pushl
pushf
push
lea
jmp
movl
pusha
movl
pusha
push
lea
jmp
adc
test
loopne
push
push
sbb
adc
add
and
sbbb
sub
inc
jp
lret
lds
xor
mov
xchg
lods
les
cmp
inc
adc
xor
jp
xlat
pop
dec
jbe
ret
decb
dec
adc
out
ja
hlt
mov
mov
cmc
pop
mov
adc
outsl
cmc
js
pop
pop
inc
cmp
sub
shl
bound
shlb
test
sbb
nop
xchg
clc
mov
fcmovnb
pop
std
xor
aam
sbb
shll
loop
mov
pop
decl
shrl
and
jl
sarb
shl
idivb
push
jmp
loop
int
repnz
sub
adc
lcall
cmp
jg,pn
mov
adcb
push
adc
sbb
xorl
inc
daa
push
xchg
scas
fcompl
mov
hlt
xor
cmp
imul
in
mov
hlt
outsl
ja
mov
push
into
and
sub
stos
inc
sahf
xchg
and
adc
sub
cltd
out
int
data16
mov
lret
adc
das
shlb
cmpb
sarb
cs
dec
hlt
jg
cmpsb
cli
mov
inc
adc
inc
xor
mov
repz
mov
jb
mov
fistpll
jnp
fiaddl
sbb
or
aas
push
inc
pusha
xor
rorb
dec
lret
xchg
ds
adc
mov
jmp
mov
xchg
test
jg
and
cmpsb
fisttps
into
mov
stos
addr16
mov
in
test
dec
outsl
pop
push
call
push
inc
leave
add
arpl
inc
mov
adc
mov
pop
rolb
cmp
dec
and
addr16
mov
and
movsb
lret
adc
mov
inc
xchg
mov
mov
repnz
cwtl
stos
push
dec
mov
js
add
push
mov
mov
jge
inc
sarl
sbb
cmp
pushf
push
pushf
movl
pushf
pusha
movl
movb
pushl
push
lea
jmp
pop
mov
push
popf
in
mov
jecxz
ss
sbb
je
sahf
fidivrs
add
in
dec
or
push
aad
daa
xchg
xor
mov
ljmp
xlat
mov
cmpsb
icebp
shrb
mov
adc
mov
call
pop
mov
push
movb
pushl
movl
push
mov
mov
lea
jmp
mov
movl
pushf
push
movl
movw
pusha
pushf
lea
jmp
movl
pushf
pushf
pushf
lea
jmp
pushf
call
xchg
gs
ja
mov
jb
lods
sahf
dec
xor
in
rorb
scas
aam
stos
addr16
into
jecxz
jb
pusha
bound
sbb
pusha
nop
addr16
test
sets
inc
jae
andb
ret
jle
add
xchg
mov
pop
or
jecxz
inc
pop
push
jae
lods
cmp
in
loope
lds
pop
and
sub
xadd
movb
sub
push
dec
addl
pop
inc
mov
jnp
mov
pushf
mov
insb
test
cli
sarl
xor
pop
inc
lret
sahf
data16
mov
mov
push
enter
pop
push
imul
aas
int3
cltd
es
dec
or
dec
sub
out
mov
inc
cmp
dec
stc
fdivs
and
nop
das
dec
dec
and
jle
test
scas
inc
inc
pop
or
in
pop
insl
das
aas
outsb
lahf
inc
sbb
nop
jmp
mov
popa
das
scas
cmp
sub
push
in
std
loope
push
out
aad
popa
jns
mov
nop
scas
dec
jno
sbb
lcall
insl
xor
pop
test
inc
leave
mov
out
pop
inc
pop
mov
stc
pop
ja
mov
je
leave
push
call
xchg
jns
adc
or
push
pushl
jmp
mov
cmovno
xchg
mov
out
cmpsb
push
mov
mov
stc
int
cmp
push
popf
xchg
mov
inc
pop
mov
xchg
rcrb
or
popa
icebp
cmp
push
fptan
mov
pop
adc
movsb
in
sbb
cmc
cmp
sub
jecxz
in
lods
hlt
mov
or
data16
leave
repz
and
nop
add
push
aam
dec
rcrl
push
push
pop
loope
inc
and
xor
lds
sbbb
add
repz
add
pop
jbe
push
push
pushf
mov
lea
jmp
push
movl
push
jmp
jge
cmp
mov
push
pop
pusha
sbb
fwait
ret
bound
sub
pop
cltd
test
leave
icebp
pop
int
ljmp
jmp
jp
xchg
aaa
inc
movsl
pop
push
jbe
popa
divb
int3
pop
test
outsb
dec
and
imul
rol
shrl
or
dec
dec
inc
adc
cli
dec
lea
jne
push
pushf
pusha
pushf
movl
lea
jmp
mov
xchg
push
sub
mov
sbb
sbb
or
xor
test
shrb
and
out
lock
lods
idivl
sub
lret
fisubrs
jb
xchg
mov
dec
sub
add
push
cmp
sbb
rclb
ficomps
jecxz
sub
les
add
adc
mov
adc
mov
mov
sbb
adc
mov
cmpsl
fisttps
hlt
scas
mov
scas
mov
aad
mov
xchg
mov
outsl
cli
scas
or
sbb
mov
movsl
cli
xchg
sub
fbstp
or
scas
cs
xchg
sub
mov
cli
inc
adc
mov
dec
std
cmpsb
in
xor
mov
fwait
adc
aad
les
lods
std
test
and
sbb
fnstsw
lea
push
lock
adc
lods
js
fstps
pop
jns
mov
xor
dec
or
mov
mov
inc
cmp
pushf
xor
pop
int
insb
inc
adc
ss
adc
cli
clc
pop
dec
dec
test
inc
sub
cmc
jl
push
xor
fwait
pop
sub
sbb
and
push
add
add
or
xchg
xchg
test
push
jecxz
lcall
xchg
or
daa
pop
out
fwait
test
cmpsb
rcl
pop
rclb
add
cli
test
mov
popf
shl
push
addr16
xchg
cli
xor
inc
data16
inc
adc
pop
js
sbb
mov
jns
mov
mov
jo
push
pop
nop
shll
or
push
cwtl
cmp
jge
fucomi
lock
out
ss
sub
xchg
dec
std
es
mov
sti
out
mov
mov
pushl
xchg
mov
repz
push
fsubrl
mov
test
insb
lahf
outsb
movsl
mov
mov
mov
or
cld
leave
shrb
mov
sbbb
add
lcall
ljmp
les
aam
cld
fsubrl
movsl
jp
pop
aaa
or
daa
rcll
inc
adc
and
mov
clc
imul
shl
out
aad
xchg
mov
or
cmpsb
adc
xchg
mov
xor
and
xchg
aad
stos
mov
lret
inc
aam
lahf
cmp
dec
pop
or
inc
cs
test
hlt
pushf
push
ja
jle
pop
inc
adc
je
mov
push
in
mov
adc
dec
push
repz
xor
pop
jge
xchg
pushf
pushl
daa
pusha
sbb
inc
pop
adc
xchg
adc
shl
lock
std
inc
mov
push
adc
mov
sahf
cmp
cld
lret
and
sub
mov
push
loop
aad
adc
ret
add
fisubl
and
and
insb
lods
pop
xchg
sub
hlt
push
lds
mov
out
test
push
add
mov
adc
cmp
jmp
sbb
popf
rcr
jns
cmp
adc
outsl
aad
lds
out
add
push
jne
push
sti
dec
out
push
and
xchg
xorb
push
pmulhuw
mov
jp
cmpl
push
shr
popf
out
mov
dec
or
add
xchg
inc
dec
pusha
rcrl
xchg
int
nop
inc
shlb
cld
into
sbbb
mov
fsts
out
es
jne
jne
adc
mov
shrl
add
add
repz
sub
dec
xor
xor
dec
outsb
and
pop
adc
stos
std
xchg
mov
push
data16
push
popf
rcrb
dec
decb
sbb
mov
stos
add
icebp
loope
inc
sub
xor
xchg
jecxz
enter
pusha
cmp
dec
out
fwait
mov
push
in
mov
and
cmc
dec
test
inc
jbe
dec
pop
xchg
je
cltd
inc
bound
stc
inc
mov
pop
push
mov
sarl
nop
ljmp
inc
pusha
das
xor
stc
cmp
adc
pop
test
mov
jl
inc
sbb
out
inc
sete
out
clc
movsl
testl
jbe
xchg
in
andl
push
xchg
dec
idivb
pusha
ds
push
into
mov
int
jne
lods
push
es
jnp
leave
push
rorl
push
arpl
cs
movsb
xchg
mov
sahf
sbb
mov
add
movd
mov
cmc
int3
xchg
faddl
loope
fcoms
add
in
fisttps
cs
add
pushf
jecxz
xor
mov
movsl
jecxz
repz
ret
arpl
popf
mov
aad
insl
xor
mov
push
dec
or
loope
push
add
nopl
push
mov
and
jnp
push
pusha
pusha
movl
push
lea
jmp
sahf
pop
cmp
js
out
adc
ja
fwait
repz
pop
jecxz
mov
dec
push
sbb
mov
pop
lret
xlat
test
cmpsl
inc
std
xchg
pop
pop
mov
lds
mov
in
jp
pop
js
sub
andl
sbb
mov
push
repz
push
loopne
test
clc
sbb
jle
cltd
les
adc
enter
lret
and
leave
ss
mov
arpl
or
lret
popa
scas
sbb
xchg
jle
rsqrtps
rclb
mov
movsb
adc
add
add
push
push
addb
ret
shl
jns
add
pusha
movl
mov
movl
pusha
mov
mov
push
lea
jmp
divb
lds
add
push
cmp
dec
and
push
add
mov
cmc
adc
cltd
rcl
enter
fwait
loop
xchg
ret
sub
xlat
lea
xor
push
xor
add
out
xor
adc
inc
fsubrl
dec
sub
inc
or
jg
clc
lods
repnz
jmp
loope
mov
test
lds
adc
jo
pop
sbb
sbb
inc
or
bound
rolb
out
sub
mov
mov
mov
movsl
or
fmuls
cmp
inc
push
xorl
jg
cltd
testl
cs
adc
insl
dec
rol
popa
mov
inc
data16
mov
and
clc
movsl
dec
inc
or
mov
mov
or
inc
lret
pop
mov
das
mov
lds
xlat
push
push
jecxz
or
and
jmp
repnz
sti
jge
cwtl
cli
dec
aaa
dec
and
push
mov
movsl
cmp
sub
xor
outsl
popf
sub
jbe
js
inc
arpl
pop
xchg
das
xor
jne
xchg
in
cwtl
xchg
xchg
or
push
sub
mov
or
cmpsl
arpl
fld
sbb
add
jae
jle
push
divb
mov
pop
inc
aaa
in
test
repnz
pop
jg
lret
push
xlat
mov
test
cmp
addr16
into
sbb
fcomp
push
fwait
jns
mov
mov
in
xchg
adc
or
push
outsl
sbb
test
jb
aad
sbb
into
xor
push
adc
addl
inc
or
lahf
sbb
lods
xor
xor
push
mov
in
push
and
xchg
icebp
xor
mov
pusha
push
sahf
mov
jle
dec
or
push
push
aad
push
cs
xor
inc
mov
adc
push
xor
pop
inc
adc
cmp
inc
arpl
jl
fdivrl
lods
mov
add
cli
loope
inc
test
adc
add
mov
out
mov
ror
dec
or
cmp
or
pop
inc
cmpsl
daa
and
repnz
jb
push
jo
pop
icebp
sarl
jno
xchg
jmp
dec
cld
fucom
movsl
cmpsl
adc
out
cmc
scas
pop
add
adc
sub
cmp
sub
push
push
lods
inc
push
mov
insl
mov
inc
mov
cmc
cmc
sbb
bound
lock
imul
push
data16
mov
out
xchg
dec
lret
sub
clc
out
clc
mov
fwait
inc
mov
aam
ljmp
rcl
clc
pop
shrl
push
bound
xchg
cli
pusha
jno
inc
jns
out
sbb
sar
and
xchg
adc
lahf
sub
and
ret
js
jecxz
push
leave
movsl
lret
push
gs
loope
jmp
lcall
xor
hlt
jb
dec
push
out
cmpsb
jge
dec
clc
in
or
dec
movsl
sbb
mov
or
push
lret
jmp
lock
inc
aas
and
hlt
push
pop
fcoml
out
cmpsb
jge
dec
mov
je
dec
das
dec
lahf
and
xor
xchg
push
inc
inc
mov
cmp
sbb
xchg
js
xor
or
adc
sub
fs
fsubs
nop
js
inc
icebp
mov
mov
cmp
sbb
aaa
pop
jl
cmpsb
ss
aas
imul
divb
cmp
shl
push
jp
daa
dec
adc
mov
mov
mov
aam
add
pop
sar
dec
insl
loope
xor
ljmp
lret
xchg
std
mov
and
inc
adc
add
jle
mov
sbb
cld
xchg
xor
cwtl
sarl
fildl
and
add
fsubrs
mov
and
sub
adc
pop
movsb
inc
rorb
push
leave
push
lret
ud1
jno
mov
and
les
or
dec
scas
or
stos
and
jg
mov
aad
cli
mov
arpl
mov
testb
xor
cli
xchg
and
mov
mov
mov
sub
cmp
jae
popa
pop
cld
mov
mov
xchg
cld
out
xchg
mov
dec
movb
popf
jns
pop
jo
out
cmc
adc
test
imul
mov
adc
xor
cmp
mov
sbb
push
fsubl
mov
mov
xchg
xadd
or
sub
cwtl
test
or
sbb
pop
push
cmp
std
cs
fcmovu
stos
in
jns
lods
xor
addr16
shll
in
enter
cmpsb
clc
dec
ds
mov
jmp
push
dec
out
cmpsb
jp
xchg
test
add
cltd
icebp
nop
jnp
cltd
ret
push
jg
sbb
mov
imul
sub
add
lea
mov
sub
lret
or
adc
inc
pop
mov
stos
cmp
rcrb
inc
out
fdiv
mov
cs
fdivs
push
pop
imul
pop
mov
jo
push
insl
aam
addb
rol
mov
out
test
cltd
enter
in
addr16
inc
rcl
call
pop
lods
sub
pop
cmp
sbb
mov
pop
fmul
das
mov
arpl
lret
fbstp
jg
in
jmp
sub
ljmp
add
jp,pn
or
add
mov
mov
stos
scas
pop
xor
or
push
and
inc
lret
and
insb
jo
negb
sub
inc
bound
test
lea
insl
fs
mov
gs
ret
test
into
push
lock
mov
pusha
mov
cmpsl
inc
xor
pop
inc
and
jbe
aaa
movsb
pop
cmp
leave
sbb
mov
mov
pusha
inc
lods
cmp
aaa
jns
mov
in
or
out
lret
pop
mov
or
xchg
sub
dec
iret
and
fwait
std
jno
lods
daa
ss
push
and
mov
jg
lahf
loop
xor
or
lds
movsb
nop
push
and
dec
arpl
mov
lea
aam
movsb
push
mov
int3
xor
dec
repz
mov
std
mov
out
rorb
pop
lret
test
inc
jbe
dec
push
cmp
scas
pop
stos
movsb
sub
xchg
js
mov
sar
mov
es
add
mov
sbb
inc
popl
movsb
cmpsb
dec
daa
fidivrs
jae
test
dec
push
xchg
test
in
pop
repz
lahf
jecxz
rclb
pop
out
mov
inc
popl
jae
mov
jmp
in
jo
xchg
and
dec
adc
addr16
adc
or
push
adc
sti
lods
adc
add
dec
pop
and
repnz
adc
aaa
js
fistps
popa
inc
popl
push
sub
test
add
inc
xchg
push
mov
filds
xor
mov
adc
mov
mov
mov
add
push
rcl
scas
addr16
pop
sbb
dec
jbe
mov
and
pop
and
and
mov
inc
decl
mov
sbb
inc
pop
mov
loop
inc
popl
dec
jl
test
shlb
mov
fwait
adc
ds
jo
inc
push
xor
test
xchg
ljmp
out
and
push
pop
jne
cli
lea
ja
pop
jg
sub
js
ja
fcmovb
mov
push
ja
ret
in
sub
outsb
add
inc
popl
dec
sbb
dec
test
inc
sub
pop
out
sbb
xchg
cmp
mov
out
mov
lret
loopne
mov
sbb
jnp
pop
int
inc
scas
and
mov
lock
add
scas
ds
shlb
aad
add
mov
inc
sub
push
mov
insl
sarl
dec
mov
je
push
jno
ret
jbe
in
cmp
mov
lea
ret
rcll
incb
jle
jge
sub
pop
popa
in
sahf
enter
sub
sub
faddp
das
pusha
add
aad
in
push
insb
inc
popl
fldcw
rclb
sbb
into
push
sub
outsl
add
lcall
insl
je
sub
clc
int
push
mov
ljmp
adc
lahf
daa
lret
or
push
pop
fcompl
xchg
inc
outsl
and
js
or
nop
adc
dec
jae
fmuls
aas
fnclex
aaa
rcll
inc
and
sub
pop
cmp
shl
push
insb
sub
cltd
nop
sub
dec
and
pop
inc
sub
inc
popl
xchg
cwtl
sub
lods
sub
test
dec
adc
scas
push
aad
clc
filds
fwait
pop
mov
js
orb
fcompl
xchg
jb
jns
xor
outsb
mov
or
imul
inc
pop
sbb
lahf
adc
lret
ljmp
in
xor
repz
mov
xor
add
push
insb
xor
pop
clc
adc
scas
sbb
xchg
filds
int3
imul
sbb
rcl
in
mov
in
pop
repz
js
push
dec
inc
inc
jbe
add
cmc
or
fs
and
mov
xchg
imul
popa
imul
or
bound
mov
andl
push
popl
cld
fimull
mov
lods
divb
icebp
cmpsb
and
outsb
pop
add
pop
iret
insb
shll
les
jno
lds
jecxz
rol
mov
xor
ja
aam
dec
and
fildll
cmpsl
aaa
cmpsb
push
mov
clc
inc
ss
popl
jb
sub
shrb
adc
lahf
add
and
dec
or
fadds
testb
scas
cld
add
push
jbe
jae
in
daa
enter
xor
add
lret
dec
pop
adc
mov
cmp
lcall
loop
cltd
cmp
jbe
dec
push
adc
adc
inc
insl
and
cmpsb
mov
and
lods
xor
push
xchg
dec
sbb
inc
popl
jno
test
mov
aas
push
mov
inc
push
jno
pop
add
cltd
adc
fwait
mov
outsb
pop
sub
fld
pop
cmpsb
xchg
fldenv
aas
fldcw
add
rol
push
icebp
mov
sub
lcall
xor
jno
loope
stos
dec
mov
arpl
sub
jno
xlat
inc
popl
cwtl
les
or
xchg
addr16
push
push
pop
ret
pushf
cmpsb
lds
push
push
xor
push
pop
inc
roll
mov
mov
sbb
or
inc
imul
fs
gs
sub
sbb
adc
data16
and
cs
arpl
shlb
xorl
fnstsw
add
fwait
or
bound
iret
test
xor
mov
fmuls
cli
and
andl
adc
or
aas
rclb
and
aam
mov
xchg
shll
add
add
pop
js
add
and
mov
cli
shlb
adc
popf
out
mov
loope
popl
bound
or
jae
lock
add
mov
stos
repnz
notl
mov
das
addr16
xor
std
mov
dec
adc
mov
in
pop
movsb
dec
pop
add
stc
pop
push
push
mov
inc
cmp
cmc
sahf
push
inc
and
daa
cmovp
add
insb
sub
out
leave
jne
nop
mov
or
cltd
je
into
sub
mov
xor
stc
imul
and
clc
push
es
mov
add
loopne
or
shrb
add
xchg
loopne
dec
sahf
sub
mov
lret
xor
sub
icebp
pushf
jbe
jb
xchg
in
int3
nop
test
pushf
and
inc
add
scas
sub
faddl
inc
or
mov
add
lret
xchg
pop
call
cld
shl
xor
mov
mov
push
xor
test
lcall
imul
hlt
movsl
or
fistps
sbb
cs
add
or
dec
repz
mov
cld
pop
js
popa
push
outsb
add
jo
push
pushf
dec
mov
jg
mov
inc
popl
add
popa
call
mov
jbe
add
imul
insl
pop
outsl
adc
pop
add
mov
add
and
inc
stos
dec
insl
mov
sbb
adc
mov
cwtl
add
adc
leave
les
mov
nop
xchg
arpl
add
and
repz
sarb
cmc
xor
rcrl
xchg
dec
xor
cmp
aad
test
inc
stc
in
ja
cmp
testb
xor
inc
inc
jl
cltd
jns
stos
dec
js
cmp
mov
add
lods
or
jb
cmc
mov
push
in
xchg
push
sarb
mov
out
movsl
iret
inc
outsb
inc
or
lea
stos
xorl
sarb
addr16
push
in
or
mov
rcrb
sbb
push
je
mov
in
xchg
mov
ljmp
pop
pop
call
push
mov
push
push
std
mov
leave
loopne
xchg
icebp
inc
rolb
fs
sahf
lock
jecxz
lret
push
sahf
int3
cmp
int
popa
and
mov
or
fcomp
mov
adc
or
mov
cli
adc
sub
mov
or
negb
iret
loop
in
push
xchg
inc
imul
mov
cmp
out
adc
addr16
and
movsb
mov
out
xlat
loopne
ljmp
lock
sub
xchg
lds
add
jbe
adc
pop
loop
fstpt
push
or
loop
cmp
dec
cmpsb
mov
or
fsubl
adc
add
in
mov
stos
das
call
jge
xor
lods
add
adc
or
jbe
xor
aam
or
pop
popf
cmp
dec
mov
jg
fdivl
xor
fldenv
jp
sub
mov
scas
mov
test
test
jecxz
insb
push
mov
pop
jl
mov
fisttps
rcll
adcb
push
adc
in
mov
add
dec
setge
add
add
push
insb
dec
adc
enter
mov
test
xor
cs
inc
repnz
sbb
aad
inc
mov
dec
push
in
movl
jmp
test
dec
sbb
sbb
sbb
scas
rcrl
jo
xor
leave
mov
test
inc
jbe
push
xor
mov
dec
outsl
or
rclb
mov
mov
and
pushf
mov
sub
movsl
into
and
inc
push
int
dec
add
lds
lret
gs
aaa
sub
ss
scas
sti
push
enter
jae
sbb
std
pop
push
xor
add
dec
hlt
lods
int
push
dec
push
pop
ds
fildll
sbbl
push
roll
cwtl
test
fsubs
push
cmc
aad
lds
xchg
and
mov
inc
mov
and
jge
push
pop
mov
sahf
ret
xchg
xchg
mov
fcoml
mov
loope
leave
inc
arpl
out
push
adc
inc
mov
test
rol
cmpsb
adc
mov
push
stos
sti
mov
adc
jmp
mov
cmpsl
pop
rcrb
xchg
into
lret
ds
xchg
fbld
jle
adc
and
jl
ret
or
mov
xor
lods
in
lods
inc
mov
pop
push
push
add
out
push
push
xchg
push
jae
sti
das
mov
xchg
mov
push
sbb
mov
aad
leave
movsl
rcr
mov
mov
aam
fs
sbb
lahf
addr16
out
push
mov
add
mov
cltd
stos
inc
movl
pushl
mov
lea
jmp
pushf
mov
movl
pushf
push
pushl
pushl
lea
jmp
orb
xor
inc
rolb
xchg
scas
ljmp
sbb
jp
test
pop
pop
lea
or
jmp
cmpsb
mov
pop
imul
sbb
mov
mov
ss
ret
out
scas
pop
int3
es
in
or
dec
mov
push
or
push
mov
aad
sbb
test
pop
scas
xchg
mov
addr16
adc
push
or
inc
mov
mov
cmp
int3
mov
or
push
mov
movsb
repz
xor
mov
ds
jne
adc
jno
mov
scas
xor
loope
inc
lods
and
xchg
adc
lods
out
mov
in
hlt
xchg
mov
fucom
daa
sbbl
shll
loop
aam
inc
mov
cmp
movl
movb
movb
push
movb
lea
jmp
icebp
sub
sbb
mov
dec
adc
ja
adc
jo
jbe
loopne
nop
dec
cltd
comiss
push
jmp
imul
or
push
movsl
js
mov
hlt
repnz
cmp
xorb
ljmp
jne
jle
int
push
add
mov
ret
add
in
inc
jne
mov
jg
andb
popf
int3
inc
lods
jo
or
pop
mov
xorb
stc
scas
mov
int3
jne
mov
hlt
aam
pusha
push
imul
pop
insb
xchg
adc
dec
adc
and
mov
repnz
daa
aaa
mov
cwtl
xchg
xchg
fsubrp
cmp
nop
xlat
addr16
mov
cmp
push
sub
rolb
jge
imul
rorl
mov
movl
pop
cmp
cli
inc
inc
lods
in
pop
data16
rcr
xchg
xchg
outsl
aad
xor
nop
insb
addr16
movsl
add
cld
xchg
xchg
sub
mov
xchg
pop
in
jno
mov
dec
xchg
sub
xchg
adc
xchg
out
enter
dec
or
dec
sbb
mov
mov
mov
in
sbb
mov
and
nop
fdivrl
int
adc
jo
out
arpl
icebp
sbb
stos
fimull
int
ja
mov
fistpll
shrl
ret
bound
addr16
inc
int3
push
ficomps
sbb
pushf
cli
pop
fistpl
add
dec
shll
in
or
clc
sti
mov
cmp
cmp
adc
addr16
push
inc
mov
jb
test
fsubrs
mov
loope
arpl
mov
stos
je
icebp
std
mov
fisttpl
adc
sbb
mov
push
das
arpl
cmc
stos
pusha
xchg
lea
iret
push
lahf
aam
cmp
mov
xchg
lds
mov
jb
test
in
sbb
orl
cli
fbld
add
stc
inc
xchg
inc
mov
shl
icebp
call
icebp
cmp
cmp
fsubs
xchg
mov
lret
mov
lcall
out
cli
adc
into
lahf
in
cmp
movsl
fnstsw
clc
mov
mov
enter
cmpl
xchg
push
lea
cmpsl
in
cmpb
testl
icebp
cmp
test
data16
push
jb
es
inc
mov
cmp
cs
jmp
scas
add
mov
jo
outsl
pop
jo
imul
in
rcr
stos
and
xchg
mov
hlt
aam
je
lock
repnz
mov
pop
outsl
xorb
mov
into
mov
pop
or
pushf
cld
cmpsb
in
mov
ljmp
push
or
shrl
mov
and
mov
push
imul
cmpsl
dec
cltd
cmp
jle
inc
data16
leave
std
push
in
ficomps
xchg
ja
leave
je
ret
pop
mov
dec
push
add
dec
lahf
dec
outsb
subl
sub
inc
lods
jb
xchg
pop
add
lret
dec
adc
mov
out
in
dec
xchg
mov
hlt
mov
lcall
mov
inc
cld
aas
hlt
jecxz
sub
gs
in
mov
add
idivl
dec
jl
add
mov
andl
cwtl
rclb
xchg
cmp
mov
mov
movsl
push
or
cli
ret
in
and
and
lret
sbbb
jle
loop
in
mov
test
out
push
repz
sti
test
add
popl
idivl
mov
shr
inc
sbb
mov
jb
mov
sbb
scas
aaa
outsb
lret
cmp
popa
inc
lods
push
dec
out
aad
jae
decl
inc
ss
push
es
pusha
fsubl
popa
cs
jne
jle
and
and
aas
jno
push
mov
mov
inc
mov
or
add
les
xor
add
scas
and
dec
sbb
into
in
xchg
lea
sarb
stc
and
pop
imul
aad
clc
sub
jmp
xchg
cmp
cs
cmpsl
push
dec
push
jl
test
adc
inc
mov
xchg
mov
movl
pusha
pushf
lea
jmp
shlb
outsb
ret
leave
in
aam
fcoml
pop
xchg
decl
push
lock
mov
xchg
mov
pushf
cmc
shrl
lods
adc
push
sub
mov
push
or
sub
subb
frstor
insb
mov
sub
adc
xchg
pusha
xchg
jno
mov
jg
fnstcw
adc
or
out
pop
mov
iret
inc
push
outsl
sub
pop
add
sub
in
add
lret
jg
cwtl
in
mov
inc
in
sbb
nop
jge
mov
and
xor
mov
imul
mov
mov
mov
and
popf
add
mov
mov
ss
lds
inc
mov
dec
jp
pushl
movl
movb
lea
jg
pushf
mov
movl
pushf
lea
jmp
push
jmp
nop
out
add
sub
mov
dec
lret
xor
orl
adc
and
jno
push
cmp
inc
mov
lret
stc
mov
fisubrl
inc
add
xchg
ret
popa
cmp
mov
inc
pop
movsl
pop
mov
test
test
out
bound
cmp
ja
lahf
push
cmp
dec
add
adc
call
repz
pop
add
enter
cmp
lcall
ficomps
dec
sahf
mov
inc
mov
mov
dec
mov
jb
push
adc
insb
es
dec
sbb
inc
mov
data16
dec
mov
rcr
shl
daa
jge
pop
adc
scas
sti
mov
mov
dec
dec
push
dec
outsb
loop
pop
sub
mov
mov
adc
pushf
je
mov
sub
or
inc
inc
mov
and
pusha
cmc
fcom
loopne
xor
cwtl
cmp
pop
xchg
repnz
and
fwait
cmp
lds
adc
push
fnstcw
insl
jne
pop
inc
or
adc
ffree
push
lea
jl
mov
fs
sbb
mov
pop
out
push
arpl
mov
clc
cmp
pop
jp
in
idivb
xchg
addr16
pop
arpl
fdivrl
push
in
fcoms
cmpsb
dec
lds
mov
push
mov
in
cmpsl
lods
pop
mov
sub
push
or
xor
adc
cmp
inc
sti
fcoml
sbbl
fmull
shl
fs
jbe
mov
testb
jns
out
arpl
fmuls
loope
outsb
mov
aam
out
fldz
push
cmp
stc
or
push
jae
mov
arpl
fsubr
cmpsl
aaa
add
mov
ljmp
shlb
outsl
xchg
addb
and
leave
and
int3
sarl
xor
subb
addr16
dec
adc
mov
dec
mov
ret
xlat
dec
pop
fldcw
xor
mov
push
cmp
out
pushf
add
stos
push
mov
scas
push
leave
push
cmp
shll
lea
sbb
test
out
in
lock
loope
hlt
mov
or
addb
cmp
mov
aaa
subb
dec
fwait
and
or
test
jg
inc
aam
outsb
leave
cmp
mull
mov
xor
or
push
xor
push
out
pop
and
xchg
ja
and
daa
lds
scas
cmc
mov
mov
lods
clc
dec
das
xchg
std
mov
push
add
add
lock
jp
mov
adc
xchg
int3
mov
ss
sub
sbb
sbb
fisttpll
or
sbb
push
xor
arpl
push
jp
push
test
push
push
cmpsl
addr16
imul
stc
sub
mov
sub
inc
and
mov
vpmulhw
add
ret
mov
sub
adc
inc
cmp
nop
clc
mov
or
mov
xchg
repnz
cli
push
mov
jne
inc
pop
mov
test
mov
in
and
push
inc
shlb
push
cmc
jae
mov
push
push
mov
loope
leave
das
ret
decb
dec
es
loopne
xchg
iret
lahf
test
loopne
or
xlat
mov
arpl
or
lods
cld
mov
roll
inc
mov
inc
inc
test
or
fistpl
out
or
cmp
gs
jo
or
in
mov
cli
flds
dec
sub
sbb
mov
dec
js
loop
adc
sbb
mov
push
lahf
sub
jge
or
mov
mov
cmp
movsl
enter
cmp
inc
mov
test
push
sbb
and
push
insb
inc
ret
mov
cli
xchg
jg
cltd
repz
xchg
mov
jns
xchg
xchg
inc
add
jo
out
xchg
rcrl
and
jnp
inc
xchg
js
fisubrs
mov
jno
cmp
cmp
or
sbbb
hlt
mov
mov
mov
lock
xor
sbbl
xor
sub
add
arpl
outsl
and
js
lcall
pusha
add
adc
mov
push
in
cmp
jbe
aaa
mov
xchg
icebp
xchg
ret
sahf
in
sbb
movsl
xor
test
inc
je
fwait
jno
or
inc
mov
jl
popf
aad
lcall
or
js
fnsave
stos
mov
inc
inc
pop
hlt
inc
jne
dec
test
fs
rorb
lock
ljmp
stos
mov
out
sbb
cmp
ret
xchg
incb
ja
mov
push
bound
mulb
mov
mulb
loopne
sahf
cmc
fistpl
sbb
push
stc
dec
cli
add
mov
lret
scas
ret
dec
sbb
lock
movl
shrb
sbb
sub
sub
inc
out
das
pminub
mov
cli
je
adc
or
inc
aas
pop
inc
adc
mov
jbe
mov
adcb
or
imul
fistpl
inc
mov
sub
pushf
movl
pusha
movl
pushf
pusha
movw
pushf
lea
jmp
sbbl
push
xchg
into
mov
and
dec
ja
ret
ljmp
into
dec
hlt
mov
add
mov
or
or
ljmp
cmc
mov
mov
mov
sub
jb
sbb
sub
xor
mov
fmul
out
or
rcrb
in
jmp
aam
je
pop
pop
out
shlb
pusha
aas
bound
pop
and
sbb
jle
jae
pop
lock
mov
ljmp
jns
add
rolb
mov
mov
stos
popf
imul
dec
imul
mov
in
test
cmp
sub
outsl
xchg
in
in
cmpsl
push
call
arpl
pop
sbb
cmpsb
sub
push
stc
push
sbb
mov
jle
ret
add
push
iret
cld
ret
xorl
sub
mov
sarl
inc
cld
cltd
mov
xchg
ret
cmpsb
int
push
roll
xor
out
loope
and
test
rcr
repnz
jle
mov
aas
hlt
lods
mov
mov
pop
adc
out
and
xor
push
sub
mov
add
xchg
mov
lahf
insl
add
loope
adc
xor
clc
xlat
mov
mov
iret
mov
rclb
cmp
hlt
imul
mov
push
dec
cld
lahf
lret
cwtl
ja
mov
clc
fs
out
sub
and
int
sbb
daa
out
jno
mov
pop
ljmp
push
mov
mov
cmp
ja
pop
cmpb
mov
add
test
jb
pop
jbe,pt
mov
loopne
sti
mov
or
push
add
in
adc
and
in
lahf
lods
lods
push
cmpsb
lret
fwait
mov
mov
mov
dec
xlat
push
mov
fs
mov
add
xchg
cmpsl
pusha
jge
pop
sub
into
arpl
stos
je
hlt
fists
roll
push
test
mov
mov
pusha
shlb
or
repz
leave
cld
mov
push
divl
jno
mov
add
jo
pushf
xor
out
inc
in
bound
mov
sub
insl
dec
jne
xor
xor
cmp
adc
mov
nop
stos
jmp
div
push
sub
iret
push
lcall
ret
filds
jg
cmpsb
pop
inc
pop
outsl
fcmovnb
js
jns
mov
hlt
push
push
pop
push
test
imul
out
andl
xchg
adc
insl
dec
adc
sub
jle
fistpll
xchg
int3
jl
test
mov
mov
mov
and
roll
add
rclb
adc
mov
xor
pusha
cmpsl
jns
aaa
adc
push
jmp
rcl
mov
pop
insb
sahf
in
sarl
movsb
repnz
js
movsb
pop
stos
adc
jge
fldt
fbstp
ja
aas
je
jae
sahf
add
rcrb
adc
nop
fcmovb
adc
fdivs
movsb
and
pop
and
inc
mov
sbb
pop
jmp
rcrb
xlat
push
sub
pop
inc
out
pop
push
pop
inc
fdivs
sub
push
sbb
xchg
and
shlb
inc
mov
insl
add
push
cli
sbb
jp
pop
dec
int
stc
sbb
xchg
and
lcall
xchg
mov
outsb
in
sti
cmpsl
int
stos
mov
out
add
or
std
push
dec
xchg
cwtl
sti
cmc
pop
inc
cmpsl
cmc
aaa
int3
sahf
inc
cmp
ret
xchg
push
inc
mov
in
aaa
mov
mul
mov
mov
cmp
mov
inc
fiadds
shr
push
lret
push
inc
or
cmp
int
mov
jge
jbe
or
mov
sbbl
add
imul
sbb
mov
and
mov
and
dec
sti
enter
stc
xchg
movb
lea
jmp
or
sbb
and
pop
mov
mov
repz
idivb
or
pop
pop
mov
fdivr
mov
arpl
stos
or
jne
mov
xchg
jo
mov
or
mov
inc
sub
loop
ret
jbe
lcall
dec
sub
scas
xlat
mov
jg
xchg
jno
mov
out
cmp
sub
out
xlat
mov
test
xchg
repnz
jmp
nop
aad
mov
dec
adc
sub
cmp
add
aaa
mov
jge
jecxz
mov
movsb
jo
mov
mov
mov
adc
stos
jg
into
or
cmp
and
lods
sub
adc
iret
push
sub
xor
push
je
push
jle
je
adc
ds
rclb
setae
add
dec
mov
adc
aaa
sahf
cwtl
push
pop
adc
sbbb
sub
sub
js
mov
pop
mov
sti
fwait
call
sbb
adc
movsb
jb
jg
cmp
cmp
addr16
ret
mov
jo
leave
cmpb
jp
pop
or
fidivs
stc
fsubs
xor
movsl
add
scas
imul
stos
mov
sarl
test
cmp
xchg
and
insb
lret
sbb
add
sbb
aaa
push
mov
lret
fs
sbb
sbb
hlt
ret
sub
xchg
add
fmuls
mov
ffree
daa
fadds
filds
loopne
and
and
jae
leave
pop
cs
imul
and
and
cmp
lock
nop
and
cs
insl
pop
jmp
sbb
lods
adc
into
dec
add
cltd
and
movsl
dec
lea
adc
mov
inc
les
pusha
add
inc
mov
jo
pop
mov
repz
lods
in
or
mov
hlt
loopne
test
or
mov
imul
mov
iret
std
aas
pop
push
ret
adc
sub
pop
repnz
push
mov
mull
scas
adc
repz
xchg
xchg
aam
jge
mov
jo
popa
inc
sbb
ficomps
cmc
in
hlt
rorl
mov
scas
fwait
sub
je
repz
jle
mov
leave
rorb
mov
fsubr
cmpsl
aas
ja
mov
jo
inc
scas
push
pop
popa
dec
add
pop
xchg
dec
sbb
sbb
xchg
enter
fdivrp
je
imul
mov
gs
test
in
dec
pop
jl
inc
fdivr
lahf
sbb
fldl
scas
fisubrs
popa
scas
dec
mov
js
jmp
int3
sbb
int
daa
into
jbe
push
shll
pop
jbe
mov
pop
dec
lcall
clc
lods
inc
mov
adc
jnp
xorb
push
out
aad
enter
sbb
out
mov
les
call
or
lret
outsb
ss
test
in
push
cmp
mov
popf
mov
and
aad
mov
add
cmp
sub
push
insb
out
cwtl
iret
jnp
cmpsb
bnd
cs
rol
addr16
shl
test
outsl
sbb
pop
psubd
mov
aad
arpl
mov
push
jo
pop
cmpsb
dec
mov
and
ljmp
stos
jecxz
push
lret
or
xor
jl
pop
mov
jmp
out
movsb
and
or
cmpsl
std
rorb
pop
ljmp
jbe
aas
mov
popf
mov
xor
ret
dec
and
dec
int
mov
movsb
and
bound
sub
inc
sti
test
push
cltd
jecxz
mov
arpl
pop
and
dec
ja
cwtl
fistl
xor
and
pop
scas
mov
add
loopne
mov
mov
inc
xor
imul
jg
stc
pop
add
popf
fidivrl
xchg
jmp
xchg
in
scas
mov
xor
inc
sbb
xchg
and
jo
mov
in
xchg
andl
mov
sbb
out
mov
les
push
lods
sti
jp
pop
xchg
inc
bound
jle
mov
std
imul
inc
popa
adc
mov
push
pop
push
add
aaa
pop
sbb
sub
ret
inc
sub
popf
inc
mov
sub
sub
sub
add
dec
loopne
ljmp
jg
push
sbb
mov
mov
dec
iret
call
and
aad
setg
in
icebp
fcoms
adcb
fildll
mov
sub
add
sbb
popf
icebp
xchg
divl
sub
fs
mov
mov
dec
movb
pushf
movl
push
pushf
pushf
pushf
lea
jmp
pop
test
scas
bound
and
cmp
lock
mov
adc
mov
imulb
xor
xor
jl
outsl
fcmovne
jl
and
push
test
add
aas
xchg
xlat
push
loop
or
jno
shl
pop
pop
insl
fstpt
fxtract
fnstcw
rorb
or
out
sbb
mov
subl
les
das
push
pop
mov
cmp
scas
mov
dec
int3
jne
inc
or
inc
mov
mov
pop
std
std
mov
xchg
bound
push
jbe
mov
insb
add
pop
imul
sbbb
insl
jge
jns
xchg
test
inc
iret
and
aam
pop
int
mov
sub
negl
add
sbb
inc
shr
xchg
push
xchg
mov
call
enter
faddl
pusha
ljmp
pop
add
sbb
jl
movsl
rcrl
sahf
push
ja
sbb
xchg
test
pop
pop
jo
cld
adc
sub
out
adc
jp
enter
outsl
xor
lsl
add
pop
inc
roll
cmpsb
cli
test
stos
or
mov
pusha
push
pop
rorl
mov
or
test
jl
xchg
adc
inc
inc
mov
add
pop
daa
fcoms
sarb
xchg
insb
sarl
sbb
stc
arpl
fs
ja
pop
mov
fwait
mov
mov
xorl
mov
inc
xchg
mov
leave
mov
xor
inc
sahf
push
sub
iret
push
cmpsl
xor
or
or
dec
xchg
mov
xor
jecxz
test
mov
cmp
inc
mov
fadd
movl
call
movl
push
mov
pushl
push
lea
jmp
jmp
xchg
mov
mov
add
mov
pop
loope
or
adc
inc
xchg
jge
test
and
je
pop
inc
pop
xchg
inc
pop
cmp
jb
jno
outsb
xlat
mov
inc
adc
xor
mov
adc
rcrl
xor
and
subl
shll
pushf
lds
dec
outsl
in
xor
outsl
pop
pop
jg
add
mov
test
mov
lcall
xlat
out
pop
cmp
dec
or
sub
sub
stos
adc
sub
mov
icebp
leave
push
enter
icebp
stos
ljmp
and
dec
jnp
aaa
cmc
inc
dec
push
fmuls
fidivs
mov
xor
enter
push
inc
das
jnp
xchg
es
cld
sahf
clc
mov
mov
xchg
jecxz
cmp
mov
cwtl
fwait
jp
cmp
add
mov
mov
outsb
adc
mov
sub
inc
data16
or
push
push
cmpsb
dec
mov
sub
loop
xor
in
or
fdivrs
and
je
outsl
or
out
xchg
hlt
enter
inc
mov
shll
loop
fmulp
pushl
cmp
arpl
dec
dec
cmp
mov
adc
es
nop
jb
cwtl
jne
mov
cmp
cmpsb
sar
test
add
xorb
sub
lods
mov
jp
negl
lcall
xchg
imul
lods
std
popa
jno
lcall
adc
inc
mov
jae
insl
mov
and
or
aam
mov
pop
xlat
out
push
sbb
push
jp
loope
cli
mov
adc
inc
mov
jnp
mov
push
push
add
inc
and
pop
sbb
add
push
pushf
movb
lea
jmp
aas
adc
popa
pop
or
rolb
cmpsl
rorl
popa
mov
pop
dec
or
dec
push
cli
xchg
insl
rcr
aam
sub
inc
test
lds
inc
xchg
adc
pop
les
dec
movsb
rclb
imul
cmpl
mov
push
pusha
call
inc
add
sbb
int3
cmp
mov
ljmp
int3
in
or
icebp
pop
out
sub
dec
popf
push
jae
jno
xlat
add
dec
ret
adc
or
das
popf
jns
and
adc
sbb
ss
sub
xchg
leave
rorb
cmpb
test
dec
mov
les
sti
sub
mov
sub
adc
inc
mov
dec
adc
dec
adc
int
sbb
dec
push
les
fisubrl
or
packuswb
gs
push
mov
popf
sbb
and
xchg
cbtw
shl
insl
push
pushf
cmp
lds
adc
cli
mov
test
mov
mov
ljmp
xchg
push
fcom
mov
icebp
jg
popf
testb
or
xlat
data16
stos
pop
pushf
lods
mov
test
imul
sub
jo
push
addr16
jecxz
or
cs
jp
fisubrs
leave
push
or
ret
nop
mov
dec
leave
mov
aam
popf
gs
mov
push
adc
push
gs
xchg
cmovb
out
mov
addr16
bound
out
fucomi
scas
int3
loopne
sbb
xchg
push
pushf
stc
mov
inc
pop
mov
gs
add
out
cmp
cmp
repnz
mov
call
shrb
pop
std
jmp
lret
rorl
imul
xor
mov
jo
pop
or
cltd
fsubrl
lock
dec
repz
sbb
rol
and
pop
add
push
daa
inc
add
jne
ljmp
scas
call
push
cmpsl
divl
and
xor
push
loop
cmp
sbb
and
xchg
push
inc
mov
jmp
sub
movl
pushf
mov
lea
jmp
mov
or
dec
icebp
jl
sub
fdivrl
xchg
movsl
clc
pushf
repz
andb
outsl
leave
out
mov
or
ljmp
xchg
jnp
xchg
out
mov
leave
dec
add
mov
xor
nop
inc
and
loope
sbb
or
inc
movl
add
ret
pushf
mov
stc
inc
rorb
addr16
jp
les
jg
dec
les
out
push
jae
adc
imul
dec
inc
add
pop
bound
xchg
sbb
inc
mov
mov
enter
lods
push
jno
cmp
push
testb
fsubrs
test
pop
insb
in
mov
loop
push
cli
mov
or
inc
jecxz
mov
clc
adc
fcmovnu
movsb
es
add
std
pop
jge
mov
aam
cmp
sub
popa
decb
lret
sbb
insb
addl
mov
in
dec
test
mov
mov
pop
rorl
or
out
lret
and
stos
pop
fdivr
sbb
out
fwait
scas
mov
push
pop
push
in
xchg
in
push
ret
jne
cmp
sub
push
fsubs
fsubrs
pop
cld
mov
movsb
testb
push
sub
mov
xchg
mov
jp
cmp
in
xchg
leave
xchg
jmp
mov
xor
or
lahf
dec
mov
mov
push
out
les
jne
mov
notb
inc
aam
jmp
ret
inc
pop
inc
std
mov
pop
cmp
inc
mov
jne
and
cmp
sub
and
jo
in
call
frstpm(287
cmpsl
pop
xchg
adc
aam
addl
sub
sbb
fcomi
adc
repnz
pop
iret
sbb
insl
fimuls
lds
outsl
sub
andb
lea
adc
push
adc
jo
mov
stc
jns
stc
mov
les
pop
jns
inc
sbb
jge
cli
popa
sbb
sbb
mov
xor
sub
dec
and
push
xor
inc
mov
xchg
mov
xor
shll
sbb
mov
push
aam
popa
sbb
pminsw
mov
aas
jo
sbb
mov
jne
out
sub
cmp
mov
rclb
mov
pushl
std
fwait
push
xchg
mov
jns
gs
inc
negb
mov
out
ljmp
daa
xchg
pusha
loopne
mov
add
jno
add
mov
adc
pop
xor
xor
iret
pop
mov
adc
dec
inc
fisubs
aam
pop
lret
ljmp
test
insl
cltd
adc
inc
add
push
inc
ss
je
mov
pushf
movsl
lret
call
enter
rorb
push
jge
into
notl
ss
adc
xchg
fildl
enter
xchg
rorb
cmp
push
jnp
hlt
sarb
or
and
ds
or
mov
enter
cli
shlb
add
xor
iret
mov
inc
mov
idivl
xor
stos
or
ds
adc
cmc
scas
ljmp
dec
enter
mov
add
data16
test
or
ss
lock
fwait
jae
pop
femms
sbb
repnz
mov
jb
in
shrl
inc
aas
jne
push
jne
sub
add
imul
sbb
pop
mov
test
scas
adc
inc
mov
mov
push
icebp
mov
outsb
sbb
sub
repz
sub
cli
push
je
mov
test
jge
mov
and
pusha
add
movb
stos
pop
pop
sbb
pop
inc
or
scas
cmp
push
outsl
rolb
stos
push
dec
stos
clc
int3
push
push
dec
and
mov
ss
mov
aaa
push
mov
sti
jb
xor
mov
jecxz
add
cwtl
sub
xchg
repnz
jne
and
aas
xor
jmp
mov
aas
scas
cmp
lahf
into
sbbb
dec
imul
mov
pop
cmc
shlb
mov
imul
sub
cmp
inc
mov
xchg
pushf
rol
inc
and
push
jp
sbb
xor
pushl
lea
jmp
call
vmread
icebp
out
mov
data16
in
mov
push
inc
mov
sub
xchg
inc
dec
push
mov
ficompl
dec
mov
sub
inc
mov
pop
imull
ja
adc
inc
iret
rcll
push
adc
inc
lret
push
fistl
lds
push
repnz
and
je
jp
incb
clc
js
aad
test
fstps
jp
sbb
jp
adc
aaa
sti
out
test
inc
lds
lea
lahf
xor
and
repz
jnp
mov
adc
dec
outsl
jecxz
pop
cmp
inc
cmp
sbb
xor
cld
lds
fnstcw
sti
jg
and
adc
mov
mov
test
mov
test
xchg
jnp
ds
pop
pop
jne
in
daa
push
add
mov
adc
jno
dec
aas
mov
cmp
xchg
fcomps
lcall
and
push
jo
mov
push
insl
insb
jbe
pop
xchg
loope
xchg
xchg
aad
cltd
and
mov
jbe,pt
fidivl
push
popa
rcl
fistps
jge
int3
movsb
test
mov
xor
sub
out
insb
mov
pop
pushf
and
pop
mov
push
inc
scas
cmpsl
mov
mov
lods
nop
gs
lcall
daa
imul
sbbl
stc
xor
xchg
push
data16
mov
ja
aam
bndstx
mov
sbb
xchg
push
dec
fiadds
idivl
pusha
dec
sti
push
movb
call
mov
xchg
test
jns
jg
mov
int3
jb
pop
or
imul
cltd
in
sub
jmp
mov
aas
test
sbb
adc
jge
rolb
cmp
add
cmpsl
adc
or
movsb
test
cmpsb
sarb
and
loope
cmp
xchg
daa
cmp
stc
add
xor
hlt
adc
lods
mov
push
inc
enter
daa
xor
inc
addb
dec
subb
enter
adc
pop
xchg
loopne
push
nop
push
mov
mov
stos
jnp
icebp
movl
fs
lds
iret
fisttpl
xor
pop
pop
insb
xor
cmp
nop
cmc
stos
pop
pminsw
or
pop
sbb
fadd
jbe
cld
push
aaa
cmc
mov
std
mov
jl
test
imul
and
pop
mov
or
sbb
push
xor
fnstcw
iret
jl
cmp
push
dec
leave
xchg
and
leave
xchg
cmp
mov
mov
or
subb
xlat
fsubrs
clc
testb
xor
cmc
xor
pop
pop
or
lods
xchg
add
jno
dec
fdivl
incl
popa
and
out
push
jno
xchg
icebp
push
mov
mov
cltd
dec
sub
stc
arpl
mov
sti
jns
and
fsubrl
imul
arpl
lods
js
fstps
je
xor
stos
add
push
jb
push
fbld
cmpsb
jbe
sub
stos
sahf
push
repnz
fwait
jb
aas
jns
push
sbbl
fstl
and
movsb
in
jecxz
std
mov
lret
fbld
jle
pop
jle
stos
xor
hlt
xlat
stos
cmp
jge
movsb
and
in
call
jg
mov
js
mov
adc
mov
lods
mov
jmp
loopne
mov
outsb
push
dec
pop
add
xchg
pop
inc
cmp
mov
aaa
and
enter
fimull
inc
push
pop
in
lahf
adc
mov
lret
xchg
lret
cltd
ret
mov
sbb
inc
mov
test
jmp
add
aad
pop
loope
fdivrs
ret
movsb
sbb
repz
mov
dec
pop
iret
jg
mov
cmc
lret
sub
sahf
js
xor
adc
rcl
addr16
insl
rcrl
adc
aad
push
xchg
inc
inc
ret
insl
xor
popl
adcb
pop
xorb
sbb
mov
pop
mov
jo
fstpt
and
repnz
mov
dec
xchg
test
xlat
mov
cli
push
pop
shlb
xchg
icebp
mov
popa
adc
lea
jmp
adc
int3
fnsave
and
mov
nop
mov
xchg
cmc
jg
int
dec
push
jmp
and
clc
mov
xchg
xlat
ljmp
pop
sbbl
pushf
test
pop
syscall
and
mov
ljmp
pop
jle
pop
add
dec
or
mov
aam
je
adc
iret
xchg
icebp
mov
out
mov
sub
shll
clc
in
xchg
les
icebp
inc
push
mov
sub
lods
mov
test
sbb
xor
icebp
inc
jge
in
adc
mov
jae
dec
add
fmul
sbb
mov
mov
popa
xor
push
sbb
pop
inc
mov
aad
div
jbe
mov
sbb
movsb
jge
push
pusha
sarl
xchg
frstor
inc
in
inc
and
loope
push
aaa
popa
pop
cmp
push
call
xor
sbb
cmp
push
push
sbb
mov
adc
sub
sub
incl
push
dec
sbb
hlt
mov
lods
icebp
sbb
jl
test
mov
sbb
popa
rorb
cmc
mov
addb
test
icebp
push
mov
mov
pop
jge
mov
call
mov
add
xor
mov
call
dec
daa
cmc
lret
jns
pop
shlb
ss
push
pusha
gs
jno
xchg
mov
push
push
inc
cmp
push
mov
ss
mov
lcall
xorl
fs
scas
movl
pushf
pushf
lea
jmp
push
mov
pop
aaa
pushw
lret
push
push
pop
adc
hlt
xchg
mov
bnd
fwait
or
jnp
shlb
test
out
mov
push
loop
inc
lcall
clc
adc
pop
and
fistl
or
push
les
loopne
dec
inc
sti
cmp
cmpsl
lds
mov
hlt
stos
mov
ja
mov
in
push
mov
scas
test
lods
dec
jae
gs
inc
mov
out
push
or
mov
mov
mov
inc
mov
lea
js
pushf
movl
pushf
lea
jmp
and
lock
lahf
and
mov
xor
mov
mov
andl
ljmp
xorl
test
incl
leave
rclb
imul
dec
cmpsb
pop
fwait
dec
xchg
mov
inc
cmp
test
dec
mov
push
cld
test
stc
fdivrl
adc
inc
or
mov
insl
mov
sub
pop
neg
cld
mov
arpl
xchg
and
pusha
cmp
insl
dec
popa
adc
push
lea
sbb
xchg
xor
iret
and
mov
and
repnz
mov
jae
cs
movl
jmp
pushf
xchg
xor
xor
testl
and
stos
mov
out
add
push
dec
sbb
mov
push
popf
ret
jo
cltd
cmp
mov
push
popf
data16
popa
mov
sub
subl
adc
cmp
cmp
xchg
jl
nop
into
sti
sahf
test
inc
pop
fs
jmp
or
xor
cmpb
push
sbb
repnz
pop
mov
jnp
pop
or
push
cwtl
inc
mov
movsl
mov
pop
xchg
inc
nop
andb
xor
push
pop
mov
cmpsb
fiadds
push
jbe
xchg
fsubrs
out
add
mov
inc
fdivs
lcall
lret
stos
insb
in
mul
sbb
ficoms
add
ficomps
inc
loopne
mov
push
pop
lock
and
shrb
insb
xor
packssdw
push
mov
stos
icebp
inc
aam
push
sub
push
jno
adcl
sub
bound
push
fsubrs
cmp
push
sub
jg
push
outsb
jb
lret
push
pop
popa
push
xchg
ss
pop
lahf
aas
fwait
out
sbb
hlt
mov
mov
xchg
xor
sub
lahf
hlt
outsl
fadds
hlt
jo
and
icebp
or
gs
pop
lock
adc
cmp
rolb
ret
movl
movb
pushf
lea
jmp
mov
scas
jl
sub
pushf
and
pushw
xchg
int
in
lret
or
js
mov
add
pushf
xchg
ret
push
mov
sub
and
mov
adc
lds
xor
mov
and
dec
in
clc
fcmovbe
mov
sbb
mov
insb
ds
xchg
push
inc
mov
ljmp
shll
jp
or
dec
repz
cmp
shl
add
push
and
ss
mov
addr16
int3
cmpsw
inc
out
in
test
pusha
in
sbb
mov
popf
dec
outsb
rcll
imul
or
xchg
xlat
lock
xchg
and
push
outsl
ljmp
jle
push
cmpsl
pop
xor
lahf
lds
cmp
mov
into
mov
out
adc
mov
inc
ljmp
push
mov
lret
imul
inc
dec
push
repz
pop
mov
jae
clc
popa
mov
fld
bound
dec
movsb
adcl
mov
xchg
xchg
rolb
xchg
mov
je
jecxz
fwait
add
pop
mov
fs
inc
mov
lcall
dec
aad
dec
mov
clc
popa
sbb
jae
mov
test
jne
dec
js
xor
inc
cmpsl
cmc
out
test
decb
mov
cmp
add
in
dec
insl
mov
and
aaa
xor
xchg
popa
inc
hlt
push
mov
adc
out
jae
mov
hlt
aas
test
dec
mov
mov
pop
adc
testb
adc
leave
xchg
daa
pop
xor
mov
jmp
btc
dec
mov
jg
pop
cmc
mov
inc
insb
push
mov
dec
out
into
out
xor
je
dec
cmp
clc
or
mov
adc
inc
pop
ja
mov
xchg
mov
jmp
adc
mov
iret
and
fcmovb
and
lods
out
mov
nop
cld
out
or
add
stos
in
pushf
sbb
sbb
and
cli
lcall
out
aam
pusha
gs
or
pop
xor
mov
jne
jne
xor
pushf
movl
pushl
movw
pushf
movl
pusha
push
lea
jmp
stc
pop
mov
and
pushf
int3
mov
ljmp
jae
cltd
pop
sbb
sahf
xor
leave
dec
sbb
mov
inc
adc
hlt
popa
add
es
pop
lcall
cmp
or
push
adc
popa
xchg
push
sub
ds
xor
mov
outsb
xor
mov
mov
les
adc
inc
sub
mov
imul
cmp
int
cmp
mov
adc
add
or
je
adc
repz
inc
push
and
jmp
mov
cmp
pop
stos
std
push
adc
rorl
movsl
pop
insb
jl
mov
mov
leave
push
jnp
pusha
adc
enter
shrb
sbb
cmp
cmp
test
pop
inc
jnp
std
dec
mov
sbb
push
aas
roll
lret
xchg
mov
push
jns
pop
pop
scas
je
push
scas
mov
mov
xchg
into
stos
in
mov
mov
mov
mov
dec
mov
loope
xor
xchg
rclb
cmpl
movsb
loope
jge
cmpsl
add
paddusw
xchg
subl
es
loope
pushf
outsb
test
stos
pop
sbb
sbb
add
mov
dec
cmc
mov
sbb
loope
les
icebp
inc
mov
sub
in
mov
lret
inc
insl
lea
jae
push
call
mov
push
pop
xor
int
push
fnstsw
out
xchg
mov
aam
sbb
leave
mov
pop
jle
add
lds
stos
mov
dec
shrl
jnp
xlat
rol
adc
pop
cmp
pop
cld
adc
and
gs
orl
mov
xor
jo
inc
aad
das
fwait
lds
jns
test
data16
dec
push
iret
jo
test
bound
adc
pop
sbb
adc
add
insl
lahf
mov
aam
cmp
pop
sarb
int
loope
aas
mov
or
rcrb
in
stc
sarb
sbb
sub
jg
cwtl
cmp
xlat
xchg
pushf
loopne
push
pusha
lods
cli
sbb
inc
icebp
push
push
fwait
rorb
push
cmp
rclb
mov
push
sub
aas
es
dec
mov
loope
inc
mov
lret
or
js
inc
sbb
jge
inc
mov
stos
fnstcw
mov
push
xchg
aas
add
mov
js
pop
xor
or
icebp
rorb
movsb
xchg
and
std
inc
stc
fidivrl
inc
xchg
sub
mov
mov
in
out
outsb
out
out
mov
mov
mov
shll
stos
sub
mov
loope
mov
adc
icebp
inc
mov
jb
xchg
mov
in
mov
add
cmp
out
aam
mov
mov
mov
push
pop
fisubl
mov
xor
test
mov
mov
in
xchg
frstor
cld
and
push
js
sbb
cmp
leave
mov
xor
insb
mov
cmc
imul
push
out
pop
mov
loop
mov
outsl
jg
push
lods
cmp
rolb
jo
std
adc
sub
mov
mov
xor
xor
sahf
adc
and
pusha
js
cwtl
add
mov
xor
in
subps
lret
test
or
lods
cmp
inc
pop
rclb
sti
inc
mov
mov
push
push
lods
stc
push
dec
scas
nop
dec
sbb
jmp
cmp
push
xlat
icebp
movsl
mov
xchg
mov
rol
into
or
es
mov
adc
les
dec
jg
xchg
mov
mov
pop
pop
cmp
xchg
xor
sbb
loopne
roll
xor
or
andb
cmp
rorb
push
pop
lock
cltd
aad
jns
mov
cli
cmp
jmp
add
mov
sbb
outsb
or
xor
dec
in
pusha
pop
arpl
dec
loopne
jp
adc
shrl
aaa
push
inc
testb
inc
leave
pushf
sbb
subb
sub
cs
pushl
add
popa
adc
mov
ljmp
push
adc
inc
mov
mov
pop
lods
or
adc
mov
imul
js
mov
sbb
inc
add
dec
jp
mov
int3
add
push
inc
arpl
or
outsb
add
repz
icebp
popa
test
mov
imul
rorl
mov
push
inc
loopne
pop
xchg
dec
xchg
je
lea
pusha
sar
sub
lds
pusha
or
adc
sub
jmp
aam
inc
int
cli
nop
fbld
daa
jg
dec
cld
cltd
add
sahf
shl
pop
pop
mov
in
in
sbb
into
movsb
call
add
das
dec
xorb
mov
jbe
lods
sahf
dec
push
out
aad
fsubl
jge
addr16
xor
inc
mov
pushf
rorb
shrl
sub
or
pop
mov
negb
adc
fiadds
push
xor
jecxz
adc
mov
adc
adc
xor
sti
popf
ret
xchg
mov
out
xor
mov
in
mov
cmpb
dec
cmpsl
or
cmp
fisubl
inc
pop
dec
and
in
xchg
lcall
push
fdivrl
shrl
sub
popf
adc
mov
popa
outsb
cmp
xor
lods
mov
es
inc
push
lods
fisttpl
jae
pushl
dec
lret
push
and
sub
cmpsl
fistps
push
push
stc
stc
xor
mov
insl
push
jnp
fdivrl
push
cld
mov
aad
inc
or
xchg
xlat
jp
jmp
movsl
dec
int3
sarb
fwait
adc
pop
movsl
addb
test
push
push
dec
out
add
mov
inc
lods
xchg
pop
add
xchg
out
inc
cmpb
sbb
inc
sbb
insb
sub
xor
pop
popa
mov
push
lret
aas
fbld
subps
add
pop
ret
idivb
push
dec
adcl
scas
or
pop
cmpb
adc
out
inc
ja
adc
mov
movsb
bound
xlat
stos
ret
sub
bound
cld
cmc
lods
sbb
movnti
adc
push
cmp
outsb
pop
ficoms
push
add
xor
sbb
mov
clc
int
rorl
scas
outsl
stos
or
in
cmc
adc
jecxz
push
jo
shlb
push
jmp
loop
jb
lds
sub
mov
arpl
xor
fidivrs
push
or
cmp
mov
sbb
movsb
mov
push
stos
push
jns
nop
rcll
push
sbb
dec
sbb
dec
push
or
xor
push
dec
clc
xchg
xor
fiadds
les
adc
push
sbb
mov
xchg
ja
jae
xchg
repnz
mov
or
mov
mov
adc
push
imul
movsb
xchg
add
jb
jno
add
jecxz
or
pop
mov
or
push
cld
test
aam
or
dec
jle
cmp
mull
mov
in
cmp
lea
and
out
and
in
push
sbb
incb
out
jecxz
and
sub
lock
pusha
sub
mov
aad
out
mov
inc
mov
mov
imul
fldt
movsl
into
jo
mov
aaa
pop
jns
mov
in
jo
jne
stos
mov
or
sub
loopne
test
inc
cmc
sbb
sbb
bound
sub
fyl2x
mov
add
les
lahf
jbe
xchg
fldcw
loope
in
mov
push
push
lret
leave
xchg
jp
hlt
push
cmp
and
les
hlt
push
inc
lock
inc
xor
jle
in
mov
stos
mov
leave
inc
jns
fbstp
sub
mov
cmp
adc
pop
pop
inc
pop
xlat
sub
jb
jbe
xor
popa
sbb
sbb
test
ret
mov
out
fldt
cmc
push
das
in
test
scas
cli
dec
movb
add
dec
cmp
mov
push
pop
sub
jecxz
mov
int3
adc
cmp
mov
sti
fstpt
xchg
pop
jo
out
pop
js
jg
xchg
and
or
ret
pusha
bound
add
stos
leave
xchg
jae
stos
hlt
mov
dec
int3
imul
cmpsl
add
cmp
andl
aaa
loop
decl
sbb
lods
les
mov
pop
sbb
popa
leave
sbb
add
inc
add
mov
rcll
dec
dec
or
add
push
std
repnz
sub
adc
or
es
xor
leave
jbe
dec
lahf
pushf
sub
mov
in
fwait
lret
pusha
je
lock
jmp
lods
mov
or
xor
movsl
enter
inc
mov
xor
clc
call
dec
mov
lcall
test
lea
es
cmp
xchg
enter
adcb
fadd
ficompl
lods
adc
aas
es
inc
and
add
decl
sbb
mov
pop
pop
movsb
bound
push
dec
pop
in
jmp
hlt
mov
ss
cmp
dec
stos
mov
jge
ljmp
push
loop
repz
dec
movsl
inc
mov
cmpsb
movsb
dec
out
inc
inc
jmp
cmpsl
fdivr
fstpl
mov
popa
jp
stos
cmp
and
test
in
and
xchg
rcrl
aaa
inc
sub
xor
in
insb
xchg
jmp
shrb
fisubs
mov
fwait
loope
and
je
movsb
cld
mov
stos
inc
mov
stos
scas
das
sti
paddusb
repz
cli
inc
sub
scas
adc
jae
mov
jle
pushf
push
movsb
test
pop
int3
je
fldl
push
lret
stc
mov
mov
jo
sarb
adc
xor
in
pop
jmp
enter
roll
clc
mov
das
icebp
popa
jge
sahf
ret
jne
shlb
imul
aaa
inc
mov
mov
and
and
cmp
in
mov
sbb
inc
lock
enter
jge
sub
rol
in
int
fcomps
add
mov
aas
or
fisttps
or
cmp
insl
mov
int
mov
inc
gs
sbbl
xorl
adc
xchg
fildl
push
sbbl
jecxz
hlt
lret
insl
jnp
xchg
test
mov
sub
inc
mov
jg
in
push
imul
and
sahf
add
dec
xor
aad
sub
cmp
mov
mov
or
add
fistpll
ja
jb
or
fcoms
dec
sbb
xchg
nop
sbb
jmp
enter
mov
mov
or
pushf
outsb
add
es
aas
dec
enter
es
and
jl
mov
mov
pop
mov
dec
mov
jb
fwait
arpl
jb
and
mov
lea
xor
lret
inc
inc
outsl
test
mov
rcrb
enter
ss
out
push
push
inc
fs
push
pop
jns
cmpsb
pop
push
push
out
pop
jmp
pop
mov
test
mov
pop
es
sbb
inc
mov
insl
xor
dec
inc
and
imul
xchg
lds
adcl
jne
filds
std
jp
add
ret
adc
call
das
out
jecxz
test
lret
dec
mov
fdivl
push
add
je
xor
or
push
inc
jns
inc
mov
jo
mov
inc
push
jns
fsubs
arpl
jb
je
dec
xor
cmc
ret
cmp
mov
mov
push
adc
mov
and
push
fwait
lea
fsubl
sbb
out
dec
adc
pop
jns
mov
inc
loope
jne
rorb
mov
cmpsb
pop
cmp
cltd
js
repz
les
aaa
inc
arpl
test
ljmp
push
loope
shrb
loopne
mov
push
test
shll
mov
sub
repnz
cmp
push
mov
movl
loopne
adc
dec
ljmp
jmp
sub
xor
and
mov
lret
xor
cmpsl
push
cmp
js
xchg
lret
test
mov
sbb
pop
mov
cs
jle
adc
test
sbb
push
jno
xchg
add
sub
jp
jo
add
in
and
cmc
jle
mov
or
mov
test
adc
les
in
jno
outsb
nop
daa
mov
and
clc
scas
les
xor
aam
cs
push
das
xor
xor
mov
mov
arpl
dec
movsb
in
je
das
dec
push
push
xor
ret
roll
fcomip
lods
repz
iret
inc
lock
mov
adc
scas
or
and
clc
test
lods
in
sub
inc
mov
mov
scas
call
push
push
dec
adc
cmp
sub
mov
vmwrite
xchg
inc
scas
mov
jae
sbb
imul
mov
imul
iret
add
xchg
aad
dec
push
push
push
dec
js
and
cmp
testl
cmp
mov
shlb
es
in
test
mov
mov
loopne
insl
inc
ret
mov
repz
push
or
sub
jl
lret
sbb
mov
pop
stos
dec
dec
mov
xor
sbb
mov
or
icebp
jae
into
mov
idiv
push
cs
arpl
arpl
cmpsb
stc
inc
xor
sub
imul
pop
test
fisttpl
inc
sub
int
mov
or
push
nop
or
push
stos
sub
or
ja
les
fwait
adc
cmp
test
imul
push
mov
jno
and
xor
jae
jo
sub
pop
jnp
push
dec
jmp
aaa
movsb
subl
mov
inc
add
cmpsb
dec
inc
mov
xor
movl
pushl
call
push
movb
movl
push
push
movl
movb
movb
lea
jmp
mov
fisubl
dec
inc
xor
xchg
loope
out
loope
or
call
test
stos
xor
nop
lret
and
push
xor
stc
in
sbb
pop
ds
or
in
icebp
mov
inc
mov
pop
jmp
mov
out
lcall
outsl
rcr
or
add
xchg
sti
pop
cmc
dec
xor
js
lods
mov
push
loopw
movsb
gs
gs
pop
adc
sahf
mov
aaa
testl
adc
mov
push
ror
sub
ffreep
fistps
insb
mov
clc
mov
cs
jne
int3
arpl
mov
or
cli
or
push
mov
fnstsw
add
pushw
dec
in
pusha
movl
pushl
pushf
movl
push
push
pushf
lea
jmp
ja
push
movb
movl
pushf
pushf
jmp
mov
cmp
mov
jo
adc
dec
push
push
and
and
mov
popa
sub
add
std
push
pop
clc
mov
mov
sbb
adc
outsl
xlat
mov
repnz
jg
or
hlt
jmp
adc
or
test
mov
mov
mov
lock
das
cli
fldenv
aam
clc
jbe
cmp
jnp
pop
fnstenv
xchg
lret
je
shlb
pop
and
popa
sub
push
or
or
or
push
cltd
mov
stc
mov
pop
sub
push
push
pop
and
lea
test
addr16
jbe
ret
or
and
js
push
and
jne
dec
push
and
jge
push
push
jge
adc
call
jp
icebp
inc
mov
adc
add
and
je
add
mov
jmp
push
mov
fildl
cmp
pop
push
cmc
scas
mov
lods
loopne
in
pushf
mov
jle
leave
ja
lahf
jb
cmp
dec
pop
fldcw
jp
hlt
je
mov
pop
divl
mov
mov
out
cmp
cmpsl
nop
call
fldenv
pop
push
pop
add
out
mov
mov
jne
dec
nop
pop
in
test
push
sub
cmp
xchg
xlat
or
jb
rclb
rorb
jne
movsb
jecxz
dec
repnz
lds
cmpsb
js
pop
mov
add
inc
xchg
rorb
pop
nop
xchg
dec
lea
fldl
mov
jl
notl
sbb
dec
repz
loop
int
sub
or
and
enter
dec
sub
or
mov
jns
fwait
xchg
add
lret
mov
in
push
lret
in
cmc
shrb
dec
fstpl
cmpsb
xchg
push
push
pusha
lret
in
xchg
mov
scas
bound
int3
bound
dec
mov
jnp
cld
add
sub
xchg
imul
hlt
cmpsb
sbb
xchg
jnp
sbb
jb
jb
push
or
xor
mov
or
mov
fstps
mov
sbb
jmp
popf
adcb
loop
sbbb
or
pop
mov
push
aas
lret
xchg
stos
mov
push
cmpsb
lods
ret
sbb
or
or
shll
inc
sbb
inc
or
xchg
adc
rcr
mov
ret
mov
mov
bound
leave
jmp
xchg
inc
jecxz
add
jns
and
inc
sub
jmp
mov
and
jnp
jl
xor
inc
sbb
aam
fstps
inc
mov
out
sbb
push
idivl
jae
push
mov
arpl
sub
stos
xchg
inc
inc
loop
bound
pop
or
loopne
cmpsl
ror
movsb
jae
adc
rcrb
push
shll
outsb
sbb
mov
ja
outsb
push
dec
addl
pushf
movl
push
pushf
lea
jmp
call
pushf
movl
push
mov
movl
pusha
lea
jmp
addr16
dec
aaa
mov
arpl
mov
mov
mov
mov
jge
dec
and
js
imul
sub
clc
mov
mov
adc
mov
add
xchg
clc
mov
lock
aas
lock
clc
movsl
jecxz
or
dec
imul
call
and
test
mov
test
mov
fiaddl
mov
fwait
mov
inc
and
popf
or
and
call
ds
fistl
inc
repnz
dec
insl
aaa
test
jns
push
add
push
add
fstps
mov
arpl
std
mov
adc
mov
mov
bnd
gs
adcb
xchg
and
stos
aaa
sub
sub
cmpsl
cltd
stc
inc
cmp
inc
mov
inc
and
sbb
dec
vdivps
jmp
dec
and
movl
pushf
pushf
push
lea
jmp
push
pusha
push
mov
push
lea
jmp
or
fsubrp
adc
sti
xchg
push
push
or
cs
out
into
mov
es
rorb
push
inc
scas
lea
aas
stos
movsb
int
or
jl
pop
sbb
push
aad
rcrl
inc
fistps
es
add
lahf
fsubs
adc
adc
mov
test
and
xor
aam
inc
test
jecxz
and
pop
mov
mov
push
or
repnz
fwait
or
mov
mov
xchg
inc
pop
xchg
push
iret
cs
add
mov
add
add
pop
lods
inc
add
cwtl
pop
adc
cmp
xor
clc
fstpl
jne
pop
out
stc
movsb
cld
mov
lea
adc
adc
or
pop
cmp
pop
add
lahf
and
jae
rorb
pop
in
cmp
xor
pop
inc
or
adc
jae
cmpsb
bound
xor
sub
pop
pop
mov
lea
loop
mov
jne
aas
leave
cmp
add
rol
mov
test
pop
inc
sub
aas
insb
cltd
pusha
dec
cmp
xor
pop
or
rolb
mov
int
and
mov
xchg
mov
in
lods
and
clc
loopne
out
fsubs
push
cmp
lock
fsubl
push
pop
ret
call
test
repnz
and
inc
sbb
jne
sub
or
popa
mov
jge
test
fdivl
rorl
push
mov
stos
faddl
insl
repz
rclb
loope
mov
popa
push
add
test
push
sub
adc
add
scas
mov
daa
or
pushf
enter
bound
mov
fs
sbb
insb
pop
adc
xor
int3
xchg
sub
imul
pop
xor
in
inc
das
push
cmp
cmp
sbb
push
ds
and
movsb
jg
cwtl
mov
in
inc
jp
mov
les
push
imul
add
inc
sub
clc
in
sbb
out
push
mov
xchg
nop
nop
inc
mov
xchg
lret
mov
repz
and
test
pop
sub
rorl
mov
sti
pop
jg
repnz
rcrb
fadd
outsb
aam
gs
dec
movb
cltd
andl
mov
shrb
out
test
cmc
or
dec
sub
clc
mov
out
scas
shlb
out
lods
or
mov
push
dec
xor
pop
add
mov
cmp
cmpsb
xchg
xchg
pushf
pushf
lea
jmp
jmp
pushf
call
call
or
aam
in
mov
lods
test
out
mov
mov
mov
inc
iret
mov
pop
add
negb
std
push
ficompl
push
dec
outsb
subl
lods
jecxz
pop
sub
dec
dec
mov
jnp
outsb
sbb
iret
jge
nop
icebp
cmpsb
in
lds
push
and
jmp
idivl
mov
rclb
or
int3
mov
inc
call
ret
lret
nop
fidivs
lods
jmp
addb
pop
out
push
mov
or
inc
mov
inc
loopne
pop
push
jl
jmp
call
test
cmpsb
ljmp
mov
shl
jecxz
mov
ljmp
push
lcall
mov
mov
dec
sbb
int
add
push
mov
dec
push
jmp
stos
fmuls
mov
in
shlb
xchg
fwait
pop
mov
aaa
lds
test
mov
cmp
and
pop
ds
push
push
in
jmp
aas
dec
not
pop
pop
pop
or
fdivl
inc
mov
jmp
xor
imul
popa
pop
inc
and
stos
mov
mov
inc
jl
dec
add
dec
and
lea
push
mov
enter
sub
jmp
xchg
lret
mov
clc
sahf
daa
cmpsb
mov
inc
fwait
cs
adc
lea
push
push
adc
adc
or
or
jns
fnsave
ss
shrb
push
push
and
push
xchg
inc
mov
repz
sub
jae
lahf
jno
dec
adcb
les
jmp
movsl
jecxz
fwait
sub
int3
dec
adc
push
or
inc
stos
mov
jo
subb
mov
push
test
mov
out
ja
xor
movl
push
pusha
pushf
movl
movw
push
lea
jmp
call
sub
sahf
sbb
inc
or
dec
std
mov
jnp
dec
mov
push
mov
push
getsec
pop
pop
pop
mov
xor
inc
add
jp
jle
inc
aas
popa
repz
ret
mov
loope
xchg
cmp
lods
cmc
in
in
push
pop
xchg
and
enter
out
in
inc
mov
xchg
xlat
add
cli
push
push
aaa
loope
cwtl
push
insl
in
in
mov
mov
lods
roll
adc
mov
fs
aad
add
mov
mov
inc
enter
xor
cli
cld
xchg
fsubrs
adcl
xor
in
test
fs
pop
stos
sub
jo
fldenv
sbb
add
dec
sbb
inc
or
and
ss
push
rorl
xchg
cmp
nop
and
lds
imul
mov
xchg
imul
sbbb
push
cmpxchg
mov
into
sbb
mov
pop
mov
push
mov
fiaddl
push
push
arpl
imul
cmp
cmp
sahf
xchg
cwtl
or
pop
adc
call
sbb
arpl
pusha
js
gs
sub
and
gs
leave
popf
clc
scas
ljmp
pop
jl
enter
out
mov
call
icebp
pop
fldl
or
rcrb
add
dec
mov
mov
jmp
adc
add
cwtl
ret
mov
and
aaa
divb
mov
push
jo
cmpsl
sti
mov
gs
andl
xor
adc
imul
pop
aaa
xchg
add
push
pusha
pop
push
aaa
data16
and
cmp
mov
xlat
xlat
push
jo
scas
cmpsb
daa
leave
cs
jno
mov
inc
mov
loop
int
adc
sub
mov
sub
pop
add
xchg
adc
imul
fdivs
pop
movsb
add
push
in
dec
add
push
add
sahf
mov
xchg
or
mov
hlt
arpl
and
sub
js
ljmp
popa
cmp
or
or
fistpl
xchg
jmp
add
in
mov
inc
out
repnz
sub
push
mov
lods
lds
subl
sub
jl
jns
xor
push
and
push
pop
inc
add
leave
inc
mov
ret
scas
jge
xchg
jns
int
push
push
adc
daa
dec
loopne
sbb
xchg
mov
jbe
cmp
sbb
pusha
jl
in
cmp
mov
dec
repz
mov
mov
pop
les
sbb
arpl
mov
dec
pop
and
pop
in
rcrb
test
scas
daa
or
sub
xor
or
add
jnp
mov
inc
cltd
ja
sbb
and
jne
adc
int3
test
addb
inc
loopne
cmpsl
outsl
xchg
adc
mov
arpl
fidivrs
pop
dec
das
xchg
push
and
xlat
mov
inc
mov
das
jnp
mov
cmp
cmp
push
mov
xchg
rorb
add
ret
int3
test
gs
in
je
and
inc
fmul
fnsave
and
sub
cmpsb
stos
add
inc
aaa
mov
dec
cmp
inc
xor
lret
das
xchg
mov
xchg
jge
movsb
mov
mov
inc
mov
push
pop
inc
test
push
jbe
cmpsl
cmp
movsb
repnz
cmp
sub
push
cmp
jle
xchg
or
or
ss
inc
mov
mov
cmp
jae
inc
clc
xor
mov
push
stos
pop
movlhps
xor
pop
xchg
pop
cmp
fldcw
fnstsw
repz
lods
and
rol
add
cmp
dec
add
cltd
je
sahf
pop
jno
push
push
outsb
loop
movb
scas
int
or
stos
ds
js
flds
xor
or
dec
pop
jae,pt
pop
cmp
fwait
stc
out
arpl
cmp
lock
cmp
add
stos
hlt
push
sub
cmp
ljmp
popf
lret
xchg
call
mov
iret
mov
cmp
mov
popl
sub
jmp
je
sub
pop
aas
into
sub
xchg
sbb
jg
pop
pop
imul
cmp
xchg
int3
sbb
sub
dec
daa
je
dec
or
cmpsb
jmp
dec
pushf
mov
add
movsb
xor
push
inc
push
cmp
add
inc
mov
or
pop
inc
icebp
xor
ret
mov
dec
pop
xchg
les
inc
nop
mov
fdivrs
imul
lret
and
jnp
repnz
sub
inc
jb
adc
pop
loopne
push
lcall
dec
stc
jne
nop
les
xchg
jae
push
ret
push
dec
pop
iret
sub
jo
push
cmp
fcmovnbe
push
sbb
dec
cmp
inc
mov
and
mov
jmp
xchg
xor
or
push
sbb
jg
movsb
stos
xor
mov
aaa
adc
jmp
rorl
fmuls
loope
jb
cmpsb
sbb
loope
std
sub
pop
lock
nop
imul
lea
je
push
push
pusha
pushf
mov
lea
jmp
idivl
stc
div
mov
jecxz
btc
mov
mov
cli
out
mov
pop
bound
or
mov
xchg
xchg
cltd
sub
or
sub
gs
test
out
mov
jg
sub
ss
cwtl
sbb
loopne
leave
push
jae
cmpsl
dec
movsl
cmpsb
add
cmp
imul
push
je
mov
dec
insl
enter
push
fcomps
je
mov
notl
arpl
or
cmp
mov
mov
stc
xchg
xlat
test
mov
int3
push
sbb
lods
sahf
xchg
sub
rorl
adc
fimull
mov
jno
xchg
cs
mov
sbbl
cli
push
in
frstor
es
cmp
gs
loope
mov
fisubrs
mov
mov
mov
mov
lds
stc
or
xchg
sbb
aam
pop
jnp
dec
sub
adc
test
imul
pop
mov
aaa
push
add
insl
scas
mov
adc
sbb
imul
aam
test
fdivs
ljmp
movsl
lea
sti
pop
adc
mov
mov
inc
mov
mov
xor
mov
es
add
cwtl
cli
mov
stos
enter
jne
in
shl
jo
pushf
mov
sbb
daa
je
xchg
std
mov
int
imul
sti
movaps
daa
int
xchg
adc
push
adc
inc
jae
fsts
dec
dec
in
sbb
mov
sbb
into
dec
push
js
sahf
mov
filds
xchg
sti
popa
add
jb
ret
nop
xchg
mov
mov
mov
insb
sub
dec
inc
js
sbb
mov
mov
push
lods
jecxz
iret
push
sbb
sbb
std
add
in
pop
jg
and
enter
pop
popa
mov
xchg
sub
add
push
pop
daa
mov
sbb
pop
mov
jmp
add
xchg
jae
js
xor
pop
pop
mov
ds
fstpt
dec
lock
xchg
push
mov
sub
and
xchg
xor
repz
mov
pop
ss
test
sbb
addb
mov
mov
jbe
out
adc
ret
mov
xchg
mov
mov
call
scas
dec
iret
xchg
pop
xor
fimull
jns
mov
lock
and
mov
mov
jg
pop
inc
addb
lock
lcall
pop
ret
sbb
xchg
mov
cmp
sbb
fistps
sbb
xchg
test
or
hlt
outsl
sub
add
movsb
stc
xchg
aad
sub
pop
or
and
sti
sub
out
or
cltd
lret
cmp
jo
pop
adc
cmp
add
pop
dec
dec
lds
mov
cltd
sbb
lret
and
push
pop
lahf
push
pushf
pushf
pusha
lea
jmp
pusha
movl
pushl
lea
jmp
pushf
and
add
jmp
dec
cmp
adc
push
xchg
imul
sbb
das
pop
pop
mov
std
xlat
insb
fcom
and
movsb
xor
imul
and
and
jp
imul
out
lret
and
fs
lods
adc
jbe
jno
inc
mov
movl
pushf
call
movl
pushf
pusha
pushf
movw
lea
jmp
loope
push
das
es
cmovl
jb
popa
addb
or
lcall
stos
int3
aas
push
pop
inc
push
repnz
gs
mov
data16
loope
xor
jmp
rcll
stos
rep
ficoml
add
aad
sub
push
mov
ljmp
push
negb
aaa
mov
xor
pusha
mov
xorb
pop
out
enter
out
ret
movsl
ret
adc
cmpsb
push
jae
and
dec
paddusw
adc
mov
in
mov
icebp
cwtl
cli
jo
add
mov
sbb
and
xor
jp
fcmovnbe
lcall
pop
mov
divb
pop
xchg
arpl
xchg
mov
andb
jp
and
sub
fnstcw
dec
sub
nop
outsb
scas
push
dec
cmpsl
cli
cmpsb
lods
ljmp
mov
jns
cmc
test
xor
adc
add
movapd
mov
mov
or
loop
stc
fadds
or
add
cmpsl
mov
jle
out
sub
sub
mov
movsb
cmc
pop
or
push
mov
and
fs
jmp
scas
nop
roll
mov
das
cmpsl
mull
mov
mov
or
aam
mov
xchg
add
cmp
mov
jle
and
mov
mov
adc
pop
jb
and
iret
jl
pop
push
lahf
cmc
cmpsb
out
popl
inc
and
lds
push
jae
clc
lret
xor
lods
add
lea
ret
movsb
jg
xchg
hlt
sbb
stc
adc
out
outsb
or
push
lret
scas
sbb
sbb
fldt
xor
aam
in
push
push
mov
xchg
jns
call
outsl
or
fdiv
add
loop
bound
insb
mov
in
cmp
sub
mov
mov
jae
je
or
enter
outsl
scas
mov
sarl
xchg
aaa
enter
popa
push
pop
fcomps
mov
icebp
adc
movl
call
sub
sarw
fmull
out
rorb
push
cmpsb
andl
xchg
xchg
in
lret
xchg
pop
sbb
sbb
jl
mov
mov
hlt
mov
pop
jns
enter
arpl
in
mov
adc
ds
add
mov
enter
ljmp
testb
push
fnstsw
sub
and
pop
add
sbb
lods
outsl
popf
jo
or
xchg
daa
push
mov
data16
sbb
addr16
xor
mov
daa
xchg
xor
out
cmp
sbb
xchg
sti
mov
aas
fldl
in
sub
pop
fmul
out
je
add
int
fimull
loope
add
xor
movl
pushf
push
movl
pushf
lea
jmp
cmp
jnp
loopne
mov
paddd
inc
cmp
mov
cltd
pop
add
cmp
fmuls
dec
xchg
xchg
inc
jge
je
out
pop
lret
sub
inc
call
xchg
mov
aad
xor
cs
js
mov
push
fmuls
sar
stc
adc
aam
sub
push
stos
and
ret
movsl
adc
clc
sahf
adc
dec
in
and
push
notb
inc
or
inc
adc
mov
sbb
ret
dec
add
adc
cmpb
inc
cmp
sbb
xchg
add
fistl
loop
pusha
xor
xchg
faddl
iret
mov
pop
or
jnp
inc
das
xchg
or
ja
mov
pop
dec
add
dec
shll
push
leave
out
cs
lea
xchg
loopne
cli
push
push
out
in
arpl
fstl
mov
nop
pop
cmpsl
cltd
andb
outsl
packsswb
mov
xchg
inc
mov
mov
mov
stc
jnp
push
call
push
cld
lods
mov
mov
mov
cmc
xchg
add
xchg
ljmp
mov
mov
aad
push
in
mov
pop
and
pushf
int3
xlat
mov
filds
mov
insb
xchg
pop
mov
push
mov
movb
pushf
movl
pushf
pusha
call
push
mov
call
lds
cmc
push
push
add
mov
aaa
dec
pop
sbb
mov
lods
cmc
mov
data16
pop
dec
imul
cld
popa
pop
mov
and
dec
jp
dec
mov
ret
cmp
cmp
xchg
scas
int
fstl
sbb
fldcw
fiaddl
cwtl
movsl
pop
mov
pop
xchg
shrb
push
es
lcall
ucomiss
jae
mov
out
es
or
je
bound
or
loop
aad
out
inc
mov
popf
dec
jmp
mov
fsubr
xchg
adc
pop
call
inc
push
push
mov
cld
lea
enter
pop
ret
push
outsl
out
push
pop
dec
push
gs
test
push
sub
inc
pop
cld
fcmovnbe
mov
push
sbb
ds
icebp
fs
ja
mov
mov
aam
sbb
xlat
fcmovbe
mov
fldcw
arpl
mov
and
and
leave
test
pop
pop
mov
gs
mov
dec
fstpl
pop
outsb
xor
int
or
mov
cmp
insl
mov
nop
or
cmp
or
jo
outsb
add
bound
mov
inc
push
mov
leave
cltd
shlb
addr16
or
adc
mov
in
mov
or
scas
mov
insl
push
pop
inc
ret
lcall
add
mov
ret
sbb
lds
scas
and
pop
xor
jbe
es
aaa
sub
das
shrb
push
addr16
les
fisubl
pop
arpl
popa
cmp
ljmp
push
movd
lods
mov
imul
test
subb
sub
mov
inc
pop
xor
rclb
test
mov
divb
scas
push
scas
sbb
jle
jne
dec
sub
mov
fbstp
xchg
shlb
incl
lods
test
pop
repnz
divb
adc
push
sub
xor
mov
pop
sbb
xor
lret
sbb
push
test
in
sti
rolb
cli
cmc
pusha
sub
mov
mul
lcall
test
inc
movsb
mov
adc
mov
add
in
hlt
lcall
ljmp
add
mov
adc
bound
frstor
stos
mov
mov
imul
mov
inc
fsubs
push
dec
sub
inc
mov
mov
scas
adc
loop
pop
inc
call
jo
test
cmp
mov
out
adc
pusha
push
push
popf
mov
leave
sbb
jmp
jb
pextrw
jbe
jp
mov
mov
ffreep
pop
lods
outsb
jnp
out
int
jecxz
fdivrs
shl
sbb
jmp
and
dec
fadds
popf
in
push
xor
jle
sub
jle
test
ds
insb
adc
and
pop
jle
shl
cmpl
ror
push
fsts
mov
stos
aas
stos
push
add
lds
popa
adc
adc
int
sbb
nop
xchg
cmp
inc
pop
xchg
test
xchg
idivb
mov
loop
and
xor
xchg
mov
adc
adc
inc
mov
add
lret
and
inc
dec
lds
fs
jb
push
pushf
mov
movb
pushf
lea
jmp
mov
cwtl
xchg
jcxz
mov
mov
push
das
sti
adc
or
loope
xor
adc
mov
test
std
dec
pop
jns
inc
mov
testl
adc
cmp
and
ret
add
ret
in
sbb
mov
mov
nop
dec
dec
icebp
loope
popf
dec
or
test
lcall
or
and
shl
scas
hlt
lcall
or
sarl
aad
mov
jg
popa
shll
ja
mov
sub
testl
xor
sahf
or
fsubrp
mov
cs
out
cmp
pop
lods
mov
push
call
pop
pop
lret
jmp
cmovl
je
xchg
mov
add
xchg
pop
stc
mov
sub
inc
rcrl
jno
insl
sub
push
cmp
bound
roll
outsb
jne
shll
test
or
inc
mov
popa
shrl
repz
dec
jno
jns
sbb
mov
outsb
pop
loop
je
or
dec
aaa
push
sbb
les
inc
mov
into
sbb
roll
mov
movsl
test
pusha
fisubrs
inc
aam
ds
push
mov
inc
xor
call
mov
inc
roll
jmp
jle
in
inc
jne
xchg
data16
popa
and
faddl
in
cmp
shlb
rcrb
inc
popa
enter
adc
jp
push
pop
mov
cli
sbb
lods
call
fnstcw
aaa
pop
pop
leave
fnstsw
mov
adc
aam
jmp
ljmp
fisubs
out
inc
mov
xchg
jmp
subl
mov
xchg
mov
xor
sbbl
pusha
sub
sub
fdivrl
adc
mov
pop
xor
jmp
mov
test
jmp
dec
push
mov
jp
scas
xchg
and
pop
and
xchg
sub
test
sub
xchg
mov
sbb
xchg
xor
and
mov
mov
inc
add
jge
pop
fisubs
cmp
jae
inc
mov
imul
roll
out
addr16
dec
in
fs
popa
les
ret
aad
jmp
lcall
inc
sub
daa
mov
mov
push
and
jg
imul
lcall
cmp
ljmp
cld
js
ja
push
test
and
test
hlt
imul
cmp
stos
jg
fwait
in
loope
inc
mov
gs
dec
lods
dec
dec
mov
mov
out
pop
or
adc
xor
orl
xor
push
rcrb
add
addr16
xor
inc
mov
aam
sub
jno
push
gs
xor
rolb
jmp
sub
lcall
jge
push
mov
pusha
cli
lods
pop
or
pop
add
jg
inc
mov
jle
jmp
jg
icebp
aam
xor
or
mov
xor
xor
bound
lret
lods
cli
lahf
cs
sub
cmp
mov
jns
out
mov
mov
popf
push
mov
lret
dec
and
inc
mov
push
jge
adc
idivl
jno
xchg
sub
pop
xor
jns
jo
inc
ss
xchg
ja
jne
add
mov
call
mov
adc
fdivrl
in
aas
lea
das
lahf
cmp
push
movsb
enter
sub
pop
or
xor
jge
mov
and
ljmp
int3
xchg
cvtps2pd
inc
sti
movsl
adc
sbb
data16
inc
push
xor
push
repz
bound
sbb
push
out
xor
push
lock
push
xchg
xor
or
lock
rcll
xor
jno
sbb
fsubs
mov
roll
mov
out
or
sbb
insb
sahf
mov
shll
pop
mov
cld
mov
sbb
pushf
loop
xchg
mov
mov
stos
sub
mov
fidivs
stc
cmpsb
repz
rolb
out
inc
mov
lcall
icebp
rcl
jne
inc
stc
mov
jno
xor
inc
mov
push
sbb
cld
fidivrl
jno
mov
loopne
inc
jno
inc
cmp
out
mov
stc
or
add
adc
shrb
xchg
sub
push
pop
cltd
or
push
cmpsb
sbb
ja
sub
icebp
int
leave
mov
push
enter
add
mov
cmpsb
sbb
inc
mov
pop
push
std
jmp
stos
push
add
out
sbb
loopne
nop
push
aam
mov
es
daa
cmp
aad
mov
mov
adc
int3
jne
adc
push
mov
sahf
jae
xchg
lds
xorb
popf
addr16
xor
lahf
push
jge
and
aad
or
mov
adc
dec
add
dec
jne
sbb
pop
fsubs
data16
inc
push
fiaddl
xchg
fwait
test
xchg
xor
lea
je
inc
sub
cmp
jne
and
and
jno
pop
jecxz
mov
or
or
int3
out
pop
sub
inc
roll
in
sub
loop
divb
cmp
sbb
xchg
faddl
rcrb
mov
sti
mov
mov
push
and
mov
xchg
adc
nop
fsubs
cmp
add
xor
aad
push
inc
sub
cmp
imul
fidivs
pop
dec
outsb
sarl
andb
xchg
shl
fsubrl
push
mov
xor
out
cmc
sahf
sub
xchg
mov
out
ds
sbb
nop
fimull
or
imul
in
mov
jb
std
adc
lcall
mov
push
dec
mov
pusha
mov
add
sahf
xchg
pop
ljmp
into
mov
push
pop
xor
jbe
push
dec
sbb
pusha
movsb
in
insb
leave
rcrb
jecxz
xchg
mov
push
sbb
pop
mov
mov
sub
push
mov
test
pop
xlat
lods
clc
sahf
fsubrs
jl
inc
jg
int
clc
push
aaa
fsubrs
fldcw
inc
adcl
xor
mov
jbe
inc
aas
mov
movsl
add
add
sbb
xchg
mov
pop
fcmove
jge
mov
xorl
adc
mov
popa
mov
stos
jns
add
out
mov
pop
add
xchg
mov
jge
aaa
pop
inc
xor
inc
stos
sar
loopne
stos
jl
lods
jno
sarb
ret
pop
fnstsw
sahf
adc
cmpsb
xchg
fstpt
mov
adc
cmp
loopne
dec
and
call
loope
out
mov
dec
enter
out
xor
mov
xchg
cmp
xor
jmp
adc
imul
mov
cwtl
cld
inc
int
fidivrs
xlat
sahf
mov
mov
mulb
data16
push
inc
mov
rcll
sarl
cmp
and
xlat
popf
ja
mov
movsb
scas
hlt
into
mov
sarb
insb
filds
aad
or
lret
push
negb
push
pop
sbb
and
fistps
xor
push
aad
or
icebp
ret
jne
adc
xchg
arpl
mov
xchg
mov
xchg
adc
dec
loop
lcall
out
fbld
aad
dec
inc
mov
dec
push
mov
xchg
push
test
popf
and
fs
jae
xchg
mov
inc
aam
add
hlt
push
xor
inc
icebp
aaa
lock
jb
fldt
mov
xor
cli
stos
in
imul
and
test
inc
mov
lret
or
jmp
jns
test
shll
sbb
xor
cld
mov
sub
idiv
push
mov
mov
jo
fcomps
jle
mov
pop
aaa
sub
or
or
pop
adc
cs
push
jmp
lcall
mov
imul
cmp
rorl
xor
fisttps
pop
sub
roll
ljmp
add
rclb
jnp
fsubr
add
es
or
dec
cmpsb
out
dec
or
sti
sahf
sub
push
or
push
dec
cwtl
leave
pusha
leave
fmull
adc
add
mov
mov
mov
movl
push
jmp
dec
es
sub
fstps
adc
icebp
xchg
out
leave
inc
out
mov
scas
call
adcb
jnp
xchg
es
loopne
repz
shrl
stos
imul
push
mov
inc
fisubs
flds
inc
xchg
xchg
imul
clc
outsl
cmp
and
sbb
sub
xor
loopne
pusha
test
and
in
mov
scas
lret
cmpsl
adc
inc
inc
mov
outsb
jl
sbb
sub
test
sub
xor
js
lret
sbb
mov
push
push
lahf
das
xchg
mov
nop
sbb
sub
bound
sbb
inc
jp
lock
rcll
push
dec
and
out
pop
popf
inc
mov
mov
movsl
testl
nop
xor
add
shlb
add
movsb
inc
stos
adc
ljmp
xlat
xchg
loope
bound
test
lods
mov
insl
dec
mov
test
mov
outsl
xor
inc
mov
or
dec
add
dec
mov
fbld
ret
pop
or
add
mov
or
cmc
inc
mov
shrl
ja
fiaddl
data16
inc
cmp
mov
xchg
repz
pusha
inc
adc
xchg
insl
add
or
outsb
or
out
jl
cld
adcl
push
cmc
rcr
add
jne
and
cmc
inc
mov
push
pop
mov
imul
stc
sahf
into
outsb
jmp
add
push
cmp
movsl
mov
cwtl
int
call
lret
and
iret
dec
push
jge
mov
or
mov
aad
pusha
fistps
hlt
jns
inc
popa
mov
cwtl
jmp
lock
dec
or
mov
mov
jge
jl
push
jb
subl
rcrb
lahf
mov
in
das
xchg
decl
mov
loope
xchg
ljmp
push
ret
in
orl
imul
mov
inc
mov
push
jg
jp
mov
mov
dec
imul
arpl
daa
fidivl
dec
xorps
xchg
mov
xchg
jb
jb
add
stos
clc
sub
or
xchg
ss
popa
jg
negl
into
sbb
shr
push
ljmp
bound
add
fdivrl
ja
add
inc
mov
inc
mov
adc
mov
leave
add
aas
aas
and
jno
cwtl
std
sahf
shlb
int
dec
or
adc
jl
xlat
lret
mov
scas
pop
dec
cmpsl
inc
mov
push
push
or
pop
in
ljmp
push
and
lahf
pop
mov
inc
lods
sti
fiadds
jb
mov
mov
xchg
mov
mov
inc
mov
cmp
shll
mov
lcall
mov
sub
cmc
pop
loop
and
icebp
push
adc
pop
das
jne
or
jns
pop
jb
out
roll
jns
cs
das
gs
inc
mov
rcrb
cmpl
mov
iret
cmpsb
adc
movsb
xchg
jmp
imul
lcall
pop
mov
cmp
sti
pop
sbb
dec
shrb
push
dec
loope
inc
ja
in
add
inc
int
inc
pusha
out
fs
int3
cmp
push
adc
jb
inc
mov
mov
jb
jmp
fbld
nop
and
xor
mov
popa
lret
icebp
stc
push
add
nop
scas
mov
push
lds
cltd
xor
lock
repz
inc
arpl
inc
fucom
xor
jb
push
das
inc
clc
jno
pop
in
xor
inc
pop
push
mov
pop
sbbl
iret
inc
xlat
and
into
cs
mov
mov
push
jo
scas
xchg
push
je
xor
out
mov
std
jecxz
xchg
in
fsts
push
aas
sbb
test
dec
mov
fs
sahf
inc
mov
gs
movsl
testl
lods
or
push
scas
outsl
fs
leave
inc
fisttps
fwait
test
in
add
mov
call
sub
inc
mov
je
hlt
call
pop
fidivrs
fdivl
xlat
iret
popf
mov
lahf
adc
hlt
cmp
mov
push
fstpl
pop
mov
out
sub
pop
mov
and
adc
and
dec
add
adc
mov
xchg
int3
mov
dec
cwtl
xchg
mov
mov
int3
orb
mov
dec
or
push
lret
lea
adc
xchg
bound
inc
dec
in
sub
leave
xchg
inc
and
mov
fistpll
mov
mov
dec
pop
out
mov
or
pop
push
or
push
pop
mov
in
mov
mov
xchg
cmc
dec
adc
pop
sbb
mov
inc
xlat
mov
add
fwait
in
int
pop
movsb
lds
or
in
test
jae
adc
adc
aam
push
jne
xor
mov
add
sbb
inc
adc
nop
int3
jae
dec
pop
jno
addr16
insl
pop
cwtl
inc
scas
adc
jno
rorl
notl
nop
outsb
or
sub
enter
xor
pop
or
jno,pt
and
lea
and
mov
and
scas
mulb
dec
iret
mov
sahf
arpl
test
lahf
pusha
push
sbb
pop
lds
cmc
loope
loop
push
mov
jl
dec
testl
sbb
dec
mov
and
jle
xor
xlat
js
or
cmc
mov
mov
into
imul
mov
inc
mov
cmpsl
outsl
and
orb
dec
rorb
and
js
jo
add
dec
lahf
sbb
jmp
jns
mov
push
sub
lock
nop
out
lock
push
pop
fmul
mov
cmp
inc
cwtl
mov
mov
mov
jg
jbe
pushl
es
inc
mov
xchg
jnp
or
iret
xor
sub
jp
mov
scas
fs
or
adc
lahf
xchg
in
in
lods
add
mov
faddp
xchg
push
jns
or
repz
out
cmp
aam
cmp
movsl
jmp
mov
adc
inc
in
hlt
cmp
lret
xchg
sti
mov
mov
mov
call
pushf
call
or
movsl
jecxz
cmp
xor
xchg
mov
push
add
adc
not
out
ret
in
jge
push
pusha
adc
add
mov
xchg
mov
loopne
or
push
sbb
or
sub
pop
stos
mov
and
mov
mov
js
mov
movl
xchg
dec
cmp
cld
insb
inc
js
insb
adc
jns
ja
cmpsl
rcr
xchg
mov
jb
mov
fdiv
jnp
xchg
mov
fmull
mov
je
adc
jnp
jmp
pop
xchg
mov
jnp
pop
scas
fdivp
mov
cmpsb
push
pop
add
int
xlat
test
mov
in
mov
push
aam
mov
cltd
pop
sbb
xorl
mov
and
mov
push
mov
jo
jg
in
int3
lcall
mov
jo
mov
cwtl
jl
gs
lcall
push
push
mov
and
add
fldl
out
push
pop
xor
jae
mov
xor
imul
mov
leave
loop
mov
jmp
push
call
cltd
push
rep
popa
mov
xchg
sub
and
inc
adc
mov
dec
test
push
sub
or
inc
fnstenv
testb
jae
or
mov
fwait
sbb
xor
insl
dec
or
adc
repnz
jmp
inc
arpl
jno
push
push
xor
mov
movl
pushl
movl
pushf
lea
jmp
enter
push
cwtl
and
jae
aam
testb
adc
aas
mov
dec
sbb
push
sub
testl
fwait
daa
inc
fildl
jl
mov
sub
std
cmpsl
push
popf
lds
mov
mov
push
fisttpl
pop
sub
cmp
mov
mov
add
dec
adc
inc
and
sbb
std
cmpsb
es
testb
mov
mov
gs
mov
and
rclb
jge
mov
add
ret
sbb
adc
clc
xchg
rcll
push
mov
xlat
and
mov
xor
mov
mov
je
lds
mov
push
dec
cld
das
inc
mov
add
jp
out
ds
sub
mov
and
scas
cmc
shr
mov
ja
in
push
push
dec
and
sub
cmp
push
outsl
dec
pop
dec
pop
adc
inc
cwtl
test
and
dec
inc
inc
mov
mov
mov
test
xchg
sbb
jae
inc
das
dec
aaa
mov
xchg
loope
aaa
mov
jbe
enter
lock
push
or
movsb
xchg
jl
fisubrl
pop
push
xchg
inc
jl
pop
dec
adc
xchg
pop
inc
pop
sub
xor
in
mov
mov
icebp
inc
and
pop
and
adc
outsb
pushf
popl
stc
fsubrl
jp
outsb
fisubrs
sub
movsl
movsb
int3
cmp
xor
insl
jae
ret
sbb
mov
jl
pop
jecxz
test
pop
and
xchg
inc
pop
jecxz
xor
outsb
push
in
imul
fadd
pop
pop
insb
ffree
push
or
insb
popf
aad
push
into
mov
jb
mov
jle
pop
lods
insb
and
mov
bound
inc
sbb
push
fildll
adc
aad
sub
pusha
jl
iret
pop
mov
sub
mov
pop
pop
movl
movw
pushf
movl
pushf
pushf
movl
pusha
lea
jmp
testb
idivl
push
mov
pushf
popf
in
jns
ret
mov
sbb
sub
pop
sarl
shrl
imul
jle
mov
mov
shrl
jbe
movsb
adc
sub
sar
mov
int
sahf
push
dec
lcall
push
lahf
lret
movsb
dec
inc
mov
lahf
mov
gs
adc
mov
or
jae
mov
insb
mov
inc
lods
xor
test
jl
or
pop
ss
cmp
pop
sub
mov
ljmp
jns
inc
pop
and
xchg
mov
xchg
add
out
add
icebp
sarb
xchg
inc
mov
cmp
jg
out
fistl
rcll
sub
sbb
push
in
cmp
xor
xchg
mov
int
hlt
pop
dec
fildll
jp
mov
sub
insl
sub
pop
repz
mov
loope
rcll
sub
icebp
mov
and
andb
mov
mov
es
pusha
popf
insl
les
popf
cmp
lods
xor
stos
cltd
subl
jl
push
mov
test
mov
insb
adc
mov
icebp
jns
les
add
dec
mov
mov
roll
jmp
insb
pop
jae
add
xchg
xlat
pop
sub
loopne
lret
mul
or
adc
mov
test
clc
out
mov
xchg
mov
ljmp
sbb
add
fidivrs
pusha
loopne
lock
mov
adc
inc
push
cmc
jge
dec
or
jns
mov
sti
mov
addr16
cmc
outsb
icebp
xchg
adc
mov
xchg
nop
inc
push
sub
xor
leave
xlat
fs
mov
inc
pop
fnstenv
adc
inc
xor
int3
or
sarb
pushf
jp
clc
test
addr16
mov
cmp
dec
lods
mov
and
mov
clc
inc
mov
bound
adc
inc
inc
cld
sbb
jne
adc
cli
adc
repz
loop
jmp
pop
outsl
xor
dec
fcmovnb
inc
scas
lea
out
test
out
test
popa
dec
scas
pop
iret
aam
scas
jp
lahf
fwait
cmpb
ja
data16
pop
inc
mov
ss
shrl
xor
pop
adc
cmp
popa
mov
add
out
scas
jnp
and
xor
das
inc
push
push
xor
addr16
add
cmp
popf
lock
push
in
mov
mov
inc
add
sbb
mov
sbb
sbb
pop
pop
aam
ss
or
and
std
inc
mov
nop
sub
insl
xchg
test
pop
cs
flds
or
pushf
enter
mov
sahf
addl
andl
xchg
stos
or
mov
pop
pop
pushl
loope
loop
out
jecxz
movsb
decb
mov
adc
ffreep
cltd
mov
pop
mov
lret
mov
xchg
pop
out
jb
mov
xchg
loop
mov
js
js
sbb
imul
out
enter
test
push
or
mov
test
lret
sub
fadds
pop
inc
shlb
hlt
test
cmp
test
push
faddp
and
imul
lcall
sub
cmp
lret
cmp
cmc
dec
cli
push
clc
and
mov
inc
callw
jnp
outsl
in
out
testl
aam
fs
rcrl
cmc
test
lcall
subl
jo
popf
movsb
jg
ja
pop
pop
sbb
push
sbb
nop
jmp
out
xchg
adc
nop
mov
pop
adc
sbb
or
clc
mov
scas
jno
xchg
cvttps2pi
lcall
ror
dec
mov
out
test
cmpsb
xchg
adc
fstpt
mov
or
mov
mov
pop
cmp
imul
inc
mov
fcomps
pushf
lea
jmp
movb
movl
pushf
push
push
movl
pusha
mov
lea
jmp
in
jmp
stos
negl
xchg
mov
sbb
adc
mov
inc
adc
out
xlat
xchg
shl
push
adc
cltd
pushf
mov
js
jl
lock
js
add
adc
js
lcall
mov
jl
dec
es
inc
mov
and
inc
sbb
push
xor
lcall
push
jb
or
outsb
and
out
clc
mov
adcl
insb
lret
and
shrl
push
jge
cmp
add
mov
imul
lock
pop
in
mov
fs
fwait
out
mov
or
lods
sbbb
enter
cmpsl
out
ror
dec
fiaddl
sub
jg
leave
inc
mov
stos
adc
pop
cmp
ss
jo
pop
ljmp
imul
xchg
lods
imul
cld
adcl
fisttps
jle,pt
jl
sbb
adc
add
xor
adc
sub
jne
rolb
adcl
aaa
sub
or
lods
xor
inc
push
js
dec
iret
push
out
mov
shlb
cs
adc
xchg
adc
mov
rorl
fdiv
xlat
mov
cmp
dec
loope
push
xor
and
pushf
clc
mov
stos
rorl
inc
mov
fnstenv
shr
shll
std
test
aaa
push
sbb
push
movsl
mov
jecxz
sbb
pop
or
mov
push
pusha
mov
fisttps
add
mov
jecxz
in
xor
clc
or
mov
mov
push
fistps
xor
nop
dec
xor
fsts
enter
stc
loope
xchg
sbb
inc
push
and
movsl
dec
push
test
dec
aad
shrb
mov
mov
in
adc
mov
mov
lods
jl
ret
cltd
xchg
mov
cmpsb
repnz
push
and
mov
stos
inc
jmp
pushw
xor
outsl
or
dec
cmp
add
xor
add
dec
sarl
dec
mov
adc
pop
or
xchg
xchg
dec
aam
ss
insl
je
jae
call
cmp
icebp
mov
in
sbb
lret
or
ds
fsts
call
adc
cld
pop
daa
lods
and
cli
fdivrs
iret
in
ljmp
xchg
inc
pop
jg
nop
bswap
mov
jg
mov
push
fdivrl
into
add
movsb
les
pop
inc
ficomps
sub
aas
push
les
loopne
std
scas
push
mov
loopne
pushf
push
movl
pusha
call
pushf
jmp
faddl
mov
clc
mov
fs
pushf
leave
stos
hlt
pushf
es
xlat
pop
jge
adc
sti
loop
lods
xchg
movsl
scas
mov
mov
in
or
jecxz,pn
imul
or
fs
mov
out
mov
and
idivb
xor
and
add
sub
mov
in
cmpsb
int3
and
jp
scas
repz
jg
mul
imull
dec
out
add
sub
jge
mov
xchg
insb
xor
mov
xor
or
sub
or
xchg
int3
pop
push
sub
adc
add
or
push
mov
test
dec
add
jns
daa
scas
addr16
dec
inc
out
js
pop
dec
popf
push
sbb
shrb
jle
fsubrl
inc
dec
cld
outsb
xchg
cmp
test
mov
dec
sub
mov
call
sub
pop
mov
add
sub
imul
movl
jle
mov
add
add
and
stos
cmp
imul
out
inc
mov
push
mov
add
negl
lds
jns
sbb
sub
jns
test
in
mov
pop
inc
rclb
sbb
jb
xchg
scas
icebp
out
dec
push
xor
jge
mov
add
leave
lods
adc
pop
data16
dec
lods
imul
xchg
pop
in
dec
scas
mov
stc
mov
cmp
icebp
mov
fldl
sbb
cmp
inc
sub
jmp
push
mov
icebp
mov
popa
push
fsts
mov
jo
cmp
and
jne
dec
not
mov
data16
in
enter
lret
sbb
cli
mov
sbb
inc
mov
pop
dec
pop
jb
mov
sub
xlat
xchg
adc
mov
pop
xor
out
jecxz
sbbl
stos
push
inc
fisubl
sar
push
dec
xchg
xor
enter
popa
sub
xchg
jmp
xchg
or
lods
icebp
mov
sub
notl
adc
ljmp
sahf
sbb
addr16
mov
pop
aad
jno
lcall
push
cmp
faddl
out
add
aas
add
pop
mov
adc
ljmp
xchg
adc
sbb
out
aam
pop
test
adc
js
sbb
dec
insl
sub
out
add
jo
pop
jp
insb
iret
mov
leave
push
outsb
sahf
test
int
subl
in
out
sbb
jecxz
push
das
in
push
xchg
into
pop
lret
fnstenv
xor
frstor
sbb
aas
mov
sbb
sbb
and
adc
add
loope
repnz
cmp
jl
cmp
cmpsl
shrl
fsubr
xchg
jnp
cltd
mov
aas
je
push
cltd
xchg
xor
scas
and
dec
insb
iret
call
push
ljmp
push
push
push
out
push
jne
ret
mov
push
pop
dec
sbb
mov
fcomps
insl
push
jbe
push
das
jge
cmc
ss
fstpt
fistpl
mov
xor
dec
jo
lods
scas
outsb
insl
aaa
inc
sbb
mov
nop
imull
add
lods
inc
push
inc
sub
jl
sub
xlat
jmp
popa
mov
sarb
loop
sbbb
js
jge
hlt
mul
sub
mov
jle
lcall
addr16
mov
push
aam
sbb
xchg
loopne
lock
and
add
insb
inc
mov
addr16
mov
push
mov
lret
jne
nop
int
pushl
jnp
jb
mov
xor
das
outsb
cmpsl
sbb
sbb
xchg
and
xor
sahf
pop
cli
sti
adc
std
iret
inc
sub
jae
sub
rcrl
in
dec
xchg
cs
movsb
mov
pop
dec
push
push
push
add
push
xor
mov
cmc
jg
cmp
dec
dec
mov
test
test
imul
xor
sti
stos
cmp
psrad
mov
jg
jo,pt
ret
mov
test
mov
fbld
mov
adc
and
insl
sub
push
mov
std
adc
jmp
xor
fiadds
test
cli
xchg
pop
arpl
test
inc
mov
xor
test
fildll
or
sub
pop
out
aas
push
adc
xor
das
or
mov
in
push
pop
inc
movsl
xchg
fldt
mov
enter
data16
outsl
or
mov
test
mov
adc
scas
sti
xchg
or
scas
cli
movsl
loop
cli
cltd
stc
adc
jnp
jno
or
pusha
jno
dec
iret
mov
and
mov
adc
mov
inc
mov
dec
or
cmp
ljmp
inc
or
ret
adc
fcomps
lds
jp
and
sub
clc
jmp
mov
adc
sbb
or
jmp
mov
lret
rclb
pop
faddp
jge
andl
mov
or
mov
sub
jge
and
test
cmp
hlt
lret
xlat
xor
std
mov
loope
imul
xlat
fwait
push
js
data16
sahf
out
mov
and
dec
dec
repz
bound
or
into
cmp
push
and
or
mov
dec
repnz
sbb
push
aad
and
aam
dec
or
add
daa
jbe
test
xchg
imul
int
int3
mov
or
fnsave
mov
jle
mov
rcrl
and
cwtl
ret
push
daa
jbe
push
mov
xchg
fidivrs
pop
mov
pop
in
lea
mov
push
pop
icebp
mov
mov
mov
xchg
and
cmc
mov
jno
sahf
inc
pop
dec
jp
std
sub
testl
lea
mov
int
sbb
inc
into
xchg
mov
pop
leave
push
ss
dec
sub
lods
fimull
addr16
push
loop
lret
stos
ss
repnz
inc
scas
mov
cmpl
inc
shrb
push
scas
repz
and
cmc
sub
jo
insl
or
pop
pop
adc
or
pop
inc
and
das
cmp
inc
fisubrs
cmpl
inc
ss
popf
ret
xchg
sub
push
push
jb
jle
sti
loop
push
dec
mov
mov
icebp
popf
and
inc
mov
fsubrp
cmp
aas
pop
push
sbb
outsl
xor
ficomps
popa
fistps
pushf
add
jne
pop
jnp
add
mov
mov
dec
jbe
ret
xchg
gs
jbe
bound
orb
jo
push
subb
in
inc
push
and
and
sub
mov
popa
js
lds
aad
dec
mov
mov
fildl
es
movsl
adcb
fistps
mov
into
mov
data16
or
xor
movsl
pop
adc
or
sbb
push
btc
push
and
and
mov
aaa
add
cli
in
sarb
push
int
lcall
mov
push
out
ficompl
shr
xchg
test
out
jge
mov
fisubs
mov
divb
sbb
jecxz
pusha
mov
jge
xor
xchg
ds
ret
enter
jae
dec
or
ss
mov
adc
xor
and
or
inc
add
je
push
cmp
pop
mov
andb
xchg
push
test
pop
idiv
loopne
pop
mov
pushf
adc
inc
sub
xor
ja
jge
xchg
in
out
mov
dec
fdiv
mov
mov
popf
mov
push
ret
rcr
jmp
lds
scas
pop
test
and
fmuls
repz
out
loop
leave
popf
fldl
sbb
push
dec
ljmp
cld
out
lock
sbb
sti
jnp
add
ja
jg
pushf
jmp
push
out
pop
out
cmp
and
mov
fildl
icebp
aam
mov
mov
mov
mov
inc
jmp
xchg
mov
incl
iretw
cltd
mov
fdivrl
idivb
pop
push
push
insl
jmp
lahf
andl
mov
fdivl
mov
jle
cwtl
pop
or
das
dec
sti
shlb
fs
dec
std
fistpll
adc
mov
dec
in
stos
adc
cmpsb
xchg
jbe
jno
clc
jbe
test
mov
inc
adc
movsl
repz
sub
xor
cmp
xchg
push
mov
push
sub
aad
lods
shrb
mov
orb
fwait
lock
mov
inc
mov
sahf
xchg
or
mov
scas
shlb
lret
ret
ja
icebp
repnz
ljmp
sub
js
cmp
aam
xor
cwtl
in
pop
mov
xchg
and
xor
push
das
mov
test
sahf
iret
cmp
icebp
lods
out
in
in
jge
stc
adc
or
test
leave
inc
mov
shr
movb
pushf
movl
movb
pusha
push
lea
jmp
insb
or
ljmp
das
jnp
dec
sub
xchg
stc
loop
mov
shr
pop
test
push
or
cmp
ja
sbb
fistpl
cli
and
fistps
in
icebp
jl
insb
push
inc
mov
inc
push
fs
pop
adc
inc
aam
test
es
out
mov
xchg
or
add
xor
mov
add
lahf
cmp
add
add
mov
add
cltd
insl
addb
push
xor
xchg
mov
in
test
test
push
add
xchg
sbb
dec
rcr
dec
out
or
inc
xor
add
xchg
mov
adc
xchg
push
stos
mov
add
adc
xchg
imul
mov
dec
jp
icebp
adcb
jb
mov
and
inc
pop
add
cwtl
bound
push
adc
pop
fisubrs
mov
xchg
aaa
mov
jne
xorb
dec
mov
test
pop
imul
notb
lahf
xorl
sub
test
cltd
jge
clc
int
mov
mov
mov
mov
jecxz
inc
gs
out
or
pop
push
mov
dec
subb
setg
jmp
xchg
pushl
add
inc
mov
mov
push
jns
test
rcrl
xchg
mov
in
mov
mov
mov
or
mov
cmpsb
jbe
aaa
jo
fstl
cmp
xor
xchg
sub
leave
call
jge
xchg
mov
xorl
sahf
mov
test
cmp
mov
rol
insb
negb
ljmp
jbe
xchg
push
inc
push
mov
test
push
adc
dec
lret
pop
icebp
hlt
xor
out
adc
ret
or
imul
pop
push
fbld
mov
or
cmpsl
xor
movsl
cs
rcll
push
cmp
leave
mov
jmp
test
cmpsl
in
in
mov
mov
pop
lret
loopne
mov
insl
dec
stos
pop
loop
rcrl
push
add
jae
jnp
ret
loopne
testb
jno
push
outsl
sbb
outsl
jns
cmp
sub
adc
loopne
push
fwait
sub
sub
dec
add
ds
cmp
decl
adc
pop
or
mov
mov
pushf
sbb
mov
aas
pop
stc
or
mov
fidivl
mov
leave
ficomps
in
push
lods
fs
mov
jp
push
cmc
jge
push
in
mov
in
push
jbe
push
mov
push
shlb
adc
mul
ror
cmpsl
and
xor
andb
fiadds
inc
adcb
pop
les
inc
and
outsb
cmp
cmp
adc
dec
push
sbb
fcmovu
jne
notl
and
mov
jmp
std
adc
pop
jge,pt
insb
out
mov
cmpb
dec
mov
push
stc
lods
mov
notb
movd
imul
add
inc
mov
scas
dec
rcll
jmp
push
jecxz
test
movsb
fdivl
and
mov
or
dec
mov
dec
inc
rcr
lahf
sbb
mov
inc
push
jge
inc
pop
or
ret
xor
lock
test
and
xor
int
insb
xchg
ljmp
inc
mov
or
aas
aas
into
pop
cs
sbb
int3
jl
sahf
ds
sahf
cmp
ja
outsb
test
shll
aad
repnz
aaa
push
test
xlat
sub
mov
xorb
dec
mov
mov
cld
or
dec
mov
movsb
dec
mov
imul
jne
pop
ficoml
hlt
push
jo
nop
pop
repnz
cmp
adc
test
pop
ljmp
jo
fisubs
adc
pop
iret
es
es
push
xchg
lock
xor
add
in
add
push
or
push
dec
mov
aaa
dec
jge
inc
hlt
push
stos
pop
pop
sahf
idivl
call
push
adc
test
out
add
xchg
cmp
sbb
sub
push
mov
or
fs
adc
mov
cmp
test
pop
inc
icebp
frstor
out
mov
or
xor
or
iret
mov
sbb
sub
jmp
jnp
into
mov
punpcklwd
scas
adc
andb
push
ficomps
loope
xor
or
ljmp
inc
ret
lret
inc
fs
cs
sbb
cmp
dec
mov
into
sbb
fmul
jo
xor
sbb
dec
pop
lahf
data16
dec
outsb
pop
and
fistps
pop
xor
stos
divb
cmc
lock
add
jl
outsl
inc
mov
insb
mov
incl
repnz
pop
sub
in
pop
xchg
sub
xlat
adc
pop
inc
sub
fcmovnb
push
and
jp
xlat
movsb
xor
imul
inc
fbld
jne
mov
push
cmpsb
movsb
popf
xor
or
add
es
mov
sbb
cs
dec
std
nop
loop
adc
lds
jo
js
hlt
adc
xorb
dec
aam
fistpl
out
push
mov
dec
fmul
test
pop
sbb
out
xchg
lea
scas
repz
ss
sbb
loop
jnp
ds
and
iret
jo
or
fisubs
repz
in
fdivrs
aaa
and
inc
in
xor
dec
push
loope
push
mov
out
cmc
pop
dec
cmpsl
push
mov
es
aam
or
adc
pop
adc
arpl
jmp
out
enter
lds
loope
popa
dec
addr16
cmpsb
jb
or
ret
and
sub
sbb
mov
sbb
cmp
add
cmp
jp
adc
push
repnz
arpl
leave
pop
enter
sbb
test
insb
adc
inc
mov
test
inc
je
aam
push
shlb
js
mov
add
clc
sbb
les
mov
shll
mov
push
xchg
add
mov
sbb
int
mov
mov
lcall
push
ljmpw
and
inc
mov
jecxz
cmp
jns
inc
xchg
adc
dec
and
imul
out
jbe
mov
push
pusha
jge
xor
les
shll
mov
nop
subl
sti
ret
lds
cltd
jbe
mov
add
hlt
xchg
xchg
imul
and
lcall
sub
in
lea
or
lods
and
adc
aad
push
loop
loope
and
mov
mov
and
add
jo
dec
lds
adc
movl
pusha
pushl
pushl
lea
jmp
push
lock
std
std
xorb
insb
ss
ret
jl
fmull
daa
data16
pushf
mov
pop
int3
ss
aad
cld
lods
jge
pop
in
call
dec
aam
push
int
mov
dec
sahf
push
ja
and
jle
add
incl
loop
in
xchg
push
lods
adc
ja
mov
sbb
jmp
pop
rorl
movl
mov
movl
pushf
pushf
lea
jmp
fstpl
push
repnz
jmp
mov
clc
mov
sub
inc
pop
pop
or
lea
sbb
push
aam
push
out
cmc
or
int
cli
or
cmp
jecxz
std
mov
mov
push
pop
les
lock
fs
mov
xor
sub
dec
stos
jp
jno
and
adc
push
addl
or
adc
sarl
jne
mov
xchg
jle
mov
push
pop
mov
push
les
test
add
loopne
cli
cmpb
sub
xchg
lcall
movl
pushl
mov
call
mov
in
gs
stos
call
add
jge
mov
mov
or
or
rcr
lock
out
or
bound
mov
insl
cmp
ja
push
dec
aas
and
xchg
mov
xchg
or
sub
mov
je
lods
insl
inc
mov
mov
movb
push
movl
jmp
movl
call
cwtl
mov
bound
popf
inc
data16
push
or
push
icebp
lods
mov
pop
rclb
in
cmp
inc
ret
outsl
in
rcll
arpl
sbb
mov
mov
push
sub
out
cmc
jle
jmp
out
jge
popa
testl
dec
add
and
jo
adc
or
add
cld
push
xchg
int3
xchg
or
inc
mov
mov
add
jp
loopne
stos
mov
sbb
out
mov
stos
cld
mov
in
jecxz
aad
sub
dec
insb
mov
and
fld
imul
loope
dec
push
addr16
xchg
xchg
push
push
or
cmp
mov
and
adc
and
nop
sub
insl
sbb
sub
int
jg
cmp
into
ds
rcrb
fidivl
jns
mov
gs
xor
repnz
shr
test
aad
and
ds
push
push
jmp
add
mov
lcall
dec
cmp
dec
sub
sbb
push
pop
inc
mov
lret
movl
call
mov
mov
movl
mov
mov
lea
jmp
xlat
fdivrl
push
imul
inc
lds
add
enter
in
pop
xor
outsb
imul
popa
jge
leave
repnz
xor
or
and
negb
ss
mov
repz
dec
test
sub
adcl
xchg
adc
inc
mov
jmp
push
repz
daa
nop
mov
sbb
outsl
filds
pop
es
push
push
pop
inc
xchg
push
lds
mov
test
fadd
sub
in
in
xchg
push
lods
mov
cmp
adc
xor
pop
fidivl
lcall
out
dec
shlb
iret
dec
sahf
inc
mov
in
cli
pushf
jmp
push
mov
leave
xchg
scas
mov
xor
sbb
test
fdivr
aaa
jge
adc
stc
sbb
push
lock
movntps
xor
out
cmp
aaa
test
in
mov
jmp
test
sbb
out
mov
orl
push
dec
sar
pop
mov
jl
outsl
mov
cmpsb
push
out
leave
push
out
aam
push
outsl
sub
inc
mov
mov
call
insb
daa
add
inc
sbb
ds
fildll
push
pop
push
adc
jnp
ljmp
pop
shl
into
mov
and
test
dec
addb
or
mov
sub
dec
pop
js
call
and
dec
jo
lahf
imul
push
mull
fstpt
jae
mov
ss
lods
jne
cmp
lcall
lock
repz
cmp
test
push
push
and
ret
vpmulhw
xor
imul
enter
sbbl
das
mov
aad
jmp
gs
xor
mov
rolb
roll
sbb
and
add
xchg
sub
pusha
fmuls
iret
lods
ja
data16
jmp
add
arpl
ja
fwait
push
inc
fldl
pop
pop
ljmp
test
xchg
pusha
js
sub
test
push
loope
xchg
cli
cld
inc
mov
inc
lods
int
xor
mov
faddl
test
xchg
pop
loop
sbb
ljmp
filds
cwtl
push
dec
addl
mov
jb
jno
ja
jo
add
mov
sarb
sahf
shlb
sub
push
out
iret
jo
or
ficomps
ljmp
pop
jg
or
push
mov
mov
mov
mov
jge
xchg
int
call
mov
xchg
or
jecxz
and
call
xchg
xor
mov
inc
and
adcl
push
mov
shll
mov
sbb
aas
inc
rcpps
mov
out
bound
test
out
mov
lea
insb
sub
data16
dec
sti
add
xor
pop
test
in
mov
cmc
mov
mov
repz
cltd
mov
push
adc
mov
data16
mov
js
pushf
movl
pusha
movw
lea
jmp
jmp
pusha
pushf
pushf
pushf
movl
jmp
jecxz
test
xchg
adcb
mov
lcall
shlb
in
daa
mov
dec
je
xor
rorb
xchg
pushl
bound
inc
adcb
mov
iret
sbbb
jmp
movsb
pop
adc
stos
roll
jns
sub
rclb
sub
cwtl
adc
xchg
inc
mov
bound
mov
lret
aas
shll
insl
mov
adc
outsl
out
pop
lahf
push
push
sbb
dec
arpl
inc
dec
add
sbb
cltd
sbb
shll
lcall
mov
dec
lret
xor
mov
cmp
dec
cli
fsubrs
std
push
stos
fmull
xor
or
pop
ss
adc
addb
and
and
orb
adc
xor
mov
cmp
divl
sub
sub
mov
stos
pop
ljmp
repz
xor
into
pushf
dec
add
sub
add
push
nop
repz
inc
pop
xor
push
xchg
sbb
or
scas
or
insb
or
sbb
lcall
mov
lret
mov
jae
pop
loop
shlb
mov
xor
ja
aam
test
movsb
jl
jo
addr16
xchg
lret
stos
icebp
push
das
mov
shrb
rorl
test
js
mov
mov
mov
inc
adc
inc
pop
aas
scas
clc
pop
lahf
pop
lret
push
dec
nop
daa
mov
int3
mov
push
inc
mov
test
sbb
or
stc
fsubl
loopne
repz
pop
inc
cmp
sub
fadds
xor
pop
fcmovbe
outsb
sub
mov
push
sbb
sub
mov
inc
stc
pop
fimull
fwait
add
jb
sahf
and
push
popa
mov
data16
test
test
pop
lahf
ret
push
cmp
dec
dec
add
repnz
push
shrl
and
pop
jecxz
aad
ret
loopne
mov
fnstenv
shlb
frstor
mov
or
pop
popa
pop
ds
add
adc
rorl
hlt
cmp
or
mov
xor
fisttpll
addr16
iret
push
or
outsl
data16
loopne
jge
mov
cmp
insb
push
shl
push
xchg
adc
daa
lahf
jbe
inc
dec
stc
mov
cli
pop
popf
push
pop
inc
cltd
stc
mov
xor
sti
stos
repz
insl
sbb
pop
ret
arpl
fistps
inc
imul
xchg
stos
int3
lea
stos
in
subb
jge
rcrb
das
xchg
test
sti
jmp
add
push
ret
adc
mov
aad
cli
or
das
jg
mov
fnsave
xchg
mov
out
popf
enter
arpl
and
stos
aam
int
cmc
mov
inc
scas
out
repnz
lods
and
sbb
and
ds
jnp
aas
das
iret
jge
jg
mov
sub
lods
cmp
imul
and
sub
mov
cmp
dec
leave
cmp
sbb
shrl
out
and
pop
mov
mov
mov
xchg
ljmp
jns
dec
sub
mov
movsl
mov
sti
iret
jl
in
pop
or
jmp
mov
or
and
bnd
xchg
sub
xor
call
out
test
pop
sbb
mov
stos
aas
stos
fcomps
test
inc
mov
xor
lcall
sub
lcall
int3
movsl
add
cmpsb
es
lret
push
mov
mov
xchg
lea
dec
and
dec
or
imul
inc
push
pop
sahf
mov
into
je
mov
stc
pop
imull
xor
mov
sbb
jp
test
lods
lods
ja
pop
filds
loopne
sbb
and
inc
mov
ffree
std
cs
adc
aas
xchg
loopne
rcl
push
out
dec
enterw
push
mov
shll
stos
or
cmpsl
pop
pop
je
push
sub
inc
cli
pop
data16
mov
and
andb
sbb
inc
mov
mov
push
outsl
dec
lds
xchg
cmp
jb
xchg
repz
push
test
cltd
jo
loope
fmuls
mov
mov
jge
mov
stos
rcr
test
jnp
rcrb
pop
xor
mov
cmpsb
mov
das
lcall
lret
or
popa
cmp
pusha
pusha
movl
jmp
pop
jl
stos
stos
inc
adc
push
jl
js
pop
xchg
ficoml
mov
dec
push
into
loope
idivb
into
shll
adc
push
mov
lds
push
js
mov
cli
inc
cmp
ljmp
jo
inc
das
pushf
incl
push
mov
in
in
sub
inc
fcomip
push
test
movsb
ret
jp
pushf
clc
mov
clc
lock
sub
std
stos
in
add
fsubrl
and
sub
lret
push
xlat
fisubrl
and
cmpsl
mov
clc
lods
dec
outsb
jmp
fldl
inc
mov
pop
out
mov
mov
push
fisubrl
inc
inc
inc
push
andb
jnp
jnp
dec
and
cmpsb
negl
mov
jecxz
addr16
sub
jmp
inc
adc
les
xlat
add
stc
or
pop
and
notl
pop
jg
inc
lret
xchg
push
pop
insb
jns
out
jne
mov
adc
cmpb
out
hlt
push
inc
mov
popa
pop
shrb
jns
add
pop
mov
pop
mov
push
mov
int3
pushf
xchg
mov
popl
ljmp
mov
lea
out
cmp
orl
into
push
pop
pop
fcoml
jne
xor
xchg
xchg
jp
stos
or
jns
int
lock
sbb
xchg
into
sub
call
psllw
push
pop
xor
sarb
mov
jne
or
xchg
jmp
adc
jne
sbb
fadds
inc
rclb
out
mov
pop
scas
daa
in
lods
scas
dec
push
fwait
push
xchg
xchg
aam
inc
and
pop
inc
and
sub
pop
mov
not
xor
stos
outsb
pop
inc
outsl
test
jecxz
bound
pop
fcmovu
cmp
pop
jmp
inc
pushf
mov
xchg
or
xchg
jg
call
adcl
loope
mov
xor
mov
mov
jne
mov
mov
sbb
enter
cli
test
xchg
push
mov
and
add
lret
outsb
lcall
mov
mov
je
not
jl
icebp
mov
in
icebp
inc
sub
lds
pop
xchg
stc
test
jmp
sub
shll
xor
ljmp
mov
adc
mov
testl
pop
int
inc
adc
lcall
das
dec
jg
sbb
nop
scas
sub
cmp
push
sub
inc
xlat
xchg
call
inc
mov
iret
or
sbb
mov
mulb
sub
arpl
cmp
out
jns
adc
in
xlat
repnz
inc
lock
cmp
test
inc
pop
adc
out
mov
inc
mov
mov
hlt
mov
insl
in
sub
mov
cmpsb
adc
leave
jecxz
push
mov
jge
pop
cmp
push
mov
mov
je
int3
xor
mov
fisubs
outsl
pop
das
outsl
adcb
insl
push
stos
sbb
rorl
rcrl
lret
out
mov
mov
test
inc
jge
jg
mov
xor
lock
iret
out
xchg
mov
xchg
xchg
sbbb
jns
xchg
je
fdivrl
leave
mov
test
dec
and
or
sub
popa
mov
jae
ss
push
cltd
test
push
scas
adc
sbb
pop
daa
and
js,pn
mov
sub
test
dec
cmc
and
jne
ja
cmp
ss
and
xchg
jle
adc
adc
loope
arpl
test
mov
cli
or
sub
xor
rcr
clc
mov
pop
adc
rorb
pop
lock
add
pusha
lahf
inc
mov
mov
cmp
call
add
xor
out
mov
mov
jb
push
or
jg
push
std
andl
aaa
mov
or
pop
mov
out
and
push
mov
icebp
dec
or
mov
jp
iret
and
or
les
cmp
xor
daa
push
lahf
jbe
out
mov
fsts
dec
rorb
sub
rolb
mov
in
or
pushf
fsubr
add
movsb
push
fwait
add
push
adc
ja
incl
pop
test
inc
jecxz
push
and
movl
movb
mov
pushf
pushf
lea
jmp
xor
push
out
jg
mov
push
pushf
int3
jge
push
cmpsb
and
mov
imul
ret
add
daa
xlat
cwtl
sbb
mov
out
data16
xchg
xor
mov
push
mov
sarb
or
lds
popf
ffree
stos
es
test
jge
pop
mov
push
mov
ja
mov
xlat
add
sbb
pop
push
fcoml
jmp
adc
ds
stc
faddp
pop
divl
pop
cmp
push
cld
jmp
rcrl
xchg
xchg
fisubrs
test
movsb
mov
enter
loopne
ficoml
sbb
or
inc
push
icebp
jo
or
shlb
lret
mov
gs
inc
pop
add
ja
hlt
cmpb
stc
je
mov
mov
inc
shlb
shlb
xchg
xor
stos
pop
inc
negb
mov
in
jo
mov
and
fisttps
push
dec
or
or
pop
add
xlat
lahf
out
hlt
dec
mov
fwait
imul
out
xor
out
call
out
push
push
push
out
push
stos
add
xor
mov
push
dec
sub
into
lock
adc
cmp
add
add
pop
jns
movsb
cmp
jge
lcall
aam
jl
inc
push
xchg
scas
mov
mov
add
push
loope
sti
push
sub
xlat
pop
xchg
jbe
sahf
pop
mov
push
inc
pop
dec
inc
adcb
push
gs
cltd
out
mov
jo
lret
arpl
jge
es
ljmp
scas
ffreep
inc
dec
pop
jno
xchg
andl
adc
cmc
cltd
and
inc
mov
cwtl
jp
test
push
cld
mov
nop
adc
je
jnp
mov
sub
jne
xor
shll
mov
mov
lods
loop
dec
int
shlb
mov
cmp
and
mov
imul
loop
ss
iret
and
loope
xchg
lods
push
loop
les
adc
jae
mov
mov
iret
mov
add
pop
push
cmpsl
xchg
push
call
jbe
jmp
movsl
loopne
std
adc
jo
sub
cmc
xor
push
sub
mov
jg
rcrl
ja
jle
repnz
dec
push
sbb
notl
sar
jbe
nop
test
das
out
mov
rcrl
pushf
push
and
pop
push
mov
push
mov
or
fsubs
cmpsb
push
push
in
cmp
jge
outsb
jmp
enter
sub
stos
rcll
inc
mov
jle
jmp
sarl
inc
push
mov
popf
ret
jns
jns
push
es
fsubs
jp
int
in
aaa
setbe
adc
adcb
pop
adc
xchg
fwait
jns
push
test
scas
lods
sti
mov
pop
dec
mov
jmp
aaa
pop
lea
or
push
xchg
daa
dec
adcb
dec
pop
xchg
sub
push
mov
jbe
in
arpl
dec
int3
push
xchg
dec
int3
aaa
hlt
test
shr
dec
dec
push
out
out
jb
fildl
scas
push
aad
xchg
gs
mov
adc
add
xchg
loop
mov
sbb
xor
cmp
xchg
dec
add
sbb
int
jp
pop
pop
jge
push
xor
xor
inc
sbb
inc
mov
in
call
mov
adc
je,pn
or
dec
cmp
and
xchg
pop
xor
call
daa
pop
or
mov
sti
lea
xor
sbb
data16
fs
jae
stos
xchg
insb
jecxz
mov
out
shlb
cmp
push
lods
sti
inc
sbb
pop
add
out
inc
mov
xchg
test
dec
stos
jmp
cmp
stc
mov
out
scas
shlb
fnsave
loopne
mov
push
gs
mov
inc
shl
cmp
cmp
mov
xor
in
int3
jo
adc
cmp
cmpsb
into
lea
mov
sbb
mov
xor
xchg
cltd
sub
mov
loop
or
fs
mov
pop
and
xchg
inc
inc
push
sub
vpshad
stos
cmp
stc
jnp
stos
fnstenv
mov
lea
mov
xor
xchg
mov
xchg
ljmp
sbb
data16
cmp
jl
data16
add
cmp
int
pop
movsl
mov
mov
xchg
int
pop
imulb
addb
fsubrs
js
cld
loopne
pop
mov
les
push
pop
inc
ss
int3
mov
iret
out
fsub
test
xchg
adc
sub
sub
xchg
int
negl
push
dec
dec
mov
sarl
mov
stos
rolb
fnstcw
bound
stos
idiv
test
bound
mov
icebp
mov
in
cmp
cmp
or
sub
pop
mov
into
sti
inc
adc
jl
repnz
pop
lds
push
pop
jb
ret
out
int3
movb
mov
out
decl
testb
xor
repz
fs
xorb
fmull
loope
retw
sti
insl
aad
into
pop
sub
frstor
out
leave
enter
jae
das
adc
mov
test
jae
or
pop
dec
sub
imul
sbb
mov
pop
jg
sub
push
xchg
mov
test
ret
mov
testl
inc
adc
mov
jle
mov
cmp
aaa
lahf
pop
mov
mov
push
sarb
stos
push
nop
and
scas
test
aad
pop
mov
rclb
mull
adc
fs
cmpsb
cltd
mov
je
or
movsb
in
or
out
sbb
lret
add
dec
push
jbe
inc
mov
in
jecxz
add
lret
lds
pop
scas
in
xchg
add
xor
rolb
add
jecxz
lods
cltd
fcomps
leave
jmp
jnp
xor
fsubrl
test
push
and
bound
int3
div
andb
dec
push
mov
xor
lods
inc
pop
add
das
xchg
or
mov
insl
mov
sbb
pushf
mov
pushf
mov
inc
mov
xor
dec
inc
out
pop
ds
fdivr
xchg
jo
pop
cmp
stc
stos
mov
mov
int3
push
mov
fs
cld
sbb
imull
add
sahf
and
and
pop
cld
mov
mov
in
pop
add
cltd
fmul
sbb
push
out
add
ljmp
mov
jnp
sbb
mov
push
repnz
ret
cmpsb
sbb
mov
js
mov
clc
fidivrl
xor
shll
push
push
xchg
imul
sub
fistpl
nop
insb
enter
jl
push
push
push
add
or
or
mov
je
push
and
lds
cld
mov
cmp
mov
pop
inc
mov
test
mov
or
push
dec
jnp
and
xor
push
sarl
push
movsl
iret
mov
test
sahf
das
pop
cmp
ret
xlat
jno
js
loopne
dec
nop
fdivr
add
push
stos
clc
add
scas
push
xlat
add
stc
inc
ja
int3
mov
mov
sbb
cmpl
jmp
into
sub
shlb
inc
imul
xchg
fsubs
stos
and
cmp
jmp
add
mov
stos
add
sahf
popf
fsubl
mov
push
pop
outsb
and
push
or
insl
xchg
inc
mov
fldlg2
push
add
mov
testb
bnd
adc
mov
push
shlb
sbb
sub
add
push
push
dec
mov
loop
mov
xlat
xchg
push
mov
stos
imul
das
cmpsl
or
fwait
int
in
test
xor
ja
ljmp
aad
test
xlat
and
int
jg
dec
mov
sbb
outsl
adc
push
ret
xchg
mov
cmp
cmp
rcrb
sbb
push
gs
push
dec
movaps
ja
dec
cli
xchg
jnp
pop
out
shll
iret
fwait
mov
scas
gs
outsb
popa
iret
lcall
lods
in
or
leave
sbb
push
pusha
sub
pop
loopne
test
test
dec
mov
into
push
push
add
rcll
adc
cmpsb
mov
push
mov
imul
aas
and
ret
cmp
push
out
push
push
jae
adc
addb
bsf
pop
jg
adc
movsb
push
outsb
jno
sbb
push
sub
pop
inc
inc
sbb
clc
push
dec
stos
out
sbb
ja
not
loop
lea
cmp
mov
cmp
xchg
scas
mov
and
mov
xchg
mov
push
ja
imul
mov
mov
and
shll
xor
imul
das
sbb
divb
data16
inc
lea
sbb
dec
fwait
dec
arpl
jle
addr16
das
xchg
jle
pop
mov
movsb
mov
imul
filds
sub
adcb
push
adc
scas
push
mov
test
pop
add
cld
stos
adc
and
stos
imull
inc
dec
std
or
push
scas
arpl
cs
nop
test
fnsave
shl
pop
jge
hlt
dec
neg
and
cmp
pop
mov
rcll
ret
push
subl
lahf
mov
dec
cld
sbb
xchg
pop
shrl
push
xchg
rolb
pop
mov
aas
dec
ret
rol
loopne
cmp
sbb
cmpsl
jns
fisttpl
push
stos
jg
push
and
jae
jb
mov
push
aam
cmp
pop
inc
add
lahf
mov
enter
loop
aas
lret
or
mov
sarb
cmp
inc
mov
mov
jmp
ss
cmp
outsb
dec
iret
lahf
mov
rcll
add
mov
jo
pop
xor
in
dec
adc
cmp
lahf
flds
hlt
cmpsb
out
ljmp
mov
push
push
sbb
push
xor
and
and
push
dec
sub
lcall
loope
xchg
enter
push
arpl
out
xchg
outsl
jle
ja
imul
jge
stos
scas
pop
and
xchg
xlat
jg
cmp
mov
fs
jno
popa
push
inc
and
inc
sbb
xchg
pop
pushf
push
push
enter
dec
dec
jae
outsb
dec
add
jnp
inc
mov
fsubs
movl
mov
pushf
pushl
pushf
lea
jmp
pusha
pushf
pusha
movl
jmp
je
ret
inc
inc
fsub
testl
mov
pushf
adc
pop
sbb
insw
lahf
imul
inc
push
jb
mov
int3
fdivrs
stc
outsl
pop
mov
and
insl
cmp
bound
out
jb
in
ljmp
inc
movb
or
inc
xchg
xchg
test
lret
inc
mov
into
add
les
mov
mov
cmp
movl
jne
leave
into
addb
lahf
ret
sub
in
push
mov
enter
pop
push
dec
in
lret
xor
cli
push
dec
lea
call
jg
test
dec
xchg
sub
add
scas
imul
sahf
out
or
mov
pop
sub
mov
push
icebp
push
adc
sub
xlat
daa
mov
pop
das
jge
out
pop
mov
jnp
adc
mov
dec
fisttps
rcrb
dec
shrl
in
fisubl
add
aas
inc
aad
xchg
fs
cmp
outsb
int
scas
adc
push
dec
lcall
cmp
mov
pop
or
mov
repz
inc
inc
mov
insb
mov
movl
pushf
pushf
pushl
lea
jmp
pushf
pushf
movl
push
movl
mov
push
pusha
push
lea
jmp
mov
bnd
jecxz
xor
pop
jp
inc
adc
insb
dec
or
ffreep
aas
and
sub
add
push
mov
mov
xor
mov
sbbl
cmp
inc
mov
out
cwtl
mov
data16
cmp
and
pop
mov
or
outsb
pop
and
ss
inc
dec
insb
loop
adc
sub
arpl
push
dec
adc
fistpl
and
orb
insb
scas
out
scas
jns
mov
lea
inc
and
or
dec
ss
lea
jmp
cs
dec
repz
aam
lea
mov
inc
jo
dec
repz
loop
in
adc
fs
imul
cmp
mov
mov
fsubr
sti
sbb
test
cmp
int3
dec
int
mov
fidivrs
sbb
pop
cmp
pop
inc
pusha
call
pop
fbld
dec
pop
mov
out
jp
ja
repz
cmpsb
aaa
insl
ss
inc
mov
sbb
fstpl
sarl
or
adc
sbb
shl
movsb
xchg
leave
insl
pop
pop
fisubrl
cwtl
add
int
add
cmp
in
mov
idiv
xor
orb
inc
or
out
cmpsl
loop
fs
mov
pushf
xor
in
sbbl
dec
addl
shll
and
lret
inc
fs
loope
mov
pushf
xor
jae
and
in
jne
pop
aam
rorb
pop
xor
iret
mov
out
sbb
loop
dec
xor
js
bound
jg
jo
inc
mov
jmp
and
and
dec
lds
movl
movw
movb
movb
mov
lea
jmp
ret
in
or
xchg
xchg
mov
xchg
cmc
sahf
int3
jp
or
ror
mov
add
cld
in
into
repnz
mov
dec
mov
clc
and
out
push
fcmovbe
mov
test
cltd
mov
inc
ljmp
fbstp
sarb
add
rolb
xor
jmp
pop
aam
cmc
add
mov
push
daa
rcll
cmp
inc
mov
mov
mov
mov
into
test
out
out
push
push
inc
mov
add
xchg
xchg
adc
xor
mov
div
pop
loop
repnz
jae
and
xor
outsb
xchg
incb
pop
xor
test
cmp
mov
xor
fldt
iret
mov
aad
xlat
jno
nop
roll
inc
mov
jmp
push
movl
pushf
pushl
lea
jmp
pushf
jmp
add
shll
xor
lret
mov
xlat
mov
shrl
xchg
add
divb
mov
add
sbb
push
pop
pop
lcall
dec
xlat
mov
mov
out
cmp
add
mov
pop
insb
jae
push
inc
cmpsb
or
call
or
push
jne
pop
cwtl
push
les
inc
mov
push
jecxz
xorl
iret
icebp
std
scas
pop
je
pop
add
mov
mov
or
jmp
or
lds
xchg
mov
sub
xor
and
push
push
fidivl
aam
lock
daa
lret
dec
pop
out
xchg
into
adc
cmc
stos
lds
dec
sub
out
xchg
pop
mov
mov
inc
sub
outsl
jmp
dec
fstpt
push
enter
xlat
int3
ret
daa
sub
push
inc
mov
leave
push
xor
lret
sub
push
stc
dec
or
mov
push
push
pop
imul
xor
adc
cmp
enter
cmpsl
divl
sbb
mov
and
and
in
mov
movl
pushf
call
dec
sbb
jle
leave
sti
ficomps
sub
in
sbb
and
inc
pop
aaa
push
call
ljmp
xchg
je
pop
jmp
cmp
sbb
fwait
or
fcomps
out
or
sub
test
adc
movsb
jg
cmp
lret
jo
push
cmp
xchg
inc
mov
sub
stos
jbe
push
test
jmp
cmp
ficoml
pop
in
lahf
mov
test
and
lea
dec
push
sbb
xchg
mov
in
insb
popa
insb
ds
out
addr16
fbld
ficoms
mov
imul
lret
xlat
out
push
sahf
sahf
sarl
out
cmpsl
sub
inc
sub
pop
mov
sbbb
scas
aam
mov
xor
push
inc
es
jne
push
inc
mov
insl
adc
shrl
movsl
xchg
push
sub
stc
sub
shlb
hlt
ljmp
test
int3
mov
push
pop
das
outsl
je
mov
rclb
xchg
xor
rorl
sub
mov
cmpsb
loope
std
outsb
mov
subl
scas
and
ficoms
popa
int
xchg
imul
fcompl
dec
sub
sub
inc
js
xor
pop
in
or
out
inc
mov
scas
xor
gs
mov
call
pusha
mov
sbb
jb
dec
cld
dec
outsl
sub
addb
pop
out
inc
pop
jmp
jo
add
shll
adc
mov
xor
cmp
pushf
outsb
add
in
add
push
dec
pop
jne
test
mov
fistl
data16
adcl
xor
in
mov
adc
cs
cmp
ret
jg
adc
inc
insl
lahf
stos
mov
dec
xor
hlt
jle
ja
inc
or
test
out
push
jmp
push
adc
outsb
add
aam
inc
aam
push
add
pop
adc
aaa
pop
cmp
pop
sbb
and
xor
test
mov
mov
add
scas
dec
lds
push
inc
arpl
lea
jno
pushf
pusha
movl
pushf
pushf
movw
lea
jmp
movl
pusha
mov
pushf
lea
jmp
std
or
ficompl
mov
cltd
daa
dec
add
arpl
pop
and
icebp
mov
mov
jo
sub
cwtl
xor
inc
dec
xchg
fmull
and
and
cmp
arpl
leave
push
sub
cs
jne
add
stos
mov
stos
loopne
or
push
fildll
adc
inc
je
fcmove
sub
in
loope
popa
and
push
or
scas
int
xor
fs
and
add
std
lock
lcall
lret
and
add
push
sub
repz
mov
adc
jg
jp
or
mov
pop
push
sbb
push
les
shrl
sub
sub
pop
les
mov
fsubs
nop
int
in
xchg
enter
cmp
sbbb
and
mov
fsubr
add
jmp
adc
mov
pop
inc
jmp
movl
jmp
int3
aaa
jg
ds
xchg
dec
sub
testl
mov
or
xor
iret
scas
add
leave
shrb
cmpsb
test
push
mov
fadd
mov
in
pusha
out
xlat
push
lds
pop
orl
add
popa
push
xchg
xchg
out
adc
or
jne
and
or
cmpsl
sub
inc
incb
or
outsb
jo
or
imul
adc
and
aas
insl
dec
adc
inc
mov
push
popf
cmpsl
cmc
jb
push
inc
aam
ss
pusha
ret
mov
repz
ret
jecxz
mov
sbb
das
jnp
sahf
adc
push
and
adc
les
outsb
cwtl
mov
jb
push
cmpsl
stos
into
sbb
ret
test
xchg
jmp
xchg
cmpl
clts
outsl
andw
add
lds
rorb
inc
pop
pop
sahf
call
push
pusha
movl
mov
pushf
pusha
pushl
lea
jmp
jmp
pushl
pusha
movl
pushf
pushf
pushf
lea
jmp
call
addr16
popa
xchg
dec
xchg
jecxz
mov
sub
out
push
jae
mov
cmpsl
adc
call
pop
int
adc
add
pop
filds
lahf
and
xchg
int
and
add
xor
or
fs
in
mov
les
xchg
mov
add
leave
ljmp
inc
test
fistl
xchg
cmp
xchg
faddp
jo
jmp
and
xchg
push
pop
int3
cmpsb
dec
insb
add
mov
cwtl
fimuls
add
inc
aas
dec
jge
arpl
mov
pop
test
adc
jno
pusha
and
mov
ja
notl
cli
mov
xchg
jmp
mov
push
pop
cmp
xor
or
loope
enter
xchg
fimull
sbb
iret
movsb
sub
pop
icebp
fs
popf
cltd
pop
js,pn
stos
pusha
mov
dec
add
cld
xchg
dec
inc
mov
mov
ja
inc
and
test
shll
in
inc
ficomps
out
xchg
out
dec
add
adc
mov
add
sub
push
movsl
xchg
decl
xchg
push
outsl
xchg
mov
and
aas
cmpsl
dec
mov
xlat
pop
repnz
jge
aad
sub
or
ret
pop
arpl
fmuls
fdivl
add
cli
scas
sbbb
jecxz
std
cmp
shrb
inc
fstpt
or
pop
out
push
and
xor
dec
add
dec
fidivs
adc
xorb
pop
inc
popf
fldt
outsl
and
adc
push
sub
stos
jo
outsb
inc
clc
lret
shr
stc
fcoml
popa
sbb
iret
call
data16
jb
inc
xchg
scas
nop
push
addr16
jae
add
and
cltd
adc
cs
jmp
ficomps
mov
inc
int
iret
lods
icebp
mov
mov
faddl
inc
popf
scas
movsb
subl
test
pop
or
jns
jnp
aaa
xchg
mov
mov
pop
inc
xchg
out
xchg
mov
adc
adc
mov
inc
nop
or
jl
jnp
cmp
jbe
mov
mov
xchg
mov
or
mov
jg
insb
or
mov
mov
nop
lods
arpl
popa
xor
and
push
xchg
cmp
mov
cmpl
cli
xor
repz
pop
outsl
sub
cs
push
subl
sbb
adc
mov
mov
pop
incl
jg
cmp
add
ret
cmpsl
sbb
push
sub
inc
mov
mov
push
xchg
xchg
push
xchg
into
mov
jg
or
das
fs
cmp
dec
jbe
sub
jmp
movsb
xor
cli
out
cmp
inc
xchg
lods
icebp
in
lahf
cli
scas
sbb
jns
mov
lods
mov
xor
mov
cwtl
sbb
xor
lds
push
cmp
dec
clc
mov
in
push
sbb
or
jae
setb
mov
inc
cmp
cmp
iret
xchg
mov
test
loopne
addr16
or
and
loop
stos
sub
nop
sahf
int3
push
cli
adc
mov
stos
pop
add
ss
sbb
sub
or
add
xchg
lea
push
int
divl
inc
mov
push
dec
cltd
push
cld
mov
mov
mov
push
sbb
pop
cmp
xchg
lods
mov
repnz
ljmp
out
xor
adc
mov
push
aas
outsb
or
ret
xchg
shlb
imul
mov
out
repnz
fcomps
xor
inc
mov
cmp
movb
pusha
movl
pushl
push
lea
jmp
imul
je
inc
sbb
cld
push
xor
les
out
sbb
xchg
addr16
jbe
scas
pavgb
dec
rorb
sbb
dec
aas
leave
jbe
ret
in
je
das
xchg
jp
loopne
notb
loopne
jl
mov
sub
lret
mov
out
movsb
notb
mov
mov
sbb
outsb
xorb
xlat
in
push
rcll
xchg
aam
mov
jae
bound
push
dec
cmp
int3
xor
inc
sub
cmpsl
add
xchg
notl
stc
xchg
xlat
push
cs
cs
movsb
inc
mov
movsl
cmpsl
mov
pusha
cmp
inc
mov
mov
fisubl
lret
cwtl
or
outsb
cwtl
idivl
rclb
sarl
xchg
or
cwtl
mov
push
sbb
xor
cmp
sahf
into
pop
xor
jae
adc
mov
fstps
xor
or
repnz
sahf
ret
push
adc
mov
adc
inc
mov
subl
mov
cld
int3
call
out
jmp
rcrb
adc
repz
pop
xor
mov
xlat
fcoms
addr16
jns
rolb
leave
mov
dec
mov
les
jb
sbb
iret
jno
lods
loop
cmp
out
or
es
addr16
push
icebp
mov
sbb
popa
inc
sbb
jne
jp
cmp
int
jge
xor
and
insl
dec
ret
testb
ret
ds
je
pop
or
mov
ds
fstps
ret
or
imul
cmpsb
pop
xlat
ret
iretw
mov
ror
sbb
mov
mov
mov
les
mov
out
mov
dec
xor
add
scas
and
js
fsubr
stc
fstl
je
and
mov
imul
cmpsb
mov
cmpl
add
or
xor
pop
jno
dec
cmp
cmp
cmp
add
decl
push
and
xchg
mov
xchg
xor
pushf
rcl
mov
dec
xchg
sbb
pop
mov
cld
stos
ljmp
outsb
jns
cld
push
dec
push
mov
push
mov
pop
ds
mov
movsb
cmpsb
mov
mov
jmp
and
adc
push
add
loopne
mov
cmp
aas
mov
add
jg
lcall
xchg
xchg
push
xchg
xchg
lret
xchg
or
push
loop
mov
scas
mov
insb
jb
addr16
in
je
mov
jmp
mov
ds
cmp
mov
add
and
iret
clc
sub
cmp
pushf
sbb
cmp
test
int3
loope
jne
outsb
sub
test
pop
test
sub
mov
sbb
mov
lret
mov
or
push
sti
mov
push
pop
inc
xor
mov
cmpsl
inc
rcrl
jmp
and
icebp
idivl
enter
mov
shll
mov
add
or
push
sbb
stos
mov
xchg
mov
aaa
mov
jb
pop
call
cmp
imul
mov
enter
fisubrl
aad
dec
in
lret
je
sahf
cmpsb
pop
sbb
or
inc
jae
sub
sub
mov
ret
sbb
push
sub
imul
ret
cmpsl
mov
icebp
fucomip
mov
xchg
inc
and
pop
adc
pop
jns
inc
test
inc
cmp
inc
mov
sub
movl
pusha
push
push
lea
jmp
pop
insl
aaa
movsl
dec
pop
mov
test
aad
fadds
jle
insb
ja
daa
jmp
inc
and
int3
sbb
jl
addr16
sbb
sub
dec
dec
sbb
sub
clc
pushf
mov
sahf
test
and
ljmp
mov
mov
mov
push
mov
out
xor
repz
dec
xor
add
cmp
popa
push
inc
and
outsb
jmp
cwtl
jmp
push
mov
or
lcall
mov
jp
jp
icebp
call
psllw
gs
mov
bound
stc
cmp
mov
mov
jne
pop
adc
pop
or
mov
lret
hlt
insb
jmp
or
shll
es
add
inc
lret
data16
mov
jl
add
push
insl
sub
je
movsb
and
aad
rol
mov
mov
sbb
push
or
inc
mov
cmpsl
mov
fsubr
xchg
sub
fnsave
ss
jbe
lods
xor
inc
cmp
pop
sbb
dec
cmpsl
ret
inc
xchg
aam
into
fcmovu
add
pop
les
and
mov
lret
imul
lret
cld
outsl
jns
or
dec
imul
mov
dec
mov
les
inc
sbb
sub
push
xor
lahf
ret
std
inc
mov
jle
xchg
or
mov
shll
mov
je
das
xor
cmp
lods
inc
sbb
cmp
jno
loope
mov
inc
aas
pop
adc
jo
inc
jbe
sub
scas
cmpsl
cltd
pop
mov
sub
adc
fucomi
les
and
mov
cmpsb
pop
add
lods
bound
xor
xor
je
push
pop
and
loope
add
push
cmp
ljmp
and
and
testl
jbe
jbe
movsb
and
mov
dec
mov
data16
sti
add
push
mov
mov
push
sub
xchg
dec
mov
in
gs
pop
adc
repnz
enter
andb
jno
jmp
fwait
cmp
inc
pushl
pop
outsb
daa
push
inc
mov
fs
mov
mov
jns
addr16
cmp
push
adc
std
bound
lahf
jmp
adc
push
inc
cmp
shrl
repnz
lods
or
icebp
or
outsb
mov
inc
out
jmp
and
outsl
cmp
pop
inc
ss
hlt
ret
cmp
fiaddl
aas
mov
mov
scas
fucomp
iret
or
sbb
sti
dec
iret
push
and
lret
inc
jmp
stc
dec
mov
sbb
cmp
sub
pushl
cltd
pushf
cmc
cmp
or
xor
inc
out
fidivs
pop
adc
and
jg
ret
in
mov
jecxz
clc
jno
inc
sub
lock
mov
dec
jl
mov
cmpsb
mov
fcmovne
mov
dec
jnp
add
fbstp
adc
popa
xchg
les
mov
xchg
pop
popf
push
bound
les
cld
jge
ljmp
into
push
cmp
dec
test
xchg
les
inc
mov
ja
mov
add
cmp
setns
and
jne
inc
sbb
add
sti
cld
arpl
lds
push
mov
sub
stos
xchg
rcll
sbb
push
ljmp
jle
ds
cmp
adc
imul
sub
ret
inc
xor
outsb
cmp
test
scas
sbb
or
sub
sub
mov
mov
inc
lret
stos
out
imul
loop
mov
push
out
sti
fmuls
imul
pop
sahf
or
or
mov
movsl
xchg
sti
xchg
out
hlt
cwtl
std
rolb
and
jp
and
mov
mov
mov
mov
sub
cld
mov
xchg
icebp
sahf
and
mov
aam
lahf
ret
mov
and
cltd
enter
sbb
and
arpl
nop
mov
push
and
sbb
aas
shl
lret
add
push
ja
mov
or
dec
mov
mov
lret
xchg
mov
add
pop
call
and
ret
lds
xchg
pop
xor
imul
std
mov
lods
loop
jns
mov
cli
or
mov
scas
add
rcrl
pop
push
adc
loop
daa
scas
shlb
push
pusha
data16
xor
inc
adc
fiaddl
sbb
add
sbb
ror
mov
rolb
aaa
ds
push
jmp
testl
call
sub
mov
mov
xor
dec
stc
dec
outsb
sub
and
or
sub
xor
adcb
cltd
mov
cmpsb
fistl
call
xor
stc
in
mov
xchg
fs
test
in
pop
xlat
lcall
out
leave
xor
xor
int3
mov
nop
xchg
jns
pop
or
xchg
mov
shlb
gs
in
inc
fisubrs
pusha
inc
nop
pop
pop
mov
jmp
adc
stc
in
iret
hlt
push
dec
lods
stos
ret
popf
ret
ljmp
loope
jb
xor
add
out
jnp
sbbb
mov
lahf
in
xlat
mov
inc
mov
movl
pusha
movl
push
pushf
pusha
lea
jmp
lret
jb
lds
cmp
xlat
lcall
in
lcall
rcr
fstpt
je
pop
xchg
fdivr
rcll
inc
rorl
shl
mov
js
pop
inc
enter
sub
in
imul
cmp
lret
cld
shll
mov
filds
add
leave
pushf
pushf
movl
pushf
pushl
movb
lea
jmp
push
jmp
sbb
mov
fidivrs
add
mov
mov
mov
mov
jmp
pop
rcr
test
shl
sarb
jb
faddl
xlat
dec
mov
xchg
in
pop
jnp
dec
sub
and
lret
mov
xchg
cs
dec
adc
jp
data16
es
sub
insb
cmp
pop
sbb
jae
call
insl
or
or
scas
sbb
jle
push
cld
sub
inc
mov
mov
mov
arpl
sbb
mov
enter
and
nop
mov
shll
xchg
cmp
fbld
cmp
stos
or
cmpsl
inc
fdivrl
data16
int3
sar
or
in
arpl
mov
int
shll
test
sar
jo
and
and
mov
movb
mov
jbe
mov
add
lret
dec
fwait
add
dec
push
jb
push
pop
fiadds
jns
pop
xor
add
inc
mov
mov
xor
std
pop
jae
xchg
jle
dec
sub
mov
data16
pop
cmp
les
ret
mov
xchg
aas
int
jns
push
ss
inc
mov
fucom
add
push
fstpl
out
lock
push
adc
loope
in
mov
mov
sbb
scas
mov
dec
lock
inc
mov
out
xor
xor
or
pop
and
inc
ret
ret
xchg
mov
shll
adc
jne
data16
addr16
mov
mov
icebp
mov
mov
dec
sub
test
mov
push
mulb
and
repnz
and
cmpsb
rorl
push
stc
sbb
repnz
add
idivb
lret
inc
mov
mov
out
fwait
lods
add
cmp
cmc
or
mov
aaa
inc
scas
les
adc
push
loope
lods
mov
mov
jae
sarb
lock
je
push
mov
xchg
mov
fimuls
inc
addl
dec
sub
jl
jbe
pop
sbb
inc
mov
cmp
in
clc
mov
rcrl
cmpsl
stos
shlb
cmp
sahf
sbb
mov
hlt
mov
xor
push
aaa
jg
push
inc
push
adc
sti
out
pop
repnz
and
xor
xchg
sub
xchg
movb
mov
dec
lds
or
pop
mov
in
test
sub
hlt
mov
dec
push
jno
mov
ror
inc
int
cli
daa
dec
repz
lods
data16
insl
push
lock
pop
push
pop
sarl
repnz
dec
insl
inc
mov
jbe
lcall
add
mov
fwait
stos
outsb
mov
inc
pop
ljmp
out
lret
adc
dec
repnz
scas
aad
fcmove
leave
mov
lahf
mov
pop
popf
popa
jnp
pop
scas
enter
out
xchg
mov
mov
sbb
and
aas
roll
cmp
fistps
push
push
call
cmpl
cmp
das
xor
sarl
sbb
mov
xchg
mov
inc
sti
inc
pop
push
inc
in
leave
add
or
adc
movsl
aas
xchg
dec
sub
push
inc
adc
inc
mov
imul
xchg
mov
ret
jle
popa
leave
pop
std
and
pushf
mov
pop
fidivl
xor
cmp
sub
jge
imul
lods
and
aam
push
lds
out
es
test
dec
xchg
and
insb
in
outsl
xor
xchg
push
xchg
movsb
inc
and
mov
call
enter
aad
scas
mov
test
movsb
xlat
cmpsl
cmc
inc
ret
imul
mov
clc
push
adcl
inc
repz
add
js
subl
in
push
cmp
rcrb
fsubrs
cltd
pop
dec
pop
xchg
jg
daa
jno
iret
inc
aas
mov
push
push
jle
inc
and
jnp
fcoml
xchg
mov
pop
or
icebp
jbe
les
ss
jbe
dec
xor
dec
imul
jecxz
mov
mov
stc
jle
sbbl
mov
cltd
and
sbb
jmp
mov
icebp
ret
or
in
xor
jle
mov
pop
jmp
aam
dec
lcall
je
movsb
mov
cmpsb
sbb
mov
inc
arpl
push
xchg
inc
inc
loop
sub
stos
in
sahf
push
mov
shlb
mov
mov
cmpsl
mov
and
mov
inc
inc
dec
shl
outsb
aaa
sub
les
leave
fwait
dec
daa
jg
stos
lds
pop
imul
and
pop
pop
add
ds
xor
sbb
fildll
sbb
push
lcall
xlat
int
adc
outsb
repnz
pop
sbb
and
data16
lods
lcall
hlt
and
add
bound
out
mov
mov
repnz
popf
push
mov
mov
fcomps
cs
icebp
mov
mov
stc
test
int
test
ss
andl
xor
jo
arpl
and
hlt
jg
in
cmc
nop
pop
mov
sbb
mov
test
push
das
dec
add
inc
mov
cwtl
sbbl
mov
cmpsl
xor
je
xchg
cmpsl
into
test
fs
cmpsb
divb
sub
mov
loope
mov
test
out
jo
add
adc
cmp
popa
bnd
vpcmpeqw
mov
mov
sahf
test
xchg
inc
inc
loopne
cmp
je
push
sub
insl
dec
stos
pop
inc
jge
xchg
pop
xor
and
pop
inc
mov
sub
mov
sub
stc
inc
cmp
sub
mov
ja
stc
cmpsl
mov
daa
xchg
ret
mov
lods
jmp
mov
or
mov
mov
adc
dec
int
es
dec
pop
mov
ror
stc
inc
aaa
mov
fldl
adc
cs
jns
in
icebp
pushf
mov
movb
js
jecxz
hlt
dec
or
xchg
push
outsb
add
pop
push
or
pop
iret
andb
aaa
sub
adc
xor
mov
dec
sub
subl
sbb
dec
inc
push
inc
push
movsb
scas
ljmp
mov
js
cli
fcompl
jb
jbe
idivb
or
lret
sahf
xchg
inc
pop
cmpsb
mov
popa
xor
mov
mov
loopne
ficoml
adc
lods
pop
push
cmp
jbe
push
aas
pop
push
dec
cmpsb
inc
mov
sbb
addl
stc
mov
das
xchg
cmc
dec
aam
pushf
loop
insb
sub
notb
fstl
pop
lret
aad
aam
jp
add
enter
paddd
mov
mov
adc
mov
adc
jae
cmp
push
or
repz
shrl
adc
repz
mov
int
call
add
jnp
push
out
push
out
inc
or
add
in
movsb
mov
syscall
mov
subl
mov
pop
push
ret
pop
sbb
mov
adc
ljmp
inc
add
push
xor
insl
fldenv
enter
scas
sub
ja
adc
aaa
js
jns
lods
jae
sub
add
int
fst
imul
leave
sbbl
xchg
cmp
stos
sbb
cwtl
ficoms
xchg
in
sub
insb
xor
push
push
mov
mov
mov
and
push
sbb
dec
sub
sti
xchg
rclb
mov
mov
add
jge
js
outsl
adc
jbe
outsb
adc
pop
fwait
inc
mov
fcmovbe
mov
bnd
adc
fisubrs
push
jbe
outsl
mov
pushf
sub
add
mov
mov
out
cmp
movsb
out
push
inc
xor
pop
dec
ljmp
cmp
out
aad
test
scas
lds
mov
cmp
jl
mov
lcall
xor
or
xorps
inc
mov
bnd
call
pusha
pushf
mov
movl
call
jmp
pusha
pushf
pushf
jmp
sti
stos
and
mov
sub
mov
cltd
lds
pop
fimuls
or
sbb
jo
cmp
sbb
xchg
cs
data16
daa
sbb
fwait
iret
dec
cmp
pop
pop
xchg
lret
mov
clc
xchg
fsubp
fdivl
push
cli
inc
and
jl
mov
ret
xchg
inc
sub
pop
cli
mov
jge
cwtl
add
test
jne
scas
cmp
mov
xor
pop
fildl
test
mov
xlat
daa
aaa
and
mov
int3
xchg
fbld
mov
dec
inc
repz
push
push
jg
xchg
ss
mov
dec
loope
and
mov
push
and
inc
clc
jg
xchg
fmull
adc
mov
sub
and
sahf
dec
push
jno
sbb
ret
cmp
mov
cmc
flds
std
pop
jecxz
test
es
adc
push
sub
and
add
mov
ljmp
and
int3
push
pushf
rorl
sbb
jbe
test
mov
andl
les
inc
xor
in
xchg
jnp
sub
xor
hlt
int3
and
shl
mov
mov
mov
adc
sbb
inc
mov
int
cmp
jno
push
push
mov
popa
add
dec
jmp
mov
sbb
js
call
jg
lods
dec
mov
xchg
mov
out
xchg
sbb
mov
mov
dec
ss
pop
inc
xlat
ret
inc
mov
fildll
sub
pop
mov
into
ds
das
js
imul
xor
sub
xchg
pop
movl
push
mov
pusha
lea
jmp
pusha
movl
pushl
movl
pusha
lea
jmp
dec
je
cwtl
dec
dec
mull
push
das
push
jae
bound
mov
mov
xchg
sub
jb
pushf
shll
leave
jo
test
test
icebp
leave
sbb
mov
cmp
mov
add
and
rorl
movsb
addl
mov
pop
xor
jle
dec
mov
mov
lret
fidivrs
lock
cli
js
mov
addr16
sub
add
pusha
sbb
fs
sarl
mov
add
lcall
pop
test
xchg
push
push
push
dec
ret
xchg
aas
insl
dec
test
add
xchg
xor
ror
in
push
fimuls
lea
mov
sub
lds
pop
aad
xchg
out
data16
mov
mov
mov
imul
pop
fcmovne
sti
popa
sbb
iret
pop
inc
add
mov
cwtl
addr16
int3
dec
mov
hlt
dec
cmp
or
gs
xor
dec
ffree
fisubl
fmuls
dec
lahf
rcll
inc
leave
scas
lock
ret
mov
sub
cmp
pop
dec
rclw
enter
sbb
dec
push
sahf
xchg
icebp
lahf
sbb
arpl
xor
xchg
cli
pop
sahf
inc
lcall
subb
inc
mov
cmp
popa
push
push
xor
sahf
lock
mov
stc
or
andb
popa
test
dec
rcrl
adc
add
mov
jecxz
sti
popl
ret
dec
lret
mov
mov
stos
mov
push
and
jl
cmpb
lods
cs
mov
out
xchg
or
dec
lahf
inc
pop
ds
ja
cli
js
mov
cmp
push
push
lcall
stos
jmp
cmp
adc
and
cli
xchg
sti
add
mov
sti
lods
xchg
mov
sub
int3
inc
adc
movsl
lea
orl
mull
sub
repnz
in
outsb
cmpsb
push
test
dec
push
fs
loope
push
mov
add
mov
pushl
mov
xchg
cmp
dec
xchg
shlb
cltd
xchg
or
pop
not
mov
or
push
dec
sbb
push
clc
pop
mov
adc
push
fistpll
sub
mov
cwtl
icebp
mov
adc
inc
mov
adc
sub
cld
stos
xor
dec
add
inc
aas
lods
inc
sti
hlt
shlb
xor
fwait
hlt
inc
adc
out
aaa
push
dec
cmp
add
push
pop
jmp
fs
lea
inc
test
ficompl
loopne
or
int
xchg
add
sub
fidivs
popa
fdivr
push
jge
daa
je
inc
mov
loopnew
jge
mov
test
sbb
cltd
sbb
mov
pop
nop
mov
jae
cmp
loop
cmp
xor
fidivl
xor
in
mov
inc
les
push
adc
lcall
jg
sti
lcall
or
dec
lahf
inc
mov
loopne
sti
push
movl
jmp
sub
or
jmp
pop
add
ret
ja
es
ss
mov
lea
jne
jns
pop
cmpb
adc
push
aas
cld
dec
in
jge
lcall
aam
mov
cmpl
das
fbstp
pushf
dec
sarb
test
test
jae
rcr
test
insl
test
test
sub
or
stos
pop
cmpsb
pop
icebp
icebp
fbld
push
xchg
insl
stos
outsl
into
pmuludq
fisubs
je
pop
mov
es
add
movsl
aam
sti
clc
pop
stos
push
push
imul
dec
repz
pushf
fimuls
hlt
push
cld
and
lret
fwait
imul
mov
imul
jge
pop
mov
fsubrl
ja
inc
mov
add
add
xor
mov
dec
push
sbb
mov
dec
sub
xchg
insb
out
sbb
das
popa
mov
mov
je
sbb
and
les
aas
push
xor
inc
mov
aad
or
je
lock
inc
xchg
add
and
scas
cmp
adc
std
sub
sbb
pop
or
jmp
inc
sbb
push
add
call
stos
mov
das
cmpsl
movsb
sbb
pop
fsubs
jne
jns
ds
fcomps
jp
xchg
push
mov
mov
xchg
mov
mov
and
push
ja
loop
dec
fldl
inc
popw
test
push
jp
inc
sub
mov
mov
inc
mov
mov
xchg
jnp
stos
jne
ja
jb
imul
lahf
les
test
rcl
cld
dec
imul
js
mov
mov
decb
dec
repz
rolb
jg
pop
add
or
stos
jb
ljmp
jae
ret
xor
mov
test
mov
popf
mov
scas
repnz
loope
aam
loope
sub
in
push
ljmp
mov
mov
xchg
call
inc
mov
pop
adc
shll
idivl
pop
outsb
cmp
xor
mov
mov
stos
rcr
mov
mov
inc
in
mov
pop
adc
adc
lock
xor
lds
cmp
aas
pop
adc
push
add
gs
cs
jge
and
cmc
neg
mov
in
fcoml
ds
mov
test
cmp
mov
lds
fs
movl
mov
mov
mov
lea
jmp
popf
dec
repnz
fcmovu
js
xorb
loop
or
inc
pop
push
adc
xor
xor
jmp
push
hlt
add
xor
jno
fisubrs
pop
pop
in
sub
jl
and
sub
cmp
mov
xchg
test
insb
pop
stc
test
in
xchg
mov
push
std
loopne
ds
cmp
fimuls
mov
popf
xlat
loopne,pn
adc
push
lock
mov
push
stos
mov
mov
pop
pop
pushf
mov
xor
insb
ds
mov
inc
popa
dec
clc
cltd
stos
scas
mov
lahf
xchg
clc
insl
sbb
mov
push
inc
mov
adc
pop
jmp
or
push
ss
aam
ret
mov
cmp
mov
clc
push
jno
mov
mov
mov
mov
sahf
xchg
and
inc
ror
aam
xchg
mov
cmp
mov
pop
mov
push
dec
xchg
sub
outsl
or
inc
sub
sub
xor
ret
fmul
cmp
mov
stos
sahf
das
aam
arpl
sbb
xorb
jge
add
in
add
push
ret
into
mov
cmpsl
and
dec
fstpl
jl
lods
inc
das
rolb
xor
xor
test
or
inc
mov
mov
push
fistps
lods
xlat
and
gs
mov
clc
adc
shrl
into
fs
push
xchg
jg
aad
addr16
or
jecxz
add
inc
and
xlat
xlat
aam
push
call
adc
sbb
inc
pop
movsb
std
pop
or
fisubl
mov
lods
mov
cmc
iret
not
movsb
clc
in
and
sahf
pop
stos
into
jb
arpl
sub
and
fistpll
xchg
fnstcw
jecxz
add
adc
mov
mov
fucompp
xorb
sbb
icebp
mov
mov
push
push
xchg
inc
mov
and
dec
cmc
jmp
pop
call
mov
mov
mov
mov
add
cs
pop
cld
pop
pop
test
aam
lret
arpl
pusha
and
std
fistpll
lods
inc
arpl
pop
pop
mov
cmp
adc
sti
or
inc
pop
push
orb
cwtl
daa
mov
push
xchg
mov
adc
ja
sub
cmp
cmc
jb
mov
aad
jge
mov
ljmp
cltd
int3
fwait
rcrb
xor
gs
lock
loop
xchg
pop
sbb
cld
in
jnp
sbb
rorb
adc
and
popf
push
pusha
pushf
pushl
lea
jmp
movl
pushf
lea
jmp
push
fidivrs
add
push
push
mov
imul
dec
sbb
stos
mov
stc
hlt
in
fstpl
stos
mov
xlat
notb
mov
cmc
xchg
arpl
mov
sbb
pop
push
das
cmp
cmpsl
repz
test
stos
lret
aam
mov
push
push
inc
or
and
and
cltd
repnz
movl
fs
jmp
adc
aaa
add
mov
sub
pop
out
xchg
repnz
int
lock
xor
fidivs
pop
mov
jge
scas
ss
jmp
jns
mov
add
frstor
int3
jmp
push
sub
mov
out
lds
addr16
stos
mov
das
sar
cmp
and
push
call
out
in
in
imul
adc
xor
loope
ds
cli
mov
rcll
popa
push
or
repz
test
stos
push
xor
sub
repnz
ja
stc
call
out
sbb
add
data16
into
dec
adc
cmpsl
je
mov
cmc
pop
add
sub
inc
adc
imulb
or
cmp
mov
aaa
lret
mov
push
repnz
int3
push
inc
sub
push
ret
cmc
mov
fxch
sbb
aaa
mov
rclb
and
mull
icebp
push
pop
or
call
mov
in
rorl
pop
sbb
pusha
aam
aad
add
push
inc
pop
fld
imul
mov
or
mov
push
mov
push
ljmp
loop
aam
jmp
test
xchg
mov
mov
insb
je
jbe
fwait
aam
and
out
cmp
mov
cmpsl
push
pop
mov
sahf
mov
dec
shl
mov
inc
pop
imul
xchg
cli
push
imul
xchg
aam
push
mov
sbb
jb
xor
aam
flds
std
fwait
shrl
inc
mov
push
sbb
call
fcomp
jns
out
xchg
adc
fwait
xchg
lret
mov
orl
repz
out
lea
add
sarl
sub
imul
shll
xor
imul
jo
stc
adc
lret
test
inc
mov
adc
hlt
lahf
repz
adc
jg
loopne
xor
insb
mov
lods
mov
sahf
fisttpl
inc
or
inc
mov
pop
push
add
sub
mov
int
lcall
cmp
sbb
hlt
sarl
dec
lret
lret
jbe
fmull
jg
fdivrl
adcl
pop
mov
lret
cmp
mov
jo
movsb
lds
cmp
add
andb
gs
cmp
mov
add
inc
inc
mov
push
cmp
inc
and
mov
push
cmp
inc
inc
and
imul
movb
lea
jmp
xchg
imul
inc
sbb
xlat
shlb
inc
adc
inc
int
and
int
jnp
adc
cmc
shlb
add
fistl
push
add
pushf
es
mov
add
cwtl
fs
fldcw
mov
mov
popf
sbb
cmp
ljmp
inc
ss
push
pop
add
cmp
sbb
add
fdivl
dec
hlt
xchg
sub
mov
daa
arpl
loope
mov
or
in
mov
inc
jne
pop
ja
inc
or
inc
and
loopne
ret
stos
std
xchg
sub
or
scas
mov
aad
push
cmc
push
loope
dec
push
inc
adc
inc
adc
ss
pavgb
sbb
dec
or
scas
push
stos
push
lods
dec
cmp
push
and
pop
fmull
fists
lods
mov
xor
mov
aad
push
shlb
mov
pop
dec
fisubl
dec
popf
push
data16
sbb
inc
mov
movb
lea
out
cli
adc
in
dec
movzbl
mov
adc
pop
xor
outsl
pushf
enter
lds
lret
out
je
inc
pop
mov
xor
mov
adc
js
inc
and
dec
and
inc
mov
nop
sbbb
int
data16
and
jp
lods
sti
loopne
sbbb
push
dec
lcall
xor
cmp
rol
dec
mov
scas
and
push
cmp
lods
ret
mov
cli
pushl
lcall
lds
cltd
sbb
inc
mov
mov
add
dec
lods
mov
test
mov
pop
xchg
jecxz
cld
and
jns
aaa
pop
jbe
dec
or
out
inc
frstor
nop
sub
pusha
das
xchg
pop
cmp
roll
jns,pn
movsb
cli
loop
sub
js
pop
aaa
and
pop
mov
jle
add
xchg
sarb
inc
mov
mov
dec
sbb
sti
pop
and
xchg
xlat
pop
or
mov
test
ret
xchg
adc
dec
pop
jle
or
xor
push
sbb
out
jns
cmp
and
add
outsb
cmp
mov
mov
adc
call
cmp
mov
pop
sub
insb
add
sub
lods
adc
loopne
adc
push
or
aam
fdivs
mov
push
cmp
push
lea
jbe
pushf
movl
pusha
movl
mov
pusha
lea
jmp
lret
popa
rolb
cmp
and
shll
adc
and
pop
xor
pop
sahf
cmp
std
mov
adc
jle
mov
jge
fadd
jb
jo
popf
mov
not
mov
loope
jo
adc
out
mov
sbb
lods
pop
jae
jmp
mov
jp
push
or
inc
ds
mov
fcmovnbe
cmp
pop
cmc
dec
mov
nop
idivb
mov
ljmp
pop
mov
jl
pushf
jno
jle
dec
mulps
mov
sbb
and
iret
pusha
clc
imul
fstps
push
add
add
repz
int3
stc
pushf
clc
fstpt
cmpsb
int
mov
scas
icebp
cmpsl
lock
int3
in
jl
aam
into
xchg
add
stc
das
xchg
push
mov
push
cli
test
clc
or
push
lods
inc
mov
shl
sbb
fisubs
daa
mov
jae
dec
icebp
jg
addr16
fadds
xor
cmp
and
xchg
mov
lods
xor
or
cmp
in
push
mov
inc
sub
mov
out
mov
jl
push
or
cmp
into
into
loope
clc
int
xor
mov
mov
aam
xchg
add
loope
jecxz
pusha
push
lea
jmp
movl
call
mov
movl
pusha
movl
push
movb
lea
jmp
add
sar
stos
int
into
lahf
cmp
and
cmp
shl
jb
pop
movsl
mov
int
mov
mov
cmpsb
mov
inc
adc
fsubrs
and
insl
jp
clc
push
call
lds
inc
mov
mov
out
popa
mov
cmpsl
xor
jg
in
mov
clc
js
movsb
loop
loope
and
pushf
mov
mov
pop
or
push
jno
scas
sarl
jle
outsl
adc
into
jmp
push
fcomi
fucomi
adc
or
shlb
addr16
cmp
jbe
adc
mov
push
inc
mov
pop
movw
movl
pushf
call
jno
pop
dec
or
cld
cmpsl
adc
xchg
ficompl
push
jae
mov
lods
rcll
mov
mov
pop
rolb
inc
mov
inc
outsl
divb
jmp
std
dec
dec
mov
cmpsl
shrb
dec
cmc
or
leave
das
ret
in
dec
test
dec
or
cmp
adc
nop
xchg
inc
daa
sahf
sbb
mov
jle
stos
lret
mov
dec
inc
mov
clc
or
popf
popa
or
xchg
enter
ljmp
adc
jo
ret
shrb
sub
sub
cs
inc
mov
sbb
rolb
cmp
jae
sahf
mov
call
shll
add
pop
dec
cmc
cmpsl
ret
mov
outsb
or
cmp
fwait
or
push
pop
dec
cmp
repz
push
lcall
inc
mov
mov
cli
jle
scas
or
xor
pop
out
mov
insb
adc
cmpsl
cli
stc
add
cmp
xor
push
fimull
addr16
mov
addr16
mov
enter
jns
pusha
mov
xchg
movb
sbb
repz
adc
jecxz
jmp
and
inc
jge
bound
push
xor
cs
mov
xchg
push
cmp
mov
mov
pop
xor
lahf
dec
inc
mov
or
scas
add
out
pop
xor
jecxz
sahf
in
mov
notb
dec
imul
push
popa
inc
cli
fistl
mov
ja
movb
xchg
mov
mov
scas
mov
nop
and
add
push
ds
mov
adc
fisubs
mov
or
test
jg
scas
mov
les
jmp
push
cmp
cmp
mov
inc
add
adc
dec
push
mov
cmp
bt
jns
mov
mov
cmp
push
pusha
mov
out
mov
xor
imul
aas
jmp
sti
pop
jl
cmpsl
faddl
icebp
mov
push
push
or
adc
sub
xchg
lock
pop
xor
mov
loopne
jge
jo
jno
stos
dec
pop
fsubs
jo
cmc
jmp
cs
xchg
inc
mov
sbb
pop
mov
sub
test
xchg
enter
or
mov
leave
mov
mov
mov
xor
xchg
cmp
lea
test
add
mov
in
sbb
jne
mov
mov
out
add
out
xor
mov
cmp
and
mov
clc
sub
out
lahf
xlat
imul
imul
shrl
xchg
mov
adc
cmpsl
lock
and
insb
das
push
or
inc
mov
out
push
xchg
xchg
test
into
mov
popa
cmp
mov
xchg
lahf
xor
stos
fcmovnb
test
xchg
cs
out
cld
pop
andb
push
adc
in
pop
popa
cmp
adc
or
sar
fwait
or
mov
jne
ss
sahf
aad
ljmp
subb
mov
push
adc
xor
insl
nop
shl
popa
hlt
or
imul
imul
mov
adc
dec
add
cmc
sahf
adc
jecxz
lcall
lcall
and
leave
pushf
les
call
popf
inc
xor
aad
sub
adc
pushf
imul
sbb
and
scas
sub
mov
ljmp
js
popf
out
rcll
roll
jns
sub
push
xchg
mov
push
cmp
ja
leave
cmpl
adc
xor
es
xor
push
stos
add
call
sbb
fwait
arpl
mov
xchg
popa
push
and
aaa
lret
in
add
mov
xchg
loope
bnd
inc
cmp
stos
adc
sub
jae
push
fs
or
mov
movsl
lods
cltd
push
test
jne
mov
inc
mov
pop
inc
or
inc
and
call
add
push
pusha
lea
jmp
repz
mov
xchg
mov
and
jp
data16
andl
push
adc
aas
mov
xchg
hlt
imul
nop
and
mov
jmp
in
test
push
jb
xchg
popa
sbb
pushf
clc
inc
ret
xchg
cmovae
cmp
adc
mov
test
jb
push
loope
dec
andl
or
pop
cmpsl
mov
xor
adc
movsb
negl
leave
shll
idivb
test
jg
je
test
stos
pop
push
and
xor
mov
repz
aas
push
lahf
and
adc
push
mov
hlt
sar
pusha
out
in
loop
test
movsb
sbb
add
pop
movsl
fs
mov
pop
and
add
sub
aam
clc
jl
jnp
xchg
adc
pop
push
addl
cmp
mov
and
xor
repnz
xor
cmp
pop
sub
push
rorl
adc
and
imul
mov
vmovq
jns
mov
ss
mov
mov
mov
mov
push
ficoml
inc
pop
pop
fcomps
push
aad
or
repnz
cmpb
dec
push
fcmovnu
mov
outsl
push
test
mov
pop
xchg
push
push
push
dec
or
sub
and
das
or
jo
jae
test
cmp
inc
or
mov
inc
mov
push
pop
repz
jmp
and
movsb
out
aas
and
outsl
xor
xchg
jp
lea
je
add
fistps
lahf
lret
pop
cwtl
loope
loopne
cmp
in
sarl
adc
xor
sub
fs
std
std
add
data16
xchg
pop
xchg
popa
pushf
jb
aam
add
dec
mov
dec
jp
fildll
mov
or
xor
push
adc
negb
test
push
xchg
clc
outsl
cmpb
mov
in
push
push
mov
test
hlt
mov
jge
pop
rcr
pusha
dec
fists
add
pop
into
mov
mov
adc
mov
jmp
fmull
cli
ja
arpl
repz
clc
mov
cmp
data16
pop
in
mov
cmp
dec
adc
scas
mov
imul
test
inc
pop
dec
lods
in
int3
mov
pop
jbe
int3
jg
mov
dec
xlat
pushf
pop
cwtl
into
aam
loop
gs
lea
fnsave
int3
and
mov
or
cs
mov
loope
add
loopne
cmp
push
negl
ljmp
out
mov
test
jmp
repz
hlt
jge
cmp
xor
enter
imulb
dec
scas
inc
inc
in
sub
test
pushf
ret
pop
sbb
enter
out
movsl
dec
idiv
push
fstl
inc
fwait
enter
imul
adc
sub
lcall
or
rcrl
sub
stc
mov
sarb
push
sbb
push
dec
mov
pop
fisubl
ret
inc
test
ret
adc
add
pop
aaa
push
rclb
lret
push
mov
pop
mov
cmpsb
lods
addr16
aaa
xor
cmpsl
inc
mov
fsubr
in
nop
out
inc
lods
mov
ljmp
inc
or
jae
imul
dec
push
lret
sar
push
dec
adc
sub
jno,pt
in
jns
push
scas
xchg
jecxz
js
jno
or
xor
mov
repnz
shll
mov
sarb
adc
cmpsl
int3
pop
mov
push
sub
adc
sub
stos
loop
inc
cli
iret
xchg
xchg
cmpl
sub
sub
xor
sti
xchg
mov
stc
and
mov
jno
add
mov
je
mov
addl
cmp
pop
adc
add
inc
pop
jnp
iret
aas
jp
xchg
flds
cld
xorb
xchg
inc
ja
or
lods
add
push
sub
xor
cmp
test
cld
repz
ja
add
or
push
movmskps
mov
add
pop
adc
xchg
stc
ffreep
adc
or
es
clc
js
mov
mov
icebp
fs
ds
pop
inc
popa
xchg
xor
or
hlt
mov
hlt
test
ds
xor
addr16
adc
loop
push
pop
pop
cmp
das
mov
mov
inc
sub
pop
adcl
fsubl
push
adc
hlt
cs
lods
add
mov
sub
pop
aaa
outsl
jbe
cli
add
xchg
cmp
or
stos
push
inc
popa
or
or
mov
or
inc
mov
in
sahf
adc
cli
cltd
fdivl
pop
inc
mov
scas
push
out
cmp
sbb
adc
shlb
repz
pop
lcall
mov
xchg
shrl
sbb
sub
lods
flds
out
jl,pn
out
mov
cmp
or
push
sbb
push
or
mov
je
popa
or
add
inc
pop
pop
popf
adc
sub
xor
clc
es
data16
push
notl
mov
mov
xor
sbb
stos
out
pusha
inc
add
out
imul
jne
shl
sub
inc
mov
cmpsb
popa
ret
sarb
movb
or
in
lea
adc
add
add
mov
lods
ds
xor
push
cmp
and
cmp
out
cmpb
mov
mov
cmp
rorb
cltd
in
stc
jbe
add
or
and
in
mov
cmp
cmp
imul
mov
mov
pop
data16
aaa
fildl
bound
xor
mov
mov
xor
pop
not
pop
inc
or
fcoml
mov
out
out
pop
test
repz
inc
mov
mov
sub
cs
sub
inc
int
stos
lds
repnz
int3
fiadds
negl
into
lahf
adc
cmp
push
addb
jo
popf
stos
testl
fcoms
mov
jae
sbb
in
xor
dec
cmp
mov
insb
test
out
or
dec
push
iret
jp
push
arpl
pop
jecxz
lds
in
aaa
mov
icebp
sbb
lret
jl
push
xchg
mov
dec
xor
pushl
dec
out
or
fwait
mov
lcall
inc
mov
jle
inc
fnsave
ror
xchg
sti
loope
jno
ja
mov
mov
daa
cmp
outsl
mov
cmp
mov
stc
shrb
mov
movl
jae
fstpl
mov
or
cmp
dec
dec
xchg
jo
xchg
cld
fldcw
js
sub
rol
mov
dec
push
and
hlt
adc
mov
shll
push
push
inc
mov
stos
mov
mov
fxch
pop
iret
lods
jp
pusha
and
cmpsb
cld
inc
sub
xlat
int
mov
mov
adc
lcall
mov
test
test
sbb
and
lret
cmp
fildl
mov
or
xchg
inc
popf
pop
mull
jne
bound
ret
test
xchg
les
xchg
pop
mov
jo
iret
mov
pop
sarl
dec
push
or
loop
xchg
jns
out
dec
adc
sub
xor
data16
fiaddl
or
mov
and
mov
adc
test
cwtd
inc
lret
jne
cltd
lds
jno
dec
dec
mov
jge
shrb
rolb
imul
add
jno
xlat
rcll
dec
xlat
cmp
pop
repz
aam
neg
lcall
incb
pop
pop
inc
frstor
jg
fs
adc
mov
movl
xor
lret
add
jecxz
ret
add
cltd
jbe
lock
loopne
or
and
insb
decl
jne
repnz
adc
incb
mov
ja
stos
je
inc
pop
hlt
roll
add
xchg
dec
aad
jmp
insl
je
xchg
shlb
faddl
or
sbb
sbb
arpl
sbb
mov
sub
sahf
rol
cwtl
mov
js
enter
xchg
jnp
add
cmpsl
outsl
ja
cwtl
int3
mov
stc
fwait
mov
sub
imul
and
ret
ss
or
cmp
ja
inc
mov
int
adc
cmp
std
inc
add
xor
lds
movl
pusha
pushf
pushl
lea
jmp
stos
ja
pop
repnz
cltd
ret
jg
dec
enter
sbb
loope
mov
xor
add
cmc
sub
aaa
and
sbb
sub
push
sahf
xor
test
cmp
stc
lcall
jns
fs
int3
outsb
mov
sub
mov
xchg
jns
mov
cli
or
ja
js
int3
jge
add
lea
pop
in
mov
xor
add
and
insl
inc
not
cwtl
mov
push
sbb
fmuls
imul
clc
sub
inc
in
call
int3
icebp
sbb
outsl
outsb
sub
cmpsl
push
mov
stos
mov
cmp
cwtl
rcrb
or
xor
xchg
cmp
sub
subl
dec
sub
inc
mov
iret
aam
movl
pusha
pushf
pushf
movl
mov
mov
push
lea
jmp
call
sti
lret
xchg
jg
in
pop
popa
out
out
divb
inc
filds
movl
adc
mov
adc
call
movsl
stos
xlat
mov
push
lods
in
mov
mov
scas
push
add
imul
xor
bound
scas
mov
nop
cld
cwtl
fistl
dec
add
ss
mov
aaa
cmp
mov
mov
dec
dec
mov
mov
sahf
in
xchg
repz
cmp
loop
push
andb
in
bound
cmc
inc
fnsave
adc
adcl
push
out
rorb
jo
and
or
jg
sti
adc
pop
mov
das
xor
mov
fldl
xor
push
test
lods
inc
mov
lods
negb
and
into
sbb
addr16
int3
xchg
and
out
xchg
negl
push
and
inc
sbb
rcll
ffree
mov
ret
mov
dec
sub
xchg
cmpsb
incl
sbb
ss
das
sbb
add
sub
rcl
je
mov
xor
mov
or
or
rolb
or
sub
sbbb
shlb
stos
inc
xchg
push
sahf
dec
pop
out
outsb
push
xor
jne
repz
fstl
popf
sub
and
inc
mov
cmp
out
pop
lret
push
gs
mov
add
test
lods
dec
pop
inc
in
mov
clc
sub
sub
xchg
push
popa
dec
mov
lcall
cli
dec
mov
out
inc
inc
jmp
pop
lods
movsb
lahf
push
aad
xchg
in
sbb
pop
sbb
iret
dec
lods
mov
add
hlt
jae
mov
push
add
push
hlt
adc
scas
aaa
jb
jb
out
pop
mov
repz
out
and
jbe
ret
mov
aam
inc
mov
adc
sub
or
dec
mov
sub
mov
ja
pop
lds
nop
xchg
cs
or
cmpsl
xor
testl
movb
xchg
pushf
lock
dec
xor
pop
sub
int3
jge
cmpsl
push
xchg
pop
xor
pushf
and
movsb
jecxz
sub
loope
scas
sbb
adc
mov
int3
push
jae
rep
and
xchg
and
sbbl
int3
pop
inc
nop
jecxz
xchg
jb
fwait
xchg
jne
jns
sub
stos
divl
sbb
xor
add
push
fs
lods
and
jae
lods
cs
or
cmpsl
inc
mov
subb
mov
mov
or
aad
rorb
test
test
cmpsl
ficomps
jecxz
dec
js
ret
mulb
ss
jg
inc
and
push
push
sbbl
xchg
and
jbe
hlt
sbb
lahf
scas
add
mov
cmp
data16
sahf
lret
mov
xchg
jb
ljmp
or
xlat
mov
mov
add
pop
sbb
dec
adc
lcall
pop
push
mov
mov
xchg
or
insl
sub
scas
or
pop
xchg
das
es
push
imul
fdivs
lock
int3
lcall
mov
and
xor
push
and
push
jo
aas
int3
cmc
sar
dec
push
dec
movsb
and
adc
popf
lret
add
inc
mov
je
xor
pop
ljmp
sahf
fcompl
test
mov
movsl
adc
jmp
pushf
in
lock
adc
push
add
mov
gs
cmp
rcll
sub
add
sub
mov
push
mov
cmc
popf
and
aad
fstpt
xlat
cwtl
adc
sahf
mov
imul
adc
enter
pop
fiaddl
push
repz
shll
lret
jmp
mov
fmuls
add
sub
fmuls
xchg
rolb
xchg
fbstp
out
mov
cld
adc
negb
sub
shlb
hlt
jle
mov
jl
fdivl
jl
call
adc
xor
jl
pop
sub
sub
fwait
daa
nop
jge
decl
cmp
les
pop
sub
outsl
push
ss
mov
or
orb
cmp
mov
test
and
sbb
adc
stos
arpl
mov
je
popa
daa
repz
mov
je
cwtl
pushf
movl
jmp
out
js
add
xchg
out
adc
fldl
inc
gs
mov
xchg
inc
xchg
jmp
int3
and
fbld
adc
and
xor
and
daa
mov
cmpsb
mov
cmpsl
test
fdivl
add
push
or
adcl
sub
repz
push
push
insb
xlat
push
xor
inc
mov
xchg
fucomip
in
add
jl
add
int3
push
jno
lret
mov
add
add
pop
inc
mov
xor
jnp
sarb
aad
sbb
ret
test
shll
and
jmp
and
leave
jl
sub
mov
jg
push
aas
outsb
or
adc
add
inc
nop
inc
adc
pop
xor
mov
mov
push
xor
xchg
xlat
push
shll
in
push
cmp
mov
xor
cmc
lret
dec
insb
inc
add
fists
mov
cltd
pop
fwait
push
cmp
mov
pop
loope
and
push
lods
sub
xor
jo
push
xchg
inc
in
sbb
adc
hlt
rol
adc
xor
lods
jns
inc
test
clc
push
push
jle
dec
out
mov
dec
mov
and
mov
leave
cmp
pop
dec
popa
sub
lods
mov
mov
pop
push
mov
mov
cli
cmp
out
test
scas
icebp
mov
gs
mov
xor
adc
pop
arpl
clc
sbb
mov
and
or
stos
push
cld
add
cwtl
push
dec
jae,pn
inc
cmp
out
pop
xchg
mov
ror
leave
xor
pop
xlat
aas
sbb
xlat
sub
add
stos
loop
or
insb
cld
sub
or
lds
add
fistps
fs
mov
pop
sbb
ds
popf
push
dec
ret
inc
xlat
pop
mov
test
mov
outsl
or
dec
and
xor
ret
fimull
test
push
jge
out
sub
mov
pop
sub
jbe
and
push
fisubl
mov
shll
or
push
shr
insb
push
pop
pusha
sahf
sarb
mov
cltd
push
lret
sbb
sbb
adc
jg
lds
pusha
xchg
mov
pop
mov
in
add
int
in
sbb
aam
dec
mov
ss
scas
lret
adc
and
lock
add
js
outsl
cmc
mov
cmp
push
xlat
add
dec
les
hlt
test
dec
push
xchg
sarb
out
sbb
mov
jecxz
inc
and
test
mov
pop
xor
inc
call
and
es
lea
jmp
pop
nop
fcoms
inc
push
test
pop
and
ficoml
mov
test
pop
dec
or
jg
sbb
rcll
in
dec
mov
test
scas
out
fsubrl
movsb
cmp
clc
adcl
cmp
add
jno
imul
or
repnz
dec
loop
or
mov
decb
mov
in
fisttps
mov
xchg
lds
jg
mov
inc
mov
push
jmp
sarb
adc
inc
dec
lock
lock
in
imul
jno
cmp
aam
jne
je
cmp
inc
fsubrp
ss
fisubrl
gs
dec
inc
decl
or
add
cmovp
mov
arpl
xor
daa
jg
dec
pop
cmp
jg
lret
test
xchg
cmp
dec
jns
mov
or
add
sub
mov
jmp
orl
sbb
sbb
bound
daa
push
aam
sub
jno
inc
movw
lods
movl
shrl
roll
inc
lds
xchg
into
mov
add
push
dec
and
testb
icebp
addr16
pop
dec
push
inc
mov
adc
stos
repnz
inc
incb
add
push
mov
pop
jg
shrb
push
push
les
filds
arpl
outsb
lds
xor
out
pop
rcll
sbb
push
inc
fcmovnb
lods
lods
mov
xchg
mov
fmull
repnz
xchg
jae
push
jg
mov
add
push
mov
adc
pop
jmp
jae
jno
push
inc
imulb
cwtl
sbb
cmpsl
loope
and
sbb
and
loop
mov
push
sbb
data16
flds
cmp
popa
adc
lods
out
mov
jns
and
adc
popa
lods
cmpsl
push
mov
lods
aad
arpl
std
and
pop
add
xchg
out
cld
mov
sarb
or
mov
insl
add
dec
push
inc
fsubrp
fdiv
mov
in
xchg
sti
mov
xchg
push
mov
jl
push
lret
cmp
mov
cmp
add
pop
clc
push
dec
cwtl
int3
jbe
dec
sbb
popf
jl
insl
cmp
imul
fidivrs
in
mov
into
insl
cld
popa
outsl
hlt
test
cld
jecxz
gs
pushf
movl
jmp
movw
movl
push
pushf
movb
lea
jmp
fs
sarl
int3
mov
jge
insb
push
sahf
cmc
mov
fadd
mov
pushf
out
pop
add
sub
xlat
cmp
out
loope,pt
lret
xchg
lea
movsb
dec
cmpsb
enter
add
and
rcrb
stc
js
dec
int
js
lret
leave
add
inc
jns
fwait
les
test
das
cmp
rcl
mov
inc
inc
sub
in
push
mov
xchg
push
cmp
adc
sbb
xor
inc
stc
and
cld
lods
fnstcw
ss
push
mov
jmp
in
sarb
mov
int3
ljmp
mov
sarl
imul
or
and
xorl
or
into
fsubrs
or
fists
mov
leave
jmp
outsl
push
jb
lods
xorl
repz
add
push
xor
cmp
mov
mov
or
repz
cld
sbb
lock
lods
xor
sub
xchg
in
sahf
loopne
out
dec
add
cmp
push
out
xchg
xchg
out
pop
cld
mov
cli
es
pop
add
out
mov
jno
cmp
push
imul
jecxz
jno,pt
jo
aam
popf
ror
jp
jae
fstpl
push
add
insb
in
mov
dec
add
rol
xchg
sbb
xchg
and
je
inc
icebp
adc
add
mov
cltd
fmul
test
mov
pusha
lret
and
jecxz
ss
mov
lret
in
int
scas
jl
mov
cmpsb
mov
incb
sti
push
push
lcall
and
pop
mov
cmpsl
or
pop
sbbb
mov
jecxz
pop
js
push
adc
sti
daa
or
fdivrl
jmp
loopne
lock
adc
dec
xor
sub
lret
cmpsb
testl
sbb
mov
push
xchg
cmp
dec
adc
push
pop
adc
push
sbb
inc
stc
mov
cmp
and
jle
outsb
add
call
lea
jg
push
push
movl
pusha
lea
jmp
pushf
movl
push
lea
jmp
sahf
jl
mov
mov
or
cltd
inc
adc
cs
adc
jne
sub
dec
push
sbb
mov
jae
mov
iret
jg
lea
mov
loope
lcall
mov
enter
cmp
pop
xchg
pusha
or
push
cmp
or
sbb
push
sub
mov
jecxz
shlb
outsl
cwtl
rol
sbb
xchg
icebp
test
mov
in
inc
imul
int
mov
jecxz
adcb
negb
mov
ffreep
push
pusha
test
push
movsl
and
ljmp
push
sub
es
dec
std
out
push
mov
stos
es
inc
aad
int
lcall
jae
mov
push
fisubrs
mov
imul
movsb
sbb
fs
js
sarl
test
call
cmpb
adcl
inc
mov
pop
xchg
mov
ss
call
pop
andl
aam
dec
das
pop
xchg
mov
fnsave
jns
add
std
sub
inc
fcmovnb
scas
pop
sbb
add
cmp
aad
mov
testl
shrl
mov
adc
mov
jbe
xor
jo
pop
loopne
les
sub
clc
in
fcos
xor
push
movl
call
outsb
test
movsl
xor
xchg
cmpsb
pushl
shrb
xor
cmpsb
mov
aaa
sahf
andb
jne
mov
sub
insl
fsubs
mov
out
jge
leave
and
clc
push
push
inc
jg
mov
xchg
shlb
clc
stos
adc
iret
std
pop
push
in
cmp
rcr
push
jp
rcrl
add
xchg
repz
mov
mov
daa
inc
push
pop
push
dec
sub
es
inc
mov
or
xor
push
add
or
mulb
rclb
cmp
and
sti
push
lds
inc
in
pushl
movl
pusha
lea
jmp
outsl
dec
cs
xchg
dec
pusha
cmc
mov
xor
popf
jecxz
push
xchg
adc
sti
enter
out
sbb
or
clc
mov
push
jle
rcrb
jecxz
out
cmp
or
ficoms
cltd
xor
mov
popf
lock
leave
and
test
pop
dec
dec
dec
sub
sbb
inc
imulb
ljmp
movl
pusha
lea
jmp
jb
aaa
xchg
push
xchg
lods
jne
xchg
push
aaa
imul
fs
mov
out
icebp
adc
aas
sub
inc
bound
add
repz
pop
mov
adc
inc
fisubrs
adc
dec
push
dec
pop
aam
jle
ror
data16
insl
aam
scas
mov
imul
mov
lods
loop
jmp
inc
inc
scas
adc
ja
mov
mov
inc
pop
jg
divb
jmp
cmp
and
or
imul
repnz
rcr
outsb
cmpsb
pop
or
adc
fcomip
movsb
push
adc
cmp
xchg
loope
cmp
mov
xchg
sub
cld
sub
test
xorb
arpl
inc
testl
mov
sbb
inc
lds
notl
out
repz
jae
dec
pop
or
mov
cmp
es
icebp
pushl
pop
add
and
push
pusha
and
mov
mov
or
repz
cs
test
and
das
push
or
cmc
test
movsb
ja
push
dec
push
popl
mov
pop
and
dec
loop
stos
mul
clc
xor
push
push
fs
mov
cltd
mov
clc
fisttpl
into
and
subl
xor
dec
sbb
push
or
push
test
dec
insl
subb
mov
sbb
mov
mov
inc
fbstp
aam
cmp
in
sub
sub
jmp
pop
pop
xor
adc
fildl
lods
or
add
xchg
xchg
mov
iret
jbe
cmp
iret
add
xor
movsb
jecxz
fidivs
lahf
outsl
fwait
cmp
xchg
or
cmp
addr16
out
out
jns
push
jo
dec
movsb
add
mov
out
mov
shll
movsb
sarl
xor
rcl
cld
push
gs
jp
cmp
sub
out
pop
jo
inc
hlt
fcmovnb
jp
popa
mov
jmp
fimull
sarl
out
lock
mov
loopne
mov
or
into
inc
sbb
mov
xor
cld
adc
xor
lcall
enter
mov
std
mov
scas
pop
push
xor
les
mov
je
xor
dec
faddl
pop
inc
hlt
in
shr
popf
out
add
stos
and
adc
in
add
aam
push
insl
sbb
jae
js
pop
inc
pop
mov
sub
inc
lret
mov
fmul
stos
mov
negb
mov
adc
in
arpl
push
je
xchg
push
daa
cmpsl
mov
push
jmp
rcrb
dec
mov
imul
call
ficomps
add
gs
xchg
inc
mov
in
int
dec
mov
dec
jne
aad
sub
hlt
inc
inc
dec
in
into
test
sub
mull
mov
sbb
data16
ds
andl
sbb
dec
sahf
jle
imul
repnz
jg
push
cwtl
into
mov
js
dec
pop
pop
ret
std
cmp
sub
data16
and
sbb
pop
es
fbstp
mov
mov
faddl
jb
inc
add
cmpsl
rep
mov
pop
rclb
lods
cmpsl
mov
in
imul
mov
repz
jmp
cmp
popa
stos
shl
rep
add
xchg
jecxz
fistl
and
dec
jmp
push
sub
das
mov
ret
push
jecxz
mov
sbb
push
jg
jno
dec
sub
adc
jno
mov
rolb
aam
js
es
pop
pop
jbe
sbb
xchg
shrl
inc
bnd
jg
imul
jae
adc
xchg
stc
mov
cmpsl
leave
scas
sbb
add
inc
xor
test
lcall
push
sub
push
hlt
and
lahf
push
jp
mov
mov
mov
pop
jp
push
pop
cld
test
pop
ss
adc
adc
push
mov
fs
enter
cmpsl
test
xor
stc
cmp
repz
sub
out
and
pop
in
loop
leave
test
pop
mov
ja
out
mov
je
ljmp
arpl
add
inc
and
mov
and
inc
insl
bnd
sbb
pop
clc
lcall
shrl
scas
int3
mov
lahf
dec
inc
repnz
add
mov
movl
push
push
pushf
pushf
lea
jmp
pushf
pushf
jmp
in
xchg
rorl
xchg
mov
dec
mov
mov
rclb
mov
jg
dec
add
sti
adc
repnz
jae
in
jp
xchg
jmp
xlat
test
mov
pop
aam
sub
cli
push
lahf
popa
mov
adc
mov
push
mov
daa
push
mov
push
pop
add
mov
jae
xor
push
xor
pop
mov
icebp
lret
stc
loopne
int3
mov
xchg
jg
int3
int3
cli
sahf
jmp
add
sti
in
cwtl
add
out
adc
loope
test
and
jge
and
out
cmp
cld
sbb
popa
daa
xchg
fildll
dec
and
cmp
lret
clc
hlt
fs
ret
nop
lahf
pushf
and
xchg
mov
insb
fnstenv
pop
mov
lock
lss
outsl
lock
stos
out
icebp
stos
jmp
lea
inc
xor
pop
negb
iret
iret
push
dec
bound
das
cltd
cmp
nop
pop
movsl
lock
xor
movsl
int3
xchg
pop
lret
jp
jle
dec
jle
adc
test
jle
das
inc
icebp
xor
adc
push
xor
sbb
jns
dec
inc
fld
jle
adc
mov
mov
pop
mov
mov
push
push
inc
pop
mov
mov
mov
lea
roll
icebp
enter
into
nop
sub
sub
sbb
sbbb
jnp
mov
dec
add
xchg
jge
lock
ds
cli
fcoml
mov
aas
addl
inc
dec
and
jno
or
mov
jno
push
subb
or
jp
jle
inc
or
xchg
aam
sbbb
sbb
std
mov
push
movsb
inc
arpl
insb
jne
dec
and
inc
out
rcrb
cld
jmp
int3
mov
sub
lods
orb
jecxz
in
xchg
jge
cmp
fs
das
pop
mov
push
pop
inc
cmp
ljmp
mov
lods
cmp
mov
pushl
dec
cld
adc
sub
sbb
sbb
pop
pop
loopne
ret
test
xorl
insl
cmp
dec
ror
adc
std
pusha
xor
jle
xchg
pop
fists
mov
mov
push
in
cmc
xor
cmpsl
sbb
add
jl
and
push
pop
fsubr
push
mov
adc
lret
test
imul
cmp
scas
ret
cs
inc
jne
insl
test
inc
es
or
jmp
jne
cmp
ret
ja
fs
out
push
insl
adc
ds
or
and
pushf
sbb
xor
cmp
jp
aaa
into
pop
sub
inc
add
add
xor
mov
dec
movsb
rorl
in
or
pop
sarl
and
dec
lret
dec
push
jge
insb
fadds
sub
xchg
movl
inc
pop
pushf
jmp
jno
push
push
movl
pusha
mov
lea
jmp
repnz
out
sti
mov
push
add
loop
das
popf
leave
aam
mov
mov
dec
lcall
aam
cmp
loop
inc
lea
das
lds
lret
inc
mov
mov
bound
subb
lods
fisttps
lods
sub
lock
and
sar
fistpll
outsl
sbb
lock
add
sbb
sahf
fdivs
xor
adc
jb
mov
repz
test
test
je
out
mov
push
nop
rorb
aaa
bound
inc
in
fwait
fwait
jae
inc
sub
nop
repnz
adc
cmp
cltd
stc
mov
mov
push
sub
pop
inc
push
adc
cmc
fwait
dec
or
iret
or
lcall
cmpsb
mov
test
cmc
and
mull
jb
adc
push
ds
outsb
in
nop
push
cmp
rorb
imul
les
jb
in
lea
push
es
inc
out
arpl
pop
xchg
or
add
sub
cmp
mov
sbb
cmp
xorl
cmp
lcall
mov
and
add
mov
arpl
rorl
inc
cmp
inc
add
jae
xchg
addl
cld
imul
gs
and
xor
inc
mov
dec
cmpsb
in
or
mov
mov
popa
dec
int3
ljmp
push
outsl
adc
das
pop
stc
xchg
jne
mov
pop
out
dec
sbb
int3
sub
pop
cmpsl
mov
push
or
idivl
cmpsl
mov
sub
push
sbb
xchg
ret
pop
xor
inc
in
lea
inc
scas
mov
mov
iret
loopne
or
lahf
clc
mov
push
inc
pop
or
mov
adc
mov
xchg
mov
mov
add
loop
out
rdpmc
roll
js
ja
jno
mov
push
xchg
lahf
mov
jns
push
mov
jmp
stc
scas
adc
outsl
xlat
in
ljmp
and
pop
push
outsl
jae
rorl
inc
inc
inc
add
cmc
inc
jmp
mov
sub
ret
popf
loop
sub
mov
adc
pop
hlt
add
sub
shlb
dec
or
lods
xor
testl
inc
arpl
fwait
cli
andl
stc
loopne
push
test
mov
xor
sti
xor
jle
mov
inc
popa
ss
gs
inc
js
xor
add
aaa
push
pop
jnp
mov
inc
jmp
addb
leave
jbe
mov
mov
in
lods
mov
scas
fiadds
incb
and
sbb
in
pop
inc
shll
rcl
xlat
rcrb
dec
shlb
fdivl
insb
push
mov
or
push
mov
xchg
fsubl
or
xor
jbe
sbb
xchg
or
les
sub
ljmp
add
xlat
movsl
add
and
mov
in
lcall
rorb
push
jge
or
mov
mov
push
add
shlb
repnz
loope
inc
jge
jne
xor
xor
mov
scas
aam
mov
negb
jnp
mov
jae
push
mov
fstpl
jmp
pop
xchg
movl
lea
jge
pusha
movl
pusha
push
movw
movb
lea
jmp
jmp
imul
pop
pop
xor
popa
and
insb
ljmp
sahf
pop
ret
lock
out
sbb
lock
test
and
mov
inc
scas
hlt
push
test
test
les
mov
imul
jp
testb
call
fiaddl
xor
fnstsw
bound
sbb
add
jo
add
leave
jne
shl
mov
stc
jp
fbstp
sbb
xor
mov
add
jbe
dec
sub
fs
inc
jmp
movl
push
push
movl
movw
pusha
lea
jmp
movl
movb
movb
mov
pushl
lea
jmp
test
xchg
xor
movsb
cli
cmpsb
loop
xor
cmpsl
fists
jno
aaa
outsl
dec
and
test
pop
or
mov
add
aas
add
mov
rorb
testb
and
loopne
xor
mov
hlt
arpl
rorl
in
jmp
pop
pop
fdivr
sbbl
mov
dec
xor
pop
icebp
mov
mov
test
sysexit
push
pusha
jmp
pop
push
mov
or
hlt
dec
sub
sbb
test
mov
subb
jne
mul
mov
or
jbe
fstpt
test
scas
mov
daa
lds
lods
inc
cltd
nop
ja
imul
or
sub
sahf
mov
testb
mov
aam
inc
jmp
add
add
sub
add
lahf
fst
shl
mull
or
mov
push
pop
and
add
sbb
sub
dec
pop
repnz
pusha
cltd
insb
and
mov
sub
cmpsl
cmp
mov
push
or
into
test
stos
adc
jp
shlb
mov
adc
sbb
xor
cmp
sahf
mov
and
shll
testl
mov
jl
les
stos
push
out
ja
push
jecxz
pop
out
dec
loopne
in
or
add
add
out
mov
shl
and
push
jbe
pusha
and
mov
cmp
pop
inc
fwait
movsb
jnp
cwtl
mov
repz
push
pop
in
lods
inc
mov
test
push
pop
ljmp
cmp
movsb
sbb
fs
push
sti
shrl
popf
jne
out
jp
nop
fs
xchg
or
push
cmp
popl
pop
xor
and
mov
into
out
add
in
or
addr16
push
xchg
mov
push
sbb
out
daa
gs
arpl
rcrl
mov
dec
mov
push
push
jns
in
lcall
mov
inc
pop
loop
aad
jp
push
add
outsb
ret
adc
js
mov
mov
push
jne
push
push
sub
push
jmp
push
dec
imul
or
jmp
ljmp
repz
mov
fbstp
jne
cmp
popf
pop
movlps
or
inc
push
enter
test
xchg
mov
out
bound
xorb
xlat
pop
daa
pop
add
push
movl
or
push
jecxz
inc
in
pop
loop
mov
pop
mov
into
xchg
ljmp
inc
aad
adc
sub
xor
std
sahf
sub
movsl
push
push
scas
inc
out
rol
jecxz
push
fnstcw
lret
inc
adc
bound
add
push
jns
xchg
xchg
jl
adc
mov
in
inc
call
pop
cli
cmpb
or
lret
mov
call
fstpl
mov
lock
in
lret
and
mov
aad
push
pusha
and
insl
inc
in
popf
jae
inc
adc
cmp
pop
push
or
rolb
mov
fwait
and
loopne
repz
shll
jb
leave
pop
pop
mov
dec
mov
int
xchg
inc
mov
sbb
push
fmulp
push
fsubl
mov
addr16
cmp
loop
movaps
jg
push
fs
xchg
pop
rclb
mov
sbbl
insb
xchg
sbb
mov
jns
mov
out
test
adc
aaa
sub
xchg
add
sub
mov
in
sti
in
or
mov
pop
and
lret
adc
imulb
es
out
sub
fstl
mov
mov
sub
mov
fdivrs
sub
xchg
fistpll
hlt
push
xor
and
sub
je
push
loope
out
cmp
or
inc
in
data16
movl
mov
jmp
call
jmp
push
movl
pushf
pusha
lea
jmp
ja
lcall
fdivr
in
cmp
sub
or
movsl
daa
and
push
lock
mov
and
push
lret
jno
mov
adcb
mov
push
hlt
mov
es
push
xchg
loope
inc
jns
fistpl
lret
enter
out
or
lret
mov
push
adc
mov
xor
add
pop
cvttps2pi
sub
test
fsubl
cltd
aam
in
ret
lea
in
das
sub
daa
jmp
leave
inc
push
or
mov
xchg
lea
dec
mov
cmp
add
arpl
mov
loop
push
fiaddl
aaa
out
sbb
lock
push
repz
das
int
jbe
jo
or
inc
aaa
mov
insl
adc
jecxz
cmpsb
mov
aad
add
cli
cmp
mov
inc
packsswb
push
xor
daa
cmp
js
cmc
cli
leave
sbb
mov
add
sbb
sbb
js
out
popaw
negl
je
jmp
lea
js
shll
ficoml
dec
push
add
push
das
pop
in
icebp
cmp
adc
and
xor
popl
jecxz
addr16
add
add
jmp
mov
dec
cmp
mov
fcoml
rcr
mov
in
and
mov
sbb
dec
pop
or
cmp
mov
push
push
inc
movsl
ss
push
or
mov
imul
pop
and
mov
or
or
add
sti
or
mov
out
rclb
loop
mov
add
lahf
add
jl
push
xor
mov
insb
push
xchg
cmpsl
out
jne
sbb
pop
mov
outsb
sub
inc
pop
add
adc
enter
cmp
out
push
adc
jge
jbe
or
popf
decl
mov
negl
lea
gs
mov
arpl
dec
stos
inc
loop
fldl2t
lret
sbb
outsb
mov
mov
ret
xor
daa
dec
jnp
xchg
test
lods
jb
pushf
cmp
or
sbb
mov
inc
std
hlt
jo
aaa
inc
fs
mov
and
ja
cmp
sbb
mov
inc
xor
aas
dec
loopne
jns
sub
sarl
jg
pop
repnz
clc
mov
push
mov
leave
loop
je
bound
out
ds
xorb
aad
add
mov
movsb
push
out
and
fisubs
addl
aas
andl
dec
sbb
dec
imul
mov
add
cs
lods
vphsubwd
jb
inc
loope
repnz
inc
and
shl
lds
push
add
dec
cmpsb
nop
outsl
push
fnstenv
xchg
or
cmp
xlat
dec
into
lcall
pop
fbstp
into
out
sbb
adc
mov
or
data16
adc
leave
sti
dec
mov
mov
scas
pop
hlt
pushf
jmp
jmp
clc
adc
int3
jae
mov
push
sub
and
lret
imul
jne
sbb
or
jo
or
cmpl
jae
in
js
dec
ja
xchg
aas
js
rclb
jle
imul
sub
sbb
bnd
cli
fists
int
pushf
jae
flds
xor
mov
es
adc
sub
loope
pop
popa
ja
or
fisubrs
mov
adc
xor
std
fadds
xor
in
fsubs
sub
mov
int3
fisttpll
das
stc
adc
lock
addr16
mov
stos
imulb
adc
cmp
ret
dec
cld
bound
repz
andb
inc
loopne
in
jmp
pop
cmpsl
mov
push
mov
cmp
cmp
sub
mov
les
adc
inc
pop
mov
and
or
in
setbe
bound
int
imul
xchg
leave
mov
mov
or
inc
fbstp
inc
sub
fcmove
in
sahf
clc
inc
adc
adc
xor
sub
aas
xorb
and
push
or
lea
or
mov
imul
aaa
mov
cwtl
ret
loopne
pop
mov
arpl
cmp
jle
test
sbb
mov
lods
mov
cmp
fistps
aam
jl
leave
push
subl
jg
daa
popa
inc
lret
xor
mov
dec
inc
mov
aad
pop
xchg
push
dec
stos
fistps
outsl
shll
xchg
sbbb
vcmpps
outsl
mov
ljmp
mov
fsubr
add
add
pop
call
and
test
dec
test
int
inc
pop
pop
or
movsb
lods
lea
xchg
add
mov
scas
push
fsubrs
xchg
outsl
cmp
mov
and
mov
lods
leave
je
or
adc
and
add
js
mov
push
shrl
dec
or
inc
ficomps
cmp
movsl
mov
lock
test
cmpsb
enter
sbb
adc
sub
call
je
cld
loope
pop
mov
and
loop
xor
loope
jl
mov
cltd
les
jns
add
dec
insl
mov
loopne
mulb
call
sahf
fistps
adc
mov
repnz
les
cs
xchg
dec
into
out
fstps
pop
arpl
cmpsb
aas
ja
cmpsb
in
in
sbb
sarl
and
push
std
mov
lret
adcl
pop
in
cmp
pop
and
jo
lods
fbstp
out
shl
test
nop
mov
call
sub
pop
imul
call
jbe
les
lods
ret
mov
movsl
aad
add
inc
push
jno
icebp
push
imul
sub
scas
mov
inc
lret
cmp
mov
xor
cmp
cmpsb
test
pop
popa
inc
popf
ret
lret
daa
lahf
xchg
testb
in
add
les
pop
add
xor
mov
insb
pushf
lret
es
lods
mov
add
jne
inc
cmp
dec
arpl
mov
cmp
sub
movsl
inc
ret
mov
fcom
mov
sub
getsec
sbb
pop
pusha
les
sbb
je
sbb
xor
sti
popa
out
pop
adcb
xor
pop
ret
jecxz
test
jp
and
push
inc
sub
mov
stos
int3
mov
lcall
mov
jp
leave
sbb
mov
cli
sub
sub
sbb
ret
dec
decb
aas
inc
adc
xor
daa
dec
add
pop
mov
fdivl
sub
push
andb
pushf
jmp
cmpsl
les
sbb
imul
in
lret
ss
aas
sbb
mov
repz
fwait
roll
data16
sbb
xor
ficomps
inc
pop
test
mov
int3
mov
push
adc
scas
mov
and
inc
sbb
pop
ss
mov
inc
xchg
inc
fcmovnbe
ret
jge,pn
fdivs
mov
int3
popf
xlat
test
mov
loopne
fsubl
shlb
jb
lods
pop
scas
push
dec
jo
dec
imulb
in
mov
mov
out
push
jge
mov
sub
inc
jecxz
pop
mov
in
cmp
ljmp
mov
fcmovne
aam
in
popa
mov
jmp
rcll
dec
into
cltd
and
stos
jmp
imul
stc
popf
jae
push
cld
sbb
addl
mov
call
pop
and
push
jb
mov
jecxz
loope
add
inc
jo
ja
movsb
dec
sub
je
ds
call
mov
pop
loopne
int
mov
mov
and
lods
or
xor
mov
push
push
push
push
out
mov
je
ds
stos
fistpll
jnp
les
fmulp
jmp
mov
fdivs
lods
mov
add
mov
sbb
hlt
xchg
jl
push
test
mov
mov
mov
cmpsb
cmp
mov
ret
les
test
xor
jle
mov
rclb
add
outsl
jae
mov
pop
lea
ret
and
loop
add
inc
mov
mov
test
fisubrl
dec
add
insb
inc
xor
add
cwtl
movl
adc
popf
and
cmpsb
push
rolb
xchg
sub
xchg
mov
add
dec
cmp
sbb
cmc
pop
add
ds
cwtl
adc
jle
push
mov
leave
pusha
cld
movsb
dec
adcb
sbb
shrb
push
movsb
dec
sub
inc
sub
dec
sbb
out
daa
add
inc
mov
std
repnz
test
cmp
dec
nop
adc
nopl
jp
dec
lods
inc
loopne
inc
shll
push
aas
std
sbb
lcall
push
xlat
sub
lcall
cmp
sbb
sbb
inc
leave
adc
mov
dec
mov
push
testl
cmp
xchg
fucomp
cwtl
lds
loopne
daa
jnp
outsl
popf
pop
nop
es
xchg
in
mov
mov
ss
movl
push
dec
outsb
jmp
xchg
fnsave
inc
fiaddl
mov
jmp
mov
in
sti
in
and
movl
popf
lods
mov
call
scas
or
mov
mov
mov
cwtl
or
lret
pop
mov
jb
mov
mov
ret
jb
lods
test
popa
jle
mov
jb
add
rcrl
xchg
dec
mov
mov
scas
add
fadds
sub
icebp
aam
cmp
cmp
push
movsl
roll
ds
fnstcw
mov
cmpsb
lods
xor
shrl
fwait
repnz
mov
andb
mov
push
out
inc
shlb
leave
lods
movl
inc
ja
inc
ds
jne
addr16
adc
and
mov
push
add
jae
jno
mov
push
fs
cmc
in
cs
sbb
and
fimuls
insl
ret
movsl
dec
fcoms
aad
and
push
iret
adc
fdivrl
in
clc
movsl
in
xchg
out
stos
mov
cld
adc
add
pop
mov
xor
daa
pop
in
push
daa
shll
sub
and
fsubrs
adc
sbb
or
jns
xchg
icebp
xchg
fnstcw
xchg
xor
and
nop
inc
pop
dec
int3
pop
xchg
lods
mov
add
cmp
mov
fbstp
mov
push
aaa
push
or
fs
jno
sti
adc
lea
lret
add
push
or
outsb
and
in
repz
push
dec
out
movsb
pushf
sub
or
out
jl
jb
mov
inc
xlat
loop
jl
mov
out
ret
rolb
xor
sbb
or
xchg
jl
ss
push
scas
push
imul
cmp
nop
mov
mov
jne
mov
lods
out
mov
mov
icebp
jbe
inc
push
mov
pop
adc
ja
data16
or
bound
dec
sub
addb
or
cmp
call
xchg
test
repnz
mov
out
xchg
enter
pop
inc
bound
fldl
out
jb
sahf
fcmovnb
cwtl
mov
xor
mov
dec
sub
xlat
xchg
adc
xchg
inc
pop
ljmp
push
mov
data16
sbb
and
jp
cli
mov
mov
xchg
or
int
fildl
adc
inc
xchg
cltd
sub
sub
outsb
inc
add
or
add
cmpsb
mov
mov
out
push
xlat
adc
aad
add
popf
jmp
mov
arpl
fisubrs
mov
test
add
and
or
adc
inc
xchg
sahf
pusha
movsl
xchg
dec
js
gs
adc
and
jle
mov
mov
out
xor
xor
rolb
shl
adc
and
cli
loopne
cmp
xor
cmpsl
pop
arpl
sub
fiadds
sub
movb
insb
aas
jle
push
ljmp
sub
and
dec
pop
jg
nop
pop
nop
js
lds
inc
lock
out
and
pop
nop
in
in
in
mov
repz
std
xchg
testb
lods
push
sub
nop
adc
ds
and
and
and
jb
adc
jg
mov
in
imul
imul
leave
addr16
adc
insb
or
std
stos
mov
sbb
js
jne
sbb
pop
and
out
add
aad
mov
add
cltd
mov
mov
int
add
filds
dec
or
xchg
decl
aad
jne
sbb
rorb
jmp
adc
dec
scas
mov
pop
dec
xor
and
stos
pop
jl
dec
add
pusha
cli
mov
push
ficomps
cmc
loope
xchg
mov
mov
adc
sti
mov
int
ds
jmp
mov
pop
mov
rolb
test
fiaddl
push
push
dec
jbe
xchg
push
mov
aad
stos
lea
cmp
add
pusha
xchg
xlat
push
das
popa
lcall
ljmp
xor
xchg
sub
sub
jno
js
rorb
push
sti
loop
scas
insl
xchg
data16
jnp
adc
je
shl
lods
shrl
bound
rcll
clc
jge
aas
jg
jbe
and
jns
mov
add
jmp
outsb
aad
or
mov
daa
paddd
sbb
xchg
push
and
and
adcb
pop
pop
sbb
mov
dec
fmull
outsb
jl
loop
push
inc
cmpsb
std
mov
cld
fcomip
mov
cli
cmpsb
cs
sbb
in
adc
push
lret
shrl
mov
or
adc
repnz
xchg
mov
out
in
mov
lret
and
sbb
push
mov
pop
jecxz
sahf
les
mov
scas
mov
jns
or
cmpsl
mov
push
jg
cld
std
rclb
cwtl
sub
add
stc
mov
int3
dec
negb
cs
xchg
sub
insl
ljmp
les
adc
negl
stos
xor
dec
ficoms
dec
jecxz
dec
and
inc
mov
ret
movsl
sbb
adc
adc
mov
push
jbe
ret
lea
add
addb
add
movl
pushf
jmp
pushf
movl
pushf
push
lea
jmp
fnstcw
dec
cli
ret
int3
js
sub
mov
mov
sti
mov
fs
stos
pop
jnp
xchg
fdivr
mov
mov
mov
movsl
jmp
push
fstpl
cli
mov
jp
push
or
fs
icebp
in
jne
arpl
in
or
inc
shlb
dec
add
call
jmp
das
xor
push
push
inc
insb
inc
dec
mov
repz
mov
mov
out
lcall
in
mov
pop
mov
cmpsl
or
movups
out
mov
sarl
lods
and
jnp
pop
loope
adc
add
js
push
je
lods
dec
imul
or
test
push
push
testb
ja
sahf
pushf
jmp
pusha
movl
jmp
push
movsl
int
and
cmp
xchg
loope
loope
in
dec
sub
dec
push
mov
jmp
add
insl
jae
gs
cld
cmp
dec
mov
loop
pop
addr16
adc
cmp
lods
sbb
mov
daa
arpl
inc
aaa
inc
enter
rcll
inc
shrl
jne
ja
add
jmp
mov
movsl
in
mov
pop
mov
mov
push
push
pop
inc
mov
mov
cmp
clc
mov
sti
nop
repnz
cmpsb
mov
into
jmp
insb
dec
inc
addr16
xchg
lds
inc
sarl
ds
xor
dec
loope
fiadds
mov
loopne
sbb
pop
or
aad
imul
xor
int
cmpsb
push
mov
pop
pop
or
inc
pop
push
xchg
add
mov
pop
add
jae
pop
xor
inc
shll
and
jae
mov
pushf
pushf
pushf
pusha
lea
jmp
movl
pusha
movb
pushf
push
lea
jmp
hlt
cmp
fldl
cmp
xchg
dec
cli
lahf
call
jg
push
ret
cwtl
mov
xor
sahf
ret
sub
shrb
sbb
shlb
xchg
or
dec
push
pop
in
int
xchg
fisttpl
cwtl
enter
sub
mov
popf
lahf
sub
cmp
lret
fsubrs
int3
aam
or
inc
shl
into
pop
in
mov
lock
ret
adc
aaa
mov
add
cmp
outsl
push
sub
mov
cmpsl
loop
dec
jmp
lds
test
cmpsl
jle
orb
mov
mov
push
inc
xor
and
mov
pop
fildl
shrb
xorl
dec
jmp
mov
hlt
leave
xchg
testb
cs
add
mov
addr16
mov
rcl
ja
mov
jnp
inc
adc
pop
jns
xor
dec
dec
inc
pop
jnp
xorl
cmp
out
lods
lds
inc
sarb
jno
xor
cmp
testl
popa
loop
adc
mov
lea
lock
std
push
add
xor
adc
or
mov
and
mov
jns
imul
arpl
pop
lods
icebp
inc
fidivl
nop
outsb
and
call
sbbb
inc
xor
mov
out
addr16
inc
lcall
testb
sarb
dec
jne
push
shrb
jmp
insl
cmpsb
rorb
movsb
loop
in
push
push
xor
cli
jb
push
adc
mov
in
repz
dec
mov
sub
imul
lock
add
repz
xchg
jmp
lahf
addb
push
dec
jge
jp
pop
push
mov
push
cmc
xor
mov
mov
dec
mov
cld
cld
cs
insl
xor
push
mov
jno
outsb
inc
fistpl
mov
mov
fisttpll
iret
in
out
pushf
aam
mov
aaa
dec
pop
mov
pop
dec
push
rorl
cmp
and
aad
push
or
jmp
xor
hlt
in
iret
jl
test
push
out
inc
outsb
dec
lods
in
mov
daa
xor
jno
jg
mov
aas
rcrb
push
adc
jmp
xor
cmpsb
pop
and
push
push
inc
xchg
mov
sbb
les
push
mov
and
call
jbe
subb
and
add
loop
xor
sub
push
lret
test
jmp
pusha
fildl
dec
sbb
pushf
push
dec
and
cmc
push
je
shrb
mov
xor
and
adc
jmp
scas
push
outsl
mov
xor
cmp
push
and
mov
loope
test
dec
aaa
fnstsw
mov
iret
das
je
call
push
lock
std
std
mov
imul
jbe
in
ffree
les
sub
push
cltd
adc
pop
sbb
xor
jo
jl
jge
jmp
inc
or
push
iret
add
in
and
test
adc
xchg
push
inc
ds
movsl
sbb
inc
push
in
xchg
in
xchg
push
mov
xchg
jne
push
fs
pop
enter
ror
jmp
adc
dec
cmp
gs
adc
mov
scas
rcrb
jle
addr16
adc
outsl
pop
pop
add
in
pop
add
mov
stc
in
add
sub
mov
sub
stos
lea
jnp
mov
es
jmp
int
inc
aad
jp
loop
jecxz
jecxz
inc
inc
int
push
jecxz
in
test
mov
cmp
arpl
inc
sbb
xor
xchg
outsb
sti
out
pop
push
sti
dec
outsl
or
adc
push
mov
push
push
iret
mov
adc
nop
jle
data16
mov
or
int3
mov
lret
mov
mov
sbb
sub
scas
fimuls
in
adc
mov
xor
cwtl
fmull
push
sub
sbb
and
jge
cmp
mov
idivb
repz
inc
int3
shr
repz
nop
xchg
xchg
repnz
cmp
fadds
sbb
sbb
jbe
das
cs
inc
and
outsl
aad
es
push
seto
push
mov
shll
out
icebp
cmpsb
push
mov
data16
cmpsb
sub
mov
ucomiss
aaa
mov
xor
mov
movsb
sbb
ljmp
xchg
adc
cmp
mov
xchg
sti
incl
int
push
sbb
fistpl
mov
inc
sub
or
jl
sahf
daa
add
inc
xchg
jb
dec
mov
ja
dec
add
enter
dec
insb
cmp
in
js
and
cmp
outsb
push
nop
mov
shlb
lcall
add
jo
ret
xchg
xchg
xchg
and
imul
mov
shlb
and
imul
mov
adc
in
push
pop
pop
jecxz
push
filds
push
stc
mov
add
jb
dec
lods
jg
daa
sbb
pop
lock
sbb
pop
sbb
dec
cld
inc
rcll
int3
data16
jne
cli
dec
pop
jecxz
pop
dec
orps
xchg
int3
es
int3
daa
pop
faddl
out
jmp
mov
loope
dec
or
stos
not
dec
cld
inc
repz
data16
jne
mov
pushf
sbb
mov
imul
cmp
clc
cli
movl
jae
sbb
xchg
js
sbb
hlt
fwait
pop
jnp
inc
or
js
insl
add
inc
lret
add
lds
jmp
pusha
movl
pushf
pushf
pushl
mov
lea
jmp
xchg
sbb
stos
iret
lea
or
pop
cs
push
mov
inc
movsb
test
adc
pop
pop
sbb
out
adc
pop
js
adc
jae
add
sbb
or
jp
lcall
ss
dec
push
sub
cmp
cmp
jno
mov
rcrb
into
xchg
xchg
inc
lret
cmpsb
movl
pushl
pushf
push
lea
jmp
mov
cs
pop
push
in
dec
flds
xor
cmp
push
mov
add
ret
fsts
pop
jl
fwait
cs
or
xchg
js
jb
imul
and
or
inc
leave
rol
push
push
movl
pushf
push
push
pushf
movl
pushl
lea
jmp
inc
rcll
test
xchg
mov
stc
jnp
jne
lretw
movsl
mov
cltd
fstpt
rorb
add
iret
testl
xchg
pop
sub
or
dec
pop
pop
and
inc
pop
jg
cmpsb
push
scas
test
or
or
pop
cli
imul
int
leave
mov
xor
jmp
pushf
movl
jmp
int3
or
shrl
enter
dec
ss
fildl
add
and
xorb
cmp
push
mov
lds
mov
jno
clc
out
mov
and
mov
xchg
sbb
cmp
out
push
push
sbb
lds
and
jnp
insl
clc
andl
pop
int3
inc
mov
mov
sti
cli
cmpsl
mov
add
dec
jp
jae
lds
xor
cmpsl
add
lcall
pop
ss
sub
aas
dec
ffree
popa
inc
test
int3
arpl
xchg
push
jne
popaw
jo
notl
add
mov
cld
imul
cmpps
outsb
sub
inc
cmpsl
ljmp
addr16
out
or
mov
xchg
xchg
push
add
push
fstpl
mov
insb
jbe
xchg
jno
jns
idivl
dec
sarl
test
sbb
into
pop
and
push
mov
xor
ficompl
jnp
inc
in
icebp
mov
cmp
pop
pop
leave
fwait
addr16
bound
out
xor
mov
mov
pop
push
movsb
daa
adc
mov
sti
add
mov
ret
add
loop
mov
shrl
fistpl
cmp
cmpsl
lret
jmp
fdivrs
jmp
cwtl
imul
popf
sub
sbb
inc
sbb
fildll
repz
xchg
or
out
mov
pop
in
fdivs
pop
sbb
add
loope
mov
daa
or
xor
clc
mov
add
mov
jle
sub
or
rclb
pusha
cmpsl
jmp
rcrb
out
call
inc
adc
lret
mov
popa
fmuls
inc
enter
rorl
lea
stc
push
repz
loope
jnp
or
dec
add
pop
fadds
ds
lods
sbb
dec
ljmp
pusha
add
cmp
notl
pop
fnstenv
rcrl
cli
mov
inc
sbb
aam
push
jo
les
lahf
pusha
inc
sbb
add
xchg
push
mov
dec
mov
pusha
mov
jno
pop
jns
xchg
sbb
jmp
cmpsl
bnd
addb
add
dec
cmp
scas
insb
fisttps
dec
shrl
mov
push
pop
fnstenv
or
out
sub
call
in
mov
stos
clc
fimull
sub
push
out
cltd
sbb
std
popa
cmp
dec
lret
lock
xlat
test
das
icebp
jno
mov
cltd
leave
mov
mov
pop
sub
mov
pop
aam
addr16
aam
repz
ja
pusha
cltd
daa
sbb
andl
inc
mov
cltd
cmpsl
out
rolb
sbb
outsl
daa
pop
xor
push
cs
out
add
xchg
test
and
xor
sbb
jb
vmovsd
adc
sub
std
or
xchg
mov
lds
mov
xor
inc
pop
push
in
ret
fmuls
test
mov
and
fmulp
sbb
enter
xor
rorl
enter
adc
jbe
ds
lods
push
mov
pop
scas
xchg
mov
das
fists
jae
push
inc
lds
leave
jo
jno
inc
shlb
sub
push
mov
pop
push
or
sbb
xchg
dec
pop
dec
mov
ret
add
mov
imul
xor
std
dec
push
das
mov
ds
push
or
dec
xor
outsl
sub
mov
jno
rcr
cwtl
ss
sub
lahf
mov
pop
adc
jbe
mov
cmp
mov
mov
cmpsb
iret
insl
inc
push
test
jp
icebp
in
add
inc
insl
stos
test
lods
push
pop
jnp
pop
mov
adc
cli
pusha
mov
pop
fadds
movsl
pop
inc
sub
mov
std
inc
or
lods
rolb
mov
test
lds
xchg
lcall
inc
clc
mov
mov
fsts
lds
mov
push
cmp
and
sbb
sti
mov
les
and
xchg
mov
sahf
into
xor
jmp
push
inc
sti
call
xchg
push
cmp
fnstenv
mov
or
pusha
xchg
mov
adc
sti
mov
mov
data16
adc
sub
out
cmp
sarl
inc
lds
xlat
push
pushf
das
mov
movsb
sub
sahf
push
cmp
imul
fldenv
pop
pop
push
cmp
adc
cmpsb
rcl
fwait
push
cmp
lods
jg
xchg
ss
jle
mov
xchg
fs
push
dec
pop
sbb
xchg
push
or
sub
cwtl
out
iret
mov
pop
push
dec
aaa
jb
sbb
pop
sbb
arpl
ret
cwtl
stos
inc
movl
push
pushf
mov
lea
jmp
pushf
pushf
pushf
movl
pusha
pushf
lea
jmp
mov
ret
sbbb
dec
sbb
sbb
cltd
adc
jp
add
clc
in
enter
outsb
dec
sub
and
mov
adc
outsl
jnp
jb
xchg
push
lcall
sub
int
jns
fistl
adc
push
inc
les
sbb
jecxz
addr16
mov
pusha
fisttpl
xchg
lds
and
outsb
sbbb
add
adc
iret
aas
jp
repnz
jmp
mov
fsubrs
pushf
cmp
cmp
dec
mov
dec
mov
xor
mov
mov
ret
pop
insb
push
jmp
fcoml
je
ss
push
adc
push
xor
adc
jo
push
cmp
pop
fs
jecxz
inc
and
or
add
sbb
sbb
mov
call
ds
lahf
xor
ret
jl
leave
out
jg
movsb
mov
mov
adc
push
xor
inc
ret
scas
jns
pop
addl
scas
cmp
pop
jmp
mov
inc
push
sub
add
mov
jl
and
ss
popf
push
lods
jecxz
and
xor
xor
jo
mov
mov
out
ror
scas
pop
ss
add
push
hlt
jb
inc
shll
pop
jmp
cmpsl
or
cld
lods
std
inc
pop
jne
inc
xor
or
push
mov
js
lods
in
xchg
rolb
movl
shld
sbb
les
jp
ret
jnp
pop
ljmp
lcall
sti
jo
stos
mov
mov
inc
dec
pop
push
bound
fsts
cmp
xchg
jbe
pop
xchg
test
mov
mov
mov
mov
pusha
adc
adc
add
and
fidivl
leave
inc
dec
sub
insb
repnz
adc
call
ret
int
lahf
in
xchg
mov
shr
mov
pop
fiaddl
add
jo
imul
shrl
or
jmp
push
test
jo
mul
popf
sub
outsb
movsb
test
inc
pop
and
int
mov
sub
dec
fsubrs
sbb
cmpb
inc
sarb
pushf
movl
call
xchg
cmp
mov
push
jge
inc
xchg
mov
fcoml
aas
sub
push
loopne
hlt
nop
fldenv
inc
rcrl
jecxz
shr
cmpsb
adc
ja
xchg
iret
and
mov
imul
ret
push
mov
inc
lock
mov
lock
jbe
mov
rolb
cld
out
push
add
pop
ss
aaa
push
inc
ror
out
stos
repnz
lahf
int
mov
int
sbb
mov
jecxz
lods
fwait
lods
cwtl
adc
sahf
loop
sbb
das
cltd
hlt
push
lods
xor
sbb
xchg
jecxz
rorl
cmpsl
adc
add
jb
sub
pop
xchg
add
inc
icebp
sar
mov
xor
push
ss
rcll
out
mov
and
repnz
jge
push
icebp
fwait
cmpsb
cmp
lahf
inc
div
lods
or
imul
int
or
imul
jl
fxch
mov
push
jp
jb
popf
mov
aaa
neg
es
test
flds
pusha
test
aad
add
sbb
test
sbb
jg
dec
adc
jns
jl
pop
inc
lea
inc
and
push
adc
cmp
lea
jmp
dec
jne
push
mov
shlb
fdivrs
cmp
mov
pop
cmc
call
call
cmp
mov
add
mov
add
inc
orb
int
push
lcall
in
cmpsb
jns
mov
jo
je
cmp
movsb
add
jmp
cmp
dec
insl
xor
test
aad
mov
enter
fcmovnbe
in
repz
pop
sahf
std
mov
pop
inc
lea
push
mov
pushl
movl
movb
movl
mov
pusha
mov
movb
lea
jmp
ljmp
cs
in
adc
or
movsl
mov
pop
or
lods
out
lahf
adc
xchg
mull
inc
lea
inc
inc
jmp
movsb
cli
add
stos
xor
and
push
test
mov
std
shlb
cmpsb
out
fistpll
fwait
sbb
mov
clc
out
mov
inc
xchg
popa
jnp
push
xchg
loopne
test
dec
ret
mov
lea
pop
lcall
movsb
out
ret
mov
fldt
lock
out
and
jb
adc
mov
orl
subb
std
out
jbe
add
imul
jns
sbb
mov
lods
shlb
ret
push
cld
fnstcw
mov
mov
les
adc
mov
dec
mov
aad
dec
jmp
mov
dec
jp
enter
and
xchg
test
lret
mov
lea
std
mov
mov
mov
mov
mov
jno
xlat
sub
clc
sbb
inc
and
cmp
jns
pop
jmp
int
and
jnp
fcompl
leave
fcmovnb
sahf
mov
lret
sub
lret
adcb
sbb
add
cmp
or
mov
sbb
xor
or
sbb
cmp
mov
cwtl
int3
lods
lds
mov
add
fxch
dec
vpunpckhqdq
inc
add
test
add
jae
push
add
or
mov
adc
es
scas
inc
jle
mov
jge
jne
movsb
adc
adc
cwtl
mov
cmp
add
daa
jae
push
mov
jbe
sbb
pop
in
inc
aas
sub
shr
or
mov
test
pusha
out
sti
pushf
hlt
sahf
xor
push
sbb
test
xor
mov
jbe
push
out
jns
fiadds
mov
sbb
lret
scas
cmpsl
stos
push
xor
cmp
stc
out
data16
imul
in
xor
jbe
stos
sub
inc
lcall
fidivs
shll
mov
add
jge
loopne
mov
mov
movsb
enter
negb
cmp
add
mov
sbb
aam
aaa
jb
jnp
inc
lea
repz
jb
pushf
push
movl
push
pusha
movl
pusha
movw
push
lea
jmp
out
xchg
sbb
out
dec
test
dec
inc
mov
jae
mov
jo
ret
test
pcmpgtb
je
mov
es
lea
outsl
jmp
mov
sub
inc
xor
push
pop
and
test
cwtl
fsubl
test
sbb
cmpsb
jb
clc
fs
cli
stos
lods
xchg
cmp
cltd
add
or
insl
aaa
pop
adc
push
cmp
inc
lea
sbb
roll
sti
ljmp
add
imul
lock
mov
cmp
fdivs
pop
jge
xchg
push
nop
ret
xor
enter
cmpsb
push
mov
hlt
call
mov
call
loopne
mov
mov
jbe
mov
lea
dec
or
and
inc
or
cwtl
adc
pop
adc
out
divl
cld
mov
jl
cmpb
mov
jns
inc
adc
xor
pop
inc
cmp
data16
pop
sbb
pusha
or
cmpsb
hlt
dec
lret
and
mov
jbe
jmp
mov
aam
sbb
mov
push
lret
mov
imul
push
aad
out
mov
mov
movsl
fists
xor
jmp
mov
outsb
hlt
xchg
adc
xchg
sub
mov
mov
cltd
int3
bound
xchg
pop
xor
mov
xchg
fsubs
jb
scas
stos
daa
xchg
pop
ss
or
enter
and
mov
mov
mov
push
loopne
inc
cli
pop
jnp
pop
sub
divb
nop
popa
imul
mov
or
int
cmp
loope
xchg
inc
mov
pop
push
test
sub
cmpsb
ja
mov
popf
sar
xor
mov
push
fiadds
mov
sbb
loopne
mov
cmpsl
jle
push
jle
daa
cmp
pop
fdivrp
jb
aas
pop
mov
add
push
out
pushf
in
inc
lea
xchg
jl
jmp
lahf
mov
adc
hlt
jnp
std
jb
inc
or
not
mov
rorb
mov
push
movsb
popf
xchg
and
adc
pop
stos
std
jo
xlat
push
push
pop
xor
inc
sub
jl
sub
lea
loopne
jecxz
adc
in
cs
jg
jg
test
lods
adc
mov
lods
mov
lock
aaa
sar
arpl
mov
fadd
mov
imul
dec
fwait
jl
repz
push
in
test
add
ss
adc
jp
xlat
fnstenv
outsl
and
xor
push
jmp
adc
inc
lea
clc
dec
repnz
stos
push
inc
mov
insb
and
jg
scas
in
notb
jbe,pn
es
iret
mov
add
add
imul
jno
mov
out
push
inc
pop
push
lds
sti
lcall
js
pop
fists
jo
addr16
outsb
addl
les
and
dec
movl
mov
jmp
in
bound
mov
lahf
mov
call
pop
push
jno
test
mov
cmp
loopne
scas
pop
testl
aad
cmpsb
daa
in
jno
push
jp
dec
push
into
mov
add
mov
push
je
xchg
push
pop
pop
out
aad
hlt
lahf
cli
inc
cmp
inc
lea
out
jmp
popf
inc
js
xor
cmpsb
adc
mov
xchg
das
es
das
pop
push
cmpsb
push
xchg
imul
sbb
add
push
xor
push
imul
lock
jnp
cmp
inc
pop
cmp
stc
xchg
shrb
lea
dec
push
jmp
push
insl
fs
mov
jbe
mov
lahf
jmp
jns
ficompl
pop
pop
jae
lret
imul
or
xchg
mov
pop
mov
and
sub
pop
mov
call
push
lret
mov
adc
cmp
addr16
mov
inc
sbb
out
notb
data16
jns
lahf
cld
mov
mov
inc
lea
lock
sbb
jo
test
mov
mov
mov
imul
push
leave
sub
xlat
jb
xor
test
xor
dec
adc
cmpsl
scas
inc
mov
and
sahf
cmpsl
sbb
cmp
adc
xchg
inc
sub
outsl
aas
jns
mov
stos
js
push
mov
in
jnp
mov
cmp
inc
lea
mov
jmp
add
xchg
mov
push
jg
add
mov
mov
idivb
sbb
lods
xor
mov
or
xchg
cltd
cli
stos
fidivrs
ret
cmp
cmpsl
inc
popa
sarb
imul
cmp
test
inc
rclb
test
lea
xchg
jmp
pushf
mov
fwait
mov
dec
sbb
pop
pop
sbb
nop
or
out
mov
test
mov
sub
cmp
stos
add
sbb
add
fwait
and
popa
dec
inc
lea
sbb
adc
push
stc
mov
pop
push
xor
sub
cwtl
and
add
icebp
nop
adc
mov
adc
pop
lahf
outsl
push
data16
lods
add
cmpsb
cmp
xor
mov
jle
fisubs
xchg
bound
mov
pop
cmc
cmp
xor
or
inc
pop
or
ss
test
dec
and
mov
flds
iret
and
push
mov
in
test
xchg
xor
and
dec
inc
shrb
aam
and
jns
xor
out
arpl
enter
ret
ss
cmp
mov
call
mov
lds
adc
mov
inc
inc
js
xor
and
daa
stos
cmp
jns
sbb
jno
repz
dec
dec
dec
xchg
or
cli
and
outsb
sub
mov
sub
add
dec
fsubrp
mov
sub
add
lock
cmpsl
dec
jo
xchg
xor
dec
cmpsl
dec
sub
ret
xlat
daa
adc
adc
test
inc
repnz
fcmovbe
lret
fcomi
sbb
es
repz
inc
adc
repnz
mov
jmp
xchg
sbb
mov
addr16
bound
lahf
and
inc
lea
and
test
add
push
test
jae
and
jb
adc
sahf
test
lods
fwait
loopne
scas
sbb
sub
test
jbe
mov
sub
out
ds
popa
xchg
mov
push
pop
test
mov
in
cmp
mov
xor
shlb
icebp
clc
enter
pop
fidivrl
scas
dec
ds
xor
fistpl
lea
jno
outsl
sbb
aam
loope
fdivrs
popf
loopne
jecxz
fdivs
sbb
mov
stos
outsb
mov
es
and
dec
ljmp
mov
cmpsb
mov
test
dec
jno
sbb
xchg
fwait
je
data16
or
pop
and
outsb
call
dec
movsl
mov
push
mov
std
push
loopew
std
shll
push
dec
xor
fdivrs
jb
imulb
out
xor
inc
pop
imul
idivl
inc
lea
and
scas
xchg
dec
lds
inc
and
out
pushf
push
movl
pushl
pushf
movb
movw
lea
jmp
nop
inc
int
and
ss
loop
ds
xor
inc
mov
mov
inc
push
loope
pop
out
jnp
xorb
popa
lods
out
push
aam
sub
nop
mov
outsl
aam
fstps
andb
jns
dec
fstpt
cmpsl
aaa
xchg
call
inc
test
mov
in
xlat
mov
mov
test
movsb
ret
mov
loop
mov
mov
dec
add
mov
mov
cmpsl
int
inc
lea
pushf
lcall
movsb
mov
icebp
stos
idivl
cmp
out
jecxz
cwtl
inc
out
push
mov
sub
mov
cmp
outsl
lods
mov
stos
mov
and
mov
fdivrs
or
andl
jb
lock
xor
stos
out
pop
or
mov
mov
pop
movsl
movw
push
movl
pusha
jmp
mov
sti
lea
mov
mov
mov
cmpsb
adc
mov
add
mov
ljmp
pushf
das
mov
mov
jae
or
jb
xor
push
jmp
jb
sub
push
addr16
loopne
or
cmp
mov
lods
es
add
pop
add
xchg
xor
pop
popf
loopne
xor
sub
jg
test
lea
or
idiv
mov
inc
lock
in
xchg
lret
adc
ds
je
push
mov
push
cmp
lds
in
adc
pop
add
lock
aas
mov
call
mov
xchg
mov
cmpsb
mov
mov
aas
les
mov
mov
cld
bound
popfw
mov
addr16
sahf
fadds
loope
jo
into
fs
mov
aas
and
jp
movsb
ret
xor
jbe
test
ffreep
push
and
outsl
pusha
mov
cs
js
outsb
xchg
and
addl
subl
test
fs
xor
or
sahf
ljmp
mov
jb
sub
xor
push
lret
or
inc
pop
cmp
lea
out
cmpsl
dec
and
push
loopne
aad
lret
stos
push
pushf
jbe
fmull
cmpsl
std
sub
push
addl
fistpl
pop
jge
ficompl
or
push
test
insb
dec
repnz
scas
inc
dec
sub
sub
dec
lods
roll
and
nop
sarl
in
sub
std
pop
scas
push
sbb
cltd
clc
push
cli
int3
cmpsl
jmp
xchg
leave
and
pop
dec
dec
add
jne
sbb
aam
sub
mov
push
adc
and
add
aaa
push
ss
lret
imul
int3
xor
lcall
loopne
mov
popa
inc
xchg
mov
jecxz
sbbb
ss
xor
push
nop
sbb
js
inc
sub
scas
mov
call
jae
fsubs
mov
mov
jae
stos
testl
mov
cli
fstps
xlat
int
outsl
shl
sti
add
xor
js
jb
cwtl
and
sub
push
jp
adcb
ja
mov
scas
lret
dec
divl
jae
js
jo
scas
adc
xchg
mov
jmp
push
pushf
jmp
dec
ja
jle
dec
cmp
sub
fbstp
mov
scas
inc
ss
sub
ds
movsl
and
es
inc
lea
cli
das
enter
shlb
aaa
add
inc
lods
add
je
out
test
mov
xchg
out
pop
jge
add
lret
or
in
cli
fstpt
repz
ljmp
lea
or
sub
adc
aad
cmp
sub
push
insl
xor
sbb
sbb
test
adc
ds
xchg
imul
mov
inc
mov
lock
mov
mull
lods
mov
cmp
movsb
mov
stos
sbb
andb
jns
jmp
lea
mov
mov
shrb
xor
pop
lcall
lock
sti
in
sub
add
sarb
push
pop
mov
add
stos
sti
scas
enter
or
lcall
pop
cmp
mov
into
or
scas
ss
mov
adc
push
mov
adc
inc
std
jns
insl
das
dec
push
icebp
xchg
or
fs
incb
ret
imul
pop
dec
xchg
pop
mov
mov
xchg
mov
mov
and
out
stos
add
push
dec
adc
leave
imul
sub
jge
jg
sbb
cmp
cmp
adc
jns
pop
mov
jp
mov
fiadds
pusha
mov
inc
ret
add
mov
test
xchg
and
or
xor
ret
xchg
and
ja
sahf
popf
xchg
lock
mov
sarl
jnp,pt
jo
xchg
les
jo
add
enter
mov
add
xchg
or
ds
fisttpl
mov
xchg
rolb
xrelease
ljmp
out
dec
ror
dec
fsubrs
adc
lea
or
xlat
mov
dec
sahf
loopne
loopne
xor
jne
sbb
dec
scas
cld
pop
stos
mov
imul
or
movsl
call
mov
js
popa
or
pop
inc
pop
stos
loopne
jge
lahf
mov
mov
sahf
sbb
aam
popa
dec
pop
lret
icebp
movsl
in
jecxz
xor
cs
inc
cmp
adcl
ja
pop
out
andl
jmp
lret
lea
loop
add
mov
pushf
movl
push
pushf
pushl
mov
lea
jmp
push
pushf
pushl
pusha
movl
lea
jg
pusha
mov
pusha
movl
push
mov
push
pushf
lea
jmp
cltd
xchg
roll
xchg
pop
and
sub
push
pop
scas
mov
inc
imul
aad
rcrb
lea
aam
or
rclb
mov
mov
inc
fisubl
cmp
inc
mov
fistpl
adc
fnstcw
ds
ret
xor
in
lret
js
es
xor
daa
xchg
std
mov
inc
lea
lret
add
push
ja
mov
dec
jecxz
dec
mov
sbb
jae
mov
push
jmp
stos
adc
jnp
test
xor
testb
dec
aam
je
rclb
sbb
mov
scas
in
mov
inc
test
daa
mov
xlat
pop
aaa
pop
out
sbb
jns
or
mov
pop
orb
out
push
pop
add
inc
lea
pop
addr16
add
addl
mov
dec
scas
cmc
and
addr16
mov
dec
cmp
stos
imul
inc
inc
idivl
loopne
mov
cmpsl
iret
inc
mov
fcmovne
or
xchg
mov
dec
stc
fmull
sbbl
pop
mov
pop
mov
sub
mov
lea
lea
movw
call
inc
sahf
adc
xor
add
xchg
rorl
mov
xchg
mov
sub
fistpll
imul
or
xchg
push
rcrl
testl
jle
or
push
loop
push
out
jno
mov
pop
jbe
test
fildll
add
int3
rcr
push
mov
mov
lods
lret
mov
shrl
ror
pop
pop
outsl
testl
jmp
inc
rorb
adc
jae
mov
mov
pop
maxps
cwtl
lcall
lea
rcrl
pop
mov
and
push
xor
aas
jnp
cld
mov
jb
mov
ret
add
sbb
movlps
push
pop
push
aad
xlat
and
or
cmp
cmp
lds
xor
jl
or
fcomps
repnz
add
repz
fwait
loop
hlt
or
cli
in
test
lret
shlb
fs
in
mov
jl
iret
xchg
jcxz
cmp
pop
std
jl
stos
ret
inc
cld
add
test
push
jmp
sbb
xchg
or
popa
pop
fstl
or
xchg
jno
sarl
mov
cmp
inc
iret
lcall
sbb
pushf
pushf
push
daa
sarb
mov
mov
les
into
add
add
sub
pop
das
pushf
sbb
sub
mov
or
sbb
insb
sahf
cmpsl
ja
xor
in
dec
or
and
mov
addr16
or
and
cld
das
mov
sti
lods
out
sub
lcall
inc
inc
lea
pop
cli
leave
jmp
aam
adcb
mov
insb
dec
adc
out
cwtl
mov
into
mov
push
jo
mov
insb
push
jmp
es
filds
cmpsb
in
es
xlat
fisttps
lahf
jbe
mov
adc
jge
pushf
in
pop
iret
inc
mov
or
jnp
cmpsl
xsha1
cmpsb
or
pop
jle
dec
and
sbb
arpl
and
sti
pop
xor
or
lods
in
sarl
jmp
adc
xor
inc
lea
inc
sub
das
or
sub
data16
mov
jmp
lea
or
inc
lret
enter
cmpsb
dec
and
sub
packuswb
jae
shlb
jbe
xor
test
cmp
jne
mov
imul
inc
daa
mov
iret
lcall
test
push
mov
addr16
in
xchg
pop
xor
ror
pop
mov
enter
mov
les
or
scas
mov
in
js
rorl
pusha
aas
sbb
lock
jg
or
bound
ja
mov
fldenv
push
lods
inc
lea
movl
pushf
pushf
push
movl
movw
push
lea
jmp
push
jmp
fs
xlat
fwait
dec
dec
lret
push
jmp
inc
mov
xchg
sub
je
push
insb
lret
sub
jne
clc
ret
rolb
dec
enter
xchg
xor
je
dec
lods
icebp
fs
loopne
testb
cmc
pushf
xchg
out
in
inc
mov
mov
cmc
nop
or
add
insb
scas
adc
push
sbb
mov
lea
arpl
mov
or
mov
data16
popf
and
and
andnps
popf
adc
and
ror
inc
icebp
shlb
pop
jmp
or
lret
and
cmpl
aaa
insb
out
ljmp
lret
or
jo
cmp
add
sbb
call
add
cmp
fbld
sbb
mov
and
inc
lea
fistl
ret
arpl
inc
adc
fistps
jo
sbb
sbb
popa
ljmp
pusha
incl
pushf
insb
sub
pop
inc
cs
stos
aas
jnp
dec
sbb
stc
mov
add
mov
lret
sbb
and
std
cmp
es
gs
out
les
inc
lea
mov
outsl
mov
xchg
xchg
aam
repz
push
ss
test
jl
or
outsb
push
notl
call
jnp
sbb
pushf
ljmp
shrb
or
mov
scas
mov
fstpt
out
mov
add
add
inc
insb
and
jp
testl
xchg
mov
into
iret
xor
loopne
gs
lahf
subl
ljmp
pop
xor
jnp
inc
rcll
inc
xor
testb
sbb
xchg
sub
mov
and
jo
jp
dec
ret
fistps
ljmp
inc
and
rolb
movsl
insl
lahf
mov
fsubrl
imul
inc
sbb
push
and
repz
in
repnz
mov
jo
lcall
pop
jle
das
aas
in
adc
aam
jg
pop
aad
hlt
sbb
pop
jo
bound
inc
inc
shr
push
cmp
shlb
cmpsb
mov
cwtl
mov
in
stos
pop
mov
jecxz
or
push
add
das
ss
mov
pop
call
movsl
fucomp
jmp
pop
das
cmp
inc
lea
pusha
push
movl
pusha
call
push
mov
fucomip
mov
dec
jmp
test
into
xchg
mov
mov
mov
negb
pop
and
push
mov
lcall
shrb
cmp
test
test
mov
jnp
mov
iret
mov
sbb
xlat
jae
pop
loopne
xchg
stos
imul
imulb
cmp
gs
lcall
jb
mov
icebp
dec
mov
sub
rorl
xchg
adc
mov
out
mov
cwtl
scas
mov
ljmp
push
dec
minps
movsb
or
and
icebp
stos
ljmp
or
jmp
pop
in
cmp
sub
sarl
dec
push
pop
popf
and
lret
mov
mov
test
sbb
mov
mov
xchg
ljmp
inc
shr
fnsave
in
insl
dec
pushl
xchg
mov
inc
lea
and
lods
dec
lds
daa
mov
and
out
gs
mov
mov
lea
jmp
call
pusha
call
jmp
add
aaa
mov
xchg
sub
sub
movsb
adc
sbbl
push
out
xor
fdivl
daa
adc
pop
push
cs
ficoml
jnp
insl
jb
testb
add
add
out
mov
adc
mov
mov
push
bound
dec
sub
mov
mov
mov
test
imul
jo
cmpsl
shll
cli
out
cld
aad
scas
aaa
jns
cmc
es
sbb
pop
dec
and
jne
xchg
jae
cmp
lods
inc
mov
scas
mov
adc
lods
mov
xchg
sbbb
mov
jno
imul
push
dec
sbb
loop
add
cmp
and
mov
int3
pop
add
mov
pop
pop
mov
add
mov
mov
je
xor
lahf
negl
popa
jg
dec
pop
xor
sarl
xor
pop
adc
inc
lea
mov
sbb
push
push
lcall
imulb
adc
pop
shlb
mov
sahf
xchg
imulb
mov
pop
popf
pushf
adc
int3
xor
and
pop
jae
push
xor
es
push
inc
lea
dec
arpl
ljmp
rcll
mov
movl
pusha
call
call
and
xchg
in
int3
lods
out
push
ja
dec
sub
jmp
sbb
jo
lods
testb
arpl
pop
imul
mov
xchg
mov
adc
adc
inc
sbbl
movsb
mov
scas
repz
and
idivb
push
stos
jl
xchg
repz
mov
push
out
or
and
je
scas
xchg
gs
push
mov
stos
mov
add
or
cltd
jae
test
call
outsb
push
push
push
rcrb
inc
pop
test
dec
dec
push
mov
popa
leave
addr16
fmull
inc
lret
add
jge
test
enter
ja
push
cmp
repnz
sbb
cmp
mov
lods
add
movsb
loopne
xor
into
jp
dec
iret
rcrl
movsl
inc
lea
fdivl
pop
cltd
mov
popf
fnstsw
sub
insl
sub
out
icebp
aas
ja
push
lods
mov
insb
rcll
cmpsb
lret
mov
test
cld
xchg
aad
test
adc
rcr
fs
jecxz
int3
andb
and
inc
lea
out
imul
add
subl
popf
cmc
and
cmpl
mov
push
push
mov
adc
dec
add
mov
dec
pusha
movsb
ja
add
in
movsl
inc
test
std
mov
add
call
je
das
inc
lea
dec
xor
pushf
lds
dec
sub
sub
add
cld
sub
movsb
subl
sbb
push
in
pusha
daa
cld
dec
out
sbb
push
ret
mov
movsb
dec
dec
bound
push
xchg
inc
js
pop
cmc
mov
cmp
bound
inc
mov
lea
pop
pop
inc
stc
movsl
jge
movsb
sarb
mov
das
sbb
loopne
mov
jle
ss
fs
sbb
mov
jo
lahf
rcrb
cmpsl
push
jne
inc
in
inc
lea
push
push
pop
jmp
test
out
and
mov
cld
fsubrp
jnp
push
cmc
scas
es
pop
mov
jae
cltd
jbe
iret
xor
push
mov
push
mov
hlt
mov
bound
dec
leave
cmc
outsl
jbe
dec
xlat
cmc
ja
test
nop
rcll
mov
loop
or
in
ds
loop
xchg
scas
lds
push
das
fwait
xor
xor
push
pop
sbb
jle
lea
out
lock
dec
xor
adc
call
and
mov
adc
lahf
push
pop
adc
sub
push
ret
in
in
cli
cltd
stc
inc
sbb
pop
aaa
mov
aam
lock
pop
pusha
andb
push
jae
and
jbe
mov
cmp
addr16
punpcklbw
push
and
ds
jbe
rclb
std
add
mov
adc
jg
xchg
out
pop
xchg
add
bound
push
sbb
adc
push
inc
lea
ja
mov
sub
popf
es
popa
pop
inc
lahf
lds
fwait
aas
pop
dec
fsubrl
rclb
cmpsb
ljmp
std
ficoml
adc
stc
in
test
pop
cmp
notb
or
pop
sub
insb
pop
push
dec
lock
loop
add
mov
out
add
adc
rorl
mov
cltd
out
xchg
iret
inc
dec
xchg
mov
cli
mov
pop
icebp
mov
adc
mov
mov
inc
xchg
lret
sub
dec
pop
push
mov
test
add
and
in
add
inc
push
add
cli
mov
mov
icebp
cmpsb
test
adc
clc
nop
into
jl
sub
mull
mov
mov
mov
adc
stos
mov
insb
rol
pop
cvtpi2ps
jbe
dec
and
adc
inc
inc
fiadds
jnp
ss
fdivr
dec
mov
loop
in
xor
fnsave
mov
scas
mov
das
mov
inc
movsl
addb
pop
into
gs
jle
mov
mov
icebp
pop
fimull
add
stos
cmp
aaa
mov
clc
mov
push
sub
adc
pop
sarb
rcrb
adc
push
add
mov
repz
gs
data16
mov
jae
pop
adc
sub
pop
jnp
popa
add
popf
and
daa
sbb
mov
pushf
push
lock
pop
out
ret
xchg
sarl
sbb
push
inc
mov
imul
cmp
fnstenv
es
xchg
daa
gs
adc
xor
and
dec
in
mov
mov
add
sub
loop
movsb
sti
inc
sub
lea
pop
jmp
add
loop
idivl
cmp
mov
xor
mov
sub
call
sub
sbb
or
push
mov
mov
cmp
imul
inc
lea
outsl
add
push
movl
pusha
movl
push
mov
push
pushf
lea
jmp
adc
cwtl
add
cwtl
leave
mov
rcll
mov
shlb
pop
jle
or
mov
dec
in
add
jle
lret
push
outsl
sub
mov
addl
and
dec
scas
dec
sbb
stos
dec
mov
int3
pusha
xchg
rcrl
aad
inc
lea
dec
add
sub
icebp
cltd
xchg
repnz
sub
jne
fwait
rcrl
xlat
cmpsb
mov
mull
mov
pop
jle
push
mov
iret
xor
add
xlat
test
pop
add
jo
mov
inc
data16
push
lods
inc
sbb
push
ds
sbb
mov
lea
mov
pop
mov
xchg
xchg
decl
mov
dec
outsl
aaa
pop
cmp
jae
das
jecxz
dec
and
adc
in
hlt
jae
push
lahf
sbb
call
pop
xor
mov
sahf
aad
push
inc
popa
xor
dec
inc
pop
cmpsb
push
test
mov
sahf
ds
xchg
mov
adc
shlb
cmpsb
inc
mov
lods
jge
orb
rcrl
jno,pn
icebp
lock
adc
mov
rcrl
or
dec
and
lahf
xchg
sar
inc
ljmp
es
push
jl
sbbb
adc
lcall
into
sbb
mov
xor
testl
popf
out
loope
mov
lea
das
push
sti
cmp
xor
push
jns
inc
decl
add
dec
shr
aas
insl
jo
imul
mov
xor
pusha
cmp
in
cmp
cmp
xchg
mov
jae
push
pop
jle
mov
cmp
sbb
add
ds
stos
out
movsl
cmpl
mov
dec
ss
inc
lea
rcll
jmp
jg
mov
stos
out
pop
jl
sbb
mov
ds
popa
push
dec
xor
sub
fistpll
int
fcoms
sub
sub
sbb
xchg
das
sub
rcrl
xor
xchg
cmp
lret
cmp
jge
jbe
jp
outsl
aaa
jbe
cmp
inc
lea
in
std
call
clc
stos
rolb
pop
cmp
push
mov
popf
incb
add
mov
sub
es
dec
xchg
fcmovnb
loopne
jo
sahf
int3
cs
js
mov
push
mov
rorl
fildll
push
arpl
aas
and
movsb
adc
mov
fistpl
cmp
incb
lcall
cld
lcall
cli
inc
and
jb
arpl
insb
negb
pop
mov
cld
test
inc
inc
mov
loopne
and
jbe
jns
data16
out
cltd
dec
inc
lea
sbb
jmp
jle
xchg
stos
in
cmp
data16
fst
insb
cmpl
nop
popa
ss
xor
mov
roll
pop
imul
enter
xor
cwtl
out
cltd
inc
lea
lret
dec
std
decl
cmp
sub
inc
fs
testb
sub
xchg
leave
ja
imul
clc
jno
lret
jmp
mov
testl
mov
lds
icebp
pop
jbe
andps
stos
frstor
ja
hlt
stos
push
push
jmp
jbe
outsb
pusha
jns
outsl
hlt
stos
pop
xor
jmp
int3
sub
stos
inc
lea
iret
inc
fcomps
inc
test
aas
jp
test
mov
filds
dec
out
enter
int3
pop
inc
jnp
imul
popa
mov
cmp
pushf
adcl
mov
mov
fisubrl
jg
mov
add
pop
or
pop
xchg
arpl
shrl
pop
push
adc
nop
test
and
sbb
clc
adc
mov
daa
or
lret
fwait
std
dec
cmp
inc
lea
push
pop
pop
scas
lahf
orl
in
cmc
xchg
mov
or
mov
push
jb
xchg
dec
imul
mov
adc
sbb
rcrl
mov
or
push
sbb
push
orb
js,pt
mov
test
add
and
lock
sbb
cmp
jbe
mov
cmpsb
ret
fimull
cmp
hlt
push
jge
aad
sub
jne
dec
ret
mov
lea
xor
jo
pop
xor
popf
adc
ret
scas
scas
lods
cwtl
dec
imul
cmp
call
xor
daa
stos
cld
gs
jp
mov
je
dec
sarb
cmp
lret
lahf
es
shrb
mov
pop
lock
cmp
mov
cmp
push
xchg
imul
jo
xor
out
sub
imul
out
xchg
mov
lret
dec
pop
cmp
insl
lea
jae
pop
stc
stos
mov
mov
es
out
scas
mov
push
dec
clc
jge
push
add
jae
or
out
les
fs
aaa
inc
sbb
loopne
adc
mov
push
lea
mov
pusha
lahf
stos
jns
rcl
and
out
add
sbb
mov
jbe
sbb
push
xor
inc
add
jecxz
jb
mov
dec
mov
push
or
test
push
mov
pop
lcall
data16
movsb
in
mov
mov
loop
js
leave
dec
pop
mov
and
inc
mov
or
add
js
cmp
and
pop
vmovaps
js
xchg
adc
shll
inc
cvtps2pi
in
or
rclb
mov
or
pop
sbb
lea
cmp
stos
lcall
mov
movsb
int
sbb
xchg
test
jle
xchg
dec
mov
dec
dec
cmp
xchg
aas
push
xchg
xchg
push
je
fwait
inc
and
adc
cmp
or
aad
dec
jno
xchg
test
or
enter
xchg
push
mov
xchg
aad
push
sti
jne
sub
hlt
ret
inc
je
cmc
cmpsl
jo
xor
mov
jp
or
mov
or
mov
imul
pop
push
fbstp
insl
or
jne
mov
orb
and
xor
ss
push
out
add
jmp
sbb
pop
mov
movsb
cld
mov
dec
cmp
add
or
xchg
cmp
fildl
jne
aad
rclb
xchg
xorb
in
jb
adcb
sub
pusha
in
xchg
int3
push
movhps
and
and
leave
ror
xchg
pop
lret
xor
out
pop
enter
mov
lock
mov
xchg
jns
lods
iret
jb
and
loop
mov
mov
mov
mov
fsubl
std
sub
pop
hlt
inc
xlat
jb
mov
repnz
add
lcall
push
push
movl
pushf
pushf
lea
jmp
pop
mov
fwait
cmp
add
sub
mov
stc
lea
ds
movsl
sarl
jmp
dec
cmpsl
ja
es
sahf
jl
mov
leave
scas
lcall
push
xchg
or
mov
rolb
movsl
jl
pop
mov
add
push
shlb
jbe
pop
rorb
nop
jl
and
stos
int
arpl
mov
cmc
xchg
adc
push
jns
xchg
add
xor
insb
sub
mov
sub
test
xchg
mov
aaa
mov
mov
outsb
or
fucomp
iret
test
js
sbb
push
loopne
rcll
cli
aam
unpckhps
jns
sub
out
jp
gs
lahf
or
fstps
shrb
mov
mov
xchg
mov
push
notb
psrlq
xchg
rcr
cmp
add
mov
lods
add
jg
and
daa
dec
sub
push
adc
out
cmp
ud2
testb
insl
push
jae
gs
call
dec
pop
xchg
or
test
inc
std
push
cli
adc
jo
insb
and
fwait
mull
and
shll
sbb
xorb
pusha
adc
les
xchg
test
dec
cmpsl
rcr
les
jle
dec
sti
xchg
popa
out
imul
fwait
xchg
pop
or
and
xchg
push
imul
xchg
mov
mov
xor
push
addb
mov
sbb
cmp
movsl
dec
fcmove
pop
pop
adc
scas
pop
scas
pop
aaa
data16
jns
bound
mov
xlat
inc
lea
jecxz
dec
loopne
fnsave
inc
addb
push
jno
push
add
cmp
mov
cwtl
lret
outsb
push
push
sarl
sbb
jl
mov
add
mov
data16
lods
add
xor
aaa
jne
push
pusha
jg
imul
xlat
ficoml
pop
mov
or
cmpsb
lahf
mov
jns
sahf
dec
in
push
sbb
pop
add
pop
es
sub
inc
lea
stos
into
mov
adc
notb
iret
dec
daa
dec
pop
push
loopne
fldcw
cmpsl
fldcw
inc
imul
pop
ret
addr16
lcall
ja
js
xchg
adc
jmp
dec
xchg
cmp
stc
pop
sub
sub
mov
push
dec
fisttpll
sbb
arpl
jns
movsl
loop
in
pop
xor
inc
lea
mov
ja
cltd
imul
adc
call
sbb
dec
jg
lret
jmp
cmpsl
sbb
adc
popa
and
xchg
jns
jno
insb
mov
sub
adc
packssdw
cmpsl
jb
add
inc
cmp
jne
jp
dec
pop
cmp
rcrb
inc
jecxz
mov
xchg
jns
inc
xchg
dec
pusha
in
mov
pusha
sbb
scas
xor
mov
stc
repz
inc
popa
or
mov
sub
cmp
pop
mov
push
and
and
adc
sub
pop
fisubs
cmp
adc
mov
sub
fnsave
or
adc
adc
push
jmp
inc
or
adc
inc
lea
mov
xor
mov
jno
xchg
das
push
rorb
aaa
push
dec
or
sbb
ror
loopne
sbbl
jae
mov
movsl
mov
xor
fcoms
mov
test
jbe
mov
adc
imul
xor
test
jns
mov
jbe
aam
pusha
mov
data16
ds
push
dec
repz
inc
mov
push
call
xchg
or
gs
jmp
les
inc
lea
daa
in
add
shll
lret
mov
pop
or
addr16
mov
pop
mov
sqrtps
mov
shrb
xor
pop
jp
sub
pop
popa
shrb
movsb
add
out
jnp
jg
mov
cld
adc
nop
sub
jb
sub
cmp
clc
xchg
jbe
pop
mov
or
pop
cmp
jnp
repnz
loope
in
in
inc
lea
inc
and
push
subl
fs
jmp
dec
cmpsl
cmp
and
outsl
xor
jg
push
adc
scas
mov
int3
in
dec
push
test
adc
outsl
pop
lods
leave
dec
in
adc
cmp
and
mov
mov
pop
adc
adc
imul
std
faddl
call
and
movsl
add
mov
add
roll
xchg
cltd
fadd
push
mov
xlat
mov
outsb
fiadds
mov
or
mov
mov
sbb
cmpsl
loop
in
and
pmaxub
mov
fcmove
jmp
je
in
aaa
mov
pop
cmp
inc
cmp
es
scas
cmp
stos
in
lret
xor
ja
push
add
pop
inc
mov
push
daa
dec
rorb
lea
sub
jns,pt
sub
mov
outsl
repnz
jbe
js
dec
iret
test
mov
enter
loop
mov
movsl
sbb
nop
stos
mov
add
mov
fsubrl
ljmp
jno
negl
iret
out
scas
mov
or
inc
imul
testl
nop
enter
lds
daa
and
ljmp
outsl
adc
xor
movsl
les
xor
push
lcall
mov
pushf
jp
xor
ds
sub
jb
cli
adc
mov
pop
scas
in
fiaddl
lret
loopne
les
jg
mov
pop
pop
mov
gs
inc
mov
xor
mov
fdivl
lcall
and
into
push
fsub
inc
mov
adc
sbb
or
inc
lds
cmp
sub
add
cmpsb
cmp
pop
sub
inc
inc
lea
sbb
add
inc
lcall
xchg
push
inc
mov
mov
int
xor
sbb
popf
lcall
push
sub
jecxz
int
pop
lcall
dec
stc
inc
cmpsb
cmp
pop
leave
xchg
pop
pop
adc
mov
add
inc
mov
je
in
xor
and
xor
lret
lea
or
lods
cmpsl
loop
jns
xor
jns
sub
sub
out
cmp
mov
mov
adc
lahf
jl
inc
fstpl
xchg
arpl
rcll
jb
rorb
fisttpl
push
adc
popf
movsb
xchg
jle
pushf
aam
into
dec
pop
push
in
pop
outsb
xchg
adc
out
outsl
xor
adcb
mov
add
dec
rcl
sbbb
mov
lock
inc
adc
and
enter
scas
mov
adc
in
inc
jge
fidivs
push
jae
lods
cmp
pop
or
in
mov
pop
sub
imulb
nop
dec
cs
xor
adc
mov
and
xchg
push
jg
mov
movsl
cmp
push
mov
pusha
xchg
bound
hlt
ret
imul
xchg
fidivrl
mov
cli
inc
push
dec
push
sbb
gs
mov
pop
sbb
adc
xlat
xor
jno
sbb
dec
les
mov
cmp
ficoms
sbb
sahf
psllq
mov
mov
sub
ss
inc
je
pop
in
movsb
push
fldcw
dec
push
inc
cld
fisubrl
stc
xor
dec
outsb
xchg
sbb
imul
cld
lea
jl
pop
xor
sahf
lods
pushf
lock
sub
shll
es
shrl
xor
mov
jno
xor
sbb
js
imul
xor
mov
int
push
mov
repnz
mov
les
inc
xchg
out
xchg
and
lock
or
jmp
inc
lea
movl
pushf
call
movl
call
xchg
mov
inc
xchg
test
imul
movsb
mov
into
xchg
sbb
sbb
push
in
jp
cmpl
xchg
ss
cltd
mov
adc
sbb
cltd
dec
out
pop
and
into
xchg
sti
mov
add
popa
mov
jp
mov
mov
out
popf
clc
cwtl
and
inc
lea
shll
sbb
cmp
mov
mov
xchg
jbe
pop
fimuls
cmp
jg
mov
mov
icebp
and
rcr
lret
xor
sbb
ret
sub
adc
xchg
js
pop
aam
jo
xchg
mov
inc
adc
mov
test
push
or
adc
pop
inc
cmpsb
xchg
mov
mov
in
test
xor
jecxz
lea
mov
outsb
cli
push
dec
xchg
hlt
dec
xlat
mov
lea
jg
cmp
pop
in
add
fdivrl
ja
ret
add
mov
cmpsl
jbe
mov
shrl
jecxz
in
push
mov
ja
out
mov
push
shl
add
pop
mov
jge
lret
pop
sbb
sub
and
push
cmpsb
dec
ds
ja
cmc
and
mov
cmp
jno
adc
xchg
mov
cmc
cld
dec
dec
pop
adc
push
xor
fiadds
ret
mov
movb
jmp
xlat
pushf
xchg
aam
and
fstpl
in
daa
test
mov
sbb
sarb
test
orl
adc
icebp
out
or
sub
mov
and
insb
test
clc
mov
pop
jo
xor
jb
fildll
out
mov
mov
icebp
mov
xor
in
mov
sub
inc
clc
enter
test
push
push
xchg
shll
xor
out
adc
loopne
fidivrs
icebp
mov
mov
rorb
ret
decl
test
adc
popf
jl
xchg
sbb
mov
and
jno
pop
add
pop
mov
mov
mov
push
popw
stos
sbbb
addr16
jp
or
gs
mov
or
aad
or
inc
lea
mov
js
push
mov
sahf
cmp
dec
lock
mov
insl
dec
int3
int
sub
cli
fdivs
es
sub
dec
aaa
popa
add
and
repz
outsb
call
scas
aad
lret
mov
decb
fcomi
jns
dec
sti
sub
mov
jo
push
fiaddl
dec
movsl
pushf
int
out
mov
fldenv
dec
cmp
dec
subb
pusha
jnp
pop
sbb
out
mov
xor
mov
jle
jp
or
xlat
jle
scas
cmp
push
or
fimull
fsubrs
aad
pop
and
lcall
mov
push
push
add
test
cli
fcmovnbe
jp
cld
xor
inc
sbb
orb
ljmp
pop
js
add
mov
nop
and
dec
xchg
sub
loopne
out
scas
pop
nop
ja
addr16
lea
sahf
mov
insb
mov
push
dec
pop
sub
mov
mov
scas
add
sub
pop
inc
das
or
mov
cmp
adc
inc
lea
pusha
movl
pushf
movl
movb
lea
jmp
pop
sbbl
fs
divb
gs
sbb
lret
lea
notl
cltd
mov
pop
xchg
mov
insb
std
imul
cwtl
or
cs
sti
inc
aaa
pop
aas
and
jbe
stos
cli
jnp
stc
loope
fcmovu
mov
mov
jb
push
cmp
lea
xchg
stc
push
mov
mov
mov
fisubrs
lods
lock
nop
mov
pop
mov
xchg
stos
mov
add
mov
test
rcrb
lea
aad
cs
jl
jg
mov
jo
fbld
adc
lods
in
faddl
lret
pop
daa
dec
scas
stos
adc
or
iret
xchg
fistpl
add
mov
add
jnp
cmc
movhps
mov
xchg
shrb
lea
xor
cmp
push
adc
fdivrl
jmp
dec
ss
inc
addr16
mov
shlb
ss
mov
orl
insb
sbb
dec
popf
pop
icebp
fmulp
loop
into
call
cmp
or
mov
jp
in
ljmp
test
xchg
push
inc
lea
xor
icebp
jmp
imul
loop
lcall
jmp
push
popf
repz
and
fstpt
pushf
add
xor
pop
dec
icebp
lea
push
add
push
out
lods
mov
scas
mov
imul
lea
add
cwtl
bts
add
fdivl
in
mov
xchg
add
xchg
test
sub
test
push
dec
push
sbb
push
xchg
or
add
ds
mov
or
inc
jb
xor
mov
loopne
es
negb
test
jnp
bound
xor
data16
dec
out
in
cmp
mov
lods
mov
or
loope
mov
jmp
sub
pop
cmp
scas
imul
stos
mov
clc
aad
inc
and
mov
jbe
stc
and
lret
xchg
cmc
dec
or
xchg
adc
testb
or
je
aas
test
jns
push
or
das
leave
mov
or
test
inc
and
push
sub
movsb
sub
adc
stos
add
aam
dec
jl
out
aas
add
fstpl
or
test
pop
dec
adc
xor
aas
dec
mov
pop
sbb
iret
mov
push
jle
or
adc
jne
gs
in
pop
push
mov
mov
jo
inc
add
lds
test
and
adc
orb
and
pusha
pushf
mov
lea
jmp
movsw
clc
jnp
and
jl
stos
lret
dec
sub
mov
dec
push
push
jge,pn
scas
stos
sti
fwait
cmp
fst
gs
int3
cltd
sbb
xlat
cmc
enter
inc
data16
pop
loope
daa
jne
and
cli
pop
mov
add
mov
out
and
and
vmovq
js
jge
cwtl
fdivrp
xchg
mov
out
push
jb
and
xor
push
ja
fisubrs
mov
push
mov
jp
mov
xor
cpuid
xchg
mov
sbb
fdivrs
fildl
or
jns
sbb
loop
hlt
mov
loop
decl
lahf
or
mov
adc
inc
lea
mov
lahf
fdivrs
push
ficomps
mov
call
ss
mov
mov
ffreep
lahf
out
lods
ffree
out
int3
sbb
xchg
stos
mov
jle
aaa
pop
adc
or
gs
adc
scas
inc
fimull
inc
imul
and
sub
xchg
leave
adcb
sbbl
adc
inc
and
lods
sbb
pushf
movl
pushf
lea
jmp
push
lds
xor
push
mov
jg
rcll
ret
dec
or
test
idivl
orl
orb
xorl
pop
cmp
mov
icebp
cmpsb
push
jo
cmp
mov
hlt
movsb
stos
dec
xchg
mov
xchg
sub
into
arpl
xchg
andb
dec
sub
sbb
xor
test
xchg
dec
adc
dec
jns
fs
adc
push
lods
loop
jns
sti
loop
int3
lea
lcall
ret
andb
push
fcomip
xchg
and
andb
cmp
and
andl
push
jle
mov
cmp
push
dec
cld
sub
ror
jbe
jnp
sub
in
pop
aaa
xchg
rcrl
sub
or
jmp
lea
jge
adc
pop
pop
lods
mov
jl
test
fwait
pop
mov
into
xchg
jo
sbb
mov
mov
cltd
pop
outsl
sbb
std
pushf
and
stos
mov
dec
shl
xchg
dec
leave
lret
mov
push
or
inc
lea
lock
add
push
jmp
push
into
imul
aam
jae
lcall
out
jb
or
in
mov
add
jle
leave
jmp
dec
std
inc
lahf
sub
test
add
mov
dec
inc
repz
cmp
out
cmp
jge
arpl
clc
cld
call
sbb
mov
out
dec
cltd
adcl
xor
sub
cs
popf
addr16
pop
jnp
fsubs
and
sbb
xchg
aas
xchg
in
mov
xor
jle
outsl
push
and
and
jecxz
xchg
mov
or
cmc
rcll
push
sub
jge
xor
xchg
adc
js
bound
je
push
insl
jb
enter
je
loopne
or
sbb
int3
cmpsl
mov
lea
xor
and
andb
cmpsb
push
dec
adc
dec
push
push
mov
jae
sbb
dec
bound
pusha
sti
or
sbb
jb
loop
mov
clc
mov
push
xchg
mov
add
xchg
mov
test
jno
dec
lret
lea
in
xchg
sub
inc
in
fisttps
jge
test
add
fisubrs
dec
xor
sub
cmp
loop
add
out
adc
pop
sahf
mov
sbb
pop
inc
sbb
sbb
fwait
jne
dec
lock
xlat
push
pop
arpl
lret
cmp
jns
dec
repz
gs
in
inc
lea
repnz
ds
test
aas
jl
mov
and
hlt
inc
adc
push
add
mov
jns
stos
mov
iret
int
and
stos
cmp
xor
xchg
aas
sbb
jmp
add
enter
inc
orb
sbb
js
sub
and
and
push
and
addr16
lea
add
mov
dec
lds
and
stos
cli
and
inc
and
inc
pushf
pushl
lea
jmp
movl
call
js
push
movl
je
push
pushf
movl
pusha
pushf
mov
pushf
lea
jmp
sbb
stos
adc
sahf
fwait
hlt
inc
sbb
test
imul
inc
pop
sub
cwtl
leave
gs
pop
loop
xchg
das
or
push
xor
repnz
mov
shlb
out
shrb
jp
cli
mov
je
aam
mov
std
jmp
int
test
sti
inc
lea
mov
fistps
lds
movl
pushf
lea
jmp
xlat
cmp
cs
andl
adc
fstpl
aad
xor
adc
inc
inc
mov
test
mov
or
inc
mov
scas
pop
dec
add
repnz
shll
popa
or
rcr
xor
mov
arpl
and
mov
lea
xor
and
sub
stos
test
lret
jle
dec
cmp
aad
aas
pop
fadds
mov
imulb
movl
pop
in
pop
aam
push
sahf
cmp
das
sti
pop
mov
mov
jmp
xchg
sahf
sub
push
mov
cmp
enter
imul
inc
das
jl
sbb
jle
push
and
cmpsb
dec
lds
and
in
mov
sti
cmp
inc
inc
and
outsl
fisubrs
movb
mov
pushf
push
lea
jmp
nop
push
add
xchg
int3
jg
bound
nop
bswap
in
add
test
jmp
jns
sbb
or
cmp
dec
sbb
test
cmp
nop
fcmovnu
cltd
pop
mov
in
push
inc
scas
mov
nop
subb
pop
rorl
cmp
xor
sub
stc
or
addl
fstpt
and
inc
out
sub
out
jno
or
loopne
int
repnz
adc
inc
lea
add
push
pop
and
lds
mov
scas
lret
mov
int
mov
mov
pop
jl
scas
mov
adc
jbe
mov
sub
das
and
jae
lea
clc
shll
xchg
in
lea
add
mov
mov
shll
lea
insb
stc
pop
lahf
jmp
rcl
dec
or
push
pushf
adc
mov
ret
mov
jmp
or
mov
sbb
add
pop
xlat
shll
mov
cmpsl
mov
imul
icebp
into
cmpsb
or
and
jae
push
mov
cltd
in
add
pushf
cli
in
test
lock
aas
jb
mov
filds
xchg
xchg
std
mov
xor
jmp
lods
dec
mov
shl
cmp
sub
push
add
lea
out
test
out
add
or
cli
je
pop
mov
xor
push
dec
fwait
sbb
lods
push
and
and
fxch
dec
jge
mov
lret
push
movsl
imul
addr16
in
iret
and
sub
mov
shlb
pushf
mov
and
jmp
push
movsb
sub
push
cmp
pop
mov
and
inc
lea
cmpsb
xchg
out
push
andb
jmp
cmp
imul
jae
pop
mov
mov
push
cmpsb
mov
out
jo
add
sub
xchg
das
fstpt
lret
test
inc
rcrb
sub
push
mov
outsl
lret
sbbb
sub
or
mov
pusha
jp
inc
shl
jbe
int
inc
xchg
in
xchg
adc
or
ja
popa
dec
inc
sub
insb
faddl
cmpsl
clc
fwait
sub
inc
lea
mov
repnz
fwait
lods
lret
outsb
xor
mov
push
pushf
roll
mov
xchg
frstor
jno
mov
incb
jp
mov
xor
xor
shlb
push
fmuls
ficoms
mov
sbb
xchg
inc
je
or
lods
or
xchg
pop
pusha
add
stos
cli
stos
cld
out
sahf
push
xchg
pop
pop
pop
movsb
or
jge
out
adc
hlt
inc
lea
xchg
sub
pop
out
mov
test
push
aas
arpl
ficomps
mov
mov
xchg
mov
cld
jecxz
insl
hlt
fildl
sbb
pop
fcmovbe
push
dec
xchg
arpl
std
cmp
mov
mov
adc
js
add
mov
fisubrs
xchg
add
push
jne,pn
dec
iret
inc
and
mov
fsubs
push
lods
adc
adc
mov
scas
sbb
push
or
insb
pop
cmp
pop
loopne
jno
sbb
inc
or
inc
sbb
outsb
add
jp
push
inc
testl
test
mov
mov
dec
mov
out
mov
std
aas
jne
repz
mov
mov
push
hlt
mov
xchg
pusha
lret
push
fiaddl
into
ja
jns
dec
inc
push
inc
faddl
stos
lret
mov
aaa
inc
sbb
inc
lea
bound
jne
call
pop
add
shrb
cmpsl
sbb
mov
fsub
out
aas
pop
lahf
dec
add
mov
fbld
pop
xchg
pop
in
push
mov
mov
movsb
jne
mov
hlt
dec
cmp
jno
out
inc
sub
pop
push
mov
dec
shl
fcoms
clc
dec
cmp
pop
cmp
xchg
inc
inc
lea
pop
add
insl
shr
pop
loope
jmp
jge
test
adc
ljmp
je
jg
jp
xor
jp
inc
popa
sub
fs
jne
cwtl
ds
sarb
push
jp
dec
xor
dec
mov
mov
add
inc
dec
sbb
lea
jmp
mov
xchg
and
jmp
jb
jbe
js
mov
lcall
enter
bound
lahf
and
adc
add
es
inc
fs
sbb
pop
cmp
inc
in
out
mov
popf
mov
add
pusha
inc
mulps
xor
adc
mov
inc
lea
pop
ljmp
push
cmp
xchg
mov
mov
add
add
leave
xchg
lds
jo
arpl
mov
xor
push
cld
sub
lret
mov
cs
cmp
add
ret
adcb
sub
pop
cmp
imul
jle
data16
lea
stc
dec
xor
or
movsl
hlt
test
out
sti
mov
repz
cmp
push
ror
cmp
rcll
in
pop
sarb
mov
aas
dec
insb
pushl
in
insb
mov
mov
daa
in
pop
sbb
mov
mov
adcb
push
rorb
push
jbe
ja
inc
mov
loope
sub
inc
lea
mov
test
adc
adc
push
leave
xchg
sub
sub
pop
jne
sahf
xor
or
mov
xor
inc
shr
jb
sbb
sub
fs
and
rclb
xchg
stos
mov
adc
mov
xchg
mov
push
dec
push
stc
pop
or
leave
jns
add
and
jle
aas
fs
xchg
ret
shrl
movsb
sub
insl
lret
mov
xor
lock
or
in
inc
aad
pop
mov
insl
in
ja
sbb
mov
xor
sub
inc
lea
outsl
aam
test
mov
adc
test
xchg
lods
roll
insl
xor
push
inc
or
stc
mov
jp
adc
mov
push
mov
jmp
xchg
jmp
xchg
push
fistps
mov
adc
subb
popa
sub
lea
hlt
rol
and
faddp
dec
lds
sbb
movl
push
push
lea
jmp
pusha
pusha
pushf
movl
jmp
jp
push
push
movl
pusha
pushl
lea
jmp
imul
ja
testb
jns
push
shrb
repnz
mov
data16
add
dec
popa
gs
cmpsb
cmp
insb
jno
cmpsl
punpckhwd
out
jmp
fxtract
jge
jb
push
pop
or
jbe
lahf
in
mull
cmp
mov
jmp
nop
lds
lcall
int3
mov
jle
add
cmp
sub
cmpsl
mov
jbe
jb
or
das
insb
lret
iret
or
scas
leave
jnp
js
xchg
sub
mov
xor
sbb
pop
sub
sub
or
int
push
mov
leave
push
sbb
lret
insb
xor
or
outsb
call
mov
mov
push
push
aas
or
test
inc
sub
xchg
enter
lea
pop
lcall
xor
or
jmp
mov
push
sbb
fsts
arpl
movsb
push
sbb
jnp
imul
lret
int3
ds
cmc
shlb
cmpb
addb
or
dec
sub
push
int
lret
xchg
out
icebp
and
ds
xchg
lds
sbb
sbb
pushf
mov
mov
aad
shl
stos
mov
cmc
push
call
arpl
push
add
stos
lds
lea
add
icebp
lret
test
out
ljmp
pop
outsl
add
test
push
cmpsl
sbb
sub
fcoml
fs
pop
push
leave
aad
push
stos
fsub
mov
arpl
and
mov
cmpsl
push
xchg
sti
xchg
int3
aam
pushf
adc
jns
test
orb
and
push
mov
lea
add
add
les
pushf
call
out
pop
call
pop
fiadds
dec
xchg
test
sbb
std
mov
or
imul
inc
sbb
dec
cmpsl
inc
lea
mov
lds
jmp
pop
dec
adc
cmp
std
cltd
mov
or
insl
fs
mull
fbld
adc
push
or
mov
out
push
je
jle
pop
call
das
in
addr16
inc
lea
xchg
movl
pushf
pushl
movw
pushl
lea
jmp
mov
test
sbb
pushf
les
push
imul
rclb
sti
test
xchg
mov
stos
xchg
add
cmpsl
leave
inc
add
orb
sarb
push
and
lods
dec
mov
xor
xchg
call
pop
cmpsl
jp
and
xchg
mov
inc
xor
in
mov
jae
push
jnp
mov
jae
int
push
test
and
cmc
or
or
mov
adcl
pop
mov
mov
mov
test
mov
push
pop
mov
cmp
arpl
lea
mov
fldl
ret
xchg
insl
and
lea
xor
bound
and
mov
or
mov
pop
mov
pop
sbb
fidivrl
test
xchg
xchg
data16
int
sti
xorb
cmp
mov
push
les
dec
clc
lods
pushf
ja
mov
and
mov
inc
adc
jae
jge
test
jnp
icebp
movsl
mov
rolb
fistps
or
sub
xchg
adc
mov
jecxz
cmp
sbb
mov
xchg
daa
cwtl
mov
or
xchg
jnp
inc
divl
adc
and
movsb
lahf
or
jb
stos
divl
fbld
aas
pop
sub
out
sahf
call
mov
mov
jle
mov
ror
sub
inc
cld
lods
adc
inc
addl
das
imul
jge
hlt
or
enter
cmp
push
add
int3
fdivs
dec
sub
mov
or
lret
stos
pop
inc
aad
xor
push
mov
loop
pusha
cmp
push
dec
cmpsl
call
push
shll
in
pop
ljmp
ret
sub
jne
shrl
subl
mov
adc
jg
clc
jl
jno
cmp
lahf
arpl
xchg
fucomi
popf
mov
ret
jae
or
bound
pushf
call
push
into
les
es
out
push
lret
pushf
enter
sbb
jge
lea
add
insl
xchg
and
js
inc
sbb
jecxz
dec
inc
sbb
shrl
mov
push
lods
jecxz
push
dec
cs
testl
jno
pop
dec
adc
push
jle
fistl
lret
xchg
mov
or
mov
xor
xor
inc
pop
and
sbb
ret
and
test
cmpl
aad
mov
mov
inc
xor
jo
push
inc
sub
imull
icebp
popl
adc
dec
sbb
daa
insl
mov
xchg
scas
add
xchg
jbe
insl
push
xchg
ret
push
mov
lret
in
test
test
mov
in
xchg
mov
sub
sub
adc
jae
cmpsl
es
mov
adc
inc
ss
fwait
shr
jne
adc
or
addr16
dec
sbb
outsl
sub
sbb
sub
xchg
fidivs
mov
xchg
pop
fs
mov
inc
lea
pop
dec
pop
add
push
and
ss
ret
test
xchg
std
scas
sbb
js
push
loope
lods
add
cwtl
mov
roll
repz
xor
shll
movl
xchg
push
sub
jbe
imul
insb
jecxz
mov
pop
jbe
std
jp
shll
add
pmaddwd
rcrl
lock
sbb
sbb
mov
mov
jecxz
cmpsl
ret
xchg
push
and
stc
cmp
outsb
push
push
clc
mov
stos
leave
pop
mov
and
sub
pop
iret
inc
ss
cmp
lods
adc
fistpl
iret
dec
sahf
lods
cmc
cltd
lahf
pop
xchg
andb
test
inc
loopne
jo
test
pop
addr16
clc
jb
sbb
pushf
sbb
ljmp
xor
sbb
out
xorl
nop
adc
ljmp
cld
mov
or
mov
push
push
subb
and
insl
out
mov
xchg
mov
adcl
sarl
mov
hlt
jl
cld
mov
cmp
push
das
sahf
sbb
and
movl
loopne
push
lock
test
ljmpw
inc
sbb
cmp
ret
fidivrs
cmc
ja
ljmp
sbb
lahf
not
pop
mov
shlb
in
cmp
xor
rol
sbb
pop
aad
leave
addr16
stos
icebp
adc
add
inc
push
xor
xchg
jb
jmp
dec
movaps
cld
jecxz
scas
pop
mov
xchg
lea
sbb
sub
rcl
out
movb
lea
jmp
sub
fs
imul
jno
jo
mov
lahf
lahf
and
pusha
inc
add
test
mov
mov
aas
and
nop
xorb
sbb
sbb
gs
dec
mov
cmp
and
dec
sbb
mov
mov
cmp
loope
ficomps
xchg
shrb
inc
sub
push
push
sub
addb
ret
call
cmp
bound
sbb
sbb
test
shlb
and
jb
leave
xchg
lds
dec
dec
mov
rorb
sbb
cmc
nop
push
cmp
gs
add
aas
mov
cmpsb
call
test
loopne
daa
add
push
ret
andl
xor
arpl
mov
xchg
fstpt
insl
jecxz
in
dec
xor
lock
pop
cmp
sbb
xchg
or
cli
pop
pop
test
frstor
stc
mov
and
js
adc
cld
jmp
push
popf
mov
popa
sbbb
rcr
dec
inc
pop
cli
pop
and
xchg
mov
pop
or
arpl
add
push
iret
iret
xor
xor
cli
dec
xchg
fst
sbbb
test
mov
insb
hlt
sub
fst
arpl
sti
cmpsb
ss
cmpsb
mul
inc
addb
mov
push
sbb
and
lret
mov
mov
mov
insl
pop
outsb
mov
pop
mov
cmp
jmp
lods
fdivrl
cmp
push
fisubs
add
sti
adc
shl
jecxz
dec
mov
or
xchg
sahf
push
pop
in
movsl
or
outsl
lods
push
jnp
bound
cs
jno
and
test
lods
jl
cmp
jae
lds
test
sub
adc
and
fdivs
fisubl
pop
adc
mov
push
scas
sub
scas
sbb
and
inc
stos
adc
jl
addl
xor
das
add
daa
dec
or
cmp
jnp
cmpsb
xchg
mov
jne
push
fistl
lea
cmp
push
inc
xchg
pop
mov
jo
je
aaa
andl
sbb
fxch
and
mov
ss
cmp
scas
adc
sub
sub
mov
inc
adc
cmp
fistpl
imul
enter
sub
test
jbe
adc
aam
scas
inc
les
mov
out
das
inc
fs
mov
mov
sub
xchg
lock
add
push
xor
cmp
push
addl
lcall
cmp
and
mov
cmp
inc
dec
ror
cs
push
bnd
sarl
sbb
dec
adc
xchg
gs
add
or
or
add
push
cmp
cs
xchg
ljmp
cwtl
or
shr
sbb
in
jnp
scas
in
mov
sub
imul
call
pushf
pushf
movl
jmp
adc
cmpsb
cmp
add
and
jno
inc
cmc
imul
out
xchg
cmp
mov
ljmp
cwtl
lret
mov
sub
enter
adc
cmpsb
roll
pop
pop
lea
dec
adc
dec
push
cwtl
and
mov
inc
pop
or
out
cmp
loopne
in
sbb
xchg
sub
xchg
push
cli
shr
bound
add
jecxz
push
shll
mov
imul
push
lret
lods
mov
lret
jecxz
cmpsl
test
cwtl
aas
and
es
movsl
adc
sub
test
subb
gs
jo
movsl
or
pop
sbb
test
xor
mov
add
shrl
scas
fpatan
xor
out
psraw
push
pusha
push
pushf
pushf
movb
movl
pushl
pushf
push
mov
lea
jmp
add
cmpsb
add
divb
mov
ret
cmc
scas
out
loopnew
cli
pushf
aam
fildl
push
cmp
daa
xchg
jb
pop
cmp
inc
testl
mov
cmpsl
shl
mov
sbb
andl
dec
inc
add
pop
and
pop
pop
in
cmpsl
fs
arpl
movsl
or
mov
sti
xchg
adc
xchg
fdivr
xchg
lcall
lods
aas
push
xchg
ret
outsl
jb
ljmp
xor
in
test
into
xchg
lea
das
inc
inc
xchg
stos
jns
aaa
lds
inc
in
lods
jne
cmp
loope
xor
push
adc
stc
mov
push
dec
mov
loopne
enter
push
popf
xor
aas
adc
mov
cmpl
dec
jnp
jnp
inc
test
mov
adcl
xchg
cli
int3
xchg
and
shll
in
xchg
in
repz
xchg
xchg
mov
mov
inc
stc
add
pop
addr16
sub
je
push
or
inc
mov
bound
pop
popf
or
pop
and
sbb
mov
in
sub
icebp
sarb
scas
dec
or
jnp
scas
mov
pop
add
dec
pop
aaa
lds
mov
adc
ror
and
les
aas
cltd
mov
xor
adc
ljmp
call
enter
mov
push
out
and
inc
lea
xlat
xor
aaa
push
testl
add
adc
jns
mov
lret
inc
and
inc
aad
lea
leave
jbe
insl
mov
sti
or
cmp
stos
in
adc
pop
mov
std
lea
rclb
cld
inc
mov
jno
shll
jmp
call
push
add
enter
std
cltd
pop
or
mov
arpl
stc
inc
lea
mov
jmp
mov
mov
pop
mov
adc
in
jae
hlt
xchg
scas
mov
das
cli
dec
stc
xor
cmpsl
bnd
in
imul
xchg
ss
mov
nop
fildl
xor
mov
inc
sub
rclb
int
sub
xchg
sahf
sub
test
mov
lea
jmp
divb
rcl
pop
sbb
lods
fists
lret
dec
out
lods
enter
sub
sub
dec
imul
packssdw
push
mov
or
adc
xchg
add
xchg
in
cmpb
aas
jle
sbb
mov
mov
insb
shll
cli
fwait
push
mov
leave
mov
inc
lea
sbb
movsl
subl
enter
xor
lock
mov
addb
movsl
mov
push
xor
insl
push
aaa
adc
mov
pop
pop
dec
rcll
sub
stc
fidivrs
push
shlb
out
jbe
fcmovb
loopne
push
mov
loope
sub
lahf
jp
test
ljmp
cmpsb
leave
scas
pop
jp
stos
jno
setns
in
fadd
and
push
jb
aaa
out
sub
rep
insb
bound
int3
xlat
push
pop
repnz
mov
les
push
test
xor
shrb
inc
xchg
call
mov
fildll
fistps
test
stos
shll
arpl
push
xchg
inc
lea
sti
inc
push
add
mov
inc
jecxz
xchg
notl
inc
add
mov
push
dec
out
inc
ret
ds
clc
imul
loope
pop
inc
outsb
lahf
push
dec
shrl
imul
stc
cs
aaa
lds
dec
je
cmpsb
or
hlt
inc
mov
out
add
dec
push
pop
xchg
jmp
push
jo
dec
outsb
dec
mov
push
call
mov
aas
scas
xor
mov
lret
lods
inc
dec
lret
push
call
inc
std
dec
sub
fs
sbb
xchg
mov
sbb
add
lock
and
adc
movsb
xorb
sarb
into
scas
inc
inc
lea
add
jmp
jmp
adc
xchg
add
or
push
cmp
out
popa
in
mov
mov
outsb
add
rcr
mov
pop
or
test
enter
mov
bound
mov
addr16
cmp
mov
pop
dec
dec
push
dec
outsb
orb
sti
loope
das
inc
xchg
fdivr
movsb
xchg
hlt
das
inc
xchg
clc
aaa
inc
push
mov
hlt
mov
push
mov
lahf
dec
std
lcall
jp
inc
aaa
pop
sbb
pop
mov
lea
fists
sbb
std
das
and
and
shll
sub
jp
dec
std
shlb
ficoml
mov
adc
push
adc
xchg
lret
mov
in
insb
fdivs
popf
adc
and
add
and
mov
call
mov
inc
lea
mov
pusha
pusha
movl
call
inc
das
outsl
xor
adc
jge
mov
lret
in
cmp
mov
push
jmp
clc
enter
test
or
sbb
imul
jb
jle
mov
fnstcw
sub
in
or
pop
cmp
roll
fs
push
mov
xchg
das
mov
push
jns
testl
insb
xor
adc
push
icebp
xlat
and
loope
arpl
push
jb
cmp
nop
lcall
sbb
mov
pop
or
jns
push
xchg
movq
cmp
mov
pop
push
mov
inc
mov
sub
call
loop
call
insb
xchg
sbb
xchg
inc
mov
ljmp
bnd
xor
mov
jmp
mov
loopne
lret
cltd
sbb
scas
sbb
addl
sub
rcll
fmuls
dec
aam
push
clc
inc
mov
scas
dec
movsl
shl
xchg
inc
mov
push
pop
in
push
loop
sbb
adc
pop
sub
mov
mov
inc
push
inc
push
mov
lret
ret
cld
dec
lea
gs
adc
adc
fisttpll
adc
push
xor
js
pop
add
dec
outsb
xlat
sbb
pop
fs
ss
lahf
dec
pop
mov
movsb
sbb
dec
adc
jle
inc
lea
lock
lret
jmp
dec
cli
push
jmp
or
sbb
pop
push
adc
and
or
enter
shrb
xchg
hlt
jle
ficoml
dec
or
movsl
scas
push
adc
pusha
or
in
pop
cmc
outsl
and
mov
mov
adc
orl
jl
lea
add
call
movl
push
call
jmp
adcl
aaa
and
outsb
xor
push
loop
xor
fdivr
lods
xor
scas
addr16
inc
gs
pop
and
jecxz
daa
xlat
push
leave
dec
clc
dec
mov
push
pop
inc
pop
lret
addr16
sub
add
sbb
xchg
or
sub
pop
sbb
lret
add
mov
inc
lea
cmpl
cmp
clc
jp
cltd
arpl
mov
inc
xor
hlt
out
jns
in
inc
pop
das
leave
fwait
addl
es
arpl
dec
sub
ret
lods
out
dec
arpl
push
jno
adc
xchg
mov
out
orb
mov
xchg
fimuls
mov
fwait
pop
cmp
fisubrl
in
cmc
js
jno
iret
inc
lea
fdivl
shl
and
ja
hlt
mov
mov
dec
ss
out
xchg
loop
int3
mov
cmp
loope
bound
add
ss
aad
daa
mov
or
aam
mov
xchg
mov
hlt
mov
fistpll
add
jbe
sbb
inc
lea
push
outsb
hlt
or
adc
mov
mov
lahf
imul
jbe
out
mov
mov
in
mov
mov
mov
inc
lea
subl
sbb
dec
bound
fdivrl
mov
cli
cmc
test
cmp
jns
add
scas
or
xchg
mov
je
mov
nop
mov
xor
negb
pushf
and
popa
cmp
out
lea
dec
clc
inc
ja
stos
inc
mov
loopne
test
stos
or
rorl
icebp
or
aas
enter
mov
pusha
lcall
in
jecxz
adc
out
mov
stos
in
mov
xchg
aas
sbb
loope
jb
iret
rcr
pop
add
imul
add
scas
sti
adc
pusha
push
jbe
jmp
jmp
fildll
xchg
add
jnp
into
js
fildll
lret
imul
fadd
and
movsb
lahf
in
and
fnsave
push
and
outsb
icebp
das
ret
outsb
cmp
add
pusha
unpckhps
add
sbb
xchg
mov
push
lock
dec
push
cmpsl
shrl
jo
movl
pusha
movw
pushf
pushl
lea
jmp
movl
pusha
movl
movw
lea
jmp
pushf
movl
push
push
movw
mov
lea
jmp
movl
jmp
cmc
faddl
adc
in
adc
lret
cmpsb
mov
lahf
sub
push
pop
add
mov
dec
or
pop
mov
and
ja
cmpsb
decb
sub
sbb
out
xchg
cmp
aaa
mov
inc
test
mov
mov
pop
sti
mov
andps
inc
sbb
out
xor
pop
iret
jmp
dec
fadd
pop
and
push
inc
lea
data16
je
xchg
loopne
sbb
or
push
xlat
addr16
mov
in
and
js
inc
lea
ljmp
inc
aas
jp
push
xor
push
frstor
divb
dec
jne
jle
xchg
xor
add
jns
lahf
loope
jecxz
out
iret
aam
lods
cs
lretw
mov
cmc
icebp
ljmp
nop
sub
lea
testb
xor
dec
cs
add
add
or
aam
rclb
add
out
sti
inc
and
cltd
push
addl
dec
sub
jecxz
push
push
scas
pop
int
adc
dec
dec
or
push
mov
ret
jge
inc
sub
leave
xchg
or
loop
arpl
fcmovb
and
mov
fidivrs
add
test
mov
inc
cmp
push
mov
xor
mov
jp
jecxz
mov
mov
pop
inc
int
incb
push
pop
cmp
cs
das
outsb
mov
dec
sub
roll
jmp
cmp
inc
mov
sub
movsb
into
xlat
and
fisttpl
dec
popl
pop
mov
jecxz
out
adc
inc
sbb
btr
or
test
dec
cli
add
shrb
xchg
mov
cs
les
mov
stc
xchg
clc
mov
test
jle
sbbb
movsl
sbbl
in
mov
or
je
mov
jno
or
cmp
out
xlat
push
sub
jp
cld
mov
add
imul
ficomps
or
push
adc
sbb
lahf
test
jl
jge
mov
sub
je
test
adcl
sbbb
clc
cmp
adc
in
loope
pop
cltd
inc
stos
xchg
in
pop
clc
or
mov
sti
mov
test
push
push
xor
mov
mov
and
pop
cmpsb
sub
jo
pop
jg
add
dec
lret
jne
jno
jl
dec
cmp
lea
loop
push
jg
add
push
lret
call
push
movb
movl
movl
jmp
pusha
movl
movw
pushf
movb
lea
jmp
push
jmp
call
pushf
push
movl
pushf
movl
call
pop
iret
push
loope
jno
lods
push
sub
and
or
fsubrs
dec
sub
mov
mov
xchg
jecxz
outsb
sbb
in
cmc
int
jg
pop
mov
mov
and
push
inc
inc
xor
mov
mov
cmp
sub
add
and
pop
jp
subl
scas
xchg
ss
test
lret
scas
popa
adc
and
movsl
repz
in
mov
out
mulb
scas
fstl
std
sahf
negl
rolb
call
lea
and
aaa
mov
rorl
mov
dec
decb
lea
mov
popa
xor
dec
cmp
fbstp
sub
inc
lea
lods
adc
jmp
inc
pop
pop
xor
or
gs
cs
push
dec
rorb
mov
cmpsb
add
ror
inc
pop
mov
dec
mov
pop
mov
mov
cmp
dec
movsb
mov
test
sbb
lret
xchg
testl
test
fisttpll
leave
cmc
sbb
inc
pop
xor
mov
jg
loop
sub
lcall
ret
imul
ret
xlat
bound
cmpsb
rcr
stos
popa
or
fistps
sbb
pop
sub
jne
les
jecxz
fdivr
inc
or
pushf
ljmp
and
xchg
lods
push
dec
scas
pop
das
ficoms
fs
filds
arpl
cmc
cmpsl
mov
jbe
push
out
pop
scas
outsl
mov
adc
movsl
xchg
mov
push
xchg
lds
inc
add
mov
lea
popa
jmp
movl
mov
lea
jmp
jge
cmc
jp
test
cmpsb
pop
loope
int
iret
mov
daa
movsl
pushl
jp
cmp
jmp
mov
clc
lret
xor
outsb
outsl
inc
ja
lcall
test
fnstsw
fdivr
pop
xor
aas
xor
lods
sti
mov
daa
pop
aaa
pop
sbb
int3
mov
stc
pop
push
fdivr
sbb
push
inc
push
mov
push
cmp
insl
xchg
inc
lea
fcmovne
movl
mov
mov
movb
lea
jmp
add
push
out
pop
or
das
icebp
push
fisttpl
fildl
xchg
add
ljmp
in
jle
push
dec
aad
ret
dec
push
pop
imul
in
mov
lret
sub
in
ds
jp
out
dec
push
mov
push
insl
dec
bound
jl
testb
ja
jge
or
or
inc
pushf
lret
mov
mov
xor
sub
or
les
push
push
movsb
mov
xchg
rclb
dec
into
mov
push
jnp
shlb
sbb
ret
loope
addr16
xchg
rorl
cmpsb
mov
pop
and
clc
shlb
push
clc
mov
je
jne
lods
sub
xor
mov
dec
mov
jl
fsubr
jno
pushf
xchg
idivl
inc
and
and
aas
neg
out
sub
xchg
push
aas
mov
mov
or
stc
inc
lea
cmp
movl
pusha
push
pushf
lea
jmp
ljmp
xchg
scas
ljmp
xor
mov
or
adc
popf
mov
cmc
out
push
lret
sub
adc
xchg
xlat
test
mov
cmpsl
dec
push
inc
mov
andl
roll
mov
mov
inc
lea
dec
push
push
pusha
movl
movb
pushl
push
push
lea
jmp
and
imul
jo
inc
cs
adc
ss
cmp
das
push
lds
lret
fs
pop
inc
sub
pop
xchg
push
insl
mov
test
ljmp
adc
mov
sub
mov
test
xor
push
cmp
cwtl
and
inc
inc
lea
into
es
fiaddl
movsl
ret
xchg
push
iret
or
aas
jmp
mov
adc
jle
xchg
pop
imul
push
test
enter
cmp
int
or
loop
movl
clc
sub
or
hlt
shrl
mov
icebp
jle
sbb
psubb
xor
sub
pop
js
outsl
and
jge
int
lea
push
arpl
popf
mov
aad
movsl
xchg
loopne
or
rcll
lds
jo
pop
rolb
cmp
test
movsl
imul
sahf
mov
xor
cmp
or
repz
adc
cmp
loop
xor
pop
xchg
sub
lods
ljmp
jo
out
sti
mov
sbb
insb
fldenv
aam
pop
insl
imul
mov
sbb
mov
sbb
inc
lea
lret
and
pusha
pushf
movl
pushl
movl
push
lea
jmp
dec
imul
cmc
insb
ss
movsl
iret
mov
shl
mov
loop
fcmovb
cmp
pop
fstps
rcrb
cmp
inc
dec
cmp
or
jno
mov
mov
push
xor
aam
roll
inc
add
lock
push
inc
lret
xchg
lds
nop
loope
cs
dec
push
jbe
popa
aad
mov
loop
inc
lea
insl
test
repz
cli
add
stos
jb
jg
repz
add
mov
push
adc
mov
dec
rcrl
int
xorb
inc
mov
sbb
push
loope
iret
shll
push
inc
cmpsb
shlb
fisubrl
ss
cmp
fdivs
stos
lock
popl
sahf
outsb
lcall
mov
dec
sbb
ss
cmp
cmovp
scas
add
xor
clc
in
jbe
add
std
mov
jne
lea
or
fdivrl
imul
mov
fbstp
lret
inc
ss
pop
fimuls
jae
iret
addl
out
xchg
xchg
adc
sub
mov
pop
xor
mov
cmc
sub
test
ret
lds
add
scas
mov
in
aas
scas
in
pop
pushf
xchg
sarl
or
les
enter
lea
adc
jl
pop
jge
push
cmp
shrl
mov
inc
pushf
mov
out
clc
faddp
test
stc
xchg
insb
jb
pop
fiadds
pusha
lock
cmp
push
and
cltd
call
data16
jnp
loopne
add
jp
xor
pop
mov
scas
loopne
inc
push
gs
ret
sub
gs
jmp
cmpsl
imul
mov
outsl
dec
js
jmp
rolb
sub
outsl
fmull
clc
clc
jae
and
add
inc
lcall
push
cmc
and
pushf
push
fmuls
jmp
sub
xor
sarl
mov
jge
addr16
subl
ja
adc
dec
add
outsl
mov
jge
jns
add
fs
ss
add
jne
push
dec
iret
sbb
and
xchg
out
and
fs
jmp
add
adc
cmpsb
push
dec
cmp
je
sub
fmull
into
pop
das
xchg
ret
popf
repz
ljmp
adc
aad
sbb
inc
sbb
and
fisubrl
out
add
sti
popf
dec
lods
ds
or
pop
sub
cmp
ficoms
dec
push
pop
divl
adcl
lea
loop
shrl
js
addr16
add
inc
lea
lret
push
mov
addr16
lea
arpl
and
dec
rclb
rcr
lea
js
fisubrs
xor
or
xor
push
add
in
push
sub
add
mov
push
and
lods
call
cmp
dec
ljmp
fsubp
push
leave
xchg
icebp
lcall
repz
mov
xchg
mov
das
or
mov
mov
jmp
sbb
push
inc
dec
mov
push
lods
mov
lret
outsb
xor
dec
sbb
xor
or
mov
loopne
sub
xchg
ret
mov
inc
sbb
clc
test
lea
lret
fs
sarb
mov
dec
push
jge
mov
popw
push
fnstcw
sahf
and
shll
sbb
jne
sbb
sahf
addb
sub
push
mov
ds
test
mov
fisubrl
jae
pop
inc
adc
jl
std
sub
popa
out
into
cmpsb
loope
data16
fists
test
divb
fwait
jo
mov
jno
add
dec
and
movl
pushl
movl
pusha
lea
jmp
es
xchg
out
adc
leave
push
in
sub
call
cmp
lcall
daa
fildl
pop
jmp
outsb
movl
aad
aaa
sub
iret
jno
arpl
mov
mov
fmull
push
gs
xchg
mov
movl
push
pushl
call
call
push
movl
pushf
lea
jmp
jbe
jns
lds
leave
loopne
addps
outsb
push
sahf
push
dec
adc
pop
jp
insl
mov
xchg
fsub
and
xor
add
jl
pop
push
cmp
pop
imul
popf
cld
mov
sub
mov
fisttpl
cmp
ds
negb
inc
lea
bound
pushf
movb
push
movl
call
lock
movb
push
push
dec
adc
mov
add
xchg
mov
mov
pushf
mov
adc
sub
mov
mov
cmpb
das
xor
in
lock
mov
mov
stc
push
cmp
inc
dec
mov
pusha
ljmp
xor
insl
adc
mov
and
xchg
iret
mov
cld
xchg
xchg
leave
shl
adc
mov
mov
mov
and
inc
lea
inc
in
movw
mov
pushf
movl
pushf
pushf
lea
jmp
and
dec
icebp
or
shlb
in
sub
fstps
mov
mov
jg
xor
bound
ret
or
cmp
pop
call
shl
sti
sbb
pop
jmp
mov
xchg
fisubs
lea
pop
inc
int3
inc
mov
adc
inc
imulb
pop
adc
lods
shrl
aas
push
jecxz
fldcw
leave
sbb
lea
and
mov
pop
add
pop
and
cmp
into
push
dec
std
xchg
addr16
xor
mov
xchg
sbb
inc
lea
rcl
cmpsb
pop
std
mov
or
mov
jno
dec
adc
dec
repz
mov
std
dec
xchg
xor
xor
repnz
out
push
shrb
loop
xlat
mov
testb
cmp
dec
daa
or
fistl
jb
shlb
test
jnp
and
movsb
loope
call
lea
or
movl
pushf
pushf
movw
mov
lea
jmp
outsb
fwait
lret
imul
les
mov
ret
std
pop
xchg
out
mov
xorl
xchg
repnz
out
adc
inc
lea
cmpsl
popf
xor
xor
sub
jle
stos
fisttpl
loop
gs
cs
cmp
scas
adc
insl
shl
push
jne
orl
int3
pop
pusha
jge
inc
xorb
fists
inc
lea
pop
int3
pusha
jmp
int
lods
cmp
mov
out
cmp
xor
pusha
daa
stos
lcall
adc
dec
andb
sbb
pop
imul
aad
jnp
es
and
sub
and
dec
xor
sub
fidivrs
mov
cli
mov
sbbb
pop
add
imul
dec
push
into
jge
mov
push
fnstsw
imul
or
aas
xchg
sbb
popa
inc
rcl
out
pop
inc
shrb
jmp
add
shl
loop
mov
iret
and
ss
sbb
lock
out
cmpl
jge
mov
inc
and
movl
call
mov
pusha
movl
jmp
jmp
divb
mov
lock
pushf
jp
fcompl
dec
adc
into
ja
xchg
rcll
jp
pop
lcall
lods
mov
outsl
into
cltd
adc
add
dec
cmpsb
inc
inc
sbb
mov
dec
xchg
or
inc
mov
sub
je
fsts
mov
jae
insl
xchg
inc
sbb
xchg
and
jmp
mov
cmpsl
fadd
lret
mov
daa
sub
clc
int
inc
shll
testl
lea
jns
push
movl
call
adc
mov
and
popa
adc
outsb
or
pop
xor
pop
movsb
cmp
or
insb
repnz
jbe
cmp
xchg
dec
pop
cltd
pop
pop
cmp
push
dec
push
imul
dec
sbb
insb
fiadds
das
jae
dec
lahf
inc
lea
pushf
mov
pop
dec
mov
jns
cmp
fisubl
push
jbe
cmpsb
rorb
shlb
fimuls
or
lods
and
loop
outsb
out
lcall
lret
or
or
cmp
in
sbb
cld
pop
jl
cld
mov
ljmp
and
dec
and
fiadds
dec
lahf
test
sbb
into
and
mov
cld
mov
imul
inc
shll
xchg
sbb
xchg
std
dec
ss
in
cmc
xchg
adc
rolb
push
xchg
out
sub
mov
movsb
push
mov
adc
pop
jg
adc
mov
xor
dec
fcmove
popa
frstor
add
and
push
cmp
testb
ja
xchg
mov
jno
movsb
push
jnp
adcb
lret
mov
mov
js
mov
dec
sub
push
jg
ss
sub
fstl
mov
fistps
inc
pusha
adc
jbe
jo
cmc
xlat
subb
lcall
stos
repz
xor
inc
lea
fcmovne
xchg
pop
pop
xchg
cmpb
push
inc
cli
mov
pop
bound
scas
cmp
pop
into
sub
sub
mov
sarl
cmpsl
pop
ljmp
adc
mov
mov
add
pop
adc
popf
jmp
pop
mov
mov
push
jb
mov
jge
sbb
rsqrtps
cmp
dec
cmp
inc
push
fildll
sbb
dec
sti
mov
stos
decl
test
xchg
ljmp
scas
add
sbb
mov
xor
jmp
pop
mov
dec
jmp
daa
mov
sti
and
scas
jg
bound
out
repnz
sub
add
cmpsb
dec
imul
sbb
scas
mov
movsl
mov
imull
xchg
add
mov
pop
add
mov
in
or
ret
cmp
sbb
adc
inc
adc
jle
jl
dec
flds
dec
jmp
pop
dec
push
ss
lahf
pop
add
sbb
jecxz
lret
cmpsb
jmp
xchg
jo
inc
add
stc
push
add
jno
and
cmp
push
stos
pop
pusha
jge
stc
aaa
scas
shlb
mov
roll
mull
lahf
jmp
add
pop
shl
je
lods
jb
lods
inc
popa
in
inc
cmp
daa
pusha
adc
repnz
std
pop
or
mov
push
mov
dec
jp
imul
test
and
subl
and
int
and
popa
xor
mov
adc
mov
aas
fmuls
sbb
jae
repnz
push
push
out
ror
jno
bound
scas
jne
dec
sub
lar
cmp
mov
push
aas
pop
adc
cmpsb
ret
test
jl
inc
lea
out
jmp
ja
push
xchg
mov
mov
addr16
xchg
jg
stos
mov
sti
xchg
inc
pop
decl
out
stc
pusha
jge
xchg
aam
adcl
adc
mov
xchg
divl
inc
adc
inc
lea
lea
icebp
mov
call
xor
call
pusha
push
mov
movb
movl
call
call
mov
mov
inc
mov
lock
adc
stos
daa
bound
xor
daa
pop
out
and
inc
pop
popa
add
dec
fwait
andb
jl
fnstenv
cmp
in
lret
lods
adc
jae
movsl
loope
ss
in
aas
add
movsl
mull
pop
xor
dec
xor
inc
lea
dec
repz
stc
cli
jmp
cs
mov
in
into
mov
lods
adc
cmp
test
ss
in
outsl
ret
ds
aaa
push
lock
mov
jecxz
ds
xchg
inc
mov
dec
movaps
loop
xor
mov
xor
push
sbb
into
mov
push
fldt
add
inc
and
std
popf
pop
cwtl
xchg
xchg
push
cmc
jb
and
aaa
mov
mov
xchg
dec
enter
inc
lea
dec
jge
and
mov
xchg
xchg
dec
and
mov
aad
fsub
xor
faddl
mov
test
pop
xchg
aad
cmp
jp
jo
loope
dec
fisubs
sbb
inc
cwtl
push
sbb
pop
test
imul
or
scas
leave
scas
lret
data16
addb
arpl
loopne
loopne
aaa
sbb
jg
popf
sbb
mov
lods
aam
add
test
sbbl
lcall
mov
stos
mov
mov
cli
cmpsl
enter
inc
lea
sub
shrb
sbb
dec
push
jl
stos
mov
stc
popf
and
xchg
leave
push
dec
jns,pt
bound
adc
sub
aas
mov
int3
or
xor
outsb
test
mov
test
sub
push
pop
arpl
push
imul
and
pop
data16
jns
xor
push
pop
pop
and
jp
inc
lea
add
out
mov
cwtl
sahf
mov
adc
add
bound
imul
jnp
mov
cmp
xchg
js
adc
out
lock
pop
stos
out
xchg
int
gs
enter
add
pop
pushf
adc
jecxz
inc
in
jno
push
out
jecxz
lods
inc
mov
add
xor
adc
insb
fcmovb
mov
cwtl
sub
stos
daa
xor
cmpsl
add
lahf
es
add
popa
lcall
movl
pusha
pusha
movb
jmp
inc
mov
inc
push
xor
jmp
das
ja
xchg
lret
sbbb
loopne
incl
sbb
jmp
shlb
adc
mov
adc
mov
ret
ficoms
movsb
mov
repnz
inc
lea
jnp
movl
mov
movl
pushf
pushf
pusha
lea
jmp
je
addr16
and
push
adc
sub
sbb
ret
bound
push
shll
push
add
sbb
mov
shlb
aad
aaa
ficompl
loopne
jge
mov
cmp
dec
adc
js
xchg
mov
shrl
push
ss
lds
outsl
xor
add
dec
outsl
pushf
bound
inc
lea
outsl
movl
pushl
pusha
push
pushf
movl
mov
push
pushl
mov
lea
jmp
call
jg
xor
jbe
mov
mov
lahf
cmp
pushf
jmp
fwait
mov
mov
lds
stc
xchg
xor
test
mov
push
out
jle
jl
and
mov
lock
sub
test
sbb
adc
inc
push
inc
test
dec
loopne
xor
inc
inc
cli
test
int3
mov
fs
imul
lea
xchg
push
shr
lock
out
jb
jmp
sub
jns
xchg
inc
pop
mov
test
mov
dec
xchg
ds
cli
shlb
out
cs
sbb
or
test
insb
loopne
push
jb
inc
lea
loope
sbb
insb
fisubl
cli
pop
dec
or
mov
es
jbe
push
fbstp
cmc
jbe
push
mov
pop
lret
xor
adc
or
push
adc
lret
add
mov
sbb
pop
aad
adc
push
inc
pop
xor
imul
clc
or
dec
add
inc
lea
dec
inc
test
inc
xchg
cli
lock
add
jl
dec
in
push
ss
ror
test
stc
repnz
adc
add
popa
jge
cld
push
test
mov
clc
jno
hlt
push
sbb
inc
cmp
test
sahf
lret
rclb
push
mov
inc
stos
movsb
test
subl
insb
xchg
cmp
gs
es
ljmp
xorb
test
aad
sbb
cmp
jg
and
je
data16
jge
push
mov
nop
vmread
lahf
loop
jmp
les
inc
and
fsubs
mov
lea
add
cmpsb
or
lcall
ret
xchg
movsl
xlat
shrl
jle
inc
adc
imul
inc
xor
fildl
jmp
sub
int3
xor
cld
jo
popa
sub
sbb
fsts
incb
test
sahf
outsb
loope
lret
leave
shll
mov
stos
push
cmp
adc
pop
mov
fs
sbb
ja
inc
lea
mov
leave
push
loopne
xor
clc
jbe
aas
jo
dec
add
shlb
insl
xchg
mov
filds
push
loopne,pt
in
imul
xor
movsl
push
test
add
xlat
pop
adc
mov
mov
fwait
out
mov
jmp
adc
mov
inc
add
sub
add
es
jg
jb
push
push
sti
mov
dec
or
cld
cmpsl
out
and
push
leave
mov
cld
sub
xchg
jle
into
pop
push
adc
aas
fldcw
add
in
inc
jnp
adc
jge
push
mov
notrack
mov
push
out
aaa
loopne
or
jno
jg
pop
dec
mov
xor
push
inc
sbb
fiadds
fidivrs
enter
lods
push
mov
cmp
sub
cmpsl
call
sbb
and
cmp
adc
lret
or
lea
jg
jmp
pop
rclb
mov
jg
out
push
jae
inc
movl
mov
subb
sbb
insb
sbb
neg
pop
out
cmpl
ret
movsl
sarl
add
sub
out
imul
jle
fiadds
sub
jg
roll
inc
xchg
cltd
or
popa
cltd
lcall
daa
inc
ljmp
jmp
mov
push
add
xchg
or
cltd
test
int
es
shll
push
pop
mov
pop
jb
fildl
mov
and
add
push
cmpsl
das
or
cmp
jne
pop
adc
or
lods
fwait
shll
mov
push
loope
jmp
dec
push
cmp
sub
adc
fadds
mov
jmp
jg
loopne
xlat
cmp
imul
ret
stos
add
repnz
lds
leave
cld
dec
stos
mov
notb
in
movsb
aam
sbb
push
push
mov
push
pusha
push
fstl
xchg
pop
xchg
push
aas
int
add
push
mov
arpl
rcl
inc
pop
jbe
pop
and
xlat
xor
cs
int3
ret
inc
ja
cmc
add
jge
xor
rol
inc
pop
sahf
jo
lcall
and
dec
add
rol
gs
int3
sbb
add
or
pop
shll
inc
lea
dec
dec
sti
bound
int
in
ljmp
or
or
sub
dec
loope
ljmp
clc
das
cmp
in
add
jecxz
stc
sbb
stos
add
jl
mov
shlb
push
cmp
movsb
lods
les
mov
sub
cmpl
subb
sub
aaa
insl
mov
or
or
inc
and
cmp
jbe
test
add
and
fsubl
mov
leave
sub
add
sub
or
inc
idiv
mov
mov
or
inc
std
popf
fisubs
notb
adc
xchg
mov
pop
cmp
ss
hlt
test
xchg
mov
call
jb
out
lahf
xchg
cmp
add
or
loop
adc
xchg
in
pop
xchg
mov
int3
inc
mov
mov
out
xchg
mov
xor
jns
sub
sbb
test
mov
mov
ss
out
xlat
inc
lea
sub
imul
mov
or
jle
push
movl
jmp
pusha
call
loopne
pmulhuw
pop
loop
or
das
dec
or
out
lock
mov
jb
adc
cwtl
popa
repnz
or
pop
or
pop
xlat
mov
mov
push
push
push
in
loop
cwtl
mov
adc
sahf
mov
daa
pop
or
test
sub
aas
inc
test
aas
xor
push
dec
shll
lret
ficoml
loopne
or
pushf
and
cmpsb
sub
mov
sub
add
cltd
daa
daa
pop
or
or
pop
jl
and
and
hlt
push
push
enter
add
pop
pop
fwait
cwtl
ret
hlt
iret
ss
fisttpll
mov
fucomi
loop
loopne
shr
add
clc
lret
fwait
cmc
mov
mov
sbb
dec
fsubr
mov
dec
pop
dec
cwtl
push
xchg
jns
xor
out
mov
scas
shlb
aas
dec
scas
cmp
and
mov
mov
ljmp
xchg
adc
cli
mov
sub
add
mov
cld
xor
je
jno
mov
outsl
dec
jmp
imul
cwtl
push
xchg
rorb
sti
sbb
sbb
jo
inc
lea
pushl
movl
movl
pushf
pushl
mov
lea
jmp
pushl
movl
movb
lea
jge
pusha
movl
pushl
pushf
pusha
lea
jmp
sahf
mov
jb
xchg
imul
mov
movsb
cmc
dec
xlat
mov
cmpl
jb
dec
imul
dec
jbe
andb
out
data16
test
out
add
aad
xor
pop
repnz
xor
dec
mov
xlat
out
cmpsb
xchg
shr
mov
cltd
pop
jb
xor
push
mov
jo
jge
dec
es
adc
cmp
pushf
and
and
int3
ja
test
stos
rolb
add
aas
inc
and
mov
std
dec
int
sarb
ficomps
xchg
lcall
xor
scas
mov
loopne
push
lds
mov
out
pop
or
mov
xchg
aam
ljmp
sub
in
pop
fs
sub
add
dec
adc
push
dec
mov
mov
xor
sbb
pop
mov
lock
or
mov
cld
push
jb
pop
lahf
test
in
adc
in
call
mov
subl
int
lret
xchg
aaa
ss
xor
jle
and
push
fdivs
mov
lods
xchg
mov
xchg
in
jecxz
inc
and
push
sbb
jb
add
or
jmp
mov
sub
cs
popa
inc
ret
lcall
mov
xor
sbb
out
xchg
mov
sbb
data16
mov
sbbb
mov
and
pextrw
cmp
pop
movsl
loop
inc
test
jp
bound
test
xchg
sub
xchg
ja
lahf
push
aad
sub
xchg
and
popa
ja
mov
cmp
inc
jae
popa
inc
jno
adc
pop
jp
andps
dec
sti
jmp
xor
xchg
mov
add
lods
movl
lods
inc
lea
lods
testb
or
test
pushw
jne
inc
and
adc
xchg
mov
xchg
jne
cmpsl
mov
pop
dec
pop
mov
pop
push
inc
xor
lahf
mov
jle
iret
in
mov
mov
stc
idivb
in
add
jb
test
outsl
imul
pop
imul
lret
std
xchg
in
lret
cwtl
pop
dec
pop
andl
lret
adc
stos
jge
inc
sub
into
bound
add
push
mov
into
fsubr
mov
and
rclb
or
aam
mov
lahf
mov
fs
in
aad
push
push
out
sarl
icebp
movsl
pop
adc
sar
mov
pop
jns
adc
cmpsl
jae
int
pop
pushf
cwtl
inc
or
mov
lret
test
jle
push
out
add
lea
pushf
pushf
jnp
inc
and
and
and
pusha
push
lea
jmp
or
lcall
pop
cmp
sub
stos
loop
fisttpl
nop
mov
add
insb
fiaddl
sbb
push
enter
sbb
fldl2e
jno
pop
jb
mov
imul
add
xor
adc
xor
add
roll
mov
xor
mov
inc
and
push
das
mov
add
test
pop
jp
adc
or
mov
xorl
outsw
rcll
mov
fchs
test
daa
out
lods
rclb
dec
xor
addr16
lea
mov
das
lret
out
idivb
mov
mov
in
cwtl
sar
movsl
in
adc
enter
lods
cmpsb
mov
adc
aaa
das
cmp
sub
rorl
imul
adc
xchg
pusha
bound
pop
ret
inc
stos
or
adc
fdivl
sarb
mov
xchg
cs
cmp
sub
pop
movb
push
mov
pop
mov
mov
mov
lds
cmp
jns
pusha
movl
pushl
movw
mov
lea
jmp
adc
pop
lret
addr16
jno
pop
js
dec
rep
push
in
lea
jne
jae
stc
fsubrl
pop
fmulp
outsl
push
or
add
push
scas
ds
mov
xchg
xorl
cmpsl
test
data16
aas
cmpsb
lds
sbb
mov
das
and
push
cmovne
sub
or
pop
add
adc
movsb
inc
adc
mov
dec
adc
js
dec
sbb
inc
lea
addr16
das
jecxz
cmp
dec
dec
mov
cmp
push
rolb
cs
popa
jno
daa
pop
cmp
fildll
mov
lahf
in
cs
fs
sbb
mov
xchg
gs
sbb
ficoms
sbb
add
jp
mov
fcmovu
insl
xchg
out
mov
xchg
cmp
push
xor
sbb
push
ja,pt
fadd
cmp
pop
and
lock
jnp
dec
iret
dec
lahf
inc
lea
loopne
cmc
loopne
pop
call
movsl
pushf
adc
lods
sub
mov
test
inc
pop
push
adc
aaa
pop
pop
cltd
add
cmp
test
dec
mov
sub
mov
mov
jl
add
dec
add
mov
mov
insb
xchg
cmpsw
jbe
call
aad
mov
add
pop
sub
testb
sbb
vmread
addr16
pop
int3
pusha
cwtl
jl
cmp
push
outsl
mov
int3
idivl
dec
ret
mov
cltd
aas
xchg
cmp
fildl
push
or
mov
jl
je
add
outsl
in
lcall
imull
in
nop
and
inc
lea
push
sbb
and
cwtl
cli
dec
pusha
pushl
movb
lea
jmp
insb
xchg
and
dec
push
push
out
sub
inc
cs
add
mov
popf
mov
adc
xor
cmp
pop
sub
jecxz
lods
stos
cmc
jae
jbe
jge
out
cmp
mov
cmp
lods
rcrb
mov
inc
outsb
jne
xchg
push
cmpsl
push
xchg
mov
add
das
lods
lods
fdiv
fsubrl
push
push
or
es
mov
dec
ljmp
pop
push
xchg
into
sbb
dec
mov
loop
icebp
jg
pop
pop
js
in
inc
lea
inc
and
mov
and
mov
lea
jmp
loope
popf
xor
ret
das
popf
mov
jl
addr16
mov
mov
lods
jmp
iret
and
outsb
jne
fcmovb
push
out
enter
aad
stos
sbb
mov
add
mov
xchg
inc
jno
inc
cltd
cmp
ret
clc
jle
sub
adc
or
adc
lea
push
pop
int
mov
pusha
mov
cmp
cmp
add
sub
add
lahf
adcb
cmp
dec
push
les
scas
call
jle
xlat
into
mov
and
jbe
fsubl
jl
fisttpll
jmp
outsl
and
lea
mov
in
mov
into
loop
mov
sar
in
cmp
inc
or
test
rcr
adc
cwtl
adc
jmp
inc
pop
repnz
dec
push
jno
popf
fcoms
enter
push
add
or
jl
lcall
pushf
repnz
push
jp
inc
add
mov
sub
incl
dec
shlb
sbb
adc
in
inc
lea
pushf
test
or
sbb
jge
mov
pushf
sub
push
add
xchg
and
add
sbb
xor
insb
mov
ljmp
lock
mov
dec
fiadds
cmp
arpl
imul
jae
fisttpl
xor
fwait
imul
pop
push
sub
scas
mov
cmp
pop
jge
jecxz
jl
or
or
mov
mov
mov
mov
add
xchg
cmp
xor
mov
test
mov
jne
sti
pop
jg
cmp
cltd
mov
add
lcall
add
xchg
xchg
stos
xchg
fstl
sbb
and
andb
mov
xchg
push
std
pop
inc
cmpsb
sbb
pop
sar
xchg
xchg
dec
dec
mov
sbb
pop
push
sub
in
sarl
lods
sub
idivl
iret
es
pop
xchg
mov
xchg
fsubrl
loop
mov
sub
pop
mov
rorl
aas
ret
pusha
cmp
cltd
ret
mov
lret
out
imul
cltd
jg
mov
popf
pop
jecxz
out
out
imul
shrl
cmp
stos
jecxz
mov
insl
popf
xchg
imul
es
add
sbb
outsb
test
xor
les
cmc
ja
pop
jecxz
adc
mov
jb
mov
rcll
mov
pushf
cltd
out
and
pop
sbb
dec
pushl
inc
lea
mov
and
push
call
and
dec
mov
lret
xchg
jle
jno
lods
testl
sub
mov
hlt
in
dec
push
jbe
sahf
ds
xchg
pop
mov
aas
push
dec
mov
mov
mov
mov
cmp
ret
lods
repnz
adc
mov
mov
push
dec
jmp
dec
push
xlat
mov
subb
and
outsl
loope
aad
in
adc
mov
aaa
mov
xchg
aad
inc
or
add
push
mov
mov
pop
pop
or
or
inc
cmp
mov
jmp
push
lods
push
jne
pop
cmp
push
idivb
or
sub
push
sbb
and
inc
and
out
dec
and
jmp
push
repnz
add
xchg
dec
xchg
lods
cmp
add
sbb
fs
sbb
cmp
and
xchg
jge
shlb
jle
inc
pop
in
lods
jecxz
aad
lock
xchg
repnz
pushf
fstps
pop
ss
sub
or
adc
in
scas
mov
daa
fnstenv
aad
sbb
inc
sub
test
add
pusha
jmp
paddsw
jecxz
aam
aam
cmc
xchg
sub
into
dec
imul
mov
jmp
and
jmp
jne
cltd
mov
scas
mov
fidivrs
xchg
or
daa
loopne
mov
sarl
sbb
subl
lods
roll
shl
mov
fs
in
sub
pop
mov
or
push
adc
out
lret
adc
lret
nop
fisttps
in
popf
pop
adc
mov
fstpt
add
sbb
mov
mov
sub
xor
push
scas
jb
cmp
xchg
pop
and
pop
mov
dec
jl
sub
inc
xor
rclb
push
push
jb
jl
or
ja
test
shl
dec
sub
and
inc
lea
lahf
lods
popf
call
movl
pushf
pusha
mov
pushl
movl
pushf
movl
movw
pushf
lea
jmp
out
lahf
pop
lret
push
aas
and
mov
test
scas
sbb
ja
insb
xlat
mov
sub
mov
lret
lahf
jge
loope
xor
loopne
sbb
jl
xchg
aad
loope
out
push
cmp
add
mov
sbb
in
add
inc
jmp
movsb
push
movl
cmpsl
outsb
jmp
movsb
push
arpl
push
jmp
pop
int
lea
mov
adc
or
mov
pop
mov
int3
inc
dec
and
mov
and
mov
cmc
ljmp
inc
dec
xchg
mov
movsl
rolb
dec
or
inc
lea
inc
inc
pop
repz
clc
xchg
cmc
fwait
cmp
dec
xchg
add
push
shll
xchg
cmpsb
dec
jae
add
sbb
mov
xchg
repz
rcll
xchg
cmp
int
lea
and
jmp
inc
mov
arpl
mov
xor
out
movb
sub
ja
inc
bound
inc
push
inc
add
cwtl
adc
sbb
fucomp
negb
cmp
call
sbb
repz
pop
push
pop
ljmp
adc
fldt
mov
shlb
lock
aas
jo
inc
lea
cmpsb
lret
loope
add
insb
insl
aam
xchg
ljmp
into
pop
insl
xor
cli
stos
divb
pop
dec
cmpsb
pusha
insb
stos
jo
jmp
pop
pop
inc
roll
mov
sbb
in
dec
cltd
fidivrs
jmp
push
cli
mov
xchg
or
scas
nop
std
cmpsb
int3
shlb
rcll
insb
ja
add
sahf
les
in
imul
pop
je
push
mov
roll
or
sbb
cmpsl
outsb
add
mov
lods
mov
add
gs
loopne
insb
inc
cmp
das
jge
jle
jb
insb
push
bound
push
insl
dec
xor
mov
sbb
gs
aaa
sub
int3
orl
lds
inc
lea
sub
and
xchg
pusha
lea
jmp
jmp
imul
sbb
int3
imul
cmp
popw
inc
and
sub
xor
push
data16
dec
imul
shll
gs
xor
lock
je
pop
mov
sbb
lea
push
insb
rorl
add
dec
push
lret
fcmovbe
sub
daa
sub
pop
scas
mov
sahf
pop
or
dec
pop
push
sbb
lcall
lea
fcomps
outsb
xor
dec
lret
add
sub
sbb
dec
xchg
add
push
iret
fdivr
insb
sbb
rorl
adc
sbb
mov
pop
icebp
cld
std
cmp
mulb
xor
les
sti
or
sub
scas
push
dec
sti
xchg
xor
rolb
lea
xor
push
mov
loope
add
jecxz
data16
or
xchg
es
and
sbb
xchg
and
pushf
enter
cmpsb
inc
aad
push
fwait
add
scas
int
lea
mov
mov
xor
fimull
pop
sub
pop
or
mov
lahf
aam
fmull
sbb
fisttps
xchg
lock
xor
inc
lea
pushf
movl
push
push
lea
jnp
push
pusha
lea
jmp
mov
popa
pusha
sub
nop
sbb
imul
les
scas
aas
inc
cltd
hlt
loopne
mov
push
cli
loopne
add
mov
es
push
fldt
pushf
mov
adc
aas
jne
adc
pop
xor
js
cmp
pop
sub
mov
nop
fmuls
jne
aad
test
xchg
mov
or
mov
cmpsb
xor
cs
dec
mov
and
repnz
sub
xor
or
mov
mov
sub
fwait
jge
out
dec
or
flds
add
movl
sbb
cmp
mov
add
inc
lret
fadds
popf
in
jecxz
fisttps
jl
jg
sbb
xor
jmp
in
cwtl
adc
sub
cs
sub
cli
cmpsl
test
int
ljmp
ljmp
stc
jno
fdivrp
sub
sub
mov
xchg
mov
insb
jae
dec
inc
movsl
das
push
pop
dec
mov
stc
cli
xchg
sbb
xchg
inc
cmc
sbb
mov
sbb
repnz
icebp
xchg
and
js
fwait
insl
std
sar
pop
inc
pop
lret
add
leave
es
cmpsl
push
filds
jmp
push
sub
xchg
fiaddl
and
dec
das
popa
push
xchg
jmp
pushl
mov
jge
mov
xor
call
xor
pop
lock
push
sub
add
xchg
xchg
aad
add
xchg
mov
sbb
jno
test
mov
or
enter
loope
rcrb
bound
in
pop
imul
repz
mov
sub
gs
call
std
loope
lahf
cmp
fnstcw
insl
mov
or
mov
bound
mov
insb
jbe
sbb
lret
add
pop
push
lds
lock
mov
sahf
jno
pop
icebp
jp
push
lret
iret
mov
mov
sub
stos
sub
dec
mov
jnp
sbb
pop
testl
dec
mov
dec
cli
mov
lods
mov
sbb
jo
clc
fstpt
js
and
add
xor
lret
push
add
and
call
sub
mov
adc
pop
inc
lea
call
and
dec
push
and
fimuls
adc
call
lea
pop
add
inc
mov
es
mov
hlt
jb
insl
fdivr
in
mov
cld
cmpsb
rol
jle
cltd
leave
sub
sar
or
loop
jae
loop
jo
pop
mov
jb
inc
stos
xor
adc
popa
jne
adc
popw
pop
ljmp
movsb
icebp
mov
sub
cmpsb
push
adc
adc
testb
xor
push
push
pop
call
and
mov
mov
dec
pop
movsb
imul
xchg
ffree
push
ss
fwait
push
and
cmp
lods
mov
fbld
hlt
mov
addr16
xlat
or
rclb
xchg
sub
divl
inc
xor
pop
xor
nop
mov
push
push
adc
mov
pop
outsl
sbb
pop
xor
repnz
ds
xchg
jae
pop
mov
addr16
pop
clc
add
jno
aaa
out
mov
add
xor
or
hlt
sbb
sub
hlt
les
js
adc
and
mov
sbb
test
imul
pop
jle
out
aam
xor
ficompl
jae
popa
xchg
sub
sbb
scas
in
or
cmp
inc
and
xchg
inc
lea
and
stc
test
lahf
popf
mov
mov
pop
jno
pop
cmp
loope
mov
or
scas
push
dec
hlt
add
jg
popf
insl
adc
ja
pop
inc
daa
inc
adc
sub
inc
sub
pop
jnp
lret
and
insl
and
mov
xor
lea
and
sub
daa
or
add
cmp
scas
xlat
cwtl
sbb
xchg
mov
stos
ret
negb
cmp
mov
fidivrl
push
icebp
stos
dec
cmp
add
outsl
xchg
add
mov
out
and
cwtl
incl
mov
pop
stos
rcrl
into
int3
jno
aaa
stos
mov
adc
lea
inc
add
xor
pusha
jmp
aaa
or
dec
xor
xchg
js
arpl
loop
inc
insb
mov
loope
mov
xchg
addr16
mov
shrl
xor
and
mov
pop
icebp
pop
ss
shl
sbb
lret
fs
push
rclb
loop
jne
ret
pop
cmp
stc
mov
aad
fistps
jo
cmpsl
sti
stos
mov
es
mov
pop
mov
movsl
and
movsl
stc
inc
and
lahf
ret
xlat
mov
or
loope
nop
or
call
mov
pop
ficoms
mov
sarb
cli
xchg
sti
roll
jae
sahf
cmp
and
mov
movsl
fildl
sub
sbb
jmp
xchg
xchg
jle
lea
jmp
jmp
out
jbe
dec
pop
pushf
cmpsl
push
stos
popa
jmp
pop
sub
push
sarb
imul
sub
push
mov
fidivl
adc
push
mov
icebp
dec
jge
mov
scas
adc
cs
push
jecxz
and
inc
inc
inc
pop
mov
mov
mov
lea
mov
iret
adc
movsb
add
cld
adc
or
jo
mov
out
mov
arpl
and
popl
jmp
dec
cli
cltd
and
mov
jno
std
cltd
sbb
inc
gs
sub
mov
jbe
iret
and
lcall
cltd
cmp
jle
sahf
pop
pop
aas
cmpsl
std
mov
loop
cld
ljmp
lcall
mov
sub
rorl
lea
shlb
in
add
outsb
ss
in
jb
pusha
or
cltd
push
jge
enter
dec
fcmovnb
stos
pop
mov
jle
cs
in
or
aas
cmp
aam
shl
jecxz
inc
aad
jns
and
addr16
in
cltd
mov
ss
jno
inc
movsl
int
jg,pt
pop
xor
push
dec
sti
enter
and
movsb
push
or
xchg
cmp
sub
cli
jns
jae
stos
shll
hlt
push
sbb
push
add
orb
jp
or
insl
das
dec
es
adc
insb
sub
arpl
add
pop
ljmp
mov
cmpl
xor
pop
movsl
pop
inc
lahf
pop
ret
push
sti
loop
fnstenv
loopne
pop
call
sahf
out
push
xchg
inc
scas
adc
pop
cmc
mov
pusha
repnz
xor
stos
sub
ror
mov
imul
xchg
pop
pop
aaa
jae
xchg
jae
lock
stc
lods
out
pop
inc
lea
inc
and
fidivs
and
mov
lea
jmp
int
dec
fdivs
cmp
pop
arpl
mov
push
aam
or
xchg
bound
sbb
test
cmc
pop
push
enter
cmp
test
adc
xchg
dec
test
fs
daa
lret
in
jge
loopne
aaa
dec
push
push
in
sbb
clc
js
shll
push
add
or
dec
inc
lea
clc
or
xor
jl
cmpsb
mov
dec
dec
pusha
out
xchg
sbb
imul
enter
adc
jb
rcr
pop
add
loope
cmp
push
mov
dec
fidivrl
push
das
ret
push
and
lea
pushf
lahf
testl
sub
lret
repnz
cs
push
jecxz
divb
cmpsb
sbb
pushf
in
mov
out
mov
push
inc
lods
and
iret
rcr
loopne
ja
sub
jge
mov
sub
lea
jae
push
call
pop
in
popa
pop
cmp
insl
shl
mov
mov
bnd
orb
sbb
fs
sar
xor
dec
aad
das
fists
cli
fs
push
test
cmp
jl
cmp
clc
leave
stos
rolb
dec
not
sub
out
movsb
in
es
jo
hlt
and
add
addb
adc
inc
lea
jp
push
sub
ret
jle
adc
adc
pusha
in
add
mov
jo
push
push
testb
mov
je
outsb
mov
lret
imul
stc
push
xchg
xchg
jle
sti
rolb
xchg
xor
imull
xchg
jl
pop
shlb
xor
push
shlb
xchg
fst
and
mov
xchg
movsl
in
sbb
xor
into
mov
ds
sbb
and
ss
pop
stos
cld
or
adc
mov
gs
out
stos
or
test
in
push
and
ret
sub
cs
cli
fldenv
xor
jge
cmp
mov
mov
sti
out
lods
mov
orl
push
test
mov
arpl
dec
stc
fistps
fs
lcall
or
adc
mov
inc
xor
lea
and
cmp
mov
mov
push
cmp
fnstenv
roll
cli
mov
loopne
push
pop
push
dec
push
ret
jno
std
ljmp
cwtl
inc
or
mov
push
in
test
hlt
push
aad
push
fistpl
cmpl
mov
inc
les
dec
mov
xchg
test
xor
movsb
test
loop
lret
push
adc
iret
pop
or
pop
sbb
cmp
notl
out
sbb
adc
mov
inc
lea
push
jae
pop
scas
add
adcl
push
imull
out
not
aad
sbb
fisubrs
inc
test
in
mov
jae
push
mov
icebp
pop
dec
lcall
dec
mov
lods
add
aaa
mov
fisubrs
xchg
ret
scas
shlb
sub
imul
orb
daa
add
in
fwait
mov
inc
lea
pushf
xchg
repz
lds
xor
pop
lea
inc
push
xchg
sbb
push
or
in
aas
jno
pop
mov
lea
mov
inc
or
push
jmp
pop
or
or
gs
push
push
enter
imul
ja
jmp
xchg
jns
push
xor
aas
xchg
mov
mov
push
cmp
imul
test
push
aas
pop
xchg
xchg
and
clc
jecxz
mov
jecxz
lods
jnp
push
icebp
adc
sub
je
cltd
les
aas
sarl
lds
cmp
pop
popf
repz
mov
mov
insl
fcoml
fs
test
dec
aad
adc
cmpl
mov
lea
sbb
adc
bound
pushf
xchg
out
fisubrl
addr16
hlt
cld
arpl
add
mov
aas
fistpl
lret
inc
ja
pop
out
into
and
ja
rolb
sahf
lds
xchg
mov
mov
mov
add
lret
inc
test
sar
mov
mov
int3
jne
sbb
push
dec
pop
cld
imul
das
scas
mov
xor
movsb
or
mov
ds
mov
jo
adc
sub
imulb
sbb
dec
cmc
jge
push
pop
bound
adc
inc
lea
jae
stos
or
dec
mov
rolb
pop
fisubrl
mov
mov
mov
or
mov
push
movsl
cmp
lods
enter
icebp
dec
int
fwait
xchg
mov
pop
in
ror
xor
add
aam
sbb
cmp
inc
lea
repz
xorl
popa
jl
stos
outsl
push
sub
mov
mov
xchg
repnz
movhps
sub
adc
cmp
out
mov
icebp
rorl
ja
popa
cmpsl
out
lea
inc
push
xchg
jo
popa
xor
dec
add
addr16
fists
jmp
cmp
mov
push
lea
push
into
aad
out
push
add
mov
pop
and
jle
mov
add
out
popf
call
dec
add
test
movsb
mov
push
out
xchg
incl
xor
pushf
sbb
cmp
in
lods
in
outsl
xor
inc
xor
fmuls
insb
add
inc
lea
push
pop
out
inc
cld
pop
pop
push
out
loop
std
xchg
shlb
xor
test
mov
call
mov
int
jge
outsb
nop
ret
stc
sub
jg
movsl
aas
add
mov
out
je
mov
xchg
push
imul
js
pushf
aam
lds
iret
dec
xor
sbb
bound
je
lret
outsl
dec
shlb
pop
shlb
mov
push
dec
jge
les
lods
jmp
add
cmp
jecxz
test
mov
xor
push
in
cmp
add
sbb
lods
or
sub
push
repz
lods
outsb
sbb
out
jge
inc
and
stos
out
adc
test
mov
arpl
mov
leave
or
js
push
dec
sub
std
adc
sahf
pop
or
mov
add
push
mov
int3
outsb
mov
mov
imul
mov
push
dec
shrb
adc
scas
insb
mov
jne
adc
pusha
loope
popf
push
jbe
lods
xlat
and
push
repnz
pop
mov
dec
imul
adc
xchg
and
nop
stc
fbstp
pop
pop
popa
cmpsb
xchg
sub
or
ds
aad
inc
in
das
inc
or
pushf
in
inc
push
mov
sbb
idiv
push
out
push
popf
clc
aas
inc
lea
movl
push
push
pushf
push
lea
jmp
aam
enter
out
inc
gs
js,pn
mov
jbe
callw
mov
xor
sub
out
add
jge
stc
aaa
scas
jl
dec
jge
pop
mov
jae
jb
pop
pop
outsb
fdivrl
mov
sbb
cmpsl
mov
jnp
mov
xor
stos
movsl
sbb
inc
lea
repz
insl
aam
lea
movsl
jnp
insl
sub
inc
adc
inc
sti
mov
xor
lods
mov
test
mov
sbb
pop
pop
fwait
cli
pop
iret
jmp
or
lock
imul
fldcw
cmp
sub
testl
push
aaa
pop
adc
stos
sbb
push
add
jecxz
pusha
sub
dec
iret
arpl
stos
cwtl
cs
add
mov
lea
mov
dec
movl
pushf
pushf
lea
jmp
pushf
movl
pusha
movb
mov
movl
pusha
pushf
lea
jmp
fstpt
sar
loopne
sbb
pop
push
cmp
fs
outsl
sub
adcb
adc
test
dec
movsb
jmp
jno
les
iret
leave
sbb
mov
pop
pop
mov
stc
scas
mov
sub
addr16
pop
in
pop
jmp
fisubl
cmc
testl
push
push
ds
adc
imulb
ljmp
sbb
lods
mov
sub
inc
dec
stos
mov
xchg
fmuls
sbb
hlt
sbb
insb
ljmp
in
das
insl
testb
dec
ds
pop
and
add
inc
hlt
scas
leave
mov
ret
int
mov
mov
mov
rolb
mov
loopne
shrl
xchg
lds
jecxz
icebp
mov
icebp
inc
gs
lahf
mov
test
lret
out
shrl
push
pushf
jno
mov
inc
push
mov
cmp
and
not
push
stos
xchg
and
aas
enter
hlt
lahf
js
adc
dec
sbb
and
arpl
div
imull
cmpsl
movsb
addl
rdmsr
loope
sub
fcomps
jb
and
outsl
movswl
pop
adc
jo
and
push
divl
xlat
mov
pop
mov
bound
outsl
rolb
cmc
pop
or
repnz
fisttps
adc
mov
mov
adc
in
cmp
cltd
fdivrl
shl
jecxz
jg
insb
ficoms
popf
test
scas
push
dec
lds
jg
inc
lea
rcrl
repnz
cmp
mov
inc
jne
dec
cli
out
sbb
in
in
aaa
xchg
int
sbb
push
daa
stos
imulb
lea
cli
and
jmp
jmp
pop
sub
sub
add
cmp
cmp
aaa
and
pusha
xchg
lds
xor
jbe
push
ja
or
sub
rorl
fmuls
test
jno
insl
ss
int3
inc
lea
stc
cmp
bound
decb
mov
mov
mov
mov
pavgw
or
push
call
push
scas
push
sti
cli
iret
and
pop
pop
adc
add
inc
rcll
enter
out
push
or
ja
daa
cmp
fsts
mov
mov
dec
lret
pop
daa
push
xor
inc
lea
fld
jbe
test
cld
call
xor
lea
repz
nop
in
je
xchg
adc
add
mov
lret
divb
testb
clc
into
jne
add
ss
fsts
and
fs
call
inc
je
lds
jge
or
aam
repz
xlat
std
scas
int
add
vmread
dec
icebp
push
add
cli
mov
jns
push
ds
stos
mov
ja
cs
and
sbb
sbb
negb
adc
loopne
xorb
inc
cwtl
jl
lcall
stc
dec
lods
xor
mov
xor
mov
jg
std
cmp
push
xchg
xor
push
sub
ds
pop
fs
add
sbb
cmc
push
cwtl
mov
add
mov
add
add
bound
or
out
test
sub
adc
out
jp
xor
pop
pop
push
dec
sub
fwait
clc
out
mov
sbb
cmpb
xor
ret
cmpsb
inc
lea
push
inc
scas
ljmp
pusha
inc
stos
mov
add
mov
scas
mov
lods
mov
popf
arpl
adc
xchg
mov
clc
adc
or
mov
cmp
mov
jp
fnstsw
scas
call
ss
test
es
pop
test
test
sbb
xchg
add
jnp
xlat
adc
scas
negb
add
das
xor
lea
sub
les
lret
inc
lea
ljmp
mov
pop
ljmp
xor
cmc
shl
pushl
xchg
out
ret
mov
mov
sbb
adc
xchg
lods
mov
dec
sarb
loop
cmp
mov
push
adc
sub
test
or
ljmp
pop
arpl
popf
stos
xchg
push
test
push
in
mov
cwtl
out
mov
pusha
rorl
mov
scas
mov
mov
jecxz
es
loope
lea
push
pop
mov
mov
cwtl
popf
fs
fildl
and
mov
jno
mov
repz
sti
test
insl
inc
in
idiv
les
into
daa
sahf
lahf
seta
adc
inc
and
jo
jns
push
mov
subb
jo
fwait
iret
test
and
add
add
ret
pop
rcrl
repnz
dec
jns
std
mov
pop
popa
das
loope
adc
add
jle
inc
and
xchg
clc
test
cwtl
repnz
lea
pop
outsl
push
cwtl
inc
adc
and
lret
lods
lret
xorl
dec
inc
add
mov
xor
out
xor
mov
lea
movsb
pop
xchg
jmp
sti
xchg
dec
or
push
xchg
imul
dec
mov
or
sub
fcmove
leave
insb
mov
test
into
rcr
cmp
arpl
mov
lods
out
mov
push
hlt
call
addr16
fwait
divl
fadds
lahf
enter
cli
mov
js
cmp
cs
cmpsl
leave
scas
push
jle
movsl
sbb
push
push
ud2
pop
sub
fbld
xor
add
lock
clc
stos
mov
iret
inc
dec
mulb
pop
jnp
cld
xchg
aas
mov
lret
cmp
aad
pop
xor
jmp
pop
jmp
mov
xchg
in
rcrb
xor
cmp
mov
fstpt
shll
pop
cwtl
sbb
mov
pop
lods
jecxz
insb
sbb
or
cmp
out
sub
ljmp
test
cld
ret
sahf
jmp
mov
into
jne
adc
divl
adc
inc
lea
mov
nop
scas
rcll
xor
in
cmp
dec
cmp
js
xlat
andb
pop
mov
gs
inc
and
sbb
or
fstl
gs
hlt
addb
pop
test
dec
inc
push
andl
in
cmp
ljmp
inc
adc
mov
mov
insb
iret
stc
mov
pop
push
pop
or
data16
jmp
in
jnp
lea
mov
jae
sahf
lock
mov
mov
mov
jns
jbe
jae
sub
inc
enter
mov
cld
fidivl
shll
inc
jae
in
lret
subps
mov
into
push
mov
xchg
sbb
mov
dec
pop
jnp
xchg
fidivs
lea
jns
add
add
pop
adc
mov
dec
ret
test
fisubs
mov
lds
divl
inc
lea
or
jmp
stc
push
xchg
imul
gs
out
push
test
addr16
cmpsb
add
dec
sbb
lahf
call
pop
js
sub
leave
ja
mov
pop
xchg
insl
lods
dec
pop
fcoms
xor
movsb
int
sub
inc
lea
jge
or
mov
pop
jno
mov
mov
lock
mov
cld
mov
sbb
mov
imul
jo
daa
mov
sbb
dec
popf
push
add
or
std
mov
pop
xchg
mov
jecxz
sbb
or
push
xor
mov
sbb
inc
es
inc
lea
enter
fs
test
and
push
sub
mov
adc
sub
dec
and
loop
mov
xchg
mov
lcall
data16
cmp
xchg
jl
xchg
jp
int
mov
inc
adc
jp
push
push
or
test
fwait
enter
lea
cli
data16
rsqrtps
scas
insb
popa
mov
sub
jle
inc
and
in
jmp
and
sub
stos
jnp
pop
inc
dec
sbb
mov
int
imul
test
test
cli
inc
pavgb
mov
xor
aad
xor
mov
scas
rorb
lock
movsb
mov
xchg
jns
fdivrp
dec
add
scas
adc
mov
xchg
mov
lea
notb
xchg
stos
sbb
std
sbb
jecxz
hlt
sbb
pop
imul
test
in
jecxz
imul
or
loop
or
jne
sbb
fcom
aad
or
jne
hlt
push
add
xchg
mov
enter
and
xchg
jo
fisubrs
gs
movsl
jne
scas
test
xchg
cmp
cmp
inc
cmp
push
push
push
push
in
int
sbb
inc
lea
fadd
mov
jle
add
jmp
movl
jmp
mov
std
jmp
mov
xchg
mov
notb
cwtl
mov
insl
in
add
fwait
mov
sub
call
adc
jmp
mov
repz
int3
push
xor
push
dec
lods
pop
lock
inc
sub
stos
and
imul
jbe
cmc
xor
jnp
inc
subb
add
inc
lea
push
pop
adc
add
lods
jmp
shl
mov
or
outsb
sub
lcall
fidivrl
or
xor
stos
aad
jge
adc
mov
fidivs
js
negb
cmp
jmp
dec
movsb
lds
push
xor
ror
and
mov
xlat
data16
mov
cmp
or
sbb
adc
sbb
mov
out
out
or
jp
dec
stos
fldl
ret
mov
sarl
lea
inc
sub
mov
add
inc
shlb
fnstenv
aaa
mov
jge
xchg
cltd
xor
add
dec
scas
icebp
jp
mov
jl
xchg
lds
mov
aam
popf
jp,pn
mov
movsl
mov
mov
flds
in
orb
ret
pop
lret
dec
xor
lea
sbb
and
inc
and
out
dec
lds
fs
je
push
pusha
lea
jmp
inc
aam
cmpsl
jge
sar
jbe
les
ss
add
cli
mov
pop
pop
push
leave
roll
or
dec
add
movl
cltd
dec
push
and
out
jl
mov
sarl
or
cli
loop
into
inc
pop
mov
jmp
fisttpll
and
jmp
mov
sbb
mov
popf
cmc
sub
shll
je
or
fldcw
ret
jge
inc
cmc
pushf
cmp
fldenv
adc
sbb
repz
xchg
mov
push
cmpsb
leave
scas
pop
jb
andb
lret
sbbb
push
in
sbb
mov
push
shl
push
popf
popa
loope
xchg
and
call
adc
push
loopne
xor
xchg
loopne
inc
lea
daa
and
test
subl
loop
rorl
shll
push
js
cmc
bound
cmp
mov
inc
and
std
cmp
mov
xor
dec
adc
xchg
mull
roll
leave
cld
loope
pop
sbb
xor
sub
pop
je
add
repz
add
xchg
les
aaa
jnp
push
sub
repnz
sub
xchg
subl
test
shlb
pop
dec
lods
inc
pusha
fimull
jb
outsl
sub
mov
push
mov
ret
movsl
ret
jo
cmp
lods
add
pop
jg
out
jecxz
push
icebp
jbe
mov
dec
adc
mov
xchg
rolb
jbe
lea
mov
cmp
sub
jge
sahf
sbb
imul
mov
hlt
loopne
mov
repnz
fisubrs
icebp
mov
mov
mov
dec
push
jmp
fsubrs
fidivs
inc
mov
into
or
sahf
mov
into
lods
xor
pop
add
insb
jo
andb
add
mov
cmp
loopne
xor
mulb
or
add
cld
mov
out
das
or
lods
lock
lds
dec
idivb
mov
iret
mov
lret
out
rcll
mov
add
adc
mov
leave
mov
sbb
mov
mov
sahf
dec
pop
dec
xchg
ret
add
jb
imul
ret
lea
ds
shl
aam
out
gs
out
sahf
out
mov
mov
cmp
fldenv
and
out
pop
cmp
xchg
shrl
pusha
push
push
cwtl
mov
add
or
cwtl
test
pop
dec
adc
inc
lea
add
lcall
push
rorl
xor
mov
in
mov
sbb
pop
jecxz
jnp
mov
mov
hlt
and
jae
jp
push
cmc
ja
mov
or
mov
js
xchg
mov
adc
imul
int
xchg
adc
stc
pop
dec
jl
mov
pop
cmp
mov
scas
mov
fsts
inc
and
push
sahf
stos
sahf
ds
and
psraw
pushf
fisubl
push
int3
pusha
cmc
out
push
insb
cltd
hlt
mov
cmpsb
ror
sub
fcmovb
inc
sbb
rcrb
sub
or
sbb
fldl
insb
push
stos
mov
es
arpl
aam
loope
insl
inc
lea
out
sbb
push
cmpsb
sarb
js
leave
mov
test
pop
cmp
mov
xchg
bound
lea
movsl
xor
dec
popf
and
lret
xor
int
xor
adc
pop
gs
lea
fld
push
jmp
pusha
call
jmp
movl
pushl
push
pushf
push
lea
jmp
cmpsl
dec
out
inc
or
sub
dec
and
in
or
jno,pn
and
jmp
and
mov
les
in
hlt
push
dec
and
mov
leave
sbb
lret
arpl
aas
pop
inc
add
and
pop
inc
jno
std
out
inc
push
adc
subl
and
push
dec
idivl
sbb
lea
mov
cmovne
sub
movsl
xchg
mov
stc
xor
push
inc
and
sbb
mov
fwait
sarb
mov
test
cwtl
inc
push
divb
mov
fucom
inc
daa
jle
add
push
and
pusha
lret
cs
enter
popf
popa
and
scas
xchg
test
jl
mov
or
xor
sbb
push
pop
xchg
mov
push
xor
or
mov
fadd
stos
and
imul
fmul
js
fucom
and
inc
jmp
xchg
or
call
aam
rcrl
stc
jge
xor
mov
mov
fldl
mull
outsl
sub
inc
push
jl
inc
lea
mov
fildll
jmp
lock
and
cltd
shll
push
jo
rcrl
cli
ds
stc
sbb
cmp
mov
xor
sbb
outsb
mov
add
jmp
sbb
mov
fidivrs
lret
cwtl
mov
dec
insb
inc
add
cwtl
sarb
push
inc
and
fdivr
gs
mov
pop
fidivs
sbb
jg
mov
dec
and
movsl
aas
test
push
mov
ret
mov
sbb
mov
jmp
dec
sub
test
cmp
inc
mov
nop
mov
push
or
into
int
cs
sub
clc
xchg
clc
mov
push
fmull
lea
jl
mov
or
or
mov
pop
cmp
pop
sbb
leave
andl
or
into
push
mov
ljmp
cs
mov
pop
ss
push
or
fs
xchg
repnz
repz
xor
sub
pop
adcb
mov
jp
fwait
dec
inc
lea
or
or
adc
pushl
movl
push
pushf
lea
jmp
popa
jb
pop
mov
ja
and
xchg
xor
push
push
mov
int3
or
aad
js
insb
and
lock
cmp
xor
bound
cmpsb
call
arpl
loope
out
enter
sub
testb
cmp
inc
lea
mov
fcompl
fisttpll
lods
mov
aam
jo
outsl
or
jmp
sub
lods
xor
inc
pop
clc
loope
xor
mov
xchg
test
sti
ror
xor
or
in
adc
jo
mov
nop
or
out
mov
lret
enter
mov
jno
popa
cmp
mov
out
int
xchg
jae
int3
inc
popa
jmp
mov
scas
aad
cmp
push
xor
lret
popf
inc
or
addr16
mov
dec
push
cmp
or
jmp
lea
insb
lock
pop
dec
xor
lcall
popa
div
int3
daa
push
ret
sahf
and
jecxz
fstpt
add
mov
dec
xchg
aam
insl
aad
imul
cld
mov
cmp
loop
jnp
iret
cltd
lahf
or
jle
je
cmp
jmp
xlat
into
das
repnz
icebp
sbbl
scas
aam
push
rolb
addl
popa
pusha
push
pushl
push
lea
jmp
pushf
movb
movl
mov
lea
jmp
bound
and
rcrb
icebp
lea
push
les
jle
pusha
mov
or
cs
out
mov
movsb
xchg
testl
pop
cmp
push
mov
cld
sbb
into
mov
add
lret
mov
gs
lds
and
loope
pop
std
mov
xor
mov
js
incb
push
xorl
jmp
in
lods
lods
pop
xor
or
mov
cmp
shll
clc
inc
and
dec
or
mov
adc
into
out
jo
mov
fdivrs
push
or
pop
cmp
int3
cmp
gs
fisubrl
xchg
add
ss
dec
push
gs
ret
mov
into
or
aam
je
and
rclb
int
cmpb
cmp
addr16
jl
inc
lea
mov
pop
add
movl
pushf
movw
push
pushf
lea
jmp
jmp
mov
ja
xchg
cmp
and
push
xor
scas
jecxz
frstor
jno
xchg
popa
test
in
sub
cwtl
adc
jl
mov
mov
push
js
js
repz
inc
inc
mov
sbbl
jo
jb
bound
push
repnz
xchg
mov
addr16
pop
jl
fadd
push
jmp
mov
inc
lea
addr16
push
movl
pusha
lea
jmp
xchg
insb
xor
cmp
adc
inc
sub
leave
outsl
cmp
imul
adc
adc
sarb
jl
xorb
adc
cmp
lcall
pop
mov
divb
or
or
fidivl
lret
pushf
out
push
or
mov
mov
xchg
rclb
dec
push
xorl
dec
ds
scas
ss
pop
ss
mov
add
pop
in
mov
mov
add
mov
xor
xor
mov
dec
dec
pop
out
push
cli
sub
aam
or
inc
movl
push
cmp
mov
dec
outsb
leave
shl
push
sti
sub
daa
scas
out
add
cwtl
hlt
mov
sbb
lea
insb
pop
cld
jmp
pusha
call
data16
adc
incb
repnz
xchg
stc
mov
pop
or
fdivrl
push
or
mov
or
fmuls
jno
or
repnz
xchg
mov
repnz
dec
fistl
mov
pusha
xor
outsb
jno
and
mov
stos
mov
gs
icebp
mov
mov
int3
repz
mov
loope
adc
adc
fnstenv
push
add
das
cmp
xlat
add
cld
fistl
dec
cmp
pop
or
fists
pop
mov
ja
pop
and
test
push
repnz
cli
dec
xor
push
add
inc
lea
outsb
scas
pop
and
iret
mov
jns
and
jno
inc
add
mov
mov
and
movsl
xchg
add
js
mov
addr16
mov
cli
pop
cmp
test
pushf
and
dec
or
loope
rcll
add
inc
and
and
lret
jbe
push
dec
imul
loop
call
push
jbe
dec
outsl
add
inc
inc
pop
mov
popf
sub
fwait
push
ja
jl
sub
subl
xchg
aas
iret
jo
les
jo
cld
stos
rcrl
ss
ljmp
es
push
mov
cmp
xchg
orb
push
adc
test
jp
xchg
lock
dec
mov
lea
int
cmp
adc
shrb
leave
mov
pop
xor
xor
popa
jp
jb
dec
push
and
dec
pusha
xchg
iret
lret
lret
shrb
aas
dec
xchg
rolb
push
pop
pop
mov
or
mov
scas
mov
and
jp
ffree
inc
aaa
push
pop
dec
sub
cltd
iret
roll
rcll
clc
js
test
sub
mov
jmp
xchg
mov
pop
jmp
shrl
int
es
test
and
std
fistpl
add
imul
xchg
push
xchg
and
imul
lea
hlt
push
scas
pop
cmp
push
or
pop
in
std
adc
dec
or
or
sub
push
lods
cmp
les
shrb
enter
sub
gs
adc
popa
aam
fsubs
in
and
stos
into
and
push
xchg
icebp
scas
ljmp
inc
lea
dec
adc
inc
test
xchg
mov
lret
mov
aad
xchg
mov
mov
add
stc
loope
and
bsf
je
cmpsb
in
xchg
push
ret
call
cltd
popa
out
inc
mov
pushf
int
inc
mov
divb
pusha
cmpsb
rolb
jge
das
cld
pop
pop
jl
push
or
mov
js
dec
xchg
sub
jae
mov
imul
pop
fcmove
js
mov
inc
inc
andl
dec
xchg
mov
and
int3
mov
cli
mov
enter
add
push
lret
jp
jmp
mov
stos
inc
lea
sbb
enter
mov
push
or
jbe
mov
pop
and
inc
sub
lret
into
mov
push
daa
mov
inc
mov
dec
sbb
mov
in
imul
and
pushw
xchg
jb
popf
jmp
movsb
inc
ret
call
sarl
ret
jb
jno
rcr
int
and
push
in
mov
xor
outsb
std
outsb
mov
mov
cwtl
mov
iret
repnz
cmpsb
jnp
adc
fiaddl
inc
push
fmul
pop
mull
lods
in
add
mov
sbb
fidivs
insb
xchg
add
call
les
sub
addr16
jecxz
jge
and
push
leave
lea
adc
sarl
mov
jno
mov
cmpsb
cld
stos
cld
adc
add
lret
movsb
test
jb
js
test
adc
mov
xor
sbb
std
push
push
pop
jnp
mov
xchg
movl
and
daa
jmp
in
mulb
push
ss
cmpsl
jmp
mov
pushf
mov
out
pop
pop
sbb
xchg
sub
leave
xchg
and
push
jae
adc
inc
pop
cwtl
mov
add
add
pusha
leave
inc
mov
bound
mov
or
bound
sarl
repnz
xchg
mov
inc
inc
cwtl
pop
sbb
rcl
repz
fmuls
test
pop
outsb
or
adc
je
lock
loopne
sub
inc
mov
mov
push
mov
inc
mov
mov
push
xchg
inc
es
pushf
pushf
mov
lea
jmp
push
mov
movl
call
cmpsl
cwtl
push
inc
test
lret
mov
inc
ret
lahf
rorl
sbb
push
dec
int
add
jbe
fwait
push
push
or
fst
xor
and
enter
add
pushf
mov
mov
xchg
cmovg
fcoml
mov
jo
xchg
sub
push
imul
clc
pop
inc
mov
pop
push
sub
push
negb
or
ds
xor
mov
inc
movsl
xchg
add
fwait
cli
dec
cmp
add
cmp
inc
inc
pop
ss
enter
add
mov
sub
scas
shlb
arpl
ja
pop
ljmp
addl
dec
xchg
jae
sub
or
into
in
outsl
xor
sbb
mov
cmp
sahf
jmp
push
testl
push
sub
pop
or
inc
repz
loop
push
push
ja
sbb
adc
sarb
jno
popl
jge
test
outsl
fisubs
out
add
inc
mov
loopne
mov
mov
inc
in
sbb
push
mov
gs
mov
and
lret
inc
loop
sahf
movsl
sti
ja
mov
sbbl
jg
dec
daa
bound
push
sub
clc
mov
aaa
push
add
pop
fs
adcb
adc
pop
xchg
inc
sbb
adc
xor
call
inc
stos
popf
sbb
and
pop
cltd
dec
popa
pop
jne
cld
mov
daa
xlat
aas
xchg
cmp
out
arpl
cwtl
push
xchg
das
fs
mov
and
dec
and
jl
adc
int
in
dec
stos
out
loop
mov
and
mov
xor
or
xchg
or
or
out
nop
rorl
mov
dec
dec
inc
mov
sbb
inc
pusha
adc
loopne
ljmp
xor
xor
pop
adc
cs
mov
cwtl
les
movl
push
movl
pushf
push
pushf
pushl
lea
jmp
push
pusha
jmp
jle
xlat
inc
scas
lret
int3
int3
sbb
jg
pop
or
mov
sbb
aam
cmp
sbb
les
inc
test
cs
enter
xor
dec
in
push
adc
fs
loope
aad
loopne
aaa
adc
repnz
mov
movsb
movsl
mov
mov
xor
cld
mov
out
dec
es
das
sub
push
orb
sbb
ss
lock
mov
out
jno
jg
or
dec
in
lcall
dec
dec
iret
popa
repnz
int3
xor
pop
push
xchg
pusha
sti
je
mov
xchg
popa
or
add
fisubs
or
mov
cmp
add
dec
xor
xchg
je
xor
push
xor
aam
adc
or
std
mov
movsb
ret
insl
inc
mov
lcall
movl
pushf
lea
jmp
adc
inc
cmc
and
cltd
cmp
xor
push
cmp
in
inc
push
push
pushf
rclb
jne
push
dec
push
and
sbb
push
jo
jnp
test
lcall
or
jno
push
outsl
jnp
jmp
aaa
xchg
jnp
sub
loopne
js
jmp
lahf
test
cli
cmp
ret
test
pop
and
mov
mov
push
jns
mov
cmp
sub
gs
ret
jp
lret
addb
ss
popa
popf
fs
cmp
jle
adc
movsb
loop
lret
imul
ds
das
arpl
mov
xchg
outsb
xchg
adc
icebp
jno
xor
add
sahf
jbe,pt
aaa
icebp
dec
cmpsb
in
xchg
cmpsb
cmc
mov
or
xchg
lahf
bnd
ror
and
clc
das
push
cltd
and
orl
movsl
pop
clc
das
or
cmp
cltd
push
push
mov
loopne
or
adc
test
js
xor
lahf
cmc
adc
out
fstp
cli
out
pop
out
in
insb
pop
adc
ds
xor
push
and
sbb
mov
int
ror
push
sub
mov
mov
mov
cmp
cmc
push
aad
cmp
mov
xor
push
push
sbb
or
adc
shll
ja
add
pop
fiadds
stos
bt
jnp
dec
das
xchg
sti
xor
test
rcll
push
inc
nop
out
sbb
js
lahf
cmp
stos
mov
xor
call
jle
cltd
lods
mov
movsb
push
pop
mov
insb
add
pop
pop
dec
int3
mov
int3
in
subl
repz
cld
mov
and
in
nop
repz
cwtl
inc
mov
flds
mov
add
loop
cli
sub
mov
stos
sub
imulb
fwait
lods
fadd
inc
loope
gs
addr16
jl
mov
repnz
or
out
add
add
inc
adc
cltd
and
adc
and
adc
fldcw
fisubs
adc
inc
mov
jns
xchg
ret
in
xor
test
xchg
imul
scas
mov
mov
mov
mov
je
stos
jl
add
and
or
cs
repz
test
cs
scas
das
add
lahf
std
nop
icebp
out
xchg
mov
loope
cli
xchg
and
or
lods
mov
pushf
pop
scas
xor
cmpsb
sbb
inc
mov
adc
push
inc
inc
sub
aaa
pop
jnp
data16
or
xor
sarb
lock
daa
hlt
das
arpl
daa
inc
adc
imul
sbb
pop
nop
in
sbb
loop
out
hlt
pop
js
stc
inc
add
xchg
lods
mov
jne
rorl
outsl
lahf
add
out
rcrb
mov
cmpsl
movsl
xchg
pusha
pushl
movl
pushl
pusha
lea
jmp
pushf
movl
movb
pushl
lea
jmp
xorb
pop
mov
and
xchg
outsb
out
repz
cmp
push
dec
bndstx
inc
jge
iret
mov
mov
inc
push
addr16
adc
mov
inc
out
scas
ljmp
adc
mov
test
dec
pop
adc
shll
imul
adc
adc
xor
test
mov
mov
mov
sbb
icebp
dec
jge
mulb
mov
adc
incl
test
mov
mov
jge
fcompl
push
and
hlt
jle
inc
mov
mov
xor
jbe
mov
add
fnstcw
xor
add
mov
out
mov
ss
push
add
pop
or
adc
jge
mov
aaa
outsb
add
lds
mov
int3
jmp
inc
movl
mov
int3
ret
ljmp
jl
dec
xor
mov
sahf
testl
xchg
not
xor
mov
or
pop
mov
xor
mull
sbbl
mov
lock
cmp
jbe
mov
fisubrl
leave
data16
js
adc
sub
loopne
shlb
ret
pushf
in
loope
add
cmc
mov
insl
pop
dec
xor
inc
mov
mov
push
cmpsb
negl
lea
lds
push
and
mov
jo
xchg
out
mov
xchg
xlat
fs
loope
fwait
arpl
pop
add
sahf
xchg
push
std
mov
sbb
push
es
mov
gs
shll
fucompp
pop
add
in
divb
push
aaa
inc
dec
jns
sub
pop
rcll
mov
inc
sub
scas
leave
xlat
jle
lret
jnp
pop
xchg
cmove
jo
mov
xchg
mov
cmpsl
int3
popf
fstps
jp
push
cmp
inc
mov
lods
faddp
sbbb
jmp
fmull
lahf
int
ss
les
push
jnp
and
iret
jo
mov
pop
and
scas
adc
sbbl
jns
push
testl
pop
xor
imul
add
jmp
test
testb
sub
sahf
popa
xor
dec
movsb
inc
mov
movsl
xchg
jb
sbb
icebp
pop
call
mov
and
dec
push
and
or
sbb
imulb
int3
rclb
leave
jo
pop
sbb
push
insb
test
add
cmp
xor
arpl
xlat
add
enter
icebp
dec
mov
pop
icebp
sub
xor
pop
out
mov
out
mov
mov
cmc
iret
std
loope
mov
push
xchg
sbb
push
and
lret
xchg
testb
dec
xor
or
mov
repz
nopl
and
test
repnz
push
mov
rcrl
jmp
jmp
out
in
pushf
movsl
inc
mov
sbb
adc
or
or
out
or
push
xor
push
and
addl
es
inc
adcl
xchg
pop
sub
pop
push
add
and
les
xchg
fmuls
fcomps
and
jb
push
jo
add
pop
lcall
and
jle
lahf
test
clc
mov
movsl
aad
mov
imull
jbe
fdiv
lcall
and
add
cltd
pop
adc
dec
inc
jae
into
pusha
xor
mov
cmp
lret
and
jle
sbb
xchg
push
fwait
and
cmp
das
cmp
cmc
andb
cmp
sub
in
shr
stos
out
jl
add
movsb
xchg
daa
adc
js
push
cmp
inc
mov
mov
dec
lds
addb
aad
add
jmp
dec
mov
xor
push
fwait
les
inc
mov
or
cs
das
shl
cli
dec
mov
mov
repz
lret
dec
sarl
add
movsb
ror
jo
stc
lock
fs
rcrb
or
jb
jg
mov
repz
mov
nop
scas
sub
loopne
jo
add
cmp
das
lcall
cmp
dec
outsl
in
push
cltd
stos
push
pop
inc
lds
dec
adc
xor
dec
cmc
mov
popf
lret
mov
in
lds
daa
jne
xchg
mov
pop
inc
mov
sbb
ret
pushf
movl
call
sub
xchg
adc
and
xchg
inc
ds
and
ss
pop
je
mov
lcall
int
data16
pusha
cmp
mov
jp
out
jae
cmpsl
mov
xchg
push
add
es
lods
push
xor
ret
orb
pop
in
dec
adc
call
rcrl
inc
mov
in
jg
movl
jmp
out
jne
hlt
loope
aas
add
das
push
loop
icebp
dec
push
movsb
aad
push
repz
xchg
ss
adc
xor
mov
jns
mov
test
movsl
sbb
pop
sub
adc
ljmp
leave
inc
movsl
push
pop
mov
pop
notb
xchg
mov
les
mov
hlt
mov
or
rcr
loop
sub
loopne
loop
push
lcall
fwait
sub
pop
mov
shll
xor
mov
mov
mov
mov
jbe
rorl
xchg
fdivl
xor
test
sub
test
ret
fstl
dec
jno
pop
mov
jae
push
hlt
jp
and
jno
aaa
fdivs
mov
push
shll
sbb
cmp
push
lds
out
movsb
push
add
mov
pop
or
jb
mov
loop
xchg
aam
pop
pop
test
dec
mov
dec
push
aad
mov
in
lods
xchg
inc
mov
in
ss
mov
and
mov
out
enter
shll
js
test
data16
addl
sbb
inc
add
jmp
mov
ficomps
aas
jne
ja
inc
pop
push
pop
adc
mov
aam
imul
push
jmp
cmp
repnz
jmp
lock
call
or
out
lock
pusha
pushf
pushl
lea
jmp
push
movl
mov
pusha
pushl
lea
jmp
lea
mov
push
mov
lcall
es
mov
mov
bound
add
jo
repz
push
mov
mov
fwait
mov
andb
jle
cs
cld
mov
out
pushf
dec
cmpsb
adc
adc
sub
fadds
cmp
jle
push
lret
or
cld
cmp
add
dec
or
pop
int3
mov
jl
pop
sub
mov
pop
xorb
jp
popa
daa
and
sub
aad
and
pop
pop
mov
orl
test
inc
cmp
cmp
test
add
aaa
outsb
ss
inc
cmp
cltd
sti
adc
icebp
push
push
in
movl
pusha
movl
pushf
push
mov
lea
jmp
and
lea
xchg
out
aaa
dec
cmp
jbe
lods
lret
addr16
cmp
stos
inc
faddp
pop
es
jbe
shr
leave
pop
int3
xchg
push
dec
cmp
push
mov
pushf
xorl
adc
mov
pop
out
cmc
mov
sub
je
data16
call
ret
jo
xchg
pop
fiaddl
ljmp
je
outsb
notl
cltd
sti
test
cld
mov
pop
cld
mov
int
jecxz
arpl
es
aaa
fcomps
ja
rclb
mov
enter
pop
pushf
adc
je
mov
stc
inc
mov
or
jmp
ljmp
outsb
dec
call
cmpsb
add
push
jno
inc
add
push
daa
test
cltd
adcb
into
dec
sbb
test
push
jb
mov
sahf
pop
lods
adc
push
dec
loop
enter
xor
dec
loopne
imul
into
aas
mov
mov
aam
mov
mov
popa
jnp
fisttpl
into
pushf
inc
sub
popf
fisttps
inc
mov
je
je
or
cmp
pop
aaa
ja
lods
rcrl
dec
cmp
out
repnz
and
pusha
jbe
cmpl
and
fisubrs
xor
xchg
loope
jg
arpl
fs
out
mov
nop
mov
sti
cmp
and
sub
sbb
icebp
nop
adc
mov
dec
jnp
xor
aam
data16
fwait
mov
es
push
es
fs
mov
into
cmp
dec
int
aaa
push
aaa
insb
mov
test
cltd
dec
movsl
popa
jp
shlb
scas
dec
jge
ficoms
mov
nop
lret
lahf
fsubl
cmp
inc
mov
mov
push
mov
mov
mov
jb
movsb
ss
sbb
mov
mov
add
mov
cmp
dec
movsb
scas
dec
push
orb
mov
sar
iret
mov
rorb
rolb
xchg
je
sbb
mov
popa
jg
lahf
xor
jl
je
xchg
lcall
mov
sbbb
mov
cmp
adc
and
in
xchg
call
enter
mov
mov
push
dec
sbb
lock
sub
adc
push
adc
mov
push
cmp
sti
test
xor
and
fildl
mov
cld
scas
adc
sbb
jbe
xchg
jae
daa
scas
sbb
add
xchg
mov
push
sbb
sarl
insb
mov
pusha
mov
call
sbb
mov
lret
sub
or
mov
mov
je
sbb
xor
and
outsl
imul
sbb
or
pushf
push
outsl
out
out
sub
xchg
jne
sbb
xor
mov
and
fwait
rorl
flds
in
fs
leave
test
add
loop
lock
cmp
mov
sbb
imul
pushf
ficoms
push
shlb
or
mov
xchg
jb
adc
mov
hlt
xchg
adc
lahf
es
cmp
pop
adc
or
adc
outsb
movsl
jl
sbb
or
mov
fistl
outsl
lods
cmp
mov
sahf
rcll
mov
sub
jg
add
shlb
cmpsb
jbe
int3
stc
mov
cmp
into
loopne
test
inc
mov
pop
lds
in
dec
and
pop
mov
cmpsl
fwait
or
fs
cld
stos
inc
xchg
mov
xor
lock
add
pop
popf
xchg
xchg
xor
ret
sub
leave
lahf
lret
mov
dec
xor
push
ss
add
sub
adc
inc
push
cmp
shl
in
inc
sbb
jbe
dec
mov
inc
scas
cltd
fstps
and
mov
in
pop
in
insb
mov
mov
xchg
mov
sbb
jb
xchg
adc
xor
cld
jecxz
stos
adc
mov
xchg
cmp
ja
leave
test
inc
ljmp
lds
xchg
fiadds
iretw
clc
mov
mov
or
dec
jg
mov
sub
repnz
mov
inc
mov
sbb
xchg
fistl
aas
dec
outsb
mov
and
fwait
out
lahf
jecxz
add
ror
rclb
xor
js
or
jl
mov
xchg
mov
movsb
push
mov
in
testl
cmp
mov
shll
push
pop
loope
add
icebp
mov
xchg
fidivs
cmp
std
push
sbb
pop
or
pop
push
rcll
or
push
jbe
push
mov
cld
inc
fs
inc
pop
pop
jge
inc
das
test
and
ds
sub
inc
mov
mov
dec
mov
sub
or
cwtl
loop
xor
daa
pop
xor
adc
hlt
popa
clc
test
xor
lcall
repz
cld
enter
lock
test
aas
paddb
ficompl
xchg
push
cmpsl
sbb
pushf
mov
mov
pushf
mov
jmp
xchg
mov
add
mov
dec
cmpb
out
std
mov
out
flds
mov
cld
call
in
fcomps
shrb
lret
ja
push
dec
cli
xor
cmpsb
sub
mov
xchg
fnsave
lcall
stos
dec
pop
jecxz
cld
enter
aas
enter
sub
int3
clc
jge
add
jmp
push
pop
and
jmp
out
test
mov
mov
and
lcall
xchg
cli
cmc
push
add
ret
cmpsb
jno
inc
or
mov
ret
imul
aad
fcoms
cld
loop
mov
pop
sub
jo
adc
leave
mov
jmp
jb
mov
enter
cmpsb
es
clc
int
lahf
jbe
orb
xchg
push
mov
repz
popa
lret
cld
outsl
jnp
ss
mov
leave
scas
xchg
xlat
inc
mov
and
sub
nop
aad
sarb
xor
dec
pop
fbstp
or
pop
jmp
lret
dec
and
push
fldt
xchg
lods
inc
dec
jecxz
fdiv
fbstp
adc
orb
shll
into
test
xchg
mov
in
adc
incl
pop
lea
xor
xor
jne
add
jmp
cmpsb
je
ror
adc
push
aaa
dec
push
imul
inc
aaa
adc
popf
push
mov
in
sti
mov
out
jmp
lret
mov
push
mov
imul
adc
pusha
out
push
sti
lret
out
daa
or
mov
sbb
fmull
insl
add
pop
mov
mov
outsb
test
out
enter
jmp
cmp
push
cmp
ret
mov
or
push
xchg
sarb
movaps
arpl
add
out
push
cli
dec
sti
mov
das
dec
sub
dec
push
repnz
xor
movaps
insl
sub
jp
cmp
inc
adc
test
lahf
mov
mov
cmp
push
cmp
shll
sahf
shrb
inc
int
fiadds
mov
xchg
xor
das
xor
pop
shlb
xlat
test
dec
adc
popa
sti
ret
repnz
test
ror
mov
xor
sub
outsb
or
inc
mov
popa
arpl
sub
test
jg
lea
out
mov
mov
scas
mov
mov
lret
or
adc
push
dec
in
mov
adc
insl
clc
cmp
ror
fs
xchg
int3
jp
gs
mov
fwait
out
mov
jge
mov
addb
pop
cli
mov
mov
into
mov
pop
js
mov
add
dec
push
imul
mov
push
add
mov
test
cwtl
repz
push
jne
or
movsl
lods
mov
fnstcw
fidivrl
cmp
sbb
push
gs
and
mov
jmp
xchg
mov
bound
lock
xchg
inc
mov
scas
mov
loop
jb
ror
lsl
dec
sbb
arpl
jne
icebp
out
mov
push
stos
aas
test
std
mov
in
jge
cltd
and
mov
jg
xchg
pop
mov
cmpb
lcall
xchg
int
clc
xchg
std
loope
xchg
adc
cmpsl
inc
fadd
jecxz
inc
ljmp
push
and
lock
pop
movsl
dec
adc
jmp
push
pop
sbb
ret
push
lret
cmc
in
mov
ret
stc
mov
shl
jp
lret
push
sbb
inc
mov
cmp
and
mov
add
lods
and
mov
lahf
shlb
jns
test
mov
test
and
adc
daa
sub
cli
mov
cmpsl
sbb
sub
loope
scas
out
pop
lods
popf
subb
mov
mov
in
mov
gs
inc
and
jp
xchg
fs
jmp
mov
aad
dec
jmp
xor
push
inc
fisttpll
movsb
adc
lea
sti
or
or
cmc
out
test
pop
mov
sbbb
sbb
inc
lret
lods
repnz
faddp
gs
dec
ret
xor
add
mov
xor
adc
push
ljmp
mov
dec
push
lds
inc
and
push
dec
and
jmp
movl
pushf
mov
movl
pushl
mov
movb
lea
jmp
sub
mov
leave
push
aaa
push
cmp
rcll
mov
mov
inc
test
adc
lcall
rclb
add
push
lret
xor
adc
addr16
jb
push
in
add
pop
scas
mov
add
insl
mov
xchg
xor
add
inc
mov
outsb
pushf
cwtl
movl
pusha
movb
mov
movl
movw
mov
pusha
pushf
lea
jmp
pusha
push
jmp
stc
xor
push
xchg
lcall
add
mov
fbstp
inc
or
jg
mov
out
sbb
or
cs
nop
adc
das
in
xor
cmpsl
dec
test
dec
in
jne
or
add
mov
imulb
jg
out
rolb
mov
push
sbb
and
xor
push
std
loope
adc
mov
adc
cmovo
pop
and
and
xchg
mov
cld
dec
repz
rcll
std
sbb
into
sbb
cwtl
sub
bound
adc
insb
inc
ja
adc
mov
mov
pop
push
xlat
mov
push
inc
loop
xlat
int
incl
sub
xchg
jmp
push
lea
jmp
test
dec
mov
pushf
sbb
nop
pop
add
movsb
aas
jg
pop
daa
push
mov
in
push
dec
adc
xchg
shl
je
xchg
es
dec
jecxz
aas
fsubs
movsl
cwtl
xor
mov
mov
ja
dec
push
sbb
enter
sub
test
sbbl
fstpl
mov
mov
mov
js
imul
leave
lods
out
notb
cwtl
cmpsb
lcall
sbb
pusha
pop
mov
js
ljmp
popf
inc
stos
adc
xchg
iret
mov
mov
cmpsl
adc
lea
jae
or
aaa
pop
or
xor
cmp
mov
dec
and
xor
sar
cmp
clc
mov
mov
lret
xchg
fs
pushf
movl
push
pushf
call
push
call
pusha
test
aaa
jmp
sub
arpl
mov
mov
jns
pop
cld
push
jmp
mov
orb
idivb
sub
fiaddl
aas
mov
out
adc
jge
imul
sub
mov
cld
jl
addr16
loopne
xor
cwtl
pop
cmp
mov
and
add
inc
mov
stos
inc
sarl
jle
ss
xor
in
push
mov
jns
aad
pop
mov
mov
jno
sub
in
sub
add
aam
add
xchg
scas
ss
sub
test
jmp
mov
aaa
push
pop
xchg
popa
jecxz
aad
lock
cli
insl
ds
dec
mov
cmpl
adc
jbe,pt
mov
sub
mov
xor
push
dec
cmpsl
out
adcb
sub
cmp
or
in
in
les
mov
movsl
mov
arpl
in
sbb
enter
adc
jp
decl
xor
inc
repz
pop
mov
js
clc
mov
inc
jecxz
and
adc
mov
dec
jns
dec
xor
dec
add
jnp
mov
lea
loop
rol
and
xor
jno
lods
adc
jecxz
pusha
inc
mov
sbb
and
aas
mov
pushf
lea
jmp
pusha
pushf
movl
movb
lea
jmp
adcl
inc
dec
cmp
push
shll
out
push
cmp
sub
cmp
fimuls
imul
or
lret
add
mov
fimuls
adc
xor
sub
lcall
lret
mov
enter
xor
adc
movb
mov
cmp
xor
mov
stos
inc
js
notb
decl
sbb
mov
shlb
add
lods
cmp
dec
iret
shll
les
pop
lock
dec
imul
mov
and
loopne
orl
popa
mov
cmp
mov
cli
dec
pop
inc
cmc
jo
jae
pusha
adc
mov
repz
mov
icebp
jmp
lds
inc
sub
or
mov
insb
outsl
lret
imul
push
cmovge
mov
enter
arpl
adc
jmp
push
jne
je
into
pop
dec
dec
inc
mov
mov
dec
call
movl
pusha
pushf
pushf
mov
lea
jmp
cmp
jnp
sbb
or
jns
loope
cmp
je
pop
xlat
xchg
andb
dec
push
push
or
fidivl
test
pop
filds
lret
jb
sub
mov
add
leave
sbb
lahf
mov
xchg
jle
mov
movsl
into
cmp
and
inc
mov
js
hlt
movsb
pop
jecxz
mov
loope
mov
fs
push
sub
mov
pushf
pop
and
jle
out
notl
inc
mov
shlb
sahf
pop
rcl
imul
adc
pop
test
ljmp
cmc
push
mov
rclb
cmpsb
sti
mov
push
aam
push
test
xor
mov
xchg
movsb
and
push
xchg
dec
mov
fiaddl
sarl
testb
cmp
psrad
mov
lods
or
ljmp
lret
cltd
or
mov
shr
cli
pop
mov
rol
int
add
cmp
pop
cmp
loope
jg
mov
add
push
inc
sub
pop
je
mov
lret
push
push
mov
sub
in
inc
dec
or
pop
test
mov
lds
xor
insl
add
inc
aaa
dec
and
inc
mov
mov
and
adc
inc
and
or
movb
push
movw
mov
lea
jmp
jmp
push
movl
pushf
movl
pusha
pushl
lea
jmp
or
mov
js
cmpsl
outsb
ss
icebp
lcall
or
sub
es
push
ret
fmull
mov
adc
lcall
or
mov
movsl
sub
inc
addr16
jl
mov
insl
add
pop
sti
fwait
call
fwait
cmc
mov
mov
mov
outsb
fstl
mov
push
mov
sahf
divl
icebp
jge
xchg
lahf
or
and
push
jnp
adc
fwait
push
jl
dec
sbb
ljmp
push
lret
ret
cld
pop
push
inc
popa
mov
and
adc
movsb
and
dec
daa
inc
or
push
andl
jmp
xor
cmp
popf
cmpl
stc
jns
inc
mov
lods
fsubp
stos
pop
std
dec
mov
dec
movsb
ljmp
ret
lods
in
imul
fsubrs
xchg
mov
xor
push
xorb
scas
mov
push
adc
jge
sbb
push
cmp
lea
push
dec
xor
inc
mov
inc
shlb
stos
sbb
int3
add
fcomps
enter
fldenv
push
cwtl
fs
pop
fsubl
test
sbbl
mov
dec
add
pop
je
gs
aas
sbb
xchg
testb
out
aas
movsb
cmc
mov
and
loop
adcb
lds
cld
cmp
bound
call
mov
lods
sbb
lods
pop
sub
pushf
mov
xorb
icebp
jno
push
mov
leave
cmp
sbb
mov
mov
sbb
int3
loopne
dec
aas
ret
cmpsb
jb
call
or
cmp
outsb
fnstenv
sbb
rcl
and
mov
lds
scas
or
hlt
inc
rclb
cmpsb
pop
add
sti
testb
out
mov
jmp
mov
or
sub
inc
movnti
test
fcomps
cmp
fisttpl
inc
mov
dec
jnp
cmpsl
xchg
cld
jp
movsb
lds
mov
pop
inc
sub
nop
sbb
adc
mov
pop
pop
call
movsb
jmp
jmp
xlat
xlat
add
cmp
pop
fs
pop
inc
cs
pop
jbe
out
ljmp
sub
das
adc
mov
jbe
or
fdivl
cmpsb
ret
jmp
shll
pop
add
mov
shlb
lret
xchg
addr16
adc
pusha
ret
int
sbb
mov
cmpsb
mov
jae
dec
andb
sub
add
repnz
out
stc
test
ficomps
pop
sbb
push
test
mov
aad
inc
mov
cmp
cmp
ljmp
xchg
loopne
lock
repz
sub
and
fadds
inc
lahf
jle
cwtl
adc
in
sbb
inc
inc
pop
shr
jecxz
in
aas
clc
ret
sbb
pop
pushf
outsl
ja
enter
mov
xor
filds
mov
mov
or
lock
mov
ljmp
out
dec
or
add
ficomps
xor
add
mov
mov
push
out
mov
jbe,pn
out
mov
add
xlat
lds
cltd
jg
jmp
xor
mov
mov
jmp
rcr
nop
pop
mov
push
cld
stos
sub
mov
cmp
fs
jne
lcall
rorl
and
gs
bound
xchg
mov
or
out
inc
mov
push
push
out
jo
pushf
pusha
movl
pushf
push
movl
pusha
pushl
lea
jmp
push
movl
mov
pusha
movb
lea
jmp
call
adc
mov
push
push
xor
faddl
xor
in
mov
jmp
fwait
cs
sub
push
inc
addr16
add
dec
repz
icebp
notl
mov
movsb
ret
mov
out
mov
in
scas
gs
lds
mov
xchg
jmp
stos
adc
movsl
cwtl
fnstcw
adc
mov
ret
es
shr
add
xor
shrb
fwait
inc
lock
lock
into
testl
mov
ja
movsl
stos
inc
xchg
sahf
mov
dec
fadd
notl
dec
pop
test
popf
lret
or
fidivl
jge
popf
pop
or
sub
jge
xchg
ret
bound
popa
and
stos
fistl
in
ret
sbb
mov
xchg
jnp,pt
cmp
dec
aas
jle
mov
aas
dec
hlt
mov
xchg
jge
lea
mov
out
pop
stos
sub
popa
jecxz
cltd
adc
divl
lock
sahf
inc
cmp
data16
adc
mov
push
mov
sbb
sti
cmpsb
xor
pop
call
lahf
and
inc
mov
jb
xchg
fistl
adc
inc
inc
and
pop
push
mov
movb
pushl
lea
jmp
enter
jecxz,pn
pop
call
mov
sub
jge,pn
pushf
xchg
push
mov
pop
inc
data16
adc
hlt
or
cwtl
cwtd
pop
xor
gs
out
hlt
and
xorb
inc
pcmpgtb
inc
add
xchg
fstl
mov
mov
dec
mov
cli
sbb
cmovb
inc
and
mov
push
inc
pushl
lea
jmp
add
cwtl
sbb
addl
mov
xor
dec
insl
in
sbb
mov
int3
sub
mov
jmp
outsl
mov
inc
pop
mov
mov
imul
jge
dec
outsb
icebp
mov
inc
mov
es
add
xor
and
lahf
std
aam
inc
or
gs
std
xor
pop
xchg
cmp
or
xchg
ret
stos
jl
or
sbb
pop
adc
frstor
jl
in
xor
data16
adc
mov
rol
sub
jbe
or
add
and
mov
mov
mov
xor
out
jmp
mov
jo
in
pop
ss
out
dec
adc
lret
jo
jns
scas
pusha
or
cmc
cmpsl
ja
in
daa
inc
pop
xor
loopne
push
leave
gs
lods
cmpb
jno
fidivrl
cmp
aam
xor
sub
push
ja
daa
adc
mov
data16
cmp
add
and
and
nop
cmc
cmp
mov
cltd
xor
enter
push
sbb
xchg
push
or
jmp
leave
subl
xor
neg
clc
movsl
test
gs
stos
mov
insl
aad
popa
adc
lock
mov
push
mov
cmp
out
fistpl
rcll
mov
push
cs
sub
lcall
inc
sbb
ja
mov
sub
mov
lahf
adc
jl
push
mov
bnd
mov
add
xchg
iret
cmovb
es
jmp
mov
push
inc
lret
mov
les
mov
lcall
cmp
lds
shlb
inc
sahf
dec
jl
sub
and
dec
aaa
sti
dec
fstpl
mov
cmp
inc
cmp
mov
call
push
test
loopne
jo
fwait
aam
push
sbb
pushf
lret
cmpsl
jae
mov
hlt
aas
xchg
jmp
daa
jmp
mov
mov
jmp
test
lcall
sbb
ss
pop
ret
fbld
lahf
mov
fists
dec
test
mov
mov
mov
push
or
cmpsl
cwtl
mov
push
in
push
pop
fnsave
test
je
outsl
imul
fildl
push
pop
jbe
mov
ljmp
adc
call
push
lods
cs
xchg
mov
mov
ret
xchg
mov
adc
push
pusha
dec
hlt
addr16
call
les
jp
sbb
ljmp
xor
add
jecxz
mov
xchg
xchg
movb
push
mov
pop
jnp
xlat
pop
push
out
sbb
mov
out
push
stos
int3
adc
cmc
sti
jne
pop
lods
pop
xchg
and
push
dec
data16
mov
jmp
mov
lret
stos
cmpl
fs
jp
out
push
inc
mov
es
or
cltd
in
inc
mov
scas
dec
push
sub
xchg
jnp
push
sbb
xor
cltd
mov
jb
add
dec
ss
xchg
mov
and
stos
inc
sahf
adc
push
pop
pop
mov
xchg
fimuls
mov
cmpsb
adc
jb
loop
xor
inc
add
movntps
leave
test
xchg
push
inc
mov
in
pop
push
je
adc
lsl
pop
fstps
inc
repz
sti
cmpsb
into
lods
fnstsw
rorb
sbbb
mov
fisttpll
push
shrl
cmc
adc
out
sub
push
rclb
aas
cli
pop
pop
inc
imul
fwait
mov
cmpsb
mov
jg
mov
shl
jns
mov
dec
aas
lret
rorl
insl
mov
or
xor
add
cld
jne
inc
sbb
mov
mov
adc
cmpb
push
loop
aas
jo
jl
cmp
fs
lret
sahf
inc
js
dec
push
mov
ret
std
sbb
jae
jecxz
add
pop
jecxz
rol
mov
cmp
icebp
out
jbe
pop
add
imul
daa
mov
movsl
aad
and
addr16
out
aaa
sub
js
or
mov
adc
xor
xchg
daa
xchg
fcoms
or
inc
nop
inc
mov
shl
adc
sub
jecxz
mov
push
sarb
bound
arpl
xchg
ret
mov
sbb
push
dec
mov
pop
mov
sub
mov
insl
dec
jecxz
shrb
add
fcmovnbe
mov
xchg
jecxz
lahf
add
cmp
cmp
xchg
sti
outsb
mov
stc
imul
dec
add
inc
mov
addl
xor
test
mov
ds
into
xchg
lock
push
pop
jle
jmp
ds
pop
inc
jmp
jecxz
test
loop
int3
sbb
and
and
sbb
jle
out
jne
add
jo
lcall
dec
sbb
sub
inc
xchg
sarl
decb
adc
xchg
lea
mov
insb
jne
stc
mov
sti
push
dec
lret
pop
and
fsubl
jecxz
bound
or
adc
push
les
pop
mov
out
sub
lcall
ret
ja
xchg
pop
mov
ror
shll
movl
pusha
push
pushl
push
lea
jmp
cmp
dec
fidivl
rcr
xchg
cwtl
xchg
into
mov
jbe
inc
std
lea
nop
dec
loop
push
les
repnz
mov
lods
mov
dec
push
sbb
push
jmp
pop
push
add
jg
aaa
push
gs
pusha
fidivrl
ja
sub
mov
xor
fimuls
icebp
dec
sub
inc
mov
mov
lret
cld
and
loopne
in
inc
rcrb
jbe
or
loopne
pushf
cs
jns
cmpsb
mov
rcrb
les
addr16
outsl
lcall
pop
fs
and
lock
sub
std
aas
clc
xchg
push
jg
dec
mov
xchg
inc
arpl
mov
ss
mov
aaa
push
push
lods
or
jnp
dec
cmc
test
adc
jae
test
mov
es
sub
pop
inc
add
loopne
cmp
pop
imul
shll
pop
jge
test
mov
push
clc
lret
sbb
rorl
repz
test
xchg
iret
insl
repnz
or
fdivr
adc
sbb
add
pop
inc
mov
test
shll
out
push
andb
outsb
bound
sbb
movsl
std
dec
push
icebp
xor
stos
pop
xor
dec
outsb
xor
in
lret
daa
xlat
xor
jp
xor
and
add
dec
leave
cmpsb
out
lods
cli
fnstenv
sub
pop
mov
aam
dec
les
pushf
divl
inc
mov
subl
fistps
inc
and
mov
jmp
test
nop
pop
ret
mov
nop
flds
jne
inc
cmp
imul
jle
pushl
xor
pop
inc
push
cmp
adc
movsb
aad
in
inc
add
sbb
adc
jb
out
outsb
mov
into
cmpl
sbb
in
cmp
sahf
fsubs
cld
push
xchg
jnp
and
lods
ljmp
push
sub
jbe
mov
jmp
dec
sub
icebp
mov
add
jb
fcomps
cmpsl
mov
sbb
inc
lds
dec
mov
sti
dec
push
dec
daa
jecxz
mov
add
repz
cmp
ljmp
ss
add
sub
sbb
fwait
inc
in
aaa
ret
push
pop
inc
sub
and
clc
je
sahf
jge
inc
cmp
mov
imul
mov
mov
adc
daa
mov
iret
arpl
insb
push
and
push
loop
shlb
mov
mov
sgdtl
inc
call
mov
lret
aas
shr
fwait
int
insl
idivl
mov
cmc
scas
ss
aas
mov
mov
push
mov
inc
jl
lret
mov
mov
ret
or
fdiv
insl
jb
cmp
pop
lret
aaa
mov
pushw
pop
adc
call
stc
or
pushf
mov
movl
pushf
mov
movl
pusha
mov
mov
push
lea
jmp
out
sub
stos
popa
pop
and
sbb
jne
dec
jecxz
xchg
loopne
xchg
cmp
iret
push
mov
fimull
loop
and
ret
inc
fistpll
mov
fisttpll
cld
xchg
hlt
push
xlat
test
push
adc
sbb
loope
repnz
mov
and
pop
mov
fisubrs
pop
push
fbstp
adc
mov
inc
mov
push
inc
stos
add
in
outsb
xor
incb
and
test
insl
dec
cmp
movsl
and
out
daa
je
mov
fadd
lea
xor
dec
popa
adc
cmp
insl
push
adc
pop
inc
mov
lret
and
leave
popf
or
fistpl
cwtl
movb
les
add
push
insb
repz
mov
sbb
and
lock
shrl
ret
xlat
cmp
jns
jg
aas
imul
sbb
pushf
mov
pop
jmp
imul
cltd
addr16
fisttpll
adc
in
lcall
pop
dec
std
stos
mov
enter
dec
mov
push
pop
fldl
shl
cmc
adc
subb
inc
push
push
jecxz
or
xor
xchg
add
popf
mov
push
pusha
xor
out
shlb
dec
hlt
jg
push
xchg
pop
int3
xchg
imul
mov
mov
mov
sub
arpl
push
test
jge
ja
and
sub
mov
cmp
inc
mov
pusha
je
psubsw
add
sub
dec
clc
clc
jp
adc
loop
aad
je
orl
fstl
sbbb
out
pop
jnp
dec
sub
sub
mov
jecxz
mov
cld
nop
sub
arpl
pusha
cmp
mov
test
adc
out
or
jmp
push
pop
jecxz
sub
xchg
stc
insb
imul
cmp
hlt
aam
pusha
xchg
or
popf
mov
mov
pushf
pop
mov
or
xchg
pop
pop
or
mov
out
mov
das
xor
mov
add
inc
push
mov
inc
mov
sar
pop
ljmp
lods
roll
fisubl
movsl
adc
test
cmp
js
dec
jl
jne
aad
mov
push
stos
and
clc
lret
push
mov
push
fst
rorb
mov
and
jbe
mov
jb
jp
call
jp
nop
mov
lock
xchg
stos
adc
cld
jecxz
cmc
mov
pop
rorb
fwait
sbb
and
ja
je
imull
push
insb
leave
je
stos
xlat
ret
pusha
inc
sbb
imul
xorb
popf
insl
repnz
jno
movsb
int
lcall
pop
pop
mov
dec
push
push
inc
lods
jb
inc
and
jns
mov
pop
cmp
aaa
inc
bound
sub
lds
das
sahf
mov
popa
ja
mov
icebp
scas
or
ja
stos
addr16
mov
jnp
test
jb
lock
ss
inc
sub
pop
in
cmp
lret
lret
xchg
xchg
cmp
sarl
addr16
dec
sbb
test
cmpsb
into
mov
mov
bound
bound
push
inc
jp
rcrl
inc
stc
fidivl
jmp
iret
and
lock
xchg
xchg
sbb
push
mov
ficomps
mov
mov
mov
xchg
sbb
push
push
push
jmp
cltd
icebp
inc
adc
inc
mov
jnp
or
sbb
xor
stos
mov
out
and
xor
inc
repnz
std
push
test
push
pop
mov
ss
mov
cmp
notl
inc
pop
iret
in
mov
icebp
adc
jg
ds
pop
ds
ja
shrb
mov
dec
fnstenv
cltd
imul
inc
test
pop
push
inc
jae
jnp
push
xchg
adc
icebp
cmpsl
out
out
mov
mov
jne
stc
je
mov
popf
mov
cmp
outsb
jb
cmp
inc
mov
mov
jecxz
sbb
jae
lds
xlat
cmp
mov
fadd
je
icebp
leave
fsubrs
or
pop
cmp
sub
clc
enter
lods
push
out
adc
sbb
mov
jns
mov
jb
dec
int
je
cmpsb
rolb
mov
sbb
loopne
sub
lods
sahf
rcrb
push
xor
rorl
mov
fisubs
repnz
fistps
mov
push
cmp
js
dec
sub
fldl
enter
jmp
push
pop
jmp
jge
lods
sahf
inc
xor
cmp
mov
jo
leave
jge
ds
bound
xchg
cwtl
sbbb
and
out
mov
jbe
popf
jg
push
cmp
cwtl
mov
push
repnz
sub
jp
dec
bndstx
lea
push
inc
xor
push
iret
arpl
inc
das
lea
outsl
je
xchg
mov
pop
scas
jle
mov
decl
mov
push
pop
push
popl
jnp
popf
leave
nop
rcrb
mov
xor
lds
pop
daa
mov
imull
xor
mov
xchg
ret
lret
mov
sub
stos
out
inc
jecxz
bound
pop
mov
and
rcrl
fadds
inc
xchg
add
sbb
fnstsw
pusha
scas
mov
sahf
or
ret
and
rcrb
mov
outsl
xchg
gs
cld
mov
xor
into
dec
xor
imul
adc
arpl
pop
cmpsl
rcr
push
inc
mov
nop
xorb
stc
dec
lcall
test
das
nop
push
xchg
out
cltd
add
xor
mov
lret
push
adcb
jae
add
mov
mov
jns
test
push
ds
out
and
add
push
mov
add
fmul
mov
sahf
xchg
pushf
jb
dec
imul
sub
cs
cmpsl
adc
popa
out
bound
fucomi
js
inc
rcr
jge
sub
sub
xor
xchg
mov
cltd
sbb
xchg
rcr
imull
in
test
shll
mov
aas
and
cmp
inc
loope
add
mov
xor
fists
jno
imul
add
std
jns
xchg
mov
xchg
mov
add
sarb
xchg
xchg
dec
es
push
data16
aam
mov
sub
pop
aas
jg
test
mov
inc
scas
imul
ds
sub
mov
adc
cmpsl
ja
pushf
push
movl
push
pusha
call
pusha
pusha
call
dec
int
and
pop
jbe
in
test
mov
jne
jl
dec
cmp
mov
jmp
push
add
jns
arpl
mov
cs
dec
add
push
mov
in
pop
jmp
data16
mov
jg
add
scas
mov
call
shl
pushf
into
xchg
sbb
jno
arpl
jge
xchg
in
pop
inc
mov
movsb
enter
xchg
call
gs
mov
js
push
xor
pusha
sti
push
xor
xor
cmpsl
aas
and
dec
push
mov
iret
add
cmp
sub
clc
test
xlat
cmpsb
mov
sti
mov
data16
inc
faddl
pop
adc
outsl
inc
mov
lock
mov
or
sub
loopew
or
test
call
pusha
sbb
ds
out
aad
dec
inc
rcll
fs
into
mov
sbb
dec
int3
mov
mov
shr
push
je
sbb
mov
scas
es
movsl
cmc
dec
cwtl
inc
mov
fldpi
std
pusha
movl
jmp
call
cmp
test
and
es
mov
jo
xchg
sub
fildl
jge
add
jnp
jne
test
dec
add
test
rolb
out
pusha
pusha
push
sti
imul
dec
scas
sarl
mov
push
jmp
add
mov
jno
insb
cmp
roll
hlt
mov
adc
jae
imul
push
enter
cmp
inc
mov
mov
inc
add
mov
fcmovu
inc
gs
aam
push
stc
xchg
repz
lds
sbb
pusha
dec
lret
pop
cmpb
mov
fs
jl
cmp
cmp
cld
sahf
cld
push
push
push
inc
gs
out
mov
jmp
lods
or
stos
add
xor
push
out
dec
cmp
nop
sbb
adc
xchg
ja
or
mov
fstpt
inc
mov
dec
push
clc
out
mov
or
push
mov
fcomps
push
mov
push
hlt
leave
pop
mov
mov
lods
dec
call
scas
inc
pop
pushf
imul
ret
xor
jbe
shll
mov
adc
push
add
add
outsl
add
push
sbb
inc
mov
lahf
ret
sub
inc
and
mov
call
push
movl
push
movl
pusha
push
pushf
lea
jmp
adc
movsl
sbb
es
fdivr
addl
push
xor
ljmp
arpl
lret
mov
mov
mov
add
lcall
scas
pop
dec
pushf
cmp
cmp
mov
fs
xor
int3
dec
mov
rcll
mov
fidivrl
jnp
icebp
add
sub
and
jo
xor
add
or
out
and
imul
stos
adc
inc
mov
lods
fsubp
dec
test
xchg
mov
call
mov
jb
outsb
sbb
xor
out
pop
jg
gs
enter
loop
iret
les
xchg
fmull
add
ret
pop
stc
incl
mov
pop
mov
mov
aad
mov
aaa
or
cmp
and
inc
test
pop
fsubs
inc
mov
pop
outsb
jns
sbb
jae
mov
dec
ret
mov
mov
cld
pushl
cmp
mov
xor
in
inc
dec
mov
pop
pop
jg
aam
leave
or
push
scas
ret
test
adc
mov
cmpl
shl
and
cld
mov
stc
cmp
jmp
ret
jmp
mov
add
insb
lock
in
xor
bound
cmp
ds
stos
out
repz
jle
jnp
dec
adcl
lcall
fsubrl
movsl
cmpsb
cld
mov
enter
das
enter
dec
xchg
push
cld
das
call
adc
pop
fldl
mov
dec
lret
ljmp
mov
test
outsb
ljmp
stos
in
mov
shll
or
add
sbb
pushf
mov
inc
stos
mov
push
divl
push
push
inc
mov
jb
fwait
daa
out
mov
out
aaa
mov
pop
addr16
xor
push
pusha
mov
ret
cld
mov
pop
xchg
inc
inc
loope
outsl
mov
jae
test
call
xchg
xchg
xlat
mov
mov
and
pop
xor
xchg
or
push
mov
jp
xchg
inc
inc
mov
add
cld
inc
xor
mov
adc
mov
in
popf
xor
int
ret
xor
pusha
xor
inc
sub
dec
daa
popa
add
inc
mov
mov
aam
jmp
cmpsb
mov
jg
nop
shll
mov
push
adc
stc
out
cmp
and
test
jnp
aam
pop
inc
sbb
or
push
jne
aaa
js
fldcw
fs
xchg
inc
imul
out
inc
jbe
sub
xor
xchg
mov
sbb
sub
jb
push
cwtl
add
aad
inc
add
out
insl
add
repnz
std
lahf
cld
push
push
add
movsb
inc
rorb
xchg
jg
fstps
mov
dec
aas
inc
sub
push
add
loop
add
cmpsb
out
adc
insl
scas
fimull
out
aad
in
push
jmp
ja
pusha
push
xlat
nop
sbb
jb
pop
jecxz
mov
aam
movsb
cmp
pop
xorb
nop
mov
cmp
scas
hlt
cwtl
ret
push
shl
mov
jo
movsl
adcb
rcrl
push
mov
mov
jmp
or
add
jge
cmp
pusha
mov
lea
jmp
call
pop
test
mov
mov
lods
lret
scas
adc
xchg
scas
or
jge
dec
jbe
daa
outsl
sub
clc
cmp
test
push
push
mov
push
dec
cld
pop
pop
add
add
outsl
mov
or
int
popa
lods
imul
fsin
push
mov
imul
pop
jae
push
xor
bound
add
inc
cld
call
in
or
mov
fdivs
or
and
adc
fs
jmp
pop
jne
mov
loope
addr16
js
jnp
push
or
xchg
xlat
push
ja
notl
and
loop
subb
and
and
adcl
loopne
rcrl
and
xchg
aas
cli
mov
ret
clc
pop
lahf
fs
sarb
push
inc
cli
cld
test
lahf
jno
mov
pmuludq
mov
push
dec
push
aas
cli
lret
push
sbb
lock
cmp
lahf
cli
arpl
imul
cmp
cltd
enter
jo
mov
pop
decl
inc
shlb
daa
push
pop
xor
xor
mov
inc
insb
and
add
cmp
pop
aas
adc
test
jle
jle
pop
int3
inc
mov
bound
inc
mov
inc
fnstenv
push
jb
movsb
mov
adc
cmp
or
sbb
fisubrs
dec
sub
loopne
inc
fsts
push
mov
inc
out
jns
cmpsl
loop
push
dec
adc
dec
sbb
stos
inc
mov
cmp
xchg
pop
ss
add
pop
mov
push
inc
fucomip
push
in
ljmp
pop
loop
aas
popa
and
gs
ja
xlat
stos
inc
popa
adc
js
imul
cmp
push
add
sti
inc
mov
frstor
movl
js
xchg
mov
cltd
mov
nop
sub
jg
push
jne
pop
cwtl
push
roll
pusha
das
aaa
jo
dec
iret
ds
test
test
notb
and
stos
xchg
enter
aam
out
cmp
jns
das
rorl
mov
mov
clc
mov
ja
xor
cmp
insb
sub
sbb
pop
call
xor
push
mov
jne
jle,pt
mov
in
pop
lcall
inc
lret
pop
pop
lods
lods
add
lret
jp
inc
pop
pop
sub
mov
cmpsl
sbb
inc
mov
xor
js
fidivl
ret
push
adc
jmp
and
fildl
imul
in
sbb
xor
and
inc
rcrl
mov
mov
lret
insb
mov
cwtl
neg
xchg
mov
shl
rclb
sub
jle
dec
inc
mov
iret
pop
std
jmp
call
cltd
jecxz
ret
adc
sbb
mov
mov
je
out
scas
mov
add
add
mov
mov
push
jecxz
popf
adc
mov
xor
dec
mov
sub
adc
cld
ffreep
lods
push
fcomps
xor
daa
sarb
test
loopne
mov
inc
and
pop
jecxz
or
add
cmp
sbbb
fs
jmp
cs
push
mov
pop
mov
mov
out
pop
stos
mov
andl
repnz
movsl
add
and
add
sbb
push
and
push
dec
push
in
out
outsb
pop
ljmp
and
addr16
in
sub
xchg
out
push
jno
inc
sbb
jmp
mov
call
leave
sub
enter
jae
mov
dec
cmp
aaa
push
xchg
mov
jo
rcll
mov
nop
and
push
addl
addb
mov
pop
and
dec
daa
cmpsb
ret
out
in
mov
nop
jp
imul
js
out
inc
mov
in
aas
roll
cmpsl
sub
cmp
jp
push
pop
push
cmp
dec
mov
xor
clc
ss
in
int3
and
and
iret
push
stc
sbb
adc
ret
pop
loope
mov
xchg
mov
imul
divb
mov
push
out
lahf
adc
pop
adc
inc
mov
inc
aas
lods
push
repz
cmp
push
jecxz
leave
jne
and
out
inc
adc
daa
sub
pop
jge
pop
or
xorl
xor
jge
arpl
and
je
sub
lret
repnz
and
xor
enter
push
dec
scas
ljmp
mov
mov
or
mov
cmp
incl
ret
out
lret
pop
xor
pushf
fstpl
scas
das
jbe
imul
jo
xchg
or
enter
scas
shlb
and
scas
inc
cmpsl
and
ljmp
add
test
pop
dec
mov
cs
dec
stc
cmp
fdivp
pop
jg
rolb
jge
test
mov
jecxz
and
cmp
xchg
xchg
aam
in
cmp
and
mov
inc
inc
nop
sub
pushf
loopne
lcall
inc
sarl
in
lods
push
popa
cmp
hlt
inc
sbb
mov
addl
shrl
or
rorl
cwtl
mov
pop
cvtps2pi
stos
sbb
push
test
jbe
mov
mov
es
or
mov
sbbl
into
pushf
gs
gs
jb
loope
and
cmc
in
sbb
ret
cltd
mov
sbb
adc
xor
nop
push
cmp
dec
mov
pop
mov
aam
es
ret
loopne
int3
dec
push
mov
push
jo,pt
iret
inc
mov
xor
and
int
cld
js
and
lock
or
jbe
or
test
jno
popf
pop
jp
ss
cmpsl
movsb
and
scas
movsl
xchg
iret
xchg
dec
xor
add
jle
dec
or
or
lahf
sub
add
cmc
stos
int3
shl
sbb
jae
jp
lods
in
cltd
ret
jb
in
inc
mov
add
jmp
sahf
lcall
imul
xchg
mov
push
or
je
add
mulb
or
jle
hlt
mov
mov
lret
adc
stos
push
repnz
sbb
aas
push
in
imul
sub
iret
inc
mov
popa
jmp
xor
fldl
and
bound
dec
cmp
mov
clc
scas
cltd
add
fcmove
adc
cmpsb
inc
sbb
stos
loop
in
stos
repnz
ret
and
xchg
out
gs
lds
popf
test
jle
ret
es
jb
adc
mov
adc
inc
inc
push
test
arpl
xchg
sbb
and
mov
in
cmc
repnz
jmp
jno
lds
rorl
mov
inc
xchg
cmp
mov
std
sub
xchg
les
rcr
pop
hlt
movsb
test
scas
stos
cmp
cmc
jb
jne
ds
fists
call
push
sub
cmp
inc
rorb
pop
scas
clc
repnz
xor
and
sti
mov
jmp
adc
jmp
aam
int3
mov
sbb
ljmp
pushf
rcrl
loop
dec
or
xlat
inc
mov
xchg
into
xchg
sub
and
mov
mov
cmp
in
mov
loope
lds
jne
sub
popa
inc
jmp
pushl
adc
mov
stos
mov
cmc
sbb
mov
fbstp
test
test
lret
mov
jbe
sub
mov
fisubrs
push
jo
pop
ds
xchg
mov
xchg
imul
ret
push
stc
pop
ret
gs
adc
jecxz
sub
lea
les
cmpl
jno
mov
sub
scas
icebp
sub
cmp
xor
mov
into
cmovle
inc
push
test
jl
popf
idivb
adc
scas
xchg
inc
lea
jmp
mov
into
cmpb
gs
sub
std
adc
adc
nop
mov
dec
push
fidivrl
test
xor
gs
call
fisubrl
mov
xchg
push
ds
leave
scas
and
mov
inc
fadd
dec
sbbl
cmp
movsl
dec
cmp
pop
aaa
iret
add
sbb
push
ja
dec
gs
mov
outsl
sahf
and
js
outsl
xor
sbb
pop
cld
in
ret
fidivl
lds
and
mov
and
add
or
cmp
mov
pop
lea
mov
rcll
lret
xorl
inc
inc
mov
sub
sub
imul
test
jl
jns
inc
inc
loope
stc
or
test
loop
push
mov
dec
push
popa
fs
int
cmc
xor
mov
add
call
into
lcall
add
dec
in
or
imul
lcall
and
sub
sbb
inc
jmp
fwait
and
leave
jb
push
xor
or
or
jmp
lds
xor
fisubl
test
and
or
lds
rcl
push
push
out
or
in
mov
mov
adc
arpl
icebp
loope
dec
out
xchg
xchg
and
mov
dec
push
repnz
xor
sub
dec
imul
in
js
pushf
xor
testb
into
icebp
push
mov
fidivl
loop
cld
dec
mov
inc
out
or
xchg
es
andl
jae
sbb
mov
xchg
icebp
shrb
lret
or
cmpsb
mov
inc
repnz
movsl
ljmp
cmp
push
dec
sub
popa
sbb
add
rcrb
xor
pop
aam
loop
add
dec
lods
stos
xchg
and
mov
fnstcw
stc
mov
sub
mov
aaa
idivl
sbb
push
xlat
fldenv
dec
dec
jne
mov
lds
rcll
mov
dec
dec
mov
bound
aaa
push
mov
push
cld
insb
xchg
outsb
out
out
sub
xor
outsb
ss
dec
repz
mov
popa
pop
mov
pusha
pushf
popf
xchg
adc
adcb
cmp
inc
mov
xchg
out
dec
movsb
add
xlat
insb
sbb
jbe
mov
shl
mov
xor
pop
xchg
out
mov
outsb
sahf
pop
inc
cmpsb
push
or
push
sbb
sarl
and
mov
xchg
jle
inc
lret
repz
sahf
sub
loope,pt
mov
sbb
cli
ret
arpl
ret
mov
cmp
in
jnp
pop
out
sub
xchg
mov
lods
sbb
sbb
mov
xor
lret
aas
sti
add
adc
mov
je
in
xchg
inc
cmc
pop
repz
xor
shrd
xchg
xchg
push
pop
mov
ficomps
cmpsl
xchg
shr
adc
stc
xchg
jb
push
or
sbb
xor
cltd
and
in
jge
arpl
xlat
int3
jo
mov
cmpl
mov
or
lods
stos
scas
sub
mov
movsl
and
sub
cmp
sub
fbstp
dec
mov
sub
mov
push
push
leave
pop
xchg
mov
xlat
movsl
inc
push
scas
push
addb
dec
call
into
scas
out
mov
test
test
pop
cmp
fbstp
jl
outsl
call
mov
call
ret
aaa
mov
stc
pop
pop
notl
adc
test
sbb
dec
mov
es
and
and
push
repnz
and
inc
add
call
xchg
cmpsl
je
fldcw
xchg
mov
mov
ret
cltd
fisubl
nop
pop
add
push
push
mov
and
call
mov
lea
sahf
dec
insl
loope
dec
dec
cmp
xchg
push
jo
dec
adc
jns
mov
lods
mov
lds
ds
jno
mov
scas
ret
jge
add
mov
cli
sahf
fldenv
push
and
xor
lds
test
lds
cmp
hlt
jno
mov
and
jle
inc
int
test
lcall
lea
lcall
cmp
cmp
add
lea
jp
inc
nop
xchg
les
imul
cmp
push
out
ret
icebp
sarb
iret
aas
and
lods
adc
pop
sbb
lcall
jg
inc
mov
push
inc
cmp
out
je
cmc
xlat
or
call
or
aaa
xchg
test
hlt
xchg
push
jno
mov
push
jmp
into
popf
int
mov
xchg
mov
es
adc
mov
and
js
test
mov
push
push
in
jbe
push
ret
adcl
dec
and
fsubl
jle
aas
repnz
sbb
cltd
aam
pop
inc
cmpsl
push
add
lcall
jp
std
jle
push
mov
stos
jecxz
stc
loope
adc
push
in
idivl
cmc
jo
jb
mov
clc
or
adc
adc
clc
mov
scas
ret
out
dec
es
inc
push
inc
stc
mov
rcr
shlb
cmpb
mov
inc
ret
lcall
call
add
sti
pop
xor
cwtl
mov
stos
cli
mov
add
inc
push
je
lea
xor
stc
in
add
and
push
testl
mov
lods
loope
xchg
sub
fsubl
cmpsb
fstpt
inc
jl
and
dec
dec
dec
and
sbb
inc
mov
test
sbbl
pushf
push
ss
loope
std
mov
inc
sbb
sub
fldcw
mov
lods
sub
mov
fldenv
fsubrp
scas
pop
imul
clc
std
in
or
pop
mov
mov
fbstp
mov
or
dec
push
aad
jae
dec
xchg
jmp
cltd
repz
mov
push
loopne
push
dec
lds
es
ljmp
sub
and
add
dec
lds
mov
lcall
adc
xchg
ret
xchg
into
xchg
lock
cmpsb
or
add
mov
xor
lea
xchg
lea
lods
cmc
inc
btc
dec
mov
jno
xchg
inc
dec
or
sub
inc
mov
and
lds
push
inc
es
divl
mov
fs
jp
rcll
iret
scas
ret
fwait
and
dec
adc
mov
fwait
xchg
int3
mov
sbb
test
out
pop
outsb
xchg
adc
ja
lcall
dec
mov
std
inc
mov
aas
sub
add
and
adc
pop
add
movl
mov
ja
push
push
mov
xor
ss
repz
addr16
stos
repnz
sub
adc
mov
fnsave
mov
div
inc
or
mov
jae
cmp
out
cmp
sub
pop
je
mov
adc
and
sbb
pushf
aam
pop
rorb
popf
sub
inc
pop
mov
sbb
pop
xor
fbld
sub
cmc
daa
add
push
add
fdivp
dec
insb
xchg
sbb
lds
nop
out
pusha
add
testl
lret
std
les
out
in
pop
sbb
push
xchg
jg
call
mov
stos
lret
push
pop
cwtl
lds
scas
cmp
push
pop
das
jg
inc
adc
pop
ficoml
je
stos
lds
jle
mov
fnsave
sarb
out
push
mov
xor
out
sbb
jg
jbe
inc
cmpb
jb
cli
cli
outsb
push
shrl
shr
lods
pop
stos
inc
mov
cs
incl
xchg
add
jmp
jb
push
xor
mov
adc
cltd
ret
stos
movsl
mov
imul
xor
stos
icebp
inc
lds
inc
mov
movl
jmp
movl
pushf
pusha
lea
jmp
pusha
pushf
movl
pushf
lea
jmp
inc
cmp
outsl
jg
movsl
jge
push
adc
mov
pusha
into
mov
mov
aad
pop
movsl
mov
test
cmpsb
in
sbb
add
mov
stos
popl
push
stos
and
xchg
mov
popf
xchg
cmp
add
test
cmp
pusha
aam
adc
imull
fisttpl
jnp
jo
in
pop
or
pop
jl
xor
hlt
aad
xor
adc
sub
sti
mov
mov
mov
mov
push
mov
dec
push
fwait
movsb
arpl
jp
popf
mov
mov
sub
nop
and
dec
jl
cmp
shlb
add
je
jmp
pop
mov
outsl
xor
bound
push
xchg
xchg
xchg
stos
imul
scas
inc
int
jns
loop
testw
popf
rorl
notl
and
rcll
fcoms
mov
iret
pop
xchg
xchg
xchg
sti
mov
lea
fwait
pushf
or
cmp
shll
addb
cltd
add
addr16
movsl
push
push
mov
xor
adc
lret
push
bound
test
sub
cld
lcall
sbb
fistpll
fsubs
int3
xchg
ljmp
mov
call
addl
pop
adc
and
mov
popf
adc
sub
cmp
scas
leave
or
cmp
jle
outsb
dec
adc
mov
pop
mov
dec
pop
dec
pop
imul
movsl
rcll
inc
and
inc
mov
movl
pushf
jmp
cmpb
adc
mov
mov
int
sbb
jle
leave
in
imul
fwait
sbb
sub
jne
lds
rcll
pop
push
xchg
ds
mov
pop
stc
or
adc
jmp
out
addr16
repnz
cmp
movsl
cli
test
stos
xor
push
xchg
push
arpl
rcll
out
cli
pop
add
inc
movsl
stc
add
cmp
loopne
jp
lods
pop
fnstcw
andl
data16
loopne
jo
aad
mov
adc
jnp
js
filds
stos
mov
or
popf
data16
push
sahf
jns
push
in
lret
movsl
lret
js
lahf
or
add
icebp
out
sti
sbb
adc
in
push
push
adc
mov
dec
in
xchg
xor
push
mov
aad
jle
data16
mov
jle
test
pop
mov
pop
jge
ja
sahf
mov
call
jg
sub
mov
mov
inc
pop
mov
or
pop
xchg
ficoms
or
leave
inc
jecxz
test
and
pop
or
fidivrs
enter
pushf
call
add
std
mov
jp
mulb
dec
jo
sarl
push
insl
rep
sub
adc
cltd
mov
inc
mov
repnz
cmp
jl
mov
xor
cmpsl
pop
jge
test
aad
mov
and
jae
jo
stos
push
xor
cs
xor
push
mov
pop
ds
adc
adc
mov
repz
push
sbb
fisttpll
mov
daa
stos
adc
adc
or
push
dec
cmp
outsl
aas
sbb
ja
jo
lods
jecxz
int
xor
mov
xor
stos
dec
adc
into
cmp
int3
mov
hlt
stos
adc
movsl
mov
adc
adc
adc
fldcw
lds
icebp
sbb
out
and
mov
add
fisubrs
mov
cmp
repz
xchg
push
or
jae
mov
sbb
loope
push
es
in
jl
loopne
out
mov
jae
das
movsl
nop
fsubr
push
jae
out
out
jp
hlt
into
js
dec
or
mov
mov
or
mov
mov
inc
test
setp
or
xchg
mov
mov
push
jge
dec
and
inc
jne
xor
dec
call
adc
daa
out
arpl
mov
enter
leave
repz
fs
add
xor
dec
xor
fs
shl
mov
stc
add
pop
dec
dec
mov
imul
gs
add
cmp
push
mov
jmp
dec
add
inc
mov
out
cmp
rorl
and
hlt
gs
hlt
loopne
cmp
lods
sbb
daa
fldt
and
gs
icebp
add
cmp
cs
es
repz
movsb
jb
fsubrl
sbb
daa
ror
shl
nop
fdivrp
mov
xchg
sub
sub
mov
mov
sbb
push
mov
shrb
pusha
or
inc
mov
adc
lods
mov
mov
pop
dec
packssdw
xorb
cmp
scas
mov
into
jae
mov
out
ret
xchg
and
jne
repz
je
aam
sbb
or
je
sub
test
fiaddl
movsl
lret
out
mull
push
pop
push
jbe
adc
push
dec
jbe
push
xchg
fimull
and
das
inc
mov
jns
lahf
addr16
cmc
mov
jp
orl
and
fdivrs
test
xor
push
ja
jo
mov
sarl
inc
or
pop
les
rcrb
adc
out
leave
popf
or
add
icebp
sub
jne
inc
addr16
je
adc
jle
aad
xor
jns
sbb
dec
sub
xor
out
inc
inc
mov
mov
jb
or
jecxz
cs
cmp
sbb
or
cvtpi2ps
insb
dec
lret
pop
lds
or
popa
push
sbb
in
stos
mov
fisubl
sti
loop
xchg
ss
push
out
leave
mov
pusha
push
inc
or
mov
xor
cmpsl
push
pop
mulb
inc
and
sahf
fmuls
push
call
mov
insl
movsl
scas
ret
outsb
or
inc
into
cltd
es
inc
hlt
xchg
dec
sbb
jne
cli
inc
sbb
es
mov
or
mov
jl
out
into
out
sub
pusha
sub
dec
push
adc
jecxz
popf
pop
push
sbb
test
mov
lret
aad
mov
adc
adc
arpl
xor
push
fldenv
rorl
push
mov
inc
leave
sarb
mov
subps
jno
fiaddl
rorb
jge
leave
data16
shll
ret
pushf
push
leave
pop
test
xchg
inc
xchg
movlps
jmp
inc
insb
fsubr
jmp
pop
add
dec
clc
imul
inc
js
mov
jmp
imul
lcall
loop
inc
mov
and
jmp
mov
mov
cmp
cmp
adc
dec
mov
jo
dec
decl
cmp
subl
inc
sahf
pop
mov
int
fwait
notl
xchg
inc
mov
and
xor
xor
add
add
or
or
jg
loop
loope
push
cld
aas
stos
scas
pusha
push
aad
fcoml
mov
stos
out
sbbl
repnz
into
scas
cs
inc
pusha
sub
cwtl
or
jo
arpl
ljmp
sbb
out
mov
jg
mov
xchg
in
dec
imul
add
pop
gs
jecxz
push
cmp
fs
mov
scas
jecxz
in
mov
mov
mov
add
xor
ja
js
sub
je
inc
clc
mov
nop
and
rclb
lods
ror
xor
pop
push
pop
sub
inc
pushf
bound
js
repnz
or
dec
lea
aas
lret
or
nop
daa
inc
cmp
xchg
addr16
dec
sbb
bound
mov
incl
stc
cli
dec
mov
push
push
jmp
imul
adc
test
sbb
push
jg
movsb
addl
or
jge
les
push
mov
das
hlt
cmc
js
inc
mov
lea
les
cs
lock
out
test
in
xchg
jne
ja
mov
fisttps
sub
imul
xor
adc
push
inc
pop
dec
and
inc
mov
sub
jge
jns
push
mov
dec
popf
mov
pop
adc
imul
push
ja
arpl
insl
es
sub
mov
inc
fadd
mov
adc
out
mov
pop
roll
mov
std
cltd
inc
inc
and
pop
sbb
dec
jmp
jmp
adc
adc
adc
lret
fwait
int
pop
inc
pop
push
sub
aas
decl
push
dec
das
ss
in
and
lods
push
cmpsb
jmp
mov
stc
cmp
stos
inc
inc
insb
pop
jne
mov
pushf
mov
in
or
jns
inc
adc
dec
sub
pop
loopne
dec
jmp
cmpsb
or
sbb
mov
push
test
push
adc
push
in
sbb
mov
je
nop
jo
adc
bound
cmc
xchg
xchg
sbb
fcmovnb
cwtl
mov
mov
pop
inc
adc
out
shl
adc
mov
or
test
popa
iret
sbb
mov
xchg
sub
inc
or
out
push
pop
sbb
push
pop
shlb
pushf
andb
jnp
into
test
pop
fcmovnb
jae
xchg
cwtl
add
into
mov
addr16
scas
cld
mov
inc
mov
pushf
jmp
pusha
pusha
movl
call
jl
std
dec
inc
fildll
popa
ds
fisubrl
outsb
xor
pusha
ss
cld
loop
adcb
ret
in
das
xor
mov
dec
fdivl
and
jg
sti
rolb
xlat
lea
inc
inc
out
sub
mov
mov
and
in
pop
adc
ljmp
add
jo
cld
and
pop
popa
inc
or
xchg
xor
pop
les
inc
pop
inc
scas
loope
in
insb
ljmp
dec
sub
inc
mov
call
jl
movl
pushf
movl
push
pushl
pushl
pusha
lea
jmp
ja
aaa
xchg
jp
xor
pop
cmp
es
cmp
jmp
aad
push
test
out
insb
cld
ss
pop
inc
jnp
outsl
adc
add
cli
adc
in
jbe
jnp
data16
sub
xor
std
loop
jnp
or
adc
jge
hlt
mov
mov
add
mov
scas
insl
mov
sub
outsb
stos
shr
adc
out
add
lods
hlt
in
xchg
shrl
push
jle
sub
pop
daa
sub
es
shrl
jmp
nop
stc
dec
adc
icebp
jp
scas
push
push
and
cmp
cld
xor
dec
or
stos
mov
sar
pop
push
and
sub
outsl
andb
or
or
inc
mov
inc
and
adc
shrb
fs
jmp
jecxz
jg
imul
cmp
cmp
outsl
xor
pop
inc
push
push
test
push
in
and
xchg
dec
negb
fsubl
pop
imul
adc
push
cmp
rcr
mov
jmp
cltd
jbe
fisttps
inc
hlt
lds
inc
ss
sbb
leave
mov
xchg
push
push
test
in
cmp
into
sub
inc
push
mov
in
and
in
xor
cltd
xor
in
jmp
sbb
pushf
mov
pop
fs
or
cwtl
das
out
sbb
aaa
adc
add
ja
sub
xlat
inc
mov
movl
pusha
movl
pushf
movl
pushf
pushl
push
lea
jmp
push
data16
push
fwait
loopne
test
xchg
mov
and
les
dec
or
sub
fwait
sbb
insb
adc
out
jb,pt
mov
sub
jmp
mov
imul
roll
sub
inc
push
flds
shrl
mov
mov
pop
or
adc
std
es
in
mov
mov
push
ret
sub
or
or
cltd
add
andl
sbb
xchg
lret
inc
sbb
or
dec
jmp
lods
jg
jecxz
mov
jae
or
mov
jo
cmc
jmp
push
scas
mov
fwait
adc
out
lods
jb
add
outsb
xor
inc
adc
rcll
iret
push
xchg
mov
je
into
sti
dec
lods
adc
or
inc
sti
lods
xchg
sbb
gs
lret
adc
push
repz
fs
jmp
les
inc
add
xor
inc
fistps
loope
insb
xchg
mov
icebp
rclb
ret
call
insl
pop
fimull
jle,pt
popl
add
fisttps
not
push
sub
rclb
cli
mov
imul
ljmp
popl
mov
and
ret
jmp
stos
add
int
pusha
cmp
mov
cmp
xor
rcrb
movsb
icebp
stos
or
mov
daa
and
mov
andb
cld
adc
dec
push
lcall
inc
pop
mov
cmp
or
jle
mov
imul
ss
push
dec
jecxz
dec
pop
in
or
xor
xchg
in
imul
popf
bound
outsl
and
pop
lods
divl
cmp
andb
insb
ret
sbb
fistl
fsub
ljmp
mov
pusha
je
cmpb
mov
mov
push
mov
pop
sar
mov
and
sub
mov
pop
and
lcall
rcrb
inc
mov
jmp
mov
scas
int3
adc
test
add
mov
icebp
lods
lret
loop
xchg
das
push
add
into
gs
and
pop
frstor
aaa
mov
mov
jno
arpl
xor
adc
cmovs
push
jmp
lcall
sbb
ss
stc
mov
pusha
jle
cmp
out
sub
arpl
push
out
dec
push
fildl
pushf
pushf
scas
mov
pushf
movb
movl
lea
jns
push
pusha
movl
pusha
mov
movw
push
lea
jmp
pushl
movl
pusha
push
push
movl
pushf
pushf
lea
jmp
movsb
dec
adc
popa
or
fwait
pop
mov
testb
dec
pop
movsb
lock
test
in
pop
mov
movsb
add
mov
cs
push
cmp
dec
adc
insl
jb
or
int3
js
dec
lret
mov
cmp
jnp
mov
and
rolb
fwait
insl
lahf
ja
add
iret
cmp
push
pushf
mov
lea
jmp
psubq
addr16
bswap
lret
mov
xchg
lret
mov
je
clc
cltd
mov
and
enter
xor
shl
xchg
sub
scas
mov
dec
push
je
stos
aaa
fildl
into
shl
push
xor
and
cmp
adc
push
lcall
add
xchg
shrl
cltd
and
imul
push
inc
mov
outsb
xlat
pusha
into
push
outsl
adc
jno
cltd
shrl
mov
xchg
xor
add
enter
jae
add
mov
jmp
pop
dec
movsb
push
pop
cwtl
out
pusha
outsl
cmp
movsl
icebp
inc
das
dec
negl
leave
rcrb
test
jg
sub
out
aas
mov
aad
inc
mov
push
xchg
push
clc
sbb
push
inc
sbb
inc
cmc
mov
inc
and
dec
hlt
repz
fidivrs
dec
lret
loopne
mov
lea
test
mov
test
orb
push
or
dec
sub
xor
and
or
jg
xlat
cmc
sbb
dec
sub
outsl
or
sbb
fwait
sub
mov
loop
loope
pop
das
mov
inc
int
movsb
push
xchg
bound
sub
popa
xchg
rol
jno
mov
fwait
icebp
test
fcmovb
mov
push
mov
les
adc
rcr
movsl
add
lret
cltd
sbb
jge
rorl
and
cltd
jp
popa
inc
outsl
sahf
pusha
js
xchg
xlat
jge
aaa
jge
out
test
aaa
ja
fnstenv
pop
or
mov
inc
pop
fldl
loop
mov
jae
shlb
leave
mov
lea
jns
xlat
push
dec
push
cmp
and
fnstsw
int
mov
test
cmp
sub
in
sub
or
inc
mov
imul
mov
stos
rcll
punpckhbw
pop
aas
push
repnz
sub
das
fsubl
lret
inc
in
lea
test
sub
sub
sarb
or
nop
jle
fildll
out
adc
mov
sti
mov
cmc
xor
movsb
out
hlt
fs
lcall
out
push
pusha
cmp
notl
xor
cltd
mov
out
push
pushf
call
cld
shlb
mov
outsl
or
cmpb
and
in
mov
es
ljmp
les
mov
push
mov
mov
jns
jecxz
sahf
pop
jae
aas
or
lcall
or
pop
sbb
and
dec
pop
loopne
push
pop
movsl
mov
xchg
mov
and
je
adc
push
popa
push
mov
jnp
inc
pop
es
sbb
mov
mov
shlb
mov
pop
fwait
pop
test
aaa
xor
push
lds
aas
xor
shl
mov
icebp
xchg
xor
xchg
jp
out
dec
jle
inc
add
or
mov
loope
fsubr
add
add
jmp
pusha
pusha
mov
push
movl
push
jmp
mov
mov
and
call
pushf
loop
sbb
dec
pop
cmovo
les
subb
fwait
outsb
or
loop
ficoml
sti
shrb
sbb
jnp
sbbb
push
or
mov
lcall
mov
pop
imul
loopne
inc
sbb
inc
mov
mov
jmp
jge
jne
lret
imul
test
mov
ja
lahf
cmp
movsb
or
sbb
push
cmp
insl
or
test
mov
clc
test
mov
jo
inc
or
push
ud1
movsb
aad
inc
mov
inc
and
jmp
jnp
cltd
or
inc
sbb
add
cmp
push
add
inc
pop
movsl
or
cmpsl
xorb
push
shlb
pop
sbb
inc
inc
aad
mov
nop
pop
or
inc
xchg
mov
rcrb
jl
pop
jp
shlb
or
push
inc
fstpl
or
sbb
sbb
xchg
sub
push
sbb
movsl
repnz
sub
mov
mov
jbe
jno
movsl
mov
dec
push
stos
and
sbb
and
or
mov
jb
push
mov
jl
aaa
mov
movsb
jb
aam
mov
mov
loope
xchg
jle
jb
fs
imul
imul
pop
lock
ret
es
mov
sbb
mov
jmp
scas
out
dec
inc
mov
mov
mov
ret
sarl
cmp
lods
sub
test
cmc
jns
bound
mov
das
push
adc
ja
jae
dec
scas
cld
es
jp
lds
or
arpl
lock
in
sbb
inc
enter
loope
ficoms
push
and
push
and
and
mov
clc
jnp
dec
jmp
inc
test
push
mov
add
sbb
cltd
mov
mov
sbb
xor
inc
sub
xchg
cwtl
adc
fwait
sub
lds
sahf
and
mov
or
mov
push
test
lods
sbb
pop
std
mov
adc
inc
jae
insb
dec
inc
mov
leave
data16
inc
js,pn
outsb
rcll
mov
cltd
bnd
decb
and
out
adc
lret
in
jb
mov
mov
pop
inc
sti
call
mov
dec
addr16
add
dec
int
ds
adc
cmpsl
push
sub
imul
js
scas
mov
jmp
rcll
add
push
mov
xchg
mov
popa
int
inc
sub
rclb
ret
add
repnz
pop
loopne
mov
cwtl
es
mov
inc
std
adc
rcrl
leave
or
or
imul
sub
xor
imul
push
jbe
sub
mov
lds
cmp
into
je
lret
adc
inc
scas
test
and
mov
aad
xor
je
inc
sbb
sbb
inc
mov
inc
cmp
push
mov
idivl
sbb
test
pushf
and
pop
jle
mov
test
and
push
loope
dec
frstor
stos
xchg
mov
lods
pop
push
cmp
les
xor
out
enter
test
sub
sahf
int
xor
mov
add
mov
mov
xor
mov
mov
xor
lret
mov
inc
fs
cmp
and
jno
repnz
test
mov
scas
rcrb
popf
mov
pushf
inc
rorb
jecxz
xchg
mov
fidivs
sti
jp
mov
push
xchg
bound
jmp
repnz
iret
in
adc
mulb
out
bound
push
leave
xor
mov
mov
lret
test
push
push
xchg
add
out
adc
jge
das
jo
js
call
sub
jbe
sti
dec
and
shl
cmp
jecxz
test
nop
ret
pop
cwtl
gs
dec
lock
popf
and
mov
push
dec
outsb
or
ss
jae
cmpsl
lods
mov
add
sbb
imul
inc
mov
into
jp
sbb
ja
cmp
sbb
adc
mov
mov
int3
mov
and
or
cmp
lret
xlat
icebp
push
push
test
and
das
popf
popa
xchg
jns
cvttps2pi
jle
aam
sbb
ret
mov
sub
adc
test
mov
loope
insl
sbb
jmp
or
xchg
aaa
jl
popa
mov
cmpsb
dec
push
sbb
mov
in
pop
jge
mov
clc
jne
fisttps
shrb
jno
movsl
jne
mov
addl
pop
movl
xor
sub
outsl
int
mov
xor
faddl
int3
jno
jg
xor
inc
cli
mov
arpl
or
lcall
mov
mov
loop
pusha
pushf
movl
lea
jns
pusha
pushf
pushf
movl
mov
lea
jmp
aam
mov
iret
xor
fisubrs
dec
ret
jne
cltd
das
pop
jle
repnz
pop
cs
or
je
jl
inc
ja
imul
ret
dec
and
push
rclb
and
xor
pop
lods
push
test
fdivrl
dec
test
ret
mov
or
je
inc
mov
repz
negb
ror
jbe
dec
cs
jecxz
adc
push
or
mov
dec
fld
in
sbb
pop
jmp
pop
shll
add
dec
stos
or
popf
add
scas
inc
lcall
adcl
and
bound
jle
adc
fmuls
xorl
nop
cmp
push
cld
xor
out
jmp
jg
inc
mov
inc
and
and
pusha
push
lea
jmp
xchg
fisubl
sbb
icebp
loope
pop
push
mov
ret
cwtl
cli
in
gs
out
xchg
jno
or
test
movsl
cltd
mov
sarb
mov
movsb
int3
pop
cmp
data16
pop
ljmp
push
xor
dec
push
cmp
sub
bound
inc
mov
inc
and
mov
dec
adc
mov
cmp
negb
aas
outsl
or
sub
and
jns
cltd
xchg
fbstp
les
sub
inc
mov
mov
xchg
xor
push
leave
cli
loop
mov
mov
sub
jle
adc
jl
stos
sti
fwait
mov
inc
sbb
ja
imul
shll
aaa
sbb
test
mov
mov
gs
sub
cmpsl
jo
mov
addr16
insl
and
aaa
gs
enter
adcl
sub
adc
fldl
ret
push
test
fwait
hlt
mov
push
flds
xchg
dec
fidivrs
push
popa
test
jmp
cmp
sbb
jge
cld
fstpt
lret
js
push
cwtl
jmp
insl
sbbb
cwtl
test
lret
loop
mov
mov
pop
add
mov
sti
iret
aas
pop
sub
xor
cmp
inc
mov
int
or
out
cmp
sbb
ljmp
dec
xor
jno
adc
jns
test
loop
cmp
fsubl
dec
jmp
pusha
xor
sbb
mov
pushf
cmp
push
mov
rorb
loop
sub
jae
inc
and
aam
mov
or
push
mov
add
loopne
sub
popa
loopne
iret
pop
or
inc
xor
in
movsb
and
aas
ja
mov
adc
loope
xchg
xor
pop
subl
dec
stos
fs
push
cwtl
int
mov
dec
and
dec
rep
incl
test
sbb
and
fiaddl
nop
addr16
pushf
mov
movw
movl
pusha
movw
movl
pushf
lea
jmp
xor
sbbl
aas
cmc
les
sub
mov
cmp
jne
cltd
punpckhdq
add
pushf
stc
pusha
pop
inc
pop
jecxz
mov
pop
sbb
inc
bound
pop
sarb
out
cmp
jbe
mov
pop
js
inc
mov
inc
and
push
xchg
fistps
mov
jle
push
lea
jmp
fwait
mov
fstpt
mov
dec
or
inc
incb
xchg
pop
loope
xor
lahf
in
sahf
jl
ljmp
fucomi
add
inc
in
xchg
cltd
inc
cmp
mov
imul
inc
aam
add
das
lds
add
adc
dec
testb
movd
pop
xor
sbb
mov
or
ficoms
xor
scas
mov
int3
mov
cmpsl
fisttps
mov
mov
mov
es
je
divb
xchg
imul
mov
mov
push
push
cmp
jne
inc
mov
pop
movsl
jmp
jae
sub
inc
or
outsl
sbb
add
test
wrmsr
xchg
rcll
enter
add
aaa
jb
fst
sbb
xor
or
loop
fsubrl
mov
js
mov
shlb
out
and
paddd
adc
sbb
push
mulps
push
push
cmp
std
stos
sbb
add
jmp
jmp
jae
lcall
mov
and
loopne
std
clc
push
pop
sbb
mov
cld
fwait
test
aam
shll
or
pusha
sub
std
jmp
jp
mov
ret
inc
pop
insl
add
inc
mov
adc
pusha
movl
pusha
movl
movb
pushl
lea
jmp
pushf
movl
pusha
mov
pushl
movl
movb
lea
jmp
xchg
inc
sbb
push
or
or
dec
into
pushf
cmp
scas
cli
loope
mov
inc
ss
in
pop
jns
dec
jle
add
sbb
inc
ja
xchg
inc
lds
lcall
push
mov
sarl
mov
cltd
pop
add
imul
or
pop
dec
mov
sub
or
mov
ret
inc
pop
and
or
insl
jno
inc
pop
shrb
xor
rcrl
pop
inc
mov
lock
push
not
vpxor
int
roll
add
mov
mov
sbb
dec
scas
jecxz
imul
jmp
adc
push
or
test
outsl
and
int3
and
sbb
ds
mov
sub
arpl
pop
in
adc
lock
stos
loopne
mov
ss
jnp
pop
loop
inc
lret
loop
add
cmp
pop
pop
sbb
es
adc
stos
sbb
jecxz
imulb
adc
in
movsb
mov
into
cmp
and
and
mov
push
inc
mov
mov
dec
xor
sbb
pop
cmp
pop
sbb
add
and
add
mov
in
into
or
int
jecxz
pavgw
push
and
dec
leave
xlat
decl
into
shlb
adc
push
rcll
pushf
xchg
cmc
sub
fwait
test
in
stos
pop
jmp
or
xor
push
mov
fstpt
sbb
shrd
stos
xchg
sub
mov
jmp
sub
jo
xchg
aam
shl
mov
inc
pop
test
mov
sub
push
out
ret
inc
pop
push
cmp
pop
xchg
add
mov
sub
push
imul
mov
sahf
fs
mov
inc
shr
shll
adc
test
add
pop
cmc
stos
add
adc
mov
lahf
popa
xor
mov
cmp
or
pcmpgtw
mov
popf
outsl
cmp
add
ds
cmp
sbb
jno
and
pop
xchg
in
pop
dec
fcoms
pop
jns
cs
ret
daa
jns
inc
pop
jno
in
cmpsl
sbb
xor
mov
pop
sub
mov
in
push
adc
xor
je
test
jno
insb
push
andb
dec
test
dec
pop
mov
cmc
fbstp
stos
call
mov
mov
push
mov
shrl
adc
xchg
divb
int
mov
es
dec
jae
nop
xor
sub
sbb
xchg
mov
out
jnp
or
daa
iret
call
adc
das
mov
or
adc
idivl
pusha
movl
pusha
pushl
movl
pushf
movw
lea
jmp
pop
push
xor
cmp
mov
pop
pop
lahf
inc
repz
psubsw
add
stos
arpl
addl
repnz
mov
mov
rclb
adc
fldenv
jp
cmpsl
xchg
pop
popf
ficoms
sbb
adc
ret
mov
in
sub
pop
repnz
adc
neg
sbb
das
add
jmp
das
or
scas
cltd
stos
shlb
sbb
mov
cmc
cmp
pop
test
mov
sbbb
mov
ret
dec
sbb
cmp
push
or
sarb
xchg
scas
loopne
inc
cmp
push
popa
mov
jmp
bound
push
sub
or
inc
sub
ja
fcmovnb
out
dec
pop
pusha
jge
xchg
aam
out
out
cmp
stc
inc
mov
mov
push
inc
jp
imul
jb
mov
sti
fimull
pop
fadds
mov
and
fmull
lods
sub
out
cltd
cmp
pop
pop
std
jmp
popf
fwait
push
add
sbb
push
jmp
dec
xchg
fwait
mov
mov
inc
cmp
xchg
test
or
out
in
lret
or
test
or
push
jp
mov
fisubl
sahf
dec
jge
dec
iret
mov
into
out
or
xchg
and
xchg
mov
outsl
dec
dec
sarb
std
add
imul
in
jae
adc
mov
jbe
adc
js
jp,pn
add
add
js
test
pusha
xor
xchg
mov
push
js
jge
mov
aad
push
shll
push
pop
insb
mov
xor
shr
inc
jns
sub
xor
adc
sti
add
inc
fldenv
cli
pop
call
mov
sub
shrl
movsl
outsl
out
xor
mov
stos
dec
out
sub
mov
sbb
ror
lock
sub
pop
inc
out
or
sub
mov
mov
mov
sub
jnp
adc
xlat
jbe
push
sbb
lret
xchg
ret
lcall
adc
leave
push
add
pop
sti
fdivrs
insb
mov
pop
add
int3
xchg
leave
jg
pop
packsswb
jg
and
mov
imul
dec
lock
mov
shlb
inc
mov
movb
movl
pushf
movl
push
pusha
pushf
pushf
lea
jmp
jbe
add
lods
cmp
cltd
scas
mov
mov
sbb
mov
pop
add
mov
pop
sbb
fsts
stc
fidivrs
dec
outsb
int
repnz
jb
in
mov
loopne
jae
add
imul
cmovp
jp
or
jl
fidivl
jb
rcr
std
xchg
lcall
or
mov
xchg
clc
testb
and
xchg
in
inc
add
push
mov
jmp
mov
iret
sub
add
dec
xor
sub
aas
push
lods
mov
out
sarb
mov
mov
add
cmp
rorb
aaa
mov
xor
mov
icebp
pop
jge
ret
mov
mov
enter
xchg
dec
xor
push
rclb
mov
fscale
pushl
xor
adc
test
enter
repnz
jae
sub
sahf
or
faddl
ficoml
xchg
in
dec
dec
bound
add
mov
sbb
or
sbb
repz
cmp
cmpsb
inc
fs
stos
dec
insl
insb
in
sub
movsl
test
jo
movsl
inc
mov
loope
jmp
xchg
pop
xor
dec
aam
aaa
mov
or
mov
jb
lea
dec
and
addr16
lret
lods
adc
adc
inc
mov
jmp
in
dec
and
push
shll
gs
adc
scas
dec
mov
mov
and
and
xlat
andb
adc
or
pop
sbb
popa
cld
lods
in
mov
pop
inc
mov
and
inc
dec
jecxz
add
fwait
push
cmpl
adc
loop
mov
or
pop
inc
mov
xor
and
mov
xchg
popa
lea
sbb
jge
and
fiadds
stc
out
push
in
loop
xor
inc
leave
mov
jns
insb
adc
aad
cld
xchg
add
test
dec
cld
call
or
cmp
push
xor
jp
mov
aam
dec
fdivl
mov
lods
cld
sub
jl
outsb
ret
cmp
imul
cmp
mov
lods
jmp
std
sbbl
into
and
sub
xor
cvtps2pd
dec
add
inc
mov
jmp
test
mov
and
jmp
clc
inc
leave
inc
ss
daa
jp
pop
in
sbbl
pop
jl
mov
add
mov
stos
iret
stos
test
push
and
mov
pop
adcb
jns
rcll
sbb
fbstp
xchg
dec
push
xchg
cltd
cwtl
sbb
cs
adc
pop
lods
jecxz
ds
bound
adc
fstpl
bound
imul
inc
std
jmp
and
mov
clc
in
test
pop
out
insl
dec
mov
sub
jp
xor
adc
cwtl
aam
fsubrl
jg
sub
rcl
in
xlat
push
test
add
mov
lds
jnp
mov
mov
fwait
or
mov
or
icebp
les
loop
or
fs
mov
push
inc
push
es
push
in
mov
jno
add
inc
les
fdivl
pop
das
repz
pop
jbe
xor
mov
popa
aaa
sub
and
adc
xchg
shl
inc
sub
stos
and
inc
mov
inc
stos
jmp
push
jmp
cmp
inc
cmp
scas
add
cmp
cwtl
push
into
fdivr
jle
int3
mov
pop
in
std
std
pop
xlat
sti
pop
adc
lods
sbb
lods
test
lahf
in
cmpsb
sti
fimull
add
sbb
enter
xchg
daa
mov
in
aam
lods
repz
sub
inc
mov
inc
and
xorb
leave
jmp
cmp
aad
mov
repz
cwtl
enter
es
popf
out
or
imul
hlt
lret
xlat
sub
or
call
sub
stos
sahf
clc
xchg
and
adc
shll
in
xlat
inc
popa
stos
mov
add
mov
adc
pop
xor
inc
mov
pop
sub
iret
ljmp
cwtl
rorl
mov
push
jo
mov
push
sub
inc
push
insl
mov
add
fists
mov
std
push
or
fidivrs
sub
jmp
xchg
push
aas
mov
imul
jae
shll
sub
jno
inc
sub
stc
push
test
xor
push
sbb
pop
inc
sub
inc
pop
mov
mov
push
pop
icebp
add
das
adc
xor
cmp
out
mov
es
icebp
jecxz
sahf
insl
cmp
push
or
push
inc
mov
mov
push
mov
push
add
xchg
leave
jnp
imul
or
clc
fistpl
outsb
dec
lret
or
or
mov
lea
xchg
pop
cltd
inc
ss
into
mov
mov
mov
xlat
leave
cltd
mov
into
adc
pop
inc
rclb
inc
fldl
push
pop
jecxz
xor
jne
mov
inc
mov
and
mov
lret
sbb
sbb
jl
cwtl
flds
cli
je
dec
sbb
push
aam
add
insl
clc
pop
inc
jno
mov
pop
and
dec
aam
or
dec
lock
rcrb
sbb
adc
in
nop
dec
ror
je
adc
xchg
insl
jne
pop
inc
rcll
mov
loopne
adc
in
xchg
fs
enter
adc
cli
arpl
jo
sbb
insb
or
pop
xor
or
std
mov
or
pop
xchg
xor
pop
xor
push
sub
daa
scas
shrl
xor
sahf
outsb
je
xchg
and
inc
mov
into
jp
adc
inc
bound
push
cmovae
cmpsl
or
jne
shlb
mov
sbb
jecxz
add
push
hlt
xchg
bound
pop
push
dec
cmp
pop
inc
cmp
cmp
movsb
mov
mov
les
pop
mov
jg
xchg
test
dec
lds
movw
call
push
movl
movl
push
push
push
lea
jmp
mov
push
stos
xchg
sbb
xchg
hlt
inc
xor
mov
stos
mov
and
fmul
pop
push
xor
dec
test
cmpsl
xchg
pop
or
imul
jge
lods
xchg
cltd
pop
push
sub
gs
mov
imul
push
ljmp
out
out
jl
pop
mov
andl
mov
sbbl
rcrl
cmp
into
enter
adc
lret
lret
lahf
xor
pushf
jns
stc
lock
jae
lods
mov
inc
test
mov
mov
sbb
xchg
cmp
and
or
fld
inc
in
fnstcw
cs
lret
inc
shlb
sbb
ds
mov
gs
popl
pop
pop
xlat
inc
shrb
add
popa
xchg
fcompp
insb
inc
outsb
ljmp
lcall
mov
cwtl
lods
movsb
cs
push
cmpsb
jmp
mov
push
pusha
mov
dec
shlb
mov
jmp
xchg
and
xchg
cmp
sub
mov
pop
dec
xchg
fcomps
lret
loope
cmc
icebp
push
jno
mov
int3
and
cmp
inc
push
xchg
out
mov
ljmp
fbld
mov
fisttpll
mov
xchg
stc
push
inc
mov
gs
sub
aas
divb
scas
mulb
idivb
jne
mov
lret
jmp
mov
call
adc
test
lahf
jo
daa
mov
and
cmp
pop
jle
adc
inc
shlb
push
gs
jmp
insb
dec
sbb
mov
sbb
aam
rsm
repnz
inc
mov
dec
mov
inc
and
pusha
int3
dec
adc
fs
jmp
inc
mov
mov
movsb
outsl
inc
sbb
adc
sbb
js
xchg
or
mov
mov
push
call
out
dec
das
jae
std
adc
incl
jne
pop
sahf
call
adc
jno
negb
js
outsl
loop
or
outsb
and
leave
dec
in
mov
sub
jno
push
sub
shll
dec
arpl
pop
cmp
mov
sbb
mov
out
sti
pusha
daa
shrl
popa
and
mov
mov
jns
fcmovnbe
mov
and
lock
jno
mov
push
inc
pusha
pushf
call
movl
pushf
pushl
lea
jmp
aad
fwait
xor
andl
pop
push
pop
cmp
and
fdivrl
jl
xor
test
sbbb
lock
adc
mov
xchg
subl
repnz
and
jo
gs
xchg
fidivrl
and
insl
ja
nop
and
mov
xchg
out
cmp
jge
addr16
push
jns
push
pushf
mov
pushl
lea
jmp
movl
jmp
sbb
ret
mov
mov
pop
les
aaa
xor
cwtl
or
mov
add
sbb
movsl
push
popa
mov
push
sub
mov
call
mov
jl
popa
sbb
mov
sbbl
sbb
imul
or
mov
adc
inc
lcall
cmp
xlat
jno
ret
loopne
mov
popf
xor
insl
and
fwait
stc
inc
cmp
sub
and
jecxz
adc
rcr
mov
mov
inc
aad
inc
lods
ja
mov
cmc
add
lret
adc
or
mov
lcall
push
fdivrs
test
ja
in
pop
insl
jmp
shr
mov
mov
inc
sbb
cltd
sbb
or
add
add
inc
mov
sahf
or
sbb
test
jnp
mov
adc
push
and
insb
xchg
xchg
scas
imull
stc
pop
int3
shrl
xchg
mov
sahf
mov
sub
mov
cmp
mov
imul
jbe
sbb
inc
cltd
and
jmp
push
imul
or
mov
sub
inc
push
dec
or
int3
inc
mov
gs
adc
pop
int
cmp
insl
fcomps
xor
cmpsb
sbb
stc
test
inc
sbb
cmp
and
add
fdivr
lahf
and
mov
andb
movsb
call
fbstp
jge
sub
adc
jb
fbld
cmp
test
pusha
mov
in
push
mov
test
mov
pushf
xchg
and
adc
push
mov
pop
sahf
ret
das
cli
loope
and
mov
outsb
xor
inc
rcrb
lds
dec
jb
pop
mov
mov
cmp
jg
push
loop
pop
out
sub
jle
das
mov
sub
jl
mov
popa
fildl
jl
adc
adc
jb
aad
pop
shrb
mov
cmc
xchg
fcoml
inc
and
inc
mov
xor
rolb
add
mov
inc
mov
sbb
sbb
and
mov
roll
cli
or
mulb
in
jbe
sbb
dec
or
jl
or
bound
or
stos
lret
ror
ds
pop
int
mov
loop
or
mov
jae
sarl
mov
adc
or
mov
push
popa
fwait
in
fistps
out
inc
mov
mov
pop
mov
push
clc
movsb
iret
mov
or
inc
mov
xor
jle
dec
imul
lahf
pop
sbb
aad
popa
mov
sbb
sti
mov
sub
add
insb
sti
fstpt
add
ljmp
cmp
push
je
lods
push
fdivp
mov
nop
xor
jmp
mov
ffree
es
inc
out
sahf
pop
mov
cli
stc
cmp
jo
js
xor
inc
data16
cmpsl
insb
rolb
xchg
cmp
push
jl
pop
pop
adc
mov
mov
sti
pop
fiaddl
mov
stos
aaa
fdivrs
mov
je
cltd
sbb
mov
add
push
cmp
xchg
mov
pop
jmp
out
mov
xchg
lret
test
dec
lods
icebp
loope
xor
and
jle
pop
and
sub
rcrb
pop
mov
and
mov
jb
pop
ret
cmpsb
sub
shrl
sbb
popf
xchg
inc
cli
inc
jno
push
fs
fs
sub
fsubl
add
mov
pop
negb
sbb
cmpsl
cmc
out
dec
push
adc
xor
cmpb
pop
inc
ret
lods
das
inc
sbb
mov
inc
pop
fldl
push
pop
je
cmpsl
push
addb
sub
sbb
pusha
inc
mov
jmp
fcomi
or
adc
pushf
into
shll
inc
mov
xchg
mov
out
push
test
shll
lahf
and
in
jb
mov
pop
divl
jno
or
mov
mov
mov
mov
pushf
enter
adc
bound
xor
jge
mov
push
mov
in
clc
mov
jmp
sbb
and
mov
fsts
push
ljmp
lods
out
arpl
popf
jbe
pushf
in
sbbl
cwtl
pop
mov
aas
leave
sub
sbb
xor
test
mov
push
cmp
clc
sahf
lret
jne
icebp
mov
jg
lods
js
lds
cli
sbb
xchg
push
cmpsl
sbb
clc
inc
mov
mov
movb
movl
pusha
pusha
movl
pushl
pushf
pushf
pushf
lea
jmp
push
movl
jmp
call
pushf
movl
jmp
xor
jbe
jecxz
jnp
fnstenv
clc
mov
mov
pusha
xor
mov
xorl
mov
outsl
mov
cltd
fdivrs
and
ret
push
xor
mov
movaps
mov
shlb
mov
cld
imul
fs
cmp
addr16
mov
jmp
mov
sbb
ret
jp
dec
or
mov
test
cmp
aad
repnz
es
and
jae
loop
add
xchg
lock
ret
pushf
insl
dec
stc
pushl
pop
pop
je
sbb
add
popw
dec
sub
mov
adc
clc
bound
xchg
jl
push
lock
mov
push
mov
or
je
mov
jmp
pop
mov
imul
adc
push
jb
sbb
dec
mul
sbb
movups
dec
sub
inc
mov
rcl
or
mov
lock
mov
bound
jns
xchg
lret
sahf
and
test
xor
leave
ret
inc
fadd
es
jo
test
scas
int
icebp
mov
mov
aaa
divl
xor
jns
icebp
sbb
xor
pop
mov
movsl
rclb
inc
mov
add
call
sti
es
dec
aaa
lods
dec
lods
or
pusha
pop
or
cli
jnp
add
ss
ja
in
fcoml
push
mov
jge
or
cmp
xchg
sub
fnstsw
leave
clc
cli
dec
xor
mov
xor
pop
mov
sbb
andl
or
xor
lods
and
cmp
cli
mov
adc
ret
mov
inc
xchg
push
out
shlb
xchg
mov
or
sbb
movsb
mov
xchg
les
clc
ret
jne
imul
pushf
jmp
and
jns
pusha
in
mov
cmpsb
cmc
dec
sbb
add
mov
cmp
arpl
in
mov
pop
in
xchg
stc
lahf
fildl
sub
sti
xchg
jl
mov
nop/reserved
rcrl
rorb
sub
or
imul
push
in
mov
cmp
pop
sarb
sub
mov
test
xor
push
inc
mov
inc
mull
jbe
imul
pusha
or
movsl
mov
push
mov
aaa
mov
fwait
movsl
jmp
lds
lret
rorb
jae
xchg
insb
mov
xlat
fwait
mov
cmc
test
scas
fcmovb
jg
mov
mov
inc
xchg
sbbl
cltd
lds
jp
dec
pushf
add
dec
and
popa
jecxz
sbb
shll
insb
lret
xor
push
movsb
loop
sbb
stc
rclb
jmp
sti
imulb
adc
push
sbb
mov
mov
arpl
xchg
lea
sbb
inc
lods
pop
pop
inc
cmp
into
sbb
jle
aam
mov
cmc
push
scas
xor
shr
rcrl
into
ss
mov
in
xchg
stc
cld
int
dec
inc
sahf
sub
aas
mov
sub
mov
mov
or
sbb
and
repz
xor
rolb
xorl
push
stos
inc
dec
mov
int3
imul
movsl
mov
pop
lcall
inc
xor
int3
sub
scas
punpckhwd
inc
cmp
fcmovne
outsl
mov
sahf
dec
insl
aam
popa
or
or
and
dec
xchg
shl
jns
or
stos
mov
adc
mov
cmp
outsb
push
inc
loopne
loop
popf
push
and
cmpsl
int
loope
xchg
scas
pop
jo
stc
add
adc
and
xor
adcl
pop
mov
sbb
jle
push
dec
adc
dec
lcall
sub
adc
adc
push
dec
mov
dec
cmc
mov
std
cltd
test
or
ss
push
mov
pushf
jp
std
cmp
jmp
inc
stos
inc
mov
lock
push
xchg
cs
dec
dec
xchg
in
mov
jg
insb
adc
data16
push
sbb
mov
out
in
addr16
rolb
mov
lahf
scas
stos
adc
mov
or
or
test
in
pusha
call
call
mov
sbb
cs
mov
cld
push
ret
mov
sahf
ret
mov
mov
pop
fisubrl
int
test
sti
xor
and
xchg
lods
mov
push
pop
ljmp
shl
push
mov
mov
push
inc
dec
in
data16
pop
cmc
push
sbb
jp
xchg
or
inc
jo
mov
movsl
jecxz
push
inc
pop
dec
push
sahf
out
lret
or
out
aas
cmp
dec
push
mov
and
cmp
and
inc
inc
inc
mov
mov
das
ror
cmpsl
push
into
ret
add
sub
inc
cmp
inc
bound
and
jmp
aaa
adc
orl
pop
mov
insl
les
push
mov
cmp
lds
jl
jae
and
lds
push
sbb
cmp
jbe
ja
inc
ds
cmp
jae
xchg
adc
or
jge
mov
out
jbe
push
imul
inc
mov
xlat
pop
js
dec
mov
mov
enter
repz
int
in
testb
pop
jp
and
mov
nop
jmp
nop
xchg
jl
mov
inc
adc
mov
or
inc
mov
and
mov
fcmovu
sbb
adcl
sbb
jle
jge
inc
mov
adc
rorb
pop
mov
rcll
gs
add
lcall
scas
xchg
cmp
sarl
mov
and
sub
inc
lock
inc
jmp
dec
into
cmp
idivb
test
xlat
xor
inc
mov
ficoms
rclb
push
or
cwtl
inc
mov
pop
mov
sbb
inc
push
add
pop
xlat
jne
and
cmp
jle
imul
xor
enter
push
sbb
out
mov
test
ret
jp
insb
cmc
leave
jae
cwtl
out
jno
les
stos
fldl
and
or
in
add
outsl
adc
ss
jnp
inc
mov
mov
xchg
adc
inc
xchg
outsb
mov
cmp
rcll
ret
mov
add
lods
cmp
subl
je
outsl
adc
mov
imul
mov
xor
sbb
rorb
in
cltd
imul
push
mov
icebp
inc
adc
aad
mov
add
into
sub
mov
outsl
cmp
outsl
adc
sub
ret
repnz
cmp
jl
pop
xor
in
or
inc
mov
push
lcall
aad
push
ret
in
cmc
jns
push
or
and
movsb
mov
sbb
pushf
add
push
loope
daa
jne
rcrl
or
shr
rcrb
leave
push
push
std
dec
pop
jno
xor
sbb
xor
adc
mov
adc
outsl
notb
xor
in
ds
mov
roll
movsb
jne
jnp
adc
es
lret
cmpsl
cli
cwtl
fstpt
hlt
mov
out
mov
addb
and
pushf
scas
dec
sbb
lahf
jmp
and
and
ret
mov
addl
lock
lret
push
pop
jns
gs
das
pop
clc
mov
fs
pop
xlat
loopne
adc
mov
sbbb
dec
iret
xor
leave
xchg
lahf
and
insl
stos
arpl
xchg
push
imul
outsb
fimuls
sub
push
add
cltd
popf
xchg
mov
lods
add
in
jnp
jne
leave
rclb
push
int
out
push
sbb
mov
loope
loop
or
push
hlt
jns
lret
sahf
ficoml
subl
lock
lds
mov
in
xlat
repnz
bound
out
jae
negw
mov
ror
cld
jl
mov
and
dec
adc
sar
mov
sbb
pop
push
aad
outsb
adc
std
cld
loopne
scas
mov
xchg
and
sub
clc
sbb
xchg
out
iret
mov
mov
ja
inc
sub
jmp
sub
cwtl
push
lods
mov
dec
enter
rcrl
lods
cmpsl
daa
adc
scas
jge
cli
fiadds
inc
jne
loopw
fcmovu
jle
cmpsb
leave
inc
sbb
dec
push
jmp
lock
sbb
sub
fbstp
pushf
jnp
rcr
js
clc
in
enter
nop
ljmp
pop
insb
and
test
fdivrs
ja
nop
mov
adc
sub
lods
inc
mov
mov
and
rorl
push
lods
lcall
push
popa
sbb
dec
dec
mov
jne
add
scas
xor
cmp
adc
mov
xchg
imulb
dec
arpl
pop
mov
mov
sbb
adcb
fisttpll
loope
shlb
xchg
fldl
pushl
aad
and
mov
sbb
jae
mov
aas
jle
repz
pop
adc
push
int
aas
xchg
add
mov
gs
sub
sti
les
out
or
mov
scas
mov
sarb
xor
fiadds
stos
inc
cmp
out
popw
lock
xchg
dec
dec
pusha
fsubr
mov
hlt
dec
cs
jmp
xchg
iret
mov
vshufps
pop
mov
clc
xchg
je
mov
inc
mov
shl
es
sarl
jle
outsl
rorb
xor
xchg
iret
xlat
xchg
popl
test
in
dec
mov
pop
add
dec
mov
out
inc
xchg
addr16
ss
scas
bound
push
and
cmp
jl
fidivs
xchg
and
jl
dec
aad
sbb
jae
nop
in
mov
aam
xor
mov
shlb
xchg
je
mov
fiaddl
dec
daa
sahf
jecxz
lds
bound
stc
les
adc
ret
push
pop
and
imul
mov
lahf
cmp
sub
in
xor
jg
lahf
int
sbb
je
scas
rcr
hlt
push
dec
lods
dec
lock
repnz
and
call
jg
subb
and
hlt
jnp
mov
and
into
aad
in
add
adc
out
mov
insb
out
leave
mov
dec
movsl
shrl
adc
pusha
repnz
inc
adc
es
loop
inc
mov
adc
movl
pushf
pushf
lea
jmp
fprem1
jb
pop
or
push
cltd
fldcw
ret
xchg
xor
push
xlat
icebp
push
jno
mov
int
push
clc
in
fimuls
loopne
jmp
pop
sti
mov
jmp
bound
popa
jns
dec
sahf
ljmp
in
movsl
xchg
out
add
daa
pop
push
sub
pushf
gs
cli
enter
mov
inc
mov
inc
push
jle
fdivs
xchg
mov
xchg
repz
cmc
push
and
mov
cld
movsb
test
jge
negb
push
inc
leave
and
in
mov
pop
pop
aas
sub
add
lods
push
out
popf
out
cwtl
notb
adc
aad
pushf
cmc
test
test
add
adc
insl
lods
mov
cwtl
push
sbb
stos
lret
mov
adc
xlat
in
pop
loop
ret
outsb
bound
rcrb
stos
enter
fcoml
push
lds
xchg
jae
in
fadd
and
movsl
sub
bound
or
mov
ret
mov
repnz
xor
pop
adc
imul
mov
and
ret
jb
test
and
mov
mov
jg
loope
cmpsb
stc
mov
in
ficomps
adcb
repnz
popf
xchg
jp
test
lahf
inc
out
pushf
ljmp
lods
sahf
into
insb
jl
inc
mov
shlb
pusha
add
push
xor
push
mov
xor
mov
cli
mov
aaa
cld
xor
dec
push
lret
jle
lret
outsb
inc
mov
xor
shl
pop
sbb
sar
hlt
pop
mov
clc
dec
jns,pn
mov
jecxz
jge
xorl
sahf
test
cwtl
add
mov
sub
je
or
or
push
ss
and
ss
cmp
push
mov
popa
or
lret
inc
cmp
pop
popf
mov
push
fiadds
icebp
in
loopne
ss
scas
mov
xor
shrb
adc
pop
movsb
lock
jo
mov
aad
pusha
movb
pushf
pusha
movl
pushf
pushf
movb
lea
jmp
pop
daa
xchg
cs
mov
xor
sub
mov
dec
adc
push
je
rcll
dec
fisubrs
push
xor
pusha
fdivrl
dec
insb
je
mov
nop
mov
push
in
xchg
repz
repz
insl
inc
adc
dec
push
mov
xor
jae
popl
mov
lcall
pop
dec
test
scas
test
repnz
cmc
or
pop
fisubrl
cmp
adc
stos
test
mov
mov
mov
mov
xchg
mov
sub
or
cmp
outsl
xchg
sub
sbb
arpl
ficomps
in
xor
stos
xlat
test
mov
push
push
outsb
inc
mov
negb
call
jmp
xchg
cmpsb
or
in
ret
stos
fadds
cmp
xorl
inc
jb
and
jb
pop
ss
call
lea
imul
ds
pushf
mov
and
lods
jb
into
cmpsl
orl
sti
sarl
call
add
mov
jne
add
pusha
and
icebp
mov
fbld
sub
scas
std
jo
aad
lods
cld
xchg
and
xor
das
or
lods
cld
sbb
sub
lods
mov
ret
or
out
mov
sbb
std
ja
and
sub
push
fxch
inc
mov
mov
and
lea
jmp
es
adc
dec
cld
aas
cltd
mov
xchg
xor
mov
jp
mov
push
push
adc
sub
and
aaa
outsl
ficoms
adc
out
jg
cmpl
pop
mov
lods
push
xor
roll
mov
mov
and
jp
stos
iret
test
xor
mov
gs
repz
ret
ret
movsl
jb
dec
adc
dec
xor
repz
in
xchg
mov
popa
add
cmp
negb
lods
stc
cmp
pusha
jb
psubusb
adc
fcomps
inc
adc
inc
pop
lock
cmp
ret
in
add
in
xlat
pusha
sbb
inc
mov
lock
pushf
adc
ja
mov
std
mov
in
mov
xchg
mov
movsl
adc
rorb
ret
inc
sub
mov
addr16
inc
mov
cmp
rorl
insb
pop
xor
mov
lods
icebp
mov
pushl
adc
jbe
cwtl
fwait
js,pt
sub
cmp
pop
inc
loopne
ret
jecxz
cld
rcl
push
jbe
and
insl
fidivrs
sub
mov
inc
mov
dec
jb
pop
dec
fxtract
outsl
xor
fsubrs
mov
std
out
xchg
iret
xchg
cltd
xchg
loop
adc
push
xchg
movaps
lods
inc
icebp
iret
dec
pop
adc
pushf
scas
mov
cmc
mov
add
rcl
cmp
cmp
dec
add
jg
adc
sbb
jae
adc
ljmp
jbe
cmp
dec
clc
mov
sbb
adc
cmp
xchg
sbb
or
jo
leave
test
mov
sahf
js
repz
dec
and
dec
mov
arpl
or
sbb
in
or
cmpsb
fidivrs
cmp
push
fistpl
or
or
inc
mov
pop
mov
cld
sbb
jae
loope
call
sti
mov
sub
imul
xor
add
xchg
jle
and
pop
adc
dec
pushf
jmp
cmp
call
fs
ret
push
ret
cmp
sbb
shll
push
push
call
jae
add
iret
pop
ja
inc
push
ja
ret
clc
pop
add
movsb
dec
xchg
mov
mov
sub
xlat
aam
xchg
mov
mov
rol
cmc
js
movsl
mov
test
shrb
mov
xchg
mov
shrb
inc
out
testb
pop
adc
dec
loopne
mov
out
inc
mov
ds
adc
adc
test
jnp
pushf
shlb
cmp
test
mov
test
fmuls
inc
xchg
lods
push
sbb
orl
loop
scas
inc
nop
popf
xchg
and
sti
mov
stos
cli
inc
cmp
push
xchg
ljmp
into
add
scas
sbb
mov
bound
outsl
sub
arpl
inc
push
mov
pop
xor
mov
gs
add
lahf
adc
movsb
mov
sub
aad
pop
aas
mov
mov
out
aam
dec
int3
cmp
ljmp
mov
out
sbb
jno
mov
aad
imul
cmp
les
lret
cmpb
mov
das
rcrb
and
xchg
enter
stos
ds
dec
jle
adc
dec
pop
clc
xor
xchg
loop
cmp
push
fistps
fidivs
lahf
and
xor
adc
fwait
ret
int3
adc
mov
or
jle
cmp
jl
jns
je
cmp
ss
and
ds
in
xor
lcall
lret
sbb
push
jne
out
es
xchg
and
adc
fdivs
add
fstps
jne
jnp
or
out
movsl
inc
adc
jle
or
shl
mov
testb
mov
call
shll
and
mov
addr16
dec
lods
inc
sahf
leave
push
lods
jecxz
jo
daa
out
sbb
adc
add
negl
rcr
or
and
repz
mov
and
subb
push
stc
mov
or
mov
lods
and
loop
mov
jno
lods
inc
ss
mov
add
jmp
pusha
cmpsb
lea
ret
out
sub
push
cli
lods
push
cmp
jge
jns
push
xor
add
call
aam
addr16
ds
cltd
jbe
cs
jmp
ljmp
dec
and
xchg
es
pop
sbb
inc
adc
sub
cs
data16
fiadds
xlat
into
dec
push
jno
lds
inc
or
and
fsubrs
inc
call
push
push
cli
call
pop
inc
ret
outsl
inc
data16
or
lock
ret
sub
rorl
dec
dec
hlt
pop
jo
xchg
js
jmp
mov
adc
fs
xlat
int
cmpsb
inc
mov
inc
ret
dec
rol
push
add
jmp
mov
sub
adc
fdivrs
aas
movl
mov
jnp
push
call
es
push
mov
and
push
mov
or
xchg
pop
inc
adc
paddsw
out
push
loopne
mov
mov
outsb
out
lods
xchg
mov
lret
fwait
xor
inc
mov
aaa
testb
cmpsb
jecxz
xchg
xchg
adc
sub
mov
pop
xor
push
in
sti
pop
mov
lret
cltd
mov
xor
mov
dec
gs
jg
insb
mov
mov
jno
push
stos
and
jae
xor
push
jo
dec
fbstp
pop
mov
sub
cli
scas
arpl
dec
add
xlat
imul
jge
ficompl
lds
or
and
aam
enter
adc
and
test
add
nop
push
call
rolb
and
push
aaa
lahf
mov
inc
or
push
out
cwtl
mov
in
mov
mov
loop
cmp
mov
lahf
push
ja
pop
sbb
and
cld
in
fisubs
fsubrs
loop
scas
mov
popa
ss
add
pushf
les
sbb
aas
push
pushf
pushf
lea
jmp
push
mov
out
loope
pop
cld
cld
sbb
push
sub
or
push
jnp
scas
fcmove
cmp
sbb
shll
test
add
adc
cmp
fdiv
stos
jle
cltd
daa
scas
rol
bound
pextrw
mov
sub
dec
fildl
lock
mov
add
add
and
pushf
push
iret
add
pushf
movb
movl
push
movw
push
pusha
lea
jmp
shl
jne
pop
mov
test
mov
or
or
push
xor
jp
fwait
pop
ret
dec
imul
pop
mov
arpl
les
push
hlt
repz
movl
or
cmp
inc
mov
xchg
aaa
jno
movsl
xor
mov
adc
gs
mov
push
push
cld
loopne
xor
cmpsb
mov
push
inc
sub
xor
pop
jno
mov
mov
popa
popa
inc
or
jle
sbb
scas
daa
lods
xchg
cmp
inc
rcrb
add
clc
mov
lods
xchg
fistpll
fyl2xp1
cwtl
and
lahf
cmc
xchg
iret
push
inc
mov
push
mov
popf
cmp
or
cmp
test
data16
sahf
sbb
aam
dec
cli
and
push
shlb
jg
mov
hlt
pusha
add
and
add
xchg
sbbb
es
jb
decb
inc
xchg
jbe
and
and
cmp
in
xchg
jnp
fistpl
cmpsl
idivl
shl
mov
in
cmpsb
sbb
and
xor
inc
fs
gs
out
fmuls
aaa
mov
mov
std
sysexit
lds
adc
jp
jge
mov
xor
or
les
mov
or
pop
stc
stos
mov
les
shl
cmp
mov
push
xor
stos
cmp
arpl
andl
inc
cmc
enter
xchg
fdivs
js
ror
xchg
loope
stos
dec
mov
loope
lods
dec
lret
cmp
test
xlat
sub
jecxz
test
mov
insl
push
mov
ret
out
mov
mov
xchg
ret
xor
push
inc
imul
test
ret
sbb
pop
jb
call
push
mov
fs
cmp
lds
outsl
ljmp
sub
lock
pushf
mov
mov
in
lahf
js
movsb
xchg
mov
clc
orl
into
es
popf
ss
xor
jl
sbb
pop
mov
jl
loop
sbb
xchg
jmp
addr16
cwtl
roll
rcll
shl
pop
inc
bound
and
push
in
ficomps
jmp
fs
xchg
shrd
insb
add
nop
mov
sti
inc
push
dec
jge
mov
aam
xchg
sub
inc
mov
xchg
test
ret
inc
mov
frstor
sbb
divb
jecxz
jo
mov
out
lcall
jbe
push
imul
inc
packuswb
mov
or
fs
lcall
push
cmp
pop
insl
pop
sbb
sti
in
pusha
cmp
mov
outsl
out
sbb
mov
fidivrs
das
xchg
stos
inc
mov
xor
mov
xchg
push
outsl
jecxz
rclb
into
inc
and
clc
push
je
mov
and
inc
roll
lods
inc
push
mov
jmp
sbb
jge
mov
mov
stc
inc
je
cmpb
cli
test
scas
out
xchg
mov
push
pop
cwtl
popa
insb
add
push
pop
jge
in
add
enter
mov
jmp
push
je
mull
movsb
mov
xchg
adc
sub
mov
lods
and
mov
fbstp
adc
outsb
cmc
out
loopne
mov
lods
int3
xchg
mov
loope
mov
add
jnp
add
push
ja
xchg
sub
xor
xchg
sti
sbb
es
pop
adc
mov
or
sbb
push
or
and
pop
jg
imul
push
xor
scas
jp
mov
or
jmp
mov
pop
nop
test
cmpsb
pop
xor
adc
sahf
mov
fdivrp
aaa
or
mov
add
jbe
je
or
mov
in
arpl
lock
test
aam
and
inc
dec
pop
leave
push
pop
outsl
or
sbb
push
inc
mov
mov
test
mov
repnz
and
xor
inc
lds
aam
fstps
jge
adc
loope
inc
push
shll
rclb
clc
stos
inc
or
shlb
ja
ror
out
pop
or
cwtl
bound
mov
pop
shl
dec
push
push
jae
jbe
rcrl
ljmp
fwait
lock
daa
mov
shlb
push
push
inc
xlat
dec
cld
cmp
sub
repz
test
jbe
jmp
addr16
lock
scas
dec
aas
decb
lea
sbbb
inc
lods
adc
sbb
mov
adcb
adc
incl
pop
mov
and
pop
xor
hlt
sbb
arpl
and
fstpt
lret
push
push
inc
mov
lock
or
mov
jle
cltd
daa
test
add
aas
and
shlb
rolb
or
jecxz
icebp
push
js
xor
insl
xchg
or
fstpl
lret
cld
and
or
data16
pop
shrl
mov
cmp
mov
pop
cmp
or
jb
jns
notl
lret
pop
in
add
rcr
movsb
fsubl
stos
mov
lret
inc
xor
cmpsb
sti
mov
and
sbb
jp
cld
jmp
rcrb
pop
adc
and
push
mov
ds
jle
adc
test
inc
mov
cmp
imul
push
push
subl
rcl
push
jp
movsb
xor
js
pop
in
outsl
out
inc
mov
push
inc
pushf
mov
lcall
gs
and
sbb
push
sub
fcmovnb
rolb
pop
and
repz
stc
jge
sahf
sbb
pop
fadds
fidivrs
aam
add
jns
loopne
push
or
call
push
clc
lretw
add
inc
mov
loope
jmp
movl
push
pushf
lea
jmp
call
imul
adc
xchg
fwait
lds
fildll
fstps
lret
loop
pusha
aam
mov
loopne
or
fsts
push
mov
jp
pop
jmp
daa
leave
and
icebp
outsl
divl
cmp
mov
inc
loope
xor
rclb
jns
or
fmulp
push
mov
and
pop
or
into
inc
mov
mov
push
std
imul
popa
aad
rcll
loopne
cmp
push
out
lret
adc
stos
or
dec
insl
or
int3
cmp
stos
jns
sbb
dec
and
add
mov
stc
cmp
mov
pop
pop
mov
divl
movsb
out
imul
inc
mov
popa
lods
sti
mov
in
sbb
add
cmp
ficomps
xchg
mov
dec
jb
pop
mov
lock
into
stc
xchg
cli
adc
push
push
sbb
imul
cmp
cmpsl
jo
push
out
aam
sbb
mov
in
shl
repz
sbb
cli
mov
lcall
or
jg
in
icebp
mov
dec
push
mov
adc
mov
jne
inc
xor
inc
mov
popa
pop
sar
movsb
loop
pop
dec
add
sbb
pusha
mov
sahf
lret
inc
mov
mov
xchg
scas
xchg
fwait
inc
sbb
fdivrl
inc
sub
jo
xor
mov
in
fcoml
xchg
mov
inc
jne
jno
push
rorl
in
gs
ds
mov
jg
fwait
mov
call
pop
shrb
inc
jecxz
add
mov
sub
cs
cltd
imul
icebp
scas
int
mov
clc
fsubs
subl
mov
sti
cwtl
ret
add
push
aas
fs
scas
jae
ja
lcall
in
sub
and
mov
pop
and
dec
or
xor
sub
aad
pop
pusha
adc
popa
pop
mov
dec
fdivs
pushf
mov
stos
dec
test
jecxz
js
mov
mov
movsl
enter
mov
pop
mov
or
in
popa
dec
stos
adc
jg
ret
mov
invlpg
fisubl
and
lds
sub
test
push
inc
add
test
rep
and
pop
pushf
shrb
stos
add
fwait
pop
aam
sbb
jo
mov
and
add
inc
adc
push
cmovge
into
inc
mov
scas
push
jmp
rclb
je
sub
mov
jmp
cwtl
in
add
shld
loope
mov
stos
jne
mov
lret
ljmp
jecxz
lahf
or
out
add
and
cmp
push
loop
xchg
mov
rcr
lock
shl
movsb
test
inc
xorl
inc
mov
cmp
icebp
test
enter
xchg
andl
cs
ljmp
or
push
cmpsl
adcl
and
cmp
enter
sub
fs
lods
popa
ljmp
iret
hlt
mov
repnz
enter
movsl
xor
insb
movmskps
jmp
inc
inc
addb
es
pop
inc
sbb
mov
int3
xchg
mov
mov
sti
cmpsb
push
fdivs
outsw
loop
jp
into
or
mov
out
inc
mov
test
jnp
xchg
push
lds
and
pushf
pushl
sbb
dec
push
adc
add
push
notl
sahf
leave
jb
enter
test
push
pop
mov
pop
push
mov
or
ljmp
leave
inc
jp
jg
rol
jge
adcb
mov
push
movsb
pminsw
aas
mov
cmp
lea
stc
push
adc
sbb
test
lahf
xor
sahf
aaa
imul
fildll
dec
popf
scas
loopne
mov
push
mov
repnz
cs
imul
and
and
adc
jo
mov
dec
test
fcoml
xchg
inc
jbe
xchg
adc
xchg
mov
out
mov
incb
outsb
dec
leave
xchg
xor
mov
adc
inc
bound
es
pop
icebp
js
mov
ja
test
xchg
ret
repz
push
repnz
mov
imul
sub
stc
mov
sub
aas
pop
xor
pop
push
bound
es
daa
cltd
in
call
mov
insl
sarb
cmp
aad
push
lret
pop
in
repnz
sbb
mov
or
mov
repz
mov
fistpll
call
push
std
jg
popa
in
mov
xchg
shrb
or
xor
mov
cli
out
cmc
add
arpl
scas
sub
cmpsl
xor
push
out
inc
add
test
or
or
mov
mov
repz
lock
jmp
xchg
repnz
ja
shl
stos
mov
aam
xlat
mov
mov
stc
sub
mov
mov
jle
mov
mov
lds
sbb
push
adc
sbb
aad
mov
mov
mov
mov
xchg
add
push
mov
fucomi
sbbl
movl
push
pushf
movl
push
pushf
push
pushf
lea
jmp
bswap
insl
loope
mov
sbb
pop
ljmp
push
jno
arpl
add
insb
ja
push
aad
iret
mov
add
xor
aaa
insl
push
inc
add
lcall
into
push
sbb
cltd
mov
rorb
xor
inc
mov
addr16
fistl
es
imul
or
jbe
bound
es
inc
es
jo
aad
daa
adc
push
dec
das
fwait
daa
push
dec
stos
push
test
sub
xchg
pop
sbb
test
stos
ds
loop
neg
push
call
mov
jmp
jl
ja
lahf
sbb
dec
lret
mov
ret
loope
mov
mov
add
inc
mov
inc
icebp
adc
cs
jbe
xor
dec
and
cltd
pop
fwait
adc
add
pop
inc
mov
jle
cli
xorl
cs
sbb
fnstenv
fwait
jge
push
mov
mov
sahf
test
sub
repz
push
dec
rcll
fbstp
leave
inc
stos
std
jmp
lcall
mov
or
in
fsubs
push
xchg
les
cld
mov
jae
pop
loopne
inc
jns
cmpsb
popa
sub
int3
xchg
out
pop
in
ret
add
scas
pop
add
or
fildl
jo,pn
fisttps
faddl
jge
jge
cmp
jle
mov
lea
daa
ja
mov
jae
jno
je
jbe
imul
push
mov
adc
fstpt
pusha
jp
jne
pop
ds
mov
cs
test
rcll
mov
shr
cmpsl
ret
inc
outsl
cli
test
imul
in
jne
es
push
jl
inc
sbb
add
aam
jle
inc
cmp
dec
cwtl
movsl
mov
add
stos
rcll
push
in
insb
shll
adc
andl
and
test
insb
scas
test
cmp
mov
sti
ret
loope
stos
daa
sbb
or
cmp
cld
cltd
jmp
ror
test
fsubrl
push
jle
das
test
cmp
in
or
scas
jno
dec
jnp
mov
sub
into
movsb
pusha
xchg
fsts
les
pop
push
ds
push
dec
repnz
adc
aam
cmpsl
jb
cmp
mov
or
adc
lods
fstpt
ret
cmpsb
or
jb
popa
and
pop
cvtps2pi
push
xchg
push
in
mov
sahf
insl
adc
xor
or
out
mov
test
inc
mov
add
lods
pop
leave
jmp
xor
in
add
push
xchg
adc
sarb
sahf
insl
adc
imul
les
int
mov
adc
divl
outsb
aam
mov
mov
pop
lods
and
fmuls
push
xor
xor
cmc
rcrb
movntq
call
and
xor
fwait
sub
mov
push
mov
gs
cmp
mov
cmpsb
int
xchg
das
adcb
jmp
outsl
dec
fstl
repnz
ja
sahf
insl
adc
cmpsl
adc
xor
mov
mov
test
enter
std
cmpsl
lock
mov
pop
test
jp
fisubrl
mov
inc
aam
rol
out
bound
jp
shll
jmp
fldenv
sbb
inc
imul
shll
ja
fcomps
cld
pop
negb
mov
xchg
call
inc
stos
jno
call
pop
jmp
sub
mov
dec
or
popf
ret
lods
inc
inc
mov
xor
mov
fbld
adc
les
and
mov
mov
insb
filds
pop
iret
mov
sub
daa
mov
cmp
jge
rorl
mov
add
repz
mov
dec
xchg
neg
inc
and
adc
aaa
xchg
and
fistl
pop
xchg
arpl
cmc
mov
stos
adc
xor
push
inc
movl
pusha
mov
push
lea
jmp
call
push
pusha
pusha
movl
pushf
mov
push
mov
lea
jmp
pushf
movl
mov
lea
jmp
pushf
call
push
xlat
xchg
or
pushf
push
cmp
lea
iret
sahf
push
fisttpll
addr16
add
jae
fcmovu
push
jno
ja
cwtl
orb
xchg
cmp
sub
or
out
mov
out
jbe
pop
adc
sbb
xchg
pusha
jge
add
mov
popa
call
movsl
sub
aaa
jns
pop
jbe
sbb
ds
jo
iret
xchg
ficomps
mov
xchg
and
add
in
xchg
pop
shl
dec
dec
out
sbb
cmp
int3
sbb
dec
pop
outsb
ja
cmpsl
bound
shll
fs
dec
sbb
mov
data16
dec
dec
in
fadd
out
arpl
or
jge
movsb
sti
inc
adc
jg
jg
mov
stos
inc
cli
mov
pop
mov
inc
mov
scas
inc
fcmove
insb
adc
mov
fs
sahf
jns
in
add
prefetcht1
xchg
rcll
jg
mov
push
movsb
je,pn
jle
pop
insl
sbb
push
sarl
jnp
fsub
scas
loopne
loop
in
pop
sub
mov
mov
xlat
and
sub
into
xor
fnstcw
cld
xchg
das
stos
ret
mov
push
fsubp
lods
jl
fadd
ja
sarb
iret
mov
push
push
inc
dec
xor
sub
jg
sbbl
cmp
movsb
out
mov
popf
and
scas
mov
sti
or
inc
sub
jb
sbb
jne
sub
test
sahf
sbb
inc
mov
lahf
jb
or
and
je
jp
mov
jp
outsl
or
xchg
push
adc
xchg
sub
cmpsl
or
push
add
add
call
mov
lods
or
hlt
in
fcomps
movsl
rol
popa
js
mov
sbb
sti
xchg
pop
mov
and
scas
dec
adc
and
ja
aaa
pop
int3
cmp
int3
jg
sbb
cld
pushf
xchg
cmp
hlt
inc
sbb
js
push
push
inc
mov
fld
jno
adc
dec
das
dec
and
or
jecxz
xchg
cs
cmp
jmp
stos
mov
clc
ljmp
addr16
mov
mov
cwtl
mov
adc
cmpsl
mov
int3
subb
dec
sahf
adc
lret
dec
xchg
push
cmpsl
out
lods
popf
clc
into
xchg
and
jb
std
adc
push
cmp
mov
dec
mov
fldl
cmp
adc
clc
jmp
mov
aaa
test
dec
adc
inc
jle
mov
test
push
pushf
lea
jmp
mov
movl
push
pusha
pushf
lea
jmp
sbb
insb
cmp
add
cli
cmp
add
mov
push
or
cmc
das
out
hlt
scas
pop
sahf
shl
scas
lock
std
add
sbb
fmull
adc
negl
fwait
pop
lea
int
xor
add
mov
jb
mov
repz
aam
mov
mov
inc
sbb
sub
and
mov
cltd
je
mov
pop
push
pushf
jmp
lea
jle
pusha
pusha
movl
push
lea
jmp
pusha
movl
movl
lea
jnp
push
push
lea
jmp
call
pushf
call
sti
jle
mov
or
adc
jbe
mov
clc
xchg
and
jp
fidivrl
xor
jbe
mov
inc
outsl
push
fldt
popa
andb
sti
cmp
or
push
cltd
mov
gs
pop
xchg
mov
or
pop
stos
fmuls
mov
sbb
mov
les
lds
iret
sbbb
ss
scas
mov
mov
pop
or
test
fs
mov
mov
test
cmc
push
mov
inc
cmp
leave
das
jge
loop
roll
push
or
adc
push
lods
ret
adc
mov
out
sbb
je
dec
adc
mov
je
inc
cmc
mov
mov
ret
es
or
add
sarl
scas
xor
mov
mov
xor
loop
lea
xor
push
cmp
jmp
rol
rclb
pop
je
cmp
mov
xchg
adc
pop
mov
lds
scas
mov
pushf
or
cwtl
icebp
push
in
mov
outsb
hlt
daa
outsl
bound
adc
xchg
movsb
dec
mov
addr16
repnz
in
inc
into
loopne
sub
aam
push
jae
jl
jnp
sbb
fisubrl
push
mov
pslld
imul
jmp
imull
jmp
repz
insl
jae
popf
pushf
mov
dec
sbb
sarb
movsl
int3
adc
push
scas
ret
inc
bound
cmp
mov
out
daa
outsb
std
dec
xor
lea
insb
cmp
fdivr
fcoml
xor
dec
aas
stos
fucomip
xor
jp
test
mov
lock
outsb
lds
cmc
scas
mov
outsl
add
or
inc
dec
xor
lcall
sahf
adc
divl
sub
jno
sbb
loopne
jle
aam
inc
jp
xchg
mov
pop
add
adc
inc
mov
pusha
call
jmp
pusha
pusha
call
int
outsl
and
sbb
ds
push
xor
push
in
hlt
lcall
adc
je
les
adc
ret
dec
mov
rcll
inc
jmp
mov
repnz
sub
fists
test
ljmp
pop
mov
mov
cmp
mov
sbb
dec
pop
movd
xchg
aad
sti
or
daa
ret
sub
rcrl
dec
jno
mov
mov
and
cmp
dec
std
aad
xor
push
in
xchg
pop
inc
or
imul
jg
ret
mov
mov
insb
mov
xor
ret
imul
fnstenv
and
ljmp
fisttps
mov
inc
and
fnstsw
jle
imul
inc
faddp
mov
jno
mov
pop
jg
repz
cld
xchg
into
and
aas
pushf
mov
das
stos
mov
xor
loopne
pop
scas
push
inc
into
add
lea
or
scas
add
fists
mov
lahf
sbb
out
mov
leave
xor
dec
mov
fsubl
fdivs
dec
mov
xor
push
lcall
or
rorl
in
mov
adc
pop
inc
cmpsb
out
je
test
mov
shl
mov
inc
mov
insl
pop
cmp
movsl
push
inc
data16
push
insl
sub
lret
dec
xor
addr16
cmc
xor
ret
fmull
jmp
cwtl
add
lods
jl
push
pop
fwait
jecxz
mov
fwait
mov
mov
mov
lock
les
jno
jmp
sub
add
xchg
iret
jae
sub
mov
mov
jb
mov
push
jbe
ja
xor
push
xchg
push
mov
or
or
xor
add
sti
mov
mov
in
je
xlat
mov
out
xchg
call
xchg
sub
cli
and
and
std
cld
ja
inc
mov
inc
and
pop
add
mov
sub
mov
loop
push
push
inc
and
fnstsw
into
and
dec
pop
xor
int3
jp
imul
mov
inc
cmp
shll
pop
adc
lret
xor
bound
cmpsb
sbb
and
inc
pop
and
push
cmp
push
mov
cld
xorps
dec
negb
inc
mov
cmpsb
push
pusha
movl
pusha
pushl
pushf
pushf
lea
jmp
movl
push
push
pushf
lea
jmp
pusha
movb
movl
call
jae
adc
sarl
mov
dec
pop
repnz
pop
divl
ja
stos
lcall
inc
ret
sbb
mov
in
aas
shrl
jmp
sub
or
stc
mov
faddl
xor
or
xchg
pop
call
push
cmp
repz
lods
test
adc
lea
dec
adc
test
stc
and
aad
mov
loope
int
loop
adc
xchg
rolb
xchg
mov
fdivs
flds
les
imul
xchg
sti
jp
aaa
out
jo
and
mov
popf
hlt
test
pop
pop
repz
aad
in
mov
lret
xor
jo
xchg
adc
in
dec
lahf
scas
xchg
scas
leave
sbb
cmp
xchg
cmp
test
cmpsl
mov
jne
scas
aas
push
xchg
jo
jo
dec
xchg
push
rcrl
jle
dec
pcmpgtd
push
xor
fnsave
mov
aam
clc
cmp
jns
subl
out
popf
into
je
mov
cmp
xchg
xchg
mov
add
adc
cmp
xchg
pop
call
lahf
int
add
adc
sti
dec
sbb
sbb
popa
sbb
repz
insl
jno
cmp
mov
mov
enter
daa
mov
out
sbb
cmp
adc
in
push
mov
jo
xlat
inc
xchg
movsb
pop
leave
repz
cmp
pop
push
cmp
pop
adc
mov
adc
into
add
and
into
mov
mov
mov
xor
push
ds
call
dec
popf
mov
add
xchg
mov
sub
nop
cmp
adc
insb
lahf
leave
inc
push
dec
rolb
test
mov
mov
lock
stos
push
pop
mov
mulb
pop
mov
mov
mov
mov
popa
adc
inc
mov
into
sub
pop
and
pushl
inc
repz
jo
jg
mov
adc
lahf
mov
push
lcall
shr
lock
pusha
pop
sub
sbb
cmp
sub
dec
test
fisubs
sbb
sti
sbb
mov
test
sub
clc
int3
mov
dec
mov
push
add
jae
push
jl
pop
jp
insb
and
fs
hlt
jbe
push
pop
push
mov
xor
add
std
mov
jmp
xchg
out
movsb
es
icebp
ror
dec
out
mov
and
dec
sub
mov
icebp
jns
shlb
adc
bound
ljmp
pop
cltd
cmpsb
pop
insl
test
xchg
inc
mov
sbb
mov
inc
lods
rolb
mov
imulb
aas
mov
xor
sarl
out
xor
ss
mov
into
aam
lcall
jbe
pop
pop
in
movsb
stc
js
loop
sub
roll
js
jb
cmp
loope
dec
mov
or
pop
pop
cmp
hlt
jbe
jns
cli
inc
mov
jnp
pop
out
fadds
out
divl
nop
and
xchg
xor
test
dec
cmpsl
dec
xchg
push
push
nop
pop
test
jns
mov
out
rcrl
mov
sbb
data16
fdivr
xor
push
adc
jnp
pop
xor
inc
mov
mov
divb
or
xchg
sub
pop
sbb
mov
insb
in
dec
jns
mov
outsb
jnp
jle
les
adc
dec
sbb
sub
outsb
inc
aas
mov
outsb
fisttpl
add
push
out
outsb
subb
mov
xor
or
idivb
mov
stc
lahf
ljmp
popa
cmp
adc
hlt
mov
mov
adc
jecxz
test
sub
or
inc
mov
enter
add
jmp
and
xchg
dec
ds
and
loop
jecxz
push
test
mov
xchg
or
ds
in
ds
sbb
adc
cld
mov
push
pop
xchg
sub
mov
push
ja
enter
je
jne
mov
dec
rorb
testl
lea
mov
ret
mov
das
pop
mov
mov
lods
lahf
mov
mov
or
mov
sub
repnz
mov
mov
pushf
jo
mov
mov
sbb
in
mov
clc
insb
imul
push
loope
out
or
les
test
dec
ss
dec
sub
ds
jmp
inc
push
dec
lds
jle
push
push
lea
jmp
scas
push
aas
inc
xchg
push
int3
pop
insl
insl
mov
das
pop
aam
cmp
jnp
sub
mov
and
cmc
add
sub
repnz
cs
outsl
or
xor
rorl
outsb
sub
push
pop
cmc
push
mov
loope
cmp
dec
xor
push
jo
ret
dec
cmp
aam
enter
rcrb
cmp
inc
mov
icebp
pushf
xor
enter
in
lds
push
dec
and
roll
mov
fs
or
cmpsb
fld
push
leave
mov
xor
push
mov
shll
xchg
int3
and
stos
clc
fisubl
ret
and
neg
shll
fs
gs
out
lds
xchg
iret
mov
inc
xchg
inc
mov
fcomps
sbb
jne
sub
xchg
ret
jno
test
inc
xor
mov
cli
test
cmp
popf
jg
mov
shlb
or
mov
pop
mov
popf
iret
pop
sahf
mov
pop
pop
mov
test
movsl
rcr
mov
jnp
cmp
adcb
ja
pop
inc
mov
mov
mov
lods
dec
push
js
jne
push
fsubs
clc
imul
scas
andb
mov
stc
mov
shr
xchg
pusha
mov
rolb
xor
addr16
out
inc
sbb
arpl
fnstenv
das
pusha
daa
ret
xorl
push
je
fsubs
pop
inc
or
and
les
or
stos
mov
nop
push
mov
add
or
enter
in
sub
mov
lods
cmp
aam
mov
mov
mov
pop
scas
fadd
inc
sbb
xor
xorb
lret
popf
xor
lret
rcrb
mov
std
mov
shlb
or
jl
cmp
popf
cltd
jns
in
in
pop
jp
xor
dec
js
xchg
and
imul
jne
fisubl
push
mov
mov
in
lock
repnz
testl
mov
xchg
mov
adc
xor
and
sub
jge
cmp
cli
jp
cmp
in
nop
enter
cmpsl
mov
jge
repz
jmp
xorl
adc
sub
sub
lret
or
pop
inc
or
mov
cwtl
dec
divb
sub
dec
or
mov
aad
andb
outsb
test
jns
jae
aam
gs
push
push
jns
push
mov
mov
sub
pop
or
fstpl
faddl
popa
inc
mov
loop
add
xchg
scas
inc
mov
jmp
les
cmp
push
loop
fisttpl
pop
fwait
adc
push
jo
sarb
jecxz
or
ret
int3
dec
movsl
ja
inc
repz
fxch
inc
es
popa
out
das
mov
adc
sbb
rclb
jb
lret
inc
test
testl
pop
fdivl
cmc
or
jl
push
sbb
or
lock
xchg
mov
add
mov
stc
jmp
jb
out
ret
lods
into
mov
adc
sbb
call
pusha
jmp
subb
jl
jbe
inc
sbb
cmc
scas
adc
push
add
subb
mov
sbbl
mov
out
iret
or
or
adc
sbb
aam
scas
call
and
movsb
dec
hlt
fstpl
push
test
mov
push
in
jle
lods
xchg
into
xlat
outsb
mov
xchg
imul
dec
mov
ds
pop
cmp
cmp
shrl
sub
cwtl
lods
mov
aad
inc
mov
mov
inc
mov
arpl
pushf
call
mov
xchg
pop
add
mov
rcll
and
dec
push
test
testl
and
mov
aam
push
movsb
sbb
mov
adc
add
insl
orl
pop
outsl
out
fwait
sub
lret
mov
sbb
imul
push
in
out
mov
inc
pop
jle
pop
add
mov
sbb
pop
arpl
outsl
cmp
mov
cmp
pusha
rcrb
and
xlat
dec
lahf
add
sbb
xchg
nop
add
add
dec
bnd
jns
inc
and
outsb
dec
xlat
or
xchg
inc
test
xchg
push
inc
or
sub
je
int3
mov
lcall
in
int3
pop
int3
xor
ret
mov
pop
out
sbb
inc
mov
mov
nop
jmp
dec
leave
dec
fs
mov
dec
sbb
pop
ds
clc
inc
notb
pop
and
mov
jb
dec
mov
sahf
not
lret
pop
pop
shlb
bnd
imulb
pop
jle,pn
scas
int3
popf
fdivs
mov
mov
test
jge
sub
mov
hlt
inc
mov
add
out
ret
idivb
icebp
test
in
adc
jl
mov
lret
push
ljmp
dec
ljmp
fnsave
mov
fwait
pop
das
insl
xchg
jecxz
xor
adc
aam
out
xor
push
dec
add
ret
jl
mov
sbb
lcall
jbe
xlat
inc
mov
insb
mov
dec
mov
mov
dec
inc
mov
lret
out
mov
popa
adc
inc
pop
push
enter
fidivl
iret
shl
outsb
or
xor
insb
push
out
cmp
movb
loope
out
rcr
mov
mov
ret
jae
push
mov
ja
xlat
adc
adc
lret
or
cmp
push
mov
mov
pushf
movl
pushl
pushf
lea
jmp
add
mov
push
sahf
fwait
sbb
pop
aas
outsb
sub
test
inc
loop
mov
stc
pop
mov
int
jle
dec
imul
mov
adc
fdivr
movsl
push
or
das
xor
stos
out
mov
clc
adc
or
dec
adc
inc
mov
daa
and
add
adc
lods
push
dec
sti
fwait
aam
icebp
lods
out
mov
rcl
or
or
cmp
ret
sub
mov
inc
mov
ss
ficomps
lret
mov
push
jb
push
or
push
dec
stos
inc
mov
mov
hlt
push
mov
fisubs
imul
stc
inc
mov
jp
pop
sub
into
or
push
aaa
xchg
int3
xchg
stos
fcoml
xor
jecxz
xchg
push
loope
pop
daa
xchg
sarb
mov
cld
xor
stos
mov
mov
std
push
mov
into
push
pop
ret
mov
jne
ljmp
xchg
adc
xor
pusha
in
cwtl
cld
xchg
cmc
dec
insl
adc
subl
xor
mov
push
mov
std
sbb
pusha
mov
jmp
inc
and
cltd
cwtl
dec
lds
add
push
mov
push
movl
push
lea
jmp
sbbb
fs
pusha
add
out
mov
or
aam
cmp
or
out
xor
clc
loopne
jbe
shl
out
imulb
sbb
xchg
xchg
aaa
div
in
cmp
ja
shrl
lret
add
fldcw
pop
cli
dec
inc
in
jp
jb
lods
lods
leave
mov
dec
xlat
aas
into
xor
movsl
push
mov
push
mov
stos
sub
cmpsb
jl
aas
int3
lcall
scas
jno
and
fs
bound
mov
sbb
sub
test
ficomps
cld
sbb
testb
addr16
pop
and
lcall
add
inc
mov
inc
and
or
dec
lds
call
push
call
aas
xor
nop
or
and
or
mov
push
add
inc
bound
dec
sbb
mov
dec
fcompl
push
pushf
sub
popf
pusha
aaa
pop
sub
aaa
hlt
das
gs
cmpb
cmp
xchg
mov
xor
leave
jne
ret
xor
fs
jg
shrb
dec
testl
xor
mov
dec
dec
pop
dec
jo
push
dec
cmp
inc
and
in
jae
cmp
sub
mov
das
leave
cmp
sbb
out
cmp
mov
gs
mov
mov
add
lcall
mov
xor
and
sub
insl
and
subb
in
add
jo
scas
aas
and
std
and
rclb
dec
out
stos
and
stos
mov
stc
dec
push
dec
add
stos
ret
push
dec
scas
pop
testb
jge
mov
and
jno
incl
add
cmp
xchg
mov
push
sub
addb
test
dec
imul
xchg
in
mov
imul
jns
rcrl
loope
mov
icebp
rolb
inc
inc
gs
addb
add
mov
outsb
xor
imull
mov
jecxz
addr16
sbb
pop
out
cld
mov
xor
wrmsr
sub
add
and
loopne
out
push
out
inc
mov
jo
cmpsl
cmp
pop
in
clc
mov
mov
mov
in
pop
in
mov
pusha
repz
stos
mov
mov
cwtl
loopne
and
mov
cmpsl
arpl
inc
sti
and
push
adc
aam
icebp
bound
cmp
in
int
int
inc
xchg
repz
sub
dec
adc
sarb
loopne
outsl
add
pop
add
fimuls
or
sbb
mov
test
sub
pop
mov
sub
dec
mov
cmpsb
mov
loopne
pop
aas
jns
jns
adc
jne
adc
pusha
dec
mov
push
and
fwait
cmc
mov
imul
outsl
popf
pushf
arpl
aas
xchg
cmpsb
aad
mov
orb
jmp
mov
and
jl
adc
xchg
out
push
jo
pop
dec
sub
pop
std
iret
fstl
stos
push
jbe
lret
cmpl
int
mov
das
mov
jbe
inc
gs
insb
fists
mov
add
pusha
cmp
pop
mulb
roll
inc
mov
ffreep
cmp
dec
pop
add
push
cmp
mov
cmp
push
or
dec
frstor
add
jp
mov
sti
or
inc
cs
push
lahf
sbb
leave
popf
cmp
in
shll
or
mov
mov
shl
je
mov
push
mov
daa
mov
xor
outsb
xchg
fidivl
xlat
das
jge
fnstenv
xchg
lea
imul
add
mov
and
nop
lret
mov
pop
push
data16
inc
mov
daa
dec
sub
jae
ret
lret
dec
xlat
sti
push
pop
std
jo
push
fisttpl
and
je
bound
adc
aas
test
mov
mov
or
fisubrl
int3
popa
push
lcall
out
cli
loop
xor
mov
mov
rcll
push
ljmp
xchg
flds
xchg
push
lahf
mov
fcmovnu
les
jl
mov
sub
dec
sbb
inc
mov
je
add
dec
ret
jnp
lahf
ss
adc
into
xchg
cld
dec
ds
sbb
test
adc
inc
push
or
jmp
cmp
sti
jl
testl
jno
sbb
and
push
xchg
divb
sub
mov
inc
sub
jne
dec
cmp
push
dec
sub
sarl
or
adc
mov
mov
adc
mov
jo
mov
sub
adc
fnstenv
cli
add
je
push
testl
aas
jp
push
cmp
aas
mov
adc
cs
rcrb
imul
adc
int
inc
mov
xor
xchg
push
popa
push
nop
fs
inc
aaa
pop
sti
mov
sbb
xor
adc
fisubl
jnp
test
jnp
insb
mov
push
fs
adc
jno
push
cmpb
data16
cmp
sahf
sub
inc
movl
dec
adc
call
out
pop
sbb
jae
adc
out
xchg
mov
add
inc
mov
aad
jns
icebp
scas
cmp
push
push
xor
push
test
sbb
jp
pop
or
rcrb
push
lcall
enter
adc
mov
inc
mov
pop
repnz
push
add
pop
or
and
mov
sahf
cmp
mov
push
aas
jle
iret
sbb
dec
xor
push
mov
ret
pop
xor
popf
fucomi
fisttps
addl
and
cmpsl
aaa
jl
or
dec
add
lds
or
pushf
insb
insl
ja
repz
xchg
enter
mov
jo
popw
ds
pop
mov
pusha
shl
xchg
popa
rcrb
push
xchg
test
flds
cs
sub
pop
sbb
shll
cmp
mov
cwtl
cmp
and
scas
inc
aad
mov
lock
std
faddl
mov
int
fdivs
addb
arpl
fs
aad
call
mov
outsl
ljmp
push
push
push
inc
mov
movsl
sub
dec
loopne
roll
bound
or
pop
es
ret
idivl
lock
jge
jp
mov
sarl
mov
push
inc
and
jp
in
xchg
filds
ja
mov
hlt
dec
sahf
pop
and
adcb
sub
stc
mov
pop
inc
sbb
jecxz
fidivrs
mov
mov
lcall
or
leave
in
inc
cmp
sbb
out
xchg
mov
int3
cmpsl
jae
mov
jo
fld
loop
jb
add
ds
stc
or
xlat
add
sbb
out
inc
push
mov
adc
xor
and
pop
jg
iret
sub
mov
adc
fnstcw
jge
add
mov
sub
pop
and
lret
mov
or
fld
push
lods
sub
int3
int3
pop
pop
sbb
mov
xchg
inc
daa
mov
repz
int
dec
mov
and
jecxz
aad
cmp
imul
cmp
out
adc
inc
lret
pop
mov
mov
push
loopne
flds
fildll
mov
lcall
cmp
pop
fbld
cmp
xchg
rcl
or
cli
mov
aaa
cmp
mov
stc
adc
push
and
cli
nop
cmp
pop
push
or
popa
push
mov
aad
xor
and
lea
adc
sbb
je
out
cwtl
in
push
aad
repnz
sbb
and
vucomiss
push
loopne
xor
cmpsl
shll
jge
dec
movl
push
jmp
xchg
cmp
jmp
xor
dec
gs
sti
call
mov
lahf
out
and
dec
test
mov
shrb
or
xchg
nop
mov
cmc
mov
xchg
in
cmp
scas
cmc
ljmp
push
and
loopne
jbe
test
int3
mov
mov
sub
movl
pusha
mov
lea
jmp
jg
loop
xor
sub
ret
stos
add
into
sar
and
or
iret
inc
xor
ljmp
call
mov
sbb
ss
jbe
in
imul
xchg
and
cwtl
ja
ss
loope
pop
or
stc
lcall
mov
xor
lods
or
xor
adc
cltd
pusha
jnp
ss
sahf
sub
mov
jp
mov
insb
pop
clc
jg
jge
jne
jo
jbe
add
call
in
sub
adc
divl
inc
adc
mov
add
aaa
fldt
int
mov
fmull
pop
add
lds
aaa
jae
pop
ss
int
clc
int
out
dec
mov
lds
and
fdivrl
jo
cmp
pop
fidivl
lods
inc
data16
cmp
jp
scas
std
adc
mov
aaa
jno
mov
sbb
ljmp
in
pusha
cmp
or
and
repnz
and
or
sbb
mov
leave
xchg
sub
inc
pushf
add
or
popf
mov
bound
xchg
or
movsl
mov
xchg
jp
and
fbstp
fnsave
ret
loop
push
xchg
in
pop
add
jecxz
mov
aaa
scas
ffreep
into
xchg
aam
jae
mov
fwait
cmp
sbb
out
cmpsl
jmp
dec
iret
loopne
xchg
loopne
and
fwait
cmp
aam
xor
out
and
adc
mov
cs
jne
mov
frstor
sbb
ret
and
popf
hlt
shlb
leave
add
nop
stc
pop
and
push
fsin
mov
push
push
cmp
insb
test
je
xor
in
pop
into
stos
das
xchg
sbb
test
mov
adc
int3
shrb
popa
xchg
or
dec
sbb
ss
call
stos
icebp
call
and
lds
test
call
in
popa
fcomp
sbb
adc
mov
test
into
insl
aaa
jg
fwait
sbb
cmp
stc
loopne
out
pushf
std
loopne
imul
daa
aas
arpl
leave
inc
mov
in
push
and
shll
mov
xchg
jle
cmp
xchg
and
insl
sub
xor
ss
sub
adc
icebp
lods
inc
fldenv
in
jbe
cmp
push
mov
mov
jecxz
loopne
mov
xor
stos
inc
jo
push
pop
jle
sub
add
pop
cmp
jb
push
lret
sub
mov
fabs
sbb
in
bound
inc
es
loop
inc
mov
push
pop
out
mov
mov
hlt
mov
clc
lahf
shlb
push
movsb
push
pmaxub
mov
jl
pop
dec
rcrl
adc
cmp
cs
test
hlt
adc
lcall
xor
loope
jle
fcmove
lahf
into
test
pop
cmp
scas
mov
call
fwait
push
inc
sbb
rolb
sub
call
mov
cwtl
clc
inc
adc
mov
and
test
iret
xchg
gs
mov
push
hlt
orb
push
sbb
rcrb
test
xchg
fstps
push
lret
ljmp
outsl
jecxz
hlt
lahf
push
push
test
xor
mov
pop
outsl
adc
addl
stc
and
in
adc
adc
sahf
inc
mov
sti
mov
test
mov
or
inc
mov
sbb
cli
movl
pusha
push
push
movb
lea
jmp
jmp
movl
movb
pushf
lea
jmp
add
scas
or
sbb
cmp
sub
mov
cmpsl
adc
data16
sahf
lock
cwtl
test
jg
fptan
push
xchg
mov
out
iret
dec
rcrb
jne
sub
pusha
sub
lds
addr16
popf
pop
fistpll
push
inc
sbb
js
jle
pop
mov
iret
jl
pop
sbb
or
js
sti
cmpsl
js,pt
clc
jge
cmovae
push
xor
aam
pmaxub
daa
lahf
lods
mov
adc
add
push
stc
xchg
sub
ret
jbe
sbb
dec
rol
and
lods
js
mov
and
lods
ret
xchg
fistpl
pop
cmp
mov
loop
jbe
cmp
jmp
or
and
loope
pop
dec
mov
rorl
scas
mov
andb
add
or
mulb
test
inc
pop
mov
mov
frstor
mov
add
or
cmp
int
add
jle
inc
push
push
or
lods
in
int
lods
mov
loopne
loope
andl
rorb
rorb
arpl
es
inc
mov
arpl
jmp
mov
outsb
mov
lock
cmp
jnp
stc
or
lret
xchg
inc
aas
faddl
iret
out
mov
fs
aam
mov
mov
jnp
or
mov
xchg
mov
test
icebp
mov
inc
adcb
lret
mov
jl
or
mov
loopne
jg
inc
lods
add
add
shlb
push
frstor
icebp
fldcw
aas
sbb
mov
cmp
xchg
sbb
jmp
pusha
cwtl
mov
popf
lock
cltd
fwait
cli
stos
lock
addr16
sub
mov
sub
mov
mov
push
adc
popf
inc
icebp
out
stc
repnz
cli
fnstcw
insl
push
repz
sahf
fnstcw
inc
mov
fstpt
shr
stos
les
out
andl
inc
pushf
adc
addb
lock
mov
sahf
pop
or
and
cli
lock
lods
push
lods
js
add
xchg
push
int
add
sub
repz
ja
out
push
pop
enter
stc
sbb
mov
pop
pop
cmpsb
movntq
pusha
shll
mov
scas
mov
mov
mov
or
sahf
mov
jle
lods
int3
popf
hlt
lahf
daa
inc
daa
xchg
out
inc
mov
xor
push
and
fsubr
rorl
cmc
mov
xor
fs
jmp
push
scas
in
cmp
or
mov
sbb
cwtl
or
mov
pop
loope
and
loope
int3
jl
inc
mov
xor
push
add
jnp
sub
xchg
adc
js
dec
aaa
push
dec
push
das
xchg
pushf
inc
adc
std
dec
xchg
and
cli
lret
mov
out
lret
mov
data16
mov
aad
leave
data16
movsl
sti
sub
daa
sahf
jecxz
xchg
mov
mov
iret
or
imul
adc
cmpsl
mov
push
jmp
push
inc
mov
ljmp
or
pop
iret
lods
mov
imul
mov
daa
cmp
xor
sub
mov
pop
push
dec
xor
jecxz
adc
inc
mov
loop,pn
mov
enter
cmp
iret
pop
mov
lods
sbb
mov
std
inc
out
sub
int
lret
out
push
add
test
jmp
psrad
iret
or
call
and
pop
pop
insb
xchg
aad
mov
inc
fmul
ret
cmc
jb
xchg
adc
mov
sahf
fcmovnb
inc
mov
cmp
mov
jle
inc
mov
and
push
or
xchg
inc
mov
mov
pop
fidivl
or
mov
fcmovbe
xlat
push
cli
adc
imul
jecxz
out
push
cs
add
adc
sbb
xchg
leave
dec
adcl
mov
dec
addr16
dec
cwtl
jne
mov
idivb
dec
cmpsb
sti
pop
and
outsl
sub
inc
andb
ret
insl
je
jecxz
push
daa
hlt
dec
mov
scas
inc
mov
out
push
jb
test
int
stc
scas
sarb
bound
xor
sub
jl
fdivs
popf
and
sub
and
adc
imul
mov
jecxz
inc
push
jno
fyl2xp1
mov
cmp
mov
sbb
nop
push
sub
or
out
mov
cmp
push
push
cltd
mov
sbb
cld
in
test
insl
shl
int3
adc
sbb
dec
sbb
fildl
and
xor
mov
out
into
inc
xor
sahf
and
inc
aas
jp
add
mov
ljmp
movb
and
jo
cltd
and
movsl
push
jno
insl
adc
imul
xor
popa
out
cmpsl
in
popf
test
js
sarb
jg
adc
addr16
jp
adc
xchg
daa
mov
out
rcrb
inc
push
mov
cmpsl
ja
loopne
test
icebp
pop
lock
fs
mov
pushf
scas
adc
mov
arpl
and
aam
movl
pusha
push
movl
pusha
pushf
movw
push
lea
jmp
pusha
movb
jmp
and
das
lds
movsl
sbb
xchg
sub
jle
sbb
imulb
outsb
jno
ljmp
sub
bound
fisubrl
divb
bnd
xor
mov
jnp
mov
out
mov
jge
pop
pop
cmp
mov
adc
loopne
and
pushw
sbb
jnp
dec
repz
lds
rolb
jnp
cmp
lret
push
js
inc
mov
shl
hlt
lea
mov
jns
cmp
adc
repnz
rorl
insl
sub
outsb
dec
je
test
sbb
outsb
add
test
pop
sbb
out
iret
pop
sub
cld
ljmp
and
lods
negb
jae
adc
pop
add
fsubp
stc
out
add
pop
lods
cltd
xchg
push
mov
adc
sti
scas
jmp
mov
call
cli
jg
sar
push
dec
and
inc
and
js
and
and
pop
std
std
andl
ret
jl
enter
pop
in
cs
mov
pop
lcall
dec
aas
sbb
jge
or
and
inc
xchg
aam
pop
roll
fsubs
adc
test
ss
repnz
hlt
inc
ss
and
xchg
push
imulb
push
adc
les
ret
enter
aam
xlat
in
mov
notb
es
xchg
in
shll
add
adc
ljmp
sbb
xchg
test
cmc
pushf
lock
ja
test
or
inc
js
ja
ficoml
scas
icebp
popf
movsb
aaa
inc
mov
les
mov
cmp
push
and
inc
incl
icebp
mov
pop
shll
mov
push
dec
in
pop
sub
in
testb
aam
fsubs
cmp
popf
nop
push
pop
pushf
inc
addb
scas
testl
cltd
mov
jnp
xchg
sti
xchg
inc
test
pop
sub
inc
pushf
dec
jno
sub
jnp
out
or
cmp
push
or
jg
mov
add
jne
pop
sub
gs
sbb
mov
mov
or
nop
outsb
out
mov
mov
push
in
and
push
sub
and
mov
adc
jle
mov
mov
and
and
lahf
cltd
popa
mov
dec
push
add
popl
pop
mov
cmp
xor
shrb
xchg
fwait
mov
xor
cltd
ds
lahf
inc
int
andb
bound
cwtl
xchg
fcomi
and
aad
pop
pop
push
pushf
rcll
cwtl
ror
data16
push
mov
lret
cmpsb
pushf
fsubrl
dec
adc
xchg
xlat
sub
dec
out
jo
and
add
xchg
pushf
movl
push
push
push
push
lea
jmp
xor
imul
pop
push
or
mov
movsb
cmp
lret
lcall
push
dec
xor
ret
das
xchg
fucom
cli
inc
and
popa
test
sub
adc
aas
sub
shll
enter
lcall
icebp
mov
std
xchg
add
nop
push
dec
push
xor
test
sub
sub
fs
popw
pop
cmp
sub
xchg
mov
mov
stos
inc
test
push
dec
insl
aas
push
xor
cmp
mov
cmp
imul
rcrl
out
cmp
js
jno
mov
pop
fildl
jmp
cli
mov
push
adc
lcall
in
mov
push
dec
aas
fs
cli
jp
mov
sbb
imul
mov
or
push
jmp
mov
leave
data16
push
insb
cmp
sti
test
jbe
xchg
rolb
or
cwtl
js
cmp
mov
arpl
popa
clc
mov
sbb
outsl
xor
xchg
jmp
dec
mov
les
mov
sub
push
stc
ljmp
pop
movsl
test
vmovd
or
mov
jno
mov
dec
mov
aad
cli
js
xlat
cli
jae
xchg
out
mov
lods
mov
fnstsw
repnz
int
push
movsb
cwtl
test
or
add
popa
add
sbb
fwait
jns
minps
ljmp
push
andps
int3
xchg
mov
lcall
jge
sub
mov
jbe
xchg
fdivr
sbb
test
test
pop
int3
mov
and
lods
jmp
sub
std
decb
insb
mov
push
out
jb
fldenv
leave
or
jmp
clc
test
mov
divb
add
sub
inc
add
xor
cmc
push
scas
shll
test
aas
es
or
ja
mov
stc
out
call
pushf
movl
pushl
movl
movb
pushl
pusha
mov
lea
jmp
xlat
push
aad
mov
repnz
mov
popf
sbb
push
fsubp
inc
fdivp
dec
xor
xlat
icebp
push
rorb
push
test
pop
adc
cs
add
std
mov
bound
jno
nop
sarb
push
imul
pop
call
xchg
xchg
incl
and
stos
in
add
or
psadbw
fstpl
lcall
inc
jle
call
lods
shl
pop
dec
cmpsl
pop
add
jmp
dec
rolb
stc
mov
sbb
nop
pop
sub
out
pushf
mov
push
sbb
mov
leavew
test
int
jle
aas
adc
hlt
cmp
into
pusha
pop
loopne
sub
cmp
cli
mov
jge
add
mov
ficoml
nop
mov
inc
cwtl
push
out
repz
mov
loop
lock
aas
enter
pushf
scas
loop
mov
xor
les
dec
jns
clc
cmc
call
fistps
cli
mov
pop
jbe,pt
insl
sbb
aas
jo
add
mov
mov
jae
aad
pop
mov
cmpsl
sti
inc
jl
mov
ret
jmp
aas
out
fisubl
pop
rcl
jp
sub
sahf
cld
inc
ss
leave
mov
sub
jmp
les
xlat
or
sub
sbb
cmp
pop
mov
xchg
mov
pushf
int
repnz
int3
in
insb
push
sub
push
loope
mov
sub
jns
jb
jo
xchg
sbb
inc
mov
mov
pushf
movl
push
pushf
push
pusha
movl
movb
lea
jmp
jmp
fisttpl
push
and
add
or
sbb
lock
in
out
add
inc
sub
in
int
dec
outsl
fadds
jmp
bound
stos
and
shrl
xchg
pop
push
push
jae
insl
xor
jg
mov
pushf
dec
rcr
in
repz
fcoms
out
inc
mov
dec
jge
push
movw
pushf
pusha
movl
jmp
cli
add
fisttpll
push
daa
sbb
inc
jp
nop
xlat
cmpb
pop
fldcw
ja
mov
or
in
pop
sbb
xor
lea
xor
inc
sub
in
mov
shll
aas
and
pop
sbb
push
inc
pop
insb
ffree
jg
xor
push
aas
pop
inc
cmpsb
xchg
add
mov
or
into
push
pop
shlb
mov
pop
rcrb
aaa
data16
pop
or
repnz
adc
leave
xchg
xchg
aaa
adc
sub
sub
in
in
aaa
xchg
rcrl
mov
push
mov
xchg
adc
xchg
sbb
out
and
sub
mov
daa
arpl
pop
out
pop
mov
push
pop
ja
rcrb
mov
mov
jecxz
sub
inc
aaa
pop
jg
push
mov
roll
shll
inc
jmp
jo
or
pop
mov
add
pop
fs
mov
and
inc
test
sbb
and
movl
pushf
movb
lea
jmp
xchg
mov
aam
sbb
inc
add
mov
clc
jnp
sub
fldcw
neg
lds
imul
repnz
imul
in
ret
xchg
ficomps
jne
mov
xorl
xchg
pop
add
ja
iret
push
pop
jo
add
in
stos
and
push
leave
ljmp
addr16
xor
jmp
shlb
aad
mov
lret
xor
stos
sbb
lods
push
rclb
es
cmpsl
test
ss
mov
push
std
jae
adc
jge
sub
arpl
pop
cwtl
dec
jno
repnz
xor
cmpsl
in
fstl
mov
pop
jnp
mov
stos
dec
shrl
insl
out
jb
dec
pop
push
adc
inc
pop
sub
mov
adc
je
hlt
jbe
and
mov
rep
push
je
fmull
pop
inc
cs
nop
sub
pop
jp
inc
call
push
imul
mov
je
roll
xor
inc
mov
test
adc
sar
mov
ljmp
inc
call
cmp
imul
mov
insb
jb
dec
fnsave
and
scas
mov
mov
xchg
adc
ja
jno
mov
test
push
add
dec
push
push
das
pushf
inc
call
jge
and
push
cmp
fsubrs
insl
daa
movsb
sarl
mov
sbb
fsubrl
sub
pop
sub
ds
push
sahf
mov
scas
xor
jns
mov
lea
pop
sub
xchg
arpl
jns
xchg
cmc
mov
fsts
adc
pop
dec
shll
inc
je
addr16
decb
jne
aad
cmp
adc
mov
rol
testb
mov
sbb
nop
xor
iret
xchg
fsubl
incl
sub
xorb
lret
push
movaps
cli
out
subl
push
jg
lods
pop
mov
jns
xor
dec
adc
std
sub
rcrb
pop
push
mov
inc
popa
sbb
cmp
push
sbb
fadd
sub
xchg
push
inc
mov
inc
mov
cmp
movl
lods
incl
push
outsb
sub
andb
fcomps
sarl
xchg
adc
lahf
pusha
lahf
lcall
dec
xor
add
aaa
mov
lret
cmpsl
sub
jb
sbb
subl
sub
mov
add
inc
mov
push
hlt
inc
dec
fs
xchg
rclb
dec
stc
test
or
gs
ret
adc
dec
mov
xchg
pop
test
lock
fs
pop
add
push
aas
pop
sbb
insb
sbb
sub
mulb
in
aad
and
stos
lcall
jge
mov
cmp
adc
movw
pusha
movl
pushf
pushf
pushf
pushf
lea
jmp
fildll
xchg
add
cmpsb
insb
dec
xchg
inc
fldcw
lock
jmp
mov
stc
jg
xchg
mov
push
jg
add
and
mov
and
ret
jbe
jnp
insb
ljmp
mov
lret
mov
loop
jecxz
lods
shlb
push
adc
leave
movsb
hlt
mov
mov
insb
mov
imul
movsl
fidivrs
aam
sbb
std
mov
pop
and
movb
jnp
lahf
mov
testb
out
jl
jle
dec
adc
scas
cli
test
and
adc
ja
dec
icebp
inc
push
cli
fdivs
std
sbb
mov
daa
jno
add
pop
push
cli
insl
dec
aam
testl
adc
mov
jecxz
insl
dec
push
jo
les
fcoms
jbe
loopne
mov
dec
add
push
sub
fiaddl
sub
and
js
ja
imul
cmpsb
rolb
inc
mov
inc
dec
fcomps
mov
repz
push
mov
fwait
sub
lods
mov
sub
and
pushf
outsb
mov
jge
mov
not
xchg
idivb
inc
dec
cmpsb
and
jo
jne
mov
push
mov
mov
insl
mov
mull
movsb
repz
loopne
in
push
pop
jg
getsec
test
enter
sbb
xlat
enter
cmp
mov
test
inc
out
repnz
imul
rcrb
mov
inc
or
fdivrl
fldcw
loope,pn
sahf
popa
js
jg
xchg
es
xchg
lret
cmp
sub
inc
mov
subb
xor
or
xchg
in
imul
mov
bound
mov
jnp,pt
out
adc
adc
or
imul
xchg
inc
in
dec
les
daa
adc
adc
inc
scas
cmpl
sub
add
pusha
in
shr
sub
call
in
adc
test
dec
lds
daa
inc
pop
cvtps2pi
cli
adc
sub
pop
jecxz
fsubrs
xor
aam
fsubrs
rolb
addl
jp
ljmp
xlat
xchg
sub
bound
or
and
adc
mov
adc
andl
push
and
ret
jae
cmp
jae
xor
pop
jg
dec
cmp
pop
dec
sbb
cs
aaa
idivb
inc
das
inc
sbb
sbb
jg
add
pop
cmp
mov
mov
andl
fnsave
leave
jnp
push
mov
les
push
cmp
adc
rep
pushf
enter
lds
adc
adc
lds
jne
inc
int
inc
lcall
mov
xor
mov
mov
dec
rolw
movsl
push
pushf
dec
jne
jae
pop
xchg
pop
int
push
inc
popa
adc
mov
negl
cmp
inc
sub
add
jno
adc
out
popl
lods
popf
sbbb
int3
shl
scas
fcmovbe
andl
pop
xchg
frndint
sbb
out
cwtl
mov
mov
out
pop
xor
rorl
cs
jle
xor
popf
imul
mov
in
jecxz
in
stos
adc
arpl
mov
sti
xchg
adcl
les
shrl
gs
adc
cmc
mov
sbb
mov
inc
das
and
dec
push
jge
dec
push
jl
inc
mov
aad
sbb
lea
sub
push
lea
jmp
in
loop
add
sbb
aad
jns
dec
and
push
repz
add
push
xchg
test
push
xor
adc
fstpt
rcr
push
jae
mov
pop
add
out
lds
xor
aad
mov
xchg
mov
call
repnz
add
pop
stos
popa
jno
out
mov
push
outsl
xor
mov
jg
mov
into
stos
clc
dec
loope
pop
ds
ds
mov
add
test
daa
call
push
sbb
fidivrs
loop
negl
sti
lcall
ffree
stos
data16
les
shlb
insl
stos
and
mov
or
or
jo
cmp
xchg
sub
cltd
fdivs
aas
aaa
mov
add
enter
enter
mov
ljmp
push
jbe
push
push
cmc
cli
push
dec
and
mov
mov
loopne
movl
push
pusha
pusha
push
lea
jmp
pop
cltd
sub
nop
test
mov
sub
sbb
mov
lock
and
outsb
inc
add
nop
jl
stos
mov
cmp
pop
sbb
outsl
and
add
add
cmpsl
and
inc
pusha
dec
jg
inc
insl
cld
insl
sub
pop
add
push
enter
mov
lds
cmp
sbb
mov
push
rorb
lret
test
inc
pop
adc
and
adc
pop
pop
sub
cmpsb
fildl
shll
or
push
outsl
mov
mov
xor
push
dec
sbb
daa
shl
sbb
inc
pop
stc
sub
shlb
cmp
sbb
mov
subb
scas
push
jmp
hlt
inc
and
ficompl
push
daa
shl
pop
inc
ja
loope
sub
sub
xlat
and
mov
inc
dec
ljmp
pop
or
ja
or
repnz
js
xor
or
imul
mov
ret
mov
adc
dec
cmpsl
call
mov
xchg
jo
xor
clc
dec
adc
push
cmp
jge
mov
ds
push
ja
outsb
xchg
mov
mov
int3
xchg
int
fcomps
mov
or
add
test
push
jecxz
jbe
mov
jmp
cwtl
cmc
mov
in
inc
push
cs
inc
xchg
xchg
adc
lock
jg
and
or
fiaddl
xchg
xor
cmp
mov
je
jne
sar
dec
lahf
xchg
repz
mov
shlb
rcl
jo
insb
lods
and
sub
mov
in
adc
out
or
mov
adc
aam
call
xor
jb
jne
pop
mov
mov
pusha
and
test
and
xchg
data16
shlb
adc
leave
mov
iret
or
mov
xchg
pop
cmp
inc
cmp
xor
jg
ficoml
cmp
test
jl
cmpsb
pop
mov
mov
cmp
inc
mov
shlb
mov
and
insl
or
jle
mov
mov
mov
hlt
cvttps2pi
pop
xchg
mov
or
enter
dec
cmpsl
call
in
aas
sbb
cmp
inc
js
adcl
out
xchg
in
aas
push
add
xor
push
movsb
addr16
mov
mov
add
lods
int3
scas
cld
mov
fcomp
stos
loopne
shr
pop
popf
rorl
test
fbstp
inc
mov
add
push
sub
add
dec
lea
jmp
in
jge
pop
sbb
in
lods
testb
mov
jne
or
mov
lret
xchg
sti
out
icebp
jl
dec
pop
dec
sti
pop
mov
push
stos
cmp
mov
pop
cs
jae
mov
xchg
and
cmp
loope
fisubl
rolb
mov
flds
outsb
je
shrb
bound
mov
inc
cmp
push
mov
dec
mov
inc
out
adc
jl
imul
in
in
insl
test
mov
aam
sbb
mov
dec
xchg
mov
fwait
xchg
pop
xlat
leave
jo
sub
xor
mov
jbe
int3
and
sahf
push
and
xchg
js
sub
jbe
lock
test
das
rcrl
inc
mov
inc
daa
insb
ss
jmp
and
or
push
push
jmp
cmp
lahf
adc
cltd
lods
jge
mov
sbb
outsb
icebp
lahf
stos
divl
sbb
push
dec
xchg
lods
aaa
sbb
mov
sbb
rep
ret
push
inc
push
sbbb
inc
popa
les
or
cmp
jl
xor
leave
cs
rcrl
fmull
xchg
adc
stc
cli
jmp
int3
jl
cmpsb
cs
push
sbb
jb
mov
or
bound
ljmp
or
mov
jae
jmp
mov
lahf
ljmp
lret
jp
popa
jg
imul
bswap
into
aad
idivl
xor
lret
std
push
cmp
ss
roll
sbb
mov
enter
pop
clc
sahf
push
lods
bound
test
enter
add
hlt
mov
or
dec
test
and
inc
fimull
push
pushf
push
movl
push
pushf
lea
jmp
pusha
call
call
imul
lret
dec
sbb
inc
pop
movsb
xor
sub
adc
test
jp
rcll
pop
outsb
cs
stos
mov
outsl
sub
xor
cld
outsl
cs
ds
and
lret
call
adc
out
insl
cmpsl
sub
sub
addl
mov
mov
mov
repz
pusha
movl
jmp
cmp
mov
ficomps
jg
fimuls
or
jno
pop
inc
and
pop
xchg
mov
test
hlt
out
test
add
mov
jnp
repz
aam
pop
xor
cmpsb
lahf
rcrl
and
faddl
and
js
dec
adc
pop
in
inc
mov
aaa
push
mov
push
or
mov
outsl
mov
cmpb
out
mov
jg
cs
lods
call
andb
mov
cmp
push
xchg
jl
pusha
stos
push
push
mov
fs
xchg
call
push
int
stos
inc
mov
inc
xor
and
or
inc
sbb
test
mov
into
push
push
sub
insl
dec
je
dec
ss
add
lds
add
inc
mov
jns
add
sub
loop
xchg
fidivs
sbb
repz
in
adc
mov
cs
pop
inc
cmpsb
out
jno
das
pop
les
sbb
shlb
mov
dec
lcall
adc
mov
ds
cs
pop
cmp
mov
cmp
jmp
xchg
xorb
aad
test
in
outsb
and
je
scas
cwtl
sub
iret
adc
mov
jb
in
movsb
jecxz
int
scas
inc
outsb
jno
ja
push
fs
cmp
push
out
repz
mov
inc
pop
sahf
and
push
adc
push
mov
push
stos
mov
add
mov
mov
jg
aas
stos
adc
xchg
inc
inc
mov
add
cmc
sbb
and
add
xchg
imul
aas
pushf
adc
add
xor
and
jg
test
je
add
adc
jmp
movsl
notl
mov
cmpsb
fimull
fs
cltd
popa
mov
test
aam
test
mov
mov
popf
inc
icebp
pop
movsb
es
push
out
or
sub
sbb
gs
xor
pop
rcrb
pushl
ja
pop
pop
xor
push
pop
pusha
bound
scas
fisttpll
das
pushf
mov
and
negl
xor
movsl
jge
push
cmc
int3
cmpsl
sbbb
and
dec
mov
push
xor
dec
testb
adc
or
fs
jmp
in
push
pop
add
mov
fs
gs
lret
aaa
jecxz
inc
mov
adc
mov
jl
out
rcrb
notb
rcr
js
adc
cs
xchg
das
dec
hlt
es
mov
daa
and
popf
jb
mov
cmp
rorb
pop
and
jmp
data16
xor
inc
push
in
push
fmull
xor
jmp
sbb
and
pop
cmp
lcall
adc
inc
cmp
js
push
test
jg
jae
xchg
shrb
xor
push
push
pushf
lea
jmp
pushf
pusha
movl
jmp
jmp
movl
push
lea
jmp
push
sbbb
subl
or
sbb
iret
xchg
ret
pop
rep
mov
loopne
adc
clc
lds
inc
and
movsb
stc
lock
out
xor
stos
mov
push
ja
mov
inc
cmpsb
mov
in
cmp
test
xor
inc
mov
cmpsl
in
push
andl
xor
and
xchg
ret
and
dec
push
imull
dec
daa
mov
mov
mov
mov
pop
push
cli
and
imul
mov
aaa
sbb
or
arpl
sbb
push
ret
cmp
jecxz
fwait
rcrl
nop
mov
jo
jp
ja
int3
pop
fists
js
push
rcl
ret
sub
jo
inc
adc
inc
stos
test
imul
cmp
dec
aas
inc
sub
mov
mov
out
jae
xchg
xchg
push
jp
outsl
iret
ret
sbb
push
mov
adc
and
sbb
rorb
sbb
sub
dec
and
sbb
mov
pop
sub
xchg
shl
repnz
repnz
mov
scas
fwait
push
bound
mov
mov
mov
lret
push
enter
clc
mov
roll
pop
push
inc
call
stos
rorl
mov
mov
bound
pop
test
mov
insb
mov
stos
xor
daa
add
sbb
push
idivl
lock
stc
scas
jmp
nop
adc
int3
cmpsl
stc
test
clc
insl
data16
pop
pop
inc
arpl
repnz
push
inc
sub
repnz
mov
mov
lcall
ljmp
mov
lahf
adc
or
and
xchg
fsubr
add
ljmp
jns
adc
xchg
jmp
rolb
dec
loopne
jns
jae
sarl
sbb
cs
add
cld
lahf
pop
inc
mov
in
sub
shll
add
mov
adc
pop
xor
inc
enter
imul
dec
adc
xor
sub
inc
add
mov
loopne
mov
jmp
or
mov
cmp
xor
test
in
cwtl
fadd
scas
das
xchg
lock
stc
out
cli
cmc
dec
repz
sti
cmp
and
sbb
inc
mov
mov
jmp
jmp
test
mov
ret
das
xchg
lock
dec
repz
loopne
cmp
cmc
jle
insb
adc
xorb
fwait
jns
sub
and
mov
or
movsb
mov
xchg
daa
xchg
ret
fnstcw
jecxz
fsubs
xchg
out
cmp
add
shlb
and
jns
dec
adc
and
repnz
lea
jmp
jb
cmp
mov
roll
dec
fs
cmp
and
movl
out
add
aas
add
jl
out
xor
inc
sbb
dec
push
negb
and
adc
sarl
mov
xor
cld
test
lahf
and
cltd
inc
mov
fiaddl
xor
xor
fisttps
xorb
mov
mov
add
out
dec
or
lock
mov
cmpsb
sub
jl
mov
or
les
cmp
popa
das
or
mov
mov
int3
in
add
mov
jne
push
add
aam
mov
xchg
mov
jmp
sbb
inc
stc
add
outsl
sub
into
add
scas
lds
aam
int3
shrb
into
test
ror
mov
sbb
xchg
nop
outsl
dec
mov
or
and
push
rolb
shrb
rclb
lock
pusha
movsl
mov
inc
in
out
lahf
push
mov
mov
mov
and
and
out
movb
push
pusha
lea
jmp
pusha
mov
jmp
fcmovne
dec
sarb
movsb
or
cmp
and
ret
xchg
fldcw
lret
dec
clc
cmp
outsb
jp
out
leave
sub
in
sbb
mov
movsb
pop
lahf
or
push
cmp
cs
push
bound
push
jge
imul
mov
ds
push
jb
sbb
inc
and
pop
jmp
lock
mov
daa
or
pushf
movl
call
pushf
movb
movl
pusha
lea
jmp
lret
cmp
sub
pusha
test
mov
mov
cmp
out
inc
andl
enter
cmc
in
into
jb
mov
aam
movsl
scas
inc
dec
cmp
das
scas
push
js
ds
xor
mov
xchg
add
mov
mov
push
sbb
pop
fildl
adc
push
xchg
arpl
mov
lahf
jbe
mov
notl
adc
jb
dec
dec
insb
out
xchg
les
xor
xchg
imul
xchg
mov
and
cltd
xchg
inc
fadds
jecxz
je
cmp
call
divl
ss
cmp
cmp
pop
jp
adc
inc
lcall
cmp
or
test
sarl
mov
lea
movl
pusha
movl
push
lea
jmp
sbb
mov
add
inc
sbb
mov
loopne
shl
mov
xlat
push
movsl
mov
pop
mov
mov
jnp
std
mov
mov
in
clc
pop
jl
cmpsb
sub
mov
cmp
sarb
in
mov
mov
inc
mov
sbb
xlat
lret
in
adcl
jo
addr16
mov
cltd
insb
cmp
ret
inc
pop
and
insb
sbb
cmc
shll
scas
fucomip
add
and
fcmovb
and
in
test
test
stos
es
sub
inc
mov
dec
jl
xlat
or
dec
stc
jns
cwtl
xchg
pop
xchg
out
cwtl
sbb
push
fiaddl
inc
jo
sub
add
fildll
push
fidivl
sbbl
or
rclb
push
sahf
jmp
movsb
or
lods
lea
dec
inc
and
ljmp
je
dec
cltd
inc
mov
shrb
shl
negl
shrb
loop
mov
xchg
lret
cmp
jp
fists
cli
lods
cld
sahf
das
js
insb
and
mov
les
arpl
xchg
loopne
inc
sbb
lcall
sub
iret
sbb
fnstcw
push
cmp
pop
popf
divb
sbb
out
dec
imul
cmp
lods
lds
pop
push
mov
xor
pop
out
push
and
xor
cmpsl
sub
dec
mov
jne
adc
outsb
mov
int
mov
inc
xchg
adc
push
ret
jle
lock
push
xor
lock
scas
test
sub
xchg
ds
jns
and
sarl
scas
mov
stos
mov
add
les
movsb
cwtl
aas
mov
mov
pop
or
cmp
iret
pusha
mov
out
stos
fs
int3
fisubrs
pop
or
inc
mov
mov
shll
aaa
jmp
in
sbb
dec
ror
xchg
xchg
int
arpl
cld
xchg
pop
dec
outsb
adc
aad
mov
mov
push
xor
add
xchg
lds
popaw
out
jne
daa
movsb
push
add
loopne
inc
aam
gs
ljmp
daa
rcrb
cld
sbb
push
and
inc
adc
ljmp
movsb
imull
adc
inc
mov
rcr
inc
inc
inc
sbb
xchg
inc
sbb
imul
dec
jp
loopne
mov
jo
cwtl
jo
jae
movsb
add
addr16
xor
lock
xchg
mov
cld
mov
add
iret
xchg
clc
mov
xor
pop
push
dec
outsl
out
js
lods
lea
and
out
push
aam
call
cmp
cmp
shr
mov
jge
inc
or
pop
lahf
pop
add
int3
jge
pop
mov
jns
pop
sbb
mov
inc
adc
or
ds
cmp
inc
mov
xchg
sahf
fildll
jmp
jecxz
stos
sub
and
repz
xchg
pop
push
bound
dec
call
xor
add
pop
lcall
and
mov
sub
inc
mov
ffree
pop
mov
fcoml
jae
push
sub
fwait
sub
pop
repnz
mov
adc
ss
pop
inc
sub
mov
int
xor
mov
add
or
cmova
adc
jno
data16
enter
mov
push
push
outsl
add
inc
mov
jl
mov
aam
cld
call
iret
scas
cmp
out
daa
add
rep
loopne
sbb
mov
out
xchg
mov
cmp
loope
mov
xchg
jne
in
mov
mov
jbe
jne
sbb
inc
dec
mov
mov
dec
mov
popa
or
adc
into
mov
push
in
inc
mov
insl
icebp
or
loope
rorl
jl
and
xchg
divl
dec
jns
inc
scas
mov
xchg
sbb
arpl
jbe
mov
negl
sub
aas
fildl
imul
ret
mov
or
inc
mov
fs
pushf
movl
push
pushf
lea
jmp
ret
push
fs
cwtl
fstpl
mov
outsb
xchg
mov
sub
test
shll
repnz
fistpl
push
push
sbb
repnz
clc
mov
xchg
mov
loope
cmp
push
mov
hlt
lock
jnp
push
jbe
dec
les
sti
test
jmp
loope
imul
sbbb
push
insb
into
andb
addr16
imul
iret
inc
cs
mov
mov
cmp
or
or
clc
inc
mov
loopne
decl
pop
pop
jg
xor
out
fistpll
ljmp
push
into
mov
jne
mov
notb
stc
push
inc
aas
sahf
mov
pusha
jo
shll
repnz
cmp
stc
mov
rolb
in
lret
mov
mov
sub
cmp
fwait
hlt
adc
xor
jp
add
jne
and
xlat
mov
stos
fcmovnb
leave
into
mov
xchg
test
popl
jae
notl
inc
xchg
data16
mov
adc
mov
add
and
pop
popf
aad
and
inc
rolb
add
mov
xchg
out
or
push
in
mov
jp
push
daa
out
add
inc
pop
enter
clc
mov
mov
push
jnp
jb
mov
xlat
lods
or
mov
jno
ds
mov
ds
and
sbb
movsl
mov
out
adc
subb
or
mov
sbb
cmp
cmovns
popf
pop
shlb
shl
jl
inc
es
pop
mov
rcrb
sub
movl
adc
xchg
adc
jg
lahf
icebp
iret
cmpb
lods
cmp
out
mov
fs
fwait
aad
dec
pop
aad
add
imul
mov
pusha
pop
std
ds
mov
or
push
cmp
inc
sbb
dec
iret
nop
jp
mov
sti
and
cmp
push
xor
xchg
fdivl
jecxz
fnstenv
popa
cmp
cmp
bound
mov
mov
out
cs
test
jmp
fistps
aaa
outsb
ss
nop
fnsave
push
loop
enter
adc
dec
add
pop
inc
add
jne
xchg
stos
push
unpckhps
in
into
or
xlat
mov
push
inc
mov
adc
sub
repz
lcall
xor
sbb
jnp
or
fs
xchg
call
jne
lret
jp
mov
or
daa
mov
mov
push
rorl
mov
fildl
dec
stc
mov
stos
movb
cwtl
jl
jno
into
pop
mov
ret
dec
push
inc
rolb
inc
mov
addl
and
sbb
dec
and
mov
mov
inc
adc
dec
push
cmp
leave
gs
ljmp
sbb
cmpsb
inc
xor
test
sub
addb
jnp
scas
shrb
sbb
sbb
repnz
add
mov
stos
enter
sbb
inc
mov
cltd
lds
call
mov
mov
jnp
call
xor
cmp
xlat
pop
cmp
mov
fistpll
lcall
cmpsl
lods
cmp
cld
mov
xor
or
out
cltd
sbb
scas
lea
fisttpl
sub
add
jge
clc
mov
mov
gs
orb
sahf
and
xchg
hlt
fwait
xchg
fwait
dec
addl
and
and
movb
inc
mov
mov
pop
xchg
test
mov
mov
mov
enter
sti
fiaddl
mov
pop
jl
ja
shrl
add
xor
mov
lock
movsb
hlt
mov
or
ja
ss
jl
movsl
cmp
outsb
jge
cmp
dec
push
cmc
mov
inc
mov
test
dec
dec
dec
jle
into
dec
dec
insl
sbb
pop
xchg
adc
dec
insl
lret
in
add
sbb
sbbl
sbb
call
jmp
aaa
out
xchg
push
imul
push
and
invd
add
cmpsl
loop
xor
xor
adc
js
adc
mov
cmp
dec
mov
leave
sarl
sub
inc
mov
nop
mov
sbb
jae
sub
int
dec
mov
test
dec
shlb
and
mov
xchg
mov
out
cmp
loope
popf
pop
sub
rcrb
addr16
jo
push
jle
xchg
pop
jne
imul
inc
std
sti
lea
loopne
ds
shl
pop
nop
mov
xlat
test
cmovs
adc
cmp
jb
push
xor
cs
fcmovnb
inc
in
jecxz
and
dec
movsb
inc
mov
movsl
leave
cmp
ret
repnz
mov
xor
fisubl
lcall
or
pop
dec
outsl
lock
stos
mov
pushf
push
jbe
mov
das
or
test
enter
and
test
xor
or
ficoms
outsl
int
adc
xor
in
mov
cmp
push
loopne
push
je
push
mov
push
test
cmp
das
sahf
lret
sahf
int3
int
mov
xor
call
inc
imul
xchg
outsb
xor
xlat
movsl
repnz
adc
jge
fwait
loop
xchg
lret
jmp
icebp
adc
sarb
push
stc
mov
cmpsl
adc
add
push
mov
ja
fiadds
sub
inc
sub
sub
cmp
mov
xchg
push
push
subb
imul
data16
out
or
cmpsl
cmc
cmp
faddl
hlt
popf
xchg
ljmp
push
stc
mov
inc
mov
test
cmp
divb
out
lahf
idivb
sarb
bound
cmc
pop
sub
jmp
fimull
xor
push
xchg
outsl
pop
lock
adc
or
push
adc
cmp
mov
inc
pop
push
inc
xchg
pop
jmp
pop
lods
int
ljmp
add
pushf
jmp
mov
aaa
mov
lcall
loopne
out
sub
imul
adc
mov
ret
into
mov
mov
lahf
and
popa
mov
mov
pop
rcr
mov
sub
je
or
rorb
daa
jae
mov
sahf
ret
fwait
lock
sbb
inc
mov
iret
std
notb
rcr
mov
jbe
movsb
lock
push
mov
mov
sbb
adc
or
loopne
add
insl
xor
mov
loopne
iret
popf
mov
add
cmp
addr16
ds
jb
mov
add
adc
repz
sbb
jnp
cmpsl
gs
cwtl
ss
bound
outsb
fmuls
push
adc
or
adc
pop
in
in
iret
sub
mov
fwait
test
adc
pop
pop
adc
call
add
ljmp
fwait
xchg
cwtl
int
lret
ja
arpl
repnz
mov
mov
cld
lcall
or
sahf
push
popa
cmp
push
pop
cmp
jmp
lcall
inc
das
repz
mov
test
ds
cmpsl
xchg
push
xor
push
mov
cwtl
xchg
xchg
les
sbb
shl
jp
fisttpll
xor
push
inc
mov
adc
sarl
in
imul
push
pop
xchg
notl
dec
push
and
mov
lods
push
arpl
mov
repz
aam
inc
add
and
jle
dec
push
xor
mov
mov
pop
push
ret
stos
add
fstpl
add
xchg
sbb
dec
push
sbb
sbb
imul
push
jo
cmc
je
call
lds
sbb
push
mov
subl
xlat
rcr
sbb
nop
adc
inc
sub
inc
mov
addb
and
add
mov
hlt
xchg
fdivrl
push
sbb
mov
xchg
add
out
test
cwtl
mov
pushf
mov
or
fidivs
sahf
int3
ret
int3
push
pop
ljmp
pop
inc
mov
fsubr
ljmp
shlb
ret
push
lcall
stos
xchg
cltd
push
scas
std
dec
adc
xchg
mov
mov
in
push
add
xlat
jg
mov
cmp
loop
ret
xchg
mov
mov
mov
or
dec
mov
add
fs
sbbb
out
push
ja
std
push
lret
cmpl
icebp
out
jbe
arpl
push
imul
sbb
fstps
jl
outsb
adc
fidivrs
mov
sbb
sbb
add
cld
sbb
movsl
and
sub
pop
adcl
dec
pop
jp,pt
dec
or
add
xor
inc
adc
mov
adc
push
add
imul
fsubs
outsb
addl
add
js
int3
xchg
and
iret
inc
and
pop
jl
mov
es
popa
andb
sti
fadds
mov
pop
mov
push
ror
mov
fiaddl
loop
inc
iret
bound
out
loopne
stos
pop
pusha
push
decb
sbb
and
mov
mov
mov
cmp
xchg
push
movsl
into
aad
mov
movsb
movsb
inc
icebp
lcall
jmp
xor
fisubrs
push
dec
inc
xchg
jmp
push
mov
or
lds
xchg
mov
in
fistps
cmp
adc
mov
stc
movsb
gs
bound
pop
sbb
lds
insb
dec
mov
ljmp
xchg
in
ret
sbb
inc
mov
popa
dec
fldl2t
mov
pop
ljmp
adc
xchg
adc
add
fisubrl
cmpsl
lret
mov
pop
dec
fcomip
outsb
jno
mov
push
addb
fdiv
cmp
enter
mov
leave
jne
shrl
fnsave
into
mov
sbb
jb
test
mov
popf
std
scas
jmp
std
pop
inc
mov
pop
inc
or
jmp
aad
outsb
sub
hlt
scas
les
mov
fisttpl
ret
mov
add
mov
xchg
std
mov
push
jecxz
jp
cli
loopne
pop
mov
add
xor
push
jmp
adc
lock
pop
push
rcr
and
mov
xchg
lods
fisttps
in
sbbl
aad
es
icebp
aam
xor
cli
les
add
mov
pop
inc
int
inc
mov
jae
inc
push
mov
sbb
ret
xchg
inc
int3
xchg
or
push
mov
ljmp
fldenv
daa
loop
and
and
test
inc
outsl
push
sbb
cmpsl
pop
xor
jmp
sbb
mov
int3
loope
nop
jmp
movsl
and
adcl
lcall
mov
int
mov
cmp
lahf
jno
test
int3
jo
sbb
jmp
loopne
shlb
cmp
rolb
pop
es
cmpl
stos
jmp
inc
mov
pop
pop
inc
pusha
jmp
out
aaa
lods
add
loop
ljmp
pop
sub
je
inc
jne
and
iret
jg
sub
mov
daa
in
hlt
cmpsb
jns
loope
cmp
jb
dec
out
shll
and
nop
jae
enter
add
and
xchg
pop
jae
clc
dec
insb
pop
jg
or
popf
sbb
leave
jb
outsl
push
inc
mov
lods
in
jmp
aam
sbb
jmp
inc
adc
mov
das
cmpsb
cmp
roll
in
mov
or
or
or
xor
cmpsl
push
dec
decb
aas
jbe
sbb
push
ljmp
mov
imul
lods
outsb
cmp
and
outsb
sbb
fimull
fistpl
xchg
nop
fucomi
mov
lea
icebp
cmpsl
jle,pn
push
imul
loope
dec
cmp
xchg
in
xor
mov
dec
sbb
enter
ja
negl
mov
pop
outsl
popa
mov
movl
pushf
push
pushl
movb
lea
jmp
outsb
lcall
or
inc
sbb
pushf
iret
std
sahf
movl
xchg
adc
scas
loop
aaa
pop
nop
leave
pop
lock
invd
push
pop
and
xchg
sti
mov
xchg
mov
lret
test
pop
add
or
cmp
and
mov
sub
jl
mov
test
daa
popa
xor
inc
mov
mov
inc
and
std
jbe
lds
inc
and
mov
and
cs
divl
inc
and
popa
mov
movb
push
lea
jmp
hlt
push
adc
test
outsl
cmp
push
dec
push
mov
iret
push
mov
pop
push
outsb
add
dec
and
jle
inc
mov
mov
mov
jmp
shl
lock
ljmp
lret
cmp
es
jmp
inc
movsb
loop
push
or
xlat
lods
mov
negb
leave
shl
cmc
jne
push
scas
lcall
and
inc
mov
rcr
nop
arpl
add
cmpb
push
int
and
sbb
es
xor
ss
lahf
jbe
mov
sub
pop
adc
inc
adc
ds
dec
stos
pop
popf
sbb
es
sbb
and
bswap
rorl
test
out
push
add
mov
fcmovb
inc
fidivrl
fistps
out
inc
mov
decb
outsb
and
inc
mov
stos
ljmp
adc
push
jg
test
jmp
lret
xchg
repz
shll
cmp
adc
mov
ret
xchg
les
sarl
and
xchg
inc
mov
cmp
das
pop
fcompl
inc
and
xor
sbb
jb
cmpl
xor
push
mov
push
out
sub
inc
sub
inc
mov
xchg
mov
jmp
ds
filds
fwait
xchg
pop
das
mov
in
mov
add
rolb
push
xor
das
xor
lret
test
push
dec
bound
mov
fs
negb
and
mov
mov
fs
cld
xchg
in
push
scas
push
xlat
mov
bound
imul
mov
jecxz
jne
adc
dec
cmpsb
and
mov
jns
das
jmp
test
xor
push
mov
or
mov
sub
into
mov
jge
jno
inc
cmp
push
jae
seto
stc
enter
flds
lret
mov
inc
pop
sub
inc
mov
xor
popf
jo
subb
or
icebp
mov
cmpsb
mov
mov
mov
imul
cwtl
shl
mov
jo
xchg
or
sbb
outsl
dec
xchg
mov
in
mov
cmp
mov
inc
cli
fwait
jmpw
pop
bound
xchg
cmc
cld
std
push
dec
xchg
ja
mov
cs
sbb
mov
out
dec
out
divl
push
add
and
dec
mov
mov
int3
cli
jmp
pop
aam
adc
iret
dec
xor
sbb
cld
push
push
push
mov
cltd
inc
leave
and
popw
outsl
push
mov
and
lahf
test
fidivl
ror
sahf
mov
xor
ljmp
mov
lret
and
and
notl
cwtl
fdivrl
inc
adc
popa
sbb
push
push
jb
mov
orb
push
mov
sub
adc
mov
push
ja
call
fs
repz
rolb
jg
out
cld
mov
dec
insb
lahf
roll
adc
lret
shrb
and
sbb
int3
mov
xor
repnz
repz
shlb
or
or
scas
movsl
mov
lret
ja
sbb
and
inc
mov
ret
pusha
pushf
pushf
movl
pushf
push
lea
jg
push
push
movb
pusha
lea
jmp
pushf
movl
movb
call
ljmp
sub
divl
xchg
ret
dec
push
icebp
push
jg
cmpl
int3
out
add
aam
decl
dec
adc
xchg
cli
inc
ds
ret
outsl
mov
push
push
test
adc
adc
push
adc
sahf
mov
movsb
in
fs
lods
and
mov
jae
sub
sbb
rcrb
or
and
mov
mov
lret
test
dec
or
mov
push
aas
push
and
call
je
add
jmp
test
mov
push
jg
push
divl
fldt
push
jge
fmull
faddl
insl
or
ja
rorl
sbb
inc
out
in
pop
inc
or
push
in
cmp
jmp
int
or
sbb
call
sahf
loope
adc
inc
pop
in
fisttps
push
gs
pop
ret
and
arpl
repnz
sub
fisubs
jno
pop
icebp
xor
pop
je
and
pusha
or
pop
adc
iret
inc
aad
cs
inc
in
add
sub
mov
push
dec
xchg
and
lea
rolb
push
subl
stc
decl
mov
jge
outsl
sub
sbb
aas
pop
mov
or
rcrl
test
adc
aas
orl
rcll
sub
data16
mov
popf
mov
insl
mov
sub
addr16
sub
sub
repnz
out
scas
out
cmpsl
sub
jne
mov
lock
fistpl
or
xchg
addr16
jle
rclb
fs
mov
sahf
dec
xchg
push
sbb
adc
cltd
or
pop
add
xchg
bound
mov
mov
dec
push
jecxz
fisttpl
outsl
push
popa
iret
inc
jbe
inc
mov
sbb
jno
out
mov
xor
push
orl
lds
ja
pop
stc
sahf
daa
outsb
add
dec
xchg
inc
and
in
adc
or
and
jnp
sti
lods
jmp
adcl
fs
cmc
pop
adc
outsl
lret
cmp
lret
pushf
add
push
les
jnp
outsb
add
push
dec
int
jne
dec
push
arpl
clc
jp
pop
loope
std
shll
aad
xlat
lret
movsb
jno
pop
sub
pusha
testl
pop
lahf
jo
add
mov
sti
adc
lods
dec
cmp
loop
ss
mov
fldcw
adc
or
xchg
push
cli
jp
adc
mov
stc
cltd
hlt
inc
sub
xchg
dec
fistpll
mov
ds
cwtl
loope
mov
cmpsb
jecxz
cli
inc
cmp
in
cmc
pop
rcrl
lret
pushw
ret
sahf
cmp
lea
or
xor
int
jmp
sub
in
fwait
cmpsb
pop
jbe
dec
or
add
movsl
movsb
call
insl
dec
and
int
pop
jge
mov
mov
sbb
and
int
xor
push
enter
fcmovne
or
mov
popf
frstor
cmpsb
into
out
jb
inc
test
or
xchg
scas
in
push
lret
add
fwait
dec
sbb
imul
mov
jbe
dec
sub
scas
in
xor
lret
sti
mov
idivb
inc
sbb
out
jns
test
aas
out
stc
call
push
ss
jbe
dec
adc
pop
jns
sbb
aad
js
pop
sub
nop
stos
mov
xor
push
pop
nop
inc
aad
pop
dec
mov
fwait
sbb
out
pop
imul
js
cwtl
sbb
dec
pop
stos
repnz
iret
mov
orl
je
inc
and
inc
mov
les
adc
mov
dec
xlat
mov
pop
push
add
cmc
popf
cmp
movsl
out
cmc
gs
shlb
xchg
mov
fbstp
pop
mov
jne
ss
and
sarb
lock
inc
sbb
jno
icebp
push
jae
shrb
test
mov
adc
iret
sbb
in
pop
jmp
repz
or
add
push
lea
jmp
add
pop
sub
call
idivl
xor
jmp
adc
jo
adc
pop
inc
sub
mov
inc
push
sbb
cmp
loopne
jae
out
sbb
jae
pop
dec
sbb
je
jp
sahf
in
repz
sbb
ror
jge
mov
les
xchg
adc
xchg
cli
push
push
stos
push
dec
imul
sbb
les
test
push
xor
fldt
or
lahf
andl
sahf
andb
scas
std
pop
cwtl
daa
add
mov
add
loopne
xchg
out
cmp
mov
jb
jnp
jp
mov
stos
jg
xor
adc
add
in
pop
addr16
decb
ret
add
out
ss
xor
addr16
ja
rorb
jb
sbb
xlat
add
outsb
inc
add
fwait
mov
xchg
out
pop
and
aaa
adc
cli
gs
out
lret
jg
cli
xchg
popa
mov
out
cmp
int3
iret
mulb
jle
add
mov
sub
cmp
call
lods
add
xorl
mov
lds
cmp
pop
fwait
test
call
leave
fwait
arpl
jnp
clc
mov
jmp
jns,pn
bound
xor
xor
movsl
fdivs
pushf
fidivl
idivb
ret
and
pop
mov
mov
inc
and
add
out
xchg
inc
iret
fsts
sub
roll
mov
shrl
push
add
sub
push
out
mov
jecxz
mov
pop
pop
movsl
push
pusha
pushf
call
pop
cmc
jns
or
rorl
jp
jne
arpl
jg
pop
or
jle
jnp
arpl
lret
f2xm1
adc
mov
popf
pop
inc
les
ror
sub
adc
mov
je
pop
or
mov
adc
outsl
pop
pop
bound
dec
aaa
pusha
arpl
loope
in
add
cmpsb
cwtl
mov
jecxz
shrb
enter
or
aam
inc
xchg
out
pop
adc
in
lock
into
dec
fistpll
push
push
stos
mov
cmp
sarl
test
add
or
push
loopne
rcl
mov
and
cwtl
out
sbbl
aad
sbb
icebp
dec
dec
add
and
add
dec
jnp
xor
or
mov
sub
cltd
sbb
pop
aas
push
push
inc
scas
inc
mov
mov
fsubl
mov
pushf
movb
movl
push
call
dec
mov
mov
mov
loope
in
mov
pop
mov
fwait
ljmp
xchg
dec
sbb
test
dec
lcall
push
popf
pop
fldcw
jbe
sbb
pop
sub
dec
push
xor
clc
scas
scas
in
fadd
dec
sbb
pop
lahf
addl
ret
test
inc
sub
mov
loop
mov
pusha
bound
mov
data16
xchg
ljmp
dec
daa
data16
cwtl
xchg
jecxz
test
in
mov
stc
push
cld
cmp
in
inc
lcall
inc
popa
ret
xor
cmp
mov
dec
mov
jp
jo
push
aad
pop
imul
pop
push
inc
mov
movaps
fcmovne
mov
xor
roll
loope
je
iret
aam
aaa
iret
mov
adc
cmp
jnp
and
push
cli
xlat
lret
negl
faddl
enter
dec
sti
push
sar
dec
pop
mov
adc
cmp
arpl
movsl
xlat
hlt
test
stos
loopne
push
cld
loopne
jmp
mov
sarb
mov
nop
fwait
cmp
dec
adc
pop
adc
mov
cmpsb
jnp
xchg
adc
outsb
fldcw
jg
dec
inc
mov
out
xchg
in
push
inc
or
incl
fcmovne
imul
xchg
mov
mov
add
cwtl
inc
mov
sub
add
inc
das
dec
lds
ja
pushf
lea
jmp
push
jmp
pusha
pushf
movl
pushf
movl
push
pushf
lea
jmp
push
stc
mov
lods
jp
xchg
jnp
call
jbe
xchg
imul
fld
inc
and
repz
add
xor
mov
mov
push
fs
and
mov
std
mov
clc
sub
inc
nop
sub
lea
sbbb
xlat
pop
ficomps
push
or
inc
mov
je
aas
and
and
movsl
mov
xor
push
fildl
mov
push
sbb
push
loop
lods
mov
out
pop
sub
insb
mov
cli
pcmpgtb
rcr
sub
sub
mov
cmc
lods
testl
fs
jmp
push
jge,pt
jge
aaa
rorb
call
test
and
sbb
es
lret
or
daa
cmp
ja
cwtl
mov
dec
pop
lea
add
inc
lods
popl
nop
sbb
inc
xor
mov
std
cmp
mov
lret
es
idivl
pusha
and
fldenv
mov
cmovnp
lahf
repz
cmp
mull
inc
mov
daa
pop
call
dec
in
mov
pop
pushf
in
sti
ljmp
sub
fsubrs
sbb
or
xchg
outsl
xchg
lea
or
hlt
leave
pop
or
xchg
adc
add
gs
inc
or
inc
cmp
cld
test
and
sub
je
mov
or
or
cmp
fidivs
fldl
pushf
movl
push
movl
movb
lea
jmp
dec
add
stc
fcmove
sbb
push
das
push
push
mov
je
mov
sbb
xchg
mov
push
iret
fists
or
jno
push
mov
aad
mov
mov
dec
add
icebp
mov
pusha
addb
mov
mov
xor
sbb
dec
sahf
or
into
push
dec
sub
adc
xchg
enter
inc
mov
xchg
sahf
and
pop
out
mov
xchg
mov
cs
cld
xchg
and
jg
mov
xchg
jbe
sbb
or
cmp
jae
inc
and
push
push
sub
jbe
or
fidivrl
mov
lret
sub
or
xchg
inc
mov
xor
inc
movl
push
push
pushl
pushl
lea
jmp
insl
test
xchg
pop
or
dec
ret
mov
mov
sub
ds
mov
lea
mov
push
pop
pop
out
cmc
dec
sub
mov
xor
outsb
loopne
sbb
icebp
inc
mov
pop
xchg
sbb
ljmp
mov
call
ljmp
push
or
push
dec
lret
inc
scas
add
add
imul
push
xchg
mov
push
ret
jns
jp
mov
les
xor
pop
push
cmp
test
xchg
jns
nop
adc
jne
xchg
mov
in
enter
ja
mov
add
loopne
or
enter
cli
ljmp
cmp
adc
inc
sub
test
sti
mov
scas
xchg
loopne
movsl
je
pushl
mov
dec
mov
sub
mov
xchg
add
sub
test
loop
lods
repz
jne
pop
cmp
cwtl
add
nop
mov
lret
mov
pop
jl
sbb
and
xlat
cltd
mov
shrl
aaa
or
lret
jecxz
sub
mov
xor
xchg
push
lock
jp
mov
jne
or
mov
aaa
sub
pop
push
scas
cmp
repnz
in
adc
dec
lret
dec
mov
mov
lret
stc
std
gs
cs
xchg
inc
arpl
jg
jbe
mov
insb
cmp
ss
aam
iret
gs
mov
mov
cmp
sub
in
out
mov
adc
xor
cs
sti
fisttpl
fistpll
movsl
lret
mov
push
inc
mov
popa
arpl
dec
xchg
sub
add
data16
pushf
push
movl
push
movl
push
lea
jmp
pop
add
sti
cld
sbb
and
mov
cmpsl
jmp
fwait
test
mov
sahf
mov
sbbb
lds
sbb
pop
xchg
test
cmp
rclb
nop
sbb
mov
add
add
ljmp
mov
divb
dec
imul
call
cmp
dec
imul
repnz
cld
push
inc
mov
push
pop
call
rol
inc
pushaw
xlat
scas
into
mov
mov
in
iret
outsb
push
inc
jns
bound
mov
inc
lods
sbb
mov
fs
xchg
aas
cmp
mov
sub
loope
rcl
ret
cmp
mov
out
loopne
divl
fcomp
fisubrl
cmp
int3
insb
popf
daa
out
and
stos
aad
or
inc
mov
fnstcw
inc
and
add
pushf
pushf
movl
push
pushf
pushf
push
lea
jmp
jg
ret
mov
repnz
pushf
leave
js
cltd
and
jle
dec
rorb
addr16
fiadds
pop
lahf
add
popa
jns
movsb
and
push
mov
mov
pop
adc
lret
pop
pop
mov
popa
lods
adc
rorb
outsl
adc
dec
sbb
daa
sub
cmp
orl
jmp
mov
xor
js
jnp
pop
and
ss
dec
mov
xchg
int
jmp
ror
mov
push
jecxz
cmpb
repnz
cltd
faddl
test
dec
movl
pushf
pushf
lea
jmp
je
hlt
jno
mov
lock
std
popa
xor
ss
pop
fsubl
test
jecxz
test
jo
mov
pusha
sbb
cmp
and
adc
shlb
xor
xor
cmp
in
lret
test
out
xor
mov
imul
cmp
rorl
cs
movsl
or
js
mov
cld
adc
mov
inc
aaa
dec
push
insl
mov
call
or
dec
push
push
fcompl
in
cmc
lea
inc
faddl
add
mov
mov
imul
xchg
movb
mov
mov
push
sub
out
jg
add
popa
add
int
push
test
lds
add
ja
pop
shll
leave
add
into
sbb
popa
scas
in
in
add
das
nop
arpl
dec
mov
in
mov
negb
hlt
outsl
scas
fisubrs
shlb
mov
mov
mov
inc
inc
mov
je
addl
mov
pop
out
mov
scas
mov
andl
stos
push
jae
lcall
ret
mov
jmp
jge
mov
xor
pop
jp
dec
pop
pop
in
mov
pushf
es
ret
out
adc
adc
imul
clc
lahf
xchg
aam
mov
fdivs
jnp
movl
mov
pushf
push
lea
jmp
pusha
movl
lea
jg
pusha
movl
push
mov
lea
jmp
ljmp
and
jb
int
lret
mov
in
in
mov
jo
push
inc
data16
test
push
adc
jl
sarb
xorb
xor
insb
stc
mov
insl
pushf
pop
mov
adc
sbb
dec
sub
sbb
inc
sbb
inc
mov
push
adc
xchg
jmp
mov
outsb
or
mov
fs
gs
and
int
popa
in
fiaddl
pop
jle
ficomps
test
add
cwtl
mov
dec
aaa
jb
inc
repnz
mov
out
cs
and
mov
dec
es
ljmp
std
pop
mov
and
mov
cltd
pop
popa
out
faddl
xchg
movsb
loope
dec
imul
cs
mov
sbb
imul
cli
out
loop
out
mov
mov
out
sbb
push
dec
sub
cs
pop
mov
adc
loopne
jmp
imul
mov
fmull
inc
mov
dec
jge
nop
mov
pop
jmp
mov
sahf
add
mov
cmp
movsl
data16
mov
out
jp
fdivrl
jge
cmp
in
and
inc
das
xor
outsl
jno,pn
ds
insb
outsb
push
aaa
mov
push
dec
add
sti
inc
mov
mov
and
mov
dec
ret
xchg
mov
inc
inc
lahf
xchg
xchg
mov
adc
loop
jnp
addr16
enter
mov
scas
lods
sti
mov
aad
loop
add
pop
inc
fcompl
cmp
push
leave
jecxz
adcb
sub
pop
testl
mov
lods
push
mov
push
jecxz
or
sti
and
adc
out
das
mov
and
xchg
mov
and
xchg
push
jmp
das
pop
or
leave
mov
push
sbbb
xchg
mov
add
adc
inc
addb
and
outsb
cs
sbb
lods
mov
jle
jne
icebp
inc
push
int
jmp
ljmp
adc
outsb
sbb
jno
mov
xchg
clc
fldenv
ds
cmp
in
xlat
push
jne
pop
aad
mov
adc
cmp
fistps
mov
cli
add
fsts
mov
test
cmpsb
rcll
dec
adc
jnp
repnz
pop
fistpl
not
sbb
jl
xor
add
shll
mov
movsl
mov
push
xchg
ret
insl
dec
push
rol
jecxz
push
jb
jl
insb
hlt
lea
testl
fdivr
push
fmulp
xchg
jnp
mov
pusha
and
sbb
lahf
sarl
push
scas
inc
add
mov
xor
xor
outsl
pushf
pop
mov
pusha
or
es
les
mov
loope
jno
xchg
arpl
pushf
icebp
dec
daa
xchg
push
nop
outsb
inc
mov
adc
mov
xor
pusha
movl
call
pusha
pushl
jmp
pusha
movl
pushf
call
rolb
push
into
int3
push
pop
jbe
jo
cmp
adc
fldl
dec
push
mov
pop
jno
sub
setno
in
and
push
fstpl
ljmp
imul
popf
cmp
pop
imul
cmpsb
push
mov
mov
aad
filds
mov
clc
or
lahf
aaa
fsubrp
sarb
mov
daa
test
insb
dec
aam
gs
jmp
pop
add
shrl
gs
sub
pop
sub
ret
je
push
ret
fdivl
cmp
pop
xor
mov
fcmovnb
push
inc
gs
xor
pop
sahf
adc
mov
xor
in
xchg
add
cmp
aam
xor
in
pop
cmp
push
aam
jbe
xor
sub
xor
cmp
fistps
movsb
cmp
addl
xor
cli
popa
sbb
jmp
jae
mov
sarl
fs
push
movl
call
jmp
pop
adc
fdivr
cltd
cmp
push
aas
push
adc
mov
push
dec
cmp
pop
mov
xchg
dec
cli
fstpt
rcrb
xchg
out
xchg
xor
add
xor
add
mov
pop
js
mov
mov
lods
call
mov
dec
jg
mov
mov
jno
or
outsl
xor
popf
std
test
shll
sti
cmp
loop
cmp
stos
mov
add
fdivr
in
sbb
int3
addr16
ret
sti
or
mov
gs
icebp
xor
lret
les
pop
or
pop
inc
or
jmp
call
adc
dec
mov
adc
test
pop
and
rcl
idiv
pushf
pushf
jmp
sub
push
ss
sahf
aam
or
ret
dec
daa
pop
cmp
gs
dec
or
cs
mov
pop
mov
xor
data16
lods
mov
out
jle
stos
mov
push
int3
xchg
sub
push
mov
xchg
lds
mov
or
sarl
adc
mov
arpl
cltd
pop
mov
jg
daa
add
fs
out
decb
pop
in
movsb
adc
aad
fsubrs
push
xchg
jbe
shlb
lds
rorb
mov
jle
roll
fidivl
add
bound
clc
push
dec
or
out
mov
cld
pop
cmp
inc
mov
add
sub
push
push
scas
mov
movsl
jle
and
xor
mov
adc
jno
sbb
ret
out
rcl
inc
js
rorl
jns
sbb
mov
cld
pop
jl
pusha
mov
mov
std
adc
test
dec
std
xchg
fisubl
out
sbb
add
push
adc
dec
cmp
or
inc
cmp
dec
imull
imul
popf
cmp
cltd
xchg
inc
pop
jne
cwtl
mov
sahf
int3
pop
in
xchg
sub
loope
xchg
pop
cmp
lods
imulb
push
adc
stc
pop
inc
jbe
leave
push
mov
or
inc
mov
pop
insl
jp
mov
mov
pop
ja
insb
aam
daa
mov
add
mov
insb
push
in
push
pop
push
push
mov
fwait
xchg
test
out
test
imul
add
pop
cmc
adc
call
int3
inc
ret
mov
xchg
icebp
mov
data16
jmp
rclb
mov
dec
lret
push
out
sahf
inc
mov
in
icebp
movl
push
mov
mov
lea
jmp
xchg
push
jmp
mov
and
mov
lock
push
xchg
add
mov
pop
sbb
jmp
jae
adc
mov
data16
mov
push
or
mov
fldl
fbstp
pusha
jge
in
shlb
mov
stos
push
and
mov
bound
xor
jne
cmp
ljmp
scas
repnz
and
add
jge
test
in
sbb
or
fs
loope
test
jmp
pop
pop
scas
notb
sbb
ja
jge
ror
or
subb
jge
mov
fdivrl
sbb
inc
mov
test
arpl
cltd
xlat
out
add
lods
cli
dec
adc
cwtl
add
adc
fs
adc
sbb
sub
mov
test
aas
arpl
jbe
push
sti
xchg
mov
iret
stc
lds
in
jge
jbe
loope
int
pop
mov
into
icebp
int3
out
jecxz
shll
push
sub
sub
sub
add
icebp
push
jne
mov
or
das
adc
pop
int3
xchg
mov
jns
xor
pop
adc
xlat
cwtl
dec
mov
imul
push
dec
jnp
call
pop
pop
cld
or
push
and
mov
imul
inc
ret
gs
sub
adc
or
mov
adc
pop
stos
or
xchg
and
adcb
dec
fidivs
adc
scas
xorb
jecxz
testb
out
or
cmp
push
ror
dec
lds
mov
cmp
shrb
scas
jge
xor
sub
std
mov
int3
fnstcw
sbb
andb
out
lock
ss
adc
push
or
fiadds
int3
lahf
ret
daa
push
push
pushf
pushf
jmp
rclb
xchg
add
fistps
xor
out
in
repnz
cmp
sbb
xchg
add
stc
pop
dec
mov
jb
std
loop
out
cmpsl
xchg
imul
lock
cmp
mov
mov
into
jg
stos
sbb
fistpl
push
adc
xchg
ficoms
test
mov
mov
out
cmp
and
push
dec
and
push
mov
add
pusha
movl
jmp
push
push
call
test
testb
shlb
bound
out
xlat
cltd
jecxz
sbb
outsl
ficomps
lcall
mov
or
addr16
nop
into
xchg
sahf
test
clc
inc
sub
shlb
and
xor
mov
bound
mov
xchg
mov
test
cmp
mov
add
cmp
mov
in
or
cmc
sbb
les
faddl
xor
inc
sbb
adc
add
sti
inc
fbld
sbb
jle
int
fistps
xor
int
pop
mov
mov
gs
imul
addr16
mov
or
mov
cmc
pop
inc
scas
pop
imul
mov
stos
cmc
xchg
sti
dec
sub
inc
mov
xchg
cld
pushl
loopne
js
jmp
loop
popf
mov
pushf
pop
jl
mov
outsl
fmull
xor
mov
dec
jnp
roll
shrb
and
adc
jb
sbb
xor
sarb
ret
testl
jb
into
out
push
loop
stc
jnp
sbb
in
mov
in
sarl
inc
pop
and
fisttpll
add
push
psubw
push
repz
in
and
cmp
lret
sbb
xor
jmp
mov
pop
sahf
ds
or
aas
daa
push
psubb
je
lcall
inc
sbb
push
adc
mov
rolb
adc
jae
jno
mov
js
aad
div
out
lock
xor
or
movsl
and
ljmp
sbb
insl
fdivr
shlb
fsubs
sbb
repnz
ljmp
sbb
call
pop
inc
add
lock
ss
movsb
pop
dec
or
gs
push
mov
adcl
lret
call
or
es
mov
aaa
insb
gs
enter
nop
pop
lods
sub
cmp
cmp
cmpsl
dec
jecxz
adc
xchg
insl
adc
mov
es
lcall
ljmp
aaa
dec
pop
add
cmpsb
inc
repnz
int3
xor
imull
sbb
test
or
stc
fmul
out
mov
dec
imul
pop
fs
pop
mov
sti
in
or
das
xchg
dec
dec
dec
ret
jl
adc
jp
shll
mov
stos
xchg
jp
ret
mov
jp
popf
rorb
pop
insb
bound
shll
popf
test
pop
mov
jl
mov
ret
jns,pn
jo
outsl
dec
in
imul
gs
clc
inc
outsl
jecxz
leave
mov
lahf
movsb
cmp
add
dec
dec
xchg
sbb
out
icebp
mov
repz
ja
jmp
add
insl
mov
lea
lock
lret
flds
jno
ss
scas
xlat
adc
xchg
mov
lods
dec
dec
add
jp
dec
repz
push
and
add
inc
pop
mov
test
pop
stc
hlt
ljmp
mov
mov
jae
jecxz
ljmp
fwait
test
dec
add
jl
negb
xchg
xorb
jecxz
sbbb
bsr
call
insl
dec
int
xor
test
cmp
add
pop
int
push
mov
sti
add
cld
mov
dec
jmp
xchg
xor
loop
nop
push
aas
cmp
mov
paddd
das
shrb
xchg
push
xchg
add
push
jo
xchg
push
loop
jmp
in
cmpsb
lods
adc
mov
bnd
call
pop
cmpsb
adc
bound
pop
sbb
jnp
pop
pop
cwtl
cmp
aaa
sub
add
sub
add
out
adc
push
dec
sub
jno
jno
mov
push
es
roll
lcall
jmp
test
les
psubsw
mov
xor
enter
call
mov
lcall
and
inc
xor
movsb
push
ja
test
popa
jl
and
popf
and
fiadds
lea
mov
pushl
popf
in
das
sbb
cmp
and
test
lock
and
leave
lods
adc
inc
mov
stos
icebp
dec
call
push
inc
sbb
cmp
push
js
cmpsl
lock
shll
pop
and
cmp
jo
push
or
int
xor
push
call
sti
jae
outsl
xor
push
jo
push
sub
xor
jnp
or
into
dec
fsubs
push
jg
inc
sti
movsl
or
enter
and
add
cltd
ret
ljmp
pushw
jmpw
add
mov
ja
es
xchg
rcll
jnp
push
or
cmp
or
sarl
sub
fmul
fstpt
or
insb
sbb
fwait
andb
cmp
lea
stc
inc
cmpsb
adc
lret
mov
insl
pop
xchg
jmp
inc
mov
mov
add
jecxz
ror
jmp
lea
int
or
jns
xchg
rclb
push
and
jb
out
das
xlat
mov
push
fld
lods
sub
cld
nop
jns
mov
cli
and
inc
inc
and
pop
repnz
lds
jg
pushl
jne
gs
inc
insl
push
mov
xchg
fsts
pop
shrl
outsl
pop
stos
ja
add
mov
add
faddl
iret
popa
rcr
rcrb
dec
xor
popa
rol
inc
mov
push
pop
xor
dec
icebp
nop
or
inc
mov
mov
cmp
adcl
lcall
xor
pusha
pop
ds
sbb
cld
insl
dec
mov
fbld
pop
and
sti
dec
dec
out
mov
inc
fldcw
shrb
mov
testb
xchg
xor
fcmovnbe
xchg
mov
out
jae
pop
pusha
sahf
cmp
pmuludq
popa
xchg
pop
or
enter
mov
fiadds
xchg
add
xchg
xchg
mov
mov
sbb
pop
cmp
cmp
jnp
dec
push
mov
mov
in
pop
xchg
rcr
add
jecxz
lods
and
outsb
push
cmp
mov
lock
aaa
jns
dec
pop
std
push
pop
xchg
mov
mov
xor
call
inc
mov
mov
mull
movsl
or
ds
sbb
xchg
pushf
and
lock
cmp
xchg
loope
pop
add
cmp
mov
stc
xchg
or
lock
stc
xchg
ret
cmp
pop
aaa
jb
in
push
xor
gs
xor
or
lods
arpl
sub
and
divl
mov
loope
push
cmp
popa
js
sub
dec
out
das
dec
sub
cs
fwait
nop
mov
popa
mov
or
iret
dec
adc
ds
mov
jmp
movl
push
lea
jmp
loope
inc
add
pop
call
cmp
xchg
leave
lahf
mov
call
add
lcall
insl
ja
out
dec
ds
cmp
outsb
push
nop
inc
inc
loop
outsl
mov
stos
add
cmp
decb
jbe
sbb
imulb
pop
scas
sub
push
jne
lcall
and
mov
in
lcall
and
sbb
push
dec
test
mov
or
cmp
pop
inc
mov
inc
mov
pop
mov
inc
addr16
pop
inc
fisubrs
popa
jbe
mov
mov
inc
fisttps
sub
cmc
sbb
pop
fistpl
push
inc
jnp
daa
sub
fldt
outsb
or
int
cli
xchg
les
inc
mov
cmp
loop
mov
cli
fidivl
in
jne
xor
jge
movsb
dec
mov
push
push
add
insl
push
inc
add
pop
jae
sbb
and
add
cld
sbb
sbb
mov
sbb
or
add
push
das
mov
inc
push
mov
scas
js
lea
mov
leave
xchg
subl
sub
mov
lods
and
or
insb
cmp
sbb
jmp
in
push
xlat
fisubs
xchg
or
out
mov
loop
pop
sbb
push
inc
mov
clc
or
movl
call
fistl
dec
fistpl
fmuls
add
push
xchg
sahf
call
orb
fisttpll
je
fdivl
adc
into
aam
cmp
int
lret
push
pop
sbb
cmpsl
mov
and
mov
mov
mov
sbb
out
add
sub
ja
cmpsl
roll
sti
stos
or
mov
test
sbb
sbbl
jno
insb
out
mov
xor
mov
xchg
pop
inc
mov
sub
pop
mov
std
or
lds
les
sbb
aas
sbb
adc
adc
das
xor
mov
pop
test
ljmp
or
or
jb
push
xchg
adc
out
inc
xor
add
ja
xor
pop
addr16
mov
repnz
xchg
lea
ljmp
xchg
inc
mov
hlt
sbb
loopne
jecxz
add
dec
cld
jno
jg
jno
jb
inc
mov
adc
jge
daa
rcl
push
sub
movups
mov
loope
inc
push
fisttpl
or
inc
sbb
mov
fnstsw
and
push
pop
inc
notb
cli
and
push
ds
mov
mov
mov
mov
pop
ja
mov
imul
inc
repnz
aad
lock
jo
loopne
add
jecxz
out
gs
mov
push
aas
mov
outsl
repnz
pop
mov
fistpl
js
xor
inc
xor
add
xchg
notb
add
push
inc
pop
outsb
test
rol
xlat
add
jb
xor
sbb
or
imul
repz
add
cltd
in
mov
add
push
push
ror
jmp
std
scas
cmp
fimuls
fcomps
dec
push
addr16
lods
mov
ja
xor
and
mov
xchg
out
repnz
inc
out
iret
dec
movsb
mov
out
scas
sub
push
mov
sub
push
sbb
in
mov
lea
lods
sbb
pop
and
out
lods
pop
sub
int3
xchg
cmp
mov
leave
sbbl
push
ret
out
lock
jp
shrl
shrb
popa
sub
push
jge
adc
rcll
pop
dec
in
pop
pop
mov
pop
adc
out
push
sub
jns
andl
comiss
pop
bswap
jmp
les
inc
adc
scas
out
xlat
dec
cmp
or
cld
jecxz
scas
lret
inc
cs
or
jmp
inc
mov
add
or
adc
push
jne
roll
repnz
and
cmp
cli
and
pop
sqrtps
cmp
push
mov
push
subl
sub
pusha
call
inc
int
fcoml
inc
mov
sub
sbb
loop
mov
xlat
push
jno
data16
jns
movsb
clc
dec
shll
jecxz
xchg
jae
sub
sbb
mov
iret
jge,pn
push
pop
or
pushf
insb
jno
shll
xchg
mov
mov
push
sub
scas
loopne
sub
clc
sbb
cld
cmp
int
int3
jmp
addr16
sbb
push
das
in
data16
sub
fistpll
ljmp
cmp
jmp
or
pop
out
mov
pushf
orb
lret
sbb
jno
push
jae
test
push
mov
pop
add
stos
and
lods
faddl
test
sub
push
jmp
dec
xchg
adc
sbb
mov
xchg
loope
pop
inc
mov
enter
xor
sub
push
xor
adc
xor
cli
sbb
std
pop
jns
inc
test
push
leave
shll
in
cmc
adc
add
aas
pmulhuw
stc
outsb
inc
sbb
jo
imul
lret
pop
dec
es
cmp
jo
lods
movsb
jae
cltd
sub
sub
jae
rorl
fs
sbb
jmp
imul
xlat
jg
xchg
sbb
adc
inc
aas
cmpsb
js
cmpsb
in
test
inc
mov
movl
in
jbe
sub
cwtl
fistps
fisttpll
sarl
jmp
mov
mov
mov
push
outsl
and
or
cmp
adc
fimuls
adc
cwtl
aam
mov
mov
mov
arpl
mov
pop
jns
lret
pop
xor
push
pop
mov
insl
dec
xchg
negl
inc
mov
pusha
call
pushf
movl
pusha
pusha
mov
lea
jmp
dec
xor
mov
sbb
jmp
or
sbbl
xchg
jmp
sbb
xchg
shll
jno
cmpsl
lret
es
sbb
push
inc
cld
add
lahf
nop
ficoms
and
sub
insb
jne
loope
cmp
dec
and
cmpl
pop
push
stos
jl
xchg
mov
mov
outsl
sub
mov
aas
or
pop
lret
xchg
shl
push
cmpsl
into
scas
adc
inc
push
push
add
inc
mov
inc
and
dec
jl
lds
and
pushf
movl
pushf
mov
push
lea
jmp
inc
pushf
ljmp
mov
or
add
add
sarl
add
xchg
aam
lret
movsb
fsin
leave
pop
add
cmpsl
das
adc
or
pop
pop
mov
movl
jle
stos
push
mov
dec
mov
aad
std
inc
inc
lods
inc
incb
add
xor
inc
addr16
stos
cmp
rorb
push
adc
mov
mov
cmp
idivl
inc
ror
jmp
lcall
xor
dec
sub
inc
sbb
inc
mov
sbb
adc
pop
call
mov
sbb
sbb
mov
cmpsl
sub
pushw
leave
movsl
cmpsb
xor
cmpsb
daa
roll
cmc
jnp
movsl
xchg
jecxz
cmp
fsubrl
pop
sbb
and
in
xor
stc
mov
orl
testl
push
add
sbb
je
jecxz
add
inc
movsb
lcall
mov
jo
inc
mov
jl
pop
mov
repz
hlt
mov
jmp
jge
add
popf
xchg
aas
ret
ret
movsl
pop
sbb
and
sbb
cmp
mov
pusha
aam
dec
ss
ret
jl
ja
movsl
rorl
cmp
adc
xor
mov
inc
push
jne
pop
scas
jmp
fimuls
inc
mov
movl
push
pusha
jmp
jmp
rcrl
inc
or
mov
dec
push
or
jg
inc
dec
cmpsb
or
loope
inc
out
test
iret
cmp
xlat
or
popa
daa
stos
inc
jno
lods
jb
pushf
ds
js
mov
inc
pop
icebp
fistpl
icebp
int
dec
rcrl
nop
inc
cmpb
int
aad
cmp
fistl
test
pop
add
lods
shlb
aas
and
cld
in
add
pop
xlat
and
push
xchg
andb
cld
fistpll
imul
inc
mov
or
les
pop
popa
dec
out
pop
xorb
popa
mov
adc
icebp
cmp
inc
mov
mov
push
lahf
pop
jae
lcall
sbb
add
xchg
lods
es
mulps
jle
cs
xchg
bound
shlb
mov
movsb
push
dec
aaa
jb
aad
stos
xlat
lret
lods
xchg
push
inc
mov
shr
sti
mov
cmpsb
insl
mov
sub
std
cltd
roll
pop
jno
inc
aas
out
jae
cmc
stc
stos
lcall
jo
push
ds
and
add
outsl
sahf
outsl
je
test
gs
xchg
inc
mov
jp
dec
adc
adc
movl
cmpsb
cmp
jmp
lahf
scas
int3
sbb
loopne
loopne
fnstenv
and
sarl
jmp
in
mov
das
mov
movsl
mov
rdmsr
sbb
push
mov
add
mov
iret
mov
jg
mov
mov
daa
dec
or
ja
xchg
mov
lret
xchg
and
or
lret
or
sub
or
dec
test
fwait
mov
cltd
imul
pop
cmp
lahf
push
push
scas
mov
aam
inc
jne
test
xor
popf
dec
sbb
sbb
mov
mov
and
pop
jle
lods
cltd
rcll
jb
imul
mov
aaa
pop
add
out
push
jb,pt
pushf
jp
in
jb
ljmp
sub
arpl
or
inc
cli
jae
add
adc
cmp
add
pop
xor
sub
pop
rcll
roll
aaa
push
inc
cwtl
inc
and
pop
sbb
push
imul
push
cmp
je
and
adc
pop
andl
xor
xlat
fstps
sub
mov
inc
mov
cmpsl
hlt
pop
repz
rcrl
xchg
mov
and
sub
adc
les
mov
shl
adc
xchg
xchg
sub
enter
bound
roll
test
test
or
or
push
push
lcall
add
or
lret
and
push
shlb
push
push
addb
inc
mov
push
dec
jecxz
aaa
ficoml
aad
xlat
and
xor
push
fdivl
cmp
and
mov
xor
and
enter
out
mov
nop
push
pop
jg
add
out
les
aaa
dec
adc
andl
or
mov
sbb
mov
push
dec
fidivrs
mov
mov
add
je
sub
xchg
cld
mov
ljmp
xlat
mov
imul
das
adc
jp
fildll
leave
call
mov
or
and
inc
xchg
daa
aad
out
leave
gs
jns
dec
lret
dec
adc
imul
xchg
cltd
adc
test
cmpsb
or
inc
aam
fistl
push
sbb
fwait
mov
cmc
daa
lahf
lods
lods
jl
callw
mov
push
fs
in
leave
or
cmp
sbb
mov
test
cli
add
jmp
sub
cmp
icebp
lods
pop
in
push
gs
add
dec
add
pop
or
lea
dec
push
les
outsl
jb
add
pop
aad
xor
scas
add
push
xchg
data16
fsubrs
ss
ret
and
cmc
lahf
or
xchg
inc
push
mov
in
inc
jae
mov
adc
adc
fmuls
cmp
pushl
add
or
dec
out
cltd
divb
outsb
ds
cmp
imul
jg
fdivrl
jecxz
jmp
mov
lret
andb
mov
faddp
shrl
cld
jb
aam
inc
add
jae
mov
add
sub
call
xchg
or
sbb
xor
inc
scas
movsb
adc
mov
dec
and
adc
push
push
add
and
and
xor
arpl
lretw
dec
mov
mov
inc
mov
repz
loope
ds
ljmp
add
adc
movsl
rcll
cmp
sbb
cmp
jp
pop
aaa
mov
lahf
pop
inc
test
cmp
pop
adc
hlt
sbb
xlat
pop
pushf
mov
clc
bound
popa
js
add
adcl
movsb
mov
lcall
scas
sub
aaa
pop
sbb
adc
outsl
pop
fs
mov
add
or
movsl
loop
jle
and
dec
and
aas
sbb
adc
cmp
dec
ljmp
movsb
loopne
pop
pop
out
fisttps
mov
data16
inc
les
int
into
mov
or
cmp
out
pop
add
dec
or
push
lods
mov
mov
xor
ljmp
shll
test
lds
loopne
ja
sub
lock
enter
adc
sbb
and
cmp
ja
ds
fnsave
int
inc
mov
add
stos
cwtl
dec
adc
mov
mov
jns
outsb
jecxz
adc
orl
add
lods
or
fnstenv
je
jmp
mov
clc
mov
stc
iret
data16
lcall
xor
enter
mov
mov
lahf
dec
inc
mov
xor
pushf
movl
pushf
movl
push
push
pushf
lea
jmp
rcl
mov
cmpsb
lds
insl
or
movsb
dec
outsl
mov
mov
jne
mov
into
test
mov
dec
iret
scas
sti
xchg
repz
jg
mov
shr
rcrb
insl
lock
and
jnp
fs
sub
es
or
pushf
and
jg
dec
cmp
pop
hlt
rcrl
add
fnstenv
sub
lret
inc
add
roll
mov
cmpb
mov
popa
out
jo
push
add
mov
inc
into
xchg
clc
jl
mov
inc
xchg
movsl
push
leave
ret
add
inc
xchg
in
aas
sahf
pusha
lahf
jmp
mov
jbe
and
jbe
mov
fdivrs
outsl
adc
and
fdivs
sbb
sti
mov
mov
xlat
sub
mov
jns
inc
mov
rcll
mov
lock
jbe
mov
std
shrl
out
dec
loopne
lock
iret
cmp
xor
in
mov
adc
mov
mov
stos
aaa
imul
aam
aad
mov
je
jg
inc
push
lods
fidivs
fnstcw
add
xor
pop
add
jge
test
jo
xchg
gs
jnp
je
mov
ror
jns
jo
cmp
rcr
sub
pop
fnstsw
stc
stos
xchg
xor
das
jno
leave
push
xchg
jp
in
hlt
fcompl
cmp
pop
ss
cmp
rorb
or
sub
shr
mov
jmp
mov
dec
dec
sub
jp
push
push
inc
icebp
jno
pop
test
div
cli
loop
cmp
shll
inc
mov
mov
xchg
xchg
xchg
fidivrl
aam
fsubrs
jle
inc
out
sarb
mov
sub
loope
mov
rcrl
xor
ss
por
popa
fisttpl
in
cld
aaa
dec
adc
inc
and
cli
fsubrs
and
mov
fcmovnb
inc
jg
shl
jmp
xchg
cld
mov
aam
leave
push
iret
or
push
mov
jg
sti
lods
popl
lahf
lds
fld
jmp
sbb
sub
and
mov
jns
xchg
push
inc
or
arpl
inc
adc
jo
inc
push
push
mov
push
dec
and
les
call
fldl
mov
fwait
ret
and
sbb
sub
jmp
insb
fstpt
push
data16
push
mov
shr
mov
xor
loopne
stos
sarb
add
pop
fmull
loope
jnp
lcall
movsl
xchg
fldt
into
inc
adc
push
cmp
inc
imul
lcall
or
es
push
sbb
bound
push
sub
push
testb
arpl
sub
push
dec
enter
mov
inc
mov
inc
and
dec
mov
je
adc
shll
mov
push
pushf
lea
jmp
jmp
xor
push
jmp
pop
jle
add
mov
add
jmp
mov
xor
mov
mov
ds
add
ror
dec
adc
cmp
into
dec
and
inc
mov
adc
ss
lcall
dec
sbb
dec
push
jo
mov
movsb
and
pcmpeqd
sbbb
or
jg
mov
ljmp
imul
movl
inc
adc
mov
adc
pop
popa
inc
std
icebp
repz
aad
aaa
inc
or
cmpsl
push
rorb
push
adc
sub
dec
test
test
xor
mov
or
fwait
mov
arpl
movsb
shrb
adc
push
cmp
inc
jne
mov
pop
out
sub
sub
imul
add
stos
push
out
insb
mov
jne
and
cmc
shll
jbe
popf
pop
jle
adc
xchg
movsb
es
xchg
insb
mov
sti
out
ja
sbb
push
icebp
mov
nop
cmc
in
or
out
mov
push
test
mov
xor
mov
repz
test
inc
jb
jle
imul
dec
arpl
stos
jg
cmpsl
arpl
xor
iret
inc
imul
imul
call
sahf
jno
imul
ror
fcmove
lock
enter
push
sbb
addr16
stc
fbstp
xchg
mov
push
out
aam
sub
stos
sti
mov
mov
mov
add
mov
fs
jmp
call
movl
pusha
lea
jmp
lea
jnp
je
inc
leave
push
cmp
xlat
add
test
out
pop
mov
inc
cwtl
jbe
push
add
add
aaa
pop
sahf
inc
mov
mov
sbb
int3
mov
and
mov
mov
inc
aas
movsb
imul
mov
in
test
mov
cmpb
fildll
or
int3
clc
lods
bound
data16
xorl
inc
mov
pusha
add
in
cli
cmp
pushf
std
scas
mov
in
movsb
stos
loopne
testl
cmp
mov
mov
push
or
xchg
fidivrl
jl
aaa
sub
movsl
mov
jmp
test
stos
in
pusha
add
dec
lock
lret
outsl
jb
cmp
add
adc
jb
inc
mov
inc
and
adc
mov
fs
jmp
pusha
push
call
out
int3
lcall
fnop
test
inc
sub
out
xchg
sub
push
pop
mov
xchg
jl
jecxz
or
cli
std
lret
pop
or
fldcw
pop
popf
xchg
sahf
adc
add
test
push
jae
pop
pushw
mov
lods
sub
pop
sbb
cld
mov
fadds
icebp
xor
cmpsb
xchg
adc
mov
fwait
and
inc
mov
inc
and
shlb
pusha
push
lea
jmp
pushf
movl
jmp
inc
jle
fs
test
mov
movsl
add
and
loope
out
cwtl
mov
sahf
icebp
sbb
mov
or
push
add
adc
dec
adc
pop
out
inc
and
push
pop
mov
dec
adc
or
sub
dec
cli
jg
jle
addr16
mov
mov
push
jmp
xchg
xor
jmp
loop
rcrb
lods
lock
sbb
inc
sub
mov
pop
jle
mov
loopne
dec
push
jno
dec
sbb
iret
jmp
movsb
int3
mov
sbb
xchg
arpl
and
aam
stc
mov
mov
cmp
mov
into
xchg
xchg
sbb
pop
lds
popf
fcoml
pushl
sub
inc
push
clc
hlt
int3
adc
decl
jg
push
scas
test
leave
leave
sbb
loope
mov
dec
sub
lock
dec
movsb
lcall
lret
push
std
fiaddl
and
xchg
jecxz
dec
mov
stc
dec
and
inc
inc
lods
xchg
inc
cmc
mov
aam
jne
in
jl
ss
dec
sub
sub
stc
push
cmp
adc
inc
mov
push
xchg
fbstp
mov
out
inc
mov
mov
mov
and
cmc
or
pusha
mov
in
insb
rcr
pop
jb
jmp
mov
inc
mov
mov
cmpsl
sbb
test
stos
cmpsb
mov
out
xor
push
jecxz
add
je
or
inc
cmpsb
sarb
aaa
jl
movsl
mov
inc
inc
or
pop
mov
add
xor
repnz
dec
popf
mov
cmp
push
push
cltd
xor
fcmovne
mov
repnz
pop
lret
jl
xor
add
mov
test
dec
imul
mov
xor
push
mov
pop
jmp
mov
inc
stos
pop
add
mov
ret
mov
sbb
cs
cmp
repnz
pop
sub
sub
jbe
insl
aas
jno
and
mov
mov
mov
shlb
cmp
mov
xchg
mov
pop
or
sub
mov
addr16
mov
xchg
mov
stos
adc
and
test
adcl
and
sarl
imul
cmc
mov
xor
dec
lret
dec
dec
jo
add
fnstcw
pop
fwait
sub
jo
rol
mov
inc
punpckldq
faddl
sbb
je
into
mov
push
out
mov
ss
jae
adc
mov
imul
inc
cltd
inc
sbb
dec
jge
sub
sbb
in
push
xchg
aam
pop
bnd
jl
shll
jmp
ftst
pop
pop
cmovns
in
xlat
imul
jecxz
add
mov
adc
dec
adc
repnz
inc
inc
mov
arpl
pop
into
and
lret
cmp
sbb
dec
and
add
cld
xchg
loope
sbb
mov
addr16
inc
fcmovb
and
sub
lods
arpl
mov
push
and
leave
sbb
lods
pop
jmp
cmc
stos
pop
jne
cmp
fimull
xchg
sub
aam
jle
inc
stc
mov
in
popa
adc
and
or
ljmp
xchg
add
xor
das
icebp
cmp
mull
cmc
add
insb
mov
dec
iret
movsb
adc
sbb
and
dec
or
mov
lods
test
shlb
xchg
jns
lds
pop
add
push
xor
out
inc
mov
inc
and
sarl
loopne
pushf
pushf
pusha
lea
jmp
test
cs
lods
test
popf
adc
xchg
int3
pushf
ret
mov
jno
sub
jp
cmp
mov
mov
sbb
divb
lret
adc
sbb
stos
int
xchg
mov
ret
add
xchg
fdivr
js
sub
dec
push
jle
inc
mov
xchg
jbe,pn
mov
inc
hlt
xchg
mov
or
fld
adc
pop
fisttpll
xor
pop
scas
stc
inc
mov
push
push
jno
sahf
mov
push
das
pop
xor
test
rolb
push
sbb
cli
sti
loope
or
jg
sub
icebp
dec
cmp
mov
cmp
gs
and
arpl
push
pushf
lea
jmp
mov
mov
xchg
out
jno
ss
cmpsb
out
push
movl
fadds
push
xchg
imul
mov
dec
sub
mov
jmp
dec
add
sbb
inc
xor
xor
and
leave
mov
in
jnp
paddsw
fidivrs
cltd
icebp
scas
adc
hlt
inc
mov
ja
cmpsb
dec
pop
repnz
mov
and
js
adc
fldl
xor
fidivl
popf
or
mov
daa
add
mov
cmp
movsl
subl
add
ljmp
es
and
xchg
jp
jne
les
mov
mov
lfs
lds
mov
dec
hlt
pop
and
inc
inc
xchg
test
inc
or
pop
push
cltd
mov
xchg
cwtl
inc
sbb
lock
push
xlat
les
and
imul
inc
jp
enter
daa
imul
sbb
in
adc
addr16
je
mov
adc
orl
jg
sub
sbb
push
fneni(8087
sbb
xchg
pop
scas
cmp
or
aas
and
into
jnp
outsl
jne
nop
rcr
fisttpl
enter
sbb
cmpsb
jg
xchg
lds
aad
inc
xchg
dec
push
mov
xchg
imul
stos
mov
stos
pop
inc
push
je
lret
xor
xor
sub
mov
xchg
cli
scas
out
pusha
aaa
xor
cmpsb
lea
or
mov
cmpsl
shll
inc
sbb
and
in
push
lcall
mov
scas
sub
inc
jge
dec
out
push
xchg
cmovg
and
jno
or
std
arpl
jmp
lods
clc
andb
ljmp
and
ds
add
cmpsl
inc
sub
adcb
jmp
mov
dec
sub
je
and
adc
shrl
mov
mov
iret
jmp
sub
sub
mov
cmp
adc
mov
loope
insb
mov
push
fmull
mov
lds
xor
bound
jp
inc
sub
xchg
add
je
add
mov
movl
pusha
call
pusha
call
movl
movb
pusha
mov
lea
jmp
inc
sub
sub
imull
jmp
sbb
inc
rorl
mov
repz
inc
imul
push
mov
movsb
cmp
xor
cmp
sahf
data16
cmpb
pop
cli
or
stos
clc
cwtl
rorb
das
inc
lds
das
stos
sbb
sub
test
inc
incb
mov
fs
jl
push
jmp
cs
xor
push
sbb
movsl
mov
cmc
mov
or
dec
push
pop
xor
js
arpl
rclb
or
mov
push
adc
cltd
pushf
sbb
addr16
jne
mov
add
jg
aaa
adc
lods
pop
mov
adc
stos
sbb
inc
mov
add
sub
jge
jle
pop
or
mov
stos
or
imul
sub
pushf
into
push
cltd
imul
mov
jecxz
add
mov
mov
jmp
mov
stos
call
sub
jmp
mov
divl
notb
fbld
rclb
into
adc
or
mov
je
and
cmc
push
dec
les
or
jge
push
mov
dec
sbb
test
or
data16
jmp
fldl
icebp
mov
jb
imulb
lret
out
push
mov
test
dec
jmp
pop
fisttps
xchg
xor
or
xchg
repz
xor
clc
sub
out
hlt
test
pushf
roll
mov
jmp
dec
ljmp
dec
das
dec
cli
gs
push
fs
sub
sub
es
pop
jnp
cmpsb
daa
mov
mov
lgs
fisubs
aas
fisubrl
mov
aas
inc
sbb
cmp
hlt
cmpsb
out
mov
fwait
cmp
xchg
iret
xchg
jns
adc
xchg
and
mov
sub
mov
inc
and
mov
xor
call
inc
jg
insb
xchg
cmp
arpl
adc
adc
xchg
js
push
js
std
fadd
gs
shll
shlb
fucomip
scas
cs
daa
add
pextrw
push
sbb
push
jbe
fcomps
sbb
ret
inc
and
adc
int3
inc
mov
cwtl
sbb
pushl
xchg
pop
jg
lret
js
add
scas
rolb
pop
dec
sbb
pop
sbb
addl
cmp
mov
nop
jnp
xchg
fldl
mov
and
in
in
rcll
mov
das
nop
arpl
lds
scas
mov
dec
cmpb
and
xchg
lods
xchg
adc
pop
add
inc
mov
in
pop
lock
jns
insb
pop
es
and
xchg
cmp
pushf
rcr
mov
inc
push
dec
out
test
pushf
sbb
cld
repnz
arpl
mov
sbb
fisttps
repnz
push
mov
sub
jno
ds
cltd
call
repz
ror
sbb
push
fs
cld
lret
add
out
inc
push
in
xchg
gs
push
movsl
push
lahf
test
cmp
inc
add
inc
popw
or
in
pop
aas
push
xlat
iret
repnz
jb
sbb
xchg
clc
cmp
mov
inc
and
mov
or
mov
call
imulb
daa
mov
orb
cmp
sbb
xchg
mov
int
sub
lret
push
pop
frstor
cwtl
jle
adc
loopne
push
popf
dec
xchg
jp
cmp
inc
push
or
dec
cmc
jmp
xor
sbb
rdtsc
icebp
sub
inc
jecxz
in
pop
mov
push
lcall
fldenv
div
shll
mul
push
ljmp
arpl
add
aad
subb
jmp
xor
bnd
jae
lea
outsb
clc
mov
sarl
roll
sti
xchg
negb
sub
mov
loop
dec
push
test
iret
push
adc
sarl
jge
out
lret
xchg
ds
mov
add
and
fs
inc
sub
imul
cmpsl
cli
pop
sbb
ja
cmp
addr16
add
arpl
fsubrl
test
push
lds
sub
movsl
leave
and
pop
cmp
jg
xchg
push
rcr
or
repnz
setne
pop
cmp
add
inc
mov
insl
aas
cmpsl
mov
fwait
test
push
or
movl
jnp
inc
out
decb
or
sbb
mov
adc
xchg
into
mov
fbstp
icebp
inc
imul
pop
push
push
dec
imul
inc
mov
and
or
subl
lds
in
xchg
or
mov
jg
xchg
adc
inc
dec
icebp
jb
scas
pop
pop
cmp
es
imul
jmp
fdivl
iret
stc
lock
sub
xchg
ret
xchg
shrb
stc
dec
faddl
mov
lahf
adc
mov
sbb
xchg
mov
add
mov
sub
jp
sahf
push
add
fimull
fcompl
pop
out
bound
sbb
mov
stos
aad
rol
fucomip
sahf
mov
nop
push
lock
rolb
jnp
jo
and
lock
insb
pop
cs
iret
cwtl
fistpll
inc
xor
mov
movsb
push
pop
notl
ja
or
aam
out
or
mov
push
add
mov
mov
cmp
inc
or
fadds
sub
push
pop
cmp
cmp
insl
or
ja
cmp
push
push
xchg
xchg
cmp
cmpb
test
push
shlb
xlat
push
inc
fisttpl
and
lcall
cwtl
test
adcb
jbe
arpl
xchg
mov
adc
loope
pushf
and
dec
adc
shll
inc
mov
stos
sti
outsl
orb
fcomps
push
push
lahf
jmp
cmp
mov
and
dec
and
mov
and
xchg
and
push
in
orl
xor
adc
mov
andl
cmp
mov
mov
push
sub
xchg
ja
jge
adc
notb
loopne
or
jl
xchg
cli
mov
inc
mov
push
mov
ljmp
hlt
xchg
repnz
aad
in
lds
into
mov
and
cld
loopne
das
dec
repnz
xchg
xor
in
pop
mov
out
js
js
insb
shll
aad
fwait
mov
pusha
mov
mov
and
push
lea
push
negb
pop
into
aas
mov
and
dec
xor
scas
call
lock
add
cmp
cld
mov
cmp
lahf
inc
mov
jmp
scas
xchg
jmp
sbb
mov
pop
inc
es
xor
in
mov
inc
inc
pusha
and
or
xchg
cli
aaa
lahf
roll
stos
inc
xor
leave
into
add
out
jmp
mov
pop
stc
pop
scas
push
pop
inc
sub
fmull
jp
mov
lcall
fdiv
fldenv
mov
mov
and
jne
push
cmp
in
inc
mov
inc
and
cmp
push
push
push
lea
jmp
in
inc
cmp
mov
out
xchg
pop
adc
jns
mov
inc
pop
push
mov
cmp
xchg
fwait
xorl
push
xchg
mov
cmpsb
cmp
mov
cmpb
aas
inc
repnz
icebp
popf
out
movsb
filds
cld
xchg
cmpsb
test
in
push
in
imul
enter
and
mov
les
mov
and
clc
pop
sbb
push
movb
mov
lea
jmp
sub
dec
in
call
or
inc
sub
test
add
sbb
aas
cs
inc
pop
mov
cmpl
mov
fcmove
jp
push
mov
aam
ret
inc
xchg
cltd
int
lcall
cmp
cmp
icebp
fstpt
mov
pop
pop
dec
ret
push
cmpsl
cmp
xor
jns
fiadds
fwait
lahf
lahf
pop
shl
xchg
xor
mov
pop
je
dec
adc
mov
add
in
and
jp
std
test
or
fs
aad
fbld
sbb
clc
dec
imul
lret
ja
xchg
mov
inc
mov
mov
sub
sbb
ficoms
rorl
es
leave
pop
ror
pop
mov
cmp
cmp
mov
lock
test
add
decb
jns
cld
sub
in
inc
add
xlat
fisttpll
out
jae
fadds
cmc
fiaddl
add
stos
mov
neg
sbb
inc
mov
jae
mov
stc
push
adc
lcall
out
out
cmpsb
cmc
lods
out
in
in
movsb
arpl
xchg
in
push
call
stos
pop
mov
push
push
arpl
lds
jl
xchg
push
fiadds
mul
xchg
scas
adc
cwtl
xchg
pop
add
adc
movsl
push
jmp
inc
sub
loopne
push
jg
pop
pop
pop
jl
cs
jmp
lds
jo
jle
sbb
inc
sub
mov
jb
stc
or
push
mov
gs
fucomip
mov
arpl
scas
cs
pop
push
fwait
pop
sub
jle
add
mov
mov
mov
movsl
shlb
mov
lcall
inc
and
out
dec
and
pusha
call
movb
movl
call
frstor
jl
cltd
aas
xchg
test
add
sbb
xor
je
jle
cmp
cmp
insl
push
dec
cmp
mov
outsb
add
xor
jl
mov
scas
and
push
adc
out
adc
inc
or
jb
mov
cmpsb
enter
in
nop
and
scas
mov
push
leave
shlb
fs
xchg
mov
das
or
sti
imul
cld
loope
or
hlt
sbb
std
xor
dec
dec
or
mov
sub
cmpsl
call
into
movsl
mov
xor
dec
xchg
push
daa
adc
popa
xchg
push
aas
subl
dec
xor
and
push
je
subb
mov
ja
cmp
imulb
iret
jnp
pop
mov
mov
jmp
jmp
pop
mov
cmp
jae
mov
pop
mov
mov
stc
repz
scas
jo
outsb
int
mov
cltd
fs
lock
cmp
dec
movsb
pop
adc
ss
scas
into
jae
arpl
es
lds
push
mov
mov
test
inc
mov
insl
cmp
xor
bound
jno
into
mov
dec
pop
sub
mov
es
out
dec
lods
jg
imul
mov
pop
movsl
push
and
push
push
or
pop
cmp
sbb
push
mov
cmp
push
add
fnstcw
dec
inc
add
fiaddl
cwtl
fwait
test
ja
movl
call
call
pop
je
push
xchg
xchg
arpl
push
or
push
sbb
mov
pusha
outsb
ja
mov
mov
push
iret
xchg
pop
jnp
push
pop
stos
inc
nop
sahf
and
inc
add
push
ret
inc
mov
push
jge
pop
lock
daa
cwtl
imul
mov
jmp
xchg
movsl
jne
ficomps
push
jmp
out
sub
out
push
push
movl
cmp
push
cld
incl
mulb
cmp
xchg
cwtl
sbb
popf
inc
mov
cmp
insl
pop
add
hlt
mov
les
insl
stos
repnz
stc
divl
dec
push
sbb
xchg
jnp
sub
mov
in
cmpl
adcl
enter
js
ffree
stos
sub
push
mov
push
shll
inc
sbb
clc
xchg
fdivrs
jmp
xchg
hlt
out
inc
and
int
and
mov
or
sbb
decl
inc
mov
xchg
lods
cld
cwtl
sub
clc
xchg
sub
loop
mov
dec
sbb
mov
in
stc
lea
mov
mov
adc
inc
mov
mov
sti
mov
into
sbbl
call
fisubrs
jae
mov
ret
jo
xchg
fsubs
inc
mov
movb
movl
pusha
movl
push
push
mov
lea
jmp
push
pushf
push
pushf
pushl
lea
jmp
out
and
xor
cli
mov
das
icebp
test
jecxz
cmp
cmp
aaa
fwait
movsb
aas
cmpsl
xchg
loop
cmp
leave
cld
loop
inc
stos
adc
xchg
cs
xlat
jmp
and
pop
shl
xchg
test
stc
mov
add
sbb
mov
cltd
jmp
movsl
sub
out
call
dec
cmpsl
cmp
sbb
repnz
out
dec
push
sub
aam
mov
cmp
cltd
std
in
test
mov
add
clc
dec
cmp
leave
xchg
es
jge
out
imul
push
push
jne
nop
inc
sbb
ljmp
push
lret
daa
ret
push
xor
cmpsb
arpl
or
fwait
es
test
clc
xlat
pop
dec
idivb
inc
das
xlat
mov
lret
fwait
adc
mov
or
ljmp
xchg
sub
sub
out
cmp
hlt
mov
push
testb
movups
mov
fs
movsb
push
out
and
xchg
sbb
lret
outsb
sahf
mov
jae
enter
sub
inc
adc
mov
pop
es
test
mov
pushf
jnp
mov
mov
rcrl
ss
in
stos
imul
addr16
pop
jns
add
test
fimuls
mov
rolb
insb
cmp
rolb
xchg
xchg
fnsave
movl
call
movl
pushf
pushf
jmp
in
add
and
sub
dec
es
mov
xchg
rep
sbb
jle
ss
ljmp
lahf
mov
cmp
and
mov
arpl
xchg
pop
inc
xlat
je
scas
pop
xor
stc
das
ret
and
stos
inc
popa
or
mov
jmp
lcall
aad
popf
mov
and
xor
cld
faddl
xor
ja
inc
mov
lcall
cmp
dec
pop
fwait
rcrb
push
mov
jb
int3
out
or
movsw
cmpsl
addr16
mov
xchg
es
arpl
cmpsb
shll
push
mov
add
int3
ljmp
and
stos
hlt
sub
sub
movsb
mov
loopne
pop
inc
mov
lods
out
xor
push
js
xchg
or
imul
inc
sbb
push
mov
loope
imul
pop
sbb
test
sub
add
or
mov
jle
sbb
arpl
int3
push
dec
sub
out
enter
or
outsl
addr16
xchg
push
mov
push
subl
daa
cltd
pop
shrl
data16
movsl
cmp
mov
aam
pop
in
into
jae
scas
xor
stos
xchg
repz
cld
outsl
loope
mov
push
inc
fmuls
dec
lds
dec
cmp
mov
sbb
sub
ljmp
ds
or
inc
in
jg
imul
mov
xchg
and
ds
jle
push
hlt
cltd
mov
leave
mov
pop
cmpsl
shlb
dec
pop
ljmp
fcoml
and
addr16
jecxz
mov
nop
push
xor
mov
movsl
subb
sbb
mov
or
xor
push
lods
insl
es
das
push
jmp
sub
sub
add
push
lret
das
mov
xchg
cmc
dec
into
jmp
sbb
sbb
dec
push
loope
mov
lret
add
hlt
sbb
int
iret
lods
test
mov
jb
subl
or
or
jo
js
mov
sahf
lock
insl
lret
and
ljmp
push
or
pop
sub
mov
in
lock
push
pop
mov
xchg
test
add
and
jo
jne
dec
dec
in
pop
xlat
lcall
jmp
out
and
in
dec
adc
out
subl
das
push
ret
add
push
aaa
mov
sub
pop
mov
lods
sbb
sub
cmp
fcoms
cmpsl
ficoms
ss
loop
adc
into
or
addr16
xchg
fisttpl
jp
inc
mov
fs
jle
push
pushf
mov
movl
pusha
pushf
movb
lea
jmp
or
jno
in
leave
mov
and
push
js
xchg
jecxz
add
fld
insb
dec
call
test
or
adc
push
loope
mov
aam
inc
xchg
or
out
ds
push
mov
xchg
pushf
int
sbb
sub
jb
mov
enter
jecxz
aam
mov
jo
in
and
xchg
scas
fadd
dec
mov
push
test
mov
jb
jns
pop
xor
nop
enter
ds
fwait
mov
jne
dec
lods
fcmovb
adcl
mov
or
pop
jecxz
mov
pop
cli
aas
xor
xchg
mov
pop
mov
leave
push
loop
icebp
pop
inc
mov
pop
mov
lret
pushl
jmp
test
hlt
sub
int
push
push
dec
adc
stos
into
jb
pop
lret
and
ret
jp
jp
loopne
jne
pop
mov
dec
push
cmp
cli
ret
fstl
inc
cmp
aas
xchg
subl
xchg
fiadds
sbb
xor
push
sbb
xchg
in
or
out
lods
mov
in
mov
test
adc
mov
addb
loope
stos
xor
in
xor
mov
repz
movsl
jmp
cmp
push
imul
cmpsl
in
or
cmp
xchg
cmp
cmpb
jmp
jbe
adc
dec
adc
adc
fs
orb
sub
aaa
lds
dec
add
data16
jae
dec
in
mov
or
sub
mov
testl
push
cltd
dec
sbb
fsubl
sub
xchg
xor
scas
sub
pusha
add
loopne
jbe
ds
mov
mov
xor
pop
sub
in
and
notl
jecxz
scas
xchg
mov
jmp
or
mov
pusha
jg
sbb
je
pop
les
es
add
fs
orl
ret
mov
mov
stos
negl
dec
jge
pushf
movl
pusha
movw
pusha
lea
jmp
call
mov
rclb
pop
and
sub
mov
pop
xchg
jbe
inc
mov
je
daa
in
icebp
push
repz
push
push
cwtl
or
cmpsb
mov
jmp
add
xchg
sarb
cli
xchg
sti
movsb
adc
jge
std
sub
cmpb
jl
pop
pushf
sbbb
rorb
mov
jl
jmp
je
cli
or
flds
test
mov
out
add
sahf
push
xchg
rcrb
adc
sbb
rcll
or
out
push
scas
in
int3
movsl
adc
fidivrl
add
and
mov
sub
andb
inc
clc
mov
cmp
pushf
stc
pusha
xlat
mov
ss
mov
inc
and
pop
lea
mov
pushf
push
lea
jmp
movl
pusha
lea
jmp
nop
mov
icebp
add
out
test
xchg
icebp
dec
pop
jae
inc
fbld
mov
inc
push
popa
pop
push
and
cs
mov
inc
ret
jle
mov
mov
bnd
es
inc
data16
ljmp
leave
enter
daa
push
int3
out
push
ss
mov
push
inc
sbb
cld
cld
dec
pop
test
pop
inc
inc
mov
mov
mov
stos
add
mov
std
std
mov
cmp
jae
jns
pusha
dec
and
or
cmp
xor
adc
or
xchg
cmp
mov
push
movb
and
js
mov
test
pushf
popf
xchg
mov
insb
inc
aam
fiadds
xchg
push
xchg
stos
and
les
sub
inc
ror
cld
adc
inc
pusha
call
jmp
xor
mov
add
fdivr
lret
dec
shlb
add
daa
and
inc
jb
and
lea
fcmovne
and
loopne
mov
cmp
insl
std
loope
push
pop
mull
int
add
or
lret
ljmp
iret
inc
ss
sub
jno
stc
aam
jge
mov
cmpsb
xchg
popf
test
adc
rolb
inc
mov
mov
pusha
lcall
js
dec
adc
movsb
shrb
push
loopne
cmp
int3
lds
imul
sbb
xchg
sbb
mov
push
daa
mov
scas
popf
and
push
mov
mov
loopne
out
xchg
rcrb
mov
cmp
cmpsl
xchg
out
lcall
jmp
jnp
cmp
lods
bound
and
and
adc
lahf
das
pusha
aad
push
push
inc
mov
or
test
test
cmc
andl
and
andb
cmp
ljmp
inc
sub
btr
mov
mov
je
jmp
pushf
movl
push
mov
push
push
movl
push
pushf
lea
jmp
xor
ljmp
push
fildll
or
jnp
inc
adc
jno
mov
push
movsb
aas
cld
push
dec
cmp
cmc
add
jae
cltd
pop
lret
pop
test
mov
jecxz
mov
sub
cld
xchg
outsb
mov
loopne
movl
add
inc
mov
push
mov
mov
mull
mov
and
lea
call
ret
mov
dec
es
add
sarb
mov
int3
inc
arpl
scas
sbb
repnz
sbb
bound
into
sar
int3
popf
or
sub
js
jl
mov
dec
pop
dec
lock
mov
xchg
xor
mov
lods
dec
pop
jg
xchg
in
add
push
dec
outsl
loope
aam
es
js
adc
rolb
xchg
cld
inc
xor
mov
and
cli
loope
or
cmp
adc
movsl
imull
mov
jno
mov
or
dec
lds
call
jp
and
mov
xchg
outsb
add
mov
xchg
rorb
sbb
scas
into
int3
loop
arpl
xor
aad
gs
or
iret
dec
push
cmpsb
and
lods
mov
mov
repz
mov
cld
jmp
cltd
adc
push
xor
mov
or
sub
outsl
xchg
inc
pop
mov
or
sbb
or
aaa
xchg
data16
cmp
jle
sub
loop
dec
jno
or
rcrl
mov
mov
movl
lea
jnp
pushf
movl
push
pusha
push
lea
jmp
inc
imul
lret
pop
insb
sbb
pop
adc
push
xchg
push
ret
cwtl
and
decl
out
pop
and
cmp
jecxz
add
enter
sbbl
mov
push
sub
dec
add
inc
sub
hlt
inc
fstps
enter
or
inc
mov
xchg
and
mov
jmp
adc
mov
test
popf
rcr
mov
adc
cld
fistps
sbb
lcall
mov
loopne
xor
scas
lret
aaa
mov
sbb
xchg
scas
adc
inc
lods
adc
mov
push
arpl
pushf
test
cld
adc
fdivs
sbb
cltd
mov
add
inc
ja
xchg
jae
lods
push
adc
jge
lahf
int
cmp
mov
xchg
jp
mov
jg
pop
not
pop
cmp
xor
jae
jge
stos
enter
icebp
inc
sarl
int3
jno
jb
lcall
insb
pop
and
fldl
add
dec
and
in
int3
sbb
xlat
push
cmp
pusha
jnp
jmp
ss
xor
pop
xor
fldenv
mov
push
rcrb
cmpsb
cli
adc
mov
xchg
mov
xchg
fcoml
mov
les
xlat
popf
add
xchg
ret
jno
loopne
cwtl
or
xchg
mov
ja
xchg
rol
and
movsb
cli
pop
inc
sub
pop
mov
nop
out
adc
mov
mov
negb
jg
les
adc
push
push
enter
insb
int
add
adc
inc
xor
jne
dec
das
lds
xchg
movsb
std
jmp
and
mov
jbe
test
aad
and
addr16
push
inc
push
jno
add
mov
mov
call
or
lock
pushf
arpl
inc
adc
loop
adc
lahf
cli
mov
mov
xor
xor
je
pop
insl
xchg
ljmp
inc
mov
addl
ljmp
adc
and
je
pop
lock
addr16
jle
jb
jg
push
int3
inc
lret
mov
and
add
xor
lods
pop
adc
cmp
push
dec
repnz
mov
push
xor
xor
loope
cli
jbe
pop
sbb
xchg
adc
pop
sbb
push
xchg
fsubl
jmp
or
scas
outsw
dec
jmp
and
movb
imul
test
cltd
clc
stos
mov
roll
pop
inc
or
in
or
std
adc
fnstsw
sahf
inc
mov
add
sti
and
jge,pn
pop
push
outsb
and
aas
pushf
movb
pushf
mov
pop
std
mov
sbb
daa
add
pop
movsl
negl
or
in
lods
inc
jle
js
das
or
out
imul
sbb
pop
cwtl
lods
mov
out
xor
adc
testb
pop
pop
aas
jge
inc
mov
mov
mov
cli
push
rolb
adc
mov
sahf
stc
mov
dec
push
push
das
ret
sbb
daa
xchg
mov
adc
loop
sub
aam
lods
call
ljmp
jns
mov
shl
test
cmc
mov
fists
sbb
mov
inc
les
in
sbb
cmp
mov
sub
icebp
pop
lcall
pop
inc
jmp
fdivs
jg
and
scas
dec
mov
and
dec
push
pop
cmp
inc
mov
sbb
xor
test
mov
aad
fcoml
mov
daa
xchg
sti
jl
imul
je
lock
and
out
inc
adcb
std
aad
in
sbb
xchg
daa
add
sahf
aaa
cld
adc
lods
movsl
mov
fsubrs
shlb
mov
sti
sarb
icebp
ljmp
cmp
jp
add
out
sti
sub
popf
andl
sub
adc
sub
and
xchg
mov
inc
jecxz
or
sub
xchg
pop
mov
test
push
mov
enter
mov
out
scas
rcrl
mov
push
xor
andb
out
mov
icebp
adc
bound
aaa
mov
xchg
lret
sarb
out
push
sub
repz
mov
pop
idivl
pop
or
sub
mov
jns
sbb
cld
and
inc
push
sub
inc
inc
jge
addb
mov
xor
add
rclb
inc
mov
addl
and
push
sbb
mov
jp
clc
frstor
inc
mov
add
arpl
scas
hlt
push
lock
lods
mov
add
mov
fldcw
push
push
jl
mov
jge
leave
or
push
fdivrs
ret
xor
test
jp
movb
mov
movl
pusha
pushf
pushf
movw
lea
jmp
lods
push
sbb
scas
int3
push
or
idivl
in
pop
xorb
cmp
adc
lods
shll
pop
jecxz
out
clc
outsl
lods
cmp
popa
fildl
mov
es
enter
add
and
jb
mov
mov
scas
jmp
insl
imul
mov
idiv
pop
push
fdiv
js
ja
popa
cmp
cwtl
jge
subl
bound
dec
xchg
mov
sub
into
mov
fmull
lret
mov
fwait
ret
xor
jne
inc
mov
sbbb
movl
pusha
movl
pusha
pushf
pushf
lea
jmp
jno
iret
pop
mov
dec
add
rorl
es
inc
add
fistpl
ret
fsubr
mov
inc
dec
xchg
push
adc
nop
sbb
inc
scas
jl
push
stc
xchg
mov
orb
sub
comiss
cmp
add
enter
jb
rclb
flds
mov
or
cmp
mov
add
cmpsl
sti
lahf
daa
push
xor
push
stos
into
cmp
fxch
mov
lea
stos
sbb
js
mov
inc
dec
mov
lea
insb
add
mov
mov
lret
mov
mov
mov
lea
cmp
repnz
mov
and
stos
lods
adc
ss
movsl
cld
pushf
and
dec
cmp
das
xchg
cmp
or
xchg
mov
aam
hlt
mov
icebp
clc
stos
sbb
mov
dec
sub
stos
std
inc
lock
sub
jmp
add
rolb
cmpsb
inc
scas
xchg
mov
mov
mov
inc
mov
shll
jmp
xchg
cwtl
aas
pop
adc
pusha
aad
push
mov
push
daa
add
lock
in
jl
inc
or
jp
daa
add
sub
inc
test
in
ret
or
arpl
fwait
lock
scas
sbb
or
hlt
jno
mov
push
dec
mov
or
inc
sbb
imul
xor
inc
mov
mov
dec
inc
imul
ds
test
bound
es
cvtps2pd
dec
push
lods
push
xor
shrb
shlb
mov
pop
stos
mov
push
jo
clc
fdivrs
add
lods
inc
mov
xor
aaa
or
push
out
cli
push
lahf
and
test
lret
icebp
test
mov
sbb
loop
fimuls
mov
faddl
xor
jb
adc
je
mov
stos
jmp
ret
lods
push
imul
push
in
fdivrp
scas
mov
iret
ljmp
ljmp
and
mov
push
adc
sbb
int3
or
idiv
shr
cmp
jg
push
xor
sbb
es
jno
bound
dec
bndstx
jmp
das
mov
sbb
lock
out
call
stc
mov
subl
pop
add
call
fistpl
cmp
int3
test
dec
imulb
mov
into
call
xor
jae
shr
fisubl
mov
bound
xor
lods
add
out
sbb
icebp
lods
out
add
xor
sbb
out
addr16
sub
sub
push
and
inc
mov
pop
mov
mov
xchg
lock
cs
push
pop
aaa
push
adc
loope
fsubr
xchg
scas
dec
push
mov
out
lcall
gs
pop
xor
dec
lret
pop
pop
xor
data16
mov
add
cmp
pop
mov
push
jae
xor
add
jae
in
inc
mov
pushf
cli
lds
push
mov
sarl
or
mov
pop
imul
push
and
push
ds
fstpl
and
mov
add
stos
imul
xchg
sti
mov
stos
notb
dec
sbb
pop
xor
adc
dec
es
mov
cmpsb
inc
inc
mov
add
aam
jmp
movl
jmp
sbb
cmpsl
or
leave
add
xor
cs
and
popa
inc
ss
bound
mov
btr
xchg
mov
jo
insb
andl
xchg
addr16
fwait
lea
add
clc
or
xchg
xchg
xor
lea
fistl
jle
inc
sbb
mov
inc
mov
inc
call
movl
pushf
movl
mov
lea
jmp
call
jmp
push
enter
pop
or
add
fistpll
ljmp
cmp
jl
lock
call
push
jae
cs
in
insb
add
adc
sbb
inc
xchg
into
mov
inc
test
loopne
movsb
sub
and
les
sbb
push
cmpsb
inc
mov
sbb
out
fldt
inc
loop
ss
sbb
or
jg
fmul
sub
xor
inc
mov
mov
out
cltd
icebp
adcl
inc
xchg
cs
ss
das
jb
cmpsb
push
lret
test
adc
sbb
adc
packssdw
je
add
mov
mov
outsb
movsb
or
add
std
or
fwait
je
ret
stos
in
jecxz
inc
mov
pop
mov
lea
sub
xor
je
mov
push
xor
dec
adc
mov
es
ret
lcall
push
subb
sbb
popa
daa
leave
adc
mov
push
inc
push
jge
repz
mov
adc
xor
push
mov
xchg
cwtl
les
mov
adc
fmulp
mov
pop
mov
jb
mov
add
push
jmp
cltd
clc
mov
sub
push
jb
dec
js
mov
js
in
jl
mov
xor
dec
sub
pop
cmpsl
inc
mov
outsb
rclb
and
adc
inc
or
or
lods
movaps
mov
in
adcl
mov
adc
adc
andl
stc
jnp
aad
push
fldt
push
out
pusha
sub
xor
loopne
std
mov
cld
movsb
test
mull
xchg
inc
imul
mov
push
adc
js
je
xchg
adc
inc
mov
jmp
jne
fwait
dec
stos
push
pop
iret
mov
or
sahf
call
jp
xor
xchg
dec
dec
jne
jge
cmc
cmpb
cmpsl
cmc
ljmp
fisubl
aam
flds
lods
fistpll
cmp
sub
popw
mov
les
icebp
adcb
pop
inc
or
lds
mov
sbb
test
outsb
inc
mov
test
mov
jp
jo
pop
adc
dec
lret
mov
pop
jl
sti
fldenv
jp
and
negb
mov
cmpsl
pop
stos
in
jns
add
pop
sahf
mov
sbb
cmp
call
out
daa
iret
addr16
mov
push
dec
fdivl
mov
adc
cs
out
outsl
mov
push
pop
xchg
out
lds
test
aam
cmp
jb
outsl
and
push
fidivrl
pop
sbb
inc
mov
rclb
push
test
mov
mov
xchg
scas
repnz
jmp
mov
push
sub
add
pop
xor
gs
jae
cmp
jp
push
mov
xor
sub
adc
pop
pop
or
out
mov
fs
hlt
pop
lret
andl
aaa
roll
push
aaa
gs
inc
mov
xchg
jbe
xchg
xchg
xchg
mov
jecxz
ds
insb
push
dec
aad
cmp
or
mov
dec
push
push
mov
test
push
cmp
xorl
jbe
adc
sub
dec
dec
inc
loope
addr16
mov
push
adc
jbe
or
mov
dec
outsb
stos
sahf
rclb
mov
sub
sub
mov
jg
inc
jp
pusha
mov
sub
mov
pop
out
mov
cli
mov
xchg
xor
add
call
int
add
mov
sub
shlb
loope
inc
in
stos
xor
push
xchg
and
lods
loope
les
cmp
insl
fwait
and
jb
in
out
sbb
loope
cmp
inc
mov
cmp
movb
movl
pusha
lea
jmp
mov
push
sahf
cli
mov
stos
sti
mov
mov
push
ds
insb
iret
and
mov
push
int3
icebp
xor
arpl
xchg
sbb
xor
pop
inc
std
inc
push
sub
dec
insl
add
fldenv
sub
arpl
cmpsb
cmp
jp
jne
lods
outsl
aam
jle
mov
and
xchg
sub
sti
add
cmpsb
jns
mov
jb
push
pop
sti
cltd
xchg
loop
imul
int3
sub
pop
inc
ffreep
jnp
xchg
mov
imul
jno
clc
cmp
test
scas
inc
stos
outsb
in
push
push
lret
lds
sub
add
and
sbb
in
test
cmp
jbe
jo
jle
cmc
inc
mov
xchg
and
cmpsl
sub
mov
into
test
iret
mov
loop
jbe
in
or
pop
mov
outsb
xor
insb
push
out
ljmp
rol
jecxz
cmp
xchg
aam
mov
js
xlat
insl
movl
pusha
lea
jmp
test
repz
out
loop
dec
call
popa
ss
stos
out
xchg
mov
aaa
mov
fstpt
pop
cli
in
stc
sbb
add
sub
mov
jb
mov
sub
andl
lahf
push
mov
cmovl
push
call
lcall
movl
mov
jmp
pop
mov
pop
or
cmp
adc
aam
cmp
jl
iret
stos
iret
cmpsl
ret
mov
mov
dec
push
ds
jb
stos
ficoml
mov
aaa
fdivr
inc
dec
jne
xchg
pmaddwd
mov
lahf
das
pop
inc
xor
dec
lret
sbbl
xchg
jmp
sub
sub
or
sub
add
mov
add
pop
inc
sarb
push
ret
ja
mov
pop
sub
inc
ss
das
xchg
scas
movntq
scas
dec
lods
pop
or
xchg
xor
out
or
arpl
mov
mov
subl
rcrb
lret
fwait
or
push
xor
stos
or
cmp
hlt
jle
dec
pop
jg
xor
xor
xor
push
push
inc
aas
movb
jnp
mov
push
pop
std
ljmp
pop
pop
imul
lret
inc
das
and
ret
jns
aas
cmp
push
adc
dec
popl
ja
shrb
aas
jmp
pop
and
out
mov
mov
clc
jno
fs
jp
inc
loope
dec
fisubrs
loope
out
daa
jns
sub
mov
push
cmp
repz
jg
push
sbb
imul
sahf
lds
adcb
mov
lea
mov
pusha
sub
sahf
js
cmp
push
fimull
ret
and
jmp
sbb
dec
add
xor
stos
popf
insl
and
mov
dec
push
add
imul
lcall
xor
jns
pop
push
aas
bound
mov
jp
sti
ss
cmc
cld
mov
jnp
xor
lods
hlt
mov
fwait
inc
mov
movl
in
sub
pop
cmp
add
jae
std
dec
imul
inc
xor
add
or
clc
adc
xchg
xor
mov
out
loopne
jmp
out
into
lahf
repz
js
xchg
sbb
push
je
xchg
pop
cli
mov
xor
xchg
les
pop
push
rorl
mov
fdivl
pop
mov
mov
and
jmp
and
sbb
rcll
pop
push
ret
xchg
jns
roll
std
inc
cmp
inc
adc
xor
out
mov
push
movsl
mov
pop
mov
aaa
xchg
jnp
filds
jbe
insw
into
out
cmp
xchg
mov
ds
js
jb
mov
lret
sahf
out
scas
fcmovnb
push
mov
testl
fisubrl
fimull
loopne
mov
daa
loopne
pop
jl
movsl
scas
fsincos
mov
test
enter
jle
inc
mov
mov
ds
sub
jno
outsb
mov
adc
nop
sub
and
movhps
fadds
sti
loop
push
mov
jns
pop
cmp
inc
mov
and
cmc
cli
push
sbb
scas
adc
out
mov
mov
and
inc
xchg
inc
ffree
jl
adc
lea
out
sub
ljmp
xchg
pop
mov
add
mov
push
fisubl
outsl
js
adc
lock
and
insb
das
sahf
out
lock
roll
je
mov
call
add
mov
shl
inc
cltd
mov
dec
push
push
in
mov
data16
or
das
cmp
arpl
ret
xchg
xchg
and
sub
les
test
push
push
dec
popa
and
xchg
jl
sub
xchg
mov
mov
out
push
jl
clc
pop
xor
sbb
fxsave
mov
fidivrl
shrl
rcll
lret
mov
mov
aas
dec
pop
jne
loopne
test
cmpsl
mov
fdivs
fidivrl
sub
inc
pop
ljmp
push
cs
xchg
push
jmp
cltd
mov
push
adc
mov
movsb
icebp
mov
jb
dec
pop
popa
shlb
cmp
in
mov
imul
and
push
stos
push
dec
js
scas
mov
lahf
xor
or
mov
push
dec
add
dec
pop
je
jp
pop
sbb
mov
bswap
movsl
out
xchg
inc
inc
mov
popf
bound
mov
push
pop
loop
adc
hlt
pop
xor
pop
inc
cmp
pop
sbb
dec
pop
imul
mov
sub
out
out
xchg
enter
lods
stos
sub
sbb
jns
mov
jecxz
and
hlt
sbb
daa
repz
rclb
xchg
jae
cli
je
faddl
inc
mov
lret
cmp
inc
and
fidivrs
xor
push
add
and
inc
scas
cld
imul
sub
lods
cmp
cvtps2pi
pop
inc
sub
bound
outsb
lods
in
int
dec
xlat
xlat
jecxz
dec
push
pusha
or
mov
mov
jg
lods
stos
jg
xchg
xor
clc
js
jl
das
clc
mov
push
lcall
jo
imul
in
mov
sti
jbe
push
mov
fidivs
sub
xchg
fs
fildl
imul
outsb
scas
mov
and
aad
inc
xor
std
mov
mov
jae
xchg
enter
and
and
lock
adc
js
jbe
push
mov
sub
or
mov
ja
or
jbe
pop
mov
lret
jnp
jmp
lahf
shll
mov
cli
mov
inc
hlt
xor
jne
pop
jp
cmpsb
addr16
adc
jno
shrl
movl
movw
movl
push
pushl
pushl
movw
lea
jmp
ret
loope
fildll
std
ret
sbb
je
mov
sub
and
inc
pop
out
xor
sbb
mov
inc
sbb
mov
add
ror
jae
ja
jb
in
cli
fildll
in
cltd
loope
into
xchg
sub
movsl
lds
jb
pop
mov
lods
jle
jbe,pn
sub
push
add
inc
add
or
mov
pop
popf
inc
movsb
ljmp
mov
filds
inc
cwtl
mov
leave
dec
jl
ret
dec
sbb
ja
sbb
out
or
jle
jbe
pop
adc
xchg
daa
stos
jne
scas
lods
subl
jl
lock
sub
loope
pop
xchg
inc
jne
push
ficoml
fcos
push
jp
sbb
js
adc
in
pop
or
int3
aaa
mov
mov
inc
hlt
lods
aas
mov
lock
push
out
mov
xchg
mov
fcompl
loopne
add
xchg
aas
dec
or
pusha
xchg
paddb
mov
movsb
sbb
jo
lcall
mov
mov
lods
jae
adc
mov
sti
scas
loope
sub
mov
xchg
bnd
inc
inc
in
mov
or
in
unpckhps
dec
adc
faddp
push
divl
shrd
gs
mov
cli
call
mov
call
std
mov
testb
xor
repz
arpl
inc
ss
scas
and
jle
dec
mov
xlat
pop
js
fadds
mov
jne
mov
sbb
clc
mov
sbb
xchg
cmpsb
sbb
clc
movsl
or
je
fsubs
lods
jecxz
xchg
fwait
data16
cmp
xchg
pop
aaa
loopne
lock
jg
xor
cmc
fildll
pop
xchg
adc
fcom
sbb
mov
push
pop
ljmp
daa
in
adc
push
arpl
std
mov
push
and
pop
fwait
lds
mov
inc
int3
repnz
sub
movsl
push
xorb
out
rcrb
test
inc
mov
mov
jmp
push
adcb
adc
jbe
in
xchg
inc
iret
sub
adc
inc
jae
outsl
mov
test
xor
gs
mov
xor
mov
and
sbb
mov
fsubs
movsl
sub
mov
xchg
xor
cmp
add
xor
aas
ja
out
in
icebp
scas
std
out
xchg
cld
stos
gs
lea
xor
jmp
lcall
aaa
mov
inc
mov
adc
call
jmp
aaa
fisubrl
std
bound
lcall
cmc
cltd
std
inc
cmp
inc
adc
fdivrl
mov
pop
jg
sti
and
mov
test
aas
xchg
jg
pop
sarb
adc
mov
pop
loope
pusha
out
scas
mov
inc
cmp
loope
test
push
hlt
dec
insl
sbb
mov
aam
je
or
bound
out
ret
insl
cmpsb
sub
outsl
mov
jne
mov
jbe
jnp
inc
pop
out
dec
mov
outsb
mov
sub
mov
push
aas
and
cs
or
adc
rcrb
add
sbbl
adc
movsl
xor
and
cmp
lcall
cmc
mov
dec
or
inc
or
add
dec
push
sbb
decl
mov
mov
aaa
rolb
pop
sub
mov
negb
jle
and
push
imul
jns
mov
fisttps
cwtl
test
int3
xor
mov
adc
jge
scas
pop
cmc
sbb
xor
arpl
scas
leave
gs
mov
cli
cld
shl
xchg
jb
pop
xor
xchg
loopne
lahf
mov
inc
in
sbb
das
cltd
mov
clc
mov
aaa
push
std
inc
mov
adc
fsubl
imul
cli
inc
xor
add
jns
lcall
and
movsl
jg
cltd
cmp
jbe
jp
dec
les
cmc
or
nop
and
add
cmc
xchg
shl
push
jbe
shl
add
adc
sub
mov
sbb
xlat
mov
inc
mov
sub
adcb
int
push
inc
ja
xchg
leave
ja
inc
jo
fs
mov
iret
mov
call
add
test
sti
push
nop
inc
div
xchg
je
movsb
shlb
and
cmp
mov
stos
mov
sbb
decb
xor
xchg
jg
je
arpl
inc
int
cli
cmp
insl
inc
inc
pop
stos
pop
in
ja
pop
push
out
mov
add
xor
lods
enter
mov
push
adc
testb
icebp
lret
push
and
pop
shlb
push
movsl
jg
int
mov
je
cmp
ret
lret
push
pop
mulb
xor
ret
sub
lods
fsubrl
mov
divb
xlat
xchg
mov
fcoms
jno
fmull
sbb
or
je
jmp
subl
arpl
mov
add
mov
inc
mov
aaa
jmp
mov
jg
imul
loope
xor
mov
push
dec
adc
adc
fisttps
lock
repnz
cld
ret
fistpll
dec
jge
repz
pop
push
outsl
cmp
or
cmp
and
jbe
mov
or
inc
movsl
adc
jns
inc
mov
out
aad
fisubrl
cwtl
xor
jb
inc
and
cwtl
repz
push
in
xchg
mov
out
jae
jmp
test
daa
inc
in
ljmp
cld
imul
jge
fwait
std
inc
adc
xor
lods
mov
cmp
jecxz
jp
pop
out
bound
mov
stc
xchg
stos
divb
in
icebp
fidivl
dec
or
fmull
icebp
xor
negl
or
lods
shl
pop
jg
sbb
push
out
mov
inc
sub
jle
fnstsw
add
rcll
outsl
cmp
or
and
push
pop
mov
mov
mov
ja
fisubrs
push
cmpsl
sbb
xor
pushl
movl
pushf
push
pusha
movl
pushf
lea
jmp
pusha
call
xchg
xchg
jnp
stos
mov
popf
cmpsl
fadds
or
repnz
movsb
or
movsb
and
stos
mov
push
loopne
dec
test
add
or
add
out
aaa
jge
push
call
cmpsl
adc
ljmp
cmpsb
pop
push
out
imul
jae
mov
and
push
push
pusha
movl
movl
pushf
push
movl
pushf
mov
pushf
mov
lea
jmp
mov
inc
mov
arpl
scas
sub
mov
and
push
add
xor
pop
cltd
mov
rorb
test
and
push
mov
mov
int3
dec
mov
fdivl
rorb
mov
push
loope
shrb
movsb
adc
adc
call
cld
fstpt
cmp
std
adc
rclb
jne
je
fcoml
insb
xchg
aam
int
xchg
into
out
test
ljmp
and
inc
xchg
xchg
cmp
mov
test
mov
adc
mov
jg
shl
sbb
les
arpl
xchg
sbb
sub
aaa
dec
imul
js
fcmovbe
leave
fstpt
xchg
les
arpl
in
xchg
ljmp
out
imul
mov
jb
in
scas
jg
cltd
std
inc
lea
mov
push
out
inc
mov
mov
loop
insb
push
cmp
test
jae
cwtl
sarb
addr16
mov
jns
in
cmp
loopne
test
push
mov
sub
ffree
lock
inc
add
mov
lahf
dec
out
loop
sub
cld
jns
popa
inc
adc
push
shlb
jle
or
arpl
cli
dec
cmpl
lock
inc
pusha
cmc
test
dec
or
and
inc
mov
lcall
sahf
es
xor
pushf
aam
roll
cmpsb
and
mov
in
gs
lock
push
jl
icebp
dec
add
mov
ljmp
mov
shlb
shlb
mov
dec
adc
and
bnd
sti
sahf
insb
hlt
ja
adc
or
mov
ss
xchg
nop
test
movsl
pop
inc
mov
loopne
jp
sbb
lret
mov
jnp
jge
inc
sti
cs
sbb
dec
mov
jg
das
sub
rolb
out
call
lock
xchg
in
jl
nop
fidivrs
popf
in
adc
push
pop
movsb
pop
in
mov
mov
and
inc
sub
imul
mov
into
out
imul
pop
ljmp
jbe
xor
sub
inc
mov
mov
push
pusha
jmp
xor
pop
sub
aas
filds
icebp
or
cmp
dec
and
xor
mov
imul
and
adc
aas
stc
stos
stos
pop
jae
fstl
fmuls
lock
fcmovb
mov
ret
jmp
pop
jbe
int
mov
inc
test
lods
mov
out
test
mov
sub
pop
cmp
jg
push
jb
es
lods
xchg
call
rclb
or
rolb
outsw
mov
pusha
jmp
mov
lds
xchg
push
lahf
mov
ret
gs
mov
mov
sarl
movsl
cltd
pop
jmp
in
pop
lods
push
lret
imul
jmp
rcr
idivb
in
out
arpl
push
mov
adc
inc
das
imul
jbe
xchg
push
mov
xor
mov
notb
aad
or
jmp
in
mov
push
imul
pop
hlt
pop
popf
ljmp
shll
adc
xchg
pusha
or
mov
mov
or
jae
pop
sahf
call
leave
lock
sbb
jmp
in
icebp
or
es
push
add
push
add
mov
jmp
sahf
sub
lret
ds
dec
adcl
mov
sbb
adc
addr16
sub
adc
pop
cmc
ret
iret
rcl
mov
out
sub
mov
or
jbe
loopne
std
mov
es
ficompl
idivl
dec
dec
mov
addr16
xor
imul
sbb
add
jno
dec
out
adc
push
xor
mov
pushf
pop
ret
std
mov
or
loopne
and
int
xor
push
xor
xchg
mov
loop
cwtl
sbbb
cwtl
xor
leave
mov
idivl
xchg
int3
arpl
gs
stos
lahf
push
pusha
call
pushl
movl
mov
call
ja
fldenv
les
sbb
clc
test
xchg
jle
xor
repnz
aaa
popf
inc
popf
aas
daa
pop
aas
jae
js
imul
enter
in
xor
movsl
dec
test
es
cmp
insb
sub
call
lret
jecxz
test
test
and
movsb
and
inc
push
inc
lret
jle
jmp
out
cmp
cmp
lea
inc
clc
xchg
frstor
and
jae
notl
out
jmp
rcrb
jg
sarl
jnp
and
in
fs
int3
int3
sbb
test
dec
xor
sub
ror
mov
pop
xor
test
dec
loop
addr16
imul
pushf
stos
repz
lock
lret
scas
in
sbb
inc
mov
pop
xchg
push
loop
ds
nop
xor
cwtl
mov
pusha
cmp
inc
or
jae
push
mov
fs
jg,pn
insb
jg
xor
cld
imul
fisubrl
movaps
cmpsb
mov
arpl
popa
xor
mov
das
jae
push
in
push
inc
mov
sbb
xchg
and
hlt
jmp
dec
aam
into
mov
js
popf
adc
jnp
arpl
sbb
pop
mov
xchg
xchg
xor
es
xchg
testl
outsl
jbe
push
dec
dec
int3
fcmovnb
out
push
ja
jno
jb
test
push
cmp
popl
arpl
repnz
cmpsb
and
arpl
mov
push
jg
pop
cmp
pop
inc
jnp
data16
pop
sbb
and
jo
test
ss
loopne
inc
fiadds
stos
fisubrs
idivl
sub
leave
cmpsl
sbb
popf
mov
ljmp
shld
inc
iret
loope
and
jl
dec
adc
jp
xchg
pushf
mov
inc
js
cwtl
int
les
cld
insb
sub
lods
mov
add
pop
stos
push
dec
lcall
push
adc
jmp
jnp
adc
pop
gs
adc
in
js
clc
mov
rcr
movsb
cmp
stc
scas
lret
mov
lret
mov
fs
add
data16
rorb
dec
lcall
repnz
es
mov
std
or
mov
js
fisubrs
test
xchg
lock
icebp
in
mov
push
sub
mov
cmpsb
pushf
xorl
jge
test
adc
je
mov
mov
inc
iret
push
punpckhwd
xor
dec
sub
sub
push
leave
fbld
sub
fsubl
inc
mov
push
xor
insl
or
cmp
gs
out
inc
and
jl
dec
adc
aad
ficoms
pop
xchg
and
hlt
scas
lods
inc
mov
sbb
cld
push
jo,pn
daa
xchg
inc
bound
pop
pop
movsl
sub
jb
ds
push
ds
pop
mov
push
xor
push
xchg
aas
out
movsl
cmp
push
adc
arpl
scas
dec
jmp
and
daa
xchg
rcl
scas
push
jl
push
ret
out
jb
mov
mov
push
mov
cltd
jns
fsubrs
loope
ss
iret
int
clc
mov
dec
cmp
movsb
sarl
call
cwtl
add
dec
adc
dec
cmp
inc
es
int3
pop
rcrb
mov
adc
iret
and
out
pop
push
inc
xchg
inc
mov
fbstp
add
xlat
cmp
stos
dec
dec
cmp
bound
je
dec
into
cwtl
ds
jmp
xchg
ljmp
aam
jecxz
rorb
shlb
loopne
dec
or
das
inc
fildll
jp
adc
cmp
lods
js
ficoms
mov
push
pop
jbe
xchg
jge
mov
stos
dec
mov
sub
lods
mov
adc
sbb
fstps
and
cmp
mov
push
pop
enter
push
or
fcmovb
popa
cmpsl
fimull
pop
inc
or
ss
pushf
dec
add
push
in
mov
inc
mov
stc
movb
pusha
movl
pushf
lea
jmp
xchg
mov
xchg
jnp
addr16
sbb
in
mov
lret
adc
xchg
aas
cs
cs
in
push
call
aaa
sbb
sub
dec
fnstcw
fimull
aas
je
push
mov
cs
sbb
jo
pop
es
inc
mov
pusha
mov
mov
pusha
movl
pusha
pushf
movl
pushl
push
pushl
lea
jmp
ja
in
lods
cmp
and
fwait
dec
jbe,pn
mov
movsb
mulb
add
outsl
jae
jbe
popf
xchg
in
xor
pushf
cmpb
cmp
jne
jbe
jg
pushf
push
cltd
test
mov
aad
pop
sub
fwait
dec
push
xchg
mov
jne
or
fadds
out
pop
sbb
adcb
jns
inc
aaa
insb
daa
insb
jbe
stos
mov
pop
mov
push
ja
adc
pop
inc
inc
loope
pop
add
aaa
mov
cmp
mov
jge
outsb
xchg
add
aad
in
lret
mov
popa
js
sbb
test
xor
sub
arpl
cld
add
mov
pop
mov
and
fimull
js
std
pushl
inc
lds
aad
mov
sub
outsb
cmp
cltd
loopne
divl
jne
stos
mov
call
cmp
dec
push
sub
divb
cmpsb
andl
inc
ss
dec
fwait
push
andl
inc
xor
jge
idivb
push
sub
loopne
ljmp
or
jns
loopne
rcrl
cmp
sub
push
inc
mov
sbb
ret
xor
mov
test
jl
dec
repz
scas
add
sbb
cltd
andb
mov
scas
scas
imul
ljmp
in
lds
repnz
in
dec
in
iret
rol
and
test
adc
test
sahf
or
inc
xor
int
mov
dec
lret
sub
inc
mov
mov
or
push
and
aas
mov
jo
sbb
jmp
pop
jp
mov
xor
adcb
and
mov
and
out
add
push
fists
xor
fwait
sbb
daa
inc
add
inc
cmp
pop
pop
cmp
push
push
or
aam
rcl
add
call
and
push
cmp
ret
divl
xor
mov
push
rorl
xchg
stc
scas
int3
xchg
jbe
movsl
fneni(8087
inc
mov
inc
push
adc
jae
push
and
incb
and
sahf
lds
aas
shrb
pop
inc
daa
jg
xor
mov
cmpsb
sbb
xchg
daa
sbb
lea
adc
xchg
cmp
ret
out
pushf
out
cmp
mov
sbb
dec
cmp
ljmp
scas
xchg
sub
add
cmp
data16
and
inc
cmp
mov
scas
mov
sbb
incb
rep
mov
loopne
ja
ljmp
inc
adc
sub
xchg
rcrb
pop
test
scas
lods
jmp
nop
inc
mov
adc
mov
push
mov
adc
adc
mov
mov
sub
sbb
push
lahf
sub
and
xchg
cld
fdivrs
jg
int3
fld
lea
roll
xlat
cmp
mov
inc
or
bound
icebp
iret
jae
cld
mov
subb
dec
jb
sahf
dec
push
jno
mov
fwait
push
add
sahf
mov
push
inc
clc
jbe
cmp
lret
jb
mov
adc
xchg
fwait
or
out
test
pushf
sbb
mov
add
int
inc
inc
je
fs
ficomps
fwait
sub
hlt
in
out
xor
stos
push
and
loopne
mov
push
or
fbstp
sbb
insl
mov
pop
test
mov
loopne
jp
aad
scas
adc
push
or
orl
xchg
or
cmpl
add
outsl
and
aam
stc
call
mov
jb
cmp
sbb
jnp
inc
pop
movsb
add
cmp
shll
push
mov
std
sbb
xchg
loop
ljmp
out
mov
loopne
push
sbb
pop
out
lods
sbb
pushl
sbb
jmp
call
sti
mov
jmp
out
call
out
cmp
mov
xchg
jb
mov
cmp
jp
dec
sbb
shlb
outsb
pop
out
loop
dec
mov
push
nop
icebp
enter
pop
pusha
bound
pushf
clc
xchg
aam
cmp
scas
out
mov
push
xchg
pop
ret
rol
pushf
push
scas
inc
scas
jno
lahf
cmp
mov
add
sub
jmp
ds
arpl
lret
shrb
ds
cmp
int
xchg
xlat
push
and
ds
inc
mov
ret
inc
and
fisubs
fs
push
movl
pusha
mov
push
lea
jmp
test
orb
inc
push
push
ss
and
mov
rcrb
mov
mov
mov
es
sbb
mov
fs
pop
cltd
cwtl
pop
fidivrl
jg
add
movsb
movsl
lea
and
jo
jae
dec
iret
mov
push
cmp
sbb
aaa
lahf
aam
sub
dec
push
clc
fdivs
pop
jl
xor
inc
pop
dec
and
pop
xor
arpl
and
cmp
xchg
pop
js
xor
fnstsw
cmpsb
notb
and
cmp
adc
scas
test
add
int
outsb
sarl
mov
inc
or
cltd
jecxz
and
cmp
pop
adc
dec
imul
orl
insl
out
cmp
mov
data16
movl
mov
lea
jmp
pusha
call
dec
inc
add
push
insb
inc
ficompl
mov
pop
dec
or
imul
cmpsb
mov
pushf
fs
out
ljmp
scas
dec
insl
cltd
data16
hlt
repz
sbb
int3
in
push
adc
and
sbb
in
dec
mov
sbb
addb
cmc
popf
shrb
push
aam
xor
ret
mov
mov
and
inc
andnps
jmp
add
in
test
out
jecxz
dec
pop
lods
pushl
lds
das
jae
sbb
jl
js
dec
and
insl
enter
jecxz
cmp
xchg
icebp
jecxz
and
xchg
cmp
stos
out
mulb
stos
mov
ret
pop
fldl
add
fcmovnb
mov
adc
xor
pop
jp
jnp
test
mov
pop
cmp
pop
inc
insl
xlat
mov
sbb
cltd
ss
push
in
loopne
int3
mov
xor
xor
dec
ret
bswap
fdiv
mov
jae
cs
test
push
in
add
int
xor
repnz
cs
add
je
mov
pop
sub
sbb
xlat
jns
in
out
out
push
shlb
out
stos
and
inc
pop
lret
sub
xchg
stos
mov
mov
int
insl
dec
fsubrs
xlat
js
inc
lcall
add
cmp
cltd
add
push
sub
les
mov
sbb
push
jne
enter
mov
mov
mov
inc
mov
pop
mov
mov
jmp
inc
sub
test
cmpsb
add
cmp
xchg
inc
lahf
in
aaa
xchg
jp
or
push
nop
ret
das
ljmp
sub
sbb
jb
cld
adc
imul
xor
mov
in
mov
push
mov
adc
mov
jb
or
movsb
arpl
jne
mov
mov
or
push
mov
js
cmp
loopne
mov
aad
xor
mov
fldcw
or
mov
aaa
lds
add
pop
ljmp
jb
movsl
ret
insb
sub
add
shlb
dec
mov
adc
dec
lcall
mov
adc
push
inc
daa
inc
sub
push
das
dec
jbe
jl
sub
ja
cmp
sbb
ss
enter
pop
cmpsb
xor
jecxz
out
arpl
dec
scas
cwtl
cmp
or
xchg
leave
gs
loope
fwait
aad
cld
jnp
stc
dec
xchg
pextrw
sahf
xchg
or
xchg
repz
mov
in
push
inc
adc
repnz
adcb
jg,pt
mov
sbb
push
es
sbb
scas
sbb
mov
add
mov
addb
insb
dec
or
in
enter
adc
push
mov
mull
in
in
fsubr
inc
movsl
hlt
xchg
shlb
xor
sbbb
push
mov
in
xor
pop
sbb
scas
push
es
cmp
cmp
push
pop
hlt
lds
pop
push
and
jecxz
das
scas
jmp
mov
jne
pop
jae
pushf
inc
mov
adc
jne
aas
sahf
inc
xor
out
cmp
sbb
lahf
cmp
subl
vpsrlw
push
and
dec
add
or
and
stc
in
sbbl
jge
loopne
sub
jns
test
lods
ljmp
out
out
adc
sbb
push
add
pop
scas
call
cwtl
lret
stos
ss
jne
sbb
imul
sub
mov
aam
xchg
rol
cmpsb
xchg
rclb
repz
scas
and
mov
xchg
pop
inc
mov
inc
add
jl
in
mov
lcall
sti
fnstenv
cld
loopne
add
mov
jg
mov
push
lcall
and
or
mov
lcall
addb
outsb
sub
stos
pop
dec
or
xchg
cmp
push
or
adc
imul
adc
lcall
xchg
push
pop
ret
ret
cmp
cltd
sbb
jmp
jle
loopne
sbb
int
push
mov
lds
push
clc
jo
insb
sbb
daa
and
adc
fadd
sub
sets
stc
pop
out
scas
ds
jp
push
clc
adc
xchg
mov
pop
jmp
imulb
sbb
aad
push
dec
test
je
clc
inc
jne
adc
inc
movsl
or
into
repz
pop
adc
jl
jbe
or
in
add
add
scas
xor
mov
sbb
xchg
rcrb
popa
ss
popa
sbb
aas
bound
mov
outsb
fisttpl
aaa
insb
aas
roll
push
xchg
mov
push
mov
stos
hlt
mov
inc
sbb
inc
filds
mov
shll
loope
ss
iret
scas
rolb
std
inc
mov
mov
push
lahf
jmp
cmp
fcompl
das
mov
icebp
sub
sub
daa
push
sub
mov
push
xlat
xchg
pushf
mov
mov
jo
xchg
addr16
mov
icebp
mov
lock
dec
inc
mov
fsubl
push
lds
dec
test
jp
lea
jno
jg
mov
orb
jo
or
add
cmp
mov
cmp
stos
mov
leave
ss
insl
jp
xchg
adc
mov
or
ficoml
add
inc
xchg
sub
and
leave
add
mov
movsb
gs
sbb
push
sub
push
in
rolb
push
cs
imul
cmp
pop
lea
sub
bound
mov
and
nop
cmpsb
xor
leave
add
cmp
xchg
add
mov
push
jle
ret
mov
bnd
std
mov
ret
cmp
lcall
jns
nop
sub
xor
jmp
aas
test
and
adc
fs
stos
inc
pusha
xchg
mov
int
sbb
popl
push
shl
xrelease
movl
pushf
pusha
movb
lea
jmp
call
jmp
dec
stos
sbb
decl
mov
sbb
sahf
aas
gs
lock
cwtl
lea
inc
push
ja
ret
test
mov
pop
daa
push
pusha
or
xor
xchg
cmp
mov
sub
add
out
popl
cld
dec
stc
cmp
mov
andl
sbb
pop
fsubrs
jmp
jno
ja
lods
and
movsl
mov
out
repnz
stc
xchg
mov
push
or
icebp
in
andl
xor
das
sbb
xchg
pop
lahf
sbb
in
lock
ss
add
jge
add
add
std
jmp
xchg
dec
icebp
ljmp
cli
test
cvttps2pi
xor
ss
xlat
fwait
sbb
sub
cli
mov
cltd
cmc
pushf
pop
inc
mov
lret
push
sbb
sar
lahf
icebp
leave
leave
xor
aam
int3
inc
int3
ja
xor
inc
dec
mov
push
in
mov
dec
cmp
das
leave
pop
push
dec
mov
test
jl
repz
es
cmp
mov
pop
aas
add
sub
jl
add
lea
fisubrs
or
loopne
mov
arpl
test
dec
pushf
cmp
loope
xor
stos
into
insl
ljmp
jo
push
dec
push
sbb
pop
inc
xchg
sub
dec
pop
lahf
sbbl
rorl
ret
adc
ror
cmp
insl
enter
mov
fnsave
lods
mov
push
out
mov
movsb
insb
jmp
xor
cmp
rcll
inc
mov
ja
cmp
mov
sahf
push
adc
les
mov
lret
out
iret
dec
popf
jnp
lahf
clc
push
push
or
inc
pusha
loop
sub
xchg
lcall
xlat
xor
insb
dec
loope
sbb
lods
outsb
xchg
inc
repnz
and
xlat
pop
sti
adc
outsb
les
or
jb
outsb
bound
mov
jl
movsb
mov
push
icebp
pop
iret
and
add
cmc
jle
mov
or
xor
arpl
cmc
lahf
cmp
xchg
xor
bound
fldcw
divl
pop
int3
insl
aam
push
dec
popf
gs
inc
sbb
and
pop
add
roll
ljmp
call
rcrb
xchg
and
dec
pop
mov
lea
test
outsb
jp
mov
sbb
mov
push
out
lea
mov
shrb
sahf
in
inc
ret
sub
xchg
mov
xchg
ljmp
sub
nop
int3
fmuls
call
roll
rcrb
out
xorb
inc
mov
dec
in
imul
add
test
cltd
sub
xchg
pop
dec
push
adc
xchg
inc
mov
lods
addr16
sub
mov
inc
jp
fistpll
imul
out
fwait
int
aas
les
jp
movsl
xchg
adc
lods
pop
mov
mov
outsl
and
push
add
adcl
dec
stc
repz
divl
or
loope
ret
push
subl
sbb
mov
mov
daa
dec
push
ucomiss
loop
jle
daa
cmp
cltd
mov
out
and
mov
mov
loope
push
out
std
jp
inc
cli
mov
and
cmp
ja
adc
les
decl
dec
fstps
cli
jo
jno
jb
incb
mov
dec
and
push
sbb
mov
outsb
add
subb
or
sub
mov
incb
ja
mov
ds
clc
ret
in
inc
sub
aaa
imul
xor
in
out
jb
add
cwtl
or
inc
pop
rclb
fdivs
mov
in
pop
add
fcomi
mov
xor
xor
loope
rclb
inc
stc
insl
or
jns
cmp
or
pop
sbb
loopne
stos
cld
out
in
jno
sti
cmp
add
pop
or
ret
inc
mov
jp
movsl
scas
adc
lret
loope
jecxz
or
aas
jle
js
push
and
arpl
out
addl
insl
cmp
mov
mov
pop
enter
push
stc
popa
mov
mov
lcall
jbe
leave
xchg
adc
and
sub
int3
test
testb
movaps
sbb
push
cmc
in
or
out
inc
shl
pop
pop
add
shll
mov
jae
jns
push
arpl
jecxz
repnz
jl
sub
jl
xor
test
dec
add
arpl
cmc
inc
mov
mov
loope
std
shll
mov
xchg
sub
mov
testb
aam
ja
dec
mov
scas
inc
popa
xlat
mov
mov
shlb
jb
xor
adc
sti
pop
test
dec
xchg
xchg
lret
pusha
cmp
mov
jns
fmull
lea
jb
xabort
fcmovnb
in
sbb
data16
cwtl
mov
push
dec
xor
mov
mov
ds
mov
std
pop
test
or
in
jecxz
xchg
adc
fnstenv
leave
leave
aaa
xchg
xor
mov
mov
push
cmp
mov
ror
jg
and
push
dec
and
xor
dec
fldt
and
or
cmp
loope
mov
leave
cmp
out
mov
gs
in
dec
cmp
in
test
loop
cmp
stos
cld
mov
dec
inc
inc
inc
movl
push
pushl
lea
jmp
outsb
nop
sub
cmpsb
mov
hlt
jl
mov
inc
shrb
mov
lea
sti
pop
inc
scas
inc
pusha
lcall
fstps
mov
icebp
test
mov
lods
mov
fnsave
sbb
into
adc
je
mov
movlps
sbbb
test
jns
fdivr
out
icebp
pop
xor
cmp
and
mov
mov
sbb
aaa
mov
das
jg
mov
scas
cmp
sbb
aam
sbb
sub
inc
mov
pushf
sub
push
mov
jmp
adc
sar
mov
jle
lods
or
sbb
imul
and
and
sbbl
lds
shrd
mov
xchg
ror
dec
cmpsb
sbb
ret
and
mov
xor
mov
mov
xor
outsb
xor
adc
js
mov
dec
push
orl
or
out
lock
fstpl
mov
mull
or
mov
shlb
lcall
sbb
ja
mov
jecxz
inc
dec
jne
cmpsl
pop
fistpl
jo
push
sub
es
sbb
pop
add
push
shrl
mov
das
inc
sub
incb
dec
inc
outsl
and
popf
adc
pop
or
fstl
jo
movsb
das
push
xor
dec
pop
add
mov
add
sbb
js
mov
arpl
pop
les
cld
mov
mov
fldt
xor
repnz
and
pop
lock
mov
inc
pop
push
pop
rorl
je
mov
cmp
lock
jecxz
sub
iret
mov
sub
js
je
add
pop
int
cmp
fisubs
lods
ljmp
or
dec
adc
imul
mov
sbb
aaa
jl
cld
jb
pop
filds
loop
pop
sbb
dec
in
fsubrs
mov
cmp
in
mov
mov
stos
xor
cmp
adc
xchg
out
lock
out
sub
fistpll
mov
add
mov
lret
or
rolb
icebp
add
aas
push
mov
mov
addl
mov
inc
mov
loopne
movl
pusha
push
pushf
lea
jmp
sub
mov
xchg
sbb
popf
sbb
dec
xor
sub
repz
movsb
pop
fildll
stos
pop
jecxz
pop
nop
mov
inc
lcall
scas
fldl
adc
dec
icebp
mov
xchg
jl
insl
roll
test
scas
int3
rorl
inc
leave
ds
xchg
xchg
test
out
mov
cmovle
mov
rclb
inc
loopne
add
sahf
aam
xchg
mov
sub
dec
iret
sbb
mov
adc
loope
add
push
shrb
enter
jb
test
les
and
push
add
dec
popl
repz
ret
stos
shl
inc
pushl
mov
out
testl
or
idivb
jne
push
add
inc
mov
loop
xor
pushf
cmp
xchg
js
movsb
popf
ret
jl
sahf
aam
cli
mov
out
shll
fldt
sub
mov
out
jae
mov
rorl
cmpsl
dec
push
sbb
in
mov
adc
sbb
jg
mov
cld
xor
inc
int
out
lock
push
inc
mov
sbb
jmp
pop
pop
adc
pop
add
outsl
fimuls
ds
ss
xchg
mov
xchg
sub
adc
insb
mov
xor
dec
push
addr16
enter
test
jge
xlat
shl
getsec
out
xlat
ret
mov
xor
xchg
xor
sub
aas
aad
pop
push
in
push
jmp
imul
xchg
inc
mov
pop
mov
and
aad
jp
push
mov
or
roll
int3
loope
mov
push
aaa
adc
xor
arpl
outsb
loope
push
xor
sub
mov
ret
xor
mov
dec
hlt
jl
pop
or
and
aaa
inc
mov
jle
andb
std
dec
jl
das
loope
rclb
pop
setae
mov
jecxz,pt
mov
dec
pop
shrb
fidivl
xchg
adc
rcr
add
fisttpll
pop
test
bound
cmovbe
in
jb
xchg
adc
pop
jnp
pushf
fdivr
orb
cltd
push
adc
inc
stos
in
lds
or
sbb
push
ret
mov
add
loopne
xchg
mov
push
xchg
mov
sbbb
nop
mov
iret
mov
lea
lret
add
dec
dec
jnp
push
dec
daa
stos
movsl
sub
pop
stos
adc
in
cmp
lahf
mov
ret
stos
inc
or
scas
js
jp
ror
inc
mov
rcll
pop
subl
mov
jle
mov
mov
rol
xchg
cmp
or
insb
dec
sub
int3
sub
movsb
pop
jne
test
mov
cmpsl
mov
or
jbe
rcll
aam
mov
scas
pop
fmuls
insl
inc
mov
xor
xchg
adc
xchg
je
std
xor
outsb
gs
fisttpll
add
arpl
mov
sbbl
push
shr
sub
jno
mov
adc
xchg
insl
das
jecxz
pop
add
std
fidivrl
cmpsl
cmp
test
mov
inc
mov
sbbb
cmpsl
add
jmp
test
lea
push
mov
pop
lods
sbb
add
stos
aad
lahf
ror
stos
loope
xor
jns
jmp
xor
mov
or
test
pop
jnp
hlt
lods
mov
cmpsl
inc
dec
cs
adc
and
dec
std
mov
fstpl
mov
fildll
mov
shrl
sbb
add
xor
lret
mov
movsl
fstpl
inc
mov
pop
insl
pushf
pushl
movl
jmp
call
jl
fistps
push
in
aad
sti
jle
add
out
addl
std
add
rcrb
push
mov
mov
xor
pop
std
fiaddl
les
leave
dec
cmpsl
divb
cmp
lods
mov
sub
bound
push
mov
xchg
mov
xchg
adc
inc
mov
leave
rol
inc
and
cltd
imul
nop
push
movl
movw
pushf
movb
lea
jmp
pushf
push
sub
adc
stc
lods
out
insl
cmp
sub
add
inc
data16
sbb
jae
adc
pop
ror
and
push
mov
push
das
sbb
dec
insb
mov
nop
push
imul
push
xor
mov
les
push
cmpsl
stos
xlat
jnp
mov
popf
jmp
mov
inc
mov
cmpsb
or
sub
nop
cld
sahf
faddl
sub
jl
popf
scas
push
insb
leave
xor
out
adc
and
rolb
adc
and
ljmp
lahf
shlb
inc
mov
cs
jmp
sub
sub
pop
xor
mov
inc
sub
sbb
jmp
dec
aas
mov
mov
add
push
jmp
call
loope
test
mov
or
cmp
mov
pop
and
out
int3
or
jl
or
push
dec
push
cmp
pop
xor
xlat
lea
jbe
outsl
push
pop
cmp
xchg
nop
sub
mov
xlat
cld
sub
jmp
push
fimull
out
xor
ds
dec
mov
add
pop
sahf
dec
or
scas
mov
and
fmull
jg
push
jle
mov
push
push
addb
or
cmpsl
int
fcoms
dec
and
inc
mov
movsl
movl
push
push
pushf
mov
lea
jmp
movsb
jle
jns
mov
or
leave
mov
cs
mov
mov
add
cld
leave
pop
cmp
pop
adc
test
and
mov
mov
in
pop
cmp
mov
add
addr16
outsb
jb
xchg
rclb
xor
or
ret
out
hlt
push
add
fs
call
cli
sub
jnp
cwtl
sub
pop
and
push
push
and
cmp
nop
stos
sahf
or
xor
jo
mov
fisubrs
jno
movsb
test
cld
repnz
imulb
mov
xor
bound
cmpsb
xor
jge
test
inc
pusha
les
dec
int
nop
xor
fisubs
push
jg
dec
popf
in
or
adc
popf
push
add
imul
inc
mov
paddsw
loop
jb
pusha
push
cwtl
push
ja
mov
mov
jo
adc
adc
fwait
aam
out
pop
push
or
mov
cmp
lcall
mov
mov
lret
push
packuswb
arpl
and
dec
lret
pop
mov
adc
ret
out
enter
arpl
lret
lods
loope
mov
and
popf
into
je
jge
adc
mov
ja
call
notl
jmp
adcb
adc
dec
cld
mov
dec
xchg
ljmp
fnclex
mov
cmp
mov
push
mov
out
xchg
stos
xor
fmuls
aaa
lock
sahf
lahf
pop
bound
xchg
out
adc
mov
push
push
inc
push
mov
jle
jne
or
mov
or
inc
ss
cwtl
pop
jecxz
repz
adc
fimull
mov
gs
gs
mov
leave
pusha
xor
stos
call
push
cmp
push
xor
pop
pop
loope
xor
jmp
daa
sbb
cmp
add
arpl
jmp
lods
push
cmp
shlb
cmp
inc
data16
dec
sub
push
mov
jmp
cli
les
test
inc
mov
and
pop
jl
dec
lea
mov
lods
test
ja
mov
cmp
fs
push
shlb
jb
aam
jb
add
add
mov
stc
test
cwtl
into
into
xorl
mov
stos
enter
xor
push
fsub
cmp
xchg
int
int
inc
mov
outsb
mov
cli
dec
mov
cmp
inc
sub
pop
xchg
leave
test
xlat
repnz
je
lods
xchg
mov
shll
imul
push
stos
iret
push
xlat
in
out
push
insb
cltd
in
mov
mov
call
js
xor
mov
adc
or
jno
addr16
inc
mov
test
jmp
inc
and
dec
pop
dec
vmovdqa
cli
ljmp
cmp
mov
int3
xor
cld
ret
stos
sub
sub
inc
xor
lods
and
ficompl
inc
fstps
fxch
lcall
add
fwait
das
cmp
xchg
add
ds
push
ss
aam
and
lock
dec
enter
push
fst
out
dec
pusha
xchg
pusha
jnp
xchg
fsubrl
add
outsb
lahf
ficompl
mov
sub
inc
pop
xchg
mov
xchg
sarl
dec
inc
sub
dec
inc
mov
repz
push
adc
scas
lret
test
jge
addl
into
fiaddl
mov
push
mov
fildll
jo
scas
cmpsl
dec
jmp
notb
jae
mov
xchg
pop
jns
sbb
nop
sbb
insl
pop
push
sbb
mov
pop
adc
mov
or
int
mov
mov
pop
sahf
mov
mov
and
rolb
int3
mov
mov
scas
cmp
adc
add
ret
xchg
addr16
movsb
add
jb
pop
or
bound
push
mov
pop
bound
xlat
aam
icebp
aas
and
cmp
add
bound
jg
pop
mov
jge
je
loop
in
or
cmpb
jmp
push
and
sarb
sub
push
scas
xor
out
inc
mov
jae
xchg
jle
mov
dec
ss
int3
ljmp
nop
push
imulb
shrb
push
out
mov
popf
ljmp
ds
sar
int3
lods
das
and
rcr
pop
mov
jae
jbe
mov
push
fisubrl
lret
jecxz
shl
push
lcall
icebp
in
jne
fcmovne
pop
mov
cmpsl
movsb
push
jle
ss
sub
rorl
std
rcrb
daa
cld
dec
insl
sub
rcrb
push
out
sbb
inc
mov
pop
and
cmp
dec
movl
movw
mov
lea
jmp
pushf
movl
pusha
movl
push
push
pushf
push
lea
jmp
in
push
ret
movb
xor
or
das
inc
and
xlat
imulb
jbe
and
jns
into
je
mov
popf
cs
jmp
in
mov
sub
dec
push
mov
mov
sbb
lds
insl
pop
push
dec
xor
outsb
gs
hlt
outsb
and
xchg
pop
dec
cmpsl
inc
mov
add
ret
cmpsl
shlb
xor
outsb
hlt
icebp
repnz
test
push
add
nop
hlt
movsb
pop
bound
pop
add
add
cmp
jecxz
xchg
aas
and
shlb
cmp
outsb
shrb
ds
mov
aad
cmp
sub
or
repz
movsb
adc
in
and
insl
ds
ja
or
out
dec
rcrl
mov
fildll
lcall
sub
in
movl
lds
xor
mov
fbld
fs
jmp
repz
mov
mov
jne
in
daa
inc
jg
stos
sti
inc
ret
and
je
and
xchg
push
dec
outsb
fscale
shll
adc
loope
push
in
add
xor
dec
iret
mov
mov
movb
mov
jmp
insl
dec
scas
pop
or
xchg
xlat
push
or
inc
mov
ljmp
dec
xor
gs
out
pop
pop
bound
dec
xrelease
push
decb
and
stc
xor
mov
aaa
adcl
jae
sbb
aas
add
out
dec
int
es
sub
iret
cwtl
jg
test
popf
mov
mov
in
int3
sbb
ja
loop
negb
loope
lret
dec
sub
xchg
cmp
push
dec
call
pushf
pushl
movl
pushl
jmp
testb
sub
jno
imul
sbb
xor
or
inc
mov
test
add
push
dec
lcall
xchg
mov
fsubrl
imul
jbe
fnstenv
and
mov
iret
hlt
xchg
sub
xchg
daa
push
cmp
mov
test
leave
inc
mov
fsubrs
push
shl
mov
xchg
movswl
mov
loop
add
mov
cmpsl
incl
lds
cmp
loop
jmp
and
lcall
jne
pop
in
arpl
and
xchg
xor
fwait
and
int
in
call
repz
hlt
stos
out
adc
mov
xor
xchg
cmp
cmp
xlat
jo
adc
ret
ret
fstpl
fwait
cs
xorps
xchg
ljmp
sbb
lock
xchg
orl
cmp
mov
lret
call
add
or
fimuls
cs
or
sarl
in
push
aaa
shlb
inc
mov
cs
pushf
pushl
mov
movl
push
lea
jmp
pop
mov
adc
fcmovnbe
out
pop
fistpll
push
xor
aad
ror
mov
fs
xchg
adc
das
xor
das
jge
inc
jle
popa
std
cmp
cmp
lcall
push
inc
fmuls
xor
ret
in
shll
clc
sbb
inc
mov
jge
dec
cmp
inc
in
and
add
ds
add
push
ror
arpl
lods
insl
lods
mov
sub
pop
mov
shll
lods
add
dec
cmpsl
inc
xchg
xor
pop
sbb
mov
jmp
data16
xor
andl
lods
mov
call
in
insl
push
pop
xchg
divl
xchg
inc
mov
in
jno
enter
jp
call
xor
mov
icebp
mov
mov
mov
ret
jb
popa
gs
lret
mov
or
test
mov
sahf
repnz
xor
test
mov
xchg
shrb
jecxz
pop
or
or
adc
vpminub
pusha
and
outsl
adc
nop
push
aaa
ss
fucomi
rcrb
mov
pop
or
mov
or
sbb
pusha
inc
pop
repz
loop
push
dec
pop
stos
fsubs
ror
sbb
and
or
xchg
cmc
fwait
add
enter
sub
jl
xlat
cmp
movsl
cmp
xorb
fldl
cmp
push
movsb
pushf
dec
pop
mov
imul
and
pop
jmp
movsl
xchg
mov
out
mov
lock
movsl
into
mov
and
dec
mov
mov
sub
sub
test
add
add
sbbb
sahf
ud0
fistps
cld
loop
fadds
mov
cwtl
sarb
mov
mov
add
cwtl
decl
test
dec
inc
in
dec
jge
xchg
xchg
push
mov
popf
adc
mov
pusha
inc
int
jl
jmp
sub
jge
mov
sub
xor
mov
popf
andl
jae
gs
sub
cmp
pop
dec
mov
push
out
in
addb
and
xchg
pop
cmp
push
xchg
loope
dec
or
pop
cmp
and
dec
in
jbe
jecxz
in
lods
into
mov
jne
stc
mov
mov
add
mov
icebp
pop
mov
addb
cwtl
push
jmp
jmp
int
out
dec
and
std
test
xchg
sbb
add
sbb
sbb
xchg
repz
xlat
sub
mov
in
lcall
xchg
xchg
cld
loope
lods
movb
jl
sub
popa
iret
push
test
dec
loope
sub
testb
xor
iret
leave
arpl
pop
push
lock
mov
rcll
pop
inc
fnstsw
dec
jg
icebp
ret
fstpt
pop
fstpt
fnstcw
xor
scas
out
divb
pop
inc
add
je
pop
inc
sub
and
inc
fmuls
pop
inc
ror
ret
xor
movsb
sbb
push
sar
lods
outsl
xchg
mov
iret
in
push
arpl
fwait
pop
jp
cmp
push
outsb
sbb
pop
xchg
pusha
sti
jbe
arpl
adc
jle
push
push
leave
dec
in
add
decl
xor
cld
outsb
out
test
and
pop
pop
cs
sub
and
mov
xlat
pusha
mov
adc
jmp
into
stos
out
pusha
loopne
std
test
add
or
xor
or
and
stos
and
jp
add
sbb
or
sub
mov
pop
outsl
jo
vzeroupper
mov
mov
adc
sahf
fxam
sbb
pop
into
add
data16
pop
adc
xor
mov
mov
movsb
and
push
jb
fadds
inc
xchg
push
mov
ljmp
insl
and
dec
loop
inc
lds
xor
jle
pop
pop
and
or
sbb
imul
fnstenv
or
sub
sbb
out
pop
std
push
cmp
adc
add
roll
xchg
int
dec
mov
testl
xchg
jge
bound
je
mov
into
orb
outsl
mov
mov
rcrb
into
lock
mov
mov
cmpsl
frstor
int3
xchg
popf
andb
and
mov
mov
push
or
jle
push
push
in
das
fsub
or
inc
add
mov
ret
cmpsl
pusha
inc
mov
es
ficompl
add
sahf
mov
popa
btc
mov
es
jnp
add
push
ret
ds
clc
xchg
push
jo
mov
jle
rclb
pop
paddusw
add
xor
roll
or
or
xor
fldt
jmp
sbb
cltd
push
cwtl
aad
mov
mov
add
cmp
inc
cmc
xchg
cmpsb
dec
test
jmp
std
jle
bound
fildl
mov
scas
test
ret
outsb
testl
imul
mov
cltd
mov
fwait
icebp
into
nop
in
push
in
mov
lret
cwtl
icebp
push
inc
mov
dec
cs
nop
add
and
pusha
pop
xor
sbb
mov
and
inc
ficompl
jl
repnz
jmp
xchg
push
jae
sbb
sub
jb
roll
mov
and
push
adc
add
loop
xchg
jo
mov
lock
and
push
mov
loopne
rcrl
popa
movl
js
ds
or
pop
fistpl
mov
or
sahf
xor
or
cmpsb
adc
lret
lods
fcomps
add
jmp
repz
imul
push
add
nop
or
aam
ror
mov
mov
lea
loopne
insb
sub
cmp
xor
cld
loopne
movl
pusha
movl
movb
lea
jmp
dec
cwtl
cmc
jne
pop
shll
push
cmp
cli
stos
negl
das
jb
pop
icebp
inc
xor
push
xchg
mov
add
jne
mov
mul
or
repz
cld
iret
les
sbb
add
lcall
jo
xor
mov
mov
xor
adc
rol
or
gs
add
lds
inc
push
out
popa
pop
add
mov
inc
mov
das
pop
dec
bound
pop
mov
cmc
jge
shll
push
and
mov
rorl
lock
aad
add
jo
and
test
dec
mov
data16
pop
cmp
lcall
ds
test
adc
cltd
ja
sub
gs
inc
push
inc
and
mov
enter
and
cli
adc
inc
mov
pop
sbb
adc
xchg
clc
xchg
sub
adc
jns
and
inc
pusha
xorl
mov
ror
mov
stos
fsubr
jmp
sub
jg
or
arpl
insb
add
inc
sbb
fdivr
test
push
adc
out
and
mov
sti
lret
hlt
inc
in
pop
jno
xor
dec
push
lods
jg
xchg
arpl
xor
movl
lahf
icebp
in
popf
andb
inc
jb
adc
pop
das
fcmovb
daa
jne
jne
jmp
shrl
xor
dec
mov
mov
leave
cs
lods
stc
dec
movl
cltd
iret
rorb
ret
inc
fdivrs
push
sbb
sub
push
add
std
sbb
sbb
cmp
movsl
stc
dec
repnz
push
cwtl
bswap
fucomip
gs
xchg
imul
out
and
repz
repnz
ret
notb
jge
mov
inc
out
bnd
adc
rcl
test
cmp
popa
cmp
jo
nop
ret
sub
xor
movl
pusha
lea
jmp
jnp
xchg
sbb
xor
movsb
lret
imul
call
orl
in
pop
cmp
out
pop
mov
push
insl
sub
push
jno
sub
xchg
popa
inc
mov
sbb
pop
in
cltd
loopne
inc
mov
push
jae
fucomip
popf
sub
aam
ret
loope
inc
and
cwtl
lds
lock
movsl
les
fadd
inc
sbbb
xchg
jp
mov
mov
cs
cmp
adc
or
mov
mov
mov
xchg
mov
mov
pop
aaa
push
or
add
mov
mov
dec
adc
outsl
mov
cmpsb
fwait
data16
xor
mov
push
rorb
push
or
mov
shrb
stos
stos
ss
xlat
add
lds
test
insb
mov
jecxz
mov
fs
les
dec
sbb
xor
test
mov
inc
jns
or
insl
aam
out
in
pop
xor
pusha
inc
mov
xchg
sahf
sub
ljmp
jmp
and
movl
push
mov
jmp
shrl
jno
divl
test
inc
or
or
or
stos
adc
sti
shl
call
repz
sub
orb
adc
inc
mov
mov
mov
mov
add
enter
fcomps
cmp
cmpsb
and
icebp
xor
dec
into
adc
push
push
lea
dec
add
cmp
test
mov
dec
stos
add
jns
cmp
inc
mov
dec
movsl
or
cmp
ret
fistpl
pop
cmp
xlat
inc
in
addb
add
in
lea
mov
nop
gs
cltd
and
xorps
cli
movzbl
jno
xchg
mov
cmp
in
aad
in
repz
in
pop
jl
lock
sbb
push
les
fwait
mov
adc
mov
mov
outsb
and
push
je
adc
or
xor
int3
mov
je
int3
jne
mov
mov
inc
mov
xor
jmp
cmp
jne
add
dec
xchg
data16
fisubl
mov
pop
daa
inc
or
into
mov
lds
lea
aas
and
pusha
inc
mov
notl
mov
outsl
in
xor
mov
mov
mov
sbb
lods
lock
xchg
mov
aas
sbb
sahf
dec
data16
subl
fdivs
cwtl
xlat
mov
roll
das
das
je
ror
stc
mov
xchg
hlt
xchg
rolb
dec
mov
cs
dec
mov
cmp
dec
push
jbe
push
pop
pop
xor
sub
xchg
cmpsb
jmp
adc
aaa
imul
xor
mov
sysret
or
mov
add
repz
insl
je
jmp
mov
mov
test
dec
cmc
lods
icebp
dec
xor
xor
inc
mov
jmp
test
dec
les
ja
mov
mov
and
movsb
adc
jo
pop
subb
push
push
inc
xchg
xchg
adc
dec
mov
fldl
dec
pop
ljmp
mov
jo
fimuls
push
lods
repz
arpl
inc
iret
push
push
jmp
or
mov
pop
in
fistpll
ljmp
imul
leave
lcall
stc
sbb
mov
push
daa
inc
loop
aas
inc
sbb
aam
xor
dec
jecxz
icebp
jno
repnz
inc
push
pop
dec
fnstcw
lods
adc
call
lock
shll
jl
enter
dec
stos
sbb
insl
inc
subl
jge
sbb
rcrl
inc
mov
fldt
push
jmp
jmp
jmp
pushl
movb
movl
mov
push
lea
jmp
push
pusha
pusha
mov
movl
call
xchg
inc
testl
pop
xchg
and
xor
inc
sub
mov
jne
sbbb
movb
insb
lods
sbb
mov
fistps
add
call
mov
inc
xorl
xchg
cltd
arpl
stos
and
mov
cmc
pop
in
pop
call
adc
push
add
int3
xchg
daa
pop
or
dec
push
inc
mov
je
jnp
inc
mov
mov
cmp
out
and
dec
push
movsl
shlb
mov
and
xchg
ds
jmp
dec
mov
shlb
sbb
repz
or
mov
xor
cmp
fisubs
cmp
sub
cmp
std
sahf
or
or
lea
and
clc
popf
icebp
cwtl
cwtl
mov
inc
cmp
sbb
inc
mov
xchg
and
cmpsl
jnp
cmp
fstps
and
lock
sti
inc
aam
cmpsb
add
imul
outsb
jb
add
mov
aaa
jle
idivl
loopne
int3
mov
xchg
lret
xchg
rcrl
jne
aaa
push
cltd
adc
and
dec
out
inc
nop
inc
mov
shl
repnz
iret
jmp
adc
xchg
out
scas
adc
in
int
adc
inc
stos
lea
test
push
sub
dec
cs
push
test
xchg
mov
andl
push
in
mov
jne
das
mov
negl
dec
inc
cmpsb
sub
xchg
cmp
jge
arpl
xlat
mov
rorb
mov
fadd
jae
jmp
lock
stos
stc
dec
aaa
mov
push
sbb
jne
imul
adc
mov
repnz
sbb
lds
sub
dec
pop
test
cltd
xchg
or
mov
fwait
lods
ret
enter
jae
imul
scas
roll
pslld
sub
adcb
std
daa
and
xchg
xchg
sub
iret
mov
mov
xor
pop
add
mov
and
jnp
xchg
jge
daa
sbb
sbb
or
in
test
jl,pn
jl
mov
lods
lods
ret
mov
pop
test
mov
stc
leave
mov
xor
loop
fnsave
and
sub
hlt
xor
mov
mov
in
in
push
test
adc
cmp
inc
lds
xchg
mov
shl
ret
cmp
popf
mov
xorb
adc
xorl
sub
mov
push
jb
es
lahf
mov
cwtl
aaa
ss
cmp
lret
inc
inc
pop
ljmp
jge
cmp
mov
mov
pop
pop
int3
cmp
iret
test
insl
sbb
inc
xor
shl
sbb
repz
fidivrs
dec
dec
mov
sti
bound
lds
pop
pop
cltd
mov
push
addb
ljmp
je
dec
sbb
or
mov
test
in
sti
adc
dec
cmp
test
inc
ret
iret
out
mov
pop
rclb
shrl
fs
push
rcll
xchg
aam
jg
xlat
lea
dec
or
cmp
addr16
lret
in
push
push
or
and
mov
or
mov
dec
jg
pushf
movb
push
movl
movb
pusha
movb
push
lea
jmp
lea
push
fadds
fdivl
dec
pop
aad
cltd
pop
mov
xor
mov
mov
jmp
loop
inc
mov
and
mov
jmp
push
pop
inc
jl
push
adc
cmp
cmpsl
shlb
mov
xor
int
xchg
rorb
sbb
fisubl
mov
aas
ds
add
push
cmp
cld
inc
fsubs
jae
std
test
adc
inc
mov
push
pop
idiv
xor
dec
pop
xchg
xchg
push
jnp
jl
cmp
inc
inc
or
lret
xchg
test
movsl
int3
add
push
and
adc
pop
shlb
call
xchg
dec
repnz
mov
inc
fsubl
movsb
xchg
out
xor
mov
mov
in
sub
ss
mulb
pop
adc
movsl
aad
scas
and
jne
fstp
and
add
lret
jae
out
repz
add
cmp
sbb
sbb
bound
jle
aad
negb
ja
adc
mov
scas
addr16
pop
pop
push
xlat
cmpsb
push
xor
lock
lret
jmp
add
jno
push
call
loopne
dec
sub
mov
dec
push
add
xchg
lcall
adc
pop
jle
cli
xchg
repz
shrl
or
jl
pop
shlb
push
adc
add
lcall
xchg
clc
xchg
mov
loope
cmp
and
xor
repnz
ds
movsl
xor
push
jmp
dec
sbb
mov
bound
push
movsb
xchg
cli
popa
mov
xchg
subl
es
ficompl
mov
add
pop
ljmp
mov
iret
push
aaa
sbb
inc
or
add
or
sub
push
jno
jae
nop
sub
mov
cmovb
mov
jmp
or
mov
ljmp
shlb
and
sbb
es
inc
push
sbb
hlt
jbe
pop
stos
mov
cs
sub
imul
xor
es
lds
repnz
adc
dec
mov
std
lods
js
lcall
sbb
clc
pop
inc
or
xlat
or
cmc
out
xchg
sbb
bound
sbb
xchg
sbb
mov
popf
ljmp
mov
leave
adc
hlt
data16
mov
lods
xor
int
inc
scas
lds
mov
test
dec
xor
arpl
inc
mov
add
inc
ficomps
sti
xor
jg
jae
js
test
push
add
or
mov
imul
ss
jb
mov
jbe
sub
inc
insb
xor
imul
or
adc
aad
lods
sbb
es
sub
cld
data16
adc
cltd
arpl
hlt
sbb
and
cli
loopne
shrb
dec
mov
mov
js
inc
pop
and
xor
mov
je
pop
inc
jnp
mov
scas
adc
jno
js
inc
mov
inc
and
or
pop
jb
rolb
and
mov
movb
lea
jmp
js
sbb
mov
mov
inc
sbb
data16
push
inc
popa
xor
ja
pushf
or
outsb
push
xor
shl
pushf
mov
adc
jns
in
gs
adc
pop
rorb
and
jp
outsl
jnp
pushf
es
cmp
in
mov
dec
push
mov
out
xor
repz
or
stos
add
inc
fwait
test
adc
or
lods
or
stc
dec
dec
cwtd
xchg
pop
unpcklps
sub
mov
mov
rcl
xchg
jbe,pt
mov
unpcklps
push
adc
enter
pop
or
xchg
fwait
inc
sub
jno
mov
in
adc
arpl
inc
jge
repz
call
fistpl
dec
jecxz
add
cmpsl
push
xlat
mov
xchg
pop
cltd
in
cmp
leave
mov
arpl
push
dec
out
sub
mov
scas
xor
sbb
in
push
mov
xchg
xor
jecxz
mov
xchg
sub
in
pop
dec
enter
popf
fsin
jmp
push
or
movsb
xor
jo
dec
push
lea
shll
jp
push
jecxz
push
stos
push
mov
push
imulb
sub
je
or
jge
jae
orb
repnz
mov
pop
cmp
fs
icebp
inc
lahf
push
and
dec
push
mov
sbb
mov
aad
lods
push
call
push
mov
decl
repz
std
call
jno,pn
add
call
lret
xchg
mov
repz
imul
dec
adc
and
pop
std
add
xor
push
push
xor
or
cmp
out
push
test
push
jge
push
insl
inc
and
push
mov
lock
xor
xchg
scas
loope
movl
push
lea
jmp
imul
lahf
lock
sbb
test
xchg
out
les
ds
pop
sbb
inc
xor
mov
test
mov
pop
or
pop
cmp
lock
xor
shlb
in
lods
pop
xor
clc
xchg
rorl
idivb
and
add
sbb
dec
vpunpcklbw
out
mov
xchg
xchg
sbb
mov
pop
dec
sbb
fld
test
or
pusha
xchg
cmp
jg
mov
sub
hlt
addl
out
neg
je
mov
iret
mov
dec
sbb
imul
aam
and
sbb
dec
push
cmp
cmp
fnsave
and
rolb
mov
movsb
inc
inc
mov
add
cltd
daa
fmulp
inc
sub
in
lds
outsb
cmc
jge
pushf
and
mov
aad
push
xor
mov
lea
mov
repnz
push
mov
jo
jo
aam
xchg
sbb
pop
jnp
fmulp
mull
sub
es
inc
mov
addr16
jo
fimuls
or
lcall
scas
mov
mov
mov
ja
in
pusha
mov
inc
nop
dec
call
push
xchg
aas
lcall
inc
mov
mov
xor
xor
cwtl
enter
ficoms
cmp
xlat
dec
cmp
sub
push
dec
sub
pop
inc
mov
sbb
jge
inc
cmp
loopne
pop
cld
cld
xor
jbe
cwtl
notb
inc
adc
mov
sub
pop
inc
bound
repz
cmp
insb
sbb
mov
cmp
xchg
push
mov
sbb
or
imul
fbld
add
lods
cmp
jae
aam
repz
jne
mov
pop
aas
mov
cltd
mov
insb
adc
fmuls
and
cmpb
or
inc
xor
cltd
inc
mov
pusha
bound
movl
movw
movw
jmp
mov
cmpsb
xor
inc
adcb
daa
xchg
ret
mov
fadd
push
imul
pop
lods
pop
inc
inc
rcl
and
insb
pop
js
stc
push
pop
jnp
arpl
clc
jle
jae
push
and
adc
jo
addl
les
ljmp
and
lds
aas
mov
mov
and
sbb
rcll
inc
xchg
cmp
lea
fildll
push
push
xor
add
adc
pop
in
sub
or
dec
xor
jecxz
fwait
xor
pop
and
jns
jecxz
stc
call
mov
in
lret
mov
movsb
out
out
cmp
mov
inc
inc
dec
jl
xor
cwtl
ja
lock
cmp
jbe
inc
sbb
push
inc
sbb
jl
push
lock
in
push
push
dec
and
dec
je
mul
xor
jge
mov
pop
jmp
test
dec
in
pushf
not
into
sub
insb
in
sar
fidivrs
dec
cmpsb
call
inc
xchg
push
jae
pop
arpl
sub
fsubrl
cmp
sarl
testl
lock
push
movsl
lea
ret
xlat
sahf
rorb
jnp
push
fs
inc
int
add
inc
stos
pop
jecxz,pt
int
pushf
gs
int3
jno
pshufw
jbe
and
push
fistpl
xchg
sbb
cld
ficomps
sarb
imul
and
loope
cltd
arpl
mov
dec
push
clc
mov
jmp
inc
mov
out
push
ja
jmp
add
mov
mov
dec
loopne
lods
mov
divb
loope
cltd
dec
pop
push
add
das
adc
cmp
mov
pop
aaa
into
ss
movsb
enter
test
js
mov
ret
mov
jmp
xchg
leave
mov
xor
inc
mov
mov
jnp
push
cmp
nop
repnz
roll
mov
cmp
int3
mov
test
push
shlb
inc
cmp
pusha
lds
ds
xchg
shlb
loop
mov
lret
push
xchg
pop
fldt
fidivl
cli
push
xchg
xchg
add
insl
es
push
xor
mov
aas
and
add
std
push
ljmp
rolb
je
add
mov
adc
jo
pop
jo
rcll
inc
loopne
or
push
add
hlt
xchg
stc
inc
ss
leave
mov
mov
aam
movsb
jl
xchg
push
sarl
stos
jb
out
int
push
xor
inc
mov
pop
mov
jmp
add
fstps
jb
xor
dec
loope
pop
test
mov
ficomps
mov
arpl
lcall
arpl
inc
push
ficompl
imul
fs
jecxz
xlat
movsl
das
push
adc
scas
hlt
lcall
push
movsl
xlat
add
inc
cmp
jl
pop
rclb
stos
stc
cmp
imul
inc
push
jl
xchg
fldenv
sbb
cltd
xorl
cltd
mov
lods
dec
push
test
push
cmp
sahf
sub
hlt
icebp
data16
push
adc
xor
cmp
test
in
inc
mov
cmp
arpl
movsl
inc
test
nop
sbb
out
mov
sub
adc
jge
ja
cli
dec
push
xchg
fstpl
pop
in
jo
lods
sti
je
sahf
je
call
inc
leave
adc
stc
mov
incb
mov
cmp
or
in
loop
mov
push
mov
fld
cwtl
mov
jg
outsl
out
es
dec
xchg
push
rcl
cmp
xor
push
aaa
popa
mov
sbb
std
loope
std
add
and
dec
sbb
xchg
outsl
fstpl
cmp
pop
push
dec
or
arpl
add
and
push
mov
into
inc
and
out
sub
fnstenv
sbb
and
aam
lcall
xchg
imul
jge
cwtl
mov
xchg
test
xchg
loopne
aas
mov
add
scas
jg
das
data16
mov
cmpsl
lock
fdivrl
and
js
lods
rorl
inc
mov
dec
inc
mov
dec
dec
mov
incl
orl
mov
cmp
roll
dec
push
mov
das
pop
pop
add
popf
repz
jo
sar
cs
sbb
pushf
repnz
imul
or
or
inc
lods
in
imul
lahf
int3
xor
xchg
or
jno
mov
mov
add
scas
jmp
dec
jp
cmc
aad
popf
testb
xchg
sti
mov
call
ljmp
pop
jne
inc
and
push
xchg
adc
rcl
cmp
clc
pop
sbb
mov
jb
cmp
jne
jns
sub
pop
mov
int3
sbb
mov
inc
test
fdivl
jl
lock
xor
mov
push
in
fs
pop
pop
adc
mov
cli
idivl
inc
pop
inc
sub
inc
das
inc
cmc
test
and
sbb
jns
dec
add
decb
js
popa
push
jnp
push
or
je
sub
das
pop
ret
push
fwait
xorl
sarb
push
jbe
imul
stos
fsubs
inc
sbb
popf
push
aas
and
mov
enter
and
push
mov
inc
mov
pop
inc
fistpll
lods
test
mov
out
jecxz
push
cmc
sahf
and
add
cmp
pop
inc
pop
cs
dec
andb
das
pop
jp
mov
xchg
loope
mov
and
cld
pop
push
shl
nop
fistpl
insb
jo
aaa
aad
into
push
xchg
int3
jp
fs
popa
rorb
cmp
inc
push
outsb
mov
mov
xor
mov
leave
sti
push
push
jmp
or
mov
out
decl
filds
adc
pop
inc
addr16
negb
enter
je
lods
mov
stc
add
fstpt
cmp
xchg
fcompl
pop
ljmp
ret
insb
cmp
aad
cwtl
xchg
fildll
in
sub
mov
mov
shrb
or
pop
cli
scas
adc
dec
les
adc
pop
mov
ror
test
lcall
pop
divps
into
pop
out
ljmp
daa
sahf
je
sbb
xchg
jp
inc
adc
sbb
cmp
mov
imul
sbb
lret
out
sub
andl
inc
mov
sub
mov
jge
mov
fs
xchg
fimull
cld
loopne
nop
hlt
test
out
mov
jg
lret
and
add
fidivrs
mov
in
jge
cmp
xchg
sahf
jae
test
push
pop
xchg
test
xor
addl
cmp
pusha
mov
movl
movl
push
jmp
sbb
push
shrl
cs
inc
dec
mov
imul
imul
add
in
mov
sbb
pop
fisttps
unpckhps
fwait
cs
adc
roll
mov
jns
adc
or
add
sarl
hlt
femms
jge
imul
leave
push
pusha
mov
inc
inc
xor
stc
nop
les
fstl
cs
mov
pop
lret
test
jbe
mov
inc
mov
cmp
xor
or
or
push
insl
jmp
mov
push
sti
lock
jbe,pt
int3
mov
ss
jne
xchg
push
push
inc
loopne
add
fwait
sarb
aas
or
xchg
insb
mov
pusha
lahf
fs
mov
js
dec
add
or
cmpsl
imul
adc
inc
addr16
mov
sbb
push
fisubrl
push
js
pusha
mov
mov
fcomps
xchg
mov
xchg
push
or
and
or
cs
mov
das
outsl
xchg
lahf
loope
iret
ret
out
aaa
jge
push
call
cltd
add
dec
adc
jnp
jns
inc
rcrb
pop
dec
and
inc
pop
sti
fsubl
iret
push
sbbb
dec
lods
rorl
mov
mov
push
les
bnd
repz
mov
je
sbb
cmp
jb
sbb
mov
inc
add
mov
adc
xor
mov
rorb
je
mov
out
jnp
adc
cmp
stos
in
jbe
inc
iret
push
jnp
pusha
sbb
pop
inc
push
pop
test
jle
push
les
out
or
mov
jbe
inc
mov
mov
dec
dec
xchg
out
add
push
loope
jmp
mov
mov
rcl
mov
and
movsl
pop
fiadds
int3
fbstp
inc
mov
nop
mov
sbb
iret
cld
mov
flds
fisttpll
mov
or
movl
mov
cmp
inc
cs
add
inc
sti
xchg
mov
hlt
push
jo
push
xchg
mov
fwait
jp
push
inc
push
int
add
mov
pop
add
add
test
bound
gs
divb
jge
and
cs
out
push
pop
push
mov
inc
mov
sub
ja
outsb
adcl
or
push
clc
icebp
add
repnz
cmp
sti
and
adc
scas
pop
nop
out
fwait
lock
sti
mov
dec
imul
scas
adc
imul
das
mov
aad
fnsave
mov
lahf
movl
jg
lock
pushf
sub
lret
mov
movsb
orb
ljmp
repz
test
psraw
inc
xchg
mov
jnp
push
cs
add
push
dec
sbb
mov
repz
dec
push
out
mov
in
xlat
fs
mov
movl
pushf
pushf
jmp
adc
fdivl
sub
or
mov
mov
ret
push
cmp
les
test
and
ja
fcmovb
lods
jmp
test
outsb
or
xor
aam
cmp
jo
call
xchg
fdivr
xchg
bound
pushf
out
adc
jne
rcrb
daa
outsl
sbb
push
push
and
lds
adc
in
test
sub
iret
mov
pop
ja
out
inc
mov
addl
ret
loopne
leave
lcall
les
and
cli
mov
sbb
ror
ret
jno
inc
shrl
add
loop
lcall
call
je
inc
add
inc
and
lret
add
fsubrp
push
dec
movsl
pop
imul
jnp
lahf
and
inc
mov
clc
loope
movl
pusha
pushf
pushl
movl
movw
lea
jmp
mov
push
mov
arpl
adc
sub
insl
or
sbb
imul
add
insb
adc
dec
push
mov
adc
insb
cmc
icebp
push
ljmp
movsb
dec
inc
cmp
pop
aam
xchg
roll
cwtl
mov
fisttps
insl
xor
cmp
popa
dec
push
dec
or
scas
lret
cmp
cmc
add
imull
addr16
add
data16
mov
jecxz
pop
out
mov
xchg
inc
adc
or
fs
cwtl
push
adc
xor
mov
icebp
sbb
fidivs
out
addb
lret
pop
movsl
sub
jmp
fisttps
jb
call
dec
adc
or
inc
pop
test
add
daa
cmpsb
or
jle
jne
lahf
mov
outsl
pushf
fcomps
pop
sub
pop
mov
shll
mov
hlt
outsb
add
xchg
loop
cmp
xchg
test
sbb
loop
sbb
cmp
xor
iret
out
lret
in
mov
pop
and
lret
cmp
pop
pop
lcall
ds
sub
ljmp
mov
imul
shll
lcall
loope
sub
pushf
mov
sub
add
sub
rclb
xchg
xchg
jl
out
sbb
aad
pop
imul
daa
cmp
xor
test
movsb
jne
mov
push
xchg
gs
inc
into
lds
sbb
lcall
mov
sbb
popa
scas
mov
and
cmp
xor
out
mov
pusha
cld
mov
shl
mov
jmp
pop
mov
mov
aad
aam
fdivrp
mov
add
jp
cmpsb
and
xor
mov
icebp
dec
mov
negl
and
mov
test
sub
mov
cmp
scas
and
in
fimull
inc
pop
dec
sar
test
rolb
js
insl
and
mov
push
and
mov
xchg
sub
js
inc
ds
mov
dec
cwtl
ja
inc
cmc
mov
mov
sub
cmpsl
testl
testl
add
xchg
pop
ret
sahf
addb
icebp
into
in
sub
notb
lock
xchg
jo
sbb
dec
cli
lods
bnd
mov
sub
sbb
clc
sbb
filds
jmp
insb
cmp
dec
lahf
inc
mov
loopne
shlb
divl
mov
stos
sub
sbb
xchg
cs
scas
jne
mov
inc
jbe
xchg
inc
jmp
test
jbe
popf
aaa
inc
xchg
mov
sbb
push
sub
enter
push
jo
adc
cmp
mov
lods
loopne
adc
cmp
rolb
mov
int
sbb
les
daa
dec
adc
stos
sti
dec
sbb
pop
fldenv
sti
jecxz
cmpl
inc
pop
in
sub
shlb
adc
sub
and
outsl
scas
push
lods
sbb
or
mov
insl
shlb
mov
pop
pop
push
lock
or
push
mov
pop
popl
pop
jle
jnp
clc
daa
lret
ret
inc
sbb
test
mov
pop
jmp
imul
xlat
fdivrs
ja
pop
sbb
sbb
inc
ljmp
mov
mov
fwait
ret
js
mov
sub
mov
dec
shl
pop
mov
gs
test
test
fidivl
pop
cmp
ja
outsl
inc
cwtl
mov
arpl
lds
sub
push
jo
xchg
aad
sahf
loopne
xorl
jl
mov
aam
movsb
inc
cmpsl
pop
inc
mov
pop
ds
pop
dec
sbb
fs
mov
mov
push
jmp
cmpsb
stc
aaa
lcall
mov
dec
sbb
movsb
add
mov
jle
int
dec
pop
mov
add
mov
sar
lret
mov
sbb
aad
popf
mov
pusha
push
adc
push
push
sbb
enter
jecxz
jno
cmp
and
xchg
pop
mov
mov
adc
daa
faddp
inc
and
aam
aad
push
push
mov
pusha
lea
jmp
movl
call
xchg
inc
lret
mov
jae
in
scas
rorl
and
push
dec
mov
out
adc
mov
add
jne
stos
mov
push
aaa
scas
or
rorb
add
jle
mov
and
test
pushf
in
repnz
stos
sbb
push
inc
mov
idivb
sub
inc
jle
pop
or
or
arpl
jecxz
std
inc
add
pop
add
sub
dec
insl
aas
sbb
sub
mov
mov
sub
mov
pop
cmp
xor
inc
mov
lcall
nop
lahf
cwtl
xor
jle
dec
pop
mov
cli
lahf
fbstp
sbb
icebp
pop
xchg
jmp
shl
jg
out
mov
xorl
aam
xor
imul
sub
je
jp
push
cmp
pop
inc
pop
cmp
inc
outsl
aam
pop
js
or
mov
inc
mov
adc
sarb
cs
fisttps
ret
dec
cld
test
dec
xchg
lea
or
enter
add
dec
std
pop
sbb
jne
xchg
cld
outsl
repnz
mov
xchg
or
js
gs
mov
lds
sbb
fdivrl
jmp
fucom
cli
adc
sub
inc
cmp
cmp
faddl
or
xlat
xchg
call
mov
xchg
les
pop
rcll
dec
push
repnz
loopne
cmp
inc
pop
jp
popa
mov
repnz
loopne
lock
mull
test
sub
je
mov
sub
mov
mov
xchg
mov
ret
and
shrl
xor
mov
inc
xor
loope
stc
aas
mov
sarb
sbb
ficoml
and
stos
hlt
mov
int
xchg
outsl
xor
aas
es
xchg
fisubs
cli
mov
inc
mov
xchg
add
add
lcall
and
jo
pushf
push
movl
pusha
pusha
mov
movb
lea
jmp
pushf
mov
movl
pusha
pusha
movl
movb
push
mov
lea
jmp
call
popf
pop
in
jno
iret
scas
test
gs
dec
les
mov
iret
xchg
mov
cli
or
sub
icebp
pop
sbb
lret
push
and
jle
shr
fdivrl
jb
jge
incl
rolb
icebp
rorb
mov
push
xchg
inc
inc
loop
cli
mov
outsl
pop
cmp
xor
test
adc
inc
xor
addr16
unpcklps
mov
sub
jne
into
mov
ret
add
jl
inc
mov
ret
shrl
inc
push
shlb
sub
enter
sub
aaa
push
fldcw
pop
adc
inc
pop
mov
push
dec
int3
xchg
add
adc
dec
stc
and
aad
repz
pop
push
inc
repnz
sub
dec
repz
or
aas
sahf
xchg
icebp
nop
gs
mov
lret
test
outsl
fidivrs
or
dec
pop
lret
xor
es
xor
xor
xchg
lock
into
movsl
in
pop
out
mov
enter
subl
imul
sub
pop
popf
add
lock
mov
aaa
xlat
xor
sbb
sub
sti
xchg
hlt
mov
ja
pop
add
dec
cmp
inc
mov
jo
cli
inc
or
lods
lods
pop
xor
xchg
adc
xor
arpl
mov
or
sbb
insb
cmovns
push
addr16
adc
mov
test
push
mov
mov
repz
inc
mov
push
or
repnz
pushf
movl
pushl
pushl
call
push
add
fs
arpl
btr
fsubrs
mov
enter
pop
in
push
ljmp
mov
cmp
out
xchg
iret
lock
das
stos
std
dec
roll
mov
ffree
pslld
daa
cwtl
imul
cmp
in
lods
fsincos
sbbb
pop
mov
or
mov
js
dec
daa
out
cmc
adc
sbb
pushf
call
push
movl
mov
movw
movl
pushf
movl
push
pushf
movw
lea
jmp
stos
mov
int3
insb
xor
add
sub
orl
xor
xchg
dec
pop
test
testl
cli
add
out
cmp
inc
xor
test
adc
cmp
shll
inc
stos
in
jge
sbb
dec
sbb
out
pusha
jl
adc
das
mov
addr16
cmc
push
and
popf
mov
jp
jecxz
pusha
test
into
ds
les
pop
mov
mov
scas
popf
dec
lea
mov
jnp
cmpsb
xor
inc
or
fists
bound
out
mov
mov
ficoms
lahf
lds
fsub
stos
pop
popa
sbb
push
push
inc
sub
fwait
je
mov
cmc
pop
incl
cmp
lcall
sbb
mov
sub
pusha
jecxz
or
dec
sbb
imulb
inc
sbb
inc
jecxz
idiv
cmp
mov
mov
inc
pop
aad
rorl
mov
inc
mov
clc
or
xor
outsb
loop
jp
mov
or
je
imul
pusha
je
and
add
jns
loop
je
push
sub
pop
out
cmc
jb
mov
mov
outsb
mov
add
add
xchg
jl
into
movsb
sbb
ror
mov
js
int3
sbb
in
cmpsl
and
arpl
mov
push
and
lods
subb
and
mov
dec
std
out
jl
mov
outsl
repnz
cld
lcall
mov
jne
sti
call
in
fwait
and
mov
push
insb
add
mov
or
div
jg
shrl
fdivrl
stc
in
testl
or
inc
dec
mov
outsb
out
xchg
mov
aaa
add
shrl
sbb
mov
mov
xchg
cmp
adc
faddl
pop
popf
xchg
movl
mov
movb
mov
pushf
lea
jmp
sti
and
cmc
add
dec
out
aaa
jno,pt
lods
int3
test
ret
jbe
push
add
mov
fwait
jb
faddp
js
jne
subb
nop
adc
in
mov
lcall
xchg
xor
nop
cmpsb
inc
clc
jmp
pop
dec
mov
popf
test
xchg
push
scas
int3
jae
iret
inc
mov
nop
mov
fs
mov
daa
sub
xchg
push
shrb
push
sahf
or
sbb
cmp
insb
jp
popa
or
lret
ss
mov
dec
push
aas
jp
out
mov
add
iretw
pop
mov
notl
dec
cmp
mov
or
stos
push
out
leave
das
jge
sub
es
mov
inc
imul
movsl
push
insl
inc
leave
mov
jmp
es
popa
inc
loop
add
pop
clc
cs
lock
jmp
pop
stos
cmp
mov
outsl
clc
fdivrs
mov
mov
sbb
mov
xchg
mov
adc
in
mov
movsb
cmpsb
inc
push
dec
mov
jmp
in
pusha
jo
jg
pusha
add
or
mov
mov
and
incl
subb
push
cmp
adc
pop
jnp
pop
cwtl
fwait
ss
xor
mov
sti
push
cmpsb
jno
mov
repnz
test
popl
jbe
lcall
sub
jae
and
adc
cs
imul
xchg
and
fisubs
add
test
inc
xor
icebp
sarl
push
cld
dec
jmp
or
inc
cmpsl
dec
stc
mov
mov
pop
inc
scas
je
sub
test
clc
adc
mov
mov
push
adc
sbb
test
inc
xor
cmp
add
dec
fistl
scas
inc
inc
mov
pop
sub
pusha
outsb
and
xchg
filds
pusha
aas
jle
ja
push
xor
sbb
test
mov
sahf
rorb
mov
sahf
aad
xchg
adc
stc
in
aas
mov
lock
xchg
cmpsl
xchg
imul
push
jo
sub
xchg
aam
shl
lods
mov
xchg
or
xor
inc
mov
loop
mov
mov
sbb
mov
add
jne
insb
xchg
pop
pop
or
stos
pop
in
mov
cmp
adcb
sbbb
popa
sbb
jb
dec
insb
jmp
push
mov
faddp
dec
icebp
leave
pop
repz
adc
and
dec
push
bound
lock
adc
mov
pop
jmp
xchg
mov
dec
clc
scas
pushf
mov
push
jle
jp
jl
and
addr16
aad
lcall
pop
scas
inc
into
js
mov
stos
mov
pop
sbb
mov
scas
jae
sbb
pop
mov
clc
scas
or
jne
inc
sti
leave
test
mov
repz
stos
ss
mov
xor
int3
jmp
mov
jmp
ja
sub
js
jecxz
mov
mov
or
test
js
jg
cmp
and
ret
adc
fisubrl
fidivl
xchg
push
and
fs
push
inc
pop
cmp
out
scas
pop
scas
pop
enter
jle
push
rclb
sub
fs
mov
pusha
repz
cld
call
mov
and
cmpl
lcall
scas
test
add
jnp
into
ficomps
fmul
or
jne
lret
xor
rclb
inc
pushf
daa
adc
xor
xchg
pop
scas
sub
sub
outsl
fiadds
mov
push
inc
pusha
addr16
dec
jns
sbb
sarl
in
out
imul
adc
cmp
mov
fisubl
adc
cs
lahf
test
xor
and
stc
dec
das
sbb
adc
loopne
pushf
call
dec
insb
roll
daa
dec
mov
jbe
jmp
jg
xor
ret
jae
mov
jp
add
sbb
scas
inc
jns
pop
sub
mov
xchg
fisttps
inc
cwtl
cmpsb
jmp
pop
sub
ja
pop
es
jno
add
test
xlat
lret
fistps
push
fwait
pop
sbb
xchg
pusha
inc
mov
loope
adc
jmp
call
in
icebp
mov
enter
roll
xchg
pop
cmpsl
pop
movl
jo
inc
hlt
lea
in
adc
ret
or
jno
inc
pop
cmp
rcll
adc
and
jp
int3
xor
iret
mov
xlat
cmp
add
dec
jae
lahf
adc
clc
jle
pusha
add
fnstcw
icebp
jbe
mov
ffree
test
movsl
mov
lahf
je
mov
adc
aaa
inc
cmp
mov
out
stos
ret
bound
pop
sbb
push
ss
add
out
loope
out
sbb
aaa
xchg
in
mov
inc
xor
cmp
movsl
lock
xor
xor
mov
mov
sub
hlt
jns
mov
fprem
pop
cli
cmpsl
adc
jbe
mov
or
aam
daa
mov
jmp
call
lret
push
cs
xor
mov
int3
outsb
je
jns
daa
lret
sub
push
add
fidivrs
dec
fldenv
hlt
and
jno
adc
mov
sbb
arpl
je
mov
dec
sbb
jns
and
iret
dec
xchg
push
test
xchg
mov
nop
push
jp
push
pop
push
in
ljmp
push
mov
push
lret
cmp
in
mov
sahf
or
clc
and
call
scas
ljmp
add
ljmp
sbb
mov
xor
mov
add
pop
test
aad
sbb
push
ja
stos
rcr
into
push
dec
inc
insb
cmpb
adc
popa
fsubrl
iret
xchg
xor
dec
add
pop
insl
addl
fistpl
loope
jns
sub
out
fsubrp
pop
inc
int3
cltd
movsb
call
push
cmpsb
push
lds
add
shll
xchg
sbb
insl
mov
push
jnp
inc
xor
in
popf
pop
repnz
inc
add
adc
pop
es
arpl
mov
mov
sbb
cmp
jge
pop
roll
ljmp
jg
ja
jmp
out
fstpl
in
jecxz
dec
iret
das
xor
inc
imul
cs
inc
mov
adc
pop
or
pop
outsb
jae
ljmp
xchg
mov
les
xchg
out
nop
stos
inc
mov
sbb
stos
call
ficoms
test
ficomps
loope
rcrl
mov
or
push
ja
xor
xchg
subb
dec
mov
data16
push
div
fistl
sbb
call
sbb
shll
xchg
and
sbb
xchg
mov
add
icebp
mov
inc
sbb
inc
pop
aad
mov
push
cmp
mov
call
and
and
in
xchg
dec
sub
jl
ja
sbb
mov
mov
aaa
sbb
mov
loope
dec
inc
fistps
orl
xor
popf
push
das
jmp
aad
xchg
lcall
repz
jle
mov
outsb
fstps
cmp
push
sbb
lea
jno
mov
sti
fisttpl
jb
lods
mov
xchg
jle
in
mov
xor
insb
rcll
vpaddusw
pushf
push
and
pop
or
dec
dec
mov
jno
out
test
push
gs
fucomi
jae
pusha
sbb
push
addl
rolb
iret
mov
pop
in
imul
mov
das
cmp
mov
jl
xor
or
jp
out
jg
adc
lock
push
orb
adc
mov
cmpsl
jb
xor
cld
xlat
push
mov
test
sbb
inc
ds
cmpsl
lock
or
out
dec
scas
dec
cmp
addl
jge
dec
or
mov
inc
inc
jne
sbb
cmc
sarl
orl
pop
imul
je
dec
mov
pop
adc
negl
cmp
stc
lds
pushf
add
mov
jecxz
in
lods
sub
stc
adc
push
movb
mov
push
fcmovnb
in
mov
add
push
jno
stc
or
add
pop
shrb
into
mov
push
movsb
jp
out
adc
add
xchg
cmp
jmp
orl
pop
xor
push
cmpl
mov
adc
dec
ja
jo
out
cmp
sbb
es
shl
sub
pop
xchg
jnp
or
adc
les
enter
cmp
rcl
rorl
push
xor
mov
sub
aas
pop
jmp
push
jge
push
push
xor
xchg
dec
xchg
out
sub
aam
or
jne
inc
stc
xchg
cmc
mov
jo
and
stos
addr16
test
add
das
pand
and
loop
mov
arpl
dec
mov
cwtl
push
in
sub
test
ljmp
stc
in
ja
jge
inc
scas
mov
add
ret
mov
in
push
jbe
xchg
imul
jle
mov
lods
into
rcrl
insb
lret
mov
ds
add
pop
jne
mov
fiaddl
mov
adc
out
lret
pop
push
jnp
fs
aad
adc
lret
bound
insb
jp
sub
push
sbb
in
sbb
lret
jp
adcb
jmp
jae
cmpsb
mov
dec
and
repz
mov
out
xchg
add
and
xchg
xchg
mov
push
jno
xchg
fsts
xor
mov
popf
sub
repz
std
or
mov
inc
mov
xchg
movsl
addl
or
es
je
pop
in
inc
in
push
sub
into
inc
dec
pop
adc
or
mov
shlb
mov
gs
mov
bnd
push
mov
stos
mov
pop
out
xchg
rcll
push
sbb
das
jg
inc
mov
shl
jecxz
test
mov
lsl
mov
xchg
leave
insb
xor
jbe
jne
mov
jo
rcrb
xchg
ret
adc
aas
sbb
pop
sahf
int3
ret
push
jmp
xorl
mov
popf
movsb
inc
mov
sbb
pop
rcrb
jl
and
cmc
lret
or
mov
hlt
pushf
xchg
lret
fiaddl
sub
fwait
sbb
jae
mov
push
stos
pop
movsl
insb
jp
xlat
mov
add
jnp
cmp
mov
and
or
dec
pop
sbb
fsubrs
in
push
cli
inc
mov
lret
popf
and
dec
sbb
fdivrs
fcompl
inc
mov
lret
mov
test
inc
imul
out
xchg
call
not
mov
mov
adc
jle
dec
adc
jg
push
dec
adc
sbb
xchg
pop
ds
pop
add
lods
fwait
xor
xor
std
or
pusha
daa
and
movsb
jecxz
aaa
cmpsl
testb
mov
test
push
dec
jmp
add
fld
jle
enter
pop
xor
inc
sub
aad
adc
shll
popa
push
and
pushf
mov
enter
sub
adc
inc
mov
mov
andb
inc
nop
movsl
sbb
ds
cmp
lea
jne
cmpsb
imul
mov
leave
push
aaa
pop
sbb
fdivr
pop
dec
push
sar
cs
lods
adc
imul
adc
jle
or
out
imul
push
stos
cmp
cmc
dec
shlb
outsb
mov
mov
mov
movsb
cmpsb
cltd
int
pop
enter
cmp
jo
outsb
ds
in
adc
mov
stc
stos
mov
in
clc
stc
mov
push
ret
dec
ljmp
xlat
jne
arpl
ja
maxps
and
popf
mov
dec
imul
mov
jecxz
cmp
rclb
inc
repnz
subb
lret
xchg
sub
push
loopne
push
outsl
adc
mov
inc
cmp
pop
mov
test
xor
pop
cmpsl
es
ss
in
add
pusha
dec
inc
nop
das
push
add
mov
loop
js
sbb
dec
orb
pop
sbb
adc
jg
mov
mov
push
scas
cli
push
out
cmp
roll
jnp
sub
pop
inc
data16
pop
adcl
aam
xor
cli
cmp
out
jns
jmp
fbld
pusha
jecxz
pop
jnp
insl
mov
daa
aad
xor
inc
arpl
inc
fists
in
cmpl
pop
arpl
xchg
mov
xchg
or
jbe
cmp
loope
adc
cmpsb
mov
cmp
js
mov
aas
push
sbb
inc
sbb
xchg
shrl
mov
sub
movsl
inc
xor
push
push
aad
or
adc
mov
cs
and
out
pop
jbe
les
insb
dec
jo
insb
insb
subb
pusha
jb
jbe
sbb
adc
push
mov
das
inc
daa
inc
lcall
pop
xlat
pop
aas
inc
cmpsb
xchg
xlat
mov
jne
rcrl
mov
inc
mov
in
push
movl
movb
mov
mov
lea
jmp
movb
movl
push
movl
pushf
pushf
pusha
pushf
lea
jmp
pusha
movl
movb
movl
mov
lea
jmp
inc
mov
lahf
mov
arpl
repz
arpl
popf
sbb
dec
add
cmp
mov
fldcw
shll
loop
sub
pop
cmp
nop
outsl
aad
add
mov
sti
add
ds
add
icebp
subl
dec
mov
in
icebp
roll
jg
stos
fmuls
mov
mov
fwait
xor
inc
mov
cmp
arpl
ss
cmc
pop
xorl
jb
dec
movsb
inc
mov
movsl
mov
mov
pop
repz
cmpsb
stc
mov
add
and
pop
popa
jg
scas
clc
sub
sub
loop
jle
ret
out
mov
faddl
idiv
aam
fnstenv
cmpsl
lret
push
or
rolb
stos
sbb
stc
lods
fnsave
test
jb
fisttps
stos
mov
mov
mov
inc
mov
sahf
lods
test
xor
testl
sub
push
sub
pop
xor
mov
cmpsl
or
pop
decb
insb
test
mov
mov
pop
xor
jl
mov
jae
push
lds
pop
push
push
inc
dec
in
sbb
daa
push
ss
add
es
mov
lcall
add
mov
movl
pusha
pushf
pushf
pushf
lea
jmp
pushf
movl
jmp
sbb
xchg
sub
leave
lods
cmp
pop
add
fisttps
into
push
adc
jmp
std
pusha
inc
mov
testl
insl
sub
and
jne
sbb
das
dec
push
push
push
dec
decl
in
xchg
lea
push
clc
mov
notl
inc
mov
pop
push
stc
cmp
fisttpl
call
sub
iret
mov
test
sbb
push
mov
add
es
add
int
lcall
in
pop
cmpsb
movsb
rolb
mov
mov
xchg
leave
jbe
andb
int
daa
add
mov
cmp
mov
and
jo
pop
mov
cmc
jns
punpcklbw
inc
and
or
push
add
add
push
movb
lea
jmp
pushf
pushl
pushl
movl
call
pusha
jmp
popf
push
rorl
aad
mov
and
mov
push
sub
scas
jns
xor
fsub
testb
hlt
popf
icebp
mov
sarl
push
sub
dec
jae
rorl
negl
mov
jp
mov
xor
mov
bound
negb
add
imul
imul
and
int3
cwtl
pop
int
lcall
or
push
imul
mov
fucom
sub
or
pop
ja
push
adc
mov
pusha
fimull
jo
in
cmpsb
cli
daa
dec
push
sbb
cmp
daa
sahf
jmp
push
cmp
xchg
ficoml
xlat
pop
lods
out
adc
and
xchg
out
pusha
add
in
sbb
xchg
cmc
popa
pop
mov
jge
sbb
mov
xchg
rclb
fwait
andb
mov
adc
addr16
shl
cld
jle
sbb
imul
inc
mov
das
pop
dec
aas
call
js
insl
daa
add
enter
imulb
or
cld
jecxz
and
test
fisubrs
inc
call
ja
sub
je
inc
xchg
divl
push
fnstsw
shll
lret
ja
movb
mov
mov
mov
arpl
xchg
cmp
mov
adc
or
into
pop
mov
xor
mov
mov
sbb
push
or
mov
push
dec
test
dec
and
mov
mov
add
add
insb
fcmovbe
push
dec
daa
sub
cmpsb
and
shlb
inc
pop
lds
fs
xor
push
pop
dec
and
ret
loope
inc
push
loop
or
pusha
pushl
jae
sbb
mov
pop
pop
movsb
jp
lcall
insl
xchg
dec
or
adc
call
or
popf
ficompl
pop
adc
push
xchg
and
lcall
repz
push
sbb
sub
xchg
push
movsb
xor
mov
jnp
ss
stos
add
icebp
rclb
je
cmp
mov
leave
out
cmp
push
jns
arpl
lcall
mov
stc
mov
bound
addr16
arpl
lea
xchg
pop
int
and
aad
push
pushf
data16
das
mov
cmp
fbstp
inc
xor
xor
lock
cmp
pushf
cli
mov
add
out
mov
adc
xor
xchg
cmp
adc
imul
cmp
test
not
mov
mov
in
pop
mov
je
lods
fs
in
mull
and
mov
cmp
cltd
and
sub
outsb
daa
mov
testl
aad
mov
sbb
roll
sbb
inc
mov
jbe
xchg
mov
enter
fsubs
dec
push
fistps
int
dec
insb
not
jno
cmp
dec
xchg
xchg
mov
outsl
fcmovbe
imul
call
into
insl
dec
or
and
loopne
mov
mov
cli
fdivl
or
pop
cmp
inc
mov
sbb
push
movl
call
ds
pusha
mov
mov
mov
scas
fcoml
outsl
and
fwait
xor
xchg
cli
add
bnd
iret
std
lds
je
inc
sti
bound
mov
mov
scas
sti
stos
adc
adc
mov
and
repnz
insl
pop
lahf
movsl
adc
sub
fcomps
or
fwait
clc
mov
ds
pusha
imul
jge
lahf
or
jp
mov
cld
or
push
dec
lret
aad
es
aaa
xchg
mov
aam
into
sub
scas
cmp
add
fcompl
stc
mov
push
xor
dec
or
or
repnz
js
enter
jmp
xlat
inc
xor
adc
dec
push
out
into
sub
scas
cmp
shlb
lock
mov
push
test
or
scas
cltd
sti
in
fs
data16
inc
je
cmp
mov
jp
ret
mov
int3
xchg
cmc
lods
out
pop
sub
cmp
and
vmread
pusha
or
push
add
movsb
inc
mov
fldpi
or
sub
std
adc
aad
loopne
dec
cmp
aaa
mov
jnp
jnp
pop
inc
loope
xchg
fsubl
adcb
inc
faddl
push
call
out
cli
sbb
insl
sub
test
xlat
dec
cwtl
enter
adc
outsl
add
loopne
push
mov
int3
and
or
jp
pop
dec
jo
ds
jge
outsb
xor
mov
inc
pop
or
inc
addl
push
lds
sbb
mov
xor
pushf
pop
test
mov
pop
aam
repnz
outsl
jecxz
cmp
mov
into
icebp
adc
mov
jp
push
sahf
rcll
dec
sub
dec
bnd
inc
mov
stos
jmp
cmp
cmpsl
jecxz
and
dec
jo
aad
adc
repnz
aaa
add
dec
mov
out
rorl
shl
mov
or
xor
and
dec
lahf
sysexit
sub
repz
mov
inc
aaa
pop
call
xlat
iret
mov
leave
pop
mov
sub
rcr
int
or
dec
push
jno
repz
mov
nop
mov
cmc
add
or
dec
iret
ret
cmc
mov
arpl
dec
xchg
cli
cwtl
enter
push
dec
ret
fisubl
cld
or
adc
mov
in
imul
lea
mov
dec
adc
pushf
sub
mov
enter
out
shll
mov
scas
mov
notw
mov
inc
sub
mov
shll
sahf
rorl
jecxz
add
xor
les
sub
enter
sbb
xchg
ret
jno
mov
fnstsw
xchg
jmp
movsl
imul
push
in
mov
inc
pop
nop
sbb
stc
mov
sahf
iret
test
dec
cmp
inc
popa
sub
and
decb
lods
mov
and
inc
mov
xor
push
xchg
xor
inc
mov
jo
stos
scas
mov
mov
in
xor
mov
or
ljmp
mov
push
ret
cmp
in
test
pop
cvtps2pi
adc
jp
jle
in
insl
nop
jge
mov
mov
cld
lods
inc
inc
mov
add
shlb
sti
and
js
and
sub
xchg
mov
cmp
fucomp
repnz
mov
aas
and
aaa
insl
jg
lcall
sub
fsubrl
test
fldl
pop
dec
dec
mov
pop
rcrb
xchg
push
leave
push
stos
push
es
xchg
sub
int
ds
jmp
dec
icebp
pop
push
pop
push
stos
clc
loopne
or
mov
fildl
mov
add
push
xor
sub
shll
push
jb
push
mov
ror
cmpsb
inc
je
rclb
insb
dec
hlt
js
mov
push
fwait
ja
clc
enter
push
lret
mov
mov
inc
mov
je
mov
arpl
cmpsl
xchg
push
jnp
sbb
mov
outsl
jmp
je
adc
sbb
sbb
adc
fmull
pop
into
rcrl
lea
pop
dec
or
inc
mov
mov
sbb
xchg
xor
xchg
lahf
jno
arpl
fwait
push
aam
mov
jbe
aam
or
out
bound
and
lret
push
jge
mov
sbb
sub
or
and
fimuls
daa
push
in
jge
scas
shr
aas
in
into
sub
cld
ffree
daa
fadds
add
cmp
leave
sbb
loopne
mov
adc
jg
add
cmp
xor
cmp
adcl
xchg
xor
sub
lods
push
das
and
insb
push
dec
push
inc
or
sahf
shlb
aad
sahf
dec
sub
mov
mov
gs
lcall
fsubs
push
lods
mov
add
inc
loop
mov
adc
ret
test
fs
cmp
jno
lret
add
adc
gs
popf
and
cmpsb
cld
aam
mov
mov
push
jecxz
pop
xchg
lock
push
leave
mov
cmp
and
sti
jmp
or
lock
pop
dec
pop
mov
into
push
xchg
in
out
bound
pop
push
enter
inc
cli
add
push
push
lret
or
inc
and
add
out
sbb
loop
sarl
dec
push
rorl
mulb
mov
les
push
inc
cli
cmp
rcrb
add
lods
mov
mov
pushf
cwtl
ja
jl
add
sub
pop
cli
mov
xchg
adc
mov
xor
adc
je
add
fwait
sbb
add
mov
in
jno
and
push
add
sub
lcall
adc
testb
or
enter
scas
pop
aaa
xor
into
mov
mov
lret
outsl
inc
mov
lock
push
movl
call
call
pop
lods
jmp
cltd
in
mov
pop
xor
mov
cs
mov
in
mov
add
add
jbe
pop
enter
xlat
and
mov
pop
inc
ret
jns
add
les
or
cmp
mov
ret
sahf
divb
mov
ljmp
stc
sti
inc
inc
and
pop
jbe
pop
pushf
lea
jmp
push
pushf
movl
pushf
movl
jmp
rclb
mov
loope
or
mov
lods
das
imul
aaa
in
cmpsl
xchg
out
stos
lds
dec
add
popf
aaa
lahf
adc
loopne
popa
xor
dec
das
jp
bound
sbb
mov
push
testb
mov
sbb
aam
inc
mov
sub
std
call
das
pop
fsubl
inc
cmp
in
dec
cmp
dec
and
je
lock
bound
jne
popl
pop
cmp
inc
js
xchg
or
sbb
clc
xor
mov
int3
sub
jl
sub
mov
popa
inc
xchg
cmpsb
or
fwait
enter
orl
mov
or
xor
outsb
mov
xlat
jb
dec
inc
mov
mov
xor
sahf
fidivl
add
mov
nop
aad
imulb
pop
dec
adc
dec
into
inc
arpl
iret
jbe
inc
sbb
inc
mov
ja
xorl
mov
inc
cmp
jge
mov
es
xchg
inc
jge
lock
test
add
push
mov
jg
lahf
and
sbb
pop
out
pop
or
or
mov
mov
add
and
mull
lret
jb
mov
mov
out
jecxz
sbb
and
pop
jg
jns
add
call
outsb
jne
sbb
test
insl
inc
mov
adc
jnp,pt
sbb
jne
cs
push
inc
es
push
mov
inc
psubusb
pop
lds
mov
aaa
cmp
popf
decl
repnz
mov
add
iret
test
inc
daa
dec
loope
push
push
jne
outsl
jb
jl
mov
sbb
negb
cs
mov
cmc
cmp
mov
pop
add
sbb
xor
sub
dec
jg
iret
mov
test
stos
iret
mov
mov
insl
ja
faddl
fstpl
sbb
aaa
and
xchg
lods
aam
jl
pusha
inc
gs
inc
sub
je
stc
dec
scas
iret
mov
cmp
push
cmp
into
xchg
adcl
xor
push
das
adc
mov
loope
fwait
ror
frstor
int3
mov
inc
xor
adc
stos
sbb
jo
xlat
lock
rcrl
ss
xchg
fsts
stos
add
pop
fiaddl
loop
pop
lahf
sbb
repnz
push
js
inc
add
sbb
mov
push
jb
add
mov
aad
enter
fisubrl
hlt
cltd
fstps
jns
and
shlb
sbbb
inc
mov
pop
adc
push
arpl
test
mov
mov
xor
and
pop
in
push
pop
and
out
lods
sub
mov
mov
mov
rolb
xor
jmp
int
inc
fsts
pop
in
push
sbb
subl
hlt
sbb
add
cmp
mov
mov
mov
jl
mov
rorb
insb
or
xor
xor
out
mov
lahf
mov
sub
loope
dec
ds
lret
mov
scas
mov
or
mov
ret
pop
adc
loop
iret
in
ja
dec
lret
pop
movsb
idiv
bound
gs
aas
aad
mov
or
shr
test
xor
stos
lret
or
jecxz
and
into
mov
cmpsb
sti
pushf
cmp
mov
es
cld
pusha
jle
xchg
sub
cmp
xor
inc
mov
and
mov
in
jmp
loopne
mov
inc
push
lods
sbb
fldt
jp
lcall
pop
dec
xlat
dec
push
scas
sub
psubsw
repz
xor
xlat
cmp
and
mov
push
jmp
push
cvtps2pi
inc
movsb
jbe
pop
fildll
stos
xor
xchg
adc
fidivrl
jns
adc
mov
xor
stc
mov
inc
mov
js
or
int
in
sarl
lock
mov
push
pusha
push
mov
inc
sbb
and
cs
cmpsl
jbe
in
xchg
pop
jl
repz
add
and
mov
out
pop
cmpsb
dec
pusha
lds
popf
dec
std
mov
adc
stos
adc
jle
sbb
xor
popf
mov
sub
addb
aad
mov
inc
clc
dec
sbb
arpl
jae
pop
push
into
js
in
mov
dec
mov
cmpl
pop
aaa
fadds
leave
js
stos
jns
mov
cli
and
pushl
movl
movb
call
leave
in
mov
aam
ljmp
inc
in
adc
popa
popa
mov
mov
mov
xor
cmp
loope
ret
dec
or
jbe
add
les
dec
cmc
mov
lods
mov
cli
inc
inc
es
test
imul
test
in
add
and
mov
repnz
jp
stos
scas
pop
clc
pushf
and
push
pop
inc
pop
fwait
enter
mov
lcall
xchg
repz
xlat
int3
pop
int3
push
cld
ret
addr16
sub
cmp
pop
push
aam
dec
mov
xor
jo
ret
jg
mov
out
loop
mov
push
stos
inc
xchg
jge
cmp
mov
and
dec
imul
mov
fcompl
xchg
into
xor
nop
sti
sbb
iret
dec
int
in
lret
ja
inc
mov
movsl
cmpsl
mov
or
loope
sub
or
add
push
inc
inc
xor
mov
cs
aad
pop
dec
and
nop
out
mov
adcl
pop
push
sub
cmp
mov
adc
shrl
jnp
negl
adc
in
push
cmp
xchg
pop
mov
sahf
int
insl
fbstp
and
popa
mov
pop
xchg
xchg
or
or
dec
mov
jne
ljmp
stc
stos
insb
add
jbe
lods
shlb
inc
mov
xor
jmp
pusha
pusha
movl
call
leave
repz
sbb
pusha
adc
movsl
mov
adc
test
dec
ss
test
mov
mov
test
sub
add
dec
stos
jle
mov
out
data16
cmpsl
repz
xlat
scas
sbb
sbb
mov
pop
pop
inc
sbbb
inc
in
dec
mov
aaa
inc
mov
cmp
mov
mov
pushf
movl
call
adc
xchg
cmp
repnz
pop
int
mov
cmp
cmp
add
pushf
repnz
rolb
and
cmp
dec
pop
in
pop
lock
or
and
mov
pop
lock
sahf
mov
sbb
arpl
add
imul
hlt
out
mov
push
xlat
insb
mov
hlt
fcmovu
test
call
jp
sbb
and
sbb
push
clc
adc
push
popa
mov
mov
jecxz
lods
mov
add
outsb
lret
int
out
test
movsl
shrb
add
dec
addr16
jg
jb
jnp
popa
cmp
insl
and
arpl
pusha
movl
movb
pushf
lea
jmp
pop
mov
lcall
push
jne
aaa
mov
movsb
arpl
mov
jmp
popf
dec
mov
aas
js
gs
add
movsb
call
adc
dec
mov
popa
xor
jge
dec
push
adc
pop
lods
fdivrl
jne
call
fcmovnb
in
push
mov
or
xchg
inc
mov
xlat
cmc
sbb
add
push
movl
push
pushf
lea
jmp
pushf
lea
ja
push
pushf
movl
call
std
or
cmc
jns
push
inc
cli
outsl
xchg
daa
loopne
or
inc
xchg
jae
lods
xchg
mov
pop
sbb
jbe
sahf
and
dec
cmpsl
sahf
jle
mov
or
outsl
rclb
cltd
fwait
test
add
or
add
push
xorl
pop
cmp
dec
stc
xor
rorb
imul
push
push
mov
sbb
je
cmp
cmpsb
pop
xor
fistps
data16
or
fsubl
hlt
sahf
addl
push
mov
adc
sbb
into
inc
dec
in
test
pop
mov
cmp
bound
fnstsw
add
jae
add
outsl
pop
jae
sti
jb
mov
sti
cwtl
sub
push
bound
sbb
adc
and
sub
aas
por
cld
jnp
cmp
pop
fidivs
sbbb
je
xor
insb
adc
jg
lret
push
pop
notb
leave
and
xorb
fwait
adc
daa
and
fisttpl
push
pop
cld
lods
or
mov
in
sbbb
push
enter
push
jo
movlhps
xchg
jno
sbb
mov
dec
es
fwait
lret
mov
mov
test
inc
jmp
jmp
xchg
inc
xchg
lods
sub
fnsave
add
pop
inc
les
add
push
xchg
aam
jbe
ret
cmp
lea
andl
xor
call
daa
test
mov
inc
push
and
push
or
sub
push
adc
scas
inc
loopne
loope
cmp
dec
sbb
dec
sbb
dec
add
addr16
cmp
jne
stos
rcrl
mov
and
or
pop
cmp
cmpsb
sub
pop
inc
pusha
pusha
movl
push
pushl
push
movl
pushf
pushf
movw
mov
lea
jmp
jmp
jmp
ds
lods
add
adc
mov
fwait
sarl
hlt
lea
dec
insl
xor
push
sbb
push
jae
add
inc
stos
out
jnp
dec
daa
sbb
shl
cmp
mov
imul
jmp
sbb
push
pop
int3
mov
jns
pop
pop
xchg
les
aaa
scas
and
add
pop
sbb
and
push
inc
mov
cmpsb
lea
mov
iret
les
sbb
push
ja
and
mov
aad
stos
mov
add
out
xlat
pop
aam
andnps
adc
mov
test
sbb
cmpsl
addr16
inc
sbb
iret
pusha
into
test
mov
je
cmpsl
jmp
sub
daa
push
scas
and
mov
aad
inc
push
inc
scas
inc
lret
insl
sbb
inc
mov
popf
scas
lahf
jmp
and
cmpl
das
dec
and
out
cld
loope
jmp
mov
in
add
inc
ja
ret
add
mov
sub
andl
mov
mov
lahf
das
jge
cmc
or
fisubs
or
cmp
add
aam
sbb
mov
xchg
and
cmpl
and
cltd
fstpt
mov
notb
dec
mov
inc
test
in
je
lds
bound
pusha
out
xchg
ss
sub
out
out
add
mov
xchg
xor
cmp
push
int
scas
out
aas
sbb
pop
jae
shll
add
mov
and
and
adcb
sbb
jbe
in
sub
outsl
and
mov
sarl
xor
push
pushl
mov
pop
shlb
mov
inc
adc
push
ss
jge
andb
inc
xchg
sub
cmp
idivl
pop
ljmp
push
movsl
xor
mov
mov
pop
adc
rcll
sbb
mov
ret
stos
add
setp
inc
mov
mov
cmp
add
push
out
sbb
inc
adc
dec
and
mov
clc
imulb
mov
scas
lods
lahf
cmpsl
push
dec
add
pusha
adc
aas
arpl
dec
lret
cwtl
mov
rcr
std
lods
repz
movsl
or
scas
negb
test
push
leave
scas
loope
roll
gs
loop
shl
ficomps
shlb
adc
sbb
arpl
pushf
movl
movb
call
arpl
dec
movsl
pop
lods
adc
pop
sub
aam
aaa
pop
adc
inc
adc
repz
xor
or
pop
jp
push
inc
repz
into
adc
mov
pop
inc
add
cmpsb
ret
fs
push
pusha
movl
inc
aam
shll
iret
xor
iret
dec
sub
fs
sub
scas
add
ja
xchg
scas
gs
adc
int
not
js
cmp
pop
lret
mov
cli
xchg
lock
aad
shr
movsb
jmp
jo
addr16
fwait
mov
inc
ror
pop
push
inc
fdivl
sahf
ret
pop
inc
push
cwtl
cmpsb
mov
mov
jmp
xchg
adc
push
dec
rclb
enter
out
mov
sub
adc
sbb
jne
dec
test
enter
adc
mov
dec
inc
mov
jns
imul
aaa
jb
xchg
jmp
mov
movsl
in
cmp
addr16
push
add
outsb
outsl
jne
mov
sub
scas
xlat
mov
popa
sub
ss
sub
dec
xor
and
add
or
rclb
lcall
fistl
add
sbb
dec
fsin
jmp
xor
clc
dec
cmp
dec
sub
dec
dec
and
mov
loopne
movsb
push
push
adc
push
xor
add
mov
inc
outsb
xacquire
cmc
jmp
rcll
iret
ja
mov
mov
insl
fldt
cmp
sub
call
cs
mov
imul
movsb
jp
outsl
jns
xor
fmull
inc
mov
pusha
or
sub
xchg
sub
xabort
jne
stos
out
ds
adc
jmp
insl
mov
cwtl
sbb
xor
fsubrs
sbb
pop
shlb
loop
sbb
mov
dec
mov
scas
fwait
divl
xor
fiaddl
mov
cli
and
iret
rclb
cwtl
std
pop
add
dec
mov
push
mov
add
dec
pop
push
xor
and
shrb
cwtl
mov
pushf
mov
rolb
fcmovu
faddp
xor
lea
mov
jge
outsl
fisubl
ss
push
dec
sub
movsb
cmp
pop
jmp
test
dec
push
mov
sbb
mov
mov
and
fcompl
push
popf
dec
ret
testl
inc
pop
and
test
and
loop
aam
mov
or
sbb
les
dec
mov
std
ror
dec
mov
cmc
cmp
xchg
adc
in
loop
xor
mov
cwtl
ret
enter
dec
mov
xchg
xlat
fistpl
adc
mov
add
js
in
fildll
nop
push
push
cmp
sbb
lds
movb
mov
mov
mov
lahf
in
lahf
lea
int3
shl
pop
mov
jmp
jns
pop
jmp
idivb
ja
ja
jl
jmp
les
insl
push
inc
cmp
popf
movsb
ja
mov
clc
cmp
imul
jnp
lret
adc
lods
incl
mov
ror
add
shrb
je,pt
xchg
dec
or
xor
sbb
lds
xchg
cmp
mov
mov
jnp
jno
repz
mov
cltd
and
shr
rcrl
sbb
jl
and
dec
das
xor
sub
inc
cmp
cmpsl
repnz
lods
jmp
xchg
cld
movsl
call
inc
mov
push
inc
pop
pushf
pushl
call
xor
in
mov
hlt
mov
push
add
ja
mov
jnp
inc
xor
sbb
das
inc
bound
mov
or
push
xchg
loopne
ficompl
sahf
enter
insb
xor
dec
sti
xlat
jmp
aam
adc
fstpt
fnstcw
sbb
sbb
enter
aad
jp
repz
sti
inc
xchg
mov
stos
sbb
sub
mov
pusha
xchg
fwait
push
mov
jno
cwtl
xchg
mov
xor
push
scas
push
test
sub
daa
xchg
add
hlt
inc
test
outsb
in
lcall
aad
inc
jae
into
shll
mov
call
cmpsl
out
fxch
inc
adc
leave
xor
unpcklps
loopne
push
addb
sbb
push
mov
imul
adc
pop
rcll
add
push
clc
inc
mov
or
or
inc
and
fwait
into
jno
xchg
xor
sub
arpl
stos
inc
pop
sub
add
lds
addb
iret
stos
lods
out
and
xchg
mov
inc
shll
sub
ret
popf
clc
jae
jns
jno
imul
xchg
sub
xchg
mov
mov
push
fiadds
lahf
test
aad
mov
les
mov
jns
stc
daa
mov
fisubrs
jae
inc
out
lcall
sahf
shll
cmp
mov
add
movsl
mov
inc
std
jne
stos
mov
xor
in
xor
jnp
or
movsl
sbb
xchg
ja
int3
jne
push
or
popa
cltd
inc
mov
cmpsb
movsb
sahf
xchg
mov
pop
mov
sub
ljmp
ja
mov
imul
sbbl
jne
xchg
addr16
mov
les
xchg
add
imul
add
imul
aam
das
inc
add
and
adc
or
arpl
lret
adc
xorb
fiadds
mov
cli
cmp
insl
lods
ret
jge
test
mov
mov
dec
adc
test
lock
and
lds
push
fistpl
cmpsl
xor
stos
sub
jno
into
jmp
lea
push
dec
jne
xchg
and
mov
test
aad
in
pop
jns
pop
jno
inc
adc
icebp
sbb
mov
sub
mov
sub
adc
cmp
ja
xor
insl
outsb
movsl
cli
inc
cmp
xorl
in
mov
xchg
add
fwait
ror
mov
sub
mov
dec
xchg
cld
leave
xlat
stos
out
and
rep
pop
inc
adc
inc
mov
jge
xchg
popa
mov
inc
stos
mov
and
cli
cmp
dec
adc
and
push
ds
adc
gs
cwtl
test
pop
nop
jnp
and
add
mov
lea
inc
das
inc
pop
and
outsb
push
test
rcl
in
iret
mov
pushf
mov
or
jbe
inc
mov
mov
add
imul
insl
pop
pop
push
push
nop
lret
outsb
int
notl
xor
fs
sarb
out
jae
data16
mov
add
pop
or
clc
fildl
scas
jmp
push
pushf
mov
mov
mov
repz
add
dec
add
call
lods
stc
inc
push
push
scas
jge
pop
mov
jge
adc
popa
out
hlt
or
fwait
add
push
and
jae
or
out
out
ss
pop
lret
push
fwait
into
xlat
push
addl
xchg
jmp
dec
insb
fnstcw
ljmp
jo
inc
movsl
in
inc
pop
orb
movsl
sub
or
scas
mov
imul
icebp
scas
sarb
adc
xchg
aam
into
fadd
add
bound
lds
and
nop
idivb
fimuls
sub
arpl
pushf
lea
jmp
loopne
mov
stos
je
mov
popa
std
jp
pop
pop
movsb
lret
ret
xchg
mov
js
in
mov
ret
shrb
xor
jmp
mov
notb
xchg
mov
add
das
mov
test
cmp
jp
orb
xor
inc
mov
pushf
pushf
pushw
cmp
lcall
dec
cld
xor
jae
inc
cmp
mov
add
outsl
mov
sub
sub
pop
test
repnz
mull
push
pop
add
aam
outsl
mov
mov
sub
pop
das
dec
add
jbe
pop
packssdw
cld
xor
cmpsb
fsubp
std
xchg
mov
pop
lods
leave
mov
jmp
inc
mov
aas
fs
lret
push
and
adc
lcall
inc
pop
dec
xor
pusha
jns
pusha
pop
sbb
sbb
xchg
lods
les
scas
mov
add
cmp
into
mov
addr16
sub
ljmp
aad
adc
in
xor
inc
mov
jl
pop
sub
cmpsl
and
cmpsb
decb
xchg
cmp
dec
shrl
jg
mov
popf
mov
outsl
xchg
adc
je
pop
push
in
xchg
cmc
mov
movsl
into
test
arpl
not
loopne
js
clc
adc
shll
xchg
push
hlt
popf
daa
jl
xchg
imul
sbb
mov
sbb
lds
push
stos
cmpsb
or
push
jae
mov
cmc
xchg
mov
mulb
ja
out
sbb
addr16
adc
pop
in
andb
cmp
inc
cmpsb
hlt
mov
cmc
add
pusha
push
xor
in
aam
sbb
into
inc
pop
lods
cmc
out
ret
dec
stc
divl
mov
or
xchg
ret
mov
mov
adc
test
or
insb
out
cltd
loopne
les
or
jecxz
fimull
arpl
daa
jae
mov
inc
mov
out
pop
mov
mov
sahf
mov
jmp
dec
xor
mov
mov
add
leave
std
mov
outsb
or
and
or
das
stos
mov
ret
and
sub
aam
aas
les
cmpl
ds
dec
cmp
sub
notl
xchg
ret
stc
in
je
cmpsl
int3
sbb
add
sarb
jg
movl
push
push
pusha
call
call
lea
jno
push
push
movl
pusha
push
mov
lea
jmp
xor
or
xor
jle
and
enter
out
dec
or
jno
out
das
cmp
out
nop
mov
into
out
add
push
out
xchg
push
bound
outsl
incb
sbb
cs
sub
icebp
and
jecxz
push
lods
and
xchg
or
call
add
shl
sbb
lock
push
loop
or
dec
lcall
loopne
ret
mov
lea
arpl
sbb
clc
mov
stos
and
mov
mov
adc
xchg
fcom
push
push
push
pop
mull
aas
jns
into
adc
aaa
aaa
jg
jae
je
or
clc
mov
fiadds
in
push
adcb
push
movsb
mov
test
dec
cmovle
mov
data16
addb
imul
pushf
arpl
lret
jg
sbb
inc
mov
jmp
sbb
inc
and
ss
dec
cmpsb
cld
inc
adc
mov
into
add
cmc
mov
sti
out
mov
fwait
xchg
sbb
pop
jne
xor
mov
push
inc
push
inc
add
mov
insb
das
xchg
dec
pusha
aaa
stc
adc
imull
es
mov
cmc
outsl
push
inc
pushf
aad
xchg
xor
mov
lret
insb
rorb
cwtl
mov
movsb
call
loop
mov
in
pop
test
stos
cmpl
xor
pop
push
pop
mov
push
or
push
mov
dec
mov
das
dec
sbb
jbe
jo
inc
mov
into
aad
sub
mov
insb
mov
cli
popa
jg
sti
jns
push
pop
imul
dec
loopne
out
adcb
sbb
aam
int3
test
mov
std
xlat
push
push
sti
sarl
push
adc
enter
push
ret
cwtl
lds
ja
into
inc
mov
xchg
or
and
fidivrl
push
lcall
cli
movsl
out
cli
bound
dec
inc
dec
shlb
xchg
xor
popa
jp
mov
movl
fmull
ror
arpl
mov
cmc
sti
loop
cmp
sbb
in
cmp
iret
cmp
and
push
icebp
fcoms
dec
inc
jne
sub
pop
leave
mov
fstps
shrl
shll
jb
lods
pop
lds
lea
jmp
push
fisttps
mov
adc
push
std
jp
cmpsb
mov
or
aad
movl
fsubr
stc
ljmp
adc
movsl
scas
rolb
cmpsl
flds
mov
push
sub
clc
fs
movsl
inc
aas
jae
pop
loope
sbb
pop
mov
lea
out
push
aad
popa
ljmp
sbb
fstps
ss
push
cmp
cs
mov
iret
mov
add
inc
cmp
pop
and
inc
mov
data16
rol
xor
imul
sahf
xchg
mov
subl
cmp
lea
sub
mov
pop
sarl
inc
mov
addl
cmp
insl
and
lods
rorl
in
ucomiss
cmp
test
cmp
sub
mov
scas
mov
add
cmpsb
das
in
fcomi
jb
rcll
or
jnp
adcl
cs
mov
pushf
out
mov
jecxz
and
mov
jge
or
push
out
add
push
cmp
xchg
lcall
mov
lods
mov
inc
repnz
mov
mov
outsl
daa
lock
mov
jno
push
test
dec
test
icebp
test
sbb
push
xor
xor
jl
notl
mov
call
call
stc
fidivs
faddl
repz
mov
insl
or
rcrb
fdivr
mov
mov
cmp
sbb
jmp
jmp
pop
xchg
int
fiadds
int
dec
pop
out
cmp
cmc
sbb
xor
ss
icebp
lcall
or
xchg
inc
sub
mov
sub
enter
pop
jmp
inc
enter
incl
add
addr16
add
fwait
int
jae
pop
in
lods
lods
pop
repz
std
and
adc
jmp
jg
jo
inc
mov
int3
mov
inc
lret
xchg
xor
push
push
and
loopne
jle
out
jecxz
ds
das
jne
push
stos
or
repnz
stos
call
orl
dec
mov
xor
test
push
sbb
jp
loope
jne
push
leave
aad
dec
pop
enter
mov
push
adc
arpl
mov
pop
inc
mov
pop
push
call
jo
lret
mov
mov
sbb
sbb
fildll
cmp
nop
es
push
in
jbe
mov
cmpsl
dec
loope
inc
mov
out
out
leave
rcll
mov
sub
loope
inc
push
cmp
insl
add
and
mov
cmpb
out
add
es
lds
inc
aam
decl
fcompl
jnp
mov
jae
sti
mov
gs
mov
and
inc
sbb
movsb
mov
push
icebp
loop
enter
clc
mov
bound
mov
xor
rolb
aam
jg
push
pop
or
or
dec
outsl
rcrl
outsl
fdivp
cmpsl
lcall
xchg
shll
mov
dec
cwtl
imul
movsb
push
dec
pop
out
cwtl
stc
inc
xor
inc
mov
gs
out
ss
sbb
imul
ret
jle
mov
je
imul
dec
pop
sbb
lcall
fwait
fs
arpl
xlat
xor
push
xchg
in
xor
sub
xor
inc
rcr
jle
cmpsl
andl
bnd
and
fmuls
aaa
mov
loope
gs
mov
popa
push
fsqrt
shl
rcrb
aam
push
adc
mov
insb
inc
mov
adc
iret
jmp
sbb
mov
imul
outsl
sbb
sbb
xchg
push
cmp
mov
mov
push
sub
mov
minps
jno
in
sarl
fstpl
and
or
sbb
ds
mov
dec
leave
pop
mov
lock
push
scas
mov
push
in
in
test
and
imul
push
jbe
int3
or
cmp
xor
or
iret
mov
data16
mov
fadd
and
ret
xlat
lock
test
mov
scas
xor
jecxz
ret
fcmovnbe
test
sbb
pop
adc
push
movl
int
shl
inc
mov
sub
leave
addl
push
sub
sub
in
mov
cli
test
mov
rcrb
call
dec
lret
mov
add
or
dec
fistl
call
andl
xor
jne
jle
enter
outsl
xchg
stos
or
push
repz
in
adc
dec
testb
xchg
gs
add
push
pop
ffree
add
clc
cmc
push
lds
add
inc
dec
pop
cmpsl
push
pushf
pusha
mov
lea
jmp
movl
movb
movb
push
lea
jmp
pushf
movl
pushf
pushf
pusha
push
lea
jmp
in
testl
into
imul
negl
xchg
jecxz
sbbb
xchg
xchg
cmc
jp
test
mov
frstor
jb
dec
js
ss
fdivs
mov
inc
fistpl
arpl
cwtl
inc
negb
rorl
rcr
imul
cwtl
aaa
inc
mov
stc
xchg
cmpsb
stc
nop
aad
xlat
mov
push
sbb
fidivl
cmpsl
or
mov
jge
push
lds
inc
and
xchg
shrb
sbb
mov
xor
ss
iret
lods
add
xor
mov
mov
bound
sar
lds
fwait
je
dec
add
mov
mov
mov
out
push
daa
pushf
sti
sub
mov
xchg
sub
inc
mov
xor
dec
jae
inc
stos
scas
xor
mov
push
xor
push
pop
dec
idivb
lcall
test
or
jl
mov
mov
pop
push
cmc
das
add
xchg
push
out
daa
lods
dec
scas
cltd
mov
popa
fisubl
pop
dec
out
mov
scas
lea
or
adc
mov
mov
push
adc
inc
add
aas
jo
icebp
cmp
mov
out
cmpsl
xor
arpl
lcall
in
pop
std
and
push
adc
jno
mov
pop
stc
xchg
rcrl
mov
mov
add
loopne
bound
iret
aad
ldmxcsr
xchg
inc
subb
and
out
cmp
scas
sub
je
pop
fwait
adc
fldcw
mov
cs
jo
adc
mov
aad
fisubrl
test
cmp
mov
mov
xchg
mov
pop
pusha
inc
mov
faddp
push
movl
push
movl
push
movb
mov
lea
jmp
push
movl
push
movl
call
orb
and
bound
mov
jnp
mov
inc
adc
sbb
inc
test
shl
out
inc
loope
mov
movsb
pop
cmp
andl
mov
cmp
mov
scas
test
sbb
mov
les
sbb
out
adc
fsubrl
add
pop
or
mov
out
neg
das
xor
stc
popa
xor
dec
sub
stos
push
cmp
into
int3
or
in
push
sbbb
mov
test
into
sub
mov
scas
push
adc
adc
push
xor
aas
or
sub
jns
or
loope
stos
xor
and
aas
in
dec
mov
jl
jge
in
adc
loop
test
ffreep
jbe
arpl
fwait
jmp
call
mov
pop
or
jne
fs
mov
sub
test
cmp
push
bound
adcl
push
negb
dec
push
cmp
cmp
mov
jb
out
cs
or
cmp
movsb
into
jnp
jbe
and
xor
cmp
dec
or
inc
add
xchg
insl
cs
cmp
mov
sub
stc
shlb
test
fwait
inc
xor
popa
mov
cmpsb
notb
mov
ss
mov
sub
push
stc
xchg
stos
push
add
pop
roll
repnz
jo
or
mov
push
push
rorb
push
xor
and
ljmp
dec
dec
enter
mov
mov
loop
lcall
loope
jmp
lahf
sbb
or
sbb
pop
xor
inc
mov
fwait
test
pop
mov
mov
add
adc
js
test
cmc
pop
fdivr
xchg
adc
mov
xchg
adc
jae
inc
fistpll
scas
dec
test
test
sub
das
out
into
xor
pop
or
sub
scas
push
and
pop
movsl
sbb
stos
cmp
and
cmp
mov
rorl
outsl
xor
aam
push
sub
movl
pushf
mov
lea
jmp
pop
cmp
and
xor
int
testl
inc
imulb
mov
xrelease
outsb
js
jbe
enter
push
out
ja
inc
lcall
pop
fsubrl
stc
mov
movsb
iret
jge
jl,pn
jg
loope
pop
scas
sub
int
sbb
jg
mov
mov
pushf
cmp
les
pop
push
movl
pushl
pushf
pushf
mov
lea
jmp
sub
inc
fstpl
rcl
jnp
inc
add
mov
cltd
lea
shll
loop
mov
mov
push
jbe
adc
push
mov
mov
fcmovnbe
aaa
aaa
std
or
cltd
or
jle
das
jle
jle
mov
dec
nop
or
dec
add
cmp
fwait
sbb
dec
cmp
cs
js
mov
stc
or
not
xchg
cltd
xor
add
divl
push
push
outsb
xor
testb
std
fcompl
mov
andl
js
and
pop
in
jno
fiaddl
imul
insl
and
scas
lret
push
das
insl
jg
mov
in
xchg
inc
xchg
sbb
ret
outsb
inc
xor
mov
jne
popa
out
loopne
stc
cmpsl
icebp
movsb
jmp
xor
jae
testl
sahf
mov
xor
stos
stos
mov
jb
cmp
cvttps2pi
dec
inc
jne
loopne
push
push
stos
out
stc
rolb
insb
sub
inc
iret
jge
xchg
movsl
push
mov
std
pushf
stc
stos
mov
call
sbb
fiadds
lea
push
es
or
leave
mov
pop
sub
pop
push
dec
lds
xor
movl
mov
lea
jmp
sub
scas
xor
aaa
ds
stos
lret
bnd
js
mov
push
jb
jns
roll
in
icebp
dec
mov
mov
push
bnd
push
mov
cmpsb
and
jmp
lea
int
outsb
cmp
call
nop
mov
adc
int3
pushf
mov
add
mov
into
pushf
pusha
cld
push
in
ret
xchg
sub
inc
mov
xchg
mov
push
jmp
jg
rcrb
pop
sub
inc
or
jl
cltd
dec
pop
mov
and
cmpl
dec
mov
mov
lea
add
aam
rclb
dec
repnz
flds
push
in
xchg
cmp
pop
dec
imul
and
lea
ror
jmp
and
inc
decl
out
fwait
int3
xchg
and
sub
fistps
fidivrl
mov
or
repz
cmp
out
add
aas
imul
int
leave
popf
imul
mov
icebp
sub
jmp
cmp
loopne
mov
cmp
addr16
mov
mov
out
inc
xorb
inc
insb
push
test
into
jge
xchg
std
xchg
aad
out
xor
xor
cmp
test
sti
sbb
fists
daa
cmp
mov
mov
lea
pop
add
cmp
add
lods
sub
inc
sbb
inc
mov
jno
test
dec
dec
jl
add
pushf
loop
or
and
es
jns
and
add
sbb
sahf
jmp
pop
mov
mov
lock
sarl
js
cld
mov
mov
jb
rorl
pop
fwait
imul
incl
outsb
or
mov
gs
cvtpi2ps
mov
adc
in
xchg
jno
mov
mov
cs
add
xchg
mov
mov
jp,pt
mov
push
vrsqrtss
xchg
mov
je
inc
clc
mov
mov
fnstsw
or
or
mov
jmp
stos
cmp
int
out
mov
push
in
xchg
sahf
xor
test
inc
xor
test
mov
sarb
push
insb
aaa
bnd
pop
add
dec
gs
mov
mov
lds
mov
iret
call
add
mov
mov
imul
push
lods
adc
in
cmp
xchg
rolb
inc
mov
daa
pop
loop
loop
jecxz
ja
add
rcrl
mov
xor
fsubrl
mov
dec
push
pop
push
mov
inc
pop
lcall
ret
sahf
or
js
mov
xor
push
idivl
and
testb
inc
test
test
out
sbb
jg
scas
fisttpl
fidivl
jmp
loope
mov
inc
or
sbbb
mov
repz
call
ficoml
dec
sub
daa
hlt
ftst
out
shrb
sub
bound
aam
adc
sub
or
mov
cltd
xrelease
dec
pop
adc
mov
dec
mov
mov
fldl
arpl
js
cltd
out
or
pop
adc
inc
mov
imul
xchg
lds
mov
xor
push
test
mov
lahf
mov
test
out
fcompl
std
dec
mov
loope
add
or
popa
adc
pop
jge
movsb
mov
nop
mov
in
mov
fnstcw
insl
leave
cltd
subl
jecxz
mov
xor
ss
nop
mov
imul
mov
xlat
stos
cmp
jno
sub
cwtl
push
push
mov
sti
or
lret
ret
sbb
dec
mov
repz
cmp
insb
push
xor
cs
sub
jp
push
movsb
adc
lcall
inc
adc
lret
scas
loop
mov
and
les
mov
sub
mov
lods
or
pop
sbb
push
pusha
cld
loopne
push
sarb
pop
in
mov
cwtl
cli
fwait
repnz
pusha
mov
in
cmc
adc
dec
repz
cmp
fildl
sub
lcall
mov
stos
mov
sbb
pop
or
pop
mov
mov
jmp
and
pop
test
enter
lcall
sub
push
mov
pop
mov
jne
sarb
pop
and
std
lods
roll
mov
xor
dec
imul
or
inc
sbb
mov
loop
cltd
mov
xchg
jmp
xchg
pop
or
int
sub
sbb
pop
push
ds
xor
pop
inc
xor
xchg
cmp
stos
in
fiadds
xor
sbb
dec
mov
xchg
xchg
scas
hlt
stos
or
xor
mov
dec
iret
cmpsb
fcomps
and
inc
xor
test
jbe
push
or
push
ret
mov
inc
pop
aas
mov
and
in
movsl
jecxz
mov
pop
add
hlt
sbb
sub
mov
insb
das
pop
and
jg
outsb
xor
das
js
xor
popf
popa
arpl
imul
dec
xor
jae
add
lock
cwtl
pop
inc
mov
jae
mov
inc
stos
add
sub
pop
or
mov
fsubs
sahf
mov
ds
inc
inc
xchg
sbb
pop
inc
lods
inc
xor
mov
int
nop
mov
inc
xchg
icebp
pusha
cmp
xor
add
adc
ja
xchg
jo
or
mov
adc
cli
adc
cmp
clc
popf
mov
inc
xchg
and
xor
mov
imul
mov
in
and
ds
push
incb
mov
push
cmpl
ja
mov
sbb
jns
loopne
add
dec
cmp
das
rcrb
bound
lds
shrb
and
xchg
bnd
rol
aam
and
movsb
stos
sbb
cmp
repz
inc
mov
xchg
std
fwait
rolb
pop
lret
stos
sub
fs
gs
lahf
xor
icebp
ss
lods
jmp
arpl
xor
mov
lcall
stos
jle
mov
mov
or
sarb
rcll
sti
out
popl
scas
push
sub
int3
xor
sub
cmp
bound
imul
and
push
inc
mov
cmp
jmp
leave
mov
add
icebp
jae
gs
push
push
mov
or
imul
push
xor
std
hlt
jbe
das
aas
jb
mov
xlat
mov
xor
mov
push
repnz
mov
mov
aaa
dec
lret
xchg
in
lahf
ret
pop
cmp
jo
in
push
loop
mov
push
in
insb
cld
mov
mov
lahf
mov
sub
lret
in
fcomps
xchg
push
shrb
enter
dec
repz
sub
lods
int
push
stc
sub
es
mov
sbb
lahf
cli
in
lock
mov
xor
aam
jecxz
jo
inc
and
stc
nop
nop
mov
sahf
sub
and
and
jle
mov
repz
mov
or
testl
add
or
pop
or
sub
inc
sti
cmp
lods
popa
jecxz
imul
xlat
cmp
pop
imul
inc
mov
jb
sub
lahf
movsb
xchg
xchg
push
and
cmp
pop
push
loopne
push
outsl
jmp
inc
rorb
mov
push
mov
daa
mov
push
pop
cmp
je
lahf
xchg
jnp
jns
jp
dec
mov
popa
clc
add
cld
js
push
cmp
jbe
inc
mov
dec
sbb
add
push
mov
mov
sbb
jmp
scas
dec
enter
iret
cmpsl
clc
aad
mov
sbb
ss
pop
cmp
push
jbe
lcall
push
jnp
mov
or
xor
arpl
push
pop
ds
inc
sbb
int3
xchg
xlat
mulb
fiaddl
add
repz
pop
inc
roll
cmp
lods
into
mov
mov
movl
lea
jbe
pusha
pushf
movl
pushf
pushf
lea
jmp
jmp
test
sub
sbb
arpl
mov
xor
sub
inc
mov
rcrl
cmp
push
fistl
stc
cmp
fnstsw
xchg
mov
sbbb
mov
pop
or
cmpsl
sbb
dec
aas
mov
popf
pop
inc
mov
inc
and
insb
fisttpl
call
repnz
sbb
xor
test
push
jo
inc
and
jo
xchg
in
int3
xchg
mov
dec
adc
inc
rcrb
mov
aaa
gs
fistps
pop
inc
jmp
pop
rorb
leave
sub
mov
test
pop
xor
push
adc
inc
mov
rorl
aam
push
dec
daa
inc
push
mov
dec
mov
pusha
lods
mov
test
add
es
add
dec
lods
in
pop
mov
mov
pop
cmc
mov
int3
and
and
xchg
fstps
insl
push
jne
mov
pop
dec
xchg
fmul
out
or
pop
sub
pop
call
push
adc
inc
mov
inc
and
mov
pushf
lea
jmp
pusha
movl
movb
pushf
lea
jmp
movl
push
movl
pushf
movb
lea
jmp
or
or
inc
mov
push
ds
ret
xchg
test
pop
pop
bound
ret
jg
fstpt
sbb
jnp
mov
bound
jae
xor
pushl
mov
arpl
ret
mov
lock
hlt
or
xchg
mov
not
jbe
jge
pop
test
scas
in
cbtw
jge
add
js
sub
jbe
test
mov
iret
aam
xor
pop
outsl
jmp
fstps
leave
fadds
out
loop
dec
lret
cmp
adc
mov
insl
lods
nop
xor
sub
mov
cmp
decb
push
scas
outsl
dec
imulb
push
aaa
cwtl
and
push
mov
loope
cmc
cmp
js
stos
cld
inc
sbb
pop
sbb
aaa
inc
mov
pushf
push
mov
movl
call
aad
nop
shlb
jecxz
in
mov
dec
mov
test
data16
push
xchg
xchg
incb
popf
fwait
into
test
lea
mov
test
jmp
fwait
sbb
sbb
pop
jne
pop
xor
cmpsb
lock
dec
inc
and
bound
jle
push
mov
imul
adc
cvtps2pd
inc
pop
addps
popa
icebp
sbb
xor
sbb
adc
in
sbb
incl
mov
scas
loope
inc
and
push
js
sbb
lahf
ror
push
movb
lea
jmp
pushf
call
or
xchg
ffree
rolb
lret
xchg
jmp
sbb
inc
push
imul
aad
or
fwait
push
push
xor
data16
imul
dec
lods
pusha
repnz
cmp
lcall
in
push
dec
test
push
in
mov
in
hlt
adc
jno
loope
sub
adc
inc
mov
inc
and
lcall
lds
xchg
lcall
push
test
rcrb
mov
pushf
lea
jmp
lds
pusha
fstpt
mov
negb
mov
sahf
sbb
and
push
not
nop
mov
jmp
ja
add
mov
push
nop
insl
test
or
outsl
adc
dec
outsb
cs
pushl
cs
jnp
lea
subl
fisttps
mov
inc
ljmp
mov
movl
jmp
mov
out
jecxz
xchg
dec
jnp
stos
rcrb
outsb
sbb
data16
push
adc
pushf
push
dec
push
add
das
pusha
push
push
fcoml
lods
add
mov
inc
adc
push
add
scas
clc
inc
sub
mov
jnp
ljmp
dec
lds
add
icebp
outsb
int3
sub
xor
pushl
lea
jmp
mov
cld
inc
mov
repz
scas
into
mov
sbb
data16
push
pop
inc
in
xchg
and
mov
popa
mov
notb
loopne
or
addl
mov
sub
pop
mov
xor
pop
das
jns
rolb
add
cli
adc
outsl
daa
lret
pop
jnp
repz
or
push
sahf
mov
fbstp
out
iret
and
cli
dec
decb
fdivp
inc
jl
cltd
call
adc
in
inc
xchg
out
xchg
cmp
inc
sub
out
lret
jno
sub
ds
ds
xchg
scas
mov
mov
movsb
fidivrs
mov
adc
call
and
pop
out
cmp
aaa
push
ja
movl
repz
mov
mov
fdivrs
push
mov
cld
mov
or
push
and
cmp
mov
and
or
fcompl
bndstx
out
inc
pop
jl
addr16
push
bound
mov
inc
stos
inc
cltd
ret
pushf
and
pushf
ljmp
popf
add
scas
mov
call
dec
std
adc
int
pushf
mov
jns
enter
jns,pt
add
and
out
jae
mov
sbb
ja
nop
and
xchg
dec
mov
mov
add
outsb
push
movl
push
mov
mov
movl
pushl
pushl
pusha
lea
jmp
push
pop
stc
pop
mov
dec
test
dec
adc
fstl
stos
shll
xchg
mov
iret
xchg
dec
push
insb
rclb
aas
and
ss
push
mov
xor
neg
popa
int
fildll
cmpsl
cltd
pop
fmull
cmpsl
out
inc
insl
add
dec
sbb
lret
sbb
rorb
and
test
or
inc
mov
hlt
jnp
adc
pmullw
xchg
lock
sbb
mov
lret
mov
cmpsb
sti
ret
push
dec
ljmp
cli
inc
daa
outsl
sbb
inc
pop
icebp
aam
stc
out
push
push
jge
int3
push
pop
stc
out
add
cmp
daa
xlat
push
cmp
mov
aam
adc
int
sbb
stos
cmp
loope
xor
xlat
rorl
in
sbbb
lea
andl
jle
mov
stos
in
lods
leave
lods
cli
cltd
xchg
sti
sub
dec
test
sbb
mov
lret
inc
pop
int3
pop
mov
xor
mov
push
pop
cmp
jg
mov
in
gs
push
cmpsb
cld
add
bound
movsl
dec
icebp
mov
loop
mov
mov
mul
aaa
fldenv
push
jmp
out
xlat
mov
mov
or
mov
cli
jne
bound
jge
fwait
sub
cltd
sub
inc
mov
or
into
pop
ljmp
push
lods
and
movsl
loope
cvtps2pi
and
push
inc
sub
or
dec
adc
les
filds
pop
lds
popw
idivb
or
mov
imul
arpl
stos
xchg
jl
lds
inc
mov
inc
and
lock
mov
movb
lea
jmp
daa
in
push
sbb
fildl
test
data16
xor
pop
sbb
sbb
jle
jge
and
push
push
and
ret
ret
jg
mov
add
mov
out
pop
and
test
pop
add
xchg
imulb
pop
bound
mov
enter
adc
test
enter
mov
jmp
xchg
cmp
dec
ror
xchg
test
icebp
cli
inc
gs
enter
inc
pop
xor
inc
xor
and
mov
pop
aam
mov
dec
dec
xor
mov
inc
or
push
add
xor
cmp
sti
inc
mov
aas
jle
sbb
mov
cmp
sahf
sub
mov
sbb
and
addr16
in
aad
jae
xchg
incl
jge
sub
sbb
jns
test
mov
les
inc
rorb
or
ret
push
inc
jg
mov
push
test
shl
das
pop
push
divl
inc
ret
stos
cld
inc
and
into
push
push
pushf
mov
adc
mov
add
mov
popf
pop
inc
xlat
sarl
loop
mov
stc
mov
push
sbb
loop
mull
scas
inc
inc
test
arpl
jmp
lcall
dec
lret
push
dec
xor
gs
das
mov
shlb
xchg
test
cli
icebp
aaa
nop
scas
sbb
sbb
jp
popa
movsl
xor
mov
aam
rorb
push
loopne
mov
mov
lret
lcall
in
imul
scas
cmp
and
sbb
mov
jns
dec
emms
add
mov
or
rorb
push
dec
xchg
and
out
ja
and
sub
pop
inc
mov
stc
cmpsl
jmp
dec
sbb
xor
add
mov
add
cmp
add
int
shlb
mov
pushf
movl
mov
pusha
pushl
movb
lea
jmp
push
pusha
pushf
jmp
xchg
push
fists
bound
or
leave
mov
shlb
cmp
cmp
sbb
add
movl
push
ja
jmp
sbb
lock
ds
adc
aas
fsubl
stc
loope
popf
mov
es
push
sbbl
or
jnp
cmp
cmpsb
pop
call
sahf
rorb
pop
scas
call
repz
sub
fbld
jnp
pop
mov
pop
js
jbe
pop
fmuls
add
xor
and
hlt
dec
pop
push
fcmovb
out
stos
pop
add
mov
movsb
sub
fcmovnb
cld
adc
jae
ficompl
mov
mov
movsl
sbb
test
mov
mov
push
js
mov
push
inc
mov
inc
and
mov
jmp
add
mov
push
push
lea
jmp
movl
pushf
call
cmp
dec
push
fsubr
push
cs
cmp
jne
nop
enter
test
jl
inc
pusha
xor
lret
pop
inc
mov
mov
push
cmp
lcall
icebp
sbb
push
inc
and
mov
xchg
cs
aaa
icebp
cmp
shl
xorb
cmp
push
adc
mov
outsb
dec
and
mov
xor
adc
cwtl
jb
mov
fs
jle
push
push
mov
pusha
pushl
lea
jmp
aam
mov
sbb
je
mov
in
pop
xor
dec
jmp
or
cltd
popf
enter
fimull
mov
inc
cmpsl
sbb
dec
je
jns
inc
arpl
sub
mov
mov
push
push
dec
cmc
cmova
adc
daa
xlat
orl
out
or
lods
stc
in
gs
xchg
loop
mov
pop
out
mov
notl
loope
mov
sub
xor
push
call
jp
jl
adc
add
rorb
fldt
arpl
lcall
gs
push
mov
pop
dec
lret
lcall
adc
leave
cmp
cmpsb
clc
sub
mov
sub
fs
mov
cli
data16
dec
test
lock
push
inc
leave
push
push
cmp
mov
loopne
psubsw
cmp
and
mov
and
xchg
mov
adc
inc
mov
sub
dec
mov
je
mov
and
push
insb
xor
sub
xor
sbb
shl
sbb
int3
sub
mov
mov
xor
cltd
mov
out
leave
xchg
gs
shlb
arpl
popa
stos
mov
lock
loope
sbb
arpl
pop
das
jno
adc
aam
sbb
xchg
andb
cwtl
xor
ret
sub
inc
mov
cmpsl
int3
dec
fwait
pusha
xor
fldcw
cld
jno
mov
pop
in
inc
inc
jp
add
fwait
sbb
xor
xlat
cmp
mov
inc
int
inc
sub
hlt
ds
stos
data16
xor
bound
jne
daa
xchg
sarl
push
mov
mov
push
shrl
xchg
jbe
ja
cmp
cld
mov
rolb
sub
insl
and
scas
mov
in
inc
je
icebp
fistpll
or
sbb
lret
push
roll
push
cmpsb
pop
cmpsl
push
dec
adc
push
popf
andb
push
std
jp
popa
js
xchg
push
cmp
jge
pop
pop
jle,pt
sub
or
mov
jge
hlt
and
fstpl
mov
fwait
clc
cli
ljmp
mov
mov
imul
or
sbb
fstp
subl
add
clc
int3
dec
push
mov
lock
movsl
jmp
pushf
ficompl
mov
insl
sbb
popa
and
inc
mov
or
out
mov
push
test
sbb
je
inc
sub
insl
cmp
andb
and
sub
test
mov
movsb
cltd
pop
mov
arpl
xchg
dec
sub
xor
rcrb
test
imul
adc
fisubl
add
add
adc
push
outsb
or
call
inc
fisttps
sub
push
push
fiadds
cs
rcrl
jecxz
lret
rclb
loope
lock
js
repnz
inc
push
or
icebp
mov
sub
pop
adc
out
and
dec
xchg
sub
add
outsl
xchg
xor
add
and
xchg
lea
push
xchg
mov
aam
cltd
imul
adc
pop
out
and
pushf
jp
mov
push
push
xchg
mov
or
fsubrl
add
cltd
xchg
daa
add
sarl
ljmp
gs
daa
in
jg
mov
icebp
dec
cmp
push
fistpl
push
jb
and
test
and
pop
mov
push
mov
dec
imul
lret
test
inc
cmp
pop
inc
mov
test
lock
js
push
aad
mov
xlat
or
and
iret
dec
push
jns
dec
push
xor
mov
xchg
sub
cli
mov
divb
mov
stos
xchg
jmp
lea
jl
jle
pop
cs
or
mov
inc
xor
mov
or
xor
ret
mov
xor
jmp
jb
fs
iret
or
xchg
int3
pushf
cli
popf
mov
inc
and
mov
push
movw
lea
jmp
lahf
inc
into
pop
mov
inc
xchg
xor
fs
fisubl
jns
xchg
roll
adc
mov
dec
mov
pushf
test
pop
cli
mov
mov
insl
repz
les
rsqrtps
movsl
imull
cmp
aas
mov
ficomps
cmpl
loope
mov
mov
adc
test
and
test
sub
inc
xchg
cmpsb
scas
pop
sub
bound
inc
add
push
fs
repz
mov
cmp
push
add
inc
ds
and
call
daa
pop
inc
jo
jecxz
lods
nop
sbb
aad
in
and
es
aaa
fldl
cmpsb
sahf
sahf
cmpb
and
sarl
dec
repz
out
jl
mov
add
cmp
sbb
or
cmpsb
aad
enter
jmp
mov
sbb
add
fstpt
cli
mov
aas
adc
clc
adc
movsb
rcrl
leave
mov
jne
mov
sub
adc
inc
sub
cmpsb
push
xor
jnp
negb
xchg
xchg
fcoml
dec
cmc
jne
inc
cmp
push
dec
sbb
out
call
cmc
out
imul
in
mov
and
cmp
push
sub
mov
les
pop
sbb
sub
pop
popf
inc
mov
roll
movsl
fcmovnu
outsb
or
mov
enter
jecxz
pop
jo
xor
push
dec
sub
inc
testl
mov
or
dec
push
into
cli
fcomp
or
rorb
int
push
fmuls
or
gs
scas
pop
jbe
push
sub
push
jmp
sub
pusha
movl
pushf
movb
pushf
pushl
lea
jmp
jo
push
movl
jmp
jae
adc
pusha
andl
cmp
mov
mov
adc
add
add
pop
and
ljmp
mov
push
mov
mulb
cmp
test
cmp
push
dec
shl
add
subl
push
ss
fildl
movsl
inc
inc
pop
movl
jmp
or
mov
xlat
jcxz
mov
add
push
ljmp
fsts
stos
imul
push
pop
mov
outsb
aaa
dec
add
insl
cmp
je
out
adc
rcl
popf
push
and
lea
cmpsb
xchg
packssdw
inc
or
xor
inc
mov
in
fisubl
frstor
pop
cmp
mov
push
push
and
cltd
mov
mov
ret
cmpsl
xor
xchg
imull
or
xchg
xor
xchg
fsubl
loop
lds
sbb
mov
mov
cs
sbb
popf
hlt
push
adc
inc
mov
cmp
cmpsl
cmp
mov
add
push
push
mov
mov
cmc
enter
dec
mov
pavgw
int3
and
js
out
pop
dec
pop
test
and
mov
adc
inc
cmp
push
stc
dec
mov
cmc
fsubl
add
push
fmuls
fcomip
mov
mov
jmp
and
rcrb
test
lahf
ljmp
adc
or
out
lods
dec
fwait
or
pop
popf
add
in
fldenv
movsb
pop
inc
cli
std
jb
out
lret
mov
push
movsb
xlat
push
cmp
cmc
rclb
ss
dec
test
mov
shrb
nop
jns
cmpsl
shrl
repnz
jno
imul
int
push
pop
and
cmp
std
inc
aas
imul
mov
outsl
xor
dec
dec
xchg
lock
lret
push
and
in
imul
jnp
jae
lods
xchg
adcl
decb
in
and
adc
aad
xor
xorl
xchg
jl
pop
adc
in
sub
mov
adc
icebp
lods
mov
fsts
mov
dec
mov
pop
or
dec
mov
mov
stc
ljmp
adc
daa
je
int
inc
xor
fwait
movb
adc
popa
sbb
jecxz
push
addr16
and
and
xor
mov
mov
xchg
andl
cmp
add
lahf
cmp
stos
stc
scas
mov
aad
mov
mov
xor
hlt
imul
std
data16
fcomps
out
inc
mov
pusha
pushf
jmp
push
xchg
into
inc
xchg
mov
nop
shrl
gs
pop
xchg
add
pop
dec
nop
mov
in
add
and
out
lcall
mov
or
pusha
inc
or
mov
push
add
subl
lods
shlb
pop
add
jp
mov
addl
aam
add
inc
arpl
mov
sbb
mov
jnp
or
repnz
loope
lret
aaa
jp,pn
ja
cwtl
sub
shrl
fldenv
sbb
cmp
cs
sub
call
cmc
sub
mov
cli
sub
pop
xor
stos
test
std
mov
push
pop
xor
jae
mov
ljmp
sbbb
pop
inc
mov
lahf
mov
lock
icebp
inc
ds
mov
push
push
adcl
fwait
pop
mov
imul
enter
leave
xchg
iret
xlat
jb
call
incb
movsb
mov
jae
into
mov
jno
fs
aaa
enter
cmpsb
mov
add
nop
cmc
inc
adc
js
inc
es
mov
mov
mov
scas
icebp
xor
lock
inc
inc
mov
fsubrl
sbb
inc
cli
je
jb
lcall
cmp
jle
or
lret
ret
cltd
fistpll
mov
faddl
dec
jbe
and
or
fildll
mov
push
mov
shrl
mov
addr16
jl
mov
mov
jge
push
jmp
sbb
adc
aas
jl
cltd
test
push
sub
loopne
rcrb
inc
pop
insb
flds
or
mov
cld
mov
ljmp
mov
pusha
add
outsl
enter
sarl
mov
fcoml
inc
pop
mov
mov
dec
sbb
aaa
js
xchg
decb
sbb
daa
fld
and
imul
test
sub
sub
jns
jle
inc
fiaddl
scas
mov
outsl
lods
hlt
out
inc
bound
pop
fistl
or
data16
mov
mov
bound
idivb
fidivs
cltd
jg
mov
sbb
jns
fdivr
jbe
adc
pop
xchg
adc
xchg
fistps
push
sub
cwtl
popl
test
push
mov
pop
clc
js
or
dec
adc
xchg
jo
push
pop
bound
jnp
test
xchg
inc
mov
inc
and
cmp
add
add
inc
and
mov
push
lea
jmp
dec
stos
adc
jmp
xor
inc
lock
movb
push
dec
or
lods
in
sub
movlps
add
in
imul
leave
negb
in
jg
xor
mov
int3
mov
mov
add
aas
fs
or
es
out
ret
shl
stc
int
jae
xor
scas
xor
das
mov
sbb
lahf
pop
inc
cmc
movl
pushl
lea
jmp
lret
out
adc
in
mov
mov
mov
mov
fwait
cmp
or
aaa
std
jp
bound
lahf
int
fs
es
mov
gs
add
test
scas
sub
xor
mov
pop
jle
pop
mov
clc
mov
out
inc
shlb
dec
dec
cmc
mov
add
mov
shlb
mov
mov
cli
jne
insl
rolb
rorl
inc
adc
mov
int
aaa
pop
scas
aaa
fmuls
repnz
sub
mov
test
lret
loopne
mov
xchg
imul
scas
inc
mov
loope
jmp
sbbl
divb
mov
xor
pop
mov
dec
insl
xchg
jb
dec
add
mov
and
mov
sti
dec
mov
pop
lea
popa
xchg
rcrl
jmp
testb
out
or
adcl
or
filds
out
lret
daa
pop
xchg
xor
cwtl
scas
add
sub
or
adc
inc
mov
lock
dec
dec
testb
in
xchg
insb
inc
les
fdivrl
and
pop
mov
add
rorl
jb
dec
cmp
orl
fcmovb
sub
mov
add
addr16
out
stos
xchg
cli
inc
or
fsubrl
inc
iret
pushf
or
popl
and
shl
jns
ja
fsubl
aam
mov
movsl
xor
dec
xchg
lcall
and
jmp
mov
xor
pop
clc
jecxz
cmp
int3
cmpsl
out
inc
xchg
mov
mov
dec
sti
sbb
sbb
xor
ja
mov
or
pop
fs
inc
push
push
dec
and
lods
push
add
mov
mov
mov
call
sar
sbb
adc
inc
sub
fldl
in
inc
push
pop
ja
dec
movsb
push
mov
cmp
dec
mov
sbb
shll
pop
stos
ss
xchg
insl
aad
clc
mov
dec
push
pusha
xor
add
pop
inc
aas
cmp
xchg
mov
andb
xchg
imul
sub
inc
mov
out
fisttpll
lcall
dec
or
loope
fnsave
sub
stc
pop
ja
ret
inc
pop
dec
je
xchg
add
mov
inc
cmc
mov
je
xchg
push
push
add
stos
sarl
jb
insl
and
mov
mov
xor
mov
mov
int3
xchg
ret
arpl
inc
sbb
repz
and
lcall
dec
mov
mov
loopne
call
sub
and
repz
mov
add
jmp
sbbb
cmp
mov
mov
sbb
pop
rclb
sbb
sub
jle
loopne
mov
sbb
add
push
jg
push
ret
fcompl
xchg
xlat
test
scas
sub
je
inc
mov
cmpb
cltd
xor
imul
xchg
sub
pop
xchg
lods
push
xchg
testl
and
imul
fcmovbe
sub
pop
adc
jno
bound
shr
mov
sbb
dec
cmp
push
dec
enter
or
sbb
mov
add
push
jno
jge
mov
mov
fldenv
sti
jmp
sub
sbb
std
mov
adc
sub
cmp
andl
mov
dec
or
mov
arpl
ret
pop
mov
mov
lds
jo
loop
jmp
fs
xor
hlt
xchg
rcrl
filds
cltd
mov
cld
stc
pushl
xor
push
insb
inc
cmp
popa
and
dec
adc
shlb
lock
cmp
adc
divl
lcall
popa
inc
and
mov
and
ss
aam
adc
cmp
ret
xor
cltd
lea
cmp
xchg
js
mov
mov
adc
mov
cli
mov
mov
adc
jnp
int3
mov
mov
lods
pop
cmc
les
push
test
pop
inc
outsl
sahf
inc
orb
mov
ficompl
adc
cmp
out
xchg
cli
xchg
jns
xor
sub
lcall
shrl
iret
jg
dec
imul
testl
mov
arpl
popf
mov
mov
std
bswap
cmpb
mov
mov
ror
mov
iret
mov
out
int
lods
mov
lss
push
insb
jns
mov
nop
mov
sbb
cmp
fcompl
pop
stc
xchg
adc
or
dec
movsl
rclb
cmpsl
mul
shll
mov
sbb
mov
lret
jae
insb
add
mov
repz
mov
dec
mov
mov
std
std
test
lret
xor
fldenv
add
mov
fwait
js
subl
mov
sbb
mov
pop
test
mov
inc
mov
inc
sbb
ret
sti
dec
inc
popf
in
mov
in
maxps
mov
lods
add
pop
add
fcmovb
add
lcall
sub
sub
rolb
adc
push
mov
xchg
mov
xor
jge
mov
mov
insl
aaa
lock
mov
pop
insb
aad
adc
cmp
sbb
movsb
ficomps
or
icebp
fidivrl
aad
xchg
push
out
jne
mov
adcl
addl
pop
sub
movb
jne
xor
mov
gs
dec
dec
pop
dec
xchg
addr16
push
add
sub
sti
mov
aaa
test
mov
rcrb
ja
pushf
jno
ds
push
add
inc
mov
out
test
and
mov
in
shrl
mov
hlt
inc
add
shl
fs
pop
fisttps
mov
xchg
mov
es
clc
into
loope
ror
outsl
outsl
adcb
cmpsb
pop
pushf
fnsave
or
leave
imul
repnz
lds
in
popa
inc
shrl
jbe
mov
shld
bound
mov
mov
out
sbb
xchg
dec
adc
in
push
or
adc
xchg
cltd
ret
jl
cmp
xchg
frstor
popa
xchg
lret
cs
add
loope
in
aas
and
adcl
es
pop
loope
shrb
faddp
or
sub
loopne
mov
rclb
xor
rclb
stc
lahf
enter
lret
push
sub
scas
repz
testb
cmpb
or
out
imul
push
popa
fcomps
push
out
jb
and
push
stc
or
mov
add
arpl
rcll
mov
jae
je
or
xchg
bnd
mov
lds
fs
jmp
sbb
pop
fmul
out
add
mov
pop
mov
aaa
jb
mov
cli
roll
out
cmpsl
es
add
jg
mov
push
and
lock
inc
mov
mov
mov
dec
sbb
add
adc
out
pop
jle
pop
mov
adc
jl
dec
repnz
lahf
shrl
inc
mov
mov
inc
je
cmp
std
scas
rorb
cltd
mov
adc
xor
pop
add
xchg
stos
add
std
scas
fwait
push
pop
mov
test
cs
and
mov
lret
jge,pn
xchg
adc
sbb
jg
or
rorb
mov
adc
jno
incl
sbb
stc
in
jne
aas
add
lcall
xchg
cmp
int3
test
pop
sbb
mov
push
and
jne
fcoml
jns
mov
jle
and
inc
dec
cmp
pop
jo
int
ret
xchg
adcb
or
lret
inc
xlat
pusha
sbb
out
repz
and
mov
loop
or
decl
and
push
jg
add
out
mov
dec
adc
inc
mov
loop
cmpsb
mov
fsubl
gs
xor
test
popf
sti
aad
pop
jl
and
jbe
and
mov
stc
rol
mov
int
and
mov
enter
add
sbb
mov
ljmp
jbe
cmp
push
push
mov
fsincos
jge
jne
daa
jo
dec
push
mov
inc
push
xor
sub
jo
ljmp
cmp
mov
lods
hlt
mov
inc
inc
mov
push
dec
jbe
adc
add
ss
ficomps
ss
push
lret
and
mov
ss
xchg
pop
shlb
mov
sub
jo
xor
push
sbbl
add
bound
clc
cmp
adc
cli
dec
sub
dec
inc
xchg
and
and
js
add
dec
aas
inc
pop
jl
inc
adc
jb
pop
shl
dec
dec
cmp
dec
outsb
js
dec
movsb
jmp
repnz
inc
mov
sub
addl
insb
ds
mov
or
mov
gs
inc
fisubrs
pushl
pushf
nop
xlat
lock
adc
xor
jp
sub
inc
cld
fdivrp
adc
pop
xchg
out
mov
push
xchg
std
lods
in
add
aad
xor
inc
mov
pop
add
and
test
ljmp
xchg
icebp
jmp
push
in
jns
fs
pusha
and
or
or
jge
addr16
iret
sub
pop
sub
dec
ds
jo
cld
rclb
popf
lds
or
dec
jge
adc
cwtl
add
cltd
lret
adc
xor
mov
pop
ss
mov
popf
std
push
mov
shll
or
dec
lret
stc
mov
xor
mov
pop
leave
aas
daa
xchg
std
jp
pop
sti
xchg
push
or
mull
jns
sbb
scas
pusha
xor
cmp
mull
add
pop
hlt
outsl
inc
xlat
pop
bound
inc
outsl
rcrl
outsl
fmulp
mov
lahf
hlt
mov
pop
int3
cmp
mov
aad
divl
sub
push
dec
lret
inc
stos
push
jne
nop
ret
pop
mov
mov
fwait
cmp
dec
rcrb
mov
mov
cmp
mov
adc
nop
jp
outsb
add
insb
ss
add
out
jmp
call
js
add
les
mov
sub
popf
cmpsl
dec
lods
test
sbb
sbb
insb
cmp
out
test
leave
pusha
inc
and
shr
add
dec
lock
arpl
lcall
movl
mov
lea
jmp
add
pushw
fucomip
mov
test
xchg
rolb
fldt
test
mov
push
push
and
mov
jo
mov
mov
inc
mov
sahf
les
out
lea
testl
pushf
sub
rolb
push
push
fs
lods
xchg
and
pop
fistpl
mov
sub
sub
push
popf
hlt
push
sti
js
arpl
or
jle
fnsave
pop
inc
ljmp
mov
aas
push
pushl
sti
and
fst
ds
cmp
sub
gs
imul
ficoml
lcall
loop
popf
je
and
stos
or
test
inc
xchg
xchg
aaa
jno
sbb
sbb
arpl
loopne
mov
ja
orl
jnp
adc
mov
push
add
outsl
movsb
icebp
xchg
ret
mov
xchg
test
inc
and
outsl
sub
and
inc
and
stc
mov
je
add
fs
jmp
call
bound
gs
in
xchg
mov
movsl
shrl
mov
dec
pop
fisttpll
dec
push
adc
xchg
mov
push
xor
pop
fldl
sub
push
push
loopne
jle
jl
mov
mov
lock
ret
inc
sub
aad
inc
data16
aam
dec
jo
adc
loop
bnd
add
push
imul
enter
pop
call
fidivrl
lcall
mov
dec
sahf
fcoml
xor
negl
addr16
stc
scas
or
add
rclb
pop
dec
adc
xchg
inc
mov
jae
ficompl
add
scas
mov
cmc
and
std
lret
ret
adcb
and
or
xchg
clc
jno
push
xorl
icebp
sub
cmc
sbb
adc
cmp
push
xor
mov
push
add
aam
test
test
shlb
fs
dec
popa
inc
xor
mov
stos
push
fwait
lds
cmp
movl
sub
mov
push
jbe
pop
fnsave
xchg
mov
fcoms
mov
fwait
jns
push
jbe
arpl
pop
repz
lds
cmc
xchg
xchg
jle
ds
lods
test
fwait
je
clc
mov
pop
inc
mov
in
stos
pop
mov
xchg
mov
mov
jne
ja
push
mov
add
jle
pushf
sub
inc
mov
fisubl
fisubrs
inc
sbb
inc
jp
jns
dec
insl
mov
dec
scas
popf
imul
mov
xchg
arpl
dec
sbb
rolb
test
mov
push
inc
mov
jp
mov
pop
cmp
xchg
lcall
jnp
xchg
jecxz
loope
les
es
jge
pop
outsb
jno
adc
gs
mov
in
sti
popa
xor
sbb
sub
mov
scas
sub
jp
jle
cmp
sub
repz
aam
inc
stc
adc
mov
notl
sti
and
fs
pusha
mov
mov
outsb
frstor
sub
inc
xor
or
inc
es
sub
jno
add
hlt
mov
sbb
and
sbb
leave
add
jmp
inc
aad
ljmp
es
addr16
or
pusha
stos
inc
and
lea
push
out
sbb
sub
ret
mov
loop
cmovo
lods
push
pusha
add
movsb
bound
inc
lock
iret
pop
adc
rol
jecxz
cmc
outsl
ret
aas
push
jecxz
rcll
lea
inc
and
movl
call
jmp
mov
jecxz
stos
mov
dec
and
mov
mov
test
mov
xchg
mov
xor
inc
test
jmp
sub
lods
lret
mov
inc
adc
adc
lods
ror
mov
cltd
fdivr
inc
stc
push
adc
ja
ds
lods
jmp
inc
xchg
inc
mov
inc
loopne
adc
push
cmp
aas
scas
fmuls
xor
sbb
jns
movsl
cli
loop
mov
inc
xchg
push
out
ror
sti
adc
test
or
xlat
lret
pusha
and
push
fstps
mov
enter
sbb
inc
mov
fdivrl
mov
std
repz
mov
pop
out
ljmp
jnp
add
int3
jbe
mov
inc
mov
es
pushf
outsl
lock
std
movsl
sbb
mov
pop
mov
mov
mov
or
pop
lahf
out
sub
shll
xor
mov
adc
scas
rorl
push
mov
aaa
push
test
mov
out
xor
jb
out
push
cmp
jae
pop
add
sub
daa
cmpsl
jmp
mov
aaa
mov
add
pushf
movsl
push
inc
sub
lret
xor
mov
cmp
and
in
and
ret
leave
cltd
cli
fucom
push
sbb
ja
mov
adc
test
psrlw
in
lock
insl
add
das
xchg
es
and
jp
icebp
mov
xchg
shrl
lods
mov
jge
ss
subb
mov
sbb
stos
into
mov
mov
test
iret
jno
testb
shrl
or
lods
mov
hlt
ss
repz
dec
add
xchg
shlb
out
sbb
ficoms
adc
push
sbb
gs
jl
clc
pop
xchg
dec
sub
mov
push
mov
adc
in
add
or
fwait
and
adc
sub
cwtl
sbbl
sub
in
jmp
jo
cld
cmp
mov
jno
cmp
mov
and
xchg
jmp
mov
mov
mov
cmp
pop
adc
addr16
scas
lret
xchg
jbe
push
sbb
inc
mov
mov
icebp
inc
add
pop
cmp
mov
les
cmpsb
mov
fisttps
xor
les
cmp
ja
sbb
dec
pop
es
movl
test
xchg
sub
xor
or
add
and
dec
inc
mov
movl
call
pushf
push
jmp
leave
loopne
icebp
stos
or
xchg
ret
insb
cs
shrb
jne
mov
inc
add
lock
gs
lea
inc
les
bound
dec
xor
and
call
dec
jae
fdivs
js
sub
mov
mov
mov
and
lea
imul
les
inc
pop
push
cmc
mov
out
jmp
pop
pop
dec
fwait
sub
inc
ret
adc
mov
sbb
inc
ljmp
in
mov
cmp
mov
mov
pop
jle
inc
mov
inc
sbb
sub
push
aaa
orb
add
jbe
movsl
cmc
out
movsl
mov
adc
add
mov
xchg
pop
and
in
jne
movsb
mov
lea
pop
jl
jle
or
ss
sbb
shlb
inc
aas
xor
mov
xor
jae
add
push
addl
cmpsl
push
popa
mov
push
mov
nop
test
jle
inc
pop
mov
jnp
in
lock
pop
jecxz
incb
jb
test
lock
push
bnd
dec
lcall
add
rorl
movsl
stos
sub
push
popf
pop
dec
lods
pop
in
outsl
shlb
jmp
mov
inc
xor
leave
cli
sti
scas
shlb
std
mov
hlt
lret
xlat
xor
cmp
aam
push
repnz
xorl
lea
sbb
sub
mov
mov
cli
addl
xor
cmp
mov
fidivrs
or
dec
test
pusha
xor
mov
push
pop
push
adc
cmp
mov
dec
cmp
ret
jg
ret
jb
sarb
sarb
xchg
out
sbb
or
das
jns
add
bound
lahf
cmpsl
dec
jl
xor
cld
in
stos
mov
imul
fiaddl
push
fimull
and
loop
push
sbb
test
pop
out
test
incl
repz
xchg
mov
daa
sarb
lods
daa
xor
jp
dec
fistpll
ds
scas
and
dec
lds
repz
rolb
mov
mov
insb
xor
repnz
mov
daa
arpl
mov
xor
mov
pop
dec
loope
mov
daa
mov
xor
push
pop
cld
loope
dec
push
sub
jb
dec
push
mov
adc
and
dec
call
cmpsl
jne
loop
ljmp
clc
cltd
iret
stos
sub
push
call
mov
iret
lret
es
cmp
clc
mov
fsubr
movsl
jae
negl
repnz
inc
sub
pop
fwait
test
test
pushf
xor
mov
or
fisubs
in
xlat
stc
xor
subb
push
jnp
or
cmp
mov
aam
inc
or
mov
mov
inc
mov
cld
push
and
cld
push
add
xor
test
test
js
in
jne
adc
add
data16
ljmp
cmpb
sbb
mov
cmp
sbb
test
lret
xor
mov
add
call
lret
add
dec
adc
mov
cmp
mov
sbb
std
sbb
or
pop
sub
mov
adc
sub
dec
adc
mov
test
orb
push
xlat
mov
jl
jecxz
pop
enter
notl
inc
and
stos
in
dec
lds
mov
inc
and
inc
sti
std
mov
pushf
lea
jmp
mov
mov
inc
je
cmp
call
test
int
les
daa
andl
cmp
scas
pusha
add
leave
pop
enter
sbb
cmp
out
fistl
popa
and
outsl
fdivl
xchg
xchg
push
adc
xchg
mov
dec
xlat
jne
pavgw
subb
aas
pop
add
mov
inc
mov
xor
jmp
imul
jecxz
std
inc
into
lahf
and
sub
jmp
lds
fisttpl
and
inc
add
lea
je
call
out
sub
roll
bound
shrl
or
pushl
pushf
push
movl
pushl
movb
movl
movb
pusha
lea
jmp
xchg
dec
cmp
pop
jb
es
leave
lods
push
addr16
outsl
or
ffree
mov
jo
hlt
adc
mov
pop
adc
mov
divl
inc
rolb
in
repnz
sub
test
sti
pop
dec
movups
std
xchg
xchg
xlat
mov
imul
xchg
aas
pop
in
jmp
inc
pop
sbb
ss
xchg
movups
cmpsl
inc
adc
xor
cmp
lock
mov
sbbl
and
movl
mov
dec
inc
out
fistpll
movsl
push
int
jno
addr16
lods
mov
adc
lods
in
divb
nop
push
adc
mov
sub
ja
xchg
mov
cli
mov
sbb
sti
add
shlb
mov
pop
test
stos
cmp
cmpsl
adc
mov
dec
addr16
rcll
adc
mov
sbb
or
shr
or
xor
test
sub
sub
jns
or
into
jns
jnp
mov
adc
jno
and
xchg
mov
ficompl
mov
movsb
push
jae
pop
aas
sti
ret
mov
in
addr16
in
lods
stos
ret
jbe
stos
sbb
push
inc
mov
and
lock
xlat
push
pusha
mov
lea
jmp
pushf
call
pusha
movl
pusha
push
movl
mov
push
pushf
lea
jmp
repnz
scas
dec
sub
mov
inc
cs
sub
imul
sbb
sbb
mov
jmp
dec
xchg
das
cmp
inc
fucomp
inc
jno
decl
cli
or
loopne
out
stos
add
mov
mov
xchg
pop
es
and
sub
dec
bnd
jne
jne
mov
inc
inc
mov
mov
iret
imul
test
mov
test
inc
fnsave
out
loope
mov
lds
insl
aaa
pop
ds
dec
add
xchg
out
ret
dec
mov
xor
xlat
pop
inc
lret
dec
push
push
cmp
or
fcomps
aas
and
js
in
fstpt
mov
aas
movsl
fcomps
dec
adc
ffree
mov
sub
aad
push
iret
shl
in
jb
repz
insl
xor
adc
cmp
lock
jmp
imul
mov
ret
popa
jnp
jb
jbe
xchg
add
or
push
inc
mov
sbb
add
ja
out
in
adc
pop
cmp
xchg
push
xor
pop
mov
and
jno
mov
adc
mov
xor
add
or
lcall
ret
xchg
xchg
inc
mov
test
shll
lcall
mov
xorps
xchg
mov
add
lods
rorb
sub
aas
xchg
jp,pn
add
int
js
jno
mov
inc
fisubrl
daa
insl
int
outsl
cmp
adc
clc
mov
xchg
jns
jg
xor
test
sub
out
pop
movsl
rcll
jb
js
jns
inc
pop
adc
data16
inc
inc
pop
sub
ljmp
mov
push
inc
mov
sub
adc
jnp
fwait
les
loop
jo
bound
cmp
jns
jb
add
jbe
pop
add
inc
sarb
out
mov
xor
mov
daa
pop
inc
fmull
add
xor
xor
ret
aas
pop
or
icebp
jge
push
pushl
movl
pusha
movb
mov
lea
jmp
jp
int3
js
dec
cmp
stos
sar
cmp
int
or
pop
fbld
xchg
xchg
dec
inc
pop
or
stos
mov
add
mov
js
dec
nop
std
lret
scas
adc
mov
jecxz
inc
jnp
dec
sti
push
push
popa
sub
fs
push
add
mov
mov
pusha
mov
or
fimull
lods
mov
adc
mov
xchg
sub
inc
mov
mov
call
ds
ret
sbbl
pop
jecxz
bound
in
les
in
mov
push
roll
jle
pushf
jae
jae
das
fisubs
roll
out
imul
bound
lret
cld
mov
inc
lods
or
dec
mov
repz
aas
inc
sbb
cmp
cmpsb
loopne
mov
repnz
shrb
aam
jns
dec
sbb
outsb
rorl
mov
sub
imul
sbb
in
jg
inc
bound
cmpb
aaa
pop
loop
or
and
cltd
je
push
pop
push
in
mov
hlt
inc
sbb
stc
ds
mov
xor
into
jmp
mov
xchg
lcall
insb
push
out
popa
and
test
jp
and
mov
xchg
lods
incl
ret
loop
xchg
int3
sbb
pop
cmpb
cld
loope
or
push
dec
ds
and
out
add
sbb
loope
xchg
fadd
hlt
jle
aam
dec
sbb
dec
xlat
repnz
ja
mov
clc
xchg
andl
aad
dec
pop
sbb
xor
sub
in
aaa
pop
pop
pop
in
pusha
mov
aas
ja
push
mov
xchg
mov
rclb
xchg
dec
lods
movsl
lock
cmpb
mov
inc
xor
imul
or
cmp
incl
nop
push
flds
or
insl
ja
ret
xor
lods
fildll
lods
sti
xchg
into
and
nop
xor
lods
push
sub
sub
pcmpeqb
in
orb
and
and
jg
and
cmpsl
fidivrs
or
lahf
test
and
fadds
lods
mov
outsl
insb
push
nop
outsb
cli
mov
ret
adc
gs
dec
fcompl
sbb
mov
lret
inc
sbb
stc
sarb
fsts
jae
inc
adc
add
inc
pop
jmp
or
jmp
insl
and
jle
aad
mov
jle
int
lds
inc
testb
mov
mov
mov
dec
mov
sbb
dec
xchg
inc
mov
push
dec
sub
shll
idivb
shrb
xchg
push
scas
and
push
jp
adc
jg
pop
sti
daa
sbb
push
dec
cld
jge
push
mov
inc
ret
mov
cld
dec
push
cmp
mov
ss
adc
xchg
call
dec
ljmp
cmp
mov
mov
sub
mov
or
inc
sub
and
jbe
and
and
inc
inc
pop
xor
leave
add
and
cld
adc
jle
jo
xor
jle
add
cmp
dec
and
cmp
sbb
roll
xchg
clc
mov
jo
and
or
fisubrs
or
mov
sarb
xchg
xchg
jg
inc
movsl
pop
loop
arpl
jl
std
cmp
cmpsb
sub
fcmovnbe
out
or
adc
dec
mov
std
sub
jae
mov
jb
cmpsl
imul
or
fdivrp
add
rolb
je
xchg
punpckldq
cmpsb
pop
inc
aad
out
out
xchg
xorb
cmpl
imul
jb
int3
mov
dec
mov
fs
in
mov
mov
add
arpl
sbb
fcompl
or
ljmp
adc
xor
mov
inc
mov
js
mov
stc
jno
mov
mov
mov
inc
sbb
inc
aaa
sub
push
loope
scas
sub
adc
pop
push
fistl
pusha
lret
mov
add
negl
jp
jns
sbb
lock
leave
pop
and
pop
inc
adc
mov
cmp
or
test
in
inc
mov
lods
jmp
stc
xor
mov
xchg
adc
jnp
fcompl
cmp
cld
mov
fdivl
or
mov
mov
sub
cmp
xor
jo
dec
scas
inc
test
js
sbb
mov
mov
sub
pusha
addb
sbb
call
insb
sub
xor
push
stc
and
adc
mov
inc
and
das
subb
stos
sbb
jnp
mov
cmp
add
xor
sbb
sahf
mov
bound
adc
inc
ja
adc
mov
mov
push
push
xlat
test
js
dec
jl
into
rclb
sub
stc
popf
aas
mov
lcall
dec
mov
testl
add
lcall
decb
cmpsl
lea
jne
jmp
mov
push
mov
cmpsb
xchg
std
loop
cmc
jecxz
jle
cmpb
and
out
or
inc
mov
std
stc
mov
push
movl
pusha
pusha
movl
pushl
lea
jmp
jmp
jecxz
push
mov
mov
pop
sbb
mov
pop
cmp
xchg
movsl
pop
repnz
insl
stos
jne
stos
inc
sarl
inc
aas
xlat
add
mov
mov
ds
push
adc
aas
adc
push
mov
mov
sahf
push
dec
and
scas
and
dec
and
xchg
inc
mov
fidivs
je
subl
xchg
icebp
pushf
cmp
lock
adc
loope
mov
fstpl
loope
subb
fidivrs
lods
sbb
clts
adc
cmpsl
jle
mov
xor
add
jnp
xor
lock
push
push
outsl
xor
das
aaa
mov
fldt
pop
ret
fbld
pop
cmp
divb
add
inc
mov
movsl
jae
dec
lds
loop
cmp
out
mov
fists
mov
mov
aam
lds
push
or
push
mov
xchg
clc
xchg
ret
jge
popf
push
insl
xchg
xor
daa
aad
fnstcw
mov
xchg
xor
in
push
ficompl
bound
negb
or
and
mov
lcall
int3
and
jnp
mov
mov
ficomps
or
jecxz
jo
pop
mov
movsl
inc
call
std
and
xchg
adc
pop
jl
fs
mov
out
xor
jns
scas
add
xchg
out
add
mov
negl
in
sub
cmp
adc
mov
lret
out
lds
lahf
xor
pusha
in
lea
neg
mov
cli
and
add
sub
lock
repz
adcl
fimuls
stc
mov
aad
xchg
movb
mov
stos
outsl
jl
pop
push
xlat
mov
dec
xor
pop
lret
ret
in
test
sbb
push
push
inc
jg
lods
adc
dec
xor
movsb
lds
mov
xchg
cmp
cmpsl
gs
insl
lock
ficoml
dec
xchg
sti
in
int3
jne
sbb
pop
dec
cmp
jns
mov
cwtl
imul
mov
pop
das
push
bound
or
clc
adc
aas
pop
xchg
add
or
cwtl
int
and
mov
test
lcall
inc
and
repnz
jle
push
pusha
lea
jmp
push
cwtl
in
push
cltd
inc
bnd
push
inc
mov
lea
popa
fbld
push
dec
insl
aas
sbb
mov
jle
pusha
sub
adc
movsl
inc
add
int
adc
imul
pop
or
push
jbe
lcall
fistpl
dec
adc
pop
dec
adc
sub
pop
cld
mov
mov
mov
push
rcr
mov
pop
xor
push
addb
shl
push
testb
test
out
insl
cmp
dec
ss
out
adc
mov
insb
cwtl
cwtl
pop
adc
out
add
lahf
push
mov
outsb
adc
test
jo
stos
sahf
mov
jno
mov
test
sub
fs
pushf
pop
adc
lret
std
or
ror
mov
mul
repz
in
dec
cli
add
xor
xchg
jg
inc
sbb
pop
in
clc
mov
mov
inc
addb
pop
adcb
sub
hlt
mov
loop
rcr
in
dec
mull
fcmovnu
test
mov
cmp
xchg
ja
scas
clc
clc
ret
repz
rclb
jb
push
cmc
rcrb
stos
mov
sbbb
and
dec
add
adcb
sbb
dec
bndstx
mov
out
xlat
inc
pop
in
dec
ja
add
idivl
inc
sub
fwait
es
inc
mov
pop
add
and
movl
push
push
lea
jmp
push
movl
jmp
fdivr
mov
sbb
sub
iret
mov
inc
adc
ljmp
xor
sbbl
subl
daa
pop
sti
mov
xchg
push
sub
mov
xlat
mov
cmpsb
imul
dec
push
push
adc
jle
push
add
mov
jo
push
xchg
jmp
pop
lret
pop
out
mov
mov
stc
mov
push
outsl
xor
jo
mov
pop
cmp
das
imul
jg
or
mov
add
cmp
shll
adc
ret
lods
lret
inc
mov
cmp
movl
pushf
lea
jmp
iret
jmp
jecxz
push
outsl
add
movsb
sbb
ja
xor
std
in
scas
mov
push
repnz
dec
pop
testb
lea
push
icebp
pop
inc
push
mov
movsl
adc
inc
jl
xor
mov
or
mov
mov
and
cmp
pop
in
sbb
mov
pop
test
cld
jo
movsb
lcall
daa
cli
hlt
push
sub
or
push
test
hlt
sarl
sbb
inc
inc
insb
pop
clc
jbe
mov
push
loop
in
lea
xor
cltd
cmp
pop
cvtps2pd
dec
fistpl
outsl
fdivl
adc
daa
push
and
sub
cld
dec
adc
jl
hlt
inc
mov
mov
lds
xor
scas
fisttpl
fldl
nop
ret
outsl
or
fisubs
mov
out
scas
mov
pop
fistpl
mov
jae
lds
push
dec
les
xor
mov
enter
repnz
outsb
jmp
inc
clc
xchg
sub
inc
mov
sbb
sarl
stos
xchg
enter
out
fstps
sarb
fdivl
aam
inc
fs
adc
repnz
jnp
insb
cmp
scas
je
jns
lahf
mov
out
mov
jno
add
mov
xor
mov
in
inc
mov
dec
xchg
pop
mov
iret
pop
shr
mov
cmc
imul
out
mov
adc
jnp
jae
push
andl
inc
and
inc
pop
addb
ljmp
or
mov
mov
pop
xor
into
cs
mov
je
dec
jbe
mov
push
xchg
lea
pusha
add
adc
scas
sub
push
out
or
add
inc
pop
add
sbb
clc
mov
sub
or
add
cmpsl
fdivs
in
imull
mov
dec
sbb
fwait
andl
push
xchg
mov
add
pop
xchg
mov
pop
jl
rcrl
push
pusha
cmp
inc
mov
mov
ds
xchg
mov
cmpsl
sbb
imul
ljmp
xchg
lret
jmp
xchg
arpl
mov
ret
scas
mov
imul
test
lock
xchg
cld
cmpsl
mov
push
aas
ss
inc
xlat
mov
in
clc
nop
and
movl
call
std
or
fimuls
es
push
xor
pop
push
adc
push
dec
pop
je
hlt
aaa
cmp
push
mov
dec
push
loop
pop
pop
pop
outsb
mov
adc
cli
rcrl
lods
adc
dec
push
lock
imul
je
mov
idivl
frstor
ja
mov
inc
mov
mov
mov
push
jns
sub
test
in
test
dec
insl
sbb
cs
cwtl
stos
inc
mov
pop
mov
lods
mov
xchg
sub
sbb
push
xor
mov
lahf
mov
lods
cwtl
or
call
mov
xor
inc
add
movsb
sarb
les
inc
mov
push
push
and
fidivrs
jo
out
fstpl
add
inc
cwtl
xor
pop
sbbb
popa
mov
adc
and
mov
jb
rcrl
int
adc
in
push
jno
lahf
xchg
xchg
cmpsl
call
push
mov
std
mov
jae
lock
mov
out
xchg
inc
pop
mov
jl
jle
push
mov
adc
sub
xor
dec
add
les
jno
scas
or
iret
push
call
add
jno
mov
or
cwtl
js
les
rorl
int
add
push
add
inc
in
jecxz
mov
aam
mov
into
cmpsl
cmpsl
data16
sahf
and
addr16
jno
xchg
jle
lods
les
cmpb
outsl
aaa
mov
xchg
sbb
sbb
adc
fsubp
into
sub
jnp
in
add
sub
test
cmp
add
mov
adc
dec
insl
nop
and
cwtl
cmp
shrb
mov
fistl
cltd
cmpsb
mov
shrb
mov
pop
jl
incb
ja
xor
inc
idiv
jge
add
aas
arpl
xor
inc
inc
inc
mov
jmp
xchg
subl
les
push
imul
cmpsb
xchg
push
test
jbe
pop
movsl
sub
xchg
mov
mov
inc
aam
out
popa
cli
jge
xor
pop
push
sti
mov
push
arpl
lret
and
stos
pop
aam
jecxz
cmpsb
push
jo
inc
ja
shll
cmp
inc
sub
mov
mov
xor
popf
cmp
and
lds
int3
shll
out
xchg
xor
ficompl
sbb
mov
enter
mov
add
sarl
scas
mov
test
aas
stos
jmp
lock
xor
xchg
cmp
minps
sarl
jno
xor
rcrb
sbb
sti
sbb
sbb
cmpsl
add
negl
lahf
enter
scas
int3
rcrl
mov
stos
lahf
cmpl
sbb
push
test
shll
xor
in
arpl
adc
push
out
push
and
fwait
mov
mov
insl
cmp
ljmp
xlat
or
pushf
rorl
pop
xor
fstpl
jp
gs
call
mov
push
fsts
dec
jmp
sbb
clc
mov
std
fwait
pop
xchg
je
stos
mov
xor
sub
aam
arpl
pushl
mov
jbe
xorl
lock
fistl
frstor
imul
jge
insl
fs
in
mov
stos
adc
mov
rcll
inc
mov
mov
xor
push
das
xlat
call
enter
ret
mov
adc
pop
jnp
mov
pop
xor
xor
add
sub
popa
mov
mov
xchg
mov
xchg
add
into
add
popf
mov
mov
xor
add
loop
dec
mov
repnz
and
jb
ds
jmp
push
insl
xchg
daa
insb
imul
out
jg
xchg
adc
sbb
inc
pop
ds
xchg
shl
xchg
xor
sbb
fstps
outsl
aaa
push
jecxz
int3
mov
inc
mov
hlt
push
mov
in
or
jecxz
das
scas
stc
dec
sbb
cmp
push
xor
pop
sbb
add
sbb
leave
or
icebp
data16
sub
or
fldl
test
jmp
stc
fcoml
xchg
dec
ror
cmpsb
cmpsb
mov
lret
je
flds
outsb
lcall
movl
pusha
pusha
lea
jmp
movl
pusha
movb
lea
jmp
push
insb
loop
lods
fwait
jb
in
mov
adc
sub
sub
call
or
std
jbe
andb
in
and
enter
push
jnp
imul
mov
fs
sub
lea
imul
ja
repz
outsl
into
mov
sub
mov
xchg
outsb
cmp
inc
das
dec
pop
insb
sub
icebp
inc
mov
nop
jge
mov
push
add
xor
mov
movsl
add
arpl
pushf
mov
adc
cs
call
dec
pop
js
int3
aam
jge
or
fmuls
mov
mov
std
dec
xorl
add
pop
mov
lret
jb
sub
bound
mov
mov
cmp
lods
sbb
stos
mov
push
xor
fcompl
dec
adc
repnz
faddl
dec
or
adc
and
fs
jp
out
cmpsb
xlat
jmp
push
sbb
mov
clc
cmp
insl
inc
insl
outsl
movsl
sbb
pop
lods
lret
mov
mov
fcomps
aad
in
mov
repnz
jo
push
or
mov
cwtl
adcb
push
insb
test
jle
rclb
out
mov
sbb
in
mov
lret
lock
daa
pop
or
mov
push
sbb
scas
cmc
pop
dec
dec
fadd
and
xchg
mov
shrl
leave
inc
mov
stos
lods
insl
sub
xor
jle
rcll
push
add
sub
jp
sub
scas
clc
cmp
sti
sahf
jns
sbb
sub
cmp
mov
test
imul
pushf
xor
jo
insl
xor
mov
rorl
adc
stos
aad
hlt
aam
mov
jo
xor
aam
in
push
mov
addr16
aaa
nop
cmp
dec
or
insb
rol
push
mov
jl
jnp
push
cmp
sub
jbe
mov
sub
cmp
ss
cmovae
add
outsl
dec
mov
lahf
nop
and
std
adc
xor
adc
mov
jno
and
sub
or
test
mov
into
shrl
push
pop
jp
cmpsw
leave
or
dec
ret
add
cmp
shl
test
jo
jmp
push
pop
aam
jb
mov
ret
and
add
push
xchg
jl
mov
psrad
test
js
and
clc
push
cmpl
sbb
push
cmp
push
inc
lock
arpl
dec
add
insb
sbb
mov
jg
adc
fcomip
and
pop
ss
ficompl
clc
xchg
mov
shrb
addr16
dec
dec
inc
pop
vmovlps
mov
adc
cmpsb
or
cmp
sub
mov
lcall
imul
out
or
sbb
pop
loope
adc
mov
cmc
jb
inc
mov
mov
inc
jmp
adc
int
sbb
pop
and
sbb
adcb
bound
mov
xchg
pop
adc
movb
pop
pop
cli
scas
lea
push
pop
cmc
cwtl
insb
sarb
je
mov
scas
out
sbbl
fmuls
lcall
xchg
jp
mov
addr16
fwait
leave
xchg
pop
in
xchg
mov
in
stos
sub
imul
mov
ljmp
mov
push
les
push
ss
mov
xor
cwtl
pusha
int
sub
jne
ficomps
add
xchg
mov
pop
xchg
ss
call
enter
std
xchg
rcrl
pop
pop
ljmp
mov
cmp
bound
or
lahf
cmp
push
pop
push
mov
inc
in
hlt
add
xchg
aas
xor
pop
clc
xchg
cmpl
xchg
mov
lret
push
sub
cmp
std
xchg
ja
inc
jns
enter
cmp
pop
push
rcrb
jae
sub
fbstp
sahf
xor
into
pushf
jp
cli
stc
sbb
cmpsl
subb
sub
and
addr16
push
cmp
sbb
sbb
cmp
mov
aas
jb
sahf
loop
sti
cmpsl
out
xchg
enter
movsb
test
cmp
sbb
or
lods
ljmp
mov
les
inc
push
sub
in
lahf
adc
inc
push
pop
lret
jb
and
sbb
sbb
pop
shr
xor
out
imul
pop
add
fists
in
aaa
in
data16
add
shrb
scas
fs
adc
sub
ror
mov
adc
mov
mov
leave
nop
test
lds
or
inc
cmp
mov
lock
jo
imul
push
jns
dec
ja
iret
mov
bnd
lahf
ja
enter
insb
cltd
lock
or
mov
aad
lret
mov
out
aaa
das
lock
fdiv
aad
cmpb
filds
cli
stc
scas
pop
sarb
mov
pop
xor
ds
inc
mov
test
xchg
push
dec
and
lods
in
and
push
test
xor
cltd
xchg
mov
adc
lahf
mov
dec
adc
dec
bndstx
out
aad
jo
mov
int3
cmpb
out
aam
test
mov
ret
or
clc
adc
mov
pop
iret
std
mov
jp
xchg
daa
inc
pop
jge
arpl
xor
aam
into
mov
cmpsb
xor
pop
lahf
aad
std
scas
pop
jg
cli
int
push
mov
scas
jl
fisubrl
ljmp
mov
mov
pushf
cld
cmpsb
loop
shr
ret
out
je
adc
mov
lods
xchg
pusha
push
add
notl
pop
inc
mov
add
mov
cmpsb
xchg
sahf
in
mov
push
push
out
lahf
clc
pop
aas
and
cmp
imul
push
insb
andb
data16
push
lods
stc
cs
into
shll
mov
mov
mov
mov
xchg
andb
test
enter
pop
jp
popa
fwait
inc
mov
call
add
ss
dec
push
cli
decl
into
mov
dec
jb
int3
mov
adc
test
imul
adc
arpl
call
dec
je
pop
loop
push
and
outsb
cmpsl
sub
push
mov
sahf
mov
inc
mov
ja
mov
fcmovnb
movsb
pusha
pop
add
stos
mulb
add
inc
mov
enter
stc
jmp
dec
xchg
mov
xchg
fcoml
jno
inc
mov
ljmp
jle
arpl
inc
or
pop
sub
je
jno
inc
pop
add
mov
push
outsb
mov
xor
mov
jne
add
int
jns
int3
dec
es
aaa
outsl
roll
idivb
mov
push
cmpsl
ror
in
jge
mov
push
xor
es
inc
pop
mov
das
jl
cmp
jp
sbb
loope
xchg
xor
xor
push
xor
xor
mov
and
cmp
mov
popa
ja
mov
dec
or
pop
outsl
xchg
mov
xor
loop
scas
adc
out
jecxz
jg
stos
out
mov
pusha
aas
jo
lcall
jno
pop
adc
incb
or
xor
xchg
lahf
in
mov
xchg
mov
mov
sub
mov
aam
ja
or
aam
lods
repz
inc
mov
fisubrs
fnstsw
and
dec
lods
int3
bound
push
aam
xor
pop
inc
and
dec
sbb
mov
inc
sarl
aas
insl
mov
jo
mov
pushf
ret
fnstsw
ret
mov
xlat
and
sbb
loope
or
pop
sub
arpl
aam
mov
mov
pop
das
xor
push
addl
imul
xchg
shl
mov
dec
popa
push
mov
push
and
xchg
cmp
in
dec
divl
push
sub
push
inc
mov
rcrb
jnp
in
jno
fwait
dec
xchg
sub
ja
pop
and
gs
ss
jae
pop
ljmp
push
mov
and
rorb
adc
xor
sub
xor
jp
inc
mov
pusha
ret
js
iret
dec
pop
jb
sub
es
and
dec
pop
mov
xor
mov
adc
iret
mov
frndint
mov
or
add
test
jb
mov
xor
inc
mov
xchg
test
add
sub
ret
cltd
sub
in
mov
notl
fwait
ss
gs
cmpsb
mov
mov
out
lcall
mov
in
mov
or
pop
loop
aad
hlt
jno
lock
push
pop
jmp
cmc
lret
out
int
xchg
mov
icebp
or
ljmp
int3
fiaddl
sbb
leave
leave
sbb
call
out
test
cld
dec
testl
lods
or
mulb
fisubs
pop
pop
sahf
clc
int
ret
shll
das
cli
outsb
fisttps
dec
pop
adc
in
mov
jmp
push
mov
daa
sub
cwtl
push
fidivrs
adc
cli
aas
xlat
jo
jge
ffree
pop
inc
aam
or
iret
dec
or
popa
cs
movntps
lock
mov
pop
lock
movsl
call
int
pop
pcmpgtd
jmp
push
ljmp
andl
dec
aas
mov
push
dec
mov
loope
xchg
in
adc
inc
lahf
inc
cld
push
shl
and
pop
adc
out
test
cmp
mov
icebp
fwait
scas
pop
jns
sti
ja
pop
stos
jecxz
in
push
inc
inc
xchg
loop
pop
insb
adc
dec
je
or
and
pusha
adcb
pop
adc
outsl
insl
push
dec
add
loop
cmp
dec
jbe
insb
xchg
mov
movntq
fidivrl
or
adc
in
push
pop
insl
mov
or
mov
cvtdq2ps
mov
lods
push
into
inc
nop
outsb
jmp
dec
jb
xor
sub
dec
push
ljmp
lahf
pop
insl
movsb
jle
jl
out
sbb
std
pop
add
out
cmp
and
mov
int3
stc
mov
cmp
rcll
pop
dec
xor
inc
pushf
call
push
adc
cwtl
mov
jb
in
pusha
sahf
sbb
imul
or
fbld
jl
out
inc
xchg
cli
js
nop
clc
inc
cmp
or
int3
xchg
jp
mov
cmp
mov
stos
sti
pop
add
inc
out
sub
mov
push
scas
pop
mov
rcrl
outsl
je,pt
sahf
loope
or
mov
push
pop
mov
jmp
inc
mov
ss
sarl
sti
xchg
xor
sbb
xorb
adc
test
test
test
icebp
push
jne
outsb
lods
sahf
sub
mov
leave
lods
sub
inc
mov
jp
push
movl
pushf
pushl
lea
jmp
into
pop
clc
aam
ffree
pop
imul
lcall
repz
or
cmp
subb
xchg
or
sbb
lahf
add
lods
shrl
xor
les
mov
or
repz
jecxz
mov
rorb
mov
or
jbe
leave
cmp
loope
xchg
arpl
paddq
mov
sub
push
les
das
xchg
sbb
ror
inc
loopne
push
fucomi
pop
test
mov
jecxz
xchg
fsubrl
mov
shrb
in
or
jb
ret
sbb
adc
in
push
xor
inc
lret
push
add
cmp
idivl
lds
mov
mov
push
mov
push
jnp
mov
jle
fscale
jb
mov
cs
out
test
xchg
cwtl
push
inc
lods
enter
add
js
mov
mov
add
mov
inc
scas
push
mov
xor
xchg
mov
inc
push
pop
fsts
jg
mov
push
and
mov
in
sub
ds
cmpsb
sbbl
popl
mov
fdivrs
int
jo
push
push
cltd
cmp
and
cmc
jb
mov
in
jmp
inc
mov
leave
fisubs
ffreep
ret
movl
pusha
push
push
call
pushf
pushf
movl
mov
push
push
lea
jmp
hlt
xlat
mov
ss
add
xor
push
inc
daa
inc
add
inc
cmp
inc
pusha
push
mov
stc
enter
test
into
mov
ljmp
ror
jp
add
adc
pop
cltd
dec
dec
xor
insl
jo
repnz
or
mov
mov
inc
nop
xchg
fwait
into
jb
and
jmp
rorb
movsb
xor
fwait
shl
daa
pop
push
jns
cmpsl
aaa
mov
push
ljmp
loop
and
aad
insb
aad
sbb
xor
std
sbbl
sbb
mov
push
popf
add
xor
fistps
test
cmp
shl
push
dec
pop
js
fcomp
pop
sbb
add
mov
repz
push
scas
dec
push
add
cmpsb
and
xchg
repz
sub
ret
ds
loop
mov
or
sti
dec
pushf
scas
push
popf
sub
int
std
fisubs
cmp
es
inc
xor
out
jbe
ret
mov
push
inc
negl
pop
pop
imul
movl
call
fs
inc
sarl
movsb
add
add
inc
pop
jnp
lods
and
pop
in
jb
add
push
inc
or
add
daa
ds
stc
push
cld
inc
pop
mov
dec
dec
cwtl
pop
fs
rol
cmp
mov
mov
arpl
sbb
push
push
xor
jmp
popf
jg
dec
adc
iret
xlat
lods
add
fcoms
xchg
push
ss
sub
or
adc
pop
push
pop
incb
inc
lahf
mov
cli
scas
adc
xchg
ret
loopne
lods
add
adc
push
dec
ss
push
loope
sub
in
mov
mov
leave
and
scas
loope
pop
mov
sarb
popf
xchg
pop
in
aaa
pop
inc
xor
lods
add
pop
ds
xchg
xchg
add
sarl
push
adc
stos
out
and
pop
pop
insl
jnp
inc
sbb
jae
jae
cmp
mov
sub
call
movsb
andl
repz
xlat
cmc
inc
cltd
mov
in
push
jne
stc
idivl
call
add
fwait
cwtl
cmp
jmp
and
pshufw
push
repnz
sbb
jge
xor
push
adc
pop
sbb
stos
jno
inc
and
popl
pop
cmp
out
addr16
test
jns
movsb
mov
aas
inc
fists
mov
std
inc
pusha
das
xor
jle
movsb
divb
sbb
push
aaa
cmp
xor
mov
inc
sub
jecxz
mov
clc
shlb
pop
and
or
xor
mov
adc
mov
out
sbb
pushf
movl
lea
jae
push
pusha
pushf
movb
lea
jmp
movl
pushf
lea
jmp
adc
dec
int3
sbb
int
gs
shll
rcrl
clc
mov
xor
test
gs
jne
mov
rcll
inc
pop
jecxz
sub
or
pop
repz
fbld
push
add
mov
test
cmc
dec
dec
pushf
shrb
in
adc
scas
shrb
mov
jno
sub
xor
hlt
mov
jecxz
or
ret
cltd
sub
push
adc
loopne
cmpxchg
out
cmp
xchg
push
ret
push
stos
scas
insl
scas
jb
cld
add
out
scas
sub
test
dec
dec
bound
jg
mov
dec
push
fldenv
push
fimull
mov
movsl
adc
dec
mov
divl
fimull
lcall
add
mov
ss
movsb
jne
jecxz
adc
loop
arpl
xor
push
xchg
lds
out
dec
push
sar
mov
and
pop
dec
cmp
sub
sbb
mov
adc
cmp
cvtps2pd
xor
or
or
and
fcoms
fnstcw
insl
mov
cmp
dec
cli
cltd
std
mov
fsubl
jecxz
pop
inc
jl
das
and
adc
xor
mov
pop
push
mov
icebp
cmpb
gs
in
out
cmc
test
mov
lea
std
pop
mov
sub
mov
cmp
lods
cli
xlat
sub
lret
pop
mov
in
push
scas
inc
mov
mov
add
mov
mov
mov
leave
dec
push
test
push
jno
adc
xchg
inc
xchg
arpl
sub
icebp
bound
mov
jo
loopne
sbb
xchg
imul
test
or
or
outsb
aad
leave
sti
popf
aam
sub
movsl
fcoms
push
push
push
inc
adc
cmpsb
orl
sbb
pop
push
jne
sub
int3
sub
or
imul
inc
mov
mov
add
jmp
mov
test
lret
mov
xchg
clc
mov
in
mov
ss
gs
cmp
lcall
sbb
mov
inc
int3
out
addr16
dec
pop
xchg
mov
jae
inc
das
bound
jns
mov
bound
loop
cmp
aas
or
repz
int3
scas
jmp
mov
hlt
pushf
add
xchg
test
pop
out
xchg
sub
jns
loope
rolb
lods
rcrb
cwtl
lret
cltd
inc
sbb
popa
sbb
jge
inc
mov
dec
dec
xchg
jl
movsl
jo
clc
bound
lods
fistpll
mov
hlt
popa
add
mov
lods
dec
sub
mov
sbb
push
or
jle
pop
push
inc
and
xchg
mov
aam
adc
sub
mov
mov
pop
into
jg
pop
pop
inc
mov
cmpsb
lods
push
movl
movl
jmp
pusha
movl
movw
pushf
lea
jmp
inc
mov
test
jge
addl
sbb
mov
mov
loopne
aas
mov
stos
xor
mov
xchg
out
xlat
xchg
xchg
pop
mov
dec
loope
cmpsb
push
scas
inc
xchg
jns
lea
ljmp
cmc
xlat
popf
xchg
fstl
cmp
out
push
dec
xor
loop
inc
mov
out
pop
gs
fcoml
push
lahf
mov
repnz
fiaddl
mov
jp
and
xchg
inc
sub
test
xchg
mov
and
xor
push
mov
inc
sub
inc
adc
xchg
mov
insl
lahf
adc
inc
iret
bound
sub
add
loope
and
inc
mov
mov
neg
test
fs
pop
mov
inc
sbb
xchg
jmp
cltd
mov
xchg
dec
hlt
aad
mov
js
pushf
or
popa
popf
movzwl
les
nop
xchg
shl
dec
mov
or
cld
int
cmp
jno
and
loope
and
int
test
add
xor
pushf
add
sbb
dec
in
cld
mov
push
and
fmuls
bound
sbb
mov
out
int
xchg
add
xor
pop
and
test
sbb
clc
xchg
popl
mov
mov
repnz
hlt
add
aad
xchg
xor
cmpsl
sub
mov
mov
test
add
mov
jb
testb
jb
stos
mov
dec
rcr
fsubs
ljmp
cmp
jne
cmpsl
xchg
push
lods
adc
adcl
push
cmpsl
in
jle
add
xchg
pop
lock
or
cmpsb
sbb
addr16
push
add
daa
mov
cmp
lods
aam
dec
sub
clc
cli
cmp
xor
inc
adc
sti
dec
sbb
jp
out
cmp
sub
inc
pop
mov
inc
sub
cli
cwtl
popf
inc
mov
shll
xchg
push
in
jmp
cmp
adc
jns
cmpsb
int
pop
cmpl
js
out
cmp
dec
xchg
ja
fst
int3
out
push
lret
jns
mov
sbb
scas
cmpsb
mov
lret
cmp
and
mov
fstps
fsubr
mov
in
fbstp
mov
or
pop
xchg
jecxz
adc
lahf
ja
adc
mov
in
sub
mov
mov
cli
je
mov
xor
pop
fucomp
cmp
xchg
ja
fmulp
lock
outsl
cli
popa
int
arpl
shll
push
mov
xor
sbb
loop
push
and
and
inc
and
and
cmpsb
les
jmp
js
lret
mov
test
cmp
sub
and
cltd
adc
mov
imul
cmp
icebp
movsb
cmc
dec
ret
stos
jns
mov
or
les
adc
iret
cmp
cmp
xchg
ret
mov
mov
lock
adc
add
mov
ret
xchg
and
push
push
imul
icebp
xchg
aam
test
add
loope
sbb
addr16
stos
in
jp
sbb
and
inc
imul
adc
sub
xchg
sahf
test
int3
mov
push
cmc
ss
lods
mov
imul
mov
mov
js,pt
ss
ja
test
outsl
xor
and
fistpll
leave
jne
lods
cmc
mov
mov
les
inc
mov
fistl
pop
jns
cmpsb
xor
outsl
stos
inc
mov
ljmp
repz
jmp
aaa
jle
push
push
inc
sub
inc
push
add
call
dec
push
pop
sub
stos
sub
sub
xchg
in
clc
negl
or
iret
dec
add
into
dec
cmp
mov
out
test
outsb
push
mov
mov
mov
out
or
mov
pop
add
xchg
and
fmull
movsb
jo
mov
popf
pop
jbe
jbe
fdivs
push
xchg
repz
nop
pop
adc
push
cmp
aam
mov
pop
push
movl
movl
push
lea
jmp
jmp
movl
push
movw
lea
jmp
mov
xchg
sbb
inc
add
fsubs
xchg
out
add
and
jb
repnz
lods
mov
jp
sti
loopne
pop
mov
icebp
fdivs
xchg
cmp
ljmp
imull
and
jmp
mov
test
cmpsb
cmp
into
mov
jne
mov
das
jg
adc
xlat
incl
cwtl
scas
cmpsl
mov
xor
loope
rorb
or
fisttpl
mov
pop
mull
jmp
cmp
pop
shll
and
mov
mov
jg
rorb
xor
inc
ds
push
mov
out
push
cs
sub
aaa
xor
xor
rolb
lret
and
or
ljmp
jmp
dec
cltd
pop
in
fldl
cmpsl
in
mov
out
or
and
mov
unpckhpd
mov
cld
pop
inc
cs
push
imul
bound
push
ljmp
shrl
jns
cs
mov
in
mov
inc
xor
lods
sti
fcomps
es
mov
add
cmp
cmp
stos
mull
mov
mov
out
xor
and
adc
sub
xor
inc
dec
sbb
pop
xchg
sti
adc
jne
outsb
adc
ds
mov
xchg
mov
ret
adc
pop
lds
cmp
ljmp
xor
leave
rclb
sti
sub
xchg
es
dec
icebp
lea
ja
add
stc
int
pop
cmp
cltd
mov
mov
imul
xchg
clc
adc
push
push
inc
mov
jmp
cmp
nop
adc
outsb
jno
adc
sar
addr16
dec
mov
shl
cld
arpl
adc
lds
jmp
mov
imul
insb
xor
cmp
add
popa
pusha
adcl
test
adc
in
loopne
cli
movsb
int3
js
outsl
in
outsb
adc
inc
mov
sbb
cmc
xchg
adc
fidivrl
in
lcall
add
aad
lods
fwait
mov
mov
out
inc
push
in
daa
mov
xchg
push
test
push
cltd
popa
pop
sub
cmpb
pop
jmp
cmp
cmp
sar
pushf
xlat
mov
inc
and
mov
lahf
dec
out
add
ljmp
add
cmp
out
pop
mov
and
jmp
pop
out
inc
or
fwait
in
aas
pusha
and
mov
or
xchg
scas
std
xor
lcall
push
mov
roll
std
inc
movsl
mov
jbe
inc
jno
jg
jp
jno
mov
stc
sbbb
mov
push
pop
addb
in
lret
rcrb
scas
pop
stos
notb
lods
repnz
sti
inc
ret
pusha
push
imul
mov
lods
lahf
xchg
mov
mov
mov
ret
adc
jae
rcrl
ret
jb
inc
adc
sbb
dec
ret
jg
ja
orl
cli
out
cmp
test
cmp
and
adc
dec
lock
inc
cli
mov
pop
mov
inc
push
jb
nop
test
mov
xor
push
push
call
mov
mov
sbb
movsb
adc
pop
insb
in
or
data16
xor
push
push
test
xlat
inc
sbb
into
in
fmuls
pusha
ja
jmp
dec
jo
je
mov
adc
push
inc
sbb
push
pop
mov
lret
fs
push
aad
mov
cmp
test
xchg
int
dec
inc
mov
cmp
shrl
jmp
ss
mov
add
sub
inc
mov
out
fwait
xchg
test
jp
add
popf
out
ss
adc
jne
out
insl
push
cmp
xchg
pop
int
or
dec
sti
mov
mov
popf
pop
movl
push
lea
jae
push
pushf
mov
push
pusha
lea
jmp
pushf
mov
movl
pusha
lea
jmp
movl
jmp
movb
movl
jmp
pusha
mov
call
repnz
cld
pop
out
cltd
mov
push
sbb
inc
pop
mov
cs
int3
adc
fiaddl
adc
ffreep
push
lds
jle
fists
out
push
mov
sbb
ljmp
mov
or
dec
sti
loope
sbb
nop
adc
jns
mov
mov
mov
mov
ds
mov
bnd
xor
mov
fsubs
jbe
jp
mov
push
sti
xchg
push
jmp
adc
jp
mov
mov
loop
in
xchg
sub
mov
rolb
add
push
push
pop
jno
pop
inc
mov
bound
movl
pushf
lea
jmp
insb
data16
ljmp
xchg
sub
jae
dec
and
mov
jae
aad
sub
js
cld
mov
and
cltd
jg
jmp
adc
mov
dec
push
int
xor
inc
out
mulb
jle
cmp
popl
sbb
mov
dec
cmp
fcomip
xor
or
in
pop
fadds
cmp
pop
mov
cmp
rolb
pop
mov
xchg
imul
aaa
push
xor
mov
push
das
es
cmp
mov
adc
jbe
jne
in
test
stc
mov
fadds
xor
dec
push
rcrb
ds
jae
mov
bound
js
jbe
pop
lret
inc
mov
sub
fldenv
xchg
adc
in
xchg
cli
mov
or
cwtl
mov
test
xor
enter
sbb
mov
bound
sbb
dec
push
sbb
mov
mov
pop
rclb
cmova
ja
mov
pop
push
std
aam
outsl
dec
push
dec
pop
outsl
testl
call
jg
dec
or
cmp
pop
mov
xor
std
sbb
loopne
stos
imul
mov
dec
leave
sti
in
insb
pop
sahf
or
fstps
jg
xor
pop
sbb
or
cmp
ret
cmpsb
mov
outsb
jns
push
call
int
shlb
addb
icebp
int3
loop
shl
xchg
dec
setb
push
inc
es
add
in
jnp
mov
andb
shlb
xchg
pop
call
fisubl
jl
push
jb
adc
or
aaa
sarb
rolb
mov
push
sub
test
bound
pop
push
push
sbb
icebp
jns
inc
cmp
addr16
push
cs
test
mov
jb
rcrl
inc
pop
cli
addr16
mov
movsb
aaa
inc
pop
test
in
jmp
test
insb
sub
dec
pop
jns
pop
or
mov
inc
mov
inc
mov
inc
sub
in
mov
imull
lret
lcall
aam
das
loopne
or
jl
push
jno
cmp
cmpsl
pop
out
outsl
shrl
xchg
sti
jecxz
pop
imul
mov
sub
bound
stc
pushf
mov
cmpsl
xchg
icebp
dec
pop
xor
cltd
leave
call
xorb
dec
movsb
mov
add
test
mov
rep
add
jmp
mov
push
dec
jns
daa
push
pushf
loope
push
push
enter
jnp
gs
add
rolb
xor
ljmp
cmpsb
icebp
rorb
cmc
pop
mov
test
or
out
sub
jmp
jno
adc
add
push
sub
adc
dec
mov
adc
dec
sub
push
xor
nop
inc
inc
mov
mov
std
std
pop
leave
imul
mov
pop
popf
ret
sub
mov
test
out
or
testb
mov
or
jg
xor
push
jecxz
push
mov
mov
mov
stos
lods
mov
mov
xchg
fisubl
scas
sub
in
and
inc
mov
das
dec
inc
add
ja
mov
insb
fimull
movsl
adc
call
rcrb
int3
test
or
data16
dec
int
sbb
iret
xor
mov
mov
adc
mov
loop
imul
xchg
cltd
add
sbb
mov
nop
test
in
cmp
out
leave
icebp
mov
mov
mov
bound
pop
aas
aam
mov
mov
imul
adc
fcomi
popf
fisubl
out
rcll
stc
test
jecxz
add
in
sbb
aam
mov
fsin
mov
adc
cmp
jmp
sti
sub
aas
fsubr
jle
leave
stos
mov
cmp
mov
and
setb
arpl
stos
out
loopne
stos
lock
sub
and
loope
or
outsb
add
mov
mov
cmp
scas
pop
push
popf
pop
scas
dec
xchg
std
xor
rcll
sbb
xor
push
dec
adc
loope
lahf
pusha
jns
sarb
adc
call
adc
ja
iret
roll
sbb
mov
int
xor
test
addr16
jle
sbb
shrl
ret
sbb
or
mov
xchg
call
aad
cmpsl
xchg
mov
cmc
ljmp
jb
mov
test
sbb
push
cs
push
jno
inc
ljmp
push
sbb
das
test
cwtl
push
and
cmp
orb
jg
and
rorb
shl
mov
lret
mov
dec
ds
dec
sub
cmp
pop
lret
mull
stos
fnstsw
das
leave
fwait
jb
mov
xchg
loope
dec
inc
mov
cmp
inc
dec
cld
dec
mov
inc
lret
aaa
mov
test
clc
mov
mov
sub
ret
sub
jbe
mov
iret
lcall
int
test
popf
or
or
and
jnp,pn
mov
je
and
dec
sub
mov
in
int3
xor
adc
jmp
or
or
fisttps
mov
dec
push
std
bound
push
insl
or
ret
movsl
int3
mov
mov
rcll
sub
adcb
testl
mov
cmpsb
jp
dec
xor
sbb
push
out
sub
das
pusha
add
cmp
inc
adc
inc
pop
adc
lea
xchg
cmp
jo
pop
mov
adc
jne
sub
dec
sub
mul
and
push
insl
cmpsb
stos
je
popa
rcrl
lods
daa
mov
jmp
fwait
test
cmp
cwtl
lcall
icebp
xor
adcb
sub
mov
pop
mov
dec
filds
leave
test
pop
pushf
and
icebp
sub
cmpl
imul
lret
movsb
cli
mov
lds
aad
ja
lods
sub
or
aam
hlt
push
or
push
dec
stos
lahf
sub
ss
ret
pop
and
jmp
inc
fmulp
push
aad
mov
loopne
cli
ret
sbb
fisttps
ss
shrl
fsubrl
repz
mov
lods
lock
in
push
add
jbe
push
pop
loop
or
or
fiaddl
lds
cmp
shlb
sbbb
jb
mov
add
sahf
shlb
scas
or
pop
jmp
loope
leave
sti
sub
das
lahf
and
jle
je
inc
add
push
clc
pop
adc
push
in
ret
in
iret
aad
or
sarl
mov
adc
mov
aam
cmc
push
or
dec
sub
loopne
or
lock
mov
pushf
popa
jle
lea
and
jae
adc
clc
lods
test
lods
adc
pushf
rcrl
mov
jmp
orl
mov
in
insb
aaa
jns
pusha
and
daa
loopne
mov
scas
xchg
mov
or
inc
cmp
pushf
clc
pop
lods
std
push
jmp
mov
ljmp
jnp
push
mov
and
js
mov
or
nop
xor
fildll
mov
mov
popf
jbe,pn
jp
pop
pop
inc
xlat
mov
jl
xchg
cmp
imul
out
fwait
and
popa
or
data16
call
or
dec
out
sbb
sub
jl
ret
addr16
test
mov
mov
or
sub
inc
clc
out
iret
cmpsb
sbbb
sbb
sbb
ret
ss
mov
popa
out
mov
jle
or
add
fwait
imul
call
xor
movzwl
fwait
mov
cmpsl
mov
pop
in
cmc
sbb
insl
and
push
rolb
inc
outsl
popf
pushf
test
cmp
fsubl
pushf
rolb
ds
sub
and
lds
sub
or
les
test
in
dec
std
jg
xchg
mov
pop
rcl
dec
lahf
sbb
xor
int
jg
push
fldcw
sub
fbld
jge
mov
lods
add
sahf
sbb
inc
mov
push
divl
push
cmp
adc
push
fldcw
and
xlat
push
fisttpl
cmpsl
mov
sub
movsl
cli
cmpsl
jecxz
stos
xor
shll
push
inc
lock
jg
clc
dec
clc
cmp
adc
add
xorl
push
push
add
int
aaa
push
jb
inc
mov
imul
iret
sti
jmp
or
movsl
xor
outsb
sub
inc
dec
sbb
sbb
dec
call
int3
shrl
std
pop
out
push
inc
fs
jp
xlat
fldl2t
negb
push
addr16
call
mov
pop
jns
cltd
ja
add
ljmp
mov
inc
jb
and
or
lahf
dec
cmc
sbb
inc
mov
fwait
push
push
push
lea
jmp
pop
jo,pn
fsubl
push
mov
ljmp
xchg
bound
cs
mov
cmp
dec
push
arpl
jge
cmp
icebp
cwtl
cwtl
mov
movb
mov
mov
loop
in
sbb
pop
xchg
fiadds
insb
push
ficompl
aaa
or
repz
shll
rorl
lods
dec
or
in
js
les
scas
cli
mov
mov
pop
mov
mov
call
shlb
mov
in
or
push
jns
pusha
push
push
loop
shrb
cmc
mov
or
and
test
pop
hlt
sti
or
xchg
pop
jp
repnz
outsb
push
xchg
push
jno
dec
rolb
clc
stos
lds
shl
lods
lea
pop
ret
add
insl
mov
jl
pop
mov
push
scas
scas
test
rolb
pusha
shll
test
inc
mov
lahf
dec
inc
stos
sub
mov
out
out
lods
push
inc
mov
sub
gs
cmp
jmp
sub
cmp
ljmp
xorb
loop
push
cmc
push
fsubs
xor
xor
mov
sbb
in
cmc
adc
mov
pop
pop
inc
add
cwtl
cmpsl
inc
mov
sub
cmpsl
shr
jns
std
mov
add
dec
jmp
fistl
dec
lcall
stc
leave
dec
stc
xor
sub
icebp
arpl
out
cmp
cmp
xor
adc
pop
ret
add
xor
push
lods
test
ret
and
cwtl
insb
cwtl
gs
bound
ja
lods
and
pop
stos
push
cmpsl
inc
mov
in
movsl
push
xchg
pop
je
fs
shll
movsb
adc
mov
mov
gs
movsl
sahf
push
out
pushf
repnz
jmp
cmp
jge
ss
dec
add
xor
push
jo
stos
push
inc
mov
sbb
movsb
test
mov
or
mov
std
xor
in
call
in
dec
cmpsl
jge
imul
adc
ss
in
ss
cwtl
xor
xor
or
outsl
push
inc
adc
xchg
fiaddl
fcompl
xchg
test
iret
in
imul
xor
xor
inc
mov
mov
das
cmp
shll
loope
loope
mov
jns
xchg
jno
int3
jbe
xchg
add
imul
and
sbbb
mov
mov
decl
jmp
inc
aam
sbb
add
mov
pop
jl
or
and
repnz
cwtl
jl
shrb
xchg
in
sti
mov
pusha
inc
stos
in
inc
shlb
ss
jnp
mov
mov
pusha
movl
mov
lea
jmp
popa
push
or
sub
adc
adc
mov
insl
sub
hlt
rorb
dec
pop
test
cld
fdivl
std
mov
mov
fidivrs
dec
cmpsb
adc
dec
and
mov
mov
xchg
inc
mov
in
icebp
push
in
sub
lret
or
mov
cltd
fistpll
cmp
push
jno
xorb
mov
or
ucomiss
mov
cmp
rorl
imul
push
das
dec
sub
test
mov
mov
aad
fiadds
cmpsb
mov
and
lret
xchg
popa
scas
dec
add
xchg
scas
fsubrl
lret
ljmp
sub
aad
in
shrb
negb
push
push
shrb
ja
pop
add
inc
test
mov
fcmovne
pop
mov
xor
push
outsb
loop
pop
jl
jns
js
test
jo
or
push
pop
adc
aam
lods
jmp
pop
lret
int3
sub
xor
mov
arpl
popa
pop
sbb
cmp
ret
mov
jmp
push
rcl
jle
and
mov
jg
mov
fs
mov
cmp
and
in
outsl
cmp
pop
push
jns
and
cwtl
rcrb
adc
xor
xor
and
call
std
pop
movsb
push
or
ja
push
cmp
push
dec
and
call
in
push
mov
leave
in
popa
jmp
add
inc
inc
je
jae
xor
push
outsl
cmpsl
roll
inc
and
jnp
aas
popa
rolb
add
fadd
lds
mov
or
mov
adc
xor
jp
cli
mov
cmpsl
add
push
inc
adc
cmc
insb
adc
pop
or
mov
nop
fidivrl
jmp
lea
dec
test
fsubrs
arpl
ds
lcall
pop
cmp
mov
mov
orb
int3
jns
stos
and
inc
pop
int
sar
shl
out
mov
mov
push
js
outsl
les
sarl
call
mov
sarb
ror
aad
in
aad
add
push
jno
sbb
adc
cmpsl
mov
sahf
xor
cltd
cmp
subb
ds
jb
jmp
cmp
testl
dec
das
cmp
pop
sbb
inc
pop
mov
stc
movsb
andl
ret
notl
sub
and
xchg
nop
imull
fsubrl
ja
in
dec
imul
mov
imul
jmp
inc
mov
out
loopne,pn
and
sub
push
clc
js
fmull
push
adc
mov
mov
mov
rol
cld
or
fnstsw
les
cwtl
and
fdivrs
ss
pop
jmp
loope
mov
lret
xlat
xchg
cmp
cwtl
mov
inc
dec
push
in
mov
lret
inc
cs
loop
clc
movsl
ljmp
jne
mov
jbe
add
mov
test
pushf
adc
ja
lods
rol
sub
mov
orb
shlb
xor
inc
cltd
enter
ljmp
mov
mov
xchg
pop
stos
or
push
add
sbb
rolb
stos
mov
aaa
adc
inc
push
lcall
aam
rolb
dec
push
or
mov
push
mull
lods
shlb
xlat
fs
loope
lds
mov
jbe
repz
add
es
lock
or
ds
xchg
pop
sar
inc
mov
js
and
loope
xor
jbe
mov
cwtl
cmp
cmp
cmc
leave
xor
jl
andb
movsl
out
shrb
dec
cmp
pop
enter
push
movsb
dec
mov
and
test
xlat
xor
xor
movsl
adc
xor
pop
add
je
add
and
out
test
ss
or
mov
add
adc
xchg
mov
push
pusha
movl
push
mov
push
mov
lea
jmp
jmp
movl
push
lea
jmp
call
or
andb
sub
fcompl
and
addr16
inc
add
inc
not
int3
adc
jae
or
aaa
lret
aas
jo
push
lahf
xor
push
add
mov
and
ffree
lret
ds
sub
lret
mov
inc
mov
call
xor
pusha
movl
pushf
call
and
jl
shr
out
xchg
notl
stc
mov
dec
ret
inc
lock
mov
jns
mov
and
adc
es
xor
icebp
stos
dec
in
lock
fsts
jecxz
popl
fwait
sub
lea
and
jb
add
fistpll
push
jnp
jmp
outsb
lret
jne
loope
push
mov
jmp
cltd
pusha
pusha
movl
jmp
mov
push
movl
pushf
push
lea
jmp
push
jmp
mov
in
pop
inc
lret
iret
cmp
sahf
and
push
push
dec
sbb
scas
push
and
inc
fwait
andb
mov
jge
push
insl
sarl
sbb
sti
cld
push
xchg
clc
mov
xchg
fwait
or
icebp
clc
andl
outsl
into
mov
imul
sub
push
stos
inc
mov
fadd
jae
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
iret
addr16
cmp
inc
mov
gs
loop
je
mov
dec
je
and
jne
dec
pop
dec
xchg
sub
mov
cli
pop
jmp
nop
testl
mov
jg
pop
sub
cltd
out
pop
dec
sub
and
and
xor
imul
cli
or
sub
pop
shll
pop
jmp
fcomip
hlt
jle
mov
subb
cs
xchg
or
pop
cmpsb
lods
cmp
push
adc
xchg
outsb
frstor
aas
cs
push
dec
dec
lret
or
xor
lds
or
pop
pop
cmpsl
scas
cmp
ja
mov
xor
inc
int
repz
ja
sarb
fstps
mov
in
xor
aam
mov
mov
sbbl
decb
push
aaa
pop
mov
fbstp
ret
lock
xor
daa
out
adc
jb
dec
loopne
dec
outsl
and
loopne
cmp
jne
pusha
in
sbb
lock
dec
cwtl
leave
test
mov
xchg
jne
call
adc
mov
notl
dec
ffreep
out
dec
mov
out
add
lret
add
and
pop
mov
neg
fimull
inc
stos
pushf
push
xchg
adc
pushf
jno
adc
jo
cltd
std
std
ret
popa
pop
imul
or
lcall
jecxz
add
adc
push
lret
je
leave
dec
xchg
pop
pop
cld
test
ffreep
mov
pop
movsb
xchg
jno
cld
pop
rol
xchg
push
inc
adc
dec
xchg
jb
es
jb
jle
loopne
lock
dec
ljmp
cltd
or
jge
dec
push
xor
jp
sbbl
cmpsb
and
inc
daa
lock
dec
ret
cmp
lret
xchg
sub
out
fdivl
inc
out
test
jns
mov
repnz
jmp
pop
out
push
jg
clc
push
and
imul
mov
loopne
fwait
sbb
xchg
mov
psrad
rcll
stc
test
das
dec
pop
mov
add
pop
loop
pushf
cmp
sub
lea
mov
icebp
pop
xchg
call
fimuls
ja
and
jnp
in
mov
pop
jb
mov
sub
add
push
sub
sub
inc
ds
testb
xchg
pusha
mov
jnp
and
lcall
hlt
mov
pop
sbb
js
mov
aas
mov
leave
jge
push
lods
aas
ds
jbe
dec
decb
ffree
lods
jno
mov
dec
stos
mov
dec
mov
into
mov
lret
andl
ret
aam
xchg
in
je
hlt
inc
inc
fmulp
add
dec
movsl
push
inc
jns
pop
push
xchg
sahf
call
inc
arpl
ss
in
sub
rcrb
dec
sahf
stos
and
jbe
test
mov
popf
cwtl
ret
jae
lahf
dec
pop
inc
imul
lret
and
fst
xchg
inc
xchg
xchg
js
pop
stos
push
cmpsb
mov
or
bound
mov
sahf
xchg
int
mov
or
jne
adc
insb
imul
sub
pop
xor
leave
jg
jg
stos
or
loop
cld
imul
icebp
or
js
js
pop
inc
loope
or
int
sahf
ds
movsb
roll
test
les
testl
imull
test
push
in
rorl
enter
jne
mov
gs
xor
int3
xchg
rclb
mov
cwtl
and
inc
fildl
sbbb
xchg
mov
mov
mov
fs
lods
test
mov
pop
adc
adc
ja
int
mov
fcmovu
in
popa
faddp
aaa
js
inc
aaa
les
int
je
mov
test
xor
push
xchg
daa
and
call
jp
mov
dec
adc
mov
pop
mov
jge
cmp
icebp
xor
lea
popf
lret
test
scas
xchg
leave
adc
sbb
shlb
js
mov
xor
dec
push
sbb
jae
adcb
imul
popa
lds
repz
sbb
dec
rclb
outsb
mov
xlat
jbe,pn
sbb
or
or
mov
xlat
cmpsb
xchg
js
enter
sbb
ja
sub
mov
lods
sbbb
fwait
xor
imul
lret
lret
xchg
les
jle
scas
dec
std
and
jb
fdivs
lds
out
sub
cltd
push
sub
sar
mov
push
rorb
out
ret
mov
xchg
push
stos
sbb
mov
lcall
ret
rcr
cmc
js
and
int
ja
sti
call
mov
imul
ljmp
cmp
lahf
jp
add
pop
mov
popf
test
ret
and
ds
push
jecxz
and
mov
xchg
daa
xchg
jbe
mov
sub
out
mov
mulb
scas
xchg
xchg
sbb
js
popa
mov
jmp
and
jno
add
mov
sbb
dec
push
inc
jmp
insb
or
cmp
push
and
insl
xor
imul
mov
int
jne
movsb
and
sub
ds
aaa
mov
sbb
sbb
adc
test
adc
xor
mov
test
sbb
or
jo
mov
dec
je
aad
test
sahf
cmp
loope
xor
pushl
cmp
pop
in
push
cltd
mov
xor
sbb
inc
jne
mov
adc
orb
pushf
dec
and
push
push
sbb
jo
mov
ret
test
scas
inc
mov
xchg
imul
sbb
sbb
mov
mov
lahf
xor
inc
adc
rcrl
fcoms
dec
dec
shll
int
and
orl
incb
mov
push
stos
dec
ss
cwtl
adc
outsb
pop
xchg
mov
or
sarl
pushf
not
scas
out
or
inc
sbb
jmp
loope
out
adc
xchg
js
lods
stos
dec
cltd
sub
fdivl
fidivl
cwtl
lds
idiv
inc
aas
jbe
popa
cwtl
mov
mov
pop
cmpsl
popa
xchg
out
fsub
and
repnz
dec
pusha
dec
mov
add
push
xor
out
lret
and
and
sbb
ss
mov
sbbl
pop
lods
jmp
test
lea
dec
rcl
test
dec
loope
mov
pop
sbb
push
insl
clc
sub
je
jecxz,pn
mov
mov
idivb
sub
jmp
imul
add
pop
adc
std
add
sahf
xchg
popf
pusha
out
and
jle
cmp
xchg
push
cs
xchg
jp
pusha
inc
int3
aam
repz
in
popl
loopne
pop
sbb
into
leave
inc
rcrb
in
mov
loop
hlt
mov
pop
repnz
xchg
in
filds
rep
mov
mov
loopne
and
negb
jbe
aad
add
int
and
mov
outsl
cmc
jecxz
cmpsb
call
inc
jnp
dec
and
mov
inc
pop
int3
add
std
inc
sti
mov
int
out
loopne
test
push
out
cmc
aad
loopne
scas
jge
or
inc
rorb
in
cmpsl
push
adc
pop
aas
xor
xor
push
dec
or
push
mov
das
jl
cwtl
repnz
dec
decb
nop
test
pop
pop
mov
pop
pop
aaa
push
dec
int
mov
sub
lods
arpl
jle
pop
mov
imul
in
mov
pop
dec
sbb
cli
sub
lcall
sub
in
lea
push
test
mov
mov
jmp
test
fdivp
popl
dec
sbb
cs
pop
fsubs
cmp
imul
push
ret
sub
jmp
outsl
sbb
adc
mov
repz
jns
test
lcall
dec
fs
nop
push
jl
mov
mov
cmp
inc
jno
jns
add
jmp
mov
aad
push
adc
pushf
pusha
pop
in
negb
in
mov
mov
int3
pop
lret
mov
inc
cmpsl
jecxz
mov
adc
lods
cmp
mov
iret
adc
lret
das
and
pop
in
lret
sbb
jb
popf
xchg
leave
ret
mov
jnp
dec
sbb
sbb
lods
inc
xchg
push
jb
loopne
xor
jecxz
jle
jb
xor
push
ret
and
and
push
fcomp
adc
hlt
jo
mov
stos
or
dec
push
call
adc
and
jg
stos
and
sub
adc
mov
mov
mov
int3
scas
jae
and
xor
insb
xchg
sti
insl
addr16
push
xor
cmp
movsl
sub
lea
mov
fisubs
fisubrs
sub
lret
pop
fldt
insl
jb
fs
jno
and
xchg
xchg
mov
pop
mov
xor
scas
sbb
shll
cmp
in
inc
adc
and
movsl
jno
sbb
mov
xchg
jecxz
push
push
mov
icebp
push
ret
xor
xor
push
and
push
mov
cwtl
pop
rol
in
outsl
mov
mov
enter
xchg
mov
into
adc
dec
xor
in
lcall
or
xor
xchg
les
out
jle
dec
gs
jnp
xor
popa
jmp
out
xor
scas
mov
subl
data16
xchg
in
into
mov
and
idiv
rcl
repz
push
sbb
shll
ror
outsb
inc
mov
pop
ret
fdivr
fcmovbe
test
test
test
jg
mov
dec
jl
lods
pop
int
sbb
inc
adc
bound
hlt
mov
jno
loope
lods
mov
mov
aad
imul
shll
mov
or
mov
clc
mov
imul
sbb
popl
jne
cmovnp
leave
and
dec
in
and
daa
stc
mov
hlt
jbe
sub
sub
and
dec
push
shlb
and
pop
inc
in
dec
jge
insl
mov
xchg
and
cmp
das
scas
sub
es
lds
jge
mov
adc
pushf
and
and
fwait
sbb
xchg
inc
test
adc
pop
outsl
pop
ficoms
xchg
push
and
dec
cmp
add
and
int3
mov
add
add
add
cmp
and
mov
and
or
add
call
mov
add
jb
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
and
jo
and
test
and
movsb
mov
add
add
and
jo
and
test
and
movsb
mov
add
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
mov
add
mov
add
add
add
mov
add
pusha
add
pusha
add
pusha
add
lahf
push
add
add
push
push
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
push
mov
call
mov
jmp
mov
pop
ret
inc
adc
mov
mov
test
jne
xor
test
je
cmpb
je
dec
ret
test
jne
xor
cmpb
or
inc
ret
test
sbb
aaa
mov
cmp
jne
or
je
cmp
jne
or
je
shr
xor
ja
push
inc
adc
add
add
add
or
jne
inc
jl
sbb
shl
pusha
adc
inc
ds
adc
add
aas
adc
inc
inc
sub
jecxz
ret
adc
add
push
adc
inc
adc
adc
inc
push
adc
jmp
inc
mov
inc
es
inc
cld
pusha
mov
ret
push
add
lcall
sbb
call
add
mov
push
push
push
add
or
shlb
mov
push
jno
mov
add
sbb
inc
hlt
mov
test
je
push
pusha
adc
dec
inc
inc
and
cmp
adc
inc
test
mov
mov
sub
add
mov
jne
jno
lock
imul
add
cmp
xorl
inc
in
mov
sub
in
add
test
es
jmp
out
mov
push
clc
mov
pushl
xor
push
push
pusha
pop
adc
je
adcb
push
adc
add
add
mov
mov
mov
inc
es
pusha
aaa
adc
jne
mov
adc
sub
mov
push
mov
jb
je
add
push
pushl
mov
adc
sub
add
gs
pusha
pop
pusha
xor
inc
and
jb
loop
adc
daa
nop
add
push
add
adc
and
sub
adc
fcmovnb
or
sub
adc
inc
inc
adc
mov
pop
adc
jae
add
add
sub
push
adc
push
adc
inc
clc
loopne
adc
push
xchg
and
sub
jae
mov
sub
or
adc
push
dec
je
imul
jmp
ret
test
jne
xor
mov
movaps
pusha
cmpsl
sbb
jge
mov
or
inc
xchg
sbb
insl
cld
fistpll
fldcw
inc
push
mov
and
es
add
push
inc
mov
mov
xor
mov
stos
mov
mov
leave
push
lea
mov
pop
inc
push
push
mov
push
cmp
jg
and
sbb
push
mov
dec
jns
sbbl
test
pop
pop
cmp
jl
push
pop
shl
add
mov
add
mov
mov
inc
in
cmp
jne
cmp
sbb
pop
in
mov
mov
pusha
dec
adc
cmp
sbb
mov
mov
mov
pusha
dec
adc
bound
inc
lcall
or
cmp
adc
cli
adc
inc
cli
adc
add
adc
cmpl
in
inc
add
out
add
inc
add
ja
add
inc
add
adc
inc
cld
fstpl
fldl
faddl
fstpl
fldl
pusha
dec
adc
shlb
pop
adc
add
cmp
add
es
add
adc
inc
adc
loopne
inc
loopne
adc
mov
in
add
mov
fstp
mov
fstpt
adc
fldl
es
pusha
sub
push
and
inc
lea
gs
addb
pop
movsb
sbb
mov
mov
movl
movl
inc
pop
sbb
sti
je
mov
rep
mov
inc
inc
loopne
out
inc
xor
hlt
fdivrs
dec
adc
clc
add
push
adc
pusha
call
clc
inc
mov
stos
add
pop
pop
mov
rep
pop
mov
sarb
inc
inc
str
test
inc
and
push
push
push
or
lds
roll
pusha
adc
adc
inc
aaa
adc
sbb
test
adc
int
movl
pusha
push
cmp
add
cmpsl
inc
jae
cmp
add
adc
sub
push
add
dec
add
fildl
inc
mov
add
xlat
out
lret
es
inc
sbb
fmull
fcomp
inc
faddl
add
fsubrs
cmpl
xchg
push
add
jle
adc
lahf
adc
data16
adc
inc
add
jp
sbbb
add
pop
add
cld
popa
dec
adc
add
and
cs
add
aas
dec
add
adc
and
cmp
push
adc
icebp
add
fwait
add
push
pop
mov
sub
jge
lret
pushf
xchg
fs
xchg
inc
sbb
jnp
sbbb
mov
mov
push
dec
add
aam
call
jge
cs
add
inc
dec
adc
pop
mov
mov
push
adc
sub
cmpl
dec
add
pusha
dec
adc
dec
adc
push
adc
cmpl
dec
add
or
dec
adc
pushf
fildl
fstpl
fldl
fildl
fstpl
faddl
fildl
fstpl
faddl
fildl
fstpl
faddl
popf
je
add
insb
pusha
adc
test
adc
movsl
pusha
push
sbb
test
je
fchs
fcompl
push
adc
test
lahf
and
add
int3
or
aaa
xor
and
adc
adc
mov
add
pusha
rcll
add
hlt
add
mov
sarl
pusha
or
dec
sub
jno
adc
adc
sub
mov
pushl
sub
and
test
adc
pop
adc
adc
inc
push
push
repz
pop
pop
pop
ret
pop
push
dec
jne
jmp
xchg
aam
or
inc
adc
sub
adc
ja
mov
imul
inc
lock
outsb
adc
movsl
clc
daa
out
adc
test
adc
mov
xor
adc
adc
sub
inc
jg
dec
je
mov
add
push
inc
xchg
adc
push
push
mov
xchg
inc
dec
adc
sub
xchg
sub
adc
and
push
iret
sbb
and
sub
add
mov
jno
adc
mov
in
mov
sbb
je
dec
jmp
mov
push
sub
inc
xor
adc
mov
and
pop
pusha
dec
fs
xor
add
adc
cmp
outsl
jns
insl
add
inc
repnz
mov
mov
bound
ret
mov
test
jp
je
mov
mov
mov
add
xor
xor
push
pop
add
test
je
test
ret
push
in
sbb
inc
jg
cmp
push
add
je
jmp
lea
sub
ret
lea
addb
cld
inc
add
push
adc
and
inc
lods
popa
sub
lea
mov
add
push
inc
xchg
adc
imul
out
clc
aas
add
add
sbb
pop
lea
push
lea
mov
adc
rep
dec
jne
movb
push
mov
add
push
jmp
mov
pusha
pushf
lea
inc
add
pop
test
mov
shrd
mov
pushf
pushl
popf
pushl
movb
pushf
loopne
adc
adc
and
inc
sbb
flds
pusha
sbb
adc
sub
and
pushf
pushf
push
inc
push
adc
sbbb
divl
mov
dec
adc
inc
int
loop
pushf
pushf
popl
inc
or
mov
mov
pushf
inc
inc
sbb
xor
adc
push
loopne
adc
cmp
sbb
pushf
pushf
movw
pusha
dec
inc
push
sbb
and
movb
inc
js
sub
xor
cmp
push
push
in
add
add
inc
sub
icebp
jl
inc
adc
and
push
push
lock
mov
pushf
push
pusha
dec
adc
lret
add
test
daa
mov
in
ja
and
inc
movlps
xor
inc
add
add
xor
inc
adc
mov
inc
outsl
adc
call
add
inc
push
adc
ljmp
sbb
test
test
bt
add
pushf
cmp
sub
cmp
mov
test
inc
xor
xor
popl
mov
out
add
pushf
pushf
inc
adc
inc
sbb
sub
les
sub
subb
adc
pusha
fchs
pushf
push
and
inc
bsf
shld
add
shr
shl
or
mov
shl
xor
bts
lea
inc
or
ljmp
daa
or
adc
cmc
sub
cmp
mov
mov
adcb
andb
mov
lods
inc
pop
adc
addb
repnz
adc
adc
inc
or
and
mov
cs
popa
outsl
popa
or
add
mov
add
pusha
dec
inc
dec
fs
add
out
inc
dec
adc
add
mov
xchg
shl
stc
sub
bsr
cmp
shl
pushf
xor
pushf
inc
add
fisubl
mov
bsf
and
inc
popf
adc
pusha
add
mov
mov
inc
aad
lea
mov
popa
lea
sub
cmp
xor
inc
adc
adc
sti
mov
shr
mov
std
shrb
loope
rolb
rcll
add
pop
insb
and
pushf
adc
sarl
daa
incb
inc
sub
adc
or
push
inc
push
adc
mov
adc
inc
lea
mov
jg
inc
add
test
pop
mov
les
jle
add
cmc
cbtw
push
cmp
cwtl
test
test
bt
inc
repz
mov
pusha
pusha
pusha
popa
fcoms
test
mov
adc
lret
add
addl
rorb
add
mov
cmc
push
stc
inc
repz
sub
or
mov
xor
push
es
jp
sahf
inc
adcl
add
sbb
xchg
cmp
inc
push
adc
xchg
adc
ficoml
and
sbbb
and
mov
pushf
mov
daa
pusha
testl
mov
addb
mov
pusha
xor
les
popa
fwait
adc
shld
adc
shlb
push
mov
shl
sub
adc
sub
inc
add
dec
stc
cmc
ror
stc
bound
inc
fstl
mov
pop
add
btr
add
mov
rol
not
not
setno
pushf
dec
pushf
dec
pusha
bound
xchg
or
sub
xlat
adc
jne
je
add
je
push
and
popa
iret
adc
jnp
adc
rcrb
adc
mov
xor
inc
adc
mov
sbb
rorb
popa
setp
inc
sub
adc
push
push
mov
adc
dec
popa
jns
push
mov
pusha
jmp
fiadds
add
lea
and
popa
xchg
adc
pop
adc
adc
dec
adc
es
and
inc
adcb
inc
sub
pop
shl
shl
xor
add
movzbw
inc
mov
mov
in
push
inc
adc
loopne
or
fs
add
not
movzbl
lea
lea
mov
xchg
inc
sub
lods
adc
rolb
scas
adc
stc
inc
or
fsts
add
loope
dec
add
cmc
push
fs
adc
inc
or
add
push
pusha
fcompl
pusha
push
xorl
adc
and
adc
popf
pusha
push
ret
fstps
test
loopne
lock
rolb
adc
arpl
inc
jmp
mov
mulb
adc
jecxz
mov
pusha
cmp
mov
inc
lret
pop
mov
inc
dec
adc
or
fs
adc
bound
gs
lock
add
or
test
pop
add
mov
push
pusha
push
aad
ljmp
sbb
pusha
adc
sub
mov
aad
rcl
mov
push
arpl
fistl
cmc
inc
popa
mov
movsb
mov
mov
jne
out
adc
mov
push
mov
push
add
adc
push
popa
xor
push
stc
test
inc
pop
inc
mov
pusha
and
sbbl
test
sbb
sub
add
not
popa
adcb
inc
add
in
stos
bound
jno
bound
int3
ror
test
inc
cmp
inc
add
cmc
inc
mov
push
cmc
arpl
adc
xchg
dec
adc
fs
mov
adc
adc
inc
inc
push
cmc
ror
xor
inc
rolb
dec
xchg
adc
mov
ficoml
cmpl
sub
out
push
inc
add
lea
and
rdtsc
shld
inc
xor
cmc
inc
outsl
adc
or
adc
xor
inc
or
shll
inc
and
cli
mov
inc
jns
mov
ja
pusha
mov
adc
in
pop
sar
bsr
add
adc
rorb
inc
and
popa
or
mov
sub
jecxz
adc
and
add
mov
mov
and
inc
outsb
bound
mov
add
aad
inc
or
dec
bsf
notb
sar
not
setb
fadds
adc
push
pop
test
xor
lea
dec
sub
mov
adc
mov
sbb
adc
or
jmp
ret
mov
pusha
jne
dec
push
bound
push
push
popa
cld
mov
jnp
or
inc
inc
adc
daa
adc
movsb
inc
mov
jno
mov
clc
pusha
test
xor
popa
inc
add
out
push
aad
fadds
push
jnp
pusha
ret
popa
data16
bound
mov
adc
adc
dec
jne
push
inc
or
jmp
sbb
pop
adc
cmc
inc
jg
add
and
xchg
bound
ss
jmp
adc
jo
pushf
inc
adc
push
addr16
adc
jo
sub
cmp
shlw
mov
aaa
bsr
out
adc
ret
test
add
out
bswap
inc
dec
arpl
add
out
inc
lea
cmc
test
cmp
test
mov
test
sub
pushf
mov
dec
xor
mov
pushf
inc
xchg
adc
pusha
inc
jns
stc
stc
add
test
lds
leave
pop
jae
das
cs
push
pusha
xchg
adc
and
sub
sub
xchg
inc
pusha
mov
xchg
dec
adc
pushf
inc
lock
and
mov
inc
push
inc
adc
or
inc
movups
xor
adc
andb
enter
decb
sbb
int
rcl
lea
rcr
inc
daa
adc
cmp
push
inc
or
out
mov
xadd
ror
not
sbb
mov
adc
shrd
inc
frstor
sbb
pushf
bt
clc
ror
pusha
pop
pop
bt
pushf
sub
cmp
stc
dec
call
testb
push
push
ret
push
pusha
xchg
pusha
push
adc
fsubs
adc
clc
push
xor
inc
or
test
arpl
adc
notl
pop
and
cmp
inc
int3
adc
cmp
ficoms
add
pusha
ret
jne
shld
xorb
movzbl
movsbl
pop
pusha
inc
popa
es
sub
pushf
bound
adc
sbb
ret
ror
xor
adc
lret
aam
mov
shl
setns
mov
cmp
pusha
not
push
add
std
mov
sub
pusha
push
pop
xor
mov
inc
sbb
add
mov
push
data16
jg
and
test
or
add
cwtl
leave
mov
bound
sub
pusha
movsb
sbb
ret
cmc
xor
sbb
inc
cltd
sbb
ret
adc
sub
rcrb
popf
ficoms
xor
adc
xchg
xor
xchg
add
push
push
and
inc
mov
xor
sbb
push
nop
pushf
push
inc
sbb
cmpsb
fs
xchg
sub
push
inc
mov
sarb
mov
ret
xor
lea
fwait
xchg
adc
add
fcoml
icebp
pop
lock
lret
xor
ret
sti
arpl
mov
mov
add
loopne
pop
pusha
xor
sbb
je
mov
add
rep
dec
jne
adcb
in
sub
adc
test
and
sub
nop
data16
mov
sub
enter
push
scas
in
adc
cld
sub
adc
cld
cmpl
lcall
in
dec
dec
pop
adc
lea
push
adc
test
in
mov
call
pushl
sub
pop
mov
call
daa
mov
icebp
jo
inc
aas
adc
je
inc
out
fcoml
xchg
adc
adc
sarb
add
lea
adc
adc
clc
xor
adc
mov
es
pop
shlb
push
xor
adc
in
inc
sub
mov
jno
push
mov
daa
mov
daa
sti
pop
adc
nop
sub
scas
out
adc
popl
inc
xor
jecxz
mov
inc
sbb
xchg
xor
jne
push
push
test
xchg
add
jne
loopne
or
adc
mov
jnp
adc
sbb
adc
pop
out
out
add
loopne
push
add
loopne
push
add
pop
das
int
adc
mov
sub
faddl
sub
add
fmuls
add
fdivrs
fldl
adc
loop
fldl
adc
adc
les
and
add
xchg
cmp
and
add
adc
add
fldl
adc
adc
or
adc
adc
xor
sahf
cmp
add
sub
add
or
adc
add
cltd
add
add
jl
ja
adc
or
and
add
xchg
aam
fldl
adc
xor
pop
cmp
add
lahf
sub
add
or
add
fldl
adc
add
roll
adc
mov
mov
pop
data16
sbb
jno
cmpsl
inc
and
mov
sbb
jnp
adc
jae
das
mov
pusha
loopne
scas
sub
push
jg
adc
out
push
xchg
add
jge
adc
and
adc
and
adc
push
xor
dec
and
and
cs
sbb
xchg
adc
sub
pop
adc
imul
aas
data16
add
mov
fildl
fldl
mov
mov
mov
fcomp
add
jmp
fldl
imul
xchg
add
cltd
imul
mov
adc
pop
cmp
push
mov
lea
imul
inc
enter
sub
lock
mov
sub
add
sub
sbb
inc
xor
cltd
lcall
add
fistl
push
xor
add
lret
movl
lcall
adc
cwtl
xor
or
adc
inc
or
cmp
jp
cmpl
pop
adc
mov
push
push
add
adc
cmp
adc
bound
adc
lret
das
inc
inc
adc
inc
clc
and
rcrl
gs
pop
aam
inc
aam
rcll
loope
pusha
cmp
fldl
roll
fwait
sub
fsts
enter
bound
inc
cltd
adc
jnp
and
sub
movsl
add
fwait
je
dec
or
adc
pop
fwait
stos
and
mov
sub
add
cmp
adc
pop
add
pop
add
shrb
pop
add
fsubrl
add
push
adc
jl
test
inc
or
cmp
int3
sub
ret
xor
int3
jg
adc
shrb
add
lds
pop
add
shrb
add
inc
cmp
pop
xor
jge,pt
inc
mov
pop
add
jae
mov
adc
jg
cmpb
add
popf
loopne
enter
push
cmp
add
adc
inc
mov
iret
sti
mov
inc
in
cmp
fsubl
inc
xor
add
fldl
lds
add
sahf
bound
addl
add
adc
add
sahf
mov
dec
add
sub
sub
enter
popa
cmp
add
dec
adc
incb
cmp
adc
adc
addl
add
cs
aaa
fldl
adc
adc
add
cmp
test
sub
adc
adc
and
daa
inc
incl
fadd
adcl
lret
loopne
aad
or
adc
inc
mov
orb
add
aam
push
inc
test
in
inc
arpl
fmull
inc
pop
and
mov
adc
adc
pop
jns
adc
orl
push
adc
push
or
or
adc
aas
inc
xchg
xor
adc
daa
les
insb
movsb
add
les
adc
push
adc
adc
adc
mov
adc
cmp
mov
adc
add
mov
aas
mov
adc
add
mov
adc
daa
xor
and
and
cmp
adc
adc
movsb
mov
aad
dec
add
xor
fiadds
and
adc
add
add
sub
adc
mov
adc
add
xor
jmp
insl
cmp
jmp
add
fisttpll
sub
dec
fisttpll
fisttpll
fisttpll
xor
pop
xor
or
sub
or
cmp
or
and
add
test
adc
or
iret
add
test
or
fisttpll
cmp
or
mov
add
fisttpll
pop
add
stos
push
add
fisttpll
or
enter
and
or
add
xchg
or
lods
inc
xor
add
fisttpll
fldl
adc
adc
enter
add
fisttpll
add
dec
add
lods
mov
addl
fisttpll
fldl
adc
add
or
adc
or
fisttpll
cmp
dec
add
rolb
and
push
adc
mov
call
aaa
fisttpll
adc
mov
call
add
mov
adc
or
fisttpll
cmp
sbb
and
adc
adc
or
dec
add
mov
add
dec
add
mov
add
fisttpll
fisttpll
fisttpll
add
or
add
inc
or
mov
mov
mov
call
sub
pop
int3
adc
cmpl
cmp
daa
es
pop
adc
add
and
and
add
and
xor
rolb
adc
add
movl
inc
inc
adc
push
adc
inc
or
bound
xor
cmp
push
adc
pop
mov
sbb
and
sub
and
movl
mov
add
mov
adc
inc
cltd
inc
test
orb
js
adc
and
xor
adc
cmp
and
and
pop
ret
jecxz
add
hlt
add
cs
push
adc
shlb
and
and
sub
cmp
add
and
adc
sub
adc
inc
add
add
xor
add
add
add
cmp
adc
js
es
adc
nop
sahf
sub
sub
inc
adc
je
and
adc
sub
add
clc
xorb
repz
sub
add
adc
mov
mov
adc
add
add
or
sub
bound
movsl
pop
adc
or
daa
sbb
adc
cs
mov
das
sbb
pop
shrl
add
cld
add
adc
cs
add
add
cmc
add
imul
adc
cs
add
mov
faddl
adc
add
inc
adc
push
popa
aad
clc
adc
push
and
sub
sbb
adc
sub
add
and
adc
push
and
adc
add
adc
add
add
and
adc
inc
and
adc
add
adc
cmp
and
add
add
add
jg
lods
daa
jg
daa
jb
and
and
push
cmp
adc
movsb
pop
rol
and
ja
xor
push
xor
pusha
adc
cmpb
adc
es
cmp
subb
mov
cld
adc
sbb
daa
sbb
and
inc
sbb
add
sbb
daa
aaa
push
inc
or
adc
xchg
inc
add
pop
dec
and
adc
and
sub
inc
enter
add
in
pusha
ftst
and
pusha
push
push
and
cld
push
rep
movsbw
shr
xchg
mov
xor
mov
xor
sbb
outsb
adc
mov
and
and
xor
aam
pop
sub
push
and
xor
pushl
and
and
xor
pop
and
push
mov
xor
and
sbb
sete
aad
xadd
adc
sub
and
push
add
leave
add
lds
cmp
clc
cmc
shrd
and
xor
adc
xor
subl
sub
jle
das
sbb
cmp
xchg
pop
jmp
and
nop
xor
adc
xchg
decl
mov
int
aad
mov
clc
stc
lahf
test
lea
aas
sub
xadd
lea
inc
cmp
cli
sar
rcr
and
adc
sbb
pop
lea
rol
and
mov
xor
pushf
and
and
dec
cld
push
pushf
lea
and
and
adc
xor
add
rorb
xor
adc
subl
adc
push
and
test
rolb
adc
test
xor
xor
adc
and
inc
cs
add
xlat
popa
dec
add
add
test
shr
inc
mov
adc
and
adc
sub
and
or
sbb
adc
nop
dec
inc
rorb
adc
sub
insl
and
xor
mov
bt
sub
bsr
adc
xor
mov
inc
sub
and
or
bts
sar
mov
push
and
xor
sub
mov
adc
fwait
mov
and
adc
fiaddl
sbb
stc
adc
shrd
inc
mov
add
ror
sub
inc
mov
mov
xorl
mov
sub
sbb
adc
push
xor
bound
sub
adc
inc
and
xor
bswap
and
xor
out
std
and
and
aaa
inc
and
pusha
mov
aam
adc
and
xor
scas
popa
lods
and
bswap
stc
cmc
and
xor
cmpb
clc
cwtl
bt
test
push
inc
mov
xor
xchg
xchg
pusha
and
adc
and
xor
cmp
lds
orl
and
cmp
test
and
adc
in
inc
mov
lret
xchg
pushf
and
xchg
bound
adc
neg
inc
adc
or
btc
popa
push
mov
loop
and
adc
test
jnp
pusha
stos
adc
jmp
mov
popa
inc
adc
fsubrs
and
adc
and
pop
dec
adc
and
arpl
adc
stos
add
and
add
or
cmp
adc
inc
inc
stos
adc
lahf
push
test
stos
dec
and
and
inc
test
and
adc
es
inc
in
and
movups
daa
cmp
adc
push
das
and
adc
and
sub
fldt
sub
inc
fdivl
dec
xor
adc
inc
dec
loop
or
in
xchg
mov
sub
and
add
xchg
add
push
adc
dec
xor
add
ret
xor
add
fimull
inc
mov
in
sub
adc
or
xchg
mov
lcall
adc
sub
xlat
or
ret
dec
das
inc
add
loopne
addl
add
lea
inc
add
cs
add
adc
into
das
inc
add
fdivs
inc
add
push
xor
add
les
das
inc
add
aam
inc
add
pop
xor
das
inc
add
add
xor
adc
inc
add
adc
inc
add
shlb
mov
adc
xor
das
inc
add
les
inc
add
inc
add
lds
add
shlb
add
adc
inc
add
xchg
das
inc
add
mov
fldcw
add
adc
das
inc
add
mov
push
xor
das
inc
add
mov
inc
add
inc
add
pop
das
inc
add
mov
inc
add
lcall
das
inc
add
lods
cmp
add
fisubrl
inc
add
test
inc
add
xor
sbb
inc
add
movsb
xor
data16
das
addl
inc
add
mov
loope
inc
add
popf
das
inc
add
pushf
xor
ret
fisubrs
inc
add
cwtl
cmp
add
enter
add
xchg
xor
movb
enter
add
nop
xor
ret
enter
add
mov
inc
add
xor
add
loop
inc
add
mov
inc
add
pop
xor
add
leave
and
inc
add
test
inc
add
sbb
fs
inc
add
xorb
add
pop
push
sub
add
leave
movsl
cs
add
dec
xor
and
adc
das
inc
add
js
inc
add
sbb
lret
adc
inc
add
das
mov
adc
jno
inc
add
jo
inc
add
pusha
add
lret
inc
add
mov
push
add
lret
add
stc
das
inc
add
push
push
xor
add
lret
cmp
xor
and
das
lret
add
lret
subl
xor
adc
lds
inc
add
pop
daa
inc
add
test
sub
lgdtl
int3
or
inc
add
pop
xor
lgdtl
int3
dec
das
inc
add
push
xor
and
dec
das
lret
add
int3
das
incl
adc
add
lret
add
aad
inc
add
dec
add
arpl
es
add
int
lcall
adc
sub
adc
pop
das
inc
add
inc
xor
sub
das
incl
test
inc
add
dec
or
push
add
int
das
inc
add
cmp
inc
add
inc
add
into
sub
inc
add
cmp
and
add
lgdtl
into
insl
das
inc
add
xor
and
add
lgdtl
into
mov
inc
add
xor
and
add
inc
add
cmc
das
inc
add
sub
inc
add
in
or
lret
add
iret
cmp
inc
add
sub
and
add
iret
jge
inc
add
and
inc
add
pop
push
es
add
iret
and
adc
xor
sub
push
xchg
adc
add
sbb
and
xchg
adc
das
ljmp
adc
add
shrb
decl
test
inc
adc
mov
add
mov
cltd
adc
mov
jecxz
pushl
mov
ja
pushl
mov
or
pushl
mov
lahf
adc
mov
jmp
xor
pushl
mov
adc
mov
adc
pushl
mov
movsl
adc
mov
out
adc
mov
cmp
pushl
mov
int
pushl
mov
popa
adc
mov
stos
adc
mov
cmc
adc
mov
aas
adc
mov
mov
pushl
in
add
test
jne
pushl
pushl
pushl
pushl
call
add
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
and
mov
xor
add
mov
sub
sub
cmp
pop
fsubrs
lldt
aam
lldt
shrb
verw
cltd
sub
pop
enter
adc
sub
add
shrb
add
mov
mov
mov
lldt
mov
lldt
lods
sub
add
test
lldt
movsb
sub
add
mov
pushf
sub
add
cwtl
sub
add
xchg
sub
add
nop
sub
add
mov
lldt
mov
lldt
test
lldt
subb
add
sub
adc
bound
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
adc
fs
sub
add
adc
fs
sub
add
adc
fs
sub
add
outsl
adc
sbb
test
sbb
mov
rolb
andl
inc
adc
cmp
adc
sub
adc
hlt
add
adc
es
add
clc
add
inc
add
cmp
add
addb
cltd
push
sub
adc
das
cmp
mov
lahf
push
and
pop
adc
inc
outsb
outsb
sub
and
push
xor
mov
xchg
sarb
daa
adc
pusha
sbb
dec
das
xor
adc
das
xor
adc
xor
adc
xor
adc
mov
xor
sub
sub
sub
add
add
clc
sarb
shlb
and
and
andb
add
inc
data16
and
push
mov
adc
and
hlt
inc
push
adc
xchg
adcb
pusha
sub
shlb
add
add
adc
add
test
fildl
push
adc
and
cld
and
sub
and
call
inc
call
xor
pop
adc
xorl
adc
arpl
arpl
rcll
xlat
mov
or
gs
cmpl
sub
and
outsl
adc
fs
xchg
adc
push
and
pop
inc
dec
and
pop
adc
pusha
cmpl
test
sub
and
data16
cmpb
data16
daa
push
add
cmp
daa
adc
es
add
xchg
add
cmpsl
push
adc
push
xor
and
fisubl
das
std
es
mov
sub
sbb
fstpl
push
push
sbbb
sub
add
movl
jg
cmp
adc
xchg
add
mov
dec
and
mov
dec
adc
inc
clc
push
mov
push
and
adc
sub
adc
test
adc
fwait
adc
test
dec
jne
and
pusha
inc
add
xor
incl
and
sahf
inc
call
stos
sbbl
pushl
push
pop
sub
and
ret
sub
adc
and
and
sub
add
cmpsl
pop
sub
or
fsubl
scas
sbb
outsb
and
mov
loopne
es
imul
jno
pop
adc
sub
push
xor
add
pop
and
and
add
mov
xor
add
fisttpll
sub
movl
andl
mov
mov
sub
add
push
and
ds
xchg
xor
ljmp
and
sub
fiadds
cmp
and
xor
xor
das
mov
and
add
mov
xor
pop
sub
cmp
cmc
add
sub
sub
test
adc
sbb
sub
roll
adc
popa
lahf
cmp
add
or
and
jae
lret
imulb
mov
xor
adc
es
das
outsb
push
sub
pop
xor
pop
and
pop
es
add
loopne
rclb
shlb
adc
adc
les
xor
xor
fcompl
adc
fldl
ret
adcb
jle
pop
adc
je
pop
pusha
or
pop
test
inc
pop
and
adc
fld
and
sub
push
or
insl
or
leave
fsub
fsubr
fcom
stos
inc
or
mov
and
and
adc
add
push
mov
fisttpl
lahf
pusha
pop
mov
and
and
push
adc
mov
test
clc
sub
cmc
test
and
sbb
adc
inc
or
mov
push
mov
mov
in
pop
adc
and
adc
and
adc
loopne
clc
push
adc
cmc
mov
sub
mov
pop
je
out
inc
leave
adc
adc
popa
add
test
rol
sub
mov
sbb
lea
mov
seta
shl
add
adc
bts
and
mov
shld
rcr
inc
adc
repnz
fcoms
rolb
loopne
adc
stos
out
in
pusha
outsl
adc
add
and
pop
inc
stos
adc
sub
mov
ret
push
adc
mov
and
test
out
adc
mov
and
and
push
add
add
imul
sub
stc
and
adc
popf
sub
clc
inc
in
bound
push
or
shrb
mov
in
mov
cli
cltd
sub
xchg
push
adc
xchg
adc
and
and
pushf
push
and
and
inc
inc
mov
clc
add
and
clc
pop
sbb
out
push
pusha
push
and
mov
inc
push
push
adc
xor
mov
and
pop
sbb
mov
inc
push
inc
adc
jecxz
and
sbb
test
shrd
and
dec
cmp
mov
and
sbb
stc
bt
bt
not
inc
jg
in
inc
dec
adc
adc
and
adc
add
mov
setae
setle
push
inc
lea
push
inc
adc
repnz
mov
setns
movzbl
jmp
inc
and
lret
push
pushf
mov
and
adc
in
pop
movsbl
bswap
pusha
mov
jae
adc
in
test
inc
ja
fisubl
leave
and
xchg
cltd
pop
adc
cmpsb
mov
pop
pop
imul
mov
inc
jl
sub
dec
push
and
mov
movsb
pop
add
xchg
mov
mov
xor
add
dec
ror
mov
push
adc
popa
ja
loop
and
pushf
mov
call
inc
pop
inc
ljmp
repz
pusha
push
adc
sbb
fiadds
adc
mov
pusha
sti
adc
adc
cmp
and
dec
add
andl
lret
and
adc
jns
enter
adc
mov
popa
jmp
cmp
mov
ret
and
pop
adc
cmp
and
push
shl
push
and
sub
fsubl
fcompl
and
push
int
cmpsb
sbb
pushf
not
clc
clc
cmc
push
and
popa
mov
xor
push
pusha
and
pop
popa
flds
adc
mov
pusha
push
bound
out
pusha
lahf
add
mov
mov
in
setg
sub
ror
and
arpl
rolb
inc
or
ret
fadds
pop
lock
rol
pushf
pusha
dec
pusha
pop
adc
loope
popa
push
adc
adc
popa
or
cltd
and
inc
clc
cmc
and
pusha
pop
adc
pop
adc
mov
rorb
and
push
pop
adc
and
and
adc
adc
pop
sub
mov
jmp
shlb
cmp
xor
pusha
inc
pop
sbb
jge
movl
mov
cmp
mov
xorb
inc
adc
and
test
inc
sbb
inc
jle
or
adc
stos
pushf
and
ds
mov
xor
and
adc
sub
push
and
adc
inc
and
jmp
push
and
sub
pop
adc
mov
mov
popa
xchg
adc
push
add
arpl
adc
js
and
pop
adc
cmp
cli
pop
mov
popa
dec
adc
pop
inc
inc
sbb
pop
jbe
mov
popa
sbb
shlb
push
test
bound
out
jns
rclb
lods
lcall
fwait
pushf
inc
push
adc
mov
inc
sub
push
movsl
cmc
lea
not
stc
rcr
bswap
and
pop
sbb
or
add
ret
jmp
ljmp
sbb
and
dec
cmp
in
aad
jmp
mov
lcall
inc
pop
add
lahf
jl
decl
mov
mov
pop
sbb
mov
ljmp
pusha
xor
jb
cmp
mov
sub
and
adc
fdivrl
pusha
aaa
adc
fnstcw
adc
jno
ljmp
inc
pop
pusha
movups
inc
pop
adc
aad
mov
dec
adc
pop
pusha
push
adc
mov
pusha
and
adc
inc
mov
mov
adc
pop
pusha
jae
andb
daa
pusha
mov
adc
inc
pop
adc
inc
adc
adc
pusha
sub
inc
punpcklbw
pusha
xlat
adc
inc
xchg
adc
jp
incl
pop
pusha
push
pusha
pop
pusha
push
adc
inc
pop
pusha
fistl
stos
inc
sub
adc
inc
sub
mov
adc
fstpt
pusha
add
pusha
movups
inc
pop
popa
pop
adc
pusha
xchg
loopne
pusha
ret
pusha
dec
loopne
pusha
jmp
mull
pop
add
sub
add
jmp
sub
cmp
add
popa
and
adc
mov
loopne
adc
inc
das
sub
add
pusha
mov
pusha
mov
bound
loopne
pusha
imull
pop
add
popa
and
pusha
or
loopne
pusha
out
lahf
pusha
pop
popa
sub
popa
mov
pusha
sbb
pusha
lahf
pusha
sub
popa
mov
add
loopne
pusha
jae
pop
pusha
aaa
adc
inc
pop
pusha
pop
loope
pusha
dec
popa
das
popa
aaa
bound
popa
push
popa
jecxz
ret
pusha
ret
pusha
pop
popa
pusha
pop
pusha
cmp
adc
jb
push
bound
pop
popa
outsl
pusha
cmpsl
pusha
jnp
aaa
bound
pusha
dec
bound
popa
jecxz
push
inc
mull
pusha
pop
pusha
jnp
jmp
shll
bound
xchg
pusha
xchg
pusha
arpl
jmp
inc
pusha
mull
pusha
pop
bound
cmpsl
pusha
dec
pusha
shll
pusha
pop
pusha
out
pusha
cmpsl
pusha
sub
popa
inc
pusha
mov
pusha
mov
outsl
mov
andl
cmpsl
iret
pusha
mov
pop
pusha
pop
pusha
andl
and
pusha
or
popa
push
pusha
out
arpl
and
pop
adc
mov
adc
mov
or
add
test
xor
mov
neg
aas
stc
mov
cwtl
setne
aaa
and
bound
pushf
pushf
mov
lea
inc
test
sub
adc
cmp
mov
test
call
add
pusha
push
jl
adc
cs
xchg
adc
push
mov
add
mov
jle
adc
sbb
shll
shrd
mov
sub
mov
cli
adc
adc
push
pushf
pusha
push
adc
imul
adc
cmp
popa
popa
and
adc
mov
insl
pop
adc
icebp
dec
bswap
not
mov
xchg
imul
sbb
xchg
seta
cwtl
lea
inc
in
roll
push
pusha
pusha
test
pop
jl
and
icebp
adc
inc
jl
pop
and
push
mov
gs
sbb
jb
and
adc
jo
adc
adc
sub
addr16
pop
and
das
and
stos
adc
pusha
cmp
in
adc
sub
lods
adc
and
das
adc
jbe
xchg
sub
push
adc
addr16
cmp
mov
aas
shl
mov
and
loop
push
adc
call
pushf
adc
mov
adc
arpl
stos
addr16
xchg
imul
pushf
adc
add
popa
sub
adc
and
out
dec
scas
adc
adc
or
adc
clc
stos
jl
in
and
and
adc
xor
mov
sbb
xor
adc
and
inc
dec
jmp
popa
dec
adc
imul
adc
adc
fdivp
rol
shrl
push
cmpsl
gs
jmp
ds
inc
and
push
xor
pusha
pushf
adc
and
inc
add
mov
pop
bswap
push
dec
push
pop
add
mov
enter
addr16
or
adc
rol
rorb
adc
push
and
arpl
leave
adc
lret
adc
mov
adc
push
pop
xor
sbb
daa
push
mov
cmp
popa
inc
push
mov
push
arpl
adc
orb
dec
push
adc
mov
out
fstpl
push
adc
lds
adc
sub
xlat
push
mov
push
add
and
lock
cmp
inc
xchg
dec
xor
adc
inc
mov
addr16
movsl
adc
add
lahf
stos
mov
adc
movsl
xor
sub
and
adc
cmp
dec
neg
pushf
inc
sub
and
inc
popa
pop
test
stc
cmp
pushf
mov
mov
inc
push
adc
xlat
cmp
and
clc
add
and
dec
into
pop
sub
sub
cmc
not
and
add
ret
xor
ror
dec
jae
arpl
shll
jle
push
stc
test
dec
mov
cmp
arpl
adc
xchg
adc
inc
push
adc
and
adc
pusha
clc
cmc
mull
stos
dec
adc
test
adc
mov
stc
sub
mov
adc
or
dec
mov
adc
or
adc
inc
inc
cld
adc
insb
lret
mov
out
andb
pushf
shl
pusha
and
imul
and
popa
adc
mov
xor
mov
mov
inc
sbb
std
cld
pusha
and
push
and
movzbl
inc
adc
adc
push
and
push
and
bound
pusha
mov
mov
ret
clc
test
pusha
imul
dec
mov
rdtsc
pusha
loope
sbb
jecxz
and
adc
and
mov
cmc
clc
cmp
inc
in
adc
fldenv
adc
and
arpl
or
and
out
mov
jl
and
push
adc
bound
adc
pushf
pushf
arpl
adc
divl
xor
icebp
insb
fs
push
adc
adc
push
mov
pushf
inc
jle
push
and
bound
pop
push
inc
or
outsb
popa
push
dec
or
and
rcl
inc
lds
adc
and
test
inc
mov
mov
dec
popa
sarb
xchg
pop
inc
and
not
setl
inc
dec
inc
cli
adc
pushf
inc
inc
fs
adc
and
dec
jbe
outsb
popa
jle
outsl
gs
adc
outsb
inc
adc
push
push
and
add
in
setge
stc
ror
mov
adcl
bound
and
sbb
xchg
fchs
pusha
mov
jmp
ret
gs
bound
jecxz
mov
sbb
rcl
cld
or
mov
and
jns
cmc
iret
push
adc
adc
rcrl
and
jp
push
adc
add
adc
inc
mov
mov
lds
imul
mov
mov
dec
or
or
data16
lret
ljmp
inc
or
aaa
jl
dec
cli
fistps
orb
or
mov
mov
fisttpll
jno
push
cmp
outsb
int3
cmp
stos
fildl
jl
popl
in
cmp
sbb
and
push
divl
and
mov
xchg
mov
cmp
add
cmp
jne
icebp
dec
aad
loope
mov
insl
adc
push
inc
or
inc
test
pushf
call
push
inc
das
add
sub
add
enter
add
mov
jp
jmp
dec
arpl
fisubs
adc
outsl
sub
adc
push
cli
daa
xor
push
adc
lcall
adcb
gs
xchg
sub
adc
add
sub
daa
cmp
adc
and
sub
add
outsb
fs
inc
adc
push
cs
pop
mov
subb
sbb
push
mov
add
je
lcall
push
push
mov
inc
jbe
mov
sub
clc
cltd
in
xor
xor
sub
adc
sbb
xchg
adc
adcb
cs
inc
xchg
sub
je
jecxz
jns
icebp
je
lea
jge
daa
adc
jge
sub
adc
inc
out
xor
adc
mov
inc
adc
jp
and
adc
inc
bound
sub
inc
sub
xorb
add
inc
xor
cli
push
xchg
adc
add
adc
dec
das
lock
loopne
push
and
rcrl
movl
movl
and
sub
push
popa
xchg
adc
js
loopne
adc
add
loopne
adc
xor
loopne
mov
and
imull
cmp
add
rolb
mov
add
and
inc
adc
and
mov
add
xor
cmp
add
mov
clc
and
pusha
xor
adc
test
fs
fsubl
jmp
adc
sbb
inc
fcoms
add
pop
jno
xlat
cmp
inc
xchg
adc
arpl
adc
and
adc
stc
jne
inc
add
aam
es
add
sub
add
cmp
add
decb
leave
adc
cli
aas
cmp
add
aad
add
testb
insb
sbb
adc
add
sub
loopne
mov
sti
and
loopne
adc
ja
enter
add
or
adc
lock
adc
cmp
add
xlat
cmp
dec
add
scas
push
sub
add
or
add
lret
add
hlt
add
or
cld
mov
lret
add
fmuls
daa
addb
add
or
xor
xor
add
add
lods
or
std
and
mov
leave
add
shlb
pop
add
or
cmp
or
cmp
and
add
test
sbb
or
cmp
add
and
adc
and
mov
loope
adc
lcall
cmp
add
add
xor
and
loope
fsubl
and
xor
add
add
loope
adc
ja
adc
lcall
add
fistpl
hlt
add
sarl
adc
xor
push
and
popa
add
and
adc
ret
lret
adc
cmp
add
adc
stos
and
or
add
testl
in
cmp
or
hlt
pop
mov
or
ret
fiadds
cmp
add
filds
add
insb
or
push
sub
add
or
cmp
add
adc
mov
in
push
adc
cmp
add
loopne
add
mov
cmp
add
or
leave
and
add
adc
add
and
hlt
or
adc
xchg
or
push
popa
cmp
add
loope
add
mov
and
adc
cmp
fwait
xchg
and
add
test
daa
inc
inc
pop
and
je
pop
adc
adc
adc
inc
push
adc
adc
sub
xor
jne
push
pushl
mov
xchg
test
adc
imul
add
test
and
inc
adc
das
add
clc
add
jb
daa
mov
mov
jge
adc
xor
sub
xchg
jo
mov
adc
popa
adc
sub
shrl
ljmp
add
push
xor
inc
pop
adc
andl
cs
sub
add
js
addb
inc
lock
pusha
bound
pop
mov
xchg
pusha
jo
fadds
aas
sbb
cmp
mov
sbb
hlt
or
and
mov
daa
push
bound
and
popa
adc
xor
push
cmp
and
inc
shlb
rolb
adc
jle
inc
add
ds
add
icebp
push
popa
mov
adc
mov
js
adc
mov
ret
hlt
inc
adcb
jbe
rorb
cwtl
and
cwtl
adc
and
and
cwtl
and
mov
sub
aam
adc
mov
add
and
and
insl
add
xor
pop
and
adc
out
cs
xor
or
pop
and
inc
xor
sub
add
jbe
aas
cmp
daa
hlt
add
adc
sbb
and
and
and
adc
push
and
adc
mov
mov
mov
lods
stos
lods
stos
xor
stos
stos
cmpl
fldenv
out
ret
lahf
and
ds
and
clc
sbb
adc
cmp
xor
daa
lret
add
push
add
lret
add
push
add
ljmp
insl
add
dec
add
insl
add
adc
inc
nop
pop
adc
cmpl
jge
adc
mov
push
xchg
and
xchg
es
xchg
and
stos
xchg
es
adc
mov
mov
daa
xor
pop
pusha
ss
mov
xor
inc
push
xchg
inc
and
jge
inc
shll
out
adc
push
mov
movsb
sub
cwtl
and
adc
es
sbbb
lahf
bound
push
xor
pop
add
mov
pop
push
and
inc
inc
and
int3
mov
or
add
add
pop
add
or
adc
mov
add
and
cwtl
and
xor
stos
add
jge
adc
jge
es
add
pushaw
or
add
add
jl
adc
mov
pop
push
push
mov
mov
inc
sbb
pusha
pushf
and
adc
and
xor
jle
and
pop
inc
sbb
mov
adc
xor
mov
adc
mov
adc
cmp
hlt
push
xchg
movsl
lcall
adc
inc
push
adc
cmp
and
adc
inc
xor
and
adc
and
adc
push
std
or
inc
fwait
adc
inc
rclb
push
inc
xchg
mov
and
inc
xor
push
imul
scas
add
clc
mov
jmp
push
mov
sbb
add
call
je
lcall
add
test
push
pusha
jns
movsb
inc
xor
inc
jne
adc
aaa
adc
and
imul
dec
outsb
rclb
push
cmp
and
ljmp
adc
ss
and
pop
es
xchg
or
sub
or
add
xchg
cld
add
cwtl
add
fwait
lods
sub
or
pop
and
and
dec
sub
adc
lea
adc
and
mov
and
sub
pushl
sbb
decb
cmp
arpl
dec
sub
add
cs
xchg
and
and
fwait
adc
push
cltd
add
add
mov
cmp
jne
and
push
mov
jecxz
adc
and
pop
sbbb
std
or
adc
pusha
add
fucomp
sti
adc
shlb
sub
es
loop
xor
adc
push
adcb
inc
pushf
and
sub
adc
sub
es
and
hlt
pop
js
mov
lcall
push
and
mov
or
sub
adc
arpl
arpl
sub
and
sub
and
and
add
je
push
mov
jno
adc
pop
pop
sub
and
inc
add
jbe
adc
mov
jns
fadds
in
jl
test
cmp
adc
daa
cli
movsb
adc
adc
adc
cli
or
adc
les
or
and
push
xor
and
push
xor
or
adc
addl
jno
movl
in
and
sub
and
adc
xor
adc
and
cmp
xchg
aas
cs
adc
test
mov
push
adc
out
jns
shrb
jns
and
cmp
sub
cmpsl
adc
xor
adc
sub
adc
and
data16
movsb
adc
cmp
fstpl
fsubl
dec
insl
adc
and
adc
adc
jmp
inc
and
adc
cmpl
add
dec
mov
into
cmpb
cmc
push
sub
add
test
add
daa
cpuid
loope
imul
adc
daa
imull
cmpb
push
lods
mov
inc
fwait
adc
lea
adc
out
adc
mov
incb
and
popf
adc
aas
xor
and
call
shll
and
and
pushf
daa
mov
insl
stc
push
pushl
pushl
mov
sub
pushf
cmp
mov
xchg
and
adc
sbb
mov
jmp
add
cmp
loopne
dec
repnz
xchg
and
fiaddl
outsl
fs
xor
es
andb
adc
inc
notb
mov
popa
add
sub
inc
jne
addr16
adc
sbb
xor
mov
rcll
movl
and
xor
mov
sbb
sbb
and
rclb
adc
cmpl
push
movsb
rolb
addb
pusha
inc
adc
add
inc
add
adc
push
add
adc
xor
add
outsl
adc
andb
stos
adc
aas
dec
add
mov
int3
and
jbe
mov
cmp
inc
jge
xchg
fstpl
addl
jge
subl
add
or
sub
addr16
negb
lahf
push
inc
mov
loop
es
lods
adc
aas
fildl
and
mov
sbb
mov
add
fstpl
addb
jecxz
and
inc
movsl
lock
inc
shlb
pop
dec
adc
out
sub
adc
gs
daa
lar
lea
push
pop
adcb
push
test
add
frstor
and
xchg
test
xor
push
shr
fisttpll
call
xchg
and
sub
inc
cmp
xchg
jae
xchg
jae
out
and
adc
mov
mov
outsl
adc
xor
push
incl
mov
pop
movsb
and
jae
cmp
add
int
adc
mov
fadd
adc
lret
pop
add
cmpb
loopne
and
insl
add
add
mov
loope
and
jne
cmpsb
cwtl
adc
mov
lods
fildl
fstpl
fldl
loopne
adc
jbe
adc
mov
mov
adc
fadds
mov
add
jg
sub
add
sarb
fadds
and
adc
and
sbb
sub
das
and
pop
sti
je
fsubl
aam
and
aad
sbb
rorb
pushl
adc
movsl
pusha
pop
and
and
out
mov
adc
sub
les
adc
sub
adc
insb
daa
cmp
daa
movsl
and
loopne
adc
or
cmp
lock
es
or
cmpl
test
and
and
cmpsb
add
add
inc
ret
push
push
lea
sub
mov
cld
and
inc
and
pop
pop
pop
pop
inc
push
scas
scas
cmp
js
adc
imul
gs
adc
and
insl
sbb
jmp
lds
and
dec
das
xor
orl
mov
add
sub
add
insb
pop
and
jge
stos
js
adc
es
add
pop
sbb
adc
or
fiadds
inc
or
sub
adc
scas
xor
or
adc
push
xchg
inc
ljmp
cmpsb
jle
fsubrl
adc
xor
add
imul
and
gs
and
in
adc
cs
push
sub
add
pusha
ficoml
daa
jp
fiaddl
xor
inc
dec
sub
add
sbb
adc
pusha
xor
rcll
sub
mov
xor
adc
smsw
outsl
add
in
out
adc
jno
push
dec
dec
adc
bound
mov
adc
insl
sub
adc
movsl
jmp
and
call
sub
adc
clc
push
mov
sub
or
dec
test
sub
adc
adc
sbb
aaa
sub
add
test
jp
adc
das
sbb
sub
add
push
add
mov
adc
mov
mov
pusha
push
jl
adc
push
and
mov
mov
add
sbb
sub
and
adc
mov
xchg
push
movsb
inc
fiadds
cltd
push
mov
loopne
mov
loopne
jp
int
add
or
xchg
and
shrl
and
add
test
ret
ja
push
add
xchg
add
push
push
jle
mov
pusha
mov
cltd
mov
push
daa
cwtl
add
test
adc
popa
adc
xchg
lds
jecxz
adc
loopne
inc
je
sub
adc
add
mov
cmp
add
push
sub
ds
add
adc
push
mov
lret
xor
sub
or
iret
and
pop
add
and
and
add
mov
add
aas
add
pushl
xchg
xchg
ds
dec
adc
inc
push
lea
xor
adc
inc
sbb
ret
addl
sub
xor
xor
add
adc
add
add
pushl
xor
or
add
js
adc
hlt
xor
sub
and
xor
and
dec
sub
push
andl
xchg
mov
fsubl
and
outsl
lds
rep
pop
inc
adc
test
int3
or
mov
hlt
xchg
icebp
xor
mov
imul
and
cld
addb
and
inc
adc
xor
sub
sub
sub
and
in
add
es
add
or
and
and
sub
inc
pusha
loopne
ret
push
sub
and
and
inc
mov
insl
mov
mov
inc
sub
mov
mov
xchg
xchg
or
xchg
sbb
cmp
adc
push
sbb
shlb
xchg
ljmp
adc
cmp
mov
add
pop
sub
sbb
and
sub
aaa
add
or
cmpl
add
lock
cwtl
or
cmp
pop
jns
mov
jle
repnz
ss
adc
lock
add
insb
add
xor
mov
fdivrl
and
and
jp
and
dec
push
cs
adc
shll
call
hlt
xorb
push
adc
xor
sahf
add
in
bound
and
push
aam
ret
adc
xchg
cwtl
es
adc
lea
sbb
test
rorl
mov
push
push
lea
lods
stos
and
adc
test
je
lret
rep
lea
cltd
or
and
mov
xor
xor
popl
sub
and
inc
and
mov
aaa
sub
shlb
adc
mov
int
sub
and
adc
inc
fsts
or
cmp
jbe
jae
adcb
cmpsl
mov
adc
inc
sub
cmp
mov
out
loope
and
loop
sub
gs
add
adc
adc
adc
cmp
adc
out
xor
adc
add
and
aas
inc
dec
adc
mov
dec
jmp
ljmp
and
adc
sub
daa
lret
and
das
pushf
add
fsubs
sub
and
xor
pusha
sub
lcall
adc
inc
xor
aaa
inc
adc
insl
and
insb
sub
pop
daa
pop
sbb
addr16
adc
es
adc
test
sbb
cs
push
or
mov
jp
adc
pop
and
adc
adc
add
cmp
pop
adc
inc
cmp
add
mov
cmp
dec
in
and
add
xchg
pop
push
adc
dec
das
daa
push
pop
adc
xchg
mov
sub
pop
and
cmp
iret
es
or
mov
daa
insl
add
subl
ret
je
sahf
inc
jmp
adc
sub
add
mov
xor
adc
call
insb
adc
mov
adc
sub
mov
daa
jl
pusha
and
std
sub
out
jge
cmp
adc
add
dec
in
loope
sbb
adc
stc
aas
sbb
adc
or
cmp
loope
inc
inc
daa
xchg
pop
xor
add
dec
and
adc
scas
das
sbb
adc
sub
add
loopne
sti
sbb
adc
sub
add
mov
sub
add
dec
and
rcrl
cmp
sbb
and
popa
sub
or
adc
cmpb
adc
jge
jle
adc
pushl
popa
push
mov
daa
test
adc
jg
inc
mov
xchg
add
ret
or
inc
and
ret
add
inc
and
cmp
mov
lds
cmp
add
dec
and
mov
or
mov
dec
push
adc
inc
gs
pop
sub
add
das
test
stos
test
cmpsl
and
das
bound
sub
and
aas
adc
sub
mov
adcl
or
shlb
cwtl
enter
aas
jmp
mov
jg
xor
push
or
bound
add
inc
ss
add
je
xor
add
das
add
sub
daa
add
adc
adc
movsl
push
and
adc
mov
sub
xor
ret
inc
push
addb
adc
daa
aaa
add
xchg
jp
adc
das
fiadds
sub
and
cld
add
inc
adc
jge
lock
mov
ss
fwait
adc
inc
push
xchg
adc
adc
inc
and
and
pop
jg
xchg
sub
pop
mov
jne
inc
adc
popa
mov
call
inc
insl
adc
fildl
sub
mov
sub
push
shrb
cmp
xchg
sub
add
fimuls
add
sub
adc
daa
push
or
inc
and
inc
sub
or
add
xchg
inc
push
and
and
lea
les
daa
mov
sbb
sbb
es
cmp
sub
pushl
push
inc
cmp
shlb
cmp
subl
jmp
adc
and
or
leave
add
lods
fwait
xor
or
adc
sub
inc
and
inc
jnp
push
cmp
mov
sub
mov
daa
data16
in
data16
subb
add
add
mov
adc
add
lods
sub
mov
adc
je
scas
add
jge
das
mov
mov
add
das
jbe
pop
mov
mov
xor
cmp
mov
daa
add
addr16
adc
clc
add
sub
sahf
sbb
xor
inc
in
or
push
add
scas
xchg
inc
insb
adc
cs
add
aas
adc
sub
sbb
cmp
adc
inc
sub
sub
push
mov
sub
add
movsl
add
jne
inc
xchg
sub
adc
loope
add
roll
adc
roll
adc
adc
inc
sub
add
sbb
jle
sub
jge
inc
outsl
adc
pushf
cmp
dec
xchg
dec
add
inc
jl
dec
add
push
ret
adc
dec
adc
lock
jl
and
mov
and
and
sub
sbb
add
inc
push
mov
adc
and
incl
sub
es
add
jge
inc
inc
jne
push
push
nop
mov
sub
movsl
adc
add
push
call
inc
adc
fwait
adc
dec
add
pop
sbb
rolb
inc
and
and
mov
fsubl
adc
sub
xchg
arpl
adc
sub
add
push
add
cltd
and
and
xchg
and
and
push
inc
loopne
pop
inc
add
aaa
add
adc
mov
dec
dec
inc
and
lods
and
xor
add
es
add
in
sbb
daa
popf
xor
adc
jae
inc
fildl
inc
adc
sub
popa
add
xor
adc
ja
testb
sub
and
sub
dec
and
das
scas
sbb
in
or
lahf
add
dec
add
mov
daa
lea
es
aas
and
and
inc
leave
clc
adc
xor
shl
mov
scas
pusha
shll
lret
adc
cld
jae
loopne
adc
movsl
cmp
or
cmc
adc
aaa
add
push
mov
int
adc
or
adc
adc
mov
sarb
es
and
add
fsubrl
iret
pusha
cmp
sub
adc
lea
gs
lock
pusha
cld
inc
test
push
mov
scas
xor
dec
sub
iret
insb
insb
pusha
and
adc
dec
out
imul
xor
mov
push
dec
xchg
and
int3
sub
add
lods
jne
jns
xor
or
sub
or
bound
jl
and
adc
es
sub
jge
dec
shll
int
and
sub
jge
jg
xchg
and
stc
or
and
mov
ss
inc
sub
add
adc
xor
sub
and
jg
sub
test
pop
add
mov
adc
and
sub
jge
jp
inc
jmp
xor
and
sub
dec
fwait
mov
push
push
xchg
loopne
inc
push
add
dec
pop
pop
cmp
adc
mov
pop
mov
imul
xlat
cmpsl
sub
add
push
popa
and
add
in
pop
es
add
sbb
adc
cs
add
incb
xchg
sub
jne
adc
fildl
sub
in
inc
arpl
notl
sub
jae
lea
sub
xor
add
adc
add
popf
add
insb
add
mov
jg
cmp
adc
cmpsl
xor
dec
xor
adc
shlb
add
adc
incl
into
in
daa
pop
pop
mov
push
dec
push
push
mov
push
and
je
insb
xlat
sub
push
adc
mov
mov
adc
mov
adc
mov
adc
xor
sub
push
pusha
or
lock
push
lret
enter
xor
adc
sub
dec
movsl
add
inc
sub
push
mov
and
push
cmp
es
adc
push
xor
jne
fdivs
or
mov
and
aaa
mov
add
mov
sub
or
push
and
adc
rcrb
adc
adc
jno
addr16
jb
and
rolb
sub
adc
xor
sbb
dec
and
ds
ret
pusha
addl
or
xor
and
sub
and
mov
mov
adc
jno
and
test
adc
test
adc
sub
lcall
sbb
push
add
sbb
push
adc
push
sub
push
add
fstl
pusha
testl
and
inc
add
push
aaa
cmp
popf
pop
das
xor
pushf
dec
test
jno
das
push
and
add
mov
sub
adc
mov
popf
iret
sub
add
adc
inc
push
cs
adc
add
mov
sub
xor
sbbb
sub
add
cltd
add
enter
adc
add
cltd
add
mov
mov
dec
push
adc
das
movsl
and
pop
add
xchg
and
xor
adc
and
and
or
xor
std
and
jnp
adc
outsb
adc
incl
sub
adc
adc
jnp
adc
pushl
add
scas
or
push
mov
and
mov
fistps
add
sub
es
setg
cmp
add
pop
push
adc
add
or
and
add
cmc
add
pop
cmp
es
add
sbb
dec
push
add
add
add
add
xchg
add
add
mov
iret
push
ss
cmpsl
add
fwait
add
pop
sub
test
sub
mov
insl
lahf
inc
push
adc
cmp
xor
test
sub
pop
cs
xor
adc
adc
test
mov
xchg
adc
mov
jb
test
cmp
adc
repz
pop
inc
ss
and
xchg
ss
add
in
and
pop
xchg
xor
and
lcall
pop
out
scas
and
pop
and
sub
lds
adc
xor
adc
adc
es
sti
sub
adc
and
in
xchg
aam
adc
bound
and
sbb
dec
mov
in
jns
loopne
aas
cmc
add
pop
xor
xchg
fsub
das
cli
add
inc
add
pop
and
mov
adc
lods
andb
es
sub
popa
or
pop
dec
adc
xchg
or
test
adc
jne
sarb
adc
and
push
and
and
das
xor
sub
test
mov
adc
js
and
addb
mov
pop
mov
push
or
adc
iret
dec
sub
push
sub
in
sub
pusha
xor
push
and
xor
sub
adc
aam
adc
pusha
lret
and
xor
nop
xor
daa
push
sub
popa
aaa
das
dec
sub
in
mov
push
jle
add
insb
add
xor
add
adc
popa
cltd
sub
xchg
adc
gs
loopne
xor
add
in
fsubs
loop
add
or
adc
cmp
push
add
add
in
and
and
repz
cmpsl
shll
push
mov
fwait
pop
adc
loop
cmp
adc
xor
cmp
dec
in
cmp
adc
xlat
xchg
ljmp
sbb
sub
sub
das
sub
add
jmp
push
mov
sub
arpl
or
sarl
and
sbb
arpl
xor
or
mov
pop
add
sbb
es
or
sbb
loopne
js
adc
sub
adc
inc
pop
adc
dec
and
sub
mov
fcoms
cmc
sti
daa
mov
adc
das
mov
addb
ficoms
sub
adcl
xor
das
addl
andb
data16
mov
pushl
addl
sub
addl
daa
movsl
add
addl
xchg
rolb
add
mov
das
addl
or
sub
rolb
adc
add
addl
adc
sub
adcl
xor
add
addl
sbb
sub
incl
add
push
add
sbb
sub
adcl
xor
sub
and
cmp
xor
add
imul
jge
test
roll
sbb
in
and
adc
test
inc
adc
xor
and
jmp
push
adc
dec
and
dec
adc
mov
push
or
add
mov
insb
nop
add
add
adc
cmp
add
loopne
lea
and
and
cmp
add
cmp
sti
and
sbb
fsubl
fstpl
fldl
xlat
jnp
jns
xor
mov
orb
les
dec
adc
mov
daa
add
push
xor
add
and
xor
mov
dec
sbb
and
adc
aam
and
pop
sub
sub
mov
adc
inc
or
cmp
mov
and
arpl
add
sub
inc
sub
adc
sub
sub
sub
insl
loope
inc
cmp
sub
and
cmpb
fadd
add
clc
imul
andb
test
popa
and
imul
dec
fldcw
add
cmp
mov
adc
inc
and
sub
sbb
mov
add
adcl
outsl
ljmp
lods
adc
adc
sub
add
ds
push
push
adc
fildl
and
rcr
pusha
or
call
gs
fldl
enter
adc
dec
add
mov
mov
adc
add
dec
mov
sub
popf
sub
and
adc
jmp
or
adc
mov
sbb
add
sbb
dec
push
xchg
mov
cmpl
jl
dec
adc
adc
pop
xor
add
aam
aad
adc
sub
call
push
add
xor
add
int3
and
daa
push
add
jno
cmp
push
add
push
and
and
enter
add
loope
sub
rcl
jl
fisubl
and
lea
sti
add
add
sti
add
jno
ljmp
add
add
sti
add
jb
filds
cmp
add
adc
push
add
jb
xor
sub
adc
movsb
add
rcrb
adc
add
sub
movsb
add
jae
add
movsb
add
add
movsb
add
je
jmp
add
movsb
add
je
add
movsb
add
add
movsb
add
jne
add
movsb
add
jne
add
movsb
add
dec
das
movsb
add
xor
cmp
add
add
jbe
xor
mov
and
xor
add
xchg
das
lods
add
int3
fildl
mov
mov
daa
inc
push
aaa
lods
add
jbe
das
lods
add
mov
lods
add
inc
mov
in
lea
dec
lahf
adc
xorb
and
add
add
ja
xor
adc
add
cmpsb
inc
xor
adc
ds
add
aad
add
add
js
jmp
add
dec
add
jo
sub
and
add
outsb
xor
or
jae
add
push
pop
adc
adc
jne
stos
dec
jbe
shrb
sub
jmp
pop
sub
pop
inc
fisubrl
jg,pn
es
es
add
xor
mov
repnz
push
sub
sub
inc
mov
sbb
adc
daa
sbb
sub
es
and
aaa
rcrb
aaa
mov
xchg
adcb
add
xor
adc
orb
pop
inc
lret
adc
add
daa
jmp
add
dec
pop
add
adc
out
xor
sub
mov
xor
daa
xor
sbb
jnp
inc
sub
add
sub
lret
mov
add
jl
das
inc
sbb
aaa
daa
fcoml
xor
js
out
and
pop
das
fiaddl
or
sub
xor
fisttpll
adc
push
mov
fmull
adc
pushl
or
aaa
addr16
adc
add
dec
mov
inc
mov
insl
lock
faddl
fstpl
fldl
mov
and
adc
mov
and
pop
adc
and
adc
daa
push
sbb
call
jne
add
jl
push
inc
das
xchg
xor
dec
xor
add
sub
jge
cmp
and
aad
adc
jne
pop
mov
imul
sub
add
ss
adc
dec
rclb
jle
fwait
subl
adc
popf
adc
fiadds
sub
ss
cmpsb
sub
and
mov
adc
test
faddl
sub
adc
or
or
xor
mov
add
addl
add
js
and
and
fcomp
fsubs
mov
test
int3
imul
add
add
push
xor
lods
add
lods
add
lods
dec
xor
add
and
adc
add
adc
shrb
mov
mov
sub
xchg
xor
jne
cli
dec
sub
enter
andl
aaa
es
and
ss
and
sub
adc
add
dec
cmp
add
ficompl
and
xor
add
pop
adc
add
and
adcl
push
sub
dec
jae
pusha
dec
ss
xor
sub
adc
addb
and
cld
leave
jo
jae
fadds
inc
and
inc
pusha
aaa
inc
mov
test
pusha
add
call
jge,pn
pusha
aaa
jge,pn
sub
mov
jge
adc
movsb
loopne
jge,pn
pusha
aaa
add
jge
adc
jge
mov
add
daa
jge
popa
jne
and
xor
xor
xor
das
xchg
add
clc
aad
xor
cmp
rdmsr
and
pop
adcb
jb
add
add
fisubrl
add
add
cs
add
add
xchg
add
test
xchg
add
add
cs
add
add
add
jmp
sub
add
add
gs
inc
pop
adc
fldl
iret
or
and
fisubrs
loopne
adc
cmpsl
mov
and
fstpt
sbb
dec
arpl
rcrl
call
das
inc
or
lds
loop
sub
adc
mov
and
sub
dec
add
das
hlt
sub
loop
call
jmp
scas
xchg
inc
sbb
fsubl
ljmp
inc
aam
test
das
mov
cwtl
xor
add
jge
inc
notb
out
and
add
add
mov
pop
inc
push
adc
adc
jne
push
adc
jb
cmp
inc
sbb
adc
and
mov
fimuls
mov
adc
outsl
and
and
ret
add
adc
cmp
push
rorb
mov
push
xor
dec
adc
add
clc
adc
sub
rolb
sub
adc
or
mov
push
pop
xor
adc
lea
sub
or
mov
xor
jns
es
adc
xchg
pop
and
adc
addl
dec
add
call
or
inc
faddl
mov
inc
adc
cmp
cmp
pop
adc
and
adc
rcrl
cmp
adc
sub
push
mov
xchg
push
ret
cmp
sbb
int3
movl
inc
xchg
int3
rolb
add
les
sub
xor
add
sub
mov
inc
sub
and
cmp
or
pop
add
jbe
adc
and
das
leave
or
push
inc
xor
leave
or
mov
test
and
ret
push
inc
aas
add
movl
popf
adc
das
add
adc
adc
push
adc
push
add
push
or
xchg
insb
xor
or
das
push
or
xchg
and
sub
add
xchg
xor
idivb
mov
jg
add
pop
add
add
jg
add
xchg
add
add
xor
inc
and
in
adc
shr
rolb
add
rolb
adc
add
push
add
out
das
shll
icebp
sub
addl
sbb
cmp
sbb
mov
and
xor
and
adc
dec
adc
jmp
xchg
and
inc
xor
pop
and
jnp
cmpb
adc
daa
pop
push
and
or
adc
fldl
and
je
mov
fdivr
and
xor
add
pop
cs
add
xchg
xchg
add
aad
orb
aam
inc
outsb
vmovsd
push
add
jmp
sub
je
xor
cmp
and
pop
xor
cmp
cs
aaa
fcoms
add
add
jmp
inc
sub
inc
xor
cmpb
sbb
xor
adc
enter
xor
das
in
or
cli
add
inc
push
in
and
xor
sub
push
pop
loopne
call
inc
in
pop
mov
sub
pushf
cmp
push
adc
mov
sbb
fadds
and
add
add
scas
es
adc
cmp
xchg
dec
cmp
adc
and
adc
sub
xor
or
cmpsb
push
or
adc
js
cmp
dec
aad
xor
add
fwait
xchg
das
and
cs
add
repz
sub
sub
and
and
sub
adc
cmp
je
xor
and
adc
andl
dec
inc
pop
adc
cmpsb
sub
adc
loop
cmp
jl
add
adc
cmp
jmp
mov
mov
jecxz
imul
and
mulb
cmc
sbb
popf
xor
ds
mov
pusha
js
scas
xor
ret
test
sub
adc
lods
stos
pop
ret
sub
adc
leave
test
les
and
test
sahf
xor
sub
and
and
daa
sub
adc
test
add
add
test
add
xor
adc
pop
jns
xchg
sub
add
ret
mov
fildl
es
and
test
in
fsubl
clc
push
push
adc
and
or
addr16
and
sub
sbb
addr16
mov
inc
adc
jne
jecxz
push
add
and
loop
loopne
adc
cmp
aas
xchg
add
add
sub
cmp
add
sbb
inc
add
jae
adc
ss
inc
add
out
adc
and
push
adc
mov
xor
add
or
addr16
and
sub
xor
push
adc
xor
push
adc
test
and
push
adc
hlt
or
add
cmc
and
shlb
in
push
adc
and
push
adc
push
adc
das
in
push
es
add
sbb
cmp
push
adc
aas
in
push
es
lock
movsl
dec
pusha
jae
in
push
sub
xor
add
in
push
adc
sbb
add
sub
mov
daa
in
push
xor
and
push
adc
in
push
cmp
lods
sub
ja
and
jle
test
popf
and
and
movsl
mov
rolb
cmp
cmpsb
add
movsl
pop
sub
les
or
add
pop
xor
js
and
movsl
shl
mov
xor
adc
xor
add
out
add
in
xlat
test
scas
stos
and
cmp
add
and
subb
or
xor
or
xor
lea
adc
orl
and
dec
mulb
add
popl
push
xor
mov
pop
xchg
aas
test
jmp
jo
and
and
xor
fiadds
sub
mov
imul
and
jne
movb
xchg
add
xor
jnp
adc
inc
scas
jmp
adc
add
xor
dec
inc
adc
and
test
adc
les
clc
and
xchg
adc
pusha
sub
jge
cmpsl
jns
or
add
ret
testb
jns
add
out
inc
out
in
fildl
and
fildl
fstpl
fsubrl
inc
rol
adc
mov
pusha
add
sbb
fldl
sub
dec
add
xor
add
adc
xor
loopne
repnz
cmp
push
add
and
add
push
add
les
push
leave
arpl
pop
adc
pop
and
push
out
adc
sub
adc
inc
pop
andl
sub
nop
add
gs
das
nop
add
lock
add
add
sub
add
into
and
fildl
fstpl
fsubl
and
adc
ds
add
add
push
add
pop
add
popf
clc
rorb
clc
add
dec
add
mov
pop
inc
or
xor
inc
repnz
add
cmp
sub
add
and
add
loopne
and
push
add
sub
dec
and
mov
sub
adc
mov
inc
mov
mov
and
fildl
fstpl
fsubl
and
adc
test
inc
test
pop
test
inc
test
mov
frstor
mov
add
sub
and
fldt
lods
or
xchg
add
test
jmp
stos
inc
movups
mov
adc
and
jg
or
inc
jo
mov
add
loopne
jae
add
push
xchg
adc
push
xchg
sbb
scas
cmpsb
cld
push
mov
cs
xchg
adc
ljmp
adc
fnsave
adc
and
adc
mov
xor
xchg
and
xor
add
adc
mov
loopne
and
pop
add
adc
cmp
xchg
and
sub
xchg
and
mov
sub
fnsave
and
xor
or
lea
sub
or
mov
negl
and
inc
sub
xchg
adc
sub
adc
in
adc
loop
in
or
xor
xchg
adc
inc
adc
imul
and
xchg
adc
mov
jecxz
add
daa
xchg
adc
add
xor
add
inc
enter
mov
imul
test
and
and
sub
add
adc
adc
adc
flds
sub
inc
sub
es
push
adc
xor
mov
aad
es
add
mov
das
aad
xor
push
adc
and
scas
sub
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
add
das
inc
add
mov
add
mov
xor
mov
add
mov
add
mov
add
mov
and
das
inc
adc
mov
add
mov
cmp
cmp
insb
xchg
ss
pop
sub
pushl
roll
and
xor
mov
adc
test
sbb
sub
cmp
clc
push
inc
sub
and
pop
and
sbb
jno
xor
or
sub
push
xchg
mov
cs
test
pop
imul
call
andl
mov
adc
hlt
xor
and
and
and
sub
leave
jecxz
push
pop
dec
add
inc
adc
cmp
push
addl
adc
jp
xor
add
sbb
adc
cmc
adc
and
adc
cs
adc
sbb
jge
mov
inc
es
outsl
and
daa
cmp
daa
pop
sub
dec
sub
mov
stos
add
fwait
add
mov
or
add
sbb
add
add
aad
and
xor
and
jno
adc
and
stos
ja
das
imul
add
mov
js,pn
inc
xor
mov
cmp
sub
adc
pop
add
sub
adc
popf
add
sub
adc
xor
sub
adc
add
ret
sub
cmc
add
sub
adc
in
cmp
xor
mov
test
adc
mov
out
inc
sub
xor
sbb
push
mov
xor
sub
xor
fsubl
push
xor
mov
cmp
adc
daa
filds
adc
push
jo
adc
sub
adc
daa
add
jo
adc
push
add
jo
adc
sub
xor
push
adc
lahf
and
loopne
and
adc
fs
adc
stos
add
dec
dec
repnz
adc
and
sub
mov
das
jne
sub
adc
fldl
pushf
and
fsubl
popa
and
adc
adc
sub
xor
push
add
xchg
and
pusha
mov
mov
and
and
cmc
sbb
xor
fistpll
movsl
adc
scas
mov
mov
adc
push
cmp
sub
sbb
push
sbb
fsubl
adc
jae
cmp
push
sub
inc
call
das
out
sub
and
int3
sub
add
imul
pusha
jp
jl
cmp
es
add
push
and
jbe
loopne
cmp
add
subl
adc
sub
sub
add
sub
add
xor
subl
adc
loop
das
and
xchg
cmp
add
shrb
add
stos
pop
cmp
adc
adc
inc
inc
adc
adc
xor
add
addl
addl
addl
and
and
xchg
add
addl
addl
addl
and
adc
inc
shl
adc
inc
add
mov
shl
addl
pop
out
add
xchg
dec
adc
sahf
and
push
scas
adc
ret
clc
xor
and
inc
add
inc
int3
push
sub
adc
adc
sbb
mov
mov
pop
add
inc
pop
adc
add
bound
ss
and
adc
cwtl
xor
and
or
and
dec
and
and
adc
inc
sub
rclb
add
jbe
and
xor
adc
shlb
inc
xchg
and
sub
sub
arpl
rorl
push
adc
sub
hlt
add
cs
adc
leave
ds
add
inc
add
sub
popa
jge
pushl
lods
sub
stc
add
and
add
lcall
sbb
push
cmp
xor
test
mov
dec
cmp
adc
mov
fsubrl
push
add
sahf
add
lods
fwait
andb
ret
dec
adc
mov
jne
sub
cltd
adc
push
sub
sti
cltd
and
adc
push
ret
push
adc
movsl
add
popa
add
xor
popa
add
int3
inc
push
mov
stc
sarl
and
and
gs
or
rcll
enter
xor
rolb
inc
clc
and
adc
add
loop
sub
pop
cmp
fldl
xor
add
xor
add
add
add
add
mov
fldl
xor
pusha
sub
add
sub
add
xor
push
and
ficoms
jne
sub
test
and
lahf
adc
lds
jge
fldl
jo
mov
cs
sub
sub
ljmp
adc
gs
mov
dec
add
mov
and
and
adc
je
clc
xor
pop
sub
cmp
adc
testb
popf
frstor
adc
inc
add
sahf
xchg
ret
mov
ds
fninit
inc
pop
adc
ja
es
popf
and
inc
in
adc
jo
xlat
and
hlt
adc
inc
outsb
adc
jo
pusha
dec
adc
or
jb
addr16
stos
inc
push
adc
mov
rclb
xorb
fdivs
xor
ret
jmp
fadds
mov
pusha
add
add
add
add
add
add
add
add
add
int3
rcr
int3
sub
add
mov
mov
cmp
push
je
add
cmp
ja
jmp
mov
mov
movl
ret
push
mov
or
xor
repnz
mov
pop
not
mov
mov
ret
mov
inc
dec
adc
inc
jl
mov
mov
ret
loopne
bound
adc
cmp
ja
je
cmp
je
cmp
cmp
adc
and
mov
add
popa
cmc
adc
mov
sbb
cmp
adc
cmp
test
incl
adc
nop
or
adc
js
add
inc
add
fadds
pusha
movups
adc
daa
add
pop
push
mov
push
mov
loope
ja
je
jmp
and
aam
sub
adc
rcrb
and
adc
xor
pop
pusha
cltd
sbb
fldl
fcompl
mov
adc
sbb
add
adc
or
xor
fstpl
pop
ret
sub
add
je
sbb
loopne
adc
rorb
mov
test
jg
and
cmp
and
cmp
insb
and
push
push
push
push
pop
lds
cmp
mov
mov
pusha
adc
mulb
and
and
decl
add
pop
sbbb
adc
xor
mulb
fs
inc
mov
sbb
inc
and
pop
mov
xor
mov
pop
sarl
je
sub
adc
cmp
pop
mov
es
inc
xchg
mov
pusha
xor
adc
xorl
sbb
push
add
push
add
das
inc
adc
cmpb
mov
add
push
inc
inc
adc
add
mov
loope
inc
sub
add
adcb
je
addl
adc
mov
test
adc
and
rolb
je
popa
repz
fldl
fldl
call
pusha
pop
adc
sbb
xchg
pop
and
sub
push
mov
push
mov
mov
and
add
inc
or
clc
add
push
lea
fldl
fcompl
add
popa
test
inc
je
push
scas
adc
outsw
inc
jp
fldl
adc
lea
adc
dec
adc
sbb
inc
insl
adc
dec
fstp
jne
pusha
sbb
fstpl
pop
pop
and
mov
or
fstpl
pusha
push
sub
add
popl
adc
add
or
popl
adc
push
inc
test
mov
fldl
adc
into
xorb
fstpl
daa
addl
inc
pusha
andl
les
jg
popa
in
xor
push
mov
jle
push
mov
inc
jno
sbb
movb
add
je
dec
jne
xor
jmp
or
jmp
and
dec
jne
xor
ret
arpl
inc
int
iret
add
test
adc
inc
clc
inc
sbb
adc
push
push
push
and
fwait
adc
inc
mov
adc
xor
pop
add
add
pop
add
add
pop
add
sub
pusha
mov
fs
mov
xor
lea
rep
mov
movl
test
mov
pop
addb
sbb
sbb
cmp
jge
mov
jmp
inc
or
jle
test
or
cmp
mov
adc
and
adc
xor
cmp
mov
jmp
cmp
rcrb
add
jmp
inc
sbb
or
jmp
sub
int
rolb
and
je
push
lea
push
push
stos
in
mov
call
adc
inc
or
push
adc
rclb
adc
jmp
pusha
repnz
push
hlt
ficoms
call
fwait
adc
xor
push
call
pusha
sub
push
inc
push
sbb
mov
pop
pop
add
popa
mov
pusha
pop
pop
pusha
loop
into
adc
add
in
or
shlb
sbb
inc
push
adc
and
adc
test
addr16
adc
or
push
inc
adc
sub
push
mov
inc
mov
addr16
aad
sbb
inc
adc
sbb
and
mov
or
into
add
jmp
adc
not
dec
pop
and
or
pop
inc
mov
pusha
mov
adc
adc
shl
xchg
inc
test
popa
or
notb
add
sbbb
aam
pop
add
adc
fldl
movsl
adc
fs
adc
loopne
or
adc
sbb
or
adc
mov
add
mov
push
and
dec
adc
adc
pop
adc
mov
inc
jbe
or
adc
push
js
insb
inc
xchg
adc
testb
outsl
adc
sarb
and
mov
das
inc
rcll
pushl
add
movl
pusha
dec
mov
push
mov
inc
xor
adc
push
mov
xor
test
setl
dec
and
mov
mov
popa
dec
and
pop
jg
or
leave
pusha
sbb
adc
dec
and
cmp
mov
jl
mov
cmp
jle
mov
adc
inc
sbb
mov
pop
ret
sub
push
cmp
pusha
add
jg
mov
std
mov
sub
inc
cltd
idiv
xchg
mov
push
or
sarb
popa
inc
adc
bound
pop
add
push
mov
push
mov
out
loopne
cmp
inc
fs
push
inc
int
xchg
inc
push
pop
mov
pop
mov
jo
test
jg
bound
adc
es
add
pop
cmp
inc
inc
adc
sub
add
stos
adc
inc
inc
sub
inc
or
push
andb
adc
inc
or
push
sbb
add
dec
js
cmp
jge
test
jle
lea
cmp
jle
sub
mov
add
das
xchg
add
jecxz
sub
add
inc
xlat
sbb
movb
mov
mov
sub
add
sbb
push
push
mov
push
test
andl
pusha
mov
adc
jae
sub
jmp
pop
pop
movsbl
pusha
push
adc
dec
inc
adc
inc
xchg
pusha
adc
adc
popa
and
pop
inc
jns
mov
pop
dec
pop
pop
pop
movsbl
cmp
add
inc
add
sub
inc
movups
inc
jb
sub
std
addl
or
and
jmp
sbb
mov
mov
mov
inc
mov
jbe
xor
fcomps
shlb
inc
ds
inc
sbb
fisttpl
setl
dec
and
mov
inc
xlat
adc
inc
push
sbb
cmp
jne
cmp
jle
cmp
jl
inc
jmp
sub
sbb
lock
sub
push
sbb
push
cmp
jg
adc
cmp
jl
inc
sbb
adc
stc
cmpb
popf
aas
adc
mov
inc
and
sbb
sbb
fs
pop
xchg
add
mov
cmp
jl
addl
jne
data16
push
push
dec
mov
inc
inc
inc
adc
inc
adc
adc
lods
adc
fiaddl
lea
jmp
mov
inc
mov
adc
cmpsb
jne
sub
add
das
addb
dec
add
test
je
inc
dec
inc
dec
cmp
pusha
call
jge
addb
jle
aas
orb
inc
mov
or
outsl
inc
ljmp
adc
loop
cmp
popl
adc
cs
add
push
push
repnz
mov
add
sub
inc
or
add
xor
xor
inc
movups
cmp
sub
add
adc
xchg
stos
dec
adc
test
inc
mov
cmc
cmp
das
adc
or
das
adc
in
adc
enter
test
je
sbb
or
stc
jp
pop
sub
std
insb
pop
or
or
je
inc
inc
pop
push
inc
test
jne
jmp
add
push
add
dec
cmp
pusha
dec
adc
dec
adc
and
add
sub
dec
add
and
adc
inc
adc
xor
ja
jmp
inc
xor
arpl
mull
inc
adc
daa
pop
add
inc
andl
hlt
fs
adc
aas
inc
and
sbb
insl
cmpsb
sbb
ret
mov
add
inc
add
add
test
add
mov
add
jecxz
cmp
adc
xor
add
push
inc
adc
in
adc
imul
inc
rclb
sub
xchg
inc
add
adc
pop
ret
cmp
jne
scas
adc
adc
adc
adc
int3
mov
shrb
mov
adc
inc
dec
jno
out
ja
mov
add
adc
mov
adc
jae
adc
pusha
xchg
jne
and
aad
cmp
push
inc
popf
adc
std
subl
into
adc
subl
mov
xor
aam
xor
adc
adc
sbb
sbb
fildl
cld
dec
or
or
repz
pop
inc
sub
imul
fildll
pop
fstpl
pusha
sbb
xchg
adc
arpl
xor
mov
pop
inc
std
adc
fildl
adc
sbb
adc
mov
out
stc
inc
adc
sub
push
mov
insb
push
dec
fists
jne
fildll
pusha
inc
dec
add
shlb
mov
stos
rolb
inc
mov
adc
push
adc
add
push
add
lret
sub
pop
adc
pop
add
lea
adc
pop
adc
arpl
test
adc
pop
adc
rcrl
loope
adc
inc
dec
adc
and
mov
popa
pop
popa
xor
xchg
mov
xor
push
movsl
adc
push
pop
mov
pusha
adc
adc
cmp
mov
pusha
and
adc
je
mov
push
adc
inc
push
sbb
push
pop
mov
pusha
and
fldcw
adc
xor
pop
adc
movb
or
adc
mov
sub
xor
add
xchg
sbbb
addr16
fs
adc
add
roll
add
adc
sub
movzbw
adc
mov
mov
inc
push
daa
or
adc
sub
or
push
mov
or
mov
inc
and
adc
push
loopne
sub
add
shrb
sub
add
daa
xor
add
adc
test
mov
test
jg
pop
test
cmp
add
push
add
inc
push
loopne
popa
sub
addr16
mov
xor
push
cmpb
sub
adc
popa
sub
es
add
cs
adc
andl
and
add
adc
sub
add
push
adc
xchg
push
push
push
mov
push
inc
jecxz
and
aad
gs
pusha
or
lock
mov
add
in
mov
inc
dec
dec
adc
cmp
out
adc
pop
pop
adc
and
je
cmp
jne
cmp
jne
test
imul
add
sbb
pop
adc
and
push
adc
inc
dec
sbb
rorb
push
and
mov
test
je
cmp
jne
cmpb
jne
dec
dec
iret
and
and
xor
je
jmp
cmp
jne
daa
push
add
jmp
inc
imul
sbb
add
mov
mov
mov
movb
jmp
mov
outsl
add
subb
inc
and
je
mov
push
adc
inc
mov
add
enter
shll
inc
stc
adc
jmp
inc
rclb
push
inc
cmc
adc
sbb
adc
adc
ffreep
lret
adc
adc
adc
inc
inc
push
sbb
ficomps
mulb
lock
jae
push
test
mov
je
mov
adc
adc
adc
and
cli
and
adc
inc
popa
jl
push
enter
pop
adc
cmp
jmp
inc
add
mov
pusha
pop
adc
push
adc
xor
pop
adc
cs
add
sub
push
dec
and
push
test
dec
adcb
jne
inc
adc
dec
es
pop
mov
outsb
xor
mov
inc
jno
pop
and
xor
adc
rorb
shrb
roll
adc
mov
shlb
inc
pusha
lret
adc
inc
cmp
inc
mov
dec
out
decl
xchg
ret
pop
dec
jl
dec
adc
xor
mov
mov
mov
sub
unpcklps
repnz
mov
pusha
sbb
test
inc
inc
adc
je
in
je
adc
decb
shll
inc
insl
and
pop
adc
inc
pusha
adc
push
push
iret
add
sub
cmp
dec
cmp
adc
mov
add
popa
cmpsb
adc
push
xchg
and
inc
lret
dec
pop
mov
mov
xor
repz
inc
lret
adc
jne
test
inc
notb
push
popa
test
add
sub
cmp
pusha
push
adc
inc
aas
push
inc
je
jmp
mov
inc
jmp
sbb
sub
adc
inc
imul
inc
dec
jmp
push
inc
push
adc
andb
inc
dec
pusha
cmp
cmc
jge
add
xchg
pusha
xchg
inc
data16
push
push
movb
arpl
insb
sub
adc
inc
push
inc
ds
or
sub
outsl
or
sbb
dec
adc
mov
inc
lock
popa
lods
adc
call
add
cmpsb
push
and
mov
ficoms
cmp
xchg
jno
adc
adc
mov
popa
stos
and
mov
sub
push
push
push
mov
out
movsl
cmp
mov
jl
pusha
dec
loope
inc
xor
push
and
xchg
xchg
jne
add
pop
arpl
inc
xchg
aad
stc
incl
adc
sub
sbb
je
jmp
testb
je
mov
rcll
sbb
adc
inc
pusha
sbb
rorb
cmp
jge
cmpb
je
pusha
inc
xchg
cmp
sbb
shr
shl
lea
inc
enter
aas
and
sub
jmp
mov
adc
inc
aaa
add
neg
mov
lea
sbb
mov
and
shr
lcall
rep
inc
sub
and
daa
lcall
mov
mov
call
filds
mov
adc
push
dec
leave
adc
sti
add
mov
push
add
cmpsl
mov
push
adc
scas
inc
cld
inc
jge
sbb
inc
inc
sbb
je
push
inc
mov
pop
push
stc
adc
cmp
mov
outsb
mov
jecxz
adc
xorb
adc
out
adc
insb
xor
fmuls
inc
pusha
pusha
orps
mov
push
inc
cmp
cmc
jbe
adc
sub
stos
dec
adc
incb
pop
popa
adc
add
push
lea
push
mov
mov
mov
mov
and
les
push
adc
push
adc
add
add
stos
inc
outsb
incl
fs
adcb
or
loopne
adc
cld
mov
jl
cmp
jle
push
inc
sbb
adc
fs
lret
notb
jmp
cmp
pusha
or
adc
dec
cmp
pusha
or
adc
inc
cmp
pusha
or
adc
xor
incl
pusha
or
adc
sub
adc
decl
inc
or
push
test
adc
rol
and
aam
orb
adc
mov
inc
or
sub
adc
movups
je
shr
jne
cmpb
push
mov
add
add
fucomi
or
adc
add
sub
insb
outsl
adc
sbbl
cmp
jge
xor
cmp
inc
cmp
sbb
add
jle
mov
je
adc
in
mov
xchg
mov
andb
popa
mov
fldcw
fldenv
leave
je
cmpl
je
insb
xor
sbb
call
cmp
dec
addb
and
pop
or
pop
mov
pop
pop
mov
sbb
adc
adc
add
dec
or
inc
add
push
and
test
jge
cmc
adc
push
pop
in
imul
sbb
dec
cltd
adc
sub
adc
aas
adc
aas
adc
inc
xor
icebp
test
pop
inc
inc
adc
pusha
inc
sbb
mov
sub
push
lea
cmpsb
mov
shll
ljmp
inc
xchg
pop
push
push
mov
push
add
dec
adc
std
adc
mov
fs
bound
jl
mov
xchg
iret
push
fiaddl
adc
jne
dec
jns
xor
sub
test
jle
pop
jl
sub
adc
jge
nop
rcrb
lock
or
add
push
adc
test
popa
jns
jle
lock
or
sbb
bound
mov
jno
adc
push
test
adc
lock
cmp
fdivrs
icebp
jo
adc
pushf
lock
mov
sub
inc
inc
cwtl
adc
jo
pusha
sub
inc
dec
cmp
sbb
je
add
cmpsl
lret
sub
mov
rorb
and
movups
daa
adc
inc
inc
adc
jb
adc
scas
adc
inc
pushf
adc
adc
cmpsl
push
inc
or
iret
dec
cmp
inc
mov
enter
mov
rclb
adc
mov
inc
unpckhps
mov
sub
inc
or
iret
and
adc
inc
test
mov
loopne
je
mov
mov
add
push
push
push
push
inc
push
stos
pop
cmp
jmp
test
jle
adcb
adc
out
xorl
and
dec
into
cmpsb
test
outsb
out
cmc
inc
in
nop
or
cmp
fs
adc
fs
adc
into
push
pop
add
jp
shr
idivl
jb
pop
or
into
test
pop
xchg
jle
pop
daa
xchg
adc
outsb
je
mov
adcb
mov
jne
cmp
repnz
dec
inc
scas
dec
mov
adc
stos
mov
xor
mov
push
push
lret
adc
ja
xchg
or
inc
add
or
push
pusha
inc
adc
mov
inc
fs
adc
and
mull
cmp
add
pusha
arpl
sub
push
inc
pop
jl
jl
inc
or
cmpsb
add
mov
jne
xor
cmp
xchg
shr
pop
and
mov
inc
fsts
mov
fs
sbb
fsubrs
push
inc
adc
adc
push
inc
adc
loopne
add
ret
test
jne
mov
adc
add
adc
inc
xor
hlt
cmc
inc
jbe
or
inc
cmp
mov
jmp
cmp
adc
fists
sub
sbb
xchg
inc
adc
inc
add
sbb
inc
sbbb
inc
pop
stos
adc
js
js
xchg
test
adc
cmp
add
push
push
mov
repnz
fistl
inc
inc
cmp
arpl
adc
inc
in
jb
and
adc
adc
adc
adc
lcall
adc
mov
dec
cmp
mov
cli
adc
push
adc
push
inc
je
adc
push
inc
mov
lahf
xchg
int
pop
pusha
pop
pusha
lds
das
gs
testb
insl
and
std
pop
jge
or
pusha
or
cmpsl
rorb
adc
rorb
pusha
or
sti
rorb
adc
pusha
and
adc
pusha
dec
fs
pop
lea
cmp
ja
ss
lcall
jmp
lea
in
adc
pusha
pop
pusha
lret
adc
or
dec
xchg
or
push
inc
sub
je
sbb
adc
inc
and
pusha
int3
adc
arpl
adc
fs
adc
and
adc
adc
mov
adc
push
pusha
ljmp
adc
jne
inc
jb
outsl
adc
bound
pop
adc
pop
jmp
je
lea
mov
call
push
jl
fs
inc
inc
and
adc
adc
adc
add
or
movsb
ds
cli
jg
dec
add
neg
pusha
cmp
pop
dec
std
adc
adc
dec
inc
dec
adc
or
popa
leave
add
dec
add
push
add
jl
inc
adc
xor
cmpb
jmp
test
jl
orb
adc
jl
xor
insb
xchg
inc
add
scas
sub
inc
push
adc
pop
pop
out
adc
pusha
push
push
mov
cmp
add
inc
inc
add
int3
inc
add
xlat
inc
add
cltd
inc
add
add
les
es
adc
adc
pop
cmpsb
xchg
sub
push
mov
inc
flds
adc
mov
mov
mov
mov
mov
mov
pop
scas
inc
ficoml
ret
or
das
add
ret
add
sbb
inc
aam
xor
bound
push
push
push
xorb
bound
das
sbb
and
cltd
sbb
sub
push
notl
and
pop
pop
dec
mov
or
adc
aaa
outsl
inc
or
scas
sub
jne
cmpsb
mov
inc
rcll
and
and
out
ljmp
das
adc
adc
pop
gs
adc
mov
adc
xorl
dec
call
and
sub
lea
movb
in
adc
fcmovne
pop
rclb
adc
adc
adc
adc
imul
lock
jge
lea
mov
inc
dec
adc
jle
push
push
inc
sub
adc
xor
ffreep
or
cmc
inc
out
adc
and
repz
pop
add
fcompl
adc
hlt
pop
negl
adcb
adc
add
loop
push
inc
loop
popf
adc
shl
insl
sbb
mov
xor
push
cmp
push
inc
and
sub
je
dec
add
cmp
imul
and
add
adc
jle
push
and
adc
or
push
and
addl
orb
add
and
pop
xor
dec
cmp
ja
push
adc
fs
inc
add
lahf
stos
adc
mov
jmp
mov
adc
adc
in
adc
inc
icebp
adc
add
or
jmp
or
jmp
or
jmp
or
lret
cmc
cmp
xchg
adc
jb
adc
xchg
bound
inc
jmp
stos
dec
mov
enter
imul
mov
xor
sub
add
cmp
sub
pusha
and
push
dec
dec
scas
adc
pusha
dec
adc
aaa
dec
and
and
ja
sbb
or
push
push
inc
in
call
xchg
adc
push
push
push
je
mov
bound
sbb
cmp
je
mov
push
pusha
xor
mov
das
and
sub
sbb
pop
adc
mov
push
loope
lahf
mov
and
hlt
adc
inc
pop
adc
inc
add
sbb
adc
inc
add
aaa
inc
add
cmp
add
stos
popa
adc
inc
mov
adc
lsl
adc
pop
arpl
adc
inc
push
adc
add
frstor
dec
and
lahf
and
adc
dec
loopne
test
pop
mov
and
rclb
bound
jmp
mov
mov
mov
adc
add
adc
xor
arpl
popa
inc
xor
add
negb
loope
add
icebp
add
inc
pusha
push
mov
mov
sub
mov
inc
les
mov
jl
adc
repz
lea
hlt
jo
adc
sarb
ljmp
loope
dec
dec
adc
test
fnstsw
aaa
pop
mov
jne
lea
mov
iret
arpl
sbb
push
xor
dec
call
inc
mov
mov
sbb
mov
add
inc
fiaddl
test
jle
push
sarb
dec
int
je
push
add
pop
adcb
call
mov
mov
dec
or
adc
call
or
mov
lea
cmp
jae
mov
adc
cmp
je
xchg
adcl
mov
add
sub
inc
mov
inc
aaa
adc
jmp
adcb
mov
cmp
xchg
adc
adc
push
dec
lea
push
sub
or
addb
mov
sub
adc
cmpsl
inc
xchg
cmpb
call
add
xor
into
adc
mov
push
push
into
dec
out
inc
pusha
sub
add
rcr
movl
in
adc
mov
call
inc
mov
mov
call
jnp
imul
push
call
adc
jb
adc
jmp
call
and
xor
adc
int
adc
push
outsl
outsb
adc
test
adc
push
push
call
push
mov
adc
adc
mov
scas
or
lds
and
jo
push
inc
sbb
push
jne
jbe
adc
dec
lds
adc
mov
pop
inc
pop
adc
fsub
push
fsub
mov
xchg
or
adc
insl
pusha
adc
jo
adc
and
adc
mov
push
adc
and
es
and
mov
sbb
lret
fstl
push
jo
adc
lea
imul
mov
mov
xor
and
clc
and
adc
pushl
pop
addr16
adc
fcompl
add
dec
popf
inc
andb
push
jne
and
lahf
insb
pop
adc
push
push
fcoml
adc
and
and
pusha
sbb
mov
push
ds
add
pop
adc
adc
pop
shrb
and
pop
adc
das
int3
add
mov
ret
adc
outsl
stc
adc
ljmp
adc
push
xor
push
push
mov
adc
mov
icebp
inc
sub
add
add
push
call
adc
test
sbb
sbb
adc
lea
and
push
push
push
push
inc
push
je
adc
shll
adc
das
inc
push
and
adc
andl
jmp
inc
mov
cltd
adc
cmp
sub
test
adc
jne
or
ja
adc
cmpsb
inc
cmc
testb
test
ficoms
sub
adc
pop
test
cmp
je
inc
xchg
insb
rclb
dec
pop
pusha
and
push
push
pusha
xchg
adc
data16
aad
and
mov
adc
and
adc
pop
rcrb
adc
mov
adc
inc
push
adc
and
adc
sub
add
pusha
adc
es
add
and
dec
adc
daa
adc
test
sub
movl
cwtl
inc
cmp
je
lods
adc
sbbb
jne
sub
add
push
xor
imul
clc
pop
inc
adc
adc
xchg
cmp
jne
cld
adc
pusha
and
push
call
inc
push
adc
mov
mov
push
and
and
mov
lds
sbb
cmp
dec
and
mov
inc
or
add
sbb
cmp
pusha
scas
adc
adc
shll
subb
cmp
cmp
dec
add
dec
adc
dec
mov
icebp
pusha
mov
sbb
add
lea
lea
and
adc
inc
cltd
bound
sbb
bound
jne
inc
adc
adc
pop
inc
sbb
je
and
jmp
inc
adc
adc
inc
inc
adc
dec
sbb
je
dec
jne
mov
and
sub
adc
sbb
jmp
mov
jmp
mov
and
inc
inc
sub
adc
mov
insb
sub
adc
cmpsb
sbb
pusha
ret
lea
cmp
addb
out
add
das
add
sub
or
or
xor
xor
outsb
adc
arpl
adc
jnp
sub
movl
mov
push
or
inc
sub
xor
adc
push
inc
rolb
adc
mov
sbb
push
and
jecxz
adc
add
loop
xor
adc
adc
jp
mov
out
icebp
pop
push
cwtl
adc
mov
push
jmp
push
ljmp
push
push
xchg
jb
inc
and
push
xor
adc
push
adc
jmp
sahf
jno
jne
daa
mov
je
adc
shll
adc
push
and
and
jmp
cmp
jae
xchg
out
adc
xchg
adcl
daa
sub
adc
and
inc
adc
dec
faddl
sbb
popf
add
adc
fs
xor
or
cmc
add
test
and
xor
adc
push
leave
es
adc
or
lret
and
xchg
sbb
push
or
adc
movsl
xchg
jne
cwtl
jle
hlt
adc
and
sarl
dec
lods
fists
and
adc
jmp
push
pusha
call
and
call
add
inc
and
or
sub
scas
xor
adc
jg
scas
popa
cmp
and
cs
cmp
sub
xchg
mov
subb
scas
cmpsb
aas
popa
or
jbe
xchg
adc
cltd
insl
mov
mov
inc
popf
inc
pushf
and
adc
adc
push
mov
jae
es
adc
xor
jae
repz
mov
push
jmp
cmp
sub
or
call
dec
enter
inc
sbbb
pop
adc
inc
xchg
adc
subl
mov
add
adc
push
sbb
not
and
lea
push
push
push
and
sub
test
inc
mov
adc
xchg
sub
ret
data16
adc
dec
js
pusha
adc
add
loopne
adc
shlb
push
loopne
adc
shlb
pushl
mov
pusha
adc
pop
xchg
ret
loop
mov
mov
and
sub
mov
scas
addr16
adc
ja
inc
push
adc
stos
and
xor
add
xchg
adc
and
shlb
or
xor
inc
or
xchg
inc
cmp
lahf
inc
add
mov
add
stos
xor
add
push
sub
push
lea
and
or
inc
pop
push
mov
lea
cmp
adc
and
sub
loop
push
adc
nop
jnp
pop
repz
out
push
add
cs
push
push
adc
mov
je
push
jp
jge
adc
bound
inc
sbb
inc
adc
cmpsl
inc
notl
adc
adc
inc
call
insb
dec
outsb
fadds
cmc
or
scas
fwait
add
adc
lea
push
outsb
in
negb
outsl
ret
repnz
push
inc
pop
inc
and
lea
fists
notb
pusha
pop
adc
arpl
sub
add
add
notb
or
adc
adc
insb
adc
inc
sbb
push
loopne
imul
and
lea
sbb
sbb
lea
add
push
push
adcb
fwait
jns
sbb
loopne
dec
sub
mov
mov
push
xchg
mov
mov
mov
in
rolb
adc
subb
adc
adc
call
inc
sbb
push
sub
das
into
or
inc
inc
pop
pop
add
enter
sbb
sub
add
out
sub
xor
sub
sub
push
cltd
adc
ds
addr16
and
ds
rcll
incl
adc
inc
aas
adc
cmp
add
imul
add
dec
xchg
adc
push
cwtl
push
and
and
popf
cs
adc
jmp
daa
adc
bound
mov
xor
add
adc
leave
and
xor
mov
inc
push
mov
nop
and
in
inc
inc
test
and
ds
xor
imul
adc
push
push
and
and
ss
push
mov
cmpsl
adc
inc
push
loopne
adc
inc
mov
xchg
shlb
adc
push
inc
xor
inc
sbb
add
push
adc
add
sub
dec
adc
mov
les
loopne
adc
push
adc
mov
adc
cmpb
xor
es
adc
xor
adc
pusha
xor
pusha
jle
insb
sub
adc
sbb
je
adc
dec
push
lea
sub
inc
jl
xchg
adc
dec
ja
pusha
es
adc
push
imul
add
pusha
gs
aam
pop
adc
sbb
pop
push
inc
adc
ds
test
adc
adc
mov
adc
mov
pop
inc
inc
adc
push
sub
push
mov
mov
push
push
and
dec
dec
adc
dec
adc
dec
adc
rep
jne
xchg
mov
and
cmp
inc
jo
ljmp
scas
push
xor
dec
leave
jmp
mov
pusha
sbb
xor
adc
es
popa
je
inc
pop
test
pop
je
mov
and
adc
sbb
push
dec
xor
test
setne
jae
push
les
repz
push
adc
dec
repnz
adc
lahf
adc
popa
push
call
and
es
les
das
scas
sbb
das
add
testb
xor
das
imul
outsl
insb
and
push
inc
push
adc
push
sarb
adc
sbb
adc
sub
adc
leave
sub
add
dec
das
ret
pop
in
adc
sub
cmpsb
dec
sbb
xor
xor
cmp
jle
pop
les
lock
jecxz
pusha
xchg
add
adc
xlat
pop
lea
lea
mov
sub
pop
or
movl
adc
adc
mov
pop
sbb
mov
mov
mov
inc
dec
aas
pop
add
dec
jne
mov
adc
out
jle
adc
push
push
push
and
imul
mov
and
mov
and
and
push
pusha
dec
adc
push
mov
mov
adc
std
adc
adc
mov
and
adc
dec
mov
push
push
mov
pusha
push
insb
xlat
jmp
jle
mov
sbb
adc
or
adc
push
sarb
data16
adc
inc
pop
xchg
adc
ja
and
sbb
xchg
adc
mov
adc
inc
or
adc
adc
pusha
adc
pusha
push
pop
imul
pop
add
pusha
push
inc
jns
mov
sub
xor
sub
push
popa
jbe
or
adc
push
add
jnp
inc
add
adc
and
inc
and
and
cmpsl
adc
dec
add
pusha
dec
adc
and
sub
inc
or
and
jmp
pusha
cmp
adcl
inc
outsb
adc
adc
inc
dec
adc
rcrb
jge
adc
shlb
adc
pop
pop
popa
xchg
dec
pusha
and
adc
inc
push
popa
pop
pop
dec
leave
adc
inc
xor
sbb
or
sbb
adc
mov
pop
inc
add
incb
adc
add
sub
adc
adc
add
jae
add
lea
sub
pop
push
xor
mov
movl
pusha
jbe
inc
adc
je
and
jle
jmp
cmp
jne
mov
sbb
adc
dec
adc
adc
call
mov
adc
mov
mov
adc
enter
es
adc
mov
and
sub
adc
jmp
ss
and
push
ss
cmc
push
lahf
mov
mov
arpl
fsubs
adc
lahf
push
mov
ret
sub
adc
and
in
adc
daa
inc
add
jne
and
sub
lock
adc
shll
push
push
push
push
push
enter
mov
xor
inc
sbb
movaps
jle
adc
das
aaa
arpl
adc
and
stc
and
sbb
and
adc
es
or
inc
and
add
sub
fisubs
pop
sub
sbb
xor
push
inc
dec
adc
and
jnp
insl
pop
adc
pop
sbb
adc
dec
lods
inc
xchg
adc
dec
push
sub
or
das
add
xor
and
push
call
adc
mov
pop
mov
mov
and
in
adc
sbb
es
push
adc
and
xor
dec
adc
movsb
dec
add
cmp
push
adc
mov
or
adc
imul
faddl
adc
pop
pop
adc
stc
inc
jmp
mov
orb
inc
imul
jbe
pop
inc
cmp
jle
mov
pop
and
and
or
mov
rorb
mov
and
movl
inc
sbb
pop
ret
pop
mov
push
dec
mov
cmp
and
adc
mov
push
push
call
and
jne
and
adc
xor
jbe
and
insb
push
test
sbb
sub
cltd
inc
idiv
add
sub
adc
cltd
idiv
and
sub
mov
inc
cmp
jle
xor
pop
test
pop
pop
sete
popa
aaa
sbb
fistl
mov
test
je
enter
sldt
cmp
je
inc
add
and
cmp
pop
mov
mov
and
es
adc
inc
jnp
int3
pusha
pushf
adc
jl
xchg
adc
lahf
and
ds
ficoms
xor
sub
fcoms
adc
bound
jae
scas
adc
adc
enter
pop
inc
dec
adc
inc
dec
adc
ret
imul
add
aas
mov
push
adc
xor
mov
mov
inc
pushf
adc
inc
ds
pop
adc
adc
jne
adc
inc
leave
push
dec
cmp
jne
jl
inc
mov
clc
pop
dec
pusha
js,pn
adc
or
sbb
adc
jne
mov
lret
sbbb
leave
sub
jmp
push
dec
adc
dec
shlb
rcr
adc
addr16
adc
inc
jns
scas
adc
test
js
adc
rorb
adc
adc
adc
jl
mov
and
dec
adc
inc
test
decl
push
jno
cmp
ja
rorb
or
and
push
mov
mov
inc
pushf
pop
sbb
mov
mov
mov
mov
jmp
sub
inc
pusha
or
and
adc
pop
addr16
in
inc
mov
inc
and
jmp
rclb
aam
inc
outsb
adc
mov
jbe
loopne
jo
data16
call
sub
and
aam
dec
in
jmp
inc
pop
adc
aaa
adc
inc
or
adc
inc
aas
inc
test
pop
lea
je
cmp
pop
mov
lea
and
adc
jno
adc
and
jge
xor
mov
orb
and
adc
and
adc
test
adc
adc
xchg
mov
adc
sub
popa
xchg
adc
and
and
je
adc
mov
mov
inc
adcb
adc
leave
adc
push
cli
bound
popa
cmpsl
adc
addr16
faddl
adc
mov
adc
xchg
mov
orb
sbb
and
adcb
dec
cltd
arpl
inc
aaa
mov
mov
mov
rorb
mov
mov
pusha
sbb
add
test
jne
dec
dec
daa
fstps
rolb
adc
add
and
xchg
adc
aaa
adc
fidivl
jmp
inc
pop
adc
push
or
adc
test
inc
mov
pusha
ja
imul
pusha
xor
adc
mov
push
decl
adc
cmp
add
jmp
mov
dec
adc
and
sbb
cmc
dec
hlt
lea
and
push
jae
jl
inc
add
inc
add
mov
pop
adc
inc
add
movsl
inc
add
ret
inc
add
loope
add
or
pop
dec
inc
pop
add
add
add
add
add
or
add
inc
add
add
adc
nop
insl
inc
daa
adc
cld
adc
mov
add
pusha
add
and
adc
adc
add
ret
shlb
pop
adc
fldl
adc
inc
pop
adc
inc
pop
xchg
adc
adc
loop
test
pop
add
cli
sub
adc
dec
inc
popf
adc
pop
mov
adc
and
push
adc
iret
push
and
pushf
dec
lea
adc
and
adc
movsb
and
sbb
mov
sub
sub
adc
xor
jp
sub
add
nop
rolb
andb
adc
xchg
cwtl
adc
es
add
lahf
and
adc
xchg
xlat
jecxz
lock
adc
orb
dec
dec
mov
test
sete
mov
sub
and
inc
adc
test
je
dec
ficoml
push
mov
inc
dec
adc
movl
push
call
cmp
jb
and
pop
shlb
push
sub
adc
pop
outsl
pusha
icebp
and
adc
and
sbb
enter
and
and
pop
or
mov
cmpb
je
jge
add
mov
fcoms
inc
push
lcall
adc
inc
lods
insl
sbb
and
out
adc
inc
lea
sub
adc
subl
inc
pusha
adc
adc
test
and
xorl
add
test
mov
and
clc
lea
push
sbb
push
hlt
push
push
inc
call
adc
out
mov
push
push
adc
call
int
jl
data16
mov
lea
push
push
mov
cmp
call
inc
movsb
adc
shr
jmp
push
inc
rclb
shlb
pushf
xor
adc
rcl
and
jb
inc
or
aam
mov
adcl
and
push
mov
inc
cltd
and
and
rclb
fiaddl
adc
mov
adc
push
adcb
fcompl
pop
call
cmp
jne
lea
lea
push
mov
jecxz
call
inc
adc
mov
adc
adc
mov
mov
gs
adc
pop
outsl
inc
sub
adc
dec
and
sub
add
adc
jo
and
decb
inc
add
and
cmp
push
mov
jae
or
pop
or
pop
pop
ret
inc
adc
pop
adcb
out
adc
adc
jne
mov
push
cli
adc
int3
inc
inc
jne
push
adc
inc
push
and
pop
test
or
rcrb
sbb
push
push
and
dec
cs
add
sbb
xchg
jns
adc
push
lea
adc
push
push
push
mov
sub
call
mov
pop
jl
push
jnp
hlt
sbb
push
mov
inc
lock
cltd
adc
aas
add
inc
sub
into
call
call
inc
xor
add
jl
inc
jns
xor
jmp
mov
jmp
cmp
push
adc
outsb
xchg
adc
jmp
loope
fs
mov
or
mov
inc
push
sbb
cmp
ja
dec
enter
inc
jl
adc
dec
adc
rol
inc
adc
and
add
dec
rolb
push
rolb
pop
add
add
or
lahf
add
ljmp
sbb
mov
shr
aad
cmc
pusha
lea
pop
add
and
jge
mov
mov
jne
ret
adc
mov
adc
rcrb
inc
outsb
and
mov
or
mov
call
xor
inc
adc
mov
jne
mov
adc
je
mov
mov
mov
inc
pop
addr16
jno
inc
pop
pusha
xor
outsl
adc
mov
xchg
cld
inc
push
adc
adc
mov
sub
add
cmp
push
je
and
sub
push
cmp
mov
adc
and
push
adc
outsl
mov
push
adc
popa
and
pusha
and
or
adc
and
inc
adc
dec
cltd
pop
adc
inc
and
sbb
add
pop
inc
or
push
cmp
or
and
cmp
push
and
jmp
cltd
adcl
and
cmp
pop
roll
adc
lock
loopne
mov
jns
aad
dec
and
ja
je
lds
cmp
fimuls
adc
leave
cmp
mov
setne
xchg
mov
daa
mov
adc
mov
sbb
xchg
xor
repz
clc
mov
jmp
and
popa
pop
jmp
adc
je
push
push
rclb
test
adc
roll
mov
cmp
out
adc
jnp
daa
mov
inc
and
inc
pop
adc
sbb
into
adc
das
mov
inc
push
and
dec
mov
and
pop
das
adc
les
add
adc
adc
adcb
mov
dec
or
clc
lea
adc
mov
inc
or
pusha
je
rcr
es
ja
cmp
je
mov
push
xchg
push
add
pusha
mov
sbb
adc
push
in
dec
adc
mov
mov
jmp
flds
inc
push
adc
sbb
sub
mov
cmp
adc
inc
lret
push
mov
frstor
lret
adc
sbb
dec
cmpsl
sbb
mov
je
gs
ret
ret
das
adc
aas
adc
sbb
test
je
movw
mov
cli
popa
fwait
and
dec
push
adc
sahf
dec
lock
cmp
movl
ss
fcoms
jne
stc
or
mov
mov
lea
inc
push
call
call
inc
fwait
adc
push
adc
fildl
push
ljmp
add
adc
xlat
inc
push
pop
mov
pop
adc
mov
push
xor
mov
push
mov
mov
mov
mov
cmp
mov
mov
mov
mov
jne
insl
cmc
add
sub
mov
adc
pop
jge
add
sub
push
in
adc
adc
lea
inc
rcll
scas
mov
lea
push
pusha
ret
adc
call
pusha
ret
inc
sbb
test
dec
mov
inc
in
adc
push
push
dec
inc
adc
fidivrs
adc
dec
or
push
test
adcb
adcb
and
sub
dec
mov
ss
je
dec
push
inc
sbb
cmp
jge
movw
loope
dec
test
or
or
jmp
inc
or
adc
sub
stos
jmp
inc
movups
inc
movups
pop
adc
inc
sbb
push
push
inc
add
pop
mov
xor
lea
pop
add
testb
cmp
je
lea
dec
cmp
push
lea
inc
add
clc
mov
push
dec
mov
int3
and
ficomps
adc
out
sbb
inc
add
cmp
jb
and
notb
std
and
mov
jl
dec
or
mov
mov
movswl
inc
scas
sbb
mov
mov
mov
inc
addb
sub
cmp
je
pop
mov
je
and
pop
loopne
push
adc
lock
inc
rcll
jne
inc
dec
adc
rorb
xchg
adc
and
and
adc
push
lds
adc
cmp
je
cwtl
adc
test
adc
inc
or
fildl
adc
mov
in
inc
loopne
jle
push
add
or
lea
cmpl
jne
dec
sub
mov
mov
mov
cmp
jle
lods
and
and
js
cmpl
and
push
adc
loop
rclb
xchg
mov
mov
inc
or
inc
call
jno
adc
dec
adc
add
sbb
adc
fmuls
sub
sti
adc
ret
mov
mov
add
dec
mov
mov
mov
mov
mov
mov
dec
adc
ja
popa
mov
js
pop
or
repz
sub
into
inc
rcll
inc
push
into
mov
and
add
ret
mov
shl
mov
lea
mov
test
je
lea
clc
adc
popa
pop
adc
inc
mov
adc
outsl
and
sub
push
cwtl
mov
inc
or
push
test
lea
movl
lea
inc
mov
mov
mov
lea
xor
fmuls
adc
mov
imul
mov
out
dec
adc
jne
inc
lds
or
push
cmp
add
clc
jno
out
adc
test
dec
imul
adc
shr
fucomp
ss
and
and
dec
mov
mov
push
lock
sub
push
inc
adc
push
pop
adc
testl
lods
adc
and
adc
test
data16
and
and
sub
dec
jne
mov
inc
aam
sbb
pop
mov
mov
push
mov
inc
nop
adc
and
movl
adc
jb
adc
inc
data16
adc
and
and
je
and
jne
sub
or
mov
mov
test
mov
inc
outsb
adc
arpl
push
dec
dec
jne
mov
inc
lea
daa
les
adc
push
push
push
inc
mov
xor
pop
cmpb
adc
xchg
add
adc
adc
add
loopne
adc
cmp
and
aaa
adc
aaa
adc
adc
pusha
lcall
add
add
adc
or
sbb
adc
mov
mov
pop
and
adc
add
dec
adc
mov
adc
pop
add
mov
fiadds
mov
dec
je
rorl
adc
add
xchg
adc
inc
mov
push
mov
sub
add
add
addb
inc
inc
dec
mov
adc
pop
mov
fsub
xor
add
les
and
xor
roll
icebp
adc
jnp
jge
mov
mov
jmp
sarl
je
sarl
loope
adc
inc
nop
rcll
jmp
xorl
pop
adc
aaa
sbbb
jmp
shll
fs
sub
fs
jo
adc
rcrl
push
repnz
sti
inc
scas
sub
jge
add
test
dec
xor
add
dec
mov
mov
and
adc
insl
mov
jne
dec
daa
mov
add
call
jmp
inc
icebp
adc
or
push
mov
inc
mov
jmp
cmp
je
or
inc
cmpsb
stos
pop
adc
pop
cmp
adc
jnp
cltd
xchg
adc
adc
bound
xor
mov
adc
and
imul
mov
inc
sbb
jge
inc
sub
sub
add
cmp
mov
inc
push
fs
adc
jge
sub
sub
inc
xchg
adc
les
mov
inc
test
or
adc
push
test
adc
inc
adc
popf
adc
push
hlt
inc
insl
adc
adc
push
add
test
fadds
inc
test
cmp
adc
je
inc
mov
je
mov
and
adc
inc
adcb
fists
cmp
out
push
push
adc
pop
sbb
adc
mov
mov
test
and
dec
dec
inc
mov
push
bound
sub
lahf
mov
adc
sarb
pushf
mov
mull
pusha
adc
adc
jle
adc
stos
rorb
cmc
pusha
movlps
add
movups
pusha
movlps
pop
loopne
adc
pusha
movups
fcmovb
movups
pusha
movups
pop
repz
icebp
pusha
movlps
cmp
adc
dec
movsl
adc
sete
add
mov
inc
mov
xchg
jle
inc
inc
in
fadds
rolb
adc
inc
clc
push
call
pusha
out
adc
and
ja
jae
jne
mov
push
cmp
imul
fiadds
adc
jo
jne
cmp
and
fbstp
sub
inc
lea
adc
mov
decl
out
adc
shlb
leave
and
or
push
and
pushf
dec
push
push
dec
clc
push
push
mov
decl
adc
sub
add
push
and
adc
mov
out
push
mov
push
mov
jmp
fdivl
adc
and
adc
mov
pushl
imul
cli
sarb
cld
sti
scas
mov
adc
inc
sbb
daa
notb
mov
xor
and
pusha
cmp
lds
inc
notb
mov
adc
push
sub
adc
and
inc
jae
and
sub
mov
xchg
pop
in
es
dec
adc
shlb
mov
je
aam
ret
jne
cmp
jg
and
sub
pusha
jge
push
notb
add
pusha
pusha
inc
adc
sbb
mov
and
mov
dec
sub
shl
pop
rclb
movl
inc
adc
push
imul
and
adc
mov
lahf
jp
adc
leave
adc
inc
sub
jo
mov
in
inc
ss
adc
mov
test
or
test
mov
jne
cwtl
cmp
pop
pop
mov
popa
adc
push
and
cmc
xor
pop
pop
adcb
add
push
fs
jb
add
adc
pushf
push
push
sbb
int
sbb
sub
and
mov
or
xor
pop
lea
sub
je
sbb
cmp
int
ss
jae
notb
clc
mov
imul
or
sahf
adc
xchg
loopne
inc
adc
jo
mov
mov
mov
lea
push
andb
andb
test
mov
shrb
frstor
stos
cs
pop
inc
adc
inc
cmp
inc
and
and
or
inc
sbb
mov
lea
cmp
jb
lea
jae
pop
sbb
movb
incl
pop
add
sar
movb
adc
add
decl
xor
adc
xchg
adc
push
sub
inc
adc
cmp
jb
mov
inc
adc
inc
adc
inc
adc
and
dec
and
outsl
sub
es
add
add
pusha
aas
adc
inc
adc
inc
adc
sub
adc
das
inc
add
jle
inc
cmp
push
mov
mov
cmp
inc
pop
daa
cmp
adc
cmp
lahf
adc
and
adc
dec
je
iret
and
and
fistl
mov
and
push
testl
sub
adc
xor
jb
adc
scas
adc
jno
mov
adc
inc
add
mov
lods
adc
inc
mov
mov
inc
mov
mov
or
adc
add
mov
dec
and
sbb
mov
not
test
je
mov
mov
mov
add
cmp
jbe
and
adc
push
and
sbb
pop
add
mov
mov
pop
adc
inc
or
or
decl
les
pusha
out
jle
inc
and
dec
sub
jbe
sub
push
xchg
adc
popa
lahf
adc
dec
nop
pusha
sbb
sbb
push
test
mov
jle
and
fistl
inc
or
dec
adc
mov
inc
push
adc
mov
mov
nopl
and
lret
push
lea
lock
lret
popa
adc
fistpl
cmp
shlb
inc
push
adc
inc
adc
mov
mov
mov
and
push
mov
jne
inc
pop
inc
sbb
and
xor
jle
push
les
movsl
adc
push
mov
mov
cmp
je
lods
pusha
sbb
xor
cmp
mov
sub
sbb
ret
xorl
dec
add
xor
sub
adc
cmovge
int
aaa
dec
dec
adc
ret
mov
sub
mov
adc
aaa
inc
inc
sub
adc
dec
adc
das
dec
add
and
stc
pop
incb
and
aaa
adc
inc
testb
adc
add
and
dec
aam
popa
push
adc
or
leave
popa
arpl
and
add
or
or
fiaddl
adc
pop
adc
orb
adc
dec
add
jg
push
inc
ret
adc
xor
pop
adc
inc
pop
inc
gs
add
ret
sub
inc
and
sub
popa
or
xor
sub
add
or
ljmp
dec
adc
lret
clts
adc
movlps
pop
pop
xchg
sub
adc
and
cmp
and
and
adc
mov
sbb
ret
jg
jg
add
cmpsl
or
std
das
mov
fimuls
sub
lea
push
push
and
adc
push
inc
dec
adc
and
xor
and
pusha
ss
sahf
adc
adc
es
add
jle
inc
xchg
adc
add
add
push
mov
leave
push
je
cwtl
sub
inc
push
inc
adc
lar
push
and
push
mov
and
dec
jo
adc
lds
xlat
jge
adc
inc
and
rcpps
adc
out
pusha
mov
adc
mov
sub
cmp
jle
mov
sub
cmp
inc
ret
jle
sub
add
pusha
out
xor
shrb
fbstp
inc
inc
pop
push
push
lea
lea
mov
inc
mov
and
jge
inc
and
adc
cmc
and
xchg
xor
adc
and
and
adc
test
sub
pusha
and
sub
adcb
mov
adc
and
dec
pusha
pop
and
sub
adc
adc
jmp
add
daa
adc
sarl
adc
int
inc
ret
and
sub
shlb
dec
add
adc
dec
adc
cmp
adc
push
lea
mov
sub
cmp
jge
sub
mov
sub
inc
or
pop
sbb
adc
add
pop
inc
sub
adc
pop
add
sub
push
adcb
mov
adc
fadds
test
mov
and
es
xor
pop
adc
and
and
inc
aas
inc
pop
adc
adc
adc
std
xor
adc
add
and
push
jns
and
and
adc
sub
pop
into
adc
daa
push
pop
adc
add
nop
sbb
push
push
adc
and
and
jle
inc
jl
mov
mov
cmp
jne
xor
pop
imul
push
push
push
inc
adc
dec
cs
mov
cld
repnz
pop
jne
inc
sub
mov
pop
pop
pop
dec
push
andb
dec
add
inc
scas
sub
insl
stc
loopne
adc
scas
fs
dec
adc
xor
inc
mov
sbb
cmpsb
adc
mov
call
inc
cmp
jl
and
pusha
xor
adc
das
mov
adc
xchg
xor
push
repnz
adc
imul
xor
pop
pop
inc
push
adc
test
addl
and
push
adc
test
jns
adc
call
xchg
adc
in
sub
cmp
push
and
sub
adc
clc
inc
adc
insb
xchg
mov
dec
sbb
push
push
inc
or
insb
jo
adc
adc
mov
and
cmp
fbld
inc
jnp
adc
loope
pop
jmp
inc
and
inc
sub
cmp
and
and
inc
cmp
and
adc
and
xor
add
and
cs
xlat
and
inc
xchg
dec
xchg
adc
call
mov
adc
mov
mov
and
adc
push
mov
scas
cmp
mov
pop
pop
mov
push
and
adc
add
xor
dec
pusha
nop
popa
dec
inc
sbb
xor
lock
adc
and
inc
push
pusha
adc
iret
adc
je
adc
rclb
insb
and
movsl
lods
adc
pop
xorl
push
pusha
sbb
jg
and
and
xor
xor
dec
push
cmp
and
adc
loopne
add
sbb
les
adc
jmp
fbld
adc
mov
or
aaa
push
push
dec
bound
lcall
xchg
push
push
adc
movsb
adc
dec
adc
add
test
adc
add
pop
add
andl
xor
iret
inc
adc
rclb
push
push
test
pop
adc
dec
adc
fs
and
push
mov
lea
bound
cmp
inc
add
sub
icebp
xor
sub
adc
add
adc
pop
or
fsubs
cmp
inc
mov
les
iret
cmp
hlt
dec
jns
inc
test
adc
ret
mov
adc
mov
inc
jae
inc
push
and
neg
inc
sbb
adc
and
push
push
push
mov
push
aaa
adc
adc
jbe
enter
push
adc
sbb
adc
add
inc
push
adc
les
adc
adc
pop
rcrb
js
outsl
adc
inc
and
adc
jae
adc
and
add
jb
es
imul
aaa
adc
popa
popa
or
jle
int
fs
adc
jl
mov
and
adc
mov
icebp
add
add
es
adc
xor
xor
inc
adc
and
xor
cmp
cmpsl
adc
or
sbb
add
add
sub
and
lea
push
stc
sbb
ret
je
inc
jmp
lea
fs
mov
push
je
and
stc
inc
xchg
adc
and
adc
inc
push
jmp
and
sub
mov
add
fs
sub
push
add
jno
adc
stc
adc
roll
int
push
sub
pop
adc
loopne
adc
xor
add
adc
push
adcl
mov
adc
pop
pusha
shll
sub
and
add
ret
iret
adc
fs
xor
push
add
iret
add
sub
je
sub
or
inc
cmp
lock
sub
adc
sbb
fdivl
decl
and
aam
mov
movl
adc
and
adc
jle
mov
mov
mov
movw
adc
inc
mov
mov
movl
push
mov
adcb
pusha
addb
je
lods
outsl
adc
inc
mov
adc
sub
inc
adc
jo
push
dec
sbb
cmp
jne
mov
call
and
jns
subb
adc
mov
mov
insl
push
adc
es
push
inc
sbb
or
sbb
or
push
and
adc
mov
imul
aas
pop
push
cmp
dec
or
and
dec
mov
daa
add
lea
push
pusha
sub
adc
dec
cmp
mov
inc
mov
adc
icebp
pusha
or
push
xor
adc
add
cmp
adc
adc
add
outsb
add
loopne
adc
jae
dec
inc
xorb
sub
adc
pop
add
dec
es
add
loopne
adc
add
pop
loopne
push
int3
pop
dec
mov
mov
dec
loop
cmp
dec
clc
dec
inc
outsl
clc
inc
inc
adc
and
les
outsl
incb
inc
pop
adc
cli
add
pop
or
xor
adc
adc
add
ret
push
push
adc
add
shll
add
adc
mov
daa
push
adc
sub
push
shll
or
xor
or
mov
cmp
or
adc
mov
jo
lea
adc
mov
adc
rorb
orb
and
adc
mov
sub
add
dec
sub
add
cli
add
push
aas
imul
push
aas
imul
pop
xor
inc
inc
adc
in
sahf
adc
dec
and
aaa
adc
cmp
inc
aas
mov
dec
addr16
jg
cmp
ret
pop
cmpl
jne
lea
push
push
jmp
lea
shlb
adc
pusha
and
or
cmp
insb
sqrtps
sbb
jmp
call
cmp
es
adc
push
adc
push
push
push
mov
inc
jmp
clc
xor
dec
adc
fbstp
and
cltd
daa
adc
ret
sbb
push
lea
mov
dec
xchg
push
and
imul
insl
loop
push
outsb
roll
inc
inc
xchg
adc
xchg
pop
inc
adc
inc
fs
mov
adcb
mov
pop
adc
inc
adc
jle
add
mov
or
cmc
inc
adc
pusha
push
imul
dec
je
dec
jne
pusha
inc
adc
add
push
pusha
pop
adc
add
push
pusha
pop
adc
add
shlb
mov
and
xor
or
or
mov
dec
pusha
adc
or
and
jno
mov
adc
pusha
daa
adc
mov
inc
stos
adc
mov
push
das
adc
and
xor
inc
inc
and
and
adc
sahf
inc
inc
or
or
adc
or
push
push
push
push
inc
cmp
cmc
adc
push
insl
inc
unpckhps
dec
pop
mov
inc
inc
adc
push
push
insl
xorb
cmp
sbb
push
mov
adc
fistps
push
call
cmpl
jne
movsbl
mov
mov
adc
xlat
orb
test
popa
add
xchg
jbe
and
pop
adc
xor
jns
and
mov
inc
inc
push
add
jbe
and
inc
inc
outsb
and
je
inc
inc
push
adc
xchg
addl
andb
jno
mov
xchg
xor
cmp
and
adc
xchg
imul
cmp
mov
mov
push
mov
push
rclb
lahf
mov
jne
pop
shl
or
push
mov
push
ds
xor
adc
pusha
in
adc
je
popf
test
adc
int3
xorl
push
adc
adc
adc
enter
mov
push
and
sub
and
pop
and
adc
mov
jecxz
adc
cld
bound
or
push
rcrb
icebp
push
xor
lea
cmp
je
cmp
dec
add
adc
pop
pop
adc
iret
popa
adc
push
mov
pop
and
cmp
jne
xchg
addr16
push
adc
nop
ljmp
xor
xor
xor
cmp
fsubr
or
pusha
inc
inc
push
adc
sarb
orl
dec
and
adc
pusha
sbb
adc
and
dec
movsb
adc
and
pop
pop
and
cmp
je
orb
inc
adc
and
adc
int3
inc
andb
inc
and
push
and
sarl
xlat
jge
and
cmp
pop
and
push
sub
sub
mov
dec
add
pop
adc
push
dec
xor
jmp
sub
sub
xchg
roll
ljmp
adc
or
out
adcl
jg
adc
add
sbb
fstpt
repz
jo
inc
cmp
push
dec
and
pop
dec
add
push
aas
sbb
in
cmp
ja
xor
pusha
repz
adc
xchg
and
mov
and
xor
cli
testb
pop
popa
adc
inc
les
sbb
adc
adc
add
and
data16
and
add
and
pop
inc
adc
sub
push
mov
stos
inc
push
adc
push
adc
lret
je
cmp
je
mov
cmp
je
jp
pop
sbb
xor
outsb
sub
mov
andb
inc
push
push
xor
bound
add
adc
push
dec
call
sbb
adc
adc
push
dec
lods
das
scas
add
lahf
adc
inc
or
push
push
push
inc
or
je
inc
add
adc
rcrl
mov
imul
loop
xchg
mov
adcl
mov
adc
test
dec
enter
mov
jne
push
mov
xor
inc
sub
push
mov
and
push
mov
sub
add
dec
insb
inc
and
rclb
inc
insb
daa
inc
add
adc
inc
pushf
sub
adc
inc
outsl
and
sub
test
xor
jo
xor
pusha
movsl
adc
push
pop
sub
add
add
imul
test
sub
sub
add
or
and
cmp
mov
push
jne
lds
pop
adc
or
orb
push
movsb
jge
adc
and
xor
rcll
rcll
and
les
push
inc
test
mov
sbb
add
inc
jl
aaa
inc
adc
test
shlb
movsl
rol
xor
inc
sbb
in
xchg
stc
in
mov
add
jmp
sarl
or
cmp
adc
clc
push
jne
subl
in
adc
and
inc
dec
adc
lea
adc
pop
inc
out
adc
in
cmp
add
out
adc
test
iret
sub
aas
and
leave
inc
and
dec
inc
push
adc
and
dec
adc
jle
dec
push
pusha
das
adc
mov
xchg
and
and
push
das
adc
adc
rclb
leave
xchg
push
push
xchg
adc
xlat
sub
and
popa
sub
nop
adc
sbb
sub
and
adc
nop
add
mov
add
mov
adc
and
inc
adc
add
adc
adcb
adc
fcoms
sub
inc
sbb
jmp
mov
and
inc
fstl
fs
mov
and
push
sub
push
ja
adc
add
add
ljmp
add
adc
add
lcall
adc
inc
add
lock
add
add
mov
inc
add
icebp
inc
add
adc
inc
add
repnz
add
inc
adcl
sub
sub
test
inc
and
inc
adc
and
and
dec
inc
int3
and
int3
adc
testl
adc
jl
adc
jle
rcll
inc
mov
xor
jns
pop
sub
adc
inc
pop
mov
stos
push
sub
adc
dec
pop
mov
xor
add
pop
add
inc
pusha
and
and
iret
dec
addr16
adc
or
pop
xor
and
fs
add
push
insb
cmp
add
jo
pop
add
je
pop
add
js
pop
add
and
jl
or
filds
pusha
aas
adc
add
mov
movsl
add
xorb
add
push
imul
cmc
and
adc
push
jne
mov
aad
movsl
add
mov
mov
inc
inc
fldenv
cmp
and
adc
pop
hlt
jp
mov
call
cwtl
push
cmp
add
leave
add
and
adc
adc
xor
pop
inc
and
adc
and
push
adc
sahf
int
jecxz
jbe
and
and
cmp
adc
cmp
add
add
or
shlb
dec
jge
adc
inc
aas
adc
inc
xchg
adc
adc
add
incb
adc
cmc
inc
add
inc
add
pop
inc
add
jle
add
sahf
inc
add
mov
inc
add
testb
inc
add
dec
inc
add
cmpsl
inc
add
adc
inc
adc
inc
add
outsl
pop
inc
test
sbb
pop
notl
or
insb
and
add
add
shrb
sbb
loopne
dec
adc
and
popa
out
and
and
fldl
sbb
adc
inc
add
push
and
push
inc
sbb
je
inc
adc
imul
mov
pop
jbe
adc
pop
pusha
or
push
and
mov
xor
std
inc
pop
push
mov
adc
inc
sbb
and
punpcklbw
ds
jmp
pop
inc
or
push
andl
pop
movups
pop
orb
add
notl
dec
insl
adc
add
insb
mov
daa
or
jo
mov
cwtl
mov
loop
cmp
dec
adc
jmp
aas
adc
das
xor
dec
push
mov
xchg
andl
dec
pop
and
push
and
adc
cld
push
sub
and
and
dec
mov
or
pop
andb
pop
inc
or
loopne
inc
pusha
xchg
and
shr
mov
or
jo
or
or
adc
orb
pop
or
xchg
rorl
addb
mov
es
adc
fbld
pop
jmp
xor
movl
inc
cmp
inc
mov
and
pop
xor
add
adc
mov
subb
mov
nopl
inc
xor
aaa
adc
and
outsl
adc
sbb
and
inc
and
dec
adc
cmp
and
push
stos
and
outsl
adc
rorl
mulb
adc
adc
and
jl
add
out
inc
dec
and
sarl
dec
xor
mov
pusha
ret
adc
jge
popa
jne
dec
cmp
or
adc
jmp
dec
dec
push
or
sarl
inc
and
adc
and
arpl
dec
push
jg
inc
ja
and
and
dec
lea
mov
inc
mov
adc
call
mov
movups
push
jb
adc
sbb
sub
mov
cli
add
jbe
inc
pop
adc
xchg
gs
and
aam
dec
adc
shrb
push
adc
mov
and
dec
and
fs
push
outsl
pusha
sbb
movsl
push
and
ja
mov
cs
add
xor
inc
pop
adc
jp
xor
dec
inc
hlt
and
imul
and
popw
les
cs
add
inc
sub
inc
popl
sbb
push
int3
dec
dec
add
inc
cmp
movsl
test
imul
push
stos
dec
adc
gs
adc
xchg
adc
pusha
mov
cmp
movl
adc
sbb
jno
adc
add
inc
daa
stos
inc
adc
pusha
and
add
push
adc
mov
mov
addr16
adc
movl
adc
fldenv
js
sub
dec
adc
xor
add
aaa
outsl
push
adc
es
push
sbbb
pop
dec
cmp
adc
aaa
jg
adc
das
iret
push
rol
or
mov
fs
mov
popa
dec
and
adc
adcb
das
mov
and
andl
add
lea
lea
add
pop
mov
inc
adc
or
dec
pusha
pusha
adc
or
xchg
adc
or
or
xchg
adc
or
xchg
add
pop
adc
and
pop
adcl
adc
and
daa
adc
inc
and
adc
add
mov
mov
cmp
jne
test
je
mov
mov
orb
push
pop
test
add
test
jne
and
adc
rolb
jne
pushf
dec
jmp
pop
dec
push
and
and
jb
adc
jle
imul
push
and
pusha
adc
add
add
push
mov
and
inc
mov
ficoms
mov
gs
adc
sbb
or
pop
inc
lds
aas
adc
je
testl
cmp
incl
mov
adc
push
push
jae
pusha
sub
call
sbb
test
jae
and
xchg
dec
adc
jle
bound
cmp
push
and
adc
fldenv
negb
xlat
lret
adc
ds
push
loop
pop
and
push
and
sub
push
loopne
clc
dec
and
dec
inc
cltd
adc
ret
adc
inc
dec
jbe
es
or
pop
adc
sub
or
sub
pop
sub
push
push
mov
xchg
aas
mov
pop
imul
xchg
loope
and
sub
adc
outsl
add
sbb
inc
addr16
inc
xchg
mov
push
xchg
push
lret
sbb
pop
adc
jmp
push
mov
xchg
pop
and
pop
jne
inc
bound
in
inc
imul
lock
loopne
inc
and
and
jbe
mov
mov
sub
and
sub
mov
sar
add
pop
push
adc
mov
add
and
adc
adc
cs
sub
push
pushf
adc
lret
adc
dec
inc
adc
xchg
arpl
push
push
xchg
adc
sub
inc
jns
adc
daa
add
xchg
or
and
pop
and
add
cwtl
daa
dec
add
div
outsl
and
pop
and
dec
adc
sar
or
adc
subl
icebp
cmp
and
adc
iret
and
popa
adc
and
scas
sub
iret
and
insl
adc
out
xchg
les
neg
ljmp
call
inc
mov
pop
or
xor
mov
jmp
xchg
out
and
dec
pop
sbb
push
or
sarl
ret
iret
adc
and
pop
daa
sub
or
add
dec
inc
inc
adc
adc
inc
add
dec
inc
add
add
add
push
scas
inc
add
push
mov
push
push
inc
mov
or
jne
mov
adc
dec
insb
adc
je
adc
sub
cmp
iret
adc
out
cltd
ljmp
and
lahf
or
mov
push
and
pop
adc
jnp
mov
roll
adc
xor
mulb
fsubs
lret
ds
pop
test
fisubl
adc
outsb
pop
xorb
add
push
adc
or
and
pusha
sub
in
sub
xchg
adc
xchg
popa
bound
mov
and
inc
adc
push
push
mov
mov
inc
inc
add
xor
and
pop
adc
outsl
add
pop
adc
notb
sub
adc
adc
mov
push
xchg
xor
adc
adc
leave
cs
xor
lahf
xor
addl
adc
mov
inc
mov
inc
dec
adc
push
sub
jbe
pop
pop
inc
rcll
add
inc
add
lcall
jb
mov
adc
add
adc
mov
jl
mov
and
cmp
scas
adc
jnp
add
or
cmp
je
cmp
je
cmp
jb
add
cmp
and
inc
push
adc
pusha
adc
adc
ja
push
inc
loopne
rclb
sub
jae
adc
xor
adc
and
xchg
and
outsl
adc
and
cmp
jg
daa
adc
and
inc
jns
adc
sub
add
jle
mov
add
sub
adc
push
adc
sub
add
add
mov
and
sub
adc
mov
or
sbb
and
dec
jb
popa
adc
rcrb
adc
xor
and
adc
daa
pop
add
cli
jg
inc
sbb
adc
gs
sub
add
jl
jg
aas
adc
and
mov
jmp
add
test
mov
pusha
popf
and
or
jb
jmp
mov
fstps
out
dec
and
push
xchg
adc
pop
mov
mov
lea
fidivs
jmp
and
jge
andl
sub
pop
lea
rorb
sbb
out
inc
and
add
jg
or
sbb
push
gs
shll
jbe
and
popf
adcb
sbb
and
inc
sti
imul
add
inc
add
or
xchg
inc
add
mov
add
aam
add
out
inc
add
popl
fsubrs
iret
or
cmp
das
les
inc
jo
cmp
adc
outsl
mov
inc
push
movsb
push
and
jmp
and
aaa
xor
movsl
xchg
adc
lds
push
les
and
insb
adc
adc
and
inc
jnp
sub
add
inc
inc
add
dec
and
push
jae
adc
mov
jnp
and
jae
pop
adc
jbe
xchg
inc
xchg
rcrl
xchg
add
out
nop
cmp
cltd
add
out
pop
adc
xor
and
shlb
imul
das
inc
into
mov
adc
sbb
sbb
push
xchg
add
and
and
xchg
adc
sbb
es
cld
xor
pop
add
inc
add
jg
adc
mov
jg
jne
int3
sub
add
dec
adc
in
je
inc
inc
xor
je
inc
adc
push
call
ja
adc
mov
mov
mov
sbb
sub
cmp
inc
in
adc
adc
insl
adc
bound
push
jmp
and
and
push
pop
adc
enter
sub
popa
pushf
push
push
sub
push
push
push
jo
adc
sbb
adc
cli
sub
jns
add
adc
daa
adc
xor
push
adc
pusha
loope
loope
pop
cld
pusha
or
push
adc
imul
shll
sbb
xchg
adc
sub
notl
call
inc
mov
and
pop
adc
inc
jne
lret
ja
arpl
xor
lret
and
insl
shlb
inc
or
js
fidivl
and
cmp
iret
daa
adc
ret
es
adc
popl
adc
adc
or
adc
ret
inc
lock
adc
adc
fs
pop
jno
adc
push
xor
imul
push
and
xor
adc
xchg
sbb
adc
add
xor
out
jle
push
push
jle
mov
inc
insl
adc
jae
sub
arpl
adc
rorb
jne
outsb
and
inc
pop
and
shll
push
inc
adc
jne
and
sub
and
adc
cmpsl
dec
mov
mov
addl
stos
loope
adc
in
adc
mov
sbb
das
sub
repnz
ret
and
sub
les
add
popf
inc
and
mov
jp
and
aas
adc
imul
inc
insb
adc
cmpl
adc
pop
mov
adc
mov
inc
pop
and
mov
das
subl
popf
mov
mov
mov
add
adc
xor
bnd
daa
cmpsl
ja
and
and
loopne
adc
adc
outsb
jg
jno
cmp
shl
and
sub
add
das
or
push
add
xor
mov
push
adc
and
and
sub
xor
adc
movl
xor
in
adc
movl
adc
pop
dec
adc
jo
inc
push
and
sub
pop
movl
mov
mov
mov
and
adc
sub
sub
pop
sub
sbb
sub
push
adc
push
and
and
es
sub
cltd
jno
inc
sub
inc
and
test
jne
and
sub
adc
sarl
inc
push
and
adc
add
sub
sub
in
mov
adc
pusha
sub
sub
inc
sub
or
inc
sub
inc
sub
or
test
sub
sub
call
add
and
add
sbb
and
and
and
pop
outsb
inc
sub
add
sub
subb
data16
pop
add
mov
inc
xchg
cmp
orb
insb
es
adc
jo
loope
je
inc
push
rol
xor
and
adc
push
and
rorl
and
and
sub
mov
mov
mov
mov
loopne
sub
mov
and
dec
inc
mov
and
sub
pushl
add
sub
adc
and
add
xor
and
add
cmp
sub
inc
call
inc
and
enter
pop
inc
in
ds
push
adc
add
and
sub
subb
adc
and
pop
push
pusha
sbb
xor
adc
add
insb
and
push
jne
lea
and
daa
adc
mov
mov
adc
mov
and
les
mov
jge
and
push
push
jmp
lea
shlb
subb
je
sub
sub
inc
call
mov
add
movsb
jae
and
cmp
push
push
sub
icebp
push
and
adc
jle
nop
repz
mov
sub
adc
lcall
adc
and
and
push
int
mov
push
and
push
xchg
and
or
adc
mov
and
sub
inc
push
push
and
sub
add
push
scas
push
jo
test
lret
adc
dec
inc
and
loope
and
outsb
adc
cmp
jbe
and
andb
jae
sub
add
push
and
inc
adc
jne
and
and
cmp
sbb
push
and
and
push
inc
mov
adc
dec
mov
and
daa
inc
addr16
daa
adc
pusha
gs
dec
sbb
dec
dec
or
and
adc
dec
add
sti
and
cmp
jge
pusha
and
xor
push
push
mov
sub
add
jbe
mov
popa
mov
xchg
and
inc
dec
push
and
rclb
inc
dec
cmp
adc
bound
sub
cltd
cmp
adc
push
adc
jge
push
loopne
adc
add
push
push
fs
adc
and
inc
add
adc
push
cs
adc
adc
add
sub
sub
dec
add
addb
je
arpl
adc
arpl
adc
repz
sbb
mov
cmp
mov
mov
dec
adc
je
dec
jb
or
adc
bound
ret
je
sub
adc
mov
add
lahf
pusha
dec
cs
add
mov
add
inc
mov
aas
mov
sbb
lods
add
and
loope
adc
sub
add
sub
add
or
and
and
and
and
cmp
adc
add
xchg
and
xor
add
cmp
add
and
sub
jl
add
outsb
add
cmp
add
and
pusha
outsb
adc
adc
and
and
jl
adc
and
es
adc
push
mov
adc
inc
add
add
mov
sbb
pmaddwd
inc
add
dec
inc
add
addr16
add
xchg
inc
add
scas
inc
add
lret
inc
add
inc
sbb
inc
add
filds
adc
inc
add
sbb
aas
inc
add
mov
adc
inc
add
or
subl
cmp
mov
jp
and
cltd
adc
inc
lods
adc
and
pop
adc
and
cmp
inc
inc
and
and
and
push
inc
jno
and
and
sub
adc
dec
dec
and
adc
and
and
adc
add
loope
sub
add
push
sub
add
pop
daa
xor
adc
test
dec
cmp
sub
cs
adc
inc
insb
mov
test
and
xor
add
sub
daa
push
add
je
push
add
mov
cli
cmp
leave
push
and
adc
add
mov
xor
sub
andb
add
nop
orl
arpl
sub
add
sub
add
imul
sub
add
subb
add
cmp
push
cmovo
adc
rolb
roll
adc
inc
add
repz
add
sbb
adc
inc
add
aaa
inc
add
imul
jl
add
lea
adc
inc
add
loope
add
cmc
inc
add
or
adc
inc
add
inc
inc
add
pop
inc
add
insl
inc
add
addl
das
pushf
or
js
fbstp
inc
je
and
gs
adc
and
jns
adc
jg
push
pop
adc
mov
and
andb
xor
andb
mov
mov
cmpsl
jns
andl
adc
andl
and
adc
jne
sub
jl
mov
adc
mov
dec
rclb
and
and
sub
adc
add
js
loopne
adc
rclb
adc
ja
sub
and
fstpt
and
and
pop
adc
and
je
jl
sub
adc
jne
and
and
js
adc
sub
sub
and
lahf
and
mov
push
and
and
or
lahf
and
mov
and
lock
and
and
iret
adc
xor
add
cmp
daa
clc
and
addr16
or
and
lea
sub
and
testb
dec
adc
and
mov
mov
pop
or
dec
add
push
push
inc
and
movl
xor
sub
and
jg
pushl
das
xor
mov
sub
and
imul
arpl
xor
or
adc
and
ja
mov
adc
inc
call
loop
adc
and
sub
add
add
adc
pop
and
push
js
testb
cmp
push
js
add
adc
and
and
sub
pop
and
outsl
push
loope
sub
xchg
jg
pop
adc
push
into
dec
jae
jl
sti
jae
and
sbbb
adc
and
jbe
push
push
icebp
and
mov
adc
cmp
sub
sub
pop
out
pusha
cld
fsubrp
pusha
mov
das
out
push
adc
and
pop
inc
jge
xchg
pop
inc
mov
add
sbb
cmp
jle
cmp
jg
xchg
out
adc
sub
js
rorb
js
xchg
rolb
and
mov
xor
and
roll
lahf
inc
add
enter
push
push
and
pusha
repz
pop
pusha
out
daa
pop
push
pusha
mov
pop
push
adc
je
das
add
sbb
sbb
sbb
jge
or
int
and
mov
xor
xor
sbb
mov
add
push
inc
aaa
adc
xor
cmp
inc
rclb
inc
add
cmp
aas
cmpsb
inc
add
dec
inc
add
inc
and
xchg
adc
test
jae
and
and
mov
mov
out
inc
adc
and
inc
dec
icebp
adc
push
lret
sbb
sub
sub
sub
and
nop
inc
adc
test
inc
adc
test
inc
adc
test
mov
push
mov
and
inc
outsl
adc
dec
pop
jg
mov
mov
sub
pusha
cmp
sar
add
and
adcb
sarl
mov
sub
and
and
inc
push
adc
inc
ljmp
jmp
push
cmp
jle
fildl
inc
add
adc
icebp
inc
add
aam
pop
adc
fldl
adc
fcomp
inc
and
stos
adc
fstp
and
fmul
and
sbb
leave
mov
or
xchg
icebp
inc
adc
adc
inc
inc
adc
shll
jl
and
int3
add
and
mov
adc
testl
je
movsl
add
adc
dec
and
add
inc
mov
scas
adc
or
and
and
inc
mov
cltd
push
and
inc
adc
pop
imul
push
push
dec
imul
inc
and
daa
and
xchg
push
inc
sbb
icebp
jge
dec
and
mov
lea
cmp
jge
test
add
push
push
pusha
test
inc
push
inc
dec
adc
and
and
popa
aam
ss
js
adc
pop
jno
insl
or
fiaddl
and
xor
and
xor
ret
xchg
and
addl
ljmp
add
xchg
add
mov
and
adc
sbb
add
mov
add
cmp
jl
inc
and
ja
or
push
add
inc
inc
push
arpl
and
adc
je
ja
and
inc
pop
adc
and
sub
lea
inc
jmp
xchg
hlt
and
pop
int
pop
pusha
jge
pop
jp
pusha
shlb
and
inc
sbb
xchg
and
das
add
sub
jns
xor
add
sub
out
je
pusha
cli
loope
dec
xor
pusha
out
adc
lods
and
mov
dec
and
inc
adc
in
and
adc
xchg
and
adc
and
and
mov
jle
mov
xor
jg
adc
je
and
je
and
adc
mov
inc
mov
pop
sub
add
incl
jl
mov
out
inc
cmp
outsl
push
xor
dec
mov
les
push
jns
push
imul
and
push
pusha
mov
inc
and
adc
adcl
push
adc
jg
imul
pusha
mov
mov
neg
neg
push
push
inc
add
cld
pop
sub
xchg
pusha
and
jp
mov
aam
inc
cmp
pop
inc
push
adc
mov
mov
and
inc
sbb
adc
inc
sbb
xchg
mov
bound
nop
adc
daa
adc
push
inc
adc
push
and
loop
in
inc
and
call
sbb
imul
cmp
cmp
je
cmp
sub
pop
xor
and
jg
adc
iret
cmp
mov
mov
xor
push
mov
cmp
mov
jmp
adc
filds
adc
adc
test
mov
das
mov
sub
sub
sub
add
dec
aaa
add
push
xor
pop
popa
and
adc
rclb
and
test
and
push
dec
mov
popa
mov
or
adcb
sysexit
test
adc
add
test
pusha
dec
adc
adc
and
adc
push
je
mov
and
adc
pop
and
jae
add
pop
sub
arpl
adc
ret
adc
xor
lea
pusha
xor
push
lods
sub
adcl
mov
bound
arpl
pop
and
and
cmp
jne
fs
mov
cltd
rclb
mov
adc
inc
jnp
and
fs
push
inc
pop
adc
pop
adc
inc
jle
adc
mov
andl
clc
cmp
sub
fs
push
and
and
adc
jae
pop
pusha
xor
cmp
sarb
bound
cmp
mov
es
pop
mov
mov
cmpl
jne
mov
andl
sbb
jne
or
jmp
mov
sub
adc
or
iret
sub
mov
lahf
pusha
push
adc
call
sbb
cmp
add
rclb
inc
adcl
mov
dec
mov
inc
sbb
insb
call
cmpb
xor
adc
add
mov
popf
jb
inc
add
lea
and
push
je
dec
inc
ds
or
inc
adc
xor
inc
and
bound
outsb
adc
dec
and
adc
xchg
rorb
and
dec
cli
inc
xor
and
outsb
xor
adc
pusha
xor
push
push
and
and
cs
add
daa
mov
mov
jecxz
and
sbbl
dec
popa
repnz
cli
xor
and
inc
or
and
adc
mov
adc
adc
es
and
cmp
pop
jecxz
ficomps
lcall
sub
inc
mov
and
mov
and
adc
jb
and
xor
dec
cs
sbb
mov
es
dec
jge
adc
inc
add
movsb
adc
adc
adc
mov
cmpsl
dec
adc
and
xor
aaa
add
adc
pop
and
adc
inc
lods
adc
sub
and
dec
sub
fildl
fdivrs
inc
adc
aas
inc
inc
pusha
movsb
sub
cmpb
and
mov
adc
adc
push
push
pop
xchg
adc
and
pusha
sti
xchg
adc
sub
mov
push
push
adc
cmp
cmp
adc
cmp
dec
mov
push
inc
adc
and
and
inc
adc
adc
pop
xor
inc
and
cwtl
adc
adc
and
and
adc
dec
and
dec
jnp,pt
arpl
adc
adc
sbb
cmp
lret
adc
mov
mov
mov
xchg
mov
arpl
es
sbb
arpl
adc
mov
addb
mov
mov
hlt
inc
and
xchg
subb
adc
adc
pop
adc
mov
popl
adc
mov
movb
mov
inc
jge
addl
inc
push
or
in
cmp
jne
and
sti
call
lds
jl
adc
push
and
pop
call
sub
jmp
inc
adc
das
mov
sahf
adc
inc
jb
dec
mov
dec
adc
inc
adc
adc
inc
adc
fcoms
loopne
adc
sahf
and
inc
and
push
adc
mov
int3
adc
cmp
je
mov
mov
dec
inc
push
outsl
add
outsl
or
adc
in
inc
fbld
mov
adc
and
scas
pusha
inc
adc
dec
adc
cmp
jne
xor
push
push
shll
and
or
adc
ficompl
inc
sbb
aam
adc
push
mov
es
inc
mov
xor
mov
bound
cmp
and
adc
je
cmp
add
movl
or
mov
adc
xor
and
add
inc
add
jg
adc
and
xor
jno
adc
adc
inc
add
add
xchg
inc
add
xor
jae
add
repz
add
add
xor
stc
inc
pop
adc
lea
xor
bound
push
sbb
leave
dec
sub
sbb
mov
sub
sbb
sub
sbb
xor
adc
sbb
sub
sbb
sub
cmp
cwtl
xchg
pop
out
adc
out
adc
add
fadds
adc
inc
add
add
adc
add
incl
adc
and
pop
adc
ds
daa
scas
cmp
cwtl
das
insb
pop
adc
and
cmp
loopne
ljmp
push
add
sub
mov
repz
dec
and
pusha
cmp
mov
and
adc
inc
repnz
mov
xor
adc
cmp
inc
das
mov
adc
and
lea
adc
and
xchg
and
ja
adc
sub
add
adc
das
clts
idiv
jns
arpl
idiv
and
xchg
and
push
fists
adc
movsl
fists
adc
daa
fists
adc
mov
inc
mov
jo
xchg
fists
adc
cs
add
push
clc
mov
xor
movl
push
loopne
xchg
test
sub
pusha
fimull
clc
sub
add
mov
popa
mov
lea
aaa
daa
cld
pop
adc
movl
sbb
imul
mov
pusha
inc
and
cmp
adc
fists
adc
movsb
adc
add
adc
xor
cmp
and
mov
adc
jle
and
daa
dec
add
adc
sub
adc
fistl
adc
sub
cmp
sbb
push
sub
mov
es
pop
adc
mov
xor
pop
mov
adc
pop
adc
adc
js
daa
incl
shrb
lcall
adc
add
lcall
popa
outsb
adc
sti
mov
lods
mov
movsb
daa
ret
add
sbb
ret
adc
fstpt
daa
roll
movl
subb
call
add
dec
sbb
jb
pop
dec
popa
jb
or
xor
add
mov
es
cmp
cmpsb
adc
mov
rcll
or
mov
push
jbe
adc
and
mov
mov
cmp
and
and
and
push
and
and
and
adcl
and
pop
daa
cmp
rcrb
adc
pop
shrb
add
and
scas
sbb
sub
sbb
scas
sub
push
adc
or
pop
pop
pusha
lods
fstps
xor
das
pop
sbb
fwait
scas
sub
mov
sbb
pushf
jg
pop
sbb
cmp
cltd
pop
adc
inc
push
adc
pop
sbb
and
adc
inc
add
inc
pop
aaa
pop
sbb
pop
pop
andl
mov
pop
sbb
pushf
jg
pop
adc
popl
adc
cltd
adc
and
and
stos
inc
mov
cltd
inc
push
and
lock
je
mov
fldcw
sub
nop
pop
data16
xchg
mov
cmpsl
and
adc
mulb
frstor
inc
adc
push
sub
xorl
scas
adc
dec
jno
outsb
add
outsb
or
adc
scas
sub
adc
scas
add
mov
lret
jns
adc
stos
popa
jp
adc
imul
scas
je
sub
dec
adc
das
mov
adc
pop
sub
inc
and
dec
inc
sub
in
jae
inc
add
push
addr16
adc
cmp
adc
cmp
adc
push
adc
inc
movups
and
sub
mov
and
and
mov
push
mov
call
mov
jp
inc
mov
fs
nop
daa
adc
adc
inc
dec
dec
mov
pop
mov
xor
enter
and
xchg
push
sbb
adc
mov
or
inc
ret
roll
icebp
cmp
jne
ja
adc
mov
hlt
xchg
jmp
mov
insb
dec
stc
and
pushf
adc
adc
inc
and
xor
push
push
push
xchg
and
adc
xlat
add
inc
dec
inc
jle
and
dec
push
neg
sbb
and
and
adc
adc
mov
bound
sbb
cmp
adc
call
es
add
push
jmp
mov
pop
add
sub
adc
lods
ljmp
je
and
push
decl
adc
or
inc
add
adc
push
inc
sub
adc
add
push
roll
adc
add
imul
and
cmp
xchg
xchg
sbb
sub
sub
push
mov
adc
jmp
adc
rclb
push
xchg
aam
adc
or
sub
and
decl
cmp
add
jge
mov
sub
mov
add
mov
jle
mov
and
inc
sbb
call
lea
jbe
dec
or
adc
push
and
mov
inc
push
adc
mov
nop
adc
insb
insb
adc
mov
mov
int
cmpl
je
mov
push
adc
and
negl
xor
test
arpl
adc
mov
adc
ja
and
pushf
inc
inc
aam
bound
and
xchg
mov
push
arpl
adc
call
aad
pop
adc
adc
add
adc
imul
sar
mov
shr
lds
lret
mov
movsb
jae
inc
cwtl
pusha
push
and
dec
pusha
add
cltd
popf
adc
dec
cltd
adc
inc
fiadds
and
call
jmp
mov
lea
adc
mov
std
rcrb
sbb
inc
and
and
adc
inc
adc
sub
adc
xchg
and
and
shrl
adc
fstl
and
loop
inc
pop
adc
mov
sub
jae
pop
and
sub
outsl
push
adc
xor
jle
fsubl
or
arpl
bound
mov
and
and
pusha
adc
in
inc
and
cmp
rclb
outsl
and
sub
adc
adc
inc
inc
add
adc
inc
mov
add
addb
mov
add
out
or
mov
clc
sub
sbb
xor
movl
and
adc
sub
pusha
add
out
xor
xor
or
aas
adc
test
shrl
adc
daa
aas
adc
add
in
xor
or
and
xor
sub
cmp
pop
adc
ret
inc
or
movsb
shlb
cmp
adc
or
inc
adc
inc
xchg
and
adc
mov
movl
dec
or
adc
add
nop
xor
xor
push
push
cmp
and
andb
pop
push
inc
push
mov
mov
add
push
and
inc
inc
and
jmp
and
cmp
add
push
mov
adc
gs
sub
adc
dec
inc
push
or
adc
dec
in
adc
pop
je
adc
insb
pop
test
adc
mov
adc
cltd
xor
pop
jo
test
jne
push
xchg
in
and
jg
pop
and
testl
test
adc
insl
pop
mov
sub
sub
push
and
adc
add
aaa
pop
popa
add
push
adc
pop
inc
adc
and
pop
and
cmp
adc
aaa
pop
daa
sbb
je
iret
and
adc
sub
and
pop
and
add
lea
push
lea
push
and
xor
inc
and
pop
sbb
nop
mov
inc
add
and
adc
inc
add
addb
das
or
cmp
jbe
add
push
adc
add
pop
sub
dec
xchg
push
shrb
pusha
daa
jo
xchg
adc
xchg
adc
stc
cmc
ljmp
jnp
sbb
add
lahf
inc
pop
adc
sbb
adc
cmp
dec
pusha
adc
pushf
dec
xor
inc
jne
push
and
cmp
iret
dec
and
arpl
and
dec
sub
adc
insl
xchg
sub
dec
adc
sub
adc
sub
adc
xor
das
scas
and
das
incl
repnz
and
sub
sub
add
out
inc
xchg
and
inc
adc
outsl
dec
inc
test
out
adc
pusha
bound
repnz
and
dec
adc
push
inc
dec
sub
and
inc
cmp
adcl
dec
adc
js
inc
je
cmc
adc
push
movsb
popa
fwait
and
adc
cmp
aaa
lahf
pop
adc
das
pop
add
lahf
dec
pusha
insl
and
cmp
into
sub
imul
adc
sub
add
daa
outsb
dec
and
add
adc
das
push
dec
daa
add
adc
sub
scas
adc
push
adc
sbb
filds
je
faddl
and
dec
and
jb
ja
inc
pop
adc
and
push
sub
adc
and
dec
inc
sbb
add
and
dec
adc
adc
ret
mov
mov
cmp
adc
push
adc
inc
and
and
cmp
sub
adc
sub
adc
cmc
clc
jg
sub
or
and
add
or
push
lods
cmp
or
and
and
call
lods
add
decl
and
jbe
decl
sub
push
xor
or
push
sub
or
and
cmp
mov
imul
or
adc
dec
add
or
es
adc
ss
mov
push
push
or
pop
mov
sub
adc
mov
mov
and
dec
mov
cmp
adc
adc
es
add
shrb
xor
xchg
mov
adc
pusha
inc
aas
adc
mov
mov
mov
gs
push
add
pop
dec
clc
adc
or
push
aas
sbb
or
mov
mov
sbb
adc
sbb
adc
xchg
and
mov
dec
and
inc
and
and
mov
and
and
testl
and
xor
push
push
adc
dec
adc
outsl
pop
add
add
dec
or
jmp
push
mov
std
push
and
xor
out
pop
dec
xchg
push
data16
adc
inc
pop
imul
rorb
lret
or
cmp
loope
adc
push
lea
cmpsb
inc
adc
pop
outsb
adc
push
adc
je
and
push
push
jo
adc
and
sub
lcall
pop
and
and
push
adc
xorb
aad
outsl
sub
xor
jge
and
jns
cwtl
xor
inc
adc
ja
sub
adc
adc
sub
adc
ret
sarb
cmp
add
iret
pop
adc
dec
cmp
and
pusha
adc
inc
fistps
adc
stos
sub
adc
enter
pop
loopne
adc
jle
xor
lret
cmp
inc
pop
add
aaa
loopne
push
xor
pusha
pusha
pop
adc
pop
inc
cmp
jmp
sbbb
add
adc
pop
inc
pop
loopne
sub
popa
loopne
inc
rolb
push
sub
push
rcrb
loope
dec
mov
dec
inc
add
jno
add
lret
inc
add
sub
jl
stos
mov
dec
cmpsl
adc
push
inc
pop
adc
sub
adc
xor
adc
push
add
sahf
aaa
adc
xor
or
pusha
daa
xor
adc
fisttpl
adc
adc
or
addb
mov
add
lds
adc
inc
add
out
add
clc
inc
add
pop
adc
inc
sub
dec
push
and
testb
inc
sbb
adc
das
syscall
adc
push
and
and
es
jno
imul
inc
mov
fsubp
xor
adc
and
dec
pop
adc
or
adc
adc
or
and
ss
adc
inc
xor
jl
dec
dec
stos
or
adc
push
push
pusha
test
inc
and
popf
cltd
adc
cmp
adc
pop
inc
out
adc
out
add
ud2
and
popf
ljmp
ud2
daa
test
out
das
pop
or
push
inc
scas
and
inc
mov
pop
or
pusha
inc
mov
pusha
or
or
sub
inc
bound
das
inc
dec
lret
xor
mov
adc
mov
push
jmp
popa
scas
and
arpl
movl
arpl
mov
jg
adc
bound
mov
mov
movl
out
pop
adc
outsl
adc
iret
sbb
push
adc
fistpl
adc
lahf
pusha
bound
je
lea
js
and
adc
cmp
sub
andb
popf
and
add
repz
xor
leave
sbb
xchg
xor
xor
sub
adc
js
dec
jl
cmp
push
and
mov
ds
or
cmovs
sbb
js
dec
pusha
ja
jp
mov
ja
outsb
add
dec
inc
aad
ja
jno
adcb
sub
add
dec
add
add
dec
add
xor
loop
adc
pop
dec
pop
cmp
mov
je
push
sbb
ja
fisttpl
inc
sub
adc
sbb
xor
cmp
ja
jmp
adc
sbb
mov
jmp
sub
jmp
add
push
adc
ja
jmp
add
adc
je
inc
jp
jecxz
inc
cmp
and
adc
xor
push
cmp
jle
adc
adc
pop
mov
adc
mov
jne
pusha
imul
mov
ja
adc
loopne
and
sub
mov
inc
add
inc
inc
add
cmp
adc
insl
pop
adc
inc
add
aaa
inc
add
cmp
add
inc
inc
add
inc
inc
add
and
adc
inc
add
das
or
dec
add
pop
mov
add
dec
add
add
add
dec
add
jge
push
push
inc
add
xchg
adc
add
xchg
inc
add
jno
add
jns
add
xor
add
lahf
add
cmp
icebp
and
xor
push
push
and
jp
or
dec
jo
push
je
inc
insb
outsb
jecxz
push
and
fcoml
sbb
mov
and
adc
inc
add
fisubl
in
sub
push
aas
add
lahf
add
dec
add
and
adc
dec
fisubrl
das
lahf
and
jmp
and
and
jl
add
out
and
mov
xchg
das
mulps
xor
and
mov
xor
and
pusha
pusha
daa
lcall
adc
adc
mov
fisubs
pop
jno
mov
and
and
lcall
int3
sub
xor
and
cmp
stc
and
jnp
and
jnp
push
sub
daa
inc
and
cmp
dec
and
push
mov
test
je
and
pop
daa
dec
push
adc
frstor
adc
adc
and
jmp
and
xor
call
xchg
or
and
cmp
xchg
inc
xchg
and
sub
adc
and
adcl
and
das
cmp
push
mov
jle
adc
shrl
add
adc
mov
xor
cmp
jne
mov
inc
cltd
adc
xor
mov
pop
xor
stos
dec
and
shl
inc
adc
inc
inc
add
stos
adc
call
pop
mov
sub
and
mov
imul
adc
xor
arpl
push
and
push
sub
add
add
pop
add
xchg
add
pop
mov
adc
push
pop
adc
jb
lahf
lock
push
scas
and
push
les
into
outsl
adc
xor
or
es
adc
jo
pop
adc
aas
or
stos
ss
or
aas
add
mov
ret
fistl
pop
fs
and
push
push
dec
aam
clc
pushl
mov
jmp
loop
sbb
push
push
xlat
adc
inc
inc
mov
jmp
jl
ret
adc
xor
xchg
adcb
inc
fists
pop
inc
fbstp
adc
and
test
das
push
cmpb
add
pop
add
xor
incl
adc
mov
and
adc
hlt
add
adc
sub
in
addb
push
push
mov
or
push
scas
lea
mov
sbb
test
and
adc
inc
and
cwtl
adc
lahf
arpl
and
push
add
xchg
ret
test
adc
popa
cmpsb
inc
adc
fsub
push
or
cmpl
fistl
enter
leave
aam
sbb
adc
push
jnp
ret
mov
mov
pushf
inc
adc
rcrb
mov
sbb
push
adc
xchg
adc
sub
inc
pop
adc
inc
adc
cmp
adc
and
leave
add
push
and
and
adc
add
outsl
push
nop
inc
dec
out
dec
adc
mov
and
and
push
test
or
jno
inc
adc
int3
and
adc
dec
test
push
and
cwtl
and
mov
mov
daa
add
adc
data16
sbb
das
dec
adc
and
imul
push
and
inc
adc
adc
mov
push
adc
push
mov
push
push
dec
jl
fs
and
ret
outsb
data16
push
xchg
cmp
and
sub
lret
insb
adc
das
push
add
and
insl
inc
adc
xlat
lcall
push
and
loope
xlat
xor
icebp
and
and
sbb
adc
inc
andl
adc
xchg
and
dec
pusha
push
adc
dec
inc
mov
adc
arpl
adc
pop
adc
mov
push
inc
adc
andb
push
and
jmp
inc
add
and
adc
daa
adc
pop
mov
pop
adc
dec
mov
add
test
xlat
and
xor
mov
pushf
rcrb
out
adc
xor
push
and
hlt
popa
jb
shll
inc
aas
inc
xchg
adc
xorb
pop
and
and
mov
jg
arpl
and
add
xor
inc
es
rcrb
arpl
call
or
and
and
pusha
test
mov
or
dec
adc
mov
push
and
pop
push
mov
test
je
rorb
call
dec
inc
adc
incl
adc
inc
adc
cmp
out
mov
andb
out
and
test
adc
add
jp
inc
push
adc
push
arpl
mov
adc
lds
jmp
and
pusha
adc
and
shrb
rcrb
lahf
mov
mov
imul
cs
push
cmp
mov
jne
pusha
pop
inc
cmp
pop
daa
push
sub
mov
xor
adc
add
dec
add
and
pop
add
add
aas
or
jl
aas
or
popa
jb
andb
xor
sub
scas
add
jnp
lea
and
jl
aam
addr16
and
lods
inc
adc
jno
adc
mov
hlt
js
cmpl
jne
lods
cmp
test
and
arpl
xchg
mov
adc
aad
out
adc
outsl
xchg
inc
mov
lcall
mov
cmpsb
cmpsb
adc
cwtl
mov
insb
adc
loope
jmp
scas
adc
bound
clc
jl
les
push
jnp
inc
adc
jmp
jecxz
sbb
mov
inc
mov
or
loope
inc
pop
and
ficoml
xchg
and
inc
adc
es
push
and
fcoml
sub
inc
dec
inc
add
xor
fs
pusha
test
jnp
popl
adc
leave
add
push
jne
and
outsb
adc
stos
jnp
notl
ret
jne
adcb
scas
jg
adc
push
and
and
mov
lcall
iret
push
adc
add
pop
dec
add
and
movd
shrb
out
and
push
and
fsubs
pop
mov
inc
aaa
and
jns
jne
sub
and
push
sbb
and
out
adc
adc
jne
lahf
sub
sbb
adc
fcmovnb
je
push
call
shlb
inc
sub
arpl
add
fisttpl
add
outsl
adc
and
shll
nop
adc
and
popa
jmp
and
adc
and
adc
and
mov
cmpsb
xor
ljmp
pop
jo
pop
adc
pop
add
inc
adc
popl
inc
jl
std
sub
movlps
and
pop
inc
add
adc
pusha
ficoml
dec
lea
adcl
sbb
xor
and
fs
sahf
push
adc
mov
mov
xor
adc
push
popa
and
and
adc
adc
adc
and
xchg
in
cmp
or
mov
push
push
dec
jle
popa
mov
lret
jg
mov
sbb
adc
mov
imul
and
subb
xchg
subb
mov
pop
and
mov
test
adc
xor
pop
addb
rcr
loopne
adc
dec
and
mov
adc
aaa
lea
mov
dec
jg
decb
adc
test
test
das
or
push
jmp
movb
push
push
inc
sub
lahf
mov
movsl
and
cmp
pusha
and
movsl
adc
shlb
adc
adc
outsb
jl
inc
add
pop
mov
and
and
adc
daa
and
inc
iret
adc
je
mov
and
insl
and
das
and
insb
push
shlb
lock
adc
daa
lock
adc
pusha
and
test
not
and
adc
mov
push
and
lcall
adc
and
and
imul
test
sub
pop
dec
adc
sub
sub
es
popa
pop
and
jo
and
dec
and
data16
xor
into
loopne
push
adc
jle
cmc
orb
pop
lea
je
lea
and
mov
pusha
mov
adc
call
adc
adc
and
pusha
or
push
and
xor
inc
adc
push
inc
std
daa
mov
adc
sub
dec
and
inc
adc
inc
mov
adc
and
adc
gs
int3
inc
and
mov
and
and
bound
or
ljmp
sub
stc
nop
mov
andb
and
and
sbb
adc
jbe
adc
int3
sub
lret
sub
pop
pop
es
sub
inc
dec
mov
iret
inc
and
and
mov
push
rorl
popf
ret
push
adc
push
dec
cmp
and
icebp
inc
jne
xor
es
mov
and
popf
loop
and
adc
das
push
or
outsl
and
add
xor
adc
add
stos
inc
and
and
adc
andb
jmp
xchg
and
and
mov
sub
adc
shll
into
and
jg
pop
inc
adc
and
inc
js
and
shlb
mov
add
scas
and
ljmp
push
lea
mov
sub
sub
fisubs
sub
sub
mov
scas
sub
dec
mov
and
mulb
cmp
dec
dec
jne
inc
sub
andb
sub
sub
and
inc
sub
pop
pusha
dec
adc
pop
xor
push
sub
inc
adc
cwtl
and
and
mov
not
and
inc
fsubrs
dec
pop
and
cs
arpl
sub
adc
enter
adc
inc
dec
inc
and
inc
cmpl
out
dec
pop
sbb
push
cmc
roll
aad
inc
test
jle
and
adc
sbb
dec
cmc
rcrl
ljmp
or
or
push
sbb
das
or
outsl
ds
jnp
xchg
and
daa
ljmp
daa
das
add
daa
das
pop
adc
jae
das
pop
jg
adc
mov
push
mov
adc
and
sub
adc
push
and
or
mov
sub
ljmp
adc
add
pop
lock
inc
subb
mov
sub
dec
mov
subb
sub
add
jg
int
cmp
es
adc
sbb
push
or
inc
insb
subl
add
aad
sub
adc
mov
punpckhbw
jp
xor
sbb
jg
pop
adc
loopne
adc
sub
cmpl
add
in
sub
into
adc
xor
push
jecxz
es
sub
sub
jecxz
sub
xchg
pop
xchg
adc
ljmp
and
sub
mov
jg
sbb
mov
and
jle
movl
mov
movl
adc
jle
cld
and
fs
and
add
add
xor
adc
inc
and
test
rolb
es
xchg
adc
pushf
mov
dec
xchg
adc
adc
push
adc
cmp
adc
adc
add
jnp
adc
dec
adc
jnp
dec
dec
adc
flds
out
and
nop
adc
and
adc
imul
ljmp
and
xor
mov
mov
and
mov
mov
sub
and
add
add
sub
adc
add
dec
adc
dec
bound
or
and
adc
push
and
dec
adc
sub
dec
adc
and
dec
adc
and
ds
adc
push
nop
adc
in
mov
dec
adc
mov
and
das
cld
add
das
sub
push
push
xchg
adc
and
sub
xor
test
loop
daa
xor
adc
and
and
and
ds
xor
and
inc
mov
push
mov
pop
jne
or
cmp
pusha
pop
adc
dec
sub
and
sub
or
jbe
dec
sub
push
pop
and
adc
and
dec
mov
and
adc
sub
and
lcall
lea
sub
and
lahf
inc
jns
sbb
jmp
daa
sub
push
and
adc
and
cmp
pusha
inc
in
gs
sub
push
and
push
adc
pop
push
or
or
lret
or
adc
jne
adc
push
es
sub
adc
mov
push
daa
outsl
sub
jmp
and
adc
mov
push
sub
adc
and
sub
imul
adc
icebp
popa
and
and
insl
sub
cmp
ja
adc
jle
das
data16
daa
repz
into
mov
adc
sub
lock
inc
xchg
inc
add
cmp
inc
rolb
inc
pop
sarb
andb
jo
push
sub
dec
adc
mov
and
out
nop
sub
pop
and
sub
inc
pusha
and
sub
pusha
and
adc
push
push
inc
jo
jmp
cmp
sub
add
add
lds
adc
xor
sub
in
add
add
adc
add
mov
pop
adc
shlb
adc
aaa
mov
adc
inc
je
lea
inc
xchg
and
and
sub
pop
mov
push
mov
adc
aad
ds
adc
xchg
push
and
mov
push
jmp
pushf
mov
outsl
and
aam
lods
dec
adc
pavgb
pop
lea
inc
jl
add
add
mov
inc
add
jge
add
inc
add
xchg
inc
add
out
inc
add
or
inc
add
je
add
mov
inc
add
fisttps
adc
test
add
out
and
push
inc
out
adc
push
nop
jno
jno
movsb
mov
push
and
jge
cs
add
adc
mov
adc
mov
inc
sub
pop
and
mov
in
push
pop
and
xchg
sub
xor
xor
xor
sub
xor
adc
xor
enter
mov
adc
lret
add
jl
sbb
and
xchg
and
insl
inc
adc
bound
mov
mov
movsl
sub
mov
jae
pusha
das
adc
jg
add
add
jns
add
mov
adc
inc
add
roll
roll
adc
inc
add
testl
adc
adc
add
iret
push
adc
pop
cmp
adc
inc
sub
arpl
in
fstps
inc
add
inc
xor
js
lods
and
jmp
jl
adc
mov
adc
arpl
jg
adc
sub
arpl
pop
sub
int
pop
sub
sub
arpl
insb
sub
arpl
or
adc
arpl
cs
and
arpl
sub
sub
scas
sub
sub
or
dec
push
sub
and
xor
arpl
daa
leave
sub
orb
push
adc
inc
mov
mov
clc
sub
cmp
shlb
daa
iret
dec
adc
cmp
sub
inc
and
adc
pop
sub
arpl
inc
xor
mov
movl
and
sub
inc
test
add
sub
mov
repz
test
mov
add
adc
in
pusha
imul
and
scas
test
incl
mov
cs
pop
adc
pop
and
adc
or
and
cmp
dec
dec
and
sub
cs
and
and
pusha
adc
sub
sbb
sbb
orb
adc
add
fs
orb
and
sub
and
das
dec
dec
adc
jmp
dec
dec
and
lcall
test
das
inc
adc
andb
pop
inc
add
outsl
cmpb
inc
sub
jp
and
sub
mov
cmp
je
and
and
xor
iret
bound
lds
jmp
ret
and
nop
add
and
js
imul
dec
sbbb
or
aaa
inc
aaa
adc
inc
add
inc
rolb
add
mov
add
flds
das
jg
and
xor
mov
popa
es
mov
push
sub
dec
and
add
mov
mov
pusha
pop
sub
and
aaa
mov
popa
andl
adc
add
fcoms
scas
int3
sbb
ljmp
jg
mov
adc
sub
xor
out
pop
lahf
dec
adc
adc
lahf
and
insb
fildll
adc
pushf
and
pushf
and
iret
adc
loopne
sub
adc
das
mov
bound
jbe
cmp
xchg
mov
mov
xor
adc
push
sbb
sub
and
fistl
adc
cld
mov
loope
push
test
and
sbb
das
in
add
xor
mov
mov
addl
scas
adc
jge
add
scas
adc
scas
adc
and
xchg
scas
adc
pusha
sbb
cmp
das
scas
adc
or
adc
in
xor
xor
and
xchg
scas
adc
das
scas
adc
lret
je
and
cmp
repnz
adc
inc
add
lea
adc
inc
add
nop
inc
add
inc
add
add
adc
add
xor
cmp
or
outsl
adc
push
adc
inc
add
cli
divb
or
inc
add
xor
adc
add
push
inc
add
addr16
add
cmpsb
inc
add
filds
adc
cmp
das
outsl
add
aas
adc
adc
and
adc
and
xor
shrb
adc
adc
scas
aas
adc
and
adc
adc
fs
adc
pop
sub
call
inc
sub
adc
test
sub
push
and
lcall
rolb
out
adc
addb
out
adc
adc
lahf
aas
and
and
and
mov
lahf
aas
es
adc
fsts
and
aaa
and
and
fs
jg
fcoml
mov
push
mov
pop
rorl
out
outsl
adc
scas
aad
mov
aas
adc
test
mov
test
adc
test
adc
inc
popa
push
pop
add
pop
or
adc
add
pop
es
adc
inc
dec
and
cmp
cwtl
adc
dec
dec
adc
dec
insl
xchg
push
sub
xchg
fs
jne
dec
sub
and
and
aas
mov
sub
adc
scas
nop
mov
adc
xor
adc
xorl
inc
adc
and
fadds
and
and
fs
cmp
add
pop
add
and
das
mov
inc
and
add
das
mov
daa
xor
mov
inc
push
cs
sub
or
movsl
loop
xor
inc
sbb
jle
movl
out
adc
dec
pop
arpl
mov
xor
insb
addb
mov
outsl
dec
scas
aas
adc
ss
mov
outsl
cmp
movups
and
and
aad
inc
dec
mov
inc
adc
sub
push
mov
es
adc
aas
dec
mov
dec
cmp
adc
dec
inc
sub
out
xor
and
sub
pusha
dec
and
and
leave
xor
and
xchg
and
add
sub
adc
add
loope
adc
cmp
and
dec
inc
or
and
lock
lea
and
lahf
inc
pop
and
mov
cmp
jb
lea
sub
add
insb
pusha
sub
sub
adc
add
cmp
jmp
lea
es
insb
and
mov
mov
inc
cmc
and
lods
and
mov
jecxz
push
and
cmp
cld
ss
xchg
in
mov
inc
xchg
xlat
nop
add
push
xchg
adc
incl
dec
in
adc
mov
sub
and
testb
xchg
and
push
into
and
sub
dec
and
adc
adc
sahf
adc
out
and
mov
push
and
in
pop
scas
adc
mov
push
adc
add
jge
jmp
mov
adc
add
cmpl
jne
or
inc
and
loopew
daa
push
push
and
mov
es
adc
or
adc
iret
inc
add
inc
push
push
push
push
leave
sub
push
adc
and
xor
push
fs
and
adc
mov
shll
out
and
adc
and
sub
mov
sbb
push
and
cmp
mov
and
adc
shll
xlat
vmovups
call
adc
in
jl
jmp
loop
adc
fsubs
outsb
inc
adc
and
aaa
and
frstor
and
adc
adc
fstl
mov
push
rcrb
inc
pop
adc
cmp
jle
and
add
int
call
cmp
jge
or
jmp
cmp
call
jns
push
push
mov
outsl
mov
loopne
je
and
mov
mov
mov
add
xor
mov
adc
pusha
loopne
ficoml
inc
rcr
fildll
mov
and
cmp
call
std
adc
in
cmp
and
insb
and
adc
test
sbb
shrb
xor
adc
push
and
jge
lea
andb
and
and
lods
and
scas
adc
test
das
adc
inc
inc
cmp
inc
sub
jne
and
and
inc
pusha
inc
pop
and
imul
and
inc
sbb
sub
add
mov
inc
es
movups
fs
clc
add
test
and
aad
xor
adc
adc
rcrb
adc
mov
inc
dec
cmp
inc
adc
sbb
push
ret
call
loop
sbb
jne
cmpl
je
sub
lods
andl
cmp
add
fcoml
inc
clc
and
pop
and
push
outsb
push
jmp
mov
pusha
pop
adc
and
adc
pusha
pop
adc
test
and
ss
add
push
sar
mov
mov
adc
xor
hlt
je
mov
in
loopne
sub
adc
pusha
mov
mov
frstor
adc
inc
popf
adc
adc
pusha
movsb
adc
dec
and
inc
push
mov
xor
push
add
inc
xor
lods
adc
enter
sub
adc
mov
test
ret
xchg
adc
and
adc
test
pusha
sbb
addl
xor
adc
sub
adc
pusha
popa
pop
adc
and
sub
sub
and
outsb
sbb
fstpt
adc
inc
push
jnp
fnstenv
dec
inc
and
adc
xlat
lcall
das
adc
xor
jns
and
xor
xchg
pop
adc
and
popa
adc
es
xor
loopne
and
and
mov
and
mov
cmp
mov
xchg
out
inc
out
int
cmp
int
push
daa
cmp
sub
cmpsb
aas
daa
xchg
add
dec
push
and
add
and
daa
xor
in
inc
push
and
pop
pop
mov
mov
cmp
cmp
inc
sbb
leave
jmp
mov
mov
rorl
lea
add
jo
data16
rcrb
pop
cs
xchg
and
pop
and
and
pop
adc
aam
adc
jo
aas
sub
add
daa
adc
shll
mov
and
andb
pop
inc
inc
inc
push
sub
add
add
fsubr
inc
inc
inc
mov
inc
xchg
sbb
push
and
add
inc
mov
dec
adc
or
sarl
int
sbb
adc
jmp
mov
inc
into
inc
repz
jmp
mov
jae
or
das
and
pusha
das
movsb
jnp
adc
push
mov
adc
jl
pushl
mov
and
add
jnp
mov
adc
dec
movsl
adc
andnps
and
inc
sub
or
and
pop
inc
popa
adcl
add
mov
ret
sbb
dec
movsb
and
adc
pushf
adcb
and
adc
subb
jb
adc
xchg
add
imul
mov
daa
adc
and
mov
sbb
adc
in
adc
mov
adc
or
notb
and
rclb
pop
and
aaa
and
and
mov
adc
jg
jmp
inc
add
add
inc
add
outsl
mov
inc
add
pop
lcall
adc
mov
adc
inc
add
movsb
inc
add
inc
add
adc
inc
add
dec
inc
add
aas
pop
adc
aas
pop
and
adc
je
adc
mov
sub
ja
adc
mov
movl
clc
lds
imul
push
and
inc
cmp
add
test
adc
mov
aaa
pop
add
inc
and
mov
push
test
adc
nop
hlt
xor
add
pop
mov
jno
adc
sub
add
inc
adc
and
ljmp
sub
aaa
dec
add
pop
xor
les
push
cmp
inc
xor
scas
and
jae
orl
je
jae
jle
lea
movsl
cmp
sub
and
leave
adc
inc
sbb
xchg
mov
int
mov
inc
inc
mov
adcb
mov
aam
add
sub
loopne
adc
add
cmp
pop
add
cmp
adc
outsb
add
pusha
cmp
adc
arpl
pusha
sub
xor
pop
ja
adc
and
enter
adc
add
dec
adc
loop
ja
es
jne
and
js
int
sub
leave
xlat
leave
test
inc
test
push
and
lea
and
push
fldl
and
cmp
dec
lea
add
cmp
call
imul
push
and
rclb
cmp
call
inc
notl
pop
sub
rol
mov
inc
adc
mov
inc
or
mov
xor
das
lret
add
inc
pusha
adc
xor
pop
clc
or
cltd
add
add
aas
insl
add
xchg
and
cmp
xor
jae
and
adc
shrb
lret
push
or
adc
add
jo
add
xchg
inc
add
cmpsl
inc
add
test
add
inc
add
roll
adc
inc
add
push
test
adc
stos
inc
add
inc
add
sbb
adc
add
incl
stc
sub
adc
je
fisttps
and
push
and
mov
dec
and
int
lret
mov
sub
pusha
jl
loopne
and
push
and
ficoml
adc
rclb
das
stc
sbb
popa
int
and
pop
adc
pop
adc
cwtl
andl
ds
ds
inc
xchg
bound
dec
mov
and
mov
sub
inc
or
js
test
ljmp
and
sub
dec
and
add
adcl
add
daa
adc
pop
ret
adc
add
and
adc
xor
and
and
sub
and
cmp
adc
cmp
outsl
sbb
adc
es
sub
dec
push
push
and
sub
adc
pop
lea
inc
and
mov
mov
pop
add
ret
and
mov
add
dec
xchg
xor
jo
jg
push
adc
fbld
ja
cltd
aas
jns
adc
dec
pop
scas
adc
xor
and
outsb
inc
push
adc
pop
and
inc
or
dec
pusha
loop
and
mov
pop
push
and
adc
movl
adc
into
inc
adc
movl
scas
jns
adc
xchg
mov
adc
cltd
enter
adc
add
dec
jnp
lea
insl
and
and
pop
inc
test
jl
push
ficoml
mov
mov
and
into
sbb
cmp
sbb
xor
push
mov
and
pusha
mov
jge
and
sub
add
and
adc
extrq
bound
sbb
jmp
jns
sbb
sub
sbb
and
dec
bound
mov
adc
xor
adc
test
adc
sub
xchg
add
outsl
sub
xor
das
outsl
sub
lods
and
outsl
sub
outsl
sub
notb
outsl
ldmxcsr
dec
inc
add
jle
ldmxcsr
push
and
and
xsave
jl
and
sub
in
fs
and
mov
adc
adc
dec
adcb
mov
mov
test
push
and
inc
lret
jmp
and
inc
mov
adc
jnp
arpl
mov
dec
adc
mov
push
scas
adc
inc
mov
jmp
inc
cmp
notb
outsl
fs
push
scas
pop
lea
mov
inc
dec
adc
rolb
add
jnp
add
movsb
inc
add
lahf
jbe
data16
mov
popa
andl
rolb
add
xor
sub
push
dec
nop
ret
cld
cs
nop
sub
add
dec
scas
inc
add
xchg
mov
and
and
sbb
data16
cwtl
adc
sub
mov
push
sarb
push
inc
cmpsl
and
sbb
ds
push
and
scas
pusha
popa
pusha
add
and
and
sub
sarl
mov
sti
xor
and
aas
dec
add
sub
aas
dec
add
add
dec
add
int
add
dec
add
add
dec
add
mov
adc
mov
pop
pop
ds
dec
adc
call
pop
adc
cmpsl
and
aad
outsl
add
cmp
ds
pop
nopl
std
cmp
pop
adc
pop
adc
nopl
nopl
jg
adc
mov
lea
and
out
and
sub
and
push
adc
pop
sub
push
inc
iret
pusha
pop
iret
pusha
mov
and
and
adc
sbb
push
adc
adc
adc
jg
fwait
cmp
and
cmc
mov
push
inc
jno
jns
adc
je
lds
into
adc
xchg
and
sub
add
push
es
adc
add
das
fbstp
daa
aas
add
fwait
pop
add
and
fistps
and
add
popl
xchg
add
iret
add
adc
mov
es
js
and
xor
sub
add
mov
movl
and
xor
adc
jne
adc
pop
adc
jle
and
adc
and
cmp
jl
and
pusha
inc
sub
jle
pop
shll
and
aam
aam
sub
clc
push
jae
jle
xor
test
jle
and
push
shrb
inc
cmp
jl
jmp
inc
add
adc
shlb
or
ret
dec
jmp
sarb
lret
xor
and
dec
adc
dec
fsubl
adc
fstpt
sahf
pusha
xor
je
sub
adc
pusha
push
adc
pusha
pop
adc
fistpll
ds
add
add
add
enter
adc
push
mov
adc
iret
das
jle
adc
adc
mov
push
adc
and
and
cmc
xor
jl
into
sbbb
push
adc
adc
stos
inc
adc
test
adc
and
shlb
aad
fdivs
inc
pop
adc
test
decl
pushl
in
and
test
mov
daa
xchg
jecxz
ja
xor
mov
inc
cmp
jne
inc
cmp
jl
jmp
jmp
and
sub
clc
pop
ret
aam
pushf
sub
sub
push
jmp
xor
add
adc
pop
pop
inc
sub
insb
push
or
pusha
inc
add
js
add
jl
gs
and
mov
in
and
fisubrs
sub
sub
jl
sbb
jb
loope
adc
arpl
push
add
popl
adc
dec
mov
fs
adc
add
pop
add
pop
fwait
aas
popl
adc
dec
jns
and
mov
push
mov
mov
mov
push
adc
adc
adc
adc
mov
push
adc
push
adc
push
adc
push
adc
movsb
les
adc
mov
mov
sbb
adc
add
and
adc
add
jmp
pusha
adc
sub
add
xor
adc
adc
inc
push
adc
add
adc
add
inc
pusha
add
dec
pusha
add
push
pusha
add
pop
subb
pusha
shrb
push
sbbb
jo
push
adc
adc
sbb
jl
add
addb
adc
inc
push
adc
add
xchg
sbbb
cwtl
mov
push
adc
add
adc
orb
movsb
pusha
add
test
add
lods
mov
rclb
cmpb
pusha
sbb
mov
pusha
add
shlb
adc
adc
inc
add
dec
mov
add
add
inc
aad
outsl
jnp
daa
xor
sbb
dec
pop
and
or
lock
dec
jo
aaa
dec
jo
lea
and
and
lcall
dec
pop
and
je
dec
and
jp
and
cmpsl
popf
adc
mov
push
push
add
push
push
push
push
push
and
popa
es
fwait
jp
adc
and
and
sub
cmp
adc
add
adc
xchg
pusha
arpl
aad
adc
push
inc
dec
insb
xchg
cmpl
and
les
test
and
push
pop
or
dec
push
adc
push
inc
sub
cltd
push
adc
es
es
and
ret
les
lahf
outsb
adc
lret
xchg
das
inc
or
adc
outsb
mov
and
mov
inc
and
pop
and
and
push
and
fcoms
mov
mov
popa
or
shrl
and
push
adc
inc
jne
hlt
push
fwait
insl
inc
sub
lret
cmp
ret
and
xor
cmp
adc
jbe
mov
fadds
es
sahf
and
xor
adc
adc
pushf
and
fisubrs
adc
sub
push
iret
and
lea
out
xchg
and
pop
and
popf
and
in
bound
mov
je
adc
dec
adc
imul
push
adc
inc
shll
inc
pop
sbb
es
test
inc
or
aam
and
jl
fadds
push
push
and
inc
and
lret
aaa
roll
jo
dec
adc
pop
jge
rcll
and
inc
pop
adc
and
push
popa
cli
inc
adc
js
sti
cld
xchg
outsl
push
mov
inc
push
ds
inc
push
or
call
cltd
pop
and
and
test
fldenv
pop
mov
inc
sub
cmp
adc
test
addl
adc
into
sub
and
push
and
jg
and
adc
and
adc
inc
popf
adc
jmp
xchg
adc
inc
xchg
adc
sbb
and
jae
adc
mov
pushf
or
mov
adc
push
and
jmp
iret
mov
mov
inc
stos
and
insb
adc
adc
and
adc
xchg
in
jmp
adc
jo
adc
inc
test
push
aas
out
inc
das
and
adc
jle
adc
mov
insl
push
adc
inc
adc
ret
adc
xorl
adc
adc
inc
adc
dec
adc
inc
adc
mov
and
jo
mov
movsl
lret
mov
roll
pusha
ljmp
imulb
jae
call
repz
or
xor
and
and
pusha
pop
inc
ja
sub
sub
in
and
icebp
and
adc
fs
and
mov
pop
and
sub
inc
scas
and
adc
test
imul
mov
adc
and
adc
jo
in
push
push
push
loop
push
sbb
dec
nop
add
inc
inc
add
je
add
sbb
mov
add
sbb
roll
callw
sbb
rol
call
arpl
adc
and
sub
push
push
and
sub
call
and
adc
inc
sub
push
push
popa
mov
adc
inc
sbb
and
and
cmp
and
fstl
sbb
sahf
pop
and
inc
mov
adc
sub
add
adc
cmp
dec
inc
adc
test
inc
fwait
adc
and
bound
push
and
and
cmp
sub
and
cmp
adc
mov
mov
dec
sub
jl
daa
mov
and
movsb
and
cmp
push
and
icebp
xor
cld
dec
and
movsb
adc
push
and
imul
fisubs
fimull
inc
jg
push
ret
out
cmp
es
and
mov
cmp
orl
inc
adc
lret
fcomps
js
pop
mov
cmp
je
popa
inc
pop
jne
mov
lea
and
push
xchg
out
xchg
pop
and
cmpsl
popa
repnz
cmpsb
mov
and
sbb
jle
adc
xor
mov
cmp
jle
and
pusha
and
and
pop
and
and
push
lds
inc
and
out
inc
ret
inc
inc
retw
adc
je
jns
and
and
daa
pop
push
adc
mov
xchg
adc
pusha
pop
adc
adc
and
mov
adc
movsl
mov
les
mov
pusha
mov
inc
and
sub
push
pusha
or
sub
fisubs
ret
pop
adc
xchg
mov
es
mov
adc
and
push
xor
sub
sarb
loope
adc
test
add
inc
or
repnz
cmp
outsb
and
je
inc
pop
je
cmpl
and
dec
and
stos
rolb
aam
or
push
pop
sub
and
inc
or
jo
or
stos
pushw
xchg
pop
add
or
inc
push
and
test
and
mov
and
inc
and
cmpsl
adc
repnz
pop
and
adc
mov
pop
and
or
and
test
sbb
pushw
cmc
decl
xchg
and
ja
cmp
and
loopne
mov
and
adc
rolb
and
sub
jmp
addb
shll
fstpl
dec
sub
and
aas
adc
lcall
inc
xchg
adc
pop
xor
adc
dec
jne
movsb
jg
jl
loopne
push
lods
jl
mov
mov
cmp
mov
hlt
mov
push
lods
mov
jmp
leave
mov
mov
adc
test
add
lods
pusha
add
mov
add
mov
cmp
xor
adc
or
shlb
les
sbb
into
orb
pusha
pop
adc
pusha
add
fsubs
adc
mov
or
addr16
andb
testb
adc
pusha
add
add
adc
inc
sbb
or
add
add
adc
movups
pusha
sbb
movl
adc
adcb
and
add
sub
and
dec
mov
mov
xor
and
cmp
adc
add
inc
mov
push
adc
pusha
dec
adc
and
dec
pusha
sbb
dec
pusha
add
push
pusha
add
push
orb
pop
andb
pop
pusha
sbb
pusha
pusha
add
fs
add
push
insb
mov
and
jo
sbb
je
add
js
add
jl
inc
adc
mov
push
adc
mov
push
adc
mov
addb
and
scas
and
or
mov
adc
pop
adc
adc
pushf
pusha
add
mov
mov
sbb
lods
pusha
adc
mov
add
mov
add
mov
sbbb
shlb
les
adc
pusha
add
int3
mov
push
adc
aam
sbb
fsubs
adc
pusha
add
loopne
and
in
sbb
adc
adc
pusha
add
hlt
mov
sbb
cld
pusha
adc
add
adc
or
inc
push
adc
adc
add
sbb
adc
sbb
and
adc
sub
adc
add
xor
push
adc
andb
cmp
adc
add
inc
pusha
add
inc
mov
and
dec
andb
dec
pusha
sbb
push
pusha
add
push
pusha
add
pop
mov
and
pop
andb
pusha
pusha
sbb
fs
add
push
mov
and
jb
and
je
sbb
js
add
jl
add
addb
and
xchg
add
sbb
adc
xchg
adc
loope
test
repnz
lods
push
adc
inc
and
push
adc
loopne
mov
jne
xor
fs
and
xor
xchg
adc
iret
movl
and
movsl
andb
pusha
sbb
cmp
pushf
lahf
adc
mov
xchg
mov
loope
cltd
adcl
and
xchg
mov
das
pop
inc
mov
rclb
xor
mov
pusha
adc
leave
mov
popf
rorl
adcb
push
mov
es
adc
ret
pusha
inc
scas
int3
adc
pop
sbb
lea
or
and
adcl
and
test
sub
add
jge
shrb
adc
es
mov
fisttps
inc
inc
adc
in
and
xchg
addb
shrb
fwait
mov
jecxz
adc
or
inc
or
rolb
movl
adc
roll
cmp
adc
lcall
or
lcall
mov
add
sbb
lcall
loope
adc
test
inc
pop
adc
mov
lea
pushl
dec
and
fistl
and
adc
mov
ret
je
pop
lret
pusha
pop
xchg
adc
adc
adc
push
call
lea
inc
adc
inc
inc
inc
notb
sub
inc
add
jae
cs
add
xchg
daa
dec
add
add
push
inc
dec
adc
dec
adc
mov
dec
add
mov
cmp
adc
push
sub
xchg
add
adc
adc
jne
mov
inc
inc
adc
mov
rclb
dec
mov
sub
adc
cmpl
adc
adc
and
or
add
call
movsb
and
adc
je
sub
push
jmp
and
adc
inc
inc
adc
sub
adc
pusha
inc
and
adc
inc
add
dec
xchg
adc
push
sub
inc
add
cmp
repz
dec
dec
inc
cmp
je
inc
inc
rorb
inc
and
pusha
mov
call
cmp
pop
pop
pop
je
orb
push
sub
adc
aad
adc
cmp
sub
mov
daa
mov
lea
adc
pop
pop
inc
push
inc
scas
adc
adc
in
ja
inc
adc
pop
movsb
ja
dec
inc
test
jne
and
mov
pop
and
jo
loopne
adc
loopne
imul
lea
adc
dec
adc
pusha
cmp
std
inc
das
mov
and
idivb
cmpl
dec
adc
xor
pop
add
cmp
mov
xor
add
cmpl
adc
xor
popa
adc
xor
and
xor
sbb
enter
pusha
sbb
and
and
push
loope
or
mov
and
adc
sub
inc
dec
adc
lret
or
adc
lret
and
mov
enter
js
adc
xor
and
rclb
idivb
pop
and
push
adc
aas
and
and
stos
and
mov
int3
sub
inc
jo
lcall
inc
fwait
adc
pop
and
jge
jbe
and
loope
mov
shr
pushf
sub
rep
jno
adc
idivb
sti
jle
int3
mov
or
mov
and
and
adc
pusha
adc
pop
pop
cmp
pop
je
and
and
inc
mov
outsl
jns
inc
push
and
imul
imul
aas
test
test
mov
je
xchg
xchg
adc
inc
sets
adc
cmp
lock
adc
daa
pop
outsl
and
inc
adc
adc
adc
mov
inc
adc
mov
lea
mov
call
pop
sub
leave
decl
adc
push
jno
sub
cmc
and
mov
dec
adc
inc
in
cmp
testb
sbb
int
icebp
xchg
and
outsl
adc
outsl
and
lahf
inc
pop
mov
and
popf
adc
dec
and
and
jl
sub
and
or
mov
fisubl
fstpt
inc
adc
and
jge
and
gs
adc
mov
jns
popa
int3
adc
shlb
mov
stos
loop
lahf
and
adc
icebp
inc
decb
adc
dec
dec
and
push
jb
idiv
scas
and
adc
and
adc
cmp
and
cmpl
insb
adc
scas
add
outsl
pop
adc
cmp
mov
mov
cmp
pop
bound
adc
push
mov
mov
inc
dec
add
clc
and
xor
and
and
rdpmc
rcrb
shlb
out
sub
inc
jb
add
out
and
push
mov
shlb
stos
sub
add
lahf
fildl
sub
test
inc
and
popa
mov
cmp
lahf
and
icebp
add
movsl
iret
lret
push
and
insb
and
loope
sub
pushf
and
and
pusha
jle
cmp
jo
inc
pop
adc
pusha
cmp
add
jae
adc
push
mov
adc
push
jno
adcb
xor
repnz
adc
push
mov
iret
adc
in
inc
sbb
test
and
je
inc
hlt
adc
jne
outsb
adc
out
jbe
adc
sub
add
roll
add
mov
outsb
adc
daa
outsb
add
call
std
les
je
xor
and
dec
adc
push
sub
jl
cmp
adc
arpl
adc
ja
and
ss
mov
mov
mov
cmp
jne
test
je
mov
inc
or
push
add
test
jne
daa
xchg
and
rclb
adc
in
adcl
cmp
push
es
add
mov
lock
inc
and
adc
mov
and
es
daa
sar
lahf
adc
out
add
dec
jle
rorb
adc
out
mov
xor
dec
and
and
jnp
pushl
fists
push
cmp
adc
xchg
inc
and
xchg
adc
xor
fists
mov
pushf
and
int
fists
es
or
xor
mov
pop
cmp
xchg
inc
int3
and
orb
lret
orb
int3
adc
mov
adc
loope
sub
xchg
inc
or
lcall
je
daa
sub
adc
inc
pop
cmp
fwait
pop
mov
and
inc
and
adc
mov
adc
mov
adc
pop
jae
cld
xchg
pusha
push
adc
and
push
jg
add
je
leave
cmp
mov
sete
mov
mov
and
sub
xor
dec
inc
mov
sub
and
pusha
and
add
es
pusha
and
and
and
and
adc
js
inc
jns
movsb
mov
add
out
add
mov
push
cmp
push
ja
adc
sbb
aas
xchg
adc
cmp
jl
and
xchg
adc
cltd
sbb
sub
in
pop
popa
adc
inc
sub
pop
loopne
adc
std
jp
stos
and
sbb
and
add
inc
js
stos
adc
sbb
imul
mov
mov
adc
push
adc
and
mov
popa
jo
and
popa
add
mov
add
dec
sub
scas
divl
jle
inc
sub
inc
cmp
inc
and
inc
inc
push
pushf
jg
push
add
lret
xor
cmp
adc
jne
jmp
mov
push
add
pop
sub
bound
smsw
in
adc
jmp
les
sbb
add
cmp
je
mov
push
fistps
adc
call
and
ljmp
jecxz
cld
inc
add
movsl
inc
add
in
add
add
mov
add
pop
inc
adc
aas
mov
xchg
and
and
and
mov
push
cmpb
fsub
and
popf
daa
add
adc
fimull
sbb
inc
js
xlat
ds
xchg
adc
daa
adc
and
leave
sub
lret
dec
sub
lret
push
das
sbb
adc
arpl
arpl
add
mov
sub
sahf
pop
sub
add
dec
push
das
sbb
adc
jg
and
sub
add
outsb
and
sbb
adc
mov
addb
xchg
inc
add
mov
inc
add
cmp
imul
inc
add
mov
add
mov
dec
test
lods
mov
pop
and
lahf
fs
repnz
out
das
jae
pusha
fs
es
jae
clc
mov
movl
addb
and
cltd
orb
mov
loopne
adc
or
and
adc
push
jae
iret
adc
das
scas
inc
lahf
adc
das
lods
or
dec
dec
and
arpl
or
pop
pusha
push
adc
and
and
sub
xor
adc
insl
cmp
adc
sub
adc
out
sub
arpl
in
aaa
adc
mov
dec
popf
adc
nop
mov
xchg
adc
data16
aaa
dec
pusha
xchg
and
cmp
xor
xchg
mov
dec
dec
and
cmp
cmpsl
dec
mov
xchg
decl
pushl
mov
adc
test
adc
push
and
clc
and
jge
lret
test
pop
mov
mov
pop
adc
cmp
es
or
adc
mov
and
jne
add
int
adc
sub
or
xor
xor
and
sub
sub
or
lcall
dec
lods
in
pusha
out
inc
in
adc
inc
das
outsl
js
shll
mov
js
inc
and
adc
outsl
js
inc
add
outsl
js
shlb
and
inc
jle
sub
add
hlt
xor
daa
mov
sarb
inc
push
inc
xor
ja
int3
inc
xchg
inc
and
push
adc
or
ja
testb
adc
das
incl
and
mov
adc
dec
and
push
and
cmp
fmulp
sub
adc
es
js
aas
adc
das
js
jns
outsb
aas
and
pop
xor
or
push
add
notl
lret
outsb
and
and
adc
push
push
call
and
jno
adc
iret
mov
fcmove
sub
lea
adc
dec
add
push
sbb
faddl
and
inc
bound
sub
and
and
add
add
out
adc
xchg
push
adc
lcall
and
adc
sub
add
add
out
and
cmp
dec
pusha
jbe
adc
pusha
das
adc
add
or
sub
loopne
adc
pop
add
out
pop
popa
cmp
and
jecxz
push
add
mov
aaa
aas
add
dec
and
pop
add
lahf
mov
nop
mov
test
jg
jg
and
movb
je
and
xchg
adc
push
adc
inc
mov
push
push
inc
mov
adc
and
orb
lret
and
inc
push
adc
push
inc
lcall
inc
stos
lret
jne
adc
dec
fs
sbb
je
push
adc
push
call
and
xchg
dec
push
push
push
pop
pop
adc
and
out
sbb
adc
inc
and
xor
xchg
push
mov
dec
mov
mov
or
push
gs
jge
and
adc
and
push
adc
pop
dec
cwtl
and
inc
sub
out
mov
and
ljmp
adc
dec
push
and
daa
adc
and
or
mov
and
cmp
and
test
das
add
sub
and
dec
and
lret
and
xchg
push
xchg
lock
mov
adc
bound
and
adc
adc
jbe
adc
jle
inc
mov
sub
add
jb
and
push
and
sbb
xchg
add
je
adc
adc
and
jecxz
movups
sub
add
and
inc
xor
cmc
jl
adc
or
outsl
mov
addr16
es
add
or
adc
pop
and
push
cmp
jne
pop
inc
and
push
lcall
and
dec
add
dec
or
shrl
sbb
shlb
cmp
cmp
cmc
adc
cmp
mov
mov
push
add
mov
fstpl
or
adc
push
cld
mov
mov
or
ljmp
pusha
sub
adc
mov
adc
push
and
or
pusha
jae
lea
mov
add
fdivp
adc
ret
adc
mov
mov
dec
dec
gs
inc
push
adc
mov
lods
adc
add
pusha
test
or
jp
sub
add
adc
inc
adc
notb
loopne
bound
cmc
dec
popl
adc
mov
mov
addb
adc
add
rorl
adc
add
add
inc
sub
pop
push
imul
dec
adc
pop
cmp
xor
adc
pusha
and
pop
xlat
adc
mov
and
orb
mov
adc
sub
adc
xor
popa
inc
sbb
push
lea
push
test
push
inc
xchg
adc
inc
xchg
adc
mov
shrl
push
lea
mov
lea
arpl
sub
mov
test
sbb
lret
lea
int
cmc
cmp
mov
mov
dec
mov
neg
inc
push
push
lea
and
adc
sub
cmp
adc
and
push
lea
adc
push
or
mov
sbb
decl
dec
adc
mov
stos
sbbb
jl
and
iret
push
sub
add
sbb
push
lea
mov
and
mov
xchg
ljmp
incb
pop
sub
popf
add
sub
mov
adc
adc
ljmp
adc
lea
jp
sub
adc
insb
adc
push
scas
sub
adc
aaa
pusha
shrb
mov
cwtl
pop
inc
adc
sub
inc
cs
cmp
popa
inc
adc
cs
cmp
adc
lea
in
and
pop
pusha
adc
add
xor
push
shl
xor
sub
push
and
sbb
pop
dec
pop
pop
mov
pop
pop
mov
inc
cwtl
inc
mov
mov
or
jge
gs
lea
push
lea
aad
adc
push
sub
inc
jo
das
out
loopne
adc
cmp
ja
adc
add
and
inc
inc
adc
iret
inc
rclb
cmc
xor
or
and
mov
pop
inc
push
frstor
and
mov
jae
and
jb
jmp
inc
fiadds
adc
inc
jge
push
sarb
adc
jnp
adc
das
jnp
adc
std
shlb
and
flds
mov
pop
inc
add
call
stos
mov
dec
cmp
notb
pop
inc
inc
push
adc
inc
push
mov
and
das
adc
push
adc
sub
add
pusha
mov
jnp
rcll
add
cmp
adc
mov
add
inc
xor
push
pop
mov
dec
xchg
adc
loope
adc
dec
adc
push
and
ss
sbb
cmpsb
and
add
and
mov
push
adc
pusha
cmp
insb
inc
mov
int
cwtl
adc
ds
movsb
imul
into
pusha
scas
mov
adc
jmp
inc
rcll
adc
xor
adc
repnz
mov
sub
mov
inc
in
jecxz
ds
inc
adc
movsb
xor
or
xchg
lea
inc
leave
xchg
repnz
lods
pop
adc
mov
mov
pusha
sub
adc
inc
sub
sub
adc
pop
push
rorl
jno
inc
push
adc
int
and
andb
xchg
adc
and
lahf
cmp
adc
sub
and
jge
xchg
outsl
and
jno
test
pop
and
sub
dec
adc
ret
pusha
push
bnd
iret
add
adc
add
sahf
add
lds
mov
fs
and
inc
pop
lods
dec
scas
lods
pusha
sub
push
and
stos
xor
add
adc
mov
jg
inc
or
pop
add
mov
mov
into
call
sbb
fistl
cmp
push
je
cmp
jge
and
and
cmpl
inc
inc
inc
sbb
jg
cmp
cmp
jle
sub
inc
or
and
insb
popa
and
jl
adc
call
inc
cli
adc
add
adc
pop
sbb
pop
adc
adc
add
push
lea
mov
inc
mov
adc
dec
bound
ret
pop
fsts
pusha
mov
inc
mov
iret
rcll
cmp
test
pop
adc
add
xor
adc
fisubrs
lret
jg
mov
lahf
adc
adc
inc
xor
add
mov
inc
adc
jne
orb
lahf
pusha
movups
jne
lds
pusha
jg
and
push
lahf
pusha
add
mov
pop
adc
jle
inc
js
negb
mov
mulb
adc
incb
leave
test
setle
dec
pop
and
lea
cs
adc
xor
mov
je
and
adc
or
cmp
adc
sbb
pop
and
in
and
pop
push
adc
adc
test
and
xlat
sub
pusha
xchg
adc
mov
and
adc
push
xor
adc
and
and
jbe
mov
and
xor
jo
and
adc
and
dec
and
in
and
jnp
out
pop
pushf
rorl
sbb
enter
mov
cmp
fdivrs
test
jle
adc
mov
pusha
and
pusha
adc
mov
inc
jle
sahf
push
adc
and
pop
adc
pusha
inc
adc
je
cmpl
hlt
and
aam
and
das
sti
and
mov
out
out
and
adc
add
and
jecxz
fcoml
lcall
mov
inc
test
dec
jg
adc
scas
inc
inc
or
dec
inc
mov
dec
and
and
cmp
in
and
adc
mov
and
adc
mov
cs
add
cmp
sub
adc
mov
and
jle
and
xor
iret
cwtl
cwtl
daa
adc
and
push
inc
adc
les
adc
dec
or
loopne
inc
pop
dec
add
dec
sub
adc
and
adc
mov
sub
xor
add
pop
adc
and
lock
mov
inc
push
and
mov
adcb
testl
jne
test
aas
add
mov
pop
inc
bound
pop
bound
adc
rcrb
inc
cmp
adc
inc
adc
sarl
adc
leave
adc
inc
cmp
push
cmp
lcall
adc
popa
in
mov
notb
je
add
ljmp
adc
lods
sahf
adc
xlat
icebp
and
rolb
adc
push
adc
pusha
and
call
jne
adc
inc
mov
pavgb
and
arpl
inc
imul
testb
pop
clc
addr16
adc
sub
je
mov
popa
inc
adc
adcl
or
pusha
or
xor
and
push
adc
testl
test
rolb
das
adc
or
sbb
pop
in
push
adc
in
push
and
movsl
arpl
adc
fsubs
and
adc
and
push
and
and
cmp
and
inc
mov
add
sub
add
and
pop
mov
jne
mov
lods
in
adc
inc
rcll
mov
add
lea
test
push
inc
sub
or
adc
cmp
push
jne
mov
mov
push
mov
iret
call
in
sarb
fistl
adc
pop
adc
pop
aam
rclb
lea
push
and
pop
adc
loope
xchg
cmp
inc
push
sub
mov
jl
adc
daa
hlt
add
aas
adc
mov
adc
add
push
lea
or
and
jecxz
and
insb
sub
xor
insb
and
dec
dec
and
and
sub
dec
xchg
aas
adc
lahf
inc
and
dec
pusha
push
adc
es
dec
adc
sbb
and
imul
or
and
adc
pop
sbb
lret
and
push
lea
and
mov
push
mov
inc
es
mov
cmp
jg
adc
or
push
lea
mov
sbb
cmc
je
and
jns
pop
in
and
and
adc
add
add
push
call
and
adc
jmp
lock
adc
push
adc
dec
push
popa
add
ljmp
inc
xchg
inc
in
adc
lcall
mov
arpl
xchg
and
push
and
jmp
aaa
cmpsb
or
psrlq
xor
orb
pusha
jno
push
or
sub
lea
push
and
adc
lea
push
adc
push
call
sub
inc
fbld
and
adc
pushf
adc
sub
and
outsb
mov
inc
test
push
mov
dec
jns
adc
lds
mov
lock
and
and
jb
movlps
push
and
sahf
adc
dec
lcall
adc
push
adc
and
rclb
inc
and
and
and
jno
or
leave
mov
je
inc
adc
arpl
jp
mov
lea
lret
add
xchg
hlt
sub
add
shll
bound
in
lea
fstps
or
adc
mov
xor
push
loopne
out
pusha
les
pop
negb
mov
mov
inc
adc
jmp
dec
adc
adc
loope
cmp
jne
aaa
and
dec
adc
bound
jge
adc
mov
dec
and
push
dec
out
adc
outsl
adc
inc
and
adc
and
adc
int3
sbbb
xor
mov
mov
movl
mov
jp
push
adc
gs
adc
and
inc
adc
jne
lods
lret
adc
dec
inc
adc
mov
pusha
ret
pop
bound
add
dec
jne
loopne
sub
add
mov
push
adc
data16
push
cmp
and
daa
and
sub
add
dec
mov
sub
push
movsb
pop
lods
inc
and
cmpb
je
push
push
mov
and
push
mov
lea
push
push
mov
inc
mov
das
sub
bound
adc
add
and
xchg
dec
push
pushf
dec
adc
push
push
inc
aas
fs
inc
inc
adc
inc
pusha
inc
adc
popf
adc
inc
adc
mov
inc
and
and
and
and
xor
push
lea
out
adc
pusha
ds
mov
pusha
and
rorl
orb
rorb
or
pusha
inc
adc
stc
xchg
sub
in
pusha
pop
and
pop
jge
ret
dec
push
and
fdivs
adc
adc
push
push
and
inc
sbb
leave
iret
pusha
call
mov
popa
mov
mov
adc
adc
jmp
jl
and
push
push
test
pusha
mov
lea
mov
arpl
and
push
pusha
mov
aad
sahf
adc
and
iret
adc
scas
adc
into
pop
adc
sub
add
lock
sub
add
jne
sub
add
jo
adc
adc
movsb
sub
add
lods
sub
rolb
ret
add
and
fsubs
roll
clc
cs
add
inc
pushf
sub
add
and
adc
adc
sub
xor
add
and
or
and
in
or
mov
or
adc
inc
jmp
xor
pusha
movups
pop
movsl
adc
mov
mov
sahf
jl
add
add
bound
adc
adc
insl
int
mov
inc
push
adc
lahf
inc
rorb
push
inc
add
testb
enter
int3
addb
sahf
aam
daa
adc
and
adc
mov
adc
add
out
adc
adc
loopne
adc
in
add
push
call
mov
lock
adc
nop
push
pusha
mov
sub
add
adc
adcb
addb
mov
mov
shlb
xchg
xor
and
pop
adc
adc
sbbb
adc
cs
imul
or
shrl
das
add
daa
scas
sbb
push
push
and
stos
mov
sub
or
adc
das
outsl
add
jge
push
adc
sub
addb
js
and
adc
cmp
pop
xor
inc
xchg
bound
xchg
adc
mov
scas
adc
loope
das
rclb
inc
inc
sub
and
push
adc
call
xor
mov
ss
xchg
bound
das
xchg
shrb
incl
mov
bound
adc
mov
push
inc
jge
call
adc
jp
xchg
xchg
adc
adc
inc
outsl
inc
adc
fisubl
mov
adc
sub
add
fisttps
movmskps
inc
out
inc
arpl
xchg
pusha
and
sbb
arpl
pusha
and
loopne
sub
add
pop
sub
cmp
adc
sub
adc
sub
adc
add
adc
add
adc
add
adc
add
pusha
adc
add
pusha
adc
add
pusha
adc
lea
adc
rorb
pushf
add
gs
sub
gs
adc
aad
sub
ficomps
mov
and
pop
sub
ljmp
pop
sub
add
adc
mov
jbe
cmp
mov
pusha
and
and
adc
and
pop
adc
and
inc
andb
add
add
bound
inc
add
addb
packuswb
xor
pop
out
mov
shlb
pushf
pop
adc
je
cmp
andl
adc
sub
or
movups
je
leave
ljmp
push
and
ret
imul
push
inc
jmp
adc
js
adc
insb
outsl
adc
insb
or
mov
adc
xor
adc
adc
jne
dec
ret
mov
push
mov
and
inc
sub
adc
push
cmp
lret
xor
adc
test
cltd
cmp
test
cld
and
xchg
and
and
adc
outsl
dec
push
xchg
adc
adc
lea
and
adc
mov
mov
pop
adc
out
and
pop
loopne
and
shll
sub
and
je
sub
cmp
and
andb
mov
sub
test
adc
push
adc
enter
sub
add
scas
adc
aad
xlat
lcall
sub
and
pop
sub
xor
outsb
and
pop
inc
mov
jl
xor
idivb
decb
test
cmp
pop
daa
adc
movb
sub
add
dec
pop
adc
lods
and
ret
jb
adc
mov
mov
les
rorl
inc
adc
add
push
sub
mov
adc
xor
adc
sbb
adc
je
adc
adc
adc
adc
push
mov
inc
adc
or
inc
jbe
adc
stc
sbbb
add
push
pusha
adc
and
and
push
adc
nop
scas
and
adc
adc
xchg
pusha
push
adc
pusha
xor
mov
std
loope
divb
cli
or
je
pusha
imul
pusha
pop
insl
jle
sub
and
xor
lea
mov
xor
and
jae
jae
adc
and
adc
sub
add
inc
xchg
add
mov
mov
push
inc
rclb
adc
clc
adc
mov
pusha
movups
push
adc
sahf
imul
inc
je
movl
das
clc
arpl
daa
ja
sub
clc
sub
adc
movaps
add
bound
push
daa
add
jbe
adc
mov
and
loopne
inc
pop
shrb
add
mov
jmp
sub
loope
xchg
lea
aas
jnp
cltd
pop
and
sbb
popf
push
adc
and
sub
mov
inc
sub
adc
cmp
pop
mov
andb
jb
jne
sub
push
mov
movsl
inc
lret
arpl
mov
mov
sbb
adc
sub
or
inc
cmpsb
es
adc
je
sub
adc
push
and
arpl
cmp
xchg
jecxz
and
addb
sub
out
xlat
inc
clc
sub
push
push
arpl
jl
arpl
dec
xchg
dec
cmpsb
inc
add
jl
xlat
arpl
mov
adc
test
adc
jnp
jge
mov
xchg
ud0
add
mov
jae
aaa
adc
daa
and
loope
adc
sbb
mov
and
negl
movsb
mov
add
adc
push
adc
notl
jle
in
and
sub
sbb
jne
xor
xor
mov
mov
mov
inc
pop
sub
add
daa
pop
add
popl
adc
mov
add
adc
fisubs
pop
add
jne
aad
xor
test
jge
adc
fmull
test
adc
je
mov
enter
and
sub
or
or
adc
sbb
lea
and
adc
add
or
daa
add
push
adc
jno
repz
pop
sub
add
andb
xorb
je
test
inc
in
adc
and
jo
xchg
pusha
inc
adc
inc
or
dec
and
imul
andb
pusha
inc
inc
outsl
inc
pop
adc
inc
pop
adc
sub
adc
or
pop
test
cmp
lret
xchg
cmpl
gs
adc
popa
mov
dec
and
imul
inc
inc
and
mull
sti
je
dec
mov
adc
and
push
dec
or
lret
je
push
adc
test
and
sbb
and
and
cmp
add
andb
add
adc
jge
mov
xlat
inc
and
jb
or
inc
lret
test
adc
sbb
adc
jle
sub
add
shlb
pusha
inc
inc
push
and
es
and
adc
notl
xorb
and
jae
test
addb
or
scas
push
push
mov
dec
jne
push
sahf
adc
inc
out
or
jle
adc
out
and
orb
dec
adc
dec
adc
adc
push
inc
ret
mov
mov
and
and
adc
pusha
daa
and
and
push
scas
inc
or
sub
adc
and
and
pop
dec
mov
and
pop
jge
adc
je
and
cmpb
test
je
adc
and
mov
adc
bound
pop
adc
mov
inc
push
adc
bound
inc
mov
in
insl
push
or
in
adc
daa
rolb
bound
mov
xor
adc
les
pushf
pusha
add
add
add
push
enter
or
adc
shr
popaw
lods
adc
adc
pusha
sub
add
pusha
xchg
xor
adc
pop
dec
shr
into
mov
lea
mov
and
mov
pusha
mov
cmp
cmp
jge
jp
push
push
push
call
cmp
add
cs
es
push
sub
adc
mov
icebp
inc
add
jl
std
push
inc
icebp
adc
or
mov
scas
adc
pusha
jae
pushf
dec
fisubl
inc
repz
dec
add
add
lea
push
adc
push
sub
sub
lret
test
pop
outsl
inc
adc
mov
rclb
fmuls
lea
sub
pop
push
inc
cmp
add
pop
and
sbb
dec
pushf
adc
and
jg
fists
mov
inc
or
mov
adc
rcrb
adc
test
and
adcb
mov
ja
adc
push
adc
inc
and
fsub
and
sub
push
popf
sub
adc
adc
lea
mov
adc
push
adc
stos
or
push
mov
adc
loopne
adc
test
es
jae
or
adc
inc
and
scas
shll
and
inc
adc
xchg
fbld
pop
jmp
cmp
inc
inc
and
fisubrl
dec
add
pop
sub
cmp
mov
xor
jle
sub
out
adc
adc
jo
add
jnp
add
mov
adc
pop
adc
inc
add
adc
lds
adc
inc
add
repz
add
adc
dec
inc
add
imul
dec
inc
pop
adc
adc
movsb
inc
das
adc
adc
add
add
pop
inc
add
mov
pusha
add
inc
add
sbb
add
pop
inc
add
mov
push
inc
imul
jl
add
test
add
mov
add
pop
inc
add
add
xchg
adc
sbb
in
adc
insb
inc
pop
adc
inc
add
testl
add
pop
adc
inc
pop
adc
inc
add
imul
dec
inc
dec
adc
pop
adc
add
lret
adc
inc
add
sbb
cmc
inc
add
xor
adc
add
insb
loope
pop
inc
adc
and
outsb
pop
adc
mov
fs
sub
and
pop
pusha
xor
inc
jno
and
test
push
push
call
pusha
push
adc
pusha
adc
xchg
and
je
imul
movups
and
dec
mov
das
in
mov
push
inc
push
adc
xorb
add
jne
dec
sub
and
and
sbb
in
je
mov
xor
and
jge
ret
dec
add
call
inc
and
jmp
and
and
add
sub
sbb
test
stos
cmpl
jne
and
sub
rolb
decl
adc
sbbb
xchg
and
pop
and
das
sahf
imul
sahf
and
orl
add
and
jmp
mov
adc
mov
and
jns
or
adc
jne
adc
xchg
sub
and
adc
dec
pushf
sub
and
sub
shl
adc
mov
shr
dec
inc
push
sbb
mov
std
pop
inc
in
cmp
jg
mov
sbb
rorb
xor
and
adc
add
call
jmp
mov
mov
mov
ret
mov
mov
std
movsl
jne
sub
xor
test
fistpl
and
pop
inc
cmp
pop
xor
inc
fmuls
rolb
call
inc
in
inc
mov
inc
jg
jg
lea
adc
and
daa
cmp
addl
push
test
mov
pop
push
adc
pop
cmpsb
adc
and
sub
adc
orb
or
les
adc
int3
mov
adc
push
pusha
pop
adc
xlat
fbld
mov
sbb
out
lea
imul
dec
adc
and
sub
add
mov
inc
push
adc
sbbb
pop
shll
jg
popa
xchg
pusha
mov
cmp
push
inc
mov
pop
adc
mov
in
xor
lea
adc
popa
mov
inc
and
daa
loope
test
sar
push
mov
mov
sarb
and
jecxz
outsl
add
push
jmp
sub
iret
js
rolb
push
jmp
and
mov
mov
xchg
pop
adc
cmp
ss
cmp
je
and
sti
and
and
je
jle
adc
sahf
fsts
test
jl
mov
and
std
adc
imul
adc
imul
inc
xor
and
mov
and
fwait
mov
adc
jb
adc
mov
add
mov
or
push
push
push
xor
push
push
push
push
jbe
pop
and
and
xchg
or
sbb
insb
and
lea
mov
and
movl
sbb
cmp
inc
aaa
pop
sbb
or
adc
je
arpl
xchg
pop
xor
cmpl
push
mov
jmp
mov
aaa
adc
push
and
and
cmp
pusha
lds
ret
xor
adc
das
and
adc
je
daa
mov
in
adc
and
xor
dec
sub
adc
push
adcl
dec
je
test
fsub
adc
and
dec
mov
adc
mov
cli
loope
maxps
push
push
push
and
adc
push
adc
add
iret
jno
pop
and
mov
xor
mov
and
inc
mov
push
loopne
and
or
mov
mov
inc
or
data16
mov
and
mov
je
adc
push
and
adc
sti
and
inc
xlat
adc
lret
sahf
pusha
pop
and
adc
cmp
adc
mov
push
adc
sub
sbb
adc
xchg
jnp
adc
je
adc
add
push
arpl
outsb
lds
push
mov
dec
cmp
je
lahf
push
mov
mov
fnstsw
rcll
push
and
adc
ljmp
xchg
xchg
nop
pop
adc
dec
ret
adc
inc
cltd
adc
rolb
push
mov
mov
inc
inc
add
je
and
sub
adc
je
dec
enter
push
test
inc
xor
pop
aas
adc
loope
and
aaa
mov
adc
dec
and
and
or
push
inc
or
adc
je
outsl
aas
adc
rorb
add
push
or
adc
test
dec
and
or
push
mov
mov
and
xchg
push
and
inc
sub
ss
inc
sbb
fidivrs
and
adc
sbb
push
call
mov
and
inc
adc
sub
insb
inc
addr16
frstor
cmpsl
and
and
mov
and
dec
adc
nop
and
andb
add
xchg
xchg
adc
push
mov
inc
and
push
and
inc
adc
or
adc
push
push
pusha
sahf
adc
ret
or
insl
push
and
dec
push
mov
and
inc
rcll
push
inc
sbb
xchg
fisubs
cmp
inc
mov
sbb
push
popl
and
xchg
js
push
pusha
and
daa
inc
aas
adc
and
mov
inc
sbb
fs
pop
dec
cli
fisubrl
adc
stc
and
adc
and
pop
and
and
cmp
and
sub
and
shr
inc
adc
and
and
and
fnsave
es
push
pusha
ss
aam
push
sub
cmp
je
and
sub
cmp
je
push
call
adc
mov
push
push
dec
sbb
and
jg
and
or
push
and
adc
mov
jl
cmpsl
push
mov
or
lock
orb
data16
mov
outsb
add
stos
cmp
divb
sbb
out
jb
and
sti
adc
inc
mov
push
data16
jns
adc
pop
push
xchg
jns
xor
sbb
daa
add
pop
dec
adc
and
mov
mov
scas
inc
and
adc
mov
je
pop
push
insl
dec
adc
push
aaa
pop
jle
cmpl
je
dec
orb
repz
inc
adc
and
mov
sarb
je
and
push
and
inc
mov
and
and
adc
loope
lret
inc
in
es
sub
xchg
ljmp
je
and
jbe
pop
sub
fsubrs
adcb
sbb
mov
add
mov
and
mov
adc
jl
es
add
and
xor
sbb
cmp
jge
inc
test
sub
mov
inc
pop
push
and
daa
and
sbb
adc
add
adc
push
push
xor
adc
sub
dec
outsb
inc
pop
adc
push
push
jmp
xor
mov
adc
outsl
and
lret
inc
es
adc
push
jmp
cmp
mov
lea
mov
xor
sub
sti
push
lea
mov
sub
maxps
add
and
and
adc
pop
jmp
and
addl
mov
mov
imul
ret
push
dec
push
dec
rorb
and
inc
adc
xor
push
inc
sub
pop
inc
jecxz
sbb
adc
dec
xchg
adc
and
push
and
jge
jmp
gs
adc
inc
sbb
repnz
adc
sbb
mov
adc
idivl
adc
inc
jl
adc
das
mov
dec
neg
sbb
and
add
push
mov
add
cmp
jl
inc
dec
and
add
xor
sub
adc
imul
adc
pusha
das
mov
inc
jmp
mov
dec
and
rcll
mov
movsl
in
adc
mov
ja
inc
push
adc
int
test
xchg
mov
push
jne
adc
sub
adc
and
sub
add
es
add
dec
add
xorl
xor
dec
add
cmp
add
je
dec
add
mov
ret
and
dec
adc
jecxz
adc
cmp
je
and
sbb
mov
test
mov
cmp
and
jne
mov
cmp
jne
fwait
adc
mov
adc
push
push
vpmovusdb
shrb
adc
test
sub
pusha
sbb
testb
push
and
adc
push
add
scas
sub
sbb
mov
push
adc
fldl
inc
and
mov
cmp
adc
adc
inc
mov
mov
adc
pop
ret
add
add
adc
daa
add
add
push
arpl
adc
call
add
adc
sbb
es
add
pop
inc
adc
mov
jo
sbb
andb
add
jle
sub
or
fadd
push
add
push
test
mov
jne
mov
mov
or
mov
adc
das
inc
inc
or
std
iret
push
imul
sbb
add
mov
adc
movl
sbb
jne
and
adc
push
pop
mov
test
adc
std
add
and
test
adc
call
mov
adc
fdivs
in
shr
sub
cmp
and
notl
jle
mov
lcall
je
mov
inc
inc
adc
or
test
je
shr
inc
loopne
daa
xor
adc
and
push
popa
mov
sub
sbb
pop
jmp
out
and
mov
jl
popa
jbe
pop
inc
xor
xchg
sub
movl
in
and
lret
and
sub
lea
sub
adc
arpl
adc
adc
je
lea
imul
decl
pop
ret
and
lcall
xor
sub
adc
frstor
cmp
and
insb
jl
push
sub
and
cmp
lret
xor
adc
add
jp
xchg
fs
adc
cmp
cltd
jge
jb
push
inc
jecxz
sub
adc
mov
adc
arpl
lea
cmp
adc
mov
sub
and
sub
push
test
push
lea
je
mov
shlb
mov
jb
pop
sub
sbb
das
push
lea
pushf
nop
dec
jnp
adc
lea
pusha
jne
or
xlat
xor
dec
and
insb
and
or
pop
mov
xor
inc
and
daa
and
iret
adc
test
lock
push
inc
add
push
call
test
sbb
cmp
outsb
ficoml
stos
adc
pop
add
adc
add
jne
pusha
stos
adc
loope
rorb
push
mov
xchg
and
jbe
inc
adc
js
push
out
add
jne
xor
test
adc
mov
inc
and
pusha
and
cmp
adc
jne
cmp
pusha
cmpb
xor
test
cmp
jne
cmpl
je
push
notb
iret
call
inc
jl
cmp
adc
mov
lea
inc
push
call
jbe
sub
add
inc
leave
mov
cltd
and
xchg
out
mov
or
adc
push
and
xor
xchg
adc
je
inc
xchg
adc
adc
cmp
adc
mov
mov
pop
and
ret
andl
push
inc
adc
int3
adc
adc
xor
jl
cmpsb
adc
lea
push
pop
adc
xchg
jb
fsubrs
mov
pop
pop
pop
mov
push
push
jp
jnp
pop
mov
mov
outsl
jo
mov
test
sub
std
or
call
and
dec
mov
inc
jl
incb
pop
add
lcall
daa
arpl
mov
pop
mov
and
sbb
xor
cmp
sete
push
push
xor
push
pusha
jae
or
push
call
insl
pop
popa
push
dec
into
mov
cmp
xor
and
push
call
mov
mov
js
pusha
and
dec
test
outsl
push
test
xor
and
and
adc
add
and
xor
push
sub
pusha
or
push
push
and
cwtl
insb
adc
inc
and
dec
inc
sbb
pusha
pop
dec
push
adc
rclb
lret
daa
adc
adc
test
fsts
je
leave
xchg
jo
jae
adc
adc
outsl
pop
arpl
adc
and
xor
dec
adc
and
push
inc
outsb
and
pusha
sbb
jne
inc
mov
pop
inc
imul
dec
adcl
fdivrs
icebp
inc
and
and
dec
jns
adc
adc
and
je
dec
es
sub
push
and
adc
adc
mov
inc
adc
and
stos
iret
adc
inc
flds
jp
adc
lret
adc
call
inc
jmp
pusha
sub
inc
sbb
lock
daa
cmp
or
xlat
in
insb
andb
push
push
push
and
shlb
adc
or
mov
xor
mov
adc
and
inc
adc
mov
inc
cmp
pop
jnp
adc
andl
add
adc
and
insb
adc
xor
xchg
xor
adc
xchg
adc
sub
or
adc
adc
dec
and
sub
pusha
sub
sbb
pop
movsl
and
push
adc
addr16
inc
xor
pusha
cmp
adc
xchg
sub
xchg
lahf
rclb
dec
es
push
aaa
pusha
or
lods
inc
push
and
insl
mov
pop
pop
cmp
es
sbb
aam
sbb
scas
adc
mov
push
lea
lods
daa
xor
adc
ja
adc
adc
add
dec
inc
push
outsb
outsb
loopne
inc
pop
add
outsb
push
adc
pusha
cmp
jge
and
ss
lahf
and
mov
pop
adc
add
add
jmp
out
pop
and
sub
and
inc
adc
and
adc
out
adc
mov
arpl
mov
lea
and
inc
xor
rclb
push
mov
in
in
pop
adc
jge
adc
push
lret
adc
cs
dec
adc
push
and
adc
or
mov
cwtl
das
and
push
sbb
add
dec
adc
xchg
fwait
push
adc
and
cmpsl
fisubl
and
cmp
jne
and
daa
popf
add
mov
push
adc
push
adc
popa
pusha
inc
adc
jp
adc
inc
push
adc
sub
js
adc
test
mov
mov
sub
adc
adc
fcomps
and
and
push
and
sub
lock
push
in
lea
test
mov
xor
and
dec
ficomps
mov
xchg
inc
pop
adc
dec
mov
push
adc
pop
call
inc
add
sbb
lea
adc
pusha
mov
fbstp
adc
test
and
popa
movsl
push
test
jl
mov
pop
ljmp
popa
pop
push
mov
jmp
mov
mov
andl
int
notb
cmp
adc
cmp
adc
mov
jge
aad
or
lcall
cmp
add
inc
sub
mov
push
fistl
inc
push
adc
adc
cmp
pop
mov
shll
testb
sub
loope
sahf
adc
and
adc
push
push
push
inc
bound
adc
cld
and
dec
add
and
lcall
and
lcall
mov
cmp
add
lcall
mov
popa
or
xor
and
cmp
daa
pop
sub
and
adc
adc
arpl
adc
adc
and
pop
stos
mov
pushf
pop
push
adc
jg
cwtl
das
mov
adc
pop
or
cltd
xor
mov
adc
and
lds
mov
push
movl
outsl
loopne
adc
pop
sbb
or
aas
in
adc
inc
xchg
adc
adc
adc
xor
push
and
adc
push
stc
and
dec
rclb
adc
loope
js
cmp
and
push
and
push
es
or
movsl
adc
and
and
adc
cld
sbb
aad
and
sbbl
jmp
jae
push
movl
pop
mov
push
lds
and
fcoms
adc
decl
push
mov
frstors
inc
mov
and
jne
mov
mov
jmp
cmp
jge
mov
ss
add
je
mov
and
insb
fcomps
cmp
jge
mov
lea
into
inc
jo
lea
inc
jo
dec
dec
loope
aad
and
adc
in
and
adc
je
in
lahf
adc
mov
in
push
shll
lcall
add
dec
adc
adc
movsl
adc
push
popa
adc
inc
dec
adc
mov
in
cmc
ficoml
mov
jmp
ret
pusha
pusha
and
pop
jne
ret
aam
and
and
test
cmp
sbb
adc
and
and
mov
cmp
jne
pusha
and
call
jmp
inc
inc
adc
imul
add
xor
adc
clc
adc
cs
adc
mov
adc
ret
xor
rorb
lahf
push
and
xor
fisttps
dec
add
shlb
mov
sbb
roll
dec
jne
imul
pop
sub
add
mov
je
bound
iret
and
pop
and
xchg
push
and
sub
xchg
insl
and
push
outsb
jmp
push
push
push
repnz
pop
sbbb
js
andb
adc
and
push
adc
push
and
call
lahf
cmp
jne
mov
mov
mov
test
je
mov
sbb
mov
inc
test
jne
cmpb
mov
inc
mov
addr16
iret
adc
ss
and
adcl
stc
cwtl
lahf
test
mov
adc
adc
test
and
adc
and
add
and
inc
aam
enter
cmp
mov
daa
jns
and
adc
adc
in
push
fs
sbb
mov
push
push
and
pop
lahf
scas
mov
lea
push
and
les
inc
fadds
sbb
mov
test
je
cmp
jne
mov
pushf
adc
adc
arpl
loopne
mov
dec
loopne
lahf
push
adc
mov
and
mov
dec
ficoml
dec
or
push
loopne
push
push
les
add
lea
push
out
and
adc
test
and
dec
adc
jne
mov
scas
push
adc
jne
arpl
adc
jno
xor
je
and
andl
aam
mov
mov
and
add
mov
xor
fdivl
rclb
mov
cmp
es
adc
mov
adc
mov
xor
inc
mov
inc
jne
adc
mov
inc
out
pop
inc
mov
add
xor
dec
adc
adc
test
adc
and
mov
lock
adc
and
adc
inc
cmc
dec
or
push
jne
inc
dec
adc
into
divl
add
outsl
xor
adc
es
popa
aaa
push
mov
inc
and
and
and
lea
add
loop
adc
push
and
mov
in
push
inc
fwait
adc
cmp
adc
incb
inc
lret
adc
mov
and
adc
sub
adc
add
cmpsb
inc
popa
adc
loopne
adc
push
in
js
dec
adc
jge
mov
push
call
jmp
mov
push
pop
call
mov
push
fcoml
ljmp
adc
ja
cs
inc
mov
dec
and
and
es
pop
dec
adc
and
adc
inc
add
mov
adc
adc
and
adc
push
in
push
fsubrs
sti
or
adc
lea
push
and
adc
add
pop
adc
xchg
pop
cmp
lea
bound
and
and
adc
push
test
loopne
mull
xor
shlb
push
pop
adc
pop
mov
test
mov
out
and
jne
out
and
cmp
aad
adc
adc
cmp
mov
jge
call
jl
pusha
pop
and
adc
mov
xchg
jge
push
adc
inc
sbb
sbb
dec
inc
dec
es
adc
movl
mov
and
fists
mov
test
jne
or
mov
adc
pusha
call
mov
mov
movl
xor
shr
test
jle
mov
add
xchg
or
mov
popf
sbb
mov
push
push
call
and
jb
int3
ss
xchg
sahf
mov
inc
adc
incl
adc
mov
add
addr16
pusha
inc
adc
and
rolb
aaa
daa
inc
aaa
rorb
data16
rclb
mov
push
adc
and
es
add
jmp
icebp
aaa
xorb
push
and
adc
das
and
inc
adc
aam
and
cmp
ffreep
and
xor
add
adc
pusha
adc
sub
rolb
adc
dec
push
adc
out
inc
inc
or
jnp
and
cmp
push
pop
mov
das
adc
sbb
cmp
mov
jle
inc
lds
push
or
cmp
je
mov
push
call
mov
and
adc
push
push
and
cmp
sbb
inc
es
das
adc
sahf
and
and
dec
adc
mov
mov
push
shr
mov
mov
adc
mov
add
add
mov
inc
rcll
dec
mov
and
iret
andl
cmp
call
mov
sahf
gs
sbbl
xchg
and
or
inc
inc
and
adc
fisubs
adc
mov
jg
test
cmp
aad
popa
adc
orb
int3
add
mov
lock
adc
push
pop
bound
jmp
bnd
and
xchg
and
ficompl
push
int3
adc
insb
insb
adc
jne
add
inc
mov
ljmp
push
push
push
push
push
and
loop
jnp
adc
jne
cmp
imul
lret
pop
shlb
adc
sub
inc
adc
call
and
or
ds
and
fsubl
loopne
adc
xchg
ret
inc
adc
testb
leave
and
and
adc
arpl
insb
inc
push
test
pusha
jbe
lds
and
adc
mov
call
adc
dec
xor
aaa
test
push
aaa
dec
daa
es
fs
adc
aaa
aaa
and
cmp
push
push
mov
es
and
xor
cmp
lret
and
inc
pop
adc
mov
pop
push
adc
adc
rolb
and
and
adc
jmp
inc
add
inc
add
aad
add
add
adc
inc
add
cmp
inc
add
add
push
mov
add
daa
das
add
das
mov
cmc
in
sub
dec
lahf
adc
dec
and
pop
adc
adc
fwait
inc
add
sub
jne
push
jns
adc
jp
repz
adc
mov
sub
adc
andb
imul
push
push
push
push
push
and
sub
push
add
push
inc
push
and
loopne
inc
ss
notl
jb
das
adc
pusha
and
and
stc
add
xchg
pop
adc
inc
add
or
popl
adc
adc
xlat
sub
adc
mov
verr
sbb
es
add
push
push
mov
push
out
add
pop
and
mov
mov
sub
sub
lea
and
and
mov
mov
adc
repz
adc
jge
sti
pop
ja
jmp
inc
rclb
mov
adc
rclb
sub
adc
sbb
pop
dec
adc
sbb
iret
in
and
and
rorb
les
jnp
popa
das
pop
sti
add
add
adc
daa
pusha
adcb
and
pusha
adcb
sti
add
cwtl
sub
mov
sub
sbb
and
notl
adc
das
data16
adc
or
pushf
sub
das
inc
aaa
and
inc
add
push
es
inc
xchg
and
mov
add
adcl
inc
and
sub
add
mov
and
mov
adc
sub
dec
adc
bound
stc
add
and
test
cmp
das
and
push
and
and
nop
and
neg
sbb
and
mov
nop
sub
fisttps
mov
and
test
cmp
adc
or
jne
xchg
cmp
adc
aam
mov
mov
adc
bound
adc
clc
push
and
push
and
inc
adc
push
adc
repz
jno
cmp
jp
and
dec
adc
adc
add
cwtl
inc
scas
adc
sub
sub
cld
inc
adc
call
pop
es
mov
imul
adc
inc
add
sbb
add
pushf
rolb
add
aaa
inc
add
xchg
inc
add
ljmp
shlb
je
fisttpll
icebp
pusha
mov
and
push
lea
lea
call
xor
and
xor
pusha
sarb
adc
and
pop
jne
and
pop
pusha
aam
mov
lret
and
pushf
dec
and
adc
mov
push
mov
adc
lea
add
inc
jle
xor
and
xor
or
mov
adc
or
and
xchg
push
test
push
adc
adc
inc
mov
adc
add
leave
cmp
and
and
push
sub
shll
add
pusha
inc
ret
sbb
cmpsl
sub
add
cmp
jne
jl
and
dec
adcb
lods
sub
add
cmp
jne
jge
jnp
mov
xor
or
add
cmp
jb
add
and
and
outsl
andb
sub
mov
outsl
push
jno
inc
inc
xor
mov
and
sub
pop
and
sub
xor
adc
push
and
pusha
and
push
adc
xchg
loopne
adc
jl
sub
movsl
jmp
jne
adc
push
push
and
and
ja
adc
sbb
add
jge
add
inc
and
xor
add
cmp
adc
sarl
neg
sbb
and
pop
and
pop
adc
mov
sub
add
mov
sub
add
mov
sub
and
xchg
inc
jge
sub
enter
ss
sub
test
jne
mov
pop
sbb
stc
and
or
adc
fists
notl
adc
inc
inc
adc
adc
test
andl
sbb
mov
mov
and
sub
out
xor
mov
mov
and
pusha
sbb
dec
and
push
in
adc
inc
rclb
inc
icebp
inc
adc
adc
inc
add
jmp
push
and
xchg
inc
notb
inc
and
ja
adc
insl
roll
and
jecxz
push
and
sub
jge
and
adc
pop
adc
inc
pusha
rclb
mov
and
xchg
or
push
bound
adc
and
and
push
arpl
and
popa
adc
jns
sbb
jns
adc
jbe
sbb
add
dec
inc
add
adc
inc
add
adc
adc
inc
add
pop
inc
add
push
add
add
add
pop
pop
add
add
sbb
pop
push
inc
add
inc
add
scas
inc
add
les
adc
inc
add
std
inc
add
outsl
sbb
sub
inc
es
pop
adc
mov
push
inc
cli
adc
xchg
adc
and
pushf
push
inc
pushf
adc
pop
push
adc
and
sbb
leave
inc
sbb
add
adc
insb
and
outsl
and
inc
push
inc
adc
inc
adc
inc
add
sbb
and
pusha
push
adc
jl
adc
mov
push
orb
cmpl
jb
jo
into
dec
adc
iret
and
adc
push
leave
mov
fisubl
jg
sbb
testl
jl
js
inc
andl
cmpsl
rcll
mov
outsb
cs
push
cs
add
xchg
adc
inc
push
push
cmpl
je
and
icebp
sub
add
and
cmp
aaa
adc
add
add
jns
adc
adc
data16
xor
mov
inc
test
cmc
pop
setge
mov
mov
adc
test
gs
adc
mov
adc
adc
rolb
mov
pusha
push
adc
test
inc
or
das
pop
imull
add
mov
and
test
adc
xor
add
push
pop
daa
adc
and
adc
push
or
test
adc
jne
or
adc
cs
add
pusha
push
inc
push
pusha
popf
adc
mov
das
and
adc
shrb
sub
jg
inc
mov
pop
mov
cs
les
adc
pop
adc
js
pusha
and
sti
inc
inc
pusha
add
push
inc
add
inc
add
adc
add
pusha
pop
pusha
add
add
adc
or
adc
add
aaa
adc
sub
sub
add
aaa
adc
add
aam
add
lock
add
add
adc
inc
add
dec
inc
add
push
inc
add
ja
add
adc
pop
jle
lahf
and
mov
rorb
xchg
mov
repnz
push
and
pop
push
push
jne
pushf
pop
and
inc
inc
jbe
adc
push
dec
pop
and
in
pop
adc
and
cmp
sbb
mov
inc
adc
xor
adc
mov
inc
pop
and
and
pop
es
inc
sbb
cmp
mov
jmp
and
and
and
testb
je
cmp
adc
je
or
cmp
or
lock
jmp
fisttpll
dec
xor
adc
and
dec
cld
inc
test
inc
mov
and
xor
rorb
cmp
jl
daa
enter
and
aaa
and
adc
test
mov
je
mov
pop
mov
mov
int3
es
loopne
and
pusha
adc
push
sub
fucomi
and
shll
cmp
adc
jo
mov
cmp
pop
adc
and
cmp
push
shr
and
out
pop
or
adc
test
xor
mov
mov
mov
outsl
out
and
and
adc
outsb
mov
repnz
sbb
push
push
push
push
push
and
bound
shll
das
xchg
sub
aas
sub
je
push
push
mov
adc
adc
mov
and
xor
in
icebp
adc
or
js
push
and
jmp
mov
jb
and
and
push
lea
pop
mov
dec
cmp
testl
and
inc
adc
bound
jg
adc
add
and
mov
push
and
iret
and
je
jae
insb
add
ds
and
and
xor
ja
mov
gs
xchg
adc
add
cli
adc
jbe
scas
notb
je
aam
add
pusha
sbb
and
adc
repz
push
and
adc
subb
mov
out
inc
mov
mov
xor
mov
test
inc
into
pop
xchg
pop
and
cmp
je
cmp
jle
or
mov
mov
and
xor
cmp
and
das
adc
cs
add
shr
rorb
and
xor
adc
xor
adc
rorb
adc
data16
dec
adc
adc
add
xor
or
and
and
dec
xor
mov
mov
mov
fs
adc
inc
add
lea
xor
adc
es
and
sub
aas
addr16
mov
push
push
adc
add
adc
and
dec
adc
jmp
lods
and
cmp
sbb
jge
mov
add
js
adc
nop
mov
and
push
sub
adc
adc
and
lds
adc
push
mov
mov
and
adc
and
es
jo
and
mov
xor
sbb
adc
popa
sbb
mov
mov
sub
sub
cmpl
adc
lea
and
jmp
mov
lea
and
repnz
cmp
sub
and
in
adc
push
cs
sbb
popa
mov
inc
rcl
cmp
test
jge
sahf
push
xor
adc
or
adc
lret
or
mov
adc
addl
add
lods
and
adc
and
nop
jl
adc
sbb
mov
push
sub
adc
sbb
jl
das
add
push
je
sbb
mov
and
inc
add
xor
iret
xor
test
adc
cmp
push
adcb
dec
xchg
ficoml
mov
add
inc
fnstenv
xor
arpl
and
mov
adc
add
and
and
add
loope
and
orl
adc
mov
jbe
adc
mov
adc
adc
inc
sbb
cmp
je
add
sbb
and
and
inc
push
adc
lds
or
sub
and
test
and
popf
out
and
bound
test
dec
adc
adc
lea
pop
pop
adc
push
lea
mov
add
and
and
jmp
inc
das
adc
loopne
arpl
adc
and
adc
sub
xchg
insl
jg
jno
movsb
and
lcall
adc
cmpsl
cmpsb
adc
mov
pop
pop
pop
push
cmp
je
mov
pop
sub
adc
and
and
adc
and
std
mov
test
and
adc
cmpsl
sub
add
adc
inc
or
cmp
inc
cmp
je
dec
inc
xor
test
jg
subb
sbb
adc
push
mov
or
and
mov
dec
adcb
inc
adc
pop
rcll
xchg
ret
push
cmp
push
cmp
add
leave
add
add
loope
daa
aas
add
push
shlb
lods
shll
xor
mov
ret
inc
repz
mov
cmp
jb
push
and
and
lods
out
pop
dec
sub
inc
neg
sbb
and
mov
and
add
sbb
subb
mov
test
inc
and
addr16
dec
fnsave
or
push
ss
mov
push
and
cltd
pop
mov
push
mov
mov
inc
jmp
jne
sub
push
jbe
jb
and
adc
inc
out
push
and
adc
sub
outsl
and
sub
ja
inc
icebp
and
jno
adc
xor
fwait
jae
leave
fwait
adc
add
adc
pop
ret
adc
leave
inc
std
gs
adc
add
push
xchg
adc
xchg
adc
mov
and
mov
and
inc
pop
adc
mov
movsb
pusha
dec
sub
rclb
push
xchg
clc
push
mov
sbb
inc
mov
sub
xchg
and
idivb
push
lea
and
mov
add
cmp
adc
jne
adc
add
and
mov
inc
and
cmp
inc
xor
xor
adc
jae
xchg
and
ret
jge
adc
mov
adc
clc
push
push
push
xchg
sahf
adc
cmp
jb
adc
repnz
adc
adc
push
push
xor
pushf
adc
bound
sub
inc
add
pop
pusha
xchg
adc
adc
pop
mov
pushf
adc
adc
jb
adc
adc
jb
adc
adc
daa
pushf
adc
dec
sub
sub
adc
les
lret
insb
jmp
pushf
adc
dec
dec
cmp
cld
mov
es
adc
push
inc
add
pop
xor
popf
adc
popf
adc
bound
popf
adc
popa
mov
and
cmp
adc
push
ss
adc
mov
rcrb
and
addl
and
adc
push
loop
adc
adc
push
loop
js
adc
adc
imul
adc
andl
and
js
inc
mov
and
sub
inc
and
pop
dec
mov
cld
sarl
cmp
adc
mov
daa
push
adc
add
push
mov
xchg
pop
inc
add
inc
add
inc
pop
push
xchg
inc
add
je
mov
mov
inc
add
add
mov
inc
add
inc
add
add
ret
adc
bound
test
pop
adc
pop
adc
inc
or
dec
adc
sti
inc
and
sbb
add
dec
inc
add
popa
inc
add
jbe
add
lcall
xchg
add
add
xorb
adc
xorb
add
adc
adc
mov
dec
pop
adc
mov
rorb
add
cmp
adc
inc
call
pop
inc
iret
test
and
dec
mov
or
fldenv
es
mov
cmp
inc
xor
out
and
jbe
or
mov
push
jae
ss
subb
add
movq
jg
inc
aaa
adc
and
adc
and
inc
and
in
adc
ljmp
mov
leave
push
test
jle
and
add
push
dec
scas
adc
cmp
jl
and
outsb
adc
inc
es
movups
outsl
pop
and
outsb
rcrb
or
dec
mov
je
mov
and
jno
add
push
out
jne
cmp
je
es
and
xor
add
outsb
das
adc
lea
add
sbb
imul
imul
cmp
pop
dec
or
jmp
shlb
mov
inc
xor
and
inc
add
and
add
sar
pop
and
and
adc
or
and
and
cmp
adc
or
jl
and
and
and
and
add
xor
loope
outsl
mov
mov
mov
arpl
xchg
or
sub
sarb
add
adc
xor
mov
adc
aam
and
sub
and
adc
movl
fbld
popa
rcrb
cmp
jle
mov
mov
mov
mov
pop
and
push
mov
mov
and
and
sbb
js
pop
jl
and
stc
adc
mov
jns
xorb
xchg
and
sub
push
adc
iret
mov
aaa
dec
xor
mov
insb
and
xor
sub
mov
push
mov
and
mov
in
adc
and
adc
dec
shrb
mov
lea
and
dec
and
lret
es
adc
rclb
xor
movsl
rclb
xor
adc
adc
adc
adc
adc
adc
adc
add
inc
sub
lea
and
push
inc
adc
jmp
and
sub
jge
add
lea
adc
cmp
cmp
jb
lea
xchg
mov
adc
xchg
inc
mov
xor
adc
push
dec
inc
and
adc
pop
and
int
aaa
pop
stc
adc
lret
and
add
and
push
and
shll
adc
inc
sub
adc
cmpb
mov
addb
rolb
pop
push
mov
and
mov
rcll
in
and
shll
adc
xor
mov
shrb
pop
loopne
and
add
cmp
and
add
add
add
push
adc
sub
adc
and
add
js
and
add
jl
and
add
popl
add
add
add
add
adc
adc
adc
push
push
and
inc
cmp
lea
fildll
rorl
pop
jnp
mov
push
xchg
hlt
adc
add
out
sbb
inc
fs
in
and
mov
jne
xorl
sub
nop
or
je
mov
and
jbe
push
mov
out
and
push
jno
cmpsl
ja
jb
sbb
xchg
dec
pusha
sbb
or
fsubrs
adc
lods
and
and
adc
push
and
and
sub
xchg
pusha
adc
and
jo
sbb
adc
dec
adc
lea
push
mov
frstor
sti
loop
mov
adc
xlat
adc
pusha
sbb
add
jne
subb
lcall
mov
and
adc
and
shll
and
dec
and
cmpsl
test
sbb
and
adc
mov
adc
mov
cltd
adc
mov
inc
or
lahf
dec
adc
jne
sub
sbb
cmp
jns
adc
imul
and
and
fstl
adc
and
insb
jnp
es
adc
and
daa
and
push
and
push
push
cmp
and
loopne
adc
cmp
push
cmp
or
call
mov
mov
adc
fstl
ret
movl
ja
sbb
pop
add
cmp
or
adc
adc
and
cmp
jne
mov
sbb
xlat
stos
adc
push
lds
xchg
cmp
cmp
test
push
and
insl
les
mov
push
jle
push
pop
outsb
rclb
push
mov
and
idivl
enter
xchg
mov
adc
inc
or
xchg
inc
and
rcrb
jb
inc
and
lea
ljmp
dec
or
mov
or
and
in
pushf
cmp
pop
and
in
sub
xchg
xchg
in
daa
iret
in
xchg
pop
and
movsb
pop
and
pusha
daa
mov
xchg
and
cmp
dec
and
mov
push
and
pop
xlat
mov
adc
mov
add
and
shll
and
sbb
je
mov
mov
cmp
mov
cmp
inc
icebp
pop
dec
and
or
adc
insb
cmp
jne
addl
xchg
adc
int
or
jmp
and
adc
or
addb
clc
add
adc
and
and
or
adc
jmp
sub
add
or
push
adc
cmp
loopne
adc
add
push
push
jbe
adc
sub
cmp
dec
repnz
daa
pop
jo
je
dec
je
dec
sub
cmp
jl
add
je
fs
pop
ds
xor
jmp
mov
push
call
sub
push
cltd
sub
mov
sar
call
and
test
mov
sub
pusha
adc
fcom
sti
pusha
adc
add
test
lea
and
jmp
es
dec
and
adc
aas
addl
sub
adcb
inc
popa
push
pusha
sub
testl
je
andl
mov
add
push
adc
adc
dec
adc
mov
outsb
mov
push
and
pop
aam
and
je
imul
and
push
jo
ret
sub
push
push
inc
rcll
push
push
push
push
push
and
and
es
and
in
pusha
jns
and
aam
or
adc
mov
and
adc
scas
and
subl
sub
inc
rcll
adc
and
dec
mov
sub
cmp
je
pusha
or
push
push
inc
ja
xchg
sub
cli
outsb
in
adc
aas
and
sbbb
lahf
and
mov
mov
cmpsb
mov
push
push
repnz
and
ret
and
test
and
push
and
adc
and
and
and
test
dec
add
movsl
inc
pop
inc
dec
adc
sub
test
xlat
andb
jne
and
sub
adc
ret
mov
adc
jb
add
add
sbb
inc
add
sub
inc
add
scas
and
adc
adc
or
inc
insb
inc
adc
dec
insb
mov
and
xlat
inc
std
pusha
add
inc
mov
inc
push
and
lret
and
mov
inc
scas
adcb
push
and
xchg
xchg
adc
and
and
and
cmp
push
ja
adc
push
pop
and
and
adc
insl
mov
sub
mov
rorb
adc
cmp
sub
lods
push
adc
leave
xor
inc
add
inc
inc
je
inc
fcoms
inc
mov
gs
inc
gs
lds
adc
mov
adc
or
or
mov
push
push
adc
sbb
add
inc
and
add
push
dec
pop
adc
push
adc
sub
dec
dec
sub
rcll
mov
cmp
je
add
xchg
call
inc
sub
add
sbb
add
sbb
adc
inc
sbb
movsl
dec
adc
pusha
mov
and
xor
add
adc
and
loopne
movsb
sub
xor
inc
cmp
add
das
fcoms
es
jle
sbb
mov
dec
fdivs
and
popf
movsl
adc
insb
pop
dec
leave
das
jp
popa
jns
fs
add
push
call
sbb
pusha
push
adc
xor
add
adc
sub
mov
push
push
adc
xchg
sahf
sub
dec
and
and
push
sub
lahf
shlb
push
push
and
mov
dec
adc
and
adc
and
lods
adc
and
sub
call
jae
adc
xchg
jl
int3
adc
flds
ret
push
sar
cmp
jne
cmp
xchg
les
adc
push
and
add
push
xor
adc
cs
add
adc
and
and
adc
sbb
inc
add
test
sub
or
sub
or
adc
dec
add
iret
je
sub
add
adc
inc
mov
mov
xor
and
aam
movsl
and
inc
das
adc
xor
mov
push
into
sub
and
leave
adc
push
sub
add
dec
and
xor
data16
xchg
add
loope
cs
add
sbb
adc
and
xor
jno
inc
and
adc
add
sbb
adc
fstl
mov
dec
push
and
sub
xor
call
cmp
test
mov
ficompl
xor
js
and
adc
push
inc
and
inc
js
sub
pop
xor
adc
adc
shll
and
mov
inc
or
cltd
mov
shlb
mov
out
push
inc
mov
cmpsb
xor
and
dec
sub
add
adc
xchg
lret
jae
sub
pop
jne
add
jbe
roll
adc
inc
add
inc
add
mov
adc
inc
add
fidivrl
add
jns
add
add
jge
add
xchg
inc
add
lods
inc
add
lret
inc
add
jecxz
add
sti
inc
add
jp
add
add
das
inc
mov
adc
inc
add
movl
adc
inc
add
fiaddl
adc
inc
dec
adc
inc
add
movl
fwait
cld
and
adc
ja
adc
sub
adc
jmp
jmp
jmp
movsl
ljmp
push
cs
add
outsl
ljmp
adc
in
sbb
gs
nop
ljmp
fs
sub
add
incb
je
pusha
inc
mov
stc
push
xorb
jle
adc
neg
pusha
push
adc
and
adc
add
and
pop
jmp
mov
pop
jmp
rcr
ss
push
popa
std
fs
sub
add
mov
xor
add
sub
sub
add
sub
sub
sub
add
daa
add
jmp
adc
and
adc
inc
add
jge
add
popl
adc
inc
add
out
add
clc
inc
add
or
add
adc
add
outsl
inc
add
mov
add
movb
fildl
adc
inc
add
add
inc
add
das
inc
add
inc
inc
add
pop
inc
add
outsb
inc
add
addl
movups
cs
mov
rcll
adc
test
and
rcll
test
pop
sub
lea
cmp
and
adc
and
cmp
and
and
adc
inc
adc
mov
adc
push
jge
adc
pop
into
sub
je
adc
jp
adc
pop
mov
and
adc
and
adc
inc
push
adc
sbb
mov
mov
mov
and
mov
sbb
and
inc
test
adc
push
mov
adc
aam
or
cmovs
insb
xchg
mov
pop
pop
and
dec
adc
push
inc
or
insb
and
loope
jmp
adc
inc
cmpsl
and
and
aas
adc
inc
sbb
xchg
jb
dec
roll
jge
mov
orl
cwtl
mov
adc
or
mov
popa
dec
sub
adc
sub
adc
or
test
and
mov
and
add
push
sub
add
adc
xchg
add
adc
xchg
inc
or
adc
inc
mov
inc
add
pop
sub
add
push
sub
adc
add
fdivrl
fadds
outsl
adc
inc
jl
mov
jl
and
sub
aam
je
adc
and
adc
xchg
jmp
fdivrs
adc
and
xor
daa
dec
cs
gs
push
and
sub
mov
pop
add
dec
and
mov
dec
rclb
and
pusha
inc
arpl
and
adc
and
pop
rcrb
das
pop
adc
pop
in
and
sbb
sub
gs
and
inc
or
push
and
push
sub
jb
fs
pop
das
shlb
add
push
push
ja
js
and
push
loopne
and
and
popa
push
rclb
and
pusha
mov
pusha
adc
mov
and
adc
sub
iret
sub
scas
aad
jno
add
and
xor
sbb
or
pop
pusha
xor
jg
or
mov
inc
repnz
aad
out
adc
out
add
push
sub
adc
or
and
leave
adc
or
or
pusha
push
and
add
mov
sbb
sub
out
and
jb
lea
xor
nop
sub
sbb
dec
lods
adc
es
adc
lea
fstl
sbb
pop
adc
std
adc
push
adc
and
adc
and
pop
adc
bound
push
jbe
jmp
and
and
aam
pusha
cmp
stos
lods
adc
movl
mov
outsl
je
mov
and
fimull
add
and
adc
adc
mov
jnp
in
and
add
and
adc
adc
push
enter
mov
mov
jns
sub
xor
adc
movl
and
sub
mov
test
add
xor
inc
or
push
cmp
mov
mov
mov
je
jnp
adc
arpl
adc
or
fbstp
dec
inc
adc
inc
daa
push
push
adc
mov
adc
sbb
and
pop
adcl
sub
add
pop
test
and
jns
ja
and
arpl
or
and
in
adc
sub
and
scas
js
and
and
stos
js
dec
and
lock
and
dec
popa
adc
test
xlat
and
sub
add
loop
and
pop
lret
adc
mov
insb
adc
out
and
adc
andl
jge
mov
and
push
into
call
je
adc
sbb
adc
inc
push
adc
fimull
inc
push
inc
pop
adc
sbb
and
sub
adc
lock
adc
mov
and
adc
movl
push
movsb
adc
sub
xchg
adc
and
pop
cmp
ss
adc
pop
lret
adc
inc
mov
adc
xorb
and
mov
push
and
ja
adc
mov
add
les
popa
cmpb
in
pop
cmp
mov
and
or
in
and
dec
adc
pop
mov
push
test
je
push
and
mov
and
and
adc
cmp
dec
test
jne
mov
push
jmp
popa
cmp
mov
dec
adc
ljmp
push
call
and
jb
adc
into
cwtl
adc
ja
adc
je
pusha
dec
loopne
pop
mov
adc
pop
pusha
inc
mov
movsl
pop
adc
mov
pop
and
adc
cmp
sub
mov
pop
orl
push
adc
stos
add
dec
ret
jno
and
and
ret
shll
sbb
xchg
dec
adc
mov
stc
sub
sbb
inc
test
cmp
jnp
pop
mov
dec
je
push
and
mov
push
add
mov
xlat
pop
jle
mov
add
cmp
je
data16
outsb
inc
or
cli
pop
sbb
repz
jne
addr16
and
inc
and
and
adc
inc
xor
sarb
sbb
shlb
push
add
out
mov
rcll
shlb
orb
push
push
call
pusha
mov
pop
sbb
ds
add
cmpw
adc
xor
andb
cmp
add
push
aaa
and
loopne
adc
pusha
jle
jns
aam
jns
pop
inc
or
mov
sub
pop
popa
inc
adc
jl
push
add
in
adc
adc
push
push
push
push
inc
and
push
cmp
sbb
add
ret
mov
mov
add
clc
add
jmp
push
push
mov
and
xor
loope
and
xor
shrb
adc
and
and
lret
adc
mov
scas
and
cmp
pusha
xchg
andb
addr16
sar
mov
shr
out
stc
pusha
movlps
adc
cmp
out
or
jge
mov
push
push
pusha
mov
call
jmp
mov
mov
and
push
scas
and
jle
bound
add
and
mov
fwait
mov
mov
les
push
pop
pop
daa
mov
and
pop
ss
adc
es
mov
push
jb
adc
test
mov
fs
mov
jne
push
mov
push
and
inc
sub
scas
adc
dec
jmp
adc
xor
jge
pop
jp
mov
lcall
pop
pop
inc
lcall
dec
mov
filds
adc
cmpl
jne
and
adc
je
and
test
call
or
and
lock
pop
inc
iret
adc
sub
in
push
adc
xchg
in
inc
xor
and
push
loopne
adc
and
adc
mov
push
adc
inc
and
fsubl
dec
push
gs
es
and
adc
imul
cmpsl
leave
mov
cmpsb
and
call
pop
push
push
and
es
adc
xchg
imul
inc
mov
xchg
imul
enter
rclb
fs
adc
add
mov
adc
inc
add
and
inc
jge
and
pop
adc
test
adc
cltd
dec
adc
mov
lcall
dec
bound
les
or
and
inc
mov
insb
pop
pop
pop
push
pusha
sub
xor
cmp
mov
add
adc
xchg
xchg
inc
add
lahf
rcll
ljmp
and
adc
mov
testl
and
movsb
adc
push
push
push
push
inc
hlt
and
inc
adc
es
add
inc
ret
inc
test
push
push
sub
mov
jmp
js
adc
add
out
and
in
pusha
or
add
out
insl
inc
aas
adc
lea
adc
sbb
mov
mov
jle
and
add
inc
xchg
sar
push
push
addl
jl
mull
scas
xchg
adc
and
fcoml
push
inc
xchg
and
adc
sub
or
push
pusha
adc
pop
and
daa
or
inc
or
push
popa
test
mov
outsb
andb
inc
push
sbb
cli
cmp
jl
inc
mov
pop
inc
cmpsb
adc
lock
pop
and
xor
test
mov
and
push
or
jmp
mov
jg
mov
and
aaa
adc
lds
shll
pusha
inc
adc
sarb
mov
lock
inc
sbb
cmp
push
xor
mulb
jle
fildl
inc
add
sbb
icebp
inc
add
and
adc
fdiv
fldl
adc
fcomp
inc
fcomps
fnstsw
test
jne
fstp
fldl
adc
leave
fmul
and
inc
or
dec
fmul
mov
push
mov
xchg
ret
inc
jp
cltd
fstp
js
adc
and
cwtl
push
adc
lock
jmp
adc
inc
and
inc
lock
arpl
loope
adc
fiadds
out
imul
sti
add
das
sti
add
lahf
add
add
icebp
and
inc
mov
dec
mov
popa
fadds
and
adc
and
adc
and
pop
cmp
jge
adc
dec
sub
and
int3
adc
pop
mov
jo
ss
and
adc
shufps
push
adc
arpl
rcrb
adc
sbb
adc
and
es
adc
push
test
nop
loope
inc
add
inc
add
inc
add
es
sbb
sbb
cmp
mov
jb
and
inc
adc
xorb
push
xor
push
push
gs
adc
xchg
cmpsl
mov
ja
xchg
vmovss
cmp
sub
add
and
and
adc
and
adc
lock
pop
jge
lret
cmp
mov
and
xor
jbe
or
and
data16
mov
xchg
cmp
and
int3
test
adc
mov
push
and
adc
mov
cli
dec
imul
imul
push
adc
and
inc
subl
mov
and
sub
sub
jle
push
adc
add
push
addr16
stos
and
and
mov
and
lret
xchg
adc
aas
push
mov
clc
xlat
adc
xor
adc
mov
pop
and
adc
je
cmp
test
adc
and
sub
orl
cmp
mov
fstps
push
mov
add
adc
test
inc
sbb
push
and
adc
lea
pop
mov
add
cmp
jae
dec
mov
or
push
adc
mov
repz
and
mov
or
dec
adc
cwtl
lea
das
add
sahf
inc
add
pop
add
add
adc
adc
adc
and
adc
mov
adc
mov
lret
push
popf
jg
fisubrs
and
in
xor
mov
and
and
jne
push
push
bound
daa
mov
sub
mov
adc
jl
push
cmp
je
mov
push
daa
jnp
pop
adc
and
mov
and
mov
jmp
mov
andl
inc
inc
and
cmp
xor
jno
adc
inc
add
inc
inc
add
inc
imul
xor
dec
cmpl
adc
sbb
push
inc
adc
pusha
push
and
push
cmp
push
mov
and
inc
mov
mov
adc
push
fs
adc
adc
mov
and
and
je
mov
and
cltd
mov
std
adc
popf
mov
inc
dec
insl
ss
push
and
sub
dec
adc
push
pop
dec
or
xchg
pop
test
pop
add
adc
daa
pop
add
adc
adc
je
and
adc
call
push
adc
and
adc
inc
xor
push
pop
pop
and
sub
cwtl
and
and
and
pusha
fcompl
sub
add
scas
daa
faddl
adc
jp
mov
fsubl
add
fwait
mov
sub
inc
pop
sbb
andb
add
outsl
mov
loopne
and
sbb
and
cmp
cmp
enter
and
fistl
cmc
andl
adc
and
xchg
and
dec
sub
dec
loop
adc
inc
sahf
sub
add
clc
push
adc
inc
jl
je
fdivs
adc
push
adc
aam
mov
and
pop
or
push
mov
call
pusha
push
adc
mov
pusha
cmp
mov
and
cltd
adc
test
pop
push
push
push
push
lea
shll
fcoms
rclb
loop
and
cmc
adc
adc
push
in
xor
test
jle
push
cmpl
loop
and
jb
adc
adc
rorb
cmp
jne
and
pop
add
mov
cmp
je
inc
add
cmp
jl
jmp
into
and
xor
ret
adc
mov
dec
mov
push
add
mov
call
out
and
pusha
adc
sub
adc
test
jle
adc
dec
mov
adc
stc
mov
xchg
les
inc
cli
and
jge
adc
mov
outsb
int3
cmp
or
pop
add
and
xchg
xchg
adc
and
imul
rclb
xchg
lods
sub
loop
adc
or
pcmpgtb
adc
ret
aaa
adc
test
and
stc
rolb
inc
mov
adc
fsubrl
je
push
adc
mov
mov
clc
adc
test
sbb
addr16
pusha
dec
lea
in
and
inc
inc
daa
pop
push
mov
and
and
cmp
mull
xchg
data16
adc
call
outsb
inc
and
pusha
inc
adc
sbb
inc
je
mov
sbb
and
adc
and
out
mov
daa
out
adc
mov
gs
and
and
insb
enter
adc
sbb
pminub
and
mov
insb
jmp
push
add
mull
pusha
jne
mov
and
inc
lcall
call
and
inc
ja
dec
pusha
sub
xor
out
incb
and
adc
sub
adc
std
arpl
lock
push
adc
mov
add
or
adc
je
inc
adc
and
and
and
xor
sbb
xchg
dec
orb
call
pop
adc
ret
add
flds
push
adcb
je
outsl
ja
stos
inc
adc
movl
sub
xchg
adc
inc
lea
jne
inc
mov
jno
outsl
daa
inc
add
jnp
inc
pop
and
inc
sub
add
pop
cmp
sbb
add
jg
dec
js
scas
pop
cmp
jle
dec
sub
mov
fcomi
jne
adc
mull
shrb
cs
push
and
nop
fimuls
inc
adc
fs
and
add
pusha
adc
push
adc
mov
push
jbe
sbb
and
mov
push
mov
shr
and
and
sub
inc
xchg
and
and
jo
cmp
jne
inc
mov
xchg
jb
adc
cmp
jge
and
xor
idivl
jmp
ja
inc
adc
mov
out
sub
cmp
jl
dec
sub
in
xorb
adc
and
push
and
mov
idivb
adc
and
adc
imul
push
aad
sbb
sub
adc
test
pusha
fwait
and
push
cmp
jne
inc
cmp
jne
dec
adc
dec
jns
inc
jae
and
mov
mov
pop
sbb
fmuls
test
inc
aas
popa
aad
add
push
xor
lea
out
mov
dec
adc
and
lcall
adc
mov
rol
imul
and
and
insb
and
jl
inc
frstor
xor
and
daa
sub
and
adc
and
jo
jns
arpl
adc
adc
mov
sub
adc
xor
pop
insb
xlat
arpl
adcb
and
loop
repnz
and
and
xor
inc
hlt
adc
sysret
push
mov
cli
and
les
scas
or
int
adc
push
and
dec
adc
dec
mov
xor
push
jge
pop
push
add
pop
dec
mov
pop
and
jno
test
and
imul
mov
adc
pop
roll
xor
adc
xchg
pusha
adc
pop
and
imul
mov
jo
dec
adc
adc
adc
es
or
and
cmp
outsl
push
and
dec
and
js
dec
cmp
and
mov
push
and
lea
dec
and
rcll
scas
adc
push
pop
jmp
mov
push
daa
icebp
jnp
lea
lods
adc
adc
add
and
inc
mov
jl
mov
push
adc
lea
adc
lods
add
jne
testl
inc
inc
mov
aas
and
inc
adc
jmp
sub
mov
mov
insl
cmp
adc
jl
cli
adc
jecxz
or
cmp
je
stc
mov
sub
and
outsb
insb
jg
out
sbb
mov
adc
shlb
and
test
adc
scas
insb
out
adc
test
and
adc
scas
insb
scas
adc
and
test
ret
adcl
repz
sbb
cmp
adc
out
test
movsl
je
sbb
adc
sub
je
ljmp
subb
leave
and
inc
and
xchg
and
test
and
ds
jb
push
adc
movsb
and
popf
sbbl
sub
jne
andl
push
pusha
insb
adc
mov
fnstsw
and
inc
mov
and
repz
push
and
lods
ljmp
nop
push
insb
and
je
cmp
xor
popl
xor
mov
call
shll
movsb
ds
mov
subl
adc
cmp
inc
add
fs
jo
popa
mov
push
add
adc
ret
pop
adc
rolb
leave
or
pop
inc
inc
adc
add
js
add
jl
add
mov
pusha
mov
jo
cmp
pusha
mov
push
jbe
pop
adc
es
push
inc
push
les
push
mov
into
out
outsl
push
adc
jl
jns
and
adc
and
mov
adc
je
push
inc
ljmp
push
out
cltd
sahf
pusha
pop
adc
adc
les
and
adc
je
sub
add
push
je
push
call
inc
add
push
and
mov
bnd
jae
dec
push
mov
push
and
faddl
and
xor
out
add
inc
inc
add
dec
movsb
and
insb
in
or
and
dec
sub
je
icebp
in
mov
cmp
dec
ret
popa
ja
jb
cmp
adc
sub
cmp
inc
adc
xor
adc
je
cmp
adc
and
xlat
adc
and
clc
xchg
fs
adc
mov
sub
dec
adc
test
and
je
push
dec
pop
imul
mov
mov
leave
jge
inc
mov
adc
push
loope
mov
ret
xchg
stos
mov
add
or
jnp
sbb
bound
adc
fildl
jp
popa
pop
adc
and
pop
and
xor
es
adc
jne
and
xor
sub
jns
and
inc
jne
pop
loope
and
xchg
notl
adc
in
adc
and
adc
and
daa
insb
add
sbb
testb
je
push
and
and
mov
push
subb
adc
inc
addl
orl
jb
cmp
ja
sub
push
and
je
mov
adc
push
jl
ja
adc
in
adc
pop
inc
and
xor
mov
and
or
adc
adc
test
jns
adc
adc
test
inc
mov
fcoml
push
jne
push
push
icebp
loope
adc
xchg
mov
adc
mov
dec
jg
adc
inc
inc
adc
lret
mov
adc
xchg
jp
add
sbb
mov
outsb
es
and
inc
mov
dec
adc
scas
xchg
adc
stc
sub
and
aas
adc
shrl
adc
or
test
cmp
je
cmp
jne
aas
adc
popw
adc
mov
sbb
icebp
adc
mov
adc
popf
jp
jns
sub
add
shll
pop
inc
mov
fs
into
adc
xchg
call
push
add
sub
sub
push
and
out
adc
es
add
cmpl
loop
pop
and
dec
inc
sub
add
cwtl
cmp
add
jne
popa
jb
mov
cmp
jle
pusha
xor
push
add
imul
dec
add
cmp
jl
jecxz
les
adc
jle
adc
je
cmp
je
cmp
and
sbb
cltd
adc
cmp
test
mov
cmp
and
call
call
cmp
jne
inc
adc
sub
and
int3
adc
jg
sub
add
cmp
je
cmp
pop
insb
adc
jmp
and
adc
push
mov
adc
adc
test
inc
inc
mov
je
cmp
je
adc
and
cmp
jne
aas
inc
inc
pop
into
add
add
jl
cmp
jle
cmp
jl
stos
sti
pop
jg
mov
add
mov
shlb
test
test
loopne
bound
and
stc
and
inc
and
adc
fnstcw
loope
pushf
shll
sbb
and
and
mov
adc
and
rclb
pushf
shll
jl
push
adc
or
fs
sub
adc
test
and
nop
adc
lea
sbbb
ret
adc
mov
sub
adc
sub
or
nop
sub
or
subl
adc
in
scas
and
test
je
pop
and
adc
stc
jle
mov
lret
or
sbb
and
xor
pusha
fiadds
sbb
adc
mov
adc
test
adc
outsb
ficoms
and
and
and
adc
add
cmp
push
mov
adc
call
jmp
and
ret
orb
push
inc
push
adc
aas
push
les
adc
push
push
adc
inc
adc
sub
pop
imul
rol
or
inc
or
cltd
xchg
adc
sub
sbb
pop
stc
std
adc
pop
push
inc
leave
adc
pop
adc
adc
lea
jmp
loop
and
xchg
xchg
mov
sti
adc
or
and
adc
and
adc
and
and
pusha
xor
mov
adc
outsb
sahf
and
sub
sub
sbbl
aas
popa
dec
add
inc
add
adc
lea
scas
add
enter
push
push
push
dec
mov
add
mov
test
and
inc
adc
lea
adc
insl
fadd
jb
add
mov
movsb
jne
mov
aam
push
rorl
xor
adc
mov
adc
mov
cmp
and
or
and
mov
sub
jne
mov
mov
push
and
jne
sbb
push
push
push
push
jmp
inc
xchg
addl
outsb
in
addb
cs
daa
push
add
adc
and
adc
and
dec
orl
lods
cli
les
adc
inc
adc
test
adc
clc
push
push
inc
daa
adc
outsl
and
adc
enter
lahf
movsb
insb
je
inc
ja
or
xchg
adc
ja
test
adc
clc
add
jb
adc
mov
add
sub
andb
lock
and
and
adc
out
inc
pop
adc
test
js
pushf
test
je
inc
dec
adc
les
adc
dec
xchg
inc
ljmp
or
mov
inc
and
stos
dec
mov
and
inc
push
pusha
or
adc
dec
adc
sub
lods
jnp
adc
mov
adc
and
mov
xor
cmp
jne
rolb
inc
or
adc
in
or
xchg
ret
dec
inc
in
call
pusha
in
inc
inc
add
mov
sub
xor
dec
or
shrb
mov
pusha
jmp
or
adc
cltd
cmpsb
and
call
dec
pusha
adc
ficoml
inc
or
es
sub
add
cmpl
inc
push
sub
add
and
mov
push
std
and
mov
add
adc
mov
enter
mov
mov
jmp
sar
mov
and
dec
adc
inc
lret
push
shr
enter
inc
pop
jo
bound
test
adc
stos
adc
stos
adc
insb
inc
or
movsl
add
cmpsb
sub
xor
mov
popf
popf
mov
and
and
sub
jae
jo
adc
inc
add
mov
add
push
movups
add
jo
add
jno
add
jb
pop
sub
add
cmovo
and
sub
and
sbb
int3
sub
adc
and
cmp
and
sub
imul
mov
jae
mov
sub
sbb
adc
jle
jne
and
and
adc
addr16
les
test
gs
push
adc
push
aas
fs
adc
sub
fists
adc
jo
daa
imul
and
inc
sbb
pop
pusha
outsb
push
sar
jo
fsubrl
aaa
ss
lods
fcoml
jbe
hlt
je
push
adc
loopne
out
dec
f2xm1
add
adc
inc
das
out
adc
and
cs
jecxz
notl
mov
test
cs
sub
pop
insb
sub
and
cmp
test
inc
adc
fsubrs
lret
data16
outsl
and
pop
cwtl
mov
sub
vunpcklps
sbb
dec
cmc
sub
bnd
push
and
adc
mov
addr16
inc
push
adc
iret
ficoml
cmp
and
ficoml
xlat
and
inc
nop
adc
and
and
adc
adc
and
adc
pusha
adc
cld
and
pop
dec
xor
shr
dec
js
addl
adc
push
mov
lods
xor
jecxz
xchg
mov
mov
adc
jle
ret
and
adc
cmp
je
jbe
lea
jg
adc
and
cwtl
adc
mov
sub
and
adc
popf
inc
pop
lcall
cli
add
dec
jns
and
dec
and
mov
sbb
pusha
dec
cmpb
and
mov
inc
sub
pop
and
push
and
mov
sub
inc
cmp
daa
cltd
pop
and
iret
sub
aaa
stc
and
imul
adc
mov
fadds
adc
decb
mov
and
sub
idiv
adc
xchg
sub
cmc
bound
and
bound
dec
daa
adc
mov
daa
das
inc
and
adc
shll
test
popf
push
and
sub
push
jbe
rolb
cmp
es
inc
cmp
out
int
sub
xor
addl
and
add
or
and
mov
adc
and
imul
mov
or
cs
jne
adc
shlb
adc
adc
and
push
pop
adc
push
and
and
and
adc
push
jle
adc
push
push
adc
inc
sbb
push
mov
dec
sub
jle
push
push
and
adc
push
xchg
adc
inc
filds
inc
jo
add
and
cli
fsub
adc
iret
pop
adc
push
inc
push
adc
push
mov
and
mov
mov
or
push
push
xchg
mov
aad
cmc
pop
and
mov
je
scas
cmc
push
arpl
adc
fldl
sbb
jne
push
push
jmp
mov
mov
adc
mov
lds
adc
inc
and
and
rcll
sbb
pop
xchg
inc
xchg
imul
xor
push
inc
test
jp
mov
lahf
in
adc
and
push
icebp
and
and
and
adc
jns
aad
lgs
and
push
and
and
inc
sub
in
and
push
adc
pop
ret
int3
inc
jge
adc
mov
mov
adc
add
daa
das
add
imul
das
adc
dec
cld
and
jno
mov
add
mov
movl
cmpl
add
repnz
js
adc
je
push
and
adc
adc
and
ja
sbb
sbb
adc
mov
sbbb
push
adc
cmpl
sete
test
inc
inc
adc
add
adc
or
pop
and
cwtl
xor
add
clc
fmulp
inc
sbb
dec
adc
xchg
push
add
pop
add
mov
and
dec
sub
addr16
sbb
xor
orb
dec
and
in
or
jmp
sub
and
scas
and
xor
movb
and
mov
adc
pusha
aas
and
bound
and
insb
cmp
dec
and
push
cmp
dec
call
dec
or
and
jns
inc
or
xchg
jae
push
add
inc
int
out
mov
call
inc
bound
jge
and
adc
jmp
inc
in
pusha
sub
or
call
dec
lea
dec
in
sub
inc
mov
add
push
popa
or
sbb
dec
nop
adc
lock
call
pop
pop
mov
mov
mov
add
popf
push
adc
jge
add
adc
movl
adc
clc
mov
and
and
dec
and
subb
scas
add
int3
inc
jge
mov
loopne
and
dec
adc
sbb
adc
cmp
insl
pusha
mov
in
jmp
cmpl
jl
push
in
loop
inc
inc
adc
adc
movl
mov
pusha
aaa
adc
add
or
adc
adc
out
inc
fadds
adc
inc
adc
adc
mov
xchg
hlt
xorb
mov
and
and
loopne
push
mov
mov
mov
mov
cmpl
ja
rorb
je
inc
or
adc
inc
and
xorb
and
push
adc
inc
adc
pusha
or
adc
pusha
or
hlt
push
adc
adcb
mov
xor
mov
mov
stos
sbb
movswl
mov
jmp
sbbb
cmpl
push
push
aam
push
jmp
inc
xor
cmpl
push
dec
aam
dec
shr
inc
sbb
pusha
jns
adc
inc
aam
inc
mov
add
mov
push
rorb
mov
mov
adc
inc
rclb
loopne
xchg
roll
add
in
jmp
dec
addl
jne
pushl
cltd
adc
outsb
ret
lock
sbb
mov
mov
movl
je
inc
ficoms
and
push
or
sbb
mov
mov
mov
adc
add
loopne
adc
mov
es
add
push
adc
call
jecxz
adc
adc
pop
adc
inc
push
adc
dec
and
lahf
movsb
scas
push
dec
lcall
adc
addb
xlat
daa
pop
add
movl
imul
adc
adc
add
nop
pop
sub
add
pop
inc
pushf
adc
adcb
inc
frstor
and
gs
das
and
jecxz
and
ds
adc
adc
adc
sbb
popl
adc
loopne
orl
add
mov
jnp
and
movsl
adc
pop
pop
pusha
sub
fnstsw
test
xor
pop
daa
movsl
add
je
movsl
adc
addb
and
and
inc
sub
fs
dec
or
dec
or
inc
notb
or
push
hlt
inc
leave
adc
cld
sub
ret
push
inc
mov
mov
jg
mov
dec
pop
xor
add
and
jb
dec
mov
mov
pusha
mov
xor
pop
mov
shrb
pop
adc
mov
mov
hlt
int
decl
jmp
pusha
adc
pusha
js
xchg
adc
mov
dec
subb
or
adc
and
adc
adc
and
mov
jp
rclb
mov
and
subb
lds
ret
daa
adc
and
and
push
andl
sub
push
pop
test
and
mov
mov
xor
test
jle
push
adcl
push
loopne
adc
addb
dec
xor
inc
test
je
jmp
xlat
into
sbb
jl
pop
mov
shlb
daa
scas
sbb
mov
push
mov
xchg
js
outsl
and
test
push
mov
int
xor
jle
push
adc
lahf
filds
and
jns
fdivrs
jecxz
es
adc
inc
roll
xchg
cmp
or
adc
pop
lret
inc
and
popa
cmovno
adc
ret
pusha
cwtl
adc
and
adc
adc
xor
pusha
push
adc
aas
pop
adc
add
jg
mov
mov
adc
mov
xor
ret
and
xor
and
sub
sub
push
mov
dec
or
cmp
jb
inc
add
add
or
adc
adc
call
jo
adc
or
adc
inc
adc
adc
adc
push
mov
inc
adc
adc
adc
dec
jne
and
inc
sbb
insl
jne
mov
jmp
inc
or
outsb
inc
or
mov
inc
or
outsl
jne
mov
lcall
sbb
jl
cmp
jle
mov
dec
adc
mov
das
adc
adc
adc
push
add
test
add
pop
inc
and
pop
sub
add
push
push
adc
and
or
push
adc
jle
mov
bound
sbb
push
adc
sub
add
cmp
adc
loopne
adc
cmp
add
push
add
push
add
mov
mov
and
add
inc
jne
mov
push
cltd
mov
sti
pop
mov
adc
mov
cltd
idiv
and
and
enter
cmovno
mov
and
adc
and
or
and
mov
pop
add
cmp
xor
sub
push
add
and
dec
add
cmpb
jne
cmpb
jne
cmpb
jne
cmpb
and
sub
add
adc
fbld
ltr
fldlg2
fldl
fyl2x
fstpl
incb
adc
mov
shl
sub
movsbl
mov
fildl
fmull
xor
add
adc
sub
inc
push
inc
sbb
mov
fstpl
flds
test
fabs
jle
fdivl
jmp
fmull
fcoml
xor
fmull
inc
sub
fmull
jmp
fcoml
je
and
adc
and
mov
fmull
fstpl
gs
adc
lock
and
adc
sbb
fldl
fsubs
and
pusha
dec
inc
xchg
fcomps
test
pop
pop
fnstsw
jle
inc
pop
pusha
pusha
adc
or
fmulp
lea
adc
fdivrp
sbb
sub
jmp
jns
test
arpl
inc
mov
push
adc
test
inc
insl
and
pusha
and
jmp
xchg
mov
pop
jmp
popf
sbb
test
push
jmp
xchg
scas
mov
lcall
jnp
push
dec
jmp
mov
and
adc
or
add
adc
add
fcompl
mov
add
adc
and
fisubl
pop
inc
adc
adc
fsincos
jne
mov
add
inc
les
pusha
jns
sbb
pusha
and
inc
xchg
inc
and
subb
add
sbb
adc
and
pusha
xor
push
push
adc
mov
and
and
mov
adc
push
and
push
and
lret
xor
sub
das
and
mov
jge
or
addr16
pop
rol
or
adc
std
pop
sti
andb
pusha
ja
and
pusha
or
dec
and
adc
and
inc
push
push
and
mov
icebp
push
adc
pushl
push
and
adc
push
inc
sbb
rcrb
jmp
cwtl
xor
pop
inc
sbb
adc
popa
mov
sbb
adc
sbb
mov
pusha
sbb
and
nop
sub
add
or
inc
xor
and
rorl
repnz
mov
dec
popa
rcll
int
jae
outsl
inc
adc
jne
and
test
pop
jo
push
adc
rclb
and
inc
mov
stos
sbb
and
cmp
jne
mov
inc
pop
in
push
xor
mov
inc
jb
mov
mov
or
adc
sub
ja
mov
dec
iret
sbb
je
cmp
je
test
push
pusha
and
and
push
inc
sbb
add
xchg
mov
pop
sbbb
jne
and
inc
or
scas
les
enter
adc
int3
es
insl
adc
and
xor
and
mov
adc
and
outsb
adc
daa
adc
je
push
pusha
or
sub
and
xchg
aaa
inc
adc
and
or
je
cmp
jb
cmp
ja
lea
inc
adc
addr16
inc
inc
lea
and
inc
aaa
adc
pusha
das
add
das
je
cmp
je
cmp
je
cmp
je
inc
dec
add
icebp
mov
cmp
jne
add
jmp
inc
xor
add
fwait
inc
ja
pop
and
dec
inc
pop
adc
pusha
xchg
rcrb
pusha
pop
adc
pop
adc
pusha
pop
adc
pusha
pop
adc
ret
or
adc
shr
or
and
add
mov
sbb
pop
and
dec
andb
adc
andb
pusha
adc
pusha
addr16
jno
cmp
scas
adc
pusha
insb
adc
es
add
aad
and
aam
pop
shr
cmovo
divb
shlb
cmpb
add
js
adc
js
inc
add
mov
and
inc
imul
and
and
pusha
gs
cmp
cmp
pusha
bound
lea
and
mov
jle
add
data16
mov
data16
and
add
je
gs
sub
es
add
jmp
jne
adc
and
and
sub
xor
jae
adc
movsb
xchg
arpl
pusha
push
adc
and
lcall
clc
jne
cmp
adc
and
data16
jmp
push
jl
inc
inc
adc
lret
jne
jne
adc
ljmp
cmp
jne
push
andl
sub
push
and
js
inc
inc
mov
bound
frstor
and
inc
and
and
andl
and
aas
cmp
ret
xor
add
mov
adc
and
daa
sub
xchg
jle
push
dec
and
inc
and
movsl
adc
and
and
mov
mov
inc
adc
call
push
inc
cmp
inc
inc
and
loopne
push
mov
and
mov
inc
and
and
inc
adc
and
pop
dec
insl
adc
cmp
test
cmp
jl
add
add
dec
jmp
pop
pop
pop
pop
and
and
pop
cmp
mov
jne
cmp
jne
mov
ret
cmp
inc
push
adc
ret
cmp
inc
lods
add
out
jne
mov
ret
cmp
jne
cmp
jbe
cmp
jae
and
ret
xor
xor
pusha
jg
and
jle
ret
pusha
jle
jnp
or
ja
repz
ja
lods
cmp
das
mov
adc
leave
push
dec
sbb
jle
push
jns
inc
inc
adc
xor
inc
inc
pop
cmp
jge
cmp
jle
inc
inc
adc
repnz
jp
pop
pop
pop
pop
dec
cmp
loope
stos
mov
jmp
loopne
adc
sarb
scas
test
sub
lahf
and
enter
ror
das
dec
and
and
push
xchg
daa
insb
or
add
ret
pop
pop
pop
sub
movl
add
out
jp
cltd
adc
push
shlb
shll
lahf
push
and
and
xor
pusha
ss
sbb
sub
inc
fstl
adc
enter
sub
lods
das
adc
add
jge
mov
movsl
add
dec
sub
fcoms
cmp
jecxz
adc
fisttps
test
js
push
je
dec
cmp
jle
push
call
mov
and
sbb
pushf
dec
adc
push
pop
push
xchg
sbb
cmp
je
mov
mov
and
dec
sbb
cmp
mov
mov
mov
rcrb
sbb
adc
sub
dec
adc
sti
dec
rcll
cmp
cmp
imul
jns
and
and
pop
and
xchg
daa
and
inc
jmp
sub
xor
push
mov
and
jp
and
inc
adc
and
test
mov
inc
adc
sub
sti
inc
adc
pop
jns
into
sub
stc
inc
adc
inc
sub
and
inc
and
pop
inc
adc
and
cltd
and
je
fcmovnu
sbb
sub
sub
push
cmp
pop
push
push
jge
adc
add
pusha
mov
adc
int
cmp
int
and
loopne
divl
das
imul
add
and
pusha
adc
inc
or
inc
sub
ret
sub
aam
jne
shll
sub
scas
call
pusha
adc
and
adc
adc
and
adc
lea
adc
adc
push
and
jl
jae
adc
roll
push
and
ljmp
adc
and
inc
and
aas
adc
js
sarb
inc
or
pop
and
lds
adc
mov
adc
jne
sub
and
xor
sub
and
aas
adc
sbb
sar
sets
dec
push
and
inc
sub
push
mov
and
push
and
adc
shlb
andb
jg
sub
fs
push
inc
loope
into
and
adc
pop
and
and
hlt
and
inc
inc
andl
add
cmp
xor
add
out
daa
sbb
adc
es
mov
and
dec
sub
aas
pusha
movntps
adc
and
cli
adc
inc
and
adc
push
incl
inc
mov
jmp
and
sbb
add
cmp
ja
pop
adc
rolb
mov
scas
and
adc
jmp
imul
imul
mov
cmp
and
gs
adc
and
outsb
clc
adc
adc
add
loopne
adc
adc
shlb
push
adc
jle
mov
xor
push
sub
cmp
jl
sub
out
scas
xchg
and
adc
incl
or
xor
adc
mov
push
addl
mov
cmp
unpcklps
and
adc
bound
sub
test
jl
cmp
inc
rcll
mov
jb
popf
jecxz
cmp
pusha
mov
push
and
bound
push
gs
push
adc
xor
and
xor
cmpsb
adc
shlb
aam
add
adc
sbb
shrl
push
and
adc
cmp
xchg
adc
and
push
pop
mov
add
push
xor
test
push
push
adc
jl
inc
adc
jmp
inc
adc
add
cmovo
adc
out
fisttps
push
xor
adc
or
and
rcll
les
xor
jge
add
push
outsb
xchg
neg
and
and
cs
push
dec
daa
sub
adc
mov
test
and
adc
and
mov
mov
xor
je
das
add
sub
inc
cmp
cmp
call
roll
incb
adc
inc
jecxz
cmovo
adc
inc
add
scas
add
addr16
jo
push
cmp
dec
enter
push
push
push
mov
cmp
pusha
adc
loopne
sbb
jbe
cmp
jae
or
pop
into
adc
push
lcall
test
je
mov
aas
adc
and
push
and
mov
adc
enter
mov
and
scas
inc
and
inc
inc
popa
adc
adc
out
inc
movsl
adc
and
pop
clc
adc
inc
add
add
inc
cmpsl
and
notl
adc
inc
movups
and
cltd
adc
pop
adc
fists
or
adc
add
mov
call
xor
mov
icebp
add
and
ss
xchg
sarb
sub
addr16
jne
adc
movups
inc
xchg
adc
pop
adc
mov
pop
jno
adc
and
inc
adcb
push
in
xor
lods
mov
daa
adc
packuswb
adc
and
dec
and
sbb
adc
lock
fsubs
mov
sub
pop
and
adc
test
dec
xor
lahf
sub
dec
xor
mov
sbb
stc
pcmpeqb
cmp
je
cmp
outsb
jl
push
jne
cmp
dec
sti
adc
ret
cmp
inc
push
adc
ret
cmp
inc
push
adc
ret
cmp
adc
cmp
inc
or
adc
cmp
inc
or
adc
inc
or
or
or
pusha
and
ret
cmp
inc
or
or
pop
inc
or
sbb
adc
stc
or
inc
pop
adc
adc
inc
push
adc
inc
sbb
adc
adc
iret
push
and
and
adc
push
movsb
mov
divl
scas
jbe
sub
mov
adc
mov
xor
dec
mov
cmp
and
push
lea
push
mov
mov
das
call
stos
lea
mov
adc
lea
and
movsb
aaa
pusha
and
add
jl
sub
cli
and
sbb
stos
je
cmpb
je
mov
mov
adc
out
xchg
adc
test
adc
scas
dec
jno
or
cmp
rep
and
pop
adc
rep
movsw
and
adc
and
and
gs
mull
jge
adc
fisubrs
test
jno
and
xor
jbe
sub
adc
xor
mov
push
sub
inc
jg
mov
jno
mov
test
xor
adc
and
inc
and
xchg
adc
xor
adc
and
and
inc
push
pop
and
test
jbe
mov
and
mov
and
and
adc
and
push
std
cmp
push
stc
rclb
dec
movsl
adc
add
ror
pop
inc
scas
and
inc
outsl
and
dec
adc
int
adc
insl
inc
add
pusha
mov
aas
add
mov
fistps
cmp
jne
xor
mov
inc
cwtl
adc
add
inc
pop
imul
adc
push
adcl
movsl
cmp
mov
xchg
and
adc
push
mov
dec
test
dec
adc
dec
jecxz
adc
mov
add
pop
movsb
dec
gs
add
cwtl
pop
adc
or
dec
and
cmpsb
mov
sbb
sbb
push
cmp
inc
cmp
adc
and
and
or
jge
mov
pusha
lea
inc
js
mov
inc
jl
push
decl
or
ret
inc
xchg
add
add
xchg
mov
dec
jne
mov
mov
mov
mov
mov
pusha
inc
sub
shll
loop
push
push
mov
pusha
sub
inc
insb
adc
adc
pusha
outsl
adc
pusha
outsl
adc
and
adc
je
sbb
je
sbb
add
xor
inc
dec
jne
mov
aaa
inc
push
adc
pop
pop
mov
push
sub
add
adc
outsb
in
mov
sbb
jno
lea
jmp
lea
xchg
arpl
in
push
shrl
test
jle
inc
sbb
add
mov
mov
sub
adc
mov
xchg
adc
xorl
jge
rep
mov
mov
cltd
rep
and
adc
mov
lea
sti
or
lea
add
add
movsl
inc
adcb
outsl
inc
mov
rcll
cltd
loopne
adc
cmp
pusha
push
adc
mov
daa
mov
hlt
inc
inc
cmp
das
and
lret
mov
push
push
je
adc
filds
push
addl
pop
dec
or
inc
dec
xchg
adc
mov
lea
push
fmuls
fdivs
ret
push
push
dec
and
inc
and
xchg
cmp
dec
and
inc
cltd
adc
call
sub
inc
testb
inc
adc
add
lea
xor
sbb
test
add
sub
adc
test
mull
add
adc
mov
mov
push
lea
xor
push
push
mov
jbe
mov
loope
je
outsl
adc
jle
and
fwait
cmpb
push
and
adcb
adc
pusha
adc
sub
dec
or
cltd
inc
mov
inc
and
cmp
pop
outsb
adc
and
and
adc
mov
in
sub
test
jne
mov
mov
mov
mov
inc
cmp
jl
dec
test
leave
pop
mov
mov
sbb
mov
inc
dec
cmp
jl
and
add
and
mov
cmp
jne
cmp
je
cmp
jb
add
cmp
pop
rcll
adc
push
adc
cmp
je
ret
adc
jb
add
cmp
and
daa
sub
xchg
and
movsb
adc
adc
and
adc
je
mov
sbb
push
mov
fidivrs
repz
and
and
dec
and
lods
fmull
in
jne
pop
pop
and
and
adc
icebp
and
adc
cmp
xor
dec
iret
adc
cmp
jo
adc
and
outsb
and
sub
inc
inc
push
mov
test
add
imul
push
daa
adc
adc
sub
and
testl
cmp
pop
adc
mov
outsl
adc
push
and
adc
mov
or
mov
add
adc
pop
and
push
adc
mov
dec
inc
mov
sub
and
daa
sbb
fincstp
fcoms
push
call
es
and
stos
pusha
pop
adc
and
and
sub
inc
and
push
and
sbb
sarl
shrl
fsubrs
inc
icebp
adc
and
rclb
fadds
adc
dec
in
and
data16
inc
xor
stos
and
adc
sbbb
and
push
mov
cmp
jge
sub
and
xor
lock
outsl
and
or
shrb
sub
push
and
and
adc
and
and
push
adc
ret
cmp
mov
push
call
icebp
sub
das
outsl
pop
inc
loope
xor
dec
hlt
pop
push
inc
adc
pop
adc
mov
xchg
xchg
and
jo
and
les
bswap
adc
pop
test
mov
scas
pop
xorb
add
mov
and
shll
mov
andl
mov
out
sbb
mov
pop
lea
mov
add
dec
inc
je
and
stos
inc
pop
adc
fsub
sub
or
sub
and
xchg
cmpb
mov
xchg
mov
adc
and
and
and
repz
and
inc
adc
sub
dec
test
inc
test
jl
mov
push
pop
sub
cmp
mov
and
dec
jg
pusha
jle
add
and
data16
inc
arpl
sub
cmp
inc
adc
sub
pop
push
imulb
and
and
push
and
mov
mov
inc
push
adc
inc
mov
xor
add
pop
call
adc
cmp
sbb
adc
adc
cmpsb
and
xchg
adc
cmp
jge
xor
cmp
jle
sub
add
and
adc
rolb
adc
sbbb
rcrb
lret
and
inc
adc
lret
add
push
adc
fldcw
sub
and
adc
add
sub
and
neg
fistl
adc
add
and
dec
jp
pusha
adc
pusha
sbb
mulb
pusha
repnz
mov
xor
xorb
and
inc
dec
cmp
imul
mov
and
arpl
ja
adc
daa
scas
adc
or
jns
inc
iret
adc
dec
das
sbb
xchg
fs
adc
mov
bound
or
adc
adc
xchg
push
movsl
adc
push
sub
dec
push
push
mov
adc
inc
push
popa
adc
xchg
inc
sub
dec
sahf
adc
adc
inc
sbb
mov
adc
xchg
add
andl
andl
xor
mov
iret
pusha
or
fstps
dec
je
or
into
push
dec
add
push
and
adc
and
adc
mov
pop
fsts
add
mov
and
adc
and
mov
cmc
fstl
inc
lds
cmp
adc
bound
adc
ret
and
jge
testb
jne
mov
idivb
adc
push
adc
mov
sbb
pusha
pop
pop
mov
cmp
mov
shll
popa
jno
inc
andb
cmp
mov
and
push
aam
sbb
cli
sub
mov
mov
and
mov
mov
xor
cmp
sbb
sbb
mov
xor
mov
sbb
mov
mov
mov
lea
mov
push
add
mov
mov
mov
dec
and
xor
jbe
push
jnp
je
push
jnp
inc
in
and
imul
sbb
adcb
test
jge
dec
lret
push
mov
push
in
and
adc
mov
daa
dec
add
adc
dec
add
cmp
jg
sub
add
pop
mov
or
mov
inc
add
mov
pop
daa
push
add
dec
mov
jg
jl
and
loopne
pusha
sbb
cli
jg
inc
sbb
adc
adc
jae
sub
mov
jg
inc
adc
mov
bound
das
jno
adc
add
orb
add
jnp
push
adc
sbb
cmp
mov
adc
xor
cmpl
js
jmp
and
das
dec
mov
mov
inc
or
jae
pop
inc
clc
cmp
jl
mov
pop
push
adc
insl
adc
sbb
lds
adc
jmp
and
xor
sarb
and
jae
inc
sbb
call
and
jne
inc
dec
adc
xor
adc
and
sti
adc
sbb
lds
adc
adc
push
xor
jmp
mov
add
dec
cmpsl
adc
mov
sbb
mov
add
xor
repz
je
and
sbb
mov
mov
inc
mov
loopne
rorl
jne
lret
rclb
inc
and
sub
xchg
mov
cmpl
push
or
mov
dec
adc
and
and
and
inc
add
and
cmp
lods
fwait
inc
and
aaa
mov
lea
and
data16
inc
lods
and
jp
ret
lea
cmp
dec
and
or
adc
push
and
and
mov
pop
fmull
test
mov
jg
inc
push
pop
push
cs
pop
dec
sbb
scas
jo
mov
dec
les
repnz
mov
call
cmp
jl
adcb
adc
lcall
inc
inc
adc
inc
mov
adc
mov
and
push
call
popa
add
mov
mov
sahf
js
orl
jge
aad
sbb
mov
mov
cmp
je
cmp
jne
mov
jae
sbbl
mov
jo
and
and
hlt
adc
sbb
or
adc
push
and
popa
pop
and
adc
and
adc
popa
cltd
pop
inc
sbb
ret
or
insl
mov
rorb
dec
inc
mov
popl
inc
inc
mov
inc
fisttpl
dec
out
test
je
inc
sub
jno
adc
insl
fildll
xor
add
or
les
adc
and
inc
adc
cmp
dec
or
mov
and
sbb
push
cmp
testb
mov
setl
push
mov
jl
jg
lea
idivl
and
push
mov
out
orb
xor
and
imul
adc
mov
adc
lea
adc
shl
sub
adc
adc
xchg
fidivs
mov
mov
cmp
movsb
out
repz
in
cwtl
adc
adc
cmpl
lea
inc
cmp
add
int3
inc
cmp
jmp
and
inc
cmp
adc
jmp
mov
inc
cmp
sbb
rcll
and
adc
mov
jg
push
inc
add
pop
call
push
in
inc
or
jmp
lahf
imul
inc
sbb
jne
mov
mov
and
ret
adc
mov
and
dec
in
ret
mov
inc
adcl
mov
push
lea
popf
adc
and
push
mov
insb
notl
clc
mov
mov
and
jne
js
adc
inc
inc
adc
adc
mov
inc
enter
movl
fisubs
adc
and
mov
mov
aad
into
adc
subb
add
add
xor
pop
arpl
mov
adc
gs
jl
cmpl
lret
rdpmc
rolb
mov
rolb
or
adc
sub
and
lcall
bound
pop
inc
jecxz
adc
int3
adc
jmp
add
push
movsb
mov
inc
add
inc
add
out
add
inc
add
aam
add
out
add
inc
pop
pusha
pop
adc
inc
add
pusha
inc
movups
add
jns
add
outsb
daa
pop
add
loopne
adc
pop
pusha
add
ljmp
mov
add
lods
daa
pop
add
loopne
adc
push
adc
or
out
push
and
mov
jl
mov
int
xchg
andl
and
cmpsb
sbb
adc
decb
or
mov
outsl
and
inc
pop
adc
subl
insb
and
pusha
add
test
dec
dec
adc
or
sarb
adc
adc
mov
je
mov
mov
jo
stos
mov
mov
mov
pop
add
fsub
and
jnp
adc
mov
mov
pop
fs
adc
or
inc
pop
inc
adc
ljmp
int
push
repz
mov
ljmp
pop
bound
dec
and
and
outsl
and
out
and
adc
or
add
and
and
cmpsl
sahf
adc
jne
mov
and
lret
and
push
dec
inc
int3
adc
and
inc
inc
inc
arpl
mov
add
andl
add
add
outsl
cmpsl
and
ret
aas
and
inc
push
and
les
lcall
inc
adc
daa
inc
rclb
add
inc
rclb
add
adc
enter
rcrb
dec
inc
and
inc
pusha
adc
scas
adc
insb
pop
inc
shlb
jb
sub
sbb
cvttps2pi
cmp
adc
sub
insl
je
es
insl
and
mov
pusha
movsl
and
pop
and
dec
fs
insl
adc
jmp
fsub
andb
cmp
pop
arpl
mov
mov
pop
inc
pop
pop
push
inc
or
inc
fbld
and
dec
cs
or
inc
and
inc
add
fbld
inc
jnp
adc
and
inc
scas
jne
lock
inc
mov
or
xchg
data16
popf
ss
and
icebp
or
and
and
xor
shll
mov
or
dec
add
adc
stos
out
and
xchg
es
add
lock
push
adc
and
arpl
cmp
jg
ljmp
ljmp
rsm
and
adc
ss
adc
rcll
or
adc
adc
push
and
xchg
xor
lock
notl
cmpl
and
sub
mov
shrb
jle
and
push
pusha
inc
inc
adc
jmp
pusha
push
adc
sbb
call
sbb
pusha
and
mov
push
jae
or
fldl
adc
sbb
adc
sbb
cmpsl
and
es
imul
jle
or
adc
mov
out
sub
pop
adc
pop
add
mov
je
and
and
pop
outsb
frstor
jo
adc
push
call
and
cmp
push
adc
ljmp
adc
lret
adc
jne
pop
lret
adc
push
sbb
push
push
push
push
call
pop
pop
iret
xchg
and
es
xchg
dec
daa
adc
push
push
ret
lea
push
lock
ja
add
incb
adc
icebp
inc
add
inc
add
iret
inc
mov
pusha
pop
jecxz
cmc
outsl
adc
xchg
outsl
adc
push
dec
add
je
and
cmp
mov
adc
daa
pop
add
test
rclb
das
adc
adc
testb
inc
adc
push
and
push
add
xor
and
fmull
fwait
xchg
and
mov
pop
mov
adc
xchg
adc
das
adc
mov
adc
inc
js
jp
out
adc
mov
and
out
pusha
and
inc
dec
imul
push
inc
adc
jmp
pop
inc
pusha
sbb
jbe
mov
es
push
and
adc
and
adc
and
cmp
popa
mov
mov
dec
and
es
add
pusha
daa
mov
scas
add
pop
cli
adc
icebp
push
push
aad
adc
in
scas
out
and
das
adc
adc
cmp
and
pusha
movups
imul
pop
int3
dec
dec
push
dec
vmovss
adc
sub
add
aaa
jo
das
pop
movl
movl
jl
enter
jge
sub
add
adc
aaa
mov
adc
cs
adc
adc
pop
push
add
push
leave
adcb
mov
pusha
add
movsb
enter
adc
sub
pop
je
inc
pop
adc
outsb
je
aaa
sbb
inc
test
jle
mov
and
add
inc
adc
lcall
adc
adcb
push
sub
sbb
sub
je
dec
jne
mov
and
pop
and
push
pop
bound
sbbb
add
cmp
jle
das
daa
adc
or
adc
inc
aaa
adc
ret
and
std
adc
dec
inc
adc
jmp
pushf
and
and
xor
mov
inc
je
adc
cmp
and
es
mov
pop
inc
lea
into
pop
adc
aam
push
cmp
fnsave
and
and
pop
adc
adc
inc
cmp
jl
mov
pop
imul
jle
and
mov
push
add
push
loopne
adc
mov
mov
xchg
mov
mov
xchg
push
fimuls
daa
dec
movsl
adc
inc
loop
adc
pop
adc
push
mov
and
sbb
mov
test
jne
dec
pusha
fistl
fs
adc
dec
and
lea
sub
adc
dec
mov
xlat
lcall
cwtl
js
mov
and
fmulp
sub
es
adc
adc
mov
je
ret
and
je
mov
movups
outsl
or
fiaddl
es
add
mov
jmp
cmp
je
mov
jmp
inc
lea
mov
inc
adc
adc
jns
adc
or
jmp
adcb
mov
je
orb
loope
adc
inc
test
subb
cmp
jne
inc
outsb
and
sbb
movl
and
inc
daa
adc
and
adc
inc
sbb
jne
adc
cmp
test
test
ficoml
jne
push
lret
adc
inc
ret
adc
cmp
mov
frstor
and
lds
clc
push
sbb
pop
std
test
pop
push
clc
mov
xor
movl
xchg
adc
pop
loopne
dec
inc
or
mov
mov
add
decl
pop
ret
fs
fs
jbe
add
adc
and
mov
xorb
xor
mov
mov
pop
adc
inc
cmp
imul
adc
push
push
push
inc
add
add
lcall
inc
rclb
cld
dec
mov
push
push
and
dec
fnstenv
xchg
fnstenv
inc
data16
aam
inc
and
call
dec
mov
sub
jl
and
and
mov
cmp
and
mov
sbbl
inc
mov
cltd
and
outsl
adc
sub
and
adc
and
mov
fdivr
adc
push
and
push
and
sar
and
inc
adc
and
mov
neg
mov
inc
mov
fwait
sub
test
inc
and
outsb
jbe
and
jecxz
jno
pusha
pop
and
loopne
sbbb
adc
mov
and
xorl
mov
js
adc
add
cmp
nop
adc
and
sub
mov
fisubl
jp
inc
mov
and
notb
xchg
push
push
imul
mov
adc
jmp
mov
inc
adc
and
addr16
sub
das
adc
mov
sbb
cs
push
and
inc
mov
xorl
pusha
mov
cmp
inc
or
lock
pusha
add
and
mov
dec
mov
jl
xchg
adc
inc
jns
mov
pusha
sbb
and
mov
adc
push
adc
es
mov
fcoms
dec
push
and
and
adc
sbb
cmp
push
setne
dec
and
xor
shlb
add
add
cmpsb
outsb
rcll
jne
adc
dec
adc
daa
adc
and
dec
adc
test
popa
adc
incl
jne
subl
jle
popf
adcl
andl
aaa
outsl
and
loope
cmp
dec
je
lds
test
jle
mov
sbb
ficoms
inc
and
and
adc
adc
jp
and
loopne
adc
jne
orb
inc
pop
inc
jl
push
add
add
mov
inc
rclb
iret
jmp
sahf
dec
adc
call
call
mov
adc
sbb
daa
sbb
jne
rclb
insl
jl
inc
add
adc
addr16
or
in
sub
add
inc
pop
pusha
cwtl
or
cmpl
je
push
mov
and
cmp
orb
add
jle
push
dec
and
nop
adc
sub
mov
and
nop
adc
and
insb
sub
adc
and
and
adc
sub
add
int3
das
add
gs
sub
nop
adc
inc
sahf
and
adc
mov
xor
and
jb
adc
jne
cmpl
jne
mov
test
je
mov
push
and
insb
sub
xchg
inc
xchg
and
xchg
adc
sbb
and
inc
inc
jbe
cwtl
mov
pop
pop
pop
ret
and
and
adc
and
dec
adc
jmp
inc
and
test
je
imul
inc
je
test
arpl
adc
negl
sub
add
decl
sub
inc
outsl
adc
ja
int
and
cmp
push
fdivrl
adc
pop
andb
fwait
inc
js
push
push
movl
xorb
xor
and
stos
pop
sub
cmp
jae
jmp
and
inc
mov
out
daa
imul
and
lods
and
and
sahf
adc
mov
jno
cli
inc
lds
lcall
adc
bound
adc
pusha
xchg
daa
push
sub
ret
and
jb
adc
outsb
and
int3
adc
inc
dec
adc
mulb
add
je
fistl
adc
sbb
insb
orl
jle
and
adc
sub
push
adc
push
adc
imul
push
and
xlat
adc
and
inc
jge
test
jg
inc
and
cmp
inc
dec
and
test
jle
lea
and
mov
and
les
inc
and
dec
lea
and
pop
mov
pop
out
mov
adc
push
add
or
mov
mov
mov
cmpw
je
inc
add
dec
jne
dec
in
adc
adc
adc
add
repnz
xchg
and
xor
mov
and
and
popa
xor
aas
cmovp
dec
jae
mov
mov
inc
mov
add
in
and
iret
sbb
add
mov
mov
test
sbb
mov
add
mov
mov
rorb
mov
mov
mov
mov
lea
mov
mov
jge
adc
and
and
mov
adc
sbbl
pop
mov
sbb
push
mov
adc
and
inc
and
aam
mov
ret
adc
and
adc
adc
inc
mov
adc
and
dec
and
xor
adc
add
cmp
jle
mov
das
dec
lods
adc
and
dec
push
cmp
jle
add
subb
mov
adc
pop
das
jg
adc
inc
and
and
es
add
mov
adc
andb
jne
pusha
xchg
adc
je
inc
stc
adc
mov
adc
movsl
and
aad
dec
and
jne
and
adc
inc
lods
adc
mov
insl
xchg
das
mov
adc
call
sub
pop
and
and
xor
adc
pop
mov
test
sub
in
es
int3
and
mov
int3
adc
lea
and
mov
jmp
or
adc
add
popa
and
cmp
adc
pop
sub
adc
push
mov
sbb
ret
and
je
cmp
jle
mov
lea
imul
and
jne
testl
stc
add
daa
and
mov
adc
jecxz
ljmp
insl
adc
and
jo
adc
in
jns
pusha
pop
push
repnz
scas
and
xor
cld
inc
bound
jmp
and
inc
adc
je
lcall
test
je
lods
and
adc
orb
and
push
push
and
xchg
pusha
aaa
and
cmp
jns
subb
into
sbbb
push
push
inc
sbb
adc
and
adc
and
and
aam
mov
or
or
popa
in
sbb
int3
sub
je
and
adc
insb
adc
mov
sub
and
cmpsl
and
inc
or
push
mov
push
inc
and
adcb
je
stos
adc
sub
addr16
sub
inc
fidivrs
adc
push
shll
insb
adc
jnp
and
adc
mov
and
pusha
insb
inc
lahf
adc
pusha
xchg
outsb
cmpsl
adc
pop
fwait
jae,pn
dec
cmp
pop
pop
mov
daa
rcll
mov
adc
pop
and
movsl
in
cmp
je
jae
je
insb
and
cmp
je
mov
push
mov
cmp
jne
and
and
dec
add
jge
adc
push
and
and
cmpsb
adc
gs
test
sub
adc
cmp
adc
and
and
fsts
pop
inc
add
pop
and
and
and
push
push
and
inc
adc
call
push
and
imul
adc
push
push
call
adc
adc
or
or
inc
xor
imul
shlb
movsl
xchg
and
pop
adc
cmpsl
adc
and
pusha
sub
lods
xchg
adc
or
inc
shll
and
mov
sub
inc
push
adc
adc
jne
inc
into
adc
lcall
add
and
and
and
aaa
push
jl
incb
imul
xchg
sbb
shr
mov
push
call
lea
test
mov
jae
rcrb
adc
shll
fldl
inc
xchg
and
andb
call
dec
and
and
lret
rcll
jmp
mov
data16
and
jle
pop
mov
and
shlb
test
and
cmp
cmp
sub
or
mov
mov
sbb
or
push
test
mov
je
dec
call
add
and
and
and
add
lock
sahf
fsts
dec
push
shl
and
das
sbb
xor
push
movw
and
push
lea
mov
xor
mov
inc
add
loopne
pop
push
push
lea
pop
pop
adc
call
push
repnz
jo
sbb
adc
or
mov
mov
inc
add
dec
sub
add
pop
scas
pop
jl
in
cmp
je
inc
add
subl
and
lahf
and
adc
mov
and
inc
ja
pop
and
jmp
cmp
jge
neg
cmp
jge
and
pop
push
push
and
daa
adc
ret
pop
adc
inc
mov
pop
jmp
jge
neg
cmp
sub
mov
adc
gs
pusha
and
adc
mov
jo
adc
jle
imul
adc
adc
data16
adc
dec
mov
adc
and
xor
jl
xchg
and
adc
xchg
aaa
test
sbb
neg
inc
cltd
dec
push
data16
adc
push
add
push
xchg
adc
inc
test
mov
cmp
sub
add
mov
jne
cmp
adc
pop
cmp
insb
adcb
out
and
adc
mov
test
xor
sbb
and
adc
push
push
dec
je
stos
inc
pop
adc
and
adc
roll
and
jns
into
cmp
inc
and
add
lds
adc
aad
ret
int
adc
adc
adc
inc
cmp
and
add
add
add
popf
mov
inc
jo
pusha
sub
mov
and
cmp
add
and
jb
xor
xor
pop
cmp
adc
xor
clc
push
jo
arpl
out
push
notb
mov
fstpt
adc
push
adc
cltd
and
inc
push
adc
insl
and
cmp
and
and
cmp
popf
rcll
sbb
adc
lock
add
popa
or
or
testb
jns
push
and
pusha
or
add
fwait
pop
jle
and
adcl
inc
or
and
adc
add
push
inc
xchg
imul
clc
les
push
add
inc
jnp
push
add
adc
pop
aad
push
add
push
pop
adc
aaa
iret
xchg
sub
sub
add
inc
xchg
push
addb
or
pusha
daa
mov
rolb
jns
je
add
adc
adc
adc
cmp
ja
push
sbb
dec
sub
inc
notl
inc
outsl
aad
push
adc
inc
push
inc
in
testl
pop
sub
mov
jle
mov
adc
pop
shlb
sub
shlb
sub
and
lret
and
adc
mov
adc
and
rcll
xor
daa
and
jl
movsb
xor
and
les
and
inc
add
data16
or
and
inc
dec
adc
mov
dec
and
adc
dec
pusha
unpcklps
push
push
and
cwtl
cmpb
xchg
push
lea
push
push
movl
movl
adc
pop
inc
loopne
push
cmp
lea
push
inc
jle
das
adc
adc
outsl
fbld
dec
inc
das
scas
dec
and
fiadds
adc
in
inc
insb
pusha
and
inc
es
sub
add
aam
adc
mov
mov
jns
adc
test
int
and
movsb
push
inc
sub
sub
mov
add
inc
or
add
and
mov
cmp
aad
pop
and
sub
mov
pushl
andl
shl
and
adc
push
and
jo
and
movsl
adc
sub
pusha
pop
adc
add
dec
scas
inc
or
jnp
sub
dec
and
cmp
sbb
lds
mov
and
mov
mov
and
pop
mov
mov
add
cmpb
sbb
adc
bound
xor
adc
mov
mov
ret
pusha
and
inc
pop
and
sub
add
mov
add
mov
andl
pop
and
push
test
adc
jb
popa
jmp
sub
adc
cmp
jbe
and
and
lock
pop
and
jbe
and
inc
and
je
and
fs
sbb
dec
push
addb
and
cmpsl
pusha
xchg
adc
adcl
mov
mov
and
cmpsl
adc
inc
pop
xor
add
lea
adc
or
mov
adc
mov
adc
and
adc
mov
adc
sub
add
xor
aas
sub
xorl
push
or
and
adc
adc
shl
and
cmc
and
cmp
js
mov
adc
insl
add
and
notl
insb
cmpsl
aas
inc
rcll
adc
sbbb
fdivrl
pusha
and
jo
ja
adc
push
mov
and
adc
jae
les
lods
sub
xchg
jb
mov
and
jl
cmp
jg
cmpl
jl
mov
jl
inc
adc
adcb
push
and
cli
inc
xchg
adc
cmpl
jge
adc
mov
adc
inc
and
inc
sbb
outsl
or
mov
cmp
inc
pop
adc
or
outsl
or
inc
pop
adc
sub
push
dec
and
out
push
push
adc
and
outsl
adc
ret
sbbb
fisubrl
jo
adc
scas
dec
cmc
and
loopne
rolb
je
mov
mov
pushf
icebp
and
adc
push
and
jb
adc
js
loopne
mov
pusha
cmp
inc
push
and
xor
sbb
dec
jo
inc
insb
mov
mov
mov
sub
push
and
cs
push
push
out
int3
adc
je
outsb
insl
adc
outsb
ficoml
adc
jo
test
dec
andb
xor
and
and
adc
pop
pop
outsl
and
xor
mov
sub
sub
and
adc
ret
movsb
and
adc
dec
and
mov
adc
sbb
mov
pop
adc
mov
aam
adc
mov
neg
xorb
adc
and
scas
flds
fmuls
adc
dec
incl
and
cltd
adc
movl
in
jle
mov
mov
rep
and
mov
fnstcw
clc
pusha
bound
jl
daa
cld
jo
mov
jg
adc
and
adc
sub
outsl
adc
or
fwait
pop
das
arpl
ror
inc
push
xchg
and
mov
data16
adc
mov
repz
jp
imul
add
insb
popa
pop
push
jo
inc
add
ffreep
fsubl
arpl
adc
jg
pusha
jl
sbb
test
jle
sarb
dec
jne
xchg
fstl
add
cmp
and
adc
jle
adc
jle
inc
jle
sbb
jb
js
jne
fidivl
adc
shll
outsl
pusha
jae
leave
movsl
adc
push
ret
mov
das
jne
adc
xor
inc
jo
or
adc
adc
and
adc
inc
or
fadd
and
adc
bound
adc
inc
jg
test
jl
adc
ret
adc
mov
imul
and
ret
mov
adc
popa
mov
mov
jle
add
mov
lea
push
and
sti
adc
rcll
sub
add
inc
add
and
shlb
sbb
push
scas
loop
adc
fiaddl
and
inc
movups
add
lret
add
lds
and
ret
arpl
into
adc
lea
arpl
inc
adc
and
arpl
sub
xor
inc
call
dec
add
dec
fsubl
inc
inc
pop
jno
adc
jne
xchg
adc
ss
xorl
and
adc
pusha
adc
sub
add
pop
inc
popf
adc
adc
movsb
sub
adc
sub
and
adc
jg
clc
imul
add
mov
add
mov
push
and
in
adc
and
ja
popa
bound
in
jle
add
lret
add
jmp
out
int3
inc
inc
adc
stc
inc
dec
and
nop
and
test
mov
add
adc
inc
arpl
and
pusha
popa
pusha
stos
and
insl
inc
gs
xor
out
jle
aad
adc
mov
xor
add
mov
in
addl
mov
add
jle
inc
add
inc
add
inc
add
sbb
inc
movups
inc
movups
inc
or
mov
and
inc
adc
cltd
gs
dec
jb
sahf
push
cltd
lea
push
idiv
jb
and
pop
mov
cltd
inc
adc
clc
lea
cmp
jle
mov
and
adc
cltd
cld
insb
inc
adc
rcrb
and
push
adc
ja
sbb
shr
jg
clc
pop
pop
ret
dec
cli
adc
flds
jmp
adcb
inc
and
imul
adc
or
fcomp
add
add
ss
push
xchg
nop
mov
shlb
sub
add
or
lret
and
inc
adc
and
bound
sbb
mov
aas
sbb
adc
shlb
call
ja
adc
adc
sarb
and
mov
adc
and
ret
inc
cmp
shr
jecxz
and
adc
push
push
mov
xor
sub
rcrl
fmuls
outsl
push
adc
add
rolb
adc
pusha
mov
pop
mov
je
mov
bound
sub
inc
cld
adc
orl
dec
pop
adc
daa
add
inc
xor
add
inc
or
inc
sub
roll
dec
mov
add
call
test
ljmp
and
sub
adc
adc
adc
shlb
inc
adc
and
inc
adc
pop
sub
loope
adc
out
push
aad
test
lds
adc
push
push
and
dec
and
adc
js
shrb
les
movsb
mov
and
and
push
xor
and
adcb
push
and
adc
leave
adc
add
inc
out
adc
mov
adc
and
dec
and
dec
adc
and
rclb
xchg
sub
adc
aaa
aam
mov
mov
adc
mov
imul
xchg
bound
adc
sahf
out
sub
loope
repz
sub
jbe
adc
push
dec
icebp
and
adc
mov
sbb
sub
jbe
cmpl
rep
push
sti
adc
or
adc
pop
or
or
jl
and
notb
jo
mov
inc
and
sub
and
jmp
pop
cltd
aad
inc
and
and
and
dec
pop
andb
mov
inc
and
adc
rclb
jg
adc
outsb
adcb
and
mov
sub
mov
push
adc
bound
xor
pop
lods
adc
and
mov
cs
and
dec
adc
fisubl
pop
sub
cmp
jle
mov
sbb
aad
push
push
push
and
mov
adc
inc
adc
aam
and
jp
pop
inc
and
sub
adc
jl
and
and
and
andb
and
add
orb
pusha
fsubl
cmp
enter
and
data16
pusha
sub
pusha
inc
pop
push
and
into
clc
xchg
jmp
and
stos
adc
adc
iret
sub
push
popa
notl
sub
bound
push
cwtl
popa
adc
sub
sub
inc
and
mov
daa
adc
adc
pop
cmp
pop
jne
adc
add
adc
shll
adc
dec
rclb
jle
hlt
inc
jnp
stos
filds
and
ret
and
mov
add
xor
sub
mov
std
add
adc
jl
daa
dec
adc
lods
pusha
movups
jmp
dec
jo
xor
adc
jnp
adc
cmp
adc
sbb
adc
adc
pop
and
adc
push
or
inc
bound
and
dec
adc
and
inc
inc
imul
add
adc
imul
adc
inc
and
adc
dec
adc
inc
and
ret
or
dec
jno
push
adc
clc
pop
ljmp
or
dec
jno
adc
dec
shll
adc
xor
cmp
cmp
mov
adc
fincstp
fisubl
or
add
add
adc
jle
push
dec
and
push
adc
rorl
adc
jmp
adc
or
insl
loop
and
pop
adc
jns
popa
ficoml
je
nop
fldenv
int
orb
aam
loopne
push
mov
pusha
inc
adc
sbb
call
cli
and
je
arpl
sub
mov
and
inc
or
ret
inc
adc
push
xor
mov
cmp
and
daa
adc
daa
push
adc
shlb
ret
jo
ljmp
xchg
and
xor
inc
xchg
inc
ret
shr
movl
test
jl
inc
aam
mov
add
int
add
inc
mov
sub
adc
dec
roll
repz
rcrb
dec
mov
pop
and
cwtl
rclb
adc
mov
adc
cld
mov
jg
push
xor
mov
cmp
ret
adc
lds
adcl
push
and
xchg
adc
insl
and
dec
push
arpl
adc
inc
push
adc
adc
jo
adc
arpl
arpl
cmpsl
inc
sub
push
mov
arpl
pop
adc
pop
out
xor
mov
cmpsl
and
xchg
adc
dec
add
push
addr16
cmpsb
jp
and
and
nop
fiadds
inc
add
insb
insb
adc
dec
and
test
inc
rcll
neg
inc
adc
mov
and
inc
gs
xchg
js
mulb
in
test
inc
and
and
inc
pop
adc
add
jg
adc
adc
std
and
inc
adc
and
sub
aas
xchg
mov
and
shll
push
xchg
and
fwait
adc
lcall
rclb
push
fsts
push
popa
or
inc
push
loope
adc
pusha
adc
and
push
add
andl
and
inc
imul
sub
std
add
cmp
and
test
add
and
inc
stos
adc
mov
push
mov
adc
adc
jmp
and
daa
adc
cmp
or
and
outsl
jo
popa
add
push
adc
test
adc
sbb
push
jne
push
push
and
add
push
push
xor
pop
repnz
rclb
mov
sub
add
scas
ss
or
jbe
xor
adc
sub
outsb
adc
dec
in
pop
and
adc
add
and
adc
fsubl
push
pushf
bound
push
xor
daa
mov
push
movsl
pop
in
mov
inc
sbb
sbb
adc
pop
pop
adc
pop
jbe
push
pop
inc
and
jl
jbe
and
add
pushl
mov
mov
mov
mov
mov
mov
add
dec
jne
lea
add
pop
xlat
sti
mov
mull
mov
push
sbb
notb
or
sub
or
data16
jge
pop
xchg
test
dec
sub
adc
push
rcrb
dec
sub
jne
and
push
mov
xor
inc
shr
sbb
lret
jae
jg
ret
pop
xchg
mov
mov
repnz
jo
movsl
inc
xor
int
pop
pop
adc
scas
ret
rep
and
roll
lock
adc
int
pop
inc
and
imull
adc
adcb
adc
sbb
adc
mov
adcb
push
and
dec
adc
inc
pop
adc
xor
and
repz
and
jb
pusha
push
mov
and
push
test
out
out
and
dec
and
inc
or
ret
and
addr16
fsts
jbe
sbb
and
fs
jmp
shl
mov
imul
and
and
and
adc
inc
scas
adc
and
adc
add
inc
mov
add
andb
mov
shrl
adc
orb
leave
je
mov
sub
mov
lods
adc
push
je
push
xor
adc
cltd
aas
push
loop
push
ja
push
ficoms
lods
sub
xor
xchg
out
mov
and
xchg
scas
rorb
xor
fwait
dec
daa
sbb
adc
adc
and
push
adc
push
adc
add
ja
add
xchg
adc
add
or
xor
xchg
cmp
addr16
or
mov
pop
inc
adc
or
imulb
adc
adc
jnp
adc
inc
and
in
adc
pop
adc
jecxz
adc
fwait
scas
jmp
xchg
mov
outsl
and
jl
adc
int3
mov
push
inc
pop
rclb
and
and
rorb
mov
and
adc
inc
add
cmp
add
dec
inc
add
push
rolb
iret
mov
pop
adc
and
test
and
xchg
cmp
arpl
push
pusha
or
pop
add
repnz
push
inc
mov
mov
mov
mov
mov
mov
mov
mov
inc
sbb
or
adc
je
cmp
je
add
mov
push
push
lea
push
push
push
dec
cmp
stos
and
adc
test
adc
call
push
mov
loopne
pop
dec
adc
call
insl
sbb
mov
add
mov
push
and
mov
xor
icebp
adc
adc
or
push
or
lea
push
pop
xlat
adc
cmp
adc
or
push
fstl
push
dec
or
mov
call
xlat
adc
push
call
push
inc
or
push
adc
andl
xor
and
adc
xchg
inc
jle
xor
cmp
pop
pop
setne
out
cmpsb
adc
jmp
mov
push
and
xor
pop
pusha
xor
pop
and
mov
adc
inc
xor
notl
push
testl
pop
inc
adc
and
push
stc
xchg
or
pop
jno
dec
insl
push
and
das
pusha
and
add
push
insl
xlat
and
and
push
and
and
xor
pop
and
ss
and
cmp
and
mov
xchg
and
mov
mov
and
xchg
add
stc
add
mov
pop
mov
mov
pusha
adc
push
pusha
or
iret
add
sub
ret
mov
pop
aaa
adc
adc
inc
and
clc
mov
inc
and
out
bound
pop
and
test
je
neg
push
dec
adcb
outsb
lahf
adc
mov
and
and
and
adc
mov
dec
imul
and
aaa
roll
push
dec
lods
and
and
cs
mov
and
mov
and
dec
stos
es
cmp
pop
and
lret
adc
inc
stos
outsl
push
and
fldenv
adc
clc
adc
and
inc
mov
dec
xor
and
adc
and
adc
and
bound
es
fwait
and
fwait
adc
lods
xor
and
shll
adc
mov
mull
scas
adc
sbb
push
and
and
and
push
and
and
jo
shr
and
adc
or
adc
or
adc
insb
xchg
je
push
mov
add
ficoml
rclb
jbe
adc
test
or
push
push
and
insb
mov
push
dec
and
inc
and
cmp
or
scas
and
mov
adc
adc
and
and
add
pop
mov
xor
push
and
mov
adc
inc
adc
push
and
sbb
or
and
and
popf
jmp
int
dec
notl
push
push
dec
inc
xchg
bound
adc
jb
test
cmp
inc
dec
adc
pop
orl
inc
inc
in
or
push
inc
mov
and
dec
mov
fs
rorb
outsl
es
pusha
pop
xor
adc
and
push
and
cli
adc
inc
and
hlt
movsl
sub
add
das
and
adc
je
pop
dec
adc
and
mov
pusha
push
mov
mov
and
or
in
adc
adc
and
and
and
inc
pop
and
jne
lcall
and
nop
into
and
insb
out
and
adc
and
and
add
ljmp
xor
cmp
and
and
je
xor
jecxz
and
xchg
adc
and
inc
inc
insl
adc
push
inc
xor
inc
push
lea
adc
dec
adc
push
and
bound
insb
and
sub
je
loope
js
call
das
and
jl
pushf
lods
sbb
mov
sub
dec
lret
adc
call
and
adc
stos
jbe
rcrb
je
out
jl
push
inc
mov
and
pop
dec
or
inc
je
inc
and
mov
lret
jne
and
bnd
inc
orl
popa
in
adc
pop
cld
inc
dec
ret
into
adc
fs
and
int3
adc
push
adcb
rcrb
bound
adc
aad
and
outsb
adc
push
and
and
and
fsubs
mov
inc
inc
adc
cmp
adc
push
and
push
movl
bound
fcoml
xor
mov
inc
andl
mov
dec
in
mov
sbb
call
and
imul
in
inc
push
scas
adc
lret
and
mov
dec
and
dec
adc
and
sub
shl
js
and
cli
inc
aas
push
sub
sub
adc
mov
lahf
scas
push
aad
cli
adc
shll
xchg
sbb
mov
sar
cmp
jne
inc
or
adc
and
push
adc
fsts
lret
cmp
adc
mov
inc
insl
adc
shll
movsb
sub
push
and
lea
sub
push
and
adc
and
sub
adc
jbe
sbb
aaa
jo
push
pop
sbb
shl
push
add
fs
orl
adc
sarl
inc
outsl
lock
pop
mov
jle
pop
stos
adc
sbb
outsb
sbb
pop
adc
sbb
or
rorl
cmp
jne
outsl
aaa
adc
shll
subb
sbb
cmpsb
and
ljmp
mov
loope
inc
push
arpl
lret
and
sub
sbb
mov
cmp
jl
adc
loop
inc
sub
sub
push
pop
and
adcb
cmp
adc
mov
and
push
shl
push
and
gs
inc
xchg
push
loopne
inc
jle
xchg
cmc
cld
adc
and
in
shlb
out
clc
gs
out
andl
adc
mov
pusha
lahf
adc
sub
add
or
jg
mov
in
dec
sbb
cltd
lahf
mov
out
xor
lds
lret
sbbb
mov
and
sub
add
and
adc
inc
adc
adc
add
cmp
gs
add
dec
xor
and
repz
pop
daa
and
movsl
and
sbb
cmp
je
addr16
cmp
cwtl
lret
mov
mov
cmpsl
es
push
sub
es
cli
sub
and
and
jmp
inc
mov
add
and
gs
pushf
and
and
aas
adc
pusha
ljmp
push
test
fbld
and
adc
push
mov
inc
in
es
adc
and
es
pusha
fadds
inc
adc
pop
add
test
inc
and
sub
adc
mov
pop
and
lds
and
push
subl
and
fcompl
jl
repnz
sbb
int
and
dec
cmp
jl
jnp
dec
arpl
push
pop
xchg
adc
andb
xor
and
je
mov
mov
mov
mov
mov
mov
jecxz
pop
lds
lea
lea
push
inc
adc
push
and
pop
adc
jg
popw
inc
adc
cmp
je
popa
pop
adc
inc
movlps
mov
dec
out
es
sbb
outsb
es
and
adc
pop
mov
push
and
mov
inc
or
lea
xchg
adc
xor
imul
and
adc
adc
dec
pusha
adc
in
cmp
xchg
outsl
xor
sub
movl
push
cvttps2pi
adcl
and
push
mov
test
movl
add
cmp
jg
cmp
add
movsl
and
mov
add
mov
adc
jmp
notl
inc
add
add
adc
mov
and
inc
popa
hlt
sbb
mov
push
mov
lea
mov
hlt
adc
xor
and
cmp
insl
jnp
cmp
add
lcall
push
dec
lcall
sbb
cli
inc
jne
cmpb
jne
and
and
adc
adc
inc
adc
adc
add
test
jne
cmp
jne
cmp
jbe
and
andb
dec
lret
cmp
sbb
and
and
jne
and
cmpb
jne
cmpb
jne
mov
cmp
and
adc
pusha
outsl
adc
and
mov
cmp
adc
insb
inc
xor
or
and
aas
loopne
adc
inc
push
adc
jne
pusha
push
adc
cmp
inc
sbb
sbb
call
cmp
call
xor
adc
adc
jne
push
or
push
push
mov
aam
adc
std
adc
inc
xor
push
adcl
xor
push
sub
call
adc
xor
adc
mov
jmp
lar
mov
sub
xchg
dec
cs
in
mov
pop
add
xor
adc
fisttpl
push
adc
rcll
and
faddl
cld
and
adc
cmp
cwtl
push
push
adc
mov
data16
adc
inc
add
je
out
adc
ret
mov
pop
adc
shlb
adc
xchg
ret
xor
mov
push
jmp
lds
cmp
jge
mov
mov
shl
add
pop
pop
dec
cmc
push
sub
push
push
and
adc
clc
adc
test
cmp
cmpb
jb
cmpl
dec
das
adc
and
or
or
cmp
jne
inc
jmp
mov
mov
xchg
loop
xchg
adc
and
adc
push
adcb
mov
mov
and
xor
adc
push
push
dec
sbb
popf
xchg
pop
and
adc
add
pop
or
adc
dec
add
mov
dec
int3
and
inc
adc
sar
push
mov
adc
and
inc
adc
dec
aad
ficompl
in
dec
int
cmp
mov
jne
cmpw
je
inc
xchg
rcrb
push
inc
pop
adc
inc
pop
inc
sbb
inc
or
jno
jne
and
and
mov
jp
sbb
pop
mov
stc
jnp
xlat
ja
pusha
adc
ret
push
cmp
pop
push
in
inc
fdivrs
xor
sbb
adc
and
pop
add
iret
add
sahf
cmp
push
mov
jb
and
lea
adc
ret
or
mov
adc
bound
push
xor
sbb
lock
adc
inc
daa
adc
sub
add
adc
push
push
and
adc
sbb
add
in
dec
jne
jp
adc
mov
adc
inc
and
mov
movsl
aas
adc
outsl
push
and
fcoms
testb
jg
aaa
add
ret
lahf
cmp
je
daa
jno
add
je
mov
mov
mov
mov
mov
mov
jno
mov
and
push
ficoms
dec
les
adc
push
mov
mov
and
jb
mov
cmp
add
add
sub
adc
nop
lock
add
inc
test
daa
insl
jno
nop
nop
mov
and
and
cwtl
das
mov
mov
dec
cld
and
loope
and
and
lret
mov
ds
inc
cwtl
adc
and
push
jne
cmpl
jne
imul
jl
adc
jg
adc
sub
clc
mov
pop
and
sub
sub
cmp
pop
sub
pop
push
gs
adc
scas
mov
mov
outsb
mov
cmp
arpl
insl
jo
sti
insb
lds
lea
sub
and
and
mov
pop
in
adc
pusha
mov
out
jo
cmp
loopne
and
ss
mov
insb
jne
xor
and
mov
int3
and
aas
push
sbb
aaa
xor
aam
push
pusha
aam
adc
inc
les
adc
mov
mov
int3
push
dec
cli
adc
outsl
stc
inc
adc
sub
and
scas
adc
and
cmpsb
and
mov
mov
mov
sub
pusha
cmpsb
fs
dec
lea
cmp
jg
mov
mov
sub
pusha
mov
imul
sbb
idivl
cmp
jle
fistl
and
push
mov
and
dec
sbb
pusha
mov
push
mov
sub
leave
and
jp
mov
adc
and
mov
call
and
push
and
cmp
test
je
mov
mov
jmp
or
pop
or
cmp
adc
push
jge
pop
push
popa
insb
mov
jb
clc
sub
and
sub
scas
popa
rcll
or
inc
and
xor
clc
mov
or
adc
add
scas
and
jmp
pusha
aaa
adc
mov
adc
and
nop
adc
cmp
je
mov
lahf
lea
into
sti
and
dec
adc
enter
xlat
cmp
pop
icebp
and
sbb
xlat
mov
cmp
je
mov
xor
pop
inc
and
scas
out
or
adc
jne
inc
andl
and
pop
adc
sub
mov
adcb
adc
arpl
adc
xchg
sub
add
or
inc
sub
mov
inc
inc
and
bound
aas
add
outsl
daa
inc
aad
dec
jne
call
ss
test
cwtl
and
jle
adc
inc
adc
push
push
arpl
adc
aad
push
and
xchg
dec
jecxz
movups
shlb
es
adc
and
adc
push
inc
sub
movsl
and
cwtl
outsl
xor
mov
ficoms
xchg
rorl
and
sub
cmpl
dec
and
adc
sar
dec
dec
adc
add
in
jl
leave
lods
sbb
je
mov
mov
mov
add
adc
adc
and
push
test
lldt
xor
iret
mov
adc
sbb
icebp
inc
fwait
notb
xor
sbb
adc
mov
andl
rclb
jne
and
mov
and
pop
int3
jbe
mov
adc
or
jmp
and
fiaddl
xor
xor
scas
adc
inc
inc
add
rolb
fadds
adc
dec
pusha
add
outsl
pop
adc
xor
adc
mov
and
fcoml
pop
addr16
and
and
jo
adc
mov
test
pop
push
and
cmp
mov
in
les
add
adc
je
and
inc
sub
and
imul
xchg
adc
dec
xor
dec
std
cs
dec
mov
in
push
mov
pop
and
mov
and
push
adc
adc
jbe
outsb
dec
adc
xchg
ret
adc
pop
hlt
adc
movsl
addb
or
test
adc
push
push
adc
add
cs
adc
mov
pop
and
sub
xor
pusha
adc
sub
inc
inc
fwait
and
adc
mov
dec
cmp
inc
inc
pop
dec
mov
jne
cmp
jne
and
daa
and
and
adc
test
and
add
cmp
jne
lock
movsbl
imul
pop
push
and
adc
jmp
aad
ljmp
lea
insb
xor
clc
mov
push
jge
repz
je
mov
sub
adc
push
and
je
adc
and
pop
jmp
pop
or
inc
aam
pop
daa
sbb
inc
and
neg
mov
movl
push
adc
les
aam
adc
movl
aaa
adc
push
es
mov
mov
mov
imul
adc
and
out
and
pop
adc
mov
mov
test
je
inc
cmp
sub
adc
mov
cltd
es
in
popa
xchg
and
adc
inc
cmp
xor
jbe
mov
sub
js
xchg
sub
shll
jg
js
adc
sub
mov
ret
andl
std
inc
jns
xchg
insb
adc
and
adc
ljmp
cli
adc
ret
cmp
adc
sub
adc
inc
xchg
and
adc
jl
and
adc
jge
sub
inc
and
and
insb
pusha
push
adc
stc
ja
ret
sbb
pop
and
sbb
test
cmp
in
pop
inc
mov
cmp
jne
add
add
mov
adc
push
add
jno
pusha
or
cld
addb
add
in
pushf
daa
sbb
mov
rorb
push
and
and
xor
mov
inc
xchg
and
push
push
sub
sub
inc
xor
inc
cltd
xchg
inc
jnp
lea
jmp
mov
mov
lea
clc
mov
sar
and
and
adc
inc
je
inc
pusha
or
loope
mov
rclb
cs
and
pop
adc
movl
jae
xchg
loop
inc
ret
dec
adc
scas
cmp
adc
jae
pop
inc
inc
adc
stos
mov
dec
and
in
lea
jnp
push
pop
notl
adc
leave
add
sub
notl
add
jbe
cmp
adc
ss
add
and
mov
inc
adc
mov
and
popa
mov
in
adc
out
mov
lock
adc
push
inc
xor
inc
add
add
push
inc
add
inc
cmp
and
push
adc
and
adc
add
dec
pusha
xchg
cltd
pop
adc
cmp
sbb
aam
adc
sub
and
pop
aaa
adc
test
xchg
test
pop
push
jne
adc
cli
push
jbe
dec
jo
push
and
and
cmpsl
inc
or
add
jbe
mov
mov
inc
out
ficoml
js
and
adc
adc
cmp
bound
sbb
ljmp
add
add
and
adc
outsl
xchg
adc
out
and
mov
and
adc
lea
push
aas
popa
sbb
popf
sahf
jmp
and
pop
adc
add
dec
lds
mov
scas
rcll
add
sti
dec
outsb
repz
xchg
jne
pop
inc
stos
and
insb
sub
or
incl
inc
pop
adc
push
das
ljmp
adc
and
xchg
pop
adc
jle
and
jecxz
mov
push
adc
jecxz
je
jle
pop
cmp
or
vmovddup
jecxz
mov
int
add
push
test
xchg
push
dec
adc
push
inc
add
call
adc
cmp
cmp
lods
pushl
dec
aas
adc
mov
mov
push
aas
jbe
and
xchg
and
adc
mov
cmp
jnp
push
or
in
pop
xchg
and
and
stos
in
mov
and
xchg
loope
adc
sbbl
jb
and
clc
loope
xor
cmp
dec
adc
mov
lods
and
pop
push
push
push
mov
xor
push
sub
add
mov
std
add
sbb
pop
and
sub
xor
inc
xor
mov
mov
mov
mov
movl
adc
mov
mov
mov
mov
mov
push
cmp
and
sbb
repnz
add
rep
popa
mov
add
dec
pop
sbb
mov
mov
mov
mov
test
into
cmp
je
mov
and
ret
into
jne
mov
mov
mov
test
ss
sub
cmp
rcrb
ja
pop
adc
adc
xorb
mov
sahf
dec
adc
cwtl
and
mov
adc
leave
add
pop
dec
add
jl
pop
and
je
dec
adc
add
adc
adc
push
and
adc
pop
or
inc
and
xchg
and
adc
and
and
dec
push
xor
push
and
movl
add
ljmp
loop
and
or
shr
fidivl
or
cmp
je
cmp
inc
ss
lea
mov
add
and
xchg
push
jmp
dec
xchg
adc
xchg
pushf
adc
push
add
mov
sbb
cmp
call
pop
adc
adc
adc
adc
sub
rorl
xchg
call
and
mov
push
xchg
adc
and
adcl
leave
dec
mov
out
jae
or
int
and
dec
and
inc
add
pop
and
adc
jmp
dec
mov
sub
mov
imul
mov
stos
pop
and
adc
jae
inc
sbb
xor
popa
ret
cmpsb
adc
ret
and
cmp
adc
lret
orb
jmp
rclb
cmp
jae
push
adc
or
and
dec
cli
adc
fisttpl
adc
xor
cmpl
jne
push
adc
pop
jmp
inc
or
notb
shl
push
adc
inc
push
add
shr
shl
or
mov
mov
mov
and
cmp
jl
or
mov
add
stc
push
adc
add
sbb
adc
and
test
idivl
aaa
pusha
imul
adc
adc
jb
data16
and
inc
adc
push
adc
or
or
cmp
inc
fsts
sbb
call
xchg
adc
ret
adc
mov
sbb
les
and
pop
sbbl
adc
adc
clc
add
adc
and
and
or
adcb
rclb
and
dec
adc
rolb
outsl
arpl
cld
pop
scas
jmp
jbe
mov
add
das
push
push
ret
iret
neg
pop
pop
sbb
pop
neg
ret
dec
pop
adc
mov
jg
sbb
push
and
je
and
fisubl
inc
and
inc
and
pop
movl
jb
xchg
and
adc
push
mov
fsub
addb
leave
adc
pushf
fwait
adc
and
bound
push
mov
cmp
jne
cmp
je
mov
mov
dec
lock
sbb
and
arpl
push
and
nop
andb
and
adc
arpl
sbb
andb
sbb
mov
inc
and
scas
cltd
and
mov
jle
inc
je
jne
mov
mov
pusha
adc
jle
jne
adc
and
lret
inc
sub
adc
cmp
je
and
mov
sub
add
cmp
jne
mov
mov
mov
add
xchg
sub
sbb
jg
adc
mov
insb
and
popa
push
rcrl
inc
and
inc
pop
sub
push
and
push
xor
cmp
jne
movsb
daa
adc
mov
test
dec
push
in
inc
pusha
add
and
xor
push
pusha
mov
inc
adc
mov
mov
mov
inc
or
cmp
lock
add
adc
push
jbe
push
push
lods
inc
dec
sbb
sbb
call
push
mov
jl
lds
push
add
lea
ds
shlb
mov
mov
mov
mov
and
inc
and
adc
dec
inc
cmc
sub
dec
lret
dec
pusha
je
cltd
inc
addr16
adc
mov
add
test
fdivl
mov
sbb
push
cmp
jne
cmpb
je
push
lea
push
fsubs
sarl
mov
push
cmp
jne
mov
sarb
pop
pop
and
xchg
je
cmp
and
je
test
mov
mov
dec
pop
cmpsl
popa
inc
push
adc
orb
jmp
ficoml
movl
push
inc
jo
push
mov
daa
pop
add
pop
adc
pushf
cli
jae
inc
test
lea
and
inc
adc
push
mov
pop
mov
mov
shll
xchg
xchg
adcb
xchg
pusha
pop
adc
jns
jmp
and
cmp
adc
mov
into
and
inc
mov
push
cmpb
or
test
movsb
cmpsb
adc
push
and
addl
js
adc
cwtl
and
xor
adc
subl
push
add
push
adc
loopne
adc
sbb
adc
out
sub
add
jne
push
and
push
sbb
jmp
imul
mov
mov
adc
mov
inc
push
and
xor
dec
jle
cmp
scas
push
add
shrl
sarl
rolb
outsl
xchg
adc
inc
test
inc
fsts
jne
mov
test
and
xor
sbb
shll
dec
add
rol
and
adc
test
inc
mov
cmp
cmp
fbld
jmp
push
inc
mov
sub
and
adc
lret
push
push
inc
sbb
inc
outsl
sbb
inc
or
fisubl
enter
cmp
je
mov
or
rorb
stc
shlb
loopne
adc
and
outsl
adc
rclb
sub
mov
cmp
je
mov
pop
fs
pop
adc
test
subb
add
sub
xorb
lock
cmp
and
cmpsb
adc
decl
test
inc
sub
sub
addb
pop
or
jb
int
inc
ret
shlb
inc
xor
pop
mov
lods
and
mov
sub
rclb
rolb
or
mov
test
jbe
mov
adc
sub
inc
outsl
pusha
imul
pusha
sbb
push
or
dec
add
adc
jg
adc
cmp
jb
and
add
push
inc
dec
adc
jmp
inc
xchg
adc
mov
mov
adc
and
add
xchg
adc
xchg
adc
addl
fsubs
lea
pop
bound
daa
and
adc
and
mov
add
je
push
inc
adc
rorl
sub
repz
mov
testb
je
mov
adc
mov
sbb
inc
adcl
mov
add
inc
or
roll
or
test
jne
and
aaa
cmpsb
adc
and
cltd
inc
aas
add
rorb
inc
mov
add
add
cmp
push
jne
add
sub
dec
add
pop
dec
mov
sub
cmp
jbe
cmp
je
pop
mov
inc
movsl
adc
inc
and
add
jle
mov
cmp
je
mov
mov
sub
insl
adc
test
loopne
sbb
push
xor
adc
xor
rolb
adc
inc
add
jbe
and
shlb
mov
add
mov
dec
inc
adc
jae
inc
push
adc
jne
sub
sub
push
sbb
mov
mov
xor
inc
add
shl
or
mov
mov
and
cmp
inc
cwtl
push
jnp
pop
jne
orl
inc
notl
pop
add
pop
mov
les
je
jmp
cmc
inc
pop
inc
sub
push
je
cmp
push
inc
push
push
adc
cli
xor
adc
add
aaa
add
dec
and
and
popa
push
adc
xor
inc
call
add
or
ret
inc
mov
inc
xor
sub
add
xor
mov
in
adc
loopne
push
add
inc
sub
mov
add
add
mov
and
and
add
adc
and
scas
adc
lret
push
and
sub
jne
loop
push
push
and
insb
and
mov
or
push
and
shll
cmp
dec
xor
add
xor
push
fldenv
test
adc
jle
dec
sub
add
or
call
iret
and
cmp
outsl
and
xor
adc
inc
lods
adc
ret
xor
pop
cld
mov
lret
or
sahf
cli
add
mov
sbb
movsb
adc
dec
adc
enter
adc
pop
mov
add
mov
or
adc
mov
mov
dec
and
fs
adcb
xchg
adc
and
push
sub
call
adc
std
adc
lret
push
mov
push
lea
shll
insb
andl
adc
ja
adc
lea
mov
xchg
inc
cmp
adc
scas
negb
mov
lea
cmp
je
dec
and
push
loopne
inc
fists
insb
mov
add
jae
adc
xor
adc
das
dec
add
lea
pop
imul
in
adc
jne
pop
sub
mov
lea
mov
rcll
ret
jne
and
daa
jl
inc
fsts
orb
adc
insl
or
add
mov
and
inc
mov
adc
int
jl
adc
pop
inc
jmp
cmp
cmp
adc
loope
das
sbb
fists
adc
mov
push
mov
adc
sarl
add
push
adc
call
and
loopne
adc
push
cmp
fadd
inc
and
lret
and
cmp
imul
and
gs
fstl
add
pusha
and
shrb
adcb
lret
inc
test
cmp
je
push
dec
inc
mov
push
mov
jne
cmp
out
or
dec
or
sub
cmc
das
adc
fs
subb
int
sub
mov
fcmovnbe
and
adc
cs
mov
add
mov
mov
inc
popa
adc
je
xlat
je
popf
adc
cs
add
movl
add
jl
bound
jl
dec
xor
fwait
add
fwait
adc
sbbb
popa
and
loopne
inc
add
nop
inc
popf
adc
add
add
je
es
adc
and
les
mov
inc
pop
inc
mov
dec
mov
sub
fsubrl
or
adcl
mov
and
cmp
jne
push
cmp
cmp
jne
and
shr
fadds
in
sbb
or
shl
mul
sub
shr
push
orl
add
pop
mov
inc
dec
adc
mov
fidivrl
addb
cs
add
mov
shr
loopne
mov
flds
jne
sbb
adc
enter
pop
push
push
add
mov
or
mov
mov
ret
scas
push
adc
add
cmp
ja
pop
jns
dec
bound
gs
ret
or
add
push
or
or
pusha
sbb
adc
and
sub
sbb
cmp
pop
iret
adc
dec
adc
nop
add
inc
add
sbb
inc
add
adc
add
mov
sbb
adc
mov
lds
and
dec
sbb
and
dec
or
lret
cmpb
je
cmp
vpmullw
andl
jg
mov
test
je
mov
xorb
sub
andb
cwtl
inc
pop
sbb
enter
mov
jb
mov
and
adc
jmp
sub
mov
adc
add
and
adc
inc
out
adc
inc
shl
and
mov
adc
push
push
push
pop
cltd
adc
sbb
mov
adc
mov
push
jne
lcall
inc
fstps
jecxz
in
mov
jbe
mov
and
out
push
andl
jne
mov
or
dec
insl
and
sbb
lea
je
mov
inc
inc
dec
adcb
ret
test
je
loopne
adc
mov
push
jne
and
ss
mov
cmpsl
jl
dec
xor
inc
inc
adc
dec
aas
and
dec
mov
ja
add
lea
xor
cmp
adc
inc
sbb
xchg
add
mov
add
das
xor
add
lret
mov
lret
sub
es
stc
andl
js
pusha
shll
adc
jns
adc
add
je
dec
clc
adc
and
mov
add
pusha
inc
popa
or
ret
adc
cmp
inc
leave
adc
mov
push
adc
sub
mov
mov
and
inc
jno
or
adc
orl
and
pop
push
or
push
pop
fistl
rcrb
es
jne
stc
rorb
dec
shrl
lret
add
test
jbe
lea
pop
inc
adc
mov
inc
fcoml
and
and
loopne
loope
adc
pusha
outsb
sbb
sub
cmp
je
sub
loop
push
sub
push
jge
ja
icebp
lea
sbbb
es
add
repz
add
add
xchg
add
pop
or
or
adc
push
sbb
adc
mov
inc
addl
inc
inc
adc
pop
fwait
push
xlat
adc
pop
das
adc
les
add
outsb
adc
test
outsl
adc
or
mov
subb
adc
inc
push
push
xorb
loopne
and
leave
dec
inc
ljmp
test
subl
adc
iret
pusha
daa
adc
or
jecxz
je
arpl
fbld
or
shr
leave
nop
lret
inc
cwtl
inc
outsb
adc
sub
ficoml
add
inc
sub
xchg
lock
inc
xchg
adc
xor
subb
outsl
pusha
arpl
jle
mov
test
adc
sub
and
inc
outsl
and
loope
cmp
xor
shrb
cli
aas
pusha
jo
ret
pop
fiaddl
adc
jg
and
inc
and
inc
jg
mov
xchg
jo
adc
lahf
gs
adc
nop
add
ret
push
add
lret
mov
aaa
rcrb
ds
jno
adc
sub
cmp
adc
push
lret
mov
out
es
addl
adc
inc
adcl
shll
cmp
pusha
dec
sub
adc
inc
out
mov
pop
adc
addl
add
inc
adc
push
arpl
cmp
mov
es
aaa
arpl
sub
add
and
cmp
roll
adc
arpl
jecxz
cmp
mov
clc
arpl
sbb
sub
jg
stc
lea
andb
jecxz
inc
and
add
jmp
mov
jg
push
pop
mov
cmp
je
cmpb
clc
and
mov
push
sub
inc
xor
adc
push
cmp
add
or
inc
adc
add
rolb
adc
test
dec
dec
and
adc
out
and
adc
inc
mov
movl
ss
inc
and
and
mov
dec
adc
jnp
adc
js
adc
shlb
mov
inc
pop
adc
es
adc
inc
pop
sub
sbb
add
and
push
pop
adc
mov
adc
adc
dec
daa
mov
in
das
and
jbe
pop
insl
and
xchg
and
adc
add
dec
xlat
adc
and
dec
jne
and
pop
and
mov
and
xor
or
dec
orb
push
and
mov
sahf
sub
push
inc
and
adc
and
enter
in
adc
jle
and
sub
xchg
push
pusha
inc
and
and
es
and
pushf
sub
sbb
add
mov
and
sub
add
sub
jmp
jne
push
inc
and
sub
fldenv
adc
push
pop
pop
adc
call
push
adc
xchg
push
inc
and
pusha
mov
or
cmp
inc
add
mov
fwait
and
je
outsl
jmp
add
iret
mov
adc
fistl
cmp
inc
cltd
and
pushf
inc
repz
inc
ret
adc
pushl
or
out
push
and
and
fisubl
push
ss
and
dec
adc
ret
cmp
rcll
cmp
and
adc
xchg
popa
sub
or
arpl
lcall
cmp
jbe
adc
and
inc
or
loopne
inc
add
sub
adc
inc
push
shlb
or
pusha
adc
adc
and
rep
and
adc
add
mov
call
jmp
sub
sbb
push
push
and
ljmp
popa
add
push
cmpsb
and
in
cmp
inc
pusha
adc
inc
adc
pusha
push
adc
inc
push
adc
lea
out
adc
adc
test
and
pushf
adc
shlb
aaa
push
mov
lea
and
adc
and
adc
add
pusha
adc
pusha
popa
jecxz
pop
sub
pop
sub
and
sub
adc
inc
pop
or
cmp
jne
and
xor
adc
push
and
inc
pop
and
pop
shr
out
add
dec
push
cmp
je
and
jl
mov
adc
and
lea
inc
mov
push
push
lea
notb
cmp
pop
inc
and
cmp
add
cmp
lea
sbb
dec
mov
pop
and
adc
push
scas
adc
xchg
outsl
sub
sub
aad
jmp
pusha
pusha
mov
les
in
push
aas
ret
pusha
test
rolb
je
sub
popf
pop
and
or
inc
add
loop
pop
pop
inc
loop
push
call
inc
data16
and
frstor
loope
and
and
ficoml
xor
add
xor
shr
mov
push
push
cmp
je
inc
and
hlt
inc
fists
push
pusha
mov
mov
andl
push
inc
call
and
bound
inc
and
and
addl
fsubl
or
pusha
mov
pop
pop
popa
test
add
sbb
add
pushf
and
fbld
adc
xor
adc
movl
adc
inc
add
and
fcoms
jmp
push
add
pop
mov
push
mov
mov
push
adc
push
and
adcb
fdivl
shrb
add
inc
mov
and
mov
mov
pop
adc
mov
push
or
or
dec
sbb
dec
lock
inc
dec
adc
and
pop
sub
lea
orb
jmp
adc
add
shlb
inc
xor
shlb
addl
arpl
adc
mov
adc
dec
enter
movl
jmp
mov
add
and
cmp
jge
dec
les
test
adc
mov
addl
dec
mov
jge
or
xchg
mov
jmp
and
inc
mov
adc
adc
xchg
and
sub
adc
add
xor
adc
xor
adc
xor
adc
sub
adc
jb
add
adc
adc
add
dec
push
sub
add
cmp
or
adc
adc
push
sub
add
addl
sbb
and
dec
adc
and
add
and
enter
movl
or
and
sub
mov
push
and
lea
xor
sub
add
inc
add
push
inc
add
mov
inc
add
clc
push
fadds
adc
add
jge
add
lds
and
daa
adc
and
out
fldenv
jp
jb
jbe
adc
packuswb
adc
push
mov
and
jae
and
xlat
push
lea
cmp
jne
sub
das
adc
and
pop
and
outsl
pop
jnp
mov
mov
inc
dec
and
inc
add
adc
ss
and
jno
or
adc
pusha
ss
inc
adc
sub
add
mov
cmp
dec
sub
mov
adc
inc
push
adc
mov
and
pop
sar
cmp
jge
and
cmp
add
sarl
adc
jmp
and
cltd
and
push
and
adc
mov
adc
mov
and
loope
inc
int
hlt
and
pusha
and
int3
into
adc
mov
loopne
adc
and
pop
inc
xchg
adc
sub
and
adc
mov
inc
adc
sbb
je
pop
or
adc
adc
les
adc
dec
adc
mov
mov
xchg
adc
mov
jbe
or
xor
andl
bound
jg
aad
fs
push
bound
cmp
add
pop
je
sub
lea
xor
adc
mov
sbb
inc
dec
adc
push
or
lock
mov
sub
xor
add
adc
das
add
aas
cmp
cltd
jae
cwtl
dec
xchg
aam
xor
loopne
and
pusha
add
adc
push
adc
dec
adc
and
dec
adc
push
mov
cmp
jl
mov
test
jge
xor
mov
std
and
adc
daa
adc
and
cmp
hlt
add
dec
add
pusha
iret
daa
movb
incl
adc
and
and
pop
adc
dec
daa
fildl
adc
sbb
push
pop
test
imul
or
fadds
adc
jecxz
mov
dec
xor
outsl
inc
mov
adc
and
es
fdivrl
adcl
push
xchg
and
popf
dec
xor
add
adc
and
cs
add
jg
and
xor
fs
xor
lods
and
sub
aam
orb
add
sbb
daa
str
adc
and
push
adc
and
and
arpl
dec
and
jecxz
adc
add
push
call
jne
adc
and
push
and
adc
arpl
and
dec
adc
and
pop
adc
adc
gs
adc
adc
les
inc
daa
adc
and
sub
hlt
and
cmp
inc
mov
cmp
inc
in
sub
adc
sub
pusha
and
lahf
adc
push
ss
adc
xor
add
pop
and
push
and
cmp
adc
pop
inc
inc
and
and
and
and
sub
mov
stos
add
add
pop
add
sub
add
add
loopne
daa
mov
mov
mov
xchg
and
popa
push
dec
aas
adc
inc
xor
adc
mov
push
dec
cmp
push
and
pop
adc
and
mov
dec
add
aad
push
xor
add
sub
dec
and
adc
and
xchg
aaa
and
pop
inc
inc
mov
dec
adc
or
inc
push
push
and
jmp
lsl
sub
jne
push
call
pusha
mov
push
and
pusha
adc
mov
pop
dec
arpl
loopne
inc
out
adc
out
add
lahf
stos
inc
mov
or
cmp
and
push
adc
ret
fs
lods
push
and
movsb
adc
and
mov
neg
and
outsb
loop
bnd
call
stos
pop
sub
or
adc
sub
adc
aam
sub
jle
and
push
adc
mov
and
cmp
loope
sub
std
lret
or
dec
adc
sub
inc
in
filds
and
stc
insl
outsl
arpl
sub
subl
push
and
bound
and
outsl
insl
xor
pop
and
adc
xchg
adc
stos
orb
and
and
xchg
sub
fucomi
popa
or
add
jle
sub
das
pusha
jge
das
add
mov
jb
adc
inc
cli
and
push
mov
test
jl
test
clc
jg
adc
and
sbb
cmp
jg
lea
and
jmp
inc
lahf
adc
xchg
push
and
incl
push
adc
cmp
adc
adc
add
xor
inc
push
adc
inc
or
push
push
push
mov
je
daa
cmp
cmp
adc
and
mov
xchg
inc
pop
adc
andb
lea
and
adc
adc
push
mov
and
or
inc
mov
scas
cmp
stc
lahf
mov
test
adc
mov
mov
and
push
in
mov
loopne
adc
clc
jne
scas
shl
fdivs
mov
mov
dec
push
or
in
inc
push
inc
fmull
aam
mov
mov
arpl
nop
adc
adc
and
jns
jmp
and
and
dec
loopne
adc
and
mov
mov
sbbb
pop
inc
call
scas
jl
xchg
inc
mov
out
add
push
and
adc
lea
inc
clc
inc
cmpsl
adc
and
xchg
popa
inc
and
shll
mov
lea
push
cmc
adc
and
shl
and
je
lcall
enter
inc
mov
shll
sbb
fildll
enter
int
or
mov
mov
adc
dec
adc
push
push
inc
and
push
popa
addb
sti
lahf
daa
dec
add
lock
mov
push
adc
mov
cmp
pop
repz
mov
mov
jge
adc
adc
ds
and
adc
push
and
adc
das
test
jne
push
mov
dec
aas
add
clc
jle
jmp
decl
jmp
incl
cmp
jle
pop
pop
dec
imul
mov
and
add
inc
push
jb
lret
and
adc
jne
inc
sub
adc
jmp
decl
pusha
inc
adc
jle
jbe
adc
and
push
sub
dec
and
and
pop
adc
push
call
and
call
test
movl
lea
adc
jg
es
xchg
adc
test
mov
inc
sub
xor
test
icebp
test
and
ret
pop
inc
push
adc
inc
xor
push
adc
pop
and
out
adc
adc
inc
mov
xchg
xchg
adc
add
push
loopne
adc
adc
adc
fwait
inc
adc
add
adc
cmp
adc
cwtl
adc
adc
loopne
adc
add
adc
adc
inc
adc
xchg
cli
rclb
adc
daa
adc
add
dec
xorb
adc
adc
loopne
and
pushf
rclb
push
loopne
adc
adc
adc
inc
or
adcb
imul
adc
push
mov
adc
or
lahf
and
fwait
rclb
or
daa
adc
adc
and
loop
or
pop
inc
sbb
adc
mov
rcrb
xchg
je
adc
fsubs
rclb
ret
je
out
and
rclb
pop
pop
adc
inc
adc
rclb
mov
daa
rclb
ret
cmp
rclb
adcb
add
lock
aas
adc
insb
push
add
in
gs
lahf
cld
adc
nop
dec
adc
and
movsb
mov
and
xor
and
adc
das
xor
and
adc
das
xor
adc
das
xor
adc
mov
xor
adc
das
xor
adc
das
xor
adc
das
xor
and
dec
sub
add
daa
das
xor
adc
das
xor
adc
push
push
sub
add
and
or
adc
ret
xor
adc
loopne
bound
rclb
mov
xor
adc
das
xor
adc
das
xor
adc
cs
sub
add
sbb
add
sbb
adc
and
and
sub
add
mul
and
adc
inc
mov
aas
adc
ss
xchg
adc
bound
and
movsb
mov
bound
adc
adc
adcl
fs
movups
pinsrw
shlb
inc
pinsrw
xchg
rorb
jno
mov
clc
pusha
pcmpgtb
test
mov
pcmpgtb
pop
adc
bound
pop
cmp
pop
adc
mov
pinsrw
sub
pinsrw
lock
call
adc
pcmpgtb
movups
pcmpgtb
jg
cmp
pcmpgtb
pop
dec
pusha
or
pop
lea
pop
and
pop
pusha
adc
push
pusha
pcmpgtb
fwait
pusha
je
sbb
and
xchg
inc
add
cs
xchg
pusha
pcmpeqw
das
and
cmp
xchg
out
adc
movsl
mov
adcb
inc
fbld
inc
in
push
mov
in
jbe
and
nop
mov
inc
lret
adc
and
xchg
inc
fistl
lock
inc
xchg
inc
dec
adc
and
ja
nop
adc
mov
adc
adc
js
test
adc
inc
fcoms
push
push
push
call
rorl
sbb
xchg
mov
popf
jae
pop
mov
ds
adc
rclb
cmp
call
and
adcl
lea
sub
sub
push
pusha
xchg
and
mov
ret
and
inc
adc
adc
push
popl
adc
dec
mov
ret
loopne
adc
inc
pop
and
and
adc
daa
adc
mov
inc
mov
and
xchg
adc
popf
and
and
mov
and
cmp
sbb
test
lods
pop
in
je
push
push
inc
adc
fbld
mov
jnp
adc
xor
xor
push
scas
pop
test
push
js
adc
push
adc
push
insl
jg
inc
mov
add
and
jne
jne
and
push
and
pop
add
adc
xchg
adc
mov
dec
add
sbb
sti
pop
test
scas
in
adc
fsubrs
dec
cmp
jle
or
sub
adc
dec
add
sub
pusha
adc
mov
dec
bound
adc
dec
popl
popa
mov
add
and
pushf
adc
jb
adc
and
adc
jne
adc
xchg
xor
and
push
or
push
inc
je
movsb
inc
dec
adc
dec
jns
adc
fs
mov
jp
dec
and
inc
jge
xor
insb
and
lahf
adc
sbb
and
mov
sbb
mov
and
adc
and
mov
mov
adc
js
out
jmp
loopne
adc
mov
inc
andb
inc
sub
mov
inc
bound
outsl
out
mov
and
or
mov
int3
push
insl
out
pop
mov
xchg
mov
sbb
push
and
adc
xor
fists
xchg
and
insb
and
nop
sub
fwait
add
push
inc
movsb
adc
inc
adc
faddl
clc
jp
xchg
outsl
inc
arpl
and
imul
dec
adc
lahf
mov
fsts
scas
jae
add
dec
fistl
or
and
dec
int
call
and
aas
adc
adc
xchg
push
push
add
inc
cmp
jl
outsl
inc
adc
aas
and
cli
sbb
stc
pushl
stc
jne
dec
jo
adc
and
adc
aaa
lahf
enter
add
and
adc
sbb
sbb
stos
call
mov
jle
loopne
pop
or
call
lock
adcb
pusha
insb
add
cmpl
jne
mov
lea
cmp
jle
mov
mov
test
jg
jno
and
and
or
mov
adc
mov
arpl
and
push
mov
xor
push
mov
in
jg
and
pusha
push
in
pop
jno
push
je
sbb
lock
sub
adc
inc
pop
subb
aad
and
and
and
outsl
sub
sbb
cmp
or
in
pop
dec
adc
add
mov
ja
mov
inc
adc
inc
rclb
jle
and
adc
xor
sbb
out
addr16
jne
and
jmp
inc
mov
add
ja
inc
lahf
inc
adc
in
jmp
inc
push
adc
jge
and
iret
pop
sbb
push
add
and
and
je
pusha
shr
mov
dec
and
xchg
push
jne
mov
xor
and
dec
and
mov
test
jle
dec
cmp
jl
mov
push
push
xor
adc
es
adc
add
mov
and
xchg
inc
movsl
and
and
and
adc
mov
adc
sbb
and
or
and
adc
pusha
sbb
xchg
mov
stc
cmc
adc
and
xchg
adc
sbb
test
and
cltd
adc
jne
adc
test
sbb
rclb
pop
adc
push
ret
pop
sbb
jne
and
inc
adc
adc
pusha
mov
add
and
cmp
mov
pop
adc
and
jp
mov
mov
mov
mov
and
sub
jg
mov
xor
mov
or
and
sbb
mov
jmp
lock
lea
and
push
push
dec
add
xor
movsb
test
loopne
fisubrl
and
and
adc
outsl
adc
pop
mov
cmp
adc
mov
push
adc
add
and
adc
and
fcomps
add
pop
mull
testl
xchg
adc
inc
ljmp
sub
mov
cmp
popa
adc
inc
push
xchg
and
push
push
mov
and
loope
and
and
test
sub
adc
and
cltd
ja
lock
cmp
jg
adc
jg
jmpw
std
popf
sbb
jae
jge
jmp
and
cmp
and
lds
dec
inc
pop
and
push
push
fs
adc
pop
cmc
mov
mov
cmp
jne
test
je
mov
inc
or
push
add
add
add
test
jne
and
in
sbb
cmpl
je
sbb
adc
fsubl
dec
and
and
xor
xor
adc
int
and
push
adc
les
push
mov
je
mov
and
adc
and
dec
adc
pop
add
sbb
or
jp
adc
jne
inc
lods
and
adc
and
and
mov
cmp
jg
inc
adc
movups
inc
xor
and
inc
add
imul
push
cmp
mov
out
xor
and
sub
sub
add
xor
sbb
push
jecxz
and
adc
and
lret
adc
push
add
sahf
jo
mov
pushl
cld
dec
mov
xor
adc
and
push
add
gs
and
and
mov
je
mov
iret
pop
and
dec
lret
lods
adc
pushf
and
cmp
dec
inc
lret
add
pop
and
xchg
inc
imul
div
and
sub
and
adc
outsl
add
iret
adc
and
mov
mov
sub
sub
or
push
push
push
add
mov
or
and
or
inc
inc
and
sbb
mov
mov
mov
cmp
mov
mov
mov
mov
mov
test
and
xor
mov
mov
mov
movl
push
mov
cmp
jl
cmp
push
push
and
adc
push
inc
adc
jge
mov
and
jecxz
pop
ret
jle
cmp
jge
and
nopl
lahf
mov
fiaddl
adc
dec
inc
adc
mov
and
jb
push
and
adc
add
inc
or
dec
adc
adc
push
adc
inc
sub
inc
sub
repnz
dec
pop
rcrl
sbb
inc
and
push
pusha
rorl
adc
and
adc
sub
add
mov
mov
mov
mov
lea
lea
inc
sub
adc
movl
dec
push
and
mov
push
push
lea
lcall
cmp
mov
mov
mov
mov
sbb
mov
mov
mov
and
popf
pop
aaa
jl
and
adc
mov
inc
or
push
leave
inc
adc
lcall
and
xor
dec
add
inc
jbe
sbb
mov
movw
inc
add
sbb
xor
cmp
inc
push
adc
mov
aaa
inc
xor
inc
xor
xor
xor
xor
divl
xor
cmp
out
add
add
adc
add
inc
pop
adc
and
adc
and
fdivs
lahf
xor
sbb
adc
cli
es
or
mov
and
int
movsl
adc
movswl
rorb
sub
add
int3
fstpl
div
das
mov
xor
cmp
je
and
pushf
inc
jp
add
or
cmp
jne
testl
je
std
adc
mov
adc
mov
jmp
sub
adcb
das
mov
pusha
xor
cmp
adc
add
adc
cmp
adc
cmp
jne
jno
incl
push
lods
adc
jp
jns
inc
in
adc
je
call
add
dec
test
adc
sub
adc
xlat
cmp
mov
sbb
jle
daa
out
xchg
scas
and
and
xor
add
mov
adc
add
inc
and
sub
adc
dec
and
stos
mov
adc
fsubl
pcmpgtw
shlb
adc
pop
dec
adc
sub
pusha
sbb
mov
adc
and
testb
je
adc
mov
adc
sub
mov
cli
addb
jmp
adcb
xchg
test
or
xchg
test
sub
mov
and
sub
pusha
sub
adc
dec
and
sbb
aas
lea
and
imul
mov
sub
pusha
jae
or
cmpsl
xchg
adc
cmp
or
sub
jle
repz
and
xor
and
adc
and
mov
and
out
sub
xchg
inc
xchg
add
inc
xchg
push
and
cmp
and
pusha
lods
sub
add
mov
inc
iret
sub
and
out
sub
inc
sub
sub
and
mov
cmp
adc
inc
inc
popa
pop
and
sub
movsl
adc
mov
sub
adc
pop
cmp
adc
and
or
push
adc
dec
test
xchg
mov
mov
and
adc
mov
adc
inc
xor
xchg
cmp
sub
and
xor
enter
insb
repnz
mov
adc
push
jno
add
movups
test
inc
cmp
inc
add
and
and
loop
cs
inc
pop
adc
and
pop
adc
add
js
inc
xor
mov
and
adc
fisttpl
mov
add
pop
mov
outsl
nop
sbb
mov
mov
mov
dec
inc
dec
leave
and
adc
or
inc
insb
adc
outsl
into
adc
cli
sbb
cmp
jle
and
sbb
cmc
jle
mov
sub
push
push
inc
dec
adc
mov
or
push
add
fdivrs
inc
push
adc
push
and
sub
push
jl
push
add
test
and
leave
dec
std
dec
pop
inc
add
je
mov
push
adc
jnp
adc
adc
cmp
jle
and
xchg
dec
cmp
clc
call
or
div
and
hlt
pop
mov
and
and
or
xchg
outsb
and
pusha
fs
jge
je
test
jne
mov
and
call
das
and
fstl
inc
inc
and
adc
jl
xor
pusha
ret
adc
and
adc
mov
out
xor
les
inc
std
and
adc
or
push
and
sub
add
pop
shll
mov
adc
and
mov
sub
mov
adc
inc
sbb
inc
mov
push
dec
subb
mov
enter
and
sbbl
push
sbb
test
mov
push
push
adc
jle
nop
adc
inc
xor
mov
push
lea
and
test
ss
push
inc
or
jne
loope
adc
or
cmp
inc
push
adc
sahf
adc
test
pop
jl
and
push
and
jbe
daa
je
sub
and
mov
push
add
adc
dec
pop
adc
sub
fcoms
push
out
push
gs
dec
nop
mov
fldenv
and
mov
out
adc
adc
mov
pop
adc
sub
jbe
clc
add
adc
arpl
daa
imul
xor
pop
mov
inc
xor
sub
or
mov
inc
mov
pusha
movlps
js
adc
dec
jnp
mov
and
in
and
jmp
adc
movsl
addb
test
and
andb
nop
and
xchg
daa
dec
or
test
filds
adc
dec
clc
dec
je
das
filds
adc
dec
and
fwait
adc
and
filds
adc
filds
adc
pop
sub
add
testb
mov
xor
mov
out
inc
pop
pushl
inc
pusha
and
cli
xorb
xor
add
loop
jno
and
mov
faddl
sub
filds
adc
cmpsl
subb
and
xor
dec
and
and
mov
fwait
adc
les
and
pop
jl
inc
sbb
addl
push
and
xor
bound
dec
ljmp
inc
and
imul
add
sub
and
imul
mov
cmp
and
insb
and
imul
xchg
xor
cld
mov
jl
shrl
mov
aaa
lea
dec
xor
adc
sbbb
pop
mov
adc
adc
mov
adc
pusha
pushf
sub
add
dec
add
add
and
and
inc
and
cmp
adc
das
add
or
cmp
loope
cmp
das
add
push
mov
loopne
and
adc
das
add
jg
and
add
mov
sub
inc
insb
and
push
cmpsl
adc
dec
push
adc
es
adc
pusha
out
push
pop
adc
push
jne
inc
sbb
push
and
and
push
and
inc
adc
adc
loop
loopne
adc
jo
mov
hlt
outsl
and
sub
pop
inc
xchg
adc
adc
add
mov
and
sub
adcb
adc
jnp
and
adc
stos
mov
and
jge
pop
add
jns
adc
inc
or
add
jmp
and
rep
mov
mov
fisubl
push
cmp
movsl
hlt
and
jb
dec
arpl
adc
and
pop
adc
imul
mov
je
cmp
adc
jae
adc
push
repnz
push
imul
cli
mov
sbb
test
and
mov
movsb
adc
sbb
adc
add
movswl
adc
dec
cwtl
out
or
outsl
adc
jl
loopne
adc
mov
fists
jmp
and
and
popa
adc
sub
cmp
sub
add
push
push
push
movsb
lds
clc
dec
pop
and
inc
and
xor
and
sar
sub
adc
sbb
adc
mov
adc
iret
jae
push
or
push
mov
cmp
jg
loopne
sub
sub
fildll
aas
add
dec
ss
add
inc
push
mov
add
ret
xor
and
das
rorb
and
arpl
add
cmp
int3
adc
shrb
movlps
pop
ret
cs
push
and
adc
add
xchg
push
adc
test
ss
pop
inc
mov
adc
inc
cmp
adc
push
push
loope
adc
lds
and
popa
inc
jle
lret
mov
dec
insl
pop
jmp
aaa
jle
ficoml
sub
dec
jns
jecxz
adc
loopne
and
inc
and
adc
sub
inc
in
dec
js
push
adc
jne
lock
jmp
cmp
mov
jl
and
inc
pop
add
std
jge
cmp
je
sub
loopne
adc
incb
pusha
jg
enter
jg
adc
loopne
adc
mov
sbb
dec
fcoml
clc
sub
sarb
mov
push
adc
sbb
in
mov
sub
add
pop
and
mov
pop
ja
push
or
sub
xor
inc
mov
data16
fwait
and
inc
jl
inc
js
lret
adc
in
push
rclb
and
and
ds
rclb
clc
cmp
and
bound
je
orl
and
pusha
push
adc
scas
arpl
and
icebp
inc
and
sub
clc
add
outsl
jecxz
test
cs
pusha
push
adc
in
and
and
mov
and
cld
and
in
xor
pusha
push
adc
mov
dec
mov
lcall
inc
lret
and
jp
xchg
and
push
and
pushf
and
out
adc
and
and
xchg
mov
adc
push
and
and
mov
jbe
mov
and
push
inc
push
adc
jnp
mov
and
mov
and
and
inc
in
adc
or
and
popa
sbb
dec
mov
and
adc
iret
rclb
pop
mov
sbbb
sub
je
push
pusha
pop
and
mov
cmp
mov
cmp
cmpsb
and
inc
or
nop
and
sbb
push
inc
ss
out
call
lods
and
mull
pop
scas
and
and
insb
fwait
inc
xor
adc
inc
ret
adc
andb
stc
inc
dec
adc
push
inc
xchg
pusha
repnz
xchg
addb
add
inc
mov
and
and
ds
mov
sbb
and
mov
lret
inc
popf
and
mov
movl
adc
xlat
pusha
lahf
pusha
daa
mov
jge
push
adc
roll
sarl
inc
arpl
and
dec
sarl
and
pusha
push
mov
and
mov
adc
mov
mov
es
add
inc
lds
mov
pushf
and
mov
add
and
push
std
adc
mov
and
stc
inc
sbb
shrb
pop
push
pusha
cs
push
loopne
and
cmp
adc
inc
mov
inc
rcl
pop
loopne
rorl
bound
inc
and
sbb
and
inc
pop
pusha
outsb
inc
adc
cmp
mov
inc
dec
pop
push
shr
mov
jmp
iret
inc
sbb
sbb
frstor
cmp
adc
inc
or
add
inc
fildl
inc
mov
clc
mov
insl
jle
or
ret
arpl
inc
adc
or
inc
sbb
out
and
adc
mov
mov
push
and
inc
aad
popf
and
inc
aam
bound
and
imul
aam
or
out
es
adc
jbe
jne
jg,pt
push
push
inc
adc
ret
fisubl
add
adc
addb
sbb
cs
adcb
mov
rclb
push
adc
mov
das
dec
inc
push
and
sub
inc
adc
inc
mov
mov
push
and
mov
mov
push
jl
aas
adc
pop
and
push
cmp
cmp
add
mov
iret
mov
bound
adc
lds
shlb
insb
inc
push
and
adc
jb
adc
adc
inc
inc
pusha
xor
inc
shlb
daa
adc
arpl
movsl
imul
mov
adc
pop
and
and
js
xorl
pop
inc
rcll
incl
adc
outsb
and
xchg
pop
aaa
adc
jle
and
das
adc
mov
mov
or
mov
in
add
cmp
jge
daa
add
inc
mov
and
adc
test
and
inc
shrb
adc
inc
popf
and
dec
adc
inc
pop
adc
daa
movsb
mov
sub
sub
pop
daa
movsb
mov
das
mov
pop
and
inc
adc
and
and
ds
or
cmp
mov
fs
pop
and
jno
ljmp
data16
cld
and
ret
and
fstl
push
and
data16
push
jmp
and
and
mov
inc
sub
xor
arpl
adc
js
cmp
insb
xchg
adc
lea
cmp
jmp
push
es
sub
pop
and
jg
cmp
jl
cmp
cmp
and
adc
mov
adc
sub
add
inc
pop
and
mov
jmp
and
and
inc
daa
pop
add
test
push
pusha
mov
mov
outsl
inc
sub
adc
inc
mov
adc
out
xchg
orb
inc
inc
sbb
mulb
and
xchg
and
das
adc
popl
and
adc
pop
mov
cmp
je
and
push
sub
mov
and
sbb
mov
push
ljmp
addr16
push
push
sub
shll
inc
incl
adc
jecxz
inc
xchg
adc
nop
adc
mov
bswap
movsl
dec
mov
and
daa
inc
mov
imul
xchg
enter
mov
sub
push
xor
adc
and
mov
and
pop
orb
sub
dec
and
adc
fs
adc
pusha
push
and
push
add
dec
adc
dec
add
adc
jno
adc
xor
adc
bound
sbb
push
adc
or
mov
ds
mov
sub
popa
adc
fs
and
and
xchg
mov
push
and
xor
push
mov
mov
cmp
and
adcb
bound
inc
and
mull
es
inc
dec
adc
movb
or
add
cmp
or
and
orl
and
insl
push
jne
adc
and
jl
and
cmp
rorb
shlb
lods
test
mov
adc
inc
adc
fldenv
or
mov
sbb
and
in
cmp
popf
and
adc
inc
aam
or
lcall
inc
adc
das
movsb
fcoml
clc
add
mov
js
push
push
sbb
add
dec
mov
nop
adc
and
adc
test
arpl
ljmp
fs
sbb
ss
push
es
daa
enter
movsl
sub
stos
inc
add
sub
xchg
es
add
and
and
and
jle
cmp
sub
cmpb
ret
xchg
sub
and
and
inc
sti
and
add
sbbl
je
daa
push
add
sub
add
inc
inc
test
iret
and
stos
sti
and
and
data16
add
dec
and
inc
adc
xor
inc
cmp
inc
subb
add
mov
mov
adc
das
call
inc
and
and
jnp
adc
mov
cltd
push
inc
fstl
push
std
and
inc
test
sub
aaa
dec
lea
add
adc
insb
and
and
sub
mov
and
xchg
inc
cmp
insb
push
notl
lods
and
xchg
sub
test
mov
out
push
adc
inc
jae
adc
adc
das
and
inc
lret
pusha
inc
adc
push
dec
and
adc
fwait
and
das
adc
outsb
adc
out
inc
ss
cmp
push
xchg
xchg
testb
and
and
add
mov
pusha
dec
xorb
pop
es
adc
das
data16
inc
mov
and
outsl
ss
bound
mov
or
adc
int3
and
inc
sub
pop
mov
and
mov
xorb
out
cmp
lcall
pop
mov
push
and
adc
les
adc
add
out
test
jg
lret
cmp
inc
insb
sbb
pop
sbb
adc
call
insb
and
dec
inc
jo
out
js
enter
and
pusha
cmp
adc
into
in
and
jne
ret
fwait
outsl
pop
sub
call
inc
sbb
jmp
inc
fcomps
and
adc
sarl
sub
cmp
roll
or
and
adc
ljmp
adc
inc
adc
mov
shll
xor
adc
xlat
xchg
mov
dec
xlat
and
inc
dec
outsb
mov
adcb
or
int
inc
adc
mov
pusha
or
mov
inc
in
popa
es
mov
and
adc
push
insb
pushf
and
xchg
and
ds
pop
pushf
mov
test
test
jbe
loopne
adc
je
and
cmp
in
dec
push
push
adc
adc
out
and
test
neg
mov
inc
jp
inc
and
adc
sub
adc
add
pop
adc
pop
adc
adc
out
lahf
push
xchg
inc
push
loope
sarb
inc
xor
cmp
mov
in
xor
std
sub
push
ficoml
jle
inc
push
insb
pop
inc
cltd
insb
jge
pushf
sub
jo
inc
sub
jo
sub
jne
cmp
je
mov
inc
cmp
inc
dec
pusha
or
jl
cmp
je
dec
inc
adc
and
mov
adc
push
mov
and
je
in
es
add
xchg
mov
jo
cmp
inc
jnp
push
add
arpl
jl
inc
clc
pop
fs
pusha
pop
icebp
adc
setl
outsb
lods
outsl
test
and
jmp
or
jmp
and
sub
pusha
cmp
inc
jb
cli
adcb
inc
pusha
lds
adc
cmp
adc
test
fs
adc
imul
pop
and
andb
and
and
mov
loopne
adc
scas
rcrb
sub
or
das
out
adc
xor
push
adc
jae
call
lret
push
jle
lods
movsb
dec
adc
scas
mov
sub
push
popa
cmp
dec
shlb
popa
adc
and
jge
adc
sbb
popa
fsubl
jge
mov
inc
sub
inc
iret
and
ds
dec
popa
pop
and
lcall
and
inc
xchg
sub
imul
adc
and
movsb
ret
mov
data16
jl
and
jbe
and
push
icebp
inc
inc
xchg
fcoms
pop
dec
mov
ret
pusha
xor
das
inc
xor
mov
das
xchg
cmpsl
outsl
mov
rclb
add
sarb
adc
xchg
cmp
jo
add
lds
adc
sub
mov
test
scas
inc
pop
jo
inc
xchg
daa
test
pop
sub
add
out
jmp
pusha
jecxz
inc
pusha
inc
and
adc
sbb
lods
in
mov
rcrb
sti
jmp
and
xor
sbb
or
rcrb
dec
aaa
sbbb
jb
mov
stc
cmp
popa
ljmp
adc
mov
and
mov
jg
pusha
adc
sbb
inc
mov
sbb
push
cmp
add
and
imul
and
inc
adc
popf
xor
pop
jmp
mov
cmp
and
adc
mov
lcall
xchg
dec
and
lods
rclb
int3
pusha
pop
and
and
and
jp
xchg
aaa
sub
mov
stc
and
inc
inc
mov
or
jmp
adc
jle
adc
or
and
lea
sub
jae
mov
push
xchg
and
fldl
dec
add
adc
incl
pop
adc
sti
jl
and
inc
jb
mov
or
push
movsl
mov
dec
inc
mov
call
dec
jae
adc
mov
andl
sbb
fcoms
sub
mov
adc
jbe
and
jns
pop
outsb
dec
sub
mov
cltd
inc
xchg
adc
xor
inc
or
jle
sub
cltd
xor
inc
sub
pop
pop
adc
xlat
pop
add
xlat
mov
mov
cmp
inc
or
fstl
and
and
sub
jl
imul
test
mov
ficoms
xchg
inc
and
xor
pop
mov
mov
and
inc
adc
dec
enter
pop
jge
adc
ja
dec
mov
ret
jnp
cld
repnz
fldenv
leave
adc
mov
and
movsb
and
mov
adc
add
push
and
popf
and
lahf
adc
iret
xchg
adc
shll
mov
and
cmp
xor
sub
test
push
and
mov
xchg
xor
mov
daa
xor
inc
and
mov
adc
xchg
push
xchg
in
push
and
jnp
adc
adc
cld
pusha
push
adc
jne
js
cmpl
add
mov
cmp
push
ret
pop
adc
and
jmp
je
fsts
xor
stos
loope
dec
pop
rorb
cmp
out
and
out
and
lcall
jg
adc
and
imul
push
popa
ja
cmp
mov
xchg
adc
scas
loopne
or
lea
and
adc
enter
adc
sub
inc
and
xchg
adc
pop
lods
adc
and
ret
shlb
iret
cwtl
or
jge
adc
sub
out
clc
sub
in
and
mov
insb
mov
and
es
inc
mov
mov
leave
cmp
and
adc
shlb
and
adc
setl
mov
and
loop
mov
sti
and
jns
fsts
xor
and
xor
arpl
adc
pop
lahf
fsts
push
lods
int3
adc
adc
cmp
and
mov
mov
push
pusha
hlt
adc
ret
cmp
lahf
stc
adc
repz
pop
and
and
sbb
fimuls
and
jle
add
jg,pt
and
and
mov
and
cmp
jp
adc
and
and
movsb
xor
dec
pusha
pop
push
pop
sub
pop
pusha
mov
sub
loope
adc
test
jo
les
ret
jle
loopne
adc
jmp
and
dec
mov
cmp
jge
cmpsl
ja
adc
dec
jmp
andb
sub
add
or
xchg
scas
adc
rclb
fisttps
xor
jmp
pop
adc
and
fbld
push
adc
movsl
scas
sbb
pop
jg
test
dec
fs
adc
pushf
add
sub
push
call
inc
sub
and
sub
insl
test
and
notl
inc
push
push
loopne
pusha
and
cmp
and
sbb
mov
dec
xchg
adc
and
xchg
adc
ret
inc
fisubrs
push
faddl
adc
dec
adc
jne
popf
lahf
arpl
adc
cwtl
imul
inc
mov
rorl
push
nop
icebp
jbe
adc
mov
and
adc
adc
andb
and
and
aaa
inc
and
lret
lcall
pop
jne
cmp
sbb
cmp
jne
cmp
je
mov
adc
xlat
pop
xchg
lahf
cwtl
icebp
cwtl
into
inc
or
pop
inc
cli
fs
adc
test
and
dec
sub
shlb
adc
adc
arpl
adc
sahf
and
push
dec
mov
mov
je
inc
fnsave
cld
and
and
jbe
dec
and
and
iret
pop
and
dec
jae
adcb
and
daa
xchg
loopne
and
ret
add
mov
and
test
jl
adc
inc
rcrb
cmp
jne
testb
je
jns
adc
mov
push
and
fsts
and
mov
imul
or
jae
jmp
in
adc
fsubl
adc
or
iret
add
loopne
inc
fadd
dec
bound
loopne
and
sub
adc
mov
xor
inc
repz
add
or
inc
lret
inc
enter
xchg
jp
xorb
adc
and
adc
and
mov
sbb
inc
dec
jne
mov
jns
push
sbb
shll
mov
in
adc
cmp
je
jo
inc
daa
adc
mov
ret
pop
inc
inc
adc
leave
bound
adc
inc
in
js
sub
xchg
adc
sahf
mov
inc
bound
adc
inc
xchg
aaa
or
popa
outsl
sub
pop
adc
pop
filds
add
and
xchg
adc
add
leave
inc
popl
adc
jmp
popl
dec
and
inc
outsb
adc
outsb
and
insb
and
mov
add
mov
and
popa
cmpsb
jne
adc
and
mov
sub
push
iret
adc
into
and
gs
in
daa
das
mov
mov
adc
addr16
and
ja
jo
test
mov
imul
ret
jge
sub
adc
or
pop
loop
and
mov
jmp
dec
add
add
pop
adc
mov
lea
bnd
sarl
aam
adc
or
adc
mov
and
fs
sub
lcall
cmp
mov
jge
ljmp
pop
inc
jg
inc
mov
cmp
dec
pop
fs
int
or
std
jl
icebp
sub
adc
addb
iret
dec
inc
data16
mov
jmp
inc
sbb
mov
lea
inc
ret
xchg
std
adc
mov
mov
jmp
push
jge
adc
pop
popa
add
jle
addr16
adc
push
cltd
sub
add
pop
dec
cmp
xchg
add
mov
adc
je
sub
add
stos
and
sub
and
adc
and
fs
and
in
adc
enter
adc
cmp
je
and
adc
enter
and
adc
xchg
and
jmp
push
inc
mov
pop
dec
sub
add
mov
jg
enter
sbb
jl
lods
lea
je
arpl
pushf
and
mov
mov
mov
push
jmp
adc
or
ror
inc
adc
clc
jg
cmp
adc
add
and
adcb
jle
push
xor
and
sub
add
push
inc
aad
sub
add
fistl
pop
cltd
pusha
clc
test
fldenv
xor
push
adc
neg
and
cwtl
popa
adc
jno
cmpsb
je
push
adc
jne
xor
dec
push
pop
fsubrp
or
jl
adc
cmp
mov
inc
test
jmp
mov
sarb
jnp
popa
push
adc
loop
pusha
insb
dec
mov
shll
adc
data16
pop
adc
push
scas
mov
popa
sub
inc
sub
add
cmpsl
ret
and
and
mov
fs
sub
push
pop
mov
dec
daa
sub
adc
and
add
mov
push
cwtl
push
or
cli
sub
mov
jno
sbb
test
jl
fistpll
adc
sbb
jmp
lds
and
adc
add
adc
inc
adc
xchg
and
lcall
mov
mov
adc
testb
je
jno
and
mov
rolb
xor
dec
mov
adc
cmp
and
pushf
and
adc
and
jno
adc
jl
pop
adc
lds
lea
sbb
adc
call
out
sub
and
ljmp
aam
sbb
call
pop
mov
lock
mov
sub
adc
fldl
adc
jle
push
xchg
and
adc
aam
and
cmp
adc
inc
pop
je
and
aad
mov
mov
mov
bound
and
shrb
call
and
outsb
mov
enter
adc
jmp
sbb
and
mov
out
adc
and
out
cmc
sub
dec
orb
adc
shll
jmp
enter
andb
cmp
jge
xor
lea
outsl
data16
adc
mov
and
adc
cmp
pop
mov
xchg
pop
adc
lahf
pop
adc
cmp
ja
adc
adc
int
add
div
jg
mov
outsb
inc
adc
mov
incl
adc
inc
add
dec
add
ljmp
xchg
sub
and
pop
jle
hlt
pop
test
and
lret
mov
les
je
and
and
or
inc
orb
inc
add
or
xchg
pop
add
mov
dec
pop
mov
lds
and
push
mov
aam
clc
addr16
lret
push
imul
xchg
and
inc
andb
ret
inc
das
and
sub
xchg
mov
xor
push
push
inc
outsl
adc
sub
in
jb
and
ss
and
mov
adc
insb
pop
adc
test
pop
test
and
outsb
adc
push
adc
inc
fs
call
loope
inc
sub
enter
test
jne
ret
fcoml
clc
ds
xor
sbb
and
jno
adc
adc
movsl
and
and
cmp
mov
adc
and
popa
and
daa
adc
inc
inc
and
rcr
out
cmp
push
jne
xorl
jnp
cmpb
mov
pusha
jbe
cmp
inc
xchg
adc
mov
stos
adc
imul
pop
mov
rorb
out
ds
hlt
mov
and
mov
add
inc
frstor
push
mov
mov
gs
adc
mov
inc
or
dec
mov
je
sbb
movsl
adc
adc
movsb
xchg
adc
dec
mov
imul
dec
adc
cs
add
movsb
mov
and
push
adc
dec
insb
test
jne
and
pop
cmp
ds
jge
filds
popa
pop
adc
or
dec
xchg
adc
js
data16
mov
mov
dec
adc
or
add
cli
and
jp
in
xlat
and
push
and
inc
adc
inc
rorb
je
call
daa
sbb
pusha
popa
pop
dec
and
and
jecxz
adc
mov
test
or
push
and
adcb
mov
les
je
xor
mov
push
inc
notb
cmp
addr16
dec
and
and
dec
and
and
inc
popa
ja
push
test
imul
pop
adc
je
subl
int3
inc
adc
and
inc
adc
lret
add
test
adc
push
and
adc
cltd
xlat
lahf
adc
and
cmp
push
jmp
sahf
and
into
and
nop
adc
ret
and
and
jge
and
mov
mov
leave
mov
and
and
mov
adc
pop
rcl
push
push
inc
in
mov
jmp
and
push
loope
and
cmp
cmc
outsl
or
adc
adc
adc
and
and
or
mov
test
test
outsb
adc
aas
and
adc
out
pop
out
arpl
adc
sbb
and
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
cmp
je
pusha
sub
sbb
adc
incl
pusha
sub
or
int
jmp
or
push
stos
popf
adc
and
xchg
xchg
and
inc
imul
and
xor
imul
sub
pop
xor
and
and
testb
inc
fisubs
adc
int
int3
adc
adc
lds
push
xor
ret
call
inc
repz
imul
push
and
sbb
popa
and
xchg
and
movsl
mov
inc
test
fs
adc
jmp
mov
adc
addb
iret
in
adc
dec
dec
popa
int
lret
popa
int
and
push
jecxz
sub
xchg
sub
push
adc
pusha
xchg
adc
outsl
xchg
adc
adc
fcoms
pop
outsb
popa
mov
adc
sbb
xchg
adc
push
jbe
adc
fstpl
in
and
and
pusha
lods
adc
testb
adc
mov
movsb
push
adc
bound
pop
push
adc
andl
and
mov
sbb
or
sub
subb
jo
frstor
stc
and
adc
ja
jo
fs
push
sub
sub
cmp
and
and
imul
xchg
adc
and
push
ja
adc
inc
inc
push
aaa
testl
decl
je
cmp
je
cmp
dec
mov
je
bound
lea
or
sub
pop
and
add
and
sub
jmp
jne
adc
andl
adc
pusha
cmp
es
xor
and
fwait
add
sub
and
mov
xor
lret
jg
adc
inc
adc
sti
adc
and
mov
add
lret
inc
adc
andl
mov
push
adc
and
cmp
je
fildl
adc
push
fwait
adc
jl
mov
pusha
pop
adc
and
xchg
adc
xchg
adc
xchg
adc
sbb
fldl
fcomp
sbbb
je
inc
sbb
pop
cmp
mov
add
frstor
shlb
adc
adc
cmp
and
mulb
and
imul
nop
and
mov
pop
pusha
lret
adc
cmpsl
adc
push
lea
and
and
add
dec
shrb
adc
and
adc
add
popf
unpcklps
jl
jmp
xchg
mov
jecxz
inc
adc
roll
inc
adc
clc
push
add
pop
pusha
adc
sub
and
cmp
ret
cs
inc
adc
or
pop
inc
dec
and
std
add
adc
push
sub
cmp
aaa
movsb
adc
and
xor
call
cltd
inc
sub
add
cmpsb
cmpsl
lcall
inc
inc
mov
inc
icebp
enter
xor
and
mov
and
rcr
lcall
sub
andl
pop
and
jg
and
adc
and
pop
mov
jb
mov
and
test
insb
adc
je
addb
xor
and
pop
adcl
mov
aam
adc
cmp
je
fisubl
inc
insb
pop
adc
mov
and
add
and
cmpsb
push
mov
push
cmp
mov
push
push
push
adc
lods
and
adc
push
push
xchg
insb
adc
cs
push
sbb
pop
jl
repnz
sbb
enter
rolb
add
adc
jae
and
je
pop
imul
add
and
ss
and
dec
jg
jo
dec
fsts
fsubs
lahf
mov
insb
and
dec
inc
and
dec
sub
push
and
insl
and
es
sub
pop
inc
movsb
and
and
call
inc
xor
inc
inc
leave
test
daa
cmpsl
and
es
inc
xor
add
bound
notl
add
jne
int
pop
adc
jne
and
adc
xchg
adc
jne
pusha
or
or
adc
rcll
sub
test
mov
and
out
and
dec
rcrl
sti
sub
adc
xor
adc
pusha
jnp
add
push
jno
adc
inc
pop
adc
jle
or
jne
pusha
jp
and
jp
adc
jp
dec
inc
popa
pop
pop
cmp
sub
adc
jo
or
popa
adc
and
inc
popa
adc
popa
add
cmp
popa
add
fsubs
pop
pop
sub
adc
je
pusha
pop
push
and
jne
mov
and
pop
add
inc
fiaddl
jl
sub
adc
test
and
mov
sti
cli
adc
es
sbb
jno
andw
cmp
int
xor
adc
cmp
cmp
rorl
sbb
icebp
sbb
and
xchg
ja
lret
in
xor
cmp
je
push
mov
sbb
sub
call
and
pop
adc
and
clc
loopne
sub
push
adc
daa
dec
cs
pop
pop
mov
mov
mov
sub
or
fildll
das
push
es
aaa
adc
jbe
and
adc
or
and
sub
lock
je
and
mov
es
adc
jno
adc
repz
adc
inc
bound
inc
and
lret
call
in
adc
mov
negb
mov
aaa
jo
and
and
and
and
popa
daa
and
adc
ja
and
inc
xor
dec
pusha
xor
adc
cmp
sub
add
adc
adc
mov
and
cmp
inc
aaa
adc
fsts
sub
loopne
dec
pop
loopne
subb
add
and
adc
cltd
adc
sub
adc
and
shll
sbbb
push
mov
mov
push
jbe
and
sub
add
add
mov
mov
xlat
das
inc
aad
or
insl
and
xchg
cmp
add
and
cmp
jo
add
or
clc
add
test
add
adc
push
sub
jmp
add
inc
push
and
xchg
and
adc
dec
fmuls
add
adc
jmp
and
sub
sbb
cmp
sbb
push
dec
add
fiadds
inc
add
repz
add
clc
inc
add
std
rolb
lahf
add
pop
and
add
hlt
daa
lahf
add
or
adc
cmp
add
mov
and
es
add
push
push
mov
adc
inc
add
xchg
inc
add
cwtl
inc
add
popf
rolb
lahf
and
in
inc
ja
das
jo
dec
adc
repz
push
sub
adc
sub
and
aam
adc
cltd
pop
js
adc
dec
pop
or
xor
adc
pusha
dec
cmp
jbe
pushl
push
add
push
clc
cltd
lahf
push
test
and
xor
adc
aad
jns
jl
and
adc
shrb
jg
adc
and
and
and
dec
push
mov
sub
sub
inc
adc
sub
cmp
addr16
jl
cmp
jl
inc
into
adc
and
lods
adc
jl
adc
cmp
mov
adc
cmp
fsubs
jecxz
mov
gs
cmc
inc
push
pop
adc
sarb
lock
cmp
push
pop
adc
inc
xchg
and
mov
mov
push
ja
call
sub
adc
adc
xorb
orb
and
lea
jne
das
js
and
xor
jmp
push
mov
sbb
cmp
adc
pop
adc
shll
leave
push
and
call
and
sahf
adc
rolb
adc
std
and
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
pop
and
std
inc
jne
and
mov
int
adc
push
adcb
sbb
adc
adc
test
push
lret
and
jge
adc
pop
adc
lahf
inc
mov
clc
pop
inc
adc
adcb
mov
inc
pop
pushf
jno
adc
inc
test
dec
mov
cmpsb
scas
and
pop
inc
filds
xlat
inc
sbb
xor
mov
jmp
mov
adc
and
mov
and
sub
dec
jo
inc
in
shlb
and
daa
inc
push
adc
daa
rolb
mov
xor
adc
sub
and
iret
adcb
xchg
test
pop
or
add
and
adc
sub
add
jno
and
xor
mov
mov
imul
push
dec
xor
add
fbld
mov
xor
adc
cmpsl
icebp
imul
inc
and
push
push
jmp
mov
pop
mov
push
jmp
mov
aaa
pusha
inc
pusha
sbb
push
push
jmp
and
shl
adc
mov
andb
xchg
iret
and
adc
or
adc
inc
and
and
and
mov
pop
adc
mov
cmp
and
sub
add
xchg
bound
mov
and
mov
push
push
pop
das
and
adc
sub
adc
nop
and
pop
jae
push
mov
xor
test
inc
add
inc
add
insb
inc
add
dec
inc
add
jecxz
add
inc
add
mov
add
sbb
adc
inc
pop
adc
add
gs
add
out
inc
prefetchnta
add
add
add
adc
or
cs
adc
sub
and
sub
or
in
lret
lds
adc
xor
js
cmp
dec
and
aam
push
adc
jp
adc
and
mov
adc
arpl
adc
das
adc
test
je
sbb
adc
adc
or
arpl
cmp
std
daa
pop
cmp
into
addl
jmp
or
fdivrs
add
push
pop
pop
inc
jmp
cmp
push
aas
and
daa
and
pop
insb
out
pop
daa
add
and
and
jne
pusha
sub
and
inc
ljmp
jge
jmp
add
dec
jbe
xchg
push
adc
push
jge
cmp
mov
jge
mov
and
std
daa
mov
and
and
and
mov
andb
ds
adc
sub
push
sub
pop
and
and
daa
outsl
lods
lret
pop
adc
xchg
fbld
jl
adc
fs
adc
in
adc
xor
push
movsb
clc
adc
xchg
adc
rclb
adc
arpl
adc
lea
and
popa
sbb
adc
adc
add
push
push
jmp
cmp
jge
test
jmp
out
cmp
incl
ds
lcall
std
xor
sub
sti
sub
xor
dec
cmpsb
xchg
and
and
pop
pusha
ds
pop
adc
cmc
pop
adc
dec
push
shlb
dec
xor
add
jmp
cmpb
dec
pop
jecxz
adc
mov
and
adc
inc
int3
adc
movl
mov
adc
adc
push
mov
inc
pop
adc
adc
push
sub
sub
orl
call
rolb
jne
adc
and
andl
xchg
inc
xchg
adc
pusha
adc
pop
and
and
dec
and
daa
popa
int3
adc
sub
add
js
adc
push
push
jbe
ret
add
xchg
mov
in
adc
dec
inc
in
movsb
add
mov
lret
and
xchg
test
lcall
inc
movsl
adc
mov
cmpsb
rcrb
rcr
jne
sub
sbb
push
cmp
sbb
nop
inc
mov
sbb
dec
and
and
jno
fiaddl
call
and
adc
and
nop
sub
or
dec
dec
jmp
jl
cmp
jmp
and
adc
test
ljmp
xor
xchg
movsb
dec
adc
and
mov
and
and
xor
pop
loop
je
movsb
and
and
ret
mov
stos
daa
adc
and
and
adc
pop
sub
adc
cmp
je
inc
and
jo
mov
pop
fisttps
sbb
adc
push
push
dec
fimull
push
lahf
and
and
sub
inc
cmp
jno
adc
das
adc
fsubr
push
jp
adc
push
das
mov
insl
inc
mov
daa
ret
add
add
or
jo
adc
popf
and
ror
pop
mov
leave
adc
xchg
sub
add
dec
movsb
loopne
and
xor
mov
leave
adc
or
insb
or
clc
inc
jne
add
sbb
insb
adc
in
cli
and
pop
pusha
xchg
adc
imul
add
ljmp
xchg
enter
adc
adc
xchg
and
and
and
cmp
push
roll
dec
ret
adc
and
adc
arpl
jno
dec
and
xlat
mov
adc
mov
pop
mov
add
cmp
pop
mov
ds
jae
adc
daa
add
fwait
out
or
sti
add
and
in
and
adc
outsl
out
out
es
scas
loope
xor
adc
pop
and
inc
xchg
adc
jb
adc
test
and
pop
and
and
and
mov
aad
inc
jne
shlb
pop
lahf
pop
enter
je
push
adc
adc
push
dec
mov
adc
and
add
dec
push
and
or
mov
outsl
push
adc
xchg
xchg
mov
adc
movl
or
sbb
loopne
outsl
fcoms
fsubs
pop
jne
je
mov
enter
es
or
adc
inc
and
and
test
dec
cmp
pop
dec
test
and
add
movsb
dec
adc
pop
mov
and
sub
and
pop
jecxz
cmp
adc
jmp
aad
popa
ret
and
cmp
pusha
and
lds
rorl
inc
ja
push
and
and
jle
daa
push
push
adc
and
adc
push
leave
and
lods
adc
jle
dec
dec
adc
jne
and
sub
jae
adc
push
jmp
jmp
and
and
imul
sub
adc
and
adc
jl
and
inc
sti
adc
and
bound
inc
jns
mov
or
repnz
and
aam
insb
mov
jmp
test
jle
inc
adcb
jne
cmp
adc
scas
push
sub
dec
adc
or
sbb
or
enter
sarb
cmpb
cmpb
and
mov
movsl
loopne
dec
sahf
adc
sbb
push
daa
jbe
adc
cmp
push
adc
inc
mov
test
popf
push
adc
es
add
incb
and
dec
or
xor
dec
or
adc
leave
adc
and
adc
mov
jge
xor
adc
iret
and
inc
and
call
mov
add
and
or
lock
inc
rclb
push
fs
fistps
movsl
adc
lcall
and
ret
dec
adc
and
in
inc
dec
adc
mov
and
adc
sbb
cmp
dec
bound
and
adc
pop
mov
xchg
loopne
fsubs
adc
sub
je
sub
add
inc
mov
sbbb
adc
adc
and
adc
dec
add
adc
lods
cmp
adc
ficoms
mov
adc
lahf
aas
mov
je
xchg
sub
xchg
jge
push
outsl
cltd
adc
lret
ljmp
ljmp
daa
add
fisubs
out
inc
adc
loop
popa
push
and
xor
sub
sub
or
xlat
aad
mov
jmp
rcrb
cmpsb
add
jnp
and
adc
addr16
adc
push
and
sub
add
mov
js
add
xlat
jle
inc
lods
ret
adc
pop
adc
frstor
scas
and
adc
and
popa
adc
and
adc
sbb
and
js
insl
and
test
test
icebp
inc
jbe
pop
adc
pop
inc
sbb
jbe
and
xor
mov
inc
jb
inc
mov
clc
push
jnp
test
inc
cwtl
adc
cmp
je
and
adc
neg
and
arpl
and
daa
xchg
add
sbb
or
xchg
and
rorb
outsl
sub
add
adc
nop
and
or
mov
mov
aam
ljmp
data16
or
adc
je
and
popf
and
and
push
sbb
push
add
mov
mov
and
gs
adc
cmp
or
iret
and
jmp
adc
rclb
cmp
mov
arpl
and
lds
push
addb
cmp
and
sub
outsl
les
adc
adc
add
pop
pushf
adc
mov
and
fldt
in
sbb
outsb
adc
ror
adc
insl
dec
and
cmp
mov
pop
and
insl
scas
add
popl
xchg
out
dec
xchg
adc
jmpw
int3
jmp
lea
or
xchg
add
and
adc
cli
daa
push
inc
outsl
scas
adc
out
jl
jne
adc
cmp
jge
and
sub
and
andb
jne
fwait
cmp
and
fwait
cmp
and
fwait
cmp
arpl
pop
push
lahf
adc
jge
sub
pusha
ja
sub
lret
add
mov
sub
es
sbb
pop
adc
stos
adc
inc
and
and
cmp
or
aad
out
push
or
loop
adc
inc
adc
inc
test
push
cwtl
jle
jg
shrb
pop
and
dec
pusha
push
adc
jp
mov
and
aad
jge
and
aaa
inc
lods
adc
int3
popa
nop
adc
and
movl
and
pusha
adc
dec
dec
jne
inc
add
fldenv
cmp
cmpsl
adc
aas
mov
and
pusha
adc
cmp
loopne
and
jg
pusha
test
pop
sti
cltd
and
adc
push
or
ss
sub
adc
inc
cmp
imul
sti
and
je
adc
mov
adc
jne
mov
sub
bound
or
and
xor
adc
fadd
add
pop
or
je
arpl
xchg
inc
push
push
adc
test
in
dec
and
gs
adc
and
inc
clc
adc
loope
adc
push
mov
push
push
adc
movsb
dec
adc
xor
xlat
inc
mov
mov
je
shr
inc
or
and
scas
push
adc
jmp
jmp
sbb
adc
inc
and
push
cmp
inc
adc
xor
loop
mov
push
adc
mov
iret
adc
pushf
adc
dec
mov
or
stos
sbb
test
mov
cmp
sbb
cltd
push
mov
mov
xor
sub
sub
cltd
xor
push
mov
sub
mov
inc
and
cmp
pop
dec
mov
sub
adc
and
das
adc
jnp
es
es
pop
sub
add
lahf
jmp
je
lret
push
lret
fimull
adc
and
and
fisubl
int3
push
and
jge
orb
call
inc
and
enter
je
and
xchg
and
push
ficoms
sbb
and
and
in
scas
and
fildll
or
cmc
xor
and
or
pop
jne
and
call
mov
push
orb
dec
inc
adc
call
negb
pop
adc
bound
out
mov
sbb
push
push
cmp
mov
inc
inc
sbb
mov
mov
cmp
inc
or
lock
or
and
aaa
push
and
inc
cmp
cmp
fs
sbb
cmpsl
bound
insb
push
adc
mov
mov
adc
pop
adc
and
pop
adc
insl
dec
enter
and
in
push
and
and
repz
sahf
loopne
adc
das
push
mov
mov
insl
and
nop
adc
jne
inc
rclb
adc
and
in
and
pop
test
and
xchg
add
add
mov
dec
add
insb
sub
inc
dec
adc
daa
sub
adc
pusha
adc
in
pushf
adc
jge
jle
adc
and
and
pop
push
mov
and
adc
and
movups
movups
and
aas
dec
pop
test
mov
mov
adc
and
inc
pusha
and
dec
lcall
push
mov
cmpsb
imul
and
popf
inc
and
and
outsl
adc
jno
out
movsl
movsb
and
jmp
xor
and
push
dec
dec
sub
mov
and
push
push
sub
inc
inc
mov
fdivrs
inc
fcoms
cli
mov
jae
adc
inc
pop
adc
push
push
and
mov
jb
and
sub
hlt
mov
iret
and
adc
std
adc
mov
imul
cltd
mov
int
inc
inc
adc
and
sub
push
cmc
and
shll
xor
test
shl
add
in
adc
hlt
outsl
mov
and
xor
fidivrl
arpl
pop
add
push
inc
adc
push
push
bound
stc
sbb
std
movsb
and
pushf
adc
iret
pusha
jle
push
and
push
lds
rcll
jle
daa
mov
adc
or
js
testl
je
data16
adc
inc
sub
nop
adc
xor
inc
mov
inc
pop
int3
and
inc
push
mulb
idivb
pusha
or
dec
cld
adc
inc
and
inc
and
pop
cmp
mov
sub
add
add
je
jge
push
and
cmp
push
insl
outsb
and
dec
es
adc
sub
pop
and
adc
inc
std
adc
enter
and
imul
rep
and
sub
dec
pop
popa
pop
and
iret
and
outsl
inc
adc
cmp
call
mov
push
mull
adc
push
and
and
add
inc
lret
sbb
cmp
je
cmp
je
and
outsl
hlt
adc
jmp
loopne
jae
adc
and
and
sar
add
jmp
loopne
adc
pusha
dec
dec
ljmp
lret
push
or
sub
imul
sub
push
dec
fldenv
rcll
call
and
lods
add
loopne
adc
and
push
push
push
insb
mov
jo
ret
lahf
adc
and
inc
sub
fwait
icebp
ret
loopne
xchg
and
icebp
imul
add
cmpsl
xor
test
inc
aas
gs
addr16
adc
sbb
enter
in
xor
cmp
and
inc
and
adc
and
lret
test
adc
cmc
and
je
je
mov
mov
jecxz
add
and
jle
and
and
hlt
jge
adc
pop
push
dec
adc
add
mov
adc
adc
add
inc
sub
sub
push
xor
mov
adc
and
xor
push
inc
ret
and
xor
inc
inc
xor
je
cmp
mov
and
cmp
jge
movups
jl
lret
push
adc
push
add
push
stos
and
fs
inc
push
and
and
sbb
add
dec
sbb
xchg
xor
inc
mov
adc
jl
adc
leave
jl
and
adc
int
pop
inc
mov
ja
aas
mov
push
jb
push
and
push
add
popf
adc
adc
filds
adc
pusha
data16
mov
add
inc
cmp
jl
fst
push
dec
add
enter
and
adc
out
bound
and
enter
rolb
and
inc
mov
inc
imul
jne
and
jbe
jle
mov
cli
inc
sahf
lret
push
push
push
and
andl
cltd
popa
mov
xor
mov
adc
mov
stos
pop
adc
jg
inc
adc
data16
bound
adc
push
loopne
adc
andb
bound
iret
rcrb
push
and
pusha
data16
jae
and
pusha
pop
adc
roll
or
into
adc
sub
das
xchg
add
cmpsb
cs
add
fisttps
adc
pop
cs
and
in
adc
push
scas
sbb
and
test
adc
pop
inc
iret
and
jl
adc
outsl
push
inc
pop
and
xchg
lods
xor
and
cmpsl
jl
add
inc
and
leave
pop
je
lea
je
and
pusha
or
inc
and
xor
push
sub
in
dec
and
mov
adc
pop
rclb
pop
jle
arpl
loopne
es
jle
lcall
sub
adc
incl
es
addb
test
sub
jle
andl
add
iret
jle
push
and
xor
mov
sbb
adc
rorb
cmp
jl
mov
ret
mov
iret
fstl
mov
adc
add
jnp
adc
leave
inc
or
jne
mov
and
and
inc
or
sti
mov
or
cli
mov
or
stc
mov
or
clc
mov
or
mull
or
mulb
or
cmc
mov
or
hlt
mov
or
repz
or
repnz
call
rolb
sub
cmpsb
adc
jle
addr16
mov
pop
and
call
add
rclb
sub
cmpsb
and
adc
aaa
pop
mov
add
adc
shlb
addr16
inc
adc
addl
jno
adc
outsb
jne
add
add
adc
or
and
push
call
inc
cmp
jle
lea
push
xchg
mov
int
popa
lahf
push
and
mov
mov
cmpsb
shlb
inc
adc
inc
inc
and
lcall
or
mov
ja
add
cmp
add
js
incl
and
dec
inc
or
and
sub
dec
xchg
adc
mov
push
xchg
and
adc
dec
and
sub
add
pusha
push
insb
ljmp
rolb
xchg
and
filds
es
inc
test
lods
push
push
mov
inc
cmpl
sbbb
adc
and
dec
imul
dec
inc
lea
adc
adc
xor
fs
add
subl
pop
adc
shr
subb
xor
xor
test
and
push
jle
cmpl
je
add
inc
cmp
jl
jmp
mov
adc
mov
jbe
and
adc
cmp
dec
inc
adc
andb
out
inc
jg
imul
lock
inc
add
xchg
adc
or
or
ja
das
test
jne
mov
push
and
rclb
push
and
sbb
push
sar
shl
pop
pop
adc
cmp
xorb
mov
lods
and
adc
push
cmc
ss
sub
sub
sbb
neg
sbb
push
push
and
mov
call
sbb
inc
sbb
inc
adcb
and
adc
cmp
mov
loopne
and
pop
and
or
les
pop
cli
adc
adc
or
adc
idivb
mov
mov
inc
nop
push
shlb
subb
push
dec
jne
cmp
xor
dec
sub
adc
pop
dec
adc
jae
inc
adc
loope
and
inc
fcoml
and
inc
bound
and
es
add
rolb
adc
and
push
xor
jmp
and
push
xor
or
sub
cmp
sub
into
adc
mov
mov
in
or
lea
mov
and
adc
dec
and
mov
jne
mov
mov
sbb
add
xchg
xlat
push
adcb
adc
or
mov
cmp
inc
sub
push
mov
jne
call
jmp
call
mov
xor
adc
pusha
push
sbb
jne
sub
inc
in
and
adcb
pop
add
adc
cmp
iret
mov
ret
and
sub
adc
mov
and
sub
push
adc
mov
mov
loopne
inc
dec
adc
pusha
adcb
fadd
repnz
push
adc
adc
inc
push
and
and
xchg
adc
push
and
mulb
imul
adc
call
or
cmp
push
shll
adc
cmpsl
imul
jne
bound
adc
sub
sbbb
sub
push
pushaw
pusha
adc
pusha
andb
int
or
pushl
lcall
adc
lea
dec
sahf
mov
in
arpl
adc
adc
adc
bound
testb
jno
adc
push
sbb
call
push
mov
rclb
mov
add
lcall
call
and
adc
test
dec
andl
adc
inc
inc
adc
lea
notb
fcomps
add
or
mov
inc
and
dec
inc
es
loopne
or
inc
jge
inc
and
inc
das
inc
sub
jns
inc
daa
adc
and
clc
daa
add
pop
mov
arpl
ret
and
and
and
sub
add
add
subl
cmpsb
jg
insl
xor
adc
nop
mov
mov
xor
adc
repz
and
test
mov
and
inc
and
in
adc
js
pop
adc
mov
dec
mov
jmp
add
mov
add
rep
xor
sbb
inc
push
movl
jne
mov
push
gs
pop
add
nop
inc
imul
adc
jne
mov
inc
cmp
dec
inc
outsl
and
shlb
into
adc
test
dec
add
push
movl
and
adc
lea
push
and
push
and
inc
in
lds
mov
dec
mov
rclb
dec
add
clc
inc
test
adc
or
xchg
pusha
cmp
fsubrs
loopne
adc
cmp
adc
mov
sbb
inc
enter
inc
les
push
mov
jmp
mov
inc
or
and
sbb
mov
mov
mov
inc
adc
out
push
push
gs
adc
sti
in
sarb
inc
and
sub
xor
adc
and
addb
lea
addl
dec
fs
cmp
data16
mov
inc
adc
inc
adc
inc
data16
inc
adc
push
pusha
mov
mov
bound
push
or
cli
and
push
adc
mov
inc
mov
cmp
adc
jne
adc
adc
xor
xchg
int3
adc
mov
or
icebp
inc
sbb
into
and
lds
add
jmp
mov
cmp
rep
and
xchg
sbb
sub
in
ret
xchg
inc
adc
adc
inc
or
lea
adc
test
mov
push
call
call
adc
orl
and
js
adc
mov
adcb
dec
pusha
xor
add
sub
add
mov
add
add
jne
mov
pusha
je
xor
inc
les
push
mov
jne
inc
test
test
and
insb
and
mov
adc
test
aas
adc
dec
inc
imul
push
adc
bound
lock
cmp
and
fcoml
clc
insl
das
es
add
out
arpl
dec
add
call
and
pusha
jb
js
adc
mov
jne
mov
popa
inc
and
and
int3
adc
inc
and
movsb
sbbl
inc
aam
mov
inc
test
sub
and
fildl
or
inc
xchg
inc
inc
and
adc
mov
pop
mov
add
adc
inc
inc
or
mov
adc
pusha
pop
adc
mov
add
push
push
mov
mov
push
outsb
push
mov
addl
and
push
inc
jns
adcb
mov
jmp
adc
push
sub
and
add
add
jae
ret
adc
push
and
adc
and
sbb
fmull
jge
jne
dec
stc
adc
jmp
and
subb
clc
sub
adc
popa
cmp
jne
inc
jecxz
jp
adc
and
cmp
inc
inc
adc
inc
add
aaa
pusha
inc
adc
jle
mov
pop
ret
adc
dec
adc
mov
inc
dec
fs
inc
enter
inc
push
rcl
push
mov
popa
dec
adc
inc
sbb
inc
cmp
je
sbbb
jecxz
push
push
cmpl
inc
je
xchg
popa
hlt
sub
add
cmp
mov
push
mov
enter
push
dec
jg
mov
shlb
rclb
pop
pushf
leave
xchg
mov
rcrb
or
inc
inc
pop
inc
mov
inc
mov
int3
adc
inc
mov
inc
in
sub
and
adc
mov
xchg
xchg
icebp
outsb
mov
dec
pop
xchg
mov
inc
sbb
loope
adc
mov
rolb
mov
scas
push
adc
mov
mov
cmp
xor
mov
and
adc
sub
inc
lcall
xor
movsl
and
test
js
adc
and
lahf
adc
push
mov
add
xchg
adc
mov
filds
adc
pop
xor
and
mov
cmp
mov
add
add
pop
adc
mov
cmp
and
adc
mov
mov
cmp
jge
mov
test
es
adc
add
pushf
mov
push
push
imul
and
pushf
adc
pusha
pop
adc
mov
lods
jns
adc
and
aam
add
inc
inc
inc
sbb
mov
clc
jbe
cmp
xchg
pusha
cmp
mov
je
push
lea
and
inc
dec
adc
adc
pushf
adc
std
sub
call
add
inc
cmp
adc
ret
call
ret
cmpsl
adc
test
outsb
adc
add
cmp
aas
add
jg
inc
and
fwait
cmpb
sti
push
adc
es
or
inc
mov
leave
and
scas
adc
mov
inc
adc
or
dec
or
adc
cmp
push
jge
adc
shl
das
int
adc
popa
dec
and
adc
scas
xlat
and
icebp
shrl
inc
out
push
and
fstl
dec
add
inc
or
inc
cltd
adc
sbb
xor
jae
adc
and
cmp
mov
adcl
pusha
mov
or
das
adc
andb
push
adc
inc
arpl
jmp
xchg
inc
or
adc
adc
movl
dec
call
fs
inc
jge
lods
cltd
adc
sub
and
shll
pop
lret
jb,pn
adc
test
pusha
cmpsl
adc
xor
add
inc
icebp
inc
jnp
stc
imul
add
mov
loope
and
mov
or
pop
cld
adc
mov
subb
adc
test
mov
insb
adc
push
push
dec
popa
push
daa
or
lea
es
add
dec
add
and
iret
repz
jge
sbb
mov
pop
and
sbb
mov
mov
dec
cmp
and
adc
adc
inc
and
daa
adc
inc
adc
inc
or
push
mov
mov
and
pop
dec
adc
je
inc
dec
and
daa
pop
add
add
adc
shlb
or
add
inc
or
push
jl
push
dec
add
inc
bound
adc
enter
ja
or
inc
imul
sub
test
mov
jp
inc
xor
pop
cmp
inc
xor
fwait
pop
jl
dec
cmp
mov
mov
mov
test
xchg
adc
pop
add
test
shll
loopne
push
cmp
arpl
adc
inc
adcl
pop
ficoms
cmp
xor
sub
add
es
aam
push
in
pusha
push
adc
shr
jne
repnz
sub
jne
adc
pusha
push
inc
sub
adc
dec
cmc
adc
dec
inc
sub
inc
rolb
xchg
adc
jg
push
sbb
mov
js
lea
mov
xor
lret
mov
fisttps
dec
adc
adc
dec
adc
mov
inc
jecxz
xchg
aaa
and
lea
in
dec
fs
pop
rolb
and
push
adc
mov
dec
sub
clc
add
and
test
lret
mov
lea
inc
or
pop
jns
push
sub
jmp
xor
add
das
aaa
fisubs
dec
lret
add
xor
rolb
rclb
rclb
cmpsb
add
push
mov
cs
add
pop
add
pop
adc
mov
dec
ljmp
cmp
adc
inc
inc
fwait
adc
jne
lods
ret
adc
mov
lock
lea
add
movl
and
and
and
push
sub
push
adc
push
add
add
ficoms
clc
jl
in
adc
pop
imul
sbb
sbb
adc
mov
push
adc
pushl
incl
adc
and
pop
adc
dec
loope
stc
add
and
push
inc
adc
lods
push
mov
mov
or
cmpsl
je
and
add
add
jne
and
push
cmpb
inc
adc
movsl
adc
fdivrl
pop
scas
sub
or
sbbl
xor
adc
adcb
fadd
adc
pop
in
cmpsl
fiadds
and
mov
dec
adc
dec
and
adc
adc
jp
adc
add
add
mov
xor
sbb
adc
jno
test
and
add
mov
fstl
imul
cmp
or
mov
movsl
aam
dec
or
stc
inc
inc
dec
adc
test
inc
xchg
es
add
pop
pop
andl
fsub
adc
rclb
add
cs
in
rcll
dec
mov
jecxz
mov
sub
and
stos
adc
inc
arpl
adc
mov
and
jge
enter
out
mov
inc
and
mov
adc
sub
add
push
subb
mov
xchg
jmp
adc
sub
push
xor
cmp
je
mov
cmp
mov
je
mov
and
dec
adc
and
jo
pop
ret
push
loop
and
loopne
cmp
sbb
inc
test
and
subb
and
sysret
adc
push
rcll
xor
inc
add
dec
sbb
out
jge
adc
mov
dec
sbb
or
adc
rorb
cmp
ja
jmp
mov
mov
cmp
ja
jb
inc
inc
inc
pop
sbb
and
mov
cmp
jg
jl
adc
and
pop
mov
pusha
sbb
in
adc
mov
sbb
add
xor
sub
pusha
and
sub
or
rorl
xchg
xchg
pop
leave
adc
adc
andb
scas
push
das
adc
andb
and
test
inc
xchg
loopne
dec
sarl
popa
add
fldl
fsub
sub
into
inc
sbb
push
inc
sub
daa
push
add
mov
inc
test
add
test
lret
adc
test
lock
inc
inc
jmp
fldl
fstpl
frstor
mov
adc
or
xor
xlat
inc
inc
push
adc
out
adc
ja
and
flds
adc
bound
jmp
mov
jb
mov
neg
mov
and
inc
adc
leave
push
test
jl
jg
add
add
jne
and
inc
adc
inc
and
popa
mov
push
adcl
dec
xchg
mov
mov
or
pop
pop
pop
jmp
lods
push
dec
add
inc
add
repz
add
and
dec
inc
add
jb
add
fwait
inc
add
mov
inc
add
aas
add
sbbb
aas
add
cli
sub
aas
arpl
adc
inc
pop
arpl
add
testb
and
xchg
adc
jg
or
adc
ficompl
adc
cmpl
jl
inc
and
repz
and
sub
adc
in
dec
adc
and
adc
inc
adc
and
inc
adc
mov
mov
and
jp
adc
sub
sub
add
xor
sub
xchg
adc
pop
aas
sub
add
jae
mov
inc
xchg
adc
push
mov
adc
outsl
mull
mov
lea
add
cmp
and
nop
and
mov
inc
test
mov
repz
arpl
fidivrs
dec
add
roll
sbb
and
les
cmp
jne
cmp
jae
cmp
pop
and
add
popa
jb
cmp
ja
add
pusha
cmp
jmp
dec
dec
and
adc
inc
stos
and
int3
push
addb
inc
or
andl
fcomps
mov
inc
cmp
mov
jb
cmp
ja
cli
mov
adc
xchg
and
push
lea
shl
sub
sbb
adc
or
mov
dec
andl
je
adc
push
inc
mov
inc
jmp
test
je
and
adc
inc
es
call
xchg
adc
je
and
xor
ss
inc
mov
sbb
jae
pop
fcoms
mov
and
dec
adc
dec
push
adc
clc
mov
sbb
jmp
push
pusha
pop
inc
add
jmp
rcrb
push
and
inc
cmp
jne
inc
movups
inc
int
adc
inc
inc
fcoml
xorb
adc
xor
inc
pop
inc
push
adc
and
push
fcoml
aad
fists
inc
adc
nop
and
stos
subb
inc
stos
orb
and
inc
add
jbe
add
dec
daa
pop
add
loopne
adc
pusha
add
out
add
mov
dec
or
roll
inc
or
lea
out
sub
inc
adc
das
or
mov
mov
push
adc
mov
adc
xorb
sbb
pop
or
mov
rclb
or
adc
mov
adc
and
adc
mov
cmpl
ljmp
es
fwait
dec
jb
insb
fs
test
xor
cmpsl
mov
push
test
and
mov
and
insb
adc
pop
xor
and
je
clc
adc
mov
jne
inc
sub
or
insb
and
sbb
pushf
lret
in
jne
mov
outsb
jnp
and
dec
test
and
push
and
sub
adc
mov
sbb
add
push
mov
mov
or
mov
jmp
xor
adc
mov
mov
pop
adc
mov
adc
xchg
pusha
jb
mov
or
adc
andb
sbb
es
mov
shlb
pop
outsl
imul
sub
and
and
rclb
sarl
adc
inc
or
mov
dec
or
enter
mov
adc
mov
cmp
jl
cmp
jne
pusha
add
adc
push
xor
sub
adc
adc
cs
and
adc
and
pusha
push
dec
and
xorl
dec
adcb
jbe
sub
adc
push
into
and
inc
and
je
lds
and
add
adc
pop
inc
pusha
adc
pop
inc
jle
mov
and
cmp
jne
and
adc
rorb
and
adc
xchg
push
mov
inc
mov
sbb
and
cmp
je
xor
sub
add
subb
jmp
and
push
jg
jmp
and
pop
int
ss
scas
mov
daa
and
inc
adc
push
and
xor
pusha
rclb
das
ss
jo
sub
add
adc
adc
push
push
addb
adc
sti
adc
mov
sub
dec
xchg
inc
xchg
and
lea
push
adc
pop
mov
inc
cmp
pusha
sub
push
mov
lea
mov
adc
push
inc
sbb
inc
inc
mov
mov
popf
cmp
cmp
add
add
inc
add
daa
pusha
adc
and
and
inc
pushf
mov
pop
xor
movsl
and
add
aas
add
mov
cmp
add
cmp
and
je
cmp
jnp
adc
dec
or
adc
and
adc
adc
subl
das
add
es
and
movsb
jno
adc
and
jno
in
and
xor
adc
cmp
pop
push
jo
cltd
mov
sbb
xor
cmp
adc
gs
mov
insb
and
gs
or
inc
adc
es
mov
lea
adc
ret
adc
inc
cmp
adc
adc
and
lds
adc
inc
fndisi(8087
adc
jg
and
mov
mov
push
dec
popf
rclb
push
adc
pusha
adc
pop
adc
inc
stos
adc
fnsave
sbb
scas
jmp
add
rcll
adc
push
cmpb
sub
jb
sbb
sub
sub
mov
xchg
clc
adc
lea
inc
mov
dec
adc
jae
and
inc
adc
andl
mov
push
mov
scas
push
adc
mov
jge
sub
lea
mov
inc
and
adc
jb
adc
test
sub
sbb
adc
adc
ret
push
dec
jae
jge
and
daa
and
adc
mov
and
and
daa
jo
and
cmpsb
and
xor
adc
and
dec
cmpl
mov
and
push
and
and
call
lds
and
jnp
adc
add
es
inc
dec
and
movl
mov
sbb
adc
je
test
pop
dec
adc
js
inc
push
push
and
xorb
add
hlt
adc
inc
inc
inc
cmp
dec
adc
pusha
xor
outsb
adc
mov
adc
jp
mov
push
xchg
lock
mov
test
inc
es
lea
shl
sub
add
adc
lret
das
lret
jle
and
adc
movw
into
add
inc
popa
into
adc
into
adcb
mov
sub
dec
or
adc
or
dec
add
outsl
popa
cltd
inc
cwtl
adc
cmp
cmp
jg
imul
jl
adc
xchg
xor
test
and
adc
enter
cmc
imul
ret
adc
out
and
sub
xor
test
jbe
inc
out
adc
sub
push
and
xor
xchg
lock
xor
sbb
and
adc
or
into
dec
mov
js
and
pop
outsl
movups
add
adc
adc
mov
in
mov
adc
and
jmp
cmp
inc
xorb
pop
inc
mov
sbb
cmp
add
or
jl
inc
fcoms
and
and
out
cmp
movsb
mov
and
and
inc
cmp
pop
adc
push
rcll
inc
mov
lea
andb
in
xchg
jne
dec
adc
mov
mov
inc
gs
and
out
inc
and
adc
scas
add
sub
jnp
xor
dec
test
fsubs
xchg
roll
inc
and
lods
and
das
popa
ds
ljmp
push
jne
inc
xor
lods
adc
mov
mov
xor
adc
inc
pusha
adc
popa
or
sbb
dec
shlb
inc
sub
pusha
sub
jae
inc
push
jl
and
jne
das
cmp
pusha
xor
adc
cltd
pusha
outsl
adc
adc
je
dec
xor
mov
inc
adc
out
adc
mov
cmp
je
pop
movsb
adc
and
loope
adc
test
test
mov
cmp
jl
jmp
mov
incl
les
push
test
jp
cmp
jge
mov
cld
adc
dec
out
inc
or
adc
inc
cmpsl
xor
add
movb
cmpsb
inc
jne
mov
jb
adc
jb
push
mov
and
adc
or
and
nop
adc
pop
adc
mov
push
pop
adc
jecxz
adc
dec
and
pusha
pop
and
sub
ljmp
lock
inc
aam
int
mov
dec
adc
in
aas
adc
sbb
mov
fcoms
mov
and
adc
and
aaa
adc
sbb
inc
adc
and
adc
inc
add
xadd
loopne
adc
test
arpl
xchg
adc
push
dec
outsl
pusha
and
lea
loopne
adc
pusha
and
ss
stos
pusha
pusha
dec
xchg
adc
jne
add
push
mov
lcall
push
and
inc
test
add
add
shlb
push
dec
push
adc
pop
adc
and
and
jne
sbb
adc
jmp
add
pop
add
jmp
add
inc
cmp
push
and
dec
and
inc
or
push
and
ss
add
push
add
jecxz
adc
pop
jb
sub
push
js
cmc
and
dec
daa
sar
mov
push
push
test
push
mov
add
sbb
imul
or
lock
adc
xchg
imul
xor
adc
xchg
mov
lock
xchg
push
popa
sub
and
sti
add
pop
adc
push
arpl
sub
inc
jae
out
mov
push
pop
adc
push
stc
adc
repz
pop
mov
xor
and
xor
and
mov
bound
or
adc
or
imul
jmp
add
sub
aas
add
mov
icebp
mov
dec
and
mov
pop
push
sub
and
adc
movsb
jno
inc
adc
push
dec
or
int
lea
rcll
int
add
adc
and
adc
ret
and
adc
sti
orb
adc
dec
add
adc
xchg
jo
and
push
adc
inc
push
mov
sub
js
inc
pop
adc
dec
cmp
shll
addl
out
or
xor
adc
imul
mov
mov
and
and
arpl
mov
movsl
xchg
mov
adc
mov
and
pop
push
and
pop
mov
mov
and
and
jl
js
pusha
pop
sbb
jl
jl
adc
popa
stc
cs
icebp
mov
and
ss
jp
cmp
mov
adc
adc
inc
or
sub
adc
jbe
pop
mov
dec
and
pop
adc
mov
mov
inc
adc
adc
and
leave
jp
mov
adc
jle
sub
dec
adc
mov
inc
and
inc
adc
dec
add
es
add
push
and
popf
es
add
lret
and
sub
call
and
cmp
mov
dec
adc
push
inc
adc
push
or
and
pusha
inc
pop
xchg
mov
cmp
fwait
test
sbb
mov
movswl
dec
push
shlb
pop
adc
inc
adc
fmul
fs
adc
pop
and
shrb
dec
bound
adc
xchg
in
leave
inc
pop
adc
mov
inc
andb
mov
and
adc
xchg
shl
adc
sbbl
addr16
insb
adc
cmp
sub
sti
jg
dec
dec
jmp
and
sub
imul
movsb
push
adc
out
and
sahf
adc
das
smsw
adc
sti
aas
in
add
inc
and
add
push
push
shll
ja
loope
adc
dec
adc
push
movsb
dec
adc
insl
dec
lea
cwtl
adc
inc
dec
xchg
stos
in
and
test
fildll
loopne
push
mov
sbb
adc
mov
test
inc
iret
and
lods
dec
es
cltd
out
ret
adc
out
xchg
cmp
xor
adc
xchg
sub
add
inc
adc
pusha
daa
and
sub
mov
mov
add
push
popa
push
adc
scas
mov
and
push
rclb
xchg
adc
jmp
cmp
jge
inc
ss
add
ds
adc
movswl
cmp
jge
adc
add
or
xor
push
add
xchg
push
cmp
loop
jnp
adc
inc
shr
lock
adc
dec
adc
sub
in
adc
add
iret
pop
inc
xchg
outsb
cli
dec
inc
arpl
dec
or
ret
adc
dec
adc
popa
lods
in
xchg
pusha
test
xchg
jle
push
outsb
inc
mov
test
pop
and
cmp
test
and
cmp
cmp
mov
stos
sub
push
jae
inc
out
and
inc
push
and
aad
sub
add
add
adc
mov
add
inc
cmp
xchg
mov
mov
lea
sub
cmpl
and
ss
iret
aad
dec
xchg
adcb
pop
xor
mov
inc
xlat
adc
mov
loop
adc
ret
outsl
scas
adc
subl
xor
and
and
jns
adc
dec
daa
jb
adc
sub
jne
data16
das
adc
dec
subb
xchg
dec
and
sti
adc
sub
push
scas
push
inc
insl
adc
frstor
lahf
arpl
and
jle
sub
add
in
int3
enter
hlt
sbb
mov
dec
mov
movswl
and
xchg
mov
incl
push
movsb
fsubs
stc
add
jge
roll
and
arpl
inc
mov
mov
or
shlb
adc
outsb
adc
nop
dec
and
andl
mov
mov
loop
inc
fistl
jne
or
push
add
adc
or
rorl
mov
xchg
add
and
and
adc
inc
adc
popa
lret
inc
dec
adc
scas
inc
inc
adc
out
mov
inc
mov
xchg
data16
rclb
dec
or
icebp
inc
xchg
sbb
into
lea
sub
or
and
inc
arpl
inc
aas
push
xchg
and
cmpl
rclb
dec
inc
loopne
adc
clc
test
and
arpl
mov
mov
sbb
fldl
es
add
adc
iret
es
add
dec
or
mov
out
lahf
and
cltd
adc
fbld
pop
fisubs
aas
inc
adc
hlt
mov
adc
and
jle
xor
orb
jo
or
mov
pusha
cmp
pusha
sbb
jb
mov
push
adc
dec
cmp
ss
adc
sub
lahf
and
cmp
sub
daa
mov
xor
add
jle
ret
mov
adc
ret
and
scas
push
and
xor
outsb
lret
loopne
xor
push
adc
or
adc
scas
and
dec
adc
xchg
adc
dec
and
ja
adc
test
enter
inc
adc
and
ret
jge
and
and
gs
sub
inc
add
stc
jg
add
into
daa
pop
adc
pop
es
adc
jne
std
cmp
iret
cmp
and
adc
jmp
dec
arpl
jne
mov
jmp
cmp
je
mov
and
adc
xchg
popl
and
add
icebp
adc
or
out
lods
popa
xor
int3
out
popa
cmp
adc
sub
sahf
sub
pusha
adc
pusha
sub
and
and
adc
stos
arpl
dec
mov
inc
sub
repz
and
mov
fisttps
and
adc
fisubl
lcall
or
int
mov
bound
dec
cmp
and
je
outsb
jl
repz
push
adc
adc
and
adc
lock
adc
mov
rcll
jl
cltd
xorl
mov
adc
ds
or
sahf
filds
adc
mov
dec
adc
and
pop
or
pop
pop
and
add
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
inc
and
movl
mov
and
xor
cmp
insb
inc
mov
xchg
cmp
adc
inc
mov
jae
lea
and
mov
pushf
dec
adc
inc
mov
inc
and
lods
sub
add
pop
rclb
dec
sub
add
and
lea
sub
add
push
cmpb
adc
xor
push
adc
push
mov
movsb
add
out
add
lahf
dec
and
into
and
and
xor
or
add
adc
mov
adc
mov
loopne
and
sbb
xor
cmpsl
decl
call
je
push
sub
push
adc
fisttpll
outsl
and
pop
and
push
inc
cmp
adc
jne
sbb
jle
add
mov
xor
imul
ret
adc
insl
and
inc
inc
xchg
sub
add
lcall
adc
pop
and
cmp
and
cmp
jg
inc
cmp
pop
in
scas
adc
ja
je
mov
fsubrs
roll
pop
pusha
roll
sarl
jns
and
insb
mov
mov
mov
and
sbb
movsl
dec
add
inc
sbb
and
push
inc
ja
sbb
push
aad
and
push
pusha
mov
fs
or
xorb
je
and
and
adc
mov
iret
adc
sub
pcmpeqd
dec
test
cmp
std
test
inc
js
dec
pusha
in
adc
xor
push
and
shl
je
sbb
adc
sub
sub
and
data16
dec
adc
and
add
adc
mov
adc
aaa
shll
dec
inc
iret
popa
test
jae
adc
and
and
and
xchg
mov
je
ret
and
adc
cmp
inc
push
push
push
push
push
and
adcl
adc
jbe
adc
push
inc
cwtl
and
adc
adc
xor
and
call
and
inc
and
jo
aad
orb
adc
test
adc
adc
adc
inc
adc
adc
push
pusha
movb
and
and
adc
mov
std
adc
push
mov
std
pop
cmpb
sahf
and
cmp
or
adc
testb
and
and
movsl
icebp
sub
push
mov
and
and
repz
mov
dec
je
dec
jne
lea
and
jmp
lea
and
add
lock
adc
sti
and
adc
inc
and
adc
adc
adc
pop
pop
ret
inc
mov
add
cmp
adc
inc
fs
inc
push
es
bound
iret
pop
sub
xor
add
adc
sub
inc
and
and
xchg
pop
jmp
movl
and
lea
and
dec
adc
pop
lea
mov
mov
push
inc
sbb
and
movl
call
cmpsl
call
adc
xor
push
and
inc
dec
imul
push
inc
inc
inc
or
and
cmpsb
das
adc
adc
popa
ss
lea
arpl
and
pusha
es
and
ret
sub
xor
adc
cs
add
push
and
adc
adc
mov
clc
test
and
sub
inc
pusha
push
and
xor
mov
stos
xor
lldt
ret
fisubs
aas
add
outsl
xor
push
jmp
adc
sub
adc
push
adc
js
sub
mov
push
push
push
dec
adc
loopne
adc
adc
in
inc
adc
push
mov
jg
fdivs
adc
and
mov
push
push
push
call
cs
and
add
adc
and
mov
mov
adc
mov
rclb
or
xor
adc
pop
adc
xor
and
dec
and
push
clc
stos
loopne
int
sub
out
movsb
adcl
fsubl
lar
push
gs
outsl
adc
inc
or
push
adc
adc
push
sbb
adc
mov
jo
pop
and
cmp
mov
adc
and
and
push
adc
mov
push
push
mov
adc
push
sbb
xchg
inc
in
add
and
adc
mov
popa
mov
push
shrl
and
adc
popa
push
adc
adc
inc
loopne
aas
adc
arpl
outsb
sti
adc
and
adc
and
jb
adc
and
and
inc
xchg
movsl
mov
inc
add
scas
andl
cwtl
and
and
sub
cs
adc
push
add
aad
sub
adc
test
xchg
je
adc
and
and
data16
and
andl
jae
inc
sub
mov
loopne
adc
lds
and
and
sarb
call
in
sub
shl
or
add
shl
stc
hlt
inc
mov
push
data16
mov
adc
push
mov
push
dec
movsl
adc
inc
add
adc
neg
neg
and
jnp
movsb
js
inc
push
mov
xchg
ret
test
and
adc
call
dec
or
inc
inc
cmp
add
jb
inc
jne
mov
and
push
push
and
mov
and
popf
and
and
fistps
dec
out
inc
mov
lds
inc
jb
cmpl
jne
lea
lock
pop
and
adc
and
pop
adc
iret
push
and
inc
and
jp
push
adc
push
and
adc
in
je
mov
cs
adc
add
xlat
push
adc
push
test
adc
push
and
push
lea
push
mov
push
and
jp
push
scas
jbe
sub
jmp
dec
mov
and
adc
sbb
adc
mov
sub
adc
push
and
dec
mov
inc
and
jp
jmp
push
es
add
jl
call
rolb
cmp
and
adc
stc
add
inc
sub
inc
push
xchg
jo
sbb
mov
sbb
jns
add
mov
ret
mov
loopne
and
push
nop
and
scas
fbld
push
inc
mulb
dec
mov
mov
inc
mov
adc
adc
and
push
test
adc
sub
add
dec
aas
das
add
push
xor
adc
call
inc
and
or
sub
sbb
lea
cmp
jle
push
call
and
adc
inc
sbb
dec
lods
add
jp
pusha
or
jmp
movsl
imul
cmp
mov
ret
adc
gs
adc
je
push
call
inc
mov
imul
and
inc
loope
aas
jle
arpl
cmpsb
adc
pop
and
fs
inc
adc
aad
jge
adc
enter
lret
add
push
sub
push
add
push
dec
push
and
mov
sub
out
ffreep
push
push
jmp
and
out
in
loopne
mov
aaa
dec
inc
inc
aaa
dec
iret
adc
jo
sub
xlat
data16
rcr
dec
add
iret
je
imul
mov
je
dec
and
push
adc
jg
push
inc
pop
pusha
adc
jl
dec
xchg
adc
dec
add
jne
into
mov
push
push
gs
fsubl
adc
inc
sub
out
and
xchg
adc
dec
fistl
or
fistl
ja
mov
and
pop
adc
and
insl
dec
adc
inc
sbb
or
cltd
pusha
pop
adc
push
jno
adc
sub
add
adc
and
std
and
or
adc
and
fsubl
push
jmp
jo
movsl
fwait
and
ret
inc
sbb
repz
mov
adc
adc
and
sub
or
add
and
adc
dec
test
push
and
cli
adc
adc
push
and
and
jns
daa
je
and
inc
ss
fldenv
cli
cli
inc
and
add
mov
inc
test
cmp
and
adc
pop
mov
and
adc
and
cs
lock
push
add
jne
mov
mov
or
mov
adc
push
inc
inc
or
std
iret
push
bound
adc
ljmp
adc
cmp
je
and
adc
push
push
cmpb
ss
outsl
insb
cmpsb
adc
push
dec
adc
jle
mov
je
and
fists
pop
pop
mov
mov
loopne
adc
lods
es
out
xchg
or
inc
daa
rolb
ss
and
loope
scas
sbb
cmpl
jne
mov
xor
inc
ja
rorl
adc
inc
cmp
pop
ret
inc
sbb
daa
sbb
adc
rcrb
xor
sub
pop
bound
inc
adc
and
adc
inc
xor
and
mov
cmp
in
push
pop
sbb
mov
push
dec
lea
adc
adc
xchg
addr16
mov
mov
xchg
push
push
adc
adc
inc
int3
adc
mov
mov
incl
and
fs
and
aas
inc
inc
adc
xor
jns
and
and
adc
adc
sub
hlt
aas
mov
add
adc
rol
and
cmpl
inc
push
mov
mov
mov
mov
andl
and
adcb
andl
andl
pop
adc
inc
je
andl
and
adc
subl
loop
and
and
or
and
adc
adc
mov
filds
and
adc
jns
jae
adc
jb
and
and
popa
js
mov
pusha
mov
pusha
inc
mov
arpl
cmp
and
dec
dec
outsl
inc
push
and
xor
adc
and
imul
jne
adc
sti
and
sub
and
and
adc
and
jne
loop
adc
jo
adc
mov
mov
pop
rcll
mov
and
roll
subb
adc
lret
and
adc
and
inc
and
fldenv
cs
and
dec
andb
mov
sbb
cmp
jle
inc
or
fdiv
inc
add
and
and
ss
pop
dec
sub
adcb
fxch
and
subb
mov
fildl
and
pop
adc
fadds
adc
sub
and
pop
and
sbb
cli
mov
add
mov
mov
and
adc
sub
pop
inc
sbb
sar
add
dec
mov
test
sbb
and
inc
stos
push
adc
mov
adc
adc
and
stos
adc
mov
shlb
pop
pop
adc
inc
cmc
sub
and
in
push
cmp
push
mov
jne
dec
stos
adc
pop
pop
xchg
inc
sti
adc
cmpsl
adc
and
bound
add
adc
int
shlb
xchg
adc
lds
cmp
jne
mov
mov
dec
mov
pushf
adc
pop
and
cs
or
push
orl
push
adc
mov
pop
cmp
cmp
test
xor
sahf
adc
xchg
cmpsb
adc
inc
adc
test
pop
popf
adc
mov
lds
or
jne
mov
ljmp
add
xor
adc
sarb
pop
and
and
and
repz
and
rclb
sbb
mov
push
push
push
mov
sbb
arpl
outsb
je
lock
sub
mov
adc
adc
es
and
push
and
cltd
adc
pusha
adc
jo
test
mov
cmpsl
adcb
mov
jg
add
movsl
and
pop
adc
cmpsb
mov
adc
mov
pusha
add
aam
sub
jns
iret
or
push
cmpl
push
and
mov
push
mov
mov
repnz
je
mov
test
pusha
add
mov
shll
mov
adc
pop
inc
and
test
add
xchg
sub
add
mov
adc
movl
orb
rolb
rorb
jne
ret
and
addr16
adc
adc
bound
aas
add
aam
adc
in
out
popa
mov
addl
push
scas
and
add
push
pop
and
pop
mov
loopne
adc
mov
xchg
and
mov
dec
out
xchg
inc
adc
sub
subb
call
and
or
and
jne
int
xchg
xor
mov
mov
adc
aas
pop
inc
adc
adc
inc
hlt
adc
and
adc
aad
mov
pop
cmpsb
xor
rcll
push
mov
adc
xchg
adc
xchg
pop
push
adc
add
and
mov
adc
pusha
mov
ret
mov
cmp
std
xchg
clc
or
popf
and
sub
push
inc
lods
adc
mov
xchg
roll
iret
push
inc
adc
and
insl
and
xor
sahf
pushf
cmpsl
cli
and
mov
ret
mov
je
adc
pusha
js
stc
pusha
js
dec
pop
mov
es
add
push
pusha
sub
and
popa
adc
inc
mov
in
adc
and
jno
xchg
sub
push
inc
pop
xorb
xchg
imul
push
adc
aam
jp
adc
pusha
fsubs
sti
data16
adc
push
inc
adc
scas
nop
adc
pusha
pop
arpl
jbe
xor
mov
mov
inc
push
addb
adc
adc
pusha
shll
and
jae
or
mov
adc
sub
adc
add
movsb
xor
sub
inc
pop
rorl
pop
das
mov
adc
inc
mov
and
adc
mov
sbb
adc
inc
pop
movsb
xchg
outsb
rorb
jmp
dec
sub
add
fs
inc
xchg
inc
insb
jns
subb
adc
bound
push
mov
and
and
adc
movsl
jp
shlb
in
cmp
push
sub
xchg
andb
pusha
and
insb
sub
jecxz
lret
sub
adc
iret
and
mov
pusha
adc
inc
inc
loop
les
adc
or
cltd
xchg
popa
mov
out
ret
mov
xchg
adc
pop
shlb
adc
and
mov
push
mov
adc
xor
xor
dec
sub
cmp
jbe
push
mov
adc
ret
mov
scas
shlb
jne
xlat
add
test
and
and
adc
sbb
mov
mov
pop
cmpb
xchg
and
jae
cmp
adc
scas
pop
and
pop
dec
mov
subl
xchg
cmp
nop
or
andl
adc
fs
adc
or
mov
cmp
mov
decb
adc
mov
jnp
jle
push
ss
jne
add
addb
test
jmp
push
cmpb
jne
sbb
inc
add
aaa
je
cmp
jne
cmpb
jne
xor
xor
mov
xor
mov
and
in
mov
pop
mov
mov
mov
test
je
and
lret
shl
mov
add
add
xchg
mov
sub
lea
lea
cmp
jg
es
sarb
std
ss
jne
and
and
and
pop
pusha
negb
lea
lea
jmp
add
mov
inc
sub
lea
push
mov
and
orl
outsl
inc
dec
adc
hlt
and
out
rclb
xor
ret
add
cmp
mov
js
dec
jp
xchg
adc
mov
adc
addl
inc
arpl
mov
xor
cmp
mov
popf
rolb
addl
pop
push
loope
adc
sbbb
xchg
pusha
sahf
negl
incl
pusha
sub
inc
or
ret
and
and
push
xor
push
push
cmp
push
je
adc
adc
adc
mov
mov
sbb
adc
cli
mov
cmp
xchg
xor
rorb
add
and
adc
push
adc
sub
adc
sub
cmp
xchg
fisubs
adc
adc
push
adc
and
mov
and
mov
adc
inc
mov
sbbb
mov
mov
loopne
inc
mov
movb
popa
mov
push
lds
mov
push
push
je
and
cwtl
dec
addr16
and
and
push
add
cli
inc
add
mov
xlat
cmp
mov
sbb
adc
rorl
roll
add
sub
arpl
and
lods
add
add
mov
add
jmp
add
add
xor
adc
xchg
add
pop
add
jg
and
mov
pusha
pop
adc
inc
mov
mov
adc
jg
jmp
mov
scas
movsb
subb
mov
and
mov
sbb
clc
push
xchg
and
pop
sbb
add
fs
add
popa
faddl
adc
add
add
adc
or
adc
sub
add
add
inc
inc
adc
add
mov
inc
dec
orb
pop
xor
add
add
adc
add
scas
adc
and
jno
mov
popa
sahf
adc
add
data16
rclb
mov
mov
xor
leave
mov
loopne
adc
mov
inc
adc
dec
mov
or
mov
lea
inc
pop
sbb
mov
mov
mov
or
adc
scas
rorl
sub
adc
mov
mov
xchg
addl
push
and
inc
sub
adc
add
stc
inc
adc
pop
lahf
adc
adc
pop
add
sbb
xrelease
jp
adc
dec
mov
neg
mov
push
or
inc
pop
mov
push
or
mov
mov
mov
mov
mov
mov
mov
inc
inc
and
dec
inc
dec
mov
cmp
sub
adc
adc
popa
sub
mov
mov
mov
shl
or
mov
xchg
and
imul
cmp
mov
xchg
cmpb
rolb
mov
mov
lret
or
mov
mov
mov
mov
mov
mov
dec
mov
incl
jne
jmp
mov
mov
lret
je
mov
leave
lea
add
xor
add
addr16
sbb
cmp
jle
mov
inc
mov
pusha
mov
adc
mov
pusha
push
adc
adc
jl
mov
and
dec
adc
xchg
adc
dec
inc
jne
push
dec
inc
mov
pop
sbb
mov
and
adc
bound
adc
sbb
adc
inc
and
and
inc
inc
inc
aaa
adc
daa
adc
mov
and
sbbb
mov
mov
shl
mov
and
and
inc
and
mov
and
mov
outsl
mov
jle
mov
xor
cmp
inc
cmp
mov
jb
mov
sahf
test
adc
movl
push
push
inc
sub
dec
add
mov
cmp
jle
sub
dec
or
mov
adc
jmp
pop
add
pop
dec
dec
mov
adc
inc
jb
inc
mov
mov
inc
pusha
adc
inc
lcall
ja
inc
mov
mov
sub
pusha
rclb
mov
mov
and
fadds
adc
enter
inc
sbb
shr
add
mov
sub
add
je
inc
loopne
in
enter
sub
js
add
cmp
jb
mov
in
adc
movsb
adc
add
cmc
sub
add
adc
lret
adc
dec
mov
test
jne
dec
dec
mov
pop
xor
add
sub
mov
dec
sub
mov
sub
mov
inc
stos
push
xor
add
lea
inc
aam
lret
xor
adc
inc
out
jns
and
pop
add
dec
inc
or
test
sbb
adc
and
adc
bound
adcb
sub
sbb
cli
and
ljmp
or
push
inc
cs
jbe
xchg
mov
jb
mov
adc
inc
xor
adc
add
int
or
lret
adc
adc
ss
adc
inc
es
mov
sbb
andb
inc
inc
inc
das
adc
xor
push
mov
sub
cmp
or
push
dec
sub
mov
shl
ret
sbb
xor
adc
roll
adc
bound
adc
fiaddl
adc
ljmp
jmp
mov
push
into
add
call
mull
cmp
xchg
sbb
jle
shl
insb
mov
xchg
sbb
rorl
lret
mov
sbb
call
adc
popa
adc
roll
inc
sub
adc
and
ds
inc
cmp
inc
js
int
adc
push
xchg
adc
movl
push
and
rorb
add
cmp
or
add
inc
inc
adc
lea
mov
cli
mov
mov
repnz
js
scas
inc
push
ret
add
inc
push
dec
ss
cmp
push
mov
shrb
mov
inc
or
adc
inc
pushf
adc
and
imul
sti
dec
dec
addb
inc
add
and
bound
xor
mov
and
inc
inc
xchg
xor
lea
lea
data16
adc
mov
adc
fmuls
subl
loopne
adc
lret
addl
and
test
inc
mov
add
adc
loope
adc
loope
adc
loope
adc
loope
inc
ljmp
push
inc
sub
add
dec
insb
mov
int
and
xchg
cmp
iret
mov
inc
fs
incl
and
mov
push
mov
incl
inc
cld
adc
adc
inc
mov
xchg
adc
lret
mov
add
and
dec
icebp
push
mov
lea
lds
push
pop
inc
pop
adc
inc
ret
add
pop
add
adc
pusha
ret
inc
mov
adc
rol
adc
ret
loop
add
ret
add
loopne
adc
inc
add
adc
jl
test
adc
lea
inc
or
mov
and
mov
sub
add
dec
adc
adc
xchg
es
push
adc
inc
pop
xchg
in
inc
cmp
fadds
adc
pop
mov
xor
les
dec
dec
orb
ret
and
adc
adc
orl
adc
push
add
mov
jne
add
bound
mov
adc
push
pop
jl
sub
add
jmp
cmpb
push
and
and
popa
lock
dec
add
sbb
orb
sbbl
mov
xor
and
inc
pop
inc
and
inc
mov
je
cmp
jne
or
fs
fwait
bound
add
sbb
add
pop
adc
inc
add
pop
add
push
add
sbb
push
adc
dec
icebp
inc
out
test
adc
adc
adc
je
inc
cld
sub
add
xchg
add
push
add
mov
mov
add
jbe
mov
add
push
pop
imul
and
jp
adc
sbb
xchg
sub
and
sbb
shll
daa
mov
outsb
adc
mov
mov
add
into
adc
and
push
push
push
movsl
adc
stos
loopne
inc
inc
push
push
scas
adcb
in
sub
adc
loopne
sub
adc
and
sahf
sub
std
and
adc
shrl
sub
orl
lret
adc
fwait
ds
add
and
je
and
push
adc
and
sahf
adc
jne
inc
or
jne
repz
adc
adc
es
mov
cmp
push
and
mov
andb
lea
and
lods
fcompp
adc
test
cs
xor
mov
pop
jb
adc
roll
and
or
inc
negb
dec
mov
jno
and
and
sub
adc
push
pusha
cmpb
arpl
or
enter
lahf
push
into
xchg
das
and
and
pushf
das
shll
adc
and
xchg
adc
fidivrl
dec
or
add
adc
mov
xor
add
cli
adc
jne
dec
and
pusha
and
xlat
fwait
and
and
sarb
and
mov
dec
jecxz
jl
das
adc
and
adc
pop
or
push
and
cs
mov
shl
add
test
jle
dec
or
jno
mov
add
add
dec
jne
pop
mov
daa
iret
push
popa
dec
jp
rolb
inc
push
sub
adc
adc
and
jo
ds
popa
pop
adc
sti
jno
fcoms
or
dec
and
adc
adc
scas
in
sbb
mov
add
pop
lds
dec
inc
adc
push
hlt
adc
ret
jne
inc
bound
xlat
and
jno
sbb
inc
data16
push
dec
movsb
adc
sub
into
xor
cmc
mov
xor
repnz
adc
adc
xor
sbbl
mov
enter
cmp
jae
mov
and
push
inc
adc
pop
sahf
pop
call
inc
jmp
addb
adc
js
mov
lcall
inc
adc
inc
inc
pop
push
push
call
inc
jmp
movsb
cmp
test
lret
pop
pusha
stos
sub
add
push
push
shlb
adc
add
insl
insb
sub
movsl
adc
push
pusha
pop
adc
daa
xchg
add
adc
bound
clc
and
inc
adc
mov
inc
sbb
sub
and
and
adc
sub
inc
js
mov
adc
test
vmovshdup
out
push
and
adc
pusha
push
and
out
and
jg
addr16
xor
xor
xor
lea
push
fcoms
mov
push
push
push
and
es
add
jne
test
lea
jne
jmp
inc
and
shlb
daa
sbb
adc
and
dec
adc
rcrl
and
iret
sub
cmp
jb
test
je
inc
aad
cmp
dec
nop
mov
push
and
cmp
std
lret
and
mov
call
and
adc
and
int
adc
shrl
cmp
add
adc
sbb
lds
in
adc
and
sub
inc
and
repz
pusha
push
and
jne
mov
inc
or
adc
adc
inc
adc
adc
add
add
pusha
adc
mov
sbb
movl
adc
inc
adc
adcb
shll
lods
adc
sub
adc
add
and
and
push
and
loop
lea
push
push
push
push
push
pusha
inc
mov
mov
sub
mov
rorb
cmp
jae
orb
je
mov
sub
inc
dec
dec
dec
adc
rorb
jmp
and
dec
andl
nop
adc
ret
add
cmp
sbb
add
rorb
jmp
cmp
push
call
je
and
adc
scas
and
sbb
or
jne
and
movsb
mov
sbb
divl
shrb
loopne
adc
jne
mov
push
push
mov
adc
movsl
pop
sub
lea
sbbb
mov
pop
jg
inc
test
sub
js
fstpt
fsts
into
mov
lea
xorb
push
and
adc
dec
pusha
pushf
xchg
adc
xor
shlb
adc
xchg
adc
cmp
je
popa
rcll
adc
dec
imul
jmp
push
inc
mov
subb
dec
rolb
sbb
lock
sub
sub
cmp
into
call
inc
add
adc
idivl
lock
add
and
sub
inc
and
shlb
adc
adc
arpl
sub
sub
or
xor
sbb
inc
sub
sub
adc
call
sub
or
push
inc
xor
sub
adc
aam
jge
pop
arpl
xchg
xor
sbb
idivb
mov
mov
shl
add
testb
je
mov
push
push
and
cltd
or
adc
or
cmp
pop
mov
add
sarb
jge
push
lods
push
roll
testl
lret
inc
pop
mov
mov
add
inc
dec
push
push
mov
call
dec
pusha
push
inc
repnz
and
sub
jne
push
rorb
mov
rcll
inc
adc
arpl
push
inc
cltd
idiv
mov
popa
int3
adc
and
mov
dec
and
int3
adc
sub
adc
movl
push
push
lea
pusha
push
addb
add
push
adc
pusha
xchg
adc
adc
adc
inc
notl
lea
mov
and
pop
adc
and
sarb
sbb
cmp
jl
jmp
mov
add
testb
pusha
and
and
adc
sub
add
adc
sub
sub
inc
nop
add
cmp
jae
cmp
je
inc
jmp
mov
pop
into
lea
cmp
je
inc
scas
adc
mov
and
mov
cld
addl
mov
and
mov
and
pop
clc
pop
mov
mov
push
adc
dec
sub
je
push
push
sub
call
lea
pushf
adcb
inc
sbb
push
sub
adc
push
cmp
and
jae
adc
jle
sub
adc
push
dec
out
loope
adc
pop
inc
jle
or
in
jp
bound
pop
and
dec
push
and
adc
inc
mov
add
xor
out
lret
pop
and
nop
and
shlb
movsb
and
xor
xor
adc
add
jne
and
or
nop
jecxz
mov
xor
push
and
sub
fdivl
mov
test
adc
adc
and
or
mov
mov
adc
adc
inc
inc
add
xchg
fwait
aad
adc
adc
adc
movl
ljmp
mov
adc
repz
lea
adc
popa
xchg
adc
push
and
lea
xchg
pusha
sbb
loope
adc
imul
adc
sbb
and
adc
fsubl
mov
and
adc
inc
data16
inc
pop
adc
adc
cmpsb
clc
rolb
mov
sbb
push
leave
iret
push
push
and
adc
add
add
les
daa
lock
and
stos
loopne
and
stc
adc
and
cmp
scas
cs
dec
push
push
aam
inc
adc
cmc
inc
adc
and
mov
aad
push
adc
or
lea
pop
and
jae
adc
pusha
sbb
add
test
adc
sbb
fisttpl
mov
adc
lea
cmp
outsb
adc
and
pop
orb
adc
inc
adc
lods
jp
cmp
dec
in
push
add
sub
inc
insl
adc
adc
mov
jl
adc
shr
jns
jge
mov
mov
inc
cmp
jl
andb
sub
pop
cmpl
pusha
dec
pop
mov
shr
cmp
inc
xor
push
loopne
adc
mov
sbb
adc
inc
adcb
sub
add
pop
movsl
adc
mov
inc
push
adc
dec
inc
inc
sbb
call
mov
icebp
jl
mov
adc
icebp
adc
mov
xor
subb
lea
pop
adc
lea
sbb
cmp
jbe
dec
enter
pop
in
movl
mov
lea
mov
jbe
adc
cmpsl
adc
dec
mov
push
mov
mov
push
push
mov
push
inc
sbb
mov
sub
call
and
cli
pop
lea
push
push
lea
push
adc
lea
dec
rclb
arpl
push
fs
and
addr16
inc
adc
imul
adcb
mov
inc
inc
jmp
dec
loopne
enter
rcr
imul
lea
jle
inc
fmull
mov
test
mov
add
adc
xor
testb
and
adc
pop
and
sbb
adc
cmp
pop
adc
adc
jne
adc
and
sbb
mov
add
mov
jmp
and
pop
adc
pop
sub
dec
push
dec
push
adc
dec
push
adc
add
je
and
sbbb
xor
push
push
rorb
leave
jle
pop
jno
cli
pusha
push
push
jne
add
mov
jmp
or
dec
jne
mov
psrlw
orl
dec
in
mov
ficoml
jne
push
in
lea
push
add
adc
push
popa
rclb
iret
sarl
cld
jb
inc
sbb
adc
inc
adc
or
sbb
push
call
add
imul
pop
pushf
pop
mov
ret
inc
ja
jle
sub
pusha
repnz
and
and
sub
and
cs
aas
sub
mov
and
jo
mov
insb
push
and
and
adc
or
rcll
je
daa
xchg
adc
and
sub
xor
in
sub
sub
mov
test
movl
das
insl
and
imul
outsb
lock
xor
add
mov
fcmovne
sbb
mov
add
mov
mov
mov
adc
sub
shr
mov
pop
shl
or
add
pop
mov
pop
and
adc
xchg
dec
fsts
jp
movl
rep
mov
mov
movl
movl
movl
movl
mov
pop
mov
test
jbe
divl
push
and
sub
mov
inc
repnz
cld
shr
mov
addb
adc
adc
mov
push
cmp
jb
pop
pop
out
adc
nop
and
lea
and
pop
adc
aas
mov
and
sbb
call
cmp
jb
mov
enter
out
push
xchg
inc
jb
aaa
xor
push
les
adc
push
aaa
sub
sub
xchg
inc
adc
and
mov
test
movb
fs
shlb
push
inc
dec
adc
ja
cwtl
lds
push
push
or
or
dec
inc
or
xor
jno
jl
sbb
stc
mov
mov
mov
and
in
adc
dec
push
adc
popa
and
inc
cmp
inc
sub
rep
jl
and
inc
jno
and
and
pop
fs
outsl
fisubs
enter
adc
lahf
roll
iret
adc
js
or
dec
adc
lea
push
mov
ficoms
call
mov
adc
adc
test
adc
xchg
dec
adc
andl
jp
sbb
les
testb
fcoms
lea
cmp
inc
lahf
dec
call
xchg
adc
rcrb
inc
dec
lea
adc
jg
test
test
inc
push
call
lock
dec
insb
adc
mov
jno
adc
pop
or
lea
adc
sbb
add
adc
mov
push
push
or
adc
mov
cmp
jae
push
mov
adc
test
jne
adc
mov
mov
dec
push
push
sbbl
gs
adc
das
sbb
adc
andb
adc
inc
iret
es
add
adc
and
imul
mov
sub
adc
int
add
or
jle
subl
and
dec
adc
mov
mov
mov
sbb
decb
adc
add
mov
adc
dec
jne
pop
daa
mov
xor
loopne
adc
jle
jb
xchg
xchg
pop
lea
mov
inc
pop
hlt
adc
dec
decl
cmp
jl
daa
roll
loop
inc
imul
lea
and
inc
cmpsb
adc
and
adc
and
lock
imul
pop
in
mov
inc
sbbb
loope
and
xor
adc
sub
mov
pop
adc
out
jecxz
ret
adc
inc
mov
lea
push
push
push
mov
in
ss
adc
mov
test
adc
inc
je
cmpb
jne
add
mov
clc
mov
xor
mov
sub
addr16
adc
popf
jbe
adc
stos
xor
mov
sub
and
jns
sbb
and
mov
loopne
sbb
sub
and
sbb
lea
cmp
ja
sbb
nop
mov
and
adc
inc
in
clc
mov
inc
dec
adc
add
push
adc
and
imul
jle
inc
inc
pop
arpl
mov
add
popa
pusha
adc
mov
leave
lock
inc
nop
adc
dec
add
mov
mov
adc
rolb
enter
jl
inc
movsl
push
mov
cmp
jle
inc
rcll
or
dec
es
rclb
or
jge
lea
jge
jns
adc
inc
das
adc
add
mov
inc
cmp
sub
and
and
outsb
sub
insb
adc
inc
orb
xor
adc
and
jmp
mov
imul
mov
test
adc
xor
xor
inc
aam
pop
fmull
jl
or
imul
mov
cmp
je
or
and
mov
cmp
push
rcl
jecxz
dec
int3
mov
mov
dec
and
jns
test
inc
and
lea
test
jg
lds
jl
inc
mov
out
and
ljmp
dec
push
and
adc
and
and
stos
adc
and
jns
inc
in
inc
mov
and
int3
add
dec
mov
add
mov
shr
and
cmp
ret
mov
mov
mov
add
testb
add
add
shlb
cmpl
pop
call
rorb
mov
outsl
xor
mov
std
mov
pop
or
xchg
adc
sbb
test
je
subl
aam
sarl
inc
push
cmc
add
jle
mov
loopne
inc
mov
adc
jne
push
adc
dec
mov
adc
in
jne
inc
and
jmp
jmp
add
inc
call
daa
sub
sub
push
cld
and
inc
inc
inc
adc
push
es
push
inc
adc
mov
and
adc
jmp
inc
jmp
cmpsb
adc
mov
add
sub
add
sub
mov
mov
mov
inc
inc
mov
mov
mov
mov
mov
mov
mov
inc
add
dec
jne
inc
mov
jg
lea
add
and
cmp
jmp
out
mov
pusha
loope
je
inc
lea
jp
and
jp
inc
inc
sub
jmp
inc
xchg
push
mov
push
mov
mov
test
outsl
adc
mov
inc
xor
sub
popa
adc
and
jo
adc
xchg
or
orl
add
add
add
inc
add
adc
loopne
sub
add
add
popa
or
fistpll
call
push
fs
adc
movsl
and
inc
adc
dec
test
and
movl
lea
scas
sub
add
pusha
pop
adc
and
inc
pusha
pop
and
pusha
pop
adc
sub
add
sbb
inc
pop
and
inc
daa
inc
add
push
and
adc
dec
pusha
pop
and
sub
add
lods
and
adc
adcb
stos
fbld
mov
and
shlb
movsb
dec
sub
add
mov
pop
adc
sub
add
pusha
pop
and
adc
insl
pusha
pop
adc
pop
add
push
lret
daa
pop
add
movsb
rclb
push
sub
add
loopne
pop
adc
sub
add
sbb
mov
adc
sub
add
pop
rclb
adc
mov
pop
adc
sub
add
rol
pop
adc
sub
add
or
mov
pop
add
dec
rclb
adc
test
pop
adc
sub
add
mov
rclb
pop
push
adcl
out
push
pop
dec
mov
sti
adc
js
adc
out
dec
push
jne
pop
and
and
cld
adc
xor
add
inc
adc
inc
pop
push
push
inc
loopne
pop
push
imul
inc
aaa
rclb
jl
adc
and
rclb
xchg
adc
cmp
outsl
adc
push
adc
adc
push
bound
push
push
bound
push
push
bound
push
push
bound
push
push
bound
push
push
bound
push
push
bound
adc
ljmp
cmp
clc
repnz
pusha
xor
push
bound
daa
imul
daa
adc
inc
daa
imul
and
push
push
bound
adc
dec
daa
xor
push
push
bound
adc
push
daa
xor
push
push
adc
push
push
daa
mov
mov
daa
mov
scas
push
and
dec
push
push
dec
jmp
inc
dec
adc
popa
jae
push
aas
and
bound
pop
jae
mov
adc
outsl
mov
and
xchg
adc
push
push
inc
movsb
and
adc
adc
push
push
adc
iret
mov
incb
aad
adc
leave
mov
stc
inc
jnp
adc
push
push
cltd
cmp
xchg
sub
sbb
push
nop
push
and
and
adc
add
ss
adc
mov
cmp
jne
push
lahf
adc
mov
adc
mov
and
pop
adc
ja
pop
adc
and
xor
adc
push
inc
mov
sub
mov
mov
push
mov
mov
mov
sub
inc
sbb
push
mov
adc
mov
and
dec
adc
dec
push
and
sub
lea
xchg
pusha
and
and
xor
mov
xor
xor
and
push
and
mov
pop
adc
mov
adc
daa
scas
add
adc
pop
sub
adc
mov
sub
mov
push
push
push
push
push
jp
adc
movsl
and
and
and
add
adc
cmpsb
mov
adc
and
mov
data16
cmpsl
imul
and
nop
and
dec
adc
and
and
and
push
fdivs
dec
popf
and
and
rorb
add
sbb
and
movsl
adc
aas
pop
adc
sub
and
enter
lea
and
and
and
scas
shll
dec
dec
and
mov
adcb
ja
mov
push
ret
test
setle
push
mov
sarl
jge
add
adc
pusha
sub
and
and
repz
das
dec
add
pop
shlb
and
cmp
adc
inc
jecxz
sub
lods
adc
and
adc
mov
and
insb
and
adc
iret
and
dec
sub
adc
push
and
mov
add
adc
and
and
mov
das
and
movsl
add
das
add
add
das
add
add
das
add
add
out
add
add
add
das
add
push
push
push
inc
fs
cmp
add
out
add
mov
and
popf
adc
jmp
bound
push
stos
xchg
adc
adc
inc
adc
out
je
sub
fwait
ljmp
and
loop
push
adc
pusha
add
call
xlat
je
adc
inc
jo
sbb
adc
popf
and
dec
and
inc
and
and
je
mov
pusha
pop
lea
fscale
adc
inc
inc
adc
xlat
push
cmpsl
adc
mov
rorl
jmp
cld
adc
jl
adc
test
inc
int3
adc
inc
jnp
mov
inc
adc
icebp
pusha
sbb
jbe
adc
jns
mov
pusha
sbb
mov
inc
inc
pusha
xor
fbstp
dec
aas
adc
sub
mov
adc
mov
adc
and
cmp
and
dec
push
loopne
adc
shll
adc
xchg
and
pop
jnp
adc
mov
sub
add
push
and
dec
stc
dec
arpl
adc
mov
adc
add
inc
popa
push
adc
aad
ljmp
lea
std
sub
cli
and
xor
or
inc
and
pusha
aas
push
mov
push
call
mov
fdivl
inc
int3
adc
push
lea
adc
arpl
shlb
enter
arpl
and
int3
xor
add
mov
popa
adc
xchg
adc
movsl
pusha
mov
mov
sbb
mov
imul
shll
test
inc
adc
mov
sub
shlb
and
mov
faddl
and
jne
and
adc
push
push
aas
adc
pusha
inc
adc
dec
adc
mov
adc
push
mov
cmpsl
loopne
inc
ret
mov
fisttpl
mov
sub
adc
sub
jp
out
add
xchg
inc
push
sbb
jno
je
dec
jne
mov
cmp
adc
and
daa
mov
adc
xchg
xor
hlt
xor
shl
clc
inc
and
and
jl
subb
push
mov
lea
adc
inc
shll
push
jo
bound
lods
cs
xchg
adc
aas
and
adc
jne
mov
adc
mov
and
xchg
pop
cmc
ret
loopne
add
xchg
mov
dec
mov
push
adc
bound
iret
add
adc
and
add
push
mov
inc
inc
mov
ret
call
mov
mov
pusha
xchg
adc
fstl
sbb
push
push
xchg
movsl
dec
adc
int3
mov
pusha
clc
adc
mov
pusha
xchg
inc
push
shll
adc
push
add
and
and
mov
adc
add
incl
popa
rorb
das
mov
mov
lock
add
clc
gs
lea
das
mov
adc
sub
loopne
sub
mov
sub
push
adc
jmp
add
sub
add
pusha
sub
xchg
and
sub
mov
push
cltd
mov
mov
and
mov
cli
mov
inc
cld
pop
leave
add
rorl
adc
pop
test
jge
movb
inc
and
adc
bnd
add
dec
je
push
push
push
adc
pop
fists
fsubrs
call
mov
and
or
int
mov
mov
dec
pop
dec
inc
adc
sbb
dec
leave
adc
adc
sub
and
test
push
add
and
push
add
and
push
add
iret
adc
ds
cld
dec
dec
and
adc
jmp
mov
pop
adc
fstps
mov
mov
and
lcall
jmp
mov
andb
add
cmp
cmp
sarb
add
fiaddl
sub
and
and
xor
and
lea
and
fs
pop
vucomisd
add
mov
push
inc
add
movsl
add
sbb
adc
call
add
rcrb
push
adc
movb
insl
nop
inc
mull
and
sub
add
push
adc
sbbb
inc
adc
or
sub
sub
data16
sub
adc
mov
or
movsb
out
jge
and
adcb
xchg
cmpsl
xorb
adc
mov
enter
add
pop
and
pop
mov
imul
add
or
adc
fwait
sub
inc
movups
inc
and
pusha
push
adc
sub
cmp
pusha
sub
jmp
mov
xor
cmpsl
and
mov
or
dec
and
mov
std
xor
adc
inc
mov
and
add
insb
and
fcompl
lea
je
mov
and
adc
out
xor
add
adc
jne
inc
cmp
add
movsb
add
dec
cmp
ja
jmp
jg
adc
ja
jmp
mov
adc
or
loopne
adc
nop
sub
adc
sar
inc
adc
inc
in
inc
adc
daa
inc
add
sub
adc
js
or
jle
and
inc
inc
aaa
adc
daa
aaa
add
subb
add
jo
aaa
add
push
popa
inc
xor
add
pusha
sub
add
pop
sub
adc
xor
adc
daa
xor
adc
add
inc
sub
adc
pusha
or
nop
frstor
xchg
adc
add
addl
cwtl
inc
movups
inc
add
ret
inc
add
rol
movups
inc
add
or
adc
inc
pop
pusha
add
mov
or
xor
inc
add
sub
adc
add
pop
inc
add
adc
or
popf
inc
add
nop
inc
add
stos
rclb
or
pop
and
xchg
inc
push
push
mov
push
mov
push
pop
push
call
push
push
and
adc
and
adc
pusha
or
xchg
test
sub
adc
outsl
inc
push
adc
and
inc
adc
inc
inc
or
scas
test
jo
movups
pusha
sbb
sbb
adc
rclb
loopne
pusha
xor
dec
rclb
sub
add
cmp
adc
or
sub
fs
and
push
and
sahf
adc
add
push
adc
inc
lcall
pusha
pop
adc
jo,pn
or
mov
xchg
push
and
pusha
sub
fists
cmp
mov
dec
sti
inc
and
xchg
adc
ja
pusha
daa
adc
mov
sub
add
aas
mov
jne
adc
and
sub
add
adc
mov
push
mov
inc
jle
xchg
pusha
cs
sub
mov
fstpl
sub
add
aas
mov
jb
adc
push
and
das
adc
cs
adc
mov
and
adc
rorl
and
mov
mov
sub
sub
pop
mov
fildll
gs
mov
push
jg
adc
push
and
xor
xor
inc
test
les
pushf
dec
and
and
add
push
push
and
push
pop
adc
in
pusha
push
and
adc
xchg
shll
jo
test
adc
pop
xor
mov
push
xor
push
stc
or
mov
adc
outsb
insl
adc
andb
dec
and
and
jmp
pop
sub
adc
gs
adc
insb
push
push
jae
and
push
and
push
and
aam
mov
adc
sub
pop
and
push
or
push
repnz
mov
cmp
cmp
outsl
or
inc
outsl
adc
sub
sub
and
and
sti
and
mov
or
aas
dec
orb
into
pusha
addl
imul
add
subl
adc
es
add
inc
add
jmp
sub
dec
adc
jle
in
mov
shll
add
sub
and
and
push
and
imul
sub
mov
ljmp
aad
jne
loopne
adc
push
dec
mov
inc
sub
arpl
rclb
repz
sub
inc
pop
and
and
add
nop
push
lea
adcl
aaa
popa
adc
aam
cmp
add
mov
add
adc
adc
das
add
das
add
ds
add
addb
pop
add
xchg
imul
add
mov
adc
adc
mov
dec
jg
movb
mov
and
adc
sbb
and
mov
adc
xchg
adc
mov
mov
and
mov
cmc
je
outsb
rorb
push
and
adc
nop
test
pop
dec
and
xor
pusha
sbb
arpl
test
test
sub
pusha
jo
jg
adc
aas
jg
and
insl
adc
mov
mull
add
inc
fs
adc
push
stos
adc
mov
ss
mov
bound
and
adc
data16
sub
and
daa
dec
add
dec
imul
mov
es
pop
or
test
push
stc
push
insl
and
mov
rorb
mov
div
jg
pop
orb
icebp
mov
xchg
xchg
sbb
jne
lea
lea
movl
movl
adc
orb
pusha
or
mov
and
insb
adc
pop
mov
dec
and
dec
lea
push
push
inc
push
adc
adc
aas
sbb
lea
push
lea
lcall
jo
xor
les
and
push
adc
mov
sub
sub
mov
sub
mov
sub
lea
or
adc
lret
push
push
mov
dec
push
fs
adc
push
dec
filds
outsl
sar
mov
inc
pop
adc
and
adc
and
mov
jnp
mov
int
and
mov
cmpsb
cmp
and
das
push
adc
and
mov
jne
adc
jmp
enter
shlb
adc
and
jns
add
in
adc
mov
sbb
lret
mov
arpl
icebp
sar
mov
shr
cmp
shlb
ret
int
dec
mov
and
and
or
loopne
and
pop
adc
daa
cmp
adc
sub
cs
cmp
ret
shr
cmp
adc
adc
call
and
rclb
jno
add
imul
lods
jl
push
sbb
mov
add
cmp
lahf
and
fidivl
addl
popa
jb
jl
cmp
jle
mov
or
adc
jge
mov
pop
mov
je
imul
jo
adc
adc
add
adc
sub
adc
inc
jne
insb
and
and
pop
adc
add
mul
addr16
inc
je
and
adc
adc
adc
ret
andb
cltd
idivl
cmp
ljmp
adc
inc
add
mov
jne
cmp
jge
cmp
out
add
dec
sub
inc
pusha
out
cmp
add
and
and
rcll
lock
les
iret
mov
pusha
push
and
cmp
pop
ja
dec
cltd
adc
mov
popf
scas
sbb
mov
jmp
dec
jmp
inc
jmp
sub
dec
rcll
and
and
test
adc
and
inc
adc
jmp
cmp
inc
mov
je
push
and
adc
cmpsb
add
add
and
ss
adc
inc
add
cmp
add
inc
inc
add
inc
rolb
sub
adc
inc
add
pop
mov
sub
mov
add
mov
aaa
mov
mov
adc
inc
add
add
adc
rolb
ljmp
and
inc
xchg
es
push
popa
fisubl
xchg
push
in
pop
call
je
push
push
es
loop
inc
js
sbb
mov
pop
push
and
sub
js
adc
in
adc
and
rolb
sti
and
mov
mov
enter
je
cmp
and
cvtdq2ps
enter
cltd
sub
fs
fcoms
adc
inc
sub
mov
imul
imul
fildll
mov
push
pushf
adc
inc
jae
mov
pop
mov
inc
jnp
pop
lock
add
clc
mov
neg
shl
mov
sbb
add
enter
and
push
adc
mov
arpl
cmpsl
and
aas
adc
aas
mov
es
cmc
arpl
adc
sub
and
adc
and
inc
push
adc
pop
ficoms
sbb
dec
inc
adc
and
and
jno
clc
outsl
adc
and
adc
sub
cltd
repz
es
adc
rolb
or
inc
aaa
imul
icebp
cli
and
push
and
and
test
cmp
leave
pop
stos
mov
sbb
and
rcrb
lds
pop
adc
ret
cmp
adc
mov
pop
adc
and
cmc
and
cmp
and
inc
and
pop
adc
inc
or
loopne
adc
fsubs
mov
adc
and
sbb
imul
pusha
push
and
adc
and
and
xchg
adc
and
imul
and
and
lea
mov
push
pop
and
push
push
lea
mov
inc
dec
adc
adc
jae
adc
mov
add
adc
adc
sbb
outsb
jo
outsb
pusha
and
and
sub
mov
add
lock
xchg
xchg
and
loope
adc
int
outsb
je
into
in
add
and
adc
frstor
test
and
inc
add
and
xor
adc
std
and
pop
iret
adc
dec
jne
add
inc
aam
sbb
daa
push
out
and
xchg
fisubs
adc
inc
lods
and
loope
mov
mov
inc
and
pop
fisubrs
cmp
in
and
mov
into
in
and
and
scas
insl
addr16
std
inc
xchg
cmpsb
sbb
aam
and
ret
adc
inc
pop
inc
and
imul
aas
mov
and
adc
cmpl
and
pop
adc
jne
and
and
adc
clc
inc
inc
jb
mov
repz
adc
inc
push
and
movsb
or
add
aam
loope
aad
push
push
and
adc
inc
pop
and
popa
xor
jno
popa
xor
repz
sbb
sub
sbb
pusha
adc
inc
adc
sub
pusha
pmaxsw
and
bound
incl
andl
pop
lret
stos
and
xor
xor
dec
subb
adc
sarb
pusha
adc
pushf
push
lret
cmpsl
sub
or
das
xor
daa
add
mov
loop
and
jo
sub
and
jo
lds
jle
adc
sbbb
adc
pop
adc
and
lods
call
inc
cmp
pop
repnz
add
mov
mov
dec
test
push
adc
add
adc
loope
adc
dec
or
adc
inc
push
and
ja
pusha
call
xchg
mov
and
inc
add
cs
nop
and
mov
std
adc
and
and
adc
push
dec
xor
inc
pop
adc
and
insl
pushf
push
adc
sbb
jecxz
adc
add
and
mov
and
inc
and
and
lret
fsubl
enter
lods
push
xchg
bound
mov
adc
xor
xor
repz
ja
xor
jo
pop
push
dec
sti
sub
and
insl
daa
dec
ja
pop
sub
ja
nop
nop
mov
daa
sbbb
clc
sbb
inc
sbb
cwtl
and
and
mov
sub
and
and
hlt
daa
sub
sub
xchg
ja
out
sbb
sbb
or
jne,pn
pop
fildl
sub
and
adc
das
sub
add
adc
pop
add
scas
std
mov
inc
and
jo
mov
adc
mov
shlb
add
dec
mov
popa
adc
and
adc
aas
jle
std
xor
data16
pop
and
inc
mov
cld
bound
and
push
adc
and
shlb
cmp
sbb
adc
movsb
in
cmp
adc
stc
cmp
and
jno
and
sbbl
xchg
adc
xor
adc
and
cmp
jne
inc
jmp
cmp
jne
shlb
inc
cmp
push
adc
mov
roll
and
lea
jmp
test
je
inc
inc
data16
sbb
dec
cmp
jne
testb
jne
and
dec
adc
and
push
inc
test
mov
je
inc
xor
je
and
adc
sub
and
adc
enter
and
insb
inc
add
leave
cmp
jne
inc
pusha
push
push
test
jmp
mov
and
add
cmp
dec
imul
adc
and
out
xchg
adc
add
sbb
mov
mov
add
and
aad
mov
imul
and
or
adc
mov
flds
xor
and
ret
and
adc
lret
mov
flds
adc
and
test
sti
out
adc
jle
mov
pusha
adc
shlb
pop
dec
pop
add
cli
sets
dec
and
xor
adc
adc
pop
adc
and
mov
pusha
andb
out
xchg
sub
dec
and
inc
and
inc
and
and
and
repz
xor
shll
sbb
jae
stos
and
dec
es
adc
mov
je
jb
sbb
ja
je
push
ret
adc
sub
mov
inc
add
cmc
int3
adc
and
inc
adc
and
hlt
adc
cmp
clc
xchg
nop
adc
adc
and
int3
and
dec
and
sub
xor
mov
pop
das
daa
jg
and
inc
test
pop
test
sub
jne
jmp
and
test
jne
data16
adc
push
lea
or
adcb
and
inc
push
and
and
lahf
adc
inc
and
add
sbb
xor
and
dec
das
test
es
push
inc
sti
and
and
jecxz
adc
and
daa
popf
mov
pop
push
iret
outsb
adc
pop
and
and
popa
les
xor
adc
add
sub
mov
add
sub
subl
pop
es
xor
outsb
cmp
xor
divl
cs
xor
xor
push
and
and
das
adc
das
xor
sub
fs
adc
lds
push
adc
mov
pop
add
sub
daa
adc
in
mov
and
fs
adc
push
cmpsl
inc
adc
add
add
add
aam
movsl
adc
call
aam
and
mov
dec
xchg
cs
push
sbb
lock
mov
mov
adc
lds
test
and
adc
leave
imul
popa
jo
pop
popa
jno
insb
and
adc
pusha
or
adc
fistl
pop
es
dec
mov
pusha
popa
adc
pusha
mov
push
inc
adc
aaa
inc
push
cmp
jne
push
jmp
inc
xor
pusha
dec
xchg
pusha
push
and
ret
adc
inc
push
and
adc
push
and
jl
aas
adc
inc
aas
and
mov
sahf
jne
push
sbbb
inc
das
pusha
sub
cmc
and
inc
and
cmc
adc
jne
push
or
mov
mov
inc
or
out
inc
test
stos
and
adc
dec
xor
lods
orb
mov
adc
jnp
and
lods
and
aam
mov
mov
xchg
mov
and
adc
adc
cwtl
sub
rclb
and
xlat
and
and
data16
rclb
dec
jg
and
adc
mov
inc
in
mov
dec
push
je
and
sti
inc
mov
jno
and
and
notl
sbb
sbb
in
and
adc
jb
and
inc
and
jmp
mov
and
outsl
xchg
adc
cmp
adc
and
mov
jo
daa
mov
adc
add
scas
stos
adc
and
dec
and
addr16
adcb
shll
push
and
push
test
js
and
and
inc
and
pushf
and
inc
and
js
int
adc
fidivs
add
push
push
adc
clc
push
lea
xchg
pop
shl
push
dec
and
es
and
mov
repz
jle
adc
and
adc
sub
adc
and
mov
insb
inc
shlb
repz
mov
adc
roll
arpl
xchg
adc
adc
mov
cmp
inc
inc
adc
and
enter
ret
add
cs
and
adc
shlb
push
aas
pop
lea
imul
test
inc
xor
adc
mov
and
sub
jl
and
in
arpl
jl
sbb
jb
popa
cmc
xchg
addr16
xchg
adc
push
lea
outsl
and
adc
push
lea
and
in
push
shlb
adc
sbb
loop
data16
sbb
mov
inc
and
icebp
scas
adc
and
and
adc
and
and
pop
inc
push
adc
xchg
je
adc
cmp
and
mov
sub
notl
sub
mov
inc
repnz
xor
pushw
scas
xchg
dec
pop
outsl
fwait
and
inc
and
movsl
and
loope
test
jbe
dec
push
cmp
jne
add
adc
fldenv
inc
xchg
push
and
outsl
out
and
aam
mov
push
shlb
push
and
cmp
rorl
adc
dec
push
inc
dec
cmp
jne
andl
inc
or
popf
cmp
test
jg
inc
or
and
sub
push
and
and
js
pop
and
xchg
test
dec
adc
jae
daa
adc
daa
sbb
or
adc
and
adc
adc
cmp
cmp
dec
dec
and
adc
roll
jns
cmp
mov
adc
adc
inc
in
and
adc
inc
out
ret
je
sbb
sbb
adc
sbb
test
add
cmp
dec
popf
adc
dec
cli
push
add
cmp
and
push
and
loopne
mov
sub
sub
adc
scas
jecxz
cmpb
inc
jbe
mov
add
inc
add
inc
outsb
adc
and
jl
and
cmp
stc
sbb
sbb
sbb
mov
mov
and
add
add
adc
mov
xor
mov
and
jmp
sub
sub
add
jmp
daa
add
aaa
loopne
adc
dec
adc
add
adc
idivb
jmp
ficoml
je
xor
and
iret
adc
inc
iret
adc
fbstp
addr16
andl
xor
and
leave
es
adc
add
add
and
adc
add
push
in
inc
fs
adc
adc
adc
and
and
and
imul
xchg
ret
and
pop
adc
test
mov
jne
mov
push
popa
mov
mov
test
mov
and
andl
aam
sub
jne
and
jo
push
adc
leave
shrl
sahf
adc
scas
and
mov
fldt
movl
mov
pop
inc
mov
pop
sahf
adc
jnp
mov
adc
decl
push
lea
mov
sub
mov
cli
add
adc
sahf
sub
jge
lea
mov
bound
push
adc
push
arpl
adc
inc
adc
mov
or
adc
adc
and
and
adc
cli
adc
dec
sub
cmp
and
adcb
imul
pop
imul
mov
or
mov
and
xchg
mov
addl
fisttpl
push
sahf
mov
pop
fisubrl
int
sbbb
cwtl
sub
roll
mov
and
je
adc
sub
add
mov
dec
mov
rclb
and
notl
iret
sub
jg
adc
das
adc
adc
outsb
adcl
sub
ja
adc
dec
xor
jle
jp
outsl
bound
icebp
test
ret
inc
bound
and
push
and
xor
mov
inc
pusha
adc
dec
and
das
pusha
jns
mov
pusha
dec
adc
jg
je
ja
adc
and
outsb
adc
inc
xchg
adc
mov
adc
jg
adc
cmc
and
nop
adc
and
mov
adc
daa
push
adc
xchg
arpl
test
add
adc
adc
adc
stc
cmp
mov
insl
in
sub
sub
mov
hlt
sub
or
cmp
and
test
sbb
js
push
mov
push
sub
dec
into
fistl
adc
adc
or
push
mov
jl
insb
sbb
inc
dec
and
loopne
loope
and
mov
adc
testb
inc
outsb
popa
daa
adc
push
ss
adc
push
adc
imul
push
mov
and
jle
stc
xor
and
pop
sub
cmp
je
cmp
jne
and
and
adc
mov
mov
inc
jae
xor
inc
inc
pusha
cmp
xor
adc
adc
inc
pop
and
xor
or
and
mov
and
sti
and
cltd
sub
adc
clc
es
inc
outsb
pusha
adc
jo
sub
sbb
dec
js
inc
mov
lock
dec
push
pusha
sbb
int
idivb
dec
sub
jp
pusha
add
push
add
jo
sub
adc
daa
jne
pusha
jp
push
and
pusha
data16
loopne
adc
inc
push
jmp
mov
dec
cmp
jge
inc
jmp
xor
es
add
repz
dec
pop
loopne
sub
add
dec
sub
jl
and
adcb
and
rolb
outsb
pusha
lea
adc
iret
xchg
fsubl
adc
push
jmp
sub
dec
inc
clc
pop
pop
mov
dec
dec
jmp
and
loopne
adc
and
loopne
adc
inc
adc
jmp
dec
inc
dec
adc
dec
and
testb
sbb
adc
iret
xchg
adc
sbb
mov
adc
cltd
adc
push
push
adc
xchg
xchg
mov
je
and
and
lret
xchg
fists
pop
add
jp
sub
and
mov
in
adc
xchg
sbb
stc
cmp
inc
int
push
xor
and
mov
neg
mov
adc
push
adcb
sub
add
es
add
andl
add
andl
cmp
pusha
test
or
and
test
pusha
jnp
mov
adc
jo
jg
and
adc
cltd
and
into
adc
aam
fcomps
push
pop
addb
pusha
push
and
and
jge
lods
sub
jb
ret
adc
push
pop
and
sbb
into
adc
xor
or
or
jl
roll
cli
jge
adc
dec
xchg
adc
and
xchg
jl
cmp
jge
cmp
je
push
xchg
popa
int3
mov
and
idivl
adc
xchg
mov
sub
adc
jg
mov
dec
mov
mov
call
and
xlat
adc
push
inc
dec
and
mov
adc
cmp
verr
pop
into
and
adc
push
je
cmc
adc
mov
fwait
adc
pop
sbbl
sbb
adc
sbb
sbb
jl
test
jl
cmp
jge
mov
cmp
jge
imul
mov
add
cmp
jl
or
and
cmp
jne
pusha
orl
clc
std
inc
push
adc
push
sbb
push
sbb
inc
cmp
pop
cltd
idivl
pusha
es
pusha
adc
add
xor
dec
add
sbb
dec
add
push
pusha
dec
adc
pusha
dec
adc
and
pusha
and
clc
adc
and
dec
adc
jne
pusha
lock
clc
test
je
jno
movl
and
adcb
mov
je,pt
inc
add
and
adcb
push
movsb
icebp
adc
inc
das
rorb
push
addb
adc
mov
adc
adc
and
arpl
and
adc
sti
std
jne
and
inc
jns
adc
and
adc
in
pop
es
mov
test
jl
cmp
jge
and
inc
push
adc
scas
and
adc
adc
push
mov
mov
dec
sub
xor
dec
push
stos
adc
mov
and
pop
and
fs
pop
dec
push
inc
sbb
add
add
mov
pusha
adc
dec
mov
add
mov
mov
clc
adc
mov
andl
loopne
daa
scas
or
outsb
adc
adcb
inc
sbb
mov
xchg
fs
ljmp
jbe
push
mov
pop
aas
jns
adc
cmp
inc
pop
inc
lds
jmp
push
fs
setl
out
jle
cli
jecxz
adc
mov
andb
sub
and
push
jae
cmp
pop
jns
cmpsb
stc
adc
movl
adc
pusha
xchg
adc
push
adc
add
pusha
xchg
adc
adc
adc
jmp
cmp
sbb
imul
inc
roll
inc
and
pop
in
fnsave
adc
int
fnsave
pusha
adc
adc
jle
inc
inc
adc
inc
pop
daa
mov
and
push
push
inc
inc
test
inc
lcall
mov
loope
shll
or
and
aad
rcll
lds
outsb
jbe
out
loopne
add
pop
mov
mov
sub
cmp
jle
mov
add
mov
les
js
push
pop
or
inc
mov
popa
sbb
flds
lret
or
push
push
and
mov
inc
add
dec
or
loop
push
adc
adc
mov
adc
dec
inc
dec
adc
lret
adc
inc
add
xchg
loopne
adc
add
pop
pusha
inc
pop
adc
xor
adc
push
or
aad
shll
and
add
inc
and
push
adcb
push
push
and
cmp
imul
test
outsl
sbb
loopne
lds
ret
mov
xor
and
mov
add
aad
insl
and
jnp
mov
and
adc
sub
ficoms
test
jge
neg
rorb
or
fcoms
mov
and
adc
sub
push
mov
sub
sbb
lods
inc
daa
cmp
sub
popa
adc
push
inc
xchg
adc
adc
inc
inc
iret
xchg
adc
icebp
and
or
shrl
adc
and
add
push
cmpb
cmp
add
inc
or
lret
jnp
out
and
jl
push
andl
loope
add
adc
rcll
sub
stc
and
and
adc
mov
push
inc
into
and
add
xchg
jnp
mov
or
jp
movl
addr16
and
adc
jns
nop
and
xchg
adc
jne
adc
mov
adc
sub
push
add
add
jmp
mov
pop
shll
push
push
adc
in
mov
xor
adc
xlat
sbb
and
popa
and
inc
cmc
outsl
sbb
and
jmp
mov
jmp
pop
je
cmpl
jne
and
adc
pusha
mov
test
jnp
xor
add
movl
xchg
xor
mov
mov
subb
xor
mov
adc
mov
cs
orb
xchg
pusha
push
adc
push
and
xchg
test
sub
push
pop
and
and
add
push
add
outsl
add
daa
smsw
das
ljmp
and
test
adc
sti
decb
test
iret
hlt
adc
outsb
adc
adc
sti
mov
out
rcll
dec
or
add
mov
mov
xor
push
xor
insl
cli
and
nop
mov
inc
and
adc
loopne
es
insl
adc
and
push
sbb
jmp
lea
and
mov
xorb
sub
push
adcb
xor
cmp
push
inc
cmp
clc
lahf
inc
cmp
mov
mov
add
cmp
jne
cmp
je
push
mov
jmp
and
xor
nop
inc
sub
jne
adc
dec
and
inc
sub
adc
jle
dec
rclb
pusha
adc
and
and
xchg
aam
push
mov
call
pop
sub
stos
sti
and
fistl
jbe
inc
sbb
dec
lea
and
pop
nop
inc
and
push
sub
aas
out
adc
je
std
jne
sub
lea
and
and
pop
popa
dec
adc
xchg
adc
inc
jns
sub
dec
or
sbb
pusha
xchg
adc
push
cltd
jb
jp
notl
dec
push
mov
adc
dec
adc
cli
adc
arpl
inc
mulb
mov
popa
test
pop
and
adc
sub
mov
adc
sahf
cltd
adc
inc
push
jge
adc
mov
inc
es
neg
neg
and
inc
adc
push
adc
inc
push
and
data16
adcl
adc
and
and
pop
pop
ret
push
iret
mov
mov
mov
and
adc
dec
es
and
dec
push
loopne
adc
inc
popa
shll
inc
test
inc
popa
test
push
and
nop
inc
test
mov
popf
mov
adc
jnp
addl
mov
cwtl
dec
jmp
adc
inc
push
and
frstor
pusha
jmp
cmpsb
outsl
jl
cwtl
adc
lds
cmp
and
es
adc
test
popa
sahf
inc
xchg
adc
jg
mov
test
out
and
xchg
shll
icebp
xor
int3
adc
jo
loop
mov
pop
push
jne
cmp
inc
mov
inc
xchg
adc
inc
test
mov
inc
inc
mov
pop
bound
push
dec
scas
adc
pusha
inc
adc
inc
pop
sbbb
imul
cmp
mov
push
int
movsl
jno
jle
adc
push
adc
loop
or
jne
pusha
or
shlb
adc
jmp
jmp
and
inc
pop
adc
lret
push
lret
cwtl
insl
scas
adc
and
in
iret
and
xchg
adc
loope
sbb
dec
mov
cmp
xchg
rorl
xorb
xor
nop
and
add
add
mov
loop
pusha
cmpsl
and
xor
push
je
jo
divb
jbe
push
daa
js
adc
and
int3
mov
rclb
and
aad
adc
clc
in
cmpb
fcompl
loopne
js
sub
in
and
aas
and
das
and
xor
and
and
cmpsl
popa
and
rcll
adc
shrl
adc
je
sub
xor
mov
cmpb
daa
outsl
and
mov
sub
and
inc
and
pop
lea
xor
cmp
mov
je
mov
push
jmp
xchg
dec
pop
mov
adc
mov
inc
adc
push
push
call
jbe
adc
push
mov
pop
push
rep
mov
movl
adc
and
dec
push
rorb
adc
test
lea
push
cmpsl
daa
adc
pop
mov
lock
and
and
pusha
add
mov
movl
inc
and
jb
and
cmp
and
adc
mov
adc
and
es
pusha
inc
adc
pop
scas
push
les
je
dec
jne
adc
and
pusha
and
jb
and
bound
mov
fildll
scas
adc
add
cmp
ja
and
and
adc
mov
push
call
mov
adc
call
inc
cmp
pusha
mov
mov
and
jns
xor
adc
jb
inc
pop
and
lret
adc
and
push
dec
adc
and
and
pop
push
ret
nop
aam
inc
add
inc
add
pop
inc
jae
pop
inc
add
cs
add
ret
cld
addb
add
out
addr16
inc
and
adc
jge
dec
je
sub
dec
mov
je
mov
mov
sub
inc
xchg
call
je
xor
mov
sub
je
sub
add
mov
push
inc
shll
das
push
adc
mov
loopne
adc
sahf
and
in
je
inc
and
and
inc
sub
rcrb
pop
adc
pop
add
mov
pusha
push
adc
push
daa
xor
adc
data16
and
mov
repz
and
jns
int
adc
inc
outsl
adc
pusha
jp
adc
jmp
cmp
jne
cmp
jne
cmp
jne
inc
dec
test
dec
adc
push
push
popa
xchg
and
loopne
pop
push
mov
mov
mov
mov
mov
and
cwtl
adc
aas
mov
dec
mov
mov
mov
movl
outsb
pop
movl
das
dec
adc
pop
push
and
and
cmp
and
sbb
mov
test
jne
stos
fcoms
shll
add
xchg
mov
inc
add
shlb
adc
cmp
jne
loopne
adc
cmp
add
mov
dec
adc
push
adc
mov
and
push
add
je
push
or
and
xor
nop
subb
adc
pusha
sub
mov
jle
xchg
cmp
and
pop
adc
loopne
adc
inc
outsb
adc
inc
and
dec
loopne
loop
mov
clc
add
adc
or
adc
cmp
imul
add
dec
out
inc
and
mov
cmc
adc
mov
cmpsl
adc
jmp
pusha
stos
and
adc
xor
lahf
adc
sub
pop
ret
cmp
mov
aas
adc
sub
dec
pusha
adc
adc
orl
pusha
sbb
mov
lds
jae
and
cs
push
subl
adc
fstl
je
mov
adc
sarl
js
mov
sbb
ret
je
cmp
jb
loopne
push
jbe
pusha
arpl
xor
pop
adc
mov
xchg
dec
xor
adc
xchg
rolb
inc
adc
mov
ret
and
shlb
es
add
cmp
jb
daa
dec
add
adc
add
cmpb
and
dec
ret
and
xor
aad
aas
add
rcll
push
insl
inc
xchg
adc
dec
and
adc
jle
pusha
insl
adc
mov
pop
or
push
aaa
sbb
inc
or
out
add
inc
or
addb
adc
adc
pusha
push
adc
lock
or
and
or
and
adc
inc
fs
inc
adc
ja
and
adc
xor
inc
jbe
ja
mov
test
adc
push
mov
call
sbb
inc
sbb
movb
lds
movb
and
mov
add
inc
repz
adc
push
mov
push
xor
daa
and
adc
sub
and
popa
adc
inc
push
and
out
mov
pop
add
sub
mov
mov
mov
add
adc
leave
pop
pop
adc
rorb
pusha
testl
mov
call
push
inc
stc
adc
enter
mov
mov
mov
mov
jb
sysret
mov
mov
mov
sub
xchg
outsl
scas
adc
pop
sub
fs
sub
addr16
sub
sub
or
adc
push
lock
scas
xor
adc
sub
jmp
into
movaps
and
and
sub
rolb
sub
sbb
and
daa
and
and
pop
adc
jo
daa
aas
push
imul
and
sti
adc
xchg
adc
and
adc
and
inc
adc
clc
jge
enter
insb
lcall
and
push
and
xor
xor
xor
and
add
insl
inc
ret
mov
adcl
or
test
inc
xchg
adc
bound
shr
xchg
adc
ljmp
and
inc
lods
mov
es
or
mov
dec
punpcklbw
xchg
adc
mov
cmpsb
cmp
lock
dec
add
or
test
and
push
mov
ret
jne
mov
mov
mov
push
and
add
inc
and
jns
mov
mov
xor
div
mov
mov
mov
mov
popf
sbb
mov
mov
mov
movl
and
adc
xchg
add
daa
mov
and
mov
shl
and
mov
or
mov
shl
imul
sbbb
mov
gs
adc
mov
push
adc
mov
movsl
xor
lea
shlb
adc
mov
and
imul
pusha
lds
mov
div
mov
mov
and
mov
mov
inc
into
adc
orb
aad
ret
xchg
adc
and
daa
scas
add
rorl
mov
and
inc
add
and
adc
xchg
pusha
adc
inc
dec
mov
and
cmp
mov
cltd
and
mov
sub
pop
adcl
fwait
adc
adc
lea
xor
fisubs
sbb
add
and
ljmp
or
and
in
mov
push
mov
and
xor
add
mov
pop
adc
fneni(8087
adc
movsl
mov
xchg
mov
pushf
add
loopne
adc
jl
and
adc
add
sub
add
jg
adc
and
lret
lret
adc
adc
mov
dec
je
dec
jne
mov
movl
adc
inc
push
inc
or
pop
mov
stos
js
mov
push
in
xchg
cli
jp
enter
nop
rcrb
inc
and
icebp
adc
xorb
movl
bound
sub
or
cmp
mov
dec
inc
pop
cmp
jg
cmp
inc
out
sarb
andl
pop
adc
es
or
cmpl
push
loopne
adc
push
test
xchg
adc
negb
push
test
jle
lea
mov
inc
into
pop
xchg
adc
or
jecxz
and
pop
dec
cld
cmp
jg
mov
mov
inc
adc
loopne
orb
push
cmp
jl
inc
ja
sub
fcmovnb
xchg
inc
sbb
movsl
bound
adc
lea
mov
movl
scas
push
dec
dec
pusha
push
orl
adc
imul
adcb
loopne
and
repz
pop
aas
adc
mov
push
lock
test
mov
xchg
adc
adc
inc
and
jl
mov
arpl
adc
or
xor
cmp
pop
jl
and
dec
inc
mov
outsl
push
inc
sbb
test
adc
stos
xlat
pop
repnz
jmp
adc
and
add
jl
pop
cmpl
add
je
push
mov
adc
cmp
pop
and
adc
cmp
jge
mov
cmp
jl
cmp
jg
lea
and
add
icebp
je
lea
and
add
je
and
adc
pop
add
je
lea
sub
add
stos
and
push
push
lea
push
add
push
lods
cs
je
dec
je
add
adc
push
inc
cmp
push
out
stos
xlat
adc
mov
int3
ja
ret
movl
mov
out
adc
mov
psrlw
adc
call
jbe
adc
test
mov
xor
dec
mov
inc
cmp
cmp
dec
pop
inc
mov
mov
test
mov
jne
and
popa
sub
add
jne
and
add
cmp
add
dec
incb
adc
test
jne
and
adcl
push
subb
pusha
fsubl
rcrl
adc
nop
andb
dec
pop
dec
adc
push
mov
jbe
dec
push
push
mov
pusha
sbb
movl
ret
popa
or
and
out
adc
add
pusha
or
adc
dec
es
jo
sbbb
inc
or
pusha
sbb
sub
inc
add
mov
pop
ds
pop
adc
cld
pusha
sbb
jl
mov
inc
adc
xor
and
sub
or
insb
push
sbb
push
mov
mov
inc
inc
adc
mov
jbe
adcl
inc
mov
sub
add
dec
in
and
and
dec
add
inc
sub
icebp
aad
jns
adc
mov
stc
and
xor
inc
sub
adc
add
mov
dec
mov
inc
inc
cmp
pusha
sub
jl
inc
xchg
adc
and
jnp
jmp
inc
or
jne
mov
mov
cmp
jne
cmpb
jne
inc
and
jne
adc
test
jne
and
sbb
je
mov
push
push
inc
pop
adc
sbb
jp
sbb
inc
sbb
mov
lods
lea
movzbw
inc
add
mov
push
shl
mov
roll
push
and
mov
mov
sub
and
add
push
movl
and
sub
and
or
je
and
pusha
jle
adc
lock
mov
xchg
cmp
imul
lea
xor
je
mov
pusha
sub
push
add
pop
mov
daa
mov
inc
cmpsb
sbb
mov
jle
mov
pop
fwait
adc
int
or
mov
adc
and
cmp
pop
and
jmp
adc
pop
adc
push
mov
pop
arpl
addb
lods
sti
and
and
int
insl
sbb
and
adc
rorb
pop
add
inc
sub
cmp
and
fcoms
xor
pusha
push
and
xor
insb
xorb
or
inc
inc
inc
das
adc
sbb
rcll
cmp
jne
inc
adcl
fs
popa
adc
inc
inc
push
adc
bound
inc
push
adc
gs
and
stc
adc
pushf
inc
or
movl
dec
and
and
rcll
adc
xor
adc
popa
add
adcb
movsb
loope
test
andl
push
dec
pusha
adc
push
sub
lret
xor
fisttpll
adc
test
fs
adc
loop
pop
mov
inc
adc
mov
inc
test
and
adc
sbbb
cmp
push
add
adc
imul
sar
push
mov
adc
push
inc
mull
pop
dec
and
rcll
les
cmp
mov
js
jne
inc
loopne
gs
das
xorl
dec
lds
xchg
pusha
xor
cmp
ja
xor
mov
insb
adc
push
push
pop
sbb
sbb
jmp
push
jmp
push
push
jmp
pop
out
add
pusha
dec
and
test
adc
call
pusha
adc
sarb
sub
add
pusha
loopne
and
loop
sbb
adc
pop
lock
sbb
jne
sub
add
fs
rcrb
dec
daa
addb
outsl
adc
outsl
andb
add
and
movsl
pop
adc
push
loop
and
and
xchg
lock
adc
xchg
adc
sub
sub
adc
and
fcoml
mov
sbbb
test
std
xchg
mov
jmp
inc
clc
adc
inc
add
or
adc
add
in
inc
add
mov
inc
adc
loope
add
and
add
mov
add
inc
inc
add
pop
inc
add
addb
into
inc
add
add
add
add
adc
into
adc
iret
xchg
rolb
or
or
or
adc
push
sub
add
cmp
call
inc
push
popa
out
pop
lret
or
pop
push
dec
dec
lret
cmp
mov
lea
adc
mov
movb
mov
inc
lea
cmp
jl
mov
push
ja
adc
mov
or
movl
out
adc
inc
sbb
sahf
fs
dec
inc
and
sub
add
and
inc
and
jae
pop
cmpsl
je
mov
mov
mov
adc
addb
aaa
adcb
inc
imul
and
push
insl
adc
dec
add
pusha
sub
sub
add
cmp
dec
add
leave
dec
mov
pusha
and
bnd
and
adc
push
sbb
and
adc
fs
mov
daa
outsb
add
dec
sub
add
das
andb
sbb
cmp
daa
dec
add
sbb
ret
dec
add
das
add
sub
add
sub
inc
in
adc
push
adc
and
out
adc
insl
rclb
or
xchg
push
sbb
shlb
inc
dec
mov
jbe
mov
test
jg
push
adc
push
adc
and
inc
movsl
adc
ret
add
subl
adc
and
push
sbb
sub
lea
shl
pop
mov
out
adc
andb
inc
adc
ss
sub
adc
mov
loop
faddl
adc
jne
daa
xlat
add
jns
daa
xlat
add
inc
and
add
ja
sub
sbb
xadd
add
loop
mov
pusha
pop
adc
sub
adc
das
add
adc
dec
mov
inc
icebp
andl
bound
adc
adc
adc
mov
jae
mov
adc
dec
push
push
mov
and
mov
adc
adc
sbb
mov
pop
scas
and
pop
push
adc
adc
bound
and
xor
xchg
adc
sub
add
mov
pop
xor
imul
add
pusha
daa
inc
or
shlb
daa
inc
inc
andb
inc
mov
lea
cmp
jne
pop
jnp
jl
imul
cmp
in
cmp
xchg
fsubs
test
jle
xchg
andl
mov
outsb
pusha
mov
adc
and
adc
and
and
dec
mov
inc
and
push
les
adc
adc
pop
je
inc
and
inc
outsb
mov
lret
xchg
nop
pusha
mov
shlb
mov
mov
mov
daa
mov
jno
and
adc
mov
es
adc
sub
mov
das
movsb
sub
inc
xorb
xchg
and
adc
pop
add
nop
sub
add
pop
rcrb
mov
mov
pop
pop
inc
test
stc
add
loope
push
mov
jp
push
clc
adc
lea
mov
inc
push
bound
pop
mov
and
shrb
push
es
lods
adc
pop
and
xor
adc
pop
rcll
inc
cwtl
adc
push
es
or
push
popa
outsl
pusha
pop
imul
inc
test
mov
call
in
and
adc
pusha
test
push
pusha
and
adc
pusha
and
add
loop
inc
call
and
clc
inc
pop
adc
daa
pop
add
ds
xor
rcrb
inc
and
sub
lcall
jns
ljmp
inc
jb
test
adc
std
and
xorps
or
sbb
daa
mov
and
sar
mov
pop
adc
pushf
orb
jae
inc
cmovo
popl
stos
inc
adc
inc
add
mov
es
mov
data16
arpl
mov
adc
test
sub
add
out
push
adc
inc
sbb
xor
dec
mov
inc
test
and
push
adc
daa
and
and
andb
lea
leave
dec
mov
es
inc
sub
mov
fwait
adc
pop
inc
insb
jno
sub
adc
push
inc
mov
inc
push
xor
dec
and
pop
adc
inc
test
and
xor
inc
add
adc
inc
aas
adc
mov
aad
adc
inc
add
inc
loopne
inc
jl
sbb
rorb
rorl
add
and
adc
jle
rolb
and
mov
xchg
pop
aas
adc
jnp
and
cmp
jg
cmp
push
cmp
adc
test
and
inc
push
and
xor
daa
mov
enter
loope
and
push
add
lret
adc
inc
and
adc
and
and
shrl
je
sub
mov
pop
push
adc
pop
lea
rolb
aas
add
popf
rclb
mov
pop
bound
xor
and
mov
and
movsb
adc
inc
add
adc
or
mov
mov
mov
add
mov
rep
and
aam
je
adc
jp
das
mov
jp
adc
rorb
add
aas
adc
push
adc
cs
sahf
push
and
ja
jne
mov
dec
mov
inc
inc
push
adc
scas
or
shlb
leave
dec
inc
jbe
flds
jmp
inc
dec
and
xor
add
xchg
outsl
rclb
push
push
dec
mov
inc
sar
hlt
and
in
xor
jecxz
jecxz
lret
sti
add
pusha
notb
and
loopne
fbld
cs
jne
fwait
and
lahf
scas
jns
add
test
rorl
adc
negb
arpl
inc
pusha
mov
mov
das
orb
sub
and
ljmp
add
jmp
sub
and
popf
mov
and
xor
mov
and
push
adc
and
aad
adc
shl
pop
cmp
adc
jl
sbb
sbb
lds
add
and
dec
jne
and
push
dec
dec
adc
sbb
roll
and
popa
hlt
and
jl
mov
jle
sub
push
xor
xor
push
scas
into
rcll
je
repz
adc
daa
and
mov
or
roll
and
adcb
sub
adc
inc
movups
cmp
cmpsl
mov
test
mov
es
xor
mov
fldenv
inc
stc
xor
movups
add
pusha
mov
adc
sbb
mov
mov
dec
inc
xchg
jnp
mov
std
jp
dec
jcxz
je
adcl
daa
addl
sbb
adc
xchg
add
pop
rcrb
jbe
arpl
iret
mov
jp
test
push
adc
inc
pop
lea
jne
dec
dec
adc
into
dec
adc
cmpb
adc
mov
inc
push
or
mov
inc
inc
adc
pop
fistl
push
adc
subl
sub
fisubrs
xchg
jecxz
mov
mov
mov
sbb
dec
push
mov
pop
sub
add
and
loopne
xor
push
and
jmp
stc
jp
push
lcall
adc
repz
and
adc
mov
add
inc
and
pusha
push
adc
rolb
or
adc
and
pusha
push
adc
addb
sbb
addb
sbb
or
inc
punpcklbw
adc
adc
adc
adc
push
sbb
sbb
adc
cmp
and
mov
sub
outsb
mov
and
xor
push
mov
call
int
adc
ret
je
and
and
and
push
push
push
push
data16
js
and
fdivrs
push
pop
sub
inc
jb
adc
cmp
dec
pop
dec
mov
pop
sub
push
rorb
adc
pop
adc
pusha
and
push
add
push
cmp
inc
data16
enter
imul
push
mov
jbe
and
stc
adc
enter
cmp
mov
cmp
jl
dec
add
inc
mov
cmpsl
cmp
pop
cmp
jae
mov
mov
adc
jmp
pop
mov
ror
add
inc
mov
or
call
mov
inc
or
mov
sub
cmp
jbe
mov
lea
and
daa
sbb
shr
cmp
jae
push
and
adc
and
enter
je
ljmpw
jns
add
fs
push
add
mov
test
and
adc
jbe
sbb
mov
jmp
mov
cmp
dec
add
push
add
add
and
sub
dec
mov
dec
or
ret
add
fbld
inc
out
adc
inc
and
addb
sarl
cmp
add
daa
cmp
adc
and
test
pop
int3
add
lea
and
ret
or
mov
adc
and
rolb
dec
lea
add
mov
mov
and
test
stos
cmp
and
test
mov
and
lods
adc
and
dec
arpl
add
stos
sbb
cmp
jl
mov
pushf
imull
or
daa
mov
and
pop
adc
push
adc
dec
mov
ficoml
jbe
mov
popa
xchg
adc
xchg
adc
imul
lret
adc
sub
imul
divb
popa
lret
sbb
lea
add
mov
add
add
dec
jne
cmp
jb
push
inc
adc
mov
shl
add
mov
dec
mov
adc
loope
cmpsl
add
and
cmpsl
add
mov
std
sahf
mov
sti
add
lret
add
mov
and
push
inc
aas
and
push
adc
test
dec
or
push
and
inc
and
adc
adc
sub
inc
inc
and
add
inc
loopne
and
sbbb
rcll
xor
and
mov
adc
and
es
leave
adc
add
mov
and
adc
inc
push
loope
inc
inc
inc
and
adc
and
loop
loopne
pusha
or
sub
test
jle
mov
push
push
and
xchg
adc
jp
mov
jl
mov
jmp
cltd
idiv
and
aam
push
mov
test
je
and
xchg
in
rorb
jbe
inc
cmp
inc
stc
push
dec
add
dec
adc
and
push
inc
jno
inc
inc
push
xlat
lea
push
push
push
mov
cmp
jp
or
inc
cmpsb
push
and
fcoms
push
jo
popa
fsts
adc
pop
rcll
dec
adc
inc
and
notl
and
jbe
inc
dec
adc
jae
jo
jae
sub
adc
inc
pop
adc
sub
cmp
adc
jae
dec
inc
jae
movl
push
push
push
mov
jbe
and
adc
and
pusha
jbe
push
mov
jbe
push
sub
add
out
das
aas
add
mov
adc
sbb
push
cmp
ja
cmp
ja
pusha
mov
adc
pop
addb
bound
shlb
inc
sbb
call
adc
enter
dec
mov
lahf
rclb
pop
push
movsl
jb
fs
mov
stc
outsb
and
cmc
and
sbb
outsb
sbb
mov
jmp
mov
and
adc
inc
test
inc
sbb
fcmove
loopne
sbb
jae
cmp
js
adc
test
mov
pusha
pop
inc
xlat
inc
adc
add
adc
lea
mov
sub
sub
inc
aaa
push
adc
push
push
mov
arpl
jp
mov
sti
jb
and
adc
daa
dec
hlt
and
inc
mov
inc
adc
inc
pop
push
sub
add
int3
fildll
inc
mov
pusha
inc
sbb
sbb
stc
pusha
sbb
pop
adc
icebp
sub
pop
or
adc
scas
jmp
and
and
jle
and
cmp
sbb
inc
cli
and
push
sbb
sbb
iret
sub
cmp
inc
cmp
ret
loopne
inc
aas
adc
scas
ret
and
adc
push
push
inc
out
mov
pusha
adc
mov
sbb
xor
adc
xor
adc
das
adc
mov
adc
add
push
or
add
cmp
jl
daa
fadds
or
adc
cmp
iret
add
fdivs
inc
xchg
inc
iret
adc
inc
test
jo
cld
repnz
adc
iret
adc
iret
adc
sub
add
std
jae
cmp
cwtl
mov
das
iret
add
fildl
adc
iret
adc
popa
jno
pop
popa
iret
adc
sar
popa
rclb
push
sub
add
std
inc
shlb
ss
fldt
rolb
and
dec
loope
adc
add
popa
rolb
sub
add
adc
sbb
add
filds
adc
sbb
mov
shr
inc
mov
adc
loop,pn
adc
add
inc
out
cmp
add
mov
scas
es
or
sbb
adc
cmp
inc
mov
adc
repnz
adc
adc
mov
cmp
je
cmp
je
lea
mov
pop
aas
adc
addr16
sti
jne
mov
dec
jmp
and
adc
and
push
sub
add
dec
and
mov
mov
and
das
and
lea
ja
popa
xchg
adc
les
rorl
push
dec
jne
pusha
aaa
imul
xor
adc
xor
nop
fldl
inc
sahf
adc
repz
cs
dec
adc
aad
mov
xor
js
push
inc
add
push
and
dec
dec
test
sbb
and
and
xor
mov
add
je
push
dec
adc
jle
push
imul
pop
push
adc
ret
adc
andb
sub
add
test
sbbb
pop
adc
pusha
cs
mov
adc
sub
dec
xor
xchg
xor
lea
ja
inc
test
sub
cltd
and
dec
sbb
or
inc
jo
frstor
adc
mov
jle
add
pusha
xor
out
sub
xor
and
adc
adc
xor
and
add
xor
popa
pop
adc
push
jmp
jo
pop
add
mov
adc
and
mov
push
push
xchg
fstl
add
mov
ret
or
mov
adc
scas
cli
mov
imul
shl
cmp
jg
mov
mov
imul
rcl
and
in
jmp
pop
add
inc
das
adc
inc
mov
adc
cmp
insb
add
jl
and
xor
xor
fildl
push
dec
add
mov
and
adc
scas
pop
and
dec
and
mov
push
and
inc
in
mov
leave
adc
pop
and
insl
pop
push
jmp
mov
jmp
movl
cmovo
orl
and
inc
sbb
inc
js
mov
inc
push
adc
adc
imul
and
ret
mov
dec
add
rolb
sahf
rolb
popl
adc
mov
dec
sub
jae
cmpb
or
imul
enter
inc
and
cmpl
jne
cmp
jne
mov
jns
add
mov
mov
adc
clc
jne
cmp
pop
scas
sbb
or
jg
cmp
jne
cmp
arpl
xchg
sbbl
push
js
or
xchg
and
xor
and
sub
add
sbb
lret
and
adc
add
sbb
adc
sbbb
push
mov
and
xor
sub
and
mov
adc
insb
pop
pop
ja
xor
push
mov
xorl
mov
mov
pop
adc
add
je
cmp
jne
mov
mov
mov
cmp
cmp
jle
es
pop
cmpl
je
mov
and
mov
jmp
cmp
push
cmp
pusha
or
insb
jmp
popa
adc
je
pusha
jge
aad
mov
add
dec
adc
jle
jne
jo
push
jnp
push
sbb
adc
adc
xchg
adc
inc
sbb
adc
push
inc
or
mov
pusha
sub
inc
inc
adc
adc
sub
test
outsl
inc
inc
inc
cltd
loopne
jmp
and
pusha
dec
and
jmp
inc
push
adc
inc
sub
jp
jne
pusha
clc
and
adc
mov
adcb
mov
adc
cmp
jne
and
fcoml
stc
jp
and
inc
lcall
push
and
xor
adc
je
pusha
inc
adc
push
inc
push
adc
jne
cmp
inc
out
je
lea
mov
mov
adc
scas
enter
iret
pop
adc
pop
jns
js
mov
inc
adc
out
setne
and
and
jecxz
inc
mov
scas
les
iret
sub
push
push
adc
jns
adc
pop
push
les
ret
xchg
dec
dec
add
xchg
jbe
adc
adc
adc
or
jle
add
pusha
popa
sbb
enter
pusha
or
movups
rolb
cltd
adc
stos
mov
inc
icebp
and
roll
fwait
xor
inc
outsl
adc
movl
popa
mov
insl
xor
mov
pop
cltd
jbe
adc
and
xor
dec
lret
jmp
xorl
mov
inc
and
lds
fnstsw
adc
mov
je
jmp
mov
and
daa
adc
mov
daa
sbb
xchg
inc
mov
pop
and
sub
js
loopne
jnp
pusha
das
call
and
inc
adcb
and
sub
mov
xchg
cmpsb
movsl
adc
push
pusha
sub
insb
addr16
imul
or
shlb
adc
inc
xor
adc
inc
movlps
xchg
ret
sub
and
adc
mov
and
jle
popa
out
shlb
sahf
xor
incl
dec
sub
pop
lock
adc
pushf
adc
adc
and
xchg
xchg
or
mov
daa
xor
idiv
jno
and
adc
mov
insl
imul
pop
sub
sub
push
jecxz
cmpsl
adc
lea
jne
push
test
lea
jle
outsl
jns
ficompl
xor
cld
arpl
movsl
mov
and
daa
adc
and
mov
dec
rep
jne
sub
jb
arpl
adc
mov
push
sub
scas
pusha
sub
mov
xor
inc
sub
movsl
insl
je
cld
test
stos
mull
xor
lret
testb
dec
cmp
aas
xor
or
pop
xchg
sub
adc
shrb
xor
sbb
pusha
adc
sahf
popa
aam
xor
add
inc
sub
cmp
xchg
popf
scas
and
mov
sub
mov
rolb
test
pusha
adc
pushf
dec
es
sbb
test
jle
push
lea
add
dec
pop
mov
cltd
mov
push
dec
mov
push
mov
imul
inc
popf
push
sub
push
jg
inc
and
ret
add
adc
pop
pop
inc
or
outsl
jae
adc
push
xor
mov
push
lea
and
adc
and
sbb
fisttpl
cmp
cwtl
add
adc
lds
push
adc
mov
iret
inc
adc
scas
inc
add
adc
pusha
xlat
adc
adc
push
pusha
sahf
adc
imul
dec
push
inc
add
lea
and
and
push
cmp
dec
cmp
add
mov
inc
mov
in
leave
and
das
inc
repz
push
adc
ljmp
iret
je
sub
add
insl
or
jo
and
adc
and
mov
jp
je
push
pusha
adc
mov
jl
pop
adc
mov
pop
jle
mov
mov
inc
sub
or
adc
inc
mov
and
sub
je
sub
jge
inc
lret
dec
and
and
addl
test
jle
lea
lea
push
and
adc
and
icebp
and
adc
mov
jnp
add
sbb
push
cmp
adc
pusha
adc
dec
cltd
adc
sub
push
and
lea
imul
sbb
mov
mov
sub
pop
adcl
cld
and
adc
pusha
nop
adc
sbb
push
dec
adc
pop
dec
fbld
push
in
dec
or
addb
mov
imul
add
mov
imul
lea
sub
lea
sub
lea
mov
add
mov
mov
mov
inc
inc
adc
insl
xchg
sbb
leave
lea
xchg
mov
mov
mov
sub
push
enter
cmp
jne
inc
adcl
insl
push
pusha
int
inc
mov
and
pop
ret
jmp
and
ds
notl
jl
pop
pop
and
push
mov
adc
lds
jne
mov
dec
or
call
shlb
out
adc
inc
imul
adc
push
mov
aaa
push
sbb
lea
push
push
inc
xor
pop
sbb
add
pop
jb
inc
cmp
sub
jle
mov
addb
sub
adc
adcl
mov
push
and
test
andb
dec
rorb
push
jo
sbb
fdivl
jne
mov
sbb
push
mov
push
mov
inc
mov
xchg
cmp
dec
sub
dec
and
cmp
jb
les
cwtl
adc
sub
andl
mov
imul
xorl
mov
mov
shlb
insl
sbb
and
add
jb
inc
lret
adc
lds
fs
adc
shll
xor
mov
or
adc
aaa
addb
push
shrb
jg
sbbl
push
adc
pop
push
cmpb
pop
adc
adc
inc
adc
or
mov
jle
add
push
inc
dec
adc
and
insl
adc
xor
adc
mov
movsb
imul
and
adc
xlat
and
into
and
jp
and
clc
inc
ficoml
cmp
and
xchg
mov
sub
aam
inc
push
adc
inc
mov
cmp
in
notb
sub
and
dec
sbb
sub
mov
mov
and
lea
and
mov
sub
and
test
mov
mov
jp
and
and
sbb
and
pushf
sub
and
adc
scas
and
adc
ret
mov
inc
out
and
out
lret
add
xor
mov
roll
or
push
adc
ret
or
notl
sbb
or
test
inc
leave
pop
clc
mov
div
mov
and
fists
icebp
and
inc
test
jmp
int
adc
inc
mov
popf
adc
adc
mov
mov
lea
test
mov
jle
lea
push
mov
aam
adc
cmc
arpl
inc
hlt
adc
jl
sub
fists
push
adc
mov
and
and
das
sub
stos
loopne
adc
sub
push
adc
in
xchg
arpl
cmp
inc
cmp
movl
adc
push
and
adc
jo
test
and
lods
adc
and
add
add
and
mov
lea
mov
push
dec
nop
lods
enter
push
cld
inc
addl
xor
adc
and
inc
inc
adc
and
jns
xor
dec
add
inc
fldenv
mov
adc
dec
inc
cmpsl
adc
inc
add
es
mov
or
sub
adc
and
adc
push
and
dec
and
movsb
adc
jne
mov
pusha
adc
mov
int
lahf
xor
and
mov
out
sub
sbb
adc
icebp
cmpsl
adc
mov
jg
mov
jbe
adc
adc
bnd
mov
push
sbb
dec
adc
dec
sbb
adc
sub
add
outsb
add
push
adc
push
dec
adc
dec
adc
adc
inc
or
sub
adc
pop
adc
inc
adc
sub
add
and
xlat
adc
in
mov
jns
adc
mov
dec
mov
pop
push
adc
inc
adc
dec
mov
push
push
adc
jge
mov
cmp
adc
lock
ja
movsl
aaa
pop
dec
and
pop
or
xchg
and
cmp
fildll
pushf
adc
test
and
adc
leave
and
adc
mov
and
inc
adc
dec
push
and
xchg
push
sbb
adc
dec
and
pop
dec
std
adc
mov
push
nop
and
and
cmp
inc
sbb
mov
mov
adc
outsb
push
aaa
adc
or
loope
add
push
pop
jl
inc
mov
lea
inc
jne
pushf
ds
data16
fsubrs
cmp
and
adc
and
jo
cmp
jge
fs
push
adc
adc
inc
push
adc
and
push
push
push
push
push
jmp
xor
ss
adcl
ret
add
mov
xchg
adc
and
in
mov
pop
and
adc
lea
repz
adc
xor
out
arpl
mov
cli
pop
adc
cmp
and
inc
and
jl
and
out
mov
cmp
adc
icebp
sti
jbe
xor
inc
ss
inc
xchg
les
pusha
sbb
mov
jno
and
mov
inc
mov
adcb
js
adc
test
adc
adc
and
and
adc
call
cmp
adc
sub
or
push
test
inc
push
push
push
and
pop
adc
and
jle
and
and
and
inc
adcb
popa
out
dec
and
inc
and
adc
inc
adc
call
or
sti
insb
inc
jp
inc
mov
and
and
rclb
fsubs
in
es
push
jl
inc
adc
sub
jge
outsl
adc
mov
pop
cmp
sub
and
std
scas
and
mov
push
lret
adc
and
cmp
push
and
ficomps
cmp
cmp
inc
and
pop
addr16
inc
add
cmp
add
adc
ss
aaa
adc
ret
loop
jle
mov
adc
lea
pop
loopne
dec
xor
dec
inc
test
jl
and
out
adc
inc
inc
lds
mov
mov
and
add
add
and
cmp
adcb
and
and
adc
inc
and
repz
test
and
cmp
adc
jb
adc
xor
shrl
add
fsubs
and
mov
and
ret
bound
jbe
and
adc
and
dec
and
and
inc
sub
adc
sub
adc
push
movsb
mov
mov
sub
andl
cmp
mov
lcall
mov
adc
shll
test
xchg
inc
and
push
adc
mov
xor
push
and
orb
insb
out
ret
and
je
or
bound
adc
test
adc
push
and
cmp
jno
cld
pop
inc
push
adc
dec
mov
in
pop
jge
icebp
and
cmp
rol
mov
roll
or
mov
and
int
jle
sbbb
mov
iret
orl
cmp
and
push
push
push
inc
cmp
push
and
push
jmp
sbb
and
imul
mov
aad
jbe
mov
adc
xor
dec
gs
sbbb
adc
scas
jnp
adc
test
adc
add
and
sub
adc
mov
imul
mov
movsb
sbb
rcrb
inc
mov
and
mov
es
push
and
adc
xchg
push
adc
je
lahf
and
pusha
or
pop
jo
sbb
adc
adc
and
and
mov
jbe
mov
mov
dec
adc
pusha
bound
fwait
inc
adc
pop
dec
adc
test
sti
and
cmpw
or
inc
or
adc
je
inc
push
adc
add
push
adc
push
jno
push
adc
mov
les
adc
jl
pop
scas
adc
out
mov
sub
pop
xchg
and
addr16
test
adc
fdivrl
and
hlt
adc
inc
add
rclb
cmp
adc
dec
adc
mov
xchg
sub
sub
and
mov
stos
ficoms
mov
and
aad
adc
adc
dec
mov
pop
je
jne
cmp
pop
and
scas
and
sub
mov
and
sbb
test
sete
add
cmp
ja
mov
mov
cmp
jle
popa
pop
mov
dec
rclb
mov
and
loop
inc
adc
push
mov
adc
sub
and
adc
ss
adc
pop
dec
or
lock
mov
and
shr
and
sub
adc
mov
push
imul
jne
test
adc
mov
pusha
xor
sbb
rorl
icebp
and
add
dec
in
and
inc
std
inc
and
lea
inc
or
dec
jmp
loopne
and
adc
pop
and
push
and
push
adc
mov
lock
iret
test
adc
and
je
push
add
and
dec
mov
pushw
and
inc
or
insb
orb
xor
jl
or
and
adc
adc
mov
xchg
je
or
add
sbb
inc
adc
add
mov
mov
adc
inc
es
outsl
inc
pop
adc
and
adc
jle
jae
and
scas
adc
adc
adc
inc
sbb
push
and
and
adc
adc
adc
sub
dec
push
sub
add
ret
push
xchg
mov
std
pop
sub
mov
dec
xchg
adc
inc
xor
inc
cmpsl
adc
mov
adcl
and
xor
loop
inc
push
dec
and
rclb
and
test
mov
imul
jnp
adc
ret
imul
xor
mov
insb
inc
adc
and
adc
mov
mov
cmpl
and
sub
insb
sub
xchg
pop
push
adc
loop
js
inc
adc
add
cltd
shl
idiv
inc
add
das
mov
adc
loop
pop
adc
lea
jmp
push
adc
es
add
push
es
add
add
adc
fadds
adc
inc
push
and
popa
mov
dec
adc
js
cmpsb
sub
add
xchg
dec
adc
ret
adc
jl
and
sub
adc
inc
jl
jl
jl
shll
jne
and
jne
insb
and
lea
and
pusha
test
ret
add
test
jl
and
addl
je
xchg
xchg
cmp
add
and
jb
push
adc
sub
scas
stos
adc
sbbb
addb
out
idiv
aaa
addb
push
sub
and
cmp
add
jns
jle
push
adc
addl
movb
add
and
add
shrl
mov
lea
push
push
call
mov
mov
popa
enter
jg
mov
jp
and
adc
inc
lret
adc
push
and
pop
and
andl
inc
arpl
cmp
scas
and
iret
adc
xchg
inc
cmpsl
andb
push
imul
adc
mov
in
inc
outsb
and
adc
adc
nop
adc
sbb
push
dec
push
pop
pusha
xor
push
jno
and
adc
mov
insl
adc
adc
ret
rclb
fwait
lds
adc
and
xor
xor
or
push
and
and
sbb
adc
inc
or
push
es
fmuls
adc
mov
push
adc
adc
leave
mov
mov
cmp
jl
lea
mov
mov
mov
ret
test
mov
sarb
xchg
test
int
xchg
add
pusha
inc
sbb
cli
adc
movb
mov
xor
and
mov
mov
jne
lea
mov
mov
push
xchg
adc
lock
sbb
loope
test
jne
xor
and
sbb
sbb
je
mov
jo
mov
xor
mov
dec
xor
xchg
mov
sbb
and
and
dec
adc
jne
stc
adc
movl
and
lret
and
cmp
and
and
adc
ss
push
adc
addb
loop
mov
lea
lea
push
push
add
loopne
fstpt
and
sub
lea
adc
mov
mov
inc
mov
inc
dec
jne
cwtl
sub
jecxz
and
das
adc
inc
pusha
pop
addb
andb
pusha
int
sub
repnz
adc
and
adc
or
cmpsl
dec
arpl
add
es
and
std
sbb
adc
jge
adc
dec
cmp
and
mov
and
ds
cs
outsb
sbb
mov
mov
mov
pushl
and
inc
adc
and
je
xor
adc
xchg
adc
mov
sub
and
jge
mov
sbb
jmp
in
adc
and
cmpsb
ds
add
adc
add
and
lret
inc
mov
daa
adc
sbb
mov
mov
mov
subb
ljmp
and
adc
and
mov
inc
daa
and
and
lcall
and
pop
adc
inc
push
inc
pop
adc
mov
xor
iret
shl
popa
mov
lea
dec
and
mov
cmp
jle
shl
and
nop
adc
inc
and
loopne
adc
inc
adc
mov
mov
dec
dec
adc
std
and
adc
add
cmc
inc
and
adc
cmp
jg
and
in
sbb
adc
mov
add
and
dec
xchg
push
adc
adc
cmp
mov
xlat
add
inc
sbb
mov
sub
mov
mov
iret
dec
popa
adc
movl
adc
adc
mov
adc
rcrb
cmp
mov
and
and
xchg
lods
sub
adc
mov
adc
cmpl
jne
cmp
jne
cmp
sub
adc
jb
adc
jle
dec
adc
xchg
outsl
pop
adc
fs
mov
add
sbb
jmp
cmp
addr16
and
adc
inc
sbb
sti
sbbb
sahf
and
fsubs
mov
leave
adc
and
jg
and
cmp
and
and
adcb
push
or
mov
dec
and
adc
and
cmp
adc
lcall
jge
mov
mov
call
mov
jne
adc
ret
and
push
push
mov
sahf
popa
push
and
sub
inc
and
movsl
adc
pusha
jge
lcall
adc
loop
nop
and
adc
and
and
sbb
loope
adc
jnp
pop
xchg
lea
pusha
adc
mov
xor
add
push
and
pop
adc
dec
pop
insl
mov
insb
dec
adc
or
adc
decl
sbb
in
test
cs
jae
mov
cmpb
and
sbb
adc
push
sbb
pop
xchg
cmp
adc
dec
and
jmp
and
mov
lret
adc
test
data16
jb
and
and
pop
test
jmp
lea
mov
sar
and
pop
adc
inc
lock
sub
adc
adc
icebp
jmp
mov
push
push
and
inc
push
and
and
adc
popa
lods
adc
mov
jo
sbb
divb
jge
inc
sub
daa
daa
add
sub
mov
shl
mov
sar
mov
dec
and
cmp
inc
adc
add
jmp
inc
mov
dec
xor
sti
pop
adc
mov
lea
inc
push
fs
adc
mov
addr16
adc
add
mov
inc
and
or
adc
add
xchg
sub
add
sbb
or
adc
or
adc
and
jo
jecxz
mov
and
sbb
pcmpeqb
jmp
xor
add
mov
sub
add
or
and
xor
sbb
xor
jmp
cmp
jne
cmovne
clc
inc
jmp
jo
adc
adc
pusha
xchg
xor
add
shrb
adc
adc
popa
adc
pusha
jne
adc
and
inc
loopne
adc
jmp
inc
aam
jne
and
jns
jo
inc
and
inc
adc
add
dec
arpl
pop
inc
nop
lea
dec
sub
mov
leave
dec
inc
pop
adc
into
jno
adc
bnd
dec
and
mov
and
cmp
sub
and
das
adc
out
sub
sub
push
pusha
and
xor
inc
sbb
mov
dec
pop
mov
pop
mov
in
adc
mov
mov
dec
adc
or
and
sbb
add
rorb
test
and
xor
push
pop
fs
and
test
and
out
pop
lea
movsb
loop
xlat
dec
and
ret
adc
inc
and
cmp
sub
push
and
push
adc
and
sub
adc
sub
adc
add
mov
add
adc
loopne
push
test
and
ret
jns
and
and
and
inc
adc
adc
stos
and
pop
movsb
adc
mov
or
aas
adc
in
jne
popaw
pop
scas
xchg
lds
xchg
ret
push
icebp
adc
and
mov
adc
scas
data16
je
jmp
mov
ret
cmp
jl
and
adc
add
adc
cmp
je
mov
cmp
rcrb
addl
cmp
sub
xchg
lds
mov
or
adc
add
or
and
mov
stc
dec
fists
adc
adc
in
pop
adc
push
sbb
fdivrs
lea
mov
sub
test
sbb
xor
and
adc
pop
mov
fdivrs
push
xchg
xchg
int3
xchg
movsb
adc
mov
pushf
adc
xor
cmp
cmp
je
movl
jmp
inc
or
xor
or
adc
adc
or
pop
inc
or
rolb
sub
add
adc
and
cmp
sbb
inc
arpl
adc
cmp
adc
pusha
adc
inc
mov
movl
jecxz
mov
mov
push
mov
incb
popa
add
movsl
pop
adc
mov
inc
and
outsl
or
outsl
or
fists
mov
pop
mull
ss
das
push
inc
scas
inc
repz
adc
xchg
bound
xor
and
inc
mov
and
adc
and
dec
inc
sub
inc
and
jl
dec
lea
lea
and
adc
mov
mov
cmp
pop
or
xchg
xchg
xor
rep
mov
stos
jae
adc
and
lea
inc
or
and
pusha
push
orb
sbb
adc
mov
push
sub
out
adc
add
mov
addl
push
mov
pop
and
addb
into
daa
daa
add
lea
adc
xchg
adc
lea
shlb
lea
and
xchg
adc
xchg
pop
adc
mov
mov
stos
imul
adc
movsl
dec
call
xchg
and
adc
lret
outsl
add
sub
push
cmp
orb
cmp
jno
stos
adc
adc
inc
or
notb
pop
or
movsl
pop
adc
mov
sub
add
sub
movb
test
pop
sbb
mov
mov
xor
push
and
je
mov
fsts
adc
insb
ljmp
jne
adc
dec
inc
ljmp
cmp
loop
and
adc
sbb
adc
mov
inc
or
and
or
leave
aad
cmp
adc
ja
out
xor
stos
pop
adc
mov
adc
jns
xor
mov
adc
sub
mov
and
shlb
adc
sar
xor
dec
add
cmp
pusha
movsb
ret
xchg
add
push
xchg
loopne
xor
mov
roll
test
lea
push
sbb
or
add
arpl
and
ficoml
dec
jle
jmp
and
xor
test
mov
je
cmp
jge
mov
adc
shr
lcall
lahf
push
ret
adc
inc
xchg
push
cli
dec
and
add
dec
mov
xor
jg
in
adc
sub
sub
adc
sbb
pop
dec
pop
mov
mov
testl
outsl
subb
andb
push
mov
shl
cltd
xorb
adc
mov
push
add
adc
inc
hlt
insb
notb
adc
testb
or
bound
sub
mov
dec
jae
adc
mov
sbb
mov
outsb
movups
sbb
rcl
cli
test
je
fs
or
adc
adc
push
adc
pop
adc
inc
sub
xor
scas
popa
sbb
shll
adc
mov
pop
and
push
shll
mov
inc
sub
inc
push
loope
sub
sbb
and
cmpsb
fldcw
xchg
adc
cli
rcll
mov
adc
dec
and
and
and
cmp
mov
cmp
sbb
jbe
loope
adc
mov
pusha
pusha
adc
mov
xchg
inc
outsb
cmp
ficoml
cmp
adc
xchg
inc
push
pop
or
xchg
adc
out
aad
and
arpl
fimuls
lods
mov
jne
jb
adc
pop
adc
adc
incb
adc
adc
add
xor
push
je
imul
sub
pop
push
lea
mov
sar
and
push
adc
add
icebp
push
stos
adc
jmp
mov
adc
pusha
pop
adc
inc
rclb
in
dec
or
xchg
adc
adc
imul
in
addr16
je
cmp
je
push
add
jb
and
push
push
jb
jge
dec
xchg
cs
push
adc
dec
mov
mov
mov
sbbl
iret
adc
push
adc
aaa
rcrb
stos
jnp
sbb
adc
lea
and
test
and
sbb
pop
and
push
pop
cmp
add
and
add
icebp
test
adc
mov
jle
push
movswl
test
jne
and
mov
pop
add
mov
jmp
jae
adc
or
pop
jae
adc
js
loopne
and
mov
sbb
dec
adc
jle
and
and
push
in
dec
adc
mov
cmp
mov
push
shll
xor
inc
or
adc
mov
mov
test
sbb
shl
inc
sub
pop
je
cmp
jge
push
push
orl
mov
mov
loopne
lock
repnz
shll
mov
sbb
xchg
cmp
jle
inc
aaa
adc
jb
rorl
addr16
adc
and
adc
inc
pop
adc
pop
adc
dec
and
add
jnp
and
adc
pop
add
push
inc
pop
adc
mov
push
cmc
popa
pusha
jg
ss
jno
adc
jle
shrb
inc
pusha
mov
mov
dec
and
cmp
push
lods
call
sbb
add
adc
mov
mov
es
inc
mov
push
adc
push
cld
and
sub
sub
pop
repnz
dec
ficoms
in
std
add
lahf
adc
or
add
data16
or
and
sub
dec
add
push
push
arpl
adc
bound
and
addr16
and
xor
cmp
jns
adc
and
xor
push
cmp
mov
adc
jl
pop
pop
es
and
push
je
adc
and
adc
xlat
jae
inc
add
or
adc
mov
adc
push
lea
inc
jnp
jg
jle
sbb
clc
pop
ja
and
nop
dec
inc
add
and
xchg
inc
and
adc
jae
movups
rorb
arpl
movups
mov
sub
sub
dec
je
and
and
pop
pusha
daa
adc
mov
daa
adc
andb
adc
sbb
rorb
loop
push
adc
fmuls
adc
inc
aaa
adc
jge
je
push
cld
test
je
mov
mov
sub
jge
movsl
inc
or
dec
pop
jno
push
dec
inc
push
adc
fidivrl
push
xlat
mov
add
mov
ret
dec
popf
adc
mov
and
and
adc
add
outsb
mov
sbb
fmull
fstps
jl
add
cmp
shll
and
sub
dec
mov
mov
sub
movswl
inc
cmpsb
sbb
sbb
add
imul
add
sar
mov
cmp
fildl
push
mov
mov
xorb
sub
daa
xor
cld
dec
jne
sub
and
iret
and
and
lock
pop
and
push
adc
adc
dec
inc
add
add
adc
pop
loopne
adc
inc
add
fldenv
or
and
pop
adc
adc
pop
inc
dec
push
bound
popf
xor
adc
jnp
adc
lcall
inc
adc
dec
je
mov
push
and
sub
push
js
les
scas
push
jo
and
and
sub
adc
inc
test
pop
imul
fistl
add
sbb
xor
adc
scas
jbe
jg
and
das
adc
jmp
push
scas
sbb
jmp
je
mov
lock
adc
inc
and
inc
mov
add
sbb
adc
push
mov
mov
xor
adc
dec
das
and
inc
fists
aaa
mov
inc
and
and
inc
xor
xor
push
inc
pop
adc
inc
adc
mov
and
adc
and
cmp
adc
inc
add
inc
sub
gs
arpl
adc
subl
adc
shll
cmp
mov
and
adc
mov
sti
inc
ja
or
push
and
dec
adc
adc
cmp
inc
lea
dec
jae
push
push
and
push
les
ret
mov
das
pusha
jne
test
mov
jne
pusha
loope
adc
in
push
and
shl
mov
xchg
pusha
xchg
adc
sub
stos
out
and
out
and
push
jbe
mov
mov
and
adc
push
lea
and
jge
and
cltd
cmp
enter
push
jl
mov
dec
and
jg
and
adc
inc
mov
lods
add
inc
add
adc
lods
add
jle
and
aas
dec
mov
sub
addl
adc
cmp
inc
pop
adc
mov
inc
xor
or
xchg
pusha
test
mov
inc
dec
adc
and
and
push
notl
pop
and
inc
push
add
mov
mov
and
fcmovb
mov
mov
daa
das
push
and
cmp
add
jb
adc
dec
sub
sahf
popa
inc
and
add
push
and
adc
push
inc
into
dec
xchg
xchg
sub
pop
into
jae
and
jle
je
and
cmp
jg
in
sub
adc
adc
jle
add
add
jb
adc
and
and
adc
sbb
inc
call
idiv
mov
sbb
popa
adc
jge
and
pop
and
movl
and
shll
lret
adc
loopne
adc
incl
adc
adc
cmpsl
dec
inc
or
add
jbe
and
inc
push
mov
add
rorb
sub
pop
adc
jne
shlb
sbb
inc
cld
adc
push
and
push
movl
xor
adc
mov
cltd
idiv
inc
or
adc
movl
and
loopne
mov
jo
adc
sub
aaa
and
popa
and
push
mov
mov
push
and
and
adc
push
test
adc
mov
pop
pop
lcall
and
scas
adc
sbbl
je
inc
and
cli
and
and
aas
adc
orb
jl
and
push
push
mov
and
lods
fcoms
jae
js
mov
adc
scas
jl
adc
fists
push
inc
dec
adc
lcall
push
stos
and
in
inc
lods
xchg
es
inc
and
jb
push
pop
mov
sub
and
lret
movups
inc
out
sub
cmp
inc
adc
icebp
orb
and
cmp
lea
inc
adc
inc
or
insb
inc
mov
pop
roll
add
push
pusha
mov
sub
add
mov
mov
mov
inc
sbb
cmp
pop
jl
outsl
lcall
xchg
sub
rorl
push
pusha
push
outsl
fisttpll
dec
cmp
mov
mov
add
rorl
rclb
nop
and
jg
adc
and
popa
fisubs
scas
push
and
sub
adc
mov
fs
adc
loope
and
and
adc
sbb
or
out
cmp
jae
mov
inc
inc
in
inc
cmp
jle
mov
mov
mov
mov
dec
push
adc
and
and
pop
and
and
and
movsl
lret
jb
adc
shll
mov
adc
add
cmp
and
sbb
cmp
jle
mov
dec
and
mov
add
cmpsb
cli
adc
outsl
xchg
and
cs
xor
and
adc
lea
add
mov
sub
adc
mov
mov
sub
dec
popa
das
test
adc
cmp
xchg
sarb
or
sbb
out
dec
or
adc
mov
add
cmp
jae
mov
inc
mov
inc
inc
add
cmp
jb
subb
outsb
and
jl
push
mov
sub
pop
adc
mulb
adc
mov
push
and
lods
or
adc
popa
push
adc
mov
shlb
inc
daa
data16
dec
jo
push
add
add
push
jne
inc
or
test
push
adc
and
cmp
and
inc
test
jl
sub
xor
das
adc
and
mov
mov
cmpsb
pop
fsubrs
sub
and
aaa
adc
push
cmpsl
adc
xor
and
call
sbb
sbb
sar
mov
andb
mov
sub
je
mov
dec
jmp
adc
xor
and
push
xor
andb
adc
or
dec
jne
cwtl
lret
adcb
pop
incl
sbb
or
sar
mov
and
and
mov
xchg
adc
mov
imul
xchg
mov
xor
mov
and
mov
adc
frstor
adc
pop
xor
xchg
adc
inc
mov
add
and
adc
mov
and
inc
adc
pop
adc
add
add
and
bound
mov
and
pusha
push
pop
add
inc
inc
pusha
movhps
lea
movsl
dec
bound
mov
lea
inc
inc
inc
lea
inc
adc
mov
mov
inc
mov
adcl
lock
adcw
rolb
inc
add
ret
lea
inc
inc
lea
jno
xorb
lea
inc
cmp
adc
mov
pusha
adc
xor
cmc
adc
inc
or
lea
lea
add
clc
inc
xor
mov
bound
inc
cmp
subl
adc
insb
mov
add
inc
mov
sbb
ret
jmp
pop
pop
pop
jg,pn
lret
mov
adc
pop
and
adc
mov
sub
adc
push
pop
add
jle
add
and
adc
pop
and
sbb
adc
adc
or
adc
daa
sbb
sub
bound
je
sub
adc
jne
inc
inc
pop
movsb
adc
pop
xchg
adc
fs
and
inc
sbb
mov
and
aas
and
adc
xor
shrb
add
and
adc
pusha
inc
adc
pop
es
add
jmp
and
ds
push
out
adc
dec
inc
cmp
adc
mov
jb
or
sbb
xor
addb
mov
cmp
mov
jle
mov
jle
inc
movl
and
stos
out
or
inc
jl
push
imul
inc
jl
and
inc
adc
push
inc
add
rolb
scas
or
outsl
cmp
cmp
adc
push
and
jg
mov
lea
adc
adc
mov
imul
dec
adc
inc
sldt
adc
mov
xchg
add
mov
mov
mov
mov
sar
mov
mov
mov
add
out
adc
mov
unpcklps
jmp
mov
push
pop
or
sub
inc
cmp
aam
bound
add
pop
nop
fwait
adc
mov
adc
mov
xor
dec
and
adc
jle
lods
adc
js
sub
cmpsl
adc
inc
push
lea
sbb
sub
inc
mov
dec
mull
jge
adc
sub
mov
dec
and
mov
and
dec
cld
and
ss
and
test
jbe
cmc
je
pop
sub
sub
cmp
sub
mov
cld
and
mov
mov
inc
mov
sbb
icebp
adc
xchg
cmp
sbb
add
mov
mov
and
pop
adc
gs
and
adc
cmp
adc
adc
xor
cmp
add
xorb
arpl
mov
jne
jns
and
andb
sub
xchg
adc
test
and
inc
fwait
adc
mov
dec
sub
push
xor
add
js
imul
and
xor
adc
jle
mov
adc
gs
pusha
pop
add
test
jbe
mov
inc
mov
add
dec
jne
push
adc
fsts
bnd
and
daa
popa
nop
addr16
in
roll
add
sub
gs
outsl
or
adc
dec
pusha
mov
adc
adc
and
cmp
xor
adc
and
es
aad
jae
out
add
adc
out
adc
rorb
and
addr16
adc
and
lea
out
adc
xchg
adc
out
sbb
xor
shr
inc
mov
and
dec
or
iret
adc
mov
and
mov
jmp
adc
popa
adc
popa
adc
mov
les
out
sub
je
pop
scas
inc
sbb
add
pop
sbb
adc
sub
mov
push
cld
xchg
addb
and
pop
adc
mov
inc
or
mov
sbb
sub
sub
jp
adc
fwait
cmpb
push
jmp
inc
sbb
cmpl
cmp
test
ret
js
jl
bound
adc
test
push
xor
xchg
aad
mov
and
dec
adc
movsb
sbb
adc
inc
adc
mov
adc
push
jo
dec
or
daa
adc
jo
inc
jnp
xor
mov
adc
sarl
inc
and
inc
or
pusha
inc
lret
adc
dec
mov
xor
and
adc
adc
sub
pusha
pop
subb
mov
daa
sbb
sub
xor
scas
adc
sub
scas
add
inc
sub
add
sbb
scas
add
adc
scas
add
adc
scas
adc
mov
adc
scas
add
adc
and
mov
movl
dec
je
dec
sub
mov
fistps
or
mov
sub
and
adc
inc
jb
xor
push
adc
bound
push
lea
lea
push
and
daa
mov
and
dec
adc
popa
mov
xchg
test
outsl
inc
pusha
aas
fs
add
stc
dec
inc
insl
jl
sub
incl
mov
jns
adc
or
pop
and
mov
and
dec
and
inc
inc
nop
dec
and
adc
and
add
mov
mov
jmp
pop
fcoms
incl
cmp
dec
inc
mov
and
or
adc
lea
and
push
push
push
call
mov
inc
dec
pop
inc
mov
mov
inc
mov
and
and
cmp
adc
adc
xor
and
adc
mov
inc
lahf
outsb
pop
jge
imul
xor
add
push
or
sbbb
add
ljmp
adc
rolb
mov
adc
inc
gs
xchg
adc
inc
pop
xor
mov
xor
mov
adc
adc
xorl
sar
mov
inc
mov
lea
add
and
sbb
mov
pusha
sub
inc
loopne
adc
cmc
rcrb
and
mov
and
cs
jbe
sub
inc
adc
xchg
adc
test
sub
jo
je
inc
lcall
movsb
mov
xchg
dec
adc
orb
xchg
mov
add
mov
mov
adc
add
pusha
or
push
add
add
adc
and
pop
cmp
imul
sbbl
sbb
push
and
sub
sbb
or
and
stc
adc
lea
inc
fcoml
xor
jbe
pop
adc
mov
pop
dec
or
xchg
xchg
iret
adc
popa
jg
push
jo
jo
sbb
bound
test
inc
int
pop
mov
inc
inc
and
gs
pop
inc
cmp
sub
es
fstl
add
lahf
pusha
mov
cmp
jl
sub
adc
inc
mov
adc
and
inc
push
pop
lea
mov
mov
xchg
cmp
cmp
shll
leave
out
adc
inc
push
sub
loopne
addr16
mov
sub
xor
shrb
pop
loopne
adc
sub
adc
sub
adc
inc
jns
sub
push
mov
gs
popa
popl
and
inc
iret
popa
loop
adc
test
and
push
adc
inc
inc
ljmp
mov
dec
adc
sub
jp
and
cmp
xchg
add
pop
and
xor
xor
jmp
loop
adc
inc
test
sbb
bound
rcll
add
adc
and
pop
andb
flds
stc
add
loopne
inc
pushf
adc
add
mov
sbb
sbb
lret
lahf
inc
iret
sub
adc
shlb
adc
jne
push
and
dec
inc
push
and
and
dec
orb
push
add
and
aas
adc
sahf
push
push
pop
and
jnp
xor
and
adc
or
sti
and
xor
inc
sbb
jl
movl
sbb
aaa
mov
cmp
dec
fxch
xor
cmp
je
dec
add
add
nop
push
and
and
mov
and
sbb
mov
cmp
and
adc
pushf
adc
and
adc
loopne
test
add
mov
imul
pop
sub
push
es
or
adc
mov
and
and
and
aad
mov
adc
xor
inc
in
lock
data16
mov
mov
push
add
dec
dec
jne
lea
lea
mov
mov
neg
inc
mov
mov
inc
sbb
roll
sbb
lret
cmp
jl
cmp
and
xor
jno
mov
neg
lea
sub
mov
repnz
mov
outsl
adc
pop
jle
mov
and
lea
pop
and
xor
dec
push
adc
fs
pop
adc
push
rcll
cmpl
mov
ret
adc
subb
adc
cmp
bound
cwtl
cmpb
inc
inc
pop
and
fistl
sbb
push
es
jecxz
testb
add
sahf
and
and
popf
test
jp
pop
mov
and
cmpl
push
adc
mov
adc
and
adc
xorb
and
dec
jne
inc
mov
push
mov
inc
dec
adc
sbb
adc
out
adc
or
adc
or
std
inc
push
push
rorb
shr
shl
shr
leave
enter
add
call
incw
push
sbb
mov
test
ja
dec
mov
adc
dec
jne
mov
adc
test
adc
popa
xchg
adc
mov
inc
ds
icebp
adc
push
jo
push
adc
jle
jl
dec
push
adc
enter
push
imul
inc
pop
xor
mov
test
jbe
xchg
push
mov
xchg
add
pop
test
scas
and
shr
push
push
mov
xor
mov
mov
shr
shl
add
inc
pop
xchg
adc
xchg
adc
adc
mov
adc
ss
rclb
mov
push
jo
sub
leave
mov
inc
and
inc
adc
stos
and
and
test
adc
es
sub
cmp
jo
and
mov
and
mov
mov
and
dec
sbb
sbb
sti
add
std
add
incl
mov
rcrb
cmc
lea
loop
adc
jecxz
inc
mov
shl
and
inc
adc
push
inc
into
adc
push
push
pop
inc
mov
aas
and
adc
xchg
and
dec
cmp
push
push
inc
and
adc
aas
mov
lea
aam
andb
mov
add
loope
shl
mov
adc
xor
adc
inc
cmp
and
cli
lock
and
dec
fstl
mov
dec
jae
sbb
and
test
add
jne
add
dec
jne
pusha
dec
and
adc
adc
and
xchg
and
dec
and
adc
adc
adc
outsl
sbb
nop
adc
mov
lea
testb
cli
and
adc
sbb
or
lea
sar
sar
test
jb
and
jle
andb
xor
ds
add
add
inc
and
jmp
loopne
inc
cmp
add
add
cmp
jge
mov
sub
shl
imul
add
pop
shlb
push
add
leave
mov
shl
imul
cmp
jge
mov
sub
push
mov
fimuls
scas
fiadds
shrl
int
xor
adc
inc
cmp
roll
xor
cmp
jg
sub
jmp
cmp
jle
inc
xor
cmc
daa
xor
adc
and
and
inc
adc
add
bound
popa
inc
cmp
adc
lret
jge
inc
xor
repz
lea
sbb
roll
jmp
cmp
adc
inc
je
mov
into
inc
std
adc
sbb
sub
xor
inc
and
add
or
add
lret
subb
push
mulb
fistpll
adc
inc
lock
xchg
mov
and
ret
xlat
jno
adc
mov
inc
andl
sbb
aad
pop
xchg
aas
sbb
cmp
jg
mov
inc
inc
pusha
xor
lret
jl
mov
jae
adc
adc
les
mov
and
rep
inc
xchg
cmp
jmp
adc
mov
and
dec
and
fists
xor
loop
adc
and
and
mov
rorb
out
inc
push
inc
adc
shl
mov
inc
cmp
pop
push
sub
xor
lea
dec
popf
mov
adc
mov
mov
inc
and
sti
mov
imul
lea
and
or
inc
jl
xlat
mov
sbb
in
shl
shl
jp
and
inc
adc
ret
inc
adc
pop
jo
push
xor
imul
adc
push
inc
dec
adc
mov
add
and
cmp
mov
inc
dec
jne
adc
push
int3
ja
pusha
push
and
sbb
and
and
adc
insb
xor
add
add
insl
dec
inc
cmc
mov
fwait
inc
scas
inc
sbb
cmpsb
adc
mov
lahf
or
pop
pop
add
and
and
pop
push
cmpsl
jge
mov
inc
sbb
in
pop
pusha
ret
adc
cmp
and
popa
loope
dec
and
cmp
push
inc
inc
adc
adc
jle
insb
push
adc
adc
and
and
adc
orl
pop
jo
adc
dec
adcb
je
add
xor
and
mov
sbb
dec
std
pusha
and
lea
mov
aas
pop
jo
inc
dec
add
adc
outsb
and
ss
and
mov
mov
inc
unpckhps
pushl
idivb
lret
xchg
xor
adc
and
push
adc
ds
movswl
lea
dec
adc
stc
add
ja
adc
adc
lret
cmp
mov
adc
repnz
daa
adc
lea
insb
shlb
or
cmp
test
adc
add
adc
mov
and
push
adc
push
adcl
dec
dec
adc
popa
sahf
jbe
sbb
mov
add
xor
sar
test
push
dec
adc
adc
cli
inc
adc
jns
adc
adc
inc
jge
dec
add
adc
aam
inc
pop
scas
mov
js
mov
lcall
shlb
jbe
adc
mov
adc
cld
adc
and
sub
pusha
xchg
pusha
or
pusha
sub
and
mov
add
add
add
mov
inc
stc
pusha
or
adc
insl
hlt
push
iret
add
add
add
inc
and
adc
pusha
or
outsl
adc
sbb
lret
add
add
add
inc
and
mov
adc
pusha
int3
jnp
adc
inc
adc
in
adc
and
and
lea
dec
xor
add
dec
inc
sbb
jo
push
jbe
mov
lret
cmp
xor
and
dec
adc
cwtd
insb
inc
cmp
pop
outsl
pusha
or
sbb
adc
pusha
or
sbb
or
jl
adc
pop
inc
or
jne
data16
aas
and
fcoml
dec
adc
adc
and
adc
and
push
adc
inc
mov
push
add
pop
lds
push
cltd
adc
mov
push
push
mov
and
adc
cmp
or
bound
push
sbb
adc
push
adc
das
push
and
sbb
jg
call
jmp
adc
adc
aam
and
push
pop
and
fnstsw
pop
inc
push
adc
fisubs
es
jne
and
and
adc
pop
dec
and
jo
mov
mov
mov
xor
and
cmpsb
and
aaa
je
jle
and
and
jge
rclb
inc
rcll
nop
push
jg
shll
pusha
fldl
sbb
add
lea
cmp
mov
mov
jg
mov
add
test
jne
inc
inc
xchg
adc
gs
inc
cmp
jle
and
and
and
push
xor
adc
into
push
and
mov
cltd
movsl
gs
cwtl
bound
cmp
jle
pusha
mov
push
stos
adc
bound
inc
mov
dec
and
aad
adc
mov
adc
xor
push
dec
sub
mov
inc
inc
or
adc
xor
inc
add
testl
adc
jg
dec
sub
add
shll
pop
pop
je
adc
clc
jg
push
sub
and
lea
mov
mov
jb
adc
cmp
jg
or
jae
pop
test
jne
inc
cmp
inc
mov
inc
sbb
adc
jle
rorb
xchg
jle
jmp
and
inc
adc
inc
fs
orb
mov
jnp
cmp
adc
mov
cmp
add
dec
sub
test
jge
test
pop
sbb
jge
xchg
and
and
cmpb
adc
stc
jg
and
mov
add
and
iret
shl
lea
push
lods
inc
pop
adc
jg
and
adc
rolb
adc
pusha
xchg
inc
inc
mov
adcb
cmp
mov
adc
jle
inc
jg
hlt
xchg
and
push
inc
sbb
cmp
jle
mov
and
xor
adc
mov
and
adc
jnp
adc
loopne
adc
scas
adc
jge
jmp
outsl
imul
mov
xlat
popa
mov
sub
sub
mov
lea
pop
jle
or
adc
imul
mov
shl
push
out
and
dec
push
fcoml
add
adc
pop
mov
repnz
in
and
sub
adc
ja
inc
push
adc
add
arpl
or
xchg
inc
dec
and
jg
bound
adc
jnp
adc
xchg
cmp
jg
lea
pusha
rcll
je
inc
inc
ficoml
dec
jne
lahf
adc
in
ret
adc
push
test
iret
dec
push
mov
pop
mov
mov
push
adc
push
sub
aad
adc
cmp
jge
or
mov
popf
ja
mov
je
and
adc
push
jg
rcrl
sarl
sar
and
adc
and
and
cmp
adc
hlt
mov
mov
mov
mov
jbe
adc
push
movsb
adc
or
adc
and
xchg
adc
push
fcoml
mov
sub
mov
arpl
std
and
and
push
adc
cmp
shl
adc
add
jle
mov
inc
dec
adc
jle
mov
sub
je
dec
je
dec
jne
mov
mov
add
and
adc
jae
jmp
mov
inc
dec
and
pop
adc
jmp
inc
adc
and
and
push
gs
into
das
and
addr16
and
and
sub
sub
inc
add
mov
clc
lahf
jnp
cwtl
jo
mov
data16
loop
daa
out
push
dec
push
pop
test
cmp
or
add
inc
ficoml
adc
jle
mov
dec
fistl
mov
and
std
adc
ret
pop
das
push
sub
aas
add
adc
inc
adc
sarb
aaa
adc
sarl
inc
aaa
adc
icebp
sbb
pushl
jb
inc
call
adcl
jno
jb
adc
jg
or
push
push
mov
ss
icebp
and
inc
imul
je
lea
and
imul
orb
and
test
cmpsb
popa
fldenv
xor
int
inc
lods
adc
sbb
jns
lcall
imul
push
push
cmc
inc
xor
mov
inc
dec
and
adc
je
mov
add
mov
inc
push
jnp
jae
inc
push
adc
pusha
adc
sbb
and
push
xchg
and
dec
jne
cmp
je
adc
add
ret
inc
or
jge
jne
lcall
adc
and
rorl
inc
popa
push
jl
push
ficoml
sub
cmp
adc
cmp
dec
adc
and
adc
mov
push
adc
adc
mov
pusha
and
pusha
sbb
push
or
adc
fbld
scas
adc
cmp
out
adcl
and
inc
adc
leave
and
adc
pusha
jp
aad
and
lea
xor
pop
adcl
mov
pop
dec
and
testl
adc
adc
and
push
jl
cmpsb
jle
pusha
adc
fidivl
daa
push
adc
adc
adc
mov
or
sub
add
jne
jo,pn
inc
and
mov
xchg
adc
and
sub
push
in
cmp
and
jle
stc
and
sub
sbb
std
and
adc
mov
jle
push
mov
xor
inc
ljmp
adc
jno
adc
and
adc
pop
test
jle
mov
add
mov
adc
sub
sarb
dec
mov
stos
adc
jle
add
inc
test
adc
jl
test
jecxz
or
push
js
fmull
cmp
and
adc
mov
inc
cmp
mov
mov
xchg
adc
test
adc
dec
adc
sub
and
jne
pop
inc
and
adc
js
push
pusha
and
pop
add
sbb
cmp
mov
jle
lea
imul
dec
jne
cmp
jle
dec
cmp
loopne
and
adc
jle
add
push
sub
rep
imul
dec
jne
mov
pop
scas
adc
repz
adc
int3
sub
xor
jns
add
test
mov
jmp
mov
pop
xchg
adc
adc
pop
sbb
scas
sarl
jg
xchg
mov
call
inc
mov
arpl
and
push
and
inc
arpl
adc
xchg
and
mov
and
push
and
sbb
lock
sub
mov
test
pop
and
pop
mov
push
xor
sahf
bound
cmp
and
dec
xchg
adc
bound
inc
sbb
or
movsl
and
or
dec
sbb
shrl
and
push
and
cs
js
inc
adc
stos
adc
and
cmp
or
and
ret
adc
and
test
addb
and
adc
mov
shll
mov
and
fisttpl
adc
push
push
les
inc
push
adc
and
dec
in
adc
jle
popa
aaa
adc
sbb
out
adc
xchg
adc
inc
jne
jmp
imul
imul
mov
inc
cmp
iret
shlb
mov
sub
lea
mov
inc
mov
mov
add
adc
cli
popa
adc
adcl
loopne
ret
and
mov
mov
shl
sub
lea
leave
mov
aas
addr16
dec
jo
mov
or
adc
and
push
lea
push
dec
insb
push
fst
and
out
adc
je
adc
and
adc
in
mulb
mov
adc
lds
adc
je
and
das
les
jns
push
inc
inc
lea
cmp
and
adc
push
daa
push
add
jb
xor
lea
or
js
loop
jno
or
pop
fs
or
mov
inc
ret
js
xchg
in
sarb
in
mov
inc
sbb
outsl
xor
outsl
pop
movsb
mov
outsl
xor
daa
pusha
or
cltd
addb
loopne
and
inc
adc
adc
loopne
sub
and
sub
movsb
adc
daa
pop
ds
lea
mov
inc
gs
jle
lea
cmp
je
and
adc
jl
and
adc
and
hlt
adc
inc
and
lock
lock
pop
mov
leave
pop
mov
push
pop
adc
addl
pop
dec
adc
jno
adc
mov
and
dec
dec
jl
mov
rcr
mov
loop
bound
stc
dec
pop
pop
cld
jl
add
cmp
iret
mov
mov
adc
es
pop
adc
sbbb
and
mov
mov
push
jecxz
add
pushf
push
adc
icebp
and
lods
pusha
xor
add
jno
and
dec
and
jle
ja
adc
mov
imul
sub
lret
jne
fwait
pop
inc
sub
lret
adc
push
adc
jne
popf
add
and
push
adc
inc
loop
arpl
and
adc
pop
pop
and
sub
adc
mov
jo
repnz
inc
sbb
and
imul
mov
and
and
sub
sbb
sub
and
and
xchg
adc
test
jbe
aad
adc
and
push
push
shll
leave
inc
mov
jno
and
and
sub
fwait
enter
sub
adc
lret
and
xor
adc
push
xor
jb
sub
sub
push
mov
js
inc
pusha
cmp
test
cmp
sbb
and
mov
and
popa
jnp
xor
lret
push
xorl
xor
fs
adc
rclb
or
add
es
push
and
lea
and
cmp
lods
and
sbb
adc
aam
popf
xchg
push
cmp
add
mov
mov
add
add
xor
cmp
jbe
inc
shlb
loopne
adc
mov
popa
pop
adc
fiaddl
adc
adc
mov
popa
cs
add
inc
inc
and
jl
adc
dec
aaa
int
inc
push
and
aas
aaa
adc
into
adc
je
gs
mov
adc
ret
sbb
inc
mov
subl
mov
jo
jmp
jns
adc
test
mov
lahf
in
jo
stc
cmpsl
jg
sbb
mov
mov
lret
sub
push
and
and
pop
sbb
mov
mov
mov
add
jae
sbb
mov
shl
add
pop
push
dec
jg
sub
adc
hlt
adc
push
adc
and
dec
adc
rcrl
xor
and
inc
adc
xor
adc
and
loopne
adc
push
pop
adc
inc
inc
and
adc
inc
mov
inc
lret
adc
adc
dec
xchg
hlt
inc
or
push
and
ret
dec
pop
inc
or
movsl
adcl
adc
xor
cmp
test
mov
sub
and
insb
jo
inc
adc
js
dec
xchg
mov
inc
in
andb
js
adc
mov
inc
and
sub
dec
sub
and
sub
pop
adc
ret
bound
sbb
inc
mov
adc
inc
and
fsts
xor
mov
add
and
aas
adc
and
add
add
movsl
iret
mov
adc
neg
ret
andl
and
mov
push
jne
and
inc
dec
adc
mov
inc
inc
test
dec
sub
adc
rclb
inc
and
adc
inc
or
adc
jae
adc
adc
sar
add
jns
and
or
mov
add
mov
xchg
mov
adc
push
dec
sub
add
mov
and
stos
adc
push
push
adc
mov
adc
and
pop
and
push
adc
mov
and
adc
jle
jae
jne
xchg
aaa
and
cmp
jne
adc
mulb
std
jb
adc
mov
insl
ljmp
adc
dec
adc
inc
add
insb
mov
xchg
and
xor
pop
addr16
sub
or
sub
xchg
cmpb
mov
roll
push
push
mov
and
popa
sbb
in
jbe
ja
adc
jae
repz
data16
or
inc
pusha
or
and
or
xor
adc
inc
or
and
inc
gs
adc
and
adc
addb
adc
jnp
push
push
adc
orb
adc
clc
or
jae
push
movswl
imul
pop
movsb
dec
mov
add
inc
mov
mov
and
adc
mov
ret
daa
adc
sbb
or
mov
inc
mov
movswl
imul
imul
movaps
dec
mov
shl
sub
pop
addb
lea
shl
add
movswl
lea
lea
pop
sbb
adc
call
in
add
mov
sub
shll
add
clc
shl
sub
lea
mov
adc
and
pop
subb
dec
mov
shl
shl
lea
and
cs
inc
lea
sub
mov
pop
dec
or
movswl
adc
rclb
mov
inc
xchg
mov
ds
inc
pusha
and
pop
adc
scas
frstor
adc
sub
add
and
and
push
arpl
add
movswl
lea
shl
add
and
lea
data16
push
sbb
shlb
jmp
outsb
push
adc
mov
neg
inc
pop
adc
ret
shl
pusha
add
or
ret
shl
sub
movswl
mov
shl
sub
adc
pusha
add
add
jmp
mov
imul
and
adc
sub
adc
pusha
dec
inc
adc
testb
or
inc
xor
add
ds
xchg
fwait
pusha
lcall
imul
and
sub
adc
fstl
adc
add
pusha
fwait
insb
loopne
lods
adc
push
add
and
lea
les
lea
xchg
push
and
lods
sbb
and
push
adc
clc
or
sar
mov
and
add
xchg
roll
pop
adc
adc
sti
or
inc
les
inc
subb
add
cmp
adc
adc
andb
adc
decl
pusha
daa
adc
jle
imul
dec
adc
xor
push
fwait
adc
addl
pop
mov
xor
icebp
adc
adc
adc
adc
je
adc
mov
adc
orb
xor
rorb
xlat
or
jne
mov
add
jae
add
sbb
mov
mov
mov
add
add
add
inc
add
inc
pop
inc
or
call
add
inc
add
mov
scas
add
push
lea
shl
add
movswl
mov
lea
lea
push
mov
inc
loop
add
inc
or
out
inc
sbb
cmc
add
push
lea
addr16
lea
sub
ret
adc
fists
lea
fistl
insb
mov
jne
adc
jne
and
pop
add
adc
push
mov
sub
fsubl
insb
mov
lds
mov
add
sub
xor
adc
imul
pusha
pop
inc
lcall
inc
mov
adc
and
sub
ret
xor
inc
mov
call
jecxz
add
adc
bound
adc
rol
sti
adc
dec
dec
inc
push
adc
sar
mov
mov
mov
mov
lea
inc
sbb
add
adc
call
inc
and
and
add
inc
inc
mull
adc
adc
pusha
xor
and
adc
clc
pusha
xor
mov
and
inc
sub
adc
adc
pusha
cs
daa
arpl
adc
andb
mov
add
and
scas
sub
sub
adc
sahf
stc
push
adc
inc
pop
and
pop
xchg
xchg
xchg
push
mov
dec
cltd
adc
cmpsb
pop
and
inc
lea
cmpsb
pop
adc
jo
mov
pop
dec
push
inc
or
push
pusha
or
sub
or
push
ljmp
inc
or
ret
adc
jge
adc
out
jo
adc
pop
pusha
orb
and
add
or
js
add
imul
add
mov
mov
mov
mov
mov
aas
pop
adc
xchg
mov
imul
nop
xor
adc
jnp
mov
inc
lods
adc
imul
mov
adc
scas
std
imul
movswl
mov
scas
fisttpll
lea
sub
lea
lea
mov
sahf
lea
shl
sar
sub
sahf
inc
adc
jg
adc
cmp
sub
push
inc
pop
inc
pop
and
adc
arpl
adc
ret
adc
decb
adc
pushf
andb
xchg
adc
sub
popf
test
fs
sbb
shl
sub
sbb
sub
lea
lea
jp
adc
test
neg
sar
inc
sbb
sar
adcb
sub
add
lea
lea
sbb
add
mov
mov
fisttps
and
inc
roll
sar
adc
jns
adc
add
mov
outsl
sub
adc
mov
cwtl
test
sbb
cwtl
adcl
inc
icebp
adc
adc
mov
sub
adc
sub
adc
adc
inc
pop
adc
adc
adc
lods
inc
ret
pop
pop
mov
lods
and
or
adc
dec
dec
adc
nop
sub
adc
xchg
adc
int
lods
sub
adc
out
mov
dec
jp
pop
adc
or
or
adc
or
jne
mov
es
adc
mov
movswl
push
add
add
push
add
push
gs
in
stos
mov
lea
sub
mov
add
adc
lea
lea
lea
lea
shl
sar
sub
sub
adc
dec
and
inc
and
sub
adc
sub
test
fldenv
pusha
or
sub
fs
je
je
adc
and
mov
stc
adc
popa
fiadds
sbb
sub
lea
lea
push
clc
inc
xchg
adc
fldenv
adc
sbb
inc
inc
and
xor
adc
sub
sub
loop
popf
test
lea
xor
roll
sbbb
shrl
adc
sub
sti
add
sbb
mov
incl
sbb
and
sub
pop
pop
lea
sub
and
inc
les
or
adc
mov
lea
stc
sub
add
mov
mov
pop
adc
lret
sar
and
xor
sub
adc
ljmp
inc
push
adc
out
adcb
mov
inc
cltd
addb
adc
lock
cwtl
imul
cmpsl
add
lahf
adc
adc
inc
pop
and
mov
imul
adc
cwtl
mov
fs
push
add
repz
scas
les
adc
xchg
addb
jo
or
push
addb
fs
xor
push
and
in
fmuls
fsts
fsts
fsts
fsts
fsts
adcl
adc
addl
adc
movswl
imul
mov
dec
adc
adc
adc
outsb
inc
inc
or
flds
adc
mov
adc
leave
fmulp
movswl
inc
and
pop
data16
fld
fadd
inc
movups
inc
nopl
fxch
fsub
fxch
fstp
flds
adc
inc
xchg
inc
pop
adc
fsubs
push
or
cmc
loope
and
adc
das
inc
cwtl
inc
or
xor
adc
inc
das
inc
inc
xorb
adc
shll
das
adc
inc
and
js
pop
adc
jl
inc
pusha
sub
mov
or
pusha
xchg
inc
pop
adc
sbbb
sbbb
sbbb
inc
pop
adc
insb
inc
sub
sub
adc
nop
adc
fsubr
sbb
push
addl
sub
sub
fs
dec
pusha
ret
mov
les
leave
fmuls
loope
cmp
add
adc
sbb
adc
andb
inc
or
adc
rorl
sub
test
shl
pop
inc
xor
cwtl
xorl
popa
inc
adc
adc
and
sub
ret
pop
and
and
test
fs
adc
xor
adc
bound
flds
fadds
flds
fsubs
and
mov
add
inc
movsl
sbb
inc
adc
push
flds
fsubs
iret
adc
mov
xchg
popa
sub
add
adc
pop
adc
fwait
inc
mov
fadds
pusha
add
adc
inc
cld
cmpb
inc
cld
fsubs
pop
pusha
sub
adc
inc
popa
pop
adc
rol
popa
andl
loope
adc
addb
xorb
rcll
rcll
and
ljmp
clc
add
mov
sbbb
add
sbb
adc
sbbb
je
pop
add
sbb
pusha
jmp
and
push
add
push
push
loopne
popa
adcl
adc
loopne
and
fadd
adcb
mov
adcb
out
and
adc
and
sbb
adcb
adc
insb
push
adc
jne
adc
mov
xchg
and
int
pop
and
gs
adc
faddl
pop
mov
add
sub
mov
pusha
outsl
repnz
es
es
and
scas
inc
cmp
mov
and
data16
inc
or
shlb
push
adc
pusha
or
insl
and
xor
or
and
adc
or
mov
or
or
test
jne
movswl
imul
shl
mov
mov
mov
mov
inc
jns
repz
mov
cmp
mov
mov
scas
pop
inc
js
add
adc
dec
inc
pusha
push
inc
out
add
leave
mov
sub
xlat
jmp
out
jmp
jmp
int
outsl
and
loopne
sub
lea
sub
scas
imul
mov
dec
cld
and
adc
mov
dec
dec
out
lret
dec
sti
adc
inc
pop
outsl
lds
mov
out
add
mov
mov
sub
imul
imul
adc
sub
mov
add
fsubrs
sub
fdivs
add
pop
inc
cmc
and
and
adc
insb
in
dec
call
push
sbb
in
cmc
lea
lea
lea
insb
sub
adc
jo
rclb
inc
sbb
aad
xor
add
mov
adc
dec
jg
add
lea
mov
adc
fldl
push
adc
or
inc
loopne
repz
inc
adc
dec
aas
and
inc
adc
cli
or
and
adc
dec
je
notl
add
cs
adc
popa
int
test
popa
iret
xchg
cli
adc
mov
aam
and
cmc
inc
and
and
and
push
and
shll
aas
and
xor
adc
into
pop
inc
and
adc
or
rcrb
and
testl
or
push
jne
mov
daa
cmp
adc
adc
adc
push
movswl
adc
inc
loop
adc
dec
outsb
sub
rol
loop
dec
xchg
adc
and
sbb
loope
sub
shl
lea
or
add
push
sub
dec
adc
sub
shll
mov
shl
mov
sub
movswl
mov
imul
dec
sbb
pop
dec
sbb
inc
cmpsb
adc
adc
cmpsb
adc
sbb
adc
ljmp
shll
dec
jecxz
cmpsb
add
cmp
and
adc
popf
adc
stc
mov
adc
lea
je
stc
adc
add
jo
adc
adc
inc
or
lea
mov
sar
insl
or
add
and
sar
sub
dec
add
adc
mov
add
arpl
sub
jbe
adc
jne
pop
and
pop
and
sub
push
mov
and
adc
push
mov
inc
mov
call
jp
sub
cmp
je
icebp
adc
orb
add
test
movsb
adcb
mov
adc
jnp
inc
loopne
cmc
or
or
mov
or
sbb
test
jne
imul
and
adc
inc
ficoms
notb
cmp
add
scas
repnz
push
and
shl
mov
pop
rorb
mov
movswl
and
xchg
lea
mov
insb
add
adc
and
push
pop
adc
repnz
sbbl
sub
adc
pusha
adc
push
loopne
adc
lea
xchg
ljmp
inc
pop
adc
scas
lea
inc
adc
or
mov
pop
adc
sbb
pop
add
and
dec
and
push
adc
and
outsb
adc
roll
and
and
pop
and
and
pop
add
jno
std
and
push
sbb
ret
or
add
or
jne
mov
and
sbb
mov
jmp
movswl
mov
and
adc
pushf
adc
pusha
clc
sbb
movswl
shl
dec
mov
add
lea
inc
xor
sbb
and
inc
out
fisubl
inc
adc
or
hlt
adc
repnz
adc
inc
in
adc
cli
push
popf
inc
or
cmp
push
cmpb
pop
dec
insb
pusha
mov
mov
mov
adc
and
loopne
pop
jne
adc
jno
lock
dec
push
push
bound
add
or
scas
and
insl
pop
push
jns
adc
stc
add
adc
test
and
add
inc
bound
adc
adcb
lret
negb
add
push
push
push
movb
js
adc
push
adc
mulb
shrl
adc
fsubrs
pop
andb
push
lea
cmp
jge
and
aas
aas
lcall
jge
cli
inc
scas
and
arpl
adc
shlb
and
adc
stos
ja
adc
testb
jg
mov
inc
adc
fsubl
mov
and
and
lock
adc
and
sub
dec
push
mov
adc
or
adc
ret
and
dec
cmp
out
leave
adc
leave
and
add
mov
mov
shlb
push
and
sub
lock
adc
mov
pusha
sub
sar
dec
sub
xor
push
sahf
cmpsb
das
push
adc
pusha
data16
cmp
adc
rclb
lods
mov
pusha
sbb
pop
add
jg
jg
and
insb
js
adc
and
adc
sahf
icebp
adc
popa
mov
dec
adc
dec
adc
mov
orl
clc
add
and
push
adc
call
cmp
adc
jb
push
mov
push
push
mov
and
js
sub
mov
mov
adc
pop
add
inc
sub
repz
cli
adc
pop
inc
and
inc
das
inc
or
cmp
shrl
adc
jl
les
push
and
ficoml
or
adc
and
mov
pop
adc
test
jne
inc
xor
aam
rcrb
adc
inc
outsl
cltd
adc
mov
adc
mov
xor
lea
adc
and
ficoml
sbb
and
sub
scas
add
jne
mov
mov
push
adc
adc
pop
cmp
mov
xchg
push
rorb
sub
and
jmp
inc
cmp
push
and
inc
add
rcrl
lock
sub
fidivl
iret
add
stc
pop
repz
adcb
push
mov
dec
inc
daa
inc
jg
add
jnp
and
adc
sub
and
sub
pop
ret
fsubs
mov
mov
adc
and
aaa
aaa
adc
jmp
dec
dec
and
and
push
adc
push
push
test
adc
jge
mov
gs
outsb
adc
aad
mov
adc
adc
push
mov
push
into
inc
cmp
pusha
addr16
adc
jbe
push
popf
adc
and
adc
rolb
in
jmp
and
mov
cmpsb
fcoml
je
and
and
adc
lods
js
pop
mov
rclb
xor
adc
adc
xor
aad
cmp
mov
adc
push
mov
mov
and
push
push
sub
xor
adc
es
add
adc
rorb
and
or
ljmp
cli
and
leave
adc
test
testl
push
or
call
mov
movl
loope
fistpl
add
push
mov
and
loop
adc
rorl
mov
lea
push
push
das
xchg
mov
mov
mov
and
adcb
cmp
lds
sbb
pop
pop
daa
aam
ret
repz
sub
pusha
mov
jo
and
in
adc
mov
adc
mov
fisubl
adc
push
lock
je
push
mov
push
push
push
and
iret
and
ret
adc
inc
and
out
mov
in
push
mov
add
inc
and
addr16
lahf
fsubs
adc
sub
inc
adc
push
and
inc
pop
add
je
mov
and
xor
fcoms
or
adc
and
adc
lds
sahf
jae
adc
mov
adc
das
jle
jl,pt
cli
add
rorb
je
and
cmc
cmpb
pop
mov
sub
or
out
adc
mov
jl
adc
mov
mov
cld
and
loopne
and
inc
gs
adc
and
and
roll
jbe
and
dec
loopne
jecxz
add
pop
add
clc
add
pop
add
adc
sub
add
andl
pusha
and
sub
and
pop
pop
data16
daa
test
adc
jmp
xor
data16
xchg
ret
loop
adc
push
push
es
sbb
cmp
xchg
and
and
add
push
xchg
mov
inc
cmc
adc
mov
inc
xlat
pop
inc
sbb
push
shr
xorb
dec
ficoms
mov
mov
and
mov
sbb
dec
and
jb
shll
dec
repz
lahf
ja
and
and
sub
add
in
and
mov
and
adc
push
mov
inc
lea
and
inc
adc
jp
sub
add
das
and
and
mov
outsl
add
sub
mov
inc
push
and
fcmovnb
and
inc
sbb
enter
and
or
in
sbb
push
adc
and
ljmp
add
sbb
adc
jne
and
inc
adc
and
filds
add
add
aad
add
iret
add
xchg
ret
out
and
and
aas
adc
mov
jge
adc
cli
in
loopne
xorb
adc
je
xchg
and
sub
out
adc
jne
push
sub
inc
pop
and
mov
rorb
sub
adc
and
mov
pop
lods
and
push
adc
sub
sbb
adc
lea
and
pop
mov
aaa
mov
and
mov
and
and
icebp
and
and
and
inc
es
mov
jmp
jge
push
and
mov
fsubl
pop
in
sub
add
sbb
cs
bound
adc
add
adc
fisubl
imul
jp
pusha
mov
aam
and
xor
mov
and
push
and
push
and
arpl
adc
and
ret
push
daa
push
add
outsb
insl
adc
add
and
inc
add
push
adcb
in
and
and
cmp
mov
je
inc
push
mov
mov
nop
mov
mov
and
mov
sbb
push
shlb
in
sbb
push
and
xchg
mov
adc
mov
and
add
and
lock
xor
scas
and
sub
add
add
and
les
out
pusha
addb
cli
add
sub
call
xchg
sti
xor
pusha
add
ret
mov
mov
mov
das
int3
adc
pop
add
jmp
push
mov
push
and
mov
je
and
sub
xlat
dec
in
shl
inc
add
and
mov
or
and
int3
sub
push
in
add
adcl
adc
push
adc
shll
jmp
mov
lds
adc
push
stc
adc
inc
aas
and
xchg
and
mov
and
rcl
fistps
xor
dec
lea
adc
adc
test
jle
outsb
sub
mov
adc
mov
xor
lea
test
jle
push
mov
xor
add
inc
icebp
pop
cmc
cmp
mov
orb
xchg
pop
add
dec
jne
pop
pop
test
pop
jne
test
je
dec
out
bound
xor
pusha
add
stos
fsts
inc
add
mov
jne
pop
pop
lea
xchg
push
adc
pop
adc
adc
daa
aaa
loopne
clc
mov
lret
imul
mov
movb
test
jbe
push
mov
sub
cltd
add
pop
test
pop
jne
test
je
and
dec
adc
shlb
cmp
std
lret
adc
iret
shll
cli
shl
movb
imul
inc
inc
push
and
mov
arpl
inc
jne
mov
insb
and
adc
adc
cmp
loope
sbb
out
sub
add
push
and
and
add
pusha
decl
insb
int
and
adc
pop
pop
movsl
push
es
fisubrl
push
and
xor
ret
mov
sub
and
es
mov
mov
and
das
pop
add
cmp
fisttpll
or
adc
cmpsl
fsts
mov
and
inc
mov
gs
adc
add
mov
and
jno
sbb
inc
push
adc
test
inc
shll
test
pusha
lahf
loopne
arpl
add
pop
push
andb
out
adc
hlt
adc
and
and
aas
and
push
and
adc
mull
adc
xchg
je
and
leave
sub
pop
lret
and
mov
xor
adc
jmp
and
std
adc
push
push
push
push
and
adc
inc
adc
xorl
jae
and
repz
and
adc
xchg
sub
push
and
mov
and
adc
dec
or
cmp
inc
sub
add
push
test
adc
xchg
adc
mov
mov
adc
jmp
fistpll
adc
lea
and
je
jle
mov
mov
testb
inc
jg
dec
cmp
sub
pop
xor
adc
mov
sub
adc
rclb
je
pop
and
and
daa
js
and
js
adc
adc
and
imul
mov
sahf
bound
movl
adcb
inc
adc
in
and
shrl
inc
add
aaa
xor
gs
jno
inc
adc
loopne
cmp
jne
mov
call
lea
inc
pop
adc
pop
inc
adc
outsl
adcl
inc
sbb
movb
and
jne
adc
lea
xor
adc
adc
sarl
and
adc
jmp
adcb
and
dec
cmpsb
adc
adc
xchg
xor
andb
test
inc
add
or
rorl
cmpb
mov
xchg
pusha
and
add
inc
ds
and
sub
sub
adc
pop
addr16
mov
adc
pusha
or
push
xor
lock
adcb
adc
add
fs
adc
adc
adc
jecxz
loopne
adc
add
jmp
and
popa
jmp
icebp
sbb
popa
stc
sbb
and
and
sbb
mov
and
loopne
adc
cli
push
jmp
mov
mov
sarl
shlb
rolb
inc
inc
adc
ret
pop
adc
and
rorl
and
cwtl
adc
add
adc
mov
mov
adc
mov
pusha
sbb
adc
mov
pusha
cmp
push
or
das
adc
add
or
xor
adc
addb
mov
or
mov
or
xor
or
mov
fs
mov
insb
or
mov
xchg
and
xchg
dec
sub
pop
adc
inc
jmp
push
and
adc
adc
mov
sub
pushf
sbb
and
add
add
adc
and
add
add
add
add
in
pop
add
sub
add
and
add
adc
test
inc
out
adc
adc
dec
push
lea
push
orb
xchg
orb
cmp
or
pop
fwait
orb
hlt
incl
inc
or
cmp
aam
adc
mov
pop
and
ficompl
dec
call
add
das
add
outsb
repz
loope
sub
fists
cmp
inc
add
add
add
and
leave
and
iret
adc
inc
lds
mov
add
aas
add
in
jp
adc
test
dec
inc
dec
inc
add
inc
jg
test
mov
adc
int3
repz
test
adc
insl
add
pop
cwtl
mov
rclb
add
adc
pushf
push
adc
inc
adc
adc
imul
out
adc
and
and
sub
shlb
loop
and
pusha
pop
adc
fadd
adc
push
add
jno
mov
cmp
mov
neg
sbb
and
add
cmp
outsb
rcll
or
adc
and
push
call
lea
cmp
jb
inc
mov
inc
mov
icebp
mov
inc
add
ss
sub
adc
cmp
add
lret
and
push
iret
pop
ds
pop
mov
pop
mov
sbb
mull
add
test
sub
or
jge
loopne
daa
jnp
adc
inc
sbb
mov
adc
jl
loopne
adc
and
adc
and
jp
push
adc
adcb
scas
adc
mov
adc
pop
cmp
adc
adc
orb
dec
adc
push
popl
and
inc
adc
add
daa
or
data16
adc
pusha
adc
add
adc
and
adc
add
adc
adc
pusha
adc
dec
add
dec
and
cmp
cmpsl
inc
es
test
insl
and
into
adc
mov
mov
adc
mov
adc
ret
rorb
inc
or
add
xor
cmp
setne
dec
and
mov
es
add
dec
sub
adc
and
and
pusha
lret
and
xchg
and
sub
mov
jnp
cmp
jne
pusha
mov
test
xchg
pop
adc
test
adc
and
and
mov
ljmp
fcmovbe
adc
ret
adc
iret
je
jnp
adc
scas
sub
mov
and
adc
adc
inc
test
xchg
out
adc
dec
test
jne
and
mov
mov
sbb
rorl
and
and
add
or
inc
sbb
jg
pop
adc
out
adc
or
adc
fsubs
mov
iret
add
add
add
mov
inc
sbb
jmp
and
fwait
inc
sbb
orb
xor
push
int
and
push
inc
or
add
andl
fistl
or
adc
int
pusha
int
data16
cmovo
mov
adc
mov
adc
loopne
pop
adc
inc
lahf
and
mov
pop
adc
xchg
rolb
mov
sbbb
inc
sbb
aaa
ja
or
call
data16
and
and
and
and
das
adc
and
dec
and
inc
adc
adc
out
mov
adc
sbb
rcr
lods
jg
pushf
adc
mull
adc
or
push
in
pop
adc
mov
adc
and
adc
pop
adc
inc
decl
ret
rcr
push
adcb
lea
push
and
adcl
stos
and
cmp
push
sub
stos
iret
and
movsl
adc
adc
push
fstl
mov
and
enter
adc
and
mov
lea
dec
add
sbb
inc
adc
add
add
inc
adc
jne
fcoms
mov
xor
adc
xor
into
mov
jb
push
mulb
mov
adc
lahf
and
sub
adc
neg
out
mov
push
and
cmp
inc
inc
rolb
push
xor
sbb
pop
push
inc
insb
xchg
push
adcb
dec
sbb
fiadds
adc
push
cmpsb
jge
jne
gs
dec
or
jmp
pop
inc
pusha
pop
inc
sbb
mov
adc
sbb
add
int3
adc
push
jb
adc
mov
adc
sbb
adc
jecxz
and
mov
pop
adc
and
addl
pushl
push
mov
mov
push
and
adc
shlb
fs
popa
adc
shlb
adc
sub
cs
scas
xor
dec
fcoms
cli
xor
and
ret
mov
adc
repz
xchg
or
adc
cmpsb
outsl
adc
ret
je
mov
adc
clc
sbb
adc
xchg
and
test
addl
jge
xor
push
push
mov
mov
and
ss
dec
inc
and
jle
mov
add
inc
adc
inc
inc
sbbl
adc
mov
and
sbbl
jae
adc
sub
pop
outsl
push
mov
adc
inc
cmp
dec
mov
adcb
sarl
fs
adc
push
mov
cs
add
adc
push
push
push
lea
pop
leave
and
adc
inc
je
inc
cmp
push
push
roll
add
adc
inc
cmc
adc
push
jmp
inc
mov
sbb
popa
sub
repz
inc
repz
nop
daa
pop
add
add
and
jl
add
sarl
dec
xorl
cmp
jle
outsb
lret
push
inc
adc
xor
cmp
shll
mov
and
popa
adc
insb
jg
popa
lcall
dec
fs
adcb
add
xchg
lea
xor
cmp
and
adc
xchg
ret
jb
and
cmp
dec
je
mov
mov
push
adc
cmpl
and
call
in
pusha
insl
inc
sub
xchg
and
add
jecxz
data16
insl
aam
dec
inc
imul
adc
imul
push
pusha
inc
ja
pop
mov
jo
insl
and
inc
es
add
je
pop
addl
lret
inc
add
adc
lea
insb
cmpsb
adc
pop
and
add
add
sub
add
dec
sbb
push
sub
push
jmp
adc
ret
adc
jmp
mov
pop
pusha
push
ret
push
sub
movsb
inc
add
mov
mov
and
jne
add
adc
test
add
nop
mov
sub
sub
sub
jne
addb
lea
sbbl
data16
pop
adc
data16
adc
leave
and
and
inc
nop
cmpsl
adc
out
jp
adc
faddl
fcoml
add
loope
and
es
add
and
adc
loope
push
movsb
out
xchg
loopne
inc
punpcklwd
sbb
test
jae
sub
add
sub
add
add
sbb
inc
pop
inc
adc
test
arpl
sbb
insl
popa
sahf
and
popa
test
adc
inc
mov
adc
and
xorl
inc
and
cmp
sbb
adc
test
inc
xor
add
add
pop
or
xchg
call
and
daa
adc
inc
push
adc
fs
adc
add
add
jl
sub
add
movb
imul
movsb
and
add
rol
adc
and
add
sub
add
add
adc
pop
ljmp
jg
movsb
sub
add
sub
add
mov
mov
mov
jecxz
incl
and
and
nop
dec
insb
adc
mov
add
pop
inc
add
lahf
inc
add
mov
mov
add
bound
adc
inc
add
mov
add
mov
add
bound
adc
mov
add
cmc
inc
add
mov
add
cmp
add
pop
inc
add
test
add
movl
adc
inc
add
dec
inc
add
outsl
pop
ja
adc
les
adc
push
ja
pop
adc
stc
and
adc
mov
cmc
and
and
sub
test
adc
daa
add
dec
sub
pusha
daa
adc
sub
add
dec
sub
and
and
inc
popl
jg
pop
jle
pop
ret
sbb
pop
mov
and
and
inc
push
adc
sbb
adc
add
add
clc
leave
pusha
adc
xor
insb
and
adc
adc
adc
push
and
jno
xchg
xchg
pusha
adc
jo
adc
add
sbb
push
add
adc
cmp
and
cli
sub
loopne
in
add
lcall
sub
fwait
add
das
jl
xchg
mov
push
add
adc
mov
and
in
loopne
jo
xor
add
mov
fs
cmc
add
cmc
add
inc
add
and
sub
cs
add
xchg
add
inc
add
add
push
mov
dec
add
xchg
adc
dec
and
sub
adc
sub
lea
push
push
adcb
mov
and
mov
pop
pop
and
sub
add
dec
jg
mov
and
subl
cmpsb
xor
add
sub
adc
push
adc
inc
add
test
adc
inc
add
std
inc
add
rolb
inc
add
ss
add
dec
inc
add
mov
adc
inc
add
cli
inc
add
roll
inc
add
cmp
add
addb
les
adc
inc
add
lock
add
ret
sbb
add
xor
adc
add
pop
inc
add
je
add
mov
adc
inc
add
cmove
adc
add
out
outsl
mov
adc
add
daa
sbbl
das
mov
fdivp
adc
and
push
push
xor
dec
add
and
and
adc
movl
dec
push
xchg
adc
aam
adc
mov
sbb
or
dec
jno
adc
aam
xchg
push
lfs
mov
pusha
movups
je
adc
adc
adc
lea
adc
rorb
pushf
pusha
punpcklbw
adc
movl
cmp
push
inc
inc
and
pop
adc
js
push
adc
scas
and
cli
and
insl
imul
add
popa
sbb
clc
and
mov
ror
or
loopne
inc
adc
mov
fldl
inc
xor
lock
inc
movups
subl
sub
adc
sub
or
adc
adcl
pop
sub
add
pop
out
sbb
pop
adc
stc
and
pop
jbe
adc
inc
add
add
adc
fstl
sub
xorl
mov
xor
add
add
in
sub
add
pop
adc
fidivl
push
sbb
sub
adc
testb
or
je
and
and
pop
and
and
inc
loopne
adc
xor
daa
jo
adc
jl
and
and
and
add
das
es
add
xlat
dec
pop
xor
adc
and
sub
and
and
mov
aas
outsl
add
or
outsl
add
xchg
and
inc
stos
and
sub
mov
pusha
js
aas
sub
jne
jb
adc
mov
sub
repz
and
loopne
and
push
adc
addb
or
push
and
inc
and
cmp
adc
and
pop
and
cmp
call
aas
adc
or
dec
and
daa
loope
adc
sub
and
mov
ds
add
cmp
sub
xor
ret
add
sub
jl
ret
fbld
pop
mov
fsubs
es
xor
inc
adc
xchg
xchg
xlat
push
jae
xor
sar
dec
push
and
and
mov
and
and
sahf
cmp
stos
sub
push
and
and
xor
sub
add
add
or
pop
bound
or
imul
and
and
push
add
xor
and
inc
test
sub
fistpll
mov
mov
pop
jne
push
inc
xchg
adc
push
stc
adc
scas
ret
add
xor
daa
insb
add
mov
and
lret
and
int
and
and
inc
fstl
jl
xor
sub
sbb
inc
dec
add
sub
daa
popl
push
mov
adc
cltd
pusha
adc
add
cmp
jae
mov
xor
test
adc
pop
scas
adc
inc
fstps
add
test
jne
test
je
dec
and
and
adc
jb
push
pop
pop
mov
mov
push
adc
and
and
es
inc
xorl
inc
out
pusha
adc
sub
add
call
inc
adcl
and
je
and
pop
ljmp
mov
jge
test
jae
and
cmp
dec
les
dec
xor
rep
mov
jmp
jl
popf
pusha
adc
adc
andl
outsb
outsl
mov
push
pop
test
mov
inc
test
and
mov
and
sub
sub
and
push
and
and
repnz
adc
add
pusha
iret
adc
or
add
inc
sbb
or
and
jae
and
cld
and
cs
es
add
test
push
inc
sbb
sbb
and
adc
and
push
inc
mov
sbbb
je
outsl
adc
popa
into
sbb
xor
push
mov
push
push
and
xor
jmp
dec
xor
and
in
inc
cli
adc
and
cmp
and
adc
mov
repz
sahf
adc
subl
push
inc
test
jne
dec
cmp
dec
push
and
dec
adc
in
jmp
imul
adc
and
testl
and
inc
adc
and
test
jl
inc
test
pusha
push
movsb
adc
inc
mov
jl
cmp
test
andl
inc
adc
cmpl
shlb
or
lea
es
xchg
and
adc
push
or
mov
adc
mov
and
and
jno
fdivl
jmp
orl
xorl
and
adc
or
int3
adc
inc
cmp
pusha
ds
push
adc
xor
andb
mov
or
lock
adc
ret
and
adc
adc
mov
push
push
jae
adc
add
mov
or
test
insl
mov
ljmp
mov
dec
dec
add
xor
lea
mov
enter
mov
and
in
adc
inc
imul
repz
add
and
adc
adc
fbld
adc
fbld
and
int
cltd
adc
add
or
aam
and
or
mov
mov
cmp
adc
cmp
adc
and
push
and
mov
inc
mov
and
orl
sub
pusha
adc
inc
pop
and
inc
and
in
adc
mov
into
and
sub
adc
xor
and
or
push
and
add
sub
adc
and
add
sub
and
add
sub
sub
and
and
push
lea
jl
adc
dec
add
and
cmp
cli
inc
and
add
mov
call
inc
add
cli
les
mov
das
pop
add
xor
addr16
outsb
repz
and
leave
cmp
into
and
or
dec
sub
jle
xchg
xchg
adc
and
and
lahf
int3
gs
in
adc
mov
leave
adc
dec
and
sub
and
adc
rorl
push
call
push
sarb
ds
mov
pop
loopne
lret
xchg
adc
mov
and
daa
mov
adc
daa
inc
pop
adc
mov
inc
fists
sti
sub
and
dec
pusha
inc
and
sub
and
xor
pop
and
pop
cs
and
lahf
pop
and
adc
adc
aad
pop
and
pusha
fldcw
and
and
sub
adc
insb
cs
add
push
daa
push
and
pop
and
cmp
mov
jmp
xor
test
loopne
adc
fcoml
pop
sub
and
pop
cmp
jno
sbbl
and
cmc
and
inc
jnp
adc
and
inc
mov
adc
add
cmp
adc
inc
push
push
and
adc
aas
adc
push
inc
iret
adc
dec
push
push
test
cmc
adc
popa
inc
adc
addr16
jl
not
and
dec
scas
pusha
subl
mov
and
lea
cli
jno
push
and
pop
and
and
fcoml
inc
xlat
sahf
aaa
push
adc
ja
mov
and
adc
testb
mov
or
in
notb
sbb
aaa
and
and
loope
adc
adc
sarb
adc
inc
and
daa
and
imul
adc
adc
inc
andl
push
pop
mov
and
jg
adc
daa
jg
adc
jg
stc
dec
sbb
and
ds
add
push
sbb
lods
add
nop
incl
adc
inc
add
adc
inc
add
in
inc
add
add
pusha
and
pusha
dec
xchg
adc
repz
call
and
and
inc
jmp
mov
in
cmpsl
adc
mov
cwtl
cmp
and
adc
add
aas
mov
and
jo
and
adc
push
and
stc
adc
pusha
sub
jle
shrb
adc
and
inc
stos
adc
xlat
mov
xchg
pop
das
adc
inc
jno
idivb
adc
xlat
and
cmp
sub
in
and
sbb
and
adc
jae
inc
bound
sbb
and
into
push
adc
cmp
imul
pop
adc
js
and
mov
mov
push
arpl
xor
push
and
and
jno
notl
add
mov
adc
and
cmp
adc
inc
sub
inc
loopne
push
xor
adc
adc
dec
jns
pusha
jle
pop
and
insl
es
add
pop
and
push
fs
inc
nop
adc
pusha
nop
and
lock
adcb
jno
and
adc
push
and
sbb
jge
and
cmp
cmp
mov
adc
inc
mov
shlb
xor
je
outsl
and
cmp
andb
jmp
rclb
mov
daa
sbb
adc
push
inc
adc
pop
pop
adc
and
and
xor
xor
mov
inc
push
adc
imul
inc
sub
pop
sub
daa
adc
mov
inc
ja
sub
adc
xor
and
mov
xchg
inc
add
mov
inc
add
out
add
clc
inc
add
or
ret
arpl
pop
add
das
push
sub
push
mov
mov
adc
inc
sub
xchg
mov
adc
push
clc
cmp
mov
cmp
aaa
lahf
adc
add
mov
adc
clc
cmpsb
loope
repnz
testb
adc
mov
adc
punpckldq
test
es
jecxz
adc
push
inc
aaa
jb
inc
aas
adc
inc
js
mov
test
fs
push
adc
sub
xchg
das
movsl
inc
xchg
adc
inc
ljmp
add
mov
jo
ret
cmp
and
das
popl
adc
adcl
push
cmpb
ret
cld
fs
adc
inc
lahf
adc
xor
adc
and
andb
repnz
mov
jne
and
lea
orl
sub
into
movups
pop
cmp
push
and
and
adc
mov
lock
jbe
adc
and
mov
adc
mov
and
sub
jl
and
and
adc
inc
and
cmc
inc
arpl
mov
and
sub
adc
push
pusha
or
adc
imul
mov
or
adc
sbb
pop
fs
or
jmp
mov
inc
and
adc
or
iret
sub
dec
roll
gs
inc
inc
pusha
pop
adc
mov
push
pop
adc
dec
pop
adc
inc
jbe
pop
and
jle
dec
clc
push
push
cmpb
add
and
cmp
adc
dec
mov
ds
inc
pop
adc
push
loopne
adc
xchg
jg
xor
movsl
data16
xor
dec
pop
adc
imul
sti
xor
mov
inc
mov
push
inc
adc
inc
adc
dec
and
adc
push
push
add
and
shlb
pop
push
jne
and
jo
sub
and
push
and
xor
dec
add
mov
mov
mov
inc
mull
outsl
jne
and
push
loopne
and
dec
mov
mov
sub
and
jb
adc
or
cmp
fwait
popa
sub
add
xor
add
inc
jg
lahf
adc
das
lahf
add
js
inc
lahf
and
push
push
dec
sbb
ljmp
fistpll
shlb
iret
adc
adc
inc
add
rcll
and
mov
add
enter
adc
loopne
add
decl
mov
aam
or
mov
inc
adc
insb
xchg
mov
inc
pop
adc
mov
inc
or
insb
inc
or
mov
push
mov
jp
add
push
andb
addl
adc
mov
imul
fcoml
jmp
and
sub
cmp
jno
and
inc
cmp
lea
cmp
cmc
sub
jl
mov
and
insl
inc
xor
and
cmp
call
mov
je
mov
jle
push
lods
bound
call
dec
mov
cs
jge
test
inc
pop
adc
push
and
shrb
call
mov
dec
inc
sbb
xor
lock
adc
mov
loopne
adc
push
pusha
adc
iret
adc
out
sbb
insb
and
mov
adc
mov
pusha
sbb
pop
pop
and
and
cmp
ja
addr16
adc
inc
add
jmp
mov
adc
pop
jge
add
jmp
mov
add
cwtl
sub
or
aaa
push
js
add
and
sub
lcall
xchg
push
push
adc
imul
dec
add
loopne
add
inc
add
in
add
in
inc
add
repz
add
outsl
or
sub
adc
scas
popa
xor
push
and
and
addb
nop
sub
xchg
orb
push
dec
jne
jge
sbb
clc
push
add
push
and
addl
fildl
adc
popa
pop
loop
mov
adc
popa
stos
and
adc
adc
mov
pop
adc
mov
and
and
sub
mov
pusha
inc
xorl
adc
rolb
popa
lds
jmp
stc
sub
add
and
aam
sub
daa
dec
or
inc
es
push
push
push
outsl
pop
and
insb
adc
mov
adc
cmp
not
and
or
cmp
je
push
js
adc
inc
les
jl
insl
cs
xchg
and
sbb
shl
ficompl
shl
shlb
shrl
adc
shll
mov
ret
inc
and
clc
dec
dec
mov
shlb
lods
adc
push
xchg
and
jns
sub
dec
jno
push
cmp
dec
and
pop
mov
push
and
das
adc
dec
test
mov
adcb
cmp
inc
ds
and
sbb
xor
fnstenv
decl
push
mov
lahf
and
and
daa
and
andl
dec
or
push
daa
or
inc
mov
cmp
inc
mov
and
and
dec
fists
push
popa
sbb
add
xor
sahf
sub
pop
fwait
adc
jbe
xor
xor
sbb
adc
scas
fisubs
les
and
sub
adc
and
adc
inc
add
nop
push
add
ljmp
bound
jg
and
popa
adcl
and
inc
and
pop
and
add
mov
cmp
adc
add
jg
jbe
adc
pusha
jge
inc
dec
adc
add
pusha
push
mov
scas
push
mov
inc
adcb
adc
fdivl
push
add
loopne
mov
and
inc
adc
inc
or
push
push
insb
test
or
inc
ljmp
lahf
and
adc
push
sub
mov
add
pusha
ss
dec
adc
notl
dec
aam
test
mov
jne
mov
xchg
cmp
int
inc
and
adcl
adc
inc
lahf
dec
pusha
adc
dec
add
push
fs
jb
add
mov
jo
sbb
int
sbb
sub
and
in
or
pop
ret
cmpb
mov
inc
sub
jne
lea
sub
test
adc
cmp
int
dec
xchg
mov
push
mov
and
lret
adc
lret
adc
sahf
adc
popa
int
inc
adc
jo
mov
mov
mov
lea
push
andb
andb
test
paddb
mov
shrb
frstor
adc
and
and
es
and
pop
test
je
mov
lea
cmp
jb
lea
jae
mov
pop
sub
sub
jnp
sub
sti
dec
pop
add
sar
movb
adc
add
decl
xor
and
inc
push
addr16
push
and
inc
and
ret
sbb
rolb
mov
push
adc
mov
inc
pop
inc
adc
inc
and
imul
sub
and
xorl
not
test
je
and
mov
imulb
enter
and
mov
loope
and
leave
adc
arpl
or
popa
dec
outsb
popa
dec
mov
fsts
test
fs
adc
and
inc
and
adc
push
in
mov
inc
push
adc
xchg
add
pop
lcall
jno
lea
mov
add
pop
or
movb
mov
and
inc
sbbb
cmc
adc
sub
sbb
pop
inc
sbb
cmp
pop
inc
call
cmp
pop
jmp
dec
pushf
and
adc
push
mov
and
andb
arpl
mov
je
push
and
pop
dec
or
sub
cs
inc
dec
push
or
iret
mov
and
aaa
adc
push
and
and
mov
rorl
and
push
push
call
mov
test
je
dec
adc
pop
inc
das
adc
sbb
cmpb
jne
inc
sbb
cmp
adc
adc
adc
cmp
and
mov
push
and
adc
add
push
dec
or
data16
mov
adc
cmpb
sub
and
push
bound
cmp
push
push
adc
adc
inc
fwait
and
stc
xor
adc
cmp
jg
pusha
movsl
pop
cmp
jbe
inc
jmp
pusha
pop
adc
adc
inc
mov
dec
adc
pusha
dec
adc
dec
xchg
adc
mov
mov
sub
adc
add
rolb
mov
jnp
adc
xor
adc
test
and
cmc
inc
cmpsb
and
xchg
sub
add
and
adc
cmp
xor
and
sbb
ss
sub
sar
mov
jmp
pusha
jne
xor
jge
pop
adc
out
push
cmp
mov
je
and
mov
mov
stc
pop
adc
js
and
adc
mov
sbb
push
jle
and
adc
inc
cmp
adc
adc
adc
jl
adc
test
sub
push
dec
cmp
ja
xchg
sbb
push
inc
adc
xor
sub
mov
test
inc
insb
adc
std
cmp
cltd
sub
mov
es
jae
std
and
pop
adc
adc
sub
sub
sub
add
xor
cmp
xchg
adc
jne
pusha
arpl
sbbb
and
sub
sub
es
bound
adc
ss
and
mov
cmpsb
add
cmp
xchg
cmp
push
inc
rolb
adc
flds
adc
out
rorb
add
jmp
and
jmp
sub
push
adc
jmp
sub
and
and
adc
sub
daa
stc
sbb
sub
adc
mov
add
dec
mov
fsubr
adc
mov
cmp
inc
cltd
and
outsl
adc
loope
popa
outsb
mov
rorl
adc
adc
push
and
dec
and
adc
and
adc
inc
adc
cmpb
jne
cmpb
adc
and
adc
dec
add
enter
outsb
mov
add
inc
pop
adc
inc
test
pusha
add
push
and
adc
push
je
pushl
adc
movsl
xorl
dec
mov
adc
fmuls
test
mov
and
cmp
pusha
out
adc
push
ret
dec
push
bound
not
and
push
adc
in
push
mov
add
inc
add
in
inc
add
rolb
add
jmp
add
inc
add
inc
add
in
inc
add
adc
add
add
adc
cmp
add
add
add
cmp
add
cmp
add
add
or
filds
and
xlat
adc
mov
push
inc
lret
adc
sub
and
adc
bound
adc
imul
cmp
sub
xchg
adc
inc
out
call
push
adc
and
jne
sub
add
mov
jmp
sub
lds
push
add
push
adc
jmp
mov
jmp
and
mov
inc
and
sub
mov
sbb
adc
rorb
adc
sub
ja
adc
adc
adc
add
fmuls
push
adc
mov
and
inc
xor
ret
in
add
pop
mov
pop
add
pop
pop
mov
pop
ret
mov
inc
add
inc
add
mov
add
mov
inc
add
aam
add
repnz
add
pop
inc
mov
or
or
inc
add
adc
rolb
add
add
verw
add
add
add
adc
add
aas
add
cmp
add
pop
sub
or
lds
mov
jle
pop
in
adc
push
imul
scas
push
or
add
rclb
push
xor
push
adc
sar
stc
and
xor
adc
in
mov
adc
and
mov
adc
mov
push
testb
adc
and
mov
and
mov
add
push
jno
adc
mov
xor
inc
dec
adc
adc
add
adc
mov
dec
mov
adc
and
and
mov
and
cmp
push
call
sub
xor
mov
mov
and
and
js
sbb
add
inc
cmp
jb
js
adc
dec
scas
pop
xchg
inc
in
adc
and
dec
and
inc
inc
sahf
pusha
dec
imul
outsb
loop
cmp
mov
ja
mov
test
jne
ret
and
jge
adc
hlt
adc
and
inc
xor
mov
and
sti
dec
scas
adc
adc
add
and
pop
sub
pop
neg
sbb
pop
neg
dec
mov
es
sbb
rol
jmp
and
pop
pop
mov
sub
push
add
or
add
adc
sub
jp
and
jo
sbbl
sbb
adc
inc
hlt
adcl
dec
les
jl
es
add
dec
mov
add
sub
adc
and
and
sub
add
push
and
and
sub
add
andb
add
scas
mov
icebp
inc
add
inc
add
arpl
add
mov
pop
adc
inc
pop
adc
inc
add
hlt
inc
add
push
inc
movups
inc
add
sub
adc
inc
cmp
adc
inc
pop
pusha
add
inc
rolb
add
pop
sarb
adc
je
adc
adcl
jmp
push
std
pusha
or
mov
add
std
add
or
std
or
test
push
push
dec
push
bound
adc
fwait
adc
cld
adc
mov
shr
inc
and
mov
mov
mov
call
cmp
jne
cmc
ficoml
or
adc
adc
arpl
adc
inc
push
jno
inc
jo
mov
ja
lods
je
pop
repz
pop
cmp
jne
orl
shlb
sub
enter
adc
adc
imul
push
push
and
pop
adc
adc
adc
or
test
or
adcb
inc
adc
orb
and
inc
pusha
adc
mov
push
and
inc
or
adc
push
add
adc
or
adc
jg
adc
add
adc
sbb
jmp
test
je
rcrb
and
push
add
add
ficompl
dec
je
dec
je
dec
jne
inc
test
or
dec
push
pusha
pop
adc
jmp
addb
and
jge
lock
and
adc
dec
and
pop
xor
pusha
push
adc
and
inc
add
das
inc
xor
mov
pop
mov
and
mov
push
mov
cmp
fs
mov
jne
mov
mov
dec
fwait
adc
movl
inc
jg
inc
inc
adc
and
cld
inc
sbb
dec
jmp
out
and
rcrb
cwtl
into
jb
inc
mov
cmp
pop
and
inc
and
adc
pop
or
fistl
inc
cmpsl
adc
and
scas
push
test
push
or
xor
push
and
cmpl
pop
adc
mov
pop
adc
sbb
adc
push
push
and
dec
sub
sub
out
and
push
jg
and
hlt
push
or
inc
popa
aas
adc
mov
mov
jne
sub
adc
clc
jbe
pop
jne
cmpl
jne
inc
adc
dec
adc
adc
push
pusha
test
mov
add
sti
add
xor
add
clc
mov
pusha
into
adc
mov
das
aaa
add
cmp
jne
inc
jo
add
and
rclb
and
push
inc
movsb
xor
jne
inc
dec
gs
push
mov
call
dec
in
push
push
push
mov
and
push
adc
mov
lods
adc
dec
adc
js
mov
mov
push
push
push
inc
popa
outsb
push
adc
push
popa
adc
dec
adc
cmpb
pop
aas
test
in
inc
pop
adc
push
adcb
das
inc
inc
adc
enter
adc
inc
push
adc
add
das
hlt
add
mov
test
mov
push
add
adc
adc
and
je
and
jmp
je
push
and
adc
adc
data16
adc
clc
inc
dec
jp
pop
or
leave
adc
jne
jmp
pusha
adcl
mov
adc
inc
in
inc
test
adc
adc
adc
inc
adc
adc
push
push
inc
leave
and
pop
arpl
pusha
sbb
sahf
jp
loopne
je
and
add
push
mov
mov
jbe
add
sub
inc
xchg
pop
add
sub
cmp
push
ja
je
sub
push
int
jne
and
sub
and
inc
daa
pop
outsl
adc
and
and
jp
mov
jne
sbb
inc
pop
pusha
push
inc
sbb
leave
add
jb
daa
and
adc
add
cmp
das
cmp
or
aam
add
sbb
mov
test
je
and
push
movsb
sub
sbb
testb
jne
pop
arpl
and
adc
jp
and
and
and
and
and
adc
movl
or
smsw
sub
jecxz
push
push
adc
or
xchg
and
mov
mov
sbb
shl
call
xchg
inc
sbb
xor
mov
js
rolb
inc
xchg
adc
add
adc
jae
add
mov
cmpb
addb
stos
adc
ljmp
das
inc
adc
test
add
and
and
push
jo
and
inc
or
dec
adc
push
sub
add
jle
and
and
movsb
adc
jne
xchg
pusha
dec
addl
lret
sbb
je
sub
jle
pop
inc
mov
push
orb
das
jg
jns
aad
adc
xchg
adc
test
movsl
adc
push
adc
adc
adc
adc
out
sub
and
sub
jb
cmp
daa
out
sbb
jne
jne
test
sti
xor
sbb
call
call
inc
and
fldt
pop
add
cmp
es
sub
jle
cmp
imul
adc
adc
mov
std
sub
add
and
adc
add
addl
rolb
imull
add
inc
xor
andb
xchg
adc
and
adc
test
stc
je
pop
xchg
adc
out
inc
movsl
push
test
adc
sar
and
sarb
pop
adc
notb
jmp
sar
cmp
jle
and
adcb
dec
add
jle
dec
adc
sub
adc
test
sub
adc
and
and
mov
sbb
jae
adc
adcl
sub
or
xor
add
or
inc
add
add
cmp
inc
add
cld
inc
add
add
cli
inc
or
xchg
inc
cmp
testb
or
adc
pop
adc
inc
das
adc
inc
add
adc
add
add
push
xor
add
add
adc
mov
inc
jecxz
push
mov
inc
sub
jnp
adc
pushf
inc
xor
push
mov
aam
xor
ss
inc
and
pop
adc
push
inc
mov
push
jmp
mov
enter
clc
sub
push
bound
adc
inc
dec
adc
inc
push
and
push
adc
and
fldenv
sub
adc
push
xchg
std
mov
adc
lret
adc
xchg
and
inc
adc
addb
sub
add
or
jne
dec
and
push
or
inc
lods
das
popa
add
sub
and
sub
or
and
pop
test
adc
and
adc
movsb
pusha
and
jle
adc
sub
add
push
pusha
push
cmp
outsl
out
sbb
adc
je
dec
jne
mov
jmp
mov
jmp
mov
and
adc
push
push
dec
cmp
je
push
inc
insb
inc
inc
adc
cltd
adc
xchg
and
int
push
push
inc
dec
inc
fwait
dec
dec
pusha
adcl
inc
ret
adc
and
ss
jne
mull
ret
adc
mov
mov
popa
int3
loopne
jae
cmpsl
adc
adc
pusha
jg
and
mov
repz
xchg
adc
cs
imul
add
dec
xor
and
mov
inc
ss
adc
pusha
or
sbb
add
rclb
jne
inc
lret
adc
lea
mov
pop
out
adc
mov
mov
inc
adcl
mov
inc
inc
and
jo
pop
mov
int3
andb
je
fcoms
fcoms
jne
pop
loope
mov
shll
ret
jne
adc
pop
mov
mov
and
fsubs
jmp
jo
and
imul
or
inc
sbb
add
sub
add
and
scas
push
cli
pop
fwait
and
jg
xor
shll
xlat
xor
push
es
subl
or
add
shr
pusha
or
cli
mov
inc
push
popa
mov
and
jmp
pusha
sbb
sub
adc
fs
push
and
and
bound
adc
jbe
and
xchg
adc
imul
adc
incl
adc
incl
popa
aam
mov
sub
push
inc
clc
popa
lds
test
mov
jne
push
cli
and
dec
int3
adc
adc
adc
dec
int
inc
ja
push
and
jge
cwtl
out
cmp
push
and
and
push
push
push
call
pusha
test
and
mov
xlat
and
and
sub
mov
mov
sbb
roll
mov
mov
jle
adc
pop
out
and
xor
je
xchg
adc
test
je
and
rorl
mov
or
shr
dec
out
imul
loopne
bound
mov
fbld
out
and
add
adc
and
cmp
cmpsl
ljmp
incl
pop
and
and
push
test
sub
ret
repnz
pusha
out
pusha
pop
adc
and
and
ja
adc
mov
and
adc
and
cmp
adc
and
cs
inc
cmc
pusha
scas
and
loop
and
sub
jmp
and
cmp
test
mov
adc
rorb
mov
ds
jns
xor
adc
loop
and
and
popa
sbb
sbb
inc
sbb
mov
push
and
push
and
pushf
adc
dec
and
popa
aam
and
dec
daa
adc
and
adc
and
adc
sub
sub
add
and
and
subl
mov
sub
add
and
and
and
and
adc
je
out
idiv
inc
pop
daa
lahf
add
movsb
xor
bound
cmp
loopne
insb
xchg
and
dec
popa
lea
and
sar
lea
rol
jno
and
movsl
pusha
adc
jmp
aaa
mov
and
adc
add
loope
andl
inc
adc
xchg
adc
add
orb
jmp
add
mov
xchg
pusha
jnp
test
push
inc
test
in
xchg
adc
push
lea
sbb
and
imul
and
inc
mov
roll
bound
test
add
dec
adc
insb
inc
mov
lret
mov
aad
loope
cmpl
je
cmovnp
and
and
push
subb
add
loop
mov
inc
adc
lret
sub
add
xor
xor
ret
inc
shlb
push
add
xor
push
pusha
jecxz
inc
subb
adc
jl
adc
es
or
add
add
inc
sub
add
inc
aam
scas
add
add
add
dec
sub
xor
and
pop
add
adc
cs
add
xor
sub
das
xor
aaa
add
add
std
sub
mov
jo
shrb
sub
add
std
cs
add
sub
add
inc
cs
inc
mov
xor
adc
sub
dec
mov
xlat
daa
int3
add
sarl
and
loop
inc
jno
jnp
and
xchg
add
add
xor
loope
cmp
add
adc
and
pusha
mov
and
loopne
inc
mov
insl
and
sub
add
push
add
imul
in
roll
adc
fs
xor
inc
push
inc
shrb
aad
shlb
inc
and
adc
jne
adcl
adcl
es
add
shrl
adc
fiaddl
and
aad
fldl
and
dec
bound
xor
add
push
add
mov
push
loopne
movsl
xchg
adc
ret
inc
movsl
aad
mov
mov
ret
mov
aas
sub
add
add
pusha
imul
adc
inc
sbb
sarb
and
cmp
jg
je
cmp
jg
je
cmp
je
cmp
jne
and
jecxz
ret
mov
ret
and
adc
cmp
jne
mov
ret
mov
adc
push
loopne
pop
addr16
cmp
adc
cltd
lret
adc
and
adcl
mov
ret
mov
adc
adc
add
mov
push
mov
ss
and
and
lock
add
mov
mov
mov
cld
cld
sti
add
and
dec
repnz
out
pusha
pop
adc
pop
and
inc
and
adc
jnp
mov
adc
mov
adc
lret
mov
push
pop
adc
out
pusha
pop
adc
pop
and
add
js
movlps
inc
inc
and
decl
inc
push
and
sub
subb
or
cs
or
incl
and
adc
out
pusha
adc
adc
mov
pop
fldl
and
dec
inc
sbb
adc
jmp
pusha
or
inc
or
incl
and
and
addl
pop
and
ds
fcoms
decl
inc
push
and
mov
test
mov
and
adc
lret
jle
ficoml
test
aaa
lds
and
mov
mov
inc
push
and
inc
inc
and
mov
and
into
adc
and
mov
push
shl
jo
or
adc
and
loop
push
and
mov
and
and
mov
test
and
loope
andl
xchg
filds
and
adc
and
insl
adc
lods
and
addr16
adc
and
shr
popa
dec
shr
push
dec
shr
mov
mov
out
test
inc
dec
inc
gs
inc
push
and
adc
inc
cli
outsl
jo
xor
shr
push
shr
and
icebp
pop
ja
rorl
orl
adc
inc
test
and
inc
mov
xor
addb
cmc
inc
inc
or
pushl
je
dec
jne
lea
adc
cmp
and
and
pusha
adc
aaa
bound
and
xor
and
jno
adc
adc
mov
adc
inc
es
rclb
and
mov
in
popf
and
adc
inc
adc
lods
aaa
and
xor
push
adc
scas
dec
mov
push
outsl
rep
mov
and
and
xor
or
je
lock
mov
sub
cwtl
adc
mov
or
cmp
and
dec
jmp
push
pusha
inc
adc
std
sub
add
je
push
or
inc
aaa
adc
loopne
adc
mov
cltd
dec
inc
adc
push
dec
lods
and
inc
and
adc
add
test
jne
cltd
pop
adc
and
stos
adc
or
and
mov
rcll
shl
mov
and
jmp
int3
jns
adc
push
orb
adc
jne
mov
add
mov
adc
or
cmp
pop
push
and
xchg
inc
dec
and
mov
repz
push
inc
loop
xchg
sbb
adc
mov
leave
adc
push
and
adc
push
xchg
and
mov
and
inc
adc
enter
adc
add
push
lock
mov
adc
addl
adc
and
add
daa
dec
add
inc
push
push
inc
xor
scas
insb
and
inc
adc
pusha
adc
push
adc
push
dec
adc
add
adc
adc
push
and
inc
push
adc
xorb
inc
jnp
cmp
dec
test
dec
add
and
cmp
dec
addr16
add
sub
add
inc
lahf
adc
je
mov
xor
and
mov
adc
inc
scas
nop
add
sbb
adc
mov
sahf
popa
and
lods
and
leave
pusha
and
nop
inc
and
and
je
es
add
bound
notb
add
jne
mov
mov
adc
mov
test
popa
lret
and
pop
adc
pusha
je
dec
add
push
mov
mov
insb
outsl
pusha
jmp
sbb
inc
cld
and
int3
cmp
dec
pop
and
adc
adc
inc
xchg
popf
xor
adc
and
lods
inc
mov
in
gs
and
push
push
mov
inc
xor
cmp
in
and
and
add
inc
in
mov
adc
and
and
orb
and
jge
pop
stos
inc
adc
inc
fs
or
testb
add
add
add
add
mov
adc
test
imul
test
je
popa
jl
sbb
shl
hlt
sub
adc
es
push
and
mov
repz
adc
lea
test
and
arpl
cs
and
jnp
add
test
cmpsl
sub
icebp
sub
sbb
and
adc
adc
jmp
test
adc
jns
and
sub
mov
bound
pop
xchg
roll
adc
ret
mov
push
filds
pop
outsb
shl
mov
xor
and
jmp
and
mulb
lahf
pusha
adc
add
adc
add
or
adc
mov
xor
pop
inc
ds
test
je
inc
arpl
pop
dec
inc
push
pop
adc
inc
push
adc
mov
pop
mov
fisubrs
jae
jmp
push
jbe
add
and
adc
add
adc
jmp
adc
mov
add
and
orb
sub
add
movsl
cmovo
bound
and
and
inc
mov
lea
jg
lea
data16
int3
int
add
and
adc
std
pusha
xor
and
jg
mov
and
and
adc
push
enter
fcoms
mov
and
adc
adc
cmpl
jecxz
and
sbbb
and
bound
jmp
mov
pusha
pop
sbbl
mov
inc
push
adc
xchg
out
dec
inc
mov
jo
and
adc
popa
lea
dec
pop
add
lea
call
inc
pop
adc
je
pusha
sub
arpl
sub
inc
dec
inc
addb
dec
aas
inc
sub
sub
and
inc
dec
imul
jns
arpl
rcll
adc
jg
or
jg
push
adc
jmp
adc
and
outsl
adc
sub
and
iret
ret
jnp
aad
and
insl
dec
and
push
and
call
xor
pop
add
cmp
pop
addl
sub
and
ret
pop
adc
sbbl
arpl
sbb
inc
pop
adc
sub
and
test
call
xor
sbb
and
inc
ret
bound
and
adc
adc
or
push
push
sbb
and
add
outsl
popa
and
mov
aad
adc
and
and
adc
add
xchg
adc
sbb
lds
incl
js
pop
adc
lea
sbb
push
pusha
sub
inc
das
insb
icebp
inc
or
movsb
mov
sub
xchg
hlt
into
push
and
or
adc
insl
jbe
bound
jmp
mov
and
inc
adc
and
bound
sub
dec
aaa
push
add
cwtl
fs
inc
sub
push
and
pop
inc
push
jns
orb
cmpb
or
adc
popa
inc
pop
adc
push
scas
adc
xlat
adcb
dec
daa
pop
add
and
andl
sbb
jp
and
mov
mov
and
les
sbb
les
cmp
cmp
add
and
adc
add
fs
sub
subl
adc
jne
mov
cmpsb
sub
add
mov
insb
add
xor
orb
jne
sub
push
adc
aaa
in
bound
cmpsb
jae
outsb
adc
outsb
adc
outsb
movsb
scas
in
adc
les
pusha
xchg
insl
subb
add
pop
sub
and
push
pop
xchg
adc
movsb
fs
adc
call
inc
mov
orb
mov
push
push
pusha
or
test
push
and
cmp
sbb
jmp
mov
fistl
xchg
adc
mov
and
inc
fs
jle
cmp
mov
adc
ja
pushf
jmp
call
adc
movsb
dec
adc
dec
or
fdivrl
push
pusha
aas
testl
je
push
aaa
jo
inc
push
mov
mov
adc
lret
push
adc
and
dec
jne
sub
lcall
out
adc
andb
mov
adc
pop
push
and
enter
and
and
es
jp
cld
adc
mov
and
and
cltd
inc
push
sahf
adc
orl
jl
and
jae
adc
mov
test
popf
mov
pop
and
mov
adc
inc
or
add
sub
and
adc
inc
adc
orl
and
or
fstl
dec
hlt
mov
and
es
adc
push
inc
bound
push
stos
xchg
pop
fldenv
pusha
xchg
and
adc
lea
and
inc
sti
and
and
add
inc
insb
and
popa
out
and
outsb
and
and
add
adc
jl
adc
inc
mov
adc
andl
popa
and
test
adc
push
cmpsl
add
rclb
xor
xor
xor
or
cmp
mov
push
push
and
sub
or
push
jp
cmp
sub
test
je
or
jmp
and
and
adc
push
popa
inc
adc
cmpsb
push
cmpl
lods
adc
adc
inc
mov
aad
cmc
pusha
lcall
adc
aas
popa
lcall
and
jnp
imul
inc
jb
sub
mov
popa
adc
sbb
test
aad
and
xlat
adc
jmp
and
aas
adc
lods
aaa
loop
andl
and
inc
and
roll
xor
dec
dec
daa
cmpsb
sbb
sbb
adc
dec
xchg
inc
jns
repz
jp
and
adc
pusha
inc
data16
sub
adcb
or
pop
loop
pop
jle
mov
and
je
inc
and
xchg
adc
ret
mov
adc
and
and
adc
mov
pop
imul
pop
test
add
jl
arpl
push
adc
loopne
shll
or
and
inc
addr16
jbe
mov
inc
push
mov
and
clc
popa
pop
adc
or
orb
mov
adc
and
xor
orl
adcl
mov
adc
sbbb
sbb
fsubs
inc
pop
mov
xor
xor
shrb
lahf
xor
cmpb
mov
mov
inc
inc
test
jne
sub
mov
adc
and
push
stos
xchg
insb
pop
sbb
je
dec
je
dec
jne
mov
push
and
jecxz
mov
adc
sub
insl
jb
mov
lea
repz
sub
or
pop
or
push
adc
test
jne
and
push
adc
adc
notl
aam
sbb
cmp
and
sbbb
push
and
adc
adc
push
push
and
adc
push
and
pusha
push
and
and
inc
je
push
adc
stc
aaa
and
sar
pusha
sub
sbb
insb
inc
flds
push
je
test
je
pusha
add
or
adc
cmp
or
jle
jle
push
adc
lea
push
and
sub
and
imul
outsl
imul
and
dec
push
lahf
adc
mov
loopne
and
adc
mov
mov
sub
mov
inc
add
cmp
adc
push
pusha
adcb
data16
and
inc
repz
push
adc
and
fbld
xchg
adc
and
fisubs
inc
inc
xchg
adc
xchg
cmpb
jle
sub
arpl
sub
push
sub
push
popa
pop
daa
or
adc
inc
cmp
dec
and
arpl
add
mov
outsb
xchg
inc
popa
lods
adc
push
push
push
hlt
adc
adc
xchg
popa
mov
es
sbb
adc
adc
cltd
sub
inc
adc
push
lret
cmp
dec
inc
mov
adc
cmp
xchg
adc
adc
sub
adc
sub
sbb
dec
lcall
adc
movsl
inc
inc
pop
rol
inc
scas
adc
sbb
inc
push
adc
inc
int3
fbstp
pusha
dec
pop
mov
adcl
mov
popf
add
jne
mov
ds
add
adc
inc
push
sub
add
daa
and
and
rcrl
inc
pop
adc
push
mov
popa
daa
gs
inc
loopne
mov
mov
scas
daa
sub
mov
popf
shl
data16
adc
subl
cltd
aad
dec
add
jecxz
inc
je
push
add
sbb
loopne
loopne
xor
mov
inc
and
ret
mov
push
cmp
jb
xchg
push
sub
pop
and
mov
mov
ret
call
adc
fdiv
popa
or
adc
adc
ret
ret
and
fcmovnu
and
or
das
inc
adc
clc
push
push
push
inc
jecxz
inc
pushf
fists
rorb
fdivrs
pop
inc
inc
adc
test
push
repz
int
test
repz
outsb
pop
adc
sub
mov
roll
and
cmp
mov
jge
mov
cmp
sub
dec
push
inc
and
inc
rcrl
fidivrl
inc
andl
sbb
adc
push
and
adc
pop
cmp
pop
scas
pop
inc
and
pop
cmp
pop
je
insb
adc
jne
sbb
aad
sbb
pusha
imul
inc
sub
adc
mov
out
sbb
jmp
lea
cmp
jge
lea
and
mov
fistpll
adc
inc
xchg
adc
les
pop
add
inc
adc
adc
or
cmp
adc
xor
dec
xor
mov
xorl
mov
adc
data16
call
mov
mov
test
pop
pushf
inc
or
and
movsb
dec
jns
nop
addl
pop
es
call
inc
out
push
adc
and
pushf
adc
out
jmp
mov
mov
sub
and
pusha
and
ljmp
das
adc
push
mov
and
adc
enter
and
sar
cmp
jae
push
add
shlb
cmp
lret
push
stc
jb
mov
test
mov
adc
ret
test
shll
inc
adc
jge
test
and
and
popa
jmp
add
inc
pop
adc
je
inc
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
and
push
cmp
lds
sbb
mov
jbe
and
pop
and
lock
add
cmp
notb
jne
and
mov
pop
dec
mov
add
cmp
lea
je
mov
sub
sub
add
test
inc
jle
adc
mov
mov
mov
mov
mov
mov
mov
and
adc
jle
adc
ret
and
and
pop
cmp
es
adc
mov
sbb
jne
xor
and
mov
pop
adcb
mov
and
sbb
sub
popa
push
xor
add
push
inc
and
outsb
adc
shl
daa
sub
in
pop
xor
je
mov
sub
inc
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
push
jg
mov
and
lret
adc
jne
cmp
lret
lds
je
addl
sbb
cmp
pop
or
or
jno
and
les
adc
and
mov
or
and
add
adc
pop
mov
mov
mov
mov
sub
push
or
and
adc
pop
and
xor
dec
or
adc
lret
and
shl
inc
out
lock
adc
cmp
je
inc
enter
enter
adc
loopne
sbb
sub
cmp
je
sub
in
test
cld
adc
cmp
mov
inc
adc
adc
ds
ret
push
jae
jne
lea
xorb
repnz
pusha
mov
xor
add
je
pusha
mov
scas
or
mov
das
aas
adc
inc
sbb
aas
pusha
or
xor
popl
sub
mov
cli
mov
out
mov
iret
cmp
shlb
and
sub
sub
out
popa
pop
icebp
call
mov
je
adc
jg
xlat
adc
xor
push
and
bound
test
and
jg
mov
and
xchg
and
adc
icebp
and
jbe
add
mov
xchg
pusha
pop
and
xlat
and
aaa
jo
insb
sub
mov
sub
push
sub
sub
and
push
mov
and
adc
shlb
arpl
lods
add
test
fsubs
mov
push
mov
pop
add
pop
and
iret
push
adc
jl
pop
push
dec
pop
and
push
and
adc
sub
and
and
push
adc
and
jns
adc
and
pop
adc
dec
pusha
sbb
mov
push
and
ljmp
adc
inc
jne
data16
and
and
dec
inc
adc
ljmp
sbb
sub
sub
push
dec
int
dec
inc
ret
js
jecxz
flds
pusha
xor
inc
sbb
lock
pushf
fcoms
adc
push
adc
jle
fbstp
and
dec
jno
adc
add
inc
jns
std
and
and
and
add
ficoms
pop
pop
sbb
shll
inc
sub
and
sbb
jne
mov
mov
mov
aas
movsb
adc
aas
addr16
adc
sub
add
and
bound
adc
and
sarb
adc
xor
jno
shlb
and
dec
adc
fs
and
inc
loop
adc
clc
bound
mov
mov
push
add
adc
and
xor
dec
xor
scas
dec
popa
and
ds
adc
ret
clc
inc
add
dec
adc
arpl
sbb
adc
insb
rorb
sbb
inc
cmp
mulb
sti
dec
and
cmp
push
pop
sbb
sbb
test
bound
sub
repz
push
adc
jle
setbe
inc
and
pop
arpl
jge
and
dec
out
adc
and
mov
dec
and
adc
shll
cmpsb
adc
inc
outsb
adc
and
and
popa
out
pop
mov
data16
fcoms
push
je
pop
cmp
push
mov
mov
inc
or
mov
fdivl
xchg
push
inc
cmp
insb
push
mov
adc
pop
sbb
cmp
jne
push
xchg
push
adc
cmp
and
jo
fs
fsts
loopne
cmp
and
inc
adc
and
adc
movsl
inc
cmp
jo
rorb
mov
dec
popa
outsl
inc
adc
mov
out
xor
jno
push
and
mov
iret
lea
cs
dec
cmp
mov
jl
inc
pop
dec
sti
adc
fidivrl
inc
movups
inc
mov
lods
and
adc
and
mov
sub
push
insl
adc
cli
subb
stc
inc
movups
and
adc
stc
jmp
jl
sbb
adc
and
jnp
andb
and
subl
xor
cmp
mov
push
adc
inc
mov
push
adc
push
push
loopne
loope
adc
sub
inc
adc
adc
loope
adcb
sub
inc
push
dec
and
pop
inc
sub
push
jbe
adc
dec
pop
rcrb
adc
xor
push
bound
cmp
je
inc
shll
and
sti
dec
fistl
or
xchg
cmpsb
adc
leave
cmp
inc
fildl
inc
or
rorl
xchg
rorl
push
mov
mov
or
adc
inc
push
push
mov
popf
push
inc
push
fs
and
and
push
xchg
cmp
sub
js
arpl
adc
sti
adc
push
inc
dec
inc
stc
gs
and
and
sbbb
pusha
dec
sub
pcmpgtd
xchg
adc
push
push
test
mov
sbb
mov
jmp
adc
and
xchg
and
push
and
cmp
shll
xchg
adc
dec
or
adc
fsubl
bound
jle
and
and
and
sbb
mov
mov
mov
daa
bound
iret
cmp
fsubrs
loop
add
lahf
mov
inc
and
test
add
lahf
mov
ja
arpl
lahf
mov
lea
and
mov
lea
into
xor
adc
es
dec
sti
and
mov
and
adc
adc
add
sub
adc
inc
inc
ja
mov
sub
and
sti
add
xchg
add
xchg
dec
adc
and
add
sbb
and
add
sbb
and
add
mov
and
add
mov
and
add
bound
and
add
mov
aas
pop
xchg
and
and
test
push
call
add
xchg
adc
sub
sbb
push
dec
xchg
and
push
mov
jnp
bound
aaa
mov
adc
call
and
and
daa
or
sbb
inc
and
ret
and
test
pop
pusha
and
push
bound
lahf
decl
das
test
pusha
sbb
push
bound
pop
and
sub
and
dec
adc
xlat
adc
movsl
adc
lahf
inc
cltd
adc
and
and
mov
call
addr16
imul
adc
mov
mov
andl
mov
xchg
adcl
inc
mov
cmp
mov
or
sbb
push
or
jmp
and
pop
mov
aam
sub
jl
adc
and
sbb
xchg
pop
adc
push
push
and
sarl
subb
sub
push
push
xchg
and
adc
and
cmc
adc
aaa
cmpb
xchg
cmpb
and
mov
push
push
shlb
add
cmp
xor
adc
popf
inc
ja
cs
mov
or
and
sub
data16
and
mov
mov
imul
pop
adc
jle
adc
and
adc
and
lea
int
shrl
inc
sub
jnp
inc
jp
mov
and
out
mov
mov
sbb
mov
mov
push
mov
mov
and
dec
adc
and
push
adc
or
or
orb
or
and
adc
or
inc
das
inc
or
push
mov
and
xchg
adc
inc
xor
adc
push
inc
sub
mov
pop
mov
push
popa
or
aas
sub
or
and
adc
inc
push
inc
or
mov
adc
and
out
adc
sbb
and
cmp
push
xor
cmp
ja
jmp
das
cmp
adc
jge
and
ret
pop
pusha
aas
inc
adc
jle
and
adc
push
adc
mov
and
and
testb
pop
and
fs
push
jb
mov
add
push
jl
add
adc
and
sbb
loopne
sub
xchg
add
add
dec
jne
and
outsl
sub
shrb
mov
sub
add
sarb
mov
cmp
je
adc
loopne
pusha
call
dec
push
mov
pusha
pop
and
push
sub
add
mov
pusha
pop
adc
mov
inc
inc
pop
adc
pop
add
pop
mov
adc
push
adc
cltd
adc
movsl
add
push
js
rorb
mov
pusha
sub
adc
mov
mov
ret
adc
cltd
sub
and
jge
mov
inc
dec
adc
daa
and
and
and
pop
out
rclb
inc
je
cmp
jnp
adcl
or
mov
xchg
adc
cmp
xor
adc
add
sahf
inc
add
in
add
cmp
and
add
inc
inc
add
jno
add
popf
inc
add
ret
inc
add
out
add
incb
loop
ret
je
or
jl
loop
sub
adc
jle
adc
pop
sub
jl
xchg
adc
push
adc
and
add
adc
pop
sub
bound
adc
and
bound
adc
xor
xor
xor
xchg
add
and
imul
sub
add
pusha
sub
cmpb
push
popa
and
adc
and
pop
sarl
adc
or
cmp
adc
add
sub
and
sub
and
lea
push
and
adc
sub
mov
sub
cmp
pop
movl
add
sub
mov
cmp
ret
push
adc
and
sbb
neg
mov
sub
and
imul
mov
addl
mov
inc
add
fldl
adc
inc
add
cmp
add
and
inc
add
popf
inc
add
loopne
add
sbb
sub
jp
repz
adc
mov
gs
jne
cmpl
rcll
cwtl
sub
dec
and
imul
and
icebp
push
add
push
outsb
and
and
das
and
fwait
adc
and
mov
xchg
mov
loope
call
and
xor
cli
bound
mov
adc
adc
push
sub
add
das
imul
inc
and
or
cmp
or
cmp
loopne
and
adc
imul
or
or
adc
mov
adc
arpl
dec
imul
jb
and
jnp
cwtl
push
dec
add
inc
cmp
inc
cli
and
inc
push
orl
pop
mov
mov
movl
xor
and
aaa
adc
outsl
add
insb
mov
push
into
mov
dec
inc
and
lea
jp
and
insb
adc
imul
add
pop
jp
inc
insb
mov
sti
in
and
es
and
and
out
shl
mov
xchg
push
adc
and
pushl
iret
adc
push
or
cli
and
and
fistl
xchg
rorb
stc
sub
add
clc
sub
add
gs
xorb
and
add
aaa
dec
adc
ret
adc
adc
xor
and
inc
gs
or
adc
shlb
pop
adc
and
cwtl
and
adc
or
popa
inc
dec
adc
mov
adc
push
and
adc
data16
and
lahf
pusha
or
adc
add
sti
dec
insl
mov
and
and
jno
subb
inc
call
and
cmp
sub
ja
inc
and
adc
fdivrs
dec
adc
push
push
and
and
loop
lret
mov
push
imul
push
and
adc
pusha
nop
pop
lock
and
sbb
test
aas
or
js
das
add
adc
and
adc
fndisi(8087
xor
ret
inc
and
adc
inc
push
dec
adcb
cli
and
cmpsb
and
ja
xchg
xchg
inc
lcall
cli
mov
sub
add
or
add
push
add
mov
and
fisubs
outsb
jecxz
stos
mov
and
push
out
adc
add
sub
test
bound
or
jmp
adc
mov
add
and
mov
jg
and
mov
sub
adc
dec
and
pushf
es
and
pop
arpl
pop
and
scas
cmp
add
add
add
cmp
pusha
add
sub
adc
std
adc
adc
add
and
and
xor
and
cmc
and
xor
and
adc
lret
jp
popf
and
and
into
and
mov
aad
and
adc
mov
stos
push
push
insb
and
test
jl
pop
and
add
cmp
jg
popa
adc
lea
adc
pop
lock
inc
jecxz
and
sub
cmp
inc
or
enter
push
leave
jle
lea
lds
scas
and
inc
push
shl
add
mov
and
adc
jnp
and
out
test
lea
and
adc
shlb
jmp
add
movsl
mov
add
mov
adc
add
jl
adc
jne
sub
mov
push
push
test
push
jge
aad
xor
imul
add
xor
and
and
inc
adc
popa
inc
and
and
and
sub
inc
inc
and
inc
popa
sbb
shrl
popa
sub
test
and
push
adc
adc
popa
das
and
and
iret
pop
mov
aad
mov
xor
ret
and
jg
adc
inc
adc
daa
and
xor
and
pusha
pop
and
xchg
and
pop
sub
jne
push
xor
mov
and
mov
adc
out
jmp
and
ret
adc
arpl
mov
sbb
or
xor
mov
ret
push
adc
mov
and
out
or
pusha
or
add
adc
movl
mov
jl
ficoms
mov
jle
in
adc
stc
insb
mov
and
adc
and
adc
add
and
out
inc
inc
pop
adc
add
inc
jg
inc
mov
mov
and
adc
and
inc
adc
inc
inc
adc
and
jl
jp
and
adc
add
add
and
mov
mov
sbb
xor
xor
mov
mov
mov
sbb
fsubrs
rcll
call
mov
orb
adc
enter
push
mov
inc
inc
xor
push
mov
sub
push
pusha
sbb
xor
rcrb
push
add
cmp
ret
inc
adc
dec
add
mov
and
adc
and
pop
adc
adc
xor
mov
fsubl
or
and
dec
cmp
or
xchg
jp
es
pop
jl
add
adc
mov
and
es
and
lods
daa
sbb
adc
inc
test
and
and
pusha
push
and
cwtl
pushl
int3
and
push
and
mov
adc
push
cmp
jle
cmp
jle
cmp
jg
push
dec
and
int3
adc
push
clc
xchg
lret
adc
xchg
mov
and
push
and
xor
mov
pop
icebp
sbb
imul
mov
mov
imul
add
sbb
jg
mov
mov
and
outsl
pusha
push
adc
mov
or
pop
or
call
inc
ret
and
inc
adc
repnz
mov
pop
and
mov
sub
rclb
or
arpl
inc
int3
adc
loope
inc
and
pop
adc
and
add
mov
or
pop
pop
es
and
outsb
cs
or
lcall
pusha
adc
cltd
adc
pop
fldl
adc
test
insl
mov
mov
or
sub
mov
or
inc
and
jo
mov
or
pop
inc
cli
adc
jle
sti
fs
mov
adc
inc
jp
stos
adc
and
adc
and
dec
adc
and
enter
cmp
adc
adc
jle
cmp
sub
push
mov
out
inc
pusha
dec
mov
or
cmpb
popf
daa
adc
and
xlat
adc
gs
jle
jle
xchg
and
movsb
adc
add
pop
sbb
mov
add
popa
arpl
and
adc
push
sub
pop
mov
push
add
push
and
leave
and
push
sub
push
pusha
sbb
adc
cmp
inc
mov
pop
mov
enter
inc
and
dec
adc
and
aam
adc
mov
clc
mov
xor
adc
cmp
mov
adc
adc
cmp
xchg
out
and
sub
or
jmp
lret
cmpsl
adc
arpl
jle
and
push
add
jl
adc
fisttpl
cmp
jecxz
jmp
sbb
dec
test
jle
cmp
hlt
cmovo
sbb
cld
call
push
inc
push
inc
pop
adc
push
and
adc
lods
aas
and
arpl
call
jl
inc
adc
push
push
cs
push
add
adc
sub
test
inc
push
and
aaa
mov
dec
mov
clc
adc
fmuls
push
cli
lods
lea
mov
call
xor
adc
cmp
jle
cmp
jle
dec
add
imul
pop
clc
imul
lea
add
sbb
pop
inc
push
adc
push
ss
and
push
mov
inc
std
and
and
jl
and
sub
mov
jmp
and
adc
mulb
add
adc
pusha
xor
adc
pop
jge
sbb
add
mov
mov
inc
add
or
inc
or
adc
inc
push
imul
push
push
push
sbb
inc
push
movw
inc
add
add
and
sub
xor
xorb
and
xchg
inc
adc
loope
push
adc
lea
mov
adc
dec
scas
adc
pop
jo
and
mov
cs
push
scas
and
mov
adc
or
and
and
sub
addb
and
jle
and
and
and
push
mov
dec
and
dec
and
inc
pusha
subb
and
adc
jle
or
adc
inc
jle
push
scas
inc
inc
and
fidivrs
and
add
pop
xchg
and
test
push
loopne
lods
inc
push
es
adc
scas
xchg
mov
call
popa
enter
sahf
js
mov
inc
movsb
adc
mov
rcll
cmpsl
cmpsl
cmc
adc
fs
fwait
fs
adc
add
xchg
orb
pop
and
and
sar
and
mov
movsw
outsl
adc
jle
add
or
adc
dec
dec
adc
lea
jle
mov
mov
mov
mov
and
dec
jne
add
mov
adc
cmp
arpl
imul
inc
mov
cld
adc
jl
pusha
movsl
dec
lcall
adc
stos
pusha
adc
sar
inc
fstl
je
inc
adc
add
push
and
and
rorb
and
les
dec
or
mov
add
push
push
and
ja
adc
adc
scas
dec
adc
lea
jle
and
mov
rclb
rorl
vpaddw
mov
mov
adcb
xlat
daa
lar
enter
adc
jmp
adc
inc
add
ja
add
sub
jge
push
adc
jne
and
shll
dec
xor
sbb
mov
or
xlat
and
data16
das
sti
jae
adc
movsl
and
sub
or
dec
adc
adc
and
and
outsb
adc
stos
adc
mov
push
adc
popa
out
arpl
mov
bound
adc
popa
and
je
and
lret
mov
mov
inc
and
fiaddl
adc
fistl
cli
std
push
add
and
fcmovnb
and
and
or
inc
mov
jle
test
out
adc
cmpl
les
cmp
jne
dec
jge
jmp
mov
add
fisttpl
push
call
add
jns
ja
adc
xlat
adc
push
inc
dec
jne
or
adc
adc
adc
and
out
jl
adcb
add
and
xchg
addr16
icebp
gs
and
adc
mov
and
and
insl
mov
xchg
adc
rclb
test
push
adc
jne
xchg
adc
cmp
jne
inc
xor
pop
or
fisubs
adc
dec
roll
and
pop
push
mov
mov
xor
dec
inc
push
cmp
enter
or
jg
or
jne
and
and
jb
inc
or
sub
mov
cmp
in
repz
and
add
out
fnstcw
cmp
pushf
and
dec
and
inc
test
je
mov
jle
push
popa
fcoml
aaa
adcb
adc
or
jl
insb
and
mov
sub
adc
adc
mov
pusha
or
push
inc
or
jle
dec
adc
sub
and
xchg
and
shll
add
stos
out
sub
call
and
and
xor
pushf
and
jo
and
rcll
insb
and
and
inc
xor
cld
sub
and
and
jo
and
ds
sub
sub
push
and
movsb
jge
cs
adc
sub
jp
adc
adc
sub
inc
jno
pusha
and
sub
push
adc
sub
mov
imul
adc
repz
fwait
adc
icebp
mov
popa
lea
lea
inc
fistl
js
rclb
and
rcll
je
pop
int
jo
mov
sub
add
and
adc
clc
filds
adc
enter
data16
adc
loope
or
sbb
or
inc
mov
mov
popf
lcall
andl
mov
mov
sub
out
ds
and
adc
jae
and
push
and
push
insb
cmp
mov
mov
inc
adc
mov
mov
and
adc
inc
stos
pop
je
cmp
je
loopew
jmp
fs
adc
dec
dec
adc
mov
lock
and
inc
push
mov
scas
bound
inc
jecxz
mov
add
adc
cmp
loopne
adc
andl
sbb
outsb
popa
addb
pop
adc
inc
nop
adc
dec
adc
mov
inc
loope
pop
mov
enter
addb
and
dec
inc
dec
pop
adc
lds
fs
jne
adc
push
and
and
or
inc
xor
or
sbb
cmc
imul
lea
mov
inc
fisubl
inc
negl
nop
add
mov
mov
and
jae
pushl
jnp
and
cmp
adc
jne
daa
int3
add
leave
mov
stos
inc
adc
loop
or
mov
cmp
inc
sub
mov
sub
das
jo
sbb
outsl
adc
out
xor
mov
adc
adc
mov
adc
dec
and
and
ficoms
adc
inc
test
adc
call
inc
adc
push
push
popa
incb
pusha
inc
arpl
adc
cmp
dec
sti
adc
sbb
adc
sbbb
and
adc
rol
xchg
mov
add
and
add
fisttpl
scas
mov
add
xor
lea
pop
and
sbb
xor
mov
test
jle
pop
roll
je
es
add
jne
inc
cmp
jl
mov
inc
xor
inc
cmp
lea
jl
mov
inc
add
sub
and
and
adc
ja
adc
and
pop
add
bound
inc
aas
and
and
mov
adc
cmpsb
adc
les
jp
and
and
push
bound
test
inc
push
and
add
add
and
and
adc
mov
cmp
adc
jne
jp
and
and
push
and
pop
jne
push
and
and
mov
je
leave
scas
and
mov
push
and
daa
adc
adc
and
jbe
mov
inc
xor
arpl
and
adc
ret
and
adc
and
lahf
and
mov
fists
adc
test
adc
gs
sbb
lods
fists
xchg
mov
adc
and
xlat
adc
aam
sbb
pop
and
inc
or
pop
inc
jle
fs
shll
adc
and
shrl
lea
gs
add
dec
inc
gs
and
and
mov
sbb
jecxz
sub
and
test
push
and
and
fwait
add
ds
mov
sbb
shrl
call
and
and
xlat
adc
test
adc
ret
push
pop
xchg
jl
adc
or
bound
inc
xor
push
test
cmp
jge
sub
sub
ja
adc
enter
xchg
cmp
mov
insb
or
cmp
or
sbb
and
daa
push
cmp
sarl
sub
inc
imul
in
sub
add
and
inc
push
leave
adc
sub
sub
pusha
sub
je
add
sbb
inc
sahf
and
daa
xor
insl
adc
ret
and
pusha
add
sub
loop
adc
in
call
adc
popa
fwait
adc
dec
adc
xchg
adcl
les
sub
adc
push
xor
push
cmp
je
jno
adc
mov
cmp
and
xor
jle
inc
jle
cmp
in
es
add
and
adc
cltd
idiv
cmp
xchg
rclb
jge
add
pusha
pop
adc
aad
pop
arpl
jnp
shrb
cmp
jne
scas
iret
push
pushf
inc
and
adc
icebp
lea
insb
add
inc
or
inc
pop
lret
adc
arpl
adc
subb
adc
dec
aaa
adc
and
jle
jo
loope
adc
adc
push
push
xlat
stos
xchg
adc
mov
aas
adc
push
jmp
adc
cmp
inc
add
sub
cltd
jae
sub
xor
xchg
mov
and
inc
cmp
and
adc
push
pop
cmp
adc
or
fldenv
add
shl
stc
adc
and
inc
adc
test
cld
out
adc
and
dec
adc
inc
add
jo
or
fld
fsin
fldl
fcos
inc
add
adc
inc
nop
inc
pop
adc
adc
pusha
or
sbb
adc
sub
pop
adc
dec
xlat
pusha
daa
adc
sbb
adc
and
outsl
movsl
adc
pushf
sub
pushf
cmp
pusha
cmp
and
ret
cmpsl
adc
loopne
les
lods
cmp
jmp
push
jmp
fld
inc
sub
inc
faddl
andb
je
pusha
push
adc
add
fadds
push
push
mov
int3
mov
inc
xor
sub
sbb
push
subb
pop
adc
fldenv
push
mov
adc
adc
dec
mov
xor
cmp
add
and
inc
rcrb
fcoml
je
inc
adc
add
adc
fsubl
adc
add
mov
loopne
adc
mov
adc
mov
adc
je
mov
mov
fs
sub
fstpl
call
and
addl
and
sbb
sbbb
and
ficompl
mov
cld
cmp
jle
jns
adc
sbb
sub
dec
mov
lock
adc
mov
adc
in
adc
push
and
push
out
adc
pop
adc
and
bound
fistpll
and
dec
push
inc
pop
es
add
outsb
mov
cmp
pop
mov
sti
adc
sti
adc
inc
or
mov
cmpsl
inc
pop
inc
ficoms
push
pusha
loop
add
inc
test
or
adc
pop
adc
and
iret
inc
pop
adc
fld
fmul
inc
push
adc
bound
movups
inc
pop
adc
int
adc
mov
fsubr
add
jge
add
push
cmp
jge
and
xchg
inc
xor
jge
dec
enter
mov
mov
jmp
movl
and
ljmp
adc
and
and
xchg
adc
cs
mov
and
push
insb
mov
and
fprem1
adc
and
inc
pop
sub
pop
lahf
xor
push
adc
push
adc
push
inc
jnp
or
xchg
inc
sub
xchg
add
adc
inc
xchg
pusha
inc
adc
and
mov
mov
out
sub
les
or
push
and
pop
rorb
and
xor
and
adc
ret
push
inc
arpl
cmp
add
jle
cmpl
jne
sub
dec
imul
add
mov
jmp
lea
inc
or
sub
mov
mov
mov
inc
cmp
jl
mov
dec
adc
in
and
dec
and
outsb
adc
rorb
and
call
mov
cltd
add
mov
adc
mov
jle
and
adc
arpl
adc
xlat
and
xchg
adc
sub
and
pop
ja
adc
dec
mov
jne
add
cmp
pop
jb
lea
mov
and
xchg
adc
addb
add
call
mov
movsl
xchg
and
mov
add
inc
adc
mov
dec
loopne
mov
cmpl
push
sub
adc
and
iret
test
stc
das
lahf
adc
stos
mov
notl
insb
and
adc
xchg
lods
adc
test
imul
adc
adc
and
jno
inc
lds
sub
sub
addb
test
lds
test
mov
and
adc
scas
fcomps
and
imul
test
fs
adc
pusha
sbb
hlt
push
adc
mov
sbb
int
loope
sub
aam
xchg
leave
and
add
and
dec
int3
sbb
flds
add
mov
and
sahf
and
jl
inc
cmp
jl
pusha
inc
push
inc
cmp
xchg
and
and
mov
inc
es
mov
dec
xchg
imul
xchg
and
stos
adc
inc
movsl
adc
adc
and
adc
adc
adc
push
mov
sahf
jae
and
xor
sar
sar
mov
mov
adc
mov
and
and
adc
push
and
adc
and
lea
push
push
and
and
les
inc
xor
jno
inc
cmp
mov
ljmp
adc
stos
and
adc
sbb
adc
push
adc
adc
add
roll
push
adc
jno
adc
adc
iret
inc
aaa
adc
jmp
paddw
mov
inc
push
push
push
data16
jne
adc
push
mov
je
je
arpl
lock
adc
lea
and
lods
mov
gs
push
adc
and
fwait
sbb
push
and
and
shrd
and
dec
loope
and
push
pusha
cwtl
and
test
cmp
add
mov
pop
lea
lea
pusha
pushf
adc
push
push
and
xor
adc
cmp
and
xor
adc
push
and
adc
and
xor
sub
adc
adc
push
loope
sbb
jmp
xchg
adc
push
int
and
rdtsc
pusha
cmovae
pop
and
dec
sbb
adc
andl
push
push
adc
andl
and
push
and
mov
test
andl
popa
inc
adc
adc
pusha
fldenv
scas
or
and
and
mov
push
adc
and
adc
es
and
add
adc
aas
add
cli
lds
mov
mov
nop
mov
lcall
aas
xor
adcl
add
mov
push
sub
les
jo
jge
adc
xchg
adc
and
sub
dec
int3
adc
pop
add
jge
loop
pop
push
stos
dec
clc
adc
mov
je
xlat
enter
xchg
fistl
xor
cli
jge
shrl
and
and
sub
and
notb
inc
lock
lds
xchg
movlps
jle
xchg
enter
call
jne
cmp
jne
mov
dec
jp
pop
push
mov
std
xor
repz
je
orb
adc
adc
adc
int
imul
popl
and
adc
inc
adc
jl
pusha
push
outsl
cmc
and
aaa
adc
jne
inc
mov
mov
shlb
imul
adc
cmp
daa
mov
or
inc
pop
addr16
inc
add
in
add
sub
ffreep
adc
or
mov
push
adc
xor
pusha
imul
inc
mov
mov
shr
aas
push
pop
jns
adc
movsl
mov
or
iret
and
movsl
and
adc
push
add
jge
cmp
cmp
outsl
es
loope
and
jb
mov
je
loope
and
inc
pusha
push
sub
lea
cmp
je
pop
inc
push
adc
test
and
and
gs
lahf
cmp
je
shl
loopne
add
lahf
mov
add
dec
mov
mov
test
jg
mov
adc
das
push
push
inc
fcoml
cli
enter
sahf
daa
andl
inc
rclb
cmp
daa
push
ss
ja
jno
test
je
scas
add
dec
and
add
mov
mov
mov
adc
and
jne
adc
mov
fidivrs
loopne
adc
cmp
or
and
and
push
and
sub
push
sahf
jne
daa
popf
sarb
mov
bound
cmc
lods
and
xchg
out
sbb
cmp
icebp
cmp
out
cmp
mov
or
popa
push
adc
mov
lds
push
mov
and
and
lret
loopne
adc
mov
mov
insb
cmp
or
and
adc
mov
scas
add
gs
fwait
xchg
lds
sub
dec
je
movl
dec
sub
adc
addl
push
sub
leave
cmp
es
add
jle
lea
and
cmp
and
add
xchg
mov
and
adc
adcb
fbld
pop
add
aas
aaa
sbbb
add
pop
add
add
adc
rcll
stos
adc
adc
data16
jae
and
sub
adc
mov
xor
lret
jmp
ficoms
and
call
and
adc
test
xchg
xchg
adc
jne
xchg
adc
sbb
adc
and
scas
adc
sub
dec
sub
insb
push
mov
dec
add
or
mov
cmp
ret
push
les
test
pusha
xor
sub
jle
cmp
pop
mov
mov
imul
cmp
cmp
test
mov
jb
insl
mov
adc
mov
mov
adc
adc
push
jbe
and
adc
and
inc
jns
and
and
and
pop
and
push
aas
adc
sub
popf
jg
dec
pop
daa
pop
add
test
adc
pop
and
adc
mov
mov
push
mov
mov
mov
hlt
inc
push
adc
adc
xor
mov
mov
or
movl
adc
inc
or
insb
orb
les
adc
or
enter
fdivrs
inc
cs
add
jmp
into
inc
or
mov
aam
add
adc
add
rolb
mov
adc
loop
sub
in
sub
mov
push
jno
sub
in
inc
movups
inc
or
je
pop
adc
adc
inc
add
adc
push
push
add
adc
or
adc
addb
or
mov
movl
adc
or
mov
adc
sbb
sub
push
pusha
sub
and
add
adc
inc
or
cmp
push
adc
and
movl
adc
pusha
sub
adc
inc
add
or
cmp
or
push
inc
or
mov
inc
inc
push
adc
add
adc
or
add
sub
adc
and
and
iret
arpl
cmpsb
and
dec
inc
fcoms
into
mov
adc
out
and
and
add
push
and
lea
and
adc
outsl
mov
lea
mov
adc
fisubl
pop
insl
add
je
mov
adc
sbb
das
ja
cmp
adc
cmp
mov
das
xchg
dec
and
aam
lea
outsb
push
iret
dec
sub
mov
sub
adc
and
cmp
and
fisubrs
adc
gs
push
lea
dec
fdivrl
sbb
icebp
sub
and
inc
cmp
test
insb
movsl
adc
pop
jne
and
push
sbb
xor
neg
cmp
and
insl
or
push
cmp
pop
aas
pusha
push
adc
negl
inc
add
jl
and
insb
bound
ljmp
jge
jne
adc
xchg
and
int3
adc
lahf
adc
and
test
inc
xor
ja
adc
mov
gs
cmp
inc
pop
adc
push
inc
add
adc
inc
rcll
pop
lods
inc
mov
or
popf
and
adc
mov
and
cmp
adc
or
push
push
push
outsb
push
adc
fidivrl
push
stos
orl
gs
insl
mov
inc
adc
and
push
adc
push
test
xchg
dec
pusha
movsl
push
and
pop
add
fwait
inc
inc
sbb
aaa
roll
dec
nop
and
inc
and
mov
and
xor
inc
pop
dec
and
sarl
scas
es
push
inc
popa
and
xor
cmp
inc
pushaw
xchg
push
mov
mov
mov
inc
and
inc
pop
and
and
xor
sbb
dec
cmp
dec
and
shll
jnp
cmp
adc
sar
jmp
mov
xor
and
pusha
shrl
and
jb
push
add
into
mov
adc
push
and
jb
sub
mov
popf
xchg
pusha
clc
adc
inc
push
adc
in
jbe
scas
xor
adc
negb
and
dec
popa
add
sub
andb
ret
dec
add
push
inc
push
and
add
pop
push
adc
jnp
jns
pop
add
cmp
jl
jmp
inc
sub
mov
cmp
push
pusha
adcb
and
dec
inc
mov
mov
mov
pop
and
jae
lcall
test
sarb
sbb
push
arpl
mov
loope
pop
xor
fsubrs
in
and
and
xchg
sahf
jle
xchg
ret
sub
and
adc
into
adc
and
bound
sub
xchg
adc
inc
push
adc
jg
and
hlt
and
xor
push
and
lea
mov
push
add
out
and
lea
cmp
testl
mov
jbe
adc
scas
out
and
repnz
aam
jo
and
push
mov
jne
fadds
inc
adc
push
mov
jl
dec
add
and
xor
and
jno
adc
adc
push
push
push
xchg
hlt
adc
and
lock
or
dec
and
and
shll
into
mov
cmp
mov
rep
pusha
push
dec
mov
sub
push
and
scas
aaa
adc
xor
and
and
cmc
adc
and
xchg
and
dec
outsb
sti
adc
mov
in
shrb
jle
add
jle
fldl
mov
insl
pop
ja
pop
jl
push
add
push
dec
and
xchg
adc
xlat
popf
repnz
jecxz
stos
pushf
dec
xchg
inc
imul
pushf
sbb
push
xor
inc
sub
dec
lahf
dec
adc
and
cmp
mov
ljmp
mov
push
mov
sub
popa
adc
pop
dec
sbb
or
dec
and
dec
popa
inc
pop
insb
data16
das
and
ds
adc
mov
jbe
je
adc
mov
jle
and
xchg
and
jp
incl
dec
mov
jne
and
adc
ret
das
adc
pop
shlb
xchg
mov
mov
addr16
jmp
push
daa
adc
je
dec
add
dec
lret
sbb
mov
sub
sub
mov
mov
adc
dec
push
orl
lcall
lea
push
add
push
push
lea
push
dec
stos
and
adcl
xchg
jnp
pusha
inc
adc
je
inc
inc
and
and
into
inc
adc
and
adc
sbb
adc
inc
test
cmp
mov
adc
jae
dec
jnp
pusha
mov
sbb
adc
adc
inc
or
adc
inc
loopne
inc
and
add
push
sbb
shlb
insb
xor
and
lret
pop
int
and
jg
jbe
and
and
aas
adc
cmp
adc
repz
cmp
dec
fsts
icebp
and
xor
adc
xor
cwtl
mov
mov
and
in
jo
ss
dec
and
push
sub
or
and
and
inc
pop
fs
adc
pop
and
sub
or
mov
test
xchg
jno
and
adc
inc
mov
push
movlps
mov
and
inc
add
push
pusha
mov
pop
shlb
cmp
jne
mov
dec
popa
adc
fsubl
and
pop
adc
xor
and
inc
adc
push
inc
adc
dec
and
mov
and
dec
push
test
mov
mov
and
xchg
adc
adc
and
ret
adc
and
push
fstl
clc
je
orb
dec
and
inc
lock
sbb
sti
jmp
pop
fists
adc
cmp
mov
pop
pop
clc
mov
mov
push
xchg
cli
stos
scas
and
cmp
adc
adc
pusha
xor
mov
and
outsb
daa
mov
mov
pop
xorb
adcb
and
retw
adc
mov
cmp
jno
adc
jl
xchg
addr16
lods
and
adc
daa
inc
add
push
mov
mov
cmp
je
loopne
and
xchg
adc
xchg
scas
scas
in
adc
shld
adc
das
daa
data16
jg
adc
inc
jmp
and
and
scas
mov
mov
xchg
gs
adc
jnp
shll
lods
mov
dec
sub
or
pusha
or
push
js
and
and
xchg
ret
adc
and
xchg
and
adc
jl
cmp
push
mov
mov
inc
loope
sub
or
sbb
cmp
je
cmp
je
and
dec
adc
mov
js
mov
inc
popa
adc
lods
ret
scas
and
sub
and
xchg
adc
mov
shlb
cmp
mov
jne
inc
pop
adc
adc
adc
fisttps
cmp
jle
mov
mov
mov
popa
pop
add
pop
flds
xor
inc
es
rclb
push
je
fs
repnz
call
fldl
add
fdivs
inc
adc
inc
xchg
mov
inc
and
sbb
push
adc
jnp
xchg
xor
frstor
xchg
and
push
or
and
adc
and
sahf
mov
loope
sub
xchg
mov
daa
pop
adc
adc
push
push
adc
and
pop
cmp
movsb
dec
adc
repz
inc
and
adc
and
lahf
xchg
nop
adc
and
sbbb
outsb
sbbb
out
es
add
jo
and
inc
data16
push
adc
pop
add
ljmp
adc
and
mov
sbb
imul
and
add
xchg
add
inc
mov
add
call
cltd
popa
mov
and
idiv
test
jge
add
and
adc
push
insb
je
adc
je
xor
repnz
and
jae
adc
mov
adc
inc
and
adc
pop
pop
adc
inc
sbb
adc
cltd
faddl
dec
cmp
pop
cli
adc
pusha
adc
inc
or
adc
scas
and
cwtl
popa
and
ficompl
out
xorb
pusha
outsb
adc
inc
push
jle
andb
cmp
in
or
pusha
adc
mov
adc
and
xor
xor
adc
fstpl
arpl
adc
out
and
fsubs
mov
ja
daa
xchg
sub
add
xchg
ds
adc
dec
movsb
inc
adc
out
and
adc
and
scas
push
adc
adc
bound
cs
sbb
and
cmp
je
js
adc
movl
repz
dec
inc
push
ret
adc
jg
push
or
push
dec
mov
rcr
mov
adc
js
rcll
sbb
aaa
pop
push
push
mov
mov
inc
test
insl
mov
mov
test
jns
dec
jns
and
push
test
pop
and
sub
sub
and
and
adc
inc
and
mov
add
mov
adc
pusha
or
add
lahf
adc
cmp
jne
dec
push
orb
push
add
jo
adc
push
adc
ljmp
call
insb
and
and
adc
mov
in
mov
je
cmp
jl
adc
dec
sub
je
mov
adc
and
jne
jl
adc
je
and
inc
pop
and
popa
sbb
rcl
lods
fwait
adc
dec
addl
add
mov
and
dec
subl
dec
adc
enter
jns
es
sub
sahf
lahf
rorb
outsl
add
sub
adc
sub
adc
cmp
es
adc
or
and
insb
adc
xchg
xchg
adc
cmp
andl
cli
adc
and
or
adcl
adc
push
mov
push
push
bound
adc
inc
js
dec
and
and
adc
jmp
mov
loopne
sub
movups
dec
adc
and
mov
xchg
arpl
adc
scas
mov
inc
fwait
adc
xchg
das
out
pop
out
inc
pop
subl
adc
mov
leave
je
mov
and
dec
push
push
adcb
pop
inc
gs
test
je
and
cmpsl
sti
arpl
and
and
sub
out
jae
and
lret
inc
dec
and
das
jo
and
push
adc
movsl
push
enter
push
push
arpl
adc
adc
mov
sbb
leave
jle
mov
or
and
mov
enter
lret
inc
adc
adc
pop
mov
adc
shr
in
aas
ret
mov
in
xchg
pop
adcb
and
adc
xor
and
int
push
or
adc
jl
and
adc
inc
mov
test
jl
inc
and
adc
jl
push
inc
adc
and
data16
adc
mov
adc
mov
outsl
sbb
adc
adc
stos
sbb
jne
inc
and
adc
xchg
push
adc
inc
pop
adc
dec
sub
dec
or
dec
jl
dec
and
adc
and
sub
dec
push
sub
add
and
and
fiaddl
adc
xchg
sub
and
les
mov
mov
outsb
mov
int3
pop
push
or
fdivs
mov
and
ja
in
into
mov
scas
mov
jp
mov
repnz
xchg
and
sub
cmpl
and
and
adc
add
push
mov
mov
sub
inc
cmc
adc
mov
pop
dec
add
pusha
pop
sbb
dec
inc
cmp
jl
inc
mov
adc
pop
and
xor
cmp
mov
jle
dec
inc
pop
adc
mov
dec
adc
push
mov
insl
adc
pop
xorb
sahf
pusha
mov
xchg
out
adc
or
cmp
je
mov
stos
push
and
jge
pop
inc
aad
out
and
pop
imul
mov
bound
repz
adc
test
or
scas
pop
inc
std
adc
or
and
iret
inc
sub
pop
cmpsb
arpl
loopne
andb
loopne
adc
inc
faddl
adc
int
and
adc
jl
ficoml
add
adc
cltd
mov
and
add
mov
rclb
idiv
inc
push
sub
cmpsl
enter
inc
enter
ss
pop
inc
cmpsb
and
and
sub
pop
adc
test
mov
inc
adc
pop
adc
dec
and
pusha
shll
daa
pop
daa
pop
or
jg
adc
mov
adc
mov
ljmp
lds
adc
sbb
and
adc
and
cmc
mov
xchg
test
rorb
test
dec
aaa
adc
adc
jge
mov
ret
sub
cmp
jge
mov
adc
inc
mov
aas
sbbb
loopne
adc
or
adc
dec
cmpl
sub
cmp
jl
mov
lcall
daa
andl
in
je
push
adc
push
lea
xchg
adc
push
mov
jmp
movb
adc
iret
cmpb
cmpb
inc
inc
adc
mov
lcall
adc
push
lds
movl
and
sub
dec
mov
pop
adc
and
add
jl
out
push
adc
roll
jae
insb
rolb
adc
adc
loope
adc
mov
jne
and
mov
and
lds
jle
sub
pop
adc
movl
or
adc
addb
arpl
popa
adc
inc
cmp
add
and
outsl
adc
mov
rorl
lods
sti
and
add
push
add
adc
fs
and
xchg
and
movsb
outsb
adc
dec
sub
push
and
mov
jnp
js
adc
sub
add
pop
dec
in
push
cltd
and
pop
and
add
inc
mov
adc
inc
fbld
cltd
sub
or
pop
fld
fcos
fmul
fsubrl
daa
adc
fxch
fsin
inc
or
inc
and
sub
push
frstor
ljmp
or
inc
xchg
das
lahf
sbb
adc
mov
and
and
js
adc
pop
daa
adc
inc
sti
inc
das
adc
xorl
repz
adc
push
stos
adc
dec
push
nop
sub
adc
test
inc
inc
sub
push
pop
mov
adc
and
or
inc
push
adc
test
mov
and
inc
adc
daa
les
and
shll
adc
and
push
and
test
push
nop
call
and
mov
push
neg
sbb
inc
and
es
or
lods
jbe
pusha
push
push
orb
xchg
movsb
mov
dec
aas
lods
jae
dec
aas
mov
jb
outsb
xor
addr16
or
push
sbb
jne
adc
gs
and
push
mov
and
mov
adc
and
adc
cmpsl
pop
adc
dec
or
add
jl
pusha
and
mov
and
inc
and
arpl
push
and
and
adc
and
and
and
jmp
jl
xchg
xor
push
inc
js
pop
xchg
and
and
or
add
andl
adc
shlb
fists
test
dec
push
xchg
adc
mov
adc
mov
je
cmp
jne
and
shll
sub
inc
and
in
inc
ljmp
mov
lret
arpl
int3
adc
dec
jns
es
and
and
xchg
inc
shll
sub
adc
mov
mov
adc
and
xor
mov
icebp
push
and
adc
mov
and
cmp
mov
jge
adc
and
inc
and
sub
adc
add
js
mov
pop
popa
mov
pop
xor
in
sbbl
sub
xor
or
cmp
inc
sbb
xchg
je
adc
xchg
adc
and
jle
pop
adc
adc
pusha
or
dec
sub
adc
gs
adc
loop
and
dec
adc
scas
cmp
in
data16
mov
and
pusha
sbb
add
and
adc
inc
std
mov
push
jns
adc
xchg
inc
or
push
fstl
adc
inc
add
push
adc
rcr
push
popf
adc
inc
or
and
adc
xchg
loopne
repz
adc
fsin
inc
add
fcompl
das
adc
je
shlb
pop
xor
add
loopne
push
add
jne
fld
and
xor
sub
lret
fxch
fstp
add
cmp
jae
out
mov
dec
inc
inc
cmc
adc
mov
je
and
adc
fdivl
or
outsl
mov
push
xchg
inc
xchg
adc
push
jne
push
movsb
rclb
add
or
adc
add
inc
pop
add
adc
repz
mov
inc
std
adc
repnz
dec
adcb
cmp
push
or
inc
jne
adc
jle
and
bound
push
mov
pushf
adc
lahf
mov
push
adc
pop
pusha
cs
pop
inc
rcll
push
sbb
addb
outsl
adc
sub
test
adc
xchg
adc
and
pusha
push
inc
adc
insb
roll
and
pop
push
push
or
idivb
decb
dec
sub
push
and
adc
imul
rolb
adc
ret
mov
jp
adc
mov
adc
outsl
adc
insl
mov
mov
sub
and
xor
mov
adc
cmp
mov
xchg
and
cmp
push
fbld
adc
iret
inc
mov
sub
mov
pusha
mov
mov
mov
outsb
adc
mov
mov
inc
adc
mov
mov
lods
adcb
pusha
test
adc
mov
xchg
adc
jl
sti
push
jae
dec
mov
and
add
mov
adc
and
and
pop
and
adc
test
aaa
mov
adc
dec
jo
adc
adc
or
adc
mov
fs
dec
adc
sti
add
lds
ja
jmp
push
push
insb
cmp
jne
sub
fcmovbe
rolb
scas
mov
pop
jle
adc
add
rcrb
fldenv
adc
add
or
adc
pop
or
addl
jne
loope
sub
cmp
fs
push
adc
addr16
xchg
pop
adc
call
add
out
fisubs
adc
and
xor
sbb
mov
adc
and
lods
mov
jnp
and
pushf
adc
add
imul
rclb
jl
jle
add
and
addl
dec
sti
add
add
jecxz
mov
or
push
add
leave
push
adc
sti
add
mov
fisubl
jo,pt
or
and
inc
mov
inc
lock
dec
pop
movsb
adc
cmp
lock
sti
add
xchg
adc
xchg
inc
add
addb
pusha
and
push
rclb
std
sub
add
pusha
pop
sub
adc
jp
adc
mov
stc
out
mov
mov
fidivrs
and
nop
inc
test
add
adc
mov
dec
adc
inc
add
cmpsl
inc
add
imul
movsb
in
adc
adcl
mov
testb
and
adc
aad
rcll
push
inc
and
lcall
incb
jb
pop
pop
push
rol
rcll
pop
sub
pop
dec
adc
inc
mov
inc
notb
aas
and
inc
sbb
jle
cmpl
jle
mov
inc
or
sub
jp
add
mov
push
inc
mov
and
inc
adc
movl
adc
inc
and
test
sub
pop
das
mov
push
and
jbe
mov
movsb
test
add
shlb
loope
je
and
pop
adc
mov
push
js
std
and
and
and
push
and
daa
add
jno
iret
mov
adc
es
inc
lahf
adc
jo
and
mov
inc
inc
and
adc
xchg
inc
add
iret
mov
cmpsl
inc
dec
adc
inc
add
mov
inc
add
popl
and
adc
and
sub
fdivl
fisubl
filds
adc
sbb
cmpsl
push
inc
jno
testb
or
repnz
out
xchg
out
adc
xchg
jbe
and
orb
push
and
and
and
inc
enter
adc
and
and
js
jmp
push
sub
pushf
andl
sub
and
dec
adc
sbb
mov
and
and
inc
lret
mov
mov
jnp
pop
pop
inc
jg
mov
mov
and
lods
stos
cltd
adc
cmp
inc
adc
adc
ret
mov
rclb
or
mov
push
lods
jno
outsl
or
fdiv
jb
dec
push
scas
adc
icebp
gs
fstp
fmull
mov
mov
inc
cli
adc
leave
out
adc
fmul
mov
inc
jnp
mov
add
outsb
push
sub
cltd
fstp
sub
mov
sar
add
adc
cmp
cmp
inc
jns
mov
and
xchg
adc
dec
and
pop
and
inc
int
and
test
test
arpl
adc
and
cmp
cmp
dec
out
adc
rclb
hlt
add
movsl
outsl
sub
push
and
and
cmp
push
xlat
adc
inc
xchg
and
es
xor
mov
adc
jle
and
es
shll
pusha
js
push
jp
std
dec
adc
aas
jle
push
data16
mov
and
lea
adc
sub
and
aas
and
push
sbb
and
ror
nop
pusha
ret
dec
or
cli
je
test
je
mov
mov
mov
inc
movaps
add
clts
adc
rclb
inc
and
and
push
and
inc
fiaddl
mov
adc
and
xor
inc
and
inc
and
push
adc
outsl
add
stc
and
add
outsl
mov
clc
call
ljmp
das
outsl
add
xor
push
and
push
and
inc
jp
and
repnz
and
out
dec
and
ret
adc
dec
xor
push
std
pop
or
cmp
add
lds
or
inc
mov
adc
cmp
xor
sahf
sub
or
push
dec
popa
int3
adc
sub
mov
insl
and
lcall
sub
xchg
inc
pop
and
mov
and
sub
inc
rclb
and
mov
adc
inc
and
dec
and
inc
adc
mov
jp,pt
cmp
adc
neg
dec
add
imul
inc
xor
push
dec
push
and
adc
and
imul
fs
adc
lcall
mov
sub
pusha
and
sub
adc
sti
pop
push
push
adc
mov
cmp
adc
cwtl
adc
cs
arpl
popa
or
pusha
or
and
jmp
and
dec
and
push
adcl
and
hlt
adc
pusha
push
pusha
xor
es
pop
and
adc
and
cmp
jno
call
arpl
inc
xlat
sub
add
dec
gs
rorl
adc
push
adc
adcb
dec
mov
pop
adc
jg
popa
shll
sahf
and
add
push
and
adc
jg
mov
pusha
adc
add
and
jmp
jmp
and
push
adc
push
pop
aam
mov
fbld
mov
inc
les
and
inc
and
sub
pop
add
inc
pop
and
fs
enter
daa
cmp
and
sub
and
mov
mov
adc
insb
and
adc
leave
and
jnp
sub
xor
pop
and
mov
push
and
mov
push
and
inc
call
and
inc
pop
mov
dec
jae
adc
push
mov
and
popa
adc
sbbl
xor
adc
push
inc
insl
adc
sub
add
pusha
and
adcl
cmp
pop
and
mov
cwtl
inc
les
push
insb
sub
push
and
inc
mov
and
sub
push
inc
aas
xorb
adc
mov
or
cmp
inc
and
dec
adc
adcb
and
enter
push
and
sub
dec
pusha
dec
and
es
push
xor
add
and
daa
adc
fsubrl
and
adc
fsubrs
sbb
adc
adc
and
mov
sbb
push
ret
je
adc
pop
test
pop
and
mov
adc
cs
inc
add
clc
outsl
cmpb
sub
addr16
movsb
and
fsubs
pop
and
sub
arpl
negb
pop
repnz
and
and
push
adc
inc
das
adc
jno
scas
cmp
jp
scas
cmp
sub
cmp
add
adc
and
or
in
and
adc
adc
and
pop
adc
or
adc
mov
inc
aaa
sbb
or
push
call
dec
fcoms
test
jbe
dec
fistl
ja
arpl
and
or
xor
adc
daa
aas
add
adc
dec
and
es
enter
lret
leave
popa
adc
cmpb
enter
and
enter
pop
adc
and
pop
lcall
inc
pop
sub
add
inc
xor
aas
add
insl
adc
inc
push
inc
push
adc
loop
inc
push
popa
movsb
cmpsl
hlt
sub
cmp
call
push
mov
mov
and
push
and
clc
and
xchg
adc
loop
clc
mov
and
andl
test
adc
jle
and
and
adc
adc
adc
pop
jo
mov
not
adc
jne
inc
outsl
pop
dec
mov
test
jne
mov
cmp
lahf
test
aas
pusha
mov
ret
movsb
and
and
fnstenv
and
and
loope
rorb
filds
adcb
add
inc
jmp
and
and
in
adc
and
or
mov
adc
xchg
inc
call
push
mov
jbe
mov
dec
pusha
adc
xor
push
arpl
or
and
pusha
add
jmp
mov
or
push
loope
mov
cmpb
andl
and
outsl
sbb
and
push
push
adcb
inc
aaa
and
dec
adc
test
push
inc
and
incl
and
mov
adc
adc
movsbl
sti
add
xor
mov
add
movsbl
je
push
sub
pusha
push
add
movsbl
xor
mov
add
movsbl
mov
add
movsbl
xchg
movsl
sub
mov
movsbl
sti
add
jne
add
movsbl
add
movsbl
jl
cmp
movsbl
add
movsbl
cmp
jle
pop
or
push
mov
adc
adc
daa
or
arpl
das
dec
mov
dec
mov
adc
inc
xchg
xor
xor
adc
sarl
adc
fldt
inc
and
dec
and
adc
shlb
sub
add
dec
push
ja
je
mov
cmp
jge
push
lea
and
and
jge
sub
mov
sub
push
lea
and
jmp
mov
inc
sub
pop
inc
inc
adc
cs
add
sub
push
adcb
jg
sub
pop
pop
neg
inc
adc
sub
iret
adc
mov
adc
mov
push
and
and
mov
adc
adc
add
adc
add
inc
add
xorb
jle
sbb
je
pop
adc
add
sub
lret
push
out
xor
adc
scas
jae
mov
push
pusha
xchg
adc
je
insb
push
lret
or
mov
xchg
sub
add
adc
cmp
je
mov
adc
adc
mov
add
adc
sbb
pusha
adc
mov
adc
inc
inc
adc
mov
xchg
sub
add
adc
jbe
pusha
mov
pop
and
adc
test
gs
and
inc
add
movl
add
jne
lea
mov
mov
and
mov
mov
inc
and
sbb
movsl
mov
mov
mov
and
scas
sbb
call
test
mov
mov
adc
add
addb
inc
mov
mov
jne
cmp
jb
jne
and
push
inc
cmp
pop
movl
dec
cmp
jne
and
pop
adc
lea
fs
adc
jg
pop
inc
adc
scas
inc
sbb
mov
adc
mov
jg
adc
cmpb
xchg
and
pop
adc
mov
cmp
or
aas
cs
adc
push
dec
adc
dec
and
inc
add
repnz
mov
mov
mov
mov
mov
lea
mov
lea
loopne
sbb
sbb
dec
cmp
pusha
mov
inc
lea
push
cld
and
pop
mov
mov
cmp
jl
ss
andb
inc
mov
sub
and
inc
mov
and
sbb
push
mov
shl
mov
and
inc
adc
scas
pop
sbb
and
xor
adc
adc
and
and
jns
adc
and
in
mov
xor
lea
pop
adc
mov
mov
or
leave
mov
add
lea
cmp
ja
xor
mov
pop
rclb
adc
push
adc
adc
push
pop
adc
inc
or
sbb
mov
inc
mov
shl
or
mov
shr
aas
xchg
add
jmp
mov
call
pop
lds
shr
and
shr
loop
es
fistl
or
mov
shl
inc
or
mov
or
inc
xor
add
cmp
or
rolb
add
inc
add
pop
add
pop
add
adc
cli
shr
ljmp
inc
mov
imul
jp
adc
ret
dec
adc
mov
fistl
leave
mov
sub
xlat
and
pop
adc
and
adc
cmp
test
sbb
mov
and
xor
out
subb
mov
movl
popa
ret
ret
mov
mov
pop
movl
adc
and
pop
pop
add
ret
nop
fldcw
inc
add
add
popa
inc
add
jbe
add
mov
xchg
sub
sub
add
leave
pushf
jl
inc
add
mov
and
adc
sub
insb
loope
cmp
jge
int3
mov
cmp
and
fs
cmp
mov
scas
pop
and
fidivl
test
and
adc
inc
sbb
or
and
je
inc
inc
adc
jne
pusha
push
adc
or
insl
adc
inc
or
mov
adc
jle
adc
scas
out
push
and
pop
push
sbbb
dec
adc
and
pop
and
pop
inc
push
mov
outsl
insb
adc
jmp
mov
push
jle
shl
imul
mov
orl
push
adc
and
shl
push
inc
jno
sar
imul
and
subl
mov
out
push
sbb
call
loope
inc
rcll
clc
inc
cmp
and
bound
enter
mov
inc
sub
inc
push
adc
inc
cmp
and
je
or
clc
mov
and
mov
dec
sbb
aam
cmp
xchg
adc
popa
lds
and
and
and
push
and
lds
sub
adc
xchg
and
adc
lds
adc
adcl
and
inc
test
pusha
mov
xchg
adc
adc
xchg
add
cmp
xchg
add
inc
and
adc
inc
or
imul
push
inc
jmp
adc
and
cmp
push
and
sub
pop
and
test
ja
and
rclb
cmp
jae
adc
mov
and
clc
or
pop
inc
adc
std
or
shl
and
pop
adc
jmp
push
adcl
and
ret
and
xor
adc
scas
and
loop
cli
and
push
sbb
decl
add
mov
sar
push
and
push
dec
in
loopne
sub
and
sbb
mov
imul
sub
shrl
and
sbb
pusha
pop
adc
cs
sbb
add
adc
pop
adc
out
mov
jg
adc
jge
inc
adc
adc
dec
mov
mov
mov
sub
imul
imul
imul
inc
mov
mov
and
cmp
sbb
call
adc
or
and
out
lods
mov
and
inc
pusha
ja
cmc
push
inc
ret
mov
and
adc
mov
push
inc
into
adc
popa
bound
movsb
mov
push
pusha
push
adc
or
push
pusha
mov
adc
adc
incb
adc
rorb
scas
fsubp
adc
stc
or
adc
jmp
leave
shr
stos
push
cmp
inc
lock
nop
inc
daa
inc
and
add
xor
adc
mov
scas
int
adc
inc
gs
into
mov
adc
inc
jb
pusha
sub
insb
and
mov
pusha
aas
adc
cmpb
and
arpl
mov
into
orb
loop
and
dec
and
push
shr
sets
out
loope
rcll
xchg
bound
and
xchg
adc
mov
movsl
sbb
pop
xor
addb
rcll
inc
pop
push
pop
adc
shll
movsl
and
bound
mov
mov
or
push
ret
outsl
adc
mov
outsl
adc
mov
mov
outsl
adc
mov
jb
adc
push
cwtl
int
sar
adc
add
push
jbe
inc
inc
notl
cmp
jno
pusha
adc
inc
pop
adc
or
fadds
adc
push
push
mov
je
sbb
adc
daa
je
adc
je
adc
and
arpl
bound
sbb
adc
jp
add
xchg
push
jae
pop
dec
inc
mov
and
inc
pop
adc
mov
mull
xor
popa
and
inc
adc
mov
inc
adc
bound
adc
inc
pop
adc
xlat
mov
and
cmpsl
and
inc
pop
adc
rorl
clc
and
push
inc
mov
inc
adc
inc
push
pop
xchg
adc
test
scas
rorl
fiaddl
ret
mov
sub
mov
sub
and
insb
jl
cmp
jge
push
pop
adc
stc
jle
jmp
adc
adc
call
mov
or
ljmp
insl
inc
scas
adc
adcl
pop
adc
insb
and
jl
or
sub
shlb
js
pop
inc
dec
adc
adc
pop
and
inc
adc
push
pop
sbb
and
imul
mov
push
ret
decb
and
jg
jae
sbb
out
adc
sub
add
inc
inc
and
addb
inc
and
dec
cmp
jge
lret
pusha
sbb
inc
inc
jle
cmpb
ds
in
call
and
clc
pop
adc
pusha
sbb
fiadds
and
jg
sbb
jnp
push
adc
mulb
push
and
mov
ret
sub
pusha
push
loopne
jae
cmpb
or
add
add
inc
adc
daa
jae
and
lret
lea
inc
push
bound
push
adc
sarb
and
adc
push
adc
lea
adc
adc
jle
addr16
dec
mov
sub
adc
rolb
imul
inc
sbb
add
leave
inc
adc
adc
inc
lods
mov
incl
inc
ljmp
loope
pusha
add
rorl
sub
mov
loope
inc
mov
and
inc
push
add
enter
stos
sub
jmp
ret
mov
pop
sub
je
adc
add
mov
pusha
fs
ret
add
cmpsl
add
mull
pusha
jae
fists
pop
and
push
add
dec
shr
repz
mov
lea
mov
xor
dec
xchg
adc
sahf
out
adc
outsl
and
adc
sbbb
imull
rcrb
push
and
mov
lcall
adc
cmp
addr16
and
adc
shll
dec
pusha
sbb
ret
mov
aam
adc
mov
loop
add
lea
shl
and
pusha
adc
add
test
add
fucomi
adc
or
jmp
mov
dec
xor
fsubrl
add
mov
cmp
adc
jmp
sarb
or
jmp
sar
out
adc
dec
ja
jbe
rorl
mov
and
cli
cmpb
pop
and
pop
push
mov
cmp
jmp
mov
push
push
jmp
sar
mov
int3
outsb
and
add
and
mov
imul
xor
xchg
pusha
push
call
dec
test
mov
and
fbld
and
gs
adc
out
adc
cmpsb
mov
xor
ret
inc
and
pop
adc
dec
int3
gs
adc
and
adc
jmp
dec
cmpsb
pop
es
push
stos
pushf
inc
push
adc
out
jmp
sbb
mov
xor
hlt
js
adc
adc
and
adc
adc
sub
add
or
and
adc
das
sbb
pop
add
push
outsl
je
gs
sbb
push
xor
push
cmp
and
dec
push
adc
jmp
mov
jp
mov
xlat
and
sahf
push
and
int
test
andl
xor
cmp
and
adcl
mov
jne
and
adc
dec
and
cmc
and
pusha
fwait
arpl
and
and
push
cmpsl
sbb
xor
jle
cltd
pop
jl
and
jmp
inc
inc
adc
scas
subb
cmp
test
xor
add
subb
adc
and
adc
test
mov
adc
int
xorl
cmp
je
loopne
adc
mov
inc
cld
sub
movups
add
sub
and
adc
sarb
mov
dec
and
inc
daa
call
loopne
mov
jmp
adc
and
and
adc
jge
and
jne
jp
and
adc
mov
push
and
and
and
cmp
call
cmpsb
and
push
pop
adc
xchg
cmp
jo
adc
adc
sub
and
xor
sub
and
mov
and
xor
jl
adc
mov
pusha
add
push
and
loopne
adc
mov
je
push
in
inc
mov
and
xor
inc
push
mov
mov
sahf
and
repnz
je
and
rcll
add
mov
pusha
adc
mov
call
adc
inc
push
sub
inc
dec
adc
jg
push
les
mov
and
and
jmp
and
and
mov
popa
cmpsl
adc
mov
pop
adc
add
das
jg
and
dec
and
xor
ds
and
mulb
mov
and
pop
daa
movsl
add
push
and
ret
sahf
enter
jbe
adc
je
inc
bound
loop
outsl
and
and
ljmp
js
adc
sarl
mov
and
in
mov
and
and
ficomps
xchg
fwait
and
ret
adc
sbb
subb
es
add
and
inc
and
xchg
xchg
and
and
orb
pusha
ret
mov
clc
or
clc
or
insl
and
and
push
and
sahf
adc
pop
adcb
and
pop
pop
jg
pusha
and
aam
and
stos
pusha
xor
stos
cmp
cwtl
and
mov
and
and
adc
test
and
cmpb
pusha
js
stc
pusha
js
dec
pop
mov
es
add
mov
xchg
and
ja
mov
popl
adc
inc
lahf
inc
andb
sub
inc
pop
xorb
loop
insb
lahf
adc
fildll
mov
call
and
jae
pusha
fcoms
and
dec
popa
mov
push
inc
adc
pusha
pop
arpl
pop
and
adc
push
and
xchg
and
scas
mov
fisubs
test
and
int3
adc
shll
push
and
adc
test
mov
sub
adc
add
movsb
add
mov
and
les
mov
adc
inc
mov
and
adc
mov
sbb
and
and
push
inc
inc
adc
push
xor
mov
faddp
lret
ds
cmpsb
daa
adc
inc
xor
movsb
mov
adc
test
jmp
mov
mov
push
mov
and
xchg
and
and
nop
and
add
sbb
add
cmp
xchg
jl
inc
and
mov
sub
out
inc
add
jno
test
dec
inc
and
lds
ret
and
movsb
or
mov
adc
adc
out
ret
loop
arpl
adc
and
adc
or
shl
push
adc
or
xchg
fwait
adc
sbb
jae
adc
std
jns
jbe
push
call
mov
inc
scas
shlb
jne
xlat
add
test
cld
and
je
sub
jbe
push
mov
arpl
and
mov
enter
adc
cmpb
scas
scas
and
adc
adc
mov
lcall
push
xor
push
push
cmp
push
je
repnz
adc
jo
mov
mov
sbb
adc
cli
cmpsb
pop
adc
xchg
and
ds
mov
adc
inc
sub
adc
sub
cmp
ja
les
push
adc
and
mov
and
mov
adc
inc
mov
sbbb
mov
mov
rolb
adc
adc
movb
and
cmpb
push
and
mov
cmp
mov
adc
andb
pop
adc
adc
lock
xlat
push
and
sbb
adc
adc
rorl
roll
add
sub
arpl
and
add
add
mov
inc
and
push
and
xor
and
inc
add
pop
add
jg
and
mov
pusha
pop
adc
inc
mov
mov
adc
jg
jmp
mov
and
pop
subb
mov
jb
sub
jo
ret
inc
mov
pop
xchg
adc
or
mov
sbb
rolb
inc
pop
adc
add
add
cmp
add
add
or
adc
sub
add
add
inc
add
movsb
inc
or
aad
aas
add
cwtl
mov
add
sbbl
mov
cmp
push
jb
jecxz
adc
mov
adc
adc
inc
add
inc
and
adc
clc
mov
mov
cmp
pop
jle
sub
pop
dec
and
ret
pop
cmp
mov
pop
ret
pusha
data16
inc
mov
mov
mov
sub
dec
cmp
ja
jmp
mov
ljmp
adc
mov
rorb
pop
adc
and
mov
popa
inc
xor
adc
add
jns
add
addl
adc
incl
dec
dec
adc
push
push
push
int3
lea
cmp
xchg
int3
lea
cld
arpl
and
and
and
cmp
and
and
jno
and
adc
xchg
push
adc
sbb
mov
fsubs
out
adc
mov
push
push
lea
xchg
cmp
adc
xchg
add
adc
push
and
add
adc
and
and
cmp
cld
daa
mov
adc
outsb
and
inc
adc
mov
sub
pusha
and
jno
cmp
je
and
or
adc
and
sti
ljmp
and
xchg
sub
and
adc
inc
sti
and
adc
xchg
dec
inc
adc
rorb
adc
lret
pop
cwtl
and
adc
and
mov
es
int3
adc
xchg
and
mov
sbb
xchg
shlb
adc
mov
xor
sub
add
ss
adc
pop
pusha
inc
adc
mov
inc
and
fs
mov
jbe
jno
xor
pop
mov
mov
push
and
sub
dec
xor
add
xchg
and
push
das
mov
hlt
inc
sbb
sub
adc
xor
ja
adc
sbb
movsb
mov
dec
add
cmc
and
xchg
pusha
dec
xor
adc
subl
adc
cs
sbb
sbb
xchg
sub
adc
and
inc
xor
clc
cs
add
xor
xchg
xor
add
xchg
dec
test
xchg
add
xor
and
pop
adc
pusha
and
pop
add
sub
mov
xor
xlat
add
dec
add
xor
jae
xor
adc
xor
add
cmp
dec
add
xor
xchg
mov
dec
add
or
lahf
xor
and
and
dec
add
pop
xor
add
and
adc
dec
add
fs
add
fimuls
sti
cli
scas
cmp
jne
push
inc
jge
adc
sub
add
cmp
and
sub
jne
and
sub
add
cmp
andb
cld
pop
and
xchg
das
mov
out
and
and
and
inc
or
adc
add
inc
add
xchg
inc
add
lods
inc
add
movb
filds
adc
inc
add
enter
inc
add
movsl
inc
add
out
inc
add
leave
inc
add
add
imul
test
adc
inc
add
iret
inc
add
call
lret
sbb
adc
inc
add
dec
inc
add
gs
add
jle
add
xchg
inc
add
mov
add
leave
inc
add
loop
add
jg
lods
inc
add
adc
add
add
pop
or
or
or
push
and
movups
adc
and
adc
and
adc
sbb
inc
or
and
inc
add
and
adc
lea
adc
fbld
adc
fnsave
and
and
adc
mov
sbb
sbb
clc
mov
mov
ja
adc
mov
sub
adc
jl
cmp
jg
mov
mov
adc
dec
push
adc
add
mov
and
adc
icebp
and
cmp
je
cmp
and
fcoml
ds
cwtl
jle
sbb
or
ret
cmpsl
sti
adc
cmp
adc
mov
xchg
add
mov
subb
jae
and
cmp
inc
push
addb
push
adc
out
inc
mov
add
mov
mov
adc
dec
add
adc
sub
adc
adc
adc
cmp
or
aas
cmp
jl
adc
add
and
adc
bound
sti
xor
pusha
iret
adc
gs
stos
gs
es
adc
push
add
adc
andb
scas
daa
and
and
pusha
and
stos
mov
and
and
gs
adc
xchg
inc
jnp
xor
adc
repnz
das
sub
add
arpl
adc
push
add
mov
mov
int
les
imul
add
loopne
gs
sbb
outsl
out
sbb
loopne
and
adc
adc
pop
and
lock
ss
gs
sbb
je
loopne
gs
sbb
ja
loopne
gs
sbb
and
js
xchg
adc
orl
push
adc
xchg
adc
les
or
insb
mov
mov
xchg
adc
xor
sbb
add
jns
adc
cmp
and
adc
fs
add
insb
sub
add
movsb
inc
imul
dec
and
adc
sbb
addb
sub
scas
inc
es
gs
gs
pusha
adc
add
sub
test
adc
add
nop
les
adc
inc
add
cld
inc
add
int
add
add
addb
cwtl
inc
add
scas
inc
add
lds
adc
inc
add
icebp
inc
add
inc
add
pop
inc
add
jle
add
test
inc
add
fiaddl
adc
inc
add
iret
inc
add
inc
add
dec
inc
add
bound
adc
adc
inc
add
aad
add
in
inc
add
daa
inc
push
adc
adc
add
js
add
mov
adc
adc
and
in
adc
and
adc
and
inc
pop
inc
sbb
sbb
and
inc
or
inc
push
adc
and
sub
and
and
shl
stc
and
imul
dec
sbb
and
adc
inc
push
adc
dec
adc
and
fcoml
inc
mov
out
pop
push
adc
mov
pusha
adc
inc
adc
adc
leave
jne
mov
adc
sbb
jne
pop
adc
test
sti
push
adc
jmp
mov
mov
data16
inc
add
fiadds
adc
inc
add
repnz
add
add
dec
aam
andb
aam
test
pusha
add
add
sub
sbb
cmp
mov
adc
and
adc
insb
and
test
mov
mov
adc
jne
adc
adc
adc
or
enter
jp
adc
adc
mov
mov
rcpps
push
inc
aaa
jb
adc
test
inc
aaa
and
adc
outsl
inc
adc
add
and
mov
sbb
and
and
adc
push
sub
dec
add
jbe
and
addb
inc
adc
xchg
jle
cld
and
subb
xor
mov
aas
pusha
xor
adc
fists
mov
adc
inc
andb
cmpl
nop
adc
sbb
adc
lahf
sbbb
lret
xchg
inc
cmp
push
adc
and
and
js
adc
pop
adc
fs
adc
ret
and
mov
and
pusha
and
push
and
aas
adc
adc
or
add
or
push
inc
push
and
push
and
outsb
adc
dec
and
adcb
cmpb
adc
inc
dec
adc
and
adc
push
inc
daa
adc
ja
adc
add
push
adc
adc
cld
sbbl
aas
adc
iret
ret
test
pop
outsl
adc
insb
inc
pop
adc
inc
mov
xor
inc
adc
insl
inc
mov
fwait
inc
mov
outsl
adc
fadds
xlat
and
outsl
adc
pusha
cwtl
inc
adc
inc
ja
vmwrite
movups
mov
and
inc
dec
pusha
leave
adc
add
add
rolb
dec
pusha
and
xchg
inc
mov
mov
or
das
sub
adc
mov
sub
xor
fs
pusha
fs
add
push
adc
and
aaa
adc
std
adc
ss
sub
pusha
push
and
add
mov
mov
inc
jae
mov
and
adc
fisttpl
adc
sub
shl
mov
aaa
xor
jecxz
and
dec
mov
movups
pop
add
inc
add
sbb
mov
xchg
or
mov
adc
and
inc
xchg
cmp
mov
push
sti
mov
push
pusha
push
adc
js
and
mov
add
adc
mov
push
mov
call
push
mov
inc
push
adc
mov
inc
push
adc
push
sbb
mov
call
mov
mov
jp
adc
mov
pop
daa
adc
adc
pop
sbb
insb
push
mov
movl
das
and
or
mov
pusha
and
cmp
or
adc
add
adc
ret
pusha
push
or
push
push
and
and
mov
mov
and
adc
adcb
and
adc
xchg
shll
ljmp
leave
adc
sahf
and
or
jno
adc
and
push
jno
adc
lcall
popf
adc
xchg
loope
and
int3
and
mov
pop
mov
mov
mov
xor
or
cmp
push
adc
adc
pop
adc
mov
adc
and
mov
rcll
test
mov
mov
lea
push
adc
inc
or
and
imul
sub
adc
loopne
and
and
sbb
adc
sbb
addr16
xorl
push
and
arpl
out
aaa
pop
mov
or
mov
mov
sahf
and
adcb
sahf
and
sub
mov
adc
mov
adc
push
push
mov
cld
cmp
and
call
mov
cmp
adc
sbb
adc
adc
mov
dec
inc
iret
addb
adc
and
insl
and
and
xor
cmp
adc
das
scas
add
pop
jmp
adc
mov
dec
push
adc
and
jp
mov
dec
inc
adc
and
jl
adc
lea
inc
adc
inc
jae
rcll
and
aaa
and
and
pop
ret
mov
gs
rcll
arpl
adc
sti
sub
movl
sbb
adc
mov
or
sbb
xor
adc
add
sbb
jnp
and
ds
call
shrl
and
call
mov
imul
outsl
adc
test
and
mov
mov
jle
adc
and
pushf
adc
and
sub
adc
and
push
xor
inc
inc
mov
mov
aas
inc
push
and
mov
adc
and
inc
pop
cmpsb
and
jbe
and
cs
dec
adc
test
adc
sub
mov
mov
xorb
dec
cmp
or
add
lahf
push
and
test
jl
inc
ss
jge
ret
xor
and
and
out
das
pop
inc
adc
mov
cli
adc
jl
adc
aaa
sub
cwtl
inc
sti
adc
and
and
adc
push
sahf
and
daa
pop
add
sub
add
or
test
inc
adc
and
jno
adc
and
outsb
xchg
cmp
push
push
incl
pusha
xor
adc
adc
orb
xor
and
data16
je
daa
cmp
adc
incb
and
add
out
sbb
rcll
neg
dec
and
adc
inc
mov
je
adc
movswl
shr
mov
add
mov
or
adc
and
cmp
push
loope
push
jg
and
and
mov
pop
es
loope
movups
and
sbbb
lods
pusha
dec
and
and
and
adc
pop
adc
jl
sahf
adc
les
je
pop
cmp
adc
or
addb
jbe
and
cmp
fisubl
cmpl
adc
jg
daa
sbb
adc
inc
sbb
and
and
cmp
inc
sbb
rclb
add
adc
dec
sti
mov
testl
push
and
loope
lock
lret
outsl
adc
push
and
push
and
cmp
cmp
push
mov
jnp
ret
dec
mov
mov
lret
and
popf
inc
repnz
out
adc
stc
and
dec
lahf
mov
and
mov
jns
adc
mov
mov
arpl
lea
movups
andl
push
mov
mov
mov
jecxz
adc
inc
inc
sub
lret
sub
dec
dec
inc
cmpl
and
adc
inc
or
and
xchg
adc
mov
adc
inc
inc
xchg
stos
adc
push
xorb
adc
and
inc
adc
mov
js
adc
rclb
inc
cmc
and
inc
push
daa
and
fisubs
xor
and
sbb
sub
xor
lea
sub
jmp
xor
and
sbb
shll
dec
adc
sar
add
je
push
lea
lea
and
lea
lds
lds
and
inc
push
insl
push
mov
shll
fsubrl
gs
adc
and
adc
dec
add
push
les
sahf
push
adc
and
adc
adc
sub
inc
scas
and
mov
or
adc
je
outsl
andb
adc
inc
and
lock
inc
js
bound
adc
mov
inc
push
sbb
jo
das
adc
and
jge
add
and
les
inc
and
dec
adc
js
push
and
sbb
and
mov
mov
lds
lret
dec
cmp
imul
and
test
fisubrl
mov
and
outsl
adc
inc
mov
leave
int
insb
imul
and
out
sbbl
and
adcb
cmp
add
and
mov
je
aad
and
and
and
and
push
mov
adc
dec
pop
pusha
dec
adc
lcall
std
es
shlb
dec
and
adc
fs
adc
sbb
mov
dec
and
pusha
scas
adc
pop
in
adc
cmpl
bound
sub
cmp
sub
mov
mov
or
inc
cmp
cmp
jne
loopne
adc
mov
and
leave
es
add
mov
push
and
inc
rorb
mov
jle
fs
adc
das
bound
dec
xchg
and
leave
adc
adc
pushf
adc
and
adc
and
filds
sti
jl
sub
adc
mov
and
mov
sub
cmp
push
dec
add
add
and
sahf
imul
ds
lea
repnz
and
inc
cmp
jae
dec
or
dec
or
push
call
and
push
sub
dec
xchg
jae
inc
dec
pusha
pop
and
cmp
push
sub
incl
xor
xlat
and
sbb
ret
adc
mov
jecxz
and
pusha
xchg
adc
mov
stc
pushl
jl
dec
mov
cmp
xchg
test
mov
push
or
push
adcl
push
jmp
gs
or
push
call
xorl
jo
adc
mov
mov
std
adc
pop
adc
pop
push
inc
cmp
jge
mov
add
test
adc
push
adc
push
jmp
or
std
subb
adc
and
dec
inc
pop
insl
and
pop
add
and
and
xor
stos
adc
mov
and
pop
dec
and
and
aad
adc
and
adc
adc
or
pop
insb
sbb
outsl
sub
adc
iret
sub
and
and
dec
adc
loopne
adc
push
push
and
test
and
sub
adc
filds
sbb
or
pushf
pop
sti
pusha
ja
inc
adc
mov
adc
test
push
push
mov
fs
ret
ds
jb
or
mov
popl
insb
movb
andb
sub
ss
mov
sbb
mov
push
push
mov
and
adc
outsb
pop
pop
and
test
jl
pop
test
fmuls
lea
ljmp
and
pop
insl
fiadds
adc
and
push
inc
or
movsb
xor
jle
popa
loope
fisubs
sub
je
data16
cmp
jge
inc
cmp
jle
sbbl
mov
mov
and
mov
and
jl
xchg
dec
adc
and
pusha
jl
inc
imul
cld
jb
push
inc
sbb
roll
xchg
sahf
xor
push
add
scas
rorb
scas
jno
inc
cmp
or
adc
and
adc
and
pop
rcr
inc
adc
pop
push
add
iret
sub
mov
in
adc
dec
or
sub
mov
mov
and
pop
adc
dec
sbb
cmp
fs
xchg
and
gs
sub
lea
imul
and
push
and
jmp
inc
push
and
adc
push
push
push
and
inc
data16
outsb
inc
bound
add
and
bound
jno
and
adc
enter
jmp
add
leave
add
inc
or
xchg
and
sub
test
je
cmp
jne
incl
dec
adcb
add
flds
adc
and
pusha
or
and
xchg
and
push
je
dec
adc
xor
and
push
mov
fistl
jne
fidivs
adc
imulb
pop
jo
sti
jns
mov
stos
pop
adc
mov
add
mov
xchg
adc
push
mov
lock
cmp
jne
fsubrl
and
out
sub
cmp
lea
fwait
xorb
adc
data16
and
pusha
jo
push
adc
mov
dec
dec
adc
into
and
das
adc
rcll
adc
or
dec
or
aad
int
and
mov
mov
adc
ljmp
outsb
or
adc
mov
popa
xor
mov
sarl
and
and
mov
and
push
and
and
adc
inc
dec
inc
adc
ja
and
dec
xchg
es
movups
jge
adc
and
inc
push
adc
and
push
adc
stos
cmp
or
adc
inc
iret
adc
cwtl
mov
aam
jp
and
xor
push
xchg
pusha
push
stos
adc
push
pop
mov
outsl
shl
pusha
cltd
dec
dec
and
test
inc
test
mov
push
and
jg
push
je
pop
pusha
add
or
jmp
mov
fdivs
mov
or
js
pop
fs
orb
insb
xor
pusha
sub
call
cmpl
fwait
pusha
sbb
jl
sbb
adc
mov
js
and
add
push
inc
adc
mov
cmp
jg
and
or
inc
add
push
and
fucomip
sbbl
and
adc
and
adc
lahf
and
xchg
and
adc
lret
ja
adc
inc
inc
pop
and
das
or
pop
mov
sbb
sub
push
pop
test
sarl
mov
push
ror
je
call
mov
inc
add
add
dec
inc
push
dec
inc
or
imul
and
and
inc
cld
adc
and
push
and
and
and
dec
xlat
and
push
adc
mov
pop
test
mov
inc
cli
push
jae
lds
fs
aaa
and
and
and
sub
inc
push
and
push
and
and
adc
and
or
jo
scas
xor
add
dec
push
stos
xor
inc
and
mov
adc
xchg
pusha
sbb
imul
push
adc
dec
loopne
adc
adc
inc
push
push
imul
sbb
adc
rclb
popl
cmp
inc
pop
adc
add
test
inc
pop
adc
and
outsb
adc
and
sarl
adc
inc
add
popa
mov
fistpll
test
inc
js
test
es
add
jl
and
adc
push
xor
ss
adc
cmp
lea
call
into
call
jg
and
xor
call
xchg
adc
mov
inc
unpckhps
push
mov
and
lret
push
push
cwtl
lcall
cmp
bound
and
adc
pushl
dec
add
and
xorl
adc
push
push
xchg
mov
and
jne
in
inc
jne
or
mov
roll
push
inc
inc
inc
and
and
mov
xor
es
add
xlat
loop
pusha
fbstp
sub
add
dec
pushf
inc
in
pusha
xor
push
and
pusha
mov
aaa
adc
je
in
inc
and
sub
inc
mov
inc
insb
sbb
sbb
pop
stos
pusha
lods
adc
pop
dec
xchg
loopne
inc
mov
push
adc
adc
adc
adc
and
and
iret
adc
inc
pusha
pop
adc
xorb
and
mov
and
fdivs
push
add
xor
jle
inc
adc
ds
add
fmuls
inc
and
cmp
mov
addb
call
inc
inc
and
cmp
shrl
repz
xchg
sub
add
adc
movsl
adc
daa
add
adc
xchg
inc
cltd
adc
sub
and
dec
and
adc
mov
mov
xor
loop
pop
stos
and
fists
push
bound
jle
in
mov
je
dec
cmpsl
sub
je
xchg
pop
push
adc
and
mov
mov
mov
mov
pop
adc
mov
ja
es
pop
sub
mov
adc
aaa
pop
pop
adc
jne
pop
sbb
pop
pusha
test
sub
out
sub
adc
xor
sbb
addr16
adc
ja
adc
push
sarb
lea
inc
adc
daa
mov
iret
and
sub
in
push
or
mov
and
dec
inc
notl
push
dec
lret
hlt
or
push
adc
test
adc
xor
dec
jbe
push
adc
in
jmp
adc
or
mov
jg
inc
cmc
push
adc
add
iret
inc
enter
stos
rolb
outsb
lds
push
add
imul
shrl
adcb
sub
mov
dec
and
mov
sub
push
and
dec
jle
inc
and
or
push
or
inc
jmp
pop
lret
js
sub
jns
and
jo
inc
inc
frstor
jp
cs
iret
mov
popl
and
push
arpl
sub
pop
jl
rolb
loop
sub
push
mov
adc
and
and
js
adc
or
cmc
inc
adc
push
and
mov
punpckhdq
dec
test
sub
adc
and
adc
or
jne
outsb
insl
adc
adc
fs
xchg
adc
inc
xchg
adc
and
xor
mov
outsb
push
adc
jae
adc
pop
push
pop
and
imul
pusha
jle
and
and
adc
xorb
adc
shrl
dec
shl
pop
push
cmpsb
adc
xor
add
sub
sbb
jg
add
jg
adc
push
push
mov
cmp
jl
cmp
adc
add
mov
and
adc
mov
mov
jo
sub
push
testb
aaa
adc
adcb
inc
popf
adc
jne
dec
add
pop
and
dec
lock
outsb
and
jbe
sub
aam
iret
and
jbe
and
dec
and
lret
pop
and
xor
dec
adc
adc
popf
lahf
pusha
je
and
mul
cli
pop
push
sbb
adc
movsb
and
je
mov
jne
mov
cmp
xchg
in
or
and
xorb
mov
cltd
xor
add
mov
and
pop
and
icebp
pusha
out
outsb
in
orb
mov
adc
push
jmp
nop
adc
inc
adc
mov
adc
and
mov
into
loope
rorb
and
cmp
inc
and
dec
popa
inc
adc
mov
and
push
jne
dec
push
mov
and
pusha
loopne
dec
frstor
adc
sub
loopne
sub
loop
adc
cmp
and
jbe
mov
and
mov
and
pushw
cmp
je
mov
aad
adc
push
adc
pushf
and
mov
je
push
lea
pop
mov
jecxz
push
and
xchg
push
push
cmpsl
mov
and
jns
xchg
mov
adc
xchg
cmpb
add
adc
test
adc
fwait
sahf
adc
lea
sahf
shlb
aam
into
and
push
fiaddl
lods
repz
xchg
adc
and
rcll
xor
outsl
add
insl
out
adc
mov
adc
add
insl
adc
dec
out
inc
ret
adc
xchg
pusha
lahf
push
mov
cmp
push
dec
ja
inc
add
push
pusha
mov
adc
adc
pop
cmp
outsl
cmp
dec
pop
scas
inc
cmpsb
adc
pusha
sbb
xor
cmpl
pusha
pop
adc
stc
insl
rclb
push
js
pop
adc
inc
mov
pop
add
jmp
and
mov
stc
sub
add
inc
insb
bound
ret
insl
loopne
adc
mov
inc
or
mov
scas
add
lahf
aas
mov
adc
mov
cwtl
scas
and
adc
jmp
xor
jmp
rol
push
cmpsl
aas
or
mov
je
mov
insl
xorl
les
dec
or
cmp
mov
jne
lods
add
inc
and
adc
xorl
adc
push
jnp
adc
sub
sbb
mov
loope
adc
push
and
adcl
pop
pusha
sbb
and
adc
push
push
jmp
sub
and
sub
add
xor
je
bound
push
push
sub
adc
outsb
mov
mov
adc
add
jae
jp
inc
data16
or
cwtl
je
adc
inc
and
mov
arpl
inc
adc
and
xor
xchg
inc
inc
adc
pusha
adc
lret
mov
cmp
mov
and
outsb
fs
mov
outsb
imul
sub
and
adc
mov
je
data16
pop
xchg
adc
jl
insb
adc
push
stos
adc
loope
adc
mov
dec
adc
mov
jns
mov
and
jnp
fsts
xor
in
add
cwtl
insl
stc
adc
push
adc
outsl
mov
and
popa
insl
std
adc
add
scas
popf
fwait
insl
loope
sbb
and
insl
out
xor
es
pop
add
loop
jl
pop
js
popa
push
mov
xchg
adc
dec
mov
or
cmp
sub
push
bound
bound
adc
test
dec
cltd
test
insb
xor
sbb
inc
pusha
adc
inc
jb
adc
push
loopne
adc
sub
inc
push
imul
data16
adc
sub
and
fsubs
scas
xlat
and
add
aad
and
pop
and
and
inc
and
test
dec
and
adc
addl
pusha
inc
adc
loope
sub
cmp
sub
scas
pop
loope
dec
insl
adc
je
filds
push
leave
adc
leave
adc
lea
dec
mov
and
pusha
mov
xchg
rcll
and
subl
cmp
dec
jmp
mov
in
adc
andl
or
adc
pop
add
call
and
dec
sbbb
pop
adcb
and
and
inc
and
add
or
movl
das
adc
and
scas
lret
das
and
repz
and
shll
and
and
xchg
pop
cmp
mov
and
mov
mov
and
cmpl
adc
mov
pusha
adc
push
pusha
stos
adc
push
mov
inc
fstl
js
pop
pop
mov
mov
mov
in
adc
test
xlat
das
es
and
test
adc
add
and
jl
ret
add
or
outsl
adc
clc
popa
xchg
and
jmp
push
daa
mov
sbb
jmp
sahf
and
pop
out
fistps
sub
addb
adc
push
sub
add
clc
mov
pusha
xor
movsl
loopne
adc
loopne
and
adc
pusha
shlb
dec
fsubl
ret
jge
sbb
sub
imulb
jns
and
mov
push
arpl
aaa
add
shll
push
and
out
imul
sbb
rolb
pusha
imul
inc
and
divb
add
test
jmp
pop
daa
jmp
jmp
and
dec
add
in
add
push
add
adc
dec
add
add
jge
inc
cwtl
push
lods
pusha
mov
adc
insl
adc
stc
arpl
xchg
imul
add
mov
lea
ret
in
movsl
shrl
in
adc
in
adc
add
in
and
inc
xor
add
aad
es
adc
in
inc
add
repnz
and
hlt
jno
dec
push
arpl
and
pop
sub
mov
shrb
sbb
push
pop
or
mov
movsb
cs
or
pop
and
bound
dec
sti
arpl
lock
dec
sbb
addb
incl
inc
iret
adc
addr16
adc
pop
and
nop
je
test
jne
jo
popa
les
adc
inc
jg
pop
aam
sti
mov
inc
and
inc
and
mov
sub
mov
mov
aad
ret
icebp
mov
pusha
add
add
and
and
adc
mulb
fst
adc
nop
adc
xlat
inc
ja
dec
sti
mov
shl
jne
mov
xor
je
or
je
sub
jg
popa
sub
gs
stos
and
and
adc
mov
aad
push
push
int3
pusha
adc
pop
fstl
sbb
aaa
test
jne
gs
xchg
out
and
adc
out
or
dec
fbstp
negb
pop
xchg
mov
push
and
in
ja
adc
and
push
adc
jne
jmp
and
pusha
clc
and
adc
clc
adc
adc
adc
inc
outsb
adc
pusha
jb
les
and
push
mov
in
adc
and
mov
push
jnp
jb
adc
sbb
mov
dec
out
and
xor
mov
sbb
inc
and
iret
dec
jo
xor
imul
push
sub
sub
ja
stos
repnz
shll
adc
and
aam
push
adc
ja
adc
daa
mull
adc
and
push
sub
adc
xchg
dec
pusha
adc
test
or
adc
dec
sub
and
inc
adc
mov
sbbb
adc
outsl
push
sub
xchg
mov
and
lea
ds
and
dec
and
adc
and
adc
and
leave
adc
mov
mov
xchg
pop
sub
sub
dec
subl
pop
das
inc
adc
adc
xchg
sar
adc
test
imul
xorb
or
jl
jl
jne
test
je
fmul
popa
jne
sub
and
and
loope
push
and
adc
and
sti
adc
mov
adc
iret
push
or
movsb
or
adc
mov
pusha
mov
adc
mov
inc
jp
mov
sbb
sub
push
outsb
imul
pop
xor
jne
and
adc
test
and
mov
inc
dec
adc
adc
adc
fs
lahf
call
adc
xor
and
mov
jne
xlat
add
sbb
cmpsl
and
sub
push
mov
cmp
jne
sub
dec
adc
call
out
sub
sbb
and
mov
inc
jp
adc
adc
push
sti
in
adc
sub
xor
adc
dec
and
test
and
stos
and
push
adc
sarb
mov
imul
pusha
or
inc
mov
jae
and
push
mov
and
loope
jo
adc
cltd
inc
pusha
adc
dec
es
add
dec
jp
sub
and
subb
or
cwtl
in
adc
enter
adc
test
jne
inc
or
in
adc
and
add
and
pop
test
je
and
inc
stos
pusha
sbb
add
cmp
and
test
push
mov
inc
jle
adc
add
stos
loopne
adc
push
call
and
flds
and
fldenv
lret
add
test
inc
popa
inc
scas
adc
mov
push
fists
adc
mov
pusha
subb
add
repz
xor
add
mov
test
inc
jne
dec
cmp
pop
data16
stos
fistl
sbb
adc
xchg
imul
jle
and
adc
enter
and
lret
es
sub
call
aad
mov
lds
fadds
jno
adc
ret
xchg
adc
adc
and
mov
sub
sub
adc
icebp
jb
mov
mov
adc
test
ss
jp
push
lods
mov
inc
gs
adc
and
stos
dec
adc
in
and
popf
daa
out
bound
adc
and
icebp
adc
adcl
test
lods
lds
adc
and
push
sbbb
xor
and
icebp
sub
xor
push
lea
add
sbb
push
sbb
mov
in
and
mov
call
add
sbb
mov
xlat
and
inc
xchg
andb
cmp
add
mov
cld
incb
adc
inc
adc
rolb
jns
pop
das
sbb
scas
faddp
les
sbb
dec
mov
xor
xchg
loopne
adc
inc
or
mov
outsl
sub
sbb
adc
and
das
insl
fldt
pop
call
adc
adc
xor
jb
pop
adc
je
mov
and
test
adc
mov
dec
cmpsb
aas
adc
add
addr16
and
jecxz
adc
aad
add
jmp
cmp
jne
mov
and
and
adc
add
adc
mov
adc
cwtl
sub
or
in
addr16
adc
adc
outsl
cs
sub
push
mov
sub
ror
pop
sub
rclb
sub
add
pop
popa
adc
sub
pop
adc
add
add
push
add
and
loope
shrb
inc
fisubl
es
daa
in
shl
ret
cmp
and
adc
or
adc
and
sub
or
mov
mov
js
or
inc
push
test
adc
int3
add
jmp
cmp
es
and
lret
test
add
push
mov
push
cmp
add
fwait
sbb
call
subb
jecxz
or
imul
or
decb
and
subl
adc
nop
adc
xor
lret
mov
adc
xor
mov
jno
mov
jnp
out
pop
adc
mov
add
sub
adc
dec
add
insl
sub
cmp
and
cmp
jmp
arpl
adc
sub
dec
arpl
pusha
and
add
xor
outsl
or
repnz
popa
arpl
mov
adc
mov
pop
add
and
sub
mov
add
aaa
mov
es
and
mov
adc
mov
inc
pushf
adc
and
sub
add
mov
push
scas
ret
pop
rcr
test
andb
insl
add
repz
jo
dec
mov
cmpsb
pusha
dec
sub
and
daa
outsl
adc
shll
lcall
and
dec
and
loope
js
adc
push
and
pop
pop
gs
pop
and
insb
std
scas
adc
loopne
inc
pop
rclb
adc
ret
and
ss
and
repnz
sub
pop
jge
xor
mov
cmp
mov
mov
jl
inc
adc
and
scas
sub
ljmp
cld
inc
adc
je
and
cmp
sbb
je
cmp
jl
and
mov
xor
cmp
mov
cmp
je
lea
and
call
push
in
enter
mov
and
jns
adc
add
adc
and
in
and
in
adc
jne
nop
push
add
pop
and
je
inc
and
ret
das
pop
pop
test
adc
xor
and
in
inc
and
fstl
mov
data16
mov
mov
stos
jb
push
dec
sub
jae
mov
cmp
xchg
and
jne
popa
ret
adc
mov
and
lods
inc
pop
pop
inc
imul
adc
add
inc
enter
push
add
inc
add
in
push
icebp
cmp
jne
clc
adc
mov
dec
push
je
mov
push
fwait
adc
and
xlat
adc
mov
inc
lock
call
inc
loope
fstpt
cmpsl
ljmp
jl
dec
and
jge
fidivrl
inc
adcb
movl
jae
sub
jl
sete
daa
das
adc
sbb
push
xor
cmp
mov
jl
in
mov
cmp
jle
and
lock
push
daa
adc
and
and
and
push
and
outsl
and
adc
and
adc
adc
push
push
and
jmp
arpl
adc
push
bound
adc
outsl
loopne
and
adc
and
inc
mov
adc
fisubs
mov
or
adc
fildl
adc
push
pop
je
pop
pop
or
or
pop
adc
cmp
cmp
inc
and
mov
sub
and
dec
adc
aaa
iret
and
iret
and
ja
mov
cmp
and
and
mov
je
insb
test
or
and
movsb
jne
pusha
or
mov
mov
inc
int3
adc
push
push
and
adc
lret
and
adc
sub
push
and
loope,pn
and
jae
sub
pop
adc
sub
and
inc
in
int3
add
sub
push
jo
inc
push
xor
push
cmp
and
mov
repnz
add
add
adc
insb
insb
inc
sti
adc
xor
jnp
adc
mov
call
test
dec
and
pop
and
sub
addr16
inc
mov
and
adc
and
cmp
cmp
mov
adc
adc
cmp
jge
and
push
push
jmp
insb
pop
adc
cmp
jg
gs
push
push
xchg
mov
push
push
xchg
mov
inc
mov
push
jg
or
pusha
cwtl
adc
mov
dec
inc
cmp
jl
jae
adc
call
fwait
mov
cwtl
sub
cmp
fisubs
sub
jo
and
bound
pop
add
das
call
add
mov
and
and
jl
and
adc
imul
daa
pop
pop
cmp
mov
jl
mov
adc
xchg
adc
and
adc
and
insb
and
xor
cmp
jl
dec
lock
dec
push
jp
cmpl
scas
or
sti
ja
imul
adc
je
push
mov
xchg
and
xor
xor
mov
imul
xor
xor
dec
and
arpl
ja
and
push
js
adc
and
cmp
xchg
clc
arpl
adc
and
jmp
and
sub
jge
stos
cmpsb
adc
pop
xor
and
outsb
pop
and
imul
and
lock
adcb
sub
push
sti
push
stc
mov
ljmp
jge
bound
js
pusha
adc
and
adc
and
es
adc
dec
jno
bound
pop
mulb
das
outsl
dec
das
adc
and
lods
outsb
adc
and
jmp
and
cmp
jle
mov
add
and
test
add
mov
and
adc
and
cmp
dec
add
sub
adc
cmp
inc
dec
adc
mov
and
adc
add
pusha
sub
add
popa
shlb
sbb
mov
push
adc
jmp
pusha
adc
mov
mov
sub
inc
adc
pop
mov
das
and
sahf
adc
pop
adc
mov
adc
adc
adc
and
mov
enter
or
ja
and
fistl
scas
jbe
filds
adc
and
movsb
test
arpl
mov
and
and
mov
and
arpl
and
jnp
and
adc
and
adc
and
and
mov
in
mov
jl
add
call
roll
and
test
and
pop
bound
sub
and
adcb
xchg
rclb
clc
jle
andb
xchg
and
xor
add
adc
dec
adc
mov
adc
jg
pusha
xchg
lcall
lock
adc
push
push
pusha
roll
mov
sbb
push
and
mov
pop
test
push
fs
adc
ss
and
xor
lahf
dec
lock
daa
and
pop
das
and
sbb
xchg
xor
push
add
andl
and
inc
out
arpl
mov
inc
arpl
push
pop
popf
adc
or
and
mov
pop
and
stos
and
adc
arpl
inc
and
cmp
xchg
cmp
adc
fwait
cmp
clc
add
bound
add
jge
xchg
lahf
and
pop
add
and
pusha
jnp
adc
rclb
jne
mov
repz
jne
add
add
jge
adc
inc
aam
push
mov
and
aas
and
add
adc
gs
xchg
dec
and
ljmp
adc
jne
sub
and
jb
or
and
xor
mov
aas
mov
or
into
jo
mov
sub
mov
es
push
and
pusha
or
mov
adc
and
adc
test
and
rclb
and
mov
and
lods
and
and
mov
cmpxchg
xor
gs
inc
mov
scas
mov
dec
and
adc
jne
and
and
das
lods
adc
sub
sarb
inc
cmp
jl
sub
and
mull
jl
adc
sbb
and
jg
and
jg
je
mov
or
aam
cmp
in
jle
push
mov
adc
ja
push
dec
ret
adc
shrl
lea
out
bound
adc
pop
cs
jle
aas
add
enter
daa
dec
mov
pop
sbb
subl
test
lods
push
adc
jl
adc
adc
pusha
adc
sub
and
push
or
jnp
and
inc
lcall
mov
mov
cli
insl
adc
push
sbb
fstpl
adc
jge
sub
and
adc
push
mov
mov
dec
and
outsl
and
sub
mov
lret
jmp
das
and
imul
mov
in
adc
xor
cmpb
cmp
xorl
arpl
jl
loope
nop
fbld
add
xchg
pusha
and
into
sub
mov
ret
add
cmp
and
sub
fs
adc
shll
mov
adc
mov
jmp
and
dec
loopne
adc
mov
lcall
and
aas
inc
push
mov
into
adc
roll
add
test
ret
add
adc
mov
pop
mov
inc
and
jnp
pop
adc
mov
adc
cmpsl
and
inc
inc
and
test
sub
lds
adc
push
and
and
adc
and
and
pop
and
lds
sbbl
adc
and
adc
and
int
xchg
and
arpl
imul
rorb
arpl
and
inc
pusha
movsl
sub
iret
dec
test
out
add
adc
push
test
cmp
fildl
and
das
adc
mov
sti
fcomps
adc
out
mov
pusha
pop
adc
mov
les
mov
mov
adc
sub
xor
adc
es
and
jne
adc
adc
dec
adc
jle
add
push
adc
cmp
jle
cwtl
iret
adc
mov
inc
and
and
push
adc
ret
adc
adc
mov
imul
adc
cli
inc
jns
xchg
adc
jns
nop
mov
push
inc
jno
xchg
arpl
out
inc
pop
adc
inc
mov
sbb
and
add
ja
js
adc
roll
and
jns
and
int
roll
adc
loope
and
mov
and
adc
cmp
adc
das
pop
add
in
stos
loop
pop
add
push
add
inc
sub
adc
sub
lds
sarb
dec
dec
lods
adc
dec
mov
outsb
adc
add
push
inc
std
lds
and
mov
and
and
adc
jnp
jno
jmp
push
and
sub
and
aaa
or
lcall
ja
iret
and
lea
adc
gs
popa
mov
xchg
bound
and
xchg
ja
sarb
adc
mov
push
and
and
adc
and
jno,pt
and
incl
add
add
mov
cmp
and
mov
int3
imul
xor
scas
and
cmp
ret
loope
repnz
je
mov
dec
adc
dec
cmpsb
and
aas
loopne
fs
in
adc
fcoms
test
inc
adc
push
add
add
test
adc
adc
add
roll
out
inc
and
adc
fimull
adc
rclb
adc
sub
sub
jno
push
ret
xor
pop
pop
push
adc
ret
and
and
pushf
sbb
push
lea
add
add
push
sub
mov
sub
mov
add
mov
sub
mov
add
pop
and
test
push
test
and
adc
and
shll
jl
xor
adc
and
es
add
lods
mov
xchg
adc
and
inc
xchg
pop
adc
ret
jle
push
adc
and
pop
inc
adc
inc
cmp
daa
lea
adc
mov
imul
imul
mov
and
dec
popa
xchg
adc
add
stc
imul
push
and
inc
adc
test
push
push
inc
dec
and
pusha
sbb
or
sbb
mov
outsb
push
adc
and
mov
dec
jno
jl
std
push
or
and
mov
js
xchg
pop
rorl
mov
inc
adc
and
int3
and
push
pop
sub
rorl
out
adc
mov
xchg
and
inc
sub
cltd
add
ja
imul
popf
adc
pop
or
enter
aam
adc
mov
rolb
fimull
adc
adc
pop
adc
and
or
ljmp
adc
lods
inc
adc
pop
in
push
push
cld
adc
out
les
push
mov
and
adc
and
aaa
dec
fwait
adc
xchg
scas
xchg
aam
pop
dec
dec
adc
inc
jg
fs
adc
dec
bound
loope
adc
sbb
push
push
push
cmp
cs
push
adc
inc
and
imul
add
add
pop
and
lcall
mov
mov
sbb
js
adc
iret
xchg
adc
js
pcmpeqb
mov
adc
mov
mov
add
test
mov
jl
in
or
out
push
pop
dec
sbb
push
mov
daa
push
add
push
and
adc
and
popa
or
clc
pusha
fists
mov
mov
and
mov
and
pop
adc
and
nop
xchg
dec
adc
ret
xchg
sbb
shlb
pushf
jb
pop
sbb
add
ss
daa
xchg
ss
and
sub
push
and
adc
push
push
mov
out
adc
inc
dec
add
push
and
inc
and
test
and
mov
adc
and
adc
rclb
lcall
lods
cmp
adc
in
dec
daa
jns
adc
adc
lock
sub
insl
or
adc
and
stc
sub
push
and
add
pop
adc
sub
sbb
adc
sub
add
jo
adc
push
adc
push
dec
adc
and
jb
and
test
ficoml
cmpsl
out
and
adc
aad
adc
fsubl
stos
and
adc
push
push
ret
into
adc
and
rclb
adc
loopne
adc
push
adcb
mov
adcb
adc
shlb
sub
test
out
and
adc
outsl
add
xlat
mov
and
adc
pusha
inc
adc
push
mov
pop
push
jmp
inc
push
adc
adc
adc
and
inc
das
dec
add
adc
dec
adc
je
push
inc
jne
push
loopne
and
cld
mov
jmp
pusha
or
in
push
push
dec
mov
cld
mov
inc
mov
xor
sti
in
gs
jl
and
std
and
xor
or
dec
sahf
adc
leave
mov
cli
js
adc
xchg
lret
dec
sti
xchg
sub
repz
adc
test
je
xchg
pop
adc
cld
and
sub
and
xchg
jg
jnp
cmp
and
pop
and
lea
and
add
mov
push
pop
es
add
mov
and
xchg
stos
and
iret
ret
popa
ficoml
push
mov
jmp
adc
das
add
mov
mov
mov
inc
cs
fists
adc
fwait
ja
adc
es
fistl
add
sbbb
sub
add
shlb
adc
mov
pusha
adc
lods
and
ss
sbb
movsb
inc
sub
popa
test
fistps
sbb
and
test
adc
or
push
adc
shrb
addb
pop
and
mov
pushf
push
or
push
xor
add
add
mov
adc
jmp
rcrb
or
pop
add
jne
and
data16
daa
dec
add
das
add
add
jg
dec
jo
shlb
call
cmp
adc
pop
test
mov
jmp
dec
sub
jmp
popa
jmp
call
adc
rorb
and
adc
cmp
gs
and
std
jecxz
push
and
and
test
mov
mov
and
mov
or
inc
jns
and
mov
sub
adc
and
dec
adc
mov
mov
mov
cmpl
cmp
mov
adc
addr16
movsl
and
dec
pusha
push
adc
inc
and
cmp
and
sbb
add
and
adc
inc
and
sbb
add
and
adc
lea
and
adc
dec
and
cmp
adc
mov
adc
insl
adc
add
sub
mov
add
inc
cltd
sub
add
sbb
roll
sbb
lock
ret
mov
ret
je
adc
dec
xor
add
dec
add
das
add
xor
add
incb
das
add
std
xor
add
std
inc
pop
das
mov
adc
xor
add
cld
inc
sub
add
sbb
das
daa
add
dec
insl
pop
adc
mov
add
pushf
sub
and
ret
mov
adc
add
sbb
sub
ret
mov
sbb
inc
push
or
push
lods
and
dec
pop
sub
and
mov
fimuls
cmp
mov
jl
lea
call
push
and
pusha
ss
jmp
daa
adc
jge
daa
push
adc
lea
push
inc
dec
outsb
adc
jb
test
dec
jmp
mov
adc
add
push
push
adc
push
push
addr16
fisubs
or
inc
add
xorb
push
add
dec
xchg
adc
adc
and
adc
mov
adc
and
add
dec
and
and
push
and
sub
inc
and
adc
aas
or
sub
adc
test
stos
imul
adc
test
push
push
jle
cmp
push
mov
and
and
cmp
call
int3
adc
std
je
and
cmp
shlb
xchg
pop
pop
xor
lcall
inc
adc
push
dec
sub
test
and
dec
test
and
xchg
dec
jo
adc
mov
mov
std
adc
mov
lcall
and
dec
and
adc
mov
adc
mov
sub
and
push
adc
ficompl
adc
mov
sub
jmp
sub
imul
cmp
inc
sub
xsave
push
in
cwtl
shlb
or
and
adc
and
sub
int
shll
push
pop
and
adc
push
and
outsb
inc
daa
gs
and
mov
inc
sahf
and
sbb
leave
push
xorb
adc
and
xchg
mov
and
and
pusha
mov
mov
pop
adc
sub
cmp
jae
adc
shll
inc
xlat
shll
and
and
mov
adc
call
pusha
lret
aaa
and
and
push
adc
sub
mov
rcrb
push
push
push
es
add
mov
mov
jns
loope
loop
dec
mov
sti
mov
incb
xor
jmp
jmp
and
adc
mov
and
int3
jnp
xchg
pusha
inc
imul
add
jmp
repnz
std
xchg
add
sbbb
and
add
insl
and
sbb
adc
adc
and
arpl
inc
cltd
sub
sti
inc
jbe
mov
and
and
fisubrs
push
xchg
bound
das
mov
adc
and
and
test
adc
rol
pusha
and
adc
mov
add
daa
arpl
subb
je
sub
sub
pusha
ds
sub
mov
testb
mov
je
sbb
adc
jl
inc
jmp
adc
or
pop
mov
es
es
pop
add
inc
add
mov
inc
aas
adc
ss
add
and
and
mov
jo
adc
jo
adc
mov
mov
divb
jbe
scas
rcll
or
or
aas
adc
and
cli
es
add
xchg
mov
jmp
inc
data16
out
xor
jp
gs
sbbl
adc
jmp
adc
mov
add
and
iret
outsb
rcll
dec
or
dec
and
das
add
popf
out
subb
adc
sub
xor
fimull
xchg
adc
outsl
mov
je
adc
repz
xchg
mov
adc
test
sbb
or
cmp
jb
and
das
adc
and
and
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
sub
inc
jl
je
inc
dec
pusha
pop
adc
inc
dec
pusha
pop
adc
cmp
or
cmp
and
and
and
and
das
xor
push
dec
es
loope
inc
loop
je
and
and
push
orb
jge
inc
cmp
pop
repnz
mov
mov
jg
adc
mov
mov
scas
daa
add
sub
fwait
and
jp
lahf
add
daa
lahf
pop
and
test
and
jl
mov
sub
adc
and
and
and
and
stos
jns
js
ret
dec
jg
push
test
mov
je
and
and
dec
mov
push
and
xchg
and
sub
jg
inc
mov
xchg
xor
xchg
pop
loopne
and
lea
shrl
popa
xchg
inc
fsts
push
jns
out
pop
and
adc
and
cld
xchg
fisttps
mov
jge
and
or
and
and
rclb
cld
lcall
mov
ficoms
push
and
and
mov
pop
pop
adc
je
push
xchg
or
and
and
and
xchg
mov
push
push
and
ds
and
adc
pop
cmp
inc
mov
mov
sarb
inc
adc
and
push
mov
and
xchg
inc
mov
or
mov
xchg
inc
adc
and
cmp
pushf
pop
and
inc
cmp
mov
adc
inc
fstl
push
and
and
cs
inc
or
dec
cmp
push
dec
fwait
sbb
xor
and
adc
and
lret
adc
mov
adc
inc
adc
dec
dec
pusha
cmp
sub
mov
adc
xchg
and
push
inc
mov
sub
push
adc
loope
and
addb
dec
loop
jmp
and
pop
dec
or
xor
test
inc
mov
sti
add
add
cmp
inc
or
mov
popf
outsl
dec
xchg
les
cmpsb
and
add
adc
adcl
sub
sbb
adc
adcb
je
mov
jp,pt
and
arpl
mov
inc
outsb
bound
xor
push
and
adc
fsts
push
and
dec
adc
and
mov
adc
mov
push
and
xlat
adc
add
and
rcll
adc
adc
bound
add
and
adc
rclb
and
jae
mov
jae
cmpsb
subb
and
pop
mov
popf
mov
mov
cmp
mov
mov
call
dec
out
push
bound
adc
lods
andb
push
adc
and
sti
and
test
jmp
jo
adc
jmp
xor
and
adc
mov
and
loopne
dec
add
loopne
add
and
and
xlat
and
adc
push
mov
loop
adc
add
inc
sub
sbb
and
adc
adc
adc
and
adc
dec
rorb
pop
inc
movups
mov
push
inc
adc
loopne
and
and
cmp
inc
sub
adc
add
add
and
cmc
gs
dec
add
adcb
inc
adc
cmp
nop
and
push
popf
out
inc
add
sub
jo
mov
push
and
push
and
pop
adc
cltd
and
push
add
lods
xor
call
and
xchg
cmpsl
dec
adc
and
push
push
call
and
fsubl
outsl
push
and
inc
mov
scas
add
mov
jae
mov
mov
notb
jmp
daa
jae
and
mov
mov
adc
rorl
test
adc
enter
pusha
push
adc
and
and
dec
adc
and
adc
je
test
pop
xor
lock
and
pop
adc
mov
dec
mov
sub
test
fwait
repz
daa
sbb
and
pop
and
out
mov
pop
adc
and
and
je
stos
push
mov
jae
and
sub
sub
je
sub
test
pushf
adc
or
shl
jge
add
arpl
adc
adc
push
push
jns
rcll
and
adc
lea
pop
inc
xchg
and
das
mov
and
addb
and
adc
shlb
xor
mov
pop
sub
shlb
and
push
push
and
and
adc
sbb
mov
dec
call
mov
insl
adc
adc
imul
and
push
push
sub
xor
stos
and
mov
xor
and
xor
mov
mov
sbb
cvtdq2ps
mov
inc
ret
jl
pop
pop
push
in
jmp
adc
arpl
xor
sub
inc
and
cmpsl
and
sub
out
adc
out
loopne
test
add
and
cmpsb
and
push
and
dec
sbb
adc
push
cmp
lret
adc
mov
fisubs
push
stc
adc
add
adc
inc
subl
movl
adc
stos
and
and
insl
sbb
or
and
adc
and
inc
adc
inc
and
adc
adc
das
adc
and
das
and
jbe
sbb
adc
jl
movsb
arpl
mov
je
inc
push
je
xchg
adc
test
pusha
push
adc
cmp
pop
adc
jae
and
ds
shll
lods
jecxz
addr16
bound
add
adc
inc
sbb
sub
sub
cmp
je
and
lret
mov
adc
cmp
arpl
and
mov
stos
xchg
inc
lcall
add
add
dec
out
jge
popa
jno
and
adc
push
push
and
xchg
and
and
inc
add
and
call
push
lock
and
adc
sub
insb
and
and
and
pushf
jae
adc
cmp
mov
add
lret
push
sub
push
inc
and
inc
arpl
dec
aas
iret
stc
adc
and
xor
es
rcll
pusha
and
out
xchg
mov
or
jne
xor
cmp
sbb
inc
xor
mov
adc
outsl
mov
inc
ljmp
adc
es
add
sbb
fisttpll
cmp
push
sub
sub
add
adc
mov
movsl
shll
out
or
push
loopne
adc
or
and
ss
push
and
adc
mov
sub
push
push
pop
lahf
adc
pop
mov
pushf
inc
or
adc
jg
test
and
mov
or
and
and
inc
adc
sub
add
enter
adc
cmpsl
test
pop
and
rclb
inc
mov
fstpt
sub
and
jne
je
and
insl
adc
sub
adc
out
add
add
sub
or
pop
sub
movsb
dec
pop
pop
and
push
adc
insl
rcll
test
jl
mov
scas
sbb
mov
mov
and
int3
and
stc
lahf
jae
adc
and
sub
pop
sub
out
and
xor
lcall
mov
sbb
or
xchg
iret
adcb
jecxz
inc
inc
pusha
push
loope
and
dec
adc
and
das
es
andb
adc
sub
add
adc
pop
or
add
adc
pusha
pop
dec
adc
and
push
and
outsl
and
jnp
sub
lahf
mov
xor
cmp
and
adc
test
lock
nop
andb
and
and
sub
add
adc
jne
daa
shrl
and
mov
and
test
ret
stc
adc
in
lods
and
push
push
and
and
imul
dec
and
hlt
and
popa
sub
push
daa
addr16
and
ficoml
sub
sub
lea
fisubl
aas
das
and
adc
fsts
cmpsb
stos
push
adc
push
or
pushf
and
dec
adc
lea
and
adc
and
dec
and
inc
mov
dec
ljmp
lea
jle
test
bound
add
hlt
and
xchg
and
xorb
sar
add
add
inc
mov
cmp
shlb
adc
fsubs
ret
xlat
adc
repz
test
jne
adc
or
pop
and
inc
push
and
adc
adc
mov
dec
jne
or
inc
cs
add
and
xor
in
pusha
and
scas
pop
mov
push
dec
push
cmp
adc
adc
bound
add
add
and
insb
adc
arpl
call
adc
mov
mov
push
sub
ret
and
xlat
adc
sbb
dec
inc
mov
mov
and
push
mov
and
push
lahf
mov
test
pushf
and
dec
sub
fcomps
mov
adc
jne
daa
fwait
add
pop
nop
and
sbb
jo
je
and
adc
mov
push
and
and
and
iret
fsubl
xchg
outsb
adc
mov
adc
mov
push
adc
lgs
daa
fstl
leave
mov
inc
fwait
inc
push
and
and
adc
cmpl
xchg
and
jb
or
and
aaa
adc
outsl
and
and
add
mov
xchg
cmp
test
xor
adc
jnp
into
and
and
clc
jge
lods
sub
aas
and
andb
add
jl
cltd
and
lea
adc
jl
ljmp
jns
pop
mov
test
aam
pop
adc
cmpsb
mulb
xor
addl
pop
in
aad
inc
and
lock
js
movsb
and
adc
dec
pop
or
jmp
inc
cmp
adc
push
inc
je
or
jne
xchg
or
inc
and
test
push
and
dec
xor
pop
and
fldenv
push
mov
rorb
rclb
aaa
daa
fisttps
movsl
add
xchg
cmp
or
mov
inc
imul
dec
dec
jne
adc
sub
sub
outsl
add
and
or
movsl
repz
add
and
sbb
in
sub
sub
add
adc
andb
cmp
bound
and
aaa
in
adc
in
sbb
and
cmp
xor
add
adc
or
sub
in
and
sub
or
fstpl
adc
or
cmp
fisttpll
mov
adc
sbbb
adc
inc
test
repz
pop
clc
shlb
and
sub
adc
xchg
and
jp
adc
and
and
scas
js
adc
sbb
add
mov
adc
xorb
stos
addr16
push
sub
jno
je
aam
adc
inc
inc
adc
cmp
test
je
sub
add
inc
add
ja
sub
and
es
adc
push
jmp
and
aaa
adc
push
adc
insl
push
adc
push
sub
add
decb
xor
and
xor
adc
and
daa
jbe
and
xor
nop
add
adc
das
incl
or
mov
scas
add
aaa
mov
adc
jp
out
add
je
pop
pusha
mov
push
jno
adc
adc
xchg
orb
cmpl
jne
std
and
sbb
add
push
add
push
bound
adc
sub
add
add
and
dec
and
xor
or
dec
and
or
adc
popa
sub
lahf
adcb
xor
cmpsl
lret
and
adc
adc
mov
pusha
inc
xorl
adc
push
add
adc
bound
addb
and
add
daa
push
sbb
lds
lcall
call
aas
inc
inc
cmc
inc
dec
adc
and
insb
sbb
addl
cli
enter
mov
or
adc
je
mov
adc
push
call
inc
mov
mov
nop
and
sub
mov
call
mov
daa
adc
add
adc
shlb
iret
adc
push
and
jg
and
iret
inc
and
and
pop
jbe
xchg
and
enter
adc
ds
sbb
xor
adc
in
js
sbb
cmp
push
ja
pop
and
in
pop
dec
add
inc
xor
add
jnp
jne
or
push
and
mov
push
and
xchg
jnp
and
loop
mov
pop
mov
mov
dec
test
addl
and
outsl
pop
adc
les
icebp
adc
movsb
push
pusha
inc
cmp
cmpsl
stos
adc
and
adc
aas
adc
push
adc
and
inc
push
pusha
sub
mov
or
popl
lods
insb
rcrb
cwtl
adc
or
lock
and
imul
mov
mov
mov
add
loopne
adc
add
mov
sub
mov
jnp
dec
loopne
jnp
adc
add
inc
inc
cli
popa
outsl
inc
push
sar
ss
push
or
aaa
and
loop
je
sbb
je
iret
xlat
and
es
cmc
aas
and
lock
outsl
inc
mov
je
inc
add
jne
and
sub
push
add
and
sbb
and
xor
fadds
pusha
cmp
cmp
add
and
out
cmp
adc
dec
pusha
xchg
push
es
add
lea
dec
add
sub
and
pusha
dec
adc
and
fadds
push
sbb
popa
pop
dec
add
inc
add
pop
dec
add
inc
pop
adc
inc
pop
adc
sub
inc
inc
add
mov
xchg
jno
movl
adc
daa
xor
inc
adc
add
adc
fs
and
rorl
and
cmp
sub
xchg
adc
mov
lea
aad
jmp
enter
and
and
push
mov
dec
add
inc
inc
pusha
and
add
jbe
push
add
lea
lahf
test
cmp
mov
movl
and
mov
daa
or
adc
sub
mov
aaa
pop
inc
adc
add
mov
mov
inc
adc
outsl
lea
cltd
xor
pop
mov
sbb
adc
leave
pop
sub
and
and
dec
and
and
adcl
fistl
sub
pop
std
jo
adc
sbbb
ss
add
mov
jae
adc
test
dec
push
and
xchg
adc
adc
call
mov
push
push
and
jmp
fisttps
push
push
mov
mov
and
std
adc
clc
ja
lods
aaa
and
dec
inc
adc
pop
sub
adc
mov
arpl
mov
outsb
inc
adc
idivb
mov
shll
mov
and
mov
xor
rolb
dec
cmp
mov
mov
or
sti
adc
fsubrs
mov
pop
mov
ficoms
push
and
and
xor
sbb
adc
insl
adc
push
mov
cmp
push
call
cmp
xor
jbe
xlat
and
and
bound
adc
divl
jnp
and
mov
adc
mov
orb
pop
push
rclb
mov
pop
fildll
push
es
or
int
adc
inc
and
icebp
and
frstor
sbb
dec
cmp
xor
insb
sub
jne
cmp
je
and
outsb
adc
inc
mov
inc
scas
adc
jmp
pop
push
adc
push
call
je
and
push
inc
mov
int
adc
je
inc
and
adc
jb
mov
arpl
pusha
cmp
sub
and
mov
nop
adc
enter
lods
xchg
push
push
sti
lret
lds
aas
and
dec
adc
outsl
mov
shlb
dec
sub
mov
lahf
mov
or
push
and
mov
adc
dec
mov
or
add
jb
and
insl
adc
push
inc
add
adc
lret
pop
and
dec
inc
subl
loop
and
xchg
je
adc
test
xchg
mov
cmp
mov
adc
xchg
jne
xchg
inc
xchg
inc
or
punpcklwd
mov
adc
adc
cltd
adc
push
cmp
inc
cmp
cmp
cmp
je
cmp
sub
and
sbb
bound
je
cmp
push
cmp
pop
cmp
jne
loopne
and
adc
lods
fbld
insl
dec
loopne
and
je
and
inc
das
lahf
add
ss
sub
inc
js
sahf
push
adc
cmp
movsl
pop
and
and
mull
pusha
popa
and
stc
lock
and
and
lds
mov
sub
stos
cmp
stc
and
adc
and
loop
mov
cmp
lcall
and
adc
iret
mov
les
and
and
daa
xchg
or
lret
xchg
fistl
xchg
or
dec
test
cld
mov
xor
add
and
inc
xchg
adc
mov
adc
out
and
xchg
cmpsb
adc
ret
mov
jne
mov
push
push
and
and
nop
and
popa
stos
and
adc
mov
fs
cmp
pushf
in
or
in
popa
dec
and
sub
xchg
or
add
loop
adc
add
shrl
mov
and
and
sarl
xlat
jle
sub
xor
add
inc
sub
pushf
ret
xlat
mov
mov
and
cmp
mov
arpl
adc
lret
mov
stc
push
inc
pop
adc
add
add
lea
cmp
jle
sub
lea
xor
pusha
inc
adc
dec
and
push
inc
pop
adc
push
and
and
mov
pop
pop
jns
adc
adc
fs
and
pop
xchg
inc
les
sub
and
inc
jmp
jg
mov
adc
mov
and
adc
xor
hlt
lock
and
xor
cmp
and
adc
jle
dec
adc
and
pusha
js
adc
cmp
inc
mov
sub
mov
inc
jle
lods
dec
add
mov
adc
pop
push
and
and
and
and
lea
insl
sbb
xor
mov
mov
mov
pop
and
in
and
and
and
push
adc
inc
adc
mov
sub
and
out
sub
xchg
mov
add
loop
out
and
dec
and
push
adc
sub
data16
adc
jg
mov
andl
mov
pop
ret
mov
inc
and
and
adc
jbe
pop
fwait
inc
cltd
adc
and
xor
inc
jmp
repnz
adc
lea
xor
adc
add
and
sahf
nop
sbbb
das
adc
or
subb
pop
daa
adc
rorb
add
adc
mov
je
inc
test
jne
and
dec
adc
inc
aaa
adc
dec
mov
rclb
add
xor
mov
mov
movsb
inc
add
ljmp
pop
int3
adc
iret
push
and
lods
adc
dec
adc
rolb
xor
adc
mov
adc
inc
or
adc
popl
adc
pop
movsl
and
dec
sbb
subb
push
call
adc
mov
push
test
inc
adc
sub
inc
cmpsb
sbb
sar
cmp
mov
mov
dec
adc
rorb
adc
sub
mov
and
loop
adc
sub
add
add
rcrl
adc
adc
or
adc
and
out
or
sbb
adc
addr16
and
call
add
inc
adcb
movl
xor
mov
test
fidivrs
or
adc
push
sbbb
adc
pusha
adc
push
rclb
cld
pop
pop
pop
popl
adc
and
adc
orb
mov
adc
cwtl
andl
sub
sub
inc
mov
lea
mov
pop
pop
mov
sbb
cmp
jae
lea
push
push
loopne
inc
jle
cmp
enter
mov
adc
roll
mov
lock
jl
add
or
cmp
jne
jmp
push
push
add
mov
adc
sub
adc
mov
sub
in
push
cmp
mov
jne
lea
xor
jg
inc
add
rolb
sti
and
sahf
adc
ret
mov
adc
testb
and
cmp
sub
inc
fwait
push
cmp
jae
mov
inc
movsl
adc
jle
adc
pop
subb
jmp
leave
je
or
or
xchg
adc
sub
or
adc
mov
xlat
cmp
je
cmp
je
dec
adc
jne
inc
push
adc
lea
sbb
cmp
je
sub
mov
mov
inc
cmpsb
adc
shll
xor
cld
and
or
mov
test
push
add
lods
leave
inc
adc
or
add
mov
and
push
and
sub
push
movsl
ss
lock
clc
adc
daa
addb
lea
adc
xor
les
mov
stos
mov
mov
sub
mov
inc
lods
adc
push
dec
adc
or
shlb
mov
adc
je
sahf
fistl
push
outsl
inc
adc
adc
sbb
mov
xchg
cld
and
dec
and
adc
aas
mov
dec
push
mov
xor
lret
test
js
das
adc
jl
jmp
and
add
outsb
or
ds
jne
sbbb
daa
mov
mov
adc
mov
or
lea
sti
and
shll
inc
andb
push
adc
push
dec
repnz
mov
lret
int3
sti
or
xor
repnz
not
dec
je
mov
and
adc
enter
push
inc
leave
adc
mov
ljmp
mov
adc
add
mov
cmp
je
cmp
je
test
je
cmp
jbe
mov
pop
repnz
inc
inc
inc
cmp
or
jb
pop
sub
add
cmp
jl
mov
xor
shlb
mov
movb
ret
add
mov
jmp
cmp
jne
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
addb
mov
inc
sub
mov
inc
pushf
adc
or
aas
add
je
inc
jle
inc
inc
cmp
inc
pop
adc
sub
sbb
inc
fstl
dec
and
xor
adc
and
mov
pop
xor
lea
dec
sub
arpl
test
pusha
sbb
mov
mov
push
push
dec
mov
and
mov
push
pop
adc
mov
mov
pop
xchg
adc
jmp
test
inc
adc
push
and
mov
push
adc
mov
jle
and
xchg
and
xor
cmp
jge
mov
adc
push
xchg
adc
loop
mov
mov
and
mov
fmull
fisubl
xchg
inc
and
mov
xchg
mov
adc
add
mov
adc
mov
repz
jecxz
xchg
dec
or
cmp
and
and
js
push
dec
mov
inc
and
lock
pop
push
mov
adc
das
mov
and
sbb
or
mov
add
inc
cmp
mov
repz
xchg
pusha
loopne
jp
push
mov
cmp
sub
push
adc
and
mov
shl
adc
add
add
mov
pop
cltd
push
xor
rcll
xor
rcll
das
add
jo
das
add
jl
adc
dec
pop
arpl
adc
or
das
add
inc
and
and
call
mov
push
loope
and
lods
and
in
adc
adc
sahf
insb
repnz
sub
inc
mov
lea
and
outsl
and
xchg
int3
xchg
adc
bound
mov
mov
call
and
mov
call
mov
loop
and
dec
and
aaa
and
sub
fwait
adc
mov
push
mov
inc
push
and
mov
enter
negl
adc
call
push
les
sbb
jne
sbb
dec
sbbl
sti
cmp
jp
adc
inc
sbb
inc
and
adc
or
sub
pop
and
mov
in
push
adc
in
pop
adc
mov
adc
cmp
jne
pusha
mov
enter
jmp
into
and
adc
dec
inc
repz
cmp
push
xor
cmp
jne
pusha
xor
std
jg
aam
push
inc
or
jle
cmpb
jne
mov
xor
and
outsb
and
sub
lahf
arpl
xchg
sahf
mov
mov
push
push
icebp
adc
test
and
adc
sub
sbb
dec
xlat
and
mov
sub
and
and
and
xor
dec
push
and
in
dec
adc
dec
add
xchg
int
dec
adc
sub
add
insb
adc
sub
add
jle
dec
adc
sub
add
cld
lcall
or
adc
test
or
sub
add
inc
inc
pusha
jns
lock
sbb
jns
adc
int
and
rol
out
adc
loopne
adc
orb
adc
in
orb
sub
adc
movsb
mov
inc
adc
or
movsb
popf
adc
cmpsl
push
adc
and
dec
adc
mov
mov
and
and
adc
insl
jbe
push
xorb
aam
fiaddl
adc
movsl
cmp
daa
cmp
arpl
jmp
xor
adc
iret
push
call
mov
rolb
push
inc
mov
sti
aam
jmp
and
jmp
and
jmp
and
and
and
pop
inc
push
sub
push
and
adc
inc
and
cli
add
pop
ret
clc
inc
mulb
insl
daa
adc
jae
push
adc
scas
arpl
adc
push
push
adc
adc
mov
and
push
pusha
and
push
and
cmp
pop
adc
push
and
cmp
lret
lahf
cmp
je
arpl
popl
adc
test
dec
into
adc
push
sub
add
pop
and
push
xlat
and
push
ja
xor
cmp
fs
dec
xchg
and
and
es
daa
iret
adc
add
dec
adc
leave
mov
adc
and
pusha
or
call
and
mov
adc
push
orb
or
adc
inc
mov
popa
cmc
adc
mov
adc
dec
xor
enter
xor
cmp
jne
inc
fwait
add
push
mov
mov
dec
dec
sbb
cmp
je
jmp
and
je,pt
mov
push
mov
mov
bound
jmp
and
adc
and
push
ret
mov
pop
inc
mov
and
daa
mov
and
clc
fwait
xor
adc
jg
adc
or
add
and
adc
xchg
adc
sub
adc
punpcklbw
jne
inc
adc
ds
dec
dec
mov
mov
add
and
andb
jo
add
movsb
iret
and
adc
or
cmp
mov
test
jl
in
push
cmp
enter
popfw
adc
or
or
insl
mov
lock
gs
daa
mov
ret
jp
sub
or
test
mov
xchg
adc
and
and
pop
pop
and
and
push
adc
mov
adc
test
je
adc
cmpsl
add
add
adc
and
adc
dec
sub
sbb
adc
inc
sub
adc
mov
test
adc
push
add
jmp
pusha
push
pusha
dec
adc
sub
add
jge
daa
sbb
and
aam
nop
nop
lea
sub
add
cs
adc
jg
arpl
lahf
fcoml
cld
and
add
aas
add
or
jg
and
jae
pushf
into
and
and
adc
and
and
mov
add
jbe
clc
push
ja
sti
pushf
adc
xchg
xor
popf
inc
mov
adc
pop
push
mov
and
adc
xchg
dec
pusha
cmp
leave
pusha
cmp
shll
and
aas
push
jne
sarb
nop
nop
inc
das
adc
pop
daa
jg
jge
adc
and
mov
andb
and
movsl
and
inc
adc
sbb
and
movl
adc
adc
adc
adc
or
add
mov
adc
bound
cltd
cld
push
jg
mov
rcrl
push
movb
andl
jl
cmp
jg
push
and
jge
add
xchg
adc
gs
pusha
sub
ds
andl
mov
enter
adc
stc
jle
add
data16
and
or
mov
push
mov
xchg
adc
and
and
adc
mov
pop
adcb
adc
sub
add
inc
mov
and
push
push
mov
pop
data16
mov
or
std
dec
ja
or
adc
and
out
sub
sub
and
adc
mov
pop
xor
lea
insb
adc
inc
or
adc
or
mov
pop
add
into
xchg
mov
or
push
pusha
test
xchg
pop
inc
adc
and
adc
adc
das
adc
adc
sub
adc
push
cmp
and
scas
sub
add
add
sub
add
and
repz
daa
add
stc
das
adc
adc
das
cmp
adc
sub
fisubl
add
adc
mov
adc
adcb
inc
inc
rcll
and
sub
mov
psubq
roll
and
jno
fstps
mov
cmp
adc
push
lea
jp
adc
pop
adc
inc
adc
shrb
pushf
outsl
mov
mov
and
mov
xchg
dec
and
adc
xchg
bound
fwait
mov
sub
sub
and
andb
popf
scas
and
adc
lds
mov
mov
adc
das
scas
add
push
mov
mov
das
adc
mov
xchg
outsl
mov
dec
inc
xchg
push
mov
and
fsubl
and
sub
add
mov
popl
lea
pusha
cmpsb
cmp
mov
adc
mov
jmp
xor
in
adc
mov
test
sahf
inc
sti
pusha
pop
adc
sub
push
adc
es
repz
sub
sub
jne
sbb
int
cld
es
and
mov
mov
daa
mov
mov
pusha
mov
jb
rolb
rolb
les
and
pusha
les
flds
and
fisubrs
subl
adc
aas
sub
add
str
cs
push
and
lea
sbb
sbb
lcall
and
adc
clc
pop
adc
xchg
push
and
movsl
mov
pop
ljmp
jo
pop
out
sbbb
mov
dec
inc
mov
and
and
cmp
adc
inc
cmp
mov
adc
jb
das
push
and
mov
sub
add
inc
adc
and
xor
and
inc
adc
mov
mov
and
sti
loope
and
adc
add
adc
lcall
push
add
push
hlt
and
test
add
fwait
pop
push
adc
mov
int3
adc
xchg
outsb
jno
jp
cmpsb
mov
lds
inc
sub
and
lds
je
and
mov
adc
and
push
adc
inc
int
cmp
fstps
mov
mov
dec
fsubl
or
push
adc
or
insl
push
and
dec
adc
push
push
pop
pop
ret
mov
sub
add
pop
inc
and
xorb
mulb
sbb
xchg
adc
ret
movsb
adc
das
and
push
add
mulb
mov
sub
add
repnz
add
ljmp
verw
mov
and
and
adc
sub
inc
xchg
and
pop
cmp
jge
push
jmp
and
xlat
adc
mov
stos
lahf
mov
mov
xor
loope
inc
jmp
xchg
xor
sub
adc
push
sbb
inc
and
dec
add
popa
add
popf
mov
loopne
push
adc
movl
sub
mov
aaa
outsl
daa
adc
jp
and
sub
mov
and
dec
pop
mov
inc
mov
mov
mov
and
mov
and
adc
sbb
ljmp
and
lods
and
mov
xchg
iret
or
divb
and
lds
pop
and
sti
in
and
pop
fistl
jns
lea
adc
rorb
dec
jp
punpckldq
adc
and
stos
adc
push
dec
push
and
adc
in
sub
daa
inc
sbb
out
scas
outsb
inc
or
pop
gs
movl
mov
movl
adc
test
and
adc
inc
lea
pop
add
imul
sti
adc
mov
pop
stc
adc
push
add
icebp
mov
mov
push
mov
mov
pop
mov
lea
in
and
out
adc
outsl
adc
pusha
sub
pop
and
imul
push
push
lds
add
cmp
adc
cmp
jne
mov
lcall
mov
pop
mov
dec
or
lea
sarl
mov
in
adc
adc
scas
ja
pop
call
lea
push
call
and
lods
and
jle
and
stos
adc
mov
and
sti
adc
and
xchg
int
inc
adc
and
mov
call
and
mov
xchg
cmpsl
mov
inc
adc
loopne
mov
dec
adc
outsl
and
cmp
push
adc
sub
mov
mov
mov
mov
loope
adc
and
sub
mov
mov
mov
rcll
mov
scas
and
xchg
mov
mov
or
sub
pop
pop
inc
sub
add
adc
mov
imul
pop
and
inc
mov
cwtl
add
and
movsb
mov
mov
adc
sbb
call
fadds
and
or
clc
pusha
sub
pop
mov
and
xor
inc
jle
inc
and
adc
pop
lret
and
sub
and
mov
mov
and
and
pop
xor
frstor
adc
je
cmpb
adc
fnsave
and
and
adc
adc
and
adc
bound
and
xor
cwtl
adc
and
arpl
adc
sub
sub
or
sub
jl
push
pop
and
inc
and
and
push
pusha
inc
adc
push
push
sbb
inc
sub
mulb
xchg
adc
lea
sbb
jmp
sbb
mov
adc
aas
adc
inc
add
sub
add
ljmp
pop
xchg
adc
pusha
xor
add
enter
pusha
push
cld
push
das
cmp
inc
xchg
adc
inc
xchg
adc
and
imul
popa
fsubl
addb
xlat
scas
and
das
adc
in
adc
and
stos
adc
out
cmp
and
in
adc
push
push
mov
and
shll
adc
sbbb
sub
pop
inc
addr16
adc
lods
pop
sub
inc
adc
jmp
test
adc
rcll
adc
and
leave
je
and
les
sub
inc
adc
mov
pop
adc
pop
sbb
das
mov
cmp
jne
ljmp
mov
sbb
xor
cmp
setne
and
adc
xchg
dec
add
and
adc
add
lds
mov
adc
jne
cmpsb
bound
cmp
jns
adc
sbbb
inc
xchg
xor
scas
inc
pop
and
mov
jbe
and
jg
movups
mov
pop
and
inc
add
xchg
and
xchg
and
push
sar
cmp
jae
mov
add
and
cld
add
or
jmp
aad
adc
sbb
je
inc
jmp
and
arpl
cli
pushl
and
adc
and
cmpsl
movsl
cmpsb
push
daa
popa
mov
or
cld
mov
cmp
adc
je
ss
popf
push
in
das
mov
mov
and
dec
adc
or
pushl
std
inc
and
and
adc
push
or
adc
adc
sub
add
push
or
sti
xchg
inc
or
jne
pusha
add
xchg
add
xchg
inc
push
adc
dec
jmp
aaa
mov
cld
dec
lahf
inc
sub
add
and
and
xchg
sub
add
inc
inc
push
and
jne
push
add
and
outsb
adc
cli
scas
insw
and
and
dec
mov
notl
adc
sar
fldenv
and
sub
sub
cmp
mov
push
or
push
adc
xchg
sub
push
es
mov
adc
and
and
imulb
and
inc
rcll
pop
sarb
add
test
adc
mov
shl
mov
lock
mov
mov
sbb
jg
shlb
and
les
dec
dec
adc
and
adc
push
push
and
sub
inc
and
and
and
mull
push
inc
mov
mov
mov
daa
pop
add
shl
sub
push
add
mov
adc
mov
inc
mov
insb
and
imul
and
adc
and
adc
and
and
adc
jmp
inc
mov
mov
mov
inc
adc
and
dec
adc
dec
and
inc
and
push
inc
sub
adc
imul
sub
and
pop
dec
pop
adc
dec
and
lods
and
sbbb
push
adc
pop
adc
sub
adc
inc
pop
adc
add
cmp
adc
and
repnz
push
adc
push
add
mov
and
mov
lea
inc
adc
and
movnti
adc
mov
and
sub
push
and
sub
and
outsb
fists
xor
ja
jge
inc
sub
add
add
testl
adc
es
mov
sub
sar
adc
pop
jg
fdivs
and
adc
dec
dec
adc
push
adc
pusha
jmp
lahf
dec
adc
dec
jns
and
pop
pop
add
pop
jg
es
inc
or
lock
loopne
and
push
in
adc
mov
imul
dec
add
sbb
and
xchg
adc
push
inc
push
adc
and
data16
and
and
daa
rolb
push
adc
mov
jmp
and
pusha
ja
inc
and
xchg
mov
push
sub
push
sub
lea
insl
pop
and
inc
popa
push
and
jmp
or
lods
loope
jo
adc
int
mov
and
adc
pusha
outsl
and
and
sub
mov
and
mov
int
adc
popa
ss
xor
outsb
sub
in
loopne,pt
and
mull
leave
inc
adc
cltd
pop
adc
mov
test
sub
push
and
push
adc
pop
sahf
adc
and
add
push
clc
add
pop
movl
inc
add
mov
sub
clc
adc
cmp
inc
jl
verr
outsl
pop
jne
mov
cmp
and
aad
add
shlb
out
adc
adc
ja
adc
and
dec
or
adc
dec
out
adcl
je
fwait
and
aad
jmp
mov
mov
mov
mov
mov
or
push
rolb
repnz
sub
pop
and
data16
out
xor
fldcw
xchg
xchg
das
add
mull
or
adc
das
lahf
and
dec
and
adc
enter
inc
sbb
xor
add
stos
xchg
and
cmc
fs
adc
push
shll
test
and
pop
adc
mov
or
and
and
adcb
xor
push
and
dec
jo
add
lea
bound
pop
scas
inc
sub
push
mov
adc
lock
inc
cmp
push
movsl
sbb
lods
mov
mov
lea
mov
sub
clc
jae
jb
and
daa
sbb
and
sub
pop
add
and
add
adc
dec
or
outsl
sub
adc
and
and
mov
adc
insb
sub
adc
add
and
adc
sbb
xchg
adc
ret
and
jl
ljmp
adc
stos
arpl
adc
xor
xchg
cmp
adc
mov
sub
sar
cmp
jae
lea
ret
add
inc
and
popl
adc
iret
es
sub
mov
or
clc
je
push
pop
adc
mov
sub
clc
jne
jmp
and
inc
adc
or
and
sub
ja
cmp
and
sub
inc
inc
and
sub
cmp
adc
imul
dec
inc
mov
shlb
and
and
pop
adc
daa
cmp
adc
movsl
jnp
pop
enter
daa
mov
mov
outsb
je
sub
inc
mov
mov
inc
js
pop
shll
mov
inc
dec
scas
dec
inc
mov
cmp
dec
jge
cmp
adc
add
lahf
dec
jge
push
inc
mov
and
xor
popa
and
imul
inc
sbbl
or
lea
sub
dec
jnp
icebp
sbb
je
sub
mov
mov
and
sub
adc
cld
jo
and
adc
lea
fwait
add
cmc
pop
adc
sub
adc
fistpll
cmc
adc
mov
xor
and
dec
sub
adc
add
jg
inc
mov
inc
cmp
jmp
dec
adc
and
push
and
adcb
push
mov
and
jl
mov
xchg
adc
dec
shll
jae
in
and
sbb
mov
mov
and
dec
adc
and
adcl
pop
std
aad
leave
sub
sub
cs
inc
and
imul
adc
pushf
push
mov
adc
adc
sbb
xor
stos
ja
das
add
cs
pop
sub
add
adc
add
xchg
xor
cmp
bound
adc
xchg
inc
shlb
flds
xor
add
add
outsl
add
push
das
sub
xor
daa
das
add
xor
adc
mulb
xlat
cmp
push
push
inc
jnp
sub
inc
push
enter
and
pusha
lods
dec
repz
and
adc
pop
subb
into
and
dec
inc
inc
push
mov
xchg
adc
jmp
and
push
ret
pop
inc
adc
xchg
and
dec
inc
xor
cmp
jl
pusha
iret
and
es
add
incl
adc
pusha
adc
mov
or
aaa
and
adc
push
and
add
jl
dec
and
jg
inc
or
xchg
jae
stc
mov
jns
adc
sbb
cmp
mov
call
and
in
cmp
stos
mov
int
adc
inc
movsb
adc
loopne
and
push
mov
mov
push
data16
rep
sub
inc
ja
pop
jge
neg
mov
rolb
stos
adc
pop
push
adc
cmpb
or
inc
je
mov
sub
add
mov
mov
es
daa
aas
lret
lret
jo
and
push
mov
add
mov
add
adc
jae
add
repnz
adc
in
and
cmp
mov
push
and
adc
and
and
and
pop
test
xlat
pop
and
jg
lahf
and
adc
and
add
xor
ja
adc
adc
pop
pop
adc
mov
and
es
mov
movl
gs
aas
and
arpl
or
pusha
mov
and
and
jge
xchg
adc
cmp
sub
cmp
cmp
pop
je
jle
pusha
pusha
adc
xchg
push
adc
pop
arpl
arpl
cld
iret
and
sub
xor
and
xlat
subb
cmp
and
and
adc
dec
mov
and
cmp
incl
jae
push
shl
jbe
adc
pusha
call
xor
je
and
scas
aaa
adc
add
ss
jl
nop
andb
adc
and
insb
add
mov
sbb
jno
adc
add
dec
outsl
dec
jne
outsl
or
cmp
adc
adc
sahf
and
adc
push
outsb
mov
jl
and
cwtl
adc
sarb
cmp
jl
push
and
adc
ja
adc
inc
adc
and
sub
ret
daa
dec
pop
and
and
test
dec
fisubl
ja
adc
andl
in
xor
subb
sbb
xchg
and
pusha
sbb
lds
lea
and
add
sarb
int
xchg
ret
leave
and
xchg
shll
je
je
and
inc
inc
pop
adc
mov
cld
xor
fbld
push
mov
mov
insb
test
sub
mov
pop
and
inc
cmpsb
sub
add
and
and
inc
lcall
adc
mov
and
mov
jbe
inc
movsl
adc
and
mov
inc
adc
and
and
dec
pusha
rcll
lea
mov
or
adc
inc
adc
push
push
adc
push
and
sub
adc
and
sar
cmp
inc
cld
adc
pop
cmp
jne
insl
adc
bound
and
aam
fstl
sub
xchg
and
mov
fsubl
mov
mov
jecxz
lds
adc
adc
jb
and
inc
pushf
and
dec
adc
sub
sub
adc
and
cmpsb
sub
jne
and
sub
daa
ja
add
out
adc
rclb
push
cmp
and
ret
inc
add
push
and
add
and
cmp
and
arpl
adc
and
jmp
sbb
and
loope
popf
dec
and
push
and
daa
sbb
jo
adc
jno
and
and
dec
je
sub
sub
and
and
xchg
push
cmp
es
and
mov
pusha
push
adc
or
inc
sbb
call
add
mov
mov
and
sub
sbb
int
or
mov
fs
and
add
and
add
fwait
pop
rolb
insb
pop
and
sub
and
cmp
adc
and
ds
mov
push
and
mov
and
push
es
adc
and
sub
sti
inc
std
adc
inc
std
adc
out
cmp
push
and
push
adc
mov
popa
cmc
and
xor
popa
and
mov
adc
sub
pop
pop
and
push
pop
cs
sub
cwtl
add
outsl
add
sub
gs
adc
outsb
js
fdivrp
and
mov
xor
inc
add
and
add
movsb
adc
insb
inc
pop
adc
jl
and
aaa
xchg
aam
cmp
and
jle
xchg
jp
and
dec
call
jae
frstor
ret
inc
repnz
or
rorl
push
mov
gs
dec
adc
cmp
mov
adc
lock
int
adc
inc
or
push
cli
je
pusha
inc
pop
xchg
adc
inc
sub
sub
xchg
std
adc
shrl
mov
gs
adc
lea
mov
or
adc
fstps
and
hlt
and
jle
sbb
xchg
and
mov
adc
in
jmp
mov
add
cltd
jnp
cmp
sbb
outsl
xchg
test
adc
ja
movsb
idiv
adc
je
pop
pusha
mov
pop
test
xchg
data16
sbbl
test
dec
cmp
ja
shll
xor
adc
cli
insl
andb
push
sbb
push
and
jp
sub
lcall
out
adc
fisttpl
pop
adc
push
inc
movsb
arpl
outsb
imul
cmp
adc
and
subb
push
push
xchg
and
jbe
adc
and
sub
das
adc
inc
mov
mov
and
and
push
add
xor
arpl
lds
jnp
and
ret
and
cmp
stos
adc
jge
je
jge
test
adc
and
outsb
adc
or
jle
jne
stc
test
pop
or
fsts
sbb
shll
cmp
jne
and
das
adc
loopne
mov
mov
inc
and
andb
iret
adc
xchg
mov
and
and
pop
data16
jp
mov
orb
and
mov
mov
pusha
inc
adc
dec
and
jno
xchg
test
add
mov
and
mov
jae
bound
adc
adc
jle
adc
and
jmp
loopne
adc
cmc
bound
cltd
and
push
inc
jne
into
mov
out
add
lret
adc
sbb
inc
xchg
and
dec
call
ja
jmp
jae
push
dec
lea
mov
jmp
stos
mov
add
dec
dec
mov
jmp
addr16
push
inc
mov
inc
add
inc
stos
rcrb
add
mov
dec
mov
jne
adc
out
and
adc
jne
and
inc
adc
lea
fwait
and
sbb
adc
add
jmp
pusha
and
and
lock
add
xchg
jle
and
not
and
sub
and
mov
add
pusha
and
add
inc
sbb
pusha
push
popa
pop
adc
int
and
pop
and
jno
sub
add
jbe
and
inc
cmpsl
pop
sub
mov
dec
adc
inc
sub
stos
pusha
and
fisubs
dec
dec
rcr
jmp
sub
xor
inc
lods
adc
les
sub
or
dec
and
jecxz
push
cmpsb
dec
add
add
outsl
inc
add
jnp
add
aas
add
sbb
aaa
filds
cmp
add
push
inc
stos
pop
fcoml
xor
and
aad
add
cmp
pop
mov
mov
pop
pop
mov
jge
and
int3
in
arpl
bound
out
push
adc
popa
mov
cs
cmp
leave
xor
and
and
inc
adc
and
adc
and
inc
dec
inc
out
or
pushf
push
adc
pop
or
xchg
adc
mov
icebp
addr16
adc
bound
mov
adc
mov
adc
out
adc
xor
pusha
adc
adc
pop
or
pusha
pop
adc
jle
mov
adc
dec
es
add
mov
add
test
inc
or
push
gs
adc
ja
cmp
jle
inc
mov
and
dec
adc
push
push
and
push
and
dec
and
adc
enter
and
adc
and
mov
sub
invd
and
adc
repnz
sub
and
inc
inc
and
xchg
adc
je
je
adc
or
dec
xor
sub
and
iret
adc
aad
jne
inc
jle
pushf
and
mov
and
lods
adc
insl
dec
adc
and
adc
and
dec
inc
adc
lea
and
pusha
push
dec
add
out
sub
inc
cltd
pop
adc
je
popa
aad
push
or
enter
inc
int3
mov
sub
sub
inc
xchg
rcrl
and
and
adcl
adc
push
push
mov
fdivrs
adc
jp
and
adc
and
out
adc
inc
insl
test
mov
in
lock
and
dec
adc
test
sbb
jae
mov
test
mov
je
lods
push
andb
lea
cld
dec
pop
inc
pop
adc
loopne
fdivrs
hlt
cld
adc
mov
dec
and
adcl
sbb
lea
add
push
mov
inc
andb
mov
adc
inc
aaa
sbb
enter
jge
add
adc
inc
inc
sti
adc
adc
scas
mov
mov
mov
lahf
adc
mov
xchg
pop
pop
mov
inc
or
mov
loopne
adc
lea
in
adc
or
xor
inc
xor
mov
je
dec
or
andl
and
pop
pusha
fists
pop
outsl
pusha
rcll
fmull
inc
inc
dec
xchg
orb
adc
jns
cmpsb
add
mov
outsl
add
pop
mov
popf
add
inc
jno
xchg
pushf
adc
xchg
xchg
inc
cmp
pop
in
push
lret
adc
adc
testb
shlb
adc
jae
mov
test
mov
je
or
je
inc
inc
mov
xor
jge
and
inc
adc
mov
adc
push
mov
cmp
pop
cmp
jle
mov
dec
mov
enter
out
pop
and
adc
push
inc
aam
rclb
roll
filds
popa
sbb
and
jmp
andl
inc
adc
in
shlb
jmp
and
and
push
push
popa
jne
jae
mov
in
dec
inc
rclb
push
inc
pop
mov
or
cmp
mov
pop
faddl
mov
inc
xor
inc
inc
push
adc
mov
pop
adc
and
adc
jmp
mov
roll
mov
inc
rcll
in
inc
rclb
or
sub
add
pop
loop
dec
ss
add
lea
dec
push
mov
mov
mov
pusha
sbb
sub
add
andb
sub
inc
and
or
push
mov
outsl
xchg
test
sbb
aad
pop
xchg
adc
or
adc
lahf
lea
cmpsb
jg
adc
lea
and
mulb
adc
sbbb
pop
and
adc
and
pop
adc
sub
adc
adc
inc
or
or
fs
out
adc
dec
pop
adc
jmp
mov
and
xchg
dec
arpl
and
inc
repnz
pusha
adc
shl
adc
and
adc
lea
push
xchg
adc
add
lea
and
ficoms
and
adc
inc
and
push
or
roll
pop
cmp
lods
push
adc
shlb
orl
hlt
das
je
adc
sub
mov
ja
adc
add
push
and
push
and
jmp
and
push
add
addr16
and
and
pop
adc
test
pusha
clc
adc
sar
jmp
adc
incb
jne
mov
inc
mov
mov
and
and
insb
xchg
or
adc
and
sbbb
adc
cmc
xchg
roll
xchg
mov
adc
mov
xor
js
adc
and
cmp
call
mov
xchg
inc
push
loopne
dec
das
addr16
cmp
mov
insl
out
push
jne
jmp
sub
ret
inc
push
push
dec
and
rcll
test
shlb
insl
sti
adc
roll
adc
and
insb
adc
jl
subb
into
test
test
inc
mov
lss
adc
adc
push
repz
pop
mov
inc
jo
es
testl
dec
std
adc
add
xchg
sub
push
test
jle
pop
adc
shlb
pop
jo
fdivrs
cmpsl
pop
sbbl
dec
inc
mov
jge
mov
inc
shrb
jl
jmp
lea
test
jl
sub
add
pop
test
jle
dec
jns
movsl
out
pusha
sbb
pop
and
pusha
jbe
cmp
and
in
and
sbb
xor
cs
sub
pop
adc
adc
mov
scas
dec
push
and
push
and
adc
daa
adc
jb
push
jmp
xchg
or
ja
and
shlb
daa
sbb
lock
add
and
adc
sti
mov
mov
push
push
push
lea
arpl
and
push
add
push
imul
outsl
testb
and
cmp
sub
and
adc
adc
push
sub
push
push
xor
add
add
jg
inc
inc
adc
push
mov
aaa
adc
push
push
cmp
adc
jg
add
adc
sub
add
and
aad
sub
add
mov
jp
adc
imul
adc
cmp
push
repnz
gs
imul
outsl
sbb
out
jecxz
outsl
sbb
and
and
pusha
daa
and
adc
xor
mov
nop
and
adc
push
lret
and
adc
pop
adc
dec
sub
inc
lds
adc
push
rcll
mov
and
in
push
sub
adc
arpl
inc
inc
adc
push
adc
jmp
cmp
inc
add
lret
xchg
inc
mov
jge
adc
cli
and
pusha
or
filds
adc
jae
sub
add
adcl
pop
adc
mov
jg
and
inc
cmp
sbb
fisttpl
pop
xor
pop
and
imul
cld
push
call
add
adc
adc
push
test
dec
out
or
cmpl
inc
push
adc
inc
mov
adc
sub
mov
mov
out
inc
ss
mov
and
and
ret
push
and
adc
das
push
sub
fadds
into
push
jae
adc
pop
fcoms
push
shll
sub
push
inc
or
loope
add
and
dec
inc
daa
xorb
adc
add
shrl
mov
cmpb
pop
and
std
adc
iret
dec
inc
lcall
or
add
outsl
pop
add
or
pop
pop
shlb
cmpl
jne
and
and
fwait
lea
lea
shlb
sbb
pop
and
aas
and
pop
jne
xor
ret
mov
and
sub
das
sub
pop
adc
ljmp
adc
daa
hlt
or
je
bnd
mov
sub
inc
repnz
jae
cmp
je
inc
jmp
and
in
xor
bound
inc
dec
bound
adc
xor
adc
inc
adc
and
fsubl
adc
and
sub
add
push
add
mov
dec
mulb
xor
mov
jns
and
adc
mov
cltd
and
daa
bound
inc
and
data16
add
or
xor
test
jg
adc
dec
roll
and
imul
and
and
cmp
adc
and
daa
sbb
adc
and
adc
push
adc
loopne
es
in
es
mov
fsts
push
xchg
adc
push
pop
adc
lahf
shrb
and
insl
jl
or
xchg
and
xchg
iret
pusha
ss
add
push
mov
adc
test
inc
lea
mov
adc
ret
inc
xchg
clc
jae
mov
dec
stc
adc
push
xor
lret
adc
jne
adc
sar
dec
and
adc
adc
add
jmp
cmp
and
outsl
adc
test
push
push
or
test
je
shrb
pusha
outsl
adc
jae
loopne
adc
mov
outsl
adc
inc
sahf
inc
jb
repnz
sti
adc
gs
adc
in
cmp
je
inc
add
jmp
aas
addb
mov
adc
and
pop
push
lea
incb
pop
push
push
and
and
and
arpl
and
adc
push
push
and
lods
pusha
xor
push
push
test
iret
sub
adc
and
mov
sahf
mov
and
cltd
dec
loopne
push
xor
mov
adc
out
lds
test
sub
adc
je
shlb
adc
test
adc
and
cmp
xchg
and
and
and
adc
mov
xor
sti
adc
cli
add
jge
es
add
mov
iret
and
in
adc
jns
inc
jbe
and
add
lock
pop
test
pop
je
inc
aam
or
pop
imul
arpl
add
fisttps
xor
and
push
and
adc
and
and
data16
xor
sbb
es
and
jae
daa
or
and
xor
jmp
sub
adc
jo
pop
adc
xor
lcall
sbb
enter
not
test
jne
xor
das
mov
test
and
mov
mov
inc
sahf
adc
sbb
push
dec
sbb
and
sbb
add
mov
cmp
push
scas
adc
jge
and
inc
adc
mov
mov
and
mov
add
mov
mov
and
sub
and
adc
mov
adc
push
inc
and
ret
mov
push
push
push
mov
cmp
jae
mov
and
xor
adc
test
fwait
mov
dec
aam
lahf
daa
adc
mov
cli
inc
aas
and
sbb
call
push
push
mov
es
cs
add
ss
or
push
call
shl
std
jmp
enter
inc
adc
call
inc
icebp
sarb
fbstp
aas
add
out
xchg
inc
aas
adc
adc
sub
adc
push
push
sub
pop
fcoms
dec
loopne
push
fsub
cmp
sub
push
dec
sub
sub
mov
loopne
push
add
push
and
cmp
and
fdivs
and
adc
mov
cmp
mov
pusha
and
dec
in
loope
pop
adc
mov
mov
sub
les
sub
push
notb
xor
inc
jmp
cmp
adc
xor
xor
adc
push
inc
or
adc
cmpb
lea
arpl
sub
inc
adc
and
shlb
inc
and
inc
adc
mov
jge
mov
cmp
add
rolb
push
and
mov
adc
inc
jo
mov
mov
push
lret
leave
cmp
jae
mov
outsb
add
iret
add
xlat
add
mov
xlat
add
and
adc
rolb
or
push
and
sub
xor
add
and
xchg
jmp
dec
andb
nop
outsl
add
mov
inc
jno
mov
mov
test
je
mov
inc
fdivl
fisttpl
cld
mov
lea
cmp
jbe
sub
inc
fnsave
adc
pusha
sbb
adc
inc
and
xor
inc
mov
adc
and
cmp
mov
inc
daa
push
cltd
push
cmp
push
jae
pusha
add
hlt
sub
out
adc
das
cmpsl
sbb
ja
adc
je
inc
fcoml
mov
adc
and
dec
jbe
adc
decl
adc
adc
es
inc
notl
mov
arpl
fsub
adc
and
scas
adc
or
adc
adc
add
add
dec
pusha
adc
dec
mov
add
add
mov
adc
mov
cmp
int3
cmp
mov
inc
outsl
xor
inc
and
jbe
xor
add
adc
push
push
sahf
push
push
mov
mov
mov
aas
fwait
add
adc
enter
mov
aaa
add
cmp
and
lret
add
cmp
adc
mov
and
stc
adc
add
and
iret
mov
cmp
inc
lret
daa
lea
ret
lods
xor
adc
mov
cltd
and
mov
test
add
inc
cwtl
and
and
adc
mov
mov
mov
xor
cmp
and
lds
subb
and
js
dec
nop
jmp
adcb
push
xor
sbb
add
inc
test
arpl
and
incl
inc
or
and
adcl
pusha
push
adc
das
cwtl
mov
pop
pusha
adc
sub
inc
icebp
and
inc
adc
sub
xor
out
dec
adc
movb
cmp
imul
scas
cmp
adc
adc
test
ret
test
sub
jne
es
jl
adc
adc
xor
das
add
ja
and
adc
nop
sbbb
mov
lret
sbb
cmp
add
sub
and
push
adc
adc
push
xor
adc
and
mov
and
es
or
pusha
adc
cmp
adc
mov
insl
xor
popa
sub
adc
adc
and
adc
inc
push
sub
or
and
xchg
and
and
cmp
je
js
and
xor
pop
and
lock
daa
rorl
sub
or
leave
imul
cvttps2pi
es
ss
and
cmp
adc
mov
xchg
ret
dec
sbb
pop
je
and
adc
pusha
adc
mov
or
mov
lods
or
adc
mov
ror
adc
adc
pusha
in
aas
sub
aaa
and
and
jge
cmpl
pop
xor
mov
and
jne
mov
adc
add
iret
daa
pop
add
addr16
adc
fldenv
and
push
push
or
push
adc
jl
and
sti
add
mov
sub
add
cmp
jle
pop
pop
out
sti
pop
sub
mov
adc
ret
adc
and
add
and
cmp
je
daa
lret
fst
jecxz
fcoms
movups
es
add
pop
das
dec
add
inc
add
loope
xor
outsl
dec
and
sbb
cmp
clc
or
xchg
loopne
jno
adc
lret
popf
clc
adc
inc
push
mov
adc
and
push
sbb
xor
sub
int
mov
adc
sub
xor
mov
adc
int
inc
cmp
inc
imul
jnp
mov
mov
sub
and
adc
and
and
lea
adc
ss
popf
adc
add
push
inc
add
nop
inc
add
mov
add
add
add
add
add
scas
xor
jg
push
sub
add
push
and
adc
fldcw
outsb
add
and
daa
push
add
inc
scas
mov
aas
add
js
mov
jne
dec
jns
and
sub
cmp
adc
mov
and
das
ss
sub
pop
and
sub
and
ret
cmpb
roll
and
xor
in
mov
loopne
and
mov
sub
and
ja
adc
push
and
adc
push
inc
push
and
dec
and
inc
adc
pusha
imul
adc
or
cltd
js
cmp
jne
subb
and
loopne
and
adc
je
mov
adc
push
add
pusha
int3
dec
add
add
mov
call
cmp
pusha
fs
das
add
pop
add
adc
push
adc
rcrl
mov
pop
sub
adc
pusha
lock
sub
push
sub
and
adc
shll
imul
xchg
subb
dec
push
dec
push
xor
and
and
and
jnp
push
push
inc
andb
dec
adc
push
push
adc
es
push
adc
and
cmp
in
sarb
mov
daa
lahf
add
inc
shlb
and
mov
and
jge
cwtl
jl
xchg
jl
lret
adc
arpl
jnp
sub
inc
jae
fistpl
enter
inc
mov
and
and
adc
adc
sub
adc
xchg
and
and
and
mov
inc
daa
mov
sub
mov
inc
lret
and
cmp
push
push
inc
and
loopne
adc
pop
sub
jnp
jb
inc
iret
adc
xor
jb
in
dec
std
and
inc
shlb
dec
inc
movl
inc
push
jge
and
rol
repz
and
das
adc
pusha
pop
adc
or
mov
mov
sbb
sbb
mov
imul
sub
fldcw
lahf
add
es
sub
xor
dec
and
popa
jnp
lea
cmp
inc
pop
movl
nop
and
addb
jle
xor
mov
or
or
push
pop
daa
or
adc
add
add
adc
mov
ja
adc
movl
and
dec
cmpb
lds
dec
adc
cmp
jbe
insb
adc
dec
dec
imul
bound
cmpl
and
test
adc
movsb
adc
testb
and
adc
and
adc
daa
fcoms
fimull
mov
sbb
out
adc
je
and
outsb
adc
pop
orb
aam
and
cmpb
imul
sbb
mov
and
adc
inc
enter
inc
push
mov
daa
cmpsl
mov
add
iret
xchg
adc
in
and
data16
mov
push
pusha
or
dec
and
and
imul
pop
xor
adc
adc
adc
push
stos
adc
mov
push
adc
xor
mov
adc
jp
and
hlt
and
mov
xchg
pusha
rorl
adc
xchg
pusha
mov
add
cmp
je
cmpl
jne
cmpl
jne
pop
mov
sub
and
and
xor
adc
xor
add
push
and
dec
mov
aam
and
js
aas
inc
xor
adc
lret
and
push
stos
adc
jmp
dec
xor
adc
ret
and
pop
lret
and
mov
xchg
pop
and
outsb
subl
and
lret
xchg
and
add
shll
rdpmc
adc
xchg
and
mov
dec
xchg
jnp
inc
dec
adc
lret
das
and
and
pop
and
sub
pop
and
adc
mov
cmpsl
inc
adc
add
jl
inc
and
adc
inc
fcoml
mov
mov
inc
jle
mov
xchg
inc
dec
and
xchg
and
js
sub
and
mov
jnp
and
pusha
loopne
mov
ffree
pop
adc
push
mov
adc
dec
mov
xor
adc
xlat
add
cmc
fadds
and
adc
je
cmpb
les
fistps
sbb
inc
adc
lret
and
push
and
and
and
shll
and
adc
sub
and
and
adc
lea
ror
movups
adc
pop
jl
adc
inc
daa
adc
mov
and
and
cld
aas
and
dec
and
int
pop
xor
sbb
pop
xor
dec
and
and
inc
sbb
sub
push
and
fwait
adc
fwait
inc
fadd
adc
lock
dec
jp
inc
int
jne
clc
sub
test
jle
pusha
xchg
adc
inc
pusha
xorl
arpl
xchg
rcll
sub
sub
popa
jbe
push
push
lea
fimuls
jp
inc
adc
inc
adc
in
xor
fisttpll
out
xor
in
or
cs
and
inc
push
mov
rclb
push
sub
mov
and
jge
push
popf
es
dec
and
das
and
stos
jae
inc
and
sahf
test
and
inc
arpl
rclb
pusha
adc
xor
adc
testb
scas
mov
pushf
test
adc
movl
mov
ret
and
xchg
scas
insl
inc
xor
inc
dec
cld
adc
test
shlb
mov
xor
aaa
jmp
inc
push
adc
and
and
sbbb
je
rclb
inc
aas
rorb
aas
mov
adc
sbb
mov
xor
mov
push
and
adc
test
push
dec
cmp
frstor
mov
mov
and
adc
and
stos
adc
es
mov
adc
sbb
and
adc
rcll
xchg
shll
xor
add
dec
xlat
and
mov
lock
sar
sar
and
and
jle
jmp
dec
dec
adc
adc
add
inc
adc
adc
and
mov
adc
pop
pusha
inc
inc
jb
adc
jne
mov
and
pusha
pusha
adc
mov
inc
inc
adc
sub
mov
imul
adc
addb
mov
xchg
movsl
fists
pop
adc
scas
sub
adc
jge
mov
neg
sbb
arpl
not
and
inc
cmp
out
mov
and
xchg
and
adc
and
or
xchg
and
xor
jecxz
mov
inc
inc
adc
sarl
inc
mov
dec
and
cmp
and
adc
push
and
mov
pushf
sub
lods
cmp
inc
jne
ret
and
push
and
mov
adc
push
test
mov
loop
and
and
xor
aaa
test
push
inc
inc
adc
dec
shrb
xchg
in
sub
inc
stos
and
fs
adc
movsl
andl
addl
xchg
sub
add
js
add
lret
adc
lret
add
fisubrl
lret
add
inc
out
scas
cmp
push
and
fs
lret
xchg
and
sub
cmp
test
ror
mov
sbb
test
orb
or
test
mov
cmpb
fidivl
adc
pop
and
mov
cmp
add
pop
add
faddl
cmp
add
pop
frstor
test
adc
pusha
loope
adc
shlb
mov
and
fisubs
mov
and
and
and
dec
push
mov
adc
push
cmpsb
and
cli
rclb
incl
adc
inc
adc
mov
clc
pop
pop
add
push
cmp
jne
mov
and
add
pop
sbb
sub
insl
xchg
pusha
fadd
sbb
arpl
xchg
adc
rorl
xchg
inc
dec
ret
shlb
pop
dec
arpl
and
xor
dec
in
inc
inc
pusha
or
and
inc
and
shlb
mov
push
and
and
inc
add
mov
cmp
add
sub
in
and
adc
xor
inc
or
divb
and
adc
jmp
adc
mov
out
and
adc
hlt
and
and
cmc
adc
fiadds
and
insb
and
movsb
rcll
and
bound
xor
add
adc
adc
inc
inc
sub
adcl
and
adc
ja
sbbb
jno
xchg
leave
pusha
sbb
sub
push
add
int
and
inc
pushf
mov
incb
and
lods
lret
and
ss
cmp
and
adc
dec
adcb
gs
call
xchg
inc
mov
add
sub
test
es
add
push
and
inc
mov
inc
jns
aas
movsl
adc
and
popf
inc
or
inc
iret
daa
sub
jge
addr16
popa
std
and
cmp
je
stos
adc
cmp
jne
and
xor
je
fisubs
adc
imul
adc
mov
adc
out
and
and
aas
xchg
mov
xor
es
push
adc
repnz
into
adc
int
arpl
jecxz
inc
sbb
inc
addb
aam
and
pop
inc
pushf
daa
xor
and
xorb
loopne
adc
daa
fiadds
cs
xor
sarl
inc
add
xor
push
lods
dec
adc
adc
and
jl
adc
push
inc
xchg
adc
and
popa
jg
sbb
inc
adc
data16
sub
add
fwait
cmp
lar
inc
sub
aaa
adc
aas
adc
adc
das
aas
add
iret
cltd
adc
aas
adc
and
adc
inc
std
adc
jae
insb
and
adc
inc
cld
adc
pop
adc
cmp
test
jmp
and
adc
and
or
adc
push
mov
jmp
adc
and
adc
mov
push
and
insb
mov
sbb
adcl
adc
push
adcb
push
jmp
adc
nop
mov
sbb
push
adc
and
adc
push
dec
adc
jg
pop
call
insb
and
and
and
andl
adc
cmc
out
test
adc
std
add
adc
es
or
je
inc
jae
jbe
push
dec
je
add
add
and
push
push
and
adc
test
jle
and
jmp
add
add
pusha
cmovo
jne
daa
inc
add
sbb
mov
add
jmp
ret
jnp
dec
mov
insl
insb
adc
push
adc
in
adc
iret
and
and
notl
mov
sub
dec
and
mulb
adc
inc
adc
lret
pop
imul
xor
outsb
jo
adc
ret
cltd
and
adc
xor
dec
ja
fldcw
call
cli
add
stos
adc
add
xor
pusha
popf
and
adc
neg
jmp
daa
cmp
add
add
inc
andl
sub
test
sub
enter
insb
adc
and
cmp
sbb
adc
mov
fdivl
add
fsubrs
sub
leave
adc
pop
inc
mov
cmp
and
xchg
adc
je
andl
mulb
arpl
adc
outsb
les
lret
call
dec
xor
adc
aaa
adc
loope
adc
outsb
pop
and
stc
and
test
and
inc
shll
scas
adc
push
push
inc
fcoml
lock
push
sbbb
lds
lahf
or
cltd
lcall
and
jb
mov
inc
and
xorb
pop
insl
xlat
outsb
adc
and
pop
adc
stc
cmpsl
xor
negl
xchg
ja
sbb
mov
jmp
mov
je
adc
mov
inc
dec
adc
push
adc
and
out
mov
leave
cmp
jne
mov
pusha
sbb
adc
and
sub
push
test
adc
cmp
adc
test
inc
cmpsb
dec
icebp
adc
mov
mov
and
push
inc
insb
push
inc
adc
and
jmp
orb
cwtl
adc
adcb
cmp
inc
pop
and
outsb
jge
xchg
orl
addr16
push
and
data16
inc
and
xor
cmpsb
jne
stc
xchg
inc
inc
call
mov
stos
std
inc
dec
adc
push
incb
jge
mov
and
or
and
lea
sub
sub
int
jo
lea
cmp
jge
and
jae
sti
fwait
and
inc
test
mov
jne
rolb
subl
and
jecxz
adc
subl
push
and
stos
dec
xchg
and
sar
and
subl
adc
sbb
andl
cmpsb
jecxz
adc
mov
sub
adc
popa
aaa
and
mov
sub
shlb
adc
cmp
jge
inc
out
mov
in
sub
and
add
sub
sar
stc
and
mov
jle
pop
mov
addb
shlb
fisttpl
and
push
sub
push
push
cmp
push
jecxz
push
leave
push
and
pop
and
adc
and
incl
mov
adc
adc
jg
mov
and
adcb
sub
adc
lret
cmp
inc
adc
mov
mov
xchg
mov
cmp
addl
inc
adc
xchg
cmc
je
inc
add
ret
dec
pusha
or
cmp
and
mov
sti
xor
and
adc
je
pusha
xor
fnstcw
shll
adc
sbb
test
je
jo
out
adc
adc
rorl
and
adc
xchg
and
insb
and
addr16
adc
test
and
adc
adc
subl
scas
and
jo
mov
push
je
test
adc
inc
pusha
jns
push
push
inc
test
adc
xor
test
push
xor
push
xor
push
push
and
inc
adc
outsb
and
inc
stos
adc
pusha
scas
les
xor
adc
out
mov
mov
cltd
outsb
adc
icebp
pop
adc
and
je
imul
inc
or
and
push
mov
mov
mov
xor
fisttps
or
ret
arpl
adc
xchg
lea
call
adc
and
xchg
add
add
mov
inc
jns
inc
cld
pop
cmpsl
sahf
and
inc
adc
mov
dec
outsw
jo
and
sub
adc
and
inc
leave
adc
dec
jg
mov
and
inc
mov
ds
adc
push
popa
dec
adc
inc
mov
sub
sub
adc
sub
and
cmpsl
test
adc
and
pop
add
adc
push
xor
pop
inc
pop
and
and
cmpsl
adc
and
aad
cld
push
aas
and
mov
adc
daa
inc
aas
adc
inc
mov
inc
and
sub
fnstsw
test
and
mov
pop
adc
sbb
popa
adcb
stos
cmpsl
mov
inc
adc
adc
cmp
push
mov
and
inc
adc
and
mov
mov
fsubs
add
pusha
adc
adc
and
and
rcll
adc
inc
mov
fiaddl
and
adc
fldt
into
mov
gs
sub
sbbb
mov
fsubrs
xlat
and
shl
shlb
clc
inc
and
pop
mov
fs
or
and
inc
inc
pop
and
and
and
inc
sbb
std
inc
dec
or
and
adc
dec
mov
outsl
cs
jmp
test
je
mov
jmp
and
test
pusha
or
mov
je
mov
xor
sub
and
adc
roll
and
mov
xlat
pop
adc
scas
add
and
and
bound
int3
mov
cmpl
or
or
push
arpl
jne
mov
or
lcall
and
xchg
popa
testb
or
and
inc
adc
xchg
xchg
adcb
xorb
or
push
push
pop
mov
mov
and
pop
push
pusha
mov
mov
and
mov
shlb
pop
adc
cmp
pop
mov
mov
jle
adc
mov
adc
lret
dec
adc
and
xchg
pop
lea
mov
je
pop
inc
adc
and
adc
rorb
jle
mov
xlat
adc
mov
lea
and
jl
add
imul
sub
cli
icebp
pop
out
shlb
clc
jle
push
daa
push
add
pop
and
pop
inc
and
push
add
adc
je
imul
or
adc
adc
and
adc
pusha
or
pusha
mov
pusha
or
smsw
ljmp
and
and
in
adc
inc
mov
xor
and
test
je
bound
adc
jle
mov
mov
mov
inc
clc
adc
jmp
inc
arpl
mov
fs
pop
dec
icebp
push
int
and
mov
andb
jmp
cmp
inc
sbb
jle
mov
jmp
cmp
jne
and
cmp
adc
adc
lods
inc
sub
pop
mov
pusha
xor
pusha
inc
push
dec
xor
add
inc
pop
adc
mov
sbb
add
es
cmp
pop
xor
mov
adc
adc
ret
mov
and
and
adc
leave
cmp
inc
fldenv
cmp
and
mov
dec
or
outsl
adc
and
cmp
jae
arpl
and
inc
jp
adc
add
inc
and
add
mov
sub
add
adc
dec
and
and
pop
adc
and
push
arpl
adc
inc
imul
adc
imul
mov
and
inc
das
and
add
sub
adc
ss
je
and
sub
adc
mov
mov
movsl
pop
or
repnz
movl
and
cld
xor
das
add
add
movl
cmc
and
es
adc
mulb
and
and
add
dec
mov
add
pusha
xor
push
mov
mov
push
shr
xchg
and
and
adc
movsl
adcl
adc
neg
test
rcrl
enter
push
adc
in
and
sbb
fld
out
shl
mov
imul
and
and
and
insb
and
lea
adc
jo
stc
push
inc
adc
add
xor
inc
push
adc
clc
push
mov
imul
dec
adc
loop
xorb
shlb
adc
aam
fs
cmp
mov
adc
and
adc
and
jne
inc
divb
enter
inc
push
adc
scas
movb
ljmp
lret
jmp
pusha
dec
inc
mov
sub
adc
pusha
pop
subb
and
and
mov
push
push
lock
cmc
inc
xor
inc
imul
sub
nop
mov
aam
pop
loope
adc
add
jl
popa
push
adc
and
adc
and
enter
sbb
call
add
cmp
and
push
inc
xor
jo
in
inc
adc
mov
cmp
and
arpl
cmp
lret
push
adc
and
xchg
gs
adc
and
and
in
lds
loopne
push
and
repnz
and
adc
pusha
adcl
and
and
test
xchg
and
fisubl
adc
inc
lahf
adc
xor
and
insl
adc
int3
pop
sub
testb
dec
xchg
popa
jmp
adc
push
push
mov
mov
jmp
arpl
pushf
cmpsl
adc
jmp
aaa
adc
dec
movsl
adc
arpl
push
push
mov
mov
jns
pop
adc
mov
adc
dec
clc
adc
cmp
pusha
pop
adc
xchg
pusha
pop
inc
jp
inc
dec
cmp
bound
inc
adc
sub
and
add
es
pop
js
pop
scas
adc
push
adc
movl
jae
and
adc
inc
je
add
inc
or
inc
and
movsb
adc
add
shlb
add
andl
adc
adc
add
bound
addl
add
add
and
das
addl
loopne
adc
imul
subb
and
cs
add
adc
shrb
push
sub
add
in
and
push
xor
xor
cmp
jne
cmp
jne
cmp
je
mov
xlat
test
cmp
adc
adc
push
shrb
aaa
gs
test
insl
cmp
xor
and
xor
xor
xor
adc
cmpsl
xchg
adc
inc
jb
fisttpl
and
ss
mov
dec
xor
scas
adc
rolb
push
in
dec
cld
sub
je
push
or
mov
lea
mov
push
in
sub
adc
inc
jp
test
int3
lea
insl
adc
or
fsubl
flds
or
and
test
dec
in
and
and
jle
pop
adc
pop
call
inc
in
dec
adc
inc
xchg
adc
mov
lcall
inc
push
mov
and
ficoml
inc
fmull
in
or
adc
insl
inc
lds
or
lds
adc
inc
adcl
and
insb
and
adc
cs
adc
clc
dec
push
lcall
adc
daa
sbb
mov
adc
flds
loopne
jle
sub
pusha
pusha
adc
rolb
mov
and
cs
gs
lock
jle
shll
adc
and
iret
add
loopne
lods
and
pop
test
pop
push
and
adc
outsl
and
adc
mov
adc
and
lcall
mov
addl
and
adc
push
andl
mulb
adc
or
mov
and
pushl
shlb
mov
sbb
inc
mov
test
jle
movsbl
cmp
or
cmp
fldt
mov
test
dec
and
adc
xchg
ret
rolb
adc
shll
and
cmp
movb
lds
pop
ret
add
xor
adc
xor
lret
mov
movb
jp
ret
lea
sbbb
push
daa
sbb
adc
mov
and
push
das
pop
add
iret
frstor
jg
dec
cmpsl
ret
cmp
mov
lret
adc
shll
xor
adc
test
or
inc
daa
and
notl
and
mov
pop
and
mov
push
jp
ret
cmp
inc
data16
push
mov
out
mov
and
cmp
lea
and
and
and
pusha
inc
inc
adc
add
jmp
sbb
xchg
rorb
loopne
push
add
andb
inc
outsl
jbe
int
inc
test
es
xor
and
les
adc
and
fidivl
and
frstor
lcall
push
adc
dec
loopne
adc
and
adc
adc
pop
or
sbb
arpl
jne
sub
daa
and
subb
iret
adc
push
inc
adc
ret
mov
sbb
push
and
adc
sub
xor
xchg
mov
in
pop
and
adc
mov
addr16
jbe
adc
pusha
and
push
add
rcll
dec
fs
pusha
sbb
jmp
stos
rclb
cmp
adc
and
adc
push
dec
and
out
sbb
pop
adc
mov
xchg
inc
sub
cmp
jl
pop
pop
cs
dec
and
inc
adc
das
out
inc
adc
std
dec
sbb
das
mov
mov
mov
cmp
and
inc
and
adcb
mov
and
jecxz
pop
or
dec
iret
inc
pop
adc
jae
and
sub
mov
add
or
and
mov
xor
insb
loopne
sbb
test
sub
sbb
fnstcw
ficoms
test
cli
and
dec
adc
dec
fsts
jle
sub
sar
push
imul
inc
adc
dec
or
clc
pushw
cmp
ja
mov
and
and
outsl
nop
adc
jne
mov
mov
xor
pop
lea
mov
mov
and
or
push
js
add
incb
sub
add
add
imul
or
imul
sub
add
lea
das
jnp
sbb
mov
cmp
mov
je
inc
mov
add
xchg
xor
pop
pusha
sbb
loopne
adc
cltd
adc
pop
and
adc
rcrb
pop
pusha
cltd
sub
add
push
and
dec
and
das
xchg
dec
adc
adc
inc
insl
popa
scas
adc
inc
mov
leave
inc
mov
xor
fs
adc
inc
clc
adc
sub
jne
test
jbe
jnp
adc
ds
jae
push
and
adc
and
int
pop
pop
xor
adc
and
cmp
enter
inc
lahf
adc
rcrb
lahf
pop
ret
jne
test
mov
jbe
jae
and
aad
adc
mov
dec
inc
inc
adc
or
adc
fisttps
push
ret
sub
add
das
jb
mov
bound
imul
pop
adc
and
aaa
adc
mov
and
push
or
and
rorb
jno
dec
xchg
inc
stos
adc
rcll
lds
add
movsl
roll
int
outsb
lea
xchg
adc
lea
and
lods
adc
lret
and
cmp
roll
xchg
adc
jne
popa
dec
pusha
fldenv
rolb
push
mov
sub
inc
adc
cmp
inc
pop
adc
mov
inc
pop
adc
inc
xor
ret
mov
repnz
sbb
test
jbe
shl
inc
inc
adc
sub
cmp
inc
inc
adc
inc
inc
adc
mov
and
pusha
dec
sbb
sub
cmp
je
mov
or
loopne
cmp
adc
icebp
lea
andb
adc
xor
adc
outsl
daa
popa
add
lahf
and
cmp
je
and
sub
jle
mov
sbb
sub
scas
sub
adc
jg
mov
and
sub
push
mov
mov
cmp
je
push
mov
inc
mov
adc
jne
pop
mov
adc
pop
and
bound
pusha
addr16
add
sbb
adc
and
adc
dec
jp
or
iret
adc
andl
repnz
xchg
adc
mov
and
mov
sbbl
inc
mov
add
es
movsb
jmp
xchg
and
lds
sbb
mov
pusha
out
adc
je
push
jg
adc
adc
addl
jbe
lock
xrelease
jbe
lock
and
addr16
and
adc
adc
orl
sbb
lea
mov
popa
bound
fsubrl
cmp
adc
repz
mov
test
and
dec
adc
inc
and
adc
inc
insb
and
lahf
adc
cmpsl
and
mov
or
sbb
adc
push
lea
inc
or
and
adc
inc
sbb
push
add
xlat
data16
and
jae
mov
inc
daa
adc
fisubs
adc
or
arpl
and
mov
sub
movsl
jns
mov
inc
mov
adc
and
sub
je
and
and
dec
jne
push
loopne
and
and
adc
pop
pop
popa
fs
jne
dec
outsb
mov
and
inc
and
pop
add
pop
push
fisubs
jbe
shl
call
lods
adc
cmp
pusha
mov
and
inc
bound
movl
loopne
bound
imull
lock
je
sub
sub
aaa
ja
adc
inc
pop
adc
loopne
adc
adc
insl
or
out
jbe
mov
adc
inc
ret
inc
and
scas
and
cmp
lahf
xor
and
dec
mov
repnz
ret
inc
adc
das
das
xorb
adc
pop
mov
push
and
and
outsb
sahf
adc
push
adc
ja
inc
incl
arpl
mov
imul
dec
je
bound
adc
sub
add
gs
sbb
fnstenv
sub
add
sbb
jne
sbb
mov
cmp
mov
je
arpl
and
adc
and
adc
add
cmc
inc
addb
inc
xchg
cmp
or
dec
or
pop
in
adc
or
shlb
mov
mov
sub
adc
adc
and
and
and
and
adc
mov
mov
jno
outsl
or
and
lcall
adc
loope
adc
fsts
test
test
mov
and
adc
mov
loopne
adc
das
and
movsb
and
in
lea
jnp
and
movl
xor
sbbl
rorb
insb
pusha
mov
das
pusha
mov
cmpsb
adc
pop
roll
and
xor
mov
and
add
pusha
movups
rorb
pusha
mov
sub
andl
movl
movl
pop
sbb
mov
aaa
scas
jg
xorl
add
es
add
movl
addl
mov
fadds
inc
movaps
add
and
add
add
add
dec
pop
and
enter
and
adc
out
movsb
jg
adc
mov
out
cmpsb
and
or
adc
inc
cwtl
adc
inc
and
adc
dec
loopne
cld
dec
mov
pop
and
dec
mov
movl
js
jle
and
jl
es
ret
adc
and
adc
adc
mov
and
and
test
in
inc
xor
repnz
mov
xor
adc
adc
adc
mov
movl
xchg
addb
movl
adc
adc
and
and
test
add
push
and
mov
adc
push
and
adc
cmp
push
push
adc
inc
adc
xlat
inc
and
inc
adc
jo
adc
sub
and
adc
ret
and
sub
mov
and
lea
xchg
inc
mov
inc
adc
mov
and
inc
adc
inc
or
push
push
aad
ljmp
add
sbb
cmp
hlt
sub
jne
lea
xchg
adc
pop
lea
mov
je
sub
adc
inc
add
jl
adc
bound
aaa
inc
or
mov
mov
or
mov
mov
lea
pop
push
adc
and
ret
daa
mov
adc
inc
inc
and
and
add
cmp
js
and
add
add
sub
and
ds
add
add
sub
fldl
and
add
ror
sub
adc
lea
xchg
loope
add
pop
dec
adc
inc
and
arpl
push
inc
cmp
add
xor
dec
ret
adc
add
xor
inc
adc
sarl
add
inc
mov
and
add
and
add
std
lds
stos
add
add
stos
add
xchg
fs
and
cmpl
cmp
add
xlat
inc
sub
push
aaa
sub
adc
or
loopne
adc
sub
adc
and
xor
add
mov
adc
les
sub
adc
and
adcb
mov
jge
and
dec
les
adcb
adc
xchg
and
and
les
and
addb
inc
or
sub
add
mov
and
pop
inc
lods
adc
mov
rorb
dec
adc
sub
adc
fmuls
add
and
add
and
and
dec
and
ret
and
add
dec
xchg
loopne
test
test
dec
dec
adc
xchg
testl
and
fs
sub
jecxz
adc
inc
mov
popa
in
popa
mov
add
test
and
sub
and
test
and
or
jbe
xchg
sub
loopne
adc
and
and
xor
push
dec
xor
cmpsl
push
and
and
mov
add
icebp
pop
pop
and
cmp
mov
insb
inc
and
test
or
and
pop
and
adc
and
and
jb
repz
adc
das
and
test
push
adc
xor
mov
stos
mov
shlb
mov
xlat
adc
mov
and
xor
call
and
mov
es
lcall
adc
sub
sbb
fisttps
decl
pop
pop
dec
and
dec
ficoml
je
aaa
xchg
and
test
inc
adc
inc
sbb
test
adc
push
push
pusha
and
jno
jg
adc
mov
mull
test
add
movhps
sub
pop
and
xor
loope
and
mov
pop
and
xchg
jbe
adc
and
and
mov
gs
ja
jmp
and
sub
adc
and
in
push
adc
sbb
and
and
sub
adc
ds
xor
and
jbe
push
and
adc
insl
mov
popf
enter
and
inc
pushf
and
sub
or
xor
bound
and
ret
and
inc
and
and
outsl
and
cmp
and
lcall
and
xor
add
pop
mov
xor
test
js
test
adc
inc
inc
adc
add
addb
or
or
adc
and
decl
adc
push
adc
sbb
addb
je
mov
bound
insl
adc
je
sub
je
mov
testb
mov
adc
xchg
iret
adc
and
jns
fwait
sub
push
mov
adc
jne
push
adc
js
std
inc
das
mov
jo
adc
and
cld
adc
aas
mov
out
jns
inc
adc
in
jp
jae
mov
loop
rclb
xchg
push
loopne
adc
sub
mov
sub
lahf
and
test
mov
fwait
dec
adc
mov
xchg
and
mov
inc
jecxz
or
movsl
inc
sub
and
inc
shlb
fistpll
lods
andl
inc
adc
mov
push
mov
inc
jecxz
js
adc
xorl
sub
xor
inc
inc
push
and
adc
add
adc
int
loop
pusha
sub
call
add
mov
inc
add
push
xor
dec
ret
jo
adc
and
insb
and
and
adc
mov
and
mov
mov
pop
inc
or
jecxz
adc
repnz
and
inc
and
adc
decb
sub
and
outsb
and
and
and
es
xchg
loopne
adc
pop
xchg
inc
sbb
daa
add
and
or
outsb
xchg
and
lea
pop
jo
stc
and
pusha
pop
jno
adc
fmuls
int
ret
mov
dec
and
mov
and
outsl
mov
adc
sub
and
jb
rclb
pusha
sbb
add
xchg
rorb
lahf
pop
dec
adc
cmp
pusha
or
and
adc
in
adc
popa
rcll
mov
mov
and
and
or
in
aas
add
faddl
push
sub
das
das
aas
add
imul
or
aas
add
mov
jge
adc
xor
add
push
and
sub
sbb
xchg
adc
fucomi
inc
inc
adc
arpl
cmpsb
and
pop
es
adc
and
and
and
and
adc
sub
push
sub
adc
and
out
outsb
add
cmp
outsb
add
fnsave
sub
add
aad
sub
jno
sub
add
inc
sub
and
adc
mov
and
adc
add
clc
lea
jne
and
bound
sbbl
orb
and
inc
and
jge
mov
xchg
adc
mov
je
cwtl
sub
mov
cmp
sub
jg
fs
movsb
dec
adc
mov
adc
divl
sub
imul
inc
add
add
test
and
push
lea
test
cmp
adc
mov
lcall
adc
adc
push
dec
adc
and
fwait
popa
xchg
movups
and
and
mov
mov
mov
adc
jne
inc
and
sub
add
jg
scas
xor
sub
insl
pop
and
mov
adc
repz
or
lahf
dec
adc
xchg
insb
and
add
push
loopne
push
adc
xchg
pop
dec
sub
mov
xor
adc
push
mov
mov
mov
mov
mov
and
pop
inc
mov
mov
adcb
push
adc
test
scas
add
adc
xchg
and
mov
mov
xchg
or
insl
dec
sub
cltd
pusha
ja
mov
aas
xchg
and
ret
and
and
dec
popa
and
mov
and
dec
bound
imul
inc
adc
pop
jge
cmpl
je
inc
cs
inc
and
push
sbbb
mov
adc
dec
sbb
xchg
or
stos
call
movl
inc
adcb
jl
daa
lahf
aam
inc
jg
mov
xor
and
sub
add
inc
and
dec
arpl
je
push
dec
inc
adc
push
add
xor
es
ret
and
adc
rcrb
pop
inc
or
sbb
scas
or
loopne
and
daa
sub
in
push
mov
or
push
adc
and
and
and
adc
jne
arpl
and
adc
and
sub
add
pusha
and
adc
cmpb
and
ljmp
sub
test
xor
and
and
ljmp
sub
push
push
incb
ja
jmp
mov
mov
jmp
and
xchg
adc
adc
adc
and
adc
bound
mov
xchg
cmpsb
and
pusha
notb
ljmp
adc
dec
add
adc
rolb
jg
jg
adc
jge
add
push
and
adc
push
dec
es
push
and
sub
sub
mov
es
sub
push
and
push
and
notl
adc
pop
inc
pop
mov
movl
sub
xor
sub
outsl
pusha
inc
adc
inc
add
jo
and
inc
xor
daa
das
pop
add
sub
inc
jo
push
popf
sar
mov
and
dec
arpl
adc
jmp
js
jne
and
adc
adc
and
lret
jmp
and
mov
and
adc
and
imulb
adc
sub
mov
pusha
pop
adc
pusha
pop
and
stos
mov
pop
dec
mov
adc
filds
adc
inc
inc
sub
aad
adc
sbb
and
push
jns
jmp
mov
pop
xor
jns
dec
pop
adc
test
adc
inc
push
adc
shlb
mov
push
pop
bound
mov
and
test
es
fldt
movsl
data16
popa
and
pop
cmp
adc
add
shlb
push
pop
adc
sub
sub
dec
and
inc
adc
pop
fs
adc
fcomp
adc
jmp
and
adc
and
and
sbb
pop
dec
adc
neg
and
cs
and
and
cs
mov
cmp
xchg
and
xor
xor
xchg
rcrl
xchg
and
adc
sub
inc
popf
and
add
lea
sub
dec
add
inc
add
aaa
inc
add
mov
pop
mov
lcall
cli
add
jmp
adc
inc
jbe
js
inc
jbe
js
inc
xor
js
and
test
push
inc
push
pusha
pop
loopne
inc
pop
jg
sbb
mov
sub
mov
sub
daa
cmpsb
cmp
in
and
add
push
push
and
and
and
push
pusha
inc
adc
lahf
inc
out
movsb
inc
add
test
inc
add
aas
and
pop
and
adc
xor
push
das
fisttps
outsl
pop
and
push
popa
dec
cmp
push
push
mov
xor
movl
inc
add
dec
andb
xor
adc
and
jae
adc
push
adc
adc
and
call
dec
int
jo
cmp
jne
cmp
jg
jle
adc
pusha
jge
push
pop
adc
inc
inc
adc
cmp
or
mov
cmp
add
adc
mov
add
loopne
pop
cmpsl
adc
inc
or
cmp
and
sbbb
shlb
add
adc
mov
lahf
jbe
adc
in
adc
and
or
fistl
mov
out
add
pop
and
daa
pop
pop
and
adc
pop
fmuls
and
adc
ds
adc
and
adc
and
das
sbb
cmp
jb
add
mov
jae
xchg
out
and
or
int
sbb
sub
cmp
or
xor
pop
lea
sub
adc
ljmp
adc
or
decl
shr
mov
loope
rep
mov
xlat
pusha
adc
adc
inc
adc
jo
mov
shlb
mov
lea
and
ljmp
adc
test
adc
and
pop
test
and
cmpsl
sub
or
and
popl
sbb
mov
lea
cmp
jb
lea
jae
pop
mov
call
jp
adc
movb
mov
pop
jmp
clc
shll
add
push
adcb
or
adc
cmp
jb
mov
and
adc
and
mov
sbb
rcll
push
es
adc
and
jb
pusha
aas
adc
inc
adc
inc
adc
sub
and
sub
add
jle
inc
cmp
push
mov
mov
cmp
inc
pop
daa
cmp
and
mov
dec
cmp
cmc
cmp
andl
hlt
and
push
scas
and
sbb
cmp
mov
push
and
and
test
fcomps
je
jg
sahf
xchg
and
adc
jns
pop
or
pop
and
sub
cmp
sub
adc
and
addr16
add
xlat
adc
test
jle
and
xchg
pusha
ja
cmpl
popa
and
cmp
jle
and
jae
andl
inc
dec
and
dec
and
inc
inc
push
adc
inc
add
outsl
pop
sbb
jno
lea
movsb
aaa
popl
pop
add
test
push
je
push
arpl
adc
inc
out
popa
cmp
pusha
sub
les
xor
jg
pop
inc
mov
inc
cmp
and
sbb
add
ret
cmp
jne
fists
add
js
inc
push
adc
mov
shll
xor
sub
test
je
arpl
adc
or
cmp
push
push
xor
stos
push
in
xor
lea
and
andl
and
mov
jae
and
and
mov
lea
and
sti
mov
lea
adc
rol
adc
adc
push
les
add
mov
and
cmpsb
adc
pusha
xor
xchg
addb
xchg
orb
lock
scas
clc
addb
movl
and
adc
adc
and
mov
xchg
imul
add
outsl
adc
stos
and
and
pusha
in
outsb
jno
lea
rcll
push
pop
and
lahf
shll
adc
adc
dec
mov
or
add
mov
sub
bound
xor
mov
xchg
push
push
xchg
scas
lea
push
pop
add
push
push
addl
rclb
loop
push
push
adc
push
adc
adc
adc
adc
pop
mov
push
cld
mov
push
adc
push
popa
lret
adc
adc
adc
adc
push
push
cs
adc
fisttps
and
adc
jmp
jge
and
pop
adc
and
jbe
je
and
jbe
sub
adc
and
and
and
sbb
aas
jle
push
push
push
add
add
adc
adc
pop
pusha
push
push
push
push
adc
das
es
adc
jae
test
sbb
cmpl
and
orb
mov
sub
outsl
and
adc
leave
mov
pop
adc
fcoms
sub
pusha
adc
enter
add
adc
mov
arpl
and
adc
and
cld
adc
push
adc
sub
sbb
add
push
sub
sbb
add
inc
sub
sbb
pop
add
sbb
pop
add
enter
mov
incl
adc
push
push
and
pop
adc
icebp
and
inc
sbb
push
cmpsb
push
and
pusha
push
and
mov
push
and
adc
and
push
add
sti
sbb
daa
pop
ds
icebp
test
rorb
pop
in
mov
adc
subb
ja
adc
fs
sub
repnz
es
xchg
cmpl
scas
adc
sub
add
inc
mov
add
push
add
inc
and
adc
sub
cwtl
test
cld
mov
cmpsb
pushf
adc
pushl
adc
adcb
mov
adc
and
adc
inc
add
fsubl
popf
mov
adc
popa
pop
push
inc
inc
pusha
push
rolb
add
mov
jno
adc
test
cli
adcb
mov
adc
and
push
mov
adc
add
clc
push
rolb
adc
mulb
jno
popa
fsubl
bound
xchg
push
adc
sub
xor
test
pop
mov
jne
adc
daa
das
inc
xchg
pusha
adc
xchg
shll
jg
es
fistl
pop
pop
mov
mov
out
lods
adc
lea
int3
popa
mov
fiadds
cltd
mov
scas
shrb
mov
jg,pn
xor
push
mov
stos
adc
cmpsb
or
out
and
pop
adc
and
pop
adc
xor
les
shrl
scas
lods
push
lea
rolb
mov
fisttps
into
inc
sbb
imul
sbb
sub
fldenv
pusha
adc
jg
insb
pop
inc
movsl
inc
clc
jecxz
and
sub
xchg
lods
xor
sbb
mov
je
sub
pop
add
pusha
repnz
jl
xlat
and
and
inc
inc
fists
push
and
mov
adc
jo
adc
push
and
and
ret
push
cld
inc
jno
and
mov
jl
les
push
mov
xchg
repz
push
xchg
mov
xor
test
jge
push
mov
mov
sub
push
jb
fmull
adc
and
push
add
add
and
pop
loopne
adc
push
aam
push
dec
and
pushf
push
adc
sbbb
inc
enter
and
sahf
sub
push
mov
or
inc
dec
pusha
push
mov
mov
js
adc
enter
adc
push
adc
sub
add
dec
pusha
push
and
repz
mov
lods
movsb
sub
orb
negl
movups
jmp
dec
adc
das
pusha
dec
push
adc
daa
mov
dec
clc
loope
and
fsubl
aaa
sub
and
out
movsl
fcomi
adc
shll
dec
adc
lret
mov
shlb
pop
xchg
and
and
xor
jbe
sub
in
adc
sub
add
daa
and
jp
in
adc
sub
sbb
fists
fsubrs
lahf
sbb
jmp
and
lea
and
popf
adc
adc
push
and
lea
and
push
lds
xchg
adc
cmp
jl
and
and
adc
jne
lea
and
mov
push
adc
cld
test
pusha
sub
dec
jns
and
xor
cmp
and
xor
sub
into
fists
xor
fmull
push
fs
mov
push
add
adc
mov
push
adc
cmp
jl
and
jae
and
stos
sub
daa
dec
sahf
xor
add
scas
xchg
and
mov
fsts
sub
push
and
scas
cmpl
daa
dec
add
clc
push
xor
sub
mov
inc
in
adc
add
verw
sub
add
pusha
movups
punpckhdq
sub
add
daa
verw
sbb
cld
pop
xor
movl
sub
mov
adc
pop
stos
adc
adc
dec
dec
inc
or
push
aam
jno
cltd
and
pop
adc
sbb
jecxz
inc
sub
xchg
fbstp
das
or
lahf
add
xchg
mov
fsts
xchg
and
sub
gs
cmp
adc
and
adc
sub
fs
push
jbe
and
and
out
dec
dec
and
adc
jnp
and
adc
sub
add
push
pop
adc
addl
pop
daa
xchg
xor
and
inc
adc
and
adc
and
daa
adc
pop
add
sbbb
fistl
cwtl
loopne
daa
pop
dec
adc
ret
mov
out
mov
sub
fwait
and
popa
jp
adc
adc
sub
sub
popa
pop
jp
and
xor
cwtl
inc
adc
out
dec
adc
jns
dec
mov
push
in
push
aaa
mov
test
je
mov
mov
push
and
jmp
and
inc
inc
stc
pop
jno
mov
sub
mov
inc
or
sub
push
push
and
adc
gs
adc
stos
adc
push
push
and
mov
call
and
jns
rclb
xor
divl
jbe
adc
jne
jbe
adc
inc
or
pop
mov
mov
inc
or
adc
pop
and
or
push
add
inc
sbb
sub
inc
push
adc
sub
pop
in
adc
and
push
pop
inc
or
lret
and
adc
and
cmp
outsl
popa
jno
mov
mov
xor
test
andb
inc
xor
dec
and
mov
inc
pop
and
cmc
adc
adc
adc
and
adc
rolb
les
and
cmp
adc
sbb
test
mov
mov
and
xchg
jne
adc
push
inc
push
and
pop
adc
mov
adc
inc
sub
push
and
and
adc
inc
pop
adc
mov
sub
pusha
cmpsl
jns
adc
mov
mov
ret
adc
adc
dec
or
in
inc
adc
adc
sub
pop
stos
adc
rcll
xor
sbb
cmovo
cltd
and
call
lods
adc
js
test
pusha
adc
movsb
pop
mov
sub
adc
xor
ret
push
push
push
lea
push
push
mov
mov
mov
pop
sub
pop
xor
and
pop
and
adc
and
cwtl
adc
adc
adc
clc
push
inc
adc
adc
and
sub
cs
mov
adc
inc
and
movl
fwait
cwtl
adc
push
enter
pusha
movups
je
push
call
mov
adc
mov
push
loopne
adc
mov
pushf
push
inc
adc
test
inc
inc
and
inc
adc
inc
fiadds
adc
mov
xlat
and
fs
pop
adcb
push
inc
lods
dec
repnz
mov
pop
add
mov
mov
push
adc
adc
push
and
fstps
adc
push
push
test
and
push
mov
jl
mov
imul
test
jl
mov
mov
cmp
adc
mov
call
and
mov
ficoml
cmp
int3
fs
and
and
or
aas
add
into
lahf
inc
and
cmp
inc
inc
and
adc
rorb
and
hlt
inc
sti
adc
nop
sub
movl
adc
cmp
adc
movsl
add
ret
add
mov
lahf
adc
mov
movl
adc
add
mov
sbb
sub
push
cwtl
add
cmp
daa
das
push
inc
mov
or
inc
add
pop
insb
push
es
lea
jb
out
and
mov
xor
dec
xor
add
aas
add
out
cltd
js
inc
pop
and
inc
and
mov
jmp
push
xor
stos
inc
adc
test
sub
adc
lea
mov
sbb
stc
xor
mov
mov
mov
jp
adc
test
cmp
mov
movl
pop
jl
popf
jp
adc
imul
pop
je
pop
js
popf
and
inc
adc
adc
mov
lea
jne
subb
mov
inc
mov
inc
push
and
adc
subb
inc
pusha
pop
inc
or
xor
cmp
dec
jo
cmp
xor
pop
push
adc
push
adc
pop
mov
push
and
adc
cmp
pop
adc
mulb
and
and
adc
stos
and
xor
test
test
sub
and
xor
imul
push
adc
test
and
test
and
adc
test
and
and
and
and
test
mov
inc
and
jb
cmp
es
test
test
test
in
and
push
adc
push
adc
in
or
dec
sub
add
mov
mov
dec
add
aas
add
push
and
jnp
adc
shlb
and
dec
inc
dec
sub
and
les
adc
popl
dec
adc
xor
mov
adc
pusha
xor
pusha
insl
adc
adc
sbb
cmp
or
pusha
das
adc
cwtl
inc
filds
adc
mov
mov
add
adc
lahf
rdpmc
scas
add
pushl
and
sub
cmp
pusha
dec
jg
pusha
dec
mov
adc
inc
push
outsl
add
movaps
jmp
movl
or
sub
push
cmp
inc
dec
movl
inc
and
and
iret
aas
adc
mov
das
add
dec
fisubl
loopne
and
lcall
fldcw
aaa
pop
sbb
mov
popl
and
adc
mov
sub
adc
adc
adc
push
es
int
pop
je
and
lock
adc
pop
cmp
and
lock
dec
adc
cmp
push
mov
shl
add
jnp
mov
clc
sbb
and
pusha
sbb
adc
adc
pusha
and
call
xor
adc
out
sbb
jp
adc
and
lods
and
aas
and
cltd
inc
outsb
adc
rclb
xor
es
push
and
imul
inc
add
adcb
adc
fs
cltd
adc
test
and
test
and
andb
mov
push
sbb
sub
pop
sub
mov
insb
fcoms
cmp
mov
xor
and
shlb
repz
test
and
andb
xchg
and
es
jno
inc
les
and
adc
mov
daa
pop
add
int3
push
and
stos
adc
inc
mov
dec
cmp
push
inc
and
jl
into
and
and
sub
sub
inc
dec
cmp
adc
adc
jne
and
push
and
sub
adc
sbb
adc
adc
addr16
adc
cmp
jge
dec
sub
adc
shll
pushf
pop
sbbb
adc
inc
adc
sub
and
rcrb
dec
and
xchg
adc
and
popa
adc
and
pop
adc
sub
cmp
inc
addb
add
cmp
jl
insb
add
dec
dec
inc
jo
sub
add
test
sbb
sub
cmp
jle
lea
dec
loop
cmp
fnsave
movsl
adc
lds
adc
dec
push
sbb
ja
and
and
adc
and
push
and
sub
outsb
inc
adcl
adc
arpl
popl
add
sub
sub
imul
pop
add
dec
sbb
pushf
and
and
adc
push
out
pusha
push
and
add
push
inc
adc
jb
adc
movl
pop
adc
dec
popl
adc
outsl
jae
xlat
push
dec
jno
push
adc
push
adc
xor
push
jmp
inc
inc
push
adc
push
out
mov
sbb
dec
mov
xchg
adc
mov
mov
mov
mov
shlb
scas
adc
stos
bound
sbb
mov
mov
mov
mov
pop
jp
adc
insl
sub
call
adc
lods
jo
adc
and
pushf
xor
mov
mov
push
cwtl
and
sub
in
comiss
inc
adc
mov
int3
cmp
mov
mov
jp
and
xor
dec
mov
pop
and
call
or
rcrl
movsb
adc
mov
and
adc
inc
daa
adc
mov
and
xchg
adc
mov
outsl
mov
daa
pusha
or
and
and
testb
push
fsts
sbb
movsb
das
mov
sbb
push
movsb
adc
xor
add
addb
iret
cmc
adc
cwtl
adc
inc
xor
in
adc
add
jb
add
adc
mov
shr
int
push
add
ret
and
pop
pop
push
mov
shr
call
and
test
inc
adc
cmovp
adc
and
adc
and
dec
sbb
cmp
fisttpl
mov
adc
jmp
and
jmp
and
sub
mov
dec
inc
and
and
mov
in
or
je
and
jno
push
and
fldt
std
sub
push
sub
pusha
or
mov
add
cmp
inc
push
adc
scas
and
lock
jno
dec
pusha
das
adc
test
repz
mov
adc
sbb
insb
pop
shll
push
dec
jmp
adc
hlt
jge
and
xor
adc
ret
push
and
cs
and
jo
sbb
and
adc
aas
dec
pusha
popa
sub
cmpb
add
add
es
pop
adc
jl
mov
dec
jb
jl
sub
lods
and
rorb
push
inc
add
stc
cld
jne
add
mov
adc
add
or
adc
and
and
push
test
sarb
and
lods
mov
je
push
lret
push
dec
jno
adc
adc
and
addr16
or
adc
adc
out
push
out
push
push
lea
push
inc
jecxz
push
and
adc
push
push
add
inc
mov
and
jno
ss
das
loope
and
and
fiadds
pusha
int
loop
sub
inc
adc
jb
and
mov
inc
push
sbb
test
mov
je
test
jge
inc
out
sbb
push
pop
adc
xchg
cmp
push
pop
push
mov
jmp
mov
push
cmp
lods
add
cmp
adc
dec
and
inc
cmp
jmp
aad
fiaddl
inc
sub
sub
into
adc
and
adc
imulb
adc
adc
dec
xor
pop
sub
and
int
adc
sub
sub
or
adc
sar
inc
pop
adc
rorl
in
inc
mov
and
push
jmp
mov
shlb
push
shlb
cmp
mov
pop
add
add
mov
push
cmpsl
sbb
xor
push
push
push
push
mov
xchg
adc
push
sub
add
inc
and
pop
adc
and
pop
in
add
scas
js
pop
add
inc
mov
das
adc
push
and
and
outsb
and
pop
adc
pop
inc
jg
adc
addr16
adc
sub
inc
stos
adc
shl
push
insb
adc
dec
adc
in
or
sar
sar
add
test
lea
and
and
fists
sub
xor
adc
xchg
test
and
pop
and
sub
mov
inc
dec
and
lods
inc
inc
adc
jmp
adc
push
and
adc
inc
jns
ja
adcl
sar
add
add
cmpsl
adc
fidivs
jl
adc
and
mov
mov
les
scas
mov
inc
clc
pusha
nop
adc
lds
inc
and
lods
and
xchg
and
and
adc
add
adc
lahf
fbld
dec
mov
xor
or
xor
mov
jno
mov
and
outsb
and
inc
mull
js
popa
in
push
push
push
and
adc
adc
push
inc
sbb
call
gs
adc
insl
adc
and
push
inc
and
push
ret
insl
lea
push
adc
sub
add
jmp
pusha
push
adc
sub
add
jl
lods
pusha
aas
and
pop
es
add
mov
mov
shlb
and
adc
and
jne
mov
inc
or
mov
ret
les
push
es
adc
inc
aas
lahf
add
dec
and
out
and
inc
jb
call
das
inc
add
lods
ljmp
sub
jno
dec
hlt
cs
sti
sub
adc
and
xor
mov
push
std
lock
test
adc
je
jg
std
jne
movl
movl
sti
inc
shlb
add
sub
and
pop
and
and
pusha
inc
fcoms
and
and
call
and
and
xor
inc
or
sub
cmp
xchg
inc
dec
push
and
jge
mov
push
xorb
outsl
cmp
dec
scas
cmp
cld
divb
jne
dec
cwtl
and
pusha
add
inc
ds
aad
shll
sub
jl
mov
sub
jmp
mov
add
cmp
inc
push
adc
fwait
pop
adc
adc
adc
shll
adc
shlb
call
adc
mov
adc
inc
sbbb
adc
inc
cmp
mov
and
and
sub
pop
and
mov
jb
cwtl
jne
fldt
adc
inc
xchg
lods
cmp
fdivrs
ret
aad
popa
adc
leave
mov
adc
xchg
rorl
ret
and
sub
add
movsb
int
mov
jne
mov
xor
cmp
jne
xor
jmp
adc
push
jecxz
popf
test
push
push
dec
adc
cmp
cmp
and
adc
sub
add
call
adc
daa
dec
add
cmp
inc
add
adc
rolb
add
sbb
mov
mov
push
push
push
push
dec
daa
and
jl
inc
xor
pop
gs
dec
mov
int3
adc
scas
adc
push
daa
test
popa
leave
adc
imul
add
jg
popf
xor
push
xor
lea
cmp
jbe
mov
and
insl
shlb
cmpsb
icebp
adc
mov
insl
mov
xor
inc
mov
add
cmp
jl
pusha
subl
inc
orb
add
sub
or
pop
xchg
adc
inc
call
jmp
test
lds
addl
cmp
sub
push
hlt
adc
adc
shrb
or
sbb
inc
mov
daa
pop
das
inc
fsts
loopne
decl
and
adc
out
adc
or
adc
inc
cmp
pop
insb
cltd
push
jo
test
jl
push
push
inc
dec
jge
adc
push
add
call
insb
and
jne
mov
pop
adc
iret
xor
sub
lcall
pusha
push
and
adc
adc
jge
adc
sbb
mov
cmp
jne
adc
aad
dec
adc
lea
and
and
mov
subb
push
and
std
adc
test
adc
pop
adc
fsubrl
adc
inc
insl
inc
js
je
je
mov
and
dec
and
sar
add
adc
mov
add
jno
mov
and
int
lock
cld
mov
inc
mov
adcb
in
push
push
and
push
adc
test
insl
and
add
test
pushl
cmp
and
es
and
jns
xor
sbb
xchg
adc
lea
and
arpl
push
and
mov
gs
adc
test
in
push
sub
les
pusha
pop
push
adc
iret
add
add
inc
pop
and
daa
inc
lods
adc
push
adc
pusha
pop
and
out
inc
inc
dec
pop
popa
shll
adc
mov
push
xor
adc
dec
pop
pop
mov
mov
add
sbbb
mov
dec
shlb
out
add
pop
inc
lock
push
add
sbb
fsubrl
enter
loope
add
shl
jle
testl
pop
cmp
clc
inc
inc
and
inc
arpl
es
jl
stc
adc
mov
sub
adc
pop
rcrl
push
test
push
jle
mov
and
das
sbb
je
inc
add
cmp
jl
and
loop
or
add
mov
sub
js
xor
jl
adc
and
cmp
and
jne
and
jmp
adc
adc
je
jbe
js
push
mov
adc
arpl
adc
jae
adc
inc
ds
scas
sub
add
xor
adc
cmp
mov
mov
adc
pop
adc
pop
mov
push
or
add
and
lea
dec
jns
adc
and
pop
jg,pn
adc
decl
mov
fs
pop
inc
lds
ss
add
jmp
jo
daa
pop
add
adc
adc
out
jl
pop
and
ja
push
and
adc
push
inc
lea
nop
popa
mov
shrl
inc
inc
adc
adcl
mov
inc
add
inc
push
adc
adc
add
fs
or
fnstsw
xorb
aas
adc
mov
add
and
adc
mov
inc
inc
incb
adc
aas
mov
pop
dec
inc
mov
pop
add
jg
pop
adc
je
and
and
call
mov
outsb
adc
add
adc
shrb
adc
rorb
bound
or
iret
and
push
push
push
popl
incl
das
and
mov
ja
adc
adc
inc
sub
cmovl
pop
sub
in
and
sub
adc
cmc
inc
icebp
adc
add
jne
cmp
jne
movb
jmp
mov
mov
mov
lea
adc
and
pop
cmp
jne
and
adc
rclb
lods
adc
push
inc
push
inc
sbb
lea
in
adc
stc
dec
cli
sahf
outsb
adc
jle
adc
xor
push
pop
jb
push
rep
mov
sub
cld
mov
inc
jae
mov
aas
add
add
aas
add
jge
xor
adc
cmpb
xor
adc
and
adc
inc
pop
pop
mov
add
mov
gs
cmp
push
sub
adc
inc
adc
pop
pusha
adc
inc
and
and
adc
add
mov
adc
and
xor
sbb
mov
cmp
popa
ljmp
add
shlb
popa
mov
adc
and
jg
adc
push
inc
push
shll
incl
and
daa
add
pop
adc
addb
mov
enter
lahf
cmc
adc
push
and
mov
mov
test
adc
sub
sub
xor
sub
add
mov
xor
inc
add
es
adc
push
inc
xor
rep
xor
add
jl
rolb
adc
sub
dec
adc
inc
add
inc
inc
and
lret
add
add
add
lret
add
xchg
nop
das
inc
add
pusha
inc
adc
or
push
adcl
adc
mov
sub
adc
pushl
cld
and
adc
dec
or
gs
adc
jmp
mov
and
xlat
dec
adc
enter
and
adc
movsl
sbbl
mov
push
push
and
mov
add
push
push
and
aas
adc
pushl
and
cli
and
push
push
push
push
movb
cli
imul
and
adc
gs
and
out
mov
inc
sub
pop
adc
pusha
sub
loopne
adc
fists
rorl
ds
es
insb
and
fwait
ds
push
adc
jg
lahf
push
adc
add
es
add
sub
push
mov
mov
or
div
stos
mov
and
rclb
dec
in
loopne
and
inc
xchg
flds
pop
add
cmpl
jne
inc
push
adc
ja
jno
dec
je
sbb
adc
and
movsl
popa
sbb
adc
pusha
or
movsl
cmp
sub
push
mov
mov
pop
adc
xor
roll
lods
adc
int
or
adc
mov
push
xor
rep
movsw
push
jb,pn
adc
in
inc
or
fbld
inc
stos
adc
adc
adc
inc
sub
insl
int
ljmp
inc
and
xchg
arpl
and
fistl
xor
and
inc
adc
pusha
push
adc
cs
xor
dec
and
inc
pop
adc
mov
xchg
cmp
insb
and
inc
add
xchg
mov
push
adc
fsubrs
inc
fs
call
push
mov
inc
or
jl
or
adc
imul
adc
push
inc
inc
adc
push
and
jg
dec
test
inc
jnp
adc
push
adc
xchg
adc
and
lea
outsl
mov
inc
push
adc
notb
lea
lea
sbb
mov
push
ja
mov
test
adc
movsl
lea
adc
rep
and
nop
inc
popf
adcb
adc
sbb
mov
adc
lea
sbb
rep
inc
std
adc
mulb
or
and
dec
adc
insb
push
adc
and
and
adc
pop
push
and
xchg
and
adc
stos
dec
jp
jbe
mov
push
adc
or
push
incb
adc
push
push
inc
or
xor
adc
pop
pop
add
or
xchg
std
loopne
gs
mov
push
sbb
je
adc
fcoms
jnp
loopne
add
dec
add
das
pop
pop
mov
pop
cmp
jne
cmp
jne
and
sbb
cmp
jl
cmp
jg
mov
inc
push
mov
lock
xchg
xor
add
ja
outsl
add
ja
sub
add
cs
outsl
adc
shrb
add
outsl
add
js
outsl
add
js
imull
outsl
add
sub
pop
add
outsl
add
adc
pushf
and
out
mov
adc
xor
xchg
add
dec
bound
inc
adc
dec
je
dec
jne
adc
dec
and
adc
bound
adc
pusha
fists
into
pop
jae
adc
mov
lds
adc
cmp
and
cmpsb
aad
mov
inc
rcll
sti
data16
mov
adc
jp
and
adc
iret
pop
mov
pop
sub
mov
out
adc
pop
adc
jae
out
adc
add
sub
daa
cmp
adc
cmp
and
iret
mov
andl
push
pusha
push
and
inc
push
adc
xor
stos
pusha
push
adc
mov
push
outsl
mov
andb
and
test
xchg
loopne
adc
and
mov
je
and
pusha
mov
mov
mov
add
xor
adc
adc
cmp
cmp
and
adc
adc
inc
lret
adc
pop
and
cmp
jmp
mov
sbb
sub
outsb
adc
movl
cmpsl
jg
pushl
jg
sub
cld
inc
lods
and
cs
adc
jge
dec
and
push
lds
hlt
movsb
fsubs
push
add
add
mov
adc
rclb
pusha
adc
lahf
mov
pusha
or
adc
push
or
add
mov
mov
test
jne
or
mov
enter
add
and
dec
add
inc
adc
loopne
adc
add
sub
and
cmp
pop
adc
cs
pop
and
dec
and
and
adc
and
or
inc
and
inc
xchg
cltd
sub
test
jbe
loop
adc
scas
lcall
xchg
mov
mov
pop
dec
adc
lock
adc
xchg
pop
gs
fbstp
sarb
adc
sahf
push
inc
push
push
push
lcall
and
fwait
adc
and
adc
mov
or
and
aas
adc
inc
pop
add
aas
adc
push
pop
xchg
cmpsb
mov
xor
cmp
and
add
add
mov
adc
stos
mov
xchg
adc
and
inc
and
shll
cli
shl
mov
and
adc
clc
test
je
dec
add
mov
arpl
xchg
and
fistl
push
push
and
adc
mov
inc
test
in
inc
add
cmp
inc
add
cmp
xchg
add
cmp
add
adc
inc
adc
pop
and
and
outsl
add
sub
insl
sub
jno
pop
adc
mov
sub
cmp
mov
and
inc
xorb
add
xorl
adc
and
shlb
cwtl
sub
mov
and
inc
push
xorb
xchg
adc
add
aaa
and
rcrb
cltd
add
sbb
cltd
adc
adc
orl
loope
inc
ja
and
loopne
mov
adc
and
sub
mov
les
adc
popa
pushf
adc
sbbl
movsl
add
sub
mov
xchg
push
arpl
insl
andb
mov
xor
adc
and
adc
sbb
inc
and
and
sub
and
pop
xchg
rcll
sub
int
cmp
lret
adc
and
adc
push
lea
pop
adc
inc
xor
aad
fwait
adc
leave
in
sub
jae
and
pushf
adc
mov
pop
add
adc
pop
adc
pop
add
js
rol
or
pop
mov
shl
cltd
pop
mov
lret
pop
adc
clc
or
push
adc
add
xor
inc
push
adc
inc
push
mov
mov
mov
div
and
inc
or
or
or
rorb
push
or
push
sbb
sbb
sub
inc
add
mov
stos
adc
out
and
and
xor
and
das
bound
adc
inc
ret
int3
and
inc
adc
stos
stos
stos
loopne
adc
sbb
sbb
inc
adc
inc
jo
sbb
inc
adc
and
mov
stos
orl
lret
push
inc
push
adc
and
lea
push
push
mov
adc
pusha
lcall
sbb
mov
sbb
sti
je
jge
inc
push
pusha
mov
add
adc
jns
adc
and
cltd
adc
ret
pop
jl
and
stc
adc
repz
push
push
lea
add
movsb
cmp
outsl
sub
mov
pusha
or
adc
add
das
add
or
daa
das
add
mov
push
sub
mov
daa
sti
lldt
and
lldt
sbb
verw
loop
adc
pusha
or
pop
mov
pusha
or
adc
mov
or
adc
cmp
pop
adc
inc
and
xchg
inc
inc
adc
inc
pop
adc
xchg
xor
xor
daa
xor
push
inc
add
xor
inc
and
incl
inc
jns
adcl
inc
xor
push
push
movsl
xor
inc
int
outsb
add
or
ret
mov
test
ja
js
jp
adc
lret
inc
dec
adc
shlb
sbb
add
neg
sbb
and
add
inc
stos
inc
pop
adc
stos
stos
outsb
sbb
subb
cld
and
adc
and
and
push
push
mov
imul
pop
adc
je
adc
add
and
jns
dec
jne
mov
adc
mov
inc
push
adc
adc
pusha
pop
adc
pop
arpl
call
adc
pop
inc
add
push
jp
and
out
mov
lods
mov
flds
or
mov
inc
push
sbb
pop
mov
shl
inc
das
sbb
mov
mov
movsl
rcrl
push
movb
mov
push
xchg
inc
mov
roll
inc
imul
pusha
pop
and
adc
pusha
std
adc
and
push
adc
push
rorb
hlt
adc
push
push
rorb
inc
push
and
and
inc
aad
push
push
adc
test
and
jns
jmp
and
negb
inc
and
mov
mov
test
je
mov
and
inc
inc
push
dec
ret
adc
pop
adc
rcll
sbbb
and
pusha
adc
roll
push
add
sbb
testb
pop
adc
jmp
mov
push
insl
adc
shl
add
xor
pusha
pusha
popa
or
das
inc
rcll
push
add
aas
jne
sahf
jne
adc
xchg
dec
and
jg
int
sbb
xlat
inc
lea
mov
mov
inc
out
sbb
ljmp
cld
inc
inc
push
add
inc
dec
jne
lea
movb
test
jle
movsbl
andb
fbld
and
movb
dec
test
jg
and
test
mov
inc
or
and
or
and
and
and
mov
inc
daa
xor
bound
daa
adc
or
int
inc
shlb
and
adc
and
adc
ljmp
push
cmp
push
push
inc
mov
adc
shrl
and
adc
mov
adc
inc
stos
and
aad
inc
push
adc
push
and
sub
push
jge
es
add
pusha
mov
mov
es
add
mov
loope
jb
push
add
test
push
jg
cltd
pusha
fcoms
movl
and
loopne
push
rep
push
rclb
mov
ret
dec
mov
cmpsb
adc
xor
cmp
push
setne
inc
mov
inc
arpl
cmp
mov
xchg
call
xchg
jmp
or
pop
ret
pop
adc
jg
push
mov
adc
push
bound
cwtl
jl
call
inc
push
adc
mov
std
loop
mov
movsbl
push
imul
mov
inc
rcll
mov
inc
shl
dec
add
and
aaa
mov
jl
cmp
jg
sub
jmp
cmp
jl
cmp
jg
sub
or
pusha
xor
cmp
mov
jne
mov
push
sbb
adc
mov
adc
adc
inc
mov
inc
dec
popa
adc
lods
and
inc
sbb
decl
je
movsbl
and
inc
sub
pop
inc
dec
adc
inc
jmp
xor
inc
xchg
adc
xor
cwtl
mov
sbb
int
lea
sub
mov
mov
mov
mov
inc
les
lea
cmp
jl
mov
inc
sbb
repz
dec
mov
test
jle
shr
lcall
jne
test
jge
mov
mov
mov
inc
push
mov
sar
adc
test
jl
cmp
mov
jg
mov
test
je
and
sahf
sbb
lds
sub
arpl
pop
mov
pop
sub
adc
and
jmp
cmp
cmp
adc
xchg
and
dec
adc
roll
adc
es
adc
push
lea
cmp
daa
sub
adc
and
jbe
adc
mov
inc
adc
and
pop
push
jo
add
mov
lock
lods
adcb
test
movb
pusha
inc
and
sub
add
lea
inc
push
and
xor
adc
adc
xchg
and
and
inc
adc
pusha
pop
pop
adcb
imul
pop
orl
push
andl
scas
and
push
loopne
inc
mov
addr16
and
jecxz
stos
adc
cmp
adc
push
dec
and
adc
popa
insl
daa
flds
inc
jns
push
sub
pop
sub
cld
fdivs
out
dec
adc
adc
lods
push
and
dec
popa
pusha
arpl
insb
pop
adc
inc
push
popa
das
adc
add
mov
into
sahf
adc
push
push
push
cmp
push
mov
adc
adc
pop
adc
xchg
adc
mov
mov
repnz
inc
mov
adc
ret
popa
pop
pusha
pop
popa
pop
pusha
pop
popa
jo
pop
adc
dec
and
gs
jmp
push
adc
andb
sub
and
inc
outsb
jg
cwtl
or
and
mov
and
push
push
imul
stos
inc
enter
xchg
add
sub
adc
push
sub
push
push
push
andb
inc
lcall
mov
add
xorb
add
add
and
adc
and
inc
pop
pusha
mov
daa
adc
je
add
mov
cmp
not
and
dec
and
popf
adc
fwait
inc
es
dec
inc
and
adc
andl
adc
mov
inc
push
cmp
fbld
or
inc
popa
sub
mov
pop
and
add
and
and
pusha
add
and
es
and
adc
and
cmp
sub
and
and
bound
and
adc
in
and
jmp
mov
stc
lea
rcll
mov
adc
push
inc
sub
loope
and
adc
xchg
and
aaa
sub
xor
pushl
adc
mov
fists
pusha
test
mov
lret
sbb
bound
mov
adc
and
inc
roll
sub
and
xor
cmp
mov
and
and
lods
and
inc
jge
xchg
adc
inc
fadds
mov
and
dec
stos
adc
ss
adc
adc
inc
ja
cld
dec
inc
stc
and
adc
fdivs
outsl
xchg
and
outsb
adc
mov
iret
and
outsb
adc
sub
outsb
and
sub
in
jno
and
aaa
ja
adc
jecxz
and
fstl
xor
and
and
and
mov
jl
push
adc
lock
and
and
and
aas
adc
and
sub
movsb
jnp
adc
sub
adc
and
push
push
and
stos
and
inc
pop
and
ss
sub
inc
fisubs
shrl
aas
and
mov
xor
adc
inc
arpl
adc
lahf
popa
mov
adc
jmp
and
lahf
and
sub
pop
inc
popf
adc
xor
lcall
inc
jmp
push
push
mov
add
mov
and
mov
xor
nop
adc
fbld
dec
enter
or
mov
and
sub
jno
and
and
sub
sbb
cmp
sarb
sub
push
sub
inc
imul
mov
mov
bound
cwtl
rolb
inc
es
and
pop
outsb
and
and
adc
mov
and
jl
mov
cmp
and
push
dec
xchg
and
mov
push
and
cmp
jle
mov
and
xor
sub
and
sar
add
insb
xchg
mov
push
cmp
jle
mov
and
stos
and
xor
add
and
inc
adc
sub
in
adc
and
adc
adc
popa
inc
adc
push
and
mov
daa
or
adc
mulb
push
pop
sub
mov
pop
adc
shrb
lods
add
aas
das
and
and
xchg
arpl
sub
andb
aad
popf
add
dec
mov
mov
lds
inc
arpl
pop
int3
and
inc
popa
adc
loopne
cld
inc
push
scas
and
loop
and
adc
adc
cltd
clc
inc
adc
add
inc
rclb
loop
and
das
pusha
adc
add
and
adc
and
hlt
arpl
and
incl
in
fists
mov
push
out
dec
mov
or
sti
ja
fstpt
lock
push
je
xchg
xchg
and
dec
movsl
sub
and
xchg
adc
xor
and
sub
call
cmp
inc
push
xor
cmpsl
mov
clc
loop
dec
pusha
adc
cmp
xor
xor
repz
andl
and
push
pop
adc
push
lea
and
adc
ljmp
and
mov
sahf
adc
iret
dec
jge
cmpsb
add
dec
jmp
or
pop
jae
and
and
sbb
sbbl
jo
mov
adc
mov
push
and
dec
inc
push
and
adc
pop
imul
mov
and
adc
pusha
jp
out
or
or
popa
or
add
sub
call
je
dec
je
adc
addl
xlat
dec
into
adc
add
jp
call
add
pop
pusha
lods
adc
add
pusha
push
and
gs
sub
or
mov
and
cmp
insb
aas
adc
idivl
out
inc
and
adc
mov
dec
and
xchg
adc
mov
adc
orb
adc
push
dec
push
adc
loope
inc
push
adc
iret
sti
and
lods
and
and
sub
adc
add
aas
add
sbb
adc
aas
add
mov
inc
and
xor
pop
push
pop
and
adc
rclb
and
or
andl
and
xchg
mov
in
lea
xor
sub
add
adc
jg
adc
flds
adc
add
je
and
dec
sbb
or
imul
pushw
jne
lea
cmp
mov
je
mov
mov
insb
inc
adc
ja
adc
jne
and
das
test
and
adc
inc
inc
add
or
fsubs
push
push
pop
je
mov
push
lcall
lods
sub
and
inc
movsl
sub
adc
cmp
push
mov
push
push
adc
dec
push
adc
inc
or
call
adc
and
inc
adc
push
jp
adc
stos
adc
push
push
push
mov
call
and
adc
push
inc
scas
push
jge
mov
movb
adc
cld
out
inc
mov
adc
adc
ret
mov
mov
add
fistl
pop
adc
xchg
adc
popa
and
add
jne
push
inc
sbb
cltd
rolb
sbb
push
mov
call
test
jge
adcb
cltd
loopne
and
adc
adc
xchg
and
and
and
push
mov
movl
cwtl
lea
adc
push
add
mov
inc
adc
aad
sub
and
inc
adc
adc
jne
xor
hlt
push
fildll
adc
adc
mov
mov
rcll
sti
and
jb
and
adc
adc
popa
add
gs
add
rep
mov
and
adc
ja
mov
ja
mov
adc
or
hlt
add
jne
and
loopne
mov
inc
cmc
adc
inc
test
inc
cld
cmp
add
test
and
rcll
aaa
sub
add
jge
and
andb
inc
stc
and
mov
xchg
add
aaa
push
mov
call
sub
add
jg
mov
mov
cmp
push
mov
inc
in
sbb
dec
and
push
in
mov
lea
and
imul
in
das
jmp
testb
cmp
pop
jne
cmp
jecxz
and
adc
mov
inc
pop
adc
and
and
adc
shlb
or
mov
js
lock
adc
popl
adc
dec
adc
incl
adc
cmp
mov
movb
out
in
push
dec
adc
test
and
adc
and
adc
sub
add
adc
lea
push
and
pop
add
mov
push
lea
call
inc
mull
and
loope
adc
popa
xchg
adc
cmp
popa
dec
adc
push
adc
out
and
pop
cmp
mov
mov
sub
adc
das
sub
sbb
dec
call
inc
xchg
adc
cmp
pusha
add
add
das
pusha
add
loopne
pusha
add
lods
lret
and
sub
pop
lea
mov
leave
test
adc
popa
xchg
adc
adc
addb
mov
inc
sub
jp
or
loop
adc
addb
push
das
addl
add
push
stc
xor
sub
adc
das
in
cmp
cmc
lea
lea
rclb
rclb
or
or
repz
jb
adc
je
mov
in
and
adc
das
test
xorb
or
pusha
pop
adc
loopne
inc
mov
das
mov
out
adc
das
push
inc
fwait
adc
jg
mov
pop
adc
pop
ss
sbb
repz
inc
sbb
adc
pusha
ss
and
mov
dec
push
gs
call
jge
xor
push
in
cmp
je
mov
and
jmp
scas
adc
jno
adc
mov
sbb
or
sbb
add
dec
xor
jmp
xor
xor
push
push
mov
add
outsl
pop
adc
push
mov
and
cmp
pusha
test
shrb
mov
add
dec
jbe
jmp
mov
popa
adc
jmp
mov
adc
inc
adc
lea
sub
adc
inc
and
pop
or
push
cmp
adc
scas
sub
cmpl
adc
xor
and
sbb
imul
add
std
je
push
inc
out
aas
dec
fwait
and
adc
or
adc
adc
lahf
mov
or
sbb
std
mov
jne
pop
mov
add
and
adc
or
nop
sub
mov
mov
mov
sbb
add
and
push
test
outsl
hlt
adc
sub
sbb
inc
jbe
sbb
cmp
je
dec
mov
jmp
and
inc
pop
mov
icebp
add
mov
es
pop
pusha
jb
jg
and
hlt
sub
and
mov
adc
xor
mov
shl
loopne
and
adc
xchg
adc
inc
mov
adc
inc
and
insl
mov
adc
push
adc
sub
jmp
test
inc
adc
xor
add
mov
adc
cmp
and
insl
adc
loope
adc
jnp
jno
lcall
adc
cmp
and
adc
test
push
in
adc
jnp
movl
add
jnp
push
and
sub
adc
jmp
adcb
or
adc
das
icebp
and
cmp
adc
ss
xor
movsb
inc
dec
sbb
mov
jne
cmp
je
daa
pop
add
jge
cmp
add
xor
sbb
pop
mov
lea
mov
addr16
adc
shrb
es
and
test
add
adc
and
and
inc
sub
fisttpl
inc
sub
cmp
pop
add
inc
pop
mov
fildll
jge
les
add
and
xor
xor
and
inc
sbb
je
lea
test
aam
test
push
and
jmp
xchg
mov
iret
inc
mov
ret
add
adc
inc
inc
adcl
and
addl
insl
in
jno
adc
inc
push
adc
inc
sbb
lds
sbbl
and
xor
lea
push
out
mov
addb
addb
test
inc
dec
adc
test
adc
sub
adc
cmp
and
scas
push
sarl
pop
das
jl
adc
outsb
daa
xor
adc
xor
andl
mov
mov
xor
adc
inc
sbb
and
mov
lds
popl
pusha
jmp
popl
test
daa
mov
sub
sub
add
dec
or
push
inc
imull
loop
sub
and
cmpsl
cmpl
es
xor
ds
add
hlt
imul
sub
add
mov
jo
cmpb
or
jp
inc
nop
adc
add
subl
int3
and
inc
insb
es
mov
adc
std
mov
pop
les
pop
pusha
popa
jg
js
das
add
imul
pop
sub
jl
pop
xchg
adc
mov
pop
jo
add
cmovbe
add
inc
mov
adc
data16
adc
je
inc
add
adc
inc
sub
push
loopne
pusha
adc
adc
movw
adc
pusha
sub
jne
insl
push
adc
jb,pt
adc
dec
or
cli
insb
dec
ret
adc
add
iret
inc
notb
std
aas
stos
shl
sub
and
inc
lds
mov
and
and
cmpw
jne
mov
leave
dec
mov
adc
xchg
hlt
and
push
xchg
adc
jg
add
adc
bound
mov
adc
adc
or
fnstsw
adc
sbb
jmp
adc
or
jl
or
je
and
jecxz
adc
cmpl
xchg
cmp
adc
sub
add
adc
ss
cld
hlt
mov
mov
fs
inc
pop
adc
je
sub
shlb
jb
and
pusha
adc
outsb
faddl
rcrb
add
adc
daa
insb
dec
sub
out
xor
cmp
pushf
add
jbe
repnz
sbb
sbb
sub
and
and
and
mov
adc
cmp
inc
icebp
dec
mov
loopne
lcall
xorb
and
repz
xor
sub
and
xor
adcb
sub
sub
push
pop
call
jo
shrb
popa
sahf
inc
sub
push
lret
outsl
add
clc
daa
outsl
add
mov
adc
pusha
jbe
int3
adc
push
push
call
sub
jecxz
inc
and
xor
push
or
xchg
inc
out
adc
sub
and
mov
push
daa
ds
and
movsl
sub
add
push
inc
adcb
sub
add
mov
and
push
adc
and
adc
lea
pop
or
js
mov
and
aas
and
adc
imul
xor
pop
xor
add
and
adc
push
xor
jg
outsl
and
movsb
addr16
and
adc
insb
inc
add
adc
and
push
inc
or
sbb
xor
inc
sub
pushaw
adc
sbb
imul
lds
adc
add
jmp
or
icebp
jg
adc
cmp
adc
es
enter
lar
sub
adc
call
pop
and
mov
test
and
ja
xor
push
jp
adc
and
push
jae
and
test
rorl
popa
dec
pusha
lcall
mov
inc
adc
jge
and
xor
es
jno
ficoms
insb
rolb
js
pop
out
sbb
sub
add
pop
sub
sbb
and
add
inc
jno
xor
adc
sub
sbb
inc
fldl
jbe
sub
adc
rdmsr
pusha
inc
adc
lea
and
jg
dec
subb
adcb
add
cmp
ret
or
rcll
fstp
bound
and
xchg
inc
sbb
or
bound
mov
pop
cmp
mov
ja
add
or
and
xchg
adc
and
adc
jmp
and
mov
cli
cwtl
sub
and
inc
sbb
jae
adc
sub
adc
adc
and
mov
pop
cmp
adc
lcall
mov
push
adc
ret
sub
add
imul
add
mov
adc
sub
and
loopne
push
push
cmpl
jle
mov
call
push
sti
adc
add
and
adc
outsl
sub
cmp
ja
cmp
add
jmp
and
and
and
or
push
daa
add
adc
and
add
mov
and
test
and
pusha
or
xor
iret
jle
je
adc
jle
and
bound
add
adc
pushf
fwait
inc
sbb
mov
xlat
inc
and
outsl
adc
mov
jl
mov
and
sbb
adc
ret
inc
adc
stos
daa
rorb
sub
adc
das
sub
xor
dec
je
pop
into
adc
inc
and
pop
arpl
cmp
mov
insb
and
dec
sub
dec
inc
or
xchg
adc
push
mov
inc
adcb
mov
and
divb
mov
movl
dec
adc
orb
cmp
pop
cmpsl
and
cmpsb
adc
inc
add
jnp
adc
iret
jae
push
lret
mov
stos
fcoml
lock
aaa
pop
movb
pop
pop
pop
ret
imul
in
and
movsl
dec
lods
push
push
add
mov
and
and
pop
stos
pusha
leave
and
sub
cmp
ret
xor
and
push
inc
mov
pusha
or
iret
add
push
mov
pusha
or
add
outsl
add
pop
sub
and
cwtl
das
pop
add
pop
and
aas
adc
or
jle
and
and
inc
sbb
or
pop
sub
je
daa
and
sub
or
mov
adc
add
and
cmpsb
adc
mov
mov
adc
sub
and
xor
mov
mov
mov
shl
or
inc
adc
push
cli
add
or
mov
lea
cmp
jb
and
mov
jp
xchg
dec
push
mov
mov
and
inc
inc
and
inc
pop
and
and
mov
decl
cmp
rorb
iret
mov
or
adc
add
pop
adc
push
dec
out
add
call
or
add
mov
and
lret
and
mov
mov
lea
jmp
shl
or
add
pop
lea
sbb
loopne
call
and
add
mov
fistl
pushf
xchg
and
rol
ljmp
add
mov
and
not
and
or
and
sbb
fisttpll
mov
out
shr
or
add
jo
and
pop
adc
stc
and
adc
inc
pop
adc
and
scas
add
scas
cmc
mov
shr
shl
or
add
mov
and
not
and
or
and
adc
lds
adc
movb
faddp
mov
rclb
jle
out
add
adc
add
mov
adc
xchg
and
xor
adc
shll
les
shll
ret
sbb
aad
pushf
adc
xchg
inc
std
inc
rclb
sbbb
shll
lea
shlb
rolb
fcoms
aad
popf
add
mov
imul
xlat
add
mov
inc
icebp
inc
enter
inc
sub
inc
add
pusha
rclb
inc
mov
adc
loopne
inc
rclb
mov
mov
adc
and
add
dec
add
mov
inc
les
mov
jmp
adc
faddp
dec
loope
adc
and
inc
add
dec
inc
test
pushf
or
lret
shl
popf
adc
mov
and
mov
iret
sbbb
in
popa
dec
adc
inc
mov
and
nop
imul
pop
ffreep
lods
inc
icebp
adc
inc
icebp
adc
pusha
enter
pop
and
add
inc
rclb
jno
std
pusha
rclb
shl
inc
rolb
not
mov
and
mov
and
insb
mov
and
add
mov
cmpsb
pusha
les
xadd
adc
ljmp
and
or
pop
inc
enter
adc
fisttps
mov
mov
shl
shr
inc
sbb
ljmp
and
dec
adc
pusha
in
push
sbb
push
testb
loope
or
inc
mov
fs
and
and
loope
inc
mov
shlb
adc
ffreep
push
add
not
mov
call
mov
dec
inc
mov
mov
es
mov
push
or
mov
add
not
inc
mov
popa
adcl
adc
pop
mov
out
sti
and
shr
cmc
or
bound
pop
loop
adc
das
and
loopne
fisttpl
ret
add
data16
adc
arpl
adc
shlb
movl
jmp
push
adc
jno
adc
or
les
inc
push
sbb
add
not
mov
out
and
and
xchg
adc
roll
adc
and
pusha
int3
adc
ffreep
xor
jnp
les
xor
fiaddl
pop
mov
out
fsubs
adc
out
inc
xchg
mov
pusha
enter
fimull
sti
inc
outsb
adc
pusha
je
pushf
cmp
int
and
adc
sbb
jecxz
inc
sbb
flds
cmp
pop
inc
ss
xorb
cmpl
pop
shl
or
mov
add
bound
mov
ret
sub
mov
movsl
pop
mov
xchg
pusha
rclb
push
faddp
ret
les
inc
or
inc
movsl
pop
xchg
sbb
adc
inc
mov
inc
adc
adc
ljmp
enter
push
mov
jmp
shr
movsl
adc
inc
test
inc
mov
sub
adc
xorb
add
cld
popa
adc
shl
inc
std
adc
add
add
adc
popa
int3
pusha
movsl
pop
test
flds
outsl
addr16
pusha
rclb
adc
loopne
mov
les
push
or
inc
movsl
adc
sub
fs
and
adc
mov
lret
xor
xor
add
mov
cmp
incl
adc
add
dec
adc
fdivs
inc
out
pop
inc
jmp
xor
shr
shl
inc
movsb
push
roll
inc
bound
adc
popa
popf
insl
mov
shr
shl
or
mov
add
xor
les
shlb
and
test
or
in
mov
shl
inc
jae
int
sbb
xlat
xor
subl
inc
ljmp
faddp
dec
cmpb
ret
inc
sahf
arpl
sbb
mov
shr
shl
or
and
rcll
loop
mov
punpcklbw
testb
out
or
inc
mov
std
xor
mov
and
jo
mov
pop
shr
inc
mov
sbb
xor
add
lea
jmp
adc
mov
ret
add
rolb
xlat
lea
mov
shr
shl
cmpl
sub
clc
mov
sbbb
aad
xchg
adc
adc
cld
add
fbstp
rorl
and
lea
mov
pusha
ja
in
or
ja
push
adc
push
adc
rcl
flds
sbb
sbb
loopne
or
mov
add
xor
rorl
pop
lea
popa
aam
adc
aam
push
sbb
mov
ja
loopne
inc
adc
inc
out
filds
sbb
push
xor
push
addb
push
adc
lods
les
adc
popa
repnz
nop
adcl
sub
xor
pop
adc
hlt
arpl
ret
inc
pop
adc
adc
shll
pusha
out
not
inc
mov
xchg
ljmp
inc
bound
or
push
jl
pusha
add
or
and
data16
inc
adc
and
shl
inc
push
and
adc
cli
push
and
pusha
mov
call
add
xor
inc
pop
adc
gs
jge
adc
and
adc
sub
and
push
push
and
ss
push
and
sub
xor
lds
and
mov
push
push
and
sub
fwait
pop
mov
xchg
and
push
push
and
sub
je
adc
sbb
inc
inc
fwait
adc
push
and
scas
xorb
je
jp
and
push
push
push
adc
je
xor
je
and
and
cmp
push
push
and
sub
je
adc
and
mov
adc
push
daa
je
and
and
jle
imull
and
je
cs
mov
and
mov
push
push
and
xor
je
and
and
rcl
sub
pusha
je
or
mov
sub
inc
cwtl
xchg
inc
inc
push
push
push
and
popa
xlat
sub
adc
adc
jle
divb
dec
xchg
pop
add
mov
mov
inc
inc
adc
mov
and
mov
add
mov
and
and
push
sub
adc
inc
dec
jne
adc
adcl
rorb
sbb
adc
stos
mov
mov
movl
movl
movl
movl
cltd
and
subb
inc
and
sti
sub
or
push
adc
pop
mov
shr
fisttpll
add
adc
push
bound
fnstenv
shlb
push
dec
push
sub
loop
inc
inc
and
int3
adc
push
movb
mov
cmp
shlb
pushf
inc
dec
adc
ja
and
cmp
push
push
or
or
xchg
inc
or
int3
xor
and
push
jae
xor
pop
jmp
shll
in
and
scas
mov
dec
insb
adc
inc
and
clc
insb
push
inc
cmp
notl
cmp
movsb
jl
and
and
psubb
imul
mov
push
mov
lea
mov
pop
lret
jge
loopne
cmp
push
mov
jae
incl
mov
mov
mov
shr
sub
int
add
mov
jb
and
jl
add
out
std
mov
cs
pop
inc
and
mov
lea
and
jae
pop
push
adc
lret
lea
insb
lret
sbb
dec
add
add
cmp
jb
popa
adc
shlb
mov
adc
iret
lea
es
add
decb
mov
sub
push
sbb
dec
adc
pop
lcall
test
je
mov
mov
inc
fcoml
push
mov
cmpb
dec
lret
mov
mov
inc
ljmp
add
adc
js
pusha
adc
mov
mov
sbb
pop
sub
pop
mov
and
adcl
mov
mov
fmuls
jo
mov
in
add
cmp
jae
dec
jg
aaa
adc
push
ficoml
ja
and
or
into
and
cmp
leave
and
dec
and
fmull
adc
mov
add
lea
je
add
adc
sub
mov
test
mov
jl
mov
add
inc
and
shrb
shrl
pop
adc
mov
fs
mov
inc
or
push
add
mov
pusha
pop
and
orb
adc
shrl
cmp
jb
leave
inc
dec
adc
add
outsl
cwtl
adc
ret
dec
adc
inc
lea
push
mov
dec
adc
pusha
dec
adc
insl
rcll
jmp
inc
dec
sub
add
xor
cmp
sete
push
inc
arpl
sub
and
add
jne
xor
pusha
das
sbb
and
pop
ret
pop
xchg
push
sub
hlt
imul
incb
aam
es
iret
aad
arpl
adc
push
mov
mov
mov
sub
sub
jne
xchg
loope
pop
inc
xchg
adc
mov
inc
cltd
push
or
jne
and
imul
jmp
mov
lea
cmp
jb
mov
mov
mov
lea
inc
or
mov
outsl
sbb
push
inc
push
sub
sub
mov
adc
mov
pop
dec
cmp
lds
jno
jmp
jge
adc
sub
pusha
in
sbb
jne
mov
or
sbbb
mov
add
mov
pusha
inc
stos
sbb
push
xor
into
add
and
xchg
std
push
das
inc
adc
mov
mov
adc
mov
xchg
lea
inc
add
mov
mov
shl
xor
mov
xor
mov
and
inc
adc
cmp
or
and
lret
insb
sub
mov
out
and
mov
inc
add
fdivrs
flds
adc
test
jne
adcl
adc
adc
inc
cmp
adc
dec
push
ljmp
std
pop
jg
xchg
adc
inc
xor
add
testb
add
incl
sub
inc
or
lret
add
pop
mov
push
icebp
pushf
xchg
sub
adc
push
and
adc
mov
daa
sub
add
adcl
and
pop
adc
clc
add
and
mov
addl
adc
and
pop
int3
adc
inc
mov
es
sub
dec
cmp
ret
inc
or
cmp
inc
mov
mov
pop
pop
adc
ret
xlat
ret
ja
cmpl
or
adc
push
pop
and
push
adc
inc
jae
jb
mov
adc
mov
inc
mov
push
xchg
xchg
mov
adc
daa
adc
or
shlb
orb
push
jo
sbbl
or
dec
add
test
cmp
lea
and
adc
addr16
adc
mov
inc
hlt
nop
or
inc
adc
ret
adc
adcb
pusha
pop
sbbb
xor
cmp
and
js
xchg
rorl
enter
dec
insb
ja
cmp
jb
dec
pusha
shll
adc
inc
xor
mov
lock
adc
dec
cmp
movl
dec
sub
inc
cmp
roll
adc
mov
inc
inc
notb
mov
inc
pushaw
dec
adc
inc
pop
adc
push
and
adc
dec
rcll
rorb
adc
fdivl
add
andl
inc
inc
jmp
rolb
mov
mov
sahf
or
movsl
cmp
adc
adc
push
xchg
adc
test
adc
incw
addl
cmp
punpckhwd
xchg
ret
xor
dec
insb
incl
inc
dec
adc
lcall
roll
xchg
outsb
adc
push
ds
add
je
inc
out
push
mov
cmp
sub
add
adc
incb
test
inc
loopne
pop
pop
and
imul
pop
fs
outsl
iret
sbb
pop
test
adc
push
outsl
and
arpl
mov
mov
mov
mov
mov
shll
adc
xchg
adc
add
cmp
and
adc
add
adc
jae
and
sub
lea
dec
adc
adc
mov
ljmp
add
dec
push
adc
and
and
adc
mov
adc
cmp
jne
mov
cmp
jne
mov
cmp
jne
inc
add
inc
inc
or
dec
adc
xchg
dec
adc
cmp
jne
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
cmp
jb
mov
lea
sub
add
aad
mov
mov
inc
negb
ljmp
mov
inc
inc
adc
sbb
push
sub
inc
cmp
xor
mov
inc
xor
sbb
lock
pop
aam
adc
sbb
xor
push
adc
adc
adc
and
adc
mov
movsl
add
stos
mov
test
fisttpl
test
test
adc
xchg
sub
add
dec
shl
mov
xor
mov
arpl
add
movsl
add
mov
jge
push
jo
inc
pop
mov
and
movsb
push
js
lret
jae
sub
add
cmp
add
add
adc
je
and
mov
adc
sub
cmp
add
adc
adc
inc
pop
ja
arpl
mov
insb
add
inc
ja
sub
mov
dec
test
sbb
push
clc
adc
sbb
add
clc
add
inc
in
xor
add
inc
pop
mov
dec
xor
cmp
inc
adc
xchg
ret
sub
add
add
dec
adc
mov
inc
repnz
fs
adc
aad
rcrl
bound
jo
lods
inc
jb
inc
and
fcoml
test
inc
dec
inc
bound
je
push
push
test
movsb
sub
sti
les
and
insb
adc
mov
sbb
push
sbb
inc
mov
push
out
pusha
adc
test
add
and
xor
add
test
adc
sub
adc
jne
add
adc
adc
inc
dec
inc
cmp
pusha
lret
jecxz
mov
inc
insb
inc
dec
inc
sbb
mov
adc
mov
es
add
je
and
adc
mov
or
mov
inc
rclb
push
pusha
int3
adc
repnz
insl
loopne
inc
and
ja
adc
and
lea
adc
add
sahf
add
inc
das
inc
fwait
adc
and
inc
pushf
adc
test
lcall
and
and
pop
xchg
and
and
iret
and
dec
push
test
adc
xchg
and
adc
inc
and
xchg
inc
push
adc
cmp
adc
jb
mov
fmuls
adc
mov
mov
add
shl
and
dec
adc
push
add
and
icebp
add
mov
or
repz
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
adc
pusha
or
test
jno
adc
pushf
sbb
stc
dec
jne
mov
xor
mov
div
mov
mov
inc
xor
fisttpl
and
adc
adc
and
jp
adc
push
and
popa
mov
and
lea
push
sub
add
je
inc
adc
adc
adc
adc
adc
adc
adc
orb
movsb
and
adc
cmp
jle
jo
pop
xlat
adc
shl
dec
scas
adc
or
jo
mov
sbb
inc
or
mov
test
mov
adc
inc
mov
mov
dec
loope
mov
mov
push
aas
sbb
into
pop
shr
add
mov
mov
push
pusha
popa
adc
loop
or
add
adc
push
and
adc
das
and
mov
rcrb
test
jle
cmpb
jne
fistl
std
das
mov
cmp
fidivrl
pusha
unpcklps
scas
lea
vmovss
adc
scas
pusha
add
xchg
popa
or
mov
add
add
shr
shr
rcrl
jmp
lea
inc
aas
adc
ja
mov
je
adc
push
adcl
fcoms
adc
adc
mov
inc
pusha
and
push
lea
jle
mov
shl
mov
or
adc
sahf
mov
or
pop
or
inc
push
bound
adc
adc
mov
mov
shll
lret
call
adcb
mov
shl
or
jge
push
push
cmpsb
inc
adc
iret
dec
js
popf
loopne
adc
inc
pop
fimull
or
adc
mov
inc
or
adc
inc
push
adc
inc
jbe
sahf
orb
adc
lret
popa
ret
xrelease
sbb
popl
orb
popl
adc
adc
push
mov
inc
and
fisttps
lea
stos
adc
or
sbb
and
pusha
or
mov
lret
adc
mov
mov
or
mov
mov
xor
in
adc
enter
adc
xchg
cmp
ds
cmpw
je
mov
push
inc
mov
adc
stos
mov
imul
push
inc
cltd
adc
test
push
and
adc
push
movw
inc
dec
adc
and
xor
jge
cmp
jge
inc
mov
mov
adcl
adc
addb
adc
fildl
and
add
sub
mov
adc
mov
and
mov
sbb
sar
cmp
jl
push
mov
int3
adc
adc
jge
imul
push
xor
mov
lret
mov
push
mov
addb
xchg
popa
adc
mov
adc
ret
adc
mov
pusha
or
dec
mov
mov
adcb
add
paddsw
sbb
mov
mov
mov
pusha
push
adc
shll
xor
jmp
test
dec
adc
adc
rolb
mov
adc
mov
inc
add
lahf
add
mov
out
and
pop
add
lcall
fsts
lea
push
mov
dec
mov
cmp
push
mov
push
and
adc
add
push
and
cmpsl
adc
and
inc
xchg
and
shrb
dec
and
andl
mov
or
cmp
and
and
dec
popf
adc
xor
mov
pusha
jns
mov
mov
cmp
jb
jne
mov
sub
add
xchg
adc
sub
mov
sub
das
jne
mov
xorb
cmp
jbe
and
shl
mov
adc
lret
and
sub
inc
notb
es
movups
adc
imul
and
loop
adc
add
sbb
xor
mov
adc
push
adc
push
pusha
adc
rcrl
xor
inc
and
adc
stos
mov
mov
into
adc
mov
cmp
lea
test
outsl
adc
movb
cmpsl
cmp
sbb
cs
jge
dec
inc
sbb
mov
mov
mov
push
mov
lds
and
sub
lds
adc
jl
push
inc
pop
adc
iret
jg
and
dec
fwait
adc
mov
xor
cmp
jl
mov
sub
and
dec
mov
add
and
scas
movb
test
and
and
push
adc
lea
mov
and
adc
adc
adcb
add
in
and
test
imul
fists
cmpl
addb
jne
sub
arpl
cmp
je
jmpw
test
inc
pop
adc
inc
adc
push
adc
out
add
in
mov
je
lea
pusha
fwait
and
jb
sub
je
lea
dec
cld
dec
sub
jg
adc
dec
mov
adc
lea
pusha
xor
xchg
add
and
arpl
loopne
mov
scas
call
inc
ficomps
add
mov
js
insl
cltd
adc
dec
xchg
test
adc
in
inc
nop
pusha
jge
jne
mov
arpl
adc
and
and
sbb
and
push
lea
sub
push
mov
mov
or
add
clc
shl
mov
push
jnp
inc
jne
pusha
adc
fsts
lea
rcll
dec
add
adc
mov
xchg
adc
mov
inc
push
mov
push
adcb
popl
sbb
push
add
dec
jne
and
data16
adc
lea
adc
inc
cmpsb
data16
lea
out
lea
and
xlat
adc
lods
adc
nop
cld
sub
adc
popf
push
adc
dec
dec
nop
adc
movsl
jg
lea
push
push
orb
fsubs
jg
pop
push
xor
push
mov
and
mov
mov
adc
xor
mov
jne
mov
mov
pop
and
test
movw
jl
inc
push
mov
push
push
and
popa
adc
mov
dec
pop
sbb
je
cmp
jge
add
inc
sub
je
cmp
adc
aad
adc
incw
adc
or
adc
inc
or
mov
and
leave
jne
addb
jmp
dec
push
or
and
mov
stos
add
adc
pop
adc
test
cs
xchg
daa
aas
pop
and
xchg
jle
add
mov
or
or
xchg
or
adc
call
mov
test
adc
inc
push
lds
mov
xchg
or
pop
sbbb
adc
and
inc
add
addb
out
sub
adc
addb
push
adc
inc
cld
jmp
dec
mov
jle
xchg
or
cmp
int3
xor
mov
push
dec
adc
or
push
nop
adc
test
sub
adc
xor
pop
sub
imul
xchg
xchg
adc
test
std
jl
mov
nop
adc
mov
dec
mov
add
jl
sub
add
lahf
adc
pop
push
adc
fistl
arpl
mov
mov
xchg
inc
js
mov
add
push
inc
and
jle
sbb
outsb
and
jmp
fildl
mov
cmp
arpl
mov
jge
cmp
je
cmp
jge
and
test
fistl
mov
cmp
jle
pusha
xchg
xchg
test
jp
mov
push
cmpsl
adc
adcl
sbbl
adc
inc
or
mov
mov
adc
js
mov
pop
insb
mov
mov
iret
dec
icebp
int3
test
lock
adc
sbb
mov
shl
shlb
into
lods
mov
adc
test
imul
push
adc
jb
dec
out
adc
test
fsubs
add
mov
adc
adc
lahf
adc
sahf
add
sbb
sub
popf
add
lcall
std
into
xchg
add
xchg
push
adc
xor
repnz
xchg
rorb
push
adc
pusha
adc
jg
push
add
mov
loope
cmp
add
ss
add
or
iret
mov
push
add
add
adc
out
add
adc
pop
add
add
adc
ret
adc
adc
sarb
and
adc
es
inc
jecxz
jmp
jecxz
es
and
inc
or
adc
aaa
adc
loop
cmpsl
jmp
loope
and
adc
inc
mov
mov
adc
push
push
and
out
jo
mov
adc
adc
nop
je
pop
mov
inc
test
mov
and
mov
test
dec
test
and
adc
cmp
jle
popa
leave
adc
xchg
add
das
sbb
mov
das
add
adc
inc
mov
inc
mov
data16
inc
xor
inc
mov
cmp
mov
cs
dec
inc
adc
adc
iret
adcb
adc
xor
into
inc
adc
inc
sbb
mov
insb
mov
cmp
jle
fadds
popf
and
mov
mov
mov
jo
sbbb
mov
loopne
pop
adc
loope
adc
pop
adc
jmp
mov
push
inc
cmpsb
adc
loopne
pop
lret
adc
mov
adc
and
jo
mov
in
test
or
xor
les
dec
add
xchg
and
popf
or
add
mov
cmp
jle
push
nop
adc
nop
add
scas
add
or
adc
ret
or
jmp
es
add
xchg
adc
jmp
enter
push
fists
lahf
js
sbb
or
mov
pusha
push
cltd
cwtl
sub
ret
mov
inc
clc
adc
sub
dec
lahf
adc
mov
bound
fiaddl
cmp
add
popa
imul
andb
les
adc
int
fldenv
push
mov
or
jl
pop
mov
pop
adc
inc
mov
pop
mov
cmp
add
fs
loopne
push
xor
add
lea
shr
mov
test
push
and
and
arpl
cmp
jb
and
add
orl
adc
xor
add
cmp
adc
mov
pop
mov
inc
add
fcomip
inc
and
rorb
xchg
jbe
pop
add
dec
jne
push
lea
mov
sbb
xor
mov
adc
adc
std
inc
sbb
pop
adc
sbb
mov
pusha
inc
and
add
add
dec
jne
shr
cmp
pop
setbe
mov
sub
xchg
and
jecxz
add
pop
dec
add
and
or
shr
test
js
jg
shr
mov
xchg
movsb
dec
adc
cli
or
inc
cmp
add
jo
addl
inc
xor
xor
adc
adc
pop
cmc
adc
jle
and
es
add
xor
pusha
inc
adc
sub
and
adc
and
and
adcl
xchg
jno
adc
xchg
adc
jp
sub
adc
int3
inc
push
jle
mov
inc
not
int3
aad
jle
mov
not
xor
inc
mov
push
and
in
xchg
adc
inc
and
rorb
shlb
dec
and
inc
adc
push
mov
mov
push
movsl
adc
dec
push
movsb
adc
es
cltd
inc
add
adc
sbb
pop
dec
adc
lea
and
add
push
mov
call
mov
mov
push
and
xor
and
pusha
adc
loop
push
and
adc
mov
and
lods
inc
adc
call
and
push
and
sbb
cmp
je
push
jmp
add
dec
in
push
rorb
pop
or
decl
std
xor
jo
cmp
jg
mov
lea
and
adc
enter
dec
dec
adc
sub
dec
inc
rclb
add
push
and
sbb
in
ret
or
rorl
adc
pushf
adc
push
inc
and
jl
adc
mov
adc
xchg
adc
inc
stos
daa
in
adc
jmp
inc
sbb
lea
mov
push
enter
cmpw
je
pusha
es
adc
add
and
push
inc
adc
fs
pusha
pop
pusha
and
add
sub
add
lcall
int3
pusha
xor
push
sub
rclb
in
mov
push
mov
pusha
and
dec
daa
sub
pusha
cmp
mov
std
loope
and
lcall
push
adc
sub
and
and
cmp
std
xor
adc
jg
and
xor
and
adc
lahf
sub
mov
jp
and
lcall
shll
je
inc
and
adc
push
jb
and
jnp
pop
adc
add
repnz
sbb
outsl
sub
lahf
inc
inc
in
jne
add
mov
push
push
jno
or
call
and
dec
xchg
pop
adc
and
aas
and
sub
clc
cmp
je
mov
inc
adc
mov
inc
cs
add
inc
mov
aas
mov
cs
add
sbb
mov
dec
fsubl
or
adc
xchg
fists
fistpl
lea
jge
push
mov
les
mov
add
outsl
adc
fcomp
adc
and
push
inc
sub
and
loop
mov
mov
je
addb
push
mov
push
push
jmp
add
push
and
push
adc
push
jmp
xor
and
adc
sub
inc
sbb
in
inc
loopne
mov
adc
sub
add
inc
adc
xor
es
daa
fildll
mov
and
add
add
incl
and
incl
adc
or
inc
sbb
cmp
add
or
arpl
or
enter
or
and
adc
and
pop
aad
push
and
test
adc
cmp
and
lret
pop
push
inc
and
inc
ret
push
adc
and
ret
pop
adc
sbb
jecxz
aas
daa
lldt
sahf
and
das
popl
and
adc
notb
fiadds
adc
test
arpl
push
jge
cmp
je
lret
mov
pusha
mov
and
adc
inc
or
test
ret
testl
push
jae
es
adc
cmp
and
dec
adc
push
inc
cmp
inc
outsl
mov
mov
pusha
and
sbb
je
mov
push
push
and
pop
push
or
or
push
push
and
ljmp
mov
and
adc
push
push
and
aaa
mov
inc
call
adc
mov
inc
pop
cmp
jl
fwait
sahf
inc
ret
push
outsl
adc
mov
add
pop
add
and
inc
ljmp
push
jo
lahf
jl
popl
arpl
and
adc
inc
lea
je
mov
mov
mov
loope
adc
mov
roll
push
or
fadds
sub
and
mov
add
lahf
add
lahf
cwtl
in
lahf
and
add
add
xor
add
add
cwtl
cmp
add
arpl
lahf
add
push
pusha
lahf
adc
mov
enter
bound
mov
lods
add
dec
or
fnstsw
outsl
adc
cmp
lahf
add
sub
inc
lahf
adc
shlb
sti
add
pop
mov
mov
fadds
das
jg
adc
adc
loopne
adc
add
jg
adc
sub
adc
add
jg
adc
call
add
xor
add
fldt
jg
adc
popl
jg,pn
adc
add
incl
loopne
arpl
inc
arpl
je
and
popa
and
cltd
xor
push
adc
pop
aas
dec
fwait
and
jl
adc
adc
and
out
add
iret
xor
add
incl
imul
gs
and
inc
and
add
push
lea
cmpsl
xchg
adc
mov
or
inc
or
xchg
lahf
adc
jno
pop
mov
mov
and
test
inc
adc
cwtl
adc
sbbb
iret
es
inc
add
test
add
adc
or
adc
inc
fnsave
adc
bound
sub
lret
mull
or
xchg
dec
and
scas
add
das
add
outsl
xor
out
daa
das
add
fcmovnu
and
xor
std
dec
jg
inc
pop
xchg
and
add
pop
sub
add
pop
mov
std
dec
das
and
inc
and
lds
das
add
sub
das
add
sbb
xor
fcmovnu
adc
dec
and
shll
adc
cmp
add
dec
iret
add
add
dec
out
pusha
daa
daa
pop
add
outsl
add
push
mov
lgdtl
push
lahf
popa
or
dec
sub
adc
filds
adc
filds
adc
test
mov
and
mov
adc
inc
ret
mov
mov
dec
cwtl
popa
push
mov
sbbb
loopne
rorl
stc
push
ja
and
sub
jl
dec
add
and
fs
push
and
lret
jmp
add
jmp
inc
jmp
add
mov
mov
lea
lea
cmp
jg
mov
and
add
jp
xchg
adc
pop
cmp
add
or
clc
fisttps
out
add
repnz
add
in
inc
add
cmc
rolb
add
add
add
add
add
add
inc
add
xchg
add
mov
and
rclb
cmp
jne
mov
sub
push
and
fildl
add
pop
mov
mov
mov
cmp
jne
mov
sub
adc
sub
sub
sub
sub
jae
xor
push
add
push
inc
sbb
dec
adc
daa
pop
add
push
push
adc
inc
lahf
push
mov
adc
add
dec
inc
or
and
or
mov
and
sub
add
adc
inc
or
mov
and
xor
and
cmp
inc
enter
cmp
or
mov
and
inc
andb
inc
inc
add
adc
or
mov
and
dec
andb
push
inc
add
adc
add
sbb
and
pop
andb
pop
inc
add
adc
or
mov
and
andb
push
adc
pusha
sbb
inc
and
jo
and
je
scas
inc
ja
movl
in
pusha
and
jl
and
andb
and
test
pusha
sbb
and
mov
add
adc
add
sbb
and
xchg
andb
cwtl
pusha
scas
andb
pushf
inc
or
mov
and
mov
pusha
mov
or
mov
and
lods
andb
mov
add
adc
add
sbb
and
mov
pusha
inc
dec
xchg
movl
cwtl
pusha
and
les
and
adc
add
sbb
inc
mov
aam
and
pusha
and
fadds
adc
add
dec
adc
dec
adc
andb
loopne
add
adc
inc
or
mov
and
call
add
push
andb
lock
or
mov
and
hlt
addb
inc
add
adc
inc
or
mov
and
add
adc
add
addb
pusha
sbb
and
or
and
adc
adc
sti
adc
add
sbb
fwait
pusha
and
sbb
add
adc
inc
or
ret
and
and
and
sub
adc
andb
sub
or
mov
and
xor
add
and
cmp
pusha
sbb
or
and
inc
inc
add
adc
pusha
sbb
and
dec
andb
dec
pusha
roll
or
mov
std
xchg
jg
andb
pop
inc
add
adc
adc
std
xchg
cwtl
and
adc
pusha
inc
adc
and
fs
cmp
or
ret
and
insb
andb
jo
add
inc
jmp
or
mov
and
js
and
jl
add
adc
ret
cmp
test
mov
les
aas
add
rorb
push
mov
shl
add
movsbl
lea
add
mov
inc
test
jne
cld
imul
aas
ret
and
adcb
mov
cmp
mov
mov
mov
mov
cmp
jne
test
je
mov
inc
or
pop
add
pop
rcrb
add
test
jne
xor
jmp
sbb
sbb
inc
repnz
cmp
mov
ret
mov
jecxz
sub
sub
mulb
into
mov
add
daa
das
add
adc
mov
and
bound
adc
lea
push
mov
mov
test
inc
push
inc
sub
and
push
ret
sub
lds
mov
mov
add
jl
and
mov
and
cmp
push
and
dec
adc
inc
das
aaa
packssdw
shrb
mov
pusha
jp
mov
data16
and
sub
lds
inc
punpcklbw
and
jle
push
sub
adc
sub
dec
mov
push
sub
out
mov
and
add
das
adc
add
das
add
adc
arpl
xchg
cmpsb
cs
add
add
js
mov
cmp
je
and
test
push
push
and
adc
mov
adc
adc
and
sbb
add
fsub
mov
push
push
xlat
adc
and
imul
and
adc
mov
test
jl
pop
and
sub
jns
mov
nop
das
iret
adc
fists
push
adc
dec
jne
push
push
and
inc
and
adc
sbbl
and
cs
or
pop
adc
mov
and
sbb
test
jne
mov
lea
and
adc
lea
es
cmc
adc
lea
push
xorb
and
inc
sbb
fstpt
ret
dec
adcb
add
mov
push
adc
inc
imul
or
sahf
and
push
lret
adcb
jl
ret
jne
mov
and
cmp
je
js
cmp
je
push
bound
fsub
mov
and
int
mov
push
adc
mov
addb
mov
push
push
mov
rcll
bound
or
push
movswl
mov
cmp
jge
mov
and
sbb
iret
mov
movswl
imul
adc
clc
je
cmp
je
cmp
je
mov
and
imul
movsb
cmp
xor
adc
movswl
inc
pusha
jbe
cmp
mov
mov
inc
and
inc
pop
inc
xor
xchg
mov
call
mov
mov
inc
adc
mov
jne
and
or
lcall
push
outsl
cmpsl
mov
adc
mov
sbb
dec
jp
adc
pop
inc
fwait
adc
xchg
and
push
jl
lds
jmp
mov
dec
call
and
pop
adc
sub
sbb
push
adc
adc
or
dec
loopne
mov
shrb
mov
fists
cmp
daa
in
adc
mov
adc
push
pop
adc
jne
pop
iret
and
xor
inc
lret
arpl
or
adc
and
xchg
pop
mov
sub
sub
add
jl
out
xchg
gs
inc
jmp
and
adc
push
and
in
cmp
or
pop
and
push
adc
clc
adc
push
and
lods
and
not
daa
insl
clc
and
orb
mov
pop
das
scas
add
call
mov
jl
mov
adc
clc
jge
insl
adc
mov
mov
push
inc
push
insb
lods
pusha
xor
xchg
fs
shll
movsb
adc
xor
adc
xor
adc
sub
adc
pop
adc
xchg
adc
mov
add
cltd
push
and
fists
mov
filds
adc
mov
sbb
add
fstps
adc
jge
jle
ljmp
pusha
notb
lea
mov
xlat
add
lea
xchg
adc
push
add
inc
dec
push
loope
fs
push
and
adc
sbb
sub
push
mov
add
movsb
cwtl
cmpl
sub
adc
sub
inc
push
es
adc
push
xor
push
into
push
adc
mov
adc
or
adc
adc
or
lds
sub
adc
inc
stos
pop
ficoml
fdivrl
pop
push
sub
test
outsl
add
mov
adc
push
inc
repnz
int
jge
loope
adc
mov
cmp
jge
mov
add
mov
mov
add
cmp
ja
outsl
push
adc
out
push
adc
inc
push
mov
inc
pop
shll
mov
inc
jmp
mov
aam
es
add
mov
or
imul
push
adcb
mov
arpl
cld
inc
pop
jne
or
adc
nop
cmp
daa
adc
add
addb
or
sub
add
enter
add
adc
jmp
daa
add
adc
mov
and
pop
and
mov
arpl
mov
sarb
orb
add
sbb
pushf
adc
mov
adc
popa
cmp
lock
iret
add
adc
iret
adc
and
or
fisttpl
pusha
leave
dec
mov
lea
pop
clc
je
push
jle
adc
imul
outsb
inc
call
push
adc
xor
xor
add
jns
cmp
add
pop
jecxz
outsl
cmpl
adc
movswl
push
and
test
jle
pop
adcl
cmp
adc
add
sub
and
adc
jl
xor
dec
adc
adc
and
fs
xor
fmull
imul
sbb
xor
and
test
andl
and
aas
adc
xchg
adc
adc
dec
add
lret
je
and
pop
adc
sbb
sarl
adc
pop
adc
pushf
aaa
and
adcl
inc
jno
pop
or
sti
mov
mov
jl
shrl
jge
test
mov
mov
mov
adc
shl
and
adc
cmc
arpl
adc
add
lahf
in
inc
daa
adc
rclb
fmuls
adc
jno
and
mov
inc
mov
jns
sbb
inc
xor
add
add
mov
adc
mov
xor
sub
add
sbbb
sbb
and
inc
and
and
and
mov
rcrb
adc
call
adc
dec
pusha
inc
inc
aas
and
lea
adc
and
insl
rcrb
adc
add
and
adc
sub
push
shrl
gs
add
push
jl
movb
adc
popa
adc
and
aaa
add
sub
add
int3
movsl
adc
adc
inc
rclb
sub
add
inc
adc
loopne
adc
add
inc
add
add
inc
pop
adc
add
mov
inc
add
and
gs
adc
push
jge
add
mov
push
pop
and
adc
inc
inc
add
push
inc
add
movb
jnp
add
push
inc
add
lea
adc
aaa
cmp
sub
add
sub
xchg
adc
enter
rcll
scas
and
push
adc
adc
inc
mov
and
adc
dec
inc
or
ja
adc
adc
push
adc
cmp
pop
xor
les
xor
pusha
adc
dec
or
popa
popa
adc
das
adc
push
daa
adc
adc
sub
mov
mov
cmp
push
push
or
inc
scas
daa
sbb
adc
mov
pop
dec
or
push
or
rorb
add
push
movswl
and
and
bound
fisttpll
push
fcompl
popf
and
mov
je
add
inc
add
xor
inc
adc
sbb
pop
mov
fldl
fstpl
rcrb
inc
loopne
adc
adcb
adc
push
adc
pop
std
cmpsb
inc
es
add
pop
inc
jb
inc
adc
push
adc
inc
push
adc
push
push
and
adc
push
adc
xor
push
inc
push
mov
push
adc
bound
inc
fwait
adc
or
movsl
arpl
and
imul
dec
and
nop
es
add
inc
inc
xor
cmp
je
mov
push
call
adc
stos
adc
sbb
push
inc
movsl
inc
inc
adc
mov
popa
testl
adc
and
call
popl
loopne
adc
sub
adc
ret
nop
fwait
inc
rclb
mov
add
lret
adc
inc
add
hlt
inc
add
or
inc
sub
adc
testl
outsl
or
adc
xor
fisttps
adc
push
inc
pop
and
adc
inc
jmp
inc
adc
int3
lds
je
loope
vmovsd
jnp
jmp
pushl
movsb
pop
push
jnp
mov
mov
mov
and
gs
inc
add
mov
cmp
jle
pop
or
sti
add
xchg
mov
enter
popl
cmp
call
inc
xor
cmp
jne
movl
and
pop
adc
mov
lea
inc
or
adc
inc
push
push
stc
jne
mov
lea
push
mov
mov
dec
adcl
mov
adc
mov
test
dec
rclb
inc
call
inc
xor
hlt
mov
pusha
xor
adc
push
nop
rclb
movsb
inc
adc
test
pop
mov
inc
dec
adc
jo
popa
rcll
es
les
mov
mov
and
jo
in
out
addb
rorb
jmp
cmp
jne
loopne
adc
adc
sub
add
movsl
inc
dec
dec
inc
push
and
fcoms
std
push
pop
and
and
pop
dec
mov
push
dec
push
push
mov
cmp
adc
push
and
mov
adcb
fldl
adc
dec
cmp
push
outsl
mov
and
and
fidivl
inc
adc
sub
add
fistl
jne
and
mov
cmc
jb
cmpb
aas
rorb
adc
sub
or
pop
ret
bound
push
mov
sbb
pusha
sbb
and
jmp
adc
inc
or
push
push
cmpw
dec
adcb
xchg
loopne
adc
aaa
pop
push
pop
cmp
jb
adc
xchg
inc
or
testb
jne
movzwl
sbb
pop
idiv
test
jne
mov
mov
cltd
idiv
inc
or
jge
sbb
push
inc
aaa
sbb
jne
mov
jmp
andl
addr16
cmp
jb
movzwl
mov
movzwl
adc
sub
mov
add
adc
fsts
ja
or
sbb
ja
adc
movzwl
adc
mov
push
inc
clc
push
lds
imul
mov
cltd
pop
idiv
sub
add
push
mov
or
ja
cmpl
je
dec
movzwl
inc
jbe
sbb
cmp
ret
add
repnz
adc
push
add
mov
mov
fildl
test
fmull
jge
fchs
fildl
mov
push
fadd
fstpl
pop
fstp
and
inc
dec
loope
leave
ret
cmp
dec
pop
fldl
fcompl
mov
sahf
ja
adc
dec
rclb
subb
adc
movl
adc
or
add
jmp
fldl
faddl
and
fldenv
sbb
mov
fstpl
add
or
sbb
push
or
inc
or
mov
pop
pop
fmull
sub
adc
ljmp
mov
cltd
pop
mov
idiv
jg
adc
inc
mov
inc
push
adc
adc
mov
adc
inc
call
inc
sbb
test
lock
dec
push
adc
idiv
mov
adc
inc
test
rcrb
cld
jne
and
inc
and
mov
mov
idiv
mov
xorb
decl
lea
mov
push
sbb
inc
hlt
push
lea
xor
imul
add
cmp
pop
lea
mov
jne
cmp
push
adc
movl
inc
or
fs
adc
movl
cld
mov
mov
fisttps
mov
jno
adc
mov
idivl
inc
mov
sar
inc
mov
cmp
or
fldcw
out
inc
add
sub
mov
cmp
jne
mov
mov
mov
jmp
and
pop
inc
pop
adc
mov
pusha
or
lock
pop
adc
inc
and
adc
add
popa
fstl
leave
and
sub
icebp
mov
inc
cmp
jbe
sub
xor
mov
adc
or
inc
and
push
shlb
and
inc
xchg
and
fsts
addl
mov
add
adc
adc
push
push
mov
inc
sbb
or
loope
pop
fsubrp
fdivr
addr16
xor
fld
fsubl
inc
and
and
push
xchg
push
adc
cmovno
adc
mov
lea
fs
adc
inc
cmpsb
adc
mov
add
sub
push
xor
cmp
jne
fldl
lea
push
loopne
adc
and
inc
inc
sub
push
inc
movsl
inc
or
mov
inc
mov
dec
mov
inc
or
adc
call
in
punpcklbw
adc
inc
pop
dec
sbb
dec
faddl
adc
inc
pusha
imul
add
dec
mov
or
jne
das
cltd
add
add
ret
or
leave
ret
sub
adc
add
enter
add
sub
adc
add
add
shrb
add
adc
cwtl
inc
cmp
mov
test
pop
je
mov
push
push
dec
mov
adc
pusha
add
or
add
adc
push
adc
inc
add
and
push
adc
insl
popf
adc
inc
or
add
and
jp
add
jle
pop
jae
mov
fstpl
fldl
and
pop
clc
fs
add
add
xor
xor
aam
das
lret
push
fldz
pop
fstpl
cmp
je
mov
dec
out
cmp
je
push
pop
inc
adc
inc
inc
or
cmp
faddl
and
push
push
lea
mov
inc
or
adc
inc
lods
push
inc
or
inc
jl
jmp
inc
or
fldz
mov
fstpl
pop
inc
jbe
add
ss
adc
add
jl
and
out
pushl
pushl
pushl
pushl
pushl
jmp
mov
es
add
add
or
adc
movl
and
adc
add
or
or
faddp
inc
or
or
or
fiaddl
adc
sbb
adc
xor
adc
fucompp
and
sbb
add
xchg
adc
movl
or
arpl
mov
aad
pop
mov
pusha
daa
and
xor
dec
add
shrb
adc
dec
add
cmp
sub
fwait
xor
daa
cmp
sub
add
call
daa
adc
pusha
dec
addb
jno
and
adc
mov
roll
adc
add
pusha
sbb
sahf
roll
pushl
cs
add
adc
add
das
daa
add
and
adc
and
adc
adc
and
js
and
inc
push
inc
jnp
pop
shll
add
push
subb
dec
shll
and
mov
or
adc
ret
mov
jmp
and
push
xor
cmp
push
adc
adc
sbb
test
std
gs
push
call
adc
je
and
mov
push
push
push
call
cmp
mov
je
push
adc
adc
dec
push
adc
pusha
adc
cmp
add
and
adc
sub
pop
and
pusha
adc
sbb
and
and
ljmp
jmp
mov
sbb
sbb
sbb
subb
movl
and
xchg
sbb
adc
ss
adc
add
jle
inc
lock
jle
cmp
jle
mov
pop
call
cmp
jge
push
inc
pop
adc
jl
test
add
and
sub
pop
adc
ret
adc
dec
testb
je
subb
cmp
and
inc
aam
adcb
xor
sub
lock
rolb
pusha
push
and
inc
imul
push
lods
sub
adc
outsb
dec
mov
arpl
sbb
idivb
fidivs
cmp
jb
inc
inc
adc
push
push
push
and
mov
push
mov
mov
push
mov
call
push
mov
call
lea
lea
movsl
movsl
movsl
cmpl
xor
adc
mov
pop
jb
add
push
push
and
adc
pusha
nop
push
push
mov
inc
and
jno
sub
pop
mov
dec
add
jmp
in
sbbl
push
frstor
push
and
and
ret
roll
ret
addr16
mov
std
sbb
notl
dec
lock
or
add
pop
jb
and
and
cmpsb
adc
pop
xchg
pop
loope
cmp
push
adc
add
adc
ja
xchg
mov
insl
xchg
inc
xor
loopne
and
and
jne
movl
cmp
sbb
lea
inc
xor
dec
cld
jmp
sbbb
out
sbb
shll
add
push
push
adc
xchg
pop
mov
inc
fldenv
and
adc
je
bound
xor
dec
push
adc
jne
dec
rclb
add
addl
inc
adc
pop
push
adc
pop
cmp
adc
add
mov
and
cltd
outsl
sti
sbb
inc
or
adc
push
add
jne
pop
adc
lret
pop
pop
and
mov
fcmovu
and
adc
pop
dec
jbe
clc
adc
jnp
adc
mov
adc
imul
sub
adc
push
adc
push
mov
daa
or
adc
sarb
sub
dec
outsl
sbb
je
mov
push
dec
lods
popa
sbb
sbb
and
adc
inc
ret
push
js
push
jnp
lea
mov
push
lea
push
inc
fists
loopne
inc
fadds
adc
push
popa
and
jbe
pushl
test
xchg
test
and
lcall
adc
adc
push
pop
adc
test
in
aam
adc
adc
adc
test
and
test
adc
cmp
pushl
lea
push
xor
pusha
adc
inc
pop
pusha
and
fsub
dec
iret
sbb
js
add
cmp
jb
pop
inc
cmp
adc
insb
rclb
jl
inc
inc
push
adc
test
and
mov
lods
andl
sbb
fdivrs
cmpb
jne
inc
sub
pusha
adcl
and
adc
fdivl
es
adc
fsub
lea
inc
xor
enter
stos
pusha
adc
mov
push
and
and
lea
test
andb
inc
int3
pusha
sub
lcall
dec
loopne
es
daa
add
ljmp
sub
adc
push
inc
mov
push
jo
push
inc
xor
inc
push
adc
addb
jns
push
sbbl
add
aad
pop
pop
sub
and
addr16
andl
mov
dec
sbb
adc
roll
adc
fs
incl
lea
adc
faddl
addb
pop
ret
mov
lcall
popf
push
adc
inc
sbb
and
mov
inc
adcb
addps
inc
add
dec
rclb
push
and
jle
mov
and
ljmp
out
adc
les
pop
add
data16
pop
pusha
aas
inc
adc
adc
daa
jle
adc
and
xchg
jle
and
adc
push
mov
push
push
sub
add
sbb
push
mov
adc
mov
push
call
and
cmp
aad
and
notb
jmp
inc
sahf
sbb
jo
call
sub
lea
inc
repnz
nop
adc
mov
dec
push
adc
je
data16
sub
pop
inc
loope
xor
adc
adc
je
inc
xchg
push
icebp
push
je
or
cmp
inc
push
adc
insb
inc
lock
and
and
mov
sub
add
popa
push
and
and
leave
ret
mov
sbb
adc
icebp
add
push
push
not
push
mov
shr
in
rcll
and
inc
sub
arpl
adc
mulb
iret
adc
jno
loopne
adc
and
xchg
pusha
sbb
jae
mov
ficoml
faddl
orl
add
std
test
dec
cmp
dec
fcoms
jg
pop
adc
bound
or
mov
push
or
sbb
and
pop
push
popa
and
mov
dec
cmp
add
loopne
adc
pop
lea
inc
xor
pop
push
adc
and
adc
popa
mov
inc
add
jge
adc
fs
shlb
pop
and
adc
sub
sbb
dec
and
es
add
movsb
mov
and
cmovne
jo
xchg
and
and
and
jns
adc
pop
in
call
adc
jl
adc
lret
popa
mov
fistpll
ret
je
and
adc
in
adc
jo
and
push
and
mov
mov
decl
loopne
sub
mov
lcall
and
outsb
loopne
push
adc
jo
or
add
jge
adc
or
dec
lahf
xor
andb
mov
lods
adc
and
orb
ds
lds
into
xchg
adc
orl
cmp
add
psllw
pop
ret
inc
dec
adc
jmp
and
adc
scas
adc
in
or
add
ret
mov
xor
push
addb
js
dec
adc
and
ds
inc
add
sbb
jno
pusha
inc
adc
add
inc
add
mov
jno
inc
mov
test
jl
cmp
jle
cmp
jne
mov
and
in
mov
mov
test
and
jne
bound
ljmp
sbb
orb
push
popa
js
pop
sbb
clc
pop
jmp
xor
test
and
sbb
pop
call
jne
cmp
jne
loopne
pop
pop
pop
je
mov
mov
sub
add
cmp
jne
loopne
adc
jne
es
add
pop
dec
xor
int
mov
leave
sbb
jle
add
movsb
inc
cltd
adc
adc
push
fadds
inc
and
push
and
adc
adc
or
cli
push
pushl
iret
pop
xchg
mov
js
inc
fisubl
adc
loop
adc
push
arpl
adc
inc
loop
push
pushl
push
pushl
sbbl
test
pop
pop
jne
push
push
rclb
mov
push
rclb
daa
lock
lds
sub
push
push
jmp
das
into
inc
push
adc
inc
outsl
adc
call
xchg
push
mov
adc
jmp
inc
or
adc
sbb
pop
mov
push
lea
lea
push
adc
mov
dec
mov
movups
adc
adc
add
fs
sbb
dec
repz
mov
pop
adc
ficoms
or
or
and
push
and
sub
lea
iret
test
mov
and
adc
inc
push
inc
adc
sarb
and
and
rclb
adc
ficoml
incb
jge
mov
push
adc
je
pop
lea
push
push
push
cmp
add
cmp
enter
and
push
add
xchg
dec
inc
dec
adc
dec
and
push
testb
je
inc
add
inc
add
mov
adc
dec
movsl
adc
push
push
cmp
push
test
pop
je
testb
je
test
je
or
inc
xor
adc
push
push
push
sub
add
inc
stos
pop
xchg
sar
push
inc
sub
push
lea
push
push
push
push
cs
orw
inc
and
lea
pusha
and
sbb
and
adc
inc
push
pusha
movsb
adc
and
mov
sbb
push
cs
add
pop
jne
and
testb
sub
add
lahf
adc
xor
push
das
les
adc
subl
add
ja
dec
sub
adc
fadds
adc
adc
inc
pop
adc
out
push
adc
inc
push
adc
pop
je
mov
inc
cli
mov
jmp
movb
inc
rcll
push
fwait
sub
repnz
or
adc
inc
adc
pusha
or
sbb
int
mov
inc
or
xchg
sub
or
loopne
rorb
pop
and
inc
mov
rorb
jb
and
mov
clc
dec
inc
adc
pop
inc
adc
mov
orl
orl
mov
and
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
adc
movl
and
xor
call
and
and
ja
adc
jle
and
test
scas
adc
push
adc
lea
cmp
mov
mov
mov
mov
enter
mov
mov
cmp
js
je
push
inc
lret
imul
loope
pop
inc
adc
xchg
adc
push
mov
adc
shrl
or
push
dec
and
mov
std
adc
call
iret
adc
lret
dec
xchg
inc
cmp
mov
test
stos
dec
adc
xor
adc
sub
add
orb
mov
jl
add
shlb
inc
adc
cmp
push
inc
test
cmp
je
and
adc
pop
or
adc
pop
add
clc
add
adc
fisttpl
ret
and
inc
push
and
adc
pusha
and
sub
jl
orb
inc
and
pop
int
pusha
push
bound
jb
push
es
add
std
daa
mov
inc
or
cmp
dec
leave
and
cmp
or
cld
das
adc
push
or
and
das
sub
or
adc
inc
adcl
decl
call
push
std
pop
jle
ja
cmp
ja
fcoms
pop
jmp
add
std
lcall
fucomp
sub
fbstp
cmp
add
jle
test
and
sub
test
and
inc
sub
xchg
pop
dec
add
js
and
cs
mov
adc
or
mov
xor
cmp
subb
or
jle
and
jmp
std
lahf
mov
das
arpl
das
inc
ds
mov
cmp
je
push
arpl
arpl
adc
jle
andb
adc
pop
adcb
cmp
pop
pop
inc
or
xor
andl
jbe
mov
pushl
sbbb
pusha
adc
jb
pushl
loopne
adc
dec
adc
jle
mov
xor
add
pusha
xor
inc
andb
adcb
arpl
enter
adc
pop
inc
stos
adc
addr16
mov
and
and
adc
and
jmp
mov
adc
mov
inc
sbb
lret
push
and
or
std
xor
pusha
movups
daa
imul
cltd
outsb
in
add
pop
mov
pushf
add
xchg
add
call
cmpl
out
and
test
je
inc
fcompl
cld
push
pushl
push
imul
test
jmp
add
pop
lock
and
cmp
mov
jmp
outsb
pop
adc
test
adc
adc
repnz
incl
je
daa
mov
pop
adc
and
cld
adc
andl
mov
push
dec
imul
dec
xor
or
dec
sbb
adc
rorl
sub
inc
cmc
and
and
inc
repnz
sub
adc
ret
push
adcl
jbe
mov
call
cmpl
je
dec
dec
adc
adc
adc
pop
and
push
jne
mov
dec
jmp
mov
mov
adc
dec
mov
adc
fidivrs
and
dec
adc
dec
js
inc
inc
sbb
pushf
aas
jmp
pop
pop
pop
leave
ja
mov
call
mov
clc
push
inc
and
push
pop
jle
dec
adc
mov
jmp
mov
push
dec
adc
nop
sub
adc
je
inc
add
jae
adc
add
sbb
push
jne
testb
je
dec
ljmp
adc
push
adc
mov
jmp
mov
pusha
adc
pop
mov
pushl
test
inc
adc
adc
ja
adc
sbb
jne
cmp
testb
jne
loop
popf
icebp
mov
or
mov
sub
and
or
inc
out
jne
push
push
and
inc
inc
enter
adc
push
roll
cwtl
push
add
inc
unpcklps
inc
dec
add
adc
push
jmp
push
adc
xor
push
push
mov
andb
pop
jmp
outsl
rolb
mov
mov
rclb
sub
cmp
and
ljmp
push
adc
pusha
call
sbb
xchg
and
inc
sbb
je
cmp
jb
mov
pop
add
and
es
xor
add
and
push
push
push
push
push
mov
adc
mov
int
inc
mov
mull
std
test
push
lea
or
push
rorl
pusha
cmp
xlat
add
pop
xchg
adc
test
dec
adc
adc
inc
or
sbbl
adc
cmp
je
les
sahf
cmc
subb
pusha
or
andl
shlb
sub
pop
ret
and
and
xor
sub
adc
test
adcb
adc
sahf
adcb
or
sahf
fs
je
xchg
adc
out
loope
adc
push
ds
xchg
adc
jne
addl
add
jmp
rclb
rol
adc
jmp
iret
xor
push
push
orb
cmp
pop
inc
lret
adc
lret
addl
lret
add
pop
push
inc
xlat
inc
mov
pop
ret
mov
add
adc
push
pusha
adc
adc
subl
loopne
sub
add
cmpw
jle
push
push
movswl
mov
add
jno
mov
gs
ds
sbb
mov
inc
rcll
inc
or
adc
or
adc
inc
pop
adc
lcall
and
adc
je
mov
fs
clc
dec
js
mov
jmp
mov
dec
js
cmpl
push
adc
jbe
pushf
fs
cmp
jle
outsb
je
jae
cmp
imul
dec
js
ja
adc
cmp
shr
pusha
push
adc
jmp
cmpl
push
xchg
push
add
enter
movsb
bound
push
adc
mov
and
adc
inc
adc
sub
or
adc
je
xor
sub
adc
xchg
add
lea
pop
or
es
adc
rcrb
rclb
mov
daa
sbb
adc
push
outsb
ret
push
jo
adc
mov
std
popf
adc
pop
adc
sbb
lock
adc
ret
daa
sbb
push
sub
sbb
shrl
inc
lret
adc
adc
and
adc
test
mov
movups
call
inc
xor
mov
push
and
pusha
push
adc
mov
push
rclb
sub
mov
mov
cmp
adc
je
bound
adc
dec
sub
cmpsl
push
adc
sbb
adc
sbb
stos
jp
push
dec
xor
pusha
jo
sbb
add
push
inc
sahf
adc
je
and
pop
std
mov
and
jle
adc
mov
jb
adc
mov
popa
and
and
popa
adc
cmp
bound
adc
inc
adc
add
andb
dec
push
inc
and
dec
adc
mov
lods
push
sbb
jne
test
and
stc
mov
out
jne
test
and
xchg
mov
shll
add
enter
data16
ror
pop
adc
or
pop
adc
or
jmp
adc
mov
adc
stos
cmc
mov
cwtl
adc
adc
and
fcoml
jne
dec
jp
fildl
imul
mov
imul
jne
push
orl
and
imul
mov
adc
hlt
inc
les
inc
cmp
xor
nop
adc
add
lret
loop
daa
ficompl
adc
cmp
shll
cs
adc
dec
rcll
inc
in
dec
adc
inc
popf
adc
jge
add
jne
call
push
or
das
adc
adc
add
cmp
jne
lea
lock
das
adc
into
add
in
push
arpl
gs
pushl
sbbl
testb
jne
inc
andl
cmp
adc
out
push
inc
iret
inc
sub
adc
dec
pop
pop
pop
lea
jmp
lea
pop
out
pop
iret
cld
pusha
push
adc
inc
push
adc
mov
pusha
sub
pop
fstpl
mov
add
xor
imulb
mov
pushw
or
adc
adc
jg
pop
and
mov
popa
test
jg
adc
push
es
and
test
cld
andb
sbb
pop
sbb
jb
and
loop
adc
dec
ss
cmp
jmp
jge
jmp
dec
sbb
adc
xchg
xchg
add
pop
pop
inc
test
push
js
adc
les
lcall
adc
adc
jne
and
jmp
pop
or
cmpl
adc
sub
adc
imul
adc
and
out
add
or
jmp
andl
cmpsb
and
adc
mov
or
push
call
xorb
movsl
loop
adc
into
jbe
adc
lret
popa
adc
jne
daa
and
jns
daa
aas
or
inc
pusha
mov
inc
xchg
cmp
mov
jo
jge
adc
sub
daa
pop
push
adc
jne
mov
mov
adc
adc
mov
mov
and
jl
push
subl
fildll
add
loopne
adc
mov
incb
adc
and
mov
push
addb
out
add
inc
add
cmpb
jne
cmpb
jge
in
cli
call
in
pusha
xchg
inc
cltd
adc
sub
add
adc
inc
clc
inc
fwait
sbbb
loopne
adc
jmp
and
xchg
pusha
sbb
adc
sbb
cmc
and
jmp
scas
inc
or
mov
adcl
or
lea
call
out
xor
adc
test
outsb
pop
adc
shl
push
stos
jnp
pop
inc
aam
add
out
lret
dec
mov
sbb
push
sub
lea
push
push
push
mov
adc
rolb
ret
shlb
inc
cmp
jle
dec
and
shrb
mov
push
shl
lea
mov
xor
xor
dec
push
lea
inc
add
add
push
inc
mov
iret
gs
ljmp
mov
lea
inc
pop
and
inc
rolb
xlat
mov
or
in
movzwl
pop
mov
jle
push
add
and
lods
pop
dec
pop
pop
or
mov
and
adc
mov
xchg
in
xchg
mov
lret
andl
test
pop
je
test
jne
orl
adc
mov
andl
push
inc
mov
add
scas
adc
je
push
dec
and
and
add
mov
leave
sub
dec
test
inc
sub
popa
sub
ret
test
lods
adc
andl
mov
leave
push
cmp
add
jg
mov
insl
sbb
je
lea
push
lea
push
jecxz
sub
xor
jg
pop
jne
inc
mov
mov
push
arpl
xchg
dec
adc
test
loopne
and
popa
adc
or
je
mov
push
pop
cmp
add
add
mov
pop
mov
push
and
mov
mov
mov
mov
and
dec
push
push
data16
and
and
and
push
call
sub
add
or
lret
aaa
adc
fwait
push
adc
inc
hlt
mov
xchg
adc
and
and
mov
jne
xor
inc
imul
push
stos
sbb
adc
or
sub
add
push
push
push
adc
data16
loopne
and
push
jl
inc
cmp
test
mov
je
test
je
cmp
jae
mov
dec
or
sub
push
inc
mov
jge
in
inc
rclb
ds
pop
fwait
adc
push
and
es
jae
pop
data16
pop
imul
mov
jle
cli
jns
and
adc
lea
adc
adc
pop
sub
or
adc
pusha
int3
and
sub
mov
popa
pop
loopne
mov
int3
es
adc
sbbl
inc
incb
and
dec
push
call
dec
add
add
call
bound
dec
arpl
adc
pop
pop
pop
adc
test
push
cmp
mov
mov
mov
jae
mov
pop
xchg
adc
es
sbb
addb
and
adc
inc
inc
xchg
adc
jne
pop
jle
xchg
jae
jle
jne
mov
and
adc
and
pop
je
inc
mov
xor
sub
inc
inc
adc
rorl
mov
pop
cmp
jb
and
and
loopne
xchg
adc
adc
inc
loopne
jne
jne
cmp
je
mov
inc
sbb
add
push
bound
push
loop
jmp
inc
adcl
popa
movsl
inc
fcoml
bound
inc
and
shlb
jge
je
insl
rcll
inc
pusha
or
mov
ljmp
push
pop
sbb
mov
std
nop
add
adc
dec
sub
orl
insl
in
mov
pop
call
mov
les
es
fcoml
cmp
push
je
je
lods
adc
scas
mov
clc
inc
or
adc
pop
mov
add
adc
inc
adc
pusha
push
adc
inc
add
pop
or
sbb
xor
sbb
adc
sbb
push
inc
sbb
jge
inc
add
and
xchg
sti
int3
adc
insl
lea
jne
lds
and
and
test
adc
adc
aaa
movsl
xchg
inc
push
add
xor
fisubs
sbb
sbb
leave
cmpw
sete
mov
adc
ljmp
xchg
pop
push
into
adc
outsl
adc
mov
out
xor
test
pop
movzwl
dec
dec
je
dec
je
sub
and
addr16
push
push
or
sahf
rorb
inc
ss
mov
jmp
movl
and
cmp
je
adc
je
and
adc
lods
popa
adc
cmp
xchg
dec
das
sbb
pop
cmc
adc
inc
movsl
sbb
aas
fs
test
jne
and
sub
xchg
adc
sub
leave
shlb
adc
adc
or
push
pusha
cmp
xchg
push
and
adc
and
or
notb
push
dec
jns
adc
cld
je
dec
je
push
and
xchg
and
sbb
inc
dec
je
dec
dec
jne
pop
cld
and
inc
jnp
inc
ret
adc
inc
adc
sbb
sahf
je
movsl
and
and
mov
pusha
adc
aaa
jmp
inc
pop
popa
in
fs
push
pop
je
cmp
jle
dec
mov
cmp
adc
enter
pop
and
pusha
arpl
dec
add
mov
adc
lea
mov
clc
adc
sub
insb
adc
test
cmp
adc
addb
adc
test
incb
jnp
and
jbe
jne
test
adc
jmp
and
inc
adc
dec
adc
or
sub
and
subb
cld
push
adc
adc
jne
push
inc
pusha
sbb
mov
inc
cmp
jne
movl
sbb
dec
imul
aaa
adc
adc
add
adc
je
inc
mov
cmpsb
adc
cmp
bound
dec
adc
pop
inc
pop
mov
mov
pop
sbb
sbb
notl
mov
adc
adc
mov
pop
adc
push
and
adc
insb
sbb
adc
andl
push
xor
add
jecxz
inc
and
jl
and
and
not
sub
inc
rclb
lock
fwait
mov
aam
andl
lahf
inc
adc
jne
adc
xchg
dec
adc
push
push
inc
punpcklbw
sahf
sbb
jmp
sbb
lret
imul
push
push
lea
inc
clc
dec
data16
cmp
and
sub
lock
out
adc
sbb
adc
and
adc
sub
sbb
lea
pusha
jne
dec
orb
sub
adc
andb
sbb
mov
outsl
and
lock
sbb
pushl
adc
inc
or
and
jle
outsl
mov
jle
push
push
jo
adc
dec
das
sbb
test
je
mov
and
xchg
and
mov
pop
push
pop
push
pop
jmp
insb
push
sbb
add
add
pop
mov
mov
mov
stc
adc
jbe
and
inc
sbb
cmpsl
movups
adc
movsl
adc
cmp
aad
and
adc
and
mov
rcll
cmp
add
push
daa
rcr
inc
adc
sbb
adc
jne
push
and
and
sbb
adc
inc
test
adc
sub
adc
sbb
sub
adc
pushl
inc
scas
arpl
adc
and
xor
jle
adcb
andl
ljmp
push
test
and
push
fsub
mov
popa
adc
sahf
sbb
iret
daa
cmp
adc
sub
adc
in
jmp
push
jmp
shrb
xor
es
adc
test
pop
sub
adc
and
push
adc
adc
je
cltd
popa
adc
sahf
subb
cwtl
pusha
mov
jecxz
adc
outsb
adc
dec
in
inc
lcall
adc
cld
sub
icebp
rcr
adc
mov
clc
sub
and
dec
mov
and
je
inc
call
inc
inc
adc
push
ret
mov
lods
scas
adc
mov
or
rcll
push
roll
add
push
cmpsl
fildll
inc
jne
mov
xchg
and
dec
add
lret
adc
jmp
es
idivb
add
pop
add
adc
adc
cltd
pop
xchg
dec
inc
popf
es
add
mull
mov
adc
inc
cld
and
sub
adc
and
mov
and
add
adc
push
push
addr16
test
and
and
sub
and
inc
and
xchg
add
sub
pop
push
push
or
cmp
dec
pop
adc
and
and
xor
mov
sarb
jl
adc
ja
cmp
lea
and
xor
adc
lret
inc
pop
adc
test
dec
dec
xchg
dec
xor
add
jo
and
dec
bound
incl
or
push
adc
sti
and
adc
and
adc
jmp
and
mov
adc
rclb
add
xchg
addr16
mov
adc
adc
pop
fwait
into
rorb
cmpsl
xor
in
and
cmpsl
sub
add
sub
push
push
stos
add
adc
add
sub
adc
or
jo
in
mov
push
jo
add
pop
cld
je
cmp
jne
push
test
cmp
dec
adc
loope
push
and
call
and
and
lea
sbb
jne
add
sub
adc
and
sbb
adc
and
adc
jne
loopne
inc
sub
sbb
push
add
mov
adc
inc
cmp
shl
and
dec
sbb
loope
daa
jle
cs
sub
add
cmc
cmpsb
inc
add
adc
adc
icebp
and
jmp
dec
adc
and
pop
xor
test
lock
adcb
cmp
push
pop
lea
jmp
mov
cwtl
loopne
mov
sub
pusha
movlps
dec
and
shll
cmp
daa
cmp
jno
inc
push
adc
ret
sub
add
and
sub
add
orb
adc
adc
sub
add
add
std
adcb
shlb
es
adc
xorb
xchg
adc
jnp
fisttpl
inc
fisttpl
and
jle
add
xor
push
xor
sub
add
adc
and
add
or
loopne
adc
aam
jmp
subb
push
shll
aaa
es
add
jne
jae
add
inc
add
jae
data16
cmp
pusha
cs
pusha
sub
add
pusha
mulb
add
mov
inc
push
adc
fildl
adc
shlb
adc
aas
add
or
imul
and
push
daa
addb
call
sub
add
or
cmp
adc
sub
add
sub
flds
js
adc
pusha
sub
or
and
pop
aas
and
pusha
sbb
add
push
xor
add
adc
xor
sbb
imul
push
push
and
sbbl
add
and
dec
sbb
jg
je
cmp
jle
push
repz
cmp
je
cmp
dec
ss
or
sbb
je
fld
add
jmp
sub
or
add
jmp
sbb
ss
mov
cmp
dec
shll
aad
and
adc
adc
and
adc
dec
push
push
pop
pop
pop
pop
ret
mov
ficoms
jne
and
and
and
jmp
pusha
adc
pusha
adc
push
and
mov
mov
gs
es
adc
and
adc
movups
push
mov
jle
pop
es
push
cmpsl
mov
inc
adc
xchg
dec
and
adc
and
adc
sbb
addr16
dec
mov
iret
je
and
or
mov
pusha
push
adc
test
pusha
pop
adc
int3
inc
loopne
adc
jg
sub
je
outsb
jecxz
push
adc
mov
rclb
cmp
je
mov
xlat
jl
scas
stos
scas
xchg
cmp
je
inc
mov
inc
mov
adc
and
aas
test
ss
sub
add
cmp
jle
dec
mov
dec
mov
pop
push
push
mov
and
fsubs
and
stos
add
sub
decl
jns
imul
adc
data16
add
adc
mov
roll
mov
ja
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
cmpsb
dec
pusha
adc
pop
inc
cmp
sbb
adc
inc
add
cmp
add
pusha
movups
pop
loopne
adc
inc
add
sub
rolb
xor
add
pusha
and
mov
movswl
pusha
xchg
adc
push
jg
adc
je
cmp
je
cmp
je
cmp
jne
push
dec
or
jle
and
adc
and
dec
adc
movl
sbb
movsb
sub
adc
pop
inc
sbb
inc
sbb
mov
loopne
mov
pusha
xor
dec
adc
mov
jo
and
mov
out
mov
cltd
scas
push
jge
cld
push
mov
and
sub
jne
and
adc
inc
sbb
adc
push
and
adc
scas
and
jns
test
insb
add
dec
je
push
pop
sub
je
dec
je
sub
xorb
adc
add
inc
test
dec
inc
aas
pusha
cmpsl
and
dec
inc
mov
mov
movl
jmp
and
dec
pusha
pop
xchg
insl
adc
push
dec
mov
or
loope
adc
jne
inc
leave
adc
jne
mov
loop
movsb
cmp
adc
add
stc
push
and
in
sub
and
fadds
add
adc
inc
add
adc
inc
inc
or
add
push
daa
adc
inc
inc
and
mov
mov
imul
and
push
loop
cmp
xchg
mov
and
jmp
and
lock
sub
jne
pop
adc
dec
mov
addr16
adc
adc
cmp
jl
and
and
adc
fdivrs
inc
xchg
adc
je
pusha
push
adc
jne
inc
sbb
and
inc
lds
adc
mov
add
sub
mov
inc
lea
push
push
inc
lahf
and
adc
pop
pusha
nop
adc
adc
addl
adc
fsubs
cmp
adc
add
imul
push
inc
adc
inc
sbb
lea
repnz
inc
dec
adc
push
out
mov
jbe
loop
adc
adc
movsb
cli
bound
adc
sub
adc
pop
sbb
adc
jge
mov
pusha
mov
push
push
xor
mov
adc
mov
add
movsb
pop
push
adcb
or
je
mov
mov
push
loop
adc
adc
pusha
sbb
and
inc
sub
mov
pusha
sbb
or
enter
rorl
jno
push
and
and
and
jno
inc
and
sbb
adc
and
dec
and
or
dec
or
mov
and
push
and
sub
inc
out
adc
add
dec
xor
mov
rclb
push
or
sbb
mov
jmp
incl
mov
pop
xor
mov
mov
cmp
pop
je
xor
or
ret
push
in
or
xchg
fs
mov
jne
mov
dec
and
xchg
or
js
adc
adc
adc
dec
pop
adc
incl
adc
mov
jb
and
and
enter
jbe
das
icebp
adc
adc
and
push
inc
or
inc
fistl
cmpsl
cli
inc
or
dec
jo
pusha
push
adc
mov
and
loope
push
inc
push
mov
adc
sbb
jbe
or
add
jne
adc
arpl
adc
subb
out
adc
adcl
adc
xor
xchg
or
adc
xchg
xor
jnp
inc
push
mov
xor
iret
adc
add
test
adc
mov
xor
fsub
pushl
loopne
loopne
loope
inc
adc
sub
inc
pop
adc
arpl
inc
adc
add
pop
ljmp
push
adc
and
adc
jbe
pop
and
or
inc
and
push
testb
jne
adc
addb
pusha
in
inc
sub
adc
cwtl
inc
xchg
dec
cmp
lea
push
pushl
mov
push
inc
cltd
adc
inc
add
push
push
rol
xchg
pusha
jp
cld
daa
xchg
add
les
cmp
inc
add
add
or
xor
or
mov
je
xlat
adc
inc
sbb
or
stc
add
pop
cmp
je
mov
push
push
bound
inc
sub
scas
jbe
int
sarl
loope
cmp
jne
loopne
popa
sub
and
or
cmp
adc
lods
xchg
jmp
mov
lcall
adc
inc
mov
adc
inc
add
jge
add
movsb
inc
add
lcall
dec
dec
add
inc
add
aaa
inc
add
pop
inc
add
adc
rolb
in
push
outsl
adc
and
inc
js
je
inc
inc
push
popa
sahf
jb
adc
fbstp
dec
inc
adc
xchg
and
mov
test
and
push
adc
test
cmc
push
call
sub
xor
xor
test
and
mov
inc
adc
je
dec
inc
cmc
daa
or
adc
cmpl
and
adc
push
adc
push
add
flds
dec
dec
lods
add
or
jns
je
mov
xor
test
je
cmp
and
jne
mov
mov
pop
sbbb
in
divl
push
mov
dec
mov
pusha
dec
adc
dec
or
inc
das
adc
or
movswl
cli
sbb
cmp
ja
movzbl
repz
adc
push
inc
stos
and
imul
adc
pop
and
mov
outsb
adc
add
adc
push
and
adc
bound
and
cmp
inc
in
sub
orb
ja
lods
adc
shll
jp
inc
notl
jge
stc
nop
std
pusha
arpl
sub
mov
dec
adc
mov
arpl
adc
pop
repz
sbb
adc
sti
adc
adc
mov
inc
ret
andl
and
inc
in
adc
jae
popa
pop
adc
xor
roll
adc
loopne
adc
jb
clc
and
ror
movsb
adc
dec
dec
adc
push
push
stc
xor
cmpsb
ljmp
mov
sub
dec
je
dec
je
loopne
inc
xor
inc
xor
mov
and
cmpb
stos
andb
add
cmp
rcll
or
das
stos
or
mov
and
push
shlb
inc
ret
inc
leave
sbb
inc
add
mov
mov
dec
das
adc
into
adc
pushf
push
sub
arpl
pusha
xchg
cwtl
inc
and
mov
jmp
cmpl
ret
lea
dec
and
pop
xchg
adc
arpl
adc
jne
dec
mov
and
enter
adc
xor
adc
add
inc
rol
lret
adc
dec
dec
add
inc
add
or
adc
rolb
add
add
add
add
add
adc
addb
add
adc
push
cmp
pop
call
je
lock
and
pushf
push
or
iret
mov
inc
adc
xor
xor
jae
clc
add
jge
adc
pop
or
push
loope
adc
cld
adc
orb
push
inc
out
adc
lds
imul
mov
pusha
outsb
adc
push
daa
inc
inc
rolb
insl
adc
shrb
adc
dec
sbb
adc
pusha
insl
adc
test
fs
loopne
adc
out
inc
dec
inc
inc
xorb
dec
adc
push
xor
dec
mov
push
dec
je
dec
je
inc
xor
dec
je
pop
cmp
push
dec
push
and
bound
adc
fldenv
adc
and
pop
adc
cmp
adc
mov
cmp
adc
imul
scas
fs
jl
pusha
push
adc
cmpl
adc
and
je
inc
jns
pop
fldenv
xchg
inc
pop
mov
das
adc
or
dec
dec
adc
fldl
fcompl
fnstsw
sahf
jmp
and
dec
inc
mov
adc
adc
mov
cmp
jne
and
add
pop
inc
or
push
inc
or
push
jne
and
or
inc
or
or
sbb
jne
mov
cmp
jmp
mov
or
sub
and
adc
mov
jne
and
mov
std
jmp
fwait
sub
jne
pop
and
and
adc
xor
cmp
dec
hlt
test
inc
outsb
push
mov
adc
sarl
addr16
je
dec
je
dec
je
dec
je
inc
pop
adc
inc
in
mov
popa
pop
adc
mov
inc
out
mov
outsl
and
adc
pusha
adc
and
pushf
adc
pop
int
loopne
and
push
adc
into
daa
or
push
jle
call
test
adc
pop
adc
and
je
inc
jbe
xchg
daa
pop
add
jl
and
jns
cmp
sbb
mov
adc
jmp
es
add
mov
adcl
push
dec
in
adcl
pop
adc
inc
pop
inc
std
inc
dec
adc
adc
and
push
adc
daa
inc
add
and
xor
adc
adc
sbb
inc
adc
dec
fwait
push
andl
movl
les
jge
js
mov
mov
jle
test
je
icebp
push
adc
inc
test
or
adc
lods
dec
adc
icebp
mov
adc
jne
and
dec
inc
and
mov
add
popa
inc
adc
and
adc
and
dec
adc
add
adc
cld
adc
adc
jno
es
pop
mov
add
push
call
inc
adc
jno
push
adc
push
inc
fs
lods
pusha
inc
pusha
dec
inc
push
adc
and
mov
mov
adc
cmp
cmpl
adc
pushl
cltd
cmovbe
jbe
ds
lea
dec
mov
imul
test
inc
bound
add
push
inc
mov
mov
sbb
push
dec
jne
mov
push
mov
inc
or
and
imul
inc
in
add
pusha
sbb
je
push
addl
data16
mov
mov
dec
adc
xor
loope
adc
adc
inc
cwtl
adc
push
pusha
sub
and
fadds
and
sbb
push
mov
adc
sbb
adc
push
dec
and
pop
push
aam
adc
jb
and
pushf
adc
shl
add
mov
call
push
push
mov
jo
popf
mov
sbb
lcall
adc
sub
inc
adc
mov
add
adc
mov
or
fsubr
and
jecxz
std
std
repnz
add
cmp
inc
and
mov
lea
inc
mov
inc
adc
cld
loope
inc
pushf
testb
je
movzwl
dec
push
adc
pop
inc
pop
adc
dec
popa
cmpsb
adc
push
mov
data16
out
xchg
and
adcl
dec
cwtl
test
sti
imul
call
cmp
adc
add
mov
adc
inc
or
push
push
push
adc
inc
das
xor
adc
and
jae
adc
pop
test
or
pop
push
add
fnclex
ret
mov
xchg
push
add
rolb
adc
add
xchg
inc
push
adc
add
shll
inc
or
jnp
and
in
or
ret
int3
int3
sub
fxch
fstpl
frstor
pop
test
pusha
pusha
adc
test
adc
cmp
cmpw
adc
adc
adc
lock
dec
cli
adc
or
and
mov
adc
inc
or
push
jo
popa
inc
ret
adc
and
dec
sbb
aas
cmp
jne
fchs
cmpl
jne
adc
mov
jmp
and
sub
inc
inc
adc
fistps
lahf
arpl
adc
jne
inc
jmp
faddp
and
fs
lds
adc
or
inc
pcmpgtd
jmp
xor
jmp
xor
and
or
adc
cmp
and
adc
jg
loop
pop
adc
push
or
sbb
test
jne
sub
mov
push
and
and
pop
and
fsave
cmp
adc
inc
and
pop
frstor
fldl
add
jmpw
inc
cmpsb
and
out
adc
mov
pusha
pop
loopne
inc
mov
frstor
mov
adc
sbb
je
mov
std
mov
mov
shr
testl
push
fldt
test
je
sbb
mov
sub
out
test
je
adc
inc
sbb
adc
fstp
es
add
pop
fld1
add
inc
add
out
sbbb
fld
sbbb
loopne
leave
jne
fstp
fldt
shll
cld
fcomp
mov
fwait
inc
dec
adc
pop
fmull
inc
pusha
adc
adc
fstp
and
inc
mov
sbb
adc
push
pushl
adc
mov
inc
or
cmp
adc
add
dec
mov
push
fstpl
fldl
and
push
adc
sbb
adc
adc
and
aaa
adc
sbb
push
mov
arpl
adc
adc
fistpl
and
push
fldz
and
push
adc
fstpl
and
add
jmp
and
pop
adc
add
cs
clc
fldl
pusha
xor
clc
popa
scas
addb
adc
mov
adc
add
jmp
and
pusha
jmp
or
adc
sbb
adc
sbb
adc
dec
inc
sbb
pop
pop
sbbb
fsubl
es
inc
adc
inc
clc
lahf
xor
lea
scas
adc
and
fxch
cmpl
je
fprem
and
ss
sub
sahf
jp
fstp
inc
xor
add
inc
bound
push
push
push
inc
adc
jecxz
mov
push
adc
and
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
and
adc
adcl
inc
stos
adc
push
pop
adc
pop
push
popa
xchg
adc
xchg
inc
aam
jne
xor
adcb
popa
orb
add
addl
jmp
shl
dec
adc
bound
pop
add
push
add
or
jo
loope
adc
pop
inc
cs
dec
adc
and
inc
aas
adc
jne
inc
or
adcl
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
adc
shl
xchg
adc
inc
arpl
jg
inc
adc
sub
andb
cld
adc
pop
shlb
shll
shll
loopne
mov
je
dec
je
dec
and
push
jmp
push
jmp
and
and
test
mov
jne
testl
push
and
shll
and
and
add
ret
and
adc
sbb
loopne
rolb
orb
or
mov
incb
xchg
xchg
adcb
adc
or
dec
adc
leave
std
inc
add
add
ret
in
mov
jg
fildll
add
sub
rol
adc
imul
xchg
jle
adc
pop
inc
adc
repz
pop
dec
dec
adc
push
je
test
jne
cmp
je
push
adc
inc
push
adc
sbb
inc
and
mov
xchg
adc
jb
adc
pop
pop
and
das
rcrl
pop
cmp
pop
jbe
mov
cmpb
jne
push
jg
adc
sub
and
adc
jmp
pop
xor
inc
cmp
and
push
and
cmp
cmp
rcrb
mov
adc
mov
fs
nop
cltd
sbb
mov
mov
jmp
and
cmp
add
jmp
rolb
push
test
inc
adc
inc
cld
sub
jae
lcall
adc
imul
inc
add
std
and
outsl
adc
mov
dec
cmp
mov
call
adc
inc
lea
xor
push
push
inc
movsb
inc
inc
sub
pop
sbb
xor
inc
adc
adc
in
mov
pusha
adc
js
jl
adc
lock
adc
dec
clc
pusha
fcmovb
mov
in
inc
mov
push
rcll
cmp
shl
roll
adc
jo
push
push
pusha
rolb
sub
xor
scas
sbb
inc
fdivl
lea
inc
loopne
fsts
inc
sbb
mov
adc
add
lock
adc
and
inc
sahf
adc
gs
mov
loopne
adc
lea
adc
inc
int3
and
rcrb
movsl
push
jb
and
sbb
xchg
call
pop
pop
andl
and
dec
adc
and
pop
fsubs
or
adc
and
and
popa
popa
fstl
inc
add
loopne
out
cmovo
sub
adc
dec
pop
xor
sub
inc
incb
or
add
popa
jne
js
add
lods
xchg
inc
test
mov
adc
jmp
pop
and
dec
subl
cmp
mov
mov
mov
adc
cld
jl
adcl
pop
adc
dec
inc
cmp
adc
add
cmp
lea
jge
cmp
jle
pusha
push
dec
xchg
adc
incl
adc
inc
xor
inc
adc
pop
int
in
inc
mov
jbe
pop
add
inc
or
add
lock
pop
inc
inc
inc
inc
adc
inc
inc
test
popl
and
adc
pop
push
mov
xchg
and
xchg
and
inc
rclb
testl
push
inc
adc
stc
test
and
mov
and
jge
ret
arpl
and
adc
push
pushl
and
stos
adc
jo
inc
test
je
and
sub
mov
xchg
cmpsl
adc
jl
pop
lahf
adc
and
mov
pop
and
mov
or
ret
fs
jp
and
push
arpl
mov
iret
lds
jns
pusha
push
or
push
or
mov
ret
push
push
mov
jmp
rorb
icebp
adc
and
rclb
imul
in
adc
dec
test
lcall
mov
push
in
adc
and
pusha
push
sbb
add
and
pop
adc
shlb
and
pop
pop
push
in
adc
ss
adc
adc
and
lods
adc
push
add
pop
sub
pop
sub
add
inc
jmp
movzbl
inc
cmp
mov
inc
adcl
pusha
movups
fneni(8087
inc
adc
and
int
inc
adc
mov
and
aas
dec
pop
or
pop
inc
shlb
sbb
iret
cmp
mov
jne
neg
and
sub
in
pop
ret
and
insl
and
add
std
xchg
sub
aas
lcall
push
cltd
mov
push
push
inc
inc
adc
mov
in
adc
add
adc
inc
sti
adc
xorb
mov
aad
rolb
neg
jmp
mov
out
rclb
mov
subb
and
pop
sub
adc
push
sub
adc
mov
and
or
mov
enter
pop
inc
xor
mul
dec
stos
adc
loope
jb
adc
adc
mov
rcrl
pop
adc
xchg
adc
adc
lahf
pop
pop
dec
lret
jge
sbb
adc
movzbl
adc
inc
pop
fistps
addb
push
add
push
mov
test
inc
adc
inc
movsb
and
rorb
adc
movzbl
inc
loopne
adc
and
dec
add
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
cmpsb
and
jmp
mov
cmp
pop
sbb
push
mov
dec
pop
inc
mov
ret
adc
mov
adc
fistpll
xorb
add
adc
fs
lea
add
sbb
movzbl
inc
incl
testb
or
cmp
hlt
push
adc
jmp
push
pop
jl
pushl
cmp
add
jne
push
pushl
push
adc
and
and
sub
pop
inc
inc
adc
jmp
inc
adc
jne
cmovo
inc
std
shl
add
incl
inc
clc
jmp
movzwl
mov
loope
cmp
jne
inc
and
add
push
add
pusha
mov
push
movzbl
inc
incl
testb
je
cmpb
mov
imul
popa
mov
adc
xor
jmp
and
and
inc
orb
xchg
or
lock
sbb
jmp
movzwl
mov
adc
pop
xchg
movzbl
cmp
jne
xchg
xchg
inc
fists
dec
jb
adc
adc
sbb
divl
xchg
add
or
pop
aam
adc
sarb
gs
adc
sbb
cmp
and
sbb
sbb
and
rcrb
mov
shl
icebp
xorb
shr
inc
inc
or
test
shr
rcr
shr
rcr
or
jne
inc
pop
adc
inc
aam
sbb
iret
and
jecxz
out
shll
cmp
adc
jb
and
add
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
dec
addb
scas
adc
sbb
adc
xchg
add
cli
movsb
adc
push
inc
sbb
adc
sbb
adc
and
aaa
fadds
xor
pop
ret
dec
jns
jmp
xorb
sub
mov
sbb
adc
inc
lods
adc
inc
lods
adc
or
inc
std
adc
inc
or
inc
pop
adc
dec
jns
mov
das
jg
cmpl
cmp
jbe
cmp
jb
mull
mov
adc
jmp
cmp
jb
rep
jmp
adc
mov
jmp
loopne
add
pop
iret
adc
fs
loope
call
inc
pop
adc
adc
sub
add
push
inc
add
sbb
rorl
inc
add
add
jmp
add
add
pusha
pop
adc
and
dec
sub
sbb
jmp
add
add
pusha
and
add
nop
mov
jmp
or
sub
add
iret
inc
push
adc
add
lods
inc
add
movsb
inc
add
pushf
inc
add
xchg
inc
add
mov
push
inc
mov
mov
inc
pop
adc
call
pop
adc
inc
movups
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
lea
ds
add
lock
mov
call
inc
or
cld
inc
add
adc
aam
or
adc
add
mov
mov
loopne
pop
lea
lea
sarl
popa
jg
dec
aas
pusha
cld
adc
std
rep
cld
inc
ja
jo
pusha
ja
neg
inc
adc
inc
or
loope
pop
stc
add
or
loopne
sub
adc
mov
pusha
sub
nop
mov
adc
inc
add
mov
and
mov
dec
popa
cmp
daa
push
add
rcrb
mov
out
add
mov
sub
adc
mov
call
out
popa
rcll
jb
pop
add
and
push
adc
add
xor
add
cmp
add
inc
inc
add
dec
inc
add
push
inc
add
addr16
aad
inc
mov
adc
inc
pop
adc
inc
pop
inc
into
adc
sub
mov
inc
pop
inc
movups
pop
adc
mov
mov
pop
dec
sub
addb
mov
adc
pusha
adc
mov
inc
add
daa
xchg
orb
addl
adc
sub
adc
rolb
cmp
jg
jl
cmp
jae
jp
stc
mov
push
adc
cmc
dec
xchg
insl
mov
jne
push
je
pop
push
pop
mov
movb
inc
neg
adc
neg
jmp
inc
cmovo
mov
outsl
inc
adc
out
mov
sub
add
xchg
xor
inc
inc
add
or
push
jmp
add
mov
inc
test
ja
jb
test
ja
andb
dec
inc
outsl
sbb
push
mov
dec
inc
cmp
pop
rcll
jb
lcall
cmp
jae
pop
fistl
jae
shrd
shr
ret
outsb
sbb
xor
jmp
push
add
mov
inc
add
jbe
pop
dec
inc
and
push
adc
or
mov
out
adc
sahf
xor
push
sub
adc
and
iret
adc
jb
addl
pusha
adc
test
adcb
jae
sub
mov
test
mov
push
cmp
mov
std
inc
adc
push
push
and
adc
sbb
push
sub
mov
dec
adc
or
cmpsb
adc
inc
mov
sub
adc
adc
jne
mov
jmp
mov
add
or
sbb
jge
add
push
inc
arpl
jnp
and
jnp
jno
adc
and
adc
fildl
adc
pop
aas
mov
dec
outsl
dec
gs
lea
jp
add
fldenv
enter
and
shr
insl
aas
xor
mov
inc
mov
inc
dec
je
test
mov
mov
shr
dec
aas
push
jecxz
je
mov
das
dec
pop
sbb
inc
mov
adc
cmp
loopne
les
out
pusha
cmp
mov
lea
inc
dec
jne
pop
pop
imul
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
add
add
add
je
test
je
test
je
pusha
pop
dec
pop
adc
mov
jmp
jne
dec
mov
pop
jmp
and
mov
pop
jmp
xor
adcb
int3
adc
pop
inc
adc
pusha
pop
push
jne
and
jne
loopne
mov
insl
xor
sbb
jle
and
and
aas
adc
addb
cmp
push
push
adc
dec
lret
insb
jg
lods
pop
dec
cmp
arpl
and
dec
in
dec
cld
and
jno
lret
ja
jge
add
push
mov
inc
dec
loope
push
loopne
and
xor
cmp
adc
and
adc
dec
pop
and
mov
inc
jns
loopne
jne
adc
aam
push
adc
add
and
inc
shl
push
adc
in
adc
call
lock
leave
ret
pushl
and
int3
push
sub
ret
dec
out
add
ja
int3
xchg
adc
xor
sub
adc
cmp
and
data16
adc
pusha
adc
fidivs
rol
adc
xor
add
and
inc
xor
cmp
ja
sub
adc
popa
sub
lret
fwait
mov
mov
int
sub
add
pop
and
addr16
or
lock
call
adc
inc
pop
cmp
ja
sub
pop
mov
shr
out
loope
jne
pop
add
cli
sbbb
sub
xchg
and
jge
adc
and
and
jl
cmp
adc
push
push
test
pop
jne
xchg
movsb
sbb
push
cmp
jge
mov
mov
and
pop
mov
xor
and
adc
sbb
adc
push
inc
adc
mov
pop
xor
mov
adc
mov
add
add
cmp
jl
xor
mov
icebp
push
xchg
sbb
add
xor
loopne
pushf
adc
add
and
sbb
orl
add
inc
cmp
adc
pop
jae
adc
add
je
add
pop
adc
lea
mov
shll
lock
sbb
sub
sar
add
xchg
imul
shlb
out
jns
and
adc
adc
or
push
add
add
sub
add
push
add
subb
lret
add
and
fsts
pop
pushl
std
lock
mov
mov
sub
inc
add
cmp
jae
jg
adc
ljmp
lods
mov
sub
xor
sub
pusha
add
sar
lea
mov
mov
addl
inc
pop
adc
arpl
adc
nop
jne
adc
ret
push
adc
inc
mov
inc
adc
and
out
inc
mov
adc
adc
adc
cmp
add
andl
ljmp
inc
adc
inc
and
inc
test
jle
pop
or
push
adc
lock
aas
inc
push
iret
mov
test
dec
xor
adc
fldl
adc
iret
sarb
xor
xchg
call
cli
xor
sbb
adc
and
and
pusha
adc
shrb
cli
sbb
scas
sbb
cmpl
je
inc
or
adc
jmp
ret
xorl
adc
and
jb
je
adc
cmp
dec
andl
adc
jne
inc
enter
in
in
inc
loopne
cmc
add
shrb
adc
cmc
adc
xor
sbb
jne
sub
add
filds
pop
lea
pop
ret
lea
fs
xor
mov
mov
adc
fldcw
adc
ret
sbb
mov
inc
cmp
je
test
je
mov
or
push
mov
shl
push
or
mov
mov
pop
adc
dec
mov
jmp
adc
ret
insl
inc
adcb
sbb
xchg
adc
jne
and
jne
pop
pop
pop
and
adc
je
inc
add
out
cmp
je
test
je
shr
or
faddl
adc
inc
adc
jmp
pop
pop
mov
inc
aaa
inc
push
adc
mov
push
and
inc
jno
jmp
add
or
cmp
jg
sub
shrl
mov
push
and
adc
sbb
mov
je
push
call
push
mov
pop
and
adc
or
adc
sbb
xchg
pop
jmp
and
mov
adc
add
sbb
adc
mov
cmp
inc
je
jg
sub
pushf
mov
adc
jge
push
repnz
adc
push
sub
pop
dec
arpl
imul
adc
or
add
testb
je
andb
mov
mov
pop
notb
or
pop
and
adc
adcl
add
repnz
adc
push
and
lcall
jo
push
imul
cld
jmp
jo
adc
mov
cld
inc
in
or
daa
mov
or
push
mov
push
imul
outsb
int
mov
inc
cmp
je
xchg
adc
dec
mov
or
or
adc
pop
pop
pop
inc
shll
lock
lea
mov
inc
lods
adc
mov
dec
icebp
push
cmp
jne
mov
inc
xor
add
adc
je
jmp
and
insb
adc
ret
adc
in
inc
incl
adc
mov
pusha
add
push
ficoml
mov
adc
filds
adc
adc
pop
mov
push
sub
cs
push
mov
cmp
je
cmp
ja
cmp
push
lahf
add
je
mov
sub
mov
cmp
je
cmp
jne
inc
cmp
jne
cmp
je
mov
and
dec
cmovp
leave
sbb
neg
dec
mov
std
repnz
inc
cmp
and
push
adc
mov
cld
lods
inc
and
jne
xor
add
roll
jb
sbb
movzbl
testb
push
add
push
adc
movzbl
popa
jl
dec
sbbb
adc
test
jmp
pusha
or
inc
and
jne
adcl
sbb
mov
testl
sbb
test
jle
inc
sub
mov
rcrl
and
adc
pop
cwtl
pop
xor
push
insl
adc
lods
sbb
rep
pop
mov
mov
clc
add
lret
and
shr
loope
rolb
or
inc
inc
outsb
adc
mov
dec
adc
jns
adc
sbb
add
lock
pop
and
shl
shr
mov
test
je
jb
je
inc
jmp
mov
mov
inc
or
inc
and
push
and
pop
shl
loopne
adc
jne
and
andb
inc
inc
dec
sbb
mov
mov
sub
and
cmc
adc
sub
hlt
scas
adc
and
inc
insb
and
jb
adc
xor
je
dec
je
les
out
sub
adc
mov
shl
add
pusha
push
sbb
add
jmp
pop
add
je
mov
jne
pop
ret
sub
out
scas
or
lret
test
iret
and
loopne
dec
cld
inc
sub
and
jmp
sbb
jmp
or
or
add
enter
movsb
pop
movsb
pop
inc
add
jne
je
mov
adc
inc
sub
sbb
add
adc
sub
inc
rclb
xlat
jnp
xlat
adc
adc
int
ficoml
add
adc
in
je
sub
adc
jne
push
lods
adc
xor
notb
test
adc
ret
nop
xchg
lea
mov
mov
mov
cmp
jb
inc
or
repnz
or
or
cmp
jmp
inc
adc
mulb
adc
inc
or
clc
pusha
sbb
pop
add
cmc
adc
mov
adc
adc
dec
imul
push
orb
inc
mov
sbb
sub
mulb
sbb
stc
mov
mov
cmp
sarb
loopne
adc
sarb
loopne
adc
xor
adc
push
je
and
iret
adc
insl
and
push
hlt
adc
cmp
push
xor
push
pop
mov
sbb
mov
mov
mov
mov
mov
mov
movl
movl
inc
dec
outsl
and
jle
inc
sbb
std
inc
adc
cmp
or
rcrb
dec
inc
push
adc
or
sbb
and
dec
je
push
push
lea
pop
lea
cmp
jbe
and
pop
rep
pop
pop
sub
ret
int3
pop
mov
add
sub
lcall
cmpsl
add
cmp
je
lea
pop
xor
pop
nop
or
je
mov
cmp
adc
inc
adc
adc
shr
or
btr
mov
arpl
mov
ja
sbb
pop
add
jp
mov
je
xor
adc
rolb
mov
mov
add
bound
fisubl
bound
inc
in
and
adc
addr16
lret
adc
in
stos
sub
and
jae
jle
cmc
add
test
xor
or
sub
adc
and
adc
aas
adc
int3
inc
inc
adc
divl
jle
push
ss
adc
lret
adc
test
and
cmp
ja
adc
int3
adc
cmp
je
lret
adc
push
sahf
fwait
adc
ficomps
jmp
and
cmp
je
mov
dec
dec
cmc
adc
mov
and
xor
faddl
adc
mov
addb
xlat
add
cmp
jne
inc
lahf
adc
push
dec
aam
or
insb
loop
or
push
push
sub
and
add
fisubrl
adc
fidivl
cmp
jne
inc
pop
and
sub
push
add
push
and
mov
pop
adc
test
test
adc
cmp
test
adc
pop
and
and
push
popa
bound
fwait
or
fs
pop
loopne
adc
divl
mov
or
pop
adc
daa
pop
add
and
mov
adc
clc
mov
and
insl
ficoml
jae
mov
shr
and
adc
pushl
dec
mov
dec
iret
inc
or
mov
jne
adc
adc
pop
sub
shl
mov
shll
aad
and
inc
add
adc
and
outsl
cmp
push
daa
sub
shll
adc
imul
jmp
push
and
adcl
adc
mov
aaa
rcll
inc
push
adc
dec
mov
xor
pop
ds
dec
adc
mov
sub
adc
and
and
pop
sub
outsb
dec
add
xchg
and
or
add
xchg
and
or
cmp
xchg
and
cli
fwait
sbb
or
je
and
sub
jmp
fs
int
pusha
add
and
adc
bound
imull
xor
adc
adc
andb
push
pop
adc
cmpl
adc
adc
or
cltd
fists
data16
faddl
orb
cmp
add
mov
inc
inc
dec
pop
sbb
sub
sar
dec
ret
push
and
sub
push
inc
push
adc
pop
pop
and
adc
movsb
and
inc
fistl
inc
adc
inc
fs
fimull
jp
fs
adc
inc
mov
lock
fcoms
loopne
and
push
ja
loopne
mov
adc
pop
je
in
adc
imul
inc
add
in
dec
adc
xor
cmp
sub
add
inc
dec
adc
and
adc
cmp
and
cld
imul
xlat
push
fiadds
pop
loopne
pop
dec
test
jmp
and
adc
stos
adc
inc
rcll
adc
xchg
xchg
and
pusha
dec
adc
push
inc
pop
and
and
adc
loopne
ds
pop
push
sub
push
adc
cmp
daa
dec
add
xor
adc
sub
push
add
mov
sbb
xchg
adc
roll
add
das
daa
xchg
in
adc
sbb
jne
mov
mov
or
je
dec
inc
add
les
inc
cmp
sbb
and
add
add
xchg
sub
add
rcrb
rcrb
mov
incl
cmp
jg
push
jmp
lock
adc
add
call
adc
adc
nop
inc
adc
pusha
adc
inc
dec
jb
repnz
adc
jecxz
and
lock
pop
adc
ret
je
dec
jg
fdivr
mov
pop
pop
out
or
dec
dec
mov
adc
and
daa
adc
and
inc
adc
clc
adc
adc
mov
cmp
jne
inc
or
call
pusha
or
cs
or
out
sbb
ljmp
adc
inc
or
cli
pusha
or
adc
or
loopne
or
clc
pusha
or
pop
mov
jmp
lea
push
adc
inc
push
jb
adc
bound
and
adc
dec
mov
xchg
and
push
adc
and
pop
adc
adc
mov
inc
add
pop
mov
push
movzwl
pusha
add
cli
pusha
add
clc
pusha
add
mulb
adc
pusha
add
test
adc
adc
inc
cmp
into
adc
mov
inc
inc
push
inc
xor
pop
inc
xor
orb
pop
test
push
cld
and
and
inc
or
inc
and
and
fidivrs
and
daa
inc
pop
sbb
lea
mov
mov
mov
and
lea
cmpl
je
push
push
lea
call
pop
pop
inc
inc
dec
or
xor
inc
and
inc
sbb
adc
adc
mov
test
and
adc
adc
sbb
xor
jmp
and
sbb
cs
adc
and
cmp
xor
and
and
push
and
push
sub
inc
and
and
xor
push
push
pop
mov
daa
adc
movsl
adc
ja
adc
je
cmp
loopne
adc
andnps
das
push
adc
mov
addb
mov
jp
adc
inc
popa
pop
pop
inc
bts
jmp
and
nop
inc
mov
pusha
adc
inc
bt
jae
mov
dec
xchg
and
pop
inc
jae
cmp
pop
data16
push
sti
pop
lea
stos
mov
mov
shr
cmp
insb
insl
adc
mull
leave
ret
and
and
add
and
and
adc
and
and
push
das
adc
popa
rclb
je
and
testb
je
inc
sbb
leave
and
push
push
divb
push
sahf
mov
adc
and
leave
cs
adc
inc
jno
adc
inc
adc
and
push
add
adc
jecxz
add
inc
adc
mov
adc
mov
inc
jbe
jg
dec
dec
adc
adc
adc
add
fistps
and
adc
xchg
xchg
inc
adc
icebp
inc
adc
roll
xor
adc
jno
adc
mov
adc
inc
adc
mov
and
inc
adc
icebp
inc
dec
inc
sub
adc
scas
cmp
xor
scas
adc
jge
jae
and
lret
adc
jae
and
and
shlb
mov
mov
dec
dec
inc
int
adc
inc
inc
inc
sbb
sbb
pop
cmc
adc
pusha
adc
push
addb
adc
pop
shr
or
add
incb
mov
dec
push
push
adc
adc
and
sahf
and
xor
adc
sub
adc
sub
out
es
and
or
push
or
das
and
and
inc
push
adc
inc
push
adc
pop
inc
add
addb
das
and
insl
inc
sub
and
sub
and
insl
insb
sub
and
sub
and
sub
and
and
aas
adc
inc
outsl
adc
inc
add
in
add
faddl
adc
inc
add
int3
inc
add
les
adc
adc
push
add
das
and
lock
inc
add
sub
add
inc
pusha
adc
das
das
and
imul
xchg
inc
or
das
and
test
mov
pusha
sub
nop
mov
inc
add
add
sub
and
xor
pusha
sub
das
and
outsb
ljmp
das
and
outsl
sbb
das
and
pop
adc
adc
adc
adc
adc
adc
adc
aad
and
and
add
adc
inc
add
fsubl
add
das
and
adc
push
lret
cmp
inc
and
adc
and
adc
shlb
jbe
mov
sahf
fists
push
and
inc
notb
ret
icebp
jns
sbb
adc
jecxz
sbb
mov
and
jmp
or
sbb
or
mov
push
adc
sbb
jmp
es
adc
jmp
loopne
adc
inc
jmp
and
pop
inc
inc
adc
and
cs
shlb
and
daa
inc
fcmovnb
jle
pop
sbb
je
movzbl
mov
je
dec
dec
cmp
cmp
adc
push
add
mov
jmp
and
cmp
jne
movzbl
push
inc
and
mov
dec
add
pop
ret
daa
mov
adc
add
mov
and
sub
add
mov
sub
and
and
shlb
sti
and
adc
neg
inc
dec
adc
sarl
adc
mov
inc
in
adc
shll
adc
sbb
and
shr
add
adc
adc
inc
and
add
movzbl
mov
add
pop
cmp
add
push
adc
ja
add
cld
adc
setne
inc
sub
adc
xchg
add
adc
push
sub
shlb
adc
and
adc
ficomps
fcoml
test
sub
inc
sbb
adc
lahf
ficoms
adc
xchg
cmp
int
inc
and
clc
push
add
rol
inc
and
and
rorb
and
cmp
or
and
mov
adc
mulb
and
rclb
push
mov
js
adc
xlat
inc
jl
je
and
je
add
push
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
inc
or
cmp
inc
inc
adc
pop
loope
mov
inc
es
mov
sub
cmpsl
je
mov
mov
inc
and
jne
shr
call
adc
cmp
mov
sbb
pop
dec
add
pop
ret
inc
jge
adc
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
adc
add
cmp
jne
dec
dec
repz
bound
push
adc
mov
jo
adc
cmp
pop
jne
sub
dec
je
inc
adc
dec
push
je
mov
sub
movups
dec
rclb
pop
adc
cmp
ljmp
pop
jmp
daa
lldt
pop
jmp
push
adc
and
adc
and
dec
adc
jp
and
adc
add
ds
push
in
cmc
inc
and
adc
cmp
jle
cmp
jge
sub
pop
and
inc
imul
pop
cmpl
adc
je
pusha
adc
and
adc
pop
inc
sbb
add
lock
movl
adc
jo
pusha
adc
ss
xchg
push
mov
pop
je
sub
adc
cmp
outsl
add
pop
cltd
mov
idiv
test
mov
jge
add
mov
sub
inc
cmp
incl
inc
and
pop
inc
push
push
push
add
or
mov
cltd
idiv
pop
add
repnz
and
stc
pusha
and
or
inc
inc
adc
and
idiv
mov
test
pop
rcrb
jle
mov
push
add
pop
inc
sub
mov
inc
pop
adc
inc
insb
jmp
add
and
ds
jge
andb
lea
sub
add
inc
inc
lahf
push
jg
add
decl
mov
movl
adc
inc
aam
add
xor
xor
add
fdivs
je
and
and
xchg
jne
and
mull
adc
lahf
pop
pop
and
mov
mov
sbb
call
push
push
jne
insb
push
add
push
and
cmp
mov
adc
jne
pusha
adc
add
adc
push
pop
out
pop
push
pop
cmp
adc
rorb
mov
cmp
jp
loop
sti
in
adc
adc
adc
lahf
stos
and
iret
and
and
push
lea
cmp
jb
and
sub
push
mov
in
pop
push
sbb
test
pop
pop
push
sub
adc
adc
dec
adc
arpl
pop
mov
mov
adc
push
add
xor
mov
popa
xor
cmp
adc
and
add
in
and
cmp
loopne
xor
adc
mov
loopne
mov
and
sub
inc
mov
xchg
mov
loopne
popa
adc
and
mov
adc
add
mov
add
adc
sbb
adc
test
into
dec
pusha
pop
adc
jne
imulb
inc
adc
inc
sub
aam
rolb
inc
imul
adc
shr
push
dec
test
fcoml
daa
int3
adc
jmp
mov
jmp
sbb
jne
jmp
sub
iret
adc
push
sub
call
and
mov
arpl
and
sub
jne
sub
and
cld
sub
mov
jmp
mov
adc
push
and
and
sub
sub
add
xchg
xor
add
or
mov
shl
sub
add
iret
cmp
adc
and
inc
call
sub
jp
and
loopne
pusha
dec
adc
arpl
insb
xor
push
and
xor
mov
lea
mov
daa
jnp
adc
sub
and
xor
add
rolb
xchg
sbb
orl
jmp
cmp
jne
inc
pop
inc
adc
push
movsb
adc
mov
add
test
jg
sbb
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
adcb
mov
dec
adc
dec
adc
inc
sub
jne
sbbb
add
pop
jne
mov
inc
pusha
arpl
adc
adc
mov
sarb
xor
or
mov
xor
and
jmp
or
xchg
daa
sub
adc
and
jge
adc
mov
rcrl
jmp
jae
mov
inc
in
adc
jb
inc
mov
adcl
lret
add
add
or
adc
add
mov
push
adc
incl
mov
repnz
jb
adc
cmp
and
ss
adcb
dec
test
inc
pop
pop
jg
sbb
push
adc
jge
out
jl
xorb
repz
jbe
inc
xchg
hlt
testb
movl
insl
adc
and
adc
adc
add
and
add
inc
js
mov
inc
sub
add
adc
and
clc
jmp
inc
xor
insl
adc
gs
adc
and
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
cmpb
add
and
or
mov
pop
mov
ret
cmp
jb
cmp
inc
out
sub
shrb
add
rorb
inc
pusha
loopne
adc
mov
pop
mov
mulb
mov
pop
cmp
adc
and
adc
pop
and
loope
push
and
cwtl
inc
mov
je
shlb
cmp
pop
lea
adc
inc
push
inc
adc
test
mov
adc
andl
daa
adc
cmp
mov
adc
xchg
popa
push
in
and
mov
test
and
dec
sbb
mov
decl
mov
cmp
mov
js
andb
xor
add
jmp
fs
adc
loopne
adc
xor
rep
inc
mov
stos
lea
cmpb
mov
je
mov
test
je
and
ja
mov
mov
nop
pusha
inc
push
inc
cmp
jbe
inc
inc
and
adc
cld
add
sarl
add
adc
pusha
movsb
popa
adc
jo
mov
inc
cmp
mov
movsl
pop
mov
jmp
inc
inc
adc
inc
mov
inc
and
mov
push
adc
je
adc
jo
sub
mov
aam
adc
pop
andl
dec
pop
stos
stos
stos
jmp
cmpl
punpcklbw
adc
inc
insb
adc
mov
lods
and
sub
adc
cmp
jne
movl
xchg
les
std
sub
adc
adc
jne
mov
sbb
orb
movsb
and
sbb
sub
adc
or
and
mov
ret
mov
test
ret
mov
push
es
adc
stos
stos
rol
pop
adc
inc
iret
and
sub
lea
inc
mov
adc
and
and
adc
jg
inc
pop
fistl
movb
popf
sbb
push
push
lea
movzbl
dec
mov
sbb
subb
inc
mov
stos
sub
mov
jmp
stos
inc
inc
mov
test
jne
pop
pop
push
insb
adc
sub
or
push
adc
cmp
and
push
dec
sbbb
pop
fwait
and
and
les
adc
adc
mov
test
je
mov
xchg
add
nop
and
ret
adc
sbb
adc
jecxz
mov
inc
inc
inc
inc
add
mov
push
lods
adc
push
test
dec
adc
mov
cmp
jb
cmp
ja
loopne
push
enter
fsubp
arpl
dec
inc
dec
adc
cmp
jne
push
add
jns
movl
adc
jnp
pop
scas
int
mov
dec
adc
stc
inc
jl
cmp
jg
mov
test
jl
cmp
jle
push
mov
push
and
adc
lret
pop
idiv
dec
add
push
adc
add
dec
inc
or
loopne
adc
inc
sbb
test
mov
aaa
aas
sbb
add
inc
lea
imul
sar
add
lea
adc
and
push
test
jl
test
jl
jmp
test
jge
out
sub
fs
or
shl
dec
lock
adc
xor
cmp
setne
mov
clc
loop
xchg
xchg
ja
inc
or
shlb
jl
orb
push
cmp
inc
add
cmp
inc
add
cwtl
jae
mov
sub
jbe
es
add
daa
pop
cmp
adc
mov
inc
inc
push
adc
mov
jl
inc
inc
adc
push
jge
push
adc
and
xor
lea
mov
and
cltd
pop
cmp
leave
jg
jge
cmpl
jle
lea
sub
adc
push
and
dec
sahf
and
adc
pop
rep
cltd
mov
test
in
xor
fildl
int
adc
cmpl
lcall
aaa
push
mov
test
mov
sbb
mov
mov
mov
and
sbb
imul
add
lea
xorb
add
lock
sub
inc
inc
push
pop
adc
lock
pusha
or
add
and
add
pushf
sbb
mov
idiv
mov
mov
imul
add
and
adc
mov
and
sbb
cmp
jge
inc
add
jmp
inc
adc
dec
mov
push
sub
and
mov
mov
insl
cwtl
adc
add
push
popf
inc
popf
adc
push
dec
jl
dec
sahf
sbb
pop
mov
imul
pop
and
push
mov
imul
sub
andl
mov
mov
and
addl
test
cmpsl
and
bound
adc
test
adc
je
cmp
dec
adc
and
ds
sub
mov
and
push
pop
dec
or
dec
push
mov
je
adc
adc
adc
adc
sarl
lea
shl
mov
add
andl
adc
pusha
and
inc
add
cmp
jl
and
xor
add
add
pop
sbb
movl
jmp
cmp
nop
je
jmp
cmp
test
adc
ds
jno
jmp
cmp
jnp
adc
push
cmp
sub
cmp
pop
inc
mov
xor
pushl
pop
fistps
rcrl
jle
pop
pop
jmp
pusha
call
push
and
sbb
inc
mov
dec
adc
inc
sbb
xor
ret
lea
lea
dec
dec
pop
cmp
jae
cmp
jne
lea
lea
cmp
pusha
or
sub
jnp
clc
push
push
mov
push
adc
jne
je
adc
and
sub
adc
push
adc
leave
adc
inc
inc
and
and
inc
jmp
cmp
jbe
push
adcl
ja
and
cmp
push
and
ret
pop
ret
les
ljmp
enter
decl
adc
mov
sbb
call
daa
jb
and
and
and
pop
jle
inc
adc
pop
je
push
outsb
loop
ljmp
std
cmp
mov
lret
idivb
ret
pop
mov
es
push
and
outsl
gs
inc
sbb
std
cmp
jne
pop
incl
adc
mov
pop
pop
movl
push
cs
inc
mov
push
mov
adc
mov
xor
push
cmp
je
mov
pop
adc
leave
mov
push
push
and
addr16
mov
adc
mov
aam
add
cmp
inc
mov
loopne
inc
adc
int3
pusha
xor
adc
mov
pop
pop
mov
mov
xchg
push
push
andl
jne
adc
pushl
mov
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
stc
cmp
je
incl
and
jnp
jae
adc
orb
aad
or
jmp
orb
andb
inc
pusha
inc
adc
jmp
adcb
add
adc
mov
testb
mov
mov
inc
inc
adc
je
inc
sbb
cmp
jne
test
jne
dec
inc
inc
pusha
dec
sbb
add
cmp
and
outsl
adc
add
inc
jmp
adcb
daa
scas
daa
mov
adc
add
imull
xor
cmpb
jne
inc
inc
jmp
pusha
xchg
add
sub
ret
add
xor
cmp
je
cmpb
lea
pop
cli
adc
jmp
pop
and
cmp
sete
mov
shr
mov
dec
push
stos
adc
inc
pusha
mov
movb
inc
incl
dec
jne
mov
in
adc
fdivl
adc
pusha
mov
aas
inc
mov
je
and
inc
adc
inc
sub
sbb
loop
adc
mov
mull
inc
adc
inc
je
pushl
xor
jmp
push
push
adc
inc
inc
adc
and
sbb
add
push
push
mov
addr16
sub
adc
xor
xor
cmp
jne
call
mov
cmp
je
movl
outsb
mov
je
sbbb
pop
dec
adc
add
pop
adc
test
inc
adc
aas
adc
test
xor
mov
je
inc
inc
cmp
jne
mov
mov
sar
push
push
inc
push
push
push
push
push
push
pop
popf
adc
jb
adc
mov
and
push
push
dec
jge
and
and
adc
scas
pop
arpl
adc
and
jo
sahf
adc
jmp
outsl
mov
fs
sbb
cmp
pop
mov
je
inc
cmp
jne
pusha
add
imulb
movl
lcall
sub
or
push
xchg
and
and
pop
pusha
cmp
push
popa
mov
adc
adc
push
or
bnd
xor
mov
movl
xchg
sbb
lock
andb
orl
and
dec
adc
inc
add
adc
pop
adc
fimuls
dec
push
lahf
adc
inc
jns
roll
or
or
cmp
cmp
adc
clc
jl
rclb
cmp
push
mov
xchg
add
adc
mov
lea
jae
andb
adc
jmp
sbb
inc
add
shlb
addb
dec
adc
mov
push
mov
test
jle
and
inc
adc
and
pop
push
cmp
xor
adc
push
call
and
jg
mov
sar
fdivl
or
and
xor
lea
inc
pop
and
mov
pop
negl
inc
inc
cmp
jl
xor
mov
fildl
xor
jne
test
movb
jne
push
pop
jmp
mov
dec
jp
adc
adc
iret
inc
mov
jo
or
lods
in
mov
popa
in
push
orb
adc
jno
adc
inc
or
or
sbb
addb
add
xor
adc
scas
cmp
adc
adc
je
push
imul
std
je
dec
shlb
adc
adc
sbb
dec
mov
mov
dec
add
push
mov
pop
mov
imul
outsb
enter
and
pop
adc
push
inc
stos
adc
and
addb
clc
call
and
aas
sub
add
es
add
adc
mov
jmp
test
xor
adc
pop
daa
adc
andl
lret
cmpw
jne
mov
and
sbb
rorl
inc
sbb
adc
adc
out
lea
push
push
movl
inc
inc
jle
sbb
adc
mov
add
inc
fstpl
add
in
ljmp
adc
imul
inc
lahf
adc
inc
adc
fisttpl
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
mov
push
push
jp
and
mov
lea
adc
adc
popf
pusha
adc
lea
add
dec
push
inc
enterw
adc
push
pusha
or
adc
xor
enter
push
cmpb
jne
mov
jmp
cmp
repnz
and
imul
out
adcb
and
adc
mov
cmpb
and
sub
inc
and
and
adc
outsl
cmp
sete
inc
mov
adc
rclb
add
inc
inc
adc
or
je
adc
or
and
cltd
adc
and
or
mov
dec
cmp
mov
jl
or
cmpl
jne
push
incb
push
mov
jno
mov
adcb
and
push
mov
xor
mov
cmp
je
push
mov
inc
cmp
jb
push
mov
shl
cmp
test
xor
loopne
sbb
test
test
push
dec
shlb
jo
sub
jne
je
lea
push
cwtl
adcl
and
adc
push
push
lea
adc
fcoms
jbe
mov
dec
mov
add
jo
clc
push
and
and
adc
adc
arpl
push
mov
das
scas
rcrb
scas
pushl
push
mov
pop
shlb
enter
jns
add
pop
jmp
dec
icebp
adc
dec
and
pop
and
adc
ss
movsb
imul
sbb
xchg
push
adc
ret
push
add
add
adc
in
adc
fldl
adc
adc
adc
fldl
fdivl
fmull
fsubrl
fstpl
fsub
dec
jae
jnp
and
cmpsb
bound
dec
adc
pop
and
mov
cmp
adc
adc
inc
jns
add
shlb
mov
adc
imul
popa
sub
loop
cmp
pop
je
inc
fists
mov
adc
dec
cmp
aam
or
mov
pop
jp
mov
mov
mov
mov
inc
test
jne
movsb
stos
adc
or
pop
or
lret
mov
pop
or
jne
mov
jle
adc
sbbb
or
or
add
jmp
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
orb
add
add
shll
cmp
push
push
push
adc
inc
inc
lods
adc
and
and
pop
mov
and
pop
adc
leave
ret
and
xor
adc
sbb
adc
adc
lea
and
xchg
adc
and
pop
popa
adc
mov
push
adc
adcb
add
xor
adc
sub
leave
dec
push
adc
add
jge
adc
and
xchg
inc
pop
adc
pop
pop
and
sub
or
and
dec
adc
xor
pop
and
mov
jl
adc
lahf
shlb
ds
dec
adc
pusha
cwtl
adc
rcrl
inc
nopl
pop
sub
and
mov
lea
mov
mov
mov
jo
dec
adc
inc
iret
push
sete
add
add
dec
ret
inc
mov
cmp
inc
adc
add
xchg
adc
inc
add
dec
jns
neg
movb
inc
cmp
jl
mov
push
and
lods
adc
add
adc
inc
push
adc
adcb
or
push
add
add
and
jp
push
xor
inc
hlt
add
and
adc
inc
and
push
adc
dec
adcl
and
dec
dec
and
pop
adc
and
cld
pusha
adc
pusha
ficompl
lret
mov
movb
andb
popa
sbb
sti
inc
sbb
sub
outsl
lcall
pop
inc
ss
pop
xor
jmp
add
jo
adc
loopne
adc
mov
mov
inc
inc
cld
adc
andb
fsubrp
pop
neg
cmp
jl
pop
xchg
and
jle
xor
push
sub
adc
mov
es
add
cmp
xchg
cs
add
inc
hlt
mov
lea
cmp
notl
lock
insb
repnz
add
pop
mov
setl
push
loope
jl
cmp
jge
inc
hlt
adc
mov
repnz
adc
stc
and
popa
and
add
sub
jle
adc
rclb
or
and
adc
adc
xor
adc
sub
add
adc
repz
pop
adc
and
rclb
or
jmp
or
adc
adc
rolb
adc
and
dec
test
mov
add
pusha
or
les
pop
and
and
movb
or
jne
fxch
fyl2x
jmp
rclb
xor
fldl2e
fmulp
inc
push
pop
or
hlt
into
push
and
adc
call
dec
into
adc
icebp
and
sbb
jo
ret
add
std
or
and
push
inc
adcb
and
xchg
pop
or
adc
in
addr16
add
aad
pop
adc
jmp
pusha
sbb
sbb
adc
pop
push
mov
fldln2
inc
and
in
fnstsw
testb
rcr
icebp
ret
shlb
xor
cli
and
jne
ret
fldlg2
jmp
pusha
xor
adc
xorb
inc
adc
push
fldz
and
cmp
jb
sbb
in
inc
sbb
jmp
fstp
pusha
cmp
adc
pop
sub
add
add
loopne
sub
adc
xor
add
adc
fld
fabs
fldt
fcompp
sub
add
xchg
and
push
es
add
mov
leave
fsub
and
loope
lock
inc
adc
fsubs
add
rcr
and
sbb
je
and
and
adc
and
push
and
adc
inc
add
add
jp
and
pop
sbb
add
pop
data16
pusha
adc
es
sbb
adc
popf
pop
inc
addb
or
and
mov
jmp
mov
mov
lods
pusha
add
xchg
in
xchg
imul
adc
fwait
mov
loope
stc
rol
mov
and
xlat
movsbl
and
fiaddl
fadds
add
data16
fxch
mov
loope
adc
mov
sar
rol
mov
inc
js
mov
daa
test
adc
or
mov
inc
push
adc
fstp
jp
adc
enter
aam
fldz
ret
addb
call
inc
push
adc
lods
bound
adc
test
add
mov
or
add
add
ret
fxch
fstpt
add
or
sub
jmp
shrb
daa
add
and
es
inc
pop
adc
jg
sbb
or
inc
addl
and
push
adc
mov
popf
adc
and
adc
adc
insl
push
inc
call
and
jno
loopne
push
push
inc
jns
fldl
and
mov
jg
je
fldcw
enter
bound
mov
fld1
std
xlat
shrb
fstp
jae
adc
loop
faddl
mov
fldcw
ret
test
je
and
adc
faddl
mov
and
pop
and
pop
adc
add
adc
adc
jg
mov
sbb
or
loope
inc
nopl
or
fldt
add
and
adc
inc
sbb
inc
add
add
and
adc
pop
ret
pop
fstl
and
cmp
and
je
inc
aas
orb
or
and
insb
adc
psadbw
subb
xor
adc
int3
cmp
add
les
adc
adc
imul
and
pusha
dec
adc
loopne
adc
sbbb
cli
sbb
pop
pusha
push
adc
shlb
mov
inc
cmp
std
fstp
fs
adc
sbb
aam
mov
jae
fmull
jmp
fldl
adc
and
adc
sahf
fmull
xchg
and
adc
xor
xor
and
inc
cmovno
inc
and
lock
inc
add
cmp
jne
cmp
jne
and
ja
sub
and
pop
adc
pop
push
adc
pop
int
adc
cmp
jne
pusha
cmp
push
sub
add
inc
sub
jmp
and
cmp
push
cwtl
push
hlt
inc
mov
adc
mov
pop
inc
push
adc
ja
adc
fldz
jmp
cmp
jne
inc
xor
sbb
adc
sti
and
pusha
inc
adc
mov
inc
and
jmp
sub
adc
pusha
sbb
push
js
push
add
out
shlb
fld1
fstl
pop
sbbb
dec
xor
mov
mov
pop
jne
daa
iret
es
pop
adc
xor
adc
and
pusha
and
jge
mov
fs
cld
mov
adc
jne
inc
mov
subb
pop
loopne
and
and
sbb
add
and
insb
push
xor
add
outsl
outsl
adc
lods
js
mull
dec
cli
enter
pushl
lea
and
adc
adc
adc
andl
push
and
adc
and
outsb
adc
adc
ret
xor
sbb
rclb
sbb
sub
adc
inc
sbb
fwait
add
sbbb
adc
add
pusha
popf
inc
xor
xchg
adc
and
sub
rclb
in
adc
push
push
clc
adc
in
adc
mov
popf
adc
je
and
adc
js
adc
pop
add
out
and
xchg
inc
adc
adc
test
loopne
js
inc
adc
adc
adc
inc
adc
or
inc
mov
adc
inc
adc
orl
inc
or
mov
mov
not
and
and
shl
or
pop
and
pusha
sub
not
inc
sbb
and
shl
and
or
sub
add
shr
addl
mov
add
shr
int
cmp
std
cs
add
cmp
incb
outsb
test
je
and
sub
or
test
loopne
adc
test
loopne
adc
test
je
inc
or
jns
test
and
and
or
mov
mov
and
je
cmp
je
cmp
or
shll
dec
xor
or
jmp
loope
push
dec
adc
decb
iret
and
std
or
mov
push
jae
and
and
pusha
inc
inc
sbb
adc
and
cmpb
jecxz
sbb
xor
out
leave
add
sbb
orb
or
dec
push
and
adc
and
sbb
shl
and
inc
shlb
adc
pop
cmpb
and
mov
or
addr16
pop
and
imul
dec
push
sbbb
mov
mov
adc
fldl
fstpl
jmp
adc
jl
sub
mov
adc
and
inc
sbb
testb
mov
inc
or
or
adc
inc
or
adc
inc
mov
andl
test
sbb
push
dec
lock
loope
sub
and
je
dec
jne
orb
jmp
mov
and
or
jmp
xchg
sbb
in
or
mov
jmp
and
mov
adc
fistps
adc
mov
je
dec
jne
and
jmp
mov
and
or
jmp
mov
push
fldl
fstpl
daa
mov
popf
adc
push
cmp
test
pop
je
test
je
and
and
inc
or
xlat
push
push
testb
je
and
sbbb
sti
sbbb
test
je
sbb
popf
adcb
fisttps
adc
enter
mov
and
popa
call
and
and
push
test
adc
fldl
adc
pop
add
push
add
and
cs
add
pusha
daa
pusha
das
and
sub
pusha
sbb
outsl
add
mov
test
mov
test
push
ja
push
xor
inc
lret
mov
and
jo
adc
test
inc
add
hlt
jae
and
lcall
lea
cmp
jge
fldz
mov
inc
adc
jmp
sub
adc
mov
push
aas
add
mov
and
or
mov
mov
cmp
jge
sub
test
je
push
sbb
adc
pop
clc
pop
mov
dec
testl
inc
mov
and
push
mov
pop
je
adc
and
rcll
and
test
pusha
push
adc
pop
inc
adc
pop
pop
dec
add
cmp
sbb
push
sbb
je
and
push
and
adc
inc
in
and
imul
sub
leave
pop
adc
mov
imul
mov
push
jp
push
and
imul
scas
push
adc
mov
popa
jb
sarb
sub
fwait
adc
sub
mov
je
adc
sub
adc
and
and
es
and
push
lds
orb
mov
cmp
adc
push
leave
popa
adc
popf
dec
adc
mov
inc
jl
add
add
push
adcl
rclw
push
cmpsl
adc
push
pop
ret
pop
sbb
loopne
shl
and
pusha
dec
sub
push
inc
iret
adc
and
inc
xlat
adc
loopne
or
inc
xchg
adc
out
adc
rolb
adc
addr16
adc
inc
pop
adc
adc
jmp
sub
adc
adc
cmp
inc
adc
cmp
and
pusha
adc
pop
mov
sub
adc
pop
inc
dec
and
adc
insl
adc
fldz
xor
inc
addb
sbb
leave
testw
adc
sub
add
and
bound
sub
inc
push
adc
shll
testb
je
orl
shll
dec
jmp
andw
cmp
bound
jecxz
adc
mov
and
aaa
dec
jno
adc
inc
rcrl
shr
and
lock
inc
dec
jnp
clc
mov
cmp
push
fstsw
movswl
mov
fnclex
es
add
fstcw
mov
adc
adc
dec
cld
or
ja
adc
insl
or
and
cld
enter
dec
inc
in
adc
sub
fistpl
fwait
data16
adc
dec
adc
fwait
inc
or
pop
inc
and
mov
adc
inc
pusha
adc
or
jae
fldpi
pusha
sbb
rorl
jbe
adc
xor
push
fcoml
fstcw
enter
push
orb
mov
mov
jp
jnp
fstl
jmp
sub
and
mov
movsl
pusha
push
adc
loopne
mov
and
cmp
dec
loopne
rcrb
adc
movb
pusha
dec
adc
inc
dec
mov
scas
adc
fstl
lea
adc
pop
mov
inc
cmp
je
inc
or
xor
adc
jne
sbb
pusha
pop
mov
es
or
movl
adcl
ss
push
and
push
out
or
or
adc
mov
dec
jp
sub
packssdw
or
jmp
mov
fldl
adc
sub
or
push
push
mov
mov
dec
adc
cld
lea
adc
movsl
cmpb
je
lea
pop
jge
movsl
movsl
fstpl
lea
adc
mov
push
inc
cmc
test
fstl
pop
fldl
pusha
std
adc
xor
add
jno
mov
adc
psraw
and
and
xor
mov
and
addr16
lret
decl
adc
pop
rclb
or
pop
mov
fldt
jmp
inc
ss
insb
and
inc
add
add
scas
adc
rorb
and
and
mov
push
insl
fstps
push
je
fdivrp
ret
shr
mov
les
adc
jne
push
and
push
addr16
fnstcw
hlt
call
sbb
aas
inc
dec
adc
call
and
and
subb
xor
pop
fmuls
leave
loopne
inc
and
sbb
push
adc
or
pop
rclb
push
je
adc
aas
insl
add
je
mov
aas
and
add
jae
dec
xchg
orb
jb
jecxz
push
adc
fmuls
jl
add
call
fxch
fwait
pusha
jae
test
push
xchg
jl
sub
and
jmp
fdiv
push
bound
ret
inc
add
int
fadds
or
adc
adc
adc
cmp
inc
or
adc
jg
arpl
and
movw
push
xorl
daa
ss
addr16
adc
add
sub
inc
arpl
adc
sub
push
add
or
push
add
fxch
ss
add
xchg
sub
add
ja
loopne
mov
and
sub
adc
andb
addb
daa
push
add
fxch
ss
add
mov
ja
and
xor
add
sub
adc
andb
addb
daa
push
add
fxch
ss
add
mov
ja
and
xor
add
sub
arpl
adc
fxch
sub
push
add
or
push
add
fxch
ss
add
mov
ja
and
xor
add
sub
adc
andb
addb
daa
push
add
fxch
ss
add
mov
ja
and
xor
add
sub
adc
andb
addb
daa
push
add
fxch
ss
add
mov
ja
and
xor
add
sub
add
adc
std
add
pop
cmp
sub
xorb
cmpb
fnstsw
and
adcl
inc
sbb
adc
xchg
in
pusha
aaa
inc
adc
arpl
and
push
fisubl
adc
sbb
fcomps
pop
and
es
add
frstor
dec
add
or
sub
add
or
faddl
push
and
xor
xchg
xor
and
inc
adc
xor
cmp
xor
add
dec
sub
add
jl
and
add
incl
daa
dec
add
orb
add
xchg
loopne
sub
sub
add
ljmp
xor
cs
pop
ret
adcb
add
adc
ficoms
push
xor
test
test
call
cmpb
test
jp
adc
inc
push
adc
popa
push
adc
jg
test
adc
adcb
je
sbb
inc
mov
push
adc
adcl
jle
pop
or
sarb
pop
and
and
fdivs
jl
loopne
adc
sub
add
js
adc
sub
fld1
and
lret
sub
and
or
sub
mov
and
mov
dec
and
fldenv
pop
arpl
adc
inc
lock
sub
fsubr
mov
adc
mov
dec
inc
dec
dec
adc
dec
adc
dec
inc
sub
cmp
adc
and
add
and
or
add
mov
sub
adc
fmuls
outsl
inc
mov
shll
inc
ljmp
leave
fmull
sub
loop
cmc
inc
cmp
xchg
inc
sub
sbb
sub
clc
orb
xor
lds
jmp
leave
lahf
adc
fprem
and
push
push
push
fnstsw
test
pop
and
loopne
adc
or
dec
inc
sbb
cmp
lock
data16
leave
and
aaa
sbb
xor
andl
or
adc
and
enter
pop
pop
ret
push
sub
xchg
adc
inc
sbb
xor
inc
cmp
push
and
cmp
pop
dec
adc
test
adc
inc
pop
inc
dec
adc
push
outsl
dec
cltd
adc
jns
clc
mov
inc
lea
adc
dec
pusha
int3
popa
scas
adc
orl
adc
sbb
test
or
cmp
jmp
and
cmpb
insl
sub
mov
mov
inc
push
aaa
mov
adc
adc
add
mov
adc
adc
cmp
sub
adc
dec
inc
add
mov
mov
mov
sbb
inc
ret
fpatan
ret
fptan
ret
push
mov
pushl
call
pushl
and
pop
adc
pop
and
sub
fs
adc
adc
add
jne
push
and
pop
adc
pop
test
adc
and
pusha
pop
sbb
sub
cmpl
pop
push
jne
and
jp
mov
jmp
and
mov
pop
pushl
and
and
mov
and
lds
mov
and
icebp
and
and
imul
insl
adc
and
push
cmp
je
mov
push
inc
add
push
push
pop
cltd
pop
call
mov
jae,pt
dec
and
sub
and
sub
das
push
push
push
push
push
pushl
andb
push
cmp
xchg
adc
adc
and
mov
fmul
adc
cmc
and
jb
lret
or
and
movb
call
adc
je
and
rclb
mov
xor
cmp
sete
cmp
cltd
pop
adc
xor
sbb
jne
cmp
je
cmp
cs
and
and
and
cmp
and
jge
andl
fisttps
jne
daa
sbb
addb
cmp
jne
mov
jge
and
inc
push
adc
frstor
push
sub
adc
aas
add
xor
lea
mov
or
cmp
jmp
mov
and
xchg
adc
and
jp
std
fsubrs
jmp
and
cmp
adc
jmp
test
jne
test
jge
neg
lea
fwait
mov
inc
and
sbb
mov
andl
xorb
mov
inc
and
and
sub
cs
pop
jne
add
lahf
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
mov
adc
sub
and
adc
push
and
cs
mov
movsl
mov
mov
cmp
je
test
mov
adc
cmp
sar
mov
adc
daa
lldt
jmp
and
adc
xor
inc
in
lea
pop
ret
inc
sbb
lea
je
mov
inc
add
and
push
adc
push
lea
repnz
mov
daa
jmp
filds
adc
push
add
fwait
adc
mov
and
xor
jmp
mov
push
sbb
inc
dec
and
jmp
and
pop
adc
push
and
adc
and
adc
and
inc
ss
inc
sbb
shlb
je
and
xchg
pop
and
pop
jns
jmp
lea
jmp
lea
jmp
lea
cmp
adc
pop
adc
mov
and
pop
adc
inc
shlb
jmp
and
and
adc
and
inc
das
adc
test
je
and
gs
push
mov
and
adc
or
movb
and
ret
mov
pop
and
mov
cmp
and
jnp
cmp
adc
je
and
mov
outsl
cmpl
jne
push
inc
mov
cld
and
and
xor
and
push
and
and
cmp
jbe
mov
mov
mov
sbb
push
and
int3
mov
adc
jmp
and
int3
adc
sbb
inc
push
adc
sub
and
je
sbb
sbb
adc
inc
or
addr16
adc
jl
xor
cmp
jl
test
mov
adc
jne
sbb
add
cmp
jne
and
into
pop
adc
adc
inc
pop
orb
mov
mov
push
pop
push
adc
movb
fistl
test
mov
push
adc
and
pusha
push
adc
pusha
push
adc
adcb
add
clc
lcall
add
inc
and
flds
mov
lea
cld
inc
mov
inc
out
lods
adc
sub
push
pop
cld
cmp
add
sbb
jg
cmp
jg
mov
sti
aad
mov
es
sbb
mov
mov
lea
mov
pusha
adc
clc
jle
pushl
pushl
movsb
cmp
xor
decl
inc
and
cmp
jg
decl
sbbl
cmpl
jg
jmp
and
into
adc
xor
or
orb
and
cmp
adc
push
addb
fnsave
push
and
inc
jne
popa
std
inc
mov
push
sub
adc
frstor
adc
and
bound
push
push
and
popa
imul
add
stos
lds
adc
jae
mov
and
and
dec
cmp
jl
cmp
jg
mov
mov
pop
std
adc
rorl
push
andb
lret
adc
push
add
cwtl
pusha
push
push
and
sub
mov
adc
test
or
inc
sbb
js
add
and
xchg
adc
adc
add
and
orb
and
push
add
pop
or
jo
mov
pop
scas
inc
push
sbb
je
test
je
testb
and
and
data16
inc
adc
push
xchg
add
mov
mov
xchg
cltd
jae
mov
mov
cmp
je
cmp
jle
cmp
fisubl
or
inc
push
leave
adc
pusha
movsb
adc
and
ret
pop
adc
lahf
and
sub
adc
adc
mov
inc
adc
inc
pop
adc
cmpsb
mov
xor
and
and
and
out
je
adc
and
pop
popa
sub
ss
inc
fcoms
cmpl
lock
jne
push
jmp
pushl
data16
adc
adc
mov
xor
inc
mov
sub
inc
or
jae
push
sbb
adc
adc
and
cs
mov
sbb
mov
adc
sbb
aam
fsubl
mov
adc
mov
imul
cmc
fildl
and
inc
or
jge
mov
adc
adc
jns
or
mov
adc
mov
pop
adc
and
fs
inc
aam
stos
imul
sbb
fwait
sub
inc
inc
in
iret
and
adc
inc
fmuls
js
in
dec
loopne
adc
inc
adcl
aas
test
adc
cmpl
adc
cmpl
sbb
lcall
adc
jge
inc
adc
popf
push
adc
movsb
subl
jne
ljmp
inc
aaa
adc
cmpl
js
andb
sub
pop
add
push
xor
inc
cmp
je
loope
je
mov
pusha
adc
pusha
and
adc
xchg
adc
add
je
and
jbe
icebp
xor
and
push
adc
movsb
adc
pusha
cmp
inc
sbb
arpl
adcb
pop
inc
add
aaa
out
jne
testb
je
and
add
jae
dec
add
mov
mov
pushl
inc
es
pop
or
jle
add
test
pusha
and
push
mov
push
jmp
cmpl
pop
adcb
cmp
push
add
sub
push
add
je
inc
push
pusha
xor
or
and
push
sub
stc
adc
testb
je
push
lea
push
daa
inc
add
pusha
dec
adc
sbb
adc
and
pop
sub
popa
mov
sbb
adc
xor
add
push
mov
push
adc
in
adc
popa
test
and
mov
push
xor
cmp
setne
inc
data16
mov
and
sbb
add
movb
xor
test
push
or
add
add
pop
das
fists
dec
jge
ja
loope
dec
or
push
and
jnp
dec
adc
mov
rcrb
mov
pop
inc
adc
mov
adc
cld
test
mov
loop
mov
in
adc
das
inc
mov
pusha
je
es
iret
and
jne
jmp
sarl
add
sahf
rol
push
cmp
std
fldl
xchg
pusha
add
adc
mov
popa
adc
jmp
and
pop
loopne
adc
inc
adc
notb
inc
add
adc
adc
xor
and
jp
dec
cli
and
and
addl
test
je
mov
mov
dec
pop
adc
cs
push
inc
and
inc
push
and
adc
ret
add
and
sub
add
and
and
pushf
adc
or
xlat
pop
sub
fldl
mov
pop
fstpl
pop
mov
and
and
fwait
adc
mov
and
dec
push
mov
inc
jmp
mov
dec
arpl
sbb
stc
or
mov
testb
pop
and
addr16
incb
mov
mov
and
addr16
add
addr16
int
fisttps
xchg
push
adc
sub
sbb
leave
ret
movzwl
and
sub
xchg
and
gs
cmp
add
add
pop
mov
popa
add
or
je
shr
aas
je
jne
inc
adc
adc
popa
dec
adc
sbb
jne
mov
inc
lahf
sbb
inc
ret
mov
iret
std
adc
add
inc
adc
aas
loopne
xchg
adc
adc
add
pop
adc
inc
inc
adc
pusha
pop
adc
inc
pop
adc
jmp
mov
cmp
cmp
ds
dec
dec
adc
pop
push
push
push
inc
and
aaa
adc
or
xchg
bound
push
push
push
push
sbb
pushf
and
adc
and
adc
call
inc
aas
adc
jge
jle
test
mov
inc
rclb
inc
adc
call
inc
mov
sbb
dec
inc
xor
cmp
and
and
and
and
and
or
adc
cmp
loopne
and
adc
call
adc
mov
dec
dec
adc
cld
lea
add
and
bound
enter
adc
add
jmp
ret
jge
cmp
adc
mov
cmp
je
and
popa
mov
rclb
adc
in
sbbb
movsl
popa
or
mov
sbb
cmp
je
testb
dec
or
jge
and
cmp
jg
mov
and
inc
and
adc
rorb
and
dec
adc
sub
sbb
inc
dec
adc
adc
mov
cmp
xorb
mov
je
adc
sub
pushf
inc
pop
push
push
jne
push
push
jmp
mov
push
pusha
aad
xor
mov
cmp
je
mov
xorl
dec
add
rclb
dec
pushl
cmp
je
inc
mov
dec
test
jne
inc
or
pop
jne
sub
inc
push
adc
sub
add
das
and
es
and
jp
jl
and
jp
enter
and
ljmp
leave
jne
div
and
jp
sbb
sub
adc
sub
jp
and
jp
or
sub
pop
sub
adc
lret
jp
outsb
adcb
jns
or
jmp
subb
and
inc
adc
and
jns
adc
out
adc
shrb
and
jns
or
out
adc
sbb
inc
pop
adc
inc
pop
adc
pushf
jp
jl
push
arpl
test
mov
adc
and
adc
pop
adc
adc
mov
mov
movl
ret
mov
or
mov
or
cmp
jae
sbb
add
push
or
cli
add
sbb
add
jmp
push
sar
and
and
imul
cld
sub
shr
mov
imul
lea
sbb
dec
test
mov
jne
add
adc
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
orb
add
shll
pop
mov
sub
push
and
jmp
lea
andb
push
add
pushf
mov
and
add
adc
pop
add
jmp
adc
jmp
pusha
pop
sbb
mov
add
mov
dec
adc
ljmp
mov
adc
sub
adc
and
xchg
adc
jne
sub
inc
adc
adc
sti
add
aas
mov
dec
pop
cmp
jbe
mov
add
mov
inc
inc
pusha
cmp
cmp
inc
adc
cmp
je
and
cmp
jne
cmp
jae
push
lret
shr
not
and
adc
add
xor
adc
sbbb
sbb
mov
mov
pop
cmpb
dec
adc
dec
adc
mov
or
mov
dec
mulb
and
adc
push
cmp
cmp
and
mov
pop
roll
inc
xor
or
add
inc
inc
dec
out
dec
or
mov
inc
push
adc
rorl
cmpb
jne
and
sub
sbb
insl
add
inc
mov
sub
add
adc
inc
pcmpeqw
lea
cld
adc
inc
xor
adc
jmp
or
bound
andl
mov
xor
shl
add
mov
and
push
push
call
mov
pop
adc
push
or
inc
adc
mov
decb
mov
cmpb
jne
andl
adcb
cmpl
adc
push
sub
jo
call
adcb
pushl
sub
mov
adcb
mov
subb
sub
lea
push
lea
and
loope
les
les
or
add
add
insl
or
adcl
adc
pusha
sbb
adc
arpl
adc
inc
adc
cmp
pusha
sub
pop
adc
pop
and
inc
and
cmp
jge
or
shr
and
inc
insb
adc
and
dec
sbb
shr
mov
mov
inc
clc
mov
adc
pop
or
inc
and
mov
and
and
or
push
cmpsl
adc
adc
pop
cld
inc
sbb
jb
inc
pop
adc
jns
fidivrl
inc
jne
or
sub
add
add
out
fdivs
inc
and
jae
cmpl
adc
inc
adc
adc
in
pusha
aaa
adc
loopne
adc
adc
inc
das
dec
ret
inc
or
dec
fadds
adc
lods
sub
inc
mov
mov
push
lret
cmp
jne
js
adc
inc
add
sbb
adc
mov
je
mov
jl
inc
loopne
adc
mov
and
and
and
sbb
or
mov
jne
mov
inc
cld
inc
sbb
jno
mov
and
or
je
mov
cwtl
xor
sub
adc
mov
adc
push
insl
mov
inc
sbb
leave
jl
shl
inc
jmp
and
xchg
adc
or
inc
push
sbb
mov
sar
dec
cmp
jle
out
pop
imul
sbb
dec
add
dec
or
cmp
jge
mov
call
cmp
mov
and
mov
adc
pcmpeqw
outsl
js
dec
in
and
jmp
lea
adc
subb
lea
sbb
cmovo
adc
shrb
add
mov
mov
mov
cmpl
mov
inc
jne
mov
mov
je
test
mov
add
dec
and
adc
push
out
popf
push
mov
cmp
mov
inc
cmpb
mov
adc
and
call
shr
or
and
adc
jmp
daa
sub
adc
and
adc
push
adc
push
les
dec
clc
dec
jle
or
cld
xor
clc
mov
add
lea
pusha
adc
xor
inc
lahf
sbb
push
test
lea
mov
jne
cmp
adc
adc
andl
and
adc
lea
and
ja
add
or
pop
cmp
jne
lea
xchg
jecxz
xor
imul
lcall
adc
inc
and
sub
adc
pop
cmp
mov
je
push
cmpsl
adc
fs
inc
mov
std
adc
or
cmp
jbe
lods
daa
stc
add
sbb
orl
mov
mov
incl
adc
sahf
pop
xchg
adc
jno
dec
inc
adc
fildl
loopne
inc
dec
adc
push
imul
lea
sbb
mov
add
dec
inc
push
sbb
push
shl
add
and
loope
mov
dec
inc
inc
roll
adc
add
xchg
sbb
inc
adc
mov
cmovb
adc
adc
inc
cld
lock
push
inc
inc
adc
cld
out
decl
movl
add
dec
lock
jbe
and
inc
adc
add
mov
inc
or
and
mov
inc
add
sbb
inc
test
inc
jp
mov
jne
or
test
cltd
pop
ljmp
ret
es
and
pop
jbe
lods
jle
xlat
lea
sub
jmp
shr
mov
sub
cld
dec
cmp
adc
mov
fwait
pusha
and
mov
mov
dec
or
jne
add
cmp
jg
sbb
adc
push
push
pop
inc
pop
pop
mov
cmp
jne
inc
push
adc
and
lea
icebp
adc
movsb
inc
icebp
adc
adc
adc
inc
push
adc
mov
fs
ret
into
add
and
mov
jle
mov
jmp
add
lea
cmp
cli
sbb
pop
hlt
lea
mov
dec
sub
adc
or
add
dec
or
sbb
pop
or
mov
inc
sub
addr16
push
pop
add
and
pop
test
dec
adc
gs
jmp
insb
inc
and
adc
xor
inc
adc
repnz
and
xor
adc
and
mov
mov
mov
insl
adc
cmpsb
jge
pop
or
inc
pop
inc
mov
pop
xor
adc
dec
push
fs
pusha
xlat
adc
dec
enter
adc
sbbb
and
dec
or
inc
pop
jmp
std
adc
jns
push
imul
dec
imul
push
sub
or
jns
ja
jbe
jns
ja
test
push
loope
cld
mov
sub
es
add
jnp
pop
popa
push
dec
inc
jo
or
cli
inc
popa
in
mov
push
adc
or
es
add
into
popa
popa
mov
add
daa
popa
add
inc
adc
outsl
aaa
xor
cmpl
mov
mov
jmp
push
mov
adc
and
adc
add
inc
pusha
sub
aad
cmp
aad
test
add
sub
add
inc
stos
push
jo
aad
sub
adc
cmpl
mov
cmp
sbb
pusha
pop
adc
adc
or
inc
add
xor
adc
adc
cmp
lea
adc
and
or
in
mov
xor
cmp
setge
dec
and
dec
inc
mov
fs
adc
adc
or
aas
push
push
adc
ret
cmp
jae
orb
lea
mov
movl
andl
fmull
mov
adc
pusha
stos
adc
add
outsb
jae
jge
xor
mov
adc
inc
rclb
pusha
or
inc
adc
and
inc
adc
movsl
adc
sub
adc
orl
add
pop
jp
pop
and
adc
inc
jl
mov
cmpl
cmp
add
cmpl
ja
pop
orl
decl
and
add
or
dec
or
jmp
das
push
sub
test
jge
and
add
sub
jns
or
adc
out
or
popa
push
adc
adcl
jne
and
adc
pop
cmp
and
adc
push
and
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
out
push
adc
bnd
and
mov
cwtl
mov
and
mov
sub
pop
sar
lea
and
sbb
dec
adc
stc
or
inc
enter
or
mov
add
andb
pop
popa
adc
movl
pop
incl
cmp
and
and
inc
and
push
mov
mov
jl
adc
mov
inc
pop
add
mov
sub
sub
testl
inc
out
adc
mov
dec
int
cmp
jl
cmp
jbe
push
xchg
sbb
dec
stos
mov
or
pop
add
mov
aaa
adc
test
shlb
jmp
inc
pop
jae
mov
cmp
jl
pusha
dec
adc
mov
adc
inc
dec
adc
push
or
jge
jb
mov
xorb
adc
orb
pop
mov
inc
movups
subl
clc
push
xchg
adc
jg
pop
cld
adc
inc
inc
adc
lods
sub
jne
adc
mov
sub
sub
sar
shl
add
and
adc
inc
add
adc
dec
jg
or
adc
pushl
rolb
adc
cmpsl
rcll
push
pop
inc
adc
enter
and
mov
jns
jmp
xorb
jle
lea
adc
orb
lea
mov
mov
adc
pushf
sbbl
mov
xchg
sbb
enter
cmp
je
inc
sbb
jmp
cmp
sbb
and
mov
ds
sbb
or
add
inc
add
xchg
or
mov
jmp
inc
xor
je
dec
push
push
mov
lea
xorl
adc
dec
push
pop
movzbl
sub
lea
bnd
and
push
mov
lea
repnz
push
add
lea
mov
cmp
jae
add
sub
jmp
andl
and
stos
adc
inc
cmp
jno
pop
dec
mov
add
lea
cmp
jae
mov
test
jne
inc
cmp
add
cmp
sbb
inc
jmp
cmp
jae
cmp
jne
inc
and
jmp
mov
cmp
adc
sbbb
add
addb
jne
jb
lea
cmp
jae
lea
cmp
jae
and
adc
push
adc
pop
pusha
push
sbb
lea
cmp
or
repnz
pusha
push
mov
mov
mov
inc
rcll
ss
jae
sub
push
repz
movzbl
add
jmp
lea
mov
aaa
adc
rolb
adc
imul
pop
jge
sub
sub
add
and
adc
mov
and
sbb
sub
sar
cmp
lea
jbe
mov
sub
mov
add
inc
dec
popa
loopne
jmp
jae
inc
adc
adcl
add
cmp
jae
push
mov
adc
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
loopne
add
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
stos
adc
stos
push
inc
or
inc
push
inc
cld
stos
outsb
adc
inc
in
aam
and
and
daa
push
sbb
sub
push
inc
adc
leave
push
dec
jge
mov
inc
test
and
adc
push
fcoml
je
mov
mov
or
or
adc
mov
inc
and
cmp
jl
cmp
jg
movsbl
mov
loopne
popa
sub
shrl
push
inc
lods
add
cmp
mov
ja
push
and
adc
dec
inc
sub
pop
out
outsl
mov
mov
and
adc
inc
dec
add
sub
cmp
pop
call
call
dec
je
sub
andl
and
push
clc
inc
or
and
add
cld
and
adc
mov
jne
and
dec
adc
and
adc
jge
add
ret
xchg
inc
adc
pop
fcoml
movsbl
dec
push
sbb
jmp
and
sub
add
clc
jge
clc
imul
cmp
loopne
inc
push
shlb
sbb
sub
pop
cmp
je
cmp
jne
adc
adc
loopne
adc
mov
jne
cmpb
jne
inc
inc
orb
inc
xchg
dec
stc
js
and
shlb
or
inc
inc
add
leave
push
push
and
adc
pop
xor
inc
inc
xor
gs
push
adc
addr16
cmp
and
jg
push
pusha
pop
adc
mov
adc
fidivrl
sub
andl
loope
testw
and
or
cmp
pop
pop
adc
add
add
adc
or
leave
scas
adc
je
test
jne
mov
dec
hlt
movl
mov
dec
test
je
andw
push
adc
inc
or
inc
inc
jmp
movl
ret
and
adc
and
lea
adc
jge
movl
int
push
pop
daa
popl
mov
je
pusha
mov
in
push
lea
adc
pop
lock
jge
movl
sub
sbb
cmc
call
je
push
adc
add
pop
mov
pusha
sahf
adc
mov
hlt
andb
pop
add
je
mov
movsb
sbb
test
je
movswl
rcll
adc
out
xor
popa
or
mov
mov
ss
rclb
jne
cmp
jne
and
cmp
jle
push
or
and
inc
pop
adc
and
push
adc
inc
shlb
les
hlt
and
mov
mov
jne
inc
loope
mov
adc
mov
dec
adc
mov
inc
mov
dec
jmp
bound
lock
push
adc
adc
popa
pop
adc
dec
shlb
sub
adc
and
adc
push
mov
sub
adc
inc
inc
insb
and
push
adc
ret
call
bound
adc
popf
andb
sub
je
je
sub
andb
das
and
stos
and
int
call
jns
adc
daa
pusha
jecxz
cmp
iret
ja
inc
mov
add
ja
and
push
adc
roll
es
cmp
mov
jbe
sbb
int3
movb
add
movl
inc
jmp
inc
shlb
xor
je
or
jmp
and
adc
pop
je
and
adc
and
adc
mov
ret
sbb
in
jno
cmp
xor
testb
je
inc
mov
jmp
pusha
cmp
add
and
and
mov
rorb
mov
jmp
and
and
adc
and
xor
pusha
sbb
je
test
jg
jl
mov
mov
ja
neg
popa
fs
push
in
push
and
test
push
in
jnp
jne
and
gs
mov
sbb
and
mov
cmp
es
cmp
loopne
inc
in
sub
add
cmp
mov
push
ja
sbb
je
push
adcl
push
pop
aad
xchg
je
call
pop
rcll
ret
xor
adc
jg
sti
cmp
add
mov
decl
mov
jmp
inc
push
adc
inc
or
inc
hlt
inc
xchg
adc
and
mov
cmpb
jne
shll
or
inc
movhlps
add
and
ljmp
and
mov
ret
inc
je
test
je
inc
mov
and
pusha
or
sub
or
mov
or
and
test
jne
sub
test
jne
les
adc
and
and
adc
and
orl
je
pop
xchg
daa
xor
and
lcall
inc
cmpl
jle
and
js
mov
inc
inc
inc
adc
and
out
shlb
stos
inc
adc
dec
inc
fistl
shlb
dec
dec
sbbb
and
add
sbb
sbb
or
sbb
rolb
pop
inc
pop
cmpsl
push
inc
dec
adc
leave
and
inc
repnz
add
icebp
dec
add
add
addb
mov
add
rolb
clc
inc
add
mov
and
inc
sbb
dec
add
push
mov
mov
adc
incl
dec
lods
adc
or
inc
jo
push
jns
cmp
dec
adc
push
cltd
adc
lcall
and
pop
and
and
mov
xor
sbb
jnp
and
cmpl
inc
cmp
adc
and
fstps
adc
push
push
inc
xor
es
cmp
sbb
push
push
inc
and
adc
ret
dec
inc
ss
and
and
aas
adc
add
push
jbe
cld
rorb
mov
mov
mov
cmovo
pushaw
sbb
xchg
pop
and
jne
add
cmp
jle
push
mov
mov
shl
mov
aaa
sub
inc
testb
je
fs
fsubrl
je
inc
cmp
jl
mov
and
adcb
pushl
fisubrl
or
pop
andl
inc
cmp
pop
and
into
and
adc
pop
into
mov
xchg
jl
mov
mov
adc
or
popf
jl
mov
fcomps
sbb
and
ret
and
dec
adc
xchg
pop
mov
and
cmp
jne
test
je
insb
stos
adc
sub
adc
inc
dec
cmpb
insb
and
adc
jne
inc
cs
and
push
bound
jmp
orl
or
and
stos
adc
add
mov
and
dec
adc
lahf
xchg
pop
push
pop
and
popa
adc
xor
jle
adc
pop
cmp
mov
shr
mov
movups
movups
repz
adc
sbb
mov
test
je
and
lcall
adc
subl
sbb
adc
jne
and
inc
sbb
adc
or
shll
orb
pop
pop
inc
cmp
shrl
fsts
add
dec
mov
mov
aad
orl
movl
test
adc
or
inc
in
das
pop
pop
mov
test
jne
and
adcb
mov
xchg
adc
pushl
and
andl
and
ljmp
push
push
or
ret
stc
adc
push
and
stc
sar
and
mov
or
lea
jmp
mov
adc
dec
add
and
cmp
jne
or
mov
cmpl
adc
dec
inc
or
lds
icebp
pop
adc
insl
adc
push
movzbl
inc
mov
pop
and
dec
sti
adc
or
popa
mov
sbb
leave
je
mov
or
pop
jl
dec
mov
mov
mov
and
jae
sbb
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
inc
or
fadds
push
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
inc
daa
adc
insl
jl
sbb
push
jl
mov
sub
add
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
xor
adc
xor
adc
aad
mov
adc
jne
jb
neg
sub
push
loopne
and
adc
es
movsb
and
jne
and
ret
mov
and
adc
inc
in
sbb
lock
add
add
xchg
rorl
sbbb
inc
ljmp
gs
gs
push
mov
push
adc
test
mov
je
xchg
jge
push
daa
sbb
adc
xor
adc
and
inc
ljmp
and
jmp
sbbb
pop
adc
add
inc
adc
cmp
jl
adc
daa
adc
sbb
out
cmpb
jne
andb
add
jmp
pop
adc
inc
add
icebp
inc
add
ljmp
add
mov
adc
pop
lock
inc
repz
notl
movzbl
daa
fsts
mov
sub
push
sub
hlt
inc
sub
loopne
or
inc
dec
or
adc
jmp
cmp
jg
je
cmp
je
cmp
je
orl
cmp
jne
incb
jmp
dec
out
push
ss
cmpb
lea
jne
incl
and
mov
lock
incb
jmp
orl
orl
pop
ja
or
inc
icebp
jmp
inc
cmp
push
decb
decb
cmpb
inc
adc
inc
inc
adc
add
pop
mov
popa
jge
mov
adc
jmp
cmp
adc
or
je
orb
jmp
movb
dec
into
add
into
and
les
arpl
jnp
sub
jecxz
and
inc
outsl
adc
and
mov
addr16
dec
adc
and
iret
adc
je
cmp
icebp
adc
dec
movsl
adc
pop
and
mov
or
and
lds
test
push
adc
fs
jle
addr16
cmp
je
inc
jo
jne
mov
test
out
inc
cmp
pop
mov
cmp
jne
movb
jns
push
push
mov
and
jne
mov
mov
and
adcl
cmp
pop
cmp
jge
dec
inc
mov
pop
adcl
pop
test
dec
stos
adc
add
add
adc
imul
dec
inc
orb
jmp
popa
fistl
and
pop
incl
mov
inc
sub
add
mov
push
adc
and
daa
and
and
adc
push
add
cmp
and
outsl
and
sbb
cmp
jne
add
jbe
push
sub
add
jl
adc
adc
loopne
adc
and
adc
sub
aas
cmpsb
add
pop
nop
inc
cmpsb
adc
mov
adc
pusha
mov
test
inc
push
popa
fistl
jne
incl
andb
push
popa
mov
push
movsbl
pushl
dec
inc
frstor
mov
pop
inc
push
adc
dec
jne
scas
nop
bound
adc
add
test
push
lea
mov
mov
call
mov
je
ret
xorb
xchg
aad
mov
cmp
jne
decb
mov
lahf
push
adc
inc
sbb
jo
popa
add
dec
icebp
push
or
aas
pop
jne
lea
pop
adc
popa
xor
and
adc
addb
adc
add
and
or
sti
xor
test
lret
sbb
push
and
sbb
sti
pop
je
cmp
and
adc
or
pop
inc
pop
adc
sti
adc
push
mov
imul
xor
adc
add
inc
es
push
jmp
daa
lgdtl
xor
sbb
int
inc
pushf
and
int3
mov
adc
pop
add
aas
pop
jne
mov
inc
movb
jmp
mov
mov
cmp
je
inc
cmp
jne
ja
add
cmp
pop
je
inc
cmp
jae
mov
jmp
mov
mov
cmp
ja
movzbl
movzbl
sub
inc
mov
mov
and
mov
shr
loop
into
inc
add
dec
jne
mov
xor
mov
mov
es
add
in
sbbb
jmp
cmpb
cwtl
and
mov
and
std
adc
bound
adc
jne
mov
and
inc
adc
loop
and
daa
and
and
enter
add
pop
movsbl
enter
sar
movsbl
xor
test
je
popa
into
adc
push
cmpb
repnz
nop
adc
mov
adc
pop
mov
jmp
add
lea
fs
adc
ret
push
mov
inc
inc
jmp
inc
sbb
mov
adcb
sbb
mov
bound
pop
pop
cmp
je
adc
in
inc
int3
inc
in
loop
jb
rclb
inc
push
adc
dec
adc
add
dec
movsb
leave
adc
aaa
adc
addl
cmp
add
mov
test
inc
cmp
xchg
push
and
xchg
and
jecxz
adc
mov
adc
push
and
adc
push
fsubl
adc
les
push
aas
jmp
adc
fsts
jne
cmp
jge
rorb
mov
push
push
and
daa
adc
outsl
adc
sbb
inc
fcoms
push
faddl
out
adc
push
sub
add
insb
fisubl
incb
push
cmpb
xorb
adc
dec
sub
test
neg
mov
popa
push
adc
mov
sbb
js
aas
cmp
je
aas
les
adc
les
push
cmp
shl
jmp
lea
shl
jmp
add
dec
add
aaa
push
shl
mov
cmp
pusha
fsts
lea
aaa
fldl
adc
sub
add
sbb
cmp
out
jmp
dec
or
sub
mov
fsubs
nop
pop
adc
pop
sbb
adc
sbb
add
cmp
inc
jmp
inc
or
or
adc
mov
push
inc
and
jne
and
adc
adc
adc
cmp
pusha
and
ds
sahf
push
aam
pushl
dec
sub
jne
and
outsb
jne
mov
and
test
inc
pop
push
cs
movb
jmp
in
in
inc
daa
adc
es
outsl
adc
mov
jo
adc
inc
jmp
mull
and
lret
and
shll
jle
add
or
push
je
punpcklbw
sub
pop
jne
and
sub
and
and
add
or
adc
ret
and
and
adc
xchg
lock
cmpsl
adc
and
adc
jmp
sub
inc
and
clc
jb
dec
sbb
call
lret
cmp
mov
cmp
cs
testb
je
and
je
int
add
ljmp
mov
push
dec
and
inc
push
mov
cmpb
mov
and
adc
add
lea
add
and
cmp
je
in
fsubs
inc
pop
adc
and
popa
adc
and
sbbb
out
sar
dec
sbb
test
mov
or
inc
test
repz
pop
popa
outsb
and
je
test
je
and
andl
pop
adc
pop
inc
dec
sub
add
inc
or
adc
xlat
pusha
or
adc
adc
adc
and
adc
and
rcll
je
adc
inc
jno
ja
lea
mov
ja
cmp
push
push
xor
add
mov
lds
test
add
test
jge
inc
add
decl
mov
mov
lea
shll
add
adc
push
and
adc
xor
call
cmp
pop
pop
js
push
xchg
sub
jmp
cmp
je
mov
adc
mov
mov
add
lea
mov
test
dec
fisubl
shrl
or
or
jmp
and
and
mov
popa
sbb
add
cmp
mov
jae
mov
cmp
je
cmp
je
mov
inc
decl
dec
cmp
jae
sbb
or
sbb
add
pop
movb
inc
inc
inc
adc
jae
lret
adc
inc
ljmp
pusha
shll
iret
add
and
adc
adc
inc
movups
testb
dec
je
mov
inc
push
adc
inc
inc
add
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
ljmp
and
faddl
adc
ja
mov
andb
jne
jmp
inc
pop
adc
adc
test
inc
in
add
mov
add
pop
sbb
adc
inc
adc
test
and
mov
inc
adc
pusha
pop
and
rorl
test
je
dec
or
mov
push
inc
inc
das
movsb
push
gs
and
or
lock
adc
cmp
adc
cmp
jne
fs
adc
rcll
jbe
testw
push
je
shll
xor
test
mov
jle
push
and
nop
xchg
scas
pop
mov
jmp
cmp
push
adc
mov
das
adc
jmp
mov
inc
add
je
push
push
or
jb
and
and
or
jmp
and
adc
push
add
cmp
pop
pop
pop
push
sti
inc
mov
push
sub
out
adc
mov
adc
daa
push
add
sub
sbb
adc
mov
sub
or
and
and
insl
repnz
lcall
das
and
sub
loopne
arpl
repz
bound
adc
je
push
and
aaa
addb
mov
add
inc
or
adc
xorb
adc
jge
jbe
lea
ds
xor
cmp
adc
inc
or
cltd
jns
adc
cmp
jne
incl
movb
inc
mov
inc
mov
lea
lret
push
adc
pop
data16
cmp
adc
mov
adc
loop
inc
outsl
adc
sbb
add
cmp
jl
pop
sbb
inc
or
inc
adc
xor
adc
push
and
aas
adc
ret
adc
jne
jne
das
les
adc
adc
lea
push
and
mov
lea
es
adc
inc
rcll
adc
cmpsl
es
adc
adc
add
adc
pop
js
or
cmp
adc
outsb
adc
jmp
sub
sub
and
adc
push
dec
inc
mov
pop
jns
adc
loop
call
call
call
je
adc
adc
je
sbb
mov
inc
mov
add
jmp
mov
add
jmp
mov
pop
outsl
jns
clc
pop
add
jnp
pop
jmp
mov
add
push
or
xor
cmp
jne
and
adc
pusha
jnp
jb
dec
adc
dec
cld
dec
xchg
je
inc
pop
and
and
adc
push
adcb
or
push
out
sbb
pop
lods
sbb
mov
movl
push
hlt
and
or
mov
sarl
jge
lea
and
pop
push
push
add
andl
and
cmp
add
cmp
jl
jmp
mov
and
adc
jne
and
jb
pop
jmp
push
adc
outsb
adc
pop
add
pusha
and
and
inc
pop
les
jb
and
jb
adc
shlb
add
hlt
and
and
jb
pop
aaa
adc
jg
adc
adc
inc
jl
sti
and
adc
xchg
inc
add
xor
xor
inc
out
jne
xchg
adc
inc
mov
incl
jle
inc
inc
mov
ret
lea
imul
adc
add
add
mov
add
mov
lea
mov
mov
in
or
imul
add
pusha
add
jbe
dec
cmpl
mov
cs
lea
and
and
adc
jne
and
je
and
jle
adc
and
push
add
mov
and
jbe
into
xchg
adc
adc
popa
cmp
push
and
cmp
xchg
bound
cmp
mov
cmp
adc
dec
adc
push
call
and
cmpsl
sbb
adc
call
mov
pushl
aam
adc
jge
push
dec
push
push
jmp
test
xor
push
mov
lea
push
push
pop
push
and
and
jmp
pusha
sbb
push
and
mov
mov
imul
push
pop
mov
clc
add
adc
adc
sub
xor
adc
imul
and
sbb
push
push
mov
and
lahf
xor
xor
ret
je
push
mov
imulb
out
adc
fcoml
pop
jbe
pop
and
xor
or
adc
repz
pop
dec
and
xchg
and
push
add
and
and
adc
mov
lea
sub
add
push
push
adc
add
push
sub
or
jne
dec
jle
sub
jmp
jp
and
adcb
inc
dec
adc
and
outsl
pusha
mov
adc
repz
je
mov
in
adc
mov
push
adc
add
add
std
lea
orb
ljmp
adc
lea
and
nop
sub
push
inc
adc
and
mov
sbb
dec
dec
cmp
jae
mov
mov
mov
mov
inc
dec
jmp
mov
fiadds
sub
and
cmp
push
and
mov
movups
pusha
push
adc
incl
adc
push
pop
and
fsts
pop
popa
test
adc
incl
lds
lahf
jge
add
cld
inc
xlat
and
cmp
inc
and
jb
jne
xchg
sub
inc
sbb
push
adcl
xchg
adc
test
pusha
adc
mov
imul
cmp
pop
mov
adc
adc
add
adcb
and
ljmp
inc
push
inc
js
adc
rorl
adc
or
sbb
sbb
adc
adc
push
push
mov
xor
rclb
push
inc
inc
adc
xor
inc
hlt
push
adc
pop
cld
jne
mov
pusha
aas
dec
fldenv
rcr
inc
cmp
adc
je
cmp
adc
rolb
adc
cmpb
add
pusha
push
adc
mov
inc
adc
test
and
mov
mov
jns
ret
mov
test
jle
and
mov
push
mov
subb
sbb
ds
sbb
sbb
mov
imul
jle
pop
add
sub
ret
jl
cmp
jg
inc
jmp
cmpb
jne
shrb
andb
add
loopne
sub
adc
pusha
sub
and
pop
aaa
daa
add
adc
iret
sbbb
jbe
test
mov
sbb
mov
pusha
or
inc
mov
inc
adc
add
and
cli
and
dec
test
ret
roll
or
inc
mov
lret
ja
jge
and
jnp
inc
adc
add
fs
add
test
popa
mov
cmp
test
test
adc
mov
testb
push
cmp
mov
push
inc
push
adc
rolb
lock
pop
adc
inc
or
in
popa
jmp
adc
rcrb
xchg
pop
rclb
adc
adc
push
rclb
push
push
nop
sub
add
les
popa
adc
adc
mov
rolb
pushf
pusha
pop
adc
inc
or
cwtl
pusha
cmp
adc
lcall
adc
ds
adc
inc
inc
adc
inc
loopne
inc
insl
sbbb
mov
adc
jmp
and
push
push
pop
and
faddl
rclb
push
push
ret
add
pop
mov
mov
dec
sbb
sarb
cmp
jl
cmp
jg
lret
dec
fsts
sbb
xor
sbb
cmp
jl
cmp
jg
cmp
jle
pusha
sub
xchg
inc
and
adc
inc
and
imul
adc
and
out
cmp
popf
pop
inc
adc
shll
add
adc
pushf
shr
and
js
adc
loope
jbe
adc
pop
adc
lock
jg
adc
or
mov
dec
repz
push
inc
call
clc
add
clc
lea
pop
and
add
push
sbb
push
imul
sub
add
lea
jmp
loopne
pop
add
cmpl
jne
and
dec
adc
mov
jmp
mov
cmp
jle
sub
sbb
inc
adc
loope
or
adc
inc
or
fwait
adc
add
and
adc
sbb
mov
mov
inc
cld
push
add
jns
inc
xor
push
subb
pop
mov
enter
add
cmp
pusha
gs
jns
add
dec
orb
adc
ret
sub
inc
adcb
inc
adc
adc
pusha
ret
or
jns
and
mov
movzbl
push
jno
dec
and
test
push
adcl
fstpl
mov
inc
ficoms
adc
inc
and
test
aaa
adc
and
adc
jne
push
jb
mov
dec
adc
push
push
fs
mov
push
push
push
mov
call
mov
mov
inc
adc
shlb
cmp
adc
pusha
adc
push
pusha
adc
es
and
mov
pop
adc
scas
pop
and
sub
and
or
shlb
and
adcb
inc
or
and
lea
jnp
push
daa
adc
fldcw
ljmp
push
jmp
xchg
sbb
jp
push
add
in
and
test
sub
add
pop
and
inc
adc
or
and
adc
ret
adc
adc
test
inc
push
adc
and
lcall
push
mov
mov
mov
mov
pop
and
adc
pop
and
sbb
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
inc
inc
adc
add
pusha
dec
pop
add
pop
pop
test
pop
sbbb
add
xchg
adc
jp
inc
inc
and
adc
inc
push
dec
push
adc
inc
push
adc
test
mov
addb
adc
adc
into
je
cmp
jne
or
jmp
or
pusha
test
and
add
and
push
or
jmp
or
pop
pusha
dec
adc
pop
je
and
adc
and
fimull
popa
adc
and
mov
add
lret
call
loop
rolb
inc
cmp
jge
lea
cmpl
jne
inc
pop
pop
inc
adc
jl
inc
mov
sub
adc
and
and
mov
sbb
inc
dec
push
lea
push
push
pop
inc
sub
lret
push
and
inc
pushf
adc
sbb
sbb
insl
je
sti
dec
es
add
sub
test
jge
and
andb
inc
inc
pop
adc
js
push
and
mov
lea
inc
adc
pop
inc
pop
inc
mov
enter
adc
or
add
adc
sbb
repnz
mov
shl
test
je
inc
and
jmp
xchg
lock
iret
loope
jnp
inc
cmp
cld
pop
and
inc
adc
jmp
push
rclb
and
adc
inc
cmp
and
or
enter
xor
rep
and
sub
sub
sub
pop
mov
mov
inc
add
pop
and
jno
into
and
adc
leave
popa
and
dec
adc
jns
adc
sbb
pop
or
cltd
mov
dec
movsl
and
adc
stc
and
adc
xlat
jb
pop
mov
shl
sub
not
push
outsl
adc
and
and
ss
lret
mov
ret
and
jg
lret
add
shl
push
jo
in
sbb
fmull
pop
mov
push
pop
inc
pop
adc
fistpll
rcrl
shrl
mov
mov
inc
lods
dec
ret
push
lret
push
dec
sub
fdivp
lcall
inc
mov
mov
inc
das
push
jmp
dec
push
and
movzwl
and
adc
sbb
adc
pop
sub
cld
jne
push
rclb
imulb
adc
sbb
and
dec
and
inc
pusha
adc
out
dec
mov
enter
adc
mov
and
adc
push
mov
lahf
lea
add
enter
cmp
jge
es
jmp
cmp
jg
sub
mov
pop
dec
adc
inc
or
inc
and
sub
adc
orb
and
mov
jge
cmp
jl
and
ja
and
adc
adc
aaa
push
out
jle
inc
push
inc
adc
andb
pusha
and
add
andb
add
sub
mov
shl
dec
jo
neg
sbb
arpl
add
hlt
cmp
jne
and
add
adc
or
and
adc
cmpb
push
xchg
lds
fwait
adc
xor
les
mov
or
aam
test
or
jg
and
add
sub
adc
sub
mov
add
dec
or
lea
movb
test
mov
jle
mov
push
stos
adc
pop
sbb
adc
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
orb
push
and
test
jl
cmpb
jl
dec
cmpb
push
cmp
xor
cmc
decb
pop
xor
incl
jmp
and
sub
inc
push
and
daa
pcmpeqd
push
and
rclb
inc
fcomps
jne
push
pop
cmp
adc
movsl
movsl
movsw
inc
sbb
out
and
jne
jge
sub
pop
pop
adc
mov
movswl
js
adc
lock
and
les
jle
out
and
testl
inc
push
mov
mov
and
push
adc
mov
inc
add
adc
mov
and
cmp
inc
lret
fisttpl
cmp
je
lea
adcb
loopne
jmp
movsb
adc
cmp
and
push
or
mov
jmp
lea
sbb
mov
shr
filds
or
push
lods
adc
loop
and
add
adc
adc
leave
mov
shr
or
lea
mov
adc
adc
jmp
inc
or
dec
or
sbb
cmc
and
and
push
xor
movzwl
push
push
dec
mov
je
and
out
adc
je
push
cmp
pop
dec
jne
push
jmp
movl
bound
jmp
push
jmp
push
push
push
pop
lea
push
mov
xchg
insl
adc
mov
adc
adc
clc
sbb
gs
jmp
mov
fldl
and
fstpl
or
mov
lea
dec
lea
lea
sub
ret
push
or
je
and
outsb
and
scas
adc
sub
and
and
dec
pop
xor
adc
xor
pop
dec
adc
adc
push
mov
push
push
dec
add
mov
cmp
and
jno
rcrb
rcll
add
fists
jle
and
and
inc
and
inc
adc
pop
sbb
loope
and
rclb
mov
mov
adc
and
daa
filds
pop
inc
add
pop
adc
inc
push
in
or
adc
test
jp
adc
jne
jne
movsb
fcompl
test
sbb
pop
mov
mov
inc
lea
and
inc
and
mov
adc
dec
inc
mov
add
add
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
and
adcl
pusha
mov
adc
mov
dec
sbb
lret
and
xorb
inc
jle
sub
push
pusha
rclb
push
and
adc
ret
je
pop
cld
add
and
adc
and
push
rcl
adc
pop
out
je
and
ficoml
je
movl
dec
add
adc
push
popa
dec
mov
jns
loopne
sub
popa
and
inc
sub
inc
adc
mov
inc
adc
xor
mov
pop
adc
dec
sub
inc
adc
pusha
push
sub
bound
mov
adc
in
adc
adc
or
dec
push
sub
add
test
sbb
inc
pop
adc
sub
add
add
pop
je
movsb
and
call
hlt
xor
pop
lahf
loop
call
inc
lock
inc
aam
inc
rolb
push
inc
adc
jge
and
adc
je
add
or
nopl
stc
or
out
add
mov
inc
push
dec
adc
xchg
adc
pop
pusha
sub
cmp
jl
cmp
jg
push
inc
leave
adc
and
stos
adc
sbb
sbb
jl
je
sub
adcl
icebp
push
movl
jmp
and
jmp
inc
dec
adc
push
lock
inc
push
adc
mov
sbb
cmp
je
and
sti
inc
jle
sbb
inc
jle
cmp
jle
gs
push
cmpb
push
addb
movsl
adc
inc
push
adc
mov
ja
push
adc
jp
and
and
mov
mov
adc
adc
adc
xchg
adc
push
sub
sub
jge
adc
notb
sbb
jl
mov
adc
and
adc
incl
inc
sub
jmp
rorl
and
dec
adc
pop
adc
adc
xor
andb
repz
jo
adc
jo
fwait
es
inc
inc
adc
mov
test
adc
sub
mov
mov
pusha
add
bound
dec
popa
mov
dec
adc
sbb
inc
dec
je
sub
adcl
or
mov
pusha
int3
adc
inc
xor
fmuls
jmp
or
adc
bound
adc
push
pop
dec
orl
jmp
and
push
adc
pop
sbb
adc
je
and
and
dec
call
subb
push
fs
inc
pop
pop
or
cmp
je
adc
inc
pop
adc
adc
testb
cmc
sub
sbb
cld
xor
inc
rolb
add
ret
mov
and
xorb
rorb
dec
mov
lock
add
push
pop
cmp
jbe
cmpb
jl
incb
and
and
and
cltd
rclb
xchg
dec
cmp
cmpsb
and
adc
lea
inc
rcll
movsb
dec
inc
pusha
ja
in
cltd
sbb
or
dec
call
add
fcompl
loopne
add
inc
sbb
dec
fdivl
sub
cmp
xor
xor
mov
inc
adc
and
adc
fstpt
adc
rol
inc
in
and
jnp
pop
cmp
jo
movl
jbe
pusha
jl
jne
xchg
mov
pop
ret
mov
ja
sbb
xor
xor
jmp
loopne
inc
dec
and
inc
fistl
rolb
je
daa
push
add
or
pop
mov
mov
mov
and
adc
adc
sub
add
iret
inc
add
stc
inc
add
es
add
inc
add
daa
dec
add
add
sub
adc
inc
add
gs
add
cmp
jne
adc
adc
add
ret
push
mov
mov
and
lret
ret
cmpsb
and
push
adc
test
pop
sub
cmpsb
and
mov
or
add
outsl
and
cmpsb
adc
data16
sbb
push
mov
pop
pop
ret
lea
cmp
or
push
and
bound
dec
pop
pop
adc
es
mov
and
dec
jns
and
and
ja
adc
hlt
adc
lcall
bound
cmp
push
jae
and
cmpsb
adc
adc
adc
adc
je
imul
adc
orb
andl
lock
pop
lock
arpl
inc
sbb
pusha
adc
loopne
sbbb
dec
pop
adc
ljmp
adc
dec
mov
or
mov
and
das
adc
adc
mov
adc
mov
adc
mov
adc
and
add
cwtl
add
push
pop
adc
daa
cwtl
sub
add
cs
ret
cmp
inc
jne
arpl
and
adc
mov
and
and
or
lret
je
dec
leave
adc
mov
and
jo
loope
mov
and
adc
popa
mov
sub
inc
adc
leave
cmp
setne
and
adc
xor
subb
popf
inc
sub
jb
cmp
jne
sub
add
jmp
and
andl
in
stc
adc
sub
test
adc
leave
and
ret
sbb
mov
xor
and
ret
adc
dec
stos
adc
shlb
call
or
adc
test
jne
test
je
test
jne
cmpl
andb
and
mov
cmp
jne
and
pop
adc
adc
mov
and
push
mov
cmp
je
inc
adc
jmp
adc
mov
inc
dec
adc
inc
add
out
and
and
mov
and
and
loope
cmp
cmp
jae
mov
mov
daa
nop
add
je
adc
je
and
adc
and
xchg
sbb
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
pop
orl
push
aaa
adc
xor
sbb
bound
sti
add
jae
xor
popa
adc
add
inc
add
insl
xchg
loopne
dec
adc
xor
cmc
adc
mov
out
add
xorl
push
and
adc
inc
and
adc
lea
pop
and
cs
add
pusha
and
loopne
and
mov
rorb
add
into
and
adc
or
jecxz
or
adc
aaa
mov
adc
and
shl
adc
add
pusha
push
adc
ja
das
pop
add
adc
dec
rolb
insb
xchg
add
mov
mov
add
mov
lea
shr
out
lcall
jo
shr
shl
and
jp
sub
dec
add
add
repnz
shl
shr
dec
mov
add
or
out
or
iret
or
pop
mov
mov
mov
cmp
xor
cmp
push
push
adc
dec
inc
inc
inc
sbb
mov
mov
jbe
push
and
xor
repz
movsl
movsl
push
outsl
sub
mov
test
and
pusha
or
outsl
mov
and
adc
mov
and
adc
int
dec
adc
xor
pop
cmp
jne
and
dec
pop
rol
or
mov
shr
shl
or
jno
adc
lock
les
jae
mov
jmp
mov
jae
jne
mov
and
pop
jmp
push
and
adc
repnz
adc
shlb
outsb
pop
adc
xchg
push
sbb
test
push
movb
movb
add
out
add
out
add
jmp
int
inc
add
jmp
add
in
inc
add
in
inc
add
out
aas
and
aas
sbb
je
movb
jmp
inc
add
and
mov
push
test
jne
cmp
jne
andw
pusha
sbb
movb
movb
dec
int3
adc
adc
xchg
inc
pop
andb
add
cmp
and
adc
and
xor
push
jmp
inc
xchg
adc
arpl
and
jne
push
cmovo
adc
adcb
sbb
adc
das
lahf
pop
inc
adc
xchg
mov
adc
pop
sub
add
push
pop
jmp
movzwl
mov
inc
push
adc
pop
dec
push
nop
adc
or
jecxz
add
add
push
cli
imul
mov
lea
adc
sar
mov
movswl
neg
and
xchg
adc
aas
jb
adcb
inc
loopne
sbb
sbbb
inc
sbb
mov
je
push
sub
clc
test
jg
sbb
nop
inc
adc
cmp
jle
push
pop
movzwl
sub
jl
cli
add
inc
sbb
push
cmp
inc
pop
mov
decl
pop
jne
push
insl
adc
neg
and
or
dec
pop
jne
lea
inc
fsts
test
dec
cmp
jle
mov
lea
lea
movsl
dec
xchg
adc
push
mov
and
outsl
and
inc
sti
mov
and
pop
lahf
adc
imul
adc
add
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
jb
adc
push
push
adc
icebp
and
inc
incw
incb
sub
sub
mov
movsbl
adc
add
loope
inc
das
adc
cmp
and
adc
inc
sub
fldcw
add
adc
xor
aad
shll
adc
xor
inc
dec
adc
in
mov
inc
or
pop
xor
and
and
and
cmp
add
and
push
subl
mov
or
mov
pop
adc
test
mov
sbb
adc
lods
push
inc
add
or
push
jne
sub
xor
and
push
inc
jp
push
cmp
jne
cmp
jne
and
adc
popf
xorl
inc
or
pop
out
adc
dec
mov
test
adc
add
lea
or
adc
call
dec
hlt
push
movsl
pop
movzwl
imul
mov
add
push
push
pushl
daa
int3
add
push
inc
xor
inc
xchg
add
hlt
add
dec
call
cld
add
inc
lock
data16
jg
addl
out
sbb
add
testb
jne
and
arpl
adc
sub
sbb
push
adc
rclb
push
movsb
sbb
neg
add
mov
testb
inc
inc
adc
loopne
adc
dec
pop
jne
and
inc
and
js
faddl
inc
into
pop
faddl
xorb
inc
fcoml
adc
add
add
xor
jne
andl
cmpl
jne
andl
pop
adc
jne
inc
xor
adc
inc
out
sub
incw
jmp
incl
outsb
push
adc
inc
xor
sbb
adc
mov
and
and
mov
jmp
neg
sbb
and
inc
or
add
andl
mov
mov
mov
adc
sbb
dec
lods
adc
mov
adc
inc
adc
push
adc
and
adc
mov
pusha
and
inc
and
ficoml
ret
push
pop
sub
pop
cmp
je
lea
add
cmpl
xorl
jge
movsl
movsl
movsl
decl
push
out
add
mov
add
dec
or
and
adc
jmp
and
adc
addb
fbld
adc
add
adc
add
add
adc
addb
sbb
add
adc
addb
je
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
addb
xor
add
adc
add
adc
and
fsts
xchg
and
cmp
jae
dec
mov
adc
inc
sbb
neg
sbb
not
and
inc
and
xchg
add
and
pop
pusha
xor
adc
ret
sbb
mov
pop
and
mov
pop
cmp
inc
ficoml
shlb
pop
test
mov
xor
push
adc
jge
add
and
push
dec
push
ss
push
pop
mov
lahf
and
inc
or
cmp
stos
and
ficoms
in
mov
or
adc
sbb
cmp
les
and
in
mov
add
pop
je
adc
cmpb
cmp
add
in
mull
pusha
rcll
and
adc
das
aaa
loopne
adc
mov
push
push
xchg
dec
testb
adc
orb
testb
pusha
inc
adc
jnp
aas
add
or
adc
xor
adc
mov
inc
add
inc
add
out
inc
add
repz
add
adc
bound
pusha
and
xor
scas
pop
inc
adcl
sbb
add
add
inc
adc
push
add
sbb
adc
daa
sarb
nop
adc
cltd
shlb
or
jle
gs
pop
xchg
dec
and
adc
adc
mov
inc
dec
and
and
and
in
pop
adc
mov
cli
adc
call
inc
rclb
and
je
mov
js
pop
adc
gs
pop
pop
and
mov
push
push
mov
aas
adc
jmp
jne
pop
push
push
and
insb
adc
add
and
stc
adc
pop
jne
push
inc
sbb
push
push
push
push
push
push
mov
out
out
jp
cmp
cmpb
xor
and
les
loopne
jns
and
inc
push
icebp
cmp
je
inc
add
adc
je
push
adc
movl
pusha
sbb
jne
and
and
sub
adc
jmp
inc
sbb
adc
or
or
cmp
fs
adc
and
and
pop
or
jo
dec
mov
call
test
jl
fcoms
dec
dec
adc
lahf
ret
mov
call
test
pop
jne
and
xchg
adc
stos
lret
fists
lcall
and
lock
gs
pop
adc
and
and
cli
outsl
and
call
adc
push
mov
inc
mov
je
andb
inc
inc
pop
pusha
adcb
and
out
adc
lcall
dec
mov
jb
adc
mov
push
sub
and
call
rcrb
or
rclb
call
and
and
lcall
inc
lods
adc
and
dec
pusha
adc
and
mov
lret
and
jnp
inc
add
xchg
adc
jnp
inc
cli
adc
push
push
dec
inc
mov
fwait
push
push
adc
outsl
jecxz
out
aas
jae
jnp
sub
aas
adc
out
aas
adc
pop
and
adc
xor
aas
dec
jp
fildl
adc
sahf
and
out
adc
and
mov
push
mov
aas
pop
cmp
jne
dec
jne
jmp
sub
aas
pop
mov
cmp
and
and
push
add
mov
daa
adc
adc
mov
adc
adc
inc
adc
mov
sarl
pusha
or
das
push
and
jmp
lea
adc
icebp
and
mov
adc
push
adc
cli
mov
inc
lret
push
or
mov
mov
dec
mov
popf
sbb
jnp
jge
lea
push
mov
and
and
inc
push
push
andb
fwait
and
and
aam
and
xlat
add
sub
push
push
and
daa
adc
mov
or
or
or
mov
mov
and
sub
and
sbb
mov
mov
jne
scas
cmc
or
call
cmp
pop
mov
sahf
and
rcll
add
inc
push
adc
jne
adc
and
xor
pop
clc
add
cmp
jae
adc
std
rcrl
jae
adc
clc
lea
jmp
inc
fsubs
and
adc
repz
and
daa
adc
mov
push
das
and
cli
mov
mov
sub
mov
imul
add
adc
cmp
push
push
pop
jl
cmpl
jle
inc
push
adc
iret
dec
xchg
push
adc
pushl
push
and
and
add
sbb
adc
inc
inc
adc
ret
cmp
adc
jae
inc
nop
bound
adc
pop
and
jb
pop
je
mov
adc
jmp
xor
sbb
testl
lock
orb
popl
cmp
sbb
sub
andb
push
add
xchg
iret
pusha
dec
and
adc
inc
roll
add
pop
in
jb
mov
jo
cmpsb
dec
and
xor
bound
mov
in
jle
insl
int3
adc
xor
and
push
mov
push
lea
mov
cmp
jle
and
ret
jle
pop
and
cmp
jne
and
fs
jmp
mov
cs
push
je
adc
shr
aad
and
and
xchg
adc
movb
or
jne
shrl
adc
inc
inc
adc
dec
andl
mov
adc
jl
and
adc
inc
push
and
inc
clc
inc
jp
sub
and
adc
push
add
jl
adc
and
inc
adc
pop
xchg
and
inc
jnp
or
mov
cmp
jnp
adc
adc
push
mov
xor
and
lds
mov
adc
adc
shll
mov
inc
adc
add
push
arpl
stos
adc
and
xor
dec
imul
inc
sahf
adc
and
sti
adc
and
or
into
and
daa
inc
push
mov
cmp
je
xor
test
and
adc
and
popf
ss
add
and
jne
addl
and
in
xchg
in
jmp
cmp
je
and
adc
and
mov
dec
add
test
jne
cmp
jne
pusha
adc
mov
pusha
adc
je
and
adcl
loop
subl
sbb
clc
jmp
xor
cmpb
jne
and
aas
sub
pusha
jo
jle
mov
mov
sub
dec
mov
clc
aaa
dec
cmpb
dec
xor
add
inc
hlt
and
and
cmc
pusha
je
mov
xorb
sub
adc
adc
mov
and
add
dec
sbb
sbb
pop
or
sbb
aad
dec
adc
add
orb
adc
shll
inc
xor
inc
hlt
mov
cmp
jg
fdiv
adc
lds
adc
rorl
xchg
pusha
pop
and
pusha
pop
and
adc
sub
pusha
adc
clc
imul
adc
test
call
jl
sub
xorb
call
inc
or
dec
je
je
push
jle
inc
out
mov
nop
adc
pusha
adc
sbb
push
movsb
call
call
and
and
pop
jmp
popa
pop
adc
add
sub
xlat
add
and
pop
jmp
and
mov
adc
and
out
and
sbb
repz
mov
cmp
jg
jne
in
push
adc
nop
lea
adc
jle
lods
adc
data16
adc
mov
lock
ret
push
fldl
jmp
dec
adc
push
jns
fstpl
imull
xor
adc
jmp
and
repnz
pop
leave
je
dec
je
inc
rcrl
sbb
imul
adc
mov
and
arpl
adc
jl
pop
stos
push
adc
inc
testb
pusha
cmp
jmp
pusha
pop
adc
jne
jmp
xorl
inc
test
mov
dec
adc
and
clc
adc
fisubs
adc
fsubrp
data16
adc
and
and
call
inc
and
aaa
adc
adc
cmpsb
add
cmp
testb
adc
fisubl
dec
clc
dec
inc
adc
jns
sub
add
sbb
and
mov
sub
mov
jno
ret
push
es
add
es
add
xchg
outsl
cmpb
adc
out
add
clc
je
jb
jo
sub
add
lea
push
and
mov
js
adc
and
rolb
jecxz
adc
inc
adc
inc
and
pop
dec
movsl
adc
adc
mov
fmuls
pop
or
test
mov
je
jbe
and
pop
adc
adc
icebp
inc
inc
pusha
stc
adc
call
jmp
and
sub
andb
inc
pop
push
push
push
push
adc
lret
and
das
adc
lret
loopne
adc
or
sbb
mov
xchg
adc
jne
dec
xchg
adc
jne
adc
mov
lea
push
push
push
push
push
adc
push
dec
dec
and
jmp
adc
adc
pusha
rcll
lea
add
mov
mov
jb
adc
inc
adc
and
adc
cmp
mov
adc
dec
pusha
or
jle
movl
mov
xchg
push
xchg
pop
add
sbb
cmpsb
jb
adc
mov
orl
pop
adc
orb
push
adc
cmp
fs
dec
adc
xchg
dec
dec
push
andb
lahf
and
cmpl
je
imul
mov
adc
mov
adc
inc
xchg
push
popa
adc
push
and
adc
mov
push
and
popf
addl
addr16
outsl
andl
ficoml
cmc
aad
xor
or
push
push
push
and
js
pop
dec
jl
sub
add
pop
addr16
adc
mov
repnz
adc
pop
hlt
into
mov
mov
mov
inc
or
sub
adc
out
pop
adc
aad
stos
adc
jb
testb
je
mov
jmp
pusha
test
hlt
addb
adc
mov
adc
adc
cmp
lock
test
pop
je
and
cmpsb
and
cwtl
shlb
adc
adc
dec
and
adc
pop
ficoml
add
pop
ret
mov
adc
xchg
push
testb
mov
and
and
and
cli
adc
lock
ja
push
call
addr16
out
mov
popa
popf
dec
outsb
adc
loope
adc
push
push
push
pushl
mov
movsl
jp
jge
inc
and
adc
jmp
push
mov
push
stos
and
sti
adc
dec
iret
adc
push
adc
pop
and
gs
dec
adc
addb
loopne
and
mov
in
pushl
test
adc
mov
add
add
daa
jno
push
rol
sub
adc
enter
clc
pop
loop
mov
jno
call
adc
mov
inc
movsl
adc
rol
call
adc
mov
inc
insb
adc
and
add
mov
popa
es
or
and
repz
inc
mov
cmp
je
cmp
cmp
adc
cmp
pop
cmp
jmp
js
scas
adc
call
jmp
mov
adc
pop
mov
push
jmp
mov
pushl
pusha
push
and
mov
fistl
inc
loope
add
arpl
adc
dec
inc
jmp
and
push
push
adc
push
mov
jmp
mov
test
inc
notl
mov
push
and
add
movl
rep
mov
pop
and
loopne
test
sahf
adc
jbe
mov
and
inc
add
and
push
dec
inc
mov
and
push
push
push
movl
cmp
movl
movl
sub
nop
mov
inc
outsb
pop
or
mov
cmpl
push
aaa
adc
dec
jo
cli
xchg
adc
inc
js
pop
outsl
lods
adc
adc
add
daa
in
xorb
xchg
imull
pop
arpl
dec
mov
xorb
dec
test
adc
pop
ret
loope
dec
add
stos
icebp
inc
jo
add
jae
adc
sbb
adc
inc
clc
lahf
add
pop
jge
je
push
adc
movsb
sbb
jp
mov
cmp
je
mov
adc
jmp
dec
bound
adc
fisttps
adc
sti
jne
mov
push
sbb
push
mov
xor
push
mov
pusha
or
pushf
mov
or
cwtl
mov
or
xchg
orb
pushl
mov
jle
jp
loope
inc
mov
lods
inc
cmp
bound
loopne
pop
mov
xor
adc
add
inc
loopne
fcoms
adc
andb
xchg
loopne
adc
xor
pushl
andb
loopne
mov
jne
cmp
cmovb
xchg
adc
jp
cmp
and
lods
sub
and
sub
andl
dec
cmp
sbb
push
shr
or
push
and
nop
fsubs
pop
and
shr
cmp
cmpb
adc
add
adc
out
push
sub
test
decl
and
cmp
pop
and
cld
popl
and
adc
je
and
and
and
dec
adc
dec
or
sbb
and
adc
add
cs
mov
and
mov
std
clc
insl
mov
and
adc
sbb
loop
adc
inc
jne
mov
pop
stc
adc
add
sub
add
adc
pusha
add
or
sbb
movzwl
push
push
movzwl
push
lea
adc
mov
and
adc
jo
sbb
xchg
adc
mov
adc
clc
inc
cmp
movsl
and
and
sbb
push
push
cli
je
adc
mov
and
shlb
push
push
adc
adc
cli
adc
stos
xor
adc
push
fs
jo
jbe
inc
je
mov
push
push
pop
inc
adc
and
adc
push
mov
sbb
adc
jmp
lods
sub
adc
inc
inc
movsb
and
repnz
sahf
and
lcall
fistl
push
andb
mov
adc
mov
and
sbbl
mov
xchg
adc
mov
repz
popa
mov
xchg
and
adc
and
push
sub
adc
ret
dec
add
mov
hlt
pop
and
aad
fsubs
adc
sub
add
js
mov
lods
mov
sub
adc
sub
and
and
les
adc
test
inc
inc
and
adc
test
mov
sub
mulb
adc
fldenv
xchg
aad
sbb
sub
subb
dec
and
xchg
adc
xor
push
adc
sub
adc
adc
loopne
adc
xchg
adc
inc
xchg
adc
loopne
jb
jecxz
inc
in
sub
add
pop
and
out
xor
push
adc
shll
inc
aaa
adc
inc
fsubs
scas
es
inc
inc
adc
ret
test
jge
sub
movsb
and
or
push
mov
add
add
adc
push
inc
lods
adc
rclb
and
and
adc
loopne
and
xchg
adc
popl
adc
rorb
lahf
adc
pop
ret
mov
adc
lahf
popa
mov
adc
jge
pop
fists
mov
xorl
enter
or
xor
adc
dec
add
fcom
sub
mov
inc
mov
ret
adc
xor
ja
inc
dec
and
es
and
and
adc
mov
and
adc
andl
xlat
and
daa
inc
add
jg
es
adc
sub
add
xor
inc
aam
int3
push
mov
test
imull
push
mov
mov
scas
and
or
mov
orb
out
sub
adc
jp
in
adc
mov
adc
pusha
sub
or
sbb
add
mov
ret
mov
mov
sbb
add
je
aas
ljmp
daa
scas
add
inc
js
enter
mov
and
rorb
sub
push
aas
arpl
dec
rolb
insl
adc
adc
add
push
addb
aam
loopne
mov
add
in
add
jno
adc
or
loope
jle
add
and
and
push
push
adc
rolb
adc
xchg
and
pusha
and
inc
inc
stos
pop
mov
add
clc
dec
push
adc
das
stc
jp
pusha
imul
sbb
call
inc
and
rorb
pop
addr16
andl
movl
pusha
ficoml
inc
xor
or
mov
dec
mov
movl
adc
inc
adc
jle
dec
icebp
adc
xor
loopne
adc
jbe
lea
mov
adc
arpl
push
and
cwtl
inc
adc
jns
add
add
pusha
inc
adc
jg
push
pop
xchg
and
pop
push
and
pusha
jge
dec
adc
and
xor
add
shll
into
mov
sub
inc
dec
adc
adc
adc
mov
icebp
and
test
jno
adcb
inc
cltd
adc
adc
xor
fmuls
mov
dec
push
adc
adc
push
pop
adc
xchg
rorl
adc
and
adc
and
call
mov
adc
and
clc
adc
inc
adc
inc
mov
jb
and
ds
and
pop
adc
adc
and
adc
aam
enter
mov
leave
ret
es
mov
call
popa
mov
mov
fcomps
pop
adc
mov
jecxz
adc
lea
inc
or
mov
pop
dec
mov
daa
std
add
xor
xchg
pusha
and
dec
sarl
xor
cmp
and
sbb
out
adc
push
and
and
or
push
push
push
push
push
mov
inc
inc
push
cmc
adc
je
cmp
adc
jae
insl
sub
adc
sub
cmp
test
mov
mov
push
xchg
push
call
jb
adc
call
jne
and
daa
adc
imul
pop
lea
rep
insb
gs
jne
and
push
je
cmp
je
inc
cmp
inc
dec
push
xchg
adc
rorb
inc
push
mov
adc
push
mov
inc
pop
adc
sbb
lea
push
mov
addr16
and
call
test
and
dec
adc
cmp
sbb
loop
jge
adc
push
adc
clc
pop
std
inc
insb
adc
and
dec
adc
dec
ret
insl
adc
imulb
and
insl
inc
lock
adc
dec
enter
adc
jmp
bound
xchg
pop
imul
push
decl
subb
push
jmp
and
and
mov
inc
aam
imul
pop
adc
adc
push
lock
push
mov
enter
aam
cs
mov
adc
pop
inc
sub
test
inc
and
xchg
add
sbb
adc
mov
pop
cltd
adc
push
adc
inc
nop
pusha
lret
adc
inc
jo
push
out
adc
or
mov
adc
or
pusha
inc
mov
pop
push
or
mov
jne
mov
test
je
cmp
push
mov
mov
in
pop
inc
cmpl
je
push
adc
aam
push
adc
jb
inc
push
adc
inc
aam
je
imul
cmpsb
jg
or
pop
and
sbb
adc
jle
jne
xchg
dec
adc
xorb
push
icebp
pop
dec
add
jle
and
or
mov
and
adc
mov
inc
inc
ficoml
lock
and
adc
adc
roll
adc
jge
and
jg
icebp
adc
or
faddl
adc
adc
or
adc
inc
jge
push
inc
sbb
shll
push
fsts
movzwl
std
cmp
or
inc
sub
push
push
dec
adc
loopne
rorb
xchg
adc
or
in
je
dec
dec
inc
dec
adc
cmp
and
cmp
sbb
and
cmp
adc
pop
adc
adc
call
data16
enter
adc
push
rorb
pusha
or
add
or
adc
adc
xchg
ljmp
inc
and
add
inc
push
nop
mov
adc
jecxz
aas
loope
jecxz
mov
movups
add
stc
xor
mov
pop
mov
lret
pop
imul
adc
fs
adc
addr16
cmp
adc
mov
inc
xchg
adc
mov
pusha
or
xor
mov
push
cmpsl
aas
inc
jne
jno
dec
and
cs
fists
mov
pop
add
and
ss
test
lods
and
add
dec
adcb
adc
bound
lods
and
mov
inc
mov
inc
lods
loop
adc
cmpb
cmpb
inc
outsl
adc
and
pop
add
jge
adc
inc
bound
fcoml
mov
subb
andb
adc
dec
add
andb
push
mov
and
adc
push
fs
xor
inc
in
and
xchg
push
fwait
adc
cmp
testb
je
and
fcoml
andb
adc
xorb
sub
mov
and
mov
and
adc
adc
orb
adc
inc
or
dec
lock
inc
mov
jns
je
or
notl
mov
icebp
adc
notb
repnz
testb
and
xlat
inc
mov
incl
aas
inc
dec
adc
push
sub
adc
and
mov
and
and
adc
and
adc
adc
mov
adc
call
xchg
adc
or
sub
adc
or
pop
add
push
mov
inc
in
subl
movsl
cmpl
fisubs
inc
dec
adc
and
loop
pushl
and
dec
and
jmp
pop
loope
testw
repnz
sbb
adc
and
push
cmp
inc
stos
inc
and
jb
inc
lea
adc
cmp
or
and
ja
jmp
inc
mov
aas
adc
incb
arpl
add
adc
xor
adc
incb
pusha
pop
adc
cmp
adc
cmp
xor
adc
and
adc
and
in
je
cmp
je
jo
mov
push
and
adc
into
and
jp
push
push
pusha
cmc
adc
sub
mov
xchg
inc
pop
and
adc
adc
mov
and
shll
fcoml
clc
bound
sub
pop
mov
push
pop
rolb
or
jecxz
and
and
push
adc
mov
fwait
and
inc
sub
inc
arpl
insb
sub
ficoml
sub
adc
ss
es
sub
mov
jnp
mov
jnp
adc
add
push
cmovns
pusha
jmp
cltd
xchg
loop
push
push
and
adc
outsl
and
sub
push
pusha
push
adc
push
add
pop
mov
jmp
ret
jg
adc
add
push
loop
inc
popf
and
inc
and
ret
dec
lock
aam
and
dec
jne
iret
and
fimuls
adc
push
movsl
inc
mov
call
push
adc
addb
out
adc
and
mov
pop
and
mov
decl
aaa
inc
xchg
inc
pop
adc
sub
adc
dec
dec
inc
xor
adc
pop
add
lock
filds
adc
cmp
jge
cmc
stos
and
pop
jno
cmp
jne
mov
cmp
adc
movsl
push
xchg
pop
frstor
pop
inc
adc
push
sub
pop
adc
pop
cmpsl
adc
or
inc
jg
shll
adc
orb
mov
pop
inc
dec
addb
cmc
sbb
xor
movl
inc
dec
fists
dec
adc
lret
shrl
in
adc
call
jno
sub
es
call
or
push
inc
out
fwait
adc
mov
dec
fs
jae
pop
dec
out
mov
adc
mov
adc
adc
push
lret
jne
mov
shl
dec
out
adc
xchg
push
inc
mov
dec
lds
ss
sub
adc
cmp
jg
mov
cmp
jle
mov
lea
imul
xlat
shl
push
daa
jmp
pop
in
inc
adc
inc
sub
push
and
inc
adc
adc
sarl
shr
inc
adc
adc
and
push
jl
adc
inc
or
stc
jl
xchg
mov
inc
cmp
pop
jge
jbe
mov
adc
and
iret
lea
adc
add
xchg
fistl
and
leave
scas
push
es
and
xor
stc
cmp
jl
lea
push
add
adc
push
and
adc
adc
and
push
push
mov
orb
call
cmp
push
inc
xor
add
mov
add
mov
sarb
iret
mov
rclb
adc
adc
and
dec
add
mov
adc
add
push
sbb
mov
dec
and
adc
add
adc
dec
add
pop
jnp
dec
jne
mov
adc
xor
push
xor
adc
pop
xor
add
shlb
aas
adc
jbe
repnz
das
add
dec
hlt
inc
scas
ret
sub
mov
dec
inc
rclb
push
push
lea
push
mov
cmpsl
adc
dec
jne
and
adc
loop
sub
push
adc
shll
adc
outsl
adc
les
into
mov
sub
outsl
adc
xlat
sub
adc
xor
fsubr
push
jle
sub
push
lea
pusha
unpckhps
cltd
pop
pop
jmp
add
add
iret
sub
inc
insl
and
ja
fsubrs
push
push
adc
popa
ds
sti
je
lds
scas
dec
data16
lret
dec
adc
and
push
sub
add
ret
mov
adc
adc
mov
pop
sub
and
add
subb
stos
mov
aam
adc
mov
and
jle
sub
sub
push
mov
roll
and
xchg
adc
arpl
adc
bound
and
sub
inc
je
pusha
fbld
sbb
inc
pop
adc
cwtl
adc
je
inc
repnz
adc
dec
push
inc
outsl
sbb
jle
mov
lea
and
sbb
inc
fadds
jle
jl
jmp
mov
mov
mov
ret
mov
daa
sub
adc
mov
add
push
xor
add
push
xor
add
pop
and
pusha
cmp
pushl
add
adc
mov
mov
adc
ja
std
mov
and
push
inc
and
sub
ret
je
inc
pusha
adc
inc
push
adc
sub
inc
xor
rcr
adc
adc
subl
xchg
adc
and
orb
jne
mov
inc
das
pop
add
insb
xor
add
insb
sub
add
xor
inc
push
adc
movsl
ret
rclb
lea
cmp
inc
sub
inc
push
adc
inc
adc
add
shl
sub
push
adc
add
and
cs
lret
dec
xor
cmp
cmp
add
push
sub
add
sbb
movl
adc
sub
add
cltd
sub
add
lds
cmpl
test
test
mov
mov
inc
aas
adc
pop
xor
push
inc
mov
decl
inc
popa
adc
mov
adc
lods
mov
jne
adc
icebp
pusha
push
shr
leave
sub
adc
push
adc
je
jmp
pop
mov
dec
and
jmp
cld
adc
or
dec
sub
add
pop
pushl
loope
adc
push
add
xor
mov
jmp
roll
or
push
lea
push
mov
push
adc
xchg
in
pop
cmp
adc
pop
sub
adc
dec
xor
or
pusha
xor
movsb
and
and
and
call
pop
mov
lea
dec
test
lea
jl
inc
mov
mov
inc
stc
adc
adc
adc
mov
mov
incl
and
lahf
cmp
push
inc
xor
inc
adc
adc
mov
cmc
xchg
sub
pop
add
push
ja
add
pop
and
popa
add
inc
inc
pusha
add
adc
mov
je
andl
jmp
andl
fwait
and
lret
loope
jne
push
cmp
jne
mov
inc
and
jmp
mov
mov
mov
cmp
jne
inc
or
mov
xchg
jb
jae
adc
int3
and
adc
add
inc
cltd
adc
or
inc
pusha
adc
insl
sahf
mov
imul
inc
pop
mov
adc
add
and
push
mov
and
jg
jne
test
mov
jne
inc
popl
sub
divb
stos
add
in
sub
mov
int
movsb
mov
pop
and
xor
push
push
xor
test
sbb
test
adc
shrl
add
add
jl
and
pushf
adc
xchg
arpl
push
adc
ret
add
stos
or
cwtl
push
adc
and
sub
add
mov
or
sub
pop
sub
test
jg
insb
inc
sub
movl
adc
std
xor
and
lock
inc
mov
andl
xor
andl
inc
sahf
adc
sub
add
int
add
mov
adc
push
mov
mov
subl
add
int
cmpb
xor
shr
jo
lahf
and
xor
adc
imul
and
and
add
push
mov
jmp
and
mov
adc
and
adc
rorb
pusha
cmp
iret
adc
jp
push
cli
adc
jmp
mov
inc
push
stc
mov
push
adc
mov
inc
or
jle
mov
es
ffreep
adc
and
cmp
or
xor
cmpsl
adc
pop
add
js
ret
mov
iret
push
adc
push
pop
orb
mov
pop
add
pop
pusha
mov
movsb
add
xchg
lea
adc
je
cmp
aam
rolb
adc
mov
pusha
push
adc
mov
adc
cmp
jne
mov
xor
test
jbe
inc
dec
adc
adc
test
mov
pop
mov
adc
pop
or
pop
inc
repnz
in
shll
inc
sub
and
sub
shll
pop
popa
pop
insl
jae
mov
and
adc
and
pop
mov
ja
xor
es
xchg
adc
icebp
xor
sbb
mov
and
jbe
fdivl
je
push
mov
shl
bound
push
pop
sub
adc
dec
cltd
clc
and
sub
xor
cmp
je
and
push
adc
jbe
and
sbb
je
lea
adc
mov
jmp
inc
cmp
jb
pop
es
add
outsb
add
addr16
adc
mov
jbe
inc
xchg
adc
pop
pop
pop
hlt
sub
add
rol
repz
lahf
sub
sbb
hlt
adc
pop
jmp
mov
shl
xor
adc
sub
add
mov
int3
jo
mov
std
adc
lea
sub
inc
xor
and
hlt
test
push
xor
mov
mov
test
add
imul
movsbl
add
mov
inc
jmp
xor
divl
push
xchg
inc
pop
inc
mov
mov
inc
loopne
sbb
and
sub
divl
adc
out
call
subb
es
adc
jl
loopne
inc
mov
and
sub
add
push
pop
notl
cld
push
pusha
and
std
adc
jl
jg
adc
inc
mov
ja
add
push
sub
shll
outsl
daa
and
lahf
adc
das
insb
iret
push
dec
cld
mov
mov
mov
mov
inc
and
movsb
cli
and
dec
inc
pop
adc
adc
add
sbb
adc
andb
push
cmp
push
and
adcb
loop
add
xchg
cmp
pop
icebp
sbb
cmpl
jl
mov
add
push
aas
and
adc
adc
hlt
and
push
pushl
subl
or
shll
leave
dec
pop
rcll
push
push
mov
adc
pop
jae
call
jmp
adc
xor
adc
push
mov
add
push
daa
xor
pusha
push
and
pusha
xor
jbe
xor
jo
adc
adc
push
and
pusha
xor
test
xor
adc
adc
push
xorb
adc
adc
or
push
cmp
jg
and
mov
jmp
and
cltd
inc
pop
adc
andb
lock
adcb
and
orb
pop
adc
lea
repz
pop
adc
and
xor
mov
and
push
adc
adcb
push
loopne
adc
imul
push
nop
fwait
inc
push
andb
and
shlb
mov
lea
cmp
je
mov
adc
rclb
jmp
inc
int3
es
insb
pusha
sub
shrb
jp
adc
inc
test
inc
push
adc
add
adc
cmpsb
dec
adc
mov
andb
stc
mov
cmpl
jle
pusha
xor
mov
jbe
or
sarl
pop
sub
insb
mov
or
push
inc
dec
pop
add
cmp
jle
mov
addb
sarl
enter
sub
add
mov
imul
adc
add
mov
and
sub
and
inc
test
inc
xchg
adc
push
add
and
cmp
and
orl
pop
out
push
je
mov
shr
test
jmp
or
mov
pop
adc
xor
jmp
and
popf
in
adc
mov
push
daa
cmp
cmpsb
das
daa
into
or
adc
sub
jmp
shlb
push
adc
push
andb
les
xchg
or
cmp
je
cmpl
jge
add
std
adc
sub
add
jg
adc
adc
adc
adc
pop
sub
es
and
add
mov
andb
cld
adc
or
and
xor
jo
adc
mov
fistl
ficoml
sbb
loopne
es
cs
add
inc
pop
adc
in
inc
adc
jbe
loopne
adc
or
int
and
sbb
push
fstl
cmp
and
add
shlb
dec
inc
sbb
pop
and
aaa
inc
cmc
adc
jno
and
sub
imulb
xor
adc
xor
sub
cmp
xor
jg
and
adc
andl
sbb
stos
adc
jae
adc
or
jae
adc
jae
jo
outsl
and
add
jae
js
inc
xchg
test
inc
int3
adc
add
lea
jg
mov
lea
cmp
jg
push
add
icebp
and
sbb
ret
add
inc
and
jmp
bound
fs
jo
adc
mov
push
add
fadds
cmp
adc
add
pop
loopne
mov
and
cmp
lods
add
add
xor
js
cmp
jge
mov
push
ret
popa
adc
lea
movsl
cmp
mov
mov
mov
insl
and
sub
or
or
mov
mov
pop
pusha
in
lcall
cmp
mov
mov
sub
sbb
hlt
jmp
add
fldlg2
sub
add
movzbl
and
adc
push
sub
cmpb
add
adc
adc
aaa
daa
adc
inc
mov
push
and
and
pusha
adc
or
je
dec
stos
arpl
popf
adc
cmp
and
adc
sbb
dec
push
adc
and
pop
and
inc
push
cmp
jle
mov
fwait
dec
adc
shlb
aad
je
clc
and
jae
adc
push
mov
and
popf
shrb
pop
subb
sbb
adc
pusha
sub
mov
mov
movl
push
pop
adc
dec
push
adc
mov
pop
lret
adc
and
mov
lea
push
lea
and
push
call
cltd
pop
xchg
adc
lea
and
pop
es
arpl
inc
or
lock
and
cmp
xor
pop
and
cs
inc
and
mov
and
push
and
xlat
es
and
xor
mov
and
adc
clc
mov
shrb
inc
notb
pop
and
sbb
xchg
inc
dec
pop
pusha
fisubs
orl
lahf
fsts
movl
daa
adc
sbb
xor
and
adc
clc
shll
cmpl
and
pop
rclb
jle
add
and
sub
push
and
and
adc
xchg
push
adc
and
and
adc
and
jo
ja
inc
jb
push
pushl
pusha
add
jge
adc
sbb
adc
mov
mov
push
and
addl
fisubl
cwtl
inc
adc
or
and
dec
adc
lods
and
insl
and
psubusw
lea
and
and
and
aam
and
daa
adc
adc
loopne
mov
sub
xor
and
dec
je
dec
jne
mov
jmp
pusha
push
adc
add
mov
push
and
pop
je
and
pop
sbb
clc
and
clc
xor
nop
outsb
sbb
or
or
jmp
add
jne
pop
gs
add
ljmp
or
inc
adc
and
xchg
and
out
lods
xchg
and
dec
sbb
add
jmp
push
pop
pop
sahf
and
adc
push
push
inc
mov
ds
dec
in
adc
dec
adc
sbb
inc
or
rclb
dec
and
add
jnp
mov
aas
xchg
and
and
adc
and
and
sub
jno
and
inc
jnp
popa
add
or
sbb
je
mov
jno
and
push
xchg
sub
add
shlb
push
and
out
adc
sub
and
inc
pop
and
pusha
jbe
aam
adc
outsb
in
push
sub
add
flds
push
and
movsb
cmp
dec
and
and
insb
and
push
sub
add
inc
andb
push
and
jbe
mov
popa
jne
inc
bound
bound
mov
test
pop
pop
and
sub
add
cmp
sbbb
adc
ja
fiaddl
xor
sub
add
clc
xor
add
jg
subl
sub
add
sub
in
sub
sub
push
arpl
in
sub
sub
adc
push
dec
incl
and
test
rcll
pusha
jecxz
adc
movsb
nop
call
in
push
and
and
test
jne
and
cmp
lods
inc
adc
and
jno
adc
notb
and
inc
adc
dec
inc
adc
and
adc
push
push
ss
and
jb
inc
testb
jne
mov
dec
movsl
and
and
lock
sub
test
adc
and
adc
inc
fsts
int3
and
das
adc
in
call
adc
pop
and
adc
sub
and
clc
cmp
or
sarb
clc
push
and
jp
adc
les
mov
mov
cmp
je
cmp
and
or
or
adc
nop
mov
mov
jmp
cmp
je
inc
inc
mov
inc
sub
adc
pusha
and
or
and
jmp
inc
push
and
cmp
sub
and
add
mov
lret
popf
sarb
pusha
sub
adc
outsb
add
out
xchg
rorl
divl
lea
movl
mov
and
and
lods
adc
test
jmp
push
adc
and
inc
adc
dec
arpl
adc
push
adc
scas
inc
sbb
out
fistl
call
test
and
adc
or
mov
and
xchg
sahf
inc
and
dec
daa
test
adc
xchg
and
and
sbb
push
add
jg
notl
pop
mov
aam
sbb
cwtl
jae
add
push
pushl
call
and
push
inc
push
ret
adc
dec
adc
adc
push
and
sub
push
inc
adc
ss
inc
clc
adc
and
ss
pop
mov
adc
xchg
repz
adc
and
jne
test
adc
mov
movsl
adc
scas
adc
push
test
je
cmp
jae
orb
cmp
xchg
mov
ds
jmp
adc
push
and
adc
xchg
and
sub
add
je
pop
and
dec
adc
xor
sbb
js
sub
pop
adc
inc
push
and
lods
adc
cmpsl
inc
aaa
add
adc
xor
push
xor
push
cmp
idivb
adc
lock
and
jo
int
and
mov
inc
push
adc
mov
test
call
pop
xor
or
fwait
sub
sub
adc
and
aaa
adc
cmp
and
jno
adc
sbbb
insb
and
mov
cmp
je
ret
jmp
loopne
fidivrl
inc
fcoml
push
mov
mov
inc
pop
and
xchg
jg
inc
dec
adc
adc
je
push
adc
es
int3
sub
add
adc
sub
add
jne
cmpw
jne
mov
shrb
xor
adc
inc
push
adc
push
mov
inc
pop
adc
pusha
push
adc
pop
in
inc
jl
cmp
mov
orl
orl
inc
arpl
hlt
addb
test
inc
sbb
push
loopne
insl
push
adc
inc
mov
inc
cmp
lock
jmp
mov
mov
inc
faddl
dec
test
jle
loop
adc
xor
and
adc
je
cmp
sbb
pop
call
push
loope
pusha
jne
into
and
and
inc
and
and
adcb
movsl
cmp
xchg
inc
test
pop
call
adc
and
or
push
and
lcall
lret
sub
and
in
and
inc
pop
and
je
push
jmp
lea
push
and
cmp
insb
sub
adc
pop
movzwl
mov
mov
and
dec
and
bound
and
adc
adc
push
inc
and
insb
ss
pop
mov
inc
and
hlt
into
cmpb
push
and
and
fwait
aas
adc
dec
adc
and
and
andb
es
adc
xchg
sbb
in
inc
dec
mov
inc
xchg
adc
add
mov
push
pushl
dec
dec
adc
add
lock
adc
cmc
adc
add
fs
fldenv
movsl
aas
adc
and
dec
adc
into
and
jge
je
andl
adc
adc
jge
ficoml
hlt
andb
dec
adc
mov
pop
lcall
and
push
testb
je
push
mov
pop
inc
pushf
sbb
and
les
je
push
pop
inc
std
fs
cmp
je
push
ja
movsb
mov
sbb
bound
adcb
adcb
test
adc
inc
cltd
popa
inc
loopne
inc
lods
dec
nop
adc
cmp
jne
lea
adc
adc
and
inc
adc
sub
daa
popa
mov
and
xor
dec
arpl
push
je
push
add
xor
ljmp
adc
inc
lcall
xchg
and
andb
or
and
sub
test
mov
movsb
adc
mov
inc
cmp
sub
push
dec
pop
sbbb
cmp
push
call
jmp
mov
pop
jns
inc
push
call
push
dec
adc
out
inc
ja
xor
adc
add
jg
gs
test
dec
mov
sub
inc
addb
js
or
cmp
adc
hlt
cmp
mov
je
mov
and
das
adc
push
inc
mov
mov
adc
loop
sbbb
adc
push
and
jbe
in
adc
jmp
inc
mov
jne
adc
and
cmp
leave
add
pop
ret
and
cmp
dec
and
adc
mov
mov
and
pusha
dec
adc
mov
jno
sub
cmp
dec
cmp
jb
adc
out
xchg
lahf
and
out
pop
mov
mov
je
leavew
loop
adc
in
add
pop
pusha
inc
inc
das
in
sbb
lock
test
pop
je
cmpw
adc
push
push
sbb
mov
mov
jmp
and
inc
or
or
test
dec
cmp
jne
push
inc
es
push
ja
and
adc
push
sub
loope
inc
or
lea
mov
and
adc
and
sti
daa
sub
repnz
popa
dec
adc
push
lahf
fwait
xorb
add
in
inc
mov
subb
and
jo
xchg
adc
fcoms
ljmp
push
arpl
out
lods
adc
push
call
mov
xchg
push
adc
inc
pop
adc
jne
orb
xor
testb
and
dec
adc
mov
adc
sub
add
add
cmp
and
pop
inc
or
mov
adc
mov
cmp
cmp
es
cmp
mov
adc
cmp
cmp
mov
lcall
push
and
adc
push
loopne
sbb
test
testb
inc
inc
adc
and
scas
gs
adc
shr
inc
xor
push
aaa
imul
dec
adc
roll
mov
push
adc
inc
rclb
shll
push
push
pusha
add
and
cmp
adc
addr16
dec
fisubs
rcll
or
sbb
adc
sub
add
loope
adc
jecxz
dec
and
inc
test
jl
adc
jmp
and
adc
push
jne
and
pusha
adc
insb
pop
inc
dec
loopne
sbb
mov
cmp
jne
inc
test
cmp
jne
push
sbbb
and
in
adc
movsb
cmp
mov
out
adc
cmpsl
jp
jle
loope
iret
adc
mov
and
mov
mov
inc
orb
mov
adc
inc
sbb
sbb
decl
and
jmp
ljmp
inc
adc
jmp
and
das
sub
push
push
jne
cmpl
adc
and
adc
inc
or
adc
and
sub
popa
and
mov
and
or
inc
movsl
and
and
xchg
xchg
fisttpll
sti
adc
jecxz
adc
ficoml
lods
sub
or
push
xchg
jns
pop
xchg
xchg
aaa
xor
fsubrs
pop
lea
lea
and
sahf
adc
dec
aaa
and
lock
and
fcoms
adc
incb
mov
and
mov
jne
mov
roll
add
push
pop
and
jno
cmp
and
outsb
and
push
in
jbe
jne
mov
and
adc
call
dec
mov
jne
and
shrb
cltd
and
mov
mov
mov
add
push
mov
call
and
andb
push
adc
dec
adc
cmc
mov
adc
push
inc
jno
lea
pop
lea
pusha
mov
ucomiss
push
sub
inc
ds
adc
adc
mov
dec
mov
lea
subl
add
jo
mov
js
adc
call
pop
ret
mov
cwtl
cmp
adc
sub
lock
icebp
sub
cmp
and
cmp
adc
cwtl
cmp
and
popa
notl
inc
inc
stos
popa
stc
adc
pop
dec
filds
gs
sbb
inc
and
sbb
cli
xor
test
xor
and
push
add
clc
push
mov
lea
repz
or
xor
and
adc
out
popa
and
cmp
sbb
les
adc
jecxz
xchg
push
outsb
ret
adc
pusha
inc
push
adc
pusha
adc
dec
jmp
lcall
sbb
dec
loop
mov
in
jmp
pusha
adc
call
insl
pop
adc
das
adc
movl
push
adc
adc
jne
adc
lea
sbb
outsb
add
lock
and
addl
orb
sub
lahf
nop
and
pop
insb
iret
adc
jnp
mov
xchg
call
imul
and
cltd
cwtl
rcll
in
sub
xor
adc
push
in
movl
lret
and
ljmp
shlb
adc
jmp
dec
and
scas
adc
in
jae
stos
adc
xchg
ret
and
bound
adc
mov
pop
addb
cmpsb
push
andb
adc
and
rcrb
iret
mov
icebp
inc
and
adc
and
and
insl
sbb
or
adc
inc
push
and
dec
adc
inc
pop
xchg
ficoms
push
adc
sbb
dec
adc
and
and
inc
cmp
je
cmp
je
cmp
adc
adc
cmp
jne
pushl
push
lea
les
imul
adc
ljmp
and
inc
adc
sub
aaa
adc
add
adc
mov
call
in
adc
jle
or
adc
rcll
cmp
inc
adc
push
and
lcall
divb
testb
jne
dec
cmp
popa
and
mov
jae
repz
dec
push
dec
cmp
sbb
inc
ficoms
add
and
lods
adc
inc
push
test
jne
and
cltd
arpl
push
push
inc
push
and
gs
adc
lock
jmp
cld
and
and
and
adc
out
stc
stos
xchg
push
cmpsb
data16
and
repz
jne
and
sahf
adc
cmp
repz
je
cmpl
je
and
and
adc
jmp
lock
sub
push
push
inc
cli
cmpsl
scas
sbb
jne
mov
sub
push
and
adc
push
and
adc
and
cld
inc
into
bound
jmp
xorb
mov
push
and
movb
dec
or
add
fs
adc
adc
jmp
sbbb
dec
pusha
data16
je
mov
adc
pop
repz
and
inc
and
andb
adc
cmp
adc
ret
adc
and
js
add
jne
mov
push
and
and
pushl
cmpsl
pusha
lock
adc
mov
sub
sbb
sub
sbb
jle
je
cmpl
jne
and
lock
jo
adc
mov
and
adc
fwait
sub
adc
dec
push
rclb
andl
je
popa
adc
or
adc
and
and
insb
bound
inc
inc
jecxz
mov
in
inc
inc
jecxz
call
and
adc
and
inc
sub
rorb
mov
adc
aas
adc
and
aas
adc
jno
adc
and
inc
jns
dec
xchg
mov
pushl
and
push
out
fists
jmp
mov
pushl
in
adc
call
jae
inc
adc
stos
fcoml
setne
pop
adc
mov
or
inc
sub
inc
fsubl
stos
add
adc
shlb
pop
and
and
jb
inc
inc
xchg
adc
int
pop
leave
and
and
sub
sub
pop
sub
inc
adc
fistl
inc
push
fsubs
fisttps
ret
mov
push
and
cmp
sbb
adc
imul
je
cmp
adc
adc
daa
adc
and
roll
sarb
sub
add
andl
test
sbb
clc
and
ja
jne
andl
adc
dec
cmp
or
adc
and
mov
ja
push
jne
pop
and
je
mov
adc
pop
xor
dec
arpl
leave
pop
je
mov
push
shlb
pop
and
dec
and
inc
and
cmp
aaa
add
imul
mov
and
mov
inc
inc
mov
out
sbb
rsqrtps
add
or
or
orl
es
add
rcll
loope
je
jmp
jmp
sub
int3
shll
sahf
adc
shlb
mov
xchg
adc
and
mov
adc
jge
jmp
addl
data16
pop
pop
subl
or
lcall
rclb
jmp
adc
inc
xchg
adc
adc
inc
inc
and
outsb
cmp
and
imul
xchg
adc
and
pop
cmp
popa
inc
and
adc
adc
add
and
bound
cmpsl
ds
cmc
adc
outsl
mov
inc
and
adc
mulb
and
dec
lds
or
and
adc
movzwl
test
mov
je
cmpl
jb
mov
pop
cld
adc
push
push
adc
cmpb
push
adc
push
adc
leave
and
jne
orl
push
adc
sbb
push
sub
pusha
inc
pop
adc
adcl
adc
push
jg
addr16
in
nop
arpl
pop
rcr
cmp
jmp
inc
subl
dec
mov
das
adc
pushl
aaa
adc
sub
rorl
mov
jo
adc
adc
adc
outsb
and
int
call
push
sub
insl
inc
adc
pushl
ja
and
xor
inc
or
and
xor
inc
adc
jo
push
rorb
fcompl
inc
rcll
dec
or
xchg
adc
and
adc
or
dec
add
stc
loope
adc
push
mov
test
imul
gs
xor
dec
and
mov
ret
ja
cld
adc
adc
mov
adc
xchg
adc
mull
fwait
sbb
pop
popa
xor
fdivs
incl
adc
adc
and
xchg
and
adc
and
xchg
adc
jmp
mov
adc
xor
adc
or
xchg
aad
xor
and
jmp
sub
adc
insb
push
sbb
sbb
dec
push
jne
pushl
jmp
push
inc
shlb
shrb
sub
xchg
adc
jmp
mov
scas
adc
out
inc
and
pop
and
pop
outsb
movsb
popa
xor
mov
es
or
xor
enter
and
and
enter
and
and
int
adc
jno
imul
inc
mov
adc
inc
jmp
adc
les
inc
cmp
mov
adc
push
call
lea
movb
push
push
mov
call
and
inc
pusha
das
adc
push
or
sbb
xor
and
and
jae
popa
iret
adc
adc
or
js
dec
adc
pop
lods
push
jne
cmp
jne
inc
ret
adc
mov
inc
inc
stos
adc
adc
adc
adc
pushf
sub
add
sbb
int
arpl
loope
inc
and
mov
adc
dec
ret
dec
xchg
and
adc
adc
incl
jge
mov
pop
imul
cmpsl
and
inc
xchg
adc
add
and
data16
push
ds
inc
icebp
mov
lea
sub
push
bound
dec
imul
mov
jbe
repz
sub
or
adc
and
pop
adcb
inc
jp
call
sub
pushf
and
adc
push
push
lret
adc
dec
adc
add
or
sbb
pushf
sarb
push
mov
xor
add
call
jne
je
pusha
adc
jns
adc
xchg
arpl
mov
stc
mov
adc
mov
push
push
adc
dec
sub
bound
push
dec
adc
push
and
mov
and
out
adc
adc
add
add
ret
sbb
icebp
cmp
jne
cmp
jb
cmp
ja
jo
or
add
push
fwait
sbb
push
sub
mov
lea
nop
pop
adc
and
nop
and
adc
nop
and
and
pusha
adc
push
rclb
bound
adc
sub
and
adc
mov
and
leave
and
pop
and
js
fwait
adc
push
pop
jmp
cmp
and
adc
and
stos
adc
pusha
sub
pop
lea
push
push
push
jl
sbb
inc
sub
add
inc
jecxz
cmp
pop
pop
lea
and
adc
adc
pop
mov
mov
nop
scas
adc
jae
cmp
mov
frstor
lods
and
adc
mov
and
and
push
xor
xorl
daa
push
add
cmp
jno
push
dec
cmp
or
mov
push
mov
adc
adc
and
outsb
mov
dec
hlt
adc
je
and
jmp
mov
lret
and
adc
jo
mov
sub
adc
jne
jmp
inc
mov
and
je
and
dec
adc
je
inc
add
add
pop
sbb
dec
xchg
and
and
pusha
or
in
jne
and
scas
adc
mov
fldl
adc
adc
mov
dec
adc
or
mov
dec
loope
adc
adc
cmp
sbb
and
add
dec
cmp
ja
adc
dec
inc
loope
push
adc
arpl
out
add
mov
popa
test
lods
and
orb
cmp
pushl
shll
and
push
adc
jmp
inc
dec
inc
jp
or
shlb
adc
and
mov
test
dec
fs
lea
and
iret
push
call
and
add
mov
test
testb
and
fsubr
cs
jne
inc
fisttps
mov
pop
mov
mov
push
subb
cmp
popa
ret
notl
shr
push
push
mov
daa
orb
mov
push
lcall
push
les
call
pusha
sub
inc
push
addr16
andb
mov
sbb
or
dec
mov
popa
sub
sarb
popa
inc
adc
mov
adc
adc
pusha
or
nop
mov
push
pop
inc
adc
and
pusha
sbb
add
add
mov
and
roll
adc
sarl
arpl
iret
adc
mov
iret
shlb
push
jmp
inc
js
shr
movswl
adcl
adc
add
sarb
cmp
add
push
xor
mov
and
test
movswl
shr
js
mov
adc
jne
addb
or
jmp
push
push
jmp
pusha
push
and
add
jmp
pusha
adc
ds
jno
sub
cltd
adc
mov
popf
add
sub
adc
and
jmp
movzwl
test
adc
inc
je
call
inc
ret
adc
pop
sub
add
pop
and
sbb
dec
gs
mov
lock
pop
incl
cmp
inc
add
mov
inc
add
mov
add
addb
adc
xchg
inc
pop
adc
inc
cli
adc
add
roll
mov
dec
add
inc
pop
adc
rolb
unpcklps
push
decl
inc
pop
adc
inc
add
xor
adc
add
dec
inc
add
pusha
inc
add
outsb
inc
add
ja
add
xchg
add
roll
adc
inc
add
adc
rclb
dec
adc
adc
add
pusha
andl
cmp
adc
inc
adc
adc
pusha
ja
push
decl
xchg
adc
pop
movl
inc
and
push
movl
inc
sub
dec
adc
scas
xchg
pop
mov
shr
pop
cmp
cmp
adc
jg
adc
add
and
adc
push
push
push
je
sbb
call
cmp
je
inc
xor
mov
push
jg
and
scas
adc
xchg
data16
or
andb
dec
pop
notb
je
and
lret
pop
adc
cmp
jne
dec
hlt
adc
and
jo
into
dec
adc
mov
and
outsb
and
cld
mov
sub
pop
pusha
inc
and
inc
push
push
adc
pop
sbb
mov
or
leave
add
dec
push
inc
ret
and
adc
loopne
jo
popf
add
leave
pop
pop
add
mov
xchg
mov
dec
sub
jbe
jmp
mov
sub
popf
and
push
adc
addr16
inc
or
daa
dec
jmp
push
dec
adc
and
or
pop
cwtl
in
insb
or
push
pusha
andb
push
adc
or
adc
push
jmp
mov
test
push
inc
sub
jno
push
inc
int
into
jno
gs
and
adc
ret
je
jecxz
arpl
push
jno
xlat
jmp
jmp
dec
ret
xor
icebp
sub
dec
stos
sub
clc
sete
pop
mov
mov
clc
sub
add
and
mov
shll
dec
adc
ja
fisubrs
js
and
inc
inc
adc
es
sub
adc
test
and
adc
or
imulb
lock
jmp
ret
or
cmp
mov
imul
adc
jp
and
bound
adc
ret
clc
and
sub
arpl
cs
sub
enter
and
and
add
jns
cmpsl
dec
lret
adc
sub
add
or
adc
fbld
stos
mov
or
ds
push
adc
and
fcoms
jo
pop
scas
sub
pop
popl
adc
sbb
je
mov
cmp
addb
adc
and
adc
push
push
rolb
je
push
inc
and
lret
scas
lret
mov
mov
outsb
xchg
subb
pop
and
and
sub
add
mov
adc
idiv
add
mov
adc
daa
mov
jnp
adc
cld
push
or
jne
and
dec
inc
fcmovne
and
fsts
lea
sbb
aaa
inc
pop
adc
and
mov
push
jle
and
xor
cmp
adc
pop
push
adc
jmp
es
cmp
cwtl
sub
adc
sub
push
bound
add
adc
es
xor
stc
aas
adc
sub
jo
and
jne
and
push
and
inc
mov
mov
mov
adc
push
lea
sahf
push
adc
call
mov
inc
and
mov
mov
mov
inc
and
jle
and
or
scas
push
cmp
cmp
je
imul
adc
adc
sbb
cmp
or
ja
adc
pushf
cmp
dec
popa
sbb
adc
pop
adc
loopne
insl
jo
mov
ret
insb
je
cmp
jb
clc
das
jbe
cmp
je
cmp
jne
push
adc
inc
pop
gs
push
or
mulb
mov
ret
adc
push
mov
adc
scas
sbb
test
add
filds
adc
xchg
adc
xchg
sbb
add
into
pop
je
mov
jmp
cmp
and
adc
pop
cmp
jo
adc
add
xor
scas
jmp
cmp
cmp
mov
add
dec
ja
fcoml
hlt
push
and
aaa
adc
scas
cmp
pop
jne
imul
data16
mov
je
pusha
or
or
jne
and
sub
xor
subb
jne
mov
cwtl
adc
scas
push
and
and
push
push
bound
mov
or
sub
jg
jbe
adc
std
cmp
and
sbb
jns
push
sbb
sub
inc
mov
call
sub
push
adc
outsb
dec
insb
add
push
sub
xchg
inc
shll
loopne
adc
out
xchg
outsb
inc
dec
bound
jae
adc
inc
test
inc
and
adc
mov
adc
iret
add
adc
adc
xorl
adc
mov
aam
adc
out
lahf
and
lret
adc
cld
jg
andb
add
adc
fs
adcl
cmp
adc
call
jae
adc
adc
adc
shll
sub
pop
and
xor
and
and
movb
mov
and
and
movsl
add
push
adc
push
push
and
adc
and
rclb
loopne
and
adc
adc
adc
pop
mov
dec
jb
dec
jl
adc
adc
sbb
adc
in
faddl
ret
out
mov
cmp
adc
pusha
sub
adc
sbb
lock
ret
adc
mov
pop
jnp
xor
add
inc
je
inc
and
shlb
movsl
jg
adc
jge
cltd
adc
mov
clc
add
adc
clc
add
ja
or
push
adc
and
gs
rcll
or
jnp
and
xor
or
and
adc
jns
jo
sbb
mov
cmpsb
jne
jecxz
inc
es
add
and
pop
ret
adc
rsm
mov
adc
and
sahf
pop
adc
mov
xchg
push
mov
mov
pop
flds
and
push
dec
xchg
and
js
add
daa
mov
daa
adc
push
jne
push
dec
es
lret
mov
push
pop
push
adc
pop
pop
adcb
jo
jno
shlb
and
out
and
adc
sub
and
xchg
and
js
jmp
testb
lahf
lahf
lret
or
sbb
xchg
fistl
push
add
sub
mov
mov
lea
cs
pusha
inc
adc
test
push
inc
sub
mov
adc
push
adc
je
push
outsl
adc
movl
flds
and
sub
jns
adc
divb
xor
adc
dec
jo
enter
pusha
or
jmp
pmulhuw
adc
push
push
call
dec
mov
push
and
pop
and
adc
adc
adc
mov
rcll
fs
enter
push
rclb
adc
sbb
mov
mov
add
sub
mov
cltd
sub
sub
mov
mov
inc
or
stc
sar
sub
mov
add
pusha
adc
lock
inc
push
adc
incb
add
dec
mov
stos
call
lock
cmp
jle
sub
add
mov
cmp
jge
mov
jmp
add
cmp
jle
mov
xor
hlt
push
push
push
push
push
mov
add
sbb
and
and
push
push
xor
or
je
push
fisubl
adc
je
and
adc
xchg
int3
adc
and
daa
adc
push
and
dec
adc
lds
and
and
and
add
push
mov
test
je
inc
mov
inc
inc
mov
add
cmp
dec
jno
je
cmp
jne
mov
adc
cmp
pop
fcoms
inc
and
pusha
pop
adc
orl
and
pusha
and
pop
adc
sbb
addb
push
cmp
jne
dec
pusha
and
fisubs
push
adc
and
add
and
adc
inc
or
pop
je
and
and
and
mov
adc
and
adc
cmp
push
and
adc
cmp
or
xor
sbb
and
adc
sbb
and
xor
testb
pop
inc
mov
mov
addr16
test
adc
adc
je
inc
adc
add
adc
mov
loop
adc
sbb
cmp
fcomps
jbe
movsb
sub
push
call
adc
mov
je
sub
mov
jae
and
push
loop
jl
sbb
sbb
adc
push
push
adc
fimull
inc
and
pop
pusha
adc
inc
add
push
push
push
and
push
adc
jmp
and
das
adc
jbe
and
outsl
adc
and
xor
sub
add
ja
adc
xor
cmp
inc
adc
inc
adc
adc
inc
and
lods
inc
sahf
sub
add
nop
dec
inc
adc
sbb
adc
adc
andl
pop
sub
fwait
and
aas
adc
loopne
mov
sub
or
adc
mov
add
inc
cmp
out
and
inc
and
and
pop
inc
adc
or
cmp
fadds
pop
mov
jne
push
adc
inc
or
jnp
sti
cmpsl
and
pop
pop
push
push
mov
filds
adc
inc
jmp
push
outsb
and
sahf
lcall
adc
xor
call
mov
adc
adc
jns
adc
dec
sub
mov
jmp
js,pn
adc
xor
je
inc
nop
adc
sbb
or
and
and
lds
jnp
adc
gs
adc
sbb
shlb
push
mov
mov
gs
push
push
xor
popf
lret
popf
int3
adc
push
adc
testb
xchg
push
mov
adc
pop
hlt
je
inc
xor
or
push
insb
jg
fcoms
pop
inc
xor
and
dec
int3
mov
pusha
and
cmp
mov
or
inc
and
add
sbb
mov
pop
adc
inc
pop
adc
inc
jg
and
inc
es
add
inc
test
int3
push
push
mov
xor
lods
adc
mov
pop
or
add
and
and
and
fwait
adcb
jg
adc
add
or
and
std
adc
popa
pusha
inc
daa
adc
and
xchg
or
andw
inc
and
inc
and
adc
push
pusha
pop
and
rol
inc
sbb
andb
cmpsb
adc
and
sbb
sbb
mov
inc
or
jae
and
cwtl
ret
inc
sbb
adc
jp
xor
dec
adc
inc
sbb
push
pusha
sbb
lcall
sbb
sti
lds
test
sbb
push
pusha
sbb
cmp
and
sub
and
addr16
sub
pusha
mov
sbb
inc
inc
daa
test
test
xor
add
sub
pusha
shll
sbb
adc
sub
inc
ret
rcrb
adc
or
mov
mov
and
cmp
jne
or
or
mov
pop
pop
and
pop
pop
sub
lret
adcl
rolb
adc
adc
cmp
cmp
dec
iret
xchg
and
sub
adc
stos
and
and
sub
cmp
push
cmpl
jne
mov
and
and
aaa
sub
mov
inc
and
adc
addb
test
adc
xor
inc
dec
lcall
or
adc
or
mov
jo
dec
sub
and
and
mov
divl
adc
mov
and
dec
xor
inc
jecxz
push
es
push
and
cld
movsb
and
jb
xor
lods
and
leave
call
and
dec
repz
jecxz
add
adc
and
and
and
and
mov
jp
xchg
adc
push
and
or
jl
mov
mov
and
popa
adc
subb
mov
sbb
in
sub
add
je
mov
sbb
in
adc
bound
in
inc
jno
adc
and
adcb
push
js
sti
xor
add
pop
sub
pusha
xor
pusha
jge
pop
and
imul
and
andb
add
xor
sub
pop
imul
cmpb
add
fldcw
and
sub
and
sub
cmpsb
sbb
sub
adc
pusha
sbb
adc
sub
add
and
xor
or
roll
and
int3
and
add
sub
sub
jno
and
andb
mov
and
mov
mov
push
xor
sub
and
and
xor
jo
lea
and
xor
bound
jno
adc
and
dec
loopne
and
sbbb
add
mull
pop
adc
sub
gs
and
cmp
cld
sub
lcall
mov
pop
pop
cmpsb
adc
cmpl
xor
and
das
xor
adcl
add
addl
add
addl
sbb
jp
adc
sbb
pusha
inc
adc
aad
inc
ss
and
and
and
insl
and
inc
adc
scas
jbe
ja
test
mov
or
and
and
jno
lea
lock
stos
cmp
sub
xor
xchg
xchg
adc
push
and
adc
and
imul
mov
cmpl
jne
andb
cmp
shrb
adc
inc
adc
adc
aas
jo
lods
add
add
push
pusha
repnz
add
inc
inc
add
call
rclb
mov
dec
and
push
and
adc
push
int3
pop
adc
inc
xchg
into
push
adc
xchg
cmp
adc
and
fsubrs
mov
adc
bound
imul
lds
push
insb
xchg
and
push
and
sbb
sub
je
push
xor
push
cmp
outsb
xchg
jne
cmp
jne
inc
and
and
sub
adc
push
adc
sbb
and
adc
jg
dec
rcll
push
and
xor
daa
lret
and
xchg
sub
jg
push
adc
js
cmp
sahf
adc
and
push
les
jns
adc
mov
or
adc
xchg
and
and
fmuls
cmp
and
xor
and
push
adc
pop
setl
and
and
int3
aas
and
jns
cmp
je
sbb
mov
add
add
push
iret
adc
and
xlat
dec
inc
movsb
adc
pop
mov
outsl
and
lcall
mov
push
dec
sub
sub
call
dec
xchg
and
cmp
and
adc
and
lcall
adc
mov
push
pop
xor
and
push
push
or
and
adc
mov
and
fsubs
cmp
adc
and
adc
call
sub
push
push
push
test
pop
and
and
inc
push
dec
movsb
add
scas
mov
cmp
ja
je
dec
dec
je
sub
inc
xchg
in
je
sub
sub
adc
inc
dec
inc
xor
mov
xor
add
scas
pusha
xadd
mov
pusha
or
sub
les
adc
bound
dec
cmp
dec
je
dec
and
adc
aas
mov
or
adc
addr16
orb
xor
cmp
mov
ret
and
es
add
jmp
sub
fsubs
mov
addr16
and
push
pop
push
cmp
mov
jne
and
and
jne
cmpsl
shlb
xor
jl
adc
sbb
and
jnp
mov
mov
adc
mov
and
push
sub
add
pop
and
inc
adc
ja
and
adc
aam
adc
adc
add
test
pop
inc
int3
adc
and
pop
push
sub
and
popa
adc
and
adc
mov
pop
sbb
mov
jmp
jae
inc
cmpsl
adc
je
mov
dec
pop
adc
jmp
jle
adc
and
xchg
and
rcll
and
jne
fimull
in
sub
adc
js
pusha
aad
out
adc
scas
daa
je
daa
outsb
bound
mov
loope
cmc
pusha
and
inc
or
adc
adc
daa
adc
adc
insb
adc
addb
adc
add
lods
inc
adc
and
mov
sbb
mov
inc
sub
addb
pusha
add
cwtl
inc
or
mov
and
pop
adc
mov
sbb
dec
sbb
insl
cmp
xchg
cmp
and
adc
out
fstps
leave
and
add
or
push
and
and
insb
adc
adc
push
and
sub
jne
mov
repz
jl
mov
jne
pushf
and
aas
adc
add
and
dec
cmp
inc
cmp
adc
adc
int3
pop
movl
mov
nop
adc
repz
adc
lea
das
mov
and
jo
sti
sub
pop
jnp
test
dec
je
inc
and
and
adcb
in
adc
xor
xor
dec
adc
push
and
addl
je
cmp
jne
cmp
and
inc
fwait
adc
pusha
or
sbb
pushl
and
or
and
jbe
xchg
push
and
and
push
pusha
mov
cmp
dec
or
dec
adc
push
and
call
repz
or
inc
adc
add
add
lret
jg
inc
inc
outsl
and
sub
mov
jmp
gs
rclb
inc
add
or
cmp
pop
test
push
push
mov
mov
push
and
push
adc
call
lds
pop
or
pop
sbb
and
aas
adc
push
push
push
and
push
dec
sbb
adc
adc
je
and
push
and
loop
mov
push
xor
push
sub
add
dec
add
cld
and
inc
mov
adc
and
adc
inc
ja
adc
adc
push
and
adc
and
pop
jo
and
and
add
sub
and
jb
adc
mov
pop
jb
pop
cmp
je
lea
push
inc
add
sub
adc
and
push
mov
adc
and
fwait
adc
jne
mov
daa
push
push
adc
push
pusha
push
jno
pop
int3
inc
dec
adc
sub
adc
jmp
mov
cmp
and
push
adc
and
adc
je
adc
cmp
and
bound
lahf
cmp
mov
add
js
cmp
jne
cmp
jne
cmp
je
pusha
adc
jo
mov
mov
and
adc
mov
out
sbb
push
push
xor
push
cmp
push
jg
jns
mov
cmp
inc
adcl
adc
call
add
and
es
push
push
push
orb
add
adc
dec
push
jp
mov
cmp
and
sbbl
outsb
sbb
pop
cmp
je
cmp
or
and
adc
mov
inc
push
icebp
and
adc
jmp
mov
adc
lds
pop
push
inc
inc
adc
adc
jbe
jmp
xor
adc
and
xor
inc
notl
adc
arpl
and
adc
mov
test
xor
cmp
je
mov
mov
mov
cmp
jae
push
push
and
pop
inc
mov
cmp
jne
mov
cmp
jne
jmp
inc
add
push
push
and
pop
sbb
movq
or
dec
add
or
push
add
jmp
pushl
dec
dec
adc
jae
jbe
xor
movsl
cmpsb
inc
loopne
rorb
aas
add
loop
adc
repnz
es
pop
or
sbb
pop
adc
or
and
adc
and
les
movb
push
and
inc
adc
pop
and
push
and
dec
and
in
push
lds
jne
inc
adcb
push
xor
jne
dec
and
adc
and
adc
dec
adcb
pop
sti
leave
adc
mov
xchg
adc
and
fstpl
and
cmp
push
pushl
and
xor
addr16
bound
inc
push
aaa
cmpl
jne
push
repnz
shr
les
je
and
outsb
adc
and
outsb
adc
mov
mov
les
sub
loop
out
adc
xchg
jmp
and
aaa
adc
ret
je
dec
fsts
or
fcoms
sub
and
push
adc
mov
xchg
adc
adc
mov
or
adc
and
mov
inc
cmp
je
mov
cmp
je
mov
and
lock
stc
and
outsb
adc
sub
jg
xor
insb
adc
sub
cmpb
cmpl
adc
jae
inc
adc
popa
dec
adc
inc
jl
sub
add
ja
jmp
cmp
jne
push
into
adc
pop
and
xor
xchg
leave
adc
sub
and
fadds
inc
mov
push
lea
pop
movl
stos
mov
dec
pop
out
and
cmp
sbb
adc
xchg
and
adc
mov
adc
rorb
pusha
mov
imul
and
and
or
das
inc
es
imul
rclb
jle
push
pop
sub
adc
adc
cmpl
sbb
nop
lods
adc
push
mov
adc
es
cmp
sbb
sub
jbe
pop
push
cs
cmp
or
sbb
xor
or
sub
cs
jne
adc
loop
xor
jne
sub
fwait
jbe
daa
and
cmp
fwait
jbe
ljmp
and
push
jno
outsl
cli
jg
adc
inc
and
ds
and
sub
arpl
adc
and
push
mov
xchg
mov
out
jnp
sbb
inc
adc
and
dec
adc
inc
cs
sub
iret
push
adc
push
sbb
pushl
cmp
dec
sbb
add
and
cltd
adc
pop
dec
mov
mov
pusha
inc
adc
push
sub
adcl
or
mov
lahf
add
push
push
push
jg
and
xchg
dec
rolb
mov
filds
adc
jge
adc
imul
adc
push
push
cmp
and
mov
inc
mov
push
inc
and
lret
pop
xor
mov
adc
ja
and
test
xchg
loope
clc
sbb
je
cmp
ja
and
outsl
into
dec
and
adc
sub
adc
push
adc
clc
daa
ja
and
sbb
clc
and
je
sub
cmpl
inc
movlps
mov
lret
outsb
sbb
dec
jne
or
jle
or
jp
call
cmp
dec
je
inc
pop
adc
push
pusha
pop
sbb
jmp
add
cmp
ja
js
roll
add
push
jmp
cmp
ja
je
cmp
ja
je
dec
sbb
mov
je
dec
je
inc
push
cmpsb
adc
cs
mov
inc
or
mov
pop
jnp
adc
imul
mov
shll
mov
mov
in
dec
pop
jne
add
mov
test
and
sbb
push
jmp
sub
cmpl
push
jnp
adc
and
adc
mov
cmp
and
sub
cmpl
sub
das
cmpl
or
mov
adc
sub
inc
push
adc
addb
sub
dec
test
mov
inc
data16
or
icebp
cmpl
dec
jne
pusha
sub
cs
je
pop
mov
push
inc
pop
adc
pusha
pop
adc
adcb
int3
dec
add
inc
adc
inc
pop
adc
int
add
inc
pop
pusha
punpcklbw
sub
add
scas
inc
pop
pusha
sbb
punpcklbw
adc
rolb
das
pusha
sbb
js
add
adc
rclb
pusha
pop
pusha
pop
pusha
cmp
loopne
pusha
push
test
and
movsb
ret
xor
mov
cmp
je
dec
cmp
mov
jne
jne
outsb
or
adc
inc
adcb
mov
inc
push
push
add
push
call
mov
sahf
adc
sbb
pusha
pop
and
pop
pusha
cs
pop
jnp
adc
sbb
add
std
add
popa
stos
mov
std
lock
jae
cmpl
add
cmp
adc
jbe
insb
and
pop
adc
mov
and
pop
and
adc
and
dec
andb
mulb
inc
push
push
cmp
pop
pop
setne
es
xchg
cs
adc
lea
and
jp
int
and
adc
push
and
dec
fisttpl
and
mov
cmp
lcall
xor
hlt
and
and
sub
and
xor
decl
jne
std
sub
inc
andb
adc
lea
and
jne
add
adc
add
enter
add
mov
jmp
bound
adc
aas
insb
adc
mov
daa
and
cmp
push
and
daa
adc
push
push
adc
and
mov
dec
adc
add
orb
and
popf
adc
jnp
adc
xchg
aam
adc
push
adc
adc
and
adc
inc
pop
and
lds
std
jnp
iret
movsl
inc
pop
adc
inc
cld
and
lcall
and
cmp
cwtl
adc
shlb
call
mov
cmpsb
inc
inc
inc
and
pop
and
add
adc
push
add
enter
or
pop
jno
mov
lahf
adc
call
sbb
adc
sub
dec
sbb
xor
mov
filds
ret
mov
lea
cld
sub
adc
xchg
adc
adc
and
dec
adc
icebp
and
push
aad
and
push
lea
and
or
pusha
lret
mov
mov
sub
cmp
jbe
enter
aad
and
setg
jmp
push
mov
inc
sbb
push
lea
sbb
and
sub
adc
mov
sub
inc
cmp
and
cli
cmp
adc
inc
cmp
pop
and
ret
pusha
add
inc
and
push
push
xchg
adc
add
push
and
addr16
adc
clc
inc
js
or
dec
lret
adc
adc
adc
fstpl
mov
adc
adc
pop
inc
mov
mov
push
mov
inc
notl
push
dec
cmc
inc
pop
je
dec
pop
pop
xchg
inc
insb
and
jg
inc
lea
jmp
push
pop
sbb
not
shr
fbstp
rorb
dec
xchg
push
mov
int3
dec
inc
adc
push
adc
js
inc
sbb
rcrb
add
or
and
mov
adc
xchg
adc
inc
or
jmp
add
and
mov
adc
hlt
mov
or
orb
jne
and
cmpl
xchg
rolb
adc
pop
inc
lods
adc
lods
adc
test
dec
repz
push
mov
adc
inc
lea
pusha
fcoms
frstor
pop
lea
pop
and
adc
mov
jmp
adcl
or
adc
and
sbb
adc
mov
and
xchg
adc
and
add
adc
lods
adc
add
pusha
mov
mov
rorb
pop
inc
and
sbb
mov
dec
lea
jne
sub
xchg
push
and
and
mov
inc
pusha
mov
out
sub
xchg
adc
popa
and
xor
mov
and
push
dec
adc
ret
adc
inc
cmp
lods
push
push
push
and
pushf
and
pop
inc
push
ret
repz
adc
xchg
and
add
dec
clc
and
push
adc
sbb
insl
cmp
inc
sbb
mov
jo
adc
xchg
shll
in
fwait
adc
fwait
adc
and
adc
inc
popa
adc
adc
add
out
jge
je
orl
inc
lret
inc
lea
push
inc
test
dec
inc
and
pop
adc
inc
or
pop
mov
xor
mov
cmp
je
and
jb
jnp
dec
inc
add
cmp
adc
pop
adc
and
popa
adc
popl
adc
or
dec
or
test
jbe
mov
sub
add
push
es
incb
mov
sub
push
mov
inc
mov
add
push
and
push
les
jge
jne
adc
add
add
movsb
and
push
xchg
lcall
inc
and
adc
dec
inc
and
cmc
adc
dec
add
outsl
adc
and
push
dec
lea
push
push
and
push
je
push
lea
push
jne
xor
aaa
adc
and
pop
push
dec
cwtl
and
pushl
call
sub
fcomps
sub
ljmp
arpl
icebp
stos
rclb
cmp
fwait
adc
call
push
jb
sub
adc
inc
sub
push
adc
mov
inc
push
inc
fists
cmp
jns
adc
push
pop
fisubs
and
or
and
popf
adc
xlat
cmpl
mov
clc
adc
xchg
clc
adc
xchg
adc
clc
push
push
push
std
adc
dec
cmpsl
adc
rcll
inc
xor
and
push
pop
ja
ja
and
cmp
out
pop
inc
out
pusha
push
loopne
inc
pop
adc
cmp
push
xchg
and
sub
sbb
fwait
jg
adc
test
adc
and
jmp
mov
dec
adc
mov
and
adc
cmp
std
imul
or
cmp
cli
imul
and
push
es
es
mov
mov
mov
or
mov
adc
shlb
or
gs
hlt
adc
lret
sub
or
sub
adc
lods
or
sbb
adc
mov
and
popa
ds
je
sub
sub
sub
and
or
sbb
mov
dec
pop
adc
add
and
lods
and
pop
adc
and
push
inc
xchg
fdivs
adc
je
and
and
or
cmp
dec
push
cmpsl
adc
dec
or
and
xor
or
inc
xor
je
push
and
cmp
mov
scas
adc
mov
inc
mov
xchg
xor
lret
mov
lea
cmp
adc
inc
popa
adc
and
inc
fbld
cltd
xor
cmp
adc
push
and
adc
test
push
fwait
adc
push
and
and
inc
add
sub
sub
xor
data16
and
arpl
sbb
mov
add
popa
add
pusha
popa
sub
push
mov
jl
sub
mov
adc
cmp
xchg
add
add
mov
and
sub
mov
adc
xchg
adc
adc
and
adc
push
xor
xlat
and
adc
jl
adc
inc
jbe
ss
mov
daa
dec
add
rolb
dec
add
les
dec
add
adc
rclb
mov
xor
and
and
push
adc
add
mov
daa
out
add
int3
add
out
add
push
and
adc
and
mov
add
mov
daa
cmp
and
sbb
inc
add
adc
cmc
and
push
sbb
mov
dec
push
and
and
push
lcall
push
call
mov
je
adc
inc
ret
and
adc
ret
add
push
cmp
je
and
pop
lods
mov
and
inc
adc
adc
push
push
mov
loop
and
cwtl
adc
pop
or
adc
aad
arpl
adc
and
cltd
adc
sub
and
and
pusha
cmp
sbb
xor
add
mov
mov
sbb
adc
daa
rolb
sbb
lret
adc
sbb
jne
xor
mov
popf
push
inc
or
loopne
push
and
mov
std
out
xor
aas
jae
adc
xor
cmpsb
sbb
and
and
and
out
and
hlt
loopne
inc
daa
dec
mov
clc
and
adc
sub
inc
xchg
aas
push
and
mov
repnz
sub
and
adc
adc
inc
inc
fs
mov
es
inc
and
xchg
sub
inc
xorb
or
les
and
fiadds
fs
imulb
sbb
fdivrs
mov
adc
cmp
pushf
jg
add
mov
adc
xor
jbe
mov
pusha
arpl
sub
xor
adc
push
mov
adc
adc
mov
inc
add
mov
adc
xor
cmpsl
dec
pusha
gs
adc
mov
inc
and
scas
xor
cs
push
adc
add
sub
or
jmp
adc
sub
xor
aas
or
add
fistpl
adc
mulb
in
mov
adc
cmp
pusha
das
inc
or
and
and
mov
incl
xor
add
leave
cltd
xor
sar
adc
adc
movsl
shll
lahf
adc
or
stos
lahf
adc
int
les
and
mov
cmp
jge
mov
mov
pop
loope
std
pop
sub
inc
inc
or
cmp
push
jge
xchg
mov
pop
insl
jg
dec
or
inc
jae
adc
pop
dec
jmp
mov
and
adcb
and
or
add
or
jbe
inc
lea
and
xchg
pop
and
sub
sbb
jge
pushl
movzbl
jmp
xor
lods
out
div
aas
cmpw
stos
adc
andb
adcb
dec
and
mov
call
xor
inc
and
adc
and
mov
adc
imul
push
and
sbb
insb
adc
adc
and
arpl
dec
jne
les
or
adc
inc
or
dec
push
inc
adc
sub
dec
cld
push
andw
test
lea
fs
adc
mov
pop
jno
sub
inc
mov
inc
fsubs
and
pusha
adc
adc
jae
inc
sbb
adc
jne
and
out
addb
xor
and
jbe
and
mov
sub
daa
push
dec
adc
xor
aam
and
inc
and
imul
and
insb
adc
data16
jne
mov
push
and
adc
inc
mov
sbb
jle
and
inc
enter
cmp
adc
and
mov
or
ret
add
mov
pop
xor
not
test
mov
mov
mov
mov
mov
inc
cmp
inc
cmp
cld
xor
jmp
inc
or
js
and
adc
mov
mov
jbe
xchg
adc
jge
dec
xor
mov
jmp
mov
dec
das
adc
jle
and
adc
inc
jns
push
push
push
fwait
mov
push
cmp
push
cwtl
adc
and
and
mov
inc
xor
jge
and
pop
adc
inc
adc
xchg
adc
je
mov
xchg
mov
and
insb
mov
pop
sub
and
je
inc
cmp
add
andl
and
mov
adc
and
adcb
mov
and
imul
mov
mov
cmp
es
inc
adc
and
bound
decl
xchg
adc
add
lret
icebp
mov
jg
mov
adc
jle
inc
and
cmpsb
sbb
sub
cmp
jae
mov
and
jle
add
in
adc
fbld
sbb
sbb
jbe
mov
sub
and
and
stc
adc
and
xor
inc
or
inc
clc
sub
test
jbe
arpl
ja
sub
cmp
jne
repz
inc
inc
ja
mov
cmp
ja
pusha
push
inc
push
and
dec
and
addb
adc
clc
inc
inc
adc
pusha
inc
adc
jb
pusha
sub
and
or
inc
jns
jmp
inc
xor
lea
lea
push
mov
imul
mov
lret
and
je
ret
inc
and
nop
and
jb
jp
push
sub
add
outsl
outsb
sub
mov
dec
adc
or
dec
and
cli
and
inc
daa
adc
fbld
les
cs
add
add
lahf
and
adc
jbe
lcall
and
push
bound
je
mov
inc
lea
cmp
je
inc
inc
adc
ret
fists
cmp
push
inc
adc
sub
adc
push
pusha
test
in
outsl
adc
inc
popa
adc
je
subb
push
push
mov
call
jmp
inc
adc
adc
sbb
mov
push
push
push
call
pop
pusha
xchg
adc
push
pusha
mov
pop
inc
push
and
pop
and
inc
bound
popa
or
lea
sub
add
pusha
into
and
adc
sbb
enter
jle
push
and
inc
and
loop
xchg
adc
mov
inc
adc
sub
add
adc
jae
inc
lret
adc
fadds
adc
adc
jb
orl
inc
cmp
add
push
dec
adc
sub
or
add
fisttps
and
stos
adc
push
shrb
fistpl
inc
sub
inc
and
pop
cmp
jae
aas
add
and
js
adc
scas
sub
and
orb
outsb
inc
aas
orb
and
push
pop
adc
sub
jmp
and
out
pop
sub
rolb
es
and
mov
inc
and
or
sub
and
movsb
and
push
and
outsl
sub
adc
sub
data16
and
adc
push
and
and
adc
adc
cmp
adc
inc
add
adc
jecxz
test
adc
mov
and
cmp
and
ss
test
adc
hlt
push
pop
and
rcrl
adc
push
mov
sub
and
sub
insb
xchg
adc
ucomiss
adc
and
and
add
inc
push
lock
cmp
adc
sub
inc
adc
je
popa
je
adc
insb
cmp
mov
adc
add
mov
and
loopne
sub
insl
and
stos
and
ja
push
lea
mov
aaa
push
and
push
out
and
andb
cmp
and
leave
notl
andl
adc
dec
jbe
jb
pusha
int3
adc
xor
cmp
je
push
push
mov
jne
push
dec
insb
adc
inc
sbb
aas
inc
mov
sbb
adc
inc
push
adc
sub
cmovg
push
pusha
sahf
adc
and
and
popa
jle
and
sub
adc
inc
mov
movsb
shll
test
mov
mov
mov
sti
adc
mulb
sub
dec
adc
sbb
test
adc
mov
push
or
ja
sahf
jo
cmp
adc
sub
sub
lahf
adc
adc
xchg
xor
pop
adc
inc
jp
adc
push
aas
jb
pushl
push
das
adc
inc
and
and
and
jmp
inc
cld
jle
adc
adc
and
cmp
jae
and
pop
add
inc
in
adcb
add
jmp
cwtl
add
addb
dec
and
dec
add
dec
xor
jecxz
adc
and
imul
xor
adc
inc
test
inc
mov
mov
dec
and
aam
mov
adc
mov
mov
inc
push
adc
adc
popa
and
daa
and
xor
adc
pop
inc
sub
lea
adc
inc
fidivrl
inc
fwait
adc
push
inc
js
dec
dec
jns
or
sbb
ret
icebp
rclb
pop
inc
adcb
mov
and
adc
or
insb
push
push
adc
lcall
not
test
je
mov
xor
inc
push
jecxz
sub
lock
inc
mov
and
cltd
adc
and
addr16
pop
fsubl
jle
loope
adc
cmp
jecxz
jg
mov
and
cmpl
aam
and
cld
and
test
fs
jo
cmc
pusha
arpl
inc
js
cli
mov
adc
add
addr16
add
jle
inc
add
xchg
xchg
adc
or
cmp
lods
mov
icebp
orl
dec
inc
cmp
dec
subb
adc
inc
xchg
adc
mov
adc
and
jp
add
and
pop
bound
sub
cmp
es
push
sar
notb
mov
jecxz
inc
and
dec
adc
or
pop
or
add
lea
xchg
xchg
adc
jg
push
or
call
prefetch
or
inc
movsb
push
repnz
and
data16
and
cmp
push
pop
addb
aad
test
xchg
adc
call
lahf
and
push
stos
cmp
jne
imul
and
push
mov
mov
and
cmp
je
test
inc
mov
sbb
adc
and
cmp
and
mov
and
es
lret
pop
adc
mov
sub
add
push
sub
jmp
mov
and
je
ret
push
adc
clc
sub
add
inc
push
adc
and
cwtl
push
dec
adc
and
ret
adc
jp
adc
jmp
inc
ret
xchg
adc
inc
and
mov
test
adc
and
and
and
mov
and
xor
add
mov
pop
add
mov
scas
and
movl
adc
xor
pop
aas
insb
ja
fistl
inc
and
inc
and
mov
sbb
xor
lahf
and
cmp
andl
xor
adc
loop
popa
and
not
and
mov
mov
mov
pop
icebp
adc
and
sbb
xor
mov
mov
pusha
sbb
adc
mov
adc
pop
pusha
mov
adc
arpl
popa
das
adc
mov
and
mov
adc
enter
popa
mov
fcompl
aam
adc
and
sub
adc
lods
pop
pop
and
jae
xor
sbbl
sbb
mov
shr
movsl
inc
leave
enter
adc
rep
and
sbb
adc
pop
and
fbstp
and
xor
or
dec
fsts
cli
push
js
fidivs
popf
imul
and
jl
call
daa
push
and
mull
or
test
adc
jle
jbe
inc
ss
xor
jle
jae
and
sbb
sarb
adc
sub
push
rcll
inc
sbb
mov
jl
shlb
sub
mov
mov
mov
add
push
push
and
aaa
adc
add
gs
adc
inc
aaa
adc
cmp
insb
adc
push
call
aas
pusha
aaa
adc
and
out
and
pusha
cmp
sbb
inc
inc
pusha
subb
and
jne
push
push
adc
adc
fstl
je
inc
add
ja
add
jmp
mov
ljmp
pop
pop
adc
or
jbe
stos
pop
nop
fsubs
adc
dec
fwait
loope
adc
and
mov
and
xchg
adc
jmp
test
fbstp
inc
pop
and
pop
adc
dec
and
adc
or
adc
add
mov
inc
pop
adc
mov
adc
add
and
and
inc
testl
inc
and
adc
movups
inc
and
enter
roll
jl
add
sub
out
jae
push
inc
hlt
adc
adcl
cmp
add
inc
and
sub
pusha
jns
add
add
shlb
das
adc
sub
adc
adc
adc
and
adc
lret
mov
push
dec
xchg
fwait
adc
stc
push
mov
mov
jp
inc
or
pop
mov
mulb
fnstcw
push
push
and
popa
push
je
mov
jmp
cmp
je
lea
cmp
mov
je
mov
and
inc
and
xor
add
mov
dec
push
adc
ret
lock
and
int
jae
adc
add
std
mov
ja
push
adc
and
je
mov
jmp
lea
adc
adc
push
lea
dec
sbb
fcomps
addr16
and
push
adc
lahf
adc
mov
inc
xchg
and
cmp
xchg
dec
adc
and
and
adc
fidivrl
movsl
adc
leave
and
aas
and
hlt
and
shl
mov
jnp
loop
dec
cmp
call
pop
es
and
sub
adc
jne
mov
in
mov
jne
inc
aaa
adc
inc
mov
js
adc
and
into
adc
adc
outsl
adc
inc
adc
test
jne
and
popf
push
adc
dec
lods
adc
inc
adc
and
das
cmp
je
push
push
mov
and
adc
mov
lea
scas
sub
repz
in
and
dec
inc
inc
gs
xor
adcl
xchg
cmp
shrb
into
inc
sub
add
mov
push
sbb
sarb
xor
pop
fldt
adc
push
sbb
sbb
adc
adc
mov
pop
adc
adc
daa
mov
stos
adc
sub
adc
mov
pop
ret
mov
test
adc
andb
dec
or
mov
dec
and
inc
icebp
adc
call
inc
lock
in
loopne
adc
loopne
adc
and
daa
and
xor
lea
lea
mov
inc
sub
or
adc
dec
adc
outsl
js
out
and
sub
pop
jg
fidivl
cld
mov
jb
add
mov
and
mov
pop
cmp
ja
pusha
dec
adc
aas
inc
ret
adc
xchg
and
and
insl
push
and
popa
adc
and
popa
adc
inc
outsb
adc
xor
clc
mov
push
and
xchg
and
cmp
adc
je
push
push
and
and
xor
and
and
jl
cmp
jle
mov
push
pushl
and
aaa
shlb
jge
and
arpl
jne
test
sub
adc
and
dec
adc
fbld
sbb
jmp
pushl
mov
int
cmp
je
or
les
push
es
adc
and
adc
xorl
test
inc
adc
push
and
and
push
adc
xor
cs
adc
inc
or
bound
adc
rcrb
scas
push
adc
mov
and
pop
dec
int
lock
idivl
adc
pusha
push
scas
xor
push
dec
adc
mov
mov
mov
and
and
call
je
and
adc
inc
add
jl
cmp
jle
cmp
jl
cmp
jg
inc
or
or
mov
push
inc
mov
inc
mov
and
cmp
andl
mov
adc
mov
testb
je
inc
inc
inc
inc
cmpb
jne
and
sbb
xor
add
push
pusha
outsb
adc
inc
sub
adc
outsb
adc
outsb
add
dec
sub
outsb
sbb
mov
push
movb
inc
jmp
and
and
and
test
add
jmp
daa
jl
add
add
cmova
push
mov
inc
inc
jmp
sub
mov
and
data16
push
push
and
clc
popa
push
adc
gs
test
and
js
test
and
test
add
inc
dec
add
ljmp
jp
subb
ret
call
and
and
cmp
iret
hlt
and
jl
xor
shrb
dec
aas
test
and
cmp
int
add
or
mov
sub
cmpsl
sub
inc
pusha
mov
loopne
and
adc
sbb
or
mov
fs
jmp
jmp
jmp
mov
mov
and
inc
push
outsl
adc
sub
add
or
adc
adc
pop
dec
push
adc
push
or
and
dec
adc
dec
stos
stos
and
adc
jmp
push
enter
adc
jge
pop
push
adc
push
lea
incb
in
ret
adc
push
push
and
js
xchg
sub
inc
aam
add
inc
xchg
inc
pop
adc
mov
arpl
adc
pop
mov
cs
sbb
add
movsl
fstpt
adc
sub
xlat
rcll
int3
cmp
movl
xchg
adc
push
fdivl
imul
dec
in
adc
dec
in
adc
inc
inc
dec
int3
adc
je
and
movsl
adc
push
jecxz
and
aas
adc
push
adc
push
mov
adc
and
and
and
adc
adc
pop
push
adc
pusha
cmp
adc
adc
and
inc
test
pushf
and
add
and
and
xor
adc
lea
inc
add
mov
sbb
cwtl
add
sbb
push
push
mov
and
pop
sbb
push
cmp
jne
push
push
lea
jg
popf
sbb
sahf
adc
push
andl
cmp
mov
xor
mov
xchg
and
test
mov
and
jecxz
cmp
jg
mov
test
sub
mov
inc
popa
nop
dec
nop
sub
mov
sbb
xchg
add
clc
and
push
adc
dec
adc
and
adc
and
and
clc
jmp
pop
inc
adc
es
add
cmp
sbb
sbb
and
push
cmp
push
jne
and
adc
and
mov
and
jae
scas
push
imul
cmp
jge
sbb
mov
daa
adc
adc
add
adc
and
test
inc
and
adc
dec
and
rclb
push
fstl
jge
and
push
adc
and
xchg
movsl
adc
jns
es
adc
jmp
and
lds
jge
push
adc
and
cmp
jge
add
adc
and
es
and
adc
inc
fistl
nop
pusha
pop
and
push
addr16
jle
shl
sub
fists
push
push
push
pop
adc
mov
adc
ficoms
pusha
and
and
pop
int3
jge
adc
rcrb
popa
mov
jne
lea
mov
sub
inc
sbb
push
xor
inc
lods
and
mov
fmuls
push
adc
test
fs
adc
dec
call
je
add
ss
enter
daa
or
add
jle
push
push
ret
dec
adc
inc
inc
xorb
jne
dec
inc
mov
cltd
idiv
push
push
mov
mov
pusha
pop
mov
adc
and
ja
or
test
adc
add
xchg
insb
mov
test
adc
and
mov
mov
inc
test
push
fsts
clc
and
pop
es
push
and
and
xchg
adc
daa
and
adc
cmp
push
and
xor
and
int3
cmp
test
mov
and
push
push
pop
mov
add
cmp
mov
and
out
loope
adc
and
add
adc
test
iret
adc
add
adc
lds
adc
je
sub
push
fwait
adc
inc
cmp
loope
adc
and
mov
sbb
adc
push
dec
adc
sbb
adc
in
and
xor
push
jmp
push
push
push
jmp
loopne
adc
cs
add
je
sub
mov
push
mov
adc
les
je
mov
adc
xor
imul
insl
fdivrs
add
sbb
dec
and
ja
and
sub
add
lea
mov
inc
jne
daa
push
push
adc
js
daa
sbb
lods
adc
inc
xchg
sub
dec
adc
aam
movsl
loop
xor
and
stos
mov
imul
and
adc
push
push
adc
mov
adc
and
bound
mov
dec
adc
mov
mov
imul
je
incl
js
pusha
and
mov
sub
addb
enter
addb
sti
inc
nop
fldt
adc
adc
and
lea
adc
push
out
es
add
mov
adc
adc
add
xor
xchg
add
mov
and
and
test
mov
sub
or
or
iret
push
and
adc
push
sti
inc
or
adc
and
mov
subl
orl
jle
add
jmp
mov
imul
sbbl
cmpl
adc
and
cmp
or
std
or
adc
mov
popa
adc
gs
mov
cmpl
inc
xor
dec
cmp
mov
mov
adc
inc
mov
inc
inc
cmp
jl
push
out
scas
loope
dec
pop
and
adc
mov
adc
adc
pusha
inc
stos
and
xor
mov
and
and
imul
inc
pop
pusha
adc
sub
sub
and
and
mov
test
inc
repz
enter
dec
cld
push
dec
mov
lock
push
sub
and
sub
jnp
xorl
adc
push
adc
out
xchg
and
and
adc
dec
mulb
idivl
mov
mov
inc
call
int
rclb
add
cmp
cld
add
push
push
push
jg
mov
fildll
push
and
and
lds
inc
inc
adc
and
xchg
adc
push
or
movl
adc
neg
and
pop
adc
xor
sub
int3
sub
and
pop
cwtl
push
sub
jne
adc
sub
add
sub
mov
and
and
add
push
movsl
adc
test
inc
sub
add
adc
push
jbe
adc
push
and
mov
xor
inc
or
and
pop
adc
bound
sbb
adc
cmpsb
push
adcb
or
or
adc
add
and
leave
dec
int3
scas
adc
scas
or
mov
and
lea
es
mov
aad
xor
adc
leave
cmp
and
mov
stos
adc
shr
arpl
adc
out
adc
mov
and
je
mov
push
call
mov
je
call
cmp
and
sbb
adc
push
mov
ds
pop
andl
adc
jnp
insl
leave
pusha
push
adc
push
push
mov
bound
pop
mov
lcall
adcb
jmp
mov
outsb
and
push
in
adc
or
push
and
pusha
push
pusha
aaa
adc
sub
test
dec
adc
inc
adc
sarb
and
jb
sub
xor
imul
push
mov
adc
ja
mov
mov
adc
push
ret
push
pusha
push
pusha
ja
fwait
mov
aaa
adc
push
push
mov
aaa
add
pusha
aaa
adc
daa
imul
shll
cmp
adc
pop
addb
mov
cs
movl
and
pusha
xor
or
mov
pusha
or
test
add
adc
add
adc
shlb
subb
rol
xor
and
sarb
cwtl
adc
mov
xor
adc
in
cmp
mov
ret
mov
shlb
lea
push
pusha
inc
adc
and
loopne
adc
and
ss
shlb
lahf
sub
add
mov
pusha
adc
inc
jp
jo
push
push
and
ret
push
add
testb
test
mov
aas
adc
aas
adc
and
adc
aas
add
jp
orb
mov
mov
adc
push
cld
ljmp
aad
sub
fwait
jb
mov
and
pop
popa
test
inc
cmp
lock
cmp
lods
fwait
adc
cld
inc
popa
mov
add
rclb
es
pop
loope
push
mov
mov
call
call
call
add
adc
daa
call
inc
sub
pusha
or
xor
andl
das
inc
add
jnp
sub
add
push
dec
adc
gs
movl
add
test
shlb
mov
xchg
addb
clc
pusha
pop
pusha
mov
adc
ret
push
aaa
outsl
loopne
push
adc
mov
xor
add
pop
xchg
addl
ret
mov
and
and
cmp
fistl
adc
cmpsl
add
js
push
scas
mov
mov
and
mov
leave
je
and
cmp
movaps
jl
xor
push
and
orb
fcmovnbe
mov
sub
popa
or
notb
push
adc
or
push
adc
in
adc
adc
and
sub
orl
lea
push
or
and
mov
adc
inc
sub
cmc
sub
inc
and
push
pop
mov
mov
movl
inc
inc
xor
sbb
and
popf
xor
add
lcall
mov
xchg
adc
adc
adc
in
test
xchg
pusha
pushf
and
cwtl
sub
xchg
adc
push
adc
sub
add
idivb
adc
insb
adc
adc
add
sub
and
inc
subb
add
lods
daa
pop
iret
pop
pusha
inc
and
push
mov
test
adc
mov
in
cmp
or
and
or
adc
or
adc
inc
or
cmpl
and
adc
and
inc
mov
pop
dec
cmp
jmp
addl
add
loopne
sub
jbe
mov
inc
dec
adc
adc
inc
jecxz
sub
dec
and
movsb
inc
sub
std
sub
adc
lahf
adc
and
mov
push
push
and
and
push
and
and
cmpsl
repz
je
sub
push
mov
adc
and
popa
adc
pop
movl
pop
push
adc
das
cltd
add
adc
adc
adc
ret
sub
push
mov
pusha
or
adc
cli
ret
mov
cmpsl
fistl
add
mov
mov
and
cmpsb
dec
cwtl
adc
test
mov
adc
fwait
xor
adc
jne
and
sbb
test
je
push
add
push
mov
pop
cmp
push
mov
inc
sub
pop
pop
mov
xor
pop
and
push
inc
adc
ret
ja
and
mov
and
dec
sahf
and
and
and
movl
mov
inc
and
push
ret
xor
sbb
insl
loopne
push
rorb
inc
and
and
and
mov
push
mov
mov
and
xchg
pusha
js
inc
and
js
cmp
jnp
adc
dec
pushf
adc
jne
and
and
adc
daa
adc
and
and
adc
and
loopne
andb
shlb
and
sbb
mov
cmp
jge
inc
dec
adc
je
add
out
jle
inc
adc
add
testb
je
mov
inc
es
jl
sbb
lds
test
push
jne
mov
shl
push
push
imul
and
adc
push
mov
sbbb
daa
inc
adc
and
pop
outsl
inc
and
pusha
xor
push
call
and
outsb
and
loopne
sbb
xchg
and
int
add
shl
sub
adc
cmpsl
push
cmp
jl
lea
sub
inc
mov
and
adc
dec
jecxz
push
and
adc
das
mull
aad
adc
sti
mov
pop
stos
inc
mov
or
mov
adc
daa
mov
adc
cwtl
add
mov
mov
add
cld
andl
lea
mov
pop
daa
and
in
adc
pushf
and
pop
or
add
mov
int
adc
push
add
cltd
adc
inc
mov
add
sub
push
adc
addr16
inc
xor
andb
push
adc
iret
bound
xlat
adc
fcoms
adc
and
mov
or
jmp
mov
or
add
stos
mov
mov
mov
loop
adc
and
or
into
mov
dec
or
je
add
and
andl
add
and
lds
inc
and
cld
dec
mov
pop
pop
mov
and
xor
orl
adc
push
sub
pop
sbb
stc
add
roll
adc
dec
jp
pop
adc
mov
push
add
mov
adc
xchg
dec
adc
lea
and
andb
adc
jbe
inc
punpcklbw
and
cmpsb
push
jbe
rcll
mov
adc
mov
popa
jle
lea
and
and
test
and
je
mov
adc
jmp
mov
xor
xchg
jmp
sbb
inc
inc
pusha
jns
movsl
mov
push
adc
pop
adc
mov
adc
and
pusha
test
mov
adc
mov
ja
mov
mov
aaa
and
rolb
jge
and
xor
and
lock
inc
adc
xorb
mov
and
xor
js
and
movsb
jno
and
and
jbe
add
dec
and
sub
ret
mov
and
sub
xor
mov
push
shll
jnp
xor
inc
or
or
and
sub
jg
sbb
xor
push
and
sub
arpl
adc
adc
and
jl
add
and
mov
xchg
and
jp
inc
adc
dec
aaa
adc
push
and
adc
andl
movl
or
mov
mov
adc
leave
and
and
xor
dec
mov
cmp
cmp
jge
pop
lcall
pop
mov
jmp
mov
scas
notl
fadds
call
and
adc
adc
xor
mov
and
cmpsl
in
adc
mov
mov
jle
mov
mov
js
adc
mov
and
adc
jne
adc
mov
pop
pop
adc
adc
adc
mov
xchg
xor
lret
mov
imul
add
adc
shlb
mov
lea
add
sbb
push
and
or
or
adc
lea
int3
inc
xor
and
pop
adc
dec
add
dec
lret
and
pop
adc
fstpt
lret
and
ljmp
popf
icebp
mov
xchg
xchg
mov
sbb
or
sbb
or
add
and
mov
and
mov
insb
inc
xchg
adc
daa
repnz
es
adc
adc
pop
mov
and
sbb
cmp
jne
mov
cmp
pusha
pop
adc
jbe
stc
dec
pop
adc
jbe
mov
ret
popa
fadd
or
and
inc
sbb
add
pop
aaa
adc
bound
arpl
inc
adc
mov
popa
adc
or
adc
popa
inc
movsb
adc
xchg
and
and
ja
cmpl
je
add
sub
jle
mov
jb
inc
cmp
adc
adc
dec
ljmp
pop
repz
mov
cwtl
dec
insl
sub
jo
add
daa
sbb
test
mov
adc
mov
cmovo
adc
push
mov
adc
and
daa
pop
push
adc
adc
mov
sub
adc
dec
loopne
dec
arpl
mov
testb
orb
es
arpl
enter
adc
and
and
and
xor
pop
and
nop
sbb
shr
mov
and
add
jle
push
pop
lea
lea
cltd
sub
sar
and
shl
add
sub
cmp
inc
and
or
push
pop
cmp
jle
orl
jo
sbb
xchg
xor
adc
dec
dec
adc
adc
inc
ja
sar
imul
add
movl
lea
push
iret
movzbw
shl
pop
xchg
add
xor
not
mov
mov
mov
add
decl
jne
mov
lea
adc
and
pop
push
jo
mov
addl
xor
aam
movb
ret
enter
fsts
ret
adc
or
pop
push
fs
jecxz
movl
adc
mov
pop
jo
incl
pop
push
xor
lea
mov
and
jle
mov
and
cmp
xor
jle
and
les
jle
and
jae
adc
push
cmp
scas
adc
sub
jg
sub
adc
adc
shl
bound
add
adc
fisubs
and
sub
mov
pop
mov
adc
and
les
and
adcb
ja
andb
ja
js
ja
xor
daa
ja
adc
loop
orb
mov
adc
and
lods
popa
adc
lods
popa
sub
cmp
sub
pushf
push
adc
adc
add
adc
pop
shlb
ret
push
push
mov
xorl
ja
inc
sub
adc
test
adc
addl
push
and
add
subl
and
ret
and
pusha
mov
xor
enter
adc
mov
push
adc
push
inc
inc
mov
pusha
add
pusha
adc
push
adc
adc
outsl
push
daa
sub
adc
pop
sub
add
subl
adc
cmpsl
adc
push
and
call
movsl
cmpsb
dec
sbb
mov
add
and
sub
pop
and
mov
dec
insb
and
mov
dec
jo
sub
dec
je
pop
adc
and
cmp
and
and
and
les
adc
nop
and
mov
mov
inc
or
dec
in
adc
cwtl
pop
inc
adc
pop
sub
adc
push
fs
adc
add
cmp
adc
mov
adc
fstpt
sahf
and
pop
adc
mov
push
and
pop
adc
pop
js
xor
adc
and
sub
push
fildll
mov
push
and
pop
mov
mov
cmp
mov
jne
mov
push
mov
shll
and
push
mov
andb
pop
orl
mov
inc
sub
pop
and
mov
cltd
add
and
and
sub
and
push
and
or
je
cmp
jne
and
loop
stos
loope
or
lock
stos
and
test
adc
and
and
movsl
lcall
xor
insl
outsl
and
xor
loop
adc
and
dec
dec
jg
mov
sub
adc
jbe
mov
xchg
cmpb
or
daa
hlt
add
popa
push
adc
xchg
jmp
adc
pop
push
adc
es
add
sbb
adc
adc
pusha
and
adc
and
call
pusha
and
pop
pusha
and
addr16
xchg
adc
daa
sub
adc
xchg
dec
enter
adc
xchg
es
and
add
inc
push
mov
xchg
inc
movl
mov
xchg
daa
es
and
and
xchg
andb
mov
add
xor
push
mov
movzbl
movzbl
shl
add
mov
and
xchg
sbb
dec
pop
sbb
pop
inc
xor
sub
and
imul
mov
mov
je
inc
sub
inc
inc
cmp
cmp
sbb
inc
and
loopne
push
adc
repz
sbb
scas
mov
push
push
call
and
jb
push
mov
and
inc
xor
cmp
and
setne
adc
push
mov
and
adc
adc
adc
adc
pop
cmp
and
loop
leave
fs
adc
xchg
mov
add
repz
push
jne
and
adc
adc
jae
and
or
adc
inc
pop
pusha
sub
push
mov
stc
adc
ret
andl
or
cmp
xor
leave
inc
xor
xlat
decb
lock
orb
sbb
push
add
add
cmp
call
and
cmp
test
adc
sbb
jne
and
mov
mov
inc
or
sub
push
mov
mov
shll
or
push
adc
lds
adc
shll
jb
adc
push
scas
or
pop
daa
sbb
adc
and
adc
add
rcrb
mov
xorb
jecxz
and
pop
adc
adc
adc
xor
push
and
sbb
adc
jge
and
push
das
dec
pop
dec
fsts
cmp
shrl
clc
push
push
push
and
imul
and
adc
and
push
adc
and
mov
or
sbb
adc
mov
je
pusha
cs
and
rolb
adc
and
and
test
and
lods
adc
xor
and
test
mov
and
rcll
and
xor
push
push
int3
and
jnp
sbb
inc
mull
cmp
adc
fists
mov
xor
adc
ret
xchg
mov
mov
push
and
push
push
push
cmpb
jne
popf
adcl
jmp
and
push
icebp
and
test
repnz
cmp
adc
inc
and
and
and
outsb
lahf
and
push
add
and
xchg
and
pop
adc
out
mov
adc
mov
adc
and
sub
adc
jae
and
inc
insb
lds
xchg
pop
xor
xchg
adc
and
and
pop
es
push
or
adc
cld
adc
add
xor
mov
cmp
je
push
gs
call
pop
mov
andb
pushl
inc
fwait
adc
jp
ja
jmp
push
mov
mov
push
or
ss
adc
inc
pop
pusha
jns
and
nop
cwtl
lock
mov
gs
mov
and
inc
outsb
adc
and
inc
loopne
and
sbb
lea
jmp
mov
movsb
adc
adc
dec
jge
aad
and
subl
dec
call
decl
adc
sbb
add
mov
cmp
ret
or
adc
adcb
mov
inc
adc
push
mov
adc
xorb
andb
pop
adc
addb
mov
add
pop
shll
and
adc
push
mov
add
movsb
rcrb
mov
adc
adc
xor
sub
add
add
mov
jmp
mov
adc
test
add
add
mov
and
adc
adc
aas
add
aas
add
shlb
daa
add
daa
adc
adc
sub
add
lea
pusha
adc
loope
dec
mov
pop
adc
fistpll
add
lea
inc
adc
push
inc
and
daa
sbb
daa
pop
add
mov
and
inc
xor
and
cmpb
dec
xor
or
scas
mov
sub
add
lea
pusha
pop
adc
nop
jmp
lea
rolb
sub
add
or
adc
sub
mov
sub
add
inc
sub
add
incl
adc
pop
dec
addb
inc
mov
adc
or
or
adc
das
orb
cwtl
mov
or
das
bound
and
xor
add
cmpb
es
adc
sub
inc
or
or
or
push
pop
add
sub
adc
cs
add
mov
add
adc
pop
adc
movups
xor
add
mov
xor
add
mov
adc
mov
outsl
add
sub
add
add
mov
and
jecxz
adc
dec
add
adc
lcall
je
adc
es
inc
fucom
or
jo
inc
adc
mov
and
adc
mov
subb
pop
ret
jle
mov
adc
popl
adc
mov
mov
cmc
xchg
inc
pop
inc
outsl
sub
add
mov
add
pop
add
pop
add
ja
mov
mov
lea
mov
dec
mov
pusha
xor
call
inc
or
mov
sub
shlb
pushf
adc
pop
pop
loopne
adcb
jo
xchg
add
xor
adc
xor
add
adc
sub
adc
sub
xor
xchg
and
loopne
cmpl
test
mov
pop
adc
inc
pop
adc
mov
mov
sub
inc
pop
cmpb
sbb
add
sub
mov
div
scas
mov
mov
popa
int3
adc
scas
adc
fisttps
add
addb
sub
add
or
dec
test
sub
add
stos
adc
mov
popl
adc
cli
notb
adc
daa
iret
add
test
and
mov
cmc
test
cmpsl
sub
adc
add
adc
and
aas
orb
insb
out
xor
add
dec
add
iret
adc
iret
mov
inc
iret
and
or
fdivs
and
cmpl
lahf
push
nop
ss
add
loop
adc
sub
sub
mov
sub
add
push
scas
adc
inc
adc
fcoms
mov
or
outsl
or
das
addl
pusha
fists
xchg
xor
add
pop
adc
pop
add
xchg
push
idivl
das
and
es
add
js
into
add
insb
orb
mov
les
mov
cwtl
sub
popa
fistps
mov
pop
jle
ljmp
add
xchg
das
mov
cmpl
xor
adc
aas
add
clc
xor
add
inc
aaa
inc
ja
aas
loope
inc
inc
sub
add
and
inc
pushf
out
adc
es
sub
inc
add
movups
pusha
xor
add
or
jnp
orl
add
inc
sbb
aas
add
and
add
and
jmp
ret
pop
pop
adc
cmp
pop
add
lahf
add
loopne
and
cmpsl
adc
inc
xchg
test
mov
xchg
add
popl
adc
das
add
repz
ret
push
add
jo
jle
es
add
enter
es
add
sub
push
daa
insb
add
add
test
adc
shrl
ss
add
xor
adc
outsl
popl
inc
jo
testb
xchg
ret
pop
es
add
cmp
mov
out
push
add
mov
addb
adc
add
push
xchg
xor
add
xor
add
cmc
jle
es
test
in
loopne
adc
mov
jns
outsl
add
cmp
add
das
sbb
adc
sub
adc
adc
shlb
pop
add
xor
add
jo
adc
cltd
cmp
add
dec
cmp
add
jo
pop
add
imul
jo
mov
xor
add
cmp
or
cmp
mov
decl
xchg
adc
sbb
sbb
and
cwtl
shrb
mov
cmovo
subb
aas
mov
adc
out
or
add
stc
sub
add
xor
add
pop
add
fwait
xor
test
mov
daa
mov
and
stos
jae
mov
daa
mov
adc
rclb
shlb
add
push
adc
pushf
cmp
add
pusha
xor
add
pop
adc
lgdtl
mov
cmpsl
sub
add
pavgw
adc
daa
and
sub
add
adc
xor
lahf
adc
pop
iret
mov
cmpsl
call
jge
xchg
and
add
or
es
in
adc
es
imulb
orb
adc
es
es
or
es
or
es
or
or
daa
mov
sub
es
add
or
sub
or
or
or
or
or
or
or
aaa
pop
inc
inc
test
adc
adc
imul
adc
mov
iret
fbld
inc
sub
sub
mov
and
adc
adc
daa
pop
add
dec
add
pop
add
daa
pop
add
daa
pop
add
daa
pop
add
daa
pop
add
inc
or
or
or
or
or
or
or
or
or
mov
adc
pusha
mov
or
inc
or
mov
or
inc
or
or
or
push
sub
pusha
aaa
es
add
daa
pop
add
daa
pop
add
pop
add
es
add
and
rorb
adc
das
std
add
pop
pop
fs
and
mov
xchg
pop
inc
cmpsl
push
adc
sbb
adc
sub
add
syscall
jmp
lldt
ljmp
js
inc
mov
mov
fcoml
mov
daa
mov
inc
lahf
and
dec
rolb
jns
inc
aaa
adc
lahf
adc
xor
add
cmp
add
sbb
inc
xor
add
dec
adc
pop
add
mov
out
adc
xor
add
aad
xchg
cmc
xchg
rcll
pop
adcb
mul
jg
out
popa
stos
adc
cmp
add
sbb
lods
add
sub
xor
add
adc
adc
adc
adc
lea
or
test
add
subl
cmpsb
sub
adc
cmp
or
mov
outsl
push
cmp
adc
jg
push
add
enter
sub
push
sub
add
mov
adc
sub
add
sbb
cmpsl
mov
cmovo
mov
inc
pop
push
adc
aas
leave
das
adc
mov
add
orb
inc
pusha
insb
adc
and
or
mov
adc
add
iret
add
pop
adc
sub
sub
add
pop
adc
xor
add
pop
adc
cmpsl
cmp
add
xor
add
fists
pop
xor
add
and
and
inc
and
adc
mov
add
cmpsl
adc
outsl
popa
scas
adc
mov
push
dec
mov
mov
insb
cmpsb
xor
add
mov
stos
pop
pop
adc
test
out
add
pusha
xor
add
mov
daa
out
loope
adc
mov
daa
unpckhps
aaa
adc
movb
cmpb
cmovno
adc
insl
push
mov
ret
lea
push
inc
inc
sbb
loopne
jbe
adc
adc
dec
inc
aaa
mov
insb
lea
and
int3
rorb
orb
fisubs
dec
mov
add
loope
jecxz
andl
fs
or
scas
sub
mov
adc
sub
sgdtl
jmp
stos
cmp
xor
add
aaa
popl
adc
push
add
pop
add
movsb
adc
add
mov
in
push
dec
adc
mov
adc
adc
rolb
inc
ret
iret
lea
jbe
adc
stos
das
out
add
adc
sbb
sub
pop
add
adc
pop
pop
pop
adc
xor
add
cli
fnsave
dec
scas
xor
add
dec
inc
xchg
imull
jg
dec
nop
push
inc
out
daa
lock
inc
pop
lock
daa
pop
add
mov
sbb
mov
pop
add
outsl
add
sbbb
inc
jo
mov
and
and
pop
adc
aas
adc
adc
add
jno
adc
pop
add
out
cmp
daa
and
xor
add
mov
and
xor
add
lahf
and
mov
add
pusha
pop
adc
iret
and
lea
cltd
pop
pushf
adc
add
daa
adc
sub
add
lahf
adc
mov
add
xchg
adc
pop
mov
pop
push
loopne
adc
adc
adc
das
add
push
sub
add
sub
add
incl
sub
pop
sub
add
pop
sub
xor
add
shlb
das
adc
and
inc
or
mov
or
jg
dec
sub
rcrb
jo
pop
add
cwtl
xor
add
adc
cmp
add
call
fimuls
sub
sbb
fbld
cmp
pop
adc
mov
lgdtl
cli
addr16
pop
adc
pop
add
sar
dec
adc
loopne
xchg
sbb
xchg
adc
inc
jl
or
adc
shlb
or
adc
and
mov
test
or
adc
mov
inc
sbb
adc
and
mov
mov
or
adc
or
adc
test
or
fs
adc
fsubl
sbb
push
mov
nop
or
adc
or
adc
out
inc
dec
and
adc
icebp
pop
inc
or
lgdtl
mov
jecxz
sub
bound
or
orb
add
jbe
sub
adc
adc
sub
stc
cmp
add
sbb
js
sbb
adc
sub
in
or
add
movsb
sub
or
fnsave
mov
xchg
sub
add
shrb
or
sub
or
sub
or
mov
jg
adc
bound
or
hlt
mov
lea
and
or
adc
orb
stc
adc
lds
shrb
adc
int3
outsl
adc
xor
add
arpl
hlt
cltd
dec
adc
das
add
mov
wbinvd
adc
aas
add
add
fdivrs
pop
add
add
das
adc
cmp
add
push
cmp
add
js
pop
add
mov
enter
adc
xor
pop
inc
inc
cmpsl
and
add
test
fwait
pusha
or
shlb
add
and
and
mov
or
das
and
mov
or
adc
inc
and
faddl
js
or
mov
inc
pop
inc
es
adc
mull
add
bound
or
movsb
orb
mov
or
mov
cld
mov
and
lock
adc
nop
addr16
das
pusha
jecxz
iret
or
mov
add
inc
mov
testl
daa
add
addr16
leave
and
pusha
das
adc
mov
sub
add
int3
lret
cld
and
es
or
mov
add
sub
or
and
mov
pop
subl
subb
pop
pusha
sub
js
sub
sub
adc
das
add
les
aas
add
pop
dec
ja
pop
adc
mov
aas
adc
pop
add
pusha
pop
adc
pop
add
loopne
or
pop
or
inc
sbbl
es
aaa
dec
cmpsl
adc
shlb
std
leave
cmpsl
and
mov
inc
xor
add
pop
repnz
bound
xchg
and
adc
inc
add
mov
add
jg
adc
clc
fs
lock
scas
push
mov
mov
adc
cmc
test
pusha
aaa
adc
aaa
add
jno
adc
dec
push
adc
filds
xor
add
insb
fists
clc
xor
add
and
xor
mov
iret
sbb
mov
daa
pop
add
sbb
mov
add
int
inc
pop
pop
sub
add
sarb
add
ja
mov
and
sarl
add
sarb
add
adc
mov
pop
add
adc
cmp
add
cmp
pop
add
lea
cmc
nop
iret
adcb
loopne
adc
aas
add
nop
cmp
and
sub
add
mov
mov
xor
add
ret
cmp
pop
add
pop
pop
adc
orb
dec
or
adc
add
orb
pop
and
pop
add
mov
mov
and
cs
cs
subb
sub
and
adc
sub
das
das
add
mov
daa
iret
sbb
mov
add
adc
fistps
and
and
fildll
pop
xchg
cvtpi2ps
adc
lds
dec
adc
pop
adc
pop
add
das
adc
add
lahf
and
pop
add
xor
add
pusha
pop
adc
xor
add
push
notb
lock
add
pop
sti
test
add
out
sub
push
dec
mov
adc
mov
es
xor
mov
adc
adc
in
mov
sub
add
fdivs
add
addb
cmp
das
jg
or
or
add
xchg
and
enter
cmp
push
inc
call
test
and
leave
cmp
sbb
dec
xor
add
scas
and
mov
adc
stc
or
mov
mov
ja
adc
dec
add
adc
daa
and
and
lret
or
cmp
add
das
daa
jg
and
xor
and
sbb
pusha
es
add
and
repz
push
es
lds
add
cmp
mov
add
xchg
adc
sub
add
add
dec
or
mov
jmp
nop
das
and
xchg
jmp
shll
inc
sub
nop
sub
in
divl
pop
and
shll
cmp
clc
pop
cmp
adc
mov
mov
daa
das
pop
loopne
cmpsl
sbb
and
pop
add
mov
and
sub
int3
xor
add
icebp
adc
movups
pop
adc
cmp
add
or
xor
add
xor
and
xchg
fbld
lods
xchg
adcb
out
pop
sub
aas
add
test
and
es
add
adc
into
filds
adc
cmovbe
out
sub
daa
add
xor
add
cmp
add
loopne
jg
and
adc
ds
jecxz
orb
shll
or
addb
push
adc
adc
add
cmp
adc
add
sbb
or
adc
or
adc
inc
rolb
subb
mov
sbbl
lods
mov
ss
and
and
xorl
insb
dec
inc
push
adc
loopne
adc
daa
jg
add
inc
add
movsb
daa
loopne
adc
or
lods
cmp
cmp
add
pop
shrb
add
sub
enter
shll
pop
add
xchg
pop
adc
xor
mov
xor
add
cwtl
das
and
daa
decl
adc
xor
mov
xchg
adc
push
out
sub
or
out
and
mov
push
sub
add
inc
daa
pop
add
daa
adc
xor
add
inc
xchg
jmp
adc
das
ds
sub
sub
sub
add
pop
add
add
inc
outsb
adc
sub
add
outsl
add
aam
adc
adc
and
adc
out
mov
inc
es
xor
jbe
in
es
and
ss
dec
xor
add
pop
and
test
and
mov
mov
test
mov
testl
sub
mov
mov
add
adc
pop
add
xor
add
lea
sbb
sti
push
out
mov
es
add
jae
adc
les
lahf
and
mov
and
cmp
pop
add
das
sbb
aas
pusha
lock
xor
orb
pusha
pop
daa
enter
les
bound
stos
and
andb
stos
and
mov
push
add
xor
adc
call
or
xor
add
das
add
xor
sub
sub
sub
and
xor
loop
adc
dec
in
and
and
sub
pop
add
mov
dec
movl
aas
dec
push
addb
ja
or
or
cmp
add
pusha
cmp
add
mov
pop
add
xor
add
jg
adc
xor
add
xchg
adc
fnstenv
mov
cmp
and
dec
or
out
pop
mov
or
mov
mov
lea
add
dec
test
xchg
js
dec
adc
xor
dec
lahf
jmp
adc
mov
das
addb
mov
push
addl
mov
cmpsl
push
stos
testb
outsl
inc
pop
orb
adc
outsl
inc
adc
xor
and
mov
shl
pop
and
cs
or
inc
or
or
or
orb
adc
or
or
es
add
add
sub
inc
or
or
or
sbb
sub
and
sub
or
mov
lgdtl
fstpt
dec
push
and
sub
adc
arpl
in
adc
push
sub
adc
cmpb
sti
push
push
mov
push
loop
es
add
mov
cmp
xorb
pop
daa
aas
add
aaa
add
mov
sub
inc
xor
add
mov
shlb
daa
pop
add
out
loopne
xor
add
mov
pop
add
fdivs
pop
add
movb
lea
fs
out
add
or
or
and
daa
add
sbb
sub
add
daa
add
subb
add
add
mov
pop
adc
xor
add
dec
sub
add
bound
andb
sub
sub
add
inc
add
or
ret
mov
lar
sbb
pop
add
jg
das
sbb
sbbb
xchg
adc
jns
hlt
lret
clc
sub
loopne
adc
fistpll
dec
movups
pop
add
lock
js
pop
add
test
aas
sbb
xchg
cmp
pop
inc
pop
fbstp
aas
add
adc
pop
jecxz
mov
daa
pop
add
adc
xor
add
push
adc
test
sbb
iret
enter
les
aas
add
pusha
xor
cmp
sub
add
add
shrb
das
add
pop
add
add
das
incl
and
das
arpl
das
loopne
daa
pop
add
mov
adc
and
sub
test
sbb
sbbb
out
xor
shlb
add
sti
jl
pop
dec
sub
add
scas
or
sub
aaa
scas
or
pop
daa
sbb
das
pop
add
sub
add
call
pop
pop
xor
add
aas
adc
leave
pop
sub
mov
shl
bound
and
ds
adc
daa
adc
xlat
and
aas
daa
pop
cmp
mov
ret
jg
nop
xor
add
mov
cmpsb
sbb
adc
adc
or
subb
aas
roll
dec
add
adc
inc
cmpsl
and
sub
xor
sub
add
fbld
pop
inc
adc
mov
sub
mov
adc
cmp
adc
pop
add
xor
add
mov
loopne
pop
add
or
cmp
add
xor
daa
add
sub
add
fists
sub
jp
cld
pop
mov
and
cmp
or
inc
mov
jg
or
fstl
pushf
cld
and
jp
jns
sub
clc
cmp
adc
sub
xor
push
and
and
daa
jg
and
cmp
jg
inc
or
push
cmpb
daa
jg
and
or
mov
lods
aaa
adc
and
pusha
pop
insb
pushl
adc
cmp
or
mov
aas
or
enter
and
add
mov
sbb
fcoml
add
out
pop
sbb
shr
fcmovnu
std
popa
jbe
adc
scas
call
sub
add
adc
rdmsr
push
or
and
and
outsl
or
mov
fisttps
pop
add
adc
add
adc
jmp
cmpsb
sub
pop
add
mov
fbld
and
and
jmp
daa
pop
add
jg
and
call
add
jg
pusha
ljmp
pop
add
aas
adc
aas
add
testb
pop
cli
loopne
adc
lock
and
adc
adc
out
mov
es
adc
ds
sbb
outsl
and
loopne
loopne
and
and
sub
and
and
inc
inc
cmpb
orb
out
xor
das
inc
adc
addr16
es
jmp
and
mov
stc
or
adc
and
dec
add
sbb
std
sbb
in
cs
sub
sub
shrb
mov
iret
sub
add
pusha
push
pop
and
daa
adc
sub
add
lahf
adc
in
xor
adc
and
xor
add
inc
cmpsb
adc
pusha
push
adc
sub
add
xor
jns
and
and
loopne
and
loopne
test
loopne
and
add
inc
cwtl
sbb
and
out
xor
adc
adc
or
mov
jno
and
add
filds
adc
adc
daa
and
xor
add
lock
pop
add
lock
or
cld
andl
repz
push
pusha
daa
ret
subb
add
popl
sti
pop
aaa
pop
add
xchg
mov
adc
mov
mov
xor
add
outsl
add
mov
push
adc
pop
and
xor
inc
and
dec
es
mov
adc
outsl
or
adc
mov
mov
in
adc
mov
adc
adc
xor
aas
add
push
add
aas
add
nop
xor
add
lahf
and
cmpsb
dec
cmpb
or
and
sub
and
repz
pop
add
js
pop
add
mov
in
enter
decl
and
adc
sub
add
mov
mov
aaa
push
inc
jg
or
adc
hlt
xor
add
lahf
inc
cmp
jno
test
or
cmpsl
aas
adc
loopne,pn
sub
and
ds
sub
loopne,pt
and
dec
adc
out
add
xchg
adc
das
outsl
add
mov
cmp
add
dec
or
add
sub
add
cmp
add
adc
xor
shrb
lahf
or
idivl
adc
jg
adc
aaa
prefetchnta
adc
pop
add
lea
and
shrb
and
daa
aaa
sbb
adc
loopne
sub
add
int
lods
dec
adc
sub
sub
cmp
add
pusha
sub
add
das
push
mov
adc
in
and
fisubl
in
daa
adc
jecxz
lods
sbb
and
sub
and
mov
sub
pusha
cmp
rorb
sub
subb
clc
xor
pop
rcrl
sub
sbb
pop
add
mov
pop
add
in
and
cmp
adc
in
das
mov
test
rcrb
loopne
pop
add
and
nop
outsl
pusha
sub
sub
add
in
pop
add
pusha
pop
adc
pop
add
push
add
decl
movsb
ret
lahf
xchg
pop
inc
pop
sub
add
sbbb
jne
pop
mov
les
and
bound
pusha
pop
je
sub
add
adc
and
pusha
nop
adc
iret
add
mov
push
loopne
es
add
shlb
daa
add
lahf
adc
fisubl
mov
adc
sub
adc
add
cmp
add
pop
add
pusha
das
pop
add
das
sbb
cmpl
adc
mov
sub
sub
sub
sub
jg
adc
cli
sahf
mulb
decl
sbb
sbbb
aaa
adc
or
mov
and
pop
add
mov
add
mov
call
and
adcb
dec
daa
sub
sub
add
fwait
outsb
sbbb
mov
pop
add
pop
and
sbb
daa
imul
aas
mov
sub
add
popf
testl
add
inc
pushl
pop
add
lahf
mov
adc
add
pop
add
ja
xchg
das
aaa
pop
add
push
call
pop
add
cmp
inc
or
in
and
sub
add
and
inc
adc
inc
inc
sub
add
test
sub
inc
push
orb
pop
mov
add
das
add
mov
daa
jno
and
sub
hlt
iret
and
xor
add
adc
xor
xor
sbb
adc
pop
add
xor
inc
and
das
add
adc
cmp
add
mov
pop
ds
add
mov
and
es
add
cmp
push
inc
test
adc
or
mov
cmp
add
sbb
es
cmp
add
dec
daa
sub
sub
sbb
and
add
sub
adc
adc
daa
sub
and
adc
or
adc
push
adc
daa
ja
adc
adc
test
adc
sbb
add
jb
gs
adc
loopne
sub
adc
stos
enter
aaa
adc
add
adc
das
adc
adc
adc
adc
mov
adc
adc
adc
daa
lahf
add
add
sub
out
mov
cmp
adc
adc
mov
sub
add
iret
xor
adc
into
mov
and
adc
and
js
or
adc
or
daa
xchg
add
sub
adc
or
lret
adc
test
adc
adc
adc
sub
add
sbb
mov
push
sub
add
das
dec
and
push
adc
adc
subb
push
adc
loopne
mov
inc
stos
adc
adc
push
add
push
das
add
nop
and
add
mov
loopne
adc
adc
ucomiss
add
xor
add
xchg
jp
cmpsl
adc
es
adc
push
popf
out
inc
scas
and
xor
adc
es
add
mov
dec
adc
cmp
shlb
mov
nop
dec
loopne
and
adc
cmp
adc
addb
jns
jge
xchg
and
sub
add
adc
cmp
add
cmp
add
popl
push
mov
adc
imul
ret
das
adc
inc
out
inc
jbe
les
adc
adc
cmpsl
add
sub
and
add
mov
and
es
and
das
adc
inc
cmpsl
adc
andb
adc
add
cmp
adc
jmp
push
adc
push
add
pop
add
mov
pop
add
mov
rcrb
es
adc
jne
and
into
fmuls
adc
testl
add
arpl
mov
daa
add
mov
adc
cmp
sub
add
add
sub
adc
daa
adc
adc
adc
cmp
nop
out
das
adc
adc
adc
sub
sub
xor
add
daa
adc
das
imul
adc
popa
iret
adc
adc
adcl
es
add
adc
and
adc
sub
add
mov
es
adc
std
orb
mov
mov
mov
adc
loopne
daa
repz
out
adc
sub
adc
adc
es
xchg
pop
adc
sbb
jmp
rclb
pop
sub
add
pop
add
dec
and
enter
das
pop
add
dec
mov
addl
imul
add
pusha
daa
or
adc
adc
or
adc
or
das
sub
daa
sub
and
and
scas
add
push
rorb
and
es
mov
mov
adc
pusha
sbb
or
and
adc
loopne
and
and
or
and
aaa
pushl
and
aas
lret
jo
mov
mov
adc
das
imul
andb
call
outsb
jp
test
adc
dec
and
and
jnp
xorl
jmp
adc
adc
inc
push
adc
inc
orb
nop
jecxz
inc
lret
loopne
adc
adc
adc
lahf
adc
and
adc
mov
dec
sti
daa
or
adc
and
sbb
or
and
das
adc
adc
sub
add
lret
and
and
out
lock
xor
sbb
pusha
and
adc
inc
add
or
loopne
and
jb
add
add
add
nop
or
add
dec
adc
test
add
cwtl
inc
add
xchg
adc
add
fs
add
push
inc
add
inc
inc
add
xor
pusha
add
sub
add
sbb
dec
adc
repnz
adc
fiaddl
adc
inc
or
cmpsb
inc
pop
adc
add
subb
movups
add
push
inc
add
push
inc
pop
adc
adc
inc
adc
out
inc
add
incb
adc
inc
adc
adc
adc
inc
add
cs
add
inc
inc
add
push
inc
add
push
add
jbe
add
nop
inc
add
mov
inc
sub
rolb
into
inc
add
fiaddl
adc
pusha
pop
adc
add
inc
add
fiaddl
adc
inc
add
dec
adc
push
inc
add
sub
adc
inc
add
mov
aaa
adc
pop
adc
add
jl
pop
adc
inc
adc
mov
inc
add
xchg
adc
inc
pop
adc
inc
add
movsb
inc
sub
cld
inc
pop
adc
inc
add
addb
push
inc
add
jbe
add
push
add
pop
inc
add
push
inc
add
dec
inc
add
xor
adc
inc
add
es
add
mov
mov
sbb
pop
adc
dec
adc
add
push
inc
add
inc
inc
add
xor
add
sub
adc
pusha
xchg
inc
add
inc
adc
out
add
lret
adc
inc
add
movsb
inc
add
cwtl
inc
add
mov
adc
add
pop
inc
add
push
inc
add
inc
inc
add
sub
add
push
inc
add
or
adc
inc
inc
repz
add
fadds
adc
inc
add
mov
inc
add
jle
add
jb
add
pusha
inc
add
dec
inc
add
cmp
adc
inc
add
and
add
adc
add
add
inc
add
xor
add
inc
add
push
xor
adc
add
dec
inc
add
pop
inc
add
push
add
jle
add
nop
inc
add
mov
inc
add
les
adc
inc
add
fiadds
adc
inc
add
clc
inc
add
push
ss
pop
inc
add
and
add
xor
adc
add
push
inc
add
fs
add
js
add
test
adc
inc
add
scas
inc
add
mov
inc
add
loopne
add
in
inc
add
testb
adc
inc
jg
add
inc
inc
add
pop
inc
add
js
add
mov
adc
inc
add
ret
adc
inc
add
fiadds
adc
inc
add
push
cmp
inc
add
es
add
ss
add
inc
inc
add
fs
add
jbe
add
mov
adc
inc
add
mov
inc
add
rolb
adc
inc
add
mov
adc
add
pusha
inc
add
dec
inc
add
ss
add
and
adc
add
add
adc
inc
sti
inc
add
aam
add
les
adc
inc
add
addb
insb
inc
add
pusha
inc
add
push
inc
add
inc
inc
add
sub
adc
add
or
adc
xor
inc
add
fiadds
adc
inc
add
mov
inc
add
xchg
inc
add
xchg
adc
add
pusha
inc
add
inc
inc
add
cmp
adc
inc
add
and
adc
inc
add
add
adc
xor
inc
add
inc
add
lret
adc
add
xchg
inc
add
addb
jbe
add
push
add
pop
inc
add
cmp
add
and
adc
add
cld
xor
inc
add
in
add
enter
mov
inc
add
pushf
inc
add
mov
adc
add
outsb
inc
add
pop
inc
add
dec
inc
add
xor
adc
inc
add
push
inc
add
hlt
das
inc
inc
inc
add
fadds
adc
inc
add
mov
add
mov
inc
add
mov
fwait
adc
inc
fbld
adc
pusha
add
mov
inc
iret
adc
add
xor
adc
inc
add
adc
add
adc
inc
add
or
adc
out
inc
add
inc
inc
add
sub
adc
inc
add
add
adc
inc
add
pop
inc
add
xor
adc
inc
add
cmovo
adc
inc
add
push
inc
add
or
adc
inc
add
add
adc
inc
add
dec
inc
add
adc
adc
inc
add
adc
andl
xchg
inc
add
pop
inc
add
push
inc
add
mov
inc
add
movsl
inc
add
mov
adc
shlb
shlb
enter
pusha
jnp
dec
adc
inc
iret
adc
rcll
sub
adc
add
add
adc
inc
inc
cmovo
adc
inc
add
mov
inc
add
lcall
adc
add
pop
inc
add
inc
inc
add
sub
add
and
adc
inc
add
repnz
inc
xlat
inc
add
fadds
adc
inc
add
mov
inc
add
cwtl
inc
add
xchg
adc
add
bound
adc
add
inc
inc
add
sub
adc
inc
add
or
adc
inc
inc
filds
adc
inc
pop
adc
inc
add
mov
inc
add
xchg
inc
add
xchg
adc
add
fs
add
push
inc
add
inc
inc
add
sub
add
sbb
add
add
add
lock
inc
ret
inc
add
movb
mov
inc
add
mov
adc
inc
add
push
inc
add
inc
inc
add
xor
adc
inc
add
push
inc
add
repnz
jae
add
mov
inc
add
pushf
inc
add
mov
adc
inc
add
pop
inc
add
dec
inc
add
cmp
adc
inc
add
push
inc
add
cmp
adc
inc
add
rolb
adc
inc
add
xchg
inc
add
addb
je
add
fs
add
push
inc
add
inc
inc
add
enter
push
inc
rcll
pusha
inc
add
jbe
add
fiadds
adc
inc
xchg
adc
inc
add
or
inc
mov
inc
add
inc
inc
add
push
inc
add
inc
add
jp
add
mov
adc
inc
add
mov
inc
add
aam
add
xor
push
adc
inc
add
and
adc
inc
add
add
add
clc
cmp
jae
add
fiaddl
adc
inc
add
mov
add
mov
inc
add
je
add
push
inc
add
dec
inc
add
inc
inc
add
ss
add
and
add
push
inc
add
or
adc
cmp
inc
add
aam
add
movb
mov
inc
add
sahf
inc
add
xchg
inc
add
test
adc
add
bound
adc
cmp
loopne
mov
lock
add
add
inc
mov
adc
inc
add
sub
adc
inc
add
dec
inc
add
pop
inc
add
inc
add
jbe
add
mov
adc
inc
add
mov
add
ret
adc
inc
add
faddl
adc
inc
add
lock
add
push
inc
pop
adc
add
cs
add
and
adc
inc
add
incb
adc
inc
das
pusha
add
sbb
inc
daa
inc
add
inc
inc
add
fs
add
je
add
mov
adc
inc
add
into
inc
add
faddl
adc
inc
add
add
adc
inc
add
and
adc
inc
add
dec
inc
add
push
inc
pop
adc
pop
pusha
add
cwtl
inc
rcll
test
add
mov
arpl
and
gs
adcl
ret
and
arpl
adc
pusha
xor
adc
das
adc
inc
lret
adc
inc
add
dec
inc
add
adc
add
or
adc
sub
add
addb
aam
add
add
inc
add
inc
cwtl
pop
jo
dec
add
mov
adc
add
sbb
test
add
test
dec
add
inc
add
daa
inc
add
sub
adc
inc
add
sub
adc
inc
add
xor
adc
inc
add
aas
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
bound
adc
add
fs
add
gs
add
inc
add
addr16
add
push
inc
add
push
add
imul
insb
inc
add
insl
inc
add
outsb
inc
add
outsl
inc
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
addb
addl
adc
inc
add
mov
adc
add
mov
adc
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cwtl
inc
add
test
inc
add
lds
adc
inc
add
fiaddl
adc
inc
add
clc
inc
add
or
inc
outsl
inc
add
cmp
adc
add
push
inc
add
pusha
inc
add
imul
adc
inc
add
lods
inc
add
mov
inc
add
jecxz
add
out
inc
add
clc
inc
add
lods
dec
add
inc
add
sbb
adc
inc
add
inc
inc
add
pop
inc
add
inc
add
jae
add
jg
add
mov
adc
inc
add
mov
inc
add
fldl
adc
inc
add
out
inc
add
scas
dec
add
add
sub
adc
inc
add
inc
inc
add
pop
inc
add
addr16
add
jnp
add
xchg
inc
add
mov
inc
add
mov
inc
add
out
add
cld
inc
add
scas
dec
add
inc
add
sub
adc
inc
add
dec
inc
add
popa
inc
add
jae
add
addb
xchg
inc
add
mov
inc
add
mov
add
les
adc
inc
add
flds
adc
inc
add
repnz
add
add
adc
inc
add
sub
adc
inc
add
inc
inc
add
pop
inc
add
jo
add
addb
xchg
inc
add
mov
inc
add
add
xor
rolb
cs
insb
sub
add
push
add
add
rclb
add
adc
outsb
inc
imul
outsb
addr16
add
adc
dec
pushaw
adc
je
dec
outsl
jbe
dec
gs
outsl
jb
add
outsl
jae
dec
popa
outsb
fs
sbb
sbb
gs
imul
je
jae
outsb
arpl
jns
je
je
add
gs
push
adc
push
adc
pop
inc
outsl
jb
addr16
jne
fs
imul
mov
push
jb
arpl
jae
subb
jne
jb
outsb
je
sbb
adc
arpl
push
adc
jne
mov
jae
push
outsl
jae
dec
inc
cmp
popa
addr16
pusha
mov
pop
inc
push
adc
push
push
je
inc
push
adc
jbe
rorb
sub
add
imul
fs
gs
dec
adc
dec
jae
sub
pusha
xchg
adcl
insb
inc
sub
adc
pop
mov
imul
or
adc
adc
dec
jae
pusha
adc
push
dec
jne
je
jo
gs
bound
arpl
xchg
add
jp
sub
add
insb
jae
jb
jo
outsb
pusha
in
adc
outsl
fs
rcrb
inc
pusha
adc
adc
fs
cvtps2pi
popa
insb
insb
rcll
xor
add
mov
adc
gs
mov
jns
inc
xor
jne
jb
inc
outsl
outsb
je
js
inc
mov
dec
popa
jae
mov
insb
gs
jae
and
adc
adc
popa
mov
inc
mov
xor
inc
andb
push
popa
jb
insl
sub
es
rcll
outsl
outsl
insb
push
xor
popa
jo
push
and
jb
daa
push
add
dec
pusha
mov
push
pop
push
gs
jo
popa
je
inc
pushf
adc
push
add
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
sbb
outsl
insl
dec
inc
dec
imul
pop
cmp
adc
int
movl
inc
sahf
loope
pusha
xor
je
outsl
fs
adc
aam
or
add
flds
pusha
cmpsb
adc
mov
arpl
mov
aam
mov
inc
es
add
inc
gs
arpl
outsl
popa
leave
adc
insb
inc
or
inc
push
dec
outsl
je
data16
push
adc
jo
sbb
jae
jne
arpl
adc
fs
add
add
filds
cmp
inc
jns
into
adc
fs
popa
adc
daa
imul
add
lock
mov
xchg
adc
add
mov
add
inc
add
mov
add
inc
add
jo
inc
adc
xor
nop
inc
pop
dec
jmp
add
inc
enter
and
inc
pop
dec
pop
addb
pop
adc
cmp
add
cld
mov
add
pop
adc
inc
inc
loopne
adc
add
adc
mov
addb
pop
jmp
sub
loopne
add
add
pusha
fistl
and
es
dec
aaa
addb
cmp
loopne
adc
inc
xor
daa
popl
loopne
sub
add
jae
popl
mov
cmp
add
cmp
es
loopne
adc
nop
lock
adc
addb
add
movsl
add
pop
add
sub
adc
inc
xor
inc
outsl
loope
pusha
pusha
mov
loopne
adc
add
pop
add
adc
cmp
popl
adc
daa
popl
pusha
add
aas
add
adc
inc
fwait
add
pop
add
adc
movsb
daa
popl
loopne
adc
daa
jecxz
adc
pop
dec
xor
inc
daa
cmp
add
dec
sub
pusha
sub
or
cmp
add
pusha
jnp
popl
adc
outsl
sub
add
and
sub
pusha
add
inc
daa
popl
loopne
adc
rcrb
daa
pop
add
ret
sub
add
mov
and
popl
adc
popf
popl
adc
daa
popl
push
pusha
xchg
pop
adc
add
popl
adc
daa
popl
adc
add
xor
data16
xor
cmp
cmp
cmp
ss
popa
data16
arpl
inc
cmc
add
int
mov
cmpsl
mov
mov
inc
add
addb
test
pusha
inc
add
inc
stos
inc
add
sbb
xchg
inc
add
scas
inc
add
mov
inc
or
inc
pop
adc
mov
add
test
adc
lods
inc
and
adc
xchg
inc
add
jle
add
nop
inc
daa
inc
pop
adc
inc
or
inc
jnp
aas
inc
dec
adc
mov
pop
sbb
inc
add
inc
daa
inc
pop
adc
mov
dec
adc
mov
adc
mov
das
inc
add
addb
pusha
inc
add
rolb
lock
inc
adc
fwait
inc
movups
adc
pusha
scas
adc
adc
inc
aas
inc
adc
inc
dec
inc
jg
jo
jae
adc
adc
mov
inc
pop
adc
inc
adc
inc
aaa
inc
inc
adc
inc
pop
adc
inc
add
adc
inc
adc
inc
or
rolb
lock
pop
adc
inc
outsl
adc
inc
add
loopne
inc
xchg
inc
inc
adc
mov
adc
xor
adc
fwait
adc
inc
and
sbb
aaa
bound
xor
xor
xor
gs
gs
cmp
ss
add
test
ret
out
ja
sarb
mov
add
and
sbb
cltd
inc
add
inc
add
add
adc
inc
xor
inc
cmp
cmp
xor
cmp
inc
or
adc
cmp
inc
inc
xor
aaa
xor
pop
push
mov
mov
mov
add
inc
inc
ss
inc
cmp
inc
inc
xor
xor
inc
xor
xor
inc
inc
inc
xor
inc
sub
add
mov
add
ss
aaa
xor
inc
cmp
sub
sub
sub
ss
cmp
xor
aaa
jge
aaa
add
enter
add
inc
inc
xor
xor
inc
xor
cmp
xor
inc
inc
xor
inc
xor
inc
xor
xor
rol
mov
pop
adc
pop
dec
add
pop
dec
add
or
inc
inc
inc
sub
adc
xor
xor
inc
inc
xor
inc
xor
cmp
xor
xor
mov
shr
rcl
pusha
aas
pop
xlat
jmp
xor
cmp
cmp
sbb
inc
cmp
inc
xor
xor
ss
aas
sbb
add
fmul
loop
cmpsb
fadd
jno
loopne
aaa
add
xor
xor
xor
inc
xor
xor
cmp
inc
inc
pusha
sbb
aaa
inc
xor
add
int3
shlb
mov
dec
add
inc
xor
inc
sub
adc
xor
xor
inc
inc
aaa
inc
cmp
xor
inc
inc
xor
inc
inc
out
add
std
mov
mull
inc
packsswb
add
add
adc
and
mov
xor
add
int
add
inc
add
add
dec
out
sub
add
sbb
inc
and
xor
inc
daa
rolb
and
push
jnp
add
add
adc
add
test
lldt
adc
xor
adc
mov
add
rcll
inc
add
add
adc
inc
sub
add
and
mov
adc
push
out
add
add
adc
sub
add
adc
adc
push
es
add
rcl
dec
inc
add
aaa
add
or
dec
add
adc
int3
inc
and
rclb
adc
aad
jnp
add
aaa
add
sub
add
adc
inc
and
addb
xlat
dec
add
add
add
aaa
add
adc
test
and
jo
es
add
and
push
aaa
inc
add
aaa
add
add
aaa
add
adc
xor
and
scas
add
mov
add
adc
fisttpl
inc
add
add
adc
sub
add
adc
inc
and
lock
add
out
scas
sub
add
add
sub
add
adc
inc
and
and
xlat
add
fisttpll
inc
add
aaa
add
lsl
add
loopne
add
lsl
xor
sub
inc
add
inc
xor
dec
add
aaa
add
xor
add
push
inc
dec
adc
testl
daa
inc
add
addr16
and
mov
outsl
adc
jae
pop
mov
sub
add
and
xor
bound
xchg
adc
xor
add
loope
add
add
add
adc
inc
and
nop
aas
xor
adc
xor
add
imul
ja
add
add
adc
add
iret
add
aas
inc
add
addb
push
les
es
add
xor
add
call
add
add
cmp
inc
xor
mov
das
aaa
add
cmp
add
nop
inc
adc
cltd
sub
add
pop
ja
adc
andl
adc
mov
mov
subb
add
jmp
arpl
add
adc
adc
das
adc
adc
add
adc
adc
xor
sub
das
adc
adc
das
adc
adc
xor
add
lret
add
adc
add
daa
add
das
adc
xor
add
adc
xor
adc
add
daa
add
and
add
clc
das
mov
adc
add
jnp
add
add
lret
sbb
mov
imul
push
and
and
and
add
add
adc
adc
add
mov
xor
add
push
add
adc
add
fildl
adc
add
sub
das
daa
add
cld
rclb
int
lods
inc
push
adc
arpl
sub
add
adc
adc
adc
jb
jne
or
test
sub
daa
push
and
add
and
add
testl
fadds
and
add
and
add
movl
add
push
xor
add
bound
sbb
inc
jne
je
outsb
sub
add
dec
add
xchg
xlat
pop
cmp
add
adc
loop
adc
mov
adc
push
sub
add
daa
add
sub
or
add
and
add
sub
or
xlat
add
mov
shll
popa
imul
xlat
jmp
adc
bound
and
or
es
adc
adc
add
add
lahf
add
dec
add
add
pop
push
xor
add
jnp
sub
add
jmp
adc
roll
and
sub
cmp
add
and
int
ror
xchg
imul
je
sub
pop
add
or
jbe
add
adc
loop
adc
loop
mov
mov
inc
inc
inc
inc
add
push
and
sub
int3
in
int
push
popa
jb
popa
outsb
je
mov
mov
in
inc
xor
and
push
add
outsl
add
sub
add
adc
inc
mov
arpl
dec
xchg
add
adc
adc
add
and
add
incl
aaa
arpl
add
add
ljmp
fildl
xor
add
add
mov
cs
add
add
ja
add
adc
inc
jg
and
add
add
in
add
ret
testl
xor
push
sub
add
testl
and
add
daa
fs
shl
adc
arpl
ljmp
add
and
add
pop
add
cmp
add
and
add
and
add
das
arpl
mov
mov
mov
addr16
xor
xor
push
add
and
xor
adc
cs
add
lret
cmp
xor
add
ja
xor
add
leave
adc
add
adc
movl
cmp
add
adc
xor
add
cmp
add
and
add
xor
add
cmp
xor
add
push
add
cmp
sbb
cmp
cmpsl
add
adc
adc
add
mov
adc
add
stos
add
adc
loopne
pop
inc
dec
dec
push
rol
iret
mov
outsb
outsw
add
mov
int3
adcb
dec
inc
orb
inc
das
and
das
adc
arpl
jo
sub
push
adc
xor
xor
add
inc
add
mov
add
mov
movups
mov
add
mov
pop
adc
inc
adc
add
inc
daa
sbb
jo
push
jne
gs
inc
inc
and
movb
mov
call
mov
xchg
pop
fisubl
repz
rol
mov
mov
sub
add
and
adc
aam
mov
jecxz
not
mov
mov
ret
and
mov
cmpsb
mov
addb
inc
pop
sbb
repnz
jp
into
fidivs
or
xor
pusha
add
xor
inc
add
inc
add
xor
add
xor
xor
aaa
inc
or
adc
xor
add
xor
cmp
aaa
ss
add
and
add
xor
inc
xor
xor
xor
inc
xor
xor
cmp
inc
xor
inc
xor
aaa
inc
punpcklbw
adc
push
xor
add
add
inc
aaa
inc
xor
inc
xor
inc
aaa
inc
xor
xor
inc
aaa
inc
aaa
inc
cmp
inc
cmp
aaa
sub
xor
xor
pusha
adcl
xor
orb
jnp
adc
cmp
cmp
inc
adc
ss
xor
xor
xor
cmp
pop
sub
daa
sub
add
mov
cltd
ss
aaa
xor
pusha
imul
roll
dec
and
jae
je
push
outsl
outsb
imul
add
adc
xor
inc
cmp
inc
xor
inc
ss
cmp
xor
mov
inc
inc
cmp
movsl
sbb
inc
inc
inc
xor
inc
inc
cmp
adc
sub
add
and
add
inc
xor
inc
inc
inc
xor
inc
inc
inc
inc
inc
xor
inc
aaa
and
add
inc
or
and
inc
inc
add
ss
popa
outsb
push
in
ss
xor
jmp
mov
addb
and
and
mov
mov
mov
inc
sub
or
dec
and
add
inc
add
xor
push
and
cmp
xor
aaa
add
add
imul
imul
add
jp
push
das
das
ja
ja
push
jae
xor
xor
arpl
add
je,pn
je
je
fildl
push
add
add
add
add
push
add
mov
ret
cmpsl
mov
and
stos
iret
mov
not
ffreep
fwait
jmp
les
addr16
fsts
inc
jne
arpl
jbe
add
and
je
jo
imul
imul
gs
inc
push
adc
inc
or
adc
and
adc
and
sbb
insl
je
cmp
insl
inc
ljmp
ds
insb
cmp
pop
gs
sub
dec
outsb
jae
popa
outsb
arpl
dec
data16
push
imul
adc
and
mov
jb
inc
popa
arpl
insb
adc
dec
outsb
shlb
adc
and
cmpsb
adc
and
fs
pop
gs
je
outsw
jb
mov
aas
adc
fs
out
add
arpl
and
adc
addr16
loopne
add
add
outsb
add
aam
ret
lret
in
shll
mov
and
xlat
mov
into
fisubs
push
iret
and
jmp
adc
mov
adc
scas
inc
loope
test
inc
xor
inc
inc
xor
mov
ds
add
xor
inc
add
or
xor
xor
inc
xor
pusha
dec
loopne
adc
inc
inc
inc
xor
inc
cmp
inc
inc
inc
inc
inc
xor
adc
inc
aaa
inc
inc
add
rolb
aaa
add
adc
inc
xor
loopne
inc
ljmp
xor
inc
xor
inc
inc
pop
inc
add
xor
adc
ss
inc
mov
ss
inc
add
xor
inc
mov
ss
xor
adc
add
das
add
add
les
or
add
inc
lds
adc
fiadds
pusha
add
inc
inc
inc
aaa
add
push
add
xor
xor
subl
orb
xor
and
loopne
inc
xor
xor
inc
inc
push
adc
imul
ss
inc
cmp
add
add
add
inc
inc
pop
inc
es
movhps
jae
addr16
fs
sbb
insl
jae
jb
aas
jbe
xor
jne
outsb
cmp
xor
aaa
cmp
jae
je
cmp
outsb
gs
arpl
inc
in
jne
jns
jae
andb
cmp
and
sbb
pop
mov
rol
inc
add
inc
add
out
fistpl
fldl
pop
fiadds
push
loopne
add
inc
add
sbb
push
repz
add
sti
inc
add
or
add
inc
add
and
stc
and
inc
add
adc
shl
hlt
pop
add
mov
mov
jae
mov
movsb
sub
in
mov
les
mov
rcl
sub
and
sbb
loop
cmp
inc
adc
pop
push
jns
inc
lahf
push
xor
pop
inc
jb
jbe
inc
adc
adc
daa
sbb
adc
inc
out
adc
sbbl
adc
jno
gs
sub
add
and
adc
jae
adc
adc
inc
inc
sbb
sub
cs
movups
loopne
add
insl
gs
arpl
jo
jo
imul
gs
orb
arpl
xor
sbb
aas
jae
jb
outsb
addr16
adc
arpl
adc
das
loopne
adc
xlat
test
out
fstpt
sub
pop
cmp
pusha
push
sub
inc
sbb
add
mov
mov
int3
shlb
ret
loop
shll
jno
pusha
sbb
sbbl
mov
mov
adc
push
and
shlb
adc
adc
or
mov
cld
enter
or
sarb
shr
pusha
pop
gs
add
ret
mov
loope
mov
mov
rcl
mov
ret
test
or
mov
shr
mov
call
mov
mov
mov
inc
cmp
rcl
lret
ret
mov
shrb
sbb
into
mov
fdivs
xor
enter
ror
rcr
pusha
xor
lahf
cmp
enter
inc
push
inc
mov
ret
add
lret
lock
lods
ror
rcl
xlat
aam
shlb
pusha
cmp
lret
les
jb
mov
shlb
lods
pusha
add
enter
rcl
lret
stc
rcl
mov
shlb
popa
dec
sbb
stc
shr
mov
dec
adc
mov
push
add
mov
shl
pusha
xor
or
int
mov
mov
mov
mov
mov
shl
mov
repnz
stc
leave
out
dec
negb
mov
ret
lock
mov
sar
mov
rcl
mov
clc
xlat
test
shlb
aam
ret
pusha
pop
popa
push
les
pusha
xor
shl
aam
leave
mov
mov
mov
test
sti
mov
enter
pop
pop
lret
stc
mov
les
sbb
in
std
iret
in
mov
iret
ljmp
mov
sbb
fnstenv
mov
mov
mov
mov
shr
mov
aam
iret
shrb
fdivrl
add
mov
and
sbb
lret
mov
lods
mov
adc
icebp
inc
adc
fnstsw
push
lea
pop
cmp
insb
fs
xor
ja
ds
dec
jmp
and
insb
inc
sbb
inc
push
push
shl
rcl
lds
les
je
cmp
cmpb
pop
inc
inc
adc
or
fs
add
dec
adc
imul
inc
adc
and
insl
inc
or
pop
add
and
jp
adc
xor
insb
jne
or
and
and
push
and
popa
jae
inc
cmp
adc
and
sub
add
sub
or
mov
mov
inc
add
add
mov
inc
xor
inc
cmp
xor
inc
aaa
inc
inc
aaa
xor
xor
ss
dec
adc
cmp
xor
dec
push
inc
dec
dec
add
xor
inc
ficoms
aaa
cmp
inc
pop
pop
add
inc
inc
add
xor
sub
xor
sub
xor
sub
xor
inc
pop
inc
movups
xor
or
mov
xor
jge
and
jb,pn
jb
jp,pn
jo
insl
inc
inc
add
pop
orb
incl
sbb
jge
sub
dec
gs
gs
and
sbb
insl
popa
outsb
fs
imul
outsb
inc
and
fs
adc
fdivrs
sarb
add
data16
popa
jb
pop
loopne
adc
add
fs
and
arpl
fs
lahf
es
add
outsl
jae
or
je
adcl
inc
cmpsb
push
gs
dec
popa
imul
add
pop
pop
cs
push
push
popa
insb
xchg
ficoml
inc
insb
popa
dec
clc
push
pop
push
push
and
dec
adc
add
pop
add
and
and
inc
gs
jne
je
sbb
push
pop
add
add
add
add
and
push
push
dec
dec
dec
dec
dec
inc
dec
or
inc
rclb
and
popa
cmp
xor
aaa
sbb
inc
push
inc
push
xor
dec
push
and
js
xor
xor
movlps
inc
inc
adc
xor
jnp
or
inc
dec
dec
inc
dec
and
push
xchg
int3
adc
inc
sbb
loopne
pop
xor
xor
xor
xor
mov
inc
dec
push
inc
and
inc
rclb
popa
outsb
jns
inc
jge
and
and
and
pop
pusha
push
adc
lea
or
adc
call
add
push
inc
mov
pop
adc
les
adc
adcl
insb
loopne
pop
fidivl
sub
sbb
insb
inc
outsl
jo
jb
addr16
scas
sub
add
dec
inc
sbb
imul
pusha
and
aam
pusha
jb
ret
sti
sub
add
adc
je
outsl
adc
outsl
add
and
mov
mov
add
add
add
sub
fwait
push
adc
inc
inc
adc
js
jno
push
inc
je
inc
orb
popa
pop
adc
popa
inc
adc
pusha
fsts
add
sub
add
push
adc
loopne
adc
loopne
orb
and
inc
add
add
aaa
add
addb
pop
sbb
sub
add
add
pop
inc
add
inc
or
add
dec
inc
movups
add
pusha
add
lret
mov
ret
dec
lock
adc
push
inc
rclb
inc
add
sbb
ds
add
inc
inc
add
dec
inc
add
push
inc
add
add
pop
inc
add
pop
inc
add
inc
add
insl
inc
xor
int
inc
add
ret
fmull
adc
ss
or
jne
sub
adc
rolb
adc
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
push
add
sub
add
add
push
rcrb
and
xor
ja
pop
and
ficoms
xor
mov
add
push
add
adcl
xor
sub
xor
push
xor
push
xor
mov
iret
add
inc
addb
sub
adc
add
push
push
add
aaa
inc
add
cmovo
adc
inc
add
add
adc
push
add
std
inc
add
ljmp
adc
inc
add
int
add
int3
inc
add
lret
inc
add
leave
inc
add
dec
add
insb
inc
add
bound
adc
add
inc
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
inc
add
dec
add
icebp
inc
add
repnz
add
repz
add
hlt
inc
add
clc
inc
add
cli
inc
add
sti
inc
add
cld
inc
add
std
inc
add
in
inc
add
in
inc
add
inc
add
adc
xchg
add
inc
add
insl
xchg
add
mov
add
inc
add
arpl
add
movsb
inc
add
mov
add
inc
add
adc
mov
add
lea
add
add
pushf
add
inc
popf
add
ds
add
push
lahf
add
or
add
cmpsb
inc
add
adc
adc
inc
sbb
movsb
add
out
add
jg
add
inc
cmpsb
add
mov
add
adc
cmpsl
add
mov
add
xchg
stos
add
outsb
stos
add
out
add
lods
add
xchg
add
mov
scas
add
cmpsl
mov
add
add
and
dec
pusha
add
loop
and
js
add
sub
and
sbb
push
adc
adc
inc
mov
adc
adc
pop
movsl
xor
data16
pusha
daa
sub
cmp
jae
cmp
add
pop
test
sbbb
add
sub
add
push
cs
push
orb
inc
add
jle
adc
xor
mov
add
cmpsb
dec
inc
or
and
cmovbe
adc
inc
addb
movups
sti
adc
addb
les
pop
add
xchg
add
cmp
and
or
add
popa
out
or
rcll
pop
cmc
adc
or
or
pusha
adc
sbb
cmp
add
adc
adc
adc
add
adc
jge
jp
jbe
jae
dec
dec
dec
icebp
adc
adc
sbb
and
xor
add
adc
inc
out
sbb
dec
dec
hlt
xchg
addl
fisttpl
push
fimull
incl
inc
hlt
pusha
sbb
shrb
sub
add
adc
pop
inc
inc
inc
icebp
xchg
cld
out
fmulp
and
ffree
pop
sti
out
incl
sbb
pusha
sub
xor
and
add
adc
push
inc
inc
inc
lock
stc
jecxz
pushl
js
pushl
outsb
ljmp
pusha
sbb
pusha
sub
sarb
cmp
add
inc
inc
inc
out
xorb
out
mov
inc
inc
pushl
ss
cmp
cmp
adc
add
pusha
and
pusha
xor
rolb
add
adc
inc
add
push
and
or
push
push
push
dec
inc
iret
add
in
jle
xor
jmp
cmp
decl
jmp
arpl
adc
pusha
and
pusha
xor
pusha
inc
rorb
add
sbb
adc
adc
das
das
das
inc
inc
or
cmpsl
push
add
jg
adc
or
inc
inc
inc
in
js
aaa
push
loop
ljmp
sbb
push
ljmp
outsb
jnp
jnp
add
pusha
adc
pusha
and
testl
pusha
inc
pusha
dec
rclb
add
pusha
jecxz
add
addb
rorl
adc
sub
bound
add
cmp
or
inc
inc
inc
ljmp
add
cmp
cmp
sbb
outsl
outsl
outsl
jl
jl
inc
jecxz
add
pusha
adc
pusha
and
lods
xchg
and
mul
add
inc
pusha
dec
pusha
push
rcrb
add
cmpl
cmp
ret
push
push
push
cwtl
inc
adc
ss
adc
sti
pop
cmp
aas
aas
in
popa
cmp
cmc
loope
ljmp
adc
dec
sub
out
adc
jg
add
pusha
adc
pusha
and
pusha
xor
adc
jmp
pusha
push
pusha
pop
shlb
add
addl
int3
int3
int3
fldt
sbb
jne
adc
es
add
adc
xorb
cmp
cmp
repnz
test
push
dec
dec
dec
ljmp
insl
test
sub
add
add
pusha
and
pusha
xor
mov
push
push
fiadds
push
pusha
pop
pusha
arpl
imul
add
xchg
dec
add
sub
rol
in
in
dec
sub
mov
sahf
jnp
add
add
cmp
cmp
sbb
addr16
cmp
icebp
fiaddl
mov
or
sti
adc
jle
add
loop
ljmp
push
jmp
addb
loope
arpl
shlb
add
and
and
pop
pop
pop
and
ret
idiv
lods
lods
lods
in
sub
sub
and
cmp
cmp
add
ss
cmp
gs
cmp
lock
pop
mov
add
cmp
dec
dec
dec
ljmp
imul
jp
jge
jge
and
add
pusha
xor
pusha
inc
pusha
dec
adc
xlat
pop
jmp
pop
pusha
arpl
pusha
jae
aas
sti
add
and
add
adc
fwait
fwait
fwait
mov
std
std
fdivrp
push
push
inc
pop
adc
sbb
insl
and
xor
add
add
dec
ret
add
fisubs
cmp
out
roll
mov
cmp
call
add
add
pusha
xor
addb
adc
aam
jmp
cmp
adc
inc
sti
adc
pop
and
add
add
adc
lahf
incl
sbb
jmp
ljmp
xor
cmpsb
inc
pop
adc
pop
pop
cltd
add
daa
or
sti
adc
dec
scas
pop
cmp
in
rorb
inc
movsl
sbb
cmp
ss
pop
ljmp
imul
fildl
xor
add
pusha
inc
pusha
dec
pusha
push
adc
inc
pop
push
in
rorl
jmp
cmp
and
pusha
add
pop
and
add
adc
inc
pop
adc
movhlps
mov
dec
sub
jg
sbb
dec
inc
add
sbb
add
add
push
das
inc
mov
cmp
ljmp
sbb
inc
jmp
pushl
ja
jecxz
add
add
pusha
dec
pusha
push
pusha
pop
adc
cmpsb
sbb
jnp
add
xor
add
repz
add
bound
sbb
pop
pop
pop
js
stc
stc
cld
out
adc
adc
add
add
pop
adc
inc
add
sbb
add
add
loope
adc
pop
push
cmp
inc
test
sbbl
jbe
jbe
movl
inc
pusha
dec
pusha
push
pusha
pop
pusha
arpl
push
call
push
cmp
pusha
mov
rcrb
add
or
add
data16
in
in
in
pushl
jo
in
push
push
push
xchg
inc
pop
jnp
gs
cs
inc
mov
add
cmp
cmp
aaa
aaa
aaa
pop
push
cmp
inc
cmpsl
adc
jns
pop
jmp
pushl
jne
mov
sub
add
pusha
pop
pusha
arpl
pop
test
jmp
lds
jmp
pusha
mov
pusha
fwait
add
movl
popf
push
inc
sti
adc
ljmp
movlhps
leave
leave
call
adc
inc
sbb
jo
and
and
bound
sub
add
add
sub
push
cmp
dec
cmpsl
adc
cmp
and
cmp
add
xchg
xchg
pusha
fcmovnbe
sbb
orb
das
add
loop
pusha
imul
add
in
or
pusha
mov
xor
xor
pusha
fwait
shl
sub
add
or
adc
loopne
loopne
bound
out
adc
adc
sub
sub
adc
adc
add
mov
daa
pusha
pop
loopne
and
ja
or
sub
adc
add
rclb
cmp
dec
popa
sti
inc
mov
cltd
adc
jae
mov
add
sbb
or
cli
cmc
add
or
add
pusha
imul
jnp
lret
jmp
mov
pusha
fwait
inc
mov
sub
add
pop
push
pop
adc
aad
aad
bound
out
sbb
xchg
loopne
pop
adc
add
imul
mov
jnp
pusha
add
loop
sub
add
pop
popa
sti
adc
inc
pop
sbb
push
dec
cmp
dec
cmpsl
adc
sub
add
cltd
push
push
inc
sti
adc
std
clc
mov
add
repz
add
pusha
jnp
adcl
inc
mov
push
dec
addb
into
inc
stos
adc
lret
pop
and
add
adc
mov
aad
add
adc
lret
cmovne
adc
dec
aaa
adc
inc
sub
aaa
adc
inc
add
lahf
and
and
push
adc
dec
addr16
dec
dec
ds
fidivl
adc
jmp
pushl
jb
cmpsl
cmp
add
fwait
cwtl
inc
notl
jmp
repz
cli
inc
add
sti
inc
add
stc
add
std
inc
movhlps
jmp
andb
and
pusha
jae
jnp
adcl
inc
mov
int
adc
cmp
lret
adc
sarb
add
adc
mov
mov
loop
movlpd
xchg
jnp
dec
dec
adc
sbb
sub
dec
inc
add
push
scas
insb
and
jbe
or
add
fs
adc
inc
das
adc
pop
sbb
dec
inc
notrack
stos
ud0
cmpsl
adc
adc
xchg
pop
jmp
pusha
pushl
jno
lahf
cmp
add
icebp
out
notl
repnz
sti
inc
jmp
incl
adc
inc
sti
addb
pop
fs
sbb
add
icebp
call
push
add
push
add
pusha
andl
cmp
push
xlat
lods
push
decl
bound
adc
pop
xor
add
add
movups
sub
add
in
in
in
xchg
adc
adc
dec
lret
dec
pop
outsb
sub
movsl
jp
aaa
inc
add
and
and
bound
outsb
cmp
cmovno
pop
and
sub
ret
dec
inc
cmp
shlb
jno
lcall
pop
insb
imul
xchg
xchg
push
out
jecxz
sti
lock
sti
inc
jecxz
push
inc
repz
incl
loope
pusha
punpckldq
adc
inc
pop
adc
in
inc
xor
push
add
pop
add
bound
pusha
xchg
add
aas
cmp
call
test
call
test
decl
cmp
ret
inc
ret
push
add
adc
inc
notl
lea
loopne
movlpd
lret
lret
xchg
outsl
pop
inc
cmp
sub
sub
imul
adc
lods
xor
sbb
add
sub
sub
roll
inc
fwait
adc
into
mov
xor
adc
pop
pop
pop
lahf
scas
adc
cmp
xchg
push
in
loopne
sti
out
inc
sti
arpl
adc
inc
jmp
incl
loopne
movupd
inc
add
repz
add
out
add
out
loop
call
add
pusha
mov
pop
pop
pop
jp
add
inc
cmp
call
cmpsl
ud0
mov
ljmp
or
pop
sub
adc
inc
and
xchg
sub
add
cld
cld
cld
xchg
adc
insl
push
push
pop
pop
pop
fcoml
adc
and
push
adc
inc
sti
add
ds
adc
leave
pushf
or
lahf
xchg
push
pop
pop
pop
ljmp
xchg
xchg
popa
xorl
add
xchg
mov
in
fisttpll
cli
ljmp
popa
incl
popa
out
addb
add
popa
call
hlt
dec
or
icebp
dec
pop
adc
fisttps
addb
add
add
and
and
bound
call
cmpsb
push
dec
sahf
adc
inc
inc
decl
adc
pop
sub
push
pusha
out
adc
popa
popa
popa
adcl
insb
pop
adc
dec
addb
inc
adc
push
dec
adc
sbb
sbb
xor
ljmp
xchg
or
cmp
repz
push
push
push
xchg
mov
gs
jg
pop
sub
add
add
mov
jmp
or
stc
out
std
inc
lret
adc
lock
fildll
incl
add
loopne
pusha
adc
inc
jmp
bound
sbb
ljmp
nop
inc
dec
sub
add
add
jle
dec
jmp
dec
sub
inc
ds
fsubs
adc
inc
inc
cmp
mov
add
sub
add
add
add
push
dec
dec
dec
outsl
hlt
hlt
hlt
cli
sub
add
movlhps
int3
int3
call
insl
pop
push
pop
pop
sti
xor
das
decl
or
xchg
cmp
sub
and
jnp
popa
imul
jnp
or
nopl
or
clc
in
cld
jmp
inc
shl
incl
and
add
pusha
pop
inc
daa
pusha
das
adc
inc
aaa
adc
inc
aas
push
jmp
mov
imul
add
pusha
jg
fwait
mov
inc
aas
xor
fisubl
adc
inc
aas
cmp
mov
inc
inc
sysret
xor
add
or
and
pop
inc
notl
cmc
popa
sti
sub
add
adc
pop
imul
popa
dec
jmp
push
sbb
sbb
sbb
adc
fs
mov
push
popa
outsl
sub
add
in
or
mul
add
sti
out
sti
adc
inc
lret
inc
call
jmp
call
repz
pop
sub
add
pop
sar
out
inc
add
adc
in
jmp
inc
dec
adc
add
add
bound
and
inc
aas
xor
fisubs
inc
adc
stos
inc
or
pop
sub
sub
add
adc
dec
lret
adc
jecxz
jecxz
sub
add
movlps
imul
and
push
mov
pop
jno
sub
add
sbb
or
repnz
stc
loope
iret
adc
inc
loope
adc
inc
add
icebp
daa
add
sub
add
add
pusha
pop
inc
daa
loope
add
std
jmp
sti
out
push
loope
jmp
rorl
mov
popa
jecxz
add
bound
push
pop
sbb
dec
inc
xor
loope
or
mov
adc
or
xor
add
or
and
inc
fcomp
fsub
sub
add
adc
int
mov
bound
jmp
push
insl
dec
lahf
mov
sub
add
sbb
mov
add
repz
adc
dec
adc
arpl
mov
add
pop
add
add
popa
sti
daa
incl
adc
inc
cmp
std
call
add
cmc
fiadds
jmp
into
or
test
add
fs
bound
xor
dec
inc
xor
in
or
mov
pop
addb
and
and
add
adc
push
push
push
aaa
inc
sti
adc
sub
add
sti
sti
sti
addb
dec
mov
push
pop
and
or
push
push
push
and
jno
push
dec
mov
faddp
add
call
add
hlt
fldl
clc
jecxz
cli
inc
add
cld
inc
add
adc
popa
iret
in
loopne
loop
sub
add
and
inc
dec
fs
sbb
fiaddl
jmp
lret
cmpl
jecxz
add
xchg
push
push
jp
adc
dec
inc
inc
add
mov
sbb
cmp
cmp
inc
pop
adc
add
push
lret
adc
loopne
bound
jb
pcmpeqb
jmp
pusha
add
addr16
bound
jae
add
bound
mov
or
into
mov
fnstcw
add
call
xlat
add
repnz
add
mul
inc
pop
inc
add
cli
inc
pop
adc
popa
lret
inc
or
std
popa
loope
sub
add
sti
add
ljmp
adc
out
aas
inc
add
clc
inc
add
repz
add
ffreep
or
and
ret
cmpsw
adc
push
test
sbb
cs
sahf
or
mov
mov
and
arpl
add
add
and
adc
pop
pop
cltd
dec
and
test
and
cmc
fsubrl
add
movlps
add
arpl
sbb
xor
jmp
push
jmp
scas
add
sarb
add
ffreep
add
out
add
ljmp
push
loope
pop
inc
or
clc
call
adc
bound
addr16
pop
sub
add
loope
insb
aaa
loope
inc
cmp
std
in
push
inc
add
neg
add
icebp
roll
fadd
push
jle
pop
and
fwait
mov
xor
call
sub
ljmp
adc
inc
or
lcall
add
pusha
fists
adc
adc
movsl
jno
jmp
xchg
pop
call
ljmp
add
cli
cli
cli
sub
add
sbb
pop
pusha
add
adc
lcall
lcall
add
xorb
shlb
call
mov
add
loope
add
out
add
jmp
add
lock
push
inc
movups
inc
or
stc
inc
iret
sub
add
pop
sub
inc
daa
incl
inc
xor
loop
add
fimuls
adc
add
lock
mov
pop
and
mov
ss
lret
mov
jmp
bound
adc
push
xor
add
xchg
pusha
out
sbb
xchg
pop
call
sub
fbld
ja
adc
add
insb
pop
adc
jmp
sbb
lcall
jmp
add
popf
mov
dec
mov
call
mov
inc
pop
pop
leave
add
jecxz
add
call
inc
or
icebp
loopne
pop
adc
inc
pop
inc
iret
adc
bound
inc
pop
and
pusha
add
adc
push
popa
ljmp
jecxz
push
adc
dec
or
fisttpl
sbb
add
out
int3
add
aad
adc
adc
jecxz
add
insb
adc
lret
pusha
repz
sub
jmp
outsb
mov
push
xchg
popa
and
sub
sub
add
adc
sbb
sbb
sahf
imul
adc
pop
and
icebp
sub
add
push
aas
adc
div
testb
addb
arpl
imul
pop
push
add
jbe
add
mov
add
int3
mov
add
xlat
inc
or
fldl
in
or
fadds
in
dec
pop
adc
dec
pop
adc
inc
iret
adc
inc
fistl
cli
fs
sbb
mull
popa
sti
arpl
popa
incl
arpl
cmp
dec
or
xlat
dec
nop
add
in
enter
mov
jns
pop
and
adc
pusha
repz
or
sbb
jmp
imul
sub
incb
adc
push
and
add
sti
adc
lcall
call
sub
jno
popa
sti
popa
sbb
adc
sub
add
add
movd
adc
pop
add
pop
inc
adc
sbb
popa
push
add
mov
add
int
or
roll
fmul
add
fimuls
adc
aad
pop
adc
add
out
fisttps
inc
adc
adc
inc
fists
stc
inc
out
pop
rolb
sti
add
sar
cld
daa
incl
adc
fmuls
inc
add
repnz
add
ljmp
pushl
pop
add
add
pusha
jecxz
repz
sti
popa
add
push
inc
or
jmp
addr16
sub
popa
xor
cmp
sub
sbb
sbb
bound
call
sub
mov
sub
add
push
repz
insb
pop
pcmpeqb
in
jecxz
pusha
add
pop
aas
lcall
sbb
bound
jmp
mov
pop
sbb
lds
fcmove
add
loopne
add
in
adc
jmp
adc
pop
push
insb
sub
sti
insb
das
pusha
add
adc
imul
inc
dec
jmp
cmp
push
addr16
dec
imul
rorb
sbb
mov
adc
jne
pop
sub
add
pusha
sti
popa
add
adc
adc
ljmp
add
inc
cmp
sti
pop
lret
adc
xchg
pop
inc
sti
adc
inc
sub
adc
dec
dec
dec
fwait
das
imul
add
addl
add
clc
clc
clc
and
adc
into
into
subb
add
loopne
popa
arpl
adc
pop
lcall
and
pop
push
add
xorb
mov
mov
add
aad
and
fildl
adc
inc
adc
out
sub
ljmp
inc
out
daa
outsb
aaa
inc
sti
jbe
adc
popa
sti
dec
incl
jmp
adc
inc
call
clc
rorl
adc
push
ja
les
in
add
pushl
xor
pusha
sti
popa
add
arpl
adc
push
inc
sbb
ljmp
xor
adc
add
scas
adc
pop
pop
pop
jge
repz
cld
mov
in
xchg
lcall
daa
ljmp
sub
ret
adc
xchg
mov
add
xchg
and
push
loope
loope
mov
jecxz
sub
sbb
dec
lcall
push
jmp
lcall
mov
dec
mov
dec
and
adc
into
ret
sbb
repz
out
cmc
inc
jmp
clc
inc
add
adc
inc
pop
insl
sti
adc
arpl
dec
incl
add
aad
add
rolb
add
movl
jmp
mov
inc
mov
pop
cmp
popa
or
popa
sbb
pop
inc
and
in
xchg
decl
adc
inc
inc
and
push
and
and
loope
adc
sbb
xchg
in
addl
mov
inc
xor
imul
jg
xor
add
outsl
push
inc
xchg
push
jmp
scas
pop
push
in
shlb
out
and
loopne
add
bound
lcall
das
lcall
add
je
add
mov
add
mov
add
rol
add
sbb
fmul
add
loop
add
out
xlat
adc
dec
fists
out
inc
out
repz
or
cmc
inc
repz
adc
imul
add
inc
pop
call
stc
sar
clc
push
ja
test
or
mov
push
inc
popf
adc
ret
cmp
add
popa
adc
popa
and
pop
inc
es
in
test
decl
bound
adc
rcrl
add
cmp
popa
sti
sbb
addl
xor
pusha
repz
add
push
insl
addr16
mov
mov
add
push
jmp
popw
pusha
add
pop
dec
iret
iret
decl
dec
imul
add
pop
pop
push
lcall
pop
lcall
add
mov
inc
pop
adc
add
rolb
adc
inc
pop
adc
into
inc
pop
inc
rcll
out
fistl
jmp
jecxz
out
inc
jmp
repnz
repz
inc
add
mull
inc
notl
clc
inc
pop
adc
inc
pop
adc
shll
call
test
push
pop
add
mov
add
inc
cwtl
adc
cmp
popa
sbb
popa
sub
pop
inc
xor
test
add
sti
popa
push
popa
pop
shll
add
pusha
xchg
adc
adc
adc
push
fistps
sti
jg
and
out
jle
jmp
and
mov
pop
pop
pop
cltd
lret
sub
sbb
mov
popf
or
out
inc
sti
sbb
add
hlt
mov
mov
testl
cmc
cmc
cmc
addb
loop
loop
punpckhdq
popa
push
pusha
add
loopne
imul
pop
dec
pop
sbb
bound
jmp
mov
dec
inc
pop
adc
push
aas
adc
bound
adc
add
fmulp
inc
pop
push
dec
adc
inc
jecxz
jmp
out
out
inc
pop
adc
insl
repz
add
testb
testl
testl
adc
inc
call
cmc
inc
incl
push
repz
add
out
add
mov
push
cmp
popa
and
popa
xor
pop
inc
and
in
jg
jmp
popa
push
inc
pop
adc
arpl
imul
add
adc
adc
adc
iret
sbb
jns
and
out
jl
jmp
sti
and
xor
mov
add
imul
xlat
push
sbb
jmp
add
lock
add
repz
pop
adc
push
push
loope
sub
loopne
out
je
loope
pusha
add
loopne
sbb
push
call
and
pop
dec
pop
sbb
pushl
bound
inc
pop
adc
inc
pop
adc
ret
adc
inc
pop
inc
adc
jecxz
inc
pop
inc
pop
adc
inc
out
adc
inc
add
icebp
inc
add
repz
sbb
hlt
inc
sti
adc
inc
sti
adc
inc
sti
adc
inc
call
cmc
ret
inc
add
adc
mov
mov
jmp
stos
push
call
mov
pop
ljmp
push
cmp
popa
sub
popa
cmp
inc
and
out
inc
dec
adc
and
adc
adc
adc
or
add
and
adc
adc
push
jb
and
out
jns
jmp
mov
sub
sub
and
jge
popa
outsl
loope
xor
add
adc
push
pushl
xchg
or
loopne
push
jmp
test
call
mov
push
adc
inc
add
fisttpll
pop
pusha
add
movlpd
imul
add
stos
and
push
push
inc
inc
pop
pop
or
call
mov
pop
pop
dec
adc
mov
adc
fld
inc
pop
adc
inc
pop
inc
pop
adc
inc
movups
lret
inc
pop
adc
inc
jmp
add
repnz
sti
adc
inc
sti
gs
adc
roll
mov
mov
pop
inc
mov
call
push
out
push
mov
pop
ljmp
push
cmp
popa
xor
popa
inc
popa
dec
adc
jne
addb
cli
arpl
jae
add
jnp
adc
adc
adc
sbb
outsb
inc
and
icebp
js
jmp
and
out
es
lahf
jl
popa
sub
xor
add
adc
scas
jle
call
mov
fstl
add
sti
adc
add
icebp
lods
inc
push
adc
inc
pop
adc
inc
add
rolb
fnstenv
sti
add
add
punpcklwd
pusha
add
loopne
gs
pop
pop
push
call
sub
sbb
ljmp
add
stos
popf
add
mov
or
enter
into
inc
or
roll
adc
inc
pop
adc
roll
ret
out
out
adc
lds
inc
pop
adc
inc
movups
inc
sti
adc
arpl
adc
lock
mov
in
inc
call
out
dec
or
push
call
xchg
or
mov
sbb
gs
mov
popa
xor
and
popa
dec
adc
push
adc
inc
pop
adc
and
adc
inc
outsl
adc
jnp
aaa
add
cmp
pop
inc
sbb
push
and
icebp
jne
ljmp
and
out
and
imul
xor
add
pop
push
ljmp
mov
ficoml
sbb
cltd
push
ljmp
inc
adc
add
repnz
inc
incl
repz
notl
mov
adc
inc
jae
repz
inc
notl
repz
repnz
aas
je
repz
pop
test
add
push
push
inc
add
dec
push
push
inc
pop
add
xchg
pushl
lods
add
les
add
adc
call
inc
adcl
inc
xchg
fiadds
adc
inc
jmp
out
adc
inc
add
jmp
or
out
inc
adc
out
inc
sbb
out
inc
stos
adc
pop
xchg
adc
lods
inc
add
adc
movsb
add
dec
xchg
or
lods
sbbb
fs
push
cmp
jle
popa
dec
popa
push
adc
pop
popa
arpl
insl
inc
and
adc
punpcklbw
xor
add
sti
cmp
adc
mov
and
icebp
jae
ljmp
mov
jl
popa
sub
xor
add
sbb
push
jmp
test
fmuls
push
jmp
lcall
in
popa
call
add
lock
inc
add
adc
mov
add
repz
pop
adc
inc
imul
add
push
repz
cmc
repz
xor
icebp
icebp
and
rcl
incl
popa
out
loopne
outsl
pusha
add
pusha
add
sbb
xor
push
dec
push
jmp
add
pushf
mov
mov
cmpsl
add
les
adc
inc
adc
inc
xchg
adc
dec
xchg
adc
inc
xchg
adc
inc
add
in
add
call
inc
notl
jmp
inc
call
mov
add
call
out
lret
push
loope
push
fcoms
or
stos
jnp
cmp
pop
add
popa
dec
popa
push
adc
es
adc
sbb
adc
arpl
mov
daa
add
and
cmp
or
or
push
scas
sbb
popa
inc
and
lock
ljmp
sbbb
arpl
arpl
sbb
push
jmp
jg
call
mov
ficoms
add
adc
dec
inc
adc
inc
add
lock
inc
pop
inc
push
adc
mov
cmovs
adc
inc
jae
repz
jae
ja
sarl
push
icebp
in
incl
adc
lock
imul
arpl
add
add
adc
dec
call
push
lcall
add
ja
add
lods
xchg
add
mov
mov
add
enter
into
test
pop
inc
adc
lods
add
faddl
adc
inc
cmpsl
adc
inc
pop
adc
inc
add
call
mov
call
roll
adc
cwtl
push
call
xchg
or
movb
jmp
push
cmp
popa
push
popa
pop
popa
arpl
inc
and
icebp
inc
jae
fs
and
adc
or
inc
add
add
and
cmp
adc
sti
adc
inc
sti
adc
xchg
adc
shrl
and
jge,pn
arpl
pop
xor
add
sbb
push
lcall
jnp
call
orl
fisttpl
push
jmp
loope
adc
add
in
mov
adc
inc
add
out
inc
add
out
inc
push
adc
inc
add
icebp
inc
pop
adc
mov
adc
inc
pop
adc
popw
inc
xchg
repz
cs
sub
fldt
incl
jecxz
loope
adc
out
out
addb
mov
push
and
repz
loopne
popa
jae
add
adc
cmp
push
dec
or
pop
push
add
mov
pushl
pushf
inc
movups
inc
pop
inc
adc
int
cmpsl
adc
movsb
add
xlat
inc
scas
adc
inc
mov
fiadds
adc
inc
add
in
movups
inc
sti
adc
mov
inc
fildl
adc
xchg
pop
call
mov
inc
orb
mov
pop
push
cmp
popa
pop
popa
arpl
sbb
push
push
outsl
add
pop
cmp
arpl
xor
or
or
outsl
sbb
push
cmp
repnz
add
je
sti
and
jl,pn
gs
sub
xor
add
adc
pop
push
lcall
jbe
dec
jg
call
xchg
fistps
sbb
out
add
ljmp
jmp
inc
pop
inc
inc
adc
inc
add
out
inc
dec
adc
inc
add
out
inc
pop
adc
dec
pop
bound
adc
mov
inc
pop
adc
inc
pop
push
icebp
int3
and
repnz
iret
xor
add
sti
adc
out
out
mov
pusha
add
rcl
shlb
xorl
pop
loope
jg
loopne
popa
jae
add
adc
dec
decl
call
add
imul
mov
xchg
add
mov
inc
pop
add
ret
inc
lcall
rcrb
add
fstps
ret
adc
inc
lret
adc
pusha
add
fwait
add
fstl
or
int
or
mov
outsb
sbb
pop
pop
push
cmp
popa
arpl
popa
jae
jno
add
outsb
add
pop
inc
mov
inc
add
xor
pop
jecxz
adc
fwait
pop
icebp
push
cmp
out
imul
inc
sbb
and
and
jecxz
jl
gs
sub
xor
add
adc
push
push
call
jb
dec
jp
call
orb
fistl
adc
sar
in
add
adc
inc
add
call
inc
add
jmp
dec
adc
inc
dec
adc
inc
pop
adc
inc
add
in
inc
add
in
inc
add
out
inc
add
out
mov
inc
adc
roll
unpcklps
enter
push
sub
sti
add
sti
add
pusha
add
punpckhbw
mov
add
pusha
fneni(8087
add
adc
dec
inc
adc
pop
dec
add
jg
add
lods
mov
pushl
inc
pop
add
xchg
add
rcll
dec
xchg
add
iret
xchg
add
roll
adc
cwtl
add
fiaddl
adc
xchg
inc
sti
inc
fistps
fcoml
push
call
inc
repz
orl
lcall
inc
sbb
add
and
push
popa
jnp
je
sbb
adc
and
aaa
adc
add
add
cmp
dec
mov
lock
sti
adc
jge
mov
pop
ret
gs
out
xor
add
xchg
popa
pop
pushl
inc
negl
jl
call
addl
fistps
adc
lea
adc
inc
add
in
sub
out
add
out
pop
adc
mov
adc
movsl
add
jmp
inc
pop
adc
inc
add
jmp
or
jmp
imul
jmp
outsl
adc
inc
or
jmp
pop
adc
rolb
lds
out
in
sub
add
add
pusha
add
ljmp
mov
and
repz
dec
dec
dec
and
addb
inc
das
call
push
jmp
push
xor
add
mov
inc
pop
add
mov
pushl
mov
inc
lea
inc
mov
dec
popl
int
add
roll
adc
inc
add
xlat
pusha
add
adc
inc
out
adc
mov
dec
inc
sti
sbb
jl
pushl
gs
add
pusha
andl
and
and
jp
xchg
out
inc
xchg
adc
add
icebp
add
add
and
sbb
push
cmp
in
imul
mov
jl
sub
aas
or
add
add
push
push
dec
decl
ud0
ja
call
jl
call
addb
fiaddl
adc
inc
add
fisttps
inc
daa
inc
add
loop
inc
or
cltd
pop
dec
inc
pop
adc
inc
pop
xchg
inc
adc
dec
dec
adc
dec
movups
inc
or
out
pop
adc
inc
pop
adc
dec
pop
adc
inc
movups
inc
movups
jne
inc
adc
in
or
jmp
mov
add
jmp
loope
pusha
add
jle
pusha
shl
jmp
jecxz
add
add
inc
inc
decl
sbb
push
inc
add
jo
add
mov
addl
mov
add
mov
add
test
mov
mov
movb
lret
mov
call
mov
inc
out
adc
test
call
inc
lcall
lret
jge
mov
inc
pop
adc
pusha
push
call
sub
add
pusha
andl
mov
inc
fwait
adc
and
adc
inc
mov
mov
add
notl
dec
inc
notl
in
push
inc
sti
adc
addl
jp
addr16
jmp
add
push
push
dec
incl
bound
mov
jno
dec
ja
call
jnp
call
jle
addb
fadds
pop
adc
inc
add
fildl
fmull
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
inc
adc
inc
movups
dec
push
adc
inc
movups
dec
sbb
fiadds
fiadds
fimuls
adc
dec
jg
fmull
adc
inc
pop
adc
inc
adc
fdivl
mov
incl
xor
add
call
out
addb
pop
and
jnp
xchg
pusha
add
xor
decl
or
pop
inc
pop
adc
bound
ljmp
lods
jge
pushl
jle
mov
addb
pop
or
les
adc
pop
xlat
adc
addb
int
sti
adc
jg
dec
inc
pop
adc
inc
nop/reserved
push
daa
popa
xor
add
pusha
jg
mov
arpl
call
arpl
inc
add
add
cmp
dec
inc
inc
adc
jmp
inc
sti
adc
and
sub
addr16
xor
add
sbb
dec
incl
pop
adc
mov
or
inc
outsl
or
lret
call
ja
call
jp
add
jl
cmovno
adc
inc
adc
rcrl
roll
adc
mov
adc
inc
or
aam
adc
aad
sbb
aad
push
adc
inc
dec
adc
inc
sbb
aam
movups
inc
movups
inc
movups
dec
sub
shrl
dec
sub
rorb
adc
inc
pop
adc
dec
xor
rolb
adc
inc
sub
fmul
js
sti
add
call
out
out
add
adc
popa
jmp
cmp
add
push
inc
decl
and
push
cmp
jmp
call
ja
ljmp
inc
add
js
pushl
inc
add
mov
jp
inc
inc
pop
adc
inc
call
jns
inc
movlps
mov
imul
test
cmpl
andl
xchg
popa
fwait
adc
inc
sbb
call
inc
mov
mov
popa
lret
add
add
and
pop
adc
sbb
dec
ss
out
push
incl
and
and
daa
or
add
add
push
dec
dec
jge
and
lahf
pop
adc
scas
pusha
push
mov
imul
repz
add
pop
inc
je
call
js
dec
movlps
dec
jge
add
jle
dec
inc
daa
adc
addl
test
adc
add
lret
dec
lea
inc
push
adc
xchg
inc
add
xchg
add
enter
enter
xchg
inc
add
add
cltd
inc
add
adc
fwait
inc
add
adc
dec
mov
ret
pusha
add
mov
ljmp
notl
in
in
jecxz
jecxz
pop
adc
rcl
and
idivl
add
adc
decl
adc
push
cmp
pushl
add
mov
jno
ljmp
jb
ljmp
jae
pushl
inc
add
mov
jae
inc
inc
movups
insb
or
scas
pushw
jmp
inc
aaa
adc
dec
cmp
and
popa
mov
xorl
and
and
pop
adc
dec
pop
sbb
dec
xor
jmp
pushw
decl
xor
stos
sub
sti
dec
imul
add
adc
jns
and
lcall
pushl
fs
mov
push
pop
mov
insl
inc
add
push
mov
movups
add
jbe
add
adc
jl
add
adc
addb
addl
test
adc
adc
inc
pop
adc
mov
mov
dec
jae
mov
inc
add
xchg
add
mov
pusha
add
adc
mov
ljmp
repz
in
cmp
cmp
jg
fwait
add
add
add
cmp
pop
lcall
add
mov
jmp
inc
add
cmpsb
inc
add
imul
lods
inc
add
insb
pop
pushl
inc
add
mov
imul
mov
or
test
inc
aaa
adc
and
adc
jecxz
outsl
add
popa
fwait
arpl
inc
pop
jmp
inc
add
dec
xor
call
fs
cmp
adc
jmp
inc
sti
adc
add
movaps
or
add
add
dec
dec
dec
pushl
and
jmp
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
pop
pushl
addr16
add
adc
mov
inc
add
outsb
push
pushl
jno
pop
adc
add
add
jbe
add
adc
jnp
pushl
inc
pop
adc
addl
inc
pop
adc
xchg
mov
inc
add
mov
daa
add
push
mov
in
xor
jp
outsb
sbb
pusha
or
mov
sub
popa
or
inc
incl
sbb
dec
xor
jmp
add
xchg
pusha
add
jmp
gs
jmp
popw
ljmp
inc
adc
or
mov
inc
pop
inc
daa
adc
aaa
adc
adc
push
adcl
mov
ja
popa
fwait
pusha
ja
stos
popa
mov
mov
adc
inc
ret
adc
and
add
out
sti
adc
dec
rcll
filds
adc
and
outsl
sub
or
dec
dec
dec
pop
mov
dec
adc
mov
pop
push
ljmp
pop
pop
notl
pop
or
stos
inc
add
test
or
cmpsb
pop
pop
jmp
pop
pusha
add
adc
push
jmp
ja
cmpsl
add
inc
ret
adc
das
adc
outsl
inc
aaa
adc
pop
inc
movups
pop
pop
adc
adc
test
adc
test
adc
test
daa
adc
inc
pop
adc
inc
sbb
cmpsl
inc
sbb
addb
cmpsl
dec
xchg
adc
rolb
mov
xor
loop
aad
sti
loope
xor
add
add
punpcklqdq
popa
or
cmp
add
decl
or
js
add
adc
inc
add
mov
popa
add
pusha
pop
inc
repz
pop
inc
add
lods
inc
sub
push
stos
pop
or
movsl
pop
or
call
dec
and
dec
dec
inc
and
xchg
and
popa
mov
add
inc
inc
roll
adc
popa
jecxz
add
and
pop
adc
inc
xor
frstor
cltd
dec
inc
sti
adc
and
xchg
sub
push
xor
or
inc
lahf
adc
inc
and
push
sahf
push
adc
test
pop
or
inc
pop
add
or
test
or
mov
push
or
popf
push
pop
lcall
inc
add
pop
inc
add
pop
inc
unpcklps
lcall
pusha
push
lcall
arpl
adc
xlat
adc
dec
push
adc
adc
jb
or
adc
ja
push
adc
jmp
dec
push
sbb
jne
call
inc
push
adc
jl
push
pushl
push
ljmp
add
call
ror
xor
add
and
push
loopne
push
fstp
cmpsb
cmpsb
cmpsb
and
add
add
adc
incl
sbb
pop
cmp
xchg
call
sti
adc
or
adc
jmp
inc
daa
add
movsb
pop
or
mov
push
push
lcall
dec
adc
adc
decl
inc
cmp
popa
mov
mov
dec
adc
fiadds
arpl
inc
xlat
adc
inc
add
mov
pop
push
inc
add
fildl
adc
adc
and
pop
in
pop
xor
add
dec
inc
inc
ljmp
decl
adc
cmpsl
push
adc
lods
push
inc
sti
adc
inc
pop
inc
iret
inc
add
mov
push
or
cltd
push
or
adc
call
inc
add
push
inc
add
adc
pop
push
lcall
inc
or
adc
popa
add
adc
or
xchg
inc
or
mov
adc
inc
cmp
jl
aas
adc
inc
adc
push
inc
inc
pop
pop
inc
add
call
add
push
ds
push
loopne
adc
mov
or
push
inc
adc
push
inc
sbb
outsb
gs
pop
adc
rolb
popa
notl
faddl
mov
es
jecxz
daa
loopne
popa
jnp
add
add
inc
xor
dec
sub
ljmp
inc
lret
adc
call
push
inc
adc
adc
push
or
pushf
inc
add
sbb
push
or
call
dec
adc
imul
inc
inc
cmp
pusha
mov
adc
and
inc
iret
adc
faddl
adc
das
and
adc
inc
repz
popa
and
sub
adc
inc
sti
and
jp
push
cmp
push
inc
add
dec
dec
sti
adc
es
outsl
adc
repz
ljmp
push
ljmp
adc
jmp
push
or
lcall
inc
pop
adc
call
dec
pop
incl
orl
pushl
add
ljmp
add
adc
pop
cmp
adc
add
add
add
add
addb
aaa
inc
add
sbb
push
decl
decl
decl
sbb
push
inc
and
push
dec
sub
call
cmp
pop
push
inc
lcall
jmp
and
das
sub
and
push
and
sbb
mov
aam
incl
loope
adc
fcmovnu
addb
fcmovu
fiaddl
aas
popa
outsl
jge
pusha
add
add
sbb
sub
inc
sub
decl
push
inc
adc
mov
adc
dec
or
xchg
inc
add
xchg
push
or
xchg
dec
or
cltd
push
or
add
or
call
adc
imul
dec
inc
inc
cmp
pop
and
inc
adc
and
lcall
jnp
xor
adc
jns
add
xchg
jne
sbb
mov
inc
daa
and
and
dec
dec
dec
cmp
or
inc
inc
xchg
inc
incl
inc
arpl
mov
push
inc
notl
push
inc
sti
inc
call
scas
inc
sti
sbb
xchg
ljmp
pop
jmp
adc
adc
add
decl
add
inc
daa
add
inc
sub
inc
add
sbb
sub
incl
or
inc
das
or
incl
sbb
dec
cmp
decl
sub
sbb
inc
inc
xor
dec
inc
cmp
inc
decl
addr16
clc
jnp
sub
and
inc
and
and
xor
sbb
and
xor
xor
add
outsl
inc
and
and
sub
adc
xchg
xchg
and
fs
rol
xchg
popa
notl
flds
fadds
test
test
stos
and
and
add
inc
xchg
pop
sbb
inc
daa
add
iret
adc
dec
or
add
decl
dec
or
xchg
dec
or
xchg
dec
or
xchg
dec
or
decl
adc
jmp
and
add
popa
lret
popa
shll
adc
inc
sbb
adc
pop
adc
pusha
or
imul
jmp
and
pusha
lahf
cmp
sbb
daa
incl
dec
adc
notl
stos
push
sar
add
inc
lcall
mov
aas
ud0
adc
push
sbb
call
das
call
xor
dec
push
aas
push
dec
inc
cmp
dec
inc
aas
dec
aas
mov
push
out
icebp
arpl
out
xchg
loop
cld
jg
jnp
and
and
sub
sub
add
and
loop
jno
and
dec
and
dec
xor
push
jo
and
das
adc
test
punpckldq
orps
add
sub
add
lahf
adc
lret
pop
pop
sub
incl
add
adc
sbb
decl
dec
or
xchg
bound
inc
call
cwtl
inc
add
xchg
inc
pop
adc
dec
adc
addb
fs
incl
inc
cmp
popa
shll
popa
jecxz
imul
incl
adc
and
push
jnp
pusha
fwait
pusha
xchg
cmp
add
inc
lcall
jnp
sbb
mov
arpl
pop
push
adc
cmpsb
push
ud0
inc
sti
bound
adc
add
test
mov
jae
andl
lahf
arpl
aas
jb
outsb
jmp
pusha
ret
and
bound
out
mov
mov
xchg
add
add
add
in
and
cmp
dec
sub
add
and
add
pop
sub
adc
ret
ret
xchg
fs
gs
add
sub
add
add
inc
inc
sbb
xor
decl
push
pushl
mov
decl
inc
add
xchg
dec
inc
call
dec
push
lcall
dec
adc
push
adc
jp
pop
lcall
andl
scas
add
popa
adc
inc
jmp
incl
inc
call
xchg
sbb
pusha
mov
push
xor
cmp
and
inc
fwait
sbb
push
ud0
adc
add
test
pop
push
call
lods
mov
stc
div
mov
addps
xchg
xchg
xchg
addl
jmp
ret
loopne
bound
xor
add
pop
clc
xor
add
pop
out
loop
sub
push
loop
xor
add
ja
and
and
mov
sbb
adc
bound
inc
bound
iret
popa
push
xor
add
fildl
add
inc
aas
cmp
aas
sub
incl
add
incl
or
arpl
ud0
sbb
addb
push
adc
add
mov
pusha
jnp
das
push
push
sbb
adc
call
add
and
jp
dec
daa
bound
sub
sbb
push
or
aaa
sbb
pushl
adc
call
mov
adc
inc
add
adc
pop
adc
scas
pop
sbb
sbb
pushl
leave
mov
adc
pop
popa
sub
loop
loopne
xor
add
add
pop
sub
add
adc
sub
dec
sub
arpl
popa
out
adc
popa
jecxz
mov
mov
mov
push
popf
popf
popf
lcall
imul
cmp
adc
adc
cmp
pusha
xchg
mov
daa
add
sub
add
inc
cmp
incl
or
dec
es
fists
or
nop
dec
inc
call
dec
mov
imul
inc
add
js
adc
cmp
add
es
add
popa
jecxz
pop
inc
repz
and
add
inc
movups
jo
and
xor
add
xor
push
pop
sbb
incl
add
jge
adc
adc
lcall
inc
add
movsl
dec
scas
addb
push
dec
add
pop
adc
mov
sbb
mov
pop
notl
arpl
ljmp
mov
in
loopne
sub
dec
and
aas
jge
and
push
imul
adc
add
fucomip
lahf
sub
or
or
push
bound
xor
add
jecxz
out
adc
xlat
push
pusha
adc
mov
adc
and
mov
add
mov
mov
repz
sub
pusha
daa
and
fwait
pusha
ret
out
fistpl
inc
das
and
inc
and
jmp
or
xchg
dec
inc
incl
adc
inc
adc
inc
push
add
cs
adcl
daa
and
and
sbb
sbb
sbb
add
add
mov
and
add
sbb
bound
push
add
sbb
daa
pop
pushl
push
add
inc
inc
xchg
cmp
add
test
adc
repz
inc
sti
pusha
add
and
mov
and
mov
and
pop
push
out
push
pushl
inc
pop
push
int3
mov
jmp
out
cmp
out
and
daa
imul
addl
push
sub
or
add
and
insl
jmp
and
stos
lcall
and
insb
gs
and
jb
xchg
dec
pusha
sbb
popa
mov
sub
add
das
pusha
dec
adc
in
and
xor
adc
ret
add
add
or
imul
fwait
adc
dec
inc
jge
stos
adc
push
adc
jp
ud0
jae
xor
adc
daa
push
add
stos
add
popa
fistl
sbb
sbb
inc
jmp
pop
sub
pop
and
jae
cmp
sbb
jmp
push
sbb
xor
add
inc
sbb
push
sbb
jmp
bound
push
jecxz
and
pushl
adc
pushl
adc
inc
add
and
addr16
mov
pop
ljmp
outsl
sub
xlat
mov
imull
jmp
sub
xor
xchg
push
mov
mov
mov
pop
add
and
xor
repz
mov
mov
and
pop
gs
inc
ljmp
mov
jb
add
cmp
add
loop
bound
scas
sub
add
rol
cmp
add
sarb
jmp
mov
outsl
push
decl
arpl
push
add
xor
jae
xor
and
and
roll
adc
inc
jecxz
fwait
outsl
xor
pop
inc
or
add
inc
or
loopne
aaa
and
xor
add
push
xor
add
inc
sbb
dec
xchg
sbb
jmp
bound
ljmp
adc
inc
jmp
pushl
and
pushl
push
and
mov
and
mov
and
mov
and
sbb
mov
sarl
jecxz
loope
sub
sub
fbld
jne
arpl
dec
pop
popa
fbld
and
popa
lahf
popa
outsl
stos
addr16
mov
and
inc
sub
add
or
bound
pusha
xor
add
punpckldq
mov
add
add
push
add
mov
mov
mov
lcall
nop
je
stos
test
popf
insl
inc
lcall
adc
lcall
and
push
and
js
mov
aas
inc
addr16
xor
add
xor
and
and
lret
inc
rcll
loop
fistl
xor
repz
add
adc
adc
je
push
cmp
cmp
add
xor
sbb
ds
add
jbe
sbb
movsl
popa
sub
add
sub
scas
fs
mov
sub
daa
inc
add
daa
inc
notl
pushl
adc
or
imul
add
mov
inc
pop
adc
pop
pop
inc
cmp
push
ret
xchg
popa
in
jecxz
sub
add
sti
add
adc
les
scas
imul
add
cmp
inc
pusha
xor
add
bound
cmp
add
xchg
xchg
xchg
mov
xchg
lcall
mov
test
jle
jmp
sub
adc
ljmp
arpl
jmp
bound
adc
pusha
and
adc
jmp
pop
sub
je
lahf
adc
adc
add
and
push
popa
ret
inc
lret
adc
inc
roll
sub
adc
dec
and
enter
outsb
pop
add
add
sbb
sbb
cmp
add
outsl
cmp
ljmp
adc
pop
fistl
sub
mov
repz
add
push
mov
imul
insb
and
inc
add
mov
or
mov
or
mov
or
scas
insb
es
stos
test
repnz
jmp
sti
add
sub
xlat
daa
jge
jnp
outsb
imul
mov
fs
push
add
in
daa
hlt
cmp
add
sbb
insb
incl
jne
lcall
je
jmp
and
adc
addb
mov
inc
jecxz
insl
and
mov
and
mov
pusha
fists
ljmp
adc
lods
inc
add
lods
inc
pop
adc
gs
ljmp
push
sub
movsb
popa
sub
mov
aas
pop
cmp
push
push
xor
add
xor
sub
and
add
jno
dec
fistl
int3
inc
lret
and
cmp
add
push
push
push
mov
and
jae
pusha
pop
cmp
add
xor
sbb
cmp
add
imul
das
inc
xlat
adc
inc
add
sub
out
sub
mov
sub
mov
sub
mov
sub
adc
inc
notl
sub
mov
insl
inc
movups
or
outsb
inc
pop
adc
das
inc
add
mov
or
scas
inc
sub
mov
xor
inc
sti
adc
cmp
add
add
and
cmpsl
bound
imul
punpcklbw
popa
sub
jmp
ret
xor
lock
add
pop
pop
pop
jmp
ljmp
pushl
inc
jnp
cmp
sbbb
xchg
decl
dec
rcll
lcall
sbb
ljmp
outsl
and
mov
inc
fists
jno
rcll
jo
add
adc
outsl
and
pusha
add
mov
fists
mov
inc
and
push
pushl
push
cmp
sub
sbb
mov
cmp
cmp
adc
sbb
cmp
popa
stos
popa
mov
bsf
cmp
and
aas
adc
pop
sub
pop
and
cmp
add
xor
pop
cmp
add
bound
xor
adc
inc
jmp
pushl
imul
add
adc
inc
out
adc
inc
sti
pop
sub
mov
outsl
inc
movups
or
outsl
inc
sub
outsl
inc
daa
adc
inc
inc
or
push
mov
aam
xor
sub
sub
insb
inc
and
sub
add
xor
add
cmp
cmp
ss
incl
pop
push
jmp
pop
sbb
mov
inc
pop
add
mov
nop
pop
sbb
xchg
pop
sbb
cwtl
bound
adc
inc
stos
adc
jo
out
adc
out
jno
iret
inc
add
mov
pusha
add
jo
sti
inc
jmp
mov
sub
mov
notl
mov
inc
pop
adc
sub
adc
push
daa
add
mov
cmp
cmp
add
xor
pop
pushl
xor
popa
fwait
popa
mov
adc
inc
add
add
push
das
adc
loope
bound
add
add
ss
pushl
sbb
cmp
add
pop
xor
jmp
addr16
scas
push
pushl
imul
testl
mov
sub
mov
add
mov
subl
adc
and
push
les
faddl
and
pop
jge
in
aaa
jno
arpl
jg
sub
add
pop
adc
inc
add
cmp
decl
jle
sbb
mov
and
inc
add
lea
call
pop
push
pop
stos
push
and
lahf
gs
movsl
inc
xlat
adc
bound
jno
pushl
jb
roll
inc
add
mov
out
adc
insl
sub
sub
ljmp
push
xor
pop
xor
cmp
push
xor
or
xor
outsl
add
and
and
incb
repz
sub
xor
adc
adc
pop
pop
pop
std
xor
and
add
aaa
xor
or
aaa
inc
add
pushf
pusha
bound
adc
ljmp
adc
pushl
inc
notl
inc
add
mov
sub
inc
and
sub
add
sub
mov
jno
xor
adc
inc
or
mov
or
mov
and
scas
jno
dec
mov
jmp
out
sub
add
xlat
pusha
add
enter
adc
popa
repz
add
pop
add
add
cmp
js
sbb
mov
decl
pop
sbb
adc
adc
inc
add
and
lcall
jmp
fistl
mov
sub
inc
out
popa
repz
iret
adc
jo
inc
add
cs
pop
inc
pop
adc
das
pushl
imul
stos
push
lcall
xor
push
pop
inc
sti
adc
or
adc
add
sti
add
popa
fwait
adc
or
xchg
add
sti
add
add
and
adc
sbb
sbb
popa
pop
push
cmp
xor
pushl
sub
adc
imul
repz
inc
call
xor
mov
inc
add
insl
das
inc
pop
adc
inc
add
inc
pop
adc
jno
mov
adc
sub
mov
or
mov
or
lods
inc
daa
push
mov
inc
call
ret
lods
and
add
add
and
pshufd
out
jg
xor
add
and
inc
sub
sbb
xchg
decl
adc
adc
decl
adc
inc
add
and
pop
adc
jmp
inc
xlat
inc
fistl
mov
fistl
mov
popa
testl
or
pushl
adc
ljmp
sbb
pushf
bound
call
pushl
inc
aaa
adc
sbb
xor
pop
add
pusha
fwait
adc
push
push
sti
inc
fwait
and
jl
fbstp
bound
adc
popa
sbb
and
add
adc
adc
pop
add
dec
daa
or
xchg
pop
bound
adc
inc
add
xor
add
xor
adc
dec
or
xor
adc
inc
jmp
xor
adc
inc
out
adc
inc
notl
das
inc
repz
inc
jmp
inc
movlps
mov
inc
or
mov
add
mov
and
outsl
sub
lods
dec
cmp
mov
ror
add
sti
add
and
out
addr16
sub
add
add
incl
adc
push
sbb
and
dec
add
xchg
incl
push
and
mov
decl
pop
and
ret
adc
lcall
dec
repz
insb
cs
mov
adc
notl
mov
xor
adc
ljmp
adc
decl
pop
adc
push
adc
add
push
rcll
testl
and
and
jge
push
jbe
popa
sub
push
adc
inc
add
and
incl
iret
sbb
imul
dec
out
xor
mov
xor
pop
adc
inc
adc
xor
adc
inc
daa
adc
inc
jmp
xor
inc
add
jae
cmovo
adc
inc
adc
adc
or
mov
sub
inc
dec
adc
mov
flds
and
and
and
test
jne
sub
add
add
sbb
cs
incl
adc
arpl
and
pusha
add
incl
add
decl
pop
daa
call
fs
mov
dec
pop
adc
dec
mov
adc
inc
add
xor
mov
xor
call
and
notl
and
add
pusha
lahf
push
mov
iret
adc
xchg
add
sti
add
add
sbb
add
add
pop
pop
pop
ljmp
add
adc
ljmp
and
pushl
adc
add
ljmp
adc
inc
and
ss
add
ss
add
xor
inc
jecxz
xor
sub
xor
add
xor
inc
add
jae
add
je
mov
adc
je
pop
dec
inc
aaa
inc
pop
adc
inc
push
adc
cmp
lret
inc
notl
loope
incl
and
and
add
dec
push
jbe
jbe
popa
repz
add
addr16
xor
sub
sub
pop
cmp
incl
adc
push
and
mov
decl
sub
xchg
push
mov
jmp
dec
notl
test
adc
imul
nop
inc
pop
adc
and
pushl
popa
sti
adc
pop
andl
inc
add
arpl
jnp
in
inc
andl
xchg
add
jb
sub
xor
adc
and
pusha
xchg
cmp
add
adc
and
add
adc
push
sub
cmpsl
insb
cmp
lods
insb
cmp
scas
outsb
cmp
adc
inc
and
aaa
inc
fistl
pushl
adc
adc
adc
incl
adc
adc
jne
pop
inc
add
mov
movups
xor
scas
dec
cmp
stos
inc
outsl
push
mov
dec
call
ret
mov
testl
add
sti
adc
xlat
xlat
addb
pop
adc
aad
xchg
je
in
pop
sub
add
add
xor
sub
cmp
aaa
sbb
adcb
adcb
pop
adc
inc
pop
adc
dec
sbb
sub
pop
sub
xchg
pop
lcall
data16
sbb
jmp
sub
pushl
inc
sti
adc
and
aas
add
popa
arpl
push
iret
adc
add
iret
adc
adc
jb
popa
das
cmp
add
add
xor
adc
adc
push
fistl
incl
adc
inc
add
cmp
adc
inc
shll
cmp
mov
aaa
inc
repz
inc
jmp
add
jne
add
mov
inc
pop
adc
adc
adc
je
dec
inc
xor
scas
jb
inc
cmove
push
push
mov
ror
xor
add
sti
pusha
add
adc
sarl
sub
push
and
xor
pushl
xor
cmp
sbb
dec
xor
jl
and
incl
adc
inc
add
sub
adc
daa
adc
call
arpl
lcall
cmp
jle
sub
cmp
pop
adc
pop
mov
mull
inc
outsl
adc
inc
jae
aaa
jge
and
push
je
adc
das
add
add
adc
sub
cmp
add
ja
jmp
adc
ljmp
adc
pushl
adc
pushl
push
cmp
mov
cmp
mov
add
mov
inc
or
adc
pop
addb
pushl
jae
pushl
dec
inc
adc
jo
mov
xlat
aad
sti
add
ret
and
pop
and
movsl
xchg
sub
sub
sbb
xor
cmp
sbb
dec
xor
dec
pop
adc
jg
sub
sub
adcb
adc
pop
adc
push
daa
sbb
call
popa
cmp
pop
xor
sbb
ljmp
call
xor
and
and
add
popa
pop
inc
addr16
inc
imul
popa
jae
testb
add
bound
adc
je
and
inc
popa
sbb
cmp
adc
xor
add
ss
rcll
inc
and
cmpsb
pop
call
stos
outsl
aas
ljmp
adc
adc
rcll
pushl
mov
cmp
loopne
inc
pop
inc
notl
mov
pop
inc
adc
mov
add
je
pushl
jb
ljmp
dec
ja
stos
ja
inc
mov
inc
sti
cmpsl
out
xor
add
ljmp
loopne
js
jl
icebp
addr16
add
imul
pushl
daa
push
sub
sub
add
incl
push
das
incl
pop
xor
push
pop
adc
ljmp
inc
notl
xor
and
cmp
add
adc
adc
inc
arpl
sbb
add
out
add
add
and
mov
adc
add
das
push
adc
dec
imul
add
inc
and
movsl
outsl
inc
ljmp
jo
inc
mov
adc
inc
lret
adc
addb
mov
pusha
add
cmp
add
cmp
out
add
mov
add
jbe
add
ja
inc
pop
pusha
add
inc
pop
adc
je
ljmp
jno
ljmp
dec
ja
scas
test
int3
shll
add
xor
pop
data16
fbld
arpl
loope
pusha
add
pusha
add
add
aaa
sub
incl
sbb
outsl
dec
daa
jl
sub
jge
xor
jle
xor
push
ss
sub
push
and
sub
mov
xor
add
arpl
push
adc
aaa
jbe
add
or
adcl
and
cmp
inc
add
sub
push
pushl
push
add
popa
cmp
jmp
jno
ljmp
jb
inc
ret
adc
rcll
inc
pushl
pop
pop
adc
mov
mov
addb
mov
mov
cmp
cmp
and
je
ljmp
inc
dec
adc
outsb
cmp
mov
xchg
jae
ror
xor
add
pusha
add
rcl
shlb
jle
and
popa
mov
sbb
sbb
das
daa
aas
sub
ljmp
pop
mov
adc
push
xor
dec
cs
jmp
adc
jmp
adc
xorb
incl
sub
sbb
adc
or
and
and
mov
andl
sub
add
add
adc
push
out
adc
pop
or
das
adc
lcall
sbb
mov
jno
inc
add
inc
ljmp
inc
ljmp
je
or
adc
mov
inc
pushl
mov
inc
sbb
add
mov
pop
adc
inc
add
lods
jae
inc
push
adc
adc
adc
jmp
movsb
call
rcl
and
sub
add
dec
pop
outsb
pop
pusha
or
mov
arpl
sub
add
sub
cmp
sbb
pop
inc
sub
inc
sub
jmp
adc
lcall
adc
ljmp
daa
and
xor
add
mull
push
iret
adc
xchg
and
and
loop
cmp
and
cmp
adc
sbb
and
sub
adc
adc
jmp
jb
ljmp
inc
ljmp
adc
inc
pop
mov
rolb
jbe
pushl
pusha
add
ja
add
adc
daa
adc
inc
add
lods
inc
inc
adc
outsl
cmp
push
cmpsb
jns
inc
mov
sub
loopne
popa
jmp
add
mov
and
and
dec
and
sti
add
movl
lcall
adc
lcall
or
lcall
adc
ljmp
daa
mov
inc
popa
packsswb
sub
add
ret
inc
xor
std
inc
cmp
jp
inc
rorl
add
and
sahf
adc
sbb
mull
cmp
sbb
cmp
ljmp
sbb
das
add
sub
lcall
jb
ljmp
jae
inc
pop
adc
lods
je
add
jne
add
inc
ljmp
pop
adc
jne
inc
add
add
inc
inc
pop
inc
add
adc
and
adc
jne
ljmp
inc
push
adc
outsl
lcall
inc
sarb
add
and
mov
and
jnp
pusha
pop
lret
pusha
lret
outsb
pop
push
adc
lcall
sbb
in
inc
in
sti
dec
popa
sti
pusha
sbb
adc
inc
xor
imul
clc
xor
push
pop
xor
repnz
add
scas
sub
cmp
sbb
sub
add
inc
daa
ud0
jae
ljmp
je
inc
mov
dec
ljmp
ljmp
dec
inc
pop
mov
add
ja
xor
add
addb
inc
inc
daa
inc
dec
inc
add
lods
jne
inc
pop
adc
cmpsl
dec
outsl
adc
jo
jmp
insb
inc
xor
leave
xor
add
pop
add
and
and
sti
xor
and
sbbb
add
ljmp
hlt
inc
sub
rcll
mov
cmp
add
arpl
adc
stos
adc
pusha
mull
sub
cmp
cmp
sub
adc
and
xchg
inc
jmp
jne
ljmp
addb
dec
ljmp
mov
add
adc
fildl
adc
add
adc
ljmp
inc
cmp
adc
inc
push
adc
dec
jae
adc
insl
inc
lcall
movsl
xchg
dec
ret
out
xor
add
bound
jle
and
xor
imul
sti
and
xor
inc
xlat
popa
fildll
incl
lock
ja
pop
dec
adc
push
iret
ja
and
pop
xchg
push
and
add
add
add
pusha
repz
cmp
xor
xor
jmp
inc
add
adc
sbb
inc
jmp
dec
ljmp
adc
adc
lods
ja
sub
add
js
add
adc
adc
adc
pop
inc
add
adc
jbe
inc
push
adc
cmpsl
inc
pop
sbb
jae
jmp
outsl
inc
lcall
jl
inc
mov
xor
add
add
jb
adc
sub
or
xor
cmpsl
xor
and
inc
add
insl
fists
adc
adc
inc
sbb
mov
and
popa
jmp
fwait
xor
push
sub
jbe
adc
pop
mov
loop
cmp
cs
inc
add
xor
pop
incl
push
jmp
pusha
add
ja
inc
pop
inc
add
ja
push
fists
dec
inc
lret
inc
add
js
add
adc
add
jns
inc
out
inc
add
sub
add
pusha
and
stos
js
pop
inc
inc
adc
cmpsb
je
jmp
jno
lcall
imul
mov
mov
push
and
xor
jmp
and
pusha
pop
popa
out
pop
mov
imul
aaa
adc
inc
adc
and
sub
xlat
pop
push
xor
add
add
push
adc
jmp
popa
out
dec
dec
adc
sub
pushl
pop
add
jmp
ja
jmp
js
add
ljmp
adc
mov
push
adc
jbe
jmp
pop
add
popf
jo
lcall
outsl
dec
ljmp
lret
add
add
or
add
and
xor
mov
mov
pop
fwait
adc
add
arpl
and
add
add
adc
inc
notl
mov
add
ja
adc
das
adc
adc
push
xor
adc
cmp
mov
jns
jmp
jns
add
test
add
adc
jns
das
add
adc
add
mov
add
adc
inc
pop
add
movsb
jne
jmp
jae
lcall
outsb
dec
call
lahf
xchg
sub
push
pusha
add
aaa
out
aas
and
xor
dec
push
and
dec
inc
call
hlt
inc
add
inc
test
bound
and
and
jae
rcrl
xor
add
add
adc
push
xlat
adc
jae
sbb
xor
jmp
adc
jmp
push
dec
add
insb
dec
xor
mov
jp
jmp
jp
addb
cmpsl
inc
add
test
push
add
inc
and
add
cmpsl
inc
pop
addb
pop
inc
add
movsb
js
inc
outsl
add
push
jmp
je
lcall
dec
xor
and
add
inc
cmp
sti
add
jmp
je
and
mov
and
and
inc
call
lret
adc
or
cmp
seta
data16
pop
lret
push
xor
add
add
lcall
cmp
push
cmp
add
adc
arpl
lcall
inc
add
jnp
inc
pop
adc
add
pop
addb
cmpsl
jnp
add
inc
das
and
add
adc
adc
jns
lcall
xor
and
push
rcll
xor
cmp
ret
aaa
sub
add
dec
bound
pusha
mov
and
dec
xor
cmp
xchg
push
add
inc
jmp
push
aam
pop
and
or
and
lcall
add
mov
adc
bound
imul
add
cmp
inc
add
push
addl
pop
jmp
jl
jmp
mov
jmp
add
pusha
xor
aas
pusha
dec
adc
jnp
lcall
inc
sub
adc
add
ja
bound
and
push
push
decb
arpl
idivl
and
cmp
fs
das
adc
dec
sti
and
insl
and
add
pop
jnp
pop
and
and
sahf
adc
out
sti
bound
arpl
out
xor
add
inc
inc
notrack
adc
jmp
inc
push
push
cmp
jmp
jge
inc
add
xor
add
movsl
das
add
xor
add
pusha
dec
pusha
push
adc
push
cmp
mov
imul
adc
incl
cmp
pop
pop
and
pop
sub
and
cmp
add
jle
and
cmpsl
and
and
inc
cmp
ljmp
mov
pop
and
jns
pop
and
add
addr16
out
adc
bound
popa
push
cmp
push
add
inc
inc
jmp
push
or
decl
pop
lcall
jle
jmp
addb
popa
jmp
jge
xorb
inc
adc
jl
decl
and
or
inc
inc
inc
sub
bound
daa
pusha
bound
bound
adc
cmp
je
sub
jle
bound
pusha
or
and
and
inc
dec
pop
and
pop
and
movsl
data16
pop
or
xlat
push
cmp
add
xor
push
pop
sti
adc
bound
popa
dec
jmp
add
inc
inc
inc
jmp
sbb
lcall
sub
call
jg
jmp
adc
adc
pop
adc
add
pusha
sbb
mov
addb
cmp
mov
jp
incl
lcall
inc
pop
push
and
push
incl
inc
xor
popa
pushl
pop
add
negl
adc
pop
adc
and
and
cmp
mov
and
and
je
adc
notl
adc
and
mov
dec
inc
add
and
cmpsl
pop
sub
nop
jbe
adc
push
pop
adc
bound
arpl
xor
add
dec
inc
ja
and
pop
outsl
push
cmp
pop
jmp
andb
adc
add
adc
add
pusha
cmp
xchg
ja
cmp
inc
sti
bound
dec
inc
xchg
add
push
inc
mov
gs
and
mov
sbb
adc
addb
sti
and
push
and
inc
and
adcb
pop
pop
sti
push
mov
xor
punpckldq
outsb
pop
pop
sub
add
fwait
push
adc
pop
pop
pop
jecxz
dec
bound
jmp
cmp
popa
adc
push
sbb
sbb
push
xor
adc
lea
lcall
subl
inc
getsec
add
loopne
pusha
xor
je
pushl
and
orb
sbb
and
insb
cmp
pusha
fwait
and
mov
adc
inc
mov
stos
outsl
lret
addr16
adc
push
jmp
pop
movsl
movsl
movsl
xlat
and
push
and
pusha
pop
and
and
xchg
adc
pop
and
mov
cmpsb
inc
xor
fildll
add
pop
stos
pop
sub
add
adc
pop
cmp
fldenv
gs
cmp
push
sbb
sbb
add
sub
push
decl
subb
subb
imul
xor
add
pusha
and
push
mov
ljmp
sbb
sub
sbb
adc
jmp
inc
mov
filds
adc
inc
mov
repz
addr16
and
and
or
xchg
aas
inc
lret
adc
adc
arpl
popa
jmp
lahf
and
fwait
inc
or
addl
mov
shl
add
add
js
adc
pop
aaa
adc
jle
bound
and
dec
cmp
imul
or
add
insb
pop
lcall
subl
test
mov
add
adc
sbb
pop
or
pop
inc
cmp
sub
imul
sti
bound
arpl
xlat
mov
or
adc
outsb
outsb
outsb
lahf
inc
adc
sti
and
pop
and
xchg
cmp
imul
inc
adc
xor
shlb
in
sbb
xor
mov
xor
add
adc
imul
push
and
adc
adc
jns
push
lcall
test
or
add
pusha
adc
adc
addr16
jmp
inc
das
pusha
xor
xor
addb
outsl
bound
and
movsl
sub
or
add
or
addb
adc
ds
movups
arpl
popa
jmp
mov
cmp
arpl
orl
adc
inc
pop
adc
das
jl
je
xor
mov
xor
add
scas
and
jb
and
je
push
adc
add
sbb
pop
push
lcall
jae
sahf
xchg
add
pusha
adc
jne
push
lcall
adc
call
inc
sub
ret
inc
add
xchg
jne
out
pusha
mov
mov
sti
sub
mov
out
mov
add
adc
ss
mov
mov
popa
jmp
ret
cmp
lret
cmp
and
dec
and
faddl
and
and
pop
and
dec
pop
sub
pusha
add
and
fsts
mov
add
jg
add
and
push
adc
add
pop
or
jmp
dec
lcall
add
insl
pop
dec
lcall
or
cmp
xor
stos
loope
pop
adc
or
xchg
pop
inc
fists
pop
pop
pop
test
adc
and
cmp
xlat
sbb
pop
push
and
inc
outsl
adc
push
push
push
jno
sub
jle
pop
and
mov
add
adc
pop
aaa
adc
xchg
cmp
jg
inc
inc
aas
call
add
add
pop
dec
inc
call
xchg
bound
test
adc
or
inc
push
sarl
add
insb
bound
rcll
xchg
inc
mov
sub
andl
mov
cs
pop
adc
and
inc
jo
and
fldt
jnp
daa
adc
add
ja
pop
sub
add
arpl
pop
aaa
adc
sbb
bound
arpl
lret
dec
sbb
inc
call
or
call
or
pop
pop
pop
ljmp
and
call
inc
or
adc
add
cmp
pusha
pop
jno
pusha
imul
daa
inc
jnp
andb
mov
xor
add
adc
cmpsb
cmpsb
cmpsb
int3
and
inc
and
inc
push
and
dec
pop
and
and
and
dec
pop
sub
add
jnp
popa
xchg
popa
lahf
and
pop
xor
add
push
push
dec
call
or
or
adc
or
fstpt
xor
and
mov
and
mov
and
inc
pusha
adc
push
push
adc
enter
and
dec
and
inc
jle
adc
jb
dec
cmp
outsl
shll
sub
aaa
and
sub
add
pop
cs
outsb
sbb
cmp
xchg
adc
xlat
sbb
and
jmp
and
call
push
cmp
and
imul
test
sub
inc
test
push
dec
adc
pop
das
adc
bound
jo
inc
movups
push
adc
push
pop
sub
add
inc
sub
sub
loop
cmp
add
add
imull
push
sub
sub
or
or
add
mov
jae
aaa
xchg
xchg
xchg
mov
sqrtps
adc
sub
scas
inc
sbb
jne
xor
add
add
adc
sub
sub
lcall
sub
popa
sti
push
mov
ljmp
and
cmove
mov
adc
inc
mov
and
sub
push
loopne
js
adc
es
popa
mov
sub
add
lahf
fs
adc
daa
daa
and
xor
adc
cmpsl
adc
adc
jo
dec
cmp
lret
and
pop
sub
js
inc
adc
and
jp
and
and
add
add
pusha
sub
popa
sti
adc
and
inc
dec
and
fadds
jnp
and
dec
xchg
adc
jg
jg
pop
dec
adc
jns
jns
inc
mov
cmp
add
and
jge
bound
and
pop
cmp
add
popa
sti
bound
dec
ja
iret
inc
inc
adc
dec
add
into
add
mov
push
push
push
inc
mov
lcall
pop
sub
jb
adc
sbb
sbb
and
fbstp
mov
sbb
and
inc
inc
adc
inc
add
dec
push
pop
das
pop
popa
lea
adc
xor
add
add
adc
add
pop
sub
sti
bound
adc
sbb
scas
xlat
lret
add
dec
inc
add
pop
inc
pop
adc
stos
add
ret
push
add
add
cwtl
xor
adc
add
iret
gs
outsl
pusha
or
and
add
iret
adc
and
ja
and
pop
xor
add
mov
pop
adc
adc
aas
aas
std
jo
and
scas
outsb
daa
dec
aaa
adc
pop
push
jne
push
xor
filds
xor
add
add
adc
mov
cli
and
addl
cld
mov
sub
pop
sub
add
sub
inc
pop
mov
stos
sbb
sbb
pop
xor
or
xor
add
das
pop
cmp
std
and
loope
add
clc
pop
rorb
add
lock
add
loopne
sub
add
rolb
lldt
addb
verr
adc
add
jg
or
loope
add
aas
rcrb
adc
add
rolb
lock
fldcw
mov
adc
push
rol
test
js
rolb
movups
cmpb
inc
shl
pusha
push
daa
flds
pusha
push
add
rolb
jle
addb
dec
inc
jle
addb
lock
dec
inc
jle
addb
clc
add
jle
addb
cld
add
pop
inc
jle
addb
pop
adc
and
loopne
cmpb
add
cmpb
add
orb
nop
add
sbb
nop
add
cmp
sub
add
addb
das
add
andb
outsl
add
subb
add
and
and
and
and
and
and
es
add
addb
daa
jle
addb
daa
jle
addb
daa
jle
addb
sub
inc
subb
add
sub
inc
subb
add
sub
inc
subb
add
sub
add
xlat
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
jo
mov
mov
mov
mov
movsb
add
jo
les
sub
add
icebp
add
addb
jb
pop
add
add
icebp
add
jo
out
loopne
in
loopne
in
movsl
lahf
inc
adc
inc
add
adc
sub
adc
inc
push
rorb
pop
adc
loopne
out
loopne
out
adc
loopne
jg
dec
loopne
pusha
sbb
clc
loopne
iret
cmpsb
pushf
mov
andb
add
jo
subb
xchg
ror
cld
loopne
out
loopne
out
adc
loopne
sub
adc
sarb
and
je
popa
inc
adc
and
rclb
add
adc
dec
mov
aaa
adc
adc
sub
adc
sbb
sbb
dec
cld
mov
adc
ds
add
and
add
add
sbb
xchg
subl
shll
jmp
pusha
adc
add
xchg
add
and
dec
xchg
pop
popl
and
pusha
adc
add
xchg
sub
add
add
and
xor
and
add
push
push
pop
xchg
mov
xor
add
pusha
adc
xchg
cli
pusha
and
add
addl
lahf
add
push
jae
jae
push
aaa
and
add
imull
push
mov
cs
mov
cmp
and
mulb
pusha
adc
pusha
and
pusha
xor
daa
jg
add
add
add
mov
and
sub
add
pop
push
jge
cs
test
sbb
inc
sub
cmc
pusha
adc
adc
sub
pusha
cmp
aas
jg
add
sub
cmp
xlat
xlat
out
addl
add
dec
add
adc
adc
outsb
imull
dec
dec
and
xor
lock
sbb
push
stos
xchg
sbb
jp
and
and
add
jmp
inc
xchg
sbb
rcl
rcr
idivl
cmp
mov
cmp
and
add
add
sbb
imul
and
cmp
in
pusha
and
adc
push
mulb
pusha
dec
add
add
add
inc
jg
pop
inc
call
shlb
xchg
sub
jp
jp
pop
inc
and
fsubrl
sub
loopne
sub
add
add
sbb
sub
xchg
sbb
dec
dec
dec
lcall
cwtl
pop
addb
pop
add
pusha
xor
lods
xchg
sbb
pusha
inc
pusha
dec
das
arpl
add
add
pop
or
or
and
scas
std
pop
adc
arpl
and
fisubl
in
xlat
out
jae
inc
insl
pusha
das
rep
xchg
sbb
dec
inc
inc
popf
xchg
sub
out
test
repz
stc
hlt
add
pusha
xor
pop
lods
xchg
sbb
insl
popa
cs
inc
push
and
add
add
pop
add
mov
xchg
incl
jne
jne
and
and
jae
rorl
push
and
inc
push
sbb
mov
arpl
dec
cli
icebp
dec
fldenv
stos
loopne
cli
inc
pop
adc
add
pusha
cmp
pusha
dec
adc
das
repnz
pop
and
inc
add
add
and
mov
mov
xchg
dec
dec
dec
leave
or
or
insb
outsb
adc
inc
or
dec
pop
push
sub
stos
mov
incl
inc
fwait
subl
push
mov
in
add
xchg
loope
lcall
testl
jmp
pusha
inc
push
inc
inc
inc
ljmp
push
sub
and
aaa
add
adc
push
inc
xchg
adc
jle
testl
dec
xor
imul
lock
fsubl
sub
jnp
loopne
adc
mul
inc
sti
and
and
fiadds
sbb
repz
imul
add
mov
fisubs
mov
inc
ljmp
push
cs
mov
xor
add
add
clc
clc
clc
std
and
xchg
sbb
mov
sbb
popa
push
inc
sbb
das
sub
scas
xor
frstor
lea
lcall
and
sub
fildl
and
add
pushf
xchg
dec
sub
cmp
inc
inc
pushl
dec
sub
or
or
cmp
aaa
sbb
dec
dec
dec
repnz
bound
arpl
and
andb
ret
and
pop
and
and
and
sbb
aam
stc
jecxz
jnp
and
and
fwait
enter
add
cwtl
nop
dec
sub
sub
inc
inc
cmp
mov
push
call
sub
xchg
add
add
inc
inc
inc
je
stos
jnp
pop
and
andl
popa
sti
and
push
and
sbb
sarl
add
repz
jnp
and
sub
aad
lahf
iret
and
push
add
sub
in
sbb
cmp
mov
push
call
sub
jmp
inc
ja
cs
inc
sub
mov
inc
cmp
mov
imul
mov
push
ljmp
or
mov
add
xlat
mov
add
in
fisubl
scas
shlb
stos
shlb
lahf
shlb
xchg
shlb
aam
mov
fadds
sbb
add
in
iret
add
sub
sbb
aaa
pushl
inc
sub
pusha
mov
sub
add
sub
cmp
adc
inc
cmp
sbbl
mov
and
arpl
add
arpl
decl
mov
fcmove
add
in
and
and
sar
cld
loope
mov
push
jmp
orb
and
and
pusha
adcl
ds
inc
xchg
and
mov
and
add
sub
sub
mov
adc
aas
cmp
cmp
out
arpl
and
inc
and
mov
lret
andb
mov
fiadds
adc
ljmp
adc
test
add
rol
add
fsubl
ret
aam
fadds
push
and
and
fsubrs
aam
xchg
enter
push
roll
jmp
mov
dec
sub
pusha
andl
dec
cmp
and
mov
xor
push
push
es
ss
fbstp
cmp
and
sub
fcom
int
jecxz
and
outsb
fbld
mov
arpl
pop
pop
xor
jle
add
mov
lds
frstor
ret
shll
aad
loopne
pop
adc
inc
pop
and
and
xchg
sbb
leave
add
loopne
or
test
sub
pusha
mov
insb
adc
inc
inc
fwait
inc
mov
xor
add
and
scas
addr16
cmp
ds
mov
jg
dec
fldenv
sub
mov
repz
adc
inc
sbb
pop
push
jmp
sbb
cwtl
mov
dec
and
inc
jmp
out
adc
fsubl
fiadds
inc
pop
adc
and
and
fisubrl
sub
pusha
xchg
pop
scas
push
frstor
add
sti
add
push
and
and
sti
adc
and
inc
sub
ret
jp
dec
call
cwtl
or
jmp
add
repz
push
ficoms
shll
and
xchg
and
iret
pusha
add
adc
outsl
push
add
lret
call
lds
jmp
int3
inc
pop
inc
repz
aam
push
inc
sti
adc
inc
aaa
adc
and
sbb
add
in
mov
call
mov
and
das
sub
add
pusha
fwait
adc
xor
fisubl
add
sti
add
push
aaa
sub
inc
push
adc
xchg
stos
sub
mov
dec
mov
out
add
rol
adc
mov
jge
fisttps
and
dec
add
pop
push
and
xchg
mov
mov
inc
pop
adc
fs
adc
out
inc
add
icebp
ret
and
mov
jmp
stos
add
pushl
and
sub
add
dec
mov
scas
pusha
adc
cmp
and
inc
mov
xor
add
sbb
sub
lods
pop
inc
notl
xor
mov
sub
mov
dec
inc
test
in
mov
add
repnz
push
mov
hlt
xlat
push
sub
mov
incl
dec
and
inc
and
inc
jmp
andnps
push
add
shrl
adc
mov
filds
adc
inc
add
jmp
add
sbb
sbb
mov
or
xor
sub
add
adc
stos
pusha
mov
xor
and
inc
add
out
add
sti
add
sbb
sub
iret
lods
pop
adc
cmp
sub
xor
sub
inc
add
insl
pop
inc
mov
lea
jmp
xchg
add
in
cmpsb
add
out
lods
and
mov
aaa
les
repnz
sub
mov
repz
mov
lahf
mov
push
dec
sub
jne
add
scas
xchg
add
shlb
call
test
fldl
adc
inc
add
out
pop
push
in
add
fcoml
push
ljmp
inc
sub
ss
mov
lods
pop
adc
xor
and
inc
lret
add
push
dec
inc
das
sbb
cs
lods
push
adc
cmp
sub
inc
add
mov
adc
aam
or
loope
add
jmp
and
mov
lds
lock
push
fistl
push
out
out
ljmp
filds
mov
dec
dec
inc
call
push
decl
xchg
add
mov
cwtl
add
rcrb
add
ficomps
add
pushl
pop
inc
sub
adc
mov
adc
daa
and
popa
iret
add
add
sub
and
stos
push
adc
xor
adc
push
inc
ljmp
jns
flds
fbstp
inc
add
out
add
out
add
call
mov
jmp
pop
adc
out
jmp
filds
incl
daa
dec
insl
inc
and
test
dec
inc
xor
fs
or
popf
jns
pushl
mov
inc
mov
int
add
dec
mov
pop
dec
jg
ljmp
push
inc
sub
mov
push
adc
sub
add
inc
pop
adc
leave
test
and
lcall
xchg
sub
mov
jmp
insl
and
mov
sbb
call
jge
call
addb
xlat
mov
fmuls
add
andl
fsubs
add
inc
movlhps
mov
jmp
test
lea
and
pusha
arpl
out
mov
jecxz
sbb
and
add
mov
add
mov
jge
add
adc
dec
jnp
inc
je
jmp
push
inc
sub
and
cmpsb
adc
xor
add
add
add
daa
and
lds
and
jecxz
sub
lods
add
xchg
push
adc
mov
insl
pop
inc
jno
inc
jne
inc
jns
add
adc
addl
ret
mov
ret
add
add
rcll
mov
xchg
inc
or
fadd
and
stos
and
and
xchg
sub
add
sbb
xor
decl
outsb
add
pushl
jo
mov
push
adc
pop
dec
inc
sub
iret
cli
inc
shll
adc
and
movb
outsl
je
sti
add
adc
sbb
movsl
push
pusha
sti
adc
and
push
sbb
inc
call
pop
or
ljmp
pusha
pop
ljmp
pushw
ljmp
inc
xchg
adc
add
add
add
lods
jns
add
jl
add
jg
add
addl
stos
test
inc
lret
push
lods
lea
mov
sti
add
and
jg
daa
dec
and
inc
and
cwtl
sub
pushf
adc
add
adc
and
gs
push
call
push
jmp
arpl
ljmp
pop
or
lea
call
aas
sub
push
fistl
cmpsb
push
adc
and
repz
sti
and
xor
pop
sbb
movsb
inc
sti
adc
pop
and
dec
sub
pop
sbb
aas
decl
and
mov
ljmp
push
or
cltd
push
pop
lcall
add
push
lcall
pusha
push
lcall
addr16
call
fs
add
pop
add
pushl
add
jmp
jmp
stos
adc
andb
movl
sbb
cmp
dec
xor
dec
and
push
inc
jg
adc
push
or
mov
push
push
incl
cmp
fwait
insl
adc
jecxz
out
and
sbb
inc
mov
or
pop
inc
xchg
incl
push
and
push
sub
pop
sbb
cmp
jmp
mov
decl
inc
or
jo
push
ljmp
add
lcall
add
call
or
xchg
add
cmp
sub
push
inc
xor
push
dec
cmp
pop
push
inc
lcall
jmp
pop
sub
ja
and
fwait
and
cltd
sub
imul
pop
add
sub
jle
pop
decl
dec
or
xchg
dec
and
adc
incl
sub
add
push
pusha
jmp
mov
and
test
and
inc
sub
dec
inc
cmp
jp
sbb
cltd
dec
adc
negl
or
inc
lcall
call
dec
call
dec
and
sub
fwait
fs
mov
and
dec
pusha
iret
and
xchg
sub
sub
adc
aaa
pop
popa
adc
and
xchg
and
sbb
aas
incl
pop
lcall
pop
incl
and
adc
ret
sub
add
and
jb
repz
sti
adc
pop
inc
adc
sub
xor
adc
xchg
lcall
push
and
mov
adc
lret
popf
jae
shlb
punpckhwd
out
pop
pusha
lret
pusha
mul
arpl
mov
adc
sti
mov
scas
jo
and
movsl
hlt
sub
mov
jae
lret
xchg
arpl
insb
aaa
and
popf
and
xchg
jmp
pusha
pop
and
sbb
jae
or
xchg
dec
or
mov
inc
ret
xor
add
xchg
bound
adc
add
sbb
sbb
bound
sub
outsb
sbb
sub
decl
call
movsl
push
stos
push
adc
mov
sbb
mov
repz
adc
mov
jo
shl
punpckldq
and
movsb
sub
add
xor
jbe
and
je
ja
jno
and
pusha
add
pop
fs
mull
inc
pop
and
lcall
outsl
pusha
and
pusha
pop
bound
adc
dec
add
push
inc
xor
addb
mov
decl
add
sub
jo
lret
and
add
maxps
mov
fbstp
add
dec
and
xchg
push
push
ljmp
adc
and
mov
fistps
mov
sarb
push
and
inc
jns
arpl
bound
popa
out
fbld
outsl
lahf
pusha
idivl
popa
pushl
in
and
mov
loope
and
pusha
repz
add
mov
mov
mov
cmpsb
pushl
xchg
jl
stos
xchg
mov
push
sub
and
lret
add
rcrl
sbb
mov
add
and
adc
ret
jp
sbb
and
dec
and
lcall
fs
mov
sub
mov
daa
pushl
imul
xchg
sbb
pushl
xchg
pusha
jmp
xlat
out
insb
jmp
jmp
bound
push
pop
and
push
sub
push
addr16
popa
pop
jno
addl
sbb
jno
xchg
subb
andb
adcl
jno
ljmp
add
and
test
arpl
call
inc
stos
adc
add
xchg
jbe
push
and
adc
and
and
and
scas
inc
add
sub
xchg
push
mov
sub
mov
sub
out
and
xchg
push
mov
and
dec
test
out
out
sti
sub
lea
jno
and
mov
and
movsb
arpl
add
js
xor
sbbb
mov
xchg
pop
sbb
fwait
fs
pushl
ja
and
and
mov
xchg
stos
addr16
xchg
inc
lahf
adc
inc
stos
adc
sub
inc
fistl
pushf
inc
jecxz
outsl
pop
adc
pop
adc
insb
sub
addb
xor
pop
pop
decl
push
pushl
insl
sub
mov
and
xchg
sbb
cmp
aad
mov
mov
jmp
and
fsub
add
sub
aas
sbb
pop
sbb
mov
adcl
and
stos
insb
pushl
jno
and
adc
arpl
nop
inc
sti
adc
inc
sti
adc
sub
inc
shll
outsl
jp
and
and
add
adc
adc
sub
sub
cmp
inc
add
imul
xchg
xor
sbb
mov
jb
and
and
xchg
sbb
xchg
fcmovne
mov
out
pop
insl
jmp
sub
sub
pop
incl
push
pop
decl
pop
and
lahf
fs
ljmp
insl
cs
and
sbb
ljmp
push
sub
cmp
adc
add
inc
lret
adc
roll
and
add
adc
es
sub
xchg
sbb
ss
ljmp
xor
xlat
mov
xor
adc
mov
je
pushl
jb
xchg
inc
cmpsl
adc
fst
and
cmpsl
mov
inc
fs
testl
xor
jp
pop
incl
mov
call
arpl
cmpsb
imul
sbb
push
daa
pushl
push
inc
out
inc
xchg
sub
add
daa
daa
daa
cli
pop
and
jg
add
adc
and
add
and
or
jp
inc
sbbl
cmp
mov
cmp
mov
cmp
fisttpl
lret
xchg
xor
push
mov
xor
mov
xor
mov
xor
lods
je
inc
test
fldenv
andl
arpl
inc
lahf
addr16
and
xchg
and
cli
sbb
sbb
incl
add
decl
bound
jmp
dec
and
sub
inc
mov
testb
dec
push
add
adc
and
and
sub
add
pop
xchg
sbb
sbb
pushl
and
stos
outsb
and
test
cmp
fildl
mov
cmp
and
adc
jae
ljmp
jnp
dec
mov
mov
and
andb
and
xchg
inc
jp
mov
cmp
mov
insb
inc
and
jg
and
sbb
jmp
pop
ljmp
and
and
inc
stos
and
add
adc
and
and
bound
iret
adcb
and
xchg
push
push
outsl
inc
inc
fistps
inc
ljmp
jae
pushl
adc
adc
cmp
mov
inc
sbb
scas
sbbl
mov
int3
ret
mov
dec
imul
pop
push
addr16
dec
jg
adc
fs
and
call
sbb
daa
sbb
xor
es
and
and
test
pusha
add
sti
add
add
adc
sbb
aas
mov
movsl
sbb
adc
pop
cmp
movsl
jo
ljmp
jle
inc
pushl
adcb
and
adc
je
ljmp
jle
mov
jp
into
lret
xchg
jle
pop
je
loop
push
cmp
sub
and
jmp
push
or
sub
pusha
sbb
fwait
fwait
inc
pop
inc
fwait
adc
inc
mov
sub
add
adc
sbb
sbb
sub
test
and
pop
xor
jmp
and
jnp
je
and
jge
scas
jbe
and
jge
add
mov
inc
add
adc
je
jmp
jae
mov
jns
punpckhwd
ljmp
and
pop
test
and
pusha
add
sbb
sbb
inc
fwait
adc
add
sti
add
add
scas
test
adc
in
xor
sarl
ljmp
and
decl
push
lcall
and
stos
jbe
ljmp
adc
add
pop
iret
add
lods
ja
ljmp
jae
jmp
jl
mov
jp
add
mov
push
jmp
and
nop
and
inc
xchg
and
cmp
inc
adc
pop
pop
mov
add
pop
mov
mov
sbb
push
mov
push
ljmp
ja
ljmp
dec
addb
ja
dec
and
ja
cmpsl
jne
inc
pop
sbb
lcall
mov
mov
sub
and
imul
arpl
adc
pop
pop
imul
pop
and
arpl
sub
cmp
pop
dec
xor
lahf
popa
add
js
add
xor
lret
mov
xchg
insl
dec
jmp
jb
xorl
je
add
xchg
je
jecxz
adc
sbb
lcall
addr16
js
lea
xorl
mull
stos
mov
pop
dec
sti
adc
or
or
aas
loop
dec
outsb
and
dec
and
inc
add
adc
mov
lock
add
push
cmp
pushl
push
or
jmp
pop
jmp
add
jl
andb
mov
push
pushl
sbb
sub
lcall
mov
das
adc
and
inc
inc
xchg
dec
inc
add
addr16
xor
fsts
push
push
push
ja
add
std
sub
outsb
and
add
sub
imul
movsb
jge
jmp
outsb
inc
and
mov
ljmp
aaa
and
jno
and
addr16
push
aaa
push
push
adc
dec
rcll
mov
and
adc
inc
add
xor
cs
mov
bound
adc
sub
sbb
cmp
daa
pop
or
andb
imul
andb
xchg
imul
push
ljmp
sbb
incl
and
and
imul
pop
and
movups
adc
in
imul
inc
or
std
dec
lahf
insl
fildll
and
add
add
adc
cmpsl
adc
and
lods
loopne
adc
inc
inc
jmp
mov
js
dec
and
mov
add
pusha
adc
jns
dec
jmp
or
jmp
sub
add
inc
push
adc
push
scas
and
das
gs
adc
and
fwait
inc
call
cli
jbe
and
mov
out
adc
adc
add
add
and
and
inc
inc
add
lock
mul
add
dec
dec
dec
jmp
push
or
and
outsl
addb
sahf
inc
add
jo
dec
sbbb
dec
dec
dec
sub
add
jmp
lahf
push
fs
pop
popa
and
adc
push
push
aaa
inc
sbb
mov
sbb
adc
xor
sbb
and
add
adc
dec
xchg
adc
jae
sub
fldenv
mov
adc
arpl
lcall
gs
inc
adcb
push
dec
dec
sub
add
inc
inc
adc
and
ret
das
bound
sub
adc
mov
adc
inc
and
sub
aas
pop
and
add
adc
xor
xor
and
add
push
push
push
jmp
sbb
dec
ds
dec
inc
jmp
sbb
push
cvtpi2ps
loope
xor
adc
inc
inc
add
adc
push
aas
adc
sbb
adc
inc
aas
arpl
add
adc
stos
adc
and
sub
and
pop
inc
jecxz
daa
and
jmp
and
and
ljmp
aam
cmp
xor
or
ja
adc
mov
adc
jbe
jbe
inc
xchg
and
add
adc
sub
shll
adc
sub
repz
inc
ret
adc
inc
xor
das
addl
add
adc
inc
inc
sbb
scas
scas
lret
pushf
pushf
pushf
jmp
adc
add
push
inc
adc
xor
js
push
mov
outsl
data16
pop
jbe
pop
inc
inc
adc
mov
pop
add
add
inc
add
push
inc
adcl
pusha
out
cmpl
push
mov
cmpsl
inc
sti
add
sti
push
pop
pop
pop
test
add
and
cmp
bound
and
mov
adc
pop
adc
dec
das
adc
inc
xchg
add
js
add
adc
movups
inc
jecxz
decb
adc
fwait
add
xchg
add
sub
add
add
adc
xor
inc
and
dec
and
adc
and
adc
shll
inc
adc
and
xchg
inc
and
adc
and
inc
adc
add
inc
pusha
push
pusha
inc
and
pusha
inc
and
stos
inc
pusha
inc
and
mov
scas
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
add
loopne
loopne
loopne
loopne
loopne
loopne
and
loopne
loopne
cmpb
jo
cmp
loopne
pusha
inc
pusha
pop
sub
add
cmp
adc
inc
cmp
and
inc
adc
inc
cmpsl
and
popa
mov
andl
adc
daa
out
xor
inc
xor
clc
bound
mov
dec
ret
adc
jmp
jmp
add
and
sbb
mov
sub
pusha
or
add
outsl
add
sub
add
adc
push
sbb
and
fs
inc
jmp
inc
jmp
add
add
add
dec
adc
dec
fwait
adc
jg
cmpsl
add
add
sbb
sbb
sbb
and
arpl
and
pusha
add
pusha
adc
pusha
and
and
jg
adc
jnp
dec
lahf
adc
push
add
mov
sbb
popa
sahf
lea
cli
arpl
xchg
aas
pusha
or
adc
and
add
add
inc
ja
or
ja
ja
inc
or
add
pop
adc
stc
fs
cmp
cmpsl
and
ret
ds
adc
adc
sub
xor
add
pop
pop
xor
lcall
adc
cmp
adc
cltd
test
cli
fs
cmp
add
pusha
and
lcall
ret
add
adc
jns
jns
dec
mov
std
outsl
outsl
outsl
rorb
packssdw
pop
mov
add
adc
jg
mull
mov
and
inc
push
jl
jbe
ret
mov
or
pop
pusha
and
adc
add
ret
add
fs
icebp
icebp
cld
cmpsl
cmpsl
cmpsl
clc
push
add
mov
cmp
and
cmp
push
js
mulb
pushf
cmp
adc
jne
leave
ret
sub
std
clc
add
leave
les
pusha
sub
adc
inc
add
mov
add
adc
repnz
js
inc
ja
loopne
fbld
xchg
inc
adc
test
arpl
and
dec
into
pop
lahf
adc
cmp
ret
cmp
stc
inc
ret
adc
mov
daa
and
xor
mov
testb
lahf
add
adc
jmp
jmp
and
push
adc
cld
pop
xchg
les
sbb
pop
dec
sub
push
jae
jo
shlb
cmp
mov
sbb
out
add
shll
and
pop
and
push
pop
xor
test
repz
mov
aas
add
adc
jecxz
jecxz
and
and
aaa
adc
imul
pop
push
imul
and
and
sub
push
cli
out
mov
and
pusha
add
push
and
andl
xor
adc
in
and
sub
and
daa
ffree
add
out
fadds
push
and
aaa
adc
and
cmp
add
and
cmp
xchg
adc
outsb
insl
and
and
adc
jle
and
psubsb
xor
dec
sbb
or
jns,pt
and
js
ds
jle
ret
and
add
imul
call
rolb
in
add
icebp
loopne
stos
and
and
pusha
nop
add
cmc
xlat
add
mov
xor
das
cmp
push
sub
jns
and
inc
ret
insb
sti
add
mov
push
and
addr16
sub
sub
cmp
inc
sub
ja
pop
arpl
ja
adc
fxch
add
call
in
stc
and
mov
push
repnz
ljmp
ja
pusha
pop
adc
arpl
jne
and
stos
jae
jnp
add
pop
aaa
jno
pop
in
addr16
es
mull
ret
imul
pop
sub
and
sub
add
popl
add
fcmovne
add
jmp
loope
adc
add
cli
inc
pop
adc
inc
mov
imul
add
cmpsb
mov
jmp
add
and
pusha
imul
in
pusha
jnp
cmp
xor
inc
sbb
xchg
scas
and
jno
bound
lcall
stos
or
cmc
fstl
jbe
and
xor
adc
fs
ljmp
ret
add
ljmp
mov
sbb
add
cmc
movb
call
adc
adcb
pusha
imul
inc
jae
jnp
cmovo
sub
ds
inc
push
out
inc
and
sbb
xchg
jbe
jmp
pushf
push
and
add
cmc
fstpt
fldt
and
sub
xchg
sub
xchg
and
aaa
pop
push
cmp
mov
mov
mov
push
enter
and
xor
mov
add
sbbb
cli
pusha
jae
jnp
addr16
sbb
imull
and
sbb
and
push
pop
pop
pop
decl
popl
ljmp
icebp
and
sbb
push
hlt
repz
xor
and
cmc
add
push
push
lcall
and
inc
test
and
cmc
adc
inc
add
xchg
jmp
jmp
cwtl
push
call
loopne
pusha
jnp
push
ds
cmp
pop
cmp
loop
inc
pop
pushf
fildll
pxor
xchg
call
orl
jecxz
add
daa
lock
and
repnz
repnz
push
lock
sub
aas
and
ljmp
adc
cmpsl
mov
inc
fwait
add
into
inc
add
adc
mov
add
loopne
add
decl
add
pusha
mov
pop
cmp
loop
fwait
adc
cmp
ss
imul
lahf
jmp
and
sbb
les
flds
adc
push
add
out
add
out
ret
adc
and
notb
mov
add
mov
inc
out
in
in
pop
sub
sbb
and
and
add
dec
sub
jg
add
mov
mov
roll
sbb
mov
inc
jl
jg
xor
stos
andb
and
push
xchg
adc
fwait
inc
mov
movups
pop
pusha
mov
stos
and
out
push
je
xor
mov
or
ret
out
mov
push
call
mov
adc
add
aad
inc
add
mov
mov
inc
or
aad
xor
and
sub
sub
js
xlat
and
inc
lcall
sbb
nop
addr16
scas
js
mov
and
out
js
pushl
push
xor
addl
xchg
pusha
fwait
inc
mov
sub
xor
rcl
and
xor
cmp
insb
dec
xor
cmpsl
pop
push
pushl
popw
pushl
outsl
inc
add
add
add
inc
add
test
mov
add
mov
add
mov
push
mov
and
jle
and
pusha
add
sbb
das
ljmp
or
cltd
arpl
pushl
addr16
cmpsb
pop
or
and
pusha
fwait
pusha
mov
pusha
mov
mov
push
xor
fsubrs
sbb
stos
es
into
pusha
add
adc
dec
xor
lahf
push
adc
lods
pop
or
movsb
push
or
pushf
push
pop
lcall
adc
sahf
popa
add
lcall
imul
add
jle
add
js
and
iret
int
sub
addr16
andl
cmp
pushl
push
lcall
pop
or
mov
push
pop
adc
sub
mov
adc
sbb
pusha
mov
mov
adc
inc
mov
mov
adc
xor
mov
and
rolb
adc
inc
or
push
cmp
pop
cmp
call
decl
sbb
dec
cmp
decl
sub
dec
inc
xor
push
dec
cmp
lcall
push
and
inc
and
imul
and
pop
sub
outsl
xchg
addr16
fistpll
inc
push
loopne
add
inc
cmp
adc
jle
pop
decl
dec
or
pop
adc
inc
mov
das
sub
adc
dec
sub
inc
mov
push
jp
iret
scas
sub
sub
jmp
and
rcrb
pop
adc
cmpsb
sbbb
popf
lcall
fwait
and
mov
gs
and
jp
ret
xor
mov
sti
and
cmp
scas
xor
push
test
arpl
and
sahf
and
loopne
inc
aaa
sub
pusha
xor
decl
push
push
decl
inc
xchg
loopne
pusha
stos
pusha
mov
adc
push
jnp
inc
adc
and
and
or
popf
dec
adc
add
adc
mov
sbb
mov
sbb
jmp
aam
test
cmp
push
popa
pop
and
xor
jae
addr16
push
adc
jnp
addr16
and
and
xchg
imul
jnp
imul
test
popa
and
pusha
pop
pop
inc
out
and
xchg
dec
ud0
or
xor
add
inc
mov
scas
adc
imul
inc
mov
sub
jmp
or
and
adc
push
and
xchg
gs
in
and
lret
and
pusha
mov
out
xor
sub
and
inc
popa
mov
pusha
sbb
aas
xor
popa
add
push
mov
cmpsb
lahf
pushl
lcall
test
insb
inc
jmp
jo
inc
mov
xor
aaa
pop
adc
sub
xor
sub
jmp
adc
test
sub
pop
leave
add
mov
pushl
jo
call
lods
mov
out
jmp
and
xor
add
and
bound
arpl
sti
and
xor
add
outsl
arpl
jnp
dec
decl
jno
ljmp
jno
pushl
imul
push
daa
jmp
adc
adc
sub
inc
mov
and
and
add
and
adc
and
fildll
fldt
adc
pop
xor
pop
fs
and
mov
ret
push
mov
cmp
xlat
mov
and
xor
das
and
and
and
add
cmp
and
jbe
pop
decl
pop
sbb
fwait
bound
cmp
popa
or
and
adc
inc
dec
sbb
pushl
lcallw
adc
addr16
sub
loopne
mov
aaa
mov
adc
sub
push
push
cs
mov
xor
mov
and
adc
and
adc
mov
int
and
push
or
movsl
sbb
insl
inc
sbb
xchg
decl
sbb
ljmp
outsb
das
inc
add
xor
movsb
addr16
jnp
xor
adc
sub
jnp
inc
xchg
adc
pusha
fwait
cmp
testl
and
adc
lahf
fs
out
adc
and
mov
pop
mov
mov
xor
mov
xor
mov
aad
addb
and
and
and
and
popa
xchg
fs
sbb
decl
sbb
mov
fs
dec
sub
mov
sbbl
inc
mov
and
outsl
pop
mov
mov
pop
sbb
das
incl
lcall
outsl
and
mov
out
and
mov
aaa
and
mov
mov
iret
sbb
test
fcom
aad
add
and
daa
imul
popa
lgdtl
pop
cmp
jg
sub
xchg
incl
adc
out
xor
shll
add
mov
adc
adc
addr16
scas
adc
and
adc
aas
pushl
and
and
adc
jge
inc
mov
call
and
cwtl
and
imul
xor
imul
xor
or
pop
xor
lret
int
jnp
cmpsl
inc
andl
sub
cmp
add
adc
adc
pusha
add
aaa
ss
cmp
adc
lea
ljmp
je
arpl
aas
stos
adc
add
push
lods
adc
sbb
ljmp
mov
and
and
jmp
sbb
and
lods
and
and
mov
pop
imul
pusha
jnp
cmp
add
adc
out
sbb
cmp
xor
pop
cmp
mov
and
and
cmpsl
mov
adc
movsl
push
mov
cmp
cmp
dec
and
adc
push
outsl
and
sub
sub
scas
adc
push
pop
adc
xchg
sti
and
sub
xor
pop
jnp
cmp
cmpsb
ja
ljmp
and
sub
mov
jmp
jbe
pushl
adc
orl
xchg
adc
dec
out
adc
and
cmp
sub
adc
ret
adc
fbld
sbb
jb
cmp
movsb
jns
aas
popf
and
and
push
movsl
jns
jmp
and
loope
aas
and
and
cmp
adc
and
and
sub
add
mull
inc
and
dec
inc
ret
adc
and
sub
sbb
sub
ljmp
jmp
sub
lcall
pop
ljmp
aaa
pushl
sub
and
and
imul
inc
arpl
mov
jae
dec
and
add
adc
inc
addr16
sub
sub
pop
inc
xor
lahf
and
xchg
and
sub
aas
sub
sbb
inc
xor
xor
daa
sub
inc
inc
adc
push
mov
adc
popa
mov
inc
andl
inc
and
daa
add
adc
jg
loopne
fists
push
dec
push
adc
mov
or
push
aas
xor
cmp
sub
inc
cmp
loop
inc
and
sub
adc
dec
fwait
adc
dec
cmp
rolb
and
dec
add
xor
xor
and
aas
pusha
add
aas
cmp
incl
sub
cltd
xorb
push
inc
cmp
cmp
and
adc
xor
insl
aas
sub
add
mov
dec
mov
mov
and
adc
pusha
fstl
and
xchg
add
dec
adc
je
and
dec
and
and
loopne
pusha
and
cmp
adc
pop
pop
pop
jae
sub
in
dec
out
adc
inc
arpl
pop
popa
add
ret
add
adc
adc
adcl
push
push
and
loopne
pusha
sbb
adc
and
add
adc
addb
ljmp
pusha
add
dec
push
adc
es
add
je
adc
sub
lods
aaa
mov
inc
push
adc
dec
push
adc
mov
cmp
adc
inc
ret
adc
and
daa
pusha
or
and
and
inc
sbb
cmp
add
add
xlat
adc
and
outsb
aaa
add
ret
add
adc
pusha
mov
je
and
add
jae
and
adc
add
xor
and
pop
and
and
add
mov
add
and
adc
add
and
adc
add
and
adc
add
jg
sub
add
clc
inc
xchg
and
pop
and
and
aas
pusha
inc
inc
pop
adc
pusha
pop
adc
pop
adc
and
add
pop
adc
shlb
add
stos
addr16
dec
test
addr16
pop
dec
cmc
and
adc
add
outsb
and
jns
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
and
pop
pusha
cmp
pusha
cmp
cmp
test
inc
aas
andl
and
and
cmpsb
and
inc
push
adc
shll
es
and
jnp
and
in
push
sbb
xor
push
push
mov
add
sub
add
xor
xor
mov
add
addl
and
and
pop
pop
pop
and
add
sub
push
insb
xchg
and
sub
pusha
adc
xor
add
push
ja
push
push
push
adc
daa
add
sub
sub
shll
pusha
or
xchg
std
inc
sbb
add
adc
test
xchg
and
call
sbb
jne
std
imul
sti
adc
pusha
or
push
xchg
std
and
and
dec
xor
cmp
adc
inc
xchg
adc
out
add
sbb
sub
jge
je
adc
loopne
jmp
loop
dec
xchg
adc
pusha
sbb
xorb
and
adc
cmp
sub
adc
push
mov
repnz
pop
sbb
gs
bound
das
loop
jg
push
in
adc
xchg
lret
and
in
adc
adc
adc
push
subl
and
and
xor
adc
dec
ja
outsb
adc
and
sti
inc
adc
lret
cmp
ret
and
hlt
and
and
loopne
adc
orb
jle
and
sbb
adc
iret
xor
xor
and
cltd
cmpsl
and
sbb
push
lcall
pop
cmp
cmc
pop
out
and
and
adc
les
inc
lahf
adc
adc
push
jge
and
sbb
add
xchg
sbb
push
and
pop
pop
pop
and
push
jne
and
sbb
pop
decl
mov
jg
and
pop
adc
pop
jg
fldl
call
mov
pushl
popa
xchg
rcll
pop
push
push
jnp
and
inc
dec
insl
jae
and
adc
ja
and
push
inc
out
popa
jae
insl
imul
push
imul
loopne
fs
mov
lret
add
jmp
ja
fistpll
sbb
into
add
lret
cmpsb
pop
ljmp
stos
outsl
pusha
inc
adc
and
pusha
push
add
jnp
sbb
push
or
dec
push
notb
dec
sahf
sub
gs
pop
inc
mov
push
mov
pop
dec
adc
and
movsb
sbb
outsb
and
mov
lds
pop
and
add
repz
aas
adc
mov
sbb
bound
inc
pusha
dec
pusha
push
inc
pop
and
lcall
or
inc
sbb
dec
dec
inc
cwtl
stos
adc
push
adc
jl
call
stos
add
repnz
insb
pop
or
icebp
and
and
push
sbb
cmp
mov
inc
cmpsl
add
fldcw
add
out
pop
aaa
adc
sbb
pop
pop
mov
push
pusha
pop
pusha
arpl
jnp
sbb
or
jo
sbb
dec
inc
inc
lea
sbb
push
push
jmp
xchg
jmp
pop
adc
adc
mov
add
in
mov
push
out
out
ljmp
sbb
and
sbb
and
sahf
jl
inc
nop
pop
outsl
sbb
push
jmp
push
and
pusha
pop
push
outsl
inc
sbb
or
and
or
or
outsb
cmp
out
and
add
dec
call
outsb
or
lret
dec
addl
inc
push
adc
fwait
add
lret
pop
rcll
iret
mov
call
je
arpl
and
adc
cmp
outsb
push
pop
pop
pop
jno
mov
pop
sbb
xchg
pop
sbb
pop
inc
inc
ljmp
sbb
inc
jae
jnp
sbb
or
or
insb
cmp
out
inc
cmp
and
incl
pop
pop
fistl
pop
push
and
adc
cli
push
fwait
jo
call
add
xchg
jg
push
lret
adc
pushf
xorl
pop
dec
cli
das
sbb
sub
jl
or
lahf
and
push
pop
or
orl
arpl
inc
cmp
jmp
pusha
jnp
xor
adc
jg
push
mov
jns
and
mov
adc
imul
add
inc
call
sub
dec
ds
dec
inc
xor
dec
dec
notrack
dec
lcall
pop
andl
jp
and
jns
jo
and
lock
cmp
push
pop
lret
sbb
dec
or
mov
pusha
imul
cmp
xor
mov
sti
stos
add
cmp
sub
addb
cmpsl
push
adc
scas
pop
pop
inc
xchg
arpl
leave
sarb
jo
js
pusha
pop
and
fildll
and
and
sub
addr16
mov
pusha
adc
sbb
dec
pushl
push
jle
push
andb
inc
push
mov
mov
adc
pop
pop
pop
popf
jne
and
inc
sbb
decl
and
lahf
fstl
aam
push
lock
and
and
xchg
and
andb
fwait
ret
add
cmpl
test
jp
mov
jo
mov
pusha
ljmp
push
sub
mov
fists
sahf
pusha
jnp
andb
push
mov
xlat
push
cmp
and
push
mov
sub
mov
adc
mov
arpl
inc
sub
xchg
call
push
pushl
inc
mov
incl
and
pusha
arpl
and
dec
sub
jle
mov
es
jnp
and
mov
xor
mov
adc
sbb
fcmove
ret
and
dec
jle
sbb
cmp
incl
and
ljmp
dec
and
jne
and
xor
or
pusha
and
cwtl
pop
adc
inc
and
pop
movups
jmp
adc
and
dec
sbb
pushf
ja
ror
cwtl
pop
popw
bound
and
inc
push
dec
ss
jge
daa
pop
inc
adc
ljmp
and
and
dec
and
cmp
or
dec
pop
dec
adc
xchg
xlat
adc
inc
and
jg
and
and
and
adc
mov
shlb
jg
bound
sti
adc
adc
sbb
fcmovne
and
ret
and
add
xor
adc
arpl
adc
pop
cmp
and
mov
dec
ljmp
inc
ljmp
adc
mov
xchg
mull
arpl
and
repnz
cmp
push
dec
adc
inc
adcl
jle
sbb
cmp
call
jmp
and
mov
push
ljmp
adc
je
jmp
mov
cwtl
pop
jp
inc
jmp
pop
packssdw
addb
or
and
adcl
and
sbb
decl
daa
lcall
mov
add
pusha
adc
dec
ss
and
jg
and
es
inc
fwait
adc
inc
and
cmpsl
add
add
cvtdq2ps
adc
gs
scas
adc
js
and
stos
adc
inc
or
inc
sub
out
adc
inc
push
sbb
xchg
data16
pop
push
add
push
mov
ret
pop
sbb
xor
call
adc
sub
jnp
rol
xchg
xor
adc
push
dec
adc
pop
rcll
out
inc
imul
xor
push
daa
adc
cmp
xor
pusha
adc
adc
add
add
fwait
adc
lahf
lahf
lahf
ficomps
and
push
adc
gs
jg
add
dec
cmpsl
adc
inc
xor
adc
inc
mov
mov
insb
filds
cmp
add
adc
and
popl
add
adc
push
jg
cmp
pusha
add
sbb
sbb
sbb
lcall
adc
inc
add
jo
adc
push
xchg
adc
dec
adc
jo
and
and
and
js
jb
outsb
sub
add
pusha
pop
pusha
daa
pusha
das
pusha
aaa
inc
aas
jno
adc
push
notl
movmskps
adc
push
mov
adcl
jecxz
scas
adc
jg
dec
ss
and
shlb
push
cmp
sbb
sbb
push
push
inc
add
or
pop
adc
and
pop
xor
je
jbe
jmp
pusha
or
inc
add
adc
jae
jae
pop
mull
cmp
sbb
sub
jo
jo
cltd
cwtl
pop
lcall
pusha
adc
inc
add
add
xchg
xchg
xchg
mov
pop
pop
mov
xchg
mov
clc
in
add
call
push
adc
inc
add
and
push
mov
popf
and
ljmp
hlt
faddl
decl
pop
dec
sub
pcmpgtd
cmp
push
sbb
std
jge
dec
push
aad
and
and
inc
mov
roll
jmp
jo
dec
dec
adc
pusha
sub
cmp
add
and
or
cmp
call
lea
in
and
adc
dec
adc
aaa
sbb
add
rcll
inc
jmp
adc
push
or
sbb
pop
add
adc
pop
dec
inc
xor
ljmp
jo
mov
xchg
mov
pop
mov
inc
adc
mov
mov
jmp
dec
inc
jmp
pop
and
pop
xor
and
push
push
xchg
dec
adc
lahf
fs
out
sbb
push
push
dec
decl
dec
test
jg
and
outsb
cmpsl
and
push
adc
ja
jg
adc
adcl
sub
pop
lahf
pop
loope
aaa
jmp
jg
fmulp
mov
xor
and
es
adc
pop
dec
call
orb
outsb
decl
js
and
sub
sbb
and
es
dec
pop
dec
cmp
jmp
sbb
mov
lret
rorl
pushl
and
xchg
pop
sub
pusha
and
pusha
xor
inc
add
adc
mov
xor
cwtl
gs
pop
sbb
lcall
adc
sub
adc
pusha
sub
ret
add
sbb
inc
pop
mov
mov
and
imul
xchg
xchg
addl
bound
inc
adc
inc
xor
test
dec
dec
incl
imul
adc
dec
pop
adc
sub
mov
adc
inc
movhps
pop
pop
push
gs
jg
and
inc
adc
dec
adc
aas
cmp
adc
add
adc
adc
fs
adc
push
adc
sbb
mov
addb
shlb
mov
add
pusha
pop
adc
inc
add
lock
or
clc
inc
or
jl
sbb
add
int
ror
int
rol
mov
mov
test
mov
mov
mull
inc
cmp
sar
mov
and
xor
hlt
mov
inc
or
xor
mov
cltd
push
jae
adc
xor
add
ljmp
jle
and
mov
pop
and
fsubs
adc
dec
add
add
xor
xor
sbb
loop
mov
mov
adc
inc
daa
adc
jmp
jno
add
add
jne
and
adc
xor
adc
and
adc
popa
scas
sti
jmp
in
loop
loopne
adc
add
jne
add
sbb
in
jecxz
inc
or
add
mov
add
sub
incl
and
xor
pop
pusha
jg
dec
addb
mov
mov
mov
lret
loopne
and
cmp
jbe
aas
inc
and
push
inc
add
push
add
lds
sub
add
shll
outsl
push
xor
add
and
mov
into
lret
mov
int
aad
popa
into
cmp
push
adc
and
outsb
cmpsl
add
testb
loope
mov
add
leave
mov
shlb
add
xor
aam
adc
and
add
and
add
mov
leave
mov
enter
mov
jo
pusha
lahf
adc
xor
stc
and
sub
and
mov
mov
and
sahf
inc
add
ja
add
xor
or
filds
pop
mov
in
mov
adc
sbb
add
cmp
mov
in
and
pusha
adcb
inc
xor
sbb
add
sub
pusha
add
add
sub
and
inc
test
adc
sti
adc
pusha
add
mov
xor
adc
inc
add
je
and
and
int
pop
jns
cmp
add
jae
loope
stc
testl
in
loopne
sub
add
pop
add
pop
shlb
iret
mov
in
jmp
repnz
add
push
xor
mov
rclb
mov
inc
add
hlt
and
jmp
xor
push
sub
add
xor
popa
pop
dec
ficoms
into
fiadds
orb
mov
cld
mov
mov
xor
adc
inc
add
scas
add
and
adc
inc
add
outsb
dec
add
scas
add
adc
mov
adc
shrb
or
mov
adc
push
adc
inc
and
sbb
push
inc
dec
aaa
flds
loopne
adc
cmp
or
add
mov
dec
inc
cmp
popa
cmp
idiv
add
lock
ja
mov
repz
inc
jnp
push
loop
adc
imul
dec
dec
dec
cmp
pop
sbb
mov
jae
fists
in
sahf
mov
mov
iret
dec
addb
mov
mov
sti
scas
sti
push
jl
mov
in
push
jns
lea
mov
call
jne
sub
aaa
popf
mov
repnz
mov
mov
sar
lret
sbb
mov
pop
adc
adc
ret
loope
lods
notb
jmp
outsb
xchg
loop
daa
sbb
in
add
jno
loopne
push
push
bound
pop
mov
in
insl
rorl
cmc
andl
push
jns
insb
xchg
fisttps
mov
ret
sti
movsb
mov
xor
rcrl
add
lods
jmp
insb
sarb
pusha
xchg
stos
ret
sar
sar
scas
repnz
lods
in
pop
xchg
inc
dec
add
test
mov
inc
outsl
aad
sahf
loopne
mov
ljmp
in
cli
idiv
inc
fdiv
int
not
in
fucomi
stc
lock
ret
clc
sti
incb
add
in
hlt
cld
iret
fdivrp
out
sti
ljmp
in
cli
stos
idiv
jecxz
sti
cmc
fsubl
lret
add
push
in
adc
mov
add
cmc
mov
shrl
stos
sti
cmpsb
ret
bnd
loope
mov
movsl
mov
div
test
inc
lea
loope
jmp
jns
push
mov
dec
xor
inc
add
std
ljmp
dec
add
cmp
addl
adc
test
and
insl
insl
insl
scas
jns
jo
mov
out
in
icebp
idiv
jmp
imul
sti
adc
adc
dec
cltd
or
aas
inc
inc
je
adc
rclb
inc
push
mov
cmp
frstor
pop
inc
sbb
scas
adcb
push
inc
bound
sti
inc
or
stc
mov
xchg
jl
ljmp
popf
mov
test
imulb
in
scas
in
mov
sti
fsubrp
cld
rcl
sti
std
mov
repnz
repz
fincstp
in
out
hlt
std
int3
fxam
sti
mov
clc
je
in
jg
je
in
mov
sti
fwait
mov
xchg
mov
ja
jmp
ja
cmpsl
mov
mov
out
mov
inc
imul
scas
lock
mov
cwtl
mov
addr16
fbld
fsubl
std
incb
mov
xchg
inc
push
and
or
push
push
inc
inc
push
inc
xor
xor
arpl
adc
stc
add
or
push
add
sbb
or
add
or
mov
inc
jle
adc
pop
enter
test
std
xor
aam
bound
pop
push
stc
inc
fmul
mov
movb
add
orl
jle
pop
ret
dec
jecxz
push
pop
insb
stc
inc
loopne
roll
sbb
xlat
or
scas
call
and
xchg
call
push
mov
push
bound
sahf
inc
and
icebp
inc
or
inc
jle
ret
and
fdivs
pop
xchg
insl
pop
mov
int
xchg
adc
dec
mov
mov
outsl
imul
mov
or
cs
xor
test
aaa
fmull
xor
push
pop
movsb
and
test
cmc
push
jmp
inc
lods
pop
dec
aas
xlat
cmpsb
popa
mov
lcall
xchg
dec
add
or
scas
outsl
xchg
mull
out
popf
xor
jl
repnz
repz
mov
jae
stc
cli
xor
sub
dec
mov
addr16
fmulp
popf
stc
out
out
filds
jno
test
test
push
js
add
pop
adc
or
dec
sbb
mulb
sbb
test
data16
jbe
sbb
test
push
lds
inc
push
xchg
sub
test
inc
or
push
mov
or
pop
pop
cmp
mov
mov
jl
ret
inc
xchg
inc
mov
addb
pop
pusha
sub
and
in
and
addb
xchg
std
js
gs
jns
add
cbtw
jno
mov
xchg
lcall
ret
push
and
aaa
fstpt
inc
sbb
orb
push
push
xchg
aas
test
inc
shlb
xchg
hlt
xor
inc
cld
pusha
mov
ljmp
add
adc
shrb
jge
and
sub
icebp
and
sub
rorb
push
loop
sub
adc
jmp
push
add
adc
jbe,pn
adc
loop
add
stc
jae
add
add
nop
mov
cmp
add
aam
icebp
mov
cmp
pop
inc
xchg
push
cmp
jns
in
nopl
ret
adc
jb
test
sete
lock
inc
xchg
sbb
adc
mov
push
pop
cmp
jmp
outsb
jo
jb
rorl
sbb
jecxz
mov
and
dec
mov
mov
fstpt
fs
mov
ja
or
sub
and
and
imul
xor
lea
lds
pop
add
mov
xchg
mov
and
faddl
add
add
adc
jmp
xlat
scas
sbb
sub
and
cld
test
or
stc
stos
inc
insl
mov
jne
push
inc
and
ljmp
cltd
cmp
sub
jae
popl
stc
mov
and
and
aas
push
adc
sbb
and
cmp
out
cmp
addb
xchg
cmp
aas
rcll
int3
xor
inc
pop
adc
and
es
repz
adc
lock
sbb
mov
subb
inc
aas
mov
mov
inc
movlps
inc
movsb
add
sub
add
or
xor
jl
xchg
in
fs
inc
popl
cltd
mov
mov
and
add
ret
test
movsb
adc
add
cmpsb
adc
sbb
addl
sbb
xchg
mov
repz
inc
xor
call
les
punpckhbw
nop
adc
sbb
xor
dec
add
mov
add
inc
mov
lds
shrb
scas
sbb
pop
pop
sbb
or
cmp
shll
sbb
stos
sub
or
dec
addl
mov
cli
and
mov
xchg
imul
add
pop
add
roll
sub
and
dec
xor
sarl
push
mov
push
cmp
mov
in
jle
dec
mov
dec
xchg
daa
push
sahf
les
jo
test
into
popf
cmp
xchg
push
add
jle
mov
iret
aam
push
rcll
sbb
sti
jne
mov
mulb
lcall
xchg
cs
xor
out
fistpll
rolb
sub
out
loopne
outsl
or
push
mov
mov
mov
and
dec
cmpsb
insb
fxch
popf
int
aas
ffreep
mov
repz
fisubrl
dec
xlat
lods
pop
stos
sahf
pop
xlat
inc
imul
scas
mov
mov
nop
sub
cmp
std
fadds
into
inc
rol
xor
pusha
leave
xorl
ja
std
mov
daa
push
js
ffreep
mov
pop
inc
shlb
out
inc
lcall
pop
aas
std
cmc
xchg
mov
add
aas
pop
push
ss
nop
inc
cld
or
inc
adc
dec
adc
pop
push
inc
add
cmp
add
enter
add
hlt
inc
jbe
adc
xor
adc
mov
ror
call
inc
rcll
add
fcoms
adc
int
ret
imull
and
inc
and
mov
shlb
bound
ret
or
pop
xadd
loopne
and
and
lock
adc
add
add
lret
into
int3
in
mov
add
adc
std
jg
or
mov
ja
inc
pop
jbe
add
enter
rcl
mov
mov
mov
pusha
adc
rcl
mov
pusha
adc
xor
xlat
jmp
cli
jge
or
adc
shlb
imul
add
insl
add
outsl
add
hlt
add
icebp
add
loopne
icebp
add
adc
shll
pop
aad
lret
ret
mov
xlat
add
xchg
and
and
das
sub
add
adc
push
add
inc
inc
fistl
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
sub
add
and
add
and
add
popa
jmp
cmp
adc
test
mov
add
and
test
sub
adc
sub
sub
and
and
mov
cmp
add
pop
jno
add
cltd
add
gs
push
cmp
and
mov
int3
inc
or
xchg
adc
jl
xor
shlb
jbe
add
mov
cmp
and
adc
inc
lds
loope
ret
adc
xor
iret
add
mov
shll
and
mov
cmp
cmp
add
daa
adc
add
sub
cmp
das
jge
cmp
add
xchg
pusha
ret
popa
xchg
add
add
outsl
and
pop
je
add
add
ret
sti
mov
loopne
jbe
cmp
add
std
cmp
and
mov
sbb
push
shl
rcl
vunpcklps
lret
inc
add
xchg
inc
adc
inc
and
popa
mov
loopne
adc
movsb
xor
add
add
dec
adc
outsb
add
test
pusha
cltd
bound
xor
add
outsb
add
adc
xor
arpl
mov
jmp
adc
rclb
pop
cmp
adc
inc
add
or
mov
shll
out
jg
pusha
movsb
and
add
add
jns
pop
addr16
adc
add
jle
jnp
adc
aad
and
and
les
add
pop
js
addr16
and
add
int3
sbb
sbb
and
add
mov
mov
add
jp
xor
add
into
fidivs
sbb
xor
add
bound
ret
push
adc
inc
add
lret
inc
sub
jp
add
dec
xor
testb
pop
sub
add
or
lahf
mov
hlt
adc
shrb
add
imul
stos
popa
push
add
mov
fcmove
fisttpll
ror
stos
sarb
adc
adc
dec
or
fiaddl
and
ds
add
jmp
ret
add
int3
add
testl
add
cmp
rcl
or
adc
inc
and
out
loopne
adc
xor
sbb
sub
cmp
add
cmp
inc
dec
imul
push
add
in
sub
adc
push
add
sbb
mov
in
in
hlt
mov
inc
pop
rcl
jae
add
dec
add
push
add
and
arpl
sbb
xor
and
cmp
and
add
inc
inc
and
inc
and
loopne
adc
mov
xor
or
and
xor
cmp
add
jg
and
insb
adc
sub
sub
pusha
fwait
adc
mov
adc
loop
or
push
xor
lods
and
popa
notb
fsubrs
shrb
jns
mov
push
cmovo
adc
inc
add
cld
dec
mov
std
inc
add
ljmp
adc
inc
add
int
add
int3
inc
add
lret
inc
add
lock
xor
icebp
inc
add
repnz
add
repz
add
hlt
inc
add
clc
inc
add
cli
inc
add
sti
inc
add
cld
inc
add
std
inc
add
xor
or
add
incb
adc
xor
or
shlb
call
loopne
adc
jmp
and
pusha
add
and
pop
rolb
jo
sub
add
add
adc
adc
and
sbb
not
mov
mov
cmp
das
ja
ja
push
jae
xor
xor
arpl
pusha
and
lret
ret
pusha
sub
mov
mov
and
and
enter
mov
mov
movsl
cmp
shlb
ljmp
sub
add
fisubl
mov
rol
pusha
push
adc
aam
mov
jecxz
not
mov
mov
inc
cmp
mov
mov
mov
pop
mov
mov
shrb
dec
add
pop
int
mov
mov
lahf
bound
adc
mov
les
fisubl
adc
gs
add
mov
in
mov
iret
mov
inc
adc
les
adc
arpl
mov
xor
mov
adc
xlat
aam
scas
and
sub
mov
mov
and
and
adc
aam
mov
cmp
and
and
sub
pusha
inc
adc
rol
mov
popa
jg
or
and
cmpsl
mov
les
adc
clc
ret
push
and
sbb
xor
andb
xor
pusha
and
cltd
push
sub
iret
pusha
push
sbb
test
int
mov
pusha
pop
inc
lret
adc
movl
mov
pusha
movsb
adc
xchg
adc
mov
inc
xor
mov
adc
mov
rcr
ret
stos
pusha
or
sub
fidivs
loop
mov
mov
sub
adc
mov
das
adc
pop
aam
rcl
aad
rol
dec
add
push
ret
stos
shlb
loope
mov
in
pusha
stos
loopne
andb
mov
adc
in
ret
jmp
ret
pusha
inc
pop
into
call
pusha
sbb
mov
adc
mov
sbb
adc
fidivrs
and
mov
fcmovbe
mov
adc
shll
xor
shlw
xor
push
adc
enter
mov
int
enter
outsl
popf
adc
adc
mov
mov
lret
int
clc
xlat
not
fbld
adc
pusha
and
jmp
push
adc
cmp
outsb
es
add
sub
notb
and
mov
jmp
fstpt
xor
js
and
aad
cli
rcl
shlb
adc
ret
arpl
sbb
mov
iret
mov
mov
mov
ret
ror
subb
test
adc
mov
shll
cli
mull
mov
sbb
inc
mov
adc
aaa
cmp
xor
cmp
cmp
ror
iret
in
mov
push
gs
jo
jae
outsb
popa
xor
and
adc
mov
adc
lahf
sub
mov
adc
inc
movsl
adc
daa
test
aaa
inc
jecxz
xchg
adc
inc
or
outsb
dec
inc
ja
outsl
dec
adc
dec
adc
xor
add
xor
sub
push
pusha
add
or
ljmp
add
ss
sub
mov
xbegin
pop
scas
cmp
add
popf
xor
push
pusha
mulb
add
add
cmp
outsb
push
cmp
pop
pusha
data16
add
and
add
xchg
cmpsl
and
xor
adc
in
in
and
add
xor
and
inc
push
adc
sahf
aas
adc
and
aas
adc
rolb
and
mov
inc
add
inc
add
push
bound
cmc
inc
sub
mov
shrb
adc
mov
add
dec
add
cli
dec
add
dec
add
inc
add
pop
dec
add
jl
add
add
jge
sbb
jg
add
inc
add
fadds
rolb
adc
or
addb
aaa
pusha
pop
inc
pop
adc
inc
add
mov
mov
dec
add
mov
add
cs
es
and
adc
cli
inc
add
and
ja
add
sbbl
and
inc
dec
xor
add
push
inc
add
sub
rolb
sub
dec
jno
adc
or
push
add
push
adc
pop
sub
jne
adcl
pop
sub
and
adc
pop
adc
and
lret
daa
xor
insl
mov
lock
or
pop
daa
stos
add
adc
test
out
adc
or
add
or
adc
adc
jp
mov
inc
add
outsl
adc
stos
pusha
lcall
sub
xor
adc
incl
jo
pop
add
adc
ss
test
adc
sub
add
xor
inc
adcb
shrb
sub
add
mov
mov
das
add
add
inc
orl
add
xchg
add
addb
aas
das
and
adc
inc
and
insb
jne
addb
sub
pop
adc
inc
pop
sub
push
mov
and
inc
aas
sub
and
adc
cmp
pop
add
add
adc
mov
adc
xor
add
pusha
and
cmpsl
add
add
xor
inc
add
daa
add
xor
add
in
add
inc
xchg
xor
adc
cmp
jg
adc
add
pusha
inc
das
add
enter
add
rolb
add
nop
shlb
add
incl
adc
filds
adc
dec
movsl
push
daa
add
andl
adc
inc
sub
adc
add
fadds
adc
add
sarl
loopne
aaa
xor
adc
pop
xor
adc
pop
inc
iret
xor
or
call
ret
adc
xor
and
adc
inc
jg
pop
add
clc
inc
pop
xor
add
addb
mov
pusha
pop
xor
mov
adc
lahf
add
js
xor
aaa
add
mov
aaa
outsw
adc
sub
adc
cmpsb
xchg
clc
sub
pop
adc
sub
add
rolb
daa
add
daa
add
xor
add
adc
pop
cmp
add
les
movl
incl
inc
aaa
xor
add
rolb
arpl
pop
inc
xchg
sub
or
xadd
sub
pusha
pop
adc
pop
xor
add
clc
dec
pop
adc
lds
dec
add
and
aas
xor
dec
das
out
or
add
scas
add
adc
xor
inc
xor
add
jg
adc
push
add
pop
or
adc
inc
xchg
xor
add
jo
pop
sub
add
adc
inc
pop
xor
add
call
dec
xor
add
add
aaa
add
push
inc
pop
adc
sub
or
adc
inc
adc
sub
add
adc
add
adc
inc
pop
xor
adc
insl
cmp
adc
xor
or
xor
aaa
add
push
sub
add
adc
je
xor
pop
adc
jne
lahf
add
pusha
inc
pop
xor
pop
cmp
adc
inc
jg
dec
add
mov
aaa
add
and
xor
adc
dec
add
inc
inc
pop
xor
add
xor
xor
add
addb
iret
add
nop
test
xchg
xor
xor
pop
cmp
add
call
loopne
xor
add
mov
adc
inc
pop
xor
jg
adc
xor
adc
mov
xlat
or
xor
add
sub
pop
sub
add
add
xor
add
sub
xor
add
sub
add
mov
ja
inc
push
adc
mov
inc
push
inc
das
adc
sub
orb
popa
push
adc
lret
or
mov
mov
pop
sub
xor
add
push
rclb
testl
add
out
adc
add
lock
pop
xor
add
mov
adc
mov
jo
push
pop
das
das
add
add
xor
add
xor
adc
cmp
add
int3
xor
adc
lds
fists
adc
sub
add
adc
inc
pop
add
add
int
cmpsl
add
add
loopne
xor
adc
das
xor
add
loopne
daa
adc
xor
adc
xlat
ss
add
xor
xor
add
and
aaa
add
push
inc
aaa
adc
aaa
add
inc
aaa
aaa
add
test
aaa
adc
pusha
aaa
aaa
add
adc
add
xor
xor
add
mov
inc
pop
adc
das
add
fidivl
pop
add
dec
add
xor
das
add
loopne
pop
adc
xor
adc
xor
xlat
push
inc
xor
add
inc
inc
das
xor
add
pop
xor
add
xlat
pop
adc
xor
adc
cmp
add
test
add
aas
add
dec
xor
add
call
aaa
cmp
xor
add
in
cmp
aaa
add
out
inc
add
das
add
adc
add
inc
inc
pop
cmp
add
mov
xlat
add
mov
sarb
xchg
adc
das
testl
xor
adc
in
add
in
add
stc
inc
add
pop
dec
add
sbb
rorb
xchg
dec
add
rorl
inc
add
or
mov
or
loopne
and
push
ret
inc
add
push
inc
add
adc
inc
add
dec
inc
add
loopne
sbb
mov
notl
dec
add
inc
pop
adc
push
cltd
mov
dec
add
mov
add
inc
add
dec
movsb
inc
pop
inc
add
xchg
inc
daa
pusha
jnp
nop
pusha
inc
add
inc
nop/reserved
mov
dec
add
inc
punpcklbw
adc
pusha
dec
adc
sar
mov
adc
push
roll
xor
add
loopne
imull
add
cmp
inc
push
dec
adc
cmovl
inc
sarb
push
adc
rcll
add
pop
inc
cmp
and
xor
sub
xor
adc
inc
sbb
add
rol
adc
add
movl
adc
inc
add
movl
sub
add
rolb
lret
adc
adc
and
add
mov
inc
scas
xor
add
and
arpl
adc
inc
and
pusha
dec
ds
add
xor
add
add
inc
inc
jnp
aam
sub
add
jge
inc
inc
adc
inc
add
adc
adc
push
or
xor
add
adc
xor
add
adc
stos
cmp
add
nop
inc
and
xor
add
mov
add
adc
jbe
mov
adc
cmpl
add
add
add
orb
addl
iret
adc
inc
xchg
adc
inc
pop
adc
mov
aas
xchg
add
add
add
mov
pop
xor
add
and
adc
pusha
ret
adc
aaa
add
add
rclb
test
sub
add
adc
adc
ret
arpl
adc
adc
add
rolb
sub
add
nop
inc
adc
add
inc
pop
dec
dec
adc
fbld
aas
stos
add
and
xor
sub
add
loope
add
testl
jo
add
push
cmc
inc
das
inc
movups
adc
add
add
rolb
adc
inc
movups
push
inc
pop
adc
inc
pop
shr
sbb
xor
add
out
add
mov
mov
inc
add
leave
inc
aaa
adc
inc
add
cmovae
fldl
adc
enter
inc
pop
sbb
les
call
inc
add
sbb
pop
adc
testl
sbb
dec
add
adc
sti
push
dec
sub
xlat
or
pusha
inc
mov
inc
add
add
pusha
mov
adc
inc
arpl
adc
or
push
add
dec
dec
and
and
adc
int3
movups
adc
inc
xor
add
sub
adc
inc
xor
push
adc
and
mov
cmpsl
sub
add
adc
mov
sub
adc
mov
xor
inc
xor
adc
adc
adc
xor
and
rorb
pop
daa
daa
add
popa
pop
adc
xor
inc
ja
fs
pop
add
mov
xor
and
push
adc
inc
push
inc
add
jo
inc
adc
test
jg
daa
add
push
inc
and
sub
add
nop
out
dec
xor
xchg
inc
xor
or
adc
adc
add
inc
icebp
push
in
fnstsw
push
and
daa
adc
adc
adc
call
das
unpcklps
aas
dec
add
inc
aaa
cmp
add
adc
dec
xor
add
pusha
fidivs
push
add
adc
aaa
xor
aaa
xor
inc
pop
adc
das
pop
add
adc
cmp
addr16
add
inc
aaa
aaa
add
iret
es
out
inc
xchg
inc
add
and
inc
xlat
das
pop
daa
adc
lock
adc
xor
sbb
nop
inc
dec
xor
addr16
add
mov
pop
cmp
adc
add
incl
inc
aaa
adc
shr
jb
test
incb
rclb
lahf
pusha
add
fs
add
inc
pusha
add
pop
add
pusha
add
add
adc
mov
aaa
mov
inc
and
xor
push
adc
adc
inc
xorl
adc
int
dec
add
clc
inc
add
inc
aas
adc
inc
add
adc
movlps
inc
inc
adc
pusha
jmp
call
xor
jae
add
adc
nop
and
adc
dec
inc
add
dec
mov
adc
popa
inc
or
pop
inc
cmp
sahf
incl
xor
add
rolb
call
xor
adc
jg
pusha
aaa
adc
push
arpl
aaa
add
pusha
imul
add
pop
inc
aaa
adc
xchg
adc
dec
add
shrb
add
outsl
mov
inc
push
adc
sub
xor
daa
adc
aas
add
aas
push
adc
adc
and
loop
xor
inc
xor
inc
xor
adc
loopne
ja
pop
add
pop
add
xor
sbb
ljmp
rcll
nop
in
inc
inc
das
mov
inc
add
pop
add
mov
pop
add
fcmovne
adc
inc
add
adc
pusha
add
out
and
mov
push
inc
push
inc
add
or
pusha
push
xorl
popa
xchg
adc
add
rolb
pop
add
xor
movl
pop
add
loopne
das
xor
ss
es
repz
cmp
inc
mov
fs
ja
adc
imul
dec
inc
add
es
or
lock
add
nop
dec
inc
xor
add
jo
pop
xor
inc
add
das
pop
add
mov
das
pop
add
and
add
daa
adc
inc
mov
cmp
add
xchg
adc
inc
add
xchg
sub
adc
adc
ja
add
ja
push
sbb
push
cmp
incl
adc
pop
sbb
jae
cs
sbb
nop
test
lock
push
adc
mov
adc
adc
adc
sub
add
popa
inc
adc
sub
add
inc
inc
adc
mov
add
inc
inc
adc
sub
add
inc
inc
adc
and
adc
adc
sub
add
dec
inc
adc
sub
add
push
inc
adc
sub
add
push
inc
adc
loopne
fs
and
adc
adc
and
xor
xchg
es
add
inc
inc
adc
pusha
pop
adc
daa
pop
add
dec
inc
adc
and
sub
cwtl
es
add
dec
inc
adc
and
sub
pop
add
dec
inc
adc
and
sub
pop
add
pop
inc
adc
test
push
inc
adc
pusha
pop
adc
daa
pop
add
push
inc
adc
and
pop
add
pop
inc
adc
and
daa
pop
add
pusha
inc
adc
and
es
pop
xor
add
adc
fisttps
adc
movl
add
fisttps
adc
adc
mov
adc
mov
inc
add
mov
aas
stos
push
popl
push
fdiv
xor
xchg
add
push
inc
cmpsl
cmp
jbe
cmp
loopne
rcl
mov
jl
xor
out
cmpsl
dec
aaa
fnstcw
cmpsl
push
lret
mov
inc
mov
in
sahf
cmp
movsb
aas
mov
daa
sarb
sar
mov
and
jnp
scas
inc
loope
test
fs
adc
adc
jo
xor
pop
adc
loope
lahf
incl
loopne
and
cmp
add
pop
add
lahf
add
pusha
daa
pop
add
lahf
add
andb
add
pop
inc
adc
adcb
stos
es
add
pop
mov
daa
pop
add
iret
add
loopne
pop
add
bound
pusha
add
scas
pusha
add
adc
sub
cmpb
mov
adc
dec
sub
add
adc
adc
jo
inc
xor
or
lock
xor
xor
pop
xor
or
cmp
xor
adc
or
nop
mov
add
adc
adc
xor
es
pop
sub
popa
movlps
inc
xor
adc
inc
pop
and
and
and
mov
xlat
adc
ds
mov
and
and
add
add
sub
push
scas
adc
repz
adc
adc
inc
daa
cmp
add
inc
roll
out
add
adc
add
out
adc
aaa
fs
inc
inc
jecxz
daa
and
sub
hlt
xor
xor
pop
xor
adc
xor
das
xor
inc
inc
sub
and
xchg
loopne
ljmp
pop
add
adc
inc
pop
xor
adc
iret
jne
adc
pop
xor
add
adc
inc
add
add
ja
adc
inc
outsl
cmp
and
jbe
mov
ja
bound
cmpsl
add
push
inc
and
xor
add
and
add
cmpsl
add
pusha
inc
aaa
bound
out
adc
pusha
adc
and
bound
punpckldq
xlat
and
mov
jae
xchg
ja
outsl
aaa
jbe
and
and
fbld
and
mov
test
mov
adc
inc
add
mov
outsb
inc
outsl
and
push
bound
cmpsl
and
jo
ja
and
ja
and
fwait
arpl
bound
adc
and
and
dec
and
and
push
and
inc
ja
imul
outsl
xchg
and
dec
and
and
and
popa
add
pop
cmp
loope
popa
xor
loope
and
test
add
and
adc
inc
add
icebp
inc
add
imul
adc
stos
adc
incb
adc
inc
add
clc
inc
add
lock
add
loopne
add
rolb
andb
add
lds
push
inc
inc
pop
add
test
lds
jnp
jae
push
or
jle
lahf
push
cld
jae
insl
push
bound
sub
bound
bound
inc
dec
and
mov
aas
add
push
dec
xor
cmp
andb
sbb
or
inc
sub
aaa
sbb
adc
adc
ret
adc
adc
or
fldl
sbb
aas
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
shll
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
aas
add
xor
or
cmp
add
xor
bswap
aas
incl
dec
mov
jae
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
insb
pushf
pop
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
dec
mov
ja
call
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
fs
push
stos
imul
add
xor
push
into
incb
shll
or
inc
mov
mov
jle
inc
mov
lea
jge
loop
shrb
out
push
fisubs
loope
shrl
bound
pop
mov
insl
popf
pop
or
cmp
push
testb
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
sub
sbb
and
push
pop
cmpsb
xchg
push
test
gs
push
out
bound
push
aam
mov
jne
daa
inc
pop
sub
repz
cmpl
clc
cli
ss
add
sbb
and
xor
xor
xor
pop
adc
cmp
mov
sub
add
andb
pop
add
jo
inc
adc
pop
add
adc
ja
jg
adc
mov
adc
adc
call
adc
inc
xor
inc
inc
xor
inc
ja
xchg
xor
add
cmp
cld
dec
sub
adc
push
aaa
add
push
inc
aaa
pusha
call
hlt
sub
add
mov
out
push
inc
das
adc
jg
aaa
jg
pusha
mov
sub
inc
cmovo
adc
daa
divl
cmpsl
inc
addr16
pop
adc
rclb
xor
dec
add
xor
adc
dec
xor
add
pushl
adc
xor
adc
rclb
arpl
cmp
int3
mov
mov
pop
adc
xor
pop
adc
mov
pop
add
pop
sub
add
lock
popl
adc
lret
adc
sub
add
leave
mov
dec
cmp
lret
mov
mov
popl
adc
pop
xor
pop
xor
add
ljmp
xor
fildl
mov
pop
xor
add
iret
inc
and
sub
adc
adc
inc
or
shrb
inc
adc
inc
sbb
loopne
add
sbb
push
fists
lds
or
pusha
inc
jecxz
xor
adc
repnz
sub
adc
inc
punpcklbw
mov
dec
add
and
xor
inc
add
inc
add
stos
and
add
push
inc
repz
sub
or
pusha
add
adc
add
adc
or
loopne
pop
xor
add
ja
push
adc
ds
pop
xor
adc
addb
call
add
lahf
add
mov
iret
cmp
das
inc
xor
sbb
add
xchg
xchg
incl
xor
inc
adc
inc
inc
xor
pop
adc
pop
sub
and
push
rclb
add
aam
popf
dec
aaa
and
aaa
das
pop
add
add
cmp
test
inc
inc
pusha
pop
adc
sub
add
and
add
out
inc
adc
add
fildll
scas
add
xor
add
jo
pop
sub
add
mov
pop
cmp
adc
add
scas
add
loopne
mov
mov
pop
xor
adc
inc
pop
cmp
adc
cmp
outsb
inc
xor
adc
add
mov
adc
inc
xor
adc
xor
inc
das
xor
xor
adc
inc
xor
adc
xor
pop
add
inc
imul
add
outsl
push
sub
loopne
adc
adc
addb
nop
inc
stos
adc
inc
or
sub
add
sub
adc
ds
adc
xchg
mov
cmp
adc
mov
add
adc
sbb
movsl
dec
inc
xchg
es
xor
pusha
add
pushl
adc
cwtl
inc
das
sub
add
adc
xchg
inc
xor
and
adc
ss
add
cmp
sub
inc
xor
adc
rolb
push
push
adc
and
push
inc
das
xor
inc
nop
repz
add
jo
das
and
lock
add
adc
xor
pop
adc
sub
add
inc
pop
adc
push
inc
inc
pop
adc
pop
inc
xlat
xor
add
adc
cmpsb
pusha
pop
adc
call
or
out
adc
mov
and
addb
mov
push
shlb
mov
lock
push
fdivrs
mov
inc
les
fs
xchg
push
aam
mov
hlt
or
dec
int3
sub
insb
in
sbb
pop
fdivrl
jl
add
adc
jb
or
push
sbb
jp
push
xchg
cmpsb
data16
xchg
push
ss
testb
dec
into
cs
outsb
out
push
sahf
pop
fidivrs
mov
inc
shll
popa
loope
xchg
push
shll
mov
icebp
or
imul
cmp
inc
lds
xchg
push
aad
mov
cmc
or
lods
insl
in
sbb
mov
inc
ret
and
push
shll
mov
repz
imul
fwait
pop
fstpt
mov
inc
daa
cmpsl
addr16
xchg
push
xlat
aaa
mov
testl
scas
outsl
out
pop
lahf
pop
fistpll
mov
nopl
shlb
pusha
mov
lock
test
adc
xchg
aam
movsb
in
je
hlt
or
enter
fsubrs
push
mov
int3
sbb
pushf
fsubrl
lods
in
cmp
mov
rcll
xchg
shll
popa
mov
icebp
add
push
xchg
aad
movsl
in
jne
cmc
or
leave
sbb
fldcw
imul
int
pop
popf
jge
std
add
ret
xchg
shlb
bound
repnz
inc
xchg
push
push
xchg
data16
out
jbe
testb
mov
sbb
fisubrl
push
ljmp
mov
push
pop
sahf
fisubrs
outsb
scas
out
jle,pt
incb
inc
add
push
xchg
shll
arpl
repz
inc
xchg
pop
push
xchg
xlat
daa
cmpsl
out
ja
testl
pop
fldt
imul
cmovg
fildll
outsl
scas
out
aas
jg
incl
adc
xor
pusha
jo
nop
mov
lock
and
inc
push
popa
jno
xchg
mov
icebp
add
and
inc
push
bound
xchg
mov
repnz
and
inc
push
arpl
xchg
mov
repz
and
inc
push
fs
xchg
movsb
mov
aam
hlt
add
push
gs
xchg
movsl
mov
aad
cmc
push
push
es
push
data16
xchg
cmpsb
mov
out
pop
pop
daa
aaa
inc
push
addr16
xchg
cmpsl
mov
xlat
out
or
sub
dec
pop
push
mov
or
sub
dec
pop
imul
fldl2t
stc
or
sub
dec
pop
push
mov
ljmp
pop
imul
stos
mov
or
sub
dec
pop
insb
jl
pushf
lods
mov
or
pop
insl
jge
popf
lods
mov
push
push
cs
pop
outsb
jle
sahf
scas
mov
nopl
aas
dec
pop
outsl
jg
lahf
scas
mov
insl
jmp
mov
or
adc
and
pop
inc
xchg
adc
in
adc
ret
pop
adc
xor
xor
subb
or
dec
inc
and
inc
inc
and
adc
dec
and
and
push
dec
push
mov
bound
orb
arpl
and
push
add
dec
mov
dec
push
subb
imul
push
pop
and
xchg
outsl
inc
inc
and
adc
jo
inc
and
adc
pop
adc
pop
adcb
jae
dec
xorb
jae
pusha
addb
push
inc
and
sub
je
mov
dec
xorb
push
dec
and
jnp
add
push
pusha
add
into
in
call
and
sub
pop
sub
or
cmp
loopne
xor
add
pusha
pop
and
nop
jbe
and
and
imul
pop
loopne
push
dec
popa
outsb
add
bound
dec
popa
jb
inc
jo
inc
pop
adc
add
outsb
inc
add
adc
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
dec
dec
add
incl
jb
jb
fs
imul
jo
gs
gs
rorl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
lret
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
and
outsb
cmpsl
outsl
ss
push
imul
push
fstpt
jmp
sbb
insb
popa
je
and
xor
xor
inc
outsl
jo
jb
addr16
cmp
cmp
inc
lret
and
insb
gs
push
sti
jmp
jg
jnp
ja
jae
addr16
pop
pusha
mov
jl
push
push
jnp
gs
jnp
push
gs
and
sub
adc
arpl
jecxz
scas
aas
int
loopne
sub
pusha
in
loopne
and
das
loopne
in
loopne
and
das
loopne
pusha
add
mov
es
add
sub
jae
out
pusha
jmp
cmp
imul
and
jecxz
adc
pop
and
adc
adc
inc
inc
jne
jno
and
cld
jecxz
add
adc
pop
test
cmp
adc
pop
pop
adc
pop
mov
add
mov
jecxz
sub
add
add
xor
xor
out
scas
loope
loope
pusha
add
pusha
add
and
lret
adc
adc
ja
sub
push
add
inc
test
adc
aad
sub
aas
xor
adc
adc
adc
loope
fisttps
repz
dec
xor
adc
lock
dec
xor
xor
das
xor
and
sub
and
inc
les
xchg
aas
adc
mov
pop
jle
adc
adc
adc
xchg
out
daa
das
add
pop
pusha
das
adc
daa
das
add
push
inc
adc
xchg
outsl
daa
das
add
pop
pusha
das
and
xor
das
adc
adc
xchg
out
pop
pusha
das
loopne
loopne
xor
dec
xor
adc
pop
push
adc
hlt
inc
add
aam
sub
add
inc
push
and
outsb
xor
add
rcr
fists
adc
inc
jae
sub
adc
sarb
cmp
adc
sbb
cmp
adc
icebp
dec
iret
adc
dec
add
adc
xor
es
adc
jo
xor
adc
sbbb
add
rolb
add
adc
pop
adc
pop
adc
hlt
xor
pop
sbb
dec
add
cmc
dec
add
inc
add
adc
bound
adc
inc
pop
pusha
add
push
inc
add
sub
adc
add
imul
xchg
inc
inc
adc
inc
add
aad
add
out
add
inc
sub
lcall
adc
pop
dec
xor
iret
add
adc
pop
mov
adc
jae
sub
adc
jnp
es
adc
aas
sub
add
and
push
scas
shll
testl
jns
cmpsl
bound
adc
inc
adc
and
adc
pop
pusha
xor
pop
add
mov
adc
inc
aas
pusha
add
cvtpi2ps
jnp
pop
add
add
pusha
add
xchg
rolb
ja
pusha
pop
adc
rolb
pop
add
repz
pop
add
test
sub
add
std
rolb
pop
add
repnz
pop
add
inc
add
pop
add
adc
cmpb
andb
add
push
and
imul
pop
add
in
inc
inc
pusha
add
adc
inc
adc
orl
inc
inc
pusha
add
pop
add
and
pusha
add
pop
add
and
pusha
add
adc
inc
adc
and
adc
inc
adc
sbbb
inc
xchg
hlt
rolb
daa
daa
pop
add
clc
rolb
pop
xor
add
cmpb
add
decl
sbb
xchg
xor
adc
rcrb
inc
das
xor
push
xor
adc
inc
das
xor
pop
adc
pop
xor
adc
inc
sub
sub
cmp
jg
adc
into
cmp
add
add
xor
jg
jg
xor
add
mov
add
mov
add
iret
push
and
adc
fildl
adc
roll
fwait
add
add
gs
sbb
adc
xor
dec
add
push
adc
sub
add
inc
add
ds
and
add
add
mov
add
and
sub
add
jo
adc
and
aaa
jnp
jmp
cwtl
call
and
inc
add
jo
dec
xor
add
xor
dec
xor
add
pusha
inc
pop
xor
adc
sbb
xor
add
loopne
ja
mov
add
cmp
aas
xchg
add
add
push
or
mov
loope
push
es
or
or
xchg
adc
pop
pop
adc
inc
adc
lea
pop
add
or
pusha
add
adc
inc
adc
mov
pop
inc
adc
inc
adc
adcb
sub
or
adc
lahf
adc
es
add
sbb
adc
xchg
adc
es
add
pop
inc
adc
and
push
adc
es
add
aas
pop
adc
daa
pop
add
aas
pop
adc
daa
pop
add
lahf
pop
adc
xor
pop
add
lahf
pop
adc
loopne
inc
mov
pusha
add
mov
adc
pusha
add
add
adc
pusha
add
add
adc
adc
sub
add
adc
sub
add
or
pusha
add
add
or
pusha
add
add
sbb
sub
add
push
inc
adc
sub
add
mov
out
xor
ss
add
comiss
nop
daa
mov
adc
add
pop
add
pusha
sub
pop
add
addb
and
and
das
adc
xor
comiss
adc
dec
sbb
rolb
rcll
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
jl
add
roll
adc
fimull
mov
fisttpl
inc
add
incb
adc
fmull
xchg
inc
add
loop
add
fisttpll
rolb
sbb
fimuls
xor
add
add
jo
add
mov
inc
add
and
adc
adc
pop
adc
inc
or
and
or
sub
adc
inc
mov
popl
and
pop
adc
xor
adc
pop
add
adc
inc
outsl
xor
add
and
dec
cmp
add
syscall
adc
inc
stos
add
xchg
xor
mov
mov
sub
and
popf
and
adc
outsl
push
adc
add
dec
adcb
rcrb
bound
add
sub
xchg
adc
loopne
inc
mov
imul
and
gs
pop
xor
adc
xor
dec
cmpsl
xor
add
adc
jl
dec
add
mov
and
xor
add
xor
xor
inc
sub
sub
sub
dec
add
add
lock
es
or
jmp
sub
add
mov
adc
adc
mov
pusha
or
add
rorb
push
push
adc
rorb
add
pop
adc
add
dec
inc
sbb
loopne
adc
adc
and
cmpsb
pusha
or
inc
jmp
add
or
add
inc
or
adc
sub
add
xor
pop
xor
add
and
add
fwait
pusha
jnp
adc
adc
add
pop
or
or
or
inc
imul
add
add
int3
inc
add
sub
add
lods
inc
add
insb
inc
add
in
inc
add
sbb
add
pushf
inc
add
pop
inc
add
faddl
adc
add
mov
inc
add
cld
inc
add
add
adc
pop
adc
inc
add
and
adc
inc
add
loop
add
lea
adc
add
rolb
adc
inc
add
mov
add
jb
add
repnz
add
or
adc
inc
add
lret
adc
inc
add
stos
inc
add
push
add
ljmp
adc
inc
add
fiaddl
adc
inc
add
mov
inc
add
cli
inc
add
push
inc
add
xchg
adc
add
movb
es
add
cmpsb
inc
add
inc
add
out
add
push
inc
add
xchg
inc
add
push
inc
add
inc
add
ss
add
mov
add
jbe
add
testb
push
inc
add
mov
and
add
cs
add
scas
inc
add
outsb
inc
add
out
inc
add
push
inc
add
sahf
inc
add
pop
inc
add
fiadds
adc
inc
add
mov
inc
add
incb
adc
inc
add
addl
adc
inc
add
and
adc
inc
add
loope
add
adc
adc
inc
add
roll
adc
inc
add
mov
add
jno
add
icebp
inc
add
or
adc
adc
inc
add
sub
adc
inc
add
jmp
inc
add
cltd
inc
add
pop
inc
add
flds
adc
inc
add
mov
inc
add
stc
inc
add
add
inc
add
adc
adc
inc
add
and
inc
add
gs
add
in
add
adc
inc
add
push
inc
add
aad
add
xor
inc
add
jne
add
cmc
inc
add
or
inc
add
dec
inc
add
int
add
sub
inc
add
insl
inc
add
in
inc
add
sbb
inc
add
pop
inc
add
fldl
adc
inc
add
jge
add
std
inc
add
adc
adc
add
add
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
inc
mov
add
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
inc
pop
sbb
inc
inc
add
and
adc
add
adc
adc
add
xor
adc
add
or
adc
add
sub
adc
add
sbb
adc
add
cmp
adc
add
add
add
inc
inc
add
and
add
fs
add
adc
add
push
inc
add
xor
add
je
add
adc
and
push
adc
inc
add
and
adc
inc
add
jecxz
add
adc
add
add
xchg
adc
add
or
add
sbb
filds
adc
inc
or
add
inc
rcll
add
inc
fwait
and
arpl
add
inc
sub
add
inc
add
or
inc
add
add
adc
inc
add
or
adc
inc
add
pop
inc
add
pop
gs
pop
add
add
add
adc
inc
add
or
add
or
add
or
add
adc
sub
add
or
add
adc
push
add
add
adc
add
add
xchg
adc
add
adc
rolb
pop
rolb
sbb
add
adc
sub
add
sbb
add
adc
cmp
add
sbb
cmp
add
sbb
cmp
mull
mov
pop
adc
rolb
adc
add
adc
add
adc
add
sub
add
sub
add
dec
sub
add
add
add
sub
and
aas
xor
pop
sub
and
push
inc
add
and
pusha
cmp
addr16
cmp
mov
and
jg
and
jbe
adc
mov
into
out
add
add
pusha
imul
pusha
push
pusha
push
pusha
dec
pusha
dec
and
roll
mov
add
sub
and
adc
loopne
lods
out
adc
or
dec
add
dec
add
adc
sbb
dec
add
dec
add
add
imul
lahf
adc
pop
inc
pop
adc
pop
add
pusha
inc
xor
adc
mov
call
dec
add
sbb
add
dec
add
pop
dec
add
and
jbe
add
inc
das
adc
inc
add
sbb
inc
xor
adc
add
xor
cwtl
inc
pop
adc
inc
dec
addb
add
xchg
jge
and
shll
xor
call
adc
movsl
aas
pop
insb
rcll
roll
cmp
mov
addb
add
sbb
outsl
je
jne
jo
jb
gs
js
gs
imul
das
add
jb
daa
sub
mov
pop
popa
xchg
das
adc
daa
sub
sbb
dec
add
add
inc
fistl
or
fildl
adc
inc
pop
adc
add
pop
add
adc
inc
push
arpl
sub
imul
cmp
push
jle
jecxz
das
add
push
jle
clc
jge
pop
inc
sysenter
push
jle
inc
push
scas
adc
push
or
pop
and
adc
adc
loopne
adc
daa
pop
add
xchg
adc
nop
inc
cmp
xlat
and
in
repz
and
adc
es
adc
cmp
sbb
gs
jo
imul
inc
lret
inc
daa
loope
adc
daa
adc
inc
inc
add
inc
add
and
addr16
add
je
xor
add
mov
inc
imul
pop
add
inc
outsl
outsb
and
sub
loopne
aas
add
jb
jae
adc
rdmsr
xchg
adc
cmpsl
adc
daa
pop
add
or
and
add
adc
daa
and
sub
iret
add
imul
adc
pop
addr16
sub
imul
add
cwtl
xor
add
inc
insb
imul
inc
pop
loope
adc
inc
and
adc
inc
pop
xor
adc
gs
dec
add
or
daa
add
push
gs
jne
arpl
sub
adc
inc
jbe
adc
xlat
mov
push
adc
inc
scas
adc
dec
pop
inc
adc
xor
adc
add
lea
adc
pusha
adc
imul
inc
ja
loopew
sub
adc
inc
ja
sbb
add
ja
adc
inc
ja
add
adc
add
ja
adc
insb
dec
sub
adc
mov
sub
adc
rolb
and
adc
cmp
adc
add
sub
ja
add
adc
inc
movups
adc
outsb
dec
add
das
clts
adc
pop
das
adc
add
sub
inc
inc
imul
adc
inc
and
scas
pop
adc
mov
outsl
sbb
outsl
push
dec
xor
pop
adc
inc
inc
push
inc
adc
pop
add
imul
pop
add
aaa
push
or
add
adc
adc
inc
add
add
add
adc
imul
andl
sub
mov
add
add
adc
adc
pop
cli
repz
insb
and
and
outsb
jae
push
gs
push
push
inc
insb
loopew
adc
inc
out
aas
dec
bound
adc
inc
pop
and
adc
and
daa
daa
add
jg
adc
mov
movups
or
std
pushf
dec
push
jecxz
pop
add
xor
xor
pop
add
push
mov
pop
add
xor
pop
add
aaa
xor
add
lahf
popa
adc
inc
mov
pop
add
xor
adc
scas
dec
xor
bound
lcall
insb
fists
mov
push
adc
push
pusha
pop
xor
adc
inc
pop
and
dec
sub
add
adc
pop
and
dec
xor
add
subb
add
adc
xchg
inc
sub
and
adc
inc
das
das
add
movsl
inc
pop
pusha
sub
add
adc
dec
lea
repz
adc
inc
pop
sub
lock
mov
and
xor
sub
mov
das
movl
and
xchg
sub
add
and
pop
scas
clc
add
adc
out
add
pop
xor
add
insb
fs
mov
push
jb
arpl
and
inc
adc
adc
outsb
pop
inc
or
inc
dec
inc
adc
popa
jb
adc
pop
dec
inc
dec
inc
jb
insl
adcb
jo
push
imul
dec
insb
sarb
aaa
add
inc
gs
outsl
outsb
imul
inc
add
jne
inc
imul
pop
adc
rorb
inc
jb
insl
push
outsl
dec
xor
daa
adc
adc
push
sub
jns
je
insl
dec
gs
imul
inc
push
xor
dec
sub
adc
insl
arpl
pop
inc
jb
addr16
imul
adc
inc
jmp
lahf
adc
aaa
sbb
popa
arpl
cmp
ja
or
add
inc
arpl
inc
pusha
add
dec
inc
cmp
inc
inc
movups
rcrl
sbb
inc
dec
dec
inc
push
dec
xor
cs
dec
and
cmp
sub
push
adc
inc
add
clc
inc
mov
inc
add
fadds
aas
or
je
inc
jb
popa
jns
or
jo
add
inc
das
adc
popa
mov
adc
filds
push
sub
xor
add
adc
inc
outsl
adcl
add
inc
jne
je
inc
adc
pop
add
push
je
je
arpl
mov
and
jecxz
add
xchg
inc
mov
inc
aas
fwait
jno
cmp
add
xchg
push
jno
and
add
mov
adc
and
pusha
add
jmp
adc
xor
adc
out
adc
and
sub
dec
xor
xor
addl
dec
or
push
das
sub
ret
adc
das
pop
add
pop
dec
add
mov
adc
or
dec
add
das
inc
pop
jne
sub
add
pop
inc
pop
adc
inc
pop
adc
push
or
das
pop
add
les
xor
add
dec
jb
sub
and
clc
inc
aas
adc
pop
cmc
adc
xor
dec
dec
add
daa
mov
adc
ds
inc
adc
cmp
inc
adc
adc
push
or
lods
dec
add
jnp
adc
or
mov
push
adc
and
jp
push
adc
add
addb
test
adc
pusha
inc
out
adc
out
adc
adc
pop
je
add
adc
add
pop
adc
adc
jb
outsb
addr16
adc
mov
push
inc
daa
adc
dec
add
movups
cwtl
and
dec
inc
pop
and
es
adc
inc
jo
mov
test
and
mov
mov
scas
xchg
and
adc
inc
adc
imul
cli
stc
es
push
pusha
adc
pop
inc
add
adc
cli
ss
or
push
jb
jbe
fcoml
push
popa
mov
push
push
pushf
inc
ret
orb
inc
jne
add
sbb
inc
pop
and
jno
in
sbb
xor
xor
jno
jle
add
out
adc
dec
and
jno
outsb
movl
push
mov
adc
sub
lahf
adc
outsl
pop
adc
arpl
fistl
inc
dec
sub
adc
out
adc
aas
pop
push
repz
jo
dec
insl
inc
push
push
inc
xchg
daa
daa
add
and
and
add
adc
daa
xor
pusha
and
jae
add
mov
add
adc
stc
inc
shrb
mov
daa
add
push
jo
outsb
test
subb
decl
sub
pop
or
cmp
out
add
pushl
adc
xlat
adc
aaa
add
cmp
xor
adc
cmp
add
jo
aaa
xor
ss
add
popa
inc
insb
js
ljmp
cmp
adc
mov
nop
test
dec
xor
cmpsl
pop
adc
inc
mov
pop
add
mov
dec
pop
add
pusha
inc
mov
adc
push
mov
movups
arpl
int3
iret
adc
push
sub
sbb
jb
push
pop
pop
xchg
adc
inc
cmp
mov
mov
es
adc
jl
loopne
adc
mov
inc
adc
gs
faddl
adc
or
sbb
or
add
add
adc
pop
jp
adc
and
insl
fs
popa
jb
gs
jg
push
movaps
adc
shrl
arpl
mov
inc
inc
add
sub
fwait
sub
add
xor
adc
cmp
add
mov
aaa
adc
addr16
and
adc
jecxz
movups
adc
inc
call
adc
inc
dec
inc
add
lret
inc
add
rolb
xlat
imul
adc
imul
push
xchg
adc
inc
aaa
adc
ret
lahf
pop
adc
inc
pop
add
jecxz
pusha
das
adc
add
lahf
adc
inc
or
adc
inc
add
lret
inc
adc
lahf
pop
adc
jns
mov
adc
es
pop
adc
inc
jo
dec
outsb
jne
jmp
cwtl
daa
daa
add
addl
filds
shlb
pusha
inc
push
xor
adc
pop
adc
daa
pop
add
adc
bound
push
outsl
jb
leave
xchg
jp
add
das
adc
inc
xchg
inc
add
inc
daa
sbb
adc
sbb
xchg
inc
sbb
lods
push
push
sub
and
daa
dec
add
pop
inc
daa
xor
jo
adcb
outsl
inc
add
scas
inc
arpl
scas
inc
arpl
mov
les
inc
aaa
and
stos
sub
outsl
outsl
insb
push
imul
inc
sub
insb
das
daa
adc
jl
inc
jae
pop
cmp
stos
inc
pop
adc
pop
add
or
xor
pop
xor
add
clc
inc
mov
mov
mov
ss
ds
adc
notl
sub
add
adc
sbb
jae
arpl
jae
inc
addb
adc
and
sub
outsl
insb
outsl
jb
fadds
adc
pop
mov
sub
movhps
movsb
dec
lret
xor
add
xchg
dec
dec
xchg
inc
pop
adc
inc
sub
or
add
outsl
sbb
gs
mov
sbb
inc
xlat
pop
sub
dec
add
dec
add
lret
push
push
les
mov
decl
xchg
mov
insb
addr16
inc
push
mov
cli
adc
add
inc
iret
adc
bound
movups
dec
call
imul
add
mov
sub
add
adc
inc
pop
jnp
sub
inc
leave
adc
pop
add
and
daa
add
inc
popa
je
bound
and
and
adc
filds
adc
sub
jae
push
cmp
inc
xor
and
xor
or
adc
xor
or
push
push
xor
add
inc
dec
push
and
inc
inc
push
inc
and
sbb
dec
push
inc
inc
push
and
inc
or
inc
push
inc
push
adc
inc
push
dec
dec
inc
lgdtl
push
inc
dec
inc
inc
push
and
jnp
add
jnp
inc
dec
dec
inc
adc
adc
inc
inc
and
es
jge
add
adc
or
dec
xchg
mov
dec
push
inc
pop
jbe
cmp
jb
imul
inc
aas
and
aas
inc
inc
and
mov
pop
inc
inc
dec
add
inc
push
dec
and
and
adc
inc
aaa
adc
aaa
adc
sbb
fwait
and
mov
and
loop
dec
add
inc
add
fwait
and
push
sub
and
push
inc
addr16
and
and
dec
dec
dec
inc
unpcklps
dec
push
push
shll
dec
dec
dec
inc
adc
sub
inc
push
push
push
inc
dec
push
and
inc
adc
inc
inc
das
inc
push
sarl
inc
cmp
pop
and
dec
push
inc
push
and
mov
inc
add
dec
dec
pop
and
push
dec
mov
ja
push
push
inc
dec
adc
dec
add
inc
jae
add
pop
inc
add
cmpsb
inc
add
pusha
movlps
add
inc
add
xlat
inc
add
out
inc
add
ffreep
or
pusha
pop
pusha
adc
cs
dec
mov
cs
dec
and
push
mov
adc
xor
pop
sbb
gs
aas
xor
add
aaa
dec
ja
push
inc
inc
test
and
lods
loopne
sbbb
adc
jns
inc
pop
and
adc
outsl
insb
inc
push
leave
loopne
add
dec
inc
push
gs
inc
push
fs
outsl
je
xchg
mov
xor
push
inc
mov
inc
das
adc
sub
adc
dec
adc
outsl
data16
inc
pushaw
sbb
pusha
xor
add
mov
cmpsl
or
test
inc
adc
aas
jo
inc
adc
sub
outsl
outsb
addr16
imul
inc
xor
test
xor
mov
mov
jns
gs
mov
add
inc
sbb
fldt
sti
inc
pop
adc
inc
cmp
inc
dec
pop
push
dec
dec
dec
dec
push
inc
add
push
dec
inc
pop
mul
imul
jmp
add
nop
inc
cmp
enter
daa
and
dec
and
daa
or
adc
clc
daa
or
adc
adc
jo
add
inc
add
dec
add
scas
sub
add
xor
cmp
adc
adc
or
adc
inc
or
arpl
and
cmpsl
and
adc
add
sbb
insl
insl
cmp
add
adc
dec
inc
add
and
adc
add
dec
das
fs
inc
push
adc
push
dec
push
sub
push
inc
arpl
bound
xchg
dec
outsl
jbe
or
adc
je
pusha
or
push
inc
out
loopne
adc
addr16
in
adc
insb
sbbb
dec
jne
sbb
imul
dec
inc
pop
adc
bound
popa
pushf
pusha
and
popa
outsb
orb
jecxz
and
push
and
push
and
push
and
push
and
push
and
push
and
push
and
push
adc
xor
cmp
push
popa
je
jb
mov
adc
imul
adc
gs
rorb
jne
or
adc
push
jne
pop
adc
pusha
cmp
pusha
das
pusha
daa
pusha
and
sub
adc
nop
es
add
stos
daa
or
adc
or
adc
inc
or
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
movsl
mov
inc
pop
adc
push
push
sub
add
adc
outsb
je
stos
adc
gs
push
inc
cmpsl
adc
push
mov
adc
dec
inc
daa
push
add
inc
dec
dec
inc
inc
loopne
adc
add
push
xor
cmp
outsb
popa
bound
je
and
ret
pop
imul
jo
aaa
pusha
daa
adc
pusha
daa
sbb
outsl
je
outsb
outsl
jne
push
pop
adc
inc
ja
insb
outsl
ja
daa
cmp
xor
aaa
add
ss
je
aaa
aaa
add
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
adc
arpl
insb
subb
daa
adc
outsl
outsb
gs
je
inc
stos
inc
push
adc
inc
adcl
add
xor
sub
add
outsl
jo
inc
pop
adc
jae
inc
movups
adc
sub
shll
gs
dec
or
sbb
push
add
sbbl
insl
jne
cli
adc
inc
and
arpl
das
add
pop
add
xor
fs
xor
pop
or
outsl
jb
inc
add
jo
movsl
push
popa
insl
and
insl
inc
pushf
sub
add
xor
adc
inc
inc
adc
outsb
je
cs
sub
dec
aam
jne
sub
jae
pop
adc
xor
adc
outsl
inc
outsb
adc
and
cmpb
adc
fs
arpl
gs
adc
push
imul
sub
push
ret
dec
imul
bound
push
and
adc
or
xchg
jp
popa
insl
cmp
adc
loope
outsb
inc
push
inc
dec
adc
outsb
outsl
ja
and
adc
jle
push
and
sub
inc
inc
dec
jae
push
and
cmpsl
adc
adc
inc
adc
mov
and
sub
sbb
xor
fimull
leave
ds
scas
and
out
and
cwtl
and
and
cwtl
and
imul
icebp
mov
outsb
inc
add
xor
adc
add
inc
fiadds
adc
outsl
and
jns
outsl
inc
je
pop
arpl
jbe
adc
pop
inc
push
and
push
adc
inc
ds
push
inc
pop
adc
adc
je
jg
arpl
add
outsb
add
jb
filds
adc
sub
orb
and
pusha
and
xor
bound
push
addb
sub
sahf
xlat
insb
xor
jo
ja
mov
sub
add
adc
aam
add
add
punpcklbw
adc
aad
movups
inc
add
adc
xlat
inc
pop
inc
add
daa
adc
fmuls
inc
add
aaa
add
dec
fldenv
add
inc
pop
adc
inc
add
pop
adc
inc
pop
adc
adc
inc
sub
pusha
or
call
inc
add
and
add
add
add
add
inc
inc
add
xor
out
dec
jo
cmp
pop
or
aaa
xor
push
push
pop
and
lret
or
pusha
inc
add
adc
inc
add
or
and
adc
inc
push
adc
and
and
sub
outsb
add
insb
inc
add
and
adc
insb
insb
mov
enter
faddl
loopne
adc
adc
fildl
inc
jecxz
ljmp
inc
push
or
inc
bound
inc
jo
ja
jle
test
inc
xchg
inc
lcall
adc
push
and
popa
jae
inc
inc
adc
jo
inc
mov
and
adc
out
in
pop
hlt
sbb
jne
gs
xor
fs
xlat
shlb
adc
add
adc
and
popl
adc
inc
dec
pop
ja
and
and
pop
pop
adc
and
pop
adc
adc
jns
or
inc
out
sub
add
loopne
add
orl
sbb
mov
or
subb
add
je
inc
movups
sub
add
push
sub
add
add
mov
sbb
mov
inc
das
adc
loopne
and
pop
andb
jg
dec
sbb
scas
sub
adc
inc
fsubrs
pop
add
mov
sub
add
daa
sub
add
sbb
xlat
inc
xor
fmuls
adc
nop
xorb
adc
test
pop
loopne
sub
add
enter
repz
add
call
sub
add
or
add
push
add
rolb
add
outsb
mov
and
sub
add
adc
rclb
or
pusha
aas
push
add
js
push
add
adc
inc
or
filds
adc
add
adc
sub
pusha
inc
adc
rclb
dec
inc
or
pop
add
or
mov
sbb
add
pusha
inc
adc
rclb
push
pop
inc
pop
xor
jo
dec
add
adc
xor
add
test
pop
xor
add
shrb
add
adc
rclb
cwtl
xor
mov
and
mov
imul
add
adc
rclb
mov
dec
add
dec
inc
pop
xor
add
pusha
sub
pusha
inc
adc
adc
enter
adc
mov
dec
add
adc
rclb
loopne
aas
add
add
insb
push
mov
add
sbb
sub
add
adc
rclb
sbb
dec
add
push
aaa
dec
add
push
inc
adc
adc
xor
pusha
add
adc
jecxz
mov
adc
xor
xchg
adc
inc
pop
xor
add
lock
pusha
inc
adc
insl
ret
pop
xor
adc
inc
pop
xor
add
inc
sarb
add
adc
adc
mov
or
pop
add
js
pop
cmp
add
nop
sub
pusha
dec
adc
xor
adc
aas
push
add
call
dec
adc
outsb
mov
or
aas
add
sbb
xor
xor
dec
adc
add
sub
xor
add
jo
jae
dec
add
mov
adc
add
pusha
fwait
adc
rclb
dec
inc
or
add
xchg
add
outsl
inc
xlat
sub
pusha
add
adc
inc
sbb
add
pusha
inc
adc
rclb
xorb
add
push
inc
pop
cmp
add
push
dec
adc
xor
mov
aaa
adc
mov
add
adc
rclb
fdivs
dec
add
adc
xchg
adc
inc
sbb
add
pusha
inc
adc
rclb
lock
add
pusha
inc
pop
cmp
add
js
push
add
adc
xchg
push
add
mov
shrb
push
add
adc
rclb
and
push
add
adc
push
add
sub
sub
add
adc
adc
cmp
push
add
push
subb
add
adc
inc
or
incl
inc
pop
xor
add
adc
rclb
js
or
iret
add
adc
out
adc
inc
sbb
add
pusha
inc
adc
rclb
nop
xor
adc
dec
add
js
dec
add
adc
inc
or
fisubrl
xlat
or
and
cmp
pop
add
adc
add
aas
adc
sub
pusha
push
adc
jae
xchg
add
sub
xor
add
inc
sarb
add
adc
adc
or
js
dec
add
nop
sub
pusha
inc
adc
xor
adc
aaa
dec
add
loopne
dec
add
adc
rclb
push
inc
or
mov
adc
je
xor
xor
sub
add
adc
adc
nop
xor
pop
xor
add
subb
add
adc
xor
adc
add
shrb
dec
add
adc
rclb
shlb
dec
add
or
dec
add
and
sub
add
adc
rclb
lock
add
adc
jo
aaa
adc
add
pop
add
mov
outsl
add
adc
xor
adc
inc
pop
cmp
add
loopne
push
add
adc
rclb
inc
xor
adc
jbe
push
add
cmp
sub
add
adc
adc
pusha
xor
adc
push
add
nop
sub
pusha
dec
adc
xor
adc
aas
push
add
call
dec
adc
ja
adc
mov
add
xor
add
inc
sarb
add
adc
adc
rolb
pop
add
js
pop
xor
and
sub
pusha
inc
adc
xor
adc
inc
pop
xor
or
add
adc
rclb
and
xor
adc
js
cmpsl
xor
or
adc
inc
and
add
pusha
dec
adc
adc
dec
or
adc
add
adc
adc
add
adc
jae
mov
adc
dec
inc
jae
scas
add
fadds
xor
add
lock
add
repz
jns
adc
push
sub
xor
loopne
pusha
inc
adc
adc
xorb
add
js
pop
xor
cmp
inc
adc
xor
lahf
add
loopne
dec
add
adc
rclb
call
sbb
dec
add
xor
sub
add
adc
adc
or
dec
add
subb
add
adc
inc
or
decl
inc
pop
cmp
add
adc
rclb
dec
xor
ss
add
sub
sub
add
adc
rclb
push
or
pusha
inc
pop
add
or
js
pop
add
adc
inc
or
add
decl
sub
add
adc
sub
add
adc
rclb
test
testl
xor
dec
add
inc
add
pop
or
cmp
sub
add
adc
adc
xor
pusha
add
adc
aaa
add
adc
xor
adc
xor
add
adc
rclb
inc
inc
or
call
inc
pop
xor
add
iret
push
inc
inc
adc
rclb
pusha
xor
pop
xor
add
pusha
sub
pusha
inc
adc
adc
js
dec
add
cwtl
aaa
dec
add
mov
dec
add
adc
rclb
cwtl
xor
adc
inc
pop
xor
add
add
pop
add
adc
rclb
mov
sub
adc
sub
add
adc
adc
pusha
cmp
pop
rclb
fdivs
inc
add
lock
xor
decl
inc
adc
adc
sub
ljmp
pop
add
adc
rclb
dec
inc
or
xchg
adc
jg
xchg
adc
inc
sbb
add
pusha
inc
adc
adc
pusha
xor
adc
dec
add
mov
dec
add
adc
xor
adc
aaa
dec
add
fsubrs
dec
add
adc
rclb
mov
adc
xor
sub
add
adc
rclb
jo
xor
sub
add
adc
adc
pusha
cmp
add
adc
das
inc
add
shrb
add
adc
rclb
inc
and
adc
subl
adc
sub
or
add
jmp
adc
inc
pop
pusha
das
xchg
ret
inc
das
pusha
pop
adc
das
adc
shrb
cmpsl
adc
sub
add
dec
pusha
or
mov
push
adc
and
aaa
xchg
add
inc
inc
push
pusha
pop
adc
xchg
and
sub
xor
xor
sub
add
pusha
daa
xchg
sub
add
push
loopne
sub
pusha
pop
adc
dec
sub
pusha
adc
push
adc
inc
inc
adc
lahf
and
pop
inc
punpcklbw
inc
sub
adc
das
xchg
add
add
adc
sub
and
nop
inc
pop
lock
out
sub
cwtl
inc
pop
and
jg
pop
sub
dec
cmpl
and
dec
pusha
adc
cmp
sub
dec
pusha
adc
dec
inc
adc
add
adc
inc
xchg
adc
daa
iret
add
adc
mov
inc
mov
js
aas
add
add
mov
fists
mov
test
das
add
rol
das
adc
rolb
loopne
pop
pusha
arpl
call
adc
aaa
aas
add
add
adc
daa
daa
add
cmp
daa
add
inc
daa
daa
add
pusha
aaa
daa
add
pusha
daa
daa
add
mov
daa
add
add
popa
pop
adc
adc
sub
add
adc
pusha
and
test
verw
out
adc
daa
aas
add
scas
adc
mov
sbb
inc
pop
sub
add
shrb
add
enter
adc
aas
add
notl
mov
adc
add
loopne
push
adc
sar
lret
aaa
das
add
add
les
pop
pusha
das
lret
rol
clc
das
movl
sub
add
add
adc
cld
call
adc
pop
add
add
inc
rolb
adc
daa
xchg
lret
aaa
daa
add
addb
pop
adc
shlb
add
mov
aaa
daa
add
rol
adc
inc
pop
sbbb
xchg
daa
inc
add
sub
lock
sarb
push
das
daa
incl
aaa
aaa
add
and
daa
adc
add
inc
inc
daa
pusha
add
dec
inc
pop
pusha
push
adc
pop
pusha
lahf
adc
pop
pusha
fwait
adc
pop
pusha
jecxz
jge
ja
adc
aaa
dec
add
mov
push
adc
mov
pop
add
ja
enter
rol
ja
loope
ja
out
shlb
rclb
or
mov
pop
pusha
add
sbb
and
mov
adc
inc
pop
loopne
adc
ja
adc
daa
add
mov
jo
daa
add
enter
adc
lock
daa
add
mov
daa
add
sbb
daa
lret
aaa
daa
add
lock
clc
shrb
lret
inc
das
test
sub
add
adc
xor
popl
adc
mov
jge
inc
and
aaa
popl
adc
inc
pop
pusha
daa
data16
clc
aaa
daa
add
push
inc
daa
pusha
pop
adc
pop
pusha
push
adc
pop
pusha
jg
imul
ret
adc
inc
popa
sti
adc
aaa
ja
ror
fwait
rolb
rolb
sarb
pushl
aas
add
rol
aas
adc
shrb
daa
adc
lock
clc
rolb
add
mov
pop
pusha
mov
sbb
pusha
mov
and
pop
loope
adc
mov
ja
shlb
ret
aaa
daa
add
jo
daa
pusha
pop
adc
pop
adc
pop
adc
add
push
nop
shlb
and
daa
add
mov
daa
pusha
add
mov
rolb
into
rcr
fld
pop
adc
rolb
in
rolb
test
test
adc
inc
pop
pusha
add
and
loop
adc
mov
pop
sub
sub
add
add
inc
daa
aaa
add
das
adc
xor
lahf
add
jo
push
add
pop
add
pusha
daa
xchg
adc
addb
pop
inc
pop
pusha
push
adc
aaa
aaa
add
mov
mov
add
add
das
adc
daa
das
add
xor
das
add
lock
clc
shrb
scas
adc
das
add
adc
das
adc
rolb
es
pop
pusha
arpl
xor
pusha
pop
adc
pop
bound
inc
inc
pop
loope
adc
pusha
shlb
imul
aaa
daa
add
add
adc
adc
inc
pop
popa
jnp
test
rclb
mov
shlb
aad
popl
adc
aaa
shlb
lret
and
pusha
das
adc
pop
adc
cwtl
daa
aaa
add
push
adc
inc
es
add
enter
adc
inc
pop
loope
adc
aaa
daa
add
push
inc
daa
pusha
pop
adc
das
pusha
push
adc
aaa
testl
adc
daa
add
nop
rcr
cwtl
inc
pop
pusha
push
adc
adc
rcrb
mov
inc
dec
sub
pop
aas
das
add
enter
loope
adc
dec
es
add
clc
aaa
scas
add
add
xchg
adc
nop
aaa
mov
pop
adc
inc
pop
pusha
push
adc
shlb
adcl
aaa
aaa
add
push
inc
daa
pusha
add
pop
shrb
adc
jo
das
adc
adc
adc
adc
aaa
inc
add
mov
daa
add
clc
aaa
daa
add
shlb
xchg
add
and
xchg
clc
rclb
adc
inc
pop
test
pop
and
add
xor
daa
add
nop
aaa
daa
add
push
shlb
outsl
adc
jo
daa
pusha
add
js
adc
adc
rcrb
movsb
rorb
adc
xchg
mov
pop
sub
add
rol
sub
add
add
cmp
aaa
add
outsl
adc
jno
outsl
add
push
pop
add
loopne
incl
aaa
daa
add
add
es
add
mov
das
scas
add
and
cmp
add
call
cmpsl
adc
es
add
sbb
xchg
adc
daa
add
pusha
inc
daa
mov
inc
pop
xchg
inc
pop
sti
inc
pop
pusha
ret
adc
aaa
inc
add
mov
rolb
rolb
daa
aas
add
enter
adc
sarb
call
sarb
add
mov
adc
pusha
add
sub
pusha
aas
adc
inc
pop
pusha
aas
adc
pop
adc
pop
adc
daa
adc
pop
bound
push
pop
bound
adc
aaa
outsl
add
mov
inc
daa
pusha
das
adc
xchg
shrb
add
add
shlb
aaa
add
out
stc
mov
out
adc
xchg
aaa
aaa
add
xchg
adc
aaa
daa
add
add
mov
pop
xor
in
adc
aaa
add
xor
pusha
add
cmp
das
popa
sub
nop
aaa
das
add
push
shrb
pop
shlb
inc
pop
pusha
arpl
jno
movups
pop
adc
adc
push
sub
xchg
cs
add
mov
aaa
sub
add
add
sbb
aaa
add
inc
adc
fwait
es
add
dec
sub
sub
adc
rolb
add
lock
rolb
push
cmp
pop
pusha
ret
adc
pop
mov
adc
inc
pop
pusha
daa
adc
inc
pop
popa
cmp
aas
inc
pop
loopne
adc
aaa
add
pusha
shlb
push
shlb
xor
pop
inc
daa
pusha
add
cwtl
sarb
mov
rcrb
mov
inc
pop
arpl
adc
rcrb
int3
aaa
pop
add
loopne
pop
adc
rclb
add
pop
adc
pop
loopne
adc
xor
pusha
add
cmp
pusha
inc
adc
movups
inc
adc
pop
pusha
cmpsl
adc
pop
pusha
xchg
adc
pop
pusha
cmpsl
adc
aas
adc
cwtl
aaa
lahf
add
dec
adc
inc
pop
test
rcrb
rclb
jmp
daa
adc
shlb
sti
inc
pop
pusha
ret
adc
cmp
inc
pop
adcl
inc
pop
jo
adc
inc
pop
and
add
inc
daa
daa
add
enter
adc
daa
add
lock
daa
add
andb
add
sbb
daa
add
inc
aaa
daa
add
shlb
add
push
loopne
daa
add
nop
aaa
daa
add
add
es
add
mov
and
pusha
add
sub
orb
pop
adc
rolb
inc
rolb
adc
inc
adc
das
and
jns
das
add
add
adc
inc
pop
pusha
arpl
cwtl
inc
pop
test
rorb
test
pop
adc
rolb
rol
adc
daa
lahf
add
mov
loopne
das
adc
shrb
out
aaa
das
add
add
daa
decl
aaa
daa
add
and
daa
mov
adc
daa
pusha
add
dec
rolb
push
daa
aaa
add
pop
inc
aaa
test
aas
add
add
sub
add
add
dec
adc
loopne
outsl
add
add
nop
rolb
adc
inc
pop
pusha
push
adc
inc
pop
pusha
jg
into
sub
add
pushf
xlat
pop
inc
pop
sub
add
lock
movl
add
adc
movl
add
pop
add
adc
scas
add
test
daa
add
xor
daa
pushl
daa
add
push
inc
daa
pusha
add
pop
daa
das
add
add
daa
pusha
pop
adc
xchg
adc
aaa
das
add
nop
shlb
pushl
daa
add
mov
xchg
mov
adc
shlb
xor
nop
aaa
aaa
add
loopne
aaa
adc
shlb
testb
ret
adc
mov
pop
and
inc
pop
and
cs
pop
xlat
adc
pop
addr16
adc
pop
popa
jg
pop
inc
pop
gs
inc
pop
arpl
adc
gs
addb
addl
add
sahf
inc
pop
and
push
and
pop
jp
adc
inc
pop
and
addr16
inc
pop
and
pop
adc
inc
pop
and
pop
and
adcb
dec
and
pop
adc
inc
pop
and
cmpsb
adc
pop
and
push
and
adc
inc
pop
and
pop
and
pop
adc
and
adc
pop
and
inc
adc
pop
and
pop
adc
pop
and
cmpsl
adc
adc
adc
inc
daa
pusha
pop
adc
shrb
out
aaa
das
add
loopne
daa
and
aaa
aas
add
inc
fstps
pop
pusha
push
adc
inc
pop
pusha
mov
and
pop
popa
jg
xor
xchg
adc
popa
jg
dec
inc
pop
popa
jg
pop
inc
pop
popa
jg
push
pop
popa
jg
js
pop
popa
jg
xchg
popa
jg
xchg
inc
pop
popa
jg
mov
jl
pop
popa
jg
mov
adc
inc
pop
popa
jg
fiaddl
popa
jg
call
adc
inc
pop
popa
jg
add
mov
pop
popa
jg
and
popa
jg
cs
pop
popa
jg
cmp
pop
popa
jg
dec
inc
pop
popa
jg
pop
inc
pop
popa
jg
inc
pop
popa
jg
je
pop
popa
jg
addb
jg
nop
inc
pop
popa
jg
sahf
inc
pop
popa
jg
lods
inc
pop
popa
jg
mov
cmp
enter
fists
rolb
fisubs
rcll
add
inc
mov
pop
out
adc
sub
add
inc
add
sub
cmp
push
adc
inc
dec
sub
push
adc
shlb
adc
imul
pusha
movups
inc
movups
incl
adc
mov
add
pusha
shr
push
rolb
js
aas
test
aaa
aas
add
nop
daa
add
test
daa
add
mov
push
adc
rolb
enter
adc
aaa
aas
add
loopne
daa
add
adc
inc
daa
lcall
and
daa
add
pusha
aaa
daa
add
inc
shlb
ret
adc
sub
add
add
sub
add
mov
pop
adc
insl
es
add
call
add
arpl
adc
mov
inc
pop
sub
add
mov
inc
pop
popl
adc
inc
mov
pop
bound
push
inc
pop
adc
pop
arpl
adc
pop
pusha
jmp
leave
inc
das
and
fldenv
adc
sarb
filds
arpl
adc
inc
pop
arpl
adc
inc
pop
arpl
adc
inc
pop
arpl
adc
pusha
das
adc
adc
inc
pop
arpl
adc
inc
pop
arpl
adc
inc
pop
arpl
adc
inc
pop
and
das
pusha
mov
loopne
xlat
add
and
pusha
adc
ficoms
movsb
aaa
daa
add
pusha
add
mov
pusha
dec
adc
adc
inc
pop
in
out
pop
aaa
inc
add
rol
inc
adc
rolb
inc
pop
pusha
pop
adc
rolb
stc
roll
dec
mov
pop
popa
inc
adc
inc
pop
popa
inc
adc
inc
pop
and
add
inc
shlb
cmp
call
pusha
inc
daa
orl
adc
pop
pusha
xlat
adc
pop
adc
adc
cmp
aaa
adc
rorb
inc
pop
popa
daa
adc
rolb
in
shlb
cmc
rcr
add
fists
or
data16
adc
inc
pop
popa
dec
adc
inc
pop
loope
adc
inc
inc
daa
pusha
add
push
rolb
pop
rolb
dec
inc
pop
and
inc
pusha
pop
adc
aaa
inc
add
add
adc
rolb
sahf
rolb
test
rolb
mov
rcrb
adc
das
adc
sarb
lock
ret
das
aaa
aaa
add
sub
adc
inc
pop
test
xor
and
add
inc
inc
daa
orl
adc
daa
add
sub
daa
add
andb
add
push
aaa
daa
add
mov
js
daa
add
shlb
add
mov
call
daa
push
add
shlb
das
add
adc
incl
aaa
daa
add
xor
pusha
add
cmp
nop
aas
rolb
dec
rclb
pop
inc
pop
pusha
fwait
adc
adc
pop
adc
pop
pusha
adc
pop
test
xlat
push
daa
daa
add
xorb
add
mov
daa
add
test
daa
add
rol
daa
cmp
add
loop
adc
or
in
adc
test
inc
pop
sub
add
and
das
adc
inc
pop
mov
inc
pop
and
sub
iret
sub
js
fwait
adc
pop
arpl
adc
daa
add
jb
add
mov
jg
jo
adc
xchg
adc
adc
pmulhuw
add
lahf
add
jo
addr16
pop
adc
lahf
adc
inc
pop
pusha
ja
pushf
rcrb
pop
loopne
dec
add
rol
adc
rorb
rorb
rorb
rolb
adc
dec
daa
incl
aaa
daa
add
xor
daa
cltd
pushl
daa
add
push
inc
daa
pusha
add
pop
inc
pop
xchg
testl
inc
pop
pusha
xchg
adc
pusha
or
shlb
inc
add
mov
adc
daa
cmpsl
add
or
daa
and
xor
daa
add
lock
push
dec
mov
pop
and
add
xor
daa
add
cwtl
aaa
daa
add
push
daa
daa
add
shlb
add
jo
daa
add
call
nop
shlb
mov
lods
inc
pop
sub
add
mov
iret
sub
add
or
inc
daa
aaa
add
pop
adc
or
add
jo
push
add
pop
add
rol
pop
adc
inc
pop
mov
sub
and
clc
loopne
adc
iret
inc
pop
and
add
and
daa
popa
adc
aaa
daa
add
inc
rclb
inc
pop
subl
aas
and
sub
lods
aaa
ja
sarb
jnp
xchg
add
push
nop
daa
daa
add
nop
aaa
daa
add
mov
daa
xchg
pushl
daa
add
rol
jg
fadd
pop
adc
rolb
out
rolb
stc
rolb
adc
inc
pop
sub
add
adc
out
add
xor
aaa
add
mov
rcrb
das
pop
add
xor
pop
add
nop
das
pop
add
cmp
pop
add
rol
adc
das
pop
add
push
aas
pop
add
lock
adc
inc
aaa
adc
cmp
adc
inc
pop
sub
add
jo
pop
add
sub
sub
pop
daa
aas
add
lahf
adc
aas
mov
pop
add
add
nop
inc
push
loopne
adc
mov
daa
cwtl
inc
mov
lock
mov
adc
aas
pop
add
or
cwtl
inc
es
adc
daa
pop
add
add
lock
inc
pop
test
adc
xchg
add
jo
aaa
add
and
pusha
add
sub
pusha
aaa
adc
shlb
pushl
aaa
add
push
shlb
pushl
daa
add
jo
pop
adc
popl
adc
mov
ja
inc
daa
pusha
pop
adc
daa
add
cmp
aaa
add
rol
adc
daa
mov
das
add
loopne
daa
add
nop
aaa
daa
add
add
daa
add
mov
and
daa
add
loopne
daa
add
inc
daa
daa
add
or
daa
xchg
inc
daa
mov
sub
add
add
sub
add
push
movups
jge
ja
adc
das
add
mov
test
add
shrb
add
adc
hlt
outsb
adc
push
pusha
pop
adc
inc
pop
pusha
dec
adc
inc
pop
and
sub
mov
inc
pop
pusha
stos
adc
inc
pop
gs
adc
push
test
pop
and
inc
pop
data16
inc
pop
push
adc
inc
pop
outsl
adc
inc
pop
outsb
inc
adc
addr16
adc
pop
outsl
out
adc
pop
outsl
out
adc
pop
and
scas
adc
pop
outsl
mov
outsl
out
adc
adc
cmpsl
inc
pop
outsl
out
adc
adc
adc
inc
pop
jae
adc
inc
pop
pusha
adc
inc
pop
jae
adc
inc
pop
jae
adc
inc
pop
jae
adc
inc
pop
jae
adc
push
mov
adc
inc
pop
jae
adc
jg
pop
jbe
adc
inc
pop
and
cmpsb
adc
inc
pop
and
pop
jne
adc
and
pop
and
pop
and
pop
and
adc
dec
adc
push
adc
jb
mov
pop
adc
adc
jno
ret
and
jno
int
pop
and
dec
adc
inc
pop
and
popl
je
adc
adc
pop
inc
pop
popa
mov
adc
popa
mov
and
popa
mov
das
inc
pop
popa
mov
cmp
inc
pop
xchg
cmpsl
inc
pop
popa
mov
addr16
pop
popa
mov
jne
pop
popa
mov
addl
mov
xchg
inc
pop
popa
mov
lahf
inc
pop
popa
mov
lods
inc
pop
popa
mov
mov
adc
inc
pop
popa
mov
xlat
inc
pop
popa
mov
in
pop
popa
mov
repz
pop
popa
mov
add
mov
cmovo
popa
mov
sbb
adc
inc
pop
popa
mov
cmp
popa
mov
inc
inc
pop
and
aaa
xchg
add
pusha
add
imul
out
jbe
pop
pusha
out
addl
inc
pop
pusha
out
xchg
rorb
aaa
dec
add
mov
daa
add
sbb
daa
and
dec
aaa
daa
add
lock
push
push
es
add
add
and
pusha
add
sub
das
and
das
add
inc
daa
daa
add
shlb
daa
add
pusha
daa
daa
add
clc
aaa
daa
add
andb
add
and
daa
add
dec
aaa
daa
add
shlb
add
jo
daa
add
loopne
daa
add
cwtl
aaa
daa
add
add
decl
aaa
daa
add
and
daa
add
call
inc
shlb
add
adc
daa
pusha
add
xchg
pop
ret
punpcklwd
adc
pop
bound
adc
adc
xchg
inc
pop
adc
adc
and
arpl
ret
inc
pop
arpl
into
inc
pop
arpl
flds
arpl
in
pop
arpl
out
inc
pop
arpl
cli
inc
pop
xchg
incl
and
sbb
pusha
aaa
adc
inc
pop
pusha
inc
adc
inc
pop
pusha
push
adc
pop
pusha
adc
pop
pusha
ja
push
inc
pop
pusha
xchg
pop
inc
pop
pusha
xchg
adc
pop
pusha
cmpsl
adc
pop
pusha
mov
jle
pop
pusha
adc
adc
mov
call
mov
rolb
enter
rol
inc
mov
aaa
inc
add
lock
lret
cmp
daa
add
adc
daa
sub
pop
out
adc
xor
das
adc
inc
pop
sbb
adc
aas
pusha
or
clc
aaa
aas
add
pusha
sarb
push
adc
mov
das
adc
rolb
fwait
rolb
cmpsb
inc
pop
pusha
mov
mov
pop
adc
pop
adc
sarb
frstor
filds
adc
lock
clc
rolb
add
jg
inc
pop
loope
adc
aaa
aas
add
and
daa
xchg
mov
add
pusha
add
dec
daa
das
add
xor
das
add
pusha
shrb
push
pusha
aaa
das
add
add
adc
nop
aaa
das
add
mov
shrb
arpl
das
add
rol
adc
inc
pop
adcl
rolb
shlb
ja
adc
mov
pop
dec
inc
pop
and
add
and
daa
add
pusha
aaa
daa
add
inc
shlb
pushl
daa
add
pusha
sarb
inc
pop
test
pop
xchg
movups
aaa
inc
add
mov
adc
add
daa
and
xor
daa
add
loopne
push
adc
rorb
add
daa
pop
adc
aas
add
and
pusha
add
sub
pusha
aas
adc
shlb
jae
aaa
add
push
daa
daa
add
enter
adc
daa
add
lock
daa
add
nop
daa
scas
add
sbb
inc
pop
sub
add
mov
scas
sub
add
aas
push
pusha
aas
adc
aaa
add
fists
and
and
xchg
adc
rorb
xchg
adc
inc
movups
add
jg
mov
rol
jg
fadd
das
loopne
pusha
add
iret
cmp
adc
adc
ja
adc
lcall
mov
pop
add
cmp
lea
sub
add
pop
add
adc
aaa
add
popa
movups
push
sub
add
cli
inc
pavgb
test
outsl
adc
das
outsl
add
xor
outsl
add
fsubrs
outsl
add
adc
outsl
add
adc
psraw
sbb
and
and
sub
add
push
shrb
inc
pop
cmp
add
push
daa
aas
add
ja
pop
sbb
ja
addr16
adc
inc
pavgb
adc
das
ja
adc
out
adc
das
outsl
add
ja
sub
add
mov
por
add
and
ds
pop
sub
add
nop
das
outsl
add
adc
and
pushl
inc
dec
sub
test
adc
sub
add
jo
punpcklbw
pusha
movups
pop
es
add
scas
and
inc
inc
decl
sub
adc
getsec
daa
add
shlb
daa
add
or
aaa
testl
xor
daa
add
adc
lcall
aaa
daa
add
xor
daa
and
aaa
aaa
daa
add
push
inc
daa
pusha
add
pop
daa
push
add
mov
das
add
jo
push
add
fdivs
daa
add
nop
rclb
daa
push
add
or
aaa
dec
add
push
add
xor
daa
add
rol
push
adc
daa
das
add
pusha
aaa
das
add
lock
clc
shrb
adc
aaa
das
add
adc
pop
inc
pop
pusha
mov
and
pusha
arpl
cs
pop
bound
and
rorb
dec
rcrb
push
shrb
pop
sarb
fs
pop
jecxz
adc
les
lahf
or
das
adc
rorb
sahf
sarb
pushl
aas
add
rol
adc
sarb
rol
aaa
orl
aaa
add
lock
clc
shrb
getsec
das
add
adc
decl
xor
daa
xchg
pushl
daa
add
push
inc
daa
pusha
add
pop
rolb
pusha
rolb
push
cmp
aaa
aaa
add
daa
add
pusha
aaa
daa
add
mov
mov
daa
add
rol
and
aaa
daa
add
loopne
daa
pusha
pop
adc
rolb
lock
pop
add
call
adc
jmp
adc
aaa
aas
add
daa
bound
xorb
inc
daa
pusha
add
pop
inc
pop
sub
push
adc
jns
pusha
das
adc
adc
rolb
jnp
pop
and
sub
insl
mov
daa
outsl
add
aaa
adc
shlb
mov
mov
sarb
add
rol
sub
add
pop
adc
daa
aaa
add
push
adc
es
push
adc
pop
xlat
das
pop
add
loopne
pop
add
add
adc
es
shlb
adc
popa
inc
adc
push
xchg
jae
adc
sub
adc
arpl
out
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
adc
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
xchg
aaa
inc
pop
and
aaa
dec
or
daa
sbbl
ss
aaa
iret
add
das
adc
adc
aaa
aaa
add
mov
daa
add
push
shlb
xchg
adc
lock
add
aaa
add
enter
adc
inc
daa
pusha
pop
adc
inc
pop
cltd
push
shlb
call
lret
add
adc
das
xchg
aaa
das
add
jo
daa
add
pop
aaa
daa
add
nop
shlb
inc
adc
mov
jg
mov
rolb
into
rclb
fldenv
movl
add
lock
clc
daa
das
add
clc
aaa
das
add
adc
addr16
pop
loopne
adc
lret
aaa
pop
add
shrb
pushl
das
add
push
daa
push
add
xorb
add
jo
push
adc
das
and
inc
aaa
das
add
nop
shrb
fwait
inc
pop
xchg
ja
pop
adc
adc
daa
dec
add
add
aaa
dec
push
rorb
rolb
inc
pop
pusha
mov
inc
dec
adc
mov
pop
fists
push
aaa
dec
add
inc
inc
daa
pusha
add
dec
inc
pop
pusha
dec
adc
pop
pusha
dec
adc
pop
pusha
dec
adc
adc
movups
rcrb
aaa
pop
add
mov
daa
add
fdivs
daa
add
shlb
daa
add
add
aaa
aaa
add
daa
add
sub
daa
add
adc
daa
add
push
aaa
daa
add
xor
daa
and
adc
daa
pusha
pop
adc
pop
adc
pop
mov
rolb
jo
pop
adc
dec
cmp
dec
add
nop
inc
daa
pusha
add
cwtl
daa
cmpsl
add
clc
aaa
das
add
mov
daa
add
and
aaa
inc
add
jg
adc
daa
add
lock
lret
pop
inc
das
xchg
sub
aaa
add
jg
adc
mov
dec
scas
inc
incl
aaa
popl
adc
inc
pop
and
aaa
xchg
shlb
mov
add
jo
scas
adc
pop
pusha
push
adc
and
adc
adc
inc
pop
bound
adc
adc
inc
pop
arpl
adc
inc
pop
addr16
adc
shlb
adc
lock
shlb
push
das
cmp
and
cmp
and
add
inc
shlb
jnp
adc
aaa
aaa
pop
inc
daa
pusha
add
push
adc
outsl
adc
outsl
adc
sub
daa
adc
adc
adc
adc
add
loopne
aas
adc
shlb
shlb
imul
pusha
adc
rolb
sub
pusha
add
xor
pusha
adc
popa
dec
adc
pop
pusha
rcll
push
inc
pop
push
pop
and
add
add
and
xor
rcl
pop
inc
pop
sub
add
mov
add
add
push
daa
aaa
add
push
adc
shlb
sub
sub
adc
inc
pop
pusha
pop
adc
rolb
shlb
mov
aaa
add
lock
daa
add
loopne
daa
add
adc
push
adc
aaa
das
add
daa
mov
aaa
daa
add
push
inc
daa
pusha
add
pop
daa
das
add
pusha
aaa
das
add
jo
das
adc
xchg
adc
nop
shlb
aas
aaa
daa
add
mov
push
adc
daa
popl
adc
aaa
aaa
add
loopne
das
adc
daa
das
add
and
aaa
das
or
insl
lret
das
inc
pop
loopne
adc
das
add
and
das
adc
inc
pop
mov
aaa
lea
aaa
add
push
shlb
daa
xor
mov
sub
add
loopne
loop
adc
das
pop
add
clc
xchg
adc
aam
lsl
mov
mov
pop
adc
inc
aaa
aaa
add
mov
pop
add
push
adc
xlat
rclb
add
inc
adc
mov
dec
adc
inc
call
aaa
xchg
adc
daa
scas
add
lock
daa
add
adc
add
sbb
aaa
lsl
pusha
add
cmp
das
popf
pushl
das
add
push
daa
daa
add
jo
daa
add
jo
daa
add
cwtl
aaa
daa
add
nop
daa
daa
add
shlb
add
mov
daa
and
dec
aaa
daa
add
rol
iret
adc
inc
pop
pusha
push
adc
rolb
out
daa
add
sub
aaa
aaa
add
outsl
daa
decl
aaa
daa
add
xor
daa
xchg
pushl
daa
add
push
inc
daa
pusha
add
pop
shrb
rcll
test
das
add
addb
pop
adc
inc
pop
pusha
arpl
fwait
inc
pop
bound
mov
rcrb
mov
scas
add
add
aaa
pop
add
daa
add
sub
daa
add
lock
xlat
add
push
aaa
daa
add
adc
xlat
adc
inc
pop
and
add
xor
das
adc
shrb
pushl
das
add
push
shlb
jae
fdivs
daa
add
jo
push
adc
pop
adcl
pop
cmpl
rorb
adc
fdivs
addr16
dec
adc
inc
pop
mov
sub
rcrb
loopne
iret
add
xorb
add
add
call
aaa
daa
add
and
daa
add
shlb
daa
add
inc
shlb
pushl
daa
add
pusha
inc
daa
pusha
pop
adc
pop
adc
pop
add
xor
aaa
xchg
add
daa
add
pop
aaa
daa
add
mov
daa
and
adc
inc
daa
pusha
add
fildl
pusha
push
adc
inc
pop
popa
inc
adc
rclb
sbb
jb
adc
inc
pop
popa
sti
adc
inc
pop
imul
loop
adc
aaa
outsl
add
push
inc
daa
pusha
add
pop
inc
pop
pusha
outsl
adc
pop
pusha
outsl
adc
pop
popa
xor
jg
pop
pusha
outsl
adc
adc
aaa
out
shlb
adcl
aaa
daa
add
rol
ja
fadd
ja
out
ja
hlt
shlb
jae
ja
adc
pusha
out
push
inc
pop
pusha
lret
adc
pop
pusha
out
cmp
loope
adc
aaa
add
push
inc
daa
sbb
pop
pusha
adc
pop
pusha
adc
pop
pusha
adc
adc
shlb
rclb
mov
shrb
adc
aaa
dec
or
daa
pusha
inc
adc
daa
add
add
inc
pop
xchg
ja
pop
pusha
xchg
adc
rolb
sub
pop
adc
pop
pusha
dec
jae
adc
push
rorb
rolb
pusha
inc
pop
or
pop
adc
pop
adc
pop
adc
inc
pop
and
cwtl
rclb
mov
rolb
mov
pop
adc
adc
aaa
filds
rolb
adc
das
add
lock
sti
shrb
pushl
das
add
adc
incl
aaa
daa
add
xor
daa
add
clc
aaa
daa
add
push
shlb
dec
cmp
add
adc
pop
pusha
push
adc
adc
rclb
movsb
rolb
scas
inc
pop
bound
adc
rclb
rol
pop
adc
rolb
out
pop
outsb
jae
icebp
rolb
cld
rclb
pop
jbe
pop
adc
inc
pop
jne
adc
rclb
xor
pop
adc
inc
pop
and
add
pusha
shlb
fistl
or
aaa
pop
pop
inc
daa
test
rolb
mov
pop
adc
inc
aas
test
sub
sbb
pop
add
add
fists
jo
ja
adc
dec
and
aaa
xchg
add
shlb
add
enter
adc
daa
daa
add
lock
daa
add
add
decl
adc
aaa
outsl
push
inc
daa
pusha
pop
adc
shrb
pushl
das
add
inc
daa
daa
add
jo
daa
add
pusha
daa
daa
add
cwtl
aaa
daa
add
add
and
and
daa
add
mov
adc
rolb
mov
daa
outsl
add
or
aaa
aas
add
daa
add
xor
daa
add
add
incl
aaa
daa
add
and
daa
and
outsb
aaa
daa
add
inc
inc
daa
pusha
add
dec
inc
pop
xchg
das
rolb
pop
sarb
out
aaa
aas
add
mov
aas
adc
lock
das
add
mov
daa
movl
pop
add
push
add
dec
aaa
daa
add
add
push
adc
inc
pop
loopne
adc
das
add
and
daa
add
mov
inc
daa
daa
add
enter
adc
daa
add
lock
daa
add
add
cmp
loop
push
add
xchg
daa
das
add
dec
aaa
das
add
rol
adc
daa
das
add
js
das
add
loopne
das
adc
shrb
jmp
aaa
das
add
add
aas
inc
pop
fwait
roll
and
add
xor
daa
mov
adc
aaa
clts
rcrb
rcrb
daa
pop
add
inc
aaa
aaa
add
add
and
aaa
daa
add
mov
rcrb
rolb
mov
daa
outsl
add
mov
inc
add
loopne
daa
mov
daa
add
add
popl
loopne
adc
in
pop
ss
pop
sub
add
add
mov
add
adc
ljmp
pop
add
dec
adc
rolb
jnp
das
add
push
shrb
pop
inc
pop
pusha
jnp
pusha
inc
pop
mov
daa
movl
add
add
adc
adc
aaa
xchg
add
daa
add
sub
daa
add
shlb
add
push
aaa
daa
add
loopne
daa
add
js
daa
add
add
add
mov
sub
add
add
adc
shrb
add
adc
pop
pop
adc
out
pop
add
xchg
adc
daa
mov
aaa
daa
add
addb
xchg
daa
das
add
xorb
add
mov
shrb
inc
adc
rol
adc
inc
pop
pusha
mov
roll
and
scas
pop
inc
pop
and
mov
jge
xchg
sbb
push
adc
inc
pop
in
inc
adc
out
pop
add
pusha
add
dec
inc
pop
xchg
adc
pop
and
pop
inc
pop
pusha
adc
adc
rcrb
mov
outsl
lcall
shrb
shrb
shlb
imul
add
add
call
aaa
daa
add
and
daa
add
adc
aaa
testl
jno
daa
add
pusha
inc
daa
pusha
add
push
rolb
jnp
add
js
aas
add
nop
shlb
and
aaa
daa
add
mov
daa
pusha
pop
adc
rolb
mov
sarb
rolb
loopne
pop
adc
rorb
rol
movups
daa
popl
adc
jmp
jg
decl
aaa
daa
add
xor
daa
and
daa
inc
daa
pusha
das
adc
das
add
add
add
sbb
rclb
das
push
add
pusha
inc
jg
dec
add
push
pop
aaa
adc
das
add
cmp
add
sbb
fdiv
inc
pop
sub
add
add
adc
rclb
sub
sub
addb
es
adc
adc
add
test
daa
add
shlb
add
shlb
daa
add
loopne
daa
arpl
add
add
popl
popl
pusha
xlat
adc
inc
pop
popa
and
aaa
inc
pop
and
aaa
mov
shlb
ds
daa
add
jo
ja
js
ja
add
adc
shlb
rolb
mov
pop
adc
adc
aaa
pop
add
rol
pop
adc
rcrb
sarb
call
rcrb
clc
rorb
adc
in
aaa
pop
add
andl
pusha
dec
adc
rorb
rolb
cmp
and
dec
rolb
push
inc
pop
gs
adc
movups
pop
pusha
dec
adc
pop
in
adc
nop
shrb
cwtl
rolb
mov
aaa
aaa
add
rol
adc
shrb
ljmp
adc
aaa
das
add
lahf
adc
rolb
lock
clc
sarb
pushl
aas
add
adc
push
sub
add
add
nop
das
pop
add
mov
es
add
shlb
add
inc
sarb
aaa
daa
add
pusha
shlb
call
out
aaa
mov
add
mov
pusha
push
adc
adc
adc
adc
adc
inc
pop
bound
add
jo
pop
add
add
xorl
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
inc
pop
and
sbb
add
add
clc
das
xchg
add
movsb
push
dec
and
out
lds
inc
pop
add
push
add
push
sub
add
adc
adc
push
add
subb
add
dec
adc
daa
filds
adc
rol
adc
daa
das
add
loopne
das
add
loopne
das
adc
daa
das
add
adc
aaa
lahf
add
test
lahf
inc
pop
loopne
adc
das
add
and
das
adc
daa
das
add
jo
das
add
inc
inc
daa
pusha
pop
adc
das
mov
aaa
das
add
pusha
rcrb
rolb
jo
aaa
popa
ja
fdivs
aaa
add
nop
shlb
add
icebp
aaa
pop
or
push
adc
adc
inc
pop
pusha
ret
adc
inc
pop
and
dec
inc
pop
bound
bound
and
sub
push
add
and
xchg
mov
pop
pusha
push
adc
pop
pusha
push
adc
pop
pusha
push
adc
pop
and
add
add
cltd
imul
add
mov
shlb
daa
pop
add
or
aaa
aaa
push
shlb
aas
aaa
daa
add
lock
rcrb
xchg
jg
inc
pop
loopne
adc
aas
add
xor
pusha
add
cmp
pusha
aas
adc
aas
adc
aas
add
mov
aas
add
jo
aas
adc
aas
adc
sarb
out
adc
aaa
aas
add
mov
aas
adc
sarb
into
rolb
fld
pop
adc
shlb
jmp
adc
aaa
aaa
add
xchg
call
aaa
daa
add
and
daa
add
cwtl
aaa
daa
add
inc
daa
daa
add
shlb
add
pusha
daa
daa
add
call
add
cmp
hlt
aaa
aas
add
pusha
add
test
das
and
das
aaa
das
add
rol
adc
inc
pop
pusha
adcl
shlb
ret
xorl
add
add
xchg
inc
pop
pusha
pop
adc
inc
pop
in
lahf
adc
xor
aas
adc
rolb
inc
sarb
dec
rolb
push
inc
pop
pusha
adcl
rorb
pusha
inc
pop
cltd
mov
adc
pop
adc
outsl
test
adc
aaa
dec
add
adc
add
pop
aaa
das
add
mov
ja
mov
mov
das
add
rol
das
adc
shrb
getsec
das
add
lock
daa
add
loopne
daa
add
adc
divb
dec
add
daa
popa
out
adc
inc
daa
sub
das
add
add
sub
adc
pusha
das
add
cs
cmpsl
mov
sub
pop
adc
jo
pop
add
shrb
add
inc
pop
mov
out
adc
adc
aaa
mov
mov
dec
aaa
das
add
rol
das
adc
inc
pop
pusha
adcl
daa
aaa
add
xorb
add
add
addl
pop
jmp
adc
xor
aaa
adc
shlb
inc
inc
pop
test
pop
pusha
jae
push
inc
pop
call
popa
inc
pop
data16
insb
rorb
je
pop
adc
das
adc
shlb
adc
aaa
pop
add
daa
add
pop
aaa
daa
add
shlb
daa
add
xorb
add
lock
daa
add
test
daa
add
adc
daa
add
xor
adcl
add
aaa
mov
shrb
pop
daa
das
add
xor
das
add
jo
daa
pusha
pop
adc
das
popa
pop
adc
das
pusha
mov
add
das
or
nop
shlb
sarb
or
xor
and
xor
dec
adc
popa
push
and
cmp
push
mov
adc
shrb
cli
outsl
add
mov
test
pop
adc
inc
pop
pusha
outsl
adc
inc
pop
pusha
addr16
rolb
fiadds
gs
adc
inc
pop
gs
shrb
pop
jno
pusha
pop
mov
bound
adc
rolb
add
inc
pop
and
les
and
xor
sbb
pusha
pop
adc
pop
and
xor
sub
pop
loopne
sub
and
xor
out
xchg
ror
notl
mov
das
adc
adc
sub
add
testl
and
add
pusha
inc
daa
pusha
add
push
sub
sti
aaa
aaa
pop
shlb
xadd
cmp
aaa
add
mov
daa
add
xorb
add
shlb
daa
add
test
daa
add
lock
filds
adc
aaa
daa
add
adc
pop
and
aaa
das
add
das
adc
shrb
pushl
das
add
push
shlb
call
daa
mov
sub
add
add
sub
add
add
mov
and
adc
mov
nop
daa
xchg
adc
rolb
adc
adc
es
add
mov
xchg
shlb
xchg
adc
pop
add
add
rol
xchg
jnp
daa
adc
das
add
subb
adc
mov
aaa
adc
ret
add
adc
das
add
adc
sbb
verw
add
or
add
mov
adc
inc
pop
and
daa
add
adc
sub
adc
aaa
add
jo
add
xlat
sub
ja
es
adc
das
add
push
daa
push
add
pop
add
lcall
sub
bound
test
es
add
add
inc
pop
sub
add
jo
pop
add
xor
aaa
add
pop
adc
adc
pop
adc
pop
add
nop
aas
pop
add
nop
das
pop
add
shll
pop
add
rol
adc
das
pop
add
mov
pop
add
lock
pop
add
jae
es
add
and
push
mov
sub
adc
aas
pop
add
push
daa
aaa
add
pop
adc
daa
pop
add
add
adc
lock
pop
add
mov
pop
add
jae
es
add
loopne
pop
adc
das
pop
add
adc
add
mov
sti
push
inc
pop
mov
daa
daa
add
pop
adc
daa
pop
add
sub
add
js
add
and
adc
frstor
add
test
addr16
das
add
push
sub
adc
add
loopne
iret
add
aaa
loopne
das
add
adc
sub
sub
adc
push
adc
pop
pusha
dec
adc
adc
aaa
add
mov
shlb
mov
pop
pusha
xchg
adc
sarb
pop
aaa
aas
add
loopne
daa
push
daa
xchg
mov
das
add
testl
add
cmp
add
cmp
adc
mov
adc
inc
adc
adc
adc
jmp
pop
scas
pusha
punpcklwd
and
xor
add
xor
loope
adc
adc
add
sub
add
xchg
add
test
aaa
add
xchg
in
mov
fadds
iret
adc
pop
add
jo
pop
add
adc
daa
adc
subl
push
sub
adcl
data16
adc
bound
push
inc
incl
inc
sub
adc
daa
aaa
add
and
adc
fadd
pop
adc
das
pop
add
sarb
add
or
nop
lock
incl
inc
pop
subl
add
pop
adc
sub
verw
incl
sub
callw
insl
icebp
add
mov
das
add
add
pusha
and
pop
pusha
add
sbb
fsubrs
add
out
adc
and
or
ss
adc
adc
inc
pop
loopne
adc
aaa
das
add
push
shrb
dec
daa
das
add
push
jl
das
adc
add
cwtl
aaa
das
add
mov
daa
das
add
enter
adc
shrb
jecxz
das
add
clc
aaa
das
add
clc
shrb
setb
dec
sahf
in
mov
or
pop
add
xchg
cmp
add
push
cmp
add
jo
pop
add
cmp
pop
push
add
add
dec
inc
add
sub
adc
inc
add
add
adc
aaa
xchg
pusha
inc
adc
cmp
adc
inc
pmulhuw
adc
or
das
add
loope
adc
daa
add
cmp
pusha
add
inc
shrb
getsec
das
add
pop
daa
daa
add
mov
insb
daa
daa
add
loopne
daa
add
andb
add
or
ss
add
xchg
daa
daa
add
xor
daa
add
test
daa
add
pop
aaa
daa
add
mov
xorb
add
shlb
daa
add
test
daa
add
in
daa
add
shlb
daa
add
clc
daa
daa
add
clc
aaa
daa
add
or
es
add
and
ss
add
and
daa
add
dec
aaa
daa
add
xor
daa
add
jo
daa
add
dec
daa
daa
add
cwtl
aaa
daa
add
pop
inc
daa
adcl
pushf
rclb
pop
sub
add
mov
add
rolb
incl
adc
aaa
testl
inc
daa
xorl
pusha
add
test
lahf
adc
sub
aas
add
aam
daa
adc
test
incl
adc
add
push
add
out
adc
sub
and
dec
adc
adc
rclb
or
sub
adc
daa
das
add
pop
adc
sub
sub
adc
inc
daa
xor
sub
adc
xchg
aad
es
adc
aaa
jg
adc
daa
jg
adc
sarb
or
daa
das
add
inc
adc
pushf
daa
incl
sub
sub
adc
sarb
pop
aaa
daa
add
or
movsl
movups
pop
pusha
movups
pop
and
add
xor
daa
xchg
incl
test
add
filds
xchg
daa
das
add
nop
inc
push
adc
inc
daa
adc
aaa
into
and
pop
adc
incl
pop
daa
mov
adc
daa
add
fs
daa
add
mov
daa
add
js
daa
add
mov
daa
add
mov
daa
add
fdivs
daa
add
mov
add
ss
add
mov
daa
add
sub
daa
add
enter
adc
daa
add
fadd
daa
mov
aaa
daa
add
lock
clc
rolb
add
aaa
add
adc
daa
add
fdivs
daa
add
sub
daa
xchg
call
adc
daa
add
cmp
daa
pusha
add
inc
daa
push
add
xor
das
add
pop
daa
daa
add
pop
aaa
daa
add
jo
jg
adc
test
jg
mov
incl
aaa
das
add
movsb
sub
add
daa
add
mov
adc
pop
sub
add
pop
add
add
movups
daa
das
add
dec
adc
daa
lcall
sub
sub
adc
rcl
fsubs
xchg
adc
or
mov
pop
and
add
xor
daa
add
loopne
daa
add
inc
daa
daa
add
or
aaa
ja
daa
daa
add
xor
daa
add
insb
shlb
pushl
daa
add
mov
iret
adc
mov
das
add
mov
das
adc
add
fsubrs
incl
aaa
daa
add
in
sub
add
adc
daa
add
add
daa
add
adc
daa
add
pop
aaa
daa
add
sub
daa
add
xorb
add
cmp
daa
add
test
daa
add
push
shlb
pushl
daa
add
insb
inc
daa
pusha
add
je
pop
sbbl
jecxz
add
aas
or
cmp
dec
xor
or
aas
pushf
incl
xor
add
mov
ja
xchg
shlb
sub
add
aaa
add
mov
incl
aaa
daa
add
les
daa
add
shlb
daa
add
fsubs
daa
add
clc
aaa
daa
add
in
daa
daa
add
and
cwtl
daa
decl
aaa
daa
add
adc
daa
add
jo
daa
add
sub
daa
add
cwtl
aaa
daa
add
cmp
daa
add
shlb
add
push
daa
daa
add
call
shlb
das
adc
aaa
xchg
inc
daa
pusha
add
addb
mov
dec
push
and
addr16
dec
cmp
add
inc
inc
pop
loop
adc
xchg
shlb
shlb
sub
add
aaa
add
mov
daa
add
shrb
incl
adc
aaa
addr16
daa
push
add
inc
aaa
das
add
add
es
add
push
sbb
daa
pusha
jg
nop
aaa
daa
add
sub
daa
pusha
add
aaa
daa
das
add
rolb
imull
aaa
add
push
adc
daa
das
add
mov
daa
or
sbb
aaa
clts
rolb
adc
das
add
js
das
adc
js
das
add
cwtl
daa
push
add
mov
sub
add
add
enter
and
push
adc
inc
filds
xor
add
fadds
cmp
pop
and
aaa
or
movl
add
int3
rcrl
aam
das
jne
adc
in
shrb
hlt
inc
pop
pusha
adcl
rolb
add
mov
pop
adc
pop
loopne
adc
aaa
dec
add
sub
pusha
add
xor
das
and
pop
adc
aaa
cmpsl
xadd
adc
adc
add
push
aaa
aaa
add
jo
aaa
adc
das
add
addb
imull
aaa
add
add
test
das
add
fists
sbb
dec
and
rclb
add
push
add
add
cs
add
sub
es
add
xor
xor
and
adc
push
add
adc
push
add
mov
push
adc
adc
inc
adc
loopne
pop
xchg
xchg
sbb
push
add
mov
rol
iret
inc
pop
pusha
sub
fiaddl
bound
adc
inc
pop
arpl
adc
inc
pop
jno
adc
inc
pop
bound
mov
sbb
and
iret
and
ss
pop
and
and
inc
inc
pop
and
pusha
sub
pop
add
pop
and
in
xor
adc
call
or
mov
xchg
outsb
pop
and
mov
inc
adcb
inc
punpcklbw
pusha
xor
enter
xchg
adc
pop
inc
pusha
add
fs
pop
pusha
and
outsl
inc
pop
pusha
out
jp
pop
pusha
out
test
and
inc
pop
and
inc
inc
pop
and
inc
shl
mov
shl
shl
in
out
sub
add
out
popl
loopne
adc
sbb
testl
cmp
mov
sub
add
add
add
mov
daa
incl
rclb
add
push
add
add
cs
add
push
sbb
pop
add
add
adc
daa
decl
aaa
daa
add
sub
daa
cmp
daa
cmp
das
add
add
adc
inc
pop
xchg
adc
cs
add
dec
inc
jg
dec
add
push
inc
punpcklbw
adc
pop
loopne
sub
add
sbb
cmp
pusha
pop
sub
sbb
imul
adc
and
fists
cmc
inc
incl
sub
adc
add
mov
andb
add
enter
adc
aaa
daa
add
test
pop
adc
and
aaa
ja
daa
daa
add
dec
aaa
daa
add
fsubs
jg
adc
daa
add
in
inc
daa
pusha
pop
adc
daa
das
add
mov
sub
add
add
pop
adc
adc
rclb
and
sub
adc
daa
das
add
push
adc
ljmp
dec
add
push
add
and
js
daa
test
add
jg
adc
push
xlat
add
rol
push
adc
add
push
add
clc
sub
arpl
adc
pop
es
adc
and
pop
inc
pop
add
push
add
push
daa
das
add
push
adc
pusha
es
add
add
adc
adc
lahf
adc
sub
sub
adc
and
and
mov
daa
daa
add
sub
daa
add
mov
xlat
add
push
aaa
daa
add
mov
adc
xorb
add
mov
test
daa
add
shlb
daa
add
shlb
daa
add
in
daa
pusha
add
mov
adc
rolb
rclb
clc
inc
movups
and
mov
adc
adc
or
mov
in
inc
adc
clc
sub
adc
sbb
adc
xchg
cmpsl
or
push
inc
sbb
add
jp
adc
lock
adc
dec
daa
adc
sbb
cmp
add
mov
adc
adc
inc
adc
cld
inc
arpl
shlb
arpl
adc
dec
adc
insb
inc
arpl
jo
mov
adc
daa
adc
add
into
inc
adc
loopne
arpl
jl
adc
sbb
adc
sbb
dec
add
int3
inc
adc
add
adc
add
incb
adc
inc
dec
adc
outsb
dec
adc
sub
cmp
add
daa
add
js
adc
mov
daa
mov
adc
inc
adc
cwtl
daa
arpl
adc
dec
adc
xor
arpl
add
adc
inc
add
cwtl
inc
add
xchg
adc
add
fs
add
push
inc
add
inc
inc
add
xor
pusha
cmpsl
inc
mov
lods
rorb
repnz
addr16
inc
add
sbb
adc
inc
add
adc
adc
inc
movups
add
push
inc
add
push
inc
pop
adc
adc
inc
adc
out
inc
add
incb
adc
inc
adc
adc
adc
inc
add
cs
add
inc
inc
add
push
inc
add
push
add
jbe
add
nop
inc
add
mov
inc
sub
rolb
into
inc
add
fiaddl
adc
pusha
pop
adc
add
inc
add
fiaddl
adc
inc
add
add
outsl
adc
inc
add
sub
adc
inc
add
mov
aaa
adc
pop
adc
add
jl
pop
adc
inc
iret
adc
inc
add
xchg
adc
inc
pop
adc
inc
add
movsb
inc
sub
cld
inc
pop
adc
inc
add
addb
push
inc
add
jbe
add
push
add
pop
inc
add
push
inc
add
dec
inc
add
xor
adc
inc
add
es
add
mov
mov
sbb
pop
adc
dec
adc
add
push
inc
add
inc
inc
add
xor
add
sub
adc
pusha
xchg
inc
add
inc
adc
out
add
lret
adc
inc
add
movsb
inc
add
cwtl
inc
add
mov
adc
add
pop
inc
add
push
inc
add
inc
inc
add
sub
add
push
inc
add
or
adc
inc
inc
repz
add
fadds
adc
inc
add
mov
inc
add
jle
add
jb
add
pusha
inc
add
dec
inc
add
cmp
adc
inc
add
and
add
adc
add
add
fistl
xor
add
inc
add
push
xor
adc
add
dec
inc
add
pop
inc
add
push
add
jle
add
nop
inc
add
mov
inc
add
les
adc
inc
add
fiadds
adc
inc
add
clc
inc
add
push
ss
pop
inc
add
and
add
xor
adc
add
push
inc
add
fs
add
js
add
test
adc
inc
add
scas
inc
add
mov
inc
add
loopne
add
in
inc
add
testb
adc
inc
jg
add
inc
inc
add
pop
inc
add
js
add
mov
adc
inc
add
ret
adc
inc
add
fiadds
adc
inc
add
push
inc
xchg
adc
inc
add
es
add
ss
add
inc
inc
add
fs
add
jbe
add
mov
adc
inc
add
mov
inc
add
rolb
adc
inc
add
mov
adc
add
pusha
inc
add
dec
inc
add
ss
add
and
adc
add
add
adc
inc
sti
inc
add
aam
add
les
adc
inc
add
addb
insb
inc
add
pusha
inc
add
push
inc
add
inc
inc
add
sub
adc
add
or
adc
xor
inc
add
fiadds
adc
inc
add
mov
inc
add
xchg
inc
add
xchg
adc
add
pusha
inc
add
inc
inc
add
cmp
adc
inc
add
and
adc
inc
add
add
adc
xor
inc
add
inc
add
lret
adc
add
xchg
inc
add
addb
jbe
add
push
add
pop
inc
add
cmp
add
and
adc
add
cld
xor
inc
add
in
add
enter
mov
inc
add
pushf
inc
add
mov
adc
add
outsb
inc
add
pop
inc
add
dec
inc
add
xor
adc
inc
add
push
inc
add
hlt
inc
out
adc
inc
add
fadds
adc
inc
add
mov
add
mov
inc
add
mov
fwait
adc
inc
fbld
adc
pusha
add
mov
adc
xor
adc
jne
inc
add
adc
inc
add
adc
add
inc
inc
add
sub
adc
inc
add
and
inc
add
xor
adc
inc
add
adc
dec
daa
adc
dec
mov
adc
dec
inc
add
adc
dec
scas
adc
add
and
shrl
adcb
orb
cmpb
adc
shrb
adc
shlb
shlb
enter
jnp
dec
adc
inc
iret
adc
rcll
sub
adc
add
add
adc
inc
inc
cmovo
adc
inc
add
mov
inc
add
lcall
adc
add
pop
inc
add
inc
inc
add
sub
add
and
adc
inc
add
repnz
inc
xlat
inc
add
fadds
adc
inc
add
mov
inc
add
cwtl
inc
add
xchg
adc
add
bound
adc
add
inc
inc
add
sub
adc
inc
add
or
adc
inc
inc
filds
adc
inc
pop
adc
inc
add
mov
inc
add
xchg
inc
add
xchg
adc
add
fs
add
push
inc
add
inc
inc
add
sub
add
sbb
add
add
add
lock
inc
ret
inc
add
movb
mov
inc
add
mov
adc
inc
add
push
inc
add
inc
inc
add
xor
adc
inc
add
push
inc
add
repnz
jae
add
mov
inc
add
pushf
inc
add
mov
adc
inc
add
pop
inc
add
dec
inc
add
cmp
adc
inc
add
push
inc
add
cmp
adc
inc
add
rolb
adc
inc
add
xchg
inc
add
addb
je
add
fs
add
push
inc
add
inc
inc
add
enter
push
inc
rcll
pusha
inc
add
jbe
add
fiadds
adc
inc
xchg
adc
inc
add
or
inc
mov
inc
add
inc
inc
add
push
inc
add
inc
add
jp
add
mov
adc
inc
add
mov
inc
add
aam
add
xor
push
adc
inc
add
and
adc
inc
add
add
add
clc
cmp
jae
add
fiaddl
adc
inc
add
mov
add
mov
inc
add
je
add
push
inc
add
dec
inc
add
inc
inc
add
ss
add
and
add
push
inc
add
or
adc
cmp
inc
add
aam
add
movb
mov
inc
add
sahf
inc
add
xchg
inc
add
test
adc
add
bound
adc
cmp
loopne
mov
lock
add
add
inc
mov
adc
inc
add
sub
adc
inc
add
dec
inc
add
pop
inc
add
inc
add
jbe
add
mov
adc
inc
add
mov
add
ret
adc
inc
add
faddl
adc
inc
add
lock
add
push
inc
pop
adc
add
cs
add
and
adc
inc
add
incb
adc
inc
das
pusha
add
sbb
inc
daa
inc
add
inc
inc
add
fs
add
je
add
mov
adc
inc
add
into
inc
add
faddl
adc
inc
add
add
adc
inc
add
and
adc
inc
add
dec
inc
add
push
inc
pop
adc
pop
xchg
inc
rcll
test
add
mov
arpl
and
gs
adcl
ret
and
arpl
adc
pusha
xor
adc
das
adc
inc
lret
adc
inc
add
dec
inc
add
adc
add
or
adc
pusha
add
sub
inc
push
dec
push
je
gs
insl
and
push
aad
inc
jb
ja
imul
es
add
inc
gs
mov
adc
inc
push
and
inc
dec
and
call
imul
imul
dec
orb
push
push
addb
arpl
insl
imul
jae
popa
jb
add
adc
push
inc
insb
outsl
jae
add
adc
dec
jne
inc
and
test
adc
add
push
je
jo
add
adc
inc
daa
adc
pop
loopne
sbb
gs
jb
dec
gs
and
bound
daa
add
push
jb
jo
jb
jns
add
cmp
lods
repz
adc
jo
inc
add
jbe
inc
sbb
or
jne
inc
gs
add
add
adc
popa
jne
pop
adc
loopne
adc
imul
and
add
shl
sub
add
popa
jns
outsl
jne
fs
mov
push
dec
dec
dec
dec
sbbl
loope
push
push
inc
push
push
dec
dec
dec
orb
add
popa
outsb
fs
gs
add
imul
insb
and
inc
inc
push
adc
or
push
adc
inc
in
push
imul
adc
and
enter
inc
inc
add
dec
imul
dec
jne
inc
imul
pusha
cmp
inc
fs
adc
add
pusha
adc
shlb
adc
adc
insl
bound
jb
and
int3
adc
add
push
inc
pop
adc
jb
sahf
hlt
adc
inc
mov
outsl
jb
pusha
fsts
add
gs
and
or
pop
je
jb
bound
gs
movsl
adc
mov
or
inc
imul
add
ret
push
gs
jo
popa
je
inc
nopl
bound
push
outsb
and
movups
adc
insb
inc
sbb
js
inc
mov
int
jbe
inc
jbe
xchg
add
gs
xor
xor
sbb
rorb
aas
fistl
into
shll
jo
lods
adc
push
roll
adc
mov
mov
test
aaa
adc
adcb
add
jne
aas
adc
jae
xor
add
add
jb
outsb
push
push
loopne
inc
daa
adc
add
inc
mov
unpckhps
and
int
push
addl
adc
xchg
adc
adc
xlat
cmc
sbb
popa
jne
je
inc
dec
dec
push
adc
jo
or
inc
frstor
dec
sbbb
push
mov
or
add
adc
gs
xchg
adc
subb
adc
add
inc
int3
adc
arpl
stc
add
inc
adc
and
adc
arpl
push
inc
pop
and
adc
adc
mov
jne
adcl
rorb
add
jge
lret
adc
mov
xchg
mov
dec
inc
stos
adc
mov
and
aam
mov
aad
dec
adc
and
notb
add
movl
loopne
adc
gs
lret
orb
push
inc
and
arpl
outsl
and
in
adc
xor
pop
mov
mov
adc
jecxz
inc
cmp
and
and
pop
push
adc
push
inc
movsl
and
stc
adc
mov
dec
rcll
add
cmp
add
data16
inc
test
inc
pop
sbb
jae
push
gs
popa
jo
outsl
and
adc
adc
jae
cmpsb
loop
adc
mov
and
inc
sbb
jmp
imul
adc
add
add
and
adc
mov
daa
jg
loope
adc
shl
adcb
pop
adc
fwait
aad
push
outsl
push
imul
jno
pop
daa
sbb
adc
cmpsl
adc
gs
outsl
outsb
sub
adc
add
arpl
push
gs
arpl
arpl
push
adc
pop
add
dec
outsb
and
inc
mov
and
int3
bound
ret
mov
adc
insb
adc
lahf
xlat
pusha
or
add
mov
pop
add
add
adc
jo
inc
jl
je
mov
stos
add
jne
push
jne
inc
inc
inc
adc
scas
add
sbbb
fs
data16
jecxz
movhps
outsl
insl
add
test
add
adc
jg
aad
rclb
add
into
inc
adc
jmp
inc
or
enter
mov
push
insb
jae
or
mov
cmp
rclb
mov
adc
push
push
popa
insb
jne
add
mov
add
sbb
andl
add
add
xchg
adc
add
popa
out
inc
mov
daa
lea
jbe
mov
bound
adc
xor
adc
dec
inc
push
mov
push
pusha
or
push
push
test
adc
add
inc
add
ja
and
add
sbb
sbb
fsts
imul
test
movsb
push
adc
adc
adcl
loopne
std
adc
push
adc
push
add
pusha
xchg
sbb
adc
or
pop
add
adc
and
push
mov
stos
adc
jns
add
sub
adc
jb
and
aad
inc
add
dec
lahf
adc
outsl
jns
fwait
orb
mov
aad
repz
xchg
das
inc
add
mov
flds
adc
sub
add
adc
push
mov
popa
cmpsb
adc
mov
xor
mov
inc
lret
inc
pop
adc
adc
inc
popa
adc
add
dec
ss
sub
add
adc
and
adc
inc
orb
jl
test
inc
add
fldcw
mov
loopne
dec
andb
lods
add
jo
pop
adc
inc
add
ja
inc
insb
imul
aad
repnz
arpl
push
es
adc
mov
mov
inc
insl
jo
jns
dec
add
inc
es
and
ret
inc
adc
jb
and
adc
adc
push
and
sbbb
outsb
shlb
sbb
xor
ds
das
adc
sub
inc
pop
and
cmc
adc
add
adc
add
dec
test
outsl
jo
pop
adc
adc
xorb
arpl
outsl
adc
sar
pop
and
test
jbe
loope
fs
push
adcb
add
lldt
xchg
add
pusha
or
add
inc
xor
pop
mov
xor
addr16
pop
shlb
loopne
and
jecxz
jl
push
jb
arpl
xchg
shll
or
adc
push
add
add
mov
pusha
push
xorl
mov
pusha
ret
inc
and
es
daa
adc
adc
sub
sbb
andl
sti
rcll
inc
sarl
es
add
lahf
fsub
leave
sub
add
add
fs
mov
pop
adc
loopne
adc
push
imul
rolb
dec
data16
jge
mov
ljmp
or
mov
adc
dec
arpl
jns
or
jae
sbb
lea
sbb
data16
loope
adc
pop
adc
ret
adc
dec
lldt
push
and
frstor
int
pusha
aad
adc
adc
jo
leave
xlat
inc
lret
cmp
loope
and
pusha
sub
adc
mov
pop
adc
insb
xchg
adc
imul
adc
jns
aad
cmp
add
clc
and
inc
xchg
adc
outsb
push
outsl
mov
out
mov
addl
fists
mov
and
inc
arpl
movsb
adc
dec
lea
push
popa
outsb
movsl
dec
shll
rcl
adc
mov
mov
popa
pusha
adc
fsts
imul
add
xor
adc
mov
adc
fwait
insl
inc
adc
add
mov
jae
mov
xchg
cmc
mov
std
inc
adc
xchg
inc
outsl
adc
outsl
outsl
insl
gs
sbb
loopne
lahf
adc
imul
subl
inc
test
jns
stc
loope
add
sbb
repz
sub
adc
dec
loop
mov
fists
push
adc
out
inc
mov
lds
mov
insb
cmc
inc
or
dec
aaa
orl
and
loopne
inc
adc
jne
mov
or
and
inc
lret
movl
mov
dec
and
imul
pop
add
inc
pop
inc
out
or
and
nop
out
popa
stos
bound
pusha
mov
cli
jmp
adc
sbb
pusha
xor
adc
inc
mov
jb
mov
test
adc
push
movsb
dec
adc
xchg
add
adc
arpl
adc
adc
daa
xchg
add
inc
add
add
add
sub
movsl
orb
inc
arpl
test
sbb
in
adc
sahf
mov
inc
add
push
imul
inc
movsb
inc
ss
mov
dec
adc
adc
fldenv
outsl
outsl
imul
xchg
inc
or
push
add
add
xor
adc
pop
sub
pusha
dec
adc
addr16
jg
in
and
adc
add
adc
insb
insb
outsb
sub
push
adcb
push
add
push
es
add
adc
add
push
adc
add
dec
pop
inc
bound
lea
inc
xchg
xor
pusha
bound
inc
inc
cmpb
cmp
or
ljmp
or
inc
pop
adc
inc
pop
and
sbbb
test
mov
inc
xchg
adc
jae
inc
pop
adc
fs
jb
lds
adc
jb
adc
mov
inc
xchg
and
js
mov
adc
in
mov
es
adc
loopne
pusha
mov
sbb
and
str
sti
adc
mov
incl
imul
mov
mov
lret
ret
jmp
out
adc
inc
push
adc
push
inc
aas
inc
push
push
jne
inc
inc
in
outsb
push
popa
and
adc
rorb
mov
xor
push
adc
and
call
xchg
roll
mov
jmp
add
adc
xchg
add
mov
sub
mov
sub
out
sub
sub
lret
adc
inc
mov
and
adc
mov
incl
adc
daa
xlat
add
inc
jg
aas
es
xchg
push
add
inc
fs
jae
mov
bound
jmp
adc
jns
into
add
push
data16
inc
dec
loopne
adc
push
ret
adc
mov
push
xor
push
lds
adc
out
pusha
or
adc
loop
mov
imul
outsb
insl
sbb
adc
and
stos
ret
adc
inc
mov
jae
outsb
mov
loop
cmpb
or
inc
jb
add
adcl
int
aam
push
add
inc
push
je
and
dec
inc
or
inc
inc
or
scas
inc
inc
adc
dec
adc
out
adc
inc
insb
inc
and
adc
add
push
imul
sarl
adc
arpl
mov
andb
andl
inc
popa
adc
add
adc
cld
mov
adc
push
pop
pusha
cmp
pop
andb
adc
inc
sub
dec
mov
andb
dec
adc
loopne
adc
icebp
cltd
inc
inc
loop
adc
dec
lock
outsl
dec
xchg
les
push
insb
inc
adc
add
and
pusha
adc
test
sub
add
xorb
adc
inc
notl
insb
inc
sub
ja
inc
loopne
adc
inc
adc
arpl
and
adc
loopne
pusha
push
loopne
push
mov
inc
add
sub
adc
inc
adc
jns
cwtl
adc
sub
gs
test
adcb
pop
pusha
adc
push
dec
push
xor
cmc
push
mov
andb
imul
in
and
adc
cmc
adc
push
push
adc
xchg
popa
or
push
outsl
inc
adc
xchg
adc
fld
push
inc
or
jl
or
arpl
adc
push
push
imul
rclb
jnp
and
adc
inc
lock
lea
xchg
adc
inc
push
gs
adc
shll
add
add
cli
add
and
adc
pop
or
adc
adc
add
loope
pusha
push
ret
lret
adc
shrb
pusha
cmc
repz
outsl
outsb
sbbl
add
lcall
subl
add
test
and
sub
adc
pusha
aaa
and
mov
test
ja
adc
jno
iret
adc
inc
adc
pusha
and
filds
adc
cs
add
pusha
sub
jge
inc
inc
pop
es
dec
mov
movsb
pop
adc
cli
pusha
adc
fldl
adc
add
test
mov
mov
dec
shlb
adc
sub
adc
adc
adc
add
arpl
fcoml
add
xorl
in
pusha
adc
or
mov
adc
pusha
or
mov
aas
sub
add
cmc
sub
add
jnp
roll
push
sub
sub
jmp
rclb
ret
sub
add
lahf
and
dec
push
in
insb
jne
andb
cmc
adc
add
add
adc
rolb
inc
dec
vmovss
adc
add
adc
pusha
notb
add
adc
inc
rcrb
sbb
lea
mov
adc
inc
and
pop
out
sbb
adc
jl
jo
shlb
sbb
dec
dec
dec
cs
push
push
and
and
imul
pusha
punpcklwd
daa
xor
adc
pusha
adc
daa
adc
inc
out
cmp
bound
movups
and
in
out
adc
sbbb
filds
adc
jne
jb
xchg
sub
adc
jb
adc
inc
and
imul
cmpb
and
inc
dec
imul
sahf
andb
adc
andb
jp
add
inc
add
adc
push
pop
ret
push
ja
push
lods
pop
iret
adc
jns
movups
cmc
in
stos
outsl
adc
inc
dec
repnz
gs
and
ljmp
adc
cmc
adc
push
push
push
add
push
dec
inc
push
cmpsl
cwtl
adc
loopne
das
adc
lods
jmp
adc
or
adc
add
out
sti
adc
shrb
dec
inc
inc
push
push
loopne
and
out
loopne
adc
add
inc
fwait
stc
adc
sub
add
xchg
cmp
sbb
stos
push
adc
daa
sbb
sub
adc
pop
xchg
pop
adc
pop
loopne
sti
adc
daa
sub
sahf
dec
inc
aaa
adc
push
mov
dec
popa
jae
jge
xchg
daa
daa
add
jno
and
adc
hlt
ja
aaa
daa
adc
jae
adc
inc
icebp
sub
and
daa
sbb
divl
add
dec
inc
push
and
adc
inc
push
orb
sub
sbb
and
out
push
adcl
sub
or
or
push
push
add
add
sbb
jb
add
jae
add
add
lea
adc
adc
inc
add
adc
adc
adc
adc
add
and
inc
adc
push
dec
add
inc
or
pop
dec
add
inc
pop
sbb
dec
add
inc
add
push
cmp
inc
mov
add
adc
inc
add
ret
inc
add
sbb
add
addr16
add
pusha
dec
add
dec
add
inc
add
push
loope
or
or
add
push
dec
add
mov
xchg
inc
add
rolb
adc
mov
dec
inc
add
or
dec
add
push
dec
add
jg
cwtl
inc
add
or
add
xchg
push
inc
sbbl
daa
dec
add
sub
pusha
inc
inc
add
aaa
dec
add
inc
add
jl
add
mov
cmp
and
adc
add
add
and
add
dec
add
adc
pop
add
flds
adc
lldt
shll
sbb
mov
add
add
add
or
add
add
add
add
add
add
push
inc
and
push
push
add
inc
add
lods
inc
add
nop
inc
add
mov
adc
inc
cmp
or
add
or
or
aam
add
mov
add
lret
fld
cmpsl
int
mov
loopne
pusha
imul
mov
lret
into
in
stc
fbstp
pop
adc
stos
inc
xor
xadd
add
mov
lret
ror
ret
loop
mov
mov
sti
mov
rcr
roll
unpcklps
repz
lret
adc
adc
adc
mov
mov
loopne
int
mov
into
lret
mov
cmpsl
add
and
pop
inc
add
fs
ljmp
enter
sbb
fs
and
movups
adc
subl
arpl
je
outsl
outsb
inc
inc
and
add
dec
outsl
je
jne
jo
jb
gs
add
daa
add
inc
imul
outsl
data16
popa
jb
pusha
jae
rol
iret
mov
push
pusha
xchg
add
jae
leave
iret
mov
and
jb
add
mov
into
les
inc
adc
sub
adc
lret
stc
rcl
loopne
adc
pusha
adc
sub
cmp
adc
push
push
inc
cmp
dec
addb
dec
inc
inc
inc
cmp
dec
inc
inc
push
dec
pusha
nopl
jno
jae
jbe
fs
add
adc
pusha
sub
cmp
inc
inc
push
inc
inc
inc
push
inc
inc
adc
or
inc
pop
mov
inc
push
dec
push
inc
push
cmp
push
gs
gs
push
inc
push
pusha
adc
add
pop
pusha
insb
adc
inc
sub
add
or
pop
inc
insl
jo
jns
popa
jb
pop
push
mov
mov
mov
mov
aam
add
push
add
sub
add
lea
mov
add
pushf
inc
add
addb
inc
inc
add
sbb
add
loopne
inc
adc
adc
adc
add
jmp
pop
add
add
in
das
adc
adc
add
adc
adc
xor
adc
out
inc
adc
pavgb
adc
das
daa
add
stc
das
adc
adc
sub
add
inc
mov
add
daa
add
mov
add
adc
pusha
add
in
add
cmp
add
adc
add
fildl
adc
add
sub
das
daa
add
cld
rclb
sub
add
and
xor
sub
add
xor
cs
add
pop
add
jmp
xchg
add
stc
das
testl
mov
add
adc
loopne
sub
testl
ret
add
add
incl
pusha
add
icebp
xor
add
add
mov
sub
add
and
xor
add
jmp
push
cmp
add
xor
push
sub
add
ret
push
add
jae
xor
add
add
testl
or
aas
add
orl
ss
add
xchg
sub
add
adc
xor
add
and
add
push
or
xor
add
push
ds
add
pop
or
sbb
xor
or
xor
or
cmp
clc
add
fisttps
mov
add
repz
testl
add
and
add
testl
add
dec
add
pop
add
daa
add
add
add
and
add
add
sub
in
aas
adc
xor
add
and
push
xor
add
or
daa
add
pop
push
add
xchg
cs
adc
sub
or
xor
add
and
add
and
pusha
add
and
push
add
adc
add
add
xor
lock
cmp
add
movl
iret
add
xchg
pop
sub
add
xor
adc
and
add
add
and
wrmsr
pop
or
add
out
add
cmp
adc
xor
add
add
cs
and
or
and
or
and
or
mov
xor
add
add
push
add
sub
adc
cmp
add
add
and
adc
xor
sbb
and
or
add
pop
add
pop
add
adc
adc
add
add
iret
add
adc
cmp
and
dec
add
pop
xor
add
and
sub
add
jmp
adc
and
add
xchg
add
and
add
add
cmp
add
xor
add
jnp
xor
add
sub
add
incl
pop
adc
add
inc
add
loopne
adc
daa
pop
add
out
inc
or
add
adc
adc
daa
pop
add
push
inc
add
jne
pop
adc
add
inc
inc
add
adc
pop
add
adc
add
adc
inc
add
pop
adc
add
mov
pop
add
jecxz
adc
inc
adcl
inc
test
ja
pop
add
fldl
adc
or
pop
push
int3
add
daa
pop
add
inc
pop
adc
jl
clc
add
add
add
add
inc
add
adc
inc
adc
adc
inc
inc
sub
add
xor
pop
adc
pop
sub
add
cltd
sub
add
jae
pop
pusha
mov
dec
popa
pop
adc
and
pusha
or
lock
cmovo
adc
add
test
sti
orb
adc
add
add
add
add
dec
add
add
add
add
add
and
inc
pop
adc
out
pop
add
jg
xor
cld
inc
sbb
adc
inc
inc
adc
inc
inc
pusha
add
add
pusha
add
mov
adc
pop
adc
pop
adc
loope
add
rcll
sti
inc
ja
incl
pusha
cmp
pusha
or
rolb
frstor
pusha
pop
pusha
unpcklps
add
add
inc
mov
adc
inc
add
add
pop
add
add
adc
add
add
inc
add
mov
addb
add
add
pop
adc
inc
lds
xor
loopne
adc
rolb
mov
inc
dec
adc
inc
outsl
adc
inc
pop
adc
inc
fstl
testl
adc
inc
inc
sub
add
add
cmp
and
ja
add
or
and
add
sub
add
xor
adc
xor
sub
rorb
add
adc
and
add
and
das
add
adc
add
sti
add
pop
adc
adc
add
je
add
jae
add
jbe
add
ja
add
addl
and
add
punpcklbw
xor
adc
arpl
add
push
add
sbb
sub
and
mov
and
pusha
add
outsl
or
cmp
add
roll
cmp
add
std
das
imul
inc
adc
pusha
mov
inc
add
inc
add
mov
movups
mov
add
mov
pop
adc
inc
adc
add
inc
daa
and
cmp
mov
pusha
inc
add
push
inc
add
inc
inc
add
cmp
add
xor
push
push
push
xor
fs
insb
add
jb
pop
adc
jo
rclb
adc
gs
or
sbb
adc
gs
gs
inc
add
mov
adc
and
sbb
iret
shrb
cmp
fdivs
std
xlat
jmp
shr
daa
adc
jmp
and
shr
mov
and
mov
into
lods
lret
or
xlat
cmp
mov
out
shll
adc
not
inc
aaa
pusha
cmp
aaa
adc
ror
lea
sbb
into
cmpsl
add
mov
mov
mov
mov
rol
pusha
push
adc
pop
pusha
dec
pusha
pop
pop
add
xlat
rcl
out
mov
into
mov
mov
fsubs
adc
or
ror
iret
mov
mov
stc
mov
pusha
fists
mov
ror
pusha
and
push
mov
rol
inc
dec
dec
pusha
dec
sbb
repz
iret
mov
aad
mov
into
inc
adc
mov
sbb
movsl
xor
sbb
std
rol
iret
ret
loope
pusha
xchg
adc
inc
pop
pusha
pop
loopne
adc
mov
adc
std
mov
into
stos
xor
shlb
sbb
les
mov
les
inc
aaa
sbb
mov
ret
mov
lret
stc
shr
shrb
mov
cmpsl
add
add
popa
test
add
arpl
pop
jne
outsl
ja
xor
add
dec
push
pusha
pop
adc
loop
adc
add
inc
or
mov
test
push
push
push
dec
dec
add
mov
lds
cs
add
pop
sub
sub
int
ret
mull
adc
inc
add
and
and
pop
jae
js
adc
outsb
pop
arpl
insl
popa
outsb
add
push
pusha
adc
sbbl
imul
jo
popa
icebp
adc
movsl
shll
dec
dec
inc
dec
inc
dec
pop
pusha
daa
push
inc
dec
push
push
dec
inc
pop
inc
out
adc
lods
mov
aam
pusha
pop
adc
inc
pop
inc
popa
je
bound
gs
movlps
ja
adc
adc
insb
outsl
jae
daa
and
pop
inc
gs
outsl
outsb
outsb
arpl
jb
outsb
loopnew
adc
insb
pusha
pop
subb
or
push
gs
fs
outsl
insb
inc
jns
outsb
fs
lldt
dec
popa
insl
pusha
sub
inc
js
arpl
gs
jno
xor
gs
xor
je
lret
add
repnz
stc
aam
cmpsl
mov
mov
jmp
divb
mov
mov
mov
inc
cmp
jmp
adc
add
and
cmp
into
mov
xor
add
scas
pusha
and
lret
faddl
aad
mov
pusha
aas
inc
adcl
loop
cmc
cmp
mov
mov
inc
adc
xchg
mov
das
sub
pop
mov
and
mov
out
outsl
adc
inc
aas
and
cmp
and
cli
ret
adc
lret
loope
and
insb
push
outsb
jb
addr16
or
gs
in
cmp
adc
push
sub
add
sbb
inc
push
dec
push
pop
dec
inc
bound
smsw
std
add
pusha
or
into
lret
popa
pop
adc
mov
into
int3
in
daa
pop
sar
mov
lret
mov
jmp
adc
mov
stc
cs
sbb
pusha
pop
adc
mov
adc
arpl
sti
pop
insl
outsl
jbe
push
insb
popa
jns
mov
outsl
push
xor
adc
hlt
add
or
nopl
adc
add
or
repnz
adc
adc
das
movl
and
add
and
add
dec
pcmpgtw
aas
inc
add
jg
jg
add
orb
aas
inc
adc
or
rolb
or
sub
push
push
and
push
das
stos
push
jg
adc
inc
adc
adc
popa
adc
add
addb
push
sub
mov
jge
and
adc
xor
inc
pop
pop
jmp
lods
daa
pop
dec
cltd
sbb
add
arpl
jg
pop
pop
dec
jg
xor
dec
jmp
mov
xor
pusha
aaa
adc
xor
dec
pusha
inc
adc
dec
inc
pop
inc
das
adc
dec
xor
inc
int
xchg
add
add
stos
sub
lcall
stos
cmp
push
stos
cmp
sbb
dec
pop
push
inc
aas
test
and
pop
setns
int3
sub
push
adc
adc
inc
jns
push
inc
and
push
sub
pop
inc
push
add
jg
ds
pop
adc
je
push
or
ja
ja
arpl
add
adc
push
mov
sub
lcall
or
cltd
sbb
jmp
adc
cmp
adc
fwait
add
cltd
cmp
es
sbb
pop
lcall
adc
pushw
mov
inc
add
int3
dec
xor
loopne
scas
pop
cmp
sub
imul
inc
rcll
sub
imul
adc
loopne
lods
inc
xor
dec
mov
cwtl
pop
lods
addr16
pop
rcll
hlt
push
test
inc
sbb
jg
daa
inc
popa
data16
push
and
adc
aas
and
movsb
jg
mov
popa
jns
cltd
sbb
pusha
add
pusha
das
popa
lods
adc
ret
inc
add
xchg
inc
iret
inc
or
pop
bound
xorb
sbb
xorb
cmp
bound
imul
adc
jns
aas
mov
jno
pusha
or
xor
mov
es
dec
inc
adcl
cltd
sbb
inc
and
data16
push
adc
int
pusha
add
cltd
pop
pusha
xchg
mov
int
mov
xchg
and
xor
adc
cltd
sbb
adc
ss
cmpsl
adc
mov
cltd
sbb
add
sbb
data16
gs
int3
dec
pusha
add
xchg
and
push
adc
punpcklbw
pop
add
lds
roll
inc
push
imul
outsb
imul
push
inc
adc
pusha
or
lock
adc
aas
dec
cmovnp
adc
pop
inc
add
mov
adc
add
adc
sub
add
adc
addb
imul
inc
add
add
adc
inc
add
mov
adc
inc
add
xchg
adc
inc
add
addb
test
adc
add
mov
adc
inc
cmp
and
adc
or
cmp
mov
inc
pusha
or
mov
jb
mov
add
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
sahf
push
inc
pop
adc
fistl
push
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pusha
incl
imul
push
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
inc
pop
adc
and
pop
pusha
stos
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
adc
pop
adc
gs
inc
pop
popa
jnp
mov
inc
pop
adc
cwtl
inc
pop
popa
imul
inc
pop
cmpsl
adc
adc
pop
adc
inc
pop
adc
pop
adc
adc
inc
pop
inc
rclb
add
adc
inc
pop
adc
pop
adc
inc
pop
adc
adc
bound
inc
pop
inc
je
add
adc
inc
pop
adc
pop
and
inc
adc
adc
inc
pop
imul
das
inc
pop
adc
pop
gs
inc
inc
pop
insb
adc
pop
adc
inc
pop
adc
pop
inc
push
pop
adc
pop
adc
pop
adc
inc
pop
inc
out
adc
sub
pop
adc
inc
pop
adc
rolb
and
pop
add
bound
addr16
imul
jno
jae
jne
ja
jns
add
or
or
add
or
adc
adc
adc
adc
popa
inc
xor
fs
outsl
inc
xor
jb
pusha
adc
inc
cmp
adc
add
sbb
pop
sbb
sbb
sub
and
sub
xor
sub
sub
and
add
push
bound
jp
outsl
sbb
sbb
sbb
push
pop
and
and
and
adc
xor
sub
addb
add
add
adc
add
add
add
adc
addb
add
adc
cmp
add
sbb
add
andb
add
inc
add
sbb
add
pop
orb
pusha
pop
adc
addb
or
and
add
adc
rolb
sbb
add
adc
add
add
adc
addb
inc
add
adc
add
or
or
add
das
rolb
xor
add
adc
sub
xor
add
jo
adc
adc
adc
add
adc
adc
xor
add
adc
add
sbb
adc
and
adc
adc
adc
adc
add
mov
loopne
adc
inc
or
sbb
adc
sub
add
sbb
adc
orb
sbb
adc
adc
add
sbb
sbb
add
addb
and
das
add
adc
pop
addb
mov
or
and
adc
pusha
add
and
adc
lldt
sub
sub
add
and
mov
add
cmp
add
sub
sub
adc
andb
and
andb
add
sub
xor
add
adc
sub
add
sub
add
adc
adc
addb
sub
xor
subb
adc
pusha
add
or
loopne
adc
or
xor
add
sbb
adc
orb
cs
add
add
adc
pusha
movups
and
xor
add
and
and
orb
sub
add
sub
add
xor
xorb
pop
and
sub
add
xor
sub
add
sub
add
adc
add
adc
orb
sub
add
or
add
adc
cmpb
orb
sbb
cmp
adc
and
adc
mov
add
adc
or
or
cmp
addb
or
adc
inc
andb
inc
andb
cmp
add
adc
lldt
pop
inc
jge
add
adc
and
add
adc
pop
sbb
add
and
add
sbb
add
adc
xor
add
pop
cmp
add
sbb
add
adc
and
inc
addb
loopne
adc
or
add
adc
and
or
inc
add
sbb
inc
add
add
sbb
sub
add
dec
addb
adc
add
adc
add
orb
add
sbb
add
adc
cmp
add
sbb
aaa
xor
add
push
andb
add
xor
add
adc
addb
sub
add
push
and
orb
sub
andb
add
or
push
loopne
adc
addb
xor
push
and
sbb
add
adc
add
add
adc
sbb
adc
add
adc
push
and
adc
pop
adc
add
pop
inc
add
pop
rclb
add
push
pop
rolb
sbb
sub
add
pop
orb
sub
add
aaa
xor
add
pop
andb
orb
mov
or
sub
push
sub
sub
push
sub
adc
pop
sub
add
and
add
adc
bound
arpl
adc
xor
loopne
adc
or
add
adc
adc
adc
sub
xor
rdpmc
imul
rolb
rdpmc
imul
adc
sub
add
insb
andb
sub
outsb
andb
add
adc
adcb
cvtps2pi
add
jo
mov
jb
or
jae
add
je
add
jne
adc
sub
add
jbe
sub
or
sub
add
add
adc
add
adc
xor
add
es
add
cs
sub
add
jnp
sub
add
add
jl
sbb
sub
add
adc
add
adc
mov
rdmsr
loopne
adc
or
addb
and
sbb
adc
adc
pusha
add
test
sbb
add
and
add
adc
adc
adc
rolb
sbb
add
sbb
sub
add
xor
add
adc
rolb
sub
adc
add
adc
mov
orb
orb
and
adc
or
sbb
adc
add
adc
sub
add
sbb
add
orb
popl
adc
or
sub
add
xchg
adcb
xchg
orb
inc
add
add
add
adc
or
add
adc
sub
add
adc
add
das
and
xor
add
daa
cmp
add
cs
adc
add
adc
aaa
add
adc
lldt
cltd
sub
adc
daa
add
adc
inc
add
xor
add
lcall
add
adc
pushf
addb
sub
loopne
adc
add
sahf
and
addb
push
sbb
sbb
add
adc
mov
add
adc
add
pop
addb
sbb
adc
adc
pusha
add
inc
add
push
cmpsl
inc
add
inc
add
sub
add
adc
sub
add
adc
inc
add
xor
add
adc
daa
add
adc
push
and
adc
stos
inc
add
sub
add
sbb
push
aaa
cmp
add
or
scas
subb
mov
add
add
mov
or
inc
add
sbb
sbb
add
mov
or
inc
add
or
or
add
adc
add
and
mov
or
sub
add
xor
daa
daa
add
adc
rolb
sub
adc
orb
mov
push
sub
xor
sbb
xor
push
pop
sub
add
add
adc
loopne
adc
add
adc
mov
add
cmpb
sub
inc
add
sbb
add
adc
xor
add
mov
adc
add
sub
add
das
inc
add
xor
add
add
addb
add
or
sub
add
ret
and
sbb
add
movb
sub
add
enter
leave
and
sub
lret
or
adc
add
sub
add
int
mov
into
daa
or
adc
sub
orb
and
roll
sub
add
rolb
and
roll
inc
add
adc
aad
pusha
add
daa
xor
inc
add
sub
add
adcb
xor
add
sub
add
xlat
addb
xor
adcb
loopne
pop
flds
adc
rolb
sbb
addb
and
adc
das
add
adc
inc
add
adc
das
add
adc
das
add
adc
inc
add
sub
adc
fiaddl
addb
sbb
add
adc
addb
sbb
add
and
adcb
fldl
fiadds
sbb
adc
add
filds
add
sbb
add
adc
add
add
loop
or
inc
add
and
add
adc
sub
add
jecxz
sub
add
sbb
add
adc
and
rorb
ss
add
out
pusha
add
addb
jmp
add
ljmp
xor
adc
aaa
xor
add
in
subb
add
in
sub
adc
adc
mov
add
lock
inc
add
sub
adc
add
sub
mov
add
ss
add
repnz
repz
adc
sub
add
adc
sub
add
cmc
addb
adc
xor
add
testb
or
mov
loopne
adc
sbb
add
adc
orb
sub
add
stc
lldt
sbb
add
adc
addb
rolb
mov
loopne
sub
add
sub
add
adc
and
addb
daa
das
add
adc
xor
rolb
aaa
xor
add
sub
adc
addb
xor
orb
or
andb
adc
and
add
adc
inc
add
sbb
add
adc
addl
add
add
and
and
add
add
add
add
adc
pusha
add
adcl
daa
add
adc
sub
add
push
subl
add
adc
add
add
pop
orl
or
adc
adc
sub
add
or
adc
or
add
push
daa
or
cmp
add
and
jno
sub
adc
addl
add
adc
lldt
das
add
adc
adcl
xor
add
xor
add
adc
sub
add
adc
adc
sub
add
cs
push
adcl
addb
sub
add
sub
add
adc
loopne
adc
adcl
sbb
or
mov
cmp
add
sbb
add
xor
cmp
cmp
add
and
add
adc
or
ss
adc
xorl
add
and
and
add
add
xor
adc
andl
add
and
sub
add
adc
andl
adc
sub
add
and
add
adc
daa
add
and
sub
add
adc
subl
daa
adcl
addb
add
adc
and
add
adc
adc
inc
add
sbb
sbb
andl
and
adc
inc
add
adc
adc
adc
adc
sub
subl
add
adc
inc
or
adc
daa
add
adc
pusha
add
xor
add
sbb
add
adc
add
adc
addl
sub
add
pop
cmp
add
sbb
add
adc
pusha
add
xor
add
adc
xor
adc
xor
add
sub
add
adc
addl
inc
add
sbb
andl
adc
cmp
add
cmp
xor
sbb
addl
inc
add
adc
add
adc
addl
adc
inc
add
xor
andl
adc
sub
add
inc
sub
add
sub
addb
sbb
adc
inc
andl
inc
add
sub
inc
add
xor
andl
add
pop
aaa
or
or
pop
repz
inc
orl
inc
call
or
pop
popa
adc
inc
xlat
adc
sub
xchg
pop
jae
orl
dec
mov
adcl
xor
adc
inc
adc
push
add
adc
or
push
pop
cmp
push
ss
pop
or
sbb
and
ss
inc
in
sbb
xor
sub
xor
pop
pop
mov
sbb
and
aaa
adc
inc
test
ss
push
rcrl
or
daa
or
ss
dec
test
dec
inc
test
push
add
sbb
add
push
or
add
movntps
sub
pop
arpl
push
sbb
adc
or
inc
inc
add
push
sub
pop
sbb
sub
xor
add
or
sbb
sub
aaa
pop
pop
push
sbb
das
push
dec
sub
adc
push
or
add
or
add
sub
xchg
push
add
sub
sbb
sbb
add
adc
aaa
push
xor
inc
adc
adc
push
sub
cwtl
adc
xchg
dec
popa
inc
lret
push
push
sbb
or
push
sbb
das
or
add
push
or
and
add
aaa
or
adc
sub
pop
stc
add
das
push
sub
sbb
and
push
and
add
inc
movl
and
push
orl
sbb
push
xor
aaa
adc
or
or
sbb
push
aaa
add
add
adc
sub
xor
and
add
inc
add
sbb
or
sbb
sbb
adc
adc
push
xchg
adc
push
inc
out
add
inc
jne
xor
pop
aaa
adc
daa
add
push
inc
pop
adc
mov
adc
add
or
adc
pop
and
and
dec
mov
adc
sbb
es
aaa
pop
sbb
add
inc
mov
xor
sbb
or
adcl
daa
or
dec
lds
adc
inc
out
cvtpi2ps
add
xor
sbb
sbb
add
push
sub
sbb
aaa
add
pop
inc
adc
sbb
adc
das
mov
and
adc
adc
add
and
adc
inc
xchg
adc
sub
dec
jge
or
push
adc
adcl
addl
or
aaa
add
pop
andl
add
and
das
pop
orl
xor
dec
sbb
or
adc
or
push
sub
sbb
add
pop
orl
aaa
adc
aaa
or
push
xor
sbb
sbb
push
sbb
sub
and
pusha
gs
sbb
or
sbb
pop
sbb
adc
adc
out
pop
inc
imul
and
pop
sbbl
adc
sbb
adc
popa
dec
adc
add
inc
popf
inc
fwait
sbb
and
add
and
push
in
adc
sbb
daa
add
sbb
daa
or
push
xor
sbb
dec
pop
add
push
xor
pusha
andl
bound
push
sub
adc
pop
inc
cmc
add
adc
adc
push
sub
arpl
or
or
rdtsc
push
sbb
sbb
lahf
add
pop
and
sbb
push
sbb
adc
sbb
andw
add
inc
mov
xor
sbb
ss
pop
adc
sbb
das
push
inc
adc
pop
dec
iret
sbb
sbb
or
cvttps2pi
xor
adc
sbb
sbb
adc
or
sub
add
add
sbb
inc
lcall
pop
add
adc
push
and
add
pop
sbb
sbb
sbb
add
inc
adc
xor
inc
add
or
adc
or
adc
or
inc
int
adc
wrmsr
adc
push
sbb
sbb
ss
sub
inc
add
sbb
pop
sbb
sbb
sbb
aaa
dec
sbb
sbb
ss
xor
daa
adc
das
push
arpl
adc
push
inc
rcll
insb
addl
imul
pop
or
add
pop
aaa
outsb
subl
adc
inc
sub
or
and
add
inc
insl
sbb
add
inc
adc
or
add
sbb
xor
aaa
sbb
adc
add
inc
fsts
sub
aaa
pop
add
sub
sbb
sbb
xor
push
daa
add
adc
in
or
adc
adc
or
push
sub
pop
fstps
adc
or
push
ss
or
add
add
add
sbb
or
add
and
push
sbb
aaa
pusha
lods
adc
bound
and
adc
add
adc
jne
or
or
or
or
adc
inc
scas
adc
sub
pop
adc
add
jbe
or
sbbl
cs
ss
pop
inc
push
jne
add
or
or
push
cmp
or
sbb
aaa
add
adc
adc
inc
and
sbb
sbb
and
xor
add
ja
or
aaa
adc
add
push
and
inc
xchg
or
push
xor
add
cmpl
adc
das
push
sub
adc
adc
ss
or
adc
adc
xor
adc
or
and
pop
adc
sbbl
xor
add
adc
sub
ss
sbb
sub
inc
sti
adc
mov
sbb
sub
adc
add
xor
pop
roll
xor
sbb
orl
adc
inc
or
adc
inc
xor
addl
add
adc
sbb
fists
pop
and
dec
xchg
inc
push
adc
imul
adcl
add
or
add
push
inc
movsl
sbb
sub
xor
or
or
push
adc
xchg
add
pop
sbb
push
sbb
adc
or
inc
jecxz
xor
sub
sbb
fists
sbb
sbb
push
and
sbb
adc
inc
jno
xor
sbb
cmp
mov
push
sbb
sbb
add
push
and
sbb
inc
rcll
adc
and
add
add
sbb
or
push
and
cs
xor
xor
sub
xor
cvtpi2ps
adc
adc
sti
adc
ss
adc
push
aaa
add
outsb
xchg
add
inc
push
inc
daa
dec
and
add
push
xor
mov
daa
or
adc
data16
adc
inc
xchg
adc
sbb
sbb
rdtsc
adc
inc
popf
inc
inc
adc
and
sbb
add
or
sbb
mov
or
inc
push
adc
adc
add
inc
and
ss
aaa
or
and
addl
aaa
add
sbb
inc
lahf
adc
aaa
add
rcll
or
add
adc
or
and
xor
adc
orl
das
adc
pop
and
dec
mov
add
inc
xor
xor
sbb
sub
adc
inc
imul
push
sbb
sub
mov
add
push
xor
aaa
or
sbb
adc
adc
xor
sbb
xor
and
sub
xor
sbb
and
adc
and
sbb
sbb
push
sub
addl
sub
das
inc
xor
or
or
add
nop
orl
sbb
push
sbb
adcl
xor
daa
push
sub
adc
fs
adc
xor
adc
adc
xchg
inc
or
or
xchg
inc
sbb
adc
pop
aaa
or
push
add
add
lea
add
movsl
daa
sbb
add
sbb
and
inc
jnp
adc
or
add
adc
xchg
addl
sbb
add
inc
popf
adc
orl
aaa
or
adc
and
inc
or
adc
inc
pop
push
jmp
cmp
or
adc
xchg
adc
or
movsl
adc
inc
cmpsl
pusha
lret
adc
sbb
dec
adc
inc
lods
adc
ret
adc
sub
push
arpl
inc
addr16
roll
add
pop
pop
push
sbb
and
add
push
sbb
jbe
inc
leave
adc
adc
sub
inc
jno
daa
adc
adc
adc
add
pop
daa
or
push
sbb
xchg
adc
adc
inc
movl
inc
jne
and
adc
xor
dec
inc
pop
and
adc
xor
inc
xchg
adc
sub
inc
adc
inc
xor
adc
inc
rcll
dec
or
getsec
add
or
adc
inc
fwait
adc
inc
or
add
pop
dec
sub
adc
adc
or
inc
adc
sbb
and
sbb
push
and
sbb
sbb
movntps
ss
adc
adc
add
pop
out
push
add
add
add
or
adc
or
inc
xlat
inc
jmp
add
inc
dec
inc
and
and
or
add
inc
pop
push
or
push
and
and
cmc
and
pop
pop
xchg
adc
ss
jmp
xor
adc
adc
aaa
adc
adc
aaa
fwait
push
lods
adc
xor
sub
repz
ss
sbb
inc
das
sbb
or
add
pushf
adcl
addr16
aaa
add
and
xor
inc
imul
movups
push
or
adc
sahf
inc
lods
add
adc
pop
and
sbb
or
adc
pop
sbb
inc
pop
inc
jge
ss
sub
sub
or
add
add
adc
inc
mov
add
add
and
pop
sub
sbb
and
add
adc
push
inc
das
pop
add
adc
push
sub
daa
dec
adc
mov
xor
or
add
xor
add
push
cmc
push
and
xor
or
dec
cmp
adc
adc
pop
dec
lret
adc
aaa
dec
push
dec
stos
sbb
xor
sbb
add
sbb
xor
adc
adc
dec
adcl
adc
inc
mov
icebp
sbb
push
xor
sbb
aaa
movsb
adcl
popa
xchg
inc
rcll
sbb
sub
stos
pop
adc
adc
pop
sbb
or
add
adc
cs
xor
sub
sbb
add
or
movsl
orl
addl
popa
in
sub
pop
or
adc
or
test
ucomiss
xor
sbb
dec
mov
adc
adc
adc
ss
dec
imul
stos
orl
and
or
adc
lods
sbbl
inc
lea
or
add
inc
lods
adc
inc
fwait
adc
inc
insl
add
daa
add
pop
and
and
sbb
sub
lods
adcl
adc
xor
adc
add
adc
aaa
push
inc
int
push
xor
daa
or
adc
inc
push
adc
inc
and
adc
xor
add
sbb
push
and
add
dec
and
xor
pop
daa
adc
inc
ja
add
adc
adc
pop
adc
inc
cmp
inc
mov
add
adc
inc
cmp
add
or
ss
push
adc
pop
and
pop
xchg
inc
insl
push
sbb
dec
imul
sbb
aaa
add
mov
or
in
cmp
sbb
sbb
ret
dec
dec
push
xor
sbb
adc
sbb
inc
test
and
adc
push
sub
or
adc
or
movupd
push
inc
loope
or
scas
addl
dec
fildl
inc
imul
or
inc
mov
rorl
dec
popf
adc
and
imul
or
add
adc
aaa
mov
add
das
mov
mov
or
add
inc
sub
adc
sub
inc
addl
outsl
adc
dec
out
adc
sbb
rcll
sub
sub
adc
add
adc
movntps
imul
sbb
push
sub
adc
push
and
daa
adc
or
or
add
or
push
sbb
sub
mov
sub
xor
pop
add
add
adc
adc
daa
or
inc
dec
dec
in
adc
sub
pop
push
or
sbb
or
mov
inc
inc
adc
adc
sbb
sbb
pop
and
add
adcl
adc
add
or
dec
adc
inc
fists
sbb
xor
inc
sbb
adc
add
inc
ret
adc
pop
and
pop
sbb
sbb
fs
or
adc
inc
aas
adc
xor
and
das
inc
mov
adc
sbb
pop
mov
inc
movl
dec
unpckhps
sub
dec
adc
adc
dec
repz
add
adc
inc
imul
adc
sbb
adc
adc
adc
xor
adc
mov
leave
push
sbb
sub
pop
dec
adc
inc
jns
ss
movlps
xor
sub
or
sti
pop
push
aaa
mov
sub
pop
sbb
sbb
push
xchg
add
add
pop
and
add
or
add
or
or
or
or
push
sbb
xor
sub
sbb
adc
push
lds
adc
and
daa
add
adc
das
dec
mov
and
adc
aaa
or
or
adc
push
sbb
dec
sub
inc
gs
sbb
incl
dec
mov
adc
ss
dec
std
arpl
and
inc
adc
roll
inc
stos
adc
xchg
adc
or
aaa
ret
inc
pop
adc
sub
sbb
and
sbb
sub
aaa
or
or
xor
sbb
inc
pop
adc
sbb
inc
or
push
add
sub
inc
adcl
inc
jnp
add
or
add
dec
push
push
aaa
add
adc
sbb
adc
mov
add
arpl
aaa
les
adc
aaa
inc
inc
dec
fwait
adc
inc
rcll
lds
adc
inc
mov
subl
inc
incl
adc
or
push
or
orl
pop
mov
sbb
sbb
add
aaa
push
adc
and
ss
jmp
or
xor
cs
sbb
inc
ja
and
adc
or
pop
and
xor
adc
sub
inc
repz
das
or
imul
and
adc
sub
inc
inc
inc
notl
xor
add
or
inc
stc
adc
imul
inc
jg
or
inc
xchg
adc
adc
adc
inc
test
add
add
adc
cmp
inc
mov
sub
or
ss
adc
sub
inc
or
add
lods
inc
fwait
adc
inc
lods
inc
jns
aaa
or
or
adc
dec
cmp
push
add
ss
adc
or
add
or
leave
inc
inc
adc
sub
inc
call
push
sub
dec
cmpsl
adc
dec
outsl
inc
out
dec
out
inc
mov
sbb
sub
dec
adc
or
or
jns
inc
mov
or
mov
dec
sub
sbb
lret
adc
rdpmc
inc
sbb
or
adc
xor
sub
pop
and
ret
adc
dec
dec
adc
inc
sbb
dec
dec
adc
inc
repz
inc
adc
add
cltd
adc
and
sub
sub
sbb
imul
pop
adc
add
add
push
sbb
sub
sbb
int
adc
adc
and
and
outsb
cmc
adc
add
inc
mov
sub
sbb
dec
out
push
add
iret
adc
pop
or
add
inc
das
inc
cmp
adc
and
sbb
aaa
rdmsr
adc
rolb
adc
sbb
gs
adc
imul
das
or
inc
mov
daa
or
dec
and
sub
std
adc
adc
and
sbb
add
adc
push
pop
sub
push
sbb
push
dec
cmpsl
dec
ja
ja
add
push
sub
jo
dec
in
das
or
or
leave
popa
aas
adc
sbb
and
adc
inc
iret
adc
adc
inc
movsl
adc
dec
jmp
inc
pop
adc
sbb
sbb
aad
out
or
adc
aaa
inc
lds
xor
inc
dec
dec
jae
or
push
sbb
xor
sub
inc
icebp
adc
imul
dec
xlat
adc
sbb
sbb
sbb
and
inc
shrl
in
adc
aas
adc
and
add
push
sbb
sbb
sub
push
xor
adc
inc
out
inc
xchg
adc
pop
sbb
adc
inc
jmp
jge
pop
cmp
sub
sbb
inc
in
adc
es
ja
and
sbb
dec
jmp
or
adc
sub
dec
sub
dec
icebp
adc
jb
adc
xor
dec
aas
adc
sbb
dec
adc
adc
adc
dec
push
dec
movsl
adc
xor
or
sub
adc
adc
inc
cmpsl
push
sub
das
or
adc
sub
adc
inc
inc
inc
mov
fsts
add
adc
das
or
adc
pop
sbb
adc
aaa
inc
dec
adc
add
sbb
sbb
sbb
push
sbb
xor
adc
adc
add
inc
outsl
push
adc
cmp
sub
push
stc
push
and
sub
adc
adc
mov
adc
adc
sbb
and
adc
push
pop
jb
adc
inc
mov
inc
adc
dec
jne
popf
adc
sbb
inc
pop
adc
rcpps
or
push
push
push
xor
or
or
inc
stos
dec
movsl
adc
or
adc
push
xor
sbb
add
sbb
and
aaa
or
dec
xor
add
cmovo
adc
ss
inc
xchg
sbb
adc
adc
add
fiaddl
out
adc
dec
mov
or
or
inc
lea
sub
and
push
sub
adc
fildl
adc
sub
push
lds
or
sbb
sbb
faddl
adc
sbb
sub
or
inc
out
das
adc
lret
adc
outsb
dec
imul
adc
dec
xlat
dec
inc
adc
adc
adc
fldl
or
adc
dec
xchg
adc
or
sbb
inc
xlat
adc
push
adc
mov
adc
add
dec
outsl
adc
or
cvtpi2ps
adc
in
or
pop
aaa
dec
fisttpl
adc
cs
dec
in
adc
add
adc
sbb
adc
and
rcrl
xor
mov
add
adc
add
dec
roll
adc
daa
adc
adc
push
or
or
sub
inc
mov
and
inc
dec
adc
add
adc
or
or
push
adc
and
inc
aas
adc
inc
xchg
adc
or
push
jnp
cltd
outsb
out
or
adc
dec
adc
sbb
push
in
inc
aaa
inc
lods
inc
push
adc
add
inc
leave
sbb
or
aaa
push
and
jmp
dec
in
xor
push
sbb
adc
sub
sbb
inc
adcl
dec
add
xor
adc
sub
adc
add
adc
add
push
dec
adc
add
adc
xor
inc
in
adc
insl
adcl
push
adc
inc
jnp
sbb
cs
inc
sbb
sbb
pop
dec
insl
inc
sbb
and
adc
add
inc
add
add
add
inc
add
loopne
outsb
and
sbb
inc
and
push
sbb
add
add
das
adc
pusha
add
pop
inc
imul
jbe
adc
dec
adc
sbb
pop
sub
adc
sbb
adc
adc
or
push
push
adc
pop
cmc
pusha
add
add
and
pcmpgtw
adc
add
add
adc
add
inc
add
adc
pusha
add
adc
and
or
xor
adc
andl
inc
ja
or
and
adc
inc
ja
add
dec
xchg
inc
in
inc
add
inc
cmp
sbb
adc
or
rolb
inc
sub
inc
jge
or
or
rolb
dec
mov
jne
add
inc
add
adc
orb
and
or
or
adc
xor
and
adc
add
sbb
inc
aaa
adc
sbb
sbb
sti
ja
jae
adc
or
mov
or
push
inc
rcll
or
or
popf
adc
cmovo
pop
dec
test
xchg
adc
popa
inc
inc
repz
adc
inc
add
push
iret
inc
sub
and
add
adc
push
inc
adc
adc
xor
push
and
and
sbb
adc
or
rcll
push
dec
addl
xor
pusha
sbb
inc
add
adc
sub
adc
sbb
inc
popa
adc
sub
xor
adc
inc
lea
add
bound
rdpmc
pusha
cmpsl
dec
lods
adc
orb
ja
or
or
inc
arpl
adc
and
push
mov
loopne
mov
xor
pusha
pop
adc
orb
pusha
add
adcb
pusha
sbb
dec
fwait
inc
add
scas
adc
pop
pop
pusha
add
subb
fldl
adc
or
adc
imul
or
inc
and
adc
or
inc
inc
inc
add
inc
adcl
cmpb
ja
insl
pusha
or
add
adc
jns
adc
and
inc
mov
or
sbb
inc
xchg
adc
sub
inc
mov
dec
add
adc
or
inc
add
adc
imul
adc
inc
popl
and
adc
inc
insl
inc
jnp
mov
push
inc
jge
or
jns
adc
dec
imul
rolb
and
inc
add
adc
push
inc
jge
or
or
or
pusha
add
inc
add
sbb
inc
and
dec
popl
inc
mov
adc
sub
adc
sub
inc
daa
dec
pop
inc
cmpsl
adc
sbb
adc
mov
add
adc
fs
adc
xor
popa
inc
push
fs
adc
add
pop
inc
arpl
popa
roll
add
add
adc
das
sbbb
xchg
pop
cmp
dec
roll
adc
sub
bound
das
inc
pop
dec
jmp
and
adc
sub
inc
insl
adc
xor
dec
sbb
adc
xor
adc
adc
add
adc
push
out
pusha
add
push
aaa
pusha
add
adc
sbb
inc
xor
adc
sbb
inc
fstl
add
mov
pusha
pop
adc
inc
mov
pusha
add
bound
rorb
aaa
add
adc
inc
sub
add
sbb
dec
jne
sub
adc
dec
frstor
pusha
dec
adc
adc
adc
or
adc
sbb
inc
adc
adcb
or
inc
add
out
or
inc
add
adc
xor
pop
sbb
adc
dec
xchg
dec
inc
and
add
adc
and
sub
inc
and
es
aaa
adc
xor
popa
pop
pop
push
orb
sub
adc
arpl
adc
inc
punpcklbw
adc
inc
add
fs
adc
daa
push
sbb
pop
mov
adc
pop
sub
adc
pusha
or
das
xorb
pop
leave
inc
sub
inc
add
adc
and
inc
addr16
scas
inc
cltd
dec
mull
adc
popa
notl
push
sub
inc
sbbl
roll
push
inc
cmc
adc
xor
pop
dec
inc
pop
adc
sbb
inc
mov
jge
icebp
adc
sbb
add
dec
xchg
inc
or
in
add
or
adc
inc
pop
adc
pop
xchg
inc
xlat
adc
sbb
inc
adc
push
jae
add
mov
add
inc
inc
add
pop
xchg
addb
sub
add
add
dec
sbb
dec
fildl
pop
pop
pusha
mov
pusha
andl
jae
dec
add
inc
pop
adc
add
add
inc
dec
dec
popf
inc
cmpsl
pop
dec
pusha
and
iret
sub
bound
push
add
jge
adc
movsl
adc
fs
adc
dec
aas
arpl
popa
dec
dec
bound
inc
mov
sbb
inc
lods
adc
and
push
adc
inc
adc
popa
int
adc
addr16
or
pop
outsl
lods
adc
sbb
subl
sbb
adc
test
pusha
jecxz
and
adc
adc
or
bound
mov
xor
or
mov
inc
mov
inc
inc
filds
jnp
fldenv
jne
and
adc
inc
or
and
adc
add
inc
scas
inc
sub
sub
adc
xor
adc
jmp
or
pusha
out
adc
sbb
out
cmpsl
rcrl
inc
lret
adc
and
and
fs
inc
sbb
xchg
adc
push
jne
or
add
adc
inc
loope
pop
pop
and
push
sub
mov
aad
std
inc
pop
adc
push
push
pusha
sub
pop
jmp
mov
popa
dec
cmpsl
popf
pop
jmp
sub
adc
sub
pop
pop
add
dec
arpl
mov
pop
adc
mov
or
mov
pusha
ja
andl
cmp
popa
popa
adc
cmpsl
dec
cmp
adc
adc
sbb
arpl
lahf
and
pop
fs
adc
xor
adc
sbb
inc
adc
inc
sub
mov
or
or
test
pop
inc
aad
das
stos
inc
adc
daa
or
stos
mov
add
popa
xor
imul
xor
popa
xchg
adc
gs
dec
xor
adc
xor
arpl
add
dec
leave
loop
adc
xor
test
mov
jg
sbb
bound
inc
icebp
inc
imul
add
data16
addb
inc
sbb
adc
add
jne
add
imul
adc
or
adc
inc
pop
inc
add
jne
inc
pop
pusha
add
adc
and
imul
inc
daa
adc
add
add
addr16
daa
inc
add
pusha
inc
adc
pop
inc
pop
addb
decl
push
adc
inc
push
adc
gs
aas
and
dec
and
dec
adc
dec
inc
inc
adc
inc
inc
adc
inc
dec
inc
pop
adc
pop
adc
and
inc
adc
add
jae
add
arpl
adc
add
dec
dec
adc
add
jno
add
push
jmp
inc
add
imul
pusha
and
and
or
inc
add
mov
adc
add
bound
inc
sub
arpl
adc
add
inc
pop
mov
adc
and
add
pop
cs
rcl
mov
xchg
sub
and
and
adc
push
sub
std
and
inc
pusha
daa
adc
pop
adc
pop
adc
dec
adc
jmp
pusha
or
jae
adc
and
adc
fbstp
xor
lods
aam
rol
jg
shlb
adc
add
add
inc
add
adc
stc
shl
loopne
sbb
push
cmp
cs
dec
inc
pusha
and
inc
or
and
rcrb
jl
sbb
dec
loopne
shlb
sub
push
adc
les
je
je
sbb
xor
pusha
andl
adc
loop
add
inc
add
call
inc
add
fadds
adc
inc
add
enter
rolb
mov
inc
add
test
add
mov
inc
add
nop
inc
add
mov
adc
inc
add
jo
add
push
inc
add
pop
inc
add
push
inc
add
dec
inc
add
inc
inc
add
cmp
adc
inc
add
sub
adc
add
and
adc
add
sbb
adc
add
adc
adc
add
or
adc
add
add
adc
loope
add
inc
add
lock
add
call
inc
add
fadds
adc
inc
add
enter
rolb
mov
inc
add
movsb
inc
add
cwtl
inc
add
mov
adc
inc
add
push
inc
add
push
inc
add
inc
inc
add
cmp
adc
add
and
adc
add
or
adc
loopne
add
inc
add
faddl
adc
inc
add
mov
inc
add
pushf
inc
add
mov
adc
adc
adc
adc
adc
add
cmp
adc
add
add
or
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
adc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pop
ret
insl
arpl
arpl
arpl
arpl
adc
xor
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
das
adc
and
inc
and
add
add
jae
inc
je
insb
sub
imul
pop
sub
add
sub
add
sub
add
cmp
sub
add
cmp
verr
sub
add
inc
inc
sub
add
pop
sub
verr
ja
sub
add
popl
verr
cmpsl
inc
sub
mov
sub
add
xor
daa
scas
add
or
loopne
xchg
daa
mov
stc
sub
lcall
or
and
sbbb
pop
add
shll
or
cmp
pop
adc
rolb
aaa
rolb
rolb
xor
rolb
xor
pop
adc
loopne
adc
pusha
pushaw
pop
pusha
push
pusha
frstor
pusha
int
lds
pusha
mov
lods
pusha
movsl
pusha
popf
xorb
movb
adc
pop
adc
pop
adc
pop
adc
pop
adc
rolb
push
rolb
push
rolb
xchg
pop
adc
pop
adc
pop
adc
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
add
mov
test
adc
push
inc
adc
push
inc
add
inc
add
inc
add
xorb
add
jl
sbb
rolb
adc
loopne
inc
or
inc
push
adc
loopne
inc
or
inc
push
adc
int
mov
pusha
adc
pusha
adc
sbb
mov
mov
rolb
adc
push
adc
outsb
outsl
outsb
and
push
sbb
imul
std
dec
adc
movhps
add
sub
sub
inc
jnp
cwtl
inc
push
inc
pop
and
dec
adc
faddl
inc
add
sbb
adc
inc
add
iret
dec
adc
fstl
add
out
dec
sbb
jb
fs
gs
insb
inc
mov
loope
adc
mov
filds
and
adc
inc
add
out
push
add
inc
pop
adc
inc
pop
adc
inc
pop
adc
adc
inc
pop
adc
adc
inc
pop
adc
pop
adc
inc
pop
adc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
inc
pop
adc
in
push
add
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pop
adc
outsl
inc
pop
adc
pusha
outsl
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
in
push
add
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
jg
pop
adc
inc
pop
adc
inc
pop
adc
pusha
aaa
inc
pop
adc
pusha
aaa
adc
push
add
inc
pop
adc
inc
pop
adc
inc
pop
adc
inc
pop
adc
pusha
jg
pop
adc
inc
pop
adc
pop
adc
pop
adc
inc
pop
adc
adc
inc
pop
adc
pop
adc
inc
pop
adc
pop
adc
inc
pop
adc
ljmp
pop
adc
pusha
aas
inc
pop
adc
inc
pop
adc
inc
inc
pop
adc
popa
daa
inc
pop
adc
inc
pop
adc
pop
adc
inc
pop
adc
pop
adc
pusha
inc
inc
pop
adc
pusha
xlat
inc
pop
adc
pusha
lahf
inc
pop
adc
inc
pop
adc
jmp
inc
pop
adc
inc
pop
adc
inc
pop
adc
popa
pop
inc
pop
adc
popa
pop
inc
pop
adc
inc
pop
adc
ja
pop
adc
inc
pop
adc
pop
adc
popa
outsl
inc
pop
adc
popa
outsl
inc
pop
adc
inc
pop
adc
call
out
inc
pop
adc
pusha
dec
inc
pop
adc
inc
pop
adc
aas
adc
add
popa
out
movups
inc
pop
adc
inc
inc
pop
adc
inc
pop
adc
inc
pop
adc
adc
mov
adc
inc
pop
adc
adc
push
add
adc
inc
pop
adc
adc
pop
adc
adc
inc
pop
adc
dec
inc
inc
pop
adc
inc
pop
and
ret
fadd
jmp
push
dec
fistl
fidivrs
pusha
adc
rol
imul
adc
loopne
adc
ror
jae
mov
add
mov
out
stc
mov
shr
mov
mov
shl
and
xchg
sbb
mov
add
int3
cmc
push
and
pop
sbb
mov
lret
call
mov
lret
jecxz
adc
out
and
pop
pop
mov
mov
in
pusha
inc
adc
fistps
mov
mov
and
and
mov
aad
and
les
mov
rcrl
xlat
pop
push
and
pop
adc
loopne
enter
mov
pusha
pop
sub
adc
mov
sub
mov
pusha
sub
leave
call
adc
add
and
and
and
roll
adc
pusha
daa
adc
adc
mov
adc
mov
mov
or
and
or
in
aas
and
xchg
popa
mov
inc
adc
lret
or
mov
pop
pop
iret
out
add
rcl
mov
xlat
out
mov
mul
adc
inc
inc
mov
and
xlat
and
pusha
pop
adc
stc
and
pop
mov
jns
fidivl
adc
mov
add
xor
add
mov
loopne
adc
add
inc
sub
add
adc
mov
adc
adc
and
sub
add
mov
mov
ja
cmp
cwtl
adc
mov
es
mov
loopne
adc
fmul
stos
insl
mov
popa
aaa
sub
add
mov
pop
loopne
cs
add
int3
stos
mov
xchg
pop
es
add
mov
bound
pop
pusha
dec
and
sub
add
mov
mov
pusha
daa
sub
add
mov
loope
adc
lahf
adc
sub
adc
stos
int
shlb
fistps
mov
lds
mov
movaps
insl
add
mov
mov
cmp
mov
inc
add
or
arpl
add
adc
mov
adc
test
add
lret
pop
movsl
pop
adc
mov
lret
mov
and
stos
enter
mov
mov
xlat
mov
sti
xor
add
mov
lret
mov
pusha
int
pop
adc
mov
popa
adcl
lods
jmp
std
mov
adc
in
and
sub
pusha
or
in
addl
fdivrs
ret
sti
mov
loopne
pusha
packsswb
sub
add
adc
and
add
mov
pusha
sub
jge
adc
xor
and
sub
mov
les
and
and
mov
pusha
loope
into
mov
iret
adc
cmpsl
adc
jno
jmp
pop
add
unpcklps
popaw
adc
es
add
shll
adc
aad
jo
adc
adc
les
arpl
jno
adcl
movsb
xlat
mull
test
cmpb
xchg
pushf
es
add
fdivl
xchg
sub
add
mov
mov
in
adc
stos
out
sbb
outsl
insb
outsl
jne
push
imul
adcl
jb
adc
jae
adc
insw
je
xor
dec
or
dec
inc
dec
sbb
lahf
pop
adc
mov
inc
mull
outsl
pop
add
dec
mov
adc
dec
movsl
call
sbb
mov
and
pusha
adc
mov
pusha
jmp
inc
aaa
adc
je
je
inc
or
add
iret
mov
xlat
repz
rolb
add
ret
pusha
push
inc
adc
push
inc
adc
sti
adc
mov
dec
adcl
adc
out
std
and
inc
push
stos
fwait
pop
mov
mov
lds
pusha
or
rcl
mov
lret
pop
pusha
or
pop
adc
adc
add
add
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
bound
and
adc
add
movsb
inc
add
pushf
inc
add
nop
inc
add
mov
adc
inc
add
jo
add
push
lret
mov
test
mov
std
inc
movhlps
shlb
insl
inc
pop
test
mov
mov
mov
pop
loopne
xorl
shlb
std
aam
andl
and
mov
rorb
shlb
jae
sbb
pusha
and
xlat
not
mov
punpcklwd
pop
mov
mov
cmp
test
icebp
movsb
dec
push
xchg
test
adc
add
push
repz
adc
pop
adc
inc
adc
addb
addb
inc
pop
bound
sub
and
inc
adc
sbb
adc
rol
adc
or
add
inc
push
adc
repnz
pop
adc
add
inc
pop
and
pop
adc
add
pusha
pop
inc
adc
fadds
rolb
adc
cmp
enter
pop
xor
add
pusha
cmovae
mov
addb
inc
pop
adc
pusha
add
test
das
adc
pop
adc
fadds
add
in
in
add
inc
push
adc
incl
andb
mov
movlps
add
aaa
inc
scas
adc
pop
adc
add
movhlps
add
pop
push
pusha
pusha
pusha
add
out
mov
mov
adc
shlb
mov
loopne
inc
cmc
adc
ret
pop
adc
mov
leave
stos
pusha
pop
adc
clc
mov
pusha
pop
adc
mov
mov
loopne
aaa
adc
mov
mov
mov
mov
mov
mov
movl
shrb
shlb
mov
mov
loopne
mov
mov
loopne
mov
mov
outsl
addr16
and
jae
popa
and
fs
lret
xchg
int3
clc
xlat
stos
mov
arpl
sub
jl
and
iret
adc
dec
inc
push
add
add
aaa
mov
push
and
pop
pusha
add
mov
add
movsb
inc
add
xchg
inc
add
mov
adc
adc
adc
add
dec
inc
add
cmp
add
xor
adc
inc
add
adc
adc
testb
add
lock
dec
sbb
add
sbb
add
inc
add
dec
add
repz
add
out
add
jecxz
add
movsl
scas
fiadds
dec
add
add
fiadds
mov
testl
xchg
scas
out
test
fiadds
jecxz
sbbb
lods
ret
pusha
sbb
testl
inc
inc
loopne
sbb
mov
add
inc
daa
sbb
jecxz
add
fucomi
add
iret
pusha
add
out
aaa
adc
add
out
inc
pop
adc
pusha
sbb
out
out
out
out
jmp
sbb
push
imul
add
out
xor
into
inc
sub
filds
adc
incl
out
inc
pop
pop
iret
incl
mov
incl
lods
inc
xchg
add
jbe
popa
cmp
add
mov
add
add
mov
test
ret
enter
pusha
add
add
mov
adc
add
mov
mov
and
add
inc
dec
dec
sub
add
pop
push
sub
add
xchg
xchg
mov
mov
mov
adc
add
add
mov
sub
add
iret
shl
addb
movhlps
int3
fiaddl
movsl
add
xlat
into
addb
imul
fiadds
push
into
add
lret
arpl
add
and
sub
pushf
add
ret
push
mov
sub
adc
ret
mov
mov
lods
fbld
addb
adc
sbb
arpl
popa
jb
jne
rclb
jo
outsl
addr16
test
adc
jns
push
popa
bound
outsb
je
outsl
insb
inc
adc
adc
or
push
inc
pop
adc
pop
adc
mov
sub
inc
popa
je
push
imul
push
inc
outsl
insl
bound
outsl
ja
sbbb
gs
imul
addr16
pusha
sub
adc
push
inc
fs
shlb
outsl
je
gs
pop
imul
adc
jne
je
pop
cltd
push
dec
mov
jns
jns
xor
adc
cmp
js
add
add
fs
adc
adc
push
data16
movups
add
push
inc
movups
add
inc
inc
movups
adc
adc
movups
rclb
outsl
data16
inc
movups
rclb
pop
data16
inc
movups
sub
add
add
movups
cmp
outsl
data16
inc
movups
rclb
out
add
inc
or
mov
add
test
add
test
inc
cmp
or
je
add
cmp
adc
dec
xchg
adc
add
cld
cmp
sbb
add
inc
pop
adc
inc
add
mov
rclb
mov
adc
adc
add
dec
inc
add
dec
adc
or
xor
adc
aaa
and
adcb
in
inc
or
in
add
mov
shlb
lods
inc
or
pushf
inc
add
xor
add
stc
shlb
inc
or
and
adc
ss
add
rolb
mov
add
dec
inc
add
daa
adc
or
xor
adc
xor
faddl
adc
inc
add
pusha
inc
add
stc
add
or
push
inc
add
sub
add
cmc
shlb
and
or
sbb
add
cld
xor
mov
lock
or
loopne
add
test
add
adc
add
pop
inc
add
test
adc
adc
add
adc
add
mov
or
adc
xor
les
loopne
adc
inc
add
addb
daa
adc
adc
adc
daa
add
and
adc
inc
add
loopne
es
adc
inc
or
les
adc
loopne
adc
or
pop
inc
add
adc
add
hlt
loopne
inc
or
xor
rolb
hlt
sarb
mov
or
lods
inc
add
js
add
addb
insb
inc
or
pop
inc
add
xchg
xor
mov
pop
and
pusha
add
mov
cmpsl
adc
add
cmp
mov
adc
adc
add
das
push
add
inc
add
clc
inc
adc
mov
inc
add
mov
adc
cs
add
shl
fadds
adc
inc
add
lods
inc
add
stc
rclb
mov
inc
add
adc
adc
adc
or
add
add
and
mov
pop
adc
inc
add
hlt
sub
or
loope
adc
inc
add
xor
add
mov
and
adc
pop
mov
jmp
and
bound
lock
movups
mov
adc
inc
pop
adc
or
adc
cld
push
add
dec
pusha
add
aaa
adc
adc
lret
popa
aaa
adc
inc
or
mov
adc
pop
rcrb
add
lock
inc
add
add
mov
add
mov
inc
add
js
add
adc
pop
adc
add
push
inc
add
and
jecxz
adc
inc
or
adc
jecxz
daa
adc
sub
das
cmp
adc
inc
pop
adc
add
pop
adc
inc
add
push
daa
adc
adc
adc
add
sbb
adc
adc
or
add
add
shlb
adc
adc
inc
or
mov
add
fs
add
fwait
adc
adc
add
loopne
adc
adc
inc
or
les
adc
add
push
inc
add
and
add
in
add
fldenv
movl
adc
and
movups
and
mov
addb
fs
add
add
pop
inc
or
push
inc
add
xor
add
mov
iret
add
sub
mov
and
add
enter
insb
out
adc
pop
insl
adc
inc
add
fs
add
adcb
pop
inc
or
push
inc
add
adc
and
xchg
add
adc
and
mov
insl
adc
inc
add
add
add
test
add
inc
add
mov
adc
inc
add
inc
inc
add
insl
adc
or
and
add
shlb
adc
add
or
lods
inc
add
test
and
jns
js
or
insb
inc
add
add
daa
mov
inc
out
inc
add
movsb
inc
add
jns
pushf
inc
or
xchg
inc
add
or
adc
adc
or
cld
pop
inc
pop
inc
add
adc
rolb
adc
inc
add
jo
adc
adc
or
pusha
inc
add
sbb
adc
adc
or
cld
push
dec
or
loopne
adc
add
mov
and
outsb
adc
pop
adc
adc
add
call
adc
inc
or
rolb
adc
outsl
adc
add
adcb
aaa
test
pop
inc
or
dec
inc
add
cld
sbb
xor
lock
or
loopne
add
movsb
inc
add
mov
xchg
inc
add
sub
add
arpl
adc
fcomps
mov
pop
adc
sbb
or
rolb
adc
pop
adc
or
xor
adc
or
cld
sbb
inc
add
rorb
push
inc
pop
adc
rorb
push
add
adc
pop
es
add
mov
inc
pop
adc
rorb
ja
loopne
es
adc
add
mov
rclb
dec
inc
pop
adc
pusha
pop
mov
aas
adc
inc
push
adc
adc
adc
adc
pusha
adc
inc
inc
movups
daa
add
adc
adc
adc
adc
adc
inc
movups
adc
cmp
cmp
movups
sub
add
add
movups
adc
hlt
inc
adc
int3
inc
movups
rclb
jo
adc
js
movups
add
adc
movups
adc
and
adc
adc
adc
movups
adc
les
adc
inc
movups
adc
cmp
dec
inc
movups
add
dec
add
adc
movups
cvtpi2ps
add
loopne
movups
mov
adc
fildl
adc
add
push
imul
or
mov
or
add
aas
pop
adc
pop
adc
iret
adc
adc
inc
add
jae
adc
or
or
adc
or
adc
xorb
add
cwtl
inc
add
dec
adc
or
pop
inc
add
push
rclb
xor
add
add
cmp
mov
inc
jb
ja
outsl
jo
ret
daa
adc
iret
and
sbb
mov
filds
mov
mov
addb
adc
stos
rorb
fiaddl
push
outsb
push
je
and
inc
inc
adc
xor
adc
leave
iret
pop
cmp
mov
pusha
push
rclb
push
pusha
or
mov
enter
leave
call
mov
mov
mov
hlt
rcl
js
adc
in
repz
aam
mov
pusha
mov
adc
sub
add
xor
pusha
adc
scas
mov
dec
mov
push
inc
fwait
adc
add
or
lret
mov
xchg
orb
rcl
shlb
adc
mov
inc
or
shl
or
xlat
repz
mov
lret
add
and
adc
and
xor
or
xor
adc
loopne
adc
or
xor
loopne
adc
and
adc
loopne
adc
rorb
mov
stos
leave
iret
mov
mov
or
iret
ret
adc
out
daa
sbb
pusha
or
sbb
adc
adc
pusha
cmp
mov
adc
lods
orb
aad
orb
or
shr
inc
or
mov
lret
push
sbb
mov
add
scas
xlat
ror
add
sbb
adc
test
adc
orb
push
mov
scas
into
out
add
fadds
mov
movsb
add
jmp
adc
mov
adc
filds
sbb
out
mov
int3
in
pop
adc
clc
mov
push
adc
or
aad
les
rorb
add
rcl
mov
loop
sbb
ret
test
xor
mov
aad
pop
orb
mov
mov
mov
iret
loopne
mov
mov
jmp
pusha
push
bound
adc
mov
mov
iret
loopne
aad
mov
ds
adc
mov
mov
xor
xor
dec
inc
cmp
movl
adc
shll
adc
xlat
inc
mov
sub
mov
pusha
sub
mov
shr
shrb
pusha
sbb
push
add
inc
sbb
in
mov
cltd
pusha
adcb
mov
adc
mov
mov
mov
adc
pusha
cmp
loopne
adc
inc
push
add
into
fidivs
mov
mov
mov
mov
mov
mov
add
lret
lret
mov
inc
cmp
imul
repnz
shr
pusha
sbb
or
je
xor
rorl
enter
mov
test
inc
pop
inc
insl
pusha
mov
push
mov
and
xor
sub
add
and
jnp
es
fistpl
jge
mov
ret
mov
in
sbb
lret
cld
and
adcl
mov
pusha
sbb
jmp
aad
test
les
adc
mov
cld
pusha
adc
pop
iret
loopne
enter
aam
ret
int
mov
call
pusha
and
inc
pusha
dec
adc
lret
push
push
inc
mov
mov
mov
mov
enter
popa
pop
inc
sub
int3
inc
sub
mov
sbb
loope
fnstenv
xor
xchg
add
mov
int3
adc
and
into
stos
mov
mov
clc
mov
inc
or
adc
arpl
adc
out
int3
in
iret
ror
mov
lds
and
adcb
stc
and
jle
aaa
andl
mov
pusha
pop
pop
int
mov
mov
iret
and
pop
loopne
mov
xlat
aam
scas
sar
xlat
stos
mov
int
mov
add
sbb
add
mov
clc
xor
pusha
sbb
mov
mov
adc
int
sub
add
mov
loop
mov
adc
xor
mov
xlat
test
pusha
or
mov
mov
bound
adc
mov
mov
mov
mov
and
imul
fistpll
adc
mov
test
add
addl
popa
pusha
test
adc
cld
jmp
adc
adc
mov
popf
add
mov
mov
rolb
adc
cmc
adc
mov
and
xor
add
loopne
sbb
cli
mov
add
mov
das
adc
mov
adc
das
add
and
pusha
sbb
mov
sub
add
mov
pop
aad
aam
shr
mov
pusha
sbb
fnstenv
push
add
mov
scas
or
rol
mov
and
pusha
pop
sub
jecxz
adc
cmp
shr
stos
mov
pusha
sbb
pusha
imul
adc
fisubrl
mov
mov
adc
pusha
sub
adc
and
test
mov
mov
lret
mov
and
adc
leave
rcl
enter
rcl
shr
loop
and
mov
iret
shlb
and
daa
mov
cmpsl
sub
pop
xlat
repz
imull
cltd
add
roll
adc
fisubl
adc
shlb
sub
add
adc
xor
pusha
sub
popa
add
mov
adc
loopne
ret
add
aam
mov
adc
ror
dec
adc
jl
xchg
inc
adc
jnp
test
scas
add
sub
add
xor
rol
rcr
and
cmpsb
arpl
mov
cmp
adc
faddl
adc
mov
inc
and
mov
stos
mov
mov
in
int
xor
and
xchg
mov
and
adc
adc
inc
insb
rorb
mov
shlb
pop
adc
mov
cmp
fidivl
mov
jmp
jmp
stos
mov
stos
mov
mov
inc
mov
mov
inc
pop
adc
fs
and
mov
mov
mov
mov
mov
shl
xchg
adc
jns
adc
mov
pop
sub
mov
insl
sbb
mov
inc
xor
inc
or
mov
or
and
mov
and
xor
mov
mov
mov
loop
or
in
add
xchg
and
and
inc
cmpsl
inc
int3
adc
xlat
clc
mov
dec
jmp
lret
stc
mov
jecxz
gs
aaa
add
mov
adc
repz
add
mov
and
sub
cmp
adc
xor
pusha
addr16
or
xor
rcl
mov
and
movsl
movsl
adc
fsubl
mov
mov
lods
lret
stc
rcl
shll
mov
iret
loopne
cmpsb
into
mov
popa
adc
or
shrb
out
pop
sub
mov
xor
add
cmp
add
pop
add
mov
pusha
cmp
adcb
add
outsl
add
divl
mov
push
add
mov
mov
and
add
lret
add
push
add
sub
add
xor
adc
loopne
fsubs
adc
add
sbb
add
rcl
dec
add
loopne
add
roll
adc
dec
adc
add
lds
arpl
jecxz
xlat
cmpsl
movsl
arpl
adc
adc
pusha
outsl
adc
test
mov
add
add
mov
pusha
pop
adc
into
mov
dec
cmc
adc
add
into
mov
dec
sub
add
xor
sub
sub
add
gs
inc
pusha
jae
cmc
mov
add
mov
outsb
adc
fs
into
fsubp
and
cmpsb
mov
pusha
sbb
mov
adc
mov
jmp
into
shl
aad
lret
lods
pusha
and
adc
mov
jo
data16
adc
jae
mov
xchg
mull
jecxz
inc
dec
jnp
outsl
xor
mov
sbb
enter
adc
and
and
insb
insb
imul
and
pusha
sub
sub
adc
xchg
push
orl
iret
loopne
movsl
mov
mov
andb
mov
sbb
mov
sbb
xchg
jb
sbb
mov
in
mov
loopne
sbb
int
lret
mov
flds
adc
adc
mov
dec
call
loope
arpl
inc
insl
adc
movsb
pop
and
pusha
daa
adc
shr
shlb
push
adc
pusha
xchg
adc
and
add
daa
or
addr16
ja
inc
push
add
adc
shrb
push
inc
gs
jb
jns
stos
adc
pusha
and
stos
add
inc
add
and
adc
gs
je
mov
aas
add
xlat
aam
pop
pusha
adc
add
adc
mov
dec
push
adc
mov
mov
imul
and
movsl
into
dec
or
mov
mov
movb
js
jae
and
es
imul
pusha
ja
mov
mov
xlat
stos
push
jmp
or
leave
iret
iret
ret
add
das
inc
insl
je
push
bound
mov
adc
jne
outsb
push
ret
xadd
das
mov
pop
mov
mov
adc
pusha
mov
mov
mov
bound
outsb
aad
mov
mov
add
push
outsl
je
sub
inc
inc
mov
sbb
out
arpl
insl
add
xlat
fst
loope
mov
mov
jmp
cmpsb
daa
jnp
inc
xchg
adc
fisubrl
mov
inc
inc
adc
addr16
les
lds
mov
pusha
inc
adc
mov
pusha
adc
mov
bound
mov
fisubrl
xor
pusha
xor
mov
call
mov
mull
jbe
push
mov
cmpsl
mov
mov
sar
add
outsl
and
xchg
pusha
pop
adc
add
divl
fldenv
pusha
fwait
and
xchg
adc
xor
sar
int
enter
sub
mov
in
sbb
lcall
fidivrl
stos
inc
xor
xor
add
add
xor
insb
jo
and
sub
pop
adc
shll
mov
mov
rol
lods
stos
adc
stos
subb
cmp
mov
add
push
adc
xchg
pusha
es
mov
test
and
mov
mov
jmp
or
stos
xor
push
fs
in
ret
divl
aam
inc
pusha
dec
and
nop
inc
sbb
outsb
fs
gs
push
pusha
push
xor
adc
stc
mov
adc
adc
aas
and
xor
mov
punpcklbw
lret
dec
inc
bound
mov
and
mov
ret
rcrb
adc
mov
jmp
lret
mov
add
adc
je
les
pusha
mov
adc
mov
pusha
push
cmpb
les
mov
or
push
inc
inc
adc
fsubr
mov
add
pusha
jne
lret
cld
add
jne
inc
sub
add
push
loopne
pusha
sub
ror
dec
adc
shlb
adc
mov
inc
inc
dec
iret
inc
stc
es
shlb
adc
mov
imul
aad
sti
rolb
enter
incb
ja
dec
icebp
and
adc
mov
push
jb
outsb
jae
popa
inc
fstl
je
frstor
fwait
add
pop
add
into
stos
aad
pusha
push
mov
xlat
out
jp
adc
mov
add
and
pusha
outsb
loopne
sub
add
mov
adc
mov
imul
or
mov
inc
xchg
adc
jp
adc
gs
les
xor
sub
adc
mov
mov
fldl
adc
and
cmp
add
xlat
test
mov
sbb
aam
mov
mov
mov
loopne
shlb
mov
out
pusha
das
adc
mov
inc
mov
rorb
imul
push
and
dec
push
mov
inc
or
and
inc
adc
cmp
outsb
sbbb
mov
and
sbb
mov
and
mov
mov
mov
enter
adc
stos
mov
fcmove
frstor
imul
pop
adc
mov
inc
sub
shlb
rcl
bound
roll
pop
cld
adc
imul
aas
pusha
xor
adc
mov
adc
and
ss
xor
mov
inc
imul
pusha
ja
or
mov
mov
add
insb
popa
dec
pop
pusha
xor
dec
pusha
ja
dec
and
cmp
lret
xchg
pusha
pop
mov
sub
mov
sub
sub
and
sub
cmp
pusha
arpl
dec
outsb
addr16
shlb
mov
sub
pusha
adcl
pop
mov
mov
stos
insb
adc
lods
xor
or
xor
adc
int
mov
inc
pusha
cmp
adc
shlb
lock
adc
adcl
je
jb
lret
pusha
pop
subb
and
adc
inc
lods
dec
sbb
add
push
and
adc
mov
adc
repnz
and
adc
mov
lret
arpl
mov
dec
popa
js
arpl
lock
and
imul
clc
adc
adc
mov
mov
mov
and
rorl
adc
mov
imul
sub
aas
and
mov
and
cmp
and
cwtl
adc
insb
test
and
xor
add
imul
mov
dec
inc
sbb
dec
imul
add
aas
add
xor
popa
or
pusha
inc
adc
mov
daa
pusha
and
adc
jmp
dec
adc
mov
adc
mov
movups
mov
fbld
mov
outsl
jb
imul
mov
in
add
add
arpl
out
pusha
sbb
mov
push
inc
mov
mov
cmpsl
add
mov
sub
hlt
inc
adc
mov
jae
insb
arpl
jge
cmp
inc
popa
adc
pop
movsl
mov
sub
pop
fwait
loopne
sub
add
xor
mov
jno
mov
add
add
dec
jb
inc
mov
popa
and
adc
gs
cmc
dec
iret
adc
jo
push
inc
lds
sub
add
mov
push
sub
mov
call
lret
fdivrs
pusha
adc
mov
or
dec
xlat
and
cmp
xbegin
mov
push
inc
movsl
dec
pop
inc
ret
sub
adc
mov
inc
dec
inc
sub
pop
gs
loopne
mov
push
adc
lods
add
mov
xchg
loop
gs
inc
sbb
adc
dec
and
adc
mov
jb
insl
inc
pop
adc
adc
sub
add
aam
mov
mov
sti
imul
into
stos
mov
inc
pop
inc
lret
add
dec
cmpsl
mov
cmp
mov
fidivrl
adc
jb
pop
xorb
push
fistl
mov
or
pusha
cmp
shl
mov
mov
mov
shrl
adc
pop
add
rcl
and
fwait
adc
mov
adc
and
inc
add
push
pushf
rclb
int
add
subl
mov
insl
mov
add
mov
pop
loopne
adc
fisubl
pop
imul
fistps
adc
pusha
sub
arpl
adc
leave
mov
cmp
adc
mov
repnz
xchg
sub
add
add
adc
mov
stos
jg
imul
test
test
aas
pop
loop
lods
rol
xlat
mul
mov
adc
arpl
pusha
test
jmp
and
and
and
and
xor
pop
rcll
mov
ljmp
or
add
mov
pop
es
add
arpl
and
inc
popa
arpl
aas
sub
add
pop
call
push
inc
adc
arpl
outsb
push
mov
push
fnstenv
in
mov
inc
mov
adc
lods
mov
mov
lret
inc
adc
add
and
and
and
loop
adc
fisubl
mov
adc
mov
pusha
adc
das
cmp
inc
adc
adc
and
dec
adc
imul
adc
pusha
add
es
sub
add
sti
pusha
dec
sub
inc
cmp
push
dec
and
loopne
adc
dec
dec
and
inc
adc
and
adc
mov
and
sahf
popa
fnstenv
and
sahf
sub
add
fs
cmp
adc
jae
and
out
adc
dec
xor
dec
mov
hlt
adc
push
push
fsubr
mov
mov
mov
iret
ret
mov
jecxz
mov
mov
int
rcrl
jne
inc
mov
arpl
mov
fsubl
adc
movsl
pop
push
adc
mov
sbb
jno
inc
sbb
mov
je
data16
mov
mov
sub
adc
fiadds
jno
adc
xlat
mull
pop
adc
popa
dec
popf
and
es
popf
mov
mov
sbb
movsl
leave
iret
lret
scas
int3
lods
mov
insb
xchg
outsl
insb
push
imul
inc
add
pusha
inc
push
mov
mov
mov
adc
push
inc
push
enter
insb
imul
pusha
push
je
sub
add
shll
icebp
loopne
cmp
add
dec
jbe
jb
int3
adc
xor
loopne
adc
cld
lock
outsl
pop
pop
adc
mov
js
outsb
fs
jb
jecxz
pusha
and
shl
pusha
insl
sub
andb
mov
jmp
push
jg
arpl
inc
add
inc
adc
arpl
ret
pusha
daa
movsb
fistpll
add
jmp
push
adc
cs
add
sub
add
inc
and
mov
rcrb
adc
xchg
add
add
xchg
add
add
add
int
xor
jne
stc
arpl
cmp
add
aas
xchg
add
add
pusha
aaa
arpl
or
push
sbb
in
stos
mov
mov
shlb
inc
adc
addl
pusha
xor
push
add
pusha
xchg
scas
sbb
popa
and
dec
adc
and
sub
add
es
iretw
iret
loopne
xor
and
dec
mov
add
dec
pop
xchg
xlat
cmp
sub
pop
adc
and
inc
or
jno
and
mov
pusha
and
shll
jmp
push
pop
adc
xchg
leave
cli
mov
test
pusha
add
pop
sub
and
add
jecxz
xor
cmp
add
bound
xlat
inc
out
and
add
sub
cmp
add
and
add
cmpsl
add
dec
add
ret
add
insl
add
adc
out
movb
and
in
loopne
cmp
loopne
loopne
pusha
aas
adc
arpl
pop
daa
push
rcl
repz
rcl
inc
or
leave
iret
mov
and
sub
adc
mov
sbb
push
jae
pop
pusha
sbb
int
xlat
repz
les
adc
into
les
adc
mov
adc
inc
or
les
sub
inc
ret
inc
sbb
mov
mov
and
pop
xor
adc
adc
jl
js
stos
shlb
push
out
sahf
mov
inc
ja
push
aas
mov
subb
aam
push
add
gs
shlb
inc
inc
sbb
push
imul
ret
out
imul
loope
adc
pop
push
addb
lret
adc
xor
loopne
pop
dec
outsl
jne
gs
outsl
imul
push
pusha
or
mov
movlps
jae
pusha
cmovl
adc
pusha
movlps
inc
movups
gs
stos
stos
adc
fs
adcl
in
mov
jo
outsb
cltd
pusha
or
insb
movsw
pop
dec
mov
mov
sbb
adc
or
pop
xor
inc
inc
pop
dec
dec
push
pop
dec
dec
dec
inc
dec
dec
push
inc
inc
push
push
push
dec
push
sub
add
push
inc
push
push
cs
add
test
dec
and
lods
adc
arpl
pop
inc
adc
xor
pop
adc
dec
dec
es
add
xor
loopne
je
sub
xchg
sub
adc
jae
rcrb
xor
pop
and
imul
inc
and
pop
pusha
sbb
dec
ror
sbb
inc
adc
outsb
and
sub
adc
fsubrs
adc
into
stos
push
pusha
and
pushf
bound
mov
insb
xor
into
stos
and
and
or
loop
and
dec
adc
imulb
sub
pusha
lahf
adc
push
sbbb
daa
dec
and
xor
add
or
inc
or
mov
adc
and
adc
inc
sbb
sbbb
or
adc
push
das
adc
and
adc
sarb
addb
add
loop
adc
and
idivl
add
inc
add
test
add
test
adc
adc
adc
adc
adc
rorb
and
adc
inc
add
or
add
cmp
add
call
inc
add
rolb
mov
inc
add
pushf
pusha
pop
inc
and
mov
adc
pusha
sbb
imul
insl
insb
and
inc
add
inc
push
xor
dec
push
add
pop
sbb
jb
arpl
js,pn
sbb
ss
sbb
adc
inc
sbb
outsl
arpl
ja
add
inc
inc
dec
shlb
dec
imul
je
arpl
adc
cmp
mov
mov
jae
js
ja
ja
imul
arpl
and
cmpsb
adc
push
pusha
adc
pop
jb
add
ja
fs
je
and
inc
ja
and
jb
loopne
adc
mov
ja
inc
sbb
das
and
adc
adc
inc
dec
andb
arpl
sub
add
adc
cmp
and
arpl
outsl
jae
pusha
out
cmpl
push
dec
dec
and
les
add
and
and
adc
add
adc
adc
inc
pop
adc
add
cmp
add
sub
adc
inc
add
add
sbb
insl
jo
ret
inc
in
and
jae
lock
add
bound
data16
gs
mov
jae
adc
imul
gs
outsl
jb
and
loopne
pop
sbb
gs
insl
es
add
dec
pop
sub
add
outsb
dec
loop
and
inc
adc
inc
and
adc
mov
or
pusha
inc
inc
pop
and
adc
imul
inc
pop
and
inc
jo
fs
inc
adc
fs
inc
pop
and
inc
inc
pop
and
test
pop
and
mov
inc
pop
and
cmp
test
and
cmp
and
cmpsl
pusha
pop
and
inc
pop
and
nop
inc
push
adc
pop
and
in
pusha
pop
cmpb
inc
pop
les
push
inc
pop
and
inc
pusha
pop
sub
pop
and
pusha
pop
adc
inc
add
mov
pusha
pop
adc
pop
adc
sarb
cmp
test
cmpsl
adc
pop
push
mov
dec
inc
pop
and
inc
aas
data16
pusha
jg
mov
pusha
pop
lcall
pusha
pop
xchg
cwtl
inc
pavgb
test
pop
adc
adc
sarb
and
xchg
push
popa
xchg
adc
pop
and
cmp
pop
adc
rcrl
and
mov
pop
and
pusha
pop
test
inc
mov
test
pop
adc
pop
je
pusha
jg
lret
pop
xchg
pusha
jns
pusha
jmp
testl
pop
and
aas
pop
mov
test
pop
and
gs
pop
and
cmp
adc
inc
pop
adc
rcrb
or
bound
bound
and
pusha
pop
adc
pop
and
das
push
pusha
pop
adc
sar
add
pushaw
pop
and
pusha
pop
and
adc
rcrb
mov
pop
pusha
pop
adc
pop
and
test
pusha
jmp
cmp
inc
je
jo
inc
aas
and
cmp
and
std
cmp
and
test
pop
mov
inc
psrad
adc
push
inc
pop
and
dec
pusha
jg
mov
adc
pop
and
pusha
adc
pushf
sar
adc
adc
pop
adc
rcrb
cmp
pusha
jmp
pop
jb
pop
test
pop
and
and
mov
stos
pusha
pop
adc
mov
pop
and
sub
loope
inc
pop
arpl
call
add
jecxz
and
pusha
pop
and
inc
aas
imul
incl
and
push
inc
pop
and
mov
dec
inc
pop
adc
rcrb
fsubrl
incl
adc
pop
and
inc
pop
adc
xchg
sub
pop
and
inc
pop
and
push
sub
add
daa
imul
pop
and
inc
psraw
mov
pop
and
sub
add
push
rolb
dec
adc
mov
mov
xor
arpl
adc
sarb
mov
inc
pop
and
stos
pusha
pop
and
inc
psrad
test
pop
and
push
inc
pop
and
sub
incl
and
inc
pop
and
lcall
rolb
repz
pusha
pop
jne
sub
add
push
and
bound
adc
adc
push
inc
pop
and
sub
incl
loopne
arpl
pushl
sub
add
cmovo
and
push
sub
add
cmpsl
subb
pop
adc
bound
pop
or
pop
and
es
add
imul
adc
and
cmovo
and
sub
add
ja
pusha
pop
subl
lahf
adc
cmc
inc
pop
and
push
sub
add
scas
repz
pop
popa
dec
xor
add
lods
daa
inc
pop
and
aas
and
es
add
mov
rep
pusha
pop
adc
adc
rcrb
out
sarb
adc
pop
subl
adc
and
pusha
pop
and
sar
jmp
lret
imul
xor
inc
pavgb
mov
inc
pop
insb
hlt
add
incl
jg
cmp
pop
and
push
roll
sub
pop
adc
sarb
incl
adc
pop
adc
sarl
pop
and
scas
inc
pavgw
incl
push
add
incl
jb
cmp
pop
and
push
inc
sysenter
incl
adc
sarb
sub
pop
and
cmp
pop
and
cmp
pop
xor
pop
adc
sarb
incl
jo
cmp
pop
and
inc
rolb
incl
outsl
add
incl
adc
pop
and
idivl
incl
sahf
js
sysenter
incl
adc
sarb
incl
outsl
or
incl
and
daa
inc
sysenter
incl
and
cmp
pop
adc
pop
jbe
cmp
pop
xchg
sub
sysenter
incl
jg
add
incl
popw
cmp
pop
bound
pusha
sysenter
incl
arpl
incl
adc
pop
jb
cmp
pop
and
pop
and
pop
add
incl
adc
sarb
pop
xchg
adc
xor
pop
jb
cmp
pop
adc
pop
adc
rcrl
pop
inc
sysenter
incl
and
add
incl
jae
cmp
pop
popf
js
sysenter
incl
and
xchg
sar
incl
and
and
inc
sysenter
incl
jae
add
incl
jle
cmp
pop
adc
pop
and
adc
pop
je
cmp
pop
and
pusha
sysenter
incl
and
cld
arpl
out
inc
pop
arpl
pop
pusha
cmovs
adc
pop
popa
pop
adc
cmovae
adc
pop
arpl
inc
enter
fists
pop
pusha
cmovne
adc
arpl
adc
dec
or
push
inc
pop
pusha
fists
pop
pusha
pcmpgtw
pop
fs
adc
pusha
cmovs
pusha
aas
popw
pusha
jg
add
jg
or
popa
aas
cmpb
pusha
jg
cmpb
arpl
pusha
jg
lahf
cmpb
pusha
jg
incl
jg
mov
jg
add
pusha
ret
pusha
addr16
sub
popa
arpl
and
dec
inc
and
incl
adc
inc
and
incl
and
mov
stos
mov
add
int3
roll
pusha
add
push
iret
add
adc
inc
les
pop
call
lret
mov
and
pop
adc
into
out
add
adc
out
pusha
add
mov
adc
pusha
add
jmp
outsl
pop
adc
out
ja
adc
cld
cld
sti
add
adc
jmp
pusha
add
out
jecxz
add
add
cmp
add
add
add
leave
pusha
add
sub
add
mov
lds
pusha
add
addr16
add
cmp
mov
cld
ret
sti
xchg
adc
data16
dec
adc
jb
mov
inc
mov
xor
inc
push
inc
inc
inc
dec
dec
adcl
add
adc
adc
dec
inc
push
andl
dec
adc
imul
pop
adc
cli
and
cmp
pop
adc
push
ret
pop
das
dec
sub
jg
and
ret
arpl
fsubs
adc
pusha
sub
pop
and
or
adc
rcl
in
loopne
pop
iret
repnz
ret
mov
loopne
adc
repnz
iret
sub
add
and
push
push
add
lods
and
and
jnp
je
jns
ja
sbb
insb
je
bound
fs
pusha
or
imul
pop
call
gs
push
or
jne
loopne
adc
mov
and
pusha
or
mov
and
sbb
shlb
xor
and
sub
adc
mov
adc
adc
cmp
adc
aam
pop
adc
cmp
mov
pop
ja
sarb
das
xor
adc
and
mov
pusha
inc
push
mov
xor
add
cmp
adc
lea
adc
shlb
xor
add
das
and
pusha
dec
mov
popl
sub
sub
add
jne
xchg
add
mov
mov
inc
xchg
adc
iret
ret
adc
jne
xor
das
and
mov
xor
cltd
add
stc
add
inc
add
jae
cltd
add
jae
or
cltd
adc
cltd
add
push
add
das
and
mov
xor
adcb
js
aas
add
arpl
adc
sub
pop
cmp
cmp
jp,pt
adc
arpl
add
pushf
add
loope
sbbb
cwtl
adc
and
in
cmp
sub
mov
jbe
sub
pop
cmp
and
inc
inc
mov
and
sbb
pusha
inc
pusha
sbb
and
rorb
adc
fs
add
adc
unpckhps
gs
addb
pusha
add
adc
cmp
mov
adc
xor
test
xlat
add
mov
add
xor
pusha
push
adc
es
adc
fwait
xchg
adc
sbbb
stc
loopne
sbb
mov
shr
mov
and
xor
repz
mov
mov
fbld
cmp
add
shrl
pop
add
rcr
daa
mov
and
adc
and
rcrl
mov
xbegin
shlb
cmp
sbb
loopne
adc
rcr
rcrb
jne
dec
add
adc
mov
xlat
jl
and
dec
adc
and
aam
adc
inc
push
adc
and
pop
leave
inc
inc
popa
in
and
inc
adc
test
and
adc
mov
adc
popa
mov
push
mov
mov
rcl
and
adc
pusha
daa
orb
cltd
push
and
mov
cli
int3
out
inc
add
jg
mov
loopne
and
inc
and
and
daa
and
and
fistpll
sarl
test
loopne
and
add
mov
jl
push
xor
push
imul
and
leave
adc
and
and
pusha
test
daa
data16
adc
or
push
mov
jo
and
xor
inc
fisubl
inc
or
loopne
and
inc
add
inc
add
daa
pusha
arpl
imul
addr16
cmp
cmp
adcl
inc
pop
and
addr16
adc
es
mov
pusha
packuswb
pop
mov
mov
and
dec
and
xor
iret
rcl
pusha
and
pop
push
pop
mov
test
stos
and
sub
ret
inc
popf
adc
scas
and
dec
pop
adc
and
shrb
sbbb
repnz
jno
mov
add
sbb
lret
add
mov
pusha
sbb
pusha
or
daa
pusha
adc
or
adc
cld
incb
out
sub
dec
cmp
iret
jb
add
xchg
pop
mov
jmp
in
pop
adc
add
in
fisubl
inc
adc
add
adc
add
out
inc
push
popa
and
test
adc
shrb
adc
sarl
iret
repnz
repz
add
popa
shrl
jmp
push
inc
push
dec
dec
dec
inc
push
dec
mov
imul
into
stos
loope
cmpb
push
mov
xor
add
jge
and
inc
aaa
sub
pusha
pop
add
arpl
mov
adc
push
cs
je
pop
outsb
pop
rorl
outsb
insl
popa
jo
jmp
push
pop
jnp
pop
ja
sub
and
adc
je
insb
insb
and
adc
adc
adc
adc
or
adc
int
movups
lea
insl
inc
adc
adc
mov
das
pop
adc
or
adc
jg
adc
pop
adc
adcl
subl
push
clc
xchg
jnp
add
rclb
test
mov
and
js
add
loope
mov
inc
stos
sbb
push
insl
popa
jb
jbe
orl
sbb
push
popa
insb
inc
jb
jbe
inc
sub
adc
adc
inc
push
dec
inc
dec
push
addb
jae
and
add
pusha
push
add
add
add
xchg
and
sbb
sbb
pop
and
pop
adc
movups
sub
add
or
sub
add
pop
push
add
inc
add
adc
adc
inc
movups
rclb
aas
pop
adc
inc
movups
rclb
sub
int3
inc
movups
sub
add
mov
rclb
aas
pop
adc
inc
add
jo
imul
add
push
inc
add
inc
inc
add
and
add
hlt
pusha
out
sbb
movups
pop
es
jo
bound
jge
and
adc
repz
iret
inc
adc
adc
pop
rcl
mov
and
pop
mov
mov
sarb
inc
pcmpgtb
adc
push
adc
and
inc
and
daa
and
and
pusha
sbb
sub
pop
and
and
jg
adc
outsw
mull
into
pusha
pop
sbb
arpl
jo
add
rorb
cmpsl
add
movsl
outsb
and
sub
adc
out
rcl
and
push
pop
adc
addr16
es
das
pusha
pop
subb
sub
adc
lret
out
es
or
adc
shlb
adc
fisubl
xor
mov
mov
adc
mov
and
and
xor
addb
dec
and
mov
mov
add
dec
iret
push
mov
iret
repz
adc
out
mov
and
sub
sbb
andl
dec
push
arpl
pusha
mov
inc
sbb
mov
sub
jmp
in
mov
insl
jae
addl
adc
loope
add
shl
pop
push
mov
repnz
aad
verr
dec
and
inc
add
inc
and
inc
push
pop
inc
rcll
pop
and
and
xchg
es
and
and
push
ja
sbb
cmp
add
sbb
js
test
push
rclb
xchg
fadds
mov
loopne
cmp
es
add
add
and
pop
adc
adc
lock
pop
jno
sarl
addb
xchg
das
or
xchg
pop
rolb
test
cmp
adc
in
divb
push
xor
cmp
jae
sub
mov
push
inc
mov
and
outsb
and
outsb
inc
sbb
int3
inc
add
xor
xor
je
pop
add
inc
mov
fdivrl
adc
pusha
adc
add
adc
js
adc
adc
movsl
pusha
add
popa
pushf
gs
popa
pop
inc
pop
add
push
add
sbb
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
cmp
adc
sub
sbb
or
sbb
or
add
add
or
or
movups
adc
or
add
sbb
add
or
sbb
clts
sbb
or
sub
push
and
ss
das
sub
es
and
pop
add
inc
pusha
add
add
add
or
add
push
inc
pop
and
pop
inc
sbb
pusha
pop
pusha
daa
inc
or
add
and
pusha
sbb
sbb
add
sbbb
add
xor
sub
xor
mov
push
pusha
inc
es
add
mov
inc
mov
adc
outsl
pusha
pop
rcrb
daa
lahf
add
or
and
pusha
add
add
sbbl
inc
adc
pusha
and
mov
shrb
and
inc
pop
pusha
pop
inc
cmp
add
subb
sbb
addb
sbbb
pusha
sub
shrb
mov
adc
fwait
and
loopne
loopne
pusha
jae
xchg
shrb
loopne
adc
or
adc
add
into
inc
pop
adc
fcomp
adc
inc
sbb
rclb
pop
mov
adc
adc
cmpb
sbb
sbb
push
adcb
or
pusha
inc
and
pusha
sbb
adc
xchg
pusha
push
mov
xchg
push
imul
mov
stos
rclb
push
out
adc
pusha
add
or
add
and
inc
and
es
andb
pop
mov
bound
dec
mov
arpl
dec
loopne
sub
add
ja
aaa
loopne
sub
add
xor
xchg
mov
movl
add
xchg
add
add
sti
cld
fs
pusha
adc
or
pusha
adc
inc
cwtl
sbb
cmpsb
jg
add
adc
sbbb
add
fwait
pusha
pop
mov
mov
pop
shlb
pusha
outsl
loopne
mov
sbb
orb
inc
rorb
inc
rolb
inc
inc
sbb
gs
add
inc
inc
pop
inc
or
add
and
addb
adc
adc
rcl
adc
addb
inc
sub
movsb
dec
pusha
dec
pusha
inc
orb
mov
mov
sub
mov
daa
rcrb
pusha
and
dec
shrb
and
add
adc
adc
inc
sbb
and
or
inc
inc
adc
inc
sbb
or
adc
inc
pop
mov
add
pop
inc
pop
xorb
das
subb
push
or
cmp
push
inc
add
or
pop
add
orb
addb
jae
and
dec
or
pusha
mov
mov
loopne
loopne
orb
inc
adc
inc
push
xorl
add
cli
inc
adc
ficoml
inc
cmpsb
insl
inc
adc
adc
inc
or
inc
or
punpcklbw
inc
inc
pusha
dec
inc
pop
mov
pusha
adc
sub
cmpsb
cwtl
loopne
pusha
sub
push
mov
addr16
jno
aas
mov
mov
mov
sbb
shlb
ljmp
add
add
lret
push
inc
pop
adc
adc
inc
add
and
add
adc
add
cld
imul
xorb
sub
adc
push
inc
add
nop
xor
cmp
sbb
and
pop
pusha
add
mov
pop
jle
popf
roll
or
sub
pusha
add
mov
ss
xor
add
lock
pop
push
adc
jns
and
inc
and
insb
inc
loopne
and
inc
movups
push
adc
and
mov
jo
cltd
adc
popa
outsb
imul
inc
push
xorb
mov
daa
inc
add
push
push
dec
and
loopne
sub
add
inc
outsl
jne
hlt
dec
orb
push
gs
unpcklps
insl
insl
imul
push
outsl
insb
insb
and
sub
imul
sub
icebp
sub
icebp
sub
icebp
adc
gs
gs
push
sub
and
outsl
and
pop
sub
add
dec
popa
and
mov
jb
or
xchg
adc
inc
dec
push
inc
addb
daa
adc
mov
pusha
or
mov
shrl
adc
inc
dec
inc
or
outsl
jb
inc
push
sbb
dec
inc
inc
inc
cmp
data16
pop
xchg
cmp
add
and
push
and
inc
inc
push
inc
mov
bound
xor
and
xor
xchg
out
inc
dec
inc
inc
adc
dec
dec
subb
jns
dec
add
adcl
jge
add
adc
push
bound
fwait
push
jb
push
and
xor
adc
add
insl
fs
cmpsl
add
dec
bound
mov
add
insb
gs
add
pop
add
dec
xchg
dec
xor
add
aas
xor
pusha
pop
das
pop
and
pop
add
ja
pusha
pop
cmp
add
dec
outsl
je
jne
jo
jb
gs
add
daa
add
inc
push
loopne
sub
add
aaa
add
and
add
inc
inc
rolb
sub
add
inc
insb
ja
mov
and
inc
cs
add
push
popa
imul
adc
imul
add
push
gs
add
pop
add
jl
das
movl
jo
mov
pop
add
add
testl
outsl
jne
arpl
add
dec
clc
cmp
add
inc
add
cmp
add
inc
insl
fs
popa
jb
gs
add
push
outsb
xor
add
outsl
incl
inc
dec
adc
xor
add
jae
sub
add
aaa
add
imul
add
adc
xor
and
sbb
pop
pop
inc
push
dec
xor
push
inc
sub
aas
add
push
je
inc
jb
popa
jns
daa
add
imul
mov
xlat
add
int3
mov
add
xor
pop
add
inc
dec
dec
dec
push
push
daa
fwait
add
je
popa
jo
outsl
add
push
xor
pop
adc
sub
jg,pn
sub
adc
dec
push
inc
inc
daa
xor
daa
pop
add
adc
dec
inc
xor
daa
pop
add
adc
push
inc
cs
add
add
xchg
xchg
pusha
add
mov
aaa
sub
mov
adc
push
push
addr16
sbbb
xchg
sub
add
push
dec
dec
sub
sub
add
inc
xor
add
imul
and
sub
imul
xchg
and
es
and
pop
add
insl
popa
addr16
jl
aas
add
add
dec
add
inc
jb
push
add
aas
add
add
gs
sub
popl
mov
adc
outsb
jne
filds
pusha
mov
push
es
add
dec
and
pop
add
inc
and
dec
sub
add
clc
daa
aaa
add
jnp
aaa
add
add
lahf
add
popa
jo
xor
push
outsl
inc
add
jg
and
incl
adc
dec
push
xor
sub
adc
insb
gs
test
lahf
add
cmp
and
dec
sub
adc
xchg
popl
adc
adc
jl
cs
or
inc
inc
imul
pop
add
mov
lar
jg
or
mov
sub
add
ja
dec
add
xor
add
push
dec
push
outsb
imul
sub
or
push
dec
push
imul
je
mov
cmpsb
sub
adc
sub
add
push
and
add
push
add
outsl
outsb
addr16
imul
add
mov
es
add
scas
sub
scas
add
inc
jns
gs
iret
add
movsl
mov
adcl
pop
jo
jae
add
cwtl
and
loopne
jo
ja
aas
dec
add
add
insl
outsl
xchg
out
add
add
add
push
dec
add
inc
add
adc
pop
loopne
adc
add
ja
pop
pusha
adc
pop
add
aas
push
insb
adc
add
add
daa
mov
and
jno
pop
imul
adc
repz
mov
pop
and
sub
and
sub
add
and
add
aas
xchg
jl
add
adc
xchg
pop
and
scas
pop
mov
jmp
cmp
rolb
xor
sub
add
js
unpcklps
pusha
dec
add
inc
add
rolb
adc
inc
add
enter
les
adc
inc
add
mov
inc
add
test
add
pushf
inc
add
nop
inc
add
mov
adc
adc
add
je
add
jo
add
insb
inc
add
push
inc
add
pusha
inc
add
pop
inc
add
pop
inc
add
push
inc
add
push
inc
add
dec
inc
add
inc
inc
add
cmp
adc
inc
add
sub
das
adc
inc
add
sbb
adc
inc
add
add
add
cld
inc
xchg
adc
inc
add
in
add
loopne
add
faddl
adc
inc
add
rolb
mov
jns
jecxz
jae
pusha
pop
jae
jnp
je
jae
ja
je
jae
jp
jne
pusha
pop
pusha
adc
js
pusha
sbb
loopne
pusha
push
pusha
cmp
jae
and
rclb
mov
pusha
pop
je
pusha
pop
ja
pusha
pcmpeqb
pusha
repz
xor
pusha
pop
ja
pusha
pop
jbe
pusha
pop
js
pusha
jnp
pop
pusha
pop
ja
jo
jb
addr16
jb
pusha
stos
pusha
pusha
das
jl
pusha
mov
jecxz
pop
jp
pusha
pop
jbe
pusha
pop
jl
pusha
inc
jl
js
jge
pusha
sub
and
and
ja
pusha
pop
jbe
pusha
lahf
jle
pusha
pop
jbe
pusha
pop
adc
inc
adc
or
add
add
test
xchg
adc
inc
add
cmpsb
and
mov
mov
adc
adc
inc
jle
addb
test
das
adc
mov
sub
add
andl
inc
rolb
mov
and
add
inc
rolb
mov
das
sbb
mov
in
call
cs
add
jle
orb
out
push
ficompl
and
pop
fisubrl
pushf
popa
sub
add
rcr
fsubp
pop
mov
xor
cmp
adc
xchg
xlat
inc
add
adc
and
mov
xchg
daa
or
pop
out
test
add
and
daa
or
inc
xchg
and
daa
or
pop
xchg
jb
popa
fisttps
xor
add
out
popa
ret
adc
pop
dec
inc
pop
bound
adc
pop
pusha
inc
adc
pop
pusha
daa
adc
bound
repz
inc
pop
adc
js
pop
arpl
adc
pop
xor
sbb
jge
adc
popa
dec
cwtl
add
test
pop
bound
pusha
lahf
adc
pop
jnp
adc
pop
jge
adc
pop
popa
cld
adc
and
mov
adc
and
add
sub
add
andb
mov
cmpsl
xlat
mov
or
decl
or
sbb
xchg
std
cwtl
pushf
push
js
xor
addb
add
adc
adc
inc
add
push
lods
call
sar
xor
fimull
leave
and
lock
or
or
adc
add
mov
fistl
push
gs
fwait
and
push
inc
pop
pusha
call
dec
inc
pop
pusha
call
inc
inc
pop
jae
adc
pop
popa
das
adc
pop
arpl
adc
pop
jge
adc
pop
arpl
sbb
pop
fs
adc
pop
popa
outsl
adc
pop
fs
adc
pop
popf
jnp
pop
popa
ja
cld
fs
sti
popa
popl
arpl
lock
pop
bound
call
adc
inc
pop
popa
outsl
adc
inc
pop
popa
adc
inc
pop
xorl
and
cld
inc
pop
jp
adc
adc
test
pop
and
and
movsb
inc
pop
shl
gs
mov
add
out
rorb
int3
or
inc
and
and
shrw
mov
jo
dec
adc
sbb
pusha
add
out
loope
fwait
inc
pop
fwait
pop
popa
jg
leave
loope
push
jg
mov
add
scas
inc
add
mov
add
mov
inc
add
movb
int3
inc
add
rolb
adc
inc
add
repz
add
rorb
inc
add
sub
adc
inc
add
dec
inc
add
pop
inc
add
jle
add
addl
popf
inc
add
mov
inc
add
inc
add
out
inc
add
add
inc
pop
inc
add
daa
inc
add
inc
inc
add
inc
inc
add
inc
add
jp
add
xchg
inc
add
cmpsb
inc
add
movb
lret
inc
add
in
add
ljmp
add
inc
add
ss
add
dec
inc
add
push
add
outsl
inc
add
mov
adc
inc
add
ret
adc
inc
add
out
inc
add
ret
dec
add
inc
add
sub
inc
add
push
inc
add
inc
add
jle
add
xchg
inc
add
mov
add
mov
add
roll
adc
inc
add
testb
or
inc
xchg
inc
add
stos
jae
add
adc
shrb
lldt
mov
cmp
add
lahf
loopne
push
in
fmuls
ficomps
fldcw
add
sub
add
add
adc
fsubrs
test
add
sub
add
andl
add
add
sub
add
andb
add
add
and
add
cmp
push
pop
sub
add
mov
lcall
mov
cmp
add
and
and
loopne
add
xchg
dec
add
and
add
add
add
addl
add
and
sub
and
inc
addb
jecxz
mov
and
adc
push
push
and
add
push
inc
add
aas
add
mov
add
sub
cmp
verr
and
daa
add
loopne
and
and
and
dec
and
and
daa
adc
inc
add
dec
inc
add
insb
and
and
int3
pop
adc
jmp
mov
and
adc
and
push
inc
push
and
and
sub
mov
xchg
and
add
adc
adc
add
cli
and
pushf
or
or
adc
or
adc
adc
or
adcb
and
adc
leave
sbb
sbb
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
adc
int
mov
jno
or
mov
add
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
pop
pusha
cmp
sbb
mov
add
sub
sbb
inc
pop
pusha
add
sbb
or
add
cmpsb
xor
inc
push
xchg
add
add
ja
xchg
dec
add
dec
inc
add
lea
cwtl
dec
add
dec
inc
add
xchg
cltd
dec
add
dec
inc
add
jae
fwait
dec
add
dec
inc
add
je
popf
dec
add
dec
inc
add
jne
lahf
push
add
push
inc
add
xchg
add
inc
add
jbe
mov
inc
add
xchg
add
inc
add
xchg
and
inc
pusha
add
sbb
xor
add
arpl
xor
adc
and
and
add
jae
adc
and
and
and
dec
adc
adc
fldt
adc
adc
out
adc
or
add
adc
add
jnp
adc
ja
push
and
adc
add
shrl
adc
jb
push
and
sub
adc
and
sub
adc
inc
jge
sbb
add
ret
sub
push
imul
adc
outsl
add
adc
sbb
push
and
adc
pop
add
adc
pop
add
imul
rcll
aaa
adc
popa
add
mov
push
jae
push
and
adc
add
push
adc
inc
and
xor
and
inc
and
adc
push
add
push
dec
pusha
aas
adc
add
adc
push
sub
cmp
int
adc
daa
and
and
dec
xor
add
pop
add
adc
imul
js
pop
and
adc
push
adc
jbe
push
and
adc
bound
inc
and
adc
outsb
add
jmp
adc
insl
add
loop
adc
sub
sub
and
adc
ret
add
and
inc
in
rolb
add
adc
inc
cmp
pop
add
inc
adc
adcb
add
add
dec
adc
add
imul
pop
add
insb
inc
out
pop
add
insl
inc
push
adc
add
inc
mov
add
outsl
inc
cmpsb
adc
add
jo
push
adc
and
sub
add
inc
aaa
cmpsb
or
dec
cmp
mov
and
dec
and
dec
adc
add
and
shlb
dec
addb
add
dec
xor
cwtl
dec
adc
and
push
xor
test
adc
and
adc
and
xor
add
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
cmpsw
and
xor
mov
add
add
rcrb
add
inc
aas
pop
fsubl
mov
jne
xor
xchg
daa
push
das
mov
add
sti
mov
mov
mov
cmpsl
dec
xor
xchg
xchg
mov
push
xchg
in
stos
in
icebp
or
or
push
outsl
cmpsl
push
int
jb
fcmove
dec
mov
mov
popa
jmp
mov
mov
pop
in
gs
mov
push
jmp
jb
add
enter
scas
std
fists
adc
das
add
xor
jae
mov
pop
out
lcall
and
inc
mov
js
cmpl
test
iret
lahf
fidivrs
stc
mov
mov
cmpsb
inc
repnz
cmpsl
dec
cmp
dec
insl
sub
sbb
scas
data16
push
mov
mov
or
cmp
test
xor
sub
add
jb
int3
ljmp
stc
in
addb
ss
cs
mov
mov
clc
mov
sbb
cmp
xchg
cmc
jmp
notl
imul
cmp
fiadds
and
iret
and
insl
mov
rolb
pop
adc
filds
les
add
and
adc
push
ja
std
int3
cmc
jecxz
lcall
xchg
push
dec
test
push
sbb
add
push
inc
stos
add
inc
insb
outsl
jae
inc
insb
imul
add
sbb
popa
je
push
popa
insb
gs
gs
movlps
imul
pusha
adc
imul
imul
xor
pushl
ret
or
xor
xor
add
rorb
testb
mov
pop
or
adc
clc
push
movsb
mov
push
out
push
dec
cmp
stos
mov
lret
fwait
pusha
and
push
mov
mov
pop
jg
lret
aaa
lret
sub
inc
mov
push
sub
movw
pusha
lea
jb
pushf
clc
pushf
cmpb
call
inc
adc
xchg
jp
add
shld
add
rcr
mov
pushf
bt
dec
ror
mov
pushf
repnz
pusha
aas
add
sub
test
add
pusha
mov
inc
inc
pop
jg
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
cli
sbb
jb
insl
jo
inc
inc
or
gs
gs
inc
sub
popa
jo
jne
add
sbb
je
movsbw
inc
sbb
add
dec
outsl
arpl
inc
jb
popa
sbb
je
popa
jb
outsb
je
push
inc
sub
add
mov
mov
outsb
push
inc
add
dec
jne
inc
gs
jne
inc
gs
add
repnz
inc
daa
adc
inc
mov
outsl
ja
js
inc
js
sub
add
inc
popa
je
mov
jb
imul
or
adc
add
ljmp
push
mulb
push
loop
fistps
xor
ret
add
sbb
sub
sbb
and
xor
inc
push
jg
mov
dec
mov
mov
mov
mov
jnp
dec
cmpsb
jns
xor
enter
sbb
mov
push
fisubrl
push
imul
sti
movsb
movsl
adc
push
add
pop
jl
push
ljmp
xchg
aaa
das
leave
fwait
cmp
mov
mov
fldl
sub
and
mov
pop
and
dec
in
add
loop
inc
sahf
rolb
lods
inc
inc
mov
push
add
xchg
cmp
mov
inc
sarl
jno
inc
adc
pop
js
add
leave
mov
jae
jno
add
fcoml
push
mov
cmpsl
lret
sub
add
push
shrl
das
scas
test
cld
and
mov
xor
bound
sub
or
cwtl
jmp
cltd
inc
pusha
sbb
incl
or
inc
xor
stos
out
faddp
inc
cld
and
inc
enter
arpl
fistpll
seto
jmp
add
test
pop
cmpsb
mov
sbb
nop
sbb
mov
cltd
sub
pop
inc
pop
adc
sub
imul
arpl
add
outsb
add
dec
xor
cs
insb
add
push
test
or
push
mov
add
sete
not
inc
add
mov
mov
lea
inc
ret
push
lods
andl
inc
xor
adc
daa
popa
fldl
adc
jne
push
mov
push
mov
pushl
inc
mov
adc
adc
jge
inc
jne
bound
inc
imul
jns
les
inc
inc
sbb
push
outsb
dec
outsb
sbbb
cmp
jg
push
pusha
inc
pop
inc
adc
bound
mov
fldl
outsb
jne
je
insl
dec
inc
lret
adc
insl
outsl
jbe
sbb
jo
arpl
and
test
mov
shl
sub
inc
sbb
adc
mov
not
add
ror
sbb
mov
stc
test
inc
dec
or
test
mov
inc
insl
add
imul
test
fidivs
mov
sbb
pop
imul
jecxz
bound
adc
addb
cmpsl
test
dec
sbb
pusha
out
mov
or
in
sub
mov
rolb
clc
je
jl
xchg
sub
push
push
mov
in
sti
fidivl
mov
divb
xchg
push
cmpsl
data16
lods
sbb
mov
pop
popf
in
and
out
mov
cmp
add
cmp
jl
lock
adc
dec
cmpsb
jmp
sbb
inc
mov
xchg
lea
outsb
fs
gs
outsl
jne
int
icebp
adc
xor
dec
gs
push
adc
mov
jb
insl
gs
popa
push
pop
add
push
gs
imul
jae
mov
jbe
jb
outsb
insl
inc
fwait
pop
push
popa
jb
popa
bound
lcall
adc
or
sbbl
add
and
and
ror
rol
mov
setns
mov
cmc
sar
mov
adc
test
ror
dec
mov
adc
test
outsl
jne
arpl
jno
push
jns
inc
mov
mov
inc
outsl
insl
jo
je
inc
jnp
adc
popa
jo
mov
mov
mov
pusha
lods
bt
stc
not
stc
sub
stc
push
cmc
xor
gs
insl
fstl
adc
loopne
adc
jb
jae
and
add
inc
mov
pusha
bt
add
inc
inc
adc
cmp
in
inc
xor
mov
dec
dec
inc
ret
and
popa
jo
inc
add
add
pusha
pushf
movl
push
gs
adc
cs
xchg
push
xchg
add
sub
test
lea
cmp
clc
stc
sub
cmp
cmp
pusha
mov
fidivrl
cmpsb
pop
and
mov
cmp
pusha
inc
cmp
stos
int
ret
adc
rcll
fs
scas
inc
or
rcll
and
mov
adc
inc
roll
sbb
and
imul
arpl
insb
and
je
bound
inc
das
inc
dec
adc
and
sbb
popa
insl
imul
inc
add
bound
inc
cmp
and
sbb
shl
shl
mov
rcl
mov
mov
rol
pushf
adc
mov
inc
and
push
clc
movb
pop
out
les
test
bt
sub
push
test
xor
pop
ret
in
jnp
inc
inc
movsl
adc
gs
inc
inc
lea
inc
add
sub
flds
add
jb
inc
adc
inc
jbe
jnp
add
push
popa
je
push
outsl
inc
mov
and
mov
mov
inc
inc
adc
inc
gs
jo
outsl
jns
adc
cmp
mov
pop
ljmp
pushf
cmp
inc
push
adc
xor
pop
adc
je
pop
cmc
stc
dec
lahf
mov
bswap
adcb
push
pop
data16
add
enter
and
not
movzbl
lea
push
inc
jne
imul
popa
ficoml
xor
adc
outsl
imul
or
inc
test
int
sbbl
sbbl
inc
js
gs
xchg
adc
inc
roll
adc
gs
pusha
mov
pushf
push
add
cmp
inc
xchg
inc
push
adc
loop
popa
fs
ficoms
jae
jb
cmp
push
arpl
insb
insb
push
outsl
arpl
push
push
push
push
dec
push
xor
ss
stc
cmp
jb
rclb
pop
daa
pop
add
mov
dec
sub
outsl
jnp
mov
imul
mov
in
fsubr
xchg
push
pop
pop
or
or
pusha
jbe
pop
or
adc
inc
les
inc
ror
imul
mov
fwait
imul
rolb
inc
mov
stos
add
cmc
inc
xchg
adc
pusha
js
insb
inc
xor
adc
push
notb
jb
insl
push
bound
inc
cli
adc
fsubrs
inc
push
sbb
shl
mov
mov
pushf
inc
adc
add
xchg
pusha
loope
dec
adc
xor
fsubrl
adc
arpl
popa
pop
sbb
movb
clc
sub
pusha
inc
dec
adc
xor
adc
popa
inc
insl
adc
pushf
pushf
inc
pop
adc
cld
faddl
inc
sub
dec
inc
and
xor
jo
jne
scas
add
dec
addl
insl
gs
push
inc
pop
adc
imul
addr16
add
stc
inc
test
into
call
rorl
xor
cmc
cmc
add
pusha
not
pushaw
rclb
mov
or
mov
add
cmc
mov
stc
add
clc
inc
out
imul
mov
dec
arpl
inc
daa
daa
mov
mov
mov
arpl
adc
inc
aad
push
in
inc
xor
inc
rclb
bound
mov
inc
inc
sahf
sbb
xchg
cwtl
mov
inc
movsb
adc
arpl
adc
pop
mov
and
push
xor
mov
movsl
rep
ljmp
mov
mov
shrl
cmp
cmp
int3
fdivrs
insb
je
jb
mov
xchg
cmp
and
jg
xchg
adc
xor
or
cmp
cmp
pop
sub
imul
push
jb
fwait
jge
in
adc
xchg
cmpl
or
aas
adc
aad
aad
mov
jb
inc
sub
adc
cmp
cmc
lret
mov
xchg
adc
loopne
pop
jo
xchg
scas
das
push
lahf
inc
mov
or
or
lret
sub
popa
mov
test
inc
push
adc
or
adc
fistps
clc
adc
sar
setns
sbb
or
imul
movsl
out
shld
inc
dec
or
adc
mov
shr
sub
cmp
repnz
bound
outsl
mov
roll
outsb
out
shl
push
daa
inc
push
inc
daa
adc
adc
les
add
pusha
dec
pop
adc
jbe
insb
imul
repnz
sub
les
xor
mov
jne
pop
cmp
mov
lods
xor
and
and
cmp
stos
and
in
ret
lahf
stos
bound
jmp
insb
out
mov
cmp
jno
inc
add
cmp
mov
daa
cmpsl
sbb
lock
cmp
popl
adc
sbb
insb
insb
pop
dec
outsl
je
data16
inc
ret
push
imul
adc
inc
xchg
sbb
call
and
inc
jg
mov
inc
push
jmp
rorb
rolw
adc
mov
inc
faddl
add
push
pop
int3
and
cmc
inc
jns
imul
divps
jo
push
int3
mov
xor
add
inc
add
push
inc
mov
stc
xchg
sub
fs
fwait
lds
nop
arpl
xlat
cwtl
orl
bound
imul
adc
into
inc
cmp
ss
xor
mov
xchg
pop
fcmovne
jp
cmpsl
jmp
push
cmp
aas
xchg
add
movsb
mov
or
add
xor
shl
lea
lret
sub
dec
mov
cld
lea
into
xchg
roll
or
sub
xor
mov
sbb
fcomps
jmp
cmpsl
fxch
cltd
xchg
pop
stc
nop
lea
cmpsb
ja
pop
jns
aad
sub
dec
movsl
scas
xchg
push
dec
out
push
mov
rcrb
das
jo
mov
xlat
out
adc
add
inc
pop
fisubrl
out
sbb
sarl
pop
ffreep
daa
push
mov
ret
fbstp
subb
inc
or
jnp
dec
sub
std
mov
js
adc
adc
xchg
lods
push
and
jle
inc
mov
rol
and
xor
push
push
dec
fs
sub
xor
cmc
stc
test
inc
mov
inc
and
add
inc
popa
fs
jne
je
and
outsl
insb
outsl
jb
hlt
adc
lods
pop
stos
fisubs
ret
adc
test
out
dec
lds
jb
mov
aad
daa
ja
mov
inc
outsb
adc
mov
cmc
cmp
shl
push
leave
adc
jae
rorb
inc
inc
inc
and
lret
jmp
add
push
lods
pushf
inc
into
adc
cli
push
and
mov
cmp
xchg
inc
ss
cmc
add
cmp
pusha
test
cmp
inc
fists
or
adc
pop
adc
mov
inc
das
pop
pop
jo
add
pop
mov
or
outsl
int3
cltd
das
mov
dec
add
push
dec
cs
push
and
sbb
adc
test
inc
cmp
dec
push
jl
mov
and
addr16
inc
mov
mov
xchg
mov
bound
xchg
jge
sahf
ret
andl
cmp
xor
popa
rcrb
push
xchg
rorb
inc
test
sbb
xchg
inc
mov
ret
outsl
add
not
inc
ret
inc
push
adc
dec
roll
adc
inc
inc
mov
adc
popa
pop
pop
push
outsb
push
push
fldl
inc
ret
adc
cld
mov
or
adc
mov
imul
or
pop
jp
rolb
dec
cmp
mov
into
add
xchg
imul
adc
xor
mov
scas
lods
inc
push
xchg
jb
xor
sahf
inc
xchg
mov
ret
lds
mov
mov
mov
xor
add
shrb
cmp
inc
mov
sbb
in
imul
outsl
pop
gs
xchg
lret
mov
xchg
mov
xor
pop
or
pop
popa
in
fld
inc
sbb
sarl
and
xchg
add
out
pop
mov
mov
pop
inc
mov
dec
dec
mov
push
jl
push
inc
test
push
popa
aam
sub
fisubrl
ja
jmp
or
jne
mov
cmp
test
jg
mov
cmpsl
ror
jl
mov
int3
jecxz
cmpsb
dec
mov
sbb
inc
xchg
dec
inc
pop
ja
dec
push
lds
sbb
mov
das
cmp
loope
scas
mov
rclb
sub
and
inc
daa
sahf
sarb
dec
xor
clc
jne
inc
repnz
lds
pop
dec
xor
xor
test
std
mov
outsb
adc
das
test
pusha
fildl
cmpsb
movsb
dec
mov
and
pusha
add
adc
xor
or
inc
jb
dec
cwtl
dec
scas
adc
dec
ficoml
outsl
insb
arpl
sbbb
out
cmp
pusha
cmp
pushf
push
xchg
xor
xchg
dec
cmp
inc
add
aad
sub
xchg
push
adc
popa
jb
in
or
bsf
bsr
not
mov
fsts
xlat
cmpb
inc
and
push
bound
ljmp
movups
jbe
jns
outsb
fs
adc
pushf
dec
lea
adc
repz
lcall
push
mov
pusha
outsb
jne
push
popa
jge
xor
adc
or
push
dec
hlt
adc
je
vshufps
cmp
push
pusha
pusha
adc
dec
jbe
push
popa
imul
adc
adc
or
outsb
inc
push
jno
mov
addb
push
mov
mov
lea
pusha
inc
adc
add
inc
push
push
outsl
fs
das
mov
push
inc
push
shll
inc
inc
adc
inc
cmpsl
cmpsl
adc
mov
inc
movups
aaa
je
mov
add
inc
adc
cmp
outsl
outsb
adc
test
fldl
push
pusha
sub
shl
mov
mov
shl
add
shr
inc
rcl
mov
pusha
test
inc
add
xchg
dec
add
clc
clc
pushf
clc
rol
test
add
test
cmc
inc
jp
sbb
call
bound
add
scas
push
push
pushf
push
lea
imul
adc
adc
adc
inc
add
jo
cmc
test
popa
and
sbb
adc
fwait
adc
or
adc
ds
xchg
inc
push
dec
pusha
call
outsw
popa
test
sub
or
inc
imul
and
aad
push
rolb
mov
push
sub
cwtl
pop
lahf
out
daa
jle
mov
xor
pop
mov
js
icebp
sarb
rclb
mov
mov
cli
xor
jmp
jns
sub
xchg
les
xor
out
pop
mov
outsl
mov
and
mov
or
clc
nop
mov
sbb
mov
arpl
out
fcmovnbe
idivl
adc
lahf
sub
add
ror
pop
lret
inc
pop
aam
mov
imul
inc
adc
add
mov
imul
push
xchg
enter
scas
sarl
adc
cwtl
sub
dec
sub
sahf
sbb
mov
jg
xchg
xor
int
js
pop
sbb
jno
jle
mov
leave
mov
fnstenv
out
mov
ja
xchg
jns
or
in
xchg
inc
pusha
mov
imul
add
jmp
rclb
sarb
sti
mov
pop
repz
pusha
xor
mov
movsb
and
adc
insb
insl
test
orb
outsb
mov
push
or
inc
adc
pop
push
imul
repnz
push
lret
sbb
add
sar
cmp
bound
or
add
neg
dec
add
lret
adc
inc
jb
cmp
jg
inc
push
inc
arpl
jmp
rolb
adc
fs
adc
lea
adc
imul
adc
popf
stos
and
push
imul
je
inc
push
jno
adc
popa
outsb
jae
inc
inc
in
inc
inc
inc
jb
adc
icebp
push
jbe
ret
dec
popa
jae
inc
jb
inc
dec
inc
lea
mov
mov
add
inc
cld
adc
lahf
cmpb
adc
outsl
jo
push
push
sbb
leave
movsb
cmp
in
cmpsl
cmp
sti
ret
js
jg
data16
setno
test
jecxz
mov
clc
leave
int3
sbbl
ss
test
repz
mov
mov
cmp
js
push
mov
lods
mov
inc
bound
popa
movsb
add
unpcklps
mov
js
fwait
sbb
adc
inc
mov
mov
add
push
imul
dec
lds
adc
pusha
movsb
adc
adc
push
adc
das
das
jle
add
add
test
stc
cmp
mov
push
inc
jmp
outsb
push
adc
add
aad
scas
mulb
adc
inc
push
bsr
and
inc
jl
pushf
cmc
inc
jp
push
push
push
pusha
dec
adc
and
xchg
xchg
adc
push
lds
insl
fwait
adc
dec
popf
push
jno
adc
pop
test
test
fwait
inc
or
xor
push
push
gs
insl
bound
nop
xor
push
inc
push
adc
add
dec
jbe
adc
inc
sbb
adc
and
int
dec
dec
bound
stos
jecxz
pop
adc
clc
push
pusha
jbe
push
adc
roll
je
lds
bound
mov
push
insb
rcrb
popa
jo
jne
dec
outsb
out
inc
pop
mov
adc
pushf
push
pusha
out
stos
and
addr16
gs
mov
cmc
push
stc
inc
outsl
adc
movsb
pushf
add
inc
adc
dec
data16
dec
inc
inc
inc
xor
push
jne
adc
shll
add
and
sub
mov
mov
dec
or
dec
movb
pop
or
loopne
mov
fcoms
push
mov
push
int3
pop
negb
es
mov
pusha
je
pop
outsb
xchg
in
dec
mov
pusha
mov
mov
mov
xor
mov
cmpsl
mov
pop
inc
sarl
orb
pusha
iret
mov
enter
sbb
out
cmc
jle
mov
popa
mov
sub
clc
popa
arpl
cmp
popl
sbb
lret
xchg
das
movsl
xlat
mov
out
sbb
cmpsb
xorb
loopne
hlt
aas
popf
xchg
sbb
bound
add
in
mov
ret
xchg
leave
xchg
xor
and
cwtl
xchg
int
pop
sbb
inc
pop
mov
push
ret
xchg
cmpsb
jnp
jl
pop
cmp
mulb
sbb
inc
gs
mov
xchg
or
lock
imul
xlat
jmp
fisttpll
or
jge
inc
stos
adc
scas
cmc
jge
inc
stos
add
mov
out
sbb
or
in
mov
sbb
enter
out
mov
mull
in
sub
ljmp
xlat
mov
sahf
das
pop
and
add
inc
rcrl
mov
cmc
xlat
jmp
and
inc
insl
push
dec
jns
pushf
rol
test
test
push
add
push
mov
clc
stc
clc
test
neg
roll
mov
adc
jne
aad
mov
adc
gs
outsl
outsb
dec
jmp
and
je
or
and
push
cmp
inc
fstl
mov
jo
add
cmp
dec
jl
jbe
mov
push
cmp
ja
add
rcl
push
sub
test
lea
add
add
xor
mov
sub
inc
cmp
push
scas
jmp
add
mov
cld
cmp
xor
xchg
pusha
inc
fwait
into
loope
sbb
stos
lods
enter
test
sub
mov
aaa
dec
inc
pop
mov
jmp
aas
pop
or
inc
mov
push
out
push
mov
sbb
adc
test
fcomps
stc
add
clc
inc
or
addl
das
adc
rorl
adc
fidivrs
out
pop
test
mov
popf
adc
jmp
xor
xchg
imul
adc
jle
push
dec
and
pushf
loope
dec
cmp
andl
jecxz
int3
fsubs
cmpsb
jl
data16
add
ror
xor
lret
pushf
repz
inc
xchg
inc
ret
hlt
cmc
and
adc
daa
dec
push
adc
popa
insb
imul
cmp
mov
lcall
jecxz
cmpsb
xchg
mov
jae
and
adc
into
inc
lods
add
gs
mov
push
xchg
adc
mov
icebp
fldcw
xor
stc
adc
popl
sub
sbb
pop
imul
imul
mov
xor
xchg
ret
xchg
outsl
and
push
push
push
or
adc
outsl
fs
arpl
lcall
sub
xor
out
add
sti
cltd
bound
inc
std
fwait
xlat
scas
fisttpl
dec
push
mov
fisubl
ror
fwait
mov
test
fdivr
inc
sub
sbb
loopne
or
jl
scas
lret
mov
mov
bound
push
lds
adc
mov
jl
adc
movsl
dec
mov
sub
cmp
mov
and
inc
cmp
jae
xchg
cs
jae,pt
pop
xor
mov
hlt
pop
imul
dec
jo
outsb
lds
inc
push
lds
movsbl
sbb
and
mov
stos
cltd
adc
mov
jle
inc
dec
fadds
push
cli
adc
pushf
jbe
adc
inc
jmp
push
add
ret
in
test
cli
lcall
les
je
clc
fnstsw
dec
stos
mov
ror
scas
sub
pushf
das
or
jmp
mov
sbb
add
dec
filds
xchg
mov
in
or
dec
dec
dec
lods
cwtl
vfnmsub231ss
int3
add
sbb
dec
enter
pop
jns
inc
aaa
or
out
lret
pop
inc
pusha
mov
andl
outsl
dec
mov
loop
inc
mov
pop
outsb
pop
xor
cmp
push
scas
push
jnp
loop
and
daa
inc
stc
jbe
popf
out
mov
fnstenv
add
aaa
aad
fwait
adc
stos
and
in
cmp
pushf
mov
fsts
or
cs
mov
jmp
dec
mov
xor
jb
mov
mov
sub
xor
cs
dec
and
hlt
sbb
inc
jg
push
or
es
mov
mov
mov
add
push
pop
jecxz
in
fsubr
into
fdiv
sbb
or
pop
inc
das
adc
and
dec
outsl
inc
xor
or
dec
imul
sbb
mov
push
mov
pop
imul
mov
cmc
adc
scas
xor
mov
xor
add
fs
add
mov
fildll
dec
in
mov
repz
ficompl
pop
sub
imul
inc
mov
outsl
ja
adc
movsb
adc
pusha
jns
inc
fistl
rcll
addb
inc
xor
fisubs
adc
stc
adc
cmp
clc
adc
out
sbb
rorb
fwait
les
and
sbb
sbb
test
inc
addr16
adc
mov
xlat
mov
adc
lea
mov
pushf
sub
ror
test
pop
jge
mov
adc
add
stc
mov
cmp
and
and
dec
mov
jnp
inc
dec
cld
mov
adc
fs
or
push
sti
loope
push
cli
mov
int
shll
mov
hlt
aad
mov
lcall
mov
cwtl
or
mov
sub
mov
dec
arpl
das
stos
mov
push
xchg
jecxz
pop
lcall
pop
xlat
ja
aad
dec
xchg
call
sbb
mov
mov
push
inc
inc
add
shll
sub
push
dec
jecxz
fstl
gs
sub
lock
inc
push
or
pop
test
inc
mov
cli
xchg
repnz
sbb
cmpsl
push
sti
mov
inc
daa
popf
sbb
push
iret
test
int
mov
fwait
xor
dec
sahf
mov
adc
jg
ss
mov
and
mov
shlb
cmp
filds
mov
mov
aaa
test
loope
loopne
aad
cld
jecxz
arpl
push
cmpsb
xor
push
inc
xchg
pop
xchg
mov
ret
fmull
and
and
pop
push
push
sbb
inc
mov
xlat
cmp
into
aad
fildl
orl
jbe
cld
mov
pop
imull
dec
aam
repz
ss
fsubs
sbb
mov
mov
mov
mov
icebp
pop
repz
pop
cmp
enter
jns
mov
repz
das
push
dec
sub
gs
push
push
lahf
dec
fdivr
push
dec
sub
xchg
ret
inc
insl
sbb
and
dec
push
adc
push
xor
adc
push
inc
dec
adc
pusha
mov
inc
and
pushf
mov
pop
or
and
and
mov
mov
add
sbb
add
jbe
push
sub
test
negl
mov
mov
jne
mov
cmpsb
inc
out
scas
xor
imul
fldl
ljmp
mov
or
pusha
push
push
ret
rcrl
jg
movsl
inc
adc
xchg
xor
int
xchg
pop
cmpsb
pop
inc
pop
mov
ret
or
mov
pop
jnp
push
je
jbe
cmc
sarb
dec
push
pop
outsb
adc
mov
std
add
xchg
in
xlat
inc
rclb
sub
jo
adc
inc
lods
adc
jae
adc
pop
jbe
jbe
ds
inc
sub
add
inc
insb
push
and
adc
data16
jae
add
lds
adc
bound
adc
rclb
jae
ss
jmp
mov
sarb
dec
jne
je
jo
jp
adc
adc
imul
jbe
arpl
pop
and
jae
sbb
xor
and
adc
pop
xor
adc
flds
jns
jb
clc
rolb
xor
test
repnz
mov
mov
jle
adc
neg
dec
sub
lock
not
sar
jns
or
jge
sahf
call
sbbb
sub
cmp
push
sbb
mov
push
mov
adc
jp
mov
push
rclb
popf
std
dec
add
pop
shlb
movsl
fnsetpm(287
cmp
adc
cmpsb
fnstcw
iret
stos
mov
shlb
dec
jne
cmpsb
fwait
pop
dec
loop
mov
sub
jo
pop
fiadds
mov
xor
push
add
and
or
sbb
sahf
roll
sub
in
pop
push
and
outsb
jo
je
dec
iret
adc
in
push
pop
inc
add
mov
add
sbb
and
jbe
and
add
add
add
add
dec
and
dec
push
and
mov
ret
pop
add
and
lahf
inc
add
rolb
adc
ficompl
add
inc
and
sbb
in
add
or
add
adc
inc
cmpsl
adc
pop
adc
add
adc
push
and
cmpsb
and
inc
xchg
in
add
or
inc
inc
adcl
inc
add
lahf
pop
and
aas
cmp
add
inc
jnp
sbb
add
bound
add
inc
or
sub
jae
testb
decl
and
sub
inc
pop
inc
ja
adc
insb
and
jb
and
pop
sub
add
lret
pop
add
xchg
and
cwtl
hlt
pop
add
insl
and
inc
adc
lods
inc
aas
adc
mov
repz
pop
xlat
pop
add
and
pop
jae
add
mov
aad
pop
add
adc
cmc
pop
add
inc
or
int
add
sub
aaa
and
stc
out
pop
add
sub
add
inc
scas
sbb
lret
push
inc
pop
adc
pop
and
dec
inc
daa
adc
add
add
pop
adc
inc
sbb
pop
add
ret
icebp
inc
aas
adc
inc
repz
add
pop
add
inc
pop
adc
rcrb
add
inc
jnp
jae
push
adc
arpl
cmpsl
inc
das
adc
inc
pop
inc
ret
adc
inc
outsl
adc
sub
add
inc
stos
adc
add
inc
add
cmp
pop
add
add
inc
add
push
and
aaa
cmp
ret
adc
add
add
xor
xchg
adc
inc
repz
pop
adc
lock
add
inc
adc
stc
repz
add
pop
add
enter
inc
lahf
adc
cli
pop
add
pop
add
adc
cmp
add
xor
adc
adc
inc
xchg
adc
pop
add
inc
add
outsb
inc
movups
add
cli
inc
imul
inc
cmp
jb
adc
stc
inc
movups
jb
add
aas
adc
add
add
sub
inc
inc
pop
sbb
pop
add
icebp
pop
add
inc
pop
adc
inc
iret
adc
into
inc
push
inc
inc
adc
jg
dec
adc
ret
lock
add
and
mov
negl
add
outsl
sbb
dec
and
and
and
insb
inc
push
adc
inc
push
adc
inc
dec
adc
push
and
cmp
adc
inc
daa
adc
aas
adc
ss
or
adc
inc
pop
adc
jg
pop
inc
lahf
adc
inc
pop
adc
inc
xor
mov
inc
xor
mov
adc
xor
add
inc
ret
adc
mov
xchg
inc
das
adc
inc
outsl
adc
inc
aas
inc
push
sbb
cmp
imul
inc
dec
adc
inc
mov
adc
inc
sti
inc
mov
adc
arpl
add
inc
mov
add
inc
pop
adc
adc
or
add
inc
pop
adc
inc
and
sahf
inc
inc
adc
inc
daa
adc
adc
inc
jecxz
dec
inc
sub
loopne
fists
xchg
inc
adc
cmp
adc
aas
adc
int3
pop
add
adc
adc
add
inc
jecxz
int3
inc
mov
jne
xchg
adc
inc
pop
adc
adc
adc
loope
inc
fwait
inc
lahf
adc
inc
outsl
sbb
jno
push
daa
and
push
aaa
adc
pop
adc
inc
jae
imul
inc
inc
mov
and
adc
out
adc
inc
out
inc
inc
xor
pop
inc
push
adc
out
add
inc
fistl
cmp
sbb
pop
add
pop
and
push
inc
call
addb
scas
inc
or
in
inc
jae
bound
adc
inc
or
jecxz
jecxz
incl
add
inc
xchg
adc
fwait
adc
dec
adc
jnp
hlt
inc
sti
adc
xor
rolb
adc
inc
adc
inc
stos
adc
inc
pop
adc
inc
mov
add
inc
jae
fiadds
adc
adc
aas
inc
repz
inc
jmp
jns
fwait
adc
inc
outsl
adc
inc
adc
inc
movups
imul
inc
push
adc
inc
mov
push
imul
adc
adcl
inc
adc
inc
xor
out
inc
fwait
adc
fimuls
inc
adc
inc
das
adc
inc
adcl
inc
xchg
adc
adc
sti
adc
addr16
testl
adc
adc
inc
mov
adc
and
and
inc
stos
inc
fwait
adc
inc
fists
push
inc
arpl
sahf
inc
inc
pusha
add
lcall
adc
pop
adc
inc
dec
adc
inc
sub
sub
mov
mov
dec
and
jnp
pop
adc
negb
add
xor
inc
daa
adc
pop
and
aam
xchg
adc
inc
ja
scas
inc
jae
adc
and
addb
ja
pop
add
inc
xlat
adc
inc
ja
fs
jnp
xor
adc
mov
int
and
xor
adc
inc
lahf
adc
inc
mov
fcomps
inc
xchg
inc
lahf
adc
inc
adcl
inc
jnp
lea
adc
out
adc
xchg
adc
add
roll
repz
imul
inc
pop
adc
inc
aas
adc
inc
sub
incb
adc
inc
jecxz
cltd
inc
fwait
adc
inc
aas
adc
inc
pop
adc
adc
lret
inc
and
push
inc
push
adc
inc
inc
adc
inc
scas
adc
out
adc
inc
xchg
adc
inc
aaa
adc
inc
mov
adc
inc
and
push
inc
dec
adc
inc
sub
push
inc
outsl
adc
jnp
inc
inc
aas
adc
and
pop
inc
add
or
adc
inc
jae
aad
mov
and
aas
adc
inc
fwait
adc
fistl
test
pop
adc
mov
adc
inc
jg
lock
adc
adc
add
sti
inc
scas
adc
scas
adc
inc
fwait
pusha
add
xchg
inc
daa
pusha
add
aam
cmp
mov
add
lret
inc
jae
add
popa
inc
adc
sbbb
sbb
mov
adc
inc
rcll
sub
adc
jno
add
pop
adc
inc
imul
dec
inc
adc
xlat
inc
mov
mov
adc
jg
dec
clc
mov
mov
adc
inc
inc
adc
inc
out
adc
inc
cmp
adc
inc
mov
adc
inc
add
adc
mov
inc
add
mov
adc
sbb
adc
inc
add
sbb
pop
adc
add
adc
adc
movl
pusha
or
add
add
xor
adc
shlb
das
adc
rolb
adc
inc
inc
add
adc
addr16
pusha
pop
pop
or
adcb
xorb
add
adcb
inc
add
andl
ja
notl
adcb
add
or
adc
pusha
adcl
inc
jnp
pop
inc
pop
adc
inc
jnp
in
lret
adc
cmpsl
adc
adc
inc
mov
adc
inc
mov
outsb
inc
mov
pusha
add
sbb
data16
jae
outsl
mov
and
and
inc
jae
popa
jo
add
push
pop
pop
push
and
and
inc
jne
adc
ror
pop
add
dec
inc
adc
or
and
lds
mov
mov
imul
and
lods
out
mov
xchg
add
cmc
inc
mov
test
lds
pop
icebp
mov
adc
std
add
aaa
or
adc
or
mov
in
lret
jp
insl
sbb
push
jp
and
jecxz
lods
dec
and
and
dec
push
adc
push
dec
adc
clc
or
push
xor
mov
sbb
stos
movb
mov
push
fiadds
loop
inc
sbb
setg
imul
add
nop
inc
bound
mov
xchg
and
out
test
inc
mov
cs
jmp
fiadds
incb
mov
sbb
out
sbb
out
jecxz
fldcw
gs
aaa
jb
insl
lahf
inc
shll
push
xor
movsb
lock
jge
mov
shl
clc
dec
add
inc
imul
gs
mov
sub
sbb
pop
adc
inc
mov
jns
push
adc
pushf
pushf
jl
adc
fdivr
and
cmp
cmp
inc
or
mov
cwtl
cwtl
push
arpl
outsl
jo
jo
push
inc
enter
outsl
dec
adc
add
and
xlat
adcl
adc
mov
xchg
daa
adc
bts
rcl
shl
ror
dec
jb
adc
out
punpcklbw
out
lea
sub
bts
dec
xor
and
int3
inc
push
adc
je
jno
pop
adc
dec
lds
adc
inc
xor
adc
inc
xchg
sbb
rcll
in
pusha
push
mov
adc
xchg
push
sub
jne
sub
dec
mov
pop
clc
mov
sbb
pusha
bts
inc
or
sub
add
test
dec
and
jae
jb
cmp
and
xor
stc
mov
push
push
add
and
mov
add
ret
loop
jo
neg
cmp
cmp
push
inc
adc
in
sub
mov
insl
sub
inc
add
jmp
stos
push
mov
lock
incl
sbb
add
inc
xor
shl
inc
or
clc
push
push
mov
rcrb
adc
mov
adc
or
sub
pop
outsb
lret
adc
lret
xor
inc
push
pushf
pop
jae
repz
insl
push
dec
and
insl
ja
and
out
xchg
lcall
scas
pop
push
dec
sub
push
movsl
rcrb
ror
shll
pop
aam
xorb
cwtl
cmp
adc
stc
cmp
sahf
insb
sbb
popf
out
xor
sbb
loop
pop
fcmovnbe
add
fs
mov
cwtl
pop
mov
xor
inc
jle
bound
or
cld
push
xchg
mov
jb
sbb
jge
pop
or
loope
and
js
add
or
dec
adc
cmp
cmp
cmp
sub
mov
aam
xchg
sahf
adc
jae
pushf
and
and
inc
pop
arpl
xchg
lcall
or
xchg
lret
mov
jnp
cmpsl
cmovnp
inc
push
add
scas
xchg
cli
mov
pop
aas
jge
jg
movsl
out
out
sbb
dec
pcmpgtd
inc
sbb
inc
pop
xor
lea
scas
lea
out
jne
divl
loope
fbstp
jbe
into
lds
sub
mov
adc
jge
cmpsl
test
add
cli
mov
sbb
test
push
mov
ja
scas
test
or
push
cs
add
sub
pop
adc
stos
out
lods
adcb
inc
cmp
jl
adc
xor
pusha
adc
arpl
movsl
inc
lds
xor
mov
pop
mov
setno
push
cwtl
inc
adc
mov
and
jo
lret
sbb
cld
push
xchg
inc
or
lret
inc
and
pop
xor
pop
xor
or
aas
dec
mov
push
hlt
mov
pop
mov
ret
push
mov
dec
sbb
mov
cs
jp
adc
xchg
jge
xchg
mov
pop
fstpl
push
inc
cmc
test
fwait
adc
sbb
sub
and
jp
adc
inc
ljmp
and
lea
cwtl
or
adc
fsubl
je
and
xor
adc
test
mov
clc
jle
jo
movsb
fsubrl
loopne
rep
fldcw
push
clc
and
pop
mov
add
push
sbb
shlb
mov
test
mov
add
test
popa
sbb
imul
add
cmp
cmp
insb
xor
popa
push
lret
jmp
jb
add
hlt
mull
cwtl
iret
fwait
movb
xchg
sub
jp
cmp
push
adc
outsb
adc
fildl
adc
scas
inc
mov
mov
dec
arpl
cmp
xor
les
adc
jb
stc
inc
cli
adc
and
and
popa
and
sub
dec
sbb
xchg
inc
insl
mov
and
adc
xchg
sub
and
fs
adc
adc
push
leave
lret
adc
sbb
mov
pusha
xor
mov
or
roll
and
aaa
push
sbb
jae
mov
adc
and
leave
out
jo
lret
mov
inc
rol
rorl
or
jae
in
jmp
push
jo
fisttps
test
mov
ret
orl
and
cmp
fists
mov
daa
pop
outsb
dec
mov
in
xchg
pop
push
int
mov
jb
fwait
ss
jmp
ret
mov
iret
pop
inc
push
adc
fists
cmpsl
mov
mov
sbb
in
lahf
mov
jns
in
mov
cmc
dec
xor
outsb
enter
sbb
mov
in
imul
ljmp
sbb
adc
shlb
popa
dec
pushf
cmpsl
adc
inc
fcoml
or
test
dec
dec
inc
inc
push
push
and
jno
jns
inc
cmp
dec
sub
push
nop
testb
ljmp
push
xchg
jo
xchg
jno
inc
xchg
adc
sarb
rolb
xor
test
add
pushf
not
cmp
stc
pusha
mov
test
addr16
fstpt
and
lea
bswap
mov
and
adc
adc
cmp
outsb
and
adc
jge
push
jne
push
adc
mov
jae
sub
and
and
fs
jae
and
mov
push
inc
mov
test
mov
rclb
inc
push
push
adc
jns
js
insb
sahf
les
push
mov
bound
lahf
daa
add
and
cmp
into
ret
jge
lahf
jns
lret
outsb
and
dec
adc
push
pop
jp
gs
bound
das
popa
inc
fidivrl
sti
fs
in
pop
in
das
pop
jns
pop
xor
and
inc
mov
fwait
fwait
push
and
sub
inc
js
arpl
adc
stc
pop
insl
xchg
mov
mov
sahf
jmp
adc
xor
lds
sbb
add
sbb
setl
mov
inc
data16
add
jecxz
bsf
add
inc
outsl
push
sti
lea
inc
sbbl
pop
and
push
out
add
inc
jle
adc
adc
xchg
arpl
mov
shlb
ljmp
pop
jecxz
sub
xor
pop
xchg
dec
repnz
movsb
mov
sub
sahf
or
loopne
pop
pop
lret
js
mov
push
xchg
sbb
mov
cmp
faddl
mov
js
push
mov
mov
or
push
xchg
and
cmp
cmp
aad
in
lods
int3
cmc
stos
sahf
or
xchg
fadd
jecxz
jae
xchg
fcomi
nop
sub
and
adc
jp
sbb
push
shlb
ret
xchg
sub
std
mov
sbbb
cmc
xor
mov
jmp
and
popf
andb
add
test
mov
push
lods
and
cwtl
pop
fildll
test
pop
mov
insb
push
and
clc
fnstenv
inc
inc
sub
into
andl
adc
jle
add
sbb
jge
mov
inc
or
adc
pop
push
lock
das
sub
xchg
clc
dec
adc
data16
cmc
stos
imul
cmp
cmp
lds
push
inc
sbb
add
gs
push
mov
xchg
jne
jmp
dec
rcrb
mov
cmp
imul
es
sti
jl
sbb
mov
sbb
movsb
sub
repz
pop
push
loopne
mov
inc
add
mov
add
call
and
fildl
and
adc
sahf
and
rol
stc
inc
push
add
test
cmp
pushf
add
stc
mov
push
cmp
not
test
cmc
mov
inc
push
adc
lock
dec
push
fwait
cmc
cmc
cmp
test
and
in
mov
es
call
jne
cmp
sub
sub
rcr
mov
clc
test
sub
clc
add
not
mov
clc
push
and
bswap
mov
pushf
mov
adc
or
dec
mov
xchg
jnp
adc
or
and
cwtl
xor
add
repnz
xchg
adc
outsb
fs
push
cmp
mov
jno
jo
pop
sub
test
pop
push
inc
popa
dec
push
dec
ss
into
ja
ror
add
inc
leave
sbb
push
outsl
jne
test
es
bound
mov
jne
jae
sub
jno
xor
orb
mov
rorb
lcall
mov
int
imul
pushf
andb
push
out
clc
lea
or
cwtl
daa
add
movsb
inc
add
imul
dec
xchg
push
lret
lret
sub
ret
dec
adc
inc
push
adc
dec
and
outsb
jo
gs
jnp
pop
adc
adc
mov
fstl
mov
lret
pop
pop
and
aas
cmp
jmp
insl
in
rorl
push
mov
push
jbe
in
pushf
mov
nop
outsl
pushf
cmp
in
leave
mov
pop
cmp
out
cltd
jmp
mov
sub
mov
inc
js
sbb
lods
add
xlat
add
mov
jle
loop
scas
mov
rolb
cmp
sub
adc
push
add
stos
sub
popf
fisttpll
inc
mov
dec
push
in
and
rorl
dec
pop
adc
into
pusha
dec
repnz
jg
sbb
adc
stos
pop
sbb
push
clc
add
pusha
and
sub
ret
loop
cltd
sub
cmp
outsl
and
or
jne
xor
out
jae
mov
xchg
icebp
mov
push
retw
into
aam
gs
mov
add
adc
adc
xlat
daa
popf
fadds
mov
popf
pusha
mov
stc
rcll
mov
inc
adc
sbb
pop
cmp
cmp
lods
sti
out
imul
lret
fdiv
push
mul
push
scas
adc
adc
xor
mov
dec
daa
jnp
rcrl
or
and
mov
cmp
add
xchg
cltd
mov
xchg
and
imul
faddp
inc
fcmovnbe
shlb
insb
xchg
add
lahf
sub
push
xrelease
jp
cmp
push
push
inc
insl
fcoms
mov
andl
lahf
sub
cld
lea
sub
jb
cmp
inc
push
push
cmc
cmpsw
imul
push
leave
lahf
mov
bound
inc
cmp
add
ds
iret
inc
lea
mov
cmc
js
data16
inc
mov
jo
jp
cmp
push
gs
aad
push
and
insb
popa
arpl
jnp
stos
adc
add
not
adc
add
imul
jge
mov
and
jg
and
sub
lea
lea
inc
jb
adc
push
dec
pop
fidivs
cmp
pop
dec
sub
in
add
ret
mov
fadd
push
xor
cmp
jbe
cmpl
pop
xor
lods
and
mov
cltd
shll
cmp
mov
sahf
test
lahf
sbb
jae
xchg
in
mov
sbb
inc
outsb
add
mov
sub
cli
popf
es
lock
imul
insl
cmp
and
adc
adc
cmp
repz
inc
notb
aaa
push
inc
jge
adc
pop
push
jae
jb
gs
pop
jg
dec
inc
dec
inc
ficoms
jns
and
adc
pop
dec
push
adc
fs
add
adc
adc
mov
lcall
pop
inc
rclb
iret
dec
sahf
adc
imulb
or
ret
xor
lcall
xor
and
mov
push
fidivrl
xchg
sarb
adc
das
pushf
cmp
push
push
xchg
add
fsubs
mov
and
fiaddl
dec
adc
mov
xchg
dec
sub
imul
ficompl
fcmovu
dec
sub
pop
mov
jbe
pop
mov
lea
std
test
sbb
mov
lahf
push
pop
das
or
inc
xchg
push
mov
adc
test
dec
test
int3
push
jnp
dec
popa
loop
pop
int
pop
mov
fcmovne
xchg
flds
aad
adc
and
or
pop
jle
nop
loopne
loop
and
popa
aam
aam
adc
inc
mov
addl
bound
inc
out
xchg
dec
and
sub
test
outsb
xchg
adc
adc
cmpl
jnp
ss
adc
pop
add
ret
adc
sub
push
and
ljmp
ret
out
int3
cmp
cmp
sbb
xlat
push
cli
xchg
cltd
sub
sbb
fldenv
add
xchg
jl
int3
mov
dec
imul
outsl
addl
insb
aam
in
jmp
push
cs
pop
adc
jnp
sbb
adc
dec
test
adc
cmp
jb
inc
jmp
adc
adc
xchg
and
pusha
add
xorl
in
int
mov
mov
dec
push
jecxz
test
clc
adc
dec
ret
movsl
push
sub
clc
pop
jle
adc
hlt
mov
mov
mov
in
add
je
jp
rorb
lock
or
adc
or
mov
jmp
mov
add
push
rorb
pop
lcall
pop
mov
jmp
in
mov
cmp
scas
sub
outsb
adc
add
or
inc
mov
hlt
push
stos
and
dec
inc
push
push
add
xlat
pop
xchg
push
xchg
pusha
mov
adc
cmp
sbb
jns
gs
outsl
push
imul
sub
xchg
xorl
ficompl
sar
or
clc
mov
xchg
test
roll
sbb
shl
and
adc
ret
outsl
adc
and
inc
lock
sub
adc
inc
cmp
sub
mov
pop
sar
stc
rol
clc
inc
xor
sbb
pop
sub
shrb
loopne
cmp
push
repnz
lods
and
sub
mov
inc
jge
push
popa
bound
sbb
and
sbb
nop
arpl
popa
mov
push
inc
lock
or
dec
add
mov
push
nop
sarl
jecxz
lcall
xor
push
inc
cmpl
lock
fadd
inc
sbb
nop
mov
es
and
sub
push
pop
inc
out
add
lods
pop
sbb
mov
cmpsl
sbb
inc
add
add
jb
xchg
enter
je
leave
xor
add
fbstp
shlb
jo
xor
imul
add
xlat
mov
dec
bsf
xor
and
sbb
mov
and
pop
mov
inc
adcl
jl
or
inc
adcb
pusha
mov
mov
mov
inc
lahf
imul
and
imul
test
dec
sbb
adc
add
ror
clc
pushf
test
pusha
sub
and
cmp
add
and
test
cmc
inc
fcoms
push
sub
pop
inc
sbb
push
and
and
es
cs
add
inc
sbb
mov
lods
adc
adc
jp
or
rclb
adc
shrb
inc
push
adc
lret
push
pushl
das
pop
stc
adc
dec
in
mov
pusha
push
pusha
out
jne
pusha
cs
and
push
and
cmp
setbe
push
lods
jno
adc
cmp
cltd
fiaddl
test
xchg
shlb
sarl
and
cmp
adc
and
insl
xchg
cld
inc
popa
pop
add
sbb
mov
cmp
dec
adc
notl
push
lret
adc
aas
mov
mov
lretw
popf
xchg
xlat
inc
out
mov
or
mov
add
leave
inc
lods
push
in
add
mov
mov
lret
clc
cmp
int
ret
lods
and
jl
cmpb
jno
sbb
sbb
enter
movsb
popa
xor
lods
xchg
xchg
mov
das
adc
adc
inc
sbb
ljmp
pusha
mov
leave
out
mov
outsl
xchg
enter
js
cltd
push
mov
xor
daa
aad
or
jae
dec
mov
mov
bound
stc
jb
mov
and
ds
ds
adc
std
pop
jecxz
mov
push
sub
inc
lods
xor
lea
loop
adc
lea
shll
mov
movsl
sbb
pop
add
lahf
push
adc
lahf
xchg
fs
jmp
push
lods
repnz
outsl
push
leave
shrb
lahf
jnp,pt
xlat
pop
sub
adc
cs
mov
add
add
adc
push
xchg
mov
subl
mov
pop
clc
sbb
sbb
pusha
imul
cltd
or
ret
add
std
aad
imul
cmc
imul
stos
sti
lahf
xor
das
or
pop
cmp
cltd
incl
push
int
jp
add
cmp
add
bound
adc
adc
adc
adc
inc
adc
dec
daa
adc
adc
inc
adc
lcall
fsts
aam
adc
ret
add
js
pop
and
inc
aaa
adc
sbb
adc
pop
inc
adc
sub
daa
add
repnz
stc
adc
adc
adc
pop
dec
adc
pop
cmc
adc
adc
adc
inc
adc
adc
adc
adc
inc
adc
es
adc
adc
inc
adc
dec
daa
adc
adc
cmp
adc
adc
adc
inc
adc
jbe
adc
adc
pop
fstl
mov
adc
sub
pop
imul
dec
pop
lods
loopne
adc
pop
adc
test
adc
out
adc
and
add
pushf
mov
clc
pushf
test
push
push
push
inc
stos
adc
push
jle
data16
xchg
and
dec
jb
mov
jne
jb
push
popa
insb
jne
aaa
adc
inc
and
adc
addr16
icebp
and
sub
aaa
shrb
dec
sbb
sub
clc
clc
clc
ror
cmp
jno
sbb
cmp
add
aas
jo
sbb
movsl
bt
sub
cmp
push
sbb
sbb
mov
test
sar
mov
imul
push
adc
and
mov
push
inc
sar
aas
mov
xor
bsr
and
inc
adc
fdiv
fmuls
pop
adc
mov
test
fcoml
xchg
stos
push
jge
or
dec
pusha
add
mov
lods
cmp
mov
loopne
add
test
popa
js
adc
fcmovbe
int
add
sbb
xchg
inc
icebp
sub
int
dec
cmp
jp
ret
push
aam
negl
or
mov
dec
sbb
and
pop
jns
adc
pop
mov
inc
insl
int
lahf
push
dec
mov
sahf
fdivrl
mov
cmp
adc
adc
adc
inc
in
or
inc
xlat
adc
adc
fcoml
or
pop
sbb
arpl
fs
addr16
xor
and
das
push
inc
and
and
js
adc
inc
sbb
inc
add
sub
cmp
dec
adc
aad
std
add
shlb
fs
pop
pop
adc
bound
fs
test
jae
andl
inc
pusha
and
inc
jne
insb
pop
in
adc
sub
cmpb
movzwl
rol
sub
mov
imul
mov
add
mov
pop
sbb
jne
setns
push
or
aad
adc
and
adc
jecxz
and
adc
jne
adc
stc
pusha
pop
pushf
jo
pop
mov
idivb
push
inc
and
mov
jbe
pushf
sub
or
jns
adc
addr16
adc
sub
push
xor
xor
jns
and
incl
sub
out
add
test
push
and
and
inc
pop
dec
xchg
or
fbstp
adc
push
or
mov
xor
aad
mov
test
popa
ds
aad
cmp
int
mov
andl
imul
add
and
sbb
xor
add
sbbl
je
cli
fdivs
clc
aas
in
fadd
mov
ficoms
test
js
ljmp
pop
lret
push
andl
mov
bound
pop
cmp
aaa
ja
cmp
inc
call
and
fisttpl
lcall
lds
outsb
fisubs
out
filds
enter
gs
repnz
and
cmp
jne
inc
mov
movsl
xlat
push
fwait
adc
adc
push
je
jo
gs
iret
and
inc
adc
xchg
repz
push
and
xor
inc
and
add
and
add
xor
popa
jae
scas
inc
add
sbb
lret
jmp
fwait
test
jns
push
push
adc
xor
push
sbb
cltd
clc
cmp
inc
push
outsb
push
mov
inc
sti
cmp
xor
andl
loopne
fcomi
add
loopne
nop
lods
out
and
dec
pop
fisttps
aas
add
sahf
push
sub
adc
adc
push
outsl
test
xchg
inc
test
xor
mov
sbb
fwait
xlat
js
stc
pop
je
mov
cmp
shl
push
or
lock
bound
outsl
push
in
adc
gs
mov
dec
jp
negl
enter
xchg
aam
fwait
sbb
cs
adcl
jmp
fsubrl
xor
push
xchg
fs
sub
inc
xchg
mov
mov
clc
je
or
xlat
cmpsl
and
ds
dec
sbb
push
pop
stos
es
mov
pop
inc
mov
push
xlat
mov
xor
inc
mov
gs
call
into
stos
jle
and
sub
xor
inc
xor
pop
add
stc
loopne
push
push
rolb
xlat
mov
icebp
fnstenv
sbb
jns
bound
sarl
ret
mov
inc
sbb
jno
push
dec
out
adc
adc
addr16
in
jne
lret
adc
enter
mov
in
and
dec
gs
adc
pusha
push
test
testb
test
popa
fcomps
pop
mov
sub
dec
fwait
inc
cmpsl
adc
dec
xchg
adc
jge
adc
test
pushf
clc
inc
push
inc
jp
cmp
inc
rcll
mov
shlb
ret
add
dec
push
arpl
mov
sbb
xchg
xchg
add
jmp
stos
call
push
fmuls
cmp
mov
push
dec
mov
pop
push
dec
movsl
into
out
and
xor
inc
rcll
push
mov
inc
inc
add
add
add
sar
inc
shl
neg
mov
sbb
setle
mov
pusha
repnz
pushf
and
inc
adc
adc
adc
add
setae
dec
inc
and
and
adc
adc
inc
repnz
and
int3
les
and
xlat
les
push
outsl
inc
loopne
jg
sub
mov
cmp
pusha
and
and
push
and
dec
adc
sub
or
out
mov
push
addb
pop
inc
sub
cmp
adc
inc
cmc
pusha
insl
adc
pop
inc
adc
jne
pushf
push
jl
adc
ret
and
ss
push
and
decb
jae
add
add
jb
gs
movsb
ljmp
mov
cmpsb
int
mov
imul
mov
mov
test
fiaddl
adc
dec
push
sarb
push
lds
popa
xchg
fisttps
ja
inc
mov
iret
aam
cltd
shll
add
data16
adc
adc
lock
dec
adc
inc
lret
adc
pushf
and
cmp
adc
loopne
rolb
push
sub
inc
daa
adc
lock
add
mov
push
adc
jecxz
mov
pop
sbb
testl
adc
movsb
sbb
jbe
pop
sti
push
gs
adc
xchg
xchg
adc
adc
adc
testl
cmp
push
adc
scas
jnp
adc
ret
mov
rol
xor
add
mov
adc
push
inc
xor
cwtl
adc
and
xor
adc
je
stc
add
pusha
pushf
test
data16
adc
and
or
cmp
adc
cmp
adc
adc
cmp
adc
jb
add
dec
pop
sub
adc
and
adc
stos
cld
dec
fisttpl
sbb
scas
sbb
test
or
and
daa
push
cwtl
aas
add
rol
pushf
test
mov
pop
add
stc
mov
das
sub
add
push
loope
loopne
or
jg
adc
xchg
loop
shll
scas
icebp
or
push
lret
push
jb
bnd
or
jb
push
mov
stos
jle
lea
and
test
jae
jnp
mov
rclb
out
icebp
mov
push
push
dec
movsb
jmp
add
js
cmc
scas
sbb
push
or
lahf
inc
adc
scas
mov
loope
arpl
cmp
jl
shlb
loope
jmp
adc
sub
xchg
testb
inc
mov
ja
mov
xchg
mov
mov
ja
scas
movb
test
in
and
imul
xor
mov
lods
mov
cwtl
pop
sub
js
dec
mov
in
cmp
mov
and
fistpll
ror
mov
xchg
mov
push
and
lock
in
jb
push
dec
repz
andl
ret
sub
inc
lods
mov
adc
inc
add
jmp
loopne
imul
pop
loopne
and
icebp
nop
adc
add
cmp
pop
cmpsb
xor
adcb
cmp
sbb
mov
xor
mov
pushl
xor
pusha
and
mov
mov
popf
inc
xlat
daa
int3
sub
iret
dec
lock
je
insl
not
adc
jne
mov
sbb
adc
je
and
and
push
adc
filds
rorb
mov
and
cltd
rclb
imul
push
sub
inc
mov
jns
add
lock
mov
aas
sub
add
das
push
and
shld
and
inc
cld
adc
dec
outsb
and
bound
push
push
pushf
push
and
inc
iret
loop
xor
dec
popf
xor
and
xchg
push
adc
xor
push
add
push
push
insb
xor
pop
push
icebp
push
jno
cltd
cli
lcall
mov
mov
jp
push
fisubl
xor
and
xchg
add
ret
dec
jg
shl
mov
adc
mov
push
les
and
xor
mov
cwtl
bound
xchg
and
mov
cli
fisubrs
fwait
repz
cmpsl
push
push
mov
jns
add
fnstsw
aam
loope
stos
xchg
push
xchg
or
inc
add
bsf
push
mov
lock
loop
iret
mov
call
out
ret
cwtl
push
mov
push
jmp
cmp
sub
dec
dec
mov
ret
dec
fnstenv
cltd
sbb
repnz
jns
or
int
call
imul
lods
es
fbstp
mov
test
push
mov
js
or
ja
rolb
mov
and
psraw
lahf
mov
push
push
cmp
sub
cwtl
sub
cwtl
sbb
fstpl
cmc
pusha
add
xor
loope,pt
pop
sub
or
aaa
ret
leave
or
in
mov
call
xchg
sbb
test
cmpsb
ret
movsb
enter
and
pop
cmp
sub
stos
in
sar
jle
push
out
ret
inc
mov
jmp
mov
insb
adc
inc
das
add
lahf
popf
jp
stos
in
cwtl
mov
jno
ja
nop
rclb
mov
dec
mov
jnp
jb
jg
lods
filds
fwait
pop
loopne
icebp
inc
fs
cs
cltd
lahf
in
push
scas
int3
popf
cli
adc
mov
jo
outsb
or
dec
cmp
dec
outsl
and
dec
and
daa
adc
jg
pusha
add
and
adc
dec
dec
adc
mov
pop
mov
mov
push
daa
sbb
add
pushf
mov
clc
rol
stc
push
pop
push
test
cmp
add
inc
inc
mov
not
cmp
neg
cmp
jne
adc
and
mulb
push
es
add
inc
fs
popa
jae
and
pop
test
push
out
and
adc
test
adc
dec
inc
push
adc
and
adc
pop
adc
xor
addl
data16
adc
arpl
icebp
bound
in
inc
sbb
mov
out
out
and
into
and
sar
and
cmp
cmp
shlb
and
das
adc
push
ljmp
push
cs
imul
lea
jl
adc
pop
pop
jbe
adc
sub
and
adc
inc
push
bound
and
sub
inc
inc
adc
and
and
lods
dec
adc
repnz
inc
adc
push
and
lcall
cmp
add
push
add
stos
push
adc
scas
data16
fs
repz
adc
outsb
adc
dec
and
dec
adc
mov
push
inc
inc
ljmp
or
leave
dec
cmpsb
xchg
adc
and
cmp
repnz
adc
ret
push
and
add
and
repnz
pusha
inc
jl
js
push
and
inc
and
inc
adc
fcomps
push
inc
cmp
push
imul
xchg
inc
adc
iret
dec
pusha
mov
mov
test
sbb
movzbl
pushf
mov
inc
sahf
sbb
popa
aad
clc
sbb
pop
das
dec
pop
inc
and
add
cld
pop
inc
fs
jne
jp
sbb
push
test
dec
cld
fisubl
shlb
ja
ds
cs
dec
aad
loop
add
mov
das
xor
or
scas
jle
shlb
push
mov
pop
aas
mov
adc
js
aaa
inc
dec
ljmp
pop
xor
aaa
mov
pop
add
adc
mov
movsb
push
outsb
push
mov
es
inc
cmp
outsl
pop
xchg
rorl
fcmove
jge
out
loop
scas
lea
into
sbb
fwait
jbe
xor
and
inc
mov
test
jp
popa
test
and
stc
xchg
xor
push
jg
inc
add
outsl
je
fsubs
push
jecxz
icebp
rclb
aad
jne
xchg
and
into
inc
test
lea
out
xchg
push
dec
add
je
outsb
movsb
inc
cmp
jo
or
hlt
cmpsb
mov
inc
sbbb
xor
sbb
jmp
mov
roll
jge
fistpll
std
insl
push
sarb
adc
cmpsl
adc
dec
std
jle
pop
xlat
adc
and
es
mov
and
adc
sub
and
sub
adc
mov
mov
lea
cmp
xchg
cmp
jl
insb
pop
sbb
in
jbe
mov
pop
in
orb
daa
jo
inc
bound
in
add
mov
out
lret
mov
in
push
cmp
adc
arpl
rcr
mov
mov
sbb
stos
shr
and
pop
pop
cld
aam
mov
das
sbb
lea
xlat
push
jae
jbe
movsl
cltd
aaa
rcl
mov
imul
dec
mov
aad
pop
add
cmp
push
sub
dec
lock
mov
movsb
jg
out
outsb
adc
daa
mov
push
lahf
sub
popl
scas
rcrb
rcrl
push
add
and
xor
push
and
adc
daa
pop
ds
jmp
and
popf
lret
mov
adc
enter
loopne
aam
push
inc
mov
daa
adc
dec
sub
adc
insl
inc
xor
dec
imul
jns
movsb
sbb
sbb
add
and
sbb
mov
mov
mov
pop
dec
adc
and
adc
int
inc
inc
push
loopew
and
and
mov
bts
dec
sbb
loope
cli
mov
push
adc
and
fldt
mov
data16
js
sbb
mov
ret
orb
in
ds
cld
or
js
ret
shll
cmp
rcll
add
sbb
push
imul
sbb
pop
adc
inc
mov
mov
popf
sahf
data16
and
pusha
cmc
cmp
jns
and
adc
adc
xchg
enter
push
addl
dec
mov
jne
pusha
and
mov
adc
adc
inc
push
pop
inc
adc
cmp
enter
cld
pushf
xchg
adc
xor
xor
adc
mov
inc
imul
adc
push
or
sbb
adc
dec
inc
push
adc
loope
add
mov
sbb
cmpsb
pop
outsl
push
and
rolb
and
inc
adc
adc
inc
int
nop
xor
lods
and
daa
pop
sub
int
and
adc
xchg
and
bound
arpl
jl
add
stos
stos
jmp
xchg
xor
rep
jl
jns
dec
cmp
xchg
cli
mov
push
inc
cmp
pusha
mov
sti
leave
adc
clc
imul
xchg
dec
push
inc
pop
adc
pop
hlt
cmp
mov
adc
and
mov
and
adc
xor
lds
in
pop
into
adc
xchg
fs
lret
adc
add
push
adc
inc
adc
inc
cmp
and
and
pop
adc
imul
outsb
and
pop
add
jae
subl
mov
mov
dec
das
inc
and
incl
and
cmp
sub
add
adc
mov
imul
jmp
push
xchg
sahf
mov
inc
mov
dec
cli
or
gs
mov
cmp
push
add
mov
outsb
mov
sub
adc
sub
dec
sub
pop
rcr
bound
mov
adc
xchg
aad
pop
call
mov
or
ljmp
adc
loop
pusha
or
add
and
pop
ret
and
mov
adc
das
clc
sahf
mov
lahf
push
and
and
aaa
and
xorb
jae
push
push
stos
adc
popa
push
adc
pusha
or
paddusb
inc
roll
or
jp
adc
daa
xchg
sbb
shrb
pop
out
mov
and
xchg
das
jl
popa
aaa
sub
lcall
cmpsl
or
jno
std
jl
inc
sbb
fcompl
sbb
xchg
adc
aam
stos
sbbb
cli
jge
repnz
orl
or
and
push
iret
mov
or
cmp
xor
imul
mov
add
mov
je
xor
std
sbb
movsb
mov
aaa
mov
lea
pop
jb
lcall
inc
mov
imul
iret
pop
push
mov
push
cmp
stos
dec
adc
xor
adc
sti
or
rcll
inc
adc
in
cmc
pushf
add
push
test
pop
inc
or
enter
push
and
inc
adc
fstpl
sbb
mov
inc
adcl
add
adc
adc
and
and
xorl
and
dec
jns
adc
dec
dec
ret
jbe
popf
popa
pop
leave
adc
gs
inc
and
push
mov
and
add
pop
mov
jo
jg
rcll
add
mov
pop
cltd
jmp
and
scas
popa
jge
jmp
xchg
testb
dec
push
inc
int
adc
mov
mov
int3
ss
pop
scas
mov
insb
adc
xchg
shrb
ficompl
in
pop
jmp
aas
lret
mov
lea
sub
cmpsl
add
mov
inc
adc
cmp
lds
xor
into
push
dec
fidivrl
lret
cmpsb
mov
xor
jns
mov
pop
inc
mov
aaa
push
adc
xchg
sbb
lcall
clc
add
sti
clc
pop
mov
add
btr
mov
adc
jns
ficoml
ret
and
adc
insl
fists
jnp
cmpsb
sbb
jns
outsl
outsb
and
inc
daa
xor
sahf
popa
test
push
and
and
dec
adc
adc
push
imul
data16
add
push
clc
xor
pop
push
push
inc
and
dec
push
sub
adc
mov
cmp
and
adc
ror
add
pop
adc
adc
rclw
nop
xor
jnp
adc
dec
cmp
adc
sub
cmp
pushf
not
test
add
push
cmc
stc
rol
cmc
add
inc
push
adc
xor
cmovl
jle
adc
cmp
jp
jo
sbb
adc
inc
negl
pop
dec
and
insb
popa
pop
add
imul
hlt
adc
popf
adc
mov
adc
test
inc
adcl
and
arpl
dec
jb
call
inc
add
push
mov
add
bt
add
pop
cltd
and
mov
adc
sbbb
adc
push
insb
jb
pushf
mov
outsb
ficoml
lret
in
pusha
or
push
dec
dec
dec
dec
lret
mov
jns
mov
add
fdivl
push
cli
adc
jecxz
arpl
dec
add
adc
adc
lret
cmpsb
mov
mov
push
fisubl
fcompl
fbld
jae
rcll
sbb
pop
das
ficoms
out
mov
mov
sub
stos
sti
ret
enter
mov
sbb
mov
aad
xor
out
repz
test
adc
xchg
lcall
insl
and
sbb
aam
fcoms
daa
pusha
or
pop
inc
or
cmp
push
mov
int3
pop
inc
outsb
cli
mov
stos
data16
fxch
jnp
xorl
xchg
rcrb
jb
push
adc
dec
push
sarl
push
xchg
xlat
into
in
outsb
cli
mov
dec
mov
loopne
push
rorb
mov
inc
add
stos
divb
mov
rorb
arpl
je
imul
rcll
jne
cmp
sahf
lock
stc
mov
andl
or
in
popf
into
or
add
xchg
push
pop
push
sub
xchg
sbb
fwait
mov
mov
push
mov
adc
cmp
lret
shlb
mov
lea
jae
push
mov
lret
je
inc
add
je
out
cs
cwtl
mov
fidivrs
test
add
lret
jae
cld
cld
std
or
cmpsl
aas
ljmp
pushl
test
inc
shrb
xor
data16
inc
or
cltd
cmp
mov
rcrb
cltd
or
pop
outsl
jae
movsl
fsubrs
xchg
or
xlat
mov
pop
or
xchg
mov
mov
inc
add
cs
rolb
mov
fs
push
cmp
aaa
loop
scas
incb
cli
fdiv
mov
push
stc
mov
addr16
sahf
dec
enter
fwait
mov
xchg
std
shrb
add
mov
ret
sub
pop
call
cwtl
bound
push
jo
push
push
imul
or
jmp
mov
cld
sub
dec
imul
xor
std
mov
cmp
mov
adc
xchg
in
jmp
and
add
add
popa
cmp
pop
mov
jne
test
ror
jb
push
out
jmp
fdivs
outsb
xor
shll
lcall
aad
adc
inc
mov
test
and
jne
insb
and
xchg
dec
cwtl
adc
shlb
jne
and
sub
rolb
shr
push
aad
jle
jbe
adc
mov
push
adc
loopne
mov
xchg
les
aam
cmp
test
mov
scas
push
aas
in
hlt
jl
dec
jmp
incb
les
bound
inc
sub
xor
mov
outsl
cmp
stc
jmp
inc
push
in
push
shl
lods
dec
sbb
inc
sbb
add
mov
aad
add
cmpsl
rolb
sbb
xchg
or
lret
movsl
and
cli
xchg
jl
mov
pop
outsb
and
out
outsl
jge
enter
push
push
aaa
xchg
stc
mov
and
mov
lock
repz
cmp
mov
rcrl
inc
inc
pop
clc
dec
and
jge
jo
mov
lret
add
dec
jbe
dec
mov
dec
fnstcw
in
mov
mov
adc
dec
aaa
jne
inc
addl
mov
push
lds
pop
jl
fs
inc
jg
adc
mov
mov
je
push
in
lret
pushf
push
push
pop
inc
lret
xor
lret
cmpsl
rolb
stos
fdiv
aas
shrb
mov
jecxz
xor
aad
mov
or
mov
lcall
mov
icebp
add
mov
jno
inc
push
je
cmp
cmc
popf
pop
inc
mov
in
incl
adc
test
inc
mov
and
sub
jns
adc
pop
lahf
lea
cwtl
movsbl
mov
pop
and
adc
push
movsb
icebp
adc
inc
imul
mov
adc
jne
xor
inc
push
imul
lahf
add
lea
bsf
btr
mov
cmp
and
jno
and
add
fisttpl
jbe
lret
xchg
push
fiadds
sub
xor
aaa
sub
mov
mov
mov
ja
shlb
mov
jbe
add
xchg
cs
cwtl
imul
dec
sub
movsb
cmc
dec
inc
lods
cs
mull
or
icebp
mov
mov
js
push
call
lds
ljmp
cli
adc
ret
pop
in
add
lds
mov
lea
adc
fistpll
aaa
das
or
pop
or
inc
lret
lcall
jmp
and
je
mov
ja
js
or
fistpll
adc
andl
dec
loop
loopne
and
call
lret
inc
cmpsb
jmp
add
mov
sbb
push
fisttps
pop
pop
add
push
sbb
dec
push
cmp
imul
test
addl
repz
push
sub
imul
adc
jmp
xchg
jl
xchg
out
sub
lcall
xchg
jne
inc
scas
add
jp
fwait
and
ds
mov
out
das
adc
jne
fmuls
arpl
pop
mov
sbb
test
xor
fwait
sbb
fdivp
stc
xor
cmp
sbb
inc
mov
daa
and
inc
inc
loope
mov
mov
adc
push
aam
loope
jge
pop
and
inc
xor
fcom
enter
or
inc
and
pop
jnp
mov
insl
aaa
xor
pop
shrl
les
roll
mov
push
mov
ja
jbe
scas
pop
outsl
popa
aam
inc
mov
mov
sbb
ja
call
outsl
scas
call
ja
lods
lods
icebp
xor
in
icebp
fwait
inc
pop
jbe
cmp
hlt
xor
and
xchg
rcl
pop
jne
jne
xchg
aas
enter
sbb
add
nop
jne
dec
cwtl
hlt
inc
stos
out
int
mov
xchg
adc
std
test
jbe
mov
daa
jecxz
leave
pusha
mov
icebp
cmpsl
cmpl
int
and
pop
inc
and
repnz
loopne
xor
outsl
xor
pushf
mov
lahf
pushf
loope
into
inc
test
xchg
lahf
xchg
lret
jbe
jbe
pop
lahf
inc
mov
hlt
and
adc
xor
add
pushf
stc
cmp
test
and
sbb
fisttps
sub
fs
push
and
jno
push
imul
imul
add
pop
push
fdivs
jmp
mov
mov
inc
adc
mov
cwtl
insb
lahf
test
adc
and
inc
pusha
jl
fs
pusha
lea
mov
and
inc
scas
inc
mov
sub
loopne
adc
fsts
mov
imul
je
das
xor
add
int
fucomp
repnz
cltd
aam
pushl
push
xchg
inc
mov
lds
loopne
push
cld
mov
or
mov
sbb
adc
sub
cmp
iret
lock
mov
pop
xor
jnp
mov
or
adc
mov
imul
inc
cmpsb
dec
mov
xlat
psrad
add
in
push
mov
out
sbb
push
or
pop
add
arpl
std
mov
mov
push
aaa
or
outsl
xchg
mov
push
repnz
sahf
pushl
mov
mov
sub
outsl
and
outsb
adc
imul
adc
decl
out
fldcw
clc
xor
and
es
sub
stc
inc
jp
hlt
mov
cmc
cmp
test
pusha
and
es
call
sub
adc
push
popa
lahf
jo
adc
and
adc
pop
sbb
icebp
add
add
and
cmp
adc
push
iret
data16
cmp
push
inc
or
xchg
repz
and
pop
adc
dec
adc
xor
out
and
mov
jae
and
shrl
sub
sub
xor
inc
xor
dec
mov
ljmp
sbb
pop
sbb
mov
insb
push
rcl
xchg
cmc
xchg
shrl
sbb
out
xor
pop
adc
and
inc
push
out
xchg
adc
int3
sub
mov
inc
out
rcr
mov
mov
adc
call
mov
mov
mov
test
mov
fcoml
jns
cmc
jb
cmp
cmc
dec
and
repnz
inc
mov
icebp
push
jmp
inc
adc
push
dec
lds
adc
dec
inc
adc
sbb
push
je
adc
les
jns
adc
add
ret
xchg
daa
jns
stos
push
mov
adc
popa
aaa
push
test
cmp
dec
mov
clc
test
clc
and
adc
test
pusha
clc
and
adc
mov
fs
cmp
adc
cmp
lret
inc
mov
shrl
mov
outsb
push
and
inc
xor
sbb
mov
push
add
jl
inc
or
cwtl
lock
es
xor
test
shl
std
mov
fmul
push
aaa
or
in
int
iret
and
jnp
addr16
push
push
sbb
shr
sbb
or
sub
and
cmpsl
cmp
std
mov
jmp
push
aaa
or
bound
das
fistps
bound
and
stos
push
push
int
or
into
cltd
notl
popf
lock
pop
push
pop
sbb
lock
adc
mov
adc
fidivrl
popf
add
add
je
cltd
dec
mov
aad
inc
aaa
adc
and
ja
adc
into
dec
and
adc
xlat
inc
push
pop
stc
movzwl
pushf
bswap
pop
movzbl
lea
je
int
inc
adc
neg
inc
mov
mov
test
and
sub
or
push
inc
add
pop
mov
jne
ds
popa
lds
lea
test
add
jbe
lret
sub
or
ja
sahf
les
aas
int
movsb
cmpb
sub
push
cmpsl
loopne
int3
daa
sbb
jmp
xchg
and
push
cmpl
mov
aam
cmpsb
sti
ret
xlat
inc
fs
fdivrl
lahf
jns
pop
sub
bound
ret
ja
ss
pop
jo
ss
mov
xchg
sub
pop
fld
out
arpl
daa
dec
imulb
inc
or
inc
outsb
fisubs
push
jb
or
and
jne
sti
pop
adc
lret
ds
out
adc
mov
inc
mov
xor
fnstenv
dec
push
js
inc
dec
cltd
jno
aaa
mov
mov
outsl
stos
call
adc
mov
mov
xchg
sbb
scas
out
imul
mov
or
mov
and
outsb
xor
mov
sub
inc
dec
inc
push
and
inc
adc
clc
dec
lds
shrl
imul
jns
mov
push
insb
adc
lahf
xor
adcb
adc
mov
and
adc
sub
inc
adc
icebp
push
fcomip
cmpsl
lds
jecxz
hlt
dec
test
xor
mov
movsl
and
sub
jb
fdivrl
std
out
adc
das
popf
icebp
inc
jecxz
push
add
inc
mov
es
cmpsl
outsb
sub
push
ljmp
insb
daa
mov
rcl
inc
hlt
adcb
add
xor
bound
xor
pop
cltd
dec
in
inc
cmpsb
add
repz
insb
or
cmp
lea
aam
inc
test
test
jp
adc
aad
mov
popa
in
xor
movl
rcr
lahf
dec
mov
ret
adc
popa
cmp
fimuls
inc
cmpsb
adc
je
inc
cmpsb
sbb
and
aas
iret
jae
lret
add
ja
std
pop
mov
adcb
into
jge
je
aas
arpl
pop
sbb
movsb
cmc
test
pop
fcomps
push
or
pop
cmp
push
pop
jle
cmp
test
outsb
adc
pusha
in
inc
pop
and
or
inc
mov
scas
adc
jb
adc
push
cld
scas
insb
mov
push
filds
test
mov
jl
dec
outsb
cmp
mov
aam
popa
imul
das
je
mov
inc
aaa
xor
mov
into
xorb
hlt
cmpb
inc
sbb
xor
in
adc
sub
xlat
mov
stos
aaa
in
enter
jl
xor
xchg
fs
stc
stos
popf
int3
sahf
test
icebp
add
dec
pop
mov
xor
dec
mov
jno
pop
incl
inc
ljmp
mov
dec
mov
inc
push
xchg
cmc
push
fmull
xor
mov
mov
data16
das
js
push
sbb
scas
cmp
rcll
mov
dec
or
xor
jg
sbb
dec
mov
bound
sub
push
fcomps
dec
sub
adc
icebp
add
hlt
jecxz
sub
adc
fs
xor
test
pusha
es
adc
ja
inc
mov
lea
jmp
jl
push
ficompl
mov
les
add
lret
cltd
or
inc
fdivl
mov
jno
jne
icebp
inc
and
mov
xlat
cltd
or
jecxz
scas
les
mov
mov
pop
mov
mov
cli
fstps
xor
push
xor
jo
outsb
adc
inc
lock
mov
rolb
sbb
add
test
cmp
mov
cmp
mov
not
or
shll
xchg
jne
test
test
cmp
xor
inc
xchg
push
in
repnz
jae
push
and
inc
adc
mov
dec
add
adc
fldenv
test
mov
pushf
mov
cmc
dec
or
mov
daa
push
jno
and
ret
or
sub
jle
adc
not
and
inc
adc
mov
mov
adc
imul
add
adc
jns
rcr
sub
jno
jae
xchg
ficompl
dec
sbb
enter
push
dec
test
jmp
ret
fsts
pop
inc
stos
shl
iret
fcoml
adc
js
dec
sar
jmp
cltd
bound
aaa
lahf
ljmp
call
lods
in
rorl
pop
lahf
cltd
lret
or
jecxz
push
sbb
cmp
mov
ss
sub
mov
repz
sub
lds
pop
push
sahf
out
sub
xchg
mov
and
inc
add
jb
dec
fwait
inc
mov
xor
sub
negb
cmp
mov
lcall
dec
shl
pop
adc
push
or
shlb
lahf
ss
sbb
out
test
sarb
jecxz
sub
push
decl
and
push
push
jbe
or
movsl
inc
xor
add
and
or
jne
jno
jmp
cwtl
mov
mov
jo
into
jp
inc
addr16
add
test
movsb
mov
sahf
out
dec
inc
add
jno
cmp
cmpsb
push
inc
adc
or
push
and
mov
mov
lcall
stc
xor
ror
lret
cmpsb
outsb
mov
jno
xchg
ja
into
jnp
pop
xor
jns
scas
mov
mov
xorb
lret
or
adc
jnp
adc
shrb
adc
sti
rorb
adc
ret
push
pop
mov
into
imul
ja
inc
movsl
into
pop
and
adc
dec
and
or
jp
inc
sbb
mov
mov
cmp
mov
xor
xchg
icebp
setns
insb
mov
or
scas
mov
mov
in
test
cmpsb
jecxz
pop
out
xchg
pop
mov
ret
sbb
add
divb
adc
or
dec
xchg
adc
jle
mov
pop
mov
roll
mov
decl
gs
cmp
repz
stc
mov
mov
sbb
hlt
jle
adc
jmp
jns
sub
xor
cmpsl
lret
inc
cmp
adc
ret
mov
ficoml
arpl
stos
in
mov
sub
outsl
fwait
add
push
data16
sub
pop
or
sub
sbb
dec
mov
fdivs
insb
rcrl
jb
add
adc
loop
inc
pusha
adc
inc
jmp
adc
outsb
add
lods
and
adc
pushf
push
outsl
scas
adc
xchg
pop
adc
js
adc
and
jnp
inc
and
and
inc
adc
data16
adc
cmp
and
sub
pop
jb
gs
cmp
imul
jns
pusha
das
jbe
push
or
lret
lea
xlat
in
dec
ret
ds
gs
icebp
xchg
in
lret
lods
or
xchg
mov
xchg
stos
in
out
scas
jmp
cmp
cmc
test
mov
stc
sbb
adc
cmc
out
pop
outsb
aad
and
and
add
int3
inc
mov
call
push
push
pop
pop
jge
adc
loope
xchg
loope
sbb
cmc
push
add
pushf
push
fiaddl
and
and
leave
xchg
cmp
popa
mov
lods
pop
adc
mov
in
and
add
push
mov
jg
mov
jne
bound
ja
cmp
ds
test
mov
out
add
clc
movl
sub
push
dec
test
sbb
dec
dec
test
loop
fcompl
add
inc
inc
movsl
ficomps
adc
ja
idivl
and
adc
or
sub
scas
imulb
xor
cmc
jmp
cmp
cltd
mov
popf
decl
scas
int3
jns
and
xchg
xor
in
arpl
dec
aam
fldt
movsb
pop
dec
xlat
mov
dec
arpl
push
inc
test
dec
cmp
shlb
insb
push
in
mov
push
cmpsl
dec
mov
out
ljmp
and
int3
xor
test
sbb
mov
sbb
pop
inc
aam
jns
add
sub
lahf
xchg
push
sub
cmc
xchg
pop
inc
mov
stc
test
push
icebp
sub
mov
sbb
movsl
shrl
jb
and
push
jecxz
adc
cmpsb
test
dec
adc
sbb
loopne
or
push
add
or
addr16
dec
mov
jl
dec
xchg
stos
test
xor
out
cmp
mov
sub
cmc
insb
add
jo
outsb
aad
pop
popa
mov
int
and
into
jne
dec
sbb
sub
sti
inc
stc
inc
das
addr16
dec
push
icebp
inc
cmp
mov
out
mov
stc
mov
idivb
or
fstl
aas
sbb
mov
adc
pop
xor
cld
pop
out
mov
dec
and
or
lea
fimull
fsubrs
xchg
xor
aad
rorl
pop
mov
inc
and
and
idivl
adc
adc
sub
sub
adc
adc
and
add
sbb
loopw
push
jbe
jnp
fwait
cli
xchg
iret
lods
jae
inc
cmp
mov
stos
ret
shlb
mov
scas
sub
popf
test
add
in
dec
out
push
aaa
add
test
cmp
lods
scas
pop
adc
repnz
hlt
scas
and
into
gs
gs
jecxz
imul
cltd
shll
sbb
scas
aas
jo
or
mov
push
aad
pop
pop
lret
hlt
sbb
test
and
mov
dec
bound
fwait
pop
fs
dec
or
aam
xchg
popf
outsl
cmp
inc
int
aas
cmp
mov
mov
jecxz
mov
mov
dec
pop
and
rorb
mov
adc
pop
xchg
add
jne
fs
lcall
ja
push
in
bound
pop
test
pop
adcl
pop
and
clc
mov
jne
and
xchg
shl
xchg
test
xlat
sbb
inc
dec
mov
xor
ret
in
lea
mov
mov
test
aam
das
adc
or
inc
movsl
rorl
in
faddl
pop
adc
divl
arpl
pop
or
lret
outsb
add
pop
inc
lock
ljmp
int3
sbb
add
fbstp
push
xor
adc
sbb
in
xor
sub
or
mov
sub
mov
scas
xchg
xchg
push
and
test
inc
imul
mov
dec
out
ja
stos
and
inc
cmp
movzbl
sbb
out
sub
add
push
add
cmp
scas
or
sub
out
add
fdivr
push
mov
pop
xor
mov
xor
mov
popa
fwait
out
adc
push
ds
jno
sbb
mov
cmpsb
leave
xchg
pop
add
push
sub
je
data16
push
add
pop
out
push
pop
loop
sub
scas
mov
daa
fsubrs
jo
and
xor
popa
inc
cld
ja
pop
or
arpl
sbb
pop
lods
adc
ret
arpl
cmp
inc
mov
int3
movsl
pop
add
push
lea
and
sub
jmp
jb
sub
fsubrl
cld
scas
mov
stos
testl
popa
popa
shrd
repnz
or
pop
pushf
pop
xchg
ret
fwait
stc
dec
jp
push
push
mov
lret
rorb
iret
push
mov
mov
out
mov
or
data16
add
lods
aaa
daa
add
pop
xchg
test
mov
daa
mov
inc
jo
unpcklps
push
adc
mov
sub
pop
add
addl
pop
jg
hlt
lods
stos
out
arpl
sahf
shlb
mov
ret
lret
add
gs
fdivrs
pop
cli
imul
notl
in
ret
xlat
decl
push
clc
mov
leave
mov
iret
cmp
loope
stos
mov
stc
xchg
pop
push
cmp
bound
mov
out
mov
iret
mov
popf
shr
inc
add
nop
std
or
add
mov
fs
cwtl
out
xchg
into
mov
xchg
cmp
popa
mov
cmp
es
inc
jns
hlt
gs
out
shlb
xor
movsb
mov
cmpb
mov
lods
enter
cld
movsl
jmp
aad
xchg
mov
pop
cmp
dec
in
push
pop
out
inc
pop
cmp
add
jo
lahf
aam
sub
imul
add
cmp
fsubl
hlt
dec
lock
insl
sub
lock
xchg
arpl
out
daa
lds
xchg
cmp
add
clc
jecxz
nop
lret
arpl
push
and
iret
lcall
mov
popa
in
dec
cmpsb
pop
mov
add
sub
ljmp
sahf
pushl
ror
in
push
or
pop
dec
lods
pop
push
inc
push
adc
xchg
loop
push
sahf
mov
push
rolb
xchg
insl
cltd
fidivrs
int
adc
adcb
add
xchg
jecxz
fsubs
and
repnz
and
jns
lods
rcll
inc
jle
push
cmp
and
jge
into
jo
xor
mov
push
mov
or
add
sub
sbb
mov
mov
addr16
jmp
mov
jmp
dec
push
xchg
lcall
inc
dec
push
pop
add
test
xchg
cmc
scas
mov
fisubrs
lret
mov
mov
sbb
orb
out
jmp
pushf
fists
pop
adc
inc
mov
push
and
push
inc
sub
outsl
lcall
jb
adc
sbb
jno
and
push
adc
adc
push
rcrl
jb
sbb
data16
mov
inc
adc
cmc
cmp
sub
cmp
dec
aas
adc
stos
inc
inc
lea
int3
cmp
pusha
imul
adc
xchg
and
imul
aad
and
and
and
and
rcrl
pushf
adc
stc
pusha
dec
push
adc
test
and
push
and
xor
sbb
rcr
rol
mulw
pop
jo
clc
and
adc
jne
rcl
xor
inc
bsr
bsf
and
pushf
jb
xchg
xor
fsubl
sbb
es
xlat
pop
add
sub
sub
mov
and
out
jb
pop
mov
or
call
movsb
loop
sahf
and
inc
jl
js
push
adc
mov
adc
addr16
inc
pusha
fiaddl
pop
jle
mov
jo
push
cmp
lods
ficoml
aam
adc
int3
aad
mov
mov
int3
dec
xchg
sbbl
push
aaa
imul
xchg
mov
int
mov
and
sbb
fwait
repz
mov
sbb
mov
xchg
jl
mov
push
lret
pop
jmp
jge
popf
dec
ucomiss
cmc
scas
in
loop
sub
insb
dec
cmp
add
nop
mov
aam
mov
aam
inc
mov
mov
cwtl
dec
mov
fcomps
jb
or
imul
data16
mov
mov
and
push
stc
jge
jae
out
aas
jmp
jno
les
andb
mov
cmp
std
mov
mov
rcr
lret
mov
repnz
or
lret
push
sbb
cmc
adcl
ja
stos
ret
not
sbb
test
in
je
inc
outsb
xor
addr16
mov
add
push
gs
pushf
pusha
pusha
push
insb
ds
out
dec
lds
adc
xchg
and
test
adc
pop
adc
pop
sbb
adc
push
inc
and
mov
adc
test
xchg
jge
xchg
inc
add
push
or
shl
and
and
pop
mov
pushf
not
mov
cmc
pop
dec
and
adc
and
adc
adc
push
insb
loope
bound
aas
in
mov
loopne
push
jb
adc
pop
jne
adc
mov
aad
adc
das
push
imul
or
adc
and
and
push
pusha
push
and
and
shlb
cmp
adc
xor
inc
adc
pop
push
movzbl
and
sub
pushl
and
bswap
pop
negl
inc
cwtl
lea
lea
popa
adc
andl
jl
or
sub
adc
mov
adc
cmpsl
and
cmp
cld
lret
push
sbb
ficoms
inc
icebp
xchg
ret
test
dec
or
cmc
jge
push
jmp
andb
movsl
sbb
mov
les
rcll
mov
dec
movsb
jmp
dec
xchg
leave
xchg
mov
or
imul
add
daa
shl
inc
cli
fwait
pop
or
daa
mov
inc
adc
popf
ret
cs
sub
jb
mov
push
mov
ret
arpl
adc
daa
cmp
mov
ljmp
sahf
int
inc
mov
mov
into
imul
mov
jo
pop
rcr
mov
add
mov
imul
xor
push
xor
fwait
dec
xor
jnp
jb
dec
imul
adc
bound
sub
pop
xor
insl
or
mov
stc
stc
and
and
imul
and
inc
adc
popa
and
jge
test
cmp
inc
sbb
rolb
adc
insl
rcrb
cmp
ret
test
insb
jecxz
mov
je
add
fistps
hlt
sbb
cmp
add
cmp
cmp
cmpsl
dec
adc
cli
inc
ss
dec
dec
adc
and
and
dec
adc
cs
out
mov
lcall
or
cmp
test
sub
fstps
cmp
push
repnz
call
sbbb
sub
sub
cmp
stc
in
test
js
out
push
mov
lret
imul
xor
ja
test
add
lods
or
popf
jno
add
mov
jecxz
out
push
test
lret
lret
push
sbb
mov
xor
lods
movl
inc
xlat
sub
in
mov
popl
popa
add
mov
or
adc
and
sub
jno
push
push
dec
pop
jae
jno
test
test
xor
push
sar
daa
inc
movsl
idivl
cmpsl
das
xor
mov
mov
dec
enter
jle
xchg
mov
fcoms
out
cwtl
je
stc
inc
mov
nop
pop
testb
ss
ret
mov
rcr
xchg
mov
lcall
inc
mov
or
sbb
or
hlt
mov
stos
sti
pop
jne
adc
test
into
imul
pop
jecxz
xchg
mov
inc
xor
lidtl
cmp
adc
mull
ja
mov
adc
xor
mov
loopne
fistps
mov
push
dec
inc
sti
cmp
lea
test
pushf
sbb
lret
pop
mov
and
pop
mov
mov
test
mov
add
stos
xchg
clc
fwait
jmp
clc
mov
div
mov
mov
mov
jnp
push
sti
sti
push
mov
jge
or
gs
push
push
mov
mov
test
out
ja
outsb
inc
or
adc
jmp
mov
xchg
adc
inc
pop
add
jo
flds
ljmp
mov
ja
je
fcmove
jo
rorb
mov
xor
pop
pop
rclb
pop
mov
cmpb
cmova
push
push
inc
sub
mov
out
add
into
push
pushf
test
rolb
add
lret
fisttpll
scas
sbb
jne
stos
sbb
sub
jno
scas
in
cmpb
rcll
cmp
jg
outsl
jl
imul
ja
cmp
inc
jbe
addr16
das
or
in
jge
mov
iret
sbb
je
cmp
inc
push
in
arpl
ss
add
mov
cmc
cmpsl
test
test
es
sbb
and
mov
cwtl
mov
jns
and
mov
inc
mov
jae
imul
cmp
fs
inc
mov
jne
sub
in
push
mov
mov
add
or
outsb
jo
hlt
call
lods
inc
fmul
push
sbb
fsubs
cmp
int3
mov
mov
xchg
cld
loope
lods
popf
movsl
xchg
lods
and
jbe
pusha
lods
jecxz
lahf
push
sbb
jbe
xor
loopne
push
mov
mov
fsubs
sti
aas
sbb
stos
cld
inc
in
int
xor
mov
loope
es
pushl
xor
xchg
enter
lret
aas
sbb
mov
sub
xchg
imul
in
in
mov
or
push
and
push
and
outsl
js
and
shr
push
pop
adc
ficoms
and
movsb
orl
roll
imul
jle
mov
call
jle
pop
mov
dec
pop
loope
daa
sub
jle
lock
test
mov
or
lret
sbbl
cmp
xor
adc
mov
outsl
orb
insl
ret
jle
int
sarl
out
stc
sahf
hlt
dec
and
arpl
dec
adc
inc
mov
scas
sbb
ss
adc
aad
and
es
arpl
and
sbb
daa
popf
into
test
cmpsb
push
jbe
mov
jle
mov
inc
and
xchg
dec
aam
fwait
out
sti
push
cmpsb
jge
sbb
es
push
adc
js
xor
inc
inc
lcall
rcr
ret
test
push
xchg
mull
inc
mov
mov
or
inc
ret
jp
data16
out
insb
cmp
cltd
stos
scas
fdivl
jmp
gs
sbb
dec
adc
mov
pop
inc
sub
test
add
jmp
inc
xor
inc
lret
mov
dec
and
bound
pop
shrl
dec
mov
sbb
std
cmpsl
daa
hlt
add
push
pop
xor
mov
xlat
rcr
xor
mov
jns
dec
enter
sbb
daa
jne
arpl
call
and
dec
adc
or
inc
lahf
adc
test
and
dec
adc
add
scas
aas
not
clc
sub
stc
cmc
xor
push
cmc
push
pushf
and
adc
test
sbb
outsl
insl
gs
cld
test
cmpsl
adcb
ds
add
xchg
push
pop
daa
icebp
jg
inc
arpl
add
sub
xor
adc
cmc
cmp
je
aaa
rcrb
fwait
sbb
mov
insl
dec
aas
and
cwtl
push
dec
daa
jnp
pop
mov
and
ficompl
ljmp
out
stos
cmp
jb
cmp
out
mov
movsl
out
movsb
ljmp
xor
mov
dec
imul
out
mov
ficomps
mov
adc
pop
fs
fidivs
adc
xor
adc
cld
adc
repz
mov
lods
push
add
mov
mov
iret
push
pop
adc
insl
pop
and
push
ja
lds
adc
and
insl
dec
push
aam
call
adc
cmp
pop
and
gs
outsb
ja
pop
or
xor
jae
loop
mov
rorl
sub
dec
push
cmp
sub
xchg
ja
jae
xchg
out
daa
push
subl
test
jecxz
jo
fildll
mov
hlt
test
mov
sub
or
dec
mov
xchg
xchg
xor
pushf
xor
mov
sub
push
inc
or
dec
lret
dec
imul
test
shl
lods
mov
sub
fdivrp
dec
and
dec
roll
jge
push
xor
push
push
js
mov
xchg
int3
xchg
pushf
clc
cmpsb
sbb
adc
rorb
adc
jbe
xchg
mov
push
add
shll
xchg
jg
aaa
addr16
outsb
jae
push
pop
mov
popf
arpl
mov
inc
addr16
pop
and
out
mov
testb
sbb
cmp
and
dec
arpl
xlat
scas
pop
push
mov
jecxz
call
dec
dec
mov
dec
push
loop
and
xchg
mov
sub
gs
loop
hlt
jns
in
mov
out
lcall
aad
aas
ret
dec
add
mov
mov
popa
xor
dec
adc
mov
mov
and
jmp
ret
inc
adc
and
into
jecxz
ja
mov
or
push
and
pop
inc
in
rcrb
not
inc
add
and
inc
adc
mov
push
and
sub
notl
xchg
inc
sub
sub
inc
add
rol
mov
and
xorl
es
test
ret
pop
and
jp
inc
add
popf
dec
sub
add
dec
outsb
jecxz
or
sub
cmp
adc
adc
aas
inc
jmp
mov
loopne
pop
mov
or
pop
stos
xor
adc
cmc
dec
loop
adc
xor
adc
mov
outsl
call
fisubrl
enter
es
mov
pop
mov
sub
clc
or
mov
and
and
dec
or
jg
cwtl
fildl
divb
inc
hlt
inc
lds
leave
mov
push
adc
std
cmp
sub
push
fmuls
test
xor
adc
push
and
and
pusha
adc
imul
push
sub
ss
and
and
popa
dec
and
pop
pusha
adc
lods
and
je
adc
ret
or
pushf
push
mov
dec
pop
ljmp
pushf
and
jle
xor
hlt
in
cld
cli
popa
std
fs
push
or
or
lock
call
jne
mov
pop
jnp
aam
xchg
lea
sti
pop
lret
bound
inc
mov
push
xchg
mov
mov
jp
jge
incb
cmp
enter
stos
lds
xor
ss
dec
sbb
sub
loope
mov
mov
xchg
jecxz
loopne
ss
jge
scas
out
cltd
lea
cmp
or
outsb
adc
cmc
outsb
ja
out
outsl
sbb
dec
mov
inc
aam
scas
pop
and
and
adc
push
and
pusha
mov
pusha
bt
xor
andl
and
sbb
int3
arpl
lea
imul
xor
test
jne
adc
pushf
mov
push
lret
xor
shll
aas
pop
stc
stos
mov
test
xor
push
mov
into
push
adc
dec
mov
mov
insb
cwtl
subb
rorb
push
xchg
adc
je
or
xchg
enter
ret
cmp
sub
mov
adc
aaa
add
into
adcl
lock
dec
in
mov
mov
fnstsw
mov
push
inc
jne
jp
fadds
inc
mov
mov
xlat
jns
jmp
pop
out
loop
lods
sti
dec
and
in
xor
cmp
add
ljmp
push
push
or
bound
test
xchg
int3
lea
xchg
nop
pop
jbe
lret
push
ja
push
jne
pop
cwtl
push
test
das
inc
mov
pusha
mov
push
insb
dec
adc
jne
add
call
shlb
bts
shld
and
cwtl
mov
dec
and
push
add
shl
setae
and
sub
mov
pushf
pusha
cmp
test
add
inc
je
bound
loopne
adc
mov
inc
fwait
adc
lea
and
inc
add
pop
outsl
inc
jmp
xchg
call
jno
loopne
xchg
ret
or
test
adc
push
jecxz
mov
mov
xor
fistpl
jo
xor
mov
das
mov
gs
imul
and
jbe
test
incl
into
mov
mov
xor
scas
and
xor
pop
inc
and
jp
enter
faddp
es
inc
mov
fists
sbbb
test
mov
fistpll
jae
shl
cmc
outsl
mov
xor
subw
cld
scas
adc
repz
fidivrl
cmp
je
outsb
adc
mov
xor
or
inc
mov
ret
and
loope
popf
xor
add
pop
cli
pop
xor
setp
pop
lea
pop
and
cmp
dec
adc
mov
and
sub
mov
orl
xchg
xchg
sbb
imul
add
xchg
es
add
into
cs
cld
int
push
enter
push
fidivrs
daa
cmp
pop
sbb
adc
testb
mov
movsl
mov
icebp
in
mov
lock
inc
mov
mov
sarl
ret
jge
pushf
shrl
or
mov
loope
cs
jecxz
pcmpeqd
mov
test
adc
cmp
fidivrs
push
inc
or
push
xor
and
pop
out
out
and
push
loop
add
push
inc
out
mov
sti
dec
mov
xor
push
jns
dec
adc
adc
pushf
mov
pop
and
xchg
dec
and
or
sbb
pop
mov
testl
sub
dec
gs
pop
dec
imul
and
adc
outsl
and
aas
and
das
and
and
and
and
inc
and
pusha
mov
mov
inc
or
loope
hlt
inc
ret
add
xchg
push
aam
and
or
xchg
aam
and
mov
pop
lds
and
lahf
leave
lcall
mov
clc
shlb
fisubl
cmp
pop
dec
inc
in
iret
inc
mov
fcoms
lret
fistpll
imul
mov
sbb
adc
int3
fildl
imul
clc
pop
test
jg,pt
jb
mov
cmp
inc
ret
cmp
rol
outsb
adc
push
mov
and
lock
inc
mov
mov
cmp
and
adc
and
xchg
adc
and
and
daa
push
int
inc
push
dec
inc
dec
and
test
pusha
cmp
inc
pop
adc
add
inc
and
shrb
dec
bound
dec
add
mov
inc
imul
pop
or
ret
dec
adc
mov
pop
hlt
shll
xlat
int
popf
bnd
mov
rclb
jg
sbb
xchg
lahf
out
test
std
or
xchg
popa
adc
xor
fsubrl
pop
loop
ficompl
push
adc
xor
pop
mov
push
xor
or
mov
int
inc
and
push
sbb
sbb
cltd
test
rcl
movsb
mov
push
push
ficomps
enter
xchg
xchg
mov
mov
out
adc
shlb
das
push
mov
insl
jno
popa
cld
push
out
dec
push
leave
js
pop
lret
dec
repnz
in
mov
adc
test
push
mov
pop
sbb
adc
imul
pushf
and
push
adc
sub
adc
filds
mov
mov
xor
cltd
mov
pop
fbld
leave
pusha
inc
mov
lock
ljmp
cmp
icebp
mov
sahf
enter
cltd
push
sub
and
ss
lock
mov
stos
or
cmpsb
decl
int3
mov
hlt
push
call
fimull
cld
inc
sub
xchg
fimuls
push
sbb
std
cs
movsb
mov
cli
sbb
fimuls
mov
xorl
pushf
pushf
push
jle
inc
adc
and
jne
int
adc
test
dec
inc
ret
enter
add
or
push
push
das
lahf
shl
lea
cwtl
sub
aaa
push
sar
neg
jg
or
loopne
test
adc
cmp
add
push
fsubrs
ss
imulb
cmp
adc
clc
mov
or
stos
xor
adc
outsb
lahf
outsb
jne
xchg
push
es
mulb
mov
aas
cmpb
mov
cmc
in
or
xchg
dec
fpatan
lock
mov
std
and
fdivs
mov
sarl
and
jmp
lcall
inc
fmulp
jmp
fisttpll
stos
inc
mov
fmull
add
add
sbb
adc
inc
loopne
adc
rcrb
pop
adc
and
pop
add
push
xchg
ljmp
jno
fstl
popf
int3
and
dec
cmp
mov
sub
jle
int3
jecxz
xchg
or
cs
pop
jecxz
fidivrl
lea
sbb
clc
mov
jae
out
je
or
lahf
rol
jl
mov
movsb
popa
es
jl
jnp
cmpsl
adc
pop
inc
pop
aas
mov
xor
sbb
mov
stc
push
movsl
mov
out
outsb
inc
mov
adc
sub
filds
mov
stos
sbb
mov
lret
ja
pushf
sahf
push
mov
gs
ficompl
lea
sbb
cmc
mov
xchg
out
pop
push
mov
push
push
inc
rcll
mov
cltd
and
and
dec
pop
js
adc
adc
inc
out
push
and
adc
mov
xor
int
cmc
mov
jae
aas
das
push
push
inc
cmp
adc
and
and
pop
inc
push
pop
sbb
dec
sarb
fistps
xchg
sbb
sub
push
test
mov
sub
jecxz
dec
and
jnp
mov
lret
fmulp
fs
out
jne
add
push
mov
repnz
xor
pop
mov
mov
pop
in
xchg
scas
loop
sub
aas
call
xchg
mov
mov
bound
mov
clc
nop
jns
call
mov
add
inc
mov
xchg
jae
mov
adc
add
ret
inc
or
jp
cmp
clc
pusha
clc
add
push
es
adc
xor
incl
mov
jbe
adc
mov
out
jo
and
adc
sbb
mov
cmp
push
mov
add
gs
adc
add
aaa
gs
notl
nop
les
jmp
ret
adc
sar
mov
stc
sub
and
xor
push
pop
stc
clc
dec
in
inc
rclb
and
xchg
adc
or
gs
sub
sbb
xchg
adc
mov
lock
sar
pushf
sar
inc
pop
adc
inc
dec
adc
dec
dec
adcb
adc
sub
pusha
aam
and
inc
and
jg
and
jg
sub
test
inc
js
and
xor
inc
push
sbb
dec
push
push
dec
dec
dec
cs
push
push
arpl
adc
and
test
add
sbb
inc
push
add
cmc
cltd
in
out
push
mov
in
mov
rorb
pushf
loope
mov
inc
shll
cld
fstpl
jp
push
xchg
stc
lahf
out
hlt
cmp
add
lock
mov
push
push
push
das
lahf
in
test
cs
xor
jo
sbb
jb
mov
sti
fisttpl
push
dec
es
gs
out
mov
push
stos
cmp
mov
dec
sub
and
mov
mov
cmp
push
jo
lods
sub
rcrb
cmp
add
xchg
xor
pop
push
mov
fadds
mov
test
stc
mov
les
scas
mov
or
sub
scas
push
fisttpll
lret
push
imulb
push
mov
bound
mov
sbb
ds
pop
cld
push
cmpsb
jmp
jle
test
mov
mov
mov
ret
push
lds
mov
xor
mov
ret
cld
outsb
jmp
jmp
push
pop
jl
cmp
ret
inc
sub
inc
sub
sahf
pop
dec
push
inc
xchg
xchg
dec
ds
xchg
add
and
push
mov
fwait
push
push
ret
push
popf
mov
jl
bound
addr16
and
xlat
scas
in
lret
pop
adc
mov
inc
stos
sbb
mov
mov
int
mov
or
inc
lcall
lcall
and
je
arpl
push
jne
and
cmp
jbe
adc
add
pushf
pushf
cmp
mov
adc
xchg
insb
jle
adc
adc
dec
je
xchg
xor
sbb
pop
sub
bound
or
sbb
inc
ficomps
popa
mov
push
jbe
ja
inc
std
pusha
adc
mov
addr16
shlb
repnz
jo
mov
push
sarl
in
pop
mov
pushf
cmp
xor
jmp
mov
add
push
arpl
mov
stc
inc
and
sbb
push
jo
imul
jne
test
sbb
je
push
or
jo
lahf
ficoml
sub
pop
ds
daa
out
cmpsb
orb
std
inc
sub
adc
test
xchg
mov
aad
aaa
imul
pop
adc
add
rol
cmp
mov
xor
and
inc
adc
and
and
dec
or
sarb
cmp
sub
cmp
push
dec
cmc
test
xchg
jl
cmp
cltd
insb
push
mov
adcl
inc
gs
das
jge
jmp
std
add
add
jecxz
rcrl
pop
hlt
fcompl
sub
sarb
jno
push
nop
mov
faddl
or
mov
dec
aas
or
adc
into
and
sbb
jle
dec
add
sub
cmp
cmpb
outsb
adc
jecxz
inc
pop
mov
imul
inc
mov
mov
fs
ret
jp
inc
rcrb
push
sahf
ret
mov
lret
and
fbstp
mov
jae
inc
stos
inc
sub
in
sub
aaa
jb
pop
cmp
ret
and
lea
insl
shll
into
rclb
cmp
adc
sub
dec
cli
mov
adc
dec
adc
xor
add
push
push
enter
and
adc
or
xchg
daa
and
and
insb
pop
stc
push
rol
or
adc
and
xor
mov
sub
and
pop
xchg
std
je
and
jb
and
mov
adc
jecxz
and
inc
mov
out
and
adc
leave
movl
shr
stc
mov
dec
sbb
pushf
cmp
and
jecxz
xchg
cltd
jmp
pop
xchg
adc
adc
sub
xchg
ret
push
cmp
mov
imul
lahf
and
rcl
not
xadd
mov
pusha
shl
shl
inc
add
bswap
shr
repz
adc
add
inc
jl
repnz
inc
mov
push
jo
and
jecxz
adc
and
xor
outsb
xor
test
out
xchg
and
dec
adc
js
clc
ja
adc
cs
adc
push
add
loopne
xchg
xor
sub
and
imul
jo
push
lret
gs
jae
mov
adc
mov
sub
push
adc
shlb
or
fucompp
cmp
and
das
lods
jo
cmc
pop
inc
test
loop
sarb
int
pop
test
dec
mov
nop
rcrb
mov
fs
dec
push
adc
xchg
and
add
push
inc
repz
pop
inc
fdivl
imul
and
xchg
pop
push
dec
fldcw
mov
xor
outsb
into
stos
lock
mov
shll
or
xchg
mov
shl
aam
cmp
ja
jns
test
arpl
repnz
outsb
mov
pop
xor
push
in
shlb
clc
je
jl
jmp
jge
inc
or
push
inc
mov
enter
ljmp
mov
lret
push
adc
jl
inc
pushf
adc
pop
in
and
or
sbb
mov
stos
push
sub
pop
arpl
fistps
ret
pop
and
test
test
xchg
scas
adc
push
mov
adc
mov
push
push
mov
les
popa
lods
pop
out
inc
xor
fs
icebp
loope
ret
sbb
outsb
jbe
sbb
dec
fistpll
es
rclb
rclb
pop
mov
xchg
fdivrp
sbb
push
pop
jle
sub
fildl
pushw
out
xchg
les
lods
fnop
pop
add
push
add
test
adc
add
or
icebp
and
add
pop
inc
mov
negl
test
negb
fstpl
dec
test
inc
xor
push
dec
into
movsb
in
rcl
mov
mov
mov
in
sbb
adc
mov
les
dec
inc
mov
adc
jmp
dec
dec
dec
xchg
int3
xchg
dec
xor
mov
rclb
inc
mov
sbb
jae
pop
mov
push
mov
inc
push
insb
or
mov
dec
xor
pop
mov
dec
sbb
push
das
mov
inc
mov
fldenv
cmp
faddp
jl
pop
test
cmp
cmp
cmp
add
pop
cmpsl
shl
push
and
pop
inc
out
sbb
mov
push
sbb
xchg
stc
add
pusha
pushf
stc
cmc
and
mov
cmp
adc
inc
add
inc
and
jnp
mov
inc
fistl
pop
or
fadds
push
cmp
pop
pop
pusha
inc
add
lea
not
inc
or
and
adc
ficoms
push
add
inc
push
je
dec
and
xchg
js
and
inc
adc
je
or
jmp
push
and
cmp
stc
add
push
add
lret
inc
aas
mov
out
adc
push
movsb
adc
mov
rcrb
dec
and
pop
pusha
pop
pop
add
adc
decb
mov
js
std
adc
adc
cmc
cmp
stc
jp
adc
clc
and
jle
jo
push
not
and
push
lea
pop
and
adc
adc
movsl
cwtl
mov
mov
push
dec
gs
jo
add
and
dec
pop
mov
and
jne
addr16
push
adc
and
rclb
jb
outsb
push
xchg
adc
mov
jns
scas
adc
jae
adc
or
sub
jne
insb
pop
mov
and
and
aam
and
insl
outsl
push
ret
pusha
cmp
push
jo
outsl
addr16
insl
add
out
xor
outsb
nop
or
add
pop
push
mov
jbe
and
gs
cltd
add
sub
addb
mov
and
cwtl
fsub
jp
imul
dec
dec
ljmp
icebp
push
inc
fimull
xchg
pop
ljmp
mov
cmp
push
lods
enter
fdivrl
xchg
andb
jo,pt
xchg
or
push
stos
scas
jno
imul
int
mov
jo
in
dec
shl
mov
xchg
cmp
out
push
cmp
jmp
push
cmp
mov
sub
into
xchg
inc
inc
out
adcl
outsb
jae
fs
jns
out
add
or
mov
mov
xchg
outsl
imul
push
mov
push
movsl
lret
lods
rcrl
inc
mov
insb
jae
shll
sbb
jle
cmovs
jno
push
pop
jb
cwtl
push
pop
aas
cmp
out
outsb
icebp
cmpsb
mov
dec
sbb
jl
clc
jl
push
or
sbb
int3
dec
loop
jecxz
mov
or
rcr
and
cmp
pop
push
pop
jns
xor
insb
js
int3
out
push
orl
insb
cltd
pop
lahf
aad
pop
adc
mov
add
and
jo
int3
dec
dec
test
xchg
add
cmp
xchg
pop
xor
das
aas
mov
cmp
inc
and
jno
lea
mov
fndisi(8087
aad
test
out
std
xorl
in
dec
xor
adc
inc
add
dec
jle
adc
jne
adc
pushw
jno
sbb
mov
cmp
pop
add
cmovp
add
inc
inc
gs
sahf
cmc
shl
popa
adc
xor
inc
enter
push
stos
dec
lahf
pushf
adc
xor
xchg
inc
lret
repz
pusha
hlt
mov
shll
int3
stos
dec
jge
bound
sbb
pop
xchg
adc
fidivrl
and
xchg
arpl
iret
ror
data16
adc
sbb
sar
shld
cmc
and
jns
push
mov
pop
and
loope
cmp
shl
add
test
lea
stc
rcl
enter
bswap
rcr
sub
dec
push
adc
adc
mov
dec
xchg
inc
gs
or
sub
sarl
push
dec
dec
adc
xor
dec
cmp
adc
xlat
dec
xor
sbb
shr
scas
xchg
pusha
inc
pushl
fbld
dec
inc
dec
mov
lcall
pop
mov
xchg
lret
cmp
pop
add
pusha
setge
adc
btc
mov
pop
mov
and
adc
enter
adc
fisubrl
and
gs
adc
and
xor
adc
and
add
inc
add
cs
imul
clc
scas
mov
flds
mov
lahf
xor
jae
mov
clc
je
shll
lods
repz
test
push
inc
mov
xor
and
adc
add
pop
push
movsb
push
and
inc
adc
adc
or
lods
cmpsl
adc
daa
daa
adc
and
arpl
adc
and
bound
adc
push
sub
add
pushf
lods
and
in
push
adc
jo
adc
push
pusha
and
popa
adcb
inc
mov
or
cmp
pushf
and
sub
fwait
daa
pop
fs
push
shlb
clc
jne
sbb
clc
push
mov
sar
and
mov
pop
mov
mov
test
test
repz
sbb
cmc
pushf
push
mov
push
push
push
and
jge
aad
fadds
push
jnp
adc
out
push
push
in
loopne
and
adc
push
loope
inc
or
jecxz
inc
or
adc
enter
ljmp
push
bsr
cmp
shl
pushf
xor
pushf
inc
add
in
and
xchg
adc
and
inc
adcb
and
inc
dec
and
adc
mov
and
addl
pop
dec
inc
push
ja
adc
movzbl
inc
pop
adc
xor
sub
mov
mov
push
gs
push
je
push
and
jnp
jecxz
fstl
out
popa
sub
adc
popl
pushw
add
push
push
and
adc
add
push
sbb
sbb
push
cmp
cmc
rol
inc
or
stc
cmc
push
sbb
mov
ret
jg
mov
in
andl
fdivr
mov
cmc
ror
xor
mov
in
sbb
iret
adc
add
adc
lock
popa
sub
out
inc
add
out
inc
add
adc
shr
mov
icebp
shrb
loope
rolb
inc
mov
das
pop
insb
and
push
imul
bswap
and
test
inc
adc
xlat
dec
dec
popa
push
adc
pushf
outsb
int
jmp
lods
sub
out
pushf
jne
adc
out
test
or
mov
int3
mov
fiadds
adc
mov
mov
pop
adc
cld
inc
ds
inc
sar
or
mov
and
lods
sbb
xchg
jns
cmc
sub
bound
mov
pusha
pushf
pushf
jle
and
adc
rol
rolb
adc
push
roll
adc
add
and
outsb
adc
addl
pusha
and
cltd
bound
jge
in
mov
test
rol
sub
mov
sbb
lea
mov
seta
shl
add
adc
pop
mov
cli
inc
push
sbb
pop
movsbl
mov
shld
shlb
fcoms
int3
pusha
pop
sbb
push
inc
clc
cmc
ror
arpl
xchg
clc
pusha
cmc
sub
js
sub
mov
add
sub
pop
dec
adc
movl
push
pusha
stc
sub
data16
xchg
adc
or
mov
pop
popa
adc
movzwl
bound
jecxz
imull
push
fnstenv
adc
xchg
pusha
std
jge
adc
les
adc
lcall
fadds
xchg
stos
leave
adc
push
add
dec
mov
rcll
fwait
adc
popa
out
adc
jnp
adc
js
adc
mov
inc
adc
rolb
adc
incb
not
inc
xor
cmc
push
stc
inc
sub
mov
mov
inc
jns
push
es
jbe
cmpsb
jle
sub
mov
cmc
inc
and
push
pusha
imul
test
popa
or
adc
add
sbb
les
jle
ss
xlat
cmc
cbtw
push
cmp
cwtl
test
test
cmc
adc
icebp
sub
bound
adc
into
bound
pop
adc
outsl
push
inc
xchg
cmp
and
or
inc
ja
jne
inc
and
push
push
and
inc
lea
push
test
cmp
test
dec
mov
popa
pop
adc
icebp
or
movsl
shlb
adc
fwait
mov
popa
push
adc
jnp
adc
xor
mov
adc
push
and
aas
sub
fisubrl
sub
dec
xchg
adc
and
ds
aad
and
inc
xor
mov
test
mov
les
cwtl
test
inc
xor
mov
in
and
xchg
inc
adc
push
push
ret
jecxz
lea
push
lahf
pusha
pop
inc
push
test
xchg
cmp
test
test
clc
sub
cmc
test
cmpl
pusha
and
and
add
or
inc
or
mov
push
mov
mov
aaa
mov
fsubs
and
dec
adc
ja
test
push
mov
lahf
pop
adc
popa
les
cmp
bound
fcoms
dec
adc
and
in
mov
push
pusha
and
dec
jbe
adc
les
adc
and
icebp
adc
and
adc
jle
les
in
adc
rorl
pop
sbb
xor
sub
add
mulb
adc
sbbl
inc
adc
inc
xor
xorb
outsb
arpl
rclb
jmp
rol
gs
adc
divl
fsubs
push
pop
jge
movl
ljmp
mov
jge
mov
pushf
push
pop
and
fcom
rolb
inc
or
in
inc
add
repz
xchg
gs
adc
add
push
popa
sbb
imul
fnsave
popf
stc
ror
mov
sbbl
xor
ret
pushf
sub
dec
jg
inc
adc
push
pusha
orl
adc
in
mov
and
inc
push
add
enter
jne
daa
outsb
adc
gs
or
sub
adc
inc
cs
inc
pushf
adc
pusha
mov
std
mov
jecxz
mov
dec
cmpsl
adc
jnp
pop
add
pop
mov
adc
incb
inc
and
std
push
adc
mov
mov
test
jecxz
and
inc
bound
cmp
xchg
adc
add
and
cmp
cmpsb
imul
repz
movzbl
movsbl
pop
pusha
and
push
and
pusha
ftst
popa
mov
push
and
lods
pusha
adc
fistl
cmp
inc
sbb
sbb
ret
decb
pop
mov
sti
test
loopne
lock
rolb
and
aaa
adc
and
mov
in
or
pop
fidivrl
cmp
inc
mov
adc
inc
cli
add
rclb
out
xor
mov
inc
sub
and
or
inc
ds
sar
mov
push
arpl
repnz
dec
or
inc
popa
inc
adc
and
stos
mov
push
pusha
pusha
push
ret
jecxz
pop
lea
inc
sbb
and
mov
xor
pushf
and
bound
adc
push
in
subb
jmp
inc
inc
inc
and
test
mov
jmp
stc
stc
inc
add
sti
pusha
notrack
insl
pop
mov
adc
adc
cmp
inc
adc
push
pusha
and
add
shl
test
add
pusha
rcll
test
xor
repz
sbb
cmp
bound
pop
popa
sub
fildll
cmpsl
movsb
rcll
lds
and
inc
inc
scas
adc
icebp
dec
and
cmp
test
ljmp
pop
xor
xchg
imul
cld
mov
adc
xchg
arpl
adc
push
pusha
xchg
cmc
inc
test
push
inc
es
mov
dec
adc
ss
jo
pushf
and
and
and
cs
and
dec
mov
rdtsc
fs
adc
fisubl
cmc
inc
cli
push
and
adc
and
mov
cmc
clc
cmp
arpl
add
or
xor
call
repz
arpl
sbb
lock
inc
cmc
adc
or
pop
outsb
inc
mov
and
xor
adc
dec
jno
mov
jecxz
arpl
adc
adc
inc
mov
sub
adc
and
dec
pop
adc
pushf
fs
and
mov
in
add
mov
and
inc
adc
das
lahf
inc
mov
push
adc
test
inc
pop
bound
or
push
adc
mov
cld
sub
or
cli
push
add
lret
and
dec
add
lret
aam
mov
shl
setns
mov
into
push
lock
not
push
add
std
mov
sub
popa
test
xor
mov
idiv
call
in
add
fists
mov
pusha
push
test
xor
pop
into
push
adc
fstpt
stc
mov
cwtl
setne
aaa
inc
xor
mov
lea
and
pop
adc
lahf
imul
add
add
call
ret
stc
adc
shrd
inc
out
adc
mov
push
or
lret
jp
aad
and
xor
mov
cmpsb
and
cmp
inc
adc
push
gs
adc
adc
add
mov
rol
not
not
setno
pushf
dec
pushf
dec
inc
push
adc
adc
aad
inc
inc
bound
cli
adc
in
dec
out
adc
xchg
and
jnp
lea
aad
push
jmp
fiadds
adc
daa
inc
repz
and
pusha
addb
xor
repnz
in
push
addb
and
adcb
dec
loop
cwtl
sbb
ret
cmc
xor
sbb
inc
lea
rol
shl
adc
sub
rcll
xchg
pusha
gs
xchg
cmp
inc
loopne
addb
push
and
test
movsl
sbb
pushf
pusha
andl
lods
xchg
inc
mov
push
mov
aam
mov
jecxz
push
pushf
inc
cmpsb
clc
adc
pop
adc
mov
pusha
inc
mov
jmp
rclb
mov
push
inc
les
pusha
out
or
rolb
jge
test
pop
arpl
fs
and
inc
int3
adc
cmp
or
popa
mov
dec
arpl
ljmp
xadd
adc
push
pop
adc
ror
inc
mov
pusha
inc
pop
push
cmp
clc
cmc
shrd
inc
push
lds
adc
mov
pop
arpl
add
inc
inc
add
and
mov
clc
stos
outsl
push
fdivl
arpl
inc
pushf
mov
clc
pusha
test
adc
inc
add
mov
lds
jnp
ja
inc
cwtl
adc
shlb
repnz
jg
pusha
clc
cmc
divl
adc
jge
adc
mov
jl
stc
adc
inc
push
fs
cmpb
adc
lret
in
pop
adc
xor
out
loope
pushl
push
adc
mov
adc
pusha
dec
and
jecxz
xchg
inc
cmp
adc
cmp
pushf
pushf
imul
inc
pop
adc
icebp
pop
jbe
dec
outsl
adc
pusha
and
shlb
push
add
dec
adc
push
mov
and
adc
aas
pusha
test
flds
inc
jp
xor
jae
hlt
and
mov
xor
adc
flds
sbb
lret
add
xor
inc
mov
sarb
adc
cmc
idivb
sbb
rcr
ror
rol
inc
mov
inc
call
adc
inc
xchg
pop
add
test
inc
mov
cmp
bound
adc
bound
arpl
stos
out
icebp
popa
cli
adc
push
adc
push
mov
adc
xor
std
rclb
and
xchg
adc
adcl
mov
or
push
inc
mov
or
mov
adc
inc
push
sbb
sbb
adc
pushf
outsb
and
jmp
lea
adc
cltd
pushf
inc
adcl
add
rorb
xchg
ret
rclb
lea
push
inc
adc
repnz
inc
sbb
cltd
ret
movzbl
jmp
jle
loope
pushf
mov
push
adc
sti
test
sbb
testb
out
xor
add
in
lahf
adc
popa
add
xor
push
pusha
xchg
mov
adc
and
xchg
adc
inc
pop
adc
or
pop
shr
shl
or
popa
jne
shl
popa
jno
stos
fimull
adc
inc
or
ljmp
daa
or
adc
sub
cmp
mov
rcr
inc
sbb
jl
sub
dec
push
stos
pop
leave
cmp
push
jb
bound
add
loope
movsb
add
adc
scas
pusha
cs
addr16
adc
sbb
ret
mulb
adc
shrd
arpl
popa
xchg
lock
ljmp
movzbl
mov
inc
mov
addr16
adc
mov
ficoms
iret
mov
std
insl
in
or
and
jl
mov
adc
xor
dec
sub
fisubrl
xchg
jmp
add
mov
xor
fs
out
popa
xor
pop
bound
adc
adc
xchg
push
lods
mov
call
neg
push
sbb
loope
dec
add
cmc
push
imul
dec
shl
shrb
adc
add
les
adc
push
adc
cmp
inc
mov
add
adc
push
not
push
rcll
enter
adc
test
fs
adc
pushf
stc
and
popa
pop
pop
jmp
dec
neg
pushf
inc
cmp
mov
test
stc
cmp
pushf
dec
ret
fs
insl
gs
dec
fs
sar
bsr
adc
inc
ret
rorb
inc
adc
mov
inc
loope
mov
sub
in
adc
and
adc
jo
adc
mov
lea
popf
pusha
push
and
and
inc
inc
jle
or
sub
mov
cmp
clc
mov
push
adc
and
adcl
push
mov
sbb
jae
sub
push
popa
lods
arpl
jo
and
pusha
inc
cmp
jge
je
inc
adc
sub
rcll
loop
pusha
out
adc
addl
sbb
outsb
adc
mov
push
inc
lcall
adc
and
jle
test
inc
pop
inc
dec
adc
ljmp
in
pusha
dec
sub
push
mov
push
xor
push
setg
sub
ror
outsb
mov
inc
adc
and
xlat
mov
pop
not
cmc
test
test
mov
pushf
cmp
inc
jp
cmp
inc
outsl
adc
les
rclb
jns
data16
mov
orb
add
adc
and
fs
outsl
inc
inc
and
inc
sub
icebp
cmpsb
fisttpl
adc
outsl
clc
pusha
xor
scas
adc
xchg
add
jmp
stc
insl
sbb
adc
rcrb
outsb
add
adc
inc
je
lea
pusha
jbe
jle
test
inc
rcll
xor
jo
fcoms
sbb
cmc
adc
jge
cmpsb
adc
test
test
out
cmc
push
clc
pushl
popa
adc
xor
push
fsubrs
pusha
popf
and
lea
xchg
aas
and
mov
repz
loopne
out
mov
mov
pop
bswap
push
and
fcmovne
mov
andb
cmp
xchg
popa
std
adc
inc
hlt
arpl
adc
rorb
popa
setp
inc
fisubs
lods
lds
add
cmpb
rclb
pop
mov
inc
les
and
adc
sub
filds
es
inc
pushf
and
outsl
inc
and
rcrl
jge
and
rdtsc
shld
test
jmp
adc
or
push
cmp
insl
hlt
adc
inc
int
pop
popa
add
in
mov
adc
inc
xchg
pop
es
inc
jae,pn
test
adc
ret
arpl
adc
mov
test
inc
push
adc
stos
rclb
loope
dec
add
cwtl
cmc
clc
cwtl
jae
push
test
push
inc
xor
and
scas
adc
jge
dec
xchg
push
pushf
shr
sti
and
inc
ret
inc
gs
adc
inc
fcoml
cmc
inc
and
popa
push
pop
fdivs
stc
push
dec
insb
inc
pop
adc
xor
loopne
fs
adc
aas
arpl
jae
jmp
fs
dec
out
sbb
ret
inc
notb
pushf
push
pop
adc
daa
je
push
shl
push
adc
fsubl
loope
and
push
int
inc
adc
mov
mov
iret
not
and
inc
cs
addr16
pusha
out
lcall
mull
pusha
xchg
fdivrl
push
pusha
xchg
adc
jne
and
mov
icebp
sub
icebp
and
popa
adc
stos
pusha
sub
sahf
dec
xor
out
pusha
out
in
xor
incl
cmp
cmpsl
xor
jnp
bound
mov
adc
in
mov
setl
and
jo
inc
das
pusha
xchg
adc
push
cwtl
inc
and
and
test
push
inc
push
arpl
adc
push
movzbl
pusha
cmp
arpl
ja
adc
pop
in
jo
and
xchg
adc
gs
imul
sbb
adc
out
dec
mov
pushf
push
nop
outsl
ja
adc
adc
adc
cmc
sub
and
jno
adc
pop
sub
xor
les
sbb
mov
aad
rcl
mov
push
popa
sub
aam
cld
push
rep
inc
mov
out
add
and
xchg
xor
and
mov
adc
jno
adc
add
movsl
adc
and
pop
adc
in
xor
push
xchg
adc
repnz
mov
or
adc
and
arpl
popa
ss
int3
rcll
pop
popa
adc
sub
push
dec
andl
fwait
mov
mov
push
pusha
xlat
adc
loopne
daa
jb
adc
pusha
add
or
arpl
divb
sbb
jnp
call
test
dec
jp
ljmp
jg
jmp
lahf
jmp
insl
lahf
decl
inc
adc
insb
lahf
pushl
inc
inc
sub
xchg
pusha
aaa
adc
inc
add
stos
inc
inc
pusha
aaa
adc
mov
adc
inc
dec
adc
inc
das
adc
ret
adc
xchg
pusha
imul
dec
adc
or
adc
or
and
push
pusha
and
adc
mov
pusha
pop
pusha
jae
roll
pusha
mov
adc
inc
sub
in
imul
xchg
inc
pop
pusha
das
pusha
sub
xor
adc
pusha
xlat
adc
jecxz
lahf
faddl
pusha
push
pusha
pop
pusha
push
adc
inc
jmp
lds
fistl
dec
jns
mov
or
js
inc
adc
inc
fwait
adc
inc
pusha
add
pusha
movups
inc
aas
popa
pop
adc
punpcklbw
pusha
ret
pusha
dec
loopne
pusha
jmp
lock
and
pusha
jnp
aas
add
loope
dec
adc
inc
adc
punpcklwd
adc
mov
pusha
mov
loopne
adc
outsl
sub
add
pusha
mov
pusha
mov
bound
loopne
pusha
imull
pop
add
popa
and
pusha
or
loopne
pusha
out
lahf
pusha
pop
popa
sub
popa
mov
pusha
sbb
pusha
lahf
pusha
sub
popa
mov
add
loopne
pusha
jae
pop
pusha
aaa
adc
jbe
pop
loope
pusha
dec
popa
das
popa
aaa
bound
popa
push
popa
jecxz
ret
pusha
ret
pusha
pop
popa
pusha
pop
pusha
cmp
adc
inc
pop
pusha
push
bound
pop
popa
outsl
pusha
cmpsl
pusha
jnp
aaa
bound
pusha
dec
bound
popa
jecxz
addb
aaa
pusha
pop
pusha
jnp
jmp
shll
bound
xchg
pusha
xchg
pusha
arpl
jmp
inc
pusha
mull
pusha
pop
bound
cmpsl
pusha
dec
pusha
shll
pusha
pop
pusha
out
pusha
cmpsl
pusha
sub
popa
inc
pusha
mov
pusha
mov
inc
xchg
pusha
pop
popa
andl
cmpsl
iret
pusha
mov
pop
pusha
pop
pusha
andl
and
pusha
or
popa
push
pusha
out
arpl
adc
push
xor
adc
mov
aaa
inc
bound
fs
cs
rdtsc
insb
sahf
adc
xor
stos
lea
out
mov
cmpsb
xor
sub
test
ret
aas
shl
mov
ja
adc
test
repnz
adc
jmp
pusha
add
push
cmp
mov
insb
sub
or
adc
jl
jmp
pusha
jo
shlb
mov
cmp
adc
nop
pusha
add
loope
or
xchg
pop
adc
adc
mov
push
test
addb
push
inc
sbb
xchg
inc
adc
xor
sbb
scas
data16
or
sub
jle
sbb
cmp
xchg
pop
jmp
addr16
adc
xchg
adc
adc
mov
push
pusha
fcompl
pusha
push
xchg
cli
jo
out
gs
adc
and
enter
ss
xor
adc
pop
and
add
iret
xor
fistl
push
pop
adc
gs
push
pusha
mov
xchg
les
mov
and
inc
xchg
adc
pusha
xchg
hlt
pop
loopne
dec
xor
ror
push
call
shlb
leave
adc
or
ds
and
pop
cmpl
cltd
mov
popa
adc
jb
sbb
inc
and
aam
pusha
imul
adc
and
adc
add
ds
ss
shl
data16
adc
pusha
insb
mov
call
jmp
adc
inc
popa
adc
adc
xchg
xchg
inc
adc
rcl
mov
clc
stc
lahf
test
lea
aas
sub
adc
lea
and
decl
notb
loopne
dec
inc
adc
add
movsl
cmc
lea
not
stc
rcr
bswap
add
adc
and
xor
test
repz
je
pusha
jge
inc
push
jno
add
and
dec
adc
adc
cmpsb
cmpl
lock
es
push
outsb
iret
adc
nop
adc
adc
shlb
push
mov
push
dec
sub
add
pushf
not
push
dec
bsf
mulb
sar
not
setb
jbe
adc
ror
xor
inc
test
sub
adc
adc
push
not
pop
sub
pusha
mov
jmp
xchg
ret
mov
pusha
pop
adc
shrb
adc
jg
lods
daa
adc
les
adc
dec
mov
inc
sbb
xor
add
dec
ror
inc
test
bound
lock
jp
mov
push
subl
jae
fsubl
leave
insl
in
mov
pusha
push
push
adc
rcl
push
push
adc
ret
decl
adc
pusha
and
adc
and
pop
add
add
loopne
add
mov
jmp
aad
cwtl
add
sbb
fistpll
pop
sbb
add
add
add
adc
inc
add
and
adc
add
add
pusha
add
addb
jmp
add
add
inc
sub
adc
sbb
add
movsl
sub
add
add
pop
pusha
pop
adc
inc
daa
adc
inc
pop
adc
adc
inc
cmp
inc
inc
add
inc
add
jbe
add
jle
add
jg
inc
add
adc
movups
adc
add
jo
add
pusha
rcrb
std
inc
add
clc
inc
add
adc
loopne
pushl
incb
add
cld
add
addb
jo
adc
sbb
cld
cmp
adc
inc
ss
adc
incl
cmovo
adc
inc
add
adc
rclb
add
inc
inc
adc
pop
inc
add
adc
inc
push
adc
inc
push
adc
push
inc
and
xor
loopne
xor
add
add
mov
xor
adc
addb
addb
addb
inc
add
sbb
adc
inc
add
add
add
adc
inc
and
sub
add
addl
add
adc
inc
and
inc
add
add
lock
aas
jmp
rolb
rolb
add
adc
inc
das
inc
sub
clc
inc
and
clc
inc
cmp
add
adc
rcrb
add
inc
add
xor
loop
adc
inc
add
adc
inc
add
sbb
adc
pusha
add
cld
inc
add
sub
add
inc
sub
push
inc
add
sbb
add
sbb
adc
xor
incb
sub
add
addl
add
add
adc
pop
incb
adc
push
pop
inc
inc
add
rcrb
inc
pop
add
rolb
inc
add
sarb
loopne
rolb
mov
or
add
shlb
out
sbb
inc
clc
add
sar
inc
inc
dec
inc
lods
adc
iret
daa
popl
popa
and
pusha
fwait
popa
aaa
add
fwait
add
pop
inc
sbb
add
add
test
add
leave
dec
add
test
inc
pop
adc
fs
add
add
subl
add
test
adc
inc
push
adc
clc
inc
jl
clc
pop
inc
ja
add
xor
adc
inc
add
add
adcb
es
add
pop
inc
inc
adc
addl
scas
adc
inc
add
cmovo
add
dec
add
add
inc
cmp
add
adc
inc
push
adc
js
call
inc
test
inc
inc
pop
adc
aas
pusha
add
sbb
pusha
sub
pusha
sysexit
jge
sub
add
add
inc
les
incb
adc
faddl
pop
pusha
movups
add
sub
pusha
inc
aaa
add
add
xor
rolb
pop
inc
adc
add
push
and
stos
add
popf
mov
andb
punpcklbw
sub
add
cmp
add
and
movsb
adc
add
adc
mov
pusha
mov
mov
sub
cmp
add
push
inc
addl
addl
aaa
pusha
add
pop
inc
test
add
punpcklbw
inc
inc
out
pop
inc
add
aaa
inc
add
ja
add
push
fildl
adc
inc
add
fadds
inc
inc
pusha
fwait
sub
add
and
inc
js
add
lock
xor
addb
jg
jg
add
andb
adc
das
inc
mov
lock
jb
lock
inc
sub
add
stc
inc
add
or
or
das
xor
adc
push
push
inc
lea
and
inc
push
pusha
pop
adc
pop
adc
pop
adc
adc
add
push
inc
ja
pop
pusha
add
adc
popa
cmp
mov
pop
lock
sbb
inc
popa
adc
add
and
push
add
jg
mov
add
popa
rolb
inc
ud0
inc
ud0
xchg
push
inc
add
lock
jae
add
or
xchg
adcl
inc
add
ds
add
aas
push
incb
inc
add
repz
adc
xor
add
add
adc
inc
add
or
add
adc
addb
or
and
inc
add
and
dec
dec
inc
add
adc
and
dec
inc
and
and
inc
add
push
inc
andb
das
pusha
aaa
pusha
aas
cmp
add
add
loop
bound
inc
xor
ret
dec
inc
adc
xchg
pop
incl
ds
inc
dec
sub
cld
mov
aas
aaa
add
popa
das
adc
add
or
pop
add
fimull
add
adc
mov
out
ret
fbld
loopne
xchg
pusha
add
stos
xchg
inc
or
stos
xchg
inc
add
loopne
nop
loope
out
mov
sbb
jecxz
icebp
mov
leave
mov
add
inc
add
cmc
enter
add
hlt
enter
mov
jecxz
jmp
aam
aad
loopne
inc
or
inc
adc
add
rcl
rcl
rcl
out
add
fwait
add
jecxz
mov
int
cld
sarb
sarl
sarl
fxch
sti
shll
int3
scas
fbld
std
loop
cld
in
jmp
inc
add
jmp
inc
add
call
sti
loope
inc
add
fiaddl
out
movsb
nop
out
stos
xchg
out
stos
fwait
out
scas
fwait
out
mov
out
mov
inc
add
adc
iret
mov
cmpsl
cmpsl
mov
mov
addb
enter
addb
into
into
into
rcl
roll
inc
sahf
sub
mov
shll
std
jmp
inc
add
ljmp
fwait
in
mov
inc
add
mov
and
popa
dec
add
aaa
add
add
aaa
add
add
aaa
add
imul
inc
add
aaa
add
aas
aaa
add
add
aaa
add
xor
add
in
mov
sbb
rol
std
rol
cld
aad
inc
add
sti
into
mov
push
mov
mov
into
scas
loope
lea
sbb
sar
jmp
cld
jmp
mov
adc
jecxz
inc
es
xorl
adc
nop
inc
add
mov
repz
test
fwait
and
inc
add
mov
int3
inc
sahf
sub
popa
aaa
adc
mov
add
add
in
lret
arpl
xor
mov
fwait
add
inc
add
fwait
add
test
cld
lds
add
addb
and
aam
in
fsubs
fsubl
pop
add
in
mov
fisttpl
inc
add
repz
add
repz
repnz
repnz
stos
stos
stos
roll
mov
adc
leave
leave
inc
fwait
adc
int
inc
dec
sub
xor
aaa
fwait
add
cwtl
add
fwait
add
cwtl
add
fwait
add
enter
fwait
add
into
mov
add
adc
scas
xchg
inc
es
sub
add
into
cld
jecxz
mov
fisttpl
add
and
mov
pusha
add
mov
repz
mov
stos
stos
inc
xchg
and
add
mov
lds
add
sub
add
fwait
adc
jmp
sub
add
cmp
popa
cmp
lods
xchg
sub
sahf
add
inc
arpl
or
and
scas
xchg
cld
fmul
std
fmul
inc
add
xchg
add
int
and
int
loope
cwtl
inc
es
lock
and
ljmp
inc
es
popl
mov
add
stos
xchg
inc
add
repz
inc
out
sbb
lret
mov
mov
and
adc
addb
cmp
adc
xlat
xlat
sub
sti
rol
inc
add
cmp
sub
xchg
inc
add
cmp
sub
xchg
inc
add
sub
inc
xchg
inc
add
mov
inc
fwait
sbb
mov
cld
fcmovne
cld
fcmove
inc
mov
add
int
inc
cwtl
inc
add
inc
es
repnz
mov
sti
loope
inc
add
inc
add
xchg
xchg
popf
jge
lahf
sub
sahf
inc
add
inc
add
repz
mov
mov
cmp
mov
fwait
add
adc
mov
fwait
add
sahf
add
sub
mov
sub
mov
out
popf
cld
fst
std
push
fwait
add
mov
inc
je
es
mul
push
in
repnz
add
loop
cmpl
pop
xchg
mov
xchg
jns
movsb
jl
add
hlt
cmpsb
addl
fwait
add
mov
mov
mov
mov
mov
mov
add
mov
add
fwait
add
xor
xor
add
ss
add
cwtl
add
fwait
add
cwtl
add
movsl
cld
loope
std
loopne
popa
flds
jp
adc
mov
inc
es
sti
ljmp
add
cld
in
inc
add
add
fwait
xchg
repnz
jae
sahf
jne
movsl
jge
cmpsl
xor
nop
out
scas
xchg
or
adc
fwait
inc
cwtl
adc
inc
fsts
mov
sub
add
inc
push
sub
inc
xchg
sarb
add
xor
sbbb
es
add
scas
xchg
rolb
fwait
add
inc
add
add
mov
cld
jecxz
std
std
and
rol
data16
adc
mov
sbb
push
repnz
stc
call
fldenv
ljmp
inc
es
mov
icebp
pushf
jne
rcll
icebp
cmpsb
addb
out
stos
out
cmpsl
mov
adc
test
dec
xchg
adc
int3
mov
scas
scas
inc
fwait
inc
roll
inc
cmp
add
cs
add
and
fwait
add
imul
add
adc
stos
mov
pusha
cwtl
ss
add
and
mov
ljmp
pop
adc
into
inc
fbld
adc
addr16
inc
sahf
dec
mov
adc
mov
hlt
jecxz
push
adc
push
fldt
adc
aam
es
mov
sahf
adc
jne
popf
jl
xchg
lock
out
lahf
mov
adc
lock
xchg
jp
fwait
sub
add
adc
or
cmp
iret
inc
ja
mov
out
movsl
in
mov
mov
inc
add
dec
push
sbb
stos
xchg
jecxz
add
add
fadd
mov
adc
xchg
mov
adc
xchg
test
inc
lret
sbb
lea
mov
mov
inc
xor
inc
flds
adc
stos
inc
lret
adc
lods
lods
dec
inc
inc
inc
add
fwait
add
jo
adc
and
adc
xor
xchg
jmp
addb
add
dec
ljmp
nop
fsubs
cmp
cmpsb
sub
add
lock
mov
adc
addb
lock
pop
das
adc
clc
ja
add
js
adc
push
push
inc
adc
js
adc
jo
inc
adc
mov
add
clc
js
mov
adc
inc
sub
adc
add
cmovo
adc
mov
arpl
push
test
adc
mov
adc
es
add
movl
imul
bound
add
imul
fnstsw
add
popa
and
sub
add
fadds
loopne
adc
mov
pop
adc
sti
jnp
add
sbb
addb
sbb
inc
unpcklps
fs
adc
movlps
filds
pusha
adc
das
adc
rorb
aas
add
das
inc
pop
sub
add
popl
popl
aas
add
and
add
pop
add
jg
daa
scas
add
inc
das
pop
sbb
cmp
pop
adc
aas
inc
notb
lea
pusha
pop
adc
xchg
adc
sub
add
addl
jns
jae
loop
adc
xor
mov
inc
int3
inc
pop
inc
aam
push
inc
or
inc
inc
inc
idivl
inc
add
xchg
inc
jg
xchg
pusha
adc
clc
xchg
adc
inc
add
clc
xchg
adc
add
jnp
adc
and
sub
add
incl
sub
add
pusha
adc
adc
add
inc
pusha
mov
les
mov
add
popa
inc
cmp
mov
daa
or
adc
or
add
loopne
adc
mov
pop
add
das
add
inc
add
and
add
add
and
js
or
adc
ja
pop
add
das
add
sub
adcl
sub
or
orb
pusha
or
pop
add
das
add
inc
add
and
mov
mov
or
adc
xor
add
das
add
inc
add
xor
add
lahf
jmp
and
add
push
add
add
add
scas
add
or
add
push
add
cmp
add
push
or
lcall
and
daa
cmp
add
add
inc
add
cmpsl
add
or
add
push
add
cmp
inc
inc
add
loope
adc
sub
sub
mov
cmp
or
dec
mov
scas
and
mov
dec
adc
mov
in
and
adc
bound
pop
mov
mov
mov
adc
inc
or
faddl
mov
inc
add
mov
adc
addb
xchg
adc
sbb
invd
jp
or
or
or
or
or
sbb
js
clc
mov
cmovo
or
push
or
inc
add
str
lock
adc
lock
xor
inc
add
mov
inc
add
sub
adc
subl
dec
fsts
ljmp
loopne
rcl
in
inc
add
and
sub
ret
loope
push
mov
addr16
or
shll
or
mov
ss
add
jae
xor
jg
push
add
je
ja
mov
rolb
inc
daa
push
add
push
vpmacssdql
xchg
adc
dec
ret
mov
mov
mov
adc
rolb
pusha
test
xchg
inc
mov
adc
clc
inc
sbbl
mov
and
adc
xor
inc
adc
clc
add
and
adc
and
adc
mov
adc
adc
mov
and
js
mov
xlat
inc
push
pusha
and
adc
xlat
and
xchg
adc
push
inc
sti
adc
add
add
cmp
add
shlb
add
push
add
adc
xchg
add
push
add
jno
dec
add
push
add
loopne
and
sub
add
call
adc
lret
loopne
adc
and
adc
iret
adc
clc
sbb
mov
and
inc
jns
and
clc
dec
and
daa
imul
mov
adc
and
add
popl
inc
inc
pusha
push
inc
aas
adc
add
jg
clc
loop
popl
adc
cmp
add
js
fsts
clc
jo
pop
add
mov
test
xchg
xor
add
loopne
xchg
add
push
add
stos
gs
or
add
or
jecxz
adc
das
cmp
mov
add
pusha
pop
and
sub
jo
mov
and
push
xor
add
adc
pusha
add
adc
bound
adc
jo
push
adc
lock
add
incl
push
add
decl
cmova
sub
add
mov
add
daa
add
dec
add
ja
xor
xor
add
and
adc
daa
add
pusha
sub
cmp
and
inc
adc
int3
jae
sub
add
inc
adc
sub
add
inc
adc
daa
adc
inc
push
adc
xchg
sub
inc
adc
sub
add
lock
add
movl
xorb
or
adc
add
add
movups
inc
movlps
push
xchg
cltd
pusha
adc
or
inc
add
add
inc
push
popa
add
add
fdivl
adc
add
inc
sub
dec
subb
ds
xor
add
inc
add
ja
outsb
subb
push
inc
das
adc
das
adc
dec
add
das
add
xchg
popa
fcoms
add
inc
and
dec
inc
and
or
and
adc
inc
and
push
rolb
cwtl
or
inc
pop
adc
sub
add
xchg
adc
xorb
sub
add
inc
rcll
mov
cmpb
pusha
adc
das
add
dec
inc
pop
adc
popa
cmpb
daa
add
inc
inc
jge
andb
pop
mov
push
inc
sub
sub
push
inc
mov
bound
or
adc
orb
inc
jae
jb
daa
adc
inc
daa
loope
adc
orl
adc
popa
aas
adc
pop
and
inc
inc
movups
unpckhps
insl
mov
or
adc
dec
add
add
fcoms
push
fs
mov
add
sub
adc
adc
and
sbb
bound
stos
mov
mov
sbb
pop
jp
jo
outsb
arpl
or
test
repz
adc
push
dec
ret
or
add
pop
sbb
add
incl
andl
add
inc
pop
push
or
jmp
rcrb
add
push
aas
inc
push
adc
add
inc
sbb
mov
add
sbb
adc
sbbb
addb
add
xchg
adc
orb
ss
adc
mov
inc
add
add
add
add
sub
add
xchg
add
cld
xor
adc
add
add
inc
push
pusha
ja
adc
lods
sub
daa
add
dec
pusha
add
adc
andb
pop
push
bound
sub
push
sub
add
int3
inc
and
adc
pusha
sub
pusha
daa
adc
daa
add
xor
daa
adc
andb
cld
pop
gs
pusha
daa
adc
daa
add
pop
shlb
add
daa
adc
andb
dec
and
shlb
xchg
inc
daa
adc
daa
adc
andb
fisttpll
pop
add
sub
shrb
add
mov
sub
inc
and
and
pop
pop
pop
add
gs
sub
add
add
notl
ltr
sbb
addb
mov
mov
out
xchg
pusha
aaa
adc
xchg
add
mov
sub
adc
add
jg
outsl
loopne
adc
rolb
adc
inc
mov
arpl
mov
adc
sbb
add
add
push
adc
roll
outsb
js
mov
sub
loopne
adc
add
sti
add
cld
add
mov
sti
add
adc
scas
adc
add
add
ror
add
jno
in
sbb
push
aaa
adc
add
out
sbb
roll
loopne
adc
add
aaa
and
pusha
cltd
xor
add
xchg
sub
add
orb
aaa
sbb
mov
pop
fisttpll
add
xlat
adc
inc
fwait
adc
and
adc
addr16
push
adc
add
andb
sub
aaa
adc
inc
sti
adc
loopne
adc
add
sbb
addb
imul
add
daa
adc
add
add
adc
daa
pusha
addr16
testb
loope
adc
add
adc
daa
daa
out
sbbb
cmc
add
in
adc
es
add
pop
lret
or
xor
jne
dec
or
adc
fisttpll
dec
dec
cmp
jmp
jae
es
add
push
adc
or
pop
jne
xor
xlat
add
xor
imul
add
inc
sbb
adc
inc
add
add
arpl
adc
adc
jg
jo
cltd
cmpsl
pop
adc
inc
popf
fs
adc
adc
fwait
sub
adc
jnp
adc
das
jnp
adc
jnp
aaa
add
jnp
fs
pop
pusha
jnp
dec
add
daa
jnp
adc
pop
jnp,pn
adc
jnp
dec
daa
addl
jnp
add
jnp
dec
add
daa
jnp
adc
push
jnp,pn
adc
jnp
dec
das
jnp
adc
jge
jnp
dec
add
jnp
loop
adc
and
jg
test
inc
aaa
mov
dec
adc
adc
pop
pusha
pop
adc
mov
inc
adc
inc
and
pop
andb
sbbb
mov
push
sub
sub
adc
jno
or
popa
subb
ljmp
add
movups
inc
movups
push
pusha
jae
jle
push
push
aam
and
mov
jns
daa
inc
std
adc
pop
add
testl
add
pop
add
or
xchg
mov
add
add
add
adc
jbe
inc
pop
adc
pop
sub
add
inc
add
daa
sub
pop
adc
dec
outsl
popa
pop
adc
add
xlat
adc
sub
add
adc
adc
inc
and
dec
and
cwtl
loopne
loopne
adc
and
cmp
adc
and
adc
mov
mov
ret
adc
add
lret
pop
jne
test
dec
add
inc
inc
adc
push
das
push
add
jnp
mov
add
out
adc
inc
stc
pusha
jg
cmpb
jle
inc
out
jg
adc
cmpb
xor
adc
cmpb
add
jg
in
adc
inc
inc
adc
add
outsl
add
cmpsl
add
inc
push
sub
add
sub
xchg
adc
inc
mov
inc
das
mov
push
pusha
mov
and
adc
and
adc
outsb
jg
jg
dec
adc
add
add
jnp
loopne
adc
adc
das
sub
add
roll
mov
das
ret
add
add
mov
add
add
lcall
lret
lgdtl
ljmp
pop
ds
dec
mov
inc
push
ds
jne
jp
jge
add
xor
adc
dec
sti
adc
add
pop
adc
push
and
inc
and
inc
popa
adc
filds
adc
imul
sub
cmp
cmpb
and
lods
sub
sub
add
ja
stc
inc
rcll
or
pop
das
out
add
xchg
inc
inc
adc
inc
out
adc
sub
add
mov
mov
adc
cmp
shlb
scas
or
pusha
add
jne
bound
pusha
iret
daa
stos
or
add
lahf
adc
add
xlat
test
repz
jle
sbb
xor
adc
pop
adc
add
and
pop
xor
daa
cmp
add
ja
adc
inc
fwait
pusha
add
arpl
push
popa
xchg
pop
or
testl
or
cmp
cmp
std
mov
bound
aaa
sub
inc
roll
int
enter
outsl
sub
and
outsl
inc
xor
jb
movups
add
adc
aaa
adc
push
pop
adc
inc
add
aaa
add
jg
adc
and
xor
or
jecxz
adc
inc
inc
xor
or
adc
push
add
shrb
jg
adc
and
aas
adc
dec
adc
adc
add
adc
inc
pop
adc
and
sub
insb
inc
or
inc
inc
add
sbbb
inc
cmp
jnp
dec
add
pusha
pop
adc
orl
jge
inc
adc
adc
mov
adc
inc
dec
es
add
ret
add
mov
pop
sbbb
xchg
or
sub
mov
adc
push
pusha
adcl
es
adc
rolb
adc
add
rclb
dec
mov
add
and
add
outsl
add
pop
sub
add
dec
or
xchg
add
dec
dec
out
adc
and
loopne
loopne
adc
sub
adc
jbe
jbe
dec
loopne
adc
and
adc
pop
out
outsl
add
daa
adc
dec
add
pop
dec
push
gs
dec
add
fs
iret
inc
and
loop
loop
call
int
ljmp
add
inc
sbb
or
icebp
daa
aaa
add
push
add
cmp
push
adc
xor
add
dec
sbbb
repz
sbb
adc
inc
out
add
popl
add
insb
mov
and
adc
inc
jae
sub
push
add
loopne
pop
push
addr16
dec
sub
push
or
repz
add
iret
test
icebp
add
add
add
pop
or
push
sbb
add
or
push
bound
sti
jl
jle
dec
das
add
jbe
fs
dec
add
or
lds
xchg
test
lea
insb
xchg
pop
xor
xor
pop
or
xor
add
push
mov
xchg
pop
in
test
xchg
out
mov
ja
adc
inc
iret
adc
test
rcll
add
xchg
push
inc
adc
orl
gs
pusha
adc
add
incl
adc
lret
jp
jp
daa
add
adc
pop
daa
pop
or
pusha
mov
xor
inc
outsl
adc
test
loop
pusha
arpl
arpl
mov
sbb
nop
xchg
pop
sub
jp
pop
popa
adc
adc
in
mov
mov
lea
pop
test
icebp
popa
and
popa
sub
sbb
insb
mov
cwtl
repnz
stos
mov
jns
xchg
jbe
adc
clc
jbe
pop
test
push
cmpsl
adc
add
and
pusha
cltd
sbb
sbbb
sub
lcall
mov
adc
xor
add
adc
stc
adc
or
push
bound
cmp
std
nop
mov
adc
sub
sub
sub
jle
xor
imul
add
adc
xor
add
movsl
arpl
jae
push
adc
adc
cli
push
loopne
sbb
cmp
push
out
push
std
orb
inc
imul
pop
test
jb
add
bound
adc
mov
xchg
push
fldl
adc
gs
push
adc
pusha
movhps
add
testl
mov
mov
dec
adc
test
xor
daa
add
jo
push
pop
pusha
daa
adc
and
dec
sbb
inc
fistps
xor
sub
jbe
pop
es
pop
pusha
xchg
adc
nop
jmp
or
xchg
addl
adc
add
add
or
daa
add
arpl
pop
adc
sub
add
in
pop
mov
add
mulb
xchg
cmp
cmp
adc
lea
pop
mov
push
or
pop
xchg
test
jg
cmp
cmovb
popa
mov
mov
in
adc
mov
cli
push
test
lea
or
push
arpl
js
and
add
sarl
jno
test
push
outsb
add
pop
orb
pop
mov
lds
sti
mov
pop
or
sbbl
iret
jle
mov
dec
mov
pop
das
das
add
cltd
push
mov
cmp
pop
das
ljmpw
adc
bound
aas
add
sbb
xor
push
mulb
push
pop
jne
push
mov
icebp
fs
outsl
xor
cmp
pusha
iret
sbb
mov
push
cltd
push
jns
daa
inc
mov
pusha
lds
or
gs
scas
nop
testb
adc
gs
arpl
loopne
addr16
adc
adc
test
dec
adc
addr16
andb
daa
mov
adc
inc
cmp
pusha
xlat
adc
xor
loope
cmc
add
or
icebp
adc
test
adc
aaa
adc
sub
bound
ftst
fucom
pop
popa
mov
sub
pop
popa
mov
test
es
push
test
pop
push
stos
mov
fnstsw
xor
inc
adc
xchg
sub
sub
push
andb
gs
sbb
jbe
inc
popa
adc
inc
jae
or
movsl
jae
sbb
pop
roll
std
add
in
fbld
push
pusha
loopne
adc
gs
adc
dec
imul
stos
mov
adc
sub
push
jno
stos
dec
fisttpll
push
xor
add
add
sub
mov
repz
jbe
dec
adc
jp
flds
adc
xlat
add
sbb
sbb
stc
pop
jbe
adc
add
xchg
add
push
add
mov
daa
fs
fucom
pop
adc
push
or
jnp
stc
pop
popa
mov
mov
ret
adc
sub
add
and
popf
add
add
orl
adc
xor
or
sub
add
sub
add
or
adc
and
inc
sub
add
pusha
adc
and
and
pusha
adc
push
dec
sub
add
and
sub
add
add
and
mov
sbb
push
push
push
xor
mov
mov
movzbl
mov
and
shr
je
dec
je
lea
inc
shl
mov
movzbl
inc
sub
dec
sub
jmp
shl
lea
inc
mov
movzwl
sub
dec
add
jmp
shl
inc
mov
and
add
shr
jae
inc
mov
add
jmp
test
je
jmp
push
mov
mov
rep
xor
pop
jmp
mov
pop
pop
pop
ret
mov
pop
ret
jmp
push
push
jmp
add
ret
jmp
adc
sbb
pusha
or
add
adc
jns
sbb
adc
add
call
mov
push
adc
push
inc
and
cmp
inc
or
adc
out
jmp
ret
ret
add
push
pop
inc
or
adc
pop
pop
sub
xor
and
jmp
test
jmp
adc
adc
adc
in
inc
pop
adc
pusha
and
pushf
jmp
sbb
ret
gs
pusha
scas
adc
and
jns
jmp
jp
xchg
pop
cmp
jne
or
inc
add
and
adc
sub
out
pop
xor
jmp
adc
adc
or
add
rol
jae
popf
jmp
add
jno
pusha
or
jmp
jmp
add
pop
inc
fs
or
inc
or
mov
pop
xor
jmp
adc
jmp
sbb
cmp
add
jmp
adc
scas
and
pop
xor
cmp
jmp
addl
adc
pop
push
pop
sub
add
and
push
adc
addr16
cmp
jmp
movb
pop
push
adc
and
add
lds
mov
sbb
sbb
nop
pusha
daa
sbb
test
pop
add
push
mov
jmp
int
sub
push
pop
ret
add
rcrb
test
push
mov
adc
inc
mov
add
movups
jg
adc
xchg
popa
imul
inc
das
sbb
movb
pop
push
inc
cmp
rol
and
jmp
ret
push
adc
and
shr
add
pushf
add
inc
adcb
jmp
push
xchg
mov
pop
add
or
add
repnz
scas
inc
imul
fs
mov
inc
add
adc
adc
mov
push
bound
adc
ret
pusha
stos
adc
add
mov
push
adc
inc
inc
push
mov
pop
push
mov
adc
inc
adc
mov
adc
inc
imul
jmp
jno
sbb
and
jb
cmpsb
or
adc
jmp
add
in
inc
popf
adc
jmp
add
push
call
push
sbb
test
jmp
mov
pop
push
adc
push
mov
inc
int3
adc
push
adc
push
pop
rol
call
lret
pusha
push
sub
sbbb
add
push
adc
inc
sub
adcb
adc
adc
adc
inc
popf
call
adc
sbb
adc
xor
or
adc
adc
adc
das
inc
loop
jle
pop
add
add
sbbb
inc
xor
rol
add
jmp
add
aad
ret
jb
mov
or
pushl
pushl
jmp
jnp
ja
jmp
ss
inc
les
jo
push
inc
pushf
adc
pop
push
add
push
xchg
cld
inc
sub
jmp
and
add
clc
inc
or
adc
inc
enter
add
inc
add
jmp
ret
movb
pop
add
xchg
jmp
aam
sbb
sbb
in
xor
push
fmuls
andb
adc
pop
rol
sub
push
adc
inc
pop
pop
rolb
lret
stos
es
lock
pop
pusha
push
sub
inc
enter
enter
cs
je
xor
push
aad
jns
es
push
push
pop
or
jmp
push
out
bound
icebp
adc
pop
pushf
push
lcall
push
inc
push
inc
arpl
movb
movsb
pop
adc
sbb
adc
test
inc
scas
adc
mov
adc
gs
pusha
push
sbb
xor
rolb
subl
adc
inc
inc
mov
push
imul
les
rol
or
test
xchg
orl
pop
add
pop
rorb
xchg
inc
xchg
adc
pop
inc
xor
and
jmp
test
adc
pop
arpl
push
arpl
jmp
call
jmp
push
repnz
add
or
add
test
sbb
add
jmp
cli
adc
pusha
addb
adc
pusha
dec
adc
ret
push
inc
jecxz
push
mov
call
push
adc
xchg
add
jecxz
push
push
pop
or
rol
jmp
rol
test
xchg
gs
adc
push
inc
hlt
adc
xchg
inc
push
adc
inc
lds
sahf
notb
js
push
pop
call
call
add
mov
add
dec
fisttpll
movb
pop
add
add
push
adc
and
test
jmp
adc
or
xor
cmp
jmp
mov
push
mov
arpl
inc
adc
jmp
push
adc
inc
loopne
push
mov
inc
mov
fists
sbbl
iret
lret
hlt
sub
and
jmp
mov
push
call
jmp
ficoms
pop
andb
rcll
xor
xor
adc
fldl
adc
in
push
enter
push
jle
mov
adc
test
inc
test
and
jmp
jle
xor
xor
push
adc
inc
jecxz
sub
add
mov
jmp
mov
pop
in
push
inc
sbbl
rol
or
jmp
ret
add
test
jl
std
popa
dec
adc
pusha
sti
adc
inc
sbb
adc
bound
rclb
dec
jne
mov
out
push
sbb
imul
push
shlb
jmp
add
faddl
out
call
add
push
push
jmp
je
adc
xlat
lods
add
mov
add
mov
push
adc
inc
insl
adc
call
jnp
pushf
push
pop
and
jmp
popf
jmp
push
enter
fsubrp
pop
sbb
xchg
inc
aas
adc
test
sbb
pushf
xchg
mov
fs
push
movsl
adc
ret
jmp
jne
mov
push
jle
mov
das
xchg
inc
or
fildl
bound
add
xor
rol
and
or
call
mov
adc
pusha
mov
inc
lds
lods
call
call
test
jmp
je
andl
xchg
adc
mov
subb
dec
fs
adc
sahf
push
adc
xor
cld
pusha
fildl
adc
adc
or
arpl
fsubs
adc
xorb
jp
jmp
sbb
popf
pop
push
push
jmp
and
add
call
add
ljmp
cmova
ret
pop
scas
or
push
pop
sub
jmp
ret
inc
add
jno
mov
repnz
call
sbb
push
ret
pop
mov
pop
jmp
pop
inc
in
xor
arpl
dec
inc
adc
dec
sbb
fldl
and
movsb
adc
fistps
pusha
add
gs
adc
add
sub
adc
inc
daa
add
sub
and
add
jmp
lea
push
iret
pop
push
bound
adc
xor
jae
hlt
inc
andl
call
jmp
jb
adc
enter
rolb
push
pop
jmp
pushf
push
inc
into
adc
jmp
movb
mov
inc
in
cmp
jnp
pop
imul
gs
sbb
mov
xchg
bnd
jb
lods
push
cmc
pusha
adc
adc
xorb
andl
test
fs
cmp
adc
mov
cld
adc
inc
inc
in
inc
jne
mov
add
add
rol
or
xor
jmp
movb
pusha
cltd
push
negl
rclb
popa
in
sbb
push
pop
call
ret
jmp
jmp
add
imul
call
push
mov
inc
and
sub
adc
sbbb
cmp
xchg
inc
xchg
pop
push
push
jmp
pop
jmp
call
push
cwtl
adcl
iret
mov
inc
popa
test
jmp
push
adc
loopne
fs
push
inc
xchg
ret
add
arpl
pusha
or
popf
imul
dec
add
add
pop
or
jbe
loop
add
sti
xor
jmp
and
arpl
inc
adc
adc
pop
adc
es
mov
sbb
push
pop
and
jmp
and
jne
push
call
jmp
loop
pop
adc
sti
bound
inc
pop
adc
in
push
jmp
test
mov
push
hlt
repnz
adc
mov
jmp
mov
imulb
call
adc
mov
jmp
not
jmp
jl
jmp
jmp
or
cltd
xor
jmp
push
and
add
mov
push
push
pop
jmp
shr
jmp
xchg
shll
mov
nop
inc
mov
mov
mov
adc
jmp
mov
sub
mov
jg
jb
jno
push
mov
inc
xor
push
call
mov
jle
les
jmp
mov
mov
mov
jmp
dec
adc
lcall
adc
bound
adc
lea
inc
popaw
ds
push
push
jmp
adc
or
movsb
add
call
jmp
adc
push
jmp
adc
adc
jecxz
ljmp
lods
push
mov
dec
or
sbb
or
ret
push
sub
rol
add
jmp
dec
adc
pusha
sub
push
mov
imul
add
jmp
shll
jb
pop
and
ror
jmp
mov
jmp
inc
sub
adc
lock
call
jmp
jmp
adc
jmp
mov
jmp
jmp
sbb
xchg
mov
push
cltd
pop
and
sub
jmp
mov
mov
adcl
mov
cmpsl
sub
dec
cmpsb
adc
gs
adc
shr
dec
sbbl
lret
adc
push
adc
xchg
adc
add
jmp
push
xchg
inc
add
adc
cld
inc
daa
adc
adcl
xor
add
call
jmp
xor
pop
test
je
jmp
add
push
pop
push
cwtl
adcb
not
jmp
jne
adc
popf
add
jmp
push
mov
jmp
pop
jmp
push
pop
rol
push
nop
inc
jno
push
inc
jge
push
push
pop
call
jmp
jmp
xor
jmp
pushf
inc
mov
mov
sub
add
jmp
mov
add
not
ror
xor
sub
add
push
cld
inc
repnz
lds
arpl
popf
or
cs
adc
in
pusha
adc
xchg
adc
mov
inc
sti
adc
scas
sbb
pop
call
jmp
dec
aaa
mov
sbb
orb
pop
jmp
push
jmp
lcall
sub
mov
push
push
fwait
sub
jmp
jne
lds
mov
adc
pop
movb
jecxz
psubsw
push
popa
test
push
mov
gs
adc
adc
mov
out
jmp
jmp
shll
jne
push
jmp
ret
insb
adc
xor
adc
adc
and
imulb
cmp
outsl
test
adc
insb
adc
or
or
and
push
sbb
outsb
or
push
xor
push
jmp
ret
ret
call
jmp
cltd
jmp
push
jmp
sbb
insl
or
xor
add
jmp
fidivs
imul
push
push
push
fwait
stos
stos
jmp
push
adc
test
adc
push
cmc
inc
dec
adc
leave
or
out
js
rol
jmp
push
sbb
adcl
test
push
ret
pushf
mov
push
sbb
pop
xchg
and
adc
lock
mov
jne
pop
push
bound
lds
jne
mov
adc
pusha
pop
int3
dec
adc
add
adc
or
push
push
and
and
adc
popa
push
cmc
out
addl
dec
xchg
and
and
mov
mov
popa
and
xchg
cmp
jmp
rol
push
mov
jo
dec
imul
cltd
ss
jmp
jns
outsb
inc
ret
jbe
jp
jmp
call
inc
mov
pop
add
push
movsl
jmp
addr16
mov
cmp
sub
les
jmp
push
mov
pop
pusha
cmp
mov
inc
adcl
outsb
test
sbb
mov
or
adc
ret
adc
mov
adc
pop
push
lds
sbb
mov
pop
mov
jmp
push
mov
inc
cwtl
adc
call
adcb
pop
stos
and
inc
inc
out
cmp
jbe
cli
push
mov
jmp
push
call
jmp
cmp
mov
adc
adc
call
push
fcoml
jmp
cmp
jmp
adc
mov
dec
scas
adc
jmp
add
js
sbb
xor
jmp
add
lahf
pusha
mov
xor
xor
sbb
mov
or
es
jb
cltd
jmp
adc
psubsw
and
xchg
dec
push
test
adc
mov
adc
pop
iret
mov
adc
mov
adc
jmp
call
sub
add
out
movsb
loop
xor
add
jmp
lods
imul
in
mov
jmp
mov
andb
test
sbb
jmp
push
mov
inc
jge
call
icebp
adc
mov
push
inc
and
insb
pop
adc
jmp
je
jmp
test
sbb
testl
adc
push
pop
xor
jmp
jp
cmpsb
adc
fbld
push
xlat
daa
push
and
dec
inc
push
adc
outsb
fsts
pop
mov
jmp
adc
mov
inc
xor
fisubrl
cmp
pop
jmp
sbb
jmp
adc
fsubrs
push
lcall
vpsubsw
movsl
pop
mov
aas
jno
adc
adcb
xlat
insl
stos
pop
xchg
jmp
inc
sub
adc
push
pop
xor
and
jmp
xchg
mov
push
gs
cli
pop
xor
jmp
ret
bound
pop
xchg
stos
aaa
pop
or
jmp
movb
pop
scas
loopne
push
test
push
adc
adc
push
repz
adc
jmp
repnz
jns
daa
adc
gs
rclb
or
mov
pop
dec
xor
push
dec
or
push
pop
rolb
std
jmp
lahf
adc
xchg
mov
fs
adc
popa
movsb
cmpsb
or
imull
imul
pop
dec
fidivrs
sbb
movsl
jo
ret
fwait
sub
jge
ret
pop
sti
jbe
xchg
dec
push
adc
sub
test
call
pusha
std
pop
push
imul
pop
push
mov
fbld
adc
pusha
push
adc
inc
fbld
adc
jp
iret
js
stos
push
mov
push
in
adc
mov
sbb
rorl
xchg
inc
or
rol
jmp
roll
adc
push
add
or
js
jmp
ja
sub
adc
jmp
dec
push
cmpsl
xor
jmp
push
call
or
xchg
call
notb
jbe
adc
arpl
rcll
movl
mov
pop
out
pop
adc
leave
adc
call
jb
xor
pop
movb
pop
and
xor
and
jmp
repz
adc
push
leave
inc
ficoms
ret
jmp
adc
push
pop
sub
push
mov
lea
popa
mov
inc
enter
pop
dec
xor
or
jne
jmp
sbb
xchg
jmp
xor
cld
jmp
call
arpl
adc
shr
mov
enter
jmp
pop
adc
inc
sbb
xor
cmp
jmp
add
push
jmp
shl
jmp
add
fisubs
jmp
jmp
aad
call
pop
push
call
jmp
xor
push
out
adc
insl
xchg
jne
bound
sbb
jbe
ficompl
adc
frstor
adc
hlt
sbb
mov
lds
adc
jno
pop
sub
jmp
cmpsb
adc
xchg
push
push
push
add
or
out
cli
xor
xor
jmp
jae
cmpb
sub
pop
adc
inc
push
inc
outsl
adc
test
add
movb
pop
sub
and
call
mov
out
leave
adc
test
xchg
sub
andl
add
adc
jmp
pop
add
popf
inc
icebp
adc
jmp
pop
adc
xchg
stos
addb
iret
popa
pop
inc
and
lea
inc
jp
adc
push
jmp
add
dec
pop
adc
ret
arpl
adc
sub
lahf
pop
sub
jmp
jmp
cltd
jmp
in
mov
jmp
push
sbb
pop
or
jmp
push
mov
jle
rclb
addr16
ret
arpl
push
pop
jmp
shr
jmp
movb
pop
mov
adc
jmp
rol
pusha
mov
jmp
stos
adc
pop
fcomps
jmp
adc
fwait
mov
pop
or
add
jmp
enter
sbb
call
jmp
push
push
dec
push
sbb
scas
push
cmp
ja
mov
cli
or
add
jmp
push
mov
xchg
sub
movsb
in
adc
pop
push
loopne
dec
dec
pusha
rol
xor
jo
jmp
mov
lcall
popa
mov
adc
push
testb
ret
fs
jmp
call
inc
mov
daa
sbb
mov
in
push
aad
cmpsl
popa
jae
fsubrp
lods
leave
dec
cmpl
or
and
rorb
inc
lahf
adc
je
jbe
jmp
aam
mov
mov
mov
push
jmp
add
pushf
pop
mov
imul
xchg
andb
jmp
dec
adc
mov
inc
or
push
and
test
mov
inc
push
pop
test
jmp
movb
pop
add
lahf
bound
push
add
xor
adc
repnz
push
repnz
ret
adc
pusha
test
adc
clc
arpl
sbb
jmp
ret
jmp
push
push
mov
inc
mov
adc
lods
pop
adc
add
test
xor
inc
inc
jb
pusha
aad
pop
arpl
adc
push
adc
out
popa
adc
adc
outsl
jl
je
mov
jmp
andl
mov
sahf
sbbl
std
adc
and
adc
jmp
jne
test
sub
jmp
push
push
mov
loopne
jae
out
or
fcoml
add
cmp
add
leave
test
jmp
in
adc
add
and
lds
adc
arpl
pop
cmp
jmp
add
push
aas
mov
and
call
jmp
adc
mov
sbb
in
jnp
stos
adc
leave
or
pushf
mov
adc
and
xchg
loopne
sbb
push
jno
adc
push
movsb
inc
push
xchg
ret
mov
push
adc
popa
adc
jmp
stos
adc
clc
sbb
jle
jg
inc
aas
lret
xchg
inc
mov
nop
js
add
jp
adc
jmp
sahf
popa
dec
adc
adc
mov
lds
lret
inc
push
sub
ret
adc
adc
cmp
jmp
push
push
push
pop
or
call
pop
mov
xor
popa
jns
jmp
xor
jmp
movb
pop
mov
repnz
arpl
decb
mov
adc
shrl
mov
adc
imul
call
push
outsl
xorb
test
dec
adc
pop
pusha
ficoml
lea
adc
xchg
in
inc
insb
shr
jmp
lods
push
enter
inc
call
movb
pop
push
dec
mov
movsl
mov
sub
addl
or
adc
pop
inc
adc
pop
add
mov
icebp
les
aad
rol
jmp
push
into
popa
pop
adc
imul
sub
jmp
mov
mov
call
jmp
ret
sub
pusha
dec
adc
jmp
add
test
pop
jmp
jne
enter
sub
jmp
ret
jmp
adc
shlb
sub
inc
sahf
outsl
lret
adc
test
adc
jns
popa
adc
cmp
adc
and
inc
daa
adc
rclb
mov
push
mov
push
adc
inc
mov
call
push
arpl
inc
sub
adc
bound
mov
std
cs
dec
adc
adc
addb
leave
inc
test
addr16
sbb
add
test
jmp
push
out
add
add
faddl
jmp
adc
add
mov
cmc
pop
jmp
jl
xor
xchg
lods
adc
xor
adc
andl
pop
outsl
add
or
mov
cmpsb
push
xlat
mov
xor
testb
push
mov
jg
rcll
jmp
sub
jb
and
mov
jbe
adc
scas
mov
rclb
aas
call
jmp
jmp
pop
adc
xchg
adc
pop
call
jge
repnz
push
push
roll
adc
pop
add
sar
and
int
shll
adc
pusha
sub
add
xlat
fisttpl
adc
cwtl
inc
insl
adc
mov
dec
adc
sahf
insl
lea
rcrl
dec
hlt
insl
inc
jg
pop
add
jmp
push
mov
dec
arpl
adc
fimuls
call
lds
testl
call
xor
mov
adc
inc
adc
push
pop
push
mov
adc
rolb
push
push
push
pop
xor
and
xchg
jmp
lea
je
int
adc
ret
ficoms
in
fstl
call
aaa
inc
pop
adc
fsubrp
fwait
bound
jae
adc
pusha
or
sbb
jmp
dec
into
mov
repz
sahf
adc
out
aad
ret
jecxz
mull
adc
sbb
add
push
push
dec
jbe
scas
mov
or
mov
jmp
push
or
call
jmp
std
sbb
push
mov
pusha
sbb
inc
add
mov
je
adc
rorb
mov
add
outsl
jle
push
call
test
push
add
mov
push
popl
mov
or
mov
jne
adc
rolb
inc
adc
sbb
add
or
je
and
add
adc
pop
adc
addl
pushl
call
xchg
mov
addl
jmp
push
mov
call
pop
pop
mov
pop
popa
bound
mov
add
test
inc
add
inc
es
inc
popa
outsb
daa
movl
movl
movl
adc
xor
push
mov
adc
push
inc
adc
lea
inc
movsb
adc
and
movsl
pusha
ja
das
adc
mov
mov
adc
incl
inc
or
add
inc
push
adc
mov
adc
mov
lods
sbb
mull
and
sbb
fisttpll
and
sahf
lret
jo
mov
pop
movb
fldcw
scas
mov
jno
pop
or
pop
pushf
adc
xchg
outsb
xor
out
jg
ljmp
sbb
in
dec
cmp
fmull
insb
out
insl
movsb
insb
idivl
push
and
push
xlat
int
es
push
jge
fildl
cmp
inc
lock
out
test
das
jns
lock
fidivrl
out
insb
test
push
shll
das
aaa
dec
inc
or
dec
xchg
push
ja
xchg
pop
jmp
lock
lret
or
shr
sub
stc
dec
popa
dec
int
pop
subb
add
jmp
dec
mov
push
inc
push
jno
mov
mov
xor
out
jle
ja
in
jmp
mov
cltd
mov
cli
mov
mov
mov
addr16
mov
xchg
push
xchg
xor
or
insb
cld
popa
loop
jmp
iret
stos
or
add
stos
mov
cmp
pop
adc
jne
daa
ret
mov
shr
pop
in
mov
or
or
mov
add
xor
sti
mov
cltd
in
fwait
mov
imul
sub
ret
dec
adc
into
dec
das
stc
add
shll
jbe
mov
hlt
xor
cwtl
pop
inc
and
jnp
fcompl
xchg
cmp
in
out
int
mov
dec
dec
sbb
add
jb
aam
je
mov
and
xor
push
aaa
or
cmp
jb
in
aas
pop
lds
or
aam
fsubl
and
ljmp
pop
aaa
xor
pop
jmp
les
jecxz
movsl
in
xchg
shrb
cmp
icebp
cld
push
mov
mov
sarb
push
pop
xor
sahf
stos
inc
cmp
dec
lods
adc
sbb
int3
pop
repz
or
dec
jb
inc
mov
mov
mov
jno
fldt
mov
adc
mov
sbb
xor
daa
stos
jbe
cmc
imul
jp
pop
in
pop
aas
cmp
enter
pop
jae
out
in
xor
hlt
mov
inc
jge
adc
xor
ja
fldt
or
bound
lahf
sbb
or
mov
cmpb
pop
inc
cmp
xor
shrb
nop
push
dec
mov
dec
clc
test
jbe
xchg
ss
adc
mov
pop
jle
push
jle
sub
cli
add
aam
gs
icebp
loop
imul
xchg
jbe
in
jbe
icebp
adc
sti
jmp
dec
jno
jg
std
push
ret
aam
adc
push
fistps
xchg
fldcw
out
or
sub
in
jg
pushf
outsb
add
or
jmp
sbb
in
int
lods
test
adc
das
div
cmp
push
cmp
mov
pop
cs
std
push
pop
insb
test
jns
push
int
cmp
mov
push
ja
test
insl
ja
lret
unpckhps
addl
and
jnp
ret
fildl
push
push
pop
out
sbb
mov
in
aam
loopne
stos
sbb
mov
jnp
pop
mov
mov
ret
adc
and
push
jne
mov
cmp
fidivl
insb
mov
jb
lret
clc
out
mov
test
int3
mov
std
sbb
and
sbb
cmp
cmpsl
cltd
push
adc
jge
mov
xor
pop
in
cltd
mov
mov
ret
jmp
fstp
in
hlt
and
mov
pop
mov
add
pop
hlt
sbb
popl
mov
or
pop
push
insb
jo
sub
ds
das
sbb
imul
fnsave
jne
jg
mov
push
fidivs
mov
mov
inc
xchg
fs
inc
push
xor
lahf
jg
iret
cmp
add
cltd
xor
push
daa
ret
add
jns
outsl
enter
mov
jp
decl
pop
bound
jmp
mov
aad
pop
adc
ror
out
add
fwait
inc
into
and
loop
dec
aam
iret
hlt
mov
push
imul
insl
xchg
push
aam
arpl
out
outsl
xorb
out
lds
inc
rclb
insl
repz
inc
ds
mov
lods
popa
cmpsl
std
push
movsl
dec
in
pop
jnp
cmp
xor
jne
movsb
mov
adc
js
test
dec
setbe
cmp
es
pop
in
jmp
sbb
pop
add
pop
push
sub
mov
jle
mov
sub
mov
pushf
repz
and
cs
fs
fucomp
gs
xchg
ja
arpl
jnp
jecxz
pop
mov
call
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
sbb
leave
nop
or
jmp
stos
idivl
adc
mov
out
xor
xor
cmp
loope
sub
push
mov
out
leave
and
cmp
pop
int
in
stos
jb
pop
lods
cmp
test
call
add
jmp
call
add
jmp
call
mov
push
cmp
push
adc
adc
push
and
adc
and
xor
or
or
pop
es
dec
or
xor
cmp
or
or
and
sub
xchg
cmpsb
mov
or
sbb
or
adc
adc
popa
sbb
xchg
adc
or
or
and
pop
addl
pop
or
adc
or
sub
adc
fiaddl
jp
js
or
inc
pop
and
and
mov
push
inc
sub
push
orb
sub
mov
add
adc
or
sbb
and
adc
or
push
or
sbb
or
pop
or
add
lcall
