push
call
ret
ret
test
mov
dec
jne
and
insb
mov
push
mov
xor
call
and
cmp
loop
iret
jecxz
jo
pop
mov
movsb
aam
jg
pop
ret
xchg
jbe
push
sbb
add
push
insl
cld
jmp
cmp
test
fwait
popf
add
mov
or
cmpsl
push
inc
dec
mov
inc
adc
in
add
scas
xor
leave
lcall
mov
fbld
mov
push
xor
jno
outsb
test
in
push
xchg
pop
test
sarb
popf
push
or
xor
test
faddl
repz
mov
mov
pusha
pop
cltd
mov
mov
mov
call
scas
cmpsb
ja
ds
dec
in
sbb
loope
sub
fldcw
movsb
inc
out
xor
push
xchg
arpl
jle
repnz
inc
inc
fistl
mov
cmp
mov
sub
mull
adc
fcoms
add
mov
cli
mov
push
fimuls
mov
popa
aas
les
fimull
add
and
pop
fstpl
faddp
and
andb
inc
push
cmp
sub
dec
cmp
loope
fs
cli
fistpl
mov
mov
or
int
mov
ds
sub
adc
pop
jmp
daa
outsl
out
inc
mov
fstpt
cmp
push
mov
sbb
shr
loope
out
test
sub
scas
xchg
jge
xchg
add
xor
icebp
leave
adc
add
pop
in
rcr
repnz
xlat
xchg
popf
lods
mov
lret
addr16
pusha
cmc
adc
mov
xor
or
loope
inc
add
pop
inc
cmp
jp
rcr
lock
movsl
push
into
push
int3
shl
repnz
push
push
add
mov
jae
cld
rolb
cmp
push
enter
test
out
sbb
cltd
imul
jl
mov
mov
cmp
fildl
gs
mov
jmp
movsl
dec
inc
pop
sahf
enter
cltd
sbb
fildll
dec
fiadds
push
jno
push
js
out
faddl
into
mov
loop
sub
insl
cmc
das
jle
sub
mov
sub
sahf
loopne
mov
adc
cmpsl
shrd
lret
xchg
pop
pop
push
dec
mov
xchg
sbb
lea
mov
cmp
pop
mov
sbb
mov
mov
repz
mov
push
dec
out
lods
outsb
pop
mov
cmp
sbb
xor
dec
cltd
adc
sarl
popf
loopne
inc
lds
sbb
pop
fnstenv
int
add
jno
mov
ss
xchg
sub
mov
cmp
inc
cmp
bound
arpl
pusha
addr16
sbb
add
sub
lea
jge
xor
or
mov
xchg
sbb
ljmp
vucomiss
je
inc
add
push
movsl
push
lds
inc
mov
cli
das
adc
fldl
fdivrs
fwait
and
sub
jbe
lds
mov
or
addl
mov
push
mov
mov
mov
and
pop
enter
loopne
fwait
push
mov
cmc
sti
dec
sbbl
sub
test
xchg
xchg
dec
xor
push
fdivs
fs
imul
fisubl
and
scas
cmp
add
in
jmp
gs
push
jp
and
ljmp
insl
mov
popf
daa
pop
out
in
sbb
cwtl
push
and
addr16
push
lods
xchg
mov
inc
fwait
daa
pop
sbb
sbbl
insl
in
into
jo
xchg
xchg
mov
dec
mov
ljmp
cld
and
mov
inc
cmp
mov
out
xor
jecxz
dec
xor
pop
aas
lret
repz
sbb
dec
in
mov
pop
xlat
aaa
adc
or
cmp
test
das
xchg
adc
add
lahf
xchg
dec
or
repz
outsl
hlt
sahf
not
scas
lods
jae
fucomp
mov
jp
xor
pop
jnp
cwtl
test
pop
jbe
fistps
je
and
leave
imul
rcrb
imul
xchg
mov
push
xor
mov
mov
cmp
cs
loope
inc
mov
mov
daa
lods
adc
enter
add
ja
mov
out
sarl
adc
push
iret
dec
push
sbb
jbe
lods
cli
inc
insb
adcl
daa
mov
adc
mov
clc
or
scas
rcrl
sti
jnp
pop
sbb
lret
lods
or
int
add
in
jmp
mov
and
test
dec
ds
jl
push
jge
pop
sbb
mov
pop
in
fcompl
adc
icebp
xchg
mov
out
xchg
jle
adc
out
push
scas
adc
sub
lcall
mov
insb
notb
add
and
cmp
add
mov
out
mov
js
jo
cwtl
pop
hlt
data16
cmp
mov
movsl
push
sbb
clc
ret
adc
insb
dec
movsw
cmc
sub
mov
movaps
sahf
pop
lock
jmp
repz
sbb
pop
adc
xor
add
lret
shlb
dec
sub
ficoml
mov
jl
rcrl
popw
fdivp
stc
inc
mov
loopne
into
sbb
pop
add
icebp
repz
push
ret
adc
ret
sbb
jg,pn
ret
mov
xor
mov
pop
or
ficompl
scas
je
jnp
xlat
fwait
int
scas
push
pop
and
filds
bound
loope
and
add
cmpsl
and
int3
cwtl
lea
movsb
and
and
jb
add
xchg
ss
add
mov
jg
lret
ret
xchg
cmpb
xor
jle
and
xor
pop
sbb
call
xor
or
mov
loope
xorb
andb
jbe
mov
hlt
push
fwait
xor
inc
cmp
je
jecxz
push
lds
daa
xchg
sahf
inc
pop
loope
lcall
xchg
ret
pop
addl
inc
jge
daa
dec
xor
xchg
scas
sub
or
out
insb
repnz
mov
outsb
sbb
mov
push
repz
mov
ja
sahf
push
test
les
inc
aas
sbb
inc
mov
mov
inc
pop
aad
imul
in
out
js
mov
lahf
pop
scas
das
adc
roll
loop
loop
mov
shrl
fiaddl
addr16
popf
ficomps
mov
sbb
lock
fcmovnbe
out
cmp
lret
fsubrl
into
adc
pop
sub
adc
outsb
sub
dec
jmp
mov
jecxz
or
mov
xchg
mov
stos
arpl
mov
xchg
cli
pop
divl
jp
loope
hlt
pop
and
stc
jne
das
stos
push
mov
pusha
cltd
imull
inc
mov
sub
cmp
xor
dec
lret
sarb
xchg
fistps
sub
adc
int3
shl
mov
dec
int3
jmp
insb
or
jno
aam
cmp
rep
jnp
xchg
cmp
testb
push
pop
repnz
aad
add
loope
mov
mov
leave
sbb
dec
xor
xchg
ja
mov
lds
mov
push
jo
xchg
addr16
fwait
adcl
or
mov
add
gs
popf
mov
xor
pop
sub
xchg
and
fdivl
insb
cli
mov
repnz
jae
cmp
mov
mov
jo
mov
popf
dec
repz
cltd
adc
scas
push
and
jb
out
leave
pop
mov
aaa
add
lds
in
loopne,pt
and
jo
cmp
imul
and
fwait
aaa
dec
or
mov
mov
out
and
ja
call
repnz
subb
and
int
dec
xor
in
int
aad
add
or
mov
jbe
std
iret
popf
inc
movsl
gs
xchg
ljmp
scas
pop
push
lret
mov
je
sub
mov
enter
inc
mov
inc
fwait
leave
pop
cmp
data16
and
pop
lahf
nop
or
sub
jmp
jecxz
sub
mov
std
lret
cmp
xchg
test
add
mov
or
clc
push
out
xor
cli
gs
xchg
sub
push
inc
ror
push
and
jecxz
js,pt
ffree
mov
inc
stos
mov
sub
ja
lods
fnsave
nop
insl
xchg
mov
push
dec
push
or
test
pop
scas
sub
mov
packuswb
ret
xchg
mov
mov
test
data16
and
enter
insb
das
jp
cmp
xchg
xchg
jo
xlat
adc
ljmp
xchg
xchg
mov
lods
aad
data16
adc
bound
cmp
cmpb
inc
xor
insb
mov
stc
push
xchg
vmovdqu
mov
cmpsb
test
sti
sub
lret
scas
dec
mov
sub
xlat
jnp
push
pop
in
test
mov
cmc
cld
mov
scas
xor
rolb
sarb
lret
jge
and
pop
sub
dec
lods
push
sbb
popa
cmp
ret
cmp
jnp
push
movsb
push
mov
jmp
adc
cltd
push
xor
je
cmpb
fs
sbb
scas
mov
fists
mov
popa
aad
mov
sbb
mov
push
iret
pop
jecxz
jns
inc
jo
pop
pusha
sub
test
push
dec
dec
test
ret
pop
mov
adc
test
shrb
sahf
adc
int
add
add
xor
lods
outsb
fisttpl
sbb
stc
push
gs
xor
loop
push
lods
loopw
mov
outsl
mov
pop
sub
cmpsb
jecxz
push
xchg
in
inc
enter
inc
dec
rcrl
dec
cs
jp
jg
iret
dec
xchg
mov
dec
ljmp
fs
dec
std
test
jmp
or
ja
inc
dec
aam
and
bound
jmp
pop
pushf
insl
sub
sub
jg
xchg
pop
ds
mov
xlat
or
fdivp
sbb
fs
jle
pushl
jg
lret
aam
and
mov
cltd
mov
dec
int
scas
mov
sub
adc
or
rclb
testb
std
and
add
mov
adc
scas
cmpsl
mov
lea
dec
jle
imul
in
push
jmp
das
jnp
ljmp
insb
jge
insb
pop
mov
movsb
pop
fmull
inc
xor
jnp
jl
sti
xchg
nop
inc
jns
and
imul
xor
push
mov
xchg
add
int3
stc
out
lret
enter
mov
mov
pop
mov
adc
mov
inc
adc
movsb
sbb
push
lret
mov
sbb
daa
jns
loopne
hlt
push
xchg
adc
or
sbb
loop
adc
mov
hlt
pop
jecxz
imul
mov
scas
xor
xchg
mov
jp
mov
lcall
movsl
lea
movsb
aam
aas
das
loope
cmpb
lds
in
mov
inc
das
pop
mov
push
jmp
xor
cmp
in
leave
lock
in
in
movsl
or
loopne
or
push
mov
stc
xor
iret
daa
adc
in
cld
adc
incl
xchg
bound
xchg
cmc
dec
repnz
clc
test
push
jns
fwait
call
push
popl
dec
sub
cmp
cmpsl
jle
rolb
stos
das
mov
movsb
xchg
inc
jns
jbe
and
pop
int3
idiv
sbb
xlat
loope
xor
adc
push
and
repnz
imul
cmp
or
repz
insl
aad
push
call
adc
and
cmp
roll
pop
fimuls
test
jne
cmp
add
xlat
ljmp
lock
and
mov
mov
imulb
loop
cmp
out
inc
pop
shrl
cmp
mov
andb
inc
xor
jo
test
fcmovu
inc
dec
pmaddwd
jl
mov
arpl
push
mov
push
dec
mov
cmp
movsb
cmp
lcall
pop
adc
mov
jge
sbb
insl
outsl
aaa
inc
mov
div
or
adcl
xor
cmpsb
out
jge
xor
adc
jge
inc
xchg
push
hlt
popf
and
jbe
push
sbb
movsb
int
xor
sub
jno
sub
fistpll
fcomps
insl
mov
popa
hlt
arpl
mov
sbb
sbb
mov
push
cmp
call
gs
add
cmp
cs
es
mov
push
cmpsl
or
mov
xchg
sbb
stc
push
mov
nop
daa
mov
pop
dec
mov
pop
outsl
pop
or
lcall
sub
sbb
das
sub
push
sbb
fists
sub
push
stos
cli
scas
mull
xchg
dec
jg
add
mov
pop
jbe
add
push
push
out
or
and
or
inc
cmpsl
mov
jb
enter
jae
into
or
jmp
inc
push
stos
sbb
sbb
dec
pop
jle
jnp
repnz
fnstenv
rorl
daa
xchg
xor
rcll
arpl
filds
ss
fnstenv
pusha
gs
fists
jge
mov
hlt
icebp
stos
xchg
sbb
cwtl
stc
sti
repnz
pop
or
dec
cmp
lea
jbe
cmpsb
adc
out
jecxz
into
ret
fstl
mov
jmp
inc
dec
ja
xorb
cli
xor
fsubrp
sub
imul
shr
dec
push
aas
xor
fdivl
aad
je
sbb
push
inc
push
xchg
cs
inc
cmp
or
adc
sbb
outsl
sbb
mov
xchg
and
and
repz
push
stos
int
fldenv
movl
mov
into
dec
in
int
imul
push
or
outsl
out
jp
shrl
imul
out
and
push
stos
shrl
int
mov
lret
cli
out
pop
sbb
add
shlb
fsub
pop
testb
incl
movsl
popf
jge
imul
imul
xchg
outsb
aas
gs
cmc
repnz
push
mov
sub
mov
loopne
xchg
pop
and
and
push
addr16
sub
add
push
cmpsl
cmpsl
push
cmpsl
cmpsb
int
cmp
inc
cmp
std
cmp
lret
jns
ss
ja
fbld
xor
imul
jnp
and
mov
and
call
xchg
imul
push
sbb
lds
aam
lret
jl
lock
push
sub
jne
mov
sub
stos
lds
test
sub
scas
mov
stos
mov
cmc
jne
jno
ret
int
inc
sub
and
add
push
sub
inc
xchg
das
imul
ljmp
outsl
jg
int3
sbb
fs
sbb
inc
mov
jb
xor
pop
jl
push
daa
mov
fldcw
mov
scas
sub
cltd
xchg
imul
mov
jmp
xchg
je
mov
xchg
lahf
sub
idivl
jne
dec
and
stc
sbb
adc
mov
cld
xchg
jmp
jns
ljmp
mov
sahf
xchg
mov
dec
ret
xor
xchg
dec
mov
mov
jb
rolb
mov
test
cmp
mov
ficoms
outsl
add
adc
mov
ja
or
fldl
jns
mov
std
cmpsb
sahf
repz
popa
push
pusha
fs
stc
out
popf
sub
js
ror
imul
mov
dec
fs
adc
inc
adc
or
mov
leave
cmp
or
pop
testl
fsubrp
out
sub
cli
test
push
out
popf
adc
stos
fcmove
loop
sub
inc
cmpsb
jne
add
inc
in
and
jns
ret
scas
push
ffreep
push
xchg
sub
add
pop
outsl
jae
jb
es
jp
ds
cmp
adc
leave
xchg
jns
insl
sub
fdivrs
sbbb
mov
push
and
dec
xor
call
inc
cli
jne
jmp
or
mov
xchg
jns
imul
push
lds
stos
stos
shlb
mov
sub
jmp
inc
adc
pushf
xchg
jo
sbb
sahf
testb
pushf
cmp
jmp
adc
and
insb
cmp
fcompl
scas
shr
xchg
mov
imul
mov
daa
jge
mov
dec
and
popf
sub
ud2
push
cmovns
push
inc
std
push
fldcw
shll
fcmovu
push
or
call
roll
ja
or
xor
cmp
outsl
or
rol
mov
push
sub
popa
sub
jmp
pushf
xchg
push
inc
xor
dec
and
fs
lret
mov
js
fnsave
out
mov
nop
roll
lahf
xchg
jecxz
lret
sarb
inc
mov
das
cmp
push
imul
pop
incl
xchg
lcall
shl
out
or
xchg
sbb
cmpsl
inc
je
mov
xchg
jno
xchg
xchg
fdivp
pop
dec
cmp
fs
call
adc
mov
add
or
outsb
or
hlt
mov
mov
xor
cmpsb
icebp
cld
cld
sub
or
arpl
in
dec
dec
dec
mov
cmpsb
nop
sbb
jo
lea
xchg
pop
jle
pop
es
hlt
xlat
cmp
pop
addr16
jb
mov
push
xorl
and
pop
stc
fstps
out
insb
dec
inc
add
jle
mov
aas
lret
dec
jl
out
mov
jo
es
mov
pop
adc
add
scas
int
leave
sbb
dec
pop
loopne
jo
push
ljmp
push
sub
jg
jmp
repnz
cmp
jle
dec
sarb
fldenv
mov
mov
dec
jo
cld
rcrb
inc
repnz
jp
stc
je
add
jns
sub
clc
dec
outsb
xchg
xchg
xor
shlb
aad
fsubrs
popf
jge
cmpb
pop
jnp
scas
and
jmp
pushf
in
and
test
sbb
xor
jno
cmp
insl
rcrl
orb
push
sti
push
pop
xor
mov
hlt
dec
movsl
jnp
pusha
cmp
pushf
xchg
adc
push
add
push
sbb
fcompl
sub
daa
dec
movsl
jne,pn
mov
add
sub
out
fwait
pop
sbb
aas
mov
lock
aaa
push
and
test
int
scas
cmp
or
xor
inc
mov
sbb
xchg
pop
loope
add
jb
scas
imul
loopne
mov
xor
sbb
daa
sub
mov
sbb
leave
xlat
nop
add
fwait
add
out
popf
jl
pop
mov
and
xor
mov
call
jnp
sahf
add
mov
mov
mov
sub
shl
cmp
lods
push
aaa
cmp
fstpl
push
and
outsl
pop
icebp
cmpsl
adc
addr16
flds
enter
lds
add
push
pop
out
enter
mov
xchg
sti
fldt
addl
mov
inc
out
rcrb
or
std
int
or
push
icebp
loopne
sahf
loope
pop
jne
inc
sahf
inc
sahf
cmp
ljmp
mov
jae
sbb
lret
mov
jb
fisttps
aad
cmp
les
nop
insb
iret
mov
mov
jno
in
dec
xor
push
js
out
xor
jnp
sahf
inc
js
out
mov
sbb
daa
inc
cmp
ljmp
pushf
lret
jmp
rorl
inc
sti
dec
pop
push
shlb
xchg
ret
loopne
push
ror
insl
sbb
sbb
leave
adc
imul
mov
bound
adc
rorl
sbb
inc
inc
or
or
stos
gs
aam
mov
inc
popa
sub
icebp
jbe
mov
sbb
cmp
mov
mov
hlt
xor
lret
push
jle
ret
loope
cmc
push
mov
mov
push
int
insl
lea
or
mov
xor
out
aad
ja
cmp
fisttps
dec
out
mov
outsl
and
jns
push
into
rcrl
out
addr16
fdivs
cmc
addr16
rorl
cltd
lods
iret
pop
stos
jge
push
xchg
jp
adc
or
dec
sub
dec
jge
ljmp
inc
shlb
jecxz
jae
and
sbb
push
cli
adc
sarl
add
loop
insl
dec
std
sbb
push
out
pop
sbb
scas
push
add
inc
shlb
rolb
lods
mov
ss
sbb
add
stc
scas
xchg
nop
das
sbb
repz
prefetchnta
test
xchg
mov
scas
mov
mov
in
outsl
xchg
xor
mov
ss
iret
js
cwtl
inc
push
xchg
sub
test
shr
call
icebp
mov
inc
cmp
call
jne
jmp
repz
dec
test
in
xchg
mov
mov
dec
cltd
popf
mov
add
stos
frstor
test
lcall
loop
cmc
in
mov
ret
or
jge
xor
push
faddl
adc
arpl
mov
sahf
aam
or
sbb
jno
test
rcll
outsl
mov
or
mov
xchg
in
call
jb
xchg
outsl
and
mov
pop
scas
inc
stos
into
rdtsc
sahf
sbb
jne
repnz
sub
sarb
xor
cmovbe
cmp
and
jg
or
imul
ljmp
stos
xchg
repz
insb
jb
xchg
out
dec
out
out
cmp
test
test
pushl
cltd
or
xchg
shll
call
fdivrs
jecxz
mov
dec
sbb
mov
cmpb
xor
int3
jmp
stc
out
push
mov
fisubl
daa
jb
xchg
inc
pop
dec
mov
mov
mov
in
sbb
rcll
add
mov
dec
repz
arpl
lock
dec
push
jmp
jecxz
aam
or
jae
adc
aas
in
cmp
push
std
les
aaa
mov
rcr
push
rol
ss
lods
xor
sbb
xchg
fwait
push
push
loopne
push
iret
dec
imul
sbb
inc
into
inc
pushf
push
cmpsl
jle
sbbl
int
fwait
test
fiaddl
bound
add
jbe
xor
pop
dec
cmp
xchg
pop
imul
cwtl
pop
fwait
mov
pop
xchg
imul
data16
lcall
xor
inc
out
test
stos
ficoml
pushf
mov
xor
and
les
or
lcall
shll
pop
shrl
xor
test
loopne
or
int3
push
lret
es
jg
xor
jmp
sub
push
sub
aaa
fcomps
fstp
orb
gs
push
cmp
push
out
sbb
outsl
out
or
adc
mov
push
jg
jno
pop
out
pop
call
xchg
in
sub
dec
pop
jecxz
sti
inc
sbb
xlat
lret
fisubs
add
push
and
data16
push
xor
roll
push
pop
inc
jg
mov
dec
inc
pop
sub
idivb
lock
ss
sub
or
insl
daa
js
cltd
rorl
inc
loope
insb
pop
stos
in
sub
push
out
jge
das
in
adc
in
cmp
cmp
or
ret
pop
enter
mov
jle
push
add
sbb
popa
sbb
cmp
cmpsl
xchg
mov
rol
pop
sbb
int
push
je
xor
mul
or
mov
or
pop
push
mov
adc
andb
and
stos
inc
insl
stos
xchg
add
aaa
adc
xchg
hlt
dec
add
cmp
jnp
popa
mov
add
sbb
adc
std
jp
mov
hlt
add
mov
test
insb
or
sub
mov
xchg
push
shlb
je
int3
sarl
and
xlat
dec
push
mov
movsb
inc
mov
in
out
mov
mov
das
dec
bound
sbb
popa
sahf
mov
mov
sub
movsl
xchg
inc
dec
out
sbb
adc
int3
insb
pusha
sub
xor
test
out
pop
mov
call
cs
scas
das
call
pop
rcll
lret
loop
sti
movsb
mov
pop
mov
pop
xchg
dec
mov
xlat
outsl
addr16
xchg
sbbl
jae
scas
mov
pop
xor
repz
mov
inc
adc
sarb
outsl
mov
popa
dec
inc
mov
inc
mov
xchg
je
mov
sub
jmp
loope
mov
test
aad
es
aad
xchg
dec
inc
mov
mov
aad
mov
xor
fs
xor
xor
dec
mov
stos
ljmp
xor
inc
pop
jmp
push
add
pop
pop
push
cmpsl
fldcw
scas
mov
mov
lea
push
mul
inc
testl
add
xor
fxch
push
scas
pop
jno
stos
out
inc
incb
inc
or
push
loope
xchg
push
rolb
xchg
push
adc
sbb
sbb
adcb
push
dec
mov
loope
lcall
dec
stos
jp
js
inc
pop
pop
xlat
jnp
mov
loope
xor
stc
bound
lods
xchg
sbb
rcr
sub
int3
dec
mov
lods
pop
xchg
add
lret
inc
or
xor
addr16
sti
push
cmp
les
rorb
xchg
add
xchg
mov
and
or
loop,pt
or
pop
adc
out
jge
push
mov
ljmp
mov
je
xor
dec
xor
adc
gs
in
in
mov
loope
pop
call
stos
std
cmp
stos
xor
push
fldt
pop
and
das
pop
jg
dec
jb
inc
test
daa
mov
sahf
sub
inc
mov
fbld
ljmp
stc
fsubs
sub
pop
xchg
xlat
shrb
clc
fnsave
sbb
mov
and
divl
push
or
iret
jecxz
push
ja
and
movsb
out
sbb
ja
jmp
movsl
scas
pop
cmc
push
inc
popa
sub
inc
mov
mov
icebp
xchg
cld
lods
push
inc
cmp
pop
cs
into
pusha
push
jge
loope
jo
and
fimuls
push
scas
hlt
imul
adc
sbb
push
scas
inc
pop
mov
aas
negl
pop
notl
or
lods
sbb
adc
cmc
bound
mov
push
jo
dec
jl
sub
add
sbb
inc
das
jmp
jmp
mov
or
sub
mov
popa
into
sub
cmc
loope
pop
mov
jae
jmpw
push
gs
ret
push
xor
jle
out
repnz
daa
data16
ljmp
aam
jmp
je
mov
rcrb
adc
ret
sbb
sbb
addr16
gs
lods
add
adc
push
cmp
lret
xchg
inc
push
rorb
sahf
jmp
dec
pop
fdiv
loop
mov
popf
sub
xchg
rcr
insb
cmc
mov
adc
and
cltd
mov
js
jo
sti
or
add
in
jge
lods
lcall
mov
dec
leave
mov
mov
leave
jae,pt
pop
mov
and
rorl
mov
in
mov
outsb
shlb
inc
call
xor
and
dec
scas
rolb
sub
shrl
mov
addb
sbb
je
sahf
shll
mov
shl
xlat
fwait
add
adc
jg
add
out
stc
out
sub
pop
push
xchg
dec
aaa
pusha
cmp
aas
jmp
pushf
xlat
divl
pop
jmp
imul
jp
adc
shrl
movb
int3
sbb
shl
int3
and
adc
mov
aam
sbb
jmp
xchg
xchg
mov
mov
iret
ds
or
iret
sub
pushf
jl
pop
in
imul
stos
in
lahf
cmp
aam
pop
inc
add
dec
jmp
ss
xchg
mov
mov
adc
mov
mov
sbb
popa
out
testl
pop
pushf
xchg
mov
jae
shll
add
data16
sub
pop
adcl
fbstp
repnz
es
loop
cmc
add
sti
xchg
pop
ds
pop
or
mov
cmp
mov
into
sbb
cmp
dec
adc
pop
insl
in
sbb
adc
sahf
loope
stos
pop
jg
jo
fsubrp
movsb
or
add
lock
and
sahf
jle
sti
fmull
sbb
dec
add
jno
and
lret
je
std
add
sbb
add
mov
aad
push
xchg
jecxz
outsl
mov
out
mov
stc
pop
je
enter
ss
add
jae
stos
pop
xchg
mov
jl
mov
fildl
inc
push
int3
xchg
adc
or
add
jnp
sub
or
or
and
xchg
jle
sti
push
mov
cld
jnp
das
insb
or
mov
shl
push
add
popf
cmp
ljmp
pushf
rcrl
xchg
test
ffree
aaa
mov
sub
cltd
ja
std
test
ljmp
mov
xchg
je
sbb
loop,pt
ss
mov
cmpsb
pop
mov
inc
inc
adc
shlb
xchg
icebp
xchg
pop
std
sahf
adc
adc
inc
mov
aaa
imul
fsubs
fiaddl
jmp
inc
cmp
popf
ljmp
imul
in
stos
pop
cmp
xchg
fldl
test
fcmovne
popf
inc
jmp
or
cmc
pushf
push
mov
xor
sub
jnp
outsb
cmp
xchg
xorb
ja
jl
mov
jb
inc
repz
test
jnp
adc
les
fnstenv
pop
fadds
mov
out
jg
in
or
jb
call
jecxz
push
pop
cs
pop
xchg
js
push
cmpsl
or
push
adc
mov
add
in
fildll
mov
inc
out
in
dec
js
lods
out
or
stos
dec
mov
fisubs
fs
fdivrs
pop
test
sbb
sbb
insb
add
add
add
shrl
fists
mov
inc
jns
mov
cmc
cli
fdivrs
pop
pop
popf
ss
lock
sbb
xor
inc
cmc
jnp
stc
xor
mov
and
add
rcll
sbb
xor
lret
sub
leave
push
adc
jmp
sub
orb
setl
sub
fs
jne
popa
jne
sub
loop
and
and
adc
repnz
add
sbb
icebp
mov
fisubrl
cmp
gs
dec
xchg
or
sub
adc
je
adc
adc
enter
mov
aam
xor
dec
std
mov
cli
add
scas
jle
loopne
aam
ss
xor
mov
bound
inc
jne
rcll
inc
pop
mov
lods
mov
inc
mov
testl
xchg
lock
cmp
aam
xchg
rorl
mov
stos
je
push
mov
into
jl
scas
ret
push
js
jmp
mov
jg
int
xchg
jae
add
ja
pop
loopne
pop
fsub
pop
fnstenv
pop
dec
stc
mov
xor
fs
js
bound
stos
xchg
or
adc
pop
cwtl
orl
mov
arpl
adc
iret
jmp
out
pushf
inc
rcll
pop
dec
sub
mov
jl
add
lods
mov
cmp
frstor
arpl
xchg
push
mov
out
rorb
pop
jmp
popa
xor
iret
dec
nop
loopne
xchg
adc
add
rolb
jne
sbb
mov
mov
push
daa
repnz
cmp
push
movsb
mov
push
xchg
jno
mov
or
mulb
into
out
jns
cmp
insl
xchg
mov
xchg
cld
pop
or
test
fsts
lods
cmp
mov
push
jge
mov
js
shlb
xchg
test
sti
xchg
gs
sbb
mov
xchg
mull
repz
sbb
sub
xchg
roll
in
clc
mov
cmp
add
filds
sbb
push
pop
add
cmpsl
lret
pop
pop
pushf
inc
loopne
add
add
jns
xchg
and
loopne
sub
sti
jecxz
cmc
dec
cmp
loop
pop
sbb
jl
aas
adc
and
rcrb
inc
lock
movb
icebp
mov
pop
add
cmc
sub
leave
inc
inc
shlb
iret
mov
lds
int3
ret
sub
lods
push
popa
scas
test
icebp
shrl
js
aaa
idivl
pop
sub
outsb
fcmovb
insb
imul
adc
loope
sbb
test
cmc
mov
fnstsw
sub
in
xchg
or
cmp
sub
xchg
push
cltd
movsl
sbbb
adc
lcall
jg
mov
cli
call
mov
insl
push
out
inc
mov
sub
mov
pop
push
imul
or
jg
push
mov
push
insb
hlt
add
scas
mov
inc
push
or
std
mov
xor
sahf
jle
or
lret
jbe
icebp
sbb
cli
cltd
cwtl
in
xchg
out
dec
mov
or
outsl
outsl
sub
inc
enter
inc
mov
test
leave
cltd
dec
sub
pop
or
into
cld
cmp
inc
daa
shrb
test
das
fnstsw
rcll
adc
dec
jge
std
pop
xchg
mov
stc
cmpsb
pushf
inc
cmp
je
pop
ret
cmp
decb
cmp
jecxz
mov
data16
mov
lods
mov
jecxz
pop
pop
out
fsts
cld
sbb
movsb
mov
shll
xor
mov
push
jae
pop
mov
and
insb
sub
jecxz
jnp
sti
sbb
sbb
add
fcomps
std
push
sahf
xlat
add
mov
stos
lea
bound
in
or
fcmove
or
inc
outsb
adc
push
add
pushf
adc
push
xchg
fidivrs
rorl
mov
sar
stos
dec
cli
cmp
dec
insl
jp
or
xchg
cmpsl
cltd
or
adc
sub
jb
mov
jecxz
lahf
dec
sbb
jg
mov
in
and
ds
das
ss
lods
aaa
jle
ljmp
loop
outsl
loopne
imul
add
nop
or
mov
scas
jge
fadd
inc
adc
push
mov
and
call
popa
ljmp
dec
xor
cs
cmp
je
add
xchg
xor
jg
lock
adc
arpl
loope
push
jecxz
enter
sub
test
and
stc
cmp
clc
jmp
jmp
fcoml
hlt
rcrl
jno
dec
cld
fistpl
mov
fwait
hlt
jne
aas
pop
fmuls
push
movsl
sub
pop
or
out
jbe
xor
cmpsb
and
jp
or
leave
jg
dec
push
adc
mov
lea
xchg
mov
and
xchg
mov
xorl
cltd
das
mov
dec
fcmovu
aam
stc
dec
fisubl
pop
enter
cld
push
xlat
inc
mov
sub
arpl
in
and
test
outsl
mov
divb
cmpsl
imul
adc
fwait
cmp
inc
add
pushf
mov
dec
mov
insl
push
pop
mov
mov
pusha
lock
jp
es
stos
test
pop
mov
fsts
sbbl
and
in
test
iret
sub
pop
jecxz
mov
aaa
mov
dec
mov
data16
adc
pop
add
hlt
aad
std
std
adcl
add
adc
andl
fidivl
sub
repnz
add
incl
ss
shrb
push
and
lock
mov
fstl
ret
pop
mov
or
mov
gs
es
sbb
int
push
popf
jle
jle
out
mov
lahf
push
jecxz
jnp
stc
in
loop
decl
dec
aam
ret
mov
movsl
mov
lds
or
sub
lahf
push
adc
out
ret
add
jecxz
add
adc
js
out
scas
imul
inc
and
bnd
jecxz
xor
test
adc
dec
xchg
sub
fstl
sub
dec
test
mov
outsb
mov
int
test
int3
mov
and
nop
push
dec
xchg
mov
sbb
aam
xor
pop
in
fistpll
loop
xor
test
push
fbstp
sbbl
mov
inc
add
adc
imul
dec
fdivp
adc
popf
pop
sub
imul
push
sub
jne
xchg
or
push
cmp
aaa
mov
mov
ljmp
pop
iret
leave
pop
lret
ret
ljmp
push
sbb
xchg
and
mov
add
fidivrs
outsl
adc
adc
or
mov
orb
lds
std
movsl
xchg
pop
in
nop
test
or
adc
add
lods
sahf
cmp
push
cmp
dec
push
add
int
and
inc
mov
mov
jbe
ljmp
pop
je
mov
cmp
fisttpll
cld
ds
xlat
mov
pop
and
jne
std
adc
stc
add
inc
repz
mov
out
shlb
fldt
xor
adc
cmpsb
push
xor
enter
lahf
xor
out
cmpsl
adc
dec
lods
push
ds
sbb
push
loop
in
insl
lods
xchg
or
in
sub
fs
shll
imul
sub
push
jbe
enter
mov
pushl
xchg
rorb
or
es
mov
add
rcr
pusha
jl
dec
pop
mov
mov
xchg
pop
je
inc
in
aas
pop
pop
call
ss
pop
loope
repz
sysexit
lcall
jns
push
or
mov
mov
jno
push
cmpsb
std
inc
addr16
jmp
inc
scas
and
shld
aam
cmp
inc
dec
mov
adc
adc
outsl
jle
outsb
into
iret
cld
insl
ret
dec
dec
test
pop
jo
mov
inc
cmpsl
push
scas
mov
adc
pusha
xchg
test
outsb
dec
mov
mov
test
test
gs
fs
dec
shlb
pop
icebp
xor
out
sub
pop
mov
xor
mov
das
xor
mov
cmp
inc
inc
pop
sub
hlt
mov
xor
insl
push
push
movsl
xchg
xor
mov
fisttps
xchg
jmp
jl
dec
sub
mov
stos
dec
xchg
call
add
or
push
or
inc
jecxz
jle
jl
pop
mov
jle
mov
sub
fildll
mov
and
jle
xor
scas
in
xor
rcl
fs
into
jmp
lahf
shr
in
sar
mov
cs
sub
jmp
cmc
ljmp
push
dec
sarl
outsb
fdivrs
fldcw
sub
test
outsb
jae
inc
mov
pop
lret
add
out
inc
lods
hlt
sbb
xchg
push
enter
cmp
je
scas
out
dec
sbb
mov
fwait
and
data16
std
cltd
mov
addl
mov
icebp
dec
repnz
lret
fisttpl
in
xchg
iret
or
xor
sub
bound
insl
les
pop
loopne
andb
push
out
scas
inc
mov
push
sbb
adc
fildl
adc
pop
jb
mov
adc
rcll
push
lret
cwtl
jp
outsb
hlt
insb
test
jnp
fisubl
negl
aaa
xor
pop
inc
lods
outsb
jns
mov
nop
sub
das
cld
xchg
rcrb
dec
push
adcb
sub
add
popa
jo
shl
or
dec
aam
push
jge,pt
rol
inc
jmp
lretw
adc
fstpl
idivl
pop
fs
add
dec
roll
scas
mov
fstpl
pop
gs
cmp
out
push
cmpsb
xchg
mov
in
lret
dec
xchg
pop
ret
mov
cmc
pop
scas
jno
pop
inc
call
xlat
insb
sahf
jp
xchg
test
pop
cmpb
push
xchg
inc
add
test
xorl
in
insl
lds
or
add
test
mov
pop
or
sbb
popa
int
js
jae
dec
xchg
pop
les
ja
and
or
jmp
mov
es
std
hlt
push
lea
lock
out
jne
sub
mov
jmp
call
inc
pop
push
out
test
push
pop
push
dec
loop
push
mov
sbb
or
and
and
xor
incl
xlat
test
fistpl
mov
adc
xchg
sbb
es
xor
or
dec
repz
adc
jb
orl
pop
sbb
jl
xchg
test
sub
ret
sbb
fadds
out
jbe
jbe
pushf
je
mov
rol
test
sahf
ja
push
jne
mov
orl
adc
mov
push
or
lret
movsb
rcl
sahf
aas
cs
mov
decl
imul
cmpsb
dec
or
bound
xchg
adc
mov
out
imul
enter
and
negl
aad
mov
dec
lock
jae
cmpsl
sub
pop
movsl
hlt
jp
xchg
mov
loopne
aad
enter
pop
jnp
adc
das
call
cli
push
xor
adc
scas
int
adc
mov
mov
daa
push
or
andb
fidivs
cmpb
cmpsl
jns
popa
dec
jb
mov
out
loopne
sarl
fldenv
inc
jbe
stos
ss
std
je
add
add
add
daa
aaa
mov
mov
xlat
push
adc
mov
pop
mov
dec
mov
xlat
adc
dec
jbe
xchg
xchg
xchg
out
jp
xor
push
roll
shrl
sbb
push
std
mov
pop
xorb
cmp
mov
js,pn
xor
xchg
je
pop
js
jmp
mov
mov
jp
aaa
pop
adc
mov
in
enter
gs
dec
lods
sub
jno
xor
dec
add
push
lahf
pushf
mov
and
jg
loopne
das
scas
scas
iret
add
jmp
inc
out
rorl
xchg
sbb
lret
add
add
push
iret
mov
sbbl
in
cld
pushf
or
dec
lock
movsl
andl
dec
shll
dec
push
icebp
pop
imul
dec
jle
repnz
js
dec
inc
mov
mov
inc
aaa
js
mov
fcompl
push
fwait
mov
sub
sub
or
pusha
mov
add
xor
xor
int
arpl
out
sub
popa
mov
xchg
mov
in
sub
adcl
add
mov
pop
test
cltd
popf
test
xor
orl
mov
loop
mov
call
fisttpll
jp
mov
xlat
das
jl
push
loopne
mov
push
mov
ds
and
pusha
xorl
jns
data16
push
bound
cmp
lods
push
sub
add
lea
lds
and
fwait
lret
jp
adc
sub
sub
int
adc
mov
sbb
jo
xor
dec
jmp
cmpsb
push
int
mov
frstor
jne
scas
sbb
js
aas
cmp
dec
cld
sbbb
jne
pop
and
inc
mov
pushw
pop
inc
repnz
xchg
lcall
cmp
and
mov
xchg
sub
adc
adc
xor
sub
cli
cmp
dec
out
jo
rolb
inc
mov
xchg
mov
xchg
fcompl
leave
testl
pop
adc
cmpsl
cmp
sahf
and
xor
es
popa
pop
dec
jno
or
pop
stos
jge,pn
imul
sbb
push
test
or
dec
ret
repz
popf
pushf
shrb
imul
test
nop
std
aaa
xor
push
mov
dec
test
dec
inc
jae
mov
icebp
icebp
inc
or
int3
or
ret
es
addb
in
jb
pop
add
add
je
pusha
imul
jo
test
sub
add
xchg
movsb
lock
pop
xor
hlt
pop
cmp
sbb
cmp
unpckhps
imul
and
pop
adc
mov
xor
jmp
ret
dec
lret
pop
mov
mov
std
jecxz
arpl
mov
arpl
cmpsl
mov
jl
dec
ret
fcmovbe
mov
je
cmp
movsl
push
call
pop
test
lds
mov
enter
pop
cmp
xor
iret
mov
push
ret
jecxz
add
inc
les
into
lret
inc
test
push
mov
push
sub
push
jmp
rorb
xor
lret
add
fcomps
sub
lods
outsb
adc
je
inc
mov
add
lret
xchg
mov
stc
mov
loopne
mov
lea
in
sbb
les
sbb
aam
push
loope
inc
out
arpl
add
addb
shlb
push
pop
inc
pop
lahf
push
mov
test
das
stc
addr16
push
stos
loop
cs
and
dec
jae
and
mov
mov
cmc
and
test
jge
adc
gs
cwtl
loopne
fdivr
sbbl
xor
andb
jo
jl
xchg
push
sti
sub
test
orl
lret
pop
and
push
fiaddl
fnstcw
push
ficomps
mov
sbb
fisttps
cmp
ss
hlt
fisubrs
fs
sarb
sub
mov
and
jns
test
pushf
hlt
daa
test
ret
mov
and
xchg
sub
mov
jbe
js
xchg
sub
sub
sub
mov
dec
cltd
shlb
mov
test
mov
or
stc
test
or
adc
addb
fildl
mov
sub
test
popf
push
leave
mov
repnz
adc
lcall
cmp
inc
mov
outsb
andb
inc
pusha
pop
fiaddl
bnd
dec
dec
jae
movsl
pop
mov
pop
push
mov
in
xchg
inc
sbb
push
jmp
mov
lea
mov
incb
jecxz
clc
test
out
dec
mov
inc
js
fsubl
jb
cmp
clc
imul
sub
xchg
xchg
adc
loopne
mull
cmp
sub
pop
adc
int
pusha
sti
sub
bound
jl
scas
hlt
loopne
mov
loop
retw
das
out
ljmp
test
into
sbb
fucompp
adc
pop
add
cmp
out
je
fs
sbb
loop
fisubl
push
out
dec
mov
aas
push
notb
lods
or
push
pop
loope
cli
sub
in
in
xchg
dec
adc
or
daa
call
push
out
lret
mov
int
cmp
rcrb
repz
push
js
push
nop
cmp
pusha
int
lret
shll
scas
mov
repnz
sub
mov
cmc
push
mov
xchg
mov
addr16
mov
push
sbb
les
cli
pop
enter
out
lcall
and
xlat
ljmp
sub
adc
cmp
arpl
into
push
jnp
sahf
or
mov
aaa
cmc
pop
bound
sbbl
and
rolb
push
andb
xor
outsb
jmp
loop
cmpsb
shrb
cld
push
fdivs
aam
iret
or
mov
lods
xchg
fsub
jne
stos
pop
imul
push
mov
ffree
push
rolb
ja
xchg
sbb
daa
lahf
and
jmp
xor
mov
dec
fwait
bound
dec
loop
jno
inc
mov
add
mov
or
lret
xchg
sbb
sbb
jne
int
incb
or
or
test
imul
movsb
dec
xchg
sbb
movb
or
ljmp
mov
jbe
stos
sar
pop
rolb
cmp
rclb
xchg
aad
jne
xchg
in
pop
mov
xor
insb
mov
pop
es
mov
mov
cwtl
pop
or
aas
sub
sbb
and
fldcw
lcall
sbb
xor
jae
xchg
xchg
repz
test
mov
adc
scas
jns
xlat
int3
je
mov
mov
lret
xor
lds
sbb
mov
lods
pop
call
push
and
divb
lcall
cmp
push
or
js
xchg
leave
jo
sub
xchg
icebp
mov
push
inc
pop
and
push
mov
inc
push
jnp
test
push
stos
popa
and
xchg
enter
js
insl
inc
out
das
movsb
mov
sub
adc
test
fs
cmc
sub
push
loopne
xchg
ret
pop
push
mov
sbb
repz
mov
mov
cmp
decb
xchg
sbb
mov
or
data16
mov
push
lods
shl
imul
xor
sub
xchg
test
mov
lret
lods
and
imul
jle
sub
insb
jb
push
lcall
fwait
and
mov
push
xor
xor
fstps
sarl
cmp
or
fwait
sbb
push
jo
int
lea
jae
fstps
mov
shrb
sbb
stc
push
sub
andl
dec
adc
xor
fcoml
inc
insb
ror
popf
mov
push
push
xchg
pop
test
ss
insl
push
mov
shll
lret
mov
xchg
xor
mov
outsl
xor
jmp
rorl
sbb
ret
push
inc
xchg
jmp
pop
mov
aas
stos
jmp
andb
insb
xor
repnz
aas
imul
or
popf
mov
divb
xchg
repnz
fsubl
jne
jbe
loopne
pop
into
movsl
jne
jge
out
stc
cs
hlt
mov
jge
xchg
add
scas
mov
jo
lods
and
fnstcw
popa
push
mov
dec
lret
movsl
mov
push
imul
test
pop
lahf
jl
mov
loopne
mov
sub
add
mov
inc
and
loop
inc
xchg
out
or
int3
cmp
inc
and
mov
mov
mov
jmp
sti
xchg
pop
xchg
in
cmpsl
xchg
movsl
mov
jp
sub
push
je
scas
pop
pop
mov
and
es
iret
cmp
and
testl
shr
aaa
lea
pop
mov
stos
jno
mov
jmp
fisubl
ds
pushf
dec
push
movsl
pop
aam
push
cmc
xlat
std
call
imul
inc
push
jg
inc
mov
mov
cmp
mov
add
fwait
leave
cmpsl
sbb
inc
pop
mov
sti
sarl
and
jne
sarl
sub
lea
jl
insl
imul
movsl
sub
mov
adc
repz
mov
push
or
xchg
popf
dec
stc
pop
popf
loop
jecxz
jns
jmp
jmp
jo
out
xchg
push
dec
mov
gs
and
sbb
jg
xchg
sub
fimull
scas
push
dec
mov
fdivrp
sbb
aam
lcall
sti
mov
lock
push
test
sbb
inc
jecxz
push
mov
mov
ret
pop
adc
inc
inc
cwtl
push
cmp
fnstcw
int
mov
mov
cmp
or
xchg
and
in
fs
sbb
sbb
xchg
dec
insb
fwait
imul
ss
or
cmp
push
push
aam
dec
jbe
lds
xchg
cltd
xchg
into
xchg
divl
xor
add
push
sahf
mov
or
and
mov
flds
cs
mov
pop
pop
push
popa
xor
enter
xlat
dec
int3
incl
scas
inc
push
daa
jnp
test
push
sub
mov
cmp
jns
mov
aad
or
sti
xlat
out
jnp
repz
add
jp
mov
pop
xchg
sbb
cmc
fstps
inc
lcall
dec
cmp
xchg
mov
loope
int
push
dec
mov
daa
cld
jecxz
mov
and
jmp
mov
inc
inc
cmc
adc
lea
and
ss
sbb
mov
mov
jnp
adc
mov
jge
cmpsb
jecxz
test
test
in
int
sbb
and
lds
ja
ja
mov
pop
mov
pop
out
mov
adc
sbb
aaa
mov
xchg
sahf
dec
stos
loop
jns
mov
pop
sub
mov
cmc
cmp
ds
adc
std
push
cmp
sbbl
adc
add
pop
mov
dec
mov
ret
and
pop
mov
or
lahf
cmp
push
call
or
mov
sub
fmuls
dec
sub
inc
cmp
sub
mov
iret
test
lock
mov
fisubs
das
lods
lret
out
jbe
and
popa
int
in
sbb
out
dec
scas
add
pop
lds
xchg
movsb
rolb
xchg
sbb
daa
fs
rclb
test
mov
fiadds
test
push
hlt
repz
shlb
hlt
test
out
pop
jge
pop
dec
xchg
mov
adc
dec
sbb
mov
pop
and
push
aaa
cltd
jecxz
repnz
jecxz
cwtl
js
jl
daa
addb
test
das
popa
or
in
xor
dec
cmp
xor
testl
je
mov
mov
scas
jb
and
xchg
pop
inc
mov
rclb
mov
test
gs
notb
and
inc
mov
sbbl
dec
dec
and
push
mov
add
dec
ja
mov
scas
in
rcrb
iret
pop
sbb
xchg
sbb
mov
repz
icebp
jge
pop
mov
arpl
stos
xor
mov
pop
add
cmpsl
mov
lcall
cli
cli
scas
jno
scas
mov
pop
pop
mov
idivl
movsl
icebp
mov
mov
popa
lea
inc
daa
xchg
adcb
mov
imul
leave
in
rorl
out
data16
jne
sbb
inc
mov
mov
push
int3
enter
mov
outsl
iret
inc
fnstcw
adc
adc
rcll
repnz
and
daa
adc
add
inc
sbb
inc
jb
ds
or
mov
loope
or
xchg
mov
maskmovq
negl
pop
loop
mov
stos
mov
pop
push
dec
sub
inc
jmp
push
xchg
mov
data16
jmp
inc
xor
push
subb
leave
gs
push
insl
or
in
int
jb
dec
sarb
insb
test
xchg
sbb
jge
mov
push
push
int
scas
xchg
fldpi
inc
gs
sbb
push
push
mov
clc
dec
and
mov
sahf
mov
xchg
mov
mov
jns
movhps
fld
fcomps
outsb
mov
lea
or
out
push
cmp
fisubs
or
test
dec
add
cltd
xchg
aas
loop
dec
test
ds
fildl
mov
call
push
aad
inc
mov
or
rcll
sub
adc
mov
xor
js
xor
mov
rcrl
mov
xor
repnz
jecxz
xor
pop
push
cld
aas
repnz
in
in
mov
ror
inc
in
xchg
dec
scas
dec
jae
popf
stc
pushf
fists
test
lret
cmpb
movsb
inc
imul
xorl
or
int
mov
pop
lock
sub
je
in
popf
sbb
cmc
or
lret
or
mov
es
mov
mov
pop
jbe
ljmp
cmp
shrl
stos
std
sti
or
mov
push
xor
lods
scas
push
xor
inc
xor
jmp
dec
inc
mov
fucomp
mov
fwait
dec
iret
mov
and
jge
icebp
push
xchg
sub
lcall
stos
xchg
pop
dec
adc
sbb
fwait
inc
lret
and
add
call
sbb
js
add
mov
clc
test
enter
addr16
lods
jl
sbb
fcomps
sti
cmp
mov
mov
into
add
leave
fisubrs
inc
cwtl
test
xchg
lret
pop
test
jb
cli
adcl
in
push
int
mov
jno
sbb
int3
jb
xchg
sbb
mov
xor
lcall
dec
fdivrs
rcrb
sbb
int
jo
mov
cmpb
jnp
xchg
inc
ret
mov
sub
andl
inc
xchg
pop
subl
enter
repnz
fwait
and
pop
dec
cltd
lahf
xabort
ficompl
or
data16
lea
aaa
mov
stc
xlat
sahf
xchg
or
mov
ret
push
test
daa
add
out
sub
adc
mov
aaa
loop
sahf
jnp
adc
mov
insl
dec
dec
pop
inc
mov
push
and
pop
in
aad
pop
mov
test
xchg
or
mov
xor
es
ljmp
inc
pop
fwait
imul
mov
pop
mov
cli
lcall
ja
or
out
je
jecxz
mov
mov
jge
xlat
pop
in
jno
mov
outsb
xor
mov
fists
sub
addr16
jmp
mov
pop
or
stc
and
sbb
dec
adc
add
and
popa
out
lcall
movsl
ljmp
lods
sbb
jno
or
outsl
add
push
cmc
cltd
inc
loopne
dec
lret
xchg
jae
outsl
ss
mov
and
enter
das
lahf
and
int
xchg
daa
fs
nop
dec
fstpl
lcall
movsb
mov
pusha
repnz
notl
cmp
sub
sbb
arpl
insl
aas
or
fucomi
mov
push
pop
jne
pop
sti
and
ljmp
pop
sti
sbb
inc
pop
lcall
adc
out
push
or
dec
rcrb
mov
add
iret
adc
xchg
mov
or
jb
add
ss
adc
movsl
jo
mov
jp
fidivrl
pop
and
test
xchg
sbb
gs
sbb
mov
repz
or
jo
adc
incl
xor
addr16
addr16
jecxz
fs
test
orb
mov
test
cwtl
xor
clc
test
arpl
das
pop
pop
out
xchg
dec
ror
cmp
jp
xchg
pop
ds
pop
jle
icebp
shlb
xor
dec
or
in
jbe
adc
mov
scas
es
push
dec
fcoml
adc
and
xorb
jb
repz
xor
mov
mov
ds
jge
jno
add
jbe
stos
inc
lods
jl
and
sahf
cmpsl
out
mov
int3
cmpsl
mov
cmp
pop
cmc
insb
aam
add
sbb
stc
lret
lods
mov
dec
repnz
iret
repz
pop
ror
inc
add
cmp
push
pop
mov
out
pop
mov
jecxz
and
dec
xor
mov
and
push
out
call
mov
and
xadd
pushf
mov
inc
sbb
out
test
stos
cld
sti
popf
scas
dec
jge
xorb
mov
pop
nop
int3
les
loope
cmp
sub
mov
stos
scas
xchg
pushf
cltd
push
inc
fdivr
popa
pop
inc
je
cld
mov
add
mov
daa
add
cmc
rsqrtps
sti
push
xor
aad
test
sub
or
out
pop
out
das
push
push
and
pop
cmp
cli
lods
lock
sbb
cmp
add
sub
dec
pop
xchg
sbb
data16
loop
cwtl
scas
arpl
dec
jbe
pusha
inc
and
adc
push
dec
pop
mov
ret
mov
mov
inc
adc
jecxz
inc
or
jae
xchg
das
aam
add
es
or
daa
outsb
fs
jg
iret
mov
jge
mov
xchg
movq
push
lret
push
push
adc
je
adc
mov
pop
arpl
adc
add
stos
jnp
mov
xchg
imul
cmc
aaa
xor
mov
add
stc
cmpsb
fwait
and
gs
push
mov
push
scas
inc
push
loop
adc
jae
test
cmp
lcall
movsb
jne
dec
dec
mov
outsb
fidivrs
xlat
insl
jge
loopne
jae
sub
jle
sbb
dec
and
loopne
dec
out
sbb
xchg
adc
cmpsl
adcb
xor
aas
xchg
mov
stos
push
lahf
loope
arpl
movsb
aas
popa
stc
or
or
sbb
sets
imul
outsb
mov
inc
andb
mov
clc
cmovnp
fwait
out
inc
xchg
push
mov
push
fisubs
data16
out
les
pop
sbb
push
inc
rcll
js
into
shrb
cli
mov
push
icebp
pop
lahf
inc
fnstcw
xor
iret
pop
ret
les
sbb
mov
and
cli
or
mov
inc
or
jae
sbb
popl
xor
xchg
sub
iret
jno
xorl
sbb
ds
stc
ja
loop
cltd
and
movb
sarb
aas
pushf
outsb
out
out
ljmp
dec
scas
jl
xor
int3
xor
push
adc
inc
lds
jmp
aad
lcall
xor
xor
pop
or
rolb
push
and
cmp
loope
inc
sub
fnstcw
out
xchg
inc
cmp
push
mov
mov
mov
pusha
in
test
push
inc
dec
outsl
fucom
in
cld
push
out
in
adc
inc
jb
imull
push
in
fwait
pop
xor
les
aam
out
sysret
or
cli
xchg
ret
sbb
sbb
sti
xor
cli
push
inc
cwtl
lea
sub
jle
mov
pusha
pop
mov
fwait
enter
sbb
adc
ds
push
js
shll
xchg
sbb
cmc
sahf
sub
mov
mov
mov
add
xchg
or
cmc
add
data16
loop
jne
nop
pop
test
or
dec
fsubs
je
push
xchg
shr
into
std
std
add
fimuls
nop
sbb
out
das
dec
nop
mov
adc
pop
pusha
dec
mov
mov
divb
sbb
sahf
lea
sbb
dec
pop
cmp
into
sbb
lahf
aad
cmp
push
adc
cmp
push
in
adc
rcrl
push
pushf
sub
dec
push
cmp
jecxz
push
sbb
mov
cwtl
xor
mov
stc
leave
fs
xchg
imulb
sbb
mov
and
mov
adc
fdivr
mov
into
or
out
xchg
mov
dec
inc
pop
sbb
test
and
loop
mov
jae
mov
loopne
daa
mov
jae
out
ss
iret
sti
mov
or
test
add
xor
lods
dec
ja
adc
test
push
xor
adc
lods
roll
push
lea
pop
js
sub
jg
shll
enter
daa
xchg
int3
add
jnp
mov
sub
js
lods
sub
repz
jo
dec
out
pop
adcl
mov
lods
aaa
pop
push
mov
je
icebp
orb
mov
inc
jo
adc
or
push
les
mov
xor
loopne
fwait
push
push
sti
inc
addr16
int
cmpsb
xlat
pop
call
sub
push
add
mov
lods
jmp
std
popf
repnz
xchg
xor
sbb
outsb
fcmovne
test
imul
fimull
mov
lea
inc
mov
lahf
test
inc
aaa
lods
jo
loop
daa
leave
cmp
orl
incb
xchg
push
cli
dec
jp
stos
or
pop
iret
fstpl
call
icebp
or
rorl
cmp
js
gs
mov
mov
push
mov
and
xor
pop
lds
jne
adc
inc
jle
add
sbb
sub
jge
mov
jg
icebp
aad
xor
xchg
iret
andl
mov
out
sub
sub
push
in
inc
je
mov
inc
call
mov
test
mov
push
pop
jg
lcall
mov
push
sahf
add
out
cltd
lret
mov
outsl
push
fnstenv
scas
push
cmpsb
dec
loopne
mov
outsl
cmpsb
xchg
adc
adc
mov
testl
jbe
movsb
push
or
dec
cmpl
std
cli
mov
fisubrs
arpl
inc
cmc
xor
in
insl
or
mov
pop
mov
fcompl
ss
add
adc
imul
popf
insw
jno
xchg
push
ss
dec
push
shlb
xchg
je
imul
sub
stc
or
mov
lock
inc
push
fsubs
inc
xor
mov
repnz
jmp
pop
cmp
pop
pusha
loopne
xchg
mov
das
xchg
and
mov
cmp
push
lock
cmp
lcall
mov
add
or
sbb
and
xor
imul
cmpsb
dec
jl
mov
xchg
sar
and
adc
jmp
and
sub
pop
mul
cltd
movsl
jle
hlt
ds
imul
sub
push
mov
cltd
ds
add
fprem
pop
bound
jmp
cmp
dec
test
mov
adc
jbe
sbb
popa
repnz
sub
pop
call
mov
pushf
push
jmp
dec
or
das
es
addr16
sbbl
and
jl
pushf
in
xchg
adcl
outsb
jne
mov
push
mov
fsubs
inc
or
loop
ja
stos
dec
dec
fildll
or
cltd
jle
xchg
inc
hlt
dec
mov
jecxz
outsb
and
arpl
popa
movsl
in
jbe
jnp
xchg
pop
fmul
mov
stc
stos
jns
cwtl
dec
and
ljmp
xchg
call
dec
daa
cmp
lods
cmp
push
mov
icebp
jno
shll
int3
lods
mov
pusha
sahf
mov
std
add
ja
pop
dec
ds
std
cmp
push
test
sbb
cmp
rcrb
cs
mov
push
push
add
or
push
test
cltd
sti
das
fcompl
add
subb
mov
mov
imul
adc
lcallw
sub
lret
lret
jp
adc
sahf
jbe
sbb
jbe
hlt
iret
mov
dec
mov
mov
push
stos
sahf
cmp
data16
mov
mov
bswap
and
xchg
add
in
mov
jne
rcrl
jno
ds
shl
jbe
pop
add
dec
cmp
out
push
mov
arpl
scas
and
stos
xchg
adc
add
jns
add
dec
jbe
mov
dec
jl
pop
jno
adc
jo
mov
and
pop
fnsave
nop
dec
and
cmp
std
sub
out
cld
fcoml
pusha
mov
and
xor
jno
sub
fadd
in
pop
gs
int
jge
ljmp
rorl
lret
lds
mov
rcll
jecxz
sti
lea
dec
sbb
adcb
pop
mov
inc
out
je
andl
test
fisttpll
xchg
insl
add
inc
adc
xor
orl
jne
leave
push
movsl
daa
xor
cmpsl
fstp
push
jmp
mov
addr16
jecxz
test
sbb
fcmove
jnp
mov
cmp
or
sub
xchg
adc
push
mov
adc
test
out
leave
fstpl
cmp
mov
stc
rol
outsb
sahf
cmp
cmpsl
cmp
and
mov
inc
jecxz
in
or
push
loop
xlat
cmpsl
pop
adc
stos
mov
sub
mov
pop
lret
adc
sbb
and
add
arpl
add
loop
and
mov
mov
or
xlat
pop
adc
ds
cmp
inc
mov
dec
xor
shrb
mov
push
shl
dec
in
xchg
in
filds
repz
gs
sarb
push
fildl
xchg
adc
pusha
js
movsl
xor
fnstcw
pop
daa
inc
sahf
pusha
out
cwtl
mov
ret
pusha
xchg
cmp
clc
add
or
jne
pop
inc
sbb
xchg
scas
outsl
pop
gs
mov
lret
icebp
push
cltd
enter
rcll
popa
pusha
mov
je
cmp
cmp
adc
cmpsl
jmp
ret
movsb
cld
ret
xchg
push
cmpsb
add
int3
cmp
inc
pushf
jns
mov
cmpsl
mov
sub
cmp
popa
out
mov
add
jno
lret
push
std
fxch
enter
arpl
mov
loope
jg
stos
mov
icebp
or
test
shlb
mov
jbe
sub
or
dec
sti
cmpsl
push
dec
popf
fbstp
lds
mov
scas
rorl
ljmp
inc
and
adc
jmp
sbb
cmp
lods
pop
out
push
in
mov
pop
hlt
dec
enter
into
fcoml
hlt
add
orb
xor
mov
adc
pop
sub
out
mov
and
popa
flds
dec
push
loopne
mov
lret
pop
xchg
fadds
cmc
mov
sub
mov
test
xor
xor
imul
mov
mov
in
loope
sti
mov
sbb
shr
test
xchg
push
adc
icebp
int3
or
mov
iret
test
fstl
andb
outsl
outsb
mov
pushaw
mov
shr
xlat
in
cmp
jmp
hlt
xor
push
dec
add
mov
mov
lret
fbld
mov
xchg
xchg
jne
pop
sahf
fisttps
inc
data16
lods
xlat
cli
cmc
sub
pop
xchg
mov
pop
mov
daa
xor
in
push
pop
fs
or
arpl
test
sub
in
inc
sub
xchg
sti
sbb
mov
mov
and
push
jg
ret
jp
cmp
or
sub
fnstsw
aas
cltd
add
adc
push
xchg
ret
into
mov
adc
das
inc
lahf
mov
adc
mov
xchg
pusha
fisubrs
xor
cli
inc
adc
xchg
shl
test
xor
xchg
fildll
pop
loopne
test
scas
in
movsb
shl
mov
jp
data16
push
shl
pop
add
xchg
mov
out
movsl
ljmp
jne
les
nop
jnp
out
repz
mov
dec
cwtl
mov
in
fucomi
inc
in
add
rorb
imul
cltd
mov
or
xchg
out
and
push
inc
int
xlat
sahf
push
xor
dec
insl
nopl
sbb
and
movsb
or
mov
inc
dec
out
and
shlb
cmp
mov
rclb
dec
mull
mov
lret
movsb
mov
idivl
adc
mov
cmp
pop
xchg
jge
divb
outsl
xor
je
sbb
dec
je
or
mov
jg
fs
lahf
sbb
aas
and
dec
cld
dec
mov
pushf
dec
std
gs
mov
xchg
dec
adc
ljmp
dec
addr16
aad
lock
sbb
sbb
int
sub
cwtl
and
in
jmp
lds
mov
addr16
inc
add
dec
int3
outsl
push
adc
cwtl
pcmpgtb
into
adc
add
mov
dec
imul
sahf
and
lods
xchg
push
or
inc
iret
mov
movsl
inc
mov
cmpsb
sbb
test
mov
push
jb
mov
int3
lea
gs
popa
cmpsb
std
or
movsl
aaa
ja
jg
sub
and
xor
call
jmp
arpl
sub
nop
add
mov
loopne
icebp
outsb
jae
xor
xor
arpl
dec
lahf
mov
sub
inc
cmpsl
cmp
jb
outsl
adc
xchg
mov
scas
fst
jae
push
repz
fcmovne
mov
lahf
sub
addr16
or
xchg
incb
stos
nop
xor
cwtl
add
fldl
stos
movsl
popa
jle
push
fwait
cli
cs
in
and
lea
scas
add
iret
decb
jl
inc
xor
fnstenv
fs
xchg
pop
repnz
loop
imul
push
jmp
sbb
outsl
scas
mov
jbe
jg
les
aad
adc
lds
pop
xchg
fnsave
fcomip
cmp
push
mov
enter
dec
or
rorb
out
xor
fsubrp
jl
aam
add
leave
dec
fs
and
repz
shl
push
popf
inc
mov
fdiv
and
add
mov
cld
decb
out
and
fistpll
and
loopne
pop
fstps
mov
jl
arpl
pop
adc
push
or
xchg
into
int
aas
out
inc
jne
jmp
and
or
hlt
cs
jae
push
push
mov
add
pop
roll
test
xchg
add
push
pop
mov
movsl
stc
dec
adc
push
stc
stc
push
fsubrs
loop
mov
icebp
insl
mov
divb
nop
test
jne
test
add
pushf
test
and
repz
dec
mov
mov
shl
stc
shrb
sub
cmp
in
push
mov
xchg
lods
roll
dec
pop
cli
das
adc
push
fnstcw
mov
test
push
insl
xor
rorb
aas
fsubrs
enter
dec
push
adc
cli
cmpl
notb
sbb
pop
js
or
nop
xchg
test
outsb
lret
cwtl
pop
and
mov
loop
mov
xchg
mov
sbb
movsb
jnp
cmp
ss
das
sti
mov
and
mov
mul
gs
leave
clc
adc
mov
repz
pushf
xchg
jo
fdivr
fsts
jge
cmp
jmp
push
cmp
mov
fwait
aad
mov
pop
push
imul
jne
inc
jae
xchg
call
jo
ss
or
xor
adc
xor
xor
jg
inc
decl
xor
add
mov
pop
and
div
dec
adc
fsubrs
aas
mov
pop
and
sahf
insl
pop
jg
sub
ret
mov
call
xor
add
mov
or
xchg
mov
push
cld
cmp
scas
or
bound
sub
jl
out
in
mov
cmc
cmpsl
xlat
iret
push
adc
jmp
and
xchg
aas
clc
push
jb
adc
and
insb
gs
test
mov
jmp
jmp
mov
roll
sub
cmpsl
dec
cmp
lahf
adc
xchg
cmp
xor
mov
mov
mov
xchg
lret
jne
lret
sbb
lret
adc
aaa
clc
fcomps
lock
enter
xor
and
fistpll
es
cmp
and
push
mov
xor
out
sbb
xorl
add
inc
shlb
call
int
adc
mov
adc
in
jmp
jle
stos
in
adcb
shl
inc
xchg
cli
es
push
mov
ficoml
in
push
das
cmp
pop
leave
out
out
icebp
cmp
push
jl
insl
call
xor
dec
and
int
ficoms
insb
mov
dec
mov
clc
and
add
jp
mov
xchg
loope
int
icebp
add
pop
in
movb
ss
or
dec
xchg
imul
jo
mov
insb
cmpsl
sub
dec
or
inc
mov
pop
adc
dec
mov
mov
scas
adc
jmp
divl
shrl
xchg
shll
xor
xor
fs
inc
stos
and
je
clc
mov
push
xchg
dec
xchg
xchg
xor
sub
adc
dec
shl
lahf
les
mov
aad
dec
sbb
test
sub
add
ljmp
cs
xchg
jge
adc
scas
divl
jb
inc
push
dec
sbb
test
cmp
daa
shll
adc
dec
cmpsb
in
jnp
inc
jno
dec
scas
mov
repnz
into
iret
pop
sub
inc
xor
and
pop
adc
mov
push
jbe
das
add
lahf
jo
pop
jnp
outsl
pop
adc
cmp
xor
mov
gs
pushw
shll
jbe
sub
jecxz
rcrl
ret
xlat
outsl
cmc
jo
xchg
enter
mov
dec
cmpsl
daa
pop
pop
imul
mov
dec
cmp
loopne
cmp
pop
lret
xor
orb
mov
divb
out
pop
jne
cmpl
dec
pop
pop
jecxz
dec
push
hlt
fiadds
jmp
aam
cmp
xchg
fbstp
mov
insl
popf
fidivrl
fistpl
push
jge
or
or
test
inc
and
and
out
cmp
cmp
cmp
cli
mov
rorl
fsubrs
cltd
mov
sbb
in
stos
mov
cmp
adc
jl
lret
cmp
jbe
add
iret
or
outsb
loopne
cwtl
jle
faddl
fwait
sbb
add
cmpsl
mov
enter
add
and
popa
xor
pop
and
pushf
popf
inc
imul
icebp
or
pop
data16
mov
rcl
or
cs
hlt
imul
pop
pop
loopne
pop
lds
test
cmp
pop
and
add
add
or
xchg
movsb
xor
add
pop
and
mov
fidivs
lcall
cs
mov
fisttpl
mov
add
insl
fdiv
jmp
mov
or
pop
add
pop
sub
sbb
mov
pop
jmp
std
loop
and
push
mov
leave
jo
aad
and
lods
les
pop
add
cmp
mov
int
push
xor
not
mov
adc
shr
dec
pop
mov
cmp
lods
inc
sub
dec
fcomps
push
xchg
push
mov
sbb
test
popa
imulb
push
ja
out
fsubr
cltd
adc
clc
pusha
pop
jbe
ret
push
pop
fsubrl
adc
xchg
sbb
test
fcomps
ds
push
push
hlt
shll
rcl
push
orb
add
cmp
pop
in
aad
les
enter
scas
ret
pop
icebp
pop
hlt
add
aaa
into
push
cltd
xor
jp
sbb
fs
xor
jge
mov
lahf
pop
mov
ja
ljmp
repz
lret
pop
addr16
mov
loop
and
mov
mov
mov
cmp
or
fisubl
andb
pop
sub
aas
jp
sub
cli
lods
cmp
inc
ret
pop
sarb
out
push
sbb
sbbl
movsb
xor
mov
aam
cmpb
xor
aaa
jae
fists
enter
or
jns
xor
cmp
cmpsb
fldt
mov
sub
lods
hlt
lds
enter
in
cmp
mov
aam
in
xchg
push
xchg
lret
clc
adc
push
test
ret
inc
jo
push
mov
lds
inc
call
or
daa
mov
xchg
sub
enter
lods
inc
dec
jae
mov
jge
push
push
cli
lcall
jl
dec
cmpsl
mulb
inc
fisubrs
dec
or
pusha
fstps
out
leave
jmp
jbe
enter
andb
inc
bnd
cmp
ja
jbe
sbb
dec
jno
bnd
jle
jns
inc
in
mov
movq
push
sarl
imul
cmpl
cmpsl
imulb
inc
in
push
cli
movsl
and
push
inc
cmp
mov
addr16
repz
test
jb
ja
mov
push
sbb
mov
jbe
mov
add
insb
roll
pop
pop
push
jle
mov
mov
add
inc
cmp
inc
stos
pushf
pop
test
mov
xchg
cmp
movsl
or
shlb
icebp
cmpl
sbb
aas
mov
mov
enter
call
adc
out
sbb
pusha
fxtract
cli
sahf
or
xor
clc
mov
pop
pop
mov
lahf
sbbl
mov
mov
call
add
jl
jmp
in
adc
gs
xchg
sahf
aaa
and
dec
inc
mov
xchg
lahf
fisubs
mov
mov
mov
ljmp
jno
leave
pop
stos
adc
add
xchg
lret
dec
add
or
push
xchg
sbb
repz
call
ljmp
xchg
adcl
repnz
adc
jno
push
jle
stos
mov
sbb
nop
je
mov
cmpb
mov
or
push
adc
enter
mov
aam
xor
dec
sub
out
jb
xor
xchg
cmpsb
mov
insb
jecxz
lret
push
xor
shrb
jl
insb
enter
fwait
pop
cltd
test
dec
in
mov
loope
mov
dec
lea
sub
in
sbb
jne
ret
in
pop
sub
inc
dec
lret
mov
pop
jae
sti
cmp
fidivs
push
cltd
add
xor
mov
and
ficomps
in
fwait
sarb
xchg
ret
cmp
cmp
jo
xchg
out
in
mov
xchg
icebp
lret
fwait
cli
std
imul
fstps
daa
je
pop
push
jns
push
aam
sbb
jns
cmpsb
fsubrl
scas
mov
mov
fisubs
lcall
jo
inc
mov
shll
xchg
shlb
repnz
enter
dec
ss
xor
adc
fldenv
and
cs
sbb
mov
loope
addr16
sbb
out
xor
add
arpl
jg
dec
inc
dec
mov
repnz
push
jo
push
push
es
sbb
iret
mov
lcall
adc
adc
frstor
lcall
popf
insb
sbb
xchg
xchg
push
push
cwtl
pop
aaa
pusha
xor
mov
mov
out
cmpl
mov
cmovle
push
sub
pop
sub
mov
leave
pushf
fcomip
add
xchg
adcb
outsl
sub
add
dec
xor
or
adc
mov
mov
mov
test
jp
add
jno
rcr
mov
push
fcoms
adc
rcll
or
cwtl
stc
sti
or
popl
xchg
out
push
out
mov
ds
pushf
loopne
push
jp
mov
or
ja
js
inc
mov
shl
js
push
mov
push
sahf
push
adc
incl
adc
aam
sub
push
mov
aas
in
jge
mov
in
mov
mov
push
adc
inc
push
fsts
and
cmp
sbb
jl
mov
xchg
cmp
loop
stos
divl
jge,pt
xor
xor
push
mov
mov
ret
lock
shll
and
mov
sub
inc
cmp
add
mulb
cs
movb
daa
jnp
mov
int3
adc
sahf
test
jae
movsb
mov
ss
dec
jno
js
jle
repnz
mov
jae
insb
cmp
cmc
outsb
mov
sub
mov
sbb
jmp
pop
xor
and
subb
insb
js
mov
xchg
cmp
insb
mov
imul
xor
lds
adc
sbb
xchg
push
lahf
jo
js,pt
lret
rcrb
or
or
mov
lahf
aam
imul
fbld
lods
mov
arpl
push
mov
mov
mov
xor
dec
mov
jl
nop
cs
aaa
jo
inc
in
and
push
hlt
cltd
aaa
in
pop
push
pop
outsb
sub
jl
lock
xor
mov
scas
das
xchg
testl
push
push
inc
scas
ds
mov
dec
adc
mov
jmp
mov
jecxz
ret
int
stos
add
out
fwait
sub
mov
xchg
sbb
xchg
inc
insb
popa
mov
cmp
cmp
push
push
std
decl
shr
scas
push
test
out
or
xor
dec
pop
ss
xor
sarb
imul
fmuls
cmc
int
xor
popa
mov
jmp
loopne
add
jl
jp
adc
enter
pop
add
jo
xchg
add
sbb
test
in
mov
pop
mov
mov
and
inc
or
mov
jle
js
test
adc
and
pop
jp
xor
xchg
inc
push
dec
scas
jp
jb
rorb
dec
iret
es
mov
adc
pop
popf
cs
inc
lea
int3
xor
inc
inc
and
mov
sub
ja
hlt
fbstp
cmc
adc
loop
push
lahf
cltd
mov
inc
mov
push
sbb
xchg
jns
ss
popa
jge
out
mov
mov
pop
mov
mov
jmp
cmp
dec
xor
jae
add
scas
mov
or
into
mov
jbe
mov
adcb
lods
cmpsb
repnz
xor
in
sub
lock
ljmp
iret
in
ret
and
div
sub
loope
xchg
aaa
dec
push
mov
test
jmp
out
or
inc
pusha
mov
leave
or
lds
xchg
xchg
adc
pop
sub
lret
dec
int
repz
loop
push
fs
js
add
pop
jns
add
out
ljmp
cmp
js
inc
jb
pop
andb
push
mov
mov
dec
xchg
lods
jl
insb
iret
add
outsl
out
into
mov
aad
outsb
cmp
pop
pop
jae
nop
das
cltd
and
mov
sbb
les
in
pop
add
loopne
cmp
xchg
test
cmc
xor
or
fists
dec
cld
pop
addb
gs
inc
pop
out
stos
bound
dec
xchg
ds
jecxz
inc
dec
cmc
popf
fiaddl
pop
test
dec
dec
addr16
mov
mov
inc
sbb
mov
dec
cmp
ds
nop
sbb
inc
push
jbe
push
mov
cmc
out
cmpsl
js
adc
std
cmp
mov
jle
dec
dec
mov
sbb
sub
fdivl
popa
test
jge
loopne
nop
insb
xor
test
pusha
adcb
inc
dec
lods
faddp
lea
dec
jb
jnp
push
sbb
xchg
add
jno
sbb
movsl
inc
int
int3
push
js
xchg
cmp
mov
jns
pop
scas
fcoml
roll
imul
inc
fistpl
mov
lods
pop
clc
popl
test
add
adc
mov
push
jl
iret
mov
mov
pop
popa
test
mov
insl
test
leave
mov
scas
mov
add
aaa
out
add
add
dec
mov
aas
dec
sbb
fdiv
sub
add
mov
jne
data16
push
sbb
mov
scas
sub
in
add
jb
jmp
shr
les
xlat
pop
lock
xchg
out
xor
mov
fists
xor
push
aas
imul
add
push
jg
aas
add
pop
push
outsl
mov
dec
pusha
or
mov
cmp
ljmp
xchg
imull
xchg
jl
pushf
mov
roll
add
fdivp
cmp
out
xor
repnz
mov
ficompl
sub
mov
add
mov
out
mov
outsl
repz
loope
sarb
das
test
pop
push
pop
add
pop
int3
xor
push
xchg
popf
mov
add
outsl
push
loope
test
jnp
jnp
out
add
xchg
xor
movsb
lret
mov
out
cltd
into
movsb
gs
adc
iret
sbb
ficompl
sbb
movsb
xchg
sub
sub
outsl
jb
notl
or
pop
lahf
in
mov
mov
rcll
mov
add
or
xchg
rep
xor
mov
daa
fldl
jne
jmp
cmp
inc
mov
mov
mov
mov
int3
ljmp
xchg
sahf
mov
xorb
jae
cmp
aam
mov
movsl
fcom
cld
inc
jle
sub
ss
jle
lds
in
push
push
and
xchg
jno
ljmp
push
push
bound
sbb
into
mov
out
test
jl
sbb
pop
lahf
dec
addr16
or
repz
or
jmp
mov
aad
xchg
fsincos
push
pop
xor
bound
sbb
pop
mov
lods
repnz
subb
inc
mov
add
testb
jl
enter
add
insl
xchg
mov
or
lods
sahf
lods
pop
dec
enter
pop
psubusw
inc
mov
scas
mov
ja
dec
jae
imul
xorl
mov
and
jno
mov
inc
jae
mov
and
imul
xor
add
xlat
rorl
mov
out
sbb
xor
sbb
jae
les
sbb
icebp
fs
jns
push
negb
jns
aam
mov
mov
call
outsl
cmp
andl
dec
jge
jnp
xor
popf
or
ds
push
popf
in
and
push
push
adc
ljmp
rcrl
adc
repz
xor
adc
dec
fsubs
movsb
call
adc
xor
in
fmull
push
idivb
xchg
scas
fwait
adc
push
imul
sbbb
int
sbb
subb
cmp
mov
xor
in
in
sbb
and
ss
icebp
sbb
sbb
sarb
scas
cmp
xchg
jp
cmp
rolb
ja
pop
xor
pop
js
clc
fists
mov
xor
gs
sub
mov
xchg
stc
addr16
sub
repnz
mov
aad
add
sub
push
ds
sub
xchg
cmp
cmp
xor
jg
cmp
fwait
ret
pop
in
rclb
fs
nop
cmp
cmpsl
pop
shlb
stos
xchg
mov
xchg
cmpsl
or
lcall
mov
jns
cmp
mov
dec
rcl
xchg
jo
add
lods
lock
mov
adc
add
pop
in
dec
cmp
orb
clc
add
pop
popf
aas
out
xchg
ja
push
outsb
in
xorl
cmp
gs
push
aaa
dec
xlat
sbb
sbb
xchg
xor
lret
mov
roll
popa
cltd
xor
xchg
popa
xor
mov
mull
aas
mov
outsb
jl
movsb
scas
test
fbld
arpl
cmp
ljmp
imul
mov
adc
mov
repnz
jle
repz
xor
aad
push
out
mov
push
ss
pop
jmp
push
stos
cmp
sub
or
aad
and
sbb
adcb
adc
inc
push
nop
xor
mov
pop
stc
xor
mov
mov
insl
mov
loop
ja
push
add
pop
inc
add
mov
mov
add
add
add
lds
xchg
xor
xor
pop
or
sarb
stos
jnp
push
stos
ja
aas
fwait
add
arpl
popa
mov
fildl
xchg
in
in
loopne
and
and
es
pop
dec
mov
sbb
mov
add
mov
insl
scas
adc
or
fwait
aas
sbb
lock
xchg
push
push
mov
push
sarl
and
cs
insl
ficoml
repz
push
mov
fidivrl
xchg
jbe
ror
cmp
mov
push
mov
push
dec
inc
pop
push
es
xor
push
aad
mov
in
lds
xchg
jb
mov
mov
xchg
mov
mov
or
mov
cmpsl
mov
xchg
fcoml
mov
add
popl
clc
rcl
popa
testb
and
or
mov
out
mov
push
int
pop
mov
pop
into
add
mov
xchg
leave
xchg
jecxz
fnstsw
dec
add
dec
fisttps
leave
inc
ja
ret
sub
shl
jmp
jb
ret
dec
cmp
std
aaa
and
pop
std
in
xor
jp
xlat
enter
mov
mov
testb
fmul
lods
pop
adc
sti
or
sbb
mov
or
or
adc
inc
leave
cld
sbb
mov
mov
add
std
mov
pop
cmp
icebp
jp
rorb
fstps
es
pop
dec
sarl
push
out
add
sbb
add
sub
jns
jmp
push
aad
nop
push
jb
loope
rorl
push
add
xchg
pop
scas
orl
push
addr16
mov
idivl
jbe
popf
mov
mov
jns
sub
or
cltd
pop
xor
jp
in
inc
push
dec
cmp
gs
adc
call
cld
xor
xor
test
ljmp
insl
pop
loopne
cmp
adc
insb
xor
add
movsl
push
insb
inc
mov
mov
mov
fists
cmp
shl
pop
lods
aad
inc
inc
mov
push
ss
push
sarl
xchg
mov
pop
xor
ljmp
stos
scas
lcall
add
lods
popl
push
dec
les
and
das
les
mov
insb
jmp
mov
and
jbe
outsl
scas
jno
xchg
decb
aam
cltd
sbb
xor
xor
repnz
and
cmp
orl
lcall
sbb
push
add
push
mov
mov
inc
push
and
imul
pop
dec
sub
add
dec
or
pop
rcrb
push
add
mov
data16
adc
cmp
arpl
mov
out
in
or
mov
in
mov
cli
pop
pop
aaa
gs
lahf
js
orl
mov
cmp
cmp
pop
cmc
inc
sub
pop
mov
sub
sub
dec
movsb
movsb
xchg
es
decb
movsl
in
xor
pop
inc
lahf
cmc
mov
aad
lahf
mov
call
repnz
jnp
mov
jnp
pushw
ret
movb
sbb
jle
leave
shrb
push
add
xchg
push
mov
dec
jmp
sub
enter
mov
xchg
lods
pushf
popf
bound
in
jne
loop
mov
xchg
loopne
xchg
cmpsl
adc
cmp
adc
xchg
sub
xchg
dec
or
or
xor
cmpsb
and
ficomps
push
inc
iret
xchg
xchg
mov
out
xorl
pop
test
test
mov
cmpsb
clc
test
push
jbe
std
cwtl
stc
dec
out
pop
and
xchg
mov
aad
ficomps
mov
pusha
std
jno
dec
hlt
mov
mov
sub
orl
inc
mov
inc
test
sbb
movsb
xor
and
add
push
or
aas
rclb
xor
imul
push
jne
xor
nop
cmp
adc
ds
xchg
sub
push
sub
lds
mov
adc
movl
sbbl
xchg
lea
mov
cmpsb
out
hlt
cwtl
fwait
push
das
in
push
leave
daa
cmp
shrl
xchg
mov
ret
push
das
das
mov
pop
popf
lock
mov
cmpb
data16
jg
push
mov
daa
push
sbb
and
cmp
lods
insl
std
rcrb
lods
lahf
gs
rcll
mov
jl
mov
jl
mov
and
sti
mov
gs
xor
sar
mov
mov
and
lea
shl
mov
push
pop
jmp
mov
orl
mov
mov
insl
cwtl
inc
mov
dec
push
jl
ret
jle
repnz
ret
inc
pop
daa
test
out
xlat
or
adc
decl
push
fstpt
push
mov
push
pop
enter
leave
std
mov
shll
repz
cld
pop
xchg
mov
xchg
addb
add
mov
sbb
adc
lea
sbb
sub
xchg
test
imul
sub
cmp
sub
xor
push
notb
or
out
lods
jo
jl
and
push
xchg
dec
cmp
push
lret
jbe
aaa
stc
stos
call
or
sti
push
shl
or
cmp
pushl
inc
lret
push
push
xlat
addr16
mov
popf
mov
lret
jnp
lcall
mov
stos
scas
pop
les
sub
add
jmp
cmp
iret
push
out
cld
dec
push
jge
xchg
sbb
xor
or
or
dec
ret
test
sub
loopne
dec
sub
or
sti
cmp
pop
pop
test
sub
mov
xor
mov
push
inc
andb
imul
and
aas
and
jmp
push
movsb
dec
cs
nop
adc
jb
fdivs
sub
xor
loopne
bound
aaa
cmpsb
insl
push
cmpb
cmc
loope
inc
pop
jmp
in
push
jo
imul
aas
std
add
push
stos
mov
pop
test
aad
add
sbb
mov
movsb
sub
mov
negl
push
mov
xchg
or
dec
add
addr16
pop
pushf
testb
push
jle
lods
xorl
bound
rorl
and
jnp
sbb
cmp
cs
imul
inc
mov
sub
inc
addl
mull
sarb
dec
pop
testl
or
push
stos
adc
fisubs
lods
stos
hlt
mov
int3
or
or
insb
push
sahf
and
popf
fwait
and
scas
ss
mov
out
inc
stos
icebp
mov
inc
fnstcw
adcl
inc
adc
sti
sbb
or
lea
mov
inc
lods
or
add
xchg
mov
aas
sub
mov
dec
jl
je
xor
and
call
xchg
popa
notl
jno
mov
mov
push
int3
cmp
in
pop
fyl2xp1
push
movsb
xor
dec
xlat
das
xchg
fwait
pop
stos
ret
aas
rcr
lods
movsb
aas
jg
test
clc
enter
outsb
mov
lods
sbb
jae
stc
pop
pop
inc
adc
stos
jae
xor
out
adc
bound
dec
push
insb
or
lods
or
fmulp
jg,pt
and
stc
inc
repz
pusha
insl
shll
in
sbb
sbb
out
gs
mov
xchg
push
inc
dec
addl
mov
in
sbb
cmpsl
dec
adc
insb
stc
fmul
or
out
sbb
aad
pop
test
andw
outsl
xchg
nop
dec
jo
imul
shr
mov
loopne
sbb
jb
mov
shlb
addr16
fprem1
dec
cmc
and
aas
xchg
sbbl
popa
cmpsb
int3
jns
jae
add
mov
mov
mov
cmpsl
aas
popa
mov
sbb
adc
and
mov
lcall
xor
or
fcomp
sub
jg
mov
outsl
push
cmp
pop
xchg
push
insl
lret
ja
iret
rcr
loope
push
int
cmpsl
push
hlt
push
in
mov
cld
scas
into
lods
pushf
divb
and
insb
dec
and
imul
add
cli
es
cmp
rcl
popf
imul
stos
mov
out
jb
pop
rorl
mov
fidivrs
je
arpl
sub
rcrl
xor
mov
jg,pt
mov
loop
enter
or
not
adc
ret
sub
jne
sbb
insb
pop
dec
inc
and
or
mov
arpl
out
shll
jp
mov
lret
nop
call
push
push
push
daa
fistpll
inc
pop
loop
bound
call
loopne
push
stc
lods
clc
and
cmp
cmc
nop
jmp
ret
loop
cmpsb
dec
and
testb
jp
cltd
ljmp
aaa
xchg
adc
jg
scas
outsb
rcll
dec
ds
aad
mov
add
jns
push
add
and
popa
je
rclb
in
push
addr16
lcall
fnstenv
jbe
cmp
mov
push
lahf
mov
pop
push
push
mov
lahf
jp
sti
mov
push
stos
xchg
sbb
pop
jbe
sti
jne
dec
arpl
shrb
loopne
mov
cmp
lret
xchg
sti
dec
insl
cmp
lcall
cld
in
pop
mov
daa
or
jge
push
cmp
subl
test
sarb
in
push
mov
mov
push
cmp
pop
aaa
push
mov
lahf
fdivl
sbb
das
push
push
adc
nop
pop
xchg
adc
clc
flds
iret
cld
xchg
negb
push
push
pop
test
mov
popa
test
roll
iret
mov
push
xor
inc
outsl
arpl
frstpm(287
cmp
xchg
scas
xchg
push
mov
lret
cwtl
fdivl
mov
int3
sub
imul
rcll
sbb
data16
mov
int
loopne
push
lret
movsl
fstpt
xchg
rclb
sarl
cmp
jbe
loope
mov
repz
pop
inc
dec
add
mov
xchg
into
shrb
sub
mov
adc
sub
jae
sti
cwtl
aam
push
out
pop
adc
insl
pop
call
mov
add
dec
jne
or
rcrb
and
mov
ret
add
fnstsw
aad
inc
cwtl
mov
mov
adc
mov
sahf
repnz
leave
adc
xchg
int3
dec
sbb
push
jle
xlat
sbb
push
push
mov
mov
mov
aad
ds
scas
in
aas
negl
mov
xchg
cmp
pop
test
mov
mov
xor
mov
mov
addr16
push
gs
fcmovnu
cld
jbe
jmp
xchg
inc
pushl
mov
lea
adc
jbe
test
rorl
jb
and
pusha
outsl
add
xor
pusha
sbb
mov
stos
fwait
mov
and
push
repnz
in
cmp
movsb
lret
lret
jbe
jne
xchg
cmp
leave
mov
lret
in
mov
stos
mov
test
je
add
or
insb
adc
jmp
push
lds
sub
icebp
mov
std
sub
jo
cwtl
pusha
xor
es
std
pusha
jns
sbb
out
mov
cs
imul
xchg
adc
mov
sbb
push
xlat
hlt
pop
sbb
sub
fbstp
sub
rorl
sbb
mov
pop
test
mov
push
shlb
into
adc
aad
jnp
fsubs
push
imul
out
pop
out
cmpsl
mov
dec
cmpsb
sarb
arpl
push
cmp
xchg
pop
jo
mov
and
notb
jp
pushf
addr16
adc
and
adc
int3
aaa
hlt
jae
mov
xorb
jge
aad
push
call
mov
test
lods
jp
xchg
lret
mov
addr16
sahf
mov
repz
xchg
jno
jmp
jge
jb
inc
xchg
mov
add
or
popf
dec
adc
xchg
xor
jp
lock
aas
incb
push
push
dec
jbe
xchg
lock
fwait
andl
xlat
scas
hlt
fisttpl
sbb
ror
stc
fsubl
aam
aaa
mov
aaa
inc
pop
mov
outsl
sub
in
xchg
pop
sti
jbe
pusha
or
push
jnp
inc
push
mov
ret
int3
fs
inc
jb
cmove
mov
and
leave
mov
sub
mov
mov
out
and
loop
push
jle
es
xchg
aad
and
dec
imul
inc
leave
mov
dec
inc
dec
jns
push
pushf
leave
loop
jmp
pop
ds
push
scas
fs
sub
mov
rorb
xchg
sbb
push
lret
lods
bound
out
lcall
mov
adc
testb
jne
sub
daa
sarl
mov
das
lea
cwtl
push
sub
jae
cmp
xchg
rcl
fwait
dec
aam
call
mov
pop
push
sbb
dec
cmp
sahf
movsb
addr16
dec
int
sbb
or
enter
xor
out
lahf
push
pushf
push
jno
movsl
mov
xor
sbb
icebp
inc
cwtl
push
jo
ja
add
fildll
popa
gs
roll
adc
cld
inc
push
cld
sbb
jecxz
test
test
inc
dec
test
inc
jecxz
orb
jb
mul
xor
filds
je
mov
outsb
sti
xor
leave
jnp
into
mov
mov
ret
inc
xor
jo
push
inc
lds
scas
adc
sub
call
or
aas
xchg
xor
mov
cmp
divb
xor
shrl
push
icebp
push
sahf
jbe
sarl
pop
jge
in
dec
mov
push
cwtl
push
adc
inc
pop
and
les
in
jge
or
mov
mov
ret
in
inc
adc
add
mov
ret
sub
pop
cltd
lock
push
xchg
jl
push
fstps
mov
aaa
aaa
leave
push
cmpsl
and
or
rolb
or
divb
push
dec
sbb
adc
push
push
mov
rcrl
lret
dec
stos
push
fadd
incb
dec
mov
push
pop
adc
les
insb
pop
js
scas
push
roll
jmp
pop
dec
rcll
stc
insb
and
stc
clc
cmp
mov
push
cmpsb
out
shrl
jo
imul
adc
adcl
outsl
sbb
inc
fimull
icebp
stos
scas
xchg
and
fistl
aam
iret
jmp
inc
and
add
adc
xor
mov
sub
addb
mov
jl
jbe
mov
call
sahf
or
cld
test
iret
jne
mov
rcll
movsb
aaa
nop
scas
inc
push
pusha
jecxz
and
insl
add
or
mov
loope
mull
inc
inc
adc
test
popa
jp
mov
dec
popf
or
je
andb
add
push
cltd
adc
repnz
jns
adc
and
fsubs
mov
fistpl
into
pop
mov
xchg
pop
rcl
adc
arpl
bound
and
fmuls
rolb
xor
imull
pop
repnz
dec
inc
movsl
fs
mov
fs
pusha
xchg
out
pop
scas
xor
in
pop
push
int3
xor
fcmove
divb
outsb
sbb
les
xor
mov
dec
xor
fldenv
nop
movsl
push
gs
in
jmp
push
jl
out
insb
aam
mov
icebp
sbb
aas
inc
movsl
adc
sbb
or
cmp
outsb
cwtl
add
aam
loopne
decl
xor
call
fs
xchg
sbb
mov
pop
jnp
sahf
ja
dec
enter
aam
inc
fiadds
adc
roll
sbb
pushf
jge
mov
mov
sti
mov
push
xchg
sub
mov
jb
xchg
inc
and
stc
fisubs
xchg
lret
icebp
ret
bound
fcmove
adc
stos
pop
jge
dec
xor
ss
jns
rorl
pushf
repz
adc
scas
push
adc
cmp
aaa
outsl
cld
aaa
pop
loop
repnz
cmp
int3
in
jne
pushf
es
or
add
divb
push
arpl
rol
aam
xchg
inc
ds
jge
jle
jbe
test
adc
mov
mov
lods
xor
xlat
mov
sarb
ss
imul
and
xchg
push
iret
hlt
mov
mov
popf
xor
repz
imulb
fnstcw
ret
add
xor
gs
inc
imul
rcll
pop
inc
push
xchg
cmp
add
pop
sub
and
pop
mov
pop
xlat
jmp
xchg
jg
and
fnstcw
addb
add
gs
test
ficoml
lods
sub
sti
sbbl
jge
les
sti
fst
add
push
cmpl
arpl
jns
test
repnz
lahf
adc
cmp
mov
inc
fldenv
in
xor
adcl
fisttpll
fcoms
mov
aaa
push
aam
std
add
lods
fistl
push
mov
push
subl
lock
xor
fdivs
dec
xchg
mov
pop
jb
and
cmpsb
mov
mov
and
stc
fisttps
movsl
lcall
in
jne
shrl
or
pop
adc
imul
sti
aad
fildll
mov
rcrl
fnstenv
xchg
stc
and
test
stc
mov
fistl
gs
mov
dec
shr
push
jo
inc
sbb
inc
repnz
xor
mov
push
pushf
pop
mov
ja
pop
lea
mov
mov
int
sub
dec
rol
call
fadds
mov
aas
fists
cltd
adc
fists
hlt
out
push
loope
dec
xchg
in
cltd
jne
push
stos
dec
cli
inc
push
shr
stos
push
and
mov
sub
daa
jae
mov
sbb
fadd
xchg
mov
cld
cmp
loopne
jp
sbb
mov
jae
push
test
daa
enter
sub
outsl
stc
mov
pop
push
adc
popf
push
add
popa
addr16
shlb
xor
cmp
enter
xor
movl
dec
push
xor
push
lods
loop
jmp
das
push
inc
fs
dec
or
pop
loop
mov
or
and
cmp
jno
add
pop
sbb
mov
and
stc
jno
or
movsl
scas
lcall
cld
xchg
das
movsb
loope
xchg
flds
pop
and
rcl
and
or
push
ds
dec
xchg
xchg
js
ror
jbe
jmp
cmpsl
adc
cs
in
push
xor
jmp
lock
mov
adc
push
loope
mov
insb
fmuls
sub
ret
dec
popf
out
xchg
sub
adc
cltd
xchg
jl
jge
fwait
mov
fcompl
mov
aaa
pop
sub
loop
xor
adc
fistl
cmp
popa
cwtl
loopne
push
ret
dec
scas
dec
hlt
sbb
cltd
in
std
lock
push
cmp
pushf
mov
and
pop
xor
addb
sahf
pop
mov
repnz
std
mov
pushf
mov
popa
clc
jb
pop
xchg
push
sbb
iret
rcrb
xchg
cwtl
adc
or
mov
inc
adc
push
and
or
push
sbb
dec
or
inc
and
xchg
rclb
outsl
out
aaa
mov
insb
adc
cwtl
imul
int
push
jge
insl
pushf
mov
ljmp
jge
movsb
or
jo
push
mov
cmpsl
xor
imull
cli
lods
jno
push
push
cmp
push
int3
fisubrs
xor
jb
aaa
adc
jecxz
xchg
sbb
movsb
ds
jnp
cltd
inc
shrb
loopne
adc
fldenv
pop
sbb
jo
or
arpl
stc
stos
jne
ss
popf
rcrb
aaa
mov
pusha
iret
xchg
mov
subb
movsb
fcmovu
mov
xchg
adc
lcall
outsl
mov
mov
and
cmp
orb
push
aam
dec
pop
or
fsubrp
pushf
mov
loop
mov
ja
mov
and
stc
adc
jne
and
or
cmpsb
push
cwtl
mov
xchg
pop
pop
fstpt
pop
dec
mov
sbb
cmpsb
pop
or
pop
adc
rcrl
xchg
xchg
repz
add
jge
jp
mov
hlt
jne
rol
fwait
mov
mov
mov
mov
lods
dec
lret
adcl
in
add
mov
push
adc
mov
pop
push
mov
dec
mov
scas
cmp
int3
loope
mov
aas
mull
push
jg
sbb
iret
jp
jne
jne
imulb
push
jns
lds
add
push
rcrl
in
sarl
push
inc
enter
mov
push
mov
mov
and
push
loopne
test
push
insb
lret
mov
rolb
out
pusha
lahf
mov
shlb
shll
shl
mov
add
sub
out
lahf
sub
out
and
mov
dec
nop
sbb
mov
xor
int
rcrb
divl
out
inc
mov
inc
cmp
lahf
lds
xor
popa
ljmp
adc
jmp
and
addr16
dec
push
pop
xor
int3
sub
dec
enter
mov
cwtl
scas
ret
or
sub
mov
loope
sbb
xchg
fs
loope
mov
dec
pop
or
or
int
pop
adc
and
push
cmp
inc
sbb
jbe
loop
loopne
sbb
je
sbb
test
aad
mov
mov
int
cli
ljmp
outsb
cmc
aam
mov
out
xchg
inc
xchg
and
or
and
push
xor
mov
mov
stc
or
and
cmp
nop
pop
dec
test
stos
fdivs
out
jge
mov
jg
and
sub
outsb
push
scas
adc
out
inc
sbb
and
inc
cli
test
cli
lods
mov
xlat
fcompl
adc
icebp
lret
xchg
xor
inc
xchg
daa
pop
xor
adc
cltd
push
mov
imul
outsb
jne
pushf
int
std
jns
aam
push
xchg
inc
pop
mov
rcr
jge
stc
pop
movsb
cwtl
jl
rcrl
insl
jae
cmp
and
decb
notl
mov
adc
mov
mov
or
xor
cs
pop
add
push
aam
jmp
ret
cwtl
jno
and
sbb
test
fidivrs
mov
movsb
cs
loopne
or
push
outsl
sbb
fldl
push
stos
mov
sub
pusha
add
lret
imul
or
mov
mov
dec
jmp
das
subl
adcb
in
xchg
jb
mov
xchg
in
sbb
xchg
jae
pop
pop
in
mov
lcall
ret
or
es
movsb
data16
out
daa
stos
pusha
lods
arpl
dec
xchg
imul
jbe
sub
push
fsubs
pop
mov
movb
inc
adc
mov
lcall
lods
mov
call
sbb
loopne
fwait
xchg
xor
mov
pusha
xor
sub
sub
jecxz
test
mov
adc
idivb
or
out
mov
ror
adc
cltd
and
dec
adc
cmpsb
jg
popf
xchg
pushf
and
hlt
jmp
gs
sahf
xor
test
cwtl
stos
xchg
push
fs
sbb
cli
lds
icebp
in
or
test
sbb
mov
int
mov
xchg
rcrb
or
pop
sti
pop
repnz
mov
jecxz
fisubrl
xchg
mov
repz
jne
ss
jns
adc
js
mov
jecxz
jmp
mov
pop
les
js
mov
dec
stc
mov
jmp
lahf
jl
sbb
adc
lret
sbb
mov
lea
sbb
addr16
wbinvd
rcll
push
push
push
add
cmp
mov
push
mov
push
push
jnp
les
push
xchg
and
scas
xor
pop
pop
sti
lods
nop
dec
xchg
fcoms
push
pop
pop
pop
or
js
push
xchg
add
cmp
jae
cmp
sbbb
out
dec
pop
jl
jae
outsb
insb
aam
in
lret
shrb
push
mov
adc
fs
out
and
es
dec
arpl
cli
std
test
pop
mov
orb
int
or
or
cld
dec
insb
scas
ljmp
shlb
rorl
fidivs
shrl
popf
sarl
gs
adc
lock
lods
out
fsubl
xchg
loope
xor
pop
pop
stos
dec
cld
dec
jne
jmp
gs
cmpsl
fisttpll
rcrl
ljmp
into
mov
enter
xor
jno
scas
ss
inc
mov
fcompl
xchg
out
jns
mov
add
out
outsl
rcrb
dec
mov
and
jb
aas
fnstsw
dec
in
inc
dec
jmp
sub
loope
sbb
mov
fidivrl
pop
outsl
dec
inc
fcoms
inc
or
dec
mov
fistps
cwtl
cld
cld
js
in
cmp
jne
xor
mov
add
mov
popf
lret
xchg
add
sub
test
inc
xor
inc
cmp
pushf
push
faddl
cli
shll
test
mov
clc
mov
arpl
mov
stos
sub
je
add
lods
test
pop
and
cmc
mov
addb
hlt
out
push
fmull
in
push
push
dec
iret
push
loope
rcll
pop
sbb
mov
push
sbb
shrb
sub
cmpsb
push
leave
es
sti
das
push
or
adc
or
aaa
pop
mov
mov
dec
ret
xchg
mov
aas
xor
xchg
jmp
inc
mov
cmpsl
aam
pop
cmpsb
xchg
icebp
in
xor
pop
loope
push
adc
xor
pop
das
sti
ds
sahf
sub
insl
xchg
scas
mov
sbb
cmpsl
shlb
jg
adc
add
pop
adc
popl
and
in
rolb
mov
adc
cmc
lahf
mov
cld
aas
sub
sub
aas
les
jmp
push
or
dec
xchg
xchg
dec
scas
add
sbb
xor
mov
ret
daa
xchg
cmp
sub
and
push
ficompl
aaa
lock
call
js
or
in
xor
orb
filds
adc
lcall
outsb
scas
fcoms
jbe
mov
push
sub
dec
sub
pop
mov
sub
jae
outsb
pop
daa
js
dec
in
outsb
dec
add
lahf
xchg
sbb
int3
xor
and
and
pop
mov
adc
lds
loope
testl
sub
subl
fidivrl
not
jnp
push
jno
jb
xchg
lcall
fwait
lret
dec
jle
jno
xor
sub
aam
inc
xchg
fnstenv
sub
xor
ss
inc
insb
dec
or
lcall
pop
and
lea
std
sti
mov
mov
add
insb
jno
cmp
ja
ficoms
shlb
mov
fsubs
je
lcall
or
adc
add
in
push
popw
stos
sarb
xchg
mov
and
sbb
and
or
inc
mov
sub
imul
pop
jl
bound
xchg
and
test
adc
add
jg
leave
daa
sti
add
out
sbb
adc
fisttps
or
jae
sbb
cmp
xor
inc
test
push
rsqrtps
sbbb
les
pusha
mov
adc
adcl
add
xor
pop
lods
push
std
in
sub
ret
jo
stos
sbb
mov
bound
or
sbb
mov
fistpl
jecxz
adc
repnz
test
xorl
sub
jnp
out
jl
pop
mov
pushf
push
mov
xor
add
bound
xor
mov
dec
push
inc
mov
fcoms
hlt
xor
rorb
and
xor
pop
adc
mov
lods
inc
mov
pushf
jge
call
mov
iret
popa
and
jecxz
mov
xchg
mov
mov
jmp
xor
push
sarb
push
xor
push
and
jb
or
pusha
xlat
cmc
sbb
outsb
jae
sub
add
gs
mov
push
xchg
adc
pop
pop
fidivl
lcall
pop
adc
call
xchg
adc
mov
pop
push
push
xor
xchg
out
scas
push
push
jp
cli
jno
xchg
add
and
imul
out
mov
add
jb
mov
cmp
stos
add
in
or
dec
fisubs
lahf
jno
ret
inc
pop
inc
xlat
popa
test
xchg
jmp
outsl
test
jge
mov
lea
inc
fistpl
sbb
insl
xor
addr16
and
sub
mov
stc
outsl
push
insl
lahf
inc
cmp
push
or
nop
xor
xor
lcall
add
cmp
in
pop
jl
jae
mov
shl
xchg
scas
gs
ljmp
pop
outsb
rol
les
xchg
adc
push
inc
sbbb
mov
cmc
xor
xchg
sub
lods
out
call
js
in
dec
cmp
out
sub
push
pushf
xchg
sbb
jmp
je
div
xchg
loop
mov
movsb
and
movsb
repnz
add
mov
mov
repnz
cmpsl
gs
lds
mov
sub
mov
outsb
mov
lods
test
jmp
cmpb
call
cmp
push
mov
cwtl
pinsrw
push
ds
jg
aas
or
mov
adc
push
xor
jg
test
mov
std
xor
push
and
cmp
mov
movsl
sub
fsts
xor
in
dec
ja
adc
adc
sarb
dec
insb
add
aam
je
dec
fs
mov
jmp
test
daa
mov
outsl
ja
int3
mov
inc
mov
cmp
insl
push
loope
xor
push
mov
push
scas
jge
mov
mov
dec
jns
popf
loopne
sub
pop
jmp
cld
dec
lock
xchg
out
cmp
jns
xchg
adc
adcl
sbb
lahf
jae
sti
arpl
lods
xlat
push
insb
mov
sub
xchg
popf
or
mov
xchg
mov
adc
fstpl
or
adc
out
jno
ljmp
test
xchg
mov
nop
jp
inc
gs
dec
push
fistl
and
inc
scas
mov
movl
repz
cs
scas
das
inc
sbb
stos
xchg
sahf
insl
jb
popf
stc
daa
mov
mov
and
sti
xchg
fsubs
imul
test
leave
and
roll
test
xchg
cmp
add
jp
jmp
lods
adc
gs
sub
xor
leave
out
xor
inc
and
loop
dec
xor
sbb
sbb
loope
fwait
mov
adc
shrb
idiv
mov
pop
fldenv
lret
pusha
sahf
inc
cmp
cld
or
rcrb
and
imul
ds
jle
and
xor
iret
push
call
pop
sbb
ja
jnp
pop
ljmp
test
mov
jo
loope
lret
negl
xor
sbb
xor
test
imul
xchg
roll
mov
cmp
scas
adc
imul
lcall
mov
insb
fsubl
test
fisttpl
sub
ja
mov
cltd
pop
sub
js
pop
xor
lcall
jle
aas
mov
cmp
sub
stos
inc
movsb
jb
inc
pop
mov
mov
inc
dec
dec
mov
ftst
dec
adc
jle
sub
lods
shlb
and
mov
in
mov
mov
jl
inc
punpcklwd
rcrb
cmp
test
mov
or
sbbb
and
push
fcompl
sbb
xchg
outsb
jne
cmpl
in
xorb
gs
mov
int
fs
cmp
push
popa
popf
lret
testb
mov
aaa
out
movb
xchg
in
rol
pop
xor
dec
scas
xchg
sub
popa
stos
lcall
add
and
mov
cmp
test
arpl
loopne
fnstsw
push
jbe
enter
adc
add
in
pusha
leave
fs
push
add
xor
fbstp
cmc
aaa
mov
lea
ljmp
dec
dec
pop
mov
aas
xchg
pushf
push
fidivrl
push
adcl
aam
cmp
data16
fdivr
cltd
mov
sub
popa
or
mull
mov
nop
insl
dec
lock
cli
add
mov
sub
popf
and
mov
out
or
mov
cmp
les
popf
idivl
xchg
lods
and
loope
xchg
sbb
sbb
stos
sub
out
push
cmpsb
dec
push
jo
sarb
xor
push
stc
mov
mov
les
popf
lret
cs
out
in
mov
es
and
jns
out
mov
fdivl
repz
ret
mov
push
bound
mov
es
xchg
lods
pop
in
cli
loopne
pop
mov
lret
push
fdivs
daa
push
cs
je
adc
cltd
push
pop
mov
xchg
add
in
mov
sbb
bndldx
shrl
xor
dec
aas
loope
pusha
inc
push
repz
outsl
sub
aaa
jp
xor
jnp
popw
imul
outsb
loopne
sti
jl
ljmp
cmc
or
call
lcall
mov
mov
xchg
mov
mov
lds
call
adc
dec
jb
aad
or
cmp
jp
mov
pop
lods
lock
sub
bound
bound
xor
sbb
add
push
sahf
pusha
iret
fwait
aaa
xor
divb
rorl
cmpsl
roll
ja
movsl
in
aas
fcomps
jae
mov
ror
cmpsb
xchg
cli
fbld
sub
outsl
cmp
add
ljmp
adc
dec
popa
lds
pusha
lods
int3
inc
lret
je
jge
movsl
or
lods
test
sub
mov
dec
lcall
pop
repnz
inc
div
icebp
mov
je
pop
sub
lods
sbb
push
adc
jle
cmp
adc
inc
xchg
pop
push
xchg
adc
clc
xorl
lods
pop
leave
iret
pusha
scas
jne
push
jmp
mov
pop
jae
addr16
lahf
lock
into
lds
out
lea
jle
mov
cli
mov
inc
test
inc
jne
and
scas
inc
mov
or
xchg
sub
add
xchg
push
add
mov
jp
jmp
jbe
pop
dec
mov
add
test
pop
outsb
mov
mov
xchg
lret
loope
jne
scas
mov
cltd
shll
mov
aas
xlat
mov
cwtl
add
cmp
insb
bnd
xor
sbb
in
adc
lds
sbb
mov
scas
aas
sbbl
xorl
test
loop
jecxz
int
insl
cmp
mov
mov
xor
pushf
sbb
inc
or
and
jg
and
icebp
mov
aas
jns
pop
jle
hlt
cmp
lods
cmc
push
call
js
and
sahf
cmp
mov
fisttpll
and
sahf
push
and
bound
out
lods
out
outsl
cmp
jbe
enter
lret
out
jb
je
rep
in
repz
iret
int3
fdiv
loopne
mov
inc
push
ret
pop
jp
push
mov
cli
cs
xlat
test
sti
pop
and
popf
or
in
test
sbb
lock
lds
jp
mov
mov
sub
das
xchg
xchg
inc
push
js
push
and
andl
add
aas
pop
jno
sbb
ret
lea
stc
lea
adc
fdivs
call
ljmp
nop
mov
adc
rcrb
fisubs
pop
pop
and
and
js
push
xchg
repz
add
lret
push
imul
inc
push
fimuls
lods
imul
mov
adc
addr16
rcll
sbb
mov
lcall
clc
data16
dec
pop
jae
jmp
out
pop
pop
mov
dec
les
jns
orl
or
int3
test
dec
mov
fneni(8087
pop
or
cmc
and
jns
cld
sahf
cmp
mov
jmp
inc
jbe
pop
mov
pop
add
xchg
jecxz
jl
dec
jp
fidivs
add
xchg
adc
in
or
out
lods
jl
es
mov
roll
sahf
sbb
push
scas
and
push
inc
dec
lds
dec
rcrl
js
pop
pop
js
ljmp
xchg
add
sldt
enter
or
sti
sti
out
icebp
fistl
lock
cltd
or
fwait
pop
ja
nop
fistpl
cld
imulb
into
add
mov
in
pop
mov
bound
lahf
cmp
pop
sub
fsub
fwait
jmp
mov
jecxz
and
fidivrl
cmp
adc
test
jmp
pop
test
inc
jns
scas
stos
pop
cmp
inc
adc
cmp
jecxz
notl
xchg
adcl
scas
hlt
aam
jge
jno
std
out
xchg
inc
mulb
aas
dec
out
pop
sbb
and
mov
pushf
rcl
pmaxsw
je
xchg
arpl
icebp
pop
cmp
jl
xor
ret
das
test
push
xor
add
jnp
cmc
mov
cmp
jnp
and
rcl
jp
addb
mov
das
pop
in
adc
jp
jno
les
push
push
loop
mov
std
je
shll
dec
fimuls
arpl
std
push
int
fdivrs
dec
mov
lods
jae
jb
testl
mov
divl
test
mov
dec
dec
les
ja
test
mov
mov
subb
es
inc
xchg
sahf
pop
mov
movsl
into
adc
mov
mov
cmp
mov
bound
inc
or
loop
stos
lock
adc
jmp
jo
sahf
addr16
sub
adc
ljmp
in
xchg
xchg
or
mov
xchg
jg
sbb
adc
sti
and
xor
shl
inc
sbb
xchg
mov
in
dec
adc
xor
mov
jle
std
inc
les
cmp
inc
inc
mov
jno
hlt
xor
dec
lcall
push
mov
incl
push
aaa
push
fisubrs
sti
aam
fbstp
pop
subb
pop
ret
pop
xchg
bound
add
add
call
loop
lret
dec
dec
lcall
pop
or
dec
dec
and
adc
xchg
cvtdq2ps
outsb
mov
insb
mov
inc
outsb
xchg
es
xchg
xchg
sbb
jge
push
iret
push
push
test
pop
divb
lahf
std
push
lret
mov
movl
loope
sbb
mov
sbb
jno
scas
cmp
dec
mov
ret
mov
xchg
jl
sbb
and
mov
scas
dec
mov
push
mov
pop
rorl
adc
out
push
jb
sbb
or
ss
lock
aam
in
cmpb
push
ficoml
or
loop
jmp
shll
inc
loopne
mov
xchg
sub
sub
data16
fwait
stos
push
jle
sub
subb
loopne
addr16
cmp
cmpsb
lds
add
lea
data16
inc
pop
cmpsb
mov
ljmpw
fidivs
dec
xchg
pop
insb
outsl
cmp
jnp
hlt
xchg
adc
in
in
push
out
mov
cmc
fimuls
test
cwtl
mov
push
sbb
mov
mov
inc
mov
mov
mov
xchg
xor
je
out
cli
outsl
sar
nop
jne
xor
push
mov
push
push
jae
sbb
or
mov
shl
lods
xlat
mov
std
ret
popa
ret
sbb
cmp
add
jnp
sti
pop
mov
sahf
fisubl
loopne
lock
jge
shll
icebp
cmc
loope
aas
test
imul
cld
pand
xor
inc
addr16
sahf
or
pop
cmp
mov
sbb
push
inc
and
mov
addl
jbe
and
orb
enter
int
repz
inc
ds
loopne
mov
jl
xchg
test
lds
xchg
out
shr
inc
dec
mov
sbbl
in
cmpsl
ficompl
mov
outsl
xchg
jns
and
out
add
jmp
fistpl
imul
mov
mov
jmp
dec
lock
dec
lods
nop
cmp
scas
aaa
mov
dec
add
add
lds
xchg
pop
and
ds
inc
mov
inc
into
jle
add
mov
fldl
mov
cmpsb
mov
mov
je
pop
sub
dec
inc
push
js
sub
sub
stc
sub
rclb
es
pop
mov
push
push
inc
je
es
xor
testb
fs
ret
js
add
in
push
rcll
outsb
in
ret
pop
sbb
out
sbb
das
in
popfw
adc
mov
mov
bound
test
pusha
es
xchg
in
in
sub
and
pusha
sub
sbb
loop
push
mov
je
cwtl
fildl
sub
mov
cmp
rclb
call
addl
adc
cmc
ret
andl
pop
insb
dec
push
xchg
push
sahf
lret
test
dec
inc
mov
scas
xchg
add
inc
push
and
xor
cmp
scas
jecxz
push
xor
mov
fcoms
lds
ds
push
lret
dec
fildl
add
out
mov
cld
scas
cmp
das
inc
sahf
push
pop
dec
cmpsb
fwait
push
enter
jbe
jecxz
fisubl
iret
adc
ljmp
mov
mov
xchg
es
inc
jno
mov
xor
addr16
or
xchg
and
push
pop
push
les
stos
dec
inc
leave
and
sub
xchg
jbe
cli
outsl
pop
lret
jle
clc
mov
jecxz
adcb
lods
inc
jmp
lock
and
mov
and
sbb
decb
jo
movsl
push
mov
add
mov
arpl
or
test
sar
stos
jb
pop
dec
lods
and
lds
push
lods
inc
push
and
sarl
cltd
sub
pop
ret
fisttpll
adc
inc
daa
jg
pushf
mov
je
xchg
cld
jne
cmp
hlt
sbb
xlat
push
loope
or
mov
xchg
in
dec
or
mov
popl
jecxz
stos
std
int3
pop
push
fimull
mov
xchg
and
mov
cmpsl
out
daa
mov
push
orl
sbb
ljmp
add
mov
lock
lcall
aam
scas
mov
push
xchg
negl
fnstsw
ret
pop
mov
lods
ja
adcl
lret
mov
adc
cmc
inc
cmp
mov
jns
popa
mov
mov
pusha
dec
pop
leave
fsubs
jecxz
popf
lret
dec
jb
in
shlb
pushl
cmpsl
scas
mov
lret
xchg
aam
les
mov
adcb
in
pop
lea
add
push
mov
jnp
mov
test
and
mov
push
movsl
div
xchg
int3
pop
push
xchg
and
dec
inc
mov
mov
cmpsl
sub
ja
pop
int
cmp
jmp
lods
popa
popf
lds
clc
mov
pop
add
adc
mov
pop
ja
dec
lret
xchg
js
push
shr
fmul
inc
test
scas
adc
stc
mov
jmp
cs
lahf
repnz
jae
into
push
push
pushf
sti
inc
mulb
add
cld
add
lcall
gs
nop
les
xchg
pop
xlat
imul
popf
inc
mov
push
dec
icebp
lock
outsl
xchg
sub
cltd
data16
mov
or
imul
mov
jns
imul
xor
add
mov
andl
inc
mov
sub
xchg
aaa
cld
fstl
jo
fisubrl
adc
mov
fs
icebp
lcall
and
and
pusha
xchg
or
repnz
mov
or
mov
fistl
mov
lds
lock
mov
pusha
or
xchg
mov
movsb
push
sub
sbb
mov
lea
sub
aas
repz
mov
enter
fdivrl
popa
arpl
xchg
lods
xor
dec
test
addb
jne
add
imul
outsl
adc
shll
lret
decl
dec
je
cmc
out
xchg
xchg
sti
mov
push
sbb
fistpl
fcomip
pop
ljmp
es
xlat
fwait
cmpsb
xor
adc
xchg
mov
sbb
dec
in
push
outsb
cld
cmp
inc
dec
arpl
insb
mov
push
or
mov
mov
push
pusha
pop
addb
out
or
xor
pushf
sbb
jg
xor
jl
mov
imul
je
adc
mov
not
orb
mov
in
cmp
jb
rcl
ljmp
fsts
pop
jg
repz
xor
push
inc
je
mov
jle
jl
ficomps
lret
inc
mov
adc
fisubs
add
sub
pop
sub
pop
push
pop
test
jecxz
push
xchg
inc
mov
imul
insb
jnp
clc
adc
jo
jae
loope
pop
insl
cmc
lods
add
and
enter
ret
sub
outsb
clc
sub
mov
cmp
cmpsb
cmpsl
outsb
push
jne
dec
out
add
int
addr16
mov
jo
push
lret
cmp
xlat
inc
aad
jbe
out
mov
add
daa
and
out
xchg
jecxz
push
sarb
out
jmp
inc
pusha
push
cs
cmpsb
inc
jno
sub
jl
aad
scas
xchg
fdiv
sub
loope
jno
mov
stc
lock
rcr
push
mov
out
loop
ja
test
std
movsb
cmp
xchg
dec
jl
lock
aam
xor
add
aam
jb
inc
add
out
pop
sahf
je
mov
shrl
mov
xor
mov
mov
test
cmp
push
mov
repnz
inc
stc
push
icebp
movsb
mov
mov
roll
je
rcrb
sub
add
jnp
shlb
mov
clc
adc
dec
xor
sub
pushf
pusha
xor
cld
cli
in
push
add
push
aad
sub
xchg
ficomps
push
subb
testb
fisttps
leave
iret
shlb
cld
imul
ja
fs
loopne
fwait
lock
and
ret
sbb
dec
mov
mov
mov
icebp
hlt
clc
shl
insl
mov
imul
out
scas
js
mov
sub
jge
add
es
insb
outsl
mov
dec
mov
cmp
pop
jae
cmp
pop
rorl
outsb
sbb
mov
arpl
rcrl
jle
cmp
fnsave
push
int
ret
and
les
mov
mov
inc
loop
insb
popf
bound
std
repz
loopne
pop
mov
sub
lret
bound
imul
cwtl
jle
xlat
rorb
pusha
data16
cli
fwait
adc
ret
dec
cmpsl
js
inc
std
mov
xor
int
inc
leave
jg
imul
adc
cld
dec
cmp
aad
addr16
jp
jl
mov
pop
push
add
mov
push
mov
sbb
imulb
add
and
ds
sub
sbb
ds
mov
dec
cmp
aad
dec
repnz
bound
gs
mov
push
fldenv
mov
sahf
push
or
sub
dec
es
std
xor
ja
shr
sub
jns
cwtl
sub
cwtl
jmp
mov
add
out
int3
lock
inc
stc
nop
push
pop
test
xchg
sbb
orl
cmp
mov
imul
and
popf
pop
lods
sti
jbe
ja
loop
add
test
inc
xor
and
xchg
sbb
jnp
mov
add
push
pop
sub
loop
cmp
mov
dec
movsl
into
inc
cmp
pop
out
mov
jnp
sbb
fsubs
aad
xor
jno
fisubrl
dec
cwtl
fs
cmp
mov
inc
orb
mov
sbb
aas
push
mov
mov
mov
cmc
decb
sbb
cmc
jge
push
jno
es
in
mov
lock
inc
sbb
and
inc
fwait
mov
sahf
jmp
rdmsr
cltd
push
out
repz
mov
mov
pop
cmpsl
push
jae
jbe
imul
cwtl
and
inc
in
push
sbb
sbb
cld
into
hlt
inc
push
js
push
xchg
cmp
lods
xchg
mov
push
xlat
jecxz
lods
addl
test
mov
sub
or
lea
cs
push
xchg
jbe
inc
pop
pop
subb
or
add
jle
add
cltd
cmpsb
adcl
jno
xor
dec
icebp
xor
jle
fs
jns
aam
jge
xor
ljmp
out
jecxz
rcrb
sub
imul
pop
in
out
test
inc
mov
scas
lea
mov
orb
jp
fistl
popa
push
mov
cli
shll
les
sub
mov
pop
ljmp
lcall
jl
ret
dec
imul
sbb
enter
sbb
aam
adc
sub
jmp
cmp
push
loopne
push
cmc
lock
push
push
fs
jo
dec
mov
inc
xchg
mov
into
mov
mov
leave
push
mov
orb
dec
in
push
dec
fisubrs
mov
inc
test
cmpsl
int3
adc
lcall
jmp
cmpsb
xchg
push
popa
and
mov
imul
lods
call
scas
push
sub
jnp
and
push
jae
call
and
pushf
call
hlt
rcrb
imul
xlat
jae
jmp
test
int
int3
jne
insl
add
dec
add
push
cmp
sbb
dec
fcomps
insb
pop
dec
xchg
repz
insl
pop
pop
pop
sbb
push
ds
andb
inc
xchg
faddp
cli
cmc
jne
imul
or
subb
push
in
mov
lods
sbb
leave
sbb
and
movsb
inc
sbb
jo
pop
pop
jle
out
outsl
jl
ds
mov
pop
pop
and
roll
jo
loop
leave
andl
stc
xor
aas
mov
sub
out
ret
jae
lods
xor
push
outsb
outsl
cli
fcmovu
sbb
in
orb
xchg
into
pop
popf
lods
cld
repz
test
mov
and
jle
jg
sbb
shl
movsl
and
or
pop
addr16
les
pop
xor
dec
fistpl
mov
test
mov
add
push
in
loopne
jnp
lods
sbb
lods
mov
clc
inc
js
jmp
rcrl
leave
repz
mov
and
es
cmpsb
aam
pushf
xor
aaa
loopne
pop
pop
sbb
sbb
cltd
lods
sub
shll
push
shll
adc
pusha
dec
mov
jno
add
das
out
mov
adc
push
shll
movsl
lcall
sub
jb
jmp
and
ljmp
test
fildll
popa
sub
ret
cs
jl
addr16
clc
pop
dec
mov
and
and
cmpsb
jno
mov
pop
imul
int3
cli
ds
sbb
pop
cmp
pop
out
cmpsb
lods
movsb
orb
lods
xchg
sbb
pop
mov
call
push
iret
inc
push
pop
xchg
bound
popa
andb
aam
jno
sbb
jno
xor
lcall
fidivl
push
mov
aad
fnsave
xchg
insb
pop
dec
addb
pop
sub
out
xchg
jmp
data16
cmp
cs
jno
fidivl
cmp
xchg
imul
dec
dec
push
iret
sub
in
dec
or
lock
dec
mov
adc
mov
test
lea
scas
clc
loope
dec
rcrl
xchg
bound
stos
cld
pop
in
push
mov
dec
push
push
cmp
sbb
sub
nop
cmpsl
lahf
in
fadd
pop
fsqrt
mov
mov
test
stc
jle
mov
rcr
mov
into
pop
ret
mov
xor
out
sub
adc
adc
int3
std
cmp
or
fcoml
daa
ret
nop
and
outsb
loop
ss
mov
cmp
inc
incl
xor
js
test
xchg
in
ss
pop
iret
scas
jmp
repnz
loop
in
out
dec
popa
cwtl
mov
jae
mov
jmp
lods
mov
mov
imul
jns
mov
inc
pop
add
mov
push
repz
sbb
mov
clc
lods
add
loop
loope
cmp
out
pop
add
sbb
or
lahf
pushf
sbb
mov
sti
xlat
dec
stos
mov
dec
mov
xor
pop
ret
divb
lds
stc
mov
pop
xor
mov
cld
sbb
cmpsb
lea
jbe
or
ret
enter
fs
test
pop
mov
test
xorl
xor
in
movb
xchg
sbb
cmp
xchg
rcrl
or
mov
js
loopne
cs
mov
loopne
add
testb
test
adc
mov
ljmp
push
jne
ja
call
push
mov
sub
xchg
sahf
out
xor
dec
imul
add
decb
mov
cltd
das
jb
cmp
lret
xchg
cmp
ret
dec
mov
not
or
int
add
call
xchg
adc
pop
cmc
pop
jns
adc
adc
mov
mov
pop
pop
and
mov
sahf
inc
cmp
hlt
movsl
mov
mov
sub
aaa
sbb
inc
xor
stos
push
cld
fwait
and
es
dec
in
pop
mov
xor
clc
cwtl
jbe
sahf
cmp
repz
inc
fistpl
dec
push
mov
inc
stc
xchg
push
mov
leave
lock
sar
in
push
mov
ficomps
outsb
aas
paddsb
fldcw
fsts
jnp
pop
inc
pushf
pusha
sub
mov
and
and
sub
xchg
lahf
sub
inc
add
mov
hlt
sahf
movl
jle
pop
sub
inc
ja
sbb
jne
ljmp
inc
cltd
sbb
cmp
and
repnz
enter
xor
test
out
sub
jg
negl
and
aas
lret
ss
push
sbb
sbb
mov
cmp
pusha
test
jo
aam
lods
adc
mov
out
cmp
sub
cli
jmp
test
out
mov
and
cmc
test
leave
lods
xchg
loopne
mov
jecxz
xchg
xchg
js
arpl
sbb
outsb
push
es
jl
push
adc
add
in
nop
dec
lds
test
cli
outsb
dec
in
mov
push
aad
les
sbb
jb
add
and
popa
testb
sbb
pushf
pop
repz
mov
repz
jno
xchg
movl
adc
pop
add
mov
sub
bound
dec
pushf
ret
mov
cmc
mov
ss
std
jge
jo
cs
jnp
dec
stos
popa
sub
mov
jns
xor
jbe
hlt
cmpsb
cmp
pmuludq
cmpsl
jb
mov
test
mov
loope
loopne
inc
inc
lods
fcoml
xchg
or
pop
outsl
loope
xchg
and
push
cmc
pop
fistpl
dec
test
push
dec
pop
mov
sub
pop
sarb
cmpb
and
lock
mov
jnp
data16
xor
lods
loopne
push
mov
clc
cld
and
les
in
fsubr
lcall
push
jg
adc
xchg
orb
mov
loope
jno
shlb
xchg
mov
cmpsl
out
pop
inc
rorl
mov
xchg
out
pop
gs
loop
push
shlb
insl
pop
roll
iret
push
push
daa
inc
aas
ja
inc
mov
data16
loopne
orb
pop
test
hlt
adc
push
lahf
cmp
push
mov
dec
sub
mov
insl
inc
push
or
int3
push
or
mov
or
dec
mov
inc
xchg
push
add
jne
repnz
jp
mov
sub
and
stc
or
in
scas
into
jne
arpl
loope
pop
outsl
cmp
add
cmc
insl
out
or
inc
cmpsb
aaa
mov
gs
mov
ret
mulb
icebp
push
test
pop
icebp
andl
jb
outsb
loop
pop
adc
pop
push
dec
mov
shrb
jno
mov
mov
push
push
mov
stc
pop
cmc
rcrl
mov
jbe
sub
mov
xchg
clc
mov
lock
cmpsb
sbb
mov
xchg
mulb
cmp
mov
or
push
add
sti
loope,pt
dec
sub
out
or
movsb
sti
adc
mov
inc
ss
js
in
xor
jg
add
lock
mov
test
cmc
xchg
popa
mov
cwtl
stos
sbb
pusha
call
hlt
add
xor
int3
lods
fmull
or
xchg
lret
fisttpl
call
and
cmc
rol
jl
sbb
loop
jl
sbb
into
popa
sbb
sahf
xchg
arpl
cld
loopne
xor
jl
cmp
lock
xor
loope
pop
mov
sub
fisubl
pop
lds
outsl
add
es
cmp
cld
shlb
in
pop
inc
subl
mov
and
xchg
inc
jecxz
mov
rolb
fdivl
xchg
cld
xor
lds
dec
mov
lods
cwtl
jmp
push
xchg
fstp
lods
sub
loopne
jg
mov
lcall
sbbl
pop
out
xchg
jle
adc
dec
jge
and
shll
push
popa
mov
addl
and
mov
cmpsb
stos
int3
das
dec
cmpl
mov
js
icebp
iret
pushf
sub
cmpsl
jl
je
or
sbb
cmp
bound
mov
jae
pop
clc
and
aaa
hlt
mov
cmp
inc
in
mov
sbb
pop
popa
adc
cmp
jns
sti
test
xor
mov
int3
test
mov
call
mov
fists
clc
inc
loope
pop
sbb
dec
and
fs
jmp
or
cltd
dec
mov
inc
push
jmp
xchg
in
mov
jmp
fnstenv
mov
mov
pop
mov
div
sub
arpl
push
cmp
out
jb
xchg
inc
or
mov
hlt
lods
or
dec
jg
gs
mov
lds
push
lahf
js
mov
lock
mov
jle
xor
dec
sahf
cmp
inc
lds
dec
push
jns
into
xor
insl
jg
ljmp
jle
jl
frstor
cwtl
das
mov
imul
lret
cmpsb
mov
mov
pop
ret
ret
pop
js
test
push
push
andb
cli
inc
sarb
mov
bound
les
push
xor
pop
int3
mov
sbb
sub
pop
pop
call
mov
adc
add
ljmp
and
outsb
adc
jns
daa
jne
popf
aas
test
mov
fwait
sub
add
adcl
in
sbb
sar
xor
aad
xor
mov
aaa
lcall
xchg
outsl
int3
mov
push
dec
pop
mov
mov
test
mov
shlb
or
lcall
jecxz
sbb
jnp
cs
enter
bnd
repnz
test
push
or
adc
inc
add
idivl
cmp
adc
mov
and
and
testb
sub
sub
pop
push
outsb
shl
call
es
stmxcsr
xor
xchg
lret
sbb
add
outsb
sbb
shlb
ljmp
push
imul
ljmp
popf
dec
popf
mov
aaa
fimull
loop
lods
ret
mov
cmpsb
mov
mov
xor
mov
mov
xchg
sbb
push
dec
imul
rclb
xchg
mov
shlb
imul
mov
inc
and
outsb
lea
jp
lcall
ds
push
push
jns
popa
lods
in
cmpb
lock
xchg
and
cli
gs
inc
lcallw
jg
or
xchg
jo
add
loope
divl
xchg
adc
stos
push
adc
repnz
pusha
jmp
jbe
add
inc
lret
test
or
sahf
lret
notl
popa
lahf
fiaddl
rcl
sbb
push
mov
and
adc
pushf
scas
adc
push
out
decl
push
or
fnstsw
fnstsw
cld
sti
dec
or
ret
popl
mov
dec
jp
jl
xor
lock
shrb
rorb
and
cwtl
jo
icebp
sahf
stos
mov
cmp
mov
cmp
add
clc
popf
jb
lahf
and
in
stos
es
std
mov
add
shll
sub
fdivrl
rcr
rclb
or
lods
icebp
inc
mov
sub
inc
pop
pop
ficoms
pop
or
loop
fistl
inc
repnz
in
pop
rcrb
stos
sub
ret
mov
pop
outsb
pushf
test
jg
lret
lds
xchg
dec
es
into
push
inc
and
stc
stos
out
mov
add
leave
or
fmuls
jmp
scas
out
and
lahf
xlat
outsb
mov
ficomps
push
sub
dec
popf
mov
aaa
inc
inc
lahf
lret
test
pop
jo
rcrl
fwait
jmp
test
out
gs
fsub
test
sbb
test
icebp
sub
into
mov
repz
dec
sbb
xor
sub
pop
or
and
jg
add
lods
mov
mov
adc
add
ljmp
pop
jge
fsts
mov
mov
lret
sub
mov
sarb
call
jae
cmc
and
icebp
cmpsb
inc
test
cmpsl
xchg
enter
pusha
mov
dec
cmp
mov
cltd
and
fsub
pop
into
icebp
or
xchg
xchg
add
mov
mov
sbb
int3
pusha
adc
lds
cmp
fdivrs
inc
jnp
jle
lds
mov
push
xchg
and
insl
mov
xor
sub
xor
push
daa
adc
das
sbb
fsubrl
mov
imul
int3
push
ja
lahf
decl
pop
or
adc
outsb
mov
pop
ds
dec
test
jge
sbb
fcmovu
aad
inc
push
and
mov
lcall
mov
xor
add
ja
lds
and
es
and
xor
pop
mov
sub
inc
push
pop
mov
sbb
pop
dec
mov
in
aad
sub
xchg
mov
xchg
repnz
xchg
sahf
test
repz
cmp
fwait
xchg
xlat
dec
rclb
cltd
mov
adc
xchg
inc
leave
xchg
and
fisttpll
add
or
dec
push
and
movsb
xlat
mov
ret
int
push
imul
jnp
or
leave
jo
inc
repnz
add
je
mov
sbb
adc
or
cli
jmp
mov
vmaxpd
dec
push
insb
mov
pop
daa
inc
pop
fmull
and
xor
popf
and
ds
push
sbb
jb
add
inc
lahf
jg
in
cmp
arpl
dec
pop
mov
adc
ljmp
jg
jne
mov
sti
sbb
mov
mov
pusha
cmp
jo
test
inc
push
out
push
cmp
stos
pop
mov
adc
out
call
std
orl
movl
inc
popf
and
lds
mov
ret
xchg
adcl
mov
stos
dec
jnp
and
shll
enter
add
lods
fnsave
inc
push
lds
and
or
pop
fs
dec
mov
mov
out
test
mull
rcrb
sub
jge
pop
lods
sbb
cmp
arpl
out
adc
shl
fwait
cmp
sbb
scas
loope
test
mov
js
out
shlb
lea
lock
into
mov
into
inc
fidivrl
int3
cmp
sbbb
aas
push
repnz
add
mov
xor
xor
jl
or
ror
testb
push
cmp
ljmp
repnz
pop
xchg
sbb
pop
mov
xchg
aam
enter
daa
bound
iret
sbb
fbstp
xchg
push
dec
push
outsb
or
pop
dec
repz
pop
les
ds
popa
mov
cmp
mov
repz
xchg
inc
mov
popa
mov
cs
mov
fiadds
sub
cmpsb
pop
push
lahf
jg
jle
or
bnd
jl
sbb
sbb
mov
xchg
repz
lret
cwtl
inc
clc
lds
adc
or
dec
cmp
pop
js
arpl
gs
cltd
mov
out
jmp
mov
nop
inc
mov
jo
fdivl
sbb
into
rcll
or
iret
dec
mov
pop
ret
lock
aas
mov
mov
pop
data16
mov
jo
stos
jno
push
xor
inc
mov
or
sub
das
cwtl
sub
pop
pop
pop
push
add
add
xlat
call
iret
aad
mov
aas
dec
enter
shlb
insb
pop
popa
push
sub
or
roll
xchg
fmull
adc
aaa
sbbl
and
test
cmp
xchg
push
rolb
ret
or
jmp
les
outsl
push
sbb
adc
nop
xor
ret
or
add
xor
mov
and
push
scas
dec
decb
loopne
outsb
ss
xlat
push
jl
jns
frstor
fdivrl
mov
mov
mov
jmp
addr16
mov
jmp
ds
cmp
ja
daa
jecxz
hlt
je
or
out
sar
jg
inc
sbb
pop
adc
xchg
rcrl
iret
mov
dec
sub
push
mov
jns
lret
mov
pop
out
xor
and
or
sub
loopne
push
int
shrl
fs
add
popa
pop
xor
std
inc
rcr
rcrl
lock
push
pop
xchg
mov
xor
imull
mov
push
sub
mov
fldt
sub
or
xchg
js
mov
setp
inc
xor
imul
lea
push
xchg
and
stc
sub
mov
cmc
mulb
in
push
je
insb
inc
jns
addr16
test
pop
pop
pushf
cmp
jne
leave
pop
rorl
mov
aas
and
ret
adc
mov
addr16
add
bsr
xchg
std
xor
and
jae
mov
xchg
sbb
mov
inc
aam
dec
test
jge
mov
fnstcw
fcoml
pop
movsb
fstps
mov
lds
jl
xchg
lock
dec
fnstenv
or
jb
test
ja
and
lret
mov
lds
loop
sub
adcl
inc
mov
imul
push
push
lods
pop
int3
mov
mov
test
cmp
push
shufps
pop
mov
push
shrd
shl
push
test
test
pop
popf
xor
sbb
push
scas
stos
stc
push
jb
sbb
adc
xlat
inc
jnp
out
sub
xchg
sub
mov
adc
xor
inc
ds
ja
jmp
or
imul
adc
mov
pop
sub
fsubl
and
add
leave
dec
fnstsw
inc
push
leave
sub
push
imul
enter
icebp
mov
sub
cmp
xchg
das
icebp
adc
sub
sbb
icebp
add
aaa
out
outsl
insl
loop
jne
xor
mov
leave
ss
sbb
add
inc
int3
loop
fsubr
jle
cwtl
adc
mov
inc
dec
jmp
fsubrl
in
addb
icebp
cmpsb
out
mov
imulb
cmp
out
push
push
add
addl
adc
dec
sub
and
cwtl
fnstenv
ror
sbb
cmc
out
into
pushf
push
cli
fldt
mov
dec
out
pop
sub
cmp
pop
in
sub
lock
mov
mov
lods
fildl
in
or
xor
pop
jne
lret
in
mov
dec
scas
cmp
jmp
xor
push
and
outsl
xor
mov
pop
negb
inc
cmp
xchg
jmp
cld
fisttps
mov
and
pushf
pop
fsubr
and
xor
xchg
js
xchg
loopne
or
sbb
mov
jb
roll
arpl
dec
ja
push
rclb
push
mov
mov
sub
arpl
cmp
mov
and
sbb
ljmp
es
jae
jecxz
or
fcoms
ljmp
rolb
ficoml
fildll
adc
cli
fwait
mov
mov
push
cmp
jns
and
jns
aaa
decl
clc
sbb
test
sarb
sti
jns
mov
sub
add
dec
lods
pop
cmpsl
enter
dec
pusha
popa
adc
insl
dec
and
mov
mov
pop
fiadds
dec
js
or
lds
fldenv
sahf
cli
push
in
mov
rcl
rep
mov
mov
add
and
repz
and
mov
fdivrl
repz
neg
insl
in
xchg
xchg
movsl
repz
xor
xchg
inc
jnp
mov
push
pop
notl
imul
sarb
pop
lret
leave
dec
les
mull
mov
test
stos
test
in
pop
cmpsb
or
dec
and
pop
sub
dec
sub
push
mov
insb
and
fldt
fiaddl
mov
push
xchg
or
push
mov
scas
push
adc
into
add
inc
test
lods
fldt
nop
pop
lods
sar
dec
dec
scas
testb
ret
pop
pop
movsb
xor
mov
in
pop
inc
stc
dec
into
mov
cltd
xchg
sub
pop
movsb
std
pop
mov
and
fisubl
pop
in
pop
push
pop
clc
rcrb
cmp
inc
pusha
or
pop
xor
or
fldcw
jge
sub
xchg
je
test
mov
inc
call
dec
mov
cli
arpl
lcall
mov
or
out
adc
sub
sbb
mov
imul
jns
fstp
jne
jl
stc
scas
sbb
pop
pop
js
xor
imul
into
stos
enter
push
dec
in
inc
mov
out
aad
pop
lret
or
mov
in
enter
hlt
iret
fldcw
sbb
mov
or
and
test
aad
repz
dec
push
pusha
cmpl
sarl
mov
sub
mov
xchg
lock
push
jg
mov
pop
out
push
aad
xchg
lcall
sub
nopl
rol
sbb
iret
mov
push
or
pop
in
or
mov
nop
sbb
es
div
cmp
jle
pavgb
into
xchg
shlb
or
sti
lea
lds
push
sub
jne
mov
xor
xchg
xor
jp
pop
add
inc
cmp
outsl
outsb
in
inc
leave
cmp
mov
rcrl
mov
fcoms
lock
xchg
ss
inc
add
lds
sbb
jne,pt
mov
data16
pop
popa
inc
icebp
cs
pop
lock
fs
out
imul
push
imul
xor
fimull
cmpsl
out
adc
pop
jns
test
dec
repnz
pop
aam
lahf
push
test
xchg
push
loopne
cmpsb
push
xchg
ret
inc
add
mov
mov
cmp
push
inc
pusha
or
popf
cs
mov
sbb
sbb
mov
and
daa
and
pop
mov
test
ud1
sbb
mov
push
jmp
lcall
inc
jmp
sbb
mov
cmpsl
fsubrl
aaa
push
jle
jb
or
ret
xor
cmp
sbb
mov
pushf
adc
jns
test
fs
push
mov
repnz
or
aad
lret
xchg
lcall
out
pop
leave
aaa
inc
std
out
or
arpl
inc
fwait
stc
sbb
aad
mov
cmp
lret
dec
or
pop
dec
lcall
scas
loope
mov
stc
cmp
cmovo
jp
ss
jb
into
pop
scas
mul
inc
pop
shlb
clc
leave
xchg
fdiv
push
enter
ljmp
dec
mov
and
stos
lret
fidivl
pop
add
dec
icebp
push
test
cs
repz
out
pop
nop
insb
jae
out
rcl
popa
rcll
enter
cmp
add
mov
push
push
scas
push
sub
sub
dec
movl
in
in
sub
les
into
repnz
push
xchg
outsb
aam
push
arpl
dec
cmc
mov
hlt
hlt
mov
xchg
lret
sti
inc
mov
jg
inc
mov
mov
cmp
mov
fwait
inc
mov
in
leave
mov
rol
push
jno
mov
std
dec
mov
push
loop
sub
arpl
iret
add
mov
arpl
inc
mov
into
subl
mov
mov
or
mov
mov
shrb
subl
imul
mov
ds
ffree
icebp
xchg
ficoml
push
ret
fsubrs
jbe
sti
dec
cld
sbb
xchg
adc
lret
adc
sti
stos
mov
push
js
mov
mov
cmpsb
xchg
jl
into
inc
data16
sub
rorb
adcb
in
ret
pop
enter
xchg
xchg
fwait
mov
cmpsb
xchg
mov
test
mov
sahf
jbe
cmp
push
ret
xlat
pop
pop
sbb
test
and
xchg
cmp
sub
jle
push
repnz
js
add
mov
xor
lock
mov
cmpsb
mov
adcb
imul
and
lret
ja
lds
mov
xchg
mov
mov
add
xchg
outsb
iret
dec
lea
repnz
incb
jo
jl
mov
cmpsl
mov
imul
fcomps
adc
hlt
fwait
cld
into
push
or
popa
cmpsb
mov
adc
jo
jb
in
rcll
shr
jnp
inc
aad
movsl
xchg
xor
cmc
pop
cmpb
in
cmp
out
sub
insb
sub
and
mov
les
mov
hlt
inc
mov
jbe
or
test
icebp
pop
test
sub
inc
outsl
int3
mov
push
push
insl
pop
call
repz
loope
das
add
imul
loop
mov
fisubrs
add
div
fs
adcb
call
notl
inc
pop
testl
sbbl
fmulp
scas
in
mov
cmp
imul
test
xor
lahf
mov
insb
mov
jp
jg
inc
xor
add
outsb
popa
enter
mov
mov
and
shll
lahf
fstl
pop
push
cmpb
sub
addl
sbb
test
pop
hlt
mov
mov
cwtl
pushf
and
add
inc
incl
out
or
in
jns
lock
repz
in
ja
addr16
or
je
xchg
jecxz
mov
dec
cmp
pop
or
adc
shlb
adcb
inc
pop
lea
mov
jecxz
xchg
mov
cmpsl
mov
daa
sub
jnp
xchg
and
xor
andb
sti
mov
push
mov
pop
xchg
mov
inc
adc
mov
sub
push
sub
xchg
and
mov
push
fcomi
push
popf
and
adc
scas
mov
jo
jge
cmp
sub
and
mov
cmp
dec
pop
lods
rorl
cs
or
jno
inc
jne
out
push
mov
aam
mov
sub
rcrb
jb
fld
push
inc
in
dec
mov
js
psubusw
or
ret
cmp
xchg
cmpsb
adc
pop
insl
jge
sbb
jns
pop
pop
jne
aaa
ss
dec
push
daa
cli
imul
dec
xchg
xor
cmp
ret
push
fcoml
loope
cmp
sbb
aaa
jb
jle
or
test
jle
xchg
in
sarl
insb
addb
push
movsl
out
dec
dec
push
lahf
pop
jo
adc
pop
cmpsb
out
cmp
stos
cwtl
sub
testl
pop
mov
arpl
adc
jp
cmp
scas
js
std
pop
arpl
lcall
fistps
ljmp
repnz
xor
mov
mov
push
adc
mov
jnp
or
push
test
mov
jnp
xor
jp
dec
sti
insl
std
repnz
mov
mov
fiaddl
fs
cmp
push
nop
mov
push
cld
stos
pop
cmp
pop
xchg
mov
jns
adc
les
push
jp
hlt
dec
repnz
mov
push
scas
movsl
mov
jl
iret
arpl
ret
test
cmp
test
out
repz
push
test
js
mov
lret
addr16
movsb
jg,pn
and
sbb
pusha
dec
push
aaa
fwait
sub
sub
popf
pusha
dec
into
fdivl
mov
icebp
sbb
dec
repnz
cmp
xchg
sbb
xchg
push
cmp
xchg
es
aam
jecxz
mov
inc
and
mov
ret
jp
mov
sub
sub
xchg
inc
insb
int
pusha
imul
shll
lahf
and
add
sub
jmp
aas
mov
movsb
cmpb
jle
cmovg
cwtl
adc
jnp
test
jno
mov
and
sbb
xchg
pop
jl
adc
mov
loop
addr16
jle
push
lret
clc
xor
popf
pop
pusha
aas
test
fs
mov
in
mov
sbb
jmp
xchg
xor
sbb
adc
mov
lret
push
xchg
inc
repnz
inc
xchg
adc
lock
xchg
pop
cmp
adc
shrb
push
mov
mov
adc
add
mov
xchg
adc
mov
add
sub
in
jle
or
aam
shll
scas
test
test
cmp
jl
sub
sarb
mov
xchg
fisubl
scas
pushf
mov
jmp
loope
lahf
sbb
das
adc
add
cmpsl
insl
pop
mov
and
jecxz
lods
xchg
mov
mov
or
imul
adc
xor
faddl
jg
or
push
or
cmpsb
pop
or
mov
dec
pop
mov
mov
test
mov
jnp
stos
or
mov
lods
cmpsb
insb
sub
push
jmp
mov
inc
inc
andb
lahf
sub
bnd
out
jb
mov
in
push
nop
dec
pusha
pop
pusha
daa
cmp
jbe
sar
outsb
mov
daa
dec
pop
stos
iret
sti
test
insl
xchg
dec
sub
loope
mov
mov
add
ret
lret
push
jp
imul
ss
mov
push
mov
js
into
dec
rcll
fsubl
sbb
js
mov
lea
sbb
lahf
dec
xchg
sub
xchg
negb
xchg
loopne
lret
xchg
xchg
jg
fldl
leave
pop
jns
aas
fbld
in
add
mov
mov
push
push
cld
fwait
enter
lods
stos
mov
dec
xchg
cmp
rorl
jbe
sub
pusha
add
push
enter
out
and
das
xor
test
mov
sbb
fsubrp
mov
dec
and
sbb
cmp
jns
in
leave
cmpsl
cltd
add
lods
dec
repz
push
ror
sbb
jl
out
rcrl
lods
loope
int
xchg
in
into
cmp
dec
dec
fwait
not
inc
ret
pushf
and
dec
es
xor
mov
jbe
out
jno
mov
jmp
subb
mov
test
cmc
dec
aas
or
sub
inc
and
cmpsb
mov
add
mov
adc
addr16
ds
fcompp
xor
in
xchg
or
fsubs
pop
cmp
sbbb
daa
loop
testb
sub
push
push
nop
hlt
push
aaa
out
shll
loop
sbb
xchg
andl
popa
pop
mov
mov
and
mov
xor
mov
fsubs
add
ret
or
jg
movb
jne
dec
jnp
xchg
das
and
and
jl
lret
dec
lods
ret
mov
clc
push
sub
sbb
repnz
push
push
xchg
jecxz
bound
mov
int
inc
notb
mov
sub
mov
scas
jmp
call
sbb
iret
cmp
cmp
dec
and
jae
popa
cmc
enter
cmp
jb
jo
mov
jmp
ljmp
dec
push
rclb
or
int
and
outsb
out
test
roll
dec
addr16
and
clc
jae
in
pushf
loope
mov
jns
push
push
insl
adc
xchg
add
pop
sub
jb
xor
ja
mov
jnp
loopne
imul
enter
jb
fistl
dec
sub
cmp
mov
inc
dec
inc
jno
cmp
jae
pusha
xchg
mov
pop
xchg
and
push
sbb
mov
mov
mov
jp
dec
push
inc
dec
cmpsl
sub
orb
mov
push
mov
sub
mov
lock
add
mov
les
notb
mov
dec
ret
sti
jo
inc
loope
lea
sub
stos
cld
test
aam
and
outsb
cltd
ret
in
lret
pop
cmp
mulb
mov
mov
test
sahf
ja
leave
pop
in
int
adc
mov
insb
pop
sti
sbb
jp
or
jb
sub
pop
popa
jno
mov
pushw
xor
ss
pop
inc
loop
cwtl
rcrb
or
dec
sahf
syscall
inc
push
aas
fistps
test
lcall
push
mov
xchg
or
cmp
cmp
ds
jns
lea
adc
mov
jg
int3
cmpsb
leave
add
test
arpl
mov
jae
mov
test
insb
mov
xchg
fs
lcall
js
and
xor
xor
out
cmp
fimuls
loop
mov
btr
popf
pop
xor
mov
mov
cltd
inc
lock
das
lcall
add
out
mov
lahf
push
jmp
inc
imul
mov
push
add
mov
mov
mov
mov
in
pushf
pop
int3
ret
ret
sub
pop
cli
cmp
push
stos
and
fwait
in
mov
aas
pusha
imul
pop
jle
jno
push
cmp
cwtl
xchg
clc
inc
faddl
iret
movsb
inc
jg
jge
adc
dec
scas
fsubrs
and
lods
icebp
jb
cmp
mov
mov
push
xor
shl
mov
xchg
arpl
pusha
cmp
xchg
or
jg
repnz
or
addr16
sub
repz
sub
mov
mov
js
add
in
test
or
jmp
fdivrl
cmc
scas
xchg
xor
aas
rcll
imul
or
repz
sbb
shl
jnp
cmpsl
push
dec
shrl
cmpl
pop
lret
dec
aam
gs
fdivr
dec
pop
mov
or
mov
or
jecxz
xor
add
test
andb
mov
sbbb
mov
addl
mov
ljmp
dec
xor
hlt
or
test
lret
imul
je
push
push
hlt
jae
orb
out
pusha
and
loopne
mov
outsb
stc
in
shrb
sbb
push
lret
lea
sub
xchg
or
push
outsb
inc
enter
sub
xor
inc
xor
out
addr16
dec
inc
int3
in
adcb
cmp
pop
int3
aas
insl
dec
or
int3
sbb
mov
movsb
test
push
shll
jnp
shrl
jns
out
jp
mov
cli
fdivr
cwtl
outsb
cltd
and
xchg
stos
in
test
inc
mov
hlt
in
sahf
push
xlat
or
mov
push
inc
lock
xchg
into
adc
addr16
into
add
test
fcmovbe
dec
ficomps
in
fs
push
outsl
mov
jb
push
jg
cmp
cld
iret
sub
cs
mov
aad
pushf
shll
in
mov
movsl
in
inc
jb
jle
sarb
test
dec
cltd
mov
jg
push
sbb
push
dec
push
sarl
sti
pop
or
idivb
enter
cli
fstl
dec
in
mov
dec
stc
adc
jo
icebp
outsb
fisubrs
sub
lret
outsb
mov
mov
lods
jl
stos
pop
idivl
push
cwtl
repz
ret
jmp
imull
pushf
sbb
or
pop
mov
pop
inc
iret
push
mov
dec
mov
jae
repz
sbb
into
pop
test
js
push
push
or
in
xor
jbe
fs
adc
mov
or
cld
cmp
cmp
outsb
cmpsb
adc
jmp
xchg
mov
mov
dec
mov
adc
cld
popf
fs
stc
leave
pushf
lea
add
sbb
adc
and
xor
adc
in
pusha
rclb
hlt
fstps
pop
xor
ljmp
call
lock
adc
loope
inc
dec
push
fmulp
and
and
add
mov
aad
cmp
cltd
ficompl
outsl
adc
sbb
jl
stc
stos
lea
pop
lds
int
jnp
sub
lods
inc
sbb
aad
ja
test
xchg
mov
sahf
xor
add
addl
fdivrl
clc
mov
adc
or
incb
mov
pop
pushf
mov
inc
cmp
add
hlt
jmp
lcall
ja
push
sbb
add
das
ljmp
sti
cmp
cld
mov
pop
mov
pop
lock
adc
inc
es
adc
fisttpll
cmp
repnz
stos
imul
addl
stc
push
inc
adc
popf
jle
jb
nop
mov
mov
xchg
in
lea
mov
shll
cltd
jecxz
push
xor
jns
xor
sub
xor
jns
lods
mov
push
decl
test
movsb
outsl
xor
mov
pushf
and
dec
pop
and
adc
and
cmc
sbb
lret
and
sub
les
sbb
sub
test
daa
jg
ss
sbb
orb
push
ds
mov
lea
jecxz
mov
cld
pusha
icebp
mov
sub
dec
adc
divb
in
dec
mov
xchg
hlt
adc
lahf
add
icebp
or
sub
aam
add
mov
shrl
fstpl
mov
sti
adc
or
fstpl
call
divl
ret
push
shl
in
add
jp
ficoms
add
xor
cwtl
mov
xchg
mov
mov
and
pusha
pusha
jle
es
movsb
imul
fcmovb
and
pop
xchg
in
sarl
lods
dec
loopne
adc
inc
mov
adc
jmp
or
cmpsl
into
aas
dec
loop
subl
shlb
sbb
xor
sub
dec
add
xchg
fisttps
movsl
lahf
lea
mov
mov
imul
push
push
test
push
mov
test
ss
mov
pop
sub
in
lret
cmpsb
pop
or
pop
adc
mov
adc
sub
cs
pop
jnp
mov
ljmp
mov
ja
xor
jne
in
ljmp
dec
clc
add
push
cltd
and
stos
fsubs
outsl
loop
insb
data16
int
xor
cmp
mov
dec
stos
pop
loop
aam
pop
pop
jo
gs
jle
xor
mov
popa
pop
jbe
jno
push
les
or
dec
stos
cmpsl
xor
mov
int
hlt
jge
fbld
sub
pop
aaa
data16
lock
movsb
or
push
imul
add
xchg
imul
xchg
push
leave
movsb
std
xchg
mov
or
dec
pshufhw
insl
addr16
or
pop
mov
call
mov
inc
adc
inc
cmpsb
mov
jl
jmp
ljmp
jno
sbb
xchg
xchg
loope
arpl
in
or
pop
inc
adc
mul
inc
pusha
pop
out
in
dec
fs
out
lods
mov
insb
dec
les
pop
pushf
mov
jmp
test
add
add
pop
scas
nop
das
jb
lock
lock
out
add
jno
and
dec
sub
outsb
sub
mov
mov
push
push
insb
outsb
lods
pusha
ss
ljmp
inc
test
jne
ljmp
pop
xor
aaa
dec
hlt
dec
xor
loope
jno
inc
cmpsb
in
cli
inc
js
sub
ja
dec
fstps
push
jmp
lods
shr
cmp
mov
sbb
dec
outsl
push
les
fwait
pop
xor
data16
pop
in
mov
daa
xor
xor
pop
cmp
test
les
jg
mov
mov
fwait
add
mov
xor
shll
jae
inc
mov
mov
outsb
xchg
cmpl
fs
lds
cmp
loope
je
adc
xchg
pop
mov
int
rcll
fistpll
psrad
mov
push
cmp
cmp
inc
scas
nop
loopne
add
xchg
aaa
insl
je
into
xor
repz
lods
repz
lahf
rorl
xor
xchg
mov
sub
or
push
push
aam
push
mov
jl
mov
lcall
in
in
sub
push
mov
shll
jle
ss
or
pushf
sub
push
orb
test
ficoml
out
or
insl
jno
adc
pop
popa
jmp
and
repnz
insb
sbb
dec
mov
adc
das
daa
repz
popa
sub
pop
hlt
pop
int
xchg
mov
js
jecxz
shr
add
inc
mov
pop
aas
xchg
cli
test
sbb
push
scas
dec
div
mov
shl
inc
in
lock
enter
ret
es
adc
mov
push
jmp
fadd
mov
inc
dec
push
std
cmpl
jg
mov
mov
lret
pop
insl
pushf
and
jne
pusha
and
or
jo
dec
pop
xchg
mov
mov
cmp
mov
pop
dec
nop
xchg
push
fwait
stos
int
ja
leave
cwtl
xor
fidivl
je
add
lcall
imull
pushl
pop
jmp
insl
add
sub
js
in
push
or
icebp
cmpsl
mov
int
les
cmc
in
fisttps
and
inc
fildl
adc
pusha
mov
jns
aas
pop
push
jl
loop
stc
mov
mov
aas
pop
pop
ret
pop
lahf
sub
push
out
sbb
lock
jp
push
xor
inc
cltd
or
in
sub
test
fsubrl
mov
pop
xlat
nop
and
mov
dec
push
addr16
jp
pop
adc
nop
movb
adc
out
sub
test
or
fidivl
xlat
mov
shll
inc
popa
test
ds
sub
dec
pop
out
add
inc
mov
mov
or
sbb
rcrl
rcll
mov
mov
leave
cmc
pusha
pushf
ds
out
outsl
dec
sbb
sti
add
xchg
sbb
push
xchg
mov
sub
pop
int
inc
jge
dec
mov
xor
lret
xchg
sti
sbb
ret
in
mov
xchg
mov
add
adc
and
pop
mov
push
jno
jl
jno
sub
iret
lret
jp
inc
mov
hlt
data16
or
push
imul
dec
xor
loop
ljmp
add
inc
mov
inc
pop
cmp
xchg
mov
xchg
push
sbb
mov
jge
outsb
sub
out
sbb
xchg
mov
pop
sub
and
adc
and
cltd
imul
out
jns
xlat
das
lcall
xchg
cmp
fstpl
xchg
out
mov
lods
xor
stc
adc
test
dec
mov
xchg
movsb
adcl
lahf
insb
js
pusha
in
dec
or
or
cmp
ret
push
outsl
fists
pop
xorb
inc
and
loop
xor
cmpb
and
cmpsl
mov
add
out
dec
dec
shll
sub
dec
incl
divb
sub
mov
iret
cli
mov
cli
pop
and
inc
sub
les
sbb
arpl
adc
mov
xchg
mov
mov
push
test
inc
xor
fwait
jl
jnp
test
adc
out
xchg
mov
xor
mov
ret
and
insl
cmp
or
cmp
imul
out
or
xor
lds
shlb
sbb
rolb
push
rcrl
mov
xlat
lods
pop
pop
cs
sarl
mov
mov
std
shlb
and
mov
add
jmp
add
adc
add
mov
jl
pop
movsl
aam
test
xor
in
enter
clc
orl
shl
jne
or
pop
fdivp
jbe
out
mov
pop
xchg
outsb
sbb
les
in
pop
stos
js
sub
notb
mov
push
mov
jg
jp
mov
xchg
std
in
xchg
stc
out
test
pushf
fstl
imul
insl
sbb
mov
fcmovu
lods
lret
in
xor
sbb
xlat
repz
dec
scas
loop
call
mov
scas
mov
icebp
pop
cmp
flds
mov
dec
std
dec
ljmp
bnd
xchg
jnp
fdivrl
rcrb
push
adc
sbbl
shrb
push
xchg
push
xchg
push
std
push
test
cltd
and
adc
adc
ret
mov
push
add
sbb
fld
cmp
cwtl
lret
pusha
stos
sbb
pop
rol
out
xorb
and
or
pop
popf
mov
cmp
addr16
fistpll
mov
stos
je
jne
mov
push
out
xor
sti
mov
push
lock
sub
fadd
add
addr16
mov
push
cmp
fnstenv
cld
shrb
lea
pushf
fneni(8087
mov
push
gs
in
jge
sti
sub
ds
nop
pop
xor
mov
inc
xchg
mov
sarb
xor
insl
das
gs
adc
addr16
imul
mov
int
or
sub
in
aas
je
lret
pop
lahf
sbb
and
fimuls
inc
jle
imul
movsl
test
ret
push
sbb
lods
mov
xchg
hlt
add
cmpsl
nop
repz
in
add
cmp
mov
outsb
out
arpl
dec
loope
add
jl
jecxz
scas
mov
pop
mov
add
xorl
sbb
xchg
pusha
cltd
sub
sbb
cltd
loopne
aaa
mov
pushf
aas
fwait
int3
lods
xchg
lcall
repnz
adc
test
imul
sub
mov
sub
mov
xchg
mov
je
xchg
xor
lret
push
add
shlb
mov
ds
sbb
aad
rorb
add
addr16
in
stos
push
and
ss
sbb
push
fmuls
push
pop
cmpsl
popa
adc
pushf
push
fwait
lods
sbb
and
es
push
cmp
jp
ljmp
pop
scas
enter
mov
loopne
mov
push
and
ret
mov
jle
ret
shrb
shlb
mov
in
mov
fidivs
pop
ror
movsb
daa
movsl
mov
repnz
div
inc
stos
insb
ror
ret
cmp
mov
shrb
loope
andl
mov
jge
cmp
mov
mov
inc
cmpsl
dec
out
cmp
sub
jno
mov
stc
cmp
lods
cmpsb
cmc
inc
test
fisubs
mov
js
lods
cmp
stc
lea
mov
movsb
daa
sub
loope
xor
in
jns
push
loopne
sbb
loop
mov
pop
xor
mov
inc
outsl
fisttpl
mov
and
dec
inc
lods
pop
adc
adc
fldenv
xor
gs
or
stos
ss
cmp
negb
add
inc
shr
bound
aam
mov
adc
std
fimuls
mov
add
mov
adc
adc
mov
mov
mov
mov
lods
test
lret
xchg
cmp
hlt
out
fstl
lock
fdiv
movl
add
test
or
xchg
ret
fsubl
cmp
lods
sbbl
add
flds
inc
sub
ljmp
jne
pop
sbb
mov
push
addb
dec
cmp
and
push
cwtl
or
xor
xchg
push
xchg
imul
movsl
sbb
shr
ljmp
mov
pop
sbb
insl
andb
aaa
mov
scas
or
ficompl
out
xchg
insb
fdivs
insl
lock
lahf
lock
dec
mov
pop
jnp
es
aam
cmp
fs
dec
pop
lahf
mov
mov
or
xchg
and
imul
repnz
and
and
movsb
jp
insb
push
aam
sbb
cmp
jle
shrb
js
jo
add
or
mov
mov
sub
push
mov
adc
ret
pop
adc
jecxz
sahf
mov
icebp
cli
add
jo
xor
addr16
mov
mov
arpl
mov
out
or
adc
and
into
ljmp
aas
add
cmc
call
inc
mov
adc
mov
scas
adc
in
lock
lret
leave
ds
sbb
xlat
add
sub
pusha
mov
or
fisubrl
inc
add
jno
xchg
in
push
sbb
test
jbe
dec
test
stos
ret
ljmp
add
mov
xlat
cmp
cmp
mov
in
sbbl
inc
sbb
shrb
aaa
push
pop
xor
inc
fdivrl
data16
ret
mov
es
popa
lods
icebp
sbb
mov
cmp
pushf
mov
iret
add
xor
push
push
inc
sahf
push
push
nop
cmp
outsb
cmp
fwait
or
push
push
ss
jno
pop
push
cwtl
call
or
iret
inc
mov
dec
xlat
add
or
out
mov
dec
mov
cs
lds
sbb
push
dec
pop
inc
cmc
add
mov
outsl
ret
jp
sub
push
adc
js
sbb
cmpsb
pop
dec
sub
sbb
lret
inc
jae
imul
mov
add
lcall
out
push
cltd
js
jae
cmp
dec
or
pop
popf
dec
fistpl
pop
lods
sbb
lret
mov
lods
ret
sub
inc
std
xchg
jle
stos
les
out
push
shlb
mov
or
xchg
rclb
sti
push
push
push
or
mov
lcall
loop
out
mov
cmp
xchg
fiadds
pop
out
repz
inc
jge
outsb
mov
lods
sti
push
les
in
dec
mov
in
aaa
push
mov
lea
movsb
cmp
mov
loope
outsl
xor
mov
icebp
addr16
arpl
out
sub
idivb
je
jle
mov
jno
and
sub
adc
sbb
adcb
call
aad
mov
sbb
mov
jl
jmp
jl
cmp
pop
test
xchg
cmc
sub
stc
insb
push
push
arpl
xlat
mov
les
cmp
loopne
push
xchg
jle
xchg
outsl
inc
addr16
jge
add
addr16
xchg
xchg
inc
mov
mov
aam
stc
outsl
mov
ja
addr16
dec
mov
lret
cmpsl
push
fcompl
lcall
dec
mov
stos
hlt
dec
sahf
inc
adc
faddl
jns
add
lock
testl
int3
xchg
es
pop
pusha
mov
dec
ficoml
cltd
pop
fwait
popl
pop
jmp
mov
lcall
xor
jge
push
sub
push
outsl
repz
adc
es
data16
push
dec
in
icebp
xlat
push
mov
imul
dec
ljmp
xchg
cmp
div
push
test
cmp
jno
push
xchg
mov
aad
mov
gs
push
mov
test
arpl
dec
add
sub
shll
ja
jnp
ds
in
jl
sbb
mov
movsl
arpl
and
push
adc
dec
xchg
mov
int
popa
push
sbb
jbe
decl
addb
sahf
mov
clc
or
movsl
cli
adc
cld
xchg
push
push
scas
inc
in
cmp
jo
pop
mov
and
dec
or
js
mov
test
nop
cs
popa
loope
sub
inc
imul
xchg
shlb
pop
or
dec
jo
cmp
flds
pop
lret
and
ljmp
mov
add
js
sub
mov
add
mov
mov
sti
xchg
movsb
jg
jmp
fwait
jp
test
sub
push
mov
push
repnz
jmp
iret
fwait
xor
mov
xchg
scas
dec
out
push
pushf
jg
scas
and
adc
mov
mov
pop
lods
iret
dec
stos
xchg
mov
xor
pop
daa
mov
inc
hlt
mov
adc
pop
xchg
bound
inc
loope
xchg
xor
std
ljmp
jns
jl
rcr
pop
lods
cmp
jge
adc
and
ret
add
mov
adc
cmp
jmp
shll
dec
aam
out
mov
sti
pop
out
mov
push
in
inc
shl
and
clc
stos
push
xlat
and
pop
dec
test
cmp
xchg
subb
aaa
push
pop
sub
xchg
stos
xor
xchg
cs
in
jno
add
ljmp
clc
test
lahf
loope
jno
ja
or
and
jnp
cmc
cltd
lds
test
divl
pop
inc
fxch
jnp
stos
and
shl
and
push
test
out
mov
xlat
xchg
test
xchg
and
int
mov
pop
pop
adc
mov
test
shlb
das
mov
in
xchg
mov
out
int
out
lret
sub
xor
popf
cmpsb
into
rcr
shl
cmp
pop
jnp
adc
and
jecxz
out
jae
pusha
and
inc
inc
cmp
jae
xchg
movsl
xchg
iret
pop
test
divb
pop
std
xchg
mov
add
pop
out
lods
pusha
ret
mov
push
out
add
jg
inc
pushf
sub
dec
sbb
jle
dec
lods
dec
scas
mov
or
pop
sub
push
call
sub
jo
nop
pop
call
and
rcll
xchg
add
mov
test
movsl
push
jl
and
add
xchg
inc
jl
dec
pop
push
adc
rolb
adc
and
enter
out
pop
repz
pusha
dec
xor
ds
inc
jae
icebp
mov
rolb
leave
repnz
xchg
xor
jae
xor
cmp
mov
adc
pop
jo
lock
and
mov
popf
push
pop
jae
inc
mov
and
and
lahf
pop
subb
and
jmp
push
movsl
mov
xchg
pusha
and
push
xor
inc
xorl
daa
fcmovu
loopne
jne
ss
mov
lds
cmc
jg
jae
xlat
cmp
jge
mov
inc
inc
into
sarb
mov
iret
or
cmpsb
push
bound
das
mov
test
idivb
data16
jo
ja
les
pop
cmp
pop
push
sbb
or
pop
sbb
popf
xor
loopne
mov
in
and
test
stos
push
jne
pop
mov
inc
fiadds
stc
dec
ljmp
ja
dec
jnp
add
movsb
sub
inc
sarb
sti
loope
iret
out
mov
daa
jno
or
popa
fs
mov
ds
int
sbb
insl
sti
rol
subl
rcrb
icebp
into
orb
std
sub
lods
sbb
jae
pop
push
inc
and
mov
dec
mov
pop
xchg
dec
test
or
add
dec
stos
mov
lods
mov
sar
jbe
fsubrp
mov
push
aam
pop
mov
mov
loop
out
ljmp
pusha
sub
sbb
and
pop
cmp
pop
mov
sub
adc
or
mov
mov
inc
jmp
xchg
ds
movsb
aaa
mov
fildl
sbb
push
adcl
add
lret
in
call
and
push
aam
ffree
fwait
sbb
shrb
xlat
sbb
out
lret
or
push
push
mov
in
jecxz
jnp
cwtl
mov
fucom
xor
out
movsb
loop
stos
arpl
or
mov
jae
push
js
jns
push
test
mov
xchg
pop
xchg
les
in
cmpl
je
lahf
sub
fwait
pop
add
test
cmpl
xchg
jmp
popa
or
or
out
mov
std
xor
or
out
pushf
aas
xchg
xlat
fs
mov
arpl
dec
leave
mov
xor
xor
popa
rcrl
adc
sub
loopne
mov
pop
mov
jb
leave
lcall
test
dec
add
into
shll
loope
jne
push
fisubs
push
push
xchg
ret
mov
in
jo
aad
push
cmp
addr16
lcall
mov
std
and
push
mov
mov
sbb
mov
push
mov
shlb
mov
ficoml
mov
jae
cmc
clc
or
aad
sub
mov
sarl
cmp
and
std
rclb
insl
or
popa
out
xchg
fsubs
pop
pop
sbb
sbb
pop
jle
out
adc
filds
mov
add
in
in
jmp
sub
hlt
outsl
in
fists
sahf
and
add
jmp
out
inc
es
xchg
in
aam
mov
out
cmp
or
dec
mov
js
ljmp
sbb
aam
imul
sbb
ret
dec
mov
jbe
mov
jp
and
jl
sub
loop
movsl
xchg
incb
out
pop
test
sahf
mov
addb
inc
sbb
subl
xchg
adc
pop
sub
mov
cmp
rclb
jno
inc
inc
jne
xchg
lds
pop
scas
push
outsb
sub
mov
rcrb
ret
push
sub
adc
and
das
movsl
sub
xlat
out
jnp
sbb
cmp
sahf
sbb
sbb
pop
mov
in
pop
popa
imul
cld
loopne
sbb
sub
pop
add
cmp
lcall
xor
dec
add
xor
shlb
sahf
fwait
jbe
out
lcall
jmp
push
pop
sub
mov
mov
dec
out
jb
xor
lods
mov
adc
inc
cmp
je
add
ret
add
xchg
cmp
sbb
mov
sub
imul
shlb
pusha
ljmp
mov
pop
aaa
rolb
ret
add
nop
lds
clc
stos
lea
sbbl
ret
addr16
xchg
push
aam
cmpl
lret
xchg
aas
cwtl
icebp
inc
and
mov
push
pop
fdivs
dec
or
shll
fidivrs
loopne
lahf
fstp
mov
sub
iret
push
cmp
adc
ret
call
push
stos
xchg
out
shl
or
lock
es
fcompl
pusha
ljmp
jnp
cmp
push
cmpb
stc
scas
aad
xchg
aaa
jge
test
call
jl
lret
aam
and
and
fdivrs
jg
sahf
sarl
jne
insb
test
dec
mov
lahf
sahf
xlat
test
pop
pop
mov
shl
addl
lods
fdivl
fsubr
xor
jnp
sub
mov
xor
xchg
mov
out
xor
lock
mov
mov
lahf
inc
mov
sbb
negl
out
mov
pop
movsl
jns
in
jle
into
aaa
xchg
loop
addl
pop
test
or
insb
les
mov
xor
test
inc
cmpb
push
xor
adc
lock
fiadds
xchg
or
repz
xchg
xchg
loopne
or
hlt
in
test
sti
jmp
mov
cmp
cmp
mov
sub
leave
jnp
pushf
add
fwait
xchg
mov
add
cmp
cmp
cmpsl
dec
or
sbb
sub
and
aam
push
pop
push
es
sub
xor
inc
out
or
push
call
pop
ret
inc
sbb
jp
sub
ja
mov
push
pop
jno
lock
xchg
pop
idivb
inc
pop
mov
cmp
xchg
dec
sbb
push
pusha
add
sub
cmpsl
mov
jecxz
cltd
pop
and
jmp
sarb
dec
push
ficomps
icebp
mov
xchg
mov
cmc
rcrl
push
pop
and
pop
cld
mov
inc
push
sub
or
lret
lahf
ds
add
call
es
sbbl
notl
xchg
pop
das
call
pop
insb
stos
cmpsl
leave
bound
enter
out
pop
pop
mov
sbb
dec
jl
jg
and
in
push
sbb
lcall
dec
pop
in
cs
dec
sub
pop
adc
sbb
int3
lods
int
cmp
addr16
dec
mov
fwait
pop
lcall
imul
inc
scas
sbb
movswl
lcall
lods
dec
pop
xor
push
add
mov
bound
push
xor
iret
in
adc
xchg
xor
lds
bound
in
xchg
push
adcb
outsb
and
xrelease
movsb
xor
inc
pop
insl
enter
lret
mov
cwtl
and
shlb
inc
mov
sub
add
ret
dec
addr16
mov
cmp
fwait
lahf
lret
and
or
or
push
roll
out
fstpl
andb
mov
imul
adc
xchg
test
push
inc
sti
mov
dec
pop
mov
lahf
mov
jecxz
inc
mov
sub
call
and
sahf
in
mov
and
adcb
mov
xor
int3
pushf
cmp
std
pop
popf
push
setl
mov
bound
push
movsl
or
cmp
adc
mov
arpl
jb
pop
addr16
pop
xchg
xchg
xor
bswap
jne
inc
sbb
and
push
jb
fs
stos
push
int3
adc
add
dec
ret
add
or
jno
pop
push
dec
adc
loope
cltd
push
jb
and
pop
push
jg
lds
int3
jo
xchg
jns
pop
xchg
push
mov
cwtl
aaa
and
dec
xlat
pusha
xor
mov
jo
cs
rol
fwait
add
mov
cmc
dec
xchg
sti
aas
aam
loope
fdivrl
xchg
cs
ret
imul
in
addb
jns
dec
leave
lods
imul
pop
mov
mov
lret
xor
cmc
mov
or
cmpsl
xchg
movsl
mov
outsb
xor
mov
mov
stos
inc
pop
mov
ret
pop
sub
dec
addl
stc
rclb
adc
test
outsb
enter
xlat
jecxz
imul
orl
out
xchg
test
lods
stos
pop
fwait
in
xchg
add
inc
enter
scas
aad
mov
stos
dec
sub
shlb
mov
push
mov
push
adc
cmp
sbb
inc
jp
mov
jecxz
mulb
call
js
aaa
stos
dec
xor
inc
nop
ret
repz
mov
add
orb
mov
and
mov
movsb
rorl
and
shll
shl
out
jl
shll
in
fcompl
cmp
xchg
sbb
pop
sbb
ss
push
fs
in
popa
lret
rclb
inc
or
xchg
push
aas
call
dec
or
mov
sbb
cs
cmp
repnz
loope
sub
add
int3
fadd
push
fnstenv
mov
dec
loopne
divb
lcall
lods
cmp
pusha
std
mov
out
add
int
in
dec
sbb
adc
sbb
stos
adc
pop
fildll
add
inc
xchg
test
push
ss
ss
imul
scas
inc
dec
aad
and
cmp
xchg
pop
push
addr16
icebp
xor
push
mov
push
xchg
fldt
loop
xchg
jo
ss
sbb
lods
jge
xchg
lahf
iret
and
mov
int3
in
iret
pop
ja
loope
movsb
adc
pop
push
repz
adc
fwait
lcall
fldl
pop
cmp
repz
aaa
pcmpgtw
mov
out
xor
jg
cmp
ljmp
arpl
stos
pusha
xchg
pop
add
jp
jp
mov
test
in
mov
inc
aam
jo
xchg
mov
pop
hlt
scas
mov
mov
inc
fsubrl
adc
lea
aam
mov
test
inc
cltd
jns
and
lods
icebp
decb
mov
push
cld
stos
mov
jbe
fs
jmp
push
xor
out
add
stos
in
sub
inc
mov
ja
mov
add
pop
addl
lock
lahf
scas
dec
pop
lahf
jp,pt
jnp
fwait
cmp
std
sub
pop
xchg
adcb
dec
or
das
sub
mov
jno
xor
cmpl
push
adc
fstps
stc
mov
inc
repz
movsb
adc
loop
mov
mov
cmp
divb
repz
jmp
or
out
mov
mov
jle
mov
jle
mov
add
subb
insb
push
inc
and
inc
sahf
pop
dec
ficompl
mov
cmp
imul
pop
xor
cwtl
adc
dec
addr16
jmp
pop
rolb
lock
sbb
lods
dec
repnz
aad
out
sub
dec
xorl
xchg
mov
loope
xchg
roll
dec
and
sub
pop
test
inc
mov
adc
adc
and
jp
in
das
mov
repnz
jmp
int3
xchg
fucom
lds
mov
push
stc
mov
add
test
mov
fs
loope
push
fstps
insl
adc
pop
cmp
push
ret
add
mov
arpl
sub
jne
and
xor
in
xchg
xchg
outsb
push
shrb
mov
jbe
outsb
mov
in
fiaddl
add
jge
jo
js
mov
dec
pop
add
mov
adc
out
or
fucomip
sbb
push
jmp
orb
push
and
push
es
mov
sbb
popa
in
xchg
dec
push
mov
xchg
insb
sub
ss
cmp
push
int3
out
push
cmp
addr16
dec
jecxz
jns
add
insb
and
jnp
jmp
jmp
jns
push
mov
mov
sar
imul
loopne
push
mov
lock
das
test
decl
out
gs
cld
push
enter
sahf
addr16
xor
inc
push
rolb
pusha
mov
xor
pushf
dec
inc
cmp
cmp
cmpsl
push
lods
jmp
adc
mov
or
orb
cmpb
adc
jecxz
sbb
pop
ds
inc
mov
icebp
adc
cltd
add
mov
adc
mov
pushf
loop
inc
mov
rcrl
cwtl
loope
sahf
push
repnz
in
jae
cmpb
popf
shlb
mov
jne
jne
pushf
jecxz
out
pop
loop
mov
xchg
xchg
xchg
lret
outsl
xor
inc
mov
fldenv
dec
jb
cwtl
inc
cli
pop
sbb
jmp
in
xchg
cmc
aam
sub
lea
jecxz
cmp
test
dec
addb
pop
test
sbb
or
add
jo
cwtl
mov
fsin
test
or
adc
pop
jnp
add
aaa
les
jmp
sbb
mov
inc
cld
dec
push
inc
dec
or
dec
inc
xchg
mov
outsl
sub
add
int
in
jp
call
jb
sbbb
sbb
sbbb
leave
shrb
movsb
sbb
push
ja
pop
pop
pop
js,pn
imul
pushf
daa
xorl
sbb
jns
xchg
daa
pop
popa
xor
add
scas
fldt
sarb
mov
jbe
push
jno
and
xchg
leave
mov
aaa
in
fidivrl
aas
sbb
arpl
push
mov
loop
xchg
sub
fbstp
jge
stos
test
sti
gs
ficompl
ss
cmp
test
sbbb
and
mov
mov
loop
push
mov
cltd
rcr
adc
lods
pop
mov
stos
stos
lods
inc
cld
inc
push
cmp
addl
jne
fcoms
mov
mov
cmp
test
cmp
je
mov
xor
add
popf
setno
popa
lret
push
fistps
and
fldt
ja
adc
xor
push
push
inc
mov
hlt
mov
and
or
xor
sbb
inc
ss
pcmpgtb
sarl
xchg
insl
scas
lods
sub
out
jle
adc
xlat
lock
inc
mov
inc
xchg
mov
mov
jl
cmpsb
loop
push
shll
and
xor
jnp
and
test
popa
decl
adc
inc
mov
gs
int3
cmp
scas
jns
test
nop
pushf
xor
dec
cs
pop
pusha
repz
add
pushf
mov
xchg
pop
jne
add
mov
adc
pop
cltd
push
xchg
addb
pop
push
inc
inc
adc
add
not
or
jl
mov
pop
loop
mov
xor
and
daa
in
xchg
enter
pop
xor
inc
mov
psubsw
test
cld
mov
mov
jg
adc
or
and
bound
push
stos
popf
ljmp
addl
lock
pop
dec
push
jae
pop
cmp
pushf
mov
in
xor
sbb
out
add
mov
stos
xlat
stos
bound
leave
repnz
sub
mov
mov
ret
jbe
jle
pop
fistps
jecxz
cmpsb
test
cmp
imul
in
xchg
xchg
test
push
jg
insl
mov
popa
cmp
aad
and
inc
outsb
dec
dec
inc
fisttpl
sub
fdivrl
add
or
xor
sahf
pop
rcll
stc
ds
mov
testb
adc
cmp
sar
inc
inc
pop
mull
or
inc
jg
xchg
cmp
dec
add
pop
test
mov
js
cltd
sub
xchg
lcall
arpl
or
mov
and
arpl
and
sub
cmpsb
ss
rcrb
cli
mov
push
aad
mov
jns
arpl
adc
and
lds
dec
push
or
in
in
mov
les
pop
mov
push
cld
cwtl
sbb
jl
cwtl
push
scas
mov
and
and
inc
es
stos
std
ja
in
mov
in
shr
xor
sbb
xor
int
jmp
xchg
pusha
pop
and
dec
call
lret
jg
pop
xor
mov
sbb
lret
jle
sub
mov
sbb
jns
outsb
pop
cld
leave
xchg
stos
idivb
xlat
or
push
sbb
int
in
inc
adc
test
shlb
or
pop
sub
jb
inc
jne
sbb
add
rcll
push
cmpsb
aad
movsb
mov
adc
push
imul
mov
movsb
scas
aaa
dec
dec
push
jne
mov
cli
dec
sub
icebp
lea
cli
mov
insl
test
xchg
sub
pop
mov
loop
cmp
daa
adc
fsubrs
or
sub
jnp
imul
dec
mov
in
aam
movsl
lret
adc
in
fmuls
lcall
mov
xor
pop
loop
and
push
cld
aad
xor
fistpl
lods
in
cmpsl
popa
fucomi
mov
into
xchg
sbb
xor
push
sbb
out
sub
fisubl
mov
jmp
imul
jge
ja
sti
xor
xchg
stc
and
inc
mov
ret
test
loopne
push
xor
sbb
clc
lret
jg
xor
add
clc
out
int
enter
jl
daa
dec
push
dec
xor
arpl
repz
not
cmp
popf
jle
cmpsb
andl
jne
sub
xlat
push
adc
bnd
sub
fcomp
orl
aam
mov
xchg
mov
add
or
sub
rol
repz
iret
sbb
rolb
arpl
int
jns
lods
jnp
cmc
imul
lock
fwait
inc
mov
in
icebp
arpl
aad
mov
mov
das
inc
lcall
pop
sub
popa
jg
nop
icebp
je
mov
dec
pop
jns
sub
mov
repz
notl
dec
lods
sub
aam
jno
xor
repnz
xchg
mov
jnp
rcrl
and
pop
push
jne
inc
sub
xor
jg
pop
and
sub
inc
nop
pop
lods
das
imul
pop
jne
cmp
negb
aad
dec
mov
insb
jmp
adc
loopne
outsb
stos
xchg
xchg
and
adc
xchg
in
dec
xor
jbe
mov
xchg
cmp
cmp
jno
out
sub
ret
lea
shlb
shld
mov
in
sub
mov
and
mov
add
sahf
push
xor
and
mov
pusha
pop
shlb
xchg
or
or
popa
cld
call
xchg
dec
jno
jae
stc
sub
mov
inc
daa
jmp
pop
pop
test
stos
pop
lds
mov
popa
mull
push
inc
add
repz
mov
aaa
aas
fs
sbb
xchg
jl
fdiv
sbb
popa
mov
and
adc
loope
repz
pusha
cmp
jo
push
fisubrs
xchg
xor
add
int
mov
inc
and
adc
push
jo
es
jns
pop
jo
cmp
xchg
daa
xor
lret
ljmp
sarl
shlb
mov
jge
xlat
je
cmpsl
inc
cmpsl
aaa
jle
negl
insb
inc
cmp
bound
in
jae
pushf
into
jmp
adc
or
dec
pop
push
sbb
adc
cmp
test
shl
cld
in
movsb
lods
sub
adc
cmp
inc
cmp
ret
icebp
jb
pop
daa
imul
lods
rclb
sub
mov
and
xchg
pop
pop
adc
push
cmpsb
mov
fs
lahf
mov
dec
adc
sub
push
push
iret
xor
inc
sbb
pushf
pop
and
ss
daa
inc
and
mov
sbb
cmp
js
cmp
push
add
sbb
dec
ret
mov
add
jbe
mov
push
xor
pop
xor
stos
xchg
popf
in
xchg
add
insb
mov
mov
jp
test
ret
fcomps
adc
mov
mov
cmp
push
pop
aas
jmp
dec
inc
ret
pop
dec
mov
aad
xchg
pushf
xchg
sbb
jmp
mov
mov
enter
cmp
sti
jnp
fnstsw
jo
es
in
nop
js
adcb
imul
inc
mov
loopne
imul
es
cltd
or
enter
xor
dec
in
aad
int3
aaa
arpl
sbb
popf
sbb
ja
xchg
xchg
movsl
sub
sbb
adc
fsts
fs
cli
pop
shl
sahf
sbb
or
ds
sbb
pop
shr
mov
popf
inc
psubw
xchg
movq
mov
xchg
cmc
inc
jne
jl
sub
pop
outsl
adc
adc
push
sub
dec
movsb
sub
jg
xchg
push
into
mov
mov
insb
sbb
push
adc
popf
or
test
jmp
mov
nop
mov
dec
out
adc
rorb
xchg
jp
or
lods
xchg
jle
mov
aam
sbb
int
pmulhuw
mov
into
dec
cmp
pop
mov
mov
dec
addb
push
not
sub
and
lock
jbe
mov
testb
mov
cmpsb
enter
out
and
xchg
je
sub
ret
jno
cmc
shrl
xchg
dec
mov
xchg
in
aaa
push
mov
add
inc
aad
sub
notl
inc
pop
call
pop
fs
pop
sbb
push
mov
mov
das
lods
sbb
nop
pop
push
loop
xchg
cmpsb
jmp
icebp
dec
iret
or
xchg
cli
xor
xor
mov
das
mov
sub
or
and
and
pop
mov
adc
inc
into
adc
push
xchg
mov
cmpsl
sub
or
pop
add
add
ds
addr16
daa
loopne
jnp
cmp
sti
xor
jae
sub
cltd
sub
aam
test
mov
outsb
outsb
mov
push
es
or
mov
xchg
jge
pop
xrelease
inc
cltd
ja
xchg
icebp
imul
je
icebp
cmpsb
push
mov
sbb
aam
sbbb
pop
mov
mov
mov
movsl
mov
mov
jp
sbbb
push
pop
sbb
test
ja
clc
scas
pop
gs
mov
ror
outsb
mov
cmc
mov
cmp
out
gs
xchg
sub
fnstcw
push
daa
adc
xchg
mov
clc
scas
push
icebp
adc
cs
inc
adc
and
adc
add
daa
cmc
push
or
in
inc
gs
aas
mov
in
fisttpl
and
js
test
in
ljmp
in
jmp
xchg
movsb
sub
sbb
push
xor
cli
in
and
aaa
fdivr
add
cmp
addr16
out
mov
mov
xchg
push
xchg
mov
lods
jmp
push
fidivs
push
mov
or
int
fwait
clc
js
mov
xchg
int3
shl
sub
cmp
inc
js
rcr
xor
xchg
cmpl
dec
jp
pop
aas
negl
xchg
inc
pusha
or
inc
daa
arpl
jge
cmpsl
test
iret
add
mov
in
outsl
jb
dec
push
fiaddl
add
xchg
idiv
ret
sarl
scas
dec
add
cld
sbb
rorl
stc
movl
push
xchg
test
sbbl
xor
in
mov
push
cmp
cli
stos
dec
pop
rorb
mov
sub
scas
aam
inc
mov
adc
scas
sub
iret
pop
push
jmp
popa
test
scas
and
aaa
or
jne
out
dec
xor
ds
add
scas
stos
aad
pop
xorb
xor
lea
pushf
jmp
iret
sti
pusha
jne
es
push
ret
mov
cmp
out
sbb
or
je
mov
jne
ljmp
sbb
sti
add
add
rcll
loop
lods
mov
aad
pushf
dec
in
bound
in
sbbb
clc
scas
fs
clc
roll
out
es
hlt
rolb
int
push
int
dec
gs
xor
sbb
fbstp
mov
hlt
add
test
outsb
jecxz
loop
pushf
int
fs
in
pop
int3
aas
mov
test
std
dec
outsl
dec
out
cmc
arpl
out
into
icebp
bnd
push
jno
inc
cwtl
inc
mov
stc
xor
jnp
push
sbb
adc
scas
pop
cwtl
dec
xlat
jne
clc
mov
or
js
push
or
data16
jo
aaa
jge
push
jg
aad
pop
ja
cmc
and
dec
mov
push
stos
adc
mov
lret
movb
sub
sar
mov
xchg
std
ds
test
mov
push
mov
and
cmp
fmull
lods
out
xor
mov
fistps
jb
rcrb
in
mov
test
lret
movhps
es
out
add
pop
cmc
iret
sbb
lcall
add
mov
sub
sbb
pop
xor
addr16
roll
leave
psubq
in
or
fstl
jae
icebp
in
aaa
fs
test
inc
mov
shll
inc
sbb
stc
inc
or
xor
fwait
outsb
sbb
mov
push
xor
jecxz
out
movsb
cmpsl
shll
outsb
lods
mov
shl
mov
lcall
mov
mov
dec
shl
inc
and
jns
add
mov
je
fists
lahf
sbb
mov
jmp
mov
dec
mov
inc
aad
inc
enter
shl
imul
popa
pusha
pushf
js
movsl
mov
sbb
lret
testl
push
pop
repnz
fsubl
sbb
roll
jo
dec
fstpt
xchg
lret
loop
push
andl
inc
mov
or
call
fildll
dec
dec
cmp
stos
sbb
testl
insb
mov
push
out
cmc
inc
cltd
cmp
sti
sbb
loope
xchg
cmp
mov
aaa
mov
push
in
push
jns
mov
ret
mov
xchg
push
and
sub
movsb
in
pop
cmpsb
dec
sub
es
ljmp
pop
aaa
jp
push
js
dec
pop
mov
lods
int3
push
jp
sahf
pop
insb
aam
adc
xchg
mov
sbb
mov
loope
xor
push
ss
shrl
sbb
js
call
pusha
stos
or
jns
dec
cwtl
movsl
pusha
inc
out
mov
test
xchg
push
mov
into
pop
jmp
xor
mov
sbb
adc
mov
sub
sbb
das
popa
dec
jp
ret
sbb
int3
call
inc
push
ja
mov
add
jge
fldcw
inc
int
insl
mov
or
push
and
int3
or
lahf
mov
add
sbb
stos
lds
push
call
stc
icebp
aas
fucom
cltd
pop
xchg
pop
sti
in
cltd
inc
or
jmp
mov
pop
leave
xor
test
fcompl
mov
das
ficomps
imul
sub
pop
notb
imul
push
mov
cmp
push
mov
arpl
cmp
nop
mul
xlat
inc
aad
aas
sub
or
sbbb
test
and
inc
add
lds
rorb
sbb
dec
sbb
out
outsl
mov
add
sbb
loope,pn
and
xor
mov
mov
inc
adc
nop
cltd
dec
jge
insb
and
ret
xchg
mov
es
adc
es
and
pop
and
aam
or
mov
sbb
repnz
jae
jl
decb
xchg
mov
btc
pop
pop
sub
xchg
dec
jne
lods
out
scas
cmp
arpl
mov
nop
movsl
mov
inc
xor
push
push
cwtl
push
dec
dec
les
jno
inc
mov
inc
pop
arpl
mov
xchg
rcll
mov
mov
cltd
adc
mov
clc
fcmovu
dec
sub
ds
fwait
lea
lret
xchg
pop
cs
bound
out
push
inc
push
test
add
hlt
cmpsb
dec
ret
adc
and
sub
jnp
fistl
scas
sbb
mov
mov
mov
mov
cmp
imul
xor
xchg
out
adc
adc
push
cmpsb
std
leave
add
push
enter
xchg
js
inc
out
daa
gs
loopne
fldt
in
test
jne
pop
adc
pop
xchg
sbb
dec
gs
idivb
sub
push
xor
xrelease
testl
jmp
xchg
jp
xchg
fildll
inc
movsl
add
mov
call
and
xchg
aas
dec
xor
and
fwait
loope
popf
mov
out
popf
cwtl
imul
ds
data16
mov
int3
stc
sbb
and
xor
sahf
mov
xchg
pop
stc
popf
sbb
pop
int3
xor
fs
dec
les
ljmp
test
and
xchg
addl
xor
xchg
xor
sub
push
imul
pop
sahf
loop
mov
mov
popf
dec
sbb
cmp
ljmp
andl
adc
subl
sub
lcall
into
jle
jecxz
out
lods
mov
or
out
in
ds
jno
inc
mov
jae
js
out
xchg
xchg
adc
xchg
lds
and
push
cli
in
shrb
inc
insl
and
std
mov
sub
pushl
bound
or
icebp
pusha
sarl
pop
mov
dec
loopne
dec
out
jns
adc
lods
dec
fimull
lret
out
mov
inc
and
out
sbbl
out
movsb
mov
lcall
cmpsl
cmc
lret
adc
sub
mov
js
fdivrl
xor
mov
dec
mov
add
xor
loope
pop
xchg
icebp
sbb
mov
xchg
fs
dec
push
mov
ljmp
mov
sub
es
call
mov
push
adc
or
test
push
and
les
imul
xor
sbb
arpl
push
xchg
fdivrl
in
gs
jne
addr16
mov
out
lds
nop
enter
std
ljmp
hlt
stos
pop
add
push
insb
movsb
and
mov
data16
xchg
xchg
xlat
loope
test
lock
dec
cmp
cmp
fcmovnbe
jp
xchg
sbb
leave
sbb
cmp
pusha
jle
cmpsb
dec
aam
fsubrl
daa
sub
sbb
addb
and
ss
loop
dec
int
fisttps
repnz
mov
jb
cmc
ds
push
inc
gs
loopne
jne
movsl
mov
dec
ss
pop
int3
out
movsb
sbb
xor
adc
mov
aas
or
fnstcw
clc
bound
pop
mov
in
loope
rcl
adc
into
mov
add
mov
xchg
mov
dec
outsl
das
push
xor
mov
sahf
dec
mov
and
or
mov
in
jl
push
pusha
mov
iret
out
pop
push
push
sbb
lods
jae
in
test
fsubrl
add
jne
rolb
cli
lret
push
mov
adc
shrb
out
enter
cwtl
push
sahf
inc
xchg
cmp
movsb
jle
and
jno
mov
and
popa
das
pusha
mov
inc
fisubs
mov
leave
push
add
adc
rol
jle
mov
mov
fs
and
imul
sbb
mov
outsb
or
xor
cmpps
xchg
dec
movsl
gs
inc
adc
and
push
jnp
xchg
sub
out
aam
daa
icebp
mov
addb
shll
push
xor
sahf
xchg
les
push
pop
fistpll
loop
xor
mov
xor
cld
push
add
fsubs
into
sbb
mov
mov
xchg
lods
mull
aas
jns
cmp
lock
push
inc
popa
push
push
pop
sub
mov
into
cmp
daa
jg
cli
clc
xor
xlat
jnp
dec
jle
test
inc
adc
imul
jp
andl
add
int
jecxz
cli
sbb
jae
push
and
pop
subb
dec
movsl
rcrl
jno
daa
pop
mov
roll
pop
jns
xor
out
inc
scas
jb
xlat
hlt
sub
shll
cmp
push
add
jg
push
mov
jo
pop
loop
xchg
xor
fiaddl
mov
sub
aad
mov
inc
adc
add
xor
push
jle
jmp
mov
scas
jge
popa
icebp
int
mov
lahf
outsb
shrb
cvtps2pi
insl
push
cli
xchg
mov
mov
cmp
push
mov
dec
std
loop
clc
leave
test
in
mov
push
shr
xor
xor
jecxz
dec
sub
mov
imul
dec
sub
mov
cmpsb
add
xor
scas
jp
pop
sbbl
sbb
mov
movb
push
xchg
sti
out
pop
lods
outsb
insb
push
imul
add
add
into
jno
lcall
xlat
jb
push
mov
jecxz
dec
outsl
and
bound
in
flds
bound
pop
mov
mov
sub
mov
int
out
mov
clc
in
mov
int
xor
fcmovnb
xlat
add
ror
dec
pusha
stos
pusha
fisubs
inc
movsb
ljmp
push
and
push
cmp
xchg
push
pop
fldcw
mov
jae
int
aaa
dec
pop
icebp
in
adc
in
cmc
les
aam
leave
fisubl
push
int
xor
dec
call
mov
cmpsb
daa
jns
mov
and
into
insl
sbb
jl
dec
inc
push
mov
push
jg
jmp
data16
mov
ret
dec
div
call
lea
test
jecxz
jmp
pop
dec
mov
mov
inc
xlat
outsb
xor
fnstsw
leave
xor
sbb
es
sub
pop
sbb
test
or
shl
jno
jbe
addr16
dec
ss
jns
pop
xchg
addl
out
in
outsb
and
repz
cmovnp
jns
jnp
push
or
js
xchg
xchg
xchg
push
addr16
mov
adc
leave
cmc
scas
lock
loop
icebp
mov
jbe
sbb
andb
call
push
sub
lret
lds
test
jae
jcxz
ljmp
out
ret
mov
ss
push
adc
jmp
sub
test
push
sarb
and
mov
push
jecxz
insl
pop
pop
sbb
mov
addr16
icebp
cmp
xor
cli
repnz
stos
inc
jp
fcomp
out
orb
cmp
add
aam
sub
lcall
xchg
imul
or
ja
mov
push
fcomip
xchg
jle
or
push
rolb
cmpsl
mov
mov
int
push
adc
cmpsl
or
xor
xchg
or
adc
push
dec
sbb
rcrb
sub
mov
push
in
lret
xchg
mov
pushf
xchg
cmp
pop
icebp
test
or
nop
in
test
jno
sub
sub
mov
call
sub
test
subl
jmp
mov
dec
mov
push
xchg
fcoml
jb
mov
lods
sbb
push
dec
test
add
cmp
ljmp
add
push
movsb
push
mov
cmpsl
or
jg
jle
lret
lret
aas
xchg
test
jnp
popl
pop
adc
lods
test
loop
std
outsb
jle
ja
bound
pop
and
push
jle
sarb
outsl
jecxz
push
or
jnp
scas
xor
xchg
add
scas
mov
iret
jno
insl
adc
pop
hlt
dec
adc
dec
insl
aad
gs
lds
outsb
loopne
mov
ljmp
out
pop
pushf
filds
sub
xor
in
fwait
pop
ja
fs
test
clc
cli
add
out
leave
repnz
push
sub
les
fs
add
repnz
pop
outsb
ds
jmp
push
pop
jns
popa
jecxz
fxtract
sub
cmc
pop
dec
nop
or
xor
mov
gs
sub
lods
jae
lcall
fs
xchg
in
dec
sub
das
mov
test
fcomps
aaa
lcall
aam
cltd
and
cmp
lea
mov
test
mov
xchg
scas
call
fs
icebp
mov
sub
movsl
adc
jbe
push
cltd
stc
xchg
adc
add
in
mov
lods
xchg
daa
das
push
jp
push
add
add
cmpsb
or
addr16
push
xchg
rcl
js
nop
mov
lds
mov
adc
xchg
mov
pop
loope
sub
cmc
mov
scas
sarl
sub
pop
jne
outsl
lock
imul
rorb
push
cli
nop
mov
in
mov
stc
addr16
xor
cld
int
mov
sti
mov
or
or
lret
cmp
lret
movsl
push
incb
cmp
ret
mov
dec
mov
add
lods
cltd
jge
fwait
mov
lret
lea
xchg
push
add
sbb
into
pop
test
fs
push
test
hlt
mov
cwtl
push
es
pop
cwtl
and
push
js
in
dec
adc
orl
lcall
mov
jb
jo
sub
pop
fs
lds
jae
pop
mov
loopne
adc
push
roll
sub
pop
push
xlat
push
shll
cwtl
js
ljmp
lds
xchg
aad
xchg
add
lds
ja
cmpsl
pop
ds
pusha
ljmp
ret
fwait
push
clc
rcrb
lds
jp
and
movsb
bound
inc
or
cmp
test
sub
movsb
lret
das
mov
aaa
sbb
iret
aaa
repnz
and
sti
mov
dec
inc
sbb
add
mov
xchg
inc
stc
push
inc
inc
sbb
popf
test
sbb
stc
pop
fnstcw
aas
mov
nop
mov
loop
pop
arpl
jns
outsl
xchg
out
xor
push
je
jl
mov
mov
jno
pop
lahf
xchg
inc
out
fmull
mov
in
adc
cmp
mov
fidivl
dec
jmp
or
mov
int3
dec
in
rclb
cli
jnp
scas
sub
shrb
fdivr
lcall
inc
cmpsb
jl
stc
sti
sub
jmp
jo
dec
lret
stc
lock
xchg
movb
cli
ds
sahf
rclb
cltd
dec
push
dec
mov
mov
aas
dec
imulb
push
insb
xlat
sbb
adc
jbe
cs
push
sarl
xorl
cmpsl
cmc
cmp
mov
sub
fsubrl
shll
pusha
in
pusha
aam
cmpsb
mov
divl
mov
xchg
mov
ret
xchg
das
cmpsb
out
imul
mov
mov
mov
jmp
decb
dec
sbb
dec
push
call
dec
xchg
paddb
roll
push
cmc
xor
js
add
mov
fsts
jnp
mov
adc
flds
mov
test
div
enter
lods
repz
inc
sub
pop
bnd
dec
mov
divb
pop
jle
cli
std
jp
insl
or
notl
mov
in
jl
call
pop
std
jle
push
hlt
rcrl
adc
movsb
push
mov
dec
jns
js
pop
rclb
test
int
or
sbb
dec
test
popf
jge
fisubs
inc
cwtl
inc
addr16
dec
jno
xor
cmp
add
pop
loop
std
adc
jge
ret
xchg
mov
ret
shl
in
insl
push
hlt
ret
pop
outsb
fistl
add
fisttpll
loopne
pop
mov
and
inc
lahf
stos
dec
sti
or
cmpsl
and
test
push
test
mov
inc
push
sarb
call
mov
lods
mov
push
lahf
xor
or
leave
xchg
xor
insl
fwait
mov
in
lds
jno
cmpsb
roll
cmp
mov
aas
pop
loope
andl
mov
hlt
add
dec
js
popf
mov
mov
xlat
rcll
jg
push
add
loopne
aad
insb
ja
xor
push
fsubrs
imul
outsl
scas
mov
repnz
inc
push
mov
ljmp
cld
pop
fiaddl
aas
mov
sbb
insb
cmpsb
loopne
jecxz
pop
sub
clc
ds
mov
shll
pop
test
sub
push
or
jns
pop
jns
fdivs
mov
dec
les
mul
in
jb
mov
fwait
pop
jno,pt
fwait
jbe
lret
mov
in
outsl
sti
pop
mov
lods
dec
and
dec
mov
fwait
jl
shrl
push
sbb
dec
ret
ss
test
jae
dec
push
sub
sahf
xchg
daa
addb
xor
mov
mov
sbb
es
mov
ret
jbe
mov
out
pop
jg
push
push
mov
pushf
lcall
scas
inc
ss
dec
aad
int
aad
fidivl
jg
pop
or
pop
scas
jmp
sbb
add
movsl
mov
or
shrb
push
sub
into
icebp
pop
dec
das
ja
stos
mov
mov
mov
cwtl
dec
mov
mov
in
cmp
sahf
adc
test
or
ljmp
lret
fldl
hlt
pop
xchg
je
nop
mov
inc
fs
outsl
sbb
jmp
cld
ljmp
dec
add
fimuls
lock
and
or
fsubs
mulb
mov
fcoms
and
test
loope
dec
lahf
popa
inc
push
iret
mov
or
out
in
sub
ljmp
pop
add
std
push
adc
call
bound
sbb
sbb
jns
push
das
scas
jno
or
fisttpl
outsl
sbb
int
imul
fpatan
inc
leave
enter
int
cmp
mov
sub
scas
adc
inc
fdivs
in
sbb
sbb
cld
cmpsb
mov
loop
psubusb
iret
mov
or
int3
dec
cmc
call
fsubs
xlat
adc
xchg
mov
sbb
ret
xchg
stos
lods
xor
repnz
cmc
addb
mov
xchg
cmp
cmp
leave
add
ds
mov
pop
out
mov
lahf
jo
jg
pushf
dec
add
pushf
jbe
pop
xor
pop
movsl
jae
sbb
in
push
ret
sti
dec
mov
loop
lds
push
in
imul
jle
lcall
sbb
nop
imul
int
pop
ljmp
jnp
sbb
out
rclb
jae
add
aas
or
jae
jbe
xchg
jmp
es
iret
xchg
push
and
dec
push
bound
jbe
out
sub
test
or
xor
sti
mov
fs
sbb
roll
pop
test
sub
scas
js
push
jae
sahf
jne
mov
mov
enter
cli
mov
aam
scas
xchg
push
jg
aas
ja
inc
fidivs
aad
jo
lods
xlat
jo
cmp
cmp
add
jmp
cmp
fsubs
sub
jns
pop
popf
dec
lods
adc
xchg
stos
cmp
adcl
cmpsl
imul
divb
pop
shl
subl
cmpsb
mov
js
rcrl
lods
out
cli
rcrb
scas
sbb
add
xchg
ds
insl
idiv
dec
stos
mov
nop
adc
pop
inc
jno
scas
aam
mov
fmul
faddp
rcr
and
dec
jecxz
xchg
sub
push
or
stos
jae
inc
and
add
mov
repz
dec
imul
pop
push
sub
insl
in
dec
dec
ficompl
pop
int3
faddp
cmp
sbb
push
cltd
lds
xchg
add
xor
leave
sbbl
mov
aam
hlt
pop
mov
aas
lds
push
int
jge
popf
adc
add
sub
int3
das
sub
movsb
jle
clc
or
ja
incl
fs
adc
fstpl
jle
and
jg
bound
leave
imul
sub
enter
jmp
jmp
rcrb
add
mov
notl
push
scas
daa
cld
fbstp
cwtl
addr16
push
dec
push
xorl
test
jle
xlat
dec
test
or
lret
push
mov
lods
in
mov
imul
pop
mov
pop
enter
out
mov
rcrl
push
jmp
insb
jle
sbb
dec
ds
divl
sub
xlat
sub
test
adc
cmp
mov
mov
mov
mov
xor
fidivrl
mov
adc
icebp
test
mov
daa
jno
or
cmpsb
mov
pop
into
and
inc
add
adc
not
subl
xchg
mov
faddl
push
cmc
daa
notl
lea
aad
fwait
add
lea
shl
mov
adc
jge
mov
or
repnz
sub
xor
fbld
loopne
aas
inc
cltd
shrl
lds
cli
adc
xor
das
movsb
mov
and
pop
insl
jge
push
adc
call
lcall
jnp
jns
gs
fs
popa
sarl
lods
push
test
dec
imul
mov
inc
mov
sbb
push
jg
xor
cmpsl
push
jmp
jg
fdivl
mov
pop
mov
ds
leave
xor
xchg
mov
lret
xor
jae
inc
or
mov
push
add
jne
adc
lret
sub
add
pop
push
lods
push
jmp
pop
adc
cli
enter
and
fdivrs
jnp
cltd
in
or
adcb
daa
sub
loope
add
outsl
or
xor
dec
jo
inc
dec
gs
xchg
cmp
add
rclb
mov
call
or
lds
js
or
cld
ret
add
sub
xor
mov
clc
mov
xor
add
test
inc
out
sbb
cmp
std
mov
push
shll
jle
fcompl
adc
imul
dec
pop
fimuls
mov
in
xchg
imul
sub
adc
rorb
int3
mov
jl
cmpb
outsb
scas
call
lods
xor
aas
ret
icebp
in
fmull
cmp
das
fnstsw
leave
out
sub
mov
ss
rcll
add
dec
loopne
mov
push
push
lcall
dec
or
add
stos
jl
ja
push
dec
scas
and
inc
cmp
mov
test
repnz
push
jmp
hlt
push
jbe
jns
sahf
cmp
jge
push
aad
lods
iret
dec
jb
jae
mov
sbb
xlat
fildll
aam
inc
rcrl
sbbl
fs
test
icebp
loop
and
les
or
or
adc
pop
lret
and
shlb
sbb
lods
or
and
rorl
hlt
leave
adc
xlat
test
pop
iret
xlat
jp
xchg
pop
and
test
cmp
lret
loopne
in
sbb
aad
arpl
cli
mov
cmp
xchg
leave
mov
stc
int3
cmp
fs
stos
mov
pusha
lock
xchg
ss
out
mov
xor
aam
loop
cmpsb
adc
sbb
inc
sbb
xchg
lret
mov
push
div
and
inc
add
push
adc
movsb
dec
mov
mov
push
loopne
adc
jne
imul
cmpsb
cmpsb
jg
divl
xchg
scas
pop
fs
stos
int
mov
mov
mov
stc
orb
sub
mov
stc
jecxz
out
jbe
mov
cmp
es
pop
add
out
cmpsl
jl
xor
mov
in
inc
stos
ss
lahf
sub
enter
cmp
and
inc
xchg
ret
jle
lcall
xor
test
sub
adc
sbb
sahf
cmp
cmc
mov
popf
pusha
das
inc
add
and
jo
xchg
aam
xchg
cmp
ret
sbb
or
cmp
or
mov
cs
mov
insl
imul
out
sbb
rol
jne
sbb
pushf
inc
mov
xacquire
test
aad
loope
outsb
xor
fst
jp
fldcw
jns
adc
jge
outsb
dec
dec
es
inc
sbb
adc
mov
mov
jecxz
push
nop
dec
sbbb
dec
pop
xor
cmp
xor
cmp
loopne
fdivrs
aad
cmp
ret
call
sbb
in
adc
cmp
mov
insl
shl
cmp
cmp
movsl
xchg
sbb
mov
mov
and
xor
push
shl
cmp
mov
mov
add
cmp
sbb
pushf
cwtl
mov
pop
int3
xchg
dec
xchg
fs
pop
in
mov
test
call
inc
xchg
xchg
mov
mov
sahf
cmpb
mov
inc
scas
push
mov
or
jnp
negl
lds
lods
enter
cmpl
enter
subl
mov
jge
out
dec
outsl
lods
jp
cld
and
inc
xchg
mov
fxch
neg
lret
sbb
lcall
xchg
cwtl
add
insl
push
iret
rcr
xor
cmp
jnp
jo
pop
adc
push
lret
js
sub
mov
inc
lcall
add
fstl
inc
jl
xor
xor
xchg
out
push
inc
movsb
fildll
and
mov
ljmp
cmc
cmp
rorb
loopne
mov
inc
xor
inc
dec
xchg
push
jb
adc
in
ja
lods
pop
mov
add
xchg
aas
imul
push
and
mov
lock
cmc
shr
and
jae
or
fcomps
and
ljmp
inc
or
jb
pop
je
popf
sbb
dec
and
insb
testb
jne
add
cmpsl
dec
add
dec
es
jae
scas
cmc
or
mov
in
cmp
aas
lea
cs
pop
mov
xor
xchg
loopne
in
out
in
imul
or
data16
scas
sarl
and
mov
out
stos
push
mov
push
aaa
es
not
xchg
or
pop
int
push
cmc
cmpsb
daa
mov
pop
popa
inc
pop
in
loope
pushf
or
sub
lea
in
mov
cmc
mov
dec
inc
or
dec
aaa
mov
jle
js
in
or
outsl
out
int
pop
push
xchg
cmp
inc
jl
inc
add
imul
mov
push
int
push
push
shrl
push
clc
iret
fstps
xor
fiaddl
inc
les
je
add
adc
lock
scas
imul
pop
rcrl
inc
sub
loope
icebp
je
cmpsl
cltd
mov
xor
xor
in
or
pop
adc
leave
std
push
nop
inc
aam
orl
js
sarb
xor
and
scas
daa
out
push
xor
or
and
aaa
add
jne
out
cltd
cmp
cmc
js
jl
xchg
daa
pop
sbb
cmp
push
ret
fwait
les
fstl
sub
mov
out
ret
adc
out
xor
sbb
loope
and
in
mov
mov
fcmovne
ss
insb
shrl
sbb
into
add
jle
shl
mov
mov
scas
outsl
pop
arpl
pusha
inc
xchg
in
adc
clc
inc
jnp
imul
dec
ja
lods
jns
mov
cmc
xor
sbb
hlt
inc
fwait
jae
scas
movsb
lret
call
aas
js
lock
inc
rorl
in
lds
cmc
jno
insl
mov
sbb
lods
cmc
or
cmp
mov
int3
js
pushf
cld
rolb
sbb
dec
outsb
outsl
sbb
dec
sarb
js
lahf
pusha
int
jmp
push
inc
aas
adc
pop
sbb
out
jmp
stos
sbb
push
hlt
mov
addl
push
cmp
mov
push
ja
mov
sbb
mov
xchg
mov
push
pop
in
addr16
fadds
inc
mov
and
out
dec
ljmp
jecxz
dec
scas
loope
xchg
add
insb
cmpsb
inc
dec
push
cwtl
aaa
scas
test
adc
lods
ljmp
movsb
pop
mov
jl
xchg
lcall
inc
mov
push
out
xchg
in
cmp
jp
xor
popf
fstpl
aam
jmp
mov
loopne
xchg
mov
addr16
fdivr
xlat
sbb
pop
cwtl
popa
inc
sbb
movsb
mov
sti
mov
xchg
data16
leave
insl
or
in
mov
inc
addr16
adc
fnsave
call
out
sbb
inc
push
sbb
sub
ret
mov
jbe
jg
shrl
js
jmp
cmpl
insb
mov
out
mov
adc
rcr
sbb
mov
jecxz
test
divl
leave
sbb
cmpsl
fstpl
fdivrl
sub
mov
in
outsl
pop
jae
and
movsl
adc
push
push
add
xchg
popa
mov
out
ret
clc
aaa
popf
stc
fistps
add
lahf
xor
loope
shll
push
push
xchg
dec
call
pushf
add
call
mov
cmc
movsl
xorl
mov
mov
scas
rcr
pop
lock
ja
jnp
into
push
pop
loope
sti
push
icebp
imul
xor
add
jb
int
adc
fcoml
inc
aad
popa
out
out
jecxz
arpl
movsl
inc
push
mov
xor
sbb
adc
clc
pop
rol
aad
addl
xlat
outsb
enter
cmpsb
add
sti
mov
or
dec
aaa
cli
pop
or
out
icebp
in
sbb
repnz
mov
cwtl
iret
cmp
lods
and
outsb
xor
rorb
sbbb
sub
mov
fldt
adc
cmp
sahf
test
xor
add
sbbl
imul
pop
mov
jmp
insb
xchg
xlat
push
iret
jbe
je
mov
xor
dec
test
cmp
add
adc
adc
fucompp
jmp
push
mov
xor
lahf
scas
in
fcomip
ret
gs
xlat
fdivr
mov
pushf
or
gs
mov
sub
push
or
test
ret
push
and
ret
js
cmp
fstpl
cmp
pusha
stos
adc
adcl
xor
or
in
fstp
arpl
repnz
in
xchg
addr16
pop
pop
jle
and
mov
fimuls
add
cmp
mov
cmp
icebp
pop
outsl
insl
fiaddl
icebp
and
cs
call
sbb
mov
jo
sub
jo
out
pushf
bound
pop
sub
push
add
iret
les
dec
ret
das
cmpsb
sub
pop
lret
jo
xor
mov
cmpsb
std
pop
repnz
dec
stc
dec
mov
push
and
dec
fisubrs
sub
xor
sbb
pusha
mov
xchg
sbb
in
mov
dec
repz
call
mov
xchg
int3
ljmp
sub
in
push
pop
lret
mov
movsl
push
fisubrs
jae
loop
pop
popf
push
cmpsl
sarb
ljmp
jnp
imul
out
rorb
sbbb
push
dec
aad
in
push
dec
cmp
push
mov
inc
js
cmc
jnp
adc
sub
daa
in
push
inc
push
inc
and
mov
loop
xchg
stos
iret
sbb
adc
test
or
xchg
sbb
xchg
mov
mov
or
pop
imul
in
sti
pop
add
hlt
push
aam
jmp
popa
stos
sub
cmp
pop
push
pop
jl
lods
lock
inc
dec
ficompl
pop
add
into
subl
stc
mov
loopne
hlt
and
rorl
test
fucomp
jge
and
cld
or
ljmp
lods
or
mov
std
xor
ja
mov
xchg
aas
sub
mov
push
ret
xchg
inc
jae
pusha
data16
cld
adc
cmp
mov
adcl
lds
cmp
scas
and
ja
pop
clc
pop
add
mov
adc
cmp
xchg
or
mov
int3
cmpsb
adc
mov
mov
int3
xor
in
xchg
popf
idivl
or
fucomp
mov
cmc
xchg
enter
mov
pusha
cltd
pop
icebp
and
and
cmp
js
sub
inc
add
or
insb
push
ret
fadd
hlt
das
pop
stc
dec
dec
pop
add
xor
mov
mov
sub
jge
add
loope
mov
pop
pop
push
dec
ret
sub
or
jbe
cmp
mov
sub
mov
jb
int3
in
enter
repz
sub
adc
jge
loope
cmpsb
and
aas
and
mov
imul
mov
cwtl
or
pop
mov
ret
xor
sbb
push
and
cmc
xchg
test
xchg
or
sub
mov
cmc
cmpsl
sbb
and
loope
xchg
sub
mov
mov
pop
jno
paddd
dec
shrl
pop
inc
dec
push
cwtl
gs
outsl
lahf
mov
xor
xchg
mov
imul
push
test
mov
sbb
pop
and
jle
pop
jle
mov
adc
testl
pop
sarl
addr16
loop
sub
in
cmc
loope
mov
inc
sbb
leave
pop
xor
popa
mov
jns
andl
test
mov
and
lds
out
inc
mov
out
inc
int
mov
cld
sbb
or
pop
stos
mov
sub
in
test
into
push
jmp
fsubrs
pop
sub
dec
sbb
rcrl
fdivs
push
mov
sub
enter
mov
loop
jae
sub
fiadds
sti
enter
pop
push
sbb
dec
lcall
cmp
pop
fcom
or
fsubl
jbe
push
mov
mov
push
nop
push
cmp
jp
shll
push
jecxz
mov
into
and
outsl
push
cs
xchg
jae
es
inc
jae
cmp
sbb
pop
dec
jg
arpl
sbb
scas
or
aam
dec
and
fwait
pop
inc
jge
push
les
lret
sbb
push
pop
hlt
and
push
imull
fcomip
mov
shrb
cmp
cmp
inc
and
divps
add
inc
sub
pop
rol
pop
mov
shrl
dec
or
mov
mov
jge
jecxz
and
cmp
xor
sub
aad
insl
arpl
mov
nop
inc
dec
aaa
mov
aad
xchg
out
lods
das
mov
into
cwtl
dec
shr
out
mov
ja
cld
je
pop
out
xchg
lds
jo
das
push
movsb
jecxz
push
bound
or
arpl
mov
repnz
test
mov
dec
sbb
shr
shl
dec
dec
daa
mov
lret
and
xchg
je
pop
or
test
sbb
outsl
cltd
mov
push
sbb
stc
div
cmp
add
mov
int
popa
mov
xchg
adc
sti
scas
out
stos
sbb
push
addr16
iret
sub
adcl
pop
out
lods
stos
scas
or
mov
movsb
arpl
cli
insb
push
loop
test
and
xor
iret
in
sbb
jb
ja
dec
out
adc
fidivl
mov
andl
inc
psubsw
dec
sahf
and
pop
iret
sbb
push
pop
xchg
push
jecxz
filds
cmp
cmp
add
jmp
pop
mov
or
into
or
cld
jge,pt
cld
mov
lahf
fldt
cs
dec
popa
push
in
insl
sub
mov
arpl
daa
cmc
mov
and
sbb
filds
dec
lods
cmpsb
sbb
pop
cmp
out
enter
pop
xor
xlat
jle
or
or
jo
xchg
lcall
sub
push
aam
sub
std
xchg
fwait
inc
cs
ja
flds
jb
cwtl
pop
cmp
jecxz
fmull
xor
dec
orb
fimull
dec
mov
xor
fwait
out
sub
xchg
inc
cmp
les
push
idiv
insl
xchg
jnp
sarl
outsb
mov
pop
repnz
outsb
jecxz
test
out
pop
outsb
fstpl
loop
mov
adc
or
movsb
push
cltd
fbld
leave
inc
aad
lods
cmpsl
rcl
jns
cmp
fiadds
push
hlt
or
leave
jp
xor
inc
and
lds
add
adc
mov
mov
dec
pop
jns
mov
daa
mov
sbb
mov
cwtl
iret
mov
jge
iret
movsb
mov
mov
sbb
sub
dec
pop
js
outsb
mov
mov
lea
test
dec
popf
mov
ret
insb
push
mov
mov
lcall
and
sbb
addr16
adc
pop
or
pop
cmpsb
adc
push
jns
xor
xchg
add
ud0
sahf
aas
into
fnstenv
xchg
jbe
adc
fsubrl
inc
shll
pop
loopne
sarb
icebp
adc
popf
mov
jns
das
ret
stc
push
fisttpl
out
add
push
mov
fisubl
cmp
in
cmpsl
sahf
jg
mov
jno
cwtl
or
jp
lret
jl
jmp
jnp
and
xchg
shrl
lods
popf
and
in
mov
daa
cmp
shll
addl
and
out
mov
sbb
jl
add
sahf
fistpll
sti
adc
int3
cmpsl
loope
loopne
push
jmp
cmp
xchg
mov
jle
insl
pop
sub
sahf
addr16
xchg
cmpl
ljmp
mov
fucom
pushf
ret
cmp
add
mov
cmp
mov
sub
mov
mov
mov
ljmp
stos
jg
out
xchg
out
mov
mov
mov
scas
es
mov
mov
mov
mov
ror
lds
pop
or
fstpl
pop
inc
scas
jmp
pop
and
fs
fnsave
test
data16
outsb
sarb
fwait
mov
data16
add
ljmp
iret
cld
cltd
mov
and
inc
xor
mov
push
fsubp
inc
rcrl
sub
call
and
sub
inc
push
or
in
xor
in
andb
xor
or
cmp
stos
push
push
mov
fcoms
subps
cmc
test
loopne
add
dec
push
jl
xor
fdivs
arpl
push
out
jle
pop
rolb
aam
jb
mov
enter
clc
xlat
addb
xchg
les
pop
fldl
movsb
xchg
lret
ret
jecxz
lea
std
and
add
dec
inc
flds
pop
into
jns
xchg
je
push
sub
lods
dec
jg
imul
pop
jmp
mov
outsl
sbb
lea
jp
orl
xor
sub
ljmp
adc
mov
rcrw
cmp
push
addr16
push
xor
lret
cmp
pop
mov
sti
sbb
ds
popf
or
roll
cmp
popf
xor
loopne
mov
inc
movsb
hlt
into
jb
adc
jl
fsubs
mov
lea
mov
fs
xchg
adc
lret
adc
lret
cmp
stc
sub
out
jbe
fstpl
in
push
cmp
or
jmp
bound
pop
xchg
add
repnz
adc
adcl
pop
sahf
iret
fcoml
add
ror
sti
and
add
jb
mov
xor
ljmp
stos
sub
clc
xor
push
sbb
xchg
lahf
or
ds
mov
mov
rorb
jmp
dec
or
mov
addr16
jo
out
or
add
pop
fwait
lock
cvtdq2ps
jmp
cltd
fnstenv
or
mov
outsb
jle
push
outsb
jo,pn
jg
sbb
inc
mov
in
mov
mov
stos
mov
lods
std
xchg
stos
movb
mov
mov
leave
fstps
mov
xchg
xor
mov
int3
mov
lcall
mov
je
sti
push
vdivpd
adc
xor
jae
aam
lea
mov
mov
add
xor
push
test
in
xor
mov
scas
shrb
repnz
fidivs
push
test
jecxz
shll
inc
fbld
sarb
jle
insl
test
iret
lret
push
rorl
jno
xchg
jle
dec
pop
jl
mov
mov
or
xor
jmp
lds
dec
iret
fsubl
in
popa
or
jae
imul
jne
es
scas
xor
jge
cmp
mov
sub
mov
add
call
fidivl
mov
das
lret
dec
xor
xor
iret
dec
xchg
loopne
and
or
push
mov
loope
xchg
dec
push
xor
js
push
mov
das
cld
add
or
or
in
imul
cmpsl
test
push
aaa
pop
pop
jo
ret
push
adc
aaa
leave
fnstsw
out
cmp
pop
cmp
dec
stos
adc
xlat
push
push
xchg
mov
lret
inc
sbb
dec
cli
in
setg
mov
or
add
fwait
out
push
aaa
sbb
lahf
push
adc
xchg
vpunpckhbw
test
jp
push
in
scas
xchg
sub
cmp
shlb
sahf
idivb
out
and
xor
mov
in
sub
test
fwait
idiv
shll
push
jbe
fs
popf
shrl
and
ret
repnz
popa
out
xor
fadd
add
jle
sbb
test
inc
xor
or
xor
adc
mov
xchg
jmp
xchg
mov
iret
jno
frstor
xor
lods
orb
sub
cmpsl
roll
mov
jp
adc
stos
adc
repnz
data16
pop
stos
ja
leave
rcrl
add
add
sbb
mov
pop
xchg
and
mov
pushf
shrb
movsl
inc
fildll
push
mov
add
xchg
nop
nop
xor
iret
xchg
adc
stos
push
or
push
aas
leave
jge
lea
imul
pop
imul
test
jns
test
xor
insl
or
cmp
mov
dec
call
insl
pop
sub
aas
mov
adc
xor
ss
sub
fldcw
mov
outsl
popf
fcoml
adc
daa
popa
inc
fsub
mov
cld
pop
cmp
jle
mov
out
xchg
push
xchg
pushf
jne
ds
pop
cli
std
adc
cmp
mov
push
fs
loopne
cmpsb
add
jmp
lock
lods
adc
adc
mulb
push
fcom
add
gs
fcomps
push
xchg
push
popf
adc
xchg
jg
mov
jp
lretw
or
addr16
rolb
cwtl
mov
fcmovnb
in
test
insb
test
pop
mov
pop
jmp
xchg
mov
mov
fsubl
adc
iret
mov
clc
push
in
faddp
xchg
jno
icebp
cltd
dec
icebp
arpl
popa
data16
adc
lahf
sub
mov
push
inc
xchg
adc
mov
mov
imul
jae
ds
adc
or
les
ficompl
dec
adc
cmpsl
imulb
xchg
xchg
lahf
fdivrs
scas
jg
jp
loop
push
mov
out
sbb
js
pop
push
fcom
mov
jg
adc
sub
arpl
mov
bound
mov
out
test
aam
andl
popa
adc
push
push
mov
xlat
inc
and
pop
scas
pop
dec
push
adc
enter
call
pusha
stos
adc
or
lods
int
jae
cs
test
pop
push
mov
or
call
inc
push
mov
js
fwait
push
iret
xor
out
mov
xchg
mov
sti
jmp
sub
and
and
and
adc
test
cmp
outsb
lds
cwtl
pop
add
in
jns
and
xchg
fiaddl
scas
mov
or
imul
dec
shl
clc
jge
fisttpll
dec
sub
adc
and
ret
out
jp
lea
inc
pop
adc
sub
mov
pop
push
and
mov
cli
fstps
pop
add
adcl
shlb
movsb
enter
cli
xchg
mov
mov
mov
cmp
adc
xchg
adc
lret
inc
repnz
push
inc
das
ljmp
outsl
call
push
das
cmpsb
cli
push
in
fadd
dec
xor
cmp
jnp
or
loopne
sub
out
xchg
adc
shl
pusha
jae
ret
xchg
mov
mov
cmpb
jbe
mov
jae
push
pusha
cmp
dec
or
xchg
insb
out
dec
jne
scas
mov
lret
jne
pop
and
mov
pop
adc
mov
bound
add
test
and
jnp
inc
insb
das
jp
jmp
xor
or
jae
ljmp
or
xor
mov
hlt
shlb
jg
pop
call
xor
push
pop
data16
mov
lock
imul
scas
orl
mov
inc
mov
popf
cs
cmp
jae
ficoml
clc
cld
mov
call
in
mov
aad
mov
lock
fnstcw
lahf
jle
dec
jge
push
or
in
fimuls
ret
pop
fcomps
sbb
jb
jnp
movsb
xlat
stos
js
loope
mov
pushf
sti
pop
inc
rcrb
jns
push
icebp
mov
xchg
jb
cmp
aad
jmp
das
ret
add
jge
divl
add
bndldx
dec
test
les
repz
mov
outsl
jno
rcrb
jno
mov
push
fstps
jecxz
pop
mov
addl
xchg
ret
mov
pop
out
mov
mov
inc
mov
out
adc
dec
jo
push
xor
lods
mov
int3
filds
jno
mov
or
jo
dec
jne
adc
inc
jge
or
hlt
mov
xor
dec
jg
cmp
inc
pusha
jge
jne
mov
mov
pop
inc
outsl
inc
inc
mov
cltd
dec
cmc
xor
loopne
mov
mov
ss
shll
inc
pushf
lock
xor
ret
jae
in
testl
sbb
pop
mov
insl
mov
inc
adc
pop
aaa
loopne
les
pop
push
fidivs
test
jbe
cmpsb
inc
push
inc
gs
or
scas
ss
mov
or
lds
jg
cmp
pop
cmpb
addl
cltd
lret
jae
cmpb
leave
and
fcompl
adc
sbb
cld
rorl
in
pop
mov
add
and
movsbl
xchg
fsubrl
in
mov
hlt
arpl
or
fdivrl
popa
sti
rcrb
dec
add
inc
ret
int
sbb
loope
xchg
pop
pusha
mov
lcall
or
pushf
fsubl
sub
sub
and
cmpb
jecxz
pop
jge
adc
adc
or
loopne
lret
stos
dec
out
pop
dec
mov
and
mov
nop
in
rcrb
push
inc
call
repnz
mov
test
adc
mov
fiaddl
lods
fnstenv
mov
pushf
jae
jno
inc
add
mov
dec
jns
lods
mov
jne
mov
sub
inc
lea
cld
movsl
es
or
cmp
fdivp
sbb
or
pop
sub
cltd
scas
lcall
mov
pop
mov
dec
popf
mov
or
xchg
mov
int3
add
sub
mov
adc
lahf
lds
rcll
ds
mov
imul
aas
xor
push
shrl
add
push
int
and
jb
testb
fdivrs
cmp
jmp
adc
cmp
xchg
std
aad
out
aas
test
hlt
mov
jle
cli
insb
mov
shll
pop
mov
out
notl
xor
push
sbb
pmullw
push
mov
and
pop
hlt
jp
push
outsl
in
xor
pop
int
popf
xor
loope
sbb
sub
dec
xor
add
call
cmp
loope
or
mov
mov
jmp
sub
sbb
loopne
nop
loope
fs
lock
fs
rolb
push
mov
mov
pop
jg
pop
or
data16
loopne
pop
cld
movsb
inc
mov
mov
fimull
aam
pop
push
dec
out
lds
xchg
cmp
cmp
adc
fdivrl
cmpsl
test
rcrl
incl
mov
shrb
inc
cli
ret
mov
xor
xor
push
stc
test
out
insl
lret
inc
fstpt
xlat
stc
inc
rclb
adc
dec
jle
xor
stos
pusha
or
jae
call
cmpsl
adc
xsha256
cmpsb
adc
push
sbb
xorl
jge
shlb
xchg
sub
push
fildl
ret
out
enter
dec
cld
mov
xchg
int3
in
lds
jno
inc
adc
push
mov
fcoms
adc
in
sub
pop
mov
sub
data16
addl
test
out
mov
fstpl
cmp
mov
loop
cmpsb
lds
shlb
les
out
xchg
and
sbb
cltd
and
flds
mov
xchg
scas
cli
xchg
mov
add
cmp
int
mov
pop
sub
in
add
rorl
test
cmp
fdivr
fwait
mov
imul
cli
jle
dec
notl
xchg
fiadds
je
lahf
test
xor
xchg
xchg
pop
incb
fcomi
outsb
scas
xor
call
cmp
jb
inc
xor
mov
lds
inc
ret
and
arpl
lods
mov
jp
push
repz
add
sub
adc
sahf
adc
in
inc
lcall
xor
pop
orl
popf
cli
ja
xchg
fs
push
xor
daa
les
sbb
rorl
mov
aad
inc
addl
pop
sbb
sub
js
inc
pop
cmpsb
fbstp
cmpsl
mov
push
mov
add
sbb
adc
cmp
lret
push
xchg
mov
jmp
mov
add
sub
mov
sub
aas
inc
stos
sub
pop
ss
fwait
cmc
pushl
xor
dec
ja
jns
cmpsl
test
inc
pop
xchg
push
cmpsb
fsubrs
push
adc
mov
fwait
inc
in
mov
add
pop
stos
je
test
outsl
outsl
outsb
bts
nop
mov
mov
mov
testb
push
fisubrs
arpl
cmp
mov
js
or
loopne
clc
in
inc
sbb
outsl
pop
cmp
je
imul
mov
dec
jns
xor
mov
mov
xchg
fmull
popa
and
ret
mov
xlat
jecxz
test
pushf
add
sub
loope
sbb
filds
loop
sbb
add
loope
icebp
jo
and
les
sbb
push
xchg
xor
pusha
mov
icebp
out
mov
sti
fmulp
mov
xor
sbb
push
or
mov
std
push
nop
mov
sarb
add
mov
ss
movsl
sub
out
jmp
incl
je
or
dec
aad
push
ret
adc
pop
xchg
xchg
jo
mov
dec
mov
inc
sub
dec
adc
idivb
add
cmc
jle
aas
stos
mov
adcl
push
push
in
fwait
pushf
push
in
sub
jo
clc
jp
mov
xorb
push
in
mov
cmp
sub
mov
and
xor
cltd
mov
push
fdivl
inc
orb
enter
sub
fwait
mov
mov
xor
ret
in
mov
fdivrs
adc
fidivrl
mov
inc
mov
pusha
mov
mov
jmp
cmp
mov
sub
lods
cmpsl
sbb
fs
pop
cmovnp
les
jp
dec
loopne
fcoms
jae
add
stc
or
js
or
cmpsb
jle
mov
movsl
rclb
xchg
imul
in
xor
das
mov
ljmp
mov
dec
and
pop
xadd
mov
popa
es
or
call
fildll
aaa
mov
out
mov
mov
add
fists
mov
movsb
push
push
roll
sahf
das
push
aad
scas
rcr
fcmovnu
hlt
pop
aad
or
mov
inc
sbb
add
mov
cmpsb
push
xchg
lcall
mov
test
cmp
shrl
fildll
stc
xor
push
mov
dec
mov
lods
mov
jmp
sahf
or
jnp
mov
mov
mov
hlt
roll
lcall
xor
subb
popf
xchg
pop
imul
adc
stos
mov
sbb
gs
sbb
sub
mov
adc
pop
test
sbb
pop
sub
cmp
push
dec
cmp
pusha
xchg
ret
repnz
or
and
add
pop
jo
mov
in
adc
rcll
in
test
std
mov
int3
popa
pop
pop
in
mov
jge
rcrl
in
mov
sarb
xchg
daa
shlb
mov
or
scas
fiadds
lock
and
jne
in
mov
push
cwtl
je
scas
xor
mov
aas
and
push
xchg
pop
xchg
jmp
scas
pop
inc
cmp
lcall
cmpl
jge
insb
and
push
xor
xor
bound
and
xchg
adc
movb
mov
sbb
push
rorb
ds
mov
adc
add
orl
xor
stos
xor
jl
push
pusha
popa
pushf
inc
add
jne
xchg
call
adc
in
sbb
sub
lds
and
sbb
xchg
std
xor
sar
orb
out
and
testb
test
add
adc
xchg
xchg
push
pop
sbb
lea
or
imulb
call
jge
fwait
jbe
das
aaa
cli
push
push
adc
sbb
in
or
sbb
jg
cmpsl
jb
xor
cmp
inc
out
jp
in
pop
fbstp
mov
shlb
es
lcall
and
mov
pop
ror
xor
xchg
fs
push
insl
add
sarb
imul
xchg
std
lods
outsb
add
cmp
fcomip
inc
sti
js
cs
les
repnz
push
sub
aad
ljmp
xchg
cmp
mov
sub
sub
loop
cmp
jae
out
dec
popf
insb
imul
test
repz
sub
sarl
mov
test
iret
sub
jno
outsb
adc
xchg
mov
mov
out
mov
inc
fsub
sub
push
jecxz
push
orb
js
xor
xchg
cmpsb
inc
mov
sbb
inc
outsl
call
add
sbb
and
imul
mov
arpl
js
frstor
rorl
jge
and
mov
mov
push
notb
mov
push
add
inc
push
clc
outsl
jl
mov
ljmp
pop
in
out
jl
sbb
outsl
pop
dec
xchg
sub
cmpb
ret
jae
test
shlb
out
inc
add
jae
je
lods
sub
jl
jmp
mov
mov
sbb
stos
lret
add
into
pop
mov
jp
pop
in
roll
push
xor
mov
das
fnsave
stos
es
pusha
jo
mov
pop
lock
inc
ret
xchg
sbb
cmp
inc
fcos
test
call
pop
cwtl
fsub
lock
lods
or
dec
inc
fnsetpm(287
rcrb
lcall
mov
mov
jo
mov
call
or
mov
rolb
mov
loop
xchg
sub
in
mov
lahf
jmp
sarb
mov
dec
push
push
stos
fwait
pop
sti
ret
pop
dec
sub
pop
insl
scas
mov
ret
mov
imul
cmc
movsb
sub
jmp
mov
scas
arpl
pushf
or
inc
jl
pop
je
push
dec
cld
dec
xor
adc
adc
negl
pop
cs
and
xor
add
dec
shl
add
cmp
psrld
pushf
stos
inc
shl
scas
xchg
filds
mov
mov
dec
cmpb
jbe
xchg
scas
dec
and
std
jp
gs
into
jne
out
xor
pop
jle
pop
test
push
and
add
xor
push
cltd
icebp
push
popf
dec
test
decl
adc
shrb
jp
sbb
nop
lahf
jne
sbb
and
and
push
repz
push
pop
test
in
lahf
test
incl
xor
jns
repz
aam
and
in
pop
dec
push
dec
inc
stos
mov
pushf
subb
icebp
dec
sbb
add
adc
test
dec
icebp
pusha
and
xor
scas
imul
adc
imul
lret
and
repz
stc
mov
in
xchg
addr16
sbb
or
push
mov
xor
adc
xchg
subb
xchg
dec
insb
dec
mov
mov
sarb
gs
mov
xor
inc
ds
jae
jne
stos
pop
lcall
pop
mov
pop
jo
fiaddl
add
mov
cwtl
inc
push
mov
dec
movsl
pop
sbb
lcall
sti
push
add
pop
fcomps
iret
pop
or
rorl
mov
push
xor
nop
outsb
mov
push
and
bound
xchg
js
xor
dec
push
jg
sbb
push
xchg
and
or
repnz
inc
icebp
dec
imul
push
jg
push
in
mov
pop
sbb
sub
xor
mov
int3
adc
in
sbb
push
cmp
dec
jge
in
fs
or
pop
cmp
push
mov
in
adc
cmp
xchg
mov
or
inc
mov
rorb
cmc
cmp
ja
dec
mov
jg
arpl
inc
mov
push
lahf
mov
mov
sub
daa
fcoms
cltd
iret
clc
rcl
cmp
jo
inc
mov
pushf
inc
mov
mov
inc
adc
pop
adc
sbb
ret
sub
push
fsts
xlat
pop
jl
popa
gs
cli
sub
cmp
testb
insb
cmp
lods
push
jbe
sub
fs
dec
cmpsb
lods
mov
and
jnp
adc
push
or
mov
clc
dec
adc
pop
push
jns
or
sub
mov
push
imul
mov
add
ret
clc
mov
inc
loope,pn
imull
xlat
int3
mov
xor
sbb
scas
mov
mov
mov
cld
sbb
imul
jae
and
fcomps
mov
dec
pop
mov
hlt
inc
cltd
cs
mov
aam
movsl
jo
rcl
push
js
pop
call
mov
mov
xor
dec
sub
gs
movsl
lods
idivl
jbe
xorl
lods
jmp
cld
xchg
push
out
push
xor
sub
sahf
psrlw
or
add
neg
adc
sbb
sub
mov
test
movsb
daa
jns
testb
push
jb
insb
cmp
xchg
mov
lret
mov
xchg
mov
adc
mov
dec
imul
jo
mov
pop
add
pop
push
sbb
lds
rol
add
mov
cmp
jnp
sub
and
jg
mov
sbb
es
xchg
push
gs
pop
clc
push
imul
xchg
adc
mov
jge
sbb
mov
and
push
inc
cmp
loop
jne
fisubrs
in
daa
adc
sbbb
or
push
lea
jge
lods
lods
lcall
and
arpl
aad
xor
fstp
dec
mov
repz
testb
pop
fmull
xchg
mov
out
aad
adc
out
push
pusha
es
dec
pop
cs
add
mov
jl
daa
pop
mov
mov
lock
mov
fildl
sub
sub
cld
pushf
adc
insb
sbb
je
movsb
shr
rcr
push
add
pop
int3
sbb
push
call
add
daa
clc
or
dec
cli
dec
hlt
in
icebp
outsl
les
sub
push
push
jne
fwait
leave
mov
jo
pop
or
in
xchg
out
lret
in
pusha
outsb
pop
sbb
outsl
jle
lea
pop
enter
cmc
inc
pop
jae,pt
jo
pop
les
pop
pop
lock
movsl
adc
stc
xor
and
pop
cmp
sbb
jle
cmp
dec
xor
pop
out
inc
bound
cmp
rclb
leave
rclb
sbb
push
or
jl
add
mov
in
ror
int3
push
fmuls
jg
mov
or
sub
cli
mov
and
or
xor
in
aam
jbe
das
add
add
cld
pop
xor
jb
mov
and
hlt
mov
jae
inc
aas
cld
fstpt
pusha
repnz
in
ret
push
push
add
out
or
sbb
lock
fdivs
outsl
ror
daa
icebp
xchg
xor
dec
insl
pop
ljmp
jb
sub
pop
ret
lods
and
lret
pop
ljmp
scas
lea
mov
adc
rcl
mov
and
xchg
xlat
xchg
scas
xor
lret
jmp
rcr
mov
ret
sub
test
xchg
mov
jo
ret
push
jp
inc
pop
pop
ljmp
aad
shll
ss
nop
in
insl
pop
jbe
jg
xor
push
jecxz
mov
icebp
jns
jne
andl
int
fistpll
or
and
jno
push
or
xchg
dec
mov
clc
int3
mov
data16
in
cli
xor
sub
cmp
cs
pop
xor
dec
cmpsl
imul
push
ret
loope
cmp
push
imul
aaa
icebp
ud0
push
adc
push
aam
xchg
aas
pushf
push
push
cld
es
mov
xor
sbb
mov
mov
inc
mov
les
lret
cltd
dec
jb
out
jl
cwtl
imul
repnz
cld
cmpsl
sti
jb
in
mov
mov
jp
nop
pop
cmpsl
mov
dec
mov
xchg
aad
notb
xor
movsb
cs
sbb
dec
push
and
repnz
mov
fwait
and
iret
iret
insl
cli
enter
xchg
js
bound
or
push
outsb
aam
dec
jl
pushf
repz
mov
pushf
jnp
pop
ror
inc
hlt
xchg
call
js
outsb
or
mov
insb
dec
fnstsw
rcll
or
xchg
out
mov
sub
mov
pop
add
inc
and
pop
sbb
rcr
andb
mov
jle
add
icebp
ret
cmp
pop
loope
inc
xchg
sbbb
cmp
shl
repz
mov
inc
adc
fs
out
mov
push
cwtl
inc
loop
stos
ljmp
mov
call
data16
xchg
jne
out
pop
int3
pop
addr16
xlat
lcall
xchg
cmp
dec
fwait
mov
dec
adc
sub
jnp
mov
aas
xlat
mov
push
sti
sarb
pop
mov
shr
aam
pop
jnp
popa
sub
jle
inc
xor
mov
dec
rdtsc
packssdw
stos
adc
stos
loope
mov
dec
jno
inc
test
into
lods
cmpb
jo,pn
pop
and
fwait
push
mov
mov
jl
xlat
push
cmc
mov
lds
popa
sbb
into
cmc
lea
xor
pop
dec
cwtl
sbb
push
je
lds
imul
cmpsl
int
mov
aad
lock
lds
mov
adc
xchg
pop
inc
and
jns
mov
mov
popa
xchg
rorb
jae
inc
fmuls
xor
mov
pop
push
push
scas
and
loope
ret
jl
les
das
jno
lahf
rcll
add
sbb
out
dec
lahf
jg
jae
xor
das
jb
mov
pop
call
mov
aam
gs
dec
xchg
test
in
cmc
mov
pop
ja
outsb
sarb
lock
cwtl
js
mov
repz
gs
xor
mov
lds
add
xchg
mov
cltd
dec
jne
sub
sbb
movsb
lahf
stos
mov
add
xchg
sti
fsubs
jae
jno
popa
or
ffreep
and
xor
std
inc
shlb
pop
ret
adc
test
pop
mov
les
sbb
cmp
push
aad
add
xchg
xor
mov
sbb
je
sbb
push
push
lods
mov
fists
leave
std
cli
jae
cld
fucomip
rorb
jnp
int3
add
lock
lds
popl
push
hlt
mov
push
mov
lahf
scas
ret
insb
add
loopne
movb
xor
and
or
cmp
jecxz
movsl
fisttps
dec
cwtl
sbb
test
push
xor
push
scas
addr16
sub
xchg
and
push
cmpsb
insl
add
shrb
call
xor
rclb
mov
loope
loopne
int
or
bound
pushf
int3
repnz
inc
mov
out
mov
jle
adc
add
sub
pop
inc
lds
cmp
iret
and
lret
sahf
bound
or
jb
test
sub
cwtl
inc
clc
jle
in
jo
in
shrl
inc
push
lret
scas
aam
andb
stc
roll
lret
push
pop
xor
sbb
push
fstpl
mov
cmp
mov
inc
ljmp
cmp
sbb
out
pop
cmp
push
cs
mov
ret
mov
test
mov
lds
sub
pushf
cmc
dec
or
je
xor
jecxz
add
xchg
imulb
pop
jbe
xchg
sub
sbb
ret
int3
sub
sub
dec
mov
out
popa
outsl
loope
pop
sub
push
outsb
add
ret
sub
rolb
sub
jg
int
add
or
icebp
outsl
fwait
cmp
adc
cmp
mov
ljmp
jl
das
cmpsl
fsubl
in
or
push
pop
sbb
jl
ret
mov
mov
xor
shl
sbb
jae
jecxz
popf
sub
pop
sub
movsl
cmpsl
rcll
sub
rol
sbb
mov
aas
pop
cmc
out
mov
rclb
xchg
fidivrl
cmp
inc
adc
pop
push
out
cmp
xchg
lcall
adc
xor
and
push
outsb
or
hlt
push
push
cmp
cmp
dec
insl
cld
imul
popa
icebp
xor
cmpsl
inc
inc
aad
jp
ret
push
adc
inc
stc
mov
xchg
or
rcl
dec
loop
pop
fs
lret
jle
xchg
fsubl
add
push
test
testb
sbb
push
out
imul
push
mov
aaa
data16
fwait
adc
scas
lock
outsl
lods
adc
pop
jne
jo
jbe
loopne
mov
movb
push
ret
mov
pop
pop
cmp
pop
sub
pop
jbe
lods
mov
xchg
mov
adc
mov
movsb
rcll
mov
test
cmpsl
scas
mov
in
xchg
jb
in
lock
cmp
jb
aad
cmp
scas
lods
inc
les
jl
pop
bound
xorl
jnp
cmp
xor
enter
adc
jnp
sub
xchg
lods
daa
aad
les
pop
inc
xchg
fdiv
xchg
pusha
jp
adc
insb
inc
pmulhuw
sbb
or
dec
in
xor
sbb
fbld
cmp
xchg
jbe
mov
sti
jp
nop
out
popf
jl
xchg
js
and
popf
sar
sbb
icebp
sbb
pop
sbb
and
adc
push
push
imul
mov
out
inc
xchg
xchg
sub
into
repnz
sbb
movsl
das
lret
lods
push
add
mov
stc
adc
xor
je
loopne
ds
sub
xchg
or
enter
fmuls
hlt
and
ret
pop
aad
enter
lods
adc
sbb
dec
in
push
fs
rcrb
push
fidivs
sti
sbb
mov
mov
and
jbe
push
dec
addl
mov
into
dec
dec
out
adc
lret
jne
push
xchg
mov
push
jnp
ss
out
push
bswap
xchg
mov
out
push
mov
in
cmc
gs
imul
test
sti
mov
xor
mov
stos
add
fsubrs
nop
or
sarb
sub
xchg
xchg
ljmp
ret
pop
jne
push
shrb
cmp
ljmp
adc
jle
jg
insb
mov
rcr
call
es
stc
fwait
lcall
inc
test
sub
or
push
inc
mov
sub
int3
nop
cltd
inc
rcll
cmp
xlat
pop
lret
fwait
insl
out
cmp
test
movsl
into
xchg
and
jmp
out
jnp
stos
sub
inc
stos
rolb
or
jae
clc
stc
movsb
pop
and
in
sbb
inc
insb
add
not
enter
fsts
vpcmpgtb
shrb
or
push
push
jg
iret
dec
popa
bound
jg
pop
jmp
cmpsb
cs
movsl
xchg
and
inc
mov
outsb
fbstp
dec
dec
adc
stc
sahf
mov
inc
jmp
pop
clc
imul
cltd
jp
je
or
push
xchg
test
mov
mov
lahf
mov
jo
jmp
leave
xchg
xchg
cmc
sub
jae
shrb
les
sbb
test
mov
shll
push
fists
dec
mov
xor
fiaddl
pop
cmpl
mov
lcall
ljmp
xchg
shl
arpl
imul
push
aas
mov
dec
inc
xor
ljmp
not
aaa
mov
pop
outsb
cwtl
mov
dec
rcl
sbb
mov
fdivr
test
rcr
fnstcw
dec
xor
fs
dec
jmp
imul
test
inc
mov
aad
ret
sbb
jl
sub
int3
stos
cwtl
call
mov
mov
loopne
in
cmc
call
inc
imul
icebp
push
das
clc
sub
adc
test
mov
cmpsl
mov
cli
fistl
testl
push
cmpsl
mov
hlt
inc
push
aad
mov
pop
fnstcw
xchg
scas
outsl
add
sbb
pop
add
int3
stc
cmp
bound
push
or
add
push
push
mov
inc
lock
pop
loope,pt
push
rcrl
push
pop
nop
push
sub
notl
mov
mov
hlt
cmpsl
lcall
sbb
xor
jge
push
jns
mov
ret
adc
repnz
cli
xor
test
testl
outsl
cwtl
xchg
je
or
dec
fnsave
and
or
data16
mov
jle
add
mov
xchg
cmpsb
push
mov
mov
jne
mov
call
inc
andb
or
dec
cwtl
or
js
sbb
popa
or
jb
fwait
pusha
inc
cmpb
and
xchg
and
mov
push
std
gs
loope
bound
mov
cli
cmp
mov
stc
lret
lds
repz
mov
enter
std
pop
pop
mov
movsb
out
jle
nop
in
int
frstor
adc
call
call
cmpsl
scas
fdivrs
popf
shrb
mov
sub
imul
cmp
jecxz
xchg
or
outsl
dec
and
mov
int
addr16
repz
jnp
movsl
fs
xor
cmp
aad
mov
pop
inc
sbb
pop
insb
sub
or
dec
xchg
incl
add
mov
mov
jecxz
jns
shll
bound
push
bound
out
shlb
out
mov
nop
clc
jbe
imul
jnp
inc
fisttpl
daa
sbb
mov
daa
leave
gs
jl
popa
and
fldt
mov
hlt
mov
subb
cli
arpl
stc
shll
ss
jmp
adc
mov
rol
ss
pop
fwait
mov
lods
sarb
add
adc
or
dec
dec
lret
and
jbe
pusha
mov
adc
fidivrs
pop
incl
sbb
xchg
pop
mov
push
pushf
lods
fnstsw
fsts
cmp
or
xchg
mov
sbb
add
pop
out
or
insl
orb
push
add
vminpd
mov
mov
add
leave
cmp
in
push
mov
push
shl
hlt
fdivs
out
loop
lret
lods
add
enter
cwtd
jno
fldcw
inc
dec
stc
ljmp
test
stc
lret
cs
mov
ja
adc
xchg
add
pop
sbb
jae
cmp
icebp
xor
imul
mov
and
sbb
mov
fcompl
into
xor
lahf
outsl
mov
adc
nop
pop
adc
mov
xlat
inc
shr
mov
es
fsubs
xor
sarl
in
cmpsl
sbb
jae
iret
in
push
mov
cmc
xor
shrb
and
imul
fbld
lods
fcomip
rcl
sbb
jbe
test
mov
mov
mov
out
jl
mov
jno
mov
fbstp
pop
scas
jb
std
inc
inc
imul
jp
or
in
sbb
xchg
lahf
sbb
xchg
stos
sbb
jecxz
in
lahf
imul
dec
jbe
cld
jl
pop
shrb
mov
or
js
xchg
mov
pop
repnz
lcall
and
iret
out
cld
divb
je
dec
jbe
pop
inc
stos
aam
outsb
rorl
push
jnp
or
hlt
lock
imul
lret
lods
aas
xchg
into
lods
iret
in
rorl
loop
or
rolb
add
mov
imul
mul
push
pop
nop
dec
dec
sbb
pop
in
call
bound
mov
ss
fiadds
xchg
pop
notb
mov
push
cli
jnp
sbbl
or
and
and
mov
push
fistps
xor
leave
movsl
cmpsl
aas
je
mov
insb
arpl
sub
or
mov
js
xchg
jl
xchg
addr16
out
icebp
pop
or
mov
adc
cmpsl
shrb
sahf
loopne
jecxz
add
cltd
addr16
shl
jp
and
stc
les
sbb
adc
add
push
inc
pop
xor
cmp
js
mov
adc
dec
fs
jno
xor
dec
sbb
fnstcw
mov
or
inc
sbb
sub
jo
dec
pusha
and
lods
movsl
xor
xchg
push
push
add
jae
xchg
lret
cli
mov
xor
imul
xor
xchg
inc
adc
mov
scas
xchg
add
addr16
cs
mov
jbe
pop
insl
mov
sub
xchg
mov
sbb
jg
inc
pop
sbb
pop
jne
jecxz
pop
repz
ret
dec
fstp
in
cmpsl
repz
fiadds
mov
cmp
sbb
addr16
mov
jno
mov
icebp
jg
cmpsb
fcmovnbe
mov
mov
xchg
inc
mov
int3
aam
dec
sti
cmp
fildll
cmc
daa
push
sub
adc
gs
sub
jmp
bound
jmp
lds
jl
push
mov
out
mov
sbb
int
lret
in
cmp
xchg
cmp
stc
loope
aad
push
dec
jno
pop
sti
es
out
mov
in
push
les
push
mov
lret
sbb
cli
and
nop
mov
mov
loopne
lcall
inc
fstp
psubsb
fcmovu
mov
inc
clc
out
push
int3
ljmp
scas
in
push
mov
mov
sub
mov
gs
stos
pushf
iret
xor
push
dec
jl
cmc
and
adc
in
mov
push
xor
loopne
push
or
faddl
sub
dec
mov
xchg
inc
push
push
add
xchg
test
sub
push
int
stc
in
and
sub
or
jb
xor
lcall
inc
jbe
add
mov
xorb
lock
scas
cmp
lods
in
push
adc
push
push
jbe
and
or
xor
stos
cmp
scas
jno
sub
jl
inc
xchg
ljmp
leave
mov
jp
jmp
adc
mov
pop
pop
mov
sbb
testl
es
call
es
xchg
fldcw
movswl
pop
pop
cmp
mov
pop
aaa
xor
push
cmp
sub
mov
test
dec
push
sub
jge
sbb
sbb
iret
mov
sub
xchg
shl
outsb
push
xchg
jae
mov
stc
scas
and
leave
fdivp
cmpsl
loopne
fildll
ss
sbb
mov
fists
jae
xchg
imul
mov
mov
out
pop
or
cmp
fildll
inc
out
cld
cmpsb
push
leave
jecxz
dec
or
push
icebp
in
jae
out
adc
sub
out
dec
sub
mov
add
adc
xor
dec
fwait
ss
enter
mov
jbe
rol
xchg
jo
xchg
pop
insb
je,pn
test
negl
nop
popa
stos
lods
mov
pusha
add
or
movsb
int3
loopne
jne
dec
fsubr
ds
lods
push
stc
adc
rcrb
jp
sub
shll
iret
fmuls
mov
mov
lea
fs
xlat
inc
sbb
mov
std
push
mov
out
imul
insb
stc
cmp
pop
pop
call
push
push
cmpsb
orb
fistl
mov
xchg
std
stc
sub
and
ror
sub
add
sarb
fnstenv
aad
push
push
jp
inc
in
test
sub
rcll
mov
push
sahf
sarb
aaa
dec
into
ret
sbb
aaa
fiadds
xlat
mov
jmp
cmpl
push
push
xchg
inc
ret
pop
mov
sbb
enter
mov
mov
add
lahf
cmp
jl
cmc
lcall
ljmp
fincstp
xor
shl
or
xor
mov
andb
cmc
cmp
add
lret
xor
pop
cmp
aad
dec
jmp
cmc
popf
loop
and
sahf
or
push
jnp
sahf
sub
sub
mov
sub
mov
mov
shll
lcall
leave
dec
shl
insb
inc
inc
flds
inc
or
adc
adc
pop
out
dec
enter
xlat
xor
xchg
jmp
xchg
rcrb
lcall
jge
es
mov
jmp
aad
push
cmp
jmp
add
call
cmpsl
lock
add
test
test
les
cli
cmp
aaa
pop
adc
test
add
ljmp
js
xchg
sub
cwtl
add
das
add
xchg
imul
xchg
scas
lcall
bound
or
adc
and
cmp
jbe
jl
outsl
sbb
sahf
cmp
xchg
push
pop
insl
inc
add
jp
fldenv
xchg
ds
and
jge
add
xchg
cltd
xchg
loopne
mov
ret
orb
push
adc
xchg
push
nop
cltd
mov
sbb
stc
lods
out
or
pop
lods
or
mov
into
mov
fidivs
xor
or
lea
push
pop
out
and
call
paddsw
arpl
js
fmuls
stc
or
inc
aad
in
arpl
shl
movsb
sub
add
xchg
cmp
jb
jae
pusha
jl
xor
sub
leave
mov
adc
popa
mov
scas
int
mov
mov
fisubrs
pop
js
cmp
xor
test
test
push
push
cmp
addr16
lea
mov
mov
icebp
cmp
outsb
cmp
xor
xor
arpl
xchg
inc
ljmp
and
dec
loope
sub
rcl
arpl
xor
cmp
mov
cmp
and
popf
out
in
jle
cmpsb
test
in
dec
push
pop
xchg
std
lret
int
push
mov
mov
or
jmp
loop
inc
xchg
lret
dec
and
fcmovnu
push
pushf
je
adc
jnp
sub
inc
mull
push
push
dec
stos
ja
mov
stos
aam
xchg
dec
fwait
jl
lcall
data16
pop
out
ret
xor
out
cwtl
or
popa
movsl
xchg
fisttpl
cwtl
arpl
push
push
pop
lock
sbb
xor
xchg
mov
mov
or
push
or
jmp
xchg
bound
fistpl
cmp
sbb
shlb
xchg
pop
cmp
lret
jle
ds
jo
inc
fld1
loope
ror
std
cmp
dec
xchg
out
pop
mov
sub
xlat
call
dec
ss
movsb
mov
lret
loop
pop
in
xchg
aas
popf
scas
rol
mov
fldt
sbb
add
js
push
in
mov
adc
inc
mov
in
aas
xor
icebp
push
movsb
lea
lss
scas
pop
cmpsb
dec
stos
dec
and
mov
in
or
pop
add
mov
pop
sbb
xor
mov
test
clc
arpl
aad
dec
nop
aam
mov
pusha
arpl
stc
xchg
loope
mov
test
fs
xor
sbb
xchg
int3
outsb
adcl
sbb
jo
scas
hlt
mov
add
mov
hlt
mov
jmp
or
mov
pop
aad
test
inc
jge
sti
inc
gs
rcll
daa
in
adc
lock
ljmp
aaa
incl
sub
or
sbb
sub
xchg
fadds
push
sub
pushf
and
jbe
pop
xor
aad
cmp
in
lea
inc
lea
xchg
fmull
int
repnz
add
xchg
or
shlb
jbe
pushf
and
aad
xchg
sbb
pop
and
std
adc
lret
sub
mov
xor
sbb
fwait
shlb
inc
ja
sub
int3
mov
inc
adc
sbb
dec
je
scas
adc
jns
in
pushf
cmpsb
inc
adc
adc
rcl
mov
shl
int
adc
outsl
pusha
in
jae
cmp
nop
add
push
push
and
cli
cmpsb
xlat
xor
pop
xor
test
imulb
or
jl
or
pop
jp
push
xchg
fwait
sbb
mov
inc
mov
in
push
pop
cwtl
lods
mov
xchg
cmpsb
arpl
jecxz
mov
mov
mov
push
adc
popa
mov
repz
jae
sbb
dec
test
fsubp
hlt
enter
dec
sbb
add
subl
test
push
in
sbb
sub
or
lea
xchg
mov
and
fisubs
adc
lret
add
push
and
ljmp
fstpl
add
xor
sbbb
aaa
sub
dec
sub
add
loope
ljmp
out
jge
dec
pop
jge
pop
pusha
outsb
inc
or
pop
lds
adc
mov
fisubrs
icebp
push
jle
cld
adc
mov
xchg
lahf
pop
add
ret
sti
enter
arpl
dec
push
adc
mov
incb
mov
xor
cmp
popl
popa
dec
fldcw
add
adc
mov
into
jo
mov
gs
sub
xchg
inc
addr16
fcoml
int
ret
in
sub
arpl
jmp
inc
fcmovnu
daa
rcll
cmc
mov
dec
cmp
in
xor
xlat
and
es
mov
xor
inc
dec
adc
jbe
test
lcall
pop
filds
lea
outsb
mov
test
jge
scas
flds
mov
sub
sti
and
inc
lret
push
and
mov
jle
pop
inc
in
or
adc
filds
sbb
mov
insl
in
lret
inc
sub
push
dec
cmp
lea
pop
mov
shlb
mov
or
mov
sbb
pop
lds
aad
lcall
adc
lock
mov
aad
cmpsb
hlt
jne
cmp
sti
mov
add
in
mov
mov
out
fidivl
xor
cwtl
mov
add
out
xchg
fcmovb
jl
push
adc
mov
push
scas
movsl
mov
jo
popa
sbb
lock
adc
in
icebp
adc
sti
popf
dec
xchg
jae
jbe
lea
xor
clc
clc
mov
mov
adcl
add
mov
dec
fwait
pop
ljmp
popf
inc
repnz
push
mov
jae
cmpsb
xchg
and
clc
scas
adc
inc
imul
test
mov
mov
in
leave
test
iret
aaa
out
push
dec
aad
test
jecxz
fdivrs
jmp
test
mov
sahf
or
fsubrs
and
mov
icebp
loopne
push
cmpsb
push
repz
dec
pop
add
rcl
dec
mov
lock
es
loop
pop
mov
out
jae
jmp
shl
dec
push
xor
push
xchg
scas
mov
mov
or
lods
outsl
daa
or
add
sub
xor
inc
test
xor
xor
imul
movsb
xor
adc
adc
dec
into
lret
rorl
xchg
mov
aam
cld
fdivrl
jecxz
andb
sbb
lret
mov
lods
lret
aaa
mov
bound
jecxz
daa
dec
je
add
cmc
lcall
shlb
mov
stos
das
lock
lods
pop
cmp
js
pusha
adc
adc
test
sub
rolb
push
and
jbe
push
push
inc
mov
bswap
dec
push
ljmp
in
aas
lods
jp
add
push
xor
add
stos
push
nop
lret
cmp
test
xchg
test
add
orl
sbb
cmpsl
xchg
leave
arpl
xlat
je
fidivrl
xchg
test
ja
push
cmp
in
stc
repz
sar
fsts
and
dec
pop
jne
sbbl
fwait
sti
mov
xchg
pop
punpckhwd
stc
loope
adc
or
ret
add
mov
cmp
popf
dec
xchg
call
xor
cmpsb
sti
mov
int3
mov
cmp
daa
repnz
mov
dec
popa
ja
inc
mov
jmp
shll
mov
xchg
stos
dec
data16
jecxz
fsubl
xchg
sub
bound
cmp
mov
ja
call
and
xchg
ret
push
outsb
clc
sahf
pop
pop
cs
xchg
je
icebp
movsb
outsb
lahf
fcmovu
dec
xchg
xor
push
xor
fisttpl
stos
cli
mov
xor
add
movsb
mov
xor
test
addr16
loop
fs
fadds
or
add
lods
cmp
test
test
push
repz
pop
mov
loope
stos
roll
cmp
cmp
cmp
dec
add
cld
or
jmp
and
stos
push
out
out
mov
lret
xor
mov
cmp
or
jecxz
shlb
cmp
addr16
sbb
fldt
lds
jnp
pop
xchg
rorl
adc
mov
popf
shrl
jnp
in
mov
xor
mov
dec
inc
mov
jnp
addr16
sub
cmp
out
sbb
xor
sti
push
sbb
cmp
adc
cmp
lds
imul
xor
stc
sub
pop
mov
inc
mov
lock
adc
pushf
lds
lea
sbb
clc
in
mov
lock
mov
cmpsl
out
shr
insb
pop
cwtl
sub
add
ss
rorb
pop
mov
into
shll
imul
mov
push
mov
fwait
daa
into
xor
das
enter
rcr
or
or
xor
test
int3
cwtl
add
lea
dec
and
lods
std
inc
dec
imul
add
popa
fcompl
mov
in
sti
and
icebp
or
call
cmp
roll
loop
push
pop
push
repnz
lods
mov
mov
sub
fmuls
nop
xchg
cmp
out
into
and
imul
ret
xor
push
push
jnp
mov
std
xor
inc
xchg
jmp
in
in
enter
pushf
jmp
ret
mov
fistpl
push
fdivrl
mov
jmp
push
mov
mov
xchg
dec
jp
testl
test
cmp
scas
call
ret
or
cmp
cmp
ret
popa
pop
fidivl
ss
test
xorl
or
aas
xlat
sbbl
in
icebp
jo
xor
adc
or
push
ljmp
stc
clc
dec
inc
enter
and
sbb
out
les
int3
sub
lcall
arpl
sbb
mov
mov
and
jge
in
inc
std
es
sub
lock
shrl
xchg
mov
mov
mov
inc
and
lahf
mov
int
or
sub
movsl
fs
push
loopne
mov
in
into
repz
sbb
pop
mov
call
test
inc
hlt
xchg
sub
push
pop
xchg
and
call
cmc
mov
lret
mov
addr16
lret
xor
mov
mov
sbb
sub
mov
test
mov
ds
shlb
sbb
lret
sbb
add
jbe
pop
pop
sub
mov
dec
add
pop
gs
xor
mov
xchg
repnz
movsb
nop
fwait
out
cli
loopne
mov
fiaddl
and
subl
fstps
je
and
or
xor
xor
xchg
scas
add
xchg
jge
add
inc
cmp
jbe
pop
pusha
fcoml
push
aas
adc
mov
push
add
mov
sbb
xor
push
outsl
clc
iret
test
and
loop
insl
arpl
in
jmp
lcall
movsl
fsubrl
lcall
mov
movsb
sbb
dec
je
aas
xlat
mov
scas
jae
jp
ret
imul
and
repnz
and
cs
in
insl
jns
jae
leave
out
pop
insl
dec
jne
xor
sub
repz
stos
cmp
and
dec
lods
call
mov
sub
inc
fwait
push
or
lret
repz
sbb
sub
pop
xor
pop
cmc
push
push
inc
sub
xor
cmp
test
push
mov
mov
insb
decl
cld
and
mov
outsb
fsubr
dec
dec
adc
mov
pushf
fcoml
insl
mov
xor
cmp
inc
push
popl
pop
gs
mov
mov
sbb
xchg
into
loop
xor
aad
and
mov
and
sub
jmp
push
lods
add
cmp
jo
dec
in
push
sub
mov
idivl
clc
mov
sahf
leave
in
xchg
cli
jle
inc
mov
vmovaps
dec
mov
and
pop
mov
in
lcall
cmpb
lahf
xlat
das
push
lcall
push
sbbl
mov
mov
push
loope
and
outsb
enter
jmp
iret
xchg
xchg
cli
pop
mov
shl
pop
jae
mov
das
fisttpl
sarl
mov
ja
loop
f2xm1
cmc
sahf
lret
and
mov
sub
cs
hlt
outsb
mov
xchg
data16
jg
inc
fcoms
mov
inc
lock
dec
dec
pop
in
xorb
test
pop
movsb
mov
mov
add
xor
daa
cmp
mov
movsb
adc
in
mov
cmp
ss
cmp
push
cmp
mov
mov
xlat
jnp
dec
hlt
pop
add
roll
sub
pop
int
fmull
jnp
push
cmp
imul
pushf
je
stos
jl
add
clc
ljmp
addr16
fwait
sbb
adc
mov
xor
xchg
add
ljmp
test
inc
add
in
pop
pop
cld
ja
mov
inc
rorl
xor
mov
pop
jg
and
aad
sub
pop
mov
in
push
in
inc
xlat
out
cmp
sbb
mov
mov
xlat
js
sbb
lock
sbb
xor
mov
icebp
leave
mov
push
sbb
shlb
mov
and
mov
jb
mov
xorb
jbe
cmpsl
aam
fldcw
pushf
add
or
insb
das
inc
and
and
lcall
js
test
inc
dec
subb
cmp
movq
and
loopne
and
lret
popf
lock
pop
ljmp
adc
icebp
fimull
inc
cmp
fimuls
xchg
mov
adc
hlt
add
xchg
rol
xor
add
lds
inc
sub
cmp
inc
cmc
test
or
mov
mov
popf
mov
pop
pop
incl
ss
lret
aas
fidivs
daa
add
ret
fimull
scas
xor
addr16
add
adcb
pop
fadds
stos
iret
js
je
imul
jp
cmpsb
into
cmp
dec
pop
push
push
pop
test
fs
loope
add
adc
inc
xor
lds
repz
inc
imul
and
jne
repnz
xchg
shrb
mov
cwtl
cld
popf
xlat
in
mov
fsubs
push
push
add
or
sbb
sbb
loop
ret
lcall
sub
insl
rorb
outsb
sub
mov
cmp
int3
movsb
lods
loop
add
sbb
mov
clc
push
xor
cld
cmp
cmp
jno
pushl
in
lods
scas
std
pop
addr16
dec
fs
pop
pop
pop
lea
into
mov
inc
xchg
add
gs
jl
lret
sub
push
pop
and
leave
jle
xchg
mov
cmp
mov
xchg
inc
sbb
int
pop
inc
outsb
dec
pop
jle
popf
sbb
mov
je
cwtl
sub
pusha
aaa
mov
lret
fcoml
scas
fucomp
dec
sbb
sti
and
movsl
jbe
int
xor
outsl
loopne
sbb
xchg
adc
push
mov
xchg
imul
jbe
mov
and
mov
lahf
mov
jp
jecxz
adc
mov
popf
add
mov
inc
jne
shlb
fistl
imul
test
and
xor
lods
imul
fimull
inc
mov
ja
aaa
sub
pop
push
movsb
out
orl
cmp
cmpsb
pop
add
adc
xor
lds
repnz
das
mov
daa
push
inc
cmc
pop
xchg
js
mov
in
aad
xchg
push
push
push
pop
adc
iret
dec
sahf
jae
add
cld
into
pop
cld
and
vaddsubps
in
int3
xchg
dec
lea
mov
cmp
cwtl
sbb
scas
lret
lock
daa
iret
mov
fsubl
xor
bnd
call
clc
test
and
testb
xchg
loope
and
cmp
test
add
or
xor
xor
push
pusha
push
xchg
inc
decl
mov
push
rclb
push
adc
sbb
fst
xchg
pusha
repz
dec
repz
adc
xor
pop
cld
cmp
aaa
adc
shl
inc
cmpb
mov
jl
xor
mov
sbb
jp
cli
pop
and
and
imul
ss
dec
cmc
push
xchg
dec
aaa
or
and
test
inc
dec
and
addr16
and
test
mulb
cmp
sbb
add
enter
mov
nop
sbb
mov
jp
hlt
ja
popa
fiadds
mov
clc
lret
dec
dec
neg
sbb
or
cmp
and
sbb
mov
sbb
ficoms
add
enter
mov
mov
sub
stos
dec
popf
je
in
loopne
repnz
adc
dec
es
or
and
lods
pop
cmp
pop
cmp
icebp
enter
sbb
sub
rcrl
mov
movsb
mov
push
dec
xor
pusha
scas
sbb
data16
cwtl
out
fisttpll
dec
mov
and
sub
jne
andb
jle
movsl
addr16
pop
and
dec
pop
ja
push
push
inc
or
sbb
push
add
mov
xchg
xor
and
mov
sti
lea
arpl
inc
adc
mulb
notb
jl
and
inc
sbb
and
rcll
shlb
add
movsb
cmp
jecxz
pop
adc
and
push
iret
pop
xor
cs
daa
test
addr16
lds
scas
and
or
jp
xor
xor
repnz
inc
out
shl
jge
mov
mov
cmpsl
inc
cwtl
das
xor
pop
out
leave
inc
jl
scas
jg
arpl
fwait
insb
mov
dec
sbb
xor
lret
inc
imul
push
and
insb
adc
lds
jo
jmp
ja
shrb
mov
push
out
sbb
sub
gs
jnp
ffree
sbb
in
lret
add
movsb
adc
imul
test
fstpt
mov
test
pop
jno
cli
int
lea
jo
in
int3
icebp
inc
outsl
out
pop
mov
sub
cmp
loopne
lret
fldcw
fmul
movsl
push
cmp
stos
clc
imul
xchg
and
dec
gs
mov
xchg
inc
inc
gs
sbb
mov
mov
test
scas
addr16
add
push
dec
loop
push
imul
add
movsl
mov
cltd
scas
in
xor
pop
imul
adc
lcall
add
dec
and
insb
mov
sahf
or
and
cs
lcall
xor
xor
addl
aas
jo
shlb
cmp
mov
sbb
fadds
int3
scas
imul
loope
into
movb
lret
cs
lret
mov
iret
pop
adc
in
mov
sbb
or
xor
mov
push
xor
mov
stos
js
fcom
xchg
inc
int3
xor
mov
inc
sbb
sbb
xor
push
shl
pop
bound
push
jne
test
dec
cwtl
in
lret
test
test
sbb
jb
jl
dec
xor
addr16
mov
cmpsb
loop
lock
iret
dec
stc
and
divl
out
lods
xchg
jecxz
inc
xchg
push
js
xor
inc
dec
and
push
es
mov
adc
movsl
xchg
imul
loopnew
jo
jae
dec
sahf
sub
adc
mov
data16
repnz
xchg
sub
pop
sbb
add
leave
fldt
sbb
aaa
pop
dec
mov
dec
outsb
pop
mov
iret
mov
push
xor
sbb
aaa
dec
inc
add
fs
mov
aam
cmp
mov
frstor
imul
pop
lock
pop
mov
pop
out
adcb
add
pop
outsb
push
je
fdivp
push
fidivs
sub
scas
or
jo
gs
out
rorb
xlat
mov
stos
stc
lahf
scas
repz
out
clc
jle
stc
sub
pop
lret
movsb
xor
sub
push
jl
sbb
cld
inc
fiadds
ret
outsb
daa
mov
and
mov
jmp
push
xchg
and
cmp
repz
jbe
pop
add
lock
adc
int3
cmp
pop
loopne
fbstp
ss
inc
outsl
add
rolb
in
stos
push
fidivs
scas
add
adc
mov
jg
xchg
fcom
xor
stos
sub
arpl
outsl
iret
inc
bnd
in
mov
enter
xor
mov
je
out
scas
repz
or
and
ds
xchg
xlat
popf
sbb
sbb
and
arpl
enter
sbb
cmp
movsb
dec
daa
mov
inc
jbe
sarl
push
imul
xor
cmp
shlb
mov
push
out
and
mov
sbb
or
mov
into
popf
std
jb
out
loopne
ja
or
fldl
enter
test
mov
xlat
jl
stos
movsb
pop
mov
push
inc
push
pop
add
clc
enter
mov
mov
mov
out
sbb
loope
outsb
cmp
aam
xor
andb
or
add
mov
out
xor
jbe
insl
dec
cmp
cmp
test
inc
test
std
pop
push
jns
mov
pusha
jge
movsb
pop
lahf
sbb
xchg
data16
xchg
fcmovbe
xchg
aas
and
pop
dec
test
xor
jmp
data16
adc
enter
outsl
and
pop
mov
push
xchg
dec
push
adc
cmp
sbb
imull
daa
mov
enter
hlt
idiv
xchg
push
and
or
inc
mov
xchg
mov
push
test
aam
cmpsl
dec
test
pop
loope
adc
fldl
fnstsw
and
test
roll
test
inc
es
pop
mov
pop
lcall
jle
test
sbb
or
dec
jnp
xchg
jmp
and
push
jge
inc
sbb
mov
test
cmpsl
pop
jbe
pushl
push
shl
lods
xchg
xchg
jnp
xchg
dec
jbe
or
sbb
jge
sub
sahf
and
inc
xchg
lods
pop
int
add
cltd
cmp
jno
mov
xchg
sub
mov
mov
sub
movsl
xorl
fs
mov
mov
cmp
pop
cld
movsb
inc
xor
adc
test
bound
cltd
lds
in
add
cmp
mov
dec
and
lds
and
adc
sub
lock
int
jge
gs
pusha
pop
addr16
jnp
aas
orl
test
dec
add
lods
ret
in
int
aaa
shlb
mov
dec
dec
leave
sbb
push
bound
mov
jno
add
scas
mov
push
pop
lret
sbb
enter
or
in
jp
repnz
mov
push
mov
inc
sbb
push
adc
loop
mov
mov
mov
xchg
shl
add
adc
and
popa
sub
fldt
sbb
out
stc
dec
ss
gs
pop
jno
mov
ljmp
mov
psrld
push
mov
jmp
je
idivb
scas
or
loopne
out
jbe
fadd
sbb
call
nop
lea
mov
mov
cmp
jae
dec
mov
dec
fistpl
inc
add
dec
jge
jbe
inc
jge
push
imul
xchg
jge
mov
bound
mov
cmp
popa
rcrl
inc
fnstcw
sahf
pop
xchg
out
fstl
sahf
sbb
push
inc
sbb
xchg
xchg
xorb
cmpsb
insb
mov
fwait
bound
sbb
pop
test
xor
rcrb
fisttpll
mov
mov
mov
fwait
xor
push
lcall
stc
dec
int
dec
stos
inc
fistpll
ffree
push
lret
bnd
negl
cmpsb
pop
bound
int
fsubs
out
pop
sbb
sbb
lret
inc
xchg
cmpsl
rdmsr
push
xor
cli
dec
test
jmp
ja
repz
fisubs
ljmp
mov
jb
mov
es
aas
cs
into
mov
fiaddl
mov
cs
ja
dec
jge
and
xchg
fcmovnbe
cmc
loope
xchg
fmul
cmp
test
and
hlt
bound
push
fadd
mov
xchg
jecxz
loopne
xchg
nop
or
lret
and
dec
push
mov
xor
pop
cmp
jle
movsl
cmp
decb
ja
add
mov
leave
xchg
cmp
bnd
and
inc
nop
loopne
lds
jg
popf
daa
enter
fistps
xchg
pop
push
push
iret
in
hlt
or
or
dec
int3
int
test
subl
imul
dec
pop
inc
insl
or
daa
jnp
jns
jae
adc
pop
sarb
push
and
mov
mov
jp
jle
push
rolb
mov
push
cmp
xchg
push
inc
pop
mov
jmp
cmc
lods
in
jge
jno
push
and
stos
xor
bndldx
sub
push
push
ss
adcb
sbb
xchg
inc
rcll
sbb
popf
jle
les
jp
repz
cmp
lcall
orb
xor
xor
xor
dec
xor
inc
sbb
aaa
negb
cmp
jbe
sbb
ds
jle
in
or
jno
scas
decb
and
out
add
xor
inc
outsb
jno
add
dec
or
movsl
jmp
nop
push
pop
hlt
pop
inc
lock
cltd
ss
stc
rclb
pop
add
stos
xlat
mov
lret
into
and
sbb
xor
shrl
cmpsb
push
repz
addr16
ja
shll
pop
cmp
or
sbb
ljmp
mov
test
dec
mov
xor
cmp
rorb
test
aad
popa
divl
aaa
mov
adc
sarb
xchg
inc
in
push
sbb
sahf
xor
test
cmc
xchg
xchg
inc
ds
leave
out
push
xchg
sub
mov
mov
jg
mov
mov
les
mov
repnz
lods
jae
fwait
lea
xlat
mov
mov
lods
cmp
sub
iret
sub
mov
pop
jnp
fnsave
jns
pop
xor
mov
mov
movsl
mov
adc
ror
fadds
xchg
jb
aad
jae
loope
mov
movsl
push
mov
pop
icebp
jecxz
iret
xlat
jmp
arpl
mov
sahf
ret
shlb
sbb
inc
lods
insb
jle
jge
or
cmpsb
inc
in
jl
aaa
mov
ud1
stos
cmpl
xor
and
pop
jne
bound
cmp
push
cwtl
inc
fcoml
ficomps
xor
out
das
mov
pop
fwait
ljmp
adc
xchg
out
lahf
data16
aad
sbb
jecxz
jb
lahf
out
or
lcall
add
and
inc
xchg
mov
gs
cld
or
push
pop
call
ret
jge
xchg
mov
in
xchg
pop
imul
lahf
mov
jb
repz
inc
mov
jl
inc
movsb
shll
or
jne
addr16
das
ljmp
add
and
stos
cmpl
cs
cmp
pusha
sub
adc
ret
sahf
jno
int
lods
sbb
fimuls
sbb
ret
decl
cld
movsb
sbb
xchg
imul
lea
fwait
cmpsb
sub
push
cmp
or
mov
dec
and
lock
add
xchg
pusha
pusha
aaa
fs
out
pop
add
jnp
xchg
mov
cltd
jmp
add
xchg
sbb
int3
jns
aad
fcmovne
and
shrb
mov
jb
aam
in
and
cmp
std
push
dec
or
xchg
dec
sub
adcb
lret
push
iret
mov
sti
mov
add
fimull
sub
in
sbb
push
movsl
loopne
xchg
mov
fucomp
lods
dec
daa
inc
inc
ret
xchg
movsl
mov
sbbl
mov
hlt
mov
and
xor
cmp
out
shlb
sbb
mov
sbb
xor
inc
pop
or
mov
pop
cwtl
dec
bound
lcall
sbb
push
or
ss
addr16
pushf
in
jnp
cltd
xchg
movsb
or
mov
lret
fdivl
hlt
and
jg
lcall
test
mov
mov
adc
and
popl
xor
scas
pop
xchg
or
fimull
inc
or
in
cmp
scas
inc
jb
scas
adc
push
aaa
pusha
dec
ret
or
insl
jecxz
push
pop
mov
pop
fcompl
inc
leave
or
pop
fdiv
add
mov
xchg
popa
sub
testl
add
or
dec
lahf
push
mov
arpl
lds
shrl
inc
mov
jl
leave
pushf
and
sub
mov
ret
jns
dec
imul
xchg
sbb
sub
jno
jg
shll
outsl
lahf
mov
push
cld
in
decl
xor
pop
imul
popf
dec
mov
scas
mov
gs
mov
jae
rcrl
dec
movb
icebp
dec
rclb
pop
mov
jmp
mov
add
aad
loop
mov
lods
or
call
lar
jmp
bound
in
scas
mov
adc
incl
xor
push
push
pop
xchg
leave
lret
xchg
inc
push
push
mov
arpl
dec
push
loope
cmp
int
jo
mov
or
pop
cwtl
int3
xchg
fstpt
xchg
jnp
mov
or
push
xor
ret
mov
shlb
insb
mov
lahf
xor
pusha
repz
jbe
sbb
lock
daa
outsb
jne
nop
or
repz
dec
sub
movb
inc
cmp
shll
out
adc
into
or
sbb
xchg
ret
mov
sbb
pushf
cmp
cmpb
pop
aaa
bswap
adc
lcall
and
std
arpl
push
fwait
es
or
rcrl
gs
aad
sbb
sub
cmpsl
mov
clc
lret
jmp
adcb
jmp
mov
xor
aas
outsb
repz
mov
sbbl
aas
jb
add
jg
jo
push
test
push
test
lds
pushf
push
jo
push
add
fdivrl
mov
mov
xor
mov
cmpsl
mov
sbb
jle
push
pmaxub
nop
cmp
sbb
jle
cmp
adc
add
xchg
xlat
xor
rcrb
cltd
jge
lds
adc
test
loope
lods
mov
sbb
addr16
mov
cmp
cmp
lcall
stc
in
lock
xchg
iret
in
pop
movb
xchg
xchg
push
inc
add
mov
sub
dec
ror
je
cmc
sub
cwtl
xchg
sbb
mov
fimull
or
dec
cld
jns
inc
push
push
pop
sahf
pop
std
mov
pushf
pop
push
xchg
inc
inc
xchg
inc
pushf
dec
and
dec
loop
mov
in
lea
mov
movsb
mov
or
or
mov
inc
cmp
cli
dec
pop
sbb
adc
jmp
dec
in
je
push
push
aas
stc
pop
cmovo
jne
addr16
scas
stos
arpl
push
push
insb
scas
push
mov
or
sbb
je
pop
pop
scas
jbe
cmp
mov
cmp
pop
repnz
mov
hlt
push
mov
insl
add
out
popf
ret
dec
jne
addl
sbb
gs
orb
jae
sub
stc
add
repz
lfence
sbb
daa
mov
rcl
xchg
std
sbb
std
adcb
inc
lods
roll
mov
mov
sub
dec
js
mov
and
jnp
xchg
mov
mov
xchg
sbbl
add
cmp
xchg
add
pop
int
inc
sub
pop
xchg
ficoml
xor
aaa
adc
mov
repnz
rclb
cltd
imul
in
leave
pop
lret
in
sbb
sub
dec
dec
jg
xor
dec
cli
add
into
std
cmp
movsb
sti
xor
and
push
dec
or
xlat
jle
pusha
enter
mov
clc
insb
inc
sub
cmp
dec
shl
cmp
call
cld
es
ret
xchg
dec
mov
pslld
xor
xor
add
jnp
enter
mov
ret
lods
push
and
jle
in
lcall
or
lea
aad
hlt
sti
test
fwait
sub
outsb
xor
adc
pushf
ds
enter
sub
aas
cmp
sub
cmp
or
inc
ds
sbb
jle
or
je
shll
vpsubsb
mov
test
cmpb
pop
or
xchg
push
mov
scas
mov
and
dec
jae
std
in
cmc
push
xlat
dec
mov
jae
cmpl
mov
or
fs
xchg
cmc
stos
loopne
sub
mov
sbb
out
xlat
pop
push
test
arpl
push
fisubs
in
scas
mov
dec
cmc
out
xchg
push
mov
in
imul
scas
dec
mov
pop
mov
lock
leave
lahf
iret
insl
nop
push
or
sbb
insl
xchg
les
rolb
cwtl
or
stos
inc
nop
rcrl
fdivrl
mov
out
pop
dec
popf
pop
aaa
add
cmp
push
out
cmp
fdivl
mov
push
hlt
arpl
mov
adc
repnz
mov
add
andb
or
in
xchg
rol
cmp
shl
test
sti
fisubrs
idiv
loop
push
rcrl
xchg
adcl
inc
mov
stos
cmc
ret
xlat
sbb
xchg
pop
pop
adc
fildl
inc
and
pop
jns
scas
push
dec
push
cmpsl
stos
loop
sbb
push
push
cmc
in
jmp
in
fs
add
jnp
xor
pop
add
cld
sbb
stos
pop
idivl
sub
lods
loope
bound
test
fmull
cmpsb
push
jne
in
imul
or
test
ret
pop
fld
inc
stos
xchg
fadds
inc
pusha
pop
es
flds
test
and
cli
inc
pop
mov
jb
rcrl
adc
outsl
and
dec
fcmove
mov
xchg
and
in
push
fnsetpm(287
dec
pop
scas
dec
cwtl
stos
imul
and
sbb
mov
out
or
out
jo
dec
xor
in
outsl
mov
nop
add
inc
inc
dec
test
cmp
dec
lea
repz
mov
rcr
aam
lahf
inc
decl
pushf
rcll
outsb
cwtl
cwtl
pop
popa
push
pushf
pushl
pop
mov
xchg
mov
stos
inc
test
xchg
jnp
mov
mov
sub
into
sbb
push
jns
cs
fdivrl
popf
in
add
dec
jns
xchg
fmull
sbb
fsubrl
xchg
or
in
mov
sbb
dec
fxch
mov
pop
aaa
rcll
in
xchg
incb
aam
jge
test
mov
add
jle
repnz
jle
mov
sub
mov
cld
mov
sub
or
pop
dec
rclb
push
xchg
lcall
inc
insb
add
sub
jno
mov
cs
mov
nop
push
cli
gs
xchg
int3
sbb
xor
outsb
popf
and
shl
sub
iret
push
and
out
adc
cmpsb
jns
push
or
xchg
fdivrp
loope
arpl
xchg
in
pop
pop
inc
fisttpll
pusha
loop
jnp
adc
and
fcoml
js
cltd
mov
jmp
or
push
pop
jg
imul
or
repz
lret
mov
filds
sub
loopne
jo
repnz
pushl
push
roll
jne
inc
fldl
in
sar
jnp
add
xchg
mov
in
hlt
jg
sub
xchg
lret
ret
or
ljmp
out
lret
push
and
jne
inc
les
cli
and
dec
test
mov
outsb
jg
negl
sub
pop
mov
rcll
xlat
out
jp
int
fcoml
adc
mov
xchg
sbb
fiadds
xor
mov
push
cli
xchg
sti
and
lods
outsl
cmp
dec
lds
xor
inc
inc
or
cmc
adc
ljmp
insl
hlt
jno
pop
mov
pushf
lods
or
daa
fisubrs
jno
adc
test
inc
xlat
loopne
movsb
ja
xor
imul
mov
int3
loop
jo
push
sbb
jns
cli
adc
lods
add
pop
fidivl
mov
inc
mov
jecxz
cmp
push
jo
mov
sub
loop
negb
scas
push
ror
xchg
popf
into
mov
testl
xchg
pushf
rcr
mov
mov
es
popf
insb
fldenv
dec
or
push
cwtl
fucomp
pop
inc
loope
xchg
jp
jns
adc
sub
mov
repnz
movsl
add
fldl
shlb
fisubs
test
clc
dec
iret
lret
or
je
cli
andb
lock
dec
jle
mov
nop
aad
mov
xlat
aad
mov
jle
or
inc
dec
mov
aam
push
out
cs
sbb
roll
xchg
cmpsl
xor
add
imul
xchg
jmp
xorb
mov
sbb
sub
sbb
adc
mov
mov
mov
xor
stos
add
xchg
fdivrs
dec
sbb
je
mov
jne
lret
inc
xchg
inc
xchg
dec
dec
ljmp
sub
outsl
or
int3
lahf
inc
mov
add
xor
sbb
cmp
jbe
adc
je
dec
loope
pop
cs
sbb
pop
f2xm1
shr
fsubs
adc
iret
bound
cmp
lock
push
je
jl
mov
add
jo
into
stos
push
pop
and
repz
aaa
in
aad
jae
jb
int
pop
stos
les
into
out
jl
enter
test
mov
divl
ja
xor
fxch
stc
lods
xor
enter
mull
out
sbb
xchg
pop
xchg
call
inc
fsubs
lds
ljmp
adc
adc
mov
cli
mov
addl
imul
dec
inc
in
xchg
ret
inc
insb
scas
mov
mov
or
fwait
lret
xor
lret
movsb
xchg
pop
adc
lret
fsts
or
xchg
popa
frstor
mov
cld
sub
xchg
nop
dec
rorl
pop
ds
sub
sar
mov
and
add
adc
movl
into
pop
cmp
ss
xor
fisubs
cmp
sti
mov
sti
mov
pop
jle
jmp
sub
lock
mov
test
out
rcll
fsubs
pushl
or
pop
and
in
stos
add
clc
loop
call
lret
inc
pop
and
mov
or
mov
mov
scas
cmpsl
loop
outsb
nop
jo
pop
hlt
fnstenv
add
push
call
out
xor
in
subl
jl
inc
hlt
add
or
stos
pop
push
jp
push
or
loopne
dec
cs
test
pop
aad
fadds
jne
fsubr
jmp
pop
xchg
cmp
test
xchg
test
addl
jo
ss
test
push
cmp
mov
lret
insb
outsl
out
cltd
push
jmp
inc
mov
jne
icebp
jle
dec
mov
jmp
lcall
inc
push
aaa
adc
sub
push
sub
outsb
mov
lods
dec
imul
or
and
lods
add
dec
shrl
data16
cmp
daa
lret
dec
cmp
or
and
out
lcall
xchg
sbb
jmp
or
mov
stos
add
mov
sar
pop
testl
dec
enter
xor
bound
das
cld
xor
push
sub
cwtl
loop
dec
xchg
les
adc
jecxz
sbb
sub
or
jg
jbe
cwtl
xchg
inc
jg
mov
sbb
dec
iret
cmp
or
cs
pop
jle
xchg
arpl
inc
les
mov
scas
vpandn
lods
xor
movsl
in
dec
push
jo
popa
sbb
imul
inc
mov
leave
inc
sub
clc
pop
jne
dec
add
out
xor
jo
jo
push
mov
sub
call
pop
mov
cmp
jne
push
movsb
fimull
out
ret
adc
aas
xor
inc
adc
dec
jo
in
movsb
adc
test
movsb
rolb
fstpl
inc
jl
call
test
bound
jmp
jle
inc
jg
in
arpl
orb
or
jb
mov
pop
inc
sub
lahf
xlat
add
cmpsl
push
lret
hlt
jecxz
xor
inc
data16
js
sbb
jmp
sub
icebp
xchg
push
out
popf
movq
add
push
push
lcall
mov
lods
xchg
lds
ret
mov
call
mov
add
adc
leave
mov
pop
add
adc
out
call
js
cmp
nop
mov
push
repz
aas
cmp
or
push
sbb
popf
std
outsl
and
jae
and
jne
dec
cmc
push
test
fs
mov
pop
das
sub
add
xchg
hlt
cmc
out
enter
cmp
jns
dec
pop
adc
cli
xorb
jns
ret
sub
push
cli
or
sarl
fists
decl
push
call
and
pop
pop
into
cmp
xchg
es
loopne
fidivrl
dec
pop
lcall
lcall
or
fnsave
ficoml
or
data16
cmp
inc
rcr
imul
mov
mov
sarl
hlt
mov
jo
test
push
or
js
popf
sbb
data16
xchg
sbb
lods
xchg
cmp
sarl
adc
inc
and
lock
adc
lret
sub
push
xchg
scas
or
jb
push
dec
lods
je
pop
cmp
neg
jmp
imul
addr16
sahf
pop
ret
mov
and
das
inc
test
rorl
out
cmp
ret
sbb
mov
cmpsb
mov
lods
les
outsl
add
inc
add
ja
bound
nop
or
shlb
rcll
insl
mov
mov
xor
sbb
add
push
sbb
sti
mov
stos
xchg
js
dec
adc
add
push
mov
and
cwtl
shl
mov
adc
fwait
sbb
inc
xor
pop
lahf
mov
pop
cmp
popf
pop
pop
mov
insl
out
push
divb
scas
pop
loopne
mov
andb
or
lea
sbbl
pop
xlat
jbe
inc
cmp
xchg
cmpsb
jae
test
aad
mov
mov
push
sub
pop
lret
and
jno
add
das
mov
mov
and
pusha
dec
jne
mov
and
cmpsl
dec
jne
outsl
jns
rcr
bound
mov
xor
loop
pop
or
or
cmp
rcr
enter
loope
mov
push
jl
push
adc
fstpl
into
and
scas
imul
dec
jne
push
testb
icebp
sub
dec
outsb
lods
outsb
repnz
ds
jecxz
mov
push
dec
mov
fimuls
cmpl
mov
ds
ret
shlb
and
leave
mov
stos
xchg
adc
rclb
lret
add
imul
in
xchg
jmp
jno
and
pop
fdivl
or
lret
stos
aad
imul
loop
mov
xor
pop
mov
mov
pop
rolb
into
scas
cmp
sti
pop
ss
jg
testl
jg
aas
cmpsl
sub
or
stos
imul
mov
push
mov
or
fwait
hlt
inc
and
test
iret
mov
stc
ja
in
fsubr
and
fadds
push
xchg
ja
mov
dec
or
ja
scas
jne
mov
pop
add
lret
mov
imul
cs
andl
mov
lds
add
ficompl
mov
mov
cmp
and
call
pop
xchg
outsb
or
fwait
out
lcall
or
inc
stos
push
dec
fldenv
movsl
pop
mul
jae
cmp
sub
dec
sbb
cmpsl
inc
adcb
mov
jne
imul
or
lret
xchg
testb
pop
sbb
mov
push
addr16
in
shlb
dec
sbb
les
cmpsb
xchg
les
repz
scas
pop
repz
mov
arpl
mov
dec
dec
lea
pop
ds
repz
ss
sbb
insl
jecxz
push
ror
and
enter
cmp
mov
fistps
mov
push
rclb
test
stos
addb
out
ret
mov
pop
cli
pusha
aam
xor
pushf
xchg
inc
leave
jae
xor
xchg
sarb
out
adc
pop
xchg
jmp
inc
std
push
cmp
push
mov
ja
ja
adc
out
out
pop
pop
shlb
adcb
push
mov
adc
bswap
xor
mov
xchg
arpl
cmp
xlat
ds
test
or
int
xchg
aad
mov
push
pusha
or
aad
add
cltd
push
and
pop
imul
js
jp
negb
mov
imul
les
icebp
dec
rcll
sbb
xor
je
pushf
test
daa
mov
movsl
into
fs
xchg
push
inc
dec
mov
lods
sub
mov
mov
push
lret
fldln2
popa
pop
addr16
mov
mov
js
cwtl
push
fs
fidivs
push
loope
or
movsb
ljmp
push
add
add
sbb
mov
imul
stos
inc
jmp
dec
inc
push
push
push
gs
in
mov
das
aam
test
mov
loop
inc
mov
shl
sbb
lcall
testl
xor
pop
mov
push
xchg
add
cmp
insl
adc
xchg
sub
stos
test
andb
xchg
and
ja
fidivs
sub
addr16
imul
scas
jmp
loop
js
xlat
jae
mov
popa
fisttpll
mov
pop
loope
mov
sub
mov
call
push
mov
addr16
enter
stos
add
mov
sbb
jge
das
mov
insl
hlt
xlat
jb
inc
xor
mov
mov
lret
fsubl
sbb
xchg
imul
lret
in
std
adc
sarl
dec
adc
push
cld
push
and
xchg
sbbl
and
dec
push
roll
jae
jmpw
sub
ss
or
add
stc
cmpl
lods
xorb
xchg
lock
jl
sub
inc
xchg
ss
xchg
outsl
pusha
xor
sub
add
stos
data16
mov
push
or
in
mov
daa
enter
xchg
pop
addr16
movsl
sbb
add
jl
loope
xchg
push
loope
fnsave
outsb
mov
movsb
insl
add
push
and
mov
lret
adc
arpl
cmpsb
xchg
and
test
jnp
pop
sti
or
xchg
pop
aam
dec
mov
in
ljmp
cwtl
int
mov
mov
cs
icebp
jnp
mov
xor
aaa
aam
dec
pop
pop
int3
outsl
cs
insl
test
lret
sub
outsl
das
sub
mov
fcmovu
xchg
mov
outsb
cmpsl
ret
inc
call
sbb
lock
fsubp
mov
es
dec
fdivs
sub
clc
cmpsb
or
lods
push
lcall
aad
ret
push
pop
lcall
xchg
add
lds
dec
jno
aad
or
and
icebp
cwtl
adc
sar
mov
rclb
ror
lahf
fsubr
jecxz
dec
aad
xchg
or
hlt
cmpl
pushf
mov
int
cmpsb
lahf
mov
movsl
movsl
outsb
mov
dec
push
pop
popa
xchg
xor
xor
stos
mov
test
fiadds
or
arpl
ret
aas
pop
dec
jl
cmp
cmp
popa
jns
mov
push
pop
jno
dec
inc
aas
rorl
fprem
fimuls
sub
sub
mov
ret
nop
popa
dec
cmpb
cmpsl
dec
loop
jae
add
push
out
add
ds
and
lods
scas
ret
call
inc
lret
pop
test
xchg
adc
sbb
shlb
mov
and
cli
jns
aaa
cld
xchg
adc
push
pop
and
dec
dec
mov
stos
data16
xlat
cmp
aas
sub
dec
and
xchg
inc
sub
fstl
xor
inc
dec
lcall
outsb
movsl
test
cmpsl
xor
in
sub
cmp
loopne
and
dec
or
inc
ljmp
mov
xchg
or
cmc
and
in
inc
sbb
fmull
imul
and
pusha
jge
mov
sbb
mov
data16
repz
ror
sub
dec
push
mov
xor
sbb
mov
mov
dec
add
cwtl
xchg
and
aad
in
mov
cmpsb
aaa
mov
sbb
mov
xchg
out
fadds
sub
mov
sub
ja
ret
xlat
popf
cwtl
push
adc
fiadds
sbb
sbbb
dec
es
inc
fisubl
int
sub
mov
jp
loopne
jle
addr16
lret
ljmp
jbe
outsl
stos
xchg
incb
jecxz
add
push
cmp
cmpsl
loopne
inc
add
xchg
mov
add
and
cmpsb
xor
push
stos
cltd
fmull
dec
daa
dec
sbbl
cmp
ljmp
push
jo
movsl
mov
xor
test
adc
imul
mov
jmp
imul
shrl
outsl
xchg
push
mov
dec
cltd
xchg
mov
cmc
testl
hlt
movsl
scas
add
xchg
push
cmp
movsl
sbb
and
inc
sub
sti
cmp
inc
push
xchg
sti
push
dec
jg
dec
mov
fildll
out
imul
std
ret
ficoms
push
std
cmpsb
btc
rcl
jmp
mov
stos
sbb
int
test
mov
cmp
dec
out
stc
and
ds
daa
mov
xor
xor
mov
jge
mov
bound
negl
xor
ficomps
inc
fisubl
or
sub
fldcw
das
inc
push
fs
push
adc
xchg
push
int3
imul
xchg
xor
mov
testl
pop
orl
sbb
mov
popa
push
lcall
lock
dec
inc
cltd
outsb
dec
loopne
subl
shl
xorb
and
or
test
movsb
inc
mov
scas
out
dec
cld
inc
jp
mov
adc
mov
imul
cmpl
and
or
cmpb
aaa
test
lahf
nop
das
andb
jns
bound
aam
adc
daa
adc
es
cmpsb
ja
mov
sbb
and
sbb
dec
and
add
and
std
mov
push
in
in
xchg
aas
mov
out
fadds
imul
icebp
adc
ret
mov
mov
and
shll
hlt
push
cmp
mov
stos
in
add
inc
jbe
adc
sbb
mov
jne
jge
xchg
js
ret
push
in
mov
push
mov
shrb
add
jae
es
pushf
mov
mov
stos
fistpl
lea
inc
pushf
lods
outsl
popf
adc
xor
xchg
movsl
pop
cmp
leave
sbb
fistps
std
jg
and
add
icebp
stos
push
lret
imul
aaa
push
jge
lret
sub
push
push
mov
jge
mov
ss
iret
lcall
mov
push
test
out
lret
ja
test
xchg
dec
add
cmp
orb
sub
dec
xor
mov
jne
push
stos
movsl
rcrb
sbb
ljmp
and
shl
xchg
push
jno
cmp
mov
inc
arpl
xor
fsubrl
sbb
sbb
aad
hlt
dec
imul
dec
cmp
loopne
jnp
je
pop
test
bound
mov
push
addr16
push
push
bound
aaa
jb
jno
xor
push
pop
das
cmp
push
insb
xchg
xchg
setle
les
and
mov
xchg
sub
sahf
test
gs
iret
stc
scas
jecxz
and
mov
bound
int
ljmp
push
cmp
inc
negl
sahf
push
xor
test
jno
insl
jno
push
fmuls
lods
jg
jmp
outsb
cs
xor
sub
mov
in
loope
scas
push
sub
cmp
xor
mov
add
mov
dec
in
out
scas
lahf
sbb
mov
test
in
clc
call
loopne
ret
mov
jmp
jo
pusha
loop
inc
es
cmpsl
test
subb
mulb
test
sbb
into
in
pop
push
test
loopne
dec
shlb
lcall
pop
sbb
mov
jg
jae
das
shr
mov
pop
inc
test
mov
sub
xchg
adc
adc
stos
call
int
je
cld
pop
jmp
sar
cmpsl
jnp
mov
aaa
or
popf
lea
mov
lret
adc
add
push
imull
mov
sub
mov
sbb
push
dec
in
adc
jbe
sbb
lahf
stos
jo
pop
mov
pop
and
push
lret
push
push
leave
jns
call
ljmp
pop
or
jb
cmp
mov
cltd
mov
inc
pop
sti
add
repz
dec
icebp
outsl
jp
push
cmp
aas
test
jecxz
jle
sbb
jnp
loope
call
clc
mov
and
xchg
rol
stos
je
out
stc
testl
push
add
das
pop
js
jns
mov
and
push
xor
add
test
scas
sbb
or
stos
out
lret
push
mov
or
pushf
es
insb
dec
adcl
cwtl
lret
enter
mov
jnp
daa
js
dec
dec
insb
addl
mov
insb
repz
bound
fistl
aad
shl
fidivl
shl
roll
xchg
push
mov
dec
sbb
sbb
add
and
and
shlb
push
les
push
ret
pop
out
shlb
fs
xor
sub
icebp
jb
mov
iret
jae
loope
stc
lret
cmp
mov
mov
ja
add
insl
add
stos
sub
stos
cmp
mov
sbb
push
mov
adc
push
adc
pop
xor
dec
ss
jmp
cmp
push
xchg
lcall
into
pop
pusha
int3
inc
push
inc
into
add
push
bound
ljmp
cmc
sbbb
dec
pushf
aad
add
adc
mov
fdiv
outsl
rolb
xor
mulb
rolb
mov
lret
push
ja
cmpsl
mov
in
and
outsb
mov
repnz
xchg
add
loop
pushf
dec
stos
cmp
push
mov
cwtl
sarb
pop
push
imul
stos
push
sub
dec
negl
adc
xor
ljmp
jmp
cmp
xchg
enter
outsl
mov
movsl
out
ljmp
adc
fnsave
adc
adc
push
lcall
dec
jnp
testl
mov
lret
call
mov
add
add
mov
inc
ret
pusha
dec
enter
loop
inc
movsl
andb
add
xlat
lret
pop
xor
mov
fwait
xor
insl
lods
xorb
insl
repnz
cwtl
arpl
inc
into
pop
stc
mov
shll
enter
inc
gs
cli
pop
cld
xchg
sbb
fidivl
push
jnp
cs
sub
out
dec
pop
jg
sarb
enter
gs
cmp
mov
xchg
sub
pop
mov
aas
sbbl
mov
jmp
loop
xlat
imul
jl
cli
or
xor
adc
lds
dec
repz
mov
xor
push
mov
pop
setnp
xchg
sbb
add
sbb
mov
lea
pop
mov
mov
pusha
sub
dec
popf
add
pop
test
out
fmuls
dec
fildll
push
in
mov
and
add
mov
push
mov
xchg
mov
and
iret
pushf
or
mov
bound
dec
cmp
lods
ret
dec
pop
sarl
push
and
dec
inc
mov
int3
push
ret
jnp
add
leave
sbb
sub
movsl
xchg
jecxz
jb
xchg
lret
mov
fsubrl
std
mov
fstpt
insl
lea
push
loopne
xchg
mov
mov
push
rclb
popf
loope
aam
or
mov
nop
add
dec
cmp
adc
mov
push
or
ds
mov
pop
mov
mov
mov
jge
jg
in
or
lea
fnstcw
and
jmp
xor
jno
cs
stos
add
xor
pop
push
lahf
cmpsb
test
call
popa
xor
add
int3
and
push
out
cmp
mov
rol
mov
sbb
mov
movsb
in
cmp
mov
loop
push
dec
jge
mov
pop
adc
sarl
sbb
inc
and
jne
icebp
dec
adc
jecxz
adc
inc
ficoml
inc
jl
pop
popf
sarl
cmpsl
xor
xor
adc
sbb
fidivrs
inc
popf
jge
pop
or
xor
pop
test
mov
jmp
jno
mov
movsl
cmp
dec
fcoml
cltd
cwtl
popa
lcall
xchg
add
sti
dec
adc
divl
xchg
cs
dec
xor
sbb
cmp
or
stc
je
mov
jns
inc
fldl
stos
jbe
imul
cmpsb
inc
pop
lods
cmc
pushf
push
les
mov
ret
divl
push
push
aad
adc
xchg
push
int3
or
push
cmpsb
pop
dec
mov
sbb
mov
cmp
mov
push
xchg
nop
jmp
pushf
push
push
iret
je
mov
sbb
rorl
je
mov
add
xchg
stos
add
or
add
mov
das
inc
jbe
cli
push
jmp
sbb
subb
ds
dec
cs
stc
push
rcll
scas
ja
sahf
sbb
int3
mov
jo
bnd
addr16
pop
or
pop
xor
arpl
or
sbb
or
mov
xchg
mov
iret
jo
movsb
sbb
push
mov
scas
iret
in
push
stos
popa
adc
mov
out
jmp
insl
cmpsl
jmp
pop
cltd
or
dec
loop
mov
pop
mov
cwtl
mov
dec
sub
cmc
or
jmp
jns
in
das
pop
push
pop
cmp
inc
fs
pop
das
mov
or
push
mov
dec
sub
xchg
imul
adc
jbe
sarl
rcrl
lea
icebp
pusha
xchg
and
inc
pop
inc
repz
add
stos
pop
fnsave
xchg
pop
push
cmc
pop
sahf
inc
iret
pop
jp
ds
divb
movsb
bound
mov
inc
fcoml
xchg
pusha
dec
ret
push
stc
push
pop
add
push
xchg
pop
imul
dec
mov
cmp
fdivr
iret
stos
add
addb
notl
int
faddl
xchg
lods
mov
daa
sub
cmpsb
xchg
fmull
jns
push
mov
push
loop
mov
jbe
adc
add
cmpsb
out
adc
push
add
sub
or
shll
mov
mov
or
loopne
dec
sub
cs
call
lret
adc
pop
mov
fwait
push
push
mov
lods
arpl
movsb
scas
lret
data16
ret
aad
cltd
cmp
xchg
rolb
mov
call
sub
or
lcall
rol
out
test
clc
shlb
inc
dec
xor
add
ljmp
xchg
adc
insl
and
add
add
cs
outsl
push
mov
sub
fstps
pop
jge
mov
mov
negl
jecxz
xor
ja
add
and
jge
mov
fs
mov
imul
dec
int3
inc
inc
jl
in
mov
push
xor
dec
mov
dec
sarb
ficoms
adc
das
or
data16
mov
jl
pop
roll
outsb
adc
in
xor
jbe
movaps
lock
mov
clc
mov
ja
in
into
add
push
call
dec
lock
aam
sbb
aam
push
pusha
in
dec
mov
pop
jno
push
inc
pushf
ja
jne
mov
shll
dec
adcl
cltd
dec
lahf
push
scas
mov
jo
mov
cmp
pusha
clc
ljmp
pop
cmpsb
add
lds
test
jns
mov
xchg
add
push
das
push
mov
sahf
scas
aad
fstpl
push
jge
lahf
xor
pusha
push
pushl
fwait
mov
dec
imul
lock
clc
sbb
shl
mov
jge
cpuid
sti
stos
pop
jl
mov
pop
xorl
xor
push
clc
sub
inc
dec
sub
mov
sar
shrl
push
hlt
in
xor
push
call
movsl
xor
lcall
out
jnp
pop
sub
and
add
mov
icebp
fimull
or
cmp
movsb
dec
div
mov
jo
aaa
dec
inc
aad
stos
sbb
mov
mov
fsubp
ja
lret
hlt
shl
adc
inc
xor
sub
bound
call
mov
fadds
xor
cld
call
xchg
arpl
sarb
sbb
jl
cwtl
mov
xchg
xor
das
pusha
cmp
cltd
xor
loop
sbb
in
subl
leave
rcrl
fisttps
pusha
lods
adc
pop
xor
sub
insl
push
mov
cltd
xchg
inc
imull
jp
lret
icebp
push
xor
loopne
out
loope
xabort
scas
cmp
push
adc
mov
in
ret
fisttpll
stos
les
in
out
adc
jg
mov
data16
popa
push
in
aaa
fidivrs
cmc
inc
and
or
mov
int3
xor
xlat
dec
jmp
mov
sbb
push
xor
je
nop
and
je
adcl
scas
es
dec
xchg
xchg
cmp
inc
sub
popa
cwtl
cli
das
inc
sbb
arpl
mov
inc
mov
pusha
fdivs
add
mov
into
outsb
dec
aaa
cmpsl
mov
cmpsb
cmc
cmp
aaa
cld
jl
lcall
cmp
jg
mov
adc
rorb
ficomps
popf
mov
xchg
notb
or
or
mov
sarl
pop
adc
pop
out
cmp
sahf
sbb
fsts
jp
xchg
mov
mov
pop
mov
aad
mov
cs
flds
test
test
inc
flds
or
incl
mov
movsl
test
mov
fwait
and
repnz
pop
push
inc
mov
and
push
sub
aad
leave
ss
adc
mov
lods
adc
push
pop
loope
push
mov
mov
int3
inc
cwtl
pop
cmp
push
mov
jne
jb
lea
fwait
inc
fwait
cltd
ds
mov
imul
dec
sub
inc
jg
xor
pop
dec
pushf
xor
rcr
sbb
lahf
push
jno
cmp
add
sub
jns
jmp
jb
cmp
or
jns
lcall
int3
cmp
aas
mov
push
nop
mov
jnp
stc
les
dec
pop
shll
cmpsb
pop
pop
add
mov
inc
out
mov
adc
cmp
int3
rclb
subl
pop
mov
mov
mov
movsb
push
or
icebp
mov
or
ss
ror
mov
inc
lds
push
mov
outsl
mov
or
mov
mov
mov
adc
adc
movsl
daa
in
loop
loop
cld
xchg
movsb
push
push
out
mov
or
mov
dec
repz
jne
xchg
lahf
xchg
jae
jae,pt
xchg
and
inc
imul
cmpsl
outsb
mov
sarb
loopne
out
fistl
jns
cmpsb
push
fimull
imul
cmp
repz
mov
mov
jl
xlat
loope
sbb
inc
loope
lret
or
sahf
fcompl
std
fmuls
cwtl
inc
add
repnz
imul
mov
jge
fdiv
push
mov
mov
adc
mov
sahf
repnz
lock
jb
xchg
test
sbb
mov
add
xchg
xchg
inc
adc
pop
aad
pop
jo
push
mov
or
bound
sub
inc
adc
data16
mov
adc
test
stos
call
pop
sbb
or
scas
jno
inc
dec
xchg
jbe
out
aam
sbb
cwtl
dec
jbe
adc
inc
jg
jmp
data16
lea
mov
in
test
mov
pop
cli
sar
mov
push
adc
mov
and
imul
mov
out
mov
lea
or
sbb
pop
mov
pop
out
sub
adc
pop
dec
lcall
scas
adc
aaa
mov
inc
jecxz
xor
scas
inc
inc
xchg
push
pop
push
scas
sbb
mov
cmpsl
xchg
or
ret
lcall
fsubrp
or
jge
imul
inc
mov
imulb
fnstenv
movsl
adc
inc
add
enter
or
stc
aam
sbb
fdivs
xor
out
mov
fbld
xchg
sbb
loopne
mov
out
mov
int
daa
rcrl
mov
les
cmp
fdivrs
dec
imul
dec
mov
out
push
cmp
xor
mov
sbb
pop
hlt
ja
xchg
xchg
mov
sbb
shlb
fistpl
cli
jo
fstl
test
cld
sub
sub
ljmp
fcoms
loope
add
jnp
mov
sub
inc
dec
std
adc
and
cmpsl
mov
and
xor
mov
mov
xchg
lret
xchg
je
aaa
jne
mov
dec
sbb
lret
jl
or
gs
inc
jns
sti
jecxz
mov
or
cmc
lret
lret
stc
xlat
mov
mov
inc
out
rcrb
and
xor
imul
aaa
sbb
imul
int
mov
es
cmc
hlt
int3
or
pop
popa
pop
jg
mov
fildll
cld
dec
mov
clc
add
xor
push
pusha
shll
imul
movsb
mov
push
pop
popf
sahf
adcb
mov
fmulp
shlb
cmp
ret
das
jne
add
pop
dec
test
and
mul
push
cmp
mov
sub
sarl
jno
mov
push
inc
fimuls
lods
jb
cli
jecxz
js
xchg
in
sti
ja
lds
cltd
je
into
jmp
bound
adc
sti
stc
jle
fnsave
fldl
inc
lock
sti
outsb
add
ljmp
cltd
ret
mov
cmp
lret
fidivrs
fnstsw
lret
lahf
xchg
cmp
fidivrl
mov
int
dec
cmc
lods
add
ljmp
inc
or
push
lock
fsubs
aam
jp
cltd
pop
jl
jmp
into
push
push
inc
jbe
xchg
pop
sbb
mov
je
adc
or
pushf
mov
cwtl
repz
fmuls
pop
sub
js
push
sub
and
les
mov
push
jle
in
mov
repz
sub
mov
bound
outsl
les
jmp
inc
inc
repz
pop
pushf
mov
jns
je
test
sbb
adc
pop
dec
bound
lcall
sbb
jecxz
jns
fmul
lock
xchg
and
rol
add
pop
sub
in
xchg
ljmp
pop
xchg
ss
mov
dec
sub
stos
inc
and
f2xm1
fistpl
aas
jns
sahf
mov
into
and
pop
imul
adc
test
aaa
lret
mov
cmp
pop
ds
and
inc
xchg
dec
inc
or
xor
sbb
mov
nop
mov
rcrb
mov
add
movsb
data16
jns
jg
dec
testb
cmpsl
lret
out
sbb
lods
xor
fsub
mov
sub
movsl
dec
scas
jg
push
mov
fwait
lds
sub
out
mov
and
je
insb
aaa
cmc
mov
push
sbb
lret
add
mov
out
jns
test
inc
insb
test
mov
sub
jnp
mov
mov
push
mov
mov
jl
or
or
shlb
andb
inc
jp
daa
aad
mov
call
dec
sahf
cltd
lea
cmpsl
enter
imul
leave
pop
lds
lock
or
stos
notb
popa
or
and
frstor
push
inc
xor
leave
pop
pop
dec
or
jl
hlt
xor
pop
cli
jb
int3
insl
cmc
pusha
inc
sahf
iret
push
sub
cmp
or
jle
jge
jge
fucom
popf
jmp
imul
xchg
clc
loope
shr
push
aad
pinsrw
inc
pop
push
xchg
sbb
daa
and
dec
cli
inc
mov
rcr
call
cmpl
and
rolb
jg
xor
test
mov
adc
hlt
sbb
mov
xchg
out
rorl
fs
push
loop
in
shlb
adc
lcall
push
mov
insl
inc
push
enter
mov
adcl
es
bnd
mov
je
clc
or
sbb
je
add
rcrb
dec
sub
dec
iret
ljmp
repnz
xor
mov
loope
adc
fistl
mov
test
imul
dec
fsubrs
leave
inc
sub
outsl
cmpl
xlat
xchg
lds
cmpsb
inc
cmp
fnstsw
aad
aam
bswap
into
fs
xor
pop
and
xor
mov
push
cmpsb
daa
loope
pop
js
cmpsb
adc
in
popa
ret
mov
aad
push
fbstp
push
ja
jp
jge
lret
xlat
sarl
sbb
addb
jb
adc
mov
movsl
sahf
mov
aad
jle
dec
jnp
sbb
stc
lcall
outsl
aad
sub
inc
mov
inc
xlat
inc
icebp
xchg
xchg
or
rol
sbb
lret
pop
rol
mov
and
mov
fwait
and
dec
mov
imul
and
cmpsb
inc
sub
jle
ret
rclb
mov
in
idivl
sbb
aam
jp
sbb
pop
add
push
or
xlat
cli
cli
pop
mov
jns
loopne
or
mov
xor
lea
mov
ficompl
or
shlb
inc
mov
adc
test
pop
in
pop
jb
in
lret
lret
sub
loope
popl
mov
and
adc
and
sarb
xor
sub
add
fwait
clc
mov
dec
lods
jns
les
inc
das
mov
repz
jno
test
test
dec
jle
fsubl
out
dec
test
dec
daa
cld
loopne
sub
dec
mov
jnp
or
sbb
repz
and
xor
orl
pop
ja
xchg
xor
sbb
sbb
mov
lahf
cmc
out
nop
hlt
scas
ja
je
fsubrl
or
sub
dec
dec
push
cld
out
mov
popa
loop
jmp
or
andl
shrl
xor
sahf
adc
fistpl
mov
sub
rorb
pop
xchg
fadds
insl
repz
fstps
cmp
xchg
jne
pop
mov
je
and
push
sub
sbb
testb
movsb
mov
sbb
xchg
jg
sbb
push
sarb
dec
add
cmp
lahf
pop
stos
cmp
adc
shll
mov
inc
cmp
jbe
dec
shll
addl
clc
pop
dec
rorl
lock
jne
mov
in
mov
mov
mov
pushf
sbb
adcl
in
mov
fsubp
fstpl
fimull
fisubrs
aas
not
cltd
ret
cmpsb
cmpsl
push
xor
dec
mov
jbe
jle
inc
add
aas
jle
sbb
les
roll
stos
jge
repz
mov
push
lcall
inc
mov
mov
push
icebp
mov
push
out
mov
mov
jmp
dec
or
sbb
xor
xchg
pop
out
movsb
test
roll
mov
fcoms
pushf
in
int
insb
cwtl
adc
pushf
fs
add
push
push
out
js
jno
sti
mov
jns
pop
and
xchg
aam
mov
jne
negb
fistps
inc
enter
imul
mov
fcoml
shrb
pop
adc
sbb
stos
imul
sub
sarb
xchg
cmp
cmpsl
jo
jl
dec
mov
xchg
jecxz
push
pop
out
push
fcoms
sbb
mov
push
lds
mov
mov
adc
scas
outsb
imul
and
or
sub
dec
mov
inc
or
or
hlt
out
cmp
outsl
enter
dec
in
push
inc
test
into
adc
adc
sub
lret
loopne
adc
pop
sbb
mov
ja
push
hlt
sbb
or
outsl
lods
das
cwtl
push
pop
out
and
test
std
jp
dec
mov
pop
inc
sarl
lcall
fucomip
xor
mov
sbb
add
fsubs
or
and
xor
pushl
hlt
loop
jb
xorb
inc
adc
test
adc
and
test
cmp
int3
rcrl
and
or
dec
jb
imul
andl
fcompl
add
dec
fcmove
scas
pop
lea
testb
std
sar
ret
sahf
xchg
jbe
xor
or
or
incb
out
mov
subl
mov
aas
inc
xor
or
or
test
inc
cld
data16
and
inc
lcall
js
ja
pop
in
lods
lcall
xchg
jns
js
push
and
mov
aaa
arpl
mov
and
inc
add
xchg
add
push
int
pop
insl
push
xor
bound
imul
mov
add
jg
jge
xchg
jp
or
imul
mov
jbe
adc
jae
add
pop
sub
fidivrs
int3
es
or
ret
insl
mov
das
ja
jmp
ds
mov
bound
dec
jle
sbb
xor
shl
pop
push
mov
cmp
int
das
gs
int
xor
bound
adc
jbe
jns
and
sbb
scas
loop
mov
mov
in
rorb
cmpsl
inc
call
jnp
ljmp
cmp
sub
cmpsl
mov
add
inc
jns
gs
mov
mov
outsb
and
jge
mov
out
cmpsl
loop
test
adc
xor
ret
dec
in
imulb
mov
cld
fists
call
xor
cmp
mov
push
scas
or
mov
test
fcmovbe
and
lret
and
rcr
or
adc
jno
mov
push
ss
inc
pop
roll
decl
call
jnp
jns
insb
inc
rol
rorb
mov
out
mov
lret
loop
dec
sti
andb
rcl
add
push
pop
adc
scas
mov
pop
in
aad
loope
hlt
cmp
pop
aam
adcl
rcll
pop
push
aam
or
dec
ret
testl
in
cltd
pop
aaa
push
ljmp
mov
insl
daa
shrb
push
cmc
aas
fidivs
pusha
jne
jno
fwait
jmp
jo
xlat
adc
cmc
loope
insl
push
testl
pop
xor
and
xor
pop
dec
jmp
out
outsl
mov
dec
gs
test
push
mov
mov
jne
cmp
nop
push
pop
loope
std
mov
push
lret
mov
mov
imul
jp
jno
xchg
insb
in
out
aad
lods
arpl
insb
or
inc
and
cmp
test
lret
mov
repnz
mov
in
ja
xchg
outsb
dec
adc
sbb
lods
mov
jg
mov
pop
pop
pop
cmp
dec
xor
ret
add
call
aad
pop
shll
in
gs
jp
jno
aam
or
mov
inc
pushf
mov
adc
cs
sbb
data16
mov
and
subb
loop
fwait
jae
cld
lret
and
rcrl
data16
mov
push
lods
ljmp
cmp
xchg
push
dec
or
inc
mov
pop
outsl
xchg
adc
push
lahf
sbb
inc
jmp
movsb
test
call
std
cmp
cli
cmpsl
lea
xchg
dec
aas
xor
das
outsl
insb
pop
sti
imul
sbb
lahf
pop
cmc
inc
jo
shll
xchg
xchg
push
rep
sbbl
in
sub
dec
push
fwait
mov
mov
push
insl
rcrl
sub
dec
adc
jbe
dec
nop
out
mov
sub
pushf
sbb
movsb
fs
push
imul
std
sti
push
stos
xchg
mov
push
js
dec
cmp
test
sub
push
push
mov
lahf
mov
movsl
push
mov
stos
dec
add
lock
pop
addr16
in
sti
lcall
jecxz
jb
xlat
mov
jno
aas
repz
cmpsb
and
test
or
ja
in
gs
inc
push
pop
repnz
mov
jbe
inc
bound
data16
mov
lret
and
frstor
clc
pop
cmpl
xor
inc
add
add
test
jmp
sub
sbb
mov
sbb
hlt
inc
xchg
inc
dec
stc
out
les
add
jp
mulb
jecxz
clc
mov
push
or
inc
into
and
ljmp
dec
movsl
mov
mov
xchg
popa
sbb
mov
cs
push
dec
xor
adc
mov
cwtl
lahf
xor
mov
or
popf
xor
popf
mov
sbbl
or
sbb
mov
es
push
out
lods
out
sbb
mov
paddsw
jmp
lods
nop
cwtl
adc
dec
enter
inc
add
rol
movsb
call
rorb
fcompl
sbb
adc
sti
cmp
xchg
rorb
flds
test
dec
enter
sub
xor
incl
jp
movsb
mov
sub
stos
fst
daa
imul
xchg
sbbb
popf
cs
cmc
scas
cmp
sub
xchg
and
mov
insb
pushf
fcmovbe
hlt
test
xchg
pop
push
negl
mov
sarl
sub
test
adcb
jne
add
test
dec
adc
les
push
scas
divb
out
lock
or
add
sti
cmp
push
push
outsl
lret
out
jns
les
cltd
fabs
hlt
push
test
pop
pop
jo
jne
std
or
adc
push
push
jo
in
outsb
iret
xor
sti
xchg
out
or
sbb
adc
sbb
sbb
cld
and
sub
mov
rcl
fnsave
and
mov
sub
xchg
mov
mov
ficoms
leave
cmpsl
push
sbb
jmp
inc
mov
mov
xchg
ljmp
les
sbb
jb
sub
popf
test
push
push
jae
xor
cmc
and
sub
pop
idiv
jmp
into
cmc
rcl
add
cld
shrl
insl
push
jne
data16
inc
test
cmpsb
icebp
clc
jno
xlat
mov
cmp
sub
cmp
sbb
add
insl
dec
imul
scas
cmp
or
xor
add
mov
sbb
negb
test
jo
sub
adc
call
xchg
xchg
fimuls
xchg
cld
inc
popa
push
mov
arpl
test
andb
imul
fcompl
sbb
xchg
mov
push
pusha
sub
out
cli
jb
fdivrs
sbb
sbb
in
xchg
out
mov
and
add
scas
dec
sbb
xor
je
sbb
mov
addl
or
hlt
jge
jne
jnp
jo
sbb
test
push
sbb
in
xchg
jp
cmp
push
std
inc
in
roll
sbb
mov
mov
enter
or
xchg
push
in
xchg
dec
mov
fwait
mov
pop
xlat
jp
add
xchg
and
adc
ljmp
dec
xchg
sbb
sarl
push
in
or
adc
sar
ds
cltd
xchg
push
fidivrs
mov
aam
jo
push
in
mov
sbb
and
cmp
mov
popa
xor
xor
xor
adc
add
sbb
inc
loop
call
test
ret
pop
or
push
stos
cwtl
gs
adc
xchg
cmpsb
jg
push
xchg
sub
lods
push
stos
mov
xchg
lds
ss
repz
scas
adc
dec
jp
cmpsb
pop
mov
mov
jb
xchg
sti
fildll
push
push
divb
jmp
sub
sub
std
das
xor
and
or
sub
mov
je
int3
movsl
sti
arpl
sub
sub
adc
popa
adc
icebp
cmp
inc
test
pop
stos
adc
into
lcall
filds
idivb
stc
aas
add
call
cmc
lahf
mov
pusha
inc
xchg
dec
test
jmp
mov
or
ss
rolb
sbb
add
jne
dec
mov
movsl
mov
ja
test
sbb
popl
nop
daa
pop
scas
xchg
cwtl
fimull
push
sahf
adcl
xlat
adc
fildll
mov
and
mov
loopne
ret
cli
clc
mov
mov
push
push
jbe
cmovnp
jb
out
jns
xchg
aad
out
push
or
inc
aaa
dec
mov
shlb
dec
sbb
mov
and
mov
lahf
aad
xchg
out
mov
lods
imul
mov
cmp
es
dec
cmpsl
xor
jae
dec
mov
mov
xchg
nop
xor
imul
faddl
mov
add
jno
inc
push
jae
jbe
mov
inc
and
jno
popa
ljmp
adc
lock
push
add
push
out
sub
xchg
pop
ds
cmpsl
sub
lcall
out
js
pop
sahf
cmp
jmp
mov
hlt
dec
inc
pop
mov
xchg
sbb
or
jo
outsb
imul
xor
in
xchg
insb
pop
pop
aaa
inc
sti
mov
test
frstor
jl
lahf
and
mov
fs
in
or
push
and
ljmp
bound
push
push
repnz
stos
jns
xchg
sbbl
pop
jmp
cs
pop
in
call
push
add
ja
inc
adc
cltd
jge
icebp
aam
push
xchg
lods
jle
stc
push
out
inc
mov
aam
mov
aas
popa
cmpsb
cli
jo
pop
push
push
rcll
daa
add
cltd
imul
outsb
or
push
xchg
pop
dec
mov
aad
call
and
icebp
data16
cmp
mov
adc
test
loopw
bound
or
mov
sbb
stos
lea
pop
imul
pop
icebp
out
xlat
mov
fcmovne
inc
les
jge
data16
pop
mov
add
mov
and
pop
test
or
and
mov
subb
and
jl
dec
enter
xor
push
cmc
aaa
and
loope
test
mov
fisubl
sub
xchg
scas
imul
std
cmp
mov
popa
sbb
outsb
jnp
xor
mov
scas
mov
sbb
call
mov
xchg
cwtl
add
sahf
mov
ljmp
dec
mov
scas
cmpsl
or
fistps
mov
popf
mov
cld
xchg
jns
fmul
and
mov
push
jp
pop
xchg
mov
adc
jle
mov
rclb
cltd
cmc
je
fisubl
bound
gs
or
ljmp
push
js
jbe
xchg
pusha
addr16
mov
sarw
and
pop
fcoml
and
cli
xchg
sub
mov
mov
fistl
and
inc
lcall
jge
jae
mov
xor
dec
jmp
or
add
mov
andb
and
ljmp
notb
ljmp
jp
and
xchg
add
jmp
lock
rorb
outsl
sbb
popa
xor
inc
or
call
andl
mov
aas
out
sbbb
push
push
stos
pusha
inc
inc
movsb
mov
fsubrl
les
push
popa
mov
push
cli
jmp
jo
aaa
fisttpll
push
dec
xlat
mov
dec
jmp
xlat
scas
cltd
stos
sbb
mov
dec
inc
ret
push
mov
mulb
inc
imul
sbb
sub
sub
push
enter
rcrl
cli
sub
sbb
lods
cmp
sub
xchg
inc
jb
rorb
daa
stos
loop
les
insl
cmp
xchg
jecxz
in
test
or
fwait
inc
rcrl
popf
push
add
mov
stc
and
cmc
hlt
adcb
dec
mov
dec
iret
xor
mov
jecxz
iret
add
scas
xchg
fisttps
inc
in
movsb
or
sbb
aaa
daa
aaa
xchg
cmp
int3
imul
inc
orb
iret
jbe
pop
pop
movsl
and
or
jp
dec
in
adc
call
int
icebp
sbb
lock
cs
imul
mov
cmc
lock
inc
loope
int
mov
lods
lods
dec
mov
and
jle
add
xor
jnp
inc
push
call
fistps
out
dec
adc
int3
jmp
adc
add
movsb
inc
out
inc
jecxz
out
test
enter
sbb
pop
sbb
sub
popl
and
pop
scas
pop
gs
and
jbe
leave
imul
jns
cmp
sbb
dec
xor
mov
movsl
xchg
adcl
dec
mov
stos
add
ds
mov
xchg
lret
xchg
jo
lcall
aam
pop
push
sub
ss
pop
mov
mov
xor
mov
add
dec
scas
lds
inc
in
mov
or
das
pop
adc
xchg
fcompl
cmpsl
or
lcall
jmp
lcall
call
aam
adc
mov
hlt
push
ficoml
shlb
into
aas
outsb
idivb
or
mov
cmpsl
adc
rorb
jne
lret
subl
cmp
cmc
movsb
mov
cli
les
idivb
mov
sub
xor
jle
mov
pop
xchg
xor
iret
pop
xor
shl
and
sahf
cwtl
jb
imul
call
cmp
shlb
movsl
adc
leave
cmp
or
mov
ds
sub
jns
stos
outsl
imul
mov
pop
ljmp
leave
nop
xchg
shrl
xchg
sub
outsl
mov
xor
enter
sahf
das
adc
and
lret
add
mov
sbb
fildl
add
add
mov
push
rclb
jne
ficompl
adc
mov
aam
xor
jne
out
mov
push
jb
call
into
push
and
jb
cmp
and
adc
mov
pop
inc
aam
je
movsl
sti
sti
dec
mov
sub
int
cmpsl
pushf
xchg
xor
push
mov
add
scas
cmp
xchg
insb
cmc
scas
push
sub
cmp
adc
jmp
fwait
out
in
cmc
xor
rorb
and
hlt
aam
pushf
sahf
jecxz
adc
and
test
adc
or
shrb
ja
mov
movsl
movsl
dec
rcl
sarl
mov
jo
mov
inc
imul
mov
sbb
ljmp
scas
ficomps
pop
ret
mov
push
ja
testb
mov
gs
int
sbb
repz
scas
cmpsl
loope
cs
sbb
pusha
popa
sahf
sub
jae
push
pop
mov
mov
ljmp
cld
lret
movsb
jnp
repz
imul
push
clc
shll
test
bound
adc
mov
or
adc
mov
add
out
cmp
cmpsl
lret
mov
push
jp
inc
test
or
inc
mov
es
andb
xchg
jmp
inc
and
iret
xor
adc
out
and
std
push
cmp
iret
daa
repz
out
popa
cmp
call
jo
push
xchg
mov
fs
sbb
pop
mov
add
imul
aas
xlat
in
pop
arpl
cli
psllw
add
adc
repnz
push
sub
sbb
aad
imul
shl
mov
jno
push
push
cmp
mov
movsl
mov
sbb
lcall
aaa
sub
out
popa
jne
mov
pop
mov
popa
inc
adc
ret
inc
sub
repnz
mov
mov
lock
sub
dec
mov
int3
inc
js
gs
imul
inc
xchg
adc
int3
cmp
aad
loop
sub
mov
sar
ja
xor
pop
pop
dec
cmp
xchg
sub
pop
xchg
enter
ljmp
xor
test
aas
mov
iret
lret
iret
les
mov
rorl
les
out
xchg
adc
int3
aam
xor
pop
arpl
in
insl
addr16
or
push
sbb
sub
push
insb
mov
daa
lret
cmpsl
and
inc
dec
push
adc
fwait
add
adc
fstpl
mov
mov
lahf
sti
pop
loopne
lret
add
loopne
enter
mov
inc
clc
sub
pop
aam
out
int3
push
inc
outsb
fcomi
aad
fwait
or
mov
das
adc
and
sub
mov
inc
lock
pusha
inc
sub
negb
push
pop
pop
out
ljmp
es
mov
or
fidivrl
adc
rcrb
xchg
and
sub
rorb
repnz
clc
aam
pop
push
add
pop
or
test
repz
adc
sub
aad
fsubs
lahf
sub
push
loope
pushf
mov
push
lods
and
iret
ljmp
leave
ja
xchg
or
cmp
mov
add
dec
xlat
aaa
cmc
lea
ss
dec
ret
sub
int
push
pushf
jmp
xchg
pop
ds
mov
fadd
cmp
scas
and
pop
imul
pop
mov
dec
xor
lods
nop
fdivrl
mov
movsb
push
arpl
cmp
out
inc
adc
sub
ds
mov
pop
and
fldcw
pop
outsb
push
jno
mov
xchg
pushf
ret
xor
inc
xorb
shr
sahf
lahf
cmp
fldt
sti
jl
cmp
dec
cmpsl
into
popf
cmp
ret
decl
push
arpl
push
push
jmp
or
jne
hlt
loopne
lcall
pop
fwait
imul
jle
movsb
cs
pop
mov
sub
lcall
dec
aam
sbb
imul
loopne
sub
sbb
jecxz
pop
dec
jge
popa
adcb
add
call
jecxz
adc
mov
in
jmp
pop
in
sub
int
or
push
jo
repz
sbb
outsb
mov
popa
sbb
pop
xchg
test
idivb
subl
mov
sub
push
jae
pop
fildl
dec
cmp
mov
pop
int
shll
add
fistl
gs
pop
add
and
xor
testb
test
push
sbb
sub
in
pushw
push
mov
ret
xchg
cmpsb
insl
stos
clc
les
add
nop
in
repnz
pop
cmp
icebp
adc
xchg
pop
lods
test
ja
sub
out
lahf
mov
enter
stos
jg
mov
dec
pop
inc
push
out
inc
xlat
adc
pop
call
xor
cmp
jle
bound
mov
xor
pop
jb
push
mov
cli
aas
or
data16
ljmp
fwait
in
sub
into
fldcw
outsb
stos
fisttps
icebp
loop
sahf
sbb
stos
mov
cmp
test
or
push
adc
xchg
test
in
shrb
add
dec
push
out
and
xor
pop
iret
or
mov
out
cmp
and
icebp
pop
fwait
add
xor
movl
movsb
sahf
repnz
dec
jae
cmp
jns
pop
or
xor
int
pop
push
out
dec
stos
xlat
popl
popa
movsb
mov
push
enter
xchg
movsb
sbb
call
shll
add
adcb
jmp
scas
mov
bound
test
cmpsb
btr
push
mov
mov
into
push
loope
ss
or
cs
jmp
push
rcr
in
cmpsl
or
push
in
fisubrs
xchg
sbb
pop
dec
lahf
imul
xor
outsl
mov
jns
aas
cs
mov
test
imul
out
aad
mov
cmpsl
sub
fimull
test
xchg
mov
scas
pusha
sbb
adc
icebp
adc
push
xlat
sbb
daa
adc
dec
repnz
xchg
outsb
push
cli
sbb
inc
xchg
push
mov
cmc
jle
inc
lret
pop
adc
lcall
cmp
jb
icebp
jecxz
out
jmp
dec
xor
xor
scas
add
adc
and
cwtl
jmp
js
js
inc
in
pop
rorb
cmpsl
xor
sub
push
push
out
out
lods
xlat
mov
and
mov
xchg
jae
das
dec
popf
pop
rcll
lahf
repz
inc
loopne
shlb
divb
xor
dec
push
mov
icebp
pop
rol
mov
jo
fistpll
js
push
inc
sub
and
mull
aad
int
lock
push
lods
add
xchg
or
mov
clc
ja
addr16
add
or
push
nop
leave
addr16
mov
add
das
es
jmp
jnp
leave
fldl2t
ss
sbb
add
sub
cmc
scas
dec
stc
push
mov
mov
pop
cmp
mov
hlt
inc
shll
adc
push
je
insb
adc
dec
mov
pushf
mov
bound
push
mov
inc
add
pop
mov
cmp
ja
xchg
mov
rorl
int
lods
imul
dec
loop
out
push
push
cmp
fistpl
leave
popa
adc
pop
sbb
std
std
and
push
fsts
pop
mov
mov
cwtl
or
icebp
lds
or
jp
cs
ja
into
jne
push
aaa
sub
dec
pop
outsb
lcall
inc
sarl
mov
es
inc
jge
fnstcw
mov
xchg
mov
gs
dec
jne
pop
mov
decb
jmp
mul
lret
push
out
mov
sub
jo
das
aaa
pop
dec
hlt
xchg
adc
lcall
cmp
cwtl
out
adc
lret
sbb
mov
xor
nop
int3
or
and
sbb
sub
out
or
adc
xorl
push
insb
aaa
and
jp
out
std
xor
dec
jecxz
lcall
cmp
repnz
arpl
jge
out
loopne
dec
add
dec
pusha
scas
fildl
jp
fcmovnu
jg
call
push
ds
push
dec
mov
dec
fdivs
push
in
adcb
adc
xlat
jmp
mov
cltd
in
loop,pn
sub
lea
sub
or
out
outsb
jl
aam
xor
insb
imul
push
push
lods
push
dec
aam
aaa
mov
dec
add
adc
aaa
test
ret
fiadds
push
ret
int
call
sbb
mov
lds
jg
cmpl
jbe
and
mov
cmpl
jecxz
in
shll
leave
push
ljmp
popf
sti
jle
sbb
jle
mov
sahf
fisttpll
test
iret
mov
sub
ret
cltd
shlb
cmp
out
push
pop
lds
sub
cmp
cwtl
xor
mov
xchg
xor
or
mov
shl
mov
out
dec
jmp
sarl
cmp
xor
int3
popa
adc
xor
popa
fadds
mov
je
adc
in
xchg
adc
test
lret
arpl
std
mov
jo
add
cmc
pop
pop
out
dec
clc
jg
aaa
ss
cmp
sub
divl
es
test
fnstsw
pop
push
fisubrs
mov
dec
push
lods
in
bound
pop
out
sub
pop
dec
jb
arpl
ds
das
and
inc
mov
xor
pusha
adc
mov
nop
adc
daa
call
rorb
call
pop
dec
loopne
movsl
aam
popa
sbb
mov
fisubl
aad
pop
lea
adc
pop
repnz
add
cli
aaa
adc
ret
or
push
outsb
dec
jns
and
pop
hlt
jle
add
shl
push
pop
lcall
mov
sbb
mov
cmp
int
mov
in
inc
dec
inc
xor
sbb
sbb
sub
sbb
cs
pop
inc
testb
or
and
xor
mov
dec
or
push
push
dec
jge
add
loopne
jmp
sbb
mov
push
mov
imul
adc
push
movsl
leave
push
mov
test
cmc
dec
jnp
adc
stos
jg
sbb
adc
mov
int
mov
cwtl
enter
dec
jge
es
push
mov
nop
adc
imul
leave
repnz
lods
out
sbb
call
xor
pop
and
add
fists
cmp
xchg
sbb
std
mov
pop
push
lds
daa
push
ffree
xlat
sub
push
lea
mov
cwtl
repnz
pop
jne
enter
jl
and
xchg
push
or
repnz
fnstcw
inc
testb
sbb
pushw
es
and
and
out
imul
jecxz
sbb
sbb
icebp
in
scas
or
jmp
mov
fisttps
mov
push
bound
out
call
inc
fnsave
outsl
xchg
mov
xor
ret
cs
dec
cld
inc
lret
sarl
out
jb
in
test
jo
mov
pop
cltd
mov
addr16
or
in
sbb
repnz
lods
push
mov
sub
adc
btc
faddl
push
sahf
sahf
pop
fidivrs
mov
push
nop
push
inc
outsl
xchg
imul
push
sub
paddsw
mov
lret
add
mov
in
mov
pop
icebp
adc
add
into
xchg
push
and
xor
jno
fwait
push
jg
pop
push
mov
mov
dec
int3
lock
stos
sub
shlb
data16
sbb
and
mov
push
add
xor
xorl
aas
stc
or
daa
jmp
aam
mov
addr16
xchg
rcrl
mov
add
jns
jns
movsl
or
in
psubusw
shlb
mov
cmpsl
and
xlat
cmpsl
push
in
mull
dec
lcall
out
mov
lods
fiaddl
mov
inc
jecxz
xchg
in
fcmovb
test
push
cmp
or
push
sub
stc
inc
inc
and
mov
adc
xchg
lret
cltd
and
or
sbb
and
nop
roll
in
jae
sar
cmp
sbb
or
aad
push
out
mov
jle
jae
xchg
mov
je
sub
jo
mov
push
push
popa
fdiv
add
mov
mov
test
pop
push
xchg
sub
out
cli
aas
fs
call
movb
pop
adc
xchg
sub
inc
imul
fdiv
inc
clc
push
push
out
push
xchg
jbe
int3
pusha
call
es
push
cmpsl
orl
je
loope
dec
adc
xchg
scas
push
inc
les
xor
test
popa
xchg
mov
mov
xorb
lea
pop
sbb
adc
jp
and
inc
fmuls
pop
jmp
cmp
push
fldt
fcomp
push
sbb
mov
mov
xchg
mov
inc
in
jns
test
stos
out
int3
jp
xchg
adc
movsl
inc
push
mov
sbb
repnz
jl
nop
and
pop
push
scas
pusha
shll
jns
or
inc
lret
iret
push
sbb
adcl
jno
mov
jg
decl
and
or
jne
inc
into
aas
test
jmp
mov
iret
test
inc
adc
loopne
push
arpl
fdivrp
or
jg
enter
stos
mov
xchg
fdivrl
xor
cltd
ds
fwait
xor
das
xor
aas
push
adc
xor
ret
pop
loopne
cmp
xor
xchg
adc
imul
clc
flds
xchg
fstl
mov
inc
xor
xor
ja
andb
cld
dec
push
lods
push
fwait
aad
pop
or
mov
fs
mov
mov
or
incb
cmp
cmc
loopne
subl
movb
arpl
repz
or
xchg
test
jo
jp
jle
ja
imul
add
add
and
sub
add
push
jmp
repz
xor
xor
stc
mov
lods
repnz
or
mov
clc
enter
sub
popa
push
mov
jge
xchg
jmp
adc
mov
add
add
cmpl
sub
adc
inc
and
xchg
out
sub
xchg
add
add
pop
cmpsb
rolb
fisttpl
pop
mov
add
lcall
mov
pushl
test
inc
sti
mov
arpl
sub
sbb
pop
repz
inc
adc
rclb
push
xchg
fs
pop
loop
daa
xor
jns
loopne
stos
or
adc
lock
insb
xor
outsl
xlat
loopne
mov
pop
pop
mov
lds
fidivs
mov
adc
jo
sbb
sbb
pop
lock
pop
std
js
or
movsl
xor
pop
mul
or
xchg
jae
inc
mov
jle
add
nop
imul
push
adc
or
fmuls
cld
push
inc
ds
pusha
ds
ljmp
fwait
adc
insb
adc
inc
mov
sti
into
jne
stos
inc
pop
push
sbb
testl
inc
sbb
pop
push
bound
negl
push
adc
dec
pop
pop
mov
sub
aad
adc
pushl
xchg
mov
movsb
push
arpl
test
ljmp
loopne
add
xor
aam
pop
ss
mov
push
ret
ja
push
sbb
shll
aam
xor
movsb
cli
in
aaa
xchg
stc
jge
cmp
sbb
pop
cmp
std
inc
mov
sti
adc
jo
inc
inc
adc
dec
pop
cmp
cli
out
push
or
push
and
mov
je
icebp
jae
jmp
test
lock
sub
add
jnp
mov
adc
arpl
jne
pop
clc
int3
push
push
dec
pop
loope
enter
mov
scas
mov
dec
fidivl
xchg
sbb
push
ds
mov
stc
iret
push
fisubl
enter
mov
cmp
fcom
mov
xchg
xor
pop
sub
xor
jg
insb
push
mov
jp
push
adc
repnz
or
loope
add
pop
fdivl
ds
jmp
xlat
int3
add
xchg
mov
adc
sbb
enter
and
or
xchg
jnp
popa
mov
jle
cmp
push
gs
iret
cmc
mov
sbb
mov
aas
cmp
aaa
insb
pusha
cmp
inc
mov
pop
xchg
pop
out
adc
mov
lahf
nop
jae
or
stos
push
cmc
jns
sbb
pop
dec
loop
rorl
mov
xchg
je
inc
and
push
jg
mov
popf
mov
mov
test
or
pop
add
inc
inc
sti
inc
mov
cmpsl
mov
cs
inc
dec
cltd
imul
stos
or
xchg
adc
ret
enter
arpl
push
cmp
outsb
sbb
hlt
mov
pushf
xor
add
lret
test
ret
pop
push
iret
xchg
cmp
pop
cmp
jmp
push
push
push
jnp
cmp
or
adc
pop
imul
scas
mov
rcrb
hlt
and
rorl
cwtl
add
push
and
sti
dec
pop
imul
jnp
popa
mov
movsl
pop
cmp
xchg
mov
push
out
mov
sub
pusha
adc
mov
xchg
jle
mov
lret
lret
popa
je
jecxz
mov
mov
dec
insb
in
mov
lcall
push
mov
mov
push
loopne
push
xchg
iret
push
imul
int3
xchg
push
in
dec
push
dec
jo
repnz
jle
loope
loopne
lds
jns
cmp
mov
sub
daa
inc
insl
mov
or
mov
daa
and
xchg
fists
xchg
lods
inc
int3
dec
test
std
mov
cmp
cmpsb
pop
loopne
mov
ret
aad
aas
lret
sub
in
leave
insl
xor
enter
fidivrl
sbb
sub
test
mov
or
iret
fstpl
inc
push
stc
scas
or
imul
in
xchg
lcall
cmp
or
mov
in
push
mov
mov
mov
adc
mov
loop
jo
roll
fstpl
ret
and
in
or
in
outsl
mov
and
outsl
scas
sarl
xchg
stos
stc
mov
xor
push
stc
sbb
loopne
adc
scas
sbb
je
mov
sahf
sbb
rcrb
dec
dec
addb
adc
dec
dec
push
sahf
jnp
fildl
daa
cmc
xor
cli
ljmp
sbb
int3
mov
ret
cmp
push
add
jg
cmp
call
sbb
mov
std
xor
xchg
imul
movsl
es
push
das
xchg
sbb
inc
jbe
js
xor
icebp
mov
push
call
push
xor
dec
and
insb
cmp
and
mov
out
sti
je
cmp
sbb
lds
sbb
cmc
add
pop
aaa
cmp
imul
popf
subl
push
adc
cs
mov
das
dec
mov
add
aad
stos
rorb
mov
mov
jmp
pop
mov
inc
js
xor
movsb
jbe
inc
out
adc
jae
push
xchg
and
mov
adc
or
fdivs
stc
lret
testl
jnp
push
icebp
or
sbb
js
ja
loop
cmp
pop
insb
adc
add
call
std
and
jge
mov
outsl
xchg
inc
movsl
pop
js
and
mov
scas
push
mov
xor
adc
loope
mov
in
imul
mov
mov
mov
jp
mov
test
add
xchg
fidivl
xchg
in
call
mov
mov
lcall
out
pop
xchg
or
stc
or
out
hlt
jl
das
or
insl
aaa
mov
cmp
mov
ret
mov
xchg
fisubrs
cmc
scas
das
add
js
insl
mov
xchg
int
lock
repnz
jle
mov
push
stc
aam
mov
mov
mov
inc
mov
xlat
imul
sbbl
xchg
out
jmp
subl
popa
outsb
and
inc
pushl
lock
mov
inc
pop
sbb
lea
inc
push
shl
jne
std
cltd
dec
xchg
lcall
ss
cmpsl
pop
lcall
mov
jmp
movsb
dec
push
sbb
push
jge
daa
inc
clc
sub
sbb
je
mov
sbb
repz
pop
in
jmp
add
mov
inc
mov
pusha
fwait
push
repz
sbb
lock
mov
test
pop
add
call
or
ret
push
cmpsl
fwait
adc
or
aad
ja
cli
and
mov
or
sbb
testb
xchg
in
jo
xchg
call
dec
sub
add
es
enter
cmp
sub
sahf
jnp
and
sbb
push
or
pop
loope
mov
leave
push
mov
sub
xor
sub
jbe
inc
inc
jg
dec
sbb
push
mov
and
push
aas
jge
or
je
or
cld
push
sub
or
pmaxsw
in
aas
mov
or
push
ja
sub
stos
and
cmp
sub
mov
pop
mov
movsl
je,pt
mov
mov
lock
inc
jecxz
mov
mov
xchg
gs
pop
loope
negl
out
dec
movsl
call
xlat
daa
add
cli
push
ljmp
cwtl
jns
cmp
cmp
pop
pop
push
scas
gs
jge
adc
dec
sarl
cmp
push
std
sub
sbb
dec
or
sti
outsl
int3
imul
dec
scas
jae
addb
out
ret
jne
xchg
jecxz
sub
adcl
mov
mov
dec
fidivs
inc
test
bound
mov
lcall
cmpsl
pop
pop
sub
sub
mov
cmp
frstor
pop
push
mov
xor
test
sub
push
das
and
push
jns
rcrl
sbb
xchg
fisubl
mov
sub
data16
into
xor
pop
int
xchg
add
imulb
mov
mov
cs
inc
mov
nop
jle
shll
pusha
cmpsb
jle
movsb
iret
cmpsl
scas
sbb
push
outsl
adc
sarb
mov
jnp
dec
pop
test
pop
ficomps
cmp
jno
call
test
mov
sti
outsb
or
xor
xchg
hlt
dec
in
or
push
jo
pop
xchg
adc
test
pop
and
jns
pop
stos
push
das
pop
xchg
sub
addr16
or
pop
xor
ret
lahf
sub
add
addl
loope
push
push
mov
push
push
mov
fistl
and
shll
xchg
hlt
les
fbstp
mov
in
inc
cmp
jp
add
ja
xchg
and
or
sub
in
mov
or
mov
jg
stos
jne
jno
push
popl
fwait
adc
bound
xchg
mov
les
fdivr
inc
jle,pn
repnz
lods
pushf
adc
push
push
push
test
lahf
es
add
xor
mov
dec
mov
jnp
sub
in
jl
dec
scas
lcall
push
in
movb
sahf
push
xchg
clc
outsl
push
call
insl
out
jmp
xlat
pop
cmp
cmpsb
pushf
rolb
call
mov
pop
xchg
xor
loop
sbb
shr
mov
shrb
inc
aad
jmp
jp
outsb
pushf
add
mov
sbb
jb
adc
pop
sub
cmp
lahf
es
xchg
xor
push
shrl
lea
inc
add
adcb
fxch
call
pop
pusha
cmp
push
add
push
jno
scas
adc
sti
mov
xchg
in
or
jle
adc
sbb
lods
aas
dec
faddp
mov
inc
testb
imul
iret
mov
push
cmp
and
fsub
jmp
add
addr16
push
stos
mov
inc
add
aad
mov
outsl
popf
cmc
popa
xor
inc
push
add
sub
pop
mov
shlw
fcoms
xor
pop
adc
out
repz
mov
fidivl
fbld
jno
jo
xor
lock
pop
push
bound
xor
lock
fs
or
mov
and
mov
imul
popf
sub
xchg
scas
or
ret
cmp
jle
fwait
lcall
mov
cmp
xchg
mov
sbb
sbb
mov
and
js
cmp
popa
jo
inc
mov
xor
imul
and
push
je
pop
aaa
mov
iret
aas
mov
das
scas
rorb
les
sbb
and
std
std
ljmp
hlt
dec
and
je
jge
lcall
rcll
cmp
and
pop
jnp
or
enter
push
push
std
sarl
aad
pop
outsb
add
in
mov
imulb
jle
loope
xor
roll
pop
imul
xchg
aad
dec
xor
stc
aam
ror
ss
notl
test
inc
into
andb
shlb
enter
push
or
xorl
xor
icebp
dec
mov
add
adc
or
add
pop
movsl
cmc
inc
outsb
inc
jge
cltd
inc
dec
add
adc
pop
xchg
test
rcr
adc
addr16
les
mov
add
pop
int
lds
scas
pop
ret
xchg
jge
repz
std
sbb
out
sub
imull
mov
mov
pop
lods
frstor
jle
popf
cs
mov
shrb
xchg
jle
sbb
jne
adcb
out
sarb
pop
cld
addr16
aaa
push
jmp
xchg
sbb
mov
dec
les
fldt
jp
and
pusha
and
push
dec
add
ljmp
pop
xor
pusha
int
test
push
sub
add
jge
and
dec
cli
loop
xor
add
loopne
pop
xchg
xor
popf
lock
push
jns
sti
ljmp
cmpb
sarl
lea
mov
data16
cld
stc
cwtl
adc
mov
rolb
outsl
jle
xchg
frstor
popl
sbb
outsb
aaa
subl
and
fidivrl
in
testb
mov
mov
xchg
jae
jbe
sbb
cmp
push
inc
mov
into
daa
jecxz
or
inc
and
dec
inc
les
gs
sub
fldenv
xor
aaa
xchg
je
sbb
adc
test
insl
mov
xor
imul
cmp
testl
adc
inc
add
xor
pop
mov
add
mov
cmp
push
into
xchg
add
outsl
mov
push
into
mov
pushf
inc
inc
loop
iret
mov
sti
mov
flds
setp
fmuls
jne
sub
stos
les
idivb
shll
roll
pushf
xlat
or
je
mov
mov
cs
int3
shlb
shll
cld
mov
cwtl
out
pop
out
lret
mov
add
lods
xor
sbb
in
fwait
call
jmp
cmp
cmp
data16
xchg
sub
sub
test
pop
nop
lods
scas
fbstp
jb
jg
jbe
aad
rcl
gs
add
stc
adc
mov
push
ret
andb
insb
int3
negl
jg
push
dec
jp
repnz
xchg
adc
push
rcl
and
out
xchg
jp
inc
pop
jae
lret
xlat
mov
and
insb
cmpsb
xchg
iret
pusha
loope
sbb
ljmp
mov
es
xchg
nop
int3
int3
mov
mov
inc
mov
adc
mov
outsl
push
sbb
js
mov
or
aaa
addr16
rcl
jge
ss
fsub
and
inc
data16
sub
adc
jo
and
sbb
or
mov
add
xor
es
cli
int3
adc
das
jle
test
sbb
mov
nop
insl
les
daa
sbb
sub
inc
dec
sbb
mov
mov
repz
iret
popf
nop
sbb
push
shl
jge
int
mov
ds
out
aad
sub
sbb
inc
xchg
cltd
gs
icebp
mov
repz
xchg
xchg
into
movsl
inc
mov
push
cmpsb
filds
mov
stc
push
stc
or
cmp
cmp
cli
xor
movsb
lock
das
sbb
jecxz
mov
push
data16
aad
adc
ss
nop
aas
push
fcmovu
or
or
test
cmp
xor
xchg
and
xchg
xor
gs
dec
movsl
lahf
repz
rcrl
push
mov
and
in
jmp
sub
lea
jb
popa
cmpsl
jnp
int
mov
fsubs
fisubs
inc
lcall
lock
jp
xor
jl
mov
jl
jle
sbb
daa
jae
and
mov
insb
xor
add
xchg
scas
adc
push
subb
cmp
push
mov
rclb
xchg
in
ror
xchg
pop
mov
xlat
mov
in
data16
popf
mov
push
mov
das
or
xor
stos
cmpsl
or
jno
or
addr16
adc
xchg
lds
add
ficompl
movsb
mov
popa
inc
cld
repnz
lret
insl
inc
cltd
stc
and
inc
enter
xor
xor
stos
jecxz
xor
stc
cld
outsl
sbb
jle
rcr
out
push
add
xchg
pop
filds
enter
pushf
adc
out
adc
repz
or
jns
idivb
add
idiv
sbb
inc
pop
push
dec
mov
les
shr
roll
cmpsb
xchg
lcall
jne
mov
and
push
negb
push
jno
xlat
lock
xor
jge
iret
and
mov
in
xchg
ja
daa
andl
sub
pop
hlt
leave
push
ljmp
push
push
repnz
mov
push
cwtl
ret
arpl
bound
out
cltd
xchg
mov
xchg
sub
sbb
sub
dec
cwtl
data16
fdivrl
cld
dec
cmp
xor
lcall
and
inc
outsl
pushf
out
pop
fstps
pop
adc
inc
xchg
mov
dec
mov
mov
sub
test
mov
cmp
mov
push
ficoml
xchg
scas
idiv
fdivrs
sbb
cmp
mov
sar
xchg
sbb
sbb
movsb
sub
popf
imul
dec
ret
cs
jbe
out
sar
push
jne
cmp
fadds
add
and
pop
ja
es
outsl
sbb
sub
cmp
ficomps
fsubrl
fucomip
sub
iret
js
dec
pop
lcall
test
sti
pop
mov
por
out
and
push
aaa
ss
pushf
mov
stc
jecxz
je
dec
pavgb
call
stc
das
shufps
jno
mov
cs
sub
push
mov
sub
imul
cmp
inc
arpl
addr16
jecxz
jmp
nop
push
push
test
ret
adc
mov
mov
pop
adcl
das
fwait
ja
ret
cltd
inc
mov
iret
loopne
test
dec
mov
adc
pop
std
pop
in
ja
cltd
mov
mov
movsl
insb
loope
add
pop
add
int3
and
pusha
mov
inc
aam
mov
insb
gs
push
cmp
ret
sti
addr16
in
stos
int
pop
fisubrs
push
adc
movsb
std
in
imul
je
mov
and
push
push
sahf
inc
repnz
xorl
pop
pop
ret
pop
mov
sub
dec
mov
cmpsb
pop
aam
and
jmp
dec
clc
dec
sbb
imul
test
test
mov
les
lcall
push
sbb
pop
add
push
js
and
mov
lcall
pop
stc
cmp
or
xchg
pop
mov
movsl
insb
imul
or
xchg
sub
adc
stc
cwtl
scas
and
hlt
cmc
in
fs
daa
enter
pop
movsb
lock
adc
and
cltd
adc
mov
cmp
ss
cmp
outsb
mov
mov
clc
mov
ret
push
jbe
push
je
cwtl
adc
outsb
outsl
adc
push
addl
dec
mov
ja
push
lahf
divb
aas
jge
mov
mov
sbb
imul
mov
fisttpll
xchg
mov
fiadds
sbb
jle
add
fildll
cmp
jp
jp
fs
aaa
add
hlt
sbb
inc
cmp
lods
insl
sbb
es
pop
loopne
aas
jb
sti
fbstp
in
fwait
push
stos
cmp
xchg
sbb
fcmovne
dec
ja
shrl
pop
sub
inc
sti
aad
out
xchg
int
inc
fistps
xor
addr16
inc
stos
jge
popf
into
rcll
fiaddl
mov
and
inc
andb
dec
cltd
ljmp
pop
add
cmp
pop
mov
dec
sbb
mov
out
les
mov
shrl
or
cltd
rcrl
jge
mov
or
xor
mov
push
inc
xor
int3
sub
mov
dec
mov
or
jne
or
inc
int3
icebp
mov
fists
test
leave
or
outsb
sub
dec
push
dec
cmp
mov
je
or
fwait
mov
or
push
cmc
or
lock
orl
xor
or
aam
sub
jo
and
mov
add
xchg
js
jbe
ljmp
in
xchg
mov
lahf
mov
cmpsb
inc
cs
cmovo
into
sub
shll
insb
jb
mov
dec
xchg
and
mov
push
rorb
dec
iret
mov
rol
add
cmpb
mov
or
pushf
ljmp
popa
scas
int3
int
outsl
mov
in
cmp
mov
clc
repz
dec
adc
xchg
and
mov
and
or
cwtl
adc
xchg
jl
push
inc
xchg
jbe
pop
stos
mov
mov
pushf
aad
aaa
mov
mov
call
sbb
xchg
clc
bnd
adc
push
mov
add
lock
mov
push
dec
int
loop
stc
cmp
xchg
push
in
pop
mov
adc
xchg
sbb
data16
sub
push
xlat
jl
cwtl
pusha
mov
inc
fadds
imull
xlat
sti
pop
int
and
push
clc
inc
aam
pushf
jae
cmc
fsubr
jbe
ljmp
pusha
cmpsl
testb
cwtl
jno
and
sub
scas
arpl
pop
loopne
insl
xchg
andb
add
mov
les
sub
mov
xchg
push
inc
mov
adc
movsb
pop
fmull
cmp
pop
lahf
push
xlat
mov
push
jno
lret
mov
cmp
xacquire
xor
scas
orps
roll
sub
cmp
xchg
fldcw
imul
push
jne
and
iret
xchg
repnz
cld
fdivl
xlat
dec
adc
push
test
mov
xor
in
or
fists
cmp
xchg
arpl
jnp
mov
xchg
lods
or
cmp
cmp
adc
push
mov
pop
mov
scas
add
inc
push
xchg
sub
mov
scas
cli
into
fstpt
pop
rorl
stc
aam
xchg
xor
mov
fstps
inc
inc
cmp
mull
aam
sub
xor
call
mov
sbb
sarl
popa
sahf
dec
mov
data16
stos
adc
inc
stos
scas
cmp
cmc
and
mov
test
xlat
mov
xchg
pushf
pop
es
pop
xchg
rcrl
ja
mov
xchg
xor
orl
xchg
gs
in
push
cmp
inc
xchg
aam
push
jl
fistpl
leave
decb
pop
imul
popf
pop
mov
add
es
mov
cmp
pushl
fsubs
out
sarb
sbb
xchg
pusha
icebp
cmp
scas
movsb
shll
xchg
jmp
inc
arpl
lds
test
mov
push
and
cmp
icebp
cmc
out
cmp
outsb
sub
js
in
pop
xchg
push
add
mov
sbb
jge
add
mov
inc
jae
inc
mov
and
mov
add
hlt
sub
repz
lcall
loopne
and
movsb
les
mov
or
mov
leave
add
inc
xchg
ja
adc
mov
dec
add
inc
rorl
mov
or
jbe
add
jmp
lock
push
inc
rol
inc
in
inc
data16
aaa
dec
pop
dec
jmp
cmpsl
push
and
jecxz
outsl
subb
xchg
dec
stos
int
inc
mov
jecxz
fcomps
mov
pop
pop
aas
out
mov
cld
xchg
sbb
inc
pop
dec
jp
add
imul
loopne
dec
aas
push
inc
pop
add
clc
daa
in
out
cmpsl
dec
lahf
cmpsl
push
lock
mov
mov
mov
std
ja
cs
jnp
faddl
inc
fisttpl
fstpt
repnz
rorl
mov
xchg
ret
mov
test
inc
push
sar
or
cld
out
out
jg
aam
testl
ret
fidivrl
insl
adcl
fmull
nop
int
cmp
fidivrs
push
mov
xlat
sbb
mov
push
repnz
xchg
addr16
loop
dec
mov
or
and
jp
dec
mov
dec
outsb
push
or
rcrl
pop
add
lods
inc
leave
fwait
loope
jns
imul
jns
dec
imul
dec
les
adc
push
dec
xor
lret
stos
push
xlat
xchg
sti
jae
xchg
and
loopne
add
sti
jns
or
dec
push
arpl
mov
push
add
jbe
scas
sahf
lahf
push
in
popf
jns
xor
setge
rcll
push
mov
and
cmc
jb
push
xchg
aaa
xchg
jb
push
cmp
push
mov
in
lahf
in
in
add
lahf
add
cmp
cmp
test
nop
push
loop
popf
shll
aam
adc
mov
js
add
jo
sub
sub
add
push
xchg
cli
in
popa
sub
pop
inc
test
jge
and
xchg
std
push
jl
fcompl
pop
out
les
sbb
es
data16
clc
mov
dec
xlat
das
adc
pop
lock
mov
sahf
cmp
shrb
mov
lcall
int
cwtl
loopne
cmp
cwtl
or
inc
push
mov
movsl
fdivrp
mov
pop
xor
pop
mov
xchg
xchg
dec
lcall
imul
push
push
lahf
dec
adc
mov
cmpsb
jno
cmpsl
fmull
xchg
mov
lods
mov
fldlg2
int3
rcr
push
sbb
outsl
out
push
cmp
fstl
je
pop
cmp
hlt
scas
mov
pop
lret
gs
fildll
incb
out
mov
sar
and
ficompl
mov
and
sub
mov
es
das
shrb
in
popa
nop
jae
lock
test
repz
out
xor
pop
ja
js
rep
xor
fmul
nop
test
sbb
inc
inc
orb
imul
or
subb
sbbl
sti
movsl
mov
fmull
add
aas
mov
or
sbb
addr16
addr16
stos
int
add
or
jge
inc
into
sahf
and
cmp
rolb
iret
jno
loop
sub
sbb
pop
push
arpl
jnp
cmpsl
and
ret
and
les
mov
loope
adc
jl
aam
les
sub
sub
add
pop
or
mov
cmp
inc
xor
mov
push
popa
pop
es
out
popa
sub
jp
sbb
jbe
cmp
rclb
test
or
inc
adc
mov
inc
es
in
xchg
movsl
fucom
sub
pop
push
cmp
addr16
jp
sub
test
outsb
inc
or
and
dec
dec
das
les
or
addl
or
into
mov
ret
jno
movsb
mov
dec
pop
xor
in
std
in
pop
aas
push
shl
jge
mov
rclb
adc
pop
ljmp
incb
or
dec
sti
imul
test
jne
ja
push
mov
sbb
fwait
push
stos
xchg
add
jns
push
mov
stc
cmpsb
inc
dec
jne
xor
cmpsl
es
out
cmp
cltd
pusha
inc
jle
cmc
jne
jg
ja
mov
es
cld
mov
push
mov
rcrl
xchg
pusha
cwtl
sbb
and
and
dec
fdivl
imul
flds
leave
dec
sbb
sub
subl
mulb
notb
xor
jg
dec
sub
pop
push
mov
mov
ja
mov
out
xor
sbb
idivl
sti
sub
arpl
jmp
iret
lcall
xchg
les
xchg
mov
push
push
sub
push
fs
rdmsr
mov
ss
test
jl
dec
cmp
xchg
jg
xor
xor
push
sbb
lods
jmp
test
cmp
mov
sarl
jne
xlat
cli
sbbb
pop
xchg
push
xchg
sbb
cmp
mov
pop
aaa
mov
add
aas
mov
sub
fistps
movsb
orl
dec
es
iret
stos
cltd
cmp
add
aam
cmp
outsb
xchg
push
inc
scas
and
sub
xchg
movsb
into
jg
imul
incb
sub
xor
pop
frstor
and
mov
cwtl
push
int3
repnz
cmc
sub
es
inc
jns
adc
test
xor
xlat
mov
and
hlt
sbb
sti
in
test
je
aas
ret
cmc
mov
repz
cmp
loop
out
aam
jmp
fnstcw
push
mov
dec
in
inc
dec
mov
sub
xchg
add
lahf
adc
sub
addr16
push
scas
test
ss
add
dec
mov
shrl
mov
in
jnp
mov
xor
dec
mov
jecxz
lahf
in
mov
dec
cmp
imul
call
ret
shll
dec
insb
pop
xor
shlb
scas
insl
jne
xchg
add
xor
inc
sbb
sub
jns
adc
cmp
sbb
out
imul
pop
addb
pop
pop
and
dec
iret
ds
pop
addr16
and
add
xchg
pop
and
stc
or
out
fwait
xchg
inc
add
and
jbe
mov
xchg
push
mov
out
or
pusha
jecxz
mov
adc
test
dec
and
lock
movsl
andl
or
inc
pop
pop
fcoml
sbb
or
xchg
imul
int
add
mov
std
addr16
faddl
sub
jns
inc
push
mov
inc
daa
xchg
adc
nop
sbb
push
aas
imul
rcll
stos
inc
mov
fldt
hlt
inc
rclb
repnz
inc
inc
cltd
inc
rorb
pop
adc
xchg
test
cmp
dec
mov
mov
cmp
mov
jb
fldenv
div
add
and
lods
inc
outsl
or
std
stos
sarb
pop
dec
cs
out
and
xor
mov
pop
pushf
jl
lock
pop
test
orb
mov
or
repnz
and
jg
cmp
inc
insl
repnz
add
cmpsb
lods
out
xor
mov
in
movsb
fsts
sbb
jl
adc
mov
pop
fs
arpl
cmp
sbb
gs
shlb
frstor
dec
mov
xor
add
fdivl
les
lret
inc
xchg
cmp
push
pop
js
push
movsl
jp
bound
dec
push
or
adc
xchg
sbb
out
cmp
and
ret
xlat
sbb
adc
jp
xchg
xchg
jno
arpl
imul
dec
lret
popf
sbb
push
push
rclb
cmpsb
adcb
and
mul
mov
cmp
sub
das
jb
sar
into
mov
cmpsl
jl
in
pop
add
adc
fldl
xor
in
cmpsl
xor
fcmovu
xor
clc
add
add
xor
es
scas
cltd
jb
pushf
push
ja
cmpsl
or
sbb
decb
stos
scas
jp
xor
sub
loope
jo
and
in
xor
dec
outsb
sbb
cli
insl
ljmp
mov
in
and
into
adc
add
jbe
jmp
mov
ss
xchg
sarl
out
mov
loope
pop
push
jnp
pop
push
pop
pop
addl
decl
cs
mov
jne
fisttpll
in
add
out
or
push
jp
cmc
dec
fisttpll
and
sub
stos
add
icebp
xchg
ljmp
push
or
bound
stos
inc
ljmp
cmpsl
in
lret
shlb
popa
lds
mov
and
mov
push
jnp
dec
or
sub
hlt
insl
add
ljmp
pop
sub
rcrl
enter
rclb
fisubrl
cmp
add
insb
sub
jnp
mov
adc
test
in
push
ret
js
dec
xchg
jo
outsl
ficoms
xor
jmp
jg
outsb
in
jb
add
mov
sub
cmpsl
repz
mov
pop
mov
push
cmp
mov
sub
adc
in
inc
mov
push
fisttpll
in
fiadds
cld
fildll
xchg
inc
adc
insb
orl
sub
andb
mov
mov
cmc
incb
aaa
xchg
cmpsl
outsb
aas
imul
jno
jmp
inc
stc
sbb
aad
mov
jg
push
and
xchg
and
cld
inc
adc
sub
repnz
ss
mov
add
sub
mov
push
subl
lods
and
sub
push
sar
cmpsl
push
jne
call
sub
pop
pop
adc
js
lahf
dec
jg
mov
or
aam
pop
lods
mov
mov
shll
mov
pop
call
rcrl
jmp
xlat
add
mov
add
xchg
jnp
repz
xor
add
icebp
pop
mov
dec
in
xchg
cltd
pusha
out
mov
mov
cbtw
in
mov
aam
fldl
xchg
iret
sub
sub
mov
adc
imul
adcb
mov
push
das
imulb
inc
sti
pop
shrb
mov
jae
packsswb
stc
shll
adc
dec
add
pushf
inc
push
mov
jmp
jle
mov
imulb
dec
adc
mov
cld
mov
mov
je
insb
imul
mov
xor
xor
in
in
pop
shll
dec
lcall
mov
inc
or
adc
xor
jle
insb
notb
rorl
cmp
cmpsb
out
push
xchg
into
mov
lock
icebp
repz
cmp
sub
out
outsl
cwtl
stc
jg
fs
aad
cld
out
sbb
lds
mov
ficomps
je
icebp
jne
and
sbb
testb
dec
ret
out
sbb
arpl
arpl
xor
adc
in
test
in
xor
lea
xchg
adc
das
adc
bound
add
mov
les
js
fistl
repnz
mov
repz
and
cmp
cli
jmp
cli
xor
push
lahf
mov
push
sub
add
or
mov
jns
pop
push
ss
sahf
mov
in
mov
xchg
adc
adc
cmc
mov
pop
jp
inc
mov
or
out
pop
lcall
jl
push
cmp
push
mov
mov
js
cld
mov
pinsrw
inc
inc
das
loopne
in
call
jae
lahf
jmp
xchg
or
stos
stc
sti
or
dec
mov
add
push
cmc
mov
shrl
jno
cmc
and
and
add
xor
push
popf
dec
jnp
push
cmp
call
mov
xor
cmpsl
adc
add
imul
rol
dec
jb
push
ror
not
mov
test
jb
arpl
mov
sub
test
mov
jge
clc
test
mov
adcb
sbb
mov
and
jb
movsb
ror
sbb
pop
ret
call
cmp
insl
lock
jno
daa
jbe
mov
insb
adc
or
daa
js
pop
and
je
lds
sbb
cmp
pop
jecxz
jl
sbb
push
mov
push
jle
ret
jbe
mov
mov
sbb
jp
sbb
mov
add
testb
adc
sti
pop
loop
in
inc
push
mov
pop
push
push
dec
xor
push
jmp
fldt
pusha
hlt
iret
out
orl
add
das
mov
icebp
test
mov
mov
pop
fldpi
lcall
jo
repz
inc
mov
loope
insb
pop
aad
stos
insb
pop
sbb
cmp
dec
outsl
data16
test
lret
aad
lock
ret
add
mov
gs
cmpsb
in
inc
push
mov
add
call
push
or
je
inc
or
mov
push
psraw
xor
or
mov
sbb
sbb
push
cs
aad
adc
and
xor
ret
stc
pusha
cli
sub
lea
or
sub
mov
jno
push
arpl
cld
cmpsb
mov
mov
jl
ja
out
pop
jge
xor
dec
bnd
xchg
repnz
xor
cmp
pop
addr16
ds
and
shr
test
int3
movsl
adc
imulb
std
testb
adc
dec
xor
aad
or
xchg
fwait
and
jecxz
mov
pop
pop
lea
in
in
sbb
cmpsl
inc
int
dec
push
js
jmp
push
mov
rcl
lock
jmp
add
fs
fisubs
sbb
fstps
out
in
movsb
mov
fwait
xchg
cmp
sub
mov
push
pop
xor
mov
mov
mov
adc
loopne
sbb
xchg
sti
or
sub
xchg
es
addb
add
out
imul
out
dec
dec
sub
mov
jle
xor
dec
xchg
mov
push
lret
lock
ljmp
das
dec
outsb
xchg
aad
add
push
inc
outsl
xlat
dec
add
aad
push
inc
mov
xor
pop
mov
outsb
push
jns
arpl
lods
or
xlat
sub
xchg
inc
mov
inc
sub
sbb
cmp
sub
jne
sub
pop
movsb
int
out
iret
add
or
ficomps
mov
sbb
mov
sarl
cmp
cmp
xchg
mov
lods
repnz
aas
call
sahf
je
ja
adc
into
shrb
js
and
xchg
mov
sub
and
jae
xorb
add
incl
pop
inc
add
mov
pop
out
cwtl
and
pop
fadd
pop
inc
dec
push
pop
insb
jmp
fwait
cli
push
shlb
daa
shrl
lcall
icebp
insb
in
fs
rolb
adc
xlat
cmp
aam
xor
dec
sti
rorl
mov
pop
les
and
xor
jmp
dec
adc
shll
adc
mov
lret
cmpl
in
inc
stos
mov
cmc
repz
ficoms
insb
js
aas
ljmp
pop
adc
or
shl
xchg
xlat
test
loopne
dec
mov
subl
mov
xor
push
pop
enter
lret
pop
sbb
mov
stc
sub
jp
nop
out
aad
cmp
lods
mov
mov
dec
aaa
lret
je
sbbb
push
sarb
stos
add
sub
in
pop
stos
fcmovne
xchg
es
out
mov
sahf
inc
lock
outsb
xor
int
jo,pt
gs
in
aam
mov
scas
test
sbb
and
enter
xchg
ret
repnz
lret
xchg
out
push
cmpsl
out
outsl
fildl
inc
std
jmp
insb
mov
and
imul
mov
push
xor
shrb
push
stc
jmp
aas
sbb
xchg
jle
lcall
xor
mov
and
jmp
js
or
xlat
fdivrp
or
movsb
ret
and
movsl
jle
sti
movsl
icebp
clc
loope
call
pop
aam
shlb
fs
mov
jae
mov
dec
inc
and
mov
adc
das
sbb
push
push
xor
stos
add
inc
mov
ja
dec
push
xor
mov
or
repz
cmp
les
mov
cmpsb
fucomi
xchg
jmp
shll
shrl
xchg
and
push
les
dec
movsb
arpl
stos
addl
mov
bound
imulb
xchg
cmp
pop
ret
inc
dec
pushf
pop
mov
push
cmp
xor
dec
inc
inc
sarl
lods
adc
fidivl
pop
repz
lret
inc
mov
sub
movsl
mov
dec
push
insb
dec
inc
test
lods
dec
shll
sbb
push
sahf
jg
add
inc
cmp
cld
sub
lcall
inc
adcl
mov
mov
sbb
push
lock
push
mov
pop
movsb
push
sub
test
outsb
arpl
cmp
pop
cmc
mov
setne
sti
mov
pop
out
jl
movsb
das
add
pop
int3
rol
jb
cmpsb
xchg
xlat
jl
add
nop
sti
sahf
insl
imul
pop
into
fisubl
xor
leave
mov
adc
xor
jbe
xchg
shrl
push
pusha
movsl
es
popf
imull
mov
lock
out
pusha
popl
pop
daa
xor
mov
inc
lret
xor
pop
movsb
jge
cmp
jecxz
ss
push
mov
movsb
adc
cmp
lahf
inc
pushl
push
adc
das
cmp
dec
adc
js
outsl
ja
aam
insb
arpl
xlat
inc
xchg
lds
push
push
shl
lret
jae
and
in
rclb
mov
in
rcrl
mov
outsb
arpl
and
emms
out
xlat
lcall
movsl
xor
or
sbb
adc
cmp
jae
enter
popa
push
mov
leave
arpl
jno
lahf
jmp
mov
into
and
dec
lods
std
jmp
dec
movsl
pop
mov
das
les
mov
call
out
add
and
loopne
xor
popa
testb
sbbb
dec
and
jae
jg
add
outsl
inc
xorl
inc
add
jle
dec
in
fdivr
jae
andb
rcr
push
cmpsb
jbe
cwtl
mov
pop
sbb
cmp
push
ret
inc
xchg
jecxz
push
ss
and
pop
fwait
aas
outsl
push
xchg
pop
ret
int
loope
xor
push
leave
fs
ja
imul
outsl
call
jmp
out
enter
xchg
xchg
and
xchg
in
outsl
xor
stos
sub
inc
int
sbb
push
jbe
xor
out
imull
outsl
out
xor
in
je
lret
adcl
imul
mov
repnz
sbb
xor
clc
pop
rclb
lds
ss
cld
inc
mov
sti
adc
bound
xchg
mov
jns
iret
insl
dec
rcr
mov
xchg
loopne
add
jno
cli
cli
fdivrs
add
push
fldl
mov
loope
jbe
std
daa
pop
push
pop
or
leave
xlat
sub
fidivl
loop
inc
sub
outsb
lods
mov
outsl
cmpsb
fwait
repz
mov
xor
cmpsl
pop
jge
sbb
add
mov
psrlq
addr16
mov
mov
or
push
pop
mov
cmpl
inc
cld
inc
je
je
xor
clc
sbb
and
ds
or
jbe
jo
pusha
or
test
fistps
cli
pop
fists
test
and
cs
push
mov
stc
lods
in
mov
loope
fcmovu
jecxz
dec
dec
sub
mov
xchg
mov
cli
cs
add
push
sbb
mov
bound
imul
mov
out
negb
cmp
pop
mov
and
lcall
pmullw
push
test
pop
push
jo
into
lods
ljmp
cmpsl
out
lods
stos
xor
ljmp
inc
adc
push
cmp
or
xchg
iret
jae
cmp
fldt
aam
and
pop
lret
loope
xor
loop
nop
sbb
add
xchg
insl
test
inc
sub
lock
push
andl
xchg
aad
das
adc
int
mov
fldt
xor
mov
or
in
stos
push
leave
pushf
gs
xchg
out
and
mov
mov
adc
push
or
and
out
or
fldl
fs
pop
push
out
jge
addr16
adc
aaa
xchg
es
mov
mov
fisubl
mov
pop
sub
pop
lret
pop
pop
out
rolb
shlb
pop
push
add
rclb
xchg
lcall
cld
xlat
ficoml
out
mov
cwtl
hlt
icebp
ret
addr16
mov
faddl
mov
dec
mov
mov
es
mov
lods
lods
fidivs
popf
ja
xchg
ljmp
in
aaa
lock
dec
stos
dec
and
testb
mov
pop
pusha
popf
cmp
jns
mov
xchg
mov
gs
sub
lret
stos
mov
lods
xchg
gs
cmp
rclb
cmpsl
sub
cmp
push
fs
shl
cld
mov
sbb
cli
cs
xor
out
je
loopne
pop
mov
xchg
inc
fs
jp
xor
inc
cld
dec
inc
xchg
jmp
xor
lock
jmp
push
add
imul
adc
outsb
fadds
push
mov
and
mov
sub
shrb
cmp
std
shll
sub
mov
into
popf
jnp
xchg
adc
ret
ss
int
lds
repnz
cmp
movsl
lds
arpl
mov
lock
cmp
xor
outsl
inc
inc
jns
mov
shlb
adc
dec
lods
dec
lds
es
or
movsb
out
cmp
and
int3
add
inc
out
aam
xchg
dec
imul
dec
js
dec
pop
add
mov
gs
cmp
call
cld
stos
aas
hlt
xchg
xor
sbb
jae
in
mov
mov
jno
repnz
sub
call
mov
pop
lahf
pop
mov
into
jne
icebp
sti
out
push
push
mov
bound
mov
cmp
arpl
xchg
sbb
sarb
loop
ret
mov
push
push
insb
adc
sbb
push
mov
push
pmulhw
mov
sub
inc
push
mov
or
data16
cli
sub
xchg
xchg
xchg
shrb
aaa
push
jp
xchg
cmpl
dec
xlat
jnp
xor
or
xchg
ret
in
jae
inc
test
dec
stos
cmp
in
sub
xchg
push
lret
loope
not
das
adc
sbbl
xor
cmpsl
mov
jmp
hlt
movsb
imul
xor
xchg
lock
into
mov
movb
repz
fwait
xchg
shlb
mov
dec
pop
pop
out
adc
nop
pushf
inc
mov
movsb
mov
stos
xor
mov
jae
scas
iret
test
or
mov
fsub
int3
and
fs
dec
lods
push
xor
sub
out
push
jl
sbb
push
pop
ja
push
mov
sbb
dec
add
test
shl
or
aaa
sub
hlt
jbe
lcall
mov
jno
out
xor
fldcw
sub
jecxz
sub
es
sbb
int3
fwait
fs
xchg
and
mov
icebp
shlb
mov
xor
pop
out
push
hlt
inc
mov
sub
mov
out
mov
pop
icebp
inc
lods
sbb
cmpsl
mov
test
add
idivl
imul
jmp
inc
mov
dec
arpl
cmp
in
rolb
stc
dec
shl
push
fiaddl
lods
jle
add
sub
insl
cli
ror
push
adc
xor
mov
push
mov
fwait
lods
rcrb
iret
or
push
mov
jecxz
pop
in
aad
push
and
cltd
mov
xor
into
xlat
lds
fildll
add
push
test
dec
les
pop
xor
fwait
jmp
xor
test
out
negb
cmp
aad
outsl
fs
outsl
sbb
push
dec
ret
mov
mov
add
jle
test
push
sbb
fdivrs
and
out
dec
aaa
ds
cmp
sub
mov
dec
cmc
sbb
movsl
lret
imul
stos
xchg
mov
adc
jg
pop
stc
pop
and
pop
jno
popf
outsl
gs
xor
jnp
xchg
inc
rclb
dec
xchg
cld
loop
rcrl
in
mov
sub
mov
xlat
push
dec
imul
mov
add
jnp
hlt
mov
cmp
cli
mov
jecxz
jnp
mov
jo
push
inc
push
mov
adc
int
movl
arpl
outsb
aaa
inc
out
fs
rcr
int
sbb
adc
shll
lock
mov
sahf
mov
ja
fists
mov
lret
jg
mov
inc
mov
mov
jnp
mov
xor
out
push
gs
cmp
jno
fprem
loope
cmp
rorb
mov
mov
sbb
iret
xchg
addr16
jno
daa
and
xor
dec
fildll
ljmp
pop
sub
fcomps
outsb
sbb
leave
lcall
pop
cli
xchg
pop
inc
cmp
nop
lea
mov
xorb
mov
mov
dec
jmp
fbstp
or
es
mov
aam
jbe
and
jle
xchg
vdivpd
sbb
dec
push
adc
add
loopne
cli
lods
int3
jmp
dec
popf
and
out
mov
imull
push
add
push
jmp
pop
fbstp
pop
inc
movsb
add
rol
stos
add
push
or
mov
push
fstpt
in
fnstenv
or
pop
dec
out
inc
shll
adc
negb
arpl
in
shlb
lods
dec
add
in
adc
mov
jb
mov
cmpsb
insb
jae
ret
mov
cmpb
dec
jecxz
clc
insb
xchg
ficomps
faddp
ret
mov
or
lret
call
enter
mov
shl
lods
sub
and
jl
out
mov
mov
rclb
mov
push
ljmp
mov
xor
sbb
repz
dec
lock
popa
insl
subb
dec
dec
cmp
rorb
mov
jnp
mov
pop
jbe
imul
cmp
and
push
cmp
in
xchg
repnz
inc
cld
stc
mov
lcall
or
outsl
mov
dec
or
in
test
fldl
or
cltd
popf
mov
enter
mov
ficompl
mov
lret
jae
cltd
fisttps
fimull
jg
dec
hlt
xchg
jbe
in
fwait
xchg
xchg
std
dec
std
idivl
push
push
sbb
push
mov
push
icebp
and
sub
pop
jge
jno
add
dec
out
sahf
jecxz
adc
xchg
enter
mov
xor
dec
jle
mulb
sahf
mov
jns
jp
iret
mov
or
xor
ret
sub
out
mov
cli
and
inc
mov
dec
in
dec
mov
mov
inc
sbb
fcmovne
pop
add
lcall
and
mov
cmp
xor
push
fidivrs
push
sub
jge
roll
xchg
je
jo
out
mov
data16
ja
ja
adc
mov
ljmp
daa
outsb
clc
shlb
mov
jmp
and
cmp
xchg
adc
jp
ror
in
lea
push
add
icebp
fsubs
aaa
jl
mov
sbb
pop
aam
aad
and
or
mov
cmc
test
clc
out
je
mov
sub
into
or
inc
xor
cmp
cmc
rolb
pop
xchg
xor
mov
ret
test
repnz
adc
adc
fisttpl
int3
imul
jae
pusha
int3
nop
xchg
rcrl
stos
adc
out
andb
push
cwtl
movsb
mov
adcb
push
roll
sti
pop
push
jbe
mov
pop
xorb
je
pop
jb
aam
cmp
jbe
sarb
jmp
imul
icebp
inc
push
sbb
dec
sbbb
ljmp
push
xchg
repnz
fldl
les
jecxz
cmp
data16
xor
loopne
xor
jg
push
xchg
inc
imul
ja
mov
bound
leave
pop
sahf
mov
mov
sub
or
mov
outsl
cltd
dec
addr16
inc
pop
add
mov
call
dec
or
es
add
jno
je
dec
xor
and
xchg
dec
ljmp
and
adc
mov
fists
xor
fisubrl
cli
iret
adc
and
push
lea
lea
sub
loope
jo
cwtl
mov
test
or
jg
dec
test
xchg
and
cmp
xchg
pop
inc
dec
fdiv
or
sub
mov
outsb
outsb
inc
or
out
cmpsl
dec
pop
or
dec
pop
mov
cmp
push
xor
xlat
pop
adc
cmp
js
sbb
pop
adc
cs
pop
cmpsl
enter
mov
xor
push
repz
adc
inc
int3
lds
xchg
xor
out
pop
mov
frstor
push
neg
xor
pop
popf
jae
xor
mov
aas
into
inc
out
in
pop
rcrl
das
mov
push
into
flds
jmp
mov
insl
fnsave
call
lahf
subl
ret
cli
rep
std
xor
cmp
pushf
push
xchg
lods
lds
dec
mov
xchg
repz
popa
out
xchg
stc
sub
mov
pop
pop
das
fcoms
fsubrs
push
xor
sbb
xor
add
rorl
lds
cmp
dec
add
mov
jnp
cli
clc
mov
mov
sub
aad
aad
pop
outsb
iret
lret
dec
lds
pusha
adc
cmpsl
pop
adc
cmpsl
shlb
fbld
xchg
jbe
mov
lret
shrl
cwtl
mov
jnp
fstpl
jae
loopne
mov
cs
incb
out
inc
aaa
pop
lret
dec
adc
fiaddl
adc
ror
push
cli
sub
cmp
stc
rdpmc
clc
mov
rcl
ret
nop
std
rcl
shlb
inc
dec
sub
push
das
sub
jge
neg
cli
or
sub
or
jo
mov
stos
test
pop
push
pop
pop
fstl
call
lea
les
mov
fcmove
ds
lea
pushf
jno
repnz
xlat
and
adc
out
inc
popf
add
inc
dec
sub
xchg
and
ret
push
icebp
sub
push
and
addl
sub
or
sub
sbb
cmp
cs
es
test
outsb
sub
addl
aam
and
adc
push
push
loopne
mov
int3
or
push
cmp
xchg
mov
mov
dec
sub
push
jmp
fiadds
and
js
in
sub
outsb
nop
stos
es
lods
mov
mov
pop
in
push
std
iret
push
movsl
ret
icebp
sub
mov
std
mov
jnp
mov
jmp
addl
jge
add
scas
push
dec
icebp
mov
mov
out
ja
popl
cmp
insl
xor
aaa
mov
sub
cmp
pop
dec
aam
leave
mov
int
inc
mov
mov
mov
dec
push
pop
pop
xor
shll
mov
or
test
popf
pop
jmp
sti
fisttps
js
stc
jnp
out
in
call
cmp
daa
jb
insl
sub
or
bound
loopne
sbb
sbb
js
dec
mov
cli
gs
lods
movsb
mov
mov
addb
jb
in
sbb
arpl
scas
mov
dec
mov
jl
testl
jg
jnp
test
cld
enter
mov
test
pop
or
icebp
movb
in
jo
in
fst
pop
inc
adc
add
mov
lds
out
repnz
ss
push
xchg
out
push
mov
mov
lahf
push
enter
pop
adc
mov
mov
fisubrs
xchg
jne
cmp
add
add
es
enter
nop
push
adcb
jge
frstor
sub
jmp
cld
jno
addr16
adc
test
xchg
sbb
iret
adc
mov
pop
push
push
daa
lret
std
loope
xor
in
decl
or
adc
sub
loop
sbbb
out
cmp
outsb
js
iret
lret
loopne
fcompl
rol
je
mov
je
inc
or
push
in
rorl
addr16
cltd
rcrl
inc
adc
or
fisubl
and
push
xor
test
mov
mov
push
daa
aas
aaa
sbb
mov
stos
loopne
fs
jmp
repz
jle
inc
xor
ret
out
xchg
pusha
jmp
mov
fldl
in
pop
pop
aas
pop
jge
pop
jno
sbb
ja
nop
ljmp
scas
push
inc
ss
jnp
pop
icebp
stos
ss
inc
dec
cld
xor
int3
cmp
sub
xchg
stos
loopne
push
lock
inc
cld
cld
cltd
or
mov
lods
push
pop
idiv
mov
dec
jno
insl
cmp
mov
roll
push
jo
ret
mov
xlat
push
and
mov
incl
insb
nop
sbb
and
fmul
add
mov
jnp
adc
jb
das
cmp
push
mov
jbe
in
ffree
cmp
mov
addr16
lcall
aas
sub
daa
dec
mov
out
leave
inc
pop
push
pusha
lods
lods
incb
shll
pop
jns
pop
outsl
mov
xchg
mov
mov
jne
jns
and
jnp
into
test
cmp
dec
xor
ret
push
push
ja
inc
addr16
pop
jecxz
ljmp
into
fs
call
bound
inc
cmp
jmp
xchg
outsl
or
lret
lds
cmp
shr
movsl
and
or
daa
cltd
pop
ret
mov
mov
popa
mov
aad
jo
adc
xchg
pop
sbb
xchg
femms
jl
mov
in
mov
mov
cs
int
adc
pop
loope
nop
cli
pusha
sub
xor
int
clc
sub
stos
or
lret
repz
jae
mov
mov
arpl
xchg
sub
fisttpl
jo
push
hlt
or
or
imul
sub
scas
stc
ss
or
push
lret
push
mov
inc
or
orl
ret
push
sub
nop
rorl
jbe
push
bound
lret
cs
xorl
add
daa
dec
push
pop
gs
cmpsb
pop
push
cwtl
sub
flds
into
in
jl
jecxz
jnp
shr
sub
adcl
sub
sbb
jno
sarb
dec
lret
dec
inc
push
pop
decb
sbb
dec
cmpsl
mov
ret
out
and
pop
dec
mov
mov
fbstp
xlat
or
lock
inc
xchg
push
pusha
scas
add
enter
jle
lods
fsubrp
mov
jecxz
inc
stc
aas
xchg
or
fchs
repz
mov
jno
xor
dec
repnz
ret
xor
imul
nop
imul
push
mov
mov
dec
lret
ret
and
les
out
pop
xlat
add
sub
shll
addr16
jne
int3
fdivl
inc
stos
imul
jns
faddl
xor
lods
xbegin
fs
add
mov
lods
fdivr
repz
mov
xlat
jb
add
mov
pop
les
xchg
sti
cmpsl
mov
scas
add
xchg
jecxz
stos
enter
xlat
insb
mov
mov
loope
mov
mov
dec
sbb
fmul
ljmp
dec
pop
inc
add
ljmp
mov
jb
fxch
mov
pop
or
inc
stc
or
daa
fisttpll
mov
ret
xor
mov
xor
jnp
xchg
pop
xchg
loope
cmp
aam
sbb
mov
mov
and
and
pop
shll
shl
imul
mov
movsb
and
imul
das
pop
cmpsl
int
loope,pt
dec
pop
or
cmpsb
add
jecxz
rorb
repz
fldcw
arpl
lcall
dec
mov
push
imul
cmp
pop
push
add
gs
popl
orl
ficomps
pop
mov
sbbl
push
and
sbb
jnp
jg
mov
cmp
jmp
push
jmp
pushf
or
dec
push
fldcw
fwait
xor
int
mov
fadds
outsl
or
lods
mov
rcrb
insb
or
test
sbb
lock
or
pop
xchg
ret
dec
jo
xchg
dec
ja
repz
iret
aad
cmp
inc
jbe
mov
push
sub
rcrl
push
daa
jne
or
int
dec
and
scas
test
jge
cs
out
xor
adc
aam
mov
negb
das
std
shrl
cmp
sub
jns
mov
mov
clc
or
int
hlt
outsl
push
jmp
mov
sbb
fdiv
in
mov
jnp
dec
mov
lods
push
dec
adc
mov
mov
lret
cvttps2pi
jmp
xor
mov
js
push
sub
rorb
daa
xchg
xchg
in
mov
leave
imul
adc
ljmp
mov
sbb
mov
and
jae
fidivs
orl
lcall
stos
lcall
and
lock
aam
aas
jb
imul
and
enter
scas
stos
negl
popf
xlat
sbb
call
jno
mov
jl
movsb
inc
ret
push
testb
add
add
fisttpll
mov
std
push
pop
in
push
lret
and
xchg
lods
xchg
daa
test
jp
dec
pop
loopne
mov
and
prefetch
or
test
sub
sub
cwtl
outsb
mov
lods
and
or
inc
test
call
sbb
popf
out
fadd
sub
push
call
xchg
test
je
mov
mov
outsb
mov
repz
adc
neg
fimull
aaa
int3
sti
stos
stos
sub
push
xchg
inc
xchg
dec
sub
movsl
push
jno
insl
jae
add
jno
decb
dec
fwait
outsb
nop
daa
push
leave
cmp
mov
pusha
inc
cmpsb
popa
lret
pop
mov
imulb
xchg
ss
cli
popf
stc
fwait
shl
jnp
test
xchg
stos
andl
xchg
push
add
jbe
push
ret
test
sub
arpl
push
inc
out
call
fwait
adc
jge
out
mov
out
fidivs
repz
scas
push
icebp
adc
packssdw
xor
pop
xchg
je
lret
xchg
add
sub
adc
repnz
mov
mov
repz
jmp
inc
sti
mov
out
icebp
out
fmulp
mov
mov
jo
push
xchg
mov
in
push
and
mov
sbb
mov
insb
push
fistl
pop
gs
pop
rorb
fwait
sub
or
loop
jmp
dec
dec
lods
xor
xchg
fcmovbe
mov
scas
xchg
aad
notl
inc
sub
pop
push
push
jg
ds
adcl
mov
dec
push
sti
mov
call
and
ret
push
xchg
lock
add
cld
sbb
out
stos
hlt
and
pushf
idivb
imul
xor
stos
shl
pop
test
and
scas
inc
in
xor
adc
mov
sahf
mov
cld
jno
xchg
or
and
sbb
shlb
icebp
jmp
mov
mov
adc
push
xchg
sub
shll
add
pop
dec
push
lock
jecxz
nop
test
movsl
add
lret
jo
add
xchg
cmpsb
mov
cli
jl
loop
bound
leave
loope
xor
scas
mov
sbb
xchg
hlt
idivl
test
nop
mov
inc
and
fsubrl
xchg
insb
mov
mov
sbb
ljmp
pop
enter
sub
into
sub
mov
inc
lods
and
insl
mov
xchg
jg
das
fbstp
lahf
sbb
dec
jbe
inc
jae
and
xor
std
mov
mov
dec
push
cmp
xchg
ja
pop
pop
inc
jmp
pop
mov
lock
imul
lahf
add
jecxz
fwait
sti
sahf
clc
scas
test
out
xchg
cmc
mov
notb
jbe
push
sub
adc
scas
mov
adc
std
shrb
jne
xor
inc
pushf
mov
push
mov
xchg
mov
sbb
data16
dec
push
mov
leave
inc
dec
jb
mov
sbb
cmp
icebp
repnz
dec
mulb
pop
and
out
adc
stos
jmp
es
ror
and
lods
dec
sub
push
mov
adc
xchg
jb
jns
and
shrl
mov
loop
fs
fisttpl
je
adc
add
dec
add
je
jmp
movsl
lcall
or
add
icebp
addr16
jae
jbe
int3
xchg
and
add
cwtl
orb
rolb
mov
pop
xor
push
and
jnp
push
xchg
xchg
jp
rcrl
sbb
pop
xchg
aas
jl
out
sub
mov
popf
jecxz
pop
incl
adc
icebp
stos
jne
cmp
cmp
fistps
into
nop
push
sbb
mov
out
pop
cld
mov
cmpsb
gs
jno
repnz
pop
popa
std
dec
xchg
filds
insb
adcb
sub
js
out
push
add
mov
xchg
xchg
adc
enter
mov
popa
jl
xchg
jecxz
xor
inc
push
xor
sbb
hlt
and
std
out
or
push
inc
mov
sti
and
imul
xchg
jne
mov
shrd
add
loope
jp
cmp
pop
in
dec
lahf
daa
push
into
push
test
jp
sti
ljmp
test
jmp
aaa
ljmp
sbb
dec
aaa
push
mov
cli
dec
clc
mov
fmul
mov
mov
out
bound
dec
push
cmp
int
xor
jl
notb
add
es
and
mov
aas
xchg
pushf
lret
jo
jmp
mov
xchg
sub
cmp
ret
mull
xor
sbbb
xor
sub
clc
movsl
mov
ficompl
rorl
mov
test
or
cld
push
sub
mov
pusha
dec
pop
mov
les
dec
xor
mov
dec
pusha
enter
ret
push
movsl
xchg
pop
mov
fiadds
or
and
pop
in
arpl
jmp
jns
mov
lret
jp
mulb
push
loop
dec
roll
push
cmp
arpl
cmpsb
or
pop
rcrl
loopne
pop
or
xorb
addr16
inc
dec
fsub
fidivl
add
test
xchg
jno
lea
mov
fists
shll
cwtl
xchg
jmp
ljmp
mov
and
mov
out
pop
pop
cmp
mov
gs
jecxz
mov
das
enter
hlt
add
pop
mov
mov
mov
xor
bound
ds
out
nop
lea
in
ret
insb
mov
sub
cmp
xorl
mov
dec
mov
cmp
pop
jg
fiaddl
hlt
sti
and
pop
xor
jbe
cli
repz
xlat
xchg
jb
push
fnstsw
dec
cmp
lock
stc
mov
xor
xchg
cmp
cmp
mov
cs
mov
cmp
adc
mov
xor
adc
ds
enter
leave
fsubrl
inc
in
push
cmp
push
loop
insb
daa
jl
jecxz
sbb
pop
insl
int
hlt
jmp
ljmp
out
scas
sbb
sbb
dec
mov
in
sbb
push
sub
mov
js
pop
adc
mulb
imul
cmp
sub
aaa
stc
mov
lods
inc
ret
push
mov
cmp
into
repz
js
push
jb
mov
sahf
ficompl
add
pop
call
fists
xchg
xor
jmp
fs
cmp
and
movsl
mov
iret
fwait
jge
mov
dec
in
add
add
inc
test
xchg
js
outsl
int3
mov
ret
js
fs
dec
cli
int3
ret
scas
incl
sbb
add
or
pop
int3
sahf
dec
xchg
andb
mov
movsl
cwtl
mov
movsbl
mov
lret
paddw
fidivrs
inc
or
jne
cltd
or
add
andl
cld
pop
inc
add
cvtdq2ps
mov
mov
adc
cwtl
pushl
inc
dec
lahf
lcall
add
xor
cmpsb
ljmp
sbb
adc
mov
je
mov
add
xchg
xor
popa
mov
lahf
insl
mov
sti
sbb
or
xor
jg
push
push
sub
adcl
sarb
data16
ficoml
bound
leave
sub
hlt
sbb
mov
mov
add
fistpll
cwtl
in
in
jp
adc
xor
xchg
xchg
stc
cmpsl
mov
les
insl
stc
imul
mov
mov
add
icebp
inc
xor
out
fiadds
pop
mov
outsl
dec
mov
lret
imul
mov
test
inc
mov
and
ret
inc
sbb
clc
cmp
adc
jne
and
inc
pop
mov
cmp
and
loope
inc
jns
sbb
ljmp
daa
mov
rolb
xchg
xlat
sbb
ljmp
cmpsb
jne
adc
cmpsl
mov
aad
inc
xchg
std
mov
iret
mov
in
mov
dec
jbe
xlat
xchg
mov
ret
andb
pop
leave
jg
stos
jno
or
adc
leave
scas
fildl
rolb
stos
ficoml
mov
stc
test
mov
push
pop
mov
push
cmpsl
push
and
ss
jmp
imul
js
or
mov
scas
fbld
cmp
pusha
adc
fldt
cs
ja
pop
int
scas
mov
dec
pop
int
jns
std
out
jmp
lret
sub
out
cld
out
cmp
pushf
push
mov
popf
sub
dec
lret
mov
dec
pop
ljmp
add
adcb
sub
lods
shrl
ljmp
lock
dec
in
sbb
sbb
add
mov
dec
sbb
stos
sti
mov
es
cmp
sbb
inc
push
jnp
mov
pop
ret
fs
mov
xlat
imul
xlat
fisubs
imul
dec
add
in
stos
das
faddp
inc
or
mov
rorl
les
sbb
cmpsb
lret
inc
call
test
loopne
aad
xchg
aad
and
cld
cli
cmpsb
pop
adc
inc
test
stc
enter
jne
jecxz
add
hlt
or
sarl
daa
outsl
pop
or
andb
sbbl
jp
out
std
xor
jp
rcll
xchg
xchg
fidivs
test
sbb
jbe
ss
das
or
arpl
or
aaa
sub
or
popf
ja
fidivs
fwait
add
out
adc
cmc
inc
shlb
leave
push
cmp
enter
daa
rorb
in
lahf
mov
xlat
imull
adc
sub
adc
pop
pop
add
mov
mov
mov
js
and
bound
inc
sahf
mov
jbe
sub
pop
mov
push
ss
cmp
xor
cmp
cld
loope
enter
rcll
jg
sub
shll
shrl
jb
pusha
mov
ret
or
icebp
jb
mov
repz
add
movsb
pop
cmpsl
insb
jb
mov
and
pop
jae
inc
jge
pop
pop
lret
inc
mov
out
dec
xor
stos
iret
inc
bound
inc
nop
addr16
cmpl
notl
pop
scas
sbb
mov
or
pop
jo
pop
aaa
test
movb
frstor
add
sub
mov
ds
in
fwait
aaa
stos
push
mov
sbb
jp
test
adc
lahf
aas
add
or
lods
mov
add
pop
mov
test
mov
icebp
scas
and
mov
xchg
pop
sub
jno
notb
lahf
ja
lods
sbb
cmp
test
push
mov
push
test
fs
sub
push
in
outsb
in
xchg
jno
dec
cmp
jmp
sub
stos
pop
jecxz
adc
addb
adc
dec
int3
outsb
lret
sub
pop
xor
xchg
shll
sub
mov
adc
call
aam
cmp
fdivr
cltd
int
ljmp
adc
mov
lods
iret
and
fs
pop
movsl
test
push
jg
jo
daa
add
rorl
fcompl
push
in
jge
adc
adc
jne
lock
dec
adc
mov
shrl
imul
int3
les
and
in
ja
in
jg
pop
inc
or
shll
orb
jnp
shrb
nop
lods
dec
mov
sub
pop
dec
bound
sub
jne
and
or
and
popa
xor
sbb
cli
fbld
insl
fsubl
outsl
ljmp
aas
popf
cmp
fimuls
xchg
pop
pusha
sahf
test
std
mov
sarl
and
mov
insb
pop
push
out
jno
fs
dec
pop
faddl
mov
imul
stos
jle
lods
and
inc
aas
sub
xor
rcrl
out
repz
sub
fcmovnu
arpl
int3
jns
lods
out
insl
add
push
sbb
xchg
inc
add
cltd
fistps
out
in
daa
inc
and
inc
lea
fmuls
into
cmp
dec
pushf
ret
enter
leave
sub
dec
and
mov
sbb
jecxz
cld
mov
pop
mov
movsl
mov
out
pshufw
mov
sub
out
and
xor
xchg
mov
jbe
xlat
cmp
add
fnstsw
inc
sub
mov
adc
pop
cmp
sarb
mov
mov
aaa
leave
ret
inc
lods
insl
sarl
into
mov
mov
aam
pop
test
xchg
xor
pop
fmuls
or
fs
push
push
sub
push
sbb
out
lea
sbbb
sti
cmp
scas
lcall
mov
push
or
mov
cs
sub
lahf
fsubrs
repnz
inc
ret
xchg
es
popf
fadd
stos
cli
or
in
mov
pushl
dec
outsb
inc
stos
lds
mov
mov
shll
je
jle
or
outsl
clc
jnp
sbb
mov
push
inc
xchg
jp
mov
leave
mov
in
rcrl
aad
insl
fisttpll
scas
imul
jo
jle
jo
jmp
imul
adc
jo
rcr
sub
jecxz
xor
out
xor
cmc
jno
mov
andl
inc
push
outsl
xchg
flds
pop
sub
pop
jo
jge
mov
push
mov
push
daa
in
mov
and
sbb
scas
std
rorb
mov
or
mov
mov
outsb
mov
pop
cmp
hlt
mov
xlat
mov
push
cmpsl
dec
popa
jl
repnz
test
in
sub
pop
call
xor
mull
aad
jnp
cmp
add
mov
xlat
inc
enter
shl
add
or
mov
and
add
jno
loop
testb
orl
push
in
dec
xlat
es
cmp
pop
jo
inc
push
xor
jnp
pop
or
js
repz
das
cmpsb
jecxz
pusha
sub
aaa
adc
dec
mov
push
fiadds
daa
push
sbb
mov
cmp
sub
fsts
and
mov
lock
cmpsl
fwait
aaa
pop
mov
fistps
out
fstps
xor
adc
sub
out
mov
push
cmp
push
test
dec
sbb
jg
mov
cmpsb
jge
adc
dec
imul
sbb
stc
add
shrb
mov
sub
mov
pop
fdivrl
mull
inc
inc
cld
mov
cvtdq2ps
xchg
pop
repnz
pop
jle
aad
push
sub
and
xchg
dec
add
push
or
dec
imul
pop
stc
push
xchg
push
data16
mov
cmp
push
int
xchg
cmpsl
push
add
arpl
fbstp
push
adc
inc
and
mov
outsb
pop
movsb
adc
lds
add
es
inc
push
fwait
cmp
dec
inc
sarl
ret
jbe
pop
arpl
out
jno
rcr
lock
xor
xor
cltd
mov
xor
pop
jl
and
cmp
jge
in
in
fs
orb
inc
jae
jae,pn
cltd
repnz
loope
jne
push
int
test
outsl
mov
sarl
sbb
lods
sbb
mov
push
adc
dec
push
cmp
pop
cs
mov
push
fisubrs
dec
cmc
ss
fsubl
das
idivb
mov
mov
ficompl
je
int3
inc
mov
test
or
psubusb
sub
stos
dec
filds
xor
mov
hlt
pop
lcall
add
sahf
aas
pop
or
xchg
test
daa
insb
mov
xchg
push
inc
imul
mov
mov
push
pop
adc
lods
jle
fdivs
stc
cmp
jmp
in
xchg
cs
push
ljmp
sbb
fs
or
inc
jp
or
push
arpl
jmp
push
mov
add
pop
sbb
movb
dec
sub
cmp
or
aam
fadds
lahf
loope
cmp
xor
orl
and
mov
in
push
mov
mov
xchg
mov
addr16
lock
or
stos
xchg
clc
stos
nop
adc
cmp
fimull
push
push
lahf
xchg
in
mov
xor
mov
lock
repnz
aaa
adc
xlat
jne
inc
mov
or
mov
ljmp
dec
cmp
std
repz
cmp
mov
mov
pop
lods
icebp
rcrb
in
out
rcl
mov
cmp
xchg
sbb
push
test
iret
sub
xchg
or
in
rorl
mov
call
and
fistpll
push
push
xchg
sbb
xor
mov
ljmp
cmpsl
push
pop
pop
xor
cli
mov
add
js
stos
movsb
add
cmpsb
out
ss
jl
mov
push
daa
cmc
and
repz
in
mov
push
fidivs
pop
popf
jl
cmp
jecxz
repnz
ljmp
sbb
outsl
repz
sbb
popf
xchg
adc
jp
and
cmp
mov
mov
call
and
add
pop
dec
test
dec
ret
pushf
sub
xchg
and
and
repz
or
xor
stos
adc
insl
aam
mov
or
lods
gs
jmp
push
cwtl
lds
andl
imul
fdivrs
sbb
imul
xchg
push
fmuls
pop
dec
dec
ljmp
xchg
aam
cli
mov
jmp
iret
and
lret
shll
fdiv
int
inc
aad
lds
test
insb
pop
xlat
push
mov
xchg
mov
and
out
stc
or
mov
lock
jle
in
adc
nop
imul
or
jle
mov
std
lcall
in
test
mov
mov
dec
hlt
dec
xchg
pushf
jge
ret
pop
push
push
jae
and
adc
xor
scas
push
fsubl
adc
push
into
adc
lea
sbb
jbe
andl
pop
mov
pop
inc
out
jecxz
ljmp
stos
imul
negl
dec
mov
ss
subb
out
in
fsubp
or
ljmp
test
mov
fdiv
pop
repnz
movsl
mov
in
sahf
dec
xlat
push
arpl
ss
aam
add
rorb
cmp
mov
jmp
fbstp
movsb
jne
pop
dec
popa
cmp
sub
pop
xchg
mov
push
ret
fsubr
mov
inc
mov
ret
enter
add
or
push
cmpb
push
xchg
mov
sub
or
mov
xor
imul
out
xor
add
adcl
int
or
shrl
add
push
dec
fcoml
mulb
dec
dec
bound
data16
pop
ret
inc
jne
scas
xchg
sbb
xor
mov
and
cli
sbb
lcall
jp
jo
insl
xchg
or
pop
js
push
jo
dec
sub
shll
xchg
push
testl
jns
push
leave
sub
lods
call
adc
call
popa
fistps
pop
ss
pop
or
mov
dec
in
push
push
ds
push
pop
sub
in
fmull
aas
pushf
jnp
out
pop
mov
and
sbb
push
sbb
pop
xor
aam
pop
int3
iret
sub
je
jl
rcl
dec
pop
inc
inc
push
out
sub
cltd
clc
lret
xchg
into
add
out
mov
aam
negl
repz
mov
loopne
sub
inc
aam
jmp
jl
popaw
mov
cmpsl
push
jns
fnstenv
xor
xchg
push
iret
les
mov
adc
inc
adc
out
outsb
lds
or
jne
jp
es
hlt
lds
repz
mov
dec
insb
mov
xor
ror
aas
xchg
mov
add
mov
loope
cmp
xchg
xchg
movsl
push
insb
cs
push
hlt
or
mov
lods
cmc
int3
jmp
pop
das
fdivrs
orb
sbb
xor
jge
sar
sbb
pusha
lods
mov
lret
inc
imul
sub
xor
mov
fldenv
call
sub
pop
pop
lahf
jne
cltd
mov
aam
push
popf
movsb
jo
jb
cmpsb
add
cmp
mov
lret
inc
lods
mov
test
or
inc
pop
pop
fldl
aad
jle
xchg
mov
movsl
push
add
cmp
xchg
and
sub
and
or
mov
and
pusha
add
fadds
mov
dec
int3
push
mov
iret
pop
outsl
push
lret
aaa
lahf
loope
addr16
shll
pop
nop
adc
into
add
mov
imul
mov
inc
fs
mov
movsb
xchg
adc
add
in
fnstenv
dec
jae
pop
inc
mov
inc
push
leave
insb
enter
mov
mov
cmpsb
inc
and
incb
inc
mov
or
fcompl
aad
xor
inc
imul
pushf
andl
push
aas
inc
icebp
arpl
fdivrp
or
inc
dec
push
ficoms
sub
aaa
fcoml
mov
cmc
into
faddl
and
shlb
jae
lret
pop
xor
xor
pop
jbe
icebp
hlt
push
subl
sbb
out
and
dec
jge
dec
pop
dec
bound
push
jbe
aas
jge
mov
sarb
cmp
ja
jb
jmp
pop
pop
cmc
aas
data16
fwait
mov
popf
push
hlt
ficompl
in
push
data16
sbb
sahf
xlat
push
mov
in
insb
orl
es
popa
lret
inc
int
jmp
ret
sub
pusha
incl
mov
xor
xor
adc
arpl
xor
aaa
ret
mov
iret
push
int
add
in
jo
push
jecxz
dec
ret
loope
push
xor
push
mov
add
xor
sub
cmp
mov
out
dec
fsubrp
es
scas
in
pop
or
fbstp
and
popf
js
stos
push
insb
mov
xor
xchg
xor
into
or
and
and
cmpsl
pop
xchg
xlat
and
mov
and
das
and
addr16
cld
aad
lock
popf
adc
adc
mov
lea
insl
out
rorl
push
int3
xor
sbb
fnstenv
and
adcb
push
aas
xchg
out
sbb
cmp
bound
bound
xchg
in
rcrb
nop
shlb
sub
dec
rcrl
sti
mov
int
mov
or
sub
mov
or
cmp
out
jle
jae
mov
or
arpl
adc
xchg
sbb
inc
xchg
cltd
or
mov
push
sub
outsl
add
aas
mov
sub
inc
xor
dec
shrb
xorb
movsl
mov
out
jae
lods
xlat
stos
andl
pop
mov
out
adc
call
mov
insb
andb
cwtl
push
xchg
sub
cmp
movsl
xor
stc
insl
xchg
mov
pop
repz
cld
lock
jnp
xor
push
leave
push
cmc
int3
pop
pop
lcall
lahf
add
sbb
cmpsl
fsubr
and
push
mov
xlat
push
inc
inc
ret
adc
sahf
inc
loopne
outsl
and
xchg
data16
lds
psrlq
sbb
mov
dec
out
jl
cmp
aad
lcall
or
cld
lods
mov
mov
add
outsb
call
jbe
cmpsl
and
rcrb
jne
cmp
mov
js
sub
dec
roll
jmp
xor
je
ret
addr16
jmp
pop
dec
ds
add
mov
insl
mov
dec
push
adc
adc
lret
repz
jbe
js
dec
lret
loop
add
pop
mov
pop
pop
test
and
sub
inc
in
dec
pop
adc
push
stos
in
into
imul
push
or
mov
lea
ljmp
mov
inc
in
test
dec
sbb
addr16
mov
sbb
lret
inc
cmp
fstp
add
stos
jnp
sbb
or
sub
adc
aas
roll
cmpsb
or
cmp
cli
jge
jmp
ss
cli
insb
adc
mov
push
sbb
fnsave
scas
out
into
call
jns
or
mov
imul
sbb
test
or
xcrypt-cbc
cmpsl
push
push
xchg
cmpsl
xlat
sbb
mov
ss
dec
xchg
addb
roll
pop
xor
fxam
inc
into
lea
mov
mov
jecxz
lret
ret
pop
in
in
cmp
mov
dec
subb
iret
mov
or
cmc
jp
sbb
das
jae
fistps
push
roll
loop
or
mov
ds
fsubs
lods
negl
in
push
mov
xlat
xchg
icebp
mov
jecxz
dec
frstor
repnz
jl
notl
jo
pusha
add
mov
add
loope
cmc
pop
lret
pushf
scas
mov
cld
xor
mov
insl
js
out
or
or
lds
push
mov
icebp
pop
xchg
xchg
dec
adc
pop
pop
xchg
sbb
hlt
sub
mov
fsubl
movsb
mov
jbe
push
inc
push
push
orb
loope
or
sbb
ret
and
jp
fdivs
pusha
das
adc
or
ja
cmpsb
and
cmp
stos
xor
cmpsl
movsl
int
inc
pop
pop
pop
mov
jne
sti
lea
inc
movsl
addb
enter
inc
sub
jp
push
std
cwtl
imul
jecxz
out
mov
dec
std
psubusb
cs
fimull
dec
jne
dec
addr16
cpuid
adc
push
xchg
mov
xchg
jae
cmp
insl
or
jb
cmp
push
sbbl
mov
testb
pusha
cmp
xchg
dec
add
push
mov
das
imul
push
loopne
sbb
sahf
not
arpl
xchg
daa
jns
lea
ljmp
sbb
dec
xlat
push
xchg
xchg
jg
lea
sub
aaa
add
mov
jl
xor
cmp
jmp
sub
lahf
daa
pop
sti
cmp
or
dec
call
ja
sub
notb
xor
xchg
xchg
dec
rcl
scas
cltd
or
fistpl
mov
mov
cmp
adc
cmpsl
mov
pop
call
dec
jno
lock
pop
sub
push
js
mov
jb
ret
and
pop
aaa
lods
ret
xor
xor
push
js
and
hlt
inc
sbb
ret
rcr
xchg
rep
cmp
xorl
pop
xchg
xor
add
xchg
fldenv
xlat
sbb
daa
mov
inc
jae
std
inc
fidivrs
mov
or
shrb
jmp
ljmp
jnp
in
pop
in
pop
repz
or
push
xlat
mov
outsb
jb
in
in
push
inc
pop
loope
scas
inc
and
mov
xchg
iret
dec
jle
or
and
sbb
push
in
cwtl
jne
decb
fwait
test
imul
push
push
pop
lcall
ljmp
mov
mov
pop
gs
idivl
in
xor
ja
hlt
pop
clc
repz
repnz
lret
xchg
xchg
mov
decb
not
dec
lock
es
scas
jmp
jmp
inc
ret
imul
mov
lret
enter
cmp
rorb
mov
pop
lods
mov
iret
jmp
outsb
lahf
into
aad
inc
int3
in
pusha
mov
fldl
sub
push
and
pop
jl
xor
ss
cmp
push
xchg
fs
mov
dec
xchg
lods
lods
mov
cmc
add
adc
or
iret
aas
lock
bound
sub
test
sbb
jno
sbb
out
leave
outsb
insl
aam
fs
jl
jbe
sub
mov
leave
js
ficoms
sbb
hlt
pop
inc
repnz
cmp
inc
xchg
scas
pop
adc
jbe
pop
into
inc
dec
xchg
adc
in
insb
out
xor
pop
out
inc
lret
pop
data16
xchg
lret
ja
pop
lds
cmp
jmp
in
xor
or
js
mov
movsl
mov
xor
xor
mov
push
arpl
adc
mov
sbb
fdivp
sbb
cld
enter
add
and
cmpsl
xchg
ret
jne
in
scas
or
test
sbb
fcoms
mov
pusha
push
movsb
aas
test
jmp
ja
cmp
push
or
rcll
mov
test
arpl
xor
bound
xor
or
fldl2t
mov
fs
lea
pop
add
dec
jno
outsl
cli
add
ja
in
mov
inc
mov
and
cmp
xchg
xchg
inc
filds
out
sahf
fcoms
ja
inc
int3
pop
fldl
mov
addr16
out
test
or
ss
push
cmpsl
adc
lret
push
adc
mov
pop
jo
mov
mov
xchg
icebp
out
popa
rolb
sub
out
mov
clc
and
cwtl
sbb
shl
xor
data16
ja
imul
jne
rclb
dec
adc
adc
and
push
outsb
mov
orl
pop
pop
sbb
mov
dec
aas
mov
ss
mov
jmp
add
sub
and
in
push
aas
pop
mov
jne
mov
lods
sub
shlb
repnz
je
inc
mov
push
xor
xchg
leave
dec
mov
fwait
or
jp
addr16
pop
push
jns
add
ficoms
push
lret
fsub
sub
bound
pop
ret
sub
sti
xchg
outsl
insb
xor
sahf
and
jnp
dec
outsb
call
jle
test
popf
dec
push
xchg
sbb
clc
inc
mov
nop
shll
aad
sub
and
push
jb
or
pop
mov
push
jl
sbb
shrb
iret
pop
jns
cmp
arpl
push
mov
shl
xchg
imul
icebp
sbb
cmp
fbld
jmp
scas
xor
divb
lea
cld
int3
and
stos
fisubrl
xchg
mov
dec
mov
inc
pusha
lods
mov
jmp
out
fsts
in
pop
pop
mov
adc
and
loopne
dec
into
mov
cmp
cltd
aas
cmp
mov
adc
stos
xchg
jb
jo
js
arpl
fdivl
pop
or
push
pushfw
mov
mov
mov
jl
dec
add
adc
fdiv
sbb
les
ja
scas
mov
adc
frstor
fmuls
aam
cltd
mov
adc
push
leave
push
rcr
jle
movsl
lods
add
rcll
sub
push
arpl
push
jge
je
mov
add
sbb
aaa
sti
mov
dec
pusha
movsb
mov
inc
add
jo
push
mov
rol
sahf
inc
jbe
add
enter
xchg
enter
xchg
push
dec
jecxz
gs
push
test
fnsave
and
scas
pop
mov
push
jl
cmp
mov
push
fs
test
xor
xlat
push
ret
es
stos
pop
ss
xchg
test
arpl
outsl
test
fs
dec
mov
pop
stos
push
stos
cmpsb
sti
jl
dec
jecxz
das
xor
xchg
out
pop
ljmp
push
sti
adc
sbb
test
jae
sub
addb
popa
or
mov
insl
sub
xchg
adc
daa
data16
mov
cmp
lret
cmp
sub
inc
pop
sub
scas
shl
mov
sbb
ret
lret
jne
lcall
mov
clc
mov
addr16
cmp
js
int
add
fdivs
lea
sbb
ret
push
jne
orb
push
inc
pop
pushf
leave
mov
loope
inc
idivl
cmp
push
push
jecxz
out
ljmp
test
xrelease
pop
test
aad
out
jmp
js
rclb
cld
jle
cmp
in
xor
ja
movsl
jge
out
xorl
call
fistl
rclb
push
mov
and
jo
addr16
mov
insb
sbbb
or
cli
outsw
adc
loop
jno
pop
pop
outsb
loopne
jo
add
add
push
add
les
push
push
bound
mov
shlb
or
adc
jl
or
or
scas
jl
pop
pop
ret
cmp
repz
outsl
push
js
stos
in
cmp
daa
add
fldl
mov
mov
enter
movsl
sbb
mov
lods
push
flds
push
mov
enter
dec
xchg
jmp
nop
out
out
sub
add
cmc
and
insb
fidivs
rcrb
stc
stos
and
mov
adc
inc
jae
xor
xor
pop
out
push
add
jns
popa
push
and
mov
test
outsl
mov
adc
lahf
dec
out
dec
sub
jp
filds
movsb
clc
les
std
insb
inc
dec
lods
mov
xchg
aam
adc
push
stc
movsb
scas
sahf
insb
dec
inc
repnz
cld
mov
cli
into
ds
fistpl
fs
leave
std
push
mov
int3
testb
enter
cld
in
scas
cmp
jge
jne
les
dec
mov
insl
add
fmulp
sub
dec
je
mov
push
jnp
mov
or
pop
in
sub
lret
nop
mov
sbb
ror
rclb
movsl
or
fwait
lahf
inc
and
movsl
ror
mov
int3
mov
or
lods
cmp
in
sub
mov
pop
popf
test
fsubl
stc
mov
xchg
mov
mov
xchg
or
fdiv
xchg
fcmovb
cmp
jno
pop
jae
nop
leave
test
or
jge
jle
jo
cld
sub
jle
push
int3
inc
adc
inc
in
sbb
hlt
sub
add
testb
mov
out
cmpsb
outsl
cs
sarl
fsts
lds
cmpsb
imul
jbe
push
lahf
dec
jecxz
or
addps
adc
ficompl
shll
iret
addr16
adc
out
repnz
cmc
push
or
mov
push
lret
lret
inc
insb
xor
andl
jbe
pop
push
mov
cmpsb
bound
inc
clc
adc
push
push
push
jge
push
je
sbb
mov
dec
jmp
mov
jo
push
mov
xor
pushfw
lock
inc
xchg
inc
sbb
sub
pusha
fs
jo
cmc
pushf
cmpsb
xchg
mov
xor
jp
icebp
leave
ds
jl
in
dec
test
inc
inc
insb
add
out
repz
frstor
inc
ficomps
inc
mov
mov
pop
mov
xor
mov
cltd
pop
cltd
pop
mov
aaa
and
mov
das
mov
dec
add
cmp
ret
cmp
movsl
scas
jbe
lret
mov
ja
xchg
test
push
push
xor
push
out
and
mov
jg,pt
add
aaa
dec
lods
pop
adcb
int3
cmp
lods
dec
lock
cmp
mov
add
inc
mov
push
mov
push
mov
xchg
inc
push
push
stos
jnp
ss
rcrl
shll
mov
ret
test
cld
or
inc
pop
pop
pop
cmp
jae
push
add
clc
sbb
loope
cmp
outsb
sub
or
push
notl
dec
imul
adc
test
daa
popf
rorb
ds
fiaddl
cmp
ja
movsl
mov
cmp
dec
sub
ficoms
pop
add
popa
shll
out
sub
je
mul
outsl
faddl
add
mov
cmp
mov
idivb
pop
rcl
cmpb
pop
mov
mov
das
jg
inc
fwait
pop
dec
mov
pop
cmp
push
aam
dec
inc
cs
out
cs
sbb
or
cmpsb
jae
mov
pop
xor
mul
cmp
fisubrs
add
xchg
and
icebp
filds
aam
fbstp
xchg
sub
rclb
lret
int
inc
call
cld
pusha
jle
aam
into
push
aam
push
and
inc
shrd
cwtl
ret
aas
loopne
pop
jne
mov
dec
cmp
lock
clc
daa
in
mov
aad
stc
pop
stos
jbe
dec
and
lret
pop
pushf
mov
jmp
addr16
jne
push
cmc
xchg
jl
and
mov
mov
je
imul
mov
loope
adc
inc
mov
pop
and
jg
lcall
call
or
pop
pop
pop
jbe
inc
loopne
mov
lock
sub
adc
sbb
mov
in
push
sub
test
test
jns
testl
sbb
nop
mov
addr16
cmpsl
movsl
fcomi
jge
addr16
cmp
or
jne
std
movsl
outsl
jge
pop
push
xchg
and
add
push
mov
js
movsb
xchg
cmp
mov
jnp
iret
push
adc
jnp
xor
outsb
mov
mov
jecxz
cmpsl
pop
push
scas
std
mov
dec
popf
loop
das
jno
xor
fnstcw
cs
add
aam
in
jl
dec
pop
adc
in
shr
pop
sub
or
xor
xchg
in
xor
xchg
cmp
das
cld
mov
lds
xlat
out
sti
fs
in
mov
sbb
dec
into
arpl
jne
inc
insl
push
pop
mov
xchg
aam
cld
cwtl
mov
cltd
test
xchg
in
insb
adc
rorl
dec
int
fiaddl
mov
stc
loope
push
dec
movsl
inc
mov
mov
ret
cmp
test
movsl
outsl
in
add
mov
push
mov
mov
dec
adc
mov
ja
push
jmp
repz
stos
and
lods
or
das
adc
daa
out
jle
daa
sub
mov
adc
in
fxch
xor
inc
pop
std
mov
add
mov
xor
mov
bound
pop
dec
jne
xor
mov
xchg
fwait
xchg
rclb
jmp
add
movsb
xchg
fwait
adc
mov
push
mov
decb
jno
push
inc
inc
ss
sub
lahf
mov
imul
pusha
fwait
adc
cmp
dec
nop
mov
scas
lods
mov
int3
sbb
dec
mov
roll
add
fsubrl
shl
adc
xlat
add
mov
mov
xchg
test
sbb
xor
lret
inc
push
scas
in
mov
adc
mov
xor
push
mov
mov
inc
mov
bound
rcll
loop
inc
popf
arpl
pop
aas
fs
pop
adc
cmp
and
and
pop
outsl
js
push
inc
ja
test
data16
mov
dec
out
das
icebp
add
jae
rclb
fs
enter
fildll
pop
fisubs
mov
in
aam
or
fs
and
sub
in
sub
dec
repnz
push
out
insb
inc
fcoml
jb
mov
addr16
int
lret
leave
mov
or
nop
rcrl
jmp
push
pop
mov
mov
xchg
ror
pop
scas
icebp
cwtl
int3
jmp
sbb
shlb
ret
hlt
sbb
cmp
add
lcall
je
in
push
sub
push
repnz
mov
int
push
out
mov
in
fcmovu
pop
popa
or
or
jl
xlat
out
push
stc
in
pop
mov
scas
dec
stc
jl
jb
xchg
rorb
jbe
add
out
dec
jb
xchg
outsb
jb
inc
subb
sub
call
sub
fldcw
out
fistl
je
dec
pop
cmp
int
mov
xchg
xor
mov
loop
pop
sahf
push
call
jmp
cmc
mov
mov
sbb
cmp
pop
inc
jbe
dec
fadd
nop
rclb
add
mov
dec
call
xor
or
push
push
xlat
lock
inc
jge
fcomps
and
inc
jae
jbe
adc
mov
cmpsl
sub
lahf
outsl
addl
cmc
ja
fnsave
lret
inc
sub
or
popa
jg
mov
cli
ss
xor
jmp
mov
mov
les
or
cmp
rcll
sbb
clc
insb
adc
testb
or
mov
stos
gs
mov
bound
mov
xchg
jl
push
mov
fiaddl
push
jno
shrb
xchg
pop
ds
add
cmpsl
xchg
fistpll
inc
xor
pushf
rorb
xchg
aad
cmp
scas
filds
mov
xor
loopne
clc
icebp
push
mov
sub
cs
inc
jp
shlb
ss
mov
mov
xlat
or
sbbl
fimull
or
movsb
sub
lea
jno
fcmovb
or
ret
or
outsb
cli
adc
push
into
mov
mov
pop
cmp
test
xor
dec
add
out
and
imul
mov
mov
outsb
jge
mov
jnp
loop
lea
xbegin
cmp
push
jmp
dec
push
test
shlb
dec
mov
sarb
ja
sbb
dec
mov
and
xor
xchg
movl
mov
sub
mov
jb
fnsave
push
mov
pop
mov
sub
rcl
and
mov
jecxz
jecxz
sub
mov
call
in
sbb
mov
push
ljmp
cmc
stos
inc
jno
and
enter
rcrl
dec
sbb
ss
std
jae
sbb
fstpt
enter
pop
insl
daa
clc
cld
rolb
jno
test
jl
aaa
lods
stos
dec
in
jl
mov
loope
push
sbb
mov
sbb
or
leave
sbb
fsts
fldt
bound
sbb
enter
int
push
push
mov
push
cmc
enter
xchg
xchg
test
mov
aaa
test
aam
clc
inc
jno
mov
stos
sbb
push
pop
mov
xor
cmp
sbb
sbb
dec
xlat
sarb
add
cmpsb
xor
inc
adc
cwtl
imul
je
mov
push
aad
cmc
movsl
jmp
pop
or
decl
shrb
fdivp
hlt
fistl
lods
mov
mov
dec
es
lock
push
leave
into
mov
xchg
vmread
out
sarl
xlat
testb
inc
mov
add
jnp
sub
pop
pop
ret
jae
pop
leave
lret
sbb
pop
jecxz
sbb
out
mov
hlt
cmp
fdivp
cmpsl
cs
dec
adc
lods
sub
inc
cs
sbb
movsb
es
lods
cmc
pushf
cs
sub
push
sub
sub
and
in
adc
pop
aas
mov
sti
and
outsl
inc
push
mov
jge
iret
sbb
dec
add
sahf
adc
lea
scas
insb
hlt
jnp
int
pop
in
fdivr
xlat
test
jge
cwtl
and
sub
add
add
out
test
imul
lret
orb
loop
cwtl
into
pop
adc
sbb
adc
mul
cmp
out
mov
test
sub
xchg
iret
push
or
loop
int3
outsb
icebp
call
insl
mov
and
stos
add
ret
mov
mulb
test
pop
scas
cmp
mov
stc
hlt
push
push
or
push
lea
cli
mov
push
loopne
loop
out
enter
scas
clc
aam
push
cld
lcall
mov
out
push
sub
jb
or
jb
arpl
cmp
mov
mov
gs
mov
in
push
scas
fdivrl
push
xchg
sub
sbb
fsubl
enter
loopne
pusha
mov
cmp
nop
leave
mov
xor
in
pop
ds
in
add
mov
sub
xor
inc
daa
pop
sub
xchg
jae
cmpsb
andb
je
xchg
aad
mov
cmpsl
mov
pop
jmp
ret
sbb
cmpsb
divl
in
pop
lret
mov
je
fwait
ss
call
mov
cs
test
sbb
mov
repz
mov
dec
dec
jne
mov
mov
adc
aaa
and
push
leave
lret
les
xchg
lret
jno
imul
push
fwait
inc
xchg
adc
lcall
push
mov
sti
adc
sbb
or
scas
mov
adc
dec
lahf
repnz
add
cmc
jecxz
and
dec
jmp
mov
or
xlat
sbb
aad
cwtl
repnz
xlat
adc
loopne
cmp
stos
inc
call
dec
jns
pushf
xchg
mov
iret
fidivrl
mov
les
scas
inc
and
push
rolb
cmpsb
dec
test
call
movsb
dec
lock
push
jl
or
inc
mov
test
enter
sbb
and
xor
pop
xor
in
sub
and
rcll
push
or
xchg
mov
test
adc
dec
mov
and
adc
mov
aam
mov
outsb
jno
psraw
leave
int3
int3
movsl
lahf
jnp
push
or
sub
or
mov
outsl
and
cmp
push
mov
pop
xchg
jp
push
push
push
xchg
and
or
jb
and
ds
jno
and
pop
mov
xchg
out
sahf
fs
addr16
jle
push
add
outsl
stos
jge
pop
mov
push
jg
in
xchg
jecxz
nop
fadd
gs
outsl
xchg
repnz
push
mov
xor
mov
xchg
push
inc
or
lret
inc
cmp
mov
psubusw
jno
cld
aam
jmp
adc
mov
xor
stc
mov
jmp
adc
clc
loop
repz
fnstenv
pop
iret
ja
xor
sti
ljmp
jae
pop
jmp
dec
shlb
mov
ljmp
rcrl
addr16
xchg
inc
mov
push
ljmp
adc
insb
repz
ja
mov
notb
pop
arpl
loop
shll
ret
xchg
lock
push
lcall
incb
fisubrl
pop
xchg
lret
mov
dec
lret
xchg
pushf
test
jns
out
cmc
mov
add
xor
mov
adc
jb
jg
mov
popa
out
xchg
cmc
cmc
cmp
xor
mov
adc
sub
jae
inc
outsb
and
jmp
push
mov
mov
or
pop
cmovp
sub
jnp
and
in
fnstenv
mov
cmpsl
cmp
or
pushf
dec
and
sahf
jbe
outsb
or
inc
xchg
and
bound
mov
insb
mov
jb
das
cmpsl
ret
fidivrl
cmc
lret
mov
jne
mov
pop
jecxz
mov
jns
pop
xor
fcom
add
das
push
ja
pop
shrb
enter
xchg
push
aam
pop
mov
in
or
mov
cmp
push
ss
inc
lods
jne
and
mov
sbb
lods
push
imul
in
pop
jbe
mov
pop
xchg
adc
push
xor
icebp
xchg
ss
scas
or
adc
xchg
jmp
or
or
ret
sub
arpl
mov
mov
lock
jne
or
mov
lahf
sub
jae
sbb
dec
test
repz
outsb
lock
sahf
cld
cwtl
int3
les
js
sbb
inc
lods
adc
sbb
or
outsb
les
adcb
cmp
loopne
push
shlb
pop
rcrb
insb
jg
leave
sbb
mov
jno
pop
scas
test
clc
jno
data16
inc
and
jg
movsb
icebp
add
jns
adc
sub
test
push
jbe
mov
hlt
fistl
jecxz
aam
popa
cwtl
push
adc
ret
xor
loop
cmpsb
lcall
dec
sti
enter
jno
imul
xchg
push
leave
scas
or
js
mov
das
aas
or
jl
fbstp
in
stos
add
xchg
or
mov
or
adc
jo
gs
xchg
mov
out
adc
mov
xchg
in
negb
cli
inc
mov
and
movsb
lahf
cmp
addl
mulb
out
nop
loope
clc
dec
sub
cmp
sahf
inc
xor
cwtl
insl
fildl
lock
out
inc
je
ds
sbb
xor
daa
cmp
mov
aaa
in
push
cmp
push
stc
cmp
pushl
xor
loop
cwtl
pusha
and
or
xchg
mov
daa
test
adc
das
shlb
push
ja
inc
outsl
push
push
mov
push
or
ret
daa
adc
jo
outsl
getsec
lods
rcrb
push
subl
test
cmp
loope
mov
mov
lea
cmp
subb
ja
mov
xor
and
fdivl
sub
pop
iret
movsl
cmp
int3
mov
fbstp
je
daa
pop
and
cmp
xor
sub
xchg
dec
mov
adc
pop
ss
mov
add
popa
xchg
xchg
outsb
stc
inc
or
push
repz
or
repnz
loop
lret
pop
mov
xor
icebp
cmpsl
ja
loopne
mov
dec
pop
cltd
push
xchg
mov
sbb
mov
cmp
subb
fcmovne
orl
jp
cmp
sub
out
test
dec
fst
pop
icebp
cmpsl
xor
negl
add
call
mov
stos
dec
and
inc
sbb
scas
int3
aad
push
pop
push
shrb
inc
jg
test
in
cmp
adc
dec
xchg
push
shl
adc
sbb
mov
loop
scas
insb
outsl
push
jmp
mov
mov
jl
jle
in
push
ds
xchg
aam
outsb
and
cltd
push
insb
lea
pushl
ja
xchg
pop
cltd
xchg
mov
fists
push
mov
lock
std
das
ds
loop
ret
ljmp
jecxz
addr16
sahf
pop
mov
popf
lret
and
xchg
rorb
repz
inc
xchg
scas
mov
dec
dec
dec
outsl
jmp
jl
fs
pop
push
fsubrl
and
mov
cmp
mov
pop
rcrl
or
nop
ds
js
sub
sub
jecxz
idivb
iret
loop
push
inc
or
adc
ffree
jnp
ftst
xchg
pop
inc
push
or
pop
sbb
dec
sbb
and
xor
pop
jno
xchg
dec
cli
mov
add
cs
dec
loop
xchg
pop
inc
popa
xorb
in
arpl
pop
jmp
nop
rcll
jno
jae
mov
add
pushf
adc
nop
lods
negb
insl
fdivs
mov
mov
jmp
adc
out
mov
scas
cmp
dec
pop
dec
imul
or
dec
push
cmp
push
jnp
adc
mov
mov
in
roll
mov
sbbl
daa
rcl
mov
cmp
arpl
ss
in
mov
divl
jecxz
cli
movsl
add
inc
sbb
jmp
jle
mov
and
mov
ret
test
add
sbb
sbb
ss
pop
mov
sbb
int3
xchg
and
jle
scas
push
xorl
call
dec
sbb
xchg
mov
aas
pop
ret
add
cmp
xor
imul
int3
cmpsl
or
xchg
imul
addr16
or
in
outsl
leave
mov
aas
mov
jp
pop
out
add
sbb
sub
es
jmp
jmp
stos
mov
push
sbb
out
in
lret
ret
clc
je
push
std
stos
mov
arpl
imul
aad
lret
adc
or
ficomps
fdivl
xchg
mov
out
bswap
sub
loopne
fistl
and
mov
and
push
mulb
pop
mov
jno
sub
inc
popa
and
test
sub
dec
movsb
mov
sbb
mov
inc
pusha
xchg
add
or
mov
and
mov
in
cli
mov
and
sub
ret
cltd
xchg
mov
inc
call
dec
nop
xchg
pop
lods
fistpl
fwait
mov
and
mov
jb
xor
cmp
out
push
pop
adc
mov
popa
xor
movsb
push
jb
xor
or
sti
inc
jmp
sbb
or
push
aam
mov
test
in
sub
les
mov
fcompl
mov
push
je
jmp
int3
add
ret
xchg
pop
add
insl
lods
imul
mov
jae
xchg
push
add
cmc
pop
and
jae
dec
xor
push
jl
ret
arpl
outsb
scas
push
pop
push
data16
cltd
scas
cld
jae
mov
ja
mov
cli
mov
sbb
lds
jns
mov
mov
lea
outsb
outsb
mul
mov
icebp
les
xchg
shrb
sbb
push
lahf
jg
sahf
mov
inc
pop
push
sub
ljmp
mov
mov
jnp
and
xor
aad
mov
popa
in
dec
insl
fimull
mov
sbb
cmp
repnz
lret
xchg
icebp
or
aas
addr16
test
out
lods
cmpsl
and
fcmovnbe
inc
stc
jmp
in
adc
mov
js
pop
scas
in
out
ret
push
leave
adc
in
and
mov
js
dec
mov
xchg
js
push
inc
sti
adc
push
pop
xchg
sbb
cwtl
enter
xchg
and
jae
shrl
test
mov
cmpsl
es
xlat
sbb
in
fisubrl
testb
and
std
ljmp
call
jo
fisttpll
pop
mov
lds
cli
adc
pop
mov
jp
add
add
fwait
shl
mov
lea
repz
fs
jmp
les
mov
mov
rcrl
pop
add
in
daa
ficomps
xor
and
lds
jecxz
mov
xchg
xchg
pop
pushl
xchg
mov
xchg
nop
pusha
mov
push
hlt
or
fs
repnz
jmp
dec
jle
cld
xchg
sbb
sub
mov
sahf
jbe
cld
test
icebp
xchg
and
out
and
ja
push
cltd
pop
daa
adc
mov
loop
mov
push
repz
fidivs
insb
fsubrl
push
cld
popf
dec
mov
cltd
add
cmpsb
mov
cwtl
mov
pop
inc
push
add
inc
sub
jg
pushf
and
cmpsl
sub
push
shr
pop
in
xor
and
int
cmp
pop
push
push
inc
das
jmp
mov
sub
mov
jle
imul
lods
in
mov
fwait
pop
call
sbb
jmp
mov
adc
lds
push
pushf
testb
insl
in
xchg
sub
or
mov
jb
inc
add
enter
or
xor
daa
mov
mov
sub
rclb
dec
dec
mov
in
mov
or
add
or
mov
cwtl
out
in
popf
in
ja
xor
loopne
insl
push
nop
or
inc
sbb
loop
pop
test
jae
xchg
adc
out
or
std
xchg
aad
daa
sub
lods
popf
test
and
mov
movsb
mov
les
mull
lea
mov
add
pop
lcall
dec
xchg
jge
std
out
mov
cmp
icebp
adc
fst
mov
or
shll
xchg
out
pop
notb
ja
mov
rorb
pop
and
int3
ret
or
sbb
xor
pushf
dec
xor
push
adc
xor
cmp
aaa
leave
jmp
push
push
popf
mov
test
sbb
fsubrl
sbb
cmp
push
stos
out
stc
test
push
fnsave
xchg
ret
cmp
xchg
cmp
sahf
push
lock
in
and
clc
pop
pushf
push
mov
mov
jbe
adc
cmc
xor
inc
xor
sub
adc
ja
into
popf
pop
mov
lock
pop
pop
pop
adc
mov
lcall
sbb
mov
adcb
inc
and
xchg
sub
loope
aad
pusha
mov
or
fidivrl
cmp
outsb
mov
and
out
decb
insb
cmp
test
out
in
mov
lahf
adcb
mov
insl
pop
cmp
into
jge
fwait
mov
pop
aad
push
sbb
xor
jb
in
cld
push
adc
dec
or
adc
rcrb
cwtl
xchg
rol
mov
mov
mov
jmp
inc
or
adc
pop
repz
sub
leave
mov
inc
lods
push
mov
lret
outsl
fsubr
jbe
and
cli
test
cmpsb
pop
rcrb
pop
push
loopne
loope
sub
sbb
mov
push
fcoml
lret
mov
push
sub
das
dec
in
sbb
dec
mov
imul
jbe
push
mov
adc
and
loopne
or
sbb
cmpsl
or
daa
mov
test
push
xor
cmpsb
cmpsb
mov
ret
add
das
test
or
cmp
adc
out
or
int3
test
inc
out
mov
sub
pop
outsl
ret
lret
cmpsb
call
mull
stos
js
add
pop
arpl
out
data16
fstl
pop
clc
xchg
cmp
loopne
test
rcr
mov
mov
outsb
rcrb
xchg
mov
testl
pop
sbb
mov
xchg
je
bnd
dec
pop
repz
and
adc
aad
fwait
add
test
sti
aad
dec
fsubp
inc
sbb
pop
push
mov
or
std
mov
fwait
hlt
dec
or
out
ss
mov
sbb
icebp
iret
adc
fmulp
in
dec
add
faddl
into
mov
jecxz
xchg
mov
movsb
imul
fnstcw
in
aad
cmp
mov
arpl
hlt
or
dec
cmp
addl
jb
out
cmp
dec
adc
int3
lods
jmp
idivl
out
sbb
inc
test
outsl
mov
and
sbb
push
stos
scas
loop
xor
mov
xchg
lds
fwait
cld
pop
insb
sbb
sub
pop
inc
inc
add
ljmp
cmpsl
loopne
sub
mov
mov
xchg
dec
in
imul
sbb
push
add
add
xlat
sti
mov
inc
sub
inc
int3
imull
adc
push
fildl
mov
jno
mov
icebp
movb
pop
pop
mov
int3
sub
popf
lods
repz
inc
push
cmp
adc
cltd
mov
push
adc
insl
dec
fcmovu
mov
test
ss
cli
movsb
shll
jno
jo
out
lret
push
clc
negb
or
lret
lret
jle
shl
jbe
fs
xor
sbb
push
sbb
rcll
loope
insl
jns
adc
repnz
shlb
mov
push
lret
pop
nop
fistpl
aad
stos
mov
cmc
xor
pushf
cmp
fstl
adc
and
jg
imul
add
pop
sahf
test
dec
mov
push
mov
cmpl
repnz
aad
dec
pop
xchg
dec
or
popa
cld
or
push
and
and
add
ja
sbb
xchg
scas
push
je
out
jb
aaa
push
add
pushf
and
stos
ljmp
imul
movsb
mov
int3
insb
out
and
mov
mov
sbb
das
mov
and
mov
cmp
and
out
scas
xorl
dec
imul
lcall
mov
cmp
in
mov
xorb
andb
dec
mov
loopne
xor
pop
cs
loope
dec
pusha
int3
sbbb
adc
aaa
push
xchg
mov
std
adc
push
push
or
std
mov
cmp
rolb
inc
adc
daa
push
mov
sbb
lret
xor
icebp
jmp
out
jo
test
jbe
xchg
cmp
push
lea
inc
lcall
in
xor
rcrl
fsubl
test
push
int
popf
outsb
pop
mov
adc
ds
sub
hlt
scas
push
outsb
xorl
cli
xor
pop
lcall
pop
or
aam
adc
scas
cmp
add
or
lret
and
mov
push
jo
or
and
scas
pop
or
jmp
sub
gs
pop
adc
sbb
scas
pusha
dec
sbb
loope
add
mov
cs
nop
out
js
jnp
insl
push
mov
or
mov
icebp
mov
in
cwtl
rcll
lods
xor
lret
push
orb
incb
inc
ds
es
inc
sarb
imul
push
adc
mov
addr16
jns
push
shll
or
pop
enter
add
sbb
outsl
pusha
fldcw
sub
lods
mov
jp
pop
jecxz
test
and
sti
push
fstpt
dec
in
cmp
and
xor
jno
cld
ds
lods
and
jns
xor
test
pop
outsl
stos
adc
xchg
in
adc
adc
movsb
dec
scas
lret
popf
push
jne
cmp
adc
jmp
adc
jae
fidivrs
or
cwtl
pop
inc
xor
push
jae
outsw
loop
inc
jbe
arpl
popf
push
xchg
jmp
mov
pop
push
inc
pop
mov
rcrb
pop
jae
jl
jg
inc
mov
adcl
fidivrs
popf
cmpb
cmp
push
cmc
add
lock
dec
mov
push
jg
into
lock
push
icebp
mov
cmp
cwtl
arpl
or
scas
jb
je
xchg
adc
pusha
cmp
mov
fdivrs
les
cmp
xchg
outsl
dec
mov
cmp
loope
hlt
adc
xchg
mov
fsubl
nop
gs
fldl
xchg
idivb
push
lods
push
jmp
addr16
push
dec
and
pop
sbb
pusha
mov
clc
sahf
cli
das
add
loop
and
mov
sbb
dec
jns
dec
fadd
std
or
sbbb
aaa
jl
mov
cmpl
mov
mov
hlt
mov
or
or
int
ror
movsl
add
jmp
sbb
cmp
aam
test
sbb
ss
movsb
dec
sbb
rclb
fsubrs
dec
sbb
daa
inc
movsb
adc
sub
and
sahf
or
dec
loop
lods
daa
imul
mov
scas
ja
cmp
ret
push
mov
aas
insb
sarl
mov
mov
out
sub
hlt
add
outsl
movsl
mov
sahf
test
push
cmp
filds
or
imul
xchg
enter
lret
inc
test
cmp
enter
jl
mov
fimuls
out
sbb
stos
adc
fmull
push
rcrb
movl
inc
add
lods
fldl
push
ja
jo
push
out
aaa
xor
adc
addr16
popa
arpl
sbb
lods
push
lods
inc
faddl
cmp
pop
fcomp
sbb
dec
xchg
push
imul
sub
bound
dec
xchg
mov
add
loope
adc
fwait
divb
cmpb
es
mov
dec
loope
sub
adc
push
data16
mov
xchg
inc
std
and
shll
aas
fsubrp
adc
or
pop
push
leave
ljmp
mov
mov
adc
pusha
sub
pop
sub
jno
and
fwait
pop
mov
dec
adc
pop
nop
sub
xchg
fs
repnz
pop
mov
jl
push
xchg
sbb
cli
cmp
dec
jge
js
xchg
mov
rcrb
shll
lcall
push
xchg
enter
fbld
xchg
mov
mov
sbb
lret
outsl
mov
jo
cmp
mov
mov
mov
test
cmpsl
dec
cmp
out
ljmp
xlat
in
into
xchg
inc
or
jp
pop
in
pop
jge
pop
les
xor
cmp
mov
mov
xchg
repnz
pop
out
mov
in
and
jl
int3
sahf
mov
das
fbstp
int3
mov
out
les
dec
push
or
rcll
mov
aad
sahf
cltd
jae
jno
mov
cmpb
subl
stos
hlt
int
xchg
arpl
filds
mov
iret
dec
mov
pop
dec
cmpsb
shlb
sbb
ficoml
push
mov
mov
mov
out
dec
movsl
in
lret
ret
adc
into
jo
in
jecxz
fidivl
dec
xchg
xchg
add
dec
les
cmp
cmpsl
imul
call
addr16
mov
dec
shrl
sbb
repnz
add
sbb
das
aaa
push
mov
mov
jo
sub
lds
pop
mov
xchg
sarb
and
icebp
sub
or
and
orb
jge
and
clc
filds
sbb
stos
push
lds
and
cmp
mov
xchg
lods
filds
add
sub
sub
outsl
inc
sub
es
dec
xor
inc
int
mov
or
xor
jae
lahf
dec
fiadds
ret
sbb
xor
int
ret
add
sbb
jg
dec
loope
sbb
push
lret
nop
push
xchg
cld
bound
mov
icebp
adc
adc
mov
mov
pusha
repnz
iret
jnp
inc
xor
imul
mov
dec
mov
cmpsb
dec
add
lods
test
cmpsb
and
lea
movsl
dec
das
pop
cmp
rcr
or
cmp
sub
rcpps
lock
push
sti
in
sbb
push
sbb
inc
xchg
sub
add
and
rorb
leave
ret
xor
xchg
inc
hlt
push
bswap
lods
aas
frstor
jmp
xor
ja
jnp
test
sub
lods
hlt
inc
add
stc
cli
out
jb
sbb
xchg
int
fbstp
push
cwtl
pop
int3
mov
ljmp
fsqrt
mov
jns
push
iret
mov
popf
xor
mov
f2xm1
pop
insl
jns
push
bound
data16
cmpl
out
pop
mov
ja
outsb
or
je
fstpt
sbb
outsl
leave
cmp
xor
arpl
das
inc
pop
sub
pop
outsb
pop
and
cli
xchg
pop
rolb
jge
xor
dec
xor
push
ja
push
mov
data16
mull
or
and
jmp
aaa
cwtl
mov
or
mov
xchg
and
arpl
xor
pop
pop
dec
imull
test
adc
lahf
mov
fidivs
mov
push
or
lcall
lds
jns
mov
idivb
es
xchg
into
push
cmp
xchg
fwait
push
je
sub
popf
repnz
imul
adc
pop
inc
push
rorl
adc
fwait
icebp
fimuls
lret
clc
hlt
dec
fisttpll
sub
push
aas
xchg
outsl
lahf
es
xor
out
cli
dec
out
mov
jle
push
test
in
dec
push
aam
mov
mov
and
bound
mull
jae
dec
dec
pushf
sub
jbe
mov
pusha
mov
test
push
test
lahf
outsl
in
push
pop
cmp
cwtl
in
fwait
push
xorb
or
out
clc
cltd
xorb
pusha
aas
bound
sti
dec
push
and
test
subb
test
mov
xchg
mov
push
loope
pop
test
or
mov
mov
inc
sub
inc
aas
xchg
adc
fidivrl
pop
mov
loope
dec
cmp
lahf
neg
xchg
mov
imul
loop
add
jne
lods
jns
mov
imul
push
push
dec
or
sti
push
add
popf
repnz
pop
ds
mov
lea
jo
push
cmp
sub
and
dec
mov
inc
pop
ss
mov
push
xchg
dec
addr16
sti
jle
out
add
cs
mov
scas
jbe
adc
insl
fstpt
adc
pop
mov
xchg
cwtl
sbb
imul
mov
add
add
out
or
sbb
repnz
daa
mov
sbb
add
movsb
sarl
jecxz
into
push
jbe
xor
push
mov
jge
fidivl
dec
repz
mov
or
xchg
imul
movsl
test
pop
out
jg
dec
bound
jl
mov
inc
add
push
mov
xchg
sub
jecxz
jns
loopne
xchg
mov
mov
lods
int3
mov
aad
pop
push
pop
arpl
adc
nop
push
cmpsb
sbb
push
sbb
mov
outsl
mov
inc
xor
dec
stc
lahf
sbb
push
mov
sub
and
pop
mov
xlat
jl
daa
leave
arpl
and
ds
xor
or
jns
pushf
lock
je
daa
sbb
cli
xchg
lods
push
jae
mov
inc
dec
mov
adc
mov
js
das
push
jle
cltd
pop
mov
scas
stos
dec
into
mov
nop
icebp
pop
negb
out
loope
leave
jge
pop
jle
js
lock
dec
insl
cmp
fdivrs
test
add
int3
pop
sub
fidivl
jae
sub
dec
icebp
arpl
shl
xor
dec
mov
clc
bound
leave
inc
pop
mov
sub
gs
mov
fcmovne
cmpsb
adc
xor
cltd
cmp
shll
xchg
pop
lret
hlt
call
cltd
jne
mov
sbb
sbb
mov
stos
imul
cmp
sahf
push
add
xor
cmpb
std
loope
add
and
outsl
jo
ret
sbb
popf
jne
lods
mov
lret
and
sahf
or
stc
sbb
mov
ficomps
dec
inc
scas
std
movsb
mov
loope
stos
sub
mov
movsl
push
jno
xor
jecxz
ss
dec
punpckldq
xchg
gs
gs
or
lock
push
lods
add
sub
mov
insb
mov
icebp
inc
cmp
and
push
cmp
pop
enter
loope
icebp
xchg
cmpsb
test
xchg
sub
in
cmc
jmp
push
idiv
sbb
adc
hlt
cmp
test
ja
fists
gs
push
dec
cmp
mov
inc
testb
pop
mov
fildl
inc
jb,pn
cmp
pop
pop
inc
test
inc
in
inc
or
leave
test
cs
jle
scas
jge
stos
mov
jnp
inc
mov
cmpsb
push
ds
fadds
sahf
not
insl
jne
push
lock
xchg
or
js
xor
dec
jecxz
pop
mov
in
jge
mov
mov
xor
aas
sahf
jmp
jmp
movsb
js
aad
cs
sbb
adc
clc
lret
dec
inc
movsb
mov
mov
mov
gs
sub
stos
ret
fstpl
inc
ficompl
jmp
pop
and
xchg
lret
and
pop
lcall
lcall
test
nop
fwait
adc
mov
xchg
aaa
mov
mov
cmpsl
lcall
test
jns
xchg
jnp
mov
inc
pop
pop
into
sbb
push
add
sub
lods
dec
jno
in
nop
mov
xchg
jno
sub
push
out
push
test
je
loopne
xchg
daa
js
cmp
repnz
xor
pop
jp
cs
dec
cs
andl
xchg
mov
adc
in
mov
mov
xor
inc
test
xchg
or
pop
pop
into
orb
imul
push
shll
mov
push
clc
cmpsl
sub
and
bound
or
jne
data16
mov
mov
sbb
pop
cmp
ss
adc
test
repz
jns
jecxz
lret
mov
sbbl
push
xchg
rol
iret
mov
cltd
jo
xchg
mov
cmp
dec
or
lods
xchg
lock
push
inc
jno
pop
test
mov
lret
xchg
in
stos
dec
imul
mov
ds
fwait
cwtl
icebp
mov
xor
adc
fidivrs
mov
adc
test
mov
jecxz
cmpsl
lods
xor
jnp
xchg
sbb
out
ss
dec
repnz
sub
cmc
inc
sti
popf
int
mov
adc
outsb
dec
icebp
xlat
push
push
inc
xchg
and
mov
inc
inc
inc
jnp
sbb
dec
imul
jmp
dec
push
sahf
push
test
popf
int3
test
mov
jg
push
cmp
je
xor
xor
mov
jmp
ljmp
sbb
cmp
clc
or
adc
shlb
jmp
xorb
enter
outsl
pop
loopne
pop
int
sbb
test
dec
jb
jmp
cmpsb
dec
lcall
inc
dec
fdivrl
and
mov
jmp
adc
lds
mov
mov
imulb
cmp
jl
dec
daa
xor
mov
repz
sbb
rorl
or
adc
cmc
mov
ds
mov
xchg
mov
inc
adc
xor
and
add
add
jge
push
pop
jns
jecxz
out
sbb
or
xchg
clc
xchg
cwtl
data16
hlt
adc
aaa
data16
mov
neg
sbb
mov
call
rcrl
jbe
fs
nop
shrb
loopne
push
xor
adc
push
pushf
cmp
xchg
rorb
int3
clc
ficomps
xchg
adc
or
data16
xor
lsl
dec
popf
xchg
scas
mov
jns
mov
test
mov
pop
sarb
mov
mov
dec
pop
ljmp
add
xchg
mov
xchg
dec
scas
cmp
add
sub
xor
adcb
gs
cmp
sbb
mov
xchg
dec
je
push
notb
test
mov
cmpsb
gs
jns
inc
daa
adc
or
in
mov
test
dec
cmpsb
and
pop
adc
xchg
xor
pushf
mul
cmp
or
mov
mov
bound
pushf
inc
push
inc
gs
ja
je
cmp
subb
mov
adc
xor
push
pop
push
inc
push
pushf
inc
cmpsl
cmp
mov
xchg
nop
push
mov
sbb
add
bound
dec
cmp
stos
fdivrs
xorb
cmpsl
jbe
in
out
test
mov
sarb
imul
scas
call
es
mov
outsl
sbb
sub
mov
dec
aam
mov
pusha
push
leave
or
iret
mov
addr16
lcall
in
sti
out
mov
xchg
fisubrs
stos
pop
daa
addr16
pop
bound
scas
popf
or
popa
xchg
aad
out
scas
sbb
pop
pop
and
enter
adc
xchg
aaa
addr16
mov
les
and
xor
adc
nop
bnd
ljmp
loop
pop
mov
in
inc
sub
int
scas
xlat
xchg
xchg
ds
mov
dec
jecxz
xchg
adc
xlat
popa
mul
dec
and
mov
aad
and
lods
cmpxchg
scas
push
xchg
out
lods
fnsave
ror
loope
jmp
shrb
mov
and
pusha
in
test
stc
das
les
cmp
xlat
or
sahf
hlt
sub
enter
cmp
js
jo
int3
jbe
jp
adc
xchg
fsubrs
and
outsb
out
mov
dec
std
das
xor
jle,pn
push
mov
aam
cmc
fisubl
mov
mov
push
mov
cmp
push
xor
push
sub
fildll
mov
cld
xchg
push
cmp
ja
jle
fwait
jp
jnp
pop
push
dec
jle
lods
xchg
push
mov
ljmp
int
dec
cli
add
scas
push
mov
push
out
sub
decb
fstp
jno
push
cmp
jmp
andl
jle
shlb
int
lahf
cli
iret
push
xlat
lret
sbb
sarl
filds
pop
aas
jb
push
fldcw
push
fisubrs
fidivrs
jecxz
cmpl
scas
mov
xchg
pop
xchg
push
add
xor
fsubr
sub
jo
leave
les
sub
mov
dec
jge
xor
enter
sbb
fld
dec
pop
mov
push
int3
jnp
hlt
xor
dec
ret
popa
repnz
cmp
pop
dec
pusha
repz
aas
sarb
sub
imul
xlat
jo
jle
dec
repz
or
sbb
in
add
xlat
xchg
rcrl
aad
push
xchg
call
movsl
sbb
jo
jmp
inc
enter
jecxz
mov
jle
aaa
shrb
out
loope
or
sbb
lock
mov
mov
or
xor
lods
and
sub
decb
cmp
loope
jle
aad
sub
fdivl
inc
addr16
or
xchg
xchg
jns
rclb
and
in
mov
or
inc
xor
cmp
push
aad
pushaw
jg
mov
or
and
sub
test
outsl
in
imul
cmp
les
push
call
icebp
test
sbb
inc
cmp
movsb
pop
hlt
rcll
add
lret
mov
or
mov
stc
testb
add
and
mov
mov
and
addr16
mov
xor
iret
or
mov
scas
cmp
pop
into
das
sbb
ja
xchg
nop
jnp
int
mov
push
sbb
out
std
pop
lret
cmc
cmp
pusha
cmp
cmpsl
arpl
xlat
call
adc
int
sbb
scas
fsin
xchg
pop
push
fcmove
imul
xor
repz
xchg
jge
jg
push
xor
push
shrl
jle
mov
mov
push
fmul
fmul
xchg
add
fcomps
lret
and
div
xchg
pop
cmp
or
hlt
in
test
jecxz
test
push
lods
out
push
sub
addl
punpcklwd
cmc
adc
sbb
loop
jns
adc
pop
cmp
and
imul
daa
xor
dec
jno
ljmp
nop
cli
add
cltd
adc
dec
push
pop
jne
or
jnp
push
sbb
movsl
mov
outsb
adc
push
aad
mov
sarb
cmp
jp
fstpl
repz
mov
ret
add
adc
shrl
push
mov
and
xchg
inc
pop
cmp
sti
pop
lcall
ljmp
pop
pop
mov
mov
add
sbb
push
inc
imul
jnp
push
adc
jbe
jecxz
or
test
lcall
insl
lret
out
std
cmp
push
jmp
int3
dec
sub
xor
adc
filds
aam
xor
sti
mov
or
shll
rcr
dec
inc
sbb
xor
addl
cli
lea
sub
hlt
out
loopne
inc
jnp
sti
cwtl
inc
push
push
cmpsb
inc
mov
or
add
pop
sub
sub
das
and
loop
jae
pop
ja
adc
rorl
int
shll
adc
cmpsb
xor
mov
lahf
pop
or
dec
and
inc
cmp
addr16
in
stos
gs
mov
popa
out
rcll
add
xor
sub
inc
xor
push
jmp
adc
popa
clc
sbbb
inc
out
mov
jnp
dec
inc
xchg
inc
popa
lret
popa
sbb
rol
incb
gs
mov
mov
push
sbb
subb
inc
out
das
dec
inc
rclb
mov
sbb
inc
aas
movsl
sbb
adc
jl
rclb
ret
and
outsl
sub
jno
pop
insb
test
subb
arpl
stc
xchg
mov
je
mov
push
out
dec
cld
jbe
pushw
lods
or
scas
inc
pop
aas
jl
jbe
push
xor
cltd
inc
rolb
gs
add
iret
fcmovnu
dec
cwtl
xchg
loop
mov
and
ret
cmp
mov
leave
jbe
add
and
xor
leave
mov
adc
jns
or
orl
mov
cmpl
sub
pop
xor
arpl
std
adc
inc
xchg
outsb
or
subl
xchg
fs
xorb
lcall
ljmp
sub
cmp
push
push
sbb
jg
push
push
in
pop
xchg
or
jecxz
push
vmovlps
add
movl
fildl
icebp
in
addl
in
dec
aaa
pop
pop
xchg
push
xchg
repz
mov
mov
jae
in
mov
int3
xorl
shrb
aas
push
push
jge
in
mov
push
mov
adc
cmpsb
xchg
pop
pushf
out
fistl
mov
imul
jbe
pop
insl
inc
popa
pushf
pop
mov
cmp
ds
push
lret
hlt
push
xchg
mov
andl
rol
jo
leave
in
dec
mov
mov
iret
adc
std
cmp
jmp
mov
in
inc
xchg
mov
mov
jbe
mov
cmp
shlb
icebp
or
inc
add
push
iret
andl
sbb
inc
decb
lahf
push
je
movsb
dec
lcall
inc
pop
cwtl
cmp
push
stos
test
pop
inc
inc
or
sbb
adc
arpl
xlat
cmp
fsubrl
out
fistpll
xor
out
aas
mov
inc
test
lds
call
cmc
jbe
inc
cmpsl
fwait
mov
sbb
aam
repz
mov
nop
xor
sub
mov
cs
and
dec
cs
sub
lods
jno
mov
push
sbb
jno
aaa
mov
mov
lock
cli
cmc
lock
lock
jg
mov
dec
insb
rcll
iret
and
int3
mov
mov
inc
fptan
cmp
jno
xchg
push
pop
or
ret
jo
loop
xchg
xchg
aaa
lods
adc
es
pop
lds
das
cmp
je
adc
inc
filds
iret
pop
pop
sbb
dec
inc
mov
cli
mov
inc
test
fildll
rol
and
stos
mov
sub
jge
mov
adc
cmc
xchg
push
div
insl
add
int
mov
xor
faddl
xchg
insl
lods
fdiv
pusha
lahf
sub
ret
inc
int3
incb
mov
pusha
or
pop
testb
pop
cmp
into
ret
sti
sub
das
stc
dec
pop
mov
imul
pop
mov
cmp
insb
aaa
fdivrp
fwait
gs
adc
pusha
pop
mov
insl
enter
xchg
fwait
pop
mov
mov
push
test
lea
add
sahf
ljmp
cs
cmp
jl
ds
xor
cli
pop
pop
add
movsl
mov
cmpsl
outsb
dec
xor
insl
jle
xor
and
push
out
inc
cli
dec
addr16
movsb
xorb
add
data16
pop
movsb
xor
push
mov
pop
push
out
bnd
es
pop
sub
and
add
sahf
or
test
scas
test
mov
sub
cmp
pop
mov
outsl
xchg
add
cmp
stos
xor
xchg
lods
and
xlat
repnz
cmp
push
push
lahf
mov
push
inc
pushw
in
mov
or
jle
xor
mov
inc
in
dec
movsl
outsl
cmovb
mov
xor
js
loopne
imul
dec
cmp
roll
xchg
push
and
mov
xchg
cmp
enter
jg
shlb
scas
push
xchg
fsubl
cmp
sub
pop
int3
imull
and
push
rolb
leave
dec
outsb
in
mov
add
push
jno
push
loope
push
mov
mov
js
pop
xchg
in
fwait
jns
adc
jae
cld
sub
gs
ja
push
sub
xchg
lods
ret
jb
aam
rcl
xchg
arpl
stos
mov
inc
sbb
mov
je
mov
lret
ds
jle
fdivr
fidivs
test
xor
adc
inc
addr16
ljmp
cmp
shll
inc
cmovle
lahf
mov
cmp
xor
sbb
movsl
aad
fdivs
sahf
pop
int3
shll
push
or
loop
ja
test
xor
ss
jo
movsb
test
gs
jnp
or
cld
mov
xchg
mov
movsb
mov
sbb
mov
sbb
adc
mov
dec
xchg
imul
sbb
jl
mov
dec
lret
pop
stos
ds
push
xorl
aas
dec
icebp
icebp
fisubs
add
push
inc
test
cs
jns
int3
int
adc
jle
sub
adc
in
push
or
test
movsl
mov
mov
jge
and
sar
pop
addr16
shlb
repnz
mov
std
enter
jl
xchg
pusha
xchg
lock
cld
out
sbb
test
xor
xor
xchg
testl
movsb
push
cmpsb
push
insl
stos
jp
and
push
lods
cmp
insl
inc
flds
mov
adc
pop
dec
jb
lods
dec
inc
jb
pop
adc
mov
push
inc
xor
fistpll
orb
popa
sub
jle
out
nop
js
pop
inc
mov
cs
inc
aas
pop
inc
jo
xor
cld
sub
les
lahf
cmp
jecxz,pn
sub
rol
jecxz
push
adc
int3
jecxz
add
add
jnp
push
jl
mov
mov
loop
xchg
in
cltd
push
repnz
rcl
mov
mov
inc
fstl
clc
mov
arpl
jns
cmp
mov
mov
lods
arpl
nop
sub
lret
nop
fidivl
push
add
leave
dec
sub
dec
or
and
std
inc
aas
test
jo
xchg
push
rcl
jge
push
lahf
loop
rclb
sub
mov
shlb
pop
sbb
cwtl
das
pop
push
outsl
call
hlt
or
lock
inc
movsl
push
jp
pop
xchg
cmp
daa
or
jl
pusha
pop
mov
jns
mov
xor
cli
testb
mov
enter
add
dec
sub
mov
sarb
mov
pop
cmpb
dec
outsb
std
inc
and
fidivrs
enter
jp
shrl
fsubr
js
mov
data16
and
push
and
or
mov
lahf
popa
clc
int
mov
mov
int
fmuls
scas
xchg
sub
pushl
pop
xchg
jnp
fstpt
jb
lods
mov
es
dec
lahf
andl
dec
dec
iret
loope
je
rcrb
clc
cld
pop
or
push
mov
imul
repnz
cmp
out
pop
mov
adc
fwait
sbb
sbb
adc
inc
jmp
mov
movsb
fcoms
xchg
ficoms
mov
mov
push
loope
dec
or
cltd
mov
mov
jae
jg
mull
push
cmp
adc
repnz
insb
aas
push
sub
outsl
xlat
cmp
sbb
repz
in
outsb
mov
ss
adc
bound
cmp
xor
inc
xchg
or
inc
jp
fdiv
lcall
inc
xor
and
mov
jmp
pop
inc
inc
mov
ret
add
js
test
jl
pop
and
dec
cmpb
cld
xchg
dec
daa
pop
inc
jnp
xor
adc
in
mov
mov
push
aas
inc
adc
sub
mov
cltd
dec
cmpb
sahf
testl
nop
sbb
lea
or
xor
or
rorb
imull
leave
or
dec
hlt
cmp
dec
nop
pop
insb
xor
lock
sub
inc
sahf
je
jne
sub
add
aaa
push
cmp
aam
fdivs
rcrb
les
call
icebp
ljmp
adc
insb
sarl
add
sub
test
loop
insl
in
pop
inc
scas
sbb
jp
in
aaa
push
insl
mov
mov
xchg
dec
mov
lret
fstp
stos
dec
lret
pop
mov
sub
jns
dec
xor
push
jnp
push
scas
idivb
xchg
sbb
dec
scas
rcr
sub
stc
js
imul
movb
loopne
sti
cmp
or
dec
jae
mov
adc
fcmove
dec
repnz
or
sbb
stc
push
imul
scas
lcall
cmpsl
jbe
aas
dec
andl
add
mov
ja
mov
fdivrs
scas
outsl
enter
and
mov
xor
movsb
outsl
rcrl
cmpsb
jle
mov
in
mov
ja
jge
dec
mov
sub
jl
jmp
movsb
push
xor
icebp
mov
push
xor
cmp
stos
in
adc
ja
lods
adc
out
leave
or
or
mov
mov
fwait
xchg
loope
shl
push
in
mov
mov
ss
fisubrl
std
sub
xchg
loop
pop
sub
adc
in
adc
gs
and
inc
jns
inc
xchg
jae
xchg
in
and
pop
ror
shl
ja
adc
adc
js
pop
pushf
lock
imul
aad
scas
xchg
xchg
leave
out
mov
lea
fmull
enter
fistpl
mov
test
pusha
dec
emms
jl
or
notb
jg
int3
mov
jb
inc
pop
cs
adc
jmp
inc
pop
adc
shl
and
scas
pusha
pop
jb
adc
movsb
mov
fistps
mov
aas
xchg
mov
add
imul
iret
enter
frstor
lcall
push
rorl
sub
lahf
xor
push
stos
cmpsb
data16
inc
lcall
mov
pop
shrl
add
add
js
pop
jecxz
add
inc
gs
or
mov
insl
adc
mov
adc
xor
dec
arpl
call
lods
sbb
insl
mov
getsec
adc
fdivl
or
sti
mov
fs
add
xor
idivl
aad
fstps
mov
loopne
insb
xchg
loop,pn
push
aam
cmp
flds
sub
imul
xchg
cli
mov
add
xchg
xor
aas
fdivrs
pop
mov
cwtl
mov
adc
mov
shll
lret
out
aad
sub
es
addr16
in
aad
icebp
dec
lods
ret
lods
sub
or
stos
fstpt
xor
mov
inc
fwait
test
outsl
add
adc
inc
sahf
stc
add
bound
ds
adc
outsl
inc
test
push
dec
add
sub
ret
mov
push
push
inc
sar
bound
bound
sbb
outsb
xor
push
rolb
fildl
and
sub
in
lret
or
jge
insl
mov
rorb
fs
adc
popf
inc
sbb
sar
in
adcl
cmp
inc
cwtl
dec
fcoms
in
jno
popf
aas
popf
xchg
test
dec
mov
add
out
imul
jne
xor
adc
cld
and
push
inc
stc
jecxz
push
dec
mov
std
pop
xor
jecxz
pushl
loope
add
inc
inc
xor
scas
dec
pop
loopne
mov
jne
sub
inc
rclb
xchg
sub
lret
add
test
enter
push
in
lods
inc
jmp
hlt
mov
cmp
loopew
or
mov
mov
pop
lds
leave
mov
adc
pushf
dec
mov
cwtl
or
jne
mov
fldcw
pop
cli
push
pusha
push
cld
cmp
sub
fdivs
pop
dec
push
jae
sarl
popl
fistpll
mov
cmp
dec
push
adc
repz
sub
mov
outsl
imul
mov
repnz
jno
pushf
pop
jmp
enter
out
and
jnp
mov
adc
stos
dec
add
jae
add
mov
push
mov
pushf
lcall
subb
roll
or
cs
ds
mov
sbb
scas
dec
and
jge
and
cmp
push
sub
ud0
xchg
push
fdivrs
data16
mov
fdiv
rcll
sub
daa
push
lahf
mov
out
or
roll
jecxz
jecxz
fistpl
cli
sub
and
jmp
push
in
cwtl
std
jnp
sbb
in
jp
in
fldcw
sub
add
loope
es
sub
mov
xor
mov
popf
xchg
or
lahf
icebp
bound
xchg
ret
outsl
popw
mov
sub
jbe
dec
mov
aam
xchg
sub
and
call
mov
inc
inc
push
cmc
jp
dec
clc
mov
push
and
aad
lods
lods
lret
jne
imul
nop
sub
jns
popf
or
mov
sub
mov
out
or
adc
add
icebp
scas
fld
pop
push
mov
int3
clc
sbb
push
mov
shlb
fistpl
cmpsl
pop
add
out
fstpt
or
jns
xchg
mov
jno
cmp
data16
cs
cmp
inc
jbe
movsl
idivl
daa
or
pop
adc
jnp
cltd
outsl
pop
mov
xor
in
mov
adc
sbb
cwtl
cmpb
fwait
in
fmul
frstor
sbb
mov
xchg
scas
jl
cwtl
cmp
out
rorb
cmpsb
fnsave
sbb
call
or
or
sub
shll
movsb
inc
pop
mov
adc
xchg
mov
and
mov
dec
test
scas
xchg
pop
mov
ret
inc
jecxz
jbe
daa
mov
shrb
mov
push
xor
mov
jecxz
in
jle
jmp
and
pop
push
sbbb
cmp
in
jo
cmp
xor
inc
sbb
out
xchg
push
xchg
out
ds
arpl
mov
mov
jg
frstor
fidivl
iret
mov
and
or
inc
shl
imul
dec
and
pop
fidivs
xchg
mov
sub
inc
push
xchg
pusha
pop
and
sahf
shll
sub
hlt
mov
cmp
xor
scas
jb
lods
jae
and
scas
pop
aad
icebp
xor
test
sub
test
mov
mov
insb
stos
dec
adc
outsl
mov
pusha
push
out
jl
shll
ffree
test
stc
pop
lret
cmp
mov
enter
int3
es
fstpt
xorb
push
je
orl
cmp
jbe
and
out
loopne
std
jg
divl
pusha
dec
pop
xchg
pop
ret
jle
js
cmp
xor
mov
addr16
popf
divb
or
je
xchg
xor
add
mov
push
loop
loopne
dec
pop
lcall
add
dec
jle
sahf
xchg
lods
pop
cs
iret
push
repz
dec
cmp
add
fimull
movsl
mov
mov
rorb
das
lcall
fstps
stc
or
in
rep
dec
divb
jno
std
add
or
insl
mov
lret
dec
ljmp
dec
cmp
stc
inc
push
sub
cwtl
in
in
pop
xchg
mov
xchg
aam
outsb
and
cmp
jl
add
mov
out
inc
xchg
rcl
ficoml
inc
iret
jae
stos
mov
dec
sbb
in
fs
lret
jp
je
out
and
add
and
sub
sub
iret
int
pop
sub
aas
sub
sbb
jo
jbe
mov
jne
lcall
aad
adc
xchg
sub
jl
xchg
lret
repz
out
popf
push
es
bnd
push
pop
sbb
in
jb
jmp
push
push
mov
pop
and
in
aaa
shrl
mov
jmp
fisubrs
or
inc
je
lock
and
and
ficomps
dec
and
popf
inc
or
jno
sbb
int
adc
xor
and
mov
loop
pop
test
dec
push
movsl
cmp
pop
movsb
shr
rcll
shrl
ljmp
mov
adc
int
cmp
dec
insb
fldl
dec
adc
shrb
or
jbe
inc
fisubrl
std
filds
add
adcl
scas
add
sub
pop
int3
jbe
insb
and
inc
sti
mov
jb
sbb
dec
xchg
mov
cmpsl
mov
roll
dec
aas
and
xchg
into
repz
cmp
sbb
xchg
jno
fcomps
repnz
aas
in
sbb
shr
push
xchg
gs
jb
loop
dec
inc
stos
clc
scas
sbb
sbb
or
pop
je
inc
test
xchg
shlb
dec
rcll
dec
push
mov
cld
cltd
mov
cmp
inc
xor
lock
pop
xor
inc
loopne
dec
sub
outsl
pop
mov
mov
into
ja
mov
les
fstpl
dec
bound
shl
addr16
out
std
into
cmp
mov
test
cwtl
inc
xor
cmp
xchg
pop
pop
xor
movsl
xor
adc
fcomps
sub
sbb
out
nop
xchg
dec
sbb
sub
adc
shl
cmc
mov
add
add
data16
mov
cmpb
lds
in
jo
push
mov
push
sub
incb
cmp
or
or
in
hlt
aad
push
jmp
jl
xchg
mov
sahf
je
shlb
lock
fcmovbe
in
mov
insb
mov
nop
inc
jo
je
sub
iret
pop
in
and
lods
mov
mov
jl
mov
adc
lahf
pop
mov
call
mov
mov
cld
lods
aad
and
inc
mov
inc
lock
aaa
ds
sub
push
push
inc
push
adc
nop
cmp
hlt
push
sbb
dec
into
testb
mov
adc
lret
scas
leave
jge
fisubrl
add
mov
xchg
xchg
rorl
mov
dec
mov
pop
aam
lock
mov
pushf
cmpb
xlat
rorb
and
fwait
repz
xchg
push
add
push
mov
sbb
cmp
push
cmpsb
or
cmp
mov
or
mov
cmp
pop
jecxz
ror
jg
in
mov
lods
jle
call
daa
or
sub
pop
pop
mov
cmp
jno
int
out
push
ror
sub
sub
lea
push
xchg
shl
repnz
sbbl
add
xor
icebp
filds
jmp
inc
inc
sbb
add
pop
test
loop
cmc
pop
sub
sbb
fbld
cmp
sbb
pop
jb
mov
mov
jo
gs
nop
mov
dec
out
push
pop
fisttpl
push
pop
jae
jmp
stc
ss
dec
in
add
ror
cs
xor
inc
ret
pop
gs
cs
xchg
les
insb
xor
push
jl
mov
add
dec
outsb
add
incb
loope
shl
outsb
sbb
mov
popa
xchg
lods
popa
dec
push
cmpsl
gs
jle
aaa
inc
ret
stc
ret
cmp
ret
and
pop
les
pop
mov
in
and
xchg
das
mov
sbb
mov
and
arpl
xor
xor
fildl
lret
mov
inc
push
cmovb
adc
ficomps
es
ds
xchg
icebp
out
ja
lcall
fcmovne
mov
adc
and
sarb
mov
push
mov
xor
sarl
mov
gs
aad
sub
es
adc
lds
pop
adc
lods
cmp
mov
inc
xor
loope
and
mov
outsl
mov
mov
jae
insb
bound
adc
imul
and
je
in
in
rcrb
mov
ffreep
pop
pop
add
xchg
and
rcrl
mov
cmpsl
stos
lods
add
pop
xchg
test
xchg
aam
shlb
shlb
test
or
add
in
mov
loopne
in
fisttpll
or
hlt
sbb
addr16
cmp
adc
or
addr16
adc
addr16
jns
fimuls
jb
xor
mov
fcoms
inc
jae
push
addb
rcrl
dec
fidivrl
and
adc
shl
test
lods
fiadds
or
icebp
inc
xchg
cmp
add
hlt
xchg
and
popa
jbe
hlt
lods
push
adc
lds
and
lds
inc
inc
leave
inc
sbb
inc
cmp
adc
sub
fisttpll
arpl
pushf
pop
sahf
out
push
cmpsl
mov
sahf
jb
mov
fnstcw
add
fstpt
xor
mov
and
xchg
ljmp
add
insl
outsl
jg
and
notb
and
push
das
rclb
out
lahf
jecxz
bswap
stos
mov
xchg
ret
fdivs
iret
cmp
sub
push
xchg
jne
pop
mov
scas
sar
cmpsl
mov
push
ret
sar
dec
pop
inc
cmpsb
jge
mov
ss
mov
push
insl
jo
insl
js
in
inc
out
out
pop
pop
mov
adc
add
out
dec
lret
shr
ds
xor
or
dec
cmpsb
push
adcl
insb
ficoml
xor
scas
ss
mov
mov
decb
add
sub
add
xor
xor
push
pop
stos
loop
pop
rorb
mov
outsl
pop
leave
cmpl
addr16
andb
or
add
mov
mov
push
mov
mov
jnp
into
sub
mov
pop
mov
frstor
xchg
mov
mov
xor
pushf
cmpsb
call
out
or
leave
popa
fdivrl
mov
sub
lods
rorl
stos
dec
mov
aam
inc
mov
pop
pop
shl
dec
dec
mov
scas
add
xchg
push
adc
add
jb
mov
stc
imul
mov
imul
icebp
jmp
pop
enter
loop
inc
or
out
arpl
leave
sbbb
add
dec
mov
daa
mov
decl
adc
sub
add
xlat
mov
adc
outsb
xchg
cmp
jp
adc
hlt
iret
aas
arpl
dec
fs
shrb
xor
jnp
aaa
mov
outsb
rcr
fnstsw
push
movsb
ja
or
test
in
cmc
jb
in
inc
mov
jmp
lds
dec
sbb
daa
mov
inc
shrb
mov
shlb
push
shrl
xchg
xor
mov
mov
sarl
cmp
fstl
cli
push
xchg
ss
arpl
je
push
add
lea
add
aaa
sti
push
sti
lret
mov
popa
push
mov
in
stos
stc
fisttps
mov
jmp
mov
ds
pop
xor
mov
mov
pop
sbb
push
daa
or
mov
sbb
subl
mov
adc
mov
inc
stos
jo
dec
sub
cmpl
fldt
pushf
xchg
outsl
push
daa
das
xchg
inc
icebp
mov
dec
in
jl
mov
inc
sub
call
inc
adc
dec
daa
sbb
sub
inc
les
popf
aad
sbb
jle
dec
lret
daa
addr16
int3
movsb
mov
je
adc
jne
aaa
bound
mov
sbb
iret
out
fistpl
rol
mov
lods
daa
sub
or
ret
imulb
xor
jnp
push
fldcw
ds
add
in
stos
xor
bound
cmp
scas
sbb
lods
aam
sbb
jnp
push
xor
arpl
add
xchg
adc
jg
gs
arpl
push
es
adc
adc
adc
je
stos
jo
leave
cmp
out
addr16
and
sub
jbe
lret
sahf
push
mov
cs
stos
rcrl
es
scas
ljmp
jle
xor
xchg
popa
loopne
add
inc
pop
iret
dec
dec
repz
rolb
and
test
sahf
push
jecxz
aam
mul
adc
leave
add
adc
ljmp
mulb
movsl
in
push
movsb
push
or
sbb
and
or
lcall
loopne
mov
jo
sbb
jmp
add
sub
mov
sti
popl
push
scas
push
scas
push
iret
jecxz
mov
xchg
sbb
popf
lahf
mov
and
xchg
nop
shlb
icebp
mov
ss
or
push
iret
js
cmp
xor
insl
adc
pop
lret
inc
dec
call
xchg
adc
mov
xor
fs
mov
add
xor
movsb
jbe
push
cmp
rcrl
fldt
push
xor
in
push
jg
jo
int
dec
xchg
mov
aam
cmp
cmpsl
aam
lahf
or
ret
pop
xchg
ja,pt
scas
repnz
mov
sbb
ret
daa
add
add
fs
xor
add
inc
lret
cmp
cmpsb
cwtl
stc
mov
mov
nop/reserved
cmp
add
das
adc
nop
jp
push
sub
sti
pop
es
popf
xchg
inc
xor
sub
push
mov
scas
jmp
inc
popa
daa
cmpsl
repnz
sti
lock
mov
jle
adc
test
ljmp
ja
adc
int3
out
popa
sbb
mov
sbb
add
pop
fistpl
shrb
int3
mov
pop
mov
loopne
fsubp
loop
adc
push
adc
movl
push
incb
ror
jl
inc
pop
out
mov
lock
jne
add
das
cmp
mov
fdivrl
jmp
psrlq
xchg
lds
adc
mov
das
fcoms
leave
int3
cmc
or
je
xor
out
scas
jb,pt
cmpsl
push
or
mov
int3
mov
xchg
aam
sahf
js
rcr
mov
sbbl
ds
add
mov
push
les
jg
stos
push
xchg
or
sbb
outsl
and
inc
std
scas
dec
andb
fdiv
add
orb
sub
dec
pop
scas
rcrb
pop
ja
or
fildll
mov
adc
cmp
xor
push
xchg
sbb
cmp
pop
sub
push
and
fidivrl
sbb
ret
dec
or
dec
xor
mov
sub
xorb
mov
cmc
cwtl
ja
mov
jno
push
lds
js
jl
push
rcll
outsb
inc
add
jns
pop
push
stos
fstp
cmp
cmpsl
ds
mov
push
push
add
inc
adcl
aam
jbe
aam
dec
pop
outsb
xchg
in
sbb
sub
fcompl
fdivs
arpl
cltd
pop
sti
mov
daa
insl
int3
imul
dec
push
add
jo
stos
pop
push
out
roll
push
inc
rorb
adcb
mov
and
push
mov
fidivrl
xchg
in
or
imul
jne
mov
and
test
and
push
adc
mov
and
xchg
mov
addl
or
notl
push
cmp
sub
addr16
aad
mov
mov
call
stos
in
mov
dec
jb
xor
pop
and
push
lds
push
rorl
pop
push
imulb
sbb
mov
add
xchg
push
mov
stos
adc
test
pusha
cmp
sbb
sub
push
cmp
xlat
cmp
mull
cld
fwait
add
and
mov
inc
aam
int
inc
cwtl
dec
inc
pop
int3
xchg
stc
or
cmp
dec
enter
pop
fistpl
outsb
xor
jmp
cltd
cltd
inc
inc
and
mov
and
hlt
cmc
add
add
out
sub
dec
xchg
pop
and
xor
sbb
pop
and
ljmp
or
xor
cli
fbld
popa
flds
fdivs
in
inc
jge
jmp
adc
mov
test
mov
pop
add
sbb
pop
dec
push
mov
repnz
pusha
test
int
add
clc
nop
popf
sub
xor
sub
sbbb
das
inc
int
fidivs
ljmp
rcrl
push
add
pop
ljmp
ret
clc
jle
xor
js
dec
movsl
out
dec
imul
ss
lret
mov
jbe
xor
nop
fistps
fucomi
sub
mov
cmp
lss
push
lods
iret
ror
push
lock
inc
aam
lock
push
cmp
inc
scas
xor
fwait
mov
test
cld
lea
sub
adc
mov
pop
dec
test
in
das
out
mov
jns
fiaddl
mov
mov
mov
xchg
mov
cmpsl
xorb
rol
mov
pop
mov
das
sub
pop
mov
ss
out
js
pushf
push
push
orl
cmp
orb
push
inc
mov
jne
inc
push
cmp
es
mov
push
inc
out
out
call
insb
mov
xchg
mov
sti
dec
addr16
scas
and
xor
fs
std
pop
subb
daa
test
fildl
xchg
sub
mov
mov
sub
xor
adc
adc
addr16
add
mov
pop
xchg
mov
push
jp
mov
push
call
cli
imul
lock
mov
jb
fidivs
xor
sub
xorl
sbb
bnd
mov
sbb
mov
movaps
jae
clc
mov
adc
push
xor
fisubrs
stos
add
out
mov
xlat
sbb
sub
add
lds
add
mov
movsl
pop
bound
xor
adc
xchg
popf
imul
pop
in
aam
jl
dec
scas
pop
pop
jecxz
inc
fcompl
cltd
cli
ljmp
cltd
jne
push
mov
pop
mov
mov
dec
cmpsl
push
mov
mov
xor
pop
lret
cli
mov
add
mov
fsubrs
and
push
fwait
mov
pushf
sarb
aad
dec
adc
fldcw
stc
mov
mov
jle
sub
bound
push
mov
shrb
dec
pop
out
int3
push
loopne
xchg
fmuls
push
cmp
push
daa
inc
add
xchg
mov
mov
ror
mov
sbb
lea
daa
mov
int
xor
lcall
popf
int3
scas
cmp
or
mov
cmpsl
sbb
cmpsl
cmp
sti
jbe
jle
jns
ljmp
fldcw
mov
pop
addr16
outsl
lods
dec
jbe
cmp
gs
jle
add
pop
pop
adc
jae
test
cmpsl
std
lret
iret
std
aad
in
aas
pop
mov
dec
pushf
inc
rol
cmc
das
adc
xor
iret
jns
mov
lgs
lods
mov
mov
aas
sub
pop
pusha
shlb
dec
jne
add
or
icebp
sbb
inc
push
das
jecxz
jns
cmp
insl
cs
add
cmp
cmp
cltd
call
les
cli
rcr
xchg
jns
dec
iret
mov
scas
clc
js
out
insl
out
imul
add
push
out
out
jl
mov
xchg
subl
push
add
pop
cmpsl
scas
andb
loop
lds
jns
jno
pusha
xchg
cmp
mov
push
hlt
adc
sub
out
jp
xchg
into
xchg
sub
jl
xchg
out
adc
out
lock
sbb
mov
loopne
stos
test
push
jmp
in
xor
xchg
xchg
mov
dec
daa
push
outsl
sub
frstor
das
and
cmpsb
test
std
push
cld
fwait
inc
imul
test
add
mov
inc
outsl
faddp
jge
cmp
pusha
ret
xchg
jbe
cmpl
das
enter
xlat
repz
jge
jbe
adc
ret
movsl
jns
scas
mov
cmp
repnz
pop
gs
sbb
arpl
out
mov
cli
arpl
add
mov
mov
xchg
mov
into
aaa
jmp
jl
repz
shlb
add
push
sbb
adc
imul
mov
mov
jo
fcmovne
pushf
sub
dec
lods
push
cmp
and
popf
sbb
in
negl
add
sahf
add
jl
xchg
jl
iret
stos
add
inc
lcall
sbb
jae
dec
jns
mov
nop
and
cmp
cmpsl
xchg
cmp
push
stos
ret
xchg
push
rcll
sub
push
mov
pop
in
sub
pop
icebp
ljmp
sbbl
xchg
cwtl
std
aas
jne
mov
push
jge
inc
addb
test
fisttpl
mov
pop
push
sbb
outsl
aam
loop
jge
adc
xchg
subb
xchg
pop
push
jo
cmp
mov
sbb
push
push
sub
imul
jns
mov
xchg
bound
hlt
shrl
pop
and
notl
adc
mov
sub
mov
dec
shl
movsb
pop
jecxz
xchg
xchg
or
fisubrl
push
xor
nop
inc
sbb
mov
xor
xor
nop
xor
xchg
and
out
fcoml
inc
lea
sub
jo
pop
adcb
mov
jns
pop
lea
nop
jb
cmpb
mov
and
hlt
imul
adc
cmpb
add
add
stos
cmp
sub
lds
mov
cmp
loope
xlat
adc
mov
dec
cwtl
jbe
mov
xor
xor
jp
sbb
jmp
outsb
scas
stc
push
add
push
cmp
jns
clc
jo
pop
pop
stos
mov
push
mov
fstps
mov
dec
fcmove
or
adc
lock
or
jb
add
hlt
cmp
sbb
idiv
cli
lea
and
dec
jge
inc
cli
outsb
clc
icebp
test
cmp
stos
dec
sbb
xchg
repz
dec
pop
int
jg
xchg
jl
addr16
mov
in
or
mov
push
test
xchg
mov
dec
je
jp
mov
sbb
adc
xor
xchg
ljmp
dec
lods
xchg
cmpsb
cmc
idivl
test
mov
jo
jg
mov
xchg
shll
lea
pop
outsb
mov
clc
es
sub
push
mov
loop
daa
inc
stc
stos
shlb
mov
into
incl
mov
scas
shrb
sub
mov
mov
push
in
pop
hlt
stos
push
pop
callw
sub
sbb
inc
rolb
jbe
mov
movsb
sub
testb
fsubl
ret
data16
not
into
xchg
sub
repnz
pop
jmp
das
add
pop
inc
and
mov
mov
push
jo
or
rolb
cltd
gs
cmp
jecxz
aad
cli
cmp
xchg
dec
and
xor
cli
jecxz
jns
in
ds
push
js
sub
rcrb
pop
out
icebp
xchg
loopne
cmp
sbb
out
outsl
xchg
dec
in
ud0
xchg
sbb
jecxz
mov
inc
pusha
and
enter
icebp
mov
mov
clc
sub
call
pop
sbbl
mov
leave
xor
stos
mov
push
lahf
test
rol
movsb
sbb
popa
mov
dec
sub
leave
push
mov
jne
or
add
sbb
cmc
adc
inc
frstor
imul
and
mov
in
and
call
lods
mov
dec
mov
mov
jle
jg
enter
lcall
inc
test
xchg
push
mov
mov
std
jns
xor
mov
orb
and
add
and
aaa
mov
dec
test
and
test
lret
stos
repz
in
jp
cmpsb
sbb
imul
bound
add
pusha
ss
xchg
nop
icebp
mov
cli
mov
mov
or
loope
lcall
fadds
push
mov
inc
fildll
popf
inc
nop
repnz
or
es
hlt
aad
or
xchg
xchg
or
xlat
in
lahf
lods
xchg
jae
inc
shrb
sub
jle
je
out
mov
push
or
inc
dec
lret
xchg
lods
idivl
test
out
jns
push
pop
adc
movsb
sti
xor
daa
mov
xchg
add
rorb
mov
mov
adc
loope
fwait
stc
idivl
test
out
pushf
mov
rcrb
xor
and
rcr
dec
lret
hlt
adcb
cmp
push
mov
mov
or
std
mov
out
lds
rcrl
std
cltd
jae
lret
mov
and
sub
pop
rcll
fwait
xor
mov
mov
loopne
xchg
shlb
movsl
scas
adc
xchg
xchg
std
fbld
out
sbb
iret
decb
cs
repz
test
jmp
push
fdivs
dec
popf
mov
push
mov
dec
add
ds
and
xchg
inc
ror
pop
sbb
in
dec
push
push
push
les
arpl
and
ficoms
outsl
popf
xchg
jno
fnstenv
cld
aaa
in
xor
lock
cmp
fistl
insb
ja
cmc
push
sub
xor
xchg
subl
jns
add
call
pushf
mov
insl
rorb
cmc
sub
cld
mov
fsubr
pop
lods
xchg
push
shll
pop
push
sbbl
mov
leave
xchg
mov
data16
mov
leave
mov
stos
lret
jge
xor
insl
hlt
loop
add
xor
jns
sub
testl
inc
flds
cmpsb
xchg
xchg
loope
cltd
imul
insb
cmpsb
sub
pusha
add
xor
add
test
push
xchg
pop
les
jnp
dec
aam
sbb
popa
adc
and
sub
cmp
outsb
adc
pop
adc
dec
cmp
into
rorb
leave
inc
scas
mov
sbb
loop
testb
sbb
add
addl
pop
add
cmp
int
mov
test
rorl
or
roll
movsb
test
xchg
bound
mov
add
jge
stc
pop
cmp
in
xor
out
and
sahf
or
cmp
arpl
loop
and
cmp
xlat
xor
cli
mov
push
leave
cmp
out
xchg
dec
inc
cmp
fnstsw
mov
mov
cmpsl
jmp
and
clc
fcompl
jnp
subb
cmpsl
and
out
mov
cmp
xchg
adc
mov
cmp
jecxz
insl
pop
out
repnz
or
push
jne
jo
and
popf
sub
test
cmp
sbb
sahf
cli
fs
mov
inc
dec
pop
xchg
mov
inc
xlat
add
movsl
dec
jecxz
mov
or
shll
xor
sub
push
mov
into
pop
dec
xor
icebp
rorb
sbb
test
iret
mov
loopne
and
shr
pop
shlb
sti
xchg
aaa
adc
mov
mov
jle
push
jnp
stc
pop
in
in
gs
or
cld
outsl
xchg
pop
jno
int
repnz
lods
subl
movsl
cwtl
inc
xor
cmp
loop
mov
xorb
dec
fcmovnu
mov
mov
sbb
in
test
push
pushf
repnz
in
jg
xchg
xchg
mov
dec
adc
repnz
lea
or
add
xor
decl
cmc
lahf
jae
push
lea
lret
fs
jnp
sbb
mov
cmpsl
sar
vpcmpeqw
shlb
cs
jg
gs
fimull
cs
jmp
or
sbb
sbb
adc
adc
push
push
cld
movsb
repnz
movsl
in
xchg
scas
loop
dec
stos
push
inc
jmp
push
jnp
and
xorb
cmp
mov
jge
push
daa
pop
dec
shrl
add
add
adc
int3
push
inc
cmpsl
and
sahf
cld
add
gs
push
pop
cmpsb
push
lret
cmp
addl
stos
cli
and
or
notl
sub
mov
lods
push
scas
pushf
shll
cmpsb
pop
adc
mov
ss
dec
sbb
int3
repz
int3
xor
fildll
lock
jp
decl
lods
outsl
dec
xor
or
bound
pop
add
mov
arpl
push
fsubl
and
push
dec
data16
jecxz
adc
adc
dec
pop
call
rep
xchg
les
stos
rolb
icebp
std
xchg
mov
int3
movsl
sbb
sub
icebp
aam
inc
jno
lods
xor
inc
stos
subb
mov
xchg
cmp
rcrl
cmp
sub
inc
sbb
imul
bound
pop
stos
scas
into
ds
fldl
popf
mov
out
push
adc
mov
repnz
jae
or
jg
mov
sub
jns
je
jle
stos
jno
test
sub
xchg
mov
mov
pushl
stc
add
pusha
push
cmpsb
dec
adc
pop
and
dec
push
cmpsb
adc
loope
inc
cmpsl
xor
add
cmpsl
aam
in
insl
clc
xor
pop
cs
push
inc
sahf
dec
je
sti
add
xchg
test
idivb
shrb
mov
addl
mov
iret
and
mov
icebp
mov
sbb
pop
sti
mov
and
lods
andl
out
sub
test
mov
cmp
push
sti
lods
xchg
movsb
sub
ret
sub
add
jns
push
lret
cmpl
ss
add
mov
pop
jnp
pop
dec
push
mov
dec
pop
clc
mov
push
imul
inc
inc
sbb
jno
je
ljmp
in
imul
mov
push
mov
inc
popa
inc
out
sub
sub
mov
cmp
fwait
aad
or
jb
leave
or
dec
push
add
mov
les
aam
lret
xchg
dec
icebp
js
adc
test
jge
mov
lcall
fwait
nop
cmp
jne
test
pop
inc
adc
pop
cmc
sub
pusha
and
add
popa
addr16
out
scas
xchg
xchg
js
jb
clc
push
jg
push
xor
aas
xchg
mov
add
xor
jnp
xor
mov
mov
dec
in
sub
imul
ss
ja
lds
xchg
shrl
and
adc
repz
lret
pop
or
xlat
aam
or
sti
fs
mulb
sbb
pop
ficomps
insb
xor
adcl
cmp
mov
push
aam
fwait
jmp
or
ja
lret
or
adcb
rorl
sub
lret
mov
cmc
cmp
push
jae
lahf
xchg
into
mov
stos
mov
pop
fnsave
adc
lret
cmp
nop
rcrl
jns
idivl
fisttpl
xchg
xlat
adc
add
jl
notb
inc
dec
jno
mov
dec
cmp
adc
jle
aam
add
mov
push
lret
fwait
shlb
scas
jno
cmp
out
mov
add
sub
pop
mov
adc
pop
xor
xchg
jle
insl
hlt
fwait
es
and
add
in
or
sbbl
and
jl
ret
fiaddl
shrl
push
cmp
mov
cmc
cld
ds
push
pop
xor
out
or
cld
aas
dec
push
mov
sbb
daa
int
pop
fldt
cmp
mov
loopne
dec
mov
outsl
xor
xchg
movl
lock
insb
out
loope
ss
call
push
jnp
lds
jmp
adc
std
loope
out
in
xchg
movsl
xor
addr16
subb
cmp
xor
mov
xchg
sahf
xor
leave
jmp
inc
dec
sbb
add
xorb
pop
hlt
outsb
pop
or
in
jno
and
cmc
mov
mov
inc
iret
sub
mov
fwait
call
iret
xchg
sub
lds
inc
out
sahf
call
cmpsb
mov
mov
xchg
mov
aad
dec
out
fstps
mov
mov
xchg
clc
aam
int3
movsb
xchg
insb
mov
mov
cs
mov
hlt
repnz
dec
fidivl
xchg
inc
inc
mov
dec
pop
out
or
popa
add
inc
pop
inc
orl
dec
je
data16
mov
mov
stos
ss
nop
rcl
scas
and
bound
inc
ficoms
loopne
sub
add
add
jge
in
and
push
das
fistl
test
mov
xchg
lahf
dec
jecxz
sti
mov
fisttpl
xor
vandnps
sbb
rcll
push
nop
stos
mov
push
sti
sbb
cwtl
jmp
jbe
daa
push
pusha
lret
icebp
fmul
jl
or
inc
jne
std
pushl
and
push
cmc
or
add
and
and
mov
rcr
stos
lcall
pushw
inc
leave
repz
or
jge
jecxz
les
xchg
xchg
in
mov
mov
add
dec
mov
mov
lea
mov
dec
in
xchg
subb
xor
out
push
mov
orl
mov
into
test
or
inc
jle
sub
rcl
inc
adc
inc
gs
int3
xor
jne
in
jne
insb
movsl
mov
aaa
inc
xor
cld
xlat
cltd
mov
push
into
test
lods
iret
aad
leave
or
xchg
cld
xor
mov
lret
pop
aad
mov
jmp
rcr
push
decl
aaa
incb
mov
cmc
and
aam
jge
push
hlt
sub
in
mov
sahf
jb
or
ret
lock
mov
xor
sbb
ja
arpl
fcomps
pop
inc
add
sub
ret
outsl
insl
cmp
push
xor
mov
arpl
and
dec
push
mov
sbb
add
imul
mov
and
lds
dec
test
hlt
xorb
sbb
bound
div
clc
jp
dec
and
inc
sbbb
mov
xchg
dec
inc
in
push
fs
mov
lock
dec
add
ss
adc
sub
push
and
inc
xor
sbb
mov
or
cmpsb
sub
pushl
sub
xor
test
test
cmp
fcom
out
in
loope
sysenter
or
jae
jns
mov
incb
inc
pop
pop
cmpsb
pop
pop
xlat
sar
fsts
adc
ja
jg
pop
push
inc
pushf
sub
mov
loopne
push
gs
icebp
dec
and
sub
insl
psubq
lcall
cld
fstl
outsb
mov
cld
sub
or
xchg
push
idivl
aaa
mov
aad
push
popf
subl
adc
ret
in
jmp
pop
xor
rclb
pushf
jno
mov
mov
bound
insb
dec
in
xor
cmpsl
xor
xchg
imul
add
iret
jno
in
gs
sti
les
mov
add
rcrb
xor
mov
pop
inc
sbbl
dec
das
cmpsl
mov
sub
aam
sub
push
sub
ja
test
lea
test
xchg
cmp
psllw
mov
inc
pop
rcr
jmp
jl
ds
fdivs
mov
mov
add
mov
add
xchg
dec
cltd
cmpb
jp
cld
sub
xor
or
cmpsl
shrl
nop
adcb
mov
cwtl
add
xor
mov
or
js
dec
stc
dec
xor
xchg
sti
jnp
test
mov
pop
add
adc
pop
cmp
sub
jp
enter
sbb
mov
daa
imul
test
push
imul
in
sbb
out
mov
sbb
fwait
loope
scas
ret
pop
imul
mov
pop
inc
in
cli
cwtl
push
andl
adc
les
ds
xchg
ficomps
or
pushf
sbb
in
sub
sbb
dec
cwtl
jb
inc
or
jae
fisttpl
pop
dec
push
or
inc
add
gs
xchg
or
adc
sbb
out
loope
aam
cld
sub
pop
daa
cmp
mov
add
es
xor
shl
inc
inc
xor
and
sahf
cmc
popf
inc
jb
test
and
popa
fs
nop
cmp
lds
idivl
sub
sbb
xchg
leave
pop
add
ja
pop
pop
mov
dec
decl
mov
jae
push
pop
pop
repz
mov
add
mov
lock
xchg
mov
mov
in
daa
shl
data16
xor
add
movsb
ljmp
xchg
push
rorl
int
cwtl
movsb
cmp
or
and
outsl
movsb
adcl
add
lock
test
lock
sbb
xor
lock
dec
imul
cmp
int3
push
nop
in
push
jmp
mov
jo
out
ja
mov
add
insb
ret
mov
nop
xor
ret
dec
bound
jge
js
lcall
jo
cmp
jnp
rcl
scas
cmpsb
mov
in
dec
dec
je
adc
push
and
imul
das
jne
mov
mov
les
dec
dec
movsb
sub
outsl
shlb
sbb
jo
test
popa
or
mov
pop
aad
xor
mov
jne
adc
ss
xor
dec
cmp
fs
int
jns
xchg
and
mov
addl
add
loopne
das
test
mov
mov
jne
mov
or
sbbb
sbb
xchg
rorb
arpl
sbb
ftst
mov
fimull
jns
mov
push
push
pop
xchg
push
push
xor
pop
ret
pop
mov
cmpb
mov
adc
sahf
pushf
or
and
mov
ret
sti
mov
mov
and
push
xchg
outsl
in
jne
and
int3
dec
push
mov
push
stos
and
shrl
jle
ror
cmpsl
lcall
aaa
sbb
sarl
aas
push
inc
mov
cld
pop
in
stos
ja
pop
xchg
addr16
outsl
xor
ja
sarl
dec
mul
rclb
mov
mov
push
adc
psubsw
repz
aad
pop
mov
pop
pop
shlw
out
jae
mov
outsl
int
and
int
cli
jecxz
lea
test
cmp
movsb
push
push
paddsb
dec
gs
clc
inc
jo
push
mov
xchg
push
fiadds
mov
mov
xchg
push
xor
idivb
in
mov
jmp
ficoml
ror
lahf
inc
shlb
push
mov
mov
inc
push
mov
pop
and
icebp
cmpsb
push
add
pushf
xchg
sub
iret
out
and
add
cltd
adc
lea
or
cli
push
add
test
flds
cltd
sub
lret
sub
cs
js
lret
loopne
xor
fcompl
incb
sbb
hlt
negb
xor
pusha
sub
pop
pop
xchg
mov
in
mov
mov
xchg
sahf
daa
popl
jl
repz
rcl
stos
mov
les
add
xlat
arpl
add
mov
push
sarl
int
dec
push
stc
push
hlt
rolb
push
adc
jns
jnp
gs
or
loop
in
dec
inc
cmp
or
fdivrp
movsb
lea
push
mov
fistl
lock
pop
push
out
add
xchg
test
inc
cmp
mov
dec
pop
mov
or
or
gs
pusha
insb
lret
push
push
mov
mov
push
loop
sbb
test
into
lock
scas
mov
add
aaa
xor
and
cmp
cmp
and
insb
inc
or
cli
rcrl
enter
add
lret
jns
loope
cmp
mov
gs
pop
movb
mov
inc
out
push
mov
insb
sti
js
in
leave
pop
xor
sub
subl
filds
xchg
jns,pt
pop
enter
lock
cmp
pop
sub
iret
popl
xor
cmp
inc
imul
cmp
jnp
mov
repz
movsl
gs
jbe
in
sbb
jecxz
jp
lret
out
dec
dec
jl
neg
xchg
insl
loopne
enter
mov
movsb
sub
aaa
cwtl
inc
and
daa
loopne
push
in
hlt
pop
aad
fisubs
xchg
mov
jns
jmp
mov
and
jb
adc
mov
lea
addr16
sbb
leave
lods
push
jnp
enter
xor
inc
xor
or
das
fildll
cmp
decb
scas
pop
xor
xchg
jge
cmp
jmp
arpl
imul
aas
sarb
std
negl
ja
clc
test
scas
in
xchg
lret
sbb
push
ret
cmp
mov
sbb
test
out
inc
mov
push
mov
addr16
push
and
rolb
jb
fdivl
in
lret
hlt
sbb
aaa
pop
sbb
call
adc
mov
or
rcr
jb
or
jge
cld
add
scas
add
stc
push
dec
dec
aad
loope
lret
enter
in
jne
nop
mov
in
lock
mov
lcall
lds
in
pop
jge,pt
stos
fs
jecxz
loopne
inc
jecxz
bound
push
call
add
xor
inc
insb
mov
mov
or
jge
jne
push
leave
mov
dec
or
gs
mov
in
mov
and
inc
gs
xchg
push
imul
fcmovnu
ret
cwtl
adc
mov
adc
inc
ljmp
or
push
sub
clc
cmc
adc
or
xlat
scas
and
jecxz
mov
cltd
add
xor
leave
dec
scas
add
push
ror
or
mov
pop
add
dec
cmpsb
pop
push
incl
fldt
cld
push
les
xchg
cld
scas
aas
jno
mov
rorl
mov
jnp
mov
daa
clc
xor
andb
xlat
bound
push
sub
cmp
sub
adc
sbb
or
aam
mov
jb
push
sbb
lar
lea
int3
ja
rcr
push
jbe
loopne
sarl
xor
fimull
cmp
mov
subb
out
scas
test
in
lahf
xchg
xchg
sbb
sub
cmp
mov
pop
dec
jmp
daa
popa
gs
sarl
lock
out
mov
adc
and
fwait
ror
xchg
out
pusha
inc
lret
pop
dec
push
or
mov
scas
sbb
repz
mov
les
pop
mov
xchg
cmp
popf
aaa
xchg
mov
arpl
push
mov
dec
or
out
and
getsec
imul
loop
hlt
jmp
repnz
test
xor
mov
mov
jecxz
push
xchg
gs
hlt
in
and
out
stos
pushf
outsl
xlat
cltd
xor
shl
or
dec
addr16
cmp
jb
jae
int3
push
in
imul
xlat
ret
inc
mov
cmp
inc
lcall
add
fwait
pop
push
adc
loope
daa
add
cmp
in
in
cmpsl
or
lahf
xor
sub
push
push
mov
movsl
incl
push
shll
in
cmpsb
fwait
repz
pop
lea
in
add
lret
daa
das
pop
mov
or
ljmp
stos
push
xor
notl
sub
add
lds
repz
dec
inc
jmp
das
push
mov
dec
das
pushf
leave
push
in
cltd
test
mov
sub
imul
adc
adc
inc
fmulp
clc
lock
loop
jge
adc
inc
inc
mov
or
inc
lods
xchg
mov
adc
jne
mov
inc
mov
das
outsb
lock
orb
mov
lods
sub
jg
iret
and
sahf
mov
sub
or
aas
adc
xchg
int3
imul
xchg
xor
push
scas
test
add
pop
jg
xchg
sbb
jne
xchg
push
sbb
jns
test
mov
pushf
cmpsb
push
sbb
fs
icebp
mov
sub
jbe
imul
imul
and
in
xchg
fiadds
jne
sub
hlt
jl
in
mov
mov
fisubrs
cs
cmc
cmc
xchg
mov
xchg
bswap
dec
xchg
add
or
cs
enter
call
mov
sbb
xor
cld
cmp
lret
es
xchg
pop
outsb
dec
cmp
sub
xchg
sbb
sar
inc
aas
mov
fstps
frstor
and
cli
movl
repz
xlat
push
clc
fistps
push
jmp
push
push
sub
cld
and
sbb
test
push
mulb
loop
add
inc
aam
data16
pop
insb
adc
jle
and
cmpsb
into
jle
inc
icebp
lcall
aam
jecxz
hlt
mov
or
icebp
adc
jp
and
jmp
cli
lret
xchg
dec
inc
mov
ja
ret
sub
sarl
dec
xor
decb
ret
dec
ret
cmp
lods
mov
ss
or
adc
mov
test
xchg
icebp
mov
movsl
mov
fsubs
sahf
mov
inc
loope
pop
popf
dec
gs
sti
insb
cld
and
out
fiaddl
daa
push
out
push
call
imul
inc
fldenv
fsubrs
cmp
pusha
xchg
ficoms
pop
fidivs
cmp
mov
cmp
popa
inc
inc
xchg
xchg
loope
jg
xchg
dec
loopne
data16
push
ret
rdpmc
or
mov
minps
out
sarb
adc
pop
roll
jg
lds
mov
xchg
or
dec
mov
xchg
xchg
dec
lahf
push
inc
jmp
insb
cmp
mov
sub
jg
cli
jmp
push
cld
call
jge
fisubl
cmp
mov
lods
inc
test
test
lods
push
mov
pop
inc
inc
xlat
les
jl
mov
push
data16
stos
and
mov
xchg
xchg
outsb
sub
push
lods
out
int
push
cltd
iret
jp
cmp
inc
jge
inc
cmp
je
clc
orl
lcall
mov
adc
push
enter
hlt
inc
dec
icebp
out
cld
dec
in
test
push
inc
pop
mov
sub
clc
dec
mov
push
xchg
push
bound
aaa
test
and
pop
cmp
lock
jb
mov
in
add
ret
xor
mov
pop
mov
enter
mov
mov
add
enter
sti
lods
je
sbb
lret
sbb
bound
stos
mov
aas
adc
testl
sbb
xor
inc
fldcw
mov
sub
arpl
and
sahf
dec
lods
dec
pop
scas
dec
inc
loope
into
push
incb
frstor
adc
in
adc
in
das
inc
loope
sbb
add
out
popf
cmc
pop
cmp
push
and
lcall
shll
sbb
sub
xor
repz
ss
hlt
shll
and
jmp
loope
sbb
out
cmp
inc
sahf
add
sbb
pop
push
adc
push
sti
nop
pushf
cmp
fwait
ss
adc
sub
int3
loopne
jb
fsubr
sub
push
push
xor
mov
dec
mov
jnp
shl
dec
xor
jg
sahf
add
xchg
xor
movsb
inc
mov
int
xor
stos
gs
push
sbb
adc
fnsave
cmpsb
ret
dec
outsb
aad
stos
arpl
ljmp
int3
sti
jnp
sbb
popf
pop
outsb
xchg
push
scas
cmp
sbbl
add
stc
mov
mov
test
cmp
je
push
rorl
mov
adc
sbb
and
and
inc
cli
test
cwtl
sub
push
push
mov
loop
stos
mov
into
ficoml
mov
ret
mov
fmul
mov
arpl
mov
sbb
in
enter
fucom
pop
cmc
fstpt
cmp
ret
mov
xchg
pushf
cmp
dec
dec
insl
sub
and
push
mov
cmpsl
cwtl
xchg
or
push
mov
pusha
xor
testb
jno
rolb
and
pop
outsl
cmp
shrd
cld
daa
and
jge
push
hlt
dec
lock
ljmp
sbb
jl
push
aad
js
repnz
inc
imul
mov
sahf
push
pop
pop
das
jno
movsb
inc
xor
ds
icebp
fcmove
or
fnstsw
inc
pop
xchg
mov
push
and
cmp
mov
lds
push
dec
xor
push
daa
jmp
mov
fiaddl
or
jle
pushf
dec
xchg
fmull
and
xor
adc
lahf
sbb
mov
mov
sub
lds
jge
and
add
sbb
add
lods
fldcw
aaa
test
mov
stos
xchg
cmp
add
in
push
push
xchg
bound
dec
aas
aas
mov
push
xor
ljmp
cli
xchg
icebp
scas
ja
popa
out
mov
sti
push
mov
cmp
lcall
push
mulps
stos
dec
sbb
shll
inc
xchg
pop
pop
mov
fneni(8087
dec
sbb
lds
movsb
xchg
popf
jg
pop
push
cmpsb
jge
fdivrl
gs
in
out
es
loop
mov
stc
adc
nop
pushf
fwait
mov
adc
dec
adc
ret
sbb
in
cmp
pop
sub
mov
enter
ret
popa
pop
xchg
cmp
sbb
push
lret
daa
mov
ja
out
or
out
fcmovbe
push
ds
or
inc
push
pop
mov
pusha
sbb
insl
adc
stos
ja
push
rcl
sbb
call
lods
and
rclb
pop
inc
pop
add
mov
xchg
jbe
aaa
frstor
push
and
cmc
adc
fisttps
dec
cmpsl
stos
into
mov
imul
jae
mov
mov
dec
int
test
fildl
and
ja
out
sahf
pop
aaa
sub
push
sub
pop
stos
jne
fstps
and
cs
xor
jbe
cwtl
insb
popf
pop
dec
mov
add
add
xor
lret
je
arpl
in
jae
js
dec
stc
add
dec
addb
rcrb
xor
jmp
sub
jl
inc
outsl
pop
push
push
insb
clc
xchg
dec
add
adc
pop
xor
icebp
xor
pop
outsl
adc
bound
cmp
push
and
xor
stos
xor
lods
mov
sub
cmp
xchg
pop
lods
sub
pop
push
fwait
pop
incb
xor
jo
mov
std
and
popf
sbb
sub
aad
std
arpl
scas
roll
inc
jno
pop
add
or
xor
fldl
mov
sbb
subl
cld
jl
sub
cmpsb
or
push
repz
pop
inc
push
lahf
imul
mov
js
pusha
jmp
push
jecxz
es
insl
lahf
or
hlt
push
je
xchg
jno
std
fisubl
test
int3
push
mov
sahf
or
sbb
cmpsb
hlt
adc
popa
jecxz
incb
pop
repz
subb
shll
scas
pop
mov
std
mov
leave
filds
mov
test
dec
mov
je
loop
cmc
clc
cmp
inc
scas
push
push
sub
inc
mov
ficomps
jle
push
dec
sbb
repz
cmc
aam
mov
and
inc
scas
adc
adc
xchg
or
cltd
cwtl
pusha
out
sub
imul
add
sarl
int
decb
outsb
add
in
or
lock
test
call
push
pop
cmp
aaa
cmp
shrb
add
pusha
push
xchg
movl
cmp
lds
test
push
mov
sbb
je
daa
dec
imul
call
icebp
xorl
push
and
sub
jp
push
push
xor
sbb
dec
xchg
sbb
adcb
call
mov
roll
inc
mov
std
out
push
movsbl
jle
cmpsb
insb
cmp
mov
fstpt
mov
gs
xor
push
or
push
mov
lods
popf
sub
jg
push
cs
cmp
nop
add
mov
loopne
xor
mov
insl
dec
push
inc
je,pn
inc
mov
cmp
inc
push
sub
lods
mov
or
and
fwait
sub
out
shrl
push
or
das
xchg
dec
jns
in
sub
fldenv
push
call
xor
in
imul
mov
clc
daa
xor
fists
ljmp
mov
mov
fisubrs
insb
clc
xor
xchg
ret
in
pop
add
lahf
cmp
cwtl
scas
mov
cmovo
xlat
lss
xlat
orb
lcall
pop
xlat
push
inc
mov
jo
push
rol
test
test
ja
jo
lock
movsb
sbb
mov
lcall
push
xor
out
movlps
into
in
and
mov
xchg
xor
int
jnp
mov
clc
dec
sub
add
mov
xor
enter
lahf
sarb
dec
inc
clc
cmp
mov
cli
shll
out
hlt
pop
sub
mov
mov
jns
and
mov
stos
cmp
std
je
dec
bound
in
mov
sbb
and
cs
sahf
xorl
jno
mov
push
loopne
popa
mov
or
les
setno
xor
popf
fwait
xlat
sbb
xchg
fstpl
leave
cmpsl
shl
fidivs
mov
dec
pop
dec
daa
stos
pop
xchg
testb
mov
sub
dec
mov
test
adc
scas
ret
movsl
mov
movsb
fidivs
mov
mov
dec
aaa
xchg
mov
mov
push
js
imul
mov
xchg
sub
sbb
sub
stos
rorb
cmp
mov
and
mov
pop
lods
push
cld
cmp
movsb
inc
in
cmp
pushf
xchg
xchg
mov
out
mov
insb
sbb
adc
inc
xchg
dec
arpl
jecxz
pop
pop
adc
out
fsubs
stc
daa
int
incl
ljmp
inc
gs
jb
pusha
clc
jge
int3
dec
xchg
sahf
inc
repnz
dec
jb
xchg
pop
inc
sahf
ljmp
add
lods
ret
jns
ja
sbb
int3
dec
sbb
jne
mov
and
adc
mulb
push
iret
add
daa
addl
lods
arpl
mov
fwait
mov
xor
xchg
pop
jnp
push
pushf
pop
cs
push
outsl
test
adc
add
pushf
xlat
gs
sbb
jmp
dec
loope
jg
pop
pop
mov
hlt
aam
imul
or
test
std
int3
movsb
fidivrl
lds
stc
add
sbb
popa
or
xor
shlb
cmp
adc
insb
and
pushf
ret
mov
and
iret
iret
in
cmp
je
mov
xchg
push
sbb
dec
dec
dec
je
in
pop
test
or
lahf
imul
sub
mov
jg
xor
nop
xchg
xchg
jno
push
jmp
adc
movsb
pop
xor
mov
jns
int
push
mov
popf
mov
mov
mov
out
fwait
dec
outsl
adc
push
and
fwait
xor
jne
and
inc
dec
adc
hlt
mov
ja
cmp
mov
clc
mov
shll
test
insl
cmp
xchg
mov
mov
xchg
xor
pop
push
xchg
push
pop
dec
add
in
cmp
nopl
push
and
cmpsl
jp
and
lods
fcomi
cmpsl
scas
inc
push
cmpsb
hlt
std
rcrl
decb
movsl
repz
insl
pop
insl
jnp
lcall
mov
xor
push
xchg
and
repnz
push
cmp
rcr
push
call
andl
lret
inc
inc
movsb
dec
repz
mov
pop
lcall
movsl
mov
xchg
lahf
fsubr
js
cld
pushf
mov
cld
fwait
jns
jmp
xchg
inc
out
mov
nop
pop
es
cmp
cmp
fldcw
lret
test
jg
xor
inc
jo
out
sub
cmp
pop
xlat
fistps
xchg
mov
scas
add
mov
fstpl
lods
ja
pop
outsl
mov
jne
and
or
pushf
and
cltd
dec
cmp
push
rcll
popa
sbb
lahf
lea
push
pop
mov
inc
into
sahf
das
dec
pushf
js
push
lea
mov
jae
lock
lods
jge
stc
test
cmpsb
jecxz
js
cs
fiadds
xor
inc
jl
mov
cmp
cmpsb
mov
jae
push
cmp
frstor
and
or
pop
dec
mov
pop
ljmp
push
movsb
pop
das
inc
arpl
and
xor
arpl
sti
mov
lea
icebp
pop
or
mov
mov
rolb
aaa
cmp
aad
xchg
pop
stc
cmp
data16
sbb
mov
imul
lret
cwtl
pushf
xchg
jg
loope
dec
push
daa
lods
into
enterw
data16
jno
and
add
setae
xchg
sbb
sub
rcrl
pop
xor
popa
jmp
cld
std
shlb
adc
add
scas
mov
mov
shll
push
add
mov
push
ds
stos
cmp
push
xchg
jae
lods
rclb
js
cmp
fwait
lods
add
cmp
ret
data16
scas
jbe
xchg
int3
xchg
shlb
mov
stos
insb
add
mov
out
sub
xchg
test
xchg
mov
jno
mov
pushf
dec
rol
outsl
pop
and
sbbl
mov
aam
rorl
cmp
adc
add
mulb
push
mov
repz
fiadds
fs
cmp
icebp
sub
in
rorl
xchg
dec
shrl
inc
cli
dec
sub
lret
cmp
rclb
lret
jne
adc
pop
or
fsub
lods
cmp
testl
dec
les
mov
aaa
jae
inc
imul
inc
ror
inc
enter
stc
mov
repz
inc
xlat
jb
ds
ficoml
cmp
inc
sbb
repz
cs
shr
adc
dec
ret
ret
or
outsl
imul
icebp
lahf
sbb
test
jo
fistpll
repz
push
inc
cmc
or
loope
sub
mov
data16
push
ret
adc
push
arpl
jmp
in
mov
xchg
inc
cmp
ljmp
rcll
cmpl
lcall
xchg
xor
lods
loopne
sbb
std
dec
dec
sbb
rclb
mov
cli
add
mov
dec
cwtl
xchg
mov
in
ss
scas
loop
insl
fistps
add
fiadds
push
arpl
aad
pusha
outsl
mulb
mov
in
roll
and
mov
add
rorl
cmovge
and
notb
sub
or
loop
ffree
and
std
mov
rorl
pop
int
mov
or
and
xchg
leave
fldcw
in
lahf
mov
sbb
outsb
js
xor
sbb
les
cwtl
pop
push
jl
jmpw
mov
mov
fwait
leave
icebp
insl
fwait
jnp
sbb
rcl
enter
push
dec
pop
movsl
jne
cmp
adc
dec
jmp
fistpl
inc
jle
in
jge
pop
jecxz
jmp
xor
imul
jmp
stos
test
jbe
sub
xchg
decl
sub
pop
xor
popa
outsb
outsb
cmpsl
sbb
mov
jg
cs
or
cmc
xor
stos
test
fldpi
inc
into
mov
mov
das
pop
xchg
adc
cmp
decb
xor
aas
push
push
leave
or
cmp
lods
xchg
incl
stc
fwait
sub
mov
repz
xor
loopne
or
cmp
hlt
je
lds
pop
out
lea
popf
pop
scas
mov
jle
movsl
cltd
dec
jle
nop
push
cmpsb
pop
xchg
xor
mov
jno
and
cmp
xor
jg
adc
les
mov
in
cmp
ficoml
and
jbe
dec
cmp
repnz
lds
imul
sub
data16
pop
enter
and
jmp
out
and
cs
cwtl
xchg
pop
in
ficomps
adc
cltd
scas
movsl
push
mov
arpl
mov
rcr
mov
lods
cmp
test
xor
sti
outsl
mov
xchg
inc
push
push
sub
inc
sub
dec
xchg
data16
mov
sbbl
xchg
jo
fidivl
in
inc
daa
sbb
mov
and
ret
repz
xor
xchg
adc
stos
xchg
dec
mov
bound
cmp
jge,pt
adc
clc
les
xchg
ficoms
cmp
scas
mov
adc
pop
dec
xlat
pushf
insb
mov
sub
fdivrs
aad
sbb
aam
mov
adc
and
into
jbe
aad
push
sbb
push
push
nop
ja
imul
xlat
adc
and
pop
stos
jns
shlb
jbe
popa
adc
and
inc
in
test
sahf
ret
jmp
jg
or
and
jno
cmp
jl
bnd
rolb
leave
push
sub
pop
aam
lods
lret
mov
mov
stc
rcr
gs
pop
pop
mov
jnp
daa
sarb
mov
mov
xchg
leave
lret
loop
mov
fbld
dec
rcll
cli
sti
fimull
adc
sti
dec
push
sub
pop
in
ljmp
and
setns
shl
lods
mov
fisubrl
and
push
sahf
ffree
and
shrb
shll
xor
inc
mov
outsl
inc
mov
pop
cmc
ret
scas
sbb
push
pop
cmp
inc
sub
shlb
sbb
or
pop
sbb
sub
hlt
or
jnp
imul
outsb
sbb
aaa
xchg
lds
arpl
leave
and
ljmp
push
repz
push
sub
mov
cmpsb
xchg
dec
test
jle
shr
xor
into
inc
scas
xlat
call
sbb
mov
sti
xchg
xlat
mov
sbb
or
cmpsl
jnp
pusha
mov
fbstp
js
mov
inc
fidivl
add
cltd
in
or
sub
mov
add
mov
repz
mov
ret
cld
adcl
inc
sahf
loope
sbbb
mov
sbb
or
mov
daa
jecxz
sub
ljmp
ds
testl
int
xor
sarl
or
xchg
pop
xchg
mov
or
pop
and
jl
ret
movsb
roll
imul
sbb
stc
sti
add
sub
scas
inc
outsl
lea
inc
fistps
pusha
add
xrelease
jne
mov
adc
fmull
mov
sub
jae
push
pushf
in
fcompl
add
mov
bound
jge
mov
mov
cmp
xchg
add
arpl
jbe
add
pop
cmp
test
inc
nop
add
xlat
mov
aas
cmpsb
cli
stc
pop
mov
jp
lods
or
leave
shl
add
pushf
and
repz
shrl
sbb
popf
sbb
sub
mov
adc
inc
xlat
aaa
fcmovbe
pop
test
dec
jae
out
push
int
insb
ljmp
sub
adcb
xchg
and
roll
pop
push
pusha
dec
lock
call
jno
in
adc
inc
push
pusha
jge
or
shrb
sub
cmpsb
fsts
sti
mov
pop
aas
mov
pop
test
cmpsb
pop
xchg
lret
cmp
mov
lods
movsb
xorb
and
push
ds
scas
or
into
and
ss
movl
inc
xchg
pushf
lea
int3
lds
sub
pop
dec
mov
test
orl
adc
loopne
negb
movsb
and
in
push
mov
mov
jae
push
jnp
pop
push
dec
pop
jbe
popf
jo
aas
xchg
ret
fildll
ss
jge
cmpsl
dec
sbb
xlat
mov
aaa
mov
dec
loopne
in
data16
dec
mov
inc
negb
data16
mov
mov
test
mov
mov
or
ficompl
decb
jecxz
push
mov
and
adc
das
inc
mov
addr16
imul
sbbl
mov
jo
push
and
dec
push
cli
add
shll
fdiv
ja
notb
jge
movsb
push
xchg
mov
cmpsl
and
xor
sub
jmp
cmpsb
jg
call
dec
insl
out
js
int
inc
gs
xor
das
inc
movsb
jl
pop
mov
stc
lock
imul
loop
mov
lret
and
push
jo
lods
repnz
icebp
inc
xor
push
testb
icebp
add
or
and
mov
lock
xlat
adc
and
cmp
ja
test
lahf
pop
or
jmp
in
or
movsb
stos
mov
sbb
ret
jge
ljmp
inc
std
adc
out
xchg
sub
push
xor
call
packuswb
adcb
or
in
cmp
fmull
shll
lock
and
xor
adc
or
xchg
jle
vpacksswb
jmp
nop
add
fisubl
idivb
jnp
adc
cmp
mov
adc
push
and
cmc
movsl
and
loopne
cli
loopne
loope
cmp
or
fldl
call
pop
fwait
and
loope
mov
out
push
adc
adc
into
lret
add
cmp
aaa
mov
imull
incb
cmp
adc
nop
mov
cmp
push
out
xorl
out
ds
ss
mov
jle
test
push
loopne
mov
sahf
cld
pop
arpl
js
in
sarb
test
pop
sbb
inc
arpl
cmp
cwtl
adc
dec
xchg
mov
lret
lods
or
xchg
lret
push
mov
xor
mov
xchg
in
mov
lcall
push
sub
add
popa
xchg
sahf
sub
mov
xchg
mov
dec
mov
mov
into
or
push
sbb
mov
add
lret
andl
sub
cmp
movsb
enter
arpl
and
gs
sbb
cltd
push
mov
loopne
cmp
pop
lret
jp
cmp
iret
adc
aaa
enter
imul
mov
mov
mov
sub
xor
add
xchg
fidivrs
sub
and
cli
sub
push
sbb
test
stc
mov
lahf
cmp
mov
jno
mov
and
sbb
mov
sub
ds
shlb
int3
push
mov
add
fiaddl
xchg
and
out
outsb
mov
adc
call
sub
pop
dec
push
mov
or
push
in
sbbl
fwait
and
decb
jle,pt
mov
push
push
cwtl
mov
mov
scas
cli
cmpsl
xchg
ret
cmp
xchg
mov
or
flds
sarl
rcr
int3
sbbb
lret
lds
bound
jp
and
idivb
cmp
pushf
xlat
lods
cli
cmpsl
sbb
push
sbb
pop
sub
fldl
hlt
pop
push
cmp
cmp
mov
rcll
xchg
jbe
insl
pop
mov
dec
push
stos
mov
and
pop
stos
outsl
jb
mov
mov
fildl
enter
testb
sbb
sub
jno
jno
rclb
fdivrl
xor
or
test
movsb
or
addl
insl
and
fcomps
xchg
popf
sti
pusha
pop
cld
dec
adcb
out
push
mov
mov
dec
icebp
pop
daa
jb
lret
jl
or
pop
out
insl
in
jp
out
cmc
xlat
ss
out
int
push
fwait
fwait
lea
fldl
jmp
sbb
and
cli
push
fbstp
xchg
call
shl
push
or
lock
xchg
jo
xorl
test
popf
outsl
sub
fcompl
popf
fildl
cwtl
bound
jecxz
mov
add
icebp
test
lock
inc
sub
scas
mov
inc
mov
sub
inc
push
shlb
xchg
dec
inc
jb
lret
cmp
sub
lret
dec
xor
mov
fucomip
cmpsb
sbb
pushf
push
xchg
mov
outsb
aaa
shlb
mov
cs
outsl
dec
cld
cmp
adc
adc
sub
jmp
aam
jne
arpl
xchg
add
sbb
faddl
enter
in
sbb
pushf
loop
xchg
sub
mov
xor
cmp
das
xchg
push
mov
stc
popa
jne
pop
stos
jo
cmp
mov
cmp
js
push
cmp
push
mov
mov
mov
and
and
xchg
mov
lock
call
xor
adc
dec
cmp
stos
das
push
inc
jle
pop
inc
mov
jne
cmc
outsb
pusha
xchg
and
inc
mov
fs
xor
adc
jmp
repnz
mov
imul
cwtl
xor
inc
lea
cmpsb
dec
sbb
xchg
sti
pop
pop
mov
ljmp
pop
jns
cld
inc
mov
mov
inc
imul
and
dec
movsb
push
stc
das
outsl
das
roll
mov
lods
gs
mov
jmp
dec
pop
jo
push
aas
outsb
xor
or
mov
sub
cmc
push
arpl
dec
mulb
sub
incb
add
aam
and
call
mov
stos
cmp
fsubl
xchg
cmp
scas
mov
sub
or
stc
jb
std
repnz
push
xchg
test
or
cmp
inc
or
jbe
imul
push
ja
adc
or
sti
mov
mov
ljmp
sbbl
mov
mov
push
inc
mov
jbe
es
or
xor
cmc
xor
fstl
daa
push
rcrl
out
mov
in
data16
sbb
mov
dec
dec
xor
ja
add
jae
jno
xor
mov
pop
outsl
lea
ret
adc
cmp
cmpsb
loopne
loop
pop
addb
rol
pop
aad
loope
sbb
mov
fs
mov
pop
scas
cmp
in
dec
pushf
dec
lock
jl
mov
xchg
sub
mov
test
xor
xchg
cmpb
ljmp
add
das
in
fisttpll
xor
jmp
adc
adc
pop
dec
push
push
pop
mov
xor
pop
mov
cmp
nop
jge
outsl
ret
lock
jle
ss
push
cli
add
push
test
xchg
scas
es
add
sti
aad
jo
test
in
stc
and
cwtl
xor
out
mov
jns
or
daa
dec
add
lock
lods
and
movsl
insb
shl
sub
movsb
mov
push
cmp
rorl
pop
imul
cmp
rorb
xor
sub
pushf
das
pop
mov
and
mov
push
mov
xchg
mov
hlt
sub
sbb
xor
push
test
lods
and
xor
in
add
sti
cmpsb
gs
jp
lahf
sbb
sbb
add
sbb
jo
test
push
mov
loop
adc
and
push
mov
lret
add
xor
add
in
pop
sub
ja
test
dec
push
iret
out
mov
aas
push
xchg
pushf
enter
cmp
mul
aaa
add
shrl
fidivrs
sahf
mov
lret
faddp
shrl
push
aaa
clc
loope
add
sub
push
inc
jnp
push
movsb
xorb
cli
repz
push
lds
and
xlat
loop
ret
cmp
cltd
cmpsb
cmp
mov
jp
cmp
mov
xchg
xchg
aas
inc
mov
movsl
cmp
cmp
insb
mov
lahf
lret
fwait
mov
shl
cmp
imul
mov
out
enter
fcoms
scas
mov
aam
mov
cwtl
hlt
xchg
repz
xor
icebp
mov
mov
push
pop
inc
out
popa
xchg
jb
push
mov
jno
jb
call
adc
mov
call
mov
xor
xchg
insb
xchg
dec
rol
xchg
ja
scas
les
js
iret
dec
xchg
mov
adc
imul
dec
mov
punpckhbw
and
cltd
adc
cmpsl
test
jbe
and
inc
pop
dec
out
and
mov
js
dec
call
adc
or
dec
jp
lahf
fists
aaa
mov
pop
in
xor
xchg
sbb
add
add
cmp
in
fldcw
sahf
lret
mov
loop
mov
and
dec
imul
andl
rcll
or
lret
sti
mov
daa
pushl
push
iret
push
sub
mov
pop
repnz
int3
movsl
dec
ret
jecxz
pop
fstpt
das
jg
jnp
sub
dec
mov
pop
imulb
xor
jb
pop
fldcw
pushf
adc
push
ja
xchg
add
out
push
popf
test
mov
clc
repnz
sub
sbb
and
repnz
rcll
daa
add
jecxz
test
sbb
ret
lret
cmp
xor
jnp
fs
sbb
imul
repnz
pop
mov
rorl
in
pop
mov
adc
mov
popa
push
lret
sub
adc
mov
scas
leave
daa
fiaddl
xchg
rclb
jmp
sbb
and
sbb
repz
aaa
outsl
pop
push
jo
inc
je
test
jmp
add
xor
mov
add
lds
pushw
inc
test
ficompl
sbb
and
out
push
jl
pop
mov
pop
mov
fst
xlat
jb
dec
daa
or
adc
pushf
addr16
imul
add
out
icebp
rcll
adc
rol
push
sbb
xchg
mov
in
mov
sub
cmp
popf
dec
jae
das
jo
sub
push
add
adc
jno
xlat
imul
mov
sbb
push
sbb
call
and
or
sub
inc
pop
cmp
add
ja
addr16
cmc
jp
pop
stc
xor
in
addr16
nop
mov
addr16
xor
and
adc
dec
jns
stc
arpl
clc
loop
dec
dec
or
roll
dec
gs
lods
je
out
enter
cli
sub
cmp
aam
enter
loope
pop
push
xchg
pop
jnp
adc
and
sbbb
inc
add
xchg
jle
int3
cmpsl
cmp
ljmp
sub
loop
out
jb
mov
lahf
adc
aas
jmp
ss
mov
push
mov
insb
ljmp
jp
das
push
movsl
mov
stos
mov
mov
or
jae
lahf
mov
outsb
sbb
lea
adc
mov
cltd
std
pusha
push
mov
scas
into
xlat
je
sbb
lcall
mov
mov
in
cmpsl
pop
dec
imul
nop
fs
push
xor
fildl
sub
adc
xchg
push
push
lods
orl
les
jl
into
out
inc
mov
push
jp
aaa
shlb
dec
xchg
fdivrs
pop
into
je
dec
dec
push
js
lret
out
dec
mov
mov
jno
cmc
add
sbb
loope
mov
and
cmp
jge
js
in
popl
push
or
adc
cli
push
cmp
pop
insb
sbb
test
testb
add
add
mov
enter
rolb
aad
pop
inc
dec
jno
inc
mov
movsl
loop
jnp
pushl
jmp
pop
movsl
adc
fidivrs
xchg
in
stos
lret
add
scas
cmp
push
mov
cmp
mov
ja
or
adc
rcrl
lret
sbb
xchg
nop
adc
imul
in
sub
mov
jb
sub
xor
out
pop
xor
outsl
push
adc
mov
or
jbe
mov
sub
pop
adc
push
dec
sbb
push
pop
lods
movsl
lret
sbb
inc
add
inc
mov
dec
call
leave
sub
fisubrl
sbb
mov
sub
das
pusha
std
xchg
mov
ss
leave
mov
sub
jp
je
out
jp
cmp
in
adc
out
test
sbb
sbb
pop
jle
sbb
sub
scas
jp
and
sbbb
push
cmp
scas
testl
dec
enter
iret
icebp
or
in
insl
lods
test
mov
stos
pop
stc
push
sbb
rclb
mov
push
jae
hlt
push
push
xchg
or
loope
movsb
inc
in
mov
ja
cmp
sarl
ljmp
sbb
pop
outsl
test
mov
nop
and
scas
cli
addr16
cmp
dec
out
cmpsb
stos
xlat
ja
sub
or
push
hlt
jp
inc
xor
subb
or
outsb
jnp
call
xlat
pop
mov
lds
out
xchg
arpl
dec
mov
and
mov
adc
dec
mov
xor
adc
adc
adc
clc
inc
mov
loopne
cmp
xor
outsb
fiaddl
shl
test
test
pop
cmp
sub
mov
shrb
test
stc
rol
popa
sbb
in
inc
scas
dec
lods
jecxz
jae
add
mov
vandnps
mov
jge
lods
push
in
lahf
jmp
jp
jmp
xchg
fstps
fs
push
xchg
cmp
lahf
cmpsb
int
push
cmp
icebp
cli
mov
push
push
sti
daa
xor
dec
out
inc
xor
inc
out
or
adcl
mov
pop
sbb
pop
mov
add
mov
push
push
inc
jg
and
pop
notb
outsl
ds
push
mov
or
syscall
pop
mov
cmp
push
cwtl
js,pt
xor
mov
sti
aaa
bound
adc
xlat
mov
mov
dec
mov
jnp
jecxz
aaa
in
mov
cmc
arpl
inc
movsb
sbb
xchg
sahf
outsl
mov
js
pop
rcr
xor
ss
inc
pop
std
mov
sub
mov
and
push
mov
lret
mov
jl
mov
sub
arpl
ret
or
adc
cli
arpl
lock
imul
lahf
dec
cmp
inc
or
inc
mov
sbb
clc
mov
inc
out
and
inc
movsb
ret
adcl
xchg
add
arpl
leave
movsl
jle
jns,pt
mov
lods
jns
fnstsw
adcb
xor
push
pop
adc
mov
adc
mov
cltd
fldcw
inc
orb
mov
xor
inc
inc
pop
test
and
xor
xchg
add
sub
shlb
add
pop
mov
into
sub
mov
or
push
cmp
xor
scas
dec
out
stc
lock
sbb
xchg
shlb
xchg
inc
pop
inc
dec
out
data16
addr16
lock
dec
or
movsl
lcall
cli
xor
shl
sahf
leave
push
add
lret
push
lock
mov
inc
aam
mov
xchg
stos
outsl
dec
xor
lahf
add
push
and
or
out
xor
es
pop
xlat
sbb
inc
popf
mov
push
rcrb
dec
cmc
jne
mov
xchg
jecxz
testb
andl
pop
or
push
jno
and
ret
dec
adc
movsb
mov
jo
mov
sbb
add
addr16
imul
js
sti
clc
mov
mov
lea
cmp
push
dec
mov
xor
loop
mov
and
inc
mov
rolb
pop
push
xchg
adc
arpl
mov
out
jae
bound
inc
test
or
push
testl
jl
push
jge,pt
cmp
out
lock
pushf
adcl
xchg
mov
ret
das
shll
iret
dec
out
jno
or
call
xor
push
hlt
addr16
mov
ret
push
push
psubsw
push
xor
imul
iret
sub
arpl
pop
ss
notb
scas
add
xchg
adc
cmpsb
sub
lahf
xor
int
mov
inc
mov
cltd
cli
cmp
inc
jbe
push
andl
dec
ss
cmp
popf
shll
and
pop
pop
and
pop
dec
jnp
xchg
xor
push
mov
sbb
sub
std
fiaddl
lods
mov
outsb
ret
stos
das
pop
cmp
outsl
mov
jno
aas
ss
out
mov
nop
cwtl
sub
mov
repnz
xchg
ficompl
mov
cmp
mov
add
movsb
jnp
sub
sti
loopne
sti
fdivrl
testl
dec
jge
cmp
mov
fsubl
shll
es
jno
cmp
inc
repnz
or
lcall
jp
test
and
jle
xchg
mov
mov
xor
add
faddl
ds
mov
lods
jmp
in
cmp
sbb
jb
mov
mov
mov
sub
sbb
outsl
mov
mov
pop
push
xchg
xchg
and
out
push
inc
sbb
call
lcall
jp
fsub
idivb
loope
xchg
pusha
jnp
mov
mov
mov
test
mov
cli
stos
movsl
sub
or
pop
sub
xchg
js
lret
inc
mov
cmp
xor
add
test
add
imul
adc
xchg
mov
gs
out
xchg
cmpb
out
dec
cmc
imul
std
add
frstor
in
push
push
mov
notl
sti
pushf
fbstp
leave
push
in
inc
mov
push
inc
inc
xchg
loopne
push
jecxz
and
and
js
popa
push
aad
sbb
clc
daa
fs
rolb
popa
leave
loope
ret
and
gs
pop
incl
inc
imul
sbb
cmp
pop
pop
enter
mov
scas
sub
lock
dec
test
jns
adc
mov
pushf
and
pop
jo
jno
loopne
mov
sarb
pop
stos
sahf
mov
inc
testb
stos
push
pop
sbb
stc
ss
call
mov
mov
lea
jg
and
pop
in
cmpsb
pop
cmp
mov
xor
mov
aam
mov
jle
mov
pop
movsb
pop
and
xor
call
sti
addr16
xchg
data16
jge
mov
inc
sbb
stc
or
pop
lcall
jp
call
pop
in
jp
adcb
inc
in
inc
lret
adc
icebp
push
inc
addr16
rcrl
jecxz
mov
imul
sub
rcl
jnp
mov
iret
push
jo
mov
and
mov
out
rol
iret
std
ja
mov
mov
mov
imul
jl
inc
addr16
pushf
stos
popf
loop
or
in
mov
scas
dec
xlat
frstor
lcall
les
mov
and
or
or
cli
rcr
nop
sub
lret
xchg
sahf
in
int
fwait
loope
adc
call
js
popf
aad
inc
ds
lcall
adc
xchg
cmpsl
add
push
in
into
pop
imul
mov
fldcw
iret
hlt
les
mov
mov
jb
mov
xor
fs
fs
sub
lcall
mov
pop
gs
or
pop
mov
mov
inc
test
stos
xchg
les
cmc
cmp
leave
dec
fdivl
cmp
mov
xchg
sub
jg
fdivs
dec
data16
push
cli
jns
xchg
iret
popf
daa
nop
jmp
sub
dec
lock
and
adc
inc
inc
jns
lods
cwtl
cwtl
in
pop
or
cmp
push
ret
inc
push
das
insb
mov
loop
mov
adc
mov
mov
test
pop
xchg
jo
jle
nop
test
das
pop
fisubl
jmp
in
mov
xchg
mov
mov
push
fmull
xor
pop
and
dec
testb
dec
jns
mov
jbe
rolb
xchg
enter
loopne
and
add
sbb
lods
insl
pop
push
pop
fldcw
mov
out
shrl
mov
inc
mov
mov
aaa
mov
lds
adc
sbb
lahf
adc
xchg
out
subl
lret
int
inc
push
stc
push
test
and
mov
pop
cmp
jnp
mov
mov
int3
mov
adc
nop
insl
call
cmp
xlat
in
out
scas
enter
adcl
jbe
cwtl
jge
inc
add
mov
addb
cmp
add
add
arpl
inc
cmpsl
adc
imul
jge
cmc
mov
mov
push
scas
andb
stc
imul
sub
adc
test
jg
bound
jo
fmuls
int
sbb
push
es
daa
mov
jbe
ret
xor
push
sti
aas
inc
dec
sub
jg
mov
push
and
in
sub
test
push
loopne
cmp
repnz
jnp
xchg
call
mov
mov
push
jg
dec
and
add
vrsqrtss
leave
cwtl
outsb
les
ss
pusha
add
jnp
dec
lods
mov
sbb
aam
xorb
xchg
loope
mov
ret
leave
mov
notb
push
pop
ljmp
ss
mov
mov
adc
inc
pop
mov
sbb
pop
mov
inc
inc
mov
in
scas
cmp
cmpb
adc
cmp
xchg
cmc
and
lock
jp
push
xchg
add
xchg
xchg
lret
aam
cli
test
cld
mov
fnstsw
mov
push
mov
adc
jecxz
lds
or
pop
aam
test
sbb
push
push
fiadds
or
jl
fwait
push
cmp
xchg
lock
notl
es
sbb
and
cmpsb
push
push
adc
dec
enter
pop
loop
push
int
lcall
in
add
push
shl
lret
cmc
shlb
pop
push
or
mov
stc
jmp
inc
mov
pop
mov
dec
xlat
cmpl
popa
dec
mov
pop
xor
and
sub
lds
fiaddl
sub
pop
outsl
lret
and
leave
in
pop
push
or
outsb
sahf
pop
push
jbe
mov
sarb
pop
and
push
cli
xchg
int
and
loope
jb
aaa
sti
das
mov
mov
iret
mov
and
sub
into
in
gs
sbb
xor
pop
inc
shlb
stos
std
jno
sub
stos
add
xor
fs
mov
sub
mov
call
cltd
lock
sti
xchg
push
push
cli
xor
mov
xor
fmulp
inc
jmp
gs
xor
in
scas
and
cmp
dec
mov
fidivs
enter
sti
jl
es
xor
jae
mov
les
cs
int3
shlb
dec
imul
icebp
sarl
ret
cwtl
outsl
jns
hlt
fiaddl
push
repnz
repnz
lods
push
imul
icebp
out
inc
rol
pop
into
daa
pop
add
xchg
movsb
cmp
push
stos
cmp
mov
clc
dec
push
test
rcll
push
test
aam
adc
sbb
xor
xlat
test
incl
or
out
fstpl
add
mov
inc
cmp
mov
out
call
shlb
push
cli
mov
lret
popa
addr16
add
repnz
sub
sub
fcomi
loop
shll
push
cs
fdivrs
push
adc
push
test
mov
addr16
cmp
push
mov
outsl
sti
test
and
iret
loope
mov
in
fists
sbb
or
scas
mov
xchg
repnz
pop
insb
out
aaa
xchg
mov
adc
popf
jno
iret
or
push
jno
into
in
or
add
push
sub
popf
fiadds
cmpsb
push
stos
pop
push
test
inc
mov
or
stos
stc
or
and
push
jl
jp
ficoms
pop
push
cwtl
dec
sahf
or
mov
shlb
lret
imul
bnd
xorb
stc
push
push
pop
jp
jne
jmp
leave
mov
and
jo,pn
push
dec
ret
notb
mov
jbe
cmp
fiaddl
mov
push
addr16
push
cli
jb
icebp
add
arpl
mov
jnp
push
dec
mov
icebp
sub
xchg
sbb
xchg
sahf
repz
add
icebp
cmp
xor
inc
test
les
jmp
or
pop
mov
mov
test
and
xchg
lahf
sbb
or
inc
insl
push
in
shl
pop
pop
fisttps
inc
icebp
pop
cmp
jb
out
outsl
mov
call
loopne
sub
sarl
test
rcrb
inc
adc
sarb
sub
orl
pop
nop
in
push
out
mov
mov
inc
add
test
or
xchg
pop
xor
xor
dec
and
sub
test
jecxz
cld
lcall
dec
add
daa
xor
loope
cmp
cmp
enter
mov
mov
jg
mov
push
add
insb
lret
and
mov
pop
xchg
dec
fidivrs
arpl
orl
mov
cmpsl
scas
cmp
in
in
or
lock
mov
sub
mov
adcb
cmp
sub
sbb
xchg
mov
pop
shll
scas
jge
cli
jo
inc
loopne
test
sbb
mov
ljmp
inc
es
mov
ljmp
lods
cmp
and
stos
xlat
pop
sahf
mov
ret
sahf
inc
adc
aas
loopne
sbbl
scas
mov
dec
ror
add
out
insb
push
mov
mov
jmp
pop
popa
mov
lcall
jb
jmp
mov
lods
mov
aam
int
mov
and
xchg
cmp
lock
out
je
inc
mov
aas
stos
hlt
out
mov
outsl
shrb
out
and
inc
mov
fldl
cmp
mov
and
mov
jecxz
jmp
cwtl
nop
mov
inc
lahf
popf
fwait
adc
fs
hlt
lods
aad
lods
pop
cmpsl
hlt
pop
xor
fiadds
xchg
ds
imul
repnz
jae
popa
fldenv
js
repz
ror
out
fimuls
sbb
shrl
outsl
fs
in
fildl
pop
addr16
lods
jno
and
jl
lcall
mov
or
mov
outsb
jns
scas
mov
imulb
movsb
imul
xchg
lcall
xlat
cmp
mov
jo
lods
data16
aad
mov
adc
mov
xchg
mov
push
push
mov
adcb
jp
jbe
add
cltd
xor
rclb
mov
push
cwtl
daa
cmp
mov
outsb
dec
mov
add
rclb
into
in
aam
and
out
mov
iret
gs
push
push
pushf
cmp
lods
rorl
dec
xlat
mov
bndstx
pop
mov
xlat
in
pop
arpl
lods
mov
dec
mov
cmp
sets
test
mov
test
sbb
jl
xchg
xchg
mov
lret
lods
sub
mov
test
push
cli
sarb
mov
adc
enter
fcmovnu
or
test
xchg
enter
cmp
scas
jae
jne
cmp
cwtl
inc
sarb
pop
call
into
mov
sbb
aad
xor
pop
pusha
push
mov
pop
fistpl
cmp
test
adc
lods
push
add
movsb
add
push
std
fsubrs
pop
repnz
test
jecxz
imul
loop
mov
pop
outsb
idivl
add
lds
test
fildl
adc
cmc
cwtl
sub
idivb
pop
repz
adc
ss
gs
rolb
jecxz
mov
jmp
pop
jb
cmp
imul
mov
xchg
dec
push
sub
mov
loope
or
popf
jge
pop
dec
mov
mov
fimuls
mov
mov
je
les
cmp
cmc
jae
aas
mov
test
dec
insl
iret
cmpsb
leave
aaa
sub
rcrb
xor
jno
arpl
xor
push
xchg
rorb
xchg
cli
mov
orl
jne
shrb
lret
mov
arpl
dec
js
or
inc
push
xchg
data16
or
mov
jg
scas
shrb
inc
xor
jns
sahf
pop
lock
jbe
cmc
pop
mov
adc
inc
sarb
cmp
xchg
in
pusha
jne
jo
adc
and
mov
daa
xor
pop
and
and
frstor
adc
scas
lret
push
mov
scas
aad
mov
pusha
sarb
cmpb
jbe
and
mov
or
mov
ss
jge
cmpsb
push
outsb
stc
cs
test
pop
arpl
jno
notb
jp
cs
and
and
mov
cmp
xchg
punpckhbw
mov
cltd
xor
mov
cmp
into
or
inc
push
cmpsl
add
add
sub
push
adc
mov
mov
push
fnstsw
cmp
adc
xchg
call
or
xchg
mov
arpl
int3
data16
xchg
and
add
and
adc
jmp
xor
fldenv
lods
jmp
enter
cmp
adc
cwtl
scas
mov
mov
out
imul
sub
jecxz
mov
mov
clc
mov
loopne
lock
adc
lcall
sbb
imul
and
cs
mov
xor
dec
leave
push
sub
push
and
push
sti
add
or
mov
xchg
mov
pushf
adcb
adc
idivl
mov
xorb
icebp
mov
dec
bound
mov
gs
cmc
cli
xchg
xor
int3
push
xlat
add
inc
pop
sbb
lahf
fstpl
inc
into
das
xor
dec
stc
inc
pop
loop
rcr
outsl
aad
xchg
lret
arpl
push
outsl
arpl
pop
sub
lea
les
out
mov
iret
fmuls
xor
dec
xor
or
fwait
aas
cmp
sbb
jl
xor
xor
dec
dec
inc
sub
leave
dec
xchg
mov
mov
or
jmp
fs
xchg
cmpsl
sarl
leave
mov
fdivp
and
bnd
ret
lods
sti
fsubs
adc
push
in
jecxz
leave
jb
stc
pcmpeqd
xor
fistps
mov
stos
lds
stos
push
xor
jg
aaa
xor
in
lcall
xlat
arpl
inc
xchg
dec
push
leave
adc
hlt
and
daa
sub
sub
cli
imul
jae
and
jb
cmp
add
add
inc
add
inc
out
cmp
data16
lcall
aaa
sarb
mov
cmc
pushf
inc
push
ss
aad
jmp
push
push
or
mov
and
cmp
and
mov
das
lea
std
xchg
movl
push
int3
mov
cld
loop
movsl
or
popf
pop
mov
dec
cmp
mov
mov
mov
mov
adc
push
add
testb
rcrb
test
mov
add
into
add
mov
mov
push
cmpsb
fistpl
nop
push
movsl
jns
stc
pop
sub
push
mov
add
push
and
inc
in
mov
jge
popa
fst
xor
rcr
xlat
pop
fstps
cmp
cltd
outsl
cmpsl
xchg
push
fcomps
xor
or
jo
ja
pop
rclb
adc
mov
cmp
sbb
dec
mov
scas
fs
cmpsl
xor
pop
out
cli
cld
push
es
lock
jns
popa
xor
decb
lods
adc
popl
orl
icebp
sbb
divl
gs
adc
fwait
xchg
push
outsb
dec
push
mov
fildll
jb
loop
mov
xor
divb
addr16
jp
mov
lret
fiaddl
jne
ds
adcl
in
push
mov
lret
jl
dec
mov
test
ficomps
cwtl
popa
and
repz
push
cmp
das
cld
xchg
stos
lods
mov
faddl
sub
subl
pop
add
repnz
cmp
pushf
insb
cmp
ljmp
fsubs
out
popf
ds
inc
imul
mov
aad
pop
mov
fisubl
dec
mov
aaa
push
repnz
or
jne
push
pop
repnz
mov
popf
pop
sub
enter
rorl
cmp
jne
imul
push
jl
lea
add
dec
sub
fisttpl
cmp
cmp
cmpsl
sub
aam
and
fadds
pop
and
cmpb
sub
out
xchg
in
andps
repnz
cld
mov
pop
insb
insl
push
out
loope
inc
data16
adc
xor
fisttpl
notb
scas
dec
dec
repz
repz
mov
lock
cmp
ret
push
std
jle
sub
push
sbb
das
xchg
pop
fstpl
insl
mov
xchg
add
int3
xor
repz
adc
sub
push
in
sbb
aam
mov
sub
sbb
add
inc
popf
push
or
jno
sahf
mov
cltd
jecxz
add
pop
push
sbb
movsb
fwait
sub
or
insl
push
idivl
cmp
mov
aaa
mov
inc
mov
push
test
dec
aad
or
mov
in
mov
sub
pop
xchg
push
pop
mov
rorb
das
push
mov
sbb
insl
jb
ret
inc
dec
push
push
mov
in
popf
test
sbb
into
fisttpl
or
out
xchg
xchg
pop
cmc
lahf
jmp
aad
scas
push
jl
sbb
fimuls
fildl
mov
das
mov
sbb
push
cmpsb
je
sbb
stos
mov
sbb
and
inc
lcall
mov
cmp
pop
mov
or
jbe
mov
and
lea
mov
xchg
imul
outsl
dec
call
in
push
mov
pop
mov
pushf
mov
loop
ret
aam
mov
cmp
mov
es
adc
repz
loop
push
sbb
and
in
jle
popf
push
xchg
cmp
nop
sub
and
hlt
mov
arpl
ret
cli
clc
xlat
push
jne
fisubrs
push
negl
push
stos
dec
xor
sub
or
jb
mov
mov
adc
aad
enter
mov
mov
popf
out
pop
or
lea
cmc
inc
std
ja
add
adc
or
mov
popa
xor
shrl
and
xor
adc
fdivrs
gs
cli
mov
popa
ucomiss
and
out
jle
jne
add
sub
adc
pop
push
inc
mov
lcall
das
divl
and
sbb
subl
sub
in
mov
add
cmp
sahf
and
sahf
pop
xchg
mov
xchg
movsb
call
mov
fidivrl
sarb
xchg
jmp
fidivl
fsubrl
xor
arpl
lods
ret
pop
in
mov
inc
enter
jl
or
sbb
jl
aas
dec
dec
movsl
xchg
ds
sub
xchg
jnp
cmpsl
out
adc
les
lods
mov
and
lds
not
cmpsl
movb
mov
out
xchg
ret
cmp
rorl
enter
or
mov
cld
cmp
mov
aam
test
lret
add
lret
xchg
sbb
sbbb
jge
xchg
jo
xor
outsl
je
sub
ss
scas
and
and
mov
add
fwait
inc
pusha
in
xlat
sahf
dec
dec
loop
aas
call
imul
push
fiadds
stc
outsb
jge
cmp
mov
lahf
inc
notb
leave
cli
rorb
jle
inc
cmp
std
lret
mov
mov
xchg
gs
sahf
push
mov
divl
mov
mov
mov
in
adc
jb
xor
ds
inc
push
push
mov
mov
add
mov
mov
cmpsb
inc
xor
pop
daa
sbb
mov
xorb
js
insl
mov
jbe
cmpsb
mov
mov
sbb
lds
pop
stos
mov
mov
scas
ss
cmpsl
aad
sbb
mov
xor
enter
dec
add
insb
dec
inc
pop
or
pop
in
push
ja
push
add
movsl
sub
jns
scas
ficoms
mov
aad
add
addr16
push
adc
repnz
pop
dec
xchg
mov
cmp
imul
into
nop
push
add
add
cmp
scas
push
mov
cwtl
andb
adc
shrb
imul
repnz
dec
jb
inc
mov
pop
add
loope
fwait
jmp
in
cwtl
fsub
pop
dec
and
int
push
add
in
loope
lret
fbld
mov
xor
and
arpl
roll
scas
lea
sar
cmp
jnp
mov
inc
repnz
pop
out
stc
cwtl
mov
es
adc
jl
rcr
push
lret
daa
sti
sub
es
lea
dec
cwtl
pop
in
push
xchg
loop
loop
pop
fisttpll
je
mov
mov
cmpsl
mov
inc
adc
pop
pop
mov
pusha
in
fistl
xchg
shlb
scas
add
mov
dec
lahf
es
ja
mov
mov
and
pop
testl
dec
push
mov
out
icebp
mov
push
hlt
cmpl
dec
and
into
out
movsb
jmp
gs
cli
sub
adc
nop
out
cmp
push
add
push
adc
sahf
mov
sarb
dec
fstpl
pop
pop
xchg
mov
aad
push
xor
rcrb
shll
leave
mov
bound
fucomi
pop
adc
repz
lret
mov
xchg
inc
xchg
sbb
popf
loopne
xor
mov
pop
gs
data16
jbe
dec
inc
call
rorl
in
xchg
stc
push
andl
adc
lea
xchg
cli
sub
loope
adc
pushf
sub
push
aad
push
cli
xchg
dec
sahf
icebp
or
sub
jp
fisubrl
mov
je
out
icebp
push
fildll
pusha
popw
add
dec
in
jbe
add
or
push
fsts
movsb
out
aaa
mov
or
mov
cmp
cli
inc
in
push
xchg
rorl
imul
and
jno
jae
or
imul
or
pop
push
ret
mov
mov
mov
push
push
mov
cltd
scas
inc
sahf
iret
loop
xchg
inc
mov
mov
clc
cmp
adcl
test
iret
lock
nop
js
push
dec
sbb
xchg
std
jp
cmp
xor
push
dec
testb
xchg
in
aas
sbb
into
jnp
fnsave
mov
test
stos
mov
adcb
sbb
pop
and
ror
jge
xchg
push
insb
adc
call
jbe
mov
popa
pop
or
inc
cmpl
pop
mov
and
xchg
mov
movsb
push
mov
dec
mov
iret
test
cmc
in
jmp
add
sbb
imul
stos
ljmp
push
out
or
adc
xchg
mov
cmp
pusha
xor
add
lods
das
push
cs
pop
lcall
adc
xchg
stos
jne
sbb
rcrb
adc
sub
mov
lods
push
xchg
jmp
xor
test
xor
ja
fwait
xor
fisttps
push
jp
inc
test
js
mov
stc
jo
mov
daa
pop
imul
fisubrs
sahf
jmp
cmp
add
fldl
inc
repnz
insb
popf
jl
cmpsb
push
push
mov
dec
cmp
popa
stos
ret
sbb
enter
insb
push
sub
mov
sbb
mov
pop
cli
lret
jne
pop
push
sbb
orb
lahf
push
dec
dec
and
mov
xchg
popa
push
repnz
iret
stos
xor
ret
push
xchg
popa
ficomps
cli
or
xchg
inc
sbbl
xor
jb
pop
sub
pop
test
cld
je
das
add
in
inc
jno
sbb
fwait
jne
popf
push
ret
xor
mov
stos
lock
xchg
xchg
jle
inc
scas
jne
xchg
jge
loope
dec
jge
test
mov
xchg
mov
cli
ret
popa
cmpsb
cwtl
adc
out
shll
xchg
xchg
or
in
mov
mov
cmp
mov
dec
pop
sahf
jne
mov
jl
mov
in
lds
add
fs
sbb
fstps
push
out
sarl
mov
insl
mov
fstpl
sub
mov
sarl
imul
jecxz
push
inc
loop
and
scas
xchg
inc
in
adc
mov
jl
shrl
pop
imul
mov
fs
das
in
aaa
dec
insb
fidivl
sub
out
or
shrb
inc
adc
out
and
loope
je
lret
leave
test
lcall
ret
and
mov
inc
adc
cmp
int3
push
sub
xchg
fisubrs
clc
es
xor
popa
xlat
inc
ss
lea
loopne
sub
in
pop
hlt
xor
inc
pop
mov
out
mov
sahf
jbe
mov
sbb
hlt
fmul
and
cmp
lods
or
push
sub
jle
mov
push
es
jne
into
jo
sub
lcall
add
nop
lods
pop
lock
cmp
icebp
popa
mov
cmpsl
in
jmp
rclb
xchg
mov
sub
in
mov
fnstcw
and
repnz
mov
adc
leave
pop
push
sub
add
jno
inc
rol
sbb
loopne
call
sbb
xchg
fwait
loopne
sbb
rcl
cwtl
pop
jb
mov
xchg
push
shlb
repnz
dec
xchg
or
pop
cmp
into
mov
in
sbb
adc
push
pop
sub
add
lahf
insb
mov
pop
cmpsb
inc
pop
pop
cmp
add
jecxz
push
add
sarl
add
pop
out
sahf
fistps
inc
or
repz
jg
jo
sbb
mov
stos
cwtl
imul
insl
pop
inc
leave
sbb
into
mov
xor
jmp
mov
data16
fs
dec
fldcw
fimuls
inc
push
lds
cs
int3
adc
nop
in
adc
mov
outsb
mov
mov
mov
push
orb
ret
xlat
sub
xchg
outsl
or
push
mov
sub
mov
or
lret
jb
add
mov
and
jno
imul
mov
scas
mov
cli
adc
inc
adc
xorb
mov
shlb
loopne
cli
filds
jg
std
testb
xchg
mov
aam
and
xchg
loope
in
movsb
pop
in
sbb
adc
or
aaa
fs
nop
arpl
push
xor
sbb
ds
adcb
inc
mov
iret
loope
cmp
sbb
push
adc
mov
sbb
cld
jp
mov
push
xbegin
int3
adc
rcrb
jo
dec
outsl
cmpsl
leave
jno
or
cld
or
lods
popa
dec
les
xchg
fwait
mov
enter
sahf
mov
adc
nop
xlat
pop
dec
stos
mov
leave
or
pop
bnd
inc
lret
xor
sahf
jbe
jmp
jb
stc
out
add
inc
jg,pt
loopne
cmpsb
sub
cld
outsl
and
fwait
out
inc
ret
lahf
cmp
dec
xchg
je
leave
aam
fwait
bound
pop
mov
popf
sub
push
or
cmp
std
push
inc
mov
cs
or
fcoml
dec
fwait
scas
jecxz
mov
ljmp
jle
adc
push
pop
in
push
cmpsl
jae
mov
push
scas
adc
push
sbb
sbb
test
cld
xchg
insl
dec
ljmp
and
mov
sbb
iret
fldcw
popa
mov
jno
adc
and
arpl
pop
pop
out
jmp
mov
jne
lds
and
pop
add
push
scas
cmp
addb
fstps
mov
cmp
pop
stc
mov
inc
sbb
out
or
aad
mov
mov
faddl
leave
aaa
insl
sbb
adc
xchg
mov
add
mov
in
jecxz
das
mov
cmp
add
jle
add
lods
stos
sub
inc
mov
loop
jmp
jnp
fdivrs
out
scas
mov
bndldx
jbe
cmpsl
cli
or
shll
ret
mull
inc
out
je
lret
in
rep
and
add
stos
inc
inc
out
or
dec
xchg
lds
sbbl
out
popf
je
sbb
dec
mov
aas
xor
push
sub
adc
imul
mov
push
loop
mul
in
das
stos
fdivl
mov
push
or
and
push
sub
lods
jl
std
cmpsb
mov
inc
push
sub
xchg
in
movl
mov
test
xor
sarb
leave
ret
xor
ljmp
push
sbb
daa
adc
inc
cltd
xor
repz
imul
push
pushf
push
pushf
imul
pushf
out
cmpsl
inc
enter
dec
jne
adc
cmpsl
pushf
jecxz
ffree
adc
dec
mov
add
wbinvd
add
sahf
sbb
aas
pop
adc
dec
add
int3
xlat
fisubrs
test
pop
insb
sbb
dec
lods
jae
jno
push
bound
sbb
pop
hlt
jp
push
sbb
repnz
add
adc
pop
or
xchg
adc
cltd
sbb
cmp
mov
xchg
or
pop
sahf
mov
jmp
and
aaa
xchg
andl
mov
push
ja
sbb
lcall
rorb
or
inc
loop
adc
sbb
inc
push
push
out
pop
nop
jae
jl
mov
add
adc
or
scas
sbb
xchg
push
sub
pop
ret
jle
cmp
test
mov
sti
int3
fsubrs
pop
push
lret
mov
pusha
sub
pop
sbb
sub
mov
lahf
adcl
stc
mov
je
cmpsb
test
dec
outsb
add
popf
sbb
sbb
sbb
test
sbbl
dec
or
push
push
fistl
xor
push
push
dec
adc
rolb
arpl
inc
cld
mov
lahf
pop
xchg
notl
jbe
ss
orb
push
out
sub
cmove
jmp
cld
cmp
sahf
test
mov
mov
and
push
pop
mov
out
cmp
imul
inc
movsl
or
das
pop
repz
nop
xchg
dec
xchg
fmulp
lret
adc
shrb
xor
repz
mov
adc
xchg
gs
push
movsb
sub
fwait
jecxz
out
lods
xor
mov
pop
in
pusha
inc
jle
jns
inc
pushf
test
jo
inc
xchg
inc
test
mov
into
vmread
mov
cwtl
sub
xchg
pop
sar
pop
ja
and
sbb
frstor
popf
aaa
and
and
ficomps
xchg
and
mov
bound
aas
pop
add
cltd
je
outsb
add
gs
test
outsl
mov
gs
add
xchg
dec
jmp
sub
sub
bound
cmpsl
sbb
mov
xor
pop
xchg
faddl
or
fs
movsl
testb
mov
and
and
sub
loopne
and
dec
in
movsl
inc
in
subb
fwait
stos
add
fistpll
xchg
lods
push
data16
pushf
leave
dec
loope
test
repnz
push
dec
ja
arpl
cld
popa
std
mov
leave
clc
adc
insl
sub
jbe
jle
xchg
or
jns
popf
xor
icebp
dec
das
fcoml
pop
lods
xor
jl
and
cmp
les
dec
inc
and
lcall
hlt
push
aam
lods
xor
xchg
and
popa
mov
fsubrs
jl
daa
les
cmp
or
inc
pop
test
iret
mov
xchg
rclb
pop
lret
test
fcomps
fsubl
push
add
adc
mov
xor
and
loope
cmpsl
cwtl
xchg
nop
repnz
aas
stos
inc
in
push
add
lea
xor
inc
push
cmp
mov
push
ror
push
test
inc
mov
xchg
sahf
adc
mov
pop
jmp
and
fs
dec
push
and
cmp
jo
ja
push
mov
cmc
pop
xor
sbb
pop
loope
and
add
das
and
cmp
jmp
out
cmp
fldt
inc
in
jecxz
adcl
les
lods
cld
mov
sbb
ljmp
xor
pop
inc
xchg
loop
ret
or
mov
cmp
adc
fdivrs
xchg
jns
push
mov
rcrb
int3
iret
jne
push
jnp
mov
cltd
dec
pushf
dec
cs
cmp
xor
jg
xchg
int
das
jns
dec
pop
xchg
aad
sub
mov
arpl
mov
sub
jmp
mov
adc
jle
pop
fnstsw
gs
ds
clc
int
js
nop
imul
sub
adc
arpl
push
and
test
sub
inc
mov
and
sti
inc
push
jge
addr16
hlt
jp
fistpl
dec
jbe
cmpsb
in
adc
adc
add
sahf
xchg
sub
xchg
das
and
ret
mov
xor
dec
sub
shll
mov
mov
cltd
mov
rcrb
add
sbb
subl
fs
sub
mov
xor
inc
adc
ja
scas
inc
outsb
outsb
dec
jo
sbb
adc
fcmovb
push
or
cld
nop
cmp
fucomi
stc
adc
mov
cmpsl
mov
sub
xchg
jle
cld
loop
fidivrl
movsb
inc
das
out
cmpsl
pop
idiv
mov
popa
sub
idiv
and
es
pop
jle
mov
jnp
aad
in
mov
cmp
fisttps
inc
or
or
lar
aaa
lahf
negl
jb
movsb
cmp
mov
jnp
imull
mov
cmp
sahf
js
gs
bound
nop
popf
enter
xchg
mov
mov
loope
mov
popf
in
or
sbb
xlat
mov
je
push
sbb
and
add
jmp
in
jge
adc
mov
insl
pxor
call
cltd
fisubl
outsl
bound
xlat
push
mulb
stos
inc
aam
cltd
dec
fsubl
loop,pn
mov
pop
icebp
pop
cmp
gs
push
jns
add
call
aad
push
dec
aad
cmp
pop
out
pop
jno
mov
xlat
mov
ret
aas
mov
dec
movsl
frstor
scas
mov
and
and
iret
add
lods
das
add
lea
fwait
jae
repz
push
iret
xor
pop
sbb
add
movsb
jecxz
add
clc
push
into
stos
inc
cmpsl
call
scas
mov
fwait
jge
xchg
and
imul
cmc
dec
push
stos
adc
push
gs
sti
lret
mov
cmovae
adc
addr16
mov
outsl
xor
lcall
ds
sub
mov
mov
aaa
ficoms
fsubrl
ret
sbb
popf
and
jl
in
push
aad
jg
mov
imul
in
out
mov
push
push
and
insl
aaa
nop
sbb
sub
mov
repz
loope
int3
xchg
jbe
shrb
jp
inc
mov
jg
mov
xchg
out
push
pop
sub
int3
pusha
fiaddl
add
adc
es
repnz
inc
adc
fadds
mov
and
in
ds
pop
mov
subb
pop
dec
ret
add
in
aas
sbb
mov
rorb
add
mov
lahf
jmp
cld
cmp
nop
cmove
enter
xchg
in
cmp
or
mov
imul
xlat
cmp
mov
mulb
adc
insl
clc
iret
int
push
sub
pop
popa
nop
or
adc
sar
mov
ficoms
adc
jmp
jo
push
divl
ds
loope
jnp
jle
inc
or
rcrb
push
addr16
loope
cmc
mov
scas
pop
cli
inc
pop
lea
inc
imulb
in
cli
loop
or
mov
je
xchg
and
or
xchg
jne
mov
jo
rcll
xchg
popf
lret
dec
nop
inc
push
or
int3
imul
movsb
sub
into
push
in
push
int
inc
in
and
test
and
push
lods
push
add
fisttps
pop
add
pop
movsl
inc
fsubl
fists
xlat
xchg
jne
cld
out
out
sti
gs
test
in
sarl
out
sbb
rcrb
sub
cmp
jl
pop
mov
repnz
into
add
daa
mov
mov
andb
mov
int3
xchg
lret
xlat
leave
lods
popf
test
jmp
cwtl
and
mov
jmp
cmp
ret
or
mov
test
sbb
and
loopne
sbb
xchg
or
jp
cltd
mov
xchg
test
inc
fistps
clc
lcall
dec
enter
mov
mov
data16
fwait
adc
lahf
adc
xchg
jge
sahf
cmp
xchg
stos
arpl
pop
das
add
xchg
pextrw
xor
xor
inc
jmp
cmpsl
or
and
sti
sbb
popa
rorb
or
push
and
lahf
sarl
mov
adc
pop
movsl
ja
jnp
pop
inc
filds
lahf
mov
out
andl
mov
out
jo
bnd
jbe
xor
push
test
or
lcall
cmpsb
pop
outsb
sbb
rorb
imull
mov
js
sbb
aaa
add
out
pop
js
notb
mov
cld
gs
daa
adc
out
and
in
repnz
add
cmp
or
jl
dec
lahf
or
lcall
jae
jns
dec
or
mov
mov
es
jae
and
call
or
adcb
cwtl
mov
js
not
xchg
aad
cli
sbb
aad
sbbl
inc
adc
popw
adc
and
mov
lahf
sahf
mov
and
sahf
cld
xor
push
insl
sbb
jbe
jae
jecxz
inc
stc
adcl
popa
xchg
cmp
std
mov
movsl
add
out
in
dec
push
js
sub
xchg
cli
mov
mov
dec
mov
xchg
ss
sbb
popa
rcrb
and
iret
mull
xor
dec
xor
mov
mov
push
ja
test
add
add
xlat
pop
ret
xchg
cmp
jo
std
fmul
pop
inc
xor
cltd
in
les
out
addr16
cvtdq2ps
adc
loopne
dec
adc
insb
jmp
mov
adc
fs
daa
rolb
inc
mov
iret
add
jle
sti
jno
addr16
fcom
and
sahf
jge
xor
inc
lods
lods
inc
or
mov
je
sub
scas
sbb
push
dec
call
insl
sub
fnstcw
pop
jbe
cmpsb
addl
cmpb
lret
int
les
ret
addr16
sti
sub
and
nop
jae
adc
ljmp
jnp
fstpl
xor
push
and
and
mov
cs
ss
dec
push
lods
mov
sarl
sbb
lahf
cmp
push
daa
inc
dec
call
cmp
pop
hlt
mov
cld
adc
pop
xor
cmp
xchg
mov
and
fidivl
testl
mov
mov
push
and
divl
lods
nop
dec
inc
sub
in
xchg
cld
std
pop
hlt
mov
out
loope
push
sub
sti
mov
das
adc
lahf
and
fnstsw
inc
ja
jo
jle
shlb
mov
jecxz
aam
ret
mov
insl
cwtl
dec
and
sbb
dec
mov
lahf
cmpsl
addb
sub
orl
jb
stos
dec
rol
dec
cltd
dec
jne
mov
addr16
cmovno
adc
mov
mov
inc
jns
sub
leave
pop
pop
xor
or
xor
into
dec
xchg
mov
lods
cmp
mov
jno
sub
push
push
mov
add
aam
repz
mov
xchg
out
sub
mov
sbb
out
es
mov
xchg
jbe
ret
push
clc
cld
jne
cmp
ss
lock
mov
push
out
test
cvttps2pi
mov
testl
push
fs
adc
sti
and
ret
push
xchg
ja
push
pop
scas
pop
shrb
mov
push
push
js
mov
xchg
cmp
sahf
ds
notb
and
movsb
adc
and
rorb
rcrb
arpl
sbb
leave
push
and
push
dec
out
mov
jmp
iret
adc
push
jo
cltd
xor
mov
or
inc
lock
xchg
sub
andl
stc
mov
sub
cld
push
addr16
bound
adc
xlat
pop
int3
leave
add
addr16
adc
mov
filds
bound
pop
mov
xor
rorb
push
cld
cs
imul
aaa
cmp
adc
enter
test
xor
sub
fimull
nop
fldl2e
dec
aaa
incl
or
sbb
bound
push
mov
xchg
and
dec
xorb
pop
sarl
mov
pop
int3
inc
jge
mov
into
stc
cltd
mov
int
les
pop
xchg
in
mov
push
sub
stos
incl
mov
push
enter
jmp
cmpsl
jo
push
sub
and
icebp
inc
mov
test
or
cmpsl
cmp
mov
or
add
pop
jbe
test
dec
push
out
movsb
xchg
mov
in
dec
aam
pop
js
clts
shr
out
inc
dec
mov
jnp
xchg
pop
cmp
jg
das
js
mov
ss
adc
cmp
cmp
test
das
cs
or
mov
sub
inc
sahf
mov
jmp
sbb
adc
xorb
sub
test
shr
aas
leave
mov
push
cwtl
pop
jne
leave
lcall
mov
mov
je
loope
push
test
sarl
and
inc
jae
ret
adc
sbbb
pusha
mov
rcl
xor
arpl
into
cmp
pop
insb
sar
fadds
cmp
arpl
sub
iret
ljmp
movsb
cmp
fsubr
push
inc
lock
idivl
inc
fldcw
push
jg
fnsave
xchg
leave
outsb
add
pusha
pop
decl
mov
daa
sahf
dec
sub
dec
add
iret
outsb
ret
mov
lret
mov
fistps
loop
fisubl
xor
mov
push
movsb
stos
cltd
shrb
enter
mov
jmp
jae
push
sbb
lret
leave
inc
cmp
cli
push
cmp
in
enter
push
jo
xor
push
ret
mov
out
and
jbe
mov
repz
push
sbb
and
jae
out
out
push
loop
into
sbb
mov
lds
test
shl
imul
or
or
clc
inc
das
bnd
sbbb
push
mov
and
xor
dec
and
xchg
pushf
mul
dec
loop
nop
ds
hlt
stc
add
rcll
fistpll
and
leave
ret
adc
lods
test
int3
out
insb
fcoml
adc
call
out
xlat
aad
aas
dec
push
pop
out
adc
fwait
push
movsb
mov
stc
push
addl
and
stos
jns
sub
aad
inc
out
xor
stc
jb
cmpsb
pop
enter
sbbl
loop
mov
aad
jge
sbb
cmpsb
pop
mov
aad
adc
sbb
pop
mov
ss
hlt
push
dec
enter
enter
psllq
cltd
mov
mov
dec
mov
lcall
pusha
nop
pop
mov
gs
mov
lret
mov
fwait
dec
sbb
outsl
sbb
sbb
jg
add
les
adc
aas
lods
mov
popf
or
mov
xorb
clc
pop
mov
test
adc
lea
addr16
pop
inc
je
call
loop
sarb
ds
xor
sbb
mov
sub
xor
jl
xchg
sbb
xor
out
push
test
outsb
js
imul
sub
cs
mov
enter
int
pop
mov
xchg
xchg
inc
ja
ljmp
jle
cld
cwtl
sbb
push
xchg
stos
aas
xchg
shll
xchg
loop
sub
lods
lods
aas
fs
mov
mov
jecxz
adc
push
jle
cltd
inc
in
negl
lcall
lret
int
jne
bound
pushf
push
fsubs
lcall
nop
mov
in
mov
xor
cwtl
mov
fdivrl
sub
lret
ss
add
pusha
mov
sbb
or
cmp
pop
adc
scas
xchg
xor
push
mov
bound
data16
jo,pn
iret
adc
mov
mov
push
cmp
push
cs
mov
push
cwtl
and
push
mov
cmp
jne
jbe
out
jg
rol
xchg
es
mov
pop
dec
mov
adcl
add
jne
mov
lret
nop
jle
das
mov
pushf
leave
divb
inc
mov
ss
clc
cmp
lock
sub
push
adc
data16
jl
and
lcall
and
ficoms
and
push
les
enter
outsb
mov
mov
lods
popa
pusha
dec
rcrb
xchg
inc
fadd
hlt
xchg
cmp
inc
jnp
push
pop
imul
pop
pop
mov
outsb
mov
int3
xor
sub
push
cltd
pop
aad
insb
and
add
stos
adc
loopne
mov
pop
push
mov
sub
jmp
xor
xchg
int3
xchg
shl
repnz
lods
loopne
ss
dec
lods
sbb
cwtl
inc
ljmp
push
or
xchg
mov
imul
push
das
jmp
hlt
lods
xchg
and
je
xlat
push
mov
or
scas
or
pop
popf
jns
cltd
lret
mov
out
mov
aas
nop
dec
shrb
mov
mov
push
and
pop
push
or
scas
mov
dec
jp
sbb
or
outsb
aam
mov
ljmp
inc
pop
or
dec
cwtl
aaa
jnp
lea
cmc
mov
sub
sub
mov
lret
xchg
ja
jb
jge
adc
dec
shrd
shlb
lds
adc
and
cmp
push
popf
xor
mov
popa
sahf
icebp
jne
movsl
push
cmp
jmp
push
lahf
dec
stos
and
xchg
je
loope
and
pop
push
pop
aad
push
outsb
mov
push
scas
mov
cwtl
mov
sti
push
in
mov
xchg
lods
jne
ljmp
incl
test
pop
sbb
cmp
inc
subb
push
sbb
loopne
clc
and
add
mov
mov
or
and
movsb
mov
ds
out
insl
or
frstor
fsubrs
cmp
dec
or
cmc
lcall
push
fs
cwtl
xchg
push
cmp
inc
push
xchg
mov
popa
push
mov
mov
xchg
adc
or
sub
cmp
scas
icebp
inc
les
rorb
or
add
ret
lea
xor
and
fwait
daa
rorb
xchg
jnp
lcall
xchg
icebp
lahf
xchg
in
je
out
fsubrl
push
pop
mov
sbb
lods
bound
mov
xor
xor
cmc
fildll
stc
pop
insl
leave
push
rcrb
cmp
mov
rcrl
and
jbe
lcall
std
cmp
sub
add
xchg
pop
dec
test
int
in
ret
mov
lcall
cmp
shlb
xor
sbb
test
add
imul
test
gs
cmp
ja
sub
xor
push
outsl
or
xchg
adc
in
pusha
mov
add
sbb
test
pop
subl
add
cmpsl
movsl
push
lods
pop
rolb
jo
call
mov
cmpsl
call
sbb
sbb
add
inc
xchg
sub
in
aad
adc
pop
icebp
mov
lods
inc
rclb
filds
popf
cmp
fwait
andl
xor
or
cmp
adc
std
mov
xor
mov
in
mov
or
or
xchg
dec
enter
stos
mov
pop
loopne
cld
stc
es
movsl
add
cmp
nop
scas
cmp
outsl
js
add
enter
aam
jle
xchg
add
mov
xchg
xchg
fwait
add
dec
fistps
mov
pop
or
xchg
ljmp
sub
cmp
push
mov
add
push
pushl
insl
int3
sub
mov
loopne
push
dec
cmp
jg
rcrl
adcb
sbb
iret
enter
ret
mov
inc
xchg
dec
imul
adc
mov
push
cltd
sahf
pop
jo
push
add
dec
and
inc
repz
mov
fwait
inc
dec
dec
pop
jo
lock
fdivl
inc
cmp
ljmp
dec
mov
adc
or
movsl
aam
sarb
mov
sub
outsb
mov
push
iretw
and
sbb
push
mov
lods
pusha
iret
data16
jge
lock
sub
jne
add
cmp
or
mov
shll
add
xor
xchg
fbld
out
and
pop
iret
cmpsb
pop
mov
pop
fdivrl
cmpb
lret
mov
pusha
add
movsb
cmp
jb
es
rcll
imul
inc
pop
loop
shll
lahf
hlt
scas
add
jmp
sahf
mov
or
mov
mov
jnp
in
in
loop
daa
sub
push
pop
sbb
or
mov
xchg
push
loop
xchg
outsb
scas
pop
pop
call
faddp
mov
cmp
fsubrs
push
jno
sbb
sbb
enter
sbb
adc
movsl
cmpsb
xchg
mov
test
enter
jg
popf
xchg
mov
sbb
icebp
jecxz
push
inc
xchg
fisubl
cmpsb
lds
jno
push
sub
jbe
mov
test
es
ret
das
dec
sub
mov
or
push
jno
push
mov
cwtl
test
psllw
gs
or
not
ret
fmul
cli
push
adcb
outsb
iret
pusha
bound
push
mov
in
in
inc
mov
ljmp
insl
mov
repnz
mov
add
or
aad
mov
stos
in
leave
fcomip
testb
mov
pop
mov
pusha
and
mov
pop
cmp
sub
jo
ja
add
mov
or
sub
sub
cmpl
dec
aaa
jo
mov
jne
fsin
mov
fs
mov
push
push
mov
adc
cwtl
push
mov
or
xchg
das
mov
xor
repnz
imul
xchg
fwait
dec
jae
xchg
inc
adc
mov
mov
mov
into
sahf
xchg
dec
push
jge
gs
dec
mov
int3
lcall
jmp
pop
cmp
mov
cwtl
popf
std
roll
cld
adc
sti
sub
inc
cwtl
mov
imul
aaa
loope
dec
lods
adc
mov
xor
adc
rorl
popa
sub
cmp
jno
dec
jp
dec
shlb
xor
inc
movsb
repz
xchg
mov
or
xchg
jae
hlt
add
mov
insl
fiadds
mov
mov
int
add
dec
sub
jmp
outsb
mov
or
lcall
sbb
insl
movsl
stos
jmp
pop
in
jg
je
mov
jb
ljmp
inc
in
and
sub
cmp
aas
fcomps
loope
xchg
jg
or
gs
adc
jo
xor
cmp
mov
jno
pusha
lods
adc
loope
dec
mov
adc
dec
ja
ss
mov
in
inc
fwait
inc
or
int3
nop
inc
loop
adc
jmp
roll
cmp
btc
fidivrs
xor
dec
data16
lods
gs
fsubl
aas
and
scas
and
adc
mov
paddsw
add
adc
lods
adcl
cmc
jp
popa
outsb
loop
inc
stos
enter
hlt
cmp
out
stc
pop
imul
mov
xchg
cltd
ret
clc
das
cmp
push
scas
add
in
roll
std
insl
fbstp
maxps
push
rclb
push
and
aaa
and
mov
stos
sub
mov
int3
mov
icebp
sub
fsub
jle
dec
mov
xchg
and
loopne
insl
out
sub
sub
orb
add
cmp
mov
mov
and
inc
outsb
pusha
test
fiaddl
sahf
pushf
jl
rcrb
jae
popa
cmp
dec
popf
pop
in
cmpsb
lcall
lret
ret
mov
push
cmp
sti
adc
mov
out
pop
fstl
clc
insl
dec
test
jecxz
test
push
lock
sti
dec
sbb
mov
cli
mov
inc
iret
scas
ret
dec
add
mov
push
lock
push
decl
ret
mov
movsl
ds
jno
test
jns
mov
jge
in
xor
cmpsl
adc
shl
dec
push
ficompl
js
add
mov
push
fdiv
mov
lahf
push
add
div
jb
cmp
insb
push
adc
mov
add
ror
sbb
int3
mov
into
jb
test
mov
and
arpl
pop
rcrb
mov
aas
js
into
add
mov
test
mov
std
sbb
jg
fidivrs
fistpl
dec
cmp
mov
jae
mov
imul
jns
lock
mov
jb
xor
sub
test
bound
popf
dec
subb
jno
stc
push
xchg
ss
xchg
les
adc
insb
mov
lcall
xchg
call
xchg
stos
push
sti
or
imul
inc
mov
sbb
dec
jo
push
jl
loop
sbb
cmpsl
jo
push
push
ja
icebp
adc
xor
rclb
rorl
cltd
clc
mov
sub
cmp
sub
insb
loope
es
scas
push
stc
add
inc
insb
adc
lods
mov
mov
fimull
jg
ret
loop
test
addr16
dec
and
notl
ficomps
or
lret
std
push
or
xchg
xor
sbb
pop
push
cmpsb
dec
xchg
dec
push
pop
xchg
xlat
pushf
fcoms
ret
mov
inc
mov
clc
dec
scas
push
icebp
stc
mov
xchg
mov
and
adc
xchg
fsubrl
out
mov
mov
ret
jg
cltd
inc
es
push
bound
dec
cmp
stos
fistps
jge
mov
pop
in
cli
mov
sub
adc
movsb
lock
in
sbb
sbb
mov
xor
mov
dec
fwait
cltd
push
call
jnp
inc
dec
sbb
in
mov
pushf
ss
sti
and
push
push
nop
data16
push
cli
xchg
xlat
leave
push
ja
shrb
sti
mov
pop
mov
dec
iret
shlb
lcall
dec
push
lods
sahf
pop
sahf
and
jnp
imul
andb
repnz
pop
cltd
loop
hlt
mov
xlat
mov
ds
test
enter
cld
pop
in
sbb
fptan
mov
lock
mov
sbb
lahf
xchg
insb
hlt
jno
push
jbe
nop
dec
ret
dec
mov
pop
push
repnz
fstps
jno
aad
mov
pop
fidivs
cmpl
ljmp
mov
repz
push
xor
inc
xlat
fs
jge
shl
test
fnstcw
lock
mov
nop
mov
push
loopne
jbe
or
stos
lret
sub
in
pop
mov
adc
adc
in
jno
jge
in
in
sbb
mov
pushl
sbb
incl
and
jb
xor
mov
mov
test
mov
out
cmc
repnz
jp
push
jp
cmp
cmpb
mov
xor
lahf
ret
inc
cli
fs
adc
or
pop
inc
mov
rcrl
fdivrl
sarl
rcrb
mov
push
fcoml
je
cmpl
enter
out
pusha
insl
pop
test
mov
jmp
jb
add
fs
and
mov
insl
sub
rcrl
or
adcl
sbb
js
or
fdivl
pop
xorl
hlt
fdivs
add
ljmp
sbb
jb
imul
sahf
push
jnp
stos
jb
ds
inc
add
stos
jae
add
jecxz
mov
jbe
xor
rcrb
inc
ljmp
add
mov
in
add
inc
or
mov
mov
movsl
dec
dec
cld
inc
or
push
push
test
and
sub
push
mov
iret
jg
ss
fnstsw
sbb
popa
mov
add
sbb
adc
xchg
repz
mov
lods
daa
cwtl
shrl
xchg
cs
sub
fsincos
out
insl
or
or
dec
ljmp
add
inc
jns
scas
stos
movsl
sbb
sti
sti
sbb
sbb
scas
popf
lods
cmpsb
jl
cmp
scas
or
stos
push
std
and
or
int
int
cmp
lahf
pop
cli
add
icebp
pop
sub
push
push
xchg
out
xchg
cwtl
fincstp
leave
popf
insb
out
dec
adc
int
cmp
in
jns
outsb
pop
cmp
sti
xchg
dec
add
pop
add
scas
loopne
pop
mov
lcall
testb
mov
cmp
das
mov
or
fnstcw
pop
mov
imul
dec
sub
lock
add
in
push
xor
in
mov
mov
cmp
inc
pop
jnp
pop
rcrl
jb
out
shl
dec
sub
jecxz
dec
popf
fldl
mov
adc
mov
fwait
sbb
push
out
inc
call
loope
sbb
hlt
jno
mov
push
ucomiss
sbbl
dec
dec
fcompl
pop
mov
nop
psllw
or
fildll
imul
jl
cmp
hlt
cmp
mov
sti
lods
pop
pushf
add
jle
xchg
insl
pop
test
push
push
pop
mov
mov
jo
add
jmp
hlt
dec
scas
iret
in
or
stos
xchg
mov
out
dec
dec
inc
shll
add
hlt
int
mov
cmp
adc
pop
inc
in
adc
fcoml
mov
testb
adc
into
lock
mov
mov
push
stos
pop
jecxz
int3
mov
sub
ficoml
sub
mov
mov
test
fadd
pop
ds
ljmp
pop
add
xchg
cmc
add
push
iret
lods
add
lea
dec
ds
lods
inc
incb
mov
fiadds
push
iret
adcb
pop
add
xchg
outsb
std
stos
lods
mov
pop
mov
sub
leave
stos
jecxz
push
out
mov
aam
mov
adc
jbe
jp
in
dec
in
jmp
loop
lock
shrl
and
and
orl
push
pop
and
sahf
and
xor
mov
cmpsl
mov
dec
adc
je
loope
mov
xor
test
cmp
and
push
stc
test
xlat
inc
xor
mov
insb
dec
fldcw
lods
jp
test
push
dec
pop
push
push
fwait
insb
dec
xchg
or
pop
xor
xchg
push
ret
test
lods
cmp
inc
xchg
cmp
xor
pop
inc
xchg
lret
stos
inc
mov
xor
jl
pop
sti
lea
je
mov
arpl
dec
shlb
imull
mov
js
push
out
sbb
inc
mov
movsb
xchg
adc
mov
inc
push
icebp
into
xchg
stos
lea
add
sub
shll
call
pusha
push
fsubp
lock
mov
push
repnz
and
add
lods
iret
mov
mov
push
scas
jne
js
mov
xchg
sahf
sub
adc
outsb
pop
or
nop
iret
lods
scas
test
jecxz
adc
dec
jno
cmp
imul
mov
cmp
inc
sub
cmpsl
fiadds
jl
dec
movl
jmp
movb
imull
mov
lahf
inc
repz
pusha
std
mov
sbb
sbb
into
adc
in
test
ss
adc
add
fs
mov
mov
es
loop
out
push
mov
fs
inc
inc
addr16
lods
subb
adc
xchg
in
or
pop
fiadds
push
pop
int3
sub
and
lret
jg
sub
ret
dec
adc
adc
and
push
xor
mov
mov
mov
xchg
inc
add
int
out
fucomi
out
push
outsl
add
out
test
xor
push
lods
ret
dec
ret
pop
lret
fs
push
adc
xchg
stc
sub
mov
bnd
push
shrl
push
push
pop
cmpsb
pop
mov
sub
jge
cmp
mov
and
jecxz
and
call
cwtl
insl
fidivrl
mov
pushf
dec
cmp
sarb
jge
int
mov
or
aas
mov
lea
push
cmc
sub
lock
cld
mov
pop
imul
imul
stc
aam
rorb
cmp
enter
imul
sbb
dec
js
fistpll
andl
jne
repz
sti
sbb
inc
mov
outsb
roll
sub
and
outsb
push
out
inc
out
pop
xchg
push
push
mov
sbb
shrl
xchg
lret
xchg
cwtl
imul
jae
or
mov
cs
rclb
or
dec
outsl
test
push
popa
pop
or
in
cmp
jl
es
pop
push
in
leave
nop
xchg
je
hlt
or
shl
adc
inc
int
insl
cmp
test
cmp
push
mov
and
pop
push
mov
adc
aam
popf
daa
sub
into
cmp
or
scas
cmp
lods
push
cmp
fs
gs
enter
adc
fcoms
sarl
xor
xchg
or
fists
test
in
add
cltd
les
loop
mov
lock
xor
aam
fbstp
outsl
mov
call
shll
adc
mov
cwtl
mov
jg
test
scas
pop
stos
cmpsb
lods
or
jecxz
cmp
mov
xor
ficompl
lcall
pop
cmp
xor
in
data16
cmp
push
add
push
pop
ror
sbbl
pop
pop
mov
sub
add
inc
pop
inc
and
cmp
mov
add
mov
ret
push
push
ret
aaa
data16
call
xor
push
fidivs
adc
outsl
push
sti
fsubr
test
sbb
fidivrl
add
imul
adc
test
and
sarb
sbb
int3
lcall
mov
movsl
mov
push
movsb
push
sahf
lods
or
lods
sbb
push
pusha
out
test
mov
pop
sbb
insb
test
push
lret
push
call
nop
dec
pop
orl
scas
and
cmp
sub
test
call
push
mov
push
lcall
or
std
sbb
lahf
jecxz
js
addr16
fisubl
loope
jb
xor
inc
or
dec
in
mov
mov
mov
adcb
fadds
sarb
add
arpl
fwait
push
sbb
pop
xchg
dec
cs
sub
dec
ljmp
loop
fdivs
xor
sti
push
ss
or
out
jl
mov
jg
inc
aad
mov
fiaddl
dec
pop
clc
sub
fstpt
sub
cmp
dec
test
cmp
cmp
xchg
xor
enter
push
aad
je
lea
ffreep
cmc
addr16
pop
dec
sti
cld
insl
lods
idivb
nopl
shlb
fcomps
pop
cmp
sub
cmp
pop
sub
movb
cmp
xchg
push
lret
or
sbb
mov
pop
mov
ret
adc
sub
sbb
jecxz
stos
jge
stos
nop
fidivrs
push
inc
shlb
adc
xor
cmp
pop
push
push
fisttpl
loope
leave
inc
daa
aam
pop
mov
mov
out
xchg
push
jnp
push
aaa
push
cwtl
cmc
cmp
addr16
mov
jmp
cwtl
fisubrl
fidivl
xchg
jge
fistpll
dec
lods
aam
scas
dec
test
out
cmpsb
sti
push
pop
dec
clc
xchg
gs
jecxz
dec
scas
and
sub
stos
aad
and
add
rorb
fdivl
xchg
push
stos
es
fnstcw
add
je
test
push
inc
adc
xchg
loope
lahf
icebp
pop
cmc
inc
adc
pop
in
cmp
pop
aas
mov
push
mov
ret
adc
outsl
xchg
popa
imul
pop
call
and
mov
sub
mov
or
mov
dec
sub
dec
inc
jbe,pn
jnp
mov
dec
aam
xor
push
or
stc
lock
cmc
xor
idivl
inc
mov
loop
cwtl
inc
and
mov
mov
loop
jnp
mov
aaa
push
rclb
inc
das
out
cmp
mov
aas
pop
pop
mov
xchg
xor
sub
lahf
sub
fistl
jne
lea
cli
mov
into
pop
mov
cmc
and
push
jg
loope
jb
jmp
test
push
and
leave
mov
rcr
dec
add
jnp
ret
push
jne
mov
dec
sbb
jns
test
xchg
sbb
mov
sub
mov
test
addl
mov
mov
leave
call
adc
call
fiaddl
call
xchg
loop
xchg
xor
aam
mov
aad
adc
out
test
cmpsb
sti
sbb
mov
sbb
mov
jg
mov
mov
pop
pop
cmc
mov
pop
add
add
mov
adc
push
and
xlat
aas
cmp
lret
mov
mov
sub
sti
push
cltd
into
mov
xchg
nop
bnd
mov
imul
push
test
or
je
int3
fcmovb
cmp
nop
loope
xor
and
int3
jnp
sub
mov
repnz
jecxz
jnp
pop
loop
hlt
or
call
cltd
dec
mov
mov
and
mov
inc
movq
mov
jl
push
cli
mov
inc
popf
fsubs
pop
jne
fstl
lock
inc
mov
enter
out
add
push
jge
enter
and
mov
xchg
fsubs
ljmp
mov
pop
aaa
add
mov
jmp
out
sbb
test
lea
scas
push
cld
pop
pop
adcb
dec
cmp
negl
sbb
inc
inc
movsl
in
adc
mov
outsb
roll
xor
das
cmp
add
scas
mov
cmp
fisttpll
mov
push
jecxz
push
jecxz
loope
cmp
mov
pop
cwtl
sub
lret
adc
xchg
jb
jle
hlt
mov
bound
cmp
pop
movsl
adc
js
pop
fcomip
pusha
mov
jb
aad
cs
jnp
dec
add
filds
loopne
add
lret
dec
and
jno
sub
je
add
push
les
dec
sub
sbb
jmp
xlat
mov
out
add
mov
aas
sbb
jbe
into
mov
fucomp
add
mov
jae
or
adc
fistpl
pop
fldl
out
popf
mov
push
ret
insl
roll
in
and
jecxz
mov
dec
ljmp
dec
sbb
fnsave
jno
insl
jns
test
jge
shlb
int3
sub
push
inc
inc
cmp
and
jmp
pop
test
xchg
mov
inc
cmp
inc
icebp
sub
xor
mov
stos
xor
shlb
jmp
pop
add
negb
lcall
fucomi
adc
inc
sub
pop
fidivrs
jnp
xchg
dec
push
jle
hlt
fsubr
cld
mov
dec
mov
cwtl
es
mov
add
nop
js
scas
jb
mov
or
outsb
mov
lea
adc
or
jne
int3
negb
mov
inc
pop
stos
mov
sub
adc
or
pop
inc
popa
js
enter
adc
mov
bound
or
or
lahf
xchg
cltd
mov
fisttps
fistl
and
xchg
xchg
xchg
and
cmp
leave
jge
fistl
jl
jp
sub
pushl
sbb
xchg
movsl
xor
push
pop
push
rcrb
cmp
outsl
stos
je
inc
xor
jb
das
sbb
pushf
push
ret
pop
loope
pusha
inc
xor
pushf
xchg
cmpsl
push
es
pop
fistl
das
das
test
sub
loop
jnp
and
iret
push
push
dec
cwtl
adc
cmp
sbb
mov
jmp
std
pop
cmp
popf
sahf
popf
mov
jns
les
sub
jl
push
pop
outsb
jg,pt
mov
dec
loop
mov
pop
cld
into
pop
jmp
int3
iret
push
int
push
mov
jl
decb
push
mov
aas
inc
rorl
inc
mul
sti
rorb
pusha
pop
sub
adc
and
adc
es
xor
out
jg
adc
pusha
es
sub
cli
int3
loop
insl
sbb
mov
adcb
and
pop
pop
aas
dec
das
and
push
or
mov
sti
xor
xor
test
push
fcomps
pop
les
xor
pop
adc
outsb
ljmp
push
and
sbb
mov
shr
pop
inc
sub
ja
out
ret
add
jno
lods
enter
and
lahf
lock
inc
xchg
push
popa
dec
cmp
mov
fwait
push
jmp
inc
xor
mov
cmpsl
mov
ret
cmp
sub
sub
and
sbb
stos
xchg
adc
jg
dec
sbb
mov
xor
test
test
and
ljmp
iret
jg
inc
jecxz
and
stos
mov
xor
mov
inc
xchg
xchg
jno
xchg
mov
mov
push
and
xor
sub
cwtl
loope
filds
sete
shrl
mov
mov
aad
cmp
fwait
imul
push
mov
je
pushf
popa
imul
push
pop
divb
lock
mov
fistpl
ss
pop
js
mov
ds
cmp
mov
sbb
add
cmp
jmp
test
xor
mov
pop
sub
pop
cmp
out
pop
test
add
xor
mov
arpl
mov
cmp
xor
pusha
and
aam
daa
mov
xchg
fsubp
or
mov
insl
xchg
xchg
pop
call
dec
es
dec
jecxz
mov
inc
out
arpl
push
add
adc
in
call
mov
mov
mov
in
gs
cltd
in
enter
outsl
mov
or
sbb
mov
adc
rcll
dec
adc
pusha
or
xchg
punpckhwd
cmp
cs
fstl
xor
sbb
call
dec
into
mov
mov
aaa
add
cmp
xchg
out
mov
or
pop
rolb
dec
mov
jg
je
clc
insb
ret
mov
clc
aad
pop
push
and
idiv
pusha
xchg
xor
in
adc
mov
add
jae
pop
push
out
or
js
mov
mulb
or
and
psllq
loopne
repnz
jb
fbld
xchg
xchg
cmp
xchg
xor
stos
stos
mov
cmp
xor
mov
ret
push
jb
sbb
aaa
movsb
in
pop
pop
jge
rcr
bound
jb
movsb
or
sub
jp
addr16
inc
aad
mov
int3
rcrl
cwtl
mov
mov
and
push
stc
shl
movsl
jns
xchg
cld
jecxz
push
inc
mov
int
out
sbb
in
addl
xchg
cmpsb
sub
insb
insb
rcll
xchg
or
shll
mov
mov
mov
mov
lods
xor
das
in
stos
call
and
or
in
or
mov
xchg
jo
add
or
bound
movsl
popf
mov
lods
xor
out
mov
imul
leave
stc
sbb
call
ret
jle
inc
jb
fwait
dec
xor
mov
push
je
out
mov
cmp
pusha
mov
add
ja
jmp
xchg
mov
in
adc
ljmp
jnp
sarl
std
cmp
pop
jno
adc
jnp
es
in
out
fadd
loop
out
loop
testl
or
jle
sti
jno
pop
dec
mov
gs
jmp
dec
sbb
cmp
outsl
subb
mov
cmp
or
xlat
and
aam
out
push
movsb
fs
hlt
xchg
adc
std
cmc
sbb
sti
jns
aaa
xchg
mov
fsts
mov
and
xor
mov
enter
jecxz
in
xchg
cmpsb
mov
out
daa
ljmp
push
xchg
cmpsb
pop
mov
push
stos
cmp
mov
mov
cmp
inc
or
loop
pop
ds
pop
les
insl
cs
dec
subb
call
fistpl
or
cmc
or
imul
sub
pextrw
cmp
sub
lods
lods
lret
mov
mov
ret
xchg
sbbb
cltd
lahf
cs
lea
inc
leave
mov
mov
push
pop
call
sbb
xchg
xor
xlat
mov
call
mov
out
jmp
clc
xor
lock
xchg
mov
cwtl
and
jge
scas
sbb
clc
push
aas
sbb
xor
es
int
scas
fstl
ja
push
sub
cmp
outsb
ja
mov
or
in
aaa
and
cmp
or
xchg
popf
ficoms
push
insl
mov
push
ss
mov
pushf
jno
call
xor
dec
repz
jae
mov
lods
pop
ja
iret
shl
sub
lret
jg
sub
out
push
xchg
enter
fists
ret
mov
xchg
sub
sbb
out
ss
lock
fildll
test
pop
jg
cmpsl
mov
clc
pop
sbb
push
add
xchg
or
sbb
mov
fsubrs
inc
pop
addr16
loopne
or
das
mov
mov
pop
shlb
jg
push
lds
pop
push
pop
mov
repnz
dec
enter
aas
movsb
fsubrs
repz
insl
sahf
lds
in
ss
clc
pop
enter
cmp
frstor
jp
mov
xchg
and
inc
idiv
sbb
mov
lea
std
sub
inc
xor
xchg
jl
es
fcoml
and
call
ljmp
sub
icebp
adc
and
mov
cmp
push
jg
insb
aas
cmp
hlt
nop
or
push
mov
fistl
mov
in
mov
int
clc
inc
repnz
add
sahf
xchg
aaa
addb
and
cmp
sub
repz
frndint
test
in
and
lods
out
mov
outsb
xchg
aas
mov
popa
subl
je
cmp
mov
adc
gs
sar
push
fwait
dec
cmpsl
in
out
jb
and
js
lret
mov
testb
sbb
bound
clc
out
mov
lods
add
dec
or
out
shll
aad
mov
leave
adcb
sbb
and
mov
call
jmp
out
aas
loop
rorl
dec
inc
mov
jno
mov
inc
jo
push
test
xchg
test
call
js
testb
push
mov
shll
shrb
cmp
adc
dec
lods
pop
xchg
cmp
testl
mov
stc
sub
out
popa
notl
scas
push
add
add
mov
cmp
mov
sti
into
call
cltd
sbbb
sbb
shll
cmp
hlt
dec
mov
mov
cmpb
dec
pop
aaa
pop
les
test
xor
push
subl
dec
fisubs
jae
movsb
mov
push
lcall
lock
push
out
inc
pop
fwait
or
out
inc
sbb
lock
pop
call
cmp
dec
jne
and
je
and
test
ja
dec
leave
xor
fcoml
js
adcb
pushf
pop
inc
loope
test
push
mov
mov
imul
and
xor
fmul
mov
xor
int3
adc
cmpb
or
fiadds
fwait
outsb
or
and
rorl
xchg
repz
leave
mov
out
clc
out
and
enter
test
in
dec
adc
in
in
jl
addr16
mov
push
inc
xchg
fmul
push
push
scas
or
mov
iret
or
adc
cmc
push
lods
sbb
outsb
pop
sbb
enter
mov
ret
xchg
jbe
es
test
test
cli
xorl
movsb
jg
mov
push
jo
cmpsl
nop
fs
and
mov
aad
jo
lret
outsb
inc
aam
add
mov
loop
xchg
dec
push
mov
in
je
insb
popa
lcall
aas
ret
data16
pop
call
inc
lret
and
stos
adcb
lods
cmp
mov
add
popf
outsb
mov
nop
orb
sub
in
into
out
adc
cltd
pusha
imul
push
call
xchg
fs
loopne
dec
pop
cld
jg
jno
aad
lods
jl
rorl
cmp
mov
mov
rorl
and
js
sbb
xor
insb
negb
repnz
repnz
push
dec
test
adc
lock
int3
movsl
lcall
mov
adc
pop
jae
jl
jge
jmp
subl
into
mov
loopne
xchg
movsb
inc
push
xchg
test
test
cmp
je
ss
push
adc
add
out
or
and
cmp
xchg
imul
repz
cwtl
imul
lods
jecxz
insl
lret
inc
mov
mov
and
xor
xor
out
push
dec
or
sub
and
and
xor
int
xchg
mov
in
mov
mov
inc
mov
insb
mov
daa
adc
test
fcom
stos
jb
in
and
sahf
xchg
and
sub
lret
sub
cmp
sbb
lret
xchg
mov
push
in
push
roll
dec
outsl
leave
lar
scas
and
popf
add
ja
ljmp
ret
btr
and
and
test
scas
push
cmpsl
insl
outsl
test
inc
jae
xor
dec
inc
pop
shlb
pop
stos
icebp
inc
cmpsb
insb
adc
jb
sub
add
jg
lcall
fcoml
mov
mov
rolb
push
out
lock
pop
mov
sbb
dec
movsb
test
sub
push
jns
push
dec
jns
cmp
outsl
mov
in
nop
cli
movsb
inc
je
adc
jns
adc
add
outsl
jmp
dec
jmp
in
mov
test
push
push
adc
xchg
int
lahf
add
xchg
popa
outsb
add
xchg
lds
out
mov
dec
fnstenv
cmp
cmp
dec
add
pop
jecxz
dec
cmp
adcl
mov
sahf
jl
push
fists
dec
push
jmp
jne
scas
lock
adc
mov
in
inc
xchg
and
xchg
cmp
in
in
pop
fxch
loope
and
test
pop
cmp
push
sub
push
out
icebp
in
ret
push
jns
push
mov
aaa
mov
push
mov
pop
pusha
dec
sub
inc
into
push
lret
push
fiaddl
cmp
cld
outsl
outsl
sub
jmp
mov
outsb
call
pushf
test
mov
gs
test
mov
into
xchg
cwtl
lahf
out
jmp
cli
mov
pop
mov
jae
jl
and
ret
pop
rcr
mov
mov
movsl
fisttps
mov
mov
pusha
fidivrl
call
std
sub
ss
insl
push
and
pop
lret
arpl
lret
stos
in
sbb
loopne
sbb
arpl
mov
gs
lcall
mov
jge
stos
packuswb
ss
outsb
jo
nop
aaa
in
xor
cmp
int3
inc
push
jbe
outsb
dec
ret
fisttps
imulb
mov
arpl
sbb
fsub
pop
and
loop
push
sub
cmp
loop
sub
mov
push
cmp
idivb
sbb
mov
cld
sahf
pop
fisubrs
lahf
nop
sub
mov
sahf
mov
arpl
mov
dec
test
loopne
sub
push
out
orb
mov
jp
and
fadds
clc
in
js
cmp
ret
cli
push
stos
sahf
in
dec
push
xor
sahf
je
mov
mov
dec
out
pop
iret
inc
mov
inc
mov
int3
scas
decb
mov
lock
inc
into
adc
mov
lods
push
lea
mov
bound
aas
or
int3
out
jo
outsb
cmp
pop
mov
out
inc
repnz
cmp
lret
aaa
and
fcmovu
pop
mov
inc
in
out
jne
dec
cwtl
sahf
xor
pop
jnp
jp
out
mov
std
in
add
mov
mov
push
scas
push
std
mov
mov
lret
ret
in
inc
repz
push
jno
ret
mov
push
and
bound
dec
adc
pop
pop
mov
rcrb
filds
jle
or
sbbl
faddl
jb
cmp
mov
pop
ficompl
ljmp
cmpsb
loopne
add
sub
mov
lcall
outsl
loop
and
ret
sub
fidivs
movsl
arpl
cmc
icebp
mov
dec
rcrl
sub
sbb
cmpsl
fldl
std
cli
sbbl
add
mov
xchg
sub
loopne
dec
inc
fildll
data16
nop
fwait
add
xor
inc
fwait
dec
inc
out
dec
mov
shlb
jo
aas
sub
rcrl
addr16
xchg
lods
sbb
adc
sbb
cmp
addr16
dec
xchg
roll
stos
and
inc
nop
sub
test
clc
mov
out
int
xchg
aam
mov
ds
jo
lea
pop
pop
testl
into
or
add
inc
pop
fldl
cmp
mov
sahf
pushf
mov
lret
add
push
adc
out
xor
sbb
push
jbe
mov
mov
shl
xor
pop
int
cwtl
fwait
pop
sahf
dec
in
stos
fldt
jno
lahf
rclb
xchg
jle
subl
jb
jnp
mov
pop
sub
repnz
fwait
ret
jo
pop
mov
cmpsl
mov
fisubs
or
xchg
js
bound
cwtl
ss
mov
xchg
add
xchg
loope
bnd
cmp
mov
cmp
push
enter
arpl
or
jg
mov
inc
mov
and
inc
fdivrl
loope
sub
add
dec
jecxz
das
cmpsb
test
in
add
adc
js
pop
dec
test
inc
addl
mov
mov
adc
pop
mov
xor
lret
dec
sub
repz
mov
cwtl
int3
call
loop
sbb
clc
xchg
outsl
call
and
cmp
push
sub
in
mov
sti
mull
jno
sahf
cmp
inc
shl
addr16
in
shr
cmp
add
or
xchg
jb
mov
sarb
mov
mov
ret
xlat
mov
stc
add
xchg
fadds
setge
xchg
lds
pop
sub
mov
cmpsl
inc
ljmp
adc
sub
jecxz
fs
dec
imul
push
lds
lcall
in
rol
jle
jp
dec
pop
dec
pop
das
fsubrs
ret
jmp
imul
pop
inc
mov
sbb
push
mov
int3
xor
scas
enter
jge
push
fs
and
pop
xor
adc
test
testl
fcompp
popa
mov
mov
outsl
xchg
rclb
shll
mov
sub
rcrl
lahf
ficoml
sbb
inc
cmpsl
mov
pushw
lds
add
cli
std
dec
inc
aas
xor
outsl
and
jle
fs
push
lock
fwait
imul
das
cmp
push
mov
int
jno
subb
mov
push
adc
push
lods
outsb
popf
lock
xchg
jae
scas
mov
xor
jg
faddl
test
ss
mov
pop
mov
leave
pop
xor
cli
cmpsb
imul
mov
stos
enter
pop
dec
lret
add
cmpps
lods
mov
sbb
push
pop
push
push
fldl
ja
insb
cmpsl
xchg
and
mov
sbb
xor
xor
test
xor
addr16
lds
rol
pop
cwtl
test
mov
add
mov
mov
movb
cmp
insl
inc
sub
mov
jecxz
xchg
mov
inc
es
test
movsb
add
loop
out
mov
inc
fldt
push
dec
ljmp
xor
and
push
cmc
aam
and
dec
jp
movsb
xchg
pop
mov
xchg
mov
dec
dec
jb
dec
insb
jnp
repz
cmp
incl
xor
rcrl
lret
lds
call
cmpsb
cmp
sbb
push
xchg
xlat
cmp
xor
cmp
push
jmp
inc
or
jno
mov
mov
xor
sbbl
push
ja
mov
scas
sbb
cld
pushf
mov
insb
xchg
ljmp
xchg
enter
dec
cld
cmpsb
sub
ljmp
mov
or
lret
xchg
out
adc
pop
mov
add
test
push
call
imul
add
push
mov
lret
popf
mov
cmp
pusha
jb
cs
fidivl
jnp
scas
pop
add
pop
pop
and
andb
cmc
out
add
and
clc
sarl
scas
int3
decb
pop
adc
or
popa
xchg
dec
inc
popa
jp
hlt
lret
jae
dec
ss
push
sub
gs
addr16
or
aam
ds
lcall
mov
jo
popf
jo
jae
popa
hlt
xchg
int
adc
cmc
mov
js
adc
shll
mov
dec
jmp
jle
data16
loopne
scas
mov
lea
call
arpl
sub
iret
bound
or
push
pop
mov
mov
mov
cmp
loop
mov
ljmp
cmp
sub
xor
cmp
in
test
outsb
inc
sbb
mov
sub
xor
loope
push
mov
lret
lods
shl
lcall
sarb
incl
cs
inc
mov
clc
mov
adc
andl
xchg
aad
in
mov
xchg
xchg
ja
xor
rclb
loope
into
jmp
xchg
nop
dec
pop
mov
push
jne
mov
pushf
jns
xchg
movsb
push
bound
pop
mov
movsb
cld
sub
dec
pop
mov
lods
push
mov
cmp
mov
cmp
test
lret
jnp
and
mov
popa
jg
xor
cvtps2pd
xchg
xorl
stos
mov
push
mov
adc
popf
lahf
jbe
ds
test
mov
divl
pop
jb
jle
lods
fcomi
mov
push
arpl
or
push
pop
or
or
shlb
std
das
inc
scas
and
enter
sbb
divl
ds
dec
mov
mov
xor
xchg
cmp
mov
inc
sbb
fisubs
loopne
and
imul
call
push
rclb
dec
push
pop
fimuls
sti
inc
jmp
push
push
jne
dec
adc
jle
dec
xor
push
inc
cli
addb
daa
push
je
push
fs
in
pop
movsd
mov
mov
mov
fwait
movsb
lret
faddl
xor
jp
repnz
jle
cmp
lods
add
push
popf
xchg
js
int
inc
push
add
jns
or
mov
std
nop
jle
sti
das
daa
outsb
imul
lods
movsb
loop
scas
add
pop
pop
push
std
inc
mov
daa
mov
mov
push
mov
repnz
cmp
call
filds
xchg
push
daa
insb
imul
ss
xor
push
sub
lds
pop
ljmp
loope
cli
xor
aad
jne
lret
mov
mov
cwtl
imul
scas
sbb
out
inc
arpl
cmc
mov
ret
or
addr16
out
xchg
ret
pop
pop
fbld
sub
xor
fsubl
mov
lods
imul
fcomp
scas
cmpsl
sbb
sub
sbb
jnp
xchg
ret
divps
cltd
sti
jecxz
xchg
mov
aam
cmp
outsl
mov
jl
jnp
hlt
adc
push
mov
leave
sbb
mov
add
sahf
mov
mov
in
and
mov
jo
mov
leave
stos
out
jecxz
push
or
mov
rcrl
and
je
outsl
hlt
mov
jbe
dec
mov
fdivrl
lock
hlt
fmulp
sarl
mov
push
add
fsubp
repz
pushf
sub
cmc
push
mov
mov
and
jecxz
mov
sbb
push
inc
cmp
jge
jb
ja
scas
sbbl
mov
in
dec
in
lcall
cmp
testb
rcrb
sbb
stc
rcr
or
push
inc
mov
cmp
lods
add
xchg
push
or
and
push
inc
popa
push
xchg
jae
sbb
ds
imul
add
loopne
fsubl
inc
inc
ss
or
pop
into
scas
fstl
pushf
inc
mov
test
pop
rol
sahf
repz
xor
jb
ljmp
je
jg
ss
sar
xchg
mov
imul
and
cmp
rcrb
int3
mov
sbb
scas
or
cmp
add
push
cmc
je
jae
sbbl
xor
pushf
add
adc
fisubrs
and
mov
popa
int3
loop
or
popf
repz
cmpsl
insb
jne
ficomps
xchg
xor
cmp
adc
push
adc
fs
scas
mov
xchg
xorl
sbb
rcrb
cld
test
rolb
mov
pop
mov
cltd
hlt
scas
jnp
ja
and
push
ljmp
popa
xchg
sbb
mov
pop
shlb
mov
stc
sbb
outsl
mov
jno
jno
mov
sbb
fldt
xchg
test
inc
hlt
cmp
rorl
daa
inc
fldcw
call
fnstsw
lds
shll
add
cmp
xchg
or
cli
fxch
pop
xchg
es
sbb
xchg
push
dec
and
test
jl
cltd
push
jle
xchg
inc
jmp
negl
adc
mov
daa
push
adc
mov
inc
sub
fisttps
fadd
xor
jne
ljmp
xor
fnstenv
mov
mov
into
mov
jne
cld
jmp
or
xor
sub
leave
test
cmp
sti
hlt
mov
cmpsl
gs
test
imull
pop
fsts
mov
jnp
add
push
jle
sbb
fisttpll
sarl
and
outsl
call
xchg
adc
scas
or
inc
and
mov
bound
mov
mov
pusha
daa
mov
out
fiadds
dec
mov
jp
out
push
aas
xchg
xor
addr16
jno
hlt
loopne
pop
or
fwait
cltd
imul
test
xchg
test
cmp
sub
xor
imul
add
jmp
xchg
popf
sbb
xorb
mov
iret
ret
jle
mov
das
mov
data16
mov
ja
xlat
jno
xor
jge
inc
sbb
push
fmuls
rcll
ret
divb
mov
hlt
xchg
mov
dec
push
fldcw
sbb
push
mov
cmp
es
jns
idivb
mov
mov
sub
ror
jl
fstps
in
and
fwait
out
xor
lock
or
push
sbb
out
sahf
mov
mov
add
adc
or
arpl
loopne
pop
add
pop
enter
adc
pop
inc
inc
cmc
jbe
shlb
int
cmpsl
imul
dec
mov
repnz
add
arpl
dec
out
or
pusha
adc
loope
bound
cmc
lds
inc
jne
sub
inc
mov
fcompl
and
or
push
ss
insb
lds
mov
and
sub
xor
mov
lahf
mov
mov
daa
out
insl
inc
mov
dec
push
iret
dec
lods
xor
inc
adc
sbb
cmp
dec
fists
test
lods
dec
movsb
sti
aad
mov
or
aam
ds
lods
xchg
push
xchg
popa
xchg
out
adc
loop
cmp
outsb
cltd
stos
push
pop
mov
push
sub
adc
inc
xchg
dec
fwait
test
adc
cmp
js
inc
xchg
or
mov
pop
xchg
outsb
push
sbb
xor
sbb
adc
sbb
pop
leave
aad
inc
popf
in
add
sar
fdivrs
orb
cli
bound
adc
cmpsb
and
mov
xor
loopne
stc
lret
popf
push
inc
pop
js
ret
jge
xchg
ds
jmp
mov
iret
jae
call
xchg
test
out
or
gs
js
int
mov
and
xchg
lret
cmc
data16
push
pop
fdivs
adc
and
pop
xor
out
xor
stos
pop
pop
popf
pop
mov
aam
rclb
jl
adc
mov
mov
jg
aaa
aam
scas
push
fists
mov
add
dec
sbb
push
lods
out
rcl
and
xor
rcrb
stos
ljmp
cmpl
je
xchg
mov
inc
rorb
jae
mov
add
pushf
mov
stos
push
push
incl
dec
and
xor
arpl
cltd
push
cmp
push
ret
daa
push
lret
rclb
sub
and
pop
jg
fsubrl
jmp
and
cmp
mov
arpl
sbb
push
popa
xlat
ret
lahf
jbe
cmpsb
pop
daa
sbb
cli
outsl
loope
pop
jge
sub
int
mov
mov
adc
push
mov
mov
push
lds
lds
jle
das
mov
jb
fadd
xor
fnstcw
push
lret
inc
xchg
hlt
mov
or
jns
aas
adc
aas
cmc
inc
js
out
jne
inc
icebp
push
pop
rorl
mov
push
mov
mov
xorl
std
inc
gs
lcall
add
adc
and
enter
push
xchg
jge,pn
loop
js
and
add
push
cmc
jge
inc
jb
lcall
es
mov
and
cmp
test
arpl
push
xchg
pusha
xor
mov
mov
inc
mov
rol
filds
pop
xchg
lea
call
and
push
xchg
xchg
cmpl
mov
jb
adc
jg
or
cmpsl
inc
pushf
jecxz
push
imul
push
popa
push
xchg
add
in
fcomps
jp
rcrl
in
and
ljmp
adc
jecxz
popf
cmp
outsb
pop
les
negb
sbb
pop
jae
arpl
push
fidivl
pop
cmp
ds
les
or
test
push
or
or
xor
mov
fistpl
xor
or
leave
mov
in
mov
jae
popa
xchg
mov
std
std
sbb
hlt
in
mov
jge
pop
stc
or
adc
cmp
leave
jo
lea
imull
fnstenv
pusha
stos
ret
mov
dec
or
inc
mov
les
and
data16
and
ret
pop
lods
rol
or
adc
cmp
imul
xchg
clc
pop
fsubs
hlt
or
sbb
data16
testl
in
shrb
dec
testl
xchg
fidivl
lahf
xchg
nop
push
stc
rorl
out
test
clc
mov
jno
hlt
inc
push
loopne
scas
push
xlat
insl
notb
jl
mov
test
dec
cmp
and
lret
xchg
add
fld
xchg
nop
dec
outsl
add
enter
jbe
int3
cs
inc
push
imul
in
push
call
push
or
out
shrl
out
cmp
int3
in
jmp
data16
sub
mull
xchg
push
mov
loope
pop
rcl
sub
je
dec
adcl
test
in
ja
cmp
movsb
fimull
rcl
sbb
inc
adc
je
rcll
loope
jb
mov
cmp
popa
orb
dec
inc
inc
cli
jg
ret
lods
push
popa
xlat
jmp
ret
iret
jne
fwait
imul
push
icebp
add
xchg
inc
fildl
stos
lret
add
out
xchg
int
sti
pop
repnz
daa
pop
lahf
in
pop
inc
stos
dec
jae
cltd
dec
push
lahf
lds
xlat
out
push
xchg
iret
dec
lcall
repz
adc
bound
repnz
and
mov
sahf
pop
push
mov
fmuls
push
gs
out
cmp
sub
loop
sti
or
jb
push
iret
test
call
pushaw
cmpsl
dec
jne
and
mov
scas
jge
inc
lock
lret
pop
out
imul
adc
cld
nop
dec
loopne
fidivs
aad
test
fwait
aaa
add
cmp
aad
sbb
popf
adc
xchg
mov
daa
cli
jb
es
and
ret
ja
dec
adc
shll
ret
jb
inc
in
enter
or
out
dec
xlat
adc
inc
ja
mov
repz
push
xor
mov
sub
imul
outsl
xchg
ret
adc
out
push
fldt
add
cmp
test
xchg
fnstsw
gs
jnp
sub
bswap
pop
jo
adc
jne
mov
pop
and
dec
je
sti
push
in
orb
mov
and
xor
xchg
push
fucomip
dec
cmovnp
mov
movsl
pop
or
inc
imul
add
mov
push
xchg
sub
jno
adc
ss
mov
pop
jae
xchg
es
sbb
jo
imul
data16
add
adc
gs
dec
push
cltd
dec
inc
dec
adc
ljmp
add
xchg
inc
hlt
subl
imull
fstpl
cli
filds
lea
mov
mov
xchg
jae
dec
cmpsb
xor
out
jnp
mov
push
nop
inc
fists
mov
inc
pop
gs
repz
jbe
sti
out
cwtl
pop
pushf
shll
mov
xor
mov
inc
xor
stc
mov
mov
mov
jne
jmp
call
add
or
mov
mov
addr16
jp
mov
push
add
das
loopne
fildl
xor
mov
sub
lret
inc
cltd
out
addr16
push
fbld
icebp
or
push
jp
insl
jmp
push
jle
flds
insb
loop
xchg
mov
and
test
jmp
out
les
adc
into
and
sbb
xchg
fidivs
adc
aam
inc
pop
pop
inc
sub
mov
jbe
movsb
outsb
xor
arpl
call
cmc
int3
movsl
dec
and
pop
movsb
subb
mov
sbb
das
xorl
cmp
std
inc
cmp
mov
ret
faddl
and
ficoms
cmpb
pop
xchg
sub
fcmovne
into
xorl
stc
dec
pop
cs
stc
test
inc
adc
push
xchg
xor
add
and
lods
idivb
call
ret
push
sbb
in
mov
cmp
mov
mov
mov
add
xlat
loop
push
daa
sub
pop
orb
jge
xchg
jnp
push
adc
or
push
aam
jecxz
xchg
xchg
dec
std
pop
pop
popf
jl
mov
xchg
dec
adc
xor
jle
pop
arpl
sub
or
or
in
popf
icebp
xchg
and
aaa
xchg
inc
jl
inc
xor
or
lock
dec
or
xchg
pusha
cld
out
and
lock
mov
xor
subl
cmpsb
xor
movl
xchg
adc
lret
cmp
adc
or
fwait
sbb
jecxz
pop
and
flds
cmc
repnz
pmovmskb
mov
sub
daa
xor
stos
stos
push
mov
mov
lock
pop
xchg
out
gs
push
sub
push
xor
push
lock
cmp
int3
test
in
call
mov
add
and
xchg
xor
clc
mov
lods
or
hlt
mov
mov
sahf
xchg
mov
jl
stos
shrl
shlb
xchg
scas
aaa
std
push
mov
cli
je
jbe
adc
aaa
cltd
sub
in
jne
daa
mov
xlat
mov
xlat
leave
les
fldenv
xchg
xchg
sub
jge
out
movsb
rol
and
mov
mov
sbb
jbe
cmp
cmp
xor
or
and
cmp
aam
mov
jle
pop
int3
mov
push
in
adc
jns
mov
out
scas
std
in
iret
or
push
shrb
shl
test
sub
nop
xchg
or
and
xor
mov
sahf
pop
inc
lahf
jg
into
dec
inc
dec
jbe
jg
stc
fcmovu
mov
xor
loop
inc
jne
cmp
xchg
xchg
sbb
call
jge
push
sub
adc
sub
jo
dec
adc
movsb
add
addr16
push
cld
fcoml
sub
loopne
and
in
pop
out
pop
stc
ffree
jno
and
imul
xor
xchg
mov
ficoml
das
fsubs
ds
sub
push
xchg
addr16
outsb
das
sbb
pop
mov
es
testl
cmc
adc
ret
mov
idivl
loopne
and
adc
lret
mov
frstor
daa
mov
jmp
xchg
in
cs
jae
xor
addl
cmpsl
xchg
mov
cs
lea
popa
adc
pop
xchg
pop
cmp
fisubl
mov
mov
sub
dec
bound
mov
scas
daa
cmp
cwtl
outsb
mov
aaa
push
dec
fs
cltd
jns
xchg
sub
insl
xchg
or
inc
dec
mov
repnz
dec
sub
and
pop
pop
cwtl
jno
mov
ret
xorb
and
popa
loope
mov
mov
cli
mov
add
cmpl
pop
pop
aam
sbb
xor
ljmp
pop
dec
in
mov
hlt
mov
push
fmul
sbb
ja
stos
jbe
leave
icebp
repnz
jo
inc
je
mulps
lahf
out
xchg
xchg
fcoml
inc
mov
inc
xchg
push
rcrl
or
fsubs
inc
pop
and
jbe
mov
imul
pop
lea
add
sub
scas
lcall
add
pop
mov
sbb
pop
jp
push
add
mov
mov
sub
jle
or
mov
mov
pop
adcl
into
sbb
into
add
shr
movsb
jle
test
xchg
not
imul
outsb
int3
cmp
push
push
movsl
xor
testb
jge
jle
lods
enter
and
jae
orb
aad
mov
add
lea
stos
imull
lds
gs
rolb
inc
int3
sarl
stos
jnp
dec
cmp
sarl
cmpsl
cmpsb
lret
cmp
dec
sub
ja
sub
das
inc
cltd
adc
sbb
push
add
aad
int3
xlat
jg
fcmovbe
stos
adc
push
pop
mov
int
cmp
and
pop
sbb
adc
add
mov
and
adc
fistps
sub
lcall
fs
jb
sbbb
es
cmp
mov
mov
inc
jle
ret
iret
cmc
rcl
xlat
and
lds
lods
out
insb
sbb
jge
mov
outsb
pop
push
jl
inc
push
repz
pop
cli
test
xor
lds
fcoms
and
test
jns
inc
or
sub
lahf
jne
jnp
inc
dec
lods
les
outsl
icebp
sbb
mov
mov
cwtl
lcall
pop
jns
dec
mov
jb
pop
ror
inc
cli
push
or
cwtl
int
or
push
lock
push
mov
mov
lahf
and
cmp
sub
bound
add
cltd
xor
cmp
sbb
pop
add
adc
jb
mov
push
push
das
push
or
sbb
rorb
jle
jb
std
xchg
xchg
cltd
or
mov
cmp
pop
into
loope
in
inc
mov
cmp
lea
dec
mov
jle
in
fldt
repz
dec
rcr
rclb
add
pushf
add
movsb
rcl
sub
jge
ds
mov
mov
push
xchg
sub
lret
mov
inc
xor
ss
lods
insl
or
or
adc
sub
insb
fiaddl
mov
sbb
xlat
xor
in
lods
jbe
push
cmp
in
scas
cmc
dec
hlt
or
xchg
inc
lcall
pop
inc
pop
testb
repz
lods
jne
scas
subl
stos
dec
js
fstps
imul
pop
push
call
xor
cmp
stos
les
xor
pop
dec
fsubl
mov
mov
adc
test
sbb
or
cmp
mov
mov
mov
push
sbb
test
xor
add
xor
rcrl
test
loop
ds
rcll
shrb
jnp
mov
pop
inc
dec
lea
push
sbb
mov
jl
lock
xor
in
aaa
mov
ljmp
jmp
aaa
test
inc
jp
cli
fisubrl
daa
ljmp
sub
push
insb
adcb
test
jecxz
mov
push
cmp
aaa
mov
sbb
dec
push
dec
xor
push
ljmp
das
out
data16
idivb
hlt
int3
out
into
add
lret
jae
in
sar
push
mov
ret
rcrb
or
outsb
push
sub
orb
mov
ficoms
sbb
jo
in
imul
and
dec
mov
aam
out
in
outsb
pop
nop
push
data16
mov
mov
sti
loopne
mov
dec
fs
int3
mov
in
scas
or
out
jecxz
std
cltd
xor
inc
inc
add
lock
or
push
mov
test
in
jecxz
ljmp
subl
aam
adc
inc
lret
xchg
push
xadd
icebp
or
movsb
inc
adcb
mov
outsb
mov
mov
sbb
lods
dec
xor
jg
cmp
aas
jbe
inc
fmulp
test
mov
dec
std
lds
imul
dec
bound
xchg
mov
jmp
xor
mov
hlt
outsl
pop
jl
cwtl
push
leave
dec
pop
repz
nop
pop
lret
mov
in
mov
or
lods
xchg
push
sub
js
xchg
mov
scas
mov
adc
pop
or
int
or
call
mov
cmpsb
ds
or
add
sub
sub
lds
inc
rorl
sbb
mov
add
xchg
xchg
or
sbb
adc
fldcw
lcall
push
iret
dec
and
rcrb
xchg
mov
pop
mov
cmp
jmp
sbb
cli
dec
xlat
sbb
cli
xor
loop
inc
jnp
mov
pop
pop
push
scas
fiaddl
sub
bound
mov
test
ficoml
cmp
ljmp
enter
and
xchg
jg
das
inc
sarl
ljmp
fwait
cltd
data16
inc
cs
mov
push
pop
mov
cmp
test
xor
lahf
xlat
mov
nop
mov
or
aaa
xchg
jmp
sbb
and
cmp
sbb
mov
sbb
mov
std
imul
rclb
jg
dec
and
sbb
xchg
push
pcmpeqw
push
and
inc
and
push
mov
push
push
dec
adc
movsl
daa
jle
mov
inc
mov
xchg
and
out
jno
insb
mov
into
jae
cmp
mov
int3
push
insl
sbb
out
es
sub
add
xor
xor
sub
sbb
inc
dec
push
je
nop
xor
inc
mov
xchg
add
xchg
mov
notl
push
jnp
enter
add
add
popa
cmp
push
push
xchg
sbb
mov
jle
aas
and
sub
sbb
ret
xchg
pusha
int3
xchg
lods
xor
ds
mov
fidivl
pmaxsw
and
movsl
sbb
cwtl
dec
mov
shrd
fwait
dec
cmp
fstps
pop
repz
fs
movsl
int3
mov
jmp
jno
icebp
and
stos
mov
nop
lahf
sub
test
push
jnp
les
das
mov
in
nop
xchg
sub
leave
ret
sbb
jbe
stos
nop
fldt
aas
xchg
add
pop
push
inc
mov
mov
add
inc
enter
cltd
mov
xchg
xchg
pushf
jo
or
in
xor
mov
pop
cmp
xchg
shrl
xorl
sub
jno
inc
inc
pusha
and
adc
outsb
adc
dec
mov
xchg
push
jbe
in
jns
push
call
idivl
add
and
and
jns
jb
mov
adc
test
adc
inc
jg
stos
sahf
imul
sbb
mov
xor
xorl
stos
fcompl
loopne
cmp
fldenv
jg
or
push
ljmp
arpl
jecxz
mov
xor
mov
imul
cld
pop
mov
push
adcl
adc
nop
arpl
xchg
add
mov
mov
xchg
ljmp
scas
push
sub
ja
sbb
scas
add
out
fimuls
jmp
data16
add
add
push
out
fs
add
outsl
adc
ss
mov
mov
cmp
lock
xchg
pop
xchg
fmull
in
add
sbb
push
mul
sbb
add
mov
popf
jmp
mov
push
push
and
mov
xchg
lds
cltd
or
push
xchg
adc
out
xchg
push
cmp
lcall
sbb
cmp
push
imul
xchg
popa
dec
push
mov
cmpl
mov
std
lea
idivb
popf
xor
aas
cli
lods
cmp
pop
popf
je
in
or
xchg
push
and
enter
xchg
int3
loop
inc
popa
dec
repnz
and
lods
cmp
xchg
adc
cmpsb
leave
das
loope
data16
xchg
sahf
movsb
iret
int3
and
out
jmp
xchg
jmp
jle
lods
mov
sbb
pop
imul
xor
or
pop
movsb
inc
jne
in
cwtl
sbbb
pop
mov
lods
cli
pop
sti
mov
arpl
sub
mov
movsb
add
push
cmp
out
add
dec
bound
adc
pop
into
andl
xor
out
rorl
lret
adc
push
je,pn
mov
clc
jmp
sub
ror
in
movb
pop
sub
stc
mov
dec
xchg
sub
mov
pop
call
into
das
xchg
fisubrl
jge
inc
fisttps
es
cli
adc
sub
dec
cld
test
dec
jge
test
mov
pop
movsb
mov
mov
mov
xor
add
test
and
ljmp
sub
mov
dec
jnp
insb
stos
outsb
push
mov
push
cmpsb
mov
cmp
icebp
in
aad
dec
outsl
jge
mov
cmp
into
jmp
lods
fsts
loopne
push
mov
xchg
lock
test
stc
mov
mov
cmpl
je
lea
orb
pop
pusha
arpl
lea
aam
sbb
sub
mov
push
mov
jae
push
mov
daa
or
mov
das
or
mov
jl
jns
sbb
inc
std
and
stc
mov
add
sbb
mov
gs
icebp
mov
mov
add
call
cli
dec
inc
and
sbb
push
push
xchg
sbb
ret
mov
ljmp
call
push
ljmp
daa
or
dec
add
inc
jl
cmc
dec
cmp
sbb
test
xchg
adc
in
pop
out
fs
outsb
lea
mov
cli
sub
jecxz
es
mov
cmpsl
bound
daa
lds
dec
sarl
push
dec
pop
mov
jbe
dec
inc
adc
inc
xchg
adc
js
mov
pop
adc
jle
roll
adc
cmp
jmp
cmp
lods
in
in
add
adc
jno
outsl
xchg
adc
mov
pop
jecxz
jl
movsl
lods
jb
cwtl
jne
enter
mov
sbb
dec
sti
pop
stos
and
push
repnz
stc
clc
sub
dec
xchg
orl
push
and
mov
dec
sub
outsw
out
mov
adc
imul
mov
cmp
adc
jp
imull
scas
out
or
cli
fidivrl
dec
pop
cltd
fdivp
or
ljmp
lds
sbb
insl
pop
push
add
imul
mulb
mov
inc
arpl
mov
jno
rorl
push
sub
mov
add
dec
and
xor
roll
adc
mov
sub
inc
data16
pushf
push
movsl
lods
movsb
fnsave
mov
inc
fldenv
mov
pop
shrb
icebp
dec
jecxz
aad
mov
lahf
xor
cmpb
lods
dec
sbb
stos
or
pop
test
dec
fnstsw
in
mov
cli
push
sub
fwait
in
test
or
mov
fs
int
outsl
mov
inc
leave
enter
dec
das
cwtl
ljmp
inc
hlt
or
xchg
add
inc
inc
sub
stc
clc
jb
int
mov
fnsave
adcb
shr
mov
xchg
aad
and
mov
movsb
adc
mov
sbb
ja
scas
cmp
cmp
movsl
outsb
jge
jmp
sub
movsb
scas
loope
jg
sub
sbb
add
daa
fdiv
lds
inc
sub
mov
ja
loope
jno
pusha
inc
add
in
pop
pop
icebp
es
in
inc
xor
int3
cmp
adc
jmp
arpl
push
adc
fistpll
cs
fs
shll
sbb
call
stc
mov
cltd
int
jle
clc
fmuls
jmp
jae
xor
lea
add
mov
int3
adc
or
es
push
dec
rolb
dec
xchg
daa
xchg
fstps
ret
jecxz
fdivrp
iret
subb
push
lldt
push
loope
xchg
lods
lods
jmp
or
jecxz
lret
add
imul
movsb
xor
jg
popf
testl
jle
cmpsb
mov
sbb
icebp
push
sub
daa
jp
mov
inc
fnstcw
daa
xlat
push
js
xor
xchg
loop
ret
inc
xchg
les
sti
and
sbb
bound
and
and
popf
xchg
cmp
push
sbb
inc
adc
jmp
or
pop
pop
inc
push
call
push
cld
xor
dec
mov
jns
jg
repz
dec
or
ds
mov
test
ljmp
inc
cs
outsl
push
push
mov
into
mov
leave
pop
sti
int3
and
inc
std
xchg
fisttps
out
pushf
jl
pop
sub
cmpsl
cmp
data16
stos
sub
in
mov
cmp
and
pop
scas
and
jp
lods
test
sbb
sub
mov
mov
dec
and
rcl
pop
or
mov
out
add
or
mov
std
popl
aam
insl
adc
lcall
push
leave
call
ftst
inc
pop
inc
ljmp
lock
or
lcall
clc
out
movsb
loop
sub
add
xchg
mov
adc
ret
pop
sar
push
cwtl
or
push
pushf
jle
in
mov
xchg
xchg
and
sti
cmp
inc
sub
gs
std
dec
mov
push
jno
fwait
out
clc
cmc
jecxz
push
mov
out
or
or
test
and
cltd
sub
iret
push
repz
cld
mov
xchg
pop
out
shrb
fisubs
adc
inc
sbb
xchg
jle
enter
movsl
orb
inc
sub
mov
mov
sbb
dec
xor
sub
cmp
push
push
jns
sbb
int3
mov
add
inc
mov
addr16
xor
inc
mov
pop
daa
adc
mov
outsb
shlb
sub
dec
lds
add
xchg
cmp
mov
inc
xor
fisubrs
jne
and
mov
add
mov
mov
js
ret
js
and
lahf
push
shl
sub
pop
jg
mov
andb
and
pushf
pop
adc
add
jmp
and
xor
lret
ljmp
adc
imull
adc
push
test
call
fadd
sub
aas
jo
cmp
jle
push
mov
cmp
stc
cmpsb
fisttpll
int
or
outsb
adc
xchg
aas
jb
test
cmp
ds
lret
mov
je
mov
mov
ljmpw
mov
rclb
jg
test
les
int3
jmp
std
mov
mov
sbb
inc
pusha
mov
pop
aaa
jg
dec
push
mov
out
add
es
dec
inc
push
xchg
sbb
adc
not
mov
dec
dec
adc
jg
jbe
movsl
push
fiadds
sub
cmp
or
iret
cmp
incl
ret
mov
mov
push
pop
push
test
mov
mov
jne
push
jo
jae
jle
jne
cli
jnp
xor
and
inc
lods
add
jp
aam
ret
sub
xchg
or
mov
pop
cmpsb
out
pop
add
inc
mov
fimuls
std
sar
outsb
mov
mov
pop
dec
xchg
adc
call
pop
in
sti
jmp
popa
jns
xor
cmpsl
js
or
int
dec
push
inc
ret
leave
loop
xlat
mov
inc
mov
mov
xor
rolb
lods
push
pop
adc
and
jecxz
mov
or
out
dec
cmc
cmp
add
call
add
push
mov
outsb
mov
mov
mov
shll
loopne
out
lods
xchg
outsl
shll
add
in
pushf
xchg
mov
dec
inc
jp
in
les
inc
out
test
cltd
and
xor
aaa
cltd
rol
ljmp
pop
int3
push
dec
xchg
and
out
push
sub
cltd
rcrb
add
cmp
inc
dec
popf
ja
push
into
in
sahf
add
mov
pop
cmp
push
into
stos
jns
fwait
pop
dec
ret
mull
cmp
scas
inc
sub
cmc
add
and
fcoml
cmpsb
cmpsb
push
mov
dec
icebp
adc
add
fsubrl
cmp
cwtl
es
cmp
scas
cli
notb
inc
lds
xchg
daa
inc
jb
mov
divb
xchg
mov
iret
rcrl
push
je
jb
mov
jg
inc
ret
xor
push
popa
mov
cmp
loop
jecxz
jp
testl
fsubrl
int3
xchg
inc
fdivp
jo
rclb
mov
sarl
dec
adc
sub
aam
mov
pop
test
jns
out
mov
mov
dec
mov
sbbb
mov
addr16
scas
out
dec
pop
mov
push
into
push
xor
sub
into
repz
aam
push
mov
mov
fcom
add
cmp
xlat
jnp
sub
push
iret
sub
sahf
lds
daa
daa
push
and
mov
push
jns
push
sbb
add
jp
and
std
push
lods
jle
loope
hlt
cltd
test
fnsave
cltd
cmpb
pop
addr16
adc
in
or
jecxz
test
daa
pop
pop
jns,pn
cmp
push
fldl
std
adc
mov
rorb
bound
mov
mov
ret
sub
xchg
loope
pushf
and
mov
movsl
push
xchg
icebp
ja
xor
aaa
jne
inc
es
xlat
inc
and
enter
sbb
pop
scas
jecxz
lcall
jge
out
rol
jecxz
push
dec
dec
jne
daa
xor
and
ja
xchg
or
or
ljmp
push
xchg
rolb
and
dec
mov
insl
sahf
scas
cmpsl
sbb
pop
leave
cmp
jns
in
ficoml
cmpsb
hlt
cli
daa
mov
mov
mov
pop
in
mov
inc
mov
pop
inc
aaa
push
jmp
movsl
pusha
mov
stc
cmp
rcll
outsb
into
push
insb
xor
dec
sub
das
std
mov
sub
lahf
std
and
out
sub
xchg
xor
ss
xor
or
ljmp
cmp
stc
nop
cmp
sub
adc
or
mov
mov
or
ficoms
dec
cld
add
imul
in
sbbl
add
push
fnstsw
outsb
mov
arpl
adc
mov
out
cmp
out
add
push
bound
sub
xchg
add
add
sahf
test
cmp
cli
ficoml
and
xor
stos
pop
subl
cmp
inc
xlat
cmp
repnz
sbbl
xchg
cmpsl
jnp
mov
aaa
mov
dec
outsl
in
sub
loopne
test
mov
stc
data16
pop
or
dec
stos
call
dec
mov
shrl
dec
mov
mov
mov
cwtl
in
sarl
push
idiv
sarl
pushf
lret
lods
stos
jmp
mov
cmp
dec
inc
mov
stc
movsb
jle
std
or
int3
xchg
dec
xchg
jo
inc
mov
lods
leave
mov
sub
call
lds
jne
cmp
or
or
mov
sub
addr16
jge
int
loopne
imul
cmp
sbb
sahf
mov
lret
rorb
das
sbbb
mov
out
in
and
push
push
into
mov
popa
xchg
ja
cs
mov
lret
mov
push
test
pop
xor
sub
les
push
sub
pop
aad
fwait
pop
int
cld
insb
lahf
push
adc
cmpl
jno
out
cmp
out
into
sub
sub
sbbl
pop
jae
aaa
add
cs
lods
push
inc
in
cld
int3
fnstenv
bound
lahf
mov
ret
sub
add
leave
mov
and
xchg
xor
mov
add
pop
pop
mov
push
push
xchg
jle
dec
icebp
call
sahf
mov
add
jmp
cwtl
insl
lods
movsb
mov
mov
mov
lcall
push
jno
js
push
insl
fadd
mov
jbe
adc
ret
mov
mov
inc
sbb
and
sbb
inc
pop
out
push
fnstsw
pusha
jle
les
hlt
sbb
dec
xchg
fnsave
jb
cmp
pop
arpl
in
cwtl
mov
and
lret
push
or
mov
divl
cwtl
fbld
iret
fcomps
ljmp
jae
sbb
jno
out
js
rolb
cmp
jg
test
out
add
add
fcoml
xor
jnp
pop
jecxz
push
sub
repnz
xchg
inc
cmp
mov
imulb
sub
push
andl
xchg
fmuls
jmp
sub
testl
inc
mov
shrl
dec
sub
cs
cmpsl
inc
sbb
jle
jge
xchg
push
je
cmp
adc
fwait
stos
add
test
enter
adc
adc
cmp
imul
call
lds
push
and
cmp
sub
mov
pushf
addr16
inc
mov
inc
movsl
mov
sti
push
test
fs
inc
push
in
sub
mov
mov
and
ret
inc
push
sti
mov
sub
out
data16
mov
dec
mov
leave
xor
dec
ljmp
and
filds
jbe
jecxz
insb
shlb
in
mov
adc
hlt
nop
mov
shrb
or
rcrb
in
push
xchg
movsl
cmpsl
std
mov
inc
dec
data16
hlt
ss
dec
adc
out
xchg
mov
cmp
mov
or
insb
clc
xchg
fmulp
stos
add
mov
sub
outsb
inc
add
das
push
pusha
and
xchg
push
pop
sub
movsl
dec
fimuls
inc
adc
jbe
lds
dec
push
push
hlt
lret
aas
xlat
jae
adc
mov
sbb
imul
fcompp
sbb
pusha
xchg
mov
mov
pushf
mov
dec
mov
mov
xchg
mov
fwait
bound
mov
test
stc
insl
rolb
sub
aas
adcl
movsl
in
pop
dec
fsubrl
mov
jne
out
out
insb
fstpl
fsubr
addr16
loop
aas
jge
neg
stos
out
imul
add
xor
stc
in
adc
mov
mov
and
imul
dec
stos
lock
data16
aas
pop
dec
sbb
dec
sub
pop
neg
jle
pusha
lods
xor
aaa
xchg
out
in
mov
pop
pop
arpl
fwait
and
xchg
pop
cli
push
stos
mov
cmc
adc
or
mov
mov
in
sub
sub
cwtl
std
lahf
popa
adc
shll
lock
push
pop
xchg
jbe
lahf
sbb
cmp
pop
or
jecxz
ja
movsl
icebp
test
bound
mov
dec
add
hlt
xchg
push
xchg
aam
xor
sub
jp
mov
cmpsb
sbb
repz
jnp,pn
into
push
test
mov
cmc
leave
outsb
jp
pop
fistpl
loopne
xor
inc
pop
fsub
bound
fwait
adc
mov
push
aad
pop
lock
lahf
jne
cmp
loopne
add
or
sub
xor
fucomp
or
or
push
jbe
mov
push
arpl
outsb
adc
and
sbb
ds
rolb
sti
sub
mov
mov
mov
add
in
mov
push
outsb
adcb
mov
xorl
sahf
mov
or
lahf
pop
or
orl
sbb
test
push
sub
mov
add
xchg
mov
or
imull
insl
sub
stos
lcall
mov
hlt
movsl
or
xchg
dec
popf
push
movsb
subb
lret
scas
inc
pop
loope
loopne
icebp
push
dec
xlat
shrb
xchg
je
test
aam
cs
sbb
cwtl
dec
jb
push
fildl
add
add
int
cmp
imul
in
inc
shll
add
ljmp
push
loope
push
lret
loop
add
push
or
or
imul
and
pop
cmc
pop
sub
mov
imul
sub
xchg
pop
xchg
dec
or
cmp
in
dec
incb
loop
xor
and
pusha
and
xor
xlat
adc
xor
mov
push
int
dec
rolb
cmp
mov
mov
xor
xchg
loope
rclb
clc
dec
xor
mov
mov
and
iret
lods
xor
adc
addr16
inc
cmpsl
add
ret
mov
pop
dec
imul
pop
inc
call
subl
push
or
sahf
xchg
cltd
ds
inc
aas
add
inc
xlat
pop
in
and
add
adc
xchg
ljmp
dec
jl
inc
aas
or
lcall
sub
les
std
mov
mov
in
adc
fiaddl
aam
push
mov
push
push
into
cltd
icebp
cmp
dec
sub
mov
je
lret
pop
std
mov
cld
lock
cli
lahf
pop
xchg
jmp
idivb
and
negb
aam
jle
mov
xchg
mov
sub
xor
sbb
lock
adc
cmp
push
pop
fdivrs
icebp
imul
jno
xor
inc
inc
ret
cmpsb
dec
in
push
push
cld
call
lret
ja
mov
int
xchg
and
into
xorl
add
js
push
ret
dec
mov
gs
fcoml
into
js
and
int3
and
add
pextrw
xchg
loop
cld
mov
cmp
push
pop
or
fs
sbb
lcall
sbb
into
dec
insb
and
xor
inc
pushl
mov
sbb
jne
push
mov
daa
cmp
cmp
rorb
mov
ficoml
cmpsl
divl
mov
inc
adc
jo
cwtl
cmp
and
arpl
jne
data16
mov
outsl
call
popf
cwtl
or
push
js
icebp
negb
fidivs
mov
dec
in
sub
lahf
mov
divb
cs
or
cld
pop
pop
mov
jae
jns
pop
pusha
sahf
ficoml
aaa
push
add
clc
mov
test
push
cmp
xchg
sbb
xchg
sahf
mov
adc
inc
movsb
push
aas
jno
xchg
movsb
mulb
std
cmp
sub
and
bound
mov
js
test
iret
lods
les
xchg
icebp
or
mov
and
cli
pop
cltd
outsb
xchg
sbb
imulb
mov
xrelease
sbbb
imul
adc
int
jmp
outsb
mov
push
mov
cmp
data16
outsl
adc
dec
or
mov
sbb
mov
mov
mov
aam
and
fst
jg
mov
int3
arpl
sub
inc
and
xchg
mov
cmpsb
es
push
ret
sbb
jecxz
sub
enter
repz
loopne
aas
or
pop
and
and
sub
pop
popa
xchg
adc
push
lcall
jnp
mov
dec
enter
push
inc
xor
jnp
mov
dec
aad
test
adc
out
ds
cli
mov
scas
lret
sub
outsb
insl
sbbl
das
scas
jmp
push
je
in
dec
jno
fisttps
push
out
rolb
ss
je
out
inc
stos
test
cmp
xchg
outsb
jg
xlat
jns
rcll
or
or
jge
outsl
icebp
aaa
adc
or
jmp
or
int
sbb
mov
sub
mov
xchg
pop
js
pop
pop
push
jle
negl
inc
fstpt
mov
adc
pop
leave
xchg
dec
enter
push
or
and
addl
out
xor
jae
or
inc
in
rcr
in
pusha
incl
aas
inc
mov
out
clc
sub
shl
addps
adc
cmpb
arpl
fdiv
addr16
loop
mov
sub
imul
loopne
enter
or
scas
xchg
in
test
jae
aaa
inc
lods
repz
repnz
lods
push
and
js
jnp
push
push
inc
xor
ja
push
adc
test
pop
push
leave
pop
jne
mov
pop
and
adc
das
mov
sti
push
jmp
xchg
cmp
add
out
rclb
jne
repz
ljmp
push
inc
out
loop
pop
pop
inc
xchg
inc
insl
jbe
xchg
lds
mov
inc
stos
imul
jmp
je
int
push
push
add
clc
lea
lret
lret
xchg
shlb
roll
aad
mov
push
rcl
push
cltd
lds
cwtl
push
fisubrl
gs
push
lcall
add
cli
inc
mov
mul
mov
sti
imul
and
test
cmpl
les
lods
daa
mov
mov
xchg
pop
int
adc
shlb
inc
popf
xor
testl
mov
mov
movsb
sbb
xchg
xor
jmp
sahf
popl
mov
pop
mov
sarl
xor
aaa
mov
int3
inc
fcmovnu
cltd
cmpsb
ret
out
mov
xchg
in
adc
cltd
inc
push
aad
aam
and
or
sub
cmpb
push
pop
jl
mov
jmp
jl
cmp
or
outsb
sbbl
rolb
roll
movsb
push
xchg
cmp
pop
iret
into
sub
xor
mov
in
les
cld
xlat
sar
scas
repnz
test
adc
scas
xor
mov
ljmp
test
lret
pop
and
push
cmp
push
mov
repnz
les
cmpsl
cmc
js
movsl
fsubl
cld
pushf
push
push
pop
aaa
les
into
dec
shll
jns
sbb
adc
sub
jbe
incl
out
fwait
inc
adc
dec
repnz
mov
cld
pop
insb
push
jns
rcll
call
ret
fsubs
or
xchg
adc
loope
loope
pop
daa
push
push
fisttps
addr16
mov
lcall
mov
movsl
mov
cltd
adc
or
sub
pop
fisubs
pushf
insl
fisubrs
xor
inc
test
fstps
xchg
and
push
xchg
adc
sbb
xchg
jmp
push
sub
hlt
inc
cli
or
int
loop
adc
enter
or
xor
lret
mov
sbb
or
pop
dec
dec
inc
xor
adc
stc
stos
ret
sbb
es
les
aam
cli
lcall
mov
fwait
adc
xchg
insl
pop
mov
out
ror
mov
int
mov
pop
ret
sahf
enter
jno
test
jae
hlt
pop
add
test
je
xchg
or
sub
imul
jp
ret
jnp
sahf
movsb
test
jb
and
ds
outsl
jg
mov
in
outsb
xchg
lret
and
imul
or
mov
pop
popl
das
arpl
popf
scas
jne
pop
in
ljmp
pop
int
movsl
mov
pop
pop
adc
mov
push
aaa
loope
push
hlt
cwtl
popa
popf
push
flds
lcall
sahf
out
xchg
pop
mov
in
ret
repnz
mov
outsl
sub
and
jecxz
ret
notl
addl
xor
jns
mov
movsb
cwtl
fstpt
pop
pop
cltd
sub
and
inc
pop
xchg
mov
movsl
jecxz
pop
scas
pop
xlat
xchg
sub
add
push
es
rcll
in
jmp
or
repnz
pop
pop
or
jg
fnsave
adc
mov
out
push
scas
or
and
push
std
ss
aad
sub
repnz
sbb
popa
lcall
ss
mov
nop
out
push
sub
and
sub
cmpsb
outsl
arpl
push
cmpsb
data16
out
jns
adc
std
sub
std
outsl
cmpsl
mov
inc
cs
push
clc
shrb
push
xor
std
aas
dec
mov
mov
insb
or
je
aam
loopne
cmp
das
ret
xchg
cmp
pop
bound
test
fmull
adc
push
adc
ja
mov
sub
or
cli
push
std
push
jge
loopne
mov
cmp
mov
xor
arpl
jbe
loope
imul
lods
in
add
imul
in
push
fcomps
push
sahf
and
decb
mov
leave
mov
push
mov
je
sbb
sub
and
decb
inc
cli
add
mov
mov
cmpsl
push
pop
add
sub
aam
jne
repz
pop
idivl
arpl
mov
loopne
jmp
sarb
dec
fldcw
mov
mov
xchg
push
sub
mov
sbb
xchg
mov
add
in
sbb
pushf
sbbl
sbb
inc
dec
lods
jae
mov
and
sbb
inc
ret
addb
popa
jo
fdivrp
inc
cmp
mov
ret
rclb
jns
addl
inc
push
comiss
lods
lret
aaa
adc
jae
out
xor
cs
call
cld
jge
xchg
popf
pop
fistps
mov
inc
out
int
pop
loope
into
jae
xchg
jecxz
lea
test
push
mov
outsl
fucomi
or
pusha
mov
add
faddl
xchg
push
mulb
mov
mov
add
shlb
es
out
int
mov
pop
outsl
cmp
pop
outsb
ss
movsl
cli
and
jp
jns
loope
out
jmp
jl
and
jle
pushl
fwait
loop
mov
fistpll
fisttps
mov
or
push
xorb
ficoms
les
lock
dec
int3
inc
inc
in
or
outsl
jg
pmaxub
push
jbe
dec
iret
xorl
mov
movsb
repnz
bound
int3
sbb
xor
ljmp
pop
xor
lret
jmp
pushl
lds
cmpb
ja
inc
adc
lea
mov
icebp
ja
mov
adc
fwait
or
lds
stos
int
push
mov
mov
aaa
addl
imul
dec
cmp
fdivp
out
fsts
in
rclb
jge
push
imul
movsl
and
mov
sub
shl
jns
lret
ficompl
scas
pop
leave
enter
push
adc
lret
pop
cmpsb
out
out
xchg
adc
imul
mov
sub
subl
mov
push
testl
fdivs
mov
jge
jb
popa
pop
in
out
int3
aad
leave
notb
pop
push
dec
fimuls
add
and
mov
sbb
icebp
jne
movsl
xchg
jb
and
inc
push
xlat
inc
popa
mov
jnp
popf
je
int3
jmp
push
add
gs
daa
xor
imul
movsb
add
dec
negb
int3
int
pop
jns
mov
xchg
lahf
into
or
scas
add
mov
jne
dec
dec
scas
or
loope
pop
xchg
icebp
test
dec
enter
aad
pop
test
sub
sbb
push
je
sbb
pop
stc
jle
rolb
pusha
mov
sub
pop
pop
sarl
dec
testb
or
cltd
popa
popf
scas
and
pop
jbe
cmp
in
sub
jno
dec
or
gs
mov
frstor
sbb
scas
fsubr
jae
mov
out
popa
fsubrs
mov
movl
mov
fistl
les
fucomi
mov
scas
pop
fstp
add
ds
push
push
dec
out
ljmp
dec
in
sub
xor
int3
imul
cmc
lock
aad
push
sti
pop
les
iret
lahf
loopne
jmp
inc
loope
movsb
lcall
mov
and
push
dec
and
or
sub
push
mov
dec
jl
das
cmp
sub
jecxz
pop
jne
ja
mov
xor
andl
and
sbb
lea
lret
imul
loopne
ja
mov
test
loop
cs
dec
in
frstor
mov
je
sbb
jne
cmpsb
pop
jecxz,pn
push
popf
lea
add
add
jg
pop
arpl
repnz
int3
movsb
mov
and
ret
pop
adc
sbb
fmull
or
fmuls
test
push
fdivrs
sub
in
sub
imul
sbb
xchg
lcall
ret
dec
dec
add
cmc
ficompl
test
out
lret
aam
or
cs
sbb
das
hlt
movsb
cmpl
jno
or
mov
aam
mov
or
mov
loope
cmp
sbb
lods
lds
mov
and
sub
sub
pop
mov
add
push
fmull
lods
cmp
adc
mov
pop
jo
in
xlat
sarb
lret
lret
cmp
imulb
pushf
inc
sbb
js
cmpsb
icebp
and
nop
xor
add
or
sub
sti
notb
sbb
pop
sbb
fcoms
xor
stos
hlt
sub
mov
jl
xchg
ljmp
dec
jnp
insl
ljmp
lret
gs
jbe
imul
adc
xor
mov
incb
push
jg
sbb
cmp
jo
into
test
mov
jae
subb
js
int
push
adc
sbb
mov
loop
mov
xlat
adc
arpl
jns
clc
cli
and
mov
cld
loopne
js
repz
ljmp
ret
add
lods
popa
es
out
xor
push
pop
divl
jecxz
cmpsl
push
movsl
mov
add
fisubs
out
and
and
xchg
mov
or
and
scas
inc
push
xchg
xlat
lds
xor
cmc
cmc
push
inc
stos
inc
imul
mov
sarl
or
mov
ret
xchg
xchg
lods
std
hlt
cmc
add
add
and
ret
movsb
inc
dec
add
or
mov
int
outsl
pusha
and
mov
outsb
xor
mov
loope
or
jae
fsubrl
pop
push
repz
xchg
mov
push
jecxz
out
es
add
mov
xchg
sahf
xor
sub
and
loope
xor
ds
fcomi
pop
imul
shlb
or
mov
lods
pop
test
out
and
pop
jne
xor
fcoml
lret
dec
lods
ror
cmpl
aad
adc
inc
cmpsb
subb
lea
cmpsl
sbb
jp
lret
outsb
and
push
xor
push
inc
jo
sub
mov
mov
popf
xchg
roll
inc
leave
call
in
push
add
jbe
stos
lahf
insb
popf
sbb
add
fldt
insb
xlat
fbstp
cli
inc
stos
push
mov
jo
mov
sub
mov
bound
and
in
mov
lods
pop
xlat
push
jo
roll
mov
in
aaa
in
mov
in
mov
out
popa
lahf
int3
aad
scas
and
imul
sbb
sbb
pushf
cs
inc
dec
inc
dec
jmp
rcrl
loope
fsubs
mov
push
insb
sbb
incb
leave
fcomp
add
mov
fimuls
das
icebp
cmc
xor
pop
mov
imul
and
and
mov
push
inc
sbb
cmp
int3
sarl
xor
icebp
mull
mov
out
aam
or
outsl
jb
cmpsl
push
and
addr16
nop
mov
repnz
pusha
daa
sbbl
mov
inc
mov
iret
jle
sbb
xor
add
inc
pusha
xor
adc
pushf
mov
inc
mov
cmpsb
jb
push
sbb
in
std
imull
cmpsb
mov
mul
ja
std
xor
lods
stos
in
push
xchg
push
imul
jecxz
mov
add
imul
jno
xchg
inc
cmp
mov
fisubrl
add
add
xchg
jae
and
xor
subl
in
jnp
push
fimull
xchg
imull
mov
imul
jns
jne
mov
test
out
rcrl
jl
dec
mov
xorl
add
sbb
hlt
out
scas
push
jb
sbb
dec
lret
das
mov
pop
arpl
adc
ret
mov
xchg
push
add
inc
xor
jmp
test
neg
insl
jb
mov
imul
lods
mov
and
mov
inc
shll
mov
jp
ljmp
mov
cli
lock
inc
adc
pop
sbb
dec
arpl
push
sbb
ret
sarl
and
gs
sub
xchg
dec
and
jne
or
hlt
out
cld
add
out
dec
mov
and
push
cmp
cmp
jmp
fldenv
sahf
mov
aaa
out
call
ret
jne
in
add
cmp
iret
sub
fwait
mov
inc
dec
stc
jne
movsb
xchg
sub
stos
sub
add
add
ja
xchg
sub
std
pop
sbb
mov
adc
cld
jnp
xchg
push
js
cmp
adc
ror
dec
pop
sbb
cmpsb
clc
popa
mov
and
popf
jmp
enter
pop
lahf
in
inc
mov
xchg
icebp
sub
scas
push
mov
adc
lcall
xchg
dec
cs
add
dec
and
mov
add
stc
shll
dec
out
ret
mov
jnp
sti
mov
loopne
adc
xor
adc
push
orb
jns
fucomp
cmpl
int3
push
or
mov
xchg
mov
dec
cmp
aas
testl
je
into
mov
mov
add
jbe
jg
push
clc
rorl
inc
xor
je
push
sahf
test
or
popf
nop
pop
jne
stc
test
sub
xor
fwait
lds
je
lahf
out
adc
addr16
loop
in
pop
jns
ljmp
cltd
inc
sbb
fs
add
mov
mov
fists
mov
adc
push
repz
scas
daa
gs
fildll
xor
cld
cmp
es
mov
jno
sbb
xor
loop
mov
data16
in
and
lcall
scas
pop
xchg
fistps
loop
add
nop
dec
push
fs
adc
xor
daa
xor
sbbl
mov
and
pop
hlt
fs
shl
sti
cmp
loope
sub
mov
insl
pop
ss
and
inc
mov
aaa
dec
popa
xchg
mov
sub
jns
pushf
fs
xchg
ss
flds
movsl
aaa
xchg
out
inc
enter
xor
js
pop
ret
sbb
fbld
int3
push
orb
imul
lods
enter
in
adc
fs
pop
dec
fisttpll
mov
repnz
out
fists
cmpsb
test
or
adc
in
add
xchg
test
int
mov
inc
mov
mov
ljmp
pusha
pop
arpl
fs
or
mov
and
inc
dec
pop
jge
adc
jbe
adc
inc
mov
pop
or
push
or
mov
jno
imul
cmp
add
add
dec
add
rorb
jo
sbb
sub
sbb
or
es
sub
xchg
lcall
add
decb
aad
fdivr
lods
in
or
push
jge
outsb
mov
lds
or
and
adc
ss
test
adc
cmpsl
shlb
pop
adc
mov
jmp
leave
out
mov
ret
cmp
cmp
dec
sub
pop
aaa
icebp
cmp
cmpsb
cmp
add
xchg
push
js
jg
icebp
scas
into
jns
test
test
push
pop
stos
pop
lods
xchg
aad
out
inc
dec
in
fldcw
fcmove
mov
mov
jle
notl
jp
faddl
negb
pop
push
jecxz
inc
shlb
ja
insl
pmaddwd
xchg
mov
adc
sub
stos
mov
out
jle
dec
xlat
icebp
pushf
clc
addr16
test
mov
inc
pop
sub
sahf
ja
loopne
fsubl
push
jne
aaa
jg
lods
inc
add
mov
or
and
mov
dec
dec
mov
jp
es
mov
push
mov
xlat
cmp
jl
mov
and
mov
inc
xor
rcll
and
mov
dec
into
inc
out
push
mov
sbb
addr16
out
jno
fbstp
cwtl
out
fcoms
pop
idivl
mov
or
push
std
ret
pop
in
push
imul
daa
in
jg
adc
lods
sbb
in
dec
jge
lret
jg
int
mov
dec
out
mov
nop
cmovle
cmp
inc
sub
xchg
outsl
dec
inc
adcb
sub
mov
mov
das
es
mov
push
xor
push
lea
sti
ficoms
mov
fsubs
mov
arpl
cmp
insl
sbb
push
mulb
lret
dec
ja
stos
push
mov
cmc
dec
or
stc
ret
fisubrs
dec
push
out
adc
hlt
sahf
pop
ja
divb
ficoms
popaw
xor
cmp
pop
ljmp
pop
bound
xlat
aas
je
mov
add
adc
int
ljmp
ljmp
cmp
mov
dec
fwait
pop
add
adcb
leave
xor
testl
adc
lahf
iret
inc
xor
pusha
mov
xor
jg
cmp
jmp
mov
xchg
jl
and
push
fnsave
clc
fidivrs
ja
repnz
xor
mov
jecxz
mov
jl
popa
gs
bound
ja
xchg
mov
test
add
aas
adc
xchg
jo
decb
pop
roll
sub
inc
inc
bound
popa
lods
mov
pushf
and
xor
daa
add
cld
scas
add
push
push
loope
and
mov
adc
cmp
shll
lods
fisttpl
sti
outsb
pop
sahf
xchg
jg
ret
add
scas
cmp
mov
and
aad
push
mov
cmpsb
mov
scas
jp
add
jnp
jne
aam
jo
sub
rorl
jnp
in
icebp
or
repnz
lcall
dec
jno
and
pop
sub
loop
xchg
cmp
push
adc
lea
ret
ret
scas
mov
and
xor
stc
mov
rcrl
xor
push
sarb
xchg
icebp
popf
jp
dec
filds
sbb
lahf
fcoms
add
sub
jg
push
pop
add
mov
movsl
fcompl
popa
jns
pop
fcompl
mov
mov
dec
jl
xchg
es
lcall
and
mov
lds
jo
push
inc
add
in
mov
push
pop
add
outsb
movsb
adc
movl
add
adc
xlat
adc
popa
shrb
outsb
cmp
mov
jmp
imul
popa
cmovae
sub
adc
hlt
rorb
fsts
mov
pop
and
add
sbb
or
fxtract
inc
mov
fwait
sub
mov
or
pop
jae
shl
sbbl
jns
and
inc
iret
cmpl
cmpsb
loopne
xor
test
mov
jnp
add
xor
lret
into
push
xchg
pushf
push
cmc
mov
lods
es
decb
and
fdivs
cs
dec
mov
sub
out
cltd
addl
lret
and
mov
or
ss
jbe
mov
pop
mov
mov
stos
imul
hlt
xchg
adc
inc
mov
pop
sti
clc
imul
mov
push
lods
pop
dec
mov
push
jl
out
mov
xchg
aad
or
lea
aad
ljmp
pop
jp
clc
inc
in
and
cmp
adc
xlat
lea
je
and
cmp
aam
outsl
jbe
jmp
sub
decl
mov
jns
and
cmp
in
aad
cmpsb
bound
mov
sbb
mov
adcb
out
sar
pop
lods
xor
mov
sub
or
add
push
test
pop
clc
jg
mov
into
xor
add
xchg
testl
add
daa
lret
jl
push
push
popa
cmp
stos
lds
lea
pop
orb
in
out
out
or
cmp
lret
js
aaa
dec
jne
ljmp
ret
mov
jmp
cmpsl
or
cltd
scas
dec
xchg
jp
inc
rcrb
sub
lret
xor
rorl
jb
and
cmp
data16
loop
repz
out
push
push
jbe
or
lds
in
pop
or
and
int
insb
mov
mov
shlb
add
subb
mov
lcall
stos
adc
fsubl
aad
clc
testl
movsb
sahf
xor
add
ljmp
sahf
xor
jge
scas
sti
sub
xchg
das
dec
pusha
fsubrl
hlt
ret
out
push
jne
iret
inc
xorl
movsl
sub
add
cs
outsb
cmp
cwtl
shll
fadd
cmp
ljmp
insl
testl
cltd
cwtl
scas
xor
call
jg
hlt
cmp
fs
rorb
mov
aas
push
xchg
xor
sbb
mov
mov
dec
push
in
xchg
pushf
mov
notl
mov
icebp
dec
jl
push
shrb
fsubp
pop
andb
pop
sub
push
xor
push
fmull
mov
adc
lret
fsubrl
scas
or
and
js
in
pusha
andl
shrl
arpl
sti
mulb
out
xorb
in
dec
add
dec
outsb
cmp
pop
push
ret
xor
fdivrs
jo
adc
pop
mov
adc
gs
cmp
xchg
pop
mov
popa
cwtl
push
inc
xor
in
mov
sbb
push
pop
out
add
or
aad
push
mov
xchg
mov
mov
dec
orl
sub
add
push
sahf
xchg
ret
add
sbb
fcoml
dec
xchg
ja
clc
adc
jo
pop
ret
jo
add
loopne
jecxz
scas
xor
dec
add
ret
adc
pop
push
or
and
sub
mov
js
add
sbb
or
cmp
add
insl
mov
int
loop
stos
push
mov
lds
sbb
pop
xchg
inc
cmp
pop
inc
pop
scas
test
fisttpl
add
mov
test
xor
ret
faddl
push
pop
mov
jb
push
fsubs
inc
cmp
lds
adc
jmp
ja
fldl
jg
ror
test
jb
or
lods
pop
jne
in
js
push
in
xor
popf
pop
jl
jge
adc
sarb
ficomps
fidivs
stc
jno
ljmp
push
lods
mov
or
pcmpgtw
in
xchg
sub
fwait
push
imul
push
pusha
repnz
call
das
stos
push
lods
jb
pop
pusha
and
repnz
loop
shl
pop
jle
rcrb
mov
leave
or
jecxz
push
fistpll
dec
fcomip
lea
out
sti
fsubl
sub
push
xchg
scas
mov
orb
jle
ret
mov
jge
push
rcrb
dec
test
int3
clc
das
mov
sbb
push
mov
push
ljmp
jecxz
inc
adc
sub
ret
fdivl
repnz
in
push
popf
inc
jl
push
inc
pop
insl
xchg
filds
push
push
sbb
push
sub
cmp
mov
fcmovu
dec
or
mov
mov
cmpsl
iret
xchg
pop
movsl
pop
sub
cmp
rcrb
xor
push
xor
call
mov
adc
dec
mov
rcl
mov
js
arpl
imul
mov
push
push
xchg
mov
push
mov
in
adc
mov
push
orb
mov
dec
sub
ja
lahf
in
into
pop
loopne
inc
pop
js
rorl
dec
xchg
adc
mov
pop
xor
or
push
lock
shrb
dec
scas
or
test
and
xor
gs
das
inc
pop
gs
das
fists
lods
push
cmp
mov
or
in
data16
sbb
and
jmp
mov
rcrb
loopne
jnp
mov
stc
push
ret
int
arpl
imull
gs
jge
mov
and
mov
aad
xchg
inc
shlb
js
rorb
mov
inc
inc
push
imul
cmp
mov
jmp
test
clc
cltd
shlb
mov
loop
sub
mov
into
test
into
insb
scas
xchg
leave
push
xchg
mov
fldt
loope
nop
adc
aad
push
lock
xor
mov
loopne
xchg
push
push
sbb
mov
push
xor
outsb
mov
cld
int3
sti
repz
jp
aas
adc
cmc
cmp
stos
inc
insl
sbb
jp
loopne
hlt
mov
sub
sub
lock
iret
xlat
hlt
xchg
pop
ret
ds
add
aaa
decb
mov
dec
xchg
lcall
clc
outsl
cli
pop
mov
add
xchg
sub
rorb
popf
scas
cwtl
popf
jge
lcall
std
push
in
and
fcmovnbe
repnz
decl
push
inc
jp
lds
jle
sbb
inc
sub
shl
sub
fdivrl
mov
jns
lret
subb
jecxz
mov
xchg
mov
rcll
xor
pop
push
das
mov
mov
ss
leave
jbe
push
loopew
sarl
jnp
lahf
dec
pop
mov
nop
lock
add
fisttps
test
aad
or
mov
insb
data16
fbld
add
aad
push
test
add
je
pop
ja
stos
fs
and
movsl
outsb
and
insb
mov
push
imul
and
inc
xor
pop
xchg
repnz
adc
shr
jmp
jo
add
loopne
sti
mov
adc
lret
sbb
ja
cld
xor
fildl
leave
push
hlt
inc
jg
dec
push
jo
jbe
js
rclb
lcall
sub
and
add
nop
jecxz
xchg
and
gs
fdivrl
cltd
cwtl
xor
js
jo
stc
add
stos
inc
add
repnz
cmc
mov
testb
cmpsb
sbb
cwtl
arpl
les
push
ljmp
add
pop
roll
xchg
push
pushf
push
mov
and
cwtl
pop
sbb
stc
lods
cmp
and
cs
xlat
movsb
or
out
sbb
rcrl
sar
dec
mov
add
shrl
add
mov
sahf
adc
cmpsb
sub
adc
sub
push
test
dec
pop
add
int
mov
or
jno
jns
inc
mov
push
leave
push
addr16
aas
sub
dec
jg
push
sbb
xchg
ljmp
in
lcall
push
xor
ljmp
ret
cmp
sbb
imul
dec
cmp
mov
hlt
es
pop
bound
inc
xlat
pop
lcall
cs
dec
sbb
mov
add
sbb
sub
jne
xorb
pop
outsb
sub
lea
pop
dec
hlt
push
scas
xor
and
fiaddl
cmp
fcmovb
jne
lret
je
std
add
jno
add
test
gs
arpl
andb
mov
sbb
jbe
mov
add
push
sahf
xor
fwait
or
scas
mov
or
sbb
sahf
aam
aas
sarl
add
es
lea
call
repnz
aad
xchg
loope
mov
sbb
add
pop
add
push
and
lods
mov
aaa
inc
inc
in
push
imul
dec
push
dec
xchg
fld
jno
add
push
pop
adc
mov
lcall
roll
inc
fwait
cltd
test
aam
out
cmp
dec
divl
jne
imul
or
sarb
mov
lods
call
jge
aaa
xchg
in
xchg
or
pop
fwait
pushw
jnp
inc
or
jo
jbe
pop
xor
int3
add
fisttpll
mov
movsb
dec
xchg
subw
add
jae
jge
xchg
icebp
jbe
or
aas
fwait
add
inc
fwait
hlt
pop
jl
jl
into
stos
dec
sub
in
and
lods
iret
xor
sbb
fiadds
inc
aaa
sub
inc
fistl
mov
jp
mov
mov
stos
jns
cmp
cmp
insb
daa
stc
push
movsb
jg
and
xchg
fldl
cli
fcmovnb
fidivl
xchg
dec
out
mov
or
mov
enter
cmpsl
loopne
loop
sahf
jmp
inc
mov
dec
ds
scas
xor
gs
test
testb
cmpsb
sti
ja
mov
mov
mov
push
mov
lods
jb
jb
fcoms
ret
notb
or
out
xchg
shl
or
sub
xchg
lcall
cmp
cmpb
bnd
out
cmp
cmp
in
inc
lret
mov
jno
ret
inc
jecxz
xlat
loop
cwtl
movsl
mov
int3
xor
mov
sub
inc
jge
cltd
sti
jae
lods
in
fldl
addr16
sub
jno
in
movsb
push
mul
jg
sbb
imul
aam
mov
aaa
fsub
lret
and
mov
or
inc
mov
test
fstps
xchg
pop
inc
cmp
sub
push
jmp
pop
dec
pop
add
decl
addb
ja
cmp
stos
hlt
inc
cli
enter
xor
popa
sbb
jg
lret
fnsave
xor
pop
inc
dec
xor
adc
xor
cmp
cli
dec
pop
xor
pop
adc
shl
inc
into
xor
jmp
sub
mov
repz
dec
das
out
leave
cli
xlat
cmp
inc
xchg
xchg
into
add
enter
stos
fwait
insl
jo
push
mov
sub
pop
call
and
pop
sbb
push
and
arpl
movsb
call
inc
shld
mov
dec
jp
outsl
and
sbb
hlt
inc
lret
xorl
dec
pushf
out
std
pop
mov
mov
pop
divl
repz
dec
ret
sbb
jno
push
outsb
jbe
push
aam
push
pop
pushf
mov
sbb
cwtl
fldcw
or
xchg
jg
out
push
mov
loope
jp
mov
insb
call
ds
in
icebp
mov
or
ret
insb
mov
fcomps
leave
pop
fbstp
icebp
rorb
adc
jle
js
mov
repz
loop
fstps
and
pop
add
xchg
or
adc
stos
stc
mov
scas
pusha
jno
jmp
inc
in
nop
pusha
movsb
stos
pushf
push
hlt
bound
shr
lret
or
xchg
and
lahf
adc
in
out
mov
hlt
jmp
sti
jg
flds
add
pop
push
mov
sbb
cmpb
sti
testb
andb
push
inc
popa
fwait
pusha
arpl
sbb
add
loope
push
adc
test
add
negl
xlat
sub
jnp
pop
les
cld
pushf
push
outsb
cltd
dec
fstl
fldenv
sub
sub
push
clc
lods
jg
mov
jp
jl
pop
push
pop
cli
jmp
and
pop
pop
adc
cmp
mov
cmp
or
loopne
sarb
fcoms
aam
xchg
mov
fdivrs
jb
mov
jo
in
mov
or
lret
aas
cmc
cmp
xor
outsl
sub
fsubrs
insl
in
outsb
cmp
mov
divl
pop
pushf
pop
push
test
pushf
cltd
aas
and
lret
push
fidivs
lcall
fsubrs
dec
addl
dec
sub
mov
add
cmc
push
xchg
inc
shl
frstor
push
lock
mov
xchg
fbstp
push
adc
jle
stos
adc
sbb
lret
rcrl
into
xchg
jg
mov
or
cwtl
adc
push
mov
mov
add
or
xchg
cmp
je
xchg
or
mov
fs
mov
aam
jmp
fcmovb
out
xchg
mov
dec
push
fs
lahf
xor
loopne
imul
push
mov
testb
fnstenv
cmp
sub
filds
ja
std
adc
daa
cltd
jmp
lcall
pop
jle
mov
lock
or
mov
nopl
das
fdivp
nop
jl
aas
data16
cmp
fnsave
pop
mov
dec
icebp
cli
mov
mov
test
data16
aas
fucomi
and
iret
pop
cmpsl
and
lock
jg
mov
pop
inc
cmpsl
jns
aam
shlb
addr16
mov
xchg
lahf
cmp
iret
xor
adc
cmp
jnp
out
mov
xlat
mov
push
out
rclb
add
popa
andl
mov
test
jns
add
inc
lcall
add
xor
jbe
lods
or
pop
dec
int
roll
in
pop
sbb
arpl
out
std
test
pop
mov
lret
movsb
js
mov
out
or
fildl
movsb
push
and
push
cmc
loopne
cltd
xchg
insb
xchg
inc
or
sub
ret
push
xchg
cmp
jecxz
mov
sbb
stos
dec
stc
cmp
mov
mov
hlt
sahf
std
aam
push
lods
or
call
lea
mov
subb
push
ds
mov
lock
inc
mov
enter
loop
rorb
les
push
xchg
push
arpl
add
push
sub
fsubr
sub
clc
mov
pop
dec
pop
inc
data16
out
or
and
cmp
xchg
mov
adc
hlt
sbb
adc
shlb
rol
fwait
daa
sti
iret
enter
sarb
subl
test
inc
jns
lahf
aas
out
dec
add
adc
sub
mov
xchg
or
inc
nop
jne
sbb
nop
xchg
xchg
mov
jb,pn
sbb
adc
movsb
test
mov
cmp
jnp
les
cmpsl
pop
mov
fistps
xor
aad
xor
push
aas
cmp
mov
add
jae
cmp
dec
inc
xchg
test
leave
sub
aas
sbb
les
dec
cmp
sbb
jp
inc
pushf
mov
lea
pop
ret
mov
int
inc
push
mov
mull
push
xor
mov
jecxz
xlat
jne
and
jns
cli
push
lods
pop
xchg
outsl
inc
fwait
push
or
shll
in
adc
movsb
out
stc
sub
jg
out
push
cmp
imul
pusha
lds
aam
mov
add
data16
adc
stc
add
pop
loop
cmp
add
std
add
lahf
mov
lret
dec
ljmp
lea
fmull
pop
mov
test
ds
lock
xchg
orb
jnp
ds
outsl
xchg
cmpsl
push
insb
mov
sbb
scas
in
push
jo
or
inc
dec
jbe
mov
aam
mov
sbb
push
mov
popf
bound
repz
in
mov
stos
sub
test
not
fisttps
cmpsb
mov
fcoml
inc
ret
xchg
inc
ja
add
push
cli
inc
std
fnsave
inc
fwait
xchg
sub
xchg
mov
mov
jo
xlat
stc
jecxz
pop
jno
inc
pop
dec
pop
popf
in
imul
cs
push
loop
cmp
ljmp
je
in
in
jecxz
mov
xor
out
lahf
xor
sbb
test
test
ret
push
das
jmp
leave
imul
fsubrl
aaa
fs
popa
out
jbe
iret
xor
insb
stc
cli
js
xchg
sbb
inc
mov
cmp
jge
je
lods
xchg
xor
hlt
pop
in
xor
ds
daa
cmp
pop
fwait
or
or
sub
loop
push
push
lods
lea
mov
jns
push
sub
dec
lea
inc
lds
add
jle
adc
inc
sbb
xchg
loopne
stc
repnz
fists
cltd
and
lds
xchg
call
inc
jecxz
and
repz
aaa
sbb
fcmovne
dec
leave
add
fldl
ja
into
cld
in
dec
les
push
xchg
sahf
aad
push
popf
add
ret
movsl
push
cli
cwtl
cmp
test
or
cwtl
mov
pop
jbe
adc
or
jno
pop
test
dec
scas
out
popf
mov
mov
cmp
outsb
or
in
loopne
inc
or
adc
scas
repnz
pop
lds
mov
decb
jecxz
fsubrl
add
int3
lahf
ja
xlat
jns
rcrl
pop
mov
rcl
ja
adc
sarl
mov
cmp
test
xchg
add
push
je
push
push
xor
ja
mov
fld
lret
mov
add
pop
mov
add
ror
sub
lret
or
xor
leave
sub
loop
sbb
cld
daa
dec
jno
sub
pop
sahf
aad
enter
add
mov
imul
sbb
xchg
adc
pop
adc
dec
in
sarb
test
bnd
mov
xor
lcall
jo
mov
mov
and
jmp
mov
into
cmp
arpl
push
popa
inc
mov
mov
mov
mov
imul
dec
and
sub
sub
ja
xchg
or
pop
int3
sub
in
xor
idivl
fadd
enter
lretw
cmp
push
pop
dec
mov
lcall
sbb
popf
fidivs
dec
sub
rcrl
movsb
sbb
cwtl
inc
cmp
push
xchg
push
or
int
add
pop
inc
addr16
mov
add
add
sub
js
or
mov
loope
cmp
push
mov
jecxz
pop
in
and
movsb
or
popf
pop
push
inc
push
mov
andb
xchg
idivl
popa
ljmp
dec
jnp
add
mov
call
adc
outsl
stos
sub
mov
mov
rorb
or
adc
sbb
outsb
es
data16
scas
es
fisttps
cld
add
pop
xor
and
fwait
sti
dec
in
andb
cld
xor
out
lock
out
push
mov
lock
inc
sub
sbb
mov
xchg
sub
cltd
lret
repnz
inc
mov
push
dec
jg
cmp
pop
pushf
lods
ja
jae
lret
mov
mull
dec
pusha
call
sti
fiaddl
dec
sub
push
lds
push
cmpsb
cld
mov
inc
addl
std
sub
pop
jmp
bound
sbb
adc
inc
inc
dec
dec
ds
dec
push
push
inc
imul
fstpt
rolb
es
jae
mov
dec
stc
sub
inc
jbe
insl
jle
fists
out
xor
and
test
jl
mov
dec
test
lock
mov
ljmp
sub
xchg
mov
fsubrl
sbb
jle
lfs
pop
jecxz
aam
mov
and
mov
fisttps
scas
sbb
icebp
es
sbb
dec
add
push
lea
aaa
std
pop
ret
sarl
inc
rcrb
outsb
rorl
inc
jnp
add
mov
sbb
push
pop
mov
inc
out
lock
fisttps
inc
adcb
inc
ret
adc
lahf
fnstenv
dec
imul
mov
test
jae
fisttps
and
ficoms
in
popa
mov
movsb
mov
leave
aam
bound
mov
lods
sub
frstor
pop
mov
ret
cmp
jmp
das
xchg
outsb
test
lret
dec
js
sbb
add
std
and
xchg
daa
cmpsl
dec
add
dec
popf
dec
push
xor
or
lret
in
ret
wbinvd
push
mov
mov
xchg
cmpb
pop
dec
add
rclb
push
arpl
inc
push
xor
xchg
rclb
cli
cmp
and
lods
mov
pop
jl
ret
les
pop
cmp
xor
cmp
adc
andl
mov
cld
push
mov
pop
icebp
test
inc
fwait
sbb
repnz
xor
add
movsl
aas
mov
sub
xor
add
mov
adc
jne
inc
frstor
mov
insl
mov
xor
jns
shrb
and
inc
push
jb
dec
inc
pop
mov
inc
add
adc
sub
mov
out
mov
ss
aas
jmp
fs
testb
aam
insl
xchg
lret
dec
jmp
addr16
or
fmuls
inc
cmc
pop
ficompl
bound
repz
rclb
fnstenv
repnz
push
daa
ja
fistpll
and
rcrl
stos
push
clc
sahf
sub
mul
jo
rcr
xchg
xlat
cmpsl
fwait
sub
leave
and
int3
push
sbb
push
inc
jne
and
in
std
repnz
and
lret
add
or
pusha
sahf
aas
std
daa
mov
sahf
or
test
imull
je
pop
repz
mov
pop
pop
icebp
insl
pop
jne
not
pop
mov
je
cli
mov
jne
sbb
jbe
lret
std
faddp
jb
sub
mov
mov
stc
lcall
sbb
push
out
jns
pop
pavgb
mov
sub
lret
or
cltd
bound
popa
pop
inc
sbb
lea
sub
and
dec
je
xor
push
sub
sti
int3
push
add
mov
jno
dec
and
je
jne
loopne
imul
sbb
mov
xchg
xor
subps
add
gs
fmull
scas
pop
inc
arpl
pop
cmpsl
rcr
pop
arpl
and
in
sti
ret
adc
lcall
orb
xor
cltd
inc
loopne
fldenv
lahf
lcall
cmp
jns
scas
das
daa
mov
in
idiv
ficoml
mov
pop
fisubl
mov
pop
pop
cmp
pop
pop
hlt
iret
cltd
dec
sbb
mov
sbb
fcoml
imul
mov
add
outsl
and
enter
in
inc
out
inc
nop
jno
ret
adc
sar
aas
pop
and
pop
xor
mov
pushf
and
jge
mov
fldt
pop
hlt
add
jmp
push
lret
dec
stos
ljmp
test
fisttps
in
in
aas
mov
dec
xor
cld
in
pop
int3
mov
mov
sbb
rclb
jge
inc
mov
sub
xor
cmp
cmp
cmp
jns
test
push
sub
cld
insl
rcrl
mov
pop
xor
pop
imull
nop
iret
out
and
mov
imul
mov
xor
add
aad
mov
mov
outsb
push
sbb
sbb
add
iret
mov
pop
jmp
adc
movsb
ljmp
stc
push
mov
jne
repnz
pop
lahf
shlb
out
or
fsubs
xor
subb
outsl
inc
dec
mov
jo
push
dec
lock
das
lcall
aaa
sub
popf
in
ss
sbb
test
jns
mov
lods
push
ja
cltd
enter
sub
stos
mov
mov
mov
mov
add
mov
es
dec
mov
pop
stos
cmp
dec
mov
or
loopne
adc
mov
push
lcall
xor
pushf
adc
hlt
add
bound
xor
jo
push
fstpl
pusha
and
cld
ret
pop
in
lcall
or
and
add
pop
nop
xchg
sub
js
sub
test
lods
rclb
sub
pusha
iret
das
adc
push
out
test
cmp
or
or
movsl
hlt
loopne
js
jns
ror
pushf
dec
adc
mov
xchg
fsubr
fisttps
jge
xor
test
or
insb
sbb
inc
adc
mov
push
jae
out
es
mov
outsb
data16
adc
mov
jno
in
das
pop
lret
faddp
mov
cmp
psraw
mov
add
pop
mov
nop
cld
and
mov
xchg
mov
ljmp
add
pop
je
push
movsb
sub
inc
cmpsb
cs
cli
clc
icebp
mov
outsb
mov
cld
lea
push
cmp
mov
jp
jg
sbb
mov
xlat
push
sub
fucomi
lcall
cmpsl
jmp
aad
dec
stos
inc
dec
popa
add
push
dec
mov
dec
xor
es
inc
and
pop
pop
daa
clc
ror
and
cmp
pop
inc
jns
int
or
xor
adc
dec
pusha
repnz
jl
mov
movsl
sbb
and
jecxz
in
jp
cmp
outsl
mov
push
mov
pop
cld
mov
xchg
nop
xchg
inc
inc
cld
repz
cmp
push
jecxz
mov
mov
or
adc
xor
jb
inc
test
jae
xor
jge
xchg
mov
sub
xor
add
pmaddwd
lahf
pushf
or
inc
dec
cmc
cltd
xor
mov
push
in
sub
scas
pop
adc
test
pop
xor
cmp
adc
ja
dec
dec
test
adc
xchg
pop
dec
int3
pop
and
mov
scas
cmpsl
rclb
test
daa
jbe
jp
in
dec
aam
scas
and
mov
sbb
xchg
and
cs
ficompl
mov
sbb
or
and
popa
sub
popf
jbe
movb
push
test
stc
enter
loop
adc
out
mov
out
das
ds
mov
pop
fcoms
cs
cwtl
push
mov
fwait
pop
icebp
mov
lods
xor
scas
inc
xchg
insb
xchg
jne
scas
stos
cltd
lret
mov
cmc
xor
sub
cmpsb
fstps
adc
or
sub
push
sahf
cmp
jle
xchg
or
popa
push
mov
add
cmpsl
in
loop
lods
xchg
push
imul
sub
dec
inc
lcall
leave
xor
addl
push
clc
sti
jns
push
fstpt
hlt
jle
xor
imul
jnp
xlat
cmp
jns
iret
add
popa
nop
loop
xor
ficoms
fldcw
clc
pop
in
call
lret
inc
fildl
les
jmp
ljmp
pop
loope
lods
push
jae
mov
jo
push
repz
loope
pop
push
data16
push
ds
jl
mov
jnp
loop
andl
mov
mov
movsb
inc
shll
enter
repnz
outsb
lcall
lods
mov
cld
out
test
mov
jmp
add
cmp
sub
icebp
or
xor
xchg
lods
or
js
or
in
sub
xor
fstp
aad
pop
popf
adc
inc
popf
jne
daa
pop
sbb
xchg
or
pop
mov
adc
movsl
add
subl
pop
test
insb
and
int3
stos
xchg
ret
lods
mov
es
pop
sbb
push
aaa
inc
or
sub
shrl
cmp
cltd
sbb
lret
sti
pmaddwd
iret
pushf
mov
cmpsl
stos
jae
stos
push
movsl
mov
and
mov
push
in
jmp
jnp
into
into
idivl
mov
xor
lret
or
xor
sbb
adc
xor
dec
jl
xlat
repnz
jge
js
adc
sub
mov
imul
aas
daa
scas
aad
test
enter
bound
scas
inc
xlat
into
sbb
and
mov
std
ret
cs
cmp
gs
mov
xchg
push
scas
loopne
movsl
fcmovb
adc
roll
dec
sbbl
mov
mov
rolb
lcall
adc
movsl
outsl
mov
test
js
into
xor
daa
lahf
pop
test
scas
dec
dec
or
aam
jle
jae
lret
mov
into
fsubrp
push
shlb
cli
rcrb
mov
shrb
push
aas
popa
mov
inc
pop
ret
add
in
dec
or
cld
push
xorl
insl
inc
and
lock
xor
jnp
xchg
movsb
movsb
xor
aad
and
je
cld
or
dec
pop
cmc
fsubr
or
xchg
xor
xor
stos
call
jbe
repz
inc
adc
adc
stos
aam
xchg
loope
mov
add
sbb
pop
fbstp
mov
mov
out
mov
jp
dec
mov
lea
mov
xchg
pop
mov
loope
fdivrs
test
fiadds
dec
mov
add
out
cmp
in
jae
dec
mov
or
push
mov
gs
push
and
push
push
data16
hlt
xor
icebp
xor
sbb
push
push
insb
mov
sbb
mov
pop
ret
cmp
je
pop
jg
out
push
leave
jbe
data16
pop
jo
mov
and
scas
in
insb
mov
and
push
ss
add
ret
sub
dec
xchg
sbb
dec
test
cmp
or
dec
out
xor
push
push
leave
adcl
add
mov
xcrypt-ofb
cmpsl
sub
dec
xchg
jle
bound
cltd
xor
in
and
cmpsb
ja
inc
bound
xor
push
jecxz
iret
faddl
push
leave
xchg
and
fldt
pop
call
or
lods
into
lds
mov
lahf
shll
cs
mov
ror
add
sbb
dec
aas
pop
adc
fs
fwait
cmp
mov
ja
mov
xchg
stos
lret
mov
xchg
popa
mov
lahf
dec
inc
jmp
mov
rcrb
gs
popa
adc
dec
insl
mov
xlat
push
movsl
xchg
or
push
sub
mov
mov
out
pop
sub
dec
or
icebp
pcmpeqb
sahf
std
out
pop
jo
pmuludq
sub
pusha
mov
jns
stos
push
pop
mov
jo
insl
cmpsl
fbld
out
fidivrs
xor
mov
outsl
subb
xor
stos
push
adc
sub
clc
push
pop
pop
mov
add
xlat
lret
adc
mov
push
int
cltd
gs
pop
adc
sub
adc
aaa
fistl
xchg
fwait
adc
lret
out
mov
in
sbb
mov
adc
je
scas
int
jmp
lock
mov
into
popf
xor
xor
push
popa
fidivrl
lock
inc
in
adcl
push
mov
cli
imul
cmp
ljmp
sarl
ret
xor
sahf
int
jle
xor
sarb
scas
jnp
xor
dec
adc
and
icebp
add
imul
decb
lods
sbb
subl
sbb
lahf
jns
jecxz
popa
mov
gs
mov
test
mov
inc
mov
out
xor
inc
mov
scas
xor
xchg
rclb
scas
ret
dec
dec
push
add
mov
add
pop
cmp
andl
xchg
fs
cwtl
gs
jl
mov
xor
dec
faddl
add
shlb
mov
aas
mov
push
lcall
addr16
ret
popa
test
push
pop
adc
in
xlat
lcall
pop
inc
rcll
dec
movd
test
jmp
inc
outsb
lcall
or
jg
cmp
push
adc
jns
jecxz
into
in
cs
in
jge
jecxz
push
pop
addr16
xor
sbb
fwait
cli
sub
xchg
sbb
fidivrs
les
dec
adc
rcrb
sub
sub
mov
mov
test
sar
leave
inc
dec
mov
dec
mov
cmpl
push
lea
mov
in
adc
sbb
pop
aam
jb
sub
mov
xor
cmp
jno
add
adc
or
insl
fldt
xor
push
xchg
push
lcall
in
push
pop
stos
leave
lret
popa
adc
cmp
lods
clc
cli
sub
adc
push
gs
nop
jle
pop
mov
jmp
pop
adc
cwtl
adc
pop
mov
mov
aam
push
in
xchg
xor
or
cmc
xchg
lds
push
mov
and
test
movd
shll
mov
hlt
pushf
jge
sahf
arpl
xor
sub
rclb
shld
xchg
dec
in
push
mov
mov
push
sbb
movsb
mov
and
push
mov
in
mov
push
add
xchg
fisttps
jo
jb
xchg
xchg
imul
popf
jno
das
mov
xchg
cmpsl
cld
lods
mov
les
dec
sub
pop
jbe
lds
das
test
cltd
add
jge
pop
sti
mov
icebp
fisttps
mov
push
icebp
orb
gs
dec
inc
push
movsl
lock
push
pop
popf
sub
stos
sub
jmp
xor
out
fcmovu
int
mov
rolb
dec
sub
jle
loopne
loope
jnp
pop
add
ss
cmpsb
in
pop
ja
mov
pop
ret
inc
cmp
leave
mov
sub
outsb
mov
jno
mov
shrb
adc
das
sub
gs
xlat
outsl
ljmp
clc
neg
mov
push
std
xchg
lods
sub
add
cld
jle
pop
inc
test
aas
aad
mov
jl
imul
test
out
inc
lock
push
sti
xor
fldl
imul
or
fcomip
ficomps
cmp
movsl
ljmp
test
clc
jb
and
xchg
jb,pn
cmp
das
and
push
fidivl
repz
cmp
mov
xorl
jae
push
dec
into
enter
clc
jle
ss
jae
xlat
dec
sub
ljmp
xchg
hlt
dec
mov
aam
jbe
mov
test
lea
inc
xor
adc
adc
adc
inc
mov
aam
cmpsl
cltd
sbb
in
inc
xchg
cmp
ljmp
sahf
and
jl
pop
outsb
out
adc
jge
pop
sbb
cmp
sub
inc
loop
repnz
mov
or
cvtdq2ps
and
cmpsb
mov
push
mov
fidivrl
cmc
jne
movsl
add
mov
mov
xchg
cmp
add
ret
pop
stos
pop
mov
addb
fs
sub
sbb
lret
jecxz
je
mov
or
mov
cs
shufps
sub
test
mov
adcl
outsl
sbb
popl
clc
movsl
mov
scas
cwtl
test
gs
call
stc
adc
xchg
push
loopne
inc
aas
adc
negb
cmp
mov
loopne
add
sahf
lahf
cmp
dec
dec
sub
adc
insb
test
ret
adc
dec
daa
fists
jbe
inc
adc
inc
push
mov
cmp
pop
std
xchg
jo
nop
pop
sub
out
cltd
xchg
mov
xchg
aas
stc
dec
dec
push
adc
mov
pushf
in
stc
push
cmp
pop
push
jnp
add
push
sub
xchg
dec
xchg
cmp
out
and
xchg
jmp
cmp
pop
fwait
sub
mov
movsb
aas
test
les
add
test
mov
add
ss
xchg
or
dec
fldcw
xchg
ror
lds
mov
leave
jmp
bnd
rcr
gs
pop
sub
push
adc
in
int
jns
cmp
or
aaa
pop
popf
out
push
in
push
xor
inc
enter
pushf
cwtl
std
pusha
push
mov
pusha
pop
imul
dec
sub
pop
sbb
leave
push
inc
add
les
imul
leave
jge
push
pop
and
test
jns
pop
and
out
jne
das
dec
sbb
adc
pop
dec
dec
xchg
xchg
testl
lcall
ds
xor
gs
mov
das
pushf
jg
orb
xchg
cmp
add
mov
pop
call
lret
cli
fwait
mov
popa
addr16
inc
fildll
loope
fs
rclb
push
test
pop
aas
mov
mov
scas
and
jecxz
outsb
pop
cs
loope
repz
ljmp
pop
in
xor
jp
andb
xchg
test
pop
pop
les
movsb
rcrl
rcrb
pop
notl
sbb
xchg
insl
xchg
sub
and
mov
mov
sbb
sar
js
xchg
ret
mov
or
int
popa
mov
cld
in
jecxz
mov
mov
out
int
dec
add
test
lret
sbb
or
negb
rorb
jae
add
dec
sub
rcll
jmp
push
repnz
jae
jle
push
mov
mov
rcrb
jge
clc
adc
jns
fnsave
repnz
push
je
jecxz
push
sbb
jae
jg
adc
xchg
popf
or
in
push
std
cmp
cld
cld
pop
lret
xlat
xchg
jl
std
lret
jbe
mov
sub
sub
add
xchg
ret
xlat
ds
push
lock
mulb
pusha
sbb
test
fidivrs
xchg
xlat
fcoml
pop
add
ljmp
mov
dec
and
dec
js
pop
pushf
hlt
dec
adc
cmp
daa
pop
fbstp
loop
test
bnd
mov
rcrl
push
and
insb
add
pop
or
mov
jns
jns
cmp
push
sbb
pop
rcrl
push
vcmpngesd
mov
cmp
ret
adc
or
pinsrw
pop
mov
add
fisubl
mov
sbb
mov
or
int3
test
pop
dec
or
sti
je
xor
push
pop
jge
sub
lods
outsb
stos
sarb
iret
inc
lret
sbb
mov
mul
insl
sub
mov
cltd
fldl
pop
adc
add
sbb
mov
out
dec
mov
lods
in
loop
pop
jne
mov
fsub
jl
mov
dec
push
mov
cld
push
nop
sbb
cpuid
push
ss
xlat
pop
inc
dec
push
out
aad
inc
or
push
es
les
xchg
pop
push
and
lret
nop
pop
cmp
imul
stc
mov
add
sub
pop
outsl
pop
adc
push
divb
xor
add
pop
xchg
fwait
cmpsb
clc
or
mov
stos
aam
outsl
js
popf
fiadds
lahf
aas
stos
leave
sti
imul
rorb
dec
dec
nop
popf
pusha
xchg
xchg
push
add
sar
mov
fnop
and
push
adc
xor
out
and
aas
sub
mov
daa
mov
push
enter
adc
bound
push
add
cld
addb
and
jne
es
ja
je
jnp
mov
rcrb
jecxz
pop
cmp
es
subb
mov
jno
shrl
inc
mov
or
insl
fnstsw
jbe
inc
sbb
lcall
pop
or
and
push
and
inc
ss
ds
mov
daa
loop
outsb
push
xchg
test
insl
pop
int3
inc
scas
into
cld
shl
mov
insl
in
scas
mov
in
fdivrs
or
add
std
mov
jg
sub
cmp
je
mov
sub
push
rsqrtps
cmpsl
fs
sub
cwtl
mov
dec
je
clc
or
push
dec
jmp
push
push
push
and
mov
hlt
sbb
ret
cmp
dec
gs
mov
sbb
mov
aam
adc
xchg
sbb
pop
jle
clc
and
or
leave
mov
rcl
or
dec
jle
dec
push
mov
cld
in
stos
shll
push
cmp
mov
xchg
out
pop
fsubrs
sbb
mov
xchg
push
pop
shrl
bound
aaa
sub
xchg
jmp
ss
fldl
cld
popf
test
mov
enter
or
stos
cwtl
push
mov
or
xchg
dec
test
mov
and
call
sbb
lods
and
call
ss
mov
test
insb
test
xchg
pop
inc
dec
push
sub
arpl
cmp
out
loope
jbe
movsl
sub
cmp
hlt
aaa
sub
jecxz
popf
es
inc
adc
insl
ret
dec
push
fstl
dec
dec
ds
sahf
pop
enter
leave
std
mov
clc
inc
sbb
repnz
pop
jb
sub
sahf
sub
mov
mov
mov
jnp
lahf
jnp
xorl
not
movb
and
repnz
pop
mov
push
mov
aad
rcr
sub
stc
and
mov
adc
js
dec
pop
fbld
fisttpll
je
imul
xlat
cwtl
push
xchg
sahf
and
dec
pop
cltd
mov
inc
insl
out
dec
mov
mov
xchg
dec
cmp
popa
lcall
fiadds
adc
scas
sub
clc
scas
insl
or
cmpsl
push
rcl
sbb
push
dec
and
mov
inc
cmp
mov
inc
pop
dec
clc
mov
jnp
add
inc
outsb
out
jp
addb
jg
xchg
inc
shll
lds
and
mov
gs
fcoms
mov
outsb
in
lahf
popa
or
jle
push
jno
clc
push
inc
cmpsb
jg
scas
adc
sahf
xchg
adc
push
jmp
inc
out
mov
xchg
and
mov
icebp
inc
mov
xor
aaa
dec
stc
js
mov
push
lret
push
out
and
fldln2
mov
ficoms
loop
pop
int3
test
jo
setbe
and
lods
dec
ljmp
icebp
push
lds
loop
bound
xor
push
push
push
in
sbb
push
pop
sbb
adc
aas
test
jecxz
pop
pushf
ret
push
mov
mov
mov
outsl
mov
xchg
shll
ss
repz
xlat
popf
add
jnp
repnz
ds
inc
xorb
add
enter
imul
mov
pop
mov
pop
pop
dec
call
push
leave
je
jne
and
add
cs
test
mov
aam
mov
push
and
xchg
xchg
imul
xchg
add
push
aaa
imul
xor
mov
mov
fcmovu
mov
pop
stos
cltd
adc
xor
movsl
ds
xchg
sub
and
jne
lret
std
rcrb
dec
fdiv
test
push
lock
leave
xor
push
jge
xor
ret
int3
mov
xorb
fcoms
xor
jle
xchg
aad
mov
mov
mov
adc
out
jbe
sbb
inc
enter
adc
fwait
aaa
mov
aas
inc
push
popa
jbe
xor
arpl
mov
popf
add
je
mov
aaa
sbbl
and
repnz
popa
in
in
push
push
popa
jae
sub
mov
stos
jno
xor
or
push
sub
push
testb
jae
inc
int
push
mov
test
lods
xchg
addr16
mov
fldcw
xor
dec
stc
mov
fst
push
push
or
popf
ficomps
stc
fisttpl
xchg
shll
int3
inc
ja
in
mov
std
into
push
sbb
arpl
dec
sub
or
xchg
ret
in
in
or
std
push
pop
or
dec
cmp
int
icebp
imul
stos
jge
xor
xchg
push
jbe
dec
or
dec
lahf
cmpsl
je
sub
movsl
and
cmp
xchg
add
push
sub
xchg
and
imul
pop
movsb
mov
into
lods
mov
lret
add
aas
xchg
cmp
pop
cmpsl
xchg
scas
inc
xchg
jecxz
add
mov
adc
das
fiaddl
mov
jae
and
push
outsb
jl
out
lret
push
mov
rolb
push
arpl
cmp
sub
insl
xlat
mov
loop
rcll
mov
adc
inc
sub
pushf
out
loop
mov
sbb
nop
mov
ret
sub
cmp
cld
or
xor
rclb
lock
mov
jne
xchg
push
xor
push
sub
popa
mov
movsb
inc
les
les
arpl
enter
lret
adc
push
mov
sub
dec
xchg
adc
xchg
push
ds
es
cmpl
or
enter
andl
push
push
notb
mov
data16
addr16
std
lcall
mov
std
les
pop
std
xor
aaa
in
jo
test
and
popa
in
popa
rolb
fnstenv
leave
xor
cmp
xchg
cmp
or
cld
fildll
mov
lods
jno
sub
inc
sbb
add
xchg
cli
lods
into
leave
shlb
shll
mov
xchg
mov
push
mov
cmp
fiaddl
mov
mov
ret
cltd
fsubrs
push
rcrb
cmpsb
or
ljmp
popf
lahf
nop
jns
cltd
inc
push
dec
mov
cmp
insb
jnp
adc
loopne
mov
mov
push
mov
mov
inc
rcrl
add
cmpl
sti
xor
inc
add
out
add
pusha
xor
cmp
mov
mov
push
icebp
adc
adc
aam
loop
pop
lea
mov
mov
jbe
int3
adc
into
movsl
sub
xchg
jnp
dec
enter
mov
dec
xor
in
dec
mov
in
xlat
mov
mov
xchg
jle
xor
addr16
xchg
in
xchg
dec
scas
shll
fwait
mov
xchg
xor
testb
adc
in
pop
and
push
sbb
repz
cmp
popa
ljmp
jb
add
stos
data16
sub
mov
xchg
icebp
push
movsl
das
and
gs
fldl
out
pop
mov
mov
fisttps
in
imul
xlat
sub
pop
pop
or
int3
ds
cmp
pop
outsl
xchg
mov
out
test
inc
and
out
std
insb
mov
or
pusha
jl
xorl
xlat
or
adc
int
cmpsb
mov
mov
sbb
mov
cmc
hlt
xor
ficompl
subb
in
dec
mov
stos
sti
rorl
rolb
inc
leave
push
xchg
inc
loope
pop
loop
aad
lret
pop
and
sbb
sbb
jbe
out
mov
aam
or
inc
add
cmp
fs
fiaddl
or
add
mov
imul
mov
loopne
sbb
rcll
adc
inc
xchg
xor
out
cmpsl
inc
xlat
push
cmp
push
dec
inc
rcl
push
sahf
adc
push
xchg
cs
xor
cmc
cmp
or
lds
adc
sahf
or
or
gs
push
sbb
inc
lods
movsl
lods
js
mov
push
cmpsb
dec
cmp
sub
repz
cmpsb
xchg
add
lahf
jl
mov
out
aad
jl
insb
and
out
lahf
or
imul
xchg
jb
mov
inc
jecxz
sarb
fbstp
cwtl
es
mov
cmp
shlb
cmc
repnz
and
pop
jne
mov
rcll
out
cltd
sub
xor
in
jnp
lods
push
xor
dec
mov
or
jecxz
out
scas
negl
jmp
leave
fistps
cmp
aas
aam
mov
dec
dec
inc
jmp
fbld
ja
daa
imul
cwtl
mov
sbb
rolb
xchg
add
bswap
call
fsubrs
jmp
shl
rcll
pop
and
adc
in
cli
add
out
push
pop
mov
loopne
bound
dec
leave
test
dec
add
rcrb
or
jle
shrb
popf
loope
xchg
out
mov
es
lcall
in
xor
movsb
sbb
fmuls
jo
mov
push
or
adc
shll
inc
in
icebp
loope
sub
das
sti
xor
xchg
pop
lret
xchg
jb
fdivr
inc
mov
xor
pop
clc
rclb
nop
sbb
mov
xchg
jns
imull
mov
ja
sbb
dec
sbb
jl
lea
imul
xor
push
das
int
rol
add
stc
mov
adc
xchg
push
dec
cld
js
cmp
es
jl
mov
cmpsb
cmp
movsl
dec
jbe
scas
sbb
cmpsl
pushf
in
sti
repnz
mov
mov
shl
jnp
mov
jge
subl
jge
pop
xor
ret
jo
cs
jae
fstpl
pop
dec
test
xor
lea
daa
mov
popa
sbb
inc
cmp
jge
jne
adc
dec
bound
loop
mov
int3
in
push
pop
push
fdiv
push
popa
xor
test
jge
fdivrl
mov
or
int3
mov
mov
mov
sbb
or
xchg
fs
and
dec
lea
jno
enter
testl
xlat
rcll
mov
aam
dec
ffreep
mov
div
xor
fucom
nop
inc
cs
inc
mov
lret
dec
sbb
and
adc
push
repnz
mov
xchg
mov
in
sub
xor
loope
jmp
mov
lret
jb
cmp
push
stc
push
std
stc
mov
stc
outsb
dec
fcoms
insb
or
mov
iret
addl
cmp
or
leave
xor
mov
ja
rclb
jmp
test
adc
xor
or
jne
popf
cmp
cmp
fistpll
negl
inc
sub
push
jl
xor
or
shlb
ss
cmpsb
loopne
xor
test
and
or
push
ret
pop
sub
call
aaa
pusha
dec
pop
cmc
inc
mov
cwtl
movsl
or
movsl
rorb
std
rcl
pop
loope
faddp
cmp
jle
rcll
int3
in
sbb
and
dec
sub
or
pop
push
stos
iret
sub
inc
xchg
add
loopne
mov
jno
and
into
fdivrl
inc
cltd
sbb
jmp
ss
mov
cmp
lds
adc
test
popl
jb
sub
fcoms
data16
push
loopne
stos
push
mov
inc
iret
test
subl
or
pop
xchg
icebp
xchg
or
pop
mulb
xchg
pop
mov
xchg
ret
push
out
cltd
jmp
dec
fsubr
scas
mov
add
add
adc
or
add
mov
aas
mov
push
jo
pushf
xor
dec
xchg
lret
sbb
jg
inc
push
push
xorl
mov
inc
call
cltd
scas
push
arpl
mov
mov
add
loope
lahf
lds
ljmp
aad
push
sbb
arpl
pop
xor
dec
jmp
pop
jmp
stos
fwait
lods
push
pusha
sub
in
inc
xor
loopne
cs
sbb
lods
outsl
jmp
mov
cmp
imul
arpl
push
inc
insl
inc
cmc
xor
mov
push
jne
mov
ret
pop
hlt
imul
mov
cmp
ja
adcb
pop
gs
push
cli
pop
lahf
js
pop
adc
lds
out
clc
stos
push
mov
and
test
xor
movsb
adc
xchg
imul
out
sbb
pop
lahf
adc
negb
aam
jmp
shrb
pusha
mov
jo
andb
lret
or
test
inc
pushf
xor
jbe
call
or
clc
insl
xchg
mov
and
mov
lret
dec
cmc
fsubr
popa
fsubr
sub
mov
int3
cld
pushf
fcomps
sub
loopne
jnp
pop
icebp
lods
or
sahf
add
call
push
pushf
es
mov
into
pop
rorb
xor
rcll
rcr
mov
insl
roll
clc
mov
cmp
int3
push
stos
and
sub
lods
test
inc
test
iret
mov
add
mov
jp
xlat
sbb
scas
rorb
pop
fdivr
imul
js
push
pop
imul
test
cli
adc
xchg
sbb
xor
jp
sbbb
cmpsl
fucomi
dec
push
lret
adc
adc
mov
stos
mull
push
leave
movl
aam
cmc
mov
in
xor
in
lock
lret
icebp
and
inc
inc
mov
dec
repz
pxor
mov
mov
imul
xor
jae
idiv
mov
popf
xchg
iret
sbb
push
pop
jne,pn
repnz
mov
movsl
fsubs
mov
jnp
ss
ja
mov
inc
stos
inc
lds
xchg
mov
xor
movsb
jno
mov
sub
xchg
jae
leave
ret
jge
xorl
cltd
bswap
xchg
out
pop
cmp
sbb
dec
addb
in
push
sub
fstp
xchg
sub
cmp
ss
test
push
xchg
mov
pop
cltd
jmp
cli
xchg
xchg
dec
mov
pop
ljmp
dec
xlat
lea
out
dec
adc
pop
shl
pushf
nop
pop
pop
fistps
inc
jbe
pop
mov
insl
outsb
xlat
lret
sbb
packssdw
jmp
out
pop
xchg
sbb
cmpsb
shrb
pop
add
leave
shrl
cld
dec
jmp
es
rorb
push
dec
lock
inc
xlat
lret
mov
sarl
pop
inc
dec
mov
iret
lds
sbb
jno
jg
cmpsb
sub
pop
lahf
cmp
mov
lea
mov
sub
add
jmp
dec
imul
into
insl
iret
popa
dec
out
add
xor
dec
lahf
fimuls
lahf
fsubr
mov
fldt
xor
cmp
icebp
cs
fiaddl
insb
scas
mov
or
les
ja
adc
repz
jne
dec
stc
cmp
jecxz
into
xchg
jmp
xchg
jo
jecxz
jge
push
xchg
fwait
pop
popa
mov
xor
sub
addr16
or
sub
mov
dec
mov
or
bound
pop
test
divb
mov
popl
dec
in
fwait
adc
and
inc
add
lcall
or
cmp
sti
cmpsl
mov
clc
pop
mov
ja
aas
lods
iret
stc
dec
es
leave
mov
pop
outsl
cmp
out
fiaddl
pop
sti
pop
dec
data16
icebp
lahf
inc
jae
out
push
xor
cs
push
dec
sbb
adc
sbb
imulb
ficoms
mov
testl
ret
outsb
cs
or
mov
mov
inc
cmc
mov
jl
imul
loop
xor
scas
mov
pop
or
ficomps
or
pop
scas
jnp
xor
popf
mov
inc
cmpsb
or
sub
or
xchg
or
sbb
outsb
popa
dec
xor
sub
add
push
lods
mov
andb
pop
push
jecxz
mov
stos
sbb
out
xor
mov
inc
arpl
pop
int3
mov
ja
es
popf
movsb
ret
sub
addr16
mov
fwait
inc
adc
movsb
jmp
jmp
pop
xor
dec
movsb
mov
pop
cmp
mov
mov
jno
inc
pop
nop
shl
or
push
xchg
mov
mov
and
ret
movsb
cli
mov
push
out
mov
jmp
cmpsl
outsl
push
enter
jle
jmp
jo
cmp
dec
adc
sahf
repz
sub
ret
mov
fcmovne
xorb
jns
xor
ds
push
test
mov
clc
arpl
clc
mov
repnz
lret
stc
jbe
or
push
aaa
fnstenv
or
adc
mov
fldcw
push
insl
gs
dec
arpl
lods
scas
or
push
dec
xor
scas
out
jo
js,pn
dec
cmp
mov
decl
xlat
fiaddl
push
dec
push
insb
fcompl
sbb
mov
add
mov
outsl
cmpsl
push
cmpsl
arpl
sbb
sub
sub
call
push
mov
cmp
or
ja
mov
cwtd
cmp
mov
sbb
ret
es
push
rcrl
in
rcl
out
sahf
pushf
mov
rorb
shll
test
and
pusha
jge
or
movb
insb
ljmp
aad
mov
aad
js
negl
cli
jecxz
sbb
mov
mov
repz
xor
icebp
push
lock
sbb
mov
movsl
rcl
adc
mov
test
push
mov
fisttpll
mov
push
cltd
push
xchg
jbe
dec
push
daa
lret
inc
fsub
inc
cmpl
mov
add
adc
jle
mov
push
inc
cli
mov
icebp
fdivl
jg
stc
in
test
lahf
js
sbb
dec
xchg
pusha
mov
insl
mov
xor
scas
adc
cmp
lcall
mov
into
inc
adc
mov
add
or
aaa
jnp
sbb
or
out
lods
mov
jns
xchg
pop
mov
pop
das
je
jne
cmpsl
xchg
dec
pop
lret
fists
fchs
ret
sbb
mov
in
dec
cmp
inc
add
pop
adc
jnp
xchg
xor
push
dec
flds
outsl
mov
mov
cmp
jnp
bsf
cmp
test
popa
enter
or
test
rcrl
js
or
push
dec
test
jbe
pop
ljmp
mov
jge
jl
arpl
leave
and
filds
stos
sti
mov
add
adc
add
adc
push
sbb
or
pop
jle
std
dec
push
inc
lret
mov
xor
shrb
js
mov
cltd
andb
push
cld
and
and
hlt
negb
xor
lea
or
lret
mov
cvtpi2ps
jle
aam
mov
jmp
imul
cmc
fistl
xchg
aad
roll
add
inc
adc
mov
shr
xor
xor
mov
aad
xor
movsb
mov
lret
mov
sub
mov
mov
mov
and
rclb
fstpt
pop
push
mov
and
imul
push
sub
or
mov
popf
notl
pextrw
or
sub
movsb
xor
inc
jno
pop
push
jbe
add
push
sub
call
lock
cs
das
add
fiadds
jle
and
xchg
loopne
sub
dec
das
sub
xchg
cli
int3
fcmovnu
jo
adc
adc
aaa
bound
add
lcall
cmp
inc
mov
or
addb
pop
cmp
fsubp
mov
sub
ljmp
push
xor
mov
cmp
or
leave
mov
hlt
xchg
push
aad
or
leave
fidivrs
in
aas
sahf
mov
clc
fwait
mov
clc
fcmovbe
cltd
pop
xchg
xor
pop
out
outsl
inc
movsb
mov
ljmp
cs
jo
push
push
cmp
adc
pop
icebp
fadds
scas
aas
pop
sbb
pusha
push
cmpsb
push
fs
popf
les
js
mov
add
lcall
add
ficoms
mov
push
cmpsl
dec
cmp
mov
xor
xchg
dec
cmpsb
fmull
out
jge
mov
imul
sub
popa
mov
and
fstl
stos
ds
insl
jle
xlat
xorb
test
or
and
and
test
cmp
cmpsb
sbb
dec
mov
lock
clc
add
xorl
insl
or
jp
hlt
addr16
popf
jne
jg
ja
jl
loop
cld
sbb
xor
mov
mov
adc
xorl
mov
and
sub
xor
sbb
cmp
push
xor
add
jecxz
aas
icebp
sar
xchg
jl
jp
enter
inc
mov
sub
mov
push
aaa
fiaddl
inc
push
stos
movsl
repz
loopne
rorl
adc
std
aad
jae
test
aad
adc
inc
cmovb
aad
stos
aam
call
out
or
mov
fdivl
sbb
pop
fisubs
pop
and
mov
adc
cli
notl
cltd
fmull
aaa
call
mov
out
rorl
jo
or
sbb
int3
stos
lcall
adc
out
push
clc
and
sti
mov
pop
mov
ja
or
faddl
fdivr
cmpsb
jne
test
pop
daa
leave
fwait
lcall
mov
sti
pop
popf
and
mov
bound
ljmp
or
test
movsb
dec
inc
jmp
jge
aad
cmp
xchg
arpl
cs
push
or
mov
cmp
mov
or
pop
push
hlt
xchg
stc
ja
dec
and
adc
rcl
sbb
loopne
mov
push
xor
sbb
sti
xlat
out
adc
and
sub
shlb
loope
arpl
or
adc
dec
mov
xchg
ja
out
lock
outsl
out
mov
push
scas
daa
pop
aam
mov
into
ret
mov
imul
fcomps
jecxz
pop
lret
lods
pop
jge
cmc
call
stos
aaa
push
bound
push
adc
xchg
aam
mov
cld
xchg
sbb
pushf
sti
iret
pop
xchg
push
mov
pop
sbb
add
push
adc
lds
sub
iret
adc
inc
pop
das
dec
lahf
cs
and
add
fisttps
mov
daa
std
rcll
arpl
push
sub
push
shrb
outsl
addb
adc
aam
jmp
decb
cmp
sub
push
jmp
cmp
adc
cmpsl
xor
mov
cmp
pop
les
stos
loope
popf
gs
jb
insb
push
test
push
inc
aad
jecxz
ljmp
sbb
mov
mov
xor
xor
insb
pusha
pop
lcall
hlt
xchg
in
push
inc
jne
inc
mov
and
cmp
daa
rclb
subl
push
ja
mov
adc
xchg
in
icebp
test
cwtl
xchg
inc
lods
sbb
cmpsl
pusha
aad
hlt
fs
pop
das
sub
push
scas
das
mov
xchg
mov
out
xchg
pop
sbb
fwait
dec
cs
arpl
js
ds
cmp
clc
inc
or
jecxz
jno
add
jnp
dec
rorl
pop
std
divl
sub
pop
cli
dec
cmpsl
jg
mov
repz
cld
push
sahf
add
das
fs
out
inc
dec
data16
repz
mov
and
pop
stos
shll
addr16
xchg
frstor
mov
in
fwait
jnp
inc
js
je
imul
aad
insb
xchg
mov
shl
mulb
in
pop
cltd
rcrb
pop
mov
adc
mov
cmp
mov
pop
xchg
xchg
mov
outsb
cltd
in
cmp
xchg
ror
add
dec
imul
xchg
les
mov
cmpsl
es
xor
inc
pop
in
int3
xor
fstps
das
or
dec
pop
xor
or
sbb
pop
cmpsl
bnd
shll
popf
cli
jg
outsb
testb
sub
das
jnp
movsb
mov
jecxz
adc
mov
or
xchg
jl
ficompl
jo
jecxz
adc
add
sub
sbb
or
mov
jp
push
pop
xchg
add
sahf
adc
xor
push
mov
push
xor
sahf
adcb
stc
and
add
push
mov
cli
call
jmp
xchg
inc
roll
xor
arpl
or
mov
xchg
inc
push
movsl
inc
xchg
in
aaa
xchg
pop
js
icebp
cmc
mov
mov
sbb
xchg
pop
fisubs
shrl
inc
ret
scas
dec
mov
imul
iret
shr
sar
xor
rorb
cmp
mov
dec
jo
les
sbb
incb
shll
fdivs
mov
shrb
or
xor
lcall
orl
adcl
cmp
or
add
fdivl
loopne
fcomi
test
lods
loopne
mov
adc
jl
push
lods
mov
cmp
sbb
lds
jb
test
pop
pop
ret
mov
movsb
xlat
popa
aas
adcb
inc
repnz
cmp
mov
lret
int
test
jmp
xor
dec
xchg
or
xor
add
xlat
jo
xor
ss
aam
lahf
sub
rolb
sub
add
mov
lahf
bound
imul
imul
or
sub
sub
mov
adc
shlb
mov
in
sbb
push
push
cmpsb
cmp
xlat
addb
imul
push
mov
and
mov
ja
add
pop
jp
mov
shll
cmp
lret
lahf
outsb
xchg
fsub
mov
cmp
clc
lock
add
and
sahf
fsubrs
orl
xor
repz
push
pop
push
imul
aam
adc
lahf
adc
iret
adc
pop
int
mov
mov
mov
xor
lods
js
in
dec
lods
icebp
je
les
add
ret
xor
loope
xlat
jge
pop
jnp
fcomps
or
fcmovbe
or
adc
jecxz
std
popl
ret
sbb
dec
orl
push
iret
mov
in
dec
mov
insl
xchg
cmp
out
mov
cmp
popa
adc
lret
push
leave
pushf
loopne
xchg
xchg
rclb
fistl
ja
ljmp
cmp
jne
xchg
push
sub
loop
std
sbb
mov
data16
dec
inc
bound
jle
fsubs
fcompl
repz
cmp
inc
into
lret
or
es
in
jmp
daa
inc
icebp
cmpsb
das
dec
pop
pop
mov
call
jmp
dec
mov
inc
loopne
jbe
pop
fs
insb
sysenter
add
xlat
jne
cs
ret
mov
push
lods
jnp
jecxz
sub
fisttpl
lods
scas
fldln2
and
lret
dec
nop
ja
fimull
pop
add
cwtl
cwtl
roll
pop
fdivrs
adc
mov
and
mov
movsl
mov
adc
inc
les
pusha
movsl
loopne
fucomip
test
and
mov
pop
lods
call
adc
pop
jmp
dec
push
mov
jle
pop
sbb
popa
push
and
push
out
aas
ljmp
iret
and
dec
sbb
jbe
mov
shr
test
pop
mov
into
pop
iret
cmp
ret
add
push
inc
or
cmpsl
stc
mov
jno
xchg
inc
lods
dec
cmp
mov
jmp
or
mull
shufps
pop
std
mov
dec
jmp
sub
lods
xchg
adc
mov
subb
not
dec
stos
loope
ret
loopne
push
mov
add
xor
sbb
xor
dec
mov
and
lods
outsl
les
movsl
pop
mov
insb
loopne
mov
lahf
or
aas
or
lods
out
mov
push
mov
je
dec
mov
gs
mov
lret
std
sbb
pop
inc
popa
pushf
xor
or
mov
repnz
cwtl
stos
mov
and
push
cmpsb
ljmp
xchg
mov
mov
mov
mov
dec
cmpsl
inc
jb
xchg
iret
mov
inc
mov
push
xor
inc
outsl
arpl
mov
adc
jo
nopl
push
repz
and
jp
cltd
add
std
jns
jg
add
repnz
movsl
push
loopne
data16
stos
mov
jnp
add
repnz
addl
bswap
stos
mov
sbb
out
or
ret
mov
inc
sub
mov
cmpsl
cmp
mov
dec
je
mov
popf
push
insl
das
jge
mov
sbb
sahf
sub
outsl
xchg
jmp
mov
push
xlat
fstps
mov
imul
dec
push
fisubs
shrl
std
testb
and
hlt
stc
lods
add
ja
cmp
push
cmp
scas
int
mov
jle
adcl
mov
push
push
mov
add
mov
jecxz
lret
cmp
push
aas
jo
inc
insl
mov
inc
adc
sub
inc
sbb
add
iret
dec
jbe
push
push
inc
push
jb
cli
cmp
repnz
adc
inc
inc
in
fcomps
dec
and
xchg
push
int
jl
mov
loop
sbb
scas
aas
mov
pop
or
lcall
cmp
je
outsl
adc
push
sbb
xchg
ss
sbb
and
xchg
cmp
scas
jl
imul
xlat
lret
cli
call
xor
test
cmpsl
jg
shlb
inc
gs
sub
out
pop
add
mov
or
mov
popf
cmpsl
xchg
sarl
lea
inc
cmpsb
push
daa
lret
sub
out
sub
sbb
lcall
mov
loop
xchg
push
mov
mov
add
movsl
and
push
mov
xor
movups
outsl
push
push
out
cmp
roll
nop
mov
repnz
jno
fistl
pop
mov
xchg
inc
lds
ljmp
out
jg
mov
cmp
ret
mov
inc
imul
std
fcompl
cmc
pushf
movsb
cmp
outsb
enter
stos
pushf
out
js
mov
push
data16
jb
fwait
movsl
adc
push
mov
or
lcall
aad
cmp
stos
xchg
shll
lods
lock
jne
movsb
outsb
outsl
les
aam
stc
repnz
cmpsl
jl
xchg
cs
pop
into
test
pusha
popa
push
popf
adc
adc
mov
mov
pusha
cmc
xchg
jmp
mov
js
add
loop
test
data16
mov
lcall
flds
dec
mov
cmp
loopne
jno
gs
jecxz
jle
sub
add
ds
jo
pushf
and
adc
je
push
push
ss
inc
mov
xor
incl
movhps
dec
shll
or
mov
vshufpd
dec
push
flds
fstl
ss
les
mov
stos
mov
pop
jo
dec
daa
aaa
xchg
pop
sti
adc
out
lock
sbb
ljmp
sahf
loope
in
dec
cmpsb
fimuls
xor
and
mov
xchg
dec
shlb
movsb
in
push
ret
sar
mov
mov
mov
or
popf
cwtl
xchg
ds
push
add
mov
sbb
shll
pop
push
dec
clc
xor
lea
nop
icebp
jae
or
push
ret
cmpsl
lods
bnd
lahf
cli
dec
fisubrl
and
add
pushf
enter
jl
jo
mov
inc
xchg
aaa
inc
ss
pop
or
mov
add
xor
and
adc
jle
ret
lahf
arpl
pop
sub
jp
push
leave
out
or
cwtl
and
sti
loope
cmp
jmp
enter
das
vmwrite
mov
lods
daa
inc
sbb
insb
add
les
cmpsl
jmp
jg
stos
in
cmpsb
fisttps
test
dec
pushf
sbb
out
xor
add
push
inc
add
data16
mov
into
sub
bound
pop
pop
cld
fdivr
fwait
nop
sub
incb
cmp
or
rolb
stos
scas
imul
cmp
loope
xchg
xchg
ret
repz
adc
fcoms
dec
or
rcrb
dec
imull
dec
loope
pushf
es
rolb
and
mov
ljmp
mov
loope
adc
cmpsb
pop
insl
sarl
jae
inc
cmpl
inc
and
cmp
add
mov
xchg
fcoml
shrl
xor
or
inc
cltd
test
and
mov
or
pop
call
arpl
in
jg
movsl
mov
jmp
lcall
cmc
sbb
lret
xor
or
ret
insl
jecxz
add
fdivrs
and
dec
fidivrs
or
dec
xchg
iret
push
mov
sub
add
sbb
sbb
xchg
or
sub
out
mov
jp
adc
insb
jns
shrl
div
cmp
bound
mov
pop
cmp
mov
outsl
mov
jmp
aas
in
mov
push
mov
gs
add
roll
sub
or
sub
out
idivl
push
inc
repnz
sbb
cmp
es
leave
pop
jns
xor
push
movsb
cmc
out
adc
icebp
out
cltd
aad
lea
push
js
dec
out
jae
mov
mov
inc
stos
jb
pop
sub
call
in
or
xor
and
subl
and
inc
pop
aas
pop
dec
push
imul
out
mov
popf
add
test
das
jmp
xchg
jmp
leave
or
mov
push
clc
loopne
test
jae
inc
aaa
add
rcr
inc
pop
sub
xchg
jo
mov
and
inc
mov
sub
adc
aam
push
lods
push
outsl
dec
jecxz
adc
and
push
cwtl
mov
xchg
outsl
or
fcoml
and
insl
lahf
mov
sub
dec
mov
and
jmp
mov
popa
ss
loopne
loope
inc
mov
pop
adc
hlt
ret
mov
push
pop
inc
push
xchg
or
ret
cmp
gs
cmp
mov
rcl
sub
dec
imul
mov
pop
lds
push
fs
or
outsb
xchg
adc
mov
cmp
les
adc
mov
repz
fcomp
jo
hlt
mov
pop
sbb
in
icebp
loop
mov
loopne
cmc
out
lods
and
cs
add
mov
fidivl
xor
in
sahf
ja
cmp
sub
dec
aad
dec
cli
dec
jge
xabort
jns
dec
or
or
hlt
mov
inc
mov
test
or
mov
dec
push
fcompl
repnz
call
add
push
scas
test
icebp
inc
sub
jnp
pop
int
ret
push
and
mov
adc
xor
icebp
push
jg
insl
push
cmp
or
push
outsl
push
decl
adc
int
sub
test
je
mov
fiaddl
movsb
mov
mov
addr16
push
inc
mov
mov
in
or
mov
out
sub
push
ds
js
cmpsl
outsl
fbld
mov
lods
test
imul
mov
push
add
mov
push
es
inc
dec
repnz
sbb
push
sbb
mov
jle
dec
sti
je
pop
sub
or
loop
das
ds
mov
in
add
add
sbb
lods
outsb
fwait
mov
into
mov
jp
cvtps2pd
ss
daa
movsb
ret
sahf
cmp
lahf
sbbb
dec
jo
cwtl
sub
xchg
push
lcall
les
das
in
mov
ljmp
ret
sti
jmp
dec
pop
mov
test
stos
sub
cltd
mov
mov
loop
add
hlt
xchg
or
mov
jle
adc
aad
or
subw
or
mov
pop
and
inc
xchg
aad
cld
fisttpll
pop
jmp
mov
je
mov
je
adc
ljmp
pop
jb
sbb
and
shrl
and
push
jecxz
mov
repnz
fcoms
int3
xchg
dec
pop
pop
fimuls
xor
inc
cmp
imul
leave
aaa
clc
jge
ljmp
je
sbb
enter
fnstsw
pop
test
test
daa
jae
and
jg
push
and
shl
adc
bound
movb
sbb
mov
add
jle
mov
mov
jp
test
fiadds
sbb
call
mov
lods
inc
mov
xor
test
js
aam
ret
pop
xchg
push
int3
push
add
int
out
jmp
les
mov
push
or
jg
mov
roll
inc
xchg
xor
fs
pop
pop
xor
and
mov
mov
jne
mov
psubw
aam
xchg
pop
mov
fcompl
test
imul
jmp
lds
cmpsb
pminsw
inc
push
arpl
mov
rolb
fstpl
daa
push
add
and
and
mov
popa
jmp
push
mov
cld
leave
adc
aas
aaa
add
jmp
sbb
push
add
inc
aaa
mov
out
in
pop
xchg
sub
add
push
popa
mov
rcl
sqrtps
add
add
mov
xor
lret
iret
pusha
pop
idivl
xchg
push
testl
mov
das
fmul
lods
imul
mov
sub
and
and
imul
stc
mov
push
aam
das
dec
xchg
push
shl
xor
pop
push
subb
das
xor
lcall
insl
cmp
xchg
mov
nop
dec
aad
add
inc
cld
orl
loop
lods
push
pusha
jp
xchg
jo
test
mov
lea
sub
xlat
loopne
lcall
adc
outsl
cld
repz
jle
cli
mov
jns
in
scas
sub
sbb
repz
outsb
cmp
frstor
movsb
inc
ds
les
pop
cwtl
je
fs
aam
adc
cmp
gs
lcall
xchg
ja
scas
mov
fcmovu
inc
out
sti
mov
add
les
adc
mov
push
sahf
shlb
imull
push
or
mov
cwtl
lahf
adc
test
rcrl
das
push
push
fsub
xor
test
xor
dec
cld
in
push
push
jb
call
imul
mov
or
fs
iret
inc
and
fs
dec
scas
mov
or
imul
les
sbb
js
shrl
dec
fwait
jne
mov
xor
pop
lea
lret
xchg
shlb
test
int3
mov
xchg
or
pop
cld
ja
inc
xchg
jp
mov
shll
rdpmc
mov
cmpsl
lds
or
jo
lret
icebp
mov
mov
pop
mov
dec
movsb
nop
push
insb
mov
orl
pop
scas
popa
add
inc
mov
and
mov
movsl
lds
and
enter
sbb
je
mov
aam
mov
in
push
push
pop
and
xchg
inc
mov
add
test
pop
ror
and
mov
shll
jmp
sub
outsl
mov
cmc
cld
idiv
cmpsl
jle
mov
dec
ljmp
jne
test
pop
mov
into
mov
jecxz
jle
bound
sarl
mov
mov
inc
imul
inc
hlt
negb
adc
leave
test
pop
dec
dec
out
cltd
dec
sahf
leave
pop
mov
mov
sub
add
mov
out
dec
pop
fstpt
inc
sbb
repz
in
and
rol
gs
out
add
xor
dec
pop
add
mov
lahf
and
insb
mov
pop
das
cmpsl
vmwrite
repnz
iret
lods
jmp
std
and
das
insl
mov
out
faddl
insb
inc
leave
les
ljmp
pop
out
and
adc
and
xchg
mov
je
and
scas
jbe
pop
rcl
xchg
jp
mov
mov
dec
in
mov
mov
cmp
adc
cmpsb
repnz
movsl
mov
scas
or
gs
hlt
mov
sbb
popa
std
arpl
out
lahf
test
pop
xor
inc
int3
mov
in
mov
dec
ret
or
les
or
fisttpl
or
outsl
int
in
into
les
mov
out
pop
ja
cmp
rcl
adc
push
sbb
aam
shll
mov
ss
addr16
lahf
xchg
pop
outsb
in
sub
aam
adcb
and
in
sbb
je
adc
cmp
adc
hlt
and
pop
inc
jmp
inc
add
sbb
mov
xor
xlat
sbb
mov
jns
fnstcw
pop
pop
add
dec
shlb
ror
lret
mov
int3
push
mov
adc
inc
push
adcb
ffree
sub
xor
test
or
and
push
aas
insb
or
mov
gs
and
outsb
xchg
pushf
aam
push
push
xchg
mov
mov
dec
movsl
add
fs
test
push
out
jp
xchg
movsl
out
clc
mov
enter
sbb
cmp
popf
jns
push
clc
push
jae
xlat
mov
pop
adc
daa
or
sbb
xlat
mov
mov
or
push
inc
dec
mov
mov
inc
lods
outsl
lock
adc
sbbb
pushl
pop
insl
std
push
into
pop
mov
hlt
pop
jl
mov
dec
cmp
sbb
mov
scas
arpl
mov
les
xchg
js
or
add
jp
or
addr16
mov
arpl
sub
jne
in
test
shll
bound
pop
jne
fs
cmpsb
lds
repz
pop
scas
mov
je
es
mov
aaa
push
mov
in
add
or
subl
lds
test
rorl
or
mov
mov
cltd
adcb
mov
jecxz
mov
mov
or
pop
lahf
lods
sbb
fwait
mov
add
xchg
inc
lock
int
sbb
mov
cmpsb
pop
stos
pop
and
cmc
popf
inc
psrlq
cld
sbb
iret
loopne
outsb
lods
ret
clc
sbb
mov
fstpt
jno
mov
mov
das
test
outsl
or
repnz
sbbl
mov
sbb
rol
clc
inc
mov
xchg
out
sub
sub
in
push
shll
and
pushw
dec
add
mov
movsb
mov
add
cmp
icebp
in
jnp
jb
popa
push
sahf
push
fildl
push
jb
push
cltd
ret
jg
mov
sahf
mov
shrl
repz
repnz
xor
sbb
enter
outsl
fldcw
pop
cmp
es
insl
pop
out
jecxz
add
popa
adc
mov
fsubs
enter
scas
push
mov
or
jl
outsb
adc
sbbl
movsl
fstps
dec
xor
ret
and
dec
xor
aam
cmp
jp
jmp
gs
mov
sub
sub
leave
ret
jnp
and
xchg
pushf
pop
xchg
mov
mov
dec
imul
push
mov
adc
push
roll
pop
test
cmp
xchg
xor
xchg
jl
and
adc
add
out
movsb
sub
scas
ds
test
cmp
int
push
push
sub
dec
inc
dec
xchg
mov
ret
and
xchg
test
rcrb
push
movsl
or
xorl
rorl
xchg
fidivrs
adc
in
clc
mov
or
sub
testl
push
inc
mov
sub
fnsave
int
pop
sub
inc
or
loopne
sbb
lret
jecxz
test
mov
mov
das
iret
jne
mov
xchg
push
lret
lret
inc
sbb
mov
jmp
inc
cmp
lods
scas
cmp
mov
outsl
push
mov
cmpb
sub
mov
scas
ss
leave
ret
neg
call
loope
call
pusha
lret
cltd
int
notb
pop
xchg
ficoml
inc
cmpsl
les
fsubs
dec
mov
inc
inc
push
and
test
subl
adc
shlb
jo
mov
test
xor
xor
mov
loopne
sbb
and
xor
ljmp
test
mov
inc
lcall
lods
jecxz
fs
cmp
mov
sub
std
ret
out
push
mov
xchg
sub
dec
xchg
and
ja
lods
lret
lds
loopne
mov
add
imul
push
inc
mov
scas
hlt
cmp
dec
fwait
cmpsb
cmp
mov
or
lea
dec
xlat
aas
das
push
inc
icebp
jmp
bound
sti
mov
push
cltd
xchg
push
jp
nop
insb
out
mov
rclb
inc
and
insl
dec
sub
stc
dec
inc
push
xor
rcl
jmp
loopne
cli
mov
mov
fwait
mov
push
scas
push
test
cmc
in
xchg
movsl
mov
inc
dec
std
pop
fdivrs
cltd
mov
jmp
mov
lock
jne
pusha
fistps
pop
push
sub
mov
push
mov
cmp
cs
lret
jl
loope
rcrl
scas
sub
cwtl
das
inc
sbb
test
jne
lret
repnz
push
lret
inc
dec
push
jge
int3
cmp
sbb
push
sbb
sbb
loop
fs
jae
jecxz,pn
sub
imul
or
loopne
mov
mov
or
xchg
pop
dec
es
int3
fistpll
imul
lahf
daa
cwtl
and
add
cwtl
jnp
mulb
adc
dec
sbb
mov
jae
sti
mov
mov
cmc
and
add
rorl
mov
pop
mov
dec
ror
mov
lods
andb
ss
imul
stos
ret
adc
or
lods
loopne
mov
imulb
popf
imul
jne
aam
cmp
movaps
mov
in
fcmovbe
dec
lods
cmp
fcompl
clc
movsb
push
ds
adc
or
test
cmp
push
inc
mov
test
jg
xchg
xor
popf
cwtl
ret
pop
and
mov
inc
pop
xchg
lds
sbb
ret
shrl
push
xor
pop
adc
nop
and
jbe
cltd
inc
mov
xchg
or
cltd
loope
sbb
pop
lods
push
mov
cmp
jae
dec
lock
ja
jg
scas
mov
cwtl
movsl
subl
jle
dec
enter
cmp
add
dec
push
mov
xor
aam
ret
push
sbb
jmp
pop
sbb
repz
dec
inc
cmp
test
loopne
aad
clc
push
mov
andl
lock
xor
xor
std
cmc
cmpxchg
jns
adc
mov
adc
and
cmc
mov
lahf
sbb
sbb
je
dec
lods
icebp
xor
sbb
and
sub
sbb
addb
mov
jo
imul
fcmovnu
leave
pushf
xchg
mov
dec
loopne
faddl
out
sti
ljmp
dec
pop
sbb
out
and
mov
rolb
test
and
and
mov
iret
lds
mov
movl
push
repz
pop
inc
sub
push
out
add
jecxz,pn
push
pop
insl
ret
scas
adc
hlt
jl
in
into
sub
inc
xchg
ds
or
fnstcw
xchg
xchg
popa
xor
test
push
repz
mov
ret
cmp
cli
lea
cltd
push
or
pop
push
xchg
jge
pusha
hlt
jne
jno
inc
lock
lahf
in
cmp
mov
mov
popf
inc
adc
insl
shl
adc
sub
mov
mov
xor
or
ja
sahf
loop
cltd
pop
imul
out
sbb
outsb
mov
cmc
push
adc
iret
jbe
xchg
or
push
js
jge
jo
movsl
adc
pushf
mov
rolb
jecxz
das
insb
mov
loopne
add
and
add
shl
sub
jle
test
fnsave
jp
or
cmp
mov
aad
in
adc
pop
arpl
loopne
nop
push
pushf
cmp
cmp
inc
adc
xor
outsb
and
clc
divb
fmuls
add
addr16
push
and
or
testl
xor
insl
rcrl
sub
mov
mov
and
dec
les
icebp
inc
adc
rorl
and
sbb
gs
imul
andl
filds
adc
lods
cmpsb
test
or
icebp
test
lret
ljmp
inc
push
in
jp
out
inc
rol
lret
pop
mov
mov
sbb
or
in
stc
and
pop
dec
jge
jb
mov
stos
add
andb
mov
ds
insl
aad
jno
mov
jne
adc
cmp
insl
jle
inc
aas
pop
sbb
xchg
imul
and
mov
jecxz
divl
mov
and
loopne
and
pop
jle
add
inc
xchg
adc
jge
sbb
xor
shlb
test
je
fdiv
mov
xchg
lods
cmp
push
inc
insb
sub
sub
fnstsw
push
mov
mov
addr16
add
outsl
mov
in
lds
ret
pop
fdivs
jg
aad
lods
in
add
call
pop
imul
xchg
jb
ja
gs
mov
dec
adc
mov
cltd
add
mov
icebp
lea
insl
dec
je
inc
sub
xchg
inc
call
fdivrs
repnz
fiaddl
and
lods
push
jne
add
sbb
pop
sub
lret
push
sarl
or
mov
std
stc
sub
sbb
gs
aad
int
mov
stc
outsb
cmp
cmp
daa
imul
mov
aaa
out
xchg
push
xor
mov
cmp
inc
int
ja
mov
popa
idiv
subb
sbb
sub
dec
mov
or
jmp
ljmp
mov
mov
mov
ffree
jno
xchg
inc
mov
jl
adc
pusha
scas
nop
bnd
orb
mov
push
xor
cmpsb
and
mov
and
fcom
shll
daa
mov
pop
outsl
adc
jmp
or
dec
cmp
mov
cmpb
sbb
mov
out
xchg
shrl
push
fwait
scas
mov
ja
int
leave
pop
shr
je
mov
loope
add
out
sbb
orl
sbb
incb
mov
aas
mov
cs
pop
sti
and
jle
xchg
or
cli
outsl
xchg
enter
sub
lds
out
stc
in
stc
jae,pn
xor
add
shl
scas
insb
pusha
jnp
sub
add
mov
pop
xchg
ja
loopne
cmp
sbb
repnz
inc
inc
ss
xchg
adc
shlb
leavew
jnp
or
dec
mov
cmp
stos
pop
cmp
lods
movsl
fnstsw
adc
cmp
popf
jno
push
lock
cmp
test
or
lock
jae
and
cmp
cli
out
xor
pop
mov
xorb
iret
mov
mov
shrl
out
push
test
pusha
push
aas
fwait
inc
das
sub
cwtl
mov
pop
pop
cmp
cmpsl
out
add
andb
adc
int3
cmp
loopne
sbb
lods
aaa
mov
push
inc
cmp
clc
push
test
sbb
add
add
or
fistps
jl
and
outsl
xchg
sub
je
xchg
imul
lret
mov
rolb
les
repz
loop
movsl
add
stos
mov
inc
dec
adc
jbe
sahf
pop
mov
cmc
and
es
mov
mov
movsl
stos
decb
mov
pop
in
rclb
lods
xchg
insb
pop
mov
sbb
add
xor
mov
test
inc
jp
jp
imul
fs
mov
push
sbb
dec
mov
and
fldenv
je
or
das
cmp
cld
inc
insl
mov
fstps
popa
xchg
mov
int3
rolb
imul
lcall
adc
pop
orl
xor
xor
inc
cmp
dec
pop
ja
ljmp
mov
push
sub
adc
sbb
mov
mov
outsl
js
sub
hlt
repz
aad
push
sysret
outsb
or
fwait
jno
sub
je
xchg
push
nop
shlb
int3
push
or
cld
dec
nop
sbb
push
dec
push
mov
push
sub
gs
test
xchg
in
pop
adc
adc
dec
adc
out
popf
repz
mov
ret
xor
adc
mov
ss
and
int3
xorl
aaa
push
insb
add
xchg
mov
xor
dec
mov
gs
and
jge
in
fwait
mov
dec
pushf
cmp
dec
loop
jp
inc
sub
sub
ss
notb
add
cmp
cli
pop
pop
and
pop
add
jecxz
and
mov
adc
test
adc
repz
out
add
inc
into
adc
subl
jo
or
clc
sub
out
push
and
outsl
jo
xchg
sbb
push
xchg
push
into
and
dec
in
sub
call
maxps
loope
adc
ja
push
xor
lahf
sub
add
in
sbb
movsl
stc
test
mov
outsl
and
sbb
lods
mov
cmpsl
mov
cli
dec
add
mov
add
and
fldln2
rcll
popf
mov
xchg
pop
mov
movsl
shl
sbb
sbb
or
or
stos
push
or
adc
repnz
out
call
fsubrl
push
adc
cmpb
mov
pop
dec
fwait
push
xor
repnz
adc
push
int
or
mov
mov
popa
push
aad
sub
xor
mov
add
stos
push
xchg
inc
ja
sub
adc
js
repz
mov
into
test
mov
cli
in
in
dec
fldenv
ficomps
leave
mov
xchg
lds
imul
das
imul
mov
xlat
or
jp
inc
mov
loop
sbb
andl
ja
mov
shll
and
mov
stos
inc
xchg
fdivrs
daa
enter
push
mov
scas
xchg
in
daa
pop
pushf
mov
mov
add
out
adc
loopne
cmp
roll
test
adc
test
outsb
xchg
ftst
sbb
jmp
ret
pop
jmp
xchg
adc
adc
inc
cltd
push
icebp
ja
in
jbe
adc
imul
add
ss
out
add
bound
ret
jmp
ljmp
or
or
sbb
jmp
lods
jne
add
xor
cmp
punpckhwd
adc
fdivrp
xchg
cltd
mov
pop
dec
ljmp
fwait
cmc
dec
shlb
cld
sbb
out
cmc
xchg
pop
sbb
fs
push
xchg
push
dec
cwtl
sbb
lret
sbb
inc
decb
lds
mov
imul
adc
add
loope
pop
cli
xchg
aas
sub
in
in
pusha
jge
dec
in
lea
xor
shld
std
or
cmpsl
pop
test
les
sub
mov
cld
sbb
js
in
fstl
dec
jb
arpl
sub
jp
jp
sub
push
push
xor
and
lret
xor
dec
inc
mov
clc
pop
jge
daa
jl
push
add
test
sbb
push
mov
mov
js
mov
jns
dec
ds
fwait
cmc
sub
mov
gs
dec
or
js
mov
sbb
mov
lea
xchg
sahf
xchg
bound
fwait
pop
dec
stc
push
dec
clc
repnz
push
xchg
div
mov
cmp
sbb
dec
jne
dec
gs
test
dec
sub
ret
aam
rclb
adc
mov
enter
dec
pop
insb
mov
sub
out
xorb
loop
jnp
dec
mov
int3
std
fcomp
inc
jns
dec
xor
xor
scas
inc
mov
mov
ljmp
aam
insb
stos
or
jle
inc
push
pop
aad
mov
mov
aam
rorl
popf
push
loopne
fistpl
loope
dec
cmp
mov
pop
push
fcomi
sbb
leave
inc
pop
xor
xor
std
inc
ja
or
inc
sbb
xchg
outsb
imul
dec
xchg
dec
xor
sti
jae
jecxz
stos
pop
aam
insl
fisttps
xchg
xor
sti
aas
push
insl
outsb
jmp
mov
out
les
xchg
int
push
lea
outsb
cs
jg
loop
xchg
pop
int3
dec
cmp
xchg
jg
fwait
xchg
daa
or
pop
lea
and
xchg
int
out
cld
test
test
mov
inc
das
dec
fidivrs
mov
dec
ds
into
std
cmp
movsb
adc
loop
es
mov
aam
jge
push
in
sbb
xorb
pop
sbb
sub
pop
jecxz
xor
xor
adc
sarl
es
out
sub
mov
in
inc
outsl
movsb
mov
decl
add
inc
dec
pop
movb
jmp
mov
imul
rcrl
dec
cmpb
adc
pop
fnstsw
and
lcall
push
dec
push
sti
xchg
sub
mov
add
jns
push
scas
lods
mov
mov
cmpsl
push
js
idivb
fldenv
out
in
stos
mov
and
add
adc
add
sbb
mov
dec
mov
adc
xor
jge
cmp
bound
adc
jg
and
fdivs
and
stos
cltd
jbe
mov
mov
adc
cmp
fwait
cwtl
mov
jno
sub
mov
ss
xchg
mov
xlat
lock
pop
mov
movsl
lock
and
xor
adc
and
lret
jp
jge
cmc
add
in
scas
cmpsl
pop
lea
int
cmpl
and
in
ljmp
jno
inc
pushf
ljmp
or
ret
sarl
sub
ljmp
sbbl
jge
hlt
fmulp
gs
push
cwtl
cmpsb
mov
inc
sub
pop
mov
loop
pop
arpl
pop
cmp
jo
addr16
pop
push
pop
out
das
or
ja
aad
ret
pop
lcall
jno
push
mov
pop
test
adc
pop
dec
mov
aam
out
outsb
pop
adc
lods
adc
iret
cli
and
popa
pushf
sti
cwtl
xor
inc
xor
mov
mov
mov
adc
or
inc
fsubs
push
xchg
or
or
stos
icebp
jnp
fbld
mov
push
arpl
ret
push
mov
sbb
pop
adc
pop
and
stos
sti
sahf
aaa
into
jb
pop
adc
lahf
rcll
mov
or
mov
fisttpll
jmp
or
add
sub
outsb
clc
and
and
mov
das
mov
roll
or
aas
aaa
mov
pop
xchg
mov
push
sti
jge
jbe
fidivrs
xor
loope
push
int3
mov
inc
lock
bound
fucom
ja
push
sbb
inc
aam
dec
xchg
leave
xor
hlt
xor
or
adc
pop
push
mov
push
sahf
inc
mov
mov
add
mov
test
mov
push
loop
sub
xor
sub
lds
arpl
jne
cmpsb
mov
std
add
enter
call
cmpsb
out
and
xchg
cli
adc
mov
int3
jbe
imul
push
mov
xorb
aad
into
call
pop
mov
pop
push
mov
imul
out
mov
dec
xchg
ljmp
addb
push
and
sub
adc
mov
pop
lret
adc
call
sahf
mov
lods
push
adc
sub
in
dec
adc
or
mov
pop
in
mov
ret
mov
ror
cmp
add
test
jecxz
jl
push
push
push
fsts
adc
ret
ja
pop
loop
outsl
les
jp
mov
sbb
push
clc
out
mov
icebp
sahf
lret
arpl
cmpsl
test
es
das
clc
push
sub
sar
add
ret
sbb
push
call
nop
add
sarb
cmp
lret
mov
aad
jmp
aas
and
pop
cmpsl
aas
lock
lahf
repz
adc
pop
mov
sarb
dec
scas
clc
jns
cmp
sbb
jns
je
pop
hlt
imul
stos
pop
test
bound
cmpsl
movsb
xchg
push
in
jo
dec
jl
pop
push
jecxz
xchg
hlt
ja
mov
xor
test
mov
dec
clc
int
das
daa
sbb
xchg
test
fsubrl
xlat
ret
cmpsb
shrl
mov
cmpl
push
outsb
mov
sub
pop
cmpsb
out
stos
std
push
bnd
jae
outsl
pop
mov
cli
xor
cmpsl
inc
sarl
sbb
jg
rcr
adc
mov
outsl
inc
nop
cmp
mov
pushf
std
orl
fdivl
lds
inc
ss
rcrb
jae
jl
call
mov
dec
les
cwtl
pop
mov
ja
std
and
jecxz
les
dec
fiaddl
cmp
shrl
mov
daa
or
mov
xlat
jo
cmpsl
dec
and
cltd
jecxz
push
dec
es
data16
pop
dec
test
cmp
ds
shr
inc
loopne
or
leave
inc
dec
sbb
cmp
xchg
sub
ja
inc
repz
aas
shrl
icebp
dec
jl,pt
ss
pop
test
cli
sarl
sbb
sbb
push
mov
or
scas
roll
into
mov
inc
ficomps
sub
pop
out
pop
ficompl
mov
mov
sbb
call
movsl
pop
dec
cs
icebp
sub
push
pop
xchg
pop
rcll
dec
add
cwtl
mov
mov
or
xor
sbb
addl
cld
mov
cld
clc
jle
push
add
das
movsb
mov
inc
stc
xchg
mov
jmp
stc
fmull
or
arpl
xor
jp
sbbl
jno
mov
xchg
jecxz
sub
fsub
sub
lcall
mov
outsb
cmp
push
sub
push
out
sbb
xchg
fsts
mov
mov
out
adc
adc
clc
shll
jbe
js
sbbl
arpl
xchg
xlat
js
mov
xlat
outsb
inc
mov
fprem
sti
out
in
jns
add
inc
fisubl
call
jae
addb
ss
adc
and
sti
movsb
shl
movsb
notl
xor
pop
sub
sbb
xor
xchg
decl
pop
sahf
adcl
mov
repnz
dec
xor
jmp
cmp
bound
dec
fucomi
inc
out
dec
sbb
mov
gs
aam
adc
imul
sbb
jmp
bsf
in
fnstsw
call
mov
jge
or
xor
ficomps
out
pop
lods
lahf
ja
mov
inc
pop
insl
inc
xor
data16
lock
repz
or
xchg
jecxz
ret
jp
push
fisubrl
mov
lods
test
push
mov
mov
sbb
popa
pop
sbb
xor
inc
jp
add
stos
inc
ss
bound
sbb
adc
and
cld
adc
es
sub
and
loope
lahf
adc
adc
mov
lahf
lcall
out
mov
adcl
scas
jo
mov
push
pop
pop
adc
inc
dec
jge
ss
pop
ds
aam
xchg
xor
mov
push
fisubs
loopne
jnp
loop
xchg
mov
add
sti
scas
pusha
jecxz
jge
out
es
mov
stc
mov
movl
fistpll
inc
out
loop
fildll
imul
pop
adc
push
ficoms
icebp
xor
std
xor
cli
rcll
jmp
subb
dec
and
mov
or
movsl
pop
lcall
xorl
std
in
dec
pop
outsl
push
adc
mov
stc
and
sub
cltd
xchg
pop
lret
jmp
fmuls
mov
and
cmp
sbb
dec
fucomi
lcall
icebp
aam
adc
sub
add
add
insb
icebp
mov
stos
shl
and
xor
pop
nop
insb
out
js
fcomi
rcrb
push
lods
idivb
out
add
and
ret
jmp
sbb
xchg
mov
adc
push
mov
clc
iret
mov
jge
mov
pusha
aam
cmp
pop
or
scas
cmp
pop
jb
jns
adc
xor
push
xchg
add
mov
cmc
pusha
push
sub
out
xchg
cwtl
or
vmwrite
fisttpll
sbb
push
mov
mov
mov
clc
outsb
inc
outsb
xchg
push
cmp
mov
sbb
lods
test
pop
imul
out
cmp
pushf
pop
add
dec
addr16
rclb
icebp
cld
into
jg
scas
push
outsb
inc
adc
rcrb
out
mov
mov
stos
in
fisttps
xchg
and
repz
movsl
rolb
test
mov
pop
sbb
inc
data16
push
xor
out
push
loop
lcall
mov
imul
xlat
insl
out
inc
lea
movsb
outsb
dec
pushf
jo
dec
xchg
ss
cltd
dec
sub
leave
flds
in
mov
mov
daa
jb
cmp
in
add
bound
xor
mov
pusha
aam
dec
lock
cmc
int
cld
loopne
adc
dec
sbb
test
jne
inc
sub
imul
and
aaa
dec
or
pop
in
divb
jne
jmp
insb
lahf
pop
mov
push
jbe
ja
sub
dec
sub
adc
cmpsl
stos
sub
add
inc
inc
and
aam
add
data16
jg
popf
xchg
jno
dec
xchg
sahf
jge
je
pop
ficoms
xor
cmp
jno
test
sub
push
cmp
dec
jo,pt
leave
in
movsb
pop
fwait
xchg
test
inc
or
jp
dec
jge
sub
mov
add
jbe
cld
in
outsl
movsb
or
or
push
sub
bound
pop
call
jl
push
mov
rolb
adc
push
dec
and
inc
std
push
sbb
sbb
pop
jnp
pop
lcall
cmpsl
sub
jbe
dec
sti
enter
sub
push
add
push
cmpl
out
jmp
test
aas
add
popa
shrl
inc
push
sbb
xchg
mov
cltd
lock
aad
push
cltd
int3
insb
int3
popa
adc
xchg
or
cmp
xchg
test
xchg
div
fs
xchg
jl
xchg
jae
gs
push
adc
or
js
mov
jge
dec
shrl
push
repz
add
les
mov
sbb
popa
test
jo
test
mov
pushf
adc
out
dec
int3
loopne
imul
lods
cmc
aaa
testb
rep
insb
movsl
xchg
inc
and
int
in
add
loope
add
enter
cwtl
ss
in
aam
scas
xchg
negl
in
testl
int
pusha
ror
movsl
mov
pop
test
in
jbe
push
lret
arpl
mov
sbb
into
inc
sbb
push
dec
popa
ficoms
int
push
mov
add
inc
lea
loop
dec
push
test
xchg
ljmp
pop
clc
daa
rcrb
fwait
inc
mov
inc
orb
sahf
call
mov
xchg
mov
jne
jg
cli
repz
out
or
out
jae
cmpsl
xorb
cmp
jl
jnp
cmp
cmp
cmp
fdivp
push
ja
mov
xor
lcall
xorb
and
hlt
shrd
mov
scas
int
aaa
cmc
add
cld
imul
cmp
movsl
movsl
cmp
dec
mov
movsb
out
jmp
shrl
mov
mov
xor
ja
mov
addb
sub
ret
jne
push
popa
sub
push
mov
xor
and
fbstp
pusha
pop
sbb
jmp
enter
inc
jbe
xchg
or
push
or
mov
ss
pop
std
dec
fimull
shll
adc
popa
xchg
pop
cmc
aad
sbb
add
add
sbb
icebp
test
add
fs
jne
sub
xlat
lds
jns
pop
mov
pop
in
jno
lret
aad
repz
xchg
std
jae
pop
cmp
xchg
negb
in
jecxz
mov
push
dec
jl
lret
sub
inc
mov
cmp
xor
jmp
xor
mov
mov
pop
enter
push
pminsw
ja
bnd
xchg
xchg
cmpsl
push
dec
push
andl
sub
xchg
pop
mov
fstps
imul
lods
into
jmp
ror
inc
sub
gs
xchg
push
pop
inc
and
cmp
mov
int3
sub
enter
mov
sbb
sub
shrl
jl
inc
lods
sub
fsubrs
xchg
out
sub
jge
fisubrl
imul
jmp
pusha
ja
iret
scas
jae
les
inc
nop
sbb
dec
insb
cmp
sar
cs
imul
push
cwtl
fldln2
xchg
clc
mov
test
ret
sbb
xchg
and
sub
push
gs
inc
fdivrl
xchg
and
outsl
ret
jb
jb
xchg
ss
cltd
sbb
inc
dec
int3
adc
lcall
cmp
in
addr16
push
mov
hlt
sub
mov
pcmpgtw
mov
sti
jne
cmp
mov
cmp
add
jg
mov
cmp
add
imul
repz
mov
sbb
xor
cs
hlt
jg
popf
inc
push
loope
mov
cltd
sub
xor
dec
popa
cmp
mov
sub
lea
arpl
xor
or
adc
lock
pushf
mov
fcoms
mov
adc
dec
enter
mov
and
inc
sbb
jg
dec
push
orl
mov
lret
push
jg
dec
out
xchg
lods
cmp
jns
shl
dec
add
test
xchg
adc
push
sbb
and
lods
dec
call
jnp
divb
push
and
out
pop
cmpsb
call
loop
xchg
les
imul
inc
add
dec
add
inc
sbb
popa
mov
dec
sub
mov
ret
ficomps
lods
inc
bound
popa
ljmp
fisubrl
aad
mov
insl
test
xor
fmulp
pop
ret
xchg
xor
adc
out
dec
fidivrs
dec
sub
adc
arpl
sti
dec
arpl
push
inc
hlt
inc
js
lahf
pop
aaa
mov
xor
in
sub
daa
inc
jno
outsb
sub
shlb
adc
addr16
hlt
inc
push
xchg
push
jno
xchg
das
jp
or
sysenter
out
in
cld
push
hlt
xchg
stos
or
cmp
aad
movsb
or
or
mov
imul
pop
cs
push
and
in
mov
roll
mov
push
mov
enter
stc
rol
jl
xchg
lcall
bound
sbb
or
cmpsl
add
jno
jmp
mov
push
and
mov
push
push
lods
out
mov
sbb
outsb
nop
stos
or
pop
cli
or
fsubrl
insb
out
cmp
decl
cmpsl
sahf
push
pop
pop
lods
xor
jl
mov
pop
dec
fs
pop
fldl
clc
pushf
fistps
lret
and
enter
and
leave
int
rcr
mov
cltd
test
lods
in
inc
push
sbb
jns
flds
iret
loop
adc
sub
jmp
mov
stc
jl
repnz
jne
pop
int3
ja
out
aas
loope
fcoms
roll
outsl
or
push
xchg
cmp
imul
pop
out
inc
in
mov
mov
cmp
mov
les
jmp
xchg
nop
mov
and
cli
push
inc
sbb
enter
mov
add
scas
dec
dec
std
sbbb
das
sarl
es
dec
adc
mov
ljmp
sub
movsb
icebp
fstl
mov
sub
aam
daa
ficomps
les
jne
std
repz
imul
inc
out
scas
imul
pop
sub
pop
into
jle
mov
mov
orb
pop
std
mov
xchg
in
fxch
sti
imul
xor
cli
xchg
sbb
mov
cmc
adc
lcall
sarb
mov
dec
push
das
inc
add
mov
cmpsl
jbe
or
inc
aam
iret
ret
clc
leave
adc
sub
int
dec
iret
add
popf
push
inc
inc
ds
int3
fadds
dec
insl
cmp
mov
inc
mov
inc
pop
push
jecxz
xchg
int3
clc
aad
aam
jns
mov
das
mov
in
push
push
inc
inc
inc
in
and
mov
xchg
sub
xchg
in
inc
add
out
push
in
mov
mov
outsl
iret
mov
and
and
dec
dec
shll
mov
gs
jge
rcrl
dec
and
mov
xor
mov
jecxz
sahf
inc
mov
in
jno
cmp
std
push
pop
shrl
jns
jns
aad
sub
dec
mov
cli
gs
in
or
or
cmp
mov
or
jl
jmp
inc
movsl
or
popl
sbb
xor
mov
stc
into
xchg
adc
out
inc
cmp
add
js
mov
or
data16
out
test
movsb
or
cmp
cmp
pop
cmc
out
mov
jo
inc
jge
lods
fiaddl
repz
pop
xor
outsb
add
insl
test
hlt
and
jb
cmpsl
mov
cmpsl
popf
stos
mov
sbbb
sbb
out
mov
and
xor
adc
xchg
add
lods
lret
xchg
enter
sub
adc
in
rcrb
dec
adc
push
mov
test
leave
jge
inc
inc
xor
inc
mov
push
jmp
push
insb
lret
mov
hlt
popf
fs
aam
loop
dec
inc
pop
and
push
repnz
lods
fimuls
stos
addr16
and
lret
mov
stc
scas
or
inc
jnp
loop
dec
inc
adc
cld
and
lret
inc
or
aad
pusha
mov
push
jbe
adc
lock
loopne
adc
sub
leave
aaa
mov
pusha
icebp
addr16
dec
jo
repnz
inc
int
xchg
in
pop
sbb
imul
adc
pop
sbb
pop
add
in
les
sbb
cmpsl
fimuls
xchg
push
fs
arpl
cmp
mov
cmp
loopne
mov
sahf
int
int
add
pop
cmp
negb
lea
shlb
jae
ret
sub
jno
mov
cmp
dec
xchg
lcall
mov
fildl
ljmp
js
ljmp
jb
jae
cmp
pop
fildl
mov
sbb
lock
aaa
fadd
mov
lock
jl
pop
push
ljmp
mov
mov
pop
mov
cli
push
and
mov
dec
sub
inc
xchg
loop
fmul
scas
test
xchg
and
cmp
imul
sub
fs
pop
subb
cmp
or
dec
mov
out
aas
push
xchg
js
pop
hlt
jb
je
lcall
movsb
leave
jne
popa
mov
sub
inc
shll
dec
xchg
fdivrs
jmp
mov
insb
or
adc
test
mov
mov
shll
imul
in
dec
lret
call
pop
addr16
dec
outsb
push
xlat
repz
cltd
jmp
jge
loopne
jo
fsubr
mov
stos
insb
iret
add
leave
div
jo
inc
cmc
cmc
fimuls
cltd
mov
push
push
out
mov
jb
xor
jb
sbb
aas
adc
fisttpll
xchg
dec
leave
xorb
pushf
sbb
movsl
mov
mov
cwtl
xor
sbb
fdivs
mov
jl
out
andb
adc
out
pop
or
pop
pop
lea
mov
lcall
sti
out
clc
jp
xor
ret
xor
das
mov
lods
ficomps
cmp
test
pop
int3
lcall
mov
jecxz
fwait
jae
outsl
jno
xchg
jg
jno
aad
cwtl
imul
add
cmpsl
or
mov
out
lcall
decb
test
ja
fwait
ret
ljmp
dec
push
xchg
jge
mov
mov
pop
and
movsl
lahf
mov
stc
orl
fmuls
sbb
jns
dec
gs
pop
in
cmp
jle
xor
stos
cli
fildl
mov
push
xor
in
mov
mov
sub
cmpl
inc
in
inc
movsb
enter
stc
dec
pop
adc
cld
lods
adc
je
mov
inc
imul
mov
test
pop
mov
sbb
lret
mov
or
adc
adc
push
jmp
loop
adc
icebp
mov
int3
cs
jge
pop
adc
pop
clc
or
test
test
bound
push
xor
xor
test
subb
arpl
jae
rcrl
mov
leave
inc
pop
aas
sub
pop
jmp
xor
inc
subb
mov
add
inc
jge
and
dec
sbb
mov
lea
xchg
dec
inc
mov
data16
cmp
outsl
gs
aam
xor
aam
cmpsb
movsl
mov
xchg
ds
stos
std
mov
hlt
cmp
nop
inc
jns
cwtl
arpl
repnz
loop
scas
sub
sub
fmull
subb
imul
loope
mov
pop
xor
fmuls
cli
mov
xor
cwtl
mov
jl
mov
xor
sbb
dec
pop
jmp
test
rol
lods
mov
mov
stos
loop
test
xor
push
sub
stos
ljmp
sub
and
dec
mov
mov
cmpsb
pusha
imul
mov
fistl
or
arpl
push
pandn
push
cli
mov
addr16
ljmp
testl
fldt
into
ret
push
clc
mov
adc
sub
dec
mov
pop
mov
xchg
and
fwait
push
pop
xchg
jnp
push
mov
mov
cs
stos
mov
subl
and
cwtl
xchg
das
cs
sbb
mov
jge
mov
jbe
daa
xor
loopne
mov
outsl
inc
add
loope
es
mov
xchg
outsb
sti
std
cmp
and
enter
adc
repz
and
cmp
jnp
shlb
cmc
jp
stos
out
shrb
dec
pusha
xchg
and
pop
add
int3
mov
cmp
xchg
mov
sub
inc
fnstenv
sub
inc
jecxz
inc
dec
ret
pop
xchg
ss
jmp
shll
mov
in
adcb
cmp
je
xchg
fcompl
rorb
les
orb
lret
inc
push
mov
cld
sub
aam
adc
jecxz
push
nop
addr16
nop
es
out
mov
pop
outsl
mov
test
int3
aam
mov
stc
jne
push
mov
sbb
fbld
daa
and
cmpsl
mov
popf
pop
imul
jnp
out
leave
fsubs
dec
mov
stos
test
xchg
js
mov
sahf
mov
call
fists
bnd
mov
pop
inc
loope
jne
cld
les
movsl
and
mov
movsb
inc
jnp
outsb
xchg
sbb
pop
lahf
mov
cmpsl
push
mov
mov
jbe
rcl
adc
test
jmp
and
lea
in
pop
pop
les
test
cmp
loope
loopne
sub
out
jo
icebp
sub
add
lods
and
inc
fs
out
aaa
mov
movl
inc
or
sub
lock
outsb
mov
int
xchg
sub
mov
cmp
leave
rolb
jnp
test
cwtl
mov
lods
mov
pop
jb
inc
adc
sub
fsts
mov
push
xor
push
cmpsb
pop
stc
pop
jns
in
dec
sbb
xor
sbb
lcall
dec
in
cmpsl
cmp
fs
dec
jae
mov
stos
sub
xchg
popf
insl
mov
push
jge
mov
sti
repnz
lret
jae
inc
xor
mov
test
push
pop
xor
xor
xor
pop
ror
aas
mov
int
repz
repz
popa
dec
xor
inc
jbe
xorb
jno
dec
mov
pop
test
fcoml
or
xor
mov
pop
jnp
or
inc
fidivrs
std
mov
add
jge
xchg
in
int3
and
std
dec
or
sub
sub
call
pop
sahf
pop
cltd
lods
and
mov
lahf
lret
shlb
lret
std
pop
jae
add
mov
xchg
int3
xor
sub
nop
pop
sbb
push
movsb
fcmovnb
cld
sar
aaa
nop
scas
daa
ds
into
es
xchg
push
std
sub
sub
fwait
push
jge
mov
add
imul
daa
popf
xchg
xor
daa
call
call
mov
fcompl
sub
or
xor
bound
xor
jns
js
test
xchg
es
mov
pop
pop
stc
xchg
pop
sub
cmpsb
cmp
xchg
cmc
pop
test
push
mov
insl
adc
pop
enter
adc
icebp
push
xor
add
js
dec
bound
or
in
sbb
sbb
pop
pop
mov
xlat
jecxz
lods
aam
fbld
aam
mov
inc
insl
or
fildl
and
inc
nop
dec
sarl
add
cmp
sub
xchg
push
xchg
pusha
cld
cmp
add
sub
mov
icebp
and
xchg
or
lods
pop
pushf
cli
xchg
out
hlt
scas
or
ret
mov
loopne
xchg
addr16
pop
jne
add
xorb
iret
lret
mov
cmc
rclb
les
sbb
jnp
mov
dec
add
add
or
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
call
add
add
add
orb
add
pop
add
addb
add
or
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
addb
add
call
add
add
add
addb
add
or
add
add
add
add
add
andb
add
dec
add
cmpb
add
js
add
nop
add
sub
add
clc
or
add
add
fadds
add
lock
sbbb
add
add
add
add
add
and
addb
add
or
add
add
add
add
or
cmpb
add
or
add
add
add
add
add
push
sldt
addb
out
sldt
cwtl
add
xor
add
mov
add
enter
repnz
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
or
outsl
insl
add
add
push
or
orb
andb
andb
xorb
cmpb
addb
add
or
add
add
add
add
jg
add
jg
add
jg
add
push
add
fadds
add
lock
add
or
add
and
add
or
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
jo
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
insl
add
add
add
add
loopne
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
orb
add
add
add
sub
add
add
or
or
xor
add
cmp
or
xor
add
jo
or
xor
add
movsb
xor
add
add
fdivs
or
xor
add
or
or
rolb
add
fdivl
add
shlb
add
add
add
add
add
or
rolb
add
xor
add
add
or
rolb
add
rolb
add
add
add
add
add
or
rolb
add
inc
inc
or
call
add
add
add
add
xor
test
add
rclb
add
add
and
or
lock
add
or
mov
add
enter
cwtl
add
add
or
je
add
aam
or
int3
add
add
add
add
or
mov
add
fsubs
add
add
or
call
add
add
add
add
or
sub
add
dec
push
add
add
add
add
sbb
add
add
inc
je
add
add
add
add
add
ja
add
add
add
or
cmp
add
cmp
or
in
add
add
jle
add
add
add
or
mov
add
add
add
add
test
add
add
add
add
xchg
xchg
add
add
add
or
lock
add
or
mov
add
add
add
add
xchg
or
clc
add
add
add
add
add
add
or
adc
add
sub
add
or
adc
add
push
pushf
or
adc
add
fs
or
adc
add
js
or
adc
add
mov
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
inc
add
inc
add
inc
add
or
inc
add
dec
add
inc
add
dec
add
dec
add
or
dec
add
dec
add
pop
add
inc
add
dec
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
cmp
mov
lcall
or
adc
mov
adc
mov
sbb
aam
sbb
cmp
cmpsl
cwtl
out
mov
mov
xchg
es
hlt
mov
mov
imul
shl
lock
sbb
inc
repz
xlat
test
lret
inc
bound
mov
mov
mov
in
dec
lcall
data16
jl
cli
push
mov
ret
hlt
in
cmp
call
jno
mov
cmp
mov
or
cmp
mov
je
clc
das
xchg
push
imul
stos
mov
push
movsl
xor
fidivs
pop
jno
in
mov
out
sahf
pop
mov
repnz
push
add
cmpsb
pop
and
xchg
repnz
xor
xchg
jo
outsl
xor
xchg
cmpsb
pop
xor
dec
orb
jb
push
sub
cmp
cmp
stc
ret
mov
xchg
jbe
enter
dec
scas
push
mov
push
mov
sbb
dec
add
loope
ds
rcll
movsb
xchg
jae
xchg
mov
mov
sahf
inc
dec
mov
mov
call
push
adc
pop
pusha
adc
push
cld
cmp
lcall
jg
mov
xchg
repnz
jecxz
xchg
testl
mov
cmp
xor
sar
xchg
add
icebp
jmp
stc
sbb
js
adc
or
nop
mov
pop
jo
jb
mov
pop
rcll
fmuls
cs
mov
xchg
sub
adc
or
out
and
nop
lods
add
jp
cwtl
jmp
shrb
ffreep
mov
loopne
cwtl
mov
sahf
aaa
dec
mov
sti
loope
iret
adc
cmp
rorl
sub
jnp
jl
mov
adc
mov
add
lahf
and
push
fisubl
or
sbb
mov
sbb
adc
push
adc
or
jns
out
jns
mov
repnz
ss
ljmp
pop
jbe
scas
mov
rcrb
mov
cmp
xchg
dec
and
ja
cli
hlt
aad
push
cmpsl
int3
dec
xor
mov
push
inc
cmpsb
mov
fwait
push
das
add
jle
loopne
icebp
cmp
std
adc
call
pop
idivl
or
mov
out
cmp
jmp
std
add
jmp
int3
mov
mov
jns
xchg
ljmp
imul
pop
out
cltd
stos
das
push
cwtl
jne
adc
stos
sub
jo
pop
imul
mov
je
add
insb
fwait
ljmp
dec
xlat
test
lret
ret
repnz
nop
inc
xor
sahf
pusha
fcoml
push
xchg
movsb
js
push
outsl
fldenv
or
pop
es
mov
out
sbb
cld
movsl
sti
or
inc
or
addr16
mov
pusha
das
mov
insb
shrl
adc
inc
outsl
pop
push
xor
scas
cli
and
jmp
je
call
xchg
fldt
das
add
push
out
mov
insb
out
inc
cmpl
in
stos
mov
rcl
shrb
xlat
insl
pop
mov
dec
out
inc
mov
sbb
test
mov
sbbb
ret
xor
insb
mov
pop
leave
stos
or
cmp
push
fistps
add
push
lcall
push
pop
sbb
hlt
out
xchg
stos
test
pusha
shl
mov
mov
xlat
xorb
add
ja
mov
lret
mov
jg
mov
mov
ret
push
jbe
cmp
and
test
dec
mov
ret
inc
sbb
outsb
ds
jnp
mov
test
out
cmp
pop
mov
xchg
adc
test
clc
outsl
pop
fsqrt
pop
js
adcb
xor
out
sbb
xchg
jp
sub
aam
mov
gs
jl
loope
stos
jae
cmp
int3
jbe
inc
xchg
inc
sub
fstpt
sar
and
push
out
in
nop
or
pop
iret
lret
out
and
out
ret
idivl
cld
jbe
enter
leave
jg
pop
movsb
movsl
lock
into
mov
fmull
repz
xchg
bswap
mov
mov
sub
mov
bound
inc
insb
je
add
cmp
mov
jecxz
fdivs
pop
sbb
push
hlt
jecxz
lret
jno
pop
pop
xlat
xor
in
xchg
and
loope
pusha
mov
cmpsb
loop
pop
pop
add
mov
les
sarb
lods
jl
les
push
call
ja
jmp
cmp
add
scas
repz
out
pop
adc
loopne
jmp
pop
sub
xor
je
lds
sbb
lret
mov
out
es
add
ja
add
adc
aaa
mov
out
xchg
out
pop
or
shrb
cmc
mov
mov
push
push
push
dec
inc
pop
mov
mov
mov
xchg
shr
pushf
pop
aaa
sub
sbbl
xchg
int3
or
pop
jae
ss
xchg
out
mov
test
stos
push
out
push
sbb
xor
jl
and
sub
add
or
sub
enter
push
add
js
test
in
pop
mov
clc
jnp
out
and
sub
xor
stc
mov
adc
test
inc
cmp
mov
mov
dec
push
dec
jle
movsl
mov
mov
cli
andl
xchg
adcb
bound
icebp
out
jl
dec
pop
ret
sub
cmc
inc
dec
ss
mov
test
push
mov
and
orl
ljmp
mov
xchg
fucomp
mov
mov
stos
sbb
jne
mov
rclb
test
pop
shrb
psubusw
outsb
stos
dec
mov
mov
mov
lcall
jno
jno
dec
dec
insl
mov
mov
or
add
fcomps
pop
and
dec
sbb
dec
cwtl
inc
lods
jge
stc
xchg
rcrb
mov
inc
lcall
fadd
mov
cmp
shr
xchg
fwait
scas
inc
mov
aad
mov
pop
mov
std
in
xchg
ljmp
fs
repz
and
lods
inc
lahf
push
dec
std
rorb
xlat
mov
lods
clc
xchg
mov
movl
push
dec
add
aaa
push
mov
adc
sar
lods
test
lods
loope
enter
and
pop
push
cmp
xchg
jg
sbb
mov
mov
repz
add
add
lea
xchg
jecxz
leave
cmpsb
push
or
sti
lret
shlb
es
cmp
mov
aas
cli
daa
loopne
mov
imul
jo
cmp
jle
sbb
and
mov
mov
in
sub
mov
push
cmp
lds
inc
adc
add
sbb
sti
or
mov
or
sub
jnp
push
pop
ret
idivb
out
int3
pop
mov
jo
notb
cli
jbe
push
sub
jns
inc
cmp
clc
jp
xlat
push
sub
push
fmull
adc
pop
mov
dec
and
popa
pop
dec
sbb
cmp
pop
fistl
pop
ret
stos
mov
in
mov
lret
cmc
popa
stos
mov
mov
sahf
out
inc
xchg
adc
xor
push
insl
lds
iret
mov
inc
xchg
lret
les
mov
insl
xor
push
adc
mov
int3
add
fcomps
in
inc
mov
nop
adc
add
mov
sbb
mov
pop
lods
test
push
xor
inc
jno
sub
sub
fildl
cmp
cltd
or
cmovl
cltd
dec
inc
cmp
push
ja
test
out
daa
cmc
push
stc
dec
mov
sti
rcrl
sbb
sub
test
xor
sub
fcomp
mov
enter
lret
add
mov
xor
les
dec
xchg
pop
xchg
das
push
sahf
adc
cmpsl
push
pop
icebp
jno
jnp
pop
aas
push
dec
inc
cs
mov
test
mov
and
mov
adc
fsub
xchg
jno
jl
jg
and
mov
sub
js
jnp
lret
adc
icebp
je
push
into
xchg
mov
fwait
or
and
push
sub
dec
adc
int
xor
jne
sbb
enter
and
fnstenv
add
push
push
aas
xchg
iret
scas
mov
adc
push
loop
mov
scas
xchg
pop
xchg
jne
sub
pop
fildll
dec
jg
lcall
scas
push
xchg
or
int
std
jg
fs
inc
mov
in
pop
mov
movsl
incl
jp
adc
hlt
mov
in
xor
cltd
out
in
cmp
aaa
adc
push
iret
jb
cwtl
insl
movzwl
dec
scas
idiv
stos
stc
leave
lahf
decb
push
dec
addr16
ss
push
arpl
outsl
in
xor
out
add
add
jl
outsb
popa
addr16
js
addr16
mov
and
test
jmp
pusha
xchg
inc
adc
roll
ss
push
mov
enter
add
fistps
mov
fisttps
leave
lods
test
sbb
ljmp
iret
xor
sti
subb
aad
jl
pop
pusha
cmp
pushf
rcrb
mov
jl
outsb
push
or
pop
les
das
popa
mov
cmp
mov
std
lcall
or
lahf
lahf
loopne
jge
hlt
and
sti
pop
push
mov
int
faddl
inc
in
ljmp
cmp
loopne
add
ret
jle
mov
leave
jge
and
add
cmp
ljmp
daa
mov
repnz
mov
push
xor
sbb
adc
test
push
lods
cwtl
subl
mov
cmp
sbb
push
icebp
adc
mov
out
add
cs
out
test
ret
lcall
sub
fstpl
cmp
xchg
lcall
cmp
in
push
js
cli
xchg
cmp
ljmp
out
dec
clc
push
in
out
push
out
rcll
popa
sbb
inc
push
push
mull
mov
sbb
jecxz
scas
xor
dec
stos
xor
cmp
test
in
adc
cwtl
mov
cmp
pop
xor
xlat
pop
and
fs
fidivl
inc
stos
orl
xchg
lods
outsb
cs
outsl
imul
mov
rorl
adc
mov
arpl
mov
nop
movsl
lods
add
push
and
daa
inc
jnp
jg
sub
jb
test
test
pusha
cmp
mov
cltd
or
fs
call
lea
mov
ds
jmp
xor
arpl
dec
test
je
lods
cmp
or
jae
mov
enter
mov
aaa
adc
sub
ror
and
jp
sub
or
inc
dec
test
dec
rolb
lods
push
jne
push
scas
xor
jge
push
sub
dec
cmp
jmp
notb
cmp
mov
gs
mov
jmp
mov
test
xchg
sub
sbb
mov
or
pop
push
out
mov
lds
cmp
cmpsb
push
sbb
xorb
pop
pop
xlat
adc
dec
popa
jmp
dec
sub
or
mov
outsb
jno
sbb
cli
mov
pop
ljmp
xchg
add
test
out
sub
stc
or
sub
or
cmpsb
jecxz
lret
pop
and
cwtl
dec
mov
push
jae
repnz
loop
mov
or
mov
loopne
dec
add
add
push
xor
inc
xchg
jmp
loope
mov
and
jg
xor
mov
mov
aaa
xor
je
adc
add
jp
push
push
cmc
jp
pusha
jge
sub
push
or
rclb
push
mov
ficoms
js
cmp
mov
popf
sbb
mov
pop
push
cmpsb
dec
cmpsl
gs
cmp
mov
adc
mov
cs
jbe
sbb
push
into
pushf
add
enter
sub
mov
mov
hlt
adc
push
push
add
sub
repz
shlb
xlat
das
mov
mov
fimull
out
leave
mov
adc
movsb
dec
inc
or
cwtl
loopne
jne
cli
out
cmp
ret
loopne
out
ret
lahf
ja
mov
dec
jno
add
inc
aas
and
or
clc
fbstp
sbb
pop
jae
jmp
icebp
jecxz
fcmovnbe
ret
push
ficomps
cli
aas
ret
pop
push
std
fnstenv
outsl
insl
inc
inc
adc
jge
xor
scas
push
inc
mov
sub
push
sbb
push
inc
mov
lcall
mov
ret
jnp
lahf
int
mov
jns
mov
mov
jo
mov
incl
cwtl
xor
mov
or
fwait
mov
adc
in
cbtw
push
shll
mov
mov
daa
int
sbb
cmpsl
adc
pop
cmp
xchg
dec
inc
insb
pop
sub
push
mov
mov
inc
cmp
lods
jg
das
jl
mov
test
add
cmp
shl
cltd
nop
mov
lea
adc
movsl
push
sti
sbb
pop
rol
jb
push
dec
mov
mov
xchg
lret
mov
das
pop
mov
cmp
jle
test
mov
lcall
xor
jns
and
nop
jle
aad
mov
decl
sbb
les
xchg
bound
ficompl
insl
cmp
daa
and
lock
xchg
in
and
pop
mov
sbb
loop
in
roll
sahf
sub
mov
mov
lods
insb
ffree
fwait
iret
cwtl
jmp
xor
jae
fsubrl
sti
shlb
add
and
or
fldcw
sbb
dec
test
xor
xchg
in
jb
outsl
lock
sub
xchg
insl
and
pop
out
dec
cli
test
roll
mov
sub
xor
push
and
cmpsb
fcmovbe
push
sbb
test
test
pop
scas
nop
adcb
inc
aaa
hlt
fwait
test
pusha
adc
ljmp
pop
sub
pop
jl
inc
mov
adc
insb
lret
push
imul
mov
test
fwait
sbb
insl
fnstsw
icebp
add
imul
inc
insb
hlt
sahf
pop
sbb
ret
or
lds
pusha
lods
icebp
jg
lods
sub
adc
rorb
jnp
mov
jne
scas
in
jge
das
jp
jge
mov
sub
lret
inc
pop
mov
xchg
dec
orb
pop
xchg
sahf
pop
ja
in
loopne
stc
test
ds
nop
in
fsub
dec
stos
sub
push
add
xchg
cmp
adc
ss
inc
loope
adc
pop
push
roll
cmp
mov
jae
mov
vpmadcsswd
cmp
sbb
repnz
testb
pop
add
aaa
push
add
push
sbb
xchg
icebp
bound
arpl
cmp
ret
in
mov
cli
push
cmpps
dec
cwtl
add
data16
xchg
movb
bound
lods
jle
mov
mov
test
es
cs
push
pop
xor
cmp
movsb
rcrl
mov
xorl
pop
xchg
push
ret
mov
push
inc
push
xchg
inc
sti
xchg
das
roll
pop
inc
mov
int
mov
lods
mov
and
popa
push
or
insb
or
push
jecxz
or
mov
add
leave
pop
pop
outsl
mov
add
xchg
mov
pop
xor
test
out
imul
inc
lcall
push
or
xchg
xor
dec
mov
cld
adc
cwtl
ss
pusha
movsl
dec
inc
in
xor
xchg
mov
jge
in
dec
adc
les
push
icebp
loopne
les
shr
sbb
dec
jnp
adc
jbe
ss
call
test
jno
in
movsb
mov
jg
pop
popf
inc
pop
test
or
jecxz
psrlw
gs
cwtl
ss
scas
scas
push
xchg
fdivrl
pusha
shl
add
push
into
idivb
adc
pop
fwait
dec
sarl
fsubrl
rorb
lret
adc
fnstenv
add
fs
gs
push
adc
push
push
dec
mov
orb
iret
dec
and
ds
inc
sub
xchg
pop
mov
sub
inc
shrb
mov
in
sub
and
and
popa
jg
loopne
stos
sub
xchg
mov
mov
ret
jmp
lods
jne
push
cmp
jbe
cmpl
xchg
into
jb
lea
mov
sbb
jge
mov
mov
test
arpl
lret
xor
sti
inc
add
add
sarl
pop
scas
int3
mov
rcrb
pop
pop
push
mov
jns
pushl
ss
das
lahf
sub
xchg
sbb
push
cli
xor
and
fnop
addr16
ja
push
add
fwait
jae
jp
aad
in
and
adc
fwait
data16
loop
mov
lock
scas
test
sbb
inc
decb
cmp
clc
repnz
inc
pop
xorl
dec
mov
shl
dec
sub
movsl
das
insl
cli
sub
or
xor
sub
or
jne
rcl
cmc
add
push
out
mov
sbb
add
inc
hlt
pop
add
hlt
pop
shll
pop
xchg
xchg
mov
sub
sub
add
jb
flds
dec
add
mov
in
mov
dec
xlat
lea
adc
in
idivl
sbb
and
sub
xor
std
sub
int3
aaa
cmp
enter
sti
xor
insl
stos
mov
in
jmp
mov
mov
out
and
add
stos
in
mov
in
into
push
push
notb
jno
push
fwait
sbb
pop
aaa
adc
inc
and
pop
jae
adc
lret
mov
xchg
mov
or
sbb
insl
sbb
mov
jo
ljmp
fiadds
xchg
adc
mov
lea
insb
mov
in
dec
cltd
dec
add
jecxz
jae
out
xchg
sub
push
xor
xor
adc
iret
inc
fisttpll
xorl
sbb
sub
sarb
mov
and
mov
out
test
sub
inc
mov
inc
hlt
lahf
lahf
xchg
outsb
rcrl
inc
rcll
insl
in
adc
scas
or
adcl
arpl
push
cmp
mov
xchg
in
jbe
sbb
lret
fists
add
push
xlat
leave
mov
sarl
fcoml
xchg
dec
push
mov
fadds
and
adc
das
pop
inc
ficomps
lea
dec
stos
mov
jl
push
sub
cltd
popa
adc
mov
pop
je
scas
jno
stos
and
or
insb
shrb
and
jo
mov
hlt
fistpll
xor
inc
mov
and
mov
xorl
adc
test
int3
add
add
sub
jge
das
test
or
cli
pop
cli
pop
cmp
mov
cmpsl
fisttpl
pop
mov
mov
repnz
sbb
push
pop
jbe
fldcw
lods
mov
jno
jno
pop
ret
pop
push
push
cmpsl
cmp
mov
jp
sub
sub
xorb
jp
adc
xchg
outsb
in
aas
pop
test
stc
push
das
ljmp
cmpb
ss
iret
mov
shl
pop
mov
mov
pop
xchg
push
in
mov
mov
imul
dec
mov
push
push
jp
scas
xchg
icebp
mov
loop
mov
lods
popa
fiaddl
sbb
ljmp
inc
cli
or
xchg
dec
xchg
dec
test
ret
movsb
ja
sbb
dec
mov
push
sbb
push
add
fldt
xchg
and
call
pop
rcl
or
leave
insw
push
jns
mov
jb
int
sub
cwtl
xchg
cmpl
call
out
out
fbstp
pop
inc
inc
pop
inc
test
ret
js
inc
jb
xor
int3
ficomps
mov
int
jae
mov
mov
arpl
daa
push
xchg
pop
add
push
out
xchg
mov
cmp
add
lret
mov
dec
or
xchg
or
test
jne
xor
jb
fisttpll
mov
sti
pop
repz
int
mov
and
lahf
dec
jle
xchg
in
outsl
out
sub
jnp
add
mov
xchg
inc
jbe
sub
test
jge
in
enter
scas
pop
sub
shr
in
pop
cmp
addr16
pop
mov
ret
loope
ret
push
and
xchg
cld
sti
add
pusha
jne
dec
jns
push
inc
mov
sbb
adcl
mov
push
scas
ret
xor
das
das
sahf
push
push
inc
insb
mov
cs
and
pop
shll
xor
lea
sbb
data16
iret
mov
and
aaa
adc
pop
mov
sbb
repnz
or
add
sbb
nop
nop
addl
sbb
negl
mov
sar
and
push
mov
pop
imul
ret
jo
sub
repnz
adc
xchg
mov
jge
ljmp
in
out
je
popa
xchg
sbb
test
push
push
aas
rolb
inc
leave
pop
stc
mov
mov
pop
adc
adc
and
inc
dec
js
mov
test
ficomps
ljmp
inc
adcb
xchg
cmpsb
stos
inc
test
sar
mov
push
xor
xlat
cmp
add
out
out
xor
pop
or
aaa
xor
lea
cmpb
int3
roll
or
fldenv
loope
and
outsb
in
pop
cli
lret
lahf
gs
iret
and
stc
jo
adc
sub
add
or
push
xchg
pop
pop
cmp
and
jae
jmp
push
mov
std
sub
fs
ret
insb
sahf
cmp
push
pop
xor
insl
repnz
jg
mul
adc
or
mov
rolb
les
rol
popf
mov
jmp
add
mov
adc
fnsave
jmp
fwait
add
cmp
sbb
add
xchg
inc
adc
into
ret
sub
cmp
fsubs
dec
push
aaa
cli
and
out
ficoml
loope
and
insb
sti
int
shl
sbb
cmp
test
pusha
adc
cmp
mulb
xor
je
ret
pop
imul
push
mov
pop
fiadds
movsl
scas
jl
cmp
outsl
stos
addr16
cmp
xor
cmpsl
outsl
aam
adc
data16
push
and
test
jmp
or
stc
add
aad
iret
sti
sbb
sbb
popf
or
aas
cltd
iret
fdivrl
dec
pop
test
adc
cwtl
std
in
xchg
lock
and
pop
dec
sahf
sbb
fistpll
push
out
sti
sbb
scas
adc
mov
jg
lea
jp
xchg
iret
pop
inc
push
jg
dec
mov
insb
sahf
test
fsubr
mov
push
push
lcall
in
test
cli
adc
fisttpl
cmp
aad
or
and
mov
dec
pop
pop
jo
fs
cmc
sarl
addr16
roll
jno
imul
ds
aam
mov
stos
repnz
or
sub
mov
adc
adc
cmp
mov
int3
cmp
xchg
xorb
push
bound
popa
inc
or
icebp
icebp
jge
push
push
out
pop
push
cmp
mull
out
ss
mov
lock
in
movsb
jns
in
mov
js
and
fdivr
je
iret
fimull
es
mov
shl
and
and
sub
ljmp
js
shl
lcall
out
push
pop
inc
xor
std
mov
out
mov
test
pop
es
push
mov
jecxz
sbb
lea
jecxz
xchg
popfw
adc
enter
jl
mov
jmp
and
shl
scas
cmpsb
xchg
stos
adc
push
mov
in
dec
sub
push
pop
stos
adc
xor
data16
adc
xchg
push
adc
or
add
add
sub
xchg
fists
and
ret
sbb
dec
push
lods
xlat
xchg
push
scas
push
mov
add
xor
sti
mov
mov
mov
fwait
popa
adc
fs
addr16
mov
push
lea
mov
lahf
hlt
xchg
mov
adc
adc
cltd
push
lds
pop
pop
pop
popl
inc
mov
ret
sbb
test
std
adc
fisttpll
pop
addr16
or
aas
inc
xchg
add
idivb
cmpsl
lahf
int
sti
mov
pop
aam
dec
or
sbb
test
mov
pop
pop
cwtl
iret
aas
xchg
fst
out
lock
andl
incl
ss
cli
sbb
rorb
and
push
push
sub
xor
mov
cld
in
test
sar
xor
cmp
fsincos
cmp
fisubrs
movsb
pop
rclb
and
jae
push
in
jo
xlat
sbb
loope
jne
aaa
and
shr
dec
loopne
sbb
into
sub
pop
ret
and
push
push
jecxz
icebp
out
mov
xchg
jns
jp
pop
jb
sbb
cwtl
dec
push
mov
adc
push
xchg
test
mov
dec
jae
or
popf
xchg
pushf
test
mov
mov
imul
daa
mov
repz
sub
insl
sub
cmp
.byte
.byte
adc
andb
add
add
loopnew
mov
mov
loop
sub
jge
mov
movsb
stos
in
rcrl
lock
jae
sbb
jmp
mov
es
jmp
or
push
imul
sub
lcall
push
mov
sbb
dec
fistpl
add
ds
add
mov
push
fldcw
or
test
lcall
int
movsl
lcall
jo
and
jp
popf
adc
add
sbb
loopne
aad
and
push
push
test
std
es
sbb
and
cwtl
movswl
outsl
int3
cltd
andl
push
inc
and
xor
gs
cli
push
inc
pop
leave
imul
mov
adc
pusha
sub
jns
stc
xchg
cmc
lods
inc
or
jge
pop
pop
and
mov
adcb
cli
rcr
mov
ja
movsl
inc
movsb
pop
adc
ret
xchg
adc
cmpsb
ret
imul
xchg
cwtl
fwait
dec
and
sbb
leave
addl
xor
outsl
pusha
inc
push
xor
or
rol
pop
leave
cmp
push
mov
dec
clc
mov
dec
add
gs
jae
in
jl
insb
cmp
push
xchg
xchg
nop
cmp
dec
out
mov
pop
xchg
or
push
pusha
cmp
scas
mov
xchg
xchg
test
stos
je
nop
aaa
cs
stc
adc
out
sarb
imul
dec
lret
div
jp
stc
out
clc
or
sub
cmpsb
fdivs
mov
pop
scas
loope
ljmp
inc
bound
fnstsw
jg
in
sbb
push
popf
aaa
subl
repnz
add
orl
sarb
mov
and
aas
cmp
mov
push
dec
adc
andb
add
add
fisttps
clc
pushf
mov
sbb
ret
ret
or
out
repz
lea
push
cmpsl
jecxz
cld
fs
cmp
mov
cmp
aaa
xor
or
mov
mov
mov
in
xlat
addr16
jecxz
mov
js
int3
adcl
stos
mov
fdivl
fldcw
add
mov
mov
enter
out
dec
lods
das
adc
pop
popf
in
inc
and
mov
cmpsb
inc
push
sahf
dec
scas
clc
insb
xchg
arpl
jl
mov
cld
les
xchg
push
cmp
je
xchg
leave
pusha
pusha
pushw
xchg
pusha
fwait
or
clc
dec
mov
ja
add
dec
pop
and
mov
aad
mov
js
pop
repnz
cmp
cmp
out
orb
jmp
add
or
sub
subb
dec
inc
popa
faddl
gs
lahf
push
test
sbbl
mov
sub
in
inc
push
push
push
in
mov
fdivp
mov
iret
push
daa
or
adc
mov
sub
jo
movsl
push
dec
mov
mov
pop
sub
xacquire
jno
mov
fwait
gs
and
clc
push
jp
movsb
jae
mov
mov
jmp
pop
mov
jp
jge
in
inc
mov
fisubl
xor
hlt
jge
fildll
push
std
mov
jg
mov
sarb
fnstcw
icebp
mov
add
fnsave
in
pop
adc
fs
jp
xchg
imul
dec
out
adc
xor
xor
dec
filds
imul
stc
in
dec
mov
mov
add
and
dec
inc
cmp
fs
.byte
.byte
cwtl
das
sub
add
adc
mov
test
or
sbb
lret
enter
lds
lds
in
andl
add
dec
xor
arpl
aam
lods
fdivs
inc
dec
out
stos
cmp
test
out
push
imul
mov
xchg
lds
frstor
jmp
dec
adc
jnp
hlt
ss
and
pop
mov
adc
jnp
add
fimull
jno
push
jb
loope
inc
pop
pop
ds
jmp
and
lahf
pushf
in
dec
mov
or
aaa
fcompp
mov
out
es
xor
sub
jb
ret
pop
ljmp
jmp
xchg
shlb
aad
outsb
jno
lret
ja
int3
stos
cmpsl
iret
pop
ja
divb
mov
inc
mov
and
mov
and
dec
mov
les
mov
cmp
push
cmp
push
pop
nop
push
xor
in
mov
push
scas
cmpsb
cmp
lcall
push
push
sahf
movsl
fdivrs
xchg
or
cmp
mov
cmc
add
aaa
call
sub
fimull
adcb
xchg
inc
out
iret
movsb
push
push
mov
fdivs
mov
out
arpl
pusha
xor
ds
repnz
popf
lret
add
fstl
fwait
aaa
dec
and
or
push
add
jle
sahf
adc
sbb
push
fs
dec
dec
aaa
or
clc
sarl
int3
sbb
aam
aam
bound
pop
and
pop
and
nop
push
daa
je
mov
xor
cld
pop
fcmovnbe
mov
add
add
or
arpl
cmp
xor
and
mov
or
cs
mov
mov
jno
or
inc
shlb
push
push
add
xor
and
xchg
dec
popf
push
add
test
or
push
jnp
xor
std
mov
repz
dec
inc
stos
mov
push
mov
cli
lds
xchg
or
nop
xchg
stos
pop
sbb
ljmp
loope
mov
adc
and
lcall
and
popf
or
lret
mov
ret
test
xor
sti
mov
cmp
cs
xor
push
test
pop
xchg
hlt
mov
push
out
imul
fstpt
stos
hlt
jmp
xchg
push
call
inc
mov
ret
jl
mov
add
mov
lret
xchg
ret
jb
and
pop
pop
sbb
iret
xchg
sarb
add
push
jnp
mov
pop
mov
jecxz
inc
into
and
jge
aas
stos
xchg
mov
mov
dec
lds
test
sub
mov
cmpsb
cmp
push
xor
test
jnp
divl
js
xchg
or
cwtl
data16
cmp
ja
xor
and
nop
adc
inc
push
xchg
xchg
jg
mov
sbbl
xchg
sub
adc
pop
or
mov
cmpsl
push
ficomps
xchg
imul
aad
sbb
sar
into
scas
ret
leave
pushf
mov
pop
inc
sbb
jbe
cmp
imul
es
cmp
lahf
pop
fdiv
lcall
fdivrl
push
add
call
loopne
test
xchg
mov
pop
das
test
mov
pop
mull
mov
xor
sub
ljmp
push
stc
out
and
das
and
mov
xchg
mov
outsb
loope
fistps
loopne
xchg
sub
jge
fdivrs
stos
out
push
adc
repnz
inc
jb
icebp
mov
mov
mov
and
pop
pop
mov
je
and
dec
sub
dec
call
in
sarb
test
inc
cltd
push
iret
sub
hlt
lret
scas
xchg
mov
dec
enter
mov
not
push
in
xor
mov
cmp
xor
call
adcl
aam
mov
imul
cmc
jnp
inc
adc
sbb
sbb
add
adc
or
lcall
testl
lahf
inc
lahf
jb
repz
movsl
outsb
and
stos
cmp
pop
lahf
stc
xchg
aas
cmp
inc
xor
jecxz
cmp
jbe
add
fucomp
int
hlt
les
mov
sub
mov
adc
imul
lret
call
popa
xchg
cmpsl
and
ja
dec
jmp
nop
jo
mov
ss
out
and
inc
mov
mov
aad
push
push
push
cmp
push
into
dec
mov
xchg
and
xchg
outsw
call
std
add
sub
xor
pop
pusha
lahf
mov
mov
pop
mov
out
xchg
fadd
test
sub
dec
loop
push
adc
pop
mov
std
xor
dec
scas
sub
lret
cwtl
std
pop
dec
inc
pop
push
insb
fsubs
xchg
adc
adc
scas
mov
or
scas
lods
jmp
repnz
mov
xor
xlat
pop
rclb
mov
repnz
dec
jg
in
xchg
or
mov
jo
dec
arpl
mov
mov
popa
mov
test
out
hlt
lret
dec
loop
sbb
dec
fcmovu
negl
or
push
clc
push
imul
cmp
xchg
subb
mov
jo
shrb
movsb
hlt
adc
pop
xchg
fildl
jl
sub
mov
adc
fcoms
cmp
cmp
stos
lods
sbb
imul
mov
rcrb
sub
sub
aas
pop
cmp
ja
imul
jns
aad
notb
mov
leave
jbe
imul
nop
loopne
sbb
sarl
fs
jne
loope
fwait
mov
pop
push
mov
lock
in
jb
sbb
cld
mov
fisubrl
adc
in
mov
arpl
pop
cs
icebp
and
stos
mov
testl
or
scas
cmp
rolb
rcrb
dec
addr16
pop
mov
mov
popa
or
pop
xchg
xor
mov
xor
test
repnz
dec
lods
adc
test
dec
and
mov
pusha
in
loopne
imul
inc
loop
jae
pop
jne
sbbl
add
fwait
mov
push
adcb
int3
int
pop
add
mov
jb
inc
cmp
cmp
int
sub
outsb
push
imul
outsb
stos
pop
pushl
xchg
pushw
test
rcll
mov
push
in
mov
fcmovnb
mov
pop
add
fucomip
hlt
lea
mull
push
xchg
mov
mov
lahf
icebp
jbe
or
js
fwait
mov
jg
fisttpll
mov
add
mov
ds
cmpsb
rcrl
jecxz
xchg
popf
push
cmpsl
ljmp
cmp
nop
pop
lea
pop
inc
out
push
sbb
or
testl
or
outsb
xlat
mov
insb
sarb
xor
pop
pop
xorb
cmp
mov
pop
adc
test
xor
sub
jno
dec
jle
cmpsl
jbe
popf
aad
cmovne
aam
mov
push
scas
cmpsl
inc
arpl
sahf
inc
rcl
loop
ds
or
jae
fs
push
test
xchg
inc
cmp
jle
lods
cmp
mov
pusha
imul
or
iret
stos
xchg
ret
daa
pusha
arpl
loopne
pop
pop
push
cmpsl
andb
xchg
fdivrl
dec
ret
inc
ficompl
adc
sbb
push
dec
cwtl
pop
arpl
sub
out
enter
or
mov
aaa
jp
pushf
fldlg2
push
out
fcmovbe
ss
int3
fwait
je
outsl
aas
xor
test
jge
inc
pop
sbb
iret
ret
dec
mov
cmp
jmp
jns
int3
xor
xor
xchg
es
pop
sahf
fsts
xchg
aad
pop
push
push
out
adc
xchg
adc
fdivr
out
aas
pop
int3
rolb
ds
sbb
pop
stc
inc
not
out
inc
push
loopne
cmpsl
rol
shr
in
std
mov
jne
push
jo
and
mov
pop
pop
mov
jl
add
mov
stos
jg
push
and
dec
out
call
aaa
pop
mov
and
sbb
pop
sbbb
leave
dec
fildll
dec
xor
enter
dec
addl
mov
push
imul
lods
mov
xor
push
xor
push
adc
bound
mov
dec
std
nop
sub
dec
push
mov
lds
frstor
pop
ds
xchg
jo
dec
sbb
mov
jne
adc
adc
loop
dec
mov
cmp
movsl
fwait
ss
ja
sub
cmp
mov
mov
or
or
cmpsb
dec
add
pop
jmp
xchg
outsl
xchg
int3
dec
lds
aas
pop
jmp
mov
lahf
aam
daa
popf
mov
lcall
fmuls
dec
adc
test
push
int
jns
roll
or
cli
add
clc
test
arpl
xchg
sbb
outsb
das
rorb
adc
fcomip
cld
inc
mov
adc
xchg
inc
inc
push
xor
bound
aaa
add
bound
xor
xlat
adc
fldt
inc
je
pop
int
fisubs
rcll
and
xchg
cltd
cmp
dec
mov
inc
or
jne
addl
orb
cmp
shrb
cltd
cmp
xor
dec
cmp
or
shll
mov
rorb
loope
xchg
cmp
inc
dec
ret
xorb
cmp
out
sub
inc
mov
dec
cli
icebp
xlat
pop
movl
jmp
mov
mov
inc
xor
dec
xlat
fwait
xor
std
call
inc
lcall
iret
pop
aad
mull
jb
mov
xor
test
popf
test
cmc
imul
cli
jnp
mov
daa
into
jo
xchg
rcrl
in
cwtl
in
mov
pushf
xor
cmp
imul
inc
mov
scas
insl
gs
ja
aas
lods
sbb
mov
je
add
push
adc
mov
sbb
push
fadd
mov
sub
into
jmp
into
push
pop
sub
cmc
push
lods
jmp
push
jle
aad
and
lds
loop
jne
dec
outsb
scas
sub
push
leave
fnsave
js
push
inc
push
push
jp
push
xchg
dec
mov
mov
lods
int
jo
sahf
sub
int3
cmc
sbb
fdivrl
pop
mov
mov
xchg
sub
ljmp
dec
and
test
mov
or
xor
mov
dec
nop
pop
adc
mov
pop
mov
subb
mov
push
fdivl
imul
sub
lret
adc
out
push
inc
sbb
js
leave
push
xchg
mov
xchg
xor
pop
sbb
xor
ficoml
popf
leave
jp
mov
or
ja
jns
out
mov
rolb
icebp
shrl
mov
jo
popl
movsl
add
dec
arpl
pushf
std
xchg
adc
push
add
jno
mov
loopne
shll
mov
ret
push
add
jbe
pop
gs
int3
in
aam
addr16
mov
sub
inc
add
mov
ficoms
xchg
addr16
pop
lcall
nop
push
xchg
mov
inc
push
mov
lock
and
addb
js
and
out
mov
rol
xlat
nop
and
and
pop
fwait
push
ret
jl
cmc
cmpb
lods
cmpsb
adc
pop
dec
sbb
adc
mov
loopne
test
jbe
ds
adc
push
fucomp
loopne
cltd
lret
dec
sbb
add
sbb
cmpsb
pop
shll
lods
jno
or
and
adc
cltd
mov
les
orl
outsb
dec
pop
cmp
je
sub
dec
ret
sub
and
sbb
dec
loope
repnz
mov
cltd
cli
js
clc
push
mov
and
cmc
jge
push
and
mov
and
lods
inc
inc
insl
mov
and
in
sub
nop
mov
sub
jp
adc
push
ljmp
jle
mov
mov
jo
mov
lret
or
mov
adc
push
sub
in
cld
inc
imul
xor
loopne
xchg
andb
aas
jmp
xchg
and
push
jp
repz
adc
fmul
bnd
into
mov
sub
shlb
xchg
stos
pop
push
pushf
adc
push
lods
mov
or
hlt
jo
mov
xor
jmp
repz
fstl
jle
or
popa
pop
pop
test
jmp
cmp
addr16
push
cmpsl
cmp
inc
insb
xchg
sub
fwait
sahf
xor
inc
shll
xor
aas
test
xchg
xchg
mov
je
cmp
icebp
pop
test
push
mov
xor
dec
lods
in
fs
int3
addr16
sub
out
loopne
and
jp
out
sbb
cwtl
xor
insb
inc
inc
adcl
and
push
adc
push
pop
mov
fisttps
mov
movsl
mov
hlt
arpl
test
movsl
movsb
or
mov
fcmovnbe
mov
ds
gs
xchg
mov
jle
add
js
jbe
sub
adc
dec
xlat
sbb
adc
aad
pop
pop
imul
sbb
jmp
rclb
push
mov
xchg
mov
pop
aaa
mov
xchg
mov
sbb
push
loop
sub
adc
pop
lcall
inc
sbb
push
add
dec
movsb
push
aad
rorl
mov
test
lock
push
cmp
int
pusha
in
mov
xchg
gs
sub
aam
xchg
xor
or
jnp
mov
sti
push
icebp
push
push
fs
addb
xchg
or
sarl
mov
repz
fldl
adc
sbb
outsb
mov
cmp
adc
jl
push
rorl
add
mov
cmpb
fisttpl
aad
pop
inc
call
cmpsl
stos
pop
mov
jbe
dec
and
mov
pop
xorl
pop
fnstenv
pop
bound
lods
dec
and
and
adc
dec
ret
call
mov
and
sub
pop
dec
adcl
jb
dec
mov
clc
mov
rol
xor
sbb
fistpl
lods
and
xor
pop
aas
lahf
fistps
xorb
and
xchg
sbb
leave
in
pop
leave
or
mov
shl
jmp
leave
mov
jb
dec
add
mov
js
mov
push
loopne
popf
adc
nop
inc
scas
push
and
idivb
mov
in
andl
push
fsubs
mov
xchg
sbb
and
icebp
fwait
fwait
repz
adc
add
xchg
cmp
rorb
test
push
jo
push
push
or
xchg
aam
sbb
mov
mov
out
dec
cmp
insb
or
cld
push
mov
pop
lock
or
rolb
xlat
out
add
mov
cmp
sub
popa
mov
fs
cmp
lods
inc
lahf
ljmp
ret
sbb
stos
imul
xchg
pop
mov
push
pushf
push
mov
jle
jmp
sbb
cmc
inc
push
or
push
cmc
sti
xor
add
cld
fildll
jne
sub
pop
push
pop
mov
stos
lods
loope
and
add
add
inc
inc
sbb
nop
inc
push
sar
out
gs
adc
pop
mov
int3
mov
jo
pop
aas
das
pusha
adc
push
cmp
dec
cmpsl
dec
lea
fildll
pop
inc
cmp
loopne
in
jbe
lcall
xchg
stos
test
sub
ja
shlb
loope
mov
insb
mov
fwait
jg
push
cmp
and
jo
adc
data16
cmpsb
mov
shrl
shll
push
jg
xchg
push
ljmp
mov
inc
push
pusha
mov
sbb
inc
rcll
lods
pop
jmp
movsl
xchg
lds
and
or
les
xor
lret
rcll
popf
jne
mov
enter
daa
push
add
mov
pop
dec
loopne
and
fsubl
mov
push
xor
ror
mov
in
or
dec
sub
rcrb
dec
pusha
xchg
xchg
out
ret
and
loopne
test
imul
lahf
movsl
dec
ret
push
mov
cld
sbb
jmp
sbb
or
test
mov
jmp
repz
in
jno
add
jle
subl
lock
inc
sub
add
sub
push
inc
jb
sub
jae
js
ret
push
push
movsl
in
sub
jnp
js
inc
out
mov
repnz
cli
mov
ror
xor
shrb
xor
push
push
mov
cmp
shlb
fiadds
push
push
outsl
test
outsb
loopne
ds
fsubrl
test
shl
cmp
xchg
insl
mov
mov
jecxz
mov
call
mov
xchg
inc
mov
xchg
hlt
and
mov
fs
pop
out
push
xor
stos
cmc
mov
mov
push
pop
add
sbb
pop
add
push
jns
xor
negb
jbe
xor
stos
aad
mov
push
into
xchg
std
rorb
das
in
mov
in
inc
jl
dec
dec
outsl
push
repnz
and
fimull
push
cmpsb
test
aaa
stc
daa
outsb
jo
push
popf
dec
outsl
pop
pop
ds
and
xchg
inc
addr16
vpcomq
shrb
daa
sbb
incb
and
xor
push
andl
out
mov
into
pusha
enter
cs
and
js
test
into
imul
aaa
lds
insb
lret
jl
mov
xchg
xchg
std
jmp
lods
push
and
add
adc
cmc
decw
pop
push
fwait
push
push
push
push
pop
mov
lods
sar
loopne
adc
or
mov
inc
test
lods
dec
imul
adc
jae
cwtl
rorl
pop
fimull
sbb
xchg
adc
push
iret
jns
or
out
and
inc
xor
and
xor
push
cmc
sub
xchg
orl
mov
insl
sbb
pop
ret
scas
std
dec
pop
mov
cs
cmp
xchg
sti
sub
cltd
mov
imul
shlb
lea
cmp
push
pop
jo
mov
inc
push
in
mov
mov
pop
dec
mov
mov
mov
xchg
sbb
subb
adc
addr16
mov
out
mov
add
inc
in
dec
cmc
jno
mov
test
nop
jle
push
repnz
aaa
sub
popf
movsb
mov
dec
jns
jae
loopne
lret
cmp
aaa
sbb
mov
mov
or
cmpsl
in
push
stc
aas
cmpsb
cmp
jge
push
inc
popa
faddl
jle
flds
lret
mov
sahf
jge
das
imul
or
adc
aad
loope
jno
psrad
pop
aam
loop
mov
insb
mov
adc
andb
fldenv
mov
push
sti
pop
inc
or
mov
popf
sub
jnp
je
sub
jl
mov
xor
and
notb
mov
rcrb
dec
xchg
mov
imul
add
sub
mov
mov
xchg
mov
xor
and
xchg
pushf
cmp
test
dec
in
hlt
ds
loopne
rorl
pop
add
xchg
fmull
out
ljmp
jg
mov
cmp
fnstsw
add
and
test
pop
dec
sub
jae
pusha
call
repnz
daa
pop
lods
push
ret
push
mov
and
pop
outsb
add
imul
std
push
sti
stos
fistpl
sub
mov
xchg
or
add
push
pop
mov
imul
addl
jmp
dec
pop
pop
mov
pop
mov
and
lock
sub
mov
mov
addb
pop
lret
sbbb
es
push
out
int
movsb
xor
jns
arpl
and
aaa
push
mov
imul
fnstcw
sbb
cmp
push
je
icebp
mov
stc
hlt
xchg
test
jae
lock
push
test
mov
adc
repz
stc
mov
pushf
popa
add
xchg
xor
aaa
orb
idivl
push
es
rcr
or
or
push
xchg
cmp
pop
mov
jl
mov
repnz
loopew
popf
sbb
shrl
jbe
int
xlat
cmp
mov
inc
arpl
in
mov
sub
sub
mov
loope
mov
jmp
aad
add
jge
add
add
andb
xor
pop
in
lahf
lods
xchg
mov
stc
shr
inc
mov
das
mov
sbb
dec
mov
xchg
rcrb
or
dec
pop
dec
movsb
insl
cmp
out
loop
dec
lahf
vpcmpeqd
js
leave
enter
inc
out
loop
lcall
sahf
rolb
mov
movsb
xor
sub
in
adc
jb
sbb
add
dec
addr16
cmc
lea
jmp
adc
xor
push
aas
std
hlt
mov
or
ret
into
movsbl
repnz
xchg
jp
in
fsubl
aaa
xchg
loop
repnz
inc
scas
test
mov
int
gs
xchg
mov
insl
fnstcw
xchg
jp
shl
inc
pop
cmpsb
sbb
fmull
std
sbb
and
fmul
add
lods
aas
movsl
cmpl
jno
int3
pop
test
add
sbb
imul
push
inc
imul
stos
bound
push
or
subb
ficompl
dec
fs
inc
out
pop
or
pop
shl
clc
and
and
out
pop
pusha
cwtl
shll
popa
mov
decb
jbe
jge
aaa
mov
sub
je
ds
mov
xor
andb
repz
cmpsl
cmpsb
and
push
mov
adc
dec
push
cmc
sub
xor
out
sbb
jp
icebp
dec
insb
xlat
pop
into
dec
xor
cmp
cld
and
mov
bswap
mov
test
cwtl
mov
cmp
cs
cmp
insb
jg
bound
push
movsl
xchg
cmp
adc
cmp
subb
jg
xchg
scas
inc
and
in
stos
cwtl
jne
jp
pop
jne
push
ds
popa
xchg
xor
xlat
test
les
testb
inc
push
adcb
push
jle
adc
scas
sbb
adc
jne
je
fidivrl
xchg
fwait
push
scas
add
xlat
je
mov
pop
loopne
shlb
jbe
pop
shrb
jbe
imul
adc
pop
fsts
xlat
scas
jbe
outsb
hlt
pop
add
add
adc
gs
pop
addr16
arpl
and
push
mulb
out
in
pop
xchg
fcom
inc
aas
loopne
jb
inc
and
add
xor
push
je
dec
out
cwtl
imul
loop
sbb
shlb
cli
sbb
test
and
lods
cld
pushf
adc
mov
cmp
push
dec
loope
lods
out
jl
mov
fistpl
xor
jne
in
in
cwtl
mov
add
popf
mov
sbb
sub
test
inc
das
push
inc
jmp
test
or
ds
fiadds
push
adc
cli
and
into
in
pop
mov
movl
movsb
add
sahf
inc
dec
xlat
fadds
stos
xor
push
jne
out
add
mov
sub
lcall
rol
js
xchg
aam
mov
iret
out
fsubr
insb
div
out
insb
jle
cmp
push
push
loopne
jne
adc
imul
addr16
xchg
addb
sub
mov
sbb
mov
or
add
das
out
repz
jae
lret
add
cs
and
cs
dec
pop
mov
test
sub
push
pop
cmp
jecxz
movsl
scas
dec
rcrl
dec
int
in
xor
pop
movsb
xor
mov
fwait
sbb
and
fdivrs
std
std
push
int3
cwtl
and
int3
xor
add
pop
rclb
and
mov
mov
lods
jo
test
or
sub
aad
dec
and
or
mov
lahf
sbb
fisubl
cld
enter
dec
addr16
xor
and
retw
dec
adc
fs
dec
test
adc
loope
std
fs
dec
pop
inc
int3
mov
adc
inc
jns
jns
or
or
js
dec
in
iret
out
and
stos
inc
jmp
push
push
shlb
lea
fsubrp
add
in
and
dec
mov
sbb
mov
lods
mov
mov
mov
xchg
sub
mov
or
or
movsl
mov
stc
test
out
add
sub
mov
mov
cmpsl
sbb
mov
push
mov
cwtl
jecxz
test
and
and
xchg
mov
or
mov
fdivs
xor
xchg
movsb
stc
sub
cmc
xchg
call
loop
pop
cli
add
iret
adc
loop
fisubs
in
sbb
dec
add
mul
testb
bound
jg
ret
notl
in
cmc
popf
jp
inc
rol
popa
das
mov
xor
sbb
dec
mov
outsb
cs
imul
cs
add
dec
mov
cmp
out
xor
insb
jns
std
inc
clc
jne
out
test
cmpsb
ret
xchg
mov
jp
pusha
cltd
aas
cld
cmp
dec
xor
call
fidivrl
xor
std
mov
pop
mov
out
cmp
orl
pop
pop
adc
push
push
shrb
add
insb
arpl
mov
idivb
arpl
xlat
out
test
add
pop
xchg
pop
mov
fisubrl
insb
inc
push
sahf
fsubs
push
push
jmp
dec
push
repz
dec
pop
mov
jb
sbbl
fistl
lods
mov
rep
lods
clc
stc
xor
popf
sub
rcl
mov
data16
fsubrs
mov
out
data16
jb
pop
inc
or
dec
sbb
xor
dec
dec
xor
fldcw
push
push
jb
outsl
jne
xchg
mov
setnp
outsl
popf
fmull
stos
or
mov
mov
dec
xlat
add
ret
lock
push
fmul
inc
adc
push
xor
scas
sub
loope
jbe
in
icebp
int
or
mov
mov
addl
pop
rep
repnz
rorl
mov
inc
xchg
bound
sahf
mov
dec
mov
jp
ror
push
test
std
pop
insb
inc
test
jecxz
push
adc
fwait
cmpsb
imul
mov
add
mov
pop
cli
lds
mov
insl
lret
jge
mov
ror
or
add
sbb
pushf
cmpl
loope
pop
mov
imul
gs
xor
lods
jno
mov
sub
adc
cmp
cmpsl
mov
push
lea
test
les
fsub
stc
psrld
push
pushf
mov
and
pop
ss
jl
mov
out
mov
dec
addr16
cwtl
insl
sbb
jno
cmc
imul
in
outsl
dec
stos
push
test
xchg
jmp
add
outsb
mov
and
bound
add
pop
inc
inc
mov
cmpl
push
ds
imul
adc
fwait
orl
gs
rcll
ljmp
lods
leave
push
fucomip
adc
arpl
sbb
mov
push
push
stc
or
mov
inc
test
pop
int
iret
adc
lcall
call
notb
sub
push
cmp
jecxz
jb
adc
mov
imul
ljmp
jecxz
or
push
or
jae
lret
and
mov
adc
movsb
mov
ljmp
mov
cmp
cmp
movsb
sti
int
jno
insl
lahf
add
fistl
or
push
inc
fs
scas
nop
sbb
mov
cmp
ficompl
lahf
ret
aas
push
or
bound
mov
sub
outsl
std
mov
mov
cmp
and
fsubrl
int3
and
ss
pop
hlt
test
leave
pop
push
inc
inc
cmp
movsb
bswap
dec
push
mov
lds
mov
xchg
repnz
sub
adc
add
mov
test
iret
lock
add
test
stos
mov
mov
add
dec
and
jge
daa
cltd
in
lahf
add
sub
xor
xchg
sbb
jp
jo
mov
nop
stc
and
movsb
dec
pop
jl
bound
adc
lock
inc
push
cmp
push
fbstp
push
hlt
cmp
fstpt
icebp
jns
test
nop
cmpb
mov
das
sti
mov
push
mov
cmp
pop
pop
test
stos
inc
hlt
push
sub
add
fs
addr16
mov
pop
and
andb
push
inc
mov
pop
sarl
xlat
mov
jmp
mov
pusha
mov
jecxz
stos
pop
and
icebp
js
adc
push
in
mov
mov
jmp
xor
aad
into
imul
cmp
push
ds
orl
jge
mov
stos
and
addr16
push
jae
movsl
aad
hlt
dec
inc
and
loope
mov
test
out
sub
mov
inc
imul
adc
xor
imul
mov
adc
mov
xchg
or
cmp
lret
xchg
dec
xor
fcoms
sub
cmp
sub
sub
outsb
cmp
or
xchg
test
mov
jo
in
cs
test
inc
jl
insl
pop
push
pop
inc
fcoml
add
add
adc
push
jbe
sbb
dec
jbe
adc
add
mov
scas
cwtl
push
adc
dec
xor
hlt
xchg
xor
mov
mov
xchg
cmp
imul
aas
aam
and
out
mov
jne
sub
mov
and
scas
movsl
push
fcmovbe
cmpsl
push
loopne
in
jbe
push
rorb
inc
and
mov
popf
pop
jns
mov
stc
sub
hlt
cmp
repz
xor
ja
jo
scas
cmp
gs
outsb
insb
shlb
jne
shlb
scas
jnp
lahf
cli
fxch
push
sub
inc
push
dec
push
fldcw
mov
fisubs
and
sar
ret
mov
sahf
pop
ljmp
xchg
sbb
in
push
xlat
loope
and
xchg
jo
xchg
aam
lret
pushf
test
sub
push
fiaddl
cmpsl
and
jo
add
or
lea
pusha
xchg
cmc
push
pop
movq
outsl
test
inc
hlt
je
inc
cld
and
push
test
sub
xchg
push
xor
inc
aad
mov
xchg
add
fildl
add
adc
adc
cld
in
pop
mov
in
mov
faddp
sub
xchg
xchg
or
movsl
mov
xor
sahf
dec
pop
push
or
in
jne
subl
je
jns
fwait
incb
test
push
sbb
push
or
lock
xor
lods
xlat
in
stc
hlt
mov
cmp
mov
out
dec
push
sbb
jle
dec
dec
out
sbbl
sbb
fidivrl
sub
cli
fcoms
adc
stos
mov
dec
outsb
ret
jle
stos
adc
cmp
loop
mov
scas
sbbl
fldenv
hlt
fsub
jns
push
ds
int3
jecxz
insb
mov
stos
ljmp
add
mov
xor
and
pop
pusha
mov
xchg
js
icebp
adc
cs
xor
mov
dec
fmul
xor
shl
sub
pop
mov
xchg
add
dec
sbb
fcomps
mov
sub
add
or
inc
loopne
xor
mov
fcoms
ljmp
pusha
sub
pushf
gs
lcall
lods
fadds
data16
dec
sahf
push
out
bound
insl
fnsave
add
push
sbb
inc
lcall
popf
jnp
cmp
sub
sub
cli
jo
lret
bound
push
mov
stc
cmpsb
sarb
fistps
out
outsb
movsb
cmp
fdiv
push
mov
sub
cmpsb
insb
adc
pop
out
mov
cli
push
movsb
add
dec
mov
mov
out
xchg
mov
shr
fsts
xchg
xchg
push
insl
sub
pushf
push
dec
inc
loope
adc
inc
test
pop
fs
inc
push
dec
adc
scas
.byte
inc
push
call
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
sub
mov
jmp
ljmp
cmc
std
test
mov
fsqrt
loope
sbb
xchg
mov
adc
or
aad
lahf
ja
lods
frstor
cs
daa
or
push
mov
mov
xchg
inc
pop
jmp
nop
aaa
fadd
leave
sbb
fiaddl
or
jp
jl
xor
test
pop
test
xchg
repz
enter
cmp
cwtl
repnz
push
scas
std
mov
xchg
xchg
or
mov
xchg
jp
jg
in
rcll
icebp
aaa
gs
mov
ja
mov
jge
mov
or
add
sbb
dec
sti
or
pop
test
sti
dec
mov
leave
cld
push
negl
sbb
xor
fnstsw
int3
cs
add
rolb
xor
jnp
iret
cmc
pop
push
pop
loop
mov
dec
ja
ss
jge
mulb
movsb
adc
loopne
fists
es
fmul
pop
jge
adc
jp
in
clc
pop
mov
fmul
je
add
js
and
jge
mov
mov
mov
push
enter
iret
add
xlat
xchg
cld
cmp
aam
popf
mov
sub
jp
xchg
mov
jo
jp
out
shl
std
add
lea
stos
mov
nop
sub
sbb
push
cmpsl
movsb
aaa
cmp
or
sub
cmp
cld
lcall
mov
push
xor
add
inc
pop
scas
xor
mov
subb
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sbb
call
adc
dec
outsl
jl
adc
pop
call
mov
cmpb
jnp
icebp
push
inc
sub
cmpb
push
pop
pop
pop
add
mov
mov
push
mov
pop
mov
jno
mov
add
jle
xor
add
mov
sub
jmp
ret
inc
jns
pop
insb
xor
mov
je
mov
sub
mov
add
call
shlb
int3
adc
div
fs
xchg
push
movswl
pop
pop
cmp
jne
call
cmp
sub
jb
jb
pop
jmp
loop
xor
cmp
dec
loope
hlt
sbb
jmp
ljmp
lea
jmp
in
push
std
loope
sbb
into
mov
jno
out
mov
enter
mov
mov
push
push
arpl
dec
into
ret
mov
xchg
aad
in
arpl
cmp
out
lahf
pop
push
mov
shll
push
push
mov
loope
loop
xlat
pop
xchg
push
mov
jle
mov
mov
add
das
or
inc
mov
inc
push
aaa
or
inc
mov
xor
stos
add
jge
pop
mov
push
clc
and
je
std
push
xchg
xchg
lock
xchg
fisttpll
mov
jge
das
std
cmp
dec
seta
pop
aas
xchg
das
std
push
sub
push
pop
js
cmp
test
xchg
push
push
rcl
fdiv
gs
arpl
aas
loop
std
push
pop
push
mov
push
popf
or
andps
or
sbb
js
popf
clc
aam
pop
add
fcom
ror
test
pop
push
shlb
inc
push
inc
stos
out
xchg
rolb
mov
mov
repnz
shlb
or
in
or
sbb
aaa
cmpsl
ret
in
repz
adc
xchg
les
inc
rolb
inc
shlb
xchg
ja
sub
push
repnz
shlb
or
bound
loopne
adc
xor
shlb
or
mov
orl
xchg
shll
pop
xchg
ret
in
movsb
pop
data16
jmp
xchg
cmp
shlb
sbb
out
or
out
stos
push
mov
push
or
out
and
test
in
or
xor
jmp
enter
xor
ret
scas
pusha
ljmp
push
xor
inc
int3
dec
jnp
cmpsl
clc
mov
inc
fs
lahf
nop
outsl
cld
mov
mov
loope
mov
idivl
dec
imul
in
mov
repnz
mov
scas
out
mov
sbb
mov
sbb
neg
lret
mov
fstpt
or
fwait
movsl
jmp
mov
sbb
push
pop
aas
lret
cltd
cmpsl
jmp
mov
sub
cmp
iret
nop
xor
insl
xchg
or
in
mov
xchg
sbb
sub
cld
jp
insl
jbe
mov
aaa
sbb
movsl
dec
xor
stos
push
decl
popf
insl
xchg
ficompl
jns
outsl
mov
leave
xchg
in
jecxz
mov
data16
in
dec
imul
jns
pop
gs
gs
dec
sub
jge
andl
mov
pop
dec
pop
inc
or
lahf
dec
hlt
adc
mov
adc
pop
dec
inc
dec
jno
xor
aaa
ss
aaa
mov
inc
or
xlat
adc
jae
xor
aaa
ss
movsl
jns
adc
insb
inc
jl
push
mov
xlat
mov
or
sbb
mov
adc
sbbb
lods
jns
test
add
xlat
repz
cmpsl
fwait
rcll
scas
imul
adc
xchg
xchg
cmp
imul
and
out
lods
jns
mov
pop
pop
lods
jns
lcall
out
and
xchg
xlat
add
xlat
adc
jns
xchg
cli
insl
xlat
adc
jns
mov
adc
dec
or
movsb
dec
mov
xor
jne
adc
loope
adc
iret
mov
lods
repnz
add
imul
pop
lods
jns
pop
sahf
hlt
cmp
stos
jns
jo
jnp
adc
mov
sbb
scas
mov
pop
mov
add
lods
jns
xor
adc
iret
in
adc
and
mov
pop
hlt
cmp
stos
jns
inc
xor
imul
pop
lods
jns
sbb
imul
pop
lods
jns
pop
scas
hlt
dec
lret
lods
jns
sahf
insl
jno
pop
xor
repz
aam
jns
mov
icebp
jnp
adc
outsl
lret
adc
lods
insl
adc
jns
pop
pop
hlt
jno
mov
xchg
stc
xlat
adc
jns
lods
pop
push
adc
adc
lods
jns
adc
jno
xor
insl
shrl
hlt
leave
bound
jns
push
fiadds
adc
lds
dec
add
jbe
pop
sbb
xchg
sahf
mov
cld
stc
push
lods
jns
lds
dec
add
in
jl
xor
sub
aam
sub
push
pop
sbb
xchg
sahf
mov
cmp
pop
push
fbld
imul
stos
jns
adc
push
pop
sbb
xchg
sahf
mov
adc
lods
xchg
adc
push
push
sbb
xchg
sahf
mov
adc
add
cmpsl
into
mov
rcrb
sbb
sahf
mov
dec
mov
lods
jnp
xor
sub
fildll
mov
fimuls
adc
jns
and
add
cmpsl
into
mov
rclb
aaa
cmp
push
xor
jb
lods
adc
xor
mov
hlt
cmp
adc
lods
hlt
out
inc
xor
jb
xchg
jg
stos
addr16
push
sub
cmp
adc
jns
adc
mov
add
xlat
lods
or
adc
jp
inc
sub
orb
jno
das
adc
lods
hlt
pop
mov
mov
pop
lahf
daa
outsl
aam
lods
out
xor
lods
jns
stos
inc
push
adc
aam
lods
adc
adc
jns
cwtl
in
jbe
icebp
stos
xchg
xor
mov
xlat
adc
movsl
mov
mul
cmpsb
sbb
adc
das
bound
icebp
ljmp
mov
imulb
lock
pop
push
aam
mov
jnp
pusha
cmpsb
jl
mov
jbe
mov
in
lods
sbb
mov
and
fstl
and
cmp
fidivrs
out
mov
movsb
adc
pop
push
sbb
lods
bound
mov
cs
adc
jns
adc
xlat
adc
xlat
adc
xlat
adc
jbe
das
lret
add
xlat
adc
adc
xchg
adc
cmp
movsl
stos
mov
into
adc
jns
adc
xlat
adc
dec
add
jns
sbb
xchg
test
add
aam
fdivl
jnp
and
add
enter
neg
imul
mov
imul
mov
xor
nop
cli
aas
cmp
dec
push
loope
cmp
aam
or
shlb
bound
cmpsb
cld
add
inc
jo
push
insl
sbb
or
sbb
push
fdivrs
out
lcall
xor
pusha
insl
adc
dec
pop
pop
iret
jg
sti
xor
push
js
imul
and
hlt
jmp
sarb
xchg
adc
fwait
mov
or
jle
bswap
mov
cmc
fwait
push
aas
inc
movsb
arpl
in
lahf
popa
scas
lock
sbb
xchg
jnp
inc
xchg
es
sbb
loope
sbb
movsb
jp
cmp
inc
xchg
test
sbb
clc
out
call
mov
inc
dec
sub
mov
xchg
jns
imul
sbb
aaa
sbb
xchg
cmp
pop
sbb
pop
fisubl
daa
sbb
or
mov
int
ja
add
adc
mov
push
jb
inc
xor
jmp
mov
jge
dec
out
jmp
jecxz
push
mov
shll
push
cmp
out
mov
pop
iret
scas
div
xchg
fnclex
pop
jg
loope
leave
mov
dec
jns
xchg
lcall
lods
push
aaa
mov
or
ret
pop
movsb
pop
push
rcr
sbb
pop
push
stos
imul
jb
mov
xor
and
lea
jb
out
lahf
sub
pop
xchg
rolb
push
jp
mov
push
out
iret
movsb
mov
jbe
pop
and
imul
adc
les
mov
sti
dec
aam
xchg
stc
lea
or
fs
cs
sbb
inc
add
icebp
lds
xchg
fisttpl
jp
fnstenv
jbe
cwtl
push
pop
bound
test
fxch
and
ret
mov
lods
xchg
mov
push
jge
scas
sbb
xchg
mov
xchg
xor
outsl
fmuls
add
aaa
mov
xor
iret
sahf
xchg
add
imul
ror
cmc
repnz
sub
push
push
lds
test
jecxz
gs
cld
cmp
cld
jmp
sbb
mov
testl
mov
sub
and
sbb
divb
cmp
arpl
popa
jne
inc
rorb
movb
fsubrs
push
fldl
add
add
add
or
add
add
add
dec
add
rorb
jo
add
sub
add
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
cmp
or
push
das
or
inc
cs
pop
das
or
push
cs
popa
das
or
pusha
cs
imul
add
insl
cs
jno
or
jns
or
jns
or
test
or
subl
add
xchg
cs
mov
or
fwait
cs
xchg
das
or
test
or
cltd
das
or
mov
or
mov
add
add
cs
test
add
add
cs
mov
or
xlat
cs
mov
add
add
cs
shrl
add
cs
leave
das
or
cld
cs
shrl
or
push
das
or
fldcw
or
adc
or
loope
or
sbb
das
or
sub
or
icebp
das
or
aaa
das
or
stc
das
or
inc
das
or
add
or
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
popa
addr16
insb
insb
add
jbe
jo
xor
cs
insb
add
imul
fs
insb
add
gs
jne
xor
cs
insb
add
jb
fs
insb
add
imul
fs
insb
add
outsb
imul
insb
add
jb
imul
add
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
xor
add
add
sbb
or
add
add
sub
add
add
or
add
add
push
xor
add
add
pop
xor
add
add
outsl
xor
add
add
xorb
add
add
add
add
test
add
add
add
add
xor
add
add
ljmp
add
xor
add
add
adc
add
add
xor
add
add
cmp
or
add
add
dec
xor
add
add
push
xor
add
add
xor
add
add
add
or
add
add
xor
add
add
movsl
xor
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
je
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
jae
jb
gs
je
imul
push
inc
inc
insb
gs
outsb
jne
add
add
gs
je
push
imul
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
popa
insb
imul
arpl
add
arpl
jne
dec
popa
jo
gs
imul
addr16
gs
popa
insb
jne
inc
js
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
jo
gs
jb
jbe
jb
gs
jb
jo
imul
dec
outsb
je
jb
gs
gs
fs
imul
jb
jne
jb
push
popa
insb
jne
inc
add
add
jbe
dec
jne
push
jb
je
add
add
inc
dec
outsl
arpl
add
push
push
dec
outsl
je
data16
arpl
inc
add
add
popa
jb
push
gs
imul
dec
insl
popa
addr16
imul
dec
arpl
push
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
and
push
add
add
add
cmp
xchg
mov
daa
push
cmp
cltd
div
mov
iret
les
push
add
mov
subl
mov
and
mov
jae
pop
adc
mov
push
in
gs
scas
lds
out
sub
test
hlt
pushf
pop
xchg
add
mov
jne
fwait
mov
dec
mov
ds
fmul
xlat
xor
outsl
jo
xor
dec
lret
jnp
mov
nop
sub
in
jne
xchg
push
cwtl
pop
cmpsl
inc
enter
ret
pop
mov
mov
fisttpl
out
sbbl
pop
and
mov
loopne
dec
imul
push
cltd
lock
inc
xchg
loope
pop
stos
sub
sbb
das
stos
mov
imul
and
cltd
inc
dec
aad
insb
repnz
bound
lahf
pop
inc
mov
jmp
xor
add
clts
fildl
mov
cmp
mov
xchg
addr16
int
pcmpgtd
cld
pop
add
scas
push
pop
stos
ret
fnstsw
cli
push
jecxz
cmc
cmp
not
cmp
js
jnp
dec
xchg
jbe
adc
clc
push
test
cmpsb
shl
xchg
inc
inc
inc
xchg
mov
dec
sub
push
cmp
enter
dec
adc
jb
clc
add
cmpsb
xor
inc
bound
inc
mov
add
pop
push
lret
mov
mov
jo
push
jbe
xchg
stos
sbb
js
or
cld
jae
cmpb
out
push
sbb
stc
adc
pop
adc
fnstsw
lea
fwait
clc
nop
dec
sarl
pop
ficomps
sbb
scas
adc
fwait
mov
adc
outsb
dec
shll
dec
mov
arpl
das
enter
cmp
mov
dec
and
or
or
ret
out
insl
popa
stc
das
jnp
mov
cld
xor
leave
inc
das
daa
push
pop
pop
xlat
xor
fistpll
push
in
inc
sti
pop
js
pop
pushf
loopne
mov
repz
divl
in
pop
and
mov
push
and
jp
adc
scas
test
lods
mov
fwait
pop
xchg
push
ss
add
mov
sbb
loop
mov
xchg
and
mov
fdivl
add
daa
xchg
ljmp
sbb
mov
sub
xchg
daa
xorb
fildll
fsubs
dec
push
outsb
or
hlt
popf
ret
sub
pop
data16
std
mov
jl
jmp
bound
pop
and
sub
mov
arpl
inc
sbb
aas
xchg
out
push
pushf
sbb
or
cld
outsb
lods
cli
in
cmpsb
lock
add
cmp
mov
mov
lods
std
scas
scas
sti
imul
sbb
fs
sbb
frstor
sar
fdivl
cmp
das
repz
sbb
aaa
jge
popa
xor
adc
mov
mov
sbb
lret
mov
or
push
mov
imul
adc
mov
aas
rorl
hlt
add
std
lahf
sub
xchg
nop
test
cmp
out
xchg
fistpl
or
add
std
add
cmp
fs
idivl
cmpsl
add
popa
stc
insb
shrb
daa
icebp
jbe
movsb
rcrb
xor
addr16
xlat
xchg
cmpl
cmp
cmc
push
xchg
fstps
aaa
scas
pop
mov
out
jno
stos
mov
or
jp
mov
pop
ja
and
sub
test
mov
std
sbb
mov
inc
ficomps
add
in
jl
sub
mov
popf
lds
cmp
ret
outsb
test
pand
pcmpeqb
inc
pop
fwait
stos
xchg
mov
dec
cmc
push
sbb
cmpb
int
lahf
and
fcomps
push
fsubs
inc
xchg
pop
and
les
cmc
mov
push
fs
pop
inc
ljmp
mov
or
xchg
jg
ror
xor
out
xor
enter
fwait
in
and
cltd
outsl
pop
mov
jg
mov
loop
lds
jmp
pop
or
rclb
loope
imul
jp
adc
sbb
xchg
loope
xor
into
lahf
push
inc
jge
pop
jge
sub
jg
lea
sub
mov
mov
daa
imul
sti
sub
movsl
loope
add
sub
mov
xlat
push
push
test
gs
mov
adc
in
lods
xchg
cmpsl
rcl
mov
push
jmp
call
out
mov
fimull
mov
cmp
mov
mov
add
dec
popa
lods
mov
popa
sbb
and
cmp
xor
adc
cli
cmp
nop
xchg
fst
mov
and
iret
dec
adc
sbb
lret
or
pop
mov
mov
pushf
pop
sub
cli
mov
fs
rorl
pushf
ljmp
push
das
call
add
arpl
push
incl
jns
jl
repz
sub
jmp
inc
push
jl
jns
sub
push
mov
es
rorb
test
push
test
gs
or
fnsave
mov
mov
xchg
adc
add
adc
outsb
jp
mov
jge
sti
hlt
enter
ja
loope
bound
gs
add
mov
and
lea
inc
inc
pusha
loope
jmp
cmp
cmp
into
adc
mov
fwait
adc
fcomip
push
insl
jle
pop
popf
sbb
cwtl
in
cwtl
and
sbb
aaa
sub
fimull
ljmp
add
push
mov
repnz
cmp
fdivl
in
jnp
sbb
shlb
outsl
cwtl
sbbl
cmp
add
and
pusha
lahf
push
mov
cltd
scas
nop
mov
xor
add
lret
insb
movsl
mov
test
dec
add
sub
out
or
push
inc
xor
std
jno
jp
aaa
ljmp
je
cmp
call
push
dec
pop
push
pop
dec
imul
out
or
push
outsb
int3
lahf
mov
push
or
jg
loopne
out
cmp
enter
add
mov
jnp
dec
lds
inc
jp
out
nop
inc
add
mov
mov
ret
mov
cmc
call
jg
fisttps
pop
adc
sub
das
scas
fisubrl
xor
scas
in
add
sub
push
enter
popa
jp
enter
jl
dec
lret
jmp
dec
test
loop
lcall
mov
and
je
or
jge
into
ja
lret
inc
push
push
hlt
rcrb
sub
outsl
inc
jp
push
test
outsb
and
rorb
pop
fwait
cmp
xchg
jns
sbb
sbb
nop
pop
adc
repnz
or
pop
add
dec
cmp
push
and
jmp
jne
jle
xchg
iret
mov
stos
xchg
test
mov
lret
rcr
jnp
in
pop
int3
sub
and
imul
mov
negb
push
stos
sbb
xchg
or
xor
jge
iret
cmp
pop
ret
cmp
lds
mov
sbb
mov
inc
test
shll
jle
outsb
sets
icebp
xchg
fwait
in
enter
push
iret
xor
scas
and
mov
adc
scas
mov
hlt
int3
repz
push
ror
pop
repz
inc
aaa
js
mov
push
dec
loope
rclb
mov
dec
cmp
gs
jp
mov
push
cli
aaa
adc
fistpl
pop
pop
in
icebp
fidivrl
fs
xchg
mov
sahf
outsb
shl
sbb
inc
popa
mov
dec
cmp
or
dec
push
ffree
adc
mov
mov
or
sbb
nop
in
or
shrl
je
scas
int3
cmp
lcall
push
jb
sbb
jne
nop
xchg
rcl
cmp
inc
dec
mov
pop
adcl
xchg
ds
jno
or
inc
int3
es
fsubrs
mov
sub
jl
je
icebp
pop
sbb
add
mov
mov
xchg
adc
call
clc
cmp
or
out
fs
mov
cmp
adc
stos
cmpsb
xchg
pop
movsl
xlat
adc
das
in
das
out
repz
mov
rcrl
inc
mov
mov
dec
adc
stos
in
and
ja
popf
out
sub
lret
mov
add
rolb
es
jb
addr16
fidivs
pop
xchg
pushf
ficoms
ret
xlat
filds
or
fmull
jbe
lret
je
pop
and
int3
mov
imul
inc
mov
fstpt
into
test
dec
sbb
mov
lods
push
bound
lret
mov
jae
cs
stos
push
push
stc
add
jo
or
dec
pop
cld
adc
xor
aam
xor
inc
and
mov
gs
push
lcall
lock
xchg
jo
stos
daa
into
fdiv
lods
cli
decl
ja
in
cs
ja
outsb
cli
adc
bound
movsl
cltd
push
fiadds
in
test
testl
int3
inc
or
push
mov
jmp
adc
pop
sub
ja
mov
arpl
lock
xchg
sbb
inc
sub
ffree
sti
xchg
in
push
mov
pop
lds
dec
test
stc
add
pop
scas
cmpsb
mov
and
out
repnz
mov
daa
cmp
icebp
into
sbb
or
psubd
imul
shlb
jp,pt
xchg
decl
bound
testb
dec
iret
push
and
sub
mov
stc
sub
jle
fldl
fwait
aaa
push
sub
push
stos
fildll
lods
movsb
es
stos
fldt
xor
mov
aas
cli
jne
adc
push
push
adc
xchg
test
fldenv
xchg
push
add
out
jmp
leave
movsl
imul
std
jbe
mov
push
adc
out
mov
cmp
fiaddl
lret
push
pop
mov
aaa
adc
lret
out
cld
mov
mov
pop
inc
and
lods
or
jmp
mov
ljmp
mov
nop
push
jmp
mov
push
popa
or
pop
sbb
ficoml
cmp
lods
mov
sub
dec
jns
ds
gs
loop
ret
cmpsl
push
pushf
lahf
xchg
in
inc
decb
fwait
sbb
daa
mov
orb
cwtl
pop
push
les
and
es
repz
and
xchg
dec
adc
mov
xor
stos
push
and
outsl
repz
adc
sti
push
dec
out
sbb
je
mov
push
aaa
adc
lea
lcall
sub
js
or
sub
repnz
stc
sbb
into
in
xor
movsb
fwait
cs
push
cmp
sbb
mov
adc
shlb
xchg
add
add
int
das
pushf
clc
or
mov
add
int3
out
sbb
sti
mov
lods
cli
sbb
jmp
lret
fwait
les
cmpsl
jne
movsl
xor
push
lahf
sub
addl
test
push
rcl
out
push
sbb
stos
jmp
add
cwtl
dec
jns
movsb
stos
push
adcb
adc
cmp
notb
test
adc
out
xchg
ror
mov
bound
or
cltd
int
xchg
ja
movsl
ror
pop
lea
push
sub
xchg
xor
aas
cmp
or
roll
in
jb
icebp
cltd
popf
xchg
sbb
cmp
mov
sbb
dec
jg
dec
push
add
xor
stos
jp
repz
adc
sbb
movl
sub
pop
jno
inc
adc
imul
sbb
shlb
in
jae
sbb
pop
mov
imull
hlt
adc
mov
insl
cmp
sbb
fdivrp
subl
xor
fmul
ret
xchg
mov
sub
insl
and
ficoml
je
imul
ret
lods
pusha
push
repz
lret
mov
cmp
or
dec
cmpsb
in
clc
push
loopne
icebp
xor
and
xchg
ljmp
clc
cmpl
jmp
lret
add
mov
cmpsb
jl
mov
push
xor
xlat
repz
mov
sub
dec
mov
dec
push
pushl
xor
sbb
cmpsb
js
push
xor
adc
in
in
insl
ds
sbb
data16
adc
ret
xchg
xchg
mov
and
lret
sub
dec
jae
add
div
cwtl
xor
add
sbb
repnz
insl
jle
mov
pop
cs
mov
cltd
sbb
xlat
test
sub
jp
or
mov
lcall
loopne
cld
sub
xchg
stc
arpl
jne
dec
mov
pop
pop
addr16
adcl
sbb
push
jne
shr
stos
add
repnz
lret
subb
mov
jno
cmpl
mov
icebp
mov
loop
js
or
aad
icebp
flds
xchg
shlb
fs
push
push
xor
pop
cmp
jb
adc
mulb
sub
in
xchg
xchg
sbb
enter
push
ss
psrlq
jb
stc
pop
jp
dec
push
sub
movb
mov
sti
pop
and
add
lea
pop
fnstenv
out
and
jle
popa
pop
fsubs
aam
push
dec
test
push
mov
xchg
add
rcrb
push
adc
jb
ret
stos
clc
pop
scas
cmp
int3
das
inc
js
cmp
pop
gs
or
xchg
test
ret
out
negl
mov
mov
loope
and
divb
leave
fwait
jge
inc
push
out
cmpsl
hlt
xor
xor
stos
inc
push
fnsave
test
xlat
add
xchg
jecxz
mov
dec
and
pop
cs
nop
loopne
sti
jbe
pop
push
decb
or
mov
stos
sub
stos
pop
add
dec
push
popa
aad
mov
lret
aas
dec
js
jae
push
jmp
test
mov
add
rcll
rep
ljmp
cmpsl
hlt
pop
aas
mov
lock
and
xchg
pop
imul
adc
ss
mov
cmp
inc
inc
cmp
mov
and
adc
movsb
jno
and
sub
or
lea
push
bound
push
leave
cwtl
daa
xor
shrl
repz
cmp
test
jecxz
mov
cmp
cmp
sub
mov
push
cltd
mov
jge
dec
sbb
lods
inc
push
xchg
add
insl
cmc
sahf
jae
in
mov
lret
mov
push
dec
icebp
nopl
dec
and
rorl
jl
add
pop
mov
adc
rcr
add
pop
push
cmp
push
pusha
gs
dec
mov
cmp
pop
ja
fists
icebp
test
nop
add
lea
pop
and
sub
jno
dec
shll
dec
popf
inc
adc
sbbb
adc
jne
lret
pop
sub
adc
jl
pop
xor
pop
iret
and
push
push
aam
dec
arpl
adc
sarb
daa
cmp
mov
or
repnz
lock
fisttpl
ret
or
pop
mov
addl
cmp
jae
adc
daa
das
stos
repz
mov
mov
sbb
incl
and
mov
hlt
fisubl
mov
in
jnp
pop
mov
scas
push
out
roll
inc
scas
pop
insl
hlt
and
mov
xor
ss
jmp
mov
enter
or
or
push
and
pop
jmp
add
movups
sbb
pop
aaa
jb
pop
xor
rorb
or
push
out
loopne
cmpsl
add
xlat
pushf
xchg
pop
sbb
rol
jmp
xchg
arpl
dec
jl
sti
movsl
popa
xorl
and
push
js
fs
fcmove
mov
xor
loop
xchg
push
leave
in
sahf
adc
into
aam
or
fnstsw
mov
or
and
push
andb
xchg
cmc
fnsave
sbb
cmp
pop
adc
lcall
imul
adc
adc
jne
or
sbb
cli
sub
das
inc
subb
dec
loop
movsl
sahf
lock
int3
adc
adc
and
jge
shr
or
add
loope
nop
mov
jbe
cmp
sub
in
mov
sbbb
mov
movsb
test
fdivr
loopne
xchg
int3
mov
sbb
sub
push
xor
les
dec
stos
add
jp
xchg
out
mov
pop
dec
mov
hlt
scas
xor
mov
mov
and
add
adc
push
stos
jecxz
adc
pop
lods
cmp
daa
mov
fistpll
xor
jecxz
stc
sub
inc
adc
enter
pop
push
pop
mov
arpl
pop
mov
ret
ret
nop
insl
into
repz
pop
clc
rclb
push
test
not
push
aas
push
in
xor
lods
shlb
lret
inc
rorl
lea
sub
dec
cmpb
out
lods
mov
sub
add
xchg
fwait
ret
in
imul
pop
in
push
cld
ret
push
mov
bound
mov
inc
mov
mov
aad
xchg
xchg
ret
mov
out
mov
mov
lds
add
sbb
stc
std
push
loope
dec
div
or
gs
and
or
popa
lret
jle
or
andl
cmp
scas
popa
mov
push
cmpsl
mov
add
mov
setno
push
mov
and
mov
ds
mov
out
stos
loopne
addl
cmp
fwait
push
sub
out
mov
sub
lret
xlat
xor
pop
imul
aam
in
adc
add
add
inc
js
popf
jle
lcall
jmp
scas
aam
test
sub
add
andb
push
idivb
jne
sub
mov
cltd
or
mov
push
add
jge
aam
xchg
jp
stc
les
mov
jge
insb
inc
and
push
je
int
or
scas
sub
mov
mov
popf
inc
fs
push
pop
fs
adc
js
ljmp
jecxz
idiv
push
xlat
int
insb
sbb
sbb
lret
loope
cmp
or
jmp
pop
sahf
mov
mov
sub
cmp
popf
call
xor
stos
xchg
push
fcmovne
fdivr
fimuls
add
sbb
dec
icebp
and
aas
jg
ret
add
in
push
out
ret
sbb
data16
leave
xadd
dec
fwait
adc
rorb
cld
push
push
inc
xchg
or
adcl
out
jb
cli
inc
cmp
test
push
cmp
and
jge
shrb
pop
dec
pop
xor
cmp
jmp
inc
loopne
dec
jb
daa
sbb
ret
out
push
mov
inc
sub
jl
popf
add
sub
mov
push
fs
pop
fidivrs
addr16
cwtl
adc
nop
loopne
addr16
notl
jb
xchg
cs
adc
leave
sub
leave
inc
scas
cwtl
mov
mov
jmp
jnp
or
stos
cmc
mov
vmread
int3
push
lods
pop
mov
sub
mov
jb
roll
fdivs
or
repz
rcrb
shlb
notl
sub
out
das
add
das
adc
movsb
cmpsb
lods
push
lods
out
clc
gs
in
call
cmc
loopne
mov
or
out
xchg
repnz
push
popf
cwtl
pop
jne
xor
xor
xor
ja
aas
dec
fbld
dec
cmc
xor
cmp
stos
pop
jbe
outsb
cmovnp
shll
mov
int
or
jmp
popf
lods
jl
popf
ficoms
xchg
data16
popa
sub
cmp
push
push
iret
js
inc
scas
pushw
sahf
fs
aas
bound
inc
push
mov
pop
inc
sub
inc
popf
ss
fstpl
xor
ds
or
fnop
or
push
loope
lahf
in
scas
jae
jg
xor
test
ret
icebp
sub
mov
jae
repz
sarb
cmp
mov
loop
mov
jl
mov
les
in
inc
loope
pop
out
fisubl
loop
xchg
movsb
cwtl
inc
pop
sbb
push
or
das
sbb
jns
cmp
repz
sbb
push
jmp
mov
movsl
negb
ficoms
test
mov
add
xchg
loopne
mov
xor
adc
mov
cmp
das
inc
jns
ss
or
decb
int3
jmp
and
and
insb
inc
push
sbb
mov
dec
jl
cmp
jp
xor
xor
repz
lea
push
sarl
dec
dec
pushf
pop
add
in
sti
push
cmp
xor
mov
mov
orb
out
stos
fcomp
dec
pop
jb
loopne
aas
mov
mov
inc
leave
mov
and
jp
das
cmp
in
into
xchg
cmp
pusha
push
cmp
dec
fstl
bound
mov
shll
and
jecxz
jb
fcoml
push
dec
insb
out
push
mov
add
outsb
stos
pop
insb
es
and
mov
push
fbld
mov
and
iret
mov
adc
test
rcll
cmpsb
sbb
add
pop
cmp
js
fbld
das
and
or
add
adc
jne
push
jecxz
add
sti
out
test
inc
fcomi
inc
adc
icebp
lods
push
sti
pop
jge
sbb
push
movsl
xor
dec
add
repz
hlt
pop
popf
add
or
fs
mov
mov
add
inc
lea
push
ss
aam
adc
rcrl
sbbl
sub
push
inc
xchg
adc
jg
sub
jmp
dec
out
in
mov
cmp
rcr
stos
clc
sub
into
push
mov
int
dec
pop
idiv
ds
dec
dec
imul
xchg
sarb
sub
mov
jne
ljmp
mov
das
cmp
mov
or
imul
push
sub
rcrl
push
loop
aam
mov
add
sbb
sub
cmpsl
out
ljmp
mov
jge
jmp
mov
stc
lds
gs
leave
sub
cmp
pop
and
mov
and
mov
push
lcall
arpl
aaa
cmpsl
shll
and
stos
mov
jo
lcall
mov
push
push
aaa
mov
push
sub
rcr
cmp
cli
sbb
ds
lret
jae
sbb
sub
add
bound
push
cs
mov
aad
adc
xchg
add
jl
cld
cwtl
lods
pop
cmp
xchg
jnp
out
enter
das
and
pop
push
sbb
movsb
lock
sarl
pop
push
jne
mov
test
mov
dec
pop
sub
xor
out
int
andb
repz
mov
sub
pop
aaa
or
leave
mov
push
mov
adc
push
mov
movsl
adc
sub
outsb
aam
aaa
add
iret
mov
mov
cmp
leave
fists
call
dec
clc
int3
mov
sub
fwait
jbe
sbb
dec
mov
lock
jg
sub
mov
mov
sbb
popa
inc
jbe
mov
inc
stos
jmp
sub
test
pop
adc
push
xchg
mov
jmp
lock
adc
rcll
mov
ret
push
inc
sub
scas
pop
cli
cmp
mov
mov
dec
je
mov
or
lds
add
rcl
mulb
xchg
lods
cmp
cli
cmp
jns
lock
rol
and
pop
xchg
or
inc
jle
fs
cld
fwait
sub
or
push
xor
dec
lods
xchg
mov
ss
cmp
sub
cmp
mov
mov
pushf
movl
inc
cmp
mov
movsl
ror
push
push
pop
test
xchg
or
orl
movsl
inc
inc
pop
sbb
popa
int
and
shlb
lahf
mov
mov
addr16
in
mov
arpl
push
clc
sub
leave
aad
push
or
xor
outsl
test
or
mov
and
sbb
jnp
jg,pn
pop
outsl
popf
lahf
enter
jo
repz
popf
rol
dec
cld
pop
ljmp
inc
mov
hlt
or
sbb
mov
sub
loope
fsubrl
and
push
pusha
cmp
cmp
popa
dec
cmp
mov
xchg
jb
inc
test
test
mov
mov
loop
in
popa
push
shlb
popa
shlb
sub
sarb
icebp
sbb
mov
popa
and
sub
ds
int
jg
jne
das
cmpsl
fldenv
xchg
lods
in
xlat
push
scas
sbb
rsm
pop
packsswb
inc
movsb
jb
cmp
xchg
lea
inc
jbe
sbb
aad
stc
mov
sub
dec
mov
dec
xchg
stos
sub
jbe
test
jno
sbb
dec
cmp
xchg
nop
sub
mov
push
or
ljmp
clc
cmp
dec
incb
stos
leave
gs
xor
ret
inc
xlat
arpl
cmp
rcrl
sbb
nop
fwait
cmp
gs
pop
add
or
xor
pop
mov
loope
int
out
or
adc
mov
xchg
xlat
xor
mov
mov
popl
cli
push
cs
lret
jbe
imul
cmpsb
and
cmp
cltd
or
addr16
mov
or
mov
mov
daa
int3
fdivrs
pop
decb
mov
arpl
imul
neg
ss
xlat
test
adc
sub
or
lods
movsl
idivb
mov
call
and
mov
mov
aad
int
mov
jl
mov
adc
mov
push
add
sarb
pushf
adc
mov
cmp
mov
push
fisubrs
xchg
xor
shll
sti
shr
lcall
mov
jmp
stos
pusha
mov
je
out
cmp
mov
xchg
cli
mov
inc
rclb
xchg
cmpsb
and
jge
lret
mov
dec
dec
mov
mov
rcl
sub
orl
ja
adc
ss
jle
dec
incb
ret
cld
repnz
pop
cmp
sahf
or
push
lret
cs
pop
fsubs
test
and
jae
adc
jecxz
inc
ss
xchg
clc
xchg
std
push
pop
add
and
mov
push
adc
clc
jge
adc
mov
adc
out
insl
jb
lret
pop
cwtl
lds
mov
mov
dec
pop
push
pop
out
xor
fdiv
das
mov
jae
out
out
cmpb
mov
sub
inc
int3
icebp
in
xor
outsb
outsb
test
leave
pop
movsl
mov
es
mov
call
stc
mov
in
mov
lret
scas
lea
into
mov
fidivs
sub
and
stos
aas
pop
xchg
jnp
dec
and
jecxz
ss
in
push
jno
push
and
push
adc
popa
inc
sahf
movsb
cmp
fcmovbe
sarl
or
add
js
fsubs
andl
daa
mov
mov
xor
or
mov
fisubrl
xchg
add
movsb
lret
or
adc
jbe
cs
pop
inc
jmp
mov
scas
and
push
movsb
stc
jle
in
loope
jns
call
gs
inc
sub
jo
mov
call
inc
fstpl
les
jl
push
add
fistpl
mov
jmp
push
add
adc
lds
movsb
push
movsb
mov
loope
into
cli
ja
in
push
jmp
mov
movsl
xor
mov
mov
adc
divb
sahf
iret
cld
cmpsb
add
js
push
jno
xchg
mov
int3
sub
mov
ja
push
xlat
ffree
sbb
movsb
mov
dec
fwait
mov
cltd
inc
add
fcomps
push
sbb
sub
xlat
sbb
jle
and
add
mulb
shll
pop
js
xlat
mov
dec
push
imul
ficompl
push
jb
mov
push
shlb
lods
fs
test
mov
pop
ljmp
mov
push
dec
adc
add
daa
adc
cmp
sbb
push
push
cmpsb
push
xorb
test
cmp
cs
mov
int3
push
sub
lods
movsb
icebp
ljmp
push
jg
push
dec
push
popa
pop
leave
in
pop
adc
test
imul
push
mov
xor
or
repnz
rcll
cmp
mov
sahf
idivb
sub
fsubl
add
addr16
add
jbe
cwtl
hlt
adc
sbb
addr16
or
mov
mov
cld
jp
sbb
lods
shlb
mov
dec
loopne
and
lods
shlb
sub
insl
xchg
out
daa
sub
outsl
jne
xchg
add
dec
push
movsb
shll
repnz
ljmp
jp
sub
mov
lret
repz
add
xchg
jno
adc
push
ret
push
cmp
sbb
cmpsb
push
fsubl
cmovle
fisubl
add
shrl
leave
test
ljmp
adc
dec
jecxz
xor
or
roll
data16
sbbl
xorl
pop
outsb
out
sahf
jno
aas
mov
aad
xor
out
std
mov
cmp
jbe
and
ja
sub
jnp
adc
xchg
sub
or
insl
mov
fistps
in
es
cld
mov
jp
leave
outsl
jge
lahf
bound
jns
add
push
enter
jne
stc
sbb
lret
or
sbb
jb
jns
das
das
decb
imul
pop
add
ficoml
rclb
fucom
add
push
addr16
mov
orb
push
sbb
fdivl
in
sbb
gs
mov
ljmp
les
adc
gs
xchg
shlb
or
lret
in
icebp
sub
int3
insb
or
fdivl
stc
pop
jl
loop
lahf
cmp
and
ss
pop
aad
rorb
inc
mov
adc
rclb
sub
aam
mov
shl
push
hlt
fisubs
mov
add
movsl
pop
cmp
cltd
adc
lds
and
bound
lock
sbb
push
cmp
inc
into
stos
je
mov
add
scas
and
xor
out
inc
push
repnz
aas
fldcw
and
fs
jns
das
jecxz
jnp
push
ret
in
xchg
sahf
std
out
lahf
fcompl
adc
mov
jge
shlb
popf
push
sbb
loopne
pop
or
jmp
push
jb
jmp
in
xchg
cwtl
nop
loopne
lock
cmpsb
icebp
adc
push
popf
adc
add
adc
dec
cld
ficompl
dec
rcrb
test
filds
nop
ljmp
fs
lods
mov
pushf
adc
jl
jle
fucomi
in
dec
inc
andl
xchg
fisttpll
pop
xchg
add
jle
adcb
test
rorb
and
mov
lods
je
into
add
sbb
outsb
cmp
or
pop
xor
sub
cmp
inc
and
adc
dec
lock
enter
cli
mov
push
cmp
insl
mov
or
fwait
shll
push
in
cmc
lcall
test
or
mov
mov
popa
cmpsl
lea
pop
push
pop
adcl
ret
rol
daa
cli
sbb
sbb
aad
popf
jae
mov
aam
lods
push
xchg
cmp
adcb
cmpsl
lcall
lret
adc
aad
or
mov
popa
sub
dec
and
outsb
mov
cmp
dec
iret
lock
xchg
dec
pop
xchg
or
sub
mov
or
or
ficoms
movsb
pop
js
jle
xor
mov
mov
test
je
leave
sbb
mov
jbe
mov
int
fbld
les
mov
mov
sbbb
jg
jb
pop
sbb
adcb
add
daa
or
jmp
and
jne
jmp
popf
pusha
xchg
and
insb
mov
inc
ret
pop
or
mov
xor
enter
btc
in
fnstsw
cmp
int
xchg
xchg
inc
clc
loop
das
xchg
inc
mov
sub
adc
test
mov
cmp
popa
dec
push
out
push
rorb
xor
sub
test
aam
inc
loop
mov
enter
clc
andb
xchg
popa
inc
repnz
add
cmp
sti
mov
jge
mov
mov
or
test
mov
iret
shl
xor
ljmp
add
sbb
mov
dec
add
sub
cwtl
jno
ljmp
adc
pop
ficompl
adc
shll
inc
xchg
sub
inc
push
repz
dec
cmp
sub
cmp
sbb
add
mov
or
jb
ret
jnp
iret
out
test
loope
xchg
das
pushf
outsb
mov
test
jne
shlb
jno
addr16
or
push
adc
aad
and
fdivrs
or
add
dec
test
shlb
jecxz
cwtl
xor
xchg
jp,pn
cmc
jle
loopne
sub
ffreep
mov
mov
ja
adc
pop
xchg
test
ds
scas
mov
mov
insb
mov
in
out
pop
call
lds
mov
aad
mov
dec
in
sbb
pop
mov
xchg
and
or
inc
pushfw
push
xor
adc
or
push
push
add
in
xor
pop
xor
or
inc
out
fnsave
push
or
movsb
scas
addr16
jns
add
push
addr16
shll
pop
loope
xchg
scas
es
lcall
sti
or
ret
mov
ret
jns
cmc
xchg
xchg
ror
mov
lahf
pop
xor
outsb
dec
xlat
in
hlt
cli
cld
ja
xor
out
or
gs
xchg
jb
repnz
push
xchg
andb
mov
adc
and
out
call
inc
sub
stc
test
je
cmc
clc
adc
xchg
pop
es
orb
inc
scas
pusha
sub
mov
sub
adc
lods
imul
ljmp
or
sub
mov
cmc
int3
jne
and
add
jge
and
sbb
int
push
add
adc
adc
and
cmp
jo
dec
cli
ss
cltd
shr
outsl
add
xor
outsl
mov
mov
add
sbb
outsb
in
lea
aas
fs
dec
fnstenv
test
andl
jo
js
push
vmovdqa
leave
sbb
cmp
cwtl
cmp
xchg
xor
xor
and
loopne
jl
dec
rclb
cmp
push
ljmp
jge
adc
gs
pop
jno
sub
jns
jp
pop
and
pop
in
addr16
mov
mov
inc
adc
push
add
js
push
jge
push
sbb
les
or
cld
bound
mov
fcompl
and
cmpsl
add
xchg
and
std
inc
mov
loopne
cmc
xchg
dec
xor
or
mov
mov
in
jb
iret
call
push
and
lods
push
sbb
jae
ljmp
push
pop
popf
inc
mov
cwtl
jp
xchg
xchg
or
call
xchg
fnsave
dec
cwtl
and
xchg
mov
jl
mov
add
enter
sbb
lret
cmp
jge
or
ficoms
pop
or
insb
or
and
push
test
ret
mov
rol
mov
adc
cmp
push
sar
mov
sub
sub
lods
into
mov
mov
inc
dec
dec
mov
mov
fmuls
sub
jge
scas
testb
pusha
scas
or
sahf
push
cmpsl
sti
hlt
inc
cltd
pop
cvttps2pi
xchg
mov
icebp
stc
or
push
push
push
sbb
inc
adc
pusha
into
cltd
xlat
sbb
mov
test
int
push
ret
push
imulb
jp
dec
es
aas
fsubl
lahf
dec
mov
and
mov
fildll
aad
clc
divb
xor
add
cmpsl
cmp
subl
inc
idivl
aam
stos
insb
cmp
mov
mov
ret
dec
pushf
sarl
ljmp
lahf
xchg
or
outsl
std
push
push
das
sbb
roll
xor
bound
in
test
pop
and
and
add
in
or
in
push
or
notb
inc
sub
ret
sbb
jecxz
add
add
imul
xchg
inc
test
cs
aad
jns
sbb
push
lcall
adc
nop
fildll
sub
shlb
fcompl
stc
cmp
addr16
push
push
and
and
mov
dec
jae
test
sub
cmp
mov
sub
call
jle
sub
negl
and
xchg
adc
lahf
mov
mov
sbb
test
adc
addr16
xchg
jg
mov
fucomip
lds
rorb
and
xlat
lods
cmp
nop
sub
fsub
insl
pusha
pop
adc
aas
lcall
or
icebp
mov
pusha
int3
cld
aaa
jne
xchg
mov
cli
mov
or
aaa
jecxz
adc
lret
into
jmp
push
fimull
inc
std
loop
mov
sti
loopne
mov
filds
mov
mov
jae
not
movsl
xor
sbb
xchg
dec
in
adc
adc
push
cwtl
fdivp
mov
test
shll
outsb
imul
jo
push
mov
jl
adc
sbb
push
dec
lahf
add
add
fmuls
out
add
adc
mov
sbb
outsl
add
out
jg
icebp
add
outsl
mov
ss
jno
jne
xchg
lock
or
mov
pop
jnp
les
loopne
mov
hlt
sti
imul
pop
inc
int
jb
xchg
jl
aam
imul
lahf
dec
mov
into
aam
mov
icebp
sub
call
cld
ds
mov
mov
xor
enter
jle
out
cmc
loop
orl
dec
adc
dec
sahf
shll
xchg
or
lahf
lods
aas
adc
data16
pop
rclb
or
insl
iret
iret
sbb
cmc
mov
imul
stos
cmpsb
lahf
jmp
aaa
jp
jge
jmp
pmulhuw
fwait
sub
adc
xlat
cmp
xchg
xor
fsubs
mov
adc
in
lods
dec
sub
lcall
leave
ja
insl
scas
repz
xorl
popf
and
faddp
gs
test
cmp
xchg
sbb
jmp
inc
lea
jg
sub
jmp
jbe
cmp
mov
mov
ffreep
stos
rorb
xchg
xchg
cmpsb
test
sti
add
cmp
inc
int3
mov
cwtl
push
and
outsb
xchg
lock
push
and
adc
fwait
icebp
insb
mov
add
aaa
adc
dec
xor
cmp
shll
sub
lea
ljmp
shrl
xor
imull
mov
jmp
mov
loopne
fwait
sbb
shl
pop
xor
pushf
jecxz
sbb
sbb
add
out
enter
les
push
mov
or
cmp
inc
pop
cwtl
rcrl
jb
ret
mov
mov
shlb
in
test
adc
jns
out
mov
sbbb
sub
lods
enter
jns
int
inc
dec
mov
test
loope
and
sub
dec
mov
sbb
xchg
fisttpll
dec
inc
mov
add
dec
pusha
push
ret
iret
inc
lock
scas
sbb
jne
repz
in
xchg
mov
lods
sbb
mov
cwtl
mov
cmp
jmp
mov
push
pop
stos
mov
mov
rol
cmp
jle
pop
jg
mov
push
sub
leave
xchg
pop
movsl
fcoml
sbb
test
adc
cmovp
xchg
mov
mov
fisttpll
mov
sbb
leave
or
mov
lods
sbb
shll
lret
xor
fdivs
nop
lods
mov
sti
sub
scas
mov
xor
mov
or
pusha
sbb
jl
in
lea
and
out
daa
icebp
push
pop
push
pop
cld
mov
lcall
lret
pop
repnz
fisubrl
lcall
pop
test
sub
lahf
mov
aad
call
adc
ret
movsb
ficoms
mov
imul
adcl
jl
fidivrs
jae
mov
into
xor
lods
enter
fisubrs
jnp
mov
add
movsl
mov
sbb
push
push
mov
jo
and
clc
add
je
mov
sbb
fimull
pusha
loope
cmpb
fnsave
das
daa
nop
and
inc
mov
mov
and
sub
movsl
push
dec
jecxz
mov
or
cmp
mov
decb
adc
out
sbb
das
mov
mov
jno
mov
mov
roll
pop
adc
jnp
ja
ffree
pop
bound
jne
and
movsb
xchg
negl
jl
iret
in
movsl
cwtl
adc
sbb
fdivrs
js
bound
xchg
outsl
dec
and
into
idivb
repz
mov
dec
add
lret
mov
lret
xchg
lret
arpl
pushf
movsl
push
sbb
out
sbb
js
jae
call
aaa
mov
add
xchg
jnp
lods
out
xchg
sti
pop
jbe
inc
popa
jge
in
dec
test
fistpl
push
movsb
push
xor
xor
filds
loop
fwait
popa
sarb
pop
mov
push
movsl
scas
or
push
movsl
out
cmp
pop
rorb
insb
inc
movsb
jo
dec
dec
daa
hlt
sub
int3
cmovp
xchg
nop
jmp
insl
dec
shlb
jns
mov
incb
lea
adc
mov
pop
out
aas
mov
cli
inc
test
xchg
xchg
push
push
sub
cld
ret
jge
pusha
add
out
mov
inc
xor
push
leave
mov
cmp
dec
movsl
sbb
cwtl
cwtl
and
mov
mull
xor
and
jge
xchg
mov
pop
popf
outsl
andb
dec
add
sbb
inc
test
cs
movsb
xor
jl
mov
pop
inc
and
fs
fs
sbb
dec
aas
imul
cld
push
lcall
ret
mov
sub
jmp
jge
cmp
push
sahf
add
repnz
jo
pushf
daa
push
dec
inc
mov
adc
movsb
push
adc
mov
aas
rclb
mov
adc
inc
jnp
scas
int3
adc
int3
sub
ret
add
xlat
daa
adc
mov
fimull
or
sti
sub
sarl
or
scas
arpl
inc
push
add
popa
lret
sbb
pop
cs
inc
nop
lods
aad
push
xchg
jne
fwait
aam
jno
leave
adc
push
sub
jno
insb
adc
add
ljmp
adc
mov
pop
iret
cs
fildll
xor
test
nop
pop
std
jmp
out
jno
xchg
fcoml
cmpb
jg
or
in
daa
sbb
or
es
mov
add
inc
push
or
cmp
mov
scas
pushf
hlt
adc
cwtl
sbbb
mov
int
cmp
jp
hlt
sbb
mov
lahf
dec
jne,pt
dec
das
inc
leave
fdivrl
daa
out
in
cs
fs
adc
adc
dec
fs
rorb
sbb
es
inc
fneni(8087
shll
xchg
out
loope
pop
xchg
mov
push
pop
add
stc
fwait
inc
scas
rol
xchg
push
xor
mov
imul
lods
push
outsb
movsb
pop
jns
and
cmpl
sbbb
xor
ror
ficomps
jae
outsl
movl
jmp
lock
imul
cmp
sti
fiadds
outsb
push
lret
dec
or
sub
and
push
outsb
fildll
jmp
in
inc
jmp
cmp
out
pop
dec
clc
sub
mov
popf
aam
jnp
sbb
cmpsl
lahf
call
test
and
adc
negb
lea
mov
sub
sub
movsl
xlat
stos
shr
pusha
popa
js
aam
std
mov
or
leave
xchg
push
pop
sarl
cli
fstp
sbb
adc
mov
mov
adc
xchg
icebp
test
lret
mov
scas
clc
and
addr16
pop
hlt
push
mov
and
ja
std
xor
cmp
add
pusha
sub
adc
xlat
sub
lds
jnp
jg
mov
adc
loop
les
jnp
add
jno
xchg
leave
clc
sbb
in
xchg
jecxz
sub
rcr
mov
push
shrb
jge
adc
mov
ss
rcr
ficoms
or
shll
and
loop
xchg
cmpsb
bound
push
sahf
sbb
jge
call
mov
pop
scas
int3
iret
inc
cli
bound
loope
enter
mov
divb
pop
cltd
xor
or
jmp
xchg
enter
les
jecxz
xchg
repnz
in
adc
dec
push
jnp
mov
mov
mov
xchg
sub
test
mov
mov
vprotb
inc
inc
stc
jge
in
inc
dec
cmp
mov
xchg
leavew
push
fsubrl
mov
pop
je
mov
scas
cmovno
add
jl
sbb
repz
repz
add
mov
sub
jns
dec
test
out
sub
daa
mov
fcom
repz
ret
pushl
lods
and
in
xor
or
ret
fisubs
mov
orb
mov
inc
shl
sbb
ljmp
inc
add
fdiv
addl
xchg
push
cmpsb
or
loope
fadd
mov
inc
dec
xchg
fmuls
sbb
pop
inc
mov
push
filds
ficomps
orb
and
cmp
xchg
es
insb
std
mov
add
and
fisubrs
mov
mov
ret
push
out
insb
out
sub
popf
push
inc
cmc
lds
dec
mov
xor
xchg
lahf
and
pop
pop
dec
ret
imull
jl
daa
jno
test
add
adc
mov
fcomps
enter
mov
dec
ss
insb
stc
push
sbb
xchg
mov
test
or
pop
pushl
mov
sub
rorl
xchg
mov
xchg
jle
jle
dec
cmpsl
mov
imul
sbb
arpl
daa
les
insl
in
fadds
fcomps
sahf
repnz
add
test
das
dec
mov
dec
and
push
sub
sub
sub
add
xchg
test
aad
push
pop
ss
loope
inc
jge
cmp
lods
jo
cwtl
rolb
shrl
mov
ljmp
in
lret
pop
lods
cmp
mov
test
les
or
jmp
dec
pushf
icebp
and
js
mov
add
lods
std
lock
je
rorl
push
mov
aas
lcall
pusha
cmpsb
andb
aas
jecxz
or
xchg
call
cmp
call
mov
add
jg
lods
push
aaa
xor
pop
mov
mov
add
jge
jno
xor
jns
adc
out
pop
sub
jb
or
movsb
mov
push
xor
push
adc
fstpl
mov
mov
fs
test
test
test
clc
mov
test
sub
push
data16
inc
lods
mov
sbb
fcmovu
inc
push
mov
xorl
ficompl
gs
sub
int
int
pop
push
movsl
sbbb
sub
mov
clc
mov
mov
xor
push
or
mov
shrl
xor
xor
dec
aas
repnz
sbb
movb
sub
cmp
loopne
fwait
sbb
push
pop
jge
and
repz
int3
adc
cmp
in
jl
movb
fsubrs
int
movsl
mov
mov
mov
popa
out
sub
ret
lods
add
xchg
push
cmp
into
xor
ljmp
cmpsl
or
sbb
xor
test
int3
jb
decl
mov
mov
int
shlb
add
popa
mov
xor
jmp
sub
adc
adc
aad
addr16
xchg
sub
out
push
xor
cs
mov
ret
and
push
push
xor
sbb
pusha
cmp
pop
in
pop
xchg
lcall
pop
mov
mov
push
test
inc
insl
xor
stc
inc
pop
out
ret
test
xchg
dec
adc
inc
pop
dec
stc
sbb
xchg
inc
orl
fmuls
fs
aam
add
dec
jae
lds
xchg
xchg
subb
test
nop
and
fidivl
or
jle
xor
lahf
pop
adc
cmc
jo
loopne
mov
or
or
jo
fwait
shrb
stc
xor
push
stc
and
test
testb
icebp
mov
or
lret
cmp
cmp
shl
inc
cs
add
nop
in
loopne
fwait
outsl
mov
add
jns
pop
sub
jne
push
dec
lret
imul
jmp
stos
imul
repz
mov
cltd
xlat
lea
jne
testb
in
scas
and
outsl
jle
sbb
in
dec
aaa
and
leave
adc
jne
leave
push
jecxz
ljmp
mov
lahf
out
aad
mov
lea
mov
mov
int3
or
mov
aad
arpl
mov
and
jp
inc
not
lods
mov
in
jle
mov
dec
cld
mov
test
jns
push
fnsave
inc
inc
repnz
mov
shrl
jnp
fnstenv
xor
and
repz
pop
cmp
out
lret
ret
addr16
fstl
jae
and
push
jp
test
fidivl
jp
repnz
ja
bound
arpl
bound
outsl
adc
loopne
jp
loope
fdivl
fptan
loop
mov
clc
and
push
or
loope
aaa
push
pop
pop
enter
add
sub
dec
pop
push
fstp
sti
or
out
or
ja
push
pop
push
clc
pop
mov
data16
lcall
inc
push
mov
and
dec
insb
adc
adc
stos
cs
shrb
sub
add
test
rolb
xor
mov
mov
cmpsl
add
xlat
sbb
pusha
out
adc
inc
scas
movsl
mov
and
mov
into
cltd
mov
jmp
pop
push
sahf
jmp
dec
cwtl
dec
shlb
test
in
pop
lock
lds
and
rsqrtps
sbb
sub
mov
push
aas
shlb
test
xchg
mov
daa
mov
xor
stos
nop
cmp
xchg
push
adc
fidivrl
mov
xor
in
cmpsl
push
add
jecxz
fwait
xchg
cs
out
xor
pop
insb
in
dec
je
enter
cltd
jecxz
mov
scas
push
push
ret
sbb
mov
das
cmpsl
fldcw
popa
stos
adc
test
daa
out
jno
adc
push
jnp
sahf
pop
incb
jbe
adc
jge
jno
sbb
into
sbb
pop
or
mov
pop
cmp
fisttpl
iret
mul
aaa
and
mov
add
outsl
aaa
push
hlt
or
clc
push
fcmovnb
shll
dec
adc
popa
xchg
sub
loope
nop
inc
cmp
sbbb
cmp
lods
xchg
out
shlb
dec
insb
mov
cli
sub
jnp
call
inc
rcrb
inc
xor
mov
fidivrs
out
aad
push
fcoml
int
cmpsl
xor
pop
dec
sub
loop
lcall
sar
cmpb
cli
into
pop
xor
rcrl
mov
mov
daa
cwtl
xchg
adc
test
out
mov
aam
xchg
pop
or
rcrl
popl
mov
loopne,pn
ret
in
push
push
sbb
adc
test
pusha
std
pop
cld
sbb
add
xor
sbb
clc
dec
nop
imul
aaa
mov
fldt
jo
add
pop
sbbb
dec
inc
in
loopne
scas
inc
mov
and
jmp
or
ds
in
inc
cmpb
sbb
aam
and
mov
out
sub
xlat
xor
xchg
sbb
insb
sub
popf
loope
das
add
xchg
pop
in
xor
sti
ret
mov
xor
mov
adc
mov
repnz
push
push
in
es
pushf
sbb
movsl
lret
adc
push
push
adc
pop
dec
and
jbe
aas
xlat
xor
push
inc
cmc
adc
pop
dec
push
std
lret
lahf
sub
adc
mov
repnz
fcmovb
jge
jle
test
inc
jns
xchg
push
push
sbb
lret
les
imul
cld
cmp
cmp
cmp
add
mov
in
mov
stos
sub
cmpsl
or
mov
mov
out
push
jae
scas
push
mov
adc
xchg
es
push
jp
sub
push
jle
outsl
jns
dec
xor
push
arpl
xchg
mov
xor
data16
ret
mov
dec
jnp
cwtl
sub
das
pop
clc
cltd
mov
scas
pop
xchg
pop
fimull
dec
xor
pop
shr
lods
cmp
sahf
or
int3
dec
cmpxchg
lea
mov
jl
or
xchg
inc
pop
out
fidivl
inc
cmpsb
imul
mov
int
imul
fdivrs
push
mov
xchg
sub
jle
sbb
call
mov
jnp
or
into
mov
int
int
es
inc
addb
add
lods
andb
mov
jo
add
cltd
mov
out
add
or
scas
scas
sbbl
xorl
mov
sbbb
dec
cs
adc
adc
sahf
shr
xor
cmp
sub
adc
jp
dec
sbb
sahf
jae
cmp
test
mov
inc
xchg
das
mov
cmp
test
ss
dec
cltd
imul
lret
push
mov
popa
loope
inc
inc
push
add
nop
clc
pop
or
sub
hlt
jno
dec
jne
pop
inc
mov
push
repz
sbb
push
into
out
fnsave
stos
jg
and
jg
test
test
loopne
push
shlb
dec
mov
pushf
push
xchg
mov
jle
enter
imul
aad
movsb
lcall
stos
jmp
jbe
fldcw
adc
sub
sub
dec
in
rorl
shlb
rcl
mov
mov
gs
ret
push
insl
mov
cli
inc
jb
add
aad
and
jecxz
fistps
cli
mov
xor
xchg
pop
mov
mov
addr16
cmpsl
sub
dec
cmc
mov
popa
aaa
sub
fldl
or
add
pop
xchg
mov
adc
pop
test
add
and
cltd
sbb
je
test
dec
into
and
rcll
int3
xchg
pop
lds
in
pop
or
test
dec
sbb
cmp
and
mov
outsl
push
sub
sub
inc
icebp
cltd
xlat
cwtl
push
call
push
call
xor
shlb
sub
xchg
nop
xchg
je
ret
in
jecxz
jge
adc
mov
jl
data16
jb
loope
sub
outsl
push
aaa
inc
in
add
iret
xchg
mov
leave
ss
filds
cld
mov
xor
xchg
adc
dec
push
jl
stc
xchg
jb
test
mov
jne
ficoms
loop
aad
repz
outsb
mov
push
insl
ljmp
shll
pop
dec
jg
dec
in
or
pop
sbb
adc
mov
and
ja
fadds
pop
inc
mov
adc
xchg
pop
sub
data16
jbe
dec
xlat
sarb
cwtl
mov
sahf
and
sbb
cli
lods
shll
xchg
outsb
sub
or
movsl
imul
sub
aam
pop
cmpsl
mov
out
out
mov
add
mov
xor
mov
lret
enter
out
loope
loope
and
add
xchg
dec
sbb
addr16
ja
fidivrl
sub
or
inc
in
push
cmpsl
movsl
mov
or
nop
inc
cmp
lods
insl
xor
sbb
sbb
cli
test
mov
xor
inc
pop
xor
das
inc
icebp
sbb
loop
pop
push
repnz
call
ret
adc
xchg
out
or
loope
scas
dec
inc
ret
cmp
pop
push
data16
inc
lcall
sbb
dec
dec
or
loope
mov
mov
push
repnz
cmp
or
popf
pop
xor
push
lcall
jo
push
daa
xchg
cld
or
push
sbb
mov
pop
lods
addr16
hlt
stc
pop
mov
pop
sbb
insl
test
mov
hlt
rcr
fwait
jg
lods
dec
cmp
adc
imul
adc
mov
cltd
xchg
fcoml
mov
iret
jns
pop
cwtl
inc
sbb
mov
sbb
inc
adc
fwait
cmp
lds
pop
lcall
xor
inc
cmp
inc
fcmovb
lds
fstp
in
rol
fnsave
inc
in
cmp
mov
mov
les
ja
call
mov
xchg
dec
add
sbb
cmp
test
outsl
in
sub
jmp
adc
cmpsb
mov
fisubrl
pop
ret
pop
mov
fcomps
nop
mov
loopne
fimull
ret
imul
cmp
loop
outsb
mov
test
mov
hlt
in
loop
popf
jecxz,pn
outsl
mov
mov
arpl
in
lret
das
dec
inc
xchg
and
in
mov
mov
icebp
int
inc
push
push
iretw
arpl
jno
mov
xlat
mov
lods
xchg
movb
dec
fists
clc
or
mov
shll
xchg
mov
loop
sbb
pop
dec
jle
push
sbb
xchg
es
cmp
xchg
in
out
add
dec
jmp
leave
push
rcrl
mov
push
adc
sbb
testb
push
jno
arpl
sti
cmpsb
cli
aaa
jge
pop
fwait
xchg
lahf
xchg
rol
push
lret
pop
pop
pusha
aaa
bound
add
into
mov
lods
cmp
fcomip
fs
incl
xchg
xchg
shll
dec
cmpsb
out
loopne
loopne
sub
mulb
aas
mov
add
mov
sbbb
ljmp
fwait
sahf
sbb
add
jo
nop
lret
stos
pop
sub
mov
jae
cmp
xor
inc
stos
adc
jno
jns
jbe
movsb
push
in
jbe
push
mov
clc
cmp
ret
lods
lcall
stc
mov
dec
push
xchg
pop
mov
adc
sbb
test
mov
stos
int3
dec
push
xchg
dec
int3
in
sbb
dec
mov
ds
adc
pmullw
sbb
push
push
pop
jo
aas
push
orb
and
lods
mov
push
pop
aam
movsb
push
jp
sub
test
in
pop
jno
sub
mov
pop
inc
sub
and
fs
xchg
add
cmp
jecxz
or
andl
sub
int3
push
mov
enter
push
inc
lock
mov
cmp
lods
cwtl
je
xor
xor
mov
fsubrp
and
out
dec
pop
jp
xchg
adc
stc
sahf
push
fwait
xor
pushf
cli
cld
jg
mov
dec
repnz
add
xor
cli
dec
rolb
sub
loop
and
push
sti
leave
imul
cmpsb
jecxz
or
adc
add
sbb
out
xor
mov
add
xor
call
jb
iret
addr16
lret
and
int
xor
scas
aad
and
mov
pop
outsb
mov
sub
ljmp
testl
cmp
or
xchg
popa
inc
jbe
dec
out
std
mov
mov
shll
sarl
xchg
or
lcall
arpl
jno
mov
inc
fisubl
cmp
shrd
push
cli
dec
movsb
daa
cli
cmp
push
jge
xor
xor
push
lods
mov
push
fidivrs
or
dec
pop
and
lret
push
pushf
inc
out
scas
mov
shlb
stos
lock
sbb
stos
mov
and
adcb
pop
sbb
stos
lods
cld
orl
in
push
sbb
dec
popa
mov
mov
orb
cmp
mov
inc
jg
xor
aaa
mov
adc
and
arpl
je
loopne
fimull
loope
mov
jno
in
stos
cmp
fisttpll
add
pop
inc
push
mov
in
and
stc
stos
fnsave
dec
or
mov
imul
jecxz
mov
xor
push
mov
xor
in
jg
xchg
xchg
jo
lods
mov
mov
sbb
ret
jp
jb
jae
cmp
addr16
imulb
insb
divl
jb
xor
imulb
push
addl
ss
push
and
loop
push
cmp
cmp
inc
popf
mov
sbb
movsl
lods
fldcw
daa
mov
loop
out
sahf
scas
sub
orb
jbe
push
loop
mov
adc
out
popf
stc
mov
mov
cmp
xchg
jb
and
or
loope
aaa
movsb
or
shll
mov
push
inc
lock
xchg
ja
jmp
xor
mov
dec
lret
cld
mov
lods
push
int3
imul
mov
mov
repnz
xor
mov
cld
aam
dec
push
sub
iret
mov
mov
jmp
mov
and
inc
mov
ja
mov
xor
imul
arpl
mov
in
adc
or
imul
int3
pop
rolb
arpl
add
pop
push
pop
push
xor
std
aas
mov
lret
xor
mov
mov
jg
sbb
xchg
jno
test
jl
mov
push
sbb
loopne
js
lods
movsb
jne
mov
push
fisubl
pushl
fsubrs
sub
pop
sub
popa
adc
or
test
mov
mov
xadd
mov
sub
dec
sbb
jl,pn
sub
inc
inc
test
mov
push
lock
mov
je
mov
out
jbe
xchg
nop
fistps
sarl
mov
shll
imul
mov
sub
jnp
adc
lods
jl
popf
sub
push
or
movsl
repnz
in
daa
repz
push
add
jo
inc
in
stos
mov
push
pop
cli
mov
in
cmp
lods
add
cmp
xor
rolb
dec
test
aas
or
pop
push
jg
fbstp
xchg
shr
dec
cmpsl
das
add
imul
stos
outsb
mov
fidivl
scas
pop
jae
add
sbb
jmp
add
xor
enter
lcall
fs
mov
pop
andb
in
lret
cs
sub
test
push
and
jbe
mov
push
das
aam
push
hlt
fimull
stos
mov
pusha
shll
orl
loope
in
les
pushf
push
mov
ret
mov
fmull
shlb
push
pop
jb
shlb
push
and
inc
inc
ret
pop
mov
add
mov
je
shrl
jno
jecxz
add
lcall
test
sub
dec
and
dec
cmpsl
scas
inc
adcl
jo
lret
les
inc
leave
mov
cmc
ret
adc
rolb
adc
insb
cmp
sbbl
pop
loope
hlt
dec
or
out
push
push
jl
push
shll
ret
mov
or
xor
xchg
test
test
or
sub
xchg
insb
jns
stos
add
jo
pop
push
jecxz
popa
fcmovnb
or
notb
mov
inc
mov
add
jns
push
dec
push
and
mov
pop
and
pushf
mov
sub
call
out
xor
sub
pop
pop
sbb
std
and
add
adc
jno
xchg
loope
mov
jg
xchg
lcall
dec
cmp
lahf
loopne
pop
cmp
fcmovb
mov
adc
jp
mov
aad
ljmp
mov
push
pop
jns
lods
adc
shll
or
sub
addr16
dec
xor
push
push
sbb
mov
add
sub
and
or
imul
xchg
stc
imul
and
and
mov
inc
xor
movsl
aam
mov
leave
fldcw
sahf
xlat
lret
idivb
mov
pop
sub
fiadds
sar
push
loop
out
dec
lahf
add
fcmovu
rolb
push
xor
sbb
sub
dec
test
pop
cmp
or
jns
or
sbb
sub
sbb
or
push
sbb
in
loop
orb
jb
enter
outsb
jb
mov
pop
sbb
or
sub
jae
push
jns
mov
stos
mov
push
cltd
sub
test
cli
lret
mov
adc
in
scas
or
lods
movsb
cmpsb
repz
aam
xchg
loopne
xchg
cmp
push
aam
into
test
adc
add
add
jb
inc
mov
sbb
sbb
add
imul
mov
pop
pop
or
mulb
sbb
pop
jno
dec
inc
call
mov
imul
and
jl
popl
inc
jg
pop
xor
pusha
scas
cmpl
sub
or
or
pusha
xchg
rcl
test
add
insb
outsl
or
pop
jb
sbb
sub
in
fistl
xchg
sub
imul
dec
outsb
mov
dec
ja
adc
mov
cmp
mov
jg
push
sub
and
int
out
inc
ret
push
bound
jg
cmp
pop
pop
aam
fsubl
fistpl
popa
ljmp
mov
dec
or
aam
xchg
mov
repz
mov
sti
movsl
outsb
pushf
loop
mov
loopne
dec
cmp
mov
and
mov
je
jns
lea
loope
jl
mov
cmpsb
fwait
cmp
push
push
out
gs
pop
subl
mov
sbb
cld
and
pop
push
dec
mov
add
enter
dec
rol
cmp
pop
movsl
jae
and
mov
ds
adc
ficoml
out
jp
push
sub
loop
mov
mov
scas
pop
shlb
pop
xor
movsb
jle
inc
rorl
mov
pop
mov
shl
aam
mov
jge
adc
ja
xchg
dec
push
rcrl
shll
jo
outsb
cs
inc
mov
fadds
sbb
dec
pop
sbb
fsubl
mov
mov
insl
dec
cmpsb
cmpsb
cwtl
pop
pop
clc
dec
test
dec
ds
add
adc
sub
mov
pop
iret
imull
stos
push
jno
movsb
bnd
mov
fnstsw
std
stos
daa
adc
xchg
decl
push
cmp
iret
les
jge
in
cltd
pop
popa
lds
inc
out
inc
imul
fsubl
push
mov
jno
xchg
add
sbb
stos
rolb
jl
test
lcall
sub
inc
jae
loopne
jl
pop
push
push
cmp
loop
jl
cmp
or
inc
or
sti
sbb
sbb
test
pusha
jle
xchg
sub
das
leave
xchg
inc
push
int3
test
sahf
xor
push
stc
sub
xor
addr16
cld
jl
icebp
push
pusha
adc
pushf
ficoms
jge
jle
loope
sti
push
daa
push
and
adc
repz
and
mov
dec
test
cmpsl
mov
jne
repz
call
cmp
fdivrp
xor
call
hlt
jns
enter
gs
xchg
cwtl
xchg
or
push
push
and
cld
cmp
int
fdivrs
dec
pop
mov
pop
jns
mov
je
loope
out
add
cmpsb
imul
mov
aad
data16
adc
mov
push
fsubs
jbe
lahf
mov
adc
addr16
jle
fcomps
lcall
mov
or
les
add
test
shll
xor
jae
mov
xchg
leave
lds
xchg
enter
inc
inc
mov
lea
sub
dec
xchg
adc
sub
mov
andl
and
sbb
std
jecxz
std
leave
mov
cmp
jbe
sbb
push
sarl
je
bound
out
popf
pop
lock
lahf
cwtl
jmp
leave
jb
and
out
sub
outsb
add
jl
pushf
fbld
or
sbb
leave
sbb
push
rcrb
xor
and
sbb
push
add
mov
loopne
xor
dec
mov
rcll
pop
sbb
dec
das
or
in
test
pusha
add
das
stos
jle
pop
push
xor
mov
stos
mov
inc
add
lcall
sub
pop
sbb
mul
aaa
dec
test
add
imul
jbe
pop
cmp
test
add
popa
shrl
sbbl
dec
jg
sub
jo
sub
and
xor
sbb
or
sub
mov
ja
push
mov
jae
inc
sarb
inc
leave
jae
xor
jmp
inc
nop
mov
mov
pop
imull
mov
dec
insl
test
inc
pop
and
enter
icebp
int3
negl
inc
cmpsb
inc
push
ljmp
xor
scas
inc
and
pusha
scas
outsb
mov
outsb
jno
int
mov
pop
pop
nop
sarl
pushf
cmc
fcmove
sub
aam
pop
lahf
dec
inc
push
aad
adc
adc
test
into
loopne
xchg
and
aad
sbb
and
hlt
pop
cltd
mov
mov
mov
movsl
je
mov
xchg
lea
pop
jnp
fstp
lods
xchg
adc
pusha
jle
mov
scas
rcr
add
stc
ret
xchg
scas
mov
iret
sbb
adcl
div
mov
dec
adc
mov
subl
adc
imul
adc
push
mov
dec
dec
loopne
mov
das
sub
adc
inc
jecxz
fnstenv
ljmp
cmpsb
sub
dec
mov
out
test
in
dec
jl
add
call
popf
mov
sbb
aad
mov
fldt
nop
cmc
roll
cmp
leave
xchg
mov
test
lret
pop
jmp
rclb
dec
xchg
hlt
xor
mov
adc
pop
push
jb
jle
outsb
sti
mov
xorb
popa
lret
inc
pop
mov
inc
mov
xchg
cld
test
mov
mov
xor
shrl
jmp
inc
inc
mov
ret
mov
and
das
inc
inc
push
insl
shll
in
and
mov
pop
push
mov
repnz
push
mov
lahf
loop
popa
pop
mov
icebp
inc
cld
sarl
fwait
cs
fnsave
std
and
rep
add
imul
insb
enter
cmp
mov
xchg
sbb
xchg
or
jae
and
scas
iret
xlat
dec
mov
js
dec
add
test
arpl
imul
push
dec
xchg
cmpl
or
adc
repz
mov
nop
push
adc
fwait
daa
jns
xchg
xor
dec
pop
fstps
jns
iret
push
jno
std
stos
enter
ljmp
jnp
iret
push
sub
inc
outsb
or
mov
insl
leave
xchg
loope
mov
in
mov
xchg
xchg
add
dec
sub
aaa
adc
cmp
ficompl
imul
mov
push
adc
bound
sbbb
xchg
std
push
push
clc
pop
loop
mov
std
add
bound
dec
aad
mov
lahf
stos
push
and
sbb
into
cmp
lcall
or
xchg
cmp
xor
jg
mov
subl
clc
das
lret
lock
movsl
shrb
cld
push
sub
es
xchg
imul
push
sti
push
add
push
xor
dec
in
testl
sbb
cld
sub
mov
lea
shl
out
stc
mov
inc
pop
or
std
dec
mov
outsb
and
push
dec
fidivrl
or
and
cltd
add
and
mov
mov
push
fldcw
mov
sbb
insb
outsl
lret
pop
enter
test
data16
ljmp
pop
packsswb
mov
xchg
and
in
je
in
push
xchg
mov
sarl
repz
xchg
loopne
pop
outsb
or
mov
aaa
bt
and
std
jl
xchg
icebp
dec
cli
and
mov
or
int3
pop
dec
ja
test
pop
xor
icebp
scas
in
clc
xor
mov
push
js
test
arpl
enter
mov
mov
outsb
jge
mov
pusha
and
outsw
jae
add
mov
out
sub
adc
arpl
es
inc
mov
call
cmpsb
or
cwtl
xchg
or
mov
fs
sbb
mov
xor
ja
push
xchg
inc
bnd
dec
xor
test
jae
cli
mov
lods
cs
jno
js
mov
popa
jno
out
cmp
nop
fisttps
fidivrs
lods
inc
pusha
aas
arpl
jno
mov
mov
add
test
test
jb
sub
mov
dec
jbe
add
cmp
loop
mov
cmp
insl
sbb
adc
dec
inc
mov
fs
inc
cmp
jl
xor
push
mov
loopne
or
mov
pop
cltd
mov
pop
hlt
adc
iret
push
pop
mov
adc
test
add
movb
inc
push
dec
ret
std
mov
lods
fs
imul
mov
jp
out
int
sbb
sub
lds
jb
push
xchg
pop
add
fsubrs
add
jg
lds
mov
push
sti
mov
insl
sub
push
dec
xchg
xchg
loop
and
mov
aas
popa
repnz
push
sbb
addr16
mov
lahf
popa
jno
in
lret
adc
lods
repz
das
jmp
sbb
xchg
add
and
push
int
loopne
jl
imul
out
pop
repnz
xchg
in
xor
xor
test
pop
mov
sbb
jns
addb
jmp
arpl
push
lret
mov
cli
adc
mov
add
pop
call
enter
and
sbb
std
outsl
shrb
int
jge
mov
int3
mov
in
call
out
faddl
dec
and
inc
sbb
push
add
jge
in
ljmp
push
mov
inc
inc
dec
aas
pushf
bound
cmp
cmpsl
bound
das
aad
mov
stos
pop
hlt
ljmp
inc
jno
insl
andl
adc
sahf
and
jmp
loop
lea
push
jae
dec
jle
add
negb
adc
sub
mov
fs
fnstcw
pop
call
arpl
repz
mov
sub
fdivrs
sar
dec
inc
in
jne
cmpb
push
sar
push
mulb
cmpsb
inc
out
outsl
jp
adc
lret
sub
inc
xor
dec
cmp
cmc
stc
pop
and
xor
call
addr16
or
pop
lds
mov
loopne
sbb
mov
imul
push
xchg
imul
jnp
das
shll
rol
filds
loope
and
jnp
ret
dec
and
rclb
jmp
aas
pop
sub
inc
add
push
rorl
subb
stos
ljmp
or
cmc
insb
jbe
cmp
test
jmp
ret
or
push
push
push
cmp
enter
jge
dec
packuswb
and
loopne
sub
push
pslld
cmp
jge
je
mov
jnp
outsl
fnstcw
loop
push
fwait
loop
adc
cmp
outsl
lcall
sahf
pop
ror
adc
pop
dec
pop
xchg
mov
pop
adc
fcmovne
push
xor
xchg
push
jle
mov
in
pusha
shrb
push
pop
repnz
xor
push
dec
push
fnsave
jns
xor
outsb
mov
push
sbb
insl
stc
dec
jns
js
add
mov
cwtl
pop
call
cmpsl
adc
pushf
cmp
roll
insl
push
and
in
shrl
test
sbb
cltd
push
xchg
jmp
push
push
rorl
scas
mov
push
movsl
mov
inc
mov
fnstenv
push
scas
sbb
int3
les
fucomip
js
jns
push
mov
mov
test
mov
enter
push
or
das
popa
pop
notb
pop
push
out
push
xchg
stos
sahf
scas
subl
jge
cmc
loope
mov
add
xchg
int3
jae
sti
sbb
aam
sbb
cmp
nop
cmpsb
cmp
push
test
sub
mov
push
jmp
scas
push
sbb
in
dec
test
xchg
sahf
je
sub
mov
and
adc
cmp
sub
ss
into
xchg
cmp
or
xchg
sahf
inc
xor
es
ret
scas
cmp
or
mov
add
stos
jno
cs
sub
leave
sbb
fisttpll
or
and
mov
mov
mov
jb
das
mov
and
cmpb
xchg
outsb
jns
faddl
xor
je
lcall
pop
ret
xchg
jecxz
adc
jno
fisubs
dec
std
lods
sti
mov
xchg
idivl
je
arpl
in
sub
inc
es
mov
rcll
mov
in
insb
mov
repz
aaa
ja
orl
inc
xchg
data16
dec
push
xor
cmp
sub
cld
sbb
movsl
not
dec
mov
or
sub
xchg
in
dec
int
xor
outsb
xchg
pop
xlat
and
nop
sbb
sti
cmp
neg
pop
fisttps
mov
mov
mov
lods
iret
mov
pop
ljmp
cmp
mov
jmp
icebp
insl
movsb
shl
xor
sbb
ret
add
jmp
repz
push
push
bound
sub
pop
adc
xor
xor
mov
jb
mov
mov
aaa
arpl
imul
sbbl
adc
inc
lds
mov
icebp
outsb
lret
add
out
sbb
mov
test
ds
hlt
fstps
les
out
lcall
lock
loope
sbb
push
cwtl
push
mov
and
aad
xchg
inc
dec
mov
pop
iret
and
adc
xchg
mov
popa
arpl
add
push
daa
and
mov
sbb
jle
mov
int
aam
jl
cltd
xor
lds
dec
cmp
adc
mov
jle
xchg
lea
movl
ss
mov
dec
add
dec
sub
leave
insb
shrb
cwtl
mov
clc
or
push
push
es
jo
movsl
aas
mov
imul
adc
hlt
enter
cmp
je
xlat
mov
fwait
pop
scas
call
in
mov
stc
leave
stos
mov
add
int
mov
sbb
and
daa
jo
inc
cs
lock
xlat
cmc
or
jp
out
add
shl
and
nop
daa
shll
loope
add
jl
mov
push
push
xchg
mov
lret
inc
aad
and
cltd
inc
jno
ficoms
jle
inc
lock
rclb
cmp
inc
inc
imul
xchg
add
xor
mov
pop
jmp
and
loopne
imul
xchg
jp
push
sbb
sbb
xchg
or
adc
mov
movl
or
push
mov
adc
jns
mov
adc
bound
mov
cmp
mov
mov
cmpsl
in
cmp
jns
jbe
cltd
das
hlt
inc
or
dec
inc
out
adc
xor
ljmp
mov
cli
test
xchg
loop
push
xchg
inc
cmc
dec
xchg
mov
outsl
inc
js
push
fidivs
xor
repz
mov
xor
pop
sbb
bound
out
jl
jb
inc
inc
sub
scas
sbb
mov
inc
cmp
adc
xor
and
sub
pop
aam
in
popf
lahf
mov
mov
divl
lods
jmp
and
mov
inc
jle
jnp
xor
lds
inc
push
fdivs
push
out
jmp
idivl
add
js
dec
xchg
es
in
out
push
sti
adc
in
jl
push
dec
ja
and
push
lods
and
xor
jp
cmp
mov
imul
mov
sub
popa
cmp
inc
pop
lcall
les
fcomps
xor
push
jns
xchg
pop
mov
insl
aad
adc
out
and
mov
test
pop
jae
fiaddl
out
xchg
inc
or
test
out
and
test
orb
xchg
std
cli
jmp
in
xchg
stc
int
dec
xor
jno
popa
ret
jae
push
jmp
gs
js
loop
out
mov
push
stos
and
jnp
fsub
jae
xchg
lcall
mov
loope
pusha
or
popa
fcoms
les
jb
call
add
nop
aam
out
push
xorl
test
ret
rcll
xlat
and
jno
push
es
adc
pop
mov
in
ja
push
cli
data16
js
inc
pop
and
in
cmp
dec
popf
mov
call
fisubrs
cmpsl
mov
fidivrl
shlb
adc
mov
lods
pop
pop
and
fisubl
mov
push
xchg
je
push
test
fwait
out
inc
pop
es
dec
dec
lods
xor
in
jg
test
outsl
dec
mov
xor
movsb
repz
popa
pop
xchg
push
push
leave
cltd
dec
sub
out
adc
push
leave
lahf
addr16
adc
xchg
cmpsl
ljmp
push
into
bound
pop
jbe
rolb
shrl
shl
shl
cmp
out
movsl
push
sub
stos
mov
std
add
bound
hlt
in
das
imul
push
mov
jo
adc
pop
negb
call
mov
ret
nop
clc
push
mov
sbb
jo
and
in
hlt
push
pop
ret
mov
into
jecxz
pushf
cmp
lea
mov
out
nop
push
sub
aaa
or
push
inc
mov
dec
test
test
cmp
sarl
bound
push
nop
nop
or
cmc
xchg
xchg
ret
cmp
and
leave
adc
jne
xchg
add
lret
cmp
fwait
mov
and
adc
negb
push
adc
call
adc
repz
inc
jo
push
movl
or
mov
loope
lods
adc
xor
cmp
jle
mov
jge
ss
adc
or
xchg
push
loopne
popf
cmp
push
shll
test
mov
out
push
fdivs
push
iret
and
pop
scas
cmpsl
push
xor
out
leave
test
or
ja
mov
xchg
adc
lret
add
and
shr
dec
sub
pop
xorl
sub
xchg
ds
fwait
cmp
push
loope
ja
xchg
dec
xchg
loope
les
ds
xor
cmp
cmpsl
test
adc
xor
fistl
hlt
mov
lods
sub
div
js
out
ljmp
mov
or
gs
xchg
lds
push
xor
scas
addr16
push
data16
ret
cmc
xor
adc
cmp
popf
lret
mov
repz
mull
in
pop
mov
add
cmpsl
push
xchg
subl
lcall
push
xchg
int
mov
or
int
sarl
push
ss
or
dec
popa
add
scas
xchg
mov
jno
push
movsb
cmc
jmp
neg
and
sub
sbbb
add
test
pop
iret
push
add
inc
or
jb
cld
cmp
mov
inc
popf
jnp
sar
push
out
call
cmp
popa
daa
mov
mov
sbb
leave
mov
call
cwtl
movsl
jp
mov
cmc
ret
aaa
sbb
jmp
lahf
arpl
rcll
push
lcall
cmc
cmpsl
imul
sbb
fistl
cmp
imul
adc
fsubrs
inc
aam
les
mov
sbb
mov
jae
insl
mov
cli
and
inc
mov
lcall
repz
xchg
mov
jns
pop
repz
stos
incl
xchg
repnz
fdiv
dec
imul
inc
cmp
push
sbb
xlat
cmp
cmp
pop
test
and
mov
xor
in
or
int
sbb
je
sbb
cmc
xor
mov
outsb
js
pop
jb
leave
push
orb
or
inc
movsb
js
jecxz
imul
pop
hlt
nop
xlat
sub
mov
in
cmp
or
in
fwait
aas
insb
cmp
inc
mov
ljmp
adc
popf
aaa
cmp
xchg
das
inc
mov
fwait
stc
cmp
in
test
xchg
outsl
jo
add
xchg
into
arpl
sbb
stos
sbb
imul
or
pop
cmp
les
inc
jl,pt
dec
sbb
mov
or
call
xor
iret
push
in
mov
aam
test
pop
mov
cmpsl
enter
mov
inc
cs
idivb
pop
or
add
mov
fldcw
add
xchg
sub
and
pop
or
xbegin
loopne
lret
push
out
fimuls
sbb
fwait
jbe
fsubr
rorl
or
imul
jg
out
loopne
imul
sub
xchg
shll
mov
adc
mov
rorb
fmull
pcmpeqd
mov
or
int3
imul
push
adc
cmpsb
push
arpl
xchg
push
fld1
jno
jb
mov
lock
aas
fs
inc
push
out
std
dec
lods
xchg
iret
adc
addr16
sbb
pushf
and
mov
pop
push
add
sahf
and
popa
fnstenv
push
repnz
sti
jmp
push
xchg
jae
xor
notb
test
sbb
push
push
rorl
and
scas
mov
mov
idivl
outsb
mov
add
xchg
into
sub
shlb
add
shrb
shll
scas
or
mov
mov
mov
movsl
call
fbstp
pop
fwait
loope
test
mulb
das
dec
ja
into
stos
inc
pop
and
rorb
int
or
mov
fsubrs
out
aaa
mov
add
ja
jp
lret
dec
xor
in
pop
and
lods
cmpl
lds
pop
inc
inc
mov
repnz
xor
in
xor
in
adc
cs
jmp
cmp
pusha
xorb
add
jmp
inc
inc
scas
fs
xchg
push
sub
cmp
addr16
cmp
jno
pop
sub
sbbb
sbb
jmp
sbbb
xchg
mov
or
je
adc
mov
iret
pusha
xor
mov
das
jnp
test
push
adc
sbb
idivb
mov
fxch
or
or
sub
sub
cs
and
xor
lcall
or
mov
mov
je
xchg
mov
test
adc
jnp
sub
iret
pushf
xchg
mov
lcall
test
pop
mov
aam
cli
cmp
mov
xor
outsb
stos
pusha
sahf
mov
nop
test
mov
sub
fidivs
jb
lods
lock
push
mov
dec
std
loop
pop
mov
jecxz
rolb
cmp
shll
arpl
xchg
jle
or
jns
fildll
aaa
sub
sub
icebp
mov
jle
pop
mov
in
push
jne
test
sti
mov
icebp
rol
and
add
mov
mov
pop
cs
push
sbb
mov
mov
mov
jecxz
je
push
sbb
test
jg
push
and
jno
xlat
cmc
lret
push
xor
rclb
out
sbb
pop
mov
sbbl
mov
xchg
mov
jae
dec
or
fs
test
jb
sbb
pushl
and
fcmove
and
xchg
loop
push
cld
dec
and
mov
pop
jmp
idivb
cmpsl
dec
sbb
out
out
leave
dec
or
in
push
xchg
mov
not
ret
mov
inc
mov
sahf
jmp
pop
push
and
aas
je
jns
push
outsb
inc
cmp
jle
ja
sahf
aas
dec
test
lahf
mov
push
push
jb
dec
pushl
je
mov
stos
enter
mov
sbb
pop
rol
sbb
jge
sbbl
mov
scas
or
and
dec
outsl
nop
adc
fdivrp
push
mov
gs
pop
jno
movsl
jle
or
popf
jg
pop
pop
mov
and
out
mov
jmp
lock
dec
mov
cmp
cli
mov
ficomps
popf
leave
int3
mov
mov
xor
repz
sbb
pusha
sbb
daa
ds
or
or
push
and
popf
push
test
mov
inc
push
test
out
push
pop
repnz
jbe
pop
jne
adc
jo
jnp
fisttpll
dec
repnz
sbb
shll
mov
sti
mov
lret
dec
and
jns
imul
mov
mov
dec
mov
dec
imul
mov
mov
je
das
decb
fidivrl
std
pop
jg
sbb
fldenv
repnz
jae
mov
mov
out
sub
jb
iret
adc
push
and
or
mov
outsb
mov
lahf
xchg
dec
iret
std
jmp
mov
mov
mov
fsubl
fsubl
add
fsubr
jecxz
addr16
aas
inc
dec
mov
or
mov
mov
pop
adc
sbb
or
jb
xor
cmp
jmp
out
cld
jmp
sbb
cltd
and
push
push
adc
pop
cld
inc
or
xor
dec
dec
add
mov
adc
mov
std
and
daa
push
shlb
into
adc
fisttpl
cwtl
scas
mov
outsb
fwait
movsb
cmp
addr16
mov
mov
mov
push
addr16
or
movsl
clc
imul
aam
push
add
and
sbb
push
push
lds
xchg
pop
dec
sub
push
push
mov
std
daa
mov
mov
mov
sub
dec
mov
fnsave
test
inc
cmp
sbb
inc
rorl
icebp
je
idivb
pop
aaa
sbb
shlb
push
fwait
xlat
cld
adc
pop
xchg
sub
leave
repnz
jmp
pusha
push
or
subb
rolb
sub
sbb
stc
faddl
mov
sbb
xchg
sbb
loopne
cmp
jge
push
imul
xor
pcmpeqw
and
xor
dec
dec
addr16
cmp
xlat
loopne
or
mov
lahf
scas
shlb
xchg
inc
jmp
adc
and
insl
dec
dec
mov
insl
jns
out
adc
adcl
inc
inc
idiv
mov
xchg
mov
mov
xchg
inc
call
out
into
dec
or
push
xchg
div
push
and
aaa
out
ffreep
ret
cmp
cmc
or
stos
call
fists
xor
inc
pusha
lods
cmp
jbe
or
dec
lods
jns
mov
mov
dec
test
mov
push
xor
notl
xchg
and
jne
pop
mov
lock
out
cwtl
movsb
jge
mov
insl
push
mov
cmc
xchg
jecxz
mov
inc
mov
je
out
aas
mov
cmpsl
mov
mov
adc
mov
inc
sbb
aad
or
push
xor
or
mov
push
mov
fdivl
mov
sbb
movsl
vminss
inc
and
pop
or
call
dec
pop
repnz
sub
cmc
movsb
cmp
xchg
adc
push
adc
add
cmp
mov
inc
push
pmuludq
scas
or
out
add
cmpl
repz
push
stos
sub
push
mov
mov
fildll
sub
push
mov
mov
movsl
shr
jle
sub
mov
mov
push
mov
sub
cld
sbb
ja
mov
jns
sbb
xor
mov
aaa
sbb
imul
fildl
in
sub
pop
loope
pop
sbb
test
mov
scas
pop
lcall
cmp
sbb
testl
mov
fwait
scas
fildll
pop
lods
cmp
fwait
sbb
es
mov
pavgb
push
and
movsb
mov
jne
adc
imul
xor
mov
sub
ret
sbb
mov
push
and
outsb
cmp
pinsrw
push
test
js
sti
ds
cmpb
dec
mov
mov
xor
and
sbb
jg
movsb
in
lret
xchg
or
xlat
jg
push
imul
xchg
outsl
push
cmp
jge
add
loope
shrl
jle
out
cmpsl
outsl
sub
sbbl
push
lock
sti
xchg
test
push
js
cli
adc
dec
xchg
mov
movsb
push
dec
es
cmpsl
aaa
nop
bound
ret
ficoml
rcr
lock
xchg
out
jnp
dec
cmpsl
rcrb
std
jne
mov
lea
sbb
inc
hlt
pop
arpl
fimull
int3
ds
arpl
cmc
sti
push
or
aad
or
cwtl
icebp
xor
inc
xchg
sbb
in
inc
lahf
test
sbb
and
outsl
je
hlt
iret
or
xchg
and
xchg
xor
jmp
loopne
imul
aaa
push
xchg
mov
cmp
negl
nop
test
hlt
add
mov
adc
lds
test
aaa
jg
mov
dec
dec
rorl
cwtl
fwait
mov
stos
or
mov
loope
addr16
dec
test
pop
xor
ss
mov
popf
leave
lcall
cmp
mov
and
xchg
and
sbb
aaa
clc
mov
pop
lcall
sub
cmp
test
imul
imul
mov
nop
or
fwait
adc
jo
test
cld
sbb
lret
enter
jge
out
iret
lods
or
sahf
push
mov
pop
cld
sbb
mov
inc
out
test
jb
adc
mov
sbb
adc
pop
and
gs
pop
cwtl
test
adc
sub
cmp
sub
fstps
fdivl
jbe
idivw
mov
cmp
in
inc
bound
fiadds
enter
rcr
jne
filds
ret
rclb
and
scas
and
push
rcrb
movsb
arpl
inc
push
sbb
cmc
gs
mov
cmpsl
jmp
enter
push
adc
into
pop
jnp
sbb
out
bound
dec
rcrb
popa
lcall
xchg
in
xchg
loop
scas
jne
scas
xchg
fldcw
adc
and
lcall
mov
dec
mov
lahf
flds
mov
test
sahf
movsb
ret
pop
outsb
jne
das
jl
xor
aam
loope
fists
xchg
decb
mov
es
dec
cmp
inc
xchg
cwtl
decl
out
aas
push
fnstenv
xor
enter
pop
pop
stos
outsb
jle
adc
add
test
push
pop
lret
sbb
test
cmpsb
cmp
jnp
sbb
std
dec
out
mov
fdivs
nop
ss
in
inc
mov
push
rorb
addr16
mov
rcr
ljmp
ljmp
pop
addr16
xchg
sbb
pop
test
je
add
int
add
pop
mov
divb
mov
jmp
or
mov
pushf
repz
scas
add
and
lods
cmc
arpl
cmc
push
fisubs
test
jp
mov
fiaddl
adc
add
xchg
or
xchg
adc
stc
iret
pushf
push
pop
repnz
lds
imul
mov
fwait
xchg
mov
jo
stc
adc
subl
or
test
or
movsb
cmpsb
jmp
lret
xchg
mov
inc
idivl
add
inc
push
les
jns
mov
jl
iret
int
loope
mov
push
push
mov
jne
fdivrl
mov
inc
and
sti
icebp
mov
jle
push
mov
push
cmp
mov
pop
push
pushf
roll
mov
adc
mov
ss
out
lods
cmp
cld
pusha
sbb
ja
mov
xlat
test
push
mov
ljmp
mov
stos
into
and
sbb
lret
sub
popa
pop
loop
in
mov
sti
imul
push
pop
push
adc
cli
shlb
js
jne
xor
out
xchg
add
outsb
pusha
xchg
or
fwait
or
xchg
cmp
sbbl
popa
sub
in
mov
ja
fidivs
push
fldenv
dec
push
fnstcw
cmp
or
sbb
popf
mov
lea
inc
xchg
push
bswap
mov
jnp
fimuls
cmpsb
movsb
lret
mov
leave
icebp
neg
ret
insb
daa
test
popf
data16
xor
idivl
dec
jno
cmpsb
ficomps
mov
dec
popa
loope
jge
inc
stos
adc
xor
pop
and
addr16
stos
dec
dec
addr16
cmp
mulb
push
fldt
pop
nop
ret
dec
mov
test
in
ljmp
gs
mov
mov
inc
divb
test
shl
movsb
subl
cmpsb
sbb
test
mov
xchg
out
out
inc
in
push
inc
aam
test
lahf
flds
mov
cmp
in
jb
jnp
das
mov
push
xor
mov
xchg
mov
inc
out
dec
dec
subl
adc
out
sub
stos
sub
mov
sbb
xchg
lds
pop
xchg
lret
mov
enter
movsb
cli
ss
inc
or
mov
mov
and
and
mov
push
mov
xor
jl
dec
xchg
or
scas
xorl
fs
ss
xor
pusha
sahf
dec
adc
or
sbb
lret
jl
cmpsb
inc
adc
mov
in
sbb
imul
and
movsl
ds
jbe
out
pusha
mov
scas
leave
xor
sbb
push
icebp
inc
sti
sbb
cmp
popa
dec
cmp
dec
std
jecxz
push
jecxz
nop
pop
ds
mov
inc
inc
xchg
test
orb
stos
mov
xor
mov
mov
pop
inc
mov
mov
dec
pop
adc
xor
stc
add
arpl
or
sti
int
sub
xchg
out
xor
and
and
xor
mov
loope
jmp
pop
loop
addr16
inc
xor
popa
int
push
movsb
inc
push
adc
lret
hlt
dec
movsb
jge
push
sub
cmpsl
push
mov
or
pop
sub
out
mov
xchg
push
int
xchg
enter
scas
adc
outsl
pop
mov
sbb
in
das
mov
dec
push
jmp
clc
jbe
dec
icebp
int3
iret
stos
fdivs
cmp
out
and
fcmovnb
push
scas
inc
arpl
out
jg
jbe
push
xlat
imul
adc
js
adc
jge
lods
mov
pop
int3
xchg
stc
sub
push
pop
add
pop
add
movsl
decl
mov
scas
in
addb
les
dec
adc
stos
mov
sbb
int3
mov
or
leave
cvtpi2ps
adc
or
jge
pop
dec
and
add
or
in
sub
imull
out
shlb
scas
lock
divb
lods
sbb
outsl
sbb
inc
les
fs
cltd
xchg
dec
cmc
mov
and
xor
and
or
xor
out
icebp
mov
xchg
xor
add
push
mov
push
pop
xor
fisubrl
pushf
sub
and
push
mov
push
mov
testl
pushf
pop
mov
rol
xchg
jnp
sub
adc
and
cltd
mov
xor
jle
mov
adc
adc
notl
and
ljmp
shlb
lcall
and
loop
shr
jge
xor
fcoms
fnstenv
inc
cmp
adc
add
pop
xchg
xchg
imul
sub
mov
lock
rolb
cmp
call
sbb
pop
int
movsl
xor
inc
movsb
jne
out
sub
out
pusha
and
leave
je
stos
xchg
mov
aad
sti
pusha
dec
movsb
mov
xlat
sbb
add
push
cmp
cmp
push
roll
pop
sahf
cld
jmp
out
fcompl
sbbb
xchg
enter
ss
out
mov
push
imul
mov
xchg
and
in
out
xchg
fisubl
fnstsw
mov
test
or
add
cld
mov
cmp
inc
rol
jmp
push
sub
ss
jo
andl
scas
lret
mov
mov
mov
mov
jg
test
jns
cli
push
aaa
repnz
mov
mov
inc
insl
lcall
push
aas
ss
mov
jnp
es
shlb
mov
rcr
cmp
inc
pop
ret
bnd
lcall
sti
push
xor
mov
push
repz
cs
insl
mov
xor
ret
clc
lods
sub
fstpt
loopne
jle
rcrb
shlb
aam
dec
inc
test
xchg
fnstcw
mov
mov
in
icebp
popf
and
push
out
mov
mov
pop
sbb
xchg
mov
or
and
xor
mull
push
pop
cmpsl
add
xor
in
cmp
or
sarl
fwait
inc
daa
orb
inc
lds
aas
or
rolb
mov
lret
dec
xor
xchg
fstpt
add
aaa
jle
pop
adc
mov
lcall
rcrl
insl
fsubs
imul
loop
pop
push
int
ret
or
inc
jmp
dec
mov
mov
mov
dec
dec
and
into
push
push
lock
mov
cmp
fnsave
xchg
and
shrb
or
ljmp
aaa
mov
fwait
xchg
push
popf
ss
out
out
cmpsl
lods
inc
iret
ret
cmpsl
jb
sti
sbb
sbb
xor
pop
sub
jb
inc
mov
sub
icebp
sahf
xor
movb
out
inc
leave
loopne
fdivrp
fcmovnu
in
out
pop
stos
mov
in
lcall
pop
xor
js
shrb
adc
mov
stc
cmpb
push
js
mov
xchg
add
inc
push
clc
icebp
fnstcw
adc
vmovaps
movsb
out
out
lcall
out
sahf
mov
inc
jge
lret
inc
or
mov
jmp
repz
js
adc
pusha
daa
test
xchg
xor
sub
inc
cmc
addr16
pop
push
and
icebp
dec
das
jge
repnz
outsb
outsb
push
out
mov
in
push
lds
leave
jae
mov
je
nop
scas
arpl
pop
or
cmc
xchg
cmp
mov
test
in
loope
lret
cmp
ss
ljmp
xchg
dec
es
addl
lds
aas
fsubrl
sub
icebp
loopne
loope
mov
jle
popf
adc
push
test
pop
scas
dec
popf
pop
mov
mov
mulb
std
cmpb
push
fsts
mov
in
mov
aaa
jg
push
outsb
call
xor
cmc
push
jge
dec
fsubr
test
xchg
xchg
jle
add
aas
inc
sub
aaa
dec
ja
cs
dec
pop
pushf
pusha
add
sbb
scas
inc
les
cmc
and
jno
push
or
mov
aas
inc
pushf
test
sti
imul
adc
out
je
addr16
movsb
jecxz
adc
gs
out
rclb
mov
ljmp
out
pusha
ja
bound
push
movsb
js
mov
xchg
mov
mov
fmul
imul
pop
cmpsb
int
int3
ret
xchg
shll
sbb
push
fidivl
dec
jge
jle
push
mov
decb
or
xor
dec
jmp
or
mov
mov
cld
int3
fisubs
dec
cmc
mov
adc
xchg
data16
data16
add
cld
movsb
inc
inc
push
mov
cmp
nop
jns
fldenv
jne
ffreep
mov
xchg
call
movsl
sarl
iret
mov
aaa
mov
addr16
mov
mov
rolb
fst
movsb
sub
inc
mov
sti
pushf
movsl
rolb
mov
popa
rcpps
or
test
sbb
shll
mov
out
daa
fwait
cmpsb
xor
mov
xchg
push
push
jne
inc
ljmp
pop
clc
lret
add
push
gs
mov
and
mov
cs
mov
jmp
push
ja
adc
xor
cmp
add
mov
adc
ljmp
and
mov
xchg
add
mov
push
adcb
mov
xrelease
push
arpl
fcmovne
dec
sahf
test
adc
andb
mov
lea
mov
mov
cmp
lock
fwait
mov
sub
cmp
mov
jb
outsl
jns
sahf
cmp
pop
xor
pop
cs
and
push
xchg
mov
add
cmp
xchg
dec
inc
js
inc
insb
pop
jg
fisttpll
jae
repz
addl
lcall
inc
rolb
pushf
ja
or
add
icebp
pop
mov
cmp
int3
cmc
mov
jae
pusha
sub
xchg
bnd
add
sbbb
push
hlt
pusha
cmp
imulb
ja
add
mov
inc
xchg
adc
lret
jmp
mov
rcr
ret
inc
jp
pop
mov
sub
stc
ss
mov
dec
loope
lods
jne
aaa
sub
scas
pop
divb
pop
loopne
std
jne
lret
xchg
mov
sub
cwtl
mov
and
xchg
push
movsb
mov
imull
inc
imul
adcb
popa
and
popa
je
mov
jae
pop
insb
xor
cmp
mov
insb
test
inc
xor
pop
pop
lds
inc
mov
movsl
or
push
out
sbbb
je
imul
dec
sbb
xchg
movsl
mov
repnz
bound
aaa
out
jne
ja
lock
pop
jg
push
xor
or
mov
insl
in
mov
mov
int3
cmp
mov
pop
inc
cmp
ret
jp
pop
dec
xlat
nop
mov
dec
adc
lcall
add
lahf
cmpsl
mov
sbb
sub
cwtl
xchg
in
pop
scas
stos
inc
push
pop
fistl
inc
ret
inc
push
inc
lcall
cmpsb
push
mov
test
sub
jge
sub
pop
add
push
outsl
out
inc
or
ficoml
in
adc
ret
addr16
mov
imul
ss
ret
jne
cmp
lds
add
adc
pop
in
bound
cmp
rorb
or
daa
and
movsb
and
fidivrl
fisttpll
out
bound
leave
xchg
stos
sbb
or
xchg
in
mov
xchg
int
pop
fbstp
cld
int
filds
xchg
xchg
pop
lcall
out
loopne
xor
xchg
add
cmp
cwtl
push
jecxz
xor
xchg
or
enter
cmp
mov
ljmp
push
sbb
repnz
xor
std
jp
jmp
push
arpl
push
imul
lods
and
add
pause
inc
push
stc
cmp
jno
int
sub
mov
test
cli
sub
push
lahf
lds
mov
insl
sar
sub
loop
insb
jbe
xor
mov
out
jns
cmp
sbb
mov
push
lea
aad
jg
das
pop
jns
push
mov
addr16
jmp
mov
adc
jae
xchg
mov
addl
sbb
sub
push
push
mov
sti
xchg
jl
aas
sbb
loop
adc
adc
inc
cmc
leave
add
in
lock
mov
or
out
shlb
and
jg
punpckhbw
cwtl
cmp
in
pushf
in
call
in
dec
divb
mov
stos
lahf
sbb
xchg
les
jnp
inc
and
xchg
sarb
jmp
ja
jo
dec
cmp
mov
adc
pusha
cmp
dec
xor
mov
sub
mov
fucom
cltd
ss
xor
pop
push
jg
outsl
mov
dec
pop
inc
dec
mov
pushf
mov
dec
out
pop
cmp
leave
mov
fwait
push
mov
xchg
pushf
cld
cmpsb
pop
mov
sahf
push
arpl
and
mov
lods
cwtl
and
push
cltd
icebp
adc
inc
jno
xchg
fidivs
bound
shrl
lods
ficoml
call
loopne
and
xchg
mov
or
sahf
ret
or
push
and
lret
pop
test
arpl
xor
add
sti
or
pusha
jg
pop
aas
xchg
mov
xor
je
int
inc
loop
testb
jb
insl
adcl
cmp
nop
mov
into
aad
scas
xchg
pop
sub
adc
pop
lcall
pop
and
popf
addr16
imulb
adc
or
mov
push
adc
imul
cwtl
rorl
test
push
xor
loopne
push
xor
cvtpi2ps
rorl
icebp
mov
arpl
into
add
push
shrb
jmp
popf
xchg
scas
pushf
push
addr16
xor
jbe
mov
dec
inc
sbb
out
xor
pusha
or
mov
aas
jmp
sub
aam
cmpsb
in
mov
test
mov
rcrl
test
mov
xchg
lahf
das
lcall
clc
jg
add
sub
imul
push
sarl
ret
push
and
out
jbe
mov
rol
shl
js
sub
jmp
push
push
pushl
and
xchg
std
push
bound
adc
add
bound
ret
jbe
jmp
dec
je
cmp
ljmp
popa
jb
pop
and
lock
mov
rorb
stc
test
mov
loopne
pop
sub
test
mov
xchg
xlat
mov
jbe
das
and
test
xor
inc
xchg
out
xlat
sahf
sbb
pusha
jno
jmp
cmp
xor
stos
pop
arpl
into
xor
mov
das
and
daa
jne
insl
and
je
mov
fcmovnbe
sahf
loop
sahf
cld
inc
shlb
cmp
xlat
mov
out
push
xchg
arpl
and
inc
pop
push
mov
sub
cmpsb
fwait
dec
test
sarb
sbb
adc
mov
push
ljmp
push
out
push
jb
sahf
and
xchg
dec
clc
inc
jae
and
sub
bound
es
fisubl
dec
and
ret
sahf
fmull
pop
cmp
test
aas
iret
jg
outsl
mov
xorl
dec
enter
jns
or
fs
rorl
jle
push
cmp
iret
repz
leave
or
gs
mov
mov
out
sbb
mov
mov
lea
icebp
and
shlb
faddl
and
outsb
loopne
negl
or
jmp
or
lret
rorl
test
in
xor
scas
cwtl
inc
bound
jmp
jbe
sbb
sub
aaa
sti
bound
pop
sub
pop
or
repz
sarb
mull
xchg
xchg
xor
inc
out
aam
jmp
in
jge
push
pusha
and
loopne
or
or
ffreep
fildl
or
in
daa
mul
mov
dec
pop
out
test
iret
cwtl
mov
loopne
fsts
rcl
and
sti
loop
ja
mov
lods
xorl
arpl
xor
loope
or
xchg
jl
cmp
push
jae
pop
aas
xchg
jb
pop
popf
sbb
or
mov
inc
insb
lods
repnz
aaa
test
jb
call
cmp
push
shlb
xchg
loopne
jns
xchg
rol
jne
jl
std
je
adc
push
and
add
cli
aad
imul
xchg
fsubr
roll
push
push
or
mov
fidivrs
jecxz
and
adc
jl
cmp
std
mov
or
lods
loope
cld
adc
ds
cmp
pusha
jbe
dec
xor
add
shr
cmc
mov
in
lcall
adc
cmp
stos
push
push
lods
int
ret
popf
test
xchg
test
mov
rcl
xchg
mov
jnp
inc
sbb
scas
xor
pop
jae
mov
dec
sub
subl
cmp
cmp
imul
pusha
cmp
test
add
in
hlt
testb
rcll
xor
aas
jl
dec
cmp
push
pop
aaa
jbe
and
mov
ret
jge
push
lahf
push
mov
fidivl
add
jge
mov
dec
jl
dec
mov
jg
inc
pop
jmp
xchg
cld
ror
popa
mov
push
xchg
adcb
fmuls
scas
push
pusha
mov
sub
out
icebp
sbb
insl
add
xchg
enter
mov
arpl
arpl
in
pop
cmp
mov
icebp
xchg
pushf
cltd
lret
sub
rcl
adcb
pop
loope
clc
xchg
in
mov
jb
shrl
ja
icebp
push
mov
ss
pop
push
dec
adc
xchg
add
clc
jnp
cli
lahf
test
push
xorb
cmc
stos
cmp
adc
stos
das
cmp
pop
lcall
loope
inc
loop
sub
ja
shll
push
pop
push
inc
xchg
xchg
dec
addr16
jmp
mov
sub
fildl
sub
test
mov
dec
out
jnp
mov
sub
dec
leave
std
push
or
inc
popf
pop
stos
inc
push
fisttpl
inc
cmp
xor
mov
push
mov
daa
inc
int3
in
pop
adc
lods
push
icebp
mov
push
pop
out
inc
sahf
dec
aas
dec
cmp
jns
in
adc
sub
cmpb
add
adc
adc
subl
sub
movsb
idivl
fcompl
xchg
insl
idivl
inc
fidivl
mov
rcll
pop
jle
and
add
mov
popf
movsl
inc
cmp
data16
test
adc
xor
or
repz
jge
and
jne
and
pop
clc
roll
nop
out
inc
mull
ja
adc
pushf
mov
movsb
or
test
arpl
js
movsb
movsb
out
jp
cmpsb
loope
andl
jae
push
pop
adc
xchg
xchg
outsl
aad
clc
fldenv
out
fisttpll
adc
or
std
and
lret
stos
xor
fsubrp
mov
out
clc
xchg
cwtl
adc
iret
jg
ss
mov
lahf
xlat
push
ret
pop
ds
jg
fistps
xchg
lahf
lods
leave
addr16
xor
jecxz
dec
mov
cmp
lods
sbb
in
stos
pop
aam
jle
ja
fidivrs
jne
hlt
sar
loopne
xchg
cld
add
scas
test
pop
lahf
scas
mov
pop
xchg
jg
and
inc
fs
rorb
dec
call
mov
pusha
inc
arpl
mov
repz
std
insb
insb
sub
jg
pop
mov
sub
push
fdivp
adc
dec
dec
push
pop
rol
nop
test
inc
xchg
addl
pop
imul
fisubs
mov
push
movsl
adc
aam
and
insl
push
movsb
inc
push
daa
sbb
data16
shl
loopne
dec
jmp
ds
and
jb
sbb
cmp
subl
ja
out
mov
sub
dec
or
jb
in
mov
mov
jae
dec
pop
mov
adc
loop
jns
xor
js
fdivr
int
cld
test
pop
adc
pusha
pop
pop
cwtl
aas
cld
sub
add
jb
mov
call
push
jnp
xchg
inc
loope
dec
imulb
scas
enter
loope
pushf
movsl
in
inc
jb
sbb
xlat
popa
push
mov
mov
fisubl
psadbw
movsb
mov
push
xlat
push
and
add
mov
mov
enter
adcb
inc
leave
shlb
sub
stos
icebp
sbb
out
shrb
aad
bound
or
negl
push
mov
sbb
and
shl
inc
mov
cltd
cmpsl
data16
push
mov
sub
add
dec
pop
lahf
mov
sar
arpl
daa
shll
mov
arpl
cmpsl
cmpsb
fcoms
lcall
xor
lahf
mov
scas
loope
mov
xchg
sbb
dec
scas
pop
push
push
aas
xlat
push
loope
sub
fstpl
inc
loope
pop
pop
dec
jne
pop
repnz
loop
ret
sbb
in
ret
sub
sub
add
pusha
push
mov
stos
mov
cmp
pushf
xchg
add
pop
repz
repz
sbb
pop
mov
movsb
jmp
aad
leave
jmp
inc
cld
mov
clc
xor
add
mov
jae
jne
xor
test
loope
vhaddpd
cmp
insl
jnp
popf
pop
jbe
icebp
popa
mov
cmp
xlat
pop
mov
xor
fdivl
int
arpl
mov
stos
dec
int
inc
bswap
imul
fcoms
or
mov
test
xor
jmp
xor
jle
adc
or
or
in
xchg
sbb
out
sub
or
pusha
xor
and
test
jno
mov
and
aam
mov
sbb
lret
out
sbb
cwtl
sbb
mov
rcr
popa
xor
loopne
faddl
mov
jo
mov
mov
es
sub
stos
xchg
scas
dec
add
mov
dec
fidivrl
xor
iret
and
push
or
cmp
sbb
add
aad
cld
pushf
dec
and
loop
sub
mov
int
scas
push
out
cmp
push
in
sub
pop
xchg
cmp
jmp
mov
pop
jg
out
imul
adc
daa
dec
ret
outsb
sub
js
jge
cs
mov
loop
movl
push
adc
sub
push
inc
sbb
mov
sub
and
mov
pop
dec
push
push
and
mov
pushf
xor
outsl
dec
xor
pop
xchg
icebp
fbld
movsb
mov
xchg
cld
imul
add
add
push
das
out
lret
popf
daa
cmpb
shl
hlt
in
lds
scas
push
sub
insl
adc
hlt
pop
fwait
jno
stos
mov
in
xchg
gs
cmp
popa
pop
mov
mov
repz
jb
cmpsb
sar
in
xchg
sbb
sar
push
dec
mov
jb
scas
mov
scas
xchg
push
cltd
fwait
sub
rclb
pop
movsl
shlb
dec
imul
ja
repnz
fisubl
aaa
shrb
inc
je
bound
adc
xor
nop
pop
mov
sbb
popa
rclb
in
repz
insl
inc
insl
jecxz
adc
mov
pop
and
mov
fwait
and
push
clc
je
dec
pop
cmp
cld
mov
xor
shl
inc
jns
in
add
and
add
adc
jp
xchg
dec
pop
adc
subb
stos
loope
pop
push
pushf
bound
pop
std
pusha
andl
insb
ror
dec
stc
fdivrs
pop
sbb
xlat
lcall
mov
xlat
scas
or
sub
lods
orl
cmp
xchg
and
repz
adc
in
xchg
sbb
test
in
xchg
sbb
aas
fwait
mov
dec
mov
adc
xchg
push
and
fdiv
popf
xchg
sub
stos
inc
in
rcll
pushf
adc
aad
ljmp
or
inc
and
negl
clc
test
and
mov
mov
inc
fs
aad
xor
arpl
popa
or
les
cmc
and
pop
nop
sub
das
cmp
insl
xchg
cmp
fildl
pusha
jnp
push
sub
push
rcr
push
sub
add
xchg
jne
mov
sub
pop
inc
adc
push
lcall
insl
lods
repz
jbe
cld
and
stos
or
inc
push
pmuludq
lret
insl
out
sub
sbb
orb
cmc
popf
stos
arpl
adc
jmp
pop
std
scas
data16
test
adc
mov
push
fwait
dec
aas
mov
mov
call
dec
xlat
or
inc
fdivrs
out
and
push
test
scas
nop
push
xchg
mov
xlat
cmc
test
outsb
das
in
dec
mov
cmc
aam
hlt
dec
or
in
aaa
arpl
jo
mov
out
adc
lcall
jns
mov
adcl
inc
rclb
or
fsubr
inc
adc
mov
les
sub
add
sbb
mov
xchg
cmp
out
rorl
dec
cmp
pop
int3
jns
loopne
cmp
gs
or
insb
push
sub
xchg
pop
jmp
loopne
jne
dec
jge
or
xchg
pop
and
repnz
and
icebp
sub
mov
mov
imul
pop
das
insb
jp
push
push
das
sarb
aam
sub
pushl
rorb
push
jnp
out
mov
test
repz
mov
lock
xlat
scas
sbb
adc
bound
incb
or
icebp
jmp
divb
adc
mov
hlt
sbb
or
mov
idivl
add
jp
fs
inc
or
in
xchg
test
stos
lea
nop
xchg
add
mov
jp
scas
inc
pop
pop
jg
sbb
fsub
fdivl
jle
push
insl
loopne
ret
enter
cmp
push
and
arpl
mov
fdivl
pop
adc
scas
add
or
push
mov
add
ret
jae
vunpckhpd
pop
scas
sarl
pop
addb
rcll
clc
mov
and
testl
out
xchg
imul
int
cmc
mov
pop
inc
or
loopne
pop
jo
addb
das
sti
dec
call
lods
add
push
inc
mov
icebp
aaa
push
adc
push
in
xor
mov
stos
mov
pop
daa
ror
je
pop
adc
sbb
lods
and
lret
mov
cli
mov
shll
dec
in
outsl
dec
push
fs
das
arpl
clc
movsb
test
push
lret
xorb
sbb
pop
xchg
std
mov
into
or
mov
adc
shrb
mov
stc
inc
or
mov
mov
xlat
mov
movsb
fiadds
pop
xchg
stos
push
mov
out
adcb
dec
xor
mov
mov
call
stos
inc
jnp
das
xor
popl
xchg
inc
in
cmp
push
and
das
out
ds
into
lea
rolb
push
in
adc
sub
and
push
jge
call
mov
scas
loop
cmp
add
ror
lcall
leave
mov
mov
and
outsl
mov
rcrl
sub
ss
jbe
or
jnp
fadds
addl
adc
lds
and
ja
ja
jns
push
fcoml
push
call
and
sub
xlat
fisttpl
stos
call
lcall
jg
sub
and
add
es
jne
rcrb
push
rcr
inc
mov
jge
pop
outsl
nop
nop
dec
dec
xchg
andb
ret
mov
inc
or
aas
jbe
mov
inc
insl
jo
dec
rcr
repz
pop
into
imul
mov
shrb
inc
pop
out
cwtl
shl
test
and
shll
sbb
and
mov
jecxz
xchg
mov
call
push
xor
bound
xchg
and
push
sti
push
leave
aad
and
sti
cwtl
dec
dec
push
pop
jo
popf
xor
xor
sub
jns
mov
aas
cs
jge
inc
xor
stc
pop
insl
pop
aam
cmpb
mov
clc
aaa
pop
es
and
orb
ljmp
mov
cmp
xor
cmc
sbb
jae
mov
enter
add
dec
dec
pop
out
xchg
into
stos
mov
and
adc
mov
pop
daa
test
cmp
mov
stc
ds
add
jnp
or
movsb
jo
popf
add
xor
pop
jle
add
mov
cmp
inc
cmp
push
jne
hlt
mov
adc
sub
pusha
stos
les
ljmp
cmp
mov
add
add
or
xchg
daa
std
sbb
mov
mov
dec
mov
pop
add
sub
ret
sbb
adcl
and
sbb
jmp
adc
aas
cld
roll
addr16
cmp
push
fldlg2
mov
testb
stc
icebp
add
mov
orb
jle
xchg
cmc
in
push
jp
popa
jge
sub
popf
ljmp
les
imulb
add
add
mov
testb
repnz
jbe
or
lds
xrelease
xchg
lods
adc
mov
or
sub
push
mov
fstl
imul
push
cmpsl
mov
mov
sbb
xchg
mov
enter
aaa
sbb
jge
pop
insb
jl
test
popl
sub
pop
jno
ds
mov
test
ficompl
add
imul
dec
cli
cs
out
mov
lcall
lods
adc
mov
lret
xchg
sub
xchg
xchg
mov
outsb
dec
out
xchg
xor
or
fildll
fistps
mov
jg
popa
aas
ss
aam
mov
push
rcll
cmp
mov
sub
loopne
push
push
inc
pop
insb
rcll
or
adc
popa
and
mov
xor
dec
fisubrs
aaa
call
pop
adc
adc
xor
mov
fnsave
dec
sub
mov
rcrb
nop
push
pop
outsl
mov
aaa
jl
mov
jecxz
jbe
xor
sbb
and
xchg
jmp
lods
js
shl
call
fnsave
sbb
daa
push
ljmp
mov
movsb
incl
sub
cli
in
out
addr16
pop
mov
enter
mov
mul
dec
ja
dec
ret
mov
rcr
enter
push
test
pop
or
sbb
push
mov
pop
pop
jp
cmp
push
cmpb
in
inc
fisttpl
dec
mov
pop
jmp
ljmp
mov
movsb
nop
mov
xor
jp
in
mov
rclb
stos
adc
pushf
inc
adc
lret
jle
sbb
jo
adc
mov
stos
cltd
inc
xchg
jp
xor
leave
mov
dec
inc
jle
movsl
xchg
push
bound
dec
and
lea
sub
inc
mov
or
sti
jae
psllq
outsl
lods
aad
pop
pop
inc
dec
sub
dec
ss
mov
push
repnz
add
sbbb
xchg
fsubrl
xlat
shll
in
pop
push
shrw
dec
jp
sbb
xchg
stc
cs
loope
xchg
scas
pop
adc
fsubl
aad
insl
cmp
xor
inc
pop
dec
cli
inc
mov
out
adc
mov
xchg
gs
mov
pop
push
sub
dec
aaa
cmp
jbe
movswl
lods
cld
pushf
out
pusha
pop
mov
jg
ret
jl
mov
jge
shll
mov
iret
data16
aam
pushf
mov
ret
xchg
push
lock
pop
cld
repz
fwait
inc
push
inc
in
ljmp
pop
loope
sbb
lcall
clc
cmp
mov
xchg
mov
inc
jnp
loop
pusha
or
jns
jle
out
cmpsl
jge
cmp
mov
xor
and
rol
rcll
bound
jo
or
sbb
pushf
lea
inc
das
call
cld
push
mov
xchg
stos
push
push
add
bound
xchg
fnsave
add
push
icebp
mov
lret
add
je
mov
add
cmp
bound
sub
or
push
push
and
and
lods
mov
jecxz
jl
mov
add
inc
inc
xchg
jl
inc
lcall
test
inc
xchg
out
sbb
jb
rorl
sub
sarb
xor
in
cmp
dec
push
rorl
or
sub
xchg
sub
sub
inc
sbb
jecxz
sbb
sub
or
sub
mov
scas
gs
outsb
sub
fs
add
imul
sahf
inc
mov
mov
scas
sbb
inc
movsl
inc
lcall
divl
es
cmp
xor
movsb
pop
jbe
inc
and
orps
pop
out
mov
cmp
pop
sbb
stc
add
push
mov
lea
movsl
std
cmp
repnz
mov
add
repz
and
push
js
xor
repz
sti
sti
addr16
subl
lea
stos
push
lods
sub
cld
and
bound
push
sarb
je
and
fwait
cmp
loopne
mov
popf
dec
rcll
sbb
sbb
imul
pop
pusha
or
pop
pop
sub
fstpl
mov
insl
les
jle
clc
repnz
pop
xor
mov
nop
mov
or
xchg
in
cwtl
bound
std
int
cmp
inc
aaa
outsb
in
movsl
imul
stos
and
sahf
add
inc
inc
scas
adc
jg
std
pop
mov
aad
xchg
fists
in
push
and
and
push
add
add
cmp
or
push
push
push
lods
dec
imul
inc
outsb
adc
jge
sbb
in
and
cli
mov
mov
and
movsb
xchg
sub
pop
das
in
outsb
mov
xchg
cmp
inc
lcall
add
push
js
mov
inc
xchg
mov
rcr
and
test
int
cmpsl
sbb
dec
xor
ftst
xor
sub
loope
cmp
fcoms
push
mov
ror
or
sahf
inc
hlt
or
push
dec
cli
mov
test
cmp
pop
and
pop
sub
mov
frstor
int3
and
je
sbb
outsl
neg
repz
fmull
lds
xor
xor
jmp
aam
cwtl
test
jl
addb
cmpsb
and
add
sbb
fnstenv
pop
pop
nop
cli
int3
clc
test
jae
jae
int3
rcll
sbb
pop
pusha
dec
jnp
mov
outsl
sbb
aas
sbb
orl
or
xchg
sti
pop
mov
data16
stos
out
add
adc
call
mov
je
stc
xor
sbb
daa
rclb
adc
xchg
dec
outsb
sbb
imul
xchg
and
cmp
pop
inc
in
popf
sbb
and
cmc
sahf
add
not
ret
es
repz
mov
cltd
xchg
test
bound
fdivrl
stc
xor
or
xchg
adc
imul
sub
lea
test
push
inc
mov
ret
adc
dec
lods
inc
mov
push
call
scas
ds
push
dec
pop
and
ret
pop
mov
add
inc
cmp
dec
sbb
or
out
and
pop
xor
mov
sbb
and
jae
jns
jne
sti
add
push
pop
lods
fnstsw
add
roll
mov
jns
fstpl
mov
loopne
imul
ret
popa
mov
lret
xchg
xor
xchg
out
mov
inc
pop
and
stos
jl
and
mov
mov
mov
fcomip
and
pushl
push
leave
adc
cs
pop
sti
and
jmp
push
mov
pusha
sub
push
fldcw
scas
movsb
pop
add
fwait
or
in
sbb
mov
dec
aam
or
adc
push
xor
ror
cmc
jae
sbb
int3
addr16
mov
sbb
and
xchg
mov
arpl
jecxz
jmp
add
aaa
sbb
xchg
pop
dec
lds
icebp
out
push
stos
sbb
jne
mov
adc
pop
sub
lret
jle
mov
add
cwtl
hlt
pop
or
add
arpl
mov
pushf
int3
shll
push
popa
mov
adcl
mov
jo
cmp
out
cltd
lods
shrb
inc
xchg
mov
call
cli
in
int3
popf
ret
sub
mov
pop
ja
push
xor
or
icebp
jl
popf
sti
mov
outsl
xor
push
lret
cld
and
inc
jp
rclb
xchg
mov
sti
jmp
dec
mov
dec
repz
cmp
mov
dec
cmp
xor
add
push
mov
aas
cmp
mov
outsb
cwtl
les
mov
mov
sbb
jns
sub
ljmp
jb
fildll
xchg
into
inc
inc
push
or
imul
inc
arpl
ljmp
xchg
pop
stos
mov
sbb
sub
jns
shlb
and
mov
mov
jo
jmp
stos
addr16
in
xor
btcl
jl
andb
adc
xchg
retw
mov
jmp
int3
inc
fmuls
sbb
jg
mov
inc
das
inc
in
pop
mov
adc
aad
jecxz
stos
or
xor
pop
shl
cmp
jbe
mov
shll
imul
adc
loop
or
sub
cmpsl
aad
ja
mov
sub
jmp
js
icebp
jns
xor
jmp
pusha
xor
fsubrl
loop
xchg
out
rol
fstpl
and
test
jle,pt
lret
adc
push
jle
daa
aam
rol
daa
xor
xchg
dec
fnstenv
out
inc
or
scas
scas
pop
iret
xchg
lahf
icebp
dec
and
scas
movsl
sbb
mov
loopne
jnp
and
jo
lods
or
jl
and
gs
imul
jno
popa
nop
movb
sub
loope
mov
mov
jns
lcall
jecxz
aad
pop
leave
popf
mov
popa
in
dec
aam
ror
dec
ja
cmp
fucomi
push
mov
sbb
dec
jns
sti
fidivrs
xchg
stos
out
vsubpd
mov
mov
inc
ret
stos
pop
dec
pop
push
xor
mul
fldln2
pop
dec
push
push
push
adc
mov
fcompl
and
xor
sub
ficompl
fwait
jo
addr16
rol
xchg
xor
shrl
and
in
mov
cmp
lds
std
mov
in
ljmp
dec
or
push
cmp
cmpsl
sbb
cmpl
mov
rcl
lds
cmp
fildll
testb
addr16
out
push
test
mov
inc
loop
sbb
jecxz
jmp
pop
push
cmp
xchg
ja
push
lret
mov
arpl
aaa
adc
into
add
mov
adc
jnp
in
xor
jle
pop
rcr
daa
lea
outsb
int
loope
call
fs
cmpsl
sub
outsb
xchg
subl
xor
inc
loopne
lret
fisubl
std
ret
jne
xor
test
push
sbb
ds
jg
pop
pop
adc
jne
or
push
or
cli
push
cmp
mov
add
or
mov
fwait
jl
fdivrl
rcr
imul
out
jg
push
dec
dec
enter
stos
fdivrs
lock
outsb
add
inc
mov
or
fisttpl
icebp
or
xchg
and
adc
jb
add
insb
xor
adc
adc
sbb
cld
pop
test
xchg
jp
jns
ret
scas
scas
push
push
cmpsl
push
xor
or
insb
aas
pop
xor
outsl
mov
clc
mov
cmpsl
cmp
jmp
dec
ljmp
dec
roll
xor
loope
jmp
int
add
jecxz
in
cmp
les
or
fsubrl
add
push
vsubss
adc
movsb
adc
jge
vpshlq
pop
sahf
mov
mov
out
jge
push
cmp
lods
mov
loope
mov
aam
ja
dec
pop
sahf
mov
mov
das
jmp
mov
push
ja
clc
mov
pop
mov
ficompl
mov
cmpsb
imul
out
je
sub
push
push
cvtdq2ps
fwait
pop
pop
mov
popf
stos
lds
pop
cmp
mov
insb
insl
dec
sub
xchg
push
insl
xchg
adc
gs
adc
rolb
cmp
push
mov
push
sub
jbe
lahf
or
lahf
insb
xchg
bound
fptan
push
xchg
sub
xorl
mov
shrb
cli
insb
pop
sbb
or
test
cwtl
mov
cld
xchg
pop
xchg
sub
lea
and
notl
test
push
out
xor
push
sbb
popa
fstpt
fcmovnb
mov
in
fiaddl
push
mov
aaa
add
mov
cmp
fwait
xor
dec
push
dec
xlat
out
mov
push
js
cmp
mov
pop
cmpsl
dec
rcl
jecxz
in
lds
cmp
mov
inc
mov
shrl
repnz
push
leave
dec
push
mov
ss
lcall
pop
idiv
pop
cltd
push
mov
pop
xchg
mov
aad
imul
cmp
ret
lret
out
sti
cmpsb
scas
test
mov
in
adc
outsl
mov
fimull
jne
roll
sbb
ret
ficoml
sub
addl
pop
and
mov
mov
mov
fidivrl
push
sub
in
insl
adc
or
push
ret
or
mov
xlat
pop
in
gs
fucomp
and
xchg
cmp
inc
sbb
mov
inc
loopne
stos
orb
xchg
push
jo
or
jae
pop
and
int3
sbbb
push
ljmp
dec
mov
fidivl
repz
sahf
mov
test
movsb
and
push
push
stos
scas
xor
mov
out
dec
fisubrl
mov
push
inc
ss
lret
mov
enter
jo
pop
pop
sub
push
into
adc
js,pn
xchg
and
dec
fs
mov
adc
dec
test
pop
popa
push
sub
sub
xchg
lock
xor
and
add
cmp
enter
jbe
out
addl
push
and
inc
xlat
xor
lahf
push
adc
repnz
test
mov
fs
inc
pushf
lods
hlt
sbb
incb
mov
inc
sbb
adc
rcrl
fs
and
aaa
lret
je
or
ja
je
push
jbe
cwtl
int3
scas
inc
aad
sub
jae
lods
daa
in
mov
or
out
mov
test
bound
xchg
jp
dec
cwtl
dec
xor
into
dec
rcll
mov
imul
scas
cwtl
loope
repnz
pop
pop
ja
mov
ds
push
or
cmp
mov
xchg
je
in
jl
mov
jo
mov
sahf
fmulp
cmp
xor
mov
add
pop
push
cwtl
stos
ljmp
stos
xchg
cmpb
jno
mov
pop
loop
das
fldlg2
test
pop
sub
ljmp
xlat
aaa
add
xlat
movsb
or
shll
stos
sub
jp
repz
push
daa
mov
mov
pop
adc
xchg
bound
lea
cmp
push
ds
xchg
mov
pop
in
jmp
or
cmp
xchg
insl
dec
xchg
je
or
ret
mull
sub
add
cwtl
js
out
or
add
sbb
add
xchg
mov
outsl
imul
or
mov
or
mov
mov
icebp
jne
daa
ljmp
or
mov
xchg
push
mov
mov
loopne
sub
int
notb
enter
pop
add
jae
or
mov
popf
mov
fld
mov
push
das
pop
stos
out
gs
mov
ja
subl
out
inc
shll
jns
mov
sahf
hlt
xor
push
das
pop
mov
outsb
jecxz
cmpsb
daa
cmp
ss
xchg
addr16
sahf
or
mov
mov
cwtl
pop
lcall
xor
sbb
mov
into
sub
dec
jl
nop
mov
ss
mov
pop
incb
jo
add
xor
mov
jno
sub
nop
scas
loope
test
mov
push
mov
cltd
insb
adcl
push
jge
imul
xchg
adc
in
pushf
dec
int3
movsl
js
and
push
mov
repnz
mov
and
int3
fistps
ret
repz
mov
jecxz
jl
mov
aam
cmpsl
shll
addl
and
adc
mov
xchg
test
cwtl
loope
fiaddl
jne
add
push
lahf
adc
je
adc
inc
xchg
mov
pushf
dec
out
or
mov
ret
aas
ret
std
push
inc
and
lods
sub
sub
pop
jns
push
mov
jnp
jo
pop
xor
mov
rol
dec
lods
xchg
test
adc
pusha
cwtl
cmc
jp
scas
adc
bound
adc
jmp
aad
cmp
enter
xchg
adc
sti
scas
imul
xor
xchg
shll
sbb
movsb
mov
xchg
adc
xchg
and
lock
inc
adc
and
idivl
dec
mov
pop
xchg
int3
ret
sbb
mov
jle
adc
mov
stos
jns
stos
clc
inc
je
ja
js
push
leave
push
jmp
dec
fisubs
orb
scas
cmp
pushf
fwait
stc
push
cld
movsl
adc
mov
push
or
mov
xlat
jo
fcoms
push
scas
mov
xor
in
mov
fwait
cltd
icebp
out
popf
push
lods
sbb
cmc
add
adc
mov
or
cs
fildl
int3
sub
insl
push
inc
mov
mov
gs
jp
mov
xor
cmpsl
mov
stc
mov
aad
sub
or
jo
fs
sbb
adc
stc
mov
imul
iret
outsl
insb
xchg
sbb
cmp
jns
pop
jne
in
adc
push
out
ja
dec
jbe
popa
in
mov
int
popa
push
or
pop
mov
mov
lock
push
enter
jnp
xchg
testl
cmp
pusha
mov
fisttpl
push
cmpsl
gs
js
movsb
insl
scas
gs
int3
dec
pop
movsb
test
sub
jnp
jg
and
adc
test
mov
xlat
cwtl
fdivl
cli
test
shlb
and
push
and
in
imul
je
test
cmp
mov
sbb
dec
push
xchg
imul
and
xchg
sbb
jne
dec
mov
incl
sahf
jge
cmp
jb
call
mov
out
lret
pop
scas
call
jns
int
mov
ret
out
and
nop
mov
into
lret
stos
mov
jmp
in
jecxz
push
jns
jb
xchg
outsb
cmp
popf
iret
insb
paddsb
cmpsl
mov
ret
popa
das
scas
aam
imul
popa
cwtl
outsl
scas
bound
fsts
in
lods
jmp
jl
xchg
mov
int
jo
xlat
dec
cmp
pop
xor
aad
arpl
ljmp
aas
inc
ds
bound
mov
pop
mov
mov
insb
push
sti
fucomip
xchg
mov
bound
add
lret
aam
loope
and
push
push
sub
and
jae
popa
cld
adc
lret
es
mov
or
xchg
sub
js
xor
push
popf
xchg
push
mov
js
std
cltd
inc
lret
fucomi
out
nop
iret
and
lret
lods
cmp
add
xlat
insb
andb
cmp
rol
push
les
xchg
popl
call
sahf
add
sti
stos
or
jle
adc
push
push
ljmp
inc
sbb
dec
je
lcall
jecxz
rcrl
xchg
cwtl
shlb
and
fwait
pop
push
leave
xchg
cmpsb
fadds
outsb
lret
es
stos
push
dec
ds
pusha
out
mov
imul
or
sub
mov
int3
call
sub
in
push
jae
pop
cs
mov
mov
cmp
ljmp
cmovns
push
mov
test
xor
cs
sub
push
les
call
push
xlat
mov
repz
sub
bound
call
mov
lods
fsubrl
dec
pop
jecxz
in
jne
xlat
test
scas
push
mov
adc
test
adc
push
out
mov
icebp
fsubrl
push
into
bound
enter
mov
std
sbb
mov
mov
incl
xchg
sub
nop
dec
sbb
mov
out
add
inc
shlb
shll
lods
imul
cmc
cmp
int
xchg
mov
mov
aaa
sbb
fiaddl
mov
arpl
cmp
lret
insl
jbe
call
xor
les
out
cwtl
push
fistpll
and
dec
imul
adcb
insb
inc
fdivrs
jecxz
popf
xchg
fneni(8087
sti
fistl
add
or
push
cmp
dec
add
xor
in
jecxz
sbb
xor
inc
push
incb
jmp
add
dec
fidivl
test
imul
pop
enter
mov
in
xchg
popl
xchg
fyl2xp1
mov
push
jns
outsb
negb
out
add
and
sahf
push
sarl
xchg
leave
push
jbe
or
sub
adcl
and
inc
hlt
out
adc
mov
pop
aaa
pop
sahf
inc
jp
std
xor
arpl
sahf
rclb
int3
popf
mov
out
cli
aas
xor
mov
negb
fsubp
xor
lahf
movhps
imul
decl
push
pop
bound
lods
cmpsb
xor
rorb
pop
sbbb
ds
loope
xor
fdivl
push
ss
insl
sub
fnsave
imul
add
fbstp
mov
adc
filds
inc
mov
push
out
scas
lds
dec
add
xchg
sbb
cwtl
jmp
fldenv
mov
push
leave
sub
sbb
aas
in
cmp
mov
sub
mov
jmp
jge
fiadds
ja
nop
mov
sahf
adc
cmp
call
or
mov
mov
rorb
cmc
xorl
add
and
insl
xlat
jp
add
pop
in
and
mov
mov
jmp
add
hlt
cli
mov
hlt
sbb
lock
ret
pushf
jle
loop
shll
test
jnp
or
push
jne
inc
cmc
jb
and
cvtdq2ps
cmc
test
in
xchg
pop
lods
ja
cltd
fnstcw
sub
lods
out
out
and
mov
mov
cmp
pop
sub
daa
dec
btr
insl
aaa
jns
add
add
jbe
push
aaa
mov
sbb
mov
into
int3
cmpsl
mov
jno
push
lea
sbb
xchg
mov
lods
jnp
bound
les
das
xchg
in
hlt
inc
mov
scas
dec
sbb
test
ss
mov
nop
movl
inc
xlat
arpl
outsb
call
hlt
lods
or
aad
sbb
mov
loop
dec
out
popf
bound
mov
clc
dec
jae
insb
jb
outsb
leave
aam
jns
add
fndisi(8087
scas
bound
in
fs
cs
flds
xchg
lea
mov
sahf
xchg
das
jne
cmp
repnz
sub
push
enter
cmpl
jl
out
fstpl
mov
xchg
ret
inc
pop
push
sarb
lea
pop
mov
loop
push
jno
xchg
push
movb
push
in
orb
add
insb
or
fsub
mov
lds
mov
sahf
sub
rol
jp
mov
mov
jmp
jb
push
pop
jbe
cltd
jns
add
pop
lods
sub
rorl
mov
xor
es
repz
or
mov
jbe
cli
into
adc
stos
xlat
dec
into
xchg
dec
jnp
xor
lods
cmp
xor
idiv
adc
rcrl
scas
into
stc
rol
cmpsb
mov
pop
jle
ss
cs
out
mov
hlt
out
push
mov
jnp
jp
loope
fsubs
dec
cmp
inc
into
jo
fdivrs
cmp
jle
test
orb
nop
insl
push
gs
lea
add
cmp
push
fildll
iret
ficoms
ljmp
mov
stc
addl
pop
in
pop
pushf
lcall
arpl
loopne
call
mov
add
mov
sbb
mov
or
sub
int3
mov
push
inc
mov
insl
fstl
testb
jnp
js
mov
mov
sub
std
imul
xchg
sub
mov
sub
pop
nop
je
sbb
ror
hlt
mov
out
or
jge
adc
xlat
pop
arpl
dec
call
imul
push
cmpsb
mov
or
pop
mov
bound
xor
loope
cmc
xor
cmp
clc
testl
mov
pusha
divl
sub
push
or
sahf
adc
int3
mov
add
jae
stc
scas
xchg
test
rol
inc
push
dec
aad
adc
xchg
daa
jp
push
or
test
adc
and
scas
nop
dec
mov
fucomp
mov
jg
mov
cld
add
scas
mov
adc
mull
add
jns
insl
add
sbb
inc
sarl
ret
lea
loopne
repnz
xor
inc
and
xchg
out
xor
dec
loope
sbb
data16
push
push
sbb
add
loop
int3
push
jmp
cmc
cli
inc
jl
ret
xor
aas
or
dec
scas
mov
iret
and
add
loop
mov
and
and
les
jns
sahf
or
lret
pop
mov
adc
cmp
xor
jecxz
xlat
imul
sbb
jg
jp
sub
cltd
pop
aam
mov
jo
xor
mov
daa
stos
or
dec
icebp
test
lods
cmpsb
inc
xchg
push
mov
push
sub
xor
pop
out
aas
sub
daa
sub
inc
aas
dec
rcr
mov
cs
or
jae
in
xor
std
fs
insl
mov
push
mov
jmp
jnp
pop
stos
enter
fbld
jmp
inc
lods
mov
fnstcw
leave
out
cmp
add
pop
lock
je
sub
mov
pop
sbb
les
cmpsl
dec
iret
jnp
pusha
or
out
orl
popf
dec
clc
xchg
cmpsl
xorl
ds
mov
imul
aam
cmpsl
repz
jns
das
shl
sub
lahf
dec
ljmp
jb
int
jns
ja
cltd
inc
dec
mov
gs
in
sbb
out
in
sbb
cmpsb
fldt
xor
mov
mov
dec
push
mov
mov
mov
mov
adc
mov
outsl
lret
lret
rcrl
adc
outsb
or
nop
xor
jae
cltd
pop
cli
push
inc
mul
sbb
sbb
cmpb
in
pusha
pop
mov
xlat
mov
rcrb
sbb
ja
inc
mov
out
mov
outsl
mov
js
xchg
in
les
pushf
les
int
dec
movsb
aam
adcb
push
nop
push
push
fidivl
jne
imul
adc
roll
fsubp
scas
sbb
sbb
mov
data16
lcall
jecxz
sbb
test
mov
xchg
pushw
out
sbb
jbe
loope
inc
loopne
push
sbb
dec
and
je
aam
or
movsl
insb
inc
fwait
sti
imul
jne
inc
test
int3
push
addr16
ljmp
sub
mov
shlb
xor
fcomps
inc
jmp
mov
and
loop
lret
or
sub
push
mov
movb
xchg
inc
nop
mov
cmp
dec
sahf
mov
mov
mov
cmp
mov
jno
popf
in
call
sub
adc
sbb
pop
jp
jg
dec
leave
rcl
icebp
test
pop
aad
cmp
jno
sub
pop
nop
rorb
add
push
shrl
pop
jo
dec
mov
mov
and
orl
push
push
mov
in
add
jecxz
ja
movsl
pop
sub
push
movsl
rol
in
imul
jge
add
sub
cmp
loop
mulb
les
negl
xor
jg
jb
insb
push
test
ficompl
aaa
xor
dec
cmp
popf
arpl
daa
cwtl
xor
push
fcomps
nop
push
jge
sbbb
movsb
inc
scas
es
jg
inc
dec
lea
add
icebp
test
xlat
pop
xchg
jp
sbb
dec
dec
ficoms
in
decb
pop
or
push
pop
push
mul
sub
inc
or
fildl
xchg
jp
andl
pop
data16
inc
scas
test
push
push
incl
movsb
mov
stos
int3
popf
dec
jnp
popf
mov
in
ds
mov
cmp
push
ljmp
sbb
pusha
or
nop
fcompl
add
stc
imul
je
test
addl
xchg
xor
fiaddl
ret
mov
pop
cmovb
jg
in
mov
outsb
cmpsb
adc
aad
sbb
jne
into
mov
xor
jo
out
and
sbbl
and
dec
adc
dec
sub
push
mov
dec
pop
lea
push
jo
pop
outsb
int
std
jl
and
adc
test
sahf
mov
jl
stc
aam
jne
sbb
push
xor
int
cmpsb
mov
repnz
jno
loopne
or
stos
test
dec
mov
loop
jg
out
jmp
cmp
sbbl
mov
sub
shlb
scas
fiadds
xor
add
push
xchg
inc
mov
lds
mov
jnp
push
das
fnstenv
sbb
mov
jecxz
mov
pop
insb
push
or
pop
scas
or
pop
icebp
jno
jno
into
add
fmull
or
adc
rclw
push
insb
out
xchg
sbb
insb
test
loopne
mov
inc
cs
xor
cli
mov
push
fisubs
mov
and
cmp
pop
and
mov
push
rcrb
mov
cmp
daa
fwait
mov
xchg
dec
add
sub
mov
sub
daa
xor
dec
mov
mov
imull
sbb
sbb
inc
adc
xchg
add
jl
adc
sti
js
lcall
dec
ss
repz
push
les
test
pop
jnp
push
cmp
or
or
and
jns
jecxz
push
cmpsb
ret
dec
jg
cwtl
hlt
sbb
inc
ret
or
movsb
clc
push
dec
lods
and
ja
clc
adc
idivb
test
dec
sbb
add
cmp
xchg
cltd
add
mov
pop
aas
hlt
push
test
sbb
insb
mov
xchg
lods
push
cwtl
or
inc
push
cs
cmp
cmpsl
push
fsts
sahf
bound
push
pop
adc
push
push
inc
or
mov
push
fimuls
idivl
rorb
in
shlb
and
pop
push
jmp
cmp
cld
fcomps
push
fwait
pop
cli
and
cmp
cmp
sbb
xchg
out
decl
sub
and
es
mov
dec
add
xchg
cltd
and
lcall
jne
xor
pop
sbb
mov
outsb
movsb
stc
inc
leave
imul
aas
cmp
push
sbb
inc
aaa
in
sbb
out
ljmp
sub
adcb
inc
xchg
mov
pop
stos
jo
pop
mov
xchg
cwtl
cmp
loope
add
into
fimull
aas
stc
inc
in
ss
negl
movups
lods
inc
push
mov
sub
imul
sti
fisubl
xor
and
sbb
pop
mov
pop
aam
xor
in
out
int3
xor
xor
hlt
jle
lods
aam
jno
mov
pushf
sar
xchg
push
mov
jo
cmp
mov
iret
inc
gs
adc
gs
movsb
cmc
fldcw
inc
cmp
cmp
pop
or
shrl
cmc
ffree
fmull
lods
mov
ret
mov
jo
pusha
fwait
cwtl
pop
loopne
cwtl
jne
lret
add
fcompl
or
cli
fmuls
lcall
sbb
hlt
jl
jo
loope
mov
dec
mov
js
jmp
lahf
jg
push
xchg
inc
jg
push
xchg
pop
push
addb
fisttps
mov
mov
sbb
xchg
lahf
and
or
cmp
int3
rclb
mov
pop
cmc
repnz
pop
dec
jecxz
mov
jae
lods
mov
jl
cmp
rorl
mov
add
cld
jmp
sahf
ss
sahf
and
cmp
lret
cmp
jnp
add
popl
popf
mov
add
jecxz
out
lret
aas
mov
clc
lods
icebp
mov
int
xchg
nop
adcb
xchg
pop
mov
cwtl
cli
adc
mov
xchg
xor
in
push
mov
mov
cmp
data16
or
or
filds
or
lcall
fs
out
popa
adc
mov
dec
inc
inc
and
or
jecxz
les
cwtl
dec
rcll
push
dec
pop
adc
ljmp
jp
cmpsb
fidivrl
jge
ljmp
mov
ret
cli
int
mov
mov
adc
push
pop
push
dec
shrl
lods
dec
test
shlb
inc
aad
cli
pop
leave
aad
pop
mov
mov
mov
xchg
cs
push
sbb
lahf
aam
xor
ja
mov
pop
repz
mov
jl
jle
imul
and
push
rcrl
inc
or
pop
jns
push
in
xchg
pop
popa
pop
std
lret
lret
lahf
stos
jl
test
mov
js
sub
and
jne
or
pushf
hlt
jl
movsl
jae
popf
xchg
mov
jb
rcrb
mov
sub
xchg
std
test
icebp
adc
pop
cmpsl
int
fsts
adc
push
sbb
aas
push
add
mov
inc
cmp
lcall
std
in
add
nop
cmp
mov
cmp
cmp
shl
cmp
push
and
mov
daa
jle
mov
lret
mov
cmp
fwait
scas
shrb
xor
fs
push
mov
adc
lods
adc
xor
fiadds
clc
roll
fcmovne
sub
cmc
insb
es
loop
shll
in
lret
mov
sub
push
push
push
add
sub
popa
pushf
insb
movsl
cmp
jp
mov
push
mov
rcrb
mov
jns
loope
popf
push
insb
cli
adc
iret
push
jmp
mov
push
lret
pop
cld
call
cli
add
mov
insl
jmp
xor
mov
stc
int3
sub
sub
inc
push
shll
cmp
scas
xchg
aaa
jo
test
mov
cmpsb
cmp
aam
bound
sar
inc
mov
sub
leave
inc
andl
jbe
pop
sbb
mov
mov
roll
cmp
js
test
and
pop
sbb
sbb
mov
test
sbb
clc
jp
fld
lahf
ret
ss
stos
pop
daa
cmp
inc
inc
push
aad
dec
mov
mov
pop
mov
mov
arpl
mov
push
fisubrl
xchg
stos
pop
ds
pop
fadds
ds
lcall
repz
aad
and
lret
jae
and
dec
icebp
cmp
ja
mov
sub
pop
pop
xchg
fmuls
cmp
push
jns
insl
repz
xchg
test
ja
in
jl
addr16
mov
sub
jae
push
stos
in
pop
cmp
dec
test
ffree
pop
mov
cmp
jl
xlat
mov
js
rorl
dec
fstpt
push
xlat
test
aas
inc
out
push
ffreep
lea
add
pop
add
lds
push
sub
clc
dec
mov
sti
enter
repz
sbb
rcll
les
in
sahf
aaa
in
jno
pop
xchg
lock
ss
ds
adc
adc
mov
jne
mov
jbe,pt
aad
sbb
jo
cmp
xchg
aad
adc
dec
inc
in
dec
adc
stos
push
sti
adc
aad
xchg
adc
push
rclb
xchg
lods
sbb
sbb
jnp
lods
test
pop
fisubrl
insl
incl
or
inc
test
cwtl
clc
fcompl
or
cmp
pop
outsl
arpl
push
sahf
stc
pop
push
aad
bnd
cmp
xchg
cs
ret
scas
jge
cmp
and
pusha
cmp
test
mov
roll
mov
inc
xchg
jae
inc
xor
test
gs
mov
sub
push
xchg
jl
loopne
xor
fildl
sti
push
pop
mov
mov
int3
xchg
stc
call
dec
aad
jg
cmp
mov
mov
jmp
mov
imul
jl
mov
sub
xchg
loop
pushw
mov
inc
adc
hlt
out
imul
loopne
in
jle
push
add
or
mov
repz
adc
mov
add
cmpsb
add
mov
sub
adc
sbb
or
sbb
data16
jb
pop
add
and
fwait
test
sbb
jge
dec
jbe
iret
sub
pcmpgtw
push
cmp
cld
cmc
xchg
xor
jge
addb
outsb
clc
insl
loopne
sahf
fisubl
add
les
add
cmp
sbb
sbbl
aaa
jae
sahf
repnz
scas
test
xor
xchg
mov
mov
mov
adc
aam
lods
pop
lret
push
es
lret
add
arpl
sbb
andb
push
pop
xor
adc
pop
push
aas
popa
sbb
bound
movsl
jg
cld
cmpsb
pusha
mov
sbb
xchg
icebp
stos
sub
xchg
call
aaa
pop
or
fsubs
jnp
or
imul
pop
cmpsl
mov
cli
xchg
icebp
shll
lods
sub
aad
and
push
dec
or
add
add
push
scas
xor
fildll
roll
inc
sahf
test
cmpl
pop
fwait
jns
or
ljmp
dec
xor
mov
cmpb
imul
adc
push
into
movsl
sti
sub
sbbb
pop
mov
inc
mov
sub
in
ret
jbe
clc
loop
lret
xchg
mov
xchg
or
jmp
insb
dec
jmp
cltd
mov
sbbl
sbbl
or
add
int
or
add
jno
cwtl
scas
inc
into
jns
adc
cmp
sbb
pop
add
incl
ds
mov
mov
inc
inc
or
xchg
mov
jb
push
insb
xlat
and
mov
xchg
in
add
loope
fisubl
xchg
ds
or
inc
inc
outsb
and
div
movl
bound
mov
jo
and
mov
xor
adc
inc
ds
scas
dec
mov
popa
jge
dec
push
rorl
fwait
dec
sarb
mov
mov
cwtl
mov
aaa
dec
sub
int
xlat
dec
pop
shrl
call
mov
sbb
sub
mov
xor
cmc
jno
hlt
mov
fs
movsb
hlt
add
lods
shl
test
push
xchg
adcb
das
xchg
ret
push
imul
sub
orb
xchg
cmp
sub
mov
adc
pusha
jg
sbb
jle
dec
mov
mov
bound
push
mov
xor
mov
push
xor
out
mov
bound
iret
jae
les
mov
movsb
mov
enter
cmpsb
fcoml
or
jle
sub
call
add
jno
xor
in
dec
stc
cld
or
dec
outsb
testl
repnz
ret
popf
push
cmp
or
cld
xchg
iret
into
jno
in
mov
subl
xor
movsl
mov
addb
fisttpll
andl
out
data16
movsl
adc
mov
jp
stc
cwtl
sbb
or
or
cltd
bound
aas
rcr
and
cmp
and
cli
inc
adc
and
mov
lret
adc
mov
rorb
sbb
adc
add
mov
mov
cmpb
cld
out
out
test
insb
movsl
ret
arpl
xchg
add
pop
sarl
mov
jp
mov
mov
push
je
add
xor
out
push
leave
xchg
dec
insl
mov
aad
dec
ret
xchg
and
out
in
mov
lds
fsubl
mov
les
mov
push
fwait
std
mov
sub
jmp
cli
jp
or
mov
mull
repnz
addr16
adc
xor
sbb
mov
mov
mov
stos
fsub
sets
mov
psubq
jae
sbb
lret
scas
fs
es
loop
or
mov
arpl
into
jge
scas
aad
push
ja
or
mov
jno
out
pop
push
adc
cltd
mov
in
pop
js
cltd
inc
or
stos
jl
stc
rcrb
jne
pop
add
pop
xchg
std
jmp
ss
dec
sub
les
xor
jg
arpl
jo
push
pushaw
xor
fs
mov
push
dec
jge
addr16
std
loopne
mov
dec
and
fs
hlt
jmp
sub
cs
jns
in
dec
mov
pop
cmpsl
jo
pop
pushf
ficoml
adc
pop
mov
or
push
and
add
xor
test
into
dec
mov
push
test
push
jo
pop
daa
cmp
ret
daa
cmpsl
movsl
lock
sti
xchg
and
cmp
adc
mov
push
and
lret
cs
sub
repz
push
jmp
add
push
xchg
in
fistpll
pusha
incb
xchg
fwait
ss
pusha
out
or
insl
mov
cwtl
arpl
out
push
jnp
cmp
xchg
xchg
pop
ffree
jl
dec
pop
movsb
mov
adc
pop
test
mov
ljmp
testb
lock
imul
subb
and
icebp
mov
lock
inc
pop
sti
jo
outsb
loope
out
pop
or
icebp
repnz
cli
push
push
lods
gs
mov
mov
dec
or
clc
jo
aas
cmpsb
fwait
and
dec
movsb
jno
ret
scas
jmp
rcr
or
pminsw
push
fsts
push
scas
xorb
aaa
je
pop
gs
add
fsub
andb
pop
xchg
test
rorb
or
push
bnd
invd
sub
xchg
dec
fcmove
sbb
sbbl
mov
inc
and
mov
xlat
push
xor
jo
pushf
leave
or
mov
jl,pn
testb
push
sbb
push
sbb
dec
push
mov
in
mov
cltd
mov
in
mov
xor
aad
frstor
pop
push
mov
pop
mov
aad
mov
sbb
outsb
or
inc
mov
out
std
aad
loopne
ds
lahf
adc
dec
dec
outsb
inc
cwtl
neg
push
ja
std
int
movsl
mov
jne
sub
shrl
push
int3
into
psrlq
xor
mov
pop
lods
xchg
divb
xor
inc
push
and
cmp
cmc
fidivl
xchg
into
movsb
pop
iret
adc
inc
rclb
shrl
dec
sub
insl
ret
dec
mov
sarl
out
mov
and
pop
xor
lcall
rclb
cmp
sub
cmpsb
inc
leave
add
mov
add
mov
jle
cli
sub
int
pop
inc
stos
mov
cmp
push
cmpsl
and
dec
mov
inc
push
hlt
dec
cmpsb
inc
lret
test
out
sub
cltd
gs
mov
mov
repnz
add
xor
sub
das
lret
out
xchg
orl
mov
add
pop
sbb
adc
in
inc
je
adc
sti
pusha
mov
ss
outsb
or
mov
xchg
test
mov
data16
jnp
sar
or
movsl
fsubl
cmp
mov
repz
sbb
cmp
and
mov
or
adc
inc
hlt
cmp
jg
imul
pushf
cs
xchg
xchg
adc
out
rcrb
stc
fmull
or
cmc
into
xor
inc
out
aad
arpl
mov
ret
cmc
mov
sub
jb
mov
dec
push
cmp
adc
adc
mov
addb
jo
shll
adc
mov
sbb
inc
int
stos
sbb
sbb
xchg
and
adc
lret
stc
add
push
loop
call
add
mov
dec
cmc
mov
mov
jae
rcrb
cld
mov
dec
push
mov
cld
cmp
bound
xchg
xchg
and
daa
mov
std
inc
push
imul
outsl
pop
popa
cmp
mov
add
push
sti
cld
mov
or
lea
rep
std
sahf
xchg
mov
adc
push
jl
xlat
fimuls
cltd
pop
jp
loopne
dec
mov
ja
cld
int3
out
push
movsl
or
int3
xor
in
incb
or
pop
adc
xor
push
in
mov
push
or
push
inc
mov
divb
xchg
icebp
mov
fbld
sti
fdivrl
ret
xor
stos
int3
das
cmpb
mov
aas
mov
cld
jmp
ret
mov
or
push
add
mov
mov
je
mov
lock
mov
into
loop
aam
push
sub
push
lcall
mov
mov
pop
and
jae
inc
repnz
push
mov
stc
andb
fsubs
mov
xchg
push
clc
push
fidivl
push
sub
cwtl
lea
jns
lcall
jge
push
and
mov
pop
jecxz
movsl
dec
or
ja
fistpl
jge
loop
and
sub
lods
inc
mov
lret
testb
adc
jmp
cmc
cltd
movsl
in
call
mov
adc
pop
mov
push
mov
fmull
cmp
mov
add
decl
jns
lock
lahf
sti
addb
or
test
pop
mov
imul
mov
mov
fbstp
lds
mov
pop
add
adc
aas
fbld
mov
cmp
in
lahf
and
jle
add
and
jge
loop
movsl
or
sbb
mov
dec
cmpsl
jne
mov
fadds
sub
pop
xchg
adc
mov
jge
mov
xchg
inc
shr
mov
inc
ret
and
loopne
out
cmp
or
push
outsb
pusha
jnp
cmc
mov
mov
clc
dec
xchg
push
mov
rolb
fldt
inc
mov
imulw
dec
jne
out
mov
inc
stos
ret
in
adc
mov
mov
imul
into
push
ss
imul
cmpsl
inc
daa
sti
mov
cmpsb
pop
push
sbb
push
adc
mov
xchg
shl
sub
cmp
inc
aaa
lcall
adc
int3
dec
jae
idivl
lea
ud1
nop
dec
notl
cmp
pop
cmp
lcall
bound
lock
dec
aaa
pop
cmovb
negb
fldt
or
push
repnz
mov
sbb
lret
in
outsl
sbb
add
aaa
icebp
mov
into
cmp
lahf
pop
ljmp
cmpsl
push
adc
mov
jp
mov
jecxz
jmp
stc
mov
clc
pop
pusha
push
dec
push
or
cwtl
jae
mov
push
xor
lods
jle
add
mov
arpl
mov
sub
sarb
push
mov
and
jb
loopne
fidivrs
jmp
push
ret
dec
cmp
xchg
cld
push
or
jne
push
jl
and
dec
fstpt
and
cld
fcompl
rcll
mov
push
jle
repz
ss
loop
cli
xor
pop
jp
decb
jg
mov
sbb
push
mov
loop
jecxz
cmpsb
test
imul
hlt
cmpsb
inc
push
cmp
jge,pn
lods
mov
and
adc
mov
cmp
adc
cld
mov
rorb
add
and
iret
jmp
sub
pop
icebp
outsl
mov
movsb
mov
sbb
divl
fadds
inc
xlat
fcoml
sbb
cld
sti
dec
shl
rcl
cs
cmp
mov
outsl
das
cmp
jmp
movsl
dec
cld
cmp
adc
pop
mulb
xchg
mov
cmp
aas
repnz
lret
icebp
je
lret
xchg
or
add
jmp
orl
stc
mov
xor
dec
cmovge
jns
je
lcall
xchg
in
cmp
push
jp
test
pop
outsb
cmp
pusha
or
insl
cld
lods
rorl
inc
in
dec
dec
sbb
mov
cs
cmc
and
icebp
scas
mov
pop
sub
mov
negb
add
mul
sbb
cs
jbe
clc
mov
mov
clc
mov
mov
and
aam
mov
ret
sti
lahf
stc
out
pop
jne
xor
sub
mov
dec
xor
fstp
stos
lahf
movsl
inc
mov
lds
rorb
fdivs
fwait
pop
lcall
sti
bound
sarl
clc
popf
leave
nop
inc
ret
dec
shl
xchg
cmpsl
loopne
aas
jns
jb
mov
shrb
pop
ss
aaa
andl
push
and
sbb
pop
sahf
and
inc
mov
imul
daa
daa
in
bndstx
mov
pop
addb
ss
push
mov
xchg
shl
cmc
and
test
inc
mov
jmp
mov
lcall
sbb
pop
adcb
jns
xor
test
pop
fistps
lods
idiv
add
pop
xchg
in
arpl
lret
jmp
jmp
jp
mov
in
jb
or
mov
or
or
lea
jno
sub
in
lods
xchg
add
popf
xorl
mov
and
adc
add
pop
sub
lret
xchg
call
loope
pushf
aam
insl
fwait
pop
sub
shr
lds
imul
inc
pusha
aaa
pop
inc
je
data16
mov
sbb
push
mov
adc
dec
pop
jmp
or
mov
pop
sbbl
mov
fnstsw
dec
push
testb
iret
and
mov
sbb
dec
lock
jo
ror
rcr
add
mov
sub
pop
nop
in
lret
leave
jp
pop
int3
jg
or
aad
sbb
shrb
xchg
popa
fisubrs
jl,pt
call
aaa
rcrl
dec
fnstsw
cwtl
lock
rolb
dec
cltd
add
pop
dec
push
leave
call
cmp
inc
sbb
and
loop
stos
push
roll
xchg
hlt
test
test
js
flds
pop
lret
push
inc
in
push
js
ret
lea
loopne
push
outsl
xchg
mov
aaa
cwtl
popf
cmp
push
xor
iret
inc
cltd
push
pop
test
and
jg
or
test
pop
xchg
dec
or
icebp
sbb
leave
mov
sarl
inc
mov
sbb
sub
out
ret
into
ljmp
in
and
xlat
or
jae
pushf
insl
jg
test
lret
aas
cld
xor
sbb
cli
jb
jne
push
movsl
sub
cmpsb
imulb
test
stos
aad
test
sub
pop
or
outsb
push
cmp
mov
fcoml
insb
orb
jae
scas
dec
cmpsl
xor
repnz
or
jp
cwtl
or
inc
int
ljmp
cmp
cmp
cmp
stos
xchg
in
xchg
pushf
ss
cmp
outsb
jbe
stos
mov
xchg
stos
out
push
pop
jae
aas
push
push
sbb
adc
outsl
sbb
mov
mov
pop
push
jmp
jecxz
mov
les
xor
scas
and
pop
fistl
mov
jbe
call
scas
out
std
mul
mov
xor
or
xor
pop
sarb
push
imul
dec
pop
pxor
mov
adc
add
je
out
sub
adc
inc
lea
mov
push
jl
icebp
sub
rol
ljmp
dec
mov
scas
iret
sub
mov
leave
mov
int
xor
jmp
insb
cmp
mov
dec
sbb
sub
push
mov
sbb
insb
popl
aad
pop
push
stos
dec
or
cs
sti
jmp
test
int3
dec
cmpsb
lods
push
xchg
xchg
js
jo
fsubl
mov
gs
ljmp
out
sahf
push
cwtl
pop
pop
adc
jmp
mov
xchg
xor
cltd
mov
shl
inc
push
jl
jnp
mov
repnz
fstl
dec
push
or
jo
popf
test
cltd
xor
cmc
xor
je
pop
xchg
in
mov
push
or
in
pop
mov
cmpsb
lret
jae
stos
mov
sub
int3
in
rcl
jnp
jge
mov
sub
repz
push
in
pop
jmp
sarl
sbb
jle
nop
ret
xchg
jecxz
loopne
addr16
scas
lret
inc
mov
add
push
outsl
dec
cmp
mov
push
cmp
lret
xchg
fwait
lret
pusha
inc
in
shll
dec
pop
aaa
enter
lahf
js
adc
icebp
dec
dec
xchg
enter
and
dec
mov
popf
clc
adc
adcb
dec
and
es
dec
outsb
lock
jle
aam
inc
push
add
ret
xchg
insb
fcom
scas
cmp
jo
outsb
adc
lret
divb
mov
or
imul
xchg
inc
adc
lods
cmp
dec
pop
jnp
fcomps
mov
mov
call
dec
cmp
ret
sbb
repz
xlat
or
sub
pop
stos
jbe
mov
popf
mull
push
arpl
cli
sbb
iret
push
jns
movsb
mull
daa
fstp
rclb
xchg
in
or
in
jae
add
mov
or
call
pop
pop
out
cs
cmpb
iret
inc
outsl
push
mov
subl
arpl
dec
push
mov
shlb
in
dec
ja
js
lds
adc
clc
sub
mov
xlat
lcall
pusha
cwtl
in
daa
inc
adc
jmp
mov
jp
xchg
sbb
pop
jne
pop
ficomps
cs
mov
or
aad
loopne
adc
mov
cmpsb
jmp
into
testl
adc
xchg
mov
and
insl
fcmovnbe
mov
add
cmpsb
xchg
lcall
push
scas
add
cmp
lret
jl
dec
jmp
xchg
jge
clc
icebp
loop
lcall
xlat
clc
mov
insb
shlb
ljmp
pop
and
mov
cld
mov
clc
icebp
lcall
jo
push
jbe
dec
xchg
lods
sub
jge
testl
sub
cmp
inc
lods
shlb
mov
mov
pop
negb
cli
xchg
pop
lret
dec
test
xchg
sarb
pop
loop
sub
outsl
nop
adc
jg
flds
test
xor
mov
xchg
mov
add
icebp
scas
std
ja
xchg
mov
jl
int
mov
mov
xlat
int
ljmp
cld
in
mov
push
push
outsb
in
stos
addr16
lods
daa
push
rcrl
adc
add
test
xor
sbb
int3
pop
adc
test
mov
repz
inc
sbb
pop
jb
lret
mov
pop
loopne
imul
stos
jp
inc
das
cmp
icebp
add
fdiv
rolb
mov
cmpsb
mov
sahf
cmc
outsb
imul
stos
int
jo
sbb
repz
inc
inc
adc
test
loope
sbb
pushf
ljmp
jl
and
xchg
fs
xor
cmp
push
es
ds
xor
enter
sub
leave
arpl
inc
xor
push
daa
aas
pop
jae
lods
or
jbe
inc
mov
mov
imul
pop
aad
mov
pushf
push
es
lods
push
mov
test
aad
mov
inc
dec
cmpsl
cmp
push
pop
mov
inc
inc
jb
pop
inc
pop
pushf
jecxz
scas
mov
sahf
push
daa
adc
cmpb
dec
shr
pop
lcall
and
adc
insl
aas
out
mov
int
mov
push
and
add
icebp
cmp
movb
js
mov
jg
pop
or
sbb
jne
ja
shr
addl
icebp
jo
pop
aam
scas
int3
jno
je
lret
stos
pop
lds
outsb
add
mov
addr16
xor
inc
jnp
mov
std
add
lods
add
jmp
push
lock
mov
xchg
add
aaa
aas
mov
pushf
pop
sarb
jnp
or
movsb
pop
leave
add
xchg
jmp
popa
mov
sub
imul
in
jo
sti
imul
and
decb
xorl
and
xchg
inc
jne
roll
mov
ljmp
pop
add
xor
out
xor
jnp
les
or
xchg
dec
in
push
das
mov
addb
mov
shlb
mov
push
dec
pop
jp
xor
pusha
pusha
adcb
mov
stc
mov
movsl
inc
jae
aad
add
or
lods
adc
cmp
and
xchg
jp
lahf
enter
push
cli
mov
inc
nop
repz
xchg
in
imulb
inc
test
mov
enter
cmpsl
jbe
mov
arpl
lahf
leave
pop
mov
ss
popf
dec
sub
jne
leave
bound
and
xorb
int
mov
pop
xchg
jecxz
dec
mov
mov
fcoml
and
sbb
dec
imul
push
xchg
pop
dec
test
test
or
insl
adc
lods
push
stos
pushf
sbb
inc
inc
mov
dec
xor
xor
sbb
fucomi
push
std
lcall
and
sbb
mov
xchg
outsl
cld
in
into
xchg
xchg
popf
in
inc
ret
xor
lahf
or
into
bound
imul
mov
addr16
dec
int3
xlat
mov
insb
stos
cltd
cmc
ja
stc
jmp
inc
cmp
sbb
mov
xor
push
mov
mov
mov
scas
dec
repz
sub
out
xor
out
adc
xchg
aam
cmp
inc
repnz
mov
ljmp
sub
and
mov
loopne
xchg
sbb
mov
cmp
sbb
cs
and
ljmp
add
add
stc
fisubl
sbb
cmp
incl
fldt
stos
dec
or
into
or
test
test
cmp
cmp
jnp
pop
cs
mov
or
daa
cli
mov
fs
shlb
sbb
adc
fcmovbe
cmp
cmp
sub
xchg
popf
addr16
outsl
xchg
pop
loope
js
inc
mov
idiv
dec
ds
xchg
cmpsl
push
into
and
daa
gs
mov
loopne
test
mov
lds
ljmp
xchg
mov
push
scas
sbb
pushf
and
sbb
lret
in
mov
lock
cs
mov
std
jbe
fcomi
add
mov
iret
dec
mov
add
sub
add
loop
mov
cltd
pop
push
test
add
imul
xchg
push
scas
adc
cs
div
fcoms
xchg
jmp
pop
mov
push
inc
test
subl
data16
comiss
aad
fistpl
je
adc
or
or
fwait
ds
ja
cmpsb
outsb
fstl
gs
adc
dec
aas
cs
sub
or
loope
insb
insl
pop
negb
inc
xor
ret
hlt
push
enter
insb
pusha
push
add
xlat
cmpsb
mov
jb
mov
sahf
icebp
dec
das
loopne
adc
mov
mov
cmc
loop
sarl
add
inc
int
cmp
loope
fs
mov
popa
lret
pop
xor
xor
loop
scas
cmp
nop
xor
mov
mov
jg
fsubl
xor
cmpsl
jne
icebp
push
xor
das
pop
cmp
dec
mov
mov
ljmp
xlat
dec
leave
das
int
adc
ja
popf
shlb
sub
jno
sbb
jl
push
mov
pop
cmp
dec
adc
mov
lods
jecxz
mov
add
popa
sub
and
adc
push
repnz
jge
sub
or
cmp
push
mov
es
test
pop
mov
and
insl
icebp
mov
rolb
jbe
faddl
xchg
notl
adc
jno
push
popa
push
shlb
insl
test
or
xor
arpl
xchg
xchg
mov
pop
and
inc
jle
xor
int3
mov
je
in
test
xchg
add
out
stos
cmp
mov
stos
icebp
add
jge
lods
lret
add
aad
jmp
sub
stos
lods
jmp
in
or
iret
pop
push
roll
fcomps
inc
sub
mov
lods
or
in
or
and
mov
mov
pop
push
inc
clc
lret
lods
push
adc
adc
in
pop
cwtl
dec
dec
nop
jne
inc
orl
bound
jae
dec
cwtl
add
or
mov
jmp
mov
stc
sub
aaa
lods
lods
aad
das
pop
loope
nop
xor
aaa
mov
divl
sub
outsb
cmp
rol
fcoml
fwait
pushf
sbb
or
xchg
xchg
mov
adc
xchg
stos
pop
jbe
jecxz
and
push
dec
imul
popa
cmovg
push
in
xor
xor
scas
mov
shl
in
xchg
insl
loopne
jb
xor
cmp
push
pop
and
cmp
mov
mov
mov
jmp
mov
enter
xchg
call
loopne
mov
dec
test
popf
add
out
or
push
lock
in
pop
aaa
pop
adc
out
push
cmp
xor
lret
dec
sbb
cmp
jle
addb
jmp
movsl
aaa
fmuls
cmpsl
les
jb
sar
dec
adc
daa
sbb
mov
scas
jge
sbb
dec
xchg
mov
jne
xor
insl
push
popa
xchg
cmovle
lea
sbb
dec
imul
fiadds
aam
in
leave
nop
stos
enter
cmp
add
sbb
sbb
mov
daa
mov
ret
out
xor
imul
cmovge
pop
dec
leave
mov
push
jo
insl
xor
inc
xchg
xlat
ret
or
out
mov
lods
adc
cld
mov
mov
or
daa
cmp
or
push
push
sbb
nop
cs
decl
ret
ljmp
in
xchg
adc
into
sbb
mov
int3
iret
loopne
aad
lcall
imul
sbb
sbb
mov
sub
cmp
rorb
jne
aam
dec
fcoml
imul
cmp
xchg
xor
addr16
sub
mov
sti
adc
loop
aad
ficomps
fistps
dec
loopne
lods
sbb
lock
mov
loope
shrb
adc
movsl
divl
mov
push
pop
cmp
sbbb
js
xchg
imul
xchg
mov
inc
adc
cmpsb
xor
cmp
js
lret
aad
cmp
rcl
dec
insl
mov
sbb
sbb
repz
sbbl
aaa
and
popf
movsl
mov
jle
sbbb
pop
ja
mov
and
dec
cwtl
lds
lret
or
stos
xchg
roll
cltd
inc
mov
dec
inc
or
lret
xor
ret
ret
cmp
sarb
xchg
lods
push
mov
ret
or
lds
stos
xchg
sbb
adc
insb
mov
out
sbbb
cli
js
mov
sahf
ljmp
mov
sbbw
jo
mov
movsb
das
adc
mov
mov
sub
push
aad
cmovo
jecxz
addl
pushf
xor
dec
jnp
int
imul
xor
and
add
sarb
dec
dec
mov
mov
pop
mov
movsb
imul
mov
cs
aas
sbb
std
in
hlt
dec
insl
and
and
cwtl
pop
out
aaa
cvtpi2ps
in
outsb
cwtl
std
shrl
mov
xchg
lock
xor
lods
or
roll
xchg
and
cltd
cmp
ficoms
popa
or
inc
out
sahf
sarl
ss
call
imul
mov
fadds
mov
sub
sbb
jp
jne
shrb
movsl
call
xor
ret
adc
aas
lock
stc
sub
dec
std
out
in
movsb
push
orb
jno
stos
inc
addr16
std
xor
inc
xor
or
das
jnp
imul
daa
mov
and
xchg
push
adc
ror
pop
jle
xor
mov
sahf
clc
push
mov
daa
dec
add
adc
xor
ja
mov
in
mov
mov
jmp
push
add
mov
and
stc
loop
jns
sbb
lret
or
cmpb
cmc
xor
adc
popf
test
or
cmp
lock
xorl
lcall
push
fisttpll
rolb
jl
add
cmp
daa
push
xchg
popa
mov
mov
fdivrs
xlat
test
repnz
in
mov
loope
mov
lret
xchg
rcrl
nop
mov
out
shll
mov
paddq
sub
mov
and
int
mov
push
and
or
cld
shr
xchg
fsts
into
repnz
es
jmp
and
pop
jmp
out
adc
aas
in
je
pop
mov
mov
push
mov
pop
mov
cwtl
pusha
inc
sub
pusha
scas
xchg
roll
cli
pop
stos
lret
jbe
clc
xchg
jne
cmp
mov
call
jl
or
fsts
lea
xor
fnstenv
mov
push
faddl
fldt
sub
xor
sbb
xchg
or
pop
rorb
pop
cwtl
mov
sti
das
pop
pop
inc
adc
mov
push
stos
fnsave
adc
xor
loop
xchg
je
dec
bnd
aam
inc
mov
dec
and
and
lds
addl
out
enter
inc
shll
lock
mov
push
dec
mov
inc
sub
fs
inc
xchg
in
cmp
insl
aaa
loopne
adc
inc
jl
pop
mov
fwait
fwait
and
mov
pop
sbb
cwtl
fdivr
xor
out
sbb
and
xor
inc
test
adc
xlat
es
loopne
xor
out
fwait
stos
sti
sbb
subl
inc
and
sbb
mov
das
arpl
divl
inc
std
or
push
jg
je
loope
xchg
add
in
lock
and
xor
sbb
stos
mov
out
arpl
cmp
jmp
sub
lcall
loop
sub
jecxz
cmpsl
shr
inc
cmp
mov
jns
iret
dec
loop
mov
add
inc
pop
test
fmull
sub
popf
fistpl
or
mov
ja
andl
repz
rorl
stc
fcoms
or
cmpsb
pop
sti
jnp
sub
int3
inc
test
jl
cmp
out
dec
scas
lods
adc
cmp
dec
add
fdivrs
mov
rolb
and
pushf
push
push
int
leave
movsl
pushf
add
pop
ficoms
popf
lods
mov
das
aam
fnsave
int
std
mov
nop
rcrl
lds
mov
cwtl
xor
repnz
jle
jns
jp
jae
push
aas
cmpl
lods
movsb
addl
mov
mov
add
out
imul
pusha
out
jns
pcmpeqb
lret
jl
stos
push
fwait
inc
ja
adc
test
divb
gs
call
inc
fsubp
cwtl
popa
sbb
popa
sahf
push
pusha
pop
mov
aas
test
mov
popa
leave
ret
pop
xor
sub
mov
repnz
add
mov
push
jle
mov
loope
andl
xor
out
mov
leave
adc
fwait
in
cmp
enter
cmpsb
jmp
mov
int
dec
dec
and
push
out
fisubs
fwait
push
gs
hlt
xlat
dec
mov
and
dec
or
mov
push
cmp
sub
idivb
rorb
and
lret
mov
mov
cmc
mov
cmp
repz
cmpsb
mov
mov
jne
dec
ja
adc
in
out
stos
dec
xchg
inc
shrl
es
push
jne
repnz
mov
std
cli
int
inc
dec
fmul
fisubrl
mov
dec
pop
lea
jp
jg
iret
cmc
rorl
inc
jp
aaa
or
inc
movsl
jae
jae
popf
pop
inc
fadd
sub
mov
pop
aas
jmp
xlat
xor
mov
cmpsb
mov
pusha
xlat
or
ret
fcompl
loop
jmp
mov
adc
test
ljmp
imul
lds
iret
pop
push
mov
out
sbb
push
popl
movsb
lods
popa
insb
or
inc
jae
lahf
mov
std
mov
neg
cwtl
push
lahf
ret
faddl
jb
xchg
mul
stc
ss
sahf
imul
xchg
insl
sbb
repz
add
or
loop
push
or
sbb
sub
dec
stos
mov
jno
mov
adc
icebp
popa
int3
lret
sbb
mov
aaa
in
mov
lds
sbb
inc
pop
cmp
xchg
inc
iret
push
dec
aad
dec
or
add
pop
in
mov
sbb
std
lods
mov
mov
loopne
jns
test
sbb
mov
jle
in
adc
cwtl
aam
lcall
and
gs
fldt
insl
pop
push
lcall
mov
repz
aam
adc
xchg
movsb
bnd
mov
fdivr
inc
rcr
add
orl
jg
nop
shrb
sarb
out
aas
les
cld
adc
mov
jg
mov
sbb
jmp
fsubl
cs
add
xor
cwtl
mov
iret
sar
adc
cltd
mov
in
dec
inc
push
mov
mov
sti
cld
xchg
into
mov
mov
cmp
movsb
pavgw
test
dec
jbe
sub
cmp
xchg
or
mov
leave
xchg
push
mov
rcr
bound
clc
fldl
lret
mov
lods
push
jmp
mov
divb
mov
and
enter
imul
cmp
jg
mov
data16
cmp
es
xchg
popa
call
scas
test
cmc
sub
and
push
sbb
jne
xchg
leave
into
jge
jnp
mov
xor
enter
xor
shlb
movsl
dec
in
pop
pop
int
fstl
test
or
adc
and
rolb
scas
je
add
push
push
push
or
in
jns
add
xchg
pushf
xchg
inc
mov
push
rcl
pop
jl
cmp
add
lods
gs
jne
cmpsb
test
mov
sub
pop
je
and
lret
bswap
test
pop
pop
mov
ret
dec
lods
outsb
sbb
dec
mov
outsl
adc
imul
cmp
cmp
fwait
stos
push
mov
or
arpl
insb
aad
push
or
imul
in
js
adc
push
lea
jmp
aaa
sbb
cmp
mov
aad
ficompl
out
addr16
mov
mov
inc
stc
xor
and
and
pop
sub
mov
pop
insl
insl
xchg
daa
loop
cmpsl
leave
iret
sbb
mov
add
xorl
aam
ja
test
repz
shl
cmpsl
push
cmp
inc
cmp
mov
xor
aam
cmp
sub
test
pop
push
aam
int3
ret
out
pusha
orl
fdivrs
jae
sbb
cmpsb
xor
jnp
sub
insl
mov
adc
pop
gs
push
xchg
sub
jg
xor
clc
cmp
push
xor
add
pop
dec
popf
mov
or
jb
push
push
test
adc
mov
adc
xchg
in
sbb
mov
dec
popa
inc
fidivs
outsl
adc
or
pusha
push
lods
and
fs
pushl
daa
cmpsl
call
fdivrl
and
sub
push
xor
fdivrl
icebp
nop
and
xor
xor
test
jge
cmp
dec
sbb
mov
mov
fwait
in
push
int3
loopne
mov
push
cmp
and
aas
out
subb
out
lcall
js
sarl
ja
jp
int
popa
incb
xchg
xchg
call
gs
pusha
popf
test
cmpsl
fsubl
loope
stos
add
arpl
insb
sbb
jmp
push
mov
mov
cmp
lret
mov
mov
sarb
push
pop
cmp
addr16
mov
adc
insb
mulb
adc
dec
mov
loop
gs
int
in
xlat
jnp
mov
cmp
xchg
dec
cs
inc
bound
adc
xchg
aas
and
in
or
push
lock
enter
cmp
mov
pop
mov
repnz
sbb
out
dec
outsl
es
iret
jmp
mov
and
adc
and
ja
jg
aaa
sub
negb
jmp
les
lahf
mov
push
pop
inc
add
js
dec
out
out
adc
cwtl
sahf
mov
addr16
sub
mov
cmpl
enter
nop
cmp
jmp
push
es
out
mov
movsb
jge
cmp
mov
cmp
in
push
and
xor
ret
orb
lds
lea
inc
dec
mov
mov
aaa
vpcmpgtd
subl
lods
adc
xchg
adc
cmp
sub
lcall
js
popa
int3
lahf
push
sub
pushf
jmp
xchg
lcallw
into
cli
mov
sti
mov
jmp
pushf
inc
in
pop
subb
push
fidivs
ficoml
dec
leave
lea
jns
dec
insl
jge
inc
jo
movsl
addr16
or
mov
sub
cmp
insl
push
aas
imul
inc
mov
inc
cmpsl
mov
call
mov
test
js
imul
stc
push
pop
lret
test
push
cld
testl
loopne
dec
aam
dec
aad
fiadds
push
nop
cs
jnp
enter
shr
leave
and
xchg
enter
enter
sub
sbb
or
xor
sti
xor
add
fmul
sbb
add
jns
repz
ss
data16
and
inc
fdivs
sub
test
xchg
xlat
jecxz
xor
or
push
scas
mov
loopne
jnp
in
mov
lea
fbld
rorl
mov
int3
popa
jmp
mov
push
dec
test
dec
jecxz
test
xchg
xor
aad
mov
pop
test
cmpsl
pop
lea
inc
jp
mov
bnd
mov
test
jle
mov
mov
push
out
lret
xchg
xor
rcr
add
lock
mov
sbb
add
aaa
dec
stos
jns
int
jl
cs
pop
mov
popa
mov
xchg
pop
imul
in
pop
shl
inc
pop
jl
into
and
notl
rclb
sbb
xor
fistps
sahf
cmc
imul
adc
xchg
xor
inc
and
add
mov
mov
sarb
fstl
add
jnp
push
outsb
jns
std
mov
pusha
out
out
pop
mov
negl
repnz
inc
xchg
and
repnz
icebp
rcrb
hlt
cmc
push
out
ljmp
mov
popf
xor
add
sub
mov
add
fs
add
data16
mov
insl
ss
or
or
lods
in
mov
aad
ficompl
cmp
je
inc
sub
mov
dec
mov
jecxz
xor
adc
cmc
add
adc
lods
call
mov
sbb
push
cmp
fldt
mov
pop
add
jno
les
jne
jns
adc
cmp
xor
lahf
cmp
cmpsl
jae
push
and
lcall
push
xchg
sbb
push
fsubrs
out
xlat
lret
imul
jmp
enter
jmp
jp
adc
xor
pusha
inc
shrb
pop
aam
xor
cmp
pushf
or
nop
iret
stos
mov
ljmp
fiaddl
faddp
push
dec
push
rclb
shrb
push
test
or
or
orb
push
inc
push
cmpsl
jmp
cmp
dec
pop
lds
pop
aaa
sbb
xor
insl
addr16
in
xchg
add
inc
mov
push
loopne
xchg
pop
xchg
add
into
shlb
int3
sub
sbb
mov
in
sub
mov
xchg
xor
imul
sub
pop
sub
adc
pop
push
ja
push
xor
fistpl
xchg
add
mov
lahf
sbb
sbbl
push
lock
cwtl
sbb
or
or
repnz
test
test
into
push
clc
push
or
add
hlt
std
jb
repz
dec
sbb
rcl
dec
or
mov
lret
cmp
das
ja
rclb
dec
dec
leave
cltd
dec
jg
mov
dec
cs
pushf
test
fcoms
ret
fstl
mov
sbb
hlt
jl
imul
enter
cmp
sub
and
xor
cwtl
popf
xlat
popl
sbbb
movsb
jo
je
mov
inc
test
sarb
bound
adc
movsb
push
sti
jmp
xor
fdecstp
leave
je
ss
sub
push
xor
mov
negl
daa
aas
movups
push
and
inc
pop
pop
fwait
jae
lds
ljmp
pop
rorb
sbb
xor
sub
dec
mov
and
adc
sub
call
test
add
aad
mov
arpl
xchg
jb
aas
inc
dec
push
call
pop
pop
lods
scas
inc
or
pop
add
sub
out
das
mov
je
cmp
stos
mov
pop
sub
add
and
in
inc
sti
cmp
cmp
dec
pop
bound
cmpsl
jbe
jnp
adc
mov
fucomp
sub
pop
les
push
std
mov
pop
int
inc
cmc
jno
das
lock
int3
push
out
fidivl
out
ret
pop
lods
jmp
adc
xor
add
adc
inc
xchg
out
fdivrl
pop
insl
jp
lods
in
jae
inc
insl
loop
inc
pop
insb
sbb
jge
dec
pop
in
pusha
pusha
outsl
cmp
imul
es
cmc
and
jecxz
add
fadds
insl
mov
rolb
lcall
inc
insb
push
cmp
jp
cmp
xor
xor
movsl
mov
je
push
xchg
aam
dec
int3
rcrl
insl
sbb
mov
jp
notb
mov
sahf
mov
fbstp
out
sbb
out
repnz
lret
mov
xchg
repz
arpl
bndstx
stc
xchg
and
add
ds
cmc
jle
jp
int
rolb
popa
and
adc
cmpsb
mov
xor
and
push
fcmovne
js
orl
mov
notl
jmp
icebp
sbb
les
mov
aad
or
pusha
inc
arpl
or
sbb
adc
and
mov
aaa
or
bound
mov
cmp
pop
in
in
call
dec
sarb
push
pop
dec
sbb
in
and
jg
jae
cltd
xorb
add
sbb
adc
test
out
mov
lcall
inc
sbb
mov
gs
shlb
addr16
cmp
imul
or
sub
call
sub
push
push
push
stos
rolb
das
mov
cmp
shrb
cmc
shll
pop
sbb
mov
gs
mov
sbb
icebp
jmp
es
inc
js
int3
or
pushf
icebp
jbe
aas
int3
inc
mov
mov
xor
mov
pop
push
push
mov
dec
jg
imul
insl
dec
sahf
repz
jns
xor
cmovae
mov
jo
dec
jmp
lods
mov
out
inc
imul
rorl
cmpsl
mov
dec
bound
loop
shlb
shrl
push
sahf
inc
mov
dec
mov
cld
scas
in
dec
cmp
call
je
adcb
inc
xchg
cmp
cmp
fwait
push
scas
adc
scas
test
push
sub
sub
pushf
and
adc
mov
data16
sbb
cmp
dec
fwait
insb
jo
push
sti
inc
fistl
sbb
loope
mov
xor
je
cmpsl
mov
cmp
adc
push
adc
ret
jae
std
divl
cs
aaa
cmp
push
lcall
movsb
das
bound
jo
xor
xlat
mov
or
ss
sbb
insl
xchg
dec
into
jl
in
stos
lods
mov
jp
xlat
fdivp
imul
jne
test
shll
jmp
pop
fildll
inc
cmp
jle
sbbb
clc
push
push
cmc
xchg
fildll
ret
lret
negl
aas
cmpsb
push
mov
popf
mov
jne
sbb
mov
mov
fs
pop
lret
outsb
jnp
inc
pop
data16
into
and
outsl
ja
bound
xor
std
incb
in
ljmp
xchg
js
add
xchg
jnp
int
divl
ror
xchg
mov
xor
xor
push
mov
fs
jnp
or
sbb
out
lock
jecxz
imul
jbe
lods
cmp
negb
xchg
fstl
xchg
mov
lahf
jns
lods
mov
xor
adc
jno
push
mov
cmp
mov
xchg
sub
jbe
int3
xor
and
xchg
xor
sarl
lahf
nop
dec
jle
lock
imul
push
jns
sti
dec
aam
adc
fnsave
xor
xchg
test
sbb
imul
pop
dec
fisubl
stc
adc
test
push
add
xor
shlb
mov
pop
pop
mov
jns
rcrl
int3
cmp
jl,pn
in
cmp
aaa
ds
and
ljmp
push
xor
cld
shl
ficoms
sbb
inc
xor
rclb
idivl
pushf
inc
sub
xchg
mov
xor
aas
jl
jne
mov
test
mov
mov
jb
mov
sbb
shlb
cwtl
sbb
dec
std
sub
nop
adc
pop
pushf
movb
ficomps
loopne
push
ret
loopne
movsl
leave
mov
imul
addr16
imull
sbb
sbb
sarl
sbb
aam
stos
push
sub
mov
sti
dec
fcomp
dec
cltd
or
jo
xchg
xor
push
das
add
inc
into
dec
loop
daa
dec
adc
jne
xchg
das
cwtl
adc
test
out
mov
pop
dec
dec
jbe
lret
dec
xor
cmpsb
xchg
icebp
lods
data16
adc
aaa
cmpsb
inc
lods
push
mov
repnz
jle
pop
push
sbb
sti
push
or
push
imul
dec
sahf
mov
xor
jp
xor
pop
pop
jmp
and
sub
lods
cmp
lret
insb
in
repnz
and
popl
push
movsb
data16
ljmp
fists
inc
arpl
andl
jge
cmp
add
fwait
in
sti
loop
popf
mov
les
clc
aas
in
inc
stos
cmp
dec
adc
and
enter
cmp
pop
mulb
jne
lcall
cmc
stc
repnz
lret
std
out
jno
clc
mov
xchg
rclb
adc
xlat
int
mov
movsb
push
push
test
sub
push
movsb
movsb
repnz
pop
hlt
mov
aam
shrl
call
and
stc
pop
dec
dec
pop
out
mov
std
out
xchg
loope
xor
sahf
mov
sbb
mov
push
xor
aad
mov
fs
and
adc
pop
cmp
icebp
aaa
pop
data16
jno
daa
aam
jbe
sbb
mov
mov
dec
jae
pop
leave
xchg
mov
shlb
mov
dec
jbe
xchg
lds
hlt
repz
mov
imul
fwait
mov
addr16
cmp
mov
mov
outsb
push
pop
adcb
jge
dec
imul
hlt
pop
push
into
jg
hlt
xor
mov
cmp
sbb
popa
xor
shll
decl
adc
ds
fdivrs
je
mov
inc
ss
sub
jecxz
cmp
loop
or
adc
pop
adc
orl
jo
imul
mov
sbb
inc
cltd
and
mov
dec
bound
int3
or
sbb
popf
sub
jmp
sbb
pop
lock
or
sahf
bswap
mov
add
bound
xor
int
enter
mov
into
cli
arpl
xor
xchg
stos
xchg
fnstcw
adc
repz
rorb
sub
in
mov
sub
and
inc
int3
sbb
in
into
jne
pop
or
cmp
mov
lret
xchg
sub
sbb
or
cli
hlt
mov
mov
filds
imul
ss
or
jmp
push
mov
scas
lret
and
es
jmp
cmc
and
lods
cltd
xchg
shll
fs
push
and
aaa
add
sarl
push
nop
dec
fs
cmp
daa
push
pop
cmp
out
mov
xchg
loopne
insb
adc
iret
add
inc
fisubrs
mov
stos
repz
xchg
das
add
iret
into
imul
sub
aas
sti
cmp
push
gs
push
test
mov
lock
push
cmp
lods
push
les
aaa
mov
push
cmpsl
outsl
jno
shll
in
in
dec
add
lret
jmp
test
pop
lahf
ss
xor
dec
out
pop
xor
dec
or
sar
negl
push
jns
bound
push
dec
mov
cmp
xchg
andb
pop
or
mov
ss
mov
pop
jnp
pop
mov
mov
icebp
cmp
enter
sub
insb
loopne
cmpsl
mov
fldcw
mov
cmp
inc
push
aaa
xor
mov
adc
lahf
pushf
dec
push
cltd
and
stos
rorb
lods
push
mov
dec
push
xchg
dec
cmp
mov
sub
and
sbb
add
test
fstpt
xor
cmpsb
out
cld
das
mov
clc
xchg
les
mov
lds
push
lock
or
jno
adc
ds
mov
sbb
mov
adc
xchg
sarl
mov
lds
lcall
cmc
and
and
ja
leave
sbb
add
xor
test
mov
push
jbe
xor
sarb
xchg
push
or
cli
mov
mov
add
lret
adc
push
daa
lods
pop
inc
outsl
pop
fidivs
fbld
test
push
mov
lahf
or
adc
out
pusha
jo
in
lods
mov
test
clc
call
jecxz
xor
push
push
jae
sbb
mov
stc
mov
mov
sub
cmpl
xor
jno
adc
aaa
dec
repz
clc
sti
sti
data16
adc
inc
sbb
push
sub
sarb
sub
xor
es
pop
mov
push
xor
adc
mov
jmp
push
xor
inc
sub
pop
jo
sub
push
pop
sti
repz
inc
lds
push
ret
fwait
cld
iret
jge,pt
negl
into
and
lds
pop
lea
cltd
mov
rcll
lret
out
loop
pop
loopne
push
and
js
mov
adc
sbb
orl
and
iret
out
pop
insb
loopne
aad
mov
or
test
dec
js
xor
mov
out
mov
and
mov
movsl
mov
pop
mov
cmpsb
stos
push
inc
cld
imul
aam
std
or
mov
leave
std
bound
xchg
adc
push
and
repnz
jg
xor
fs
lock
add
ds
ljmp
jae
inc
push
push
push
push
out
punpcklwd
xlat
mov
out
pop
rorl
outsl
xor
adc
lret
jg
push
enter
xchg
jmp
cmp
cmp
sub
and
je
pop
inc
fdivs
dec
cltd
lods
cmp
sbb
je
mov
leave
shl
ljmp
jecxz
jg
lods
adc
popf
cmp
rolb
add
clc
pop
mov
xchg
incb
or
xlat
jo
mov
les
fwait
mov
sub
bound
cmp
mov
lret
test
mov
jae
aam
rclb
inc
xor
call
sti
push
fwait
sbbb
aaa
stos
cmpsl
daa
xchg
sub
xchg
adc
incb
lcall
inc
cli
leave
mov
lds
out
push
and
push
daa
and
sub
adc
fdivl
lea
push
test
adc
mov
roll
inc
push
or
test
test
xchg
cs
loop
sub
pop
call
pop
mov
jnp
xor
mov
xchg
mov
push
mov
ds
cld
andb
out
shrb
inc
jmp
sbb
and
lea
sbb
cmp
sbb
icebp
aad
cmp
in
aaa
add
movsl
push
mov
push
cmp
js
popa
lret
repnz
aam
stc
mov
dec
stc
push
repz
jmp
outsl
cwtl
shl
pop
mov
xchg
sbb
mov
lret
jmp
out
cmp
dec
cmp
adc
adc
js
cli
lock
je
push
fcoms
imul
xor
dec
inc
shlb
rcrl
mov
dec
mov
out
sub
and
cltd
movsl
pushf
xchg
fcompl
std
xlat
cmp
mov
jl
sbbl
jl
adc
enter
and
xchg
pop
pmaddwd
inc
test
cli
mov
movsb
jb
divl
and
repz
pop
cmp
out
cmp
adc
pop
adc
pop
fcmovb
jmp
jle
mov
mov
arpl
cmpb
pop
mov
in
cmp
mov
sub
stos
faddl
sub
cltd
icebp
in
rol
xor
fs
shrl
ficoms
xlat
jae
loope
sbb
xchg
imul
jbe
xchg
pop
cmp
imul
aaa
out
and
push
pop
mov
iret
pusha
aam
or
sbb
lock
inc
leave
aad
lahf
repz
std
ja
lret
cmp
ss
ss
repnz
jo
ja
xchg
jecxz
add
push
or
mov
pop
mov
in
fbstp
in
repnz
cwtl
lahf
pop
xchg
adcl
sbb
inc
lret
les
mov
outsl
mov
jp,pn
inc
fwait
in
sbb
pop
inc
jge
outsb
mov
pop
fdivrs
xor
fcompl
push
in
cmp
aaa
mov
mov
adc
xchg
shlb
dec
mov
add
ret
jmp
fwait
jbe
insb
inc
sbbb
and
fwait
movsl
mov
jnp
push
adc
rcrb
notb
xchg
or
neg
test
or
sub
and
in
addr16
cld
jl
loopne
pop
loope
ret
fs
popf
lds
sub
loope
rolb
out
mov
pop
jnp
lcall
pop
pop
push
push
mov
fs
xor
mov
jle
mov
insl
fwait
dec
xchg
fdivrl
mov
push
push
sbb
xchg
cmp
sbb
dec
and
jmp
cmpl
ds
pop
aaa
push
out
es
dec
rorb
fsubs
mov
sbb
rcr
in
add
movsb
xorb
mov
push
fwait
rorb
shlb
xor
pushw
jne
pop
andl
popf
sbb
movsl
icebp
pop
fldl
and
fwait
mov
cmp
ja
push
bound
adc
jge
adc
jbe
icebp
mov
sub
jno
mov
enter
cld
popa
sub
hlt
stc
rorb
mov
pop
xor
push
inc
pop
ret
jge
loope
sar
adc
mov
in
hlt
int
push
out
shl
sbb
lock
mov
sbb
pop
inc
pop
dec
jno
mov
xor
push
orl
loop,pt
in
xchg
inc
cmpsb
insb
aad
jno
js
jne
fsts
rclb
cmp
adc
testl
sar
shll
push
mov
lret
dec
add
fimuls
jecxz
orl
sti
insl
dec
jno
pushf
push
je
adc
clc
loope
in
or
pushf
add
mov
xor
cmpsb
adc
adc
pusha
pop
xchg
or
and
sbb
jecxz
iret
cld
mov
cli
mov
mov
cmp
fisttpl
or
scas
aam
pop
aaa
mov
dec
sub
setge
push
xchg
xor
jecxz
into
popf
adc
mov
adc
mov
mov
ficoms
lcall
rcr
add
sbb
ljmp
sub
adc
dec
test
fists
mov
xchg
cmp
pop
aaa
cmp
in
push
and
cmp
cmp
pop
xorb
nop
or
dec
or
out
cwtl
or
cli
repnz
jae
aad
dec
test
sbb
push
adc
dec
test
inc
push
stc
mov
out
es
fistps
jo
cmp
push
add
movlps
out
negl
or
sahf
mov
pop
jp
cmp
sbb
imul
jg
jmp
mov
or
jae
shlb
jno
fdivrl
xlat
in
sar
sti
scas
scas
in
xchg
pop
push
sahf
insl
lcall
adc
jb
mov
mov
fimuls
and
enter
xor
adc
mov
jmp
dec
ret
or
or
mov
aaa
mov
and
mov
push
scas
dec
pop
call
mov
rcrb
pop
push
mov
and
mov
mulb
mov
aaa
inc
sbb
das
jmp
pop
shlb
dec
cli
jb
cmc
sub
pop
mov
test
xor
fldenv
and
mov
jg
out
cmc
sbb
push
xchg
fwait
sbbb
vaddss
jb
fldt
dec
pop
sbb
pusha
pop
repnz
xlat
pop
call
sub
fdivr
dec
mov
add
mov
mov
and
jecxz
jae
push
cmpsl
aas
aaa
xor
std
xchg
subb
xlat
mov
mov
enter
je
push
add
clc
inc
dec
and
ret
or
sti
inc
jl
mov
xchg
sbb
mov
mov
xchg
in
imul
mov
lcall
mov
daa
js
jbe
outsl
arpl
out
fsubrs
xchg
sub
cmp
cmp
aad
aaa
mov
mov
xchg
cmpl
stos
mov
pop
sub
lock
orl
dec
xchg
jns
repnz
push
in
out
mov
xor
in
adc
sbb
adc
jne
mov
pushf
jecxz
cmp
jge
or
loope
mov
movsl
xchg
push
outsl
jns
inc
pop
cmp
inc
dec
rclb
js
fldcw
inc
dec
xor
in
cli
hlt
rorl
sbb
rcrb
mull
lahf
popa
sub
xor
lret
mov
cmpsl
jae
fmulp
sbb
mov
mov
mov
rcrl
mov
out
mov
stos
fistpll
jne
jge
repnz
jbe
fsubrs
xor
fnsave
ret
sbb
mov
adc
test
into
push
mov
mov
vmovupd
int
cmpsb
sahf
jle
push
testb
ret
push
or
dec
mov
inc
adc
lods
xor
sub
hlt
mov
pop
nop
loop
lcall
lret
and
push
pop
fsubrl
xor
push
mov
mov
lcall
jno
insl
xlat
sti
or
in
pop
inc
cmp
inc
nop
adc
fildl
out
add
stc
mov
pop
push
aam
jae
adc
pushf
dec
pop
adc
jp
xor
mov
ss
std
arpl
cmc
lahf
xchg
js
cmp
stos
cmp
mov
jle
rorl
adc
test
data16
or
lcall
or
push
sub
lret
xchg
push
cmp
push
out
dec
addl
mov
cmp
or
ljmp
pop
scas
scas
or
jb
jmp
mov
mov
xchg
xor
loop
idivl
mov
push
dec
push
pop
jecxz
adc
and
or
daa
cmp
cmpsb
insl
outsb
jne
sti
xor
pop
dec
pop
sar
inc
clc
pop
addr16
into
les
hlt
btc
push
inc
jne
fadd
fsubrl
enter
call
pop
enter
xchg
or
aaa
sarl
add
jno
mov
rolb
mov
push
inc
in
jo
dec
fbld
push
jno
rcrb
and
faddl
rolb
in
jge
test
in
mov
fstpt
je
cmp
inc
inc
leave
orb
fmuls
stos
jo
cltd
cs
xor
addr16
lret
mov
add
mov
lret
xor
or
sub
pop
jg
cld
stos
xchg
inc
adc
fmul
aad
in
sbb
dec
subl
push
xor
cld
pop
xchg
pop
jns
nop
mov
and
stos
mov
out
pop
sub
sbb
shll
mov
pop
std
mov
xchg
or
add
cmc
mov
or
sarb
fnstenv
cmp
inc
fsubl
jnp
pop
leave
aad
jmp
lea
in
test
notb
mov
jns
clc
push
or
test
fwait
jp
cltd
adc
clc
cmp
lret
pusha
lcall
mov
test
in
inc
icebp
adc
leave
lcall
jo
aaa
xchg
inc
and
dec
push
pop
adc
or
lock
jne
or
pop
loope
in
and
adc
mov
loop
mov
xchg
or
xorb
in
inc
lea
sarl
xchg
push
lods
push
dec
cmp
sbb
test
repz
fdivrl
mov
out
cli
dec
in
inc
cmp
rcr
daa
rol
test
stc
sub
jl
fisubrl
div
mov
pop
add
mov
mov
out
in
xchg
sahf
mov
sub
jae
ja
iret
gs
push
pop
jmp
int
cmp
test
add
xchg
xchg
iret
sahf
mov
mov
ds
outsl
push
addr16
out
push
pop
int
push
xchg
negl
andb
xchg
fldt
out
gs
xlat
movsb
push
inc
cmp
movsb
cmp
jbe
iret
insl
ret
jge
repz
push
ja
stos
adc
cld
ficompl
push
enter
fcomi
jbe
adc
popf
jnp
clc
pushf
ret
popa
adcl
hlt
add
mov
and
or
cmp
bound
mov
lock
sub
in
outsb
sub
pop
bnd
cmc
xor
lods
sub
push
test
inc
adc
sub
cmp
push
repz
mov
inc
fadd
lods
out
jnp
into
mov
js
add
mov
outsl
mov
fadd
ja
sarb
cmp
cmp
push
pop
scas
push
sub
dec
mov
xchg
sub
rorl
sub
and
sub
addb
inc
push
inc
or
xor
out
repnz
inc
mov
xcrypt-ofb
cmpsl
lods
jns
lret
mov
ftst
fdivrl
pop
movsb
rolb
popa
lcall
pop
jbe
adc
jg
sbb
sub
xchg
xor
add
subl
mov
adc
daa
sub
rcrl
stos
fs
xor
pusha
scas
lcall
xor
pusha
inc
fimuls
dec
adc
jns
test
jmp
push
call
jecxz
fnsave
mov
add
hlt
stos
xor
dec
mov
mov
jae
sub
data16
ss
xchg
dec
rclb
pop
dec
loope
psraw
inc
jle
cs
jg
mov
jecxz
push
mov
mov
and
movsb
and
sbb
subb
andl
fs
xchg
xor
dec
mov
es
jge
jmp
add
lret
add
or
out
addr16
sub
cmp
insb
mov
dec
mov
dec
or
lret
leave
cmpsl
mov
add
test
push
repz
push
testb
mov
dec
mov
cld
lock
or
lss
aad
push
adc
fiaddl
stos
ljmp
adc
lahf
outsb
repz
or
in
movaps
icebp
mov
inc
fs
mov
sti
add
mov
fisttpll
sarb
negl
std
je
mov
mov
test
jl
mov
popf
or
in
dec
pusha
outsb
addr16
test
fs
xchg
push
test
xchg
rclb
lcall
dec
push
cltd
or
cmp
fdivr
mov
jecxz
sbb
dec
test
ja
jmp
je
pop
sbb
cmp
xor
and
test
push
sbb
xchg
push
xchg
icebp
xchg
mov
repnz
test
mov
cltd
or
xor
lret
daa
xor
adc
insl
xor
sbb
mov
clc
pusha
push
jp
pop
mov
mov
cs
or
or
cmp
fmul
or
sbb
sbb
jne
les
adc
xor
xor
mov
sub
hlt
cmp
mov
in
inc
fdivrs
adc
das
jnp
bound
push
sbb
jle
mov
int
or
pop
les
jp
jo
and
sub
outsb
lret
xchg
int
insl
pop
add
xchg
jl
xchg
cs
and
stos
dec
cmp
repnz
or
xor
out
add
pop
sbb
pop
scas
dec
xor
clc
mov
rcll
adc
rcrl
ss
jbe
mov
sbb
cmp
and
std
mov
mov
xor
rolb
fwait
adc
jns
pushf
int3
ret
jmp
mov
dec
or
mov
loopne
rcll
adc
insb
push
sub
daa
lahf
jp
int
mov
pop
aam
test
push
stc
jle
pop
adc
adc
inc
pop
lcall
cmp
enter
and
and
fwait
and
hlt
int
arpl
out
or
cs
out
sbbb
mov
inc
adc
data16
hlt
add
xlat
sbb
es
addr16
cmp
add
xchg
test
mov
mov
movsl
push
or
or
stos
out
dec
lcall
orl
sbb
cld
in
fwait
lahf
daa
pushf
pop
or
icebp
add
pop
hlt
dec
shlb
sub
or
adc
lock
int
sub
adc
pushf
cli
push
mov
enter
dec
dec
cmp
push
jae
push
mov
ljmp
or
stos
and
inc
add
jmp
fnstsw
xor
add
in
paddw
jno
rol
dec
cmp
mov
in
mov
push
inc
cmp
xlat
mov
sub
ljmp
push
mov
mov
jge
mov
outsb
into
sahf
dec
jp
cmp
xlat
gs
sub
inc
adc
in
push
fmull
jne
xor
add
shll
sub
pop
imul
add
test
jns
and
stos
and
inc
inc
mov
dec
leave
mov
lea
add
fisttpl
add
clc
fisttps
cmp
xlat
jl
add
cltd
repz
or
cmp
lret
js
push
cltd
or
mov
sub
lahf
add
cmpsb
repnz
rol
scas
repz
popa
test
mov
and
push
dec
push
pop
xchg
cmp
jp
pusha
dec
ja
jns
daa
mov
push
jns
pusha
lret
cmc
xor
test
xchg
xchg
scas
cltd
add
dec
mov
mov
cmp
or
pop
sbb
mulb
dec
and
dec
negl
mov
leave
and
cmp
mov
in
dec
ljmp
repz
xor
mov
sarl
xor
or
scas
js
fwait
lods
lods
sbb
xor
mov
mov
mov
mov
jg
cltd
insb
test
in
mov
stos
lahf
add
lods
and
in
bndldx
lcall
ds
or
and
lret
lret
or
nop
in
test
int3
ljmp
xchg
sbb
mov
jl
jecxz
adc
clc
jg
and
jnp
dec
loop
mov
push
xorb
in
aam
push
fwait
out
or
pushf
and
inc
enter
lahf
jb
sbb
mov
ds
adc
mov
lret
imul
leave
icebp
push
insl
xchg
scas
cmp
add
rcl
mov
push
in
push
mov
outsb
es
xchg
pop
insl
mov
cmp
sbbl
sub
sbb
xor
jmp
ret
adc
movhps
cmpsb
xchg
scas
cmp
subb
dec
add
add
sub
xlat
jnp
repz
dec
pop
hlt
les
enter
lret
repz
dec
pop
push
jmp
fimull
filds
xorb
loope
or
mov
xlat
movsb
push
neg
mov
and
sub
in
ljmp
lea
xchg
frstor
sub
dec
pop
jmp
mov
mov
mov
mov
push
cli
sahf
xlat
mov
inc
add
mov
hlt
insb
mov
push
test
inc
xor
inc
push
mov
mov
push
jno
inc
repz
stos
add
aaa
sbb
loope,pt
vpcmpeqd
rorl
push
shlb
mov
std
jns
and
xor
sarb
ljmp
loopne
arpl
aas
sbb
mov
scas
lods
jne
lds
pop
pop
dec
sbb
dec
punpckhwd
fnstsw
shlb
call
jbe
imul
jp
adc
ja
xor
jns
xlat
les
push
shll
into
movsb
scas
xor
leave
in
cmpsl
icebp
out
jae
lahf
pop
dec
sub
jecxz
je
dec
or
mov
mov
ss
sbb
fimuls
push
jne
cmp
push
cs
lds
sub
adc
orl
mov
scas
push
incb
push
inc
adc
in
into
jg
xor
jo
mov
dec
jno
les
fidivrl
inc
dec
int
mov
mov
dec
cmp
je
jg
or
mov
push
inc
js
repz
push
xor
or
sbb
fucomip
test
xchg
mov
xor
adc
movsb
sysret
add
dec
arpl
xchg
add
pop
jge
mov
cli
movsb
stc
push
lcall
fsubl
cwtl
and
lock
push
mov
or
sub
mov
push
pop
lret
addr16
dec
mov
in
mov
add
fbstp
or
mov
mov
testl
cmpl
scas
loop
mov
imul
jmp
js
out
out
js
inc
xchg
fscale
into
mov
sbb
je
cmp
loop
mov
std
mov
dec
aas
aas
orb
mov
pop
mov
repz
mov
loope
scas
pushf
lods
fsubp
int
jle
add
popa
xor
arpl
xchg
xor
dec
nopl
jmp
insb
lods
xor
fidivl
or
sbb
js
add
mov
das
out
sbb
pop
push
clc
cld
fnstsw
jbe
add
cmp
hlt
leave
push
add
cmpl
xchg
idivl
mov
mov
ss
test
xor
lods
sub
mov
sbb
mov
jl
mov
out
sarb
push
arpl
iret
iret
adc
js
inc
popa
xlat
inc
adc
sarb
les
les
push
out
fsts
sub
jmp
pop
cmp
and
mov
ret
rcl
mov
loop
adc
sub
ja
dec
out
out
xchg
mov
mov
mov
loopne
jb
sbb
pop
cs
in
shr
or
mov
jnp
cmp
rcr
enter
nop
adc
sub
fnclex
sub
insb
pop
fwait
shrl
into
jg
in
adc
nop
push
bnd
and
adc
sbb
and
es
lods
movsl
jb
fbld
jge
fadds
mov
in
ljmp
xor
loop
movsb
div
pushf
test
stos
ljmp
mov
test
mul
jle
push
xchg
push
xchg
jecxz
mov
sub
rcll
into
mov
out
iret
sub
jp
jl
pop
jg
dec
add
mov
ror
es
add
cmp
add
aas
pop
sub
arpl
lds
insb
into
push
cmpsl
and
and
xor
cld
pop
cmpsl
and
mov
cmp
xchg
pop
cltd
mov
enter
mov
jo
sub
cmp
ljmp
sub
push
and
lahf
lcall
pop
in
inc
orl
pop
int3
or
push
jmp
dec
ficoms
jle
jne
pusha
mov
pop
mov
cmp
sub
jg
movsb
mov
cmp
repnz
loope
xchg
push
cmp
or
jbe
inc
or
fs
xchg
lock
push
fidivl
lret
cmp
xchg
cmp
push
icebp
mov
xchg
cmp
add
icebp
push
mov
push
pop
in
mov
int3
fidivs
adc
mov
shlb
sub
xchg
cli
movb
orl
and
orl
cmpsb
or
push
cmp
mov
mov
lods
daa
and
mov
lret
pop
cmpb
jbe
data16
mov
jbe
call
stc
shrb
or
mull
fsts
jne
mov
jge
push
mov
xchg
inc
ss
pop
add
sbb
dec
movsl
fucom
ficoml
and
push
dec
jns
ficoms
iret
out
lcall
push
rol
pop
arpl
ds
cmp
push
inc
mov
mov
jl
sbb
mov
xlat
mov
and
fdivrs
addb
ss
xlat
push
jne,pt
push
rclb
movsb
addr16
roll
inc
cmpsb
mov
jecxz
cmp
sahf
fsub
sbb
movsb
popa
shll
cmc
jo
mov
add
enter
pop
mov
pop
test
pop
aad
mov
lcall
push
out
and
loope
insl
sbb
cmpsl
stos
ret
imul
jb
cmp
mov
cld
jns
xchg
jl
rorl
push
xor
cmp
pop
mov
mov
jns
test
push
fcmovne
repz
clc
cmp
lret
enter
mov
out
lret
aad
jbe
push
push
leave
add
push
aaa
xchg
mov
or
icebp
and
or
rclb
ret
jle
fcomip
push
cwtl
lea
pushf
mov
icebp
xlat
adc
fstpt
adc
inc
aas
rol
or
mov
in
jo
hlt
loopne
adc
mov
and
dec
aad
push
sub
aaa
insl
cld
out
andb
insb
arpl
cld
sub
pop
cmpsb
out
xor
movsb
ss
xlat
inc
or
dec
cld
testl
icebp
je
mov
in
mov
test
clc
inc
arpl
xlat
outsl
pop
cmp
mov
inc
mov
mov
dec
jge
dec
lret
dec
xchg
dec
mov
dec
repnz
push
mov
sbb
dec
mov
push
mov
test
or
push
jnp
arpl
jmp
addr16
mov
push
pop
xorl
aas
inc
popf
mov
lods
sub
mov
cmp
lahf
into
jmp
movsl
in
arpl
mov
adc
test
add
and
sbb
mov
mov
nop
lahf
call
bound
jle
or
sarl
jbe
push
cmp
mov
fdivr
inc
fisubrs
dec
stc
lock
mov
sub
lret
sub
push
fcomps
imul
lea
movsb
outsb
mov
pusha
popa
lcall
push
sub
inc
cmpsl
jbe
mov
sbb
dec
xchg
mov
mov
add
mov
and
stos
scas
or
xchg
sub
or
leave
pushf
fmul
push
push
mov
dec
int3
push
push
mov
pop
push
lds
gs
cs
fptan
or
mov
fsubrl
and
scas
movsb
ljmp
je
mov
iret
cwtl
sbb
int3
sbb
out
xor
lock
dec
push
test
mov
and
rcl
dec
push
inc
fistl
in
sub
sbb
push
sbb
sbb
pushl
loope
cmp
sub
loop
inc
in
gs
mov
mov
jp
pop
lds
data16
test
pop
decb
cmp
jae
cld
push
dec
or
pop
jg
and
jae
test
cmp
sbb
stc
cmpl
push
xorl
dec
mov
lea
sbb
dec
adc
sbb
dec
or
mov
es
shl
fldt
jg
pop
sub
jo
or
lahf
gs
gs
jecxz
outsb
data16
and
imulb
aas
addr16
jg
out
aaa
fmuls
insb
dec
testl
gs
inc
cld
sbb
dec
lcall
nop
inc
mov
mov
mov
xchg
mov
push
cmp
loop
popf
jb
test
and
aad
std
insl
addb
cltd
xor
sbb
and
xbegin
adc
xor
xchg
dec
cwtl
inc
sub
repnz
out
outsl
xor
fcoml
mov
push
mov
stos
dec
out
and
xor
test
cmc
ds
cmp
add
add
shlb
jns
mov
or
pushw
test
push
testl
push
cmp
jno
adc
add
pop
jge
inc
pavgw
push
mov
add
out
add
pop
das
cmp
aad
gs
cmp
popf
jg
sbbb
rorb
lret
dec
dec
adc
push
mov
or
pop
pop
jnp
sbb
push
call
in
xchg
addr16
jb
xor
das
xor
mov
or
mov
test
or
pop
fcomps
and
pusha
jb
test
lret
cmp
mov
fwait
xchg
or
adc
jbe
sub
out
mul
jnp
sti
cmp
les
lea
bound
test
add
mov
push
push
xchg
or
mov
sbb
lea
andb
test
mov
dec
add
and
in
rclb
stos
data16
stc
popf
push
movsl
jo
fwait
int3
cmp
mov
add
mov
mov
aaa
push
aad
pop
inc
sub
in
clc
stos
xchg
out
repz
push
sub
xor
or
push
inc
loop
test
testl
lea
cmc
daa
cld
leave
jno
cld
cld
ds
into
cld
outsb
jle
lds
jle
push
lea
cmc
ja
dec
imul
mov
inc
dec
push
sub
mov
jl
aaa
pusha
dec
clc
dec
mov
mov
push
pop
add
outsl
jae
push
imul
sub
ret
scas
mov
cltd
shrl
adc
cmpsl
hlt
push
cmp
cmp
and
sahf
leave
pop
inc
inc
xor
and
adc
adcb
mov
lret
sbb
adc
xchg
lods
into
lahf
stos
clc
inc
mov
pop
mov
cli
adc
mov
ds
add
jmp
sbb
add
jb
gs
call
push
and
addr16
jecxz
mov
sarb
imul
subb
test
adc
mov
mov
push
mov
popa
pushf
in
mov
mov
sbb
test
lret
es
ds
mov
outsb
cmp
stc
rclb
mov
lds
push
addr16
jecxz
mov
stos
lds
mov
les
in
movsl
inc
mov
mov
cmp
xor
dec
dec
mov
push
push
push
or
jmp
mov
or
cmc
sub
clc
mov
imul
mov
pop
xchg
xor
into
adc
dec
jmp
mov
je
into
in
lcall
in
les
xchg
dec
adc
jae
lods
pop
into
in
jp
ret
es
inc
xchg
sub
pop
adcb
ss
dec
inc
outsb
aad
aas
mov
adc
cmp
mov
movb
xchg
xchg
dec
sarl
addr16
push
test
cmp
pop
pop
sub
dec
jb
nopl
push
arpl
mov
dec
pop
arpl
push
flds
out
mov
jae
inc
into
cmp
imul
jb
insb
jns
cltd
addr16
movsl
sahf
sbbb
sar
das
stc
pop
jg
sbb
pop
mov
xchg
jns
jae
mov
bound
inc
mov
fisubrs
lahf
jge
mov
xchg
test
stos
fiaddl
or
mov
sub
pop
mov
in
mov
jle
mov
adc
pop
xchg
jnp
mov
leave
cmp
daa
mov
cli
dec
dec
imul
xor
inc
and
push
ja
ljmp
ss
or
jmp
xor
mov
andb
add
push
xor
adc
mov
cmc
iret
sbb
rcrb
jmp
repnz
mov
insl
cld
and
out
adc
mov
cwtl
scas
lea
or
icebp
in
add
push
out
fcoms
orl
or
sbb
leave
call
mov
sbb
sbb
xor
data16
scas
iret
and
and
dec
cmp
jl
sub
notb
xor
out
adc
sahf
and
test
sub
aam
xchg
or
andb
test
dec
int
xor
test
ljmp
div
fs
sub
cld
test
in
dec
rcr
mov
loopne
dec
mov
adc
ds
vmread
mov
ja
xor
lcall
mov
vsqrtps
mov
inc
or
lahf
ret
mov
lds
pop
outsl
xor
xor
roll
push
mov
cli
loopne
cmpsb
movsb
aaa
pop
sbb
jae
pop
xor
push
fisttpl
js
ret
jp
sahf
inc
pop
int
scas
test
outsl
lds
dec
aas
lret
fidivrs
ret
push
fsubrl
les
mov
sub
cmpsb
adc
mov
mov
sarl
adc
mov
hlt
popf
lds
repnz
test
loope
push
sbb
js
and
xchg
stc
mov
xor
inc
jns
inc
sub
out
pop
fadd
jge
mov
mov
and
fistpll
loopne
cltd
xchg
fucomip
mov
xchg
dec
or
xor
mov
xor
cmpsl
cs
add
push
xor
xor
fsubrs
popa
les
in
push
mov
push
lcall
fstl
test
imul
lea
imul
cmpb
iret
xor
cs
scas
popf
cmpb
bound
mov
js
inc
enter
mov
nop
aas
xchg
out
shlb
ret
xor
xchg
xchg
enter
test
shrb
jno
dec
frstor
lret
inc
call
daa
mov
sub
xor
xchg
jne
mov
pusha
addr16
inc
daa
cmp
xor
sarl
insl
fdivl
xchg
divb
mov
jp
inc
mov
mov
stc
fwait
movnti
sbb
jmp
es
jge
sbb
inc
mov
pop
fisttps
or
xchg
stos
sub
sbb
or
movsb
repnz
xchg
sbbl
sbb
sti
lcall
adc
sub
and
addr16
add
ret
xor
sahf
xor
cli
push
jmp
xchg
out
mov
xor
mov
scas
mov
lods
jns
xor
lods
leave
test
xchg
insb
or
push
cli
test
divb
lods
xor
jne
mov
push
mov
xlat
push
cwtl
mov
test
mov
xchg
jmp
loope
add
inc
inc
xchg
es
out
inc
je
and
cs
imul
xor
sbb
pop
inc
js
mov
mov
dec
cmp
sub
cmp
pop
sbb
cmp
mov
mov
xchg
adc
jbe
jmp
inc
stc
lret
outsl
dec
stos
lret
sbb
adc
out
push
ret
inc
lods
mov
movsl
shll
jns
repz
test
cmp
loopne
dec
dec
movb
jg
xchg
in
aam
xchg
mov
fsubrs
sub
mov
pop
mov
add
jns
imul
push
pop
dec
push
shl
push
push
and
test
jae
xor
push
mov
jmp
xchg
mov
cmp
repnz
mov
movsb
cwtl
test
adc
aas
inc
stos
dec
dec
jns
ja
sub
shlb
cmp
daa
xlat
iret
andl
mov
movsb
mov
addl
call
push
fnstenv
repnz
xchg
jns
cmp
fstpl
clc
hlt
pop
movsb
jg
lods
mov
inc
icebp
dec
bnd
or
stc
inc
insl
mov
das
jns
sbb
out
ret
fcmovnbe
arpl
inc
insl
lret
pop
cmp
inc
mov
jne
mov
test
or
xor
icebp
mov
repnz
ret
movsl
xor
mov
xchg
dec
mov
fadd
lods
sbb
adc
lds
and
pop
mov
add
xchg
inc
icebp
lret
cmp
mov
push
inc
pop
int
rclb
insb
adc
xor
pop
daa
pop
push
movsl
or
fcmovne
add
rorb
hlt
je
jmp
in
mov
mov
loope
mov
js
shll
mov
jne
lahf
fiaddl
mov
rol
mov
rolb
jmp
popf
inc
stos
xchg
pop
inc
jo
mov
ljmp
testb
out
les
js
ja
mov
xor
lret
dec
mov
outsb
sahf
das
fdivl
les
mov
rorb
sbb
std
into
sub
pop
frstor
shll
or
ret
pop
mov
sbb
loopne
sbb
cltd
enter
hlt
mov
mov
push
push
and
shlb
js
cmp
decb
and
or
insb
or
sbb
aam
xchg
dec
add
daa
aad
adc
push
dec
sbb
insl
and
sub
xchg
mov
jne
sbb
jp
ret
inc
cltd
add
lods
sbb
ja
repnz
std
mov
mov
mov
bound
pop
jno
push
or
call
ss
in
cwtl
iret
dec
or
test
add
stos
test
leave
insb
xchg
mov
mov
repz
cld
pop
pop
mov
dec
ret
loope
or
cld
call
pushf
or
add
mov
xchg
into
cmp
pop
mov
rorl
ret
lea
push
mov
push
sub
fnop
and
push
dec
pop
mov
push
out
xor
rorl
dec
test
mov
or
sub
imul
or
or
cmp
adc
ds
loope
xchg
fsubs
xor
xchg
cld
popf
sbb
dec
repz
mov
and
popa
or
enter
fisubrs
sub
bound
lret
dec
sbb
push
sbb
inc
dec
cmp
jae
and
test
stos
popa
ljmp
add
jle
clc
popa
xor
fisubrl
rorl
das
jmp
mov
or
mov
mov
push
dec
mov
inc
mov
bound
mov
mov
in
mov
pop
js
dec
mov
inc
shl
inc
inc
lods
mov
sbb
cli
xor
mov
stos
outsb
mov
xchg
and
pop
movsl
cmc
xor
std
aaa
testb
jb
mov
jne
ljmp
pop
test
inc
xor
scas
jge
int
ja
mov
mov
cmpl
rorl
add
movsl
popf
jg
pop
inc
lock
adc
js
leave
insb
cmc
xchg
rorl
cmp
dec
sbb
movsb
dec
aad
sti
sahf
pop
and
and
pushf
rolb
push
mov
push
out
add
mov
add
mov
inc
sub
ja
in
dec
jno
inc
inc
test
inc
shll
dec
ret
ds
xchg
icebp
scas
cmp
les
loope
shlb
sarb
jl
aam
std
lret
jb
out
ret
sub
mov
arpl
add
dec
sub
push
nop
push
sub
add
wbinvd
ds
and
or
mov
jnp
adc
jae
movsb
mov
sbb
dec
mov
mov
sbb
jmp
xor
repnz
rcll
xlat
loop
and
jb
incb
mov
bound
jmp
std
xchg
dec
mov
jae
insb
cmp
xchg
mov
clc
and
push
inc
ret
sbbb
lret
sarl
xchg
adc
mov
js
enter
cmpsb
push
pusha
mov
fbstp
xchg
fldt
sarb
and
pop
mov
lret
mov
sub
mov
push
popf
mov
lea
mov
jge
fiadds
repz
mov
jae
sub
mov
cmpsb
fwait
mov
fdivl
or
out
dec
mov
sub
clc
subb
icebp
push
jbe
xchg
cld
xor
in
pop
sbb
stos
mov
sub
sti
call
push
push
fdiv
repnz
cmp
adcl
mov
push
push
dec
popf
lcall
pop
cvtpi2ps
outsb
mov
scas
pushf
mov
jo
mov
loop
iret
js
xor
mov
push
and
or
int
jle
jns
imul
sbb
ret
rcr
lahf
arpl
out
cmp
cld
repz
std
inc
mov
cmc
dec
stos
outsl
rcrb
jb
xchg
cmp
xchg
repnz
loopne
cmp
push
incl
das
out
insl
ficompl
sub
aad
jns
cmpsb
pop
and
cmpl
push
jb
roll
lea
addr16
sbb
addr16
sbb
xchg
sbb
jae
pushf
rorl
mov
loop
jmp
bound
call
sbb
fsub
jl
in
daa
lods
leave
xchg
push
mov
push
pop
dec
dec
mov
adc
and
or
ja
mov
mov
outsb
jge
fsub
adc
ds
jge
mov
or
add
enter
push
outsl
push
insb
testb
dec
pusha
and
ja
sub
xor
clc
mov
cld
inc
frstor
mov
push
lret
sub
mov
repnz
mov
lds
inc
xchg
add
sbb
lahf
mov
sti
cmpl
adc
jecxz
cmp
adc
sbb
push
mov
in
dec
cld
dec
dec
jae
ss
cmp
jno
adc
rcrb
mov
sub
xchg
cwtl
imul
xchg
int3
mov
pop
aam
inc
flds
pop
dec
or
jno
and
mov
fwait
shll
out
push
outsl
xchg
xor
out
cli
lods
sti
mov
fs
rcr
mov
loopne
and
mov
dec
out
mov
out
ds
inc
lahf
add
mov
pop
jbe
repnz
xor
clc
mov
cld
int
es
or
or
sbb
push
lahf
cmp
in
and
sub
xchg
enter
xchg
jo
mov
notb
mov
vmovd
in
ljmp
xchg
pop
iret
sbb
outsl
pop
mov
xchg
xchg
cltd
mov
das
out
adc
mov
xchg
int3
ret
or
sub
or
fwait
jo
sub
push
cmpsl
fidivrl
popf
addr16
push
rol
fmull
in
rolb
push
je
pushf
je
sti
xchg
out
imul
mulb
sub
pop
or
dec
mov
les
es
push
into
mov
xor
xor
sub
ret
pop
cltd
divl
push
xor
mov
or
and
sub
xor
dec
inc
cmp
mov
popf
stos
gs
inc
xor
sub
cltd
dec
dec
sahf
dec
adc
xchg
jp
inc
jo
shrl
mov
jae
sub
lock
mov
scas
shrb
daa
sub
jne
lea
ja
popf
dec
aas
inc
sbb
aam
out
rorl
scas
dec
mov
and
ret
xchg
das
addr16
jle
repz
sbb
test
popa
dec
sub
les
rol
out
ljmp
sahf
addr16
push
sub
pop
inc
in
mov
ja
adc
or
mov
pop
inc
sti
shlb
push
fstp
je
jg
lock
scas
pop
aad
or
sub
lcall
inc
jns
cmp
test
sbb
push
into
mov
jmp
dec
jb
inc
scas
sbb
push
js
das
addb
insl
pop
aam
lcall
std
mov
mov
ficomps
jl
lock
fdivrs
xchg
push
std
shlb
mov
xor
xchg
pop
sahf
xchg
add
inc
ds
lods
cli
inc
stc
int3
data16
dec
jmp
stc
mov
mov
sbb
pushf
rolb
sbb
sbb
adc
mov
xlat
pop
sarl
xchg
mov
and
pop
mov
stos
jmp
and
mov
popf
imul
aas
cli
mov
push
xlat
outsb
jmp
hlt
movsl
sahf
inc
inc
inc
pop
jno
aas
imul
sbb
xchg
orl
inc
jnp
js
in
and
push
sub
or
scas
mov
lret
ret
mov
mov
lcall
xor
jns
into
sbb
push
fimull
mov
adc
xchg
jo
mov
ja
pop
aaa
add
or
out
inc
sti
sarb
jne
scas
push
inc
sub
xor
jecxz
cli
iret
xchg
loop
loope
cltd
int
lods
or
dec
fbld
xor
push
shll
mov
scas
fidivl
cmp
ss
push
mov
clc
mov
loope
mov
pop
lods
outsl
repz
mov
insl
insl
add
sub
mov
sub
pushf
mov
mov
les
push
inc
jle
sub
mov
push
pop
pop
push
popf
dec
push
das
xor
in
inc
adc
xchg
icebp
mov
adc
sahf
iret
pop
push
adc
inc
lahf
push
je,pn
push
sahf
add
in
mov
jle
aam
mov
dec
xchg
and
ja
jecxz,pn
add
rcrb
incb
cmp
push
aas
mov
lret
outsl
xchg
mov
js
mov
inc
xlat
cmc
jo
mov
push
mov
mov
mov
jnp
stos
fs
adc
out
pop
xchg
sbb
call
lds
xor
movsb
cmp
hlt
xchg
nop
gs
mov
or
rcrb
in
inc
mov
or
sbb
sub
adc
push
mov
mov
xchg
inc
out
sbb
add
lret
or
rcl
and
out
in
and
sbb
adc
test
mov
jecxz
das
fistpl
add
dec
add
xor
mov
insl
mov
and
jl
and
ds
xor
push
lahf
js
test
and
outsb
movsl
jne
cli
adc
mov
pop
repz
std
sbb
mov
scas
pop
cmp
cmpsb
outsl
test
xlat
mov
xlat
xor
aaa
ja
or
sbb
push
stos
push
jo
pop
std
rcl
push
sub
push
fildll
and
mov
push
out
dec
insb
xchg
lods
rcll
mov
push
xchg
xchg
jns
adc
inc
sbb
jmp
inc
push
clc
mov
inc
in
xchg
out
outsl
xchg
ret
or
adc
fcmove
rcl
mov
or
mov
jg
sbb
cld
push
jecxz
in
pushf
enter
inc
add
pushf
loop
pop
cltd
xor
cmp
lods
pop
scas
test
push
mov
cmc
xchg
sbb
lods
xchg
imul
xchg
mov
insw
sbb
into
les
popa
pop
icebp
out
xchg
cli
push
ret
push
in
sub
mov
sti
test
aam
pop
adc
outsl
push
xor
xorb
cmp
pop
loop
ja
call
inc
or
add
cmp
out
or
mov
or
scas
lods
icebp
pop
fsubrs
pop
pop
repz
sub
dec
add
inc
xchg
xchg
sbbl
jbe
outsb
inc
ja
je
out
and
inc
mov
jp
loopne
sbb
in
gs
imul
jae
push
add
xchg
push
xor
and
sahf
out
jno
repz
or
adc
repnz
and
subb
dec
lock
pop
inc
pop
fadds
in
dec
fdivl
jge
mov
xlat
test
jno
add
add
fisubrl
mov
sub
push
je
pop
mov
shrl
cmp
pop
out
sub
pop
pop
mov
or
sbb
adc
mov
lahf
cmp
push
gs
mov
inc
xchg
push
add
call
mov
js
xchg
enter
outsb
or
adc
rcrb
test
cmp
fiadds
add
inc
cmc
loop
add
pushw
xor
fcomps
mov
loopne
popf
fldl
scas
mov
push
insb
and
ss
popf
push
mov
adc
lcall
movsb
lods
fnstcw
jp
adc
adc
push
and
addr16
cli
icebp
out
xchg
jg
sbb
add
std
pop
sub
mov
mov
daa
xchg
arpl
pop
int
sub
das
ret
pop
pop
add
push
rclb
fs
out
or
loop
aam
scas
stc
cld
mov
insb
dec
call
mov
push
lods
ja
shlb
in
fmull
and
xchg
sets
mov
insl
js
add
push
enter
sar
mov
data16
fs
and
insl
imul
mov
cld
push
add
ljmp
mov
inc
jbe
push
xchg
inc
jo
andl
mov
mov
lret
into
mov
inc
in
xchg
in
in
ret
cmpsl
mov
in
and
pushf
mov
jg
cs
sub
int3
lahf
push
mov
sti
testl
or
push
ja
outsl
pop
es
test
int3
aad
cli
sub
dec
xchg
mov
daa
mov
cmp
call
xchg
xlat
mov
xor
sbb
fimull
adc
mov
xor
pushf
xor
loop
sarl
negb
jne
imul
test
int3
adc
dec
sbb
xor
in
and
xchg
incb
rcr
insl
ss
inc
add
dec
xchg
dec
pop
int
xchg
ljmp
jmp
pop
sub
cmp
js
clc
inc
ljmp
xor
ja
mov
jbe
outsb
test
stc
in
cmc
enter
inc
out
push
es
add
push
imul
xor
push
inc
loopne
mov
ljmp
jb
xor
pop
pop
insb
sbb
gs
call
add
ret
pop
test
adc
add
sti
or
lret
pop
or
stos
adc
rol
or
inc
pushf
jle
jmp
xchg
fstps
mov
in
mov
and
or
pop
ret
dec
xor
cmp
stc
repz
jbe
loop
push
rolb
jbe
push
cmp
out
mov
xchg
icebp
shlb
nop
outsb
popa
cld
insl
sahf
xor
lods
fcmovnu
test
mov
ret
leave
es
push
outsl
mov
xchg
push
test
push
inc
outsl
cld
lcall
and
mov
fcmovnu
cli
das
or
mov
sbb
adc
jecxz
mov
mov
add
in
es
cmp
adc
outsb
subb
xchg
stc
mov
pop
sbbb
cmpsl
push
fcomp
add
movsb
aaa
push
cmc
cmp
cli
aad
in
lret
inc
push
adc
leave
out
inc
dec
sbb
stos
mov
mov
inc
push
ss
lret
inc
rcll
push
xor
data16
jl
jbe
cs
roll
cmp
mov
add
jnp
jbe
fildl
imul
jo
jecxz
and
and
ucomiss
outsl
adc
repnz
hlt
mov
addb
xchg
sub
push
gs
fcompl
imul
mov
lods
push
fs
jne
clc
es
cmovne
hlt
cltd
sti
or
arpl
xchg
mov
jbe
loopne
pop
inc
cmp
lods
mull
and
xor
pop
pop
pop
ret
add
lret
xor
insl
div
adc
push
cmpsb
in
inc
cmp
cmpsl
bound
arpl
cmp
mov
fimull
push
shlb
push
jecxz
and
sub
jge
and
pop
cmp
mov
fpatan
push
mov
out
std
insl
imul
mov
out
data16
sbb
repnz
and
jb
jl
fs
push
idivl
jmp
xlat
fsts
jns
les
loop
mov
mov
mov
mov
fmull
lret
aas
jo
movsl
inc
test
in
out
xor
in
mov
pop
mov
mov
movsl
push
and
stc
push
cmc
or
mov
xor
push
faddp
clc
cs
xor
push
scas
in
push
in
sbb
pop
jns
test
push
push
jno
add
pop
aas
push
daa
rcrb
xchg
leave
xchg
bound
hlt
or
push
sti
call
scas
jae
movb
push
push
lds
arpl
scas
loope
lea
mov
add
shlb
mov
int3
cmp
test
xlat
sub
dec
fisubs
mov
sub
test
in
cwtl
outsl
sub
xchg
dec
xchg
dec
mov
adc
cmp
mov
jmp
ret
out
aaa
or
imul
pop
inc
xor
lods
jmp
fmul
push
xor
inc
pop
xchg
std
xchg
mov
out
xchg
in
out
mov
fsubrp
inc
xchg
ss
cmpsb
pop
fnstcw
ja
push
xor
in
jo
jae
mov
aaa
mov
lods
pop
add
cmp
std
daa
scas
pop
nop
lcall
jge
fists
out
adc
xor
int
js
cmc
jp
mov
mov
les
jg
rcl
mov
inc
jmp
mov
popa
decl
pushf
fadds
cld
sub
inc
mov
mov
cs
and
cmp
or
push
or
xchg
sub
sbb
jnp
inc
cwtl
call
push
mov
jg
out
pop
mov
dec
fiaddl
das
sbb
fs
pop
inc
jmp
loope
aam
inc
or
and
xchg
aaa
jbe
mov
daa
stos
push
xchg
xchg
xlat
mov
pop
add
cmp
fadds
loop
imul
sbb
outsb
xchg
aam
leave
push
jg
xchg
pop
aaa
icebp
cwtl
and
sub
dec
loop
pop
ret
stos
push
sbb
mov
je
jae
fwait
push
mov
sub
aaa
pop
push
add
mov
jmp
call
mov
mov
out
pop
test
jecxz
test
dec
jecxz,pn
shrl
jne
ljmp
js
lret
pmaxsw
xchg
leave
rcrb
inc
stos
mov
repnz
js
jb
subl
pop
jns
loopne
and
pop
daa
xchg
mov
mov
shrb
mov
pop
gs
dec
mov
sbb
je
loop
testl
push
mov
test
scas
mov
in
fs
and
iret
cmp
les
inc
daa
int3
lcall
xor
xchg
in
out
push
push
xchg
int3
push
mov
mov
pop
stc
cmp
jmp
pushf
cwtl
inc
push
mov
mov
jnp
enter
xchg
sub
lret
adc
jo
dec
pop
push
repnz
add
int3
fidivs
aas
sub
adc
enter
lds
cs
xchg
mov
aas
cltd
sbb
ret
mov
les
loopne
addb
pop
cmp
icebp
pushf
and
nop
leave
test
sbb
push
sbb
das
cmp
mov
xchg
nop
fcmovbe
rol
movsl
add
pushf
dec
push
and
sub
xchg
clc
xchg
out
ret
inc
mov
sbb
mov
outsl
mov
sub
and
imul
rcrl
sbb
cwtl
xchg
and
cwtl
mov
scas
or
daa
fstpl
sti
add
cs
mov
ss
clc
dec
jecxz
jmp
adcl
js
jno
rclb
call
and
sbb
out
lds
popa
and
dec
ret
mov
call
add
ljmp
mov
call
insl
test
jl
mov
cs
sar
pop
pop
xor
sti
sahf
cld
mov
or
adc
int
jae
xchg
mov
shrl
xor
sub
nop
inc
pushf
insb
xchg
adc
add
dec
loop
iret
push
mov
sbb
lret
sub
insl
mov
rorb
sbb
sbb
rol
push
pcmpeqd
lcall
adc
lcall
jno
jle
into
push
out
test
xor
xchg
cmp
lcall
or
mov
push
push
sbb
adc
add
jno
jecxz
pusha
stc
ds
dec
iret
lahf
adc
jno
push
inc
fcompl
sub
lods
or
jg
icebp
outsl
xchg
ret
xchg
shr
icebp
jle
adc
mov
mov
mov
fcomip
call
sub
add
lods
inc
inc
aad
xlat
inc
mov
jne
push
sub
std
cltd
imulb
adc
pop
mov
and
push
clc
dec
rcl
lret
jmp
call
cli
mov
mov
loope
in
data16
mov
mov
adcl
sbb
mov
inc
xor
sbbb
sahf
rolb
sbb
xorb
xchg
adc
jb
jmp
je
je
jecxz
fs
pop
test
xor
je
xchg
jp
lret
jbe
xor
clc
push
adcb
jl
popa
cmp
subb
adc
test
cmp
shrl
lock
arpl
imul
inc
inc
xchg
or
sbb
hlt
movsb
xor
orl
dec
mov
or
movsl
adc
shll
sahf
dec
push
xor
dec
jns
xchg
lahf
and
jg
sub
into
jns
add
ret
fs
jl
imul
xchg
mov
ss
jo
xchg
and
mov
xchg
adc
push
or
inc
mov
mov
jae
les
mov
movsl
jns
sub
lods
sbb
jo
mov
pop
mov
push
xor
jl
xchg
pop
mov
xchg
test
sub
or
sub
or
mov
jno
adc
test
orb
cmp
leave
mov
mov
jle
pop
bound
xchg
faddl
sbb
xchg
adc
ds
add
in
arpl
jns
adc
fldcw
icebp
icebp
add
iret
aam
addr16
enter
sub
dec
push
jle
cld
push
incl
aas
test
xor
ficoml
mov
push
lret
or
lods
leave
pop
xor
mov
pop
movb
gs
mov
out
push
mov
fiadds
mov
pusha
inc
mov
or
cwtl
lods
mov
shr
ret
jbe
mov
pusha
jg
sub
adc
ret
mov
cmp
jle
or
push
mov
jbe
pushf
es
xor
iret
adc
jns
pop
cld
lods
movb
and
out
sbb
or
xor
jmp
mov
fstpt
int
into
xor
loopne
lods
mov
add
popl
or
sti
mov
jae
pop
out
mov
nop
cmp
xchg
test
cmp
adc
popa
sbb
pop
cli
push
mov
xchg
out
mov
mov
roll
xor
jecxz
push
pop
stos
fcomip
nop
sub
mov
dec
jne
testb
rcll
call
push
pop
inc
fsubrs
imul
and
cmp
and
push
jmp
cs
repz
mov
sbbl
mov
repz
jo
cs
inc
adc
aas
pushf
cmc
fs
xor
xchg
mov
xchg
add
lcall
mov
push
lret
jne
cmc
adcb
scas
inc
xor
std
jnp
pop
fwait
or
stos
mov
dec
and
pop
fwait
ror
dec
cmp
push
lods
orb
cmp
out
xchg
sub
testb
js
ret
fsubrs
insb
aad
jg
test
ds
sbb
mov
sbb
aaa
inc
adc
pop
xchg
pop
fisttps
push
into
addr16
movsl
or
mov
inc
push
in
setle
pop
dec
lgs
popa
cmpsl
repz
jo
ja
stc
insb
mov
sub
sub
pop
pop
pusha
mov
insl
sbb
push
dec
cmc
mov
xor
mov
loop
mov
cmp
dec
aam
in
xor
ljmp
push
jmp
fistps
pop
arpl
push
sti
imul
mov
ljmp
movsb
jns
dec
cli
add
mov
cmpsl
jne
out
iret
hlt
push
add
rcrl
lds
xor
cmp
dec
cmp
pop
push
cmp
js
fsubrl
addr16
in
insb
sub
js
ror
out
mov
cmp
repz
jmp
jge
xchg
stc
fstl
jnp
mov
test
int
repz
fildl
outsb
jno
cmp
lcall
lahf
idiv
ljmp
fwait
adc
int
cmpsb
mov
lods
fadds
sbb
push
je
pusha
dec
add
test
inc
mov
inc
addr16
fnstcw
sbbl
inc
sub
sbb
sbb
cmp
sbb
add
mov
lds
ss
sub
xor
jae
fisubl
cs
scas
lea
lea
icebp
scas
push
insl
pop
or
push
out
add
jecxz
inc
sbb
ja
pop
mov
repz
movsb
push
fbstp
pushf
jo
cmp
add
or
daa
or
mov
pop
sti
xlat
cs
cmc
lods
and
test
shrl
rcl
arpl
fsubrl
pop
mov
sti
bound
loop
mov
cmc
and
ret
mov
jge
inc
jns
and
clc
rcrl
pop
lret
push
push
outsl
ljmp
fwait
enter
inc
or
insb
pusha
lds
ret
add
cmp
lret
stc
cmp
pop
xorb
cmpsb
gs
and
enter
leave
push
jge
mov
xchg
mov
mov
xchg
dec
sarb
or
mov
outsl
rol
inc
jne
push
in
xor
pop
push
mov
dec
clc
add
in
xchg
mov
daa
fnstcw
add
push
jle
in
mov
jae
scas
push
lock
pop
shll
and
sbb
lahf
dec
scas
orb
enter
nop
mov
sub
pop
mov
shlb
das
in
add
fwait
push
int
jb
xchg
jge
mov
inc
ret
lcall
jle
insl
cmpsb
mov
push
xchg
aam
xor
xchg
ret
pusha
dec
push
bound
pop
jl
cld
lahf
jp
icebp
xchg
arpl
out
test
xchg
int
xor
in
decb
arpl
xor
pop
call
rcll
push
dec
into
scas
call
andl
aad
pop
stc
fdivl
jae
xor
aam
pop
xchg
mov
xor
pop
xor
loop
adcl
xor
loope
adc
cmp
stos
iret
adcb
mov
sbb
sbb
aaa
jp
bound
call
movsb
into
xchg
cld
adc
lods
push
or
scas
mov
adc
cmpb
mov
test
mov
xor
fdivr
add
and
sub
xchg
jmp
pop
call
repz
fildl
pop
push
ljmp
push
lds
lahf
adc
xchg
fs
inc
js
add
push
stos
add
rcr
mov
fisubl
mov
movsb
aaa
lret
dec
out
into
inc
insl
and
hlt
ljmp
xchg
dec
insl
cmp
adc
mov
push
shr
popf
mov
mov
sub
add
pop
inc
push
cld
mov
cpuid
mov
mov
test
cmp
mov
adcl
test
fadds
ret
in
sbb
mov
dec
sbb
out
stc
dec
inc
in
iret
lcall
cmc
imul
fnstcw
or
jmp
mov
popf
sahf
mov
xor
xor
push
sbb
mov
fadds
mov
call
pop
aas
mov
mov
dec
or
lcall
jb
dec
inc
and
call
das
jmp
pop
mov
mov
push
fisttps
mov
push
bound
insb
test
push
mov
outsl
dec
and
addr16
push
lods
sbb
sub
jmp
out
adc
dec
outsb
push
cmpsl
cmp
xchg
add
pop
and
jmp
jnp
daa
loope
push
ret
inc
rol
inc
push
cltd
hlt
mov
pop
pop
addr16
insl
cmp
sub
sahf
sarb
rclb
mov
enter
addr16
mov
pop
mov
pop
inc
shrl
int
dec
pop
pop
ja
lock
jae
mov
movsb
lcall
jae
inc
pop
fs
add
xor
push
pushf
or
pusha
xchg
loopne
fst
inc
or
jb
test
jle
fwait
out
pushf
and
out
inc
mov
sbb
fbld
jb
jecxz
aaa
dec
sarl
xchg
add
jo
out
clc
jbe
cltd
lds
mov
mov
adc
ret
mov
xchg
les
dec
iret
popa
fsubrl
in
icebp
push
fisttpll
and
int
xor
cli
xchg
mov
pop
adc
push
jp
mov
aad
daa
and
cmp
xchg
add
divl
sbb
hlt
xor
xchg
mov
pop
dec
jmp
fcompl
add
or
insl
mov
add
shl
sub
cld
mov
and
inc
and
mov
sti
movsb
pop
jl
xchg
push
sarb
mov
in
lods
xor
icebp
out
pop
lcall
or
push
mov
dec
sbb
jno
jmp
xchg
and
aaa
roll
icebp
pop
sub
fs
iret
in
lea
fnsave
test
sti
stos
sub
nop
xchg
test
addr16
adc
inc
ret
out
push
outsb
ret
sbb
and
into
pop
hlt
bnd
je
mov
cmp
sub
xchg
cltd
xor
mov
adc
icebp
cs
jb
enter
cmp
shrb
mov
cmpsl
ret
sti
stos
mov
mov
std
sahf
push
outsb
pop
mov
mov
adc
cmpsb
pop
test
jb
std
push
addr16
fmull
ss
lock
test
xchg
stos
mov
ja
or
outsb
mov
xchg
dec
and
mov
in
ficoms
cmp
push
addr16
xchg
dec
fiaddl
imul
bound
mov
xor
cmp
mov
outsl
aad
ljmp
dec
xor
movsl
adc
insb
pop
call
loop
push
dec
sub
pop
mov
aam
lods
push
rclb
xchg
mov
pop
mov
push
aas
fwait
sarl
push
cwtl
lods
arpl
cmp
jb
cmp
lret
jno
mov
xchg
sub
lret
jb
mov
pushw
adc
xchg
and
lods
aas
ds
push
call
inc
xchg
xor
pop
push
or
ja
js
orl
mov
aam
mov
cmp
ljmp
scas
inc
arpl
mov
stos
pop
aaa
ret
and
cmpsl
je
rclb
dec
ret
xchg
or
std
and
repnz
xchg
repz
cwtl
cmp
scas
pop
inc
loope
test
adc
aaa
mov
int
mov
xor
mov
sbb
push
pop
xor
xchg
jecxz
inc
push
fcoml
std
xchg
mov
shl
xor
out
mov
orl
lea
fwait
jo
xchg
aad
and
adc
mov
push
imul
adc
adc
sub
jns
push
xchg
jnp
xchg
or
pop
jmp
rol
push
lods
ret
shll
inc
xlat
pop
outsl
loopne
aam
sub
inc
jecxz
inc
xor
jno
sbb
out
mov
xor
xor
lret
test
jge
adc
in
inc
mov
shll
pop
pop
sbb
sarl
ljmp
mov
cmp
stos
icebp
leave
add
in
dec
and
and
stos
in
push
mov
addr16
out
repnz
insb
dec
mov
cli
ljmp
and
mov
inc
addb
sahf
pop
mov
mov
mov
xchg
je
outsb
iret
jns
imul
sbb
add
sbb
cmc
das
add
jecxz
sbb
xor
sub
ret
cmc
mov
gs
xor
mov
lock
std
rcrb
imul
cs
sub
jmp
jnp
inc
icebp
test
mov
xchg
repnz
js
mov
imul
mov
mov
add
push
jmp
and
rorl
testl
mov
push
insl
xchg
ret
cwtl
dec
les
mov
inc
mov
fs
rcrl
pop
or
pusha
les
cmpsb
xorb
icebp
push
aas
in
lods
mov
dec
jl
jno
gs
add
add
gs
xor
pop
lds
xchg
sbb
and
inc
sar
push
int3
cmc
sarl
jecxz
rclb
mov
push
jne
shll
jmp
pop
cmp
add
or
jb
mov
ds
dec
mov
cmp
mov
or
testl
push
aad
les
out
adc
jns
mov
sbb
sbb
ss
dec
xor
imul
or
lahf
xchg
iret
xor
xchg
incb
popf
sahf
sub
or
cwtl
in
movsb
mov
leave
push
cmc
or
pop
mov
jnp
mov
mov
xchg
mov
lea
push
pop
xorl
out
test
test
mov
mov
shlb
lret
test
out
dec
mov
mov
sbb
pusha
insb
xchg
jge
pushf
divl
cmpl
out
mov
cltd
popa
loop
cs
sub
lret
push
pop
inc
aaa
shlb
or
jmp
xchg
enter
ss
sbb
jo
sbbb
inc
inc
xchg
jmp
xor
push
movsb
inc
jl
mov
cmp
mov
dec
incl
nop
mov
addb
jge
sbb
mov
int
lock
call
test
and
or
pop
ss
stc
insb
jnp
sub
mov
out
cltd
lret
pop
adc
lea
adc
inc
lcall
lock
mov
pop
xadd
lret
xchg
add
jae
pop
mov
dec
jae
enter
xor
pusha
movsb
lahf
xchg
stc
scas
jo
test
adc
fadds
sti
sub
data16
mov
inc
ds
addb
cwtl
and
push
ret
sbb
or
mov
push
les
or
sub
jno
lret
ds
movsb
pop
inc
inc
aaa
ret
mov
insl
inc
push
data16
xchg
imul
add
cli
popl
mov
xchg
dec
and
cli
lret
xor
mov
sbb
clc
dec
cld
loope
mov
jbe
add
xor
lret
popa
sub
cmpl
and
test
clc
int
adc
mov
outsb
sbb
adc
insl
add
sub
pop
mov
mov
idivl
popa
testl
add
cli
add
dec
mov
addr16
cmpsb
or
aas
cmp
or
or
cmp
mov
and
stc
hlt
mov
cmp
arpl
ljmp
inc
lahf
mov
enter
cmp
adc
xorl
call
xchg
mov
pop
in
dec
or
pop
test
in
jns
test
mov
jmp
inc
fbld
xchg
jmp
sub
mov
xlat
test
cltd
fmull
xor
insl
popf
mov
out
or
inc
mul
jecxz
cltd
pop
xchg
sbb
mov
nop
icebp
cmp
loope
pop
out
or
rclb
and
outsb
xor
rolb
fadd
cmp
add
test
push
fsts
inc
jns
xor
and
dec
in
movsb
jbe
jne
xchg
lods
scas
fnstenv
adc
jb
call
dec
xchg
xchg
inc
ret
and
jmp
pop
dec
das
aad
adc
mov
test
movsl
mov
dec
rolb
ret
in
pop
in
xlat
cmp
xchg
popf
cmp
mov
fnstcw
lods
idivl
fnstenv
pop
xchg
scas
mov
inc
scas
push
loopne
mov
test
jle
dec
lret
call
data16
and
or
cld
imul
cmp
xor
arpl
lock
test
inc
stos
arpl
sub
push
or
nop
sbb
daa
test
popf
hlt
xor
cltd
xor
pop
mov
lahf
mov
pushf
or
popf
gs
out
mov
and
push
adc
push
jns
push
and
pop
add
cltd
cmp
and
add
cmp
cli
les
daa
mov
insb
daa
inc
outsl
jae
call
jb
push
jge
dec
cmp
fwait
mov
push
sbb
lea
xorps
mov
fs
faddl
outsb
outsb
xchg
movsl
andl
out
call
mov
mov
shll
pop
imul
jnp
and
hlt
mov
subb
fnstcw
out
dec
ss
js
push
lcall
add
cld
jl
sub
xor
fcoms
fistpll
lods
push
push
add
cld
cld
pushl
loop
fiaddl
mov
pop
and
icebp
cmp
jmp
fwait
cld
xor
out
push
dec
rcrb
mov
xor
mov
or
jnp
xchg
xchg
jecxz
pop
sahf
fwait
inc
mov
in
add
mov
addb
cmp
mov
sub
fchs
daa
std
repnz
nop
xchg
jmp
mov
stc
insb
pop
fs
or
iret
jp
pushf
mov
xor
rclb
popa
mov
or
mov
fldcw
hlt
repz
lock
dec
jne
inc
mov
and
lret
add
lock
in
push
cld
adc
ds
jne
loopne
sbb
push
jge
in
sbb
mov
add
adc
cmp
push
inc
mov
push
leave
fsubrl
xchg
adc
mov
enter
pop
imul
stc
in
jge
push
inc
and
mov
popa
adc
mov
aaa
mov
sti
out
mov
sub
icebp
movsb
jge
jo
cld
fstpl
mov
insb
mov
jle
inc
jno
shlb
cmova
push
mov
jmp
aaa
push
test
mov
nop
xchg
stos
or
mov
mov
insb
mov
jae
in
test
mov
gs
stc
rcrb
jge
lahf
dec
ljmp
std
xor
lahf
and
dec
xlat
iret
shrl
inc
cmp
sub
std
pop
in
jmp
inc
fbstp
add
push
cs
jge
es
dec
gs
jl
das
dec
js
notb
fdivrs
xorb
pop
lret
clc
sahf
call
repz
xchg
mov
dec
aas
fnstsw
cs
bound
ja
sbb
addr16
movsl
and
sub
imul
sbb
xor
push
mov
sbb
pop
pushf
push
xchg
mov
fcompl
pushf
in
mov
and
jecxz
jl
or
mov
xor
repz
sub
cmp
and
pop
add
xor
int3
in
lret
in
sbb
stc
fs
mov
insb
mov
mov
cmc
stc
test
push
mov
fsubr
or
adc
sub
mov
push
push
and
insl
lds
aad
push
inc
push
daa
or
cmc
and
cmp
insb
in
dec
jns
aad
ss
rcrl
popf
xor
lret
cmpsl
aaa
rolb
int
pushf
inc
cs
test
mov
sub
xlat
sub
subb
imul
mov
arpl
ja
and
xor
fucomip
clc
jno
loopne
dec
mov
push
into
ljmpw
cmc
or
sarl
or
jo
dec
push
sbb
xor
inc
mov
or
xor
cmp
inc
jmp
push
js
cld
cmp
ret
xor
adc
xor
adc
out
outsb
std
inc
pop
xchg
fsubrl
jb
inc
mov
mov
and
jg
xor
aas
in
xorl
dec
je
lds
scas
rsqrtps
jb
fwait
xchg
xchg
aad
stos
jmp
add
mov
shrl
xor
sbb
add
jbe
cmp
jle
xor
xor
mov
out
xchg
xor
fsts
pushl
and
aad
lahf
fmuls
xchg
dec
inc
scas
push
add
push
jmp
inc
dec
bound
sbb
sub
ret
stos
cmp
lret
movsb
fisubl
jle
jae
dec
ret
lods
pop
je
push
cmpsl
loopne
into
push
loope
pushf
mov
add
movsb
sbb
mov
sti
sub
clc
repz
scas
test
clc
in
lds
mov
mov
jmp
nop
fcmovne
mov
inc
dec
movsb
filds
and
cmpsb
dec
cmp
sbb
mov
jae
out
xchg
jmp
outsb
push
das
lock
pop
adc
jge
mov
pop
int
cmp
out
call
push
sti
or
mulb
dec
lods
loop
xchg
rclb
pop
mov
pop
xchg
cli
push
pop
xor
int
pop
jp
imul
dec
dec
frstor
in
pop
test
adc
xor
nop
out
cltd
sbb
xor
cmp
adc
mov
mov
movsl
insl
cmpsb
bts
scas
and
mov
aas
in
cltd
ret
popa
xchg
push
in
add
push
sbb
sub
test
mov
add
call
ret
add
pop
aaa
aad
lds
pop
out
mov
sbb
lock
cld
cwtl
ret
pop
push
sbb
pop
ds
outsl
sbb
jns
mov
dec
test
fcoms
cmp
jmp
push
xor
ds
jmp
push
lea
jb
xchg
arpl
ss
fs
jo
movsl
pusha
int
aam
fisubl
hlt
stos
xor
dec
stos
dec
jl
cmp
test
jne
outsl
and
mov
add
sahf
push
in
mov
fdiv
and
ljmp
clc
stos
xchg
mov
cmp
add
or
daa
jnp
push
add
leave
test
sub
stos
out
sbb
adc
lods
push
aad
mov
pop
outsb
cwtl
pop
outsb
dec
sbb
into
add
jns
push
mov
adc
xor
or
sub
bound
in
push
scas
popf
ret
or
cmpsb
add
cld
xor
sbb
and
sub
in
loopne
dec
fidivl
push
push
outsb
mov
mov
xor
data16
sub
lock
jg
icebp
leave
aaa
jno
iret
fisubrl
das
jns
das
sub
add
loop
sbb
sub
xchg
xchg
jbe
test
xchg
aam
push
jmp
mov
loop
jp
xor
icebp
jmp
jb
mov
mov
pop
ds
xorb
mov
mov
cmp
add
lock
sbb
or
add
and
mov
lret
inc
push
inc
test
jle
xchg
pop
push
push
push
jge
or
push
sti
mov
sub
int3
sub
jp
cs
push
in
and
out
jnp
adc
xchg
inc
das
fs
sub
pushw
dec
imul
mov
movsb
test
xchg
in
or
fnstsw
push
fldt
mov
imul
add
xlat
xor
push
in
push
jp
outsb
ret
nop
mov
cmpsb
mov
and
pop
sbbl
adc
cwtl
adc
stc
fmull
push
icebp
in
out
aam
jno
pop
in
inc
test
jb
dec
push
dec
hlt
sub
and
xlat
jle
dec
loope
jae
xchg
cld
xor
shrl
imul
rcrb
push
mov
xchg
and
scas
into
sub
pop
aas
negl
jb
lock
xchg
es
xchg
mov
adc
mov
fs
and
rcrl
aam
stc
pop
fwait
cmp
jbe
popl
mov
add
add
and
jno
int3
into
rolb
aam
out
outsl
dec
inc
aam
out
xchg
cmp
inc
or
cmp
decb
int
xchg
jge
mov
lods
shll
xor
or
pop
lea
fnsave
bound
negb
and
fildll
and
icebp
rclb
cmp
ds
out
movl
push
mov
pop
adc
add
dec
cmp
push
dec
int
sbb
aas
mov
popf
sbb
sub
sbbb
jnp
das
aam
xor
lret
pop
in
mov
jnp
adc
aaa
mov
mov
jo
or
lock
dec
sbb
dec
repz
rolb
scas
in
inc
push
in
imul
sub
test
xchg
xor
pop
inc
dec
xchg
ss
sbb
cmp
shll
mov
cmp
or
adcl
outsb
scas
lock
cmpsl
out
jo
adc
adc
mov
jbe
fwait
xchg
add
inc
mov
sbb
outsb
xlat
iret
dec
adc
sbb
aaa
xchg
push
mov
insb
rclb
mov
scas
arpl
mov
lods
xchg
fisttps
sbb
xor
mov
bnd
rcrl
sbb
fs
inc
mov
fcmovne
daa
aaa
rorl
aas
push
fs
mov
and
test
pop
insl
adc
push
push
aaa
nop
arpl
cltd
scas
lods
gs
hlt
repnz
dec
inc
mov
or
lods
xor
sbb
push
mov
int3
mov
mov
sbb
fcmovu
call
mov
adc
orb
adc
imul
jns
or
aaa
ss
xchg
addr16
repnz
jo
int
fmull
or
cmp
pop
xor
jne
mov
je
test
xor
scas
sbb
pop
mov
inc
mov
out
dec
sbb
es
gs
dec
jnp
cmp
add
int
xor
pop
test
je
cli
push
sbb
sbb
xchg
pop
cmpsl
lret
pop
std
or
pop
ficoms
fucom
jecxz
jno
xor
fmull
sub
push
in
aad
imul
adc
and
mov
sub
mov
imulb
mov
jp
xchg
xor
push
adc
jmp
xor
push
in
notl
and
pop
lods
sub
inc
ret
loopne
cltd
addr16
rorl
call
pusha
imul
jb
xchg
out
fidivs
in
faddl
ret
cmp
xor
xchg
data16
and
outsb
or
and
sbb
sub
fwait
in
cltd
jo
fwait
push
testb
bound
lds
jle
adc
push
mov
cld
daa
js
out
xor
jge
jnp
repnz
loop
jecxz
push
mov
sub
xchg
std
mov
jmp
cmpl
scas
in
ljmp
add
andb
pushf
aam
aad
iret
iret
iret
jns
daa
mov
pushf
aad
jle
fst
xchg
sub
nop
popf
mov
leave
push
mov
sub
repnz
test
adcb
or
imul
mov
aaa
lret
or
jbe
add
sbb
mov
pop
loop
imull
das
mov
add
cli
aam
std
pop
fisttpl
xor
cli
jg
gs
mov
push
fs
mov
ret
or
loopne
les
sub
sbb
xor
je
mov
cmp
add
sub
aam
add
dec
dec
test
rcr
scas
xor
ja
xchg
jg
cmovs
inc
icebp
inc
lea
adc
push
das
inc
iret
stos
bound
add
arpl
int3
movsb
mov
jns
and
push
lcall
iret
into
fcom
scas
aas
sbb
hlt
aam
outsl
pop
pop
je
adc
push
cmp
daa
cltd
jecxz
movlps
pop
data16
inc
inc
pop
out
dec
mov
lret
sbb
push
lahf
mov
orl
cmpsl
out
loop
loopne
aaa
mov
push
stos
arpl
push
bound
int
or
jno
int3
mov
or
call
add
xchg
popf
mov
or
xchg
push
addr16
jae
push
sub
mov
loopne
mov
cmp
ja
mov
dec
add
in
cmpl
inc
imulb
ret
aas
shlb
push
mov
mov
and
sbb
xor
xchg
stc
push
xchg
test
insl
stos
pop
cmc
rol
bound
lret
test
popf
lea
adc
fists
xchg
rep
mov
les
mov
inc
mov
popa
dec
lcall
jp
cmp
mov
test
pop
cmp
mov
ret
dec
mov
add
and
pushl
rol
mov
push
lea
cmp
and
sub
ljmp
sbb
adcl
inc
mov
sbb
mov
mov
sub
cmp
adc
dec
cli
pop
sub
or
mov
ljmp
aas
sbb
cld
fldl
jnp
or
pop
in
loopne
ds
cmp
push
sahf
test
inc
cmp
loopne
je
aas
push
mov
dec
ret
or
add
mov
shrb
jmp
jo
and
mov
test
add
cmpsl
fchs
jbe
mov
or
frstor
pushf
pop
inc
fimull
sahf
fnstcw
test
sbb
call
add
jno
lcall
imul
sub
push
cli
leave
inc
lcall
enter
cmp
mov
divl
sub
nop
cmpsb
xorl
jbe
stos
jmp
and
ljmp
sahf
jae
jae
fsub
xor
sbb
fwait
sbb
cwtl
mov
jae
mov
clc
sbb
mov
pop
out
ficompl
lret
mull
pusha
pop
pop
add
xlat
into
pop
ret
andb
inc
mov
sbb
les
mov
decl
test
or
pop
lea
ss
sub
adc
inc
xor
popa
sbb
or
xor
add
mov
push
lcall
aad
mov
jbe
pop
sarl
adc
jns
xlat
in
jno
pop
pop
dec
scas
add
cmp
imull
or
inc
fwait
push
arpl
repnz
sbb
pop
and
daa
popf
ja
or
and
pop
imul
jae
cmp
dec
fdivrl
pop
jmp
icebp
out
jmp
inc
mov
fs
cmpsb
lcall
push
ja
shll
inc
in
dec
pusha
cmp
cmpsb
adcb
jo
mov
test
jecxz
sub
jae
leave
add
mov
cmc
cmp
inc
in
and
pop
dec
dec
cmpsl
cmc
cmp
shll
jecxz
mov
out
repz
xchg
cs
pop
call
inc
std
ja
je
pop
clc
les
mov
pop
add
push
dec
sarl
jns
pop
jmp
rcll
imulb
es
cwtl
ret
or
lods
push
dec
fstp
lock
xor
loopne
fsts
dec
and
enter
xor
lahf
ja
jg
jae
enter
rclb
mov
in
js
push
test
std
popa
ja,pt
push
enter
les
lahf
cmpsl
movsl
or
cmpsb
call
mov
ja
jnp
jnp
insl
dec
xlat
adc
jbe
insb
subl
lret
and
je
repz
int
std
mov
test
or
fdivl
popf
jmp
cmp
or
out
cmp
sub
jl
sbb
mov
lahf
ds
mull
jecxz
stc
cmpsb
cmp
out
jle
imul
test
das
ja
addr16
test
ror
out
lret
bound
in
mov
out
xchg
add
sbb
pop
cltd
mov
cli
inc
jae
nop
adc
popa
or
adc
mov
and
sarl
pop
jmp
xor
je
lea
sbb
jp
out
cli
daa
lcall
sbb
outsl
push
jne
fmull
sbb
fldl
sub
pusha
pop
pop
test
xchg
or
mov
gs
push
stc
arpl
pcmpeqw
adc
sbb
cmc
push
decl
sbbl
pop
mov
xchg
mov
and
std
pop
js
adc
inc
push
xchg
loopne
movsb
xchg
mov
adc
sbb
outsb
inc
push
and
add
mov
jecxz
push
outsb
ret
pop
jmp
fidivrl
clc
test
out
cmp
cli
pusha
stos
push
data16
and
push
fbstp
repz
sub
shll
add
and
inc
andl
and
add
add
aad
sbb
leave
mov
mov
cwtl
loopne
imul
das
ja
adc
jl
or
adc
in
jne
cmp
push
jnp
push
scas
mov
ljmp
jae
rcl
xchg
sarb
shr
jb
sti
mov
mov
xor
mov
mov
pop
adc
inc
add
aad
dec
push
sub
and
lea
push
dec
push
sahf
add
sbb
xchg
xchg
cwtl
sti
addb
push
mov
and
lods
mov
cmp
lea
enter
loopne
pop
inc
repz
xor
out
lds
inc
aas
mov
shr
out
jl
out
jns
repnz
gs
inc
jns
fxtract
push
test
jb
inc
je
mov
outsb
das
cmp
sub
push
test
jmp
movsb
test
sbb
out
dec
ret
jge
icebp
xchg
pop
sub
fsubrp
sub
outsb
ljmp
icebp
inc
hlt
mov
pop
movsl
add
shrb
mov
dec
add
xchg
xchg
cmpsl
sbb
mov
push
mov
adc
ret
iret
lahf
mov
dec
sbb
orl
cmpb
cmp
vmovups
mov
add
mov
dec
mov
imul
hlt
in
xchg
pushw
add
andb
aam
stc
xor
in
sbb
rorl
jg
ja
mov
pop
and
shrd
cmp
ds
shll
sbb
pop
or
jne
scas
adc
lret
call
cmpsb
adc
add
sub
stos
not
jb
and
sbb
jmp
iret
xlat
into
test
insb
shll
push
gs
rclb
pushf
sti
jg
outsl
sbb
jns
cmpsl
or
hlt
mov
sahf
lock
mov
jns
cltd
mov
adc
jmp
das
rcrb
dec
mov
jbe
xlat
add
push
adc
out
loop
je
pop
bound
dec
lcall
inc
pop
pushf
clc
xchg
and
or
sbb
out
bound
cmp
push
push
cmp
dec
arpl
push
popa
repz
push
or
jnp
pop
leave
inc
add
mov
push
loopne
out
xchg
inc
push
mov
adc
mul
ret
jne
mov
xchg
test
stos
mov
inc
insb
push
sbb
or
add
rcl
mov
sbb
xchg
dec
insl
cs
mov
adc
xor
push
cs
jns
lods
sbb
insl
cmpsb
push
stc
bound
je
xchg
push
pop
dec
xchg
inc
or
subb
mov
sub
scas
enter
sbb
aad
push
iret
mov
pop
clc
mov
js
jno
push
pop
dec
cmp
pop
xor
stc
sub
addr16
sbb
fstl
iret
lds
add
std
into
cmp
mov
jns
in
adc
and
xor
lcall
lds
fistpl
adc
sahf
aad
repnz
decb
imul
repnz
call
ret
push
je
jno
leave
add
xor
inc
push
jl
inc
xor
prefetcht2
push
cs
sbb
es
sub
lds
adc
cwtl
insb
jb
pop
subb
sti
add
sub
jl
mov
icebp
js
stos
je
jne
xor
adc
xchg
pop
popa
outsl
aaa
xchg
push
push
sub
rcr
inc
xchg
ficoms
xor
add
popf
push
mov
jp
cli
jecxz
sbbb
nop
mov
aam
daa
add
jg
sub
add
mov
out
fists
adcl
or
daa
test
cs
std
jae
xchg
lods
fnstenv
je
xchg
or
ret
repnz
xor
jp
dec
pop
or
lcall
sbb
js
cmpsl
stc
xlat
jmp
sbb
ds
or
xchg
or
xor
bndstx
pop
fildl
sub
repz
cmp
rcrl
mov
push
popl
adc
ja
cmp
lock
test
adc
inc
pop
mov
les
jbe
sbb
adc
pop
iret
or
testb
hlt
add
mov
push
sbb
mov
add
push
sub
mov
jge
leave
hlt
ret
ljmp
scas
mov
pop
dec
int
mov
xor
inc
jecxz
dec
fsubrs
and
cld
add
sub
fists
notl
ret
sub
inc
jo
ss
sti
or
outsb
pop
ss
lahf
mov
lret
movsl
das
mov
jp
jnp,pt
loope
popf
pushf
add
icebp
sbb
popf
push
xor
xor
mov
fcmovu
stos
dec
into
push
cmp
or
cld
mov
dec
jne
leave
pusha
jne
lds
mov
jmp
lock
xor
sub
shll
fsts
cmp
xor
pop
xchg
imul
aad
inc
nop
addl
movsl
xchg
rcll
push
xchg
or
mov
xchg
or
movsl
scas
movsl
fistpl
idiv
mov
lods
dec
int
call
lcall
mov
mov
and
add
sbb
xor
or
mov
xor
and
cmp
cmp
in
insl
shrb
fsubrl
pusha
lock
xor
cmp
xchg
out
repz
rcrl
ret
push
push
out
mov
daa
xor
fwait
daa
sbb
sbb
insb
inc
popa
pop
sbbb
sarb
aas
daa
aam
mov
pop
fisubs
xchg
cmp
sbb
ds
pushf
inc
pop
add
negl
sbb
aad
into
sbb
pushl
repz
cwtl
push
inc
ret
add
insl
out
xlat
xchg
ja
repz
mov
pushf
jb
cs
push
addr16
adc
inc
dec
inc
rolb
pop
add
fcmovnb
das
gs
push
mov
jg
push
fsubrl
cmp
ss
push
pop
pop
mov
fmuls
clc
lods
out
xchg
inc
scas
scas
jno
pop
add
or
mov
pop
cmp
xor
int3
mov
mov
in
lea
add
ja
mov
into
or
and
enter
jns
cmp
or
stc
xchg
lcall
push
sbb
fcoms
je
pop
ficoms
adc
inc
or
rorl
mov
adc
or
ret
mov
in
xor
std
fdivr
int3
adc
in
cltd
jnp
cmp
outsl
roll
pop
push
fcompl
test
mov
pop
clc
ljmp
sbb
aas
pusha
aaa
fstpl
xor
shrb
sbb
popf
sub
lret
adc
push
lods
mov
dec
push
jge
mov
or
xchg
adc
fs
push
js
sbb
sub
adc
stc
jbe
jne
inc
or
sub
mov
insl
sbb
loope
xchg
dec
icebp
scas
dec
loope
lods
inc
fsubrp
in
xchg
sbb
xchg
adcb
cmpsb
jo
or
rcll
in
mov
inc
push
mov
sbb
mov
rorl
pop
mov
inc
fildl
fs
dec
orl
push
xor
mov
mov
into
addr16
fbld
cmp
jnp
dec
push
mov
dec
push
in
mov
notl
push
daa
xor
inc
push
push
sbb
loop
pushf
xor
in
jmp
xlat
adc
pop
add
das
lret
scas
jl
addb
lret
xor
cmc
push
in
xchg
mov
pop
hlt
mov
adc
repz
jne
stc
sub
jl
jg
cmp
stc
mov
out
sub
xor
or
daa
and
jne
arpl
pop
daa
sbb
ss
insb
mov
mov
cltd
popa
jbe
adc
inc
fistl
and
ds
xor
push
out
ja
es
rcrb
test
cmp
fucom
mov
adc
and
cmc
ret
loop
adc
scas
movsb
mov
cmp
les
adc
dec
mov
adc
lahf
jbe
xor
and
mov
iret
and
sbb
fbld
mov
rorl
xchg
rcll
mov
xor
inc
pop
jecxz
rclb
bound
inc
es
cmp
mov
ret
jns
push
xor
mov
ds
test
into
in
fcoms
or
sub
push
loopne
es
inc
mov
je
in
mov
inc
sub
or
jbe
cwtl
cmp
xor
pushf
sub
js
sub
int
in
fadd
inc
and
ret
loope
imul
sbb
ds
xchg
mov
int3
xor
mov
test
lcall
je
ss
push
jo
shl
jecxz
fmuls
mov
ret
ds
xor
add
ja
imul
nop
or
xchg
nop
lea
mov
lea
gs
jl
ret
jg
mov
mov
lret
lahf
pop
cmp
pop
fisubs
scas
lret
and
and
sub
sbb
daa
inc
sahf
pop
dec
xchg
out
pop
push
aam
pop
pushf
nop
or
xor
int3
adc
cmpsb
dec
xchg
ror
outsl
sbb
insl
inc
xchg
ret
lcall
mov
or
fstps
adc
sbb
cmpsl
xchg
test
lods
add
icebp
sub
lods
xchg
jno
mov
push
pop
cli
cmc
sarb
adc
pop
jb
sub
loopne
inc
div
sbb
ret
sub
pop
es
rcr
outsl
jno
cmp
fs
test
xchg
call
mov
xor
pop
popf
je
shrl
imul
jg
pop
mov
cs
repz
and
fisubrs
adc
push
or
fsubp
or
sub
xor
mov
mov
loopne
push
xor
sub
aam
pop
pop
push
cmp
mov
daa
jae
and
xor
scas
lcall
stos
xor
fsqrt
jb
insl
lcall
push
dec
mov
mov
sbb
fdivrp
repnz
xor
adc
ret
sub
das
pop
inc
fisttpll
mov
sub
stos
loopne
jl
inc
or
and
mov
adc
rcl
mov
mov
cwtl
int
push
xchg
or
out
ficoml
sub
lock
and
lahf
push
pushf
aas
pushw
loope
hlt
jbe
les
or
xlat
adc
pop
es
mov
rcrl
subl
imul
sub
jae
addr16
enter
jae
cmpsb
clc
pop
jb
push
sub
xor
out
rolb
iret
mov
pusha
push
clc
idivl
je
popa
dec
mov
je
mov
dec
stos
xor
xchg
ffreep
mov
inc
andl
and
shll
sbb
dec
dec
push
popf
jae
add
js
xor
ljmp
sub
lea
add
add
loope
cltd
mov
cli
sub
outsb
dec
adc
cltd
dec
ljmp
sbb
decl
insl
cmp
les
lods
out
sub
pop
mov
mov
pop
lahf
mov
push
inc
lock
iret
lret
aas
lret
push
scas
mulb
into
scas
xchg
mov
cmpsb
or
sbb
mov
jnp
cltd
xor
inc
jno
sbb
pop
or
inc
outsb
or
or
es
push
push
xchg
or
cli
xchg
call
aas
dec
arpl
sub
push
addr16
mov
push
rclb
cmp
fsubrl
push
mov
push
lret
div
movsl
rolb
dec
sub
mov
inc
fstpl
adc
cs
insl
mov
and
add
fbstp
pop
inc
or
lods
and
orl
cltd
fsubr
and
xchg
lcall
mov
cld
int3
outsl
fnstsw
insl
push
adc
dec
movq
sarl
mov
aas
dec
inc
pop
add
mov
out
xor
inc
inc
inc
mov
xor
lahf
jmp
lods
jmp
add
cli
leave
cmc
mov
mov
push
dec
lret
xchg
adc
sbb
add
sbb
and
push
inc
lods
xchg
push
adc
dec
push
cwtl
movsb
add
out
movsb
mov
add
xor
inc
ljmp
adc
out
mov
rorb
insl
xchg
ja
cli
out
subl
cmc
movsl
push
cmp
jl
sbb
gs
mov
imul
inc
jb
je
adc
std
pop
adc
or
xor
pop
push
or
in
inc
test
insb
movsl
or
mov
cltd
adc
loope
push
push
call
mov
andb
ja
dec
mov
xor
and
fidivs
xchg
inc
flds
mov
aas
stos
out
fisttps
xor
push
mov
xlat
je
dec
das
addb
or
cs
push
ret
inc
mov
mov
aad
sti
mov
dec
or
movsb
pop
mov
xor
test
inc
or
iret
pop
mov
sub
call
jnp
shrb
imul
sbb
or
cli
pop
cmp
popa
xchg
das
fadd
jns
mov
in
adcl
loop
stos
mov
sti
lahf
jg
pop
pop
out
cmp
xchg
xlat
int3
cmp
ret
ror
pusha
fwait
icebp
rcrl
push
dec
mov
xor
jecxz
inc
inc
clc
dec
xchg
adc
add
sub
or
int3
push
sti
lcall
xchg
jmp
lods
dec
adc
movsb
xchg
fmull
stos
aam
movl
aaa
out
dec
jecxz
outsb
stos
int3
enter
adc
test
gs
mov
in
or
clc
ss
shl
push
mov
dec
xchg
adc
aam
cmpsb
jb
pop
mov
notb
jle
jbe
shr
iret
sub
push
cmc
push
sub
nop
pop
aad
fwait
bound
and
lods
adc
shrl
stc
rcll
inc
dec
das
ffreep
ret
mov
roll
mov
push
rcrl
sbb
xor
shr
push
dec
imul
jmp
sbb
frstor
mov
test
cmp
xor
loopne
ret
push
enter
ljmp
mov
out
mov
pop
cmp
sub
mov
jns
movsl
arpl
mov
ss
push
pop
xor
lret
or
mov
xor
shr
xchg
mov
pop
roll
insb
mov
xor
sub
and
sbb
mov
stos
jno
sub
loop
fs
repz
in
shlb
xor
xchg
push
rorl
lods
add
add
dec
xor
scas
inc
jp
aas
lods
insl
out
test
jge
sbb
test
jge
sbbl
or
ss
jno
faddl
pop
in
mov
out
mov
or
aad
push
xchg
inc
into
das
lret
jne
fdivrs
pushf
xor
xlat
lcall
adc
loopne
sub
ret
or
out
mov
orb
cmc
add
jge
cmp
dec
stos
ffree
in
dec
shrb
cltd
mov
shlb
fidivrs
cmc
scas
push
fcmovnb
adc
lret
jmp
shr
sahf
or
jbe
fdiv
sub
in
or
push
jmp
mov
jb
test
arpl
push
jae
xor
rorb
shll
sbbl
andb
mov
ret
push
jnp
mov
cli
xchg
leave
inc
sbb
cmc
or
push
mov
movsl
dec
es
jecxz
mov
mov
mov
sbb
sbbb
inc
push
es
adc
loope
xchg
fadds
add
xchg
pop
test
ret
repnz
pop
sub
push
mov
fsubrs
pop
mov
fdivl
test
ss
in
pop
inc
adc
xor
int
mov
xchg
aaa
std
dec
es
xchg
fisubs
mov
lret
mov
nop
dec
mov
mov
testl
mov
test
addr16
cwtl
and
mov
pop
sbb
scas
aam
push
add
jne
in
ret
sub
test
cmpsl
out
push
cmpsl
movsl
adc
cmp
ret
loope
jb
sbb
fcmovbe
fsubs
push
arpl
xchg
jecxz
loop
les
sbb
movsb
add
movsl
jo
test
stc
incl
mov
movsl
hlt
ja
ds
xchg
fwait
dec
sbb
outsl
xchg
jp
ss
stos
xchg
stos
nop
xchg
dec
cwtl
sahf
mov
inc
adc
adc
cmp
inc
lods
push
add
lock
loope
mov
iret
mov
sbb
jo
dec
push
push
out
or
in
cmp
pop
push
imul
add
test
das
or
push
mov
adc
ret
addb
and
add
fadds
mov
pop
sar
jl
lahf
repnz
mov
lds
loope
gs
cmp
roll
outsb
stos
mov
inc
lods
popf
pusha
or
mov
std
pop
or
jg
dec
cmp
push
pusha
movsl
cwtl
mov
fcmovu
repz
add
in
inc
call
push
add
nop
mov
sub
pop
pop
and
xchg
fidivl
mov
xchg
sbb
in
pop
mov
pop
sarb
jae
sbbl
shll
sar
popa
aaa
lahf
adc
or
shlb
cmc
out
in
mov
sub
sub
sub
cmp
lods
insl
push
mov
add
xchg
mov
sub
std
mov
pop
pop
jl
loopne
lds
in
xor
arpl
xchg
pop
sub
lahf
pop
pop
cmc
into
stos
push
mov
cli
fnstcw
loop
mov
movsl
cwtl
sar
out
and
and
out
mov
push
sub
mov
push
insl
mov
mov
mov
cmp
ret
test
inc
cmp
push
repnz
outsb
mov
rcl
mov
mov
cmp
fildl
movsl
push
inc
pop
cmp
xor
jae
cmpsl
outsl
rcll
gs
test
mov
outsl
cmp
adc
inc
xor
scas
gs
movsl
and
movsb
mulb
sbb
int
fidivl
into
sbb
jbe
bound
shlb
in
idivb
adc
and
sbbl
inc
sbb
aaa
mov
or
ja
test
pop
rolb
in
add
aad
xchg
xchg
mov
fs
shlb
jne
fstl
sub
out
test
xorl
stos
cmp
enter
jmp
mov
movsl
dec
out
cwtl
scas
ljmp
lcall
pusha
add
stc
cmp
fstpt
xchg
mov
into
cmp
out
xchg
ss
nop
gs
fwait
mov
hlt
push
outsl
pop
fs
andb
mov
frstor
cltd
mov
idivb
cmp
ja
in
cmpb
cmp
ljmp
aam
mull
jnp
lcall
mov
dec
les
clc
mov
in
int3
loop
add
and
pop
and
push
and
and
inc
push
push
dec
pop
int
pop
jl
mov
cmp
lods
sub
dec
mov
sub
pop
inc
pop
stos
test
insl
mov
outsb
dec
pushf
je
int3
or
xchg
lret
pop
and
mov
les
mov
pop
jno
jne
inc
clc
xor
test
xchg
flds
rcll
jl
xor
pop
adc
cmp
gs
int
int
jno
jp
and
add
cmpsb
stc
mov
cmpsb
aam
in
xchg
jge
dec
cmp
jae
into
or
sti
adc
adc
or
xchg
xor
push
cmp
mov
lret
jge
ret
sub
test
pusha
jmp
and
or
lret
cwtl
and
dec
fistl
lret
fisttpl
bound
pusha
hlt
sbb
mull
add
call
push
dec
shlb
jg
jecxz
pusha
or
adcl
rol
mov
mov
jle
fsubrl
jp
dec
call
arpl
test
pop
sub
sbb
dec
repz
outsl
stos
jmpw
xor
pop
pop
ret
xor
push
push
iret
movsb
nop
xor
ds
ja
into
ja
nop
xor
aaa
jno
mov
jne
flds
mov
sarb
inc
cmp
outsl
clc
mov
out
das
sbb
jg
xlat
pusha
cli
mov
movsb
jne
push
cmpsl
clc
int
push
aad
mov
fisubrl
inc
add
fidivrs
test
cmp
fisubrs
push
jb
pushf
aaa
xchg
pop
cmp
jns
jae
mov
shlb
dec
into
push
pop
call
sbb
movsb
pushf
dec
xchg
sub
pop
and
pop
test
mov
fsubrl
rorl
mov
push
popf
sub
dec
cmp
and
shll
sub
sub
aad
popf
popw
cmp
sbb
iret
mov
loope
sub
cmp
rclb
sbb
mov
xchg
xchg
dec
add
push
imul
cmp
mov
pop
testl
sub
push
fdivs
stc
ljmp
pushf
lds
mov
and
aaa
xor
mov
aad
jge
push
push
add
jbe
mov
in
and
inc
push
cmp
jae
fistpl
rorb
dec
adc
fidivl
insb
xchg
mov
push
cmp
leave
test
in
mov
iret
leave
jmp
cmp
mov
jae
mov
jg
and
jle
addr16
cmpsl
fnstsw
leave
adcb
addl
int
test
cmp
pop
dec
push
mov
push
push
sbb
jno
mov
test
loop
out
int3
add
fiaddl
adc
push
cmp
cmp
out
jge
aas
or
ds
xor
leave
sub
jbe
rcrl
lret
lods
push
jmp
lcall
sbb
adc
cmp
imul
dec
jo
mov
subb
insb
in
das
jne
andl
fnstenv
dec
cmp
and
fists
push
stos
ds
les
cmp
push
sarl
dec
test
je
repz
or
mov
je
faddl
arpl
bound
xor
ljmp
das
mov
int
lret
je
pop
stc
dec
into
cltd
aas
test
insl
dec
xor
bound
fdivrs
jns
mov
jb
xchg
clc
test
out
in
les
pop
push
xlat
cld
xchg
and
pop
ret
push
loop
add
pop
cvttps2pi
dec
xchg
dec
inc
cmc
jp
aas
inc
pop
test
sbb
sub
add
xor
add
in
add
xor
movsl
rol
adc
push
jl
rcrb
or
xchg
sbb
push
shl
jl
or
jge
scas
out
jb
leave
sbb
adc
or
mov
lods
inc
mov
inc
jno
ja
rorb
outsb
lret
and
insb
ljmp
sbb
cmp
es
loop
inc
sarl
pop
jp
xor
out
mov
mov
dec
and
fwait
push
push
fistps
cltd
sbb
hlt
jns
pop
lret
fimuls
ja
xchg
jo
xchg
rcr
inc
and
and
fnstenv
pop
push
or
cmpsb
loope
push
xchg
addr16
imul
sub
pop
inc
ljmp
mov
xor
dec
movsl
and
in
ret
icebp
pop
mov
rcrl
pop
mov
add
mov
push
inc
insl
add
cmp
sbb
adc
ljmp
and
sbb
xchg
lods
cmp
js
punpckhbw
jl
mov
pop
jb
push
mov
out
jp
loop
adc
jg
pop
int3
xchg
xchg
xor
adcb
xchg
xchg
test
mov
cmpsb
xorl
cs
mov
fistpll
push
pop
push
loop
pop
lret
fucomp
push
clc
mov
mov
push
in
out
repnz
mov
btsl
xlat
pminub
lock
pop
add
push
pop
imul
mov
out
in
mov
xchg
out
and
jo
cmp
aaa
inc
orb
push
sbb
pop
add
mov
mov
cmp
xchg
fsubs
sbb
xchg
xchg
xchg
out
xlat
shlb
dec
xlat
xchg
leave
xor
xor
jle
jl
fadds
sbbb
xor
push
fmulp
adc
adc
shlb
movsb
sub
mov
js
sub
movl
sbb
adc
stc
jae
rorb
ljmp
aad
ljmp
stos
lret
incl
lret
or
mov
sbb
mov
lock
repz
inc
jb
dec
les
jne
fbstp
stos
sbb
ret
push
addr16
divb
jge
dec
popa
push
lahf
fwait
adc
xchg
and
jae
adc
movsb
lahf
mov
popl
xorb
xchg
test
lock
or
das
ljmp
cmp
adc
test
fcoml
cld
push
xchg
mov
insb
inc
adc
jmp
pop
push
add
imul
sbb
cmp
dec
mov
pop
jb
fcoms
mov
nop
negl
ja
xor
ret
dec
jbe
and
pop
mov
cmp
stos
sub
mov
jl
inc
mov
dec
iret
mov
ss
cli
cwtl
mov
std
mov
test
je
pusha
int
pusha
outsl
sbb
adc
or
pop
ljmp
xchg
adc
shrl
cmp
push
adc
out
push
test
ret
fldl
insl
repnz
inc
outsl
pop
push
out
jno
xor
jnp
mov
dec
pop
push
sub
arpl
lret
and
mov
int
pop
or
add
jg
bound
lea
sub
lds
sub
cld
repz
adc
push
or
outsb
mov
mov
fbstp
movsb
fcoml
lods
rol
loope
cmp
mov
popa
pop
mov
das
out
inc
insb
pop
dec
and
sahf
fs
or
cli
xchg
jb
and
loop
xlat
add
adc
test
sub
xchg
mov
nop
ja
pop
cmp
out
sub
insb
jl
adc
lea
and
cmp
xchg
push
push
push
ret
mov
js
jp
test
sub
mov
xchg
dec
outsl
jle
es
ljmp
lcall
cli
shlb
stos
dec
mov
ret
insb
rorl
inc
sbb
ds
mov
pop
enter
add
jns
lods
sti
subl
mov
icebp
cltd
mull
dec
lods
in
add
in
popf
pop
adc
jl
lahf
lahf
xchg
add
icebp
xchg
cmp
and
hlt
pop
or
data16
pop
push
int3
sub
lea
pop
mov
dec
add
les
rorl
es
cmp
shlb
bound
sarb
aas
mov
sahf
inc
xchg
mov
add
lock
add
das
aaa
fldcw
andb
in
loope
lret
data16
xchg
sub
mov
xchg
cs
into
push
pop
jns
jecxz
adc
xchg
jg
cmpsl
mov
adc
push
mov
inc
scas
int
leave
sub
dec
movsl
jecxz
dec
mov
fadds
jb
or
push
data16
adc
mov
stos
lds
ja
icebp
adc
or
loope
inc
mov
sbb
popf
dec
popa
sub
mov
jo
add
in
into
jl
add
daa
ret
pushf
adc
inc
mov
adc
jl
sahf
mov
repnz
inc
or
pop
inc
jle
insl
xchg
stos
push
lea
outsb
or
sahf
aam
lcall
cmp
mov
lcall
sbb
sub
add
fstpt
data16
dec
rcl
stos
mov
mov
sbb
aam
int3
out
cmpb
jb
arpl
sub
out
push
mov
push
in
lret
sbb
dec
les
pusha
jl
mov
sbb
jmp
out
jnp
cltd
dec
into
stc
mov
lcall
xchg
add
push
jg
fs
into
pushf
mov
ljmp
insl
mov
push
cmp
xchg
mov
cmp
xorb
es
cli
xchg
cltd
push
in
iret
not
push
mov
scas
jmp
inc
push
out
adc
scas
ret
sub
dec
add
mov
mov
jnp
das
sarl
cmp
stos
push
jnp
pop
lret
mov
pop
jae
mov
cltd
lods
xchg
push
xchg
std
sbb
xchg
mov
das
mov
mov
or
movsb
jge
je
ja
je
add
rep
push
int
pop
cmp
jo
lock
cs
addr16
inc
adc
fldl
xchg
inc
scas
fs
mov
add
mov
loop
sahf
leave
insb
mov
aad
iret
int3
mov
push
jae
adc
inc
popf
push
sbb
movsb
adc
cmpl
in
mov
jnp
cmp
bound
pusha
inc
in
xchg
sti
add
xchg
jne
decl
lcall
xlat
pusha
xchg
sub
int3
dec
movsb
push
dec
cltd
jge
or
push
pop
xchg
xchg
push
push
repz
and
xchg
mov
hlt
addl
mov
call
stc
and
mov
jmp
sub
fucomi
add
cmpsl
mov
pop
jp
jl
jecxz
insl
inc
push
push
dec
test
adc
loopne
cmpsb
or
test
ljmp
sub
pop
push
or
int
pop
out
stos
test
in
sbb
cld
leave
test
hlt
nop
subl
inc
movsl
dec
fyl2x
sub
js
and
xor
rcll
in
adc
cmp
and
add
cmpsb
mov
arpl
fadd
xlat
xchg
pop
cltd
inc
data16
aaa
es
jno
push
mov
sub
and
sub
jg
ljmp
ret
jb
enter
adcl
pop
mov
cmp
fisubrl
jnp
cmp
mov
adcl
push
rolb
shrl
mov
je
bound
ja
or
jecxz
mov
and
xchg
inc
out
mov
dec
mov
adc
jecxz
mov
jl
sbb
ja
scas
hlt
test
mov
bound
mov
sbb
cli
ljmp
lcall
pop
fxam
inc
adc
ja
call
cmp
pop
mov
ficomps
stos
notb
out
sub
std
push
and
sti
jo
mov
hlt
sbb
sub
mov
mov
xor
shlb
xchg
aam
dec
sub
cmc
adc
mov
jge
add
test
jmp
clc
out
push
ss
faddp
in
lods
test
pop
inc
in
lods
addb
pop
push
ret
mov
xchg
pop
loope
xor
push
outsl
rolb
rclb
mov
stos
mov
inc
out
mov
add
popf
scas
lret
mov
test
xchg
pop
test
cld
pop
std
push
jle
dec
mov
jge
hlt
loop
es
add
cld
bound
cmpsl
xor
js
mov
in
jp
dec
leave
iret
mov
and
gs
int3
cmp
sti
xchg
mov
pop
or
inc
push
add
pushf
mov
rorl
mov
mov
mov
push
or
je
sbb
pop
and
idivb
jp
lea
inc
xchg
repnz
mov
push
cmc
adc
inc
cld
int3
test
and
repnz
jbe
adc
imul
pop
pop
es
xchg
test
xchg
int3
sbbl
adc
aad
ja
insl
mov
mov
ja
stos
inc
push
inc
xchg
inc
test
rcrl
sahf
jmp
inc
pop
mov
cmc
jb
iret
mov
jno
cwtl
pop
inc
out
xlat
out
push
push
ret
fucomi
aaa
clc
gs
dec
fsubr
test
sbb
daa
pop
out
push
and
imul
jne
int3
enter
mov
les
rcl
pop
fcompl
cmpb
add
push
add
and
lock
out
xchg
dec
and
xor
std
xchg
cld
push
sbb
xchg
dec
enter
and
xor
cmpsl
ficomps
cltd
fs
adcb
inc
mov
xchg
sahf
popa
js
loop
out
mov
dec
popa
inc
dec
xchg
adc
enter
jne
sbb
xchg
mov
xchg
outsl
mov
xor
sahf
mov
mov
xor
fwait
sbbl
mov
pusha
jp
push
in
cmp
jl
sbb
cmpsb
lret
scas
je
mov
or
pushf
pop
js
lock
icebp
xor
stos
sti
sbb
pop
loopne
pop
fstpt
sbbb
hlt
xor
pop
xchg
pop
arpl
incl
lds
mov
pusha
addr16
rorl
jae
jb
sub
mov
shr
popf
stos
int3
out
lret
xor
push
jle
mov
mov
jae
stos
sbb
push
mov
das
fnop
movsb
add
cmpb
mov
lret
or
and
jo
push
sub
pop
ret
xchg
scas
das
xor
aam
and
rclb
lret
dec
inc
sub
jmp
dec
xchg
dec
mov
std
xchg
arpl
mov
jp
add
mov
stc
pushf
dec
ret
pop
fidivs
adc
lock
lods
push
pusha
rcl
mov
scas
xor
lds
pusha
cltd
mov
sbb
aam
sbb
mov
in
test
lds
mov
fldenv
mov
clc
insb
iret
imul
jg
xchg
cltd
adc
nop
dec
push
test
sti
mov
sub
out
movsb
jge
push
lods
insb
sbb
dec
lock
mov
adc
push
fstpt
jo
syscall
pop
or
hlt
jl
sub
jnp
mov
scas
pop
add
popf
clc
out
mov
xchg
cmpb
mov
add
cmc
inc
stos
and
push
inc
leave
xor
jae
adcb
lcall
xorl
aam
jb
das
ljmp
adc
jnp
mov
data16
and
xchg
stc
xchg
mov
and
shr
and
mov
sbb
pusha
mov
ss
popf
je
mov
mov
mov
mov
sbb
testb
loope
inc
xchg
mov
in
stc
dec
sbb
aam
dec
test
stc
mov
or
sbb
inc
push
inc
nop
jmp
pop
fdivrl
cmpsb
adc
or
fsubrl
loopne
cmp
mov
je
mov
and
jns
mov
lods
or
ret
scas
in
movsl
pop
ss
lahf
xchg
gs
lods
xlat
jae
xchg
popf
xchg
movl
dec
xchg
mov
scas
dec
xchg
test
setne
sbb
imul
movsb
loop
push
ljmp
les
repz
movsl
pop
xchg
and
icebp
cs
popf
xor
ffree
mov
fsubl
mov
inc
lret
out
sbb
mov
or
cmp
fdivs
lahf
inc
mov
cmp
sbb
lods
int
pop
arpl
cmp
loopne
dec
sti
popf
movb
or
fldl
out
cmp
loope
sub
xlat
mov
fsubs
dec
cmpsb
xchg
or
out
jp
xlat
sub
aas
imul
movsb
xor
movsl
movsl
out
shrb
xor
mov
dec
loopne
and
scas
xor
xor
lock
inc
fidivrs
mov
leave
push
push
iret
sbb
movsl
and
jmp
cmpsb
jl
stc
fcoml
cmp
push
fbld
rolb
imul
imul
xlat
dec
shlb
xchg
aas
or
sbb
and
mov
inc
ss
pop
test
dec
jmp
mov
mov
testl
imul
mov
in
adc
push
cmp
bound
xchg
insb
dec
adc
mov
xchg
push
sbb
popf
imull
out
cmp
aaa
jns
sub
nop
or
jmp
int
jge
xchg
ficomps
xor
faddp
in
dec
insl
jb
add
add
dec
jo
dec
pusha
iret
pavgw
insl
enter
dec
mov
in
loope
cmpsl
popl
mov
in
scas
in
jle
sbb
iret
push
cld
cld
mov
and
mov
adc
scas
cmp
sarb
pop
sbb
jle
cmp
shll
mov
mov
aaa
rcll
mov
out
ja
mov
dec
ljmp
int3
pop
repnz
aam
push
pop
pop
lods
loop,pn
out
add
mov
xchg
sahf
cmp
xchg
fwait
xchg
fidivl
push
xor
sub
dec
adc
bound
sbb
das
push
adc
shrb
insl
dec
mov
push
cmpsb
shll
shl
iret
test
adc
scas
dec
push
int3
flds
inc
mov
pop
loop
addr16
insl
mov
dec
jo
and
sub
pop
mov
sub
loop
pop
push
mov
adcl
xor
lds
pop
les
lea
add
and
and
imul
icebp
mov
pushf
xchg
inc
call
push
scas
lret
push
ret
sub
mov
lea
or
ds
out
loop
mov
lods
add
cmp
ficompl
xor
adc
adcl
mov
cwtl
and
mov
loope
inc
fs
mov
pop
and
push
inc
stos
xor
outsl
in
pop
push
mov
fcmovu
dec
call
xor
inc
sarb
addr16
xchg
ret
pop
and
cmpsb
scas
insb
subl
insl
or
sarb
jp
test
stos
lcall
arpl
and
jg
js
aas
das
mov
jne
inc
mov
mov
add
fldenv
push
mov
xchg
inc
push
mov
lods
ss
add
stos
fucomi
pop
notl
insl
sub
dec
inc
scas
cmpsl
dec
cmp
pop
dec
pop
and
jb
xchg
int3
cmp
fists
data16
cmpsb
and
sub
or
or
pop
xorb
mov
insl
mov
pop
add
adc
test
dec
jle
push
scas
dec
jno
cmp
in
repnz
sub
test
adc
jp
test
and
sub
xchg
xchg
add
mov
mov
add
scas
cmp
jge
nop
sbb
outsl
add
lahf
cltd
movsl
xor
outsl
adc
fdivs
xor
aam
push
inc
imul
mov
bound
sahf
adc
ds
test
jo
or
push
xchg
out
xchg
test
push
lods
divb
imul
int
cmp
scas
xlat
mov
push
dec
mov
xor
imul
mov
xchg
cmp
lcall
add
repnz
data16
pusha
icebp
popa
sub
and
inc
jns
fsubl
pop
jns
jns
jge
mov
add
mov
add
mov
jp
jl
mov
in
dec
out
sub
stos
pop
inc
push
xor
sbb
inc
imul
jne
push
ja
or
push
xchg
pop
iret
xchg
es
sub
stos
ret
cld
xlat
shll
pop
loop
mov
repz
xor
add
pop
adc
cltd
dec
shll
shl
fdivrs
inc
popa
js
call
mov
or
ja
daa
cmc
gs
cmpsl
mov
cmpsl
notb
jp
adcb
dec
cmp
inc
fstp
sbb
fmuls
xchg
jo
loope
cmp
and
movsl
pop
popl
pop
mov
mov
dec
out
dec
out
fadd
movsb
in
mov
or
repz
mov
cltd
cltd
out
sbb
cltd
inc
pop
pop
je
nop
sti
fsubl
push
cli
push
pop
pop
xchg
sar
dec
sar
xchg
mov
pushf
mov
sub
push
pop
mov
add
jbe
add
lret
insb
fwait
xor
movsb
fisttps
push
in
pop
movsl
dec
xor
xor
sub
sbb
mov
idivb
push
nop
push
das
mov
push
clc
lret
jp
pop
pushf
sarl
fnsave
inc
mov
leave
jmp
lock
cltd
repz
jb
inc
rorl
lea
sub
xor
cld
fidivs
cmp
lret
sbb
popf
outsb
imul
orb
or
jno
jmp
pushf
adc
sbb
inc
pop
fistps
lea
mov
push
andb
and
pop
addr16
cmp
sub
cs
mov
push
mov
sbb
xor
lahf
repz
gs
xchg
dec
scas
sbb
cmc
xchg
pushf
jb
mov
push
pop
movsb
add
push
or
shll
mov
aam
adc
das
fwait
inc
les
cmpsl
dec
lock
jne
mov
shlb
repz
cvtps2pi
bound
cs
ss
xchg
pop
or
lock
lret
mov
aas
aas
cltd
push
imul
sti
fistl
outsb
icebp
stos
add
sub
jbe
sub
in
dec
jnp
popf
xor
in
rcl
cmp
inc
jne
and
dec
loop
sbb
fcomps
outsl
xchg
in
arpl
mov
out
adc
ss
add
stos
mov
cld
dec
sub
imul
movsb
inc
mov
push
dec
cwtl
jbe
mov
negl
xchg
rolb
js
mov
add
inc
gs
test
test
lahf
push
mov
int3
pop
pop
fsubrl
test
rcll
and
out
mov
sub
clc
xor
cmpsb
cltd
mov
mov
fwait
shrl
jbe
or
cwtl
movsl
push
sub
dec
pop
add
jb
scas
jno
lahf
aam
inc
lahf
mov
aaa
lods
lods
sub
jne
mov
jo
jp
ret
jb
repz
lods
fistl
loope
mov
sbb
rorb
xor
fbstp
sahf
add
iret
repz
sub
js
popf
mov
cmpb
fld
pop
push
jmp
or
stos
repnz
adc
in
dec
dec
push
jg
and
dec
xor
mov
lods
dec
insb
in
pop
cltd
push
call
in
mov
nop
sarl
les
inc
mov
sbb
mov
lcall
mov
daa
inc
test
sbb
jp
aad
inc
aad
out
jmp
loope
jl
inc
push
inc
mov
stos
pop
xchg
xchg
mov
in
xchg
popa
jae
inc
pop
daa
cmp
sbb
jge
push
mov
xor
mov
lcall
add
or
xor
sub
adc
les
or
rorb
xchg
cmp
cmp
fnstsw
lea
jb
cmpsb
or
pop
mov
popa
rolb
mov
bound
sub
adc
das
adc
scas
sub
sahf
mov
mul
or
ja
bound
arpl
lretw
sub
lods
or
scas
xchg
aad
cli
adc
cmp
lret
out
cmpsl
jae
push
ret
xchg
add
fwait
and
jmp
out
push
sbb
xchg
inc
and
test
ficoml
or
mov
jge
stc
adc
xchg
test
out
lods
add
pop
fs
mov
pushf
sarl
rclb
xor
hlt
dec
sub
out
xchg
es
push
dec
dec
imul
mov
push
pop
fsubrl
pop
imul
adc
lret
adc
int
loope
imul
out
fldcw
stos
imul
loop
xchg
cwtl
lea
lcall
mov
lds
mov
stc
jo
xor
inc
ljmp
xor
push
fwait
cmpsb
data16
mov
dec
pushf
mov
inc
inc
testl
das
mov
mov
iret
xor
addr16
jg
fs
dec
add
das
pop
adc
sub
addr16
gs
ds
jp
outsb
popa
push
in
inc
xchg
sub
push
imul
gs
in
dec
or
insb
inc
cmp
or
mov
or
or
out
mov
lods
divb
fimuls
pushf
pmaxsw
mov
pop
cmc
mov
jmp
mov
loope
xorb
enter
enter
sbb
int
loop
clc
or
pop
jo
push
sub
push
movsl
cld
cmpl
popf
jg
cltd
add
and
xchg
sbb
jge
fcompl
into
popa
adc
roll
mov
lret
loope
cltd
push
dec
dec
das
pop
shll
pop
mov
xor
sbb
or
cld
arpl
fstpt
xor
and
mov
repnz
xchg
lds
jbe
add
jo
call
mov
or
jns
movsb
cmp
les
es
mov
push
mulb
add
loope
enter
fcompl
out
xor
sub
nop
inc
push
cbtw
stc
add
adc
scas
xchg
decb
test
xlat
push
or
fcomp
xchg
loopne
iret
dec
lods
flds
xor
pop
and
push
mov
rcrl
cwtl
fs
dec
mov
rcll
xchg
lret
cmp
push
test
xor
and
adc
data16
push
scas
ret
xchg
adc
out
mov
sub
mov
popf
sub
dec
aad
add
insl
mov
div
negb
cli
pop
cwtl
cmpsb
lret
jo
xor
push
daa
stos
fadds
ds
movsl
inc
adc
and
push
je
push
or
inc
or
pop
ds
inc
xor
fisttps
adc
push
add
js
sub
lock
or
sub
test
aas
jmp
sub
pop
test
dec
and
mov
fs
mull
mov
push
jnp
mov
loope
lods
jp
xor
call
fcomps
jns
push
std
jge
jl
sub
xor
dec
fs
movsl
xchg
test
inc
int3
xor
jne
inc
xchg
push
cwtl
inc
pop
or
sbb
jg
cmpsb
pop
test
or
and
inc
stos
sbb
fisttpl
outsb
adc
cltd
xchg
imul
icebp
mov
mov
jo
xchg
adc
iret
enter
test
lcall
jp
mov
pushf
pop
testb
mov
mov
sub
jae
clc
xchg
enter
mov
stos
push
cmp
fs
add
push
das
cmp
xor
imul
mov
int
mov
dec
dec
jecxz
mov
cmpsl
sbb
imul
inc
aad
mov
xor
int
jae
or
mov
loopne
or
stc
out
xchg
ds
movsl
mov
outsl
jo
rcrl
and
jmp
ret
movsb
std
fptan
mov
jae
fistpll
orl
loopne
jmp
in
or
jb
movsb
or
mov
mov
loop
mov
mov
jle
sub
xchg
xchg
sbb
movsb
sahf
or
mov
imul
iret
dec
lock
int
fstpt
stos
gs
or
sub
adc
lret
mov
xlat
xchg
mov
adc
mov
cmp
js
repnz
sub
cwtl
pop
pop
lods
xchg
or
fisubs
pop
sahf
pusha
loop
push
push
dec
sbb
inc
test
add
xor
cmp
mov
jecxz
test
imul
in
scas
fsubl
call
push
das
fnstenv
je
fwait
adc
mov
xchg
pushf
xor
xchg
mov
sti
pop
jp
adc
repnz
ltr
mov
pop
shlb
ds
sub
addr16
pop
xchg
push
imul
jae,pt
mov
mov
movsb
cli
xchg
adc
shl
mov
ds
adc
cmp
lods
scas
sub
test
imul
sbb
mov
mov
mov
push
sbb
test
popf
imul
cmpsb
cmp
mov
add
cmpb
xor
outsb
adc
nop
xor
mov
jne
nop
out
xchg
pop
or
fcoms
push
mov
mul
jns
mov
adc
imul
sbb
push
pop
or
daa
push
add
add
jecxz
movsb
pop
mov
shrb
push
pop
jo
xchg
adc
push
mov
sub
lock
movsb
decl
add
leave
lods
xchg
sbb
mov
mov
pushf
mov
mov
fwait
mov
push
dec
mov
xchg
xor
cmpsl
sbb
mov
pushf
add
rcrl
ret
ds
sub
sbb
push
mov
inc
fs
sub
and
fldenv
flds
out
add
add
add
rolb
mov
cwtl
jnp
jmp
or
in
sbb
pop
push
das
push
cmp
cltd
jo
xor
imul
int3
arpl
int
sub
xchg
sbb
insb
inc
sahf
setge
mov
pop
push
bound
jecxz
pop
mov
sub
jnp
push
ds
es
mov
out
and
dec
mov
mov
cmpsl
addr16
ret
test
das
xor
pop
stos
xchg
nop
dec
mov
xchg
pop
and
push
sbb
gs
iret
pop
cli
ret
and
stos
out
shl
out
dec
sbb
rclb
or
aam
sbb
fucomp
add
push
and
fsubrs
mov
lret
repnz
ss
pop
pop
inc
cli
js
lret
jne
test
xchg
fistpll
adc
fldl
dec
inc
jge
xchg
out
jns
xor
pop
pop
in
and
je
leave
adcl
jge
push
sarb
notl
sti
mov
or
std
ljmp
stos
fnstcw
dec
sub
pop
test
pusha
mov
loopne
je
iret
in
add
bnd
mov
ror
das
xchg
sbb
cmp
aas
and
mov
rcll
dec
sbb
pmaxsw
dec
dec
and
movsl
cli
bound
repnz
test
cmp
or
imul
add
lret
clc
push
cmc
and
lods
or
in
jl
or
jae
mov
into
loopne
mov
roll
test
ja
mov
pop
sub
pop
rcrl
and
add
inc
loop
mov
adc
pop
subb
xlat
aas
mov
aaa
loope
call
rorl
fmul
scas
movsl
or
lods
dec
push
jl
test
outsl
push
and
and
jo
pop
lds
shld
subb
push
inc
fisubs
lods
mov
jnp
ret
popf
movb
pop
out
std
xchg
adc
pop
test
sub
loope
in
std
push
adc
add
adcl
aad
in
xor
add
imul
cmpsb
test
outsl
xchg
mov
lret
in
repz
xor
cmp
and
or
cwtd
add
and
sbb
stc
pop
mov
sub
scas
lea
loope
cmpsb
and
add
mov
or
insb
std
sub
xor
pushf
jae
pop
inc
mov
push
mov
add
mov
push
fwait
or
cli
inc
pushf
push
fnstenv
pushf
mov
mov
pop
inc
sub
sarl
jns
sbb
add
stos
inc
sbb
loopne
mov
loop
ja
and
rorl
cmpsb
imul
add
mov
movsl
popf
rcll
pop
fsubs
pop
xor
inc
mov
dec
xchg
mov
sbb
pop
xchg
inc
or
outsl
jne
cmp
sub
cs
nop
ja
idivb
daa
inc
stc
aad
xchg
jle
mov
sbb
adc
orw
inc
rcrl
or
mov
enter
and
in
xchg
test
scas
and
sbb
push
je
sbb
jae
sub
mov
mov
pop
rcrl
sbb
xor
xchg
mov
fisubs
jno
or
xor
lret
sbb
pop
icebp
push
mov
adcl
cld
lods
dec
fstpl
mov
mov
push
jb
testb
cmpsl
push
rcrl
xor
mov
shrl
fistps
xchg
inc
mov
mov
out
xchg
mov
or
fsts
xacquire
pop
leave
ffree
push
jno
data16
mov
popf
sbb
scas
mov
outsb
or
mov
les
test
push
ds
or
ds
jp
pop
cmp
and
lret
xchg
call
icebp
xchg
jecxz
pop
mov
pop
dec
or
pop
mov
xchg
fisttpll
xchg
and
adc
enter
inc
mov
fs
addr16
xchg
aad
jmp
pop
ja
jae
jbe
outsl
add
or
mov
div
sub
aad
icebp
fisttps
mov
add
cmpsl
test
cmpsb
pop
xlat
sbb
and
pop
mov
sub
data16
in
cmp
dec
cmp
xchg
test
shrb
out
mov
inc
pop
push
dec
inc
jp
in
inc
mov
fstpl
loope
fnclex
add
pop
rcl
xchg
jns
sub
jbe
add
and
int
mov
add
jnp
inc
hlt
outsl
les
jnp
mov
aad
xor
jae
xor
lret
call
cmp
lea
aad
pusha
dec
dec
nop
imul
adc
pop
scas
or
out
cmc
inc
or
push
push
lret
hlt
cmp
int3
sub
fidivrs
aas
lahf
sub
pop
push
and
lds
push
ja
inc
andb
xchg
stos
fisttpl
movsb
mov
lret
inc
rclb
jo
push
jmp
in
mov
cli
iret
xlat
jne
mov
xchg
mov
xor
adc
arpl
cmpsb
mov
inc
hlt
add
lahf
pop
push
out
pshufw
mov
mov
aad
movb
cmc
sub
inc
mov
inc
jo
jl
pop
sbb
je
dec
sub
push
test
push
inc
dec
out
mov
inc
and
jns
arpl
jp
gs
stos
out
pop
popf
fcmovbe
in
sbb
nop
xor
sbb
dec
and
push
mov
xor
pop
out
jo
xor
es
xor
sub
and
js
fucomp
cmp
ss
jbe
or
shrl
repnz
fisubs
cmp
ds
addr16
lcall
addr16
mov
lea
fxch
xor
push
lea
incb
mov
and
ja
inc
adc
inc
xor
xor
xchg
sub
outsl
pop
aam
pop
pop
shr
cmp
pusha
push
inc
mov
mov
dec
idiv
cmp
repnz
push
in
jg
jecxz
sub
jbe
pop
scas
cs
rclb
push
jnp,pt
xchg
cld
cwtl
dec
fwait
lea
inc
stos
dec
fadd
sub
adc
adc
inc
jecxz
cmp
cmp
xchg
jne
push
dec
movsl
jg
add
setns
or
or
lods
sahf
or
aad
mov
push
mov
fbld
aam
je
lret
add
sarb
vpmulhw
fisubs
scas
cmp
mov
xchg
pop
enter
xchg
inc
sub
sub
add
push
cltd
out
stos
mov
mov
xor
xchg
or
jne
aam
mov
mov
sub
lret
daa
lock
divl
dec
adc
pop
nop
or
sbb
lods
adcl
outsl
imulb
movsl
js
addr16
sub
cwtl
test
rolb
test
imul
pop
xchg
adcl
mov
push
gs
push
dec
jbe
and
jnp
jp
or
data16
test
or
sbb
cmp
adc
mov
push
sahf
cmp
stos
jecxz
cmp
jbe
sbb
scas
and
shlb
fbld
in
mov
sbb
mov
mov
in
mov
out
pusha
mov
push
cmp
lock
js
push
and
mov
xchg
stos
pop
ds
cld
pushf
cmp
mov
dec
pop
movsl
xchg
pop
in
test
lret
out
mov
fimull
dec
lahf
inc
lahf
test
cs
push
xor
dec
jge
mov
mov
adc
nopl
mov
cmp
ret
inc
or
xlat
add
testb
int
test
push
imul
jbe
ja
sbb
cmc
jae
or
cs
mov
out
aaa
pop
fwait
rorb
xchg
jnp
mov
repz
enter
and
fldl
iret
sbb
dec
cmp
je
imul
cmp
pop
aam
sbb
push
sub
dec
fisubs
jle
test
lods
outsl
fstps
jns
insb
mov
mov
pop
loop
mov
in
mov
lret
in
push
push
cld
push
push
mov
jecxz
jno
dec
sub
and
fst
pop
daa
cmpsb
test
xchg
pop
mov
je
or
dec
loop
fmuls
into
mov
scas
jo
jae
dec
xchg
mov
mov
adc
aas
push
repz
and
mov
push
inc
jl
ret
movsl
stc
nop
xchg
sbb
scas
dec
test
mul
inc
mov
xchg
loop
push
lods
adc
stc
push
pushl
push
jl
out
push
or
jp
jae
rolb
cmp
sub
sub
adc
mov
lods
push
sub
loope
and
push
aaa
ror
hlt
ret
push
and
and
loop
sbb
fistl
ret
sub
cmp
mov
sub
jo
loop
loop
pusha
xor
in
fiaddl
out
inc
loop
sbb
pushf
jnp
add
insb
hlt
xor
sbb
adc
cmp
push
test
sbb
data16
add
pop
dec
add
xchg
stc
xchg
add
cwtl
mov
sbb
xchg
xchg
faddl
inc
push
dec
pop
inc
sbb
jnp
inc
insb
cltd
or
xor
in
add
jle
stos
or
std
lods
andl
fsubr
in
adc
dec
idivb
push
xor
cmp
cmp
mov
sub
inc
push
add
mov
push
add
cmp
jnp
jle
adc
ja
cmpsb
repz
lods
mov
ss
sbb
cli
or
pop
push
stos
popl
ss
cmpsl
mov
pop
sbb
out
push
and
jmp
shrl
rorb
add
adc
nop
addr16
xor
and
stos
cmp
push
aam
add
insl
add
jp
add
cli
cmp
aas
out
std
test
fnstsw
jecxz
ret
sbb
mov
fwait
inc
lcall
adc
ss
and
push
mov
iret
sbb
inc
jecxz
adc
incb
repz
jecxz
js
data16
test
dec
ja
jnp
jl
and
jns
push
mov
pop
inc
adc
aaa
mov
movb
sti
dec
pop
mov
xor
fld
mov
and
fwait
pop
and
mov
cli
adc
andb
inc
mov
sub
adc
jno
setb
sbbl
in
movsl
nop
jl
push
repnz
roll
mov
and
pop
out
mov
dec
cmp
add
mov
ljmp
rorb
sub
cmpsl
or
es
add
jmp
jns
dec
push
sahf
scas
xor
arpl
test
dec
lock
fwait
cmpsb
lahf
in
adc
pop
cmpsb
dec
xor
shl
or
aaa
inc
leave
add
loop
orl
add
jge
add
pop
into
push
pop
out
lods
add
sub
movl
xchg
ret
xor
ret
adc
lods
sub
jbe
test
pop
cmp
ret
leave
push
push
mov
jmp
aaa
jo
cmp
lds
xor
push
lahf
shl
cmp
push
loop
scas
xor
push
aaa
inc
pushf
test
aad
repnz
push
in
pop
les
cmp
mov
daa
lret
sbb
dec
dec
lcall
into
push
and
and
fsubrp
jmp
imul
pop
push
dec
or
and
mov
icebp
in
mov
loop
clc
sub
scas
jge
dec
sub
pop
movsb
xor
adc
iret
lods
outsl
aam
push
cwtl
xlat
movsl
xchg
or
cltd
xor
popa
notb
xchg
pop
jns
xor
or
xor
outsb
arpl
stos
cltd
mov
sbb
in
jmp
je
pusha
mov
fistps
xor
cmc
sbbl
pop
push
adc
pop
movsl
adc
jbe
ret
xchg
mov
jnp
cmp
in
aam
stc
jge
pop
test
jbe
adc
ret
dec
push
notb
xchg
lret
jp
sub
outsl
pop
cmp
sbb
xchg
mov
outsl
xor
push
dec
pop
sahf
or
adc
jne
xor
movsb
pop
pop
push
push
add
shr
add
mov
ljmp
psllq
and
cmp
sub
aaa
jns
in
xchg
and
and
int3
pop
daa
imul
int3
test
test
jns
das
ljmp
sub
sbb
lret
faddl
and
cmp
mov
lea
xchg
test
dec
mov
in
loope
dec
inc
and
and
mov
mov
cmp
sbb
arpl
icebp
xor
leave
popa
jne
fs
push
push
mov
dec
rcrb
lret
inc
adc
xchg
notl
and
xor
ja
pop
test
xchg
sub
fwait
incl
mov
pop
pop
and
cmp
mov
mov
dec
push
mov
ljmp
stos
or
xchg
in
enter
std
into
fistl
ss
adcb
scas
add
push
pusha
cltd
sbb
leave
cmp
push
xchg
xchg
cmpsl
push
xchg
inc
jge
xchg
adc
sahf
ret
imul
fs
mov
sbb
fldl
fiaddl
jne
jg
ret
adc
imul
lcall
imul
lods
fcomps
dec
jae
ja
lahf
iret
jl
cmp
fmuls
mov
mov
mov
sbb
cwtl
and
add
ljmp
aam
lods
adc
pop
xor
mov
arpl
icebp
movsl
sub
push
in
xchg
xchg
xlat
data16
cli
lock
pusha
clc
mov
dec
ljmp
out
xchg
add
adc
xchg
and
lods
mov
sbb
out
leave
das
cmp
jecxz
cmc
shlb
mov
jle
mov
cmpsl
mov
and
fstl
roll
insb
fs
dec
in
sub
pop
lea
sbb
xlat
lret
inc
jbe
push
icebp
add
bound
and
nop
xor
inc
in
out
stc
ds
pop
add
xor
cmp
dec
outsl
jbe
aaa
push
or
sub
add
lret
shlb
mov
inc
xchg
addl
js
xchg
jnp
data16
or
enter
loopne
cmpb
jle
add
dec
icebp
xlat
mov
loop
roll
jo
fsubrl
and
sub
sbb
sarb
outsb
inc
mov
and
dec
sarl
mov
outsl
bound
and
adc
pop
divb
inc
mov
xchg
out
mov
mov
sbb
les
xchg
ret
mov
push
out
jae
inc
mov
push
sub
dec
test
mov
push
and
faddl
punpckhdq
loopne
or
int
icebp
and
std
xorl
rcll
pushf
sub
test
popl
repz
add
xor
int
dec
pop
test
and
xchg
inc
arpl
test
and
add
mov
jmp
xchg
lods
das
faddp
out
jl
xor
fisubl
icebp
or
lret
test
adc
icebp
shlb
xchg
ret
jmp
lock
pusha
push
andl
imul
pop
and
out
ja
pop
fildll
loope
jno
pusha
xchg
mov
lahf
es
jmp
fnsave
lea
pop
js
add
pop
lods
repz
inc
inc
test
jecxz
scas
sub
sub
or
aas
jmp
xor
lcall
fwait
mov
and
add
mov
sbb
outsl
insl
adc
aas
push
or
push
xlat
fsubs
sub
cmp
pop
pop
mov
xchg
test
test
loop
mov
aad
frstor
es
xor
in
adc
xchg
push
test
and
cmp
leave
xchg
add
xchg
arpl
outsb
out
pop
outsl
dec
mov
shrb
test
je
push
aaa
repnz
jnp
pop
and
aas
add
jne
push
das
addb
jnp
inc
stos
cmpsl
pop
push
scas
shlb
movsb
mov
lea
mov
add
iret
test
sti
pop
mov
call
repz
pop
mov
push
add
sub
or
ret
inc
stc
arpl
inc
std
fwait
mov
out
xor
cmp
stc
je
aas
and
insb
test
and
dec
test
push
fidivl
aas
inc
cltd
subb
xchg
out
cmpl
or
dec
mov
out
cmp
inc
adc
inc
push
repnz
mov
dec
aam
inc
push
cmp
mov
mov
xchg
or
jecxz
mov
mov
rcrb
dec
testl
inc
iret
or
xor
sub
jecxz
fnsave
xchg
push
xchg
adc
or
pop
lret
pop
pop
movsl
mov
shl
cmc
andb
pop
mov
mov
xlat
ret
lods
pop
subb
sub
subb
jb
xchg
mov
ss
inc
out
mov
jmp
jnp
outsl
sbb
sahf
mov
jno
jle
inc
adc
push
xchg
loop
pop
fistpl
push
shll
cmp
inc
mov
jb
pop
ret
int
ficoms
pop
and
pop
repz
mov
in
fcoml
lods
dec
into
in
add
jmp
adcb
xor
fmuls
mov
in
push
daa
lea
aam
int3
imul
push
inc
dec
sub
cmp
adc
pushf
repz
call
fstpt
test
js
fisubrs
add
outsb
dec
lds
sub
add
jbe
or
movsb
sbb
or
movl
int
movsl
gs
pop
mov
xchg
nop
sub
mov
adc
in
mov
pushl
data16
lea
jge
shrb
pop
imul
push
test
out
mov
inc
ljmp
outsl
cli
out
inc
and
xchg
inc
test
stos
shrl
xchg
shlb
dec
std
cli
push
push
push
sbb
sarb
or
mov
mov
imul
outsl
mov
lds
cmp
mov
xchg
into
sbb
lea
and
std
scas
cwtl
rorl
xor
dec
mov
xlat
push
add
jbe
adc
cmp
inc
xchg
mov
and
popa
not
decw
sub
adc
nop
jbe
mov
cmpb
test
jle
nopl
aam
aas
add
ja
mov
sub
in
add
cmp
insl
cmc
xchg
add
or
pop
mov
and
imul
or
jo
jb
inc
fstpl
mov
popa
sbb
cmpb
sbb
sbb
xchg
inc
and
aad
push
test
mov
pop
lods
cmpsb
icebp
aaa
cmp
adc
pop
fwait
int3
icebp
add
and
xor
dec
push
test
ja
mov
xchg
add
fdivs
jns
xchg
lds
xchg
adc
pop
mov
sbb
aas
ja
cmp
aaa
xor
mov
cli
jmp
repz
out
sahf
decb
test
stc
adc
fldl
test
mov
inc
loopne
mov
jle
inc
sbb
jp
push
fcmovnu
pusha
fisttps
mov
fsubrs
xor
mov
xchg
shll
out
sarl
fiadds
cltd
hlt
stos
stc
push
adc
xchg
int
push
sub
pop
mov
outsb
test
in
lods
sti
out
xchg
dec
pop
adc
jne
scas
jnp
rcrl
push
pusha
mov
fldenv
xchg
push
pop
mov
call
hlt
mov
cs
adc
subb
das
xchg
mov
arpl
fmuls
arpl
mov
pop
int
sarb
popa
cmp
subb
and
roll
ror
mov
xor
cmc
sub
sub
jecxz
mov
add
fwait
bound
mov
pushf
jp
repnz
xchg
fisttpll
sbb
pop
jmp
push
mov
mov
or
ret
cmp
cmp
sub
int
outsb
sbb
rorl
movsb
cwtl
std
push
mov
add
jns
popa
out
das
les
add
je
xchg
mov
lret
repnz
call
into
xor
and
sub
fnstcw
das
sbb
js
xchg
lods
dec
lret
cmpsb
je
pop
push
and
dec
stos
iret
jo
lret
adc
lret
int3
enter
and
mov
stos
push
dec
fstpt
or
call
imul
je
dec
mov
push
pop
scas
in
jo
fiadds
inc
test
ja
mov
fs
loope
in
xchg
push
lods
jge
jge
push
pop
add
repnz
sahf
bound
cmp
sub
push
stc
mov
out
xchg
out
mov
mov
call
repz
jo
push
xor
lods
fsub
mov
fidivrl
inc
ret
rcll
mov
jne
stos
xor
enter
fcmovu
mov
out
xchg
inc
sub
sub
adc
cmp
pop
in
mov
adc
loopne
pushf
scas
aad
popa
in
push
ret
outsl
and
popf
jl
mov
leave
xor
or
push
das
sub
sub
and
push
cli
jp
xor
sub
or
xlat
jo
dec
and
icebp
and
jecxz
mov
jmp
lret
clc
sub
imul
and
mov
lods
dec
testb
insl
scas
fwait
lret
and
fs
jmp
leave
dec
sub
movl
ret
adc
call
mov
push
inc
jmp
jns
jbe
push
lahf
mov
push
icebp
mov
sbb
jne
test
fidivrs
mov
cmp
les
jl
enter
insl
dec
jbe
fcom
xchg
mov
pop
inc
push
inc
and
addr16
ret
pop
add
xor
outsl
fadd
cmp
jo
jecxz
sbb
idiv
dec
and
mov
sbb
xchg
mov
push
sti
cmpsb
filds
adc
pop
xchg
fimuls
xchg
add
xchg
fdivp
cwtl
pop
sub
jl
or
call
sbbl
mov
or
daa
test
push
cmp
jb
scas
lahf
and
aas
ljmpw
les
add
test
out
icebp
les
out
adc
sbb
aaa
mov
mov
loop
lea
gs
add
mov
repz
aad
dec
lcall
iret
loopne
lock
jb
inc
movsl
pop
adc
push
pop
mov
adc
cmpl
das
mov
xchg
addb
jno
cmp
sbb
outsl
cmp
xor
or
adc
idivl
ret
cmc
arpl
dec
sti
or
es
sbbl
sahf
or
mov
aam
in
or
cmpb
stos
and
int
ret
lods
lret
xor
push
pop
fldenv
adc
jo
inc
stos
out
push
jns
addr16
mov
call
enter
addr16
insb
mov
pop
and
and
xchg
pop
cltd
imul
bound
sbb
ja
lds
inc
stos
mov
or
js
xchg
fldcw
pop
mov
dec
test
pop
xchg
jmp
inc
jne
push
and
test
ljmp
push
es
sub
sbb
insl
jnp
fcmovbe
test
lret
mov
ret
sub
negb
aas
iret
ret
mov
pop
lods
push
ret
mov
mov
pop
ja
push
jge
in
mov
add
jl
push
cs
mov
mov
dec
subl
hlt
add
loopne
lock
std
dec
repz
in
ret
pop
gs
or
inc
in
dec
dec
cmpsl
dec
and
jl
add
cmp
cmp
mov
fimull
dec
sbb
add
insb
push
data16
daa
imul
pop
add
xor
mov
jle
decb
xor
repnz
sub
mov
bound
mov
jp
and
ja
jnp
mov
iret
js,pn
add
popf
jecxz
inc
ss
dec
scas
jnp
fildll
js
add
lock
cli
in
sbb
adc
jb
shll
jp
jae
orb
cmc
dec
pop
mov
or
std
lcall
movsb
scas
in
xor
and
push
mov
hlt
dec
mov
sub
add
xchg
pop
xchg
push
dec
add
add
mov
pop
idivl
movsl
add
jmp
mov
sbb
shr
mov
xchg
or
iret
cmp
pop
mov
push
mov
andl
scas
imul
repz
repnz
addr16
inc
lret
sbb
push
loop
adc
getsec
pop
movsl
sbb
icebp
insb
mov
fidivrl
rorl
push
xor
jbe
jmp
push
sbb
mov
jo
addl
cwtl
adc
and
jno
xor
push
pop
push
mov
mov
rdpmc
inc
scas
clc
cs
bound
popa
push
sub
data16
mov
pop
or
add
daa
lods
mov
gs
pushf
adc
mov
dec
jns
lock
push
aaa
jp
in
test
jmp
mov
pop
cmpsb
ret
push
in
jnp
cmpsb
sbb
xchg
adcl
mov
imul
or
sbb
mov
movl
pop
fdivs
jge
loope
sbb
lods
push
lods
xlat
sub
dec
cmp
cli
imul
shll
hlt
mov
add
daa
dec
daa
cmp
mov
lock
jne
in
imul
negl
push
or
enter
push
cltd
mov
cli
in
lock
pop
mov
aad
sahf
cs
fdivrl
mov
xor
popf
adc
xchg
push
pop
push
sarl
or
xor
into
push
adc
outsl
stc
inc
xchg
mov
mov
andnps
les
push
pop
and
popa
sub
sub
mov
movsl
mov
js
stos
add
jmp
aaa
pop
ds
jb
icebp
sarl
sbb
pop
cmpsl
cmpsl
jbe
nop
fiaddl
mov
shll
imul
mov
push
mov
xor
lock
sbb
aas
dec
test
add
sub
mov
pop
pop
icebp
test
add
sbb
sub
mov
dec
jmp
mov
sbb
fiadds
xor
jp
cmp
push
add
or
cs
mov
xor
mov
inc
aaa
mov
jns
int3
ret
ficoms
jge
jae
mov
insl
cmc
das
inc
xchg
mov
xchg
cmp
push
and
cs
cmp
mov
mov
xchg
addb
sub
sbb
aas
movsb
lock
adcl
rcrl
ljmp
stos
dec
aam
jmp
jno
push
int3
subb
fidivl
orl
dec
adcl
sbbl
sbb
bound
stc
dec
std
dec
in
loope
pop
cmp
outsb
in
pop
inc
pop
in
sbb
ds
and
lea
sahf
ficompl
mov
nop
push
jge
jns
jo
ret
mov
in
fnstsw
adc
xor
imulb
pop
out
lret
push
sbb
pop
loop
fisubl
xchg
pushfw
rcr
sub
xor
repnz
mov
dec
test
pop
inc
inc
sbb
cs
sbb
and
rclb
inc
fnstenv
popf
mov
or
and
push
mov
cmp
outsb
cmp
sub
mov
addb
jp
test
xor
push
das
iret
sub
sub
int3
into
pop
in
orb
out
mov
dec
xor
adc
and
lahf
push
out
lods
int
scas
mov
push
cmpsb
pop
mov
cmp
pop
pop
movsl
aad
popa
cltd
test
mov
and
mov
pop
or
inc
repz
push
das
jmp
lahf
adc
and
ret
and
jnp
push
or
movsl
cld
rclb
inc
mov
push
test
push
int
and
pop
dec
jns
push
jl
or
es
xchg
jno
sti
inc
push
loope
adc
pop
andb
mov
punpcklwd
mov
outsl
jb
xchg
jb
mull
imul
roll
popl
xor
mov
es
mov
test
in
xchg
sub
js
xchg
jo
repnz
mov
lea
sbb
popa
mov
in
xchg
xor
mov
jge
adc
xchg
cmp
les
inc
aas
push
movsl
mov
add
jnp
mov
ljmp
xchg
lahf
in
mov
movsl
cmpsl
cld
jbe
fisubs
insl
mov
lret
inc
imul
je
sahf
cmc
cmc
mov
or
je
movsb
loope
mov
divb
mov
cli
pop
test
lret
push
imul
push
add
xchg
insb
push
xchg
push
add
adc
jae
das
in
scas
jmp
test
movhps
xor
aam
lret
scas
push
add
mov
orb
sub
arpl
popa
pop
jp
jge
and
enter
jns
sbb
lahf
test
jge
out
pop
mov
roll
adc
jle
pop
daa
mov
mov
push
pop
shlb
leave
mov
pop
in
addr16
nop
aad
lahf
xchg
jb
xchg
lods
push
fnstcw
lret
adc
cltd
inc
or
sub
push
inc
dec
add
pop
jb
jb
dec
lret
test
rol
nop
mov
xchg
mov
lcall
pushl
call
icebp
pop
sub
or
ret
aas
xor
mov
xchg
xchg
nop
fwait
cmc
mov
cmp
in
jno
mov
in
pop
and
fdivs
pop
jmp
aam
xor
andl
inc
inc
adc
test
jl
int
add
outsl
jmp
cwtl
jmp
in
enter
das
cld
idivl
sbb
inc
sahf
shlb
sbb
push
inc
cmp
lret
push
push
rorl
sub
into
dec
sub
and
cwtl
fmuls
cmpb
decl
xor
add
imul
inc
jp
ljmp
in
jmp
sub
iret
pop
idivl
cmp
push
mov
das
adc
jg
dec
fidivrs
lods
ret
add
cmpl
fsts
mov
pop
js
add
inc
jl
mov
popf
ret
out
or
adc
lods
test
iret
movsb
mov
or
mov
flds
or
das
jge
pop
xchg
pop
jne
daa
dec
and
pop
xor
outsb
cli
adc
inc
lret
mov
push
pop
push
fnsave
test
sti
in
notl
xchg
cmp
jnp
mov
shlb
mov
jle
pop
push
lods
jbe
movzbl
cwtl
jg
push
test
inc
adc
jne
sub
push
pop
push
sbb
and
addb
stos
mov
adc
sbb
dec
gs
aad
sbb
ds
xor
cld
mov
dec
sub
mov
mov
scas
lods
out
sub
fs
sarb
idivb
inc
jl
jmp
xor
push
outsl
addl
mov
lods
push
xor
ljmp
mov
pop
cmp
ret
in
lock
aaa
jo
push
leave
out
out
mov
sub
aad
xor
adc
dec
jno
mov
inc
adc
xor
aam
in
xor
sar
dec
loop
in
sbb
sub
xchg
sub
in
pop
lahf
stc
inc
cmp
inc
pop
dec
jecxz
flds
dec
jp
out
es
cmp
cs
xchg
scas
aad
inc
cmpsb
dec
imul
mov
repnz
pop
insl
es
jl
xchg
mov
xchg
lock
adc
mov
sub
pop
sahf
pop
inc
dec
jns
cltd
outsl
gs
pop
nop
repnz
outsl
fisubrl
testl
fsubl
js
and
push
inc
cltd
inc
imul
inc
xchg
mov
std
sub
jle
out
pop
arpl
add
int3
push
popf
pusha
dec
mov
test
icebp
sub
sarl
push
mov
sbb
stos
mov
cmp
mov
rcrl
sub
or
jecxz
jns
rcrl
fiaddl
jge
cs
loop
stc
nop
xor
fbld
clc
mov
mov
push
adc
jp
clc
jne
jmp
cmpsb
fs
es
jne
je
push
sbb
ret
aaa
imul
loope
pop
push
cmp
add
clc
andb
stos
dec
jb
adc
out
repnz
negl
inc
xchg
jle
xchg
sbb
jo
out
jo
daa
mov
leave
lret
and
lods
mov
pop
cmpsl
insb
ret
outsb
or
sahf
inc
in
and
or
dec
sbb
pop
inc
insb
inc
push
xchg
cmpsl
test
push
mov
inc
dec
push
ret
icebp
test
call
dec
add
mov
push
xchg
xor
bound
xchg
cld
pop
cmc
xchg
xor
or
in
fs
test
push
hlt
es
mov
outsb
dec
mov
repnz
xchg
out
sbb
mov
mov
dec
fadd
xor
cmp
xor
mov
push
int3
cmpsb
je
fnsave
cli
ret
sahf
add
popf
dec
and
and
daa
jmp
push
sub
fiaddl
jmp
fisttpl
cld
test
ss
pop
inc
sub
nop
sbb
jae
push
lcall
call
or
mov
push
cmpsb
lret
adc
xor
cmp
stc
arpl
repz
fnclex
lock
pop
mov
icebp
push
sub
stos
adc
std
cmp
daa
sbb
ds
cli
mov
mov
push
ret
in
lret
leave
jg
nop
cmp
in
sbb
push
cmp
xchg
or
imul
dec
jmp
pop
xchg
shr
push
pushf
mov
or
mov
sub
lods
je
call
add
aas
jmp
fidivs
dec
hlt
push
pusha
xchg
xlat
arpl
xchg
dec
push
inc
sub
popl
cmp
cmp
mov
scas
add
cmp
popa
fidivrl
sub
xchg
stos
shlb
cmpsl
inc
jg
fs
push
and
lea
fldcw
stc
int
daa
jne
mov
jecxz
push
mov
movsb
jae
mov
adc
and
jl
ret
inc
jl
int3
pusha
xchg
bound
das
push
cmc
roll
ss
mov
sub
scas
ret
rcrb
adc
push
mov
jmp
adc
movsl
out
dec
inc
sbb
mov
fiaddl
jg
mov
xor
jnp
dec
and
mov
sub
push
inc
mov
daa
push
adc
out
rcrl
pop
cmp
mov
cmpsb
sbb
pop
jbe
mov
mov
repz
pop
jl
lock
push
xchg
movsl
and
in
or
leave
cwtl
add
shrb
jno
outsb
mov
daa
push
je
xor
sub
xor
js
movsb
loope
sbb
cmp
int
mov
push
cmp
fs
mov
mov
je
mov
xor
sbb
test
ficompl
xor
dec
cmp
pop
into
adcl
outsl
aas
leave
insl
mov
cmp
mov
hlt
popa
std
cmp
jecxz
xchg
or
or
xor
lahf
mov
mov
mov
leave
push
adc
xor
movsl
call
xchg
mov
cmp
out
sbb
in
lock
ret
inc
jg
adc
xorb
fs
mov
xlat
mov
jle
or
jg
mov
stc
mov
pop
pop
lods
jle
jle
xor
outsb
sub
xlat
shl
in
dec
loop
push
cmp
sub
rep
aas
fists
mov
sar
pop
lods
add
dec
sub
repnz
mov
fisubs
es
mov
xor
test
inc
pop
xchg
cld
outsl
int
adc
dec
mov
repz
stc
inc
stos
mov
les
popa
fistps
xchg
sbb
and
xchg
loop
pop
cmp
inc
out
adc
ret
and
cmpsl
jle
push
jae
ljmp
mov
jns
sbbl
mov
inc
xorb
pop
cmpsl
div
mov
popa
xor
pop
fwait
out
ret
mov
daa
nop
mov
inc
xchg
jno
adc
call
imul
ljmp
sbbl
jb
xor
imul
mov
or
pusha
push
cld
scas
inc
sub
test
in
lret
push
fistps
stos
sti
data16
pop
add
xchg
xlat
aaa
jnp
outsl
mov
hlt
lock
cmp
je
mov
push
aas
fsubrl
es
sbb
pop
icebp
jne
sub
cld
call
out
lret
imul
fimuls
pop
inc
inc
jmp
push
add
mov
and
in
pop
test
add
rcrb
cmp
ficomps
sbb
pop
sbb
out
and
sub
add
outsl
call
pop
mov
push
cltd
push
or
dec
xor
test
sbb
xor
mov
iret
mov
cmp
jbe
sbb
sbbb
sarb
add
mov
nopl
mov
les
in
lcall
sub
push
inc
loopne
divb
mov
or
orb
add
lahf
stc
mov
and
dec
cmp
push
push
test
mov
mov
xchg
cmp
call
loopne
jne
jl
in
jns
mov
xchg
sub
xlat
cmpsb
imul
pop
push
bound
out
push
mov
pop
push
xlat
dec
mov
stc
sub
inc
push
scas
inc
xchg
add
ljmp
fildll
int
cltd
es
push
jnp
pop
fdivl
in
pop
lea
xor
jnp
lea
aas
out
mov
shrb
mov
mov
cmp
add
test
dec
mov
add
pushf
and
mov
mov
push
les
ss
sbb
jb
sbb
sbb
sbb
scas
ljmp
adc
data16
adc
adc
add
xor
sbb
nop
mov
insl
cwtl
dec
fistpll
fidivrl
push
mov
lret
lock
jno
stc
shll
adc
pop
jb
xor
ror
or
loop
das
and
pop
push
fdivs
mov
mov
leave
loop
cltd
lcall
out
add
jo
addb
and
imul
sti
mov
push
inc
add
jp
push
or
inc
adc
jmp
es
loope
daa
jo
dec
mov
sarb
lods
jno
js
jmp
movsl
jbe
jno
lds
mov
ret
js
pop
jp
cld
out
xor
mov
repnz
add
jb
mov
sbb
cmp
push
jmp
ja
lods
push
jg,pt
scas
pushf
pusha
out
cmp
inc
mov
in
lods
cmpsl
mov
xchg
ss
sub
scas
mov
push
inc
add
cmpsb
out
repnz
push
stos
icebp
gs
pop
or
xchg
mov
inc
cmpsb
outsl
sub
pop
inc
jg
icebp
aas
or
mov
insb
stc
insb
loopne
mov
out
test
dec
or
dec
fsubrs
push
cli
push
lods
outsb
in
xchg
movsb
pusha
ljmp
data16
jb
and
push
fucomi
ljmp
push
cli
jbe
scas
push
aam
js
stos
mov
ljmp
in
aad
adc
xorl
xchg
in
push
jmp
xor
mov
sub
shr
mov
mov
scas
scas
pop
lods
xor
dec
dec
pop
push
pusha
xchg
mov
push
testl
cld
sub
add
mov
adc
lret
icebp
sbb
aaa
ss
adc
aad
ret
bound
mov
scas
jmp
call
add
pop
outsb
dec
fiaddl
fs
lea
add
std
je
mov
dec
cmp
or
mov
mov
aam
push
mov
mov
sub
mov
jnp
or
int
or
cmp
jno
add
sub
mov
lds
pop
xor
cmp
mov
xchg
scas
jae
sbb
cmp
ljmp
jbe
test
fld
out
adc
xchg
mov
pop
dec
inc
pop
imul
sbb
push
stos
inc
je
ret
push
divb
fcomip
xor
popf
jae
into
mov
and
stos
xchg
and
cmp
xchg
popf
add
cmpl
and
rcrl
sbb
arpl
xchg
pop
ss
jo
sub
jo
iret
cmpsb
lahf
sub
das
sbb
mov
fs
clc
sbb
rorl
sub
jmp
dec
data16
jmp
mov
pop
jecxz
cmp
dec
sbb
sbb
jo
shrb
das
int
fidivrl
inc
pop
test
sahf
xor
mov
mov
add
adc
cwtl
inc
xor
scas
setne
loope
sbb
dec
inc
divl
add
aad
mov
sub
mov
add
adcl
repz
or
xchg
out
ss
sbb
mov
lcall
sbb
or
int
lock
pop
or
fcomp
jbe
sub
ret
test
rol
leave
push
add
in
mov
jae
lret
mov
cmc
pop
rolb
shl
sahf
jno
iret
inc
cmc
mov
lahf
jge
mov
test
xchg
mov
xchg
jl
orb
repz
xchg
andb
fucomi
sbb
mov
mov
in
imul
cmp
add
pop
out
clc
push
xor
xor
cmc
and
pushf
insb
inc
push
scas
leave
sbb
add
xchg
lfs
push
push
js
jmp
out
movsb
jnp
imulb
inc
imul
scas
repnz
mov
mov
inc
outsb
push
adc
and
jnp
jle
xchg
cmp
pop
lods
dec
mov
icebp
or
ja
dec
mov
dec
mov
sbb
jne,pn
xchg
pop
lea
pushf
jns
cmp
mov
xor
cs
or
lret
gs
mov
ret
adc
lods
inc
lret
jmp
adc
push
call
sbbl
mov
out
sub
lret
outsl
inc
test
insb
pop
sarl
ljmp
aad
inc
imul
addr16
ljmp
adc
es
jp
add
mov
ret
pop
and
jae
out
mov
cmp
xchg
and
sbb
and
push
rorl
daa
dec
cs
xlat
xchg
movsbl
ds
lcall
adc
stos
mov
rcrl
adc
inc
xchg
jo
ds
mov
scas
outsb
fstpt
xor
xchg
les
ds
mov
or
mov
or
xor
pop
push
loop
jge
das
jp
pop
mov
jecxz
ficoms
movntq
and
and
mov
adc
mov
pop
add
cmp
jno
add
sub
jl
inc
mov
mov
lea
push
push
jle
dec
dec
push
aad
and
cltd
inc
dec
jge
ljmp
and
dec
outsb
adc
pushf
lods
daa
xor
jae
ret
int
ret
cmc
push
pop
sarl
jge
insl
cmp
in
xor
mov
mov
or
push
hlt
push
xor
ret
xor
inc
or
xor
sub
jecxz
out
je
jo
jb
xchg
or
insl
xchg
mov
nop
int
scas
in
dec
sti
ret
adc
iret
and
das
sti
and
jno
sbb
mov
jae
cwtl
incl
lods
mov
push
xchg
push
repnz
js
icebp
sbb
in
popa
movsl
das
psllw
pusha
fcoml
and
aaa
xchg
and
lea
xor
fwait
adc
xchg
dec
dec
dec
cmp
add
out
aas
cmp
je
shll
mov
and
sub
or
push
mov
cli
and
mov
or
in
mov
pushf
xorb
push
mov
clc
jns
ja
jbe
shr
push
lds
dec
addb
scas
and
rcll
int3
scas
insl
mov
leave
cltd
jge
pop
inc
jle
enter
xchg
fucompp
lret
pushf
cmp
or
add
hlt
fisttpl
lea
jecxz
das
fisubrl
roll
repnz
addb
insb
cli
popf
xchg
addl
into
cs
out
fcoms
in
sahf
bts
das
dec
mov
test
call
pop
xchg
sub
mov
jg
pop
in
push
inc
adc
outsb
shrb
mov
pop
push
push
mov
cmpsb
in
mov
and
add
push
pop
mov
xchg
sahf
mov
das
or
xor
fiaddl
or
and
insb
mov
popl
daa
mov
mov
test
cmp
sub
daa
add
bound
sahf
out
leave
movsl
mov
icebp
out
popf
sbb
jp
add
adc
clc
cmp
data16
mov
xor
in
arpl
mov
inc
insb
out
cmp
outsl
aad
pusha
jp
je
push
out
inc
pop
mov
sbb
shl
add
cltd
push
xchg
cmp
addb
pop
pop
sti
cmpsb
shl
inc
mov
fisubs
fiadds
push
ds
lods
rcll
je
out
out
mov
cld
sbb
shlb
or
jne
xchg
dec
pop
outsb
inc
in
cmp
mov
push
xchg
sub
mov
sbb
sub
shl
add
mov
gs
popa
jne
mov
repnz
cs
pop
jnp
out
push
sbb
cli
pop
shrb
jl
jecxz
jmp
add
test
idivb
stos
sbb
push
sahf
cwtl
add
push
mov
pop
mov
mov
fisttpl
fdiv
add
mov
fistps
test
push
push
cld
and
call
rcrl
es
pop
jp
in
cwtl
and
dec
data16
adc
ss
or
pop
adc
mov
nop
hlt
jae
popf
nop
and
pushf
leave
sub
dec
cmp
adc
fnstcw
or
fildl
rcrb
jmp
mov
and
dec
cmpsb
and
push
or
loop
inc
or
or
jg
sbb
inc
dec
repz
xlat
sbb
cltd
cmp
movsl
and
adc
in
inc
imul
push
icebp
in
mov
dec
test
and
daa
jp
int
in
gs
shll
shrl
addr16
mov
fdivrp
dec
push
ret
push
mov
ss
fsubs
mov
jle
pop
cmc
lods
test
outsl
mov
adc
not
cwtl
xchg
jb
xor
lods
test
cli
cmp
iret
rcll
dec
leave
pop
xorl
ror
adc
gs
xor
aam
insl
std
out
dec
xchg
mov
lods
mov
xor
js
sub
push
cmpsl
shll
and
subl
lret
sub
js
call
xchg
sarl
jo
dec
jg
jp
mov
mov
je
dec
dec
mov
jg
jp
adc
iret
push
push
dec
sbb
pop
cmp
and
mov
sub
clc
stos
imulb
xchg
adc
adc
icebp
stc
push
adc
push
mov
je
movsl
cltd
sti
jl
jbe
fcmovu
add
jmp
aam
out
cmp
sub
cmp
icebp
mov
in
lahf
lcall
lds
or
cmc
je
mov
lods
dec
and
push
call
hlt
mov
orps
push
fucomi
xchg
sahf
mov
jge
into
lods
lods
mov
cmp
push
rcrb
out
lods
cmp
push
mov
sub
xor
mov
hlt
sub
mov
sbb
adc
clc
fxtract
push
xor
fistpl
cld
cwtl
dec
push
dec
fidivl
fidivrs
jbe
ffree
out
xchg
mov
loopne
jb
pop
popa
cs
xor
sbb
mov
cmp
cmp
adc
in
and
je
out
adc
sub
dec
pop
cmp
xlat
mov
push
loopne
sti
jg
xchg
gs
push
idivl
xor
outsl
mov
jb
in
shlb
fwait
mov
call
repnz
jns
adc
mov
xchg
push
pop
jo
out
cwtl
and
xor
jne
aas
push
ss
mov
pop
xor
mov
pop
js
in
push
repnz
mov
jecxz
or
xor
loope
push
outsl
adc
sti
loopne
idivb
dec
add
xor
es
lret
movsl
loop
cmp
fnsave
pop
cmpsl
insb
adc
int3
iret
pop
add
enter
push
xchg
lcall
sbb
xchg
outsl
enter
cmpsl
xor
aam
dec
xor
add
push
div
scas
xlat
push
mov
pop
mov
cmc
lds
lods
dec
rcll
jne,pt
fstpl
popf
fyl2xp1
inc
aas
arpl
cmp
mov
lcall
lock
jnp
shl
sbb
and
xor
sub
and
sbb
es
mov
adc
clc
xchg
add
adc
sbb
sub
sub
sub
ficompl
cmpsl
ror
add
das
shlb
cli
jg
xchg
push
sbb
jnp
in
int
xor
nop
repz
imul
hlt
cmp
scas
mov
pusha
add
pop
and
sbb
rorl
outsb
adc
adc
cmpsb
jns
cmpsl
ficoml
sarl
mov
dec
lods
sbb
fstpl
xchg
and
pop
or
sub
xor
lds
mov
cmpsb
dec
ret
sti
sbb
ss
or
sbb
pop
ret
jp
mov
xor
daa
jp
mov
cmpsb
sahf
sahf
gs
mov
stos
sub
push
sub
cmpsl
sub
sub
fidivrl
scas
jne
insl
cld
sub
ds
test
rcrl
xchg
sbb
mov
in
xchg
pop
hlt
sub
pushf
pop
pop
cmpsl
mov
push
hlt
push
aaa
dec
xchg
xor
jae
aaa
clc
dec
cli
push
xchg
xchg
jbe
shr
es
movd
xchg
fmull
lea
pop
bound
dec
pop
cmp
movsb
sub
test
mov
mov
sub
fs
xor
pop
sbb
push
xchg
add
inc
lea
pop
xchg
repz
mov
aad
repz
mov
mov
fistpl
inc
call
dec
cli
hlt
push
xchg
xor
loopne
cmpsl
dec
test
jge
sbb
inc
push
xor
lods
pop
enter
movsl
push
inc
into
or
stc
mov
sub
out
and
mov
dec
fcompl
inc
movsb
dec
das
nop
and
dec
ja
dec
je
inc
int3
loopne
adc
rcr
fcomps
cmp
and
xlat
movsb
pop
add
jo
dec
add
xor
outsl
cmp
adc
adc
cmp
xor
arpl
test
cld
les
mov
iret
orl
adc
and
aad
and
inc
pop
clc
inc
out
mov
add
push
adc
popf
mov
or
push
xchg
jmp
in
orl
fbstp
dec
cwtl
mov
inc
out
stc
rorl
add
pop
xchg
outsb
mov
dec
mov
out
jg
jp
add
fisttpl
in
data16
notl
or
dec
cld
sbb
sarb
mov
pop
popf
add
jne
and
stos
shl
fsubl
sbb
mov
popf
jb
xchg
lret
lock
cmp
outsl
push
pop
mov
inc
int
and
pop
dec
ficompl
int
jmp
or
imul
enter
mov
mov
mov
and
sarb
sub
jecxz
lret
test
popf
mov
xor
dec
ret
jbe
popf
xchg
push
xchg
dec
lret
or
lahf
pop
xor
repnz
mov
stos
outsl
ja
aam
iret
lahf
int3
and
mov
mov
add
daa
mov
loope
and
ret
incb
shrb
sub
cmc
dec
jne
mov
clc
sub
push
repz
icebp
xchg
adc
test
imul
mov
sub
jmp
push
lret
cmc
daa
push
hlt
cwtl
or
xchg
insb
or
ret
sbb
ss
outsb
mov
shl
sub
xchg
icebp
push
rorb
dec
inc
sbb
cmc
pop
bound
insb
test
jnp
sbb
cmp
aad
cli
jmp
test
mov
and
loopne
test
jge
and
or
or
mov
mov
sbb
mov
lret
std
aad
sub
mov
pop
cmp
dec
mov
popf
pop
pop
and
es
popf
sub
repz
push
ljmp
mov
cmc
imul
or
mov
lret
lret
pop
sbbl
data16
sub
mov
lock
ficoml
lds
lcall
jg
or
push
ss
jo
int3
inc
shrl
orl
jle
xor
push
repz
xorl
jge
cltd
fwait
out
cmp
push
push
and
jle
aaa
pop
aas
pusha
lret
and
cmp
in
std
push
nop
mov
push
int3
out
ret
push
or
lea
iret
repnz
outsb
or
and
ret
xor
subl
adc
cmp
pop
lea
enter
lret
cmp
outsb
movsl
jle
popa
lcall
pusha
inc
and
les
mov
add
sbb
jns
or
cld
pop
dec
and
outsb
xor
add
adc
adc
loopne
hlt
push
xchg
leave
iret
inc
test
jb
icebp
cltd
cltd
xor
push
mov
leave
hlt
ja
pop
push
pop
inc
dec
pop
shr
ja
imul
sub
imul
jl
shrl
mov
clc
mov
lds
adcl
jp
xchg
inc
cltd
test
jno
cmp
mov
lods
xorl
sahf
or
in
movsb
sbb
fnstcw
dec
inc
adc
adc
mov
mov
aad
jbe,pt
std
xor
push
icebp
jbe
inc
lea
xor
and
and
push
js
pop
push
clc
mov
cmp
pop
mov
aas
mov
lcall
leave
dec
out
scas
inc
cld
jb
sub
dec
cltd
adc
sbb
pop
push
sahf
fmull
inc
jmp
cmp
push
xor
xor
aaa
add
out
pop
lods
sbb
push
xor
push
vpmulhw
add
push
iret
xchg
icebp
add
pop
repz
push
sbb
aas
stos
aas
aam
cmpsb
xchg
jbe
inc
xorb
je
lock
mov
fldenv
mov
ss
or
out
jb
in
les
sbb
ret
push
pop
dec
xor
je
aaa
pop
mov
mov
push
jl
cmp
std
mov
add
xchg
mov
mov
mov
jbe
out
add
push
inc
dec
mov
ret
orl
out
and
sub
mov
push
fisubs
push
mov
and
jno
or
popf
cmpsl
mov
cmc
and
dec
cltd
mov
mov
rorb
and
mov
test
clc
jmp
adc
lret
sti
pop
adc
add
xchg
jecxz
mov
orl
sbb
and
jbe
aaa
mov
push
mov
add
mov
jge
pop
dec
add
mov
lods
mulb
cmp
sti
out
jne
mov
shl
xor
movsb
or
mov
negl
insb
sub
adc
sub
repnz
ljmp
pop
xchg
mov
mov
scas
stos
jno
xlat
mov
pop
cmp
scas
sub
jp
push
pop
xchg
scas
mov
rclb
fincstp
shufps
mov
mov
cltd
pmaxsw
es
es
cli
lods
std
adc
xor
stc
pushf
mov
mov
jg
and
sbb
fnstenv
ds
inc
cmp
arpl
stc
repnz
and
xchg
test
test
fldl
fdivr
lea
imul
pop
cmp
movsl
dec
sbb
js
jecxz
sbb
inc
in
mov
icebp
xchg
and
nop
push
add
sub
sub
loopne
fmuls
cmp
dec
into
pop
ret
cwtl
inc
push
push
and
shlb
xchg
insl
xchg
fists
dec
icebp
nop
sahf
shlb
fs
push
iret
xchg
dec
outsl
out
addr16
ja
popf
sub
mov
nop
test
push
enter
int3
lods
push
xor
adc
test
xor
cmp
mov
mov
lcall
ds
xor
sub
je
adc
lret
push
inc
xorl
dec
push
and
push
sub
or
xchg
jle
cmpsb
bound
insb
ja
adcl
loope
jmp
cld
push
mov
icebp
movsl
pop
xchg
orl
adc
ret
pusha
pop
movsb
mov
ret
insl
dec
push
not
insl
push
gs
movsb
stos
push
cmp
pop
inc
out
shl
jle
mov
and
add
stos
in
lods
jp
lahf
inc
xchg
cmpsb
dec
jg
inc
sbb
lods
lahf
jnp
mov
mov
sub
mov
fs
stc
or
mov
mov
or
jg
stc
lods
lret
sbb
mov
rclb
mov
inc
ret
mov
xchg
movsl
and
jle
sub
xchg
hlt
fildl
sarb
and
jg
cmc
or
movsb
cmp
test
jne
sbb
rep
mov
push
pop
push
andb
sbb
leave
jl
mov
int
fmull
sbb
sbb
and
push
fwait
xchg
std
xchg
loop
push
mov
sub
xor
inc
ja
jns
push
xor
sub
mov
and
mov
insb
ret
int3
xchg
pop
mov
adc
mov
int3
xchg
in
call
bound
sahf
inc
adc
shrl
mov
jg
pop
sub
movntq
jns
adc
xchg
int3
sub
loop
std
ja
clc
add
addr16
rorl
movsb
sbb
cmpsl
cli
cmc
xchg
test
jno
out
xchg
aas
sub
movsb
sbb
push
cld
stc
stos
jb
pop
pop
and
leave
push
out
pop
aaa
dec
sub
and
dec
insl
dec
shll
lcall
movsb
pop
sti
mov
mov
pminsw
and
push
sbbl
xor
stc
or
add
in
int3
out
xchg
jmp
mov
sti
inc
push
shr
xchg
imul
cmp
cmpl
sbb
dec
cmp
xor
xor
aaa
sarb
jle
popa
sarb
mov
insb
mov
pop
cmpsb
mov
in
inc
out
orl
lcall
jle
popa
clc
mov
mov
pop
mov
xchg
ja
push
push
xchg
fmuls
aaa
lods
dec
out
xchg
pop
pop
mov
fmuls
cmp
loope
or
add
inc
jecxz
rclb
jp
lds
fsts
cmp
rcrb
stc
jne
dec
inc
or
fdivl
mov
mov
or
icebp
mov
hlt
popf
pop
out
out
inc
mov
add
mov
int
mov
xor
insb
lods
cmp
mov
outsb
imul
jmp
jns
fmull
xchg
push
in
add
push
jnp
jbe
sbb
cltd
outsb
or
das
xchg
sbb
cmp
jae
cmp
inc
inc
mov
aad
imul
jmp
jo
cmp
test
sub
xor
pop
dec
jbe
movsl
xchg
and
movsb
push
ljmp
or
mov
lods
cmp
ror
daa
sahf
xlat
mov
clc
sub
into
push
pop
dec
lret
lcall
addb
out
je
push
cmpsb
xor
cli
mov
mov
add
mov
mov
fldlg2
mov
je
dec
movsl
fidivrl
inc
sarl
rcl
push
rcll
ror
punpckldq
mov
xchg
rcrl
aas
cld
movsl
xchg
xchg
dec
push
ret
nop
or
cmp
insb
push
out
test
adc
mov
roll
and
adc
push
lods
xlat
pusha
pop
movsb
mov
sti
movsb
sub
cmp
adc
mov
inc
pop
adc
nop
inc
ljmp
shrb
pop
lret
repnz
xor
stos
sub
mov
call
and
cltd
mov
jnp
push
sbbb
mov
mov
enter
cli
aad
and
and
sti
repnz
out
or
xchg
shll
insl
aam
adc
adc
mov
adc
inc
xor
push
and
fcomps
or
fdivr
jne
sub
mov
push
cmc
push
idivb
inc
loope
incl
iret
stos
jb
out
popf
icebp
sub
pop
repnz
testl
add
pusha
es
push
mov
push
call
ret
das
adc
mov
mov
xor
mov
nop
xchg
xchg
jno
xchg
sbb
out
dec
and
jae
out
and
jecxz
mov
inc
xor
call
inc
call
loop
jecxz
push
fistps
and
test
mov
cltd
push
mov
mov
into
xchg
and
jae
pop
push
pop
xor
xor
jo
cmp
sub
xchg
sbb
mov
xchg
cmc
pop
dec
in
inc
aas
xchg
mov
in
xor
pop
add
cwtl
mov
dec
mov
inc
daa
dec
mov
adc
insb
pop
or
or
sbb
mov
xchg
pop
adc
pop
sub
sbb
push
cmp
inc
fistps
mov
mov
adc
in
fdivl
push
inc
movsbl
cmc
inc
cli
sbb
aad
shl
cmp
dec
push
stos
mov
loope
nop
test
into
pop
mov
xor
dec
and
das
sub
daa
push
push
dec
sahf
pop
xor
jmp
jb
pop
sub
pop
popf
test
sar
rcr
xchg
xor
dec
push
adc
shrl
jo
dec
or
or
xchg
and
clc
adc
lret
push
movsb
inc
stos
add
repz
popf
jne
repz
push
jb
sbbl
mov
cmpb
lret
cmp
les
lret
mov
ret
leave
sub
int
cltd
jo
inc
into
es
xlat
sahf
ficoml
mov
repnz
mov
in
mov
jle
bound
push
xchg
loope
jae
pop
ds
inc
loopne
sub
out
inc
cmp
sbb
adc
repnz
in
fldcw
push
xchg
stc
or
lea
mov
sub
jb
lret
mov
jo
test
pushl
lock
dec
mov
in
pusha
lahf
imul
shlb
fsubl
ds
cmp
loop
sti
cmpsl
sbb
shrl
repnz
addr16
sbb
add
mov
jo
inc
pop
cmc
mov
js
cwtl
mov
repnz
mov
push
inc
lock
ljmp
sbb
popf
rorb
loop
cmc
push
orb
lods
fsin
jno
push
push
daa
cmp
scas
push
pop
xor
int3
scas
sqrtps
push
sbb
inc
test
mov
jge
jno
aad
mov
inc
add
imul
call
out
mov
cmp
inc
stos
in
lcall
mov
sbb
add
je
test
daa
jae
and
xor
mov
gs
push
inc
fsubl
xor
cld
ja
inc
cmp
cmp
loope
add
mov
and
mov
mov
inc
inc
iret
push
add
jmp
stos
jnp
adcb
dec
in
enter
inc
pop
aad
icebp
test
outsb
xor
rolb
call
push
mov
out
bound
and
mov
outsl
dec
sbb
bound
and
ret
push
mov
aaa
mov
fcomps
nop
mov
mov
sub
pushf
and
out
sbb
movsl
lret
cmpsb
mov
mov
lcall
push
cmp
fsubl
mov
and
rol
pop
mov
imul
sbb
sti
cs
sub
pop
mov
dec
and
dec
mov
pushf
jne
push
lahf
adc
lds
push
or
sar
lret
xlat
push
add
in
inc
in
push
lock
xor
mov
gs
cmp
lcall
and
xchg
aaa
loope
repz
andl
and
jno
fmuls
hlt
bound
je
repnz
arpl
nop
aaa
les
pop
test
and
loope,pn
jle
scas
andb
and
fwait
gs
out
adc
aam
adc
xor
jecxz
adc
jb
shl
je
test
inc
lock
xchg
std
jne
test
ljmp
sti
js
cmp
fstpt
fiadds
ret
fucomi
cmpb
jg
mov
fbstp
jb
pop
das
mov
add
data16
js
ret
dec
xchg
or
jle
push
stos
int
jg
adc
mov
std
or
inc
and
aam
mov
pop
mov
xchg
or
xchg
sbb
stc
dec
ret
adc
popf
adc
sbb
fmuls
in
lods
jp
gs
lret
and
mov
or
cmc
jne
mov
sub
dec
ret
push
sbbl
shr
jp
pop
aad
mov
fidivrs
aam
jne
mov
fwait
or
push
mov
mov
pop
mov
in
je
or
jmp
leave
rcrb
loop
adc
adc
sbb
sub
adcl
mov
ss
shrb
inc
lock
int3
les
cmc
mov
mov
jnp
jb
pop
stos
cs
push
pop
xchg
mov
cmc
ss
sub
mov
add
test
xchg
lods
xchg
lret
jns
jp
push
gs
jne
dec
sbb
xchg
inc
outsb
clc
mov
mov
repnz
dec
ret
test
or
fwait
sti
inc
out
pusha
adc
xorb
xor
xor
xor
aaa
aaa
and
mov
addr16
sbb
pop
outsb
or
xor
in
or
jle
and
and
push
push
test
and
xchg
adc
sub
mov
adc
sub
cli
mov
cmpsl
loop
sbb
push
xor
movaps
mov
and
mov
aad
mov
sub
cmp
sbb
lock
jl
inc
je
mov
loop
sbb
ja
or
lea
fists
push
and
inc
mov
cmc
adc
sbbb
cwtl
aad
pop
insl
jbe
std
frstor
inc
mov
cli
pusha
push
or
fsubrp
aad
dec
push
add
xor
fdecstp
cmp
pushf
push
data16
xor
push
jbe
push
or
mov
jno
sbb
cmpsb
int
or
ss
or
xlat
rolb
fs
xchg
lcall
into
loopne
int3
pop
push
call
outsl
enter
ret
mov
shrl
xchg
jmp
mov
stos
pop
fwait
sarl
sbb
xchg
xchg
inc
xchg
test
negb
test
fdivl
add
sahf
adcb
es
adc
popa
cwtl
push
pop
popf
movsl
xlat
jb
jg
stos
cmp
sub
dec
fdivrp
and
adc
jecxz
jno
jb
popa
popa
xor
fists
lods
pop
sub
push
add
push
out
sahf
sub
dec
or
mov
inc
or
inc
jnp
adc
and
sub
insl
xchg
fistpll
out
popa
fdivs
ficomps
repnz
inc
add
orl
push
or
xchg
or
sarl
or
lret
mov
jmp
mov
mov
inc
aad
xchg
adc
and
sub
lods
push
xlat
insl
mov
jecxz
inc
mov
arpl
cld
ss
arpl
cs
pusha
mov
das
dec
jl
sub
mov
mov
lds
xchg
xor
dec
in
es
in
mov
cmpb
lahf
testb
inc
sbb
adc
test
mov
imul
nop
repz
xchg
es
add
loop
push
pusha
xor
leave
frstor
sub
in
xchg
xor
mov
cmpsb
cmp
ljmp
mov
dec
inc
repnz
push
ljmp
push
fldenv
or
push
cmp
mov
sub
cmp
sbb
cwtl
data16
xchg
pushf
out
stos
fstpl
leave
mov
push
xor
iret
xchg
ja
lcall
adc
cmp
jno
insb
mov
push
cmp
cli
inc
and
pusha
fidivs
mov
dec
repz
cs
outsb
jp
jp
mov
pop
inc
adc
cmp
mov
xchg
cwtl
mov
lret
xor
push
sub
xchg
mov
enter
and
out
and
adc
sbb
sub
movsb
jge
mov
and
in
test
fdivrl
insb
add
shl
aas
jp
ret
fistl
mov
adc
cmp
mov
test
into
xor
cmp
xchg
pop
cli
mov
xor
adc
xchg
ds
out
std
add
push
xchg
andl
sbb
dec
leave
adc
adc
add
adc
mov
aas
js
outsl
idiv
frstor
xor
sbb
ficompl
mov
xor
fs
scas
rcr
jecxz
ljmp
xor
mov
out
or
fimuls
fs
xchg
sahf
insl
sub
in
mov
mov
xor
into
es
add
rorl
push
pushf
inc
gs
mov
pusha
xchg
push
stc
or
push
push
outsb
and
enter
lcall
dec
ret
jg
mov
cmp
fucom
mov
sub
cmpsl
adc
sti
lods
adc
jb
lds
ljmp
or
gs
ret
and
frstor
or
aam
test
repz
sahf
or
sbb
cmpsb
repz
cltd
pop
ds
test
daa
cs
or
pop
aas
out
dec
push
mov
xchg
mov
nop
jnp
mov
repz
imull
push
aas
jecxz
jl
mov
in
xor
and
test
fcoml
jmp
mov
in
sub
sahf
adc
xchg
add
fistps
imul
sbb
and
aad
jns
add
mov
rorb
cmc
jae
push
mov
dec
imul
sub
jae
xor
imulb
or
popa
in
test
mov
sahf
out
cld
mov
xchg
andl
ljmp
xor
in
jo
jo
mov
daa
jo
and
out
leave
cmpsb
sbb
pop
movsl
and
dec
push
cmp
and
and
jns
mov
sbb
lock
lock
loope
mov
fs
loop
into
push
dec
push
sti
add
out
inc
mov
enter
jo
dec
adc
in
cmp
xor
sti
rcrl
mov
adc
sbb
xchg
call
dec
aaa
mov
int
push
dec
cmp
movsb
addr16
sbb
and
test
hlt
mov
adc
dec
lds
out
sub
push
dec
sub
lret
sub
icebp
push
and
lea
movsl
inc
dec
sub
sbb
stc
in
pop
mov
addr16
cmp
arpl
jge
push
out
add
inc
movsb
es
inc
outsl
orb
push
push
add
fildl
outsl
sub
dec
data16
pop
mov
pop
out
and
sbb
pop
mov
outsl
push
xor
nop
aaa
pop
mov
loop
lds
xchg
mov
add
mov
inc
adc
fldcw
aas
xchg
fidivrl
dec
divb
lcall
push
in
jbe
mov
xchg
lret
rolb
dec
jnp
push
sub
push
cmpsb
lret
test
or
inc
les
jnp
loop
fsubl
pop
jecxz
enter
mov
movsb
mov
mov
in
dec
push
sbb
xchg
xchg
add
lret
fisubl
das
shl
cli
in
addr16
jmp
js
sub
xchg
cmp
sbb
roll
jl
sub
aas
jp
stos
pop
int
jl
loop
or
scas
into
push
test
xchg
add
inc
rorb
and
xchg
jb
sbb
lcall
inc
insl
gs
jmp
sahf
fiaddl
mov
leave
mov
mov
mov
dec
mov
jae
jmp
mov
jne
arpl
sub
int3
imul
lahf
fcoml
xchg
insl
cmp
aaa
daa
mov
sub
jae
ret
dec
adc
or
rcll
mov
sbb
jle
jns
dec
jl
sbb
fwait
cmpsb
out
data16
pop
addr16
in
mov
fucomip
popf
out
push
mov
mov
iret
jecxz
pop
pop
ja
mov
xor
inc
or
jb
and
call
sti
push
mov
pop
xor
or
push
jne
xor
movsb
push
or
cmp
lds
mov
lds
sbb
cltd
and
mov
sub
jmp
add
mov
xor
loope
xlat
mov
dec
iret
lret
mov
out
in
push
push
in
xchg
mov
jns
cwtl
dec
shrb
jno
jne
arpl
mov
int3
adcb
mov
ljmp
xlat
push
push
xor
sbb
cld
and
iret
jecxz
sti
xor
xchg
jns
or
dec
or
movsl
ljmp
mov
fisttpl
mov
mov
dec
loope
pop
jge
xchg
mov
ror
ja
int
jo
cltd
jecxz
xor
inc
sub
roll
mov
xchg
or
mov
mov
filds
andb
pop
cmp
subb
add
sbb
xchg
clc
jg
pop
push
jns
clc
mov
push
jecxz
repz
jp
mov
std
pop
push
ficompl
test
fisubl
and
sub
adc
xchg
push
sbb
pop
or
cmp
jns
adc
mov
lcall
fcoms
add
adc
test
inc
mov
std
loopne
loope
jle
mov
jo
test
and
mov
xor
cmpsl
clc
sub
cmpl
add
push
out
fldenv
leave
xchg
push
lahf
push
jo
push
adc
adc
fldenv
inc
hlt
cmp
fsubrs
push
and
xchg
outsl
jnp
mov
push
movsl
sub
or
ljmp
xor
dec
popa
test
push
dec
test
xchg
xchg
dec
cli
bound
adc
insl
jnp
or
sub
das
lret
mov
dec
mov
sti
into
cmp
popa
jae
mov
add
jno
cs
cmp
aam
and
inc
out
stc
mov
push
mov
add
test
pop
popa
ficompl
leave
dec
inc
or
fbstp
movb
adc
mov
add
popf
outsl
divl
fildl
arpl
xor
mov
iret
jge
push
popa
roll
mov
sbb
or
pushf
jno
outsl
sbb
out
fsub
out
js
fcomi
jnp
notb
data16
imul
sbb
adc
push
cwtl
dec
pop
push
or
out
sar
in
or
sbb
adc
insb
movsb
or
cmpsb
add
mov
mov
add
stc
out
inc
adc
cmpsb
sub
pushf
sbb
sbb
mov
arpl
ja
or
out
cli
mov
cmpsl
cmpsb
ret
test
adc
data16
mov
stos
rcl
push
ret
ja
inc
push
pushf
xlat
orb
sbb
adc
pusha
push
push
outsb
push
pop
imul
or
pop
jg
test
push
lahf
xchg
mov
ja
mov
adc
sbb
push
jb
xor
mov
ret
jl
aaa
arpl
add
rcrl
add
clc
aaa
xchg
xchg
push
daa
fdivrp
xorl
pop
or
mov
push
sbb
mov
jne
mov
xor
push
inc
dec
out
jp
cmpb
add
jae
jecxz
dec
dec
jno
cmp
pushf
mov
mov
inc
dec
out
jle
int3
nop
adc
test
jae
adc
das
pop
fnstenv
lret
dec
sbbb
lock
mov
in
inc
xor
es
mov
dec
mov
pop
sbb
sub
hlt
dec
cmp
adc
jae
dec
stos
or
pop
pop
test
inc
inc
stos
pop
xchg
out
sub
test
push
cmp
add
cmp
sbb
mov
pop
or
aaa
lcall
and
adc
into
daa
xchg
inc
and
jecxz
lock
adc
push
mov
push
fucomi
pop
xchg
mov
jns
push
cltd
repnz
push
mov
cmpsb
out
or
or
push
mov
fldenv
cltd
scas
dec
fidivrs
jmp
cmp
pop
out
inc
clc
mov
sbb
iret
movlps
adc
jmp
stos
daa
ret
add
addr16
pop
add
push
cmp
mov
add
call
ljmp
inc
insl
hlt
lods
sub
pop
incl
pop
pop
mov
sti
mov
adc
fbld
sahf
daa
lock
dec
and
divb
cmpsl
movsb
stos
and
inc
lcall
jbe
int
sub
jmp
in
test
test
div
adc
jmp
and
lcall
shlb
ljmp
stos
jbe
adc
sbb
insl
push
fsubrl
mulb
stos
arpl
pop
jg
test
mov
xchg
lods
or
mov
mov
pop
lea
lahf
outsl
mov
pop
cld
popf
stos
jo
adc
and
fisttpl
mov
lods
movsl
mov
scas
cmp
push
fadds
xchg
add
je
push
fadds
dec
cmpsl
mov
and
sbb
pop
idiv
xchg
cmp
pop
in
push
pop
pop
adc
xchg
dec
pushf
cltd
adc
dec
mov
jo
add
push
and
imul
mov
push
mov
jno
sub
xchg
insb
into
xor
jmp
or
in
fisubl
add
jne
pop
xlat
out
cld
pusha
fldl
push
fnstcw
sub
out
mov
ljmp
cmp
jno
cmpsb
sub
xchg
push
cmpsb
sbb
mov
loope
pop
sbb
pop
dec
daa
in
mov
in
in
in
pop
mov
out
ret
out
lds
call
adc
sub
mov
rcll
inc
je
call
clc
lret
push
test
imul
xchg
repnz
mov
and
add
sbb
ret
and
mul
daa
and
jnp
mov
lcall
adc
ret
dec
and
dec
mov
sbb
andb
lea
inc
loopne
jge
popa
or
ja
je
inc
mov
sahf
sahf
and
fst
mov
mov
or
popf
lahf
xor
pop
push
sbb
pop
lods
bound
jmp
jnp,pn
adc
rclb
add
add
stos
popl
outsb
or
inc
sbb
imul
mov
mov
xchg
sbbb
cmp
sub
inc
in
rcll
ret
cli
xchg
and
pop
mov
dec
push
rorl
and
xchg
bnd
lods
dec
loop
iret
sti
fmull
or
jmp
push
daa
push
sub
jl
out
sbb
mov
pop
or
dec
sti
in
adcl
test
push
pop
push
cwtl
ljmp
push
mov
push
cmp
jecxz
call
xor
notb
call
xchg
cltd
mov
sbb
push
sar
fwait
bound
out
mov
xchg
add
repnz
and
test
sub
pushf
cmp
mov
loop
pop
jne
cmc
shll
jecxz
repz
mov
decl
inc
cmp
sbb
xor
scas
mov
xor
ret
call
nop
int3
xor
dec
push
fstp
sub
xor
sbb
sbb
push
or
xor
pop
xor
loop
sbb
cmpsb
fdivp
dec
insb
test
pusha
je
es
mov
pop
add
lock
sbb
or
aam
cmp
ja
mov
das
test
or
mov
lret
hlt
sbb
int3
and
pop
addb
int3
pop
cmpsl
dec
aas
in
mov
mov
jmp
sahf
mov
cmp
and
cli
shl
int3
mov
ds
in
and
inc
nop
ret
cwtl
adc
or
and
cmp
jg
repz
jns
dec
fadd
inc
insb
lods
scas
dec
popl
repnz
sub
push
fidivl
mov
mov
rclb
and
add
stos
push
shl
pop
jae
test
ret
adc
mov
femms
pop
fsubrs
stos
insb
mov
cmpsb
push
jo
das
outsb
or
arpl
lret
xchg
sti
cld
mov
pop
sbb
mov
insb
xor
pusha
pop
ja
bound
mov
outsl
icebp
ljmp
loopne
gs
addr16
sarl
inc
sub
pop
sub
jge
jge
sub
sti
test
call
add
pop
fnstcw
fldt
addb
xchg
add
xchg
iret
inc
sub
mov
dec
imull
push
inc
push
mov
aad
insb
fwait
rcll
and
jp
in
adc
outsb
dec
push
daa
ss
sbb
or
sub
or
adc
out
cld
movsl
lea
shll
lahf
into
loopne
fldenv
cmp
lods
dec
sbb
fcmovu
push
xchg
aad
and
xchg
push
data16
jns
data16
xchg
push
adc
add
add
cmp
test
adc
jae
mov
push
movsb
mov
adc
std
pop
mov
mov
adc
sbb
jp
pop
gs
in
leave
sbb
out
imul
les
jl
stc
jo
fwait
test
aam
pop
add
cmc
lods
mov
dec
mov
xchg
pop
mov
ret
out
jnp
test
icebp
movsb
dec
dec
cmp
jbe
sti
xorb
cltd
push
and
cmpsl
and
pop
cli
push
xlat
mov
mov
push
xor
add
dec
push
or
pop
lahf
adc
xchg
insb
lret
pop
pop
fwait
xchg
or
add
lock
shlb
mov
pmovmskb
xor
push
cmc
mov
int
sti
test
push
add
mov
push
sbb
sbb
xchg
in
repnz
adc
movsb
dec
cmp
clc
and
shl
lret
data16
mov
mov
sarl
nop
mov
adc
cmp
daa
dec
jae
mov
iret
pop
cmpsb
repz
add
stos
faddl
pop
lea
mov
lea
mov
sbb
mov
std
cmc
xchg
pop
jle
stos
imul
incl
ds
lock
arpl
stc
insb
lods
popa
dec
nop
les
jle
and
bound
inc
xchg
mov
mov
ror
in
cmp
addr16
inc
push
mov
push
adc
pushf
jb
mov
sub
or
pop
arpl
mov
addl
push
push
sbb
jmp
dec
lea
outsb
jb
faddl
xchg
pop
lahf
inc
enter
lds
popf
imul
push
or
cmc
adc
inc
sub
std
js
loop
arpl
push
sub
popf
movsb
pusha
arpl
je
icebp
cmc
jne
xlat
xchg
stc
das
dec
ret
add
loop
adc
push
xlat
mov
pop
popf
cmpsl
mov
inc
test
int
les
ret
jo
adc
repz
push
cmp
ja
in
fidivrl
fmulp
push
push
xor
outsb
test
mov
lcall
jmp
negb
mov
dec
test
adc
jb
sbb
pop
mov
dec
inc
lods
stos
imul
lahf
mov
xor
jle
bound
imul
push
sti
mov
add
out
iret
ret
scas
push
arpl
das
dec
xor
push
fistpl
jae
add
mov
or
bound
icebp
outsb
adcb
push
aad
push
cmp
insl
push
popf
insb
sarl
xor
push
add
fistl
mov
dec
addr16
mov
ja
loope
imul
pop
clc
leave
push
adc
lds
out
ss
push
dec
jb
sub
mov
mov
pop
dec
test
bound
lds
loopne
mov
les
inc
lret
push
mov
out
and
xlat
inc
insb
mov
hlt
lock
xchg
push
mov
outsb
cmp
sub
jb
xchg
add
nop
popa
adc
mov
mov
out
sbb
into
xchg
fsts
cmpb
fsubs
nop
xchg
inc
jno
shl
or
jle
xchg
pushf
inc
mov
imul
sbbb
xchg
and
loop
dec
mov
movsl
jge
cs
xor
or
sub
jnp
js
sub
cmp
std
mov
mull
push
ja
rcrl
dec
str
jb
scas
ficomps
lods
loope
push
mov
add
mov
subb
sbb
lea
fs
sub
pop
popw
pop
loope
and
or
push
lcall
sbb
mov
dec
add
and
add
movl
mov
and
mov
insb
cmp
daa
idiv
mov
cmpb
or
xchg
pop
imul
popf
mov
push
sbb
loope
enter
fwait
test
mov
mov
jmp
or
scas
or
pushf
imul
mov
inc
push
lret
cmp
in
stc
mov
and
sahf
ja
sahf
stos
fstpl
jge
out
cmc
cmc
scas
repz
lods
lret
mov
scas
fs
cmpsb
repnz
cmp
out
mov
mov
fildl
pop
jg
jbe
push
xchg
or
in
outsl
cmp
cmp
pop
adc
mov
shrl
lret
js
je
ljmp
xor
mulb
cwtl
adcb
out
fbld
cwtl
and
loop
lcall
gs
cltd
jbe
imul
dec
jg
lods
jl
inc
xchg
xchg
jnp
mulb
daa
out
scas
loopne
lea
arpl
sub
jp
lods
push
push
pop
movsl
pop
push
pop
in
mov
repz
lahf
pop
shlb
push
popf
pop
xchg
stos
sbb
sub
test
cmc
fwait
cmp
gs
inc
ffreep
mov
mov
xchg
adc
cmp
mov
in
xchg
or
loop
inc
jge
aaa
icebp
push
jg
mov
add
fmull
repz
nop
sbbl
and
insl
insl
cmc
lret
mov
ljmp
mov
stos
mov
add
or
lods
fidivrl
fnsave
ficomps
sti
jp
add
stos
cmp
push
add
pop
andl
lahf
pop
adc
jno
ss
and
sub
sbb
fsubr
jg
sbb
subl
adc
jp
sub
jmp
cmp
stc
shlb
imul
fnsave
in
jae
xchg
and
cmpsl
insb
repz
jmp
cld
push
pop
subb
mov
outsb
jo
jno
or
inc
fcompl
arpl
lahf
add
jp
jae
divl
enter
mov
inc
cmovb
adc
xor
ja
mov
xor
icebp
and
lods
pop
rorb
inc
mull
arpl
lcall
push
xchg
lock
or
shll
cmp
ja
andl
push
add
lret
pop
les
shr
sub
xor
fldenv
cmp
xor
int3
mov
scas
xor
mov
ret
sbb
xor
jnp
adc
jp
icebp
lcall
xchg
xchg
hlt
addl
pusha
aas
and
pop
lea
cmp
add
xchg
ss
rcrl
inc
push
aad
xlat
push
pop
arpl
push
push
jo
dec
push
cltd
xor
mov
push
ret
jle
popa
dec
addr16
sub
dec
sub
ja
sub
or
lods
jl
rcr
adc
das
jne
adc
and
in
in
mov
dec
fs
andb
scas
lods
ret
xlat
scas
repnz
rorl
jle
jb
jge
int3
les
frstor
cmp
or
daa
repz
add
outsl
fidivs
loopne
dec
pop
dec
jnp
loope
push
in
push
jmp
push
sub
daa
pop
lods
orb
test
and
loope
mov
mov
into
flds
out
cmp
test
inc
ds
xchg
movsb
rol
mov
jl
cmpsl
lods
sbb
mov
fistpll
fdivl
push
aam
xchg
std
int3
popa
sub
sarl
inc
lret
cwtl
jg
hlt
mov
xor
clc
sbb
ss
push
sub
test
scas
cwtl
outsl
cmpb
aad
adc
js
lds
dec
repz
fdivrs
jns
test
js
int3
and
mov
add
add
int3
mov
outsb
sarl
xchg
cld
add
fld1
into
mov
jg
ret
push
mov
test
push
sub
cli
inc
sbb
mov
sbb
mov
add
push
into
mov
xor
ljmp
pop
jo
xor
jns
mov
imul
mov
xor
mov
push
dec
mov
nop
mov
js
mov
loop
hlt
imul
or
sub
mov
add
cmpb
add
lcall
push
std
js
rdpmc
mov
out
xor
cs
arpl
std
inc
std
cmp
aaa
out
ljmp
in
xchg
lds
xlat
ficompl
ja
pusha
add
xor
lahf
data16
dec
adc
and
ja
push
cmpsl
sbb
in
jne
imul
inc
xchg
mov
mov
jmp
and
jmp
jg
mov
adc
xor
and
mov
mov
pop
mov
mov
frstor
add
mov
xor
push
xor
clc
fisubs
das
lea
xor
and
or
dec
rolb
sbb
sub
mov
ja
outsb
adc
in
rcl
test
push
sahf
cmp
mov
or
cmp
xor
insl
popa
jge
dec
and
inc
fisttpll
mov
subl
imul
push
ds
outsl
fisubs
pushf
imul
insb
jmp
sub
mov
je
shll
jle
cli
xchg
pop
shlb
mov
cmp
inc
call
jp
std
in
repnz
or
mov
add
ss
push
lock
std
mov
jns
add
adc
movsb
add
jne
mov
movsb
pop
aam
sub
popf
subb
xor
aad
jno
inc
xchg
adc
insb
arpl
std
inc
fsubp
hlt
jnp
xchg
pusha
rcrb
mov
sub
sbb
enter
mov
dec
iret
cwtl
kmovd
xchg
cmc
adc
jns
cmp
jne
fists
pop
enter
and
sub
in
adc
mov
fstl
das
cmc
xor
sub
addr16
sti
mov
cmp
out
sbb
inc
inc
rcrl
insb
add
scas
popf
js
sub
dec
ss
or
roll
cmp
movsl
jae
cwtl
jg
dec
or
xor
mov
mov
icebp
cmpsl
mov
dec
mov
mov
and
imul
shrb
xor
dec
sar
pop
shll
test
stc
incl
bound
rolb
mov
or
jg
mov
stc
repnz
mov
icebp
pop
pop
mov
scas
jmp
or
iret
mov
out
pop
pop
adc
cld
mov
imul
fs
call
and
dec
inc
cmp
ret
xchg
orb
mov
pop
push
shl
pop
mov
xchg
adc
ds
fadd
cmpsl
cli
or
imul
addr16
and
cmpsl
insl
add
call
outsl
orb
jg
push
xchg
std
std
sbb
int
fnstcw
loop
xlat
lods
xchg
sbb
repz
rcrl
lahf
and
push
clc
mov
sub
insb
insb
out
push
fmull
xchg
dec
jecxz
adc
fistpll
pop
rolb
and
sub
lret
shlb
push
xor
outsb
push
ljmp
push
mov
fnstcw
dec
inc
inc
sti
int3
sub
pop
mov
in
sbb
xor
and
mov
pop
add
out
cmpsl
and
stc
sbbb
std
hlt
fistl
negl
fsubl
stos
push
jo
mov
fistps
jecxz
jo
in
or
lret
out
pop
mov
push
dec
sbb
stos
adc
and
mov
mov
adcb
push
pop
add
es
xchg
xchg
push
pop
cmp
mov
int
test
add
movsb
push
push
dec
pextrw
push
iret
movb
sbb
xor
sbb
andb
sbb
xchg
cmp
push
test
xlat
movsb
andl
push
in
iret
repz
cmp
jo
rorl
add
and
push
sbb
test
data16
sbb
mov
sub
test
rorb
icebp
or
aad
fs
lret
outsb
push
and
out
or
cld
pop
shrb
or
xor
cmp
leavew
je
lcall
aam
push
push
mov
testl
loope
push
insl
fstl
dec
lock
inc
push
and
push
pop
aad
xchg
inc
daa
xor
cltd
outsb
sbb
and
pop
cmpsl
incb
loope
shrl
aas
std
out
in
rcrl
mov
out
push
mov
scas
andl
inc
cmp
outsl
inc
add
test
mov
mov
ficompl
out
cmp
inc
sbb
pop
inc
ret
mov
xchg
push
cltd
adc
js
iret
decl
push
rol
or
fxch
adc
int3
sub
insb
test
xor
adc
mov
pusha
cmp
repnz
add
fimull
imul
cltd
icebp
jbe
mov
inc
push
and
xor
addb
sarl
rolb
ja
leave
mov
call
mov
jle
add
flds
add
clc
pop
incl
or
jns
mov
and
jg
iret
outsl
xorl
xchg
mov
jl
mov
cwtl
adc
mov
scas
mov
inc
cltd
call
stos
ret
sahf
lods
hlt
aam
push
dec
test
sarb
call
lcall
outsl
jbe
or
sahf
cmp
jp
xor
int3
cmc
jno
and
adc
mov
add
mov
in
lea
aaa
xor
rorb
dec
sti
and
sbb
dec
jg
js
mov
push
sarl
mov
call
dec
in
shll
imul
nop
out
or
fstps
and
scas
cwtl
dec
in
imul
cmp
repz
test
push
pop
mov
push
push
xor
leave
scas
mov
xor
and
dec
lcall
data16
dec
mov
jo
jo
shrb
or
test
push
mov
and
inc
and
push
testb
dec
dec
int
push
adc
dec
aas
inc
and
mov
push
fstl
scas
sub
popf
mov
add
int
xchg
mov
call
stos
aaa
outsb
sbb
inc
imul
mov
cmp
cmpl
mov
sbb
insb
cld
jmp
aas
cmc
jne
jecxz
mov
int
mov
loopne
scas
mov
and
sub
cmp
inc
iret
dec
adc
xchg
mov
mov
push
jno
outsl
mov
aam
or
fiadds
mov
call
in
cld
ret
aaa
xchg
popa
insb
stc
orl
pop
xchg
stc
xchg
shlb
mov
push
cmp
sbbl
jae
push
arpl
pushf
aad
mov
cltd
mov
lds
push
aam
cli
mov
iret
cmp
imul
mov
push
mov
mov
pop
enter
scas
inc
jns
mov
mov
in
and
popa
add
movsb
dec
push
aaa
jp
sub
aam
push
addr16
xchg
jg
push
or
mov
imul
les
push
jno
mov
sub
sbb
leave
fldcw
sub
pop
inc
clc
mov
nop
enter
and
and
ljmp
cs
mov
mov
pop
pop
shrb
mov
push
inc
aad
lods
je
lods
clc
lods
mov
pop
push
in
mov
mov
and
xchg
das
pop
shrb
cwtl
pop
ret
inc
or
jbe
or
adc
jge
jb
outsb
jno
cld
pop
stos
sub
in
xchg
xor
sbb
sub
sub
fnstsw
pop
fmulp
dec
dec
xchg
pushf
das
negl
jg
daa
pop
test
pop
mov
xchg
xor
push
int
mov
sbb
dec
add
fdivr
dec
and
in
movsl
xor
inc
fstl
xchg
sahf
ss
hlt
or
adc
mov
mov
lea
inc
xchg
mov
insb
cmp
jg
xchg
les
pop
lds
inc
and
add
and
sbb
pusha
cli
in
mov
or
into
xchg
inc
outsl
ficoml
ss
dec
mov
ljmp
adc
xchg
aad
add
leave
adc
dec
xor
aaa
xchg
cmp
repz
and
jbe
lods
stos
fmull
xchg
aas
mov
leave
xor
add
loopne
pop
or
mov
dec
xchg
dec
pop
and
cmp
hlt
sbb
mov
pop
in
push
push
in
insl
pusha
outsb
dec
mov
pusha
lcall
shlb
outsl
inc
lds
jae
pop
lret
daa
cs
ud0
xchg
mov
loop
aas
int3
sti
push
pop
push
dec
push
aam
dec
inc
xchg
hlt
pop
push
jl
xchg
insb
xchg
cli
add
dec
mov
arpl
hlt
xor
mov
movsl
xor
inc
cmp
loope
in
dec
mov
les
fdivl
js
pop
icebp
inc
jns
dec
pop
mov
lods
outsb
popl
loop
push
in
fwait
cld
push
or
loopne
sti
cld
push
push
fwait
adc
inc
jl
sub
mov
pop
jns
and
jmp
fdivrs
push
int
push
dec
ja
das
mov
adc
xchg
int
daa
popa
loop
xor
fisttps
cltd
cmp
daa
mov
or
sub
loop
into
xor
mov
js
fs
daa
lods
add
xor
mov
pop
add
pushf
mov
cli
add
icebp
imul
test
out
xchg
inc
inc
mov
jp
fwait
jns
add
out
mov
lods
push
jmp
mov
ljmp
adc
and
cs
andb
adc
jne
call
movsb
push
sti
jne
ret
gs
pop
leave
mov
jmp
mov
aad
mov
stos
cwtl
leave
movsl
xchg
ss
sbb
jle
lods
and
inc
jp
js
adc
call
adc
pop
add
adc
cltd
enter
clc
and
dec
cmp
mov
mov
or
xchg
ja
jbe
jp
mov
sarb
stos
and
or
nop
nop
mov
lahf
jecxz
inc
int
aam
rol
inc
or
jmp
xor
jno
inc
mov
or
add
rolb
jne
jne
pop
out
mov
mov
inc
out
arpl
pop
inc
cmc
push
xchg
inc
popa
adc
jae
movsb
or
pop
pop
xchg
mov
push
lcall
adc
insb
inc
leave
std
push
inc
sti
std
les
mov
mov
sbb
jb
cmpsl
cmp
jmp
lds
push
dec
mov
xor
push
push
lret
xchg
mov
icebp
cli
fcomps
gs
sub
inc
stos
add
into
pop
sbb
shlb
inc
mov
bound
push
cmp
inc
or
push
push
cmp
sub
pop
divl
dec
orw
dec
push
inc
mov
ret
pop
mov
add
jnp
mov
fldl
in
or
push
jecxz
bound
fxch
aad
scas
xchg
push
icebp
fs
sub
jno
mov
movsb
cld
mov
xor
xchg
fidivrl
shll
mov
iret
push
push
mov
sbb
lahf
cmp
bound
test
jp
inc
xchg
jae
or
movsb
jnp
mov
jbe
les
out
mov
mov
jnp
pushf
fldt
js
add
inc
adc
adc
imul
push
dec
cmpsl
cmpsl
jge
testb
lcall
jle
in
cltd
insl
lods
fwait
ja
inc
rcrl
les
push
not
mov
sti
dec
dec
ror
mov
sti
adc
pop
sub
stos
test
jmp
cwtl
push
fwait
ljmp
in
shr
sub
shrl
jb
fsubs
pushl
sbb
cmpsl
adc
xchg
int3
test
cld
pusha
inc
int
xchg
pop
pop
push
adc
cs
aam
clc
fisubrl
and
push
mov
jmp
and
sub
dec
out
in
push
lock
inc
xchg
enter
sbb
scas
pusha
cmpsl
in
mov
xor
outsl
adc
dec
test
adc
lock
out
xchg
dec
rcll
test
mov
add
or
loope
push
cld
ss
lds
mov
mov
mov
mov
inc
mov
sub
lret
push
xor
pusha
pushf
aaa
sbb
adc
inc
in
fidivl
test
adcb
adc
sbb
pop
in
in
xor
pusha
es
es
negl
and
orl
clc
scas
lds
ficomps
addb
mov
in
imul
cmp
adc
adc
movb
push
or
xchg
int3
mov
jg
xchg
cli
dec
cmp
inc
mov
lcall
mov
mov
insl
jb
or
test
ds
xchg
cs
movsl
xor
call
out
repnz
popf
adc
pmulhuw
mov
movhps
add
out
jb
jge
test
sub
repz
sbb
push
mov
into
add
sbb
mov
cmp
inc
outsb
lret
cmc
add
cmp
fiadds
popf
inc
push
mov
add
xor
sbb
mov
cld
and
and
int3
ret
add
repz
xorl
adcb
mov
mov
popf
xlat
orb
mov
cmp
push
pop
cld
int3
add
cmc
pop
push
dec
jb
xlat
sub
xchg
sub
shl
fimull
xor
in
scas
sbb
push
adc
cmp
in
push
push
cmpl
push
mov
outsb
out
sub
loop
push
in
lcall
dec
out
jmp
fsub
pushf
not
push
imul
jns
test
scas
out
push
rcr
fisttpl
popf
mov
push
pop
mov
or
ret
aaa
cmpsl
jnp
mov
fcmovb
sub
inc
loopne
mov
push
je
mov
lds
fadd
mov
ret
lds
push
dec
mov
incb
inc
or
int
push
xchg
sbb
push
insb
mov
mov
pop
mov
sbb
push
adc
lds
cmp
mov
lock
mov
cld
xor
ljmp
daa
pop
lods
push
push
popa
or
sbb
sub
add
dec
cli
in
fyl2xp1
add
sbb
jge
sbb
jae
jecxz
sbb
jo
xor
insl
and
subb
ja
or
bound
imul
in
pusha
or
jno
test
jge
loop
clc
push
fnstenv
sbb
sbb
addr16
into
mov
ret
add
xchg
jae
inc
cli
mov
jg
inc
push
arpl
pop
or
sbb
and
movsl
repnz
push
mov
pop
xor
lcall
jno
dec
icebp
mov
jl
xlat
popf
sbb
dec
cmp
lea
mov
mov
mov
shlb
or
rcrl
cli
push
gs
enter
das
lcall
cwtl
cmpb
push
sarl
movsl
jle
inc
mov
and
push
xor
out
stc
cmp
inc
xorb
or
cwtl
in
pusha
adc
rcll
xor
fcmovnb
sbb
int3
pop
roll
dec
add
sbb
out
pop
jae
dec
sarb
mov
sahf
dec
adc
sbb
shrl
lods
sub
je
sub
imul
enter
cwtl
rcll
mov
adc
or
xchg
inc
jns
mov
rcr
out
mov
and
cmp
xlat
mov
or
or
lock
enter
pop
mov
sti
sbb
shl
mov
sbb
and
mov
adc
frstor
jno
imul
ds
and
in
ret
jle
and
daa
out
ja
aaa
ds
cmpb
jne
sub
push
jne
sbb
rol
pop
push
sub
push
mov
and
pop
out
aad
addr16
jae
sbb
and
ret
add
pop
xchg
movsb
jmp
mov
insb
jle
mov
aas
rcr
cmp
addb
xchg
in
cmc
sbb
pop
loopne
rorb
lods
mov
inc
clc
stc
adc
es
xchg
stc
dec
movsl
sbb
push
cmp
daa
mov
sar
int
mov
or
sub
mov
int
lret
jno
in
inc
pop
scas
mov
dec
rorb
dec
push
and
test
adc
jo
mov
push
cmpsb
adc
testb
clc
ret
ds
push
push
fidivrl
cmp
call
outsl
mov
sbb
sbb
pop
jp
mov
add
fbld
cmpsl
cmp
clc
dec
insb
test
ljmp
and
pop
jae
dec
jle
cmp
xchg
push
mov
adc
rol
int3
pop
sti
push
sti
subw
pushf
mov
shrb
fcmovb
movsl
lret
imul
push
add
nop
fnstenv
je
mov
pop
adc
mov
mov
cs
rcll
push
lret
stos
mov
lea
push
xchg
into
add
insb
push
call
sbb
mov
mov
xlat
xor
loop
mov
xchg
adc
mov
gs
jo
test
scas
fistl
fsubs
and
sbb
jbe
je
or
mov
imul
push
mov
sbb
test
orb
cli
aas
aas
pop
or
das
inc
jle
fstpl
dec
and
sub
movsb
adc
cmp
lcall
push
leave
mov
lcall
adc
es
push
repz
cmp
data16
es
xor
sub
jle
push
rcr
cltd
add
jno
pop
repnz
push
add
jbe
test
add
fmul
fidivs
test
out
out
push
xchg
jg
mov
jmp
jmp
dec
adc
fisttpl
nop
rol
push
lret
je
orl
push
xchg
adc
imul
sub
iret
ret
add
insb
jo
dec
or
xchg
mov
sbb
sbb
xor
mov
aas
lret
sbb
push
popf
cltd
jne
shll
loop
pop
pop
adc
das
sub
push
adc
leave
mov
pop
dec
mov
fstpl
add
push
stos
in
xchg
pop
lcall
push
into
in
inc
nop
imul
or
lret
mov
jp
jmp
out
bnd
inc
push
add
cltd
pop
pop
inc
cmc
xlat
dec
xchg
aad
fwait
jge
mov
jge
stos
inc
in
xchg
dec
push
push
or
mov
loope
repz
jno
clc
repnz
pop
fistpll
in
and
lods
movsl
adc
dec
adcl
jo
pop
cmpsb
pushf
mov
sub
adc
negb
ja
push
mov
lods
daa
sbb
and
mov
xchg
jo
mov
fwait
enter
adc
out
cmpb
dec
sub
mov
and
push
movsl
imul
dec
cmp
mov
clc
mov
in
test
inc
icebp
mov
les
push
fsubrs
or
xchg
rcrb
cmp
in
call
pop
shlb
xchg
cmp
mov
arpl
lods
imul
and
sbbb
into
mov
lods
pop
xchg
fnstcw
and
call
xchg
cs
cmp
test
pop
jecxz
nop
xor
jns
dec
cmpsl
jne
js
std
dec
mov
mov
fisubs
adc
adcb
jmp
das
test
cwtl
jno
xchg
ret
ss
mov
mov
inc
pop
push
jns
mov
jne,pn
mov
test
sub
jne
pop
adc
dec
cmc
call
std
jecxz
push
mov
in
sti
xchg
jmp
dec
iret
pop
xchg
aad
mov
in
dec
icebp
out
sub
lcall
xor
mov
insb
ret
xchg
cmp
clc
and
adc
pop
pop
notb
cmp
insb
outsb
mov
sti
xor
sarl
fwait
ss
fiadds
sti
mov
rcl
cmp
sub
test
sub
idivl
push
insl
inc
mov
icebp
push
xor
jl
xchg
lea
xlat
clc
mov
inc
jns
xchg
addr16
push
add
adc
mov
bnd
mov
inc
inc
outsl
leave
loopne
or
ret
or
mov
mov
sbb
add
test
sub
push
and
and
mov
insl
add
xorl
xor
movsb
pop
jmp
jb
xchg
fdivrp
test
loop
xlat
cltd
daa
jae
test
stos
mov
and
lods
lods
lcall
int
outsl
push
sahf
sub
xchg
aas
inc
in
sbb
negl
add
ds
xchg
int3
sbbl
adc
cwtl
mov
cmp
adc
xor
xchg
push
subb
pop
mov
popl
cmp
out
std
jp
cwtl
push
push
xor
test
add
xchg
call
decl
push
std
gs
or
xchg
jl
subb
mov
pop
mov
ljmp
jno
dec
nop
xchg
or
pop
jecxz
add
sahf
or
addr16
in
xchg
adc
cmp
jp
lods
push
lds
outsb
lods
out
sub
mov
inc
or
lods
sub
repz
ret
cmpsl
punpcklwd
mov
or
pop
push
js
cmp
and
xchg
sbb
lret
push
call
sbb
jbe
out
adc
push
or
out
inc
add
enter
xbegin
cld
mov
fstpl
push
mov
push
mov
mov
or
push
lock
mov
lea
push
add
lret
aas
pop
movsb
mov
pop
mov
lock
jns
pop
add
mov
inc
loope
xor
sub
cli
test
and
outsb
cli
std
mov
jg
dec
adc
sbb
arpl
scas
cmp
jnp
xor
stos
jge
adc
popf
pop
test
jg
push
imul
sbb
cmp
lock
xor
push
rcll
cli
setbe
sbb
sub
pop
pop
shll
push
xchg
psubd
cmp
xor
push
icebp
or
subl
inc
into
call
cli
xlat
mov
mov
popa
movsl
push
mov
andl
sti
pop
adc
shrb
aad
fadds
mov
mov
pop
pop
sub
xor
ljmp
pop
cmp
test
insl
cmp
xchg
aad
cmpsl
or
jne
fisubs
or
pusha
pop
lea
pusha
mov
gs
push
lret
fcmovu
mov
mov
mov
pop
loop
pop
mov
cmp
add
cmp
ljmp
adcl
pop
or
add
xlat
mov
mov
ret
pop
cli
data16
pop
cmpsl
data16
dec
mov
popa
or
push
jnp
les
pop
out
cs
mov
mov
mov
sub
out
testl
int
sub
pop
sti
and
push
jmp
fsts
mov
mov
clc
cmp
pop
popa
sub
cmpsl
gs
fstpl
out
pop
out
inc
inc
test
negl
push
inc
xchg
inc
mov
or
mov
or
jmp
cs
loopne
or
xchg
xrelease
hlt
xlat
ljmp
outsl
add
jge
iret
stos
or
adc
addl
or
lahf
sahf
stc
in
mov
push
mov
enter
and
in
pop
xchg
xchg
or
js
test
iret
repnz
ss
test
in
cmp
push
xor
cmp
out
xchg
push
mov
sub
push
xchg
push
push
sub
adc
pop
stos
lret
pop
dec
out
sbb
add
orb
push
mov
fisubrs
and
out
jg
or
pop
jge
scas
and
hlt
in
xchg
fcomps
mov
popa
xchg
jbe
out
xchg
pusha
cmpsl
and
mov
xchg
int
add
inc
addb
sub
fdivrs
mov
shrb
mov
pop
pop
nop
aad
inc
repnz
addl
inc
or
lds
cmp
xchg
push
and
inc
jp
rcrl
xorl
imul
jo
ret
popf
inc
or
mov
imul
enter
pop
and
into
in
fmul
pop
out
cmp
mov
jo
stos
or
xor
sarl
in
pop
mov
repz
das
xchg
in
int3
mov
jp
test
sub
xchg
mov
mov
and
stc
daa
je
test
shl
popf
adcl
ret
rcll
fiaddl
inc
insb
cmp
test
cli
pop
dec
xchg
outsb
out
push
jg
pusha
popf
jb
push
mov
cli
xchg
shr
push
pop
ds
cltd
inc
les
pop
jo
mov
jp
in
add
push
pop
outsl
pop
notb
pusha
sub
and
lret
adc
loop
loope
push
mov
mov
out
into
out
add
dec
sub
rorl
in
lcall
mov
rep
je
fadds
and
ss
sub
pop
subb
pop
loopne
mov
fucompp
out
mov
mov
xchg
add
loopne
mov
lret
adc
add
sbb
sahf
arpl
xor
fisubrs
xlat
xor
inc
adc
sub
cmp
adc
push
jge
imul
sar
leave
push
mov
lcall
xchg
mov
mov
sarl
sbb
sbb
push
lahf
das
mov
fs
mov
sahf
daa
in
out
cs
adc
cmpl
testb
and
dec
mov
or
mov
and
scas
dec
subb
stc
add
popa
addl
mov
or
sbb
fnsave
mov
sbb
or
les
fdiv
lahf
ja
lcall
rcll
mov
jnp
lcall
fisttps
hlt
push
icebp
out
test
mov
outsl
sub
adc
lock
jg
pushf
and
push
inc
push
jmp
subl
in
mov
inc
xchg
cld
out
sbb
pusha
add
popa
loope
setp
loopne
inc
xorl
int3
mov
fwait
int
push
push
shl
add
in
mov
or
lds
xchg
inc
arpl
int
sub
fcomps
outsb
int3
repnz
repz
daa
mov
fidivrs
call
sti
into
in
loope
inc
hlt
mov
sbb
adc
push
push
repnz
mov
shlb
push
mov
pusha
hlt
or
sub
js
pop
inc
mov
xchg
sub
leave
in
outsb
cwtl
cwtl
stc
nop
dec
jno
cmp
and
out
cmpsl
push
jbe,pn
stos
push
movsb
mov
repnz
adc
into
es
std
scas
dec
inc
jmp
lret
cltd
loop
and
inc
adc
xor
push
xor
and
fstl
push
roll
push
inc
aad
ss
jp
xchg
jns
stc
mov
mov
bswap
mov
inc
out
mov
sbb
icebp
testl
sti
sbb
mov
or
out
addl
jge
inc
ja
pop
cmp
sub
adc
cld
push
imul
clc
cmp
insl
call
push
outsl
cltd
mov
xchg
xchg
mov
xchg
xchg
sarl
jo
sbbb
add
hlt
outsl
dec
andb
add
cmp
cmp
addb
jmp
mov
pop
sarb
jl
mov
sbb
mov
xchg
jne
ljmp
aam
push
into
jae
cmp
xchg
xchg
dec
or
cmp
ja
aam
idiv
loopne
or
mov
std
jb
pop
push
and
add
in
pop
lret
sbb
cld
xor
or
ds
xor
or
inc
int
in
mov
stos
lret
cmpb
mov
sahf
nop
add
sbb
inc
adc
aam
mov
mov
out
aas
lea
lret
nop
jno
into
mov
mov
mov
xor
fadds
std
fwait
divb
lret
mov
mov
pop
std
sahf
add
cmc
sbb
lods
dec
imul
add
leave
mov
sbb
arpl
cmpsb
inc
es
movsb
pop
cmc
add
mov
jnp
jl
dec
jg
lock
insl
ret
mov
push
ljmp
jbe
cmpsb
enter
stos
push
das
sub
dec
xchg
and
sub
push
sar
cmp
pop
sar
movsb
mov
add
push
and
xor
sar
add
or
jmp
movsl
dec
mov
or
add
cltd
jecxz
addr16
fadds
jns
inc
mov
cmp
out
mov
adc
xor
mov
add
nop
loope
lock
fwait
xor
arpl
mov
sub
cwtl
jno
mov
or
and
sbb
into
clc
mov
push
leave
call
aam
cmp
pushf
leave
push
xchg
or
mov
out
adc
and
and
jecxz
add
cli
sbb
mov
sbb
pop
mov
mov
clc
movsl
or
xchg
sub
test
test
out
cmp
orl
mov
inc
cmp
sbb
lret
out
imul
imul
repnz
lret
and
test
lahf
xchg
push
xchg
bound
push
loopne
hlt
inc
fdivs
outsl
lods
std
xchg
daa
bound
mov
jbe
movsl
inc
jb
mov
xchg
adc
inc
and
cli
sahf
pop
pop
add
jne
jmp
fwait
into
insl
adc
arpl
mov
pop
loop
in
andl
sbb
pop
sub
mov
loope
cmpl
sbb
fadds
imul
out
sub
addr16
and
inc
pusha
inc
inc
dec
mov
xor
fwait
js
mov
sbb
aam
adc
mov
jno
xor
sbb
fs
add
and
shr
fbstp
movsb
or
mov
shr
xchg
jmp
jno
gs
sub
cmp
xchg
jl
push
pop
movsb
rol
mov
cmpsb
fstps
enter
in
pop
mov
xor
push
das
adc
cmc
nop
not
cli
cmpsb
fwait
divb
ret
das
push
add
int
or
xchg
sub
cmpsl
iret
notl
sbb
lret
insb
jge
cmp
sbb
test
test
push
xchg
leave
inc
mov
or
daa
test
arpl
jp
mov
pusha
sub
dec
daa
stos
das
jg
push
ja
fnstenv
sbb
dec
rcl
mov
push
adc
adc
icebp
cli
in
jecxz
lahf
roll
mov
fisubrs
mov
movsb
lods
xchg
xchg
add
lods
push
fmull
xchg
pop
add
data16
cmpl
pop
lret
orl
andl
out
push
cmp
and
stos
xlat
insb
lods
inc
mov
jbe
scas
ja
jl
cmp
xchg
loop
rorl
xchg
hlt
mov
mov
lods
fnsave
mov
out
out
push
cmpsb
test
mov
mov
pop
mov
adc
loopne
add
ds
push
mov
xor
es
movsb
jecxz
mov
jae
stos
cmpl
pushf
aad
add
leave
ja
push
inc
fcompl
mov
loop
leave
or
outsl
daa
mov
mov
dec
loop
scas
mov
lret
push
push
adc
or
xor
or
icebp
cmp
mov
ljmp
call
and
fimull
orb
xchg
lcall
cmp
rorl
inc
and
movsl
jb
test
xchg
push
mov
je
dec
or
and
sbb
out
shlb
mov
out
fisubl
jg
xchg
js
daa
cld
sbb
jmp
jo
out
and
push
in
mulb
cmp
lods
xchg
jno
insl
dec
arpl
cld
je
inc
pop
mov
mov
in
aam
xor
push
mov
pop
mov
jb
lret
stc
add
pop
mov
mov
push
data16
iret
loope
les
dec
pop
call
sbb
cli
mov
arpl
push
mov
mov
inc
data16
sub
in
adc
into
mov
enter
add
pop
inc
xchg
js
xchg
je
xchg
dec
mov
out
cs
aam
cmp
pop
aad
fs
fnstenv
repz
in
pop
shr
xchg
add
sbb
aaa
xor
call
ds
push
sbb
or
sub
xchg
lea
popf
scas
es
mov
repnz
jbe
inc
jmp
or
inc
add
inc
or
dec
mov
sub
jno
pop
xor
ja
sahf
cwtl
lahf
xor
outsl
jae
stos
call
pop
gs
loopne
ret
pop
icebp
xor
pop
ja
icebp
mov
fsubs
rorl
loop
sub
gs
inc
push
sbb
es
mov
ljmp
enter
add
negl
push
inc
das
sbb
xchg
mov
cmpl
sbb
jg
mov
imul
movsb
pop
insb
xchg
jl
es
cmpsb
lret
sbb
movsb
mov
insl
jge
cli
sbb
int
push
dec
nop
jb
outsl
mov
xor
bound
daa
jno
pop
mov
mull
and
aad
cmpsb
test
movsl
inc
dec
pop
sub
and
pushl
pop
aas
or
movsl
pop
mov
jo
add
pushf
jno
sub
lret
add
cmp
jo
xchg
repnz
stos
xchg
cmp
iret
cwtl
push
jmp
repnz
cld
pop
adcb
inc
push
xchg
cltd
ss
mov
mov
orb
arpl
mov
push
mov
xchg
push
sbbl
push
mov
xor
test
mulb
jnp
ja
int3
sub
rorb
push
push
test
insb
mov
xchg
mov
mov
inc
mov
cmpsb
add
sbb
push
rolb
scas
mov
es
adc
int
fldt
std
xchg
in
mov
or
insb
or
aad
adc
cli
or
sbb
pop
shl
imul
scas
push
cld
subl
clc
sub
jne
xor
or
daa
cli
adc
mov
and
inc
add
mov
mov
gs
ret
xchg
cmc
cmpsl
shll
push
stc
ja
adc
test
in
movsb
imul
pop
mov
jae
popf
stos
aaa
js
jae
or
dec
mov
test
stc
aaa
jg
repnz
daa
mov
jo
dec
jle
clc
jns
pop
dec
push
mov
mov
cmp
shlb
adc
mov
push
pop
fildl
cmp
xchg
lock
jecxz
js
push
pextrw
or
pop
sub
nop
in
xor
das
sti
fwait
pop
push
jge
std
inc
and
jle
ror
loope
push
mov
ret
dec
cli
mov
push
xchg
sub
mov
rcr
lea
adcl
rcr
nop
adcl
push
sub
pushf
shll
ret
fldl
andl
sbb
mov
fs
add
pop
xchg
and
mov
in
push
mov
or
sbb
icebp
je
cmpsl
insb
pop
or
imul
xchg
xchg
jg,pn
adc
scas
pushf
lock
shll
inc
pop
or
push
add
sub
ret
push
into
push
xchg
pop
ljmp
into
fldenv
fs
outsl
jge
in
and
sub
mov
push
mov
aam
imul
cli
loope
shll
push
sbb
adc
in
sub
cmpsl
lahf
ljmp
test
scas
xor
out
push
cmc
mov
sbb
mov
mov
push
push
in
add
or
mov
movsb
fcomip
sbb
xchg
cs
fxch
jns
sarb
test
jge
out
or
int
scas
jle
cmp
lock
lods
adc
cmpsl
dec
sbb
fsts
push
mov
jae
in
cld
pop
push
rcrb
push
add
imul
fsubrl
scas
inc
add
cmc
jae
mov
mov
mov
cmpsl
xor
je
cli
mov
sub
loope
xor
mov
mov
sbb
adc
xchg
add
jg
xor
dec
xchg
lret
dec
out
fcomip
or
cmp
pop
mov
loopne
push
mov
jbe,pt
xor
mov
mov
push
mov
iret
out
lock
push
sbb
push
add
add
xchg
test
mov
sahf
xor
xchg
push
mov
mov
shr
call
sbb
push
cmpsb
ds
ja
cmp
adc
xchg
into
scas
mov
push
fwait
mov
test
test
pop
out
mov
jae
push
cmc
cmpsl
fists
xlat
out
adc
test
or
roll
das
lcall
inc
or
push
clc
scas
inc
aas
push
mov
out
push
xchg
cmp
pop
xchg
inc
jg
add
lods
and
cmp
call
mov
dec
mov
pop
xchg
test
push
addr16
pusha
repnz
cmpsl
and
or
pop
push
mov
in
and
icebp
or
pop
into
loopne
movsl
xor
bound
lret
adc
lcall
push
inc
scas
inc
sub
dec
cmp
mov
rcll
scas
xchg
adc
arpl
sbb
inc
shll
pusha
or
movsb
jbe
stc
inc
popf
mov
xorb
push
scas
xor
enter
mov
cmpsb
nop
ja
lds
add
fldt
mov
cmp
push
cld
xchg
push
lods
sub
std
insb
mov
jnp
xor
pop
adc
dec
mov
push
xchg
xor
and
ret
loope
and
clc
dec
or
js
sbb
adc
mov
dec
aam
mov
test
adc
sti
jae
xor
add
and
js
test
mov
popl
movsb
jne,pt
push
add
cmpsb
fldt
push
adc
out
enter
jo
gs
sbb
adc
loope
push
leave
add
aaa
cmp
mov
cli
or
ja
subb
stos
xchg
into
shlb
mov
insb
int3
add
xchg
adc
sbb
mov
jae
jecxz
idivl
movl
push
push
mov
xor
out
xchg
nop
sub
scas
sbb
clc
repnz
and
jno
pop
mov
rclb
adc
xor
sbb
enter
and
fs
sbb
jge
gs
out
arpl
pop
pop
insb
add
jb
int
lret
mov
in
or
sbb
ret
ljmp
mov
jae
test
lret
in
cmp
pop
div
jns
repnz
rcl
mov
mov
fcmovu
xchg
int
dec
cmp
adc
cmp
xor
cmpsl
js
pop
fnstsw
iret
mov
or
fstpt
add
outsb
xchg
sub
xor
in
xchg
add
cmp
sub
and
push
sti
and
sarb
movb
sti
cmp
add
jo
mov
cmp
xor
pop
add
and
push
adc
jle
jl
pop
dec
and
jno
dec
out
inc
cwtl
mov
lret
or
xor
ret
mov
nop
push
mov
addr16
push
aam
shrb
vorps
jmp
lcall
sahf
imul
xchg
jge
movsl
and
pop
ret
pop
sbb
or
loope
lds
push
sbbb
xlat
cli
cmc
sub
adc
lcall
pushf
xchg
add
das
adcb
adc
scas
lahf
int3
push
push
movsl
lret
lret
cmp
mov
repz
push
mov
sbbl
lcall
inc
push
sbb
inc
jo
mov
xor
or
inc
mov
test
xchg
hlt
fstl
insb
scas
aaa
xor
cmp
jns
adc
fldcw
inc
xchg
xor
jne
add
aaa
push
addb
pop
out
addr16
mov
inc
and
test
aad
xor
push
arpl
cmpl
scas
ja
repz
and
xchg
test
ret
xchg
xchg
pop
cmp
and
ret
test
incl
sbb
pop
push
rorl
push
push
sbb
jg
cmp
lea
aam
out
ret
push
dec
out
xor
mov
push
out
aas
inc
push
xchg
xor
je
cmp
jge
or
pop
aaa
push
dec
stc
mov
mov
ss
in
shl
ljmp
cmpsl
int3
jle
xchg
mov
cmp
imul
xor
fstl
data16
mov
mov
mov
mov
pop
cmp
aad
mov
scas
and
push
pop
arpl
mov
dec
insl
mov
cli
pop
or
dec
add
xchg
mov
mov
or
cmp
mov
nop
cwtl
das
rclb
sub
jo
add
dec
out
dec
adc
push
mov
sub
mov
es
mov
aam
ror
xorps
inc
inc
dec
jo
ds
mov
aam
adc
test
pop
mov
dec
daa
cwtl
lock
test
pop
inc
pop
jge
icebp
in
jnp
sbb
and
add
push
test
adc
das
in
inc
jns
std
jbe
pusha
and
sti
sub
and
aaa
jnp
das
xchg
lcall
test
shlb
sub
fcoms
and
rcll
and
push
in
xchg
sub
inc
repnz
and
test
inc
cmp
mov
dec
and
lret
push
xchg
rorb
outsl
insl
lret
dec
xchg
stos
insl
roll
inc
repnz
std
jb
sub
jno
addr16
mov
movsb
out
jmp
outsl
cwtl
dec
test
push
and
add
stos
mov
test
repnz
cmpsl
inc
sbb
addr16
aam
shrl
in
stc
cld
repz
cmpsb
pop
lods
lods
mov
jb
push
imul
add
imul
xchg
lret
loop
pop
rcll
sub
xlat
xchg
pop
movhps
popf
mov
ljmp
mov
add
jbe
jg
lods
cmp
sarb
clc
les
xchg
and
cmp
xchg
lahf
dec
jg
xchg
loope
xlat
lcall
mov
cmp
enter
xor
call
out
lahf
cli
in
jmp
movsl
or
imul
jb
inc
in
push
adc
iret
shl
dec
loope
push
hlt
psubsb
fwait
mov
and
sti
adc
out
aaa
es
test
inc
jb
test
dec
mov
cmpsl
inc
cmpsb
mov
push
ja
dec
or
jnp
daa
pop
sbb
xor
xchg
xor
mov
dec
sbb
insb
mov
xchg
fstps
jns
xchg
shll
ds
jo
dec
into
or
pop
mov
mov
push
shlb
fbld
pusha
jl
and
inc
pop
enter
mov
dec
mov
lods
xor
mov
jbe
cli
sbb
lds
push
mov
sub
arpl
sbb
lcall
mov
pop
shlb
out
lds
pop
or
cmp
inc
insb
cltd
mov
js
cmpsb
clc
sti
sbb
and
add
and
sbb
or
push
inc
inc
sub
in
xchg
adc
mov
push
mov
outsl
sbb
mov
popa
int3
stos
aaa
sti
inc
mov
xor
or
pop
frstor
cmp
andl
je
mov
inc
mov
fidivrl
push
movsl
mov
fsubrs
enter
sub
js
xchg
xorb
aam
ret
pop
mov
mov
sbb
out
xor
xchg
js
inc
add
js
scas
pop
loop
sahf
pop
mov
popl
notl
mov
lret
imul
insl
dec
ds
pop
repz
insb
sahf
pop
jne
add
cmp
push
test
cmp
sti
push
pop
or
js
jecxz
pusha
outsl
cmp
sub
mov
xchg
jecxz
mov
and
xlat
test
or
push
outsb
xlat
test
mov
insl
sahf
xchg
fisubs
insl
pushf
push
je
and
add
push
sub
inc
inc
in
inc
and
das
pop
adc
xchg
jge
add
sbb
mov
lock
inc
rolb
out
add
das
adc
imul
out
pop
jecxz
jl
ret
pop
je
outsb
cmp
push
test
cli
shl
jecxz
push
jbe
push
add
cwtl
sbb
mov
mov
out
addr16
jb
popf
cmp
rclb
stc
mov
mov
pop
pop
adc
mov
push
xor
pop
stc
imul
cmpl
jbe
fidivrs
add
into
mov
sbb
rorl
stos
or
das
fildll
or
mov
cmc
adc
cmpsl
jl
mov
jl
or
out
ja
lahf
pop
mov
out
mov
mov
xor
test
test
insl
out
stos
lds
sub
cltd
and
xchg
clc
call
dec
aaa
lahf
adc
inc
mov
idivl
sbb
jae
test
xchg
les
jnp
push
nop
bnd
ret
mov
mov
or
xorb
sbb
icebp
and
fsubl
imul
bswap
ds
add
popf
cltd
shl
loope
ja
icebp
imulb
sub
movsb
and
mov
xchg
aas
xchg
jle
imul
push
repz
xor
push
adc
movsl
pop
out
sub
into
mov
cltd
shlb
lds
inc
in
dec
push
in
push
fistpll
or
add
mov
lret
insl
pop
cltd
mov
imul
sbb
pop
jne
mov
imul
cmpsl
es
push
int
mov
mov
subl
je
out
daa
pop
in
fsubs
push
adc
or
aam
push
cmc
sub
imul
repz
add
aaa
in
push
ficompl
lods
jno
mov
in
mov
imul
push
pop
xorb
imulb
cmp
test
mov
mov
mov
sahf
mov
enter
jne
in
sahf
sub
shrl
inc
sub
and
je
and
out
cmc
inc
idivb
push
cmc
sti
or
adc
lods
iret
xlat
or
addr16
pop
mov
xchg
outsl
pop
inc
mov
jp
mov
mov
sbb
push
mov
out
mov
mov
sti
adc
int3
xchg
cmpsl
cmp
scas
mov
push
pop
adc
push
xchg
cmpsb
daa
dec
add
jl
in
and
sub
outsl
lret
orw
xchg
fwait
js
xor
inc
adc
clc
jne
mov
push
data16
add
mov
divl
out
leave
xor
jno
in
cmp
rcrl
mov
lahf
clc
mov
aad
cltd
dec
movsl
and
cmp
es
movsl
fidivrs
bound
sbb
jns
or
jae
jbe
pop
mov
das
jmp
call
pop
inc
and
dec
lods
leave
sbb
cmpsb
lcall
in
repnz
arpl
jne
add
repnz
pop
out
rcl
xchg
jbe
pop
fnsave
out
popf
cltd
cmpsl
inc
xor
addr16
daa
push
jo
rcrl
jle
xchg
xchg
mov
mov
mov
or
dec
scas
loope
sbbb
bound
push
sbb
xchg
addr16
jmp
and
and
cltd
mov
aas
mov
pop
sub
clc
insb
cmp
mov
pop
sub
insl
cmp
rcrl
scas
inc
xchg
or
idivb
jp
adc
pop
decl
repz
add
cmp
dec
loopne
or
fmul
enter
pslld
shlb
adc
xchg
aaa
push
stc
lods
stos
int3
addl
loop
mov
mov
cmpsl
adcl
pop
mov
mov
mov
movsl
xor
add
int
cs
mov
rclb
movsl
outsb
mov
les
sti
cmp
xchg
jae
pop
sub
rcrb
xchg
out
cmp
test
roll
aad
xchg
sub
dec
mov
in
mov
jge
inc
push
mov
lea
je
add
push
into
pop
mov
dec
or
mov
out
sti
dec
sbb
aad
inc
test
xor
xor
outsb
pop
pusha
cmc
push
hlt
pop
and
fcmovu
xchg
adc
orl
pop
pop
insb
scas
push
dec
mov
push
leave
pop
insl
push
jle
cmpsl
lds
mov
dec
pop
es
and
out
je
repz
push
icebp
pop
test
inc
js
and
data16
test
pop
ss
ret
in
sbb
es
jle
aas
add
andb
inc
cmp
cmp
bound
scas
dec
test
xchg
fsts
mov
int3
aad
xor
mov
pop
daa
test
daa
cs
inc
je
or
adc
jns
xor
and
mov
clc
test
sahf
push
push
sahf
xchg
jbe
fmul
and
mov
jbe
add
dec
out
outsl
test
sbb
shl
mov
cmpsl
pop
rorb
adc
arpl
lcall
das
rcll
aad
jo
add
cltd
mov
cli
and
adc
js
sbb
xor
adc
jge
in
xlat
mov
repz
xchg
cs
orl
jmp
or
xchg
out
imul
into
fistps
rcr
add
repz
jg
jl
adc
lock
sbb
inc
mov
sti
int3
dec
dec
test
sti
sub
leave
jle
inc
push
fsubr
add
dec
mov
aam
add
lock
jae
jg
or
int
cmp
mov
outsb
fildll
stos
insb
dec
add
xor
sti
jge
dec
jnp
push
sbb
xor
popf
out
add
mov
jno
movsb
sysexit
xor
sbb
lret
mov
adc
push
xor
dec
int
push
dec
mov
lock
inc
xchg
bound
fadd
scas
jecxz
mov
push
mov
and
shrl
sbb
hlt
cmp
push
bnd
ss
out
pop
pop
cltd
add
push
cltd
xchg
mov
dec
out
std
and
enter
xchg
pop
dec
jg
xchg
mov
cmpsl
sub
js
mov
dec
movsb
add
cmp
sahf
std
shll
fisubrl
rcrl
call
pop
mov
shll
adc
fistps
sbb
sbb
jb
scas
mov
test
adc
mov
sarl
and
mov
int3
popf
lcall
inc
sub
repz
jb
push
clc
sarl
xchg
and
jle
dec
xlat
cli
sbb
mov
pushw
add
in
dec
jb
mov
jno
sbb
cli
leave
jbe
lds
sub
arpl
shll
repnz
push
dec
std
subl
mov
mov
or
ds
jg
ljmp
add
cmpl
sbb
cli
arpl
jg
or
rorb
inc
push
xchg
fsubrl
lds
sar
unpcklps
pop
adc
add
cmp
in
push
or
mov
dec
int
cmp
jbe
aam
js
aas
ja
dec
sub
jl
aaa
mov
pop
stos
jl
inc
jae
nop
stos
mov
leave
icebp
dec
mov
dec
inc
sbb
repz
outsb
lods
cltd
push
dec
mov
jmp
jno
mov
pop
popa
repz
lret
inc
andb
scas
cmp
sbb
subb
inc
fcoms
mov
cmp
add
sub
mov
mov
jb
loopne
jne
dec
insl
mov
bound
arpl
inc
pusha
xor
pop
jge
and
and
pop
mov
fidivrs
aaa
dec
outsb
mov
jns
adc
fnsave
sbb
pop
xor
push
aas
aaa
push
mov
add
pop
test
add
in
or
pop
aas
cmp
mov
test
sub
mov
mov
or
les
pop
xchg
je
loope
imul
push
adc
add
dec
ljmp
mov
pop
pop
fistpll
call
call
jns
push
jne
test
sbb
mov
fsubrl
ret
test
and
popf
shlb
sbbb
push
push
mov
or
cmpsl
cmp
test
lret
cmp
push
add
adc
sub
sarb
fbld
rorb
pusha
movsb
gs
adc
dec
aaa
lods
push
pop
lods
test
in
lds
mulb
inc
sub
and
call
dec
pop
xor
push
xor
xchg
and
lret
mov
mov
pop
push
sbb
xchg
inc
pop
test
sbb
and
rcl
xchg
mov
push
lret
xchg
popa
or
leave
xor
mov
sti
clc
aaa
sarb
sbb
push
test
aas
mov
sarl
fisttpll
lret
xor
into
test
js
adc
loope
pop
adc
sahf
mov
sub
mov
push
outsl
js
test
mov
fmull
pop
xchg
dec
outsl
cmpb
and
movsl
lcall
lods
mov
mov
adc
popf
iret
push
push
imul
jb
push
inc
cmc
adc
xor
loope
jmp
ret
mov
pop
sbb
jecxz
insl
pop
inc
outsl
add
mov
leave
stc
ja
scas
lcall
mov
add
xlat
ja
dec
mov
loopne
xor
mov
push
cmp
and
and
lods
mov
lods
mov
jae
add
test
aam
ja
iret
divl
shlb
add
and
leave
movsl
sub
push
rorb
push
test
sub
arpl
loopne
adc
iret
jno
inc
faddp
sarl
mov
mov
andb
imul
xchg
pop
xor
jge
xchg
pop
jb
idivl
jl
cs
mov
sbb
add
scas
pop
iret
pop
insl
loope
js
ret
shl
int3
mov
adc
bound
scas
mov
lahf
add
push
mov
or
jmp
negl
repz
add
and
sub
int3
sbb
popf
dec
hlt
push
rcll
ss
scas
mov
sti
flds
sbb
xor
jns
push
in
inc
stos
daa
movsb
adc
insl
cli
loope
fwait
mov
stos
mov
xor
jbe
adc
jp
or
add
jmp
mov
int3
rcl
shrl
and
cmp
jb
fsubl
jo
push
int
es
lods
dec
mov
jnp
xchg
lret
ljmp
loopne
jno
jo
or
sbb
jno
addr16
sarl
mov
jge
aas
js
pop
fs
or
shlb
jl
fidivs
loopne
push
bnd
pusha
xchg
xlat
inc
sti
push
jge
pop
out
loopne
xchg
and
in
pop
movsb
mov
dec
pop
mov
lods
pushf
or
ljmp
notb
mov
loopne
aas
aas
popa
sbb
std
or
fdivrl
cli
test
mov
pop
dec
inc
shlb
ficoml
dec
imul
mov
pop
outsl
cmp
jno
mov
xor
xorb
fndisi(8087
jmp
popf
lahf
fisttpl
pop
je
inc
adc
xor
xchg
mov
loopne
sbb
mov
imull
lahf
mov
sub
sbb
mov
je
sbb
in
sti
mov
sbb
cltd
push
xchg
clc
into
fdivrs
xlat
lcall
shrb
lret
fildl
inc
sub
test
out
adc
rcl
repnz
fnstsw
jns
jg
cmpsl
rcll
dec
mov
movsb
push
push
or
repz
out
sbb
lcall
cmpsl
pop
pop
jmp
and
inc
xor
push
int3
dec
mov
jbe
pop
rclb
sahf
mov
mov
fists
loop
dec
add
mov
les
dec
in
add
adc
cmp
cmpsl
pop
js
sbb
test
out
sahf
cmp
or
mov
iret
test
inc
xor
push
imul
lock
pop
loop
das
mov
or
fistl
ss
jp
sub
lahf
cltd
aam
sub
lcall
jle
xlat
dec
lds
or
repz
addr16
fcmovb
lret
insl
hlt
lret
sbb
pop
iret
jnp
xchg
mov
mov
push
testl
or
mov
and
jg
xor
pop
sbb
sbb
out
or
inc
enter
jns
add
std
cmp
add
mov
ret
daa
add
or
jne
push
xchg
pop
xor
xor
aas
lods
imull
es
ss
mov
fwait
or
mov
mov
jmp
jmp
and
ret
xchg
lods
shlb
dec
pop
xor
adc
adcl
ret
pop
push
adc
cmp
les
adc
pop
xchg
in
mov
iret
fcoml
jle
stos
rclb
mov
in
jp
js
sahf
out
insb
mov
mov
cwtl
mov
ror
mov
xchg
push
sbb
mov
stc
and
mov
or
popf
test
jmp
daa
and
es
sub
or
xor
and
adc
rcrl
adc
jnp
imul
inc
cwtl
iret
jno
push
test
push
mov
pop
ds
xor
pop
mov
pop
hlt
or
mov
inc
scas
adc
rorb
fistps
adc
scas
inc
fs
test
in
lock
icebp
sbb
lcall
add
xchg
or
mov
ror
bound
les
push
out
mov
sbb
mov
mov
rcrb
xchg
cmp
data16
movl
ljmp
adc
ds
hlt
xor
fcmovbe
and
fidivs
push
cld
in
in
or
mov
add
cwtl
cmpsb
jbe
pop
push
jnp
pop
out
pop
scas
inc
push
xchg
mov
outsb
aad
aam
push
out
ljmp
sub
mov
fists
pop
mov
lret
jno
int3
inc
repnz
sbb
icebp
xchg
sbbb
adc
popa
roll
mov
mov
sub
repnz
lret
xchg
jg
mov
aam
lock
aaa
adc
mov
ror
xor
mov
mov
jge
mov
pop
sbb
add
loop
jecxz
inc
sbb
ljmp
dec
push
xor
push
stos
mov
fadd
in
jo
xchg
xlat
inc
mulb
sbb
repz
jge
ficompl
or
sub
sbb
or
cmp
pusha
or
stos
push
push
push
push
fsub
lret
outsl
andl
gs
inc
or
adc
and
enter
stos
sub
stos
sbb
jg
out
nop
inc
nop
in
int
sbb
mov
and
lret
aad
push
movsb
mov
and
daa
mov
xchg
sub
mov
dec
push
adc
cmp
push
out
inc
iret
mov
sbb
mov
stos
mov
mov
cmpsb
loopne
stc
push
cmp
outsl
xchg
mov
mulb
pop
jns
adc
ss
out
xor
add
fidivrl
or
insl
or
adc
mov
mov
in
or
mov
loope
lds
sub
sub
outsb
dec
sti
sti
xchg
push
cs
xchg
es
and
pushf
out
add
hlt
xchg
jge
frstor
fldl
in
jno
sti
inc
daa
adc
sub
xchg
arpl
add
xchg
mov
pop
shlb
xor
inc
pop
jo
cmpsl
sub
insl
inc
xor
push
xchg
dec
mov
sti
xchg
daa
into
jl
sub
addb
push
cmpsb
xchg
xor
sbb
lahf
scas
adc
aad
xchg
push
adc
outsb
sbb
xlat
push
and
add
xor
es
cltd
call
sub
imull
mov
lock
sbb
xor
mov
bound
pop
leave
sub
push
cs
inc
jge
xlat
enter
cld
mov
aam
jmp
xorb
cmpsb
sahf
popa
shr
test
stos
sub
jge
push
xor
div
lret
test
cmp
outsl
cmp
rcll
jnp
jp
ja
dec
mov
inc
mov
idivb
sub
loopne
xchg
shll
xor
jge
repnz
pushf
adc
add
clc
dec
scas
call
aam
bound
sbb
mov
and
iret
orb
mov
xor
dec
stos
fs
outsw
lahf
or
mov
push
mov
sbb
sub
mov
add
std
xor
mov
int3
xchg
jns
pop
sbbb
rorl
add
fdivrs
push
inc
js
inc
rorl
popf
iret
add
jle
sub
ds
push
int3
sbb
daa
dec
xor
xchg
sub
aaa
push
inc
sbb
jo
sbb
call
inc
sbb
ljmp
pop
imul
popa
mov
and
pushf
and
scas
pop
pop
cmp
stos
sbb
insl
repnz
jno
mov
sahf
lret
sbb
test
out
xor
push
dec
and
bswap
hlt
xor
pusha
jb
push
int
pusha
jb
jmp
lcall
movsl
loopne
or
fsubrl
xchg
cltd
cld
or
xchg
pushf
pushl
loope
sub
mov
inc
jle
dec
xchg
rcr
xor
or
push
ret
mov
sub
inc
mov
inc
mov
xorl
xor
push
or
adc
and
stos
xchg
ja
adc
in
sbb
push
loopne
inc
into
add
sbb
stc
push
xchg
inc
inc
jg
mov
mov
sub
stc
or
das
movsb
and
xor
jp
imul
pop
cwtl
adcb
inc
aam
mov
push
cmovb
and
fisubs
jb
lahf
jns
aad
jp
jge
sti
push
push
cwtl
insl
scas
jno
inc
sbb
pop
and
xor
neg
adc
outsl
jecxz
lods
sub
push
push
cwtl
mov
or
adc
inc
outsl
cwtl
jp
add
push
stos
iret
in
repnz
xchg
pop
jmp
and
add
out
sub
sahf
mov
mov
push
aas
xchg
pmaxub
insb
adc
jnp
addr16
pop
adc
popa
cli
lods
fsts
ds
jns
ja
or
aad
jb
addr16
test
jbe
cmpb
loope
mov
in
fldt
arpl
jno
inc
adc
push
sub
xlat
push
cmpsb
cmp
add
mov
int
and
adc
jnp
scas
push
cmpsb
add
jp
mov
test
mov
popa
xorl
mov
lock
jne
xor
or
test
mov
bnd
cltd
add
push
stos
in
mov
pop
mov
sahf
jns
stos
add
mov
push
jmp
xor
jmp
sarl
add
fidivrl
jl
outsl
push
pop
jge
adc
and
xchg
outsl
pop
cmp
test
js
add
aam
xchg
jnp
adc
lahf
sbb
and
andl
outsb
mov
push
xor
leave
jl
sub
mov
jp
rclb
push
sub
pop
xor
sub
fisubrs
and
stos
into
push
xchg
mov
and
push
xor
jno
ja
in
cmp
psllq
xor
pop
test
jb
mov
lods
or
js
fidivl
ret
cmpsb
add
jge
dec
pop
mov
fwait
mov
fwait
add
and
subl
out
xor
cwtl
jge
lock
aaa
sub
push
fnsave
xchg
in
out
into
lock
inc
ljmp
adc
ror
daa
sbb
push
orl
out
insl
add
adc
xor
ficompl
test
jno
cmp
or
mov
int3
inc
mov
add
xchg
lcall
in
ljmp
fisttpl
and
add
cli
jecxz
imul
arpl
orb
hlt
leave
jle
imul
adc
into
or
in
in
push
push
xor
mov
add
push
pop
mov
cltd
shr
mov
adc
inc
jnp
cmpl
mov
sbb
aas
shlb
sbb
pop
adc
sbb
pop
cmpsb
incl
loope
out
mov
imul
fdivrs
ret
mov
cmp
dec
leave
imulb
ret
mov
in
das
cmp
sub
dec
out
daa
loopnew
movsl
and
pop
loopne
repz
in
popf
mov
cld
sub
fnstsw
sbb
add
jb
xchg
dec
aaa
sbb
loope
jne
cmc
movsl
push
mov
xchg
mov
jge
repnz
in
lods
mov
or
idivb
nop
xor
ret
mov
sub
xchg
mov
adc
sub
mov
mov
mov
subb
sbb
int
mov
sub
daa
jo
dec
vpsrld
xchg
mov
scas
pop
out
cmp
jnp
hlt
push
out
shll
push
aam
orb
adc
addr16
pop
fistpl
mov
cmp
out
imul
ja
xor
xchg
mov
icebp
sahf
std
js
insl
inc
test
lret
jg
pop
das
orb
push
das
repnz
push
sti
call
cmp
add
jno
sub
mov
in
or
es
or
pushw
add
je
incl
rcrb
sbb
inc
lret
adc
and
int3
jb
mov
xlat
add
aam
jnp
stc
int3
ret
stc
dec
push
adc
cld
or
xchg
das
jne
cwtl
inc
fimull
xchg
aas
cs
mov
adc
test
out
sub
mov
sbb
outsb
inc
xor
push
test
mov
cmp
in
mov
aaa
push
push
ficomps
hlt
stos
mov
das
mov
ret
in
mov
daa
mov
cli
fs
push
inc
xor
add
imul
xor
test
cmp
xchg
mov
push
scas
push
addps
jle
sarl
stc
sahf
cmp
jg
ret
lods
add
jb
enter
into
out
stos
mov
jge
std
sbb
or
popf
popa
push
cs
inc
movsl
pop
movsl
pop
sahf
sub
out
jae
loop
fsincos
ror
push
call
lock
and
cs
orl
js
repnz
lret
outsb
cwtl
sub
inc
cmp
fimull
inc
fcoms
shr
lahf
pusha
mov
jmp
pushf
sbb
dec
add
pushf
xor
aaa
mov
mov
popf
lret
adc
xor
add
adc
inc
push
dec
mov
shrb
sti
inc
pusha
cld
aam
xor
cmpsl
movsb
jge
ret
xor
shl
ss
push
pop
adc
dec
je
js
pop
sbb
fsubl
aas
je
sarb
xor
jmp
xor
test
sub
cmc
jmp
je
mov
add
rcr
xchg
lret
rcrb
notb
inc
mov
xchg
xor
push
fwait
mov
xor
stc
mov
jns
mov
or
cmpsl
pusha
rcll
scas
ja
xor
js
pop
pop
cltd
mov
or
dec
inc
push
pop
test
sub
adc
leave
xchg
pushf
inc
jecxz
subl
xchg
xor
dec
pop
loop
mov
mov
sbb
popf
dec
mov
nop
popf
lods
inc
push
fsubp
push
cmp
movsl
mov
test
jno
sbb
pusha
and
inc
rclb
in
into
xor
cwtl
mov
loope
xchg
fcomi
pop
insb
loop
dec
mov
fs
call
test
outsl
add
cltd
xchg
mov
fucomi
or
add
outsl
mov
sub
out
repz
xchg
mov
mov
jg
add
lret
push
loop
adc
and
das
lcall
in
js
dec
je
xor
mov
adc
pop
inc
lret
in
movsb
lret
rcll
dec
mov
mov
jnp
pop
les
stos
fucomp
and
je
inc
pop
test
data16
pop
dec
jmp
aad
or
ja
pop
cmp
mov
lods
pop
cmp
xchg
ds
and
cmp
add
mulb
sub
addr16
mov
outsb
cmp
push
shll
js
mov
lcall
es
pop
and
pop
mov
stc
and
sub
daa
sub
xor
sbb
jb
xchg
mov
fidivrs
ja
push
inc
and
ds
jmp
sbb
mov
pop
fucomp
push
scas
add
loope
test
inc
jno
outsb
rcr
in
add
rclb
int3
sbb
xchg
stos
shlb
mov
imul
insl
dec
in
pop
lock
mov
push
mov
xor
pushf
cmp
popl
hlt
imul
out
out
xorb
xor
testl
arpl
subps
fcmovu
and
and
cltd
enter
cltd
jno
inc
in
xchg
push
dec
das
add
push
shlb
pop
aad
fs
inc
xchg
cmp
int
sbb
and
mov
cmpsl
popf
mov
sti
pop
jmp
mov
sub
imul
test
inc
jae
cld
mov
mov
or
decl
sbb
or
popa
mov
jle
aam
clc
xlat
fs
inc
rorb
mov
aam
pop
push
pop
jo
test
cmpl
out
dec
adc
mov
or
fstpt
push
addr16
and
or
sbb
aam
leave
dec
sahf
inc
sbb
clc
sub
aaa
inc
xchg
shlb
ja
xor
outsl
jne
jns
dec
inc
sub
dec
inc
lret
fimuls
insb
pushf
inc
mov
fs
rcrl
ja
xor
cmp
and
cmp
in
pop
enter
cmp
cmpsl
mov
mov
xor
rcrb
clc
xorl
cld
add
cmp
popf
dec
divl
mov
sub
dec
fisttpl
cmp
and
adc
movsb
xchg
addr16
cld
adc
mov
sub
sub
iret
bound
and
push
in
mov
jp
test
xor
cs
and
add
lcall
sub
fucomp
jns
into
lods
jno
adc
mov
dec
sbb
ja
dec
nop
pop
test
sti
imul
cmp
jbe
popa
pusha
push
push
xchg
mov
xor
pop
fldcw
fmull
stos
dec
cmpsl
aam
xchg
enter
shlb
pop
pop
or
sbb
mov
call
dec
mov
and
xor
and
mov
pop
stos
adc
test
mov
sbb
test
pop
inc
scas
scas
ret
enter
xchg
xchg
pop
xor
aam
cld
pop
popa
mov
aad
test
inc
pop
sbb
push
add
in
loopne
mov
mov
movsl
in
testb
xlat
mov
or
insl
mov
ljmp
jge
lret
incl
roll
outsl
or
sub
cmp
mov
popf
cwtl
jnp
adc
jl
adc
movsb
sbb
lods
clc
fs
leave
xchg
dec
int
pop
aad
shlb
aaa
in
xor
test
fsubrp
push
scas
rdtsc
pop
jbe
icebp
ds
dec
int3
cmp
loop
or
mov
cmp
adc
inc
addl
or
pop
nop
out
stos
cmp
xchg
negl
push
inc
test
xchg
popf
andb
cmp
cltd
pop
mov
arpl
test
jns
mov
sarl
jnp
ja
cmp
out
sbb
mov
and
add
and
xchg
adc
subl
pop
sti
sbb
std
ljmp
sub
popf
mov
mov
inc
mov
jnp
scas
jne
inc
xchg
jl
imull
cmc
sbb
aad
xchg
rcr
xchg
repz
aaa
xor
insl
xchg
push
fsts
dec
sub
mov
or
call
lods
dec
cltd
scas
adc
andl
push
sbb
push
adc
sbb
mov
leave
sub
je
or
mov
nop
les
rcr
ret
mov
sbb
cli
movsl
arpl
push
iret
pop
pop
sub
out
icebp
test
xor
adc
push
rclb
pop
rclb
mov
movsl
les
hlt
or
mov
sbb
and
aaa
mov
test
jl
mov
push
pop
and
mov
cs
mov
inc
sti
jg
lds
mov
call
jne
mov
xchg
mov
sbb
scas
pop
out
and
push
push
jns
dec
stos
jnp
inc
sub
inc
add
jmp
gs
dec
in
loop
push
ficomps
cmpl
movsb
dec
mov
push
adc
and
lods
fiadds
inc
xorl
test
pop
pop
jo
pushf
out
popf
inc
jne
cmc
mov
into
push
fwait
push
sub
lea
fcom
pop
mov
sub
mov
push
or
jecxz
sub
push
pop
mov
dec
lea
mov
outsl
and
jl
pop
and
xor
popf
sub
dec
or
ja
mov
and
in
fistpl
lret
lock
daa
lea
into
jne
inc
inc
ljmp
mov
pop
dec
and
jecxz
fisubrl
mov
lods
xor
cltd
ljmp
adc
fimull
out
lahf
fucomip
cmp
outsl
mov
and
mov
push
jp
mov
shll
loope
lds
mov
adc
leave
lods
les
inc
adcb
sbb
push
hlt
out
cmp
lret
shrb
or
mov
inc
movsl
push
jecxz
dec
add
stos
push
andb
pop
xor
and
jne
fisubrl
lret
jge
sub
in
and
inc
cmp
scas
push
adc
xchg
xchg
cmpb
rclb
cli
inc
push
and
clc
add
outsb
rcl
adc
xchg
pop
fwait
push
mov
push
and
insb
or
ljmp
mov
mov
cmpsb
push
mov
xor
pop
aam
or
and
push
leave
xchg
xchg
jno
outsl
and
sbb
and
add
add
xchg
lret
xlat
jp
dec
mov
nop
sahf
mov
cmpb
loop
mov
xchg
push
dec
and
in
or
jno
cmpsb
mov
cltd
sbb
test
cld
push
ja
pop
mov
adc
sbb
sti
je
add
and
adc
movsb
movsb
inc
or
in
add
fdivl
je
repz
lahf
lret
stos
roll
fs
mov
sub
sbb
loop
xchg
pop
lea
xor
push
or
arpl
idivl
mov
psrlq
adc
mov
mov
stos
sti
negl
pop
lcall
mov
decb
inc
imulb
popa
mov
push
and
loope
pop
xor
inc
or
pop
sti
mov
add
mov
in
mov
push
cmp
and
inc
jae
adc
dec
mov
jecxz
cmp
cmpsl
jo
mov
and
roll
stos
push
jb
das
pop
fucomip
dec
incl
loop
xchg
mov
sti
add
xor
sti
iret
cmc
aam
mov
hlt
mov
pop
lock
pop
inc
pushf
pop
cmp
or
mov
push
lret
and
sub
fs
jbe
pop
divb
insb
or
movsb
sbb
push
arpl
loope
lea
loop
lock
subb
add
popf
inc
out
push
pop
in
cmpsl
cmp
xchg
dec
or
sahf
out
idivb
push
mov
mov
pop
jg
cmp
xchg
subl
je
rcrl
sub
nop
dec
popa
adc
pop
lock
dec
cmp
inc
stc
or
lods
leave
adc
int3
movsl
int3
xchg
fwait
mov
pop
mov
loopne
xor
shlb
popf
ror
into
pop
addl
jns
adc
rol
rdtsc
or
faddl
shlb
lret
fcmovnbe
lret
inc
mov
and
lcall
sarl
jne
jo
xchg
jl
adc
pop
pop
call
pop
sbb
bound
in
mov
fs
in
xor
cld
xor
push
aas
lret
xorl
jne
insl
cmp
add
pop
in
jle
mov
add
add
dec
neg
mov
dec
stos
pusha
mov
popa
sbb
push
adc
js
and
mov
cwtl
push
popf
imul
add
daa
lret
push
add
cs
adcl
in
std
cli
stos
push
repz
xor
sub
mov
xchg
popa
pop
xorb
cmc
mov
adc
sbb
cmp
and
cmc
loop
ficoml
push
les
bound
xlat
add
push
push
dec
pop
mov
jo
movl
add
dec
mov
ljmp
enter
lret
lods
xchg
stos
stc
ds
jg
loop
and
xchg
adc
lds
imul
mov
in
cli
and
and
cs
ret
sbb
jb,pn
adc
insl
loop
outsb
or
mov
cmp
mov
add
icebp
mov
and
test
adc
mov
sbb
or
pop
lods
jno
cmp
or
mov
cs
movnti
and
sub
stos
xor
adc
decb
mov
test
sub
push
icebp
sub
and
push
addr16
iret
lret
push
cwtl
push
insb
lock
arpl
push
rcll
jl
outsl
lods
jbe
dec
mov
mov
mov
int
out
adc
and
xchg
sbb
jno
mov
or
das
inc
sub
fdivs
jecxz
cmp
filds
and
add
xchg
inc
mov
push
jl
pop
into
aas
int3
mov
xchg
mov
pop
jl
cwtl
xchg
cmpsl
dec
xor
fdivs
nop
push
xchg
loop
dec
dec
pop
push
in
mov
push
adc
pop
adc
push
lcall
popf
mov
cmpsb
stos
fwait
jnp
inc
leave
rclb
mov
lcall
xchg
icebp
xchg
cmp
or
cltd
lret
in
ret
and
or
pop
inc
push
or
sub
mull
imul
repnz
in
in
arpl
mov
loope,pt
test
mov
stos
sbb
aam
push
or
push
fcoml
ret
ss
add
stos
add
and
daa
cmpsl
xchg
lahf
loopne
push
mov
stos
int
cmpsl
movsb
and
adc
xchg
lahf
test
jno
xor
cmp
pop
enter
cmpsl
or
cmp
xor
leave
cmpsb
xor
aaa
aam
push
fcompl
daa
pop
jle
xchg
jne
jecxz
push
enter
inc
cmovnp
sbb
cmp
rcll
jecxz
pop
scas
cld
dec
mov
daa
notb
adc
pop
and
pushf
ja
and
testb
ret
cs
pop
push
jns
jp
ljmp
nop
add
cmp
cld
lods
and
loope
test
sbb
or
push
ret
mov
mov
add
into
fwait
mov
std
scas
and
insl
and
ljmp
jmp
mov
icebp
fwait
loope
loopew
add
mov
fistpl
jbe
mov
xor
mov
xor
push
mov
pop
call
push
addl
dec
aad
pop
in
clc
mov
test
das
insb
push
jbe
ds
mov
insb
mov
loope
lret
add
les
push
or
push
pop
std
pushf
roll
fiadds
enter
xchg
out
lds
dec
sbb
movsb
test
jo
lcall
jg
and
lcall
stc
adc
mov
lahf
gs
cli
or
pusha
clc
add
es
scas
leave
cmp
fwait
mov
ret
pop
dec
or
cmp
enter
jb
imul
mov
rorl
or
fcompl
jle
shlb
xor
inc
gs
jecxz
sub
or
dec
loop
cwtl
push
imul
loopne
outsb
cltd
pop
inc
sub
ffreep
fs
mov
inc
push
fistpl
jb
inc
je
out
adc
hlt
iret
sub
dec
sbb
mov
jle
add
test
je
paddusb
cmp
mov
roll
jmp
outsb
repnz
ja
bound
inc
mov
push
in
adc
push
cltd
out
mov
fs
cmc
add
fs
or
mov
mov
jle
movsl
test
int
rclb
push
imul
mov
mov
repz
mov
aaa
lret
movl
cmp
je
fsubs
mov
mov
popa
inc
div
add
int3
or
sbb
rcrb
mov
or
inc
adc
mov
cmc
test
ljmp
pop
cltd
bnd
aad
adc
pushf
lods
adc
ds
mov
xor
aas
jo
lmsw
push
xchg
int
jo
in
or
jno
lcall
rolb
dec
stos
dec
scas
das
push
popa
sbb
dec
jno
hlt
popa
fiadds
push
mov
movsl
sub
xor
push
xchg
insl
loopne
setb
aas
out
std
iret
dec
inc
cmp
jp
jge
adc
inc
mov
jmp
outsl
push
mov
sub
and
sub
inc
push
xchg
or
fidivrs
fldl
and
mov
pop
sbb
sti
mov
or
aam
pop
popa
xor
les
push
les
mov
js
cmpsl
popw
adc
lcall
test
mov
pop
pop
dec
add
lret
les
lods
lcall
fmull
mov
mov
addr16
fdivrs
rclb
dec
js
push
aad
addr16
inc
xchg
lds
addr16
mov
jns
fs
dec
inc
stc
sti
in
push
pop
xor
enter
call
xchg
stc
data16
push
sbb
mov
popa
stos
push
ror
repz
inc
sub
cmpsb
push
pop
and
test
mov
test
jo
push
and
xor
sahf
loop
je
inc
push
mov
fmul
fildll
inc
lds
jno
jnp
cli
or
pusha
xchg
dec
ret
adc
cld
or
inc
lds
aaa
sbb
loop
and
mov
dec
cs
shlb
jge
das
adc
fcoms
jecxz
shll
dec
inc
loopne
mov
xchg
cld
inc
or
inc
enter
idivl
fidivl
cld
into
icebp
pop
imul
pushf
jge
sbb
mov
rol
loopne
jecxz
mov
iret
bound
lcall
pop
push
xchg
add
push
mov
fstpl
rorl
and
sub
jae
rorb
movb
sub
outsl
stc
mov
loopne
stos
fcomp
xor
enter
lret
out
jle
stos
int3
fwait
pushf
push
push
lret
xor
js
cltd
fdivrs
inc
ljmp
pop
xor
ljmp
hlt
roll
sub
sbb
std
sub
add
inc
pop
mov
jne
dec
cli
imull
jo
scas
pop
out
imul
inc
movsb
pop
iret
pop
arpl
je
out
cmp
xorb
mov
mov
jg,pt
sbb
leave
adc
call
push
cmp
xchg
pop
adc
mov
adc
std
imul
jb
dec
xchg
fsubr
sub
not
inc
pop
clc
mov
push
std
pusha
call
sub
adc
or
addl
jnp
rorb
jle
cmp
push
test
dec
xchg
xchg
sub
cmc
testl
dec
xor
fcoms
nop
xor
insl
and
ret
add
ret
pop
in
dec
inc
dec
xor
xor
adc
shlb
inc
mov
dec
insl
subl
jno
add
ret
or
push
mov
sub
daa
shll
sub
xchg
std
dec
das
adc
sbb
jns
in
push
pop
xor
pop
decl
into
cmpsl
test
cwtl
push
pop
fistl
insl
add
xchg
pop
push
fstpt
movsb
sub
push
outsl
insb
mov
xor
cmp
loop
lods
cmc
and
aam
sbb
ljmp
and
rcrb
pop
js
fiadds
enter
lret
fadd
and
addr16
lcall
cli
rcll
push
lcall
add
sub
mov
in
mov
pop
mov
pop
das
clc
fsubrs
push
pop
jb
enter
lds
insl
lret
ja
jmp
xor
push
stos
in
jnp
xor
mov
xchg
mov
out
push
ret
cld
adc
jecxz
stc
sbb
and
fdivrl
or
cmp
fstpt
sub
mov
add
bound
xchg
pop
xchg
rclb
push
adc
lea
dec
stos
and
bt
jg
xchg
loopne
jo
cld
enter
pop
out
cli
adc
push
jge
lcall
data16
iret
sbbb
inc
mov
incb
sbb
mov
loopne
in
xchg
xor
pop
out
mov
call
fildl
test
adc
dec
jbe
stos
inc
pushf
hlt
xor
mov
adc
pop
stc
inc
shrb
adc
jmp
loop
lahf
jne
out
lock
jl
add
and
addr16
mov
inc
mov
xchg
popa
mov
clc
push
popa
add
shlb
inc
rcrb
pop
jecxz
and
sbb
aas
int3
rcll
cmp
xor
les
dec
jne
incb
mov
sahf
clc
push
xchg
bound
mov
push
dec
loop
loop
mov
push
pop
xor
pop
test
mov
push
arpl
shl
or
in
inc
mov
aad
add
addr16
insl
push
add
pop
out
pushf
lock
rclb
add
and
fdivl
aas
cmovns
stc
pop
fsub
or
iret
loopne
enter
les
cli
pop
cwtl
add
mov
cli
mov
dec
icebp
popf
aas
ljmp
dec
adcl
fildll
loopne
dec
pop
xor
push
jae
mov
cmp
icebp
fmuls
stos
das
pop
jo
in
popf
cmp
jl
dec
sub
dec
add
imul
subb
lret
push
cmpsb
mov
repz
mov
adc
mov
je
xlat
inc
lods
lods
scas
cld
out
push
sbb
addr16
outsl
xchg
add
and
pusha
lcall
push
jge
inc
psubd
iret
jbe
push
push
xchg
test
subb
call
push
icebp
dec
fwait
lcall
adc
cmp
gs
loopw
std
inc
mov
aas
mov
repz
mov
stos
push
das
cmpsl
pop
cmp
mov
sub
out
dec
leave
sbb
ja
jns
xchg
jl
sbb
int
int
pop
mov
inc
in
mov
in
lock
xor
pusha
daa
mov
mov
cmp
es
enter
jp
fmuls
and
push
rolb
and
mov
mov
fnstcw
das
testb
dec
leave
pop
js
popfw
mov
div
sbb
xchg
xchg
stc
dec
mov
shlb
pop
int
cmpl
cltd
push
rolb
and
std
mov
cmpsl
pop
inc
pop
mov
imul
lods
and
test
and
popf
pop
ljmp
mov
xchg
ss
jecxz
cld
push
aam
push
sub
cli
rclb
adc
add
jo
xlat
bound
inc
pop
xchg
pop
xchg
push
aaa
rcrb
mov
xor
xor
adcl
cmp
xchg
js
aas
dec
add
pop
inc
mov
lds
sub
dec
ljmp
push
jmp
jnp
decb
scas
jbe
pop
out
mov
fcmovb
cmp
mov
arpl
jns
or
jnp
push
iret
daa
outsl
or
rcl
inc
add
repnz
dec
into
dec
popa
mov
std
cmp
sub
sub
push
iret
cpuid
imul
mov
add
jp
sbb
lea
into
call
add
outsb
or
lods
iret
dec
dec
imul
xchg
je
fnstsw
scas
or
add
inc
jae
out
insl
nop
popa
outsb
sahf
int3
push
popl
dec
cli
rcrl
sub
dec
lret
adc
xchg
loop
inc
imul
and
popf
jecxz
jo
fisubrl
mov
and
jne
cmpsl
fisttps
jnp
jp
jb
inc
mov
shll
xor
lods
push
ret
scas
push
lods
nop
and
xchg
cmp
or
push
cs
mov
int
jne
hlt
and
mov
cmp
jp
hlt
add
in
popl
hlt
cwtl
cmpsb
mov
or
sub
jp
or
nop
pop
das
inc
test
loop
dec
push
out
in
mov
mov
cmp
sub
scas
push
xorl
fidivl
in
dec
push
mov
jae
add
ja
ss
xlat
mov
sbb
stos
cltd
dec
fwait
and
cmpsb
sbb
out
jmp
ja
jae
adc
test
push
rcrl
mov
sti
push
in
ficompl
lods
fidivrs
fwait
cmp
aas
ja
in
aas
add
icebp
std
movsb
movsb
mov
mov
out
mov
adc
push
jmp
and
cwtl
repz
lods
mul
push
stos
lcall
ja
call
jmp
setae
xor
fstpl
xchg
inc
xchg
cmp
push
or
and
inc
hlt
cmp
shrl
and
adc
das
pop
in
pushf
cmpb
js
ret
xchg
in
in
cwtl
inc
push
jno
sbb
frstor
pop
sub
je
push
leave
int3
mov
inc
in
pop
add
imul
sub
or
bound
insb
pop
std
xor
push
pop
dec
inc
repz
popa
add
push
cmp
shl
push
add
es
jecxz
enter
cmc
stos
in
int
dec
push
cmpsl
scas
lahf
sti
add
fdivrs
mov
aas
call
test
inc
mov
loopne
jl
add
outsl
add
rcrl
stos
mov
decl
ret
dec
add
sub
mov
mov
cmp
pop
imul
cmp
aam
bound
popa
shll
adc
loope
movsl
jg
nop
shr
or
pushf
cmpsl
inc
test
inc
insb
sbb
call
jl
ficomps
mov
jne
dec
loopne
out
jmp
mov
sbb
mov
pop
test
sub
std
fmulp
popf
adc
mov
popa
sbb
icebp
dec
cld
sbb
pop
in
xor
addr16
test
addr16
imul
xchg
hlt
adc
pushf
ret
loopne
and
bound
mov
dec
mov
jl
fisubl
fildl
dec
je
je
test
ds
into
sbb
and
sub
inc
popa
jge
hlt
mov
fisttps
cmpsb
sub
mov
xchg
adc
pop
sbb
mov
arpl
pop
loop
les
fsts
mov
fadds
je
imul
dec
fwait
mov
pop
pop
add
sbb
lock
jnp
sub
fdivrs
ss
test
cmp
aaa
push
push
xchg
or
lret
adc
mov
push
out
xchg
pushf
test
rclb
sub
jge
and
lea
add
les
popf
push
push
mov
xlat
orps
jle
hlt
sahf
dec
or
mov
out
or
loopne
fbstp
inc
xchg
ss
leave
mov
push
inc
adc
cmp
or
jne
push
ror
movsb
clc
adc
mov
jbe
bound
shlb
push
fsubrs
iret
repnz
cltd
insb
mov
add
jns
and
sti
or
in
xchg
test
xor
xor
push
jo
sub
xor
fsts
mov
push
jmp
test
adc
cli
js
mov
inc
pop
loope
or
ja
mov
cwtl
sbb
add
aaa
inc
lds
stc
push
xor
pand
aas
sbb
pop
out
lds
subb
push
popf
push
pop
arpl
lods
fstl
sbb
cmp
testb
jne
inc
pusha
xor
mov
jns
mov
cmp
scas
ds
mov
stos
stc
out
or
in
xor
fmulp
dec
mov
dec
push
outsb
mov
js
int
cmp
xchg
mov
jb
xlat
dec
pusha
push
sbb
sbb
pushf
sbb
or
inc
jbe
add
mov
mov
mov
or
sahf
nop
loopew
sub
and
dec
sbb
mov
inc
pop
adc
jbe
sub
mov
cmpsb
loop
rorl
stc
arpl
mov
shl
pushf
and
mov
mov
add
jae
or
lods
mov
test
or
sub
xor
jo
js
jecxz
test
or
mov
push
xchg
cmp
inc
lods
in
mov
mov
ror
pop
scas
mov
dec
hlt
push
rcr
push
cmpsl
or
out
out
push
fcomp
push
mov
or
cmp
push
repz
enter
mov
push
push
pop
xchg
ret
mov
je
fbld
cli
mov
shl
push
mov
scas
push
adc
std
mov
iret
add
lret
push
inc
mov
cmpsl
jp
cmp
andl
out
pop
mov
adc
jnp
inc
sub
push
negb
nop
xor
int
and
cmp
lds
xchg
and
mov
ret
mov
imul
and
mov
pop
jae
jle
pop
das
sbb
push
and
adc
xchg
jne
in
clc
add
or
push
orb
mov
adc
fcmovb
lret
int
aad
fwait
insb
mov
mov
pop
sbb
xor
mov
cwtl
leave
jbe
push
mov
data16
and
test
sub
mov
xchg
clc
packsswb
out
insb
mov
adc
lcall
pushf
jae
jge
jg
cltd
lahf
imul
aaa
lret
loopne
inc
mov
push
mov
es
push
daa
lds
xor
jbe
xor
sti
fdivrl
popf
xor
lret
lret
xchg
push
call
adc
jg
or
sahf
and
std
push
and
dec
add
fsts
push
shlb
inc
xor
clc
movl
sbb
and
lds
dec
shlb
mov
dec
mov
stos
adcl
ret
or
sbb
and
test
xchg
push
jne
mov
lock
dec
jmp
ja
bound
xor
mov
xchg
pop
insl
sti
xor
inc
mov
addr16
bound
xchg
mov
enter
mov
pop
mov
dec
lret
lcall
mov
scas
inc
xchg
in
jle
bswap
int
lods
fiadds
fldenv
xor
fbstp
addr16
jae
inc
and
iret
mov
jns
nop
test
faddp
push
cmpsl
stos
adc
and
cmp
cwtl
pop
and
push
aas
xlat
push
outsb
das
mov
or
movsl
scas
or
push
out
ds
xlat
xchg
mov
mov
and
sahf
pop
dec
mov
aam
cmp
enter
mov
xchg
mov
cmc
shrl
sbbb
sbb
and
and
enter
aam
imul
pop
es
lock
dec
mov
xor
imul
pop
repz
sub
mov
cwtl
js
js
jg
rcll
dec
mov
hlt
jp
mov
fmull
and
sahf
cmp
ljmp
pop
cmp
xor
xor
mov
inc
sub
mov
es
pop
call
jb
push
pop
push
popf
cmp
xchg
dec
andb
mov
rcrl
jb
mov
mov
or
push
sub
sti
sub
in
loope
jle
add
fcompl
test
and
push
add
popf
rcrl
push
mov
lea
mov
xchg
rorl
jne
push
mov
add
insl
adc
mov
and
push
xor
fdivrs
xchg
lret
xchg
mov
add
xchg
push
mov
lcall
arpl
leave
mov
lahf
add
xchg
popf
ja
cmpsb
rcll
insl
cmp
sahf
cmpsb
sub
orl
jl
icebp
pop
and
mov
call
repz
call
inc
push
xchg
dec
mov
sti
or
mov
and
jnp
fiadds
push
lret
lcall
in
add
sub
outsb
jae
fldl
push
sahf
aas
gs
rorl
lds
test
dec
add
xor
test
test
add
shlb
scas
xchg
cmc
aaa
mov
aaa
test
lods
dec
mov
pushf
inc
jle
push
pushf
insl
jo
dec
mov
aas
jl
rcrb
mov
lds
in
and
lds
adc
stos
push
in
pop
lock
pop
icebp
ss
lds
jecxz
rcrl
cli
mov
xlat
imul
data16
pushf
in
dec
cld
xchg
push
jbe
xchg
sbb
imul
xor
cmp
jns
ss
adc
push
and
leave
add
aaa
cmp
push
sub
mov
movsb
shrb
or
mov
aam
loopne
ljmp
stos
icebp
iret
bound
insb
mov
mov
loopne
cli
cmpsb
popa
ret
xchg
sahf
clc
aam
adc
sarb
dec
pop
ljmp
sbb
flds
imul
push
imul
pop
jbe
lods
andb
push
loop
lea
inc
dec
lret
int3
test
jg
pop
jo
cmc
sbb
dec
cmpsb
pop
mov
jnp
aam
loope
inc
loop
mov
jo
pusha
jne
imul
sbb
aaa
sbb
fcmovnu
mov
jg
popl
loopne
and
or
lahf
dec
ficomps
in
sbb
lahf
pop
scas
mov
ljmp
or
movl
jns
aad
xlat
push
mov
loop
mov
stos
int3
xchg
sbb
lahf
imull
pop
shll
out
cli
jbe,pt
fisttpl
cmp
push
xor
jae
outsl
xchg
xchg
jno
nop
push
adc
dec
adc
fisttpll
pop
inc
lcall
iret
in
xchg
mov
loope
lret
fldenv
fdivrs
and
ret
xor
mov
outsb
push
cld
movsb
les
or
sahf
inc
mov
cmc
aam
movsl
inc
leave
xor
pop
iret
xchg
inc
push
mov
repz
sbb
mov
push
add
js
mov
popa
mov
adc
xchg
dec
mov
sbb
arpl
insl
xchg
cwtl
dec
movsb
jl
xchg
jb
jmp
leave
xor
repz
mov
pop
mov
push
testl
ljmp
aaa
aaa
in
leave
lea
cmp
ret
popf
mov
in
sarb
and
ret
loope
cmc
xchg
cwtl
jmp
daa
int3
jb
das
inc
insl
sub
orl
mov
xor
pop
add
lret
ss
xor
add
sub
xchg
or
jecxz
nop
fdiv
ja
jp
cmp
sbb
jne
fistps
xchg
xchg
bound
rorl
std
sub
push
sub
out
push
or
pop
add
mov
inc
in
test
shrl
rclb
clc
jae
loop
ror
mov
bound
jg
test
icebp
sbb
xor
sub
jae
pop
adc
or
dec
cmp
and
adc
outsl
fcmovbe
inc
pop
dec
enter
inc
xchg
xor
outsb
std
fsubp
int
jns
and
shrb
aam
sub
or
lret
mov
jae
pop
andl
out
fmul
std
cmp
imul
cmc
int3
mov
fidivrs
or
add
iret
dec
mov
pop
ret
push
test
loope
push
ljmp
mov
or
jge
xchg
insb
xor
mov
fwait
inc
cli
dec
adc
movsb
outsb
jne
pop
cmpsl
dec
pushf
adc
xchg
pop
mov
push
pop
repz
in
fcoml
lock
aas
jp
fstp
jnp
xor
inc
pushl
xor
lret
rcll
mov
mov
pmulhrw
out
mov
or
mov
std
aam
bound
mov
xchg
xchg
insb
out
push
mov
mov
add
hlt
add
mov
dec
or
inc
hlt
rolb
mov
sub
cmc
daa
dec
frstor
jns
icebp
aas
and
xor
or
jne
dec
mov
xor
adc
jg
and
add
add
rclb
dec
daa
mov
jmp
mov
std
jbe
dec
fs
inc
inc
mov
dec
clc
in
in
in
xchg
sbb
scas
insb
mov
or
mov
lds
adc
lea
fsts
xor
push
pop
les
mov
dec
inc
dec
cmpsb
and
repz
jl
sub
incl
mov
jle
xlat
jg
inc
inc
and
mov
int
sbb
ds
mov
js
and
jl
lds
dec
xlat
out
dec
or
test
testb
insb
out
lret
push
roll
adc
inc
sub
outsb
inc
mov
ret
mov
mov
inc
sbb
mov
sbb
call
mov
imul
adc
aam
mov
adc
mov
dec
and
cmp
aad
pop
xor
dec
xchg
xchg
nop
sbb
test
in
pop
push
out
clc
mov
xlat
jg
mov
mov
movsb
popf
dec
xor
and
scas
xchg
hlt
mov
cmp
pop
inc
sub
ds
push
cs
inc
jmp
add
jge
and
movsl
pop
xlat
jmp
das
mov
in
negl
xchg
out
mov
xchg
push
xchg
mov
sti
out
cwtl
test
xchg
arpl
iret
testl
test
inc
pusha
loope
pop
push
cltd
jbe
xchg
xlat
stos
fucomi
dec
pop
repnz
xchg
stc
call
mov
push
mov
sbb
mov
das
cmc
cmp
jbe
ljmp
out
mov
test
movsl
lock
dec
and
mov
loope
ss
frstor
fmul
dec
mov
iret
lahf
out
subb
sbb
ret
push
xchg
pop
inc
add
leave
mov
cmpsl
jae
nop
push
inc
fimull
test
xchg
jb
or
mov
and
sbb
ficoml
jge
leave
int
sub
and
popa
out
dec
or
fwait
call
cmp
repz
test
and
mov
mov
lret
pop
jg
js
adc
xor
lret
pop
dec
or
dec
jbe
pusha
shrb
xchg
dec
dec
cltd
nop
sbb
cwtl
mov
inc
ss
pop
mov
cld
and
pop
test
sub
add
or
je
pop
sbb
xor
iret
icebp
jno
das
cmc
add
sbb
add
int3
test
inc
and
pop
cmp
arpl
jnp
cmp
enter
push
push
jge
mov
fwait
xchg
push
or
stos
stos
push
mov
push
mov
in
mov
sbb
aad
imul
push
dec
xchg
or
xchg
add
jne
popf
leave
adc
enter
and
out
cmp
cwtd
inc
les
movsl
insb
sbb
les
pop
les
xor
mov
or
lock
insb
jmp
fstl
pmulhw
ja
cli
lret
insb
in
mov
inc
sub
das
jno
les
dec
stos
adc
jl
in
in
push
ror
mov
add
daa
cmp
je
or
or
loope
iret
xchg
cmpsl
mov
push
gs
hlt
adc
xor
jo
shrl
outsl
xor
adc
or
insl
jge
repnz
sub
gs
loopne
jae
notb
aad
xchg
add
push
les
sbb
lret
aad
inc
mov
notb
dec
mov
sbb
repnz
cmp
pop
push
js
incl
push
jecxz
sub
xchg
pushf
push
xchg
mov
pop
clc
subl
add
or
xchg
in
jo
cs
gs
repz
daa
jge
adc
adc
ret
stos
pop
subl
jmp
push
mov
jle
lret
lret
mov
out
insl
or
repz
sub
xlat
adc
mov
enter
jae
ret
jg
xchg
andb
int
lock
mov
jno
sub
outsb
xchg
sahf
nop
fldcw
scas
mov
ja
or
cmp
xchg
mov
enter
pop
icebp
adc
icebp
fisubrl
stc
sbb
jns
inc
sahf
movsb
push
outsl
ja
jle
push
pop
faddl
jnp
pop
jecxz
push
sub
xlat
mov
testb
sti
test
or
test
in
xchg
cs
int3
rcl
push
adc
xchg
fiadds
movsb
add
mov
adc
or
mov
ror
jp
adcb
mov
push
aaa
int
imulb
lahf
outsb
mov
jl
outsb
insb
mov
shl
cs
or
bound
adc
sbb
or
jbe
aad
xor
imul
test
sub
inc
hlt
pop
pop
push
or
xchg
jmp
ja
adc
xor
push
repz
daa
sub
outsl
rorl
inc
cli
std
xor
pop
aaa
cmp
decb
aas
adc
adc
xor
mov
adc
mov
inc
and
xchg
and
push
mov
lahf
fwait
jge
aas
sbb
inc
in
repnz
inc
jae
push
or
push
jb
jo
sbb
leave
push
imul
into
pop
ss
push
push
movsb
push
leave
mov
es
push
pop
xchg
imul
cmpb
mov
cmp
jns
lahf
das
scas
xor
mov
imul
adc
sub
cmp
testb
mov
stos
addr16
mov
test
ljmp
xor
cltd
jp
ror
add
add
mov
sub
shl
xchg
clc
scas
mov
repz
and
pop
xchg
adc
sub
push
fnstsw
ret
stc
ret
push
push
mov
sbb
xchg
out
lock
sub
xlat
int
cmpb
test
cmp
mov
subl
andb
leave
lea
and
lcall
lret
jmp
bound
in
sbb
mov
fisubrs
aad
icebp
aad
sbb
out
ss
hlt
pop
enter
cmp
lods
mov
movsl
mov
xlat
inc
sub
pop
push
xchg
std
mov
ljmp
push
jle
or
xor
andl
imul
add
jge
mov
add
or
sub
scas
psrld
push
clc
and
out
mov
int
jo
daa
aaa
cwtl
repz
jo
in
rcrb
xchg
sub
aas
sbbl
std
ja
mov
test
sub
lock
xchg
xchg
dec
ret
js
fldt
nop
insb
add
adc
mov
dec
mov
lret
mov
enter
clc
or
and
jl
and
aad
andl
js
sti
jo
testl
in
inc
cmpb
pandn
repz
sbb
lret
int
hlt
xchg
lahf
inc
rol
jmp
add
xlat
cwtl
addl
cmc
xor
mov
arpl
push
sbb
add
test
push
rcrl
mov
push
mov
into
and
scas
mov
push
cltd
mov
test
repnz
aam
idiv
scas
push
lret
arpl
cmp
shlb
test
out
ss
add
cmp
and
jecxz
pop
arpl
sub
jmp
cwtl
push
stos
push
jle
xchg
insb
add
mov
dec
cmc
mov
mov
jp
loopne
sbb
aad
outsl
jle
push
xor
fimull
push
lahf
cmp
enter
mov
add
mov
mov
aaa
push
adc
xorb
mov
cmp
into
lret
pop
jge
sub
or
or
iret
ret
roll
sbb
xchg
cld
popl
aaa
mov
mov
addr16
mov
inc
mov
mov
or
pop
call
or
cmp
add
and
xor
mov
mov
lock
cmp
jge
in
inc
addl
pop
movsl
jl
fisubs
cmc
mov
or
addr16
test
les
js
les
rolb
nopl
xor
xchg
jle
inc
sbb
repnz
adc
scas
imul
cld
jmp
mov
pop
lock
lahf
mov
dec
mov
sub
sub
das
insb
pop
test
and
fsubs
adc
frstor
ljmp
hlt
in
mov
xchg
jbe
inc
aaa
inc
cmp
sarl
and
lock
and
jo
outsb
lds
cld
mov
mov
lock
lcall
cmp
cmp
adc
pop
loope
push
imulb
cmp
sbb
jmp
pop
shrb
cmc
sahf
lods
pop
loop
xchg
outsb
out
mov
ds
or
jne
pop
mov
add
cwtl
sub
adc
mov
outsb
xchg
repnz
nop
mov
outsl
cmp
cmp
stos
jae
mov
or
imul
push
jae
cmp
shll
nop
adc
push
push
aaa
push
popa
mov
call
in
xor
lea
xchg
mov
loop
adc
and
outsb
sbb
push
mov
xchg
imull
xchg
push
stos
dec
cmpsb
jnp
dec
or
outsb
les
jns
add
or
push
push
push
mov
adc
add
push
mov
aas
or
dec
lods
pop
lcall
fadd
add
xor
or
xchg
hlt
in
insb
jmp
js
fucomp
add
fmull
into
imul
mov
das
jge
imul
and
jmp
cltd
cld
push
out
pop
mov
iret
xor
push
jle
jmp
xchg
push
and
stc
mov
or
sbb
push
jecxz
enter
push
inc
insl
sub
fisubl
daa
les
lea
cltd
xchg
cld
ja
or
lahf
ljmp
adc
mov
push
and
in
xchg
xchg
cmp
jnp
cmp
out
push
js
cli
movsl
sbb
out
mov
xor
xchg
xlat
cwtl
in
mov
loope
add
mov
shrb
addr16
iret
jmp
jo
xor
adc
ja
and
lret
stos
popf
adc
fwait
in
adc
es
sbb
fdivl
test
cltd
sub
lds
and
subb
stos
pop
add
xchg
jae
sbb
adc
xchg
inc
incb
push
js
fistl
cmpb
add
xor
dec
pop
insb
lods
add
mov
xchg
loopne
xchg
cld
sti
sub
cmp
movsb
xchg
sub
pop
es
ret
sub
int
mov
loope
test
jle
lret
insb
xchg
inc
inc
repnz
or
mov
sti
lcall
js
push
add
scas
data16
sub
mov
inc
pop
pop
add
mov
xor
test
mov
fisttps
mov
pop
lds
outsb
sub
loopne
ss
hlt
mov
sub
clc
xchg
push
xor
adc
mov
sub
sahf
loop
fildl
mov
inc
hlt
cmp
cmpsl
aaa
inc
insb
insl
hlt
test
in
or
bound
mov
sub
lahf
lds
js
jecxz
gs
adc
in
es
movsb
cmp
popa
xchg
sub
leave
adc
stos
mov
jp
jmp
imul
sarb
movsl
jb
sbb
sub
out
mov
push
adc
xchg
xchg
arpl
ret
mov
in
xor
into
into
push
mov
jbe
mov
pop
scas
movsl
mov
push
pop
add
adcl
adc
lret
push
mov
jg
sub
fiaddl
ret
bound
jbe
aad
or
test
mov
das
mov
mull
cmpsb
js
mov
subl
mov
inc
ds
popa
lahf
cmpsl
in
fbld
add
adc
mov
adc
lods
pop
mov
xor
or
aas
sub
fnstenv
fsubrs
jns
ror
dec
lret
jg
mov
out
fxch
pop
push
cs
fcoms
shlb
mov
addl
dec
stos
push
push
mov
insl
mov
jecxz
enter
pop
pop
push
dec
inc
cwtl
shr
in
aad
add
rorb
frstor
inc
ljmp
pusha
popf
or
sub
imul
and
aam
mov
sbb
mov
repz
call
outsb
jmp
dec
ret
cmpsl
cmpsb
mov
std
pop
adc
movsb
xchg
mov
jnp
clc
das
push
fsubs
and
fwait
sbb
icebp
test
out
enter
negb
mov
ret
push
xchg
adc
movsl
pop
dec
sub
rorl
jne
sbb
push
flds
push
cli
pop
imul
push
push
cmpsl
push
mov
loopne
int
inc
or
xor
popa
arpl
loope
out
rcr
and
adcb
inc
out
es
adc
sti
pop
icebp
dec
imul
popa
pop
nop
movsb
shl
dec
inc
jp
inc
lret
push
cmc
jge
jge,pn
out
pop
movsb
push
icebp
hlt
or
cli
stos
sbb
adc
lods
adc
cmp
jns
cmp
js
and
lods
sbb
jge
test
mov
pop
sbb
dec
hlt
ds
mov
in
outsl
test
ret
test
xchg
xchg
sub
outsl
cmpsb
pop
add
add
xor
fdivr
std
cld
fwait
pushf
js
scas
mov
fstl
out
jmp
or
and
push
mov
jne
adc
push
lods
subb
inc
jb
mul
fstl
jmp
add
cmp
std
add
xor
lret
arpl
xchg
sbb
aas
cltd
or
mov
addb
xchg
bound
pop
outsb
lcall
hlt
paddsw
jp
in
sub
clc
fsubrl
sbb
movsl
push
iret
jno
pushf
repz
iret
push
and
aaa
mov
mov
loopne
xor
dec
mov
mov
mov
sbb
jnp
aas
pop
xchg
pop
xchg
jbe,pn
jne
sbb
cltd
lea
cs
xor
int
mov
repz
sub
mov
push
outsb
xor
rorb
sarl
jecxz
push
pop
push
daa
es
cmp
pushf
mov
inc
es
jge
addr16
jno
lcall
adc
inc
inc
xor
xor
pop
or
and
pop
das
fimuls
shrd
pop
pop
gs
roll
push
or
pushf
outsb
das
stc
sti
scas
sahf
pop
clc
shl
cltd
xchg
adc
ret
sbb
dec
js
jb
gs
pop
jns
cmp
mov
dec
repnz
and
pextrw
scas
mov
add
mov
cwtl
mov
or
push
loop
mov
rcl
rclb
clc
jge
cmp
imul
sti
aad
jg
dec
and
pop
iret
sbb
jge
ret
fiadds
mov
jae
std
mov
jno
repz
pop
data16
das
shrl
jno
inc
mov
or
js
jle
push
rcll
test
add
stos
shrl
mov
sbb
fsubl
mov
cld
jl
ror
add
imull
int3
lea
mov
ja
push
sub
push
imul
ljmp
es
jmp
add
jge
data16
xchg
out
inc
inc
fs
or
mov
aaa
daa
or
cld
add
jb
stos
mov
mov
aam
rcr
mov
cmc
out
inc
xchg
mov
aam
dec
or
jo
sub
cmp
lods
dec
mov
mov
ss
das
xor
fmull
push
movb
sahf
insl
loope
adc
repnz
sbb
out
add
lods
push
adc
cmc
lods
pop
mov
pop
add
clc
inc
scas
loop
jb
data16
lret
jbe
pusha
movsl
cwtl
scas
dec
pop
es
cmp
cmp
sar
dec
mov
adc
stos
shll
mov
dec
push
fsubs
pop
mov
insl
push
and
mov
xchg
out
neg
cmp
push
repnz
push
fidivs
leave
cld
movsl
cmpsl
and
add
sub
je
cmp
push
adcb
aam
fs
xchg
mov
add
sbb
aas
out
fsts
sub
aad
dec
inc
mov
dec
lds
jnp
stos
pop
and
lods
and
fs
cmp
mov
in
out
mov
cltd
xor
xchg
xchg
les
jge
dec
jno
xor
fisubrl
in
jne
in
cs
in
pop
mov
movsb
xlat
loope
xchg
push
aas
or
and
inc
fwait
mov
das
call
sbb
das
fnstcw
jp
cli
in
mov
out
sbb
push
cmp
push
and
es
sub
mov
bound
and
lahf
sub
xchg
inc
dec
mov
mov
mov
cmp
out
pop
lods
dec
fldenv
dec
repz
test
aas
lcall
push
push
cmp
jne
dec
outsb
sbb
in
in
sbb
jae
pop
xchg
ljmp
adc
sbb
push
mov
inc
mov
sub
adcl
jl
sahf
jnp
nop
jmp
ljmp
mov
inc
mov
sub
cmp
push
cltd
pop
sbb
pop
jle
xchg
or
jns
bound
cld
ror
push
test
pop
xor
cmp
out
mov
jb
mov
push
jmp
cmp
mov
into
mov
push
icebp
adc
pushf
jbe
pop
fsts
cmpsl
into
popf
rcl
aam
sub
add
jmp
and
pop
inc
cmp
leave
int
call
stos
stos
push
fmull
es
xchg
loope
imul
pushf
stos
sub
insb
loop
fimull
ret
ret
mov
sbb
jo
lea
imul
inc
pop
jae
mov
scas
xchg
xor
popf
call
jns
jbe
shrb
sub
xchg
negl
fmuls
jg
mov
adc
ja
jle
movsl
add
sbb
packsswb
add
repz
aam
shrl
cwtl
mov
fmul
rclb
mov
aas
es
or
and
and
cli
xchg
xchg
aad
push
bound
outsl
stc
fcom
sub
push
rcrb
outsb
shll
fldl
dec
jo
sbb
je
loop
mov
mov
mov
inc
inc
push
mov
pop
js
add
mov
andb
aas
sub
cmpl
fldt
js
mov
out
pop
mov
js
xor
int
outsb
div
fdivs
inc
int
push
mov
sub
push
push
dec
stos
pcmpgtb
push
add
pop
push
pushf
pop
and
ljmp
mov
mov
out
push
and
std
je
popf
lahf
mov
aam
clc
pop
push
mov
cmpsl
xor
lods
loope
inc
pop
inc
jno
mov
xchg
sub
xor
loopne
repnz
push
mov
into
into
cmpsb
in
xchg
jne,pt
test
xchg
jp
movsb
aas
je
int3
dec
and
cltd
subl
sbb
int
jp
pop
scas
or
lock
aad
and
and
cmpsl
inc
jmp
bound
jae
jle
bound
int3
sti
cmp
outsl
adc
xchg
mov
movsb
and
repnz
dec
mov
sub
outsl
loop
inc
adc
push
push
out
cmp
cmc
lods
and
dec
fadd
mov
adc
aam
lods
mov
xchg
or
scas
or
dec
rcr
scas
into
jae
inc
adcb
jge
repnz
mov
je
pop
movsb
sbb
div
rcrb
stc
loop
sub
insl
ret
cltd
add
jl
adc
mov
pop
ret
xchg
mov
pop
loop
sbb
lret
test
clc
cmp
cmp
popf
push
data16
jae
sub
rcll
xchg
xchg
or
sub
into
jp
mov
add
jb
mov
jae
mov
shlb
std
sbb
test
mov
dec
xchg
jp
out
mov
fmuls
inc
fcoms
add
out
add
sub
test
stos
stc
test
pop
std
or
jecxz
sub
xchg
add
and
jb
ja
addr16
mov
ja
mov
shrb
hlt
xor
and
les
mov
xchg
cmpsb
xchg
js
in
dec
sarb
adc
mov
rcrl
xchg
and
rclb
pop
mov
jmp
dec
or
fyl2x
scas
fimuls
mov
inc
or
push
fcomi
imull
scas
push
sar
fnstsw
test
jmp
inc
cld
add
jge
pop
inc
push
pop
repz
loope
mov
and
cld
pop
nop
inc
xchg
pop
les
lds
inc
ds
jae
shrl
rcr
jecxz
inc
shlb
push
sbb
push
pop
fst
jae
lock
sbb
push
scas
cmp
mov
push
mov
sbb
faddp
xchg
gs
dec
nop
int
cmp
sbb
clc
scas
mov
mov
cwtl
out
cmc
dec
xor
push
add
and
mov
fidivrl
sar
out
fistl
xor
mov
xor
push
sar
imul
fmuls
push
fnsave
clc
loopne
fcomps
scas
xchg
mov
add
pop
leave
iret
nop
cltd
sbb
or
pop
mov
cmp
and
popa
cmc
dec
mov
pavgw
xchg
mov
arpl
push
dec
jae
in
cwtl
imulb
repz
xchg
and
sti
push
in
cmp
push
andb
jg
in
sub
jns
push
mov
and
add
mov
lret
arpl
add
pop
dec
adc
cld
cli
fsubs
rcrl
lea
and
jne
xchg
cvtdq2ps
incl
adc
cmp
mov
or
pop
lock
jae
stc
jp
mov
popa
aad
scas
or
jne
sub
mov
out
cld
fistpl
sub
push
cs
lock
push
cmpsl
outsl
or
push
cmpsl
mov
rcl
lret
adc
repz
lahf
pop
push
or
xchg
xchg
add
aas
std
mov
push
xorl
mov
jle
femms
push
mov
cld
inc
xor
pop
arpl
xchg
add
adc
jb
repz
jecxz
mov
cmp
nop
lods
push
lds
aaa
test
daa
cmp
subl
sbb
pop
insl
push
jecxz
cld
fdiv
pop
int3
push
div
je
shrl
subl
sub
mov
mov
fisttps
into
mov
test
jne
leave
movsb
repnz
mov
mov
inc
adc
add
cmp
rorl
addl
jbe
aad
xor
loopne
mov
mov
pop
std
out
and
rol
mov
dec
mov
add
pop
scas
add
push
push
dec
xchg
jns
neg
and
pop
fisubl
pop
aas
push
adc
lret
pop
nop
lods
sti
out
cli
cld
popf
xchg
in
cli
outsb
or
in
jno
mov
sti
fsubr
dec
js
loopne
mov
sbb
sub
lods
adc
fisttpl
call
jae
cltd
scas
dec
jnp
adc
imul
push
sbb
xchg
lods
test
mov
loopne
lods
cli
inc
sarl
jae
fdivrs
pop
mov
fldt
js
push
mov
pop
enter
jae
pop
dec
loope
test
mov
test
out
add
or
push
push
add
jo
xchg
inc
jecxz
jno
xchg
jle
sbb
inc
add
pop
daa
popf
dec
out
aad
icebp
dec
inc
test
jo
adc
pop
nop
mov
ljmp
xchg
insb
pop
stos
sti
arpl
sub
dec
inc
or
cld
xor
add
daa
test
sbb
stc
push
repz
xchg
cmp
iret
cwtl
cmp
lcall
fwait
inc
and
adc
jecxz
mov
add
into
repz
scas
mov
std
xor
push
xchg
mov
xor
dec
pop
lea
dec
insb
fs
mov
or
daa
mov
in
add
mov
lret
loope
leave
mov
std
fs
xchg
add
jb
xchg
xchg
xchg
cmp
jb
test
repz
xor
iret
sbb
xchg
add
rol
sbb
loop
adc
xor
les
call
aam
ds
lock
cmp
inc
adc
pop
add
xlat
pop
lock
mov
movsb
mov
add
push
ffreep
pop
mov
cmp
pop
outsb
stc
xchg
ret
outsb
cmpsl
das
int
add
pop
sahf
xchg
fcom
pop
push
cmp
and
call
add
cmc
je
inc
jg
loop
adc
arpl
cwtl
inc
mov
inc
mov
and
sub
nop
lods
add
jno
or
call
sar
repz
pop
outsb
aad
xlat
push
xor
insb
adc
mov
cmpsb
sub
shrb
pop
xchg
jg
pop
inc
jo
sahf
add
lret
enter
fsubr
lods
pop
dec
movsl
inc
loop
inc
dec
mov
cld
push
adcb
data16
sti
lahf
push
mov
adc
lret
mov
scas
mov
push
leave
lock
xchg
inc
lahf
lret
jg
add
mov
hlt
sub
sbb
mov
inc
pusha
iret
call
adc
add
cmp
sub
add
ficompl
pop
xchg
xor
fs
repz
popf
sbb
adc
fs
pop
in
in
jne
fildl
lods
jno
movsl
adc
stos
cmpsb
stos
popf
pop
movsl
xchg
imul
in
push
pop
shl
je
push
xor
jmp
mov
mov
mov
xchg
xorl
js
hlt
push
sbb
lods
test
and
dec
pusha
jbe
in
pop
lods
pop
repnz
pop
call
sbb
jg
push
outsl
cli
insl
push
sbb
pushf
cmp
push
int
xor
sub
xorl
aad
jno
cli
fucomip
es
insl
mov
int3
subb
std
or
icebp
push
xor
xchg
mov
inc
adc
inc
jl
push
and
add
xchg
jae
pop
lods
shrb
mov
mov
pop
jmp
sub
xchg
ja
incl
loopne
mov
idivb
mov
and
jae
or
je
xor
mov
subl
out
sbb
scas
add
add
inc
mov
adc
mov
imul
jae
out
lcall
and
jbe
pushf
adc
stos
test
icebp
push
scas
push
adc
lock
mov
scas
sub
xor
stos
test
push
sbb
shl
test
orl
fcoml
gs
ds
test
outsl
fdivs
insb
mov
and
or
ds
stos
add
in
pop
inc
dec
clc
jnp
push
nop
xchg
fsubl
jmp
cmp
add
sahf
sbb
and
pop
xor
xchg
lods
insb
fidivl
into
cmp
xchg
shlb
shlb
shl
pop
cld
repz
add
enter
testl
adc
xchg
xchg
and
pop
std
test
pop
mov
inc
jp
aad
call
fsts
sbb
sub
sub
ret
inc
pusha
ds
or
scas
and
cmp
in
jge
mov
xchg
xchg
arpl
or
outsb
fimull
pop
mov
push
test
daa
pop
xchg
cmpsb
mov
sarb
sbb
xor
adc
lret
pop
scas
out
pcmpeqw
sub
sub
pop
rcrl
lods
adc
or
shll
stc
mov
jp
inc
or
sbb
in
stc
xor
jl
xchg
cmp
loopne
inc
push
push
fimuls
cmp
lahf
ret
lods
mov
shrb
jns
xor
lret
popf
fwait
test
imul
dec
and
cli
mov
xor
jl
fidivrs
mov
lahf
mov
cli
sbb
mov
cmc
pushf
cmp
inc
ja
inc
pusha
inc
daa
jl
cmpsb
and
and
cmp
mov
or
shll
clc
cwtl
sub
mov
inc
in
cltd
fadd
dec
push
icebp
hlt
adc
xchg
push
lcall
lahf
stos
mov
inc
in
push
nop
test
sbb
mov
in
jno
xor
fsubs
stos
incl
dec
dec
dec
jl
inc
outsl
xlat
sub
das
and
divl
mov
xchg
addr16
jge
xlat
scas
pop
jmp
rolb
or
lcall
js
popf
imul
cmpsb
sub
or
pushf
loop
faddp
and
sbb
or
add
mov
cmp
adc
lock
jno
movsl
aas
mov
cwtl
jns
scas
mov
xchg
movsl
fs
push
jmp
mov
xchg
sbb
dec
iret
pusha
scas
pop
ror
mov
xchg
inc
adc
out
imul
ret
push
fidivs
mov
dec
sub
xchg
sti
inc
aam
andb
sbb
pusha
cli
mov
lahf
mov
and
imul
ss
ret
cmp
lock
leave
aaa
ja
inc
or
xchg
add
mov
add
inc
sbb
je
add
lcall
mov
out
lods
lock
test
pop
repz
in
in
fadd
sti
ret
add
pop
adc
sub
loope
push
fninit
arpl
inc
xor
mov
je,pt
inc
inc
xchg
movsb
gs
outsb
adc
mov
xor
frstor
mov
add
out
repnz
adc
or
mov
addl
ljmp
mov
xchg
shlb
mov
loopne
ss
out
data16
xchg
outsb
sub
in
imul
xor
in
or
daa
je
xchg
mov
push
adc
ret
sub
add
int
ss
mov
addr16
cmp
out
lds
test
sbb
add
cmpsb
mov
sub
int
ret
ss
adc
inc
or
push
inc
ffree
and
into
xor
cltd
mov
add
in
cltd
jle
arpl
negl
icebp
test
imul
fcmovnb
adc
fiaddl
outsb
dec
fs
dec
pop
lds
ret
orl
xlat
out
mov
xchg
jge
add
fmul
mov
xor
mov
mov
push
push
jne
nop
add
sub
out
mov
push
imul
push
loopne
lds
out
and
std
movsb
scas
shl
lock
push
loop
cmp
push
nop
or
xorb
call
push
xchg
pop
dec
fcompl
shlb
mov
push
xchg
add
mov
stos
not
clc
das
pop
icebp
inc
xor
inc
xor
int
or
jbe
add
js
mov
jb
ds
jb
aam
inc
int3
push
sub
sub
xor
pusha
mov
xchg
imul
mov
cmp
mov
push
push
cmp
mov
out
or
push
pop
es
add
ret
repnz
test
jge
sub
clc
mov
lods
in
ja
jno
je
in
sub
popf
scas
in
aaa
outsl
or
push
mov
shll
cs
aam
and
lea
lds
pop
or
iret
and
lea
and
xchg
test
add
iret
jns
test
inc
mov
dec
fcompl
push
or
imul
dec
or
xor
fidivl
lahf
pop
mov
adc
das
xor
mov
scas
dec
lea
fisttps
sub
or
dec
push
ljmp
out
pop
insl
cmp
push
jmp
mov
cmp
xchg
sbb
jmp
cmpsb
xchg
lock
lret
jo
nop
lea
out
sti
inc
xchg
xchg
cmp
bound
push
mov
ljmp
mov
add
pop
aaa
adc
iret
divl
mov
aas
dec
jbe
fucom
xor
pushf
mov
jno
mov
xor
jp
mov
in
ljmp
insl
js
aaa
enter
mov
inc
movsl
es
mov
idivb
mov
sbbb
movsb
inc
add
popa
cs
dec
aas
aas
jge
clc
xor
arpl
pop
mov
out
sub
push
rdmsr
cmpsl
mov
int3
das
insb
xchg
repnz
jns
dec
cmp
insl
lret
fistps
dec
adc
pusha
nop
xchg
gs
sub
aad
je
fisubrs
std
jg
mov
sub
mov
enter
out
jae
mov
pop
or
jl
push
cmc
negl
arpl
dec
out
adc
popa
cmpsl
rclb
add
sahf
cmp
popa
decl
jp
add
mov
jne
aad
mov
push
sbb
xchg
imul
mov
xchg
push
mov
shr
push
add
inc
in
or
sub
test
insl
jle
add
and
loop
call
nop
test
orb
mov
mov
adcb
mov
movsl
pop
aas
dec
lahf
or
push
int
jp
xchg
testb
sub
sub
xchg
testl
push
in
adc
jg
push
cmc
adc
stos
or
cmp
fwait
xchg
xchg
cld
sbb
cmp
xor
test
and
cmp
mov
adc
cmp
push
das
pop
outsb
cld
dec
sub
mov
add
cmp
pop
cmpsb
push
cld
icebp
enter
xchg
ret
mov
adc
jl
in
jno
test
lea
or
lods
sbb
rcr
fmuls
insb
cwtl
push
rclb
imul
push
or
xlat
pop
add
in
jno
aaa
xchg
mov
in
mov
out
enter
xorb
inc
dec
inc
inc
mov
jnp
imul
cmp
adc
stos
lret
pusha
mov
push
push
mov
cltd
fsubl
fs
xchg
cli
jns
adc
fsubs
test
int
cs
xor
adc
xor
outsb
scas
std
jmp
outsl
cmpsl
xorb
mov
dec
push
js
insb
ret
aaa
ss
ret
sbb
or
lods
fnstsw
and
cmp
test
add
push
push
xor
rorb
js
mov
inc
mov
inc
insl
xchg
push
rcll
mov
pushl
push
rcll
mov
jmp
std
jle
insb
adc
mov
sub
add
jnp
shrb
mov
sub
adc
movsl
imul
mov
sti
data16
or
and
mov
xor
das
movsb
mov
xchg
adc
add
mov
stos
in
push
xchg
push
mov
mov
sub
inc
xchg
pushf
scas
mov
out
test
adc
sbb
int
rcl
adc
lret
mov
mov
and
arpl
popa
dec
xchg
add
aas
mov
inc
outsb
inc
outsb
rcl
je
jb
fisubrl
pop
add
aaa
jecxz
add
dec
adc
pop
mov
loopne
inc
lret
xor
movsl
push
les
rorl
jo
push
jo
cmp
sbb
mov
lock
insb
gs
mov
push
xchg
gs
nop
sub
jnp
fsubs
dec
pop
jp
shll
outsl
mov
test
stos
jle
fisubrl
pop
test
dec
sub
pop
cltd
lret
cmpsl
xchg
push
mov
scas
sbb
mov
es
aad
pop
arpl
mov
fwait
sbb
stos
lea
es
mov
mov
scas
xchg
or
outsb
dec
mov
add
push
sti
add
cmc
imul
les
add
shrb
das
out
inc
je
icebp
push
dec
mov
dec
addr16
mov
dec
mov
add
jp
fxtract
mov
ret
or
mov
add
sub
repz
mov
loope
outsb
jmp
scas
push
xrelease
adc
pop
xor
push
push
daa
scas
add
sub
stos
mov
xchg
test
repz
xor
dec
data16
repnz
dec
pop
int3
add
sub
xchg
rcl
test
and
jge
cmp
add
mov
hlt
jo
cmp
dec
pop
cs
lea
das
lods
shll
jge
jne
in
or
outsl
daa
jp
fadd
push
flds
and
sub
dec
icebp
jl
data16
inc
leave
insl
xchg
xchg
inc
mov
out
test
call
out
pop
jecxz
adc
in
rorb
mov
fsub
jbe
sub
sti
sub
dec
adc
jge
jno
cmpb
nop
push
test
jns
in
cmp
pop
dec
push
sub
and
push
cmpsl
push
lods
pop
lds
or
aaa
mov
imul
testl
add
sbb
ss
adc
xchg
shl
inc
aad
cltd
add
cmpsl
dec
cld
imul
rcrl
fimull
lea
jno
cltd
lea
push
scas
xchg
fmuls
lods
fistpll
and
mov
ja
clc
or
sbb
scas
insb
stc
dec
xor
jg
sub
and
flds
xchg
dec
push
fistps
jae
lods
dec
sbb
daa
loopne
arpl
daa
hlt
jno
cwtl
and
and
jecxz
jge
xor
scas
std
ret
mov
xchg
dec
in
mov
cmp
imul
cld
test
clc
and
push
mov
jmp
idiv
movl
or
xchg
fcoms
fptan
bound
in
cltd
test
cmpsl
mov
push
lret
ds
push
push
push
ret
loope
std
clc
imull
or
dec
pop
pop
add
push
add
lds
xchg
dec
mov
js
fdivs
adcl
daa
cmp
out
cmp
jne
sub
sub
inc
add
push
inc
in
xor
push
das
or
iret
outsl
icebp
add
push
or
jnp
jne
dec
pop
and
mov
xor
sar
ljmp
out
inc
jnp
sub
mov
pop
enter
jg
arpl
inc
outsb
nop
je
push
hlt
xchg
xor
jg
icebp
subl
enter
mov
imul
ljmp
les
nop
insb
outsl
dec
inc
pop
sarl
pop
data16
mov
into
jbe
outsb
idivb
add
in
rorl
cwtl
cmp
gs
sahf
dec
add
dec
dec
pop
sub
loope
lods
xchg
or
xor
xor
filds
loope
ds
pop
je
jge
dec
scas
or
lods
es
mov
sbb
pushf
xor
sbb
cltd
insb
sub
icebp
jp
ja
pusha
jecxz
jmp
into
mov
or
mov
and
fdivrs
scas
xor
sub
test
sahf
ret
cli
popa
jae
mov
test
test
scas
test
mov
jmp
out
pop
ds
or
aas
pop
leave
cmpl
hlt
aas
add
outsb
xor
shrl
int3
push
shlb
sbb
mov
mov
or
push
fdivrl
cltd
mov
into
and
cmp
mov
cmpsb
jl
pop
inc
aad
cmpsl
xchg
clc
ficoml
daa
push
mov
iret
stos
ljmp
in
mov
xchg
inc
inc
in
outsl
movsl
push
pusha
push
lea
test
movsb
dec
enter
xlat
mov
aad
movsb
jne
or
push
movb
add
inc
jnp
jle
and
cmp
in
xor
pop
sub
shlb
pop
push
add
cmp
test
sti
ret
jbe
push
mov
outsl
fldenvs
push
icebp
test
pop
and
or
sub
rcrl
mov
insl
jne
cmp
or
out
adc
dec
xor
fildll
sub
je
or
mov
jnp
xchg
jg
xor
nop
scas
mov
shlb
or
cld
pop
xor
cmp
mov
jns
push
jl
adc
add
push
popa
or
mov
jmp
inc
xor
cli
xor
leave
stos
inc
xor
xor
shll
mov
xchg
fisubrl
dec
fisttpll
ret
xrstors
mov
scas
sti
sub
in
fs
insl
mov
xchg
lret
dec
jo
pop
movl
sbb
mov
lahf
imul
lahf
cmp
out
mov
push
xor
add
pusha
dec
inc
push
mull
mov
xor
bound
shl
push
out
cmp
sbbb
lea
mov
xor
sbb
push
in
mov
ss
stc
stc
mov
out
xchg
clc
add
icebp
aad
adc
mov
inc
in
mov
loopne
lea
outsb
mov
mov
add
inc
push
cli
test
daa
sbb
jg
movsb
in
loopne
nop
jns
fnsave
pop
push
pop
jmp
mov
dec
or
push
fisubs
loopw
aaa
imul
pop
jge
js
lret
and
mov
ds
rorb
mov
mov
and
push
popf
cmp
dec
add
inc
movsl
fisubrl
vmovq
mov
movsb
xor
lcall
or
fwait
adc
mov
adc
sub
jae
mov
iret
mov
outsb
stos
cwtl
push
or
cmp
mov
push
shll
sbb
cmc
frstor
cwtl
test
stc
adc
mov
sbb
je
jp
lret
pop
int
adc
cs
cmp
push
jo
pop
lret
stc
in
dec
push
into
mov
in
movsl
sbb
mov
and
sbb
mov
adc
fimull
rdmsr
insl
and
jb
popa
movb
sbb
mov
fistl
pop
sbb
xor
xor
lock
test
loope
xor
subb
sub
mov
or
mov
rolb
xchg
inc
popf
sbb
jl
hlt
pop
pop
cld
ss
mov
mov
inc
cmc
dec
pop
rorb
inc
sub
jecxz
test
inc
inc
xchg
push
iret
popf
faddl
or
pop
cmc
stos
lods
mov
inc
ja
add
ficoml
xor
xchg
push
dec
jb
test
dec
imul
into
sub
shrl
cltd
int
cli
and
fisubrs
mov
dec
rcrl
rorl
jle
repnz
pushf
mov
push
loop
dec
mov
shl
lcall
dec
jle
cs
xor
or
xor
leave
mov
xchg
push
divb
cmc
xchg
xchg
repz
leave
scas
push
test
iret
push
and
push
cli
add
scas
jne
xchg
mov
mov
subl
add
sbb
lods
sub
rcll
rcll
mov
pop
mov
xchg
pop
movsb
push
xor
jge
push
push
mov
aam
push
lock
add
and
divl
stos
sbb
roll
pop
push
cmp
cmp
inc
test
mov
ret
cli
xor
xor
insb
xor
repnz
sub
popf
rcr
fwait
cmpsb
fwait
inc
and
iret
mov
xchg
mov
pusha
jge
es
addr16
outsb
and
popf
test
hlt
into
xor
sub
int
sbb
testl
das
mov
jle
shrb
mov
stos
mulb
inc
adc
gs
push
jle
pop
lret
cwtl
fcoml
enter
mov
and
or
push
mov
add
outsb
cmpb
fisttps
ret
xor
and
popa
pop
icebp
gs
push
mov
rolb
imul
cmp
mov
in
xchg
loopne
and
fisubs
or
sub
jge
in
fwait
cmp
add
ret
ds
pop
or
jp
pop
sbb
jns
xchg
dec
xchg
les
leave
or
cli
stc
mov
in
cmp
lret
sub
sbb
insb
push
mov
or
push
cmc
mov
adc
xlat
lods
adc
rcr
js
ret
cli
cmpsl
subl
insl
xor
xorl
lods
xchg
or
pop
cmp
jmp
outsl
jo
shll
pop
aaa
ja
sub
cmpsl
push
outsb
ret
ljmp
xchg
push
inc
inc
repz
lea
xchg
ja
xchg
lea
cmp
jmp
dec
jle
xor
mov
or
pop
pop
pop
add
adc
xchg
adc
std
iret
and
setge
cwtl
loop
dec
xcrypt-cbc
cmpsl
aad
push
sbb
aad
out
dec
cmp
add
lds
les
mov
push
stos
ss
test
cmpsb
int
hlt
adc
ja
imul
jge
test
idivl
or
aam
lahf
mov
mov
sub
jmp
xlat
mov
sub
sti
out
aas
mov
int
pop
xor
sub
inc
mov
jmp
fstps
scas
cmpsb
mov
lret
xchg
into
mov
pop
lds
cmp
mov
mov
and
dec
mov
mov
jns
rcrb
clc
scas
or
sbb
jmp
insl
cmp
lods
xor
data16
test
mov
shl
inc
mov
je
pop
pop
mov
cmp
notl
addl
xchg
loop
nop
clc
js
test
sub
aad
xchg
stc
pop
cmpsl
loopne
adc
shrb
enter
mov
inc
add
push
andb
mov
add
adc
stos
movsb
jp
shr
pushf
shl
jp
fmul
dec
popa
lods
dec
data16
mov
dec
xchg
mov
enter
iret
lock
push
fs
orb
dec
aas
insl
repz
jp
fimull
xor
ljmp
dec
adc
or
xor
inc
sahf
lods
popa
mov
in
jmp
lcall
mov
cmp
sbb
loop
stos
mov
xor
notb
dec
and
test
mov
push
sbb
sahf
mov
loop
mov
mov
sbb
clc
dec
xlat
dec
cmpsb
decb
out
cwtl
add
aad
cmp
fimull
and
push
fcompl
pushf
sub
out
sub
lret
cmp
adc
inc
cmp
inc
push
or
sbb
in
inc
mov
fcoml
aam
loope
fsubrl
fcomp
mov
shll
mov
inc
scas
mov
push
xchg
dec
arpl
xor
imul
or
push
add
fwait
jne
push
mov
sbb
jecxz
imul
adc
shlb
cmovno
ds
inc
or
js
jnp
bound
adc
dec
adc
dec
push
inc
dec
and
cmpsb
fcomp
ljmp
mov
out
rcrb
loopne
andb
and
inc
imul
jb
ficoml
mov
jnp
mov
fidivs
in
pop
bound
push
fwait
adc
sub
rorb
fwait
pop
icebp
pusha
dec
gs
inc
ret
icebp
push
cwtl
inc
movd
adc
xchg
xor
push
pop
hlt
shlb
jmp
addr16
inc
stc
lcall
outsb
cmp
xchg
and
mov
push
shlb
lds
inc
cmp
sub
and
and
mov
pop
add
subb
aaa
sub
xchg
pop
xchg
pop
cli
mov
sub
faddl
cmp
or
fcmovb
and
jl
stc
jmp
and
fadd
clc
shlb
ljmp
xchg
dec
cmp
fcompl
xchg
shlb
pusha
mov
mov
inc
add
xchg
cwtl
das
leave
ljmp
fwait
outsl
fnstsw
fldenv
imul
mov
int3
adc
sti
sub
push
xchg
stc
notl
and
in
gs
loopne
add
int
and
jae
mov
out
scas
sbb
inc
ds
sbb
in
push
sti
arpl
push
js
jle
aam
sub
xchg
addr16
inc
pop
adc
or
push
cli
pop
repnz
pusha
or
inc
cmp
lds
fndisi(8087
clc
cmp
cld
ds
je
in
lock
test
aaa
popa
ret
and
inc
jbe
scas
jnp
push
pop
ss
mov
mov
sbb
xorl
adc
adc
ja
push
xlat
xchg
or
or
incb
sbb
enter
push
aas
imul
dec
inc
jg
mov
cs
xor
pop
fists
arpl
mov
or
inc
cmc
inc
xorb
aas
loopne
scas
xchg
sub
push
xchg
push
pop
stc
or
xor
cld
or
xor
int3
and
cwtl
add
xor
adc
ss
push
call
mov
repnz
test
fcomps
fistps
and
popf
dec
lret
sub
xor
mov
ds
inc
mov
insl
pop
mov
add
adc
mov
jns
adc
lret
jmp
jb
adc
popa
mov
aas
shll
jmp
mov
mov
jb
mov
push
or
divl
cli
jle
dec
les
mov
jno
add
nop
jbe
pusha
arpl
add
xlat
jne
addb
inc
movsl
fisubrl
inc
repz
repnz
aad
loop
lcall
das
dec
and
iret
mov
test
mov
push
jl
push
orl
aad
adc
xor
and
or
pushf
fs
fcompl
leave
imul
das
adc
dec
jo
pusha
outsb
rcr
test
dec
icebp
lret
xor
divl
sti
mov
xchg
mov
into
shlb
loop
insl
push
je
xchg
mov
rol
mov
gs
rorb
in
shll
xchg
arpl
lock
add
and
fcmovnb
into
inc
lret
flds
cmp
and
inc
mov
insl
shll
pop
and
jmp
pop
sub
shlb
mov
cmp
inc
mov
mov
mov
inc
push
pop
loopne
xchg
fcmove
scas
loopne
jecxz
hlt
mov
movsb
cltd
push
movsl
jne
sub
mov
cltd
jno
and
neg
dec
out
and
inc
loop
add
sub
push
cli
call
pop
pop
aas
jbe
mull
inc
andl
jae
scas
out
roll
or
jp
adc
push
xchg
je
or
and
jnp
jae
pop
sbb
jmp
out
orb
push
pop
mov
xchg
inc
fadds
jno
xchg
lret
iret
sub
fadds
cmp
sahf
mov
enter
adc
cmpb
inc
and
or
sub
add
jnp
jno
sub
es
cmpsb
cmp
sbb
stos
xor
inc
and
or
cmpsl
in
stos
mov
jae
jg
pop
pop
push
xorb
sbbb
xlat
outsl
adc
int
mov
popa
cmp
mov
shll
neg
jecxz
xchg
xor
xchg
jge
shlb
mov
xchg
repnz
or
xchg
dec
mov
pusha
push
mov
stos
insb
xchg
std
and
mov
into
in
xchg
es
xchg
or
pop
ret
xchg
subl
dec
lds
xor
push
jecxz
mov
movsl
ret
les
push
icebp
orb
adc
int
fwait
adc
call
andb
jne
lret
adc
cmp
pop
mov
jne
scas
bound
push
xchg
insb
lahf
into
mov
jecxz
sub
leave
std
inc
clc
dec
into
mov
cmc
ss
sbb
mov
mov
clc
call
pop
sbb
jnp
sbb
jmp
jle
loop
insl
mov
fimull
orb
sub
nop
lahf
jo
sbb
and
jl
inc
loopne
inc
cld
add
fdivrp
jp
mov
jne
rclb
outsb
mov
xchg
pop
int3
sbb
bound
add
sbbb
in
inc
les
dec
lods
cld
xchg
mov
push
pusha
dec
cmc
mov
mov
or
push
outsb
mov
push
jbe
pop
add
scas
xor
arpl
sbb
lods
ja
xchg
ljmp
mov
testb
push
adc
leave
in
pop
add
loop
push
clc
ja
scas
inc
test
sbb
int
int
sti
adc
or
or
sub
cwtl
lods
or
mov
loopne
dec
jmp
cmp
mov
test
fmuls
in
mov
mov
jns
outsl
mov
not
rcrb
bound
lods
pop
mov
lret
jecxz
rclb
sub
shlb
jp
xor
cmp
rcrb
lret
ss
cld
scas
and
mov
mov
rorl
xlat
adc
mov
xchg
lret
idivb
sbb
test
out
jecxz
mov
aad
out
jnp
leave
pop
sbb
or
adc
test
or
push
clc
jns
jb
rcl
cmp
jb
not
aaa
and
and
imul
loop
mov
inc
sbb
adc
cmp
ljmp
cmp
mov
stc
test
pop
jmp
add
and
orb
xlat
dec
es
mov
pop
xor
cmp
push
loop
mov
pusha
xchg
jecxz
or
or
mov
repnz
pop
mov
aas
in
dec
cmc
popf
test
scas
aaa
repnz
ror
into
shlb
adc
or
adc
popf
aad
pop
rolb
ret
dec
scas
jl
ret
test
or
jne
jo
lahf
daa
inc
add
imul
push
sub
mov
fmuls
push
mov
mov
lods
incl
inc
ljmp
aas
jnp
add
imul
and
lods
adc
nop
idivb
lcall
cmp
pop
pop
jns
dec
or
jbe
xorb
out
rcl
xor
pop
or
adc
pop
push
cmpsb
jmp
out
in
xor
out
xor
test
jno
aad
push
xchg
lods
dec
pop
es
xchg
adc
outsb
popf
and
pop
cld
pop
xchg
cwtl
ret
pop
clc
rorl
sub
mov
pop
insb
out
repz
jle
mov
dec
std
cmp
xchg
sbb
movsl
jb
cmp
out
pop
adc
adc
rorb
mov
push
std
adc
pusha
mov
sbb
decb
fisubrs
or
mov
jae
adc
mov
xchg
and
daa
sbb
negb
hlt
push
push
dec
xchg
dec
nop
imul
mov
sbb
xor
or
movsl
push
push
cmc
inc
popa
cs
and
cmc
in
cwtl
sbb
dec
popf
stc
or
ret
dec
pusha
aaa
push
xor
lds
outsb
aad
enter
adc
mov
in
push
push
repz
movb
pop
xchg
ja
and
ret
and
jb
fmul
repz
pop
inc
and
dec
sar
negb
jp
sub
sbb
push
jecxz
push
push
jae
test
pop
dec
adc
shlb
cmp
sub
mov
xchg
jecxz
push
lea
lea
jp
mov
mov
lea
pop
and
mov
inc
cmp
jb
mov
fwait
add
iret
fdiv
jle
mov
sub
enter
xor
cmpsb
je
mov
cmp
test
rol
push
aas
fnstsw
pop
mov
sarl
mov
mov
mov
mov
out
sub
lods
out
push
jmp
xchg
ds
jae
js
sbb
adc
mov
rorb
out
das
aaa
dec
xchg
cmp
dec
sarb
cmp
sbb
divb
and
cmc
jae
clc
addr16
repz
pop
add
sahf
call
adc
mov
imul
in
out
ja
inc
push
xchg
sti
dec
fsubs
sbb
mov
aam
lock
subb
push
add
adcl
roll
pop
in
pop
mov
pop
adc
fdivrs
ss
subb
lea
sbb
and
pop
es
inc
repnz
sub
sbb
push
mov
mov
int
or
push
sahf
inc
pop
jecxz
dec
out
dec
cld
lret
arpl
leave
aam
jae
cmp
xor
inc
add
sbb
cmp
push
roll
lret
sahf
adc
test
jns
test
enter
adc
push
pop
adc
sbb
mov
inc
mov
data16
jecxz
test
jbe
and
rcl
negb
insl
push
bound
fisttpll
cs
xchg
xlat
dec
add
arpl
cli
or
fdivr
inc
int3
cltd
lret
jg
dec
imul
sub
xchg
sti
mov
or
xchg
rclb
sbb
imul
push
icebp
xorl
jl
cmc
jae
and
adc
cmp
test
popf
cltd
and
add
mov
arpl
jmp
into
test
xor
icebp
mov
leave
ret
mov
std
inc
popa
scas
lahf
sub
jne
mov
aad
mov
jb
lret
mov
outsb
ljmp
sub
dec
gs
mov
test
mov
inc
dec
mov
mov
xchg
into
adc
cmp
xchg
add
psllw
mov
rcl
mov
inc
xlat
mov
nop
sbb
stos
pop
mov
rolb
cmpsb
notb
mov
inc
xchg
mov
add
hlt
imul
add
int3
fnstenv
dec
add
xor
pop
int3
or
movsb
test
ljmp
cmp
les
js
and
push
insb
inc
xor
adcb
lret
scas
icebp
mov
inc
je
push
out
dec
xor
push
in
jns
into
and
in
pop
imul
repnz
in
pop
cmpsl
push
adc
ljmp
std
out
fs
adc
or
cmp
stos
fstps
sbb
or
sub
add
xchg
cmc
js
leave
test
loop
jno
mov
push
fwait
mov
in
out
adc
ss
pusha
movsb
sbb
jb
fldenv
ds
insl
adcb
inc
xor
out
xchg
dec
test
mov
enter
lcall
mov
imulb
fwait
sub
xor
xchg
stos
or
js
push
xchg
ja
cmp
lods
dec
xlat
xor
mov
int3
out
fsubrs
sbb
insb
sbb
sar
push
rorb
out
fimuls
lods
sub
mov
mov
xchg
or
pushf
leave
loope
push
adc
int3
vphaddubd
and
mov
adc
jp
rcrl
adc
sbb
outsl
sub
mov
lds
int3
loope
cmpsb
mov
int3
lcall
dec
addr16
mov
push
mov
insb
aaa
cmpsl
inc
mov
fisubs
outsb
cmp
iret
cwtl
xchg
mov
filds
mov
cmp
and
nop
or
inc
push
adc
mov
loop
adc
jg
cmp
cmp
call
testb
subl
or
jae
mov
inc
orl
dec
daa
cmp
jnp
push
add
pop
push
mov
scas
shll
ret
dec
and
and
jle
repz
inc
testb
pusha
add
sub
scas
push
outsb
dec
jns
sbb
jb
sti
stos
fs
xchg
imul
popf
dec
mov
push
cmovb
out
lea
aad
jno
mov
lods
hlt
divl
xorb
sbb
xor
aad
jp
mov
and
push
int3
mov
enter
mov
js
mov
idivb
jb
jne
xor
in
insl
xchg
popf
jno
enter
jno
int
jb
stos
sbb
daa
iret
jns
mov
popf
and
jl
sbbb
in
dec
outsb
sub
cli
pop
outsb
xchg
adc
leave
mov
dec
or
int
in
and
add
icebp
xor
adc
aaa
push
lahf
shr
arpl
outsb
xchg
arpl
pop
jbe
push
xchg
cmc
push
adc
adc
and
inc
push
jbe
data16
cmpsb
movsl
xor
jb
pusha
jae
mov
fcmovne
mov
sbb
cmp
jl
xor
iret
fstpl
scas
fnsave
cli
pop
inc
add
das
push
mov
call
mov
int3
adc
xchg
inc
stc
movsl
inc
loopne
enter
movsl
jb
rorl
imul
push
xchg
xor
cli
lds
inc
andl
jb
ja
fst
or
ss
in
and
out
stos
pop
add
fbstp
outsb
lahf
add
sahf
stc
movsl
mov
mov
pusha
fistpl
scas
rcr
mov
sti
mov
push
imul
mov
dec
push
jbe
pop
xor
cs
and
push
repz
add
mov
out
xor
fistpl
adc
je
mov
sub
or
jnp
pavgw
sahf
inc
adc
nop
add
and
enter
ds
mov
lahf
pushf
or
xchg
rorl
pop
xchg
push
int3
and
mov
cmp
adc
and
scas
fdivs
and
pop
popl
in
in
sub
into
aaa
xchg
cli
mov
jecxz
dec
inc
jb
bound
fsubrl
pop
mov
adc
xchg
adc
push
sbb
and
loope
or
fdivrs
jbe
test
je
cld
pop
and
cmp
push
int3
lcall
stos
or
add
sbb
imul
pop
push
adc
rol
or
nop
jle
jmp
or
rclb
push
push
pop
push
ret
dec
ljmp
cli
or
cltd
mov
scas
jmp
outsb
mov
mov
je
inc
pusha
in
mov
scas
aam
roll
int3
lods
push
mov
sub
lahf
mov
lret
add
sbb
cltd
jp
lea
mov
sub
arpl
scas
test
data16
jno
int3
scas
push
std
fsub
outsl
pushl
cltd
hlt
repz
mov
pushf
mov
dec
out
mov
addr16
push
or
jecxz
leave
push
rorb
mov
jp
stos
pop
mov
div
add
clc
into
fcmovu
push
aaa
xor
or
add
in
lret
dec
fwait
and
lret
push
mov
jno
test
mov
xor
jecxz
mov
mov
call
lret
sub
pop
mov
in
in
outsl
iret
movb
and
adc
jge
leave
sub
push
jno
rorl
push
mov
pushf
or
and
dec
fbld
nop
push
mov
icebp
rcl
pusha
jecxz
mov
xor
repz
repz
int
or
iret
scas
fwait
clc
xchg
cld
lods
ljmp
add
lret
and
sub
insl
in
jecxz
into
cmp
jmp
fisttpl
adc
movsb
in
addr16
pop
cmpsl
xchg
push
and
loopne
mov
les
mov
iret
movsl
ret
dec
test
sbb
aas
jne
ljmp
ds
pop
icebp
xor
pushf
add
andb
mov
incb
cwtl
add
inc
imul
pop
push
jb
movsl
test
cmp
mov
fistpl
inc
outsb
dec
jnp
jle
sub
adc
rclb
pop
dec
adc
inc
and
fisttpl
test
fnstcw
cli
pop
dec
movzbl
pop
jl
pop
jmp
cmpsb
jle
idivl
mov
mull
lods
cmp
lret
jbe
jns
sub
adc
mov
xor
cmpsb
cli
sub
xor
xorl
ror
sbb
call
cwtl
dec
imul
maskmovq
dec
rolb
adc
repnz
pop
iret
pop
mov
pop
dec
push
clc
jb
cmc
mov
mov
call
daa
repz
repz
jae,pn
push
push
xor
xor
jge
pop
add
test
push
jb
jo
dec
fcmovu
add
adc
xor
mov
jmp
push
ljmp
mov
and
ss
lds
imul
in
out
or
xchg
dec
sarl
dec
jbe
hlt
add
mov
pop
pop
inc
sbb
int
js
lahf
in
xor
pop
enter
pusha
mov
sub
imul
mov
push
xchg
out
dec
or
and
rol
inc
cs
mov
push
xor
and
enter
push
stos
fstp
xchg
aad
into
xchg
jmp
fistpl
ds
mov
out
call
inc
fs
pop
scas
scas
fisttpll
scas
insb
fildll
xchg
loop
out
stos
xorl
in
xchg
dec
lock
fidivrs
jle
xlat
mov
stos
or
jecxz
cmp
js
lods
inc
fcmovnu
rcrb
xchg
loopne,pn
xor
mov
hlt
int3
jp
adc
mov
jle
out
insb
xchg
out
sahf
jb
and
sub
jp
add
xor
mov
xchg
and
and
cld
inc
xor
inc
inc
add
push
xchg
sbbb
andb
add
imul
divb
jno
je
loope
in
sbb
das
xchg
add
rol
and
xchg
and
test
xchg
mov
lods
ljmp
and
pop
jle
mov
add
fnstcw
adc
mov
incb
mov
sbb
mov
hlt
ficoml
outsl
lcall
jmp
push
jo
enter
sbb
jno
aam
sbb
out
or
in
js
je
mov
insb
cltd
xor
sahf
iret
push
push
xchg
inc
ret
mov
ja
clc
fwait
jle
sbb
mov
in
mov
mov
std
lods
aaa
sarl
mov
loop
in
leave
adc
mov
lods
pop
jne
jmp
jmp
cli
lahf
push
inc
sahf
mov
sbb
stos
repz
push
daa
xor
sbb
cmp
mov
movsl
ljmp
add
lret
idiv
adc
call
xchg
xchg
icebp
scas
sti
sbb
sbb
out
stos
jl
sbb
jg
ret
cmp
fmul
mov
lea
test
loop
mov
xchg
shr
cwtl
dec
arpl
icebp
xor
aad
adc
fidivl
jae
or
jo
push
xchg
xchg
pushf
lahf
add
std
push
adc
iret
insl
xchg
out
xor
sbb
mov
test
and
sahf
pop
push
pop
jno
enter
and
rcrl
mov
and
pop
icebp
pusha
mov
push
and
sbbb
mov
pop
scas
push
dec
das
into
test
js
pop
mov
cmp
sbb
fsubrs
test
pop
jne
push
cltd
out
sub
jmp
xchg
jp
out
push
jb
not
out
movsl
dec
lret
addl
push
mov
cltd
movsl
cmp
pop
and
sub
scas
lcall
sub
aas
pop
mov
jp
jge
ret
add
add
sti
outsl
jb
lock
les
movsl
adc
divb
pop
test
mov
ljmp
inc
cs
into
jmp
sub
mov
jb,pt
mov
fstpl
push
pop
test
aas
movsl
jae
add
stos
xlat
mov
push
sub
in
mov
sub
pop
addr16
gs
fsub
inc
aam
movsl
std
jb
fildl
inc
push
fcomip
lods
push
add
data16
adc
push
imul
pop
mov
dec
mov
rolb
in
mov
pop
cmp
cltd
jb
adc
xchg
pop
push
xor
jmp
sbb
xchg
lret
push
lea
jecxz
loope
pop
lret
push
pop
push
rcr
push
xlat
enter
and
xchg
lea
sub
int
dec
subl
adc
xor
pusha
in
adc
inc
into
jmp
fwait
sbbb
pop
aaa
inc
mov
mov
fildl
stos
loope
xchg
aas
jmp
fwait
cmpsb
mov
xchg
daa
nop
enter
outsl
leave
xor
cmp
or
add
fcompl
xchg
into
loop
xor
mov
mov
out
lea
movsl
negb
out
inc
cmp
add
adcl
xor
mov
ss
int3
arpl
lea
aaa
jb
in
pop
cmp
lods
lret
dec
or
lods
push
loop
rcrl
insb
lcall
or
jl
xchg
xchg
or
loopne
jo
dec
lods
mov
icebp
fiaddl
adc
fdivl
rcrb
clc
mov
push
pusha
adc
xlat
jmp
sub
push
data16
mov
sarb
push
dec
push
fsubrs
xor
dec
sub
int3
and
aaa
je
test
add
dec
outsl
ljmp
jecxz
jb
jp
scas
idivl
jecxz
lret
fstpt
repz
mov
andps
sbb
pop
cld
fs
inc
jbe
clc
sbb
dec
mov
lret
dec
sbbb
into
adc
sub
popf
jp
mov
ret
movsl
mov
mov
lcall
pushf
repnz
cs
insl
lret
sahf
bound
sti
dec
push
lock
xchg
sbb
shll
fistl
jle
test
jge
shll
movsl
lds
mov
inc
push
inc
pop
or
out
dec
push
popf
dec
out
or
xchg
addb
xor
sbb
pop
arpl
jecxz
mov
mov
cwtl
mov
movsl
pusha
push
cmovle
repz
push
in
je
jae
clc
imull
lock
addr16
xor
ja
inc
sahf
in
xor
in
add
jo
fwait
push
test
les
mov
mov
imul
jge
mov
push
das
imul
int
add
pushf
inc
push
mov
out
in
pushf
pop
out
jns
mov
sub
outsb
adc
xchg
and
call
pop
jge
xor
mov
mov
jg
pop
fsubl
pop
sarb
and
loopne
xchg
push
push
jl
loop
jl
dec
and
sahf
pop
neg
mov
dec
sub
lds
xor
insb
add
sbb
sarl
loopne
hlt
add
insl
out
cmp
test
adc
shrb
cltd
sbbb
shl
or
jle
sahf
cmp
xchg
std
movb
popf
mov
sbb
shrl
cs
lcall
nop
ljmp
pop
in
jcxz
repz
fcmove
popf
cmp
or
mov
jno
adc
subl
notb
fdivrs
jp
ja
sbb
xchg
dec
cmc
fwait
aas
xor
rolb
dec
subl
mov
popf
cmp
sub
ja,pn
mov
ds
pop
inc
cmp
ficomps
pop
jmp
pushf
xchg
out
lcall
jo
in
mov
ljmp
addr16
xchg
cs
fsubl
lahf
mov
lock
and
push
loop
adc
xchg
mov
repz
scas
hlt
xchg
loopne
xor
dec
or
mov
fsubp
rclb
imul
stos
enter
subl
xchg
sub
inc
add
inc
ds
cmp
sbb
lock
mov
shrb
es
inc
mov
cmp
scas
mov
mov
sub
sub
mov
paddb
outsb
jo
adc
xor
sti
jb
xchg
push
mov
inc
sub
cwtl
add
sbbl
mov
ljmp
int3
clc
lods
das
mov
mov
dec
xchg
aad
outsl
pop
leave
aad
lret
lea
mov
mov
dec
fnsave
pop
push
xchg
push
dec
fs
xor
loopne
add
xchg
fwait
popl
std
pusha
loope
mov
pusha
mov
pop
pop
jl
xchg
repnz
out
int
xlat
stc
dec
aad
sub
adc
jno
mov
lods
test
and
in
int3
add
addr16
adc
xor
mov
pop
popa
rcrl
and
jle
stc
xor
notb
xor
popf
inc
das
fdivl
and
pop
cmp
subb
cmp
add
xor
push
xchg
inc
loopne
dec
push
js
out
popf
js
lcall
xchg
and
test
dec
es
push
mov
dec
mov
fimull
iret
ds
int3
iret
xor
dec
mov
mov
dec
dec
sti
mov
mov
mov
repnz
push
dec
int
stos
clc
cwtl
mov
jo
fsts
test
pop
fmul
pop
sub
rclb
xchg
mov
mov
dec
out
push
inc
jg
mov
leave
dec
aaa
fcompl
icebp
iret
push
push
pop
add
inc
cmp
pop
push
and
fldl
std
getsec
rorl
stos
cmp
mov
pop
dec
mov
xor
or
push
jmp
rcrl
jb
fistps
mov
out
xchg
mov
adc
xchg
addr16
icebp
movsb
mov
std
fs
sub
repz
fcomps
addl
mov
or
dec
into
sbb
std
push
xor
sub
xor
jo
jb
lods
fmull
mov
inc
sub
xchg
cld
ss
hlt
ret
out
mov
scas
enter
and
stos
loopne
xor
ljmp
push
cld
in
sbb
mov
cwtl
movsb
cmp
out
lret
dec
push
inc
adc
jl
cwtl
hlt
dec
into
mov
pop
mov
push
cs
popa
icebp
xchg
or
jnp
sub
mov
xchg
int
push
mov
cli
and
mov
jl
in
mov
pop
lret
out
outsb
repnz
dec
cmp
jl
je
mov
sti
pop
pop
fnsave
sbbl
cs
mov
rclb
lahf
adcb
jl
test
ret
jg
cmpsb
dec
fucomi
add
arpl
ljmp
sbb
or
push
pusha
aad
adc
cltd
lcall
jns
in
in
cmp
mov
pop
insl
jmp
sti
cmp
icebp
jmp
shrb
add
stos
adc
clc
mov
mov
fs
popa
dec
jp
jo
add
repnz
mov
cli
imul
fiadds
push
movsl
push
out
cld
dec
inc
sbb
aas
inc
ds
add
sbb
add
outsb
movsl
inc
in
sbb
or
push
in
mov
xchg
int3
push
jae
icebp
pop
lahf
or
dec
sar
and
fwait
pusha
push
cmp
adc
fwait
test
sub
xchg
fsubs
je
add
pop
jo
jp
hlt
stos
xchg
mov
pushf
cmp
jecxz
pop
cmpb
xor
repnz
bound
sub
or
sub
shlb
jns
mov
cld
sub
stos
add
lods
sahf
xchg
aas
aad
mov
or
sub
std
inc
jbe
jno
aaa
cmp
stos
ljmp
xchg
dec
dec
jne
mov
leave
sbb
ja
adc
out
in
cmp
mov
in
and
aas
xor
enter
mov
mov
sub
or
adc
add
cs
clc
mov
xor
inc
sbb
add
fs
adc
add
pop
adc
xchg
rcl
bound
loopne
inc
pop
stc
fidivrl
xorl
pop
lret
mov
daa
in
xor
in
stc
sbb
shrb
les
pop
adcl
or
jg
leave
mov
mov
cs
call
in
icebp
and
ja
inc
mov
cmp
or
cli
in
movq
imul
sub
jne
cmc
imul
ret
hlt
lods
mov
mov
les
fldcw
out
jae
rcl
out
cltd
mov
leave
or
in
aas
cmp
jle
xor
clc
test
fcoms
out
fisubrl
and
je
xchg
fildl
inc
js
aaa
inc
rcrb
stos
dec
jge
xchg
push
xchg
inc
add
aad
add
mov
movsl
ficoml
xor
and
lock
lock
mov
xor
push
ljmp
dec
fwait
sti
add
aam
lock
mov
mov
popa
dec
mov
or
cmp
jl
cmp
shll
mov
and
rdseed
pop
lret
out
cmpsb
fcomp
imul
xchg
dec
xor
cmp
ljmp
rcl
cmpsl
mov
rcl
pushf
das
mov
jns
jge
mov
push
lcall
push
sarl
imul
mov
roll
add
jecxz
lea
push
ljmp
add
les
add
cmp
fistl
cli
dec
ss
cmp
stos
mov
xlat
add
mov
mov
xlat
test
ret
lods
mov
pop
push
cwtl
bound
andb
mov
mov
xchg
and
mov
mov
aam
aaa
mov
jbe
sarb
adc
fnop
push
das
idiv
pop
pop
enter
mov
es
mov
rclb
cmpsl
or
rcr
bound
or
jne
popa
mov
negl
fistpll
sub
pop
stos
or
push
jl
add
dec
rclb
into
dec
add
cmp
or
push
in
xor
and
nop
and
lea
fiaddl
loopne
inc
xchg
pop
out
lods
and
jl
and
cltd
push
in
jecxz
jae
mov
mov
pop
lods
sbb
sbb
jnp
push
xchg
shll
inc
sub
jns
xor
stos
iret
pushf
jmp
xchg
xchg
aam
in
js
test
pop
test
iret
shll
dec
dec
or
mov
push
stos
out
lahf
scas
in
dec
mov
scas
or
test
push
jmp
adc
jmp
sub
push
adc
icebp
jne
outsl
aad
sub
mov
rcrb
pminub
mov
jbe
xchg
loop
aam
mov
mov
mov
mov
dec
add
push
lahf
in
cmp
sbb
popf
enter
out
enter
aas
es
sbb
dec
xor
or
jns
insb
clc
mov
push
aam
in
jnp
mov
push
ret
loop
inc
lret
sahf
sbb
insb
rdtsc
test
xchg
or
inc
add
lods
cmp
subb
mov
mov
stc
fwait
jne
sub
mov
mov
xor
korb
mov
cmpsl
stc
or
lods
dec
inc
push
js
pop
cmpsl
xchg
out
fsts
into
mov
iret
es
pop
fsubl
sbb
cwtl
fisttps
fadds
sub
sbb
mov
push
les
xor
push
in
inc
jno
int
int3
or
arpl
and
push
dec
and
mov
inc
mov
in
insb
or
mov
sahf
cmpsl
dec
nop
mov
loop
leave
mov
mov
xor
mov
sbb
fwait
shll
cwtl
test
push
cmp
xor
push
jp
jl
cmp
add
ret
mov
or
ss
lret
test
dec
rcll
roll
pop
push
int3
mov
out
pop
add
fstpl
jp
cmp
sub
cld
pop
pushf
sbb
and
mov
cltd
mov
and
sub
push
pop
pop
jp
je
cmp
inc
add
shlb
loopne
cmp
mov
xor
movsb
xchg
push
shlb
xchg
mov
xbegin
pop
pop
dec
sub
cmpsl
or
sahf
mov
mov
mov
inc
lret
je
cwtl
mov
dec
pop
xor
xchg
xor
in
int3
jge
leave
xor
dec
bound
scas
bound
sbb
cld
push
jae
outsl
lahf
je
dec
push
idivl
mov
xchg
repz
mov
push
cli
and
xchg
cltd
cmpsl
or
xor
sbb
pop
pushf
lcall
jns
mov
movsb
jle
and
mov
fidivrs
jmp
push
mov
data16
and
xor
mov
hlt
xchg
bound
stos
lret
cmp
out
pop
xor
sbb
cltd
or
jmp
sahf
lock
data16
push
in
jmp
adc
push
xchg
outsb
push
stc
stos
shrb
popa
mov
xchg
adcl
cmpsb
mov
mov
sahf
push
cmp
popf
ja
lret
stos
cmp
mov
imul
push
or
test
into
jnp
push
ja
jecxz
or
repz
lret
sub
pop
adc
pushf
pusha
jg
adc
iret
icebp
inc
pusha
mov
lock
pop
jg
or
pop
add
xor
fists
addr16
cmc
int3
mov
push
out
ljmp
jns
mov
leave
sbb
cmpsb
dec
push
push
clc
shrl
movsl
out
pop
in
movsl
mov
mov
cmc
aam
jmp
pop
lods
icebp
fwait
push
xchg
les
andl
popa
pop
out
stos
push
pop
lods
jl
jl
rcrl
rorb
sahf
mov
nop
mov
mov
dec
cltd
lea
repnz
test
mov
adc
adc
pop
xchg
pushf
ljmp
clc
dec
test
pop
scas
shl
leave
push
xorb
cmpb
and
out
hlt
jo
push
test
repnz
lcall
adc
inc
mov
cmpsb
cmc
xchg
test
and
push
in
rcrb
xchg
push
cltd
imul
lods
jecxz
mov
lret
fadds
pop
sbb
inc
push
popf
loopne
icebp
sub
and
mov
lea
stos
lcall
inc
pop
lds
stos
pop
mov
jbe
mov
mov
pop
xchg
and
inc
pop
pop
add
sbb
loop
mov
cmpsl
loopne
cld
int3
push
into
mov
add
into
pop
loope
fdivr
jg
xor
out
andb
push
cmp
cmp
push
icebp
or
push
add
xchg
test
cmpsb
jnp
push
pop
mov
jne
mov
xchg
add
daa
mov
pop
mov
stos
les
enter
pop
sarb
sarb
in
mov
xchg
movsl
rorb
addr16
jb
stc
subb
xor
aas
jp
js
fwait
mov
mov
stos
push
sbb
xor
xchg
sub
fsubs
aad
das
dec
sbb
stos
hlt
aaa
aam
sti
mov
xchg
std
mov
mov
fimull
lock
ss
sub
push
inc
xchg
hlt
data16
mov
scas
xor
pop
pop
add
add
mov
pop
xchg
adc
jnp
mov
addr16
int3
mov
in
sub
addr16
mov
jno
mov
inc
mov
movsl
lcall
mov
sub
mov
mov
push
xor
fimuls
mov
or
aaa
push
and
fucomip
xchg
mov
xorb
sarl
sbb
fcoms
jge
sarl
xor
and
adc
mov
test
or
mov
je
sub
or
imul
jmp
or
mov
pop
jbe
xchg
insl
fwait
sbbb
popa
push
icebp
stos
and
arpl
rclb
sub
icebp
cmpsl
mov
dec
inc
scas
jnp
xchg
imul
pop
scas
dec
popa
adc
add
xor
pushf
stos
jg
fdivl
repz
and
fsts
fdiv
stos
ret
adc
faddp
sbb
push
or
cmpsb
mov
leave
pop
clc
jg
push
fs
iret
cmp
insl
popa
jnp
jle
mov
rcrl
fisubrl
imul
lahf
imul
lds
mov
add
inc
pop
xchg
aas
icebp
jle
in
lcall
pop
aas
mov
sar
and
jp
or
cmp
clc
sub
mov
xchg
daa
jae
insl
lcall
lock
fnsave
enter
cmp
jge
arpl
jg
std
ret
imul
jae
fsubrp
xchg
push
adc
loop
lret
je
dec
sub
insb
sub
mov
outsl
and
pop
cmp
shl
jmp
dec
bound
fwait
adc
sbb
dec
jmp
cmp
and
rol
outsl
add
sbb
and
mov
sub
jl
add
pop
int3
lds
clc
jnp
pop
xor
xor
dec
cmp
aad
lods
repz
add
mov
fsubs
int3
fsubr
int
stos
sub
xchg
aaa
jb
cmovb
push
pop
xchg
xor
popf
daa
push
dec
insb
dec
dec
repnz
sub
nop
test
cmp
add
fldt
ss
pop
negl
mov
mov
shl
adcl
inc
out
lret
inc
xchg
and
repnz
adc
out
add
xlat
scas
loope
adc
or
lret
mov
or
push
xor
jg
int
xchg
or
inc
mov
inc
push
or
add
in
mov
sahf
pop
xor
push
mov
jge
push
and
inc
cwtl
fcmovu
inc
ret
nop
mov
sarl
cltd
call
cld
loop
movsb
aaa
cmpsl
push
push
mov
lds
imul
mov
pushf
stos
sbb
ret
cmpsb
xchg
arpl
mov
sub
mov
out
mov
cmc
dec
add
out
jp
pop
sub
pusha
shlb
push
xchg
fisubl
mov
and
outsl
mov
nop
mov
add
repz
fisubrl
xchg
cmp
and
pop
std
je
sbb
out
jbe
inc
fidivrl
jmp
sbb
mov
push
pop
in
aam
jne
stos
inc
push
lods
inc
movsl
jbe
add
or
or
out
sahf
push
out
test
cli
in
pushl
loopne
ss
xor
jmp
and
sahf
pop
or
mov
rcr
push
push
stos
push
cltd
out
pop
fs
pop
sbb
sub
mov
roll
xchg
jb
cs
pop
mov
xor
mov
rorl
and
scas
rcll
pop
outsl
cmpsl
adc
cmpsl
cmp
mov
inc
mov
mov
jo
scas
bound
cmp
adc
xchg
rorb
inc
scas
jl
test
adc
pop
and
pop
out
push
adc
push
pop
xchg
adc
dec
cmp
mov
int3
dec
jbe
mov
xlat
fistpll
push
mov
inc
mov
mov
push
pop
aam
inc
filds
adc
pop
ja
push
pop
addl
test
or
dec
mov
adc
dec
dec
inc
subb
arpl
push
add
adc
xor
or
arpl
and
xor
xchg
cwtl
cmpsl
rolb
outsl
jecxz
xchg
out
jmp
cmpl
xchg
lock
cmpsl
cltd
das
negl
push
int3
pop
adc
jg
sti
stc
mov
cmpsl
jb
jmp
xchg
pushf
inc
xchg
call
push
adc
icebp
xor
push
test
jle
mov
mov
lahf
xchg
mov
jp
das
jbe
xor
dec
pop
sub
sbb
shrb
stos
and
adc
imul
daa
movsb
imul
faddp
jmp
sbb
loopne
jno
lret
rcr
aad
jae
xchg
xchg
and
ret
das
insb
xchg
add
xor
ret
mov
push
jne
jp
cld
lods
aam
cmpsb
popf
sbb
movsl
sarb
mov
loopne
lds
shll
mov
cmp
mov
rclb
scas
and
pop
aas
jo
add
addl
adc
test
enter
push
adc
nop
sub
dec
jp
sub
in
fwait
fs
mov
loopne
adc
inc
arpl
and
cmp
sub
icebp
test
and
pop
in
push
jecxz
xchg
pop
punpcklbw
jb
push
pop
mov
sbb
popf
shlb
es
bound
mov
inc
add
idivl
xlat
leave
mov
outsl
mov
stos
test
in
enter
cmc
push
dec
dec
movsb
ret
gs
cwtl
mov
pop
lods
jecxz
push
inc
and
je
movsb
adc
xchg
push
sub
shrb
gs
enter
out
mov
or
jmp
enter
outsl
xor
sub
mov
imul
aad
inc
add
sub
popf
push
cmc
clc
ret
pusha
dec
push
xchg
mov
cmp
push
jmp
push
pop
jno
add
in
xchg
push
sub
mov
jb
test
jge
mov
in
fsubrl
rclb
mov
push
sbb
loope
add
sarb
jb
mov
and
andb
pmuludq
sti
pop
fwait
jb
mov
subl
mov
or
filds
fisubrl
adc
cmc
jecxz
mov
addr16
xchg
cmp
adc
repnz
push
movsl
pop
pop
xlat
shr
insl
mov
mov
stos
and
test
jg
fistpll
fstpt
mov
dec
push
inc
outsb
popa
les
cmpl
sbb
push
je
jne
mull
adc
dec
jbe
add
test
or
xor
cmp
push
xlat
ret
adc
test
mov
rcll
xchg
stos
mov
icebp
arpl
rcrb
sarb
inc
adc
pushl
sbb
divl
xchg
sub
loop
fimuls
mov
jp
jne
mov
push
jmp
scas
lret
mov
pop
xor
ret
divb
test
nop
sbb
loopne
xor
add
dec
stc
test
dec
jbe
push
mov
sub
add
fwait
std
cwtl
add
cltd
mov
push
fiaddl
and
or
nop
stc
loop
pop
jl
xor
das
imul
push
or
stos
xor
push
outsb
xorb
xor
daa
imul
jns
push
aad
and
inc
sub
mov
xor
faddp
fldt
or
aam
aam
scas
cli
dec
jp
mov
ja
lret
and
insb
aad
into
lds
jae
sbb
pop
lret
lret
and
fimuls
pop
aad
fistl
xchg
fwait
mov
lahf
imul
push
jb
pop
into
es
out
pop
subb
out
pusha
mov
or
enter
aad
push
ffreep
pop
xlat
sub
mull
jo
rcr
and
hlt
jne
ret
je
call
xorl
push
jge
pop
js
adc
dec
lds
cmp
or
in
and
cmp
push
test
sarl
jbe
mov
or
shrb
sbb
sub
push
jns
pushf
pop
or
push
adc
xchg
pop
repz
xchg
xlat
add
mov
sarb
jle
push
pop
dec
pop
adc
or
mov
js
pushf
push
aas
lret
pop
loopne
adc
popa
lret
je
xor
in
sub
xchg
popa
int
test
icebp
jp
icebp
cltd
add
push
int3
mov
lock
lods
fsts
inc
mov
mov
ds
mov
adc
and
mov
cmp
xchg
in
in
jns
inc
ja
cmpsb
or
push
sbb
add
add
lcall
jbe
out
nop
cli
xor
push
scas
ja
pop
jnp
enter
fnstcw
adc
aam
sub
int3
inc
cmp
jl
sahf
lds
lea
andb
fbstp
fsubl
ds
mov
jae
lahf
pop
sti
mov
adc
aaa
xchg
mov
je
push
pop
imul
out
jmp
hlt
shl
mov
mov
addl
jne
insb
dec
stos
lret
inc
sub
pop
mov
sbb
jnp
fnstsw
jb
xchg
int
mov
icebp
dec
imul
adc
add
jg
cmp
push
fiaddl
pop
or
jne
push
out
dec
adc
aaa
js
or
cmc
add
gs
mov
dec
scas
mov
les
inc
pop
push
mov
enter
rolb
aaa
mov
jbe
hlt
pop
mov
xor
cmpsl
mov
idiv
lahf
insb
add
pop
mov
clc
out
inc
cmp
stos
inc
or
stc
rorl
push
outsl
jmp
sbb
leave
pusha
jb
mov
jg
push
