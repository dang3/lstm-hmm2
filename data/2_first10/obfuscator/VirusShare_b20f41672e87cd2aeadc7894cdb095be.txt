xchg
sahf
shll
aam
sti
daa
popa
cmp
pusha
and
mov
rorb
daa
popf
test
fwait
add
aaa
xchg
add
imul
arpl
test
add
adc
push
lea
jge
jns
jb
or
inc
imul
sub
fistl
repnz
mov
clc
mov
sub
addl
sub
mov
mov
out
icebp
iret
out
int
push
fwait
mov
lret
push
fisubrl
jb
es
inc
iret
adc
add
loopne
fwait
jp
hlt
lretw
inc
divl
mov
push
daa
xchg
dec
xchg
jne
inc
xchg
or
fs
cwtl
push
dec
stc
pushf
clc
sbb
out
ffree
or
and
lret
ficompl
cmp
popf
mov
mulb
push
in
add
pop
adcb
pop
aam
mov
scas
test
adc
call
lea
jne
inc
shr
neg
pushf
mov
clc
call
push
ror
call
mov
adc
adc
pop
sbb
push
sbb
cmp
repz
or
mov
dec
inc
adc
adc
pop
scas
cmp
push
xchg
sahf
sbb
sbb
dec
lret
add
dec
loope
push
pop
sbb
js
mov
and
mov
inc
dec
cmp
scas
rorb
iret
sub
dec
xchg
ds
push
repnz
add
lcall
aas
mov
xor
jns
lea
adc
inc
inc
int3
inc
add
mov
mov
pushl
lea
call
pushf
pushl
jmp
lea
call
pusha
jmp
test
aad
mov
movsb
xorb
add
or
and
mov
push
cvtdq2ps
mov
shrb
and
push
adc
mov
repz
lret
or
mov
clc
imul
icebp
mov
or
mov
inc
or
in
cltd
or
xlat
arpl
xchg
xchg
jae
adc
insl
insl
push
cld
data16
push
mov
jb
imul
jb
imul
data16
bound
adc
lcall
or
je
or
popf
pusha
inc
mov
adc
lea
push
jmp
movb
lea
call
push
movw
mov
pushl
adc
pushf
pushl
lea
jae
push
lea
jne
pusha
stos
pusha
movb
lea
jmp
push
push
aaa
push
mov
push
pop
xor
jecxz
push
in
fwait
or
aaa
xchg
dec
mov
mov
dec
fwait
sbb
fwait
imul
insb
enter
xchg
jb
sarb
ficoml
and
push
sarl
cli
dec
mov
mov
fld
pop
fstl
jne
aad
inc
in
sub
cmc
push
push
pusha
insb
mov
mov
pop
mov
mov
dec
out
cmc
jmp
call
or
cwtl
inc
test
mov
fcoml
call
icebp
cmpsb
push
fistpll
imul
mov
xor
clc
sar
insb
cwtl
shrb
lret
fsts
pop
add
adc
dec
enter
xor
xor
lea
or
and
int3
imul
scas
lods
push
aad
stos
sbb
imul
leave
cmpsl
movl
repz
pop
mov
cmp
scas
in
inc
and
movb
pushf
pushl
ret
movl
lea
call
pusha
movw
lea
jmp
jo
xchg
sarb
mov
pop
cld
mov
enter
addr16
push
xchg
cltd
orl
lods
cmp
jge
rcrl
das
xor
xchg
fldenv
pushf
push
jo
mov
pop
sbb
lret
aam
mov
pop
sbb
jae
ret
adc
fbstp
cmpsl
jns
mov
pextrw
push
enter
jns
enter
enter
pop
popa
outsb
and
adc
shll
sub
mov
and
inc
or
in
cmc
fidivl
cmp
add
and
push
call
rol
pushf
mov
lea
js
pusha
inc
clc
call
popf
push
mov
fisubl
out
in
xor
cmpsb
cmp
bound
sbb
cvtps2pd
fnstcw
fsts
insl
mov
insb
xor
das
xlat
push
aad
lds
inc
lds
mov
stc
dec
add
ljmp
fwait
sub
hlt
jmp
mov
cs
call
mov
popf
adc
mov
xchg
leave
inc
mov
push
ret
cmp
mov
pop
xchg
mov
movb
pusha
pushl
lea
jmp
mov
call
xchg
movb
adc
inc
push
pop
int
mov
hlt
lcall
in
out
aaa
pusha
or
sub
insl
sbb
rcrb
fdivrs
sbb
outsl
push
aam
loope
call
sub
pushf
inc
pop
mov
pop
aaa
pop
jo
push
movb
je
inc
lahf
int
repz
lret
inc
jecxz
cmp
iret
or
decl
aas
jl
into
cmpsb
ret
popa
lods
or
notb
and
xor
push
pop
stos
add
ret
sub
aam
mov
push
ret
jmp
xor
dec
movb
mov
popa
aas
cmpsl
int3
cltd
insb
mov
insb
cltd
sbb
sarb
dec
rol
xorl
popa
into
incl
out
fwait
mov
add
cmp
mov
cmp
sti
adc
cmpsb
mov
mov
xor
adc
in
aaa
jne
dec
jbe
fidivl
jle
ds
jae
add
cmp
pushf
push
stc
mov
neg
pusha
sub
push
pushl
clc
clc
ror
jmp
cmp
or
out
movsb
add
jle
mov
and
mov
lahf
in
fistl
je
insl
mov
push
rcrl
pop
out
std
fwait
lods
sub
push
mov
nop
adc
mov
and
sbb
xlat
push
mov
int3
shll
lahf
jge
out
jnp
nop
cli
push
jbe
in
sbb
add
outsb
sahf
jge
out
icebp
aas
gs
push
pop
sti
fcmovnb
repz
sub
in
dec
and
jecxz
mov
orb
out
xor
cmp
inc
cmp
mov
ret
ss
mov
in
and
jb
inc
dec
add
je
sbb
fisttpll
mov
inc
test
xorl
test
insl
imul
lock
fsubs
cmp
mov
ret
repz
outsl
aad
js
loope
jg
cmp
cmpsb
lcall
les
sub
into
mov
sub
scas
sub
mov
dec
hlt
pushf
lea
je
cmc
test
clc
bt
or
call
outsb
in
or
ds
call
data16
subl
inc
outsl
das
xor
push
cmp
stos
xchg
leave
lret
bound
push
aas
inc
addr16
inc
stos
cmp
sub
push
aas
mov
das
sbb
movsl
rorl
fcmovbe
push
or
movsl
or
fbstp
inc
test
adc
sub
int3
outsb
lret
inc
dec
cld
ret
sub
in
daa
sbb
das
push
xchg
xchg
sbb
leave
aas
sbb
xor
push
mov
pop
cld
xlat
shl
roll
insl
sahf
clc
push
jns
xchg
inc
test
sahf
jl
dec
ds
cmp
push
pop
xor
fisubrs
sbb
lea
ja
call
push
lret
jbe
dec
repnz
and
inc
mov
in
adc
lret
or
jg
inc
fldenv
std
fisttpl
pop
mov
dec
mov
sbbb
jge
adc
or
inc
cltd
scas
and
cmp
sbb
nop
xlat
cmc
lret
pop
lea
adc
imul
pop
mov
test
std
pop
xchg
mov
dec
lcall
pusha
inc
pushf
mov
pop
daa
ss
std
aas
insb
mov
shr
dec
dec
loope
sbb
push
push
lret
add
loope
sub
mov
adc
pop
add
xorl
xchg
aad
mov
add
xor
jmp
adc
inc
jecxz
testb
lret
outsl
in
arpl
mov
arpl
pop
xchg
inc
cwtl
mov
mov
stos
es
shlb
and
cmc
cli
sbb
cli
insl
lcall
mov
xor
sbb
inc
ds
stos
or
in
mov
rdmsr
cmpsb
push
mov
mov
fmul
enter
andb
sub
xchg
aaa
loope
int3
mov
jmp
xchg
mov
fcmovb
test
shl
inc
bound
cmpsb
xor
test
mov
stc
rep
cmp
mov
insl
jmp
lahf
test
lcall
add
add
fsubl
orl
sub
jbe
imul
fadds
adc
incb
test
pop
or
mov
call
jmp
push
lea
jae
cmp
call
or
mov
clc
repnz
pushf
call
sbb
lret
inc
cmc
pop
or
pop
or
pop
push
push
add
push
int
dec
lret
icebp
femms
sub
js
aam
inc
or
jmp
add
cmpsl
imull
adc
fsubp
xchg
lcall
pcmpeqd
sbb
xchg
xlat
mov
xor
mov
ljmp
cli
clc
push
sub
sbb
inc
xchg
scas
cli
push
xchg
mov
xchg
outsb
pop
lea
pop
push
mov
mov
mov
rcrb
inc
jb
mov
shlb
cmp
push
into
fs
sbb
ret
hlt
xchg
pushf
mov
xor
xchg
pop
xor
jno
mov
andl
jnp
sub
pop
xchg
dec
cmp
pop
frstor
xchg
jle
popf
and
jno
push
data16
mov
xor
push
movb
ret
dec
fmulp
es
lret
adcb
xchg
inc
cli
pop
sub
and
dec
dec
jg
sbb
add
adc
sub
lret
add
cmp
mov
jbe
sbb
lods
push
rcl
xor
insl
mov
fs
fnstenv
sti
imul
ja
mov
or
adc
sahf
adc
dec
bnd
sub
adc
imul
mov
mov
scas
and
loopne
clc
lds
cmp
mov
popf
add
shl
ss
ficoms
mov
sbb
imulb
stc
mov
neg
mov
test
clc
pusha
jmp
pushf
lea
jb
jmp
jmp
fcmovnu
scas
add
lret
mov
test
shlb
movl
sbb
ret
insb
iret
pop
arpl
jp
idivb
ljmp
outsl
cli
xchg
mov
sub
test
cli
imulb
xchg
xchg
stc
mov
mov
dec
int
mov
and
rorb
pop
mov
pop
rcl
sbb
sahf
mov
repz
lds
cmp
sahf
mov
in
int3
in
pop
mov
add
cmp
mov
mov
aas
cltd
insl
test
jnp
mov
enter
mov
mov
inc
jo
mov
out
int
mov
in
or
mov
pusha
cli
pop
cs
mov
into
lret
push
add
sbb
aaa
shl
xor
bts
xchg
mov
shr
bswap
neg
mov
bsr
bsr
shr
xor
bsr
movzbw
cmp
mov
jmp
mov
test
add
pushf
cmp
test
jmp
push
pusha
mov
movzbw
lea
push
movb
movl
pushf
pusha
pushl
pushf
mov
movw
pushf
pushf
pushl
ret
pusha
mov
jmp
rol
add
enter
sbbb
test
dec
sub
inc
dec
cli
js
rorb
mov
mov
or
sbb
mov
push
adc
into
mov
adc
push
incl
lea
jmp
jg
cmp
sub
sbb
orb
inc
jns
mov
dec
mov
add
cltd
gs
xchg
and
inc
sbb
lea
cmp
or
jmp
clc
sub
jmp
pop
loopne
add
inc
sub
cmp
call
mov
push
pop
rcrl
movsl
sbb
iret
xchg
xlat
push
xor
frstor
pop
stos
out
std
addl
fucom
inc
movsb
push
aaa
fwait
pop
sub
inc
scas
aas
dec
xor
cmpsb
push
cmp
arpl
push
stos
mov
and
cmp
pop
mov
loopne
arpl
loopne
pushf
jp
inc
inc
and
mov
notb
lea
inc
leave
shrb
and
jg
add
aas
call
bound
xor
aad
in
mov
iret
hlt
dec
repz
rcll
shr
aam
or
test
dec
adc
adc
insb
test
jmp
add
fdivrs
sbb
fsubr
repnz
sbb
mov
adc
stos
fnstenv
dec
jecxz
dec
std
jae
ret
mov
sub
sub
mov
fnstenv
sub
test
lret
int
jl
or
mov
inc
pop
test
mov
bound
ret
cmp
int
add
cmp
inc
cld
cwtl
fimull
repz
pop
mov
addr16
push
sbb
fldenv
imul
pop
and
cs
pushf
cmp
repnz
pushf
pushf
lea
jne
cwtl
setns
movb
movzbw
push
movsbw
cwtl
mov
bswap
lea
call
lahf
mov
into
je
nop
mov
mov
pop
sub
add
xor
push
pop
ret
test
outsl
xor
icebp
sti
dec
inc
jl
mov
cmpb
sar
xor
lret
dec
xor
jns
jge
sbb
xchg
adc
mov
cmp
insb
jle
fnsave
dec
pushf
imul
sbb
sub
xchg
pop
int
lds
mov
mov
into
sbb
lret
enter
pusha
test
xor
or
popf
adc
add
jl
push
xor
push
or
xor
pop
lret
jge
mov
out
sub
fidivrs
push
dec
cmp
aad
inc
jle
test
or
fldt
in
fucomi
imul
imul
scas
inc
inc
lret
int
pop
imul
mov
pop
pop
in
sbb
sub
inc
xor
pop
xor
push
paddusb
mov
jbe
mov
lret
jnp
int
cltd
adc
mov
sbb
sub
xor
fcmovne
jecxz
xchg
push
lahf
mov
sarb
pushf
stos
sbb
pusha
add
std
divl
sti
push
dec
and
out
fwait
dec
jecxz
lret
rcrb
or
mov
mov
es
sbb
mov
add
adc
pop
stos
lods
cmp
add
insl
dec
dec
aas
dec
push
fdivs
imull
stos
or
jns
jle
mov
fnstsw
repnz
or
push
enter
enter
sbb
xchg
movsl
push
shr
lods
push
stc
jg
lds
and
into
cmc
jecxz
push
fsubrs
inc
cmp
inc
xchg
insb
dec
out
jle
ss
push
lods
sub
pop
daa
in
iret
mov
adc
insb
cmc
stc
fdivr
mov
roll
or
stos
ljmp
jmp
jecxz
loop
xchg
or
rcrb
sub
out
fcoml
mov
jge
pushl
fidivs
loop
xchg
or
shlb
push
pop
xchg
rcr
pop
sbb
pop
jp
cwtl
push
jno
std
je
neg
dec
mov
sub
jnp
ret
mov
xchg
insb
mov
push
sub
push
mov
pop
or
aas
sub
sahf
andb
fwait
jge
xchg
xchg
mov
lcall
jmp
iret
sub
popl
push
aas
dec
scas
lahf
lods
daa
fdivp
push
adc
and
pushl
call
imul
mov
dec
xor
inc
cli
push
push
sbb
loopne
adc
pop
test
pop
movsl
daa
mov
adc
and
or
aas
jge
pop
rclb
lcall
mov
push
bound
push
cli
sbb
mov
push
mov
fs
je
shld
cmc
sar
add
bts
bsr
stc
bt
mov
call
adc
mov
mov
jns
cmc
and
fiadds
roll
in
dec
aam
push
or
enter
sti
xchg
dec
mov
or
shll
cmp
dec
sbb
sbb
jl
das
push
jb
scas
or
or
sbb
mov
jnp
jbe
pusha
mov
cmpsb
sbb
xor
mov
stos
push
into
cmp
fwait
call
pop
sub
adc
cmpsb
cmp
popf
pop
fisubl
cmpsb
hlt
mov
cmp
popa
or
dec
dec
add
enter
lahf
out
cld
mov
popf
scas
pop
ret
fnstenv
dec
lret
xchg
aaa
jge
test
shr
divb
sbb
jp
jle
add
add
push
mov
lods
in
mov
cli
insl
imul
adc
mov
gs
aas
pop
cmp
push
bound
mov
and
cmp
jns
and
xorb
bt
clc
rol
call
movl
call
xor
cld
mov
jg
ret
icebp
aas
cmp
test
jne
mov
mov
and
or
lods
inc
shll
ret
jecxz
adc
outsl
aaa
daa
fildll
mov
xorl
imul
rcrl
mov
jae
pop
pop
mov
pushf
test
mov
loop
sahf
inc
into
jb
ret
out
adc
scas
neg
popa
outsl
aad
andl
sar
mov
mov
les
mov
mov
adc
inc
pusha
mov
popf
push
sbb
jecxz
rclb
hlt
xor
push
cmp
shl
sub
xlat
mov
cmp
es
mov
dec
ret
insb
lods
shll
idiv
clc
bound
aad
int
out
jle
lret
fsubp
or
in
repnz
cmpsb
and
adc
lret
inc
lcall
call
mov
aad
insl
xchg
popf
add
scas
insl
xor
rcl
rcll
arpl
jl
mov
push
imul
gs
lret
pop
push
xor
cmp
push
icebp
and
sub
cmp
fwait
mov
and
mov
push
vmwrite
cmp
arpl
imul
scas
lahf
lods
mov
add
btc
rol
cmc
daa
push
pusha
adc
rcr
xor
lea
shl
sub
bts
cmp
xor
push
test
push
xor
sub
push
rcr
sar
clc
inc
push
lea
xor
mov
call
dec
add
sti
mov
push
je
mov
aam
jo
cmp
cwtl
into
pop
fcoml
sarb
loope
push
insb
ljmp
fimuls
inc
push
add
shr
fstl
add
mov
mov
pop
js
sbb
adc
addr16
ret
sbb
lods
mov
mov
popa
scas
aad
cmp
lret
sti
mov
in
sbb
inc
sarl
int
pop
aad
mov
xorl
mov
lret
adc
enter
mov
xchg
adc
push
push
pop
test
mov
into
and
cwtl
popf
mov
inc
xor
xchg
dec
push
int
arpl
inc
aad
out
dec
cmp
setno
xchg
movsl
ficomps
decl
inc
jae
jae
ja
ja
setae
jae
jecxz
outsl
fnsave
push
mov
stc
mov
and
movsb
andb
xchg
adc
cli
dec
adc
jl
inc
pop
mov
or
cwtl
in
sub
scas
imul
sub
inc
nop
sbb
cld
addb
imul
popf
mov
rol
add
std
push
fs
xchg
daa
add
inc
pop
and
aad
jns
enter
lahf
stc
aaa
mov
rorl
jmp
pusha
mov
sbb
pop
pop
pop
cli
pop
sub
cmp
cmp
sbb
pop
xor
mov
mov
repnz
jmp
inc
clc
insl
pop
fiaddl
push
jge
loopne
ret
lods
imul
sub
incb
dec
test
push
adc
jno
iret
lret
pop
or
mov
stos
insb
cli
popf
lahf
push
adc
rorl
hlt
vmovups
and
in
ret
push
xor
lahf
cltd
insb
lcall
mov
xchg
add
push
movsb
loop
dec
mov
mov
mov
gs
pop
mov
pusha
pop
fs
cmpl
ret
sbb
jl
lret
mov
loope
out
out
pop
sub
pop
lret
sub
movsb
cmc
lret
bound
or
test
add
mov
ljmp
inc
xor
and
dec
scas
xchg
icebp
jae
mov
push
ds
xchg
stos
test
push
hlt
test
icebp
pop
push
push
and
sbb
mov
jge
stos
cmc
cmp
iret
add
push
xchg
jmp
push
enter
mov
add
pop
push
mov
lock
dec
ficoml
push
cli
add
lret
fnstcw
in
sub
push
popf
lret
xchg
mov
inc
insl
and
clc
vmread
lds
iret
adc
sbbb
or
pop
fbld
jne
cmpb
lods
mov
cltd
mov
xchg
jns
popf
sbb
xor
and
and
std
rol
rolb
cmpl
fcmovnb
outsb
push
jg
aad
idivl
jl
mov
adc
push
pop
fiadds
jp
stos
into
and
sub
lock
xchg
daa
int
lea
jne
pushf
btr
mov
inc
jmp
pushl
call
not
bswap
cwtl
pop
pushf
mov
movb
lea
ja
call
pushf
lea
jne
pushf
mov
clc
sub
push
shl
lea
sub
call
stc
clc
repnz
pushf
pusha
push
pushf
lea
jne
movzbw
movb
push
jmp
inc
lret
ret
divb
es
cmp
ljmp
xchg
pop
movl
idivl
dec
mov
sbb
sub
in
cltd
sbb
ret
jg
shrl
mov
mov
pop
mov
dec
mov
cld
cli
lods
scas
pop
lcall
iret
ffree
mov
cmp
xchg
push
mov
mov
jle
xor
mov
lret
insl
sbbl
xchg
jg
adc
scas
lahf
enter
inc
mov
sub
pop
fcoml
in
int3
imul
call
dec
push
xlat
push
mov
es
cld
push
xlat
jo
imul
dec
jne
arpl
es
mov
xchg
shlb
pop
mov
je
aam
jbe
daa
das
mov
sbb
iret
or
stos
out
stos
loop
mov
and
ret
seta
dec
inc
inc
sets
cmp
xchg
ror
and
stc
aam
mov
and
mov
cmp
bt
pushf
xchg
pushf
btr
sub
rol
mov
cmp
cmp
sub
mov
pushf
movl
call
jmp
das
push
mov
in
jns
aad
adc
rcrb
cmpsb
xchg
cld
arpl
sub
fs
cmp
add
hlt
xor
imul
inc
int
adc
and
cmc
dec
rol
mov
add
leave
add
adc
hlt
mov
int3
sbb
fisubrs
ljmp
push
adc
mov
xor
sbbb
jl
dec
mulb
lret
movsl
sbb
out
repz
outsl
in
ficompl
fcoml
fcmovnb
sub
xchg
pop
dec
ficoml
pop
jo
sbb
adc
jp
push
lret
leave
ss
xor
roll
mov
andb
jmp
call
arpl
adc
mov
dec
push
das
ja
cmc
sub
push
arpl
sahf
cmpsb
les
loope
adcl
jg
lahf
mov
loop
pop
cmp
jl
xchg
iret
push
adc
lods
sbb
sbb
and
push
mov
pop
add
pop
dec
mov
xchg
popa
gs
inc
daa
and
addb
push
mov
cmp
in
cmp
add
cld
push
out
and
stc
bts
call
lea
call
pushf
push
push
mov
pusha
lea
jmp
lret
lock
hlt
mov
pop
jno
mov
xorl
dec
sub
mov
pop
dec
rcrl
in
dec
inc
es
mov
loop
fimuls
or
mov
mov
aam
cmc
and
aam
outsb
jbe
out
int3
lcall
dec
push
int
arpl
dec
push
lock
xor
int3
bound
or
push
or
inc
inc
push
jmp
cmp
inc
cmpsl
jnp
dec
aaa
imul
sub
repnz
sub
xor
loop
push
fs
cs
mov
pop
std
fwait
add
insb
mov
rcll
push
fisubs
xor
and
jge
in
pop
in
lahf
xor
xor
inc
popl
mov
fildll
jle
orl
inc
ja
push
mov
shl
push
push
push
sub
cmp
lahf
push
scas
in
repnz
out
push
fwait
icebp
mov
ret
jno
mov
sbb
and
and
xchg
mov
xchg
cmpsl
push
inc
test
cmc
mov
mov
cmp
fucomi
inc
inc
inc
mov
roll
andl
in
sarl
sbb
das
fcompl
pop
loopne
in
inc
dec
sub
enter
or
pushf
mov
xchg
add
scas
movsb
cmc
clc
adc
adc
movl
addr16
mov
mov
stc
stc
test
pushf
pushf
lea
je
pushf
movw
sub
pusha
jmp
lds
icebp
mov
inc
sbb
cmp
aaa
lea
fldl2t
xchg
sahf
sbb
mov
adc
setae
xchg
test
icebp
in
cmp
and
or
mov
lret
repz
out
rcrb
pop
push
mov
mov
pop
cltd
pop
add
pop
nop
pop
mov
and
push
or
mov
push
xchg
mov
movsbw
pop
mov
pushf
push
pushl
ret
inc
sbb
mov
std
arpl
xor
mov
jecxz
xor
pop
mov
jle
dec
ds
mov
shll
push
outsb
jb
adc
push
out
in
mov
jo
push
imul
in
loope
sub
lret
adc
rcll
dec
dec
into
loope,pt
sub
dec
xor
sarl
insl
loope
jnp
leave
xor
mov
mov
aad
add
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
and
je
call
bt
test
cmp
jmp
add
pushf
movw
movzwl
neg
mov
neg
cmp
mov
clc
stc
cmp
add
push
push
call
xchg
pop
ja
mov
add
cmpsb
aam
dec
out
fs
cmp
fisubrl
add
repz
pmulhw
cwtl
sarl
mov
filds
adc
arpl
xchg
pop
fsubs
cmp
sub
sbbl
ja
or
mov
inc
sub
sti
adc
or
shlb
loopne
mov
gs
arpl
popl
call
ret
lret
out
mov
out
pushf
sub
mov
jb
xchg
int3
insb
cmpsb
or
stos
sub
js
test
push
popf
popf
inc
xor
dec
sub
mov
or
xchg
or
iret
mov
push
repnz
xchg
outsl
adc
push
and
clc
push
ljmp
nop
int
dec
pop
push
jge
xchg
cmc
push
es
stos
mov
sbb
and
jbe
es
stos
jb
cltd
repz
mov
pop
gs
mov
cmpsl
mov
xchg
in
loopne
jmp
lea
ja
sets
dec
jmp
add
dec
outsl
arpl
inc
jb
add
xchg
je
add
inc
ljmp
and
lea
jne
push
mov
pusha
call
add
movb
push
mov
mov
lea
jmp
cmp
mov
call
jmp
int
mov
push
pusha
push
je
or
pushf
mov
push
imul
mov
fmuls
mov
fstl
arpl
mov
ror
xor
and
enter
adc
es
out
cmp
jge
add
ds
pop
mov
fnsave
adc
lea
test
or
sahf
cli
cs
repnz
ljmp
inc
js
call
fistpl
mov
sbb
mov
ror
xor
sub
hlt
out
sar
lods
cmpsb
mov
sbb
push
imul
sbb
sub
push
add
fldl
ds
testb
mov
sub
mov
mov
jns
mov
push
les
push
xchg
ss
sub
push
jbe
mov
mov
int3
ds
aam
call
mov
fdivrs
arpl
sbb
mov
sub
push
xor
xor
add
push
and
stc
mov
pop
call
adc
cltd
mov
jg
sbb
jp
test
sub
cmpsb
mov
add
add
cmp
out
sub
push
sbb
insb
mov
je
out
test
jo
add
cs
sbb
mov
inc
scas
and
ljmp
out
pop
into
movsb
insb
mov
pusha
push
imul
in
les
sub
cmpsb
xor
cmp
xor
push
or
push
mov
pop
lods
test
sbb
in
sbb
jp
shll
adc
les
inc
sahf
shrb
sub
pop
inc
data16
jne
mov
push
push
inc
push
mov
lods
in
inc
mov
insl
pop
pushf
decl
fwait
sub
cmp
and
inc
mov
xchg
rorl
lds
xchg
sti
std
fimuls
cmp
sub
sub
cs
jg
add
mov
cmp
or
or
fisubrs
outsb
aad
popa
push
inc
lods
push
les
mov
dec
fcomps
xor
mov
pop
push
shrb
adc
jb
cs
and
lods
push
or
dec
push
mov
or
add
in
sbb
mov
dec
pop
in
xchg
paddq
push
pusha
and
adc
inc
shrb
and
and
out
iret
cmp
mov
test
imulb
jl
aam
pop
mov
data16
pop
jle
lds
lret
jg
add
call
fs
and
xchg
jnp
jge
call
popa
imul
adc
xor
dec
inc
xor
push
sbb
inc
jle
pop
movb
les
imul
sahf
push
mov
cmpsl
adc
cmpsb
cmp
jo
and
pusha
lods
es
xchg
les
sbb
pushf
sub
add
xor
cmp
dec
pop
pop
outsb
xorb
inc
out
or
mov
sbb
and
add
pop
clc
enter
and
inc
xor
movsl
pop
daa
fcmovne
xor
xor
cvttps2pi
test
ss
jnp
push
jo
ss
mov
sbb
pop
mov
inc
rcrl
xor
pop
mov
sub
xlat
xchg
jp
sahf
add
mov
jg
mov
pop
dec
inc
sub
fbld
fucom
or
pop
cli
mov
loope
jae,pn
in
cmp
mov
push
cld
cld
cli
or
sbb
cld
shll
pop
stos
or
push
push
in
adc
cli
sub
imul
xlat
call
mov
std
ljmp
cli
pop
push
loopne
sbb
shlb
fstpl
jmp
in
cmp
dec
cmp
lret
jp
rorl
sbb
jns
sub
adc
and
ljmp
sub
loope
sbb
mov
sub
sbb
or
sbb
fisubs
sti
shr
sbb
fmul
fdivr
in
call
jmp
aas
aas
in
loopne
sbb
xor
fistps
fistps
pop
in
int
add
stos
aaa
pop
lret
ljmp
je
data16
dec
jmp
jne
ljmp
ret
mov
sbb
subb
cli
pop
loop
repnz
stos
fisubrs
or
ljmp
fwait
sbb
sub
fnstsw
inc
dec
or
loop
fbstp
cli
test
sbb
mov
popa
or
sub
ljmp
ds
and
pop
ljmp
fwait
call
lret
ret
jecxz
in
je
in
repnz
jle
and
push
loopne
icebp
mov
cli
fucomp
stos
in
repnz
sub
adc
xor
mov
and
loop
repnz
sbb
call
xlat
loop
in
repnz
sub
adc
xor
mov
push
inc
iret
jecxz
fisubl
cli
or
repz
call
or
add
inc
inc
lret
popf
xlat
fmuls
and
shl
pushf
push
mov
add
and
lret
inc
adc
push
push
adc
repnz
mov
bound
loopne
enter
cli
and
insb
pop
mov
push
or
test
loop
mov
sbb
mov
lret
std
mov
pop
fnsave
add
inc
aad
inc
cmp
sub
shr
ds
sub
mov
jno
loop
ljmp
pushl
sbb
mov
pop
dec
sub
ret
in
sbb
loop
in
call
out
stc
inc
dec
push
sbb
push
ljmp
mov
jmp
sti
dec
or
pop
add
pop
fwait
mov
je
lcall
insb
ficoml
test
loop
jns
push
in
loopne
lret
cmpsl
subb
and
cmp
bound
jnp
inc
jp
lcall
sbb
clc
push
std
pop
push
fsubs
fdivrl
loope
adc
inc
stc
in
sbb
mov
clc
mov
repnz
in
pop
adc
ljmp
cld
jmp
fdivrp
push
roll
sub
cli
repnz
and
xor
jns
loop
mov
sub
fcom
call
sbb
sub
call
add
sbb
jnp
inc
bswap
push
inc
lods
adc
lods
movsl
jecxz
jnp
xor
stos
mov
jle
jb
push
xor
jecxz
cmpsb
sub
jb
jns
in
clc
sbb
arpl
fidivrl
ljmp
jb
stos
dec
pop
pop
bound
in
repnz
ljmp
jle
cmp
sbb
fcomp
pop
stos
push
rcr
push
fisttps
hlt
in
loop
cli
add
pop
and
mov
mov
das
std
mov
repz
add
daa
or
xchg
jnp
nop
cmp
and
ljmp
push
jb
pop
mov
jnp
push
pop
aad
and
sbb
cmp
sbb
loop
or
cmpsl
push
xor
repnz
out
or
bnd
aaa
mov
mov
or
lock
sbb
out
test
call
hlt
sbb
loopne
mov
cmpsb
enter
gs
inc
cli
in
in
mov
mov
inc
add
dec
mov
sbb
jmp
fstpl
stc
xchg
inc
fnstcw
lret
test
addr16
add
mov
sub
arpl
rclb
add
nop
sub
rorl
pop
adc
stos
jb
lret
push
lret
pop
mov
stos
imul
pop
mov
loope
and
out
ficoml
cmp
sarb
pop
jns
mov
mov
call
jbe
lock
sbb
push
xor
in
or
mov
ficompl
cmpsl
sti
iret
jl
or
popf
mov
outsl
or
frstor
fildl
movsb
jo
test
icebp
minss
rcl
cltd
xor
jl
in
hlt
inc
inc
pop
cmp
ds
inc
or
jl
daa
aaa
lods
add
in
stos
loope
loope
shl
aad
test
sarb
outsl
xchg
lahf
sub
lds
jnp
xorb
jbe
push
lret
imull
push
sahf
loope
pop
ljmp
in
lcall
sub
mov
idivb
lcall
in
xor
jp
push
fnstsw
fdivrl
mov
jle
scas
or
or
push
pop
xchg
rclb
sti
sub
jmp
out
bound
cld
or
xor
faddl
cmp
dec
xor
ds
add
in
movsb
in
cmp
repnz
dec
adc
xor
arpl
pop
test
mov
aaa
adc
in
pop
or
in
cmpsl
pop
push
pop
dec
pop
cmp
in
cmp
sti
jp
out
out
and
fimuls
pop
jbe
sbb
cs
pop
fsubl
mov
and
push
es
dec
stos
cmc
fbstp
sbb
cli
or
lcall
xor
popf
ljmp
xchg
imul
popf
adc
cmpsl
mov
sahf
adc
mov
pop
mov
clc
jmp
cs
dec
mov
dec
fwait
mulb
fisubrl
test
xor
jecxz
and
rorb
or
inc
test
in
or
mov
rol
jb
fst
xchg
imul
js
jbe
mov
cs
ljmp
sti
mov
mov
and
out
in
inc
cmp
inc
cmc
cmp
mov
sbbb
les
movsl
jl
jb
inc
push
inc
fisttps
cwtl
sti
pop
cmpl
dec
call
and
jb
adc
sub
stos
cmp
and
out
xchg
js
in
and
sub
int
loop
and
scas
repnz
arpl
cmpsb
dec
movsb
pop
ljmp
into
fildll
sbb
movsl
jp
lcall
fnstenv
iret
loopne
subb
dec
sbb
jbe
in
and
xchg
stos
sti
add
stos
les
into
stc
aaa
into
sbb
mov
cs
rcrl
iret
out
outsb
inc
outsb
je,pt
cmp
sahf
mov
jl
or
push
fisubl
jbe
mov
adc
dec
std
xchg
sahf
mov
sbbb
jle
fisubrl
sub
fisubs
outsb
daa
xorb
sahf
push
jb
aad
sti
xchg
mov
mov
outsl
jbe
jbe
sahf
ljmp
and
outsl
ss
in
push
xchg
or
push
ja
pop
add
fwait
sbb
xor
je
out
cmp
mov
sbb
jecxz
out
add
nop
gs
in
aad
cli
and
out
jl
nop
adc
xor
push
sub
scas
sub
cmp
icebp
xor
ret
fcomi
mov
and
repz
ds
jo
ret
add
xor
push
mov
dec
fstl
push
mov
jg
xor
xchg
out
loop
sti
lods
sahf
sub
mov
cmp
shr
in
jmp
cli
idivb
lret
aaa
xor
fidivl
sub
fnsave
pusha
iret
lea
pop
test
andl
and
push
stos
and
movsb
push
cmp
pushf
push
insb
mov
and
out
cmpsb
popl
fistpl
adc
out
in
pop
adc
mov
cmc
out
cwtl
pop
es
outsb
mov
gs
popa
mov
mov
xchg
inc
popf
movsb
mov
or
jb
lahf
add
icebp
and
in
push
fcmovbe
jl
jbe
dec
inc
xchg
sbb
xor
xchg
xchg
stos
out
mov
scas
push
sbb
jl
inc
into
lock
out
mov
and
stos
fs
jbe
dec
add
adc
in
fmull
inc
cmp
daa
fcoml
cwtl
dec
jg
es
sti
dec
mov
subb
sub
mov
pop
ljmp
stc
aaa
sti
sti
decb
ljmp
push
in
test
std
xlat
adc
jmp
test
jecxz
neg
push
mov
outsb
addb
loope
pop
inc
mov
out
pop
jl
rorb
mov
insb
xor
in
xorb
and
add
outsb
mov
pop
mov
jae
sub
into
sbb
jg
and
icebp
adc
lret
mov
sbb
dec
movsl
incb
cld
das
mov
std
push
sbbb
std
jnp
out
std
inc
mov
xchg
and
ss
mov
ljmp
lret
or
or
js
cmp
fisubrl
mov
aas
out
fmul
push
ret
add
bnd
insl
sahf
inc
xchg
sub
stos
inc
push
in
cmc
imul
push
scas
xchg
bound
add
jp
pop
int
and
sbbb
mov
ret
jl
shl
repz
mov
std
or
lods
push
cmpsb
aas
mov
lods
repz
adc
addr16
mov
sbb
add
fs
aaa
out
sti
xor
lcall
cmpb
ss
lret
pop
mov
fmull
pop
sbb
inc
addr16
and
adc
add
pop
hlt
mov
push
cld
in
lock
int3
lock
pop
add
push
or
sbb
loopne
sub
sbb
inc
ljmp
jg
mov
outsb
in
cli
sub
loop
lahf
insb
adc
mov
fcmovnu
in
adc
fbstp
jl
call
push
push
ret
sahf
call
xchg
addb
pop
adc
jge
mov
into
push
ss
nop
xchg
adc
popf
pop
add
fwait
jg
aas
arpl
jle
mov
stos
popa
clc
rol
stc
cmc
clc
mov
cmp
call
mov
push
pushl
ret
call
cmpsl
pop
mov
mov
pop
movsl
sub
lahf
xchg
jnp
pop
sbb
sub
pop
leave
cmp
mov
loopew
sub
cmp
enter
dec
out
push
add
fs
inc
add
pop
adc
cmpsb
int3
jno
gs
pop
jmp
test
sub
dec
inc
xor
add
add
add
add
add
test
add
pushf
pushl
push
lea
jmp
dec
mov
mov
mov
lea
movsl
cmc
sub
mov
lock
push
das
mov
and
add
aad
cmc
mul
push
sbb
sub
mov
imul
add
addr16
shrl
add
jg
cltd
filds
fcomps
mov
mov
sbb
jno
testl
call
jmp
test
clc
test
add
jmp
jmp
mov
call
push
call
lea
jae
stc
test
cmp
pusha
pusha
jmp
sub
call
call
jmp
and
cmp
mov
add
dec
and
in
pop
mov
inc
out
mov
mov
sbbl
xor
cwtl
push
in
ret
cmp
push
sahf
and
sbb
jb
xchg
xor
jae
dec
sub
es
setno
hlt
and
jmp
push
inc
cmpsb
lret
push
mov
fdivrs
daa
cld
lods
ret
popa
pop
jmp
mov
loope
jmp
adc
cli
mov
inc
ss
fs
std
cmp
adc
clc
cmp
adc
in
mov
in
xor
fisubrs
push
or
push
cmp
lock
cmp
aam
mov
add
cmp
in
sub
inc
fildl
iret
repz
add
jecxz
xor
sbb
mov
dec
mov
in
push
and
and
sbbb
xor
push
mov
scas
iret
inc
and
inc
insb
or
lods
ja
xor
add
hlt
lcall
cltd
pop
lea
mov
mul
mov
rclb
iret
in
inc
mov
lret
lret
nop
mov
cwtl
out
lret
and
push
push
mov
sahf
and
adc
xor
push
enter
or
rcll
leave
mov
mov
sbb
pop
ss
pop
movsl
daa
test
add
test
mov
fbld
sbb
lea
mov
jae
pop
xchg
add
out
push
subb
jbe
xchg
pop
repnz
jp
adc
ret
aaa
push
mov
ffree
flds
outsl
fildl
xor
xchg
insb
or
pop
xchg
pop
movsl
mov
sarl
cmp
ljmp
rclb
test
mov
rcl
cmp
adc
add
add
mov
pop
int3
shll
iret
addr16
inc
jae
jae
push
shll
and
sub
inc
xchg
lcall
add
test
adc
add
mov
pusha
mov
pusha
jmp
movzbw
mov
pushf
movb
mov
lea
jmp
push
pushf
lea
jne
pusha
mov
mov
pushf
mov
jmp
xchg
adc
mov
into
adc
adc
mov
cs
jg
addr16
popf
insl
out
bound
xlat
cmp
sbb
addr16
mov
filds
mov
js
xor
pop
je
out
mov
mov
decl
adc
sbb
mov
push
mov
dec
ret
outsl
xlat
cmc
jne
out
or
out
push
arpl
jge
push
adc
mov
mov
popf
sarb
sbb
aam
mov
aas
jns
push
bound
push
cs
imul
imul
in
es
push
mov
mov
out
dec
outsl
scas
push
add
mov
xchg
int
leave
jg
mov
pop
jnp
adc
ds
rorl
cmpsl
xor
loope
shlb
out
pusha
cmc
repnz
push
jmp
movb
sub
lea
push
inc
lea
pushf
lea
jb
call
pushf
adc
jmp
cmp
decl
mov
sub
sbb
test
into
sbb
decl
xor
sub
sbb
lcall
sbb
sbb
lret
int
xor
xchg
test
aaa
das
pop
xchg
mov
leave
xchg
mov
test
fcomps
xchg
cmp
pop
sub
leave
dec
lods
aas
mov
inc
bound
nop
dec
scas
mov
sbb
inc
ja
arpl
adc
in
inc
xor
jmp
mov
sahf
inc
mov
pusha
and
sub
mov
jmp
call
jmp
lea
jb
test
cmc
jmp
pushf
add
pusha
call
pushl
xor
cmc
pusha
clc
jmp
cmc
cmp
push
or
push
jmp
lea
jne
bswap
stc
call
cmpsl
cs
jl
nop
scas
adc
mov
push
pushf
je
mov
nop
cld
mov
cmpsb
pop
lcall
xor
cwtl
adc
outsl
roll
loope
cmp
xchg
mov
mov
fcompl
fs
and
or
dec
out
and
sti
nop
or
or
lret
pop
fcomip
lret
icebp
movswl
out
push
xchg
fincstp
lds
repnz
mov
jns
and
insb
cli
xchg
inc
stos
jbe
jle
incb
inc
out
mulb
popf
stc
xlat
xchg
cmc
add
bt
rcr
sub
xchg
sub
mov
ror
bt
mov
push
movb
mov
shld
rcl
and
rcl
mov
call
add
inc
gs
imul
outsb
addr16
add
into
add
shlb
lret
sets
pop
movsbw
push
pop
pop
call
movb
neg
jmp
add
pop
xlat
mov
push
and
nop
es
xorb
in
and
xchg
sbb
dec
add
cmc
lcall
bound
dec
je
addb
push
clc
lcall
pop
jle
out
daa
add
jle
loope
addr16
fsubr
mov
jmp
add
xorl
dec
mov
imul
js
cld
cmp
lods
lcall
ss
sbb
mov
sub
dec
or
ret
lcall
sbb
ss
out
gs
repnz
fiadds
ss
out
sbb
jnp
mov
decb
pop
test
push
decl
leave
dec
pop
loope
loope
pop
cld
pop
mov
push
call
push
dec
ss
out
pop
cs
ret
scas
cli
out
lret
add
popa
ret
or
mov
rorl
ret
shrl
jecxz
decl
fnstcw
aad
rorl
inc
adc
outsb
xor
sub
jp
sub
jo
pop
and
ljmp
enter
dec
add
inc
add
imul
fistpl
lods
dec
and
stc
aas
in
mov
xchg
mov
out
sti
mov
lods
or
scas
sbb
or
call
push
and
pop
xor
cmp
dec
dec
hlt
adc
mov
movb
movb
mov
pushl
ret
and
mov
mov
fs
adc
clc
sahf
sbb
mov
out
lods
gs
or
je
stc
or
enter
inc
cmp
sbb
xor
addr16
adc
scas
mov
scas
adc
roll
inc
pop
pop
xchg
and
in
mov
hlt
inc
xchg
enter
out
sbb
cmp
mov
jecxz
fisubrs
dec
hlt
cwtl
or
jl
or
xor
addr16
cmp
out
lret
add
and
xchg
stos
add
leave
int
aad
lret
in
xor
test
fmul
cld
jp
push
daa
fs
mov
add
xorb
sti
idiv
adc
sub
sub
xchg
mov
movsl
inc
loope
out
xor
xor
inc
ret
dec
mov
aas
add
testb
lahf
xor
pop
dec
arpl
dec
addr16
int
scas
das
imul
add
test
add
pushf
pusha
push
cmp
cmp
call
movsl
sub
mov
adc
lock
or
mov
lods
fistpll
cmp
mov
mov
repnz
frstor
ja
sbb
data16
lock
and
popa
xchg
xchg
shr
pop
cs
xchg
cmpb
fs
and
adc
mov
enter
mov
cwtl
xchg
pop
fs
xor
jp
ds
lock
movsb
inc
hlt
nop
sbb
inc
inc
or
push
ss
sarb
mov
aam
lret
leave
dec
popf
imul
imul
aaa
lea
push
shrb
add
or
insl
in
pop
jbe
into
xor
mov
sub
mov
push
mov
sti
sahf
push
mov
xor
xor
bound
mov
iret
add
sub
imul
lahf
fnstsw
aaa
mov
xchg
xor
ret
hlt
cmpsl
scas
in
mov
aad
adc
test
add
lds
dec
out
mov
cs
loopne
lea
sbb
sub
pop
out
push
les
ror
pop
adcb
mov
pop
scas
mov
daa
lock
mov
mov
mov
scas
lcall
out
and
pop
jno
fwait
test
arpl
push
mov
lret
stc
scas
xor
subl
sti
jnp
outsb
cmp
pop
repz
mov
je
mov
mov
push
cld
in
in
call
rcr
mov
mov
lea
xor
cs
push
lea
adc
sbb
scas
insb
xor
mov
mov
andl
and
insb
sub
sbb
daa
les
aam
mov
js
nop
int3
std
iret
cmc
aam
sub
xor
repnz
push
lea
je
push
bt
pusha
or
call
sar
btc
mov
pushf
test
and
call
pusha
clc
rol
movb
jmp
push
lea
je
jns
inc
clc
add
adc
lea
sub
sub
neg
dec
shr
or
and
mov
bswap
or
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
test
jmp
mov
add
sbb
mov
cmp
cmc
cmp
mov
mov
jmp
jmp
lea
je
cmc
pusha
pusha
cmp
cmp
mov
lea
je
clc
cmp
jmp
repnz
movb
lea
jne
mov
movsbw
movb
jmp
mov
bt
neg
push
inc
bt
cld
stc
cld
pushw
popfw
pushf
movw
inc
pushf
push
jmp
stos
call
mov
push
test
mov
jmp
call
lea
je
cmp
cmc
cmp
pushf
jmp
mov
push
movw
push
lea
jmp
pusha
pushf
call
push
adc
pushf
lea
jmp
stc
add
push
push
pushl
cmp
pushf
pusha
pushf
lea
jb
jmp
popl
mov
ret
add
stos
or
pushf
bound
in
out
scas
mov
sbb
lcall
ss
outsb
mov
inc
xor
mov
inc
sbb
rorb
clc
rolb
les
std
stc
mov
push
mov
push
sub
push
js
xor
data16
es
push
jae
outsl
mov
lret
testl
jmp
xor
jne
popa
into
pop
fimuls
sbb
add
cmp
out
add
movzwl
inc
bsr
pop
mov
pushl
add
jmp
and
shlb
jb
out
sbb
es
adc
fdiv
es
cmp
lret
std
mov
frstor
inc
cmp
cmp
scas
addb
xor
jecxz
cltd
push
dec
inc
call
xchg
or
popf
shlb
or
arpl
cmp
shlb
xor
push
mov
pop
mov
iret
sub
in
push
xlat
push
pop
mov
sbb
push
out
fwait
push
lret
xchg
push
lcall
test
jb
add
or
mov
or
jmp
pop
inc
out
jae
roll
lds
add
lods
imul
shlb
rcll
ret
sub
fwait
push
sub
jbe
insl
xlat
sub
mov
push
testl
fstl
std
mov
into
mov
mov
and
mov
xchg
imul
dec
int3
and
outsb
cmpsb
call
mov
cli
sbb
insl
mov
in
shlb
ljmp
sub
jb
clc
stos
imul
out
mov
test
push
call
imul
mov
lds
dec
lahf
lds
xchg
xchg
add
xchg
pop
arpl
add
sarb
lret
repnz
icebp
cmpsl
jp
flds
stos
movsb
ss
cmpsb
inc
ret
xlat
jne
xchg
sub
clc
inc
inc
jnp
inc
xchg
mov
roll
aad
mov
mov
rorl
mov
pop
mov
fucom
mov
popf
icebp
into
mov
fwait
popf
pop
or
gs
mov
rorl
aad
testb
rclb
mov
push
das
lcall
fsubrp
sub
pop
mov
mov
push
repnz
jbe
mov
inc
divl
pop
dec
lds
dec
push
pusha
jne
in
ds
nop
les
hlt
sbb
sarb
push
sbb
lret
inc
mov
xchg
mov
sbb
sarl
clc
and
scas
mov
rorl
cmc
sub
xchg
xchg
or
add
rclb
jae
cltd
push
scas
adc
call
adc
push
enter
xchg
inc
cmp
lods
adc
jge
cmp
pop
jae
popf
fnclex
icebp
fisttpl
fistpll
out
scas
or
clc
mov
orb
nop
int3
int3
subb
jge
mov
rcr
dec
sbb
xor
push
jo
pop
jg
inc
xchg
and
rolb
rcrl
adc
mov
adc
rolb
dec
cmp
add
mov
fsubs
out
sbb
jae
mov
into
sub
daa
sub
pop
mov
fwait
push
adc
push
into
stc
pop
pop
ss
stos
sahf
xorb
lret
inc
mov
int
mov
inc
in
mov
into
mov
push
dec
lods
lcall
cmp
jne
or
popf
mov
popa
sbb
aas
jns
sbb
xor
xor
cli
in
jmp
add
scas
es
loope
ficompl
pusha
adc
cmpsb
mov
popf
inc
lea
stc
mov
popf
mov
or
push
jl
mov
jmp
mov
daa
mov
mov
inc
arpl
outsl
lods
jae
cmpsl
gs
push
jp
mov
jmp
fldenv
in
inc
insl
xlat
enter
sub
std
popf
out
enter
out
sbbl
push
ds
fs
in
xlat
jecxz
or
cmc
mov
mov
int
not
xlat
shrl
sbb
dec
imul
cmpsl
ret
jp
jp
fidivs
dec
shl
call
clc
xchg
stc
sar
mov
call
pushf
lea
jae
cmc
bt
cmp
push
call
push
push
lea
call
pushf
pusha
mov
pushf
mov
mov
lea
jmp
movb
pusha
mov
lahf
lea
mov
pusha
call
pushf
stos
mov
movb
pusha
pusha
lea
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
scas
lret
mov
or
jge
mov
xor
int3
inc
mov
xchg
add
loop
jle
or
xchg
xorl
stos
dec
adc
or
cmpsb
or
fwait
addr16
frstor
imul
fxch
mov
and
push
push
sti
mov
xchg
or
jne
ljmp
aam
lret
cmc
ficoml
adc
or
test
std
inc
sbb
mov
je
in
cwtl
sbb
sbb
call
xor
mov
pushf
lea
jmp
push
mov
pushl
ret
repnz
mov
jmp
mov
mov
call
fs
cs
mov
adc
mov
cld
lcall
mov
push
or
and
mov
mov
dec
sbb
mov
rsqrtps
aam
aad
leave
and
sbb
jl
adc
jbe
push
jo
mov
ffreep
cs
test
add
fwait
inc
mov
push
outsb
shll
int
repnz
xchg
les
shlb
or
pusha
scas
divb
jg
sub
jle
jge
push
or
dec
lds
aam
or
popa
jno
into
cmp
leave
imul
aad
leave
mov
push
or
in
jo
jl
enter
push
xor
jmp
jns
mov
and
les
pusha
pusha
cli
inc
pop
inc
add
mov
jnp
leave
inc
repnz
cmp
ret
jb
push
scas
lods
cmp
lahf
cwtl
sub
and
movsb
pop
notb
sub
sbb
mov
adc
mov
popf
sbb
mov
xor
lock
push
movw
lea
call
push
test
stc
cmp
lea
jle
pushf
push
lea
jae
stc
cmp
pushf
pushf
pushl
push
lea
jae
test
jmp
cmp
lret
enter
xor
subb
ljmp
add
ja
add
sub
push
mov
fisttpll
loopne
adc
enter
repz
stos
movsb
ss
divl
sbb
lods
scas
sti
or
xchg
test
out
pop
lea
adc
jge
das
out
push
inc
scas
out
sti
and
inc
ret
lahf
mov
pop
icebp
in
mov
and
ss
cld
or
add
pushf
lds
add
hlt
jns
add
lea
je
mov
inc
mov
pushf
pushf
push
call
lea
jne
stc
rcr
sub
bt
mov
shr
add
bt
stc
mov
call
lea
jb
clc
clc
bt
cmp
push
lea
jae
jmp
popa
push
or
mov
test
push
inc
jle
lret
and
call
ret
js
sub
xor
mulb
mov
push
adcw
fdivp
mov
rcrb
adc
aas
sbb
out
lods
dec
je
mov
pushf
dec
pop
add
jge
std
arpl
nop
sub
inc
and
dec
adc
js
loop
jns
bound
cli
or
aam
lcall
cmpsb
repnz
rcrb
cwtl
rorb
rorb
movl
lea
jmp
pop
ret
mov
and
in
cmp
pop
fnstsw
sbb
xchg
addr16
pushf
pop
mov
xchg
outsl
aad
pop
fistpl
cmp
js
inc
xlat
jne
xor
cli
mov
pop
ror
cmp
jl
add
stos
xchg
stc
dec
jno
ljmp
push
sub
lock
push
fs
loopne
lock
bswap
clc
mov
xchg
lret
jo
fs
push
push
cmp
push
lods
sub
cmp
mov
movb
sarb
lret
cmc
insl
sbb
iret
cmp
lods
lret
mov
es
data16
jne
addr16
imul
adc
mov
popf
fistpl
mov
cmovnp
lret
addr16
test
clc
xor
mov
stos
or
mov
nop
out
jp
dec
xor
xchg
xchg
fst
cmpsl
fs
test
out
xchg
outsl
cmpsl
repz
or
pusha
xchg
js
fdivrl
lahf
out
icebp
push
orl
call
mov
sub
imul
pop
mov
mov
leave
inc
call
rcrb
shrb
mov
leave
inc
jno
xorl
shll
inc
insl
loope
inc
mov
mov
xchg
pop
fnstcw
fwait
leave
pop
adc
outsl
mov
in
adc
mov
pop
scas
mov
lds
stos
inc
sahf
mov
inc
dec
inc
jae
xor
icebp
outsl
stos
out
jae
into
mov
sub
aad
push
sti
fwait
jg
nop
xor
mov
mulb
push
xlat
addr16
xchg
and
push
idivb
mov
push
cmp
jge
dec
icebp
popf
sub
or
mov
jbe
sbb
sbb
int
cmp
mov
lea
jbe
shr
sub
and
neg
mov
or
sub
sub
mov
pushf
adc
bt
add
cmp
xadd
shl
shr
movzbw
sub
je
movsbw
mov
call
test
aad
mov
inc
ljmp
lods
stos
lock
je
cmpb
jl
in
bound
cld
mov
test
jp
imul
and
jg
adc
mov
outsb
and
xor
dec
call
hlt
pop
repnz
and
ret
mov
cs
pusha
repnz
leave
and
ret
jmp
cmp
shll
cmpsl
movsl
cwtl
ss
adc
out
movsb
lcall
lds
scas
or
add
aas
push
mov
aam
enter
mov
fcomps
fidivs
out
or
jle
sub
xchg
in
outsb
inc
daa
add
out
fsubs
push
dec
pop
call
mov
push
xchg
push
mov
mov
inc
ret
add
adc
fs
jne
shld
neg
rol
bswap
sub
adc
das
bts
mov
call
jne
in
mov
test
mov
or
pop
mov
adc
add
inc
jle
jbe
sbb
jge
xor
sbbb
mov
cltd
mov
ds
dec
jl
repz
aam
push
sub
fnstenv
mov
rcl
sti
dec
xor
cmp
stc
mov
dec
dec
sbb
aam
movsb
adcb
xchg
clc
and
test
cmp
pop
hlt
push
repz
pop
or
repz
push
ret
shrl
fucomip
sbb
mov
push
lock
fcmovnbe
fs
fcmovnu
shll
dec
mov
addb
rcl
pop
xchg
gs
fwait
decl
pop
dec
dec
testb
jecxz
add
mov
call
out
mov
aad
lds
or
jbe
test
jge
out
and
leave
rorl
sub
ret
jge
xchg
test
xchg
xchg
pop
sti
iret
jmp
pop
mov
pop
icebp
jne
test
add
adc
and
je
jmp
mov
pusha
call
pushl
dec
bt
movb
neg
jmp
clc
cmp
call
push
pushf
inc
pushf
push
cmc
cmp
pushw
popfw
call
rol
clc
xor
mov
stc
bt
cmp
jmp
mov
shrl
push
daa
xor
add
fsts
lds
mov
push
xchg
add
in
call
mov
ret
ret
lldt
push
push
xchg
jae
add
lcall
mov
push
enter
xchg
adc
shld
rol
mov
jns
jmp
scas
loopne
sbb
and
add
sub
jo
test
jmp
stc
cmp
cmp
cmpb
pusha
call
xchg
mov
adc
fs
jle
jnp
jno
test
pop
rcrl
js
xor
inc
popf
jp
pop
call
and
xchg
imul
inc
aas
insl
cmp
mov
popf
inc
jg
lea
adc
into
mov
and
push
mov
dec
jle
ret
push
push
jecxz
mov
gs
and
xchg
mov
sahf
enter
pop
mov
push
sbbb
push
dec
dec
cli
and
mov
insb
jle
add
cmpsb
mov
call
into
dec
mov
push
rcl
dec
and
scas
push
mov
andl
clc
loopne
jmp
pusha
mov
rorb
jb
mov
pause
adc
arpl
xor
or
xor
repz
jge
mov
lahf
or
fwait
out
mov
xchg
ja
arpl
add
into
test
pusha
stc
ror
pushf
test
xor
clc
stc
call
add
dec
insl
popa
addr16
outsl
popa
add
and
fiadds
adc
xchg
rcrb
idivl
shll
jl
sub
stos
and
mov
jnp
adcb
jne
sub
in
fisttpl
mov
adc
mov
mov
push
mov
ffreep
pop
pop
fs
push
popf
out
xor
test
ja
pop
pop
aaa
cmp
in
les
loope
push
pop
ret
mov
xlat
jecxz
arpl
pop
xchg
lods
sahf
into
inc
push
pop
lea
lea
mov
jmp
jmp
jbe
movsb
shlb
sbb
into
mov
ss
xor
cmp
mov
push
sub
loopne
sbbl
ljmp
jge
in
aam
fwait
jmp
jne
lea
xchg
arpl
aam
int
mov
sahf
lret
leave
dec
jno
push
ja
mov
fisttps
dec
in
cmpsl
push
push
pop
mov
adc
andl
test
out
fldl
push
inc
cmpb
outsb
push
outsb
out
pop
push
insl
shll
inc
movl
pushf
pushf
shr
call
call
sub
lret
or
in
xchg
minps
sub
fstl
arpl
dec
int3
dec
add
mov
pop
pop
lea
adc
cmp
imul
mov
xchg
rcl
dec
sub
fwait
inc
sarl
cld
xchg
push
sti
mov
jb
loope
jmp
sub
cli
shrb
jns
es
insb
pop
inc
arpl
jbe
dec
jo
je
test
sub
insb
cmp
jo
clc
leave
addl
xor
test
mov
scas
mov
lea
jne
cwtl
bswap
movsbw
movb
lea
movzbl
lahf
push
mov
lea
pushf
pushf
pusha
pushl
lea
jmp
pushf
pusha
pushf
inc
cmp
push
cmp
neg
stc
movw
push
bt
sub
bt
ror
jmp
add
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
cmp
jmp
pop
loop
mov
xchg
out
lds
add
cmp
mov
jnp
push
ja
mov
insl
sti
sub
ror
mov
add
mov
push
xchg
xor
ja
xor
loope
inc
jb
sub
inc
ret
mov
push
jo
pop
jne
sub
sbb
inc
data16
mov
mov
pop
sub
loopne
dec
pop
dec
xchg
lcall
lret
bound
cmpsb
push
ljmp
movsb
les
cmp
insl
mov
imul
jbe
pusha
or
xchg
mov
mov
jp
lcall
dec
and
outsl
adc
or
icebp
mov
xchg
adc
or
bound
lcall
cs
adc
push
fs
jae
cmc
stc
sub
call
cmc
sub
mov
and
popf
mov
imul
jne
mov
mov
jae
mov
sbb
push
inc
lcall
xchg
icebp
scas
fsubr
push
xor
xchg
inc
repz
mov
fldt
and
or
aas
dec
lret
adc
and
add
sti
ds
aam
push
pusha
pushf
stos
pushf
pushf
pushf
lea
jmp
call
mov
sub
test
out
xchg
inc
mov
or
add
out
test
fsubs
lcall
sub
loopne
out
xor
ficomps
test
xchg
mov
jb
mov
fdivs
enter
and
cmpsl
das
mov
loop
mov
movsl
in
cmpsl
cmpsb
orb
mov
pusha
aam
mov
cld
sbb
dec
sub
insl
and
mov
adc
insb
mov
jo
cld
inc
rolb
mov
lea
mov
sub
pop
cmp
add
test
mov
push
push
sbb
adc
enter
sub
cs
inc
xlat
int3
pop
insb
imul
test
fs
adc
push
nop
sbb
enter
xchg
rcrl
test
sbb
push
cmc
jno
jns
and
cmp
loopne
mov
call
test
push
cmp
lahf
not
lea
jmp
cmpb
jmp
add
or
sbb
jge
loope
inc
xor
mov
mov
fsts
lds
js
and
pop
mov
sub
pop
test
mov
mov
test
inc
push
cmp
insb
push
mov
inc
sub
mov
ja
xor
push
mov
inc
popf
addr16
leave
movsl
fnstcw
mov
mov
xor
mov
decl
cmp
or
out
cmp
xor
and
sbb
xor
movb
mov
pop
sub
insb
sub
sub
add
or
les
inc
test
scas
mov
ret
push
adc
leave
int
and
popa
rcr
test
jmp
into
xor
mov
ret
stc
testb
ss
mov
xchg
ja
jnp
loope
leave
adc
andl
movsb
push
hlt
pop
xor
and
ffreep
xor
call
xchg
adc
pop
pop
outsl
sub
mov
aas
fdivrs
xor
pop
mov
shr
xchg
adc
pop
inc
sub
mov
cmpsl
test
aad
xchg
das
cmp
push
cmp
cltd
aad
int
sbb
punpckhwd
or
adc
push
call
test
lret
popf
inc
jmp
pop
dec
imul
jg
push
mov
jecxz
cwtl
jbe
bound
mov
add
jle
dec
mov
aam
call
dec
mov
mov
inc
sbb
mov
pop
jmp
out
or
loope
jg
movsb
das
in
lock
insb
call
faddp
loope
jg
cmpsl
addl
xchg
push
pop
sub
push
mov
popa
addr16
insb
insb
add
stc
xchg
mov
clc
outsb
insb
add
fs
es
mov
adc
ja
cltd
out
pop
xchg
sti
jb
jp
fisttpl
sub
roll
mov
pop
stos
mov
adc
adc
movsb
movb
repz
jle
and
pushf
push
in
sbb
fdivs
sub
in
and
daa
lock
and
js
loopne
enter
xor
fildl
mov
jb
data16
fdivrs
mov
mov
ret
mov
subl
jno
js
sbb
push
nop
pop
test
lahf
out
mov
sti
test
loope
pop
hlt
loopne
in
and
arpl
inc
fstpl
scas
sahf
insb
pushf
sbb
loopne
test
push
int3
test
sub
sub
sub
jo
mov
iret
iret
cmp
jmp
scas
mov
inc
sbb
enter
cltd
std
decl
movl
cmp
mov
inc
bound
mov
add
push
mov
mov
pusha
repz
arpl
jns
jle
xor
adc
dec
ret
cld
and
jbe
jg
mov
mov
insb
jp
into
sbb
arpl
sahf
adc
add
push
es
mov
add
shrl
xchg
sbb
sbb
pusha
pusha
jmp
cmpb
mov
pushf
lea
jne
or
cmp
sbb
mov
stc
jmp
les
mov
lret
mov
pop
mov
fs
fnstenv
cltd
jecxz
mov
outsl
cltd
ds
cli
jo
dec
loop
ror
shrl
fimull
sbb
and
leave
fisttps
xchg
xchg
out
mov
test
and
inc
test
push
in
inc
or
int3
in
fisttps
enter
sub
mov
lret
stos
cmp
jl
push
jbe
xor
jnp
fstpl
mov
xor
ss
mov
add
dec
mov
push
xor
add
ret
das
cmp
and
test
inc
xchg
mov
fdivl
in
sub
mov
dec
sub
shrb
addb
mov
shll
and
cmp
test
add
test
bt
bswap
mov
pusha
add
pushf
pushl
push
movzwl
bsf
mov
bt
add
test
cmp
pushf
clc
mov
call
add
inc
gs
outsl
fs
gs
imul
add
lret
xor
mov
cmp
stc
cmpb
pushf
lea
jmp
cmp
sub
arpl
dec
jbe
repz
shrb
shlb
push
orb
faddp
lret
aaa
dec
addl
int
sbb
push
xchg
mov
jge
ja
cmp
and
jo
nop
fs
inc
jo
movsb
test
lea
mov
xlat
mov
lea
call
stc
pusha
cmp
jmp
pusha
mov
clc
bt
bt
cmc
test
push
push
lea
je
test
jmp
jmp
push
call
xchg
mov
aaa
popa
iret
fnstsw
popa
mov
jecxz
out
sbb
jae
xchg
insb
mov
outsl
xchg
xor
mov
cmp
out
cmpsb
and
add
push
iret
adc
fcmovb
sbb
ja
loopne
xor
adc
or
or
ljmp
mov
dec
outsb
ret
push
fcmove
subb
push
testl
lea
jmp
jmp
jo
sbb
mov
enter
and
mov
pop
cmp
sbb
fwait
out
test
adc
sub
or
fimull
xor
in
dec
std
ja
xor
dec
leave
imul
ret
or
xor
jl
enter
jle
incb
sti
insb
pop
add
fcoml
cmp
ds
cmpb
xchg
cld
inc
or
adc
sbb
push
mov
xchg
adc
xchg
loope
and
xor
test
dec
in
jnp
scas
movsl
fwait
imul
xchg
les
mov
jns
movsl
testl
sbbb
xorl
adc
sahf
repnz
jne
jp
scas
sahf
stc
mov
clc
dec
test
test
cwtl
mov
lahf
push
iret
imul
into
mov
adc
dec
leave
shlb
dec
out
add
call
mov
mov
mov
bound
es
xor
sub
pusha
lock
sbb
push
rorl
orl
mov
cmp
pop
adc
scas
mov
and
jnp
arpl
mov
and
repz
and
or
cltd
fsts
out
cmp
lock
inc
cmpb
add
and
ss
shlb
and
jns
fwait
ret
call
loop
or
stos
dec
stos
xchg
repnz
sub
mov
shl
les
xor
mov
mov
neg
bswap
rcl
mov
jmp
pop
add
mov
lret
das
std
sub
das
sbb
jmp
xchg
rcll
fwait
or
aam
mov
fwait
outsl
mov
cs
enter
mov
jbe
loopne
imul
cmc
xchg
ret
andb
stos
sti
sti
push
stos
mov
movb
xchg
repnz
push
and
adc
or
cmp
scas
xchg
pop
dec
sbb
push
std
gs
sbb
pop
dec
jnp
xchg
pop
arpl
dec
sbb
dec
aas
or
push
std
cmp
add
jbe
inc
inc
add
xlat
mov
mov
bound
pop
sub
sub
mov
sub
pop
ror
lock
out
pop
mov
les
lahf
std
jmp
mov
and
fbld
sbb
and
xchg
insl
insl
ffreep
fistl
mov
pusha
fcomp
orb
mov
push
pop
inc
or
cmp
pop
into
aam
test
fs
es
pop
push
mov
inc
out
jb
js
rol
sarb
repnz
add
mov
lahf
jo
in
test
cvtpi2ps
sarl
rclb
dec
push
divb
ljmp
and
movsb
push
hlt
sbb
jl
lods
loopne
and
and
or
jle
je
mov
xor
cmc
clc
cmp
pusha
lea
ja
pushf
jmp
mov
lret
test
dec
int
jmp
aaa
scas
jecxz
lahf
ficoml
dec
adc
les
jbe
mov
testl
mov
ss
jb
decb
xchg
xchg
fisubrl
ret
popf
addr16
stos
pop
je
imul
or
mov
out
imul
or
lret
ds
xor
add
imul
jae
push
xor
mov
lret
fidivl
ss
push
outsb
sbb
or
movsb
test
cli
push
sbb
sub
pop
sbb
xor
roll
int
fmuls
bound
imul
lret
pop
in
dec
cli
mov
push
scas
jo
popa
loopne
adc
aad
insb
jle
sub
jb
cltd
mov
mov
ja
mov
add
mov
movsb
sbb
lds
xor
jbe
xchg
ljmp
jge
nop
call
shl
ljmp
fs
jmp
lret
mov
push
add
jg
sub
xchg
sbb
dec
insb
mov
or
adc
mov
aad
xor
jmp
divl
jge
pop
repz
jne
dec
mov
aas
not
adc
fidivrl
dec
lcall
lcall
mov
fists
pop
xchg
out
inc
imul
aaa
arpl
imul
data16
pop
mov
sbb
push
out
bound
cs
clc
pop
add
jmpw
pusha
jo
shll
inc
inc
mov
xchg
push
push
sub
and
sbb
enter
push
jg
mov
sbb
dec
pop
adcl
movsb
xchg
adc
stos
jp
cmpsb
sbb
loopne
es
add
movsl
lret
lods
movsl
int3
int3
movsb
push
mov
in
xchg
and
adc
mov
das
lds
mov
inc
add
inc
fimuls
and
mov
pop
out
arpl
lahf
and
mov
pusha
adcl
pop
mov
int3
out
mov
lahf
cmpl
repz
sbb
dec
mov
inc
xchg
lcall
jae
fs
mov
cltd
aaa
testl
dec
mov
pop
test
jo
mov
cmc
sub
or
rol
shld
lea
pushf
jmp
lea
jae
mov
mov
btr
or
stc
xchg
mov
xor
mov
bt
cmc
sub
clc
pusha
pusha
repnz
call
into
les
xor
cmp
cmp
or
and
fnsave
and
pusha
push
mov
test
aad
out
sbb
cmp
bound
push
cmp
std
stc
sbb
mov
roll
clc
outsl
fs
popf
mov
into
xchg
rcll
add
jae
push
pop
popf
movsl
flds
cmp
push
mov
add
and
sub
push
std
aaa
mov
sbb
push
xchg
and
js
cwtl
jge
xchg
fwait
or
xchg
adc
pop
xor
pop
add
insl
fwait
stos
sbb
jno
jge
leave
mov
push
or
push
in
push
pop
xlat
jmp
xor
mov
ret
mov
test
aad
repz
xchg
mov
push
fisubl
xchg
loop
stos
xchg
js
ret
sub
cmpsl
jae
mov
cmpsb
and
clc
outsb
insb
fisubl
pop
or
and
sbb
dec
add
test
lds
mov
or
add
or
xchg
cmp
bound
repnz
ja
xchg
sub
fiadds
out
push
movsl
mov
aad
mov
gs
sub
jmp
xor
jg
lahf
sti
das
stos
pop
sti
out
sti
mov
cmc
daa
and
neg
mov
cmp
add
pushf
push
push
mov
mov
pushf
pushf
mov
not
call
xor
adc
int3
or
jbe
mov
lahf
pop
xchg
xchg
adc
scas
sbb
in
cmp
js
jp
ljmp
sbb
pop
pop
int
cmpsb
mov
cwtl
jge
cs
aas
inc
imul
cmp
ret
mov
xchg
mov
into
cmpsb
mov
lds
shrl
decl
mov
dec
daa
arpl
dec
dec
add
int3
jb
mov
pushl
lea
jne
jmp
push
mov
sbb
in
rol
mov
push
loopne
add
outsb
sbb
dec
inc
aad
add
mov
jp
xorb
fsubr
lret
int3
dec
mov
mov
push
stos
dec
enter
jg
inc
xor
add
cmp
test
test
js
xor
pushf
aam
mov
adc
and
sbb
xor
pushw
jb
sahf
adc
lret
sub
lds
insl
push
and
mov
setae
xor
inc
rolb
dec
or
mov
hlt
fsubs
and
inc
xchg
mov
or
mov
inc
ljmp
jg
mov
xchg
gs
add
dec
xchg
out
loop
popa
rclb
pop
mov
mov
loop
cs
or
adc
testb
xor
mov
enter
cmc
pop
jg
in
add
pushl
popl
pushf
push
cmp
pushf
cmp
lea
jnp
pushf
pushf
lea
ja
jmp
or
xchg
stos
mov
xchg
mov
adc
in
jmp
dec
dec
out
push
insl
adc
mov
aam
inc
fwait
outsl
adcl
dec
mov
les
cwtl
out
dec
add
xor
ja
xchg
imul
sub
dec
out
fwait
dec
call
jno
insl
jnp
dec
push
cmp
imul
jecxz
cmp
das
gs
aas
in
lcall
mov
les
inc
popa
imul
jg
inc
cmc
pushl
bt
neg
clc
pushf
bt
sub
mov
bt
stc
jmp
inc
pushf
cmp
cwtl
movzbw
lea
cwtl
cwtl
lea
jne
cwtl
pop
pushf
push
lea
ja
jmp
mov
lea
jo
pusha
movb
movb
dec
clc
stc
pusha
ror
push
mov
xor
lea
jo
clc
rol
cmp
test
cmp
mov
call
rep
call
jnp
mov
into
movsb
stos
dec
decb
cwtl
and
pop
dec
sbb
sub
add
or
cltd
popl
es
mov
stc
mov
divb
lret
sbb
pushf
and
pop
sti
sub
daa
mov
scas
mov
push
sahf
mov
popa
sti
inc
mov
dec
mov
xchg
shll
pop
gs
stc
jno
and
push
ret
ror
call
inc
dec
test
mov
cltd
cmpsl
std
jecxz
adc
sub
cwtl
movb
sub
insl
mov
inc
aas
sub
jmp
pop
test
outsl
lret
js
add
adc
jl
adc
mov
xor
xor
push
mov
mov
movsl
lea
dec
inc
in
mov
nop
jbe
fwait
sbb
adc
cli
xchg
ljmp
jge
xchg
call
and
jae
call
cmp
cmp
jmp
bsf
inc
mov
shr
dec
mov
mov
sbb
mov
cmp
lea
jae
pushf
cmc
or
call
enter
mov
mov
cld
add
or
sub
hlt
xchg
add
mulb
je
push
pop
push
jmp
insb
insl
in
fnstenv
dec
pop
or
arpl
adc
mov
cmp
in
push
int3
inc
in
pop
xor
jge
pushaw
push
arpl
stos
cmpl
jl
imul
cmp
dec
dec
bound
push
das
cwtl
mov
sub
mov
pusha
sarb
push
inc
mov
pusha
lea
je
bt
pusha
call
pushf
movl
mov
lea
ja
pushf
push
pusha
mov
call
es
leave
test
lret
or
jo
test
call
pop
sbb
lods
inc
dec
imul
stos
sbb
ret
daa
cmpsb
fldpi
dec
fucom
mov
and
je
sbb
insb
cli
in
adc
fwait
out
push
sbbl
and
mov
sbb
xlat
mov
test
es
imul
inc
sbb
sti
sub
xor
jg
arpl
jnp
xchg
adc
cmp
mov
movsbw
setnp
bswap
setae
mov
dec
push
mov
pushl
mov
pushf
movb
dec
bt
pushl
bt
ror
push
test
clc
xor
movw
jmp
call
test
push
test
mov
call
aas
mov
cmpsl
mov
ficomps
scas
movsb
jb
es
call
mov
pushf
in
sti
adc
iret
inc
insl
jae
xlat
push
call
xchg
test
add
and
cmpsl
jl
sbb
lods
sub
add
fadds
mov
inc
cltd
mov
sub
xchg
pusha
xchg
int3
add
in
mov
add
aam
xor
sahf
mov
xor
push
aaa
cmpsb
mov
push
pop
or
sti
and
and
dec
call
xor
mov
je
ja
inc
insl
jae
rolb
dec
outsl
sub
addl
dec
pop
bound
sub
sti
adc
int3
rol
or
lods
fisttps
mov
jl
mov
push
dec
or
dec
loopne
call
xchg
pop
mov
andl
add
mov
inc
and
push
jmp
pushl
cmp
lea
jbe
pushf
pushf
lea
je
cmp
stc
bt
cmp
jmp
pushf
pusha
mov
pushf
movb
movb
inc
cmc
stc
neg
push
test
sub
clc
pushf
ror
pushf
push
push
mov
dec
bt
call
xorb
mov
add
lods
mov
aas
negl
and
nop
pop
nop
xchg
imul
jp
adc
and
inc
les
aaa
ret
xchg
jo
stc
ret
xor
or
inc
ffreep
pop
cmp
ficoml
ljmp
fcomip
testl
dec
mov
fnstsw
add
out
mov
lock
fsin
adc
sbb
fildl
cmc
imul
loope
cmpsl
gs
or
dec
pop
dec
cmp
jl
jnp
push
into
jb
pop
jp
xor
xor
push
stos
int3
out
sbb
mov
sbb
pop
ret
dec
mov
enter
push
xchg
or
aam
loopne
xchg
xchg
adc
cmc
xor
pmaddwd
aas
insl
je
iret
movsb
out
cmc
xchg
add
fwait
pop
sub
setnp
jecxz
jnp
jae
xor
jle
repnz
dec
inc
movsb
mov
aad
and
popf
arpl
lcall
adc
out
dec
mov
xchg
ret
lret
adc
mov
jns
mov
xor
and
or
xchg
dec
adcb
jecxz
rolb
inc
icebp
inc
pop
fnstsw
cmp
adc
leave
jns
xor
mov
mov
push
xor
pusha
pop
sub
mov
dec
addr16
mov
rol
in
shrb
dec
or
and
stc
insl
out
sub
push
sub
and
imul
and
or
mull
adc
mov
and
jnp
cli
shll
sub
mov
loopne
push
cmp
cwtl
insb
inc
or
mov
in
push
daa
xor
es
mov
and
mov
sti
pop
mov
rorl
dec
add
imul
sub
or
enter
lret
mov
lret
xchg
clc
data16
lock
jmp
imul
jp
push
stc
daa
js
xor
xchg
push
addr16
dec
cmp
push
testl
mov
lock
loope
in
lret
push
xchg
sub
jno
sub
push
mov
sahf
add
test
mov
and
sub
and
mov
outsb
xlat
outsl
test
jmp
enter
push
out
xchg
pop
rcrl
mov
push
xor
mov
pushf
mov
xor
movb
jmp
sbb
lret
clc
ds
push
pop
out
pop
push
adc
in
shl
push
dec
popa
jl
ja
aad
outsl
mov
mov
dec
in
scas
dec
jecxz
scas
mov
test
loopne
cmc
dec
dec
jg
ja
pop
mov
in
xor
jns
pop
or
enter
mov
fs
fdivrp
jl
pushw
or
andl
cs
or
shl
int3
jl
rorb
cld
loopne
cwtl
and
jl
or
xor
adc
pusha
mov
pushf
jmp
stc
and
mov
ja
and
dec
test
cltd
pop
in
dec
sbb
ljmp
cmp
aas
adcl
lret
adc
xchg
cwtl
mov
xchg
and
cmpsb
je
jecxz
lock
xchg
out
jae
push
jnp
loopne
jle
add
mov
loope
cmc
sbb
shrl
dec
cmp
xchg
push
mov
ret
shll
add
sbb
dec
out
lods
push
xlat
test
sub
bound
xorl
mov
sbb
mov
popf
stc
leave
mov
hlt
xor
mov
jecxz
je
or
mov
sub
outsb
sbb
insl
xchg
pop
sarl
push
and
push
ret
stos
mov
pop
xchg
insl
inc
addr16
adc
sub
bswap
bsf
lea
cmc
sub
pusha
pushl
popl
cmp
cmp
test
movb
cmp
pusha
lea
ja
adc
stc
cmc
sub
mov
add
inc
sub
sbb
shld
mov
call
push
cld
adc
imul
jne
jmp
pop
jl
jno
popa
push
lret
xchg
dec
popa
outsl
out
xorb
cmpsl
dec
dec
aas
and
lret
jns
jge
mov
jp
sti
das
mov
cmpsl
and
xchg
enter
jle
in
mov
pop
xchg
iret
out
mov
pop
pop
out
out
jecxz
into
mov
aad
inc
pushf
call
pushf
lea
jae
clc
clc
cmp
pushf
lea
jae
clc
call
rol
mov
test
mov
mov
ret
test
xchg
fimuls
out
fcmovb
jmp
js
fs
cmp
aaa
mov
sbb
mov
mov
stc
lahf
mov
mov
mov
clc
es
sti
rorb
dec
push
fwait
in
idivl
test
cmp
push
daa
sub
inc
jecxz
or
add
fs
pop
mov
imul
jno
int
and
sub
fwait
mov
xchg
imul
xchg
rcrb
push
mov
mov
or
cmc
xor
stos
lods
fimull
cmp
scas
xlat
and
sti
or
sub
mov
dec
or
call
or
out
or
scas
lods
jmp
dec
or
shll
pop
pop
icebp
ficomps
idiv
loop
fists
cmp
ss
pop
fildl
fs
mov
mov
push
add
ret
dec
or
fists
fs
dec
sbb
and
scas
movsb
mov
add
sub
mov
jbe
ret
les
movsb
mov
mov
pushf
mov
mov
jb
pop
mov
ficompl
je
movsb
mov
int3
scas
sbb
stos
pop
cmc
imul
add
jl
fst
or
mov
cmp
sbb
jae
imul
sahf
sbb
inc
dec
sub
gs
lret
ret
mov
test
movsb
jp
movsb
cmpsb
lret
je
mov
add
add
mov
sub
jb
inc
pop
data16
mov
mov
sbb
movsb
nop
sbb
in
mov
notl
std
adc
movsb
sarb
jp
adcb
inc
xor
insb
lods
popa
lret
icebp
enter
mov
std
mov
mov
mov
scas
and
cmpsb
fidivrl
sub
test
fbld
and
push
stos
push
lret
adc
dec
fwait
and
cwtl
nop
xor
in
lcall
and
sahf
pop
dec
pusha
mov
add
sbb
scas
push
hlt
mov
sbb
inc
xorb
mov
sbb
out
adc
mov
cmpsl
retw
push
je
mull
cmp
mov
cmp
push
inc
lds
lret
add
push
shrb
addr16
jp
mov
out
pop
lret
and
jmp
lds
push
adc
bound
stos
or
mov
mov
jb
lret
cmp
loope
sbb
mov
lds
xor
jg
xchg
int3
jle
jg
pop
pop
incb
popa
movb
je
jns
insl
push
cld
cmp
pushf
pop
out
dec
and
sub
call
mov
jp
push
frstor
lret
mov
inc
repnz
sub
add
mov
push
push
vpaddb
loop
sub
mov
sbb
or
pop
rcrb
sbb
push
sti
adc
cld
int3
jl
ljmp
loope
push
fs
bound
test
cmp
dec
subb
les
cli
bound
sbbb
addr16
test
jmp
out
ret
lods
adc
or
mov
pop
pop
mov
pop
pop
andb
cs
shl
lods
je
stos
sbb
lret
adc
stos
xchg
je
sbb
sbb
leave
rcrl
shrb
inc
xchg
fldt
mov
xchg
cli
inc
or
fcom
xor
ret
mov
addl
jo
loope
jecxz
sub
jecxz
pusha
sub
fildl
push
push
adc
inc
sub
dec
pop
mov
mov
and
cmp
jle
addl
push
pop
push
cmp
ds
out
mov
mov
sub
adc
add
cmp
popf
in
lret
mov
aad
xor
add
iretw
mov
push
xchg
std
repz
xor
add
out
imul
fidivrl
movsb
sub
adc
add
push
mov
xchg
pop
dec
xchg
out
loopne
mov
sbb
push
std
mov
andl
in
push
cmp
and
std
sti
push
repz
jmp
in
shlb
lret
std
mov
mov
and
bound
push
cmp
std
xor
and
and
outsb
lret
inc
or
mov
or
outsb
xchg
fnsave
sub
pop
mov
ret
cwtl
fwait
mov
mov
cmpsl
loope
cmp
ret
push
add
loop
loopne
mov
in
hlt
out
in
call
mov
adc
jmp
ljmp
imul
loop
or
sbb
inc
cli
imul
jp
inc
jle
or
lcall
imul
mov
cmp
fiaddl
fsubr
outsl
ficomps
mov
push
sub
pop
ds
sbb
mov
sbb
sbb
mov
and
stc
inc
add
out
les
cli
scas
shr
jg
ljmp
cmp
jmp
insl
mov
fistps
dec
pop
arpl
sub
out
or
imul
and
push
std
mov
or
loop
push
push
jae
loop
push
std
adc
mov
push
jb
sbb
stos
gs
sub
cld
sbb
dec
arpl
push
decb
and
push
std
int3
cli
ret
popa
push
into
bound
fldcw
jnp
jl
flds
cli
fst
pop
or
push
xchg
and
mov
stos
lods
scas
mov
rol
enter
jecxz
pop
pop
pusha
pushw
outsb
jo
jb
jbe
jp
jle
fldl
mov
loop
jle
lock
fstpt
fists
ljmp
std
sbb
daa
cltd
pushf
sbb
sbb
fisubl
ljmp
and
and
xlat
add
outsl
inc
cmp
jns
mov
test
jecxz
mov
sti
sbb
imul
cwtl
mov
mov
mov
jle
dec
call
adc
jecxz
test
lcall
out
push
nop
and
ja
mov
andl
add
pop
fdivrl
in
and
dec
push
add
mov
stos
jp
jp
pop
stos
aad
jp
pop
aad
sbb
sbb
add
pop
mov
jnp
insb
movsb
mov
mov
pop
adc
push
daa
scas
lret
std
inc
push
andl
pop
fnstsw
imul
std
mov
inc
xor
cmp
enter
inc
push
std
mov
push
in
je
mov
add
out
lret
mov
loopne
pop
lret
pop
cltd
fistps
int
jo
nop
xchg
fwait
stos
adc
hlt
sbb
out
loop
lcall
ljmp
fnsave
fistps
inc
mov
cld
fst
std
loopne
push
imul
jnp
insl
or
pop
fwait
sub
loop
fdivs
push
outsb
nop
ds
ss
sbb
bound
mov
js
or
mov
lret
xchg
rorl
cwtl
inc
lret
cld
mulb
push
clc
in
xor
or
cltd
or
lds
inc
fcomi
rcrl
cld
imul
push
lock
add
ljmp
orb
in
xchg
jl
in
lret
xchg
jl
or
stos
and
push
std
push
fsubr
and
mov
and
std
and
jae
es
out
adcb
fsubr
in
lret
mov
ss
adc
cli
bound
mov
cmp
add
pop
pop
in
or
arpl
inc
fst
adc
jnp
jmp
loopne
je
fdivl
ljmpw
mov
adc
sbb
icebp
and
sbb
sbb
repnz
jp
clc
lock
sbb
push
pop
sbb
or
pop
insl
adc
inc
cli
sbb
stc
pop
xorl
mov
gs
aad
and
push
idivl
mov
lret
mov
pusha
mul
cmc
sub
cmp
fcmovne
pop
sbb
fdivr
sar
fimuls
fistl
daa
jns
insb
sbb
cltd
into
fstpt
fcmovu
insl
push
push
in
mov
sub
mov
fistl
shll
pusha
sbb
jae
sub
jecxz
bound
aaa
imulb
lret
aaa
sbb
mov
ror
popf
outsb
into
add
jae
std
mulb
aaa
sbb
or
and
jnp
repnz
fadd
out
insl
push
mov
sub
add
dec
aas
mov
shrl
gs
icebp
pop
decl
sbb
and
aad
icebp
mov
mov
in
int
test
das
add
pop
imul
fcmovnu
mov
insl
adc
sbb
jle
arpl
sti
shll
jnp
fstp
rcrl
push
out
add
lret
fisttpl
cmc
or
mov
loope
fisubl
xor
dec
jge
fwait
jnp
and
jecxz
adc
xor
mov
pop
daa
inc
fldt
out
lret
inc
fistl
into
movsl
test
pop
push
xchg
ja
jecxz
enter
mov
popf
je
push
clc
add
fildl
add
cmp
xchg
test
add
adc
cmp
and
push
lret
push
cmp
push
icebp
into
ret
mov
cmp
push
cwtl
fisttpl
push
push
in
shll
lret
and
sub
aam
sbb
shlb
xchg
test
mov
or
neg
std
fcoml
dec
or
mov
pop
xor
in
loopne
dec
fisubrs
dec
fcmovbe
mov
xchg
jmp
ljmp
daa
loopne
jcxz
pop
call
dec
xchg
ss
inc
mov
fstpt
mov
sti
mov
jmp
and
inc
ds
stos
aas
cld
sub
sbb
dec
cli
xor
xorb
shlb
and
pop
aam
shrl
jmp
fisttpl
loope
or
jbe
movsb
sahf
aad
stc
cmp
add
aam
xchg
xchg
sbb
jg
loop
daa
mov
xchg
push
pop
aam
adc
mov
stos
or
fldl
ret
adc
lods
mov
push
add
cmp
test
push
mov
mov
dec
dec
mov
les
ret
outsb
test
sbb
insb
in
inc
mov
sarb
sub
add
loopne
fmuls
push
jbe
rorl
xchg
mov
in
lgs
and
jae
das
jge
cltd
dec
cmpsl
jae
ja
xlat
xchg
pushl
outsb
sbb
xchg
lahf
rol
mov
cmp
xchg
stos
call
out
xorl
pop
int3
mov
cwtl
dec
dec
or
cmp
out
jns
xor
inc
xchg
mov
mov
push
push
orb
push
lcall
notb
mov
movsb
lods
cli
and
pop
push
repz
jb
call
lea
call
jns
pushf
mov
mov
pusha
pushl
lea
jmp
clc
cmc
pusha
sub
bt
pushf
cmp
mov
pushf
lea
jae
push
pushl
pushf
mov
lea
jmp
mov
rep
jmp
cmp
mov
sbb
lock
sbbb
les
xchg
out
stc
divl
fwait
scas
push
aam
sbb
mov
insl
popf
test
jns
sub
cs
dec
out
lret
insl
push
es
mov
push
push
sub
mov
xor
leave
sub
add
mov
cmp
cld
insb
loope
outsl
push
insl
sbbb
cmp
or
push
js
imul
pusha
xorl
daa
or
mov
xlat
dec
dec
fwait
add
jno
ljmp
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jecxz
xchg
rcrb
fdivs
mov
lea
jne
pushf
pop
movb
jmp
pushf
pusha
lea
je
pusha
lea
jmp
test
jmp
cmc
pushl
sub
jp
sub
cmp
clc
clc
pushl
cmp
push
push
cmp
pushf
call
jmp
lret
adc
adc
jo
mov
add
lcall
adc
xchg
push
iret
cltd
repz
jae
jg
stos
loope
inc
xchg
jb
push
loop
mulb
outsb
roll
fsubrp
hlt
imul
and
outsb
mov
out
cmpsl
or
cmpl
inc
rorl
mov
add
gs
call
call
and
xchg
mov
les
mov
cmp
xchg
jo
lds
mov
or
aad
aad
xchg
jne
shlb
add
lea
fisttps
dec
icebp
icebp
dec
scas
jle
cmp
testb
jmp
mov
addb
pushl
stos
loopne
test
les
mov
pusha
add
pop
hlt
jl
or
rcr
jmp
mov
lea
jae
pusha
lea
jne
jo
stos
pusha
push
movb
lea
jmp
sti
outsl
pop
xchg
mov
insl
lahf
and
mov
jge
jno
addr16
jne
mov
xchg
push
ds
or
insl
shll
mov
adc
decl
mov
rcll
add
dec
ret
cmpsl
add
and
sbb
mov
pop
sbbb
bound
jp
cmc
aaa
vpaddusw
adcl
inc
mov
mov
jae
mov
mov
pushf
push
pushl
pushl
ret
das
xor
mov
xor
fsts
int
xor
std
ret
fnstenv
arpl
pop
and
ret
xor
movsl
sbb
cmpsb
mov
orl
push
mov
adc
shrb
mov
lods
repz
test
add
fsubrp
jo
cmp
les
jne
mov
mov
in
dec
cmp
std
dec
push
add
icebp
mov
sub
pushl
push
call
pusha
call
movsl
loopne
nop
mov
push
push
cli
push
jbe
stos
loopne
cmp
push
xchg
movsb
dec
push
xchg
adc
cwtl
mov
adc
jns
daa
jbe
pop
mov
std
xor
jns
mov
loopne
clc
je
sbb
and
fistpll
cmpsl
cmpsl
add
aam
mov
sbb
mov
mov
movsl
sbb
pop
or
jg
sti
decl
cmpsl
cmp
mov
mov
es
lcall
nop
mov
lcall
xchg
fisttpl
outsl
test
shrl
pop
lahf
jl
mul
mov
jnp
pop
xchg
cmp
insl
in
sbb
mov
inc
addb
loop
sahf
call
add
loope
fldl
xchg
pop
and
mov
mov
mov
sbb
mov
call
cmp
out
fcompl
dec
xchg
je
inc
movsb
mov
inc
rcrb
out
in
pop
pop
pop
xchg
push
lea
je
pushf
pusha
push
lea
jmp
icebp
sbb
mov
sbb
add
and
cmp
and
push
cmp
mov
sbb
clc
je
sti
mov
pushf
push
push
jp
xchg
stc
mov
push
scas
xorl
sub
stos
daa
mov
ss
mov
pop
ret
sti
jge
push
and
jbe
into
out
and
adc
insb
out
lahf
inc
xlat
inc
inc
pop
mov
daa
mov
in
push
add
popl
subl
xchg
es
pop
sti
ror
pop
xor
into
les
sbb
imul
popa
leave
cmc
das
xchg
mov
push
lds
sbb
adc
ret
pushf
xorl
sbb
push
push
xorb
push
push
scas
imul
or
and
stos
out
push
pop
cli
ss
notb
clc
fcmovbe
in
xor
cld
cwtl
call
jmp
push
dec
inc
mov
jnp
iret
dec
mov
sub
jb
jle
rdtsc
stos
jae
and
dec
insl
fisttpll
out
mov
cmp
outsb
enter
ficoml
inc
jp
jle
ret
push
fwait
call
lahf
dec
sub
xor
repnz
mov
adc
fnstcw
mov
mov
mov
lcall
push
sahf
scas
pop
inc
in
push
mov
sti
mov
jnp
aas
int
xor
and
mov
xchg
mov
fsubl
pop
push
xchg
mov
es
mov
fisubl
jae
es
inc
mov
scas
stos
lahf
idivb
sbb
in
mov
out
mov
sbb
jg
lret
in
and
lahf
aas
rorl
and
xchg
and
lahf
mov
cmpsl
arpl
mov
mov
stos
sbb
repz
test
mov
lahf
push
sti
mov
in
test
rorl
xlat
shl
push
int3
xorl
outsl
fimuls
testl
mov
mov
sub
ror
and
jno
mov
push
dec
jmp
cli
sti
mov
mov
inc
xor
cmp
ficoml
xor
in
call
and
mov
loopne
mov
sbb
jne
cld
mov
adc
jns
inc
push
or
sbb
inc
add
dec
in
dec
and
movsb
fcomps
enter
lret
das
cmp
setae
mov
jle
push
cmp
adc
and
in
jne
mov
xchg
stos
xlat
mov
push
dec
into
repz
enter
xor
jnp
sub
popf
call
or
movsb
inc
arpl
push
jns
push
leave
inc
lea
cmp
stc
lea
fdiv
iret
inc
fistps
inc
jns
cmp
inc
or
pop
jecxz
pop
loope
jp
arpl
lretw
jne
ja
ficompl
jbe
test
aas
dec
mov
stc
vpmullw
test
jmp
push
nop
sbb
sub
cmc
test
pushf
call
nop
add
mov
scas
inc
fwait
test
ljmp
jle
inc
cmp
subl
sub
push
icebp
mov
nop
or
cli
mov
jg
fsubs
fwait
push
cmp
jnp
repz
push
fcoms
and
test
sub
in
loopne
xor
cmp
scas
rcrb
mov
mov
scas
imul
scas
test
pop
pop
insl
icebp
in
cltd
dec
loope
add
icebp
std
jge
inc
icebp
ljmp
not
mov
lea
pushf
lea
call
pusha
pushf
call
inc
jmp
movsb
push
sldt
add
add
cmp
add
add
add
sldt
add
add
movsb
adc
add
add
jle
adc
add
add
test
add
add
jle
add
add
add
add
inc
push
sldt
add
add
cwtl
adc
add
add
loop
adc
add
add
les
add
xchg
add
pop
str
pop
sldt
add
add
add
imul
mov
sbb
and
xchg
mov
andb
in
pop
fwait
dec
std
sub
pop
int
outsl
fldcw
lds
and
mov
imul
jmp
sbb
cmp
inc
jle
adc
jmp
or
fwait
xor
mov
ret
aad
in
lock
push
xor
outsb
cmp
xor
es
sbb
frstor
inc
subb
shlb
decl
push
lea
jmp
lea
jae
pushf
call
inc
inc
not
mov
lea
jmp
pop
push
mov
mov
add
in
add
push
aad
cmp
dec
mov
ret
and
fstpt
pop
aad
in
mov
xor
cwtl
xor
outsb
sbb
ds
pusha
repnz
dec
hlt
in
push
addb
nop
mov
and
add
aad
in
loopne
sti
lods
push
negb
lret
movsb
insb
push
lock
push
mov
rcrb
mov
int
je
dec
mov
jmp
dec
cmc
push
neg
jmp
sar
mov
repnz
push
mov
out
jno
add
cmpsb
mov
not
dec
xchg
push
push
cmpsb
repnz
cmp
jp
and
xchg
cmpsb
or
ffree
push
bound
inc
iret
or
mov
cltd
sbb
dec
mov
inc
dec
ljmp
daa
mov
stos
add
push
xor
nop
arpl
adc
arpl
cmpsl
je
into
xchg
lahf
xchg
or
xchg
aaa
jbe
mov
sarl
insb
sar
fnstcw
or
sbb
enter
xorl
add
jge
mov
jge
mov
lret
lret
inc
fmuls
cmpsl
or
lds
xor
gs
inc
dec
adc
mov
rolb
dec
or
rol
sbb
lock
sub
in
ret
test
adc
sub
sbb
mov
adc
adc
sbb
ss
mov
sbb
mov
repz
mov
loop
arpl
and
adc
push
mov
mov
les
inc
inc
addr16
jne
adc
cmp
daa
jno
and
push
sub
xchg
adc
adc
lods
sbb
in
push
or
sbb
call
push
mov
jecxz
jbe
pop
addl
mov
fisubrs
push
insl
jno
hlt
push
mov
sub
les
ja
dec
rol
xor
sub
adc
xchg
jnp
and
adc
pop
test
insb
fistpl
addr16
imul
or
push
or
cmpl
jnp
test
push
push
jo
xor
xor
movq
cvtps2pi
xchg
mov
mov
das
mov
ljmp
add
jecxz
in
pop
push
pop
aaa
stc
sub
cli
pop
jbe
pushf
pop
inc
cmp
dec
adc
mov
pop
pushl
popl
test
bt
call
jmp
xor
call
pushf
pusha
pushl
lea
call
js
jae
pusha
not
mov
mov
jmp
mov
mov
addr16
or
sub
aad
adc
lods
dec
mov
and
xchg
mov
mov
lods
jns
int3
cmp
jl
or
pop
cli
inc
ja
ret
jnp
cmp
hlt
ds
push
push
dec
jmp
imul
sub
cmpsb
dec
dec
sub
dec
push
jg
xor
aad
pop
scas
ljmp
stc
popl
repz
xchg
pop
jae
imul
jae
cmp
cmp
xchg
sub
xor
cmp
lea
js
push
lea
ja
pusha
mov
inc
lea
dec
pushf
mov
not
inc
sub
shl
ror
adc
xchg
clc
clc
movsbw
mov
rcl
cmc
mov
test
mov
test
push
bswap
shl
mov
bt
cmp
sub
push
mov
mov
pusha
rep
call
pushf
push
lea
jne
pusha
pushf
mov
push
pushf
mov
call
popf
xchg
std
test
jmp
lahf
daa
aaa
punpcklwd
fwait
push
xchg
fs
mov
sub
mov
mov
inc
loopne
xchg
in
pusha
in
test
pop
in
xchg
xor
and
mov
mov
fildll
pop
mov
jg
sahf
js
push
mov
fistl
mov
int
mov
lods
lcall
pop
dec
mov
or
cwtl
push
xchg
fs
push
ror
xchg
adc
insl
sub
filds
mov
push
lret
sub
notb
mov
in
inc
and
jno
es
clc
inc
and
add
out
push
pushl
mov
push
xlat
sub
imul
fs
xchg
andb
mov
sub
fs
cmp
dec
pop
and
out
pop
add
sti
xchg
jmp
push
cmpsb
mov
mov
or
mov
xchg
lods
pop
ror
test
mov
fs
add
sbb
mov
push
xchg
xchg
shll
mov
jle
cmpb
adc
out
outsl
daa
imul
sbb
adc
sti
lretw
into
add
iret
inc
mov
push
inc
popf
out
ds
dec
js
scas
stos
mov
push
mov
repnz
mov
out
jmp
cs
sbb
bound
mov
pushf
lds
add
dec
mov
lock
movsl
push
movsl
xchg
es
pop
or
mov
mov
mov
pop
mov
aam
push
and
outsl
aas
insl
inc
lahf
aam
sub
rolb
sub
nop
sub
sub
into
sub
add
mov
addr16
mov
daa
xor
xchg
lret
addl
shll
add
cld
inc
lret
stos
divb
mov
cmc
adc
inc
jle
pop
or
mov
pop
outsl
fldt
push
popa
jno
into
mov
jmp
xchg
std
xorl
mov
pop
and
hlt
or
or
push
out
sub
shr
pop
push
sahf
adc
mov
xor
aad
sub
loope
jl
cs
stos
stos
pop
pop
pop
mov
pop
mov
add
ret
stos
lods
pop
js
mov
sbb
dec
imulb
pop
cmpsb
xchg
into
xor
pop
bnd
pop
roll
sbb
outsb
inc
inc
dec
xorl
mov
lcall
out
hlt
or
hlt
clc
lods
stc
jno
xor
insl
popf
cmp
xor
push
scas
xchg
jbe
fcoml
je
inc
or
aam
in
jo
mov
rcrb
ljmp
clc
imul
adc
jno
or
or
jl
xchg
arpl
test
pushf
and
je
cmpb
cwtl
insb
pop
lock
test
fldt
cmpsl
mov
lea
cmovbe
jl
jmp
movb
movl
adc
pushl
push
lea
call
pusha
lea
jb
push
pushl
ret
pop
xor
lret
dec
lahf
pop
jae
testl
dec
add
test
mov
sti
fsubr
pusha
mov
inc
popf
popf
and
fcmovne
in
aam
jne
sbb
jb
scas
pusha
jb
jno
or
dec
mov
mov
fstps
jb
loop
xchg
cmp
jge
lret
in
adc
xchg
popf
ret
push
mov
aam
rcl
push
xchg
popf
lds
iret
xor
repz
push
mov
movsl
mov
arpl
mov
pusha
pusha
pushf
lea
jb
bt
pusha
test
cmp
pusha
push
movb
lea
jae
rol
mov
btr
shrd
xor
sar
mov
movzbw
bswap
setns
neg
mov
push
clc
test
cmc
sub
cmc
pushf
cmp
mov
repnz
mov
push
call
push
pusha
movb
lea
je
jmp
xor
loope
dec
sub
mov
sub
xchg
lea
shrb
jo
jl
adc
mov
scas
fldenv
outsb
sbb
je
mov
inc
inc
in
sbb
ja
addr16
adcb
nop
adc
adc
out
aam
clc
mov
cmpsb
aam
or
ret
mov
push
inc
adc
adc
xchg
in
rolb
xor
mov
test
arpl
repz
or
lea
std
jae
xor
sti
cmp
cmp
stos
lcall
pop
aad
pop
dec
dec
pop
test
pop
lods
xchg
jg
jnp
mov
pop
repnz
xor
arpl
ret
push
cli
out
cli
dec
jp
fcmovu
jp
fimull
xor
fcmove
adc
std
mov
and
xorb
pop
aad
jno
outsl
data16
jmp
rorl
push
iret
sahf
js
xlat
leave
mov
xchg
lods
daa
xchg
out
js
cltd
not
or
lcall
sbbl
xor
mov
or
hlt
mov
cli
cli
jbe
mov
mov
ret
mov
jb
mov
cmpsl
sub
jmp
aas
jne
shll
adc
in
inc
sub
xor
inc
mov
cmpsl
mov
testb
mov
mov
out
cmp
sar
mov
psadbw
xor
or
enter
xor
adc
jb
sti
jp
nop
or
mov
jns
jmp
mov
out
cmp
add
mov
jns
loopne
mov
divb
and
push
les
lret
cwtl
cmpsb
insb
jle
mov
sarb
lcall
ret
inc
mov
mov
mov
mov
adc
stc
push
cmp
adc
aaa
dec
not
adc
lcall
imul
add
jae
mov
out
push
fists
inc
or
xchg
cmpsl
in
call
inc
adc
jb
sub
leave
xchg
adc
xchg
iret
das
imul
jp
jg
lret
mov
outsl
push
jae
xchg
mov
xor
mov
aaa
jnp
not
sbb
push
sub
sarb
add
rclb
pusha
xor
cltd
pop
int3
scas
insb
sub
rcl
imul
xor
push
push
nop
sbb
push
xor
mov
push
rcl
daa
add
fldcw
mov
jp
test
clc
loopne
inc
arpl
cmc
bound
add
mov
sub
cld
cli
addb
fucom
push
in
ret
cld
mov
jnp
pop
imulb
mov
pushf
insl
sub
add
out
stos
in
pop
fisubrl
pop
repnz
pop
pop
in
out
shrb
pop
in
pop
mov
icebp
imul
ljmp
pop
cmp
ret
jp
mov
xchg
arpl
icebp
outsb
jb
jmp
hlt
dec
out
cwtl
xchg
xchg
sub
cli
popa
jae
cmp
ljmp
insl
jp
loope
sti
fsubs
dec
pop
loop
cmp
xchg
mov
push
cwtl
das
lcall
dec
push
insl
clc
or
inc
call
out
loope
cli
dec
insl
pop
xor
jae
lock
push
icebp
jno
inc
pop
call
in
mov
fisubrs
cli
inc
xchg
sbb
loopne
es
add
popa
sbb
loopne
call
in
mov
sbb
cwtl
loopw
push
out
xchg
nop
popa
stos
out
add
arpl
out
adc
fnclex
loope
jp
add
inc
adc
ret
cld
sub
xlat
cmc
pushf
mov
dec
cmp
lock
icebp
fldenv
push
fucomp
fucomp
cmpsl
fbstp
in
stos
fldl
add
jns
cli
mov
sti
sbb
xchg
mov
cli
js
int3
xchg
imul
ljmp
sbb
jp
in
je
and
in
call
flds
sbb
out
xchg
in
jl
int
frstor
cli
jecxz
ficoml
cwtl
pop
repnz
inc
inc
test
inc
add
inc
and
sub
pop
jns
das
in
pop
mov
data16
push
push
inc
mov
or
fcoml
popf
push
push
pop
xchg
cwtl
nop
pop
bound
push
cmpsb
jecxz
fisubrl
xchg
add
stos
mov
filds
sbb
sbb
lcall
subb
adc
xchg
sbb
je
xor
lret
mov
jae
repz
or
loopne
loope
clc
movb
jb
sbb
mov
fnstsw
clc
dec
sbb
xchg
fidivrl
adc
es
sbb
addr16
adc
repnz
into
lcall
int
cmp
jle
xchg
xor
mov
repnz
jae
sub
sub
loop
popf
insb
mov
mul
jle
cld
add
sub
sbb
sbb
or
fbld
stos
dec
mov
popa
fildll
pop
cli
xchg
sbb
lea
xorl
add
cld
sti
sti
adc
icebp
lret
das
ljmp
popf
mov
sub
pop
in
sbb
mov
out
jno
push
test
jg
dec
jb
fcoms
ljmp
mov
icebp
mov
jl
dec
sbb
and
daa
fstpl
mov
mov
sbb
push
out
dec
fs
in
inc
jae
repnz
out
mov
bound
in
cmp
icebp
ja
sbb
fdivp
movsb
fistpl
ds
ret
inc
leave
pop
cmpsb
data16
push
xchg
ss
add
in
mov
mov
inc
aam
fidivrl
jne
popa
int
mov
and
mov
push
push
jp,pt
pop
sub
mov
lret
cli
loop
orb
fcoms
lcall
clc
jp
mov
in
stos
xchg
xchg
sub
push
sbb
mov
adc
cmp
and
inc
sub
pop
loopne
je
clc
jb
jge
and
call
jg
popf
leave
pop
and
adc
mov
xor
sbb
or
add
lea
lock
cli
neg
pop
and
pop
add
sbb
sub
mov
jmp
fnsave
fisubl
push
idiv
clc
inc
cmpsl
data16
add
in
jmp
mov
loope
sbb
int
lahf
pop
cmp
jl
xchg
xchg
xor
push
ljmp
pop
pusha
ljmp
mul
int3
ret
fwait
cmc
sub
sbb
jb
lret
sbb
lret
testb
imul
cmpsl
insl
fnstcw
insb
mov
fdivs
icebp
and
cld
loop
pop
loop
cmpsb
or
scas
fiadds
jbe
addb
loope
push
movsb
aas
and
adc
mov
jmp
jb
movsb
lret
sti
out
in
push
jle
push
xchg
aam
jecxz
cmc
fs
movsl
jbe
jl
in
scas
test
stos
aad
jmp
in
pop
cwtl
loop
xchg
subb
fildll
mov
data16
xor
fbld
mov
mov
fmuls
ljmp
stc
mov
popa
push
mov
data16
out
sbb
mov
or
push
insb
jb
in
cmp
mov
mov
push
pop
idivb
push
add
call
fnstsw
pop
xchg
sub
sbb
enter
rep
lock
in
mov
jb
sbb
mov
cli
adc
test
in
mov
in
add
xchg
fcomi
lea
out
stos
sbb
and
xor
add
aas
mov
test
out
test
ret
pop
or
pop
shll
and
xorl
aas
cmc
repnz
dec
loopne
stos
mov
lock
into
and
sbb
test
bound
rcrl
push
cmp
mov
ret
jbe
sbb
xchg
data16
sbb
push
les
test
orl
stc
in
loope
loop
cmp
popl
dec
ret
jle
push
mulb
testl
jno
and
in
rcrb
addr16
push
sahf
xchg
je
scas
xor
push
ljmp
jecxz
testb
or
inc
data16
dec
and
fsubrl
xchg
sti
int
cli
test
out
push
out
imul
ljmp
jb
loop
decb
or
xchg
in
jg
cld
xor
dec
mulb
in
push
es
out
incb
js
or
out
dec
push
mov
cwtl
ljmp
mov
outsl
jecxz
push
cli
outsl
in
outsb
jecxz
jecxz
xchg
push
mov
enter
mov
xor
and
push
jl
cmp
pop
pop
mov
mov
fsubp
movsb
repnz
inc
jg
call
add
dec
add
fdivs
imul
lock
fwait
test
add
dec
cmp
das
mov
mov
xor
jge
inc
cmp
push
scas
popa
cld
push
imul
add
xor
fwait
add
rcl
or
insb
out
pop
jecxz
jb
jnp
jae
xchg
fsub
jns
and
jno
mov
xor
cmp
adc
movsl
in
mov
add
aad
in
cmp
xchg
ret
in
sti
dec
mov
and
jne
xor
xchg
aad
test
cmc
inc
push
ds
mov
aaa
rorl
xchg
paddusw
enter
arpl
push
popa
outsb
mov
push
and
lock
js
sub
std
ljmp
cmp
lret
jne
sub
cli
lods
in
sbb
dec
repnz
pop
pushl
mov
jl
fimull
lahf
popa
inc
cli
pop
mov
decl
push
iret
mov
xor
or
pop
in
jl
dec
lcall
dec
loope
lods
divl
hlt
jmp
cmpsb
out
sub
jge
loope
loop
push
and
flds
in
push
inc
call
mov
push
push
out
pop
lods
xchg
loop
cmpsl
stc
xor
stos
sub
xchg
jle
fwait
or
jmp
data16
mov
fildll
test
or
lea
dec
int
in
and
dec
filds
cmpsb
jns
fucomi
imul
fildll
sbb
movsl
xchg
popa
and
adc
push
in
aaa
xchg
xor
lods
cmpsb
stos
call
adc
mov
pushf
push
inc
mov
clc
lahf
je
and
mov
lods
stos
stos
adc
popa
cli
add
adc
arpl
loopne
sbb
mov
loopne
push
ja
daa
mov
mov
and
lret
clc
inc
imul
stos
pop
ja
jp
inc
fisttpl
pop
fcmove
inc
in
je
and
pop
lcall
lods
ret
add
mov
mov
jne
lods
pusha
xor
cli
jno
loopne
icebp
hlt
mov
sbb
inc
pop
scas
stos
repnz
cmpsl
adc
int3
xchg
insb
rcll
mov
dec
aad
addr16
adc
pop
adc
cmc
cmp
fcmovnb
add
and
xchg
insb
sbb
jl
push
stos
push
movsb
je
mov
inc
dec
add
lock
xchg
pop
xor
shlb
mulb
mov
mov
adc
jnp
imul
xor
fsubl
jnp
sbb
mov
pop
pop
fstps
movsb
jb,pt
addl
add
popf
mov
pop
fiaddl
pop
jo
inc
inc
push
mov
iret
outsl
jb
jns
lods
mov
stc
sub
repnz
adc
mov
bound
dec
inc
cmp
cmpsb
xchg
jle
cmp
or
mov
and
sbb
ss
sbbl
jmp
leave
add
ss
daa
in
cmp
loop
adcb
xor
jecxz
in
and
outsb
in
adc
out
pop
push
inc
out
inc
pusha
jno
call
stos
sub
leave
jle
dec
push
mov
mov
sbb
jle
and
sub
stos
fisubrl
sub
hlt
mov
rclb
xchg
push
rsm
cmc
add
aas
mov
aas
scas
jmp
out
push
mov
xchg
int3
push
fisubrl
repz
loopne
mov
jle
or
sahf
push
lods
fisttpll
ljmp
cmp
dec
mov
jnp
out
sbb
js
jl
lcall
xlat
pop
addr16
cmp
js
lcall
mov
jne
ret
jecxz
add
mov
add
in
push
dec
in
repz
or
loop
bound
dec
add
call
subl
in
in
or
cmp
add
enter
mov
jb
dec
add
psraw
in
xor
and
inc
dec
jp
mov
test
out
inc
popa
inc
push
dec
mov
sub
mov
jbe
jecxz
movsb
mov
or
cmp
int3
add
mov
mov
ss
jg
cld
je
mov
cld
repz
repnz
jno
test
ljmp
insl
mov
sahf
cmc
pop
xchg
pushf
sahf
enter
loopne
cmp
ffreep
mov
repnz
jmp
in
xbegin
adc
push
psubw
or
inc
andb
insl
jl
push
stos
popa
insb
mov
jmp
lods
out
xchg
aaa
add
mov
jecxz
add
push
sbb
add
push
aas
or
jae
or
scas
add
dec
lock
jp
loop
std
jg
outsb
mov
sub
ss
jbe
pushf
in
in
push
ljmp
adc
rcl
dec
insb
testb
jp
pop
loope
adc
cs
std
add
jns
pop
es
insl
int
cmpsb
nop
es
inc
icebp
inc
jae
adcb
cmp
arpl
pop
jns
jae
in
jmp
jecxz
push
sub
add
int3
sbb
fnstsw
or
jae
push
sbb
fwait
jl
lcall
cmpl
enter
sbb
add
jecxz
insb
add
add
cmp
loop
inc
add
push
in
inc
bound
es
add
loope
stc
repz
jmp
push
jg
cld
js
lock
mov
pusha
cwtl
dec
xor
pop
repnz
sbb
xchg
cli
add
sub
les
les
out
sbb
pop
lods
icebp
mov
mov
and
or
mov
jle
sahf
sub
cs
ret
xchg
xchg
loope
pop
rclb
jmp
sbb
cmpsl
add
jmp
cwtl
lcall
nop
repz
dec
or
sti
icebp
lret
mov
dec
inc
lahf
add
add
xor
mov
enter
pushf
push
clc
inc
xchg
subb
mov
xchg
loopne
stos
jno
loopne
xlat
push
popa
out
adc
pop
into
push
mov
sub
jp
xchg
in
adc
cmp
inc
stc
test
loopne
cmp
push
mov
jecxz
cltd
dec
repnz
insl
mov
adc
jp
sbb
test
pop
pop
or
adc
sti
sbb
enter
and
or
iret
insl
lock
stos
sbb
dec
jno
pop
xchg
xor
mov
cmp
aad
push
cmp
sbb
inc
movsl
inc
jne
fchs
inc
xchg
or
adcl
pandn
outsb
cmc
push
movsb
inc
inc
jne
mov
sbb
push
jle
add
stos
xchg
pop
cmp
sbb
xor
and
add
lods
in
fildll
fisubl
in
jp
mov
inc
jmp
scas
pop
mov
sbbl
jecxz
inc
movsb
xor
and
xor
xchg
add
pop
in
and
mov
cmp
scas
fldl
jp
ficoml
shrl
and
enter
push
push
fcmove
fnsave
ret
mov
pop
pushf
cmp
repz
or
cmp
in
inc
cmp
cli
push
in
pop
in
outsb
je
xchg
std
sahf
push
movsb
bound
pushl
pusha
std
in
js
nop
bound
gs
les
adc
push
cmp
in
loope
push
push
bound
mov
jecxz
in
jmp
jl
push
add
jb
push
push
jo
popa
in
je
add
sbb
cli
jle
pop
pop
test
xchg
mov
bound
xchg
cld
lcall
pop
mov
sbb
cli
scas
jmp
sti
mov
mov
mov
sbb
cli
ret
in
lock
lret
aam
not
fwait
stos
lods
inc
cltd
fimuls
cmp
mov
rol
ljmp
adc
loope
jb
lock
insb
call
xor
xor
cmp
jb
ljmp
sbb
pop
out
xchg
fucomi
nop
out
out
add
ljmp
sub
sbb
rcl
inc
jmp
pop
popf
or
and
repnz
sti
inc
mov
push
std
neg
or
push
flds
out
rclb
pop
jno
fdivl
stos
je
inc
das
lret
mov
pop
in
pop
sbb
and
js
push
xchg
push
in
sbb
les
jl
cmp
jl
cmp
push
popa
sbb
xchg
jnp
jl
es
scas
add
mov
negb
sbb
xor
mov
and
popa
arpl
outsb
andb
jle
adc
jnp
lret
ds
mov
fs
mov
pushf
push
cli
push
fimull
lods
dec
jmp
fwait
adc
mov
adc
mov
push
jge
mov
stos
inc
popa
xor
cmpsl
lock
mov
mov
lret
lahf
lods
ss
dec
mov
inc
xchg
jle
adc
mov
fisubl
leave
adc
push
hlt
cli
outsb
sub
out
bound
les
or
sub
sbb
repz
out
inc
scas
fcos
call
jp
push
inc
dec
cli
lods
or
jae
adc
stos
jne
call
lahf
fisttpl
push
arpl
sbb
insb
mov
pop
jnp
push
xor
xorb
dec
fisubrs
fwait
fwait
cmpsb
fnstenv
jecxz
loopne
push
lods
insb
out
push
jne
stc
loop
loope
pop
loopne
jge
pop
xchg
lret
sbbl
lods
imul
mov
mov
fwait
call
insl
mov
or
loop
adc
in
ffreep
jae
out
mov
mov
adc
push
data16
stos
fwait
and
mov
ljmp
repz
pop
adc
cs
inc
pop
push
add
insl
loop
out
je
lds
movsb
outsl
roll
fisubrs
es
rclb
inc
leave
or
dec
push
jno
or
pop
jb
into
cmpsb
fnsave
pop
in
pop
fwait
imul
gs
lods
pop
dec
js
orl
jg
out
lods
xchg
fxam
xchg
lcall
jne
and
jmp
cmp
insl
xor
ss
mov
and
lods
push
mov
dec
sub
add
outsl
cmp
sbbb
pop
stos
hlt
ret
push
cmp
dec
jp
or
mov
sub
xor
lds
loope
fisubrl
jle
fldcw
stos
dec
jae
int
insb
add
adc
outsl
cmp
fldt
je
lods
xchg
jo
rcr
loop
xor
inc
lods
dec
sub
push
add
adcb
jne
pop
out
fmull
into
stos
insl
fsubs
inc
adc
jecxz
dec
mov
adc
fidivrl
in
jnp
jg
mov
clc
pop
pop
fildll
inc
pop
cmp
pop
cmp
jp
clc
or
stos
xor
nop
mov
xchg
loop
aad
sub
call
pushf
jle
cmpsb
in
sub
es
xor
ljmp
cmp
cltd
mov
and
out
fs
xor
pop
shll
xchg
xchg
jge
adc
mov
stos
jno
mov
shrl
orl
inc
loope
fidivl
lods
push
mov
fldenv
int
and
mov
loop
inc
test
cld
cmp
cmp
adc
push
sbb
dec
adc
sbb
sti
mov
sbb
cli
call
mov
gs
fiadds
cltd
lock
not
jne
int
filds
stos
inc
movsl
pop
pusha
pop
xor
int3
cmp
jno
ds
xlat
xor
iret
lock
clc
fsubl
in
pusha
icebp
add
sbb
testl
shrb
lock
lock
and
test
arpl
fnstsw
jb
popf
leave
jp
pop
es
mov
stos
sbb
cld
cmp
nop
aaa
in
sub
ret
or
mov
inc
cld
pop
out
pop
push
jecxz
add
jg
mov
and
cli
aam
mov
jecxz
pop
loop
xor
ljmp
fwait
mov
adc
mov
insl
lcall
add
add
andb
addr16
pop
insl
adc
adc
cmp
add
movsb
add
addb
mov
lcall
cmp
fdivrs
adc
hlt
push
cmp
jbe
repz
out
out
cld
mov
mov
mov
enter
addr16
and
cmpsb
jge
sub
push
mov
lds
dec
push
or
cli
adc
cli
bound
push
xchg
fistps
dec
dec
lret
jmp
mov
shll
sub
icebp
mov
pop
add
xchg
icebp
lods
lret
xor
mov
cmp
lods
fwait
or
mov
cwtl
lock
push
xchg
shlb
inc
lcall
shll
es
iret
xor
outsl
lds
jne
int
xor
cmp
push
stos
sti
push
sbb
jge
lcall
stos
push
adc
adc
mov
popa
movsb
add
pop
dec
add
or
sub
clc
in
mov
fcom
hlt
mov
cmp
or
and
rcrl
imul
arpl
pop
aam
ficompl
mov
xchg
cmp
xlat
sbb
fistl
push
xlat
test
mov
out
inc
test
arpl
loopne
and
gs
clc
push
jecxz
dec
aas
mov
js
test
sbb
inc
lods
rcrb
insl
je
fiaddl
clc
and
push
add
sub
push
jnp
stos
inc
and
sub
stos
add
les
stos
pop
inc
call
mov
lahf
cmp
out
xor
xchg
test
les
std
hlt
sbb
pop
outsb
pop
out
loop
in
jb
lcall
in
xor
mov
iret
dec
sub
out
mov
mov
mov
mov
xor
or
addl
push
xchg
int3
rcrl
push
insl
insb
pop
pushf
faddl
inc
adc
sub
pushf
repnz
jmp
in
cli
lcall
xor
adc
nop
cli
sbb
adc
mov
jle
adc
in
aas
sub
xchg
sub
scas
jmp
xor
cmpsb
pushf
lods
jae
in
xchg
fisubl
sub
push
std
call
push
or
xlat
imul
outsb
jns
out
lods
xor
push
lock
ror
call
cmpsl
jmp
sar
cs
shrl
jb
repnz
in
fldl
cli
pop
and
loop
cltd
dec
add
fucom
jnp
jo
je
pop
push
push
pop
fsubl
inc
leave
and
stos
loop
repz
test
mov
in
push
jmp
dec
insl
or
stos
xchg
stos
fmull
cmpsb
cld
ja
or
pop
shl
int
lcall
pop
or
popa
stos
xchg
addb
and
and
stos
repnz
sub
or
inc
xchg
xchg
mov
mov
incb
aas
rcrb
stos
cmp
or
cmp
jle
mov
add
add
adc
out
stos
push
ss
popa
bound
jp
pop
xor
cmpsl
cmp
inc
cmpb
bound
bnd
and
jp
xchg
and
sub
sub
pop
bound
frstor
jb
lcall
fistpll
cmc
cmp
mov
sarb
push
orb
icebp
add
cmp
sbb
pop
sbb
jecxz
adc
rcrl
cmp
lods
lahf
jmp
int
out
dec
xor
jmp
and
cs
adc
add
cli
fidivl
mov
rcrb
and
sti
jb
cli
std
mov
sub
push
or
ljmp
roll
imul
mov
fucomip
mov
add
loop
fists
inc
fnsave
cmp
sub
jl
xor
cli
stos
push
cmpsl
and
xor
sub
pop
dec
das
fists
dec
or
xchg
xor
int
xchg
mov
xor
testl
cmp
push
fs
add
jg
push
cmp
out
loop
mov
xchg
out
sbb
jp
xchg
imull
ret
pop
imul
jmp
mov
pop
loop
rolb
call
cmp
pop
ljmp
pop
lahf
pop
mov
test
in
mov
and
sti
and
outsl
mov
jmp
jl
adc
bound
sub
in
repnz
jnp
xchg
in
sbb
hlt
mov
mov
adc
testb
in
out
sbb
jp
imull
sbb
ljmp
dec
adcb
sbb
mov
cmp
cld
sbb
cli
sarb
test
mov
mov
cmp
bound
mov
sbb
stos
arpl
adc
cmp
mov
cli
xchg
gs
add
pushf
cli
cmp
and
cli
add
push
dec
in
ret
loopne
mov
sti
jmp
mov
jmp
jl
adc
jecxz
adc
sbbb
or
inc
sbb
mov
sbb
jp
mov
push
sbb
mov
bound
mov
dec
stc
jnp
xchg
in
mov
cmp
dec
stos
ljmp
cld
push
push
sbb
lret
cmp
adc
repnz
jmp
mov
push
add
xchg
mov
andb
xchg
sbb
imul
das
jmp
mov
pop
out
pop
int3
add
sbb
cli
mov
push
cld
push
imul
xor
in
or
and
pop
jp
frstor
test
jnp
sub
bound
and
pop
lcall
in
jecxz
cmp
dec
ret
in
mov
sub
pop
jmp
push
mov
bound
mov
sbb
jp
xor
sub
xor
xchg
cmpl
pop
jl
adc
pop
das
imul
sarb
nop
mov
pop
andb
cmc
mov
or
sahf
sbb
stos
and
es
stc
inc
xchg
out
in
cs
pop
sbb
xor
out
or
stos
mov
jle
dec
sbb
shr
arpl
add
dec
in
cld
ljmp
lret
push
test
fnstenv
sbb
mov
das
fs
adc
sti
fs
cld
incl
and
xor
or
pop
ljmp
jns
sbb
test
call
fnstenv
push
jecxz
ljmp
nop
and
repnz
sbbl
fsubrp
inc
pop
aas
pop
add
push
loope
cmc
and
and
outsl
sub
pop
cmc
sub
icebp
cli
icebp
jmp
sbb
aad
jmp
add
cmp
data16
push
cmpb
pop
ret
xchg
mov
xor
rolb
inc
lods
jmp
or
push
and
push
outsb
sbb
push
add
addr16
add
test
jne
pop
repz
adcb
ljmp
popa
add
dec
and
mov
inc
addl
mov
scas
icebp
jnp
mov
xchg
pop
dec
clc
aam
lods
cld
les
in
aad
sbb
sub
dec
or
addr16
xchg
repnz
jle
andl
push
jle
push
pop
xor
or
fsubl
sub
cli
roll
imul
mov
mov
pop
enter
bound
addr16
test
incl
pop
hlt
sti
jne
push
mov
mov
inc
adc
sub
jnp
and
je
push
addb
iret
in
adcl
pop
jae
push
push
cmp
int
mov
mov
andl
insl
add
lret
push
sar
jecxz
cmpsb
stc
pop
jp
in
stos
lods
stos
arpl
sbb
or
aaa
or
arpl
lock
lret
pop
mov
mulb
sti
insb
mov
in
les
test
inc
jmp
pop
mov
pop
lods
push
sbb
addb
push
dec
xchg
fbstp
in
and
ss
out
pop
bound
dec
push
cs
lret
cmp
and
mov
push
in
lods
mov
jl
lar
push
insb
and
and
movsb
inc
pop
inc
pop
or
jbe
addb
jmp
shl
xchg
stos
imul
or
adc
std
ljmp
popa
mov
cmp
cmpsl
ja
xchg
nop
sbb
sbb
xor
int
fistpll
lahf
ret
movsb
or
sarb
lds
shll
lcall
jg
jnp
cmpsl
sbbb
pushl
mov
cmp
cmp
ret
test
mov
pusha
jo
cmp
cmc
or
sub
call
out
lock
xchg
jg,pt
xchg
in
mov
pop
in
ljmp
scas
sub
and
push
sbb
and
mov
or
xchg
push
decl
stos
jl
push
stos
sub
xorb
mov
hlt
in
and
out
sub
mov
jp
jle
cmc
pop
in
loope
fsubrs
decl
pop
pushl
repnz
in
jns
or
pop
lahf
js
gs
sbb
daa
mov
iret
mov
ljmp
xchg
std
adc
lahf
daa
cmpl
nop
jnp
xchg
push
mov
test
pusha
into
xchg
int3
mov
jnp
repnz
push
lcall
jle
clc
dec
dec
jnp
ljmp
inc
push
jo
fwait
lods
lret
ljmp
stos
in
pop
mulb
lock
push
js
insl
movsl
mov
shr
aad
in
sbb
ja
xorl
icebp
mov
iret
push
ljmp
mov
jnp
ljmp
in
jne
arpl
mov
push
jmp
aas
xor
ret
clc
insb
arpl
fldcw
jns
std
ljmp
pop
cmp
inc
fwait
subb
pop
js
mov
loop
push
pop
out
stos
inc
add
pop
push
adc
in
cmc
data16
jb
mov
inc
mov
jae
and
sbb
stos
in
aas
aad
or
in
cmp
pop
ss
insl
and
mov
int
mov
jecxz
push
das
shrb
in
fdivrl
sub
add
xchg
and
lret
scas
outsl
add
clc
inc
js
jmp
testb
imulb
ja
int3
xor
call
in
hlt
call
icebp
sbbl
pop
cli
ja
cld
adc
cmp
sub
inc
das
jp
jecxz
lret
inc
mov
aad
rcl
cld
out
add
les
inc
pushf
xchg
imul
xor
cmpsl
and
fwait
pusha
loope
add
push
xchg
inc
xor
clc
sbb
mov
cwtl
or
cs
filds
in
rcrl
xor
cltd
stc
sub
mov
sub
cmc
adc
loopne
sub
cmpb
cld
xor
fprem
not
das
jle
lret
push
loopne
mov
in
or
fs
and
loopne
pop
xchg
add
shlb
xchg
out
in
ja
in
repnz
ficoms
xchg
push
out
int
stc
addr16
cmp
push
xor
imul
loopne,pt
loop
pop
mov
fiaddl
mov
js
pop
jae
xchg
ret
fsub
fadds
movsb
jmp
loopne
sbb
xor
fucom
mov
or
pop
cmc
adc
fstpt
push
shlb
jmp
in
jmp
cmc
xor
std
add
leave
pop
jecxz
pop
xor
sbb
add
mov
ret
mov
inc
cmp
push
lods
sarb
xchg
jle
les
adc
ficomps
pusha
imul
mov
sbb
sbb
shll
aam
shlb
xlat
insb
aad
jle
arpl
hlt
div
mov
cmc
add
or
jg
jle
sti
add
and
imul
pop
call
xor
jp
aam
add
pusha
push
xchg
sub
bound
test
stos
adc
jmp
clc
push
jecxz
xlat
ja
jb
add
fstpl
cs
rolb
repnz
fs
jmp
lds
ss
in
xchg
xchg
jl
into
pop
cli
dec
clc
sub
frstor
push
leave
jge
mov
cmp
dec
cmp
sbb
dec
rcr
cmp
jl
call
fidivrl
loop
ficoms
cltd
lds
scas
enter
enter
pop
or
clc
dec
std
addl
cwtl
mov
adc
pop
adc
jb
push
das
imul
rcrl
ss
iret
sub
fwait
xor
in
and
sti
mov
sahf
jp
out
pop
in
bound
cmp
mov
cmp
sahf
nop
popa
push
jnp
fimull
lcall
popa
nop
out
stos
cmp
xchg
fldenv
stos
sti
sbb
push
add
outsl
sbb
in
ret
insl
cmp
xchg
add
rorb
pushf
ss
inc
mov
out
mov
jp
iret
dec
cltd
outsl
test
pop
adc
fisubl
repnz
jne
cmc
mov
jecxz
add
push
add
loop
mov
push
cmp
stos
xor
rclb
cli
sbb
or
pop
addr16
out
mov
sarb
jmp
push
sbb
mov
push
mov
popf
mov
pop
repnz
xchg
js
nop
dec
popf
enter
loop
cld
sbb
loopne
popa
aam
dec
xorl
aas
add
pop
stos
xor
xor
mov
out
clc
sti
jg
pop
loopne
ljmp
pop
and
fwait
mov
nop
gs
sub
push
xchg
jns
in
andb
enter
stos
pop
test
rol
stc
mov
cwtl
sub
pop
je
cmpsb
cmp
in
loopne
sti
xchg
jo
fs
mov
inc
aas
pop
pop
addr16
js
arpl
out
ljmp
insl
add
jle
mov
or
xchg
sub
imul
fdivl
scas
pop
mov
jge
sub
popa
xor
mov
and
insb
fs
loopne
lock
arpl
mov
push
cli
insb
push
mov
scas
rcrb
sahf
insl
cmp
push
repnz
js
lea
dec
sbb
mov
inc
sbb
or
lret
repz
cltd
fadd
mov
dec
mov
push
call
mov
xor
jo
sbb
leave
add
ret
dec
orl
mov
les
filds
cmpsl
sbb
ja
stos
sub
sbb
aas
ds
xor
push
sbb
jmp
mov
dec
loope
shl
fneni(8087
sbbl
lods
lret
dec
xlat
scas
sbb
mov
push
nop
mov
push
pop
xchg
aaa
jo
jmp
out
cwtl
popa
jl
cmp
or
mov
loop
and
mov
fxch
mov
lods
gs
and
scas
or
adc
repnz
pusha
dec
and
cli
subb
loope
idivl
clc
cwtl
mov
clc
xchg
ds
or
outsl
out
call
mov
adc
add
push
int
iret
or
loop
hlt
fwait
adc
mov
clc
xchg
cld
repnz
addl
test
jns
sbb
push
mov
mov
xor
xchg
cwtl
adc
xor
cmpsb
inc
arpl
xor
fiaddl
or
lods
lcall
jmp
push
loopne
and
scas
pop
add
in
push
jge
cmp
lret
int
aaa
call
sbb
clc
and
out
cmp
out
sbb
and
pop
pop
dec
xor
lods
jae
popa
and
andb
stos
cwtl
inc
and
or
test
bound
arpl
pop
mov
repz
jle
nop
mov
push
test
push
xor
adc
lret
movsb
mov
jno
in
jecxz
xlat
pusha
fwait
stos
sbb
or
lods
sub
nop
push
outsb
clc
inc
sbb
cmc
push
popa
fistl
add
out
sub
gs
aad
dec
cmp
sub
in
or
outsl
je
mov
mov
test
mov
shrb
adc
xchg
arpl
in
dec
mov
dec
lcall
xchg
xor
dec
push
mov
rorb
push
fstps
jmp
loopne
mov
push
push
sub
lods
enter
fs
xchg
pop
mov
dec
cli
insl
mov
mov
and
pop
push
sbb
cmp
or
push
lret
cld
in
cmp
push
or
cwtl
pop
scas
sahf
mov
push
cmc
xor
xchg
xor
lcall
lds
inc
sbb
arpl
or
stos
dec
jg
lahf
into
sahf
mov
xchg
addr16
cmp
adc
icebp
stos
leave
sub
les
shl
in
mov
jge
popa
cwtl
aas
cmp
lds
mov
shll
aam
lods
cmc
cmpb
dec
push
cmc
fs
lret
lock
or
mov
popf
cmc
js
ss
jl
add
in
add
add
shrl
push
add
fsts
add
std
mov
ret
push
and
je
popa
add
ss
jmp
push
fadds
sbb
insb
out
inc
stos
out
iret
jecxz
and
cwtl
loopne
xchg
push
outsb
fxch
or
or
or
pop
mov
in
sbb
xchg
clc
int3
dec
jle
lods
fbld
je
sub
bnd
jbe
in
out
sbb
or
ljmp
aas
xchg
add
ret
outsb
add
pop
lods
in
pop
scas
insb
stos
fstpl
imul
addr16
lods
jne
sub
fprem1
fst
repnz
test
xchg
xchg
mov
xchg
mov
cmp
stos
add
imul
pop
stos
xor
insl
mov
icebp
mov
loop
push
or
pop
xchg
jno
cld
repz
idiv
lock
stos
cmp
inc
push
mov
or
imul
and
aas
mov
adcb
pop
push
lock
and
jle
into
test
int3
scas
mov
cmpb
fnstsw
cmp
sub
add
push
and
test
adc
jecxz
out
xchg
insl
popf
push
loop
sub
sub
jg
stos
pop
icebp
push
push
adc
push
es
push
ret
lods
in
add
push
fisttpl
sbb
hlt
data16
jle
or
in
and
add
cli
stos
mov
jae
mov
jmp
xchg
xor
movsl
bound
and
sub
leave
movsb
pop
jg
in
test
es
adc
jmp
pop
mov
add
cli
add
sahf
cli
adc
jb
mov
sbb
add
ljmp
loopne
scas
loop
rcr
push
push
stos
shr
jns
in
fs
fmull
dec
xor
push
rcll
loop
pop
xor
xor
mov
js
faddl
sbb
fwait
lods
push
popa
clc
ret
or
dec
mov
sub
mov
cld
sti
icebp
pop
pushf
cmp
inc
jmp
push
and
addr16
insl
loope
pop
adc
cmp
nop
push
add
xor
repnz
out
push
and
clc
push
stos
clc
sbb
or
xor
enter
call
mov
mov
sbb
insb
fwait
in
and
mov
js
jp
enter
pop
lcall
ffreep
cmp
mov
inc
cmc
add
adc
shrl
jp
push
cmc
leave
bound
jp
mov
std
fsubrs
or
sbb
and
push
mov
clc
roll
pushw
popf
add
daa
ss
sbb
sti
push
imul
mov
jp
inc
add
xchg
repnz
stos
in
lcall
xor
xchg
pop
loop
stos
mov
jp
in
pop
loopne
stos
xor
sub
jae
adc
pop
and
push
jmp
cli
imul
insb
push
sbb
lock
out
add
into
faddl
cwtl
pop
imul
rorl
loop
cld
jg
mov
pop
jo
pop
adcl
xor
cmovl
inc
pop
pop
xchg
xchg
adc
and
inc
add
xor
jmp
mov
stos
sbb
cmpsb
adc
mov
jmp
icebp
data16
add
lcall
fwait
jecxz
test
push
push
cmp
imul
mov
insb
mov
cli
dec
dec
jo
movsl
pop
das
jne
or
das
xrelease
aam
push
cld
pop
addb
insl
mov
scas
imul
repnz
mov
or
imul
cmc
pop
loop
push
xor
stos
mov
loope
aas
adc
out
inc
repz
out
pop
jmp
pop
aaa
add
mov
cmp
fdivp
fadds
out
sub
cmp
stc
adc
jo
mov
adc
out
stc
pusha
add
jmp
arpl
xor
mov
dec
sbb
cmp
loop
ds
push
cwtl
pop
adc
dec
lcall
imul
mov
gs
out
stos
pop
outsl
outsb
loop
in
and
pop
mov
inc
add
fsubr
lods
jmp
add
es
pop
dec
in
sbb
pop
sbb
or
mov
mov
jle
mov
cli
in
or
std
fistpll
sbb
les
ljmp
loop
iret
repz
pushf
xchg
call
inc
ljmp
pop
shlb
pop
mov
cs
jae
ss
xchg
or
js
jae
cli
adc
mov
fcoml
not
mov
sbb
push
inc
cmpsb
imul
fisubs
faddl
es
dec
jmp
cmpsl
mov
aam
loopne
dec
mov
popa
push
and
jns
cld
ficompl
rep
ss
loopne
mov
push
addr16
jmp
subb
sbb
sbbb
jb,pt
jmp
cmc
sub
subb
icebp
pop
int
repnz
sbb
dec
xor
dec
popf
in
sbb
mov
pop
push
xlat
inc
das
mov
sub
aaa
popf
lock
mov
xor
aad
mov
loop
pop
xorb
popf
popa
popf
stos
sahf
cli
pop
dec
jns
movsb
pushf
pop
and
movsb
sar
mov
fs
ljmp
out
popf
lret
or
mov
or
icebp
inc
mov
sbb
rclb
fs
out
pop
sub
cmp
sub
xchg
add
scas
subb
sbb
pop
es
inc
xlat
or
sbb
sbb
mov
and
or
js
push
push
mov
mov
jno
lret
push
and
mov
aam
and
divb
cmpsb
or
pop
xor
shll
stos
inc
stos
fimull
adc
jmp
lret
out
xchg
ljmp
jl
cmp
lahf
insb
clc
push
data16
sbb
rorl
movsl
movb
xor
inc
pop
push
in
xchg
mov
inc
jecxz
or
scas
mov
arpl
xor
in
loope
in
fldl
scas
cmp
ret
arpl
out
mov
mov
les
inc
add
in
sub
cld
jae
and
xchg
or
inc
aad
pop
sti
cmc
sub
mov
add
movsb
arpl
cmpsb
mov
sub
inc
jle
adc
pusha
or
and
sbb
ljmp
sbb
imul
push
cs
pop
fs
xchg
mov
xor
add
shll
sahf
loopne
dec
les
jl
in
aam
and
lock
cmp
sti
in
and
sti
dec
ret
lcall
dec
cmc
pop
bound
sbbl
imul
jb
adc
pop
cli
pop
sub
fs
loopne
mov
in
pop
jno
scas
int3
jp
mov
adc
shlb
add
rcrl
loop
inc
jg
pop
cli
pop
adc
or
pop
test
in
push
rol
icebp
leave
ss
popf
push
stos
rcr
int3
sub
sti
outsl
mov
push
rolb
lock
out
xchg
notb
push
js
xchg
pushf
jle
lret
imul
cltd
mov
sub
pop
push
jno
lahf
xor
int3
xchg
xor
into
into
xor
pushf
stos
je
lahf
icebp
loope
das
ffree
in
imul
cld
jno
clc
in
adc
cmp
lock
inc
adc
pop
jne
or
stos
sbb
adcb
out
mov
stos
lods
insb
dec
shl
scas
cli
dec
jo
out
sub
and
inc
xor
adc
pop
pop
push
and
push
mov
mov
mov
dec
jne
cmpsb
aad
push
aad
dec
jecxz
sub
lds
sub
leave
pop
iret
dec
adc
arpl
jecxz
andb
hlt
push
out
fsubrl
sub
ds
xor
cmp
lret
out
loop
jb
loopne
test
hlt
push
cmc
lcall
sub
imul
pop
jecxz
les
ficomps
insb
cmpsl
dec
and
mov
lcall
jb
pop
xorl
xor
loope
sub
ret
mov
and
mov
in
fsubrp
fs
and
lret
dec
pop
fs
dec
ret
loope
cmp
mov
subb
int3
xchg
mov
jmp
sub
lods
and
push
xchg
sub
push
push
xchg
es
ret
push
cmp
mov
fs
mov
out
mov
bound
es
in
xchg
lret
dec
mov
sti
xor
in
sub
sub
aaa
inc
fisubl
push
ret
fwait
pop
arpl
sbbl
fdivrl
sbb
xor
stos
push
ret
insl
int
repnz
out
lock
add
xor
cmp
stc
push
push
jl
ret
sbb
push
inc
hlt
les
dec
es
mov
subb
push
fisttpl
popf
fmul
ss
call
hlt
jae
inc
xchg
outsb
popa
std
inc
dec
adc
scas
xchg
lahf
jmp
mov
add
dec
enter
outsl
test
fstl
hlt
bsr
bnd
mov
pop
lahf
sti
ljmp
mov
pop
cmc
ret
cld
mov
push
aas
mov
and
xchg
add
pop
cmpsl
sbb
jg
cmp
sbb
and
sbb
dec
cmp
xor
ret
bound
pop
and
ljmp
cwtl
mov
push
stos
jb
sub
lods
jo
cld
cmc
mov
in
mov
pop
fs
push
adc
test
clc
add
and
in
les
pop
add
mov
shlb
cmp
pushf
bnd
pop
add
call
fmulp
cmp
mov
fst
negb
popa
add
add
push
mov
out
xchg
mov
inc
out
dec
stos
out
les
dec
and
popa
add
adc
in
in
pop
and
add
mulb
mov
pop
mov
jmp
repnz
fwait
js
stos
push
pop
lods
in
sarl
es
insl
js
sarl
cmc
lcall
mov
pop
int3
pop
fsubr
inc
scas
loopne
adc
jl
pushf
pop
mov
push
mov
dec
xchg
out
mov
stos
pop
rorb
or
std
insb
and
pop
xlat
fisttpll
rorl
stos
cmp
sub
xchg
mov
or
push
pop
and
sarb
push
xor
xchg
int3
adc
push
inc
inc
pop
mov
call
frstor
loopne
addr16
mov
xor
ret
rdtsc
popf
movsl
inc
cmp
sub
dec
add
aam
aam
std
jns
push
add
scas
pop
dec
and
stos
ficomps
sbb
enter
lcall
cs
xchg
loop
scas
cmp
xchg
xchg
fstp
enter
inc
lock
iret
lods
mov
cmp
lea
int3
dec
in
push
jmp
mov
xor
clc
mov
cwtl
lods
jp
adcb
out
int3
dec
inc
fwait
rolb
call
movsb
loopne
cmc
aam
shll
push
out
das
fnsave
mov
je
xchg
jl
repz
repnz
and
and
xor
lods
in
jmp
sti
shrb
les
pop
pop
ret
mov
lock
inc
push
or
xchg
adc
jns
clc
stc
pop
push
mov
sbb
pop
aaa
bound
sbb
fbstp
negb
or
sar
stos
adc
rcl
fs
lret
int3
cmp
cld
push
pop
loope
push
ss
pop
mov
jb
jo
mov
push
in
fsub
pop
in
xchg
cmpsb
lahf
inc
imul
stos
mov
js
ljmp
sbb
fisttpll
inc
popa
or
repz
ds
add
icebp
xor
sahf
sbb
push
or
or
mull
incb
xchg
mov
sub
mov
loop
out
jp
cli
or
lret
divl
mov
in
xor
clc
adc
nop
js
sub
fmull
insb
add
jmp
insb
or
adc
int
pop
cmp
pop
sbb
popa
ljmp
sub
and
out
loop
fadds
fcoms
mov
loop
cmc
jb
push
pop
sub
sub
sbb
sbb
xor
lret
js
aas
sub
inc
test
rcrl
xchg
out
xchg
push
jl
pop
shrb
mov
in
push
aaa
fdivr
inc
or
icebp
xor
mov
and
mov
pop
loope
adc
sub
add
lret
jno
out
mov
das
shrl
fsincos
pop
inc
cltd
xor
mov
movsl
mov
fwait
cmc
fs
fnstcw
movsl
mov
out
scas
cmp
add
push
push
or
stos
jge
aas
inc
mov
icebp
stos
lock
pop
pop
cmp
lcall
ja
je
stos
ds
jb
pop
pop
jp
aas
dec
jb
testl
das
repnz
jns
mov
add
stos
sub
jmp
sub
mov
fisttpll
repz
mov
iret
inc
xchg
cmp
or
jbe
push
pop
fdivl
movsb
stos
and
xchg
loope
dec
cli
std
jecxz
mov
xor
scas
inc
daa
inc
loopne
imul
lods
sub
mov
push
cld
shll
sub
jecxz
ficompl
popf
loope
mov
sub
jmp
pop
les
xchg
out
sti
xor
inc
xor
inc
xlat
inc
test
pop
div
ds
in
lcall
cld
dec
inc
ljmp
enter
cmc
jbe
jecxz
and
out
fnstcw
mov
mov
cmp
stos
cmp
and
sahf
cmp
iret
jns
cmp
or
sbb
xlat
negb
jle
mov
sbbl
lods
test
call
or
or
sbb
and
fs
mov
push
stos
movsb
push
call
pop
push
fsub
inc
int
jb
or
lret
inc
pop
push
loop
adc
inc
jo
sbb
cmp
into
das
ret
xchg
lods
fucompp
add
clc
add
in
xchg
stos
mov
fdivs
int
mov
nop
xor
idiv
stos
std
mov
or
or
push
cmp
cmp
lret
stos
repz
push
inc
stos
cmp
ficompl
stos
adcb
repz
sbb
imul
in
popa
in
adc
fdiv
pusha
ret
sti
shrb
mov
jo
arpl
mov
add
in
and
cmp
dec
bnd
les
add
out
push
or
adc
repnz
sub
stc
lret
xchg
jae
pop
mov
out
in
scas
cld
data16
cli
dec
in
mov
push
xor
xchg
shrl
outsb
cmc
nop
jnp
cmp
pop
xor
jno
clc
jecxz
xorl
mov
mov
push
mov
mov
scas
push
add
stos
outsb
lds
leave
sub
mov
incl
mov
lret
xchg
lods
loop
xchg
lods
mov
call
sub
sub
lcall
inc
shl
shll
xchg
stos
add
call
cmpsl
pusha
pop
mov
dec
rolb
jae
inc
and
push
lcall
lock
sbb
sbb
loope
sub
add
mov
sti
nop
pop
adc
pop
inc
sub
fiaddl
push
pop
nop
out
imul
adc
out
adc
and
fistps
pop
jecxz
pop
test
imul
cmp
in
test
dec
mov
sub
sub
push
push
adc
cltd
or
push
loop
xor
ret
popa
add
clc
push
shlb
sbb
jge
or
pop
fwait
push
mov
add
sti
out
scas
loop
xor
lds
loopne
mov
sbb
or
in
repnz
push
imul
jg
cmp
mov
in
add
jmp
out
je
scas
fisttps
jo
repnz
fdivrs
dec
into
clc
lods
cmp
ljmp
shll
cmp
xor
sbbl
push
cmpsb
rorl
cmp
into
ss
mov
jmp
outsl
sub
in
clc
xrelease
into
xacquire
mov
in
sahf
pop
loopne
out
sbb
or
pop
loopne
mov
sub
stos
sub
out
addl
push
dec
jl
xchg
lods
test
push
pop
fs
push
xchg
loop
test
push
jnp
ret
mov
out
repnz
pop
rorb
pop
cmp
incl
add
mov
xchg
sbb
fsubrl
ljmp
lods
scas
fildll
into
rcll
inc
cli
jnp
mov
sub
sbb
jecxz
je
add
aad
xor
push
clc
and
outsb
loopne
xchg
jb
xchg
pop
not
push
xchg
jp
dec
in
mov
sahf
pop
xor
jp
sub
push
es
add
repnz
pushf
je
xchg
push
jo
jns
dec
repnz
jb
push
add
or
inc
mov
out
and
dec
js
pop
loopne
mov
dec
fnstenv
in
and
in
stos
aam
out
fisubrs
cmp
icebp
test
inc
sbb
or
pop
cmp
lods
enter
push
add
mov
inc
pop
sub
mov
mul
and
dec
lods
push
cli
inc
lods
and
mov
in
outsl
ret
xor
jecxz
ljmp
loop
jb
aad
mov
cmpl
jnp
jl
sbb
stos
sbb
call
rol
or
jl
push
jnp
cmpb
shll
cld
les
lods
aad
test
les
mov
pop
je
aam
jo
imul
xorb
push
insl
xchg
lds
in
and
in
dec
in
or
scas
cwtl
mov
adc
xor
mul
jl
dec
pop
sbb
addr16
shll
decb
fnstenv
lret
jne
dec
pop
int3
jmp
into
fistpll
std
cmp
mov
popf
cld
xchg
rcr
fwait
push
ljmp
jbe
sbb
pop
add
addr16
push
or
xchg
inc
jnp
bound
stos
adcb
mov
out
and
adc
insb
in
loop
loope
dec
jb
xchg
aam
cmpsb
ret
push
shl
outsb
push
or
add
icebp
mov
insb
mov
imul
pop
data16
sbb
adc
fsubrs
cmp
dec
imul
cli
pop
sbb
push
fdivrl
push
pop
jge
or
fists
sbb
inc
sbb
and
adc
fstps
mov
cmp
lret
ds
fs
dec
push
mov
jmp
out
mov
add
add
jmp
xor
fdivp
pop
pop
jge
sahf
adc
jmp
fsub
pop
xor
icebp
sub
popaw
orb
cs
js
mov
jl
pop
in
pop
lods
addr16
insl
mov
push
xor
bnd
fucomp
and
mov
jo
sub
stos
sub
add
lods
sub
call
mov
loopne
shlb
addb
mov
mov
out
add
outsb
sarb
loopne
in
popa
or
shll
ljmp
in
arpl
mov
cli
pause
jl
mov
std
sbb
je
mov
inc
and
popf
sti
add
push
rcr
add
pop
push
push
push
ss
imul
aam
cmp
pop
jns
xor
inc
rep
test
cmp
dec
mov
adc
in
adc
and
sub
sub
mov
fildll
shll
fs
add
dec
loopne
sub
mov
ds
cmp
lds
sub
loope
push
sti
sub
dec
dec
sbb
add
stos
adc
scas
shrl
notl
jg
push
int3
add
dec
je
sub
cmc
sbb
or
dec
movsl
jne
sub
and
add
sti
sub
xor
pop
cmp
lock
push
push
jns
adc
add
fs
je
bound
jl
and
pop
jb
ja
cmpsl
push
pop
or
repnz
fidivs
xchg
push
mov
sbb
adc
push
xchg
push
cmp
imul
push
jo
lcall
or
mov
mov
xor
clc
sub
fwait
bound
sub
push
enter
jp
call
push
mov
cli
pop
xchg
jb
jo
pop
xor
push
sbb
sub
push
xor
lock
xor
jbe
add
mov
mov
cmp
repz
cmpsb
sahf
xor
push
sub
mov
hlt
ficoml
testl
dec
sub
cmp
cmpsb
dec
fs
dec
arpl
fisttpl
popf
lock
imul
inc
into
dec
cld
pop
sub
pop
decl
outsl
addr16
cmp
sbb
and
es
add
jae
add
ljmp
adc
test
and
pop
lret
fwait
pop
adc
and
xchg
jnp
mov
cmp
cld
ficompl
in
sbb
mov
dec
aam
popf
ljmp
ljmp
pop
imul
ds
sub
and
dec
and
jp
sub
ret
cltd
mov
adc
arpl
das
sbb
cli
dec
jmp
mov
sub
out
or
ds
adc
jb
subb
lahf
mov
sbb
jbe
cmpsl
adc
sub
sub
pop
adc
movsb
scas
movsb
repnz
in
pop
jmp
push
xchg
xchg
fcoms
pop
ret
mov
mov
ret
xchg
inc
sub
icebp
xor
jb
inc
out
sbb
lea
ret
sar
jmp
xchg
into
sub
push
bound
xchg
iret
xchg
sbb
stos
xorb
dec
jns
add
or
in
adc
xchg
jle
in
lods
or
fcmovu
push
pop
mov
pop
inc
loop
daa
adc
xchg
or
mov
or
lret
and
or
pop
pop
pop
popa
cmp
loope
xor
iret
push
jg
insb
xchg
arpl
add
adc
inc
jmp
je
jo
mov
adc
jbe
scas
xor
adc
xchg
mov
or
sbb
cli
cli
arpl
loop
stos
mov
outsl
icebp
iret
ret
mov
or
jmp
into
fmull
cmpsb
or
aad
push
lret
dec
cmp
mov
add
sti
popa
lods
in
xorb
pop
xchg
fcomps
xor
pop
decb
scas
sub
lret
pop
repz
xorb
call
xlat
shrb
cmpsl
leave
pop
in
out
stos
mov
mov
repz
xchg
insb
jg
call
mov
pop
popf
insl
xchg
shll
out
add
lcall
sti
mov
ffree
ss
pop
mov
jl
or
icebp
push
lods
bound
mov
std
clc
out
jp
shl
data16
stos
scas
mov
outsb
cmc
leave
pop
push
movsb
inc
call
lret
sarl
rorl
xorl
sub
cmc
je
lock
push
repz
xor
sub
add
insl
xor
incb
jmp
andb
iret
sbb
xchg
add
ss
arpl
inc
inc
pop
stos
loop
jo
jmp
pop
imul
sbb
std
sub
ss
jbe
mov
cmp
xchg
pop
jle
mov
and
sti
jecxz
mov
or
insl
call
ret
sbb
cli
ljmp
xchg
mov
test
xorl
inc
pop
pop
loopne
jbe
shll
jno
ret
fcompl
int3
xchg
or
cld
or
sbb
jl
push
jmp
data16
adc
cs
outsl
addr16
sbbb
jge
mov
jbe
test
cli
fisubrl
push
stc
bound
push
cli
ret
subb
es
jecxz
xchg
mov
or
jge
jae
rcrb
and
mov
sbb
mov
pop
dec
adc
mov
and
xor
dec
sti
push
mov
and
in
jns
sar
jl
mov
jbe
andb
mov
loopne
sbb
mov
jmp
push
jnp
mov
mov
mov
xor
mov
xor
das
aas
jae
add
jle
mov
jmp
sbbb
add
adc
adc
xchg
mov
lds
scas
lahf
adcl
xchg
jmp
bound
xor
insb
jne
mov
jecxz
and
lea
mov
imul
push
cli
push
pop
mov
jmp
push
gs
mov
out
test
xor
sbb
xchg
gs
mov
cld
or
cld
daa
jae
push
push
cli
mov
inc
jmp
clc
jle
cwtl
popf
in
lahf
mov
ret
jbe
mov
xchg
test
push
jmp
repz
sarb
sarb
push
cli
test
repnz
pop
fldenv
cmp
pusha
jae
cmc
je
mov
in
int
sub
lret
es
mov
call
sub
jb
enter
push
add
in
incb
push
or
repz
popa
out
push
leave
push
inc
es
and
jge
push
repnz
inc
cld
rolb
lret
mov
fisttpl
fwait
jg
aam
inc
push
fcmove
mov
in
push
fidivs
cmpl
mov
mov
mov
adcl
xor
out
sbb
and
les
xor
mov
or
jl
data16
popf
es
jo
in
xchg
loope
imul
ljmp
stos
sub
mov
sbb
scas
movsb
fistpll
push
push
and
add
jno
mov
push
icebp
mov
orb
pop
aam
loopne
orb
js
dec
lret
je
scas
push
fiaddl
jnp
in
loopne
or
jge
aad
pop
in
test
int
imul
test
loopne
mov
push
xchg
add
and
xlat
pop
data16
lahf
pop
aam
xchg
jnp
shll
stos
je
nop
jl
xchg
dec
repnz
ret
in
shrl
rcl
aad
loopne
dec
ljmp
jl
jb
jecxz
xchg
das
orl
add
and
sub
mov
jo
mov
nopl
push
mov
shl
sub
cmp
lods
mov
ss
push
mov
mov
jo
bound
into
add
or
mov
addr16
rorl
sbb
clc
add
outsb
xchg
out
loopne
mov
fldl
stos
arpl
sbb
cmp
sti
insl
mov
mov
pop
jbe
jg
jle
iret
arpl
mov
scas
movsb
mov
rolb
pop
outsb
es
push
add
and
add
enter
mov
rorl
sub
or
out
push
cmp
fwait
je
push
mov
int3
add
mov
pop
cld
movsb
mov
and
dec
popa
pop
or
cs
push
mov
pop
outsb
repz
aam
out
dec
push
shrl
das
testl
inc
les
jns
das
pop
movsl
mov
test
add
lods
int3
add
cmp
fdivp
stos
lcall
aas
insb
sbb
add
lahf
push
into
pop
jb
jae
dec
arpl
addr16
inc
mov
testl
scas
insb
inc
jp
jp
xlat
stos
shld
imul
or
sbb
sahf
mov
pop
sub
and
mov
out
lcall
mov
pop
mov
out
xchg
in
jle
push
and
jl
mov
sbb
outsb
stos
test
mov
mov
mov
je
imull
xchg
pop
call
outsb
adcl
mov
insb
cld
stos
sub
incl
adc
add
imul
test
adc
out
xor
lret
mov
cmp
push
addb
shlb
lods
xchg
mov
iret
xchg
addr16
ds
orb
aas
cmp
in
cmp
inc
leave
mov
addb
mov
nop
xchg
jno
xchg
pop
fs
mov
mov
cmc
push
rcrl
shr
jecxz
aas
inc
xchg
sti
bound
js
and
add
mov
sub
aaa
push
xchg
inc
mov
pusha
ret
add
rcrl
sti
fidivs
xor
imul
jb
cmp
adc
xlat
in
sbb
movsb
cmp
jle
test
daa
sub
icebp
cmp
cmp
mov
enter
stos
xchg
dec
cltd
clc
dec
mov
js
jb
add
push
lret
in
adc
addb
inc
data16
cwtl
sbb
cli
xor
jno
pop
xlat
xchg
int
add
mov
jno
or
sbb
sbb
xchg
push
insb
stos
push
or
ss
push
loope
ret
iret
in
scas
cmp
pusha
jnp
sub
pop
outsl
inc
xchg
data16
jb
xor
std
in
xlat
and
test
leave
out
cwtl
or
icebp
pop
jo
ss
ja
mov
cmp
js
and
mov
dec
shrl
movb
mov
sarb
insb
imul
and
loopne
mov
out
jnp
mov
jp
hlt
bound
fstps
pop
or
xor
in
daa
inc
loope
add
inc
in
xchg
sub
aas
sub
jbe
mov
shll
add
xor
stos
mov
imul
ret
jl
xor
sbb
mov
and
cli
xchg
or
dec
fidivl
scas
pop
faddl
lret
jne
xlat
mov
ret
ja
jbe
jne
pop
lret
popa
leave
mov
imul
into
or
es
ss
pop
clc
scas
fcomip
or
jecxz
fidivl
popf
mov
ds
pop
dec
fwait
dec
stos
or
sar
xchg
fildll
ljmp
daa
ret
aam
sub
pop
test
mov
mov
sub
jb
mov
push
fsubl
mov
mov
mov
enter
jb
stos
sbb
andb
bound
enter
repnz
mov
out
mov
sub
jmp
jge
mov
xchg
std
in
and
pop
cltd
and
in
dec
movsb
hlt
scas
loop
test
or
sahf
jg
dec
sub
and
std
xchg
inc
iret
and
and
sub
mov
xor
or
std
shlb
add
push
adc
iret
xor
and
push
add
push
sbb
add
out
and
iret
jmp
cwtl
sti
aad
cmpsl
sub
les
loope
addb
mov
jno
into
ret
and
mov
mov
int
jl
fadds
xorl
fisttpl
cld
pop
fcoms
int
je
out
mov
in
mov
cli
xchg
jb
pop
cmp
fldl
pop
or
nop
imul
call
shrb
lret
leave
fs
pusha
les
sti
jg
dec
or
je
add
inc
out
je
les
test
mov
push
cwtl
xlat
pop
inc
lock
les
popf
pop
and
xor
ret
mov
dec
dec
push
std
sbb
loop
loope
test
sbb
xabort
stos
in
pop
pop
std
mov
mov
fsubp
push
xor
xchg
push
cs
sub
add
pusha
lcall
mov
cmpsb
testb
std
sbb
cli
out
xlat
push
fmull
mov
inc
add
test
aam
add
in
add
cs
sub
cli
xlat
adc
pop
mov
pop
xor
clc
push
jl
mov
pop
push
dec
inc
xchg
sbb
cmc
xor
cmc
rorb
test
mov
pop
cmp
faddl
mov
push
lret
push
mov
mov
xor
sbb
mov
mov
add
or
pop
pushl
cmp
filds
fisubs
xlat
sbb
es
adc
pop
lret
sbb
jp
pop
hlt
sub
sbb
pop
mov
and
mov
sub
and
incb
rcll
and
fnstsw
push
test
ja
cmp
icebp
push
cli
js
or
fbld
inc
stc
loop
jns
mov
cmp
out
hlt
pusha
fdivr
mov
lahf
push
jle
mov
mov
ret
lret
les
cwtl
sti
into
xor
rorl
jns
in
cltd
jno
mov
aam
inc
mov
add
jp
cld
mov
sub
inc
mov
mov
test
mov
mov
mov
sbb
out
mov
add
movsl
mov
adc
cmp
jmp
fldenv
sub
std
add
sub
push
adc
and
sar
xchg
jno
lea
lods
ljmp
lret
lock
mov
mov
gs
popw
movsl
cmp
in
mov
scas
orb
scas
jecxz
push
inc
outsl
xchg
jno
daa
sysret
nop
pop
aam
cmc
mov
imul
mov
xor
add
mov
cmpsl
jb
clc
jnp
stos
sbb
rorb
je
hlt
aaa
mov
iret
test
leave
sub
aas
push
pop
mov
std
pop
add
xorb
cwtl
sbb
js
enter
xchg
jg
addb
pop
out
inc
pop
out
test
pop
outsl
sub
popf
pusha
ret
xchg
push
out
loop
push
stos
or
jecxz
inc
pop
xor
lods
test
mov
or
inc
lret
mov
and
ds
data16
cmp
push
push
mov
inc
add
push
lods
or
pop
nop
int3
or
mov
fscale
inc
fldenv
dec
xlat
push
lds
push
sub
and
ljmp
add
in
mov
bound
shlb
jb
mov
mov
std
or
cwtl
inc
mov
sahf
scas
push
pop
add
or
cli
ret
out
add
scas
sbb
imul
and
pop
jae
or
inc
std
xchg
movsl
stos
pop
sbb
add
jo
stc
bound
inc
loope
dec
mov
rcl
push
dec
xor
pushf
and
jo
pop
inc
in
inc
sbb
mov
lea
mov
sahf
pusha
adc
add
sub
sti
and
sub
shll
lock
lea
dec
or
addb
mov
xchg
shl
jbe
adcb
pop
sub
jecxz
stos
push
outsb
aas
pop
gs
leave
pop
xor
testl
stos
lcall
mov
in
or
mov
sub
lahf
ljmp
mov
xacquire
mov
pop
mov
cmp
stos
jnp
pop
gs
pop
movsl
xchg
mov
loop
sti
add
stos
rcll
loop
lret
imul
xor
loopne
jbe
jmpw
insb
clc
xchg
stos
repz
loope
ds
pop
adc
adc
ja
push
dec
dec
sahf
popa
xor
pop
aam
dec
jbe
arpl
xor
adc
dec
xchg
fistps
push
rcrl
movsb
scas
cmc
je
stos
or
or
pop
in
aam
mov
mov
jbe
inc
mov
mov
in
movsb
popa
cld
testl
fisubs
ret
mov
or
ret
xor
int3
movsb
sbb
sbbb
aam
push
mov
adc
dec
call
xchg
lcall
push
push
mov
stos
pop
outsb
adc
mov
fdivrl
mov
shr
ret
mov
mov
sub
stos
mov
pusha
mov
cli
ficoms
sub
mov
mov
out
imul
jo
or
mov
scas
shl
jno
adc
out
xorl
mov
out
in
inc
xcrypt-ctr
cmpsl
fisubs
or
popf
pop
push
dec
sub
out
dec
fcmovbe
pushl
mov
fmull
xor
sbb
loop
push
rol
iret
ret
push
mov
jo
ret
push
mov
xchg
and
xor
lret
pop
stos
mov
jp
es
and
sub
fdivrs
rclb
outsb
sti
and
out
imul
nop
or
or
sbb
arpl
fsts
push
aaa
dec
std
and
mov
and
pop
stos
out
subl
pop
push
jo
push
std
adc
loop
jl
ds
ljmp
rcrb
jne
pop
out
movsl
pushf
cli
loope
repnz
mov
push
test
test
dec
dec
adc
mov
loop
mov
idiv
mov
ja
xchg
mov
jecxz
and
ret
xchg
add
xchg
sub
xchg
sbb
cli
loope
lock
pop
cmpsb
xor
sub
loopne
mov
sbb
aas
xor
inc
pop
jb
add
sbbl
dec
sub
pop
sbb
sbb
scas
popf
aaa
outsl
mov
or
jmp
sbb
mov
push
stc
rolb
outsb
addr16
xor
push
test
dec
add
lock
lock
mov
stos
cmp
jl
push
imul
push
inc
testb
pop
stos
outsb
xchg
pop
fldt
cmpsb
cltd
jg
jmp
mov
xlat
pop
aaa
mov
push
imul
jo
or
je
bswap
mov
xor
rorl
push
pusha
cmp
loope
cli
lods
iret
test
out
cltd
and
sub
push
add
mov
xchg
mov
sub
into
mov
and
push
ret
inc
cli
lcall
ds
and
pop
mov
cs
arpl
mov
xchg
nop
xor
data16
stos
jmp
or
rolb
lcall
pop
repz
xchg
movsb
fdivl
retw
add
jmp
std
loop
les
xchg
sub
cmp
in
loop
ficomps
std
repz
jle
push
mov
orb
sub
mov
loope
notb
xchg
out
ret
movsl
stc
scas
mov
cli
out
ficomps
sar
adc
cmp
movsb
mov
in
rcrl
xchg
cld
push
repnz
sbb
and
push
ret
out
sahf
repz
negl
clc
inc
in
hlt
scas
mov
sub
iret
fcomps
add
cld
ljmp
pop
stos
and
jg
in
std
mov
push
mov
mov
popf
sub
fiadds
lods
insb
sub
test
ljmp
inc
jo
lock
dec
mov
repnz
vpcomub
loope
clc
pop
cli
insl
inc
dec
xchg
xchg
sbb
popa
mov
ja
stos
mov
outsl
mov
xchg
jne
push
sub
outsb
data16
mov
lods
ret
dec
stc
xchg
dec
loop
ljmp
loop,pt
mov
dec
lret
in
jmp
repnz
dec
sub
stos
dec
add
push
shrb
jp
mov
jle
push
xchg
repnz
out
stos
aas
mov
sub
in
mov
and
shll
xchg
ja
mov
ljmp
pop
xchg
aad
call
lods
mov
add
jo
inc
repnz
mov
jecxz
xchg
es
test
cmpsl
jbe
adc
xchg
pop
inc
pop
out
push
ljmp
scas
cmpsl
sub
in
stc
xchg
lock
sbb
cli
enter
in
mov
addr16
push
push
int
mov
cmp
mov
add
jp
pop
pop
xchg
pop
nop
cmpsb
cmp
or
je
cmpsb
dec
xor
outsb
mov
ja
test
xchg
icebp
cmp
push
jbe
data16
gs
pop
ljmp
test
mov
test
test
popf
pusha
xchg
outsb
inc
popf
adc
shl
cmp
lods
movsb
test
cmpsb
loop
rcl
pop
les
cmp
inc
mov
popf
cli
mov
push
rorl
mov
in
arpl
cmpsb
and
sub
sbbb
cmpsb
push
in
or
cmp
frstor
stos
fdivr
in
pop
lcall
xchg
out
fimull
add
pop
mov
lods
sbb
push
and
sahf
sbb
sbbl
sub
insb
pushf
push
stos
mov
sbb
add
pop
scas
xchg
cmp
stos
push
inc
cld
and
sub
jle
mov
iretw
and
push
fistps
loopne
enter
pop
push
outsb
or
shr
fcmovb
hlt
mov
dec
ja
adc
loope
outsl
mov
mov
xor
popf
rorb
and
inc
fisttpl
ret
mov
mov
push
stos
inc
and
aaa
push
ret
iret
mov
pushw
adc
mov
cmpsl
mov
lea
pop
mov
xchg
cli
jge
ret
mov
bound
repnz
pop
lret
ds
sub
lds
mov
mov
ljmp
aam
decb
xor
aam
fdivrl
cmp
adc
push
and
test
mov
push
outsb
in
dec
jbe
inc
add
jmp
jnp
sbb
fists
cli
stos
sbb
lret
popf
jne
in
mov
pop
nop
mov
out
jo
add
ret
or
sub
xchg
dec
scas
mov
sbb
adc
stos
into
mov
cli
idivl
clc
out
in
xchg
hlt
xorb
xbegin
dec
sbb
in
lahf
lahf
mov
and
pop
and
movsl
add
push
inc
jp
cmp
popa
mov
call
int
push
nop
insl
fmul
xchg
push
addb
rol
or
and
sti
mov
jg
xchg
daa
hlt
cli
ljmp
les
cs
dec
fisttpll
inc
ficoms
xchg
data16
retw
rcrb
ret
out
sbb
push
cmp
sub
cld
rcrl
shrb
jmp
movsl
rcl
add
sub
lret
leave
push
mov
mov
clc
arpl
cmc
loope
aad
or
icebp
mov
nop
xchg
sbbb
dec
out
and
add
pop
ljmp
mov
sub
fdivr
arpl
stos
sbb
pop
mov
rcrb
fsubl
les
add
ss
ror
and
ljmp
xchg
sbb
gs
xchg
add
jg
fdivrl
pop
cld
mov
lcall
in
loop
jle
jmp
icebp
rclb
pop
loop
cltd
adc
mov
stc
xor
mov
cmp
jmp
mov
fcoml
pop
loop
pop
je
mov
shll
test
outsl
fsubp
cmp
call
es
in
movsl
imul
push
inc
loope
fisubrs
stos
fnstcw
mov
dec
jnp
push
cmp
or
push
bnd
jl
lods
movsb
loope
popa
cmpsl
adc
add
subl
jp
pop
fs
mov
sti
dec
pop
inc
jnp,pn
inc
jmp
add
mov
shrl
and
fucom
les
fsubrs
and
sub
mov
stos
popf
inc
and
pop
movsb
jmp
sub
ds
loopne
outsl
fnstcw
jecxz
xchg
int3
push
loop
movsb
xchg
cmp
and
fldl
mov
or
popf
kandnw
or
inc
hlt
mov
lock
pop
sub
loopne
cmp
mov
les
pushf
fwait
add
xchg
lods
xor
out
jmp
xlat
loope
pop
mov
sbb
mov
cmpsb
in
ret
cmp
in
sbb
sbb
outsb
cs
mov
mov
inc
mov
inc
lret
movsb
rcrl
call
sbb
sub
lods
inc
add
push
add
jle
ds
in
xor
sbbl
movl
or
adc
dec
lods
cmp
mov
mov
jecxz
div
xchg
lods
mov
inc
jg
enter
push
pop
nop
cmp
lods
dec
not
jl
scas
mulb
xchg
mov
dec
shll
xchg
out
loop
std
enter
out
dec
cmc
in
xor
mov
jp
xor
sbb
movsb
push
or
cmc
add
mov
inc
inc
dec
daa
dec
adc
imul
pop
mov
shll
xor
xchg
ds
iret
test
xor
or
sub
lods
adc
enter
clc
out
nop
add
insl
bound
dec
and
mov
inc
jae
pop
lods
xchg
mov
dec
imulb
leave
jmp
dec
cld
in
loope
sub
or
push
fistpll
lds
cltd
ds
in
out
cld
loop
jns
lcall
mov
mov
mov
int3
cmc
in
or
cld
push
daa
loop
mov
push
mov
xor
loopne
xlat
sub
call
dec
jmp
adc
or
lods
sbb
loop
mov
lret
ret
jecxz
and
jecxz
movsb
addr16
xchg
inc
mov
push
xor
pop
xlat
fiaddl
ret
mov
xor
fdivp
lds
out
dec
ret
jbe
aam
icebp
outsb
add
jp
stos
cmp
fistpll
inc
movl
jbe
mov
orb
mov
daa
dec
push
cld
push
fs
mov
mov
in
fstpl
mov
push
mov
add
clc
call
aad
adc
in
pop
insl
shlb
stos
pop
lret
mov
sti
ja
xor
sub
lahf
js
push
outsb
clc
cld
ds
addr16
jp
stos
or
mov
or
mov
jmp
in
cli
in
and
das
xorl
stos
pop
jbe
aas
push
outsb
xchg
dec
clc
mov
add
jecxz
and
adc
and
leave
ja
loop
scas
or
push
mov
dec
jecxz
mov
pop
int
in
mov
cwtl
ret
add
mov
mov
fwait
mov
dec
leave
push
mov
imul
cwtl
push
outsl
sbb
out
cmp
cld
fcoms
xor
clc
and
shll
cli
je
push
and
cmc
stos
or
pop
ljmp
andb
and
loop
popa
js
repnz
sbb
xchg
sbb
outsl
cli
pushf
in
sbb
and
mov
fildll
addr16
notb
movsb
pop
scas
dec
cmp
and
mov
jb
dec
dec
adc
popa
call
mov
jno
loop
or
mov
iret
cs
ljmp
push
sahf
mov
xlat
sbb
fldcw
jecxz
push
jo
les
push
scas
fs
out
xor
xor
cld
lcall
out
enter
loop
sub
outsb
filds
add
mov
mov
jecxz
aad
in
ss
rcrl
add
in
out
fldcw
fsub
out
data16
jecxz
aad
cmp
shlb
cmp
or
jle
imul
cmc
xchg
adc
mov
push
ja
sub
xor
fisttpll
dec
cmc
stos
andb
adc
lods
cmp
dec
sub
icebp
adc
mov
sub
stos
lret
ljmp
mov
out
and
popa
xor
hlt
adc
mov
clc
cmp
inc
es
je
cmpsl
fs
shl
mov
xchg
fisubrl
or
test
mov
aas
and
add
dec
xor
jae
sarb
fdivrl
xorl
sbb
cwtl
insb
jg
in
jl
pop
mov
add
fcomps
pop
inc
mov
repz
inc
stos
dec
int3
aam
xor
and
sbb
adc
cmp
lods
jae
out
in
scas
sub
out
mov
lret
dec
mov
stos
rcrb
add
push
popf
jnp
push
jbe
pop
sarl
icebp
sbb
nop
mov
adc
jp
ljmp
scas
jmp
dec
cwtl
or
frstor
mov
lahf
push
fdivl
push
ljmp
or
loopne
inc
ja
insb
fildll
icebp
adc
pop
or
imulb
aaa
sub
loop
sbb
aas
xor
xchg
daa
stos
mov
call
fsubrl
stos
fistps
ret
dec
push
adc
cmpsb
loope
das
xor
fcomip
shll
pop
push
ret
jmp
fstps
sbb
xchg
mov
pop
pop
lret
mov
imul
icebp
sbb
inc
fcmovb
or
stos
popf
xchg
push
pusha
mov
dec
daa
outsl
in
add
clc
jp
pop
sub
sti
scas
out
data16
aas
mov
cld
dec
repnz
fwait
loop
push
pop
add
adc
mov
in
mov
pop
jecxz
xlat
mov
adc
stc
sti
arpl
fidivl
and
sbb
jnp
data16
and
les
decb
outsl
pop
or
ljmp
cmp
rcll
mov
dec
sub
fmulp
and
cwtl
fwait
enter
imul
mov
and
xchg
aad
lock
nop
insl
xchg
push
les
cld
sub
mov
add
push
inc
outsb
aam
mov
nop
mov
in
pop
mov
lret
xchg
popa
xchg
lods
lea
sbb
xchg
pushf
pop
pusha
mov
test
int
in
popa
lods
mov
cmp
mov
arpl
pop
pushf
andl
cmp
add
lock
repz
sbb
mov
adc
dec
add
out
add
mov
pop
arpl
mov
or
sti
cmp
push
push
and
shll
adc
cmpsb
dec
add
inc
pushf
out
mov
incb
lods
sahf
cld
lret
icebp
mov
mov
inc
call
hlt
outsl
ds
adc
sub
std
bound
test
in
pop
incb
push
xchg
rcrb
les
stos
bound
push
push
push
inc
and
pop
pop
push
xor
mov
mov
loop
lods
pop
es
mov
cmp
clc
and
push
jo
mov
pop
cmpxchg
arpl
loop
pusha
iret
pop
cs
inc
mov
xor
call
mov
out
or
adc
stos
xor
xlat
mov
cwtl
hlt
jecxz
shl
lods
push
or
lahf
mov
pop
xchg
xlat
pop
stos
clc
dec
jns
insl
pop
mov
fsubp
nop
pop
jp
sub
mov
cmc
test
push
mov
fdivs
mov
int
cld
mov
xchg
mov
mov
inc
into
and
dec
or
fbld
xchg
stos
sbb
aas
icebp
lahf
add
out
and
adc
scas
xor
mov
push
ds
adc
inc
dec
sbb
mov
sub
and
mov
bound
ljmp
xchg
and
adc
or
adc
pop
stos
mov
and
mov
jnp
sarl
test
jl
push
cmp
fimuls
cmc
adc
mov
lret
mov
addr16
mov
push
rolb
test
adc
or
shrl
cli
mov
mov
pop
jno
sbb
call
dec
adcb
aaa
and
jno
ss
popf
cli
les
mov
call
adc
loope
aad
pop
loopne
outsl
jle
xor
jp
and
mov
xchg
add
daa
xchg
cmp
xor
shl
jl
loope
repnz
sbb
gs
outsb
jnp
xorb
push
loopne
mov
sub
aaa
ljmp
mov
pop
into
sub
popf
ljmp
repz
stos
sub
in
mov
xlat
jmp
icebp
adc
ret
mov
sarb
sub
lods
jns
ret
das
jmp
stos
xchg
sahf
xchg
je
mov
push
fdivl
mov
mov
jl
push
stos
xor
push
sub
rcrl
movsb
push
loopne
shlb
lock
push
data16
cwtl
mov
jp
std
and
cmp
sbb
insb
sti
cltd
inc
inc
sbb
ljmp
lock
mov
lcall
cmpsl
fcoms
cli
or
scas
pop
mov
sbb
or
mov
sbb
jge
lods
stos
int3
push
xor
loope
repnz
imulb
cmp
out
in
lock
gs
mov
xor
jge
in
cmp
push
jecxz,pn
ficoms
xchg
stos
shl
js
jmp
in
andb
jns
andl
lea
sbb
loopne
pop
in
les
jmp
inc
and
xchg
loop
and
stos
inc
cmpsl
cld
xor
mov
mov
out
xor
enter
enter
stos
es
leave
dec
aam
dec
or
addr16
lret
push
bnd
pop
sbb
pop
pop
dec
jge
sbb
mov
ret
test
insl
mov
pop
sbb
inc
fisttps
leave
int
bound
cmp
or
fisttpll
sbb
loope
int3
add
xor
nop
js
jle
loop
stos
bound
cli
lods
push
loop
push
nop
pusha
stc
scas
cld
sbb
jle
ss
jmp
scas
icebp
cmp
hlt
out
cmpsb
popf
mov
push
jo
adc
jl
add
add
loop
std
dec
adc
xchg
cmp
clc
in
aas
push
jmp
push
mov
subl
adc
jecxz
xchg
loope
xchg
xchg
dec
cmp
ljmp
adc
repnz
mov
dec
adc
sub
push
sar
jecxz
cmp
jecxz
sub
testb
mov
push
push
and
cmc
push
shrl
in
add
jno
sub
inc
and
fldl
ds
push
lods
push
cmp
leave
adc
gs
aaa
adc
out
xor
gs
test
jg
aaa
cmpsb
sahf
popa
into
cmp
lcall
loop
dec
mov
jp
fnstcw
push
dec
or
inc
sub
add
cmp
pop
frstor
jle
jl
flds
mov
sub
add
xchg
xor
xchg
out
popf
in
push
arpl
stos
cli
adc
jmp
xchg
mov
stos
add
stos
xor
icebp
push
into
mov
mov
andl
ret
push
push
dec
mov
sbb
test
aam
loopne
fs
in
jmp
ret
leave
jge
sub
lret
addr16
aaa
push
adc
in
repnz
dec
push
in
cltd
into
and
scas
push
test
sbbl
das
js
stos
sbbb
lret
xchg
dec
sarw
mov
push
outsl
jnp
ja
imul
pop
das
addr16
push
test
ljmp
sub
sbb
lret
fidivrs
and
add
push
jp
stos
sti
lds
lock
ljmp
repz
cmp
jecxz
repnz
stos
xor
adc
mov
sub
mov
rolb
lock
adc
sub
or
packssdw
ljmp
cmpsb
shl
daa
or
push
jae
push
clc
out
and
ss
xchg
push
inc
xlat
int3
push
and
test
fwait
add
ret
mov
loope
negb
jo
ljmp
in
adc
mov
sarb
into
inc
pop
ss
xor
cmp
add
push
les
xchg
cmp
mov
scas
cmp
jp
inc
push
push
cltd
rcrl
mov
cli
sub
xchg
fcoms
aam
sbb
mov
test
mov
fsubr
xchg
sub
clc
cmc
test
jle
je
stos
jmp
int3
jb
loope
mov
pop
rcr
xchg
out
jecxz
jl
xor
jl
imul
push
loope
xchg
push
lock
push
and
loopne
imul
lret
mov
stos
repz
hlt
mov
pusha
fdivl
ljmp
imul
jns
cmpsb
pop
loope
pop
ljmp
jb
sbb
push
mov
jne
pop
pop
dec
inc
inc
sub
cwtl
nop
mov
xor
cmp
and
cmp
pop
jo
cli
cwtl
dec
cltd
dec
or
xchg
in
repnz
mov
xchg
les
stos
dec
mov
sbb
mov
sub
loopne
mov
nop
cs
dec
cmpsl
cwtl
mov
sar
shrb
sbb
clc
fsqrt
dec
pop
cmc
jp
mov
aas
sti
cmc
xchg
int
pop
push
icebp
ret
sti
cmp
clc
lods
scas
testl
bound
mov
sahf
xchg
sbb
dec
mov
add
sar
push
cmp
xchg
jle
arpl
pop
repz
stos
sub
mov
cli
rcrb
pxor
dec
stos
mov
sbb
lods
jmp
jno
sarb
or
jp
cs
scas
push
cmc
stos
sub
lcall
imull
mov
pushf
cltd
push
sti
xchg
sbb
mov
xchg
sahf
inc
or
adc
jbe
test
mov
test
jp
sub
arpl
xchg
ret
xchg
push
stos
and
xchg
cmp
ficompl
jmp
dec
repz
lods
mov
bound
add
xor
mov
sbb
sahf
lods
inc
push
stos
xchg
or
lret
jecxz
add
out
adcb
stos
out
xchg
mov
cs
fwait
out
mov
sbb
lahf
add
stos
mov
jp
jae
pop
andl
stos
in
rorb
inc
add
stos
pop
push
out
pop
scas
adc
cmpsb
jns
insl
xor
lock
lret
jbe
inc
ljmp
push
mov
imul
mov
aas
ja
push
push
pushf
out
pop
int
imul
jl
cli
arpl
loop
mov
xchg
sbb
stos
add
dec
ret
mov
stos
mulb
dec
jl
ret
sub
mov
fcompl
dec
ret
icebp
xor
movsl
fs
jecxz
and
jecxz
in
icebp
push
cmp
cli
xchg
fs
ljmp
push
subb
sub
adc
pop
lock
sti
inc
rcrb
shrb
pop
push
sti
iret
sbb
jmp
loopne
in
inc
inc
push
adc
clc
xor
add
jno
out
pop
xor
cli
dec
sbb
mov
shlb
sub
inc
inc
in
add
xchg
fs
sbb
hlt
xchg
inc
rorb
sub
push
push
fisubs
dec
les
pop
icebp
add
jb
hlt
pop
push
loop
mov
push
bound
jns
or
cmp
mov
lock
lcall
jle
or
sbb
in
stos
cmp
add
push
xor
insl
or
cld
sub
push
outsl
jmp
mov
xchg
imul
cmp
notb
sbb
jp
loopne
pop
add
in
ret
lock
cmc
jo
out
sar
cmp
rcrl
jl
push
inc
or
add
ret
int3
cmpsb
cmp
pushl
cld
idiv
icebp
mull
shl
mov
pop
lcall
mov
movsb
fisubrl
jecxz
sti
mov
adc
pop
xchg
mov
imul
mov
push
jmp
mov
in
stc
popl
insl
jecxz
xorl
cmp
bound
jno
push
cld
pop
or
ja
ss
hlt
ljmp
loop
adc
mov
jp
pop
popa
adc
or
das
hlt
bound
cmp
iret
jae
and
pop
mov
mov
stos
js
add
fsubrp
data16
xchg
jae
push
jbe
stos
nop
push
mov
dec
sahf
sbb
add
push
mov
pop
sbbb
ljmp
and
pushf
adc
cld
fisttpl
in
xchg
xor
or
pop
cld
fwait
jecxz
xorb
loopne
mov
push
inc
ret
dec
push
xchg
pusha
loop
das
or
jae
adcb
adc
pop
inc
sbb
mov
cmp
add
lcall
aas
and
mov
mov
mov
loope
mov
sahf
adc
pop
rcr
push
sti
xor
add
xchg
es
sti
maskmovq
divl
lret
pop
imul
push
sub
push
popf
and
sbb
movsl
jp
mov
sar
add
and
xchg
fs
setb
cld
jg
out
ret
push
pop
test
pop
fcompl
es
jecxz
popf
lods
push
add
stos
ret
inc
push
push
push
test
repnz
sti
jnp
pop
push
lea
pop
in
fs
jmp
sub
fimull
ds
jg
testb
rclb
clc
in
push
pop
rcr
sub
mov
mov
hlt
dec
ss
cmpsl
shll
sub
push
sahf
or
cmp
loopne
iret
out
jle
nop
add
xchg
sub
jecxz
les
test
jnp
imul
loop
xor
add
out
loopne
repz
mov
mov
mov
sbb
pop
jle
dec
lahf
mov
fildl
in
ljmp
jmp
jecxz
pop
test
addr16
aad
daa
adc
xor
test
lret
pop
xor
call
cmp
push
loope
les
jecxz
jg
or
push
stos
push
jge
xchg
fstps
daa
repnz
jg
xchg
pop
push
sbb
in
jecxz
jmp
stos
mov
ret
es
xchg
jp
sub
std
imul
pop
stos
outsb
inc
addr16
sub
sbbl
or
push
aad
sti
ljmp
test
filds
push
jnp
xor
adc
mov
push
mov
hlt
out
fs
in
sbb
out
movsb
subl
jb
mov
add
cmpsb
lock
cltd
pop
ret
adc
xor
loopne
cwtl
inc
out
xor
clc
mov
pop
and
push
shll
mov
cmp
outsb
fstpl
and
sbb
inc
pop
sbb
je
shrb
loop
in
out
lds
ljmp
js
sbb
cwtl
pop
ror
cmp
movsl
ljmp
fstl
pop
jle
mov
fdivp
faddl
pop
rcrl
pop
cmp
fs
cmp
sarl
sub
mov
cli
mov
jb
inc
sub
jb
ret
push
or
mov
shl
push
pop
loop
out
stos
loope
mov
leave
jmp
sbb
pop
sbb
mov
dec
push
xor
sub
out
mov
sahf
and
cmpsl
stos
or
popf
and
push
mov
loopne
pop
out
shlb
and
adc
scas
jns
cmpl
out
pop
in
stc
lock
mov
pusha
dec
out
sub
data16
inc
insb
outsb
and
jns
js
and
insb
ficoml
repnz
mov
jno
jle
adc
stos
sbb
insl
or
fmuls
cmp
add
fwait
iret
mov
dec
fld
xchg
add
cmpl
lock
lret
stos
push
leave
std
dec
add
add
xchg
ja
mov
lret
pop
je
xchg
xor
mov
js
cld
push
xlat
test
mov
mov
es
cmp
add
in
mov
imul
stos
shll
lock
push
ret
sahf
adc
bound
mov
adc
cli
add
clc
scas
fldl
in
sbb
mov
rcll
stos
jbe
add
es
push
push
lahf
cs
or
or
arpl
xorl
mov
push
loopne
cmc
enter
cmpsl
js
jle
push
pop
mov
jecxz
and
add
call
in
out
fwait
cli
mov
jecxz
fwait
clc
cmp
lret
pop
aad
enter
cli
sti
push
loop
cmp
cmp
sub
cwtl
jp
add
cmc
adc
push
popa
mov
jp
lahf
pop
clc
mov
jo
inc
mov
xchg
xchg
pop
bound
xchg
mov
adc
add
lods
xor
outsb
loope
clc
stos
insl
lds
adc
mov
and
sti
and
test
cmp
push
mov
aad
jno
cmp
pop
lods
cmc
outsb
outsl
fisubrs
sbb
xlat
xorb
out
mov
jle
icebp
push
js
sbb
push
cmc
je
cld
jg
arpl
mov
sbbb
repz
sub
dec
jno
aas
mov
imul
cmc
jbe
sbb
and
dec
push
imul
ja
dec
cld
inc
rolb
les
pop
pop
xor
in
add
sbb
fidivs
sbb
mov
or
daa
add
out
mov
pop
and
js
jno
pusha
sub
movsl
add
lods
xor
test
cs
in
fwait
aaa
arpl
add
add
jmp
sbb
mov
stos
adc
sub
ret
loope
aaa
in
cwtl
dec
mov
mov
sarl
lods
ss
inc
cld
cmpsl
xlat
or
ljmp
lret
daa
sahf
cld
mov
in
push
out
repnz
ljmp
ljmp
movsb
add
fcoml
add
mov
repz
inc
imul
add
fucomip
push
push
mov
stos
and
or
dec
push
loop
loopne
stos
push
sub
sub
or
fldl
pop
mov
or
adc
or
bswap
aas
push
xor
mov
cwtl
and
push
icebp
mov
or
ret
scas
dec
push
dec
jg
fdivl
sbb
push
inc
jg
inc
jmp
dec
repz
out
mov
mov
mov
cmp
repz
in
loopne
jecxz
aam
xor
gs
scas
xchg
pop
and
in
mov
cmp
dec
jbe
mov
inc
bound
imul
fisubrs
xchg
rorb
add
dec
in
sub
mov
sti
and
push
cmp
mov
adc
cmp
cmp
cmp
or
std
mov
jmp
mov
cmpsl
dec
out
mov
pop
aas
sub
dec
jmp
div
loope
fldl2e
ret
push
mov
pushf
imulb
inc
xchg
mov
xlat
outsb
jmp
mov
or
xchg
pop
stos
xor
sti
dec
into
cmp
inc
push
popf
in
das
push
sub
mov
push
mov
xchg
xchg
pusha
sbb
insl
data16
out
insb
push
rolb
push
clc
or
cli
stos
mov
sahf
icebp
call
xor
fisttps
sar
mov
cmp
adc
loope,pt
fdivrp
es
lods
addr16
addb
and
leave
in
bound
stos
test
add
mov
fisubl
and
push
mov
adc
bnd
movsb
jg
iret
dec
sbb
ret
sbb
push
adc
sub
sub
jge
push
xor
xor
mov
cmp
cmpsl
jb
in
sbb
add
adc
mov
sub
inc
mov
fcoml
pop
xchg
icebp
bound
jb
jp
mov
and
jae
xlat
lret
aas
nop
add
and
sbb
push
and
gs
push
cs
pusha
and
sti
xor
mov
push
repnz
out
arpl
sti
jae
jnp
cmpl
or
repnz
out
mov
imul
shl
pop
fucomp
loop
pusha
ljmp
mov
sbb
and
pusha
sub
sti
cmp
mov
pop
repnz
out
push
jb
jp
andb
repnz
mov
mov
rorb
repnz
mov
pop
push
and
loopne
xchg
mov
pusha
aad
jmp
inc
bound
movsb
insb
push
imul
add
lcall
iret
inc
pusha
lods
and
sbbb
inc
ds
scas
xlat
ljmp
mov
arpl
xchg
inc
icebp
jno
popa
cmp
dec
loop
jbe
sub
jns
out
sbb
xchg
cwtl
inc
xchg
icebp
in
dec
cltd
aas
add
jl
or
mov
cmp
sbb
sbb
pop
xchg
push
adc
fnstenv
dec
sub
push
pusha
add
jmp
or
stos
jp
les
and
fadds
loopne
add
loop
pop
clc
call
inc
rcr
in
scas
mov
in
xlat
dec
add
xchg
pop
push
sub
mov
outsl
pop
ljmp
les
movsb
mov
inc
sti
adc
xlat
aas
lahf
imul
stos
in
imul
out
inc
xchg
mov
stc
popa
sub
fwait
sbb
in
pop
enter
loopne
stos
xor
sbb
dec
ljmp
inc
inc
aam
and
mov
aaa
stc
xchg
sub
lret
ret
insb
xchg
fidivl
aad
inc
jb
pop
ss
sbb
cmpsb
mov
jo
dec
sub
push
out
leave
cli
pop
ret
inc
in
jecxz
and
push
push
shl
xchg
fldt
call
stos
ret
pop
retw
sub
bound
inc
cmp
pop
mov
sbb
mov
cli
out
pushf
push
stos
sub
push
fwait
mov
out
cmpsb
fs
hlt
shlb
mov
push
mov
lret
shlb
in
jo
addr16
xlat
xorl
cmc
add
das
pop
jge
jmp
jmp
mov
adc
lock
xchg
adc
stc
bound
and
bound
ss
outsl
sbb
or
fwait
sahf
js
fwait
and
pop
or
cmp
push
negb
shlb
loope
mov
test
dec
rolb
lea
lock
or
in
mov
push
shl
pop
pop
rorb
mov
movsl
cwtl
fadd
sub
out
sti
mov
popf
jecxz
cmp
sbb
jo
cmp
mov
lret
push
cltd
rcr
rcrl
sbb
xor
fucomp
std
push
cmpsb
jl
xor
inc
jg
icebp
popa
leave
sbb
xor
mov
lret
inc
nop
cmp
or
jge
lret
sub
sub
out
pop
fcmovne
cltd
xor
lret
in
out
test
out
repnz
out
mov
push
mov
loopne
inc
imul
add
jle
mov
imul
jbe
loopne
sarl
repnz
pop
mov
cld
sbb
pop
pushf
rcr
movsl
adc
lock
jle
add
cld
je
cmp
jge
adc
jle
push
sub
test
and
sbb
ret
mov
clc
pop
mov
mov
mov
aas
dec
xchg
push
xor
cmpl
inc
and
jp
out
orb
and
cld
outsb
pop
jp
mov
xchg
ss
cld
adc
stos
sbbl
cs
cwtl
adc
imul
aad
andl
inc
in
push
int
mov
sbb
rcl
sbb
mov
or
jle
imul
xchg
fs
dec
push
dec
lock
insl
addb
cmp
fidivl
xor
in
lret
ljmp
rcrl
notb
jbe
inc
xor
imul
stc
loopne
cmp
xor
in
imul
adc
jle
subb
jp
movsb
daa
loopne
out
xor
rep
xor
jo
in
cmpsb
sub
fildll
pop
push
pushf
clc
in
mov
xor
jmp
mov
cwtl
push
mov
push
jmp
shll
bound
and
dec
or
fcoms
cmc
bound
xor
jmp
aad
cmpsb
in
or
loope
jb
and
ljmp
lods
inc
aam
cld
push
jp
xor
cmc
jp
push
jge
lock
pop
pop
and
movsl
push
pusha
out
bound
jmp
stos
add
sbb
shll
push
cs
sbb
sub
mov
mov
pop
ljmp
add
into
adc
dec
cltd
sub
out
mov
in
fldl
es
dec
push
push
dec
dec
jecxz
jp
sahf
cs
pop
pop
sbb
aam
add
stos
inc
jg
add
stos
mov
pop
outsb
cmpsb
push
jg
push
cmp
imull
insl
xor
in
sbb
dec
lock
cmc
xchg
xor
inc
leave
push
xchg
jp
xor
pop
lret
push
loope
push
fdivrl
lret
push
imul
or
orb
inc
push
cmp
jmp
pop
aad
and
imul
jmp
loop
outsl
cld
iret
rcll
pop
xchg
mov
shll
pop
or
adc
jp
inc
jns
lahf
dec
loop
jmp
imul
mov
repnz
inc
mov
sub
lret
sub
cli
adc
inc
inc
mov
xchg
jno
sub
les
scas
xchg
inc
sub
sahf
scas
lock
out
mov
jle
jo
int
scas
pushl
ret
or
dec
add
repz
out
cld
cmp
sbb
out
shlb
enter
ss
sbb
int
dec
ficomps
cli
idiv
test
jo
fldenv
adc
mov
lahf
repnz
jecxz
xor
popa
adc
jbe
sti
and
push
mov
cmpsl
and
xor
inc
es
jmp
iret
and
dec
arpl
push
sbb
cmp
pop
imul
pop
push
pusha
pusha
xchg
xchg
into
in
lea
ret
jp
xchg
jns
and
sub
sub
cld
mov
jecxz
divb
cld
sbb
cmp
arpl
adc
sbb
mov
xor
cmpsb
add
xor
mov
dec
out
xchg
jo
xchg
jbe
or
outsl
or
xlat
hlt
mov
clc
cld
or
add
mov
js
out
add
add
fldt
cltd
cli
aad
mov
dec
jl
repnz
or
clc
in
test
test
lret
stos
cmp
mov
inc
je
cmp
sub
les
jmp
dec
or
push
rcll
sub
inc
ret
pushf
lahf
mov
test
xor
jecxz
mov
cwtl
sahf
pop
ret
fsubr
lods
dec
xchg
ja
add
ljmp
scas
adc
pop
mov
roll
mov
adc
imul
dec
xchg
sbb
push
jb
sbb
adc
mov
aad
sbb
pop
pop
lods
dec
push
cmpsl
or
loop
outsb
lds
dec
mov
stos
mov
stos
sahf
cli
loop
fsubs
jp
mov
in
imul
sbb
fsubs
sub
jl
ljmp
rcll
repz
stos
addr16
loop
add
lods
iret
cmpl
pop
jns
and
decb
out
daa
dec
xor
push
repnz
int3
cmp
dec
outsl
in
mov
hlt
ja
mov
js
dec
fists
xor
sbb
into
es
adc
jp
repnz
rcrb
rorl
sti
add
or
insb
rclb
xor
pop
in
push
hlt
stos
mov
test
pop
in
lds
lahf
jbe
inc
sub
add
mov
dec
sahf
dec
jg
jbe
insb
dec
sbbl
repnz
dec
dec
or
add
or
cmpl
push
jp
add
xor
pop
mov
insl
jns
mov
adc
loope
mov
insb
inc
dec
repz
leave
fs
aaa
jge
lahf
mov
and
out
mov
mov
adc
add
pushf
mov
rclb
hlt
shll
dec
adc
stc
sub
pop
add
jp
imul
les
out
push
jecxz
arpl
xchg
or
cmp
push
jg
xor
push
je
jmp
pop
push
cwtl
addr16
int3
addr16
xchg
mov
push
mov
and
movsb
test
pusha
mov
jno
jbe
jge
dec
push
cld
cmc
cmpsb
out
sub
mov
cli
sub
aad
inc
push
mov
stos
mov
movsb
mov
or
cli
mov
sub
xor
pop
faddp
jmp
fwait
mov
sub
dec
jmp
mov
hlt
in
sbb
jo
fsub
sub
enter
dec
cmp
sub
xchg
les
fstps
addr16
mov
mov
lcall
addr16
cmp
lret
mov
jmp
lods
adc
dec
xchg
xchg
sti
xchg
stos
outsl
adc
insb
pop
notb
adc
jge
daa
and
sbb
lods
push
shll
jns
in
scas
shlb
loopne
mov
pop
rorl
loopne
mov
bound
out
out
sbb
jnp
and
outsl
xchg
sahf
aad
out
pop
outsb
bound
and
mov
jge
in
subb
add
cmp
test
or
fnstsw
sub
mov
xchg
fwait
popa
adc
ret
in
pop
sbb
add
mov
xchg
xchg
stos
xlat
adc
jecxz
dec
aas
aad
aas
in
push
sub
fs
sub
movsb
movsb
hlt
jl
or
push
jmp
pop
jo
mov
out
les
loopne
ret
rorl
cmpsl
sbb
jp
pusha
stos
clc
pop
mov
jp
stos
insb
int
jp
push
xchg
xchg
mov
ret
repnz
inc
or
fsubrl
ftst
in
cmp
push
or
cmp
gs
push
popa
or
xchg
cmp
cmp
in
adc
sarb
and
sub
jo
insb
jo
pushl
fbld
mov
arpl
daa
lock
stos
sub
ja
std
cmp
jns
pop
or
enter
imul
cmp
repz
dec
outsl
in
imul
data16
les
ds
xchg
mov
fnsave
outsl
in
clc
popa
loope
dec
push
dec
inc
cli
sbb
or
and
inc
das
in
fmul
mov
pusha
outsl
mov
jb
aam
or
mov
test
imul
pop
mov
add
pop
leave
add
in
push
inc
sbb
idivb
call
jo
lahf
fdivrs
add
jmp
cld
and
and
stos
movsb
pop
in
ljmp
pop
loope
dec
sbb
inc
push
in
out
pushf
jg
int
imul
bound
cmp
out
jp
adc
cmpsb
into
pop
insl
add
cwtl
stos
or
mov
and
cwtl
fmulp
or
jl
fwait
lock
cmp
test
jbe
lds
loope
sub
sbb
lods
movsb
cmp
ret
sbb
jnp
popf
adc
push
lret
jb
daa
mov
pop
add
xor
inc
pop
mov
mov
rorb
imul
in
push
loop
lcall
and
scas
pop
mov
dec
ljmp
pop
int3
mov
inc
sahf
out
add
adc
jo
and
cli
pushf
enter
hlt
push
out
add
jb
push
xchg
aad
xchg
mov
jne
int3
sahf
out
cwtl
xchg
fwait
adc
ljmp
xchg
mov
push
or
jl
jg
orb
cmpsb
xor
or
into
xor
push
mov
nop
out
inc
and
pop
mov
cmp
push
inc
sahf
sbb
shl
ss
jns
loope
cltd
adc
push
and
mov
mov
loop
in
lcall
pop
dec
add
nop
push
sub
pop
sbb
pusha
lods
enter
sbb
sbb
fs
gs
mov
xchg
movsb
xchg
imul
fidivrl
mov
leave
push
xchg
out
lods
loop
loopne
xor
notl
ss
adc
pop
cmp
or
push
repnz
inc
fisubrs
push
jmp
rorl
sub
ja
shrb
addl
or
je
lret
pop
pop
push
aaa
mov
sarl
adc
popf
dec
mov
sets
push
cli
adc
cmp
jmp
ljmp
das
mov
xor
loop
rcl
jecxz
jecxz
aad
or
ljmp
mov
hlt
arpl
jmp
fwait
scas
mov
pop
out
mov
and
and
cltd
adc
inc
dec
xchg
repnz
stos
insl
mov
mov
inc
les
xchg
push
call
mov
in
adc
dec
xchg
lock
loop
rolb
lds
icebp
and
push
js
push
cs
stos
cmc
and
jo
xor
mov
fldln2
mov
adc
cwtl
and
scas
and
mov
xor
add
or
ds
insb
mov
sarl
rcll
addb
pop
sti
push
sub
out
ret
pop
cmc
jo
mov
out
xor
std
dec
xor
cmp
mov
jp
clc
jp
pop
sti
aad
addb
jb
fs
jmp
mov
jge
imul
in
dec
sbb
out
mov
in
xchg
cs
icebp
cwtl
add
lods
stos
xor
jp
pop
fistpll
call
cmpsb
ret
loop
mov
mov
ljmp
sbb
mov
dec
imul
lcall
adc
xchg
xchg
in
shl
and
jns
loopne
mov
pop
xor
sbb
jne
in
xchg
idiv
add
dec
xchg
and
arpl
fbstp
es
out
sub
jmp
nop
mov
nop
mov
rolb
mov
jecxz
rorl
push
pop
cld
mov
cmp
enter
adc
daa
js
pop
xchg
mov
scas
cmp
nop
cli
insl
push
iret
cwtl
dec
cwtl
popf
scas
fdivrs
add
push
inc
jo
dec
mov
scas
xlat
inc
stos
js
stos
xor
clc
rep
and
mov
cmc
mov
cs
insb
jecxz
pop
push
jmp
cli
clc
scas
loopne
popa
mov
and
or
push
cmc
mov
xchg
clc
les
imul
arpl
repnz
lahf
out
push
pushf
fidivrl
mov
cli
stc
sbb
out
cmp
pop
loope
ret
fildll
call
sbb
jne
aam
add
popa
pop
xor
mov
and
sbb
fbstp
ja
and
mov
ficoms
dec
mov
fucomp
in
cli
sbb
out
insl
and
ljmp
in
lret
sub
cmpsl
rorl
cli
cltd
mov
lea
inc
jecxz
adc
sarl
sub
xchg
sbb
fiadds
sub
push
es
cmp
xor
lds
scas
repz
scas
sahf
pop
imul
in
int3
hlt
in
nop
mov
push
dec
and
sarl
push
mov
mov
xchg
adc
bound
shlb
sub
call
sahf
stos
sbb
push
dec
ljmp
mov
fisubs
mov
jbe
adc
inc
push
mov
loop
sub
aaa
fistps
lret
adc
or
fs
lock
pop
xor
xlat
pop
clc
in
jp
pop
push
dec
sub
mov
js
inc
fldt
pop
in
cld
fsubs
call
push
push
mov
fldln2
jmp
sbb
insb
mov
push
mov
sbb
fnstcw
sahf
inc
jl
dec
lahf
cmp
push
aas
push
pop
sub
and
inc
mov
sub
add
xchg
lods
out
and
mov
inc
mov
imulb
jmp
xor
pmulhuw
sub
inc
sbb
in
loopne
movsb
scas
adc
aad
neg
in
push
or
xchg
push
xor
add
repnz
mov
ds
jp
mov
inc
data16
sbb
dec
or
jp
bnd
push
dec
cmp
imul
inc
and
jnp
or
cwtl
ss
lahf
push
cmc
push
and
jp
sti
cmp
pop
add
icebp
xchg
loop
lods
aam
ljmp
ljmp
cltd
inc
adc
dec
jle
les
lods
shr
ret
adc
dec
popa
pop
ret
cmp
scas
fsubrp
fwait
aaa
aad
cmp
mov
mov
daa
cmp
lret
es
xor
cli
fistps
pop
xor
push
repz
jbe
das
pop
cmp
icebp
fsubrs
push
sbb
sbbb
cmp
or
loope
or
dec
cli
and
and
loopne
insb
dec
mov
scas
xchg
stos
add
and
nop
xor
cmp
shl
cmc
push
sub
ljmp
pop
lock
scas
lods
mov
pop
rcrb
inc
add
out
repnz
in
dec
mov
lahf
out
dec
sbb
push
out
in
cwtl
out
and
ror
add
xchg
mov
push
jp
push
inc
in
add
push
jo
rcll
and
mov
xchg
jle
das
fcompl
xlat
mov
sbb
xor
and
pop
push
dec
and
xchg
pop
sbb
mov
sbb
sub
clc
not
test
cmc
mov
outsb
push
mov
jbe
ficoms
and
data16
jbe
fists
mov
inc
pop
dec
or
cltd
scas
push
out
mov
leave
popa
aas
ret
fdivrl
cmp
js
repnz
ljmp
inc
dec
lea
sub
fcmovbe
test
jnp
cmc
dec
sbb
jb
pop
clc
cli
xchg
pop
mov
push
jp
sbb
bound
nop
les
sub
add
xchg
mov
lea
fistpll
add
out
add
mov
mov
sub
sub
dec
in
pop
lock
aam
js
sub
inc
pop
loope
imul
addb
scas
xchg
push
popa
mov
insb
cwtl
scas
pop
lret
pusha
call
mov
and
ret
js
dec
push
bound
loope
mov
pop
mov
pop
lret
rorl
push
pusha
push
jecxz
arpl
or
inc
cmc
cwtl
sub
orb
and
aad
mov
hlt
lahf
sbb
stc
nop
jle
pop
pop
mov
cli
mov
add
mov
or
jne
pop
add
push
ss
push
jge
mov
xor
add
mov
lret
rcrb
insb
cwtl
pusha
idivb
xchg
pop
jns
jmp
bound
push
iret
cwtl
ljmp
pop
jo
inc
add
push
iret
or
push
pushf
pop
imul
sbb
mov
shl
aam
mov
and
xlat
mov
pop
mov
dec
and
inc
xlat
aas
dec
push
imul
rcl
push
cli
pop
nop
jnp
sub
cmpsb
jl
aaa
mov
ljmp
outsl
enter
scas
sub
ljmp
cmp
sub
sub
shl
push
fstps
int3
jo
push
mov
fwait
enter
imul
loope
pushf
pop
sbb
js
mov
pop
aad
repz
loope
push
xchg
mov
hlt
in
out
les
sbb
mov
and
cld
out
sbbb
les
repnz
cli
imul
xor
lret
xchg
sbb
ret
fucomip
addb
bound
or
jmp
inc
add
and
push
cmp
sbb
shrb
xor
mov
repz
jns
ret
nop
add
loop
push
cmc
inc
push
bound
jb
jle
sahf
sub
mov
pop
or
test
or
pushf
or
sbbb
repz
cmpsb
pop
mov
or
imul
lods
iret
mov
lret
mov
pop
or
lret
pop
lret
and
xchg
pop
pop
es
push
dec
jp
jae
sub
out
subl
cmc
jbe
stos
hlt
xor
repz
push
loop
lret
dec
jbe
mov
stc
mov
sbb
mov
repnz
jg
mov
jp
mov
add
mov
repnz
ljmp
add
jne
andb
test
js
jmp
mov
movntq
out
out
aas
add
mov
shrb
cld
fnsave
sbb
sub
lods
mov
cmp
xchg
ffreep
jge
int3
loop
xchg
jae
repnz
cwtl
js
imul
in
mov
cmp
and
jl
out
xchg
sub
push
pushl
lret
mov
sbb
mov
out
popf
lret
mov
cmc
stos
ja
dec
sbb
add
sub
stos
popa
jmp
xorb
xor
lret
lret
dec
arpl
dec
dec
scas
mov
add
pop
cmp
nop
xchg
cmp
lds
cmp
scas
or
pushl
sti
std
xchg
add
sti
enter
xchg
insl
std
sbb
aas
adc
rclb
dec
std
in
dec
or
pop
add
dec
adc
cmp
mov
add
js
insl
pop
daa
pushf
pop
outsb
jbe
inc
dec
in
dec
lea
in
inc
push
addr16
mov
in
adc
bnd
jl
imul
test
cs
loop
fxch
inc
lock
stos
cltd
add
das
ljmp
imul
gs
stos
bound
lds
inc
or
bnd
lahf
mov
push
jmp
sub
pop
ljmp
lds
lcall
cs
cmc
adc
xchg
imul
in
insb
les
in
outsb
ret
cmp
add
jp
faddl
dec
add
dec
cmp
lea
xlat
xchg
dec
or
mov
pop
out
xor
jne
adc
pop
mov
xor
adcl
push
sub
imul
jg
mov
inc
pop
ljmp
dec
sbb
stos
lret
adc
loopne
sti
push
test
stos
in
mov
inc
mov
push
and
flds
and
mul
je
pop
pushf
jl
cmc
sbb
cwtl
sbb
imul
push
mov
sub
push
lcall
lret
out
imul
mov
adc
call
mov
or
loop
ret
push
jb
ljmp
lahf
push
aam
addr16
fbstp
push
shrl
xchg
xchg
pop
pop
mov
add
inc
into
and
pushf
les
mov
mov
sbb
push
mov
sti
je
cmp
jne
or
fwait
mov
cltd
mov
pop
out
mov
les
sub
mov
nop
shrl
dec
ss
jle
jb
cmp
icebp
mov
jne
outsl
xor
insl
sub
pop
and
xorb
out
dec
cmp
es
mov
mov
call
dec
cmp
mov
js
xlat
and
cmp
cmp
in
data16
hlt
aaa
mov
push
sbb
fucomip
or
repnz
push
push
out
add
arpl
push
jo
ret
mull
iret
mov
std
imul
insl
out
repnz
mov
into
pop
popa
bound
fwait
xchg
call
stos
mov
or
popa
cli
fnsave
dec
lret
pop
jbe
aad
repz
clc
addr16
ret
aad
sahf
xor
lds
je
mov
lahf
pop
or
stos
popf
mov
icebp
out
std
mov
inc
mov
ret
shll
mov
add
mov
fnstenv
fcoms
jns
test
dec
pop
mov
xor
mov
call
dec
adc
in
ljmp
in
jge
rcl
cmp
out
mov
lock
mov
iret
les
push
sbb
xchg
mov
addb
mov
jp
jp
pop
inc
jecxz
dec
rcr
or
sub
hlt
fstp
cmp
cli
stos
xor
imul
push
out
push
pop
jae
pushf
adc
xchg
push
sub
jb
and
stos
xor
xchg
insb
popf
xchg
and
mov
mov
add
pop
mov
sub
dec
xlat
imul
and
test
xchg
jnp
add
mov
gs
dec
bound
or
mov
cli
out
in
sti
xchg
aam
out
rclb
add
inc
fsubr
fisttps
cld
cs
push
jp
lock
js
loop
jg
outsl
jge
popa
dec
pop
sbb
ljmp
cmp
mov
sbb
xchg
push
push
cli
ljmp
sub
inc
mov
enter
cld
mov
push
flds
push
jns
mov
nop
gs
sub
pop
or
cmp
xor
mov
inc
cmc
mov
nop
dec
cmp
mov
push
jo
cld
test
or
and
or
jle
dec
dec
sub
loope
ljmp
mov
daa
fwait
pop
dec
aad
mov
cmp
arpl
fs
shlb
inc
xor
dec
repnz
adc
sub
and
cmc
xor
out
sbb
xchg
arpl
cli
cmpl
stos
cmp
outsl
mov
mov
mov
mov
inc
cltd
pop
mov
and
enter
stos
mov
push
adc
xchg
pop
and
pop
jno
in
sub
test
incb
scas
pop
or
dec
movsb
cld
adc
out
lods
montmul
cmpsb
inc
stos
imul
stos
icebp
push
mov
popf
sti
clc
add
xor
cmp
out
inc
bnd
pop
push
aas
jp
dec
std
add
loopne
repnz
es
sbbb
test
scas
call
cltd
outsl
jno
out
push
std
jecxz
fisttpl
lcall
orb
mov
data16
jb
xor
call
adc
xchg
cmp
dec
xchg
and
or
bound
cli
fsubrs
ljmp
fstpl
into
dec
mov
xchg
jp
flds
psrlq
data16
pop
aaa
and
push
std
je
inc
jbe
jbe
sub
cmp
dec
stos
sub
sbb
xlat
mul
push
xchg
loopne
inc
addr16
fstl
popa
mov
flds
push
pop
clc
xchg
aam
inc
insb
cwtl
loop
dec
add
jae
xchg
fsts
mov
inc
cmp
pop
mov
dec
pop
adc
paddsb
and
jle
insb
leave
scas
popf
insb
scas
push
ss
dec
jecxz
call
push
xchg
ret
scas
and
xlat
js
cmp
mov
ss
nop
push
outsl
xchg
popf
ja
scas
add
std
mov
ljmp
cli
lcall
clc
mull
sbb
xorl
fsubl
stos
lods
mov
mov
pop
sub
call
mov
pop
sub
loopne
orps
mov
sbb
pop
xor
iret
sub
sbb
cmp
mov
dec
aaa
pusha
dec
movsb
mov
sbb
xlat
lods
out
lods
lods
xchg
xchg
xchg
jmp
enter
lock
jno
or
icebp
and
imul
and
xor
mov
cli
mov
add
pop
push
or
jno
jmp
test
popa
add
add
mov
mov
lods
addr16
mov
decb
in
add
pop
cmpsl
insb
xor
es
fs
imul
pop
rep
pop
sub
call
fcmovbe
mov
loop
adc
xchg
fiaddl
or
or
subb
out
cli
pop
pushf
xor
jp
pop
add
dec
sub
mov
leave
outsl
and
cmpsb
out
sub
cltd
or
sub
and
ljmp
adc
dec
jno
pop
xchg
loope
xchg
sub
rol
push
incb
pop
xchg
lea
repz
lock
out
lcall
pop
inc
mov
cwtl
xor
call
xchg
ss
mov
scas
add
or
enter
xchg
iret
xchg
loopne
cmp
pop
shr
mov
shrl
cli
clc
in
in
dec
xor
lahf
je
shll
pop
enter
push
fs
scas
cmp
enter
stos
inc
pop
xchg
push
js
pop
scas
add
jnp
sbb
scas
dec
dec
les
test
dec
cmp
mov
jns
lret
pop
inc
lock
xchg
data16
dec
stos
mov
stc
je,pn
into
pop
loop
fimuls
inc
enter
jne
jmp
inc
cmp
pop
divb
in
inc
lods
aaa
dec
out
scas
mov
scas
mov
dec
push
insb
test
test
mov
pop
cli
dec
lret
fwait
test
pusha
pop
sub
jne
push
lods
push
aam
jge
test
push
mov
mov
sbb
cmc
out
ret
std
mov
out
lahf
mov
movb
adc
fs
mov
pop
jne
adc
pop
repz
jp
imul
cmc
data16
sub
pop
lds
add
mov
out
stos
jne
xchg
movsl
cli
call
mov
pop
pop
scas
gs
test
pop
cmc
call
fwait
popf
xor
stos
fmuls
loop
shl
jns
add
jnp
xor
cmp
cld
aas
sub
ficoml
jl
sahf
lds
rol
pop
inc
pop
cmp
dec
mov
leave
out
mov
cmp
jns
lock
push
fs
mov
pop
sub
jmp
mov
sbb
insl
xor
mov
or
dec
ficompl
pop
and
inc
cli
lock
pop
sti
dec
in
and
or
mov
scas
ret
sub
les
hlt
insb
je
repz
xchg
jg
cltd
add
lret
pop
pusha
pop
sbb
popf
fiaddl
push
je
ret
pop
push
fsubrp
lods
push
rcrl
nop
arpl
imul
sbb
int
add
push
xor
pop
into
dec
fiadds
mov
adc
and
mov
loop
and
rorb
cmp
xor
mov
sbb
fsubrl
push
and
data16
dec
pop
ljmp
iret
enter
inc
fs
loopne
sbbb
lret
out
loope
fbstp
in
lret
dec
cmp
jo
sub
dec
fiaddl
loopne
aam
in
mov
and
mov
push
std
in
sahf
dec
jp
xchg
cwtl
xorl
lret
ss
push
jecxz
jecxz
inc
adc
lret
popa
pop
subb
bound
cmp
pop
or
adc
test
clc
push
faddl
fbld
dec
fs
mov
xor
jb
sbb
adc
adc
fisubrs
ret
or
movsl
inc
and
push
mov
and
adcl
xor
rorl
cli
sbb
daa
roll
imul
cmp
inc
outsl
or
jp
nop
adc
in
dec
add
xchg
fbld
inc
jmp
insl
sub
adc
ljmp
nop
popa
push
movsb
dec
and
dec
stos
and
xchg
add
call
stos
inc
fbld
xchg
sbb
in
jno
push
daa
push
clc
in
pop
cli
sbb
test
jo
and
nop
fstps
jnp
or
jge
inc
mov
ss
cmp
xchg
ljmp
xchg
dec
lock
jb
jne
js
jle
in
mov
sbb
daa
or
outsb
je
jecxz
push
or
mov
sbb
xor
pop
pop
fnstenv
cli
decl
and
jp
and
sbb
stos
xor
fistl
les
mov
jecxz
cmp
mov
loopne
cld
cwtl
scas
out
sti
cld
adc
cmp
cs
insl
sti
fcompl
clc
sti
les
lock
lock
dec
js
ljmp
sbb
or
dec
neg
leave
add
hlt
ja
test
add
subb
push
pop
insl
push
push
dec
outsb
inc
dec
adc
pushf
dec
lret
sbb
add
aam
negb
mov
cwtl
lahf
popa
mov
sbb
push
xor
mov
incl
std
scas
sbb
lret
imul
into
into
idiv
in
add
push
insl
jl
bound
adc
xor
gs
in
leave
cmpsl
mov
cmpsb
imul
sbb
mov
dec
lret
jnp
sub
daa
test
cmp
ds
xlat
iret
dec
mov
pop
cmp
ret
mov
xchg
add
scas
jg
outsb
push
arpl
fisttps
hlt
push
mov
aaa
cwtl
imul
mov
mov
rcrl
rolb
cwtl
cmc
sti
sub
in
pop
ljmp
sahf
dec
jnp
push
mov
push
cmp
dec
fisubrl
adc
sbb
xor
and
out
mov
cld
pop
cmp
jp
xchg
or
imul
xlat
les
js
arpl
sub
scas
lret
or
sub
test
repnz
insb
cmc
mulb
ret
lret
xchg
push
jae
ss
shl
aam
popa
jmp
xchg
inc
nop
jbe
cmp
jl
xor
xorb
stos
mov
les
dec
xchg
loop
repnz
mov
iret
aas
push
and
jns
int3
jge
push
scas
jbe
xchg
subb
push
cld
stos
xchg
mov
shr
xchg
test
lods
sub
out
in
stos
insb
fldenv
push
dec
mov
sbb
xchg
sti
repnz
pop
shl
jge
insl
loopne
mov
pop
jp
adc
jae
insl
mov
cmp
sbb
cmp
mov
out
mov
fdivrp
pushf
jecxz
jle
xor
test
lods
out
sti
push
lock
mov
pop
mov
les
add
xor
nop
pop
inc
cmp
push
pop
push
jg
jo
out
adc
imull
cmp
dec
push
xor
jecxz
push
push
rorb
hlt
int
ss
add
jbe
repnz
push
push
and
stos
aaa
mov
pop
insb
mov
mov
jle
gs
js
mov
ljmp
outsb
push
cs
or
sbb
loop
out
je
lahf
mov
shl
adc
les
and
adc
fsubs
push
sub
pop
rcrl
add
insl
push
imul
jbe
sub
stos
inc
ja
testl
jg
add
sbb
jp
testb
rorl
push
jmp
mov
pop
bound
sub
sahf
mov
push
cmp
mov
pushl
popf
pop
mov
into
sti
pop
ds
push
adc
repnz
lock
notl
fldcw
mov
es
out
add
mov
dec
jp
sar
inc
jo
data16
in
inc
arpl
popa
bound
aad
rolb
add
subb
out
jnp
int
repnz
mov
xchg
inc
stos
je
sbb
fwait
mov
cli
cld
and
jecxz
in
add
shl
inc
mov
scas
cmp
lods
fildll
imulb
mov
sbb
aad
jo
sbb
arpl
cmpl
adc
ljmp
in
or
cwtl
into
sbb
pop
ror
fwait
das
out
pop
movb
inc
or
mov
mov
add
or
xor
std
mov
mov
xor
inc
cmp
ret
sahf
jle
jns
aad
shl
icebp
lret
cmp
out
mov
mov
aas
pop
xchg
fildll
mov
and
xchg
jno
mov
mov
in
js
incb
in
mov
jae
mov
cmpl
mull
mov
pop
out
imul
dec
dec
mov
pop
ret
mov
or
fdivrl
and
jbe
fadd
xchg
or
icebp
ret
mov
push
aas
xchg
cwtl
jno
lock
aas
dec
xchg
sub
push
inc
and
inc
push
movsl
xchg
dec
adcb
and
into
pusha
sub
or
pop
divl
iret
ljmp
xchg
arpl
adc
outsl
out
mov
sets
ja
cwtl
cltd
mov
scas
in
and
insb
push
inc
fldenv
scas
mov
and
xor
mov
xchg
mov
daa
push
sub
std
cmp
cld
scas
filds
movsb
dec
cwtl
xor
mov
lods
xchg
aam
xchg
push
jl
ret
cltd
out
cmp
dec
and
pop
dec
test
adc
sarl
and
nop
scas
imul
cmp
jno
pop
icebp
popa
nop
outsl
push
xchg
jbe
mov
mov
xchg
cmp
and
xchg
add
int
xor
test
das
inc
and
jg
in
jae
in
inc
push
sti
inc
push
stos
and
add
sub
in
out
movsb
push
mov
out
sub
mov
sub
mov
loope
lret
mul
mov
mov
nop
cmp
mov
je
jae
jp
loop
test
sbb
ljmp
aam
adc
jmp
and
xchg
push
push
pushf
mov
push
xchg
lahf
sub
sub
frstor
xchg
pop
adc
sub
cs
jbe
lcall
xor
test
xchg
sub
sbb
into
jecxz
sahf
imul
enter
ss
add
rorb
jle
ficoms
lds
sub
mov
and
xor
mov
push
loop
dec
out
and
xor
jp
jo
dec
dec
or
and
hlt
xchg
or
mov
mov
ljmp
fs
or
jo
add
out
xchg
out
movsl
faddl
inc
jae
out
ret
mov
sbb
push
pop
ret
sub
cmp
xor
cld
pop
dec
inc
or
push
push
mov
adc
push
mov
pusha
cld
lret
xchg
xor
fcoms
adcb
int
adc
jmp
xor
out
push
nop
cmp
arpl
fsubrl
sbbb
rdmsr
jecxz
cli
cmp
dec
orb
xchg
cli
fsts
push
xor
flds
pop
mov
push
and
imulb
adc
inc
pushf
push
xchg
negb
cmpl
jmp
dec
repz
add
jmp
jl
ljmp
sbb
xor
xor
xchg
xorb
cmp
mov
das
stc
call
ss
xor
adc
pop
jb
jl
inc
jne
jns
fstps
out
test
ja
push
xchg
in
lret
or
sbb
and
fdivrs
shr
shlb
pusha
loop
aaa
pop
lods
clc
and
push
icebp
jo
dec
mov
das
dec
push
xor
sbb
stos
bound
sbb
and
jle
cld
jmp
jne
in
jbe
jl
out
push
inc
std
sbb
or
or
and
mov
adc
int3
jmp
stos
fcoml
dec
sbb
fstl
cltd
inc
add
mov
cli
pop
xchg
or
insb
int3
call
cwtl
cmpsb
cmp
flds
or
nop
sbb
and
lock
push
lock
pop
push
ja
adc
push
dec
ficompl
mov
or
popf
cmp
push
mov
lea
nop
sub
xor
mov
pushf
scas
pop
or
dec
insl
ret
inc
mov
sbb
pop
es
std
pop
or
mov
push
mov
fldl
add
in
xchg
lret
add
or
ret
and
adc
into
pop
push
inc
mov
push
mov
sbb
push
xlat
and
sub
jecxz
sub
stos
sub
add
mov
arpl
not
jl
imul
into
dec
adcb
xor
fnstcw
insb
pushf
push
cmc
cmp
jp
mov
sbb
sub
xchg
jnp
ret
add
int3
in
mov
lret
adc
add
sar
lock
stos
mov
loopne
call
lock
sbb
jl
repz
in
es
sahf
xchg
std
ja
ret
into
ret
add
test
data16
cmp
int
push
les
push
loop
dec
lret
pop
sarb
or
clc
mov
jp
mov
out
cmp
push
aam
icebp
loop
and
fldcw
or
fstl
pop
pop
or
ljmp
lock
sbb
mov
sub
xlat
movsl
inc
iret
ljmp
adc
jge
pop
andb
ss
pusha
arpl
iret
addr16
call
cmp
inc
fsubl
mov
jns
push
flds
rorl
pop
inc
in
push
or
cmp
fcmovnu
loopne
mov
daa
adc
dec
repz
out
loopne
call
je
in
neg
push
push
in
jmp
int3
pop
repz
and
xlat
aad
dec
cli
dec
aas
mov
jae
pop
popa
xchg
mov
pop
xchg
and
ljmp
rolb
adc
sbb
jbe
sbb
sub
scas
mov
mov
outsb
or
repz
or
xchg
dec
bound
es
lock
add
in
mov
push
sbb
sub
jae
pop
cld
sti
cltd
pop
cmp
cs
sbb
ja
sub
lock
pop
clc
jmp
mov
push
push
xor
or
ss
ret
or
jo
pop
mov
dec
lahf
xchg
loope
lods
mov
subl
sbb
add
enter
call
fcomip
femms
add
out
xchg
aaa
or
out
out
imulb
push
lock
outsb
mov
push
in
out
scas
imulb
jge
add
mov
mov
jae
in
jmp
sub
sub
mov
fists
bound
sub
enter
jo
jl
iret
sbb
jle
ljmp
cmp
cmpsl
or
or
cld
in
in
scas
out
mov
dec
sti
orl
enter
xchg
enter
mov
std
mov
sub
xlat
sbb
add
pop
pop
push
rol
jmp
out
repz
jle
and
add
jle
inc
ret
std
std
into
out
aas
xlat
je
in
shrb
cwtl
xchg
mov
mov
pop
scas
in
sbb
xor
cmc
movsb
ret
lcall
hlt
outsb
sahf
sub
adc
push
mov
sahf
std
dec
std
call
push
mov
sbb
shrb
push
fdivrp
dec
loop
push
add
or
popf
xor
or
fistpll
sti
or
xor
xchg
push
data16
pop
jnp
cmp
fisttps
mov
and
int3
jecxz
sbb
repnz
jge
push
addr16
test
loopne
in
lods
sahf
mov
rcrb
mov
std
sbb
xlat
in
shl
add
aaa
push
lret
fstl
cs
lea
cmpsl
push
popa
test
es
push
ret
and
add
sti
shlb
or
and
jmp
popa
pushf
dec
push
mov
xor
sub
gs
adc
lahf
pop
and
pop
xor
xchg
sahf
cwtl
test
hlt
pop
mov
mulb
fsin
shl
es
mov
enter
popf
lcall
lock
mov
push
iret
rcrl
and
lods
mov
repnz
xor
inc
cmc
data16
testl
mov
xor
scas
out
pop
mov
sbb
lock
repnz
scas
insb
xor
out
out
mov
jle
testl
rcr
or
imul
push
shrl
and
enter
sub
lods
dec
jmp
add
pusha
cmp
mulb
or
xor
cmc
add
pop
test
add
ljmp
fs
push
lahf
cmp
and
call
jg
lahf
in
imul
push
adc
push
and
rcr
jo
sbb
cmp
dec
mov
pop
cs
lret
bound
pusha
sbb
dec
sub
outsb
ret
sbb
lea
ljmp
push
add
loop
pop
push
cmp
jae
ja
repz
loope
enter
stos
scas
sbb
mov
push
cli
jnp
sub
push
repnz
xlat
jmp
sbb
cli
lret
arpl
pop
push
outsb
cmp
and
repnz
pavgw
xor
shlb
outsb
xor
inc
icebp
mov
inc
lahf
nop
xlat
iret
push
mov
lret
or
sbb
sbb
mov
cmp
cwtl
pop
jae
ret
cmp
xchg
push
subl
jl
in
fcoms
cmp
leave
inc
xchg
xchg
xor
les
aad
jbe
sub
xlat
inc
cli
jecxz
push
shll
cltd
mov
jns
popf
pop
loopne
xor
xchg
adc
mov
mov
sbb
dec
lock
mov
adc
cld
add
call
loop
dec
out
ljmp
sar
ljmp
or
mov
repnz
arpl
and
sub
sub
cmp
xor
xor
sbb
out
lock
adc
dec
movl
push
ja
jnp
lret
pop
pushw
sbb
call
dec
lahf
in
sbb
lret
fistps
push
push
cwtl
mov
adc
push
into
repz
push
and
pop
shlb
inc
pop
add
out
lahf
xor
ljmp
xlat
and
xlat
loope
mov
repz
rorl
mov
and
ds
aas
mov
inc
dec
pop
ja
xlat
or
mov
mov
add
sub
out
cld
add
data16
mov
mov
inc
mov
jmp
add
loop
popa
lods
mov
dec
mov
push
repz
xor
std
pop
push
leave
rcrb
movsb
rorb
lea
mov
in
cmp
fstpl
data16
add
mov
pop
push
iret
idiv
into
mov
jmp
cmc
jle
mov
xchg
jge
cmp
xor
hlt
fildll
inc
sbb
imulb
cmp
mov
cmp
sahf
push
adc
in
ret
int3
xchg
sbb
cli
jne
pop
sub
fwait
test
dec
sbb
add
jp
arpl
pop
push
icebp
in
stos
fwait
pop
mov
mov
inc
lret
arpl
enter
cmp
mov
mov
mov
shlb
mov
push
shll
icebp
cmp
xlat
aaa
jmp
clc
mov
mov
or
push
shlb
push
mov
enter
nop
mov
mov
imulb
adc
jp
adc
and
lock
sbb
xchg
mov
cmp
and
loope
clc
cmpsl
mov
mov
ss
xchg
dec
in
jmp
push
jge
in
nop
stos
rcrl
clc
std
sub
rolb
sub
sub
sbb
out
mov
inc
jl
sub
out
or
mov
sub
outsb
jecxz
fidivl
cmc
cmp
jmp
and
add
mov
push
pop
and
bound
repz
aam
in
dec
push
and
les
push
and
push
sbb
fdivp
mov
pop
data16
std
adc
in
out
cs
outsb
popa
mov
clc
scas
dec
xchg
sbb
call
push
mov
jge
data16
adc
aam
cmp
dec
push
stos
ja
outsl
es
lret
test
out
mov
push
call
cmpsb
scas
jmp
or
scas
out
sbb
cmpsb
jp
push
pop
xor
pop
mov
xchg
xor
jno
icebp
jno
adc
lahf
gs
fwait
xchg
fdivrl
dec
xchg
cmc
andb
cmp
dec
sbb
add
add
adc
enter
addb
lods
or
xchg
push
ret
shr
stos
jmp
cmp
movl
rorl
adc
adc
jmp
mov
mov
add
in
xor
test
and
daa
ret
das
push
je
lret
mov
or
lods
std
nop
int3
ficompl
pop
xchg
mov
xor
testb
fsts
dec
push
jno
pusha
insl
cs
or
mov
mov
and
enter
jp
in
cmp
sbbl
mov
or
or
fists
push
pop
lret
mov
push
out
sbb
stos
mov
jmp
aas
std
imull
lcall
or
movd
xchg
ljmp
cmp
lods
decb
pop
in
sbb
pushf
stc
enter
adc
add
sbb
loop
push
pop
xor
dec
in
mov
dec
jg
call
scas
cmp
dec
push
sub
sbb
icebp
fwait
mov
sub
push
xchg
aad
xor
scas
call
pusha
orl
inc
cmp
test
insb
and
and
mov
push
lret
pop
jl
xor
enter
mov
mov
xor
cmp
mov
and
cli
push
or
pusha
and
xor
js
sub
sub
imull
mov
xor
add
stos
cmp
ljmp
jmp
dec
xchg
shrl
fmull
jne
lods
imul
mov
jp
fs
inc
inc
ret
add
daa
inc
add
adc
jns
cld
add
cmpsb
clc
inc
cmc
cmp
pop
pop
bound
dec
loop
test
xor
out
insl
out
mov
pop
popf
and
out
lock
insl
adc
or
pop
bnd
imul
ret
loop
negb
xor
jg
pop
lea
sbb
adc
or
popa
adc
or
or
ds
fnsave
insb
dec
arpl
sub
sub
or
stos
sub
les
mov
pop
mov
push
jb
pop
daa
xchg
ret
clc
jecxz
insb
bound
inc
cmpsl
mov
stos
push
or
and
mov
out
dec
dec
or
or
pop
cld
lods
and
sub
sub
xchg
ret
rorb
cli
inc
xchg
les
lret
sub
or
pop
sub
and
lcall
mov
fs
movsl
pop
dec
add
out
pop
pop
adc
sti
jle
je
test
mov
jb
adc
popf
loop
push
out
sbb
mov
repnz
ret
and
imul
icebp
enter
cmovp
ja
push
mov
sbb
xor
xchg
push
fimull
leave
mov
sbb
cmp
add
jnp
iret
cmc
ds
or
outsb
sbb
movsb
shl
or
sbb
or
cli
pop
dec
mov
mov
dec
aam
cli
dec
outsb
sbb
mov
pop
fsubp
push
mov
xchg
xor
insl
fnstsw
push
push
and
sbb
mov
push
dec
js
mov
xor
cltd
stos
mov
popf
sub
push
mov
cmpsl
xor
pop
and
sub
jp
inc
or
scas
sub
and
sbb
push
mov
pop
and
jb
sbb
mov
fistpll
pop
sbb
std
jbe
test
and
scas
cmp
mov
push
js
push
sbb
or
and
das
cmc
sub
stos
jno
arpl
cwtl
icebp
add
test
push
dec
shrl
jns
xor
xchg
gs
in
xchg
lret
sti
out
sarl
ficoms
stos
pop
add
push
and
pop
mov
pop
lods
push
ffreep
sbb
out
xor
xchg
mov
add
xlat
out
xor
mov
scas
repnz
clc
lock
rolb
out
xchg
nop
sub
int3
call
fmul
fnstcw
cld
stos
addb
arpl
fstp
stos
xchg
lret
or
mov
or
out
cmp
test
jnp
outsb
negl
in
cld
outsl
add
dec
fwait
pop
rcrb
ret
loopne
lcall
dec
sbb
adc
mov
jmp
dec
fdivrl
xorb
dec
mov
adc
jnp
mov
mov
ret
or
in
or
and
add
test
push
lods
ljmp
adc
int
xor
ds
sub
sub
xchg
jmp
loopne
int3
or
mov
lret
and
int
dec
adc
clc
or
xor
and
loop
test
not
lock
arpl
adc
lock
mov
test
loopne
cs
add
inc
inc
mov
lods
repnz
inc
sbb
in
or
mov
stos
adc
inc
sar
sbb
jg
xor
cmp
adc
or
sbb
call
jbe
in
xchg
pushf
outsb
fadd
sar
sarb
pop
jp
stos
sbb
cmp
jg
cs
mov
mov
fdiv
sbb
cli
pop
lock
fstpl
loope
fwait
push
jl
popf
mov
mov
mov
mov
ljmp
in
lea
cmpsb
icebp
loop
ljmp
scas
mov
mov
nop
fsubs
xchg
lret
sarb
out
pop
in
and
bound
jnp
subl
jb
fldln2
repz
and
shrb
ds
addr16
xchg
cmpsb
xchg
or
fnop
in
mov
push
std
cli
pop
add
ljmp
lahf
or
cmp
andb
pop
out
push
loopne
and
loop
cmp
cli
js
in
imul
in
mov
xchg
pop
adc
cmp
out
shr
push
jmp
loope
aaa
decb
jl
and
shr
adc
sbb
stos
pop
mov
imul
das
dec
cwtl
cli
and
imul
sahf
out
in
or
loopne
ret
jp
adc
in
loop
dec
sahf
jo
mov
sarl
popfw
jno
repnz
cmpsl
js
and
push
ret
cmc
jmp
data16
push
mov
sar
ret
dec
ficoml
mov
fcompl
out
dec
call
mov
ds
pop
ret
xor
stos
adc
inc
dec
add
jae
jmp
or
cs
cltd
cmpb
stc
cld
lods
aas
jl
int
xor
sub
mov
aam
stos
repnz
call
in
sbb
nop
scas
mov
and
test
fcoml
ljmp
pop
push
lret
push
fsubrl
xor
pop
sti
cli
out
sbb
push
dec
les
push
inc
out
loopne
faddp
ret
push
push
dec
ret
adc
stos
sub
fbld
mov
push
and
mov
out
sar
jb
fildll
jmp
jp
mov
pop
and
pop
std
repz
ss
data16
out
out
push
cmp
in
inc
ss
fst
mov
cmc
frstor
mov
subl
push
and
or
or
aam
enter
stos
aaa
test
int3
cmp
dec
mov
mov
sbb
push
add
xchg
mov
or
push
sbb
pop
jmp
mov
cmpsl
inc
mov
sub
and
in
sbbb
cmc
rcrb
ljmp
shr
mov
jnp
les
adc
sahf
adc
or
repz
sub
stos
push
clc
outsb
loop
les
jns
cld
sub
mov
inc
dec
les
add
xchg
cmp
je
std
add
mov
mov
sbb
and
mov
lods
adc
sahf
push
push
hlt
xor
cli
adc
jp
lcall
adc
ds
lds
cld
in
popf
shlb
push
mov
adc
in
dec
xchg
hlt
cltd
dec
push
pop
xchg
fimuls
pop
push
pop
out
cli
inc
xchg
or
pop
sub
outsl
iret
sbb
test
es
test
sub
pop
lret
and
sbb
sbb
cltd
xor
outsb
ljmp
inc
inc
mov
push
mov
lret
std
repnz
in
stos
dec
hlt
lret
pusha
sarb
pop
push
lods
enter
push
ficompl
stos
stos
jnp
xchg
jmp
repnz
ljmp
cmp
ds
lcall
scas
repnz
int
icebp
outsl
fldl
fucomip
js
cld
lahf
pop
loopne
aam
dec
jecxz
cmpsl
sbb
and
out
xchg
pop
add
cld
leave
frstor
lods
ret
jo
xchg
loop
and
xchg
sub
mov
mov
jnp
out
pop
push
sti
je
les
in
mov
dec
dec
or
sub
inc
add
mov
call
xchg
lret
adc
pop
hlt
xlat
sti
add
in
push
mov
imul
jo
mov
mov
adc
and
lcall
add
sbb
mov
bnd
mov
sbb
cmp
xchg
fdivrs
fs
and
push
adc
hlt
mov
sub
add
stos
dec
pusha
mov
xchg
mov
xchg
out
fdivl
or
addr16
mov
add
sbbl
push
fs
cs
call
xor
test
jge
fsubrs
jecxz
test
sub
xchg
arpl
add
ds
repnz
and
dec
mov
sbb
fsubr
aam
pop
jae
xor
lret
hlt
cld
clc
jnp
int3
mov
test
in
shl
dec
shll
push
les
test
xchg
xchg
adc
sahf
int3
xchg
fidivs
aad
and
out
or
mov
out
test
jecxz
adc
push
dec
imul
in
imul
dec
in
loop
and
mov
xchg
repnz
fcmovu
jo
call
and
lock
xchg
mov
inc
or
jp
or
std
pop
xchg
xchg
fwait
sbb
nop
mulb
inc
sahf
fstps
inc
mov
dec
mov
cmpsl
adc
in
and
adc
cmp
fiaddl
pop
pop
cs
ss
sub
imul
cli
rcrb
insl
push
add
iret
sub
lcall
or
pushf
insl
scas
sub
sbb
hlt
repz
in
sub
imul
xlat
loop
sub
std
add
mov
jmp
sbbb
jecxz
mov
sbbl
mov
arpl
pop
or
mov
and
sub
dec
mov
mov
std
sbb
js
sti
call
test
push
cmc
in
fwait
into
jecxz
xchg
mov
scas
insb
add
ffreep
dec
add
dec
dec
ret
gs
cmp
push
mov
xlat
and
push
sbb
repz
mov
push
jp
addr16
mov
cmp
push
loop
bound
sbb
sub
inc
stos
pop
pushf
andb
incb
cmp
fmul
call
out
ret
xchg
jno
fdivl
or
in
dec
loop
cmp
sub
les
flds
pop
stc
xor
or
jb
cmpsb
cmp
in
cmp
or
push
shrb
jnp
add
pop
loopne
push
ret
xor
repz
cld
adc
mov
and
and
dec
arpl
loopne
jnp
mov
loop
pop
frstor
mov
mov
ds
imull
add
cli
lret
fbstp
stos
cmpsb
or
pop
popa
add
lock
mov
jmp
pop
xlat
sbb
mov
loopne
flds
test
xchg
mov
jmp
mov
mov
loop
or
or
cmpsb
inc
in
mov
or
fcoms
sub
pop
std
push
fnstsw
icebp
jecxz
loop
mov
rorl
lcall
push
dec
test
in
mov
sbb
fucomip
sub
inc
das
jecxz
sbb
test
insb
les
pop
bound
sbb
out
mov
pop
cltd
dec
fs
push
push
xchg
movsl
mov
aam
and
scas
fdivrp
dec
push
xchg
icebp
dec
xchg
lahf
lods
cmp
jge
stos
cmpl
and
or
mov
adc
mov
sbb
lods
lret
cmpsb
scas
push
mov
mov
mov
test
js
sbb
add
mov
sub
cs
jp
push
fnstcw
sbb
movsb
imul
or
inc
dec
mov
imul
in
adc
inc
sub
fidivl
push
js
and
fsubs
imul
mov
inc
mov
mov
test
lock
sub
sahf
negl
mov
pop
shl
inc
andb
and
sbb
icebp
push
push
dec
cmp
mov
cmp
sbb
fnsave
enter
lock
mov
xchg
and
outsb
lock
std
jl
adc
pop
add
pop
aas
jle
dec
push
add
dec
jnp
in
cmpsl
je
pop
xchg
popa
inc
adc
outsl
add
cmp
stc
dec
loopne
cwtl
repnz
jmp
sar
pop
pop
xchg
pop
jo
and
fiaddl
pop
fimull
mov
push
adc
cmp
movsb
sub
sub
and
dec
pop
leavew
cmpsb
jne
mov
ja
adc
imul
xor
cld
stos
cltd
pop
cli
les
data16
adc
insb
insl
in
into
popa
xchg
mov
arpl
in
lods
jl
cmp
sub
stos
lret
rol
cwtl
inc
fnstcw
decb
add
std
push
xchg
jle
mov
lds
sub
or
cmp
jp
in
fnstcw
sbb
jecxz
add
icebp
stos
lods
mov
and
or
ds
inc
and
and
mov
inc
popf
sbb
cmp
out
push
lret
mov
out
jne
adc
jp
lods
xchg
nop
sbb
stc
ja
dec
adc
mov
pop
lock
je
cwtl
nop
xor
xchg
scas
adc
and
push
call
or
aas
jmp
cltd
fmulp
mov
cltd
sti
jns
stos
and
lcall
lss
cmc
in
xor
cmp
imul
cmp
stos
mov
aas
xchg
xor
and
in
dec
aas
or
or
inc
pop
jb
dec
out
lret
sbb
pop
cmc
shrb
inc
in
xlat
ret
pusha
loopne
inc
repnz
xor
xchg
push
inc
xor
cli
adc
fsubl
adc
mov
stos
in
ret
dec
push
xor
int
fimuls
cmc
insb
or
sbb
and
add
dec
es
mov
iret
push
clc
mov
mov
lret
pop
fsubrs
mov
ja
inc
and
std
loope
sub
dec
stos
or
test
mov
fcmovu
dec
mov
les
push
stos
jae
stos
lea
sbb
cltd
fdivrs
ucomiss
flds
shll
push
sub
dec
mov
ret
stos
arpl
or
or
push
add
shl
out
mov
sub
pop
dec
or
cmp
out
or
pop
dec
lods
adc
ret
mov
ljmp
fmull
adc
jnp
lods
inc
into
cmp
mov
mov
loop
sti
adc
loope
xor
mov
cli
cld
enter
hlt
mov
cmp
bound
testb
mov
cwtl
std
dec
adc
mov
fsub
dec
lret
je
data16
es
in
shl
repnz
js
mov
test
gs
cmp
out
in
stos
roll
fnstcw
or
jb
mov
mov
ficoml
push
pushf
sub
cli
stos
lcall
xchg
ljmp
pushf
fwait
and
sub
mov
subb
test
push
aam
mov
inc
mov
shrl
outsb
push
inc
sub
mov
fwait
and
adc
inc
fbstp
sahf
test
cltd
pop
mov
lods
lods
fcmovb
in
xchg
mov
and
int
rcrl
cmp
fimuls
xor
xor
sbb
insb
sub
dec
ds
les
pop
adc
adc
inc
and
or
add
ljmp
sub
xchg
dec
pop
adc
icebp
aad
or
les
adc
faddl
adc
pop
in
pop
scas
into
jmp
vaddsubps
in
sti
or
mov
add
push
jg
rorl
lock
jb
sub
pop
mov
outsb
out
mov
jp
push
loope
stos
ret
adc
ret
rcll
mov
out
jnp
mov
mov
mov
cwtl
pop
jg
test
pop
js
shrd
xor
addb
mov
push
rcrb
xchg
std
dec
pop
repz
cmpb
jnp
repnz
cmp
push
ret
scas
imul
jecxz
stos
fmul
sbb
in
mov
lods
stc
daa
xlat
jecxz
int
iret
loop
cmp
leave
lea
loopne
aad
in
jmp
insl
imul
cmp
pop
call
cld
cli
repnz
loope
repnz
out
ret
xor
out
sub
cmp
cwtl
popa
adc
icebp
mov
and
sbb
pop
test
xorl
adc
pop
into
xchg
mov
mov
pop
addr16
pop
push
loop
push
mov
jecxz
lock
dec
add
dec
lret
clc
jp
xchg
fstpl
dec
jno
push
js
shll
mov
cmp
sub
mov
mov
inc
mov
jno
xchg
out
mov
stos
mov
in
dec
jae
fidivs
outsl
int
mov
loope
sbb
mov
inc
pop
call
jecxz
add
cmc
sti
inc
out
mov
cmp
ret
inc
cltd
add
or
cltd
sub
sti
test
sbb
popa
cmc
xchg
adc
pop
mov
repz
mov
jo
imul
xchg
sbb
sub
loopne
and
fsubrs
mulb
mov
nop
fs
or
loopne
in
sub
int3
dec
or
icebp
and
or
call
mov
dec
mov
insb
sahf
in
ss
mov
repz
jg
std
call
inc
lahf
arpl
repnz
arpl
ds
ss
mov
and
idivb
std
enter
mov
imul
adc
jbe
data16
cld
lods
jo
imul
xchg
sbb
test
jg
sti
jmp
frstor
adc
jo
imul
int3
lret
icebp
and
mov
or
xor
or
mov
imul
or
sbb
stos
pop
or
or
jle
sbb
icebp
and
pop
sbb
cmpsl
ret
cmpsl
cmp
movl
adc
sti
stos
lcall
pusha
sbb
and
push
loopne
sbb
iret
push
mov
popa
pop
pop
imul
rol
movsb
push
cli
outsl
rcr
hlt
lods
ja
xchg
jp
dec
push
jl
ret
mov
inc
and
loop
cmc
cmp
rcll
dec
xchg
movsl
push
push
bound
icebp
and
adc
add
xor
xchg
jp
and
or
and
std
jp
mov
sbb
xor
scas
icebp
and
repnz
mov
xor
cld
mov
dec
andb
mov
pusha
aas
pop
std
sbb
or
data16
mov
mov
sti
mov
repz
pop
pop
jg
jmp
aad
rcll
pop
ret
ja
lods
xchg
repnz
sbb
sbb
fsubrs
xchg
cmp
or
xchg
sbb
test
cld
push
int
and
shrl
dec
pusha
aas
jns
rorl
outsb
stc
xchg
rorl
fwait
ret
int
sub
jns
les
stc
aad
outsb
adc
adc
xlat
ret
adc
adc
sub
pop
sub
insl
in
pop
mov
xlat
xchg
in
cmpsb
hlt
lock
lods
xor
andl
movsl
push
jg
aad
jno
dec
lds
cld
xchg
add
insl
sbb
sub
pop
pop
sar
test
mov
stos
mov
cld
je
shll
sarw
lret
call
andb
mov
fucomp
push
iret
xlat
and
sbb
iret
cli
mov
aas
jp
mov
iret
sbb
iret
mov
stc
jecxz
int
shl
sub
sbb
int
ret
mov
ror
in
int
pusha
stc
lahf
mov
call
cwtl
pushf
lea
jbe
push
fisttpll
mov
pop
outsl
lret
cld
shr
dec
add
int
outsl
pop
je
rcll
fdivl
call
movsb
out
hlt
pusha
stc
lahf
push
daa
and
in
xchg
pop
add
outsb
jecxz
adc
or
lods
mov
mov
idivb
mov
xor
jnp
sarl
leavew
jnp
lret
out
jnp
stc
sbb
mov
xor
pop
leave
pop
jmp
leave
sbb
adc
sbb
push
pusha
inc
adc
sub
repz
xor
std
xlat
inc
jmp
mov
mov
bound
mov
stc
test
stc
ljmp
push
pusha
cmp
and
sbb
add
xor
and
lds
shl
lds
cmpsl
cmp
mov
pop
lds
fs
jg
jmp
ret
mov
mov
jecxz
iret
ja
sbb
cmp
and
sbb
les
xor
mov
mov
sti
xlat
outsb
std
dec
aam
or
pusha
cmpsb
arpl
xchg
add
jp
sahf
add
or
idivb
popa
cmp
xchg
lahf
pop
xor
push
adc
mov
movsl
loope
out
test
jmp
into
jo
fisttpl
rcr
enter
stc
mov
idivb
aas
push
rcl
std
push
pop
int
popl
stc
arpl
mov
mov
and
xchg
pop
rcrl
lret
push
pop
mov
push
iret
cmp
mov
cwtl
mov
mov
inc
pusha
jmp
sub
mov
mov
inc
in
js
add
adc
mov
les
mov
mov
idivb
xchg
out
jcxz
sub
inc
int3
out
repnz
out
push
xor
ret
or
jmp
pop
ja
xchg
sbb
jae
fistpll
std
xor
loopne
jbe
sub
jne
paddsw
in
push
push
in
adc
jo
adc
out
mov
push
data16
xor
decb
inc
push
pusha
sbb
and
dec
call
cmpsb
shr
lods
enter
sbb
sbb
mov
outsb
std
mov
jns
cli
cmp
int3
push
pop
bound
xor
je
cmp
fstl
fistps
and
push
std
cmp
sbb
cmp
js
adc
int
cld
lret
fs
cwtl
pop
and
jnp
repnz
pop
cmp
es
xchg
fisubrl
push
lods
mov
pop
sub
add
repnz
aad
shrb
hlt
and
fwait
xor
push
dec
pop
or
fucom
dec
dec
xor
fsubrs
xchg
scas
shll
dec
and
add
sahf
mov
jbe
cmp
pop
cmp
fwait
aam
xor
sbb
in
fcmovbe
xor
iret
pop
imul
push
xor
mov
repz
loope
and
mov
fsubrl
jle
cmp
in
imul
out
call
xor
sbb
add
data16
mov
les
es
loop
stos
push
stc
dec
scas
fchs
cltd
sub
sbb
or
or
iret
jo
in
loop
lods
cmp
popf
ret
out
fcomp
rcrb
adc
pop
pop
insl
push
je
rolb
mov
outsl
sbb
sbb
outsb
pop
and
clc
js
ljmp
ret
je
nop
lret
push
clc
cmp
add
in
pop
rorl
icebp
push
aad
sub
les
adc
or
nop
xor
dec
rorl
stc
fcmove
inc
cmpsl
adc
dec
xlat
faddp
es
or
or
ret
mov
fildll
cmpsb
and
addr16
sub
cmpsl
leave
pop
inc
pop
pop
not
mov
cmp
gs
cwtl
mov
xor
jo
lahf
pop
fimuls
sub
fmull
xchg
sti
jne
xor
int
lahf
mov
mov
mov
cmp
and
popf
cmp
fdivrl
mov
lcall
xchg
xchg
cwtl
cmp
sub
in
sub
cs
inc
fwait
jbe
das
jno
dec
xlat
lcall
stos
repz
mov
adc
add
shrb
clc
fidivl
mov
in
jno
xchg
sarb
fsubr
fmull
pop
scas
into
cwtl
push
pop
xchg
add
or
pusha
arpl
test
nop
loope
sti
cmp
mov
dec
stos
iret
sub
mulb
repnz
push
and
stos
ljmp
add
stc
out
add
pop
add
add
and
fsts
and
stos
movsb
fstpl
mov
dec
lcall
sbb
cli
or
loopne
mov
adc
inc
mov
sbb
or
leave
add
or
insb
cli
test
push
pusha
dec
sub
mov
sbb
out
lods
push
pop
adc
xchg
sub
cmp
pop
push
adc
mov
lock
subl
out
add
cmpsb
xchg
cmp
mov
or
adc
dec
dec
out
mov
adc
out
xchg
sbb
in
out
pusha
je
dec
add
in
adc
xchg
jge
sahf
les
mov
stos
and
and
les
jmp
xlat
jmp
xor
jecxz
dec
lea
repnz
fisubrl
in
daa
mov
out
std
mov
scas
lahf
or
pusha
pushf
mov
popa
mov
aas
xor
mov
or
std
push
pop
or
stos
inc
cli
or
inc
lds
adc
loope
repnz
sbb
jecxz
in
sbb
stc
ljmp
jecxz
mov
stos
fisubrs
fcomps
and
pop
jbe
lods
pop
or
mov
mov
mov
leave
out
dec
cmp
jmp
pop
stc
jge
out
fistps
dec
popa
cmp
hlt
mov
sbb
pop
insl
stos
cs
push
stos
sbb
in
push
pop
or
jnp
push
ret
imul
loopne
out
imul
out
sbb
jno
or
fs
adc
insb
sbbb
stos
lahf
xchg
fdivr
mov
pop
add
addr16
sub
xor
sbb
das
add
mov
jbe
mov
push
stos
cmp
out
sbb
popf
scas
fnstcw
sahf
push
stos
xchg
and
jno
sub
jns
adc
push
push
cmp
mov
xchg
dec
mov
ljmp
enter
cli
loop
ja
jbe
mov
gs
xor
push
nop
mov
sbb
mov
pushfw
sbb
mov
pop
in
xchg
inc
and
adc
mov
stos
int
jne
daa
jnp
pop
jl
imul
mov
cwtl
cli
cs
jl
push
push
pop
sub
jmp
mov
test
jb
push
insb
dec
cmpsl
out
xchg
pop
dec
pop
stos
xchg
cmp
xor
add
cmpsl
and
lods
call
mov
ficoml
mov
xor
xchg
lret
jb
in
xor
adc
dec
cmp
push
ret
adc
push
stos
rorl
daa
inc
inc
adc
lods
jne
mov
add
ss
insl
add
jns
dec
pop
cmp
xchg
adc
addr16
dec
jb
mov
loope
or
push
mov
xor
ror
adc
iret
ror
lcall
jbe
f2xm1
mov
cmp
jle
cli
xor
addr16
rolb
and
cmp
out
ljmp
sub
sbbl
int
mov
sbbb
rol
fdivrp
ss
negb
xchg
cld
and
push
scas
jmp
in
xchg
repz
cmp
fistpll
jnp
out
std
adcb
xchg
pop
incl
fimuls
cltd
mov
imull
add
enter
loope
stos
mov
inc
xchg
lret
pop
jmp
fisttpll
inc
mov
cmpsb
pop
les
or
mov
xchg
push
pushf
lds
mov
out
dec
pop
xor
mov
imul
push
movsb
or
push
jle
push
cld
jmp
insl
or
in
iret
sbb
sbb
lods
xchg
pop
and
jb
aam
and
sub
and
dec
cltd
dec
pop
mov
aad
in
sbb
mov
out
mov
test
jo
mov
xchg
std
push
xor
idiv
js,pn
das
and
xor
lea
mov
pop
xlat
cli
add
cmp
add
jbe
into
dec
in
sarb
in
lcall
dec
jl
add
outsl
cli
subb
cs
repnz
loope
outsl
out
in
cld
fsub
mov
cmp
mov
and
inc
push
icebp
pop
cwtl
xchg
xor
shl
repz
out
push
ss
sti
sbb
pop
jg
lds
sbb
adcl
jo
sub
mov
icebp
iret
bound
pop
adc
dec
pushf
cli
inc
out
jl
xchg
jp
popf
add
and
icebp
outsl
mov
loop
in
pop
in
jecxz
test
cmp
imul
in
les
xor
push
cmp
mov
mov
out
ret
imul
xchg
lods
out
sub
ss
cli
and
mov
sbb
loop
hlt
add
roll
jmp
or
fs
cmp
cmp
add
or
pop
sbb
adc
fsubr
lods
push
jecxz
and
lds
xchg
loopne
or
sub
in
sahf
add
loope
pop
mov
mov
cmp
mov
and
dec
and
adc
ds
push
cmp
pop
sub
xor
fstpt
mulb
or
xor
or
orb
jg
push
mov
or
inc
lcall
jbe
mov
jg,pn
test
inc
push
push
or
in
out
leave
pop
push
loopne
dec
lea
daa
cmp
cli
lock
repz
add
popf
pop
daa
dec
xor
mov
push
or
out
popf
mov
aam
mov
push
pop
ret
push
inc
shr
ret
sbb
sbb
arpl
cwtl
lds
mov
mov
mov
xorl
jge
add
lock
or
outsl
pop
mov
imul
cmp
push
jl
ljmp
fnsave
cmp
lahf
sbb
test
inc
ficoml
xchg
hlt
arpl
rolb
pop
mov
push
in
sbb
call
pop
push
out
addr16
sbb
cmp
inc
dec
dec
fldenv
cmp
mov
sbb
jno
dec
insb
dec
ljmp
mov
scas
lds
pop
out
stos
xchg
out
fwait
insb
gs
xchg
mov
dec
mov
mov
in
jmp
xchg
gs
or
scas
inc
sub
dec
movsb
sbb
cmp
scas
fisttpll
push
rcrb
jb
push
pop
lods
pop
sub
add
in
repnz
sub
cmp
jecxz
je
xchg
push
cmp
clc
dec
or
lock
fcomip
pop
cwtl
cmpsb
push
pop
pop
cmp
xor
push
stos
roll
lods
out
inc
neg
inc
scas
out
stos
push
cli
add
or
stos
sbb
fidivs
loopne
dec
in
fldenv
jbe
pop
cmp
xchg
loope
rolb
pusha
loop
cmc
bound
test
stos
or
add
mov
xchg
jne
lahf
je
mov
mov
mov
lret
jbe
add
push
movsl
inc
sbb
dec
mov
jp
or
inc
mov
push
ja
jo
in
mov
test
xor
stos
inc
adcl
mov
stc
mov
stos
dec
lea
mov
or
mov
andl
in
xor
cld
adcb
out
out
sub
addl
test
lea
mov
push
lods
jbe
and
jg
sbb
push
xor
pop
mov
je
xor
test
fsubrp
idiv
cmpsb
int
add
mov
jmp
test
and
shll
inc
and
pop
sub
ret
adc
in
push
xor
adc
jp
sub
mov
mov
les
jo
pop
clc
mov
mov
add
jmp
je
cwtl
rcrb
in
sub
xchg
cmpsl
jo
ja
jo
shr
testl
rclb
sti
jne
leave
fimuls
push
mov
jl
and
scas
lahf
mov
loop
bound
outsb
pop
pop
xchg
leave
ficomps
hlt
aas
mov
push
inc
pop
jnp
clc
cmc
loope
jno
push
rep
and
add
in
mov
xchg
std
dec
pushf
mov
in
in
test
push
icebp
dec
and
or
cmp
popa
and
fsubs
push
push
mov
xor
clc
and
and
mov
stos
sti
mov
jecxz
xchg
jge
js
ds
cmp
or
push
shr
and
sub
stos
ss
repnz
in
sbb
imul
loopne
pop
rolb
sbb
out
and
fs
cmp
sbbl
sarl
push
cmp
in
les
sub
pop
clc
xchg
test
xlat
cmp
lcall
and
inc
out
test
cmp
pop
insb
mov
inc
icebp
hlt
pop
add
pop
dec
sub
sbbl
les
sub
push
cmp
fistps
fisubrl
sub
push
pop
cmpl
mov
daa
popf
icebp
mov
fdivp
stos
mov
dec
mov
sbbl
lods
pop
jns
jp
adc
roll
mov
mov
jp
ja
aas
pop
sti
jge
dec
mov
mov
and
scas
mov
jp
sarl
pop
sub
sbb
insb
es
test
inc
stos
js
jg
test
push
ljmp
popa
addb
mov
lret
sub
call
mov
in
dec
sti
jg
setne
pop
imul
xor
pop
loop
xchg
leave
outsb
jnp
lds
arpl
lahf
mov
out
out
mov
add
pop
sbb
and
xor
fwait
in
in
push
mov
sub
and
pop
hlt
jp
out
pop
dec
cli
adc
jecxz
cmp
xor
cmpsb
repz
mov
hlt
pusha
jae
adc
arpl
and
sbb
xor
adc
in
jnp
mov
andb
mov
ljmp
outsb
mov
or
loop
data16
std
pusha
std
dec
sub
shll
je
in
imul
xchg
cmp
movsl
push
fcmovnb
jg
insb
mov
jnp
adc
and
lret
add
cmp
lret
sbb
popa
mov
insb
inc
out
stos
xchg
and
shl
jp
jecxz
mov
xchg
inc
mov
sbb
cli
sub
pop
mov
push
xlat
mov
lret
clc
fisubs
std
neg
int
hlt
mov
push
xchg
test
outsb
xchg
cwtl
sub
xchg
lods
stc
pop
leave
imul
in
xor
jno
int
mov
fldenv
add
lods
icebp
imul
loop
inc
push
fwait
xlat
cmp
in
add
add
mov
ds
in
lret
and
mov
dec
call
push
aas
incb
in
push
jae
cltd
ljmp
clc
cmp
daa
mov
insb
and
inc
and
sub
sar
stos
std
in
lcall
pop
decb
icebp
mull
imul
dec
bound
dec
icebp
and
dec
icebp
sbb
loopne
loopne
sub
mov
jmp
in
sub
push
sub
pushf
out
push
add
pop
sti
repnz
test
incb
clc
xor
cmc
ret
jnp
dec
and
mov
aad
shll
sbb
sbb
lea
scas
jnp
or
arpl
sub
or
or
inc
ds
in
fidivl
xchg
loopne
pop
lea
sbb
add
nop
inc
sbb
adc
int3
sti
jo
scas
jo
mov
inc
incl
fnstcw
pop
andl
xchg
in
bound
shll
loop
ret
adc
adc
in
or
push
add
in
cli
add
sbb
dec
ljmp
adc
hlt
dec
in
push
xchg
cmp
cld
dec
inc
xor
cli
mov
sti
add
pop
and
push
in
inc
jge
sahf
loope
arpl
fwait
addb
jb
inc
ror
xchg
stc
jae
cli
xchg
repnz
call
cmp
sbb
xor
pop
add
cmp
cmc
xchg
cwtl
out
add
sbbl
cli
push
jae
pop
and
mov
sbb
imul
arpl
push
out
pop
imul
dec
cmc
je
imul
icebp
insb
shrl
mov
or
dec
push
xor
mov
and
in
popa
sub
ficoms
dec
test
out
add
sbb
roll
add
loope
jmp
js
sarl
mov
fcoml
aaa
dec
mov
stos
pop
adc
or
fstps
rolb
xchg
out
add
stos
mov
in
lret
and
imul
cmp
adcb
sti
bound
clc
dec
imul
std
sub
sbb
and
xchg
jnp
adcb
ljmp
repz
jecxz
adc
sbb
push
arpl
adc
adc
loop
lock
jp
push
jnp
mov
adc
clc
xor
in
inc
push
push
bound
in
cmp
xor
mov
jo
push
in
or
jnp
js
in
lock
pop
fwait
ss
jbe
je
push
shll
dec
mov
pop
fisttps
stos
sub
enter
repnz
and
jg
xor
aad
cs
push
adc
or
xchg
jo
pop
push
ret
cmp
lock
push
adc
dec
ret
mov
mov
ljmp
rclb
mov
in
cs
les
sbb
cmpsl
xchg
nop
fs
xor
stos
leave
mov
loop
xor
jecxz
cld
bound
imul
xchg
fadds
adc
mov
hlt
mov
jecxz
repnz
enter
mov
cmp
loop
mov
pop
mov
lods
jo
xchg
jge
sahf
mov
xchg
mov
insl
push
les
inc
hlt
loop
sbb
dec
repz
and
sbb
xor
push
callw
out
jbe
ljmp
aaa
cwtl
sub
mov
xchg
aas
xchg
xchg
mov
push
xlat
lcall
mov
jle
mov
movsl
push
lock
mov
lock
add
inc
mov
test
xor
fmul
sub
push
insb
call
les
xchg
sub
lods
aad
jecxz
xor
sbb
clc
gs
insl
iret
fwait
shl
sub
sub
insb
clc
repnz
pop
xorl
icebp
add
test
push
xchg
dec
repnz
ja
fcoml
ret
iret
loop
loope
pop
loopne
stos
mov
jo
push
jecxz
les
int
lcall
outsl
xorl
xchg
dec
xlat
in
les
mov
cmp
adc
xor
push
out
dec
arpl
mov
inc
inc
mov
sbb
faddp
loopne
orl
jle
adc
cmp
xlat
jge
stc
xchg
lret
movsb
mov
xor
stc
sbb
les
cmp
jge
jo
push
xchg
imul
inc
fcoms
and
mov
pop
mov
sti
push
imul
or
jno
mov
add
sbb
cmp
jb
loop
syscall
pop
cmp
push
cmc
jo,pn
or
cmp
cli
pop
cmp
jle
repnz
loope
dec
cli
jo
pusha
xchg
mov
fwait
jge
cmp
cmc
repnz
jge
test
repnz
test
jecxz
les
je
dec
xlat
pop
scas
add
fcmovbe
shll
jo
mov
inc
gs
or
repnz
outsl
bound
pop
push
or
sub
insb
cli
mov
xchg
imul
pop
scas
add
dec
jno
das
ss
or
notb
push
shll
aas
cmp
mov
mov
xchg
pop
pop
xchg
or
dec
cli
pop
and
xchg
or
push
cmp
pop
pop
jns
lcall
sub
pushf
in
jp
cmp
cmp
hlt
loope
jmp
or
in
xlat
push
sub
stc
imul
pmulhuw
mov
fwait
data16
cwtl
xorb
add
je
and
mov
xor
or
f2xm1
shrl
pop
add
inc
out
xor
in
xor
fstl
ljmp
lock
or
push
and
or
mov
hlt
inc
inc
xor
jmp
push
inc
outsl
sahf
dec
pop
aam
bound
jae
loopne
cmp
mov
imul
xor
aam
cld
cmp
stos
arpl
ljmp
imul
xchg
push
lret
lret
stos
data16
decb
push
mov
hlt
mov
loope
jecxz
push
fdivrs
mov
push
dec
shll
adc
inc
xchg
mov
push
clc
jl
test
jcxz
jecxz
fistl
lret
mov
pop
ljmp
icebp
rcrl
in
in
pop
test
mov
xchg
jb
xchg
and
fsts
dec
testl
test
jp
enter
xor
lods
repnz
fwait
lods
pop
mul
push
jmp
inc
out
sar
shll
in
cli
cld
xchg
mov
mov
push
fisubrl
xor
fnstsw
mov
add
fimull
mov
inc
pop
push
cmp
pusha
jne
cmp
jecxz
pop
xorl
lret
mov
jg
sbb
pop
mov
repnz
ja
into
mov
mov
jl
jg
pop
scas
fsubrl
mov
js
mov
mov
and
push
push
repnz
testl
lea
rol
xchg
rcrb
loop
loop
xchg
mov
mov
or
cwtl
mulb
mov
int
push
cld
stos
lret
cmp
fisttpll
sti
sti
jmp
pop
sbb
pop
add
adc
xchg
sti
mov
jl
in
sbb
fcoms
int3
push
loopne
xor
jo
dec
pop
or
mov
pop
js
mov
mov
adc
call
pop
test
fidivl
add
adc
push
gs
les
add
or
fstps
adc
ljmp
cltd
and
adc
js
push
movsl
jecxz
inc
ss
sub
and
mov
xlat
decl
xor
cld
and
ror
cmp
cs
lods
push
lds
jmp
dec
popa
clc
clc
cmc
cmp
inc
jbe
bound
xchg
inc
jg
das
pop
xlat
fsub
pop
push
inc
and
test
adcl
les
or
adc
adc
jl
xlat
bound
ret
mov
pusha
jbe
out
movb
mov
test
out
loopne
xchg
ret
mov
mov
shrb
xchg
fs
add
adc
adc
adc
mov
ja
clc
ljmp
imul
pop
xor
sbb
fildl
popf
jo
push
adc
mov
sahf
push
mov
mov
and
xorb
xchg
flds
les
outsl
mov
cmp
leave
ds
lret
subb
and
lcall
loope
add
fsubr
push
mov
fdiv
adc
mov
mov
icebp
sub
ror
in
dec
mov
sub
std
lea
iret
inc
xchg
xchg
inc
and
inc
data16
sbb
pushl
mov
jbe
popa
sub
xor
sub
and
lcall
psllq
push
dec
rcrb
and
jns
sub
test
sahf
dec
push
xchg
dec
outsb
sub
neg
push
imul
jecxz
in
loop
addr16
or
sti
movsb
fbld
ja
adc
pop
dec
insl
push
push
out
xor
mov
jb
incb
xor
icebp
jb
ffreep
fcoml
xchg
push
xchg
xor
jo
xchg
ret
mov
xchg
push
jmp
fwait
in
xlat
clc
les
cmp
mov
aas
push
jecxz
sub
jmp
pop
ss
cmp
lock
jo
shll
cmpsl
sub
lret
jge
jb
shrb
mov
fimull
fs
packssdw
pusha
jl
shl
aaa
or
jmp
and
and
and
inc
inc
mov
int3
ror
rcrb
sub
and
test
add
cli
shll
push
jae
push
out
mov
dec
jle
cmp
in
mov
lds
inc
push
popa
pop
mov
jno
ds
testb
in
push
push
adc
stos
xor
cli
and
out
loope
add
test
inc
movsl
cmp
scas
popf
add
stos
dec
sub
fistps
add
dec
fildll
cmpb
push
mov
in
arpl
test
sbb
shl
stos
xor
xor
pop
jbe
push
add
sbb
dec
lahf
jnp
sbb
outsl
or
and
and
mov
cld
ljmp
push
adc
aad
faddl
adc
out
mov
jbe
pop
ret
mov
loop
mov
push
fiadds
cld
mov
jae
test
push
adc
mov
in
lret
gs
in
lahf
and
dec
loop
mov
testb
mov
add
jl
xchg
dec
addr16
test
pop
clc
iret
ret
stos
cmp
popa
es
lcall
sahf
pop
pop
mov
fldl
stos
mov
dec
nop
cmp
pop
jp
push
dec
imul
push
in
push
loopne
loopne
dec
jb
push
sbb
or
dec
xor
sub
cld
iret
repz
ret
stos
movsb
mov
xor
xor
push
js
sbb
lret
or
scas
cmp
cltd
pushw
ds
ret
test
or
or
ret
fsubrp
sbb
inc
jl
jp
faddl
add
dec
jl
push
mov
add
inc
js
mov
jecxz
rol
mov
insb
or
xchg
lahf
push
stos
rorb
sub
aaa
cmc
subl
fldcw
movsb
jno
repnz
sbb
mov
pop
xchg
fsubrl
xor
push
xor
and
mov
in
repnz
and
ss
repnz
cltd
cli
ljmp
mov
stos
insl
jb
dec
int
lock
loope
and
inc
xor
pop
in
mov
lods
push
repnz
popf
cli
lock
cmc
scas
xor
dec
mov
nop
xor
push
call
jmp
pop
js
leave
cmc
out
sbb
jbe
jbe
mov
xchg
pop
push
loop
cmc
in
iret
push
ret
fwait
loop
mov
mov
inc
mov
jmp
in
pop
and
lret
mov
mov
cs
sbb
sbb
fnstsw
out
clc
inc
imul
loopne
fmulp
push
xor
pop
jmp
hlt
sbb
scas
sbb
xor
pop
dec
lea
xchg
les
shlb
cmpsl
adc
jmp
xchg
sahf
xchg
inc
xchg
cmpb
mov
mov
mov
sahf
inc
mov
mov
sbb
and
inc
repz
test
and
ret
adc
out
repz
mov
add
add
jb
jmp
mov
ljmp
pop
push
and
mov
inc
cs
sub
sub
add
negb
push
loopne
insb
mov
fsub
or
repnz
xchg
pop
aad
lcall
bound
cmp
pop
push
jns
pop
sbb
pop
pop
nop
stos
int3
add
sub
ljmp
js
xor
sbb
mov
fdivs
enter
dec
cmpsl
loop
stos
out
jle
nop
cld
xor
scas
hlt
hlt
mov
or
les
lahf
enter
dec
xchg
xor
pusha
call
mov
xlat
or
sbb
in
push
mov
fstps
test
pop
mull
mov
jno
test
pop
stc
in
adc
jmp
loope
arpl
push
inc
imul
pop
mov
jbe
testl
adc
add
hlt
cmpsl
pop
xchg
ss
sarl
ret
icebp
pop
jle
adc
mov
pop
push
mov
push
push
movsb
sbb
cltd
call
pop
lea
aam
push
xlat
fldt
adc
sbb
dec
sbb
test
das
fildl
loope
cmp
or
aad
sahf
mov
std
mov
repz
jle
les
stc
out
push
inc
daa
sub
lcall
xchg
inc
mov
and
mov
dec
fs
clc
out
mov
jns
call
mulb
insl
push
fs
cmp
aas
cmp
jecxz,pn
push
push
mov
cmp
fwait
cmc
cmp
cs
add
jb
sub
insl
inc
out
out
ficoml
push
repnz
push
cmp
push
jge
push
lods
in
fwait
loope
mov
loope
lods
icebp
imul
jle
in
test
mov
std
mov
cmpsb
icebp
cmp
pop
xchg
cmp
pop
push
stos
subl
dec
imulb
mov
out
mov
fcom
sbb
inc
mov
xlat
std
popf
ljmp
icebp
and
mov
sub
fiaddl
lods
loop
push
inc
xor
sub
test
loope
cmp
cld
sbb
ljmp
adc
je
rolb
stc
call
sub
lea
cmp
adc
jb
pop
daa
xchg
out
sub
jo
xchg
insl
stos
enter
shll
sbb
fwait
sub
adc
int
ja
outsb
mov
push
ds
icebp
leave
std
fists
cwtl
pushf
xor
mov
mov
into
mov
adc
sub
sbb
mov
ficomps
add
and
pop
stos
sub
repnz
mov
lret
in
jle
movsb
jb
out
shl
xlat
mov
pop
mov
and
push
imul
fcomip
out
jb
adc
popf
and
pop
or
inc
jecxz
incl
mov
and
fprem1
inc
sbb
jo
add
jne
dec
pusha
push
sub
fadd
mov
cmp
scas
js
lods
and
jecxz
sbb
rcrl
inc
subb
cmp
rolb
mov
jge
fwait
sbb
stos
popa
xchg
aas
stos
aam
push
add
scas
aad
xchg
mov
cmp
add
sbb
or
add
xchg
push
bound
mov
stos
std
sub
lcall
mov
dec
sahf
or
pop
sbb
sti
mov
into
fmuls
insb
add
inc
sbb
mov
pusha
add
add
stos
jo
dec
cld
pop
jmp
or
xor
and
cs
push
jae
pop
fisubl
call
ds
and
xlat
stc
shll
pop
test
call
gs
or
clc
icebp
xchg
shrb
bound
mov
fadd
cmc
jp
sahf
ljmp
or
in
loope
add
repz
and
aaa
cwtl
jns
cmp
push
ljmp
ljmp
inc
test
fwait
in
pop
or
mov
jmp
jb
adc
inc
cmc
push
pusha
in
cwtl
xor
shl
dec
in
icebp
adcl
sub
cli
out
popa
jmp
loope
in
in
xorb
and
jmp
lds
inc
in
jno
or
iret
sub
hlt
cmp
xchg
popf
mov
sub
pop
incl
jp
pop
adc
lods
out
pop
jmp
test
aad
lret
iret
jno
repnz
sub
and
call
mov
ljmp
add
or
ja
ret
or
cmp
push
mov
mov
push
lret
cmc
int3
stos
lods
mov
inc
inc
mov
test
cmpsl
mov
repnz
jbe
add
iret
andl
and
xor
jle
adc
rolb
jecxz
fcmove
cld
loopne
sub
outsl
pop
mov
xchg
jle
push
mov
imul
hlt
or
sbb
loop
push
inc
or
mov
mov
sbb
cmpsl
jl
stos
adc
shlb
xor
cmp
add
rcr
jle
mov
repnz
nop
sub
punpcklbw
jle
and
or
sub
sbb
sub
and
and
or
in
sbb
push
add
push
loope
push
shrb
push
jne
pop
cmp
sub
sbb
xor
repz
call
or
or
sbb
mov
mov
push
pop
jmp
sahf
je
insb
shl
lcall
push
lods
cli
cld
shll
iret
jb
pusha
divb
rep
add
cmpsl
dec
add
addb
push
and
add
xor
jg
int
sahf
dec
je
sbb
mov
mov
lahf
add
das
outsb
pop
add
jmp
push
movsl
and
push
lret
lret
push
mov
mov
pop
sub
push
push
sahf
jno
mov
mov
repz
mov
iret
inc
xor
or
mov
sbb
es
shll
loop
out
fs
xor
negb
in
lock
leave
data16
fadds
cmp
adc
sub
hlt
je
push
push
add
cmp
jl
je
mov
or
in
and
shr
pop
arpl
push
data16
xchg
push
jle
jmp
pop
pop
cld
pop
cmp
rolb
stos
pop
ss
mov
aas
and
add
inc
lds
ret
pushf
daa
add
mov
jle
iret
push
cmp
test
inc
shl
dec
icebp
mov
loope
push
in
shrb
inc
out
xor
test
pushf
pop
mov
rorb
mov
add
jo
jg
sub
arpl
out
inc
jb
and
xchg
scas
pop
je
jmp
shrl
movsb
sbb
xchg
xchg
cmp
fmull
cld
out
arpl
xchg
xchg
mov
out
scas
xchg
js
lret
ljmp
lcall
pusha
adc
push
out
test
and
addr16
sub
int3
or
jns
jb
loop
and
xchg
arpl
imul
xlat
jns
imul
pop
stos
xchg
push
imul
mov
in
jp
cli
push
push
push
sti
push
pop
sbb
pop
sti
xchg
adc
sbb
das
stos
add
or
pusha
in
sbb
adc
out
loope
mov
xor
stos
sub
fs
jbe
movsl
in
push
jb
popf
lock
sub
jl
ljmp
pop
xor
insl
aam
and
and
sbb
and
arpl
int3
test
dec
cmp
and
sbb
out
mov
out
jg
push
add
inc
ljmp
movsl
std
out
mov
add
jb
add
into
js
xorb
push
out
sub
and
xor
lret
fsubl
int
jb
addb
push
add
xlat
out
ret
pusha
push
xchg
sti
popf
xchg
and
cmp
jle
lock
inc
test
cmp
in
xor
lds
and
lahf
scas
push
data16
mov
pusha
or
out
sbb
stos
jo
mov
mov
sahf
sahf
stos
adcl
xor
and
daa
fscale
xor
out
sbb
fwait
scas
or
xorb
arpl
jo
push
cmp
cmp
and
in
xor
xlat
cmc
sti
scas
pop
mov
jge
js
cmp
pop
jg
and
jae
mov
jb
outsl
push
jle
mov
sahf
sub
stos
arpl
ret
sbb
lret
sarb
and
inc
sbb
sbb
cmp
pop
std
push
or
das
pop
jecxz
pop
rorl
negb
lods
fs
and
mov
loope
xchg
mov
test
in
cld
mov
ljmp
mov
xchg
hlt
fmull
loop
in
stos
sub
and
in
push
imul
sbb
js
fldl
cmpsb
dec
adc
fcoml
ret
add
pop
add
push
lds
or
cli
push
sbb
cld
in
xchg
xor
rcrl
add
and
lcall
inc
fnstcw
mov
xor
add
popf
xor
xchg
or
jnp
out
pop
jns
jmp
pop
dec
cli
jecxz
jle
dec
imul
inc
push
pop
sbb
out
pop
loop
add
lock
loop
sbb
mov
cli
xchg
ljmp
inc
xor
add
sahf
insl
repz
ss
loopne
xchg
pop
icebp
aam
dec
stos
cmpsl
and
in
jo
je
xchg
mov
ficoml
pushf
inc
mov
sub
pop
fimull
std
out
mov
ret
cmp
add
dec
fdivr
data16
mov
sahf
shll
ficoml
or
sbbb
or
pop
sarb
or
push
mov
jg
mov
xchg
pushl
enter
pop
cmp
cli
aaa
xchg
sahf
sub
in
cmc
shl
in
cmp
lock
ljmp
insl
xor
mov
mov
jg
stos
lret
ss
ret
pop
scas
ret
dec
cmp
scas
mov
ror
repnz
jmp
fldenv
repz
xor
sbb
in
lock
hlt
out
push
jae
repnz
fstl
cmp
or
inc
lret
icebp
popa
or
cmp
xor
cmc
aam
jbe
cmp
lcall
xchg
and
call
and
jmp
aam
mov
xor
pop
loopne
fadd
test
fsub
fwait
jnp
mov
fistpll
pop
add
and
jo
ds
xchg
dec
gs
fisubl
push
xor
and
push
sbb
mov
int
insb
int3
adc
mov
inc
inc
daa
mov
js
les
mov
lcall
shrb
xchg
sbb
lods
xor
cmp
push
mov
lods
adc
push
stos
pushf
mov
xor
xorl
fucom
sbb
int3
incb
mov
mov
or
hlt
dec
jp
shl
sub
ljmp
test
sahf
xchg
inc
mov
ficoml
std
mov
rcrb
mov
cmp
mov
add
inc
push
add
lock
inc
or
loop
in
mov
fcomps
shl
ds
jp
jb
ljmp
repz
in
xchg
data16
jle
xor
aad
push
or
sti
jne
mov
gs
jmp
xchg
clc
scas
cli
pop
dec
push
lret
jg
push
push
mov
or
mov
sub
push
dec
out
mov
divb
sbb
jl
and
mov
mov
and
pandn
mov
call
loop
icebp
jno
and
cmp
sbb
dec
mov
push
add
push
arpl
scas
sub
andb
push
icebp
hlt
mov
sbb
imul
aam
mov
xchg
and
fcoms
cli
ret
aam
dec
lahf
gs
repz
and
mov
cli
fcos
sub
push
loopne
out
call
hlt
rorb
sbb
adc
hlt
push
ljmp
fwait
cmpsb
dec
jmp
sbb
out
mov
ljmp
stos
xchg
mov
mov
or
stos
push
jecxz
jecxz
hlt
iret
and
arpl
stos
mov
js
cmp
dec
jg
insl
jle
mov
aas
pop
sti
sti
mov
xor
jecxz
mov
or
xor
mov
mov
dec
push
mov
loopne
cltd
das
and
into
imul
xchg
fidivrl
movsl
dec
cmp
insl
push
lods
ret
sub
jne
jns
cs
mov
sub
ret
mov
jmp
loope
xlat
in
mov
or
xor
sub
loope
sub
xor
mov
addb
fsubrp
jmp
pop
or
aaa
mov
lock
leave
lret
add
scas
hlt
push
cmc
push
pop
fidivrl
xor
insb
push
rcll
sub
mov
pop
mov
push
mov
icebp
dec
int3
icebp
leave
jb
out
or
adc
xlat
fs
cli
addl
cwtl
in
mov
divl
mov
mov
add
repnz
mov
and
mov
mov
imul
adc
mov
jo
in
or
dec
sub
and
gs
lret
dec
jo
incb
loope
add
or
cmc
xchg
dec
jp
inc
mov
dec
out
mov
jnp,pt
pop
repnz
stos
outsb
ror
addl
cs
push
jge
fiaddl
cmp
xor
xchg
stos
sub
push
imul
xchg
pand
mov
call
jle
xor
xchg
jp
mov
loop
inc
cmp
icebp
outsl
ffreep
pop
and
std
jecxz
or
add
dec
xchg
or
pop
sti
js
and
clc
in
mov
jecxz
loope
xchg
in
out
add
cmc
cmp
pop
jb
pop
out
sbb
add
add
pusha
loope
sbb
xor
adc
lock
sub
pop
xor
push
sbb
mov
loop
fwait
pop
out
mov
ljmp
mov
lret
loop
sti
in
add
in
ficoms
fiaddl
pushf
jle
sti
add
pop
add
lret
mov
lods
cmp
inc
ret
loopne
inc
loop
popa
cmpsl
add
fdivrl
inc
pop
pop
fistpll
ljmp
pop
lock
fstpl
inc
pusha
fsubrl
sbb
jmp
in
iret
cs
loope
loop
stos
fcom
push
xlat
mov
pusha
clc
add
int
jle
leave
adc
and
icebp
flds
ljmp
dec
inc
cli
stos
stc
pop
ret
andb
pop
push
fs
stc
pop
pushaw
shl
insb
ret
stos
scas
fdivl
faddp
mov
scas
and
fldt
push
mov
push
pusha
daa
add
cli
mov
lods
jle
pop
jns
out
xor
test
out
loopne
inc
in
fcmovbe
fldl
xchg
pusha
inc
push
shll
xlat
pop
call
ds
and
sbb
xchg
bound
ljmp
gs
ljmp
mov
xor
cmc
mov
xchg
fdecstp
jno
lcall
ja
shrb
sti
ret
cmc
jp
sub
mov
add
icebp
jecxz
push
int3
jmp
lods
je
sub
lret
loopne
stc
stos
fldl
or
int3
mov
jecxz
mov
ret
push
mov
in
ljmp
xor
imul
pop
dec
dec
jns
adc
stos
sbb
push
mov
imul
imul
lods
and
addr16
mov
sub
out
adc
repnz
add
in
lock
add
pop
stos
rcrb
imul
loop
mov
icebp
out
icebp
imul
fdivrs
mov
das
add
mov
mov
xchg
sub
add
fcmovb
cmp
dec
push
sbb
pop
and
dec
ret
mov
xchg
jmp
mov
dec
pushf
pop
lods
inc
icebp
xor
push
addr16
loop
ja
inc
lret
add
dec
clc
pop
nop
rcll
cld
lret
pop
gs
push
test
movsl
add
sbb
call
test
in
dec
pop
lahf
mov
mov
in
push
js
test
testl
ret
mov
sub
out
sbb
dec
and
ljmp
shll
inc
pushf
stos
sub
movsl
xchg
in
dec
lcall
int3
adc
insb
lock
daa
loop
mov
pop
mov
cld
icebp
leave
pop
add
adc
cmc
mov
sbbl
cld
loope
test
movsb
scas
js
cwtl
mov
out
fdivl
and
pop
icebp
inc
ljmp
scas
mov
out
inc
dec
xchg
mov
dec
sub
pop
sbb
cmp
push
add
ljmp
decb
bound
punpckhdq
stos
movsb
roll
outsb
push
adc
jno
sub
test
push
mov
push
in
fsubrl
sbb
or
sbbb
cld
lret
add
push
xor
mov
adc
and
sbb
jmp
push
xor
aaa
add
pusha
inc
int3
add
jno
jg
dec
dec
in
mov
jecxz
shl
shll
popf
in
cmp
lds
scas
ds
shrb
adc
and
int
sar
lods
test
sbb
sub
cli
test
lds
lods
xlat
ds
cli
push
in
in
mov
push
int
loopne
or
and
mov
push
push
or
repnz
push
fildll
jg
pop
adc
fsubs
or
shl
addr16
loope
jg
test
sbb
dec
icebp
mov
dec
add
repnz
clc
push
outsb
loope
fmulp
cmpsl
jmp
adc
imul
sbb
push
cmc
and
jne
sbb
fdivrs
sbb
xor
int
or
mov
xchg
cmp
sbb
cmp
divb
mov
fbld
addr16
or
xor
mov
ja
fimull
xchg
cmp
push
insb
test
cmp
sbb
xor
bound
pop
test
pop
fwait
mov
insb
fidivl
ds
xor
pop
lods
jp
pop
jecxz
mov
out
loop
ds
es
xor
or
iret
hlt
imul
cmp
pop
ja
dec
icebp
dec
inc
divl
outsl
fwait
out
jnp
call
popl
pop
pop
pop
cmp
xor
pop
test
adc
xchg
faddl
in
ljmp
decb
pop
stos
mov
pop
loop
imul
ret
xor
rcrb
dec
stos
out
in
clc
jp
inc
aaa
jge
in
sbb
dec
in
stos
pop
test
cmpsb
add
sub
jb
negl
ret
stos
cmp
ficoml
stos
push
sbb
add
gs
out
ljmp
xor
push
sbb
dec
push
in
mov
cmpsb
inc
in
loop
fistpll
mov
mov
jmp
pop
jo
sar
jno
adc
popf
aam
aad
outsl
dec
sar
mov
sbb
icebp
jno
mov
in
push
pop
outsl
cmpsb
in
mov
dec
push
pop
repnz
sub
fldcw
lret
cld
jmp
sbb
pushl
mov
in
mov
ja
fcompl
or
pop
ljmp
loope
xor
fsubrs
push
lds
fsubrs
xor
add
fucom
mov
cltd
inc
mov
mov
pusha
rol
add
imul
dec
lods
clc
stc
cmp
mov
fadds
addr16
outsb
cmp
int3
pop
imul
pusha
sub
sub
cld
lahf
arpl
jl
clc
into
jmp
popf
pop
push
mov
sbb
push
pusha
cwtl
sahf
out
shll
jp
cmpsb
sti
andl
outsl
fisubrl
mov
hlt
subl
cmpsb
mulb
xor
es
ljmp
loop
xchg
xchg
add
mov
call
lret
cltd
mov
mov
add
jle
jae
mov
ret
imul
arpl
add
dec
data16
out
icebp
test
mov
into
pushf
std
stos
in
mov
lret
mov
sbb
lahf
into
sbb
sahf
lahf
orb
mov
test
imul
push
adc
xor
pop
add
imul
or
xchg
xchg
stos
cmp
sbb
out
mov
repz
lock
push
stos
cmp
scas
sbb
vmovshdup
jmp
jl
idiv
lea
out
fs
mov
js
cmp
shl
cli
test
cmp
sub
push
shll
inc
movsl
mov
add
mov
in
lds
jl
out
and
sti
mov
and
inc
xchg
mov
cld
jg
jmp
mov
sub
and
loopne
icebp
push
shrl
data16
pop
push
sbb
popf
mov
rorl
into
lret
cmp
pusha
add
adc
push
sbb
lea
inc
xchg
jo
cmp
adc
sub
sbb
rorl
cmp
mov
icebp
sub
and
imul
push
shl
and
pop
out
orb
cmp
mov
jmp
dec
popf
aam
nop
fwait
dec
rcll
leave
lret
insl
in
sub
mov
and
test
jl
cmp
testl
adc
int3
cmc
cld
sti
arpl
mov
imul
cmp
test
mov
xor
jecxz
xor
hlt
int
bound
sbb
ret
inc
loopne
imul
fcomp
shll
int3
into
inc
lods
leave
jne
frstor
sahf
sub
sbb
sahf
test
add
std
imul
jae
fnstsw
sub
add
cli
xor
not
imul
bound
cli
jmp
jge
lods
pusha
xchg
push
insl
pusha
rcrl
add
cli
dec
repnz
ret
jns
enter
mov
dec
adc
inc
dec
dec
fldenv
xor
adc
sarl
add
loop
mov
and
mov
lret
imul
lods
add
push
iret
js
mov
mov
pusha
in
loope
lret
push
call
xchg
repnz
fstpl
sub
pusha
push
outsb
push
ret
jo
inc
shl
in
sub
loope
sbb
add
lahf
pop
loop
lds
fcomip
xchg
and
or
cmp
loop
mov
scas
insl
pop
je
scas
xor
add
fwait
lods
adc
dec
cmc
mulb
ljmp
stos
jbe
out
icebp
arpl
sub
and
pushf
icebp
sbb
in
mov
xor
ret
lret
xchg
xchg
ds
push
xor
lock
scas
das
mov
inc
lcall
mov
sbb
out
ljmp
icebp
jno
popf
pushf
leave
fs
rol
sub
lahf
iret
push
cmp
je
stc
sub
pop
pop
inc
pusha
dec
in
sti
fistps
jno
fs
fsubr
adc
cld
stos
and
mov
pop
pop
push
mov
mov
pop
sbb
mov
pop
add
lret
xchg
shlb
jmp
mulx
mov
test
lock
sub
xchg
adc
inc
sahf
cmp
add
and
cmpsb
ret
out
shrb
jmp
push
insb
xor
add
mov
xchg
es
push
addl
xchg
subl
stos
dec
daa
mov
pop
pop
addl
jno
and
mov
repz
lods
dec
addr16
push
das
add
push
arpl
aad
xchg
imul
cli
ret
cwtl
xor
in
flds
loop
cmp
and
scas
push
push
das
xchg
xchg
mov
and
jo
ret
je
insb
cli
xchg
mov
out
xchg
or
xchg
out
and
shrb
sarl
js
mov
out
pop
imul
ljmp
icebp
int
add
in
addr16
movsb
fwait
xchg
ds
mov
insl
pop
xchg
repz
or
sub
int
stos
outsb
sub
popf
gs
frstor
ljmp
fisttps
mov
jb
push
es
pushf
and
iret
fidivrl
stos
cli
lret
pop
rcr
mov
loopne
fsubr
aaa
dec
pop
push
inc
scas
lahf
push
les
dec
sti
adc
jge
clc
js
push
jmp
pop
ret
fistps
cmpsb
stc
test
xchg
cmp
ljmp
or
lcall
mov
sti
inc
jo
mov
shr
cld
jae
jecxz
ret
push
mov
lret
leave
jns
add
shrl
dec
pop
ret
or
hlt
out
fcmovb
sar
test
int
cmc
cmp
mov
push
sub
add
inc
pop
loopne
out
cmpsb
fldenv
mov
mov
in
cmp
adc
xchg
cli
lret
fidivl
mov
mov
jge
cmp
mov
test
dec
cmp
xchg
xor
mov
outsb
mov
sub
jbe
inc
js
ja
les
cmp
gs
mov
jge
push
repnz
mov
fcompl
lea
loop
addr16
adc
lock
jnp
clc
in
sbb
dec
arpl
ret
xchg
cmp
pusha
les
pushf
loope
int
add
test
dec
arpl
push
nop
xchg
stos
or
out
ret
jno
mov
les
or
mov
fucomi
or
loop
sbb
aad
scas
cmp
int3
lods
push
sbbl
and
dec
icebp
push
leave
sub
fs
or
lahf
popf
and
push
add
popf
hlt
cmp
out
repnz
call
gs
mov
inc
and
js
xchg
in
aam
sbb
stos
cwtl
rcr
test
mov
pop
loop
jbe
push
cmp
lods
lock
fbld
jbe
cmp
aam
scas
ret
cmp
lret
sub
fadds
shr
fmull
lcall
mov
pop
out
shr
fdivs
pop
add
movsl
fwait
xor
fnstsw
loop
xlat
and
sub
fisubl
fdivl
fisttpll
movsl
mulps
ret
aam
aas
xor
lcall
bound
mov
push
jo
mov
mov
pop
dec
test
mov
cmpl
sub
fistps
test
les
mov
je
mov
sbb
stc
fsubrl
data16
popf
lds
jae
mov
int3
in
loope
out
rcrl
or
in
inc
pushf
into
ljmp
pop
jnp
jb
sub
dec
inc
mov
dec
mov
push
pop
xchg
cmp
push
ret
in
xchg
add
lahf
in
push
adc
test
ret
dec
dec
les
fwait
in
scas
je
icebp
outsb
into
stos
dec
loop
loop
hlt
out
cli
iret
out
sub
iret
mov
insb
in
jbe
xor
aad
das
jg
and
push
inc
mov
adc
lret
mov
adc
popf
xchg
or
clc
mov
add
push
adc
inc
imul
notl
xor
pop
mov
inc
mov
adc
bnd
mov
add
cwtl
mov
add
pop
or
jbe
mov
jns
pop
js
or
pop
imul
std
lock
shlb
xor
inc
add
and
cld
in
cli
sub
shrl
cwtl
and
out
sub
mov
or
es
iret
ljmp
xlat
fldcw
pop
js
idivb
jge
out
jae
or
dec
fcoml
jnp
sub
sbb
or
js
ljmp
lods
hlt
sub
jge
add
sbb
shlb
mulb
loope
scas
in
jle
cli
and
clc
ret
lea
lcall
mov
mov
xchg
stos
lcall
les
mov
repnz
int
out
mov
bound
stos
and
enter
lods
add
xchg
mov
loop
push
out
lods
scas
movsb
into
loopne
mov
add
lods
push
jl
in
sti
adc
imul
cmc
mov
cmp
repnz
sbb
mov
fcmovb
push
ret
cmpsl
pop
imul
or
adc
add
mov
jp
punpckhdq
sub
push
das
jecxz
sahf
lods
lret
mov
jmp
testl
lods
xor
or
int
push
clc
jmp
push
aaa
mov
add
mov
cmpsl
jmp
std
xor
mov
in
adc
sahf
add
out
mov
js
sub
call
dec
je
and
sub
or
fldl
adc
in
fwait
sbb
and
fs
fs
adc
cmp
std
pop
cli
jne
jbe,pt
dec
es
in
cmpsb
mov
in
bound
pusha
jle
movsb
js
add
lock
mov
or
in
aaa
ljmp
call
in
neg
push
dec
mov
and
loopne
and
stos
xor
xchg
xor
out
xor
repnz
loopne
and
pop
addb
or
orb
xchg
cs
iret
add
sbb
cmp
out
pop
stos
push
xor
xlat
lret
pusha
xor
fwait
arpl
idiv
in
imul
push
popa
sbb
mov
or
pop
mov
ret
xor
mov
sbb
and
pop
fwait
dec
test
add
out
and
jno
jns
jecxz
xor
lock
mov
sub
pop
add
jno
sbb
xchg
loope
jo
mov
loop
fcompl
and
mov
sub
test
cmc
fcmovu
arpl
pop
rorl
jecxz
inc
clc
ret
mov
pop
repnz
add
xchg
std
out
xorl
xlat
mov
ljmp
ljmp
or
outsl
out
icebp
pop
js
lock
xchg
jnp
mov
xor
fwait
repz
jnp
xor
mov
xor
add
adc
inc
push
sbb
dec
repnz
adc
in
or
lds
jp
push
sbb
jae
pop
mov
fldl
inc
add
and
jo
sbb
cmc
adc
sub
daa
dec
dec
scas
pop
lock
icebp
pop
xchg
and
in
inc
arpl
cmc
jmp
out
loop
cmp
xor
into
lcall
mov
and
out
sbb
inc
adc
pop
dec
sahf
sub
ds
std
jae
dec
aam
ja
out
mov
aaa
jnp
xchg
mov
cmc
mov
int
inc
repnz
sub
xlat
rcr
icebp
outsb
testl
nop
sti
in
mov
ret
cltd
push
fwait
cmc
cmp
fwait
in
fucom
jle
std
pop
sbb
sti
cs
lcall
add
dec
in
add
fucom
xchg
mov
dec
push
pop
fst
adc
out
flds
mov
out
shlb
jns
jecxz
jl
loopne
pop
jo
ljmp
ds
dec
aas
adc
mov
mov
call
in
pop
sahf
jmp
loop
fs
sbb
mov
mov
xchg
notb
rolb
dec
scas
sub
pop
test
mov
cmp
jno
jnp
jbe
test
add
xchg
pop
scas
dec
lods
add
andb
xor
cltd
bound
sub
pusha
inc
stos
pop
inc
mov
aas
inc
in
push
push
in
adc
les
pop
mov
in
mov
adc
push
ljmp
out
fstp
adc
loopne
repz
cmp
aas
inc
mov
push
pop
xchg
cld
mov
rol
cmp
jl
sbb
in
cmp
jmp
or
test
sbb
ds
sbb
jb
lret
and
lahf
xorl
jle
dec
mul
fstpl
xchg
add
stos
xchg
pop
sbbl
inc
mov
xchg
mov
add
lods
sbb
and
stos
out
test
fs
enter
scas
loop
push
shll
bound
xorb
jbe
lret
push
push
mov
sub
outsl
mov
inc
mov
xchg
push
sbbb
xor
pop
mov
jp
xor
and
dec
enter
mov
pop
mov
jecxz
in
out
push
mov
add
outsl
je
inc
jp
fdivrs
add
dec
xchg
cmp
sub
aam
repnz
loop
in
add
les
movsb
ret
or
mov
jp
xor
ret
fbld
ret
pop
jp
sbb
cld
lock
cmp
test
push
out
pop
insl
dec
out
test
jmp
lcallw
ret
jbe
les
in
out
in
or
add
popf
mov
inc
jae
push
pop
loop
push
push
call
inc
mov
lds
adc
mov
sbbb
pop
xchg
ret
aaa
es
test
les
es
fwait
add
and
mov
gs
jge
mov
ret
sub
fists
les
ret
and
jle
jo
insl
push
clc
push
pusha
in
and
movsl
lcall
xchg
shr
scas
cmp
lret
mov
ds
xchg
das
add
xlat
mov
cli
cmp
xchg
nop
icebp
xor
ljmp
fdivr
xor
in
jecxz
mov
xchg
rcrb
jmp
rorb
lods
pop
outsl
sbb
inc
add
cltd
xor
int
xchg
adc
aam
stos
out
xlat
icebp
mov
sub
push
mov
shlb
jge
xchg
lret
daa
lock
test
sbb
addr16
push
imul
sub
pop
loopne
xlat
mov
sbb
lret
mov
xchg
iret
and
gs
pop
push
out
ja
add
lock
xchg
test
js
shlb
jmp
and
pop
mov
lcall
mov
add
mov
or
mov
pop
add
cmpsb
les
outsw
sub
imul
negb
neg
lods
int
call
dec
call
xor
imul
mov
add
out
ret
ljmp
insl
sbb
cmc
lret
ret
xorl
stos
lcall
out
test
push
sub
lods
lock
xor
lods
neg
pop
jnp
jecxz
insl
es
push
dec
push
or
shl
movl
stos
rorb
repnz
mov
out
movsl
lods
fs
adc
mov
mov
add
mov
xchg
push
out
in
scas
jmp
call
fcmovbe
mov
sti
jb
mov
arpl
and
lret
inc
xchg
fiaddl
loopne
test
loope
orb
pop
call
pop
cmp
push
jno
mov
pop
imul
addl
inc
pop
mov
into
nop
xchg
xor
or
das
in
lea
out
sbb
scas
cld
and
icebp
jbe
adc
mov
lahf
fsubrs
in
sbb
hlt
or
out
jge
int
mov
and
mov
mov
push
adc
pop
add
adc
out
mov
pop
in
imul
mov
push
sti
xor
pop
fsubr
jbe
std
jl
ljmp
sbb
push
cmc
in
push
push
stc
add
ljmp
out
neg
mov
in
push
xor
call
aad
sbb
mov
dec
cmp
xchg
xchg
sub
lahf
addr16
push
jmp
stos
mov
cmp
jno
or
jbe
pop
push
adc
fsubs
addr16
js
pop
pop
leave
jnp
pushf
jecxz
mov
xchg
xor
out
shll
adc
jae
add
aad
stos
js
jl
jne
loop
sbb
gs
aam
arpl
lds
out
push
fmuls
out
push
js
hlt
mov
in
push
into
add
cli
jg
pop
or
pop
cli
pushf
dec
push
add
int3
test
stos
stc
leave
or
lods
mov
add
adc
cli
stos
lods
or
loope
jbe
adc
pop
jg
mov
sti
insl
sbb
bound
cmp
cmp
or
lods
sub
loop
cmp
mov
add
mov
cltd
or
jb
jl
sub
pop
and
push
sbb
push
enter
mov
xchg
loopne
pop
sub
sahf
push
imul
gs
ffree
inc
sub
lret
or
cwtl
push
int
mov
lahf
xchg
int3
mov
mov
sarb
lahf
inc
push
sub
les
test
ret
cmc
or
out
jmp
sbb
xchg
ds
pop
add
sahf
jae
xor
xlat
sbb
or
mov
xchg
out
fnstcw
jp
les
lret
sbb
pop
stos
pop
push
arpl
sbb
xor
int
mov
ja
out
je
and
std
push
and
xor
imul
scas
cs
fucom
mov
mov
mov
not
add
sub
jae
pop
ljmp
jns
outsb
mov
sbb
jp
hlt
lods
mov
cmp
gs
pop
sub
rcr
jmp
xlat
iret
addr16
push
jp
fimull
popf
pop
dec
dec
inc
mov
push
pop
xor
mov
ljmp
popa
cltd
sbb
and
out
sti
jg
call
sbb
jl
out
out
int3
mov
xchg
mov
ss
fistl
pusha
fwait
push
ret
les
stos
outsl
push
ljmp
sbb
mov
out
or
imul
jl
hlt
xchg
ljmp
lret
push
call
xchg
ljmp
or
clc
push
add
dec
push
mov
cwtl
pop
jnp
ret
or
mov
xlat
stos
mov
enter
mov
xchg
js
stos
imul
xchg
cmpsb
test
int3
loop
or
rep
loopne
test
pop
sbb
stos
jo
pop
xor
or
jo
sub
movsb
dec
xor
jnp
pop
addr16
inc
stos
or
aas
mov
xor
popf
or
fistps
test
mov
pop
dec
pushw
mov
cwtl
lret
ds
push
fmul
sbb
add
ret
sbb
ljmp
jo
sbb
aam
aas
jmp
fbstp
pop
cwtl
arpl
stos
sbb
jbe
popf
mov
cs
mov
pop
adc
jle
pop
fnstsw
mov
adc
push
inc
mov
push
xchg
arpl
cmpsl
sarb
rcll
loopne
push
cs
sarl
aad
jp
sub
outsl
add
out
push
outsb
xor
repz
lock
bound
mov
pusha
xchg
out
cmp
ds
inc
and
pop
std
ret
xor
aas
pop
add
inc
out
pop
dec
push
or
cwtl
aad
jb
sbb
addr16
fcoms
fldl
mov
push
call
out
sbb
mov
imul
push
cld
dec
add
movsb
sub
daa
jecxz
mov
mov
pop
mov
cmc
and
inc
and
stos
ror
outsb
jae
xchg
cld
or
or
test
lea
or
push
insb
inc
mov
insb
push
fs
push
dec
push
sub
and
cwtl
xlat
inc
test
and
jmp
pop
sub
sub
dec
mulb
pop
jnp
movsl
mov
loope
je
lods
iret
clc
xchg
sbb
xchg
jne
shlb
mov
xor
xor
test
out
stc
cmpsb
or
or
repnz
or
jl
sahf
loop
js
out
jae
cli
or
pop
fstl
repnz
movsl
aad
jp
imul
sbb
fdivrs
jnp
jge
and
cli
mov
insl
push
lock
idiv
cmp
inc
add
ss
sub
cmp
xchg
in
push
out
cwtl
call
std
xchg
and
scas
mov
scas
fcoml
pop
loope
daa
xchg
add
test
sub
cmpsb
sub
add
dec
jmp
or
pop
push
test
nop
xchg
lea
jge
ljmp
in
test
xchg
clc
jecxz
imul
jl
ljmp
out
pop
leave
popa
data16
pop
push
jo
pop
sub
loop
mov
shl
into
subb
push
pop
stos
lret
fxch
arpl
imul
cld
popf
out
fmulp
or
lret
ds
out
sub
sbb
shl
out
jno
adc
mov
or
sbb
push
mov
dec
sub
push
mov
hlt
xor
mov
fadds
loop
sub
fisubrs
mov
mov
or
out
stos
inc
push
mov
es
inc
xor
es
add
and
jae
pop
and
dec
imul
xor
mov
adc
loopne
and
loop
ja
loope
push
lcall
icebp
and
or
cmp
mov
and
mov
into
xchg
out
mov
inc
ja
sar
adc
xchg
pop
movsb
data16
out
push
sbb
inc
scas
cmp
jp
icebp
cmp
rol
cmovno
mov
mov
push
pusha
repz
out
or
jle
xchg
and
xchg
and
andl
out
mov
outsb
and
dec
sub
int
movsb
sbb
pop
cmp
in
sarl
push
vpunpckldq
pop
jp
outsl
ds
sbb
loop
loopne
nop
popf
loop
lahf
cld
dec
pop
dec
xchg
mov
inc
out
cmc
notb
lcall
dec
call
pop
shll
nop
sub
test
scas
cli
adc
shl
fidivs
add
movsb
xchg
dec
sub
mov
xchg
rcl
andl
nop
sbbb
push
pop
jnp
push
js
add
loopne
idiv
ret
fcmovbe
out
int3
lcall
push
loopne
or
shl
cs
fmulp
fbstp
jecxz
cli
sbb
sub
inc
dec
loope
xor
fnstcw
jmp
push
in
xchg
pop
insb
lods
out
jp
push
pop
xor
outsl
jbe
loop
std
mov
inc
pop
lret
push
mov
dec
fbld
fldenv
iret
jmp
or
xor
cmp
pop
xor
arpl
inc
ds
popf
std
add
jp
inc
add
jmp
dec
cmp
and
cmp
in
dec
dec
add
sbb
ret
mov
push
test
loope
aaa
es
movsb
sbb
pop
shrb
scas
arpl
inc
movsb
ds
add
mov
into
das
or
cli
or
int
adc
stc
in
sbb
adc
bound
xor
adc
test
push
mov
jge
hlt
mov
jnp
adc
aam
mov
jb
lcall
jmp
inc
les
add
jp
fisttpll
pop
pop
ret
shlb
xor
cmp
mov
int
xor
in
or
fnstcw
mov
and
in
fcom
in
push
cli
lds
mov
scas
or
jo
ja
jmp
or
xor
jge
adc
test
add
loop
outsb
fcoms
out
mov
mov
sub
sub
sbbl
repnz
in
ljmp
stos
sahf
sti
insl
dec
fisubrl
adc
dec
leave
push
lods
sbb
ds
fprem
fidivrs
fcomps
pop
jno
cmpsl
inc
imul
pusha
ror
insb
inc
jae
mov
lret
or
pop
and
lahf
shr
xchg
xor
cli
or
stos
sub
test
clc
or
pop
add
movsl
outsl
cli
int
inc
sub
ret
mov
es
jae
jg
or
imul
test
aas
int3
shrb
inc
dec
ret
push
pop
roll
jb
cs
dec
push
pop
cltd
mov
mov
sahf
push
test
sti
insl
push
mov
push
fmul
es
sbb
and
out
pop
sbb
iret
mov
loop
out
loope
das
adc
inc
les
xchg
jmp
ret
sahf
mov
xchg
mov
pop
orl
in
mov
ret
popa
pusha
jg,pt
lcall
add
sub
jl
fstpt
push
add
scas
cli
jb
sub
lret
jmp
jp
jl
jg
lds
and
add
popa
cmp
pop
jbe
xorb
movb
xchg
adc
pushf
pop
imul
xchg
xchg
sub
xchg
mov
push
pop
test
das
or
pop
gs
mov
aad
icebp
add
sbb
test
jl
stos
mov
mov
arpl
negl
mov
es
out
xchg
sbb
inc
or
mov
ret
inc
movsl
iret
xor
push
loopne
ss
cltd
jbe
xchg
inc
sub
lock
push
shl
insl
mov
pop
lret
pushf
arpl
dec
dec
jnp
hlt
jmp
fdivl
bound
popa
idiv
cmp
leave
repnz
and
sbb
ret
popf
imul
or
add
push
cmp
das
and
imul
mov
jb
jno
sub
in
sbb
or
sub
test
sub
xor
nop
bound
pop
push
add
xor
bound
insl
lea
inc
mov
add
les
testl
xchg
out
stos
inc
xlat
pushf
movsb
ljmp
mov
sbb
ficompl
pop
fsubl
jp
lcall
fstl
push
clc
add
mov
cmp
mov
clc
dec
pop
jl
repnz
lcall
adc
int
in
and
mov
inc
rorl
pop
jb
lock
sub
js
insb
cs
jp
scas
xlat
stos
and
jno
xchg
std
mov
loope
ljmp
aaa
xchg
jg
dec
call
aam
push
pop
mov
lds
jp
jbe
imul
loop
pop
and
sbb
fdivrs
fisttpll
les
and
fucomp
jno
and
pop
inc
ror
mov
into
mov
mov
or
xlat
fs
lea
mov
or
adc
or
xor
mov
paddsw
xchg
cli
inc
add
lock
pop
cmp
rcrb
mov
ljmp
push
jge
mov
imul
add
repz
stos
adc
cmc
cs
in
ret
jnp
outsb
ja
sub
cmpsl
push
rcrl
and
dec
leave
jge
imul
ljmp
and
out
push
clc
mov
inc
ljmp
clc
mov
or
and
push
ljmp
cli
lcall
insb
or
jnp
add
jecxz
or
testb
mov
shr
outsb
ficomps
mov
lahf
fcomp
fimull
outsl
ret
xor
add
cmpsb
cmp
faddl
sub
into
loopne
cli
xor
daa
ficompl
mov
mov
loopne
ss
cltd
loope
out
inc
mov
add
aam
mov
fbstp
jnp
scas
lods
imul
xchg
sbb
fldl
into
cmp
fists
pop
xor
and
out
sub
pop
sub
fcmovb
mov
sbb
sbb
loop
mov
leave
lea
mov
aad
adc
arpl
stos
pop
jmp
cwtl
insl
pop
rolb
sub
jb
sub
rcrl
inc
popa
jae
cmp
ret
addr16
loopne
inc
mov
or
jo
inc
adc
ljmp
in
repnz
clc
mov
or
jbe
inc
adc
add
add
repnz
cmp
stos
lea
mov
ss
insb
xchg
fistpll
iret
sub
clc
aam
cltd
fidivl
cmpsl
data16
mov
in
dec
jl
ret
aas
pop
xor
jbe
shll
xlat
pop
mov
cwtl
sbb
xchg
int
loop
cwtl
mov
inc
mov
fwait
pop
addl
fs
mov
sub
mov
xor
fs
push
test
sti
xorb
cld
sti
cmp
sbb
mov
es
pop
sub
insl
pop
int
jmp
pop
stos
xchg
out
dec
in
xor
jl
clc
inc
sti
std
cmp
fs
push
push
andb
out
clc
fs
adcl
jecxz
or
call
in
scas
or
negb
push
fadd
sbb
fdivs
inc
jl
lahf
sub
sbbb
daa
stos
lods
aas
sub
roll
scas
pop
push
scas
in
xchg
cld
pop
xchg
lock
pop
mov
mov
push
inc
lcall
add
adc
pop
outsb
dec
imul
push
cs
and
cli
push
pop
or
pop
add
xchg
xchg
inc
cmp
dec
mulb
call
mov
imul
clc
pop
ds
out
movsb
mov
xlat
cld
adc
xchg
mov
adc
mov
arpl
loop
es
shrl
fdivrs
and
jns
or
fld
rcll
hlt
and
loop
fisubl
ror
ss
pop
in
addr16
dec
rclb
sbb
fistps
or
stos
push
xchg
cmp
sbb
stos
imul
aaa
mov
not
lock
ret
pop
subl
mov
in
ljmp
jae
sub
mov
lret
cli
pushf
and
sbb
fxch
xchg
pop
adc
test
add
shr
scas
xor
and
cmp
jle
or
sub
insb
ret
mov
add
sbb
xor
leave
sahf
stos
mov
mov
push
aam
fstl
js
dec
sbb
call
mov
sub
ljmp
mov
ljmp
out
xor
js
arpl
cmp
pop
adc
lods
mov
jae
cs
imul
pop
sub
mov
aam
mov
push
sbb
jo
sbb
or
add
sbb
cmp
sbb
lahf
jge
dec
jge
sub
call
loope
adc
push
xchg
repz
jnp
mov
sub
adc
je
loopne
lds
xchg
sbb
js
jne
cmp
out
sbb
popf
dec
insb
inc
cmp
fwait
dec
jns
push
or
add
add
fcompl
repnz
xchg
scas
adc
in
mov
imul
mov
dec
ja
cmc
jmp
mov
mov
in
dec
ljmp
sub
adc
lods
mov
push
pop
dec
jmp
cmp
mov
cmp
mov
std
repnz
or
movsl
enter
ljmp
sub
inc
mov
loopne
aas
popf
push
in
rol
xor
mov
stos
or
mov
inc
js
sub
sbb
xchg
xchg
push
sbb
cs
push
xlat
ss
or
call
xchg
outsb
mov
xchg
xor
movsb
jg
fwait
cltd
ljmp
mov
mov
cli
les
dec
mov
ret
mov
jbe
jbe
imull
sub
cli
in
in
in
aam
inc
clc
clc
jle
lahf
lret
inc
bound
shlb
imul
cld
cmp
cli
data16
enter
mov
orb
jmp
mov
stos
inc
in
scas
mov
jnp
insb
aad
inc
lcall
ficompl
jns
ss
sub
in
repnz
jae
sub
mov
pop
test
clc
cmp
bound
push
int3
subl
test
dec
mov
fidivl
enter
stos
cmc
and
or
cs
in
add
xchg
je
cld
cwtl
cmp
sti
push
cltd
sub
mov
daa
jg
push
icebp
pushf
xchg
mov
jb
jge
sti
inc
mulb
fnstcw
insl
mov
add
xor
out
outsb
cmp
mov
cld
cmp
ds
fdiv
pop
sub
out
and
lods
inc
movsb
test
lods
movsl
jp
lret
cmp
ss
out
adc
mov
mov
xchg
jp
shl
mov
mov
ret
les
mov
mov
xchg
cmp
in
les
js
sbb
data16
std
jo
or
in
ja
jnp
test
test
pop
jecxz
pop
cli
xchg
dec
nop
je
cmp
sar
xor
xchg
out
movsl
push
mov
pop
jl
out
imul
mov
cmp
in
dec
loopne
mov
fcmove
movsb
push
repnz
fs
loopne
icebp
jnp
int
cmp
iret
popf
testl
out
add
jmp
sub
and
xchg
fimuls
lea
push
pop
into
dec
lret
dec
mov
sbb
lods
and
or
nop
bnd
push
je
daa
stos
or
insb
rcr
sbb
cld
dec
and
stos
xchg
or
xor
mov
dec
dec
pop
sub
push
add
addr16
pop
push
pop
pop
in
jp
loopne
gs
mov
xchg
push
mov
add
lods
xor
push
je
and
pop
and
stos
or
mov
shll
mov
cwtl
xchg
fisttpll
les
add
lea
mov
pushf
or
das
jnp
add
in
xchg
pop
xchg
nop
stos
jg
enter
bound
mov
mov
fists
sahf
nop
mov
adc
clc
sbb
insl
loope
xor
xchg
lret
dec
loopne
lods
stos
mov
inc
clc
add
pop
xor
rol
loopnew
cmc
sub
fnstsw
nop
jecxz
fidivrs
insl
mov
adc
outsl
addl
mov
les
xchg
push
xchg
pop
stos
add
popf
in
inc
xor
iret
cmp
in
jbe
dec
xchg
loopne
out
sbb
xor
lret
ss
loop
int3
in
sahf
mov
xor
lcall
xchg
dec
icebp
pop
sbb
jbe
xchg
sub
push
in
and
ret
icebp
loope
insl
call
cmc
pop
xchg
sub
scas
mov
cmpsl
into
or
enter
xchg
and
repnz
mov
and
dec
xor
pop
pop
addr16
inc
xchg
outsb
cmp
popa
popf
push
psubd
lret
outsb
mov
in
aam
cld
mov
jno
push
push
rorl
add
mov
out
pop
adc
daa
adc
sub
sub
ds
inc
pop
aaa
push
dec
or
sti
stc
addl
xchg
aad
sarb
mov
or
pop
push
je
and
xchg
xchg
jl
imul
aam
lock
xchg
int3
sbb
cs
lds
gs
xchg
mov
out
lods
cli
loopne
aam
jnp
sar
pop
lock
mov
and
call
pop
lods
add
fstps
andb
pop
jle
jg
xchg
jbe
aas
cli
jmp
fdivrs
in
loop
xchg
sub
jns
adc
xchg
filds
dec
mov
jno
jecxz
fistpll
mov
push
lods
out
or
lods
mov
ljmp
movsb
xchg
fcmovbe
imul
loop
or
sbb
shll
mov
jb
push
pop
movb
ficompl
fiadds
lods
jbe,pt
jg
ficompl
lock
pop
daa
lock
shrl
loop
leave
xchg
adc
mov
xchg
mov
sub
jg
pop
inc
les
pop
loope
mov
adc
test
xlat
or
xor
xor
push
xor
cmp
clc
sahf
sbb
mov
jl
lock
nop
fcmovb
enter
pop
js
sbb
test
adc
lret
cli
lds
add
std
je
in
mov
clc
pop
outsl
pop
cmp
fcompl
punpckldq
pop
outsb
stos
fld
pop
test
fnstsw
cwtl
popa
pop
push
dec
jb
push
xor
jmp
pop
ss
push
movlps
adc
jno
xor
sbbb
or
mov
lock
fcmove
lods
ret
out
xchg
sbb
mov
or
jle
jp
dec
jmp
out
mov
xlat
pop
imul
mov
sbb
cwtl
bound
scas
cmp
jecxz
push
add
iret
aam
dec
mov
out
in
cmp
mov
stos
xor
imul
and
mov
jge
bnd
fwait
mov
xor
out
bound
cmp
dec
add
icebp
xlat
sbb
shlb
dec
push
movsl
jne
insb
pop
mov
pop
inc
jno
cltd
leave
insb
das
fistl
inc
xor
lock
rclb
nop
fcomp
mov
mov
mov
and
sbb
out
mov
cmc
cmp
insl
inc
add
lock
push
dec
jg
mov
mov
andl
sbb
cmp
loope
dec
mov
rolb
mov
inc
xchg
or
jne
cli
fisttpll
push
pushf
sbb
lahf
mov
dec
cs
push
loope
and
leave
jbe
call
mov
push
jecxz
mov
mov
fsubs
bound
pusha
mov
outsl
mov
jb
xchg
pop
scas
les
repnz
test
addr16
cmpsb
out
mov
pusha
dec
mov
mov
adc
mov
je
in
mov
ja
jle
cwtl
pop
cmpsl
arpl
add
fisttps
scas
pusha
cwtl
pushf
enter
inc
mov
inc
and
add
mov
shrb
arpl
fwait
xor
clc
rol
arpl
sub
inc
data16
push
imul
add
and
jnp
cmc
push
aaa
arpl
jge
in
xor
add
jmp
popf
lods
hlt
js
out
push
mov
dec
cli
dec
js
jecxz
and
xor
js
sub
mov
push
jmp
xlat
aas
push
cmp
xchg
jecxz
out
adcb
insl
bound
cmp
stos
add
pop
pop
mov
loope
movsb
ret
out
scas
mov
cmpsb
les
dec
jb
enter
push
add
push
pushf
inc
ret
pop
das
or
pop
mov
mov
outsb
or
enter
xchg
and
lret
pop
sub
mov
adc
mov
popa
xchg
loopne
lock
mov
lods
mov
pop
lods
pop
xchg
enter
jnp
or
dec
mov
shrb
out
or
lret
mov
adc
lods
inc
sbb
std
insl
lods
ljmp
out
cwtl
dec
fadds
sbb
jp
stos
mov
cmp
daa
jnp
lods
or
adc
les
mov
call
mov
push
addr16
fmulp
and
push
xchg
mov
cmp
movsl
push
repz
push
pop
es
inc
ficoms
stos
sub
push
mov
push
mov
sbb
in
in
pop
sbb
push
int
mov
push
shrb
fs
or
ss
out
cltd
dec
mov
insb
daa
ljmp
inc
in
cmp
pop
cld
into
sbb
cmp
push
mov
adc
divb
iret
inc
stc
mov
daa
add
test
mov
fstl
mov
in
int
push
in
stos
in
aas
fdiv
sub
mov
aas
fsubrl
popa
mov
lret
loope
sbb
fidivrl
out
push
mov
cmp
lock
pop
test
cmp
push
cmp
aam
dec
inc
jecxz
pop
add
out
dec
pop
sbb
or
lcall
lods
pop
insb
sbb
into
jnp
push
rclb
lret
cli
outsb
and
int
mov
add
inc
or
xchg
jo
or
nop
iret
jb
adc
jo
push
cmp
jp
push
bound
fcmovu
xor
insl
adc
stc
mull
fldenv
scas
jge
adc
mov
dec
mov
jl
inc
xchg
or
in
fmul
sbb
sub
and
js
cmpsl
popf
add
and
cmp
mov
jl
dec
lret
xchg
out
stos
xor
push
lods
or
btc
pop
and
pop
sahf
ret
mov
lret
cld
outsl
fucomip
shr
cwtl
mov
sbb
jo
pusha
out
cmp
and
vfmsubpd
push
cmc
mov
mov
clc
push
jb
loop
popf
sbb
cmp
loopne
mov
xor
leave
or
clc
movl
je
lock
sub
dec
es
push
sub
dec
inc
lods
test
arpl
sbb
fsubl
adc
adc
loop
jp
mov
stc
mov
dec
cmc
int3
repnz
push
mov
jg
dec
and
cmp
icebp
and
loope
sub
and
insb
sbb
enter
adc
sub
orb
scas
sahf
push
out
push
ret
imul
xchg
jnp
std
push
sub
jmp
sub
fcmovbe
fisttps
add
sub
leave
jge
data16
stos
fwait
push
sub
or
lods
pusha
jge
jmp
cld
or
lahf
add
xchg
jg
sti
lock
cltd
cld
shll
adc
mov
call
add
gs
icebp
pop
mov
mov
in
cmc
in
jle
loope
jp
push
sti
or
cmc
sbb
stos
pop
dec
mov
sub
fs
xchg
imul
sub
pop
sar
das
adc
popf
test
sbb
out
in
es
bound
out
and
fucom
mov
out
fcmove
out
cmpsl
jnp
mov
lret
pop
mov
jmp
ret
cmpsl
je
lds
loop
dec
jge
mov
dec
psadbw
sbb
cmp
dec
icebp
cmc
fadd
xor
sbb
out
pop
push
imul
in
cmp
in
xorb
pop
inc
xchg
sub
mov
sarl
in
push
cmc
out
into
push
push
das
hlt
je
jl
xchg
push
push
and
sti
push
pop
stos
test
pop
dec
mov
xchg
cmc
mov
jp
and
outsl
test
and
test
bound
js
jp
inc
push
cmp
loopne
dec
inc
push
repz
clc
repz
add
loope
sbb
in
test
sbb
ljmp
hlt
inc
stos
or
test
mov
dec
fsubrl
fisttpll
repz
ljmp
xor
int
mov
dec
inc
lock
cmpsb
out
mov
push
sub
add
ljmp
sbb
add
stos
call
push
cmc
and
cmp
add
sub
hlt
mov
jp
sbb
stos
out
jmp
xor
imull
in
dec
pop
mov
orb
in
icebp
imul
add
and
cmp
inc
adc
bound
lods
mov
loop
in
loopne
jno
sbb
pop
aad
out
cmc
nop
mov
and
test
out
outsb
pop
xchg
fisttps
loope
divl
jecxz
push
push
add
dec
icebp
add
fucomi
pop
fcmove
out
cmp
sbb
xchg
pop
jmp
or
fcoml
out
add
mov
xor
pop
bound
push
cmp
mov
inc
aaa
adc
mov
cmp
push
fstl
add
les
outsl
movsb
push
std
add
jb
dec
lods
sbb
out
or
rcrl
js
pop
bound
imul
pushw
push
xor
popf
testb
push
popa
mov
nop
cmpsb
in
or
aad
fsubrs
ljmp
sbb
and
stos
fs
cmp
stc
mov
sub
clc
fwait
sbb
out
pop
fnstsw
test
in
lods
sti
sub
fcoml
jmp
fldl
in
loopne
daa
jno
mulb
mov
out
pop
stos
push
pop
pop
sub
and
sbb
dec
in
adc
cmp
mov
pop
push
pop
or
pop
push
sbb
add
push
jno
mov
les
jecxz
inc
push
inc
pop
stc
stos
push
test
loopne
or
fdivs
mov
jle
push
mov
and
lods
xlat
inc
jge
loop
out
dec
mov
insl
or
pushf
inc
and
mov
sub
outsl
push
cli
pop
sti
push
cvtdq2ps
mov
lcall
les
ret
adc
les
stos
dec
inc
test
or
cmp
jae
sbb
mov
cmpsb
jb
fimull
int
in
stos
enter
fsubs
iret
sbb
repnz
jb
xor
xchg
in
stos
cmp
cmp
sar
dec
clc
cld
pusha
inc
stc
sub
pop
adc
mov
mov
sahf
pushf
push
xchg
push
xor
nop
lret
xchg
les
inc
push
mov
pop
mov
pop
pushf
bound
dec
test
jg
inc
inc
sbbl
xchg
leave
sbb
mov
sbb
scas
outsl
sbb
mov
clc
mul
pop
addr16
sub
jne
out
and
jl
add
dec
inc
jecxz
add
jmp
mov
roll
ret
jg
test
test
xchg
inc
xor
scas
dec
dec
test
and
jmp
mov
lret
rcl
or
repz
cmc
adc
clc
cmpsb
clc
mov
arpl
xchg
bound
js
mov
cwtl
in
mov
push
push
xlat
cmpsb
mov
mov
push
pop
shl
mov
adc
insl
lahf
lret
movb
ffreep
xor
xchg
mov
xlat
in
loopne
inc
outsl
xor
fisubs
clc
in
call
jge
mov
out
jl
pop
fdivs
ret
cmp
xor
xorl
sbb
lcall
add
push
lea
mov
or
and
jns
inc
leave
lea
add
rcrl
stos
loopne
push
xor
or
in
jl
jb
sahf
mov
push
dec
jnp
jp
fists
and
test
ljmp
imull
int
pop
in
push
pop
out
xor
fucomip
clc
in
andb
pop
mov
xlat
xchg
or
cs
jns
ljmpw
sub
bound
movntq
out
mov
test
and
dec
cs
pusha
mov
sbb
std
imul
mov
jnp
xchg
sbb
xchg
jae
sbb
js
adc
sub
push
inc
in
idiv
addr16
add
dec
subl
subb
adc
lret
jl
stos
repz
fldl
fs
lret
xchg
push
sbb
popf
mov
sbb
sbb
push
cwtl
and
scas
cmp
add
sbb
add
inc
in
rcll
stos
adc
sub
pusha
mov
das
divps
rclb
vcvtps2dq
bnd
pop
rcrl
mov
fs
in
fdivrs
fs
test
pop
cmc
sbb
jge
jno
in
jb
sub
hlt
fisttps
inc
sub
add
xor
pop
and
inc
aad
jle
sbb
sub
and
repz
sub
or
popf
shl
cmp
pusha
mov
adc
pusha
xchg
ss
inc
cld
hlt
or
insb
sub
in
js
push
dec
test
jecxz
inc
out
dec
sub
or
mov
pop
xchg
cli
cld
jno
jmp
ljmp
loop
cld
and
popf
lods
bnd
out
lret
push
rcrb
jge
loope
addr16
loope
jecxz
lock
ds
xor
pop
sbb
cli
or
fdiv
adc
pusha
sbb
cli
mov
and
ds
test
xor
clc
ret
out
loop
nop
das
mov
xchg
fldcw
pop
mov
push
inc
arpl
in
adc
fsubrs
mov
mov
cld
jae
bound
ljmp
cmpl
dec
and
sbb
xchg
adc
out
loopne
negl
sbb
mov
xchg
lret
test
insl
cmp
cld
in
mov
fisubs
pop
loop
lea
repnz
aas
pop
mov
decb
push
cwtl
pop
repnz
daa
movsb
div
mov
clc
cmp
into
lret
out
outsb
mov
push
imul
rcrl
pop
or
andl
cltd
sbbb
mov
js
cmp
lods
push
add
inc
cs
mov
dec
inc
repz
fmuls
adcb
dec
scas
add
and
and
lock
imul
push
dec
hlt
push
cld
mov
ss
roll
dec
add
fisttpll
cmc
bound
mov
push
out
pusha
cwtl
jae
stos
lahf
scas
fs
loop
aaa
inc
leave
pop
cmpb
xchg
add
dec
mov
add
sbb
imul
ret
cli
add
loop
inc
mov
jge
jecxz
lods
adc
push
cmpb
add
test
aad
xlat
pop
add
sbb
pop
push
cs
aad
clc
loop
test
in
jle
cltd
dec
sarl
adc
lret
and
pop
cld
inc
fs
arpl
je
push
loope
lock
rcll
stos
dec
jbe
mul
lock
push
fdivrl
dec
das
arpl
roll
cwtl
arpl
and
push
and
cli
rorb
dec
push
xchg
push
or
stc
pop
pop
xor
jo
neg
pop
mov
and
idivb
out
hlt
into
les
addb
cli
and
cmp
in
cmp
jns
les
sbb
aad
add
pop
int
add
cmp
loope
les
cmpsb
pop
outsl
fnsave
inc
pop
sahf
cmpsl
xor
xchg
daa
in
lods
jnp
pusha
cmp
mov
jmp
rorl
in
pop
push
pop
rclb
scas
xchg
dec
fs
mov
in
add
inc
lods
jno
nop
and
xlat
xchg
ljmp
push
stos
ss
jbe
inc
sub
scas
sbbb
xchg
xchg
xchg
int
cmp
inc
xlat
in
cmp
cmpsl
pop
jnp
stos
pop
jecxz
cmp
xor
jle
clc
hlt
loope
repnz
hlt
mov
adc
lds
sbb
jl
andb
fstl
stos
sub
ljmp
cltd
jb
and
cs
cmpsl
ss
dec
jle
jge
mov
push
xor
add
in
ret
push
aas
or
pop
or
jg
outsb
aam
mov
sysret
out
in
or
lods
loope
aas
in
mov
cmp
loopne
adc
dec
in
lcall
fistpll
jae
push
add
in
adc
fldlg2
hlt
push
pop
movb
jge
test
mov
stos
ss
xor
in
sub
fcmovbe
test
or
in
lds
sub
cmp
mov
adc
xor
add
icebp
cld
int3
xchg
or
add
out
adc
out
and
and
or
cmp
bnd
jecxz
push
inc
int3
mov
jnp
movswl
stos
cltd
mov
add
mov
cmp
push
jno
push
dec
fnsave
sarb
repnz
inc
out
mov
hlt
out
cld
ljmp
xchg
lock
test
lea
outsl
sub
xor
stos
loop
push
js
mov
mov
inc
aam
repz
out
sbb
stos
mov
lods
fs
outsl
popa
jno
jl
mov
decb
jnp
pop
lods
pop
xchg
dec
add
loop
je
repnz
out
add
cwtl
sti
adc
cmpsb
leave
insl
imul
xor
icebp
adc
xchg
pop
ret
aam
scas
les
insb
push
jo
add
xchg
fsubs
mov
jno
loop
sbb
fistpl
push
leave
add
jmp
cld
inc
pop
cmp
and
dec
in
xor
pushf
jle
cmp
jl
push
sub
inc
lret
fbld
push
cmc
jmp
adc
ret
cmc
loop
jp
ret
stos
lds
mov
xchg
js
xor
jae
add
adc
sub
sbbb
add
inc
aas
js
mov
in
lcall
into
jecxz
or
sub
data16
add
push
pop
adc
daa
pop
stc
movsb
xor
sub
xor
fbld
ljmp
sbb
lock
jecxz
fstpl
sti
pop
mov
movsb
js
lahf
int
push
out
xor
or
add
sub
pop
jecxz
and
movsb
movsb
cmp
ret
adc
call
dec
jmp
cmp
mov
roll
rcll
popf
and
push
jp
pop
mov
jge
sbb
pop
clc
pop
push
in
xchg
stos
jp
sti
imulb
mov
mov
dec
mov
imulb
pop
mov
jmp
sarb
in
and
scas
outsl
cwtl
pop
cld
xchg
mov
lret
popa
xchg
cli
in
pusha
repnz
pop
cli
ret
or
mov
stc
xor
fistps
test
jecxz
decb
std
xor
sub
and
cwtl
add
cmp
addl
pop
popf
loop
jge
mov
cmp
jmp
loopne
daa
fldz
fsubrs
sbb
pop
pop
lods
loopne
add
jmp
jno
push
ret
sub
jecxz
add
fildll
repnz
sub
inc
lock
and
lock
mov
or
dec
push
and
ret
mov
push
imul
jmp
push
add
sub
sti
sbb
xchg
rcl
xlat
push
insl
fucomip
pop
sub
lock
mov
ljmp
pop
sti
push
fcompl
mov
fsub
cmp
hlt
hlt
cmpsl
clc
clc
in
jp
add
jl
fwait
mov
or
mov
fcoml
ret
lcall
jo
sub
lcall
call
inc
pop
push
add
mov
or
pop
in
add
xchg
or
mov
sarb
out
stos
push
xchg
call
pop
test
xlat
add
leave
push
pop
mov
cltd
icebp
fwait
or
dec
fld
xchg
dec
idivb
push
push
out
mov
sub
negb
mov
fnop
in
sbb
incb
pop
cli
leave
cld
loop
push
mov
push
fimuls
cmc
jecxz
add
xchg
out
sub
pop
hlt
add
lock
push
inc
popa
aaa
mulb
pop
jp
sbb
leave
aas
sub
aad
or
xor
lock
aaa
arpl
lds
rcll
in
add
xchg
clc
subb
ss
lods
leave
sub
push
pop
push
mov
shrl
lods
sti
cmpsb
sar
jge
add
inc
scas
jnp
sahf
fs
cli
mov
arpl
pop
sahf
lea
or
fwait
xchg
in
xchg
cmp
add
xor
jle
adc
mov
push
popf
into
push
adc
inc
pop
ljmp
aaa
or
pop
xlat
lods
andl
jae
ja
xor
mov
rcr
icebp
lods
shl
pop
out
xchg
sbb
clc
mov
dec
sbb
push
sbbl
adc
push
dec
in
insb
iret
bound
mov
lock
xchg
and
lods
fbstp
xor
pop
bound
insb
bound
push
dec
fstl
add
shll
mov
or
jge
mov
fdivl
mov
scas
fwait
scas
xchg
jle
jnp
mov
cwtl
inc
sahf
xor
sub
ret
insb
cld
cmpb
lock
jl
cmpsl
mov
xchg
cmp
aam
fisttpll
data16
push
cld
loopne
or
stos
rcrl
push
jg
add
insb
clc
mov
xchg
sti
call
mov
into
or
push
fbstp
fldenv
xchg
push
sub
ffreep
xchg
repnz
insb
ret
test
lret
adc
mov
sub
lcall
imul
cli
mov
or
adc
mov
sbb
and
xorl
push
cs
xchg
filds
in
fdiv
pop
int
sub
call
mov
loop
movsl
out
popf
mov
dec
popa
stos
sub
fwait
cmc
call
mov
dec
sbb
dec
xor
call
push
dec
xchg
and
push
bnd
popa
sub
push
iret
inc
or
mov
cmp
stos
outsb
push
nop
mov
xchg
repnz
mov
mov
in
mov
gs
sbb
rcrb
cmc
pusha
or
loopne
pushl
push
scas
xlat
and
inc
ljmp
pusha
adc
fidivl
sbb
xlat
jecxz
loop
in
xor
push
push
push
stos
out
push
je
add
inc
into
cmp
pop
cltd
stos
mov
jb
mov
jns
xlat
push
push
sbb
insb
mov
xchg
fidivs
rcl
mov
inc
inc
cli
cmpsb
cmp
movsl
xchg
cs
clc
lahf
into
lock
jle
xor
in
sti
popf
mov
push
in
xor
cmovo
add
or
inc
fcomip
add
or
addl
jl
mov
sbb
mov
pop
cmp
popf
inc
xchg
fadds
xchg
jl
into
call
test
test
ret
insl
sub
pop
push
les
je
xchg
in
mov
add
jnp
jge
movsb
bnd
ds
ficoml
pushf
and
push
sbb
outsb
dec
push
neg
pop
cmpsl
xchg
and
push
sbb
xchg
mov
xchg
bound
inc
in
fnstcw
cwtl
push
cmp
mov
movlps
cld
pop
scas
sbb
lahf
xor
push
sarl
in
dec
sti
fstpt
aam
clc
pop
or
and
lahf
jbe
push
adc
and
jnp
jp
xchg
clc
mov
aam
lea
cbtw
stos
mov
push
idiv
andl
sub
cmpsl
adc
cmp
insb
adc
mov
mov
dec
lods
adc
fwait
mov
xor
rcrl
xor
jg
ss
adc
sub
aaa
sbb
mov
fsubrs
and
popf
cltd
jge
pop
in
push
test
mov
cld
out
xorl
ds
lds
mov
lret
imul
imul
ss
mov
mov
icebp
mov
jns
pop
add
ja
inc
xor
or
add
pcmpgtb
mov
fidivs
aas
or
in
repz
sub
add
sbb
fwait
add
fnstenv
and
jecxz
fsubrs
jne
push
loope
int
and
fimuls
rcrb
mov
add
or
mov
xchg
cs
jae
push
inc
in
mov
mov
or
movsb
std
shl
lods
mov
stos
adc
data16
or
inc
dec
test
lea
dec
cmp
stos
and
mov
mov
in
xchg
gs
imul
xchg
and
cwtl
or
rcrl
xlat
sub
xchg
dec
es
jb
dec
test
and
push
in
xchg
int
mov
sub
jg
pop
cli
loop
ret
cmc
pushf
dec
inc
pop
xchg
lret
aam
je
iret
sub
push
aas
bound
or
call
cwtl
icebp
addr16
or
lods
imul
mov
adc
pop
xchg
out
dec
bound
sbb
lds
call
cmpb
sub
xchg
les
xchg
adc
and
insb
sub
dec
cltd
in
std
xchg
test
test
std
sbb
mov
lret
xlat
sbb
ljmp
pop
ljmp
sub
stos
ljmp
cmc
dec
xchg
loop
inc
int3
add
sub
fld
dec
test
aad
stc
mul
push
jp
xor
fstp
icebp
repnz
in
push
loope
das
jge
les
xchg
or
bound
in
mov
and
arpl
xor
pop
mov
fsubrl
loop
and
or
jle
dec
jg
arpl
push
sub
cmp
mov
lock
jo
arpl
pop
jns
sbb
jl
mov
fstps
sub
inc
movsb
mov
je
ljmp
stos
ret
shlb
popa
jp
in
jl
mov
add
pop
jnp
dec
in
movsl
test
xlat
out
mov
sub
adc
mov
lods
in
jle
daa
mov
lret
arpl
insb
push
inc
movsl
and
mov
adc
pop
pop
loopne
or
clc
in
loope
loope
lock
mov
adcb
mov
push
je
sub
imul
sub
ljmp
shrb
pop
add
mov
push
mov
jo
cmpsb
xchg
mov
mov
inc
in
lea
pop
sbb
les
leave
and
stos
test
mov
cmp
dec
arpl
push
push
loop
mov
mov
dec
ja
adc
aam
sub
pusha
or
jle
iret
arpl
add
xor
int3
repnz
push
mov
movsl
pop
mov
sti
push
jge
lods
in
lahf
add
xchg
stos
add
push
push
loop
pop
imul
enter
push
mov
and
pop
sbb
adc
mov
test
insl
push
mov
mov
dec
fsubrs
sar
ficompl
inc
mov
inc
xchg
ret
adc
push
cmp
mov
add
ss
fucomp
lock
shrl
lret
scas
jb
adc
fcomi
repnz
dec
pop
out
xchg
jno
popf
shlb
sub
mov
jns
imul
pusha
and
sub
cwtl
and
and
push
lcall
ljmp
ds
fdivr
and
jg
jl
add
outsl
add
fldl
jbe
aam
loop
dec
int
outsl
dec
imul
lock
imul
dec
cltd
pop
xchg
cli
in
ja
sbb
loopne
push
pop
mov
lock
in
subl
out
xchg
popf
and
lock
mov
xchg
outsb
add
adc
pop
cmpsb
jnp
xor
insb
cld
in
or
jns
or
frndint
lcall
shll
mov
jnp
rol
loope
xchg
lret
sub
jb
sbb
inc
mov
jne
jbe
jg
call
xchg
mov
repnz
shll
sti
test
pushl
add
xor
add
sub
lods
mov
icebp
test
addr16
ljmp
aaa
sbb
and
push
mov
int3
call
das
mov
fldcw
subl
push
sbb
repnz
sub
shll
or
scas
sarl
or
xlat
mov
insb
test
or
add
pop
or
xchg
cmp
mov
jp
outsl
mov
cmp
cli
dec
inc
orb
in
cld
lods
xlat
lds
loop
mov
call
fsubrp
push
push
test
pop
push
ret
cmpsl
filds
dec
or
bound
cmpl
nop
push
loopne
fwait
rolb
shrb
sub
icebp
loop
xlat
cmc
insb
in
add
loop
pusha
flds
mov
jl
in
adc
pop
jmp
ss
dec
cld
cmp
aas
mov
mov
inc
cmc
adc
inc
pop
popl
bnd
push
lret
pop
loope
jbe
sub
sbb
add
mov
mov
into
insb
mov
mov
add
inc
daa
shrb
std
popl
xchg
ljmp
sahf
sbb
jl
lock
in
add
add
or
daa
push
sbbl
mov
icebp
hlt
xchg
jp
mov
mov
mov
in
jns
ret
or
or
xlat
add
cmpb
mov
pop
push
jnp
pop
mov
or
mov
pop
mov
mov
mov
push
xlat
mov
cld
dec
les
and
imul
dec
testb
xlat
cli
mov
pop
lcall
bound
ja
mov
leave
lahf
jge
xchg
shrb
call
aad
cltd
and
or
loope
loop
mov
xor
dec
rcrl
mov
mov
insb
icebp
les
jne
xor
pop
mov
push
lea
push
ja
push
stos
es
push
and
repnz
ret
jg
xchg
lock
inc
lret
add
in
ljmp
xchg
mov
dec
sbb
sbb
out
js
or
dec
inc
mov
dec
aad
dec
jle
sti
inc
or
push
inc
inc
scas
and
call
mov
popf
sahf
aas
jo
mov
mov
push
inc
lods
xchg
daa
cmpsb
shll
mov
dec
lret
ljmp
mov
inc
cmc
mov
jo
dec
mov
dec
sub
xchg
mov
dec
mov
movsb
mov
lods
mov
add
pop
repnz
xchg
and
fnsave
dec
clc
jmp
arpl
sub
mov
mov
push
jbe
and
das
pushf
popl
stc
lock
xchg
add
mov
or
out
test
mov
push
in
je
fnstcw
out
fwait
out
fdivl
xchg
jge
mov
pop
and
mov
fstpl
test
adc
hlt
fisubrl
loopne
ret
fcompp
jmp
div
aam
xor
loop
mov
push
sbb
cmc
cmp
fwait
xor
inc
jb
mov
clc
xchg
jo
test
jecxz
and
lea
das
add
adc
ret
int3
in
loope
fwait
or
rolb
sbb
mov
sbbl
jbe
flds
data16
leave
jg
subb
in
sbb
ljmp
cmpsl
or
jge
mov
cmpsl
repz
jbe
loope
fwait
data16
lret
inc
jg
lret
pop
stos
icebp
cmp
mov
dec
in
out
mov
mov
mov
jl
add
cld
cmp
push
mov
ror
or
sub
add
test
aad
mov
cli
sbb
es
add
loope
aam
fidivrs
sti
push
xor
shll
bound
frstor
push
mov
xlat
push
push
lea
add
mov
mov
out
ret
xorl
and
jge
xchg
rolb
or
aad
outsb
ljmp
test
sub
dec
leave
mov
adc
ja
inc
or
pop
mov
das
lock
es
cmpsl
sub
js
push
in
ret
ror
mov
add
mov
loop
jnp
sti
out
in
ret
jl
mov
loop
jg
insb
test
test
sub
test
xor
and
mov
hlt
fwait
adc
or
mov
inc
jp
ret
iret
jmp
ljmp
mov
and
icebp
cmp
inc
fldcw
aaa
loopne
push
push
push
push
xchg
test
and
loopne
fdiv
cmpb
and
mov
mov
scas
sti
adc
adc
das
or
mov
push
fisubl
sub
mov
cmc
adc
sbb
fwait
mov
int3
ja
cmpsl
jmp
outsl
shl
xor
jns
ja
das
mov
lret
fiadds
and
sar
xchg
cmp
lret
cli
jnp
mov
dec
and
cmp
andl
popf
mov
lock
imul
dec
repnz
loop
repnz
and
push
in
or
jnp
push
aad
mov
mov
test
stos
push
pop
xchg
or
divb
sub
push
bound
fldcw
shlb
mov
add
xchg
bound
jmp
repnz
insl
add
xor
loop
repz
or
repnz
out
loop
ljmp
add
fstpl
mov
cwtl
mov
sbb
adc
xor
fistpll
ljmp
loopne
pop
mov
inc
cmp
ficompl
clc
jmp
and
mov
fimull
jecxz
ljmp
xchg
sbb
xor
mov
jo
push
sti
ds
adc
push
hlt
add
push
mov
flds
push
clc
in
pop
hlt
or
push
sbb
or
out
cmp
sub
repz
xor
and
push
rorb
pusha
clc
testl
mov
icebp
movsb
out
sub
call
outsb
test
mov
clc
out
cmp
pop
inc
xorb
imul
sub
xor
lods
scas
push
sbb
mov
push
dec
ret
or
out
not
pop
cs
jmp
pop
or
add
and
out
xchg
aam
push
xchg
add
in
out
lods
lcall
and
out
je
dec
ret
mov
lock
push
hlt
aam
mov
push
sub
sbb
lds
cmc
outsb
mov
adc
icebp
ret
scas
in
xor
cmp
repnz
sbb
lods
fsubp
cmp
or
call
or
mov
popa
and
xor
pop
movsb
dec
sbb
xor
push
cmp
push
fxch
pop
pop
push
aas
or
inc
sub
sti
in
mov
scas
add
mov
fcmovnu
aam
in
loopne
leave
lea
adc
jnp
movl
mov
scas
jb
push
push
fnstenv
int
fsubrs
or
stc
sbb
jb
jnp
int
mov
inc
fsubr
sahf
fldenv
lea
adc
sbb
movsl
push
mov
sub
push
jge
ficompl
xor
sahf
push
inc
inc
push
push
jecxz
or
inc
adc
lret
mov
sub
fisttpll
aam
leave
mov
aas
jp
sbb
pop
and
mov
add
cmp
mov
sbb
ret
inc
ficoml
push
jl
xchg
movsl
aam
out
dec
fwait
xchg
ss
sub
fiaddl
shl
sbb
adc
push
xor
in
mov
daa
cmpsl
xchg
sbb
xor
jae
loope
orb
gs
jecxz
pop
adc
pop
icebp
mov
inc
movsb
dec
lea
and
pop
dec
movsl
xchg
mov
out
jg
sub
mov
divl
mov
adc
fsubl
cmc
add
and
sti
cmpsb
jg
adc
sbb
pop
jns
jmp
aad
pop
testb
push
jnp
fiadds
imul
lods
testb
pop
fistps
outsb
jae
sub
add
cmp
cli
out
arpl
lock
test
ja
mov
dec
push
or
sbb
pusha
ljmp
mov
cmp
test
imul
or
adc
fwait
add
es
clc
in
loopne
pop
cmp
insl
out
cmc
in
adc
and
jns
je
inc
inc
in
out
into
incl
pop
clc
js
loop
inc
fstl
fwait
mov
jb
pop
enter
popf
cmp
rorl
adc
sbb
ss
push
push
push
fisubs
sar
out
fcompl
pop
sub
in
dec
icebp
aam
xchg
adc
lret
les
movsb
jns
or
lock
clc
mov
lds
add
in
je
cmp
aam
icebp
leave
sbb
fistl
mov
aad
xor
jle
ficoms
mov
pop
fwait
sbb
push
jb
add
jno
rol
fimull
ret
cmpsb
xchg
scas
scas
xchg
sahf
icebp
imul
or
divb
aas
mov
jge
repnz
inc
xchg
jnp
mov
lahf
sbb
adc
lcall
add
test
divb
out
dec
xchg
in
xchg
mov
jmp
mov
insl
jle
mov
out
insl
and
rsqrtps
or
mov
lret
add
xchg
test
add
ds
sbb
xchg
repnz
sbb
test
push
and
ja
imul
and
dec
in
inc
push
arpl
push
jae
xor
sti
cmp
push
xchg
mov
je
les
test
fs
mov
sti
or
add
outsl
jmp
push
jne
sti
cmp
repz
add
icebp
mov
pop
jae
sbb
jmp
inc
fs
clc
or
push
jno
lret
mov
xchg
add
in
push
std
mov
mov
ficoms
sahf
fists
mov
and
lret
ret
fidivrl
adc
ljmp
sar
outsl
cmp
and
jle
sub
fs
std
ljmp
in
test
xchg
mov
std
cli
sar
xchg
pop
arpl
mov
xor
lock
fbstp
loop
hlt
sbb
insb
sub
jbe
sbb
mov
jp
add
hlt
loop
mov
add
jp
xchg
fucomp
sarl
and
std
cli
push
ljmp
cld
jb
repz
add
or
cmp
loop
ret
mov
jl
int3
add
xlat
mov
jmp
repnz
cwtl
cmp
xor
inc
sbb
imul
dec
inc
and
xchg
mov
in
add
stos
mov
sbb
dec
mov
lods
mov
outsl
icebp
repnz
insl
cli
je
pop
jbe
cmp
pushf
or
pusha
mov
shl
loopne
push
mov
lret
cli
insb
out
les
pop
mov
je
cli
sub
xchg
add
bound
stos
scas
pop
cwtl
cmpsl
lcall
cmp
dec
cs
xchg
and
or
pushf
push
xor
mov
loopne
adc
lods
test
adc
sahf
pop
rclb
jl
icebp
ljmp
arpl
icebp
out
jcxz
push
xlat
jp
repz
imul
cli
ret
jl
mov
outsb
mov
dec
push
jmp
and
inc
out
xchg
xlat
rorl
fidivl
loope
xor
sub
arpl
ljmp
push
les
lods
subl
push
ljmp
popa
xchg
add
push
ljmp
or
ret
lret
sub
pop
or
adc
dec
jmp
push
mov
xchg
aas
fdivp
jb
fwait
test
adc
repz
xor
push
repnz
stc
jp
shl
cmp
mov
fcmovbe
out
push
pop
add
pop
sbb
pop
out
in
or
cmp
mov
stc
mov
sub
pop
loope
fcomip
fsubrl
sbb
push
repnz
lret
fcomp
les
ret
lret
adc
int
jnp
pop
loope
lock
mov
rcrb
scas
pop
xlat
push
jne
out
mov
outsl
in
je
invd
mov
arpl
fs
test
pop
jge
movsb
sbb
mov
mov
add
jns
sub
mov
sub
adc
iret
out
push
jecxz
mov
fnstenv
adc
or
sbb
stos
shlb
repz
mov
dec
xor
mov
jmp
jb
inc
dec
mov
mov
lret
sbb
inc
lea
mov
xor
adc
bound
sub
dec
xchg
jmp
cld
inc
repz
cld
add
iret
fildll
lock
and
pop
lahf
lret
fsubl
test
aam
scas
dec
sbb
bound
push
adc
or
imul
sbb
jns
jae
fs
imul
out
jnp
xchg
je
sbb
aam
push
pop
je
mov
xor
cmc
mov
pop
out
neg
lahf
lods
icebp
push
adc
sbb
mov
cmc
adc
push
or
loop
cmpsl
inc
call
sbb
sti
jle
adc
pop
push
fsubl
sub
and
pop
add
xchg
xor
adc
leave
or
cmc
mov
aam
mov
aam
cmp
jl
clc
insl
mov
mov
jo
cmp
lock
scas
mov
mov
scas
out
or
stos
sub
addb
add
or
and
xor
fbld
pop
loopne
mov
push
mov
mov
ljmp
or
loopne
scas
mov
mov
fsubrl
and
or
sub
lock
xchg
je
mov
in
dec
cld
icebp
les
leave
xchg
mov
push
and
and
pop
inc
sti
inc
ljmp
mov
push
sbb
inc
push
filds
inc
jecxz
test
cmp
dec
arpl
pop
mov
sub
repnz
hlt
arpl
dec
jnp
mov
jg
xchg
lahf
pop
fsubr
xchg
ds
arpl
les
leave
cmc
push
fucomip
hlt
int3
inc
sub
xchg
daa
insl
push
push
addr16
jmp
pop
into
sbb
in
cmc
add
fimull
cmpb
adc
je
insl
inc
insl
movsb
addr16
pop
mov
cmp
fiaddl
shrl
lock
mov
addr16
dec
mov
ret
loopne
push
inc
aam
sti
pop
mov
fimull
loopnew
jo
out
sarb
jb
es
mov
pop
and
push
jno
jmp
cmp
stos
sub
sbb
sarb
in
or
divb
movsb
in
lahf
and
cli
pop
xlat
imulb
lahf
hlt
aam
jge
jp
fnstsw
cs
jnp
leave
mov
cli
xchg
fadds
imul
adc
mov
fucomip
cli
cli
fucomp
sbb
repz
popf
pop
lock
jno
dec
pop
sub
outsl
xchg
sub
mov
push
ja
lock
mov
inc
lods
cltd
movsb
mov
and
mov
repnz
push
addr16
out
xor
mov
negl
dec
adcb
mov
lcall
sbb
or
popf
cli
ljmp
fmulp
aad
and
push
and
jns
or
lcall
test
cwtl
loopne
jge
nop
fmul
movsb
or
push
mov
arpl
jge
and
hlt
fs
push
ret
jns
add
cmp
sbb
ja
mov
push
scas
cli
insb
mov
outsl
dec
gs
insb
outsb
cli
or
fucomip
sbb
fnstsw
out
gs
jecxz
rcr
xchg
push
mov
stos
addr16
and
mov
or
lock
mov
movsb
cwtl
fistpll
dec
bound
lods
int
inc
testl
fs
and
fucomip
mov
loopne
jle
outsb
repnz
mov
sub
sbb
addr16
push
arpl
sahf
repnz
pusha
out
xchg
pop
sub
mov
arpl
or
add
xchg
test
sbb
sbb
jecxz
int3
jl
xchg
sub
ja
ljmp
addr16
data16
push
fnstsw
push
pop
icebp
imul
and
testl
pop
pop
std
jno
ja
push
loop
and
stos
mov
fcoms
fs
add
add
jge
vaddss
ljmp
inc
mov
xchg
lods
cmp
push
dec
sub
daa
jg
mov
ja
ja
sbb
jecxz
insl
jnp
mov
pop
jge
in
push
enter
push
dec
xor
pop
notl
or
ja
ljmp
sbb
and
sbb
jns
jp
aaa
stc
push
xchg
out
loope
notb
faddl
cltd
pushf
cld
outsl
xchg
and
and
add
repnz
scas
mov
add
icebp
or
call
mov
pop
dec
jl
or
jb
and
imul
sbb
pinsrw
sub
test
ds
sbb
pop
in
add
call
mov
pop
inc
mov
sbb
mov
lea
mov
mov
dec
test
mov
cwtl
mov
xor
mov
push
jge
insl
push
ret
dec
fchs
mov
or
sahf
or
jl
sti
out
mov
lock
push
xorl
add
mov
push
mov
fisttps
dec
scas
fisttpll
scas
mov
int
movsl
adcb
xchg
cmpsl
in
mov
push
push
xchg
cmp
jp
stos
fidivl
out
mov
and
icebp
adc
ret
mov
popa
stos
mov
push
test
push
mov
push
mov
sub
inc
xor
es
loope
aad
lahf
cs
sahf
pop
rol
mov
and
int
testl
mov
sbb
les
mov
lahf
push
je
mov
push
sbb
cmp
cmp
mov
dec
iret
xchg
and
lods
roll
adc
mov
and
sub
fsubrl
adcl
ret
jp
fucom
jg
jnp
lock
ljmp
cmp
les
or
pop
inc
ljmp
jmp
arpl
dec
rcrb
out
cmpsl
cli
push
popf
mov
ja
pusha
mov
scas
in
out
cmp
mov
mov
adcl
dec
sub
mov
dec
pop
xchg
or
in
dec
pop
pop
adc
xchg
imul
jmp
pop
cmc
push
leave
jp
cli
in
ret
popf
push
scas
mov
sti
and
in
adc
cmp
cli
push
popa
les
fldlg2
fnstcw
lcall
inc
pop
push
stos
lods
cld
shll
in
sti
mov
imul
mov
cmpb
inc
cwtl
pushf
lret
pop
add
enter
jb
mov
sub
int3
inc
lods
sbb
lret
mov
or
aam
shl
jp
dec
sub
das
ret
test
dec
jb
push
add
jp
jbe
imul
dec
in
mov
jno
cwtl
add
mov
jmp
push
add
lods
mov
mov
imul
stos
sbb
cmpb
sbb
inc
inc
ss
sbb
pushf
call
inc
jae
and
loope
add
sbb
iret
jns
push
stos
lcall
dec
icebp
pop
cld
mov
xorl
scas
xlat
mov
pusha
sbb
add
xchg
sbbl
mov
xor
push
add
jg
jle
cld
sub
mov
mov
insb
xchg
xchg
ljmp
adc
repz
incb
cmp
mov
sub
lea
repnz
loop
push
push
sbb
adc
into
and
inc
cmpsl
lea
sub
in
xor
lret
sahf
mov
jmp
cli
mov
mov
movntps
dec
call
loop
xorl
aam
inc
hlt
pusha
or
and
adc
sbb
stos
aad
and
testb
out
out
dec
into
jmp
icebp
call
popa
outsb
rorl
lods
inc
and
outsb
push
ret
mov
sub
insb
and
sbb
loope
cmp
lcall
xlat
push
insl
and
loop
ret
andl
mov
popa
out
in
hlt
sbb
insb
inc
das
cs
insl
outsl
lcall
xchg
add
add
push
xchg
out
scas
outsb
pop
cmpsb
jle
lret
clc
in
cwtl
mov
jbe
daa
pusha
out
ret
or
bnd
imul
or
out
fisubrl
cld
mov
xchg
sub
push
rcrl
mov
jle
push
in
ret
inc
ficoml
stos
ss
aas
in
jno
nop
mov
into
lods
xlat
imul
jp
clc
mov
xchg
jg
dec
sbb
pop
shrb
jb
sub
or
sub
lahf
mov
cltd
cmc
push
repz
lods
jl
dec
sbb
xor
jp
repnz
leave
push
mov
icebp
dec
in
cld
lret
and
movsl
jle
pop
lret
and
mov
xchg
sub
mov
jns
and
leave
xchg
push
out
mov
ja
out
rcl
xor
and
or
addr16
fs
or
and
xchg
movsb
and
add
push
aaa
or
pcmpeqb
fldcw
inc
sbb
add
imul
adcb
incl
stos
cltd
push
sbb
leave
imul
daa
push
mov
stos
js
call
mov
shlb
out
add
add
xorl
mov
lock
lock
and
xor
ja
pop
test
pop
lods
mov
jle
shlb
xchg
mov
mov
out
add
sbb
and
dec
arpl
and
push
mov
out
xchg
pusha
in
loop
inc
pop
movsb
ja
xlat
test
cmc
adc
adc
mov
in
mov
jg
aam
ljmp
pop
iret
mov
pop
iret
push
jne
cs
sub
sbb
push
ficoml
cld
adc
add
pop
aad
cmpsl
in
cmc
js
push
bound
repz
movb
fnstenv
sub
mov
clc
jmp
jmp
es
sbb
scas
gs
popf
cwtl
cmp
js
cwtl
cwtl
mov
lahf
sub
fnstenv
xchg
decl
ret
ret
mov
xor
repnz
pop
xchg
cmp
xchg
cmp
mov
and
pop
push
in
ret
popa
adc
outsl
dec
cli
out
adc
loop
pop
and
mov
imulb
lock
ss
sub
in
mov
adc
mov
xlat
fdivr
shlb
xor
xchg
out
mov
inc
push
je
sub
in
pop
repz
nop
mov
vdivps
mov
jp
cmc
jbe
insl
mov
xor
pop
cmp
jns
cltd
addl
add
jb
xchg
lods
adc
stos
pop
xchg
xor
popa
aam
out
js
push
jge
push
and
xchg
idiv
pop
lahf
cwtl
fildll
add
fst
call
mov
pop
mov
stos
pushf
add
out
jp
ficoml
outsl
dec
lcall
and
adc
sbb
sbb
lock
bound
xchg
mov
out
fildl
mov
movb
lret
sub
pop
fildl
and
mov
mov
ljmp
in
leave
out
pusha
pushf
and
ljmp
jg
xor
and
fcoml
ds
test
stos
mov
mov
stos
bound
out
pop
or
int3
push
push
cmp
xor
rol
jne
lcall
pop
push
jae
jp
loopne
cmp
adc
mov
ficompl
cld
cmc
test
mov
stos
xlat
insl
xchg
mov
std
and
div
je
jl
mov
in
mov
mov
not
pop
add
lods
daa
xchg
sub
lcall
jg
in
adcb
mov
mov
adc
sub
sub
mov
scas
ljmp
mov
dec
or
outsl
icebp
inc
hlt
xchg
push
pop
out
fsubrp
mov
cltd
pop
mov
pop
jp
sbbl
imul
rorb
ret
out
adc
icebp
lock
cmp
push
mov
dec
lcall
xchg
aaa
out
adc
mov
cmp
or
sbb
negb
in
mov
push
pushf
loop
adc
ljmp
fcomps
xchg
fcompl
xchg
push
cltd
in
or
push
jb
rorl
adcb
sub
popa
enter
jae
and
loope
stos
or
rorl
and
lcall
mov
dec
rolb
add
dec
aad
rolb
or
fwait
aas
and
cmp
cmpsb
lret
in
sub
inc
fwait
loopne
cmp
js
push
mov
mov
and
sub
aam
sub
xlat
sahf
xchg
pop
cld
roll
addl
and
ljmp
mov
data16
add
and
mov
mov
mov
and
lea
test
mov
dec
and
outsb
stos
imul
xchg
push
inc
jle,pn
out
aad
into
and
iret
loopne
decl
sub
xchg
pushf
jp
push
in
inc
ljmp
add
jp
in
sbb
std
adc
cli
ret
out
xor
mov
jb
in
repnz
mov
mov
in
mov
mov
out
lcall
aaa
ljmp
js
push
adc
push
push
sub
xchg
jno
lea
xchg
jmp
push
jmp
in
fimuls
or
ljmp
sar
js
je
lock
sub
shlb
cli
sub
xor
js
add
and
cld
in
push
mov
mov
add
push
mov
repz
frndint
jo
mov
rolb
out
repnz
pop
push
ss
jmp
ret
movsl
aad
sub
movsb
sub
cmp
aam
jb
add
cld
xchg
jecxz
push
sub
in
sub
outsb
mov
rcrl
push
movsb
lock
lods
call
lods
jecxz
lret
test
xchg
jecxz
fwait
add
test
outsl
adc
jae
xlat
sbb
mov
das
daa
jmp
jnp
repz
cwtl
add
insb
xor
mov
pushf
insb
sub
jl
movsl
inc
ljmp
call
xor
lock
mov
mov
int
pop
cmp
cld
hlt
repnz
sbb
add
jl
xchg
jmp
hlt
inc
in
mov
and
cmp
jae
cld
cmp
sub
pop
cld
ret
pop
out
sti
or
jmp
dec
add
es
mov
pop
je
pop
arpl
and
movsb
jp
adc
cmpl
sbb
in
fs
xlat
int
in
mov
mov
mov
or
push
lds
add
stc
jae
rcl
cmp
jecxz
xor
pop
cmp
or
pop
lret
dec
add
mov
inc
lock
lret
cmpsb
xor
push
jnp
xlat
out
gs
rcrl
sbb
cld
cmpb
add
add
sbb
inc
pop
into
jecxz
mov
fwait
cwtl
jecxz
push
icebp
out
jg
stos
push
aaa
add
stc
pop
mov
xchg
mov
xor
pushf
or
jp
adc
jecxz
pop
shl
sub
inc
lock
adc
adc
adc
add
push
and
xchg
mov
hlt
and
cmc
std
inc
xchg
xchg
je
mov
push
or
cmp
out
dec
test
xchg
inc
sbb
in
cmpsl
jge
out
fwait
stos
and
bound
adc
sti
pop
ja
sub
push
cli
in
je
mov
push
add
mov
sbb
hlt
in
adc
sbb
add
cmc
pop
clc
pushf
pop
std
jo
add
push
pushf
add
dec
out
sub
outsb
pop
addl
jge
imul
mov
clc
push
lock
sti
inc
imul
xchg
lret
fwait
jnp
int
pop
adc
mov
inc
pop
pop
xor
dec
jo
push
lock
add
add
or
cmp
xchg
inc
jmp
push
sti
movsb
sub
fs
adc
subps
push
ljmp
cmp
ljmp
mov
in
rcrl
and
gs
lcall
shrl
fxch
test
lret
stc
jl
fs
divb
jnp
mov
loop
jnp
xchg
mov
lcall
fs
imul
sbbl
add
sbb
sub
sbb
or
int
pop
cs
lds
jnp
in
jno
cmp
pop
xchg
sbb
nop
sbb
dec
lods
add
fdivrl
jmp
add
outsl
inc
cmp
xchg
inc
lods
ljmp
testl
in
jae
imul
fldenv
cli
sbb
in
sbb
pop
std
pop
cli
les
push
xchg
push
out
nop
push
ljmp
cli
daa
inc
out
imul
int
ljmp
xchg
cmp
lcall
sub
mov
in
pusha
or
daa
ljmp
imul
mov
xor
push
add
hlt
mov
sahf
lds
movsl
imull
and
mov
xor
adc
imul
aam
les
movsb
imull
and
mov
ret
jae,pt
xor
pop
or
mov
ljmp
push
aad
jno
jp
xchg
jmp
cmp
cmp
ljmp
inc
adc
bound
push
push
lahf
imul
test
lock
sti
jae
jecxz
jnp
lds
mov
jae
pop
popf
jmp
cmp
stos
ljmp
dec
sahf
jg
jg
xor
lock
cmpsl
push
mov
repnz
or
dec
lock
in
frstor
out
add
bound
cmpl
sarb
cli
fiaddl
ljmp
mov
stos
std
and
cli
jae
jne
xchg
pusha
gs
xchg
jecxz
mov
jo
fiaddl
xor
push
and
cmp
popa
stos
xchg
pushf
inc
arpl
xor
pop
and
jmp
sbb
xor
stos
jnp
ret
xor
mov
negl
xchg
or
fucomp
pop
cmp
sahf
enter
push
mov
pop
repnz
repz
pusha
sbb
push
dec
lods
mov
mov
add
lcall
sti
xor
add
or
sbb
xor
pop
and
lea
out
stos
outsl
inc
dec
hlt
inc
pop
stos
clc
and
in
jb
ljmp
xorl
and
into
lock
jae
mov
xchg
jmp
bound
ljmp
dec
lret
in
sahf
push
stos
or
lret
lock
sub
and
andl
cs
adc
sub
and
pop
cmp
cli
dec
jmp
bound
cld
push
sbb
fdivp
lds
loope
mov
and
pop
jmp
mov
adc
jp
push
jecxz
repz
sti
cld
add
or
pop
adc
sbb
jl
cli
sub
icebp
aas
imul
movsb
xchg
xor
out
pop
jae
cld
cmpl
shrl
lret
js
sti
in
ret
cld
lret
push
sbb
jmp
add
push
jae
dec
ficompl
fildll
inc
lcall
jecxz
arpl
loope
mov
stos
pop
stos
test
sub
fsubrp
mov
fistps
mov
dec
jecxz
fsubrs
test
dec
test
lret
inc
out
push
mov
cli
and
pop
mov
cs
inc
and
xor
sbb
ret
pop
xor
push
jns
and
cwtl
movsb
sbb
cwtl
dec
into
scas
fdivl
or
pop
sahf
pop
daa
cs
lret
mov
sbb
cmpsb
daa
stos
popa
push
sbb
pop
mov
ljmp
rolb
mov
cld
fdivp
dec
cld
lret
shlb
mov
add
sub
jp
push
fisubl
aas
add
or
outsl
imulb
ffree
cmp
movb
lea
ja
not
inc
dec
push
inc
and
rcl
xchg
cwtl
shl
mov
shl
cmc
pushf
pushf
mov
cmp
cmc
jmp
das
push
mov
xchg
push
mov
push
stos
cltd
lahf
jge
xorl
xor
fs
add
jne
add
mov
ja
int3
aas
inc
nop
push
test
aaa
es
mov
mov
adc
out
push
lldt
adc
sarl
xchg
adc
cmpsl
test
sbb
dec
pop
into
and
out
pop
cld
lret
pop
dec
push
dec
mov
xor
push
mov
and
jmp
xor
jmp
lea
jne
pusha
mov
pushfw
popw
dec
lea
js
mov
push
inc
jmp
jmp
lahf
sbb
test
and
dec
jp
mov
or
xor
jge
push
hlt
rcl
ss
xchg
in
xor
add
cmc
das
and
adc
or
lods
mov
inc
cwtl
insl
orb
cmc
xor
jnp
inc
into
dec
inc
popf
jecxz
sbb
push
xchg
scas
in
aad
mov
adc
sarl
hlt
dec
dec
dec
jge
mov
popf
movb
cmc
imul
test
add
pushf
lea
jmp
mov
pop
mov
sarl
jmp
daa
std
mov
sub
addr16
jne
mov
cltd
popf
dec
xchg
test
call
popf
or
and
jmp
testl
mov
add
xor
inc
ret
imulb
and
popf
popa
fs
repz
and
mov
outsl
fs
add
sbb
data16
out
or
pop
jnp
inc
das
dec
xchg
jae
fnstenv
ja
addr16
xchg
cmp
pop
mov
jecxz
mov
xchg
jne
dec
lahf
lds
popa
out
in
daa
pop
mov
in
mulb
or
jge
fstps
enter
push
out
sub
mov
push
sub
mov
xlat
cmp
pop
mov
mov
jmp
add
push
mov
sub
aad
add
xchg
lds
or
jmp
shr
test
in
enter
mov
addr16
jecxz
jg
mov
rcrl
and
cld
inc
sub
loope
outsl
or
mov
fs
cltd
and
movsb
and
push
lds
and
leave
pop
adc
in
sbb
sbb
jb
push
mov
lds
sbb
aad
xchg
adc
pusha
jle
aam
jl
xor
insb
lock
sub
cmp
scas
jbe
or
subb
add
call
movb
movl
pushf
movl
pusha
pushf
lea
jmp
xor
loopne
int3
cli
pusha
es
push
negb
mov
neg
fstps
push
in
cmpsb
test
insl
fildl
es
pop
in
sbb
je
and
stos
inc
dec
jbe
xchg
push
and
lcall
mov
dec
mov
mov
rorb
xchg
push
out
ficoms
test
xor
faddl
mov
push
out
int3
ret
sbb
stos
shl
mov
stc
xlat
adc
jnp
sub
outsl
insb
cli
jbe
jbe
sbb
shrb
add
and
mov
das
imul
cmp
repnz
orb
lock
push
cmp
lret
dec
inc
sarb
sbb
jns
rep
call
jle
icebp
cmpsl
push
repz
add
sbb
pop
xor
add
jp
aam
fstpt
les
push
cmp
call
xor
adc
mov
and
xor
mov
cmp
int3
mov
xchg
jmp
jmp
pop
sbb
push
out
sub
dec
sub
dec
dec
dec
rcll
sub
test
fildl
ds
loope
cmp
jle
lret
repz
push
adc
mov
in
push
fcomi
ret
shlb
sbb
fiadds
xchg
sub
mov
das
and
popa
lcall
dec
scas
call
or
jb
in
mov
dec
sub
enter
mov
neg
mov
pop
cmp
pop
inc
clc
stos
push
inc
push
fistpl
call
xor
nop
test
sbb
clc
or
pushl
mov
lcall
mov
sarb
iret
pop
push
ss
mov
imul
pop
mov
fisubl
movl
cltd
or
fimull
shr
fistpl
xor
cli
fcmovnb
adc
int3
mov
mov
inc
test
pop
sub
and
in
mov
call
jge
adc
test
jp
dec
out
test
xchg
cld
jns
enter
ret
div
addr16
pusha
xor
and
add
test
mov
stos
xchg
lret
push
fcmovnbe
jle
je
and
jno
test
push
cwtl
fcomi
leave
xor
ret
das
push
fcmovne
push
dec
mov
lcall
fcmovne
mov
clc
sarb
xlat
fildl
mov
push
loopne
xor
add
lea
push
pop
out
pushf
popf
fldt
mov
adc
push
sbb
jne
pop
cld
fwait
mov
lahf
inc
push
in
int
pop
je
out
jle
loopne
lcall
fnstenv
test
sub
mov
xlat
or
fcomi
dec
addr16
sbb
aam
xchg
jnp
bound
lea
mov
inc
xor
push
dec
mov
xchg
dec
jp
xacquire
dec
mov
fs
lahf
mov
inc
push
and
inc
iret
mov
sub
mov
xchg
jge
pop
ljmp
push
loop
mov
jecxz
clc
xor
fwait
clc
mov
lods
popa
ljmp
jmp
aas
mov
sbb
cli
xchg
fmul
adc
in
and
or
idivb
and
jmp
dec
popa
or
jno
stos
mov
test
jp
sahf
mov
add
test
cld
push
ljmp
jbe
fstpt
stc
movsl
test
sbb
fcmovnu
adc
imul
cld
xchg
adc
loop
scas
adc
adc
sbb
cld
enter
mov
jecxz
adc
or
or
add
cmc
fst
test
int
cmp
push
jl
jo
jno
cmp
loop
pop
fisubl
jmp
or
fucom
xchg
push
mov
nop
xchg
ret
lret
sbb
mov
jecxz
jl
icebp
cmpsb
pusha
xchg
lret
sub
pushf
fisttpl
mov
inc
out
sti
xlat
mov
and
fistl
cmpsl
inc
mov
fcmovnu
aad
jae
ret
xchg
and
lret
inc
and
mov
mov
adc
imul
inc
cmpsb
lahf
fisttpl
push
and
fnstsw
push
jnp
fcmovnb
mov
sar
in
fs
push
ss
ficoms
jns
and
jmp
dec
cwtl
pop
scas
ds
push
fldt
dec
repz
adc
or
xor
inc
push
sub
leave
gs
mov
enter
std
jmp
adc
dec
jl
cli
dec
mov
mov
lret
out
adc
mov
dec
inc
adcb
mov
data16
push
imul
mov
mov
mov
mov
push
mov
lahf
xchg
stc
stos
fildl
adc
add
mov
cmp
fisubs
sub
mov
dec
fistl
mul
pop
dec
pop
daa
mull
and
push
jmp
rcr
mov
clc
fdivrs
push
loopne
lds
sbb
xchg
mov
cmp
clc
ja
fistl
push
jg
fisubrl
add
cmpsl
adc
fmul
icebp
adc
pop
and
loope
add
ljmp
sbb
imul
push
arpl
lock
ljmp
aad
jne
mov
sarl
pushf
push
in
and
push
std
pop
inc
pop
mov
repz
repnz
inc
ljmp
cmp
add
cmp
rorb
push
sbb
xchg
pusha
js
mov
fs
mov
mov
inc
and
fpatan
sub
and
daa
sub
ljmp
push
sbb
sbb
cmpb
pop
mov
pusha
mov
mov
add
stc
test
pop
push
pop
pusha
je
mov
int3
inc
xor
adc
cmp
inc
sub
notb
and
inc
dec
mov
pop
int
nop
adc
loop
lahf
adc
jecxz
mov
pushf
popa
sbb
sahf
add
std
dec
ljmp
idiv
arpl
ljmp
lods
mov
adc
out
pushf
int3
fisubl
mov
dec
sahf
cmp
cmpsb
ljmp
pop
sub
mov
jl
inc
testb
mov
stos
mov
les
cmpsb
dec
fcoms
adc
sar
sbb
xchg
cli
adc
pushf
ret
cmpsb
mov
sbb
stos
fcom
cwtl
ss
jge
cmp
int
std
in
xchg
cli
inc
lods
push
clc
inc
pusha
mov
lock
push
bound
mov
fdivl
cli
push
enter
filds
ds
in
fisubs
inc
push
std
pop
push
push
sub
mov
in
sbb
sbb
mov
inc
mov
jbe
cmpsb
fsubr
push
or
popa
sub
lea
sbb
pop
test
insb
jne
pop
jmp
mov
jecxz
imul
push
jo
jbe
push
addb
lcall
jp
push
pop
and
push
jae
adc
fisttps
ret
insb
jmp
cltd
sar
or
dec
stos
and
adc
orl
ljmp
ljmp
pusha
pop
xor
pop
cli
mov
je
data16
mov
mov
sbb
hlt
js
xchg
xchg
push
add
sub
mov
cmp
jecxz
push
inc
inc
and
adc
testb
xor
les
jl
xchg
movsb
mov
pop
mov
sbb
mov
es
daa
mov
cmpsb
sbbb
or
lods
mov
mov
fisttps
jle
movsb
mov
mov
xchg
or
add
mov
out
fs
ds
or
cmpsb
mov
xor
jge
add
pusha
add
enter
inc
mov
adc
popf
xchg
add
cld
mov
movsb
cli
mov
mov
adc
sar
aam
mov
jo
jle,pt
mov
bound
bound
push
cli
roll
xor
fidivrs
sbb
outsl
dec
les
popw
xor
jle
push
outsl
orb
jecxz
cmpsb
cmpsb
or
outsl
push
pop
and
add
stos
shlb
sub
test
jnp
and
add
aas
mov
mov
arpl
repnz
imul
fcmovu
xchg
les
mov
hlt
repz
push
cmc
adc
dec
std
in
jns
sub
push
loope
fwait
dec
pop
stc
jmp
xchg
cmp
fucomip
and
pop
std
incl
lods
sub
dec
add
jmp
popf
add
fwait
loope
jle
ja
cli
adc
pop
push
push
push
icebp
out
mov
in
arpl
adc
mov
loop
arpl
fistps
cmpl
inc
in
outsl
ljmp
adc
in
jnp
movsl
sbb
fsubl
sub
pop
and
stos
sbb
icebp
sti
push
in
outsb
bound
mov
cld
sbb
mov
arpl
das
loop
xor
aaa
mov
jp
aas
sbb
mov
jge
xor
mov
in
ret
adc
mov
lods
pushf
jle
loop
fwait
inc
jmp
jns
fdiv
repnz
mov
sbb
sti
cmp
fisubrs
sub
insb
test
loope
mov
pop
or
pop
add
lret
push
mov
push
dec
or
dec
mov
xchg
inc
cmp
rorl
cmp
out
cli
in
aaa
cli
test
cmp
push
sub
ljmp
jae
in
in
adc
mov
cmp
roll
cld
in
pop
and
rcrl
and
and
ja
rorl
jmp
in
ss
fbstp
jmp
sub
fs
pop
bound
loop
test
xor
jne
adc
dec
ficoml
push
imul
pop
lcall
inc
dec
loop
mov
lahf
imul
sbbl
lret
or
ss
cmp
imul
jae
cmp
sbb
inc
roll
mov
int
pop
push
bound
or
xor
std
ss
shrb
fmull
push
ljmp
cmp
sti
push
push
movsb
repnz
add
jle
add
or
xor
push
popf
outsl
pop
cmp
out
cli
and
and
mov
push
cld
xchg
or
push
push
movsb
and
add
cmp
pop
xor
xor
nop
push
push
pop
and
mov
out
fistps
mov
loopne
dec
in
pop
out
stc
sbb
mov
mov
into
add
cli
add
mov
mov
out
ffree
xchg
mov
cwtl
bound
test
lods
rol
shlb
adc
sbbb
mov
jmp
or
push
in
cmp
mov
sbb
mov
inc
sbb
jb
jnp
imul
addr16
clc
fildll
sbb
shll
push
sahf
inc
fbstp
cmp
lret
outsl
cli
lods
insl
cmp
repnz
outsb
jae
lret
rsqrtps
cmp
mov
pop
in
testb
push
adc
jne,pt
xchg
pusha
les
cli
rclb
add
push
mov
shr
imul
fnstsw
pop
popf
and
or
pop
xor
sub
sub
adc
cmp
sti
add
in
push
add
bound
jnp
inc
pop
cli
pusha
jg
sub
mov
jb
sbb
scas
jae
push
sbb
divb
jle
sahf
jb
ds
cmpb
pop
xchg
adc
lods
mov
xor
les
xchg
and
lret
pusha
test
shr
cmp
cmp
inc
add
les
inc
sub
lret
inc
rorl
push
dec
cmp
xchg
stos
movb
and
loope
aam
jns
bound
in
shrb
bswap
jne
pusha
das
loop
mov
or
mov
inc
fs
lods
pushw
data16
xor
push
mov
or
pushf
lret
les
stos
xchg
repnz
mov
push
inc
jnp
sbb
pop
sahf
je
adc
pusha
lret
fstl
ret
test
or
inc
push
lret
stos
mov
push
inc
sub
xchg
mov
jae
jnp
jnp
mov
jae
popa
and
ljmp
repz
sub
or
rorl
fsts
jmp
or
cmp
ds
dec
test
push
cld
add
cmpsb
inc
jle
inc
sarb
adc
cmp
or
push
bound
dec
mov
bound
loop
movsl
ljmp
ja
dec
mov
insl
outsb
lcall
pop
or
ret
es
and
out
arpl
sbbb
jmp
gs
daa
jne
add
ljmp
or
adc
scas
fbld
sahf
scas
mov
mov
loop
mov
ljmp
clc
xchg
and
sbb
repnz
ret
mov
sbb
push
in
stos
fs
push
jecxz
outsl
xor
mov
movsb
mov
and
shl
cs
mov
mov
ljmp
sub
dec
mov
fisubrl
sarl
ljmp
lret
fisubl
jl
cld
test
sbb
or
push
es
insb
mov
cs
cmp
jecxz
dec
add
mov
add
sahf
inc
aad
xchg
or
call
cli
cli
rcr
cmp
dec
call
std
ljmp
sbb
bound
enter
mov
dec
mov
inc
mov
arpl
and
jg
int
xchg
sub
leave
pop
cli
sub
ss
jbe
cld
lret
jb
pop
push
pusha
mov
fmul
cmpsb
int3
ret
or
out
lret
mov
mov
arpl
cmp
fwait
jmp
and
sbb
repz
mov
stos
iret
dec
insl
pop
adc
lcall
andl
aad
xor
or
mov
push
lods
stc
push
xor
mov
loop
xor
cmp
jge
sub
test
mov
rol
in
push
cmp
bound
repz
int3
in
add
stos
xor
shrl
adc
sbb
fldl
sbb
shll
pop
adc
add
add
lods
loopne
repz
pop
out
xchg
cmp
cli
pop
imul
std
sbbl
enter
in
je
mov
idivl
ljmp
push
pop
bound
sub
std
sbb
imul
in
mov
inc
push
fcomip
ja
add
fistps
fimull
jb
mov
ja
or
sbb
fistpl
inc
ljmp
bound
cmp
int3
insb
mov
push
inc
sahf
sti
and
mov
clc
not
xchg
addb
enter
jb
mov
in
cld
cli
sub
adc
sbb
xchg
jecxz
inc
repnz
in
test
fdivrs
sbb
out
mov
dec
add
pop
out
and
fs
push
sbb
xchg
int3
xor
mov
and
adc
jnp
aas
pop
pop
sbb
dec
or
rorl
inc
ljmp
cld
jbe
dec
xor
sbb
enter
cmp
cld
jp
lea
pop
mov
mov
cmpb
out
repz
sbb
rorb
stos
dec
sbb
mov
stos
jmp
push
cld
or
inc
bound
jmp
push
fcoml
push
xor
int
xor
in
jmp
or
jae
mov
mov
rolb
sbb
xor
nop
pop
imul
push
dec
adc
sti
add
xor
jae
cld
xchg
movsb
pop
ljmp
adc
pop
in
and
mov
xchg
and
xchg
xor
mov
sbbb
inc
rclb
cld
jbe
fisubs
int3
pop
jge
dec
and
jae
mov
ljmp
stos
cmp
movsb
lret
jbe
adc
xor
aad
sbb
sub
jg
pushf
push
mov
jbe
mov
in
jb
jbe
and
addb
push
arpl
dec
ficoms
jbe
add
adc
fwait
fs
mov
xor
cli
sbb
jmp
ds
add
out
int3
ret
sub
jmp
fisubl
xchg
mov
jmp
pop
or
pop
adc
push
sbb
cld
add
adc
pop
out
jnp
add
mov
ds
lret
mov
call
stc
inc
shrb
cmc
mov
xchg
loopne
in
mov
loopne
or
call
jp
sbb
loop
cld
imul
or
xchg
bnd
lahf
sbb
outsb
cmp
add
lock
outsb
cld
ret
cli
fwait
sbb
xchg
pop
sub
fdivp
je
mov
movsb
sahf
xor
or
and
mov
jge
lcall
push
ds
sbb
inc
mov
insb
mov
cld
out
subb
mov
ror
hlt
cmpb
nop
arpl
fs
add
ljmp
sbb
fisubs
negb
loop
pushf
jmp
pop
mov
int
clc
jo
xor
mov
inc
jle
out
lods
cli
mov
mov
call
fucom
mov
push
imul
add
sbb
mov
ss
movsb
push
push
mov
push
js
pop
das
mov
icebp
negl
scas
loop
push
pushf
mov
mov
mov
cmp
pop
lods
es
sbb
xor
in
hlt
sbb
subb
jbe
push
je
es
je
out
cmp
push
adc
fwait
in
mov
es
aam
ret
stos
mov
ret
and
jae
sti
js
xchg
stos
pop
ss
jle
pop
bnd
imul
adc
push
ss
jp
and
sbb
ds
xchg
mov
dec
jle
mov
inc
push
jp
test
subb
fbstp
pop
adc
movsb
les
hlt
xchg
jb
and
lods
cwtl
xor
cli
jno
jb
and
mov
mov
es
arpl
cwtl
out
out
cmpb
sub
les
sahf
cmp
arpl
int
xor
iret
insb
cmpsl
mov
sbb
scas
mov
mov
push
inc
jns
aaa
shlb
push
cmpsb
sbb
loop
daa
sub
push
sub
roll
mov
stos
adc
add
xchg
repz
add
and
sub
mov
sbb
shr
sarb
mov
cmp
stos
cmp
sbb
push
jle
cmpb
ljmp
ss
cli
sti
adc
sub
sbb
pushf
sub
sbb
ds
push
and
jge
int
inc
and
out
ds
mov
dec
iret
add
push
orl
ljmp
lods
fmul
andl
outsl
jle
sub
int3
xchg
ja
cmp
call
mov
lret
mov
push
mov
and
xor
imull
fisubrs
push
push
mov
sbb
push
enter
dec
push
out
mov
outsl
or
dec
cwtl
dec
shll
inc
jg
test
insl
jg
push
lods
flds
mov
pop
push
into
arpl
dec
xchg
add
xchg
in
xor
xchg
push
les
jecxz,pt
cmpsb
gs
jle
in
rcrb
jnp
mov
sub
movsb
cmp
imul
jb
jo
fucomi
dec
xchg
ss
push
fwait
xlat
test
adcb
mov
enter
mov
sub
xchg
jp
jecxz
sbb
fcmovnu
fnstsw
loop
out
fucomi
in
out
lock
idiv
cld
incb
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
popf
fstpt
inc
inc
inc
inc
dec
dec
dec
fisttpl
push
push
push
pop
pop
pop
fistpl
bound
push
fldt
jb
jbe
jp
fstpt
addb
nop
xchg
xchg
xchg
cwtl
lcall
sbb
out
scas
mov
mov
loop
mov
enter
into
rcl
aam
fcomps
dec
and
data16
loope
loope
sub
jb
jecxz
push
add
lea
push
xor
data16
push
rcrb
ljmp
jle
push
jmp
arpl
cmp
or
mov
inc
bound
or
repnz
push
inc
mov
add
mov
pop
scas
pop
xor
mov
push
mov
es
sub
pop
sub
loopne
in
fwait
loopne
cli
mov
pop
in
inc
cmp
sub
sbb
mov
stos
add
ljmp
sbb
adc
or
adc
cmc
clc
shrl
out
fdivl
popa
mov
jne
inc
adc
fbld
cltd
and
sub
jae
mov
and
sbb
ds
popa
mov
call
out
lcall
fstps
push
lret
enter
pop
cld
andl
lcall
hlt
cmc
fisttpl
and
fadd
out
rcrb
rorb
pop
fisubs
add
ljmp
sub
les
cmp
or
pusha
lods
movsb
test
loop
add
jmp
in
pop
lock
inc
adc
or
sti
pop
mov
notl
pusha
stc
imul
std
clc
sbb
mov
rcr
roll
iret
neg
or
and
mov
cmp
fnstsw
cmp
push
sbb
ret
xchg
adc
sbb
aas
pop
or
or
stc
xor
lods
test
in
jb
and
adc
cli
jecxz
or
jb
mov
fldcw
sub
in
push
cli
push
imul
cmc
push
add
fistpll
fisttpll
stos
pop
mov
repz
ficomps
bound
fnstsw
fucomip
fistps
fildll
and
int
add
push
sbb
push
push
cmp
ffreep
jge
cmpsl
fistps
fndisi(8087
jecxz
out
jmp
out
fcomi
repz
idiv
sti
std
fildl
add
pand
adc
pop
and
das
xor
aas
fildl
inc
inc
dec
dec
dec
dec
fistl
push
push
pop
pop
pop
pop
imul
jne
jns
jge
fildl
mov
xchg
xchg
cltd
fwait
popf
lahf
stos
lods
scas
mov
ret
lret
int
in
rcl
xlat
fstps
std
das
js
mov
fldt
and
cld
aad
sbb
fidivl
cmp
pusha
mov
outsl
mov
ss
and
outsb
push
test
imul
lods
movsb
fsts
out
int3
int
imul
pop
pop
and
and
arpl
xchg
add
cmp
push
daa
iret
jp
dec
sub
lea
rclb
dec
inc
test
xchg
fwait
cmp
mov
addr16
sbb
call
int3
push
insl
pop
lods
lret
add
xor
test
mov
popa
mov
add
adc
je
lock
mov
push
push
lcall
xor
add
pop
fwait
jle
inc
push
jp
mov
inc
or
loop
nop
xchg
mov
sti
sbb
dec
faddp
xchg
popa
push
negl
mov
incb
xchg
and
cmpsb
mov
insb
and
jb
jle
cmpb
mov
mov
outsb
mov
jno
add
sbb
sub
pop
add
shlb
shrb
int
ds
push
mov
dec
pop
shlb
int
shrb
insb
mov
push
push
imul
sbb
repz
jmp
pmulhw
or
fs
mov
mov
sbb
mov
in
sar
in
es
push
test
and
or
in
xor
xor
cs
adc
imul
sub
cli
xchg
test
ljmp
inc
or
xor
adc
ret
push
jge
and
pop
xor
fs
and
int3
push
in
lahf
cmc
push
loop
icebp
jae
imul
cwtl
jns
pushf
popa
xchg
test
push
mov
out
mov
cld
ror
pop
mov
sbb
sub
xor
or
push
mov
cld
add
jnp
xchg
leave
push
in
adc
loop
lret
loop
push
std
mov
jae
xchg
lahf
inc
add
in
arpl
push
cmpsb
dec
push
in
sbb
outsl
cmpsb
dec
cld
inc
in
bound
xor
sub
and
or
jmp
sub
cld
repz
in
jmp
jecxz
fcmovbe
in
lret
and
push
mov
mov
andb
push
std
push
bound
push
in
dec
incb
cmp
std
sub
and
add
ljmp
xchg
push
jnp
push
adc
sar
xchg
and
adc
lret
mov
dec
push
or
sub
pop
and
sub
loop
rorl
arpl
and
shlb
subb
bound
adc
mov
sub
loopne
xor
mov
xor
mov
in
cmp
cmp
mov
or
test
stos
imul
mov
bndldx
clc
jmp
dec
mov
ds
clc
stos
fmuls
rolb
jecxz
loope
aas
push
ds
xchg
jl
mov
popf
pop
cmp
repnz
pusha
js
imul
ds
pop
ds
shl
ja,pn
xor
enter
cli
mov
std
jecxz
push
push
add
fstpt
jnp
cld
sbb
negb
insl
push
lea
nop
cli
and
mov
std
fdivrs
imul
loope
and
mov
std
jmp
es
push
mov
cmp
adc
push
out
sbb
icebp
mov
std
pop
mov
imul
mov
jae
sbb
pop
cmp
push
cmp
pop
jg
xchg
mov
cmp
mov
imul
std
cmpsb
mov
imul
mov
std
and
imul
inc
sbb
inc
mov
std
cmp
aas
imul
sbb
dec
mov
std
push
mov
pop
cli
mov
inc
sub
movsb
jge
pop
xchg
dec
test
hlt
sbb
pop
push
jg
pusha
jp
into
dec
sub
les
lcall
int
inc
ljmp
mov
mov
and
jge
or
dec
inc
xchg
pushf
js
ret
shlb
mov
and
cli
sbb
cli
sti
adc
cld
mov
pushf
shlb
jno
xlat
push
adcb
and
jle
cs
das
repnz
lret
inc
jae
sub
xchg
sbb
mov
xor
repnz
sub
adc
sbb
jge
sbb
enter
jp
mov
mov
gs
xor
out
aam
fnstcw
or
js
rolb
mov
lsl
mov
jmp
xor
xchg
inc
mov
pop
ret
scas
test
lret
mov
dec
inc
inc
ds
inc
inc
add
fsts
xchg
xchg
dec
push
loop
cmpsb
ss
or
loop
pushf
lods
mov
popa
ss
loope
push
push
jbe
jge
dec
repnz
lret
inc
out
mov
sbb
sahf
ja
push
xlat
sub
orb
mov
xchg
shll
pop
and
dec
xchg
out
arpl
or
inc
sti
pop
in
out
mov
add
push
mov
and
dec
mov
daa
lock
pusha
dec
xchg
loope
ret
xchg
pop
movsl
mov
add
push
sbb
leave
call
pop
mov
aas
push
addr16
test
ret
inc
cmp
inc
jne
cmp
call
loopne
ffree
outsl
push
push
cmp
imul
jle
roll
cmp
outsl
jbe
sahf
bound
das
in
mov
pop
mov
outsb
iret
je,pn
add
lret
pop
mov
cli
aad
repnz
mov
mov
lods
cmp
stos
in
add
cli
mov
sub
repnz
jecxz
adc
and
pop
cli
fs
scas
sub
dec
and
xor
stc
mov
ja
push
and
mov
fdivp
and
or
cmp
pop
mov
mov
pop
int3
mov
pushf
int
sbb
inc
rorb
mov
adc
mov
dec
fists
dec
sbb
mov
movsb
sub
jp
push
sbb
ja
test
sbb
cmp
mov
daa
fbstp
sbbb
stos
push
lods
mov
or
into
xchg
sti
sbb
sub
shlb
push
clc
sahf
int3
inc
mov
add
push
cs
lock
and
push
jp
mov
scas
xor
mov
adc
test
daa
sbb
fsubrs
into
in
push
and
cmc
add
cli
daa
and
xor
mov
ficompl
lcall
fwait
jle
roll
mov
cli
push
and
add
cmpsl
inc
jbe
sub
pusha
lods
and
insb
and
sbb
and
ja
pop
int3
int3
ljmp
repz
mov
daa
push
xlat
fstpt
rcr
imul
mov
cmpsl
rcr
iret
sub
jmp
lret
aaa
push
push
les
xor
stos
mov
jne
in
fcmovu
scas
pop
pop
imul
fadd
fistpl
outsl
mov
jb
fmuls
loop
pop
loopne
mov
fisubl
scas
ljmp
sub
leave
push
mov
or
dec
gs
scas
sub
fists
inc
sub
repnz
repz
xor
jmp
lret
sub
jl
add
loop
jae
jle
addb
sub
push
push
mov
or
sbb
jg
cmp
sar
push
mov
cmp
int
sbb
shlb
dec
mov
orl
push
mov
or
loop
add
mov
and
jb
loopne
inc
mov
xor
fists
pop
jp
cli
pushf
fimull
mov
cmp
jecxz
adc
or
in
jnp
mov
mov
inc
jg
push
mov
jmp
sub
andb
adc
jmp
stos
sbb
in
jle
inc
jp
jmp
push
xorb
cmp
pop
subb
push
jae
rcll
pop
or
mov
sub
sbb
stos
stos
jb
push
add
mov
sbb
lcall
mov
cmp
int3
push
mov
addl
mov
in
ret
repz
repnz
add
shlb
cmc
sbb
cld
push
mov
mov
and
dec
dec
movsb
pop
push
pop
fisubl
sti
movsl
sbb
lea
out
dec
ds
in
mov
or
inc
sub
mov
in
imul
bound
lret
mov
mov
adc
push
pop
repnz
mov
cli
push
fucompp
sbb
pop
dec
sti
xchg
jmp
stc
std
jnp
fwait
and
stos
dec
and
sarl
jl
mov
repnz
push
sbb
in
or
ret
or
adc
sbb
mov
in
jb
lock
into
out
stos
dec
pop
out
mov
add
push
arpl
test
push
cli
insb
mov
sbb
in
push
dec
popf
lock
mov
jp
inc
cli
add
daa
mov
sbb
inc
and
mov
push
inc
and
loop
push
jg
inc
movsb
fucomp
push
mov
fidivl
mov
and
sbb
ret
mov
js
mov
pushf
outsb
or
and
push
dec
mov
imul
add
xor
lea
mov
and
loop
ret
jmp
std
jp
lcall
jp
inc
in
adc
push
xor
imul
adc
sti
stos
leave
stos
std
lret
add
lds
xchg
cmp
stos
stc
std
sar
dec
lds
jp
rcrl
dec
lds
push
bound
sub
jmp
insb
shrb
imul
mov
mov
dec
clc
imul
push
inc
dec
sbb
and
jp
and
insl
lods
mov
mov
mov
mov
cmc
sbb
cmp
sti
sbb
sbb
dec
sbb
mov
leave
ret
mov
lahf
mov
push
xchg
leave
mov
sub
sbb
gs
leave
lret
in
sbb
sub
jecxz
jb
inc
and
iret
jg
xchg
add
sbb
add
pop
lret
adc
push
xor
shlb
lret
andb
mov
jb
push
push
dec
pusha
sbb
out
cmp
dec
and
mov
jo
mov
push
rcrl
int
sub
push
dec
int
push
sbb
jb
bound
sbb
lcall
adc
lods
in
lcall
int
mov
sub
sbb
add
jnp
mov
mov
or
cmp
or
sbb
std
in
jp
and
and
dec
jae
dec
stos
add
iret
adc
fstpl
pop
fidivl
rcrl
iret
push
add
sbb
or
addl
imul
mov
mov
imul
push
dec
push
or
bound
adcb
sbb
in
shr
push
nop
mov
repnz
or
lret
sub
cmp
push
loopne
stos
outsb
push
imul
push
cmpb
or
push
push
shll
imul
jl
nop
jb
jecxz
sti
imul
push
pop
mov
push
jmp
je
pop
add
outsl
mov
mov
sarb
aaa
adc
fistl
scas
xchg
js
fldcw
xor
fsubrl
adc
mov
rcr
clc
test
cltd
or
fistl
bound
clc
xor
pop
das
sbb
arpl
xchg
fistl
popf
loope
adc
push
pop
pop
pop
pusha
cmp
ret
mov
std
inc
call
fldt
inc
icebp
add
fildl
add
mov
mov
and
mov
xor
setp
sbb
loope
out
or
xchg
dec
adc
inc
pop
mov
mov
call
jae
mov
fisttpl
xchg
out
pop
shrb
mov
lods
out
fs
fistps
cmp
xor
test
mov
cmp
add
stc
mov
pop
pop
xor
arpl
and
test
fucomi
push
xchg
fwait
sub
aaa
fdiv
push
pop
ficompl
xor
and
sub
cld
rcrl
hlt
or
pop
mov
outsb
lock
mov
mov
adc
clc
mov
push
add
das
imulb
or
pop
hlt
adc
loopne
jne
arpl
dec
in
lcall
cld
sti
in
xor
imul
xchg
cli
xor
lcall
xchg
pusha
repz
dec
ffree
sub
fsts
mov
adc
lcall
add
xor
or
cmp
mov
sbb
push
pop
lahf
mov
fcoms
sti
stos
mov
cmpsb
lock
push
sbb
and
cmp
arpl
loopne
adc
lcall
inc
leave
faddl
aas
fdivrp
jb
xor
cmp
loop
mov
out
and
lret
bound
push
faddl
jl
sbb
or
pop
adc
adc
dec
fildll
mov
jmp
mov
dec
pop
frstor
fisubs
sti
notl
daa
mov
cli
and
xchg
sbb
mov
sbb
jne
add
stos
in
push
pop
arpl
push
xor
dec
pop
data16
test
ljmp
mov
fsubp
sbb
cmp
push
imul
pusha
jns
adcl
dec
push
xor
push
loope
xor
stos
sbb
arpl
xchg
je
mov
add
cld
fistps
and
add
test
mov
mov
lods
inc
shrb
cmp
loop
sub
dec
jmp
pusha
pop
arpl
addr16
lret
roll
xchg
jns
or
adc
lods
push
cmp
shrb
or
jecxz
lret
sahf
stos
stc
loop
stc
mov
arpl
ss
jecxz
mov
stc
cmp
mov
dec
sbb
mov
jnp
and
lods
pusha
pop
xor
ljmp
lret
jecxz
jno
jp
clc
jmp
int3
ret
lcall
mov
popf
sbb
idiv
xchg
out
cs
dec
sbb
mov
lret
mov
dec
pusha
in
addb
sti
popf
xor
sub
lret
fcoml
mov
sti
jnp
adc
mov
mov
add
daa
ret
mov
lahf
roll
sbb
jge
jb
in
mov
mov
push
pusha
jecxz
ljmp
jp
xor
ret
push
xchg
and
jp
jecxz
repz
push
call
pop
jmp
daa
pushl
cmp
ljmp
mov
push
fimull
cmp
lret
daa
push
fs
jmp
in
imul
jmp
add
mov
fimull
push
std
adcl
add
fisubrl
scas
fstpt
ret
dec
dec
xchg
sbb
out
imul
shlb
cli
enter
add
out
pop
sub
inc
sti
jae
push
dec
daa
stos
jnp
frstor
pushf
mov
jmp
mov
jmp
mov
pop
xor
ret
mov
fldl
cmp
adc
into
mov
mov
repnz
or
lret
ljmp
xchg
push
cli
movsl
clc
aaa
sub
jecxz
adc
in
addl
jno
mov
pop
in
popf
sbb
xchg
xor
mov
adc
sbb
hlt
xchg
bound
cmp
push
sub
pop
lahf
and
cmp
mov
bound
jnp
jne
sbb
stos
js
fcomi
imull
xchg
lret
cmpsl
daa
push
cmpb
add
aaa
cli
ret
jecxz
repz
push
inc
cmp
cmp
jg
inc
mov
out
lret
push
clc
adc
mov
and
and
pop
mov
data16
movsl
test
stos
mov
and
mov
cmp
repnz
dec
push
lods
mov
xor
sahf
cwtl
mov
xor
cmp
shr
pop
sbb
int
sbb
and
arpl
orl
or
sbb
dec
pop
cld
inc
cmp
out
inc
pop
sbb
xchg
lods
push
imul
ljmp
xor
inc
xor
fstl
sub
cwtl
sti
out
jp
xor
movsl
lcall
add
mov
repz
mov
pop
mov
lods
shll
cld
rolb
mov
adc
pop
cmp
movsl
imul
and
xchg
and
inc
xor
jl
xlat
cmp
in
jbe
in
jnp
ljmp
cmp
jns
push
bnd
jae
or
inc
ljmp
repnz
out
mov
push
mov
pop
jg
sti
mov
pop
dec
fbstp
push
dec
lods
jg
push
dec
out
das
add
and
lret
xor
and
jnp
xor
pop
or
push
push
mov
adc
push
dec
sbb
ljmp
shll
jl
lcall
mov
cmp
mov
lret
sbb
xor
or
sbb
mov
mov
mov
fdivr
mov
imul
jmp
mov
xor
push
push
push
mulb
xor
jp
mov
gs
inc
and
std
or
sbb
or
int3
push
xor
push
xor
mull
add
imull
and
push
imul
mov
mov
sar
imul
icebp
mov
and
push
push
imul
mov
mov
sar
arpl
stc
sahf
lock
add
adc
push
inc
imul
mov
and
arpl
push
mov
inc
dec
jb
pop
daa
ljmp
and
ret
shrl
out
mov
ljmp
adc
jb
and
inc
stc
stos
cld
stc
rorb
fidivrl
cld
loopne
in
push
std
add
in
sbb
in
das
jb
jnp
pop
orb
popf
or
sbb
cli
std
dec
xorb
lahf
pop
repnz
xor
adc
sarl
push
ds
mov
cmp
dec
pop
mov
xor
mov
mov
dec
add
sbb
fadd
pop
outsl
testb
inc
mov
repnz
fwait
loop
iret
lret
mov
outsb
lea
fldt
andl
xor
adc
bound
std
mov
movsb
int3
ficompl
mov
dec
sbb
int
xor
sub
cmp
test
inc
jl
sbb
pop
inc
mov
inc
mov
push
mov
hlt
clc
xchg
test
ficomps
inc
bound
daa
xor
sbb
sarb
dec
movntps
sahf
fstpt
jp
push
mov
inc
add
cmp
clc
add
imul
cwtl
jbe
test
fistl
inc
fwait
in
xor
movsb
dec
sbb
jp
fistl
std
or
xlat
inc
add
outsb
inc
mov
sbb
mov
ljmp
incb
and
push
std
stos
push
andb
in
push
fistps
sbb
stos
xchg
cmp
ds
pop
adc
push
push
mov
push
and
push
cmp
scas
push
std
cmp
pop
bound
in
adc
mull
shrb
std
xchg
push
jbe
pop
jnp
jmp
repnz
sub
jle
in
sahf
std
mov
shlb
pop
in
daa
decb
jnp
fwait
std
mov
rcrl
ljmp
add
adc
mov
or
das
bound
in
sbb
lods
xchg
push
scas
sbb
sub
and
dec
push
std
sbbb
bound
das
and
jae
xchg
push
lret
sbb
cs
push
std
ficomps
das
bound
in
inc
data16
cld
sahf
mov
fbstp
loop
push
or
cmp
fsubrl
outsl
bound
in
or
repz
push
std
xchg
push
jle
dec
and
cli
cld
lret
and
xchg
and
inc
std
das
push
jmp
scas
in
mov
bound
ds
std
or
out
sbb
in
arpl
aas
and
push
std
out
lret
in
incb
and
bound
pop
push
das
bound
out
mov
push
std
and
fbstp
arpl
aaa
decb
and
push
std
mov
xchg
dec
in
xor
push
and
xlat
sbb
mov
xchg
push
ja
push
daa
in
paddb
loopne
out
cmpb
movb
testb
out
in
fs
sbb
adc
inc
in
inc
in
pop
es
fstp
cs
iret
cmp
ja
push
aaa
and
push
std
out
mov
dec
and
push
jmp
cmp
push
jae
dec
das
in
pop
sti
and
push
std
stos
push
mov
ss
push
imulb
lret
mov
xchg
arpl
das
in
or
out
push
std
xchg
pop
bound
in
push
loop
iret
xor
mov
mov
arpl
aas
bound
paddsw
dec
and
push
bound
or
loop
mov
loopne
inc
or
in
push
bound
or
out
dec
and
push
dec
bound
cli
icebp
jecxz
mov
jnp
pop
bound
in
sti
fisubl
scas
push
std
jb
push
jns
outsl
imul
in
pop
push
mul
jmp
orl
out
fstl
mov
mov
mov
fbstp
jnp
cmpsl
jbe
mov
pop
or
cmp
mov
xor
dec
lahf
inc
push
fcomps
pop
dec
clc
cld
push
hlt
sti
fildl
dec
mov
cmc
fstpl
sarb
xor
cld
ss
out
push
clc
add
imul
stc
xchg
push
sub
inc
popf
cs
fcoml
shl
mov
sub
cmp
add
popa
adc
test
lret
dec
call
mov
outsl
mov
in
dec
aam
pop
jne
jp
cmp
mov
mov
adc
jno
pop
xchg
fimuls
mov
dec
das
xchg
jg
insl
xchg
stos
push
add
xor
or
cltd
psubw
jo
push
xlat
ret
mov
pushf
fcomi
aas
and
xchg
addr16
xor
loope
dec
pusha
sbb
mul
or
xlat
lret
and
adc
pop
cwtl
xor
scas
hlt
in
sub
xchg
call
or
out
jno
pop
insb
fildl
dec
mov
dec
nop
adc
adc
sbb
into
add
sbb
fs
pushf
dec
fcmovnb
in
je
dec
loopne
adc
sti
out
or
lock
cli
jb
lods
cmp
pop
sub
jg
in
dec
dec
int
aam
aaa
mov
mov
adc
es
cs
test
mov
push
mov
shl
sbbl
cmp
insb
ror
rolb
sbb
in
sbb
lret
fcomi
jno
dec
scas
addr16
cli
add
adc
leave
lcall
inc
push
sbb
jge
adc
pop
dec
or
cmpsl
mov
arpl
mov
loope
packssdw
imul
iret
sub
ret
push
mov
cld
mov
data16
and
mov
loopne
xchg
imull
add
jb
mov
xor
xchg
iret
fistl
cwtl
bnd
lret
adc
aas
cld
xor
ss
pop
jno
jg
hlt
jae
xchg
fildll
push
stc
pop
mov
fcmovu
pop
jl
pop
shrb
les
or
adc
lret
loopne
and
cmp
adc
jbe
sub
daa
pop
fsubr
out
xchg
jl
dec
xchg
cmp
xorl
xchg
outsb
cmpsb
lcall
repnz
lahf
fildl
mov
rclb
inc
jg,pn
pop
dec
aas
scas
dec
lcall
add
xchg
stos
fildl
lcall
cli
iret
jp
add
popa
sti
dec
dec
push
fistpl
lods
fsubp
xchg
cmc
inc
enter
sub
pushl
stc
push
inc
push
sti
loope
jae
jbe
cmp
xor
pop
xor
sbb
pop
and
xchg
xor
pop
jp
out
decl
fildl
mov
add
jge
loope
cmp
das
sub
pop
mov
fisttpl
and
sbb
mov
into
call
frstor
push
sub
jecxz
push
iret
aaa
mov
ljmp
sbb
push
dec
push
xor
mov
push
sub
dec
mov
std
sub
xchg
xor
fcoml
fmul
cmpsl
mov
sbb
popa
stos
sbb
enter
sti
xor
loopne
stos
adc
dec
jae
hlt
pop
pop
lcall
je
imul
mov
xchg
sti
sub
frstor
imul
fsubrl
fldt
mov
pop
fucom
cmp
pushf
xchg
cmp
mov
daa
lods
inc
lret
push
fs
fcmovnu
adc
repnz
ljmp
es
sub
xor
popa
or
and
pop
lcall
and
push
pop
test
cmpsl
insb
fldt
sbb
rcr
jle
or
sub
xor
cmc
stos
mov
sub
mov
push
cs
jmp
lcall
or
push
mov
adc
mov
fbld
outsb
cwtl
sbb
mov
and
and
jb
pop
cmp
or
das
dec
xor
imul
sub
pusha
push
sub
iret
fistpl
push
pushf
mov
int
scas
test
push
add
jg
test
jle
rcrb
repz
mov
inc
mov
jp
fimull
ret
mov
add
cmp
fistl
enter
push
or
lcall
dec
pop
and
popf
das
mov
idiv
add
stos
fstpt
jae
cmp
pop
imul
orl
mov
lcall
movl
adc
cmp
pop
dec
dec
push
sbb
jnp
jge
jns
dec
out
loopne
mov
clc
cmp
cmp
inc
ret
xchg
adc
mulb
pop
mov
fstpt
fstpt
cs
mov
ret
fneni(8087
shrl
push
shll
lcall
loopne
jae
imul
adc
fisubs
stos
sub
lods
lret
popf
pop
and
mov
or
call
pop
lret
push
xchg
mov
add
cmp
fstp
test
movb
fimull
leave
lock
mov
pop
and
in
fndisi(8087
xorb
push
sarw
mov
lds
pop
xchg
clc
cwtl
adc
xor
adc
ret
jae
test
xor
pop
loopne
inc
or
not
add
inc
jge
or
push
lahf
sbb
fsts
cwtl
xor
arpl
xchg
push
pop
jb
push
gs
jge
das
out
cli
and
loopne
add
or
mov
dec
loopne
jnp
jne
xor
je
and
roll
mov
pop
and
mov
fcomi
fdivrl
pop
movsl
or
test
inc
repnz
pop
mov
mov
jae
popf
fidivrl
sbb
xchg
in
lret
nop
jl
fisubl
fstpt
mov
pop
cmp
adc
mov
std
data16
and
testb
and
adc
dec
cld
fdivrl
sub
xor
fcmovnb
inc
add
cmp
fsubs
xor
out
ss
push
or
or
push
pop
in
jbe
outsb
cmp
fisttpl
shll
sbb
fbstp
cltd
lds
sub
ret
adc
popa
cwtl
push
fcomi
pushf
test
mov
add
jmp
or
paddw
mov
fstpt
ret
mov
fcomps
jge
std
jmp
or
xchg
push
push
sbb
add
jge
inc
fildl
jne
fldenv
fwait
js
mov
cmp
mov
xchg
divl
mov
pop
jo
fistpl
rorl
fildl
mov
pop
jg
xor
aaa
loope
cmpsb
outsb
lcall
data16
xorl
shrl
movsl
addr16
cmp
fcmovne
xchg
cmp
test
sub
mov
mov
sbb
mov
out
adc
test
add
loop
jge
mov
imul
out
push
sub
push
ret
fstpt
sar
or
rcl
test
popf
fisttpl
lahf
shrb
mov
cli
faddl
or
cmp
pop
in
mov
gs
insb
inc
repnz
push
sahf
das
adc
js
mov
mov
mov
push
fwait
add
fcmovne
dec
xor
push
fldl
or
mov
cli
call
jne
fcmovb
xchg
cltd
pop
mov
jno
sub
addr16
fidivl
shr
pop
test
call
sbb
fisttpl
idivl
test
and
ficoml
jae
pop
popf
jo
iret
mov
sbb
in
mov
psubq
jns
rcll
ljmp
push
inc
fucom
sbb
movsb
cmp
dec
rcr
ret
addr16
lret
scas
mov
and
cmpb
rolb
clc
sub
loopne
inc
xchg
and
sbb
std
shrl
sti
jb
mov
fldcw
xchg
mov
push
fcmovnbe
add
mov
sbb
sub
imul
movsb
xor
inc
and
lret
js
sub
sbb
mov
inc
xor
jge
and
push
imul
push
xchg
icebp
rcll
push
push
sahf
cmp
jge
mov
fwait
cwtl
fisttpl
nop
and
ja
frstpm(287
ds
cmc
adc
sti
stos
lock
arpl
inc
mov
adc
sub
es
clc
inc
sti
pop
cs
pusha
mov
push
xchg
callw
repz
mov
cmp
xor
insl
jb
orb
dec
jo
add
mov
nop
dec
imul
cmpsb
pop
repnz
out
xor
fstpt
push
ffreep
or
pop
dec
in
shrl
imul
ret
jl
jge
xchg
out
cmp
inc
fists
cltd
fidivs
cmpl
sti
jnp
sbb
jae,pt
mov
jge
xor
clc
mov
gs
pusha
adc
popf
pop
fstpl
sub
andl
js
and
sub
push
jb
mov
mov
mov
and
sub
jae
test
out
pop
cmp
int
xchg
ret
dec
jns
and
xor
cs
dec
imul
iret
clc
and
and
xlat
jp
mov
sbb
and
push
repz
pop
jns
inc
ret
call
cmp
cltd
mov
fadd
lret
and
stos
loop
and
in
aas
dec
in
lock
sbb
push
rclb
pop
aas
xor
adc
movsb
and
dec
pop
int3
ss
inc
fildl
jle
mov
cmp
lret
test
xchg
rcr
leave
loopne
dec
pop
jnp
lcall
div
xlat
in
mov
adc
rcrl
inc
adc
fisttpl
mov
jns
mov
add
add
xor
pop
mov
xlat
sub
enter
icebp
call
and
push
adc
or
or
pop
inc
add
cld
rolb
lcall
fldt
push
jp
mov
aas
xor
hlt
ljmp
mov
sbb
xor
xchg
jo
ret
mov
pop
xor
jmp
call
in
mov
cli
enter
cmp
sbb
jo
or
icebp
ret
out
push
mov
sbb
and
in
adc
fisttps
jmp
bound
and
jle
mov
in
fistl
nop
sti
inc
adc
xchg
jmp
jmp
add
pop
rol
inc
sbb
iret
ret
hlt
call
in
fstpt
jmp
ficoml
lods
fadds
cmp
icebp
repz
shll
fsubrl
adc
fstl
cmp
sbb
mov
nop
pop
sti
add
inc
fwait
xchg
jl
imul
jns
fwait
int
test
push
mov
mov
or
fnstsw
add
in
push
lret
mov
lcall
idivb
cmp
sti
rolb
dec
fstl
imul
fidivrs
lea
inc
inc
mov
mov
adc
jo
pushf
into
sub
inc
insb
pop
cmpsb
mov
fucom
pusha
jmp
cmpsl
mov
movsb
inc
in
jmp
loopne
sub
cwtl
and
and
sbb
fistpl
jo
or
mov
push
scas
fcmovnbe
sub
mov
xor
bound
push
loopne
or
cmp
jg
dec
test
push
or
cmp
movsl
fistpl
jp
sub
repnz
xchg
js
push
pushf
in
add
mov
fisubrl
sbb
loopne
std
xchg
inc
jge
xor
mov
or
ret
shll
mov
mov
cmp
out
imul
cmp
mov
lock
cs
fstpt
add
mov
rcrl
lret
add
push
in
sbb
sbb
lret
dec
or
fcmovnu
les
pop
test
jne
out
mov
push
adc
cmp
inc
cwtl
pushl
fistl
and
sbb
xchg
icebp
dec
int3
fistpl
ja
out
outsl
mov
je
es
xchg
sbb
fldt
pusha
repz
icebp
repnz
inc
aad
imulb
mov
jne
dec
in
negl
xchg
call
mov
xchg
dec
add
lods
jge
ja
neg
add
mov
mov
pop
and
addr16
sbb
rcrb
fsubl
inc
inc
jmp
push
je
loop
pushf
ds
fisubl
xchg
cmp
lock
imul
and
or
fstpt
inc
fcmovne
loop
pop
cli
lods
xchg
cs
out
fwait
jl
dec
fisttpl
cmp
push
mov
arpl
imul
push
mov
lahf
or
fcmovne
dec
int
cld
not
nop
loopne
stos
pop
mulb
imul
push
ja
rorl
sbb
adc
cmp
addr16
push
add
fldl
or
or
jmp
add
pop
cmpsl
mov
sbb
es
rcr
mov
pop
ljmp
adc
fisttpl
sbb
lock
sub
sbb
mov
mov
or
loop
inc
cmpsl
pop
push
mov
iret
mov
pop
fcmovnb
enter
mov
mov
cmp
rcrl
jecxz
loope
fiaddl
std
es
fistl
jb
shlb
mov
cmp
fwait
push
fistl
sub
fisttpl
enter
mov
pop
pop
push
or
mov
ret
fildl
mov
arpl
or
pop
cmp
fwait
imul
pop
xor
enter
dec
fistl
cmp
push
adc
fisttpl
in
fcmovne
and
je
adc
mov
fsubs
jno
pop
mov
sbb
sub
filds
fnstsw
push
ds
insl
test
mov
insb
cmpsb
rcr
andb
sbb
arpl
or
xor
fstp
inc
aad
add
fcmovnu
push
sub
jb
inc
repnz
sub
dec
inc
adc
jl
loopne
in
push
jmp
add
fiaddl
xor
pop
sbb
sub
mov
popf
fcmovnb
and
test
popa
dec
movsb
test
cmovle
fistpl
pushf
xchg
rclb
pop
push
imul
mov
mov
xor
xor
mov
pop
or
sbb
or
xchg
xchg
pop
daa
movsl
lods
inc
add
pop
cmpl
xchg
loopne
out
pop
es
test
test
loopne
adc
outsl
cmpsb
roll
push
cmp
or
push
icebp
xchg
pop
mov
and
test
rorl
int
inc
fsts
movsb
push
xchg
xchg
aas
arpl
scas
pop
jne
movsl
ljmp
lds
adc
mov
mov
fwait
sub
lock
mov
ds
dec
push
popf
js
call
xor
and
rcll
xchg
pop
in
in
add
ljmp
push
inc
xchg
arpl
push
cmp
das
ja
push
ds
sub
lcall
sub
adc
mov
add
pop
and
adc
pop
in
data16
mov
jno
dec
adc
repz
mov
stos
lods
mov
stc
add
pop
cmc
jge
aad
dec
mov
fcomi
adc
cmp
push
testb
jle
sub
movsb
mov
jnp
pop
aaa
push
addr16
and
dec
add
lods
rorl
lcall
jne
popf
jnp
xor
ljmp
cmp
lret
fnstsw
jl
test
fcmovu
mov
in
loope
fildl
sub
adc
mov
pop
sub
sbb
enter
pop
imulb
sub
in
cld
mov
lea
inc
pop
pop
or
div
out
sbb
iret
mov
cwtl
jecxz
mov
adc
out
leave
push
fistpll
mov
fcoml
adc
mov
xor
outsb
loop
cs
push
xchg
das
jmp
inc
fildl
mov
pop
dec
and
clc
lcall
flds
cwtl
pop
andl
ds
bound
push
data16
in
or
fildl
sbb
sbb
cmp
cmp
cmp
ret
outsl
add
pop
pusha
leave
mov
mov
add
fwait
clc
fstpt
sbb
in
jo
lods
sbb
stos
add
test
sahf
sbb
hlt
ret
jmp
es
fs
jbe
mov
into
dec
adc
xchg
cmp
mov
xor
mov
add
adc
mov
mov
fcomps
jmp
inc
call
cld
pop
mov
fldt
lock
add
jge
out
ret
mov
sbb
lcall
scas
fistl
push
fnstsw
jmp
ret
xchg
mov
subb
icebp
fistpl
xor
mov
xchg
xor
fisubrl
xchg
sbb
lcall
adc
fimull
les
fstpt
push
cmp
ror
push
sbb
jbe
sbb
and
ret
pop
fnsave
popf
out
mov
lcall
jg
jae
mov
fstp
mov
cld
fwait
lcall
inc
push
pop
sbb
cli
add
dec
cmp
cmc
jg
fisttpl
adc
call
fidivrs
out
fmul
or
mov
mov
cmp
mov
out
movsl
xchg
fisttpl
aaa
sbbl
add
and
rcll
mov
xchg
mov
jb
pop
xchg
xchg
xchg
xor
fstpt
push
fmuls
les
gs
mov
cmp
out
fildl
and
sbb
adc
clc
test
cmpsl
dec
ss
shlb
and
mov
jmp
mov
fstpl
out
fcoml
sbb
sahf
fcomi
ror
add
lock
pusha
dec
lret
pop
inc
lods
sbb
sbb
or
mov
popa
dec
push
jle
jnp
pop
ret
cmp
aas
xchg
stos
rcrl
inc
ret
lret
xlat
pop
mov
cmp
aad
cmc
xor
push
jge
fildl
orl
das
xchg
and
pushf
cmp
fucomi
out
lods
cmp
mov
inc
js
insl
mov
pop
push
mov
std
in
pop
inc
xchg
ret
sti
inc
pop
dec
shlb
or
xchg
pushf
push
lea
jb
cmp
call
mov
addr16
mov
and
movsl
mov
dec
xlat
jg
int3
add
mov
lcall
mov
fdivrp
js
push
hlt
xor
inc
leave
cld
shr
stos
into
jmp
dec
dec
cld
push
mov
ds
fildll
test
push
andb
mov
movsb
stos
jp
loope
adc
call
test
sbb
push
call
mov
and
xor
jmp
lea
ja
bt
bt
adc
sub
rcr
add
sbb
btr
mov
and
seta
dec
mov
cmc
pusha
repnz
pusha
push
movw
lea
jne
mov
movzbw
bswap
jmp
aad
inc
int
lret
das
add
jmp
rclb
call
clc
int3
mov
jnp
repz
mov
inc
cltd
mov
mov
int3
xor
leave
shlb
mov
je
push
sti
test
subl
cmp
xchg
sti
pop
dec
sahf
enter
outsl
sbb
outsl
mov
inc
mov
sbb
fisttps
les
mov
mov
clc
sahf
cmp
add
mov
cmpsl
sahf
ljmp
je
test
push
sahf
fsubrl
xor
or
xor
mov
xchg
mov
inc
sahf
add
fisttpll
rclb
pusha
shlb
icebp
and
dec
jbe
stos
loopne
pop
jo
sbb
leave
movsl
xor
inc
adc
loop
push
movsb
adcb
and
out
push
adc
or
out
mov
cmp
ss
arpl
add
or
add
call
cmp
rcrl
sbb
mov
ja
inc
and
ret
repz
mov
or
add
bound
movsl
push
mov
adc
mov
cmp
xchg
push
jge
les
test
scas
and
cli
in
imul
lret
mov
mov
scas
push
mov
arpl
push
push
adc
aaa
mov
ja
movsb
lcall
filds
decl
mov
jbe
push
decl
and
lea
jmp
xorl
mov
dec
and
es
call
or
dec
sub
cmc
int3
xor
dec
mov
sbb
pop
loop
mov
dec
jae
adc
push
sti
push
btc
pop
jmp
stos
call
jo
lock
mov
mov
push
mov
shlb
mov
cmp
test
or
mov
inc
or
inc
mov
mov
add
jp
loop
inc
xor
sub
out
pop
lods
cmpsl
adc
push
clc
push
pushf
lea
ja
push
cmc
dec
cmc
sub
movzbl
rcr
lea
add
shl
movsbw
mov
stc
ror
shl
mov
call
push
dec
mov
lea
fstl
push
jmp
pushf
rolb
mov
push
imulb
nop
imul
adc
mov
loop
or
mov
jecxz
pop
add
sub
mov
pop
push
push
sub
mov
aaa
push
pop
scas
mov
sbb
cli
fdiv
dec
pop
mov
call
sub
call
out
mov
lret
mov
sarl
prefetch
pop
or
mov
jnp
shrl
insl
or
cmp
mov
out
das
cwtl
aad
pop
sub
dec
push
mov
cmp
mov
xor
inc
or
adc
inc
nop
loop
pushf
xor
fs
adc
dec
cwtl
fidivs
sub
loopne
pusha
in
je
cwtl
mov
and
jbe
andb
inc
and
mov
mov
or
cmove
lret
dec
in
arpl
adc
cmp
outsl
sub
inc
cmc
mov
pop
aad
out
fwait
outsl
gs
daa
jno
push
mov
add
xlat
push
fldl
lcall
scas
mov
aad
frstor
je
inc
dec
push
jb
push
pop
aam
xchg
cwtl
std
cmpsb
sub
sub
mov
sbb
int3
mov
loop
lret
nop
adc
outsb
les
out
popf
sbb
pop
fldenv
push
add
and
mov
repz
out
mov
in
cmp
fs
je
push
lea
jmp
stos
jmp
inc
inc
dec
xor
cs
insb
add
xchg
sar
call
clc
rcl
inc
adc
sub
bt
bt
lea
add
movsbw
cmp
shrd
sbb
mov
shl
xor
sar
mov
jmp
arpl
enter
int3
ljmp
cmp
or
inc
fstpl
jmp
ljmp
pop
sbb
jl
aam
sbb
dec
insb
xor
sbb
or
inc
push
stos
lret
pop
in
xor
sbb
cli
sbb
cmp
cltd
xor
fildll
arpl
mov
sub
je
in
pop
sbb
fisubrl
sbb
ljmp
and
es
dec
idivb
stos
pop
sbb
shlb
out
xchg
jnp
add
rorb
add
enter
add
and
cmp
lret
ljmp
ljmp
loop
add
push
sti
pop
jl
xchg
pop
int3
and
fimull
sbb
cmp
bound
sbb
cmp
push
es
cld
insb
push
xor
stos
sbb
ds
sbb
sbb
sbb
pop
push
adc
sbb
ds
or
and
and
mov
sbb
dec
bound
add
jl
mov
mov
push
dec
add
dec
insl
mov
jge
push
imul
xchg
xor
outsb
jecxz
cmp
xchg
add
inc
push
and
xchg
cld
lods
mov
repz
xor
push
sti
sti
insb
bound
push
insb
ljmp
cmp
cli
cld
and
jnp
cmp
sub
subb
in
and
and
outsl
jb
add
cmp
mov
sti
mov
inc
stos
sub
sbb
icebp
lcall
mov
loop
and
mov
lcall
xor
pop
pop
jae
jmp
mov
arpl
ret
pop
je
in
inc
sbb
movsb
mov
cmp
in
dec
cmp
clc
inc
rcrl
adc
rcr
pop
stos
push
js
pop
fprem
xor
sbb
jae
mul
jg
dec
test
dec
and
xlat
imul
jg
div
dec
mov
ljmp
pop
iret
repnz
jge
push
in
pop
popa
int
or
shrb
icebp
mov
fstl
in
ljmp
mov
repnz
pop
popf
cmp
sbb
clc
stc
inc
mov
jae
ret
out
cli
pop
add
cmpsb
imul
lcall
xchg
jp
addr16
sarb
or
mov
mov
or
pop
jg
fidivrl
push
clc
or
stos
mov
lock
lods
push
adc
mov
inc
aad
test
inc
inc
ljmp
xor
stos
adc
push
or
popf
fildl
add
gs
xor
lcall
loop
sub
adc
divl
fsubs
inc
int3
sarb
mov
faddl
mov
bound
loop
arpl
stos
mov
js
es
fists
and
ffreep
loope
loop
in
jno
clc
ds
and
xchg
cmpb
jnp
add
imul
outsb
sub
mov
loope
ret
inc
aam
ja
repnz
stos
divb
in
mov
or
stos
adc
in
cli
mov
cmp
out
out
out
inc
sub
jb
sub
jmp
push
jns
in
lahf
cmp
sub
js
clc
or
dec
icebp
sarb
ficoml
aad
rol
pop
cltd
add
push
mov
sub
cmc
dec
in
adc
mov
in
stos
cmp
jnp
hlt
fucomip
push
and
cld
in
and
mov
pminsw
jne
lods
push
jno
add
pop
cwtl
and
and
add
aam
popa
test
notl
outsl
lods
ret
rorl
jo
std
cmp
cmp
cmovo
jecxz
fcompl
and
cmp
lahf
ror
pop
mov
movsl
inc
ss
lret
test
movsb
and
push
ja
lcall
shll
out
mov
clc
sub
das
pop
out
fs
test
jae
adc
std
push
loop
lods
out
std
dec
cmpsb
or
lcall
and
xor
insb
jae
push
inc
pop
pop
leave
cmpsb
or
imul
loop
rclb
repz
je
lahf
sahf
bound
xchg
mov
cmc
jmp
mov
icebp
clc
sbb
std
or
jp
loope
bswap
sahf
xchg
stc
stos
lret
lcall
or
sub
lods
xlat
xorb
cs
fwait
out
ja
loop
shll
dec
test
and
add
out
loope
loop
in
or
stos
sub
mov
add
jo
in
stos
add
js
inc
lcall
inc
subl
inc
lcall
nop
dec
push
in
sub
adc
jmp
fisubs
popa
dec
xchg
xor
push
lods
xchg
jp
in
adc
dec
jle
push
xchg
jecxz
in
cld
and
mov
push
shll
push
adc
leave
mov
call
jecxz
icebp
loop
lahf
stos
mov
es
jmp
xor
mov
adc
xchg
sub
pop
xor
scas
ja
pop
adc
test
fisttps
test
lcall
sub
out
data16
daa
pushf
sbb
clc
icebp
jmp
out
mov
les
notb
dec
ljmp
and
mov
push
inc
mov
in
pop
pop
mov
inc
outsb
and
lcall
xchg
add
push
sub
leave
adc
adc
add
inc
inc
lcall
add
aam
incl
jl
lea
jl
pushf
pop
lods
add
enter
add
inc
push
ret
out
mov
mov
bound
fidivl
and
cmp
outsl
xorb
inc
out
and
add
stos
inc
mov
xor
sub
ucomiss
cli
stos
vmread
repnz
pop
push
stos
fbstp
das
inc
jg
sub
cs
lcall
mov
std
cmp
enter
sbb
sarb
sbbl
mov
or
int
mov
jp
mov
cmp
jae
lcall
out
jg
test
push
out
popl
je
xchg
fisttps
aas
ljmp
cmpsl
aaa
ds
jmp
sub
icebp
add
xchg
jp
push
adc
or
pop
sbb
aad
mov
xor
mov
xor
pop
dec
addb
hlt
das
in
scas
cmp
loope
mov
popa
stos
sbb
mov
xchg
inc
in
add
xchg
jmp
cld
push
loop
hlt
mov
mov
repnz
insb
test
push
outsl
in
mov
pop
nop
cli
pop
ljmp
dec
out
leave
or
xchg
lret
pop
sahf
lahf
cmpsl
mov
fidivl
call
jmp
fdivr
mov
popa
clc
in
or
push
in
jnp
pop
lock
xor
sbb
outsl
stos
cmp
loope
mov
movsb
xchg
in
xchg
xlat
lcall
in
mov
jo
pop
mov
outsb
insl
cli
jecxz
jle
jle
fcmovnb
pop
ret
dec
jg
cmpsb
jmp
adc
insl
sbb
out
loop
andb
dec
ljmp
int
adc
daa
notl
fidivrl
dec
cmc
fsubr
push
in
xchg
movsb
paddd
in
xchg
fcmovu
in
into
add
ljmp
loopne
ret
mov
mov
lret
in
pop
fs
aad
mov
fcmovb
inc
arpl
mov
dec
or
lods
mov
out
insb
sub
mov
pop
ljmp
sub
push
xor
xor
cmc
movsl
mov
lock
ficompl
or
cmp
data16
push
dec
arpl
addb
aad
addb
jl
sub
inc
mov
scas
lods
test
test
stos
std
fisttpll
ja
mov
je
add
push
icebp
mov
mov
adc
xor
andb
add
pop
bound
imul
pop
mov
lcall
xor
cmc
mov
and
in
out
in
and
ljmp
sub
fimull
push
lods
jb
fisubl
cmp
sti
movb
loop
mov
adc
data16
xor
jecxz
mov
and
mov
jl
stos
adc
inc
nop
or
push
cs
neg
stos
ja
and
loope
loop
and
sub
lods
xor
mov
or
out
add
ret
adc
mov
int
jnp
and
lock
fcmovbe
shlb
xchg
jbe
adc
pop
xor
adc
push
push
mov
cmp
push
stos
xor
jecxz
jne
mov
data16
jmp
stos
mov
pop
add
xor
notl
leave
test
jg
sbb
mov
out
scas
push
repz
fs
pop
ret
std
inc
adc
jp
adc
pop
loop
fildl
stos
xchg
leave
jg
push
xor
shld
sub
add
icebp
jmp
fildll
dec
pop
int
aaa
xor
mov
cwtl
std
push
cmp
adc
or
adc
jg
pop
mov
lea
xor
loop
sub
int3
inc
subl
scas
hlt
mov
push
push
pop
sbbl
stos
loopne
cmp
push
and
inc
push
bound
lret
iret
rorb
mov
cmp
dec
jo
push
in
js
gs
mov
jo
insl
mov
iret
cmpl
sub
icebp
jl
negl
jp
mov
jle
pop
neg
mov
in
insl
jno
decl
lods
jle
imulb
lcall
push
loop
fwait
xor
mov
in
mov
fs
mov
or
dec
sbb
inc
cmp
lcall
stos
pop
jnp
sti
fstpl
stc
bound
fnstenv
mov
jle
cmc
movaps
add
and
pusha
adc
lret
fcmove
jmp
dec
add
mov
ds
push
call
cmc
mov
lahf
push
mov
cli
scas
xlat
in
std
pop
nop
data16
mov
ljmp
jns
sub
in
lods
lds
leave
and
sub
push
pop
lds
inc
lahf
pop
pusha
mov
sub
adc
fcoml
jae
sub
addb
sbb
pop
int
fwait
sub
xchg
sti
sbb
ja
sbb
sahf
jnp
sbb
xor
mov
xchg
pusha
out
xchg
lock
fidivrl
or
imul
gs
addr16
pop
lret
cmp
lods
imulb
je
adc
mov
outsl
loopne
mov
call
out
jmp
jle
xor
dec
mov
mov
les
pop
jle
adc
clc
sbb
lahf
pushf
inc
xchg
in
add
xor
push
jne
arpl
lea
fisttps
jmp
faddp
xchg
cmp
fdivp
imul
in
mov
fsubrl
cwtl
je
dec
testb
fucomp
loope
repnz
scas
xchg
mov
ljmp
hlt
xchg
dec
mov
jo
mov
and
or
pop
sbb
out
cmp
idivl
aad
jo
push
sbb
mov
push
lds
push
jecxz
mov
lret
outsb
add
cmc
stos
inc
js
popa
rclb
or
pop
and
sub
mov
stos
aas
mov
gs
movsb
lahf
mov
cmp
ljmp
mov
hlt
lcall
xor
adc
daa
addr16
std
adc
sub
pop
in
sub
inc
pop
das
dec
inc
pop
push
push
adc
add
adc
out
pop
xor
cwtl
loopne
fdivl
mov
in
fstpl
clc
add
sar
iret
xchg
jg
and
out
arpl
loopne
fdivrl
mov
movsb
xlat
shrl
ljmp
cmpsl
in
loopne
subl
jecxz
xor
ljmp
ja
pop
push
xchg
or
cmp
popa
or
popl
xor
lock
outsl
jecxz
push
sbb
icebp
add
fstpl
or
inc
movsl
idivb
and
fsubp
xchg
int
bsr
sbb
jns
jo
sarl
stos
xchg
lret
sbb
lods
jnp
xor
lldt
repnz
pop
iret
push
jg,pn
inc
pop
repz
movsb
jb
add
arpl
clc
stc
and
fwait
stos
sti
test
jecxz
lods
popw
popf
mov
and
adc
jae
stos
jno
sub
mov
mov
imul
fcmovnu
jg
cmp
cmp
inc
xchg
test
insl
or
loope
popf
xorl
iret
enter
vpaddsw
mov
in
mov
loop
lret
fmull
jg
lcall
sub
dec
add
add
addb
in
jg
int
pushf
sar
lcall
add
adc
pop
and
decl
and
xor
sub
pop
inc
loop
add
popf
cmpsb
loopne
mov
fcmovbe
or
stos
push
push
pop
pop
lds
push
sbb
int
icebp
dec
arpl
or
stos
fstpl
rolb
jb
imul
inc
adc
dec
inc
icebp
aas
mov
and
and
in
out
mov
clc
and
or
dec
mov
outsl
iret
movsb
pushf
mov
or
sub
shlb
lods
mov
mov
xchg
pop
ret
lods
sbb
sbb
xor
insb
pop
movsl
test
push
cmp
stos
xlat
jmp
fldl
adc
sub
lret
jnp
pop
or
fsubrs
jge
xor
ficoms
sub
cmp
ficompl
loop
test
testl
pop
push
sub
fisubrl
add
movsl
pop
cs
dec
jmp
push
fnstsw
mov
lcall
add
fildll
push
fcomi
sub
cli
mov
stc
sub
icebp
add
sub
frstor
out
out
insl
pushaw
cli
push
sub
cli
jnp
cmp
inc
mov
fists
mov
sbb
inc
jecxz
arpl
fisttpll
inc
sbb
mov
or
jmp
xchg
pop
rep
fbstp
mov
dec
inc
fldt
push
lahf
cld
movsl
pop
stos
fnsave
or
ja
iret
mov
sbb
fnsave
and
cli
sub
ljmp
aad
jl
cmp
push
enter
cmc
aam
fisttpl
rcll
push
sbb
frstor
rorl
arpl
test
imul
shr
inc
fbld
fnstcw
pop
jns
push
add
and
popa
jle
lea
decl
ljmp
ret
lret
cmova
pop
je
sti
mov
pushf
cmp
pop
rcl
or
push
mov
sbb
inc
daa
in
addr16
arpl
lcall
cli
test
cmp
stc
fdivl
push
adc
daa
cltd
adc
fcmovnu
pop
int
imul
push
sti
adc
cmp
dec
int3
pop
lret
cwtl
stc
pop
mov
icebp
lahf
sbb
jle
filds
fsubrl
out
xor
mov
push
pop
lock
push
cmp
scas
and
stos
clc
je
jl
sarl
or
outsl
pminsw
push
dec
fstpt
mov
scas
push
inc
pop
stos
mov
enter
lods
test
push
std
jmp
pop
stc
ret
pop
adc
cwtl
inc
dec
js
test
dec
out
pop
add
or
aaa
mov
jmp
fcomi
dec
sub
pop
je
fldt
scas
mov
stos
test
mov
pushf
mov
leave
jns
jbe
cmp
fistpl
fidivrs
mov
or
jnp
fistl
cltd
cmp
subb
out
ljmp
cmp
arpl
push
or
pop
cmpsb
sub
inc
mov
pop
iret
dec
pusha
and
dec
push
inc
sbb
insb
fistl
int
lods
or
in
call
mov
popa
fisttpl
ret
mov
add
fistpl
lds
xorl
cltd
stos
add
inc
pop
push
frstor
xor
pop
and
and
fldl
jmp
jge
stos
mov
decb
stos
sbb
call
adc
int
xchg
fistl
in
inc
fistl
test
enter
rcrl
fistpl
sub
pop
fcmovnu
push
js
mov
cli
xchg
mov
into
fucomi
shrb
add
leave
mov
ret
fcmovnb
jp
pop
push
dec
and
xchg
xor
mov
inc
in
je
pop
push
les
jmp
xor
neg
cmp
pop
or
test
lcall
cwtl
aaa
call
inc
scas
mov
rcll
inc
and
imul
jmp
int3
mov
jle
fistl
decb
js
jno
jb
sbb
add
xor
movsb
pop
nop
je
mov
push
sbb
dec
popa
add
call
pop
sbb
rorl
sbb
fdivp
fcmovnu
orb
fistpl
and
fcmovnu
fwait
lea
cmp
sub
xor
loop
pop
pop
xlat
jb
fildl
adc
pushf
leave
rclb
loopne
jl
xchg
lock
push
pop
fbstp
call
sub
pop
sbb
scas
xlat
outsl
dec
pop
xchg
or
gs
mov
addr16
sub
jb
addl
jl
sub
fsubl
imul
pop
shrl
or
sbb
pavgw
add
insl
fdivp
test
adc
shr
add
cli
inc
call
out
cli
cmpl
in
rcrl
xchg
loopne
insb
or
icebp
cmp
or
add
cmpl
push
das
mov
jecxz
sbb
cmpsb
jmp
pop
adc
repz
popf
sbb
stc
out
idivb
sbb
fcmovbe
xlat
out
pop
pop
jecxz
fistl
dec
xor
call
loopne
cmpsl
inc
ljmp
or
into
repz
or
dec
fnstenv
pushf
test
inc
ror
clc
mov
mov
movsl
in
popa
jl
sbb
jmp
pop
cmp
rclb
jo
jp
fndisi(8087
popf
dec
dec
and
ss
cmp
xchg
sub
pop
sub
inc
xchg
jl
call
push
mov
sbb
pop
pop
cltd
or
inc
dec
test
jmp
push
xor
lahf
cli
adc
pop
push
imul
sbb
insb
xor
icebp
negl
daa
xchg
scas
jmp
cmp
cmc
out
or
stos
loope
fistl
in
jle
aas
sbb
dec
fs
lea
jns
pusha
int
mov
sbb
outsl
pop
pop
sbb
adc
js
push
xchg
xchg
fwait
adc
call
stos
mov
lret
adc
cmp
fisttpl
mov
shld
sub
jle
pop
fprem1
subl
mov
ja
mov
out
add
dec
dec
mov
fucom
stos
xchg
push
rorl
js
or
cwtl
xlat
test
lds
int
mov
pushf
push
loope
gs
cmp
ret
inc
fcmovnb
out
cld
cmpsb
xchg
in
dec
loopne
int3
dec
dec
sarl
repnz
sub
sub
mov
data16
mov
jae
fwait
mov
mov
fnsave
and
fcmovne
push
cmpsb
jno
ret
mov
push
scas
xor
js
or
pop
fneni(8087
inc
inc
xlat
dec
sbb
leave
repnz
pop
loopne
cmc
notb
sti
hlt
popa
xor
cmp
inc
test
or
mov
jl
xor
fildl
fiaddl
into
outsb
sbbb
insb
push
jl
add
fstps
nop
sbb
pop
in
mov
hlt
pop
cmp
stos
xor
divb
adc
dec
fadds
das
outsl
outsb
int3
sbb
cmp
nop
jg
ja
lods
mov
insb
jns
mov
cmp
fildl
mov
jecxz
sub
cli
pop
fistpl
in
mov
in
xor
sbb
into
sbb
fcmovb
iret
repz
lret
pextrw
in
pop
insb
push
addr16
push
sbb
call
fcmovu
imul
insl
fistl
or
cmp
push
mov
insl
out
jb
setnp
inc
jbe
shl
mov
mov
sarl
stos
cmpsb
sbb
dec
pop
sub
mov
cmp
fbstp
popf
outsl
pop
nop
fildl
mov
repz
fucomi
mov
movsb
xor
shl
sub
xchg
ror
in
and
cmp
pusha
fldt
stos
mov
ljmp
loopne
sbb
je
and
test
sub
push
loopne
gs
mov
dec
pop
dec
sbb
mov
jnp
rolb
cmc
fldt
rcll
mov
xchg
aas
push
dec
in
stc
xor
popa
repnz
sub
scas
fs
cmp
pop
sub
lock
ss
inc
jecxz
xchg
ret
std
push
or
pop
push
int
mov
daa
fnstcw
dec
scas
mov
fistpl
mov
and
movsb
push
cwtl
mov
mov
fsubrs
and
stc
fidivrl
addr16
and
cs
lea
dec
push
adc
cltd
in
int
pop
xor
loope
clc
cmc
mov
lea
push
fidivs
mov
ret
scas
div
sbb
inc
sbb
cmp
cli
pop
jp
mov
aas
or
loopne
out
mov
fidivrs
xorb
jmp
fwait
xchg
imul
das
inc
push
xchg
mov
sub
test
test
mov
or
jp
sahf
shlb
test
fs
ss
gs
fnstsw
hlt
lcall
jno
mov
sub
stos
mov
mov
sbb
dec
cmp
cmp
fistl
out
xchg
sub
lahf
dec
sbbb
xor
test
cmpl
push
bound
inc
leave
push
insl
xor
pop
push
call
sub
je
push
loop
idivb
inc
jae
lcall
fwait
dec
sub
fistpl
sbb
adc
fstpt
fdivs
int
dec
das
mov
or
fcomip
jg
xchg
pop
xor
xchg
jns
inc
addr16
popa
popf
pop
inc
aas
xor
add
mov
loopne
daa
loope
adc
cmpsl
push
loop
pop
test
dec
add
mov
jne
and
aad
pop
adc
pusha
mov
loop
mov
jge
test
adc
pop
fldt
adc
pop
xchg
pusha
xchg
pushf
mov
daa
fstpt
pop
inc
iret
jae
inc
push
mov
fs
fucomi
loop
xor
pusha
mov
int
lret
shlb
adc
insb
mov
outsl
icebp
fucomi
arpl
rol
fwait
sbb
sub
cs
dec
dec
xchg
pop
hlt
push
in
in
sbb
popf
push
jle
mov
or
adc
adc
sbb
sub
sbb
push
adcl
int3
roll
stc
lock
jbe
mov
fwait
out
pop
dec
sub
xchg
sbb
mov
pop
scas
mov
sarl
sbb
pop
inc
fistpl
mov
sahf
add
test
push
call
sbb
or
out
push
or
stos
cmp
dec
jnp
lret
add
imul
data16
out
rcr
mov
jg
cmp
cs
jp
inc
repnz
les
jmp
loopne
sub
ficompl
ljmp
or
sbb
xchg
push
out
cmpsl
jmp
hlt
sbb
xor
add
movsb
pusha
xor
push
push
fwait
xlat
pop
pop
loopne
add
fsubrs
sub
pop
mov
fistpl
xchg
cmpsl
adc
and
pop
cmp
push
lods
cmp
mov
add
nop
jo
adc
sub
and
dec
sbb
fildl
out
and
mov
es
call
mov
movsb
mov
add
xlat
mov
cwtl
int
pop
sub
push
xor
push
neg
loopne
mov
out
mov
cmc
loop
mov
push
fisttpl
fcomp
cli
stos
test
call
sbb
daa
or
xacquire
in
shlb
add
cmpb
ficoml
cld
fucomip
fildll
cli
adc
stos
out
in
sbb
jae
dec
hlt
adc
aas
ja
loop
lods
mov
and
push
out
or
sub
fistps
repnz
cmp
out
jge
repnz
cmpsb
sub
lcall
loop
dec
gs
shll
add
ja
in
scas
push
lods
fimuls
cmp
mov
lcall
int
fcompl
or
jecxz
pop
fwait
orb
cmp
jg
mov
icebp
add
pop
push
stos
pop
hlt
fimull
cmp
jae
adc
add
push
and
out
arpl
sub
scas
add
mov
ljmp
mov
clc
icebp
repnz
loopne
jmp
xchg
xchg
mov
arpl
pop
sub
push
inc
adcb
rorl
repnz
sti
decb
lahf
adc
mov
or
mov
bnd
outsl
jb
add
cmp
add
sub
jl
inc
jo
xchg
push
jmp
cmp
jnp
popf
sbb
out
mov
pop
insb
xor
ljmp
sti
lcall
jmp
add
pop
insb
and
pop
push
lcall
loopne
dec
sub
adc
int3
push
adc
pop
lret
pop
mov
cmp
dec
or
bound
cmp
jp
cmp
scas
pop
sbb
or
or
push
cmp
jb
cmp
cs
cltd
xchg
sub
mov
xchg
es
push
adc
sti
cwtl
lret
dec
sbb
and
jns
testb
push
repnz
sub
shlb
or
es
push
fsubrl
xchg
mov
pop
jbe
stos
mov
repz
inc
out
sub
jecxz
xor
dec
sbb
xchg
push
xchg
in
out
xchg
je
dec
inc
or
sbbl
mov
dec
sti
sub
gs
fsub
loop
inc
insl
movl
and
push
repnz
sub
loop
icebp
insb
mov
in
mov
or
lcall
jg
mov
cld
ljmp
pop
mov
and
insb
loopne
pop
fisubrl
ja
lods
pop
pop
sbb
stos
hlt
arpl
stos
push
jnp
sub
xchg
sbb
fsubp
mov
and
out
jg
fwait
jns
into
int
out
lods
pop
xchg
fildll
andb
sub
xchg
sub
jp
out
dec
pop
dec
lcall
ljmp
jns
push
dec
pushf
daa
cmp
cmp
addl
add
aaa
loopne
shlb
sahf
add
or
sbb
orl
inc
cmc
stos
inc
shrb
or
bound
test
jb
mov
cli
andl
lods
out
add
lcall
dec
fdivp
adc
punpckhdq
mov
out
or
dec
call
repnz
adc
mov
mov
lahf
mov
lret
xchg
push
imul
pop
lret
fdiv
mov
inc
xor
mov
add
pop
jo
and
pop
jno
pop
sahf
mov
cmpsl
aam
rorl
xor
frstor
in
xor
in
out
or
js
out
xchg
jmp
leave
sub
ss
push
jns
scas
js
sti
idivl
pop
in
pop
xor
sbb
pop
cmp
and
sti
popa
ljmp
push
adc
xchg
xor
loope
jbe
push
xchg
test
cld
sbb
pop
jo
mov
add
sbb
or
jge
sti
repz
sar
mov
sti
sub
mulb
fisttpl
stos
sbb
mov
stc
in
xor
lea
pop
or
inc
icebp
scas
inc
in
gs
cmp
std
or
ret
jmp
pop
test
shl
mov
mov
out
xor
xchg
stos
push
insb
daa
dec
mov
pop
in
lock
in
repnz
adc
sbb
daa
dec
xor
mov
pop
and
or
sbbb
cmc
adc
inc
sti
jns
nop
icebp
jmp
jno
push
sahf
js
mov
jae
fldl
clc
punpckhwd
and
cmp
and
gs
lock
out
lods
add
call
cmp
or
leave
sub
movntps
inc
in
jmp
push
movsb
jl
cmp
mov
pop
lret
out
or
jne
daa
int3
shll
repz
aaa
add
pop
lods
mov
enter
mov
and
clc
push
out
jl
es
adc
shlb
jmp
mov
lret
mov
cmp
subl
cmp
inc
lods
cmp
xchg
adc
sbb
lods
nop
scas
stos
bound
fnsave
pop
fisubrs
bound
mov
clc
push
data16
loope
cltd
or
iret
into
out
ficoms
sbb
xchg
adcb
aaa
push
lods
mov
pminub
jns
push
push
add
imul
mov
mov
mov
or
testl
gs
push
iret
lret
ret
mov
sub
loopne
jp
lcall
and
pop
insl
pop
stos
outsb
push
nop
loopne
fmul
xchg
and
int
lds
or
adc
or
enter
addr16
fidivs
mov
mov
push
notl
sti
testl
fs
adc
les
or
mov
sbb
lea
cmp
ljmp
faddl
test
outsl
or
cmp
outsl
stos
cmpsb
cmp
out
lds
sub
arpl
jl
in
je
xchg
and
iret
cmpsl
or
fstpt
dec
mov
in
daa
call
leave
fimull
fdivrp
adc
cmpsb
in
and
adc
fstl
mov
inc
and
pushl
pushf
pushf
pushf
pushl
ret
and
test
mov
adc
imul
adc
sbb
pop
jns
jne
iret
popf
fwait
pop
shll
xchg
inc
inc
jo
stc
xor
rcrb
xchg
lea
lods
mov
std
popf
sub
call
push
sahf
addr16
push
jmp
xchg
xchg
or
dec
les
jno
xor
cli
in
push
or
lods
ljmp
add
in
in
cltd
xor
loope
cltd
add
mov
jbe
sub
mov
cmpsb
mov
mov
mov
outsb
cmp
and
push
es
repnz
cmp
sub
rcr
cltd
popf
fwait
test
xor
mov
addr16
mov
int3
cmp
lock
hlt
div
pop
int
fs
sub
aaa
punpckhdq
dec
ja
jns
dec
pop
cmpsb
and
jbe
les
sahf
or
ret
ds
cmp
cli
push
jle
fwait
mov
jmp
loop
movsl
mov
loope
sub
inc
push
iret
std
mov
mov
and
xchg
fwait
icebp
in
addr16
cmp
add
mov
and
int3
sbb
pop
outsl
add
cmp
lock
out
pop
test
cwtl
scas
mov
adc
rcrl
jge
call
push
or
mov
xor
out
sar
jb
ljmp
int
ja
mov
movsb
mov
popa
mov
add
mov
dec
xchg
pop
xchg
test
popa
pop
jae
test
scas
push
ja
sbb
clc
xchg
cwtl
in
push
addr16
in
adc
lahf
adc
jb
imul
push
push
push
inc
ret
rcrl
icebp
cmc
bound
sub
add
push
push
cld
gs
sbb
popf
push
lods
mov
xor
out
adc
in
movsb
mov
loop
pop
sub
hlt
adc
outsb
or
cmpsb
push
stos
jmp
aas
outsb
imul
adc
mov
cltd
jg
dec
lret
ficompl
jge
or
cmc
imul
mov
adc
or
dec
jg
pop
sbbl
cmp
dec
les
mov
xchg
movsb
mov
add
repz
scas
pop
xor
mov
mov
mov
movsb
test
ss
shrb
dec
jle
ljmp
sbb
pop
fmull
in
and
int3
fistpll
outsl
sub
pop
inc
sbb
xchg
pop
stos
call
cmpsl
imul
push
mov
fstpl
xor
bound
hlt
mulb
inc
data16
jp
lahf
popf
and
sub
fsts
add
mov
jge
imull
mov
pop
ljmp
lods
pop
push
mov
pop
add
adc
sbb
mov
sbb
fwait
icebp
je
subb
jae
out
push
mov
cltd
test
sbb
xor
mov
cwtl
sub
icebp
pop
mov
jne
sbb
into
pop
dec
cmpsl
test
stos
jg
shrl
xchg
fdivr
clc
scas
ss
add
loope
or
add
pushf
cmc
pushl
pushf
mov
clc
pushf
test
movb
mov
jmp
jb
test
fnstsw
imul
push
cmovbe
adc
mov
jne
fwait
popf
add
std
dec
int3
pop
pop
mov
or
data16
jo
insb
fistps
stos
inc
add
pop
sbb
scas
mov
nop
call
pop
fisttpll
jl
mov
push
jns
imul
xchg
jno
fcmovnu
xchg
pop
repnz
fcoms
mov
sbb
into
fcompl
mov
dec
xchg
jmp
lret
mov
fs
mov
outsb
test
jb
push
dec
jmp
cwtl
dec
mov
mov
jo
jmp
mov
mov
pop
js
inc
sub
pop
mov
fsubp
mov
jo
lahf
popa
jg
xchg
xchg
stos
push
or
fistpll
push
or
mov
testl
mov
mov
jl
xor
repnz
inc
mov
jge
gs
and
popf
ljmp
mov
adc
sbb
mov
mov
or
pop
mov
jne
es
ret
add
insl
mov
fld
rclb
pop
jmp
sbb
xor
in
jb
popa
les
ja
leave
dec
das
addl
push
inc
xchg
fwait
xchg
popa
pop
dec
sbb
cmp
out
jo
sbb
and
jae
add
shrd
add
call
jo
stos
mov
mov
and
jae
fistps
mov
cmp
pushf
sbb
fincstp
jae
add
pop
sti
lahf
ja
cmp
or
jp
cmp
in
jg
movb
cmc
inc
ret
iret
cltd
sub
mov
and
insl
push
push
jp
das
inc
in
mov
xchg
insb
xchg
add
jp
xor
pop
ds
test
rol
les
sub
push
cli
adc
mov
into
sbb
decl
pop
rcrb
stos
lods
pushf
call
not
xadd
add
movsbw
sub
clc
movsbw
shr
or
xchg
bsf
bsf
mov
cmc
shl
movzbw
add
test
add
not
sbb
shl
mov
bt
pushf
shr
bt
pushl
pushf
test
cmp
jmp
pminsw
aad
jb
cli
mov
jle
aad
and
loope
movb
scas
cmp
push
leave
jmp
push
aad
xor
rcl
sysret
aad
dec
add
sub
add
ret
out
and
ljmp
adc
cmp
pop
aad
xchg
and
mov
loop
rcll
addl
mov
push
aad
outsl
sbb
popa
and
jb
inc
mov
daa
ret
aam
int3
dec
or
andl
adc
or
xorl
inc
movb
pop
rorl
dec
leave
xchg
orl
mov
jle
aad
cmp
stos
or
add
test
bound
ljmp
xor
adcl
ss
adc
test
add
mov
std
insl
or
subl
or
and
mov
scas
andl
jle
stc
or
adcl
int3
xchg
or
popf
jae
jge
mov
aad
adc
adc
pop
aad
inc
cmp
xor
addl
cli
scas
addl
lods
xchg
sub
adc
xorl
adc
or
or
lea
aad
ret
ljmp
aad
mov
cmp
cmp
andl
clc
scas
and
and
enter
or
cmp
or
jmp
push
aad
sub
insl
mov
pop
aad
das
xchg
les
add
push
lods
push
push
or
adcl
jb
ljmp
clc
aam
orb
or
lea
aad
mov
xorl
test
addl
add
lahf
shrb
fimuls
in
fwait
int3
jmp
mov
dec
push
int3
or
add
xchg
xor
jbe
inc
pop
lea
je
call
js
popa
popf
mov
sub
stc
jg
xor
inc
insl
ret
loope
std
sbb
xchg
fildll
popf
mov
sbb
or
in
jmp
addr16
xor
push
dec
xor
je
cmp
fidivrs
test
aad
or
jo
jl
cwtl
insb
mov
add
clc
lods
sbb
add
pop
dec
cwtl
pop
insb
adc
insb
and
pusha
pushf
pushl
ret
push
inc
lret
popf
mov
dec
fsubl
dec
into
jl
mov
out
dec
pop
sbb
scas
mov
stos
lods
jle
imul
data16
add
outsb
in
jp
or
mov
pop
jp
or
inc
les
imul
popf
out
inc
xor
pusha
sub
repz
sub
sar
cltd
repz
inc
cmpsb
pushf
cmc
testl
sub
cmp
test
out
mov
inc
seta
mov
push
jmp
adc
mov
pusha
push
lea
jae
pushf
movl
pushf
mov
lea
jne
push
mov
stos
pusha
lea
jmp
sbb
lret
and
mov
pop
dec
fiaddl
scas
imul
cld
sbb
repnz
outsl
in
mov
ja
loope
or
and
sub
mov
sbbl
inc
jo
mov
push
xor
add
mov
jge
jecxz
das
xor
sub
rolb
sbb
adc
faddl
cmp
push
clc
dec
xor
fmuls
mov
push
mov
call
xor
cli
enter
adc
pop
mov
mov
cli
mov
or
sbb
jns
or
inc
hlt
fldt
fucomi
outsl
jb
sbb
add
adc
sub
mov
pusha
or
cmp
xor
xchg
add
sbb
dec
cs
mov
fcomps
shrl
out
sbb
sub
repz
add
or
mov
bswap
not
lea
push
lea
jmp
rep
pushf
movzbl
mov
mov
pushf
pushf
lea
jmp
call
fs
fwait
mov
and
sbb
loop
push
test
scas
movsb
mov
or
push
mov
out
or
sbb
dec
inc
stos
arpl
and
mov
fbld
pop
xchg
repz
aas
lods
stos
add
push
jmp
mov
inc
mov
mov
or
xchg
out
test
mov
dec
test
js
loopne
and
push
setg
out
mov
inc
paddd
incl
addl
fistpll
pop
xor
xor
xchg
cmp
scas
and
fwait
lahf
mov
dec
movsb
add
ja
sub
xchg
repz
jmp
cwtl
pop
jp
inc
xchg
cmp
or
or
lcall
xchg
inc
add
subb
lcall
jle
push
xor
and
jbe
sbb
push
cmc
movsl
or
jmp
pop
sarb
rorl
sti
xor
push
add
cmpl
sbb
fildl
nop
jle
dec
sub
iret
mov
jecxz
sahf
jo
mov
outsb
fnstcw
xchg
cli
enter
push
lock
add
fimull
bound
aaa
mov
adc
sahf
adc
jle
cmp
lock
scas
mov
inc
cld
push
frstor
arpl
lahf
jne
xor
sbb
xor
jbe
or
jle
faddp
mov
pop
add
lods
push
fists
mov
sbb
mov
cmc
clc
add
call
call
push
push
inc
push
xor
cs
insb
add
jo
adc
and
ret
pushf
pusha
movb
lea
jae
jmp
adc
cltd
mov
out
fstpl
cmp
push
jae
scas
adc
ss
loop
push
xor
mov
pop
jg
fucomi
call
jb
push
in
xor
xor
xor
xor
xchg
es
lret
or
and
adc
sub
push
adc
push
cli
xchg
or
in
icebp
call
or
mov
test
loopne
sub
fsubr
cmc
lods
sti
rol
in
mov
lret
fcomps
xor
xor
dec
adc
ret
loop
incl
mov
mov
adc
pop
popf
pop
fstpl
outsb
mov
cmp
mov
sub
bound
insb
hlt
iret
xor
adc
xchg
imul
mov
mov
xor
mov
fxch
inc
adc
lock
xor
out
mov
xor
addr16
jae
adc
xor
mov
adc
icebp
jne
pop
imul
stos
cmpsl
xchg
ficoms
ss
fildll
fiaddl
insb
jno
ja
dec
hlt
scas
mov
jbe
add
adc
imul
popa
addr16
leave
les
push
test
popa
sub
inc
mov
stos
stos
aas
stos
xor
xlat
push
pop
push
xchg
pop
inc
xchg
push
sti
cmc
std
inc
addr16
cmp
cmc
xor
pushf
stc
rol
mov
inc
stc
clc
bt
cmp
jmp
mov
movl
lea
ja
call
fidivl
pusha
ss
ljmp
sbb
xor
je
mov
insb
lock
adc
imul
aaa
mov
jmp
fs
lods
imul
or
pop
in
out
lret
inc
and
xchg
or
insl
adc
mov
arpl
push
dec
aam
dec
int3
pop
mov
dec
loopne
sub
cmp
icebp
fistpl
cld
jl
outsb
call
add
add
add
test
ja
add
add
addr16
add
add
add
add
add
add
add
adc
ss
add
jp
add
sbb
add
add
add
add
inc
jp
add
adc
pop
jp
add
inc
jb
popa
je
push
jb
arpl
jae
inc
jne
add
je
bound
add
je
outsl
imul
cs
insb
add
add
mov
or
pop
fisttpll
bound
xchg
aad
iret
imulb
ret
test
enter
dec
cmpsb
in
adcb
into
xchg
xor
popf
jne
fsubrl
push
mov
lods
sbb
xchg
out
mov
xchg
clc
jb
sahf
lret
adc
mov
mov
sub
sub
mov
lahf
mov
cmp
std
jmp
fwait
xorl
sti
outsl
push
fstpt
add
add
inc
mov
outsb
mov
nop
insb
mov
xor
lods
pop
outsl
stc
push
clc
pop
cld
pushf
sbb
enter
std
pushl
jns
mov
mov
jbe
stos
clc
push
insb
push
sbb
mov
xchg
ja
out
jle
insl
nop
dec
cmp
mov
imul
pop
sbb
imul
mov
cmpl
lret
rorl
pop
or
les
pop
popf
das
fsubl
cmp
insb
jl
or
jp
and
fs
inc
inc
xor
rcr
es
loop
lcall
push
bnd
add
add
aad
shl
add
shrb
mov
movzbl
movsbl
lea
pushf
movl
jmp
es
ret
xchg
mov
push
fsubl
call
push
jl
bound
cltd
push
xchg
pop
lods
xor
mov
mov
mov
in
xchg
xchg
adc
mov
push
adc
lds
jnp
sbb
lods
cmp
insl
lcall
ret
xor
fadds
mov
pop
and
into
outsl
sbb
pop
mov
in
nop
xor
xor
les
movsb
test
fs
pop
jae
std
rcll
add
test
add
add
add
add
add
test
add
add
add
add
add
test
add
add
add
add
add
adc
faddl
adc
aad
adc
in
verr
add
add
add
add
adc
in
test
add
add
add
add
add
pop
sbb
hlt
test
add
add
add
add
add
adc
cld
test
add
add
add
add
add
xchg
add
adc
inc
mov
str
adc
enter
adc
lldt
adc
mov
sbb
sbb
sldt
add
call
nop
mov
mov
mov
jle
adc
loope
jp
sub
pop
outsb
bswap
cmp
imul
cmp
imul
ljmp
mov
iret
ss
inc
fwait
push
sbb
mov
ffree
test
out
add
fidivs
fcoml
dec
mov
stc
pop
mov
adc
in
aad
popf
subl
pop
fstps
jo
out
and
cli
jge
repnz
mov
xchg
rcll
jnp
outsl
popf
xor
and
mov
pop
outsl
in
pop
pop
fistpll
adc
push
call
xchg
push
lcall
cmpsl
sub
out
leave
ja
sub
mov
in
out
xor
aam
mov
push
mov
xor
pop
mov
fs
pop
cmp
push
fistl
push
xchg
mov
lds
pop
lds
shll
adc
inc
shll
cmp
push
imul
adc
pusha
roll
mov
into
fsubl
enter
arpl
cmp
and
cmpl
xor
rolb
adc
push
jecxz
xor
xor
scas
sbb
lret
pop
or
jecxz
sbb
aad
rorl
push
mov
incl
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
test
add
setle
lahf
bswap
movsbw
movb
setne
mov
movsbl
not
push
bswap
lea
pusha
mov
pushl
push
movl
push
jmp
shll
rcll
inc
add
sbb
jae
daa
scas
mov
cvtps2pd
or
imul
xor
test
xchg
ror
ret
nop
mov
mov
je
pop
mov
jb
mul
lods
adc
daa
imulb
and
mov
fists
mov
aas
shll
mov
xchg
imul
out
out
stos
dec
jmp
xor
fwait
dec
cmc
add
add
dec
ror
mov
mov
pop
into
hlt
jb
pushf
stos
dec
mov
fcoml
scas
test
xchg
jb
imul
dec
cld
mov
pushf
jb
lds
dec
stos
fcomps
push
mov
sbb
lcall
iret
mov
inc
jg
outsb
test
addb
outsl
and
or
xchg
mov
cmpsb
data16
rcll
dec
cli
pop
and
lret
out
out
inc
jne
lcall
stc
sub
stc
pushl
cmp
pusha
movb
cmp
pushf
movb
pusha
jmp
enter
mov
add
data16
add
add
fdiv
add
push
dec
mov
mov
notl
push
xchg
jge
jns
inc
mov
cs
mov
dec
cmp
and
cmp
scas
xchg
jbe
push
scas
or
mov
inc
jge
test
ds
lret
fs
cmp
mov
lret
push
sub
jge
push
mov
cmc
sbb
fistpl
dec
stos
mov
dec
cmp
shl
pusha
pushf
lea
jae
lods
pushf
inc
jmp
lea
je
sbb
btr
neg
dec
add
shr
xor
xadd
mov
sub
clc
test
shr
push
movzbl
mov
mov
mov
dec
add
bts
stc
add
clc
rol
mov
bt
clc
shr
call
lea
call
pushf
pusha
lea
jb
push
pushf
pushl
ret
dec
push
mov
add
mov
jl
ret
int
add
jns
push
pop
lods
or
test
lcall
push
inc
jno
orl
ljmp
and
testb
ret
aam
xchg
outsl
add
jo
insb
add
imul
ret
outsl
push
clc
xlat
xor
jo
push
mov
inc
or
hlt
pusha
pushf
xor
int
cmp
je
mov
mov
mov
push
jl
nop
out
aam
inc
pop
sbb
push
inc
imul
xlat
test
ds
sub
fisttpll
inc
lret
leave
pop
mov
sbb
xchg
xchg
call
jae
jmp
out
mov
add
add
dec
and
shll
notb
lret
mov
loopne
mov
jge
inc
add
lock
pusha
hlt
nop
hlt
clc
pushf
adc
xchg
aaa
inc
xchg
ds
sbb
mov
lea
je
call
cmp
xor
mov
loopne
in
nop
push
les
mov
dec
ljmp
test
lea
mov
dec
ror
fs
mov
and
lcall
ljmp
sbb
stos
testl
cmpsl
inc
dec
pop
ja
xchg
sbb
wbinvd
dec
aam
adc
xchg
xchg
push
push
bound
mov
sar
rclb
shr
not
sub
rcl
ror
pushf
call
jnp
lea
inc
xor
sub
dec
test
nop
adc
or
sbb
insl
outsl
mov
jmp
in
sbb
adc
loopne
cld
jno
ja
aaa
fcoml
dec
loop
mov
push
adc
inc
clc
sub
xor
pop
push
jg
dec
loopne
push
movzbl
movsb
inc
clc
mov
jg
sti
das
mov
rcrl
push
add
pusha
mov
adc
pushf
pushl
movw
pushl
ret
pop
jle
lea
rorl
or
and
fidivrl
cltd
mov
orl
cltd
outsl
sub
inc
xor
inc
ss
ja
lret
add
jle
ss
dec
ljmp
jp
lock
jle
fucomp
xchg
in
or
ficoms
mov
or
add
jmp
lcall
xor
push
inc
push
dec
xor
cs
insb
add
scas
sub
add
lret
fisubl
outsb
in
rclb
adc
fistpll
inc
push
or
cs
movsl
repz
push
imul
movsb
mov
in
and
out
data16
icebp
cmp
pusha
es
div
dec
mov
sub
push
cmpsl
cmp
jmp
mov
dec
mov
mov
test
movsb
pop
xor
sbb
inc
or
and
inc
adc
mov
decl
add
cmp
add
clc
cmc
stc
cmc
add
push
call
clc
jmp
movb
call
jb
sub
and
ret
popa
mov
inc
call
jae
adc
sbb
rcll
xchg
pop
fcoms
or
xchg
aas
subl
add
sbb
mov
fbstp
ret
xchg
leave
negl
inc
nop
mov
cli
sbb
mov
xor
aaa
sbb
jle
xor
mov
mov
in
iret
stos
mov
jg
cmp
movsl
mov
and
or
lods
movb
lea
jne
push
movb
inc
pushl
neg
pushl
cmc
sub
mov
pushf
pusha
ror
pushf
call
arpl
mov
mov
bound
scas
sbb
inc
fisubs
jbe
xor
mov
lcall
out
int3
hlt
rcl
sbb
stos
mov
xor
sbb
mov
adc
int
shlb
or
cmp
and
mov
lret
pop
and
dec
jle
test
mov
lods
add
shll
data16
rorb
dec
dec
daa
sbbl
and
test
push
cli
les
mov
popa
push
and
or
cmc
roll
lahf
int3
xchg
or
lahf
call
icebp
arpl
adc
xor
jp
cmp
icebp
mov
jle
cmp
mov
aad
loopne
pop
stos
sbb
fsts
ljmp
fidivs
jge
aas
or
pop
pop
mov
je
push
lret
sar
cmpb
jl
int
xchg
xchg
mov
aad
lret
es
inc
mov
loopne
fsts
jmp
gs
mov
fldt
ret
mov
xlat
cmp
mov
and
mov
mov
and
add
mov
sub
insb
rol
mov
xor
sbb
adc
sbb
outsl
arpl
inc
insb
insb
outsl
arpl
not
neg
pusha
pusha
not
inc
jmp
faddl
or
mov
enter
loopne
fcoml
mov
rolb
je
mov
sbb
mov
loop
jl
sbb
mov
push
mov
sbb
lret
stc
cmpsl
mov
and
inc
shlb
aaa
stc
aad
push
jp
shll
sub
pop
leave
mov
int3
pusha
add
into
int3
fdivrl
sbb
in
push
mov
jo
xor
inc
loope
jmp
mov
pusha
clc
cmc
clc
cmpb
pusha
pushl
pushf
jmp
push
lret
sbb
test
sbb
mov
sahf
fcmovb
lcall
scas
add
imul
or
push
imul
cmc
mov
xor
cmp
sahf
xchg
sbbb
sbb
mov
scas
js
sti
mov
std
xor
dec
mov
ss
shlb
sub
lods
inc
in
and
leave
mov
or
mov
add
pop
addr16
icebp
in
mov
ljmp
lods
cli
enter
sbb
gs
les
push
das
aad
pop
mov
imul
mov
push
in
outsb
or
sub
addr16
inc
outsb
mov
fwait
loope
ljmp
mov
adc
jmp
ja
cmp
movb
pop
in
clc
js
gs
fsubp
add
sbb
js
xchg
stos
jns
dec
fstpl
aad
mov
imul
sub
xchg
std
dec
pushf
add
movb
sub
sub
adc
pusha
call
ret
xchg
sti
dec
dec
sub
sti
leave
xlat
dec
inc
in
push
inc
repz
ret
cvtps2pd
push
xchg
xchg
lea
mov
or
outsl
pop
adcl
mov
subb
sbb
andb
vcvtdq2pd
inc
pop
sub
inc
out
out
mov
xor
dec
pop
sub
sub
shlb
rol
mov
sub
cmp
repz
jne
mov
rcrb
dec
mov
in
add
mov
mov
addr16
rcll
std
icebp
adc
add
xchg
ficoms
scas
dec
pop
inc
mov
icebp
xchg
pop
push
out
cmp
das
enter
rcll
es
mov
jnp
jecxz
lahf
add
xchg
ljmp
jle
or
daa
test
xor
jmp
pop
mov
fs
sbb
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jbe
xor
bt
bts
adc
mov
movzbw
shrd
btr
inc
add
dec
movsbw
mov
bt
bt
add
mov
movl
sub
inc
mov
call
stc
sub
push
clc
clc
stc
pushl
popl
cmp
cmp
call
imul
mov
cltd
daa
lea
xor
lock
xor
push
mov
push
hlt
shrb
mov
pop
sub
lods
xchg
int3
adc
and
ljmp
and
jnp
bound
xor
sub
pop
js
scas
mov
mov
test
add
or
sub
divb
stos
sahf
pop
fbstp
test
pop
xor
add
cmp
jg
xorl
mov
das
cmp
push
hlt
pop
shl
mov
sub
mov
xchg
outsb
scas
cmp
jp
icebp
sti
sti
jnp
mov
pop
stc
adc
jns
int3
add
pop
mov
arpl
add
xchg
insb
sub
xchg
mov
cs
mov
push
jno
mov
adc
xor
inc
push
push
fld
std
mov
inc
ret
test
fidivl
inc
out
xlat
sbb
sub
xchg
inc
add
dec
add
push
adc
adc
mov
popa
cmc
push
divl
xor
fstpl
gs
popf
shlb
add
hlt
push
clc
dec
pop
pop
sbb
icebp
jno
and
or
adc
jmp
add
push
mov
jecxz
sarl
jecxz
outsb
ficoml
add
jg
in
ja
mov
xor
out
lds
mov
leave
jge
xchg
jl
sbb
jecxz
lds
xor
mov
push
adc
daa
mov
pop
pop
xor
out
sub
mov
sbb
pop
ror
dec
inc
pop
cld
lods
mov
cmp
pop
mov
lea
loop
divb
push
repz
js
xor
lret
or
sti
sti
lretw
fwait
hlt
mov
fldcw
add
mov
lods
lods
test
cmp
jne
insb
xchg
outsl
push
xor
push
add
mov
rolb
mov
jb
out
and
sub
dec
mov
int3
inc
dec
xorl
arpl
sbb
xlat
aas
test
jmp
ret
mov
sahf
dec
in
rcrb
dec
ss
call
sub
sti
and
jns
std
xchg
ficoml
dec
repz
addb
aam
bound
mov
lcall
xor
and
rcll
inc
push
fisttpl
dec
inc
pop
xchg
gs
leave
das
mov
inc
xor
fnstsw
pushf
stc
fildl
push
jne
cmp
dec
xor
stos
fstps
test
adc
push
inc
mov
addr16
pop
dec
push
lea
jl
push
pushf
push
jmp
cmc
pusha
cmp
jmp
cmp
xorb
xchg
add
lahf
sbb
lret
cmp
xchg
repz
cltd
outsl
xor
dec
push
sbb
aas
pop
pusha
je
mov
inc
repz
cld
pushl
mov
cmp
bound
sbb
add
nop
or
and
add
adc
into
int3
push
pop
shll
pop
nop
stos
popf
cltd
jae
jle
cltd
ljmp
adc
das
addr16
aad
lock
jmp
sub
cwtl
mov
mov
pop
push
ret
ret
dec
gs
ja
xlat
iret
mov
xchg
and
mov
pop
push
xor
adc
fdivrp
inc
or
push
pushl
movl
call
cmp
pushl
pushf
lea
jae
bt
jmp
lea
call
jmp
push
mov
sbb
shr
cmp
gs
inc
sbb
cltd
mov
ret
addr16
xchg
loope
or
loopne
or
popa
sbb
test
add
mov
mov
cmpsb
push
mov
adc
xor
mov
mov
pop
adc
scas
and
ret
mull
imul
cmp
popa
lret
lret
ss
sbb
ss
push
stc
movsl
dec
lods
cmpsl
hlt
outsb
hlt
xor
cmp
dec
jo
nop
pushf
clc
and
test
fisubrs
dec
icebp
lahf
mov
mov
lea
ja
pusha
movb
lea
jb
push
cmpb
pusha
jmp
imul
mov
adcl
gs
lahf
aad
sbb
push
or
lcall
or
lcall
cmp
out
mov
scas
stos
mov
mov
repnz
xor
arpl
fcompl
xchg
or
push
fsubr
push
aaa
dec
mov
rcr
in
stos
dec
idiv
cmpsb
std
dec
xchg
cs
jle
fstl
mov
mov
icebp
jns
roll
and
inc
shll
mov
and
lret
imull
fwait
movb
pusha
lea
jmp
rol
movb
bt
mov
cmc
jmp
add
lret
orb
ljmp
adc
lret
es
clc
in
sbb
rorl
cltd
inc
lcall
fsubrs
rorb
je
rorb
test
adc
imul
jp
scas
imul
inc
cmp
cmpsl
or
sub
loop
mov
and
les
jle
or
sub
adc
jge
add
sub
sbb
sub
adc
xchg
lret
cmpsb
pop
mov
mov
data16
push
dec
xchg
sub
ss
es
ds
mov
jmp
jns
xchg
add
sbb
popf
jnp
ficoml
xchg
test
mov
mov
mov
xor
inc
jo
sbb
adc
push
aad
fs
cmp
ljmp
outsl
clc
xchg
add
or
jl
dec
push
xchg
mov
mov
adc
mov
lods
or
leave
cmpsl
mov
dec
mov
adc
xor
add
mov
mov
mov
sahf
cli
xor
mov
jg
lret
jnp
xchg
popf
mov
lods
mov
bound
test
push
dec
mov
cld
xchg
fcmovnu
mov
push
ja
test
shlb
sbb
jns
call
aam
test
sbb
dec
cmp
dec
ja
pop
xor
or
data16
lods
mov
push
dec
es
mov
fldenv
jae
adcl
addr16
fimull
pop
int
jb
jle
lret
adcb
lods
jb
xchg
ss
ljmp
mov
pop
jle
xchg
sbb
push
mov
out
cli
stos
lock
aam
in
aaa
dec
jl
scas
imul
mov
fldenv
daa
mov
xchg
das
sbbl
jmp
fnsave
inc
mov
fldpi
pop
lods
sbbl
and
or
and
jb
shrb
cs
push
das
mov
das
xor
jle
lret
loop
cs
adc
and
js
in
mov
lods
dec
bound
inc
and
js
sub
repnz
lods
aas
cmp
hlt
adc
iret
lret
imul
shrl
jmp
adc
mov
icebp
repnz
lcall
stos
jnp
xorl
adc
frstor
sbb
and
ja
xlat
stc
push
test
mov
out
sub
cmp
add
hlt
sub
js
lock
inc
pop
fdivl
jg
pop
ret
xchg
cmpsl
dec
mov
lret
aas
gs
mov
sub
ret
jmp
iret
sub
lock
sbb
lds
dec
fadds
clc
gs
sbb
or
mov
pushf
jae
cmp
fs
mov
or
cmp
mov
rolb
dec
sbb
cli
aad
jno
out
mov
mov
int3
js
rorb
pushf
inc
xchg
mov
sbb
inc
into
les
lret
orl
mov
cs
aam
test
xchg
cmpsl
dec
cld
jle
or
mov
mov
aad
xchg
xchg
mov
xor
or
and
xor
insb
mov
sarl
fdivl
mov
mov
pushf
mov
pop
dec
add
xor
and
fdivrl
lret
repz
dec
lea
neg
adc
push
repz
xor
add
sti
pop
cltd
outsl
push
es
inc
or
jle
mov
ret
add
and
pop
cmp
cmp
out
bound
sub
push
xchg
and
xchg
xor
add
sub
dec
push
mov
sub
pop
aaa
add
jnp
inc
ret
mov
mov
mov
into
hlt
push
xorb
sbbb
scas
fcomps
push
sahf
pop
xor
std
pop
mov
pop
dec
iret
cmpsb
and
decb
stos
jmp
sub
pusha
out
cmp
jle
sub
xchg
push
jns
mov
dec
inc
jns
call
loope
fiaddl
sub
add
shrb
clc
or
cmp
xorl
iret
scas
andl
xchg
cmpsb
repnz
idivb
xchg
std
push
mov
scas
and
cmpsl
addr16
lret
or
jmp
inc
dec
arpl
scas
jae
icebp
adc
jbe
sbb
inc
call
jp
ret
xchg
add
test
xor
jae
aas
jo
gs
jmp
add
fsts
cmp
mov
cmp
cwtl
pop
shll
imul
mov
cmp
popf
dec
jmp
popa
push
dec
test
xor
cli
cmp
push
and
ret
xlat
push
packsswb
jae
dec
aaa
push
imul
pop
sti
jnp
lret
mov
ds
dec
pusha
cmpsb
jl
mov
in
mov
dec
pop
pop
idivb
dec
jmp
pop
sbb
lea
fdiv
cmp
ljmp
adc
cmpsb
push
push
out
mov
into
aaa
pop
jge
lods
ret
test
outsl
iret
cmc
in
andb
mov
aas
xor
push
andb
fwait
cmpl
movsl
mov
mov
adc
nop
mov
dec
inc
dec
inc
xor
cs
insb
add
cmp
pushf
pusha
pushl
lea
jae
pusha
mov
add
pushf
mov
pusha
push
lea
jmp
lea
lea
ja
mov
push
movb
push
mov
setg
movb
setg
lods
bt
pushf
ror
call
mov
not
inc
pushl
mov
pushf
mov
call
xor
lret
out
sti
sbb
lahf
mov
push
lret
mov
int
mov
out
jmp
iret
adc
mov
cs
inc
aad
test
inc
inc
xchg
mov
sbb
stos
scas
push
rolb
js
push
push
xor
scas
pop
test
inc
movsl
rorb
mov
cli
call
cmp
dec
mov
add
loopne
push
cmp
mov
cmpsb
or
imul
fistpll
mov
fcmovbe
xchg
das
stc
pusha
mov
dec
out
and
push
jbe
aam
and
pushf
lock
js
movl
jmp
inc
mov
push
into
cli
js
pushf
xchg
pop
push
hlt
xor
pushw
lret
rol
push
or
xchg
movsb
mov
push
cmp
dec
lea
icebp
add
test
cmc
icebp
dec
enter
gs
jge
call
pop
jno
jo
into
lret
jnp
aam
adc
and
fs
mov
sbb
pop
outsl
incl
push
sub
mov
sti
aaa
mov
pop
dec
aas
or
mov
test
jns
lret
pop
test
mov
adc
in
aad
call
and
imul
lds
mov
cld
or
sti
cmp
dec
shlb
pop
lret
add
dec
push
mov
xor
stos
test
mov
cld
lea
jo
cmpsl
stc
out
insw
js
jbe
jle
jmp
xor
pop
sarb
jl
dec
setbe
add
mov
call
lea
je
neg
setp
mov
push
inc
pusha
mov
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
je
imul
cmp
stc
pusha
call
imul
mov
mov
cmpl
lods
inc
gs
sarb
ret
aas
sbb
xor
and
lods
pop
inc
inc
outsl
mov
lret
je
mov
pushf
ud2
push
shlb
into
aam
inc
lcall
inc
xor
insb
scas
aad
mov
inc
lcall
xor
dec
mov
pop
fiadds
sub
ficoms
call
pusha
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
dec
jb
cs
lcall
faddl
jl
sbb
mov
mov
outsl
pop
push
test
ret
fsubrl
fnstsw
stc
or
mov
dec
jne
movl
sti
or
mov
mov
inc
sbb
inc
clc
push
pushf
mov
std
mov
sti
add
jae
push
and
repz
mov
xchg
lret
push
mov
adc
js
std
decl
mov
lret
pop
aad
jno
pop
dec
xor
dec
inc
dec
loop
push
jp
popw
pop
mov
fsubp
and
imul
ja
inc
mov
jmp
push
jmp
or
xchg
mov
mov
cmp
pop
jge
out
pop
adc
xor
jmp
aaa
out
cmpsb
sub
inc
fildl
daa
xchg
pop
xchg
xlat
jecxz
jmp
ljmp
jbe
lret
mov
and
push
xchg
shl
pop
mov
adc
xlat
int
mov
in
mov
xor
inc
lret
das
jmp
stos
iret
adc
dec
xchg
adc
fucomip
movb
std
decl
or
add
jmp
ror
pushf
jmp
lea
jbe
pushf
pushf
inc
cmc
call
pushf
lea
call
jmp
test
test
lret
shlb
sbb
sbb
jl
clc
jle
or
out
xor
xchg
test
push
lret
cmp
xchg
or
lds
fdivrl
test
data16
fdivs
mov
mov
cld
and
pop
xchg
sbb
push
jp
xchg
pop
dec
dec
xorl
jp
loope
pushf
into
lods
int3
and
les
cmp
mov
or
outsl
imul
pushf
mov
pusha
push
push
pushf
pushl
ret
push
lea
call
pushf
mov
movb
lea
jae
call
pushf
lea
jne
test
bts
lahf
xor
sub
shl
mov
rol
add
cmc
or
mov
pusha
pusha
stc
test
call
call
mov
jne
lret
outsb
xor
push
add
fsubs
jb
xchg
scas
inc
push
pop
sub
adc
aad
movsb
movl
or
jp
fs
pop
ja
out
lret
aas
jae
jnp
mov
fimull
or
je
lret
cs
pop
aam
test
sarb
and
mov
lock
sub
xchg
xchg
cmpsb
xor
sbb
out
lcall
push
fs
test
testl
jle
jle
add
mov
cli
jns
mov
loop
jmp
pmaddwd
jle
out
gs
sbb
jnp
je
push
adc
mov
mov
cmpl
cmpsl
lret
aas
sbb
xor
and
pushf
and
sub
out
test
scas
xor
mul
inc
ret
sar
mov
repnz
mov
out
fisubs
rorb
outsb
fimuls
jmp
xor
cmp
jne
adc
stos
fmull
push
ja
xchg
sti
adc
imul
std
xor
xor
dec
mov
test
push
push
and
pop
jcxz
arpl
fisttpl
mov
adc
push
cmp
mov
fnstsw
pop
mov
and
xchg
inc
fistps
push
cmpsl
insl
mov
das
mov
pop
ret
mov
xor
fimuls
idivl
mov
popf
rclb
sti
stc
cmpsl
lcall
addr16
fwait
out
adc
scas
adc
add
nop
cmpsb
xlat
pop
sub
popf
out
pop
xlat
xor
flds
mov
push
aad
bound
call
stos
std
jmp
movw
mov
mov
call
adc
lds
lret
test
and
enter
push
fimuls
pop
incl
or
pop
popf
leave
ja
mull
inc
mov
push
into
xchg
rolb
inc
es
fisttpll
push
cltd
sbb
xchg
fmul
add
jae
or
cmp
scas
je
bound
cltd
xchg
push
add
fcomps
pop
sub
inc
repnz
xchg
cltd
mov
shlb
push
std
xlat
in
data16
fisttpll
mov
aad
clc
aam
insl
xchg
jne
imul
adc
rcl
jnp
in
sub
lods
cld
xor
cmpb
call
jmp
push
movl
jmp
cmpb
lea
pusha
push
jmp
add
xlat
jb
lret
sahf
mov
enter
xor
hlt
mov
shr
sbb
std
insb
sti
mov
fwait
popf
rcl
int
lahf
jmp
or
mov
jg
add
push
mov
daa
fidivrs
int
popf
sbb
and
ret
push
jp
jmp
dec
das
push
sti
bound
cmc
daa
fwait
jno
push
jp
mov
imul
arpl
xor
xrelease
scas
loopne
xor
adcb
or
jns
mov
add
mov
mov
js
into
negl
sbb
xor
cmp
cmp
std
xor
mov
mov
cmp
mov
mov
pop
xchg
adc
cmp
sub
cwtl
out
cmp
dec
sbb
push
in
cli
lods
sub
push
dec
cmp
jbe
pop
jae
xor
aad
xor
lods
sub
pop
movsb
stos
clc
jl,pn
sbb
jl
jl
adc
dec
nop
or
cmp
popa
iret
stos
loope
negb
mov
rorb
inc
ficoml
ficoml
pop
fcmove
add
stos
inc
aaa
stc
idiv
femms
mov
movb
jecxz
jp
out
jb
mov
adc
out
outsl
adc
xor
or
mov
or
mov
adcb
cli
jle
scas
push
stos
xchg
mov
jbe
push
icebp
mov
popa
sub
lret
je
push
jbe
loop
lods
mov
data16
rorb
xor
sub
mov
or
and
xor
popa
fistps
int3
in
loopne
and
pop
aas
cmpsl
xor
sub
js
mov
insl
jae
cmp
ds
mov
ret
shrb
jb
pop
push
jbe
mov
add
jo
lret
cmp
ret
and
cmp
stos
push
xchg
pop
jnp
jmp
dec
mov
sub
aaa
es
sub
adc
push
mov
xor
jmp
mov
pcmpgtd
inc
inc
sub
cmp
das
mov
rcrl
adc
test
sub
xor
and
cmp
or
fdivp
ljmp
rolb
mov
or
push
sbb
inc
dec
testl
add
arpl
scas
fdiv
adc
dec
mov
and
push
aad
jne
std
aad
int
mov
subb
pop
add
or
pop
push
es
fldcw
inc
aaa
xor
xchg
jg
fldt
popa
adc
add
pop
cmp
xchg
sub
push
leave
and
mov
sti
pop
mov
sti
loope
dec
fs
in
pushf
mov
cmc
stc
xor
mov
sbb
adc
adc
aaa
or
mov
jle
mov
push
dec
movb
mov
sbb
and
inc
ret
movsl
out
test
test
shlb
imul
repz
pop
push
jecxz
rclb
pop
mov
ficomps
fdivrl
jl
mov
xor
push
ret
push
jne
movsl
push
mov
mov
movsl
sub
fwait
jne
mov
lcall
daa
sbb
mov
es
push
push
sub
jbe
imulb
js
cmc
push
cmp
pushf
pushf
pushf
lea
jae
ror
mov
mov
stc
mov
bsr
mov
pushf
clc
sub
lea
jp
repnz
pusha
lea
jne
ror
mov
shld
sub
bsr
cmc
cmc
shl
mov
test
bt
call
cmp
mov
mov
push
call
arpl
cmpsl
outsb
mov
rcl
mov
aam
and
lret
stc
or
icebp
outsl
sub
movsl
fistpll
scas
or
mov
push
cwtl
sbb
sbb
jp
inc
cmp
xor
xchg
inc
mov
mov
xchg
in
sub
iret
sbb
push
mov
mov
lcall
cmp
into
loop
bound
inc
add
in
dec
inc
push
inc
push
dec
xor
cs
insb
add
lret
jb
jbe
push
push
les
fiadds
push
mov
and
insb
insb
test
ss
sbb
movsl
mov
pusha
enter
mov
jo
xchg
dec
cmpl
jmp
mov
add
outsb
fsubrs
xor
cmpsl
cmpb
xor
std
popl
and
xor
mov
gs
in
push
lods
lods
push
xchg
aas
das
adc
jmp
mov
call
pushl
lea
je
or
and
btr
mov
shl
dec
add
pusha
rcl
pusha
mov
mov
jmp
pusha
lea
ja
or
adc
or
stc
sub
shrd
sub
add
movzbl
pusha
dec
sub
mov
pushf
pusha
shl
stc
mov
jmp
cltd
aam
insb
mov
rcrl
daa
test
leave
xchg
in
outsb
les
shll
inc
mov
add
sub
orl
enter
mov
inc
aaa
stc
cmpsb
and
and
imul
sbb
xor
add
mov
in
ret
push
push
and
sahf
add
mov
movsb
xor
in
mov
pushf
rcl
lea
bt
cmc
clc
call
bt
stc
pusha
movzwl
sub
btr
mov
pushf
cmc
movb
add
stc
clc
bt
mov
test
call
add
inc
gs
imul
inc
add
enter
and
cmpb
in
bt
clc
neg
jmp
popl
or
sub
gs
cmp
sub
loopne
pop
lds
jbe
rep
adc
js
into
orl
loope
repz
push
add
cld
mov
ja
adc
lahf
movsl
push
das
pop
std
jge
jge
xor
pushf
into
insb
cld
pop
sub
push
enter
pusha
hlt
xor
dec
pop
pop
sbb
hlt
pushf
push
lea
jmp
cmp
lret
jg
jmp
mov
sub
test
push
cmp
adc
mov
or
xchg
daa
fs
mov
mov
ret
mov
stc
jno
sub
mov
pop
imul
adc
dec
fistps
add
xor
loope
jge
add
shlb
std
je
out
dec
roll
cmp
icebp
std
dec
jp
int3
test
mov
pushf
add
rcr
btc
movzbw
jmp
call
pushf
lea
jne
push
lea
jo
pusha
push
stos
pushf
pushf
push
pushf
lea
jmp
call
cmp
jmp
test
lret
pop
jp
out
ror
fimuls
jle
pop
dec
push
sbb
or
xchg
xor
pop
mov
daa
mov
jle
arpl
testb
outsl
sub
shll
add
xchg
xchg
stc
mov
jbe
adc
enter
xor
aam
xor
out
imul
dec
and
repz
rorb
sbb
adc
ficoml
push
push
adc
fcompl
jo
or
fdivl
sub
mov
popa
sub
lret
xor
mov
je
mov
data16
test
adc
mov
push
jnp
mov
call
mov
push
push
adc
ja
das
mov
jmp
cmp
sub
lea
lds
sbb
mov
cmp
call
cmp
clc
jmp
adc
sub
rol
xor
shl
mov
add
stc
dec
shrd
mov
call
push
mov
es
add
cmp
push
out
sbb
cltd
mov
call
push
jp
cs
mov
pop
clc
mov
xor
add
and
fmuls
and
xchg
std
sub
mov
into
clc
cmp
das
mov
sbb
mov
imul
aad
or
inc
mov
outsl
adc
mov
dec
ljmp
mov
lds
xchg
test
int3
push
xchg
jp
sub
jle
add
push
sbb
mov
jecxz
add
or
add
sbb
gs
fnstenv
mov
dec
rcll
imul
xchg
sbb
stc
arpl
pop
ljmp
test
xor
push
jae
dec
lods
dec
or
dec
cmpsb
mov
cmovg
pop
test
jo
mov
jg
xor
push
aas
xlat
xlat
cld
loop
jae
jg
mov
movb
cs
es
rolb
push
mov
or
dec
xchg
inc
fcomps
pop
pop
out
inc
or
xor
dec
mov
adc
pop
mov
and
adc
movsb
test
xchg
cmp
mov
adc
shlb
leave
pusha
mov
enter
and
shll
je
fimull
mov
push
leave
adc
std
sub
cmp
stos
jecxz
mov
fsts
js
pop
adc
ja
mov
jne
lods
or
icebp
test
out
push
jmp
cmc
xlat
hlt
sub
adc
and
jecxz
xor
call
xor
sahf
mov
dec
test
dec
sar
ret
addb
sbb
mov
mov
push
xor
inc
cs
sbb
xchg
inc
lea
andl
sub
in
dec
fs
arpl
loop
rolb
mov
loop
bound
jb
sti
ffree
add
cmpsb
lock
adc
rorb
clc
test
int3
clc
lods
pusha
lods
nop
movsb
adc
xchg
sbb
xchg
jecxz
xchg
mov
mov
dec
mov
jnp
and
mov
data16
sbb
xchg
add
in
xlat
lods
daa
imul
mov
bound
add
sub
push
xor
xor
das
aaa
cli
pushf
dec
rorb
fstpl
pop
out
repz
mov
das
and
movsb
sti
jo
addr16
lcall
push
jg
sub
xchg
lods
cmc
mov
xchg
sti
lcall
lods
cli
scas
negb
ret
ds
into
mov
aas
in
jno
sbb
aas
data16
cmp
push
cmp
inc
push
in
ljmp
in
push
xorl
mov
pop
repz
addr16
xor
xor
jno
in
sahf
sahf
xor
shr
xchg
push
sarl
mov
js
out
mov
mov
popf
outsl
repnz
in
mov
cwtl
push
pusha
mov
cmp
cmp
xchg
in
xchg
or
xlat
lea
hlt
data16
cwtl
mov
ja
out
or
push
xchg
mov
dec
movsl
add
lods
shll
pop
std
sbb
das
cmp
ljmp
es
sbb
shll
cs
out
cld
test
pand
fsubrs
mov
or
sbb
es
push
mov
jmp
jecxz
xchg
adc
sub
adc
jb
int3
mov
add
mov
out
pop
pop
mov
sub
push
neg
into
lret
scas
loop
rcl
ljmp
inc
fisubrl
push
loope
pop
gs
mov
xchg
notl
mov
and
push
xor
lods
gs
pop
lret
cmp
mov
int3
loope
jno
enter
lods
dec
mov
mov
mov
aad
cwtd
push
and
mov
pop
jle
adc
jae
dec
idiv
mov
mov
jle
int
shl
es
sahf
outsb
cld
mov
clc
xchg
out
lret
dec
loop
adc
lret
lret
leave
adc
mov
mov
test
imul
mov
cmpsb
jbe
or
aam
fwait
pop
add
jl
push
adc
adc
movsl
sbb
lea
mull
dec
inc
inc
lods
dec
enterw
shr
cli
andb
sbb
adc
mulb
and
add
es
pop
js
pop
adc
dec
mov
enter
pushf
add
mov
jecxz
xchg
fwait
lds
fs
rcl
or
or
xor
fcmovb
and
cmp
adc
inc
mov
dec
push
aam
jae
adc
lret
pop
add
add
xchg
add
cmp
jns
les
mov
jmp
loop
fsincos
cltd
daa
in
dec
mov
sarl
dec
and
mov
xor
inc
jne
or
pop
inc
jnp
lahf
arpl
cmp
stos
cmp
xor
pop
xor
or
ret
add
movl
stos
jecxz
pop
mov
lods
push
lret
test
or
push
xor
xlat
shrb
dec
test
pop
dec
js
movsb
fadd
psraw
jle
movsb
lods
cli
or
inc
imul
std
push
jae
jecxz
adc
jnp
xor
push
mov
or
dec
arpl
into
in
mov
notb
dec
or
add
mov
pusha
sbb
pop
imul
xor
or
enter
movsb
cwtl
push
jns
sub
rcr
cmp
ror
pop
into
pop
stc
mov
inc
push
aas
dec
into
divb
out
jo
fistl
and
adc
scas
test
subl
bound
sbb
xor
jbe
data16
xchg
mov
xchg
bound
lods
inc
cltd
mov
adc
call
inc
lock
movw
lea
call
push
adc
call
mov
jmp
movzbw
push
bsf
xor
movsbw
bswap
mov
xchg
pushf
push
mov
sub
pusha
dec
dec
mov
shl
test
sar
rcr
sub
lea
pusha
lods
jmp
idivl
arpl
out
arpl
pushl
mov
ret
cli
mov
adc
fwait
movsl
push
inc
outsl
pop
mov
gs
lods
test
sub
mov
out
in
xor
adc
sar
sub
mov
adc
insb
jae
sbb
jo
add
call
xchg
lret
sahf
bound
stos
loope
out
cmp
pushf
lcall
push
neg
cmc
sub
pusha
stc
pushf
cmc
ror
pushf
movb
jmp
dec
stc
pushl
jmp
cmp
test
call
lea
jne
push
mov
clc
pushf
stc
cmc
cmp
jmp
out
bound
mov
in
pop
imul
mov
mov
insb
loopne
pushf
jo
enter
enter
fimuls
dec
iret
std
adc
push
push
pop
inc
xchg
ljmp
je
insb
pushf
out
std
jns
nop
sub
fwait
imul
pop
icebp
insl
xchg
mov
scas
imul
cli
roll
sbbl
mov
mov
sbb
xchg
jmp
xchg
loope
mov
pop
sub
pop
outsl
pop
lods
sbb
xchg
in
adc
in
cmp
xchg
push
cmp
enter
cltd
dec
call
bound
lret
fildl
outsl
lods
add
mov
arpl
xlat
cmp
mov
push
push
gs
cmpsl
sbb
dec
mov
std
xchg
xchg
xchg
or
sbb
add
xchg
stos
sahf
lock
mov
leave
dec
in
stos
sub
or
pop
xor
mov
loope
dec
in
scas
mov
sbb
shr
or
pop
mov
loope
xchg
sbb
inc
lcall
sbb
sahf
jmp
add
sub
dec
test
test
xchg
cmp
dec
inc
adc
pop
sbb
and
icebp
or
lcall
mov
and
out
mov
xchg
jo
pop
adc
or
call
push
imul
test
inc
jae
insl
popa
bound
ss
pushf
xchg
or
orl
push
jb
and
pop
sbb
fldenv
es
pop
cmp
fucom
or
stos
adc
xchg
out
xchg
popa
data16
sub
je
dec
loopne
pusha
fsubrl
or
cmp
and
orl
mov
test
pop
sahf
test
ss
mov
fcomps
xchg
dec
mov
shrb
movb
xor
mov
fcmovbe
jb
push
pusha
xor
movsl
mov
mov
call
push
sub
flds
mov
sarl
fsts
mov
xor
or
jns
fndisi(8087
mov
lds
jbe
shrb
outsb
ret
int
pushf
cmp
push
pop
out
adc
cs
push
insl
pop
fisubs
xchg
rcrb
cmpsb
pop
sbb
xor
and
mov
push
fs
or
clc
jo
pop
inc
fbstp
and
dec
cmp
and
sbb
leave
xchg
and
or
dec
mov
inc
mov
bt
shr
pushf
lea
jle
pusha
lea
je
jmp
add
adc
in
pop
cltd
out
in
dec
xchg
iret
scas
ret
pop
test
sti
cmc
adc
jl,pt
sub
imul
jo
mov
lcall
sub
push
aad
fistpl
addr16
fsubs
jnp
call
mov
mov
cmp
mov
fwait
xor
fs
pop
mov
rcrl
or
fildll
add
mov
mov
push
mov
add
pushf
pushl
pusha
mov
lea
jmp
call
pusha
lea
jne
shrd
pusha
mov
inc
and
sub
sbb
dec
shr
lea
movb
sub
cmp
cmp
cmp
test
pushl
popl
jmp
ficoms
pop
mov
push
xor
out
mov
call
sbb
das
test
mov
pop
stc
aaa
mov
sub
and
sbb
jns
popa
frstor
mov
mov
sbb
outsb
and
addb
pop
jns
xchg
outsl
cmp
out
bound
insl
int3
gs
fidivrs
js
lock
push
add
test
test
or
inc
fstl
fs
jae
not
mov
call
add
dec
outsb
je
jb
gs
gs
fs
imul
mov
enter
sbb
sub
cmp
outsb
int3
stos
xchg
cmp
out
sbb
call
lcall
mov
adc
cmp
fxch
add
aaa
mov
mov
xlat
sbb
lods
xor
in
mov
mov
fldcw
mov
idiv
mov
cmp
jnp
xchg
call
mov
xchg
jmp
rdtsc
addr16
dec
bound
jmp
rol
push
jle
into
fisubs
imul
and
pop
jmp
cmp
or
lock
jle
mov
out
aam
push
rorb
sub
mov
or
cld
in
scas
jp
andl
imull
lret
dec
pusha
enter
jb
imul
add
sahf
in
jle
mov
adc
xor
dec
in
rcrl
in
test
lahf
push
sti
and
adcl
in
jecxz
jae
ja
insl
sahf
sub
je
mov
pop
sbb
add
adc
test
stos
pop
aam
inc
inc
unpckhps
shl
out
andb
lcall
in
push
cmpsb
push
subb
sahf
mov
or
inc
inc
fdivrs
jmp
mov
and
lret
or
ret
sub
cmpsb
cwtl
rcr
faddl
dec
sti
mov
mov
sub
cmp
loope
fs
jl
push
insl
inc
adc
test
repnz
daa
fcmovu
jmp
push
push
xor
add
jnp
test
rorl
movsl
sub
push
mov
aad
outsl
cld
ja
jb
imul
fnstenv
cmp
push
dec
sub
mov
sbb
adcl
sub
insl
imul
addr16
int
xchg
sbb
adc
mov
loope
mov
inc
orb
je
push
and
inc
jmp
pushf
out
pusha
xor
or
fmull
nop
mov
sub
push
fcmovnu
jecxz
pop
sbb
sub
scas
add
jns
inc
fbstp
dec
aad
fst
fsubrl
movb
dec
mov
dec
adc
pop
pop
out
movsl
xchg
xor
outsl
dec
stc
dec
test
test
xlat
dec
std
mov
ljmp
repnz
stos
sti
adc
imul
sbb
es
lahf
sbb
adc
push
xor
jb
dec
ror
xbegin
xlat
in
xor
iret
pop
outsl
movsl
imulb
test
sbb
jne
lcall
idivb
in
jecxz
insl
mov
sub
pop
call
or
mov
cmp
in
mov
stos
mov
mov
fs
aam
roll
das
sub
sbb
jmp
cmp
test
les
ret
mov
xor
sub
mov
and
lods
xor
jg
stos
test
push
ror
xchg
in
jmp
jp
nop
outsb
notb
and
ficomps
lock
in
cld
xor
int3
lret
pop
add
xor
insl
mov
in
stc
push
jmp
cmp
test
cltd
in
lcall
imul
jb
or
idiv
push
dec
sbb
in
jl
jb
mov
and
mov
xchg
fwait
mov
fwait
and
lds
imull
fildl
add
out
movsl
loope
cmp
je
cmp
fsubs
mov
ljmp
sbb
test
cmpsl
outsl
jno
push
decb
add
into
rol
cmp
movaps
test
cmp
push
in
popf
inc
jb
cli
imul
add
xchg
adc
sub
cmp
iret
jns
jae
mov
aam
sti
or
push
sbb
pop
test
int
jne
xchg
and
adc
mov
cmpb
cmp
mov
cmp
xor
jg
ret
shll
insb
dec
repz
int3
incl
xlat
mov
inc
bound
stc
pop
cmpsl
pop
jecxz
or
orb
jmp
jecxz
leave
xchg
pop
jl
and
mov
shlb
dec
enter
pop
xchg
dec
xchg
add
add
mov
pop
lahf
lods
cmp
shl
inc
aad
in
xchg
in
jns
stc
imul
xchg
adc
inc
jge
dec
ror
push
call
jge
mov
testl
or
sub
pop
mov
push
rorb
lcall
pop
inc
pop
cmp
jg
cmp
mov
std
lret
pop
jmp
fwait
aas
dec
fldenv
pop
pop
jp
loopne
icebp
jg
pop
out
movsb
push
dec
les
or
fucomp
dec
sub
das
push
adc
fucomip
fcomi
clc
jno
inc
pop
pop
call
repz
popf
out
inc
mov
and
aam
leave
mov
shr
ret
sub
xor
insb
and
pop
or
dec
jb
cld
shlb
inc
in
fdivl
pop
and
mov
cmp
fsts
sub
lods
xchg
mov
sarl
jle
pushf
ret
push
inc
ja
das
pusha
mov
mov
aas
xchg
dec
mov
adc
je
std
fldl
sbb
and
jmp
mov
and
stc
or
xchg
cmpl
push
lahf
jno
lea
cmp
sub
rcrl
push
mov
push
fwait
sub
test
push
sbb
inc
mov
je
mov
leave
pop
or
sbb
ret
jo
mov
push
lret
inc
enter
movsb
cmpsl
imul
push
scas
xor
mov
xchg
or
pushf
orb
ljmp
mull
adc
test
lds
jg
jbe
cmpsb
mov
ficomps
sbb
out
andb
loopne
andl
mov
pushf
fcomps
fdivs
and
imulb
mov
dec
adc
int3
ret
cmc
xchg
testb
push
adc
orb
in
out
jae
sti
ror
cmp
out
testl
xor
mov
mov
js
jg
mov
cld
push
sub
and
nop
jecxz
sti
add
jecxz
aam
aam
mov
mov
push
div
adcb
jmp
enterw
inc
inc
inc
and
or
mov
inc
inc
inc
adc
dec
sub
jns
cmpsl
cmpsl
rorb
jp
jl
mov
stos
mov
inc
in
mov
pop
inc
in
inc
xchg
push
out
hlt
inc
push
pop
mov
cs
dec
xorl
jmp
cwtl
mov
dec
fsubl
sub
pop
into
loopne
clc
cwtl
dec
decb
test
lret
push
cmpsl
outsl
nop
pop
ljmp
out
cmc
loop
popf
orl
in
mov
popa
in
clc
dec
shl
fidivrl
cmp
mov
push
mov
jl
sbb
in
inc
jl
sub
jae
cmp
mov
or
inc
xor
mov
movsl
mov
ret
in
sub
repz
clc
xchg
loop
enter
loope
cmp
xor
add
pop
lea
cwtl
push
sub
or
or
cld
dec
sahf
push
xlat
push
ret
lds
add
mov
inc
pop
pop
cmp
lret
int
cwtl
jmp
sahf
inc
pop
dec
push
cmpsb
outsb
pop
jns
and
pop
in
jp
dec
data16
add
sbb
rcl
stos
jge
jae
fdiv
xchg
push
add
mov
popa
inc
mov
adc
mov
and
cmp
int
adc
jns
jb
lcall
sub
ss
jne
test
jmp
and
mov
mov
jae
pusha
notl
fistl
jg
gs
scas
jns
stc
andl
addb
and
pusha
bound
cmovne
mov
mov
xchg
inc
ljmp
xlat
aaa
push
xchg
enter
adc
popa
or
popf
cmpsl
xor
icebp
cmc
cmp
lcall
push
mov
add
xchg
and
mov
fstpt
xchg
pop
popa
scas
and
sti
inc
scas
dec
loop
icebp
ja
xchg
adc
pop
dec
pop
popa
pop
ja
and
sbb
in
or
rorb
lods
mov
scas
add
leave
data16
ret
sub
dec
add
cltd
cmp
and
orb
inc
add
xor
repnz
mov
subl
mov
outsb
stos
sub
shlb
push
daa
or
cmp
arpl
loop
ja
fcoms
ss
xchg
mov
mov
xor
mov
into
mov
sub
cld
jg
ljmp
shll
and
in
mov
fs
mov
cwtl
push
loopne
push
dec
mov
mov
cmc
shlb
lods
lea
pusha
cs
dec
add
daa
mov
mov
xor
mov
movsb
inc
adc
cmc
jnp
mov
pop
sti
scas
cmp
sbbb
mov
out
imul
pusha
fidivrs
jne
ja
clc
fdiv
xor
push
and
mov
lret
add
lcall
mov
dec
inc
test
pop
add
inc
inc
mov
dec
out
movsl
xchg
inc
and
mov
insb
inc
pop
and
arpl
adc
out
scas
pop
and
xor
outsb
out
jecxz
or
call
dec
mov
sub
ret
push
xchg
testb
jns
mov
outsl
sbb
mov
dec
sbb
fcmovnu
outsl
add
mov
push
loope
mov
and
xchg
lcall
pop
xor
es
mov
xlat
mov
sbb
cmp
cs
sbb
jmp
movsl
in
fucomp
mov
fcoml
outsl
lahf
xor
outsb
js
xlat
push
pop
mov
sbb
stos
sub
pusha
sbb
cmp
cld
shl
int
xor
xor
push
add
cmp
pop
test
shlb
dec
add
int3
std
mov
mov
xchg
popa
fisttps
mov
out
mov
stc
xchg
fmuls
fstl
test
jae
xlat
xchg
aad
pop
inc
ficompl
mov
jle
out
xchg
push
cmp
iret
inc
dec
cmp
xor
push
popa
and
imul
in
and
rol
dec
shlb
repz
xchg
push
pop
mov
js
sbb
jns
hlt
dec
int3
rclb
adc
jp
cmp
enter
pop
push
dec
sub
gs
popl
xchg
and
or
add
and
mov
call
push
imul
rorl
inc
xor
jmp
jbe
das
xchg
lret
cmp
sbb
daa
cld
jns
mov
popf
or
gs
imul
pop
cwtl
into
dec
inc
jae
xlat
in
xor
push
icebp
or
xchg
movsb
cmpsl
int3
or
leave
lahf
jg
add
stc
ss
insl
cmc
sub
stc
loop
adcl
lcall
inc
cmc
push
rcl
push
ljmp
mov
cmp
and
cmpsb
mov
test
or
pushf
xchg
push
cmp
data16
fs
add
lods
sahf
mov
or
pop
jge
fstps
sub
mov
add
jo
mov
sub
fnstsw
mov
adc
push
push
ljmp
ret
xchg
lret
shl
adc
add
dec
xchg
or
xor
out
sub
gs
push
sbb
xor
test
xor
mov
sti
push
outsl
bswap
dec
pop
mov
push
jbe
jmp
loopne
push
jno
push
mov
arpl
ds
cmp
arpl
push
shr
incl
test
xchg
or
sbb
mov
icebp
dec
sahf
movsb
dec
sahf
jl
cwtl
fwait
cmp
movsl
dec
pop
in
stos
ret
cmc
imul
addl
or
stc
addr16
inc
xor
out
fldcw
push
imul
xchg
cmp
push
xor
mov
jno
fdivrp
dec
lret
inc
xor
pushf
lcall
fwait
jmp
jmp
adc
loopne
push
in
fidivrs
je
push
mov
pop
lods
jne
pop
xor
cmc
cmp
mov
cmp
ret
push
push
test
sbb
pop
fwait
mov
popl
fnsave
xchg
test
sub
stc
stc
xlat
cmpsb
jecxz
hlt
sbbb
lcall
cmc
jge
xchg
mov
xorl
das
das
mov
and
and
cmp
vmovd
rol
pop
dec
jl
sub
and
shlb
pop
out
rolb
call
ja
inc
dec
fnstsw
sbb
dec
xor
test
mov
out
out
sbbl
ret
mov
enter
addr16
jno
hlt
test
rclb
cmpsl
cmp
pop
jmp
daa
lahf
fwait
lea
js
push
dec
jno
mov
aaa
mov
stc
ja
mov
fld1
insl
repz
xor
add
inc
fdivrl
jmp
addr16
jecxz
mov
cmp
add
cmpsl
mov
fistps
in
xchg
jl
stos
test
mov
in
and
les
mov
ss
mov
stc
ljmp
adc
jl
aam
repnz
loop,pn
push
insb
fistl
mov
loopne
add
xchg
inc
or
pop
xchg
adc
or
addr16
jno
lock
inc
int3
cmp
xchg
pop
pop
in
bound
pusha
out
jae
dec
fld
xor
jns
addr16
pop
push
mov
std
mov
xlat
mov
sahf
xchg
pop
out
dec
clc
daa
icebp
ds
ljmp
je
mov
aam
inc
int3
sahf
lods
push
addr16
hlt
and
ss
mov
in
jl
insb
insb
test
rcl
xor
loopne
mov
cmp
add
leave
mov
add
xchg
dec
into
movsl
fs
push
aam
sub
outsb
pusha
outsb
loop
inc
repnz
dec
xchg
sub
xchg
pop
mov
aaa
push
fs
push
int3
mov
sahf
sti
or
std
sub
dec
cmp
jp
add
repz
lcall
push
pop
xor
pop
pushf
inc
inc
inc
dec
pushl
xor
je
lret
int3
orl
xchg
xchg
lods
inc
fs
test
push
sbb
insl
jnp
xlat
ja
xchg
loopne
push
cld
sub
mov
xchg
stos
push
xor
fs
cs
call
dec
out
mov
es
add
clc
stc
ret
ss
jno
xor
cmpsl
sub
mov
jnp
xor
xor
pop
xchg
pusha
mov
xchg
cmp
prefetch
mov
int
outsl
cmp
jae
imul
add
pop
cltd
addr16
sub
in
leave
pop
jmp
aaa
out
xor
stos
jmp
in
fucomp
dec
shrl
push
lret
cwtl
push
fwait
adc
movsl
sbb
fsts
mov
testl
insb
bound
daa
test
adc
dec
jb
sub
pop
js
dec
fldcw
mov
dec
rorb
add
push
mov
add
lar
ss
fxch
loope
mov
insb
add
jl
out
jbe
cmpsb
cwtl
cmp
out
sbb
gs
into
xchg
or
icebp
jno
les
mov
repnz
mov
dec
pop
cld
jl
incl
pushf
sub
or
adc
loopne
lods
inc
daa
stc
fsts
out
pop
add
sub
data16
lock
imul
in
arpl
jnp
addr16
xor
js
push
sub
and
popa
pop
inc
aaa
imul
icebp
jno
push
pop
push
and
scas
pop
adc
stos
add
xchg
ret
jns
cmpsl
push
out
add
cmc
aad
add
mov
icebp
shll
ljmp
lds
repnz
subb
cmp
jmp
and
cmp
std
push
and
pop
xchg
rol
sbb
shlb
dec
push
mov
adc
sub
shlb
stos
scas
fs
mov
jbe
mov
mov
xor
and
sub
push
imul
imul
xor
mov
jp
inc
mov
js
mov
xchg
and
push
pop
fsubrl
adc
orl
fisttpl
mov
sarl
jnp
lret
and
dec
jmp
dec
insb
vmovsd
gs
mov
enter
jp
sbb
js
mov
cli
movsb
int3
xchg
outsb
add
fcmovu
shrl
cmp
push
clc
ja
out
out
rcrb
push
sti
push
nop
jnp
scas
adc
movsl
xchg
int3
pusha
js
fs
hlt
mull
cmp
fdivrs
dec
stc
testl
mov
in
pusha
data16
pop
scas
cmpsl
into
vcvtps2dq
jae
jge
movsl
cmp
imul
scas
and
nop
mov
inc
popf
data16
loop
or
mov
push
cmpsl
xor
gs
mov
jmp
xchg
adc
lods
mov
cmp
sti
movsl
into
xchg
lret
movsb
test
setne
adc
lods
iret
mov
push
bound
pop
cmpsl
daa
repnz
mov
cmp
add
xchg
xchg
pop
and
dec
sbb
mov
push
xchg
leave
rcl
movsl
jnp
outsl
out
or
xchg
jae
addb
sahf
add
jo
cmp
arpl
ljmp
leave
xlat
dec
stos
push
icebp
imul
imul
out
jmp
sbb
dec
mov
in
movsb
stos
lea
or
sub
stos
push
test
lret
fimull
sbb
inc
lahf
sbb
mov
sub
into
push
fsubs
mov
dec
shll
dec
clc
xchg
fwait
sub
gs
dec
push
sub
in
cld
cmp
jnp
pop
jns
sub
loop
idiv
scas
repnz
mov
sbb
int
sbb
inc
and
mov
insb
int3
test
setge
ss
das
push
push
std
repz
or
pop
pop
cmp
push
sub
dec
mov
mov
cmpsl
into
push
out
pop
fst
rcl
sub
push
xchg
adcb
aad
pushf
sub
lret
jne
mov
xchg
cmp
dec
cmp
cmp
loope
or
xchg
lods
aam
push
pushf
mov
jbe
repnz
cwtl
mov
mov
test
jae
test
orb
sbb
jne
fs
outsl
jecxz
loope
fnstcw
out
scas
or
idiv
mov
xlat
mov
pop
loop
mulb
or
inc
inc
and
mov
mov
test
mov
cltd
jns
mov
xor
mov
push
and
cli
jg
ds
pushf
or
xchg
negl
aam
mov
mov
fstpt
pushl
lret
lret
lret
call
out
test
cmp
xlat
jg
outsl
and
mov
push
shll
and
ss
mov
popf
lahf
lods
push
iret
xchg
aam
je
push
jne
xchg
xchg
sbb
loop
xchg
jmp
jp
or
sub
jnp
sub
fldl
in
out
sub
popf
xchg
adc
rcl
xor
hlt
xor
aad
add
bound
dec
js
mov
inc
push
fdivr
gs
jo
mov
xor
mov
insl
adc
adc
fistps
sub
stos
cmp
jo
int
mov
push
jb
and
and
pop
mov
mov
movsb
cwtl
mov
push
into
ret
or
pop
or
sbb
lock
repnz
fdivrl
mov
inc
lahf
inc
pop
shll
or
out
movsl
in
mov
mov
popf
sub
jl
jo
mov
inc
mov
mov
sub
inc
loope
fnstcw
add
in
je
mov
cmp
pop
jne
xor
ret
call
fldenv
mov
pop
je
and
pushf
mov
fs
and
pop
pusha
stos
imul
insl
iret
inc
push
push
bound
stos
repnz
stc
pop
lods
or
sbb
cld
cli
inc
fs
sbb
sti
adc
nop
es
push
adc
adc
sti
in
sub
movsl
mov
pop
jmp
insb
dec
mov
and
and
mov
inc
pushl
fwait
xor
mov
xchg
mov
cmpsl
rcll
cli
xchg
orl
add
std
outsb
dec
cmp
pushf
and
subl
roll
out
in
cmp
pop
imul
add
std
add
shll
out
arpl
or
inc
dec
inc
adc
out
ds
loop
inc
out
xor
pop
mov
mov
mov
mov
fidivl
aas
int
insl
int
mov
mov
or
mov
mov
add
insb
idiv
lret
inc
gs
stos
jne
xchg
mov
enter
push
ror
jge
mov
out
lock
cli
dec
mov
ret
jnp
and
cltd
cmc
adc
ret
insl
test
jae
jbe
add
cmp
mov
fldt
pushf
jl
mov
jnp
push
daa
bound
mov
mov
cmp
imul
je
aas
shll
fistl
lock
test
pop
popa
clc
movb
shll
or
push
je
pop
add
xchg
sbb
jle
aad
jecxz
loopne
pop
loop
fs
ljmp
sbb
jnp
idivl
jno
xlat
add
movsl
jl
shlb
jl
dec
mov
shrb
cmp
outsl
repnz
cmp
mov
or
push
pop
xor
xor
add
sub
jno
jb
xchg
add
and
mov
or
lahf
lcall
cmp
loop
dec
dec
add
mov
pop
mov
pushf
sub
out
jb
cld
cmp
and
ret
int
rorl
repnz
inc
test
pop
das
xchg
movsl
inc
not
in
enter
fidivrl
jp
cli
addb
ja
int
jo
push
ret
dec
push
pushf
repnz
stc
das
mov
jg
push
jecxz
lret
add
rclb
loopne
push
pop
fidivrl
mov
add
cmp
idivb
insb
inc
pusha
add
shll
test
popa
jecxz
jns
push
cmc
stos
push
sub
daa
jecxz
jp
push
clc
xor
popf
mov
call
mov
dec
jmp
test
xchg
hlt
dec
in
dec
xorb
jb
test
mov
data16
out
jno
mov
popa
dec
insb
inc
mov
arpl
data16
stos
int
xlat
psubsb
or
cmpb
int3
adc
push
mov
lods
mov
mov
inc
cmpsb
push
mov
sarl
das
movsl
mov
jp
cmc
xorl
xor
repnz
out
div
inc
mov
out
adc
xor
cmp
into
rcl
pop
cmp
fsubr
mov
iret
pop
stos
push
aam
dec
pop
push
fadd
mov
mov
negl
xor
mov
and
sti
mov
and
add
pop
cli
lcall
loop
mov
xchg
int
cmp
mov
xor
add
sub
aad
mov
outsl
gs
mov
push
out
dec
lret
xchg
adc
and
bound
cmp
ja
mov
loope
xchg
mov
xadd
or
lcall
dec
adc
mov
mov
adc
test
testl
xlat
in
out
mov
hlt
loop
push
repz
dec
iret
leave
mov
std
in
ret
mov
xchg
in
adc
xchg
push
pop
adc
adc
cmc
jmp
stos
scas
jle
mov
mov
jns
ficoml
and
adc
cld
sub
in
in
or
mov
mov
popl
jae
test
cmp
clc
mov
xchg
jle
mov
leave
mov
sub
dec
cld
jge
jae
push
push
mov
shlb
push
popf
pop
out
stos
pop
std
jge
dec
cmpsl
dec
orl
push
mov
rorl
lods
dec
xchg
inc
push
pop
lcall
aas
pushf
loop
inc
mov
popf
into
cmp
or
fnstenv
lods
jge
mov
adc
fisttps
or
in
sub
pop
sti
pop
scas
mov
cmp
dec
add
mov
push
adc
rclb
cmpsb
lods
push
xchg
mov
rdtsc
mov
insb
andb
pop
inc
add
mov
hlt
sub
in
scas
dec
fisubrl
out
lret
adc
pop
ficomps
movsl
push
cmp
aas
or
push
rorl
cmpsl
sbb
testl
add
push
shlb
xor
cmpsl
out
xchg
stc
sub
cs
sbb
mov
js
in
fsts
aad
sub
sbbb
mov
push
dec
cmpl
jp
inc
jne
out
xchg
out
nop
aaa
sub
jecxz
mov
jge
sbb
leave
rcrl
into
sbb
ret
scas
xor
cmpsb
enter
js
scas
cmp
in
mov
or
shll
ds
test
cmp
lcall
pushfw
jle
shlb
or
sarl
sbb
jno
rep
push
inc
inc
aam
mov
push
shll
lods
aas
orb
pop
sti
lea
sub
jmp
push
sub
shrl
lcall
xchg
stos
sahf
jp
or
or
push
jp
cmp
xchg
mov
jne
shr
movsbw
call
test
lret
hlt
repnz
sub
rolb
sub
push
mov
ss
in
lock
mov
movsl
popa
push
iret
arpl
sbb
push
aaa
mul
dec
into
in
mov
pop
daa
into
scas
push
sbb
cmp
and
out
inc
testb
push
ja
addl
ds
and
fwait
jns
lods
jp
ss
and
scas
push
mov
xor
ljmp
mov
mov
movsbl
xchg
mov
not
movsbw
bswap
sets
mov
pushf
mov
lea
jae
pusha
mov
movsbw
bswap
not
pop
push
pushl
push
pushf
pushl
ret
inc
call
outsl
jae
aas
mov
jl
inc
pop
and
js
mov
je
mov
adc
fwait
jmp
int
imul
lods
loop
outsl
push
dec
out
out
add
lahf
outsb
aad
jl
out
xor
xchg
pop
push
jae
sbb
out
mov
xor
test
loopne
xor
js
lock
clc
add
xchg
xor
add
mov
jb
mov
mov
hlt
inc
jo
pushf
dec
out
lret
scas
mov
or
stc
js
adc
call
or
lret
pop
sub
sti
and
in
push
out
push
lahf
jns
call
hlt
int3
lea
add
jge
jecxz
push
dec
mov
ljmp
and
sbbl
xchg
mov
imul
or
les
jns
mov
push
jl
call
push
lods
adc
push
subb
mov
int
bound
sar
fisttpl
jb
daa
jp
addb
xchg
xor
lods
mov
cltd
lock
out
cmp
cmp
pop
push
xchg
mov
add
repnz
aam
daa
and
sbb
jmp
push
xor
mov
inc
jp
adc
enter
adc
mov
or
test
dec
sti
and
add
jae
shrb
in
cmc
int3
fisubl
out
sub
insl
pop
pushf
sbb
addr16
loopne
mov
sub
fwait
lahf
lock
insl
enter
pop
sub
and
inc
ret
adcl
stos
and
ret
mov
sarl
sarl
inc
sarl
dec
inc
inc
cwtl
je
add
les
clc
adc
ret
jmp
xlat
daa
sbb
push
sldt
add
add
cmp
add
add
add
sldt
add
add
movsb
adc
add
add
jle
adc
add
add
test
add
add
jle
add
add
add
add
inc
push
sldt
add
add
cwtl
adc
add
add
loop
adc
add
add
les
add
xchg
add
pop
str
pop
sldt
add
add
jge
cmp
sbb
adc
sub
lock
dec
bound
jb
jbe
mov
test
push
ss
stos
sub
aaa
movsb
ret
xor
push
addl
adc
ljmp
fsubr
xchg
sub
mov
dec
jnp
fwait
imul
xchg
test
or
xchg
addb
aaa
fwait
push
repnz
mov
xor
jmp
jge
lock
ds
sahf
sbb
ds
orb
lahf
notb
mov
ja
mov
mov
pusha
mov
inc
xorb
rcrl
mov
lret
loope
mov
mov
test
push
mov
sbbb
ret
add
sbb
or
popf
lds
mov
mov
xchg
lds
iret
popf
imul
pop
pop
push
mov
adcl
mov
test
subl
insl
mov
arpl
outsb
je
jb
jo
jb
imul
cmp
inc
dec
inc
ss
int3
sub
ret
xor
into
out
mov
xor
fbld
fimuls
mov
sbb
inc
aas
std
or
sub
mov
fwait
lds
lods
mov
pushf
loope
repnz
dec
fisubl
scas
rorb
scas
pop
or
push
mov
cmp
aas
inc
in
enter
sbb
inc
dec
fsts
arpl
divl
data16
mov
jno
sbb
mov
bound
xlat
push
mov
xchg
cmp
out
lds
loopne
pop
sub
out
adc
sbb
push
or
nop
fdivrs
mov
push
pop
cmp
inc
pusha
mov
or
in
popf
xchg
nop
jae
xchg
or
xchg
test
fwait
xchg
push
push
ja
shrb
sti
sbb
ss
lret
adc
sbb
out
sub
xchg
lret
imul
ss
push
loopne
inc
fs
pop
jmp
nop
loop
inc
mov
movsl
daa
jne
mov
and
mov
scas
or
xchg
js
lock
cmpsb
adc
jnp
pop
push
std
jle
cwtl
cwtl
push
es
sbb
pop
sbb
mov
pop
sbb
inc
add
divb
cmp
sahf
sub
jo
push
add
hlt
loop
mov
adc
hlt
test
out
and
xchg
mov
nop
sub
outsl
xchg
or
inc
leave
int
inc
enter
mov
xchg
test
test
iret
mov
lock
jmp
sub
pop
adc
push
sub
adc
sbb
sbb
lret
addl
test
sub
imul
cmp
add
mov
cmp
xor
les
loopne
push
cmpb
decb
xor
sbb
cld
push
pop
dec
jnp
cwtl
pop
stos
sub
inc
rorl
mov
and
cmpsb
jecxz
cltd
push
dec
jge
mov
ret
mov
adc
sti
scas
lahf
mov
cmpsl
clc
mov
ds
cmp
mov
call
push
pop
out
mov
mov
or
or
popl
or
adc
stc
out
cmpsl
jecxz
fcmovnu
fwait
scas
jmp
mov
data16
jb
mov
fs
pusha
inc
bt
bt
cmc
stc
cmp
movzbw
lea
movzbw
mov
pushf
lea
ja
push
call
ror
enter
icebp
pop
xchg
inc
fnstenv
stos
mov
pop
js
adc
xchg
adc
mov
mov
jo
push
mov
xor
in
pop
pop
ds
add
pop
pop
fadds
ret
cwtl
mov
in
cltd
fdivrp
loopne
js
mov
jmp
aad
loopne
jle
xchg
jecxz
fisttpl
movl
addr16
pop
xor
push
pusha
lea
call
pushf
lea
ja
jae
pushf
sub
push
jmp
push
pop
xor
mov
test
or
ffree
fnstcw
xchg
inc
insl
push
cmp
test
daa
fwait
mov
pop
cli
adc
popf
mov
leave
xlat
test
mov
pop
mov
inc
xlat
ja
xor
or
out
or
aam
sbb
idiv
push
lcall
call
cltd
mov
pop
xchg
push
sbb
fisubrs
mov
dec
and
sbb
sbb
inc
mov
push
mov
cmp
xor
cmp
fnstenv
sub
les
fs
jb
cmp
cmp
stc
call
pusha
pushf
pushl
lea
call
pusha
mov
jmp
inc
mov
aaa
mov
mov
xor
fs
xchg
fs
adc
mov
mov
xchg
nop
es
int3
cli
push
outsl
lea
pop
adc
and
lods
push
out
cmp
mov
adc
sub
ret
in
cmpsb
into
mov
js
nop
or
pop
pop
xchg
clc
dec
jg
test
and
jp
nop
push
mov
bound
test
rorl
cmp
fimull
cli
sbb
cmp
pop
cmpsb
std
dec
orl
add
xchg
mov
mov
sbb
fistpl
test
cmp
mov
scas
push
dec
jl
xchg
daa
stos
xor
jo
dec
mov
mov
out
in
mov
sbb
and
pop
adc
mov
dec
dec
mov
mov
xor
mov
rcr
pop
movsl
mov
aam
in
outsl
arpl
lea
xlat
movl
scas
sub
addr16
out
inc
outsl
mov
sub
dec
orl
dec
pop
std
clc
pusha
add
pusha
pushf
cmp
cmp
jmp
clc
cmp
pushf
pushf
lea
ja
jmp
bts
pushf
inc
bt
mov
cmc
pusha
and
pushf
cmc
test
pushf
add
push
pushf
movw
pushl
lea
jmp
jge
or
lret
add
inc
push
push
push
push
sbb
negb
test
xor
rcll
shll
cmp
mov
dec
notb
sbb
ds
dec
shll
in
jo
pop
js
xchg
dec
in
or
mov
mov
cld
clc
cmp
cmc
adcb
lret
push
xor
lret
clc
es
jb
add
dec
jle
add
outsb
cwtl
in
mov
outsl
insl
jmp
mov
imulb
les
ds
xchg
mov
xor
inc
xchg
jbe
imul
movsl
test
cld
cmpsl
mov
into
jo
mov
push
adc
push
test
in
sub
mov
mov
nop
out
or
push
cmp
lret
sub
jg
mov
int
or
cwtl
cwtl
das
dec
std
lret
loope
imull
push
inc
jno
pop
repz
push
loopne
pop
fstpt
rolb
in
gs
mov
or
xor
jnp
sbb
add
adc
cmp
adc
icebp
rorb
jbe
inc
addr16
pop
int
in
inc
jmp
into
out
adc
pop
cmp
xor
lret
adc
mov
dec
mov
inc
lea
cltd
push
adc
sti
sbb
fs
fistps
repz
mov
mov
ja
mov
dec
cmpsb
cmp
jo
cwtl
add
and
aaa
xor
and
sub
pusha
push
ss
jbe
jbe
jb
cmpsb
loop
jb
stos
inc
cli
ss
out
pop
add
lods
icebp
xchg
pop
push
cmp
mov
fstpl
pop
mov
sbb
out
sub
mov
jae
into
jbe
out
xlat
mov
daa
xor
cmp
fimuls
sub
and
mov
add
lret
das
xchg
vunpcklps
lret
jmp
pop
and
jecxz
out
sbb
mov
push
pop
jecxz
push
push
in
xchg
clc
lcall
jmp
ja
insl
mov
jnp
cmp
jb
cs
orb
push
sbb
sbb
push
jp
inc
outsb
dec
mov
fnstenv
shrb
or
aam
ret
pop
jp
daa
add
call
pusha
inc
jo
mov
cwtl
xchg
jo
test
and
and
lret
mov
into
inc
sub
push
fs
jae
push
push
loop
ds
inc
cmc
push
notl
jns
sbb
add
add
xor
jae
movsl
pusha
mov
in
movsb
mov
mov
inc
xor
jl
daa
insl
or
mov
pop
ss
sarb
jb
loop
shrb
leave
rcpps
lods
push
fsubl
je
mov
movsl
or
scas
mov
imul
pop
sbb
jg
fisubrs
pop
repz
xchg
movsl
daa
xchg
je
adc
add
sub
call
lcall
jbe
aad
outsl
mov
xchg
xor
test
jp
imul
fnsave
mov
pop
mov
jg
pop
inc
daa
inc
mov
mov
xchg
and
test
std
lcall
or
icebp
movsl
ljmp
lret
je
addb
mov
adc
into
mov
xor
daa
sub
adc
pop
gs
mov
mov
push
insl
jb
fmulp
test
out
and
inc
sahf
and
jbe
pop
leave
sub
mov
aas
ds
push
imul
outsl
mov
xchg
mov
cltd
mov
sbb
pop
mov
or
sarb
jg
out
nop
test
inc
gs
cmp
dec
and
dec
jbe
push
jo
shr
lea
sbb
fwait
and
lret
mov
and
orl
fimull
or
mov
gs
xorl
jne
loopne
dec
xor
popa
jle
add
je
cmc
cmovge
mov
mov
aaa
push
fst
outsl
mov
adc
inc
inc
pop
or
sti
mov
sub
mov
in
repz
push
icebp
xlat
imul
xorb
mov
fwait
xor
sbb
and
and
lret
loopne
movsb
ret
int3
sbb
pop
cmp
ds
pop
insl
mov
push
add
sbb
test
cltd
aad
fbstp
adc
and
repz
jg
sbb
mov
jecxz
xchg
xchg
inc
jecxz
into
sub
adc
xchg
sbb
push
enter
sbb
mov
enter
cltd
std
stc
testl
sbb
xor
call
pop
std
std
mov
xchg
ret
jne
push
inc
leave
jg
das
fs
mov
pop
ret
ss
adc
fnstsw
pop
in
cwtl
dec
inc
outsb
and
aam
push
int3
add
jmp
xchg
push
xchg
mov
and
inc
popl
lods
les
icebp
rcl
into
push
enter
aad
scas
mov
das
mov
cmp
cwtl
es
bound
scas
pushf
jp
ds
pop
fcoml
mov
add
xchg
dec
pop
pop
adc
mov
je
mov
xor
clc
sahf
pop
movsb
sbbb
xor
or
repnz
nop
sub
das
pop
pop
lds
push
sub
inc
sahf
jo
stos
xor
xor
andb
add
pushf
fdiv
mov
pop
or
pop
enter
aam
adc
mov
enter
clc
scas
xor
rorb
enter
dec
dec
inc
call
jae
incl
lock
testl
aas
arpl
out
push
out
lret
jae
mov
cmp
sub
add
push
sbb
data16
stos
push
push
inc
roll
pop
movsl
xor
push
cmp
mov
push
dec
jno
mov
jae
aas
lods
lret
jae
xchg
mov
push
sub
popa
iret
shll
repnz
cli
cwtl
adc
lea
xchg
ja
ret
mov
scas
add
dec
ror
sbb
aad
popf
cmc
dec
jge
pop
cwtl
in
hlt
int3
stc
jb
cmp
push
pop
int
mul
out
lock
idiv
sbb
jl
pop
out
xor
mov
push
mov
jp
xchg
xor
scas
sarl
jmp
popf
icebp
cs
mov
stos
pusha
not
push
insl
pop
rclb
xor
mov
sbb
outsl
mov
arpl
lcall
ds
sub
inc
cltd
jmp
test
jns
fstps
xchg
clc
ljmp
xchg
stos
jo
jp
mov
mov
divl
cmp
push
jp
dec
jmp
cwtl
mov
push
int3
in
pop
jp
dec
loope
inc
pop
std
test
lds
xor
dec
in
mov
adc
mov
rol
rcr
mov
mov
movzbl
clc
btr
mov
pusha
dec
mov
pushl
clc
jmp
mov
pop
sub
mov
mov
add
cld
push
mov
sub
or
movsb
loop
es
sbb
push
or
add
push
xchg
pop
dec
pop
outsb
jl
cmp
xor
xor
add
push
jae
cmp
scas
fmul
stc
notb
fs
int
and
adc
cmp
repnz
out
mov
xchg
mov
or
and
push
push
les
mov
pushf
inc
outsl
paddsw
xchg
out
and
mov
mov
hlt
xor
inc
sbb
scas
push
add
mov
and
dec
out
mov
sbbb
ja
jge
push
iret
mov
mov
imul
lds
dec
jge
mov
xor
xchg
xchg
cmp
mov
das
dec
jg
movsb
es
and
mov
jo
pusha
pushf
pop
xor
fistps
lret
mov
dec
cmp
insb
inc
inc
cld
xor
adc
adc
jmp
mov
dec
sbb
lock
std
jl
aam
aas
cmp
test
outsb
inc
rclb
push
popf
sbb
and
cmp
adc
fimull
inc
sti
push
lods
in
xchg
ja
dec
inc
mov
lea
push
aaa
inc
in
cmp
adc
sbb
xchg
and
push
mov
lods
sub
lret
mov
test
enter
adc
sbb
jle
adc
mov
std
imul
js
std
xlat
fstps
popf
arpl
jecxz
fsubrl
mov
mov
adc
repnz
leave
hlt
pop
add
lock
adc
cltd
push
or
in
fsts
dec
jle
mov
lret
push
shll
fmuls
add
and
das
sub
enter
loope
lods
roll
lahf
sbb
in
shlb
lods
xchg
outsb
dec
xor
mov
pop
out
cmp
sub
xor
add
pop
lds
mov
or
mov
adc
repz
mov
sahf
and
or
pop
cmp
add
mov
stc
cmp
ds
mov
scas
cmp
mov
cmpl
jae
clc
sbb
cmpsl
push
jns
inc
incl
movzbw
setnp
push
movsbw
push
call
mov
lea
jne
jmp
pushf
dec
clc
test
movb
test
neg
pushf
inc
jmp
mov
pop
sub
sbbl
std
repz
xchg
sub
lds
andb
outsl
mov
jb
idivl
push
mov
sahf
xor
repnz
lods
mov
and
js
pushf
lahf
fwait
pop
push
cmp
shrb
fbld
jbe
xchg
mov
andb
add
pusha
les
cld
lock
mov
and
mov
inc
push
cmp
xchg
int
int
test
and
pop
mov
lea
je
clc
movsbl
xadd
push
sub
seta
shrd
mov
shl
mov
neg
or
bsr
shr
add
shl
btc
and
cmp
mov
clc
or
jmp
lea
call
push
lea
je
mov
push
pusha
pushf
push
lea
jmp
cwtl
int
sub
ficompl
push
xor
sbb
out
pusha
and
fwait
xor
addb
mov
movsl
out
pop
inc
les
loopne,pt
xor
adc
cmp
test
cmp
mov
cltd
pushf
sbb
fildll
cmc
push
mov
out
test
out
push
cmp
xor
push
out
neg
call
popa
and
xorl
test
imul
push
dec
adc
and
push
mov
aas
cmc
test
call
xchg
jecxz
mov
xchg
movsb
dec
mov
outsb
test
push
mov
xchg
loop
notb
mov
xor
xchg
cltd
out
xchg
loope
and
sbb
sub
je
das
mov
lods
out
gs
push
push
inc
mov
lods
mov
out
scas
into
cld
pop
jbe
push
out
inc
inc
cmp
aad
or
cli
pop
and
and
xor
mov
pushf
add
pop
popf
fstpl
push
or
mov
cmc
jnp
jg
and
aas
aad
xor
shll
pop
and
mov
mov
jp
cmc
cmp
adc
mov
sub
or
lret
in
mov
test
mov
pop
les
test
insb
mov
xchg
jmp
in
push
push
data16
pop
fwait
jno
dec
jle
and
sub
cmpsl
cmp
cmp
loopne
pop
xchg
adc
mov
mov
mov
push
mov
jae
xchg
cmc
scas
hlt
jecxz
mov
sub
test
fidivl
int3
enter
xchg
adc
ss
ja
ds
data16
enter
repz
aas
mov
xchg
xchg
push
pop
sarl
mov
pop
xchg
xchg
push
cli
iret
jmp
xchg
imul
cmovnp
arpl
iret
mov
inc
es
lret
ret
mov
dec
cmpsl
lds
icebp
outsl
lods
arpl
push
movsb
mov
mov
or
push
divb
sbb
ss
xchg
push
in
cwtl
push
lret
xor
lods
dec
repz
sub
jge
xchg
or
cmp
add
or
and
mov
mov
into
into
bound
mov
mov
xchg
inc
sbb
movsl
xor
mov
sub
add
into
push
mov
call
cmp
pop
daa
mov
mov
xchg
aaa
mov
sbb
icebp
mov
and
test
pop
int3
adc
sbb
dec
popf
andb
stos
insl
dec
and
sub
adc
std
mov
mov
xlat
push
adc
popf
ret
popf
les
aam
mov
xchg
das
xor
sbb
inc
and
bound
sub
adc
and
sbb
daa
in
sbb
dec
in
cld
sub
push
jo
xor
xchg
pop
xor
imul
mov
dec
lods
jp
push
es
daa
xor
jo
and
ljmp
push
mull
xorl
mov
jecxz
add
pop
sub
push
adc
sub
adc
fisubs
cwtl
inc
pop
aam
xchg
cmpsl
testb
jbe
pop
and
out
push
jl
test
mov
out
or
int3
ror
cmpsb
sbb
loop
fs
int
push
imul
xchg
insb
add
xchg
cltd
out
jecxz
out
inc
fistps
dec
mov
jae
mov
fsts
ret
xlat
and
push
je
adc
mov
test
mov
stc
ss
cwtl
inc
fcoml
call
test
popa
movsl
mov
mov
daa
inc
lock
pushf
xor
mov
push
xlat
mov
jle
and
arpl
clc
outsl
aad
push
or
in
out
pop
repnz
adc
push
or
fwait
cmc
push
popa
out
fldt
arpl
or
mov
sbb
mov
mov
dec
jb
push
test
mov
les
outsb
lods
jb
testb
mov
lret
into
cwtl
outsl
sbb
mov
jno
cmp
ret
inc
jne
push
sbb
push
lcall
or
jbe
cmp
push
inc
enter
pushf
mov
punpckhbw
inc
push
pushf
cwtl
cwtl
mov
dec
mov
xchg
dec
jmp
call
cmpb
and
lret
dec
sbb
sub
jl
fcomps
movsb
push
lock
sub
xor
insl
inc
aaa
aad
lcall
and
movsl
cmp
stos
fiadds
aad
xor
mov
sti
mov
mov
imul
sub
jmp
enter
xor
jecxz
sub
cmp
scas
mov
and
pushf
clc
sbb
sbb
mov
lcall
lretw
and
lret
xchg
add
jle
lret
inc
cmp
ss
dec
cmpsb
cmpsl
push
mov
mov
fsubl
and
fidivrs
cmp
imul
sub
sub
adc
mov
in
xlat
push
push
loop
add
adc
adc
add
mov
mov
daa
add
jae
loope
stc
je
out
lahf
gs
cltd
inc
mov
icebp
mov
int
popf
or
in
cmp
out
stos
rorl
push
outsl
shll
fistpl
or
cld
leave
inc
dec
jns
clc
sbb
mov
addl
popf
and
fistl
pop
into
sti
mov
fucomi
in
sbb
add
inc
fldl
lods
mov
in
ljmp
jns
mov
jno
adc
pop
fildl
xor
fcomi
scas
inc
fistps
push
dec
sbb
fildl
xchg
call
jle
mov
loope
sti
pop
cli
fcmovnb
addr16
out
out
adc
inc
lahf
movsb
fldl
push
std
pop
add
push
sub
pop
jp
xor
int3
jb
xchg
add
pushf
int
lar
fildl
xor
pop
jbe
fstpt
xchg
cmp
mov
je
pop
arpl
mov
jnp
shl
sbb
jbe
mov
rcl
call
and
xchg
fdivs
lods
popa
or
movsl
jg
adc
push
add
lods
push
popa
fucomi
push
push
cmp
js
push
pushf
je
in
mov
stos
jg
fcmovne
nop
cmp
jb
inc
fildl
pop
lods
and
dec
mov
cmpsb
fildll
aam
fcmovnu
mull
iret
fwait
inc
dec
test
sub
cs
add
push
cmc
fnstcw
fildl
lahf
xchg
stos
stc
scas
jp
ds
mov
divl
fwait
ss
lcall
adc
inc
push
pop
cmp
fcmovnb
ja
push
mov
xchg
xchg
sbb
data16
cmc
xchg
sbb
sarb
jns
mov
xorl
fistl
je
call
xor
rcr
test
sbb
stos
push
push
negl
sbb
sahf
pushf
test
shrb
sbb
lock
cmpsb
dec
stc
jo
icebp
pop
loopne
insl
test
xchg
dec
dec
negb
jnp
je
fidivl
insl
xchg
push
mov
sbb
imul
dec
enter
cs
les
mov
lahf
or
fildl
adc
fldt
ret
lcall
mov
sub
jbe
out
mov
sbb
mov
mov
fcmovnu
aaa
or
and
clc
fldt
negl
fcmovu
dec
add
jno
inc
fnsave
xchg
jle
popa
clc
frstpm(287
xchg
pop
or
dec
ljmp
xchg
mov
dec
adc
pop
aaa
sahf
loope
hlt
and
dec
mov
mov
mov
and
jmp
and
call
iret
cmp
outsl
dec
neg
int3
adc
or
fcomi
mov
push
inc
xor
push
fnstcw
pop
ljmp
jnp
push
jmp
stc
stos
xor
cli
out
xlat
jl
dec
push
fldt
lcall
aam
fld
scas
pop
dec
pop
pop
or
lock
icebp
mov
cld
pop
shrd
loopne
imul
mov
pop
jle
popa
push
clc
push
bnd
cld
dec
imulb
addr16
cli
sub
adc
cli
fidivs
repnz
mov
scas
stos
fnsetpm(287
mov
mov
or
mov
and
jmp
test
dec
lahf
xor
loop
imul
jp
mov
in
in
jmp
pop
stos
sbb
jmp
data16
popa
repnz
in
cld
or
adc
push
outsl
fbstp
adc
ljmp
loop
cmc
jl
ret
out
fists
in
cmp
or
sbb
push
xchg
stos
movsb
and
mov
pop
push
lods
and
jb
fcmovb
stos
pushf
jmp
xchg
mov
adc
dec
arpl
shr
push
sbb
add
and
pop
xor
icebp
push
inc
push
inc
in
jmp
or
jne
fistps
add
in
ja
sbb
and
shl
stos
mov
dec
cli
lods
sub
add
ja
push
mov
rorb
fdivrl
out
sub
mov
subb
stos
in
adc
xor
shll
add
xlat
cwtl
dec
ljmp
mov
lods
movsl
loop
pop
push
lds
ficoml
hlt
lcall
sbb
test
bound
cmp
das
xlat
loope
jns
movsb
cmp
lret
lcall
cmp
cli
fisubrs
jle
cmpsl
fdivrl
push
lods
sarl
mov
pop
xor
fnstsw
push
push
mov
lret
aaa
inc
adc
in
push
xchg
lar
jecxz
addr16
push
adc
lcall
out
mov
icebp
adc
jecxz
jae
loop
sbb
stos
mov
mov
cmp
lods
sub
sbbb
dec
int3
adc
mov
stos
fadds
push
decb
loop
dec
jb
or
jae
add
insb
out
ret
inc
adc
je
fucom
cmp
xchg
mov
pop
ds
and
sub
add
loopne
sbb
jp
test
mov
jnp
jmp
cmc
loop
mov
dec
push
loopne
cli
cmpsb
imul
fldt
repnz
out
ja
or
cli
or
or
adc
cmc
adc
or
push
fisttpl
icebp
push
outsl
int3
mov
and
rcrl
lods
fcomi
push
test
arpl
leave
or
fldt
outsb
repnz
xchg
jae
fiaddl
test
test
clc
jbe
add
out
scas
es
cli
lds
aam
mov
mov
fwait
mov
les
insl
mov
leave
std
in
scas
pop
add
fsubp
xor
in
out
popa
inc
cmp
popf
sbb
push
xor
cmpsb
inc
idivb
and
or
es
pop
ljmp
dec
fwait
sub
andl
mov
jle
xchg
into
int
scas
lret
sbb
shrb
frstor
pop
call
fldt
jne
clc
and
fldt
loopne
jecxz
pushl
cwtl
hlt
fistpl
pop
and
shlb
in
dec
inc
adcl
mov
out
push
frndint
fisttpl
and
fisubl
mov
and
pop
fwait
xor
push
call
xchg
mov
jno
loopne
jle
mov
cmpsb
sbb
aaa
cmp
test
add
push
fsubrl
and
aaa
xor
mov
loopne
stc
bound
sbbl
lret
dec
test
fwait
xlat
inc
sbbb
fildl
not
cmp
mov
fcmovnbe
mov
and
mov
xchg
cwtl
movsb
call
jo
or
pop
call
mov
jb
dec
sti
inc
clc
cwtl
popa
sub
pop
ljmp
mov
jnp
cmpsb
jns
add
ficomps
je
in
adc
rorb
sti
sub
shll
mov
mul
loope
fucomp
fninit
cwtl
fcom
inc
jnp
or
push
in
aas
loopne
dec
int3
push
fildl
bound
xchg
and
aaa
or
outsb
frstor
mov
sbb
sti
pop
push
cmpsb
mov
dec
loop
adc
jns
popa
mov
fstpt
push
xchg
das
fisttpl
stos
jbe
jb
fcmovnb
xchg
movsl
insb
inc
test
adc
mov
push
push
mov
xor
pop
bnd
jae
jb
xchg
dec
das
imul
ret
stos
mov
xchg
shlb
inc
sbb
mov
lret
jne
mov
mov
pop
push
push
jb
fndisi(8087
rcr
or
lods
push
xor
js
cmp
fadds
in
cmpsl
fstpt
or
pop
push
inc
pop
call
cli
add
fidivrs
pop
ret
lret
fistl
int
mov
pop
push
loopne
bound
pop
je
mov
fcmovnbe
out
addr16
sti
jbe
rcr
subl
fisubs
std
adc
call
fstpt
inc
fisubs
fistl
adc
or
cs
clc
fcmovnu
in
stc
pop
mov
mov
jl
sahf
jle
fildl
lcall
ds
scas
inc
pop
push
push
adc
clc
sarl
inc
ficoml
inc
leave
sti
movsb
lock
test
sbb
xor
cmp
jb
mov
push
aas
lret
out
or
ljmp
popa
inc
out
fs
fistl
hlt
fadd
test
iret
mov
sbb
into
lcall
push
cld
mov
pop
movsl
xor
fnstenv
fistpl
pop
fldt
out
ja
sub
jne
fdivrl
js
adc
push
int3
xchg
stc
popa
sbb
lcall
loope
jle
fsub
ret
dec
push
xor
lcall
mov
fcomi
jnp
or
dec
jp
fimull
dec
xchg
pop
push
pop
test
mov
adc
fsubl
pop
in
mov
xlat
jns
decb
mov
inc
jnp
movsl
mov
aam
fisttpl
cltd
es
fstpt
dec
gs
in
iret
pop
xor
rorb
sbb
cmp
and
mov
out
mov
inc
pop
clc
pop
idivb
pop
adc
xchg
pop
fwait
cltd
je
in
testb
inc
fmuls
mov
push
enter
lcall
mov
hlt
jmp
fistpl
inc
and
fcmovne
mov
mov
push
cmp
dec
sbb
fnstsw
das
icebp
jp
cmp
mov
jo
dec
and
fisttpl
aad
fistl
std
inc
fldt
mov
dec
adc
je
hlt
fcmovnbe
lds
mov
icebp
mov
jne
mov
or
push
jecxz
and
dec
lcall
lcall
jno
rcll
sub
in
cmp
mov
divb
ret
popa
iret
jo
fstpt
jge
insl
dec
in
stos
sbb
movsb
icebp
andl
mov
adc
and
push
out
push
mov
mov
ficoml
mov
cs
divl
pop
mov
addr16
testl
xchg
lret
stos
sbbl
sub
inc
shlb
sbb
std
push
dec
add
es
xchg
mov
stos
cmp
pop
lock
sbb
pop
out
mov
ret
stos
mov
pop
xchg
rclb
xchg
jnp
insl
adc
add
fisubl
daa
inc
fcmovne
bound
xor
ljmp
mov
xlat
mov
arpl
cltd
pop
enter
sbb
in
pop
fcoml
int3
adc
imul
call
sub
fwait
clc
repz
adc
inc
inc
inc
imul
in
xchg
cmp
xchg
adc
push
pop
fucom
jmp
fndisi(8087
pop
push
xchg
sbb
rolb
jp
cmp
aad
adc
loope
push
outsl
insl
pop
fwait
mov
sbb
fidivrs
xchg
in
or
lock
mov
fucomi
mov
adc
imul
add
cmpsb
arpl
xor
inc
arpl
add
sbb
push
cltd
mov
jno
fs
je
fisttpl
repz
call
cli
fstp
pusha
cmp
mov
add
shrl
cltd
sti
and
mov
jbe
dec
sub
scas
mov
mov
lcall
xchg
fcomi
and
divl
fistpll
pop
pop
sti
fwait
jae
jns
inc
sbb
mov
mov
mov
clc
mov
lock
rcrl
ss
xor
cmp
mov
or
loopne
orb
int
cld
lods
pop
jle
sahf
add
dec
loope
pop
cwtl
stos
adc
int3
out
mov
add
sbb
add
call
rclb
adc
push
loop
push
jno
sub
adc
adc
push
pushf
scas
jl
out
nop
pop
mov
xor
ss
loop
popa
in
call
insb
jne
les
sub
mov
xor
aas
adc
push
test
pop
dec
and
pop
test
fstl
and
or
icebp
adc
jmp
jecxz
ljmp
insb
xlat
add
adc
cmp
mov
pop
inc
js
sbb
xchg
fisttpl
leave
and
hlt
adc
int3
sbb
int
dec
lods
clc
call
cmp
call
adc
and
sahf
lcall
sbb
mov
pop
push
and
lock
mov
fs
inc
call
lahf
loopne
cmp
jo
add
sub
ljmp
mov
fwait
lahf
sbb
sub
fnstcw
pop
outsl
jb
mov
mov
scas
dec
mov
inc
cs
das
mov
fisttpl
mul
dec
sub
cmpsb
popf
sbb
shrb
fistpl
pop
jecxz
ljmp
fwait
add
sbb
pop
fstpt
inc
in
sbb
mov
rcrl
push
ficompl
jne
inc
lret
mov
bound
scas
mov
sbb
int
cmp
js
fistpl
adc
es
add
fstpt
dec
stos
mov
dec
nop
push
adc
mov
mov
stos
fwait
adc
pop
push
inc
mov
pop
or
add
push
jbe
pop
ljmp
repnz
pop
pop
stos
shll
lods
sbb
call
ret
lcall
push
sub
cmpsb
dec
fnstcw
out
dec
mov
push
jl
shll
cmp
xchg
cli
ret
jno
adc
shll
adc
loope
lods
bound
sbb
sbbb
jb
jp
cmp
pop
sahf
icebp
adc
dec
out
jl
iret
fisubl
cmp
dec
fldl
fildll
or
icebp
ret
nop
adc
stos
xor
sbb
lret
and
popa
popf
cmp
mov
mov
into
cmc
lock
inc
sbb
rcr
or
lds
mov
dec
fcmovne
jp
dec
sub
repnz
pop
or
pop
fsts
nop
daa
ret
out
lods
mov
call
ds
fldl
cli
fdivrl
stos
movswl
jmp
loope
jno
lcall
sub
pop
sbb
mov
decl
loope
mov
add
lret
adc
jmp
stos
mov
and
cmp
lods
addr16
or
pop
mov
inc
daa
jle
arpl
add
pop
inc
aas
or
cmpsl
outsl
mov
mov
mov
jne
adc
loopw
mov
in
fidivrl
outsl
jle
out
clc
ficompl
xchg
sub
cli
sbbb
cmpsb
mov
cs
push
xchg
push
sti
mov
mov
sub
stos
je
jne
jae
push
insb
js
pop
movsb
mov
dec
gs
bnd
cld
mov
mov
pop
sbb
jecxz
xchg
mov
push
mov
add
push
xchg
ljmp
clc
fistps
stos
add
shr
push
push
lret
cmpsb
in
and
sti
js
lods
xor
jg
push
sbb
addr16
out
xor
mull
fstps
stos
out
xchg
movsb
je
dec
mov
insb
push
pop
cli
jp,pt
ljmp
mov
inc
in
repz
add
stc
xor
sub
mov
out
cmpsb
push
loope
cmp
fdivrl
push
dec
test
stos
inc
pop
push
orb
xchg
lret
repnz
dec
push
aas
mov
imul
rcrl
je
leave
insl
sbb
fstpt
in
add
ljmp
imul
pop
bound
cltd
adc
out
cmc
pusha
sub
mov
in
and
ret
push
xchg
fbld
pop
inc
imul
add
aas
lret
stos
lds
in
bound
sub
cmpsb
andnps
pop
cmp
stos
mov
push
cli
clc
in
rcr
jle
imul
insb
mov
in
outsl
jnp
lods
sbb
ds
fistps
int3
add
loope
jle
in
stos
pop
mov
push
stos
int3
xchg
inc
jb
lea
fdivp
inc
lods
xchg
iret
jp
lods
ds
syscall
cli
les
dec
cmp
lcall
jnp
inc
pop
int
inc
mov
push
jecxz
mov
in
aam
pop
repnz
cmp
jge
popf
cld
in
xchg
mov
jnp
sub
ja
or
pusha
xchg
and
jmp
mov
or
lret
fisttpll
pop
adc
or
or
sbb
mov
mov
icebp
add
lock
or
sub
imul
dec
xchg
outsb
pop
xor
in
cmp
icebp
lret
inc
mov
cwtl
or
xchg
push
repnz
in
dec
jb
inc
call
lcall
out
inc
loopne
fisubs
testb
mov
mov
icebp
sbb
stos
in
fidivrs
mov
daa
dec
pop
stos
adc
adc
push
aam
outsl
nop
jge
movsb
sbb
mov
gs
jbe
fistpll
lods
loope
lcall
repnz
jnp
pop
fisttps
fildl
mov
rcl
fisttpl
adc
in
push
jmp
xor
mov
decl
jbe
pop
mov
aaa
and
ds
jp
adc
bound
adc
arpl
out
lea
rcrl
xchg
jge
data16
sbb
cmc
jmp
xchg
es
int3
incl
aad
mov
fstps
fdiv
jecxz
loopne
mov
insb
push
fisttpl
rolb
fisttpl
mov
fisttpl
sbb
mov
jl
fcmovnb
loope
bound
lea
push
xor
fiaddl
push
fildl
ret
fisttpl
ja
loop
mov
dec
push
sbb
fs
fxch
stc
push
and
or
sbb
jae
mov
mov
fucomi
pusha
popa
inc
adc
lea
dec
lds
mov
mov
lods
out
andb
inc
mov
pop
sbb
fldt
loop
dec
xlat
stos
ljmp
data16
sub
pop
das
jge
inc
call
lock
xchg
cmpsb
fstpl
out
xor
popf
clc
lret
xchg
mov
fcmovu
cmpsl
cwtl
sbb
fstpt
sub
or
and
clc
or
inc
scas
repz
or
int3
popa
xor
sub
xor
pop
inc
push
pop
lea
iret
xchg
jecxz
mov
icebp
ret
sub
out
insl
mov
ret
xchg
mov
outsl
add
push
std
rorb
push
cwtl
dec
lret
js
and
lahf
fucomi
ffreep
push
adc
popa
pop
fldt
decl
in
xchg
pop
lcall
dec
mov
fistpl
xchg
and
sbb
sub
jae
fistpl
add
bound
or
cmp
adc
xor
fcomi
lods
subb
cmp
rorl
fisttpl
mov
test
repz
cvtps2pd
rolb
fistpl
negb
xor
lea
shll
in
jae
xor
sbb
sub
fildl
xor
fisttpl
lahf
mov
les
fstpt
push
xchg
sbb
ficompl
pop
arpl
sbb
nop
adc
iret
repnz
add
sbb
pop
inc
and
sub
or
loopne
test
repz
fwait
inc
fsts
int
xor
rol
adc
rorl
rorb
mov
rolb
cmp
xchg
imulb
fildl
or
adc
out
fstpt
adc
pop
pop
les
call
dec
fildl
add
data16
cmpsb
fisttpl
test
sub
fwait
cli
xchg
stc
fildl
push
jb
mov
sub
leave
in
fldt
addl
out
cmp
pop
fisttpl
adc
mov
int
cmp
sti
loop
out
pop
fildl
or
dec
and
inc
mov
divl
xchg
fldt
adc
cmp
sbb
or
pop
cmp
jnp
ss
scas
lea
dec
fildl
call
fstpt
insl
pop
aaa
iret
mov
adc
lahf
ret
xchg
aas
fwait
pop
clc
test
mov
pop
call
loopne
lods
test
sarb
dec
in
push
adc
in
fidivl
cmpsl
jbe
lahf
lock
fldt
in
aad
inc
cmp
lock
jmp
xchg
cmp
cmpsl
mov
test
push
mov
sahf
mov
pushf
in
fcmovnb
add
pop
lcall
fiadds
inc
or
cmp
loopne
dec
mov
fstpt
cmp
xlat
outsl
mov
pop
out
ja
fistpll
mov
icebp
lcall
lods
ss
and
add
loope
pavgb
push
subb
addr16
mov
push
lcall
mov
les
stos
push
push
adc
lock
mov
xor
jecxz
je
ljmp
lcall
cmp
ds
cmpsl
ljmp
sub
and
dec
hlt
inc
fisttpl
push
xor
sti
insl
sub
sbb
push
fists
mov
push
and
iret
sub
call
sub
jbe
mov
aas
lret
bound
fnsave
stos
mov
cltd
cmc
fistl
icebp
hlt
xchg
data16
fidivrl
ja
sub
test
and
sub
iret
xchg
fistpl
idivl
adc
add
cmp
loopne
arpl
imul
je
pop
enter
dec
xor
push
iret
fistl
repnz
cmp
mov
adc
rcrb
sbb
scas
pop
pop
cmp
sub
fistl
stc
clc
out
mov
push
push
pop
dec
adc
xchg
arpl
xchg
xchg
jb
fwait
call
xchg
fistpl
ljmp
cmc
adc
fcomip
and
aas
pop
jecxz
adc
fistpl
mov
xchg
fistpl
sbb
rclb
mov
ficoml
in
adc
mov
cmpsl
and
shlb
ret
xor
push
jb
pop
jmp
push
sub
out
jge
sbb
mov
out
mov
xchg
adcb
push
cmp
jne
les
inc
and
je
movsb
sahf
shll
in
cmp
add
orl
fcmovne
jmp
lret
dec
test
or
shrl
ror
loopne
xor
lcall
inc
mov
es
fnstsw
add
stos
xchg
inc
fucomi
ljmp
call
and
negl
fwait
clc
xchg
add
mov
or
xor
push
lea
sub
popa
xor
push
mov
push
call
mov
push
ret
jecxz
pop
lods
in
sub
dec
fimull
arpl
push
sbb
mov
xor
fildl
enter
clc
push
cmp
fstp
lea
sbb
xchg
cmpsb
sbb
xor
mov
cwtl
sbb
cltd
sub
icebp
sbbb
ljmp
cmpsb
out
xchg
or
pop
fildl
rcrb
sahf
jb
xchg
inc
lea
push
fistl
sbb
cmpsl
int
rcrb
adc
mov
movsb
fstpl
mov
mov
jmp
scas
adc
xor
push
cmc
stos
mov
fidivl
rcrl
filds
in
cmp
inc
inc
fistl
in
and
fcomi
push
scas
ljmp
push
lock
loopne
gs
mov
jo
sub
pop
sub
jge
jg
sub
into
jmp
or
and
and
int3
jb
fdivrl
icebp
fstpt
outsl
popa
push
jns
imul
jne
inc
dec
xor
rclb
cmp
aad
pop
enter
outsb
cmp
mov
sub
sbb
imul
fldenv
inc
adc
jno
inc
xor
xchg
pop
mov
mov
inc
clc
fisttpl
xchg
leave
ficompl
fisttpl
add
push
cli
ss
mov
cmp
jmp
mov
lods
cwtl
das
mov
xchg
nop
sahf
sbb
xor
outsb
sti
fistpl
leave
in
test
jge
sarl
and
fstpt
jp
lret
test
and
cld
fsubl
sti
pop
or
repz
aad
cmp
pop
lret
inc
cmp
loopne
jno
and
in
lret
mov
mov
mov
jge
enter
mov
jnp
repnz
call
ss
cmp
pop
or
aaa
xchg
fs
fucomi
cmp
cmp
fadds
call
cmp
add
sub
xor
cmp
sarb
outsl
xor
sub
cwtl
or
addr16
jnp
jl
adc
adc
lods
aas
pop
sbb
sub
xlat
xor
push
mov
jl
dec
push
fcomi
gs
xchg
jb
aas
int3
xchg
mov
or
das
mov
sbb
mov
je
gs
mov
sbb
pop
cmp
cmp
test
call
and
scas
adc
adc
in
xor
loopne
vandps
lds
cld
cwtl
fildl
xlat
push
loopne
je
or
inc
and
cmc
fistl
test
jmp
push
xchg
push
pop
jo
leave
shlb
inc
fldt
icebp
je
fildl
jecxz
repz
testb
adc
xchg
jbe
ret
jnp
cmp
loop
sub
or
aam
mov
mov
and
xchg
scas
inc
mov
fnsave
mov
test
adc
fistps
negb
cli
pop
stos
fildl
push
cmp
call
mov
mov
fs
in
mov
xchg
pop
test
subl
loope
xchg
inc
cmp
hlt
fwait
out
mov
fstpt
push
dec
jecxz
pop
or
add
testb
mov
negl
cmpsl
cmpsb
adc
push
mov
out
mov
outsb
test
scas
dec
push
push
aam
xchg
mov
xchg
mov
popf
mov
pop
popa
mov
ljmp
lret
icebp
cmp
outsl
ja
xchg
dec
inc
lock
std
sahf
fcmove
cmp
notl
enter
push
cltd
subb
pop
es
test
je
xor
arpl
add
ljmp
or
mov
xlat
stos
fisttpl
fidivrl
or
sbb
sub
js
cli
push
test
out
pop
xor
sub
fistl
push
pop
mov
loopne
enter
hlt
mov
jmp
int3
rcrb
jae
or
pushf
fistl
push
lds
movb
fwait
xchg
jmp
inc
xchg
push
loopne
test
aad
fldt
int3
enter
aam
sbb
into
ret
fiaddl
clc
mov
call
pop
cmp
xchg
stos
scas
mov
sub
pushf
adc
incl
call
adc
ret
dec
lock
fldt
outsb
arpl
pop
out
lea
and
or
fldt
vunpckhpd
pop
test
jmp
add
test
js
adcb
test
insb
outsl
ret
popa
sti
data16
or
sub
mov
xchg
fstpt
adc
pushf
pop
ret
sbb
or
sbb
call
mov
shll
gs
fcmovnbe
jp
scas
pcmpgtd
adc
mov
push
dec
das
fnstsw
pop
or
jnp
add
int3
test
add
jb
sbb
jmp
mov
sub
stos
roll
arpl
lock
fcmovbe
das
ret
jbe
pop
js
jb
and
jno
sub
lods
push
dec
xchg
push
push
fisttpl
add
xchg
cltd
aaa
fcmovnu
jae
mov
addr16
jl
inc
add
call
xchg
push
test
sbb
call
mov
fistpl
cld
in
out
dec
mov
mov
fildl
and
shrb
cmp
fistl
mov
xor
or
push
jle
stos
das
repnz
adc
sub
idiv
cmp
out
mov
push
or
ja
clc
xor
cmp
pop
jl
add
fistl
or
fistl
jb
scas
addl
push
sbb
fldt
mov
fcomp
dec
cs
xor
subb
inc
test
inc
jo
sub
lods
push
sub
cld
fwait
xchg
sti
fcmovnu
or
leave
sbb
xchg
das
pop
repnz
push
sbb
in
and
jo
jmp
arpl
mov
push
stc
xor
lahf
or
sub
enter
adc
adc
cs
jg
push
test
inc
jle
mov
xor
inc
or
fisttpll
fldt
adc
stos
je
movsb
adcb
fimull
sub
sbb
loopne
push
sub
dec
and
scas
inc
push
ficoml
pop
imul
in
enter
adc
pop
sbb
push
sub
dec
mov
xorl
push
mov
idivb
sbb
aam
add
xchg
dec
lcall
fdivrs
adc
jle
ljmp
stos
sub
cmp
loop
lcall
ret
mov
ja
cmp
cmpsl
push
popf
lahf
push
test
fistpl
push
daa
or
iret
push
xchg
jo
adcl
popf
andl
in
adc
outsb
call
mov
push
call
fists
and
fimull
mov
scas
call
mov
stos
rcr
stos
aaa
push
cwtl
dec
fdivrl
lretw
shr
pop
and
ljmp
adc
push
aad
xor
pop
push
sti
xor
xchg
xor
insl
mov
in
icebp
mov
out
fisttps
sbb
lahf
rcll
and
loope
repnz
mov
cs
push
fsubs
insb
xor
lods
outsb
inc
sbb
loopne
dec
pop
jmp
and
scas
rolb
jge
sub
sub
clc
push
jno
sub
push
add
cmc
iret
add
rcrl
jo
jp
jns
dec
cmp
hlt
xchg
xchg
jno
mov
xlat
adc
fsubrl
icebp
jb
js
fwait
test
sti
jo
loop
ss
mov
out
stos
repnz
popf
lods
pop
ret
dec
testb
cmp
jae
push
and
fstps
dec
aas
fcmovne
cmp
jp
inc
adc
ja
mov
sub
sbb
fs
pop
mov
pusha
orl
mov
int
fstpt
dec
lcall
pop
out
fildl
sub
shll
sti
or
pop
jns
jb
fildl
cmpsl
jecxz
pusha
test
sbb
shlb
and
pop
imulb
fsts
adc
xchg
pop
cmp
cmpsb
mov
aad
mov
jp
inc
shl
or
sub
or
stos
sub
sbb
xor
xchg
sbb
pop
sub
fcoml
adc
rcrb
out
sub
js
sahf
mov
adc
pop
out
jg
mov
mov
outsl
pop
push
leave
xchg
push
fistpl
mov
arpl
or
inc
pushf
int
xchg
imul
out
adc
sti
jmp
fwait
lahf
sub
fidivl
cmpsb
out
mov
ss
icebp
sub
cli
push
repz
jp
xor
mov
fcomi
out
inc
sub
mov
nop
lahf
lods
fcmovne
jg
lods
test
mov
push
mov
fstpt
lcall
mov
push
jns
call
or
fbstp
lret
stos
lret
add
int
insl
push
shll
fcmove
icebp
and
fsubp
sbb
ss
push
pusha
fstpt
mov
inc
fildl
inc
ds
loop
loop
pop
mov
push
in
pop
push
dec
dec
sub
inc
loope
loop
mov
sahf
and
add
dec
jmp
jl
and
mulb
cmp
mov
cmp
out
cmp
jl
jns
push
adcl
fbstp
fildl
inc
mov
cld
jp
add
repnz
in
sub
or
int3
test
scas
int
shl
cmpb
loopne
test
jb
adc
in
sub
repnz
rcr
leave
stc
mov
fs
cmpsl
shrl
lcall
in
push
inc
sub
cltd
gs
lods
jle
shll
aam
fldt
adc
pop
mov
mov
ss
add
divb
push
cmp
loopne
repz
imul
mov
subb
mov
int
lahf
test
mov
pop
fcmovnu
lods
fwait
addr16
mov
xlat
jae
and
mov
pop
aas
pop
pop
mov
push
fisubl
push
mov
cmpsl
enter
fcomps
call
or
xchg
jne
sbb
lods
fcmovnbe
and
dec
adc
xchg
mov
mov
push
ljmp
and
sbb
imul
fsubl
mov
mov
clc
sub
test
fidivrs
fstl
add
pop
lret
adc
pop
xor
mov
fildl
fstpt
ret
sbb
cmp
jmp
push
push
mov
inc
dec
mov
fisubrl
and
add
in
fildll
and
mov
arpl
push
add
fistpl
add
pop
fstpt
inc
mov
or
test
mov
jge
loop
in
out
xchg
fistps
into
fstp
xchg
inc
pop
movsb
push
roll
and
call
sbb
mov
into
sbb
and
mov
push
push
in
les
neg
es
mov
mov
or
push
sub
mov
insb
pop
adc
lods
add
xor
cli
sbb
loopne
clc
out
sbb
shrl
mov
fstpt
fisttpll
inc
mov
lock
jb
and
les
notb
adc
je
dec
xchg
mov
cmp
es
sub
dec
lcall
cmp
loopne
das
xorl
aaa
fucomi
ja
shrb
in
std
xchg
pusha
paddusw
faddl
fisttpll
add
mov
xchg
xchg
push
mov
mov
jae
or
cltd
ret
lds
xchg
shlb
mov
xchg
xchg
pop
jg
test
decl
addr16
lret
xlat
aam
push
xorl
mov
and
negl
xor
call
cmp
callw
divb
lcall
fwait
test
nop
fisttpl
mov
sbbb
fldt
push
mov
mov
mov
int
ds
in
repz
into
pop
shll
mov
scas
negb
push
fsub
xor
je
mov
int3
popf
int
lods
hlt
inc
sbb
movsb
mov
xor
mov
sub
sbb
mov
xchg
push
fstpl
sub
xchg
sbb
mov
dec
mov
push
fwait
addr16
clc
cwtl
cmp
out
sbb
fcmovnu
push
int3
mov
dec
hlt
fistl
jmp
pusha
sub
call
shrl
fcmovne
mov
lcall
and
jmp
aad
pop
inc
pop
xchg
fs
addl
push
push
fstpt
xor
inc
inc
dec
fstpt
sub
sahf
cmpsl
ffree
int
imul
fistl
xor
jb
and
outsb
add
in
insl
cmp
fidivl
or
leave
dec
lret
sbb
dec
inc
fildl
movsb
pushf
ds
xchg
subl
idiv
int
dec
enter
inc
cmp
mov
test
push
fchs
xor
push
arpl
rcr
idivl
ret
rorl
sbb
out
sbb
jl
xchg
pop
push
pop
inc
lock
sbb
mov
mov
push
pop
cli
inc
and
sbb
dec
loope
rcr
mov
cmp
push
and
xor
xchg
sub
xchg
cltd
jnp
mov
push
insb
dec
add
ret
in
lea
in
ficoml
sarl
inc
xlat
test
lods
mov
mov
push
dec
fcmovnb
leave
loopne
imul
jmp
pop
xchg
pop
sub
aas
dec
dec
cmp
lods
lea
insl
pusha
mov
or
jno
in
mov
lock
dec
sub
clc
add
inc
insb
filds
adc
cli
sub
mov
mov
popf
pop
jne
popa
addl
pop
xchg
sbbl
out
call
push
dec
sahf
fiaddl
fisttpl
mov
lcall
and
xchg
or
jno
popf
adc
add
or
sub
cmp
xor
fsqrt
addl
insl
jle
fst
dec
mov
ret
aam
fistpl
daa
mov
xchg
pop
adc
pop
ja
lods
push
adc
pop
xor
cmpl
xor
cmp
scas
xor
sbb
inc
hlt
dec
push
xchg
adc
pop
add
imul
fists
ret
mov
mov
fildl
aad
icebp
ss
mov
mov
push
iret
adc
imul
add
push
shrl
scas
mov
xchg
out
or
push
inc
dec
jne
aad
sahf
cmpsb
xor
mov
fwait
mov
aaa
jp
xor
add
loopne
in
pop
rcrl
xor
push
fimull
sub
sahf
idivb
pop
dec
inc
stos
mov
popf
call
xchg
mov
mov
cmp
iret
loopne
push
inc
pusha
adc
jb
push
fisttpl
sbb
adc
mov
idiv
lea
loopne
loope
dec
mov
out
mov
add
pop
sti
add
mov
pop
mov
fwait
test
int
fisubrl
repnz
es
out
loopne
xor
in
lock
jno
scas
int3
fldt
test
andb
fcmovne
fdivp
inc
mov
mov
pop
or
pop
or
or
sbb
jae
lret
inc
sub
sti
mov
movsl
fnsave
test
sbb
fmull
out
pop
inc
fisttpl
jnp
xchg
xchg
ficoms
stos
push
fisttpl
mov
inc
push
xchg
cmpsl
mov
ret
pop
lock
cltd
mov
ficomps
int
add
xchg
lds
ss
sarb
hlt
push
fisttpl
adc
mov
pop
test
lcall
imul
xor
inc
jbe
xchg
lods
cmp
adc
cmp
dec
fstp
daa
inc
fidivrl
add
repnz
add
push
inc
shl
jae
in
sbb
xor
mov
xchg
cmpsb
popa
fldl
enter
rolb
cmp
ret
arpl
inc
ret
and
test
movsl
lods
in
fistl
cmc
negl
shlb
xchg
pushw
mov
and
jle
lods
outsb
lods
sub
inc
mov
mulb
pop
cmp
in
adc
icebp
pusha
int
stos
add
jmp
fnstsw
repz
out
mov
dec
shrl
movsb
push
outsl
iret
fidivl
imul
mov
sub
fstpt
adc
inc
push
scas
or
popa
stc
pop
sbb
iret
shl
inc
pop
cmp
fistpl
js
mov
fistpl
lahf
xchg
xchg
push
sub
mov
clc
mov
mov
and
sub
push
fs
jecxz
fucomi
or
mov
aam
and
sbb
popf
push
jl
fsubrl
lcall
mov
mov
imul
sti
dec
repz
jns
shll
aam
add
add
subl
scas
push
xor
dec
fldt
or
and
mov
insb
cmp
fildl
xlat
rorb
call
push
dec
out
enter
enter
xchg
rcl
mov
outsb
les
insl
and
movsl
in
adc
cmp
nop
jmp
xchg
inc
xor
cmp
add
mov
push
out
pushf
lcall
jne
sbb
add
inc
js
enter
in
or
sarb
arpl
lahf
pinsrw
outsb
jl
pop
rcll
enter
sbb
dec
aas
jecxz
fs
outsl
xor
push
xor
mov
enter
mov
dec
filds
arpl
ljmp
cmpsl
loop
rcr
into
movsl
push
mul
inc
mov
call
sarl
push
jae
jo
jbe
es
rcrb
cmc
loopne
aas
lret
loop
inc
cmp
divb
mov
lret
push
cmp
movsl
stc
push
cmp
daa
xor
mov
mov
xchg
or
sbb
repz
pop
into
scas
fidivl
ljmp
jae
mov
cltd
pop
mov
cmp
inc
lock
mov
or
cmp
sbb
bound
fistl
js
jb
mov
pop
fistl
jnp
xor
add
fisttpl
fists
fucomi
outsl
jp
pop
adc
lods
les
adc
out
dec
fisttpll
pusha
inc
xorb
movsl
cmpb
cmpsl
fistl
fidivrl
pop
or
fcmovu
loope
xchg
out
cmp
add
adc
mov
lcall
inc
fistpl
repnz
fcmovnbe
xchg
xor
dec
jmp
mov
loop
fisttpl
and
sbb
mov
pop
fwait
enter
fs
je
inc
fildl
or
loopne
ja
pop
sbb
lret
dec
lahf
cmp
fldt
je
les
mov
sbb
mov
inc
pop
sub
mov
fldt
shll
fistpl
or
sti
mov
notb
fnsave
shrb
push
call
ficompl
cmp
sbb
jb
pop
fst
xchg
pop
xchg
or
adc
add
add
btc
xor
fwait
cwtl
adc
data16
lret
rorb
lock
daa
clc
inc
in
cli
fistl
sub
add
mov
mov
push
mov
mov
sub
lahf
fildl
jl
pop
and
xchg
call
fwait
pop
mov
sbb
jmp
mov
xchg
fistl
ljmp
test
idivb
cwtl
fucomi
xor
adc
push
fistl
mov
imul
mov
fucomi
add
mov
cs
mov
or
push
das
fildl
xor
adc
popa
gs
pop
iret
cwtl
fildl
in
mov
cmp
fcomp
adc
pop
push
and
in
xchg
jae
push
ret
scas
fcmovnbe
pop
aas
lcall
pop
fisubrs
jno
inc
and
and
push
and
stos
popf
xor
subl
sub
add
fistl
adc
fldt
je
mov
push
pop
ljmp
xor
punpckhdq
mov
cmpsb
je
call
sub
mov
xchg
clc
addr16
ss
and
add
jnp
int
loope
or
push
or
jl
addr16
mov
jns
add
out
jae
loope
mov
xlat
adc
jecxz
dec
and
jp
pop
mov
scas
jmp
iret
mov
push
xor
jne
pop
lds
xor
loop
iret
jp
imul
pop
dec
fildl
cmpsb
repz
add
sti
mov
loopne
xchg
divl
fstpt
insb
pop
lahf
sahf
mov
cmp
xchg
ficompl
sub
jb
jo
fisttpl
int
icebp
adc
mov
fcmovb
xchg
enter
mov
jne
std
iret
jae
fisttpll
jg
leave
pop
mov
mov
or
sub
cmc
push
lods
fstpt
fmul
jnp
push
or
ds
mov
inc
fildl
mov
mov
pusha
sbb
jmp
xchg
inc
cli
inc
cmp
fiaddl
mov
ljmp
cld
dec
out
adc
and
lahf
and
cmp
mov
xlat
jecxz
mov
aad
add
pop
sbb
mov
fistl
lds
loop
and
clc
mov
cmp
cltd
outsb
rcl
mov
frstpm(287
fstpl
xchg
in
adc
pop
mov
sti
adc
mov
movl
test
es
lret
fstp
jecxz
and
fcmovnb
push
mov
mov
adc
dec
test
popa
sub
adcl
fcmovnu
or
sub
movsl
shl
push
cs
imull
test
lret
out
jmp
rcl
fistl
adc
idiv
inc
push
xlat
fwait
cmp
jbe
sti
fndisi(8087
inc
int3
fcompl
and
fidivl
cwtl
add
xor
leave
mov
mov
and
mov
and
dec
push
xchg
insl
fimull
mov
loope
mov
xchg
data16
ss
jle
fstpt
cmpsl
js
fldt
stos
inc
fstp
loopne
inc
ds
and
push
jo
test
inc
dec
daa
je
dec
mov
mov
fisttpl
adc
mov
xor
aaa
stos
fisttpl
adc
fildl
xchg
std
out
fldl2t
fcomi
das
and
adc
inc
cmp
dec
or
fwait
pop
pop
xor
test
pop
and
pop
in
scas
ret
addr16
push
jg
xchg
lock
jno
mov
pop
pop
pop
xor
pop
stc
imul
fidivrl
dec
pop
mov
add
mov
fdivrs
mov
mov
stos
out
scas
or
dec
pop
paddusw
adc
mov
or
mov
mov
fcmovnbe
daa
scas
mov
adc
jecxz
pop
adc
xor
icebp
pop
lret
mov
out
inc
sub
test
jae
adc
pop
icebp
lods
rclb
xchg
lahf
js
rorl
xor
out
shrl
mov
movsl
add
add
sbb
cs
sub
in
pop
jae
fimull
pop
int
loop
rcl
sti
pop
arpl
push
jp
jno
add
cli
mov
mov
jg
cmp
in
sbb
cmc
cld
push
lock
jo
mov
inc
sbb
call
std
dec
fidivrl
dec
fstpl
fisttpl
dec
cmc
mov
loop
pop
xchg
and
sahf
mov
jge
xor
jmp
pusha
push
mov
push
pop
hlt
stc
adc
jg
lret
inc
push
sub
ja
adcb
daa
data16
pop
mov
jl
cmp
fisubrs
hlt
push
stos
pop
lret
rcr
lcall
pop
clc
jo
add
je
fistl
rorb
push
bound
mov
fistpl
push
sub
inc
pop
fbstp
lock
out
stos
scas
sbb
mov
clc
neg
jno
xchg
pop
dec
jp
inc
pop
adc
add
mov
imul
into
mov
lahf
mov
dec
inc
add
mov
sbb
stos
in
int
jmp
ja
xor
push
jp
stos
xchg
xacquire
sub
xor
imul
ss
sti
mov
and
inc
test
lods
je
js
mov
out
mov
pop
jmp
mov
push
pop
inc
mov
das
sbb
pop
fmuls
push
xchg
clc
adc
xchg
pop
sti
cmp
sbb
test
add
fisubrs
loopne
fiaddl
xor
lcall
lods
popl
fsubs
repnz
xor
mov
popf
out
cmp
cmp
movsl
jl
mov
lret
mov
pusha
inc
daa
push
dec
cmp
sub
stos
loopne
jl
pop
mov
dec
pop
and
push
push
fcomi
xchg
cmc
inc
lock
fnstsw
cltd
fnsave
pop
stos
lahf
sbb
ljmp
popa
mov
and
sbb
outsb
dec
pop
push
add
jecxz
nop
pop
daa
sub
cmpsb
in
xor
mov
dec
cli
xchg
lods
ret
jl
cmc
add
incl
lret
add
push
sti
dec
and
iret
daa
cmp
inc
jecxz
mov
in
in
push
insl
cmp
xchg
pop
clc
test
pop
pop
xchg
lods
sbb
data16
out
stos
bound
imul
jo
mov
movsl
js
insl
rcll
pop
stos
ret
in
lret
push
inc
adc
repnz
jbe
inc
clc
sbb
cld
and
cmovb
lret
sbb
sub
pushl
sub
fildll
mov
or
jecxz
fildl
sbb
sbb
rcrl
xlat
stos
dec
and
pop
pusha
inc
adc
filds
cmp
lcall
jmp
inc
mov
pushf
push
outsb
cltd
mov
outsl
das
sbb
push
push
clc
jne
aas
sbb
jle
sub
call
mov
in
xchg
leave
cmp
cmp
sbb
push
outsl
sbb
sbb
hlt
rorl
or
fimuls
dec
and
xchg
push
mov
test
or
fidivl
divb
icebp
scas
and
inc
pop
pop
pop
test
fcmovne
lahf
mov
mov
es
cmp
fcmovnb
pop
dec
cld
std
sub
jmp
lahf
push
loope
dec
fistl
fildll
lock
pop
out
aad
xor
in
es
push
int
mov
xchg
ja
sub
ret
sub
pop
xor
test
mov
lret
adc
cli
pop
outsl
xlat
jge
mov
loope
int
test
fcmovb
loopne
pop
mov
pop
mov
fstl
add
xchg
dec
ss
cli
fldt
cmpsl
icebp
cmp
push
aad
adc
das
fcomp
sub
mov
lods
jbe
xor
sbb
fldt
adc
mov
adc
gs
sbb
mov
push
fildl
fsubs
shlb
push
imul
jp
mov
ret
sti
dec
fistpl
je
mov
adc
mov
and
arpl
pop
mov
js
or
jge
iret
inc
mulb
fistl
adc
jbe
push
jmp
jo
inc
das
aad
dec
arpl
push
mov
dec
nop
in
int3
rcr
adc
outsl
jnp
cmp
mov
xlat
cmp
inc
sbb
sbb
popf
jecxz
adc
jmp
fstpt
shll
mov
xor
push
jne
pop
test
mov
fucomi
js
inc
loope
push
rcr
popa
pushf
hlt
jmp
fisttpl
jle
add
cmp
or
jnp
repnz
fcomip
cmc
xchg
adc
mov
sbb
or
sub
jp
scas
xor
push
movsl
sbb
fldt
mov
shl
push
xchg
lds
bound
fcomip
jo
fs
mov
or
or
int3
pop
cwtl
cmc
push
fcmovnb
call
lret
xchg
je
mov
dec
cmp
inc
fimull
sub
outsb
mov
pop
inc
jb
sub
lods
and
sub
lock
fistpl
lods
popf
or
jb
fs
ljmp
fstpt
add
insb
test
push
fcomi
sbb
rorl
mov
loop
pop
mov
adc
sub
pop
fistl
mov
mov
pop
and
pop
dec
fcmovnu
cmp
pop
and
adc
decl
add
mov
iret
cmp
stc
addr16
lret
adc
cmp
aam
mov
push
cmp
pextrw
jno
cmp
mov
fstpt
push
std
scas
lods
cmpsb
xchg
push
divb
xchg
adc
add
cmp
fwait
pop
fcmovne
jbe
popf
shrl
or
xor
adc
lret
inc
dec
repnz
adc
int3
fldt
cmp
imul
stos
call
flds
aam
cmpl
sub
xor
mov
xchg
fstpt
stc
movsb
aam
test
jbe
fistpl
leave
mov
jmp
pop
popa
mov
loopne
nop
cmp
addl
pushf
xor
daa
fisttpl
push
or
mov
mov
pop
lcall
fucom
xchg
pop
push
fsubs
mov
pusha
popf
cld
rcrl
inc
lcall
orl
mov
mov
arpl
pusha
add
movsb
cmp
xchg
adcb
fistl
push
xor
mov
lock
sub
scas
popf
daa
pusha
inc
dec
ret
push
xor
or
pop
lret
negb
add
test
push
insl
jo
jecxz
ss
jnp
stos
rcl
aad
daa
fistpl
and
std
icebp
xchg
add
sub
imul
pop
idivb
mov
sbb
test
mulb
mov
cwtl
inc
std
sub
adc
jecxz
cmp
ret
iret
mov
pushf
ret
xor
fdivrl
mov
fldt
mov
cmpsl
aad
mov
out
jbe
xor
push
mov
das
sbb
and
inc
sbb
sub
or
xlat
and
push
out
dec
sbb
icebp
lds
push
mov
adc
mov
mov
dec
fwait
cmp
inc
inc
sub
xchg
mulb
jle
sub
mov
ds
add
mov
and
mov
xchg
mul
in
aad
cmpsl
sbb
fcomi
sbb
and
pop
js
ja
inc
fcomps
fidivl
fisttpl
inc
lcall
and
or
call
das
mov
fldt
mov
stos
ss
mov
fistl
jle
and
das
and
mov
neg
insl
inc
pusha
adc
ficomps
hlt
pop
mov
jl
ja
sbb
arpl
fldt
add
aaa
test
test
adc
pop
pop
fcmovnu
xor
outsl
ret
add
adc
mov
pop
adc
mov
sahf
and
xor
into
jae
cmpsb
lret
jl
dec
mov
iret
aam
jge
add
xchg
or
shll
out
test
pop
jmp
push
test
mov
xchg
shl
jae
test
mov
cli
out
sub
or
sub
fldl
push
ljmp
xchg
mov
outsl
inc
sub
jbe
testb
ret
pop
ficomps
pop
inc
xchg
add
mov
cmp
js
aam
xor
loopne
pop
cs
aas
dec
dec
ljmp
addr16
punpcklwd
xchg
cmp
push
arpl
stc
sub
lcall
pop
adc
jg
arpl
jmp
fdivs
and
push
sbb
pop
or
sub
lods
fdivs
xchg
shr
or
aas
fistl
test
daa
popf
std
inc
in
loope
fildl
aas
clc
fcmovb
push
push
jb
pusha
and
mov
loopne
and
mov
test
push
sbb
rcrl
sbb
das
mov
out
xor
mov
repz
add
mov
xchg
js
inc
outsb
fistpl
or
jl
cmp
cmpsl
jnp
xchg
or
mov
cmp
fmulp
mov
cmp
dec
fcmovnu
cmp
call
mov
mov
xchg
inc
push
pop
sbb
pop
jb
or
pop
call
bound
xor
xchg
cmp
into
mov
movsl
leave
les
jne
test
or
push
dec
adc
mov
shlb
cmc
sti
out
jl
xor
or
rcrb
sub
int3
outsb
cmp
or
jbe
je
test
fcmovnb
xchg
leave
in
subb
and
lea
mov
fldt
mov
loopne
inc
fistpl
xor
outsl
push
jne
inc
cmp
loop
mov
mov
push
dec
inc
and
jns
cwtl
fildl
out
fiaddl
mov
fistpl
mov
push
ficoms
mov
stc
clc
and
mov
leave
cmp
push
jbe
or
lret
and
push
scas
lcall
lahf
pop
jbe
lret
cmp
fldt
push
pop
mov
fstpt
xor
sbb
fistpl
test
mov
subl
popa
ficoms
in
sarl
mov
aaa
flds
sub
aad
fstpt
push
nop
fcomip
or
loope
mov
push
fldt
inc
jne
fildl
outsb
iret
mov
stc
add
out
mov
push
jne
ja
lahf
adc
mov
inc
fcomip
arpl
out
sar
xlat
dec
mov
inc
inc
addr16
fldt
mov
jno
mov
xchg
jo
loopne
cmp
add
sub
cmp
lock
jg
loopne
adc
inc
adc
mov
inc
cmp
fistl
cli
jp
jns
pop
call
dec
fnsave
inc
sbb
fcmovnu
xchg
lock
idivl
test
cmp
pop
mov
fcomi
pusha
or
xchg
out
adc
cmc
arpl
cwtl
pop
push
loop
stos
stos
jmp
rol
pop
push
mov
mov
jnp
enter
pop
mov
cmc
in
and
sub
lcall
cmpsl
inc
mov
add
sahf
loopne
push
pop
pop
mov
cmp
icebp
mov
adc
sbbl
cli
inc
xchg
pop
lock
adc
add
and
xor
cmp
sbb
dec
rolb
popa
mov
cltd
aaa
pop
jmp
shl
pop
add
dec
sbb
in
lods
mov
insb
in
fsubl
sub
mov
sbb
jno
fidivrs
inc
jb
sbb
leave
mov
imul
cmc
fistl
mov
mov
fisubl
mov
pop
xchg
adc
loop
and
jp
jne
adc
adc
in
stc
sub
pop
lret
xor
test
fld
sarl
jge
repnz
inc
jp
add
iret
mov
cmc
sbb
lods
xor
add
pop
add
cmpsb
loopne
push
mov
lock
inc
jl
cmp
xor
jp
push
xor
call
push
lods
dec
mov
leave
mov
xor
stos
stc
mov
pop
mov
cmp
aaa
fidivrs
sbb
or
cmp
mov
lods
push
xchg
push
scas
stos
mov
aad
jns
bound
ja
in
cmp
in
popf
lods
xor
repz
pop
cmp
outsb
ret
arpl
dec
cmc
push
cmp
jae
addr16
or
adcb
dec
insl
add
sti
ljmp
inc
sbb
lods
mov
imul
jbe
stos
sub
pop
cmpsl
punpckhdq
sahf
cli
pop
sbb
sbb
push
push
hlt
cmp
je
loopne
cltd
lods
sbb
std
aas
aam
and
hlt
push
stos
sbb
mov
jl
out
sub
or
aad
insb
pop
gs
cld
test
clc
and
ficompl
inc
cmp
adc
stos
xchg
fsubl
fistpll
mov
fadd
shll
xor
fcmovnu
dec
outsl
cld
xor
fldt
loop
mov
fcomp
in
adc
hlt
fucomp
push
inc
add
mov
scas
jle
fisttpl
pop
cmp
push
in
orb
cmp
in
fmuls
int3
divb
mov
fldt
sbb
neg
push
inc
push
adc
adcb
clc
aaa
lods
fdivl
pop
lods
pop
or
int
mov
cmp
mov
adc
or
mov
xchg
movsb
loop
lahf
fstpt
add
dec
pop
daa
inc
iret
jne
shlb
fdivr
inc
out
rcrb
arpl
int
daa
adc
je
mov
inc
adc
into
pop
inc
mov
call
outsb
addr16
pop
add
popf
fs
imulb
out
mov
lds
sbb
sub
scas
imul
fisttpll
lcall
pop
inc
push
push
outsb
ds
push
frstor
fistpl
shl
into
stos
pushl
fimull
imulb
notb
push
xor
cli
pop
push
xchg
mov
repnz
cmpsb
xlat
push
sbb
or
insl
fstpt
imul
xor
inc
out
loopne
fisttpl
lods
xchg
xchg
mov
fistl
mov
inc
es
lahf
cmpsl
push
sbb
push
jo
pop
sub
ds
adc
shrl
or
aam
ffree
push
fildl
jl
xchg
in
data16
es
jecxz
popa
add
mov
lret
adc
or
mov
cmp
lcall
aaa
pop
shrb
lret
xchg
cld
xor
sub
fwait
loopne
pop
dec
incl
sti
sbb
dec
sub
sub
pop
ret
mov
mov
dec
sbb
incl
and
dec
dec
enter
ja
outsb
fisubrl
call
inc
test
jbe
fldt
fmuls
fildl
cmpsb
stc
aam
and
out
out
in
or
loopne
pop
sub
popf
sbb
ret
lret
push
mov
loope
fs
lock
mov
inc
adc
lret
xchg
imul
push
jae
fdivrs
ficoms
test
mov
adc
add
fcmovnbe
sub
das
bound
xchg
jb
lds
fiadds
andb
lret
inc
fcmovnu
pop
fwait
adc
xor
fistl
xchg
xor
fildl
test
jb
adc
adc
fucom
pop
xchg
shr
fldt
mov
popa
sbb
jae
movsl
mov
xchg
jne
mov
inc
jb
mov
gs
enter
test
frstor
lcall
mov
dec
push
mov
mov
addr16
rcll
xchg
mov
fistpl
jbe
sub
ds
arpl
add
push
xor
test
out
clc
stos
sbb
lcall
jne
imul
pop
fcmovnbe
mov
and
push
mov
imul
outsl
inc
and
fldt
pop
nop
sub
push
mov
imul
push
and
lods
sub
push
sbb
jnp
pop
push
adc
adc
inc
push
cmp
imul
and
cmpsb
fcoms
scas
jmp
mov
dec
roll
add
jb
daa
mov
stos
and
jnp
push
lock
sbb
sbb
mov
inc
mov
out
fbstp
aas
lods
test
das
imulb
nop
push
pop
and
dec
shll
fistl
insl
stos
sbb
stc
enter
xlat
xchg
aaa
or
lret
pop
imul
jg
pand
jle
ljmp
push
mov
jl,pn
daa
lahf
xchg
fsubrs
inc
cli
into
movsb
sbb
mov
jg
stos
xlat
dec
aas
pop
mov
mov
jns
frstor
push
sub
test
call
mov
das
idivb
cmpsl
rcr
insl
mov
mulb
shr
mov
jnp
leave
pop
jns
fwait
xchg
stos
fisttpl
push
out
ret
mov
shrl
fildl
push
les
lods
lret
repz
adc
dec
push
daa
outsl
sub
in
cmp
or
xchg
inc
sub
sbb
fldenv
xchg
jae
mov
jl
inc
repz
sbb
lret
dec
fcmovnb
sub
out
rcrb
lock
add
out
sbb
dec
nop
add
std
pop
mov
sub
in
sbb
xchg
xchg
daa
fildl
out
xchg
xchg
es
and
push
jge
fs
or
lods
rcr
xorb
int
sbb
push
mov
jo
ja
inc
inc
xchg
xchg
mov
mov
dec
std
add
or
xor
lahf
mov
sbbl
inc
fcmovnb
movsb
xchg
and
or
sub
inc
pop
int3
mov
lcall
dec
push
lret
mov
frstor
jge
push
inc
cmp
fbstp
xchg
pop
nop
push
and
mov
subl
cli
int
add
fwait
sbb
mov
xchg
xchg
inc
mov
xor
aad
push
dec
add
popa
pop
push
pop
std
inc
sub
imul
cmp
or
push
xchg
lcall
stos
jle
out
push
cmpsl
push
push
outsl
fwait
dec
icebp
fisubrl
push
fisttpl
enter
and
jmp
add
xor
aad
stos
cmp
push
test
orb
and
or
mov
jmp
inc
popl
cmpsl
add
cmp
adc
sbb
jae
push
mov
fistl
insl
imul
sbb
rdmsr
aaa
and
sbb
movsl
rcrl
test
pop
mov
mov
ret
clc
adc
sahf
loopne
movsl
push
int
out
clc
dec
cmp
mov
arpl
and
loope
xor
and
pop
lcall
jbe
and
aad
fidivrl
and
testl
jle
jmp
xchg
es
in
mov
dec
dec
scas
inc
movsl
jo
scas
ja
jecxz
pop
or
fistl
cmpsl
xchg
call
cmp
fisttpl
aas
shll
inc
ss
fists
cmc
nop
add
sbb
cmp
dec
shrb
mov
jmp
mov
call
add
jg
and
ljmp
inc
ret
pop
pop
in
fstpt
int
les
mov
je
fnstenv
xor
in
ja
sti
mov
loope
outsb
les
shrl
leave
aad
icebp
pop
scas
mov
divb
cmp
pop
lea
adc
add
loope
pop
and
fildl
lock
xor
fisttpl
es
cld
les
stos
lahf
into
insb
ja
cmp
jmp
mov
adc
xor
in
lods
scas
mov
adcl
cmp
fstpt
jmp
test
push
cmp
dec
add
fstp
mov
mov
cltd
cli
lods
call
push
fisubl
inc
sub
jae
mov
add
mov
fcomi
jo
adc
js
xor
add
add
rcrl
ficompl
dec
test
mov
aaa
push
scas
mov
xor
push
adc
jns
fidivrl
xor
ret
and
lcall
sbb
test
fistl
mov
pop
sub
lods
adc
rcrb
pop
jecxz
cmp
call
push
jp
sahf
push
faddl
loopne
push
fildll
jns
cmp
or
or
lds
sub
push
jb
rcl
mov
push
and
aam
or
sbb
xchg
dec
out
clc
cmpb
stos
dec
xchg
inc
fucom
imul
pop
lock
xor
pop
fstpt
mov
lret
mov
add
btsl
push
mov
or
pop
das
push
insb
popa
pop
jmp
push
push
sbb
mov
dec
call
out
test
sub
andl
fistl
je
push
push
push
xchg
fldt
jae
inc
mulb
dec
jle
sbb
test
pop
sbb
mov
mov
mov
push
push
xrelease
pop
dec
fisubl
mov
sbbb
stos
push
sbb
fldt
into
iret
push
dec
and
push
nop
pop
sub
lret
adc
cmp
stc
sub
inc
xor
xchg
mov
mov
xor
cwtl
fistl
mov
stos
pusha
fistpl
mov
xor
lahf
lods
mov
scas
jns
les
scas
clc
nop
cwtl
jge
pop
pop
and
movsb
rorl
or
xorb
fists
jmp
add
mov
pop
dec
jg
push
shrb
pop
inc
push
lret
dec
adc
jle
rcll
mov
shl
sbb
insl
add
cmp
fwait
inc
pop
fcmovne
jmp
xor
mov
fstl
dec
cmp
les
and
mov
ret
mov
mov
mov
int
mov
sbb
into
fwait
mov
xor
jmp
insl
idiv
sbb
sbb
jle
xchg
push
pop
jmp
hlt
andl
fnstsw
add
or
cmp
xor
pusha
in
pop
cmpb
test
push
daa
dec
fildl
push
xorb
fistpl
pop
or
movsl
xlat
aas
fcmovnb
cmp
xchg
inc
dec
sahf
repz
je
frstor
lcall
popf
dec
fcompl
xchg
fstpt
packssdw
pushf
gs
push
rcr
daa
mov
sub
add
cmpsl
mov
cmp
in
and
fmulp
fs
push
loopne
xchg
mov
or
dec
fcmovne
jp
or
fsub
mov
pushf
lods
jl
pop
int
arpl
jmp
xor
xor
add
insb
pop
fstpt
aas
mov
inc
loopne
pop
cwtl
data16
fwait
mov
mov
cmpsl
adc
jp
jns
jg
ror
pop
std
add
dec
lock
rorb
lcall
lret
out
daa
cmp
out
mov
fstpt
aad
mov
mov
nop
frstor
test
xor
push
shll
jmp
or
rcrl
add
test
ror
call
mov
sbb
outsb
js
daa
out
int3
push
jmp
add
push
in
pop
or
inc
sbb
mov
rcr
and
mov
inc
mov
sbb
push
test
addr16
push
adc
and
xor
pop
cmp
inc
mov
adc
sbb
stos
mov
outsl
and
fcmovnu
mov
lods
dec
inc
mov
or
pop
add
mov
mulb
dec
xor
sbb
mov
dec
loope
sbb
inc
lahf
cvtdq2ps
push
and
cmpl
jnp
and
mulb
dec
inc
jns
rcr
shlb
sbbl
inc
dec
jns
jno
ja
xor
cli
das
pop
bound
addr16
imulb
xchg
xorb
sbb
jae
jb
adc
jecxz
ss
push
push
pop
mov
inc
lret
mov
pop
or
and
push
or
adc
divl
mov
adc
jnp
fcmovbe
add
sbb
adc
and
xor
ret
pop
sub
jecxz
dec
fistl
movsl
in
test
push
push
xor
aad
dec
push
mov
scas
ret
sbb
js
pop
aam
loopne
jle
popf
lret
add
fisttpl
xchg
add
dec
cmp
in
mov
jge
int3
xchg
and
lea
cltd
into
std
call
adc
push
adc
rcl
adc
scas
fcomps
push
mull
jp
into
fs
in
pop
je
cmp
pop
loop
loope
xor
adc
mov
mov
push
loopne
dec
bound
xchg
push
fstpt
outsl
scas
out
sub
and
jg
negb
and
rcrl
push
imul
cs
fucomi
dec
and
push
arpl
fisttpll
and
arpl
stc
fcomi
popa
push
xchg
xor
ret
fisttpll
fsubrl
sti
adc
pop
adc
lret
inc
out
dec
xchg
and
jb
add
les
pop
ficompl
xchg
mov
mov
rcl
mov
outsb
sarb
pop
dec
sbb
into
mov
sub
push
pop
dec
sbb
test
or
sub
ss
mov
mov
mov
fucomi
push
jae
ds
mov
fisttpl
mov
push
loopne
pop
dec
push
pop
fwait
stos
or
mov
push
xlat
cli
loopne
push
aas
mov
mov
daa
dec
in
frstor
xchg
mov
adcl
sbb
ficompl
dec
lret
jmp
cmc
dec
inc
adc
std
imul
adc
push
stos
cmp
xchg
mov
push
fstp
ljmp
mov
neg
inc
cmp
insl
popa
rol
fldt
add
ret
jns
jl
inc
scas
push
cmc
dec
push
or
and
das
out
aam
or
call
int3
sbb
add
mov
fistl
cld
inc
lcall
insb
sbb
lds
es
orb
dec
int3
pop
idivb
clc
push
fldt
sti
mov
fldt
cs
cltd
lret
lock
clc
divb
sahf
or
xorl
mov
idiv
sbb
aad
adc
outsl
mov
adc
sbb
or
rcrl
fsts
scas
test
sbbl
mov
or
shrl
push
sbb
fistpl
mov
scas
ds
pop
jbe
fistpl
jnp
stos
fistpl
sbb
call
fwait
outsb
ffree
scas
je
pop
fwait
inc
test
insb
xchg
pop
outsl
fisubrl
xor
rcr
jle
stc
pop
ret
or
sub
xchg
sbb
in
pop
sbb
pop
and
ss
dec
jl
fistl
les
repnz
aaa
fbld
cwtl
sbb
xchg
pop
bound
cmpsb
fistpl
pop
fnstsw
cmc
xchg
sbb
mov
ss
lret
jmp
xor
push
repnz
repnz
push
xchg
in
stos
jb
inc
imull
mov
lahf
dec
xor
lret
jne
clc
in
cld
sti
mov
mov
rcrb
movsb
pop
push
loopne
roll
fwait
lcall
addr16
mov
popf
and
mov
inc
pop
inc
jge
and
cmc
mov
pusha
inc
loopne
in
cltd
cmp
jno
mov
sub
push
sbb
jl
lcall
mov
adc
xorl
jae
dec
dec
cld
test
stos
and
leave
or
jl
lds
or
mov
mov
add
pop
or
mov
addr16
out
cmp
inc
pop
cmp
popa
pop
lds
rol
jmp
repnz
pop
lods
jbe
pop
ss
mov
mov
pop
sbb
cmp
pop
adc
mov
push
and
ljmp
out
call
lods
aas
fcom
cmc
cmp
jo
add
divl
dec
int3
and
push
test
jge
cmp
out
stos
xlat
pop
mov
jb
sbb
xor
pop
sti
mov
test
jae
pop
jmp
push
mov
sub
xor
cli
xor
jcxz
and
cmc
push
je
das
nop
hlt
sti
jp
repz
pushf
sarb
jb
repnz
or
jge
sbbb
sti
adcb
add
imul
dec
cli
ss
sub
jp
fidivrl
das
test
jmp
bnd
and
sub
push
or
rcrb
bnd
cmp
stos
stos
jne
jae
sti
pop
adc
mov
outsb
outsb
pop
push
fucomi
mov
mov
fcomi
pop
xlat
stos
push
popf
jno
lcall
daa
sub
in
lock
sbb
nop
adc
sbb
in
pop
shll
xchg
push
clc
and
cmp
out
jg
mov
push
push
add
out
add
int3
inc
lods
sbb
fists
sub
mov
cli
xor
push
sbbb
repnz
fimull
sti
cmc
mov
push
pop
xchg
xchg
xor
xor
jp
fucom
insl
push
stos
stc
xchg
dec
in
sti
sahf
das
jnp,pn
loopne
ret
jecxz
nop
xor
and
mov
clc
inc
test
inc
mov
jb
movsl
clc
loopne
jns
stc
and
sub
sbb
add
add
shl
rolb
test
push
ja
xchg
lcall
aaa
out
stos
push
das
arpl
dec
test
repnz
les
stos
in
cld
mov
in
insl
leave
fcom
xor
outsb
jg
dec
or
popf
gs
mov
sub
dec
das
ret
outsl
jmp
fs
insl
push
adc
call
mov
mov
xor
enter
sub
movsl
fldt
inc
add
inc
dec
test
shlb
stc
push
sbb
in
pop
sub
aam
movsl
fisttpl
or
data16
call
insb
pop
shl
repz
or
mov
fcmovnb
flds
pop
fstpt
or
push
inc
jae
mov
outsb
ret
enter
test
sbb
fistl
jg
sbb
mull
pop
dec
jp
push
cmp
fucomi
lret
push
sarb
fidivl
jg
pop
div
push
lcall
or
cmpsb
clc
sbb
dec
mov
in
dec
pop
sbb
pushf
sahf
out
inc
push
es
ja
cmpsl
jg
push
mov
imul
int3
xchg
mov
fldt
or
andb
xchg
mov
mov
loop
inc
or
cmp
jle
fistps
loopne
repnz
jle
in
lock
iret
dec
sarl
sbb
or
rcl
xchg
and
pusha
in
inc
dec
push
sub
sbb
inc
out
stos
pop
mov
jo
fidivl
in
and
pop
xchg
ss
xor
or
in
and
addb
mov
mov
repnz
outsb
sarl
mov
insl
out
mov
inc
jl
lcall
inc
adc
in
divb
loop
rcrl
stos
ds
add
dec
mov
into
hlt
jp
out
jp
add
sub
push
lods
sti
push
jp
or
mov
jge
lcall
lret
lret
push
clc
mov
or
mov
pop
in
push
push
adc
lcall
or
out
cmp
sbb
and
div
std
add
fisubrl
lcall
in
jge
aam
lods
js
xchg
dec
into
pop
fistpl
adc
xchg
ret
pop
fidivl
dec
dec
push
inc
push
pusha
and
mov
loop
fsts
fninit
cli
popl
pop
pop
imul
xchg
jae
mov
fildl
cmp
leave
xlat
xchg
in
jo
push
adc
dec
iret
popf
fstpt
mov
outsb
jnp
repz
fdivs
sti
fcmovnu
sahf
mov
scas
int3
fcmovnu
mov
lahf
aaa
ret
out
jnp
jmp
insl
jo
in
lods
sub
fcomp
fiaddl
jo
negb
cli
ljmp
icebp
sbb
out
in
pushf
sbb
fistpl
pop
cmp
push
xor
mov
fisubrl
daa
mov
loop
xchg
insl
lcall
fistl
adc
fs
inc
sub
sub
sub
xchg
pop
dec
roll
jg
in
ret
mov
loop
ja
repnz
shlb
test
lods
mov
or
fneni(8087
sub
cld
sbb
jecxz
jne
jb,pn
adc
sbb
pop
andb
out
lea
std
sbb
jp
lds
inc
inc
sub
call
aam
js
sbb
adc
add
mov
push
sbb
sbbb
ss
mov
loopne
or
jno
aad
hlt
repz
pop
data16
sbb
fistps
in
mov
insb
das
xchg
sbb
adc
inc
fistl
cli
ljmp
xchg
fildl
jecxz
xchg
fistpl
shlb
cmp
cli
fisttpl
loop
inc
fisttpl
aaa
push
pop
repnz
xor
cmp
adc
cltd
jne
push
add
test
insb
ja
fninit
pop
or
ljmp
enter
add
sbb
ss
pop
cwtl
and
xchg
aam
sub
scas
xor
out
rcl
xchg
fistl
push
or
nop
or
mov
rcll
mov
push
icebp
push
call
or
popf
fcmovnb
enter
pop
aas
pushf
fcmovnu
dec
mov
sbb
sbb
sbb
loope
fwait
cmp
fucomi
mov
jp
int3
push
adc
pop
rcl
loope
xchg
mov
pop
mov
hlt
fwait
loopne
fildl
shl
fstpt
mov
mov
stos
cwtl
fcmovnu
jns
lods
cli
fistl
idiv
sbb
clc
mov
sub
push
push
fisttps
divb
xchg
enter
push
adc
fisttpl
movsb
sbb
fldt
jmp
pop
aam
jge
fdivl
loopne
sub
add
add
dec
fildl
fcmovu
lahf
mov
xchg
sbb
mov
repnz
adc
jle
sub
mov
push
xchg
ror
std
lock
scas
mov
clc
jl
cmpsb
lret
adc
aas
sbb
inc
xchg
rorl
bound
aaa
adc
ret
push
ficompl
xchg
nop
push
pusha
call
sti
pop
push
jg
push
fwait
xchg
test
je
xor
les
adc
push
pop
mov
mov
test
and
ret
popf
xchg
mov
ret
or
cli
arpl
jmp
inc
sbb
inc
mov
and
jle
cltd
insb
push
in
idivl
sbb
xor
jmp
in
hlt
push
sbb
call
mov
es
fwait
out
fdivrl
adc
mov
xor
sub
fcmovnbe
jecxz
fistps
scas
mov
repnz
test
iret
fwait
jo
hlt
loopne
adc
test
adc
ds
adc
clc
int
sbb
ror
sub
mov
dec
add
adc
loopne
out
xchg
fcmovnb
cmpsb
ret
fcmovnbe
mov
aad
sbb
pusha
ss
cmpsl
jne
fisttpl
xlat
push
fcompl
fildl
testl
fildl
jecxz
sub
mov
cmp
popf
cmpsl
push
loopne
adc
cwtl
xor
sub
pop
cmp
or
sbb
and
fbstp
sbb
shll
adc
stc
outsb
fcmovnbe
lods
mov
outsl
push
and
bound
div
outsb
fistpl
and
sbb
scas
adc
add
loope
stos
std
cmpsl
fadd
mov
jo
jne
xchg
jno
fst
setl
add
ficomps
and
xor
ja
mov
mov
cmpsl
pop
popf
fistl
outsb
gs
call
in
hlt
fdivr
clc
repz
pop
lcall
mov
dec
mov
test
sbb
popa
fistpl
jg
fstpt
fmull
negb
pop
push
ss
xor
mov
jnp
icebp
pop
popa
jp
cmp
lcall
cwtl
pop
jne
movsb
clc
ja
cmpl
clc
icebp
and
mov
jnp
mov
cmp
mov
gs
and
scas
adc
xlat
stos
xchg
mov
ss
xchg
aaa
clc
movsb
rcrb
imul
fisttpl
in
stos
mov
pop
mov
in
sbb
push
and
mov
mov
icebp
in
movsl
hlt
enter
subb
das
push
inc
pusha
imul
cmp
mov
fcmovnbe
and
fdivrp
sub
mov
xchg
pop
mov
jnp
mov
and
add
lcall
in
pop
loopne
clc
gs
pop
int
leave
les
and
in
lcall
rorl
mov
jo
mov
imulb
insb
stc
adc
mov
filds
xor
insb
jb
cmpsl
and
push
dec
icebp
sub
jnp
dec
stos
sti
jo
ljmp
es
jl
fucomi
clc
inc
lahf
mov
in
pop
or
outsb
shlb
mov
inc
or
mov
sub
adc
sub
xor
jg
add
cmpsl
and
pop
jno
sub
shll
notb
addb
sbb
scas
xchg
fbstp
lock
pop
cmc
ljmp
push
rcr
mov
inc
movsl
pushf
fistpl
dec
inc
imul
insl
gs
or
mov
push
dec
pop
mov
and
fcmove
insb
div
in
jge
fildl
xor
mov
dec
rclb
pop
lock
lret
fistpl
add
shll
jbe
fldt
imul
rcr
pushf
sub
std
shll
je
mov
inc
ja
fstpt
aam
xlat
sub
pop
jmp
lds
sub
fstpl
cmp
pop
sbb
mov
adc
in
pop
xor
lcall
sbb
pop
cmc
adc
sub
stc
cld
xlat
xchg
popa
out
mov
dec
fsubr
fisttpl
jmp
adc
outsl
fildl
xchg
push
mov
cmpsl
sti
inc
repnz
fstl
mov
icebp
cli
out
ret
mov
and
frstor
jg
sbb
xor
int
sbb
pand
enter
std
testb
int3
xchg
out
dec
notl
rorb
xor
ja
scas
inc
fistpll
xchg
push
mov
sahf
inc
xchg
jle
dec
das
dec
rcrb
shll
xor
mov
cmp
lods
jo
dec
fcmovnbe
popf
test
pusha
dec
in
xchg
xchg
cltd
flds
mov
popa
push
lret
fcmove
in
cmp
imul
inc
pop
and
push
jo,pn
mov
fistpl
mov
xorb
sbb
adc
mov
mov
dec
push
xchg
xor
lret
and
rcr
cs
test
fimuls
and
or
enter
mov
aas
rcrl
je
xor
data16
icebp
xlat
pop
push
fldt
sbb
mov
dec
mov
cli
lods
inc
call
dec
outsb
mov
adc
pop
push
pop
pop
and
mov
repnz
arpl
loopne
fstpt
imul
xor
push
cmc
fcmovbe
pushf
loopne
clc
mov
loopne
in
jecxz
fnstenv
movsb
call
lret
popa
pop
shlb
mov
imulb
mov
cmp
jl
and
lock
into
jle
inc
addb
movsb
xor
jp
in
adc
lcall
mul
inc
outsb
repz
pop
fnstenv
dec
insb
shlb
lcall
pushf
fstp
pop
sub
jns
mov
mov
cs
out
test
sbb
fwait
outsl
mov
xor
dec
ja
aaa
mov
add
mov
inc
repnz
xchg
xchg
pop
stos
and
cli
lods
xor
inc
lods
xchg
mov
dec
pop
ljmp
pop
icebp
mov
sti
sub
in
pop
pop
or
xchg
popa
bound
das
stos
sbb
or
sbb
or
push
xchg
sub
jg
fldl
xchg
lods
jecxz
push
inc
lcall
imul
movl
and
loop
test
sbb
fisttps
mov
or
adc
aas
lret
lret
imul
inc
imul
sbb
clc
or
pop
bnd
pop
js
inc
pop
rcrl
xlat
jl
sub
xor
scas
pop
out
das
sub
adcb
xor
jl
xor
fmulp
stc
push
add
push
mov
test
or
cld
hlt
ljmp
xchg
nop
stos
loope
dec
stos
push
sahf
mov
inc
mov
clc
xchg
push
aas
out
cmpsb
dec
test
fistpll
push
popf
inc
lcall
mov
in
inc
mov
xchg
and
or
js
das
pusha
ja
pop
out
lcall
add
hlt
sub
sub
pop
sub
adc
jg
mov
sbb
fistpll
dec
lods
jne
fstpl
lcall
repz
dec
scas
dec
test
inc
cwtl
imul
adc
xchg
or
xchg
outsb
fsubrl
jmp
push
lods
cwtl
mov
aas
mov
sub
jge
add
addr16
inc
movl
lods
pop
push
ds
adc
fiadds
daa
fidivl
dec
jne
repz
push
cmp
adc
sbb
fdivrl
pop
lods
dec
dec
cmp
xchg
mul
mov
in
mov
in
sarb
inc
pop
js
push
pop
arpl
das
aas
cmp
and
xchg
adc
add
add
dec
sbb
cmp
in
jecxz
jmp
adc
shrb
stos
jne
mov
enter
loopne
pop
int
jne
insb
xchg
das
adc
hlt
gs
add
lcall
lcall
shlb
imul
cwtl
push
cwtl
pop
subb
fsubp
jbe
std
mov
xor
jl
sahf
adc
mov
cwtl
add
fstpt
mov
and
cmc
sbb
dec
loop
pop
xorb
push
jge
loop
mov
pop
in
adc
sti
in
inc
pop
jmp
xor
jo
imul
cmp
in
cmp
cmc
mov
dec
pop
and
and
nop
xor
pushw
sbb
addr16
pop
cmp
sbb
cmp
sbb
cwtl
cmp
enter
add
div
ljmp
push
stos
movsb
push
pop
shrb
out
inc
mov
push
inc
jecxz
lods
shl
mov
cmp
imul
fstpt
incl
mov
mov
push
mov
leave
jnp
popa
mov
mov
jns
mov
decl
icebp
insb
aas
pop
sbb
and
dec
data16
lcall
pop
imul
pop
mov
inc
cli
stos
inc
popf
and
sbb
inc
fiaddl
clc
ljmp
ja
out
jno
add
clc
sbb
or
fidivrl
and
in
inc
push
xchg
es
test
cmp
fldenv
xchg
cmp
jl
and
and
adc
sbb
cli
inc
adc
dec
cmp
icebp
xchg
ljmp
lahf
xor
pop
xor
rolb
paddw
sbb
add
iret
push
inc
jmp
add
test
cli
jae
add
sbbl
in
sahf
in
mov
push
push
repnz
push
and
stos
mov
push
mov
negb
dec
outsb
mov
mov
popf
lret
repz
sbbb
jp
inc
je
adc
sbb
jb
inc
das
inc
mov
add
fmul
push
fldt
lods
mov
mov
fucomi
add
sbb
test
mov
or
push
call
cmc
jp
cmp
jecxz
inc
ss
mov
push
nop
fsts
push
call
pop
push
fistl
bswap
aad
enter
inc
xchg
inc
xor
jne
adc
clc
push
sbb
sbb
dec
fildl
test
push
xor
xchg
pop
or
or
fcmovne
mov
popf
fists
fcmovnb
and
and
fildl
arpl
iret
sbb
inc
test
add
or
inc
icebp
outsl
imulb
cli
testb
push
xorb
sarb
scas
data16
scas
jle
xor
jg
cmp
dec
adc
cmp
stc
out
outsb
aas
iret
dec
lret
sub
ja
xchg
stos
loope
xchg
shrb
les
sbb
fstpt
push
adc
xchg
lahf
fildll
negl
test
adc
jge
and
fildl
jb
out
mov
ja
mov
pop
dec
lret
sub
sub
adc
mov
xor
and
dec
inc
call
mov
jne
daa
dec
fistl
pusha
mov
pop
fisttpl
pop
add
xor
cmp
push
jl
mov
sub
into
add
fistpl
test
jge
popa
xorl
pop
or
rorl
fucomip
jbe
aaa
push
dec
mov
cmp
ds
mov
dec
mov
xchg
push
push
cmp
cmp
jecxz
dec
jns
fildl
sbb
ret
fldt
das
out
jg
mov
push
inc
inc
or
fistl
jecxz
jae
cwtl
add
dec
pop
fdivrl
mov
cmp
xchg
mov
std
fistl
mov
out
cmpsb
fwait
mov
call
gs
cmp
cli
jl
push
std
mov
xor
dec
push
push
jecxz
fcmovnb
inc
pop
nop
addl
sub
loop
sbb
pop
iret
fwait
mov
loopne
subb
aam
mov
inc
pop
lea
cmp
push
call
aam
icebp
sub
add
dec
dec
jmp
idiv
fldt
and
sub
or
out
out
fcmovnu
mov
int
shll
jl
sbb
aad
fstpt
testb
xor
xchg
fdivrl
push
push
in
fstps
push
in
add
pushf
loopne
int
daa
inc
sbb
sub
add
mov
scas
jns
shll
fcomi
adc
arpl
stc
jno
scas
pusha
mov
dec
fucomi
out
mov
xchg
insl
aad
xor
push
dec
jp
jg
inc
mov
mov
sub
cmp
inc
jle
addl
scas
cmpsb
lods
mov
idiv
sub
jnp
test
outsb
pop
imul
fucomi
hlt
clc
xor
adc
push
icebp
mov
mov
call
fdivrs
arpl
cmc
stos
fs
sbb
insb
sbb
fildl
and
mov
add
xor
fidivs
mov
push
sbb
add
jp
sbb
jecxz
adc
fisttpl
popf
add
loop
pusha
cwtl
adc
lret
xchg
pop
loopne
popa
call
sub
scas
into
out
out
cld
in
mov
inc
xor
lcall
popa
in
fisttpll
and
frstpm(287
xchg
lods
pop
push
imul
int
les
loopne
loope
mov
sbb
fcmovnb
xchg
cwtl
imul
aaa
xor
sbb
mov
sub
clc
sub
dec
mov
lds
ss
fildl
loopne
mov
stos
out
xchg
and
pop
fucomi
push
sbb
sub
leave
pusha
fsubs
dec
nop
pop
call
lcall
je
add
pop
mov
jle
repnz
mov
push
add
in
xchg
sub
incb
adc
cmp
cmp
fistpl
mov
mov
fidivrl
mov
push
and
xchg
fimull
mov
inc
jl
mov
stc
repnz
fistl
in
cwtl
mov
inc
adc
adc
or
das
repz
jns
iret
pop
mov
pop
idiv
insb
lahf
idivb
in
sti
fcmovnb
data16
push
fstpt
xchg
scas
in
fildl
mov
fisubs
outsb
bound
cmp
frstor
repnz
shll
fucomip
pop
sub
test
fucom
jp
and
xor
enter
fs
pop
pusha
mov
push
int3
mov
pop
insl
cli
cmc
mov
rolb
mov
in
into
sbb
movsl
xchg
mov
or
ror
rolb
divb
push
pop
sbb
push
xlat
mov
jg
outsb
icebp
sarb
test
xor
fstpt
adc
stc
fcmovne
mov
outsl
loop
xchg
sahf
xchg
sti
rcl
or
fistl
mov
and
push
fwait
inc
pop
mov
mov
call
and
adc
mov
push
xchg
add
sbb
fucom
aad
xor
mov
or
cwtl
cli
sbb
cmc
xchg
fldt
xor
popf
inc
sbb
dec
inc
xor
fnstenv
jb
ds
and
jle
in
rcll
sub
aaa
cmp
and
mov
mov
or
cld
inc
neg
lods
mov
cmp
lret
fwait
lock
lahf
pop
ljmp
ror
or
adc
movsl
mov
adc
push
outsb
inc
sub
data16
jle
lret
push
adc
shr
mov
fistpl
xchg
loopne
arpl
test
mov
push
jge
jmp
faddl
mov
inc
js
call
fstpt
ja
lret
dec
repz
shlb
pop
call
xor
jmp
sbb
cmp
aaa
jb
and
lods
jp
aad
in
inc
gs
ds
lcall
push
outsb
add
push
xlat
adc
fstp
pop
dec
add
fucomi
imul
xchg
jb
mov
pop
and
loop
pop
in
popa
fsubl
adc
mov
add
mov
push
mov
xchg
sub
ljmp
es
fsts
jecxz
or
jae
ljmp
jmp
mov
adc
fistl
xor
enter
inc
xchg
movsl
push
adc
test
add
in
negb
pop
mov
inc
cs
fistpl
adc
add
mov
in
jo
dec
pop
lock
pop
in
sbb
inc
test
push
popa
lcall
repz
scas
popf
xor
fbld
pop
fwait
shrl
cmp
pop
cmp
cltd
fistl
sbb
push
jae
fcmovnu
push
add
outsl
lods
xor
ret
pop
cmp
jb
jne
cwtl
fwait
out
sub
fstpt
ret
call
iret
clc
test
into
sti
shrl
add
mov
cmpsb
sub
and
sbb
xchg
pop
mov
lcall
imul
psrld
cmp
dec
dec
divl
push
ret
mov
adc
jle
fstpt
ljmp
mov
xchg
arpl
adc
xor
jno
fldt
mov
stc
jecxz
bound
pop
repnz
or
cmp
aas
or
cmpsb
mov
ljmp
loopne
mov
sub
jp
or
movsb
adc
idiv
jmp
outsb
js
ds
xchg
les
lods
and
fldt
ljmp
movsb
sahf
jo
jg
mov
lcall
lret
or
fbstp
rcrb
adc
mov
pusha
fwait
mov
dec
call
mov
imul
fs
jo
loopne
pop
push
xchg
fwait
test
push
je
jp
sub
lcall
jno
push
sub
cmp
jae
fcmovbe
test
out
les
sub
sub
mov
test
cmp
aad
test
sbb
negl
lret
stos
ret
lock
popa
sbb
mov
jg
bnd
fnstsw
jg
icebp
stos
mov
rorb
pop
pop
rolb
xchg
leave
movsl
repnz
mov
cli
cmp
jo
fisubrl
adc
adc
mov
ds
or
nop
jbe
rcl
jecxz
into
fnstsw
mov
xor
pop
fidivl
pop
stos
loope
jb
les
lock
stos
imulb
daa
xchg
mov
inc
inc
ss
add
stc
push
jmp
dec
sar
lret
popl
loopne
stos
leave
dec
les
xor
mov
sti
out
popf
jmp
in
add
cli
mov
jg
test
xchg
sub
sti
mov
xchg
mov
pop
sarl
hlt
sbb
ret
lods
adc
je
push
stos
roll
cmp
cltd
fs
jbe
mov
fadd
in
adc
mov
pop
cld
push
sub
clc
mull
mov
insb
adc
ds
arpl
mov
cmp
fucom
stos
xchg
pop
mov
xor
lea
jge
lcall
lods
jns
xchg
insb
jl
push
outsl
imul
aas
mov
push
xchg
les
fdivl
jb
cmp
mov
add
pop
jo
fstpl
lds
pop
push
push
scas
or
xor
push
pushf
push
mov
adc
mov
adc
inc
ds
mov
es
sub
cmp
int3
cmc
jnp
sbb
lcall
mov
mov
mov
sbb
sub
fimull
push
push
mov
imul
in
pushf
dec
sub
inc
add
push
inc
fisttpl
sub
pop
js
cmpsl
outsb
pop
mov
push
add
aam
ret
out
xchg
xlat
jp
out
mov
xor
es
xor
dec
cs
fmull
dec
gs
fdivl
outsl
mov
movsb
xorl
push
roll
mov
fldt
lahf
adc
sarb
pushf
dec
out
add
and
add
loop
sbb
dec
xor
mov
loopne
jecxz
sbb
mov
inc
fisttpll
fistpl
or
aaa
adc
or
mov
mov
mov
push
fnclex
lods
fidivrl
ret
pop
mov
sbb
dec
into
cld
mull
pop
repz
add
and
add
and
aas
test
imulb
dec
xchg
inc
pushf
ret
xchg
fsubp
in
or
or
mov
mov
mov
cmp
inc
inc
lock
ds
lcall
dec
or
or
loop
fstpt
xchg
mov
push
loopne
notl
adc
inc
fs
jne
jae
dec
testb
pop
pop
add
out
int3
daa
roll
test
int
je
sub
inc
dec
sub
lret
xchg
dec
add
sub
jo
rol
cli
fldl
mov
into
fstpt
rorl
push
fildl
fwait
sbb
outsb
fisttpl
in
mov
scas
jbe
cltd
shl
add
fwait
push
mov
push
fstpt
arpl
aam
in
fcmovne
mov
add
pop
cmp
mov
and
repnz
sub
xchg
insl
jp
push
mov
lock
inc
hlt
sbb
decb
lock
scas
sarb
xchg
sbb
jmp
xor
lahf
mov
cld
enter
xchg
or
movsl
fstpt
push
mov
rcrl
fistpl
cmp
sub
loopne
inc
pop
sahf
imul
fucomi
push
pop
mov
inc
mov
mov
mov
lods
dec
mov
sahf
adc
or
addl
push
inc
sub
pusha
cmp
sbb
loope
inc
out
fwait
in
sbb
jbe
jecxz
jg
fimuls
sbb
sub
jnp
call
pop
daa
rclb
xchg
aas
mov
out
aam
xlat
lret
cli
loop
inc
int3
mov
jg
pop
bound
ret
ja
sub
es
fldt
leave
add
lods
ret
or
inc
dec
in
lahf
dec
fistpl
xchg
jecxz
jl
mov
sti
leave
fistpll
test
shlb
push
jp
incl
cmp
sub
cmc
fbstp
rcr
pop
or
out
adc
pop
fwait
jmp
cmp
push
seta
fildl
test
ss
push
pop
neg
jbe
mov
rep
jg
jnp
lahf
stos
pop
cmp
fistpl
jp
fdivl
cmpsb
add
add
popl
imul
aam
fildl
lret
lods
mov
sar
repnz
movsl
or
mov
dec
incb
add
popf
clc
pusha
xchg
mov
push
fistpl
and
sub
fcmove
dec
xor
testl
and
ret
push
inc
push
inc
loopne
ffreep
and
mov
loope
enter
clc
jge
int
sbb
sbb
dec
imul
sbbl
in
call
add
and
sub
in
scas
dec
xchg
lret
pop
fucomi
cltd
adc
sahf
insl
push
and
mov
ds
fcmovnbe
cld
jle
sub
or
xchg
adcl
xchg
rcr
jg
loopne
dec
test
clc
in
sti
aaa
inc
fwait
outsl
loop
add
dec
adc
jge
arpl
aam
cmpl
add
sti
data16
jnp
mov
pop
fcmovbe
mov
test
or
test
test
and
push
mov
sub
in
add
push
out
fisttpl
notb
fistpl
pop
adc
aaa
pop
xchg
out
jge
and
cmp
fcmovnu
jno
addr16
loope
movsl
clc
mov
sbb
cmp
pop
clc
iret
fistpll
jmp
sbb
lcall
ss
xor
pop
fnclex
aam
bound
xchg
or
hlt
adc
js
xor
xchg
notl
mov
std
sti
push
sub
out
cmp
sbb
jae
es
dec
fcoml
iret
xlat
lds
insb
loopne
dec
arpl
ret
cmpsl
outsl
mov
jmp
js
sbb
fistl
aaa
test
fcmovne
movsb
idivw
sub
mov
add
test
call
movsb
cmp
mov
mov
into
mov
and
stos
mull
sbb
loop
jp
inc
fisttpl
inc
xlat
mov
dec
add
out
pop
inc
leave
jmp
daa
movsb
jge
sahf
aad
add
mov
sbb
sub
mov
dec
adc
dec
fs
imul
mov
mov
pop
pop
mov
add
inc
pop
rcll
out
adc
sbb
cmpsb
push
and
stos
lock
adc
outsl
in
pop
pop
es
fiaddl
xor
lret
dec
aam
dec
mov
fstpt
xor
push
sbb
inc
pop
sub
mov
sbb
mov
pop
and
fstpt
lret
mov
adc
call
mov
dec
sarl
add
test
sbb
and
xor
call
bound
jg
or
pop
mov
mov
das
or
out
frstor
in
ret
or
adc
or
mov
loopne
and
and
xchg
inc
xor
sbb
fstpt
mov
and
sbb
mov
mov
jb
jnp
or
mov
mov
pop
add
adc
xlat
cld
fstpl
sbbl
repnz
pop
mov
xor
xchg
loopne
mov
and
lock
pop
mov
add
fisttpl
bound
fisttpll
sub
out
jmp
loopne
or
dec
dec
outsl
mov
popf
test
jno
or
fmul
scas
fnsave
or
in
leave
stc
xorl
stos
mov
lret
fmulp
lahf
fildl
pop
sub
mov
push
cmp
xchg
test
push
fisubl
aas
fisttpl
das
lcall
xchg
sbb
push
xchg
and
dec
adc
push
add
test
add
push
outsl
movsb
cmc
fstpt
xor
fisttpl
out
loop
xchg
rcrl
fstl
ret
mov
dec
inc
decl
fisubrl
push
rcrl
loopne,pt
repz
mov
test
cmpsl
pop
sbb
imul
mov
mov
jno
cmp
push
jo
jae
test
es
push
pop
fists
dec
mov
or
add
xchg
inc
icebp
inc
in
mov
jle
mov
data16
fwait
mov
aaa
jbe
arpl
das
pop
sahf
adc
ds
fcmovnbe
rcrb
jae
and
lahf
mov
and
shlb
xchg
and
nop
and
sub
ljmp
push
mov
repz
xchg
and
cmpsl
pop
lock
fcomip
into
mov
pop
add
fs
pop
movsb
ljmp
addr16
xor
scas
and
out
fisubl
call
jb
imul
stos
mov
pop
push
fstpl
lods
outsb
test
mov
mov
jl
pop
or
adc
pop
scas
dec
xchg
or
out
addl
pop
idivb
dec
notl
fdivr
push
fcoms
and
int
subb
add
divl
pop
aad
inc
sti
inc
cmp
movsl
outsl
sub
push
dec
xor
out
inc
cmc
in
ss
pop
hlt
cmp
mov
mov
mov
and
xchg
imul
test
xor
outsl
sbb
sub
jp
repz
inc
mov
bound
lret
push
icebp
push
inc
ret
sub
adc
sub
sub
stos
sub
cwtl
fwait
ljmp
xor
stos
jns
jb
fists
xor
js
imul
icebp
and
jno
dec
test
out
pushf
out
jnp
add
test
jbe
sbb
lods
cmp
psubb
pop
xchg
sti
add
testb
dec
dec
mov
cld
fs
inc
fcomps
test
mov
sub
or
loop
fidivrl
push
call
jmp
out
in
jae
lcall
mov
cmp
xchg
mov
mov
sarb
sti
xchg
adc
mov
aas
push
cmp
and
je
orl
adc
enter
xchg
fdivrl
push
adc
cli
adc
test
or
in
std
push
std
sbb
test
adc
or
scas
adc
fistpll
xchg
xchg
fildll
shll
cmp
and
ret
std
loopne
lods
cmp
and
sti
jae
lahf
dec
adc
movl
cmp
fistpl
cltd
xor
idivb
mov
dec
jbe
rclb
outsl
lock
pop
jg
pop
mov
nop
jp
arpl
ljmp
stc
das
pop
mov
jno
mov
stc
xor
lcall
aad
insb
jmp
mov
cltd
sbbl
les
loope
imul
out
push
adc
and
imul
pusha
fistl
mov
ja
fsubs
into
push
in
rclb
xor
dec
sub
fldt
mov
arpl
shl
popf
sbb
push
das
imul
jns
fildll
mov
push
fstpt
rcll
xchg
daa
xor
xchg
imul
out
mov
stc
movsl
ss
lahf
push
fdivs
std
out
adc
mov
decl
mov
or
insb
repnz
sahf
data16
ds
sub
xchg
ja
jne
fildl
jb
or
scas
fildl
aad
pop
cmp
jge
fcoms
mov
xor
inc
fldt
sahf
jl
js
or
inc
dec
loop
cli
mov
call
sbb
std
das
mov
mov
insl
pop
testl
push
data16
popf
push
jno
adc
cmp
fistpl
add
dec
loop
mov
xor
sti
xchg
test
fildl
loopne
sub
imul
and
negl
dec
xchg
mov
dec
adc
loopne
mov
inc
jnp
leave
in
cmp
fiaddl
mov
pand
adc
add
lahf
jecxz
push
mov
sahf
adc
pushl
sub
into
fndisi(8087
pop
mov
add
push
loopne
in
and
lret
dec
out
fcmovnb
aam
mov
fnsave
addr16
inc
or
or
pop
jp
popf
cs
repz
stc
lods
das
inc
jbe
sbbb
sub
pusha
adc
mov
jecxz
push
dec
pop
int3
adc
mov
inc
inc
mov
ss
fcmovne
adc
ja
lret
int3
call
sbb
pop
notl
mulb
jbe
shll
out
fcomps
pop
jns
xchg
inc
pop
xlat
mov
iret
jp
leave
int
inc
out
adc
sub
mov
sbb
scas
xchg
mov
test
cld
lods
shrl
xchg
sahf
dec
clc
test
jno
mov
lret
fcmovnu
adc
sub
or
sbb
mov
nop
sub
push
sbb
push
shr
fisttpl
lds
pop
inc
push
lret
gs
xor
test
outsb
xor
mov
cwtl
dec
push
mov
sbbl
or
fwait
cltd
ret
pushl
sbb
xor
jecxz
add
popa
test
fcmovnu
jno
sbb
fisttpl
stc
scas
mov
and
jbe
mov
dec
dec
lcall
loopne
fcoml
jne
fldl
mov
clc
sbb
fstps
xchg
sbb
fstpt
ss
pop
sub
fdivr
cwtl
push
mov
add
ljmp
hlt
cmp
and
ret
out
inc
mov
push
push
cs
inc
mov
data16
sbb
enter
dec
not
sahf
fistpl
cmp
and
pop
jl
cmpl
aam
adc
push
sarb
test
ret
ret
stos
shl
add
dec
push
mov
pop
mov
enter
jl
fstpt
clc
and
cmp
out
sahf
mov
fistpl
cmp
aas
cmp
xor
ja
sbb
fwait
cltd
jmp
ds
xchg
cmc
movsb
fstpt
jg
cmpsb
fisttpll
push
mov
xchg
fisttpl
and
aad
fldt
push
and
sub
jmp
in
xorl
fwait
leave
jle
or
fucomi
inc
xchg
clc
and
in
lock
mov
inc
xchg
mov
imul
fnstsw
sub
and
sti
cwtl
mov
dec
out
adc
mov
push
fistpl
sub
xchg
adc
cmp
loope
sti
rcll
mov
in
stc
call
jp
add
dec
adc
fdivr
sti
mov
fistpl
dec
adc
fldt
gs
mov
dec
and
aam
leave
and
mov
mov
popf
xchg
fisttpl
pop
or
rclb
daa
cwtl
mov
fists
in
inc
jne
pop
ss
lret
call
ficomps
jbe
jno
xorl
lods
ficoml
pop
je
dec
divb
test
mov
push
pop
aam
fwait
mov
push
mov
cmp
aaa
mov
pop
jae
or
aam
fstpl
test
mov
inc
cmp
sbb
decl
push
mov
or
mov
in
pop
mov
fistl
emms
push
or
mov
jl
mov
int3
lock
xlat
gs
xor
iret
jns
aas
sti
push
nop
fistpll
mov
mov
xchg
cmp
mov
leave
int3
les
sub
outsb
fistl
inc
pop
iret
jb
sub
lret
cmpsb
mov
and
aam
cld
jg
sbb
es
fnsave
jmp
inc
in
subb
in
and
std
fcmovnb
cmp
movsb
push
lcall
push
leave
fistl
jecxz
jg
std
mov
pop
inc
cmp
sarl
aad
in
push
lock
enter
clc
xchg
jmp
fiadds
shr
xchg
lcall
xor
inc
add
icebp
fisttpl
sub
and
adc
mov
in
cmp
mov
fildl
jle
movsl
and
push
pop
lret
pop
sub
add
pop
insl
push
jne
roll
test
push
add
popa
jle
iret
add
rcr
lcall
daa
fstpt
movsb
aaa
fwait
lret
repz
insb
pop
popa
lret
mov
sbb
sub
mov
in
mov
lods
dec
shrl
sbb
or
push
call
in
subb
jmp
in
mov
mov
faddl
mov
adc
pop
call
pop
iret
and
imul
inc
mov
dec
stc
andl
jnp
icebp
cmp
push
push
pop
ss
sbb
add
adc
mov
or
or
jb
add
inc
gs
mov
pop
dec
repz
inc
push
sub
cmp
ja
or
lock
pop
dec
dec
inc
adc
jmp
adc
stos
notb
mov
inc
mov
imul
insl
pop
fldt
jno
sbb
fistpl
sub
jg
push
pop
add
ja
cmp
pop
jge
cltd
ficoml
ss
pop
test
pop
mov
stc
movsb
repz
movsl
stos
sbb
cmpsl
dec
and
push
add
lret
xor
jo
push
scas
push
fucomi
sbb
ss
jns
shrl
cmpsb
dec
ja
or
loop
fwait
dec
push
inc
push
fdivs
xor
out
push
mov
mov
loop
cmp
lcall
daa
leave
pop
fcmovnbe
addr16
push
es
sarl
xlat
adc
clc
jp
fwait
popf
push
xor
repz
mov
push
iret
int3
fisubl
dec
insl
ss
and
mov
shll
fcomi
sub
inc
es
sti
out
push
clc
ljmp
adc
mov
popf
ret
call
pusha
lcall
aaa
adc
or
cmpl
mov
out
mov
lock
mov
das
icebp
sub
lret
ja
test
ficompl
jbe
sub
test
sbb
cmp
scas
aam
insb
incl
push
xcrypt-cfb
mov
sub
shll
fldt
cltd
cmp
pop
movsb
ret
sbb
fcmovnb
mov
fxtract
adc
jns
push
out
mov
std
in
clc
mov
fisttpll
fxch
sbb
stos
call
test
or
mov
aaa
lea
aaa
test
mov
jle
loopne
cmp
pop
and
or
lret
rcrb
aad
push
jnp
repz
push
test
aas
cmp
or
sbb
sbb
mov
jnp
daa
add
insb
adc
std
fistl
out
aad
push
sti
imul
push
mov
push
nop
lea
or
cvtpi2ps
jmp
testl
xchg
or
mov
mov
adc
adc
out
stos
into
mov
pop
mov
sub
stos
out
stos
mov
dec
negb
adc
push
fdivrs
mov
imul
sahf
out
cmp
testl
imul
mov
push
repnz
imul
xchg
adc
adc
mov
xchg
push
lcall
imul
out
adc
xor
lock
rcll
stos
int3
jae
mov
dec
fwait
imul
and
out
insb
mov
cwtl
add
sbb
sbb
adc
icebp
adc
pushf
out
daa
pop
bound
add
and
faddp
in
xchg
fcomi
pop
cmpsb
add
dec
sub
ss
arpl
dec
repz
adc
das
sub
or
insb
std
lock
fidivrs
ror
xor
xor
pop
mov
les
lcall
imulb
xchg
pop
movsb
arpl
in
idivl
and
repnz
cmp
mov
cli
push
add
out
lods
mov
jb
ljmp
sub
lods
mov
call
stos
cmpsl
cmp
insl
push
out
std
mov
sbb
sbb
jmp
jl
push
leave
mov
jg
sub
push
test
xor
adc
imul
and
push
pop
push
ja
pop
xor
mov
shrl
dec
add
decl
and
dec
test
xchg
xor
cmp
or
jbe
dec
mov
icebp
in
jmp
stos
sub
lock
push
jge
pop
lcall
outsl
pusha
mov
sbb
icebp
adc
sbb
ret
sarl
mov
push
lods
jg
and
xor
ljmp
nop
mov
and
xor
push
lahf
or
cmpsb
sbb
insb
mov
addb
aad
fdiv
push
jmp
ljmp
stos
mov
jbe
out
sub
jl
and
mov
orb
push
xlat
cmp
ss
lds
and
lods
inc
repz
xchg
sub
movl
sbb
pop
jbe
cmp
push
inc
jp
mov
aaa
push
stc
popf
sbb
stos
decl
in
loop
adcl
test
jp
aas
lcall
std
cld
popf
mov
sub
jle
cwtl
jp
in
xor
xlat
stc
dec
and
xchg
mov
loopne
mov
pop
int
aas
adc
sbb
jecxz
out
hlt
jnp
insb
inc
fstpl
push
aad
mov
or
inc
scas
cs
repz
sahf
push
leave
orb
in
adc
popa
cmp
test
or
jnp
bnd
fmul
jg
hlt
pop
push
add
push
movsl
and
sub
in
ljmp
popa
fdivrp
xchg
push
pop
xchg
sahf
out
nop
mov
stos
xchg
and
popa
lods
or
mov
leave
sahf
adc
test
pusha
roll
fisttps
sbb
or
cwtl
imul
xchg
roll
adc
out
aaa
and
daa
sub
jmp
push
jge
and
add
push
ficompl
repnz
mov
push
mov
sbb
in
push
popa
scas
stos
mov
fucomip
stos
ret
insl
addr16
icebp
daa
rcl
in
add
outsb
jle
inc
cmp
cs
dec
out
add
add
daa
dec
dec
stos
mov
hlt
xchg
sbb
sub
jl
mov
or
jbe
divl
out
mov
es
mov
add
or
inc
pop
jb
xchg
push
dec
call
xchg
xlat
in
fbld
xorb
call
sub
in
cmc
mov
cmpsl
xor
rcrl
orb
clc
cmp
cli
adc
divb
loop
lods
movsb
pop
popa
dec
sti
cmp
pop
stos
cltd
or
and
lcall
and
xchg
lahf
leave
aad
gs
ljmp
sti
jnp
fiadds
ljmp
adc
out
cmpsl
sbb
sub
cmovbe
out
insb
in
je
out
fiadds
fstpt
enter
mov
mov
sub
stos
rcr
push
sub
xor
cmc
ja
push
mov
movsl
sub
loopne
jge
into
cmp
scas
cmpsb
sbb
sti
pushf
push
or
or
dec
add
push
repnz
fnstenv
pop
cmp
lods
shll
pop
push
cmp
call
jnp
loopne
dec
add
cmp
fcmovnb
sub
adc
and
rep
dec
ljmp
popf
adc
push
sar
cmp
jbe
mov
loop
fcmovbe
add
in
push
push
les
dec
addl
movsl
pop
stos
pusha
sbb
ds
fiaddl
lods
cmp
imul
lcall
lret
cltd
out
xchg
es
insl
inc
push
fbld
jle
sarl
cmp
mov
sub
dec
mov
clc
fsub
inc
xlat
stos
loop
lahf
sarb
out
sahf
les
lret
mov
mov
sub
cmp
outsb
adc
lods
cld
adc
add
and
clc
pop
push
in
cli
test
stos
inc
lret
mov
cmp
icebp
mov
dec
call
xchg
lahf
dec
jne
inc
adc
mov
clc
std
adc
jp
repnz
lods
data16
nop
pop
mov
sub
stc
gs
mov
sbb
mov
jmp
and
test
sbb
push
icebp
out
roll
filds
fsubp
jmp
loop
sbb
js
imul
cmpb
sbb
pop
stc
add
or
and
sbb
xor
or
stos
lret
or
push
fs
dec
push
jb
loopne
or
adc
push
xchg
push
orb
test
jge
mov
mov
pop
cmc
jmp
add
lcall
test
add
imull
or
jle
icebp
daa
mov
insb
cli
addr16
pop
add
dec
test
add
pushf
pop
sbb
sub
inc
xchg
mov
in
daa
lds
out
push
mov
mov
hlt
mov
arpl
dec
jg
mov
mov
lahf
mov
stos
xor
pusha
pushf
xor
call
or
jle
mov
xchg
cmp
movsl
xchg
cmp
ljmp
icebp
pop
cmpsl
mov
and
mov
push
out
pop
push
pop
mov
out
stos
xchg
jns
jb
std
insb
test
mov
loop
fwait
and
arpl
pop
inc
or
and
loopw
jb
pop
loop
lods
out
xchg
add
adc
inc
xchg
pop
les
inc
jp
add
push
mov
or
loop
jns
aad
repnz
imul
stos
pop
dec
dec
out
stos
mov
inc
or
cmc
pop
cwtl
xor
out
lds
add
pop
test
cwtl
iret
jecxz
jl
inc
push
loop
lahf
adc
mov
sti
stos
adc
int3
xor
addr16
pop
adc
aas
sub
icebp
rcll
mov
popa
fisubl
inc
aas
mov
sti
cmpsb
jno
dec
xor
dec
lods
divl
sti
aas
mov
stos
cmp
adcl
sti
adc
or
fstps
in
adc
ja
and
jnp
fwait
push
mov
lods
cli
pushf
inc
jbe
jmp
sbb
std
lcall
popf
fisubs
cmp
and
imul
and
mov
es
cli
rorb
jmp
ret
jns
dec
or
mov
lahf
call
inc
add
ljmp
fldl
ja
sbb
or
cmpsb
jb
mov
sbb
rclb
inc
cmpsl
loop
push
cmp
nop
call
aad
fstpl
jge
ss
mov
or
fcmovnu
loopne
mov
pop
outsl
cmpl
adc
push
repz
push
jno
push
ljmp
shl
and
xor
mov
cmp
xchg
pop
mov
stos
pop
dec
sbb
jne
sbb
mov
arpl
jae
cs
jmp
or
mov
stos
push
clc
enter
jecxz
and
iret
cltd
lea
cmp
push
fstpt
scas
movb
jae
lahf
sbb
stos
ret
out
add
mov
dec
fidivrl
pop
xor
mov
or
fisttpl
sahf
shrl
test
test
pop
mov
lods
js
xor
fildl
faddl
in
int3
rcll
inc
fisubl
popf
fyl2x
sbb
stc
mov
cwtl
movsl
dec
fwait
xor
pop
inc
inc
xchg
mov
xor
cmp
sbb
fidivrl
push
dec
xchg
add
inc
fucomip
fistpl
and
cmp
into
fisubrl
shrb
hlt
jecxz
lods
or
mov
scas
loop
stc
test
lock
mov
ds
xchg
fcomi
das
xchg
push
pop
arpl
mov
fmuls
insl
rcr
popf
mov
push
imul
mov
pop
mov
sbb
imul
orl
and
dec
mov
pop
and
outsl
fists
xor
pop
mov
jg
mov
into
insb
packssdw
sbb
fdivl
test
push
add
push
sub
mov
stos
adc
ret
pop
mov
call
cmp
stc
push
out
iret
mov
fbld
xchg
fwait
mov
movsb
and
cld
or
inc
mov
fcomi
dec
adc
add
jns
cwtl
pop
dec
sbb
mov
inc
fisttpl
outsb
das
adc
aas
ds
dec
push
pop
adc
cmpsb
lcall
fcom
enter
sub
rcr
lret
dec
dec
sub
dec
mov
fidivl
lahf
loopne
mov
das
pop
inc
es
int
adc
xor
dec
rcll
ret
mov
jbe
pop
xor
call
outsl
out
fwait
aas
pop
insb
repz
mov
lods
rolb
sbb
insl
or
dec
cmpl
sub
stos
je
jo
call
add
outsb
aaa
sti
loopne
mov
popf
fwait
orl
test
push
inc
and
fisttpl
fimull
das
mov
jae
mov
jp
dec
movsb
xor
fistpl
cmp
mov
add
xlat
imul
fldt
insl
outsb
jb
out
push
pop
scas
fwait
cmpsl
fucomi
lahf
inc
mov
fneni(8087
sbb
icebp
lcall
and
cli
pop
into
mov
sbb
dec
sub
mov
int
orps
jecxz
cmp
mov
xchg
sub
mov
shll
inc
adc
pop
fcmovne
hlt
mov
shrl
xchg
xor
cmp
mov
or
addr16
bound
fistl
leave
roll
iret
fcmovb
sbb
sub
pop
push
aam
fbld
cwtl
in
adc
es
out
leave
fisubrl
jmp
fcmovnu
cltd
mov
xor
cmp
insb
mov
fisttpl
dec
neg
test
mov
fucomi
adc
outsb
mov
ja
sub
push
pop
dec
rolb
fistl
fwait
ret
fidivl
repz
pop
shrb
push
loop
push
sub
lret
xchg
fiaddl
sub
jo
in
pop
mov
and
pop
lods
or
shlb
lret
push
call
jp
lret
jmp
mov
fdivrl
int
cmp
xchg
out
push
or
xchg
jp
xchg
cmc
or
xor
sbb
js
fildll
pusha
fcomi
xor
rcrb
into
push
sti
cmpsb
or
jnp
leave
cs
aaa
sbb
xchg
push
push
mov
and
mov
lret
xor
adc
xor
or
jb
scas
cwtl
and
fwait
icebp
add
xlat
in
lods
and
cmc
jp
xor
lcall
repz
sbb
jae
mov
xchg
sti
xchg
push
lds
ret
repz
push
lcall
cmp
and
cmp
cmpsb
pop
in
add
fnsave
push
cmp
mov
inc
cmc
jg
xchg
pop
rolb
pop
outsb
or
sbb
std
ror
cltd
inc
loope
pop
sbb
icebp
jmp
pop
adc
xchg
mov
push
cmpsb
mov
shll
and
mov
stos
in
arpl
xchg
popf
add
pushf
and
rcrb
xadd
sbb
fdivp
int
cmp
mov
jb
inc
je
push
fs
mov
sbb
mov
jmp
stos
jns
std
inc
arpl
dec
ficoml
mov
fsubl
xor
inc
lods
or
push
imul
pop
mov
es
aam
test
sbb
xor
sbb
cmpb
lret
lods
mov
into
sbb
stc
sbb
pop
lret
dec
sub
into
out
cmp
loopne
loope
cmp
pandn
lcall
iret
or
stos
push
xor
loop
adc
scas
jmp
cmp
cmp
jp
xor
dec
in
jl
mov
imul
or
xlat
push
jmp
or
in
adc
sbb
inc
sbb
ds
jo
and
add
ljmp
or
movsb
add
add
mov
add
cmp
or
wrmsr
pop
xor
add
mov
pusha
mov
loop
lods
ffree
loop
ret
xor
sbb
inc
fstps
jg
daa
adc
mov
pop
lret
jl
xchg
insb
xor
cmp
pop
xchg
out
mov
cltd
mov
rolb
aaa
ja
and
lcall
pop
pop
adc
ret
fcompl
fcmovbe
test
sub
xor
xor
test
jp,pn
push
int3
out
or
sbb
push
aam
pop
mov
rol
scas
sbbl
mov
movsb
int3
cmp
xchg
scas
jl
mov
daa
scas
inc
jl
jp
sbb
iret
orb
jg
mov
sub
lods
xchg
lods
rcrl
cmp
divb
fimuls
pop
call
inc
imul
sbb
add
in
push
sbb
inc
sbb
out
inc
fistl
push
outsl
les
pand
sub
adc
dec
pop
push
jae
fcomi
cmp
rcll
cmp
fcmovne
cwtl
mov
inc
mov
sti
push
sub
mov
frstor
dec
jg,pt
pop
push
mov
xor
sbb
mov
push
outsl
aad
fisttpl
dec
jno
inc
jp
push
mov
movl
cmp
cmp
push
lcall
mov
rolb
mov
fildl
mov
clc
outsl
mov
pop
paddd
push
fcmovnbe
fnstsw
ret
or
jnp
xor
adc
fstpt
sbb
dec
fldt
jmp
or
mov
pop
fcomi
xchg
mov
into
sub
dec
or
or
mov
push
mov
fcomi
mov
roll
test
mov
and
leave
or
add
xlat
pop
sbbb
fldl
mov
cmp
cs
lods
in
mov
xchg
rolb
jns
sbb
lcall
jns
or
mov
movsb
mov
int
add
int3
pop
xor
fucomip
or
inc
adcl
jb
sub
loopne
test
mov
mov
cmpsb
pop
fistpl
sarb
rclb
lcall
in
aad
insl
out
sbb
jp
mov
test
ds
aad
rcrl
xchg
test
fldt
inc
test
int3
pop
sahf
aad
pop
insb
push
sti
cmc
divb
mov
dec
xchg
fcomi
test
rcr
sti
andb
loopne
jl
jmp
repz
mov
clc
inc
iret
call
add
pop
mov
loop
mov
and
pop
testb
sbb
xor
adc
mov
or
out
jnp
in
dec
sbb
jne
fistpl
dec
mov
cmp
pop
lods
int
dec
add
or
loop
scas
or
mov
xor
fwait
addl
mov
fists
fstpl
mov
movsl
fcmovu
or
cld
jl
scas
xchg
aas
sarb
mov
sbb
inc
xor
fsts
or
fildl
push
push
mov
fsub
mov
cwtl
sub
pusha
sub
sub
ror
ret
pop
mov
and
lods
mov
test
jecxz
lock
call
lds
fcmovnbe
mov
outsl
or
aam
sub
les
sub
and
mov
frstor
xchg
shll
and
testb
lea
xor
cmpsb
addr16
sbb
mov
mov
fcmovu
push
insl
fildl
xchg
ja
and
pop
cmpsl
mov
adc
fisubrl
add
fistpll
fldt
inc
and
arpl
orb
push
or
pop
scas
cmp
into
or
jl
cwtl
imul
shlb
bound
cmp
dec
push
hlt
jno
xchg
mov
repz
xchg
out
arpl
aas
clc
jl
add
fldt
mov
fistpl
cltd
sti
add
test
sbb
mov
cmp
in
sbb
pop
lea
fstpt
jecxz
lcall
rorl
sbb
add
cltd
fildl
sub
push
fs
icebp
test
dec
les
shrb
push
xchg
sub
or
inc
cmp
ret
sub
out
lods
jp
or
out
rcr
mov
out
repnz
fsubs
xlat
cmp
or
or
mov
mov
or
rcll
pop
mov
mov
mov
sub
pop
push
xchg
sti
cmp
lret
stos
data16
jle
mov
fistl
xchg
out
push
ja
push
fst
mov
arpl
fcomi
test
xchg
inc
xor
push
out
sub
fimull
popl
clc
aam
je
pop
outsb
sarb
jae
movsb
loopne
or
subl
movsl
or
xor
mov
fisubrl
fldt
sbb
aaa
xlat
fldt
jecxz
cld
scas
xor
ret
test
pop
fdivs
hlt
xor
xchg
pop
into
arpl
daa
or
cmpsl
sbb
test
mov
jns
loop
cli
add
je
push
fistl
popa
in
pop
xlat
xchg
pushl
cmpsl
mov
fistpl
dec
sbb
out
fwait
push
sub
jo
jne
test
das
sub
xor
cmp
lock
movsb
mov
pop
fistpll
sbb
fistl
mov
std
pop
mov
inc
sub
lods
and
ja
test
jae
ret
iret
repz
jp
xchg
fldl
mov
test
sbb
jbe
xchg
mov
sub
pop
adc
push
stos
push
es
imul
stos
xchg
fcmovnu
jne
popa
jl
add
imul
mov
fdivp
call
push
leave
cltd
jns
cmpb
out
fndisi(8087
xchg
push
scas
fists
inc
fimuls
pop
fisttpl
jmp
push
push
push
sub
push
dec
lods
mov
mov
incb
scas
jnp
mov
lcall
popf
dec
insb
sub
xchg
add
cli
cmpb
jo
stc
jmp
lock
cmpsb
lcall
mov
out
clc
daa
adc
gs
rorb
cmpsl
mov
mov
outsb
push
or
pop
adc
fcoms
jge
mov
mov
lahf
or
popf
jbe
mov
fnsave
jnp
orl
pop
sub
shr
sbb
cmp
mov
inc
inc
fildl
cmpsb
jo
push
sub
ficoml
std
sbb
dec
push
lea
mov
sub
into
jae
int
fucomi
testb
frstpm(287
scas
sarl
fistl
xor
and
dec
or
fldt
xor
fisttpll
xor
add
mov
or
mov
and
pop
lret
push
xchg
out
pop
pop
leave
jne
aad
jbe
ja
gs
push
cmp
inc
mov
ret
mov
sub
rclb
mov
or
in
call
jno
sbb
fcmovne
jae
arpl
cld
sarb
lret
roll
sahf
mov
dec
je
pop
pop
orl
test
pop
cmp
or
in
push
push
xlat
loopne
stos
add
fucomi
popl
repz
outsl
ret
sti
fisttpl
std
cwtl
cmpsb
inc
outsb
insb
xlat
mov
addr16
fs
into
jmp
pop
leave
mov
or
loopne
sub
dec
jge
pop
mov
fldt
icebp
inc
pop
dec
popf
outsb
pop
lret
test
cmp
ficompl
inc
or
sar
xchg
dec
in
pop
es
ficompl
pop
outsl
rcrb
ffree
sub
ret
scas
mov
movsl
fstl
dec
imul
fistl
movsb
daa
fisttpl
int
lods
adc
mov
push
xchg
mov
sbb
sbb
fstpt
add
inc
ja
fildl
push
mov
mov
mov
pop
hlt
cld
adc
fistpl
or
sahf
push
cmc
les
movsb
inc
fldt
sbb
or
xchg
ss
mov
les
frstor
jmp
sbb
imul
push
mov
out
fistpl
leave
sub
fucomi
movsl
push
push
mov
test
xor
mov
fldt
xchg
and
push
int3
inc
xchg
mov
iret
outsb
hlt
cld
jno
fnstcw
and
fisttpl
add
pop
outsb
and
into
idiv
jno
out
fcmovnb
pop
lds
shll
mov
imul
jge
jecxz
in
fimuls
push
bound
xor
push
dec
ja
fstpt
movsl
shlb
outsb
sarl
xchg
cmp
fisttpl
sbb
arpl
int
aam
loop
out
fildl
inc
and
in
enter
ss
xorl
xchg
das
fcmovne
xor
fistl
push
inc
jbe
lock
mov
in
frstor
dec
inc
or
fbstp
push
push
ret
rolb
mov
in
enter
push
mov
push
icebp
inc
arpl
fucomi
fdiv
xlat
enter
sahf
jmp
in
movsb
cld
pop
xchg
sub
inc
cmpl
pop
arpl
jp
aaa
adc
mov
fistl
fsubp
mov
call
loop
leave
fistpl
xchg
cmp
fstps
aad
lret
pop
dec
fucomp
in
dec
nop
add
jno
mov
jb
jg
ss
out
fxch
push
fisttpl
cmp
jae
xchg
jb
mov
les
out
aas
dec
fldt
lods
mov
jb
out
mov
clc
mov
clc
fcomps
fcomi
lahf
pop
adc
xchg
adc
sub
test
cli
scas
sub
inc
dec
or
xchg
les
xchg
bound
std
mov
adc
jae
mov
sbb
fimuls
fcmovnu
pop
aam
add
sub
notb
dec
sbb
hlt
out
dec
lret
and
je
js
sbb
pop
loop
imul
cli
fwait
sbb
xchg
mov
loop
jno
into
mov
jo
fucomp
mov
out
sbb
mov
test
cmp
sub
fldt
icebp
sub
jae
and
cwtl
pop
fldt
divb
and
mov
in
sbb
or
xor
and
pop
pop
xchg
fisubrl
cwtl
mov
mov
icebp
hlt
jp
movb
test
mov
adc
pop
xchg
pop
sub
xor
ss
adc
xchg
or
sbb
inc
mov
pop
fldl
divb
fcmovnbe
inc
or
and
add
filds
call
inc
leave
or
stos
aam
pushf
lods
inc
daa
rorb
movsb
cmc
pop
imul
insl
in
ljmp
sub
sub
addr16
pop
mov
xchg
fldcw
test
inc
or
jmp
jg
icebp
fimull
sbb
cmc
stos
cmpsb
xlat
inc
or
stos
outsb
pusha
fiadds
les
sbb
push
pushf
fcmovu
leave
inc
xchg
inc
ds
mov
call
jae
add
cwtl
dec
pop
inc
sbb
dec
cs
int
loop
sti
fs
repnz
sub
mov
fbstp
pop
or
mov
xchg
in
jb
in
and
icebp
js
imul
call
and
push
adc
in
fs
or
jmp
xchg
ljmp
add
adc
leave
jg
repz
div
or
psrad
xchg
xor
into
in
jl
add
out
lcall
mov
mov
ljmp
jle
xchg
inc
push
imul
mov
and
mov
jl
pop
jbe
out
sub
pop
dec
add
lret
test
xchg
in
xchg
stos
pop
subl
cs
negl
add
repnz
into
int3
mov
jl
stos
jo
push
loop,pt
push
push
mov
bound
mov
adc
rcr
or
sti
lret
xchg
pop
fisttpl
arpl
mov
lcall
call
and
cmp
icebp
in
inc
add
jmp
das
jne
or
fwait
push
add
push
loopne
jge
popf
and
xor
ss
push
iret
fstp
lds
das
lahf
push
lret
inc
clc
jae
mov
xor
out
fsub
dec
add
add
insb
inc
loop
jmp
pop
mov
or
movsl
fisttps
mov
fidivl
outsb
loopne
cmp
mov
and
aam
iret
ficomps
lods
gs
xor
pop
cmp
mov
stos
ljmp
scas
jns
adc
add
int
jo
pusha
sbb
push
lahf
rcr
dec
arpl
mov
xchg
stos
sbb
pop
repz
xchg
lahf
out
fwait
jp
loop
dec
jbe
pushf
cwtl
in
push
mov
test
cmp
or
repnz
xchg
dec
push
aad
mov
stc
mov
and
shrl
or
cmp
icebp
es
push
popf
lods
push
inc
mov
jmp
out
mov
and
pop
scas
daa
or
pop
sub
inc
pop
adc
stos
repnz
test
lahf
leave
outsb
cli
jle
dec
lods
arpl
test
aad
dec
jne
mov
test
pop
add
adc
push
xor
mov
stos
cmp
rcl
and
icebp
sti
fsubrl
mov
sbb
jbe
dec
stc
jecxz
lea
xorb
and
ret
and
pop
or
cmpl
adc
add
inc
mov
pop
and
lea
repnz
push
mov
add
stos
sbb
cmp
push
or
dec
mov
jae
insl
mov
stos
lcall
push
pop
mov
out
bound
jg
lcall
xchg
jl
stos
lret
ss
jno
sub
add
lods
repnz
jmp
ljmp
push
sbb
icebp
insb
loope
ja
cmpsl
xor
aas
clc
icebp
jl
push
loopne
push
clc
in
fdivl
fdivr
mov
mov
in
add
fildll
stos
jo
ret
dec
in
lds
mov
fcmovbe
ficomps
xor
sar
pop
in
xchg
outsb
inc
addr16
push
movsb
or
nop
imul
cmp
leave
sbb
ljmp
imul
push
pop
ja
push
pop
leave
test
push
cmp
pop
les
pop
mov
jo
dec
adc
cs
stos
xchg
jg
push
jae
xchg
add
cmc
push
pop
inc
mov
dec
in
cmpb
jo
pop
sbb
roll
cmp
dec
jbe
sti
dec
push
cs
push
stos
in
shr
es
sbb
sbb
xorl
mov
or
dec
rorb
negl
add
lods
mov
inc
cltd
xor
leave
sub
push
rcl
adc
dec
cwtl
ret
in
push
notl
xor
and
repnz
sub
and
inc
xor
hlt
xchg
stos
test
sbb
jle
lods
into
sub
mov
and
aas
push
or
and
xor
inc
push
jp
lcall
test
lds
fstpl
fisubrs
adc
mov
loop
jle
clc
out
mov
adc
pop
test
fiadds
dec
scas
sbb
jg
lcall
lcall
scas
in
adc
lret
outsl
mov
jmp
jp
loope
test
int
xchg
popf
jg
or
fildll
and
fildll
stos
xor
mov
outsb
sarl
xchg
dec
pusha
add
mov
push
sbb
xor
mov
aad
xor
sbb
sub
cmp
test
xchg
fildl
pop
fldt
sbb
adc
or
shlb
mov
mov
fcmovne
xor
add
in
push
sbb
daa
adc
sbb
jg
cmpsb
fstpt
inc
mov
gs
sub
lea
je
ficompl
out
in
les
xchg
out
push
fstpt
mov
pop
aam
lahf
enter
mov
inc
pop
imull
dec
imul
daa
and
dec
jecxz
lret
cmp
push
into
ret
pop
cmp
mov
pop
or
push
cld
cmp
jle
lahf
pop
arpl
sbb
dec
ss
xchg
aaa
lcall
ds
sub
daa
movsl
sti
fldt
jmp
ret
nop
fildl
inc
mov
ret
xchg
fistl
adc
clc
sbb
push
std
imul
mov
shl
and
pop
jno
sbb
and
sub
inc
mov
adc
insl
sbb
push
fstpt
inc
sub
fcoms
dec
pusha
mov
pop
dec
vmread
and
and
mov
add
dec
mov
cltd
aad
adc
fildl
xlat
test
sub
movsl
mov
mov
mov
sub
ror
pop
mov
mov
out
call
dec
mov
repz
arpl
pushf
add
push
call
popf
iret
jmp
fistpl
mov
jle
icebp
cli
sahf
pop
and
jo
sti
mov
sub
push
mov
push
sub
xor
pop
fwait
icebp
mov
xchg
dec
pop
out
fistl
fsub
cmp
xor
dec
pop
jp
sub
cmpsl
ret
push
mov
imul
es
jge
ss
xchg
scas
fcmovne
clc
and
push
inc
and
aam
add
call
push
pop
mov
test
push
pop
inc
rcr
mov
mov
xchg
fstpl
ret
xchg
fildl
adc
cs
or
filds
mov
fcmove
in
enter
dec
and
sub
js
mov
cmp
hlt
inc
daa
fldt
or
in
adc
push
in
and
test
add
inc
imul
xchg
sub
pop
dec
lds
xchg
or
je
xor
inc
add
adc
mov
pop
scas
xlat
xchg
in
iret
loopne
add
add
aad
cmpsb
test
test
inc
dec
cs
stos
jl
dec
pop
sub
or
in
sub
inc
pusha
cmp
mov
dec
dec
sub
fildll
and
iret
or
sti
push
scas
and
mov
fistpl
inc
sub
fidivrs
jne
and
add
fstpt
loopne
pop
mov
test
aad
pop
aaa
add
xchg
add
fcmovb
cltd
push
push
jb
fistpl
test
fucom
or
mov
rcrl
xor
dec
cmpsl
int3
sbb
adc
push
sbb
mov
pusha
mov
pop
pop
or
xorl
arpl
push
fistpl
push
pop
fildl
insl
leave
mov
sub
pusha
nop
lds
aam
call
xchg
fisubrl
scas
outsb
and
push
into
mov
jne
adc
bound
mov
cmp
push
rcr
fisttpl
mov
adc
enter
repz
jnp
jecxz
mov
push
cmp
mov
push
or
fucomp
sbb
ret
js
inc
dec
cmp
test
fsubrp
and
shl
mov
cmpsl
repnz
mov
fcmovnbe
xor
ret
pop
fstpt
mov
stos
into
jnp
mov
pop
mov
iret
and
sarb
rcr
jns
mov
loop
xchg
push
mov
fimull
insb
mov
adc
sbb
test
fcmovnbe
push
rcrb
mov
jmp
sub
bound
fisttpl
ja
popf
arpl
roll
sbb
dec
xchg
mov
and
clc
or
fstpt
imul
loop
mov
lods
scas
movsl
jbe
in
or
sub
aad
jno
sbb
push
imulb
ficoml
push
inc
inc
test
adc
mov
call
lahf
sbb
mov
testl
cmp
into
fistpll
ljmp
sbb
dec
fildl
xchg
lret
lret
jbe
sub
push
fildl
test
cltd
aam
jp
push
repnz
dec
dec
es
xor
cli
lea
xchg
sub
or
fsts
pop
mov
cli
test
negb
fimull
fwait
mull
mov
aad
adc
add
call
push
mov
fstpt
jne
dec
sbb
fcmovnu
leave
xchg
inc
std
sbbb
fistpl
dec
call
push
into
scas
and
icebp
insl
cmpsl
lcall
sub
mov
aad
pop
ret
icebp
loopne
inc
lods
arpl
mov
cwtl
xchg
out
in
mov
pop
fwait
mov
jmp
push
or
jg
fwait
adc
fs
rorb
imul
call
movsl
fndisi(8087
cwtl
jmp
sub
push
dec
cmp
fisttpl
sub
arpl
test
repz
pop
fldt
push
and
xor
daa
stc
inc
inc
popa
mov
aam
es
mov
imul
cmpsl
adc
or
jl
out
shl
fimull
scas
xchg
call
in
cltd
mov
cmc
pop
ss
testl
ficoml
jg
ja
icebp
fistl
repz
mov
stc
cmp
leave
call
cli
cmp
push
fistpl
push
xorb
data16
rorl
fwait
nop
mov
cmp
out
fildl
push
jo
mov
jno
mov
nop
hlt
lods
xor
mov
mov
or
fisttpll
and
sub
arpl
mov
fwait
sbb
enter
sub
fstpt
mov
or
mov
push
push
sub
ss
aaa
dec
cmpsb
jge
sahf
jne
std
fadds
frstor
jge
jnp
pop
fcmovnbe
les
jecxz
mov
pop
sub
sbb
adc
mov
jb
mov
lods
adc
jmp
pop
ffreep
stos
int3
call
stc
sbb
inc
push
xor
insl
les
jmp
cmp
cmpsb
repz
lahf
sbb
stos
inc
loopne
jae
or
loopne
cld
mov
sub
mov
jns
mov
mov
call
pop
cmpsb
stos
cwtl
rcrl
loopne
xlat
lods
test
lock
fistl
frstor
ret
shlb
xor
test
dec
adc
fsts
loopne
test
sbb
bound
cmpl
popf
pop
cs
or
repnz
loopne
mov
ror
stc
pop
lock
test
hlt
jmp
sub
fstps
hlt
cmc
es
pop
rcrb
sbb
outsb
and
inc
pop
pop
rcr
scas
call
pop
sbb
mov
out
pop
dec
sub
arpl
lret
fistl
inc
add
dec
and
sbb
sbb
fisttpl
into
jns
fcmovnb
sub
ss
or
xchg
xor
lret
or
lret
out
into
xor
loopne
int3
mov
mov
fcmovne
push
mov
adc
xchg
icebp
add
insb
ljmp
fwait
int
mov
dec
dec
loope
mov
inc
add
in
test
ficoms
jb
inc
int
not
mov
mov
lret
push
loope
dec
adc
int
pop
or
in
and
mov
dec
bound
iret
fstp
pop
adc
inc
stos
adc
and
call
and
mov
add
sub
push
imul
js
push
dec
sti
ds
add
or
lahf
mov
jl
sub
imul
lds
cmp
cmp
sbb
jne
push
lods
push
cmp
mov
pop
and
or
cmpsl
jbe
and
jg
pop
clc
addr16
into
out
dec
pop
push
push
imul
mov
inc
pushf
lock
push
gs
sub
repnz
inc
sub
push
mov
cmp
xor
sub
fisttpl
stos
sti
xor
lods
add
jne
rcll
in
cli
inc
jmp
mov
fdivl
jle
aaa
jmp
int
mov
fnstcw
sbb
sub
fldt
sbb
adc
icebp
xor
mov
add
stos
xchg
sbb
mov
in
pop
cmc
std
inc
mov
sbb
mov
lret
ss
out
adc
or
enter
aaa
out
jns
lahf
insb
aas
imulb
leave
lods
xor
fwait
add
push
rcl
pop
fsin
loopne
sub
jle
cmp
cltd
adc
insb
fsubl
dec
inc
cmp
enter
mov
dec
test
arpl
fildl
mov
jecxz
fadd
cmc
shl
jl
xor
push
lods
idivb
flds
loop
pop
adcl
stos
pop
pop
in
lcall
stc
mov
out
cmc
mov
push
pop
mov
or
addr16
popl
das
add
jg
sbb
gs
in
add
mov
push
ret
inc
sbb
push
in
clc
idivl
mov
stos
cmpsl
out
pop
repnz
inc
scas
sub
sub
inc
cmpxchg
fnsave
jne
pushf
dec
add
mov
adc
lcall
sti
cmp
dec
loope
test
ja
scas
loopne
stos
push
push
in
lds
std
and
push
adc
imul
jns
mov
iret
rcrl
pop
lods
cli
mov
inc
jo
mov
sbb
test
cmp
xor
das
pop
imul
pop
pop
mov
lods
leave
pop
into
stos
pop
iret
filds
xor
sti
dec
inc
xchg
push
out
in
imul
sbb
adc
rcll
sub
inc
pop
mov
stc
adc
arpl
or
mov
fidivl
int
push
mov
out
fisttpll
rolb
lods
xchg
movsb
push
push
jl
or
cmp
or
sbb
push
ljmp
jecxz
add
adc
testl
loopne
lods
xchg
pop
lret
adc
mov
lcall
ret
pushf
lods
pop
out
push
fwait
cmp
arpl
outsb
jbe
lahf
mov
add
add
xchg
push
lods
add
sbb
in
jge
stos
mov
xchg
ret
xchg
lret
and
mov
push
clc
in
mov
out
test
mov
lds
stos
xor
fcmovb
pushl
mov
jmp
inc
and
mov
ret
lods
jp
sbb
inc
jbe
adc
sub
pop
xchg
add
adc
ficomps
js
xchg
xchg
cld
stos
pop
mov
jbe
std
movsb
jge
sbb
xchg
jb
pushf
ficoml
shll
repz
pop
in
and
add
in
rorl
ficoml
sarl
out
mov
lcall
lods
fldl
xchg
pop
int
pop
sti
ss
stos
adcl
mov
cmpsb
stos
movsb
pop
sbb
pusha
dec
clc
jne
out
lcall
mov
dec
das
pop
mov
xchg
lahf
mov
fistl
clc
jmp
test
and
repnz
stc
enter
cmp
call
stos
dec
shll
loopne
mov
arpl
jne
stos
std
xor
loop
test
mov
mov
dec
jb
sbb
insb
or
xchg
into
jl
jl
call
int
jbe
inc
and
adc
fldt
clc
add
xor
sti
lods
pop
ja
mov
adc
xor
stos
and
bound
jecxz
stos
frstor
sbb
imul
rolb
mov
dec
mov
jg
sbbl
dec
test
push
add
fsub
lock
push
outsl
mov
sarb
stos
nop
xor
fildl
cmp
pop
mov
fstpl
xchg
and
idivb
nop
das
pop
fcmovnu
dec
and
fcmovnu
addl
or
rorb
aaa
fisttpl
cld
adc
pop
loopne
add
cwtl
pusha
flds
pop
pop
lods
call
movsl
cli
leave
adc
ror
sbb
ret
push
fstpt
xchg
pop
cli
xchg
repnz
lret
sti
cmpsl
xor
ret
outsb
mov
jg
dec
mov
ror
ret
test
pop
fcmovne
push
sbb
jns
cmpsl
sub
adc
inc
add
gs
and
ret
adcl
addr16
nop
sub
xor
popf
pop
in
outsl
sbb
jo
lods
fcmovne
jmp
jle
push
lea
cld
sub
jg
cltd
pushf
cmp
jae
lret
fcmovne
insl
sub
stos
loope
pop
xchg
cmp
fistl
lret
or
fistl
ljmp
pop
ds
xchg
push
inc
fisttpl
dec
pop
xor
std
add
les
in
data16
fnstcw
pop
jo
adcl
cmp
jecxz
mov
sbb
jge
fistpl
and
nop
mov
sbb
fdivs
xor
sub
pushf
sbb
mov
outsb
fstl
scas
lods
out
dec
xchg
lock
push
mov
in
fildl
mov
adc
std
push
sbb
and
sub
mov
mov
fldt
jb
fndisi(8087
aad
enter
and
inc
stc
dec
adc
push
dec
mov
dec
in
fcmovnb
xor
and
cmpsl
rep
mov
jb
add
sub
pop
sti
add
jnp
jns
inc
pusha
sbb
repnz
add
fcmovne
das
arpl
mov
lods
or
cmp
imul
inc
add
xor
dec
clc
lods
jae
test
iret
fildl
jmp
push
mov
fistl
adc
fs
fistpl
xor
xor
arpl
sub
aad
dec
out
mov
lods
push
fnstcw
fistpl
lds
xor
pop
aad
pop
adc
lock
in
push
sbb
xchg
arpl
fcomi
cs
cmp
pushf
pop
push
outsb
lods
jmp
fisttpl
pop
jmp
testl
fisttpl
aaa
mov
clc
iret
fistps
lcall
pop
int
out
insb
sub
inc
in
dec
loope
mov
and
test
mov
dec
clc
mov
sahf
ljmp
idiv
dec
sub
jo
sbb
movsl
lods
in
fcompp
pop
js
arpl
xchg
jg
or
xchg
fs
gs
fstpl
fnclex
jno
xchg
test
std
cmc
fcomi
shrl
out
aas
jae
xchg
add
int3
loopne
fistps
or
fildl
mov
jbe
add
cli
xor
or
jp
call
mov
xchg
fistpl
cld
mov
mov
es
mov
pop
add
push
in
dec
pop
lds
xchg
loop
xor
lcall
mov
mov
mov
mov
mov
jecxz
xorl
aad
out
jp
mov
lock
int
fwait
xlat
xor
popa
dec
shll
or
xlat
mov
and
mov
cmp
fstpt
lock
mov
sti
dec
inc
xor
ds
repz
loope
inc
lcall
adc
dec
das
cwtl
stos
fucom
fldt
mov
in
fidivl
mov
xor
rcr
mov
daa
ficoml
sbb
loopne
and
mov
sbb
add
fidivl
xchg
shrl
or
inc
adc
mov
mov
mov
sbb
dec
fldt
cli
std
cmp
loope
mov
pop
mov
cltd
mov
xor
add
sbbl
xor
fistpl
adc
ja
jp
push
mov
iret
push
mov
notl
jbe
cmp
frstor
int
lods
out
out
bound
stos
adc
mulb
xlat
repz
cmpb
lds
adc
xchg
push
jecxz
fwait
inc
scas
pop
inc
jnp
pop
ds
fisubl
fbstp
mov
js
cmp
stos
mov
fisubl
mov
add
scas
and
push
inc
insl
clc
jo
out
push
call
imul
orl
fistl
jae
jmp
fldt
lcall
pop
ljmp
dec
dec
push
fstpt
jno
jmp
testb
sbbl
adc
rolb
adc
popa
neg
dec
pop
fisubrl
stos
sub
inc
hlt
popf
pop
cmp
lods
jp
testb
mov
xchg
sbbb
addr16
push
mov
and
and
loope
stos
les
mov
pop
cmpsl
pop
iret
lcall
fistpl
xchg
orl
push
inc
iret
aaa
fcmovne
bound
shrl
jne
xor
sbb
fnsave
jnp
stos
inc
ret
fisttpl
dec
jbe
out
or
xor
in
jecxz
fcmovne
mov
popa
inc
fisttpl
pusha
add
adc
call
ficompl
fucom
add
jl
ja
fldt
push
inc
notl
and
rcr
jns
insl
push
pop
hlt
adc
pop
adc
xchg
int3
fistl
out
dec
fcomi
fwait
pop
mov
mov
mov
shll
frstpm(287
fcomps
or
mov
pop
imul
mov
bound
sbb
popa
xor
pop
loopne
fs
stc
js
lea
pop
ffreep
lods
scas
push
daa
adcl
cmp
fistpl
scas
movsl
lcall
push
inc
cmp
popf
fadd
stos
mov
into
mov
xlat
mov
jb
or
xchg
sar
clc
cmpsl
cwtl
jl
fisubl
mov
prefetch
mov
stc
aaa
jb
mov
hlt
loopne
stos
loopne
jne
pop
push
jp
mov
sbb
jge
and
dec
jns
adc
inc
fisubrs
cmpsl
add
fstp
add
sub
movsb
jp
dec
in
jae
insl
call
xchg
dec
mov
mov
jae
fnsetpm(287
mov
pop
jle
andl
mov
xor
cwtl
sub
mov
int3
adc
movsl
lods
pop
mov
push
mov
fldt
xor
adc
lahf
jg
mov
movl
nop
xor
js
or
cmpsl
stos
pop
jl
jg
pop
fistpl
mov
int3
sub
enter
es
cmp
cmp
mov
shrl
jge
aam
das
pop
jae
ljmp
push
lcall
outsl
pop
into
mov
and
fcmovnb
xchg
dec
cmp
mov
notl
sub
add
popa
fstpt
cli
mov
lods
sbb
inc
call
sarl
sbb
add
or
xchg
das
call
aas
mov
popa
fildl
mov
jbe
imul
adc
jecxz
daa
mov
iret
addb
outsl
add
pop
sbb
cmpsl
jbe
js
sub
and
out
push
loope
mov
dec
cwtl
fistpl
daa
arpl
fldt
jnp
inc
call
fdivrs
orl
jecxz
iret
cmp
imull
fistpl
dec
fstl
call
mov
sbb
fcmovnu
pop
xor
sub
or
pop
cmp
in
ret
xchg
jo
push
div
pop
stc
pop
aaa
fistl
pop
inc
ret
lock
jmp
es
jno
xchg
nop
cld
mov
adc
fistl
out
popa
and
mov
fdivrs
push
inc
imul
dec
sub
push
adc
aaa
jnp
out
in
xor
dec
add
push
pop
popa
fistpl
jl
dec
fucomi
arpl
dec
loopne
pop
imul
cmpsb
fldt
and
mov
outsl
xor
adc
movsl
add
push
repz
scas
aam
adc
pop
add
cmpsl
jecxz
push
ret
repnz
outsb
fisttpl
clc
push
loop
pop
shr
or
jg
fsubl
jb
pop
mov
jl
mov
fistl
or
clc
stos
lcall
push
jmp
fcmovnu
push
mov
into
or
out
cli
out
adc
push
pop
in
in
jb
mov
mov
jp
lods
dec
mov
movsb
fwait
adc
je
cmp
push
and
pusha
mov
test
dec
sub
popf
cmpl
arpl
insl
fistpl
mov
loopne
mov
lret
jb
push
fcmovnbe
mov
mov
sbb
add
stc
xchg
scas
push
in
fimuls
rcr
decl
ffree
jne
adc
clc
movsl
pop
dec
pop
in
fchs
jbe
adc
xor
pop
xlat
inc
je
repz
lcall
mov
outsl
jns
sbb
mov
add
into
push
dec
pmovmskb
sub
cwtl
scas
repz
ficompl
fistl
jns
push
fcmovu
inc
adc
repnz
lcall
test
sbb
movsb
add
pushf
cmc
testb
sbbb
call
push
sub
xchg
add
bound
jns
ret
add
mov
sbb
cwtl
arpl
mov
dec
rcrb
cltd
jge
mov
fldt
cmc
sbb
xor
fldt
jecxz
sbb
inc
xor
lods
cmpsl
mov
dec
inc
push
inc
psadbw
aaa
mov
bound
cmp
sbb
rorb
fstpt
aaa
lods
mov
jp
xor
aas
adc
pop
push
xchg
stos
jo
bound
js
pop
lret
fistps
push
pop
hlt
push
cmp
and
mov
dec
push
xor
inc
aas
stos
scas
mov
cmc
add
int
mov
jg
std
aaa
rclb
sbbl
in
fstpt
jmp
rclb
ret
xlat
cmpsb
fisubrl
push
adc
adc
int
sbb
fcmovne
sub
lcall
pop
push
fnstsw
je
fimull
test
call
lcall
fisttpl
pusha
ss
cmp
fcmovnu
insl
ds
cmp
lock
inc
outsl
and
sbb
xchg
scas
mov
push
or
fisttpl
notb
addl
mov
sbb
xor
fsubrl
pop
lahf
xor
sbb
pop
add
mov
fisttpl
aaa
ffree
mov
cs
and
cmp
xor
pop
adc
aam
sbb
jle
jmp
outsl
insb
fcmovnu
les
fisttpl
into
lret
fstpt
in
nop
or
fcoml
push
push
push
adc
imul
xchg
and
rcr
int
icebp
xchg
mov
adc
sti
sbb
lret
mov
sub
aad
cmc
mov
mov
sub
and
fcmovne
jbe
xchg
in
sti
fstps
lea
lret
mov
cmp
sbb
cld
int3
enter
dec
fldt
test
push
and
rcr
das
or
adc
sbb
fldt
nop
dec
fs
fildl
sub
fcmovnb
mov
rcrb
sub
push
lcall
ljmp
xor
push
mov
in
enter
jge
cmpsl
dec
adc
fstp
inc
push
addl
jne
stc
enter
xor
roll
adc
jp
fdivl
vcvttps2dq
dec
and
aaa
push
fildl
sub
push
fcoml
jmp
cmp
xchg
icebp
fisttpl
rcrl
fstpt
inc
aaa
out
js
cmp
addr16
cmpsb
lret
or
mov
ljmp
mov
jno
inc
lahf
or
fnsave
mov
lea
sbb
ret
dec
fwait
mov
or
ret
adc
jo
add
fistpl
lock
scas
movsb
inc
sti
outsb
sti
pmullw
fistpl
cmpsb
test
fistl
mov
std
ss
sub
fiaddl
sub
push
leave
jns
lret
loopne
cmp
mov
or
pop
mov
adc
fstpt
ja
notb
pusha
sub
ficompl
dec
das
and
or
cmp
fisttpll
cmp
jns
fcmovnbe
imul
mov
aad
inc
jne
int3
in
fisubrl
insl
jns
mov
iret
sub
or
arpl
in
lds
fstpl
cmpsb
scas
mov
jo
inc
mov
stos
pop
popf
mov
xor
adc
pop
shl
in
pop
cwtl
aam
cmp
fstpt
jg
add
mov
test
mov
loope
mov
fcmovnu
lcall
fcomi
dec
push
cmp
xor
mov
mov
cmpb
and
mov
cmp
or
cs
rorl
xchg
stos
fists
mov
roll
push
cli
outsl
addb
mov
xchg
nop
test
scas
stos
fistl
dec
stos
dec
mov
push
cmpsl
jmp
push
add
mull
cld
aam
fists
lods
rorl
fistps
pusha
mov
jae
jmp
lret
cmp
dec
in
lea
in
ja
jge
loop
push
int
and
sub
jae
mov
lock
bound
mov
lret
pop
addr16
push
ds
outsb
fcmovnbe
leave
cli
dec
add
adcb
hlt
enter
inc
insb
xchg
mov
cli
inc
movsb
out
mov
xor
jb
stos
fnstsw
aad
mov
or
scas
mov
pusha
dec
leave
shr
lret
js
and
sbbl
les
and
adc
mov
jecxz
dec
and
les
daa
jnp
xor
arpl
or
dec
insb
jno
andl
cli
repnz
pop
lcall
iret
pop
xchg
aam
rcl
in
jl
cwtl
push
push
cmp
fisttpl
xchg
pop
mov
rcrb
aaa
or
int
and
push
xchg
inc
cld
call
or
xchg
fisttpl
xor
push
adc
cmpsb
fistl
movsl
ret
pop
fnclex
dec
sub
repz
sub
dec
add
or
fildl
out
push
dec
pushf
lret
mov
imul
arpl
dec
jmp
cli
loopne
cmp
adc
cmc
push
cmp
fnsave
fiaddl
pop
push
ljmp
xchg
inc
lret
push
fsubl
inc
adc
mov
fistl
jge
inc
fucom
inc
sar
or
fstps
mov
hlt
pop
adc
xor
cmpsl
xor
jns
clc
data16
push
sti
out
mov
es
mov
adcb
aam
fcmovnu
sub
jno
out
jae
in
push
push
scas
mov
pop
or
jne
cmp
fisttpl
pushf
dec
xchg
loop
pop
pop
dec
stos
xchg
lcall
loop
in
pop
pop
dec
divb
fucomi
ljmp
fistpl
xchg
imul
xchg
ret
cmp
inc
jl
mov
push
push
pop
fsubrs
mov
hlt
dec
sbb
or
mov
sbb
clc
dec
lret
add
or
lea
pop
pop
out
nop
push
jno
rorl
dec
imul
mov
aaa
out
or
call
cmp
cltd
jnp
test
icebp
jle
cmp
sbb
mov
les
xlat
es
push
loopne
sbb
jecxz
dec
pop
out
ljmp
test
insl
or
je
fisttpl
cmp
jp
out
sbb
inc
nop
pop
fwait
fwait
das
pop
fisttpl
cmpsl
cmp
jle
xor
scas
jmp
dec
jecxz
fistl
xchg
dec
dec
mov
sbb
add
cmp
mov
jbe
frstpm(287
rcll
mov
mov
lods
push
sub
mov
mov
adc
outsb
mov
mov
sub
inc
push
push
outsl
adc
cmp
jns
pop
sbb
push
test
repnz
rcll
pop
lds
fstpt
int3
fsubrl
sti
mov
mov
jle
cmp
sub
add
xchg
xchg
fcmovnbe
xor
jnp
rcll
mov
pop
scas
pop
add
int3
xor
rcll
xchg
testb
inc
stc
dec
enter
sbb
sbb
sbb
mov
mov
stos
fisttpl
gs
mov
repz
dec
mov
sub
dec
rcr
loopne
scas
cmc
insb
leave
lods
fistpl
push
inc
sbbb
fstpt
xor
sbb
fldt
or
xor
fstpt
adc
fwait
mov
fildl
idiv
or
mov
ss
shrb
pop
jg
fisttpl
cmp
pop
xchg
push
and
jnp
jae
lret
ja
dec
repz
mov
adc
xchg
aaa
dec
push
lock
inc
jnp
lods
rorl
fistl
mov
loopne
stc
loop
xchg
clc
dec
mov
dec
or
mov
pusha
jbe
imul
cmp
dec
sbb
push
push
fcomi
cwtl
add
cmc
xlat
mov
aam
out
test
and
fstpt
movsb
fildl
call
stos
sub
push
divl
push
mov
mov
mov
ficompl
daa
add
cmp
jb
scas
fisttpl
fcmovnbe
in
push
out
jecxz
in
or
test
pop
jmp
andb
dec
imul
loopne
fsubl
sub
mov
fildl
int3
push
ja
fsts
popa
fidivrl
clc
and
mov
sbb
jge
in
mov
xchg
sahf
push
ja
fistl
jl
leave
inc
loope
lock
and
aad
jecxz
pop
or
je
fildl
pop
in
loope
xor
add
pop
mov
call
fldcw
inc
cvtps2pd
jb
add
pop
push
pop
rcl
xchg
push
mov
aas
pop
ret
out
rcr
push
or
lea
dec
xchg
add
and
iret
mov
push
mov
jne
add
lret
fldt
sbb
pop
mov
movsb
ds
sub
xlat
out
lret
call
mov
and
lret
inc
jo
push
inc
mov
test
push
in
loope
push
fcomp
sub
and
sarb
inc
xchg
fsub
cmpb
xchg
jno
fmull
test
pop
adc
rcr
in
clc
jmp
pop
pop
sbb
cmp
fistl
cmp
fldl
push
or
pusha
pop
cmp
dec
mov
out
dec
data16
sti
fildl
lahf
or
and
mov
ljmp
and
dec
cmpsl
adc
iret
neg
xchg
push
sbb
and
xchg
lcall
stos
idiv
pop
fsubrs
pushf
andb
sub
or
mov
xchg
sar
inc
inc
ret
fwait
lea
or
jnp
xchg
sbb
out
nop
xchg
add
mov
stos
pop
dec
dec
repz
mov
andb
dec
fisttpl
jmp
pop
call
sub
xor
push
inc
mov
les
or
and
mov
sbb
push
out
test
jge
ljmp
test
mov
fldt
out
out
fcmovne
add
icebp
cwtl
jl
fisttpl
pop
dec
cmp
andl
hlt
pop
sbb
mov
push
and
fbstp
sahf
fldt
xor
imul
fstpt
adc
xchg
sti
sbb
lret
cs
dec
shlb
das
jmp
dec
push
adc
ljmp
pop
dec
push
mov
nop
test
cmp
add
sahf
and
mov
lahf
pop
out
xchg
divb
in
lahf
fwait
dec
mov
divb
bound
pop
sub
pusha
pop
and
xor
cmp
ljmp
inc
or
lret
movsl
add
leave
xor
pop
into
scas
inc
lock
lods
mov
std
adc
push
xchg
mov
loop
adc
mov
pop
inc
and
sub
lds
dec
loopne
mov
loop
lods
loop
cmp
pop
movsl
enter
adc
cmp
ljmp
jae
mov
outsl
pop
mov
xchg
jnp
fadd
cltd
fcomi
movsl
icebp
lcall
mov
pop
stos
mov
adcb
dec
jbe
inc
lcall
add
and
test
rcrl
adc
movsb
inc
and
stos
dec
ljmp
lock
adc
mov
pushf
icebp
xor
push
lds
or
push
mov
push
pop
in
stos
xchg
cltd
xchg
cs
mov
mov
mov
mov
adc
sarl
aaa
add
jecxz
xor
add
inc
or
mov
std
loop
jecxz
mov
in
and
jecxz
lret
jno
push
dec
outsl
jbe
out
cmp
repnz
out
jle
jp
xchg
pop
sub
and
test
fdivrs
loop
ficompl
ja
fstpl
fistpl
or
pop
jb
aam
leave
js
lcall
dec
scas
cli
ds
pop
out
dec
mov
loope
sbb
mov
add
mov
movsb
dec
dec
cwtl
push
or
push
es
bound
les
xchg
add
pop
test
mov
out
imul
testb
xor
ret
xor
xor
leave
fcmovnu
sub
popa
or
test
cmpsl
addr16
dec
push
and
in
mov
mov
add
icebp
std
ret
cltd
dec
push
repnz
pop
ficompl
inc
lods
mov
mov
fsubrl
cmp
movsl
add
das
outsb
ret
movsb
cmp
push
jp
push
pop
dec
lods
xor
mov
stc
loope
push
xchg
push
mulb
fldcw
fwait
cmp
adc
outsl
in
arpl
mov
adc
push
or
fldenv
enter
in
fbld
lret
aam
fistl
jge,pn
loopne
jp
cmp
or
lds
fimuls
push
aas
out
cmpsb
xor
sahf
nop
stc
or
sti
adc
lods
cltd
stc
pop
mov
cmpsb
jp
jb
adc
fwait
xchg
out
movl
sti
cld
mov
jae
mov
pop
inc
jne
fcmovnu
imulb
sub
into
dec
mov
rcr
jne
fldt
clc
hlt
mov
fcmovnu
outsb
sub
scas
in
push
mov
fimull
mov
jecxz
fwait
mov
cld
sub
pop
leave
fldt
stos
insl
jg
sar
loop
loop
ficomps
lret
push
aad
lds
clc
orb
imul
pop
sub
fldt
or
jge
loopne
inc
mov
jnp
in
lret
sbb
fldt
push
mov
or
ds
pop
xchg
fldt
jp
fstps
xlat
mov
lret
fistpl
test
fildl
loop
movlps
shr
jp
xchg
sarb
lea
fidivrs
dec
jl
xchg
outsl
adc
jp
lea
pop
sbb
sub
dec
into
lods
add
push
pop
mov
dec
je
cmp
or
xor
outsb
fildl
imul
pop
mov
arpl
push
mov
cmpb
push
js
lds
dec
lcall
sub
ret
dec
enter
and
cmp
dec
jbe
ss
pop
mov
inc
cmp
sub
inc
dec
fildl
cmp
fldt
push
inc
fistpl
rcr
clc
leave
or
push
popa
sbb
clc
cmp
stos
fistl
xor
push
sub
outsb
mov
mov
push
sbb
je
loope
sub
mov
pop
and
dec
pop
loop
ljmp
jge
cmc
or
popf
cs
push
imul
rcrb
test
pop
int
xchg
jne
jae
cltd
fucomi
xlat
ljmp
and
fildl
das
fdivl
mov
jg
imul
fldt
ja
into
icebp
mov
add
xor
xchg
mov
call
outsb
pop
scas
mov
je
dec
lcall
jp
lcall
mov
fldt
aas
or
mov
mov
sub
pop
das
xchg
mov
pop
arpl
cmpsl
mov
out
scas
jle
pop
mov
jnp
test
fstpt
dec
pop
adcb
mov
or
cld
inc
sti
das
add
ds
jae
dec
fcomi
jbe
lock
pop
testl
xor
inc
sahf
fidivl
mov
cwtl
pushf
leave
into
enter
fldenv
pop
or
pop
insl
fadds
jb
ficompl
push
cmpsb
sbb
mov
or
fcmovnb
das
push
mov
fstpt
xchg
repnz
fwait
sbb
repz
mov
inc
popf
and
fcomp
xchg
xlat
mov
pop
fsubs
xchg
mov
xor
jnp
dec
or
ss
mov
data16
xchg
push
push
add
lds
adc
das
ljmp
xorl
cwtl
retw
into
ja
pop
test
jmp
jl
in
loope
mov
fstpt
sub
sbb
sbb
xchg
mov
repnz
dec
pop
pushf
fstpl
push
hlt
lcall
adc
cs
movsb
cmp
mov
nop
add
push
xorl
jnp
jmp
mov
outsb
cmpsl
out
daa
out
push
int
mov
add
mov
sub
leave
call
cli
fcoml
or
mov
out
jo
and
imul
fidivrl
sbb
xor
ss
dec
daa
outsb
cli
push
cmp
add
jnp
gs
mov
jmp
stos
inc
or
fldl
out
lods
xchg
daa
loop
outsb
in
xor
in
add
adc
cmc
inc
test
pop
stc
iret
mov
and
clc
xor
insb
jns
mov
fildl
and
cmpsb
pop
sbb
or
lcall
sbb
fdivs
adc
sub
sbb
pop
cmp
pop
imul
adc
pop
mov
lods
jo
fistpll
xchg
fsubp
test
push
adc
lods
xchg
sti
lods
xorl
repnz
mov
in
pop
outsb
push
movsb
dec
jb
or
inc
pop
push
adc
stos
xchg
adc
pop
adc
fdivrl
icebp
fiaddl
orb
test
and
lea
popf
cmpsl
ret
mov
rorl
cmp
into
dec
jg
pop
aaa
mov
lret
add
xchg
or
into
loop
push
out
repz
pop
bound
stos
fists
xor
out
lock
dec
jmp
mov
out
lcall
outsb
cltd
outsl
mov
jnp
stos
xchg
aas
and
stos
iret
aad
incl
cmc
dec
scas
inc
leave
cmpsl
pop
add
jp
fs
pop
mov
fidivrs
or
sar
cmp
inc
push
das
xchg
and
cmp
mov
clc
in
jno
loopne
fldt
mov
xor
fistl
mov
mov
xchg
repz
call
dec
mov
in
sarl
pop
out
icebp
fldt
int3
push
leave
in
mov
xorl
mov
fildl
push
xchg
mov
jne
fistl
mov
shlb
fstpl
adc
sbbl
mov
daa
cmp
lahf
repnz
ret
pop
pop
fsubl
fldt
negb
xchg
mov
dec
sub
cmp
or
add
add
mov
sti
insb
rcll
aad
xor
loop
add
pop
sub
add
lods
nop
jl
push
call
dec
std
sub
add
ljmp
fistl
mov
loop
cmpsb
adc
loope
dec
adc
test
pop
jo
in
push
cmp
dec
pop
data16
mov
sub
fistpl
popf
dec
or
loope
xchg
cli
ret
and
mov
pop
in
lret
xchg
lock
lea
fdivrs
cmp
inc
mov
jge
lds
push
les
push
mov
leave
sbb
insb
pop
imul
cmp
jmp
test
sbb
and
repz
jle
out
daa
es
neg
dec
sub
push
cmp
cwtl
clc
test
loopne
fwait
cli
or
mov
adc
or
fildl
roll
fistl
pop
fwait
and
adc
fistpl
mov
mov
outsb
dec
lcall
push
insb
pop
popf
jl
das
mov
fisttpl
mov
push
imul
mov
fisttpl
jecxz
fstpt
insb
lret
arpl
movsl
push
pusha
pop
mov
cmp
fisttps
sub
xchg
out
lcall
add
sbb
lods
stos
test
arpl
xchg
fsubrs
jg
cmp
aas
push
mov
dec
dec
cli
cs
jl
pop
mov
inc
fidivrl
push
fucomi
cmp
sbb
push
lock
call
or
fiaddl
in
xchg
adc
mov
and
rolb
repz
sbb
fisttpl
iret
adc
sbb
pop
pop
ljmp
and
fcmovnb
mov
mov
fistl
lods
nop
mov
fstpt
pop
lock
cs
outsl
sbb
lock
dec
xchg
int3
jle
sti
fcom
mov
xor
lret
push
or
lcall
in
sarl
pand
inc
pop
repnz
decl
repz
push
call
fcompl
shll
cmp
sub
jbe
fstl
sbb
pop
xor
sti
cmpsl
cmp
push
shll
push
adc
adc
pop
fsubl
insl
clc
daa
jge
push
and
xchg
inc
dec
sbb
clc
mov
push
dec
mov
out
stos
xchg
dec
pop
or
xlat
mov
and
xor
push
dec
dec
hlt
fldcw
dec
call
inc
rolb
add
jo
cmpsl
sbb
fisttpl
or
loopne
jnp
or
into
fildl
push
ret
sbb
xchg
mov
mov
fstpl
push
repz
fildl
stos
mov
mov
movsl
xchg
xchg
int
pop
sbb
lahf
mov
sahf
imul
shll
push
fldt
sbb
or
add
loope
hlt
pop
data16
cli
insl
mov
pop
shl
ficomps
sbb
or
fildl
mov
mov
fstpt
xor
adc
inc
sub
mov
cs
pop
xor
fcmovnbe
dec
lea
sahf
fildl
xchg
pop
je
lods
lcall
dec
pop
push
add
mov
jo
xchg
lea
in
pop
lods
add
lret
add
mov
decl
fildl
inc
loopne
es
shll
xchg
mov
mov
int3
call
or
outsb
dec
aad
iret
sub
das
adc
or
call
mov
test
ret
popa
cmp
xor
sub
loop
loope
mov
pop
int3
lds
or
xchg
in
xchg
xor
scas
rclb
test
mov
fisttpl
popa
fisttpl
ss
jo
dec
arpl
adc
inc
pop
dec
adc
lret
dec
fsubr
fisttpll
mov
jp
dec
fstpt
ds
je
iret
sarl
pop
dec
pop
fistl
mov
sbb
nop
loopne
fsub
inc
jp
cmp
mov
adc
aad
pop
or
fucomp
call
cli
cltd
lea
mov
outsl
pop
js
pop
adcb
sarl
fucomi
lret
repz
add
xchg
pop
mov
clc
rorb
stos
xchg
cmp
sbb
jae
pop
push
mov
fstl
push
mov
ret
rclb
nop
fcmovu
cmp
xchg
jg
pop
push
mov
outsb
loopw
popa
sub
iret
pop
adc
pop
fiaddl
pushf
fisttpl
aam
lret
mov
jecxz
dec
fistpll
jp
or
idivb
xchg
dec
cmp
pop
cltd
lock
adcb
jg
fninit
lds
push
jl
jp
xchg
mov
add
jno
push
xor
loopne
pop
xor
push
xor
lcall
mov
subl
leave
sbb
bound
js
call
ffreep
push
xchg
in
push
pop
dec
push
popa
fistpl
sub
pop
push
cld
add
mov
fstpt
stc
rol
inc
fucomi
mov
add
push
pop
fildl
push
fxch
out
add
fldt
imul
jno
gs
mov
push
loopne
sbb
in
mov
out
push
dec
rcr
adc
ds
mov
mov
divb
sahf
call
je
cmpsb
dec
dec
or
add
xchg
mov
in
dec
mov
jge
mov
jl
fisttpl
xor
xchg
sahf
sbb
mov
inc
loopne
pop
test
jnp
imul
sub
mov
loopne
inc
not
test
cs
in
fistl
pop
lahf
cmp
sahf
inc
add
sub
and
and
scas
mov
dec
and
imul
xchg
mov
lret
cld
frstor
mov
push
ss
jg
cwtl
push
out
mov
cmp
pop
dec
cltd
push
push
cmp
cmpsl
pop
cwtl
jnp
mov
mov
out
xlat
jmp
cld
test
or
push
or
pop
xchg
mov
f2xm1
sub
jne
aam
rcrl
xchg
jno
fsubs
idiv
fldt
mov
inc
xor
fninit
cs
fistps
leave
lea
mov
fcompl
data16
call
out
fstpt
xchg
adc
jns
popa
in
and
push
pop
xchg
test
jl
mov
out
adcb
mov
inc
cltd
mov
fistl
loopne
popf
push
dec
loope
or
jne
loopne
adc
orb
mov
outsb
adc
lock
push
mov
jmp
stos
push
sub
fistl
jb
adc
popf
fstl
imul
cwtl
dec
xchg
aas
arpl
mov
lods
inc
add
in
sbb
out
fcmovnb
push
les
pop
or
jo
imulb
ljmp
subl
add
mov
ja
and
std
mov
aas
daa
fldl
mov
jo
fdivrl
inc
loop
push
jnp
icebp
pop
push
mov
out
add
ljmp
mov
jecxz
lods
fidivrl
mov
push
imul
or
add
icebp
add
cwtl
stos
xchg
in
fistpll
sbb
gs
sbb
aam
lcall
insl
inc
mov
scas
inc
loop
adc
add
loope
lds
mov
ja,pt
cmc
inc
movsb
or
or
not
jno
xor
jmp
lret
insl
cmc
stc
jne
out
addr16
xchg
enter
ficoml
fdivrl
leave
adc
adc
push
lret
fxch
idivb
loopne
mov
sbb
ret
sub
mov
jge
lahf
arpl
mov
mov
fimull
int
fldcw
jecxz
mov
mov
jle
dec
and
scas
fcomps
push
mov
lds
xor
push
fistl
xchg
push
cmp
inc
and
loop
cld
pop
icebp
add
xor
stos
jg,pt
stos
xorl
jbe
les
dec
xchg
mov
icebp
in
je
popa
scas
stos
xor
sub
ret
js
mov
cmp
loopne
fidivl
mov
repnz
jnp
or
cmp
ss
sub
pop
pop
add
pushf
lods
push
cli
lods
call
mov
fcoml
fldcw
lret
cli
mov
push
test
sub
repz
scas
fxch
mov
addr16
sarb
jb
add
test
or
push
push
inc
adc
lods
mov
aaa
dec
in
lret
add
cmp
mov
jg
and
fldt
icebp
ficoml
add
subb
lret
lods
push
fildl
sbb
into
sbb
xchg
adc
xchg
fisubrl
xchg
push
data16
add
sbb
and
xchg
lcall
fistl
in
cmp
push
sub
dec
jnp
mov
inc
shrb
incb
mov
cli
mov
cmp
movl
outsl
jge
mov
sub
insb
stos
clc
cmp
rorb
push
lods
mov
stc
jbe
sub
popa
push
pusha
push
cs
cmpsl
js
and
mov
ret
int
fldt
movsl
stos
scas
xlat
and
repnz
imul
mov
fiaddl
dec
add
mov
mov
scas
push
call
cmp
loope
arpl
rclb
cld
lock
sbb
adc
jo
adc
inc
in
lea
sbb
fistpl
push
jmp
mov
add
and
lret
jae
cmp
mov
popa
pusha
aam
and
push
cmpsl
mov
push
arpl
shll
push
mov
or
pop
fistl
mov
imul
mov
adc
add
cwtl
mull
jp
push
add
fwait
mov
mov
adc
inc
or
hlt
leave
push
jmp
fstpt
pop
test
imul
jge
mov
push
sbb
and
andl
jae
imul
jb
mov
cmp
add
int
add
sub
mov
inc
fisubl
test
adc
dec
add
mov
sub
fldt
ret
push
jecxz
lret
fnsetpm(287
lcall
and
out
mov
insb
out
das
or
mov
mov
repz
or
scas
inc
xor
xor
imul
add
dec
sub
jbe
fwait
rcll
lock
pop
sti
loopne
dec
sbb
adc
and
sub
mov
cmpl
xchg
and
push
add
xchg
xchg
push
fistl
xor
cmp
aaa
add
fndisi(8087
faddl
popf
push
add
adcb
fcmovnbe
xorb
les
mov
push
lret
mov
insb
dec
arpl
and
pushf
notb
inc
fnsetpm(287
jle
push
fldl
aad
pop
faddp
jmp
fcmovne
movsb
push
aaa
jge
cmc
mov
jnp
jns
rcl
fninit
inc
push
mov
adc
pusha
or
fucomi
loope
and
shlb
mov
repnz
loopne
mov
movsl
pop
int
pop
aas
out
pop
daa
add
push
rcr
sahf
rcr
jns
cltd
call
mov
sbb
lcall
push
inc
push
cmpl
mov
fadd
add
push
lods
inc
mov
sarb
scas
pop
scas
sub
xor
gs
lret
vrcpps
int3
inc
scas
out
cmp
cmp
and
push
sbb
pop
fistpl
cmp
sub
xor
push
into
jae
fistpl
pop
out
aas
sti
ja
or
ficompl
fwait
mov
mov
test
xor
push
add
int
jge
vpmullw
add
jne
rorb
dec
imul
rorb
lock
lcall
cmc
cmpsl
test
arpl
pop
fcmovnbe
int3
das
mov
fisttpl
cmpb
push
inc
fistpl
jge
hlt
mov
fcmovne
and
imul
cmp
or
add
add
pop
mov
inc
push
scas
mov
adc
sub
fstpt
fnsave
outsb
push
and
adc
jmp
aas
cmp
cli
call
popa
mov
lock
outsl
sahf
jmp
pop
pop
fisttpl
add
xor
repz
sub
adc
repnz
clc
mov
mov
mov
nop
dec
movsb
fistpl
js
jae
jno
and
mov
movb
leave
push
into
popf
fisttpl
lock
jb
mov
int3
pop
mov
cwtl
sarl
es
fstpt
lods
xchg
pop
clc
lret
xor
stos
notl
clc
pop
sbb
and
sbb
inc
test
mov
rclb
negb
popf
int
xchg
push
fildl
add
xlat
addr16
movsl
ljmp
out
test
call
push
lods
faddl
inc
ja
sbb
popf
adc
mov
fistpl
stos
shrl
clc
xor
les
mov
lret
call
adc
or
jnp
pop
push
movsl
fcomp
push
mov
or
and
fucomi
sbb
sbb
imulb
add
jg
jns
test
adc
test
scas
push
dec
or
jae
aad
mov
ss
cmpsl
push
fildl
mov
pop
test
adc
cmp
sub
push
add
movsb
test
lcall
sti
sbb
out
and
xchg
fdivl
push
jecxz
cmp
pop
inc
cs
outsl
and
mov
mov
cmpsb
dec
mov
mov
or
push
inc
insb
pop
pop
dec
sbb
sbb
rcrb
call
not
sti
jge
loopne
xor
lahf
jo
subb
ja
jae
lods
cltd
fldcw
fisttpl
daa
cmpsb
dec
fldt
mov
dec
mov
sbb
sbb
sub
stos
xchg
pop
push
jae
sbb
sbb
lods
dec
mov
dec
int3
xor
fistpl
divb
in
push
xchg
fldt
fadds
ss
or
scas
or
fstps
movsl
pop
in
rcll
jl
adc
xor
mov
int
loope
jno
or
sbb
sbb
xchg
repz
dec
add
hlt
and
mov
mov
inc
or
mov
push
fstpt
dec
int
dec
mov
jno
add
loopne
sub
inc
cmp
and
sub
jbe
xor
and
stos
mov
movd
fistl
xchg
in
sti
dec
mov
in
adc
sub
cwtl
or
data16
adcb
mov
dec
add
js
push
inc
fstpt
xor
fcomi
dec
pop
cli
iret
mov
aad
adc
fcomp
mov
mov
inc
cmp
int
jmp
mov
jnp
sub
cmc
arpl
out
push
daa
aam
fldt
ret
rorl
mov
fneni(8087
push
pop
xlat
out
xchg
das
lret
push
cs
push
mov
or
mov
jbe
pop
adc
pop
popf
loop
sbb
neg
push
adc
xor
or
mov
dec
loope
mov
add
mov
mov
out
mov
jmp
add
stc
outsb
or
pop
ficoml
cmp
arpl
fst
dec
fisttpll
btc
push
ss
pop
push
mov
push
fs
fistpl
pusha
ja
out
pop
fucom
imul
pop
lea
sbb
fildl
in
sbb
sahf
das
jo
mov
mov
test
adc
lret
cld
add
not
fistpl
dec
xor
in
mov
dec
inc
push
xchg
std
rcrl
ficoml
xor
pop
sahf
push
loope
repz
mov
sbb
fldl
int3
aam
mov
test
pop
aad
out
call
cmp
mov
aam
call
fdivrs
in
loope
fistpl
aad
in
push
shll
sbb
mov
loope
mov
xor
xchg
fdivrl
enter
lock
insb
sub
fs
movsb
mov
out
xchg
mov
cmp
es
fcmovnbe
and
lret
jae
stos
iret
mov
int
push
neg
cmpsl
fs
inc
pop
sbb
sbb
mov
sbb
fcmovne
or
xchg
popa
jb
outsb
outsl
fsubrp
cmp
or
xchg
inc
out
mov
xor
iret
cmc
fldt
jae
in
fistl
and
sub
stos
mov
imul
xor
ret
gs
aad
fisttpl
add
scas
pop
or
fcomi
lret
testb
popa
add
mov
pop
lret
test
push
jp
icebp
pop
in
outsl
mov
fmul
sub
fs
fcmovnb
js
xchg
inc
test
cmp
push
fcmovu
cmp
fidivs
inc
insl
dec
fisttpl
lcall
pop
insb
dec
dec
sbb
lock
add
and
adc
nop
sub
xor
cwtl
sub
inc
mov
pop
lock
lret
mov
in
clc
fimuls
fcomi
push
icebp
pop
cmpb
stos
sarl
mov
out
sahf
loop
jnp
mov
jmp
shll
scas
pushf
or
jg
pushf
popf
mov
dec
fidivl
pop
push
stos
sub
faddp
repnz
in
lock
cmpsl
mov
mov
xchg
jg
xchg
lods
in
stos
pop
xchg
jne
sahf
mov
jb
pop
inc
lret
cmc
loop
pop
cmpsl
jle
mov
nop
pop
push
call
xlat
add
push
rcrl
sub
loopne
push
xchg
and
lods
in
enter
jne
cmp
mov
popf
lea
bound
in
daa
or
adc
in
mov
iret
aaa
lods
ficoms
aad
addr16
insb
faddl
xor
fwait
je
dec
cmp
push
insb
pop
jle
jge
xlat
pop
add
rcrl
hlt
cld
mov
ss
xor
sbb
out
mov
sub
push
outsl
dec
in
cmp
mov
sti
mov
mov
mov
je
idivl
ds
loop
pushf
das
fstpl
sub
or
sub
call
cmp
clc
add
lods
pushl
testl
xchg
repz
add
iret
xor
dec
sbbb
aas
jecxz
lods
lret
in
mov
in
icebp
test
ljmp
mov
jg
push
ficomps
bts
add
sub
mov
push
sbb
mov
insb
stos
push
movsl
paddusw
repnz
in
jne
push
mov
push
push
mov
sbb
cld
lcall
xor
add
in
fcomi
in
dec
or
or
cmp
clc
or
lcall
xlat
and
in
or
cmp
inc
xchg
push
jp
fidivrl
push
sub
loopew
mov
icebp
fwait
xor
and
push
ret
nop
repnz
jmp
in
jo
iret
sbb
stos
push
xchg
jl
fdivrl
call
mov
xor
pop
sbb
or
test
repnz
inc
pop
adc
pop
cmp
sti
mov
call
lods
cs
xchg
sub
andb
xchg
pop
int
stos
std
loopne
jmp
lods
dec
dec
jbe
sarl
sub
jb
fldl
gs
icebp
in
xchg
in
or
adc
cwtl
clc
divl
or
sbb
stos
inc
push
mov
push
pop
lcall
fidivl
scas
mov
mov
sub
sti
dec
dec
incw
mov
test
mov
fildll
jecxz
mov
xchg
fs
xchg
dec
scas
add
test
loop
out
xchg
shlb
lcall
loope
dec
sbb
pushf
mov
jbe
xchg
sahf
faddl
xor
addr16
xchg
subl
adc
push
int
push
jo
enter
lods
sbb
sbb
jno
sbb
mov
fcmovnbe
stos
in
pushf
call
aad
inc
nop
mov
or
cmp
mov
sbb
sub
mov
and
xchg
dec
dec
jp
dec
push
repnz
inc
mov
pop
push
ljmp
pop
fcmovnbe
fwait
fs
lods
jo
lret
in
cld
push
cmp
xlat
jne
pop
pop
fdivr
ret
push
lret
jb
sbb
in
pusha
jmp
in
ret
incl
push
pop
xorb
mulb
pop
mov
cmp
in
mov
call
bound
out
ds
fdivrl
daa
or
mov
fbld
add
bnd
push
mov
dec
fs
pop
jl
enter
aam
xchg
stc
jg
push
in
in
mov
mov
fldcw
fmuls
cmpsb
fimull
xor
stos
mov
dec
sti
xchg
clc
inc
mov
jns
cwtl
sub
jl
pop
lcall
int3
jmp
push
les
mov
leave
or
test
insb
mov
push
in
push
or
fisubrl
sbb
les
insb
aam
mov
fldt
scas
pop
push
outsl
stc
add
inc
add
dec
mov
fucomp
xchg
mov
and
imul
in
sbb
xor
fistl
popa
insl
cmp
test
mov
jne
lea
inc
aas
pop
nop
xor
rcrb
ja
cmp
pop
add
sbb
and
xchg
push
xor
fcompl
mov
outsl
sub
cwtl
pop
nop
sbb
movsb
int3
xlat
testl
imul
mov
dec
out
daa
fnstcw
jl
xor
xorl
mov
in
push
sbb
sbb
and
fsubs
cwtl
mov
stos
scas
push
mov
add
xor
inc
push
cmp
sub
fldt
into
sbb
cs
sub
scas
outsb
adc
fstp
mov
dec
or
les
clc
cwtl
movsl
push
sbb
shrl
int3
frstor
les
es
jo
test
sbb
push
imul
aam
cmp
movsb
pop
je
scas
mov
loop
xor
cmp
pusha
js
mov
nop
enter
daa
add
es
mov
fisttps
mov
dec
or
dec
jae
fistpl
xor
pushf
mov
data16
out
movsl
int3
dec
dec
stc
lret
lahf
fistps
loopne
pushf
loopne
mov
mov
fisttpl
leave
push
call
test
and
loopne
dec
ss
xor
js
add
mov
aad
inc
lods
aam
and
pop
frstor
mov
je
push
shrl
aas
pop
inc
pop
xor
fildl
push
pushf
push
lcall
lods
daa
je
loopne
pop
mov
mov
stos
out
adcl
fisttpl
popl
push
sahf
mov
fildll
jns
repz
pop
dec
fidivl
ror
icebp
int
jmp
pop
scas
mov
call
stc
mov
mov
xchg
loopne
xchg
xchg
pop
addr16
jb
mov
lret
and
aam
adc
lcall
ja
std
jg
cmp
mov
sbb
dec
inc
out
fisubl
jmp
sbb
fwait
pop
sub
push
mov
aad
stos
or
rcll
pop
sti
loopne
adc
jne
mov
fidivrs
mov
test
and
xor
mov
mov
fildl
inc
xchg
jo
out
ret
das
int
mov
cmp
xchg
fwait
cmp
push
aam
call
mov
push
sbb
xchg
notl
inc
xor
jg
cmp
sub
mov
add
pop
mov
out
cmp
iret
mov
lret
mov
xchg
enter
fisubrl
into
jnp
enter
xchg
hlt
xchg
and
and
xchg
inc
and
xchg
jle
push
fcoml
pushf
insb
dec
inc
mov
lcall
add
cwtl
inc
dec
repnz
fldt
mov
les
sub
int
dec
fildl
out
movsl
lock
cwtl
push
jno
mov
xlat
outsb
jnp
int
fistl
pop
dec
not
pop
scas
and
or
int3
jnp
out
mov
mov
or
sbb
ret
aaa
push
fucomi
iret
mov
adc
mov
lcall
out
push
outsl
push
xor
loopne
cltd
cld
ja
insl
fcmovnb
cwtl
int
pop
dec
mov
fcmovne
adc
mov
pop
divl
scas
iret
rcll
mov
je
fsubl
and
in
push
push
mov
jbe
movsb
out
call
loopne
mov
sbb
data16
sti
fildl
std
icebp
cmp
ljmp
loop
bound
and
stos
movzbl
or
or
sti
pop
lock
stos
outsb
idivb
stos
xchg
and
jle
ficoml
lods
pop
loopne
bound
xchg
cld
dec
cmp
ds
pop
ret
in
cli
jo
js
adc
out
jge
aad
repnz
fnstsw
int
mov
or
loop
adc
call
and
sub
sub
jbe
push
mov
jge
mov
cmp
xlat
stos
pusha
incl
ret
sub
out
adc
and
repz
insl
iret
stos
sbb
mov
dec
pop
pop
cmpsb
fisubl
cmc
push
xchg
sub
xchg
rclb
dec
bound
or
sbb
lahf
pop
test
push
subb
rcrl
aaa
out
cmp
sbb
dec
sbb
and
mov
add
repnz
int
imul
arpl
jecxz
insb
movsl
cs
inc
cmc
stos
mov
adc
lds
or
pop
int3
pop
lret
clc
and
fmul
add
jge
int
mov
xor
or
out
adc
loopne
test
loop
jmp
jmp
in
fistpl
pop
stos
stc
and
push
pop
subl
push
nop
stos
xor
push
jmp
lcall
ss
pop
in
jmp
xor
lret
stos
xor
pop
fiadds
ljmp
fisttps
in
sbb
inc
mov
adc
sti
dec
adc
sti
insl
jp
test
jo
push
jmp
loop
pusha
stos
sbb
jne
or
adc
mov
lods
or
lds
test
jae,pn
fists
fcomi
mov
mov
xchg
sub
lods
fistl
pushf
push
jp
xor
loope
fistl
add
adc
adc
cmp
ja
pop
cmp
lods
pop
iret
jle
test
adc
dec
into
leave
int3
pop
out
shrb
decb
pop
xchg
loope
cmpb
fistl
scas
fbstp
jae
les
fwait
push
in
add
clc
adcl
fucomi
jno
mov
cmp
mov
pop
outsl
out
aas
sub
mov
out
test
cld
in
xchg
and
pop
subl
adc
ss
inc
mov
mov
out
pop
mov
scas
test
cmp
and
sbb
fsubl
sbb
jmp
mov
das
lcall
mov
lret
or
loopne
mov
test
xor
ret
dec
pop
lock
popa
ljmp
or
cmpsb
mov
addr16
mov
xchg
and
cltd
mov
pop
mov
xchg
call
cmp
mov
push
pop
xor
in
and
mov
jecxz
mov
cmpb
cmp
jmp
cmc
jp
push
inc
fwait
xor
mov
addl
mov
mov
fstpt
cmp
or
jae
call
dec
fiaddl
jb
movl
ja
sbb
jmp
les
insl
out
jne
pop
rep
pop
sbb
stos
mov
dec
fisttpll
ja
push
das
nop
arpl
fcmovnbe
fucompp
outsb
xchg
loope
or
data16
stc
or
pop
fnsave
mov
push
xor
xlat
pop
fisttpl
jae
push
jne
sub
sub
sbb
movsb
out
call
cmp
lret
jg
or
pop
sbb
sbb
rcl
int3
sti
lret
xor
cmp
xchg
popf
sbb
loop
xchg
cmp
movsl
sub
push
popa
and
dec
mov
ret
fisttpl
jl
xchg
das
fwait
fwait
aas
or
lahf
ret
lock
cmp
pop
jne
inc
mov
jl
in
or
ss
shrb
push
pop
mov
rcr
mov
lcall
mov
inc
xchg
loop
setg
or
rorb
cmp
mov
lahf
sbb
movzwl
or
push
xchg
jecxz
pop
into
inc
les
fcmovne
lds
je
imul
pop
cld
push
push
dec
outsb
xor
fstpt
push
stos
mov
clc
dec
fistl
jnp
fcoms
int
call
pop
jbe
adc
fnsave
and
subl
mov
imul
adc
push
xor
push
pop
movsb
cmp
enter
cmp
and
adc
cmp
bound
mov
push
ds
ss
xchg
fcmovne
sbb
mov
divl
outsl
loopne
xlat
mov
sub
nop
lcall
iret
push
add
or
stos
jns
js
mov
out
jmp
ficomps
scas
into
mov
pop
ret
fldt
enter
call
dec
sbb
fldl
jnp
bound
lea
iret
xchg
ljmp
data16
aam
inc
cmpsl
scas
adc
dec
fildl
lret
pop
xlat
xor
repz
loope
in
jns
fsubrs
push
mov
mov
cld
pop
fcompl
call
out
iret
cmp
fistpll
sbb
notb
push
fisubrl
xorl
repnz
xchg
dec
add
xchg
mov
fnsave
and
mov
lahf
or
leave
mov
jg
xor
fsubl
in
std
mov
vsqrtps
ficomps
dec
sarb
xor
fildl
cmc
mov
add
test
mov
fistps
or
xor
movsb
leave
lods
loop
cmp
sub
jne
pop
xor
push
call
cmpsb
mov
aaa
mov
fnsave
dec
adc
inc
jae,pt
push
stos
add
and
cmp
jo
maskmovq
imull
scas
fistpl
mov
notb
jnp
rcrl
and
cmp
fildl
in
popa
lret
scas
inc
cmp
loopne
mov
stos
push
xor
sbb
mov
sahf
mov
aam
scas
and
xor
rclb
mov
push
sub
xor
scas
inc
xchg
call
mov
movsb
sahf
rcrl
rcll
mov
dec
mov
xchg
xor
or
adc
outsl
fisttpll
inc
dec
je
or
inc
jg
dec
pop
or
in
fdivrp
adc
scas
into
dec
movsl
addr16
push
xor
push
jmp
pop
sarb
je
aas
pop
jo
mov
inc
imul
rcrl
out
and
xchg
push
pop
lahf
lods
jmp
lds
dec
nop
or
lock
mov
push
loopne
jae
adc
mov
sahf
adc
sbb
xor
cs
neg
lea
jbe
fnclex
dec
mov
stos
fildl
fisubl
popa
call
jecxz
fsubrl
sbbb
fnsave
xchg
shrb
movsl
cmpsl
xchg
leave
imul
ficoml
or
or
lret
test
ds
push
pop
mov
fdivp
push
add
sbb
fistpl
sti
cli
and
sbb
stos
pop
inc
loopne
mov
or
daa
arpl
add
lcall
scas
ret
aad
lret
cmp
or
sub
push
sbb
mov
leave
mov
rorl
std
notl
int
xchg
fildll
xor
fldt
sub
shlb
pop
fcmovne
and
pusha
sbb
mov
orl
fildl
mov
xor
add
mov
fdivl
sbb
mov
mov
jle
mov
dec
pop
adc
pop
fisttpl
fidivrs
fdivr
cmp
push
mov
sbb
dec
jge
fmull
inc
test
push
mov
or
fcmovb
popl
sub
mov
mov
push
and
gs
mov
pusha
inc
push
push
mov
int3
icebp
adc
orl
cs
cmp
jne
xlat
insb
sub
pop
push
sbb
fildl
out
xchg
fwait
aam
fneni(8087
mov
mov
mov
scas
add
enter
out
data16
daa
mov
fldt
ret
fcmovnu
xor
out
mov
add
sbb
aam
out
insb
or
pusha
in
sbb
insl
dec
mov
mov
sub
ja
cmp
mov
fnsave
aas
gs
test
fcom
enter
fildl
or
push
sarl
call
gs
popa
test
roll
lret
in
xchg
pusha
lret
ret
cmp
outsb
or
push
mov
je
adc
push
loop
dec
mov
test
leave
cmp
push
js
call
ficomps
lods
addr16
fucomi
sub
xchg
push
sub
sbb
mov
testb
fcomp
out
mov
xrelease
addb
movsb
repz
mov
pop
cmpsl
dec
mov
jnp
cli
add
stos
je
cmp
sbb
clc
fsubrs
sub
pop
push
in
icebp
sub
jnp
sbb
dec
in
fisubl
popa
aad
inc
insb
negb
aam
mov
mov
sti
sub
lahf
fnsave
push
lods
inc
or
xor
shll
aam
and
das
fwait
xor
test
push
pop
or
mov
fbstp
fldcw
icebp
xor
push
enter
dec
jmp
aam
or
dec
push
mov
xchg
cltd
xchg
sub
push
adc
cmpb
lock
jo
es
call
xchg
pushf
lods
mov
cmp
push
stos
push
push
cmp
cmp
loop
sti
stos
gs
fld
cs
int
sahf
add
push
rorw
scas
pop
mov
aad
add
lahf
neg
add
lret
paddusw
mov
das
pop
mov
cs
dec
fstpt
call
dec
fdivr
push
xor
and
and
mov
mov
jns
xchg
mov
jge
in
aam
fidivs
xchg
jg
fildl
and
shll
mov
inc
xor
in
std
loop
fildl
mov
jo
or
lcall
or
sbb
push
fiaddl
test
cmp
sbb
pop
fdiv
add
lods
fs
shlb
adc
lret
sarl
sbb
ret
pushf
push
fs
fidivl
cmp
xchg
pop
xlat
inc
fst
lcall
ret
adcb
loop
mov
inc
aas
mov
dec
mov
addr16
ret
sub
mov
xchg
test
dec
and
loope
fcmovnb
test
xchg
adc
add
arpl
loopne
add
cmp
and
imul
lret
mov
xchg
je
inc
cmp
push
dec
lcall
mov
mov
lea
dec
call
lods
sbb
add
push
daa
mov
in
outsl
sub
or
fisttps
pop
pop
push
sbb
jno
imul
pop
dec
add
pop
jae
into
pop
xor
mov
push
and
mov
fldt
adc
dec
dec
or
sbb
push
arpl
adc
sahf
sti
call
cli
fisubrl
xchg
mov
add
jne
xor
xchg
call
lcall
imul
mov
das
dec
push
fcmovnb
iret
sbb
pop
loop
popf
ds
xchg
shl
jae
stos
adc
or
fistl
pop
mov
adc
pushf
adc
leave
sbb
xlat
mov
loopne
mov
jp
stos
inc
cmp
hlt
shl
out
cmp
icebp
repnz
adc
scas
in
inc
jb
lahf
lret
cmp
mov
push
fnstenv
rcll
call
xor
sub
cmp
fisttpl
mov
dec
cltd
fisttpl
jne
jmp
jmp
jno
lock
aam
sbb
fisttpl
xor
push
fcmovne
xchg
push
fisttpl
negl
sub
mov
shr
or
mov
pop
dec
push
mov
repz
jnp
mov
jb
xchg
in
mov
nop
rcrl
insl
mov
mov
cli
push
sbb
and
mov
rcr
jge
pushf
loopne
outsl
xchg
pop
jne
cmc
pop
dec
and
adc
mov
push
and
or
mov
lret
xor
adc
sub
xor
cltd
fs
pushf
fstpt
and
mov
push
ficompl
lahf
push
sbb
and
push
out
mov
cmpsl
xchg
test
into
sbb
inc
imull
aaa
mov
fnsave
fildll
sarb
sub
and
jl
nop
cltd
push
inc
test
sub
fidivl
push
jne
test
fcom
into
andl
xchg
mov
bound
data16
lret
xchg
pop
jp
movsb
and
int3
push
xchg
lahf
std
popa
fs
mov
sbbb
inc
out
imul
pop
xor
in
ret
lea
loopne
rolb
lock
dec
fistl
repz
mov
mov
fisttpl
inc
add
mov
int3
xor
push
sub
fimull
mov
fcmovne
mov
shlb
pushf
idivb
sub
or
sbb
fisubrs
in
push
pop
jg
addr16
imul
fisttpl
dec
sbb
fldt
xchg
inc
xor
cmp
lcall
push
inc
fdivrs
xchg
lret
adc
and
push
repnz
and
jno
leave
fwait
pop
xchg
out
fcmovb
fldt
cmp
iret
dec
imul
fcomi
xchg
inc
pop
mov
adc
popf
in
sbb
aaa
loopne
dec
xor
and
fcmovnb
call
sub
inc
das
inc
stos
dec
fcoms
push
sbb
fstpt
scas
pushf
push
xlat
or
fisttpl
rol
jnp
mov
loope
push
pop
int
fcmovne
sahf
gs
jg
repz
repnz
in
pusha
cld
fildl
insl
jmp
dec
fistl
leave
adcb
jmp
dec
dec
fsub
fstpt
loopne
mov
scas
aam
xchg
mov
dec
inc
fcmovnu
loop
pop
pop
push
xchg
mov
mov
adc
mov
or
fistpl
orb
ret
neg
xchg
xor
lods
jg
mov
lahf
rorb
inc
cmp
cmc
push
mov
fimull
xchg
push
fdivl
fcmovne
icebp
stc
xor
mov
sti
mov
std
mov
cmpsb
adc
stos
leave
testb
sub
inc
lcall
bound
lods
popa
std
fcmovnb
pop
or
fstpt
push
xchg
xlat
adc
testb
ja
fcmovnbe
mov
in
cmp
paddusw
push
out
div
and
rcrb
jmp
arpl
fnstsw
out
sub
and
mov
add
jbe
imul
loope
sti
inc
in
sub
add
popa
or
and
mov
mov
sarb
push
sub
fstpt
inc
fcompl
in
mov
dec
cmp
jns
dec
scas
fnstsw
into
jb
es
fldt
mov
jmp
sub
loop
cwtl
into
out
fwait
pop
and
hlt
fildl
fistps
xor
adc
daa
mov
aaa
rcll
pop
repz
outsl
fisttpl
repz
iret
or
mov
fstpt
jns
jo
movsb
rcr
inc
sub
shlb
dec
fnsave
mov
jecxz
or
mov
insb
loopne
mov
mov
xchg
fisttpll
mov
dec
in
aam
inc
insl
movsb
popf
xor
adc
and
add
out
dec
in
scas
mov
divl
lods
lcall
jle
popf
xchg
in
dec
insl
jno
clc
push
cmp
fisubrl
cmp
add
lcall
shl
in
stos
xchg
sub
sti
repz
cmp
lods
dec
shll
lea
scas
jecxz
pusha
dec
faddl
xor
push
in
mov
rorl
cmp
mov
dec
fisubrs
enter
jp
jae
mov
testb
aas
iret
push
mov
inc
fucomip
cmp
out
push
mov
lods
lea
and
aas
adc
jecxz
mov
test
xchg
outsb
pop
lea
les
lahf
and
out
mov
aaa
mov
subb
or
xchg
pushf
jge
jl
nop
inc
cmp
pop
out
in
ss
inc
pop
shll
dec
popf
shrb
dec
outsl
repnz
lock
cmp
mov
adc
cmpb
add
out
es
outsb
ds
in
lods
or
cwtl
lcall
mov
cmp
xchg
xor
xchg
mov
test
dec
rol
loope
cwtl
push
out
jae
cmp
adc
stos
lret
sub
mov
lods
pop
mov
icebp
xor
dec
add
scas
inc
sahf
rcrl
pop
cmp
lahf
jno
sti
stos
adc
inc
add
test
loope
add
cmp
cld
sbb
jle
stc
adc
in
loop
hlt
pushf
xchg
xchg
adc
in
fidivrs
daa
mov
jp
inc
mov
cmpsb
add
adc
test
rcll
jb
std
jp
inc
gs
push
or
add
dec
pop
adc
in
mov
loop
jno
lret
rorb
or
push
in
xchg
inc
test
nop
mov
cli
mov
add
popf
stos
cmp
fdivs
xor
adc
gs
mov
cs
push
in
mov
jge
dec
and
xchg
into
popa
cwtl
mov
inc
outsb
xchg
in
xchg
sub
shlb
lcall
int
pop
shlb
push
inc
in
adc
mov
inc
popf
pop
test
jmp
int3
jge
pop
push
rclb
inc
jbe
xchg
xchg
test
into
clc
sbb
rorb
push
mov
mov
mov
daa
in
push
loop
sbb
stos
pop
add
cmp
ret
popf
fwait
in
scas
in
out
imul
sub
push
jg
or
test
push
inc
sbb
leave
bound
cmp
mov
adc
xor
inc
pushl
les
mov
xor
add
imul
pop
sti
add
dec
mov
lods
jecxz
in
aaa
test
pop
aad
repnz
stos
inc
aas
mov
jl
and
cmpsb
lods
xchg
test
dec
sbb
inc
movsb
pop
push
fisttpl
sbb
and
sub
cmpsb
in
push
fst
mov
imul
sbb
and
jle
fcmovne
lds
fisttpll
fwait
fwait
cltd
xchg
test
push
out
xor
out
inc
pop
loop
movswl
adc
ja
jg
in
rep
xchg
test
stc
je
sub
xchg
loopne
int
jno
js
push
xchg
movsb
push
andb
mov
movsl
in
push
dec
push
mov
sub
popa
fists
push
notl
sub
lret
fcmovnbe
adc
data16
mov
mov
aad
xor
pop
call
jg
fistl
mov
sarl
into
in
lcall
add
adc
cmpl
mov
pop
aam
or
xchg
xchg
bound
scas
stos
jle
aam
aam
push
pop
gs
sti
rol
aam
jmp
adc
fidivl
or
dec
pop
fildl
mov
insl
fistpl
adc
lods
jecxz
cmp
push
into
inc
fisttpl
dec
scas
mov
aaa
sbb
and
mov
push
inc
ja
pushf
jecxz
jno
push
call
xor
fisttpl
push
cwtl
dec
jae
or
inc
mov
lea
ficoml
lcall
pop
dec
mulb
inc
fistl
jp
sub
pop
xor
push
insl
ja
loop
mov
mul
xchg
cwtl
fildll
jmp
loopne
sti
inc
inc
cltd
sbb
xor
cmpsl
sar
push
xchg
ret
mov
xchg
imul
dec
xlat
sbb
pushf
mov
cld
ljmp
xchg
cltd
xchg
in
adc
das
mov
je
inc
add
jae
aas
int
cmp
adc
mov
dec
xlat
loopne
and
bound
push
pusha
pop
popa
sbb
into
ljmp
fisubrl
mov
notb
scas
lret
outsl
lcall
xor
sub
add
out
push
in
fstp
je
js
mov
or
pop
jmp
repnz
sbb
and
subl
inc
call
arpl
xor
dec
or
jmp
scas
cmp
cmp
ljmp
aaa
pop
cmpsl
scas
inc
adc
or
aam
fisttpl
fwait
roll
and
mov
hlt
push
rcrb
outsb
fnsave
push
subb
fcomi
ds
jecxz
cs
inc
fistpl
add
mov
push
popf
dec
jbe
clc
xlat
jnp
or
mov
mov
int
sbb
jp
das
inc
cli
mov
push
pop
add
push
loope
shr
orb
in
sbb
stos
movsb
push
pop
dec
and
subl
inc
and
push
adc
xchg
dec
dec
sub
aas
dec
fildl
out
pop
fldt
pop
shr
cmpsb
cli
fcomi
push
or
out
xor
aad
adc
nop
mov
mov
jmp
ss
cwtl
adc
adc
out
int3
es
adc
push
push
test
push
xchg
cmc
addr16
mov
xchg
push
sbb
cld
pop
fstpt
movsb
add
cmp
xchg
pop
jg
les
es
loop
cmp
pop
out
push
sahf
imul
enter
fistpll
xchg
loope
shl
out
mov
loopne
in
cmpsb
ljmp
jbe
mov
push
stos
and
std
repz
cmpsb
pop
push
ja
fisttpl
repnz
in
push
fstpt
cwtl
nop
fcmovne
mov
bound
cmpsb
scas
in
out
idivb
sbb
arpl
mov
popa
or
pop
sbb
adc
jle
mov
cmp
je
cmp
bound
aas
fistpl
jecxz
lret
ja
add
dec
arpl
in
pusha
push
xor
mov
fnsave
pop
and
add
add
rcll
inc
sbb
repnz
cmp
jb
in
add
dec
lock
fcomip
xor
daa
cmpsb
mov
mov
cltd
loop
ficoml
jmp
outsl
mov
scas
mov
fildll
and
fisttpl
movsl
lea
fucom
fimull
aaa
in
mov
in
fstpt
jle
push
dec
jne
stc
xchg
push
cmp
xor
jp
jle
popa
gs
fstpt
pushf
mov
in
clc
sbb
cltd
fimull
leave
icebp
xchg
fildl
mov
ljmp
fcmove
inc
cli
inc
and
aaa
fistl
ds
jne
push
test
dec
adcb
xchg
mov
loop
jno
dec
xor
fldt
lea
or
pop
push
sbb
xor
out
insl
push
mov
jo
cltd
jno
fcmovnu
pushf
arpl
dec
lret
mov
out
data16
sub
mov
std
dec
stc
cli
mov
add
adc
mov
repz
dec
lock
mov
outsb
or
sbb
loopne
dec
adc
repz
fcmovnb
xchg
cmpsb
aad
scas
int
add
inc
fistpl
mov
push
dec
mov
push
imul
aaa
filds
mov
fildll
addr16
cmp
and
bound
fstpl
xchg
lods
shl
inc
cmpsb
sub
jmp
xchg
cltd
fstpt
cmp
jne
loope
in
cmp
push
mov
gs
or
fistpl
and
jo
js
mov
cltd
mov
icebp
idivb
mov
lock
in
fisttpl
mov
xchg
mov
cs
std
dec
adc
xor
repnz
and
add
int
std
and
addr16
sub
inc
loopne
cmc
in
divb
mov
shlb
pop
mov
cmp
fistl
icebp
sbb
out
or
fstpt
lock
cs
mov
addr16
fdiv
push
aad
ficompl
cmp
jl
sti
jae
je
dec
mov
jno
hlt
jmp
mov
cmp
jae
sub
lret
out
mov
clc
stos
mov
add
xorb
dec
inc
std
nop
in
pop
and
mov
dec
fimull
out
add
call
sub
cld
and
dec
fisttpl
sbb
adc
xchg
xor
rol
sbb
sub
jno
movsl
dec
adc
add
popa
ret
loop
mov
jp
data16
adc
xor
mov
shl
mov
push
sbb
lds
call
xchg
mov
fistpll
imul
inc
rcr
iret
lret
fs
cmp
add
fcomps
out
not
mov
jo
jne
mov
and
pop
test
loopne
xor
cmpsb
das
and
mov
mov
jb
paddusb
jne
push
popf
xchg
cmp
cmpl
roll
gs
loopne
pop
or
call
ret
inc
aaa
pop
dec
nop
mov
dec
ljmp
inc
je
sti
das
pop
repnz
mov
cmp
imul
ret
frstor
or
adc
mov
xor
insl
mov
adc
aam
mov
push
popa
push
push
cmp
xlat
xor
sbb
push
or
mov
das
incb
sbb
mov
mov
fcmovnb
iret
xchg
mov
xchg
jp
pop
scas
aaa
inc
add
inc
aas
fistpl
adc
sbb
dec
or
dec
add
stos
pop
xor
fbstp
inc
inc
mov
xor
jge
add
mov
fisttpl
sbb
call
bound
in
test
nop
adc
and
sbb
adc
cli
pop
mov
mov
adc
stos
push
pop
mov
xchg
loopne
adc
pop
adc
arpl
mov
fldt
add
xchg
fildl
ss
fnsave
shll
mov
test
dec
loope
add
dec
ficoml
push
adc
jmp
push
lahf
sahf
fisttpl
add
fistpl
cmp
rcll
jmp
dec
pop
stos
leave
mov
jae
cmp
pop
pop
push
mov
pop
add
fistpl
mov
xchg
inc
fcoml
outsl
out
outsb
mov
mov
mov
sbb
stos
in
or
jl
test
stos
pop
shrl
ljmp
cwtl
arpl
outsl
fistl
or
mov
into
in
adc
lock
pop
xor
fimull
lahf
xchg
fstpt
iret
jecxz
dec
mov
sub
mov
or
sti
inc
nop
push
das
fstpt
xchg
out
shrb
sub
push
inc
cmp
loopne
js
enter
cwtl
movsl
in
pop
xlat
mov
add
push
pop
add
jb
push
inc
out
fstpt
arpl
jbe
jmp
enter
hlt
sti
jp
xchg
sbb
adc
cltd
stc
pop
in
notb
dec
jge
mov
push
mov
jno
or
xchg
movsl
out
and
fcomi
push
or
mov
outsl
mov
cmp
aad
dec
pop
and
jmp
filds
push
pop
inc
lahf
in
cs
aad
test
add
adc
push
mov
mov
pop
popf
add
mov
icebp
in
push
mov
cld
les
sbbl
push
lcall
jno
jle
or
fcmovu
mov
or
sarl
test
loope
ja
sub
in
add
mov
fstl
ficompl
subb
jg
add
jp
lcall
mov
pop
sub
jg
mov
and
pop
pop
jecxz
rcrl
cmp
loopne
add
push
outsb
fildll
push
and
scas
sti
mov
rolb
mov
subl
stos
sub
iret
test
cmc
push
add
mov
fidivrs
stos
insb
test
push
mov
fistl
aam
scas
xor
fists
lock
lods
icebp
mov
sub
dec
aad
stos
dec
inc
scas
xchg
mov
aam
cmp
mov
or
hlt
inc
in
adc
pop
or
dec
and
dec
shrl
inc
int3
inc
fildll
xchg
sti
test
jecxz
in
push
stos
or
pusha
inc
in
rorl
add
pushf
pushf
xchg
lods
cli
or
and
and
loop
or
into
stos
pop
into
jp
ficoml
outsb
in
roll
cmp
xchg
cmpsb
int
shlb
mov
sub
lock
ret
jg
loop
subb
cmp
das
sbb
fisttps
fimull
in
mov
ficoms
cmpsb
add
add
jp
push
addb
sbb
jmp
mov
push
test
dec
pop
add
or
lcall
fidivs
mov
fwait
sbb
xor
pop
jg
rclb
fisubrs
jle
cmp
hlt
lea
xchg
arpl
mov
add
or
or
lods
jb
pop
leave
cltd
out
ljmp
jmp
and
inc
inc
fistpll
pop
cs
icebp
dec
out
addr16
fldt
lods
and
out
cmpsb
leave
std
cld
pop
inc
xor
repnz
daa
push
fidivs
aam
push
push
js
push
imul
lea
dec
add
or
mov
xchg
cmp
outsb
xchg
pushf
in
pop
sub
add
or
push
mov
mov
outsb
aam
insb
jns
orl
cmp
lock
test
sub
insl
sbb
inc
or
pop
dec
test
negb
fldt
pop
cmc
mov
sub
add
test
jl
loop
and
aas
push
mov
and
sub
mov
mov
inc
idivl
xor
stos
fistl
dec
inc
pusha
jge
fstpt
aam
inc
pop
jmp
mov
push
cmp
xchg
pop
mov
arpl
push
jge
out
lret
mov
insb
js
std
jg
sti
fcmovu
mov
sbb
addr16
arpl
dec
enter
add
cmp
xchg
cmp
into
or
xchg
je
lods
xor
std
sub
rorb
push
sbb
fisttpll
lret
imul
out
jo
out
in
not
xor
jecxz
mov
fidivrs
ja
add
push
aam
incl
push
loope
pop
push
stos
jg
jmp
push
ljmp
call
pop
push
and
mov
or
fldt
aam
push
dec
jns
fldt
sub
std
adc
int
xor
push
jne
push
mov
push
fldt
insl
push
popf
and
xor
jns
xchg
xchg
cltd
clc
inc
pop
jo
add
jae
mov
cvtpi2ps
insl
sbb
xor
pop
rol
lret
test
call
cmp
cwtl
hlt
icebp
fildl
push
dec
adc
lods
fucomp
xchg
adc
add
loope
sbb
mov
fldl
inc
test
in
mov
adc
cs
xchg
dec
nop
loopne
movsb
out
xor
out
add
shl
mov
cmp
daa
mov
loop
out
dec
pop
or
or
lahf
stos
fcomi
gs
bnd
mov
jg
xchg
in
movsb
lret
icebp
cld
sbb
mov
mov
cmp
icebp
push
dec
mov
sub
or
and
mov
pushf
jns
push
adc
sub
add
in
jge
mov
in
xor
fldt
cmp
dec
xor
out
or
fneni(8087
das
lret
ja
add
push
dec
in
stos
inc
sbb
and
jg
add
outsb
lret
sahf
jle
cmpsl
jne
fistpl
call
xor
push
fidivl
mov
mov
enter
ret
icebp
les
jno
fucomi
loop
pushf
adc
and
fistpl
dec
cld
xlat
in
adc
insl
enter
inc
push
pop
dec
test
sar
mul
enter
push
or
and
mov
sbb
icebp
fistpl
cltd
rcrl
loopne
add
jle
cmp
stc
fistpl
testb
outsl
inc
pop
pop
int3
aaa
in
fisttpl
push
nop
pop
cmpsl
adc
ds
out
pop
ljmp
out
jecxz
xchg
push
and
jo
cmp
pop
jne
adc
call
mov
and
lods
push
xchg
xor
ffreep
jo
sbb
fldt
imul
fistl
stc
sub
out
fistl
bndldx
or
fistl
rcrl
js
shr
or
icebp
fistl
mov
in
adcl
xchg
xchg
outsl
add
cmpsl
fistl
stos
cmp
mov
frstpm(287
or
push
xor
mov
loope
mov
fwait
push
pop
scas
adc
cwtl
sbb
scas
lods
add
fdivrl
mov
add
loope
pop
in
and
das
cmpl
mov
bound
adcl
test
rol
inc
iret
movsb
lahf
cmpsl
jp
sbb
test
popa
ret
sbb
mov
negb
movzwl
cmp
sub
or
adc
out
cmpsl
ret
das
pop
shlb
xor
cli
push
out
jl
cmp
fldl
push
movsb
test
cmp
adc
insb
mov
ret
fldt
jmp
mov
in
pop
int3
in
fildl
popf
insb
test
stos
mov
push
idiv
in
inc
inc
pop
out
cmp
addr16
into
imul
mov
fiaddl
mov
and
jge
clc
in
fistpl
mov
xchg
loopne
int
ret
jne
fildl
fistpll
call
dec
jmp
cmp
fcoml
adc
sub
call
test
jle
outsb
sti
out
pop
mov
jge
jae
ljmp
mov
jmp
fisttpl
scas
cli
fcmovu
xor
jns
in
cmp
xchg
and
mov
cld
sti
add
pop
dec
test
mov
cmp
mov
mov
dec
lcall
es
in
lcall
and
pop
fildl
incl
pop
mov
loop
adc
gs
rcr
jns
ss
dec
cmp
ret
or
cmpb
lock
push
mov
scas
and
sbb
sbb
add
jno
adc
pop
and
scas
jg
mov
pop
fcmovnbe
sbb
adc
pop
lds
in
xchg
mov
or
push
mov
pop
clc
pop
and
push
call
nop
dec
mov
fcmovbe
push
sbb
ljmp
mov
leave
dec
jmp
sbb
adc
pop
lcall
in
sbb
inc
fisttpl
stos
scas
inc
fldenv
push
mov
rcr
sti
fwait
rcll
add
ficompl
movsl
rol
mov
mov
mov
sub
imul
mov
and
fstpt
inc
or
cld
xchg
fistpl
fdiv
arpl
icebp
lcall
loopne
das
scas
sbb
cltd
jnp
hlt
lcall
and
fldt
sbb
lret
fstpt
scas
add
sar
jb
xlat
idivb
jge
jnp
pop
fisttpl
popl
fstpt
cmp
pop
fildl
mov
rcr
pop
jl
std
xor
fcmovnb
mov
sti
popa
repz
aas
xor
insb
jmp
cmp
out
fildl
jne
pop
in
pop
repnz
loopne
movsb
ja
mov
loope
ficompl
int3
mov
jae
pop
push
jp
fisttpll
mov
rcrl
jne
stos
bound
cmpxchg
es
fistpl
mov
fildl
ror
pop
xchg
lods
outsb
fndisi(8087
inc
or
pop
lahf
add
push
repnz
mov
inc
jle
push
notl
sbb
sbb
lcall
mov
jae
call
das
mov
or
lahf
gs
xorl
shr
lret
jae
fcomp
fadd
mov
fstpt
sbb
rcll
sub
out
cmp
dec
fisttpl
pop
cs
cmpsl
lret
and
shl
insb
jmp
adc
aam
cld
pusha
pop
pop
adc
inc
in
jmp
mov
lcall
xchg
lret
ljmp
call
cwtl
sbb
push
or
cmpsb
adc
jp
icebp
adc
rclb
jg,pt
inc
lret
cmp
fstpt
push
shrl
movsb
dec
mov
dec
fistl
ds
shl
adc
add
fcmove
jg
mov
push
pop
jmp
push
je
mov
cmp
aam
loop
cs
and
jbe
fildl
push
and
adc
call
pop
mov
jl
sahf
int
sbb
fs
fstpt
mov
push
fistps
in
adc
fnstsw
aad
sbb
dec
fwait
dec
lahf
sahf
mov
mov
inc
add
mov
jno
mov
mov
repz
xchg
fidivrl
js
imul
lret
pop
fstpt
loop
sub
imulb
mov
mov
hlt
clc
inc
sbb
fildl
rcrb
mov
xchg
dec
stos
js
fisttpl
lea
push
jp
fistl
cmp
insl
loopne
jb
ljmp
fisttpl
dec
mov
lods
push
orl
jge
lret
into
xor
add
fdiv
xchg
sbb
stc
xor
dec
cwtl
int
cmp
xor
add
sub
jge
jg
fwait
xchg
push
fidivrl
outsl
cmp
adc
loope
clc
lock
xchg
sub
call
push
cld
insl
cmp
enter
add
enter
fstpt
out
ficompl
push
callw
aad
fmuls
es
fisttps
mov
cmpsb
lret
imul
adc
ds
push
pop
cltd
jmp
inc
std
sub
cmp
repnz
std
and
into
add
xchg
dec
push
pop
fidivl
inc
sub
push
and
in
pop
lea
insl
cmpsl
cmp
loop
mov
lahf
adcb
fnstsw
add
insb
mov
sub
adcb
xlat
aas
jp
icebp
fcmovne
std
fisttpll
lds
fcmovne
lahf
push
mov
outsb
push
cmp
and
shlb
fdivrs
ficomps
ret
ljmp
jp
push
fistl
cmp
cltd
in
fisttpl
and
jb
ja
arpl
ljmp
mov
ds
xchg
rcrb
cmp
mov
cwtl
and
mov
lods
outsb
lret
inc
xor
enter
lcall
cmp
pop
cli
loop
sbb
flds
push
stos
push
pop
repnz
pop
out
cld
nop
jnp
jo
ja
jle
xchg
jge
mov
pop
fadd
pop
lea
das
cmpsb
leave
loopne
mull
xchg
xor
pop
fdivrl
stos
or
out
adc
into
clc
ficoml
fdivrl
ds
mov
xor
and
mov
in
fildl
stos
xchg
lock
in
xchg
lds
daa
xchg
push
lea
jle
dec
rclb
push
sbb
out
xchg
mov
cwtl
dec
mov
pop
cmp
xchg
out
loop
ja
fcoms
fistpl
sbb
hlt
in
insl
adc
das
fcmovb
popa
mov
clc
lahf
int3
nop
aam
pand
into
cmp
fildl
sbb
mov
shl
insl
xor
mov
pop
fildl
dec
or
clc
push
arpl
cmp
rorl
mov
sbb
inc
inc
add
pop
mov
cli
nop
cs
fildl
xchg
push
mov
pushf
inc
nop
dec
cmp
mov
fcompl
leave
xchg
and
pop
fistl
inc
pop
pxor
lock
int3
fcoms
cmp
cs
mov
sbb
xor
movsb
mov
sub
rcr
mov
or
push
in
mov
inc
outsl
jns
adc
test
fidivl
sar
sbb
fadds
fwait
mov
fsubs
leave
pop
cmp
ljmp
pop
mov
xchg
sbb
cmp
xchg
mov
mov
jb
pop
or
add
inc
fwait
test
jmp
mov
jp
fildl
or
mov
insl
and
sub
add
popf
adc
pop
adc
sbb
mov
inc
add
ficoml
imul
les
xor
push
fstpt
stos
push
xchg
jbe
rcr
pop
arpl
rorw
mov
xor
scas
sbb
and
push
fstpt
pusha
gs
ja
pop
fistl
inc
push
in
push
and
mov
call
push
dec
js
add
mov
aad
push
fisttpl
adc
stc
mov
je
mov
xchg
pop
lret
jecxz
adc
inc
jae
sub
daa
loop
cmovp
fisubl
mov
call
aaa
pusha
loop
jnp
sub
fnsave
loopne
testl
push
and
lret
lahf
lods
cli
call
cmpsl
js
push
pop
je
pop
aaa
xchg
push
in
pop
xchg
xor
nop
aam
push
fstpl
iret
cmp
push
mov
dec
call
fcmovnbe
sbb
jecxz
inc
loope
leave
imul
ja
cmp
fstpt
xchg
mov
rol
rcr
cmp
orb
orl
movl
fisttpl
push
testb
loop
stos
sti
aaa
mov
adc
rcrb
pop
and
ds
mov
pop
adc
or
scas
sub
test
fistpl
push
imul
arpl
fldt
ss
icebp
in
pop
ret
pop
jle
fstpt
cmpsl
cmpsb
test
jae
jl
shlb
mov
jbe
or
mov
jnp
xchg
mov
nop
pop
leave
push
add
and
std
testb
in
lcall
fwait
pusha
enter
sbb
xor
or
sti
xor
aam
mov
xor
lea
icebp
inc
xchg
das
call
stc
sbb
pusha
add
fstpt
into
pop
shl
push
ljmp
cmp
stc
mov
sbb
fildl
add
push
aas
lcall
scas
add
pop
in
mov
loopne
mov
jae
shrl
pop
sbb
mov
add
mov
fistpl
cld
imul
outsb
and
add
and
ror
cmp
push
and
and
fistpl
cld
fisttpll
xchg
notb
into
in
fucomi
jg
inc
sbb
pop
sub
xchg
int
dec
dec
add
pop
iret
lcall
sub
fimull
adc
jg
fbstp
mov
fdivrp
cltd
pop
hlt
inc
fcmovne
cmovge
lahf
insl
mov
cmp
push
inc
mov
xor
xchg
int
out
fildl
outsb
pop
loop
xor
and
cli
push
sbb
fcmovnu
xchg
inc
cmovnp
jnp
in
push
sbb
push
jno
mov
push
loopne
rcl
nop
mov
clc
icebp
fwait
mulb
sub
je
test
idiv
in
call
pop
jnp
sub
dec
fldt
insb
call
fisttpl
mov
add
xchg
lock
mov
fidivrl
pop
add
hlt
jmp
js
fists
xchg
ret
fst
pop
jl
adc
push
adc
mov
jle
add
xor
sahf
bound
jnp
fisttpl
adcb
in
sub
sbb
gs
push
ds
ljmp
fldl
cmpsb
mov
ret
iret
aas
mov
testb
xor
cltd
int3
and
addr16
mov
fistl
lahf
lret
add
dec
aaa
sub
pop
ja
int
in
sarb
pop
addr16
movsl
sub
bound
mov
jecxz
add
outsb
push
fistpl
inc
dec
push
push
fstpt
rol
dec
fwait
push
mov
popa
loope
xchg
hlt
fistpl
jmp
shlb
xor
mov
sbb
jo
popf
push
mov
inc
fwait
jle
leave
cmpsb
pop
xchg
icebp
lods
ljmp
push
mov
adc
push
inc
leave
outsb
gs
cmpsb
in
daa
fisubrl
and
and
cmp
fistl
fbstp
jo
or
fistpl
push
mov
push
imul
divb
fisubl
mov
fistpl
push
mov
pop
jae
lret
and
dec
xor
xor
ljmp
push
les
loopne
mov
cltd
jmp
ljmp
inc
je
adc
sbb
das
clc
fsubrp
jle
pop
stos
cltd
mov
into
sbb
and
loop
test
sarl
xor
mov
push
dec
mov
push
rcrb
stc
adc
pop
add
sub
mov
and
aas
push
xchg
xchg
pop
xor
mov
movsl
or
push
push
mov
fucom
sub
bound
mov
dec
dec
inc
test
sbb
in
pop
out
or
xor
jle
fcmovb
sub
inc
das
xchg
cmp
sarl
xchg
jle
fstpt
xlat
jp
jb
and
stc
push
sbb
sbb
out
insl
out
fisttpl
in
out
jnp
pop
fildl
nop
loop
mov
jp
pop
movsl
sbb
mov
add
and
stos
push
pop
test
arpl
sbb
jge
mov
insl
imul
jecxz
aas
inc
jnp
push
into
mov
adc
or
mov
cmp
mov
call
add
pop
and
push
ret
js
loop
pop
dec
ss
cmp
push
inc
outsb
adc
psubusb
inc
mov
xchg
ficomps
adc
cmp
push
jle
fwait
inc
into
insl
popa
das
push
jecxz
mov
xchg
popf
sti
movsl
sti
sbb
jp
jbe
clc
fsubl
mov
aaa
xchg
mov
orl
lock
fistl
shll
rol
fisttpl
fsubs
fwait
mov
push
dec
lods
jl
cmp
std
daa
sub
cld
mov
push
les
or
pop
mov
fnclex
and
shl
sub
loop
adc
fcomi
adc
jno
in
adc
test
cmp
push
insb
cltd
fcmovbe
and
ret
in
rolb
fisttpll
jns
lcall
push
pop
and
leave
ror
fldt
mov
icebp
insl
xchg
xor
fcmovnbe
and
test
cld
or
dec
cmp
push
lret
movsb
lcall
fildl
xor
jns
sbb
int3
testb
dec
mov
cltd
insl
or
popa
fstpt
jo
into
js
clc
fildl
in
mov
mov
pop
mov
lods
mov
fsub
imul
out
repnz
es
cmpsb
fistl
aam
mov
sbb
je
push
shlb
jp
and
loopne
dec
adc
shl
mov
fnclex
dec
cltd
fidivs
out
iret
fmull
fwait
mov
into
xchg
cli
add
cmc
sbb
pop
fldt
sub
rcr
jo
jnp
xor
pop
mov
clc
push
xor
in
push
xchg
into
in
push
lock
fildl
mov
imul
outsl
ljmp
fistl
imul
loopne
iret
rcrl
les
fmull
dec
imul
popf
cs
stos
adc
jae
pop
mov
mov
mov
fcmovnb
mov
hlt
call
sbb
push
idivl
repnz
imul
jae
iret
imul
mov
repnz
pop
xorb
mov
adc
std
in
mov
lcall
xor
lcall
mov
mov
sub
add
rorl
adc
jecxz
cmpsl
lds
fcmove
addr16
xchg
cld
mov
sbb
incb
scas
push
idiv
and
imulb
incb
adc
adcl
lahf
lods
push
loopne
xlat
cmp
ljmp
aaa
stos
scas
cwtl
dec
lahf
shrl
jl
lds
lock
sbb
mov
inc
mov
fisubrl
testl
ss
daa
cmp
mov
sub
inc
add
lods
or
adc
or
out
pop
mov
mov
ficoml
and
jo
inc
xor
pop
inc
sub
outsb
test
cmp
mov
ljmp
pop
loop
clc
dec
lahf
fstp
fists
and
ljmp
cmpb
in
pop
push
cmp
inc
das
or
push
push
mov
mov
leave
insl
inc
jne
lret
stos
in
cmpsl
push
xchg
mov
xor
cwtl
sub
insl
sbb
adc
lcall
out
jmp
fs
jp
dec
incb
jbe
pop
pushf
in
add
loopne
je
fistl
push
outsl
push
lea
fildl
js
subb
mov
inc
sbb
adc
fldt
ret
push
adc
or
fsubrp
mov
pop
push
xorb
fstl
push
xor
xlat
xor
lcall
pop
fucomi
push
cli
ds
aaa
sarl
int
or
enter
outsl
arpl
mov
mov
fmuls
dec
hlt
lods
adc
sbb
push
movsl
mov
cmp
push
pop
stc
les
inc
negb
aas
sub
inc
mov
test
mov
rol
push
sub
mov
cmpsl
fisttpl
iret
ret
jo
push
les
fiaddl
adc
adc
fldt
imul
test
into
rorb
fstpt
mov
imulb
push
outsl
data16
push
xor
insl
mov
out
test
xchg
cmp
pop
lcall
mov
mov
ds
out
ljmp
decb
loopne
sub
adc
lret
mov
daa
pusha
jae
imul
fistps
xor
mov
mov
pop
call
dec
sbb
bound
das
xlat
mov
mov
mov
mov
lcall
mov
fucomp
sub
mov
and
das
fistps
pop
sbb
fisttpl
testl
aam
pop
jmp
in
sbb
push
leave
push
js
push
arpl
pop
stos
lret
jb
jne
out
mov
mov
mov
sub
repz
cwtl
jle
mov
lods
je
jl
jmp
pop
sub
push
inc
adc
nop
leave
jecxz
iret
adc
mov
push
sub
ds
or
int3
out
cwtl
mov
loop
jcxz
test
popf
push
shrl
fidivrs
cld
jnp
insb
les
test
mov
popl
cli
lds
push
inc
popa
imul
cmp
and
jbe
shrl
imul
int3
mov
in
xor
int3
fldl
pop
scas
pop
dec
pop
enter
fiaddl
cld
mov
lcall
ret
xchg
out
dec
push
cmp
pop
es
stos
stos
rorl
add
push
out
inc
lds
rolb
jno
out
fiadds
imul
mov
fcmovnu
icebp
scas
shll
xor
and
inc
pop
out
pop
in
push
and
pop
std
jmp
cmp
pop
pushf
orl
sahf
fidivs
test
sbb
pop
add
shlb
and
push
jne
push
out
leave
mov
jmp
xchg
mov
loope
jp
cmp
sahf
pop
or
outsb
jne
dec
arpl
std
popa
filds
fisttpl
and
pop
push
lret
mov
aas
sti
cmp
push
ss
idivb
mov
repnz
mov
ja
lcall
mov
mov
in
and
xchg
cmc
pop
xchg
loopne
out
lock
cmp
sti
clc
repnz
cmp
inc
pop
inc
mov
cs
cmp
or
and
mov
jge
push
fadd
test
hlt
sbb
outsb
fstp
adc
lea
fiaddl
stos
inc
and
test
in
mov
mov
fwait
pop
stos
repz
loop
xor
pop
push
scas
mov
scas
lods
jge
or
xchg
mov
shrl
sti
lcall
pop
sub
xchg
jge
repnz
adc
or
lock
push
jecxz
stos
dec
lods
xlat
mov
repnz
jl
adc
aad
adc
mov
xchg
inc
push
fwait
insl
xor
mov
push
push
xchg
stos
pop
or
add
push
mov
dec
data16
inc
and
cwtl
cmp
jns
lret
pop
sbb
xlat
mov
ljmp
dec
icebp
pop
or
mov
fpatan
and
lcall
outsl
fisttps
jnp
cmp
inc
jmp
push
and
scas
cmc
xor
adcb
mov
ljmp
dec
jae
mov
pop
movsl
and
fsubrl
cmp
add
push
mov
std
lret
mov
xchg
scas
daa
stos
repnz
test
repz
mov
outsl
sbb
out
leave
sbb
and
pop
push
idiv
out
jecxz
dec
push
enter
popf
pop
stos
mov
shll
push
pop
in
adc
ficomps
cmp
sti
mov
shll
rcrl
insb
xor
lds
stos
sub
lods
cmp
pop
bswap
xorb
or
push
xchg
cmp
push
pop
mov
mov
movsb
add
test
mov
cmpl
adc
mov
fidivrl
scas
jg
movsl
push
jmp
dec
insb
test
and
fistps
jecxz
or
cmp
idivl
imul
sub
inc
cmp
leave
mov
mov
jecxz
cs
cmp
pop
jecxz
or
pusha
cli
icebp
test
icebp
jo
push
shr
dec
sar
insb
aad
mov
std
add
mov
push
xchg
mov
imul
pop
push
stos
inc
and
add
adc
push
add
and
in
pop
sub
test
jb
or
test
pop
ret
push
stos
fdivrl
inc
sbb
int
jge
fisubrs
dec
les
pop
std
or
mov
mov
xchg
mov
dec
mov
ret
jne
movsl
loopne
sbb
mov
fwait
mov
jno
clc
mov
in
ljmp
add
add
fdivl
sub
xchg
fcomps
sub
or
and
jbe,pn
xor
add
dec
sub
xchg
add
push
or
fldcw
jnp
cmpsl
push
cmp
rorb
orb
daa
sti
repnz
dec
xchg
stos
hlt
aam
lcall
xchg
rcrb
mov
rcll
cmpsl
inc
loopne
das
loopne
int
mov
mov
in
jbe
jmp
push
ds
andl
or
cmp
sub
aad
outsl
rcr
mov
or
mov
cwtl
lret
clc
loop
dec
jae
hlt
jae
cwtl
aam
pop
fidivl
lock
ret
pop
mov
push
push
push
movsb
imul
sub
out
xlat
jb
sti
shll
xchg
pop
jb
lock
pop
gs
mov
fldt
lcall
cmovnp
sbb
in
jl
or
xor
xchg
mov
icebp
cmp
jbe
scas
loop
out
int
jo
lods
sbb
in
xlat
inc
test
push
cmpb
or
test
dec
into
mov
sub
je
adc
xchg
shll
insl
fstl
mov
xor
pop
mov
nop
or
mov
sbb
lods
dec
pop
inc
fstpl
lds
jle
shrb
in
sub
mov
ret
dec
mov
mov
ret
insb
iret
repnz
xor
mov
jl
in
adc
outsl
loop
jns
adc
in
pop
pop
out
ret
xor
mov
push
outsl
pop
jmp
mov
pusha
dec
sub
fisubl
xchg
inc
lods
push
xchg
fcmovnu
sbb
test
fwait
dec
jmp
adc
dec
xlat
mov
mov
sti
dec
lods
push
pop
adc
fneni(8087
add
push
inc
cld
pop
push
inc
insl
and
jle
adc
cmp
pop
aas
dec
in
stos
into
cmp
pop
test
push
fcomp
ficoms
addr16
add
lret
fstpt
idiv
push
mov
in
cltd
push
pop
iret
fistpl
mov
mov
sub
push
adc
cmp
and
data16
jecxz
fadd
int
push
sub
int
cltd
mov
aaa
fstpt
stos
mov
fcmovnbe
imul
cltd
out
adc
pop
cmc
bound
movsl
fldcw
mov
fcmovnu
jl
mov
loopne
pop
loopne
dec
roll
sti
rep
and
loop
sub
xor
push
push
imul
int
aad
push
mov
stc
call
dec
fisubrl
fstpt
ljmp
fnstsw
cli
jae
js
mov
loope
rcrb
or
sti
or
xor
or
mov
jecxz
test
out
dec
cli
out
xlat
in
push
fcmovnb
pushl
das
dec
inc
or
imul
fstpl
adc
mov
rcr
jns
lea
jb
mov
sbb
es
lret
and
dec
loop
popa
js
cmp
pop
xor
mov
lcall
pop
fsubrs
rcrl
xchg
add
cwtl
ret
jp
mov
xor
notb
test
pop
push
into
imul
dec
ja
sub
pop
and
stc
fwait
or
and
push
loopne
int3
pushf
sbb
scas
sbb
sbb
and
and
inc
jp
xchg
jbe
or
lock
iret
loop
mov
fildl
loope
insb
jns
rcr
pop
repz
mov
adc
adcb
mov
mov
movsl
subl
xor
hlt
lret
ret
lahf
aad
mov
je
jne
fistpl
cmp
pushl
into
fisttpl
scas
push
adc
inc
sub
inc
mov
lock
fnstsw
ds
jmp
dec
sbb
shll
pop
pop
call
dec
fstpl
sbb
montmul
cmpsb
inc
mov
mov
aas
cld
outsl
xchg
sbb
movsl
shrb
jne
fistl
mov
and
or
shrl
outsl
repz
call
mov
push
sbb
lods
mov
in
add
adc
or
mov
fstpt
adc
popa
fcmovnu
loope
mov
cmpsl
dec
fucomi
lods
jecxz
cltd
inc
jns
fstpt
andb
test
adc
adc
daa
fstl
push
xor
add
call
ljmp
cli
fcom
or
push
add
xchg
lea
and
and
dec
dec
cmc
fisttpl
push
sub
popf
outsb
sti
les
rcrb
push
or
clc
jnp
add
or
in
and
loope
mov
and
or
cmp
cmp
push
fstpt
shrb
push
pop
cmp
mov
les
pop
pop
in
dec
mov
movsl
inc
ret
adc
or
popa
push
loop
into
mov
ret
loopne
nop
mov
push
add
ja
mov
into
push
fnstcw
xchg
ficompl
or
test
mov
or
addr16
lock
mov
sahf
sti
sub
loopne
mov
sbb
sub
in
push
inc
sbb
icebp
rclb
mov
xor
sbb
dec
ds
adc
fstpt
mov
testl
adc
aam
push
jmp
insb
mov
mulb
pop
push
fistps
aas
lea
js
and
leave
aad
lret
outsl
ja
xchg
pop
subl
ret
fcmovbe
inc
mov
movsb
fistl
xchg
add
call
sub
mov
dec
cmp
clc
lret
pushf
sbb
fisttpl
and
das
lahf
lcall
imul
mov
stos
pushf
addr16
frstor
cli
lcall
dec
ss
ljmp
mov
adc
fcomi
into
sbb
jae
jnp
fadds
movsb
xchg
or
mov
mov
rcrb
fcoml
in
ficoml
push
out
xlat
pop
push
cmp
iret
stos
dec
andb
push
inc
mov
ret
mov
lcall
test
ficoml
lock
inc
cmpsb
cmp
popf
cmp
outsb
push
ret
test
sub
popa
fists
cmp
pop
in
or
push
popf
jecxz
aaa
fldt
lcall
mov
or
dec
std
mov
imul
or
xor
cltd
adc
mov
pop
jbe
xchg
repz
lcall
cmp
insl
dec
out
xchg
pop
loop
imul
mov
or
call
and
xchg
sahf
movsb
lcall
lods
subb
call
loop
imul
lret
popf
push
pop
sti
inc
mov
adc
out
xchg
in
fcmovu
cmp
imul
repz
mov
rclb
ljmp
out
js
and
clc
fisubrs
adc
fistpl
fbld
inc
hlt
push
fnstenv
pop
push
out
aas
loop
sbb
mov
pop
lret
cmp
in
fstpt
outsb
push
xor
into
fwait
push
arpl
adc
ret
mov
ja
ret
jle
enter
loope
scas
push
pop
xor
bound
fcmovnb
push
and
lcall
jge
jmp
inc
movsl
mov
xchg
iret
mov
push
push
popf
fimull
mov
push
or
loop
lock
scas
inc
test
pop
fildl
jne
pop
fstpt
fwait
cmpsb
mov
adc
insb
sbb
fnclex
call
cmc
pusha
sarl
mov
mov
jmp
cmp
out
mov
into
and
push
xchg
fildl
push
ljmp
mov
aaa
ficoml
mov
jbe
xchg
in
sub
je
xor
jne
ljmp
lret
sbb
jnp
ja
scas
inc
into
ss
mov
rorl
aas
sub
les
inc
fisubl
jb
fisubrl
xorl
sub
shll
stos
fistl
inc
movsb
jp
sub
dec
cs
call
cmp
and
das
movsb
jl
fcmovb
dec
jo
pop
cli
sub
sub
and
and
add
out
scas
cmp
mov
adcb
jae
cmp
pusha
loope
push
mov
mov
test
loop
fildll
jmp
rcr
repz
lahf
sub
inc
mov
fcoms
fwait
out
sbb
mov
popa
pop
fldenv
fucomi
fwait
out
stos
lea
cmpsb
pop
out
loopne
rorb
inc
loope
xor
jmp
cli
fldt
leave
stc
xchg
or
je
jb
or
jo
and
adc
aad
mov
fldt
jle
inc
fstpt
mov
aam
pusha
int
fcomps
add
mov
jg
lret
fadd
fiaddl
add
push
mov
mov
mov
push
cltd
adc
fstpt
lods
mov
ret
aas
jo
xor
cmpsl
cs
ja
fcomi
out
cmp
lock
and
or
adc
mov
push
clc
xchg
push
imul
test
fisttpl
out
xchg
pop
push
aad
fbld
aam
je
es
push
or
and
push
mov
mov
fwait
dec
lock
les
cwtl
add
es
xchg
fisttpl
jb
mov
lock
cmp
fcmovnbe
xchg
or
test
sub
in
mov
inc
dec
push
cmpl
inc
push
clc
adc
sbb
jp
aas
adc
add
pop
mov
adc
jnp
sub
fildl
cmp
fistl
mov
push
sbb
sub
mov
lahf
mov
shll
shrl
pop
mov
or
add
push
ljmp
jmp
push
aad
in
stos
xor
xchg
fsubrs
sub
fdivr
out
sbbb
in
nop
cmc
js
scas
xor
adc
test
sub
fistl
inc
mov
push
cmc
xor
fildll
xchg
push
out
and
mov
in
cmp
and
out
imul
cld
xchg
std
push
stc
adc
mov
insb
loopne
repnz
roll
dec
lock
cmc
popa
adc
dec
sahf
mov
cmp
jmp
ficompl
cmpsb
jecxz
push
pop
fisttpl
inc
orl
push
pushf
cmpsl
fildl
rcr
psubsb
mov
leave
mov
movsb
pop
fstpt
mov
inc
add
adc
sbb
inc
dec
xor
cmpsb
cmp
retw
xchg
and
add
xchg
lret
fsubrp
jle
dec
gs
dec
mov
sbb
dec
pop
xchg
mov
repz
fwait
xor
gs
jne
sbb
pop
lea
sub
loope
pop
filds
mov
fstl
pop
pop
cmpsb
push
cmp
and
fildl
insl
jl
push
mov
rclb
xchg
lods
add
pop
pop
addr16
and
or
cli
xor
rcr
mov
fcmovne
sub
into
cmp
repnz
call
pop
imul
adc
test
nop
loopnew
shlb
in
int
xchg
sub
repnz
pop
sbb
push
adc
xchg
outsl
jmp
data16
lret
push
adc
aaa
xor
xchg
cli
pop
sub
inc
notb
aam
sub
push
out
dec
mov
and
gs
aad
adc
cmpsl
outsl
loope
sub
add
mov
and
dec
mov
or
arpl
cltd
xchg
fcoms
adc
jo
out
dec
test
hlt
push
shlb
stos
ficoms
inc
sbb
test
xorps
sahf
mov
scas
xchg
stos
xchg
nop
movsb
jns
xchg
xchg
idivb
xchg
std
int
adc
js
loope
xor
pop
mov
pop
pop
mov
in
cmp
xchg
loopne
pop
adc
dec
cltd
xor
ss
xchg
add
inc
add
sbb
scas
and
rorl
fistl
jmp
hlt
inc
sbb
fstpt
imul
daa
or
xchg
gs
jl
fistl
popf
insl
imul
push
cmp
push
stos
mov
xchg
les
insb
sbb
fwait
jb
loope
into
cmpsl
push
fwait
inc
scas
rorb
pushf
nop
les
gs
fldt
xchg
inc
inc
lods
pusha
push
rcr
jno
add
adcl
and
sbb
or
loop
xorl
enter
push
sub
scas
repnz
jge
pop
push
mov
mov
push
lock
repz
add
adc
jno
add
cld
movsb
ret
das
arpl
mov
test
lret
dec
cmp
paddsb
jle
cmpsb
adc
out
or
int3
mov
stos
push
ficompl
cmp
and
sbb
cltd
cmp
sub
mov
push
mov
fildl
pop
cmp
lock
jnp
pop
sti
out
push
in
jp
mov
jae
dec
push
scas
sbb
leave
mov
loope
insb
fstpt
xchg
mov
or
lock
push
sub
stos
cmc
mov
cmp
mov
fcomi
dec
clc
dec
fwait
aas
jne
fcmovnbe
andl
fldt
pop
push
or
jne
fldcw
js
mov
clc
mov
pushf
pop
jnp
xchg
ret
sahf
cmp
ss
icebp
mov
sub
cmp
lcall
lods
pop
cmp
dec
mov
popa
push
sarb
sbb
mov
adc
outsb
push
jmp
sti
rorl
pop
out
cmp
xchg
test
ficomps
lret
push
fisttpll
fwait
daa
divl
rcr
jne
inc
in
sbb
mov
loop,pn
xor
pop
jmp
ficompl
pop
lret
test
cmp
sub
insl
cltd
inc
je
iret
fsubrs
xor
enter
jno
jecxz
stc
adc
fucomi
je
cmpsl
mov
dec
leave
nop
push
pop
bound
mov
mov
sbb
clc
pop
lret
jbe
pop
loopne
mov
fidivrl
dec
je
xor
mov
pushf
cmp
sub
test
and
rcr
xor
add
xchg
xchg
fstpl
test
xchg
mov
pop
jns
pop
scas
pop
out
loopne
mov
pop
mov
sbb
lret
adc
cltd
cmpsl
mov
cmp
add
fcmovu
xchg
and
sahf
add
dec
repnz
cmc
sahf
pop
out
in
loopne
dec
pop
dec
lods
idiv
gs
lcall
out
daa
cmpsl
push
rcll
pusha
sub
cmp
sbb
sbb
mul
xlat
jno
fcmove
push
pop
ficompl
leave
call
sub
cmpsb
pusha
lds
or
inc
ret
int
add
sub
push
jnp
jge
pop
loope
pop
fs
loop
lock
arpl
jbe
in
in
and
adc
mov
pop
fldt
pushl
mov
or
ja
or
out
lcall
fucomi
xor
fs
xor
lods
push
xor
sub
int3
mov
xchg
loopne
lret
lea
inc
gs
imul
pand
push
or
mov
mov
fmuls
icebp
ja
lods
ficomps
inc
rorl
fucomip
xchg
sub
or
cltd
dec
sahf
aam
inc
jo
fsubrs
loop
xor
and
and
lcall
js
scas
nop
fdivs
in
cld
outsb
cmpsb
fisttpl
push
push
add
cmp
sub
js
dec
xchg
fucomi
in
push
xlat
mov
mov
xchg
shr
mov
add
mov
into
movsl
and
mull
lock
mov
or
mov
add
add
int3
pop
lods
jle
lret
add
pop
push
push
fldt
dec
arpl
fildl
jo
push
fistpll
fldt
sbbb
mov
loop
in
cmc
clc
pop
pop
cmpl
js
fdivs
xchg
mov
or
push
shll
push
call
cmpl
and
fcmovnbe
in
xorb
loopne
xor
pusha
cs
imul
push
sub
push
fcmovnu
dec
pop
daa
inc
sbb
iret
fidivrl
scas
jnp
lcall
cmp
inc
jo
aas
fcmovnbe
lock
xchg
clc
inc
push
xor
cmpsl
xchg
and
out
and
stc
or
jmp
stos
call
mov
and
sub
or
adc
xlat
adcb
ret
mov
mov
dec
jno
push
xchg
or
add
xchg
rcll
insl
inc
pop
cmp
xchg
xlat
inc
repnz
mov
sbb
notl
xor
ficompl
fdivrs
repz
out
dec
fisttpl
xchg
cmp
mov
call
mov
imul
xor
inc
xor
pop
inc
cs
ud2
xchg
or
sub
aaa
in
icebp
insl
fdivl
lds
sahf
repz
inc
and
pop
fldt
lret
iret
addl
sub
adc
shll
movsl
mov
inc
fcmovnbe
add
jo
inc
mov
adc
or
in
shl
fwait
inc
cmp
pop
mov
fwait
dec
lods
sub
stc
stos
push
pop
ret
fists
xor
lret
rcrl
mov
repz
xchg
pop
mov
xchg
cltd
pop
das
xor
or
xor
mov
fistpll
pusha
pop
int3
imul
repz
jb
xor
add
pop
clc
outsl
jp
xchg
mov
adc
in
loopne
hlt
adc
negl
fildll
push
test
fucom
dec
fdivrs
sbb
inc
jle
shrl
sbb
dec
je
in
into
fwait
or
adc
cltd
sahf
clc
in
jns
inc
xor
xchg
cli
jno
fisttpl
outsl
leave
push
xchg
icebp
fistpl
popa
pop
sub
mov
out
imul
mov
fcmovu
stos
ss
cld
sbb
add
fisubl
ljmp
inc
movsl
bound
cli
test
add
out
cld
push
out
push
push
push
xchg
out
int3
sbb
hlt
stos
push
mov
xchg
push
jl
pop
repnz
ret
popa
insl
pop
jmp
inc
pop
fistpl
jo
fcmovnb
jnp
ja
and
std
loopne
pusha
rclb
loop
or
mul
out
into
arpl
cld
jle
test
inc
cli
fcmovnb
mov
sbb
fidivl
fldcw
pop
or
pop
dec
adc
mov
pop
iret
and
test
test
lods
fistpl
and
leave
std
ja
outsb
and
dec
out
adc
imull
mov
test
add
xchg
enter
clc
adc
icebp
fucompp
pop
mov
add
fcmovne
test
pop
or
pushf
outsb
sbb
cmp
out
sarb
xchg
lret
push
pop
stos
cli
ja
add
arpl
jbe
push
cwtl
repnz
or
mov
stos
scas
adc
scas
pop
mov
inc
sbb
jnp
pop
xchg
ret
aaa
scas
xor
iret
cmc
push
ss
jl
outsl
push
jp
sbb
popa
int3
imul
mov
test
mov
aaa
fisttpl
adc
mov
fistpll
jle
xchg
les
xorb
mov
roll
add
or
inc
fidivrl
fisttpl
pusha
je
push
icebp
sbb
fisubl
push
mov
pop
xor
and
mov
jnp
dec
inc
or
rol
cmp
std
xorb
fcmovnbe
push
cmpsb
aad
xchg
lea
push
sbb
stos
add
cmp
push
in
pushf
add
and
pop
sti
adc
sbb
jnp
mov
inc
xchg
xor
push
fldt
out
mov
mov
mov
pop
xchg
mov
adc
int
fisttpl
cwtl
into
sbb
out
iret
xchg
fisttpl
dec
inc
cmpsl
xchg
cmp
pop
push
pop
shrl
andl
mov
int
mov
fistpl
lods
fimuls
enter
cld
fbld
xchg
inc
outsl
mov
cmp
icebp
add
pop
pop
shlb
pop
pop
dec
arpl
xchg
shll
ss
push
dec
lahf
xchg
fimull
adc
push
pop
fcmovnu
loopne
sbb
push
aas
jae
jp
mov
data16
fcomi
aaa
lcall
out
adc
test
and
pop
sbb
sbb
push
add
push
mov
imul
fcmovne
sbb
inc
xor
inc
fistl
jns
mov
xchg
push
int3
and
loopne
mov
shrl
test
testb
out
stc
fcompl
iret
pop
test
fwait
hlt
add
xchg
ficoml
sub
icebp
pop
inc
stos
mov
sub
ss
js
aad
jo
fisubl
fldl
cltd
inc
arpl
mov
loope
adc
cmp
scas
inc
inc
mov
lock
out
xor
or
out
push
pop
cmpsl
cmp
or
dec
test
jnp
fstl
aam
mov
mov
clc
out
add
call
add
dec
outsb
ret
fistl
mov
movsb
fstpt
sbb
enter
js
adc
fistpl
popf
sbb
push
xchg
scas
fwait
jns
pop
fisttpl
pop
pop
and
out
fadd
in
mov
mov
fists
jns
shlb
cmpsb
adc
fcmovne
cmp
jmp
test
adc
dec
fildll
inc
jp
fwait
into
pop
imul
loopne
sarl
dec
fucomi
lret
xchg
sub
loop
mov
ss
xchg
call
add
shlb
jae
iret
ror
insl
pop
fucomi
rolb
push
mov
fimull
mov
shl
cmp
call
xchg
mov
mov
pop
popa
pop
inc
test
sbb
sub
jb
and
xchg
bound
arpl
es
outsb
in
push
fidivrl
cmpl
js
es
xchg
mov
adc
xchg
fildl
jne
into
mov
iret
insb
cmp
repnz
stos
add
push
test
movsl
rclb
hlt
loopne
das
or
fdivrl
jb
mov
fstpt
pop
ja
mov
mov
lret
loopne
sub
xchg
cwtl
clc
xchg
push
pop
ja
xchg
xor
idivb
inc
jnp
movl
adc
jo
cmp
or
jmp
inc
dec
add
cmp
stc
mov
mov
lcall
jl
sti
loope
fninit
mov
cmp
fneni(8087
adc
xchg
xor
imul
jmp
insb
mov
xchg
lds
add
mov
or
inc
push
dec
pushf
stos
inc
lods
jmp
lcall
cmpsb
pop
fldt
lods
jmp
pop
bound
push
push
call
adc
roll
insl
inc
fistpl
addr16
xor
pop
fistl
test
icebp
jo
xor
in
int3
mov
in
push
sahf
fistpl
ret
jmp
xchg
push
mov
inc
and
fcoms
repz
ficoml
cmpb
imul
int3
pop
xchg
mov
lock
filds
push
mov
orb
mov
ret
insl
or
adc
xor
mov
daa
mov
hlt
pop
cmc
rcl
imull
pop
dec
push
add
inc
fisubs
jns
rcr
sbb
inc
mov
mov
movl
loope
daa
sub
inc
loopne
mul
sahf
lcall
imul
mov
fisttpl
jnp,pn
mov
test
cmp
dec
and
fcmovnb
jbe
mov
fldt
dec
lcall
mov
jae
sub
add
mov
mov
cmpsb
jmp
sbb
sub
xor
mov
popl
push
pop
adc
sbb
push
pop
idiv
inc
outsb
sub
iret
and
mov
rcrb
lea
adc
sbb
leave
push
test
imul
nop
jbe
xchg
or
sti
or
mov
popa
xchg
and
loopne
sub
fdivrp
and
rolb
popf
cmpsl
add
xchg
push
fcomi
inc
les
push
nop
inc
or
push
imul
shrl
mov
sbb
scas
stos
in
push
add
adc
dec
cmp
cmc
jbe
dec
cli
outsb
int
or
scas
jg
and
pop
ja
data16
ja
decl
cmc
mov
fldt
popa
cmpsb
leave
adcl
fsubrs
out
imul
or
fstpl
stos
fcomps
scas
rol
and
jle
loopne
lods
stos
adc
ftst
or
adc
mov
pop
js
jg
jbe
pushf
inc
adc
jl
ficompl
stc
or
scas
sbb
xor
repnz
dec
xchg
std
ret
jno
push
test
mov
mov
sarb
cmp
xchg
cmc
mov
cs
inc
push
sbb
repnz
out
adc
adc
pushf
xchg
scas
ljmp
or
xchg
in
push
sub
ror
popa
push
mov
lcall
dec
mov
outsl
enter
mov
test
mov
js
int
push
call
out
rol
shl
add
or
mov
push
aaa
or
das
repnz
dec
jmp
fcmovu
unpckhps
mov
cld
fsubrs
pusha
aad
mov
iret
bound
movsb
lods
dec
dec
adc
lret
pop
cmp
xlat
sbb
loope
aas
push
mov
or
mov
fildl
jae
jp
xor
insb
xchg
inc
sbb
bound
push
fcmovnb
aaa
loope
int3
jmp
sar
icebp
xchg
sbb
adc
out
insl
cmp
addr16
lcall
test
mov
dec
xchg
sbb
lea
sbb
and
imul
mov
xchg
mov
push
dec
popa
mov
das
jecxz
dec
shl
mov
inc
gs
lret
jae
fistl
cld
cwtl
lret
mov
xchg
or
fcmovnbe
fiaddl
into
sbb
mov
addb
jnp
adc
pop
push
pusha
push
mov
adc
jno
push
mov
fcmovnu
adc
ror
mov
data16
popf
mov
sbb
cltd
jae
sbb
sbb
pop
and
push
push
repz
or
sub
jle
jbe
jmp
mov
adc
jecxz
fistpl
mov
push
fildl
push
mov
mov
mov
lock
cs
add
xchg
ja
mov
mov
in
jnp
test
repnz
pop
arpl
fnstenv
inc
push
lret
fistps
fisubl
std
dec
jne
fistl
cmp
add
cmc
daa
notb
or
ja
hlt
adc
xchg
bound
nop
mov
xchg
outsb
cmp
out
adc
dec
lret
sbb
push
pop
push
pop
nop
xchg
in
mul
sbb
cmp
cmp
fistl
inc
jl
push
test
sub
inc
movsb
fistps
fisttpl
and
pushl
addr16
sti
jp
in
mov
loopne
popf
enter
aas
pop
fnsave
xor
fwait
pop
fucomi
fidivrs
lods
outsb
scas
add
mov
fs
loopne
in
repnz
pop
in
out
jns
mov
outsb
fisttpl
jecxz
or
std
les
sbb
fldt
inc
jno
and
fists
push
call
in
les
jb
xchg
jbe
xchg
in
dec
insb
adcb
cmp
gs
into
jno
fnstsw
push
mov
mov
icebp
ret
lods
sub
cmp
jnp
adc
push
repnz
and
mov
mov
xor
fisttpl
stos
push
xchg
ljmp
cmpsb
sbb
sub
subb
arpl
ss
cmpsb
std
fcmovnu
or
daa
aas
fistl
adc
mov
cmpsl
stos
fisttpl
push
xchg
ja
inc
jmp
out
jmp
lcall
fstpl
xchg
lret
xchg
push
inc
cmpsl
loopne
and
aas
sbb
fstpl
xchg
les
mov
mov
loop
xchg
and
push
ljmp
push
jl
sbb
je
add
data16
mov
cmpsb
hlt
adc
mov
leave
fstpt
add
sbb
scas
fisttpl
cmovp
or
jb
fwait
pusha
mov
sete
fsub
inc
outsl
xchg
push
fnstenv
fwait
add
vhsubps
mov
test
or
inc
mov
cmp
ljmp
scas
dec
aam
ret
inc
insb
mov
or
fiadds
fcmovnu
add
push
movsb
mov
fisttpl
es
fucomi
pop
cmpsl
sbb
inc
aaa
call
or
cmp
push
push
mov
inc
ficompl
jnp
in
std
adc
cli
lcall
cmc
fstpt
mov
sbb
inc
negl
sbb
dec
ljmp
fcmovne
jo
jmp
fistpl
mov
fcomp
out
mov
scas
jns
neg
out
sahf
cld
mov
mov
loopne
add
cmp
pop
fistpl
adc
cmp
cmp
sbb
out
shl
mov
push
ja
mov
pop
ja
adc
lods
or
outsl
xchg
fldl
mov
iret
jge
xlat
pop
lahf
notl
ja
sbb
pop
cmp
add
leave
xchg
ret
dec
jmp
loop
sub
fdivrp
in
fidivrl
pop
outsl
mov
sub
fcmovne
cmc
sub
fcmovnb
push
sub
fadds
mov
sbb
mov
xchg
fstl
movsb
and
pop
add
ficoml
sub
fisttpl
test
push
leave
sbb
inc
adc
imul
outsl
mov
fimull
arpl
fs
cmp
xchg
mov
mov
xlat
out
cmp
in
fisttpll
pop
add
sbb
sbb
or
ja
lea
je
mov
and
sub
aam
int3
cs
arpl
pop
sbb
inc
jle
add
inc
dec
xchg
bound
push
pop
cltd
test
loope
std
fwait
and
inc
loop
cmp
fbld
aad
dec
lahf
pop
inc
lods
cltd
loopne
jne
inc
mov
or
aas
push
mov
pop
ret
fs
jne
add
jno
leave
and
dec
sahf
adc
das
out
lds
fisttpl
xchg
and
aaa
hlt
lock
pop
xchg
fnstsw
xchg
loope
mov
scas
fbstp
imul
sahf
std
loope
outsl
mov
add
sbb
push
test
jne
sub
jg
jo
sbb
test
stos
es
adc
js
mov
lret
fildl
cli
dec
out
fmull
aas
xor
jmp
test
int
push
push
cmp
lcall
pop
fs
fcmovnb
mov
lods
adc
push
cs
cmp
mov
shr
sub
pop
mov
fs
ret
adc
fldt
or
xorl
cmc
sbb
pop
cmp
add
mov
enter
rol
adcw
cld
fadd
faddl
pop
pop
iret
repz
test
fnsave
mov
mov
or
adc
iret
jp
imul
sbb
mov
mov
mov
add
pop
psrld
into
stos
out
sbb
and
xchg
mov
fsub
jl
pop
ss
stos
and
fninit
int
fisubl
test
xchg
inc
fdivr
fcomi
cmpsl
jecxz
nop
push
or
rcll
sbb
dec
lock
cwtl
adc
sti
xor
pop
sbb
popf
in
fistl
dec
das
inc
sub
fcmovnbe
jecxz
test
loope
push
in
dec
jmp
adc
adc
lods
mov
enter
inc
or
and
ret
xor
out
mov
inc
inc
sub
mov
adc
xor
ret
mov
push
inc
jnp
jg
incl
daa
loop
jl
or
iret
arpl
sbb
pop
int3
cmpsb
ficompl
negb
pop
pop
pop
dec
fldt
xchg
or
rcr
jnp
fldenv
inc
sbb
fstpt
mov
inc
ret
mov
out
clc
sbb
jg
cmp
mov
into
jmp
dec
jge
mov
ret
scas
aad
add
cmpsl
fldt
arpl
iret
sbb
xorb
je
popf
inc
fldt
push
in
fistl
call
xor
inc
xchg
xor
pop
add
cmp
pop
sbb
pop
sub
fstpt
adc
shrl
aas
addr16
jnp
xor
jmp
fwait
mov
pop
insb
out
dec
and
cmovae
aam
add
inc
frstor
pop
das
gs
pop
ss
sbb
loope
add
sub
push
call
lahf
dec
clc
fcmovne
dec
inc
sub
mov
fcomip
mov
aad
cmp
sbb
pop
xchg
cmp
sbb
in
mov
stos
fcmovnbe
pop
popf
xchg
adc
fisubrs
call
mov
loop
iret
mov
or
cmpsb
scas
lcall
sbb
orl
jne
enter
push
lret
lock
mov
mov
popa
add
push
aas
cmp
imul
loop
negl
fildl
adc
lret
push
aad
push
push
outsl
stos
xchg
xor
mov
ljmp
xor
add
insl
mov
adc
push
andb
fcmovnbe
int
lods
into
jl
daa
fcmovnbe
jbe
add
and
xor
cmp
fistl
mov
int3
push
sub
rcll
pop
in
mov
fistl
cmpsl
adc
adc
dec
xchg
pop
data16
loopne
push
sub
sbb
sti
or
imul
sti
mov
fistpl
jnp
or
inc
add
mov
shlb
add
int3
cmpsl
jg
jge
inc
sar
and
sbb
icebp
cmp
mov
jl
xor
inc
outsl
pop
sub
adc
mov
xorb
je
push
push
sbb
int3
clc
clc
in
mov
and
mov
sti
cmp
xor
repnz
sbb
fcmovu
fistl
arpl
fadds
std
fcmovnbe
jge
sahf
mov
out
lcall
sbbb
daa
add
push
stos
fnstsw
or
aaa
mov
mov
int
repnz
out
inc
sti
daa
fisttpl
sar
or
jno
xlat
sbb
addr16
lret
ret
aaa
xchg
int
std
call
fwait
cmpsl
ret
das
fmuls
inc
jae
fisubl
mov
pop
clc
mov
fimull
cmp
fcomi
cmp
jne
jae
mov
pop
sqrtps
das
sti
cmp
lods
pop
or
insl
lods
mov
fistl
jbe
fistl
xchg
sbb
pop
shlb
loop
fistl
test
lods
jl
pop
xor
inc
and
or
fldt
notb
mov
or
cmp
sbb
sbb
je
adcl
addr16
dec
outsl
and
fisttpl
inc
data16
arpl
and
mov
aaa
add
cmp
sbb
fcmove
movsl
icebp
add
mulb
inc
pop
or
mov
fxtract
jg
xor
sbb
fildl
imul
lods
fidivl
dec
clc
jecxz
loopne
adc
outsl
xchg
int
pusha
cmpb
sbb
fwait
shlb
pop
testb
add
push
pop
sub
loopne
sub
pop
add
test
jae
movsb
mov
lret
or
sahf
mov
mov
lods
jp
adc
scas
push
mov
aas
or
push
hlt
dec
pop
cwtl
insl
fistl
mov
or
aad
fcmovnu
mov
pop
or
sub
sbb
sub
mov
aad
sub
cmp
movsl
fcmovnu
sub
mov
fisttpl
dec
imul
add
inc
mov
loop
sub
mov
test
jle
add
push
inc
test
fcomi
dec
mov
fldt
mov
ljmp
fldt
in
ret
bound
fs
xchg
or
out
addr16
pop
test
ret
push
stc
adc
mov
dec
test
fildl
mov
call
call
movsl
jp
mov
mov
ljmp
pop
or
mov
xor
shr
dec
cmp
fcmovu
ds
pop
popa
pop
lahf
xor
mov
cs
mov
lock
in
adc
data16
cmp
sub
or
push
pop
mov
push
popa
sbb
pminsw
push
fldt
xchg
bound
mov
push
pusha
mov
mov
push
sbb
mov
inc
xchg
mov
lock
shl
jb
add
xor
movsb
xchg
sahf
and
sbb
push
cld
out
inc
dec
pop
push
std
imul
fldl2e
lret
dec
js
fstpt
into
jnp
adc
fistl
mov
pop
or
lock
mov
and
loopne
fcoms
mov
xor
scas
pop
cli
sti
adc
xor
or
adc
loope
packsswb
ss
pop
cmp
pushf
or
stc
test
inc
fwait
pop
fcmovnu
xlat
adc
loopne
cmp
dec
mov
fisttpl
sahf
sti
dec
aas
cli
test
add
or
push
lds
sbb
xchg
mov
mov
cwtl
or
mov
push
and
cmp
push
push
cmp
mov
fnstcw
sbb
shll
jns
push
add
pop
repz
loop
hlt
test
mov
cmp
test
xor
push
fwait
or
insb
adc
inc
rcr
push
inc
xchg
lods
xor
jle
cmp
insb
adc
mov
and
fwait
jmp
sti
jecxz
fldenv
push
sub
fisttpll
push
xor
stc
adc
dec
fldcw
xchg
dec
pop
xor
mov
mov
cltd
push
sbb
push
imul
pusha
jl
fcmovnb
inc
push
popl
xor
sbb
stos
daa
fistpl
xchg
push
and
mov
ficompl
not
cs
insb
add
pop
pop
inc
popa
pop
ds
push
push
mov
sbb
mov
or
jecxz
fstpl
fistl
sub
pop
mov
sbb
add
mov
pushl
adc
sub
fistpl
cmp
divb
fadd
cmp
bound
dec
xchg
add
lret
dec
cmpsl
jnp
jmp
in
fistpl
cmp
data16
aam
outsb
mov
push
lcall
iret
pusha
push
cli
sbb
add
push
dec
outsl
fldt
inc
inc
dec
test
out
mov
xor
push
xchg
ja
pop
popa
pop
pushf
mov
call
push
dec
sbb
jle
adc
and
mov
sub
aas
sub
or
fldt
mov
xchg
pop
jp
daa
dec
arpl
xor
scas
jne
mov
int3
orl
mov
shlb
sbb
pop
xchg
lcall
push
or
sub
in
add
into
ror
push
pop
in
in
stos
xlat
sbb
mov
pop
mov
xchg
imul
lcall
inc
fs
mov
add
mov
adc
jbe
test
scas
decl
orl
adc
xor
add
cwtl
movsl
loope
aaa
pop
leave
dec
cmp
push
gs
cmp
inc
cmpsb
iret
dec
add
and
pop
shrl
insl
xor
xchg
mov
sbb
xchg
cmp
jg
lret
mov
pop
jp
fcomi
inc
and
es
mov
mov
lcall
fstpt
out
rcr
push
pop
rolb
outsb
xchg
inc
xor
cmp
loopne
cld
sbb
mov
mov
adc
imul
clc
pop
mov
pop
cmp
rcll
dec
lcall
sub
push
dec
je
fisubrl
xchg
cmp
mov
sbb
sub
into
mov
and
add
mov
or
mov
cmp
or
in
into
push
xchg
in
imul
pop
lods
cmp
pop
cld
adc
bswap
dec
inc
pop
loope
jmp
fistl
ret
jecxz
sbb
fildl
pop
or
fildl
arpl
mov
push
and
and
push
push
fidivrl
int3
out
xchg
mulb
sbb
cmp
sub
ja
andps
fdiv
leave
add
sahf
and
xchg
sbb
jle
loop
data16
or
fwait
test
fldt
loop
fisttpl
sbb
jmp
cmpsl
mov
and
fmul
scas
ja
sub
mov
push
loopne
sbb
mov
sbb
scas
mov
pop
xor
mov
jecxz
push
fistl
cli
rorl
dec
adc
loopne
out
movsl
test
jmp
ret
sbb
pushf
inc
pop
inc
enter
out
jnp
clc
inc
frstor
mov
mov
data16
dec
xchg
jns
mov
test
push
daa
sti
lahf
repz
repnz
mov
fwait
jnp
jnp
fildl
insb
add
ja
hlt
mov
adc
jge
jae
inc
fistl
es
lods
or
stos
cli
adc
lods
or
pop
dec
pop
lods
xor
dec
push
data16
ljmp
loop
jne
fstpl
jl
aad
pop
daa
scas
push
popa
or
call
sub
cmp
add
popf
out
fdivrl
lret
lods
cltd
xor
repz
pop
lcall
loopne
xlat
fxch
jg
icebp
jne
mov
js
in
idivb
sbb
and
fldl
mov
jnp
fcompl
icebp
xor
inc
les
mov
jecxz
sub
out
cwtl
pop
lcall
rcll
push
sbb
push
icebp
push
lcall
sub
sub
cmc
jmp
idivb
mov
sbb
or
sub
inc
nop
aaa
pop
iret
stc
pusha
fistpll
push
pushf
mov
ljmp
add
nop
imulb
iret
pop
lods
cmp
sub
stos
mov
mov
out
repz
ret
adc
inc
ret
mov
sarl
push
jmp
pop
loop
icebp
pop
pop
repnz
jo
or
mov
rcr
sbb
dec
fs
pop
fistl
shlb
push
sti
lea
jbe
adc
and
dec
lahf
fs
in
lahf
popf
pop
and
push
adc
imul
subb
inc
dec
test
mov
adc
flds
stos
in
fsubrl
lods
xchg
inc
sbb
or
movsl
daa
mov
dec
pop
add
in
mov
nop
clc
and
mov
fldl
push
sub
sub
or
push
pop
sti
xchg
adcl
imul
lods
push
mov
adc
leave
lcall
sub
mov
mov
in
test
add
mov
jle
xor
jb
jne
or
fisubs
popf
inc
inc
data16
pop
jge
stos
adc
pusha
lret
leave
les
pop
test
push
or
sbb
aam
sbb
dec
push
xor
das
outsb
scas
mov
xchg
jns
adc
push
pop
test
out
xchg
imul
and
inc
pop
inc
fstl
cmp
arpl
out
push
jle
fstl
fstp
rcll
mov
and
movl
lret
mov
cmpsl
shr
iret
inc
fistpl
shrl
sbb
mov
sub
int3
add
rcrb
xor
lds
dec
bound
loope
scas
mov
jno
and
push
xor
aad
sub
and
xor
icebp
push
in
hlt
daa
int
es
or
dec
scas
gs
flds
sbb
pop
add
and
push
sub
cmc
stos
out
or
loopne
xor
dec
adc
pop
pop
xchg
daa
dec
cmp
lock
sub
fsubr
lods
xchg
and
sub
dec
lret
jb
ret
and
out
jle
sti
pusha
subb
inc
out
push
cmp
push
jno
xchg
mov
outsl
test
cwtl
adc
lcall
dec
mov
cmp
int
es
lds
pop
data16
mov
in
add
dec
xor
stos
cs
adc
cmp
sbb
add
xlat
pop
or
xor
add
aas
push
push
mov
lods
mov
sbb
mov
leave
out
arpl
push
dec
rcr
pop
fisubs
lret
jmp
cs
cmp
daa
and
aaa
push
hlt
stos
inc
jl
fwait
lcall
inc
fcmovb
dec
or
stos
jle
rcrl
mov
xor
pop
lods
jne
sbb
out
rcr
fistpll
sub
test
in
testl
cmpps
xchg
stos
inc
add
push
in
cmpsb
or
or
mov
xor
or
pop
xchg
lds
movsl
lahf
mov
push
lds
jb
or
arpl
loope
inc
gs
adc
pop
ljmp
xor
push
or
xor
fcomps
lods
xchg
mov
mov
lods
xchg
cmp
push
outsl
fldt
xlat
and
das
ljmp
test
faddl
dec
fcmovnb
add
daa
or
jb
shlb
aaa
je
push
lret
mov
xor
dec
or
add
pop
fistpl
fmull
pusha
cmp
outsb
add
cli
sbb
mov
push
adc
cmp
sbb
jg
insb
or
mov
hlt
ret
outsb
pop
mov
es
adc
int
mov
andl
mov
jmp
fldt
push
andb
movsl
lea
dec
cmp
fwait
pop
fistl
mov
movsl
std
jmp
sbb
push
adc
loop
fwait
divb
sbb
cltd
js
out
loop
rol
movsl
fnsetpm(287
aaa
fsubr
ljmp
rorl
sti
fcmovne
nop
add
dec
add
pop
int3
add
das
inc
daa
les
xchg
sub
mov
lcall
neg
xchg
pop
incb
inc
cld
mov
call
pop
mov
fstpt
push
ds
fadds
clc
fs
loop
out
cmp
fucomi
popf
lea
ror
fldt
mov
cwtl
fldt
cmpsl
cmc
mov
lcall
jno
fidivrl
mov
clc
rorb
enter
add
aas
fldt
imul
sub
xor
movsb
or
mov
jl
cmp
pop
das
push
pushf
sbb
insb
dec
out
aaa
pop
mov
mov
int
push
call
out
lock
jp
fwait
mov
in
rolb
cmp
aaa
movb
xor
jo
jl
rorl
cmp
sti
cmp
cmp
das
lock
ficomps
or
pop
dec
stos
jp
insb
pop
shlb
sbb
test
fdivrl
mov
pop
mov
mov
push
adc
sub
sub
rcl
lahf
fcmovne
fsubrl
sbb
in
call
mov
xchg
jmp
sbb
iret
sbb
in
mov
std
shll
pop
movsb
mov
jmp
outsb
mov
push
popf
sub
shrb
pusha
testb
hlt
lds
stos
inc
out
test
retw
mov
mov
into
hlt
icebp
fildl
and
pop
fcmovnb
xor
mov
mov
sub
std
jb
cmc
dec
inc
ficompl
outsb
test
mov
mov
fistpl
stc
in
in
sbb
or
xor
jge
fs
adc
lea
inc
mov
fcmovne
mov
xchg
pop
adc
dec
in
pusha
inc
mov
xor
aam
and
popa
lods
sbb
fldt
jmp
mov
jb
popf
dec
fldt
stos
or
dec
ror
mov
inc
pop
mov
mov
jae
mov
lahf
jno
stos
scas
mov
pop
sbb
push
ficoms
sbb
rcrb
sub
dec
int
js
pop
test
mov
sbb
ds
pushf
sbb
fildl
and
mov
fucomi
mov
cltd
fildll
pop
cmp
and
dec
inc
in
cld
aaa
inc
fidivrs
jo
push
fisttpll
push
mov
xchg
jp
loopne
in
sarb
imul
ss
lret
outsb
les
xchg
mov
add
fildl
lock
push
test
loopne
pop
pop
stc
jmp
negb
pop
roll
mov
xor
hlt
leave
not
insl
loope
xor
sti
sub
pop
addr16
hlt
push
aas
adc
fimuls
lret
pop
in
xchg
ljmp
xor
push
pushf
shll
ljmp
sub
stos
dec
push
or
xchg
out
lods
in
pop
add
cld
fsubrs
jno
jo
fbstp
iret
dec
popf
leave
jns
xor
icebp
adc
pop
fcompl
out
cmp
push
mov
xchg
xor
cmp
insb
xor
lcall
adc
pop
cli
ss
add
hlt
dec
pop
dec
stc
xchg
xchg
and
lea
xchg
and
sub
imul
lret
dec
lods
idivb
sub
ss
call
mov
jae
aaa
cwtl
mov
repnz
push
cmp
loop
dec
int
das
lret
mov
popf
adc
sbb
lods
aaa
call
jl
test
xlat
leave
mov
pushf
test
stos
sub
cmp
pop
lds
in
ja
lods
lods
arpl
leave
or
lds
int3
clc
out
dec
push
scas
loopne
jmp
in
mov
jo
cld
or
aaa
int
cmp
gs
call
loopne
inc
movsb
cli
xchg
and
cmp
or
xchg
dec
mov
sub
gs
mov
inc
jbe
ret
dec
cmpsl
adc
test
stc
lcall
int
xchg
fwait
jp
lret
mov
adc
movsl
dec
in
loop
sbb
push
lods
mov
cltd
stos
call
cmp
pop
adc
iret
add
popa
cmpsb
lods
jnp
pushf
in
cmpsb
xor
xchg
fcoml
or
push
cmp
gs
add
pop
push
push
cmc
pop
data16
packsswb
sub
jns
pop
sbb
daa
fisttpll
test
imul
cwtl
daa
repnz
stos
nop
jge
jmp
repnz
push
outsl
or
jns
add
cltd
and
je
inc
xor
pop
in
sti
fisubl
push
in
sbb
test
xchg
fs
mov
jnp
and
mov
fldl
test
jmp
sbb
xor
push
jno
mov
lock
lret
fiaddl
pop
out
fldt
push
xchg
in
jge
cmp
and
out
jg
cmpsl
mov
push
rcrb
dec
lahf
xchg
aaa
fistpl
mov
and
mov
ljmp
pop
fistl
dec
rclb
fucomi
mov
int
xor
xchg
lock
adc
dec
pop
mov
into
pop
pop
add
sti
cwtl
mov
aad
mov
pop
shl
sub
mov
aam
xchg
es
andl
pop
sbb
mov
or
mov
dec
or
jns
xchg
mov
xchg
lret
xchg
sbb
je
fcmovu
cmpsl
repnz
scas
lahf
fsubr
jle
repz
stos
mov
aad
bound
lea
or
inc
jmp
fwait
sahf
scas
testb
scas
push
fnsetpm(287
xchg
sti
cli
mov
jae
call
lcall
jg
aad
adc
mov
push
jns
cli
pushf
xchg
icebp
push
repz
jp
mov
fisttpl
mov
xchg
loopne
ret
push
pop
dec
push
dec
fcmovne
push
nop
mov
fldl
inc
inc
xorl
push
popa
push
fiadds
int
cmp
jecxz
pop
add
adc
jb
mov
es
cmp
add
mov
or
dec
and
lahf
mov
hlt
mov
jle
push
aas
jl
subl
dec
cmp
jne
and
fistpll
push
mov
mov
jbe
sub
and
pop
and
mov
fistl
fbld
push
out
xchg
pushf
loopne
ljmp
in
jecxz
jge
jns
loop
data16
fsubr
add
jg
push
pop
fcompl
ror
aad
adc
dec
xchg
mov
jo
icebp
push
fs
push
in
cmp
test
pop
sub
in
loop
fistpll
mov
ljmp
jl
jge
ret
dec
xor
sahf
loop
and
jge
loope
icebp
jmp
nop
jl
ss
push
stos
testb
or
push
sub
shl
jmp
fcmovbe
mov
lret
into
adc
aad
int3
sub
bound
lods
repnz
outsl
shlb
in
mov
gs
mov
pusha
xchg
adc
and
adc
sarl
rorb
push
xor
cs
clc
push
xchg
or
xor
push
enter
addb
icebp
xchg
mov
out
ror
mov
stc
jmp
mov
mov
leave
mov
cmp
mov
pop
push
loop
cmp
add
lods
adc
jnp
xchg
fildll
push
dec
cmp
pop
or
ss
test
dec
shl
pusha
int
push
fisubs
cld
js
shlb
enter
addl
jae
push
leave
hlt
cmp
addr16
fisttpl
leave
push
stos
inc
lock
stos
lock
sbbb
mov
sbb
daa
dec
rorb
push
or
inc
cmp
sbb
fisubs
lods
jne
dec
or
hlt
out
out
cli
cld
adc
in
adc
loop
rcr
stos
dec
test
mov
sub
std
bound
clc
outsl
in
sub
mov
or
stos
rorb
and
lods
or
aad
and
test
in
mov
sub
fildl
adc
push
mov
repnz
and
sbb
push
loop
negl
pop
pop
fdivrl
hlt
jmp
ss
jecxz
and
mov
pop
adc
push
ret
cmp
dec
pop
fnstsw
fs
pop
adc
sti
jbe
or
and
pushf
and
scas
inc
or
imul
adc
ja
outsl
jl
adc
pop
cli
pop
orb
mov
scas
fldl
push
inc
pop
jecxz
cmpl
xchg
sbb
mov
xchg
cltd
xchg
mov
pop
in
and
cmp
add
inc
jne
das
xchg
fcmovnu
xor
push
push
aad
pushf
mov
xor
pop
jmp
adc
mov
pushf
cmpl
leave
cmpsb
insb
mov
les
fistl
cmpb
sbb
out
inc
jae
jp
sti
adc
mov
mov
test
mov
inc
or
cli
lret
mov
fildl
lods
cmpsb
xchg
sbb
into
cmp
cmp
adc
and
fprem
pop
adc
es
jnp
out
sti
add
movsb
fildl
add
repz
in
jmp
out
push
cmp
sbb
out
lret
sbb
cld
and
sahf
mov
test
dec
fnstenv
and
dec
movsl
xchg
icebp
cmpsb
jo
and
dec
pop
mov
pop
or
inc
ret
fistpl
outsl
push
jne
sbb
pop
fistpl
inc
push
repz
mov
mov
fldenv
fistpl
mov
lds
push
or
loopne
push
dec
fnsave
push
cld
js
jae
and
mov
inc
push
ficoml
cmp
jns
stos
fcmovbe
mov
aas
stos
mov
in
or
int
call
and
call
dec
cmp
jp
dec
cmp
fimull
scas
fcomi
mov
and
dec
iret
stc
loope
mov
jmp
xlat
jbe
iret
out
fcmovnb
lret
repnz
xchg
popa
fnsave
cmpsb
mov
jnp
cmp
push
cs
mov
push
imul
fs
add
movsl
dec
sbb
mov
sbb
insb
nop
mov
sbb
push
add
sbb
inc
adc
fsubl
jb
mov
bound
mov
sahf
out
jmp
ds
adc
pop
jmp
sbb
sbb
call
mov
fldt
lock
fildl
push
jae
sbbb
adc
mov
frstpm(287
test
testb
xchg
fldl
ja
jae
dec
fisttpl
fdivr
mov
aad
fisttpl
jg
sub
mov
xorl
push
cmp
push
pop
lea
and
fcmovnu
mov
fmull
in
inc
or
fisubrs
mov
jle
in
jnp
or
jmp
pop
inc
mov
inc
mov
ds
jae
loopne
js
bound
addr16
loope
and
adc
add
sbb
and
dec
and
dec
xor
lahf
shr
adc
adc
hlt
xchg
fdivs
push
cmpsb
xchg
cmp
nopl
fcmovne
xchg
ficoml
ja
push
std
sti
xchg
loopne
sub
mov
mov
fnstenv
test
xor
shl
aad
fwait
out
neg
pushf
pop
mov
cld
call
jp
xlat
mov
mov
mov
cld
xchg
pushf
ja
sub
fistl
mov
lds
stos
xor
test
repnz
mov
dec
and
mov
lods
push
sub
testb
cmp
push
dec
mov
mov
push
out
pushf
add
fcmovne
scas
inc
adc
sub
add
cmpsl
sub
jb
fstpt
pop
shl
pop
leave
sbb
lahf
lods
ds
xor
dec
sbb
adc
inc
xor
mov
das
aaa
mov
push
add
lret
sub
in
xlat
push
es
mov
call
loopne
test
mov
ds
mov
aam
xor
or
mov
test
sub
jb
out
and
fdivr
jns
ret
arpl
outsl
mov
aas
enter
jg
fisttpl
pop
in
xchg
add
dec
xchg
bound
xorl
cmc
fstpt
lds
and
dec
mov
xchg
pop
outsb
lea
fildl
jp
mov
mov
shrl
push
ror
rclb
inc
pop
popa
lret
movl
push
dec
inc
fnsave
sti
pop
mov
je
ret
jo
fisttpl
imul
movntq
out
int3
push
lcall
or
pop
sub
sahf
mov
scas
xchg
add
iret
repnz
frstor
cwtl
mov
sbbl
cmpsb
mov
je
out
loop
fildll
and
clc
inc
lds
fcmovb
cwtl
pop
rcrl
xor
flds
repz
push
pop
cmp
lahf
push
cmpsl
inc
push
inc
pop
mov
dec
insb
mov
fldt
cmp
sub
stos
or
loopne
fistl
jecxz
mov
outsb
pop
sub
add
pop
fistl
enter
inc
fnstsw
jmp
shl
jg
fisubrl
xor
fldt
add
or
mov
out
cmp
lock
add
fstpt
cmpsb
loop
push
fnstsw
mov
cmp
push
mov
adc
rcr
or
lret
insb
rclb
outsl
pop
aas
dec
clc
into
cmc
xor
lock
cmp
clc
insb
vcvttsd2si
xor
fistps
jecxz
sbb
and
notb
jae
and
in
mov
cltd
hlt
and
incb
inc
push
mov
pop
fistl
mov
xor
pop
inc
neg
sbb
call
or
clc
fucom
in
mov
lea
mov
in
mov
jmp
push
and
sub
out
fstpt
data16
fstpt
push
cwtl
ficoml
or
call
movsl
cmp
repnz
stc
out
adc
push
adc
cmp
filds
add
jo
fldt
xor
adc
mov
lock
repnz
fcompl
testb
aaa
fstps
mov
push
ljmp
fildl
cmp
je
and
add
dec
xchg
jle
out
fisttpl
test
jge
or
sbb
enter
and
cmpl
mov
das
fwait
mov
push
aam
inc
push
fldt
jbe
dec
fnstsw
or
fcomp
dec
movsb
lods
xor
lea
nop
orl
loopne
fstl
popa
inc
addr16
pop
fisttpl
adc
loopne
push
mov
cmpsb
lret
jp
inc
cmp
push
push
sbb
pop
div
out
inc
sbb
lds
rcrl
jle
inc
int
js
call
mov
enter
aas
scas
fisubrl
mov
call
jp
push
push
mov
fimull
inc
ficompl
int3
fcmovne
out
iret
pop
lahf
add
ret
jae
sub
filds
mov
cld
stc
std
sub
xchg
dec
xchg
jbe
call
shlb
in
and
push
inc
sbb
sbb
dec
cmp
gs
xchg
sub
adc
xor
int
call
push
call
dec
jl
ret
pop
ret
cwtl
mov
popa
nop
lea
push
xchg
dec
and
div
jmp
fstpt
mov
jp
andb
fsubp
sarb
hlt
or
repnz
aas
pop
mov
enter
loop
xchg
stos
repz
stos
fstpt
add
fildl
push
sub
loop
mov
xor
sbb
sbb
mov
ja
add
in
mov
inc
sub
iret
or
sbb
cli
mov
out
sbb
stc
jp
cmpsb
push
call
int
push
mov
adc
clc
imul
cltd
fcmovne
mov
pop
call
ret
push
aas
cmc
xor
icebp
shr
inc
mov
jae
and
push
cmpsb
push
xor
xchg
lods
cli
dec
mov
mov
repz
popl
dec
movsl
inc
in
idivb
stos
sub
xchg
outsb
xchg
roll
hlt
cmp
jle
scas
push
addr16
cmpsb
xchg
sbb
pop
or
in
cmp
aam
aas
push
stos
pop
shl
push
loope
jo
das
push
in
jno
push
mov
mov
jp
fsub
pop
fidivs
aas
pushf
mov
xchg
sub
into
std
cli
cli
outsb
aad
in
xor
aas
or
push
pushf
inc
sbb
ljmp
mov
lods
push
xchg
ja
sub
dec
nop
xchg
in
dec
xor
jns
sti
or
xchg
cld
stos
in
pop
cwtl
and
mov
xchg
cmc
cmp
arpl
inc
lret
mov
cmc
lods
sbb
mov
jg
icebp
fimull
dec
jmp
lret
dec
dec
xchg
in
mov
int
or
fidivs
stos
in
fdivrl
js
mov
push
pop
push
and
xchg
shll
dec
or
add
call
xor
inc
and
clc
and
lcall
stc
jae
adc
mov
sbb
push
outsl
fcmovne
lcall
mov
fistpl
popa
mov
repnz
or
enter
mov
ret
mulb
xchg
sbb
popa
fistl
mov
mov
and
push
mov
pop
xchg
push
mov
lods
in
or
inc
pop
mov
add
dec
jnp
fidivl
imul
jo
xchg
bound
dec
pop
neg
pop
sti
jecxz
sbb
ja
fldt
jl
and
xchg
fcmovnb
jp
inc
sub
push
ds
mov
test
loopne
mov
jmp
dec
sbb
jmp
pop
mov
mov
cmp
imulb
xchg
mov
dec
fwait
cli
pop
sti
xchg
push
out
das
lcall
xchg
push
idivl
je
lcall
push
int
daa
gs
and
fcmovne
mov
cwtl
push
jge
inc
call
js
test
les
adc
sub
fucomi
adc
stc
fbld
add
jg
fistl
fbstp
imul
or
sub
push
fcmovnu
xor
mov
frstpm(287
push
mov
mov
inc
data16
fldt
insb
cmpb
xor
fcmovnb
inc
or
add
mov
out
cmp
pop
sbb
loop
jbe
enter
std
js
fwait
aaa
movsb
fisttpl
loope
pusha
add
cmc
xchg
sub
dec
xor
and
ss
sbb
lods
adcl
sub
mov
adc
popf
and
es
test
xchg
fbstp
inc
clc
fstpt
pop
mov
mov
enter
and
insb
test
adc
and
and
hlt
mov
aad
mov
sub
xchg
test
addb
jne
fildl
jmp
iret
xlat
gs
push
cmpsb
imul
sub
sbb
push
adcl
cmp
out
fninit
cld
xor
jge
stc
adc
mov
and
mov
or
or
sub
sti
insl
fstpt
sub
test
aad
pusha
test
inc
notb
jnp
js
add
mov
fcmovbe
leave
or
movsb
mov
push
int
and
mov
test
jnp
daa
push
out
orl
push
test
dec
cmc
je
push
push
add
fstpt
pop
cli
inc
cmp
jle
xchg
fidivrl
imul
scas
int3
mov
dec
andl
aas
xor
lock
fcomi
out
xor
adc
push
fildl
lret
sbb
xchg
push
fstl
and
fstpt
sbb
inc
or
insl
jbe
pop
call
ja
fcomps
fldt
push
or
push
pop
shl
push
xor
mov
lahf
call
pusha
cmp
loopne
in
inc
xlat
xchg
adc
fldenv
fstpt
mov
cs
fcmovnu
jle
in
dec
sub
test
testl
add
add
mov
sub
jl
pop
adc
add
push
mov
ss
scas
out
pushf
push
fisubrs
xchg
shll
mov
jo
scas
fcmovnb
mov
int3
fistl
ja
bound
lcall
clc
in
and
fcmovnb
dec
jae
sahf
mov
idivl
pop
scas
in
lds
call
test
fsubrs
dec
dec
fucomi
into
sarl
xchg
inc
fldt
divb
dec
push
jno
out
inc
lret
jg
enter
arpl
xchg
mov
into
dec
fstpt
and
mov
cmc
jo
add
fstpt
sbb
movsb
xor
lock
lret
jbe
sbb
adc
mov
or
in
pop
adc
inc
rcr
test
pushf
push
dec
xchg
movsl
fldt
mov
fstpt
frstor
or
fistpl
lods
adc
fistl
mov
fists
push
push
and
fldt
leave
jno
jge
sub
xchg
mov
jo
and
cli
divl
xchg
js
sub
leave
in
or
and
jae
lods
push
sub
push
adc
jmp
int3
mov
ja
mov
jne
lcall
mov
add
ljmp
enter
ss
fnstcw
out
popa
gs
fistl
jno
xchg
ds
sbb
pop
sbb
inc
inc
mov
cmp
loope
sub
cmp
sbb
push
loop
push
aad
clc
les
cmp
cmp
dec
mov
into
adc
mov
mov
scas
inc
cmpsw
test
sbb
popf
xchg
mov
inc
aad
enter
mov
add
ljmp
jo
xchg
inc
fwait
in
js
in
sbb
mov
out
fdivrs
sbb
mov
into
or
fstp
iret
xchg
cwtl
and
js
in
int3
pop
cld
pop
mov
mull
sti
or
fstpt
out
push
push
mov
jp
fimull
cmp
fcmovnb
xchg
pop
mov
inc
shll
push
outsl
ret
stos
jb
shrb
pop
out
inc
jp
jbe
dec
in
in
jge
pop
aas
mov
mov
pop
sub
or
lcall
mov
fnsetpm(287
jl
shlb
fsubs
out
and
or
fistl
inc
in
imul
cmc
pop
jno
iret
pop
fmul
dec
cmpsb
fcmovne
pop
sub
adc
pop
mov
insb
lcall
mov
idivl
bound
cmp
fldt
pushl
ds
jg
xor
dec
sbb
add
loop
ficompl
xchg
cmp
sub
pop
add
lahf
decb
push
scas
fiaddl
loopne
scas
dec
test
push
ljmp
jg
sbb
sub
add
es
sbb
fcmovne
pop
mov
mov
add
ret
push
and
sub
mov
hlt
jae
iret
fldt
and
shll
mov
js
and
cmp
pop
cmp
add
dec
jno
mov
xchg
fistpl
leave
xor
repnz
push
popa
rol
faddp
pop
clc
or
jl
push
int
add
jb
cli
lock
add
inc
fstps
loope
das
dec
mov
cmp
ljmp
incb
add
or
in
mov
fcmovnb
or
xchg
iret
mov
in
pop
xchg
cmp
rcr
xchg
jmp
mov
xchg
xchg
and
mov
loopne
xchg
negb
arpl
mov
sub
shr
inc
and
cmp
dec
and
enter
add
fistl
aad
ljmp
fucomi
subl
fisttpl
nop
jg
lds
dec
xlat
loop
push
pop
sub
push
popa
dec
jmp
ds
call
adc
xchg
les
jns
hlt
popa
lds
mov
loope
adc
jno
fldt
mov
lods
cld
or
mov
cmc
in
scas
xchg
jl
jp
jno
fistl
out
sbb
push
mov
adc
fistps
cli
movsl
add
cld
sbb
adc
cwtl
sahf
call
lret
gs
fcomi
dec
xor
mov
cmpb
xchg
notb
mov
lret
sbb
and
xor
cmpb
fldt
test
push
das
mov
push
pop
push
sub
inc
ror
mov
fstps
jne
pop
cmp
mov
popf
pop
xchg
mov
scas
push
pop
loopne
stc
xor
ja
dec
inc
popa
sar
stos
pusha
in
adc
or
push
int
ja
out
add
pop
adc
xlat
pop
fisubl
roll
inc
fbstp
in
mov
pop
dec
sub
mov
ljmp
pushf
jno
popa
dec
mov
and
sub
mov
fisttpl
fcompl
fistps
fldt
xchg
inc
cmp
shl
sub
fiaddl
stos
call
test
pop
shll
mov
push
les
divl
pop
test
mov
fildl
je
jmp
lcall
xchg
pop
ss
loope
pop
xor
imul
push
mov
push
mov
int
std
loope
add
sti
loop
scas
nop
rcrb
psllq
lahf
dec
mov
dec
aaa
test
loope
loop
jo
imul
je
imulb
js
xlat
cmp
scas
and
dec
or
fisttpl
repnz
frstor
xlat
dec
in
stos
mov
add
lcall
mov
addb
mov
jb
ds
popf
fs
cmp
jge
fsub
lock
or
out
nop
push
fcmovne
decl
ficomps
push
or
push
bound
dec
dec
add
pop
mov
xchg
into
in
icebp
ficompl
cld
cmp
xchg
and
add
or
test
arpl
jmp
adc
mov
int
roll
jmp
push
cmp
clc
repnz
jp
cli
mov
scas
inc
fnstcw
lock
rcrl
fwait
jns
cmp
addr16
lods
push
jo
mov
mov
sahf
imul
xchg
pop
mov
jp
jp
pop
push
dec
imul
int
clc
fisubs
and
dec
sbb
dec
arpl
mov
cmp
jb
sbb
fwait
shrl
mov
test
adc
ja
or
lret
push
repnz
push
push
push
pop
imul
xchg
pop
sbbb
leave
stc
cmp
fsts
pop
fidivrl
mov
or
dec
arpl
jmp
loopne
lcall
sbb
or
fucomip
test
or
add
xor
mov
in
jnp
in
lods
adc
test
xchg
clc
sbb
jae
fwait
lods
dec
iret
mov
aad
sbb
stos
std
mov
add
push
jae
xchg
jb
xor
stos
jle
rcrb
or
in
insl
es
enter
sbb
xlat
js
fdivrp
mov
adc
lods
call
out
in
push
imul
lea
loop
in
repz
jae
mov
mov
outsl
cmpsb
stc
adc
cmp
lods
pop
mov
mov
mulb
jnp
adc
pop
stc
iret
jp
arpl
shl
or
fisubs
addr16
cmpsb
sub
add
pop
aas
push
fs
adc
push
adcb
push
mov
test
or
jl
outsl
pop
loop
sbb
inc
or
jo
scas
leave
xor
cmp
cmp
out
clc
sub
xlat
fcmovnu
or
push
outsl
mov
out
adc
push
cmp
loope
shlb
sub
int3
fucomi
fs
int
mov
pop
fisttpll
movsb
adc
imul
inc
loop
loopne
mov
shl
inc
or
xchg
lcall
fildl
mov
and
xor
mov
sbb
sub
fisttpl
insb
cltd
cld
sub
hlt
mov
cmp
sbb
jno
loopne
shll
pop
fstpt
icebp
jae
negb
loop
movsl
leave
cmc
call
jge
xchg
sti
cmpsl
call
sbb
xchg
mov
push
adc
adc
fistpl
fsts
push
ret
mov
je
xor
dec
fildl
lret
add
xchg
cmc
ficompl
jle
lods
mov
cmp
pop
fcmovnu
dec
mov
mov
test
add
ret
outsb
scas
mov
clc
sbb
push
ljmp
loopne
loope
js
cmp
push
fistl
xor
sbb
push
adc
adc
add
test
test
jnp
or
sbb
cmpl
stos
fcomi
lock
cs
iret
push
int
inc
push
mov
cld
cwtl
sub
jecxz
cmp
sbb
lods
cmp
xchg
je
stos
push
cltd
add
sub
pop
add
outsl
inc
or
adc
cmpsl
push
jp
lock
inc
sub
add
xor
mov
idiv
loope
mov
popl
scas
dec
sbb
jae
xor
sub
push
xorl
cmpsb
movsl
loopne
push
sti
pushf
and
sti
stc
cmpsl
stos
fstpt
test
mov
sub
das
sbb
and
inc
idivb
jo
mov
pusha
dec
lods
incb
pop
sahf
cmc
stc
rorl
sahf
xlat
add
aam
mov
push
jecxz
adc
cmp
inc
cmpsl
mov
mov
add
pushf
mov
push
addb
pop
push
push
insb
sbb
loop
fistpl
inc
idivl
xor
pop
fucomi
jge
dec
xor
xor
cs
clc
mov
xchg
mov
sahf
jno
movsb
es
push
fstpt
icebp
fisttpl
cmpsb
mov
add
ja
pushf
cmp
shlb
and
mov
nop
imul
mov
icebp
adc
call
and
bound
cmp
lock
jp
add
mov
ficompl
jle
push
cmp
mov
pusha
nop
lea
adc
fnclex
xor
xorl
push
in
fildl
push
pusha
mov
outsb
jle
fisttpl
xchg
movsl
add
xor
ds
push
aaa
or
sti
adc
sub
test
nop
jo
pop
data16
cmp
xchg
fcmovnb
add
mov
push
sub
lds
mov
dec
adc
lock
add
add
inc
xchg
push
in
enter
fisttpl
movsl
lods
pop
mov
lsl
sbbl
aaa
inc
sub
movsl
adc
mov
mov
sti
shl
mov
test
adc
iret
imul
fistpl
add
testb
int
fwait
xchg
mov
in
shll
addl
fcmovnb
int3
lds
test
or
lea
std
mov
fucomip
stos
cmpsl
sti
stos
dec
mov
fiaddl
das
sub
push
xor
rolb
aad
mov
sbb
sbb
mov
mov
pop
mov
adc
push
sub
jb
sub
stos
mov
mov
andl
or
mov
push
add
mov
xor
mov
sar
add
mov
mov
xor
das
fstpt
out
scas
je
xchg
push
mov
fcmovnbe
push
add
ljmp
cmp
adcb
pop
dec
cmp
les
fcmovnbe
aam
sbb
mov
xor
dec
add
adc
nop
daa
pop
push
xor
leave
or
cmp
pop
lea
loop
pop
fmulp
sbb
outsb
cli
push
js
in
mov
orl
imul
sub
sbb
mov
test
and
rolb
jo
and
out
cmp
pop
push
pop
shl
adc
mov
lock
in
decl
push
pop
jmp
jg
mov
jo
int3
or
cmc
jae
fcompl
jnp
or
je
push
mov
fildl
stos
out
les
mov
and
pop
fninit
out
pop
insl
pop
aas
xor
loop
mov
je
and
sbb
inc
push
jecxz
fwait
in
jo
mov
cmc
out
movsl
shlb
cmp
mov
pop
push
cmp
popa
jnp
ds
cmpsl
int
push
xchg
call
add
in
jns
or
lahf
xchg
or
fisttpl
call
cs
ja
jge
dec
int
inc
xlat
addr16
fcomp
fistl
or
cmp
inc
adc
jbe
popa
mov
pushf
test
shlb
fcmovnbe
mov
fstpt
cmpsb
inc
xchg
ffreep
cwtl
popf
xchg
loop
pusha
and
cmc
mov
mov
insl
enter
rorb
rcrl
stos
inc
in
push
add
and
xor
sbb
cmp
call
adc
movsb
outsb
push
fisubs
es
jbe
cltd
shl
loopne
push
notb
cwtl
dec
push
adc
dec
xor
cmp
stos
or
lar
ret
xchg
nop
fcmovnbe
xor
xchg
adc
insl
fistl
mov
jle
nop
in
push
mov
jo
sbb
adc
or
xchg
mov
imul
cmp
push
decl
icebp
movsb
int3
sbb
mov
adc
sub
imul
mov
xor
aas
or
or
and
gs
mov
imul
lcall
xchg
adc
fildl
sti
mov
sub
repnz
pop
push
or
sub
std
loope
adc
clc
cmp
mov
add
jno
sub
cmp
push
outsb
pusha
add
xchg
jae
es
in
xchg
movsl
test
aaa
ss
jmp
out
cmp
int3
and
test
cwtl
fistpl
add
loopne
and
outsl
sub
aam
fldt
shlb
into
scas
xchg
and
in
sbb
push
xlat
fstpt
sarb
or
movsl
jae
and
pop
aad
and
outsb
or
jg
add
sbb
ja
xor
and
mov
cmp
fistpl
mov
xor
fistpl
lret
dec
push
pop
push
adc
into
and
inc
mov
mov
in
imul
and
es
fcmovbe
shll
cmp
pop
cwtl
lock
sub
xchg
fwait
in
out
cmp
push
fstpt
pop
dec
loopne,pt
mov
sub
mov
and
xor
imul
popa
xor
xchg
movsl
fcomi
xor
test
dec
push
push
jmp
xchg
mov
mov
xor
cwtl
bound
cmpb
mov
in
pusha
dec
and
pop
jb
jmp
adc
lcall
inc
daa
enter
fnstcw
pop
sub
cmp
in
inc
xor
out
imul
iret
fmuls
fucomp
dec
push
out
fisttpll
cmp
shlb
daa
pop
std
mov
dec
cs
fcmovb
mov
dec
mov
mov
out
fucomi
mov
call
adc
imul
in
pop
gs
clc
outsl
sbb
imul
xchg
sub
fdivs
cmp
sbb
mov
sti
fstpt
sarl
xchg
daa
stos
imull
rorb
push
enter
add
ljmp
mov
aad
loope
mov
popf
push
mov
movsb
dec
mov
stos
insb
adc
stc
repnz
movsl
adc
sbb
dec
push
clc
jnp
push
outsl
pushf
dec
xchg
sub
dec
enter
stc
shll
leave
xchg
daa
je
loopne
rcr
in
out
push
shrl
fldt
dec
icebp
cmp
lods
out
es
clc
cmp
mov
sbb
shl
std
lock
cld
mov
stos
mov
push
movsb
jo
and
shl
inc
ficoml
fwait
mov
or
cltd
cmp
push
mov
adc
fldt
pop
sar
inc
xchg
jg
aad
imul
or
test
mov
and
push
cld
fcmove
scas
and
rorb
call
in
mov
pop
fstpt
push
lock
cmp
fistpl
iret
mov
hlt
adc
xchg
pushf
lcall
dec
sub
sub
fldt
xchg
ret
imul
inc
push
test
lcall
ret
js
mov
add
and
cmp
or
sti
sub
std
fildl
and
in
loop
fistl
cltd
inc
loopne
adc
xor
cmp
movsb
mov
lea
test
pop
sbb
lods
iret
mov
adc
lahf
and
jbe
ret
sbb
jno
test
fcomi
mov
lret
mov
jp
popa
fistps
pop
sbb
enter
into
fcmovnbe
in
inc
imul
mov
jno
ffree
ret
add
data16
movsl
mov
int
sbb
jo
ljmp
add
pop
fneni(8087
jne
mov
jmp
icebp
std
pop
stos
sbb
imul
add
cmp
or
xor
rcl
adc
enter
divl
repz
add
push
mov
outsb
adc
dec
lock
and
loopne
sub
dec
xchg
add
xor
das
rcrb
add
mov
push
sbb
lock
out
or
xchg
sbb
sbb
cmpb
mov
sbb
xchg
mov
mov
ret
mov
fnsave
dec
jmp
mov
jo
cmc
das
mov
es
mov
xor
dec
scas
or
or
addb
ret
fwait
mov
loope
jmp
call
cmpsl
pop
shr
out
fistpl
lods
jbe
mov
inc
inc
sbb
stc
testl
out
lret
jle
push
lcall
ja
test
dec
seto
jl
cmpsl
loop
icebp
mov
lcall
cwtl
xor
fstpt
ds
inc
test
es
inc
xchg
fstpt
pop
cmp
int3
inc
js
or
lods
fldt
dec
arpl
es
dec
negb
jecxz
bound
jb
inc
fistpl
push
stc
pop
fildl
in
aad
mov
in
mov
sbb
sub
js
pop
int3
pop
fwait
pop
mov
dec
adc
sbb
add
loopne
push
lods
cmc
xchg
mov
or
shll
xor
ficompl
inc
xchg
mov
add
cmp
fwait
in
inc
mov
xchg
test
stc
shl
leave
in
push
fisttpll
lock
adc
data16
mov
push
daa
iret
push
das
ficompl
push
ret
and
dec
neg
in
in
jae
fnstenv
enter
dec
jne
fldt
adc
fisttpl
lret
shlb
dec
fstpt
sub
std
sub
push
push
fistpl
xchg
cmp
pop
cmp
xchg
lret
jge
jle
xchg
imul
lods
inc
fcmovne
popf
pop
xchg
xchg
xchg
or
xor
sbb
dec
fcomip
cltd
fisttpl
pop
lock
push
rolb
in
add
pushf
shlb
repnz
xor
leave
push
mov
adc
pop
and
ret
lock
popa
pop
iret
pop
fistl
mov
xor
bnd
adc
call
sub
fildl
repnz
sbb
clc
stc
mov
mov
sti
mov
adc
and
out
je
mov
dec
fldt
jmp
lret
inc
in
jnp
and
and
scas
scas
lahf
data16
fwait
std
call
mov
jl
push
testb
loopne
push
les
call
gs
cltd
mov
or
call
pop
jnp
iret
lcall
aam
mov
ja
sbb
sbb
cmp
loopne
push
clc
sub
stc
xor
out
js
cmp
shll
ficoml
sub
test
or
xchg
outsb
add
int
jp
mov
scas
cmp
sub
dec
pop
rolb
dec
fisttpl
cli
adc
call
out
lods
pop
add
jb
or
xor
pop
dec
inc
cltd
dec
push
xchg
mov
rclb
in
mov
mov
xchg
jns
pushf
lahf
ret
dec
lods
fildl
cs
push
outsl
and
xchg
pop
mov
fcomi
pop
jno
dec
cmp
outsl
lcall
push
inc
pusha
sub
sub
jns
inc
ret
data16
pop
jno
ret
sub
cmpsb
pop
es
leave
sbb
adc
outsb
cmp
aam
fiaddl
push
lods
add
push
mov
jbe
adc
call
push
pop
clc
and
sbb
cs
addr16
hlt
fcomi
negb
out
jb
cld
es
mov
fwait
out
mov
ret
ss
cmp
cmp
inc
fwait
mov
sbbb
pop
jne
outsl
jg
lcall
mov
push
int
fistl
cmp
out
fcmovnu
mov
fdivs
pop
or
add
push
lock
pop
inc
cmpsb
arpl
fstpt
test
fdivl
insb
es
dec
aam
in
fistl
xor
mov
sub
mov
push
aaa
inc
cmp
repnz
fcmovnu
xor
and
mov
and
rcr
mov
out
iret
insb
pop
inc
xor
loopne
add
or
mov
mov
cmp
xor
call
sbb
xor
xorl
inc
clc
cwtl
mov
into
jno
pushf
fldt
mov
cli
std
rolb
pand
das
xor
fisttpl
test
sub
add
xchg
mov
sbb
daa
sbb
add
mov
mov
dec
ljmp
lret
mov
out
inc
insl
mov
fnstsw
aad
sbb
cwtl
enter
jbe
movsb
loope
subl
jno
insb
mov
push
mov
mov
sbb
jmp
fldt
sub
mov
push
cmp
ret
push
cld
jns
push
fucomi
dec
out
ds
call
shlb
inc
pop
dec
mov
pop
lcall
mov
lds
xor
fldl
dec
shrl
dec
dec
fsubp
adc
stc
dec
aam
fcmovne
xchg
shrb
fdivs
lahf
pop
mov
inc
into
cwtl
sub
cltd
adc
in
clc
add
fidivrl
lahf
loopne
cld
pop
or
cli
push
fxch
xchg
ffree
cmp
xchg
cmpsb
js
arpl
int3
sti
inc
fstpt
lock
rcr
jle
adc
sti
sbb
mov
fsubl
adc
add
cmp
pop
mov
adc
sbb
fwait
ja
ficomps
cmp
pusha
sbb
call
std
jns
sub
dec
push
push
lahf
loopne
sbb
pop
imul
dec
adc
dec
shlb
fcmove
pop
adc
jb
neg
fidivs
cmp
nop
ret
enter
sbb
scas
adc
xchg
xchg
mov
jo
addr16
jno
inc
dec
js
adc
out
fadds
mov
jle
int3
and
cmp
adc
clc
lods
test
jb
push
push
mov
xchg
lock
rcr
negb
mov
push
iret
into
sub
dec
fistpl
xchg
push
lret
pop
jp
outsl
inc
or
insb
je
loopne
pop
clc
cld
jno
cmp
mov
arpl
mov
fcmovbe
push
repz
loopne
movsl
mov
or
sbbl
lds
sarl
fcomi
mov
movsl
in
popf
cmp
push
hlt
pop
fbstp
out
push
mov
pop
test
rorl
fildl
cs
or
mov
dec
cmp
fstpt
data16
lahf
mov
mov
nop
mov
int3
push
ficomps
mov
das
fwait
jge
scas
mov
inc
lea
mov
fstp
push
rolb
push
adc
outsb
push
pop
sub
ss
cltd
push
pop
mov
inc
test
in
pop
sub
std
jmp
dec
sub
pop
mov
jns
and
and
fcmovnb
xchg
add
lods
ljmp
repnz
out
in
inc
xor
inc
stos
lret
int
in
jb
repnz
jae
or
or
pop
in
lds
cmp
pushf
loop
loope
inc
mov
cmpsl
sub
xor
add
pop
push
mov
sub
ret
lods
out
orb
push
in
xchg
iret
push
mov
inc
mov
sbb
sti
or
int
mov
push
push
jmp
ja
xchg
aad
stos
mov
arpl
stos
out
jecxz
shrb
sub
dec
mov
jo
dec
sbb
sti
cwtl
stos
rol
out
xchg
test
pop
pop
adcb
or
lock
jg
adc
and
in
mov
lcall
xor
adc
cmp
add
loop
ljmp
lods
pop
mov
sti
push
pop
shl
mov
and
fbld
in
clc
or
test
lret
icebp
popf
fists
inc
xor
sub
stos
or
and
mov
das
js
and
lods
mov
xchg
pop
bound
pop
jg
mov
cli
mov
adc
and
scas
cld
aaa
in
out
pop
loopne
xchg
lea
jo
xchg
fmul
fcomi
lret
xchg
sarb
clc
icebp
jle
pop
int
adc
cltd
ljmp
sbb
repz
out
fistpl
cmc
std
mov
shl
pop
sbb
sbb
jp
lea
jle
xchg
pop
lcall
ds
decl
add
push
imul
sbb
int
je
or
cmp
pop
lahf
fsubrs
mov
sbb
cwtl
pop
into
mov
lcall
cltd
cmpsl
leave
sub
sub
lret
xchg
adc
cmp
test
mov
sub
mov
xor
in
and
mov
test
xchg
fcompl
xor
cwtl
mov
push
ljmp
stos
sub
int3
fdivr
jno
adc
xor
sar
pop
out
aas
xchg
adc
jle
dec
aas
testl
lock
lods
fwait
cmp
data16
dec
inc
fiadds
jecxz
jl
jnp
or
and
ret
sbb
fadd
xor
and
lods
xchg
add
mov
inc
xchg
shll
lret
fildl
fs
sbb
out
xor
js
jmp
int3
adc
insl
movsb
daa
in
push
xor
test
prefetcht2
testl
xor
loopne
mov
push
das
jb
mov
loop
stos
int3
or
dec
jbe
dec
xchg
icebp
ss
or
or
int
jge
dec
nop
repz
mov
lcall
in
pop
test
jmp
add
sub
sbb
insl
ds
dec
aam
popf
imul
outsl
xor
pop
loopne
jns
sbb
cs
mov
icebp
addr16
outsb
or
ret
pop
xchg
into
ljmp
pop
push
push
sbb
mov
xchg
cmp
mov
adc
jns
cwtl
loopne
loope
popa
cmp
pop
lcall
imul
mov
lcall
repnz
fisttpl
or
adc
mov
pop
lret
gs
mov
arpl
lods
or
push
clc
fwait
popl
adc
rorl
mov
scas
mov
cs
and
hlt
aaa
jns
push
cmpsb
test
fcmovne
sub
pop
ret
add
fcomi
and
pop
jo
dec
mov
adc
push
cmp
std
imul
or
je
and
loop
jge
fsts
or
fisttpl
movb
dec
outsl
mov
sbb
test
push
adc
cld
lcall
mov
dec
jae
mov
and
pushf
scas
es
rcrl
mov
fwait
push
fstpt
ret
ja
orl
sbb
mov
mov
in
mov
arpl
push
sbb
stos
mov
pop
push
cmp
mov
cmc
xchg
dec
fwait
push
xchg
jnp
jb
pop
out
inc
jne
dec
fcoml
rolb
jp
dec
mov
sbb
shll
sbb
inc
daa
xchg
xchg
sub
pop
lret
and
or
push
inc
es
repnz
jnp
dec
addr16
jmp
rclb
gs
dec
push
fneni(8087
je
adc
call
mov
in
inc
dec
push
fistpl
fildl
aad
out
pusha
cwtl
fcmovne
lods
test
mov
rcl
mov
fs
fcmovne
lods
xchg
psrlw
aam
fisttpl
cs
aad
enter
pusha
xlat
stos
mov
inc
push
mov
mov
or
stos
loop
ret
and
fisubl
sbbl
leave
jno
jnp
jne
lcall
mov
adc
cmp
push
mov
aas
movsl
addr16
inc
enter
cmp
jecxz
dec
call
inc
push
or
mov
sub
adc
dec
lods
aaa
sarl
inc
fnsave
pop
mov
aad
xchg
insl
loop
in
aad
and
push
sub
mov
xor
out
movsl
or
adc
xor
mov
inc
xchg
rclb
addb
sbb
orb
mov
mov
push
or
jl
jecxz
movsb
fcomi
addl
xchg
shll
gs
in
mov
addr16
inc
adc
shll
cmp
lds
testl
push
loop
dec
mulb
jae
das
inc
push
adc
push
sbb
jle
mov
inc
arpl
cmpb
mov
xor
mov
gs
out
jmp
fnstsw
jno
sbb
cmp
imul
fistl
lahf
ror
je
jge
fistpl
fcmovb
mov
mov
fstpt
rcrb
mov
mov
js
inc
ljmp
xor
leave
jle
fcmovnbe
call
fcomi
lods
mov
or
xchg
inc
inc
imul
mov
push
scas
pusha
ficoml
xchg
stos
rcl
fcomp
clc
lea
sbb
adc
pop
mov
inc
das
sub
dec
sub
fimull
or
dec
popf
pop
sbb
and
scas
leave
shlb
lods
fildl
frstpm(287
ret
and
fistpl
cmp
add
cwtl
test
inc
cmp
add
fwait
lret
lods
xor
dec
fucomi
push
fistpl
inc
xor
std
push
adc
push
jmp
lods
fidivrl
sti
leave
fistl
mov
insl
inc
stos
push
add
mov
fdivrl
and
fistpl
pop
out
fiaddl
out
jg
mov
fistpl
test
xchg
divb
rcl
push
mov
xor
mov
loopne
push
cmp
aad
dec
jne
lods
frstor
sbb
lea
fistl
shl
fstpt
insb
cmp
negl
or
adc
sahf
inc
cmp
push
adc
push
or
fdivp
popa
push
les
mov
int3
push
mov
xor
rcrb
cmp
aam
jg
pop
sbb
mov
sbb
arpl
fistl
push
dec
xor
mov
pop
data16
lret
aam
inc
pop
in
es
sbb
rolb
pushf
jbe
into
dec
jnp
sbb
and
mov
jge
pop
idivl
data16
in
mov
pusha
movsb
jbe
fldt
roll
std
leave
add
mov
rolb
lcall
notl
call
sub
mov
jg
xor
clc
fisttpl
and
xchg
inc
rcr
enter
adc
push
call
xor
pushf
jge
sbb
xor
popa
sbb
fcmovu
clc
in
call
loopne
inc
sub
sbb
lea
add
in
rorl
inc
rcr
loope
xchg
lcall
push
loopne
mov
leave
or
adc
repnz
sub
arpl
xor
roll
sub
pop
mov
inc
pusha
shlb
mov
std
icebp
jnp
mov
jo
fisubs
fldl
shrl
push
adc
fldt
lahf
fiadds
es
int3
sarl
popa
in
sbb
bound
mov
cmp
fistl
es
push
dec
int
pop
test
xchg
fistpl
mov
jmp
inc
mov
out
xor
movsl
idivb
push
frstor
xchg
lret
ja
fcoml
and
cmp
cmpsl
cmovns
fistpl
enter
cmpsb
jg
cmp
dec
sti
fistpl
cmp
scas
jmp
negb
cld
pop
xor
xorl
fcmovne
repnz
add
mov
stc
ja
sbb
mov
cwtl
loopne
jns
add
fistpl
rcll
ss
mov
add
adc
mov
idivb
xchg
out
jns
movsl
cmp
orl
dec
icebp
call
fiaddl
or
je
dec
jno
adc
outsb
add
loop
popf
xor
mov
fwait
dec
or
push
xor
fiaddl
cld
sub
adc
imul
xchg
mov
lds
sbb
lock
testb
out
out
in
stos
pop
stc
mov
idivb
push
jno
jmp
xchg
xchg
add
cmpsl
leave
fcmovne
xchg
adc
fldt
jnp
mov
sbbb
pusha
pop
cs
add
dec
pop
cmp
aad
pop
sbb
jmp
mov
fcmovnb
push
inc
fisubs
push
loop
cmp
jo
jmp
hlt
fistpl
lods
outsl
rcrb
stc
int
fldl
adc
enter
pop
insb
xlat
mov
mov
idivl
sbb
pop
fcmovnb
sbb
outsl
fistl
pop
test
rcrb
loopew
mov
push
xchg
dec
daa
fisttpl
mov
ds
xchg
push
fistl
in
fstl
mov
fstpl
push
out
mov
xchg
fcmovnb
movsb
mov
push
aaa
scas
mov
jl
stc
test
outsb
inc
andb
push
and
dec
inc
lret
pop
lret
pop
es
adc
and
add
mov
cltd
sbb
outsb
xor
and
int3
mov
push
insb
cmp
lcall
es
push
jae
arpl
decb
test
pop
nop
fistl
jae
push
into
lret
and
loope
pop
pop
daa
sbb
fs
and
rcl
clc
popa
cld
cmp
fwait
xchg
aad
pop
fdivrs
push
ret
and
inc
fucomi
inc
les
fldt
lret
xor
scas
ret
cld
bound
dec
add
inc
pop
sbb
lret
cmpsl
jl
test
mov
gs
cmp
push
roll
es
add
in
mov
pop
dec
adc
xor
xchg
dec
gs
popa
adc
mov
fildl
or
repnz
xchg
dec
int
push
mov
rcr
xorb
push
inc
cs
pop
rcl
sbb
clc
cld
mov
das
lcall
mov
pop
xor
cmp
in
inc
mov
stos
insl
aam
inc
mov
jecxz
add
idivb
adc
and
pop
out
aas
sti
bound
lds
popa
pop
dec
shlb
sub
pop
in
xor
movzbl
push
jmp
jmp
inc
sbb
cli
stos
lock
imul
repnz
test
xchg
xchg
or
cmp
add
fdivl
xlat
data16
bound
cwtl
in
imul
and
cmp
les
or
scas
popf
in
xbegin
xchg
fldcw
mov
ds
movsl
mov
fdivl
and
dec
test
ds
xchg
cmpsl
lods
push
fidivl
inc
add
inc
into
xor
adc
inc
push
ljmp
scas
aas
mov
ljmp
add
xor
hlt
icebp
enter
ret
stos
push
sti
xor
mov
sub
pop
push
lock
fldenv
and
mov
cmp
dec
sbb
bound
jne
js
sbb
or
jmp
dec
cmpsl
sub
pop
in
xor
je
dec
dec
arpl
jg
out
jmp
stc
xchg
repnz
xchg
dec
pop
jo
inc
pusha
sub
inc
push
jp
cmp
xchg
or
stos
and
lret
jecxz
mov
pop
dec
clc
fmull
jne
adcb
rorb
or
xchg
repnz
icebp
inc
mov
into
add
cmp
mov
sbb
fidivrs
cmp
lcall
jo
leave
pop
lds
loope
lods
jg
notb
dec
push
mov
cli
inc
loop
stos
mov
lods
pusha
fbld
inc
addr16
in
ficompl
cmp
mov
outsl
out
mov
cmp
pop
mov
popf
in
adc
adc
sub
xchg
arpl
inc
and
sahf
mov
mov
sbb
aad
push
jl
cwtl
call
outsb
imul
scas
jo
pop
xor
fistpl
push
cmpsb
jmp
xchg
adc
pop
push
call
mov
mov
mov
push
jp
dec
fstpt
fmulp
fnsave
sahf
out
leave
jge
sar
pop
or
pop
push
test
push
call
enter
lret
lcall
push
arpl
push
ret
push
adc
dec
mov
sub
mov
adc
clc
cmp
mov
decb
inc
fildl
add
arpl
mov
adc
pop
pop
adc
out
lea
jne,pt
jnp
or
call
stos
sbb
xchg
jp
rol
fimull
ret
hlt
mov
add
ljmp
shl
ret
jp
fcmovne
sub
adc
xor
stc
cmp
adc
fcmove
push
fildl
enter
pop
ret
les
loopne
notb
adc
jmp
fiaddl
clc
cld
pusha
inc
fstpt
and
sub
or
repnz
mov
lock
fstpt
and
or
xlat
push
clc
loopne
sbb
pop
mov
push
dec
rcl
fsubl
out
lret
add
or
sbb
pop
sbb
push
and
fldt
cmpsb
inc
lret
call
in
xlat
lcall
outsl
lea
jbe
test
sub
push
add
cmp
push
outsb
lret
sbb
sbb
loop
mov
imul
jle
aam
inc
repz
into
rcrl
or
xchg
mov
jmp
xchg
inc
ss
mov
mov
jle
xor
clc
adc
xchg
loop
mov
loope
daa
mov
xor
movsl
enter
sub
test
inc
or
mov
mov
jns
jne
adc
lea
fs
dec
inc
divb
sub
fwait
mul
clc
pop
cli
jae
jo
push
jp
fidivl
pushf
push
fucomi
rol
mov
fcmovnbe
pusha
fisubrl
sahf
psubw
pop
pop
and
adc
add
add
fcmovu
fcoms
andb
lods
mov
jp
test
enter
inc
jge
or
xchg
push
insl
outsb
jno
dec
and
adc
ds
into
or
sub
dec
shr
push
fndisi(8087
popa
push
push
pusha
inc
xchg
dec
fistpl
dec
jno
push
test
ficompl
or
push
sub
cs
scas
and
jmp
push
cmpsl
mov
out
bound
shrb
fwait
mov
or
aas
mov
and
adc
repnz
mov
cmpb
popf
sbb
xor
test
out
inc
sti
and
loope
outsl
pushf
and
push
ror
lds
lret
clc
and
pop
inc
sub
pop
xchg
hlt
movsl
push
bound
xor
das
aad
fsubs
push
mov
ret
push
pop
sti
inc
outsb
jbe
clc
loope
sahf
rcrb
jmp
adc
lcall
rcrb
fidivrl
xor
jns
mov
adc
test
xchg
xchg
push
pop
int
adc
in
sbb
mov
fistpl
addl
sub
push
mov
sbb
out
lahf
fcmovnbe
sub
sbb
pop
push
call
lret
daa
sub
sbb
or
mov
xchg
inc
fnstenv
fildl
sbb
hlt
push
in
mov
loope
popf
xchg
fbld
addb
xchg
sbb
adc
call
fnstenv
repnz
popf
clc
in
pop
jecxz
xor
ja
fistpll
or
xchg
mov
fisttpl
pusha
arpl
lcall
push
sbb
jae
xchg
add
int3
ror
push
push
dec
lea
outsl
jg
testb
in
mov
xchg
sub
ljmp
dec
in
fidivrs
je
lahf
mov
xor
pop
ficomps
push
fsubrl
xor
push
lret
mov
or
jle
fistpl
mov
dec
push
aas
mov
pop
data16
cmp
xchg
popf
jae
aad
and
add
or
mov
bnd
mov
cmp
rcr
push
or
dec
out
mov
jecxz
sbb
rcrb
decl
fistpl
stos
push
test
arpl
add
mov
fs
das
neg
repnz
pop
mov
and
adc
fbld
cmc
ljmp
xchg
mov
cwtl
clc
fcmovnu
sub
leave
loopne
sub
sti
add
mov
sbbl
jl
add
das
add
lock
fimull
push
fildl
clc
repnz
sub
in
imul
fcmovnu
xor
dec
inc
xchg
neg
dec
xor
sub
loop
popa
imul
mov
call
xchg
cmp
in
ficompl
xor
and
jl
fcoms
or
pop
pop
lahf
lcall
cmc
dec
cmp
out
iret
dec
fstl
sub
jae
inc
test
fiaddl
pop
fisttpl
lret
popf
ret
cmc
arpl
xchg
fucomi
leave
lret
cli
xlat
xchg
fldt
jns
push
or
fistl
sub
fildl
pop
xor
xchg
loope
jns
aas
mov
into
aad
mov
pop
imul
rcrb
jno
loopne
jb
sarl
ss
mov
jg
jae
adc
in
push
filds
pop
fnstenv
and
fwait
ljmp
jbe
cmpb
lock
ret
loop
andb
fadds
pushf
lods
xchg
fistpll
mov
pop
sub
and
lret
fildl
dec
or
stos
pop
fstpl
sbb
add
fildl
sub
fwait
push
jne
pop
sub
repnz
sbb
lock
push
outsl
and
push
fcmovu
test
add
sti
jg
jo
push
dec
loope
cwtl
mov
outsl
inc
fwait
add
imul
pop
dec
fistpl
jne
xchg
lods
push
fcomi
push
mov
call
inc
sbb
loope
in
fstps
call
push
cltd
jb
fstpt
push
out
lahf
cmpsb
test
fisttpl
xorb
fldt
hlt
es
push
cmpsb
sbbw
push
lret
lock
in
call
cs
fistpl
out
inc
int
and
fisttps
adc
pop
js
mov
jge
pop
les
mov
in
imul
int
lock
sahf
test
loop
sub
lods
inc
imul
fwait
add
loope
and
js
inc
mov
insl
adc
out
add
jl
shll
xchg
popf
jecxz
xchg
add
test
and
sub
pop
jle
shll
jg
in
std
enter
imul
shlb
out
aad
jno
mov
lcall
sti
mov
dec
adc
jp
decb
sbb
xlat
mov
inc
dec
mov
popf
aas
inc
dec
inc
add
repnz
cwtl
pop
sub
inc
jb
das
fistl
loope
adc
rol
fstpt
jmp
bnd
pop
push
sbb
jp
add
pop
jg
mov
call
int3
sbb
lods
enter
enter
xor
sti
inc
xchg
dec
dec
fwait
sti
dec
mov
dec
or
lds
decl
lods
dec
adc
jns
and
je
mov
mov
mov
jg
addr16
xchg
sbb
jne
decb
add
hlt
mov
xchg
lahf
fcmovnbe
pop
mov
push
icebp
dec
int3
or
lds
enter
loopne
sti
notb
jg
negb
xchg
dec
xor
jecxz
sbb
pop
int3
nop
push
mul
and
lahf
stos
lds
xor
xchg
pop
add
pop
data16
sbb
fwait
sbb
xchg
ja
jbe
sub
xor
in
pop
fidivl
push
sub
subb
std
mov
inc
fnstsw
insb
sbb
and
add
and
call
adc
sbb
sbb
stos
or
push
pop
and
fists
out
nop
mov
pop
test
aaa
jmp
repnz
push
icebp
ljmp
xlat
fldln2
popa
sbb
jg
add
or
lds
lcall
inc
or
lods
jle
xchg
mov
cmpsb
add
ljmp
loop
js
imul
fnstsw
arpl
insb
test
xor
je
dec
sub
fstpt
mov
mov
cmp
shlb
push
add
or
shrb
fstpt
jmp
dec
cs
inc
frstpm(287
cli
inc
sub
pop
adc
ljmp
stos
jmp
mov
arpl
sub
test
cmpsl
sub
loope
fstpt
insl
mov
xchg
loopne
add
pop
push
aam
pop
push
xor
int
mov
icebp
adc
stos
iret
dec
push
pop
jae
addr16
inc
mov
jno
in
mov
fucomi
test
lea
dec
fcmovne
pop
ret
push
mov
fisttpl
pop
movsb
cltd
fstpt
adc
xchg
fcmovne
or
test
repz
cmp
mov
or
pop
test
and
jg
loopne
jge
cmp
jno
pop
fisttpll
mov
fwait
push
fstpt
xchg
push
dec
fidivs
adc
nop
mov
js
ds
repnz
enter
xchg
in
loopne
mov
add
jmp
dec
jnp
push
call
or
add
fimull
neg
mov
popa
mov
orl
repz
cmp
xchg
xchg
pop
cmp
arpl
neg
test
add
mov
ljmp
xchg
sbb
sbb
shll
add
push
sbb
loopne
scas
ja
fsubrl
int
pop
pop
jge
sbbb
loopne
rolb
scas
in
fscale
arpl
fcomi
movsb
cwtl
testb
cmp
sbb
pop
or
inc
je
fcmovu
sahf
sbb
jne
or
enter
int3
adcb
pusha
mov
sub
sub
insl
jmp
push
add
cmp
and
xchg
and
pop
mov
loopne
inc
sti
call
mov
cmp
fistl
push
push
imul
sub
fildl
pop
repnz
add
fcmovnbe
lahf
or
lcall
adc
fcmovnbe
ja
test
or
cmpsb
mov
mov
aaa
dec
pop
mov
xchg
xchg
or
in
cmp
outsl
dec
pop
test
adc
stos
or
es
jmp
sbb
aam
nop
mov
pop
fsubrp
les
fcomi
stos
xor
inc
clc
fs
imull
das
aas
xchg
xchg
pop
imulb
lcall
add
out
repnz
lcall
dec
lret
sti
adc
jbe
xchg
fiaddl
xchg
and
cwtl
mov
cmp
cli
cs
dec
into
repnz
mov
stos
and
iret
add
jmp
aaa
out
inc
bound
xchg
mov
stos
lock
lcall
scas
addr16
mov
lods
mov
mov
loope
rcll
adc
shlb
and
fbstp
or
dec
adc
push
scas
bound
xchg
je
mov
fisttps
mov
xor
mov
mov
mov
mov
xchg
jmp
fdivrs
in
popf
loop
scas
mov
cwtl
out
imul
xor
fcomi
xor
and
fldcw
cmp
fstpl
xchg
lods
lods
mov
dec
pop
leave
xchg
mov
sbb
imul
notl
lret
inc
mov
stos
push
out
gs
dec
cmpl
xchg
xchg
inc
lret
push
repz
cmp
xlat
pop
fldt
sub
fistl
mov
sub
call
data16
mov
mov
cmp
xlat
add
int3
test
int
sbb
icebp
sbb
aad
das
xchg
scas
cmp
sub
fcmovnb
cltd
pop
nop
xor
iret
fsubr
popf
testb
mov
loop
in
adc
xchg
cld
sbb
arpl
xor
fistpl
es
out
fcmovnbe
push
inc
cmpb
mov
mov
mov
xchg
mov
fcmovnbe
imul
mov
xchg
loopne
movsb
and
cmp
call
jg
adc
cmp
in
mov
xchg
sti
jmp
pop
lret
fldt
jge
jecxz
jnp
mov
imul
jns
fistl
in
dec
xor
dec
and
and
adc
out
cmp
dec
fwait
ret
fcmovne
jbe
push
push
leave
and
adc
mov
pop
movaps
fiaddl
das
cmp
mov
jae
sub
in
dec
fwait
inc
lods
dec
scas
cmpsl
pop
pusha
pop
dec
or
clc
in
add
xchg
fsub
stos
mov
jb
mov
cmp
repnz
icebp
pop
loopne
sahf
inc
add
pop
sub
frstpm(287
lock
sar
pushf
mov
fstp
pusha
push
mov
mov
push
dec
or
out
bound
in
std
leave
pop
repnz
pop
jnp
clc
int
adcl
push
dec
icebp
lahf
xchg
xor
insl
mulb
add
mov
fwait
cmpsl
adc
imulb
xlat
fldt
add
lahf
cwtl
fwait
popa
dec
fldt
sbb
or
mov
and
sahf
add
xor
insl
rol
int
pop
mov
out
fstpt
inc
out
into
inc
ja
fadds
fisttps
inc
fmull
out
lods
lret
call
jnp
xchg
xchg
xchg
shlb
out
rcrb
adc
imul
push
fcmovnbe
and
xchg
adc
or
call
clc
cmp
adc
out
mov
xor
sbb
fwait
loopne
jae
dec
push
jmp
dec
and
fistl
mul
jmp
fcmovne
dec
and
or
or
rcr
cli
xchg
adc
inc
mov
lahf
cs
xchg
test
sbb
js
and
mov
mov
push
out
push
sub
aam
loop
mov
pop
fcmovne
cmc
loope
push
mov
lret
mov
sbb
dec
std
roll
sbb
mov
shrl
mov
out
clc
scas
nop
mov
ja
mov
jne
cli
fldt
xor
mov
loope
inc
filds
mov
mov
fucom
shl
aad
icebp
jo
insb
and
imul
stos
mov
sbb
ret
jnp
icebp
loop
pop
sbb
pop
movsb
add
add
sbb
cmpsl
cwtl
pushf
cmp
adc
cmp
pand
jecxz
and
ds
mov
fcmovne
mov
lret
and
lea
xlat
popf
xor
fucomi
aad
test
gs
loope
mov
fstpt
js
leave
ret
fstpt
sub
test
loop
popf
aaa
push
adc
fistl
fstl
addr16
inc
xchg
mov
xor
pop
out
lahf
loop
sbb
adcl
fucom
adc
mov
je
sub
jbe
sbbl
push
dec
pop
rcr
call
jecxz
mov
into
push
xchg
aas
fcmovnbe
insb
std
cltd
mov
mov
add
incb
fisttpl
xor
xor
shrl
popa
loopne
mov
dec
loope
fisttpl
insb
not
in
movsb
push
push
jo
adc
jns
nop
cmp
ss
loope
ds
aaa
pop
fnsave
and
fst
push
andb
clc
add
scas
mov
inc
and
lods
cmp
inc
xlat
jae
rcr
mov
and
jge
jmp
mov
jne
mov
cltd
xchg
aam
inc
sbb
leave
hlt
cmc
jecxz
loopne
loopne
scas
mov
dec
or
fcmovnbe
jns
mov
fcmovnbe
or
in
jmp
add
or
std
cmp
cmp
loope
pop
mov
or
mov
fwait
mov
mov
dec
in
sbb
lahf
push
sahf
pop
inc
pop
fiaddl
pusha
xor
outsl
fcomp
loopne
jge
cltd
je
cld
jmp
jp
imul
mov
inc
jne
push
unpcklps
testb
sub
mov
lret
mov
aad
sbb
inc
mov
pop
push
sub
fistpl
or
or
and
jl
pop
xor
cmpl
push
cs
push
lock
push
xchg
je
jnp
subl
push
inc
xor
repz
add
push
popl
push
pop
xchg
fildl
cmpl
je
int
into
fistl
jo
mov
popf
call
mov
push
xlat
daa
sub
pop
fs
push
loop
lahf
nop
jl
mov
jno
mov
pop
jnp
sub
sti
loop
sbbb
xchg
add
lea
aad
std
jle
and
hlt
cmp
mov
mov
mov
push
jmp
fldt
int3
push
out
fstpt
pop
cli
insb
pop
pop
adc
mov
lret
lcall
fildl
lea
sbb
rolb
stc
pusha
add
push
rcl
jns
test
daa
sti
mov
fldt
xor
ret
dec
inc
or
loope
pop
push
aas
mov
mov
mov
mov
xor
jb
es
push
out
pop
jp
fistpl
out
fdivrl
fcomi
stc
pop
mov
lods
aas
fcomi
std
mov
jae
les
dec
sbb
jae
ss
in
mov
jb
mov
mov
lcall
call
andl
mov
dec
mov
rcrb
push
fldt
repz
cmp
ret
test
popa
pop
scas
out
xor
test
dec
xchg
jmp
add
mov
jo
imul
shlb
loop
or
add
arpl
pop
movsb
ror
outsl
mov
xchg
loope,pn
je
mov
push
lret
mov
xor
gs
stos
aaa
jle
sbb
in
test
lcall
aas
sbb
jb
fstpt
pop
daa
xchg
loope
lods
fcomi
sbb
jno
and
xlat
mov
dec
mov
cmp
pushf
sarb
pop
loop
aad
test
pop
outsb
jle
fildl
adc
xor
mov
xor
xchg
mov
sbb
sbb
sbbl
mov
icebp
fstpt
cmp
stos
call
pop
ja
loope
xor
lret
dec
and
pop
in
mov
clc
jbe
fcmovbe
mov
inc
outsl
xor
or
xorb
pand
dec
or
jb
adc
push
in
icebp
nop
xchg
cwtl
fisubl
fcmovnb
enter
xor
ret
mov
jns
nop
js
push
dec
mov
in
dec
or
clc
push
icebp
int3
mov
movsb
dec
pop
int
shlb
xor
addb
rclb
xchg
push
xor
loop
mov
fistpl
mov
aas
fistpl
rol
inc
loope
test
pop
pop
add
rcrb
cwtl
mov
mov
mov
and
cld
xor
loopne
in
mov
int
push
pop
ret
mov
fwait
sbb
dec
dec
add
subl
xchg
push
fstpt
pop
jp
add
mov
fistpl
lret
stos
jnp
inc
dec
fdivrs
pop
cmp
mov
lcall
sub
frstpm(287
pushf
inc
lods
or
imul
xor
lcall
stos
fldt
mov
mov
daa
mov
mov
sti
out
clc
rclb
outsl
pop
sbb
mov
int3
les
insb
adc
or
or
pop
iret
mov
out
neg
ja
mov
cmpsl
dec
inc
dec
adc
pop
out
mov
adc
cmp
fnsave
loop
jle
lods
xchg
int3
and
mov
in
jge
xor
clc
mov
push
dec
mov
shll
jae
inc
cmp
loop
js
xchg
lcall
push
dec
adc
in
hlt
shrl
loope
jmp
jp
fcomip
pop
lcall
sarl
and
xlat
xor
mov
push
in
push
rorl
popa
stos
jl
loopne
lock
fldt
push
outsl
int
sbb
fstpt
add
inc
cmp
addr16
subl
fcmovu
test
or
pop
icebp
push
push
out
mov
mov
add
push
dec
into
adc
cmp
fstl
dec
popf
xor
ret
lods
xchg
arpl
mov
icebp
fistl
sub
add
jl
fsincos
or
cwtl
dec
scas
pop
mov
inc
cmc
mov
or
cmp
jb
cli
cmp
add
adcb
iret
fisubrl
fs
fldt
sahf
push
bound
outsl
mov
and
enter
in
sbb
push
fcompl
cmp
bound
mov
fldt
mov
xor
sahf
jl
fsts
xchg
pop
cmp
hlt
enter
push
out
fcmovnbe
sbb
mov
iret
shr
repz
es
dec
push
stos
pop
fcomi
mov
fldcw
sbb
or
mov
imul
mov
fldt
arpl
lahf
cmp
dec
jmp
repz
xchg
cld
fisttpl
incl
cmp
mov
inc
inc
mov
mov
adc
fisttpl
dec
mov
add
or
fcomi
jno
adc
mov
xor
outsb
inc
jnp
push
fcomi
lea
pop
mov
mov
xor
dec
repz
mov
pop
fildl
or
adc
cmp
scas
popf
and
lret
jns
ljmp
sub
mov
fmull
adc
ds
out
dec
xor
and
test
mov
lock
pop
xor
xor
mov
outsl
sbb
mov
popf
sbb
push
scas
cmpsb
mov
sub
outsb
xor
adc
ja
fstpt
push
ficomps
and
mov
and
or
aaa
adc
scas
push
rorb
xor
pusha
push
mov
xchg
hlt
sbb
lret
mov
add
cmp
scas
fisttpl
inc
rcrb
mov
add
inc
push
mov
jp
loop
and
call
add
dec
std
shrb
ss
push
inc
in
pushw
push
xor
mov
iret
out
fildl
or
and
xchg
test
fildl
jbe
lods
out
xchg
fwait
push
daa
push
cli
in
icebp
lcall
mov
insl
mov
popa
insb
fiadds
jle
cltd
lcall
push
mov
enter
pand
inc
jg
ljmp
fildl
adc
es
inc
push
stos
mov
fldt
ret
lock
jo
das
in
inc
jmp
jmp
jae
ret
inc
sahf
std
add
cltd
aam
lods
pop
mov
fs
imul
lahf
xor
imul
mov
sbb
xchg
scas
cmp
les
in
fcomp
xlat
arpl
cmp
lcall
insb
sbb
or
mov
inc
fcomps
xchg
scas
outsl
inc
fldt
cmc
in
add
popf
mov
ljmp
les
cmp
cmp
imul
in
scas
aam
out
icebp
mov
mov
aaa
bound
stos
lahf
pushf
mov
lods
rol
dec
adc
lds
icebp
sar
adc
stos
aaa
push
sbb
or
in
sbb
rorb
ficomps
dec
dec
pop
dec
xlat
jae
repnz
sbb
stos
xlat
xorl
call
mov
rorl
mov
lea
cmp
ss
xor
add
cmp
xlat
in
imulb
mov
ret
mov
loopne
stos
loope
add
push
lcall
aad
cmpxchg
pop
adcb
repnz
clc
add
pop
movl
repnz
int
lcall
stos
mov
push
mov
mov
pop
xor
clc
cs
fiaddl
jmp
test
xchg
fdivrs
mov
test
jg
out
clc
inc
mov
push
sub
adc
in
mov
fstpt
mov
jp,pt
push
add
fildl
rolb
in
mov
outsl
fcmovb
push
cli
popf
xor
cmp
add
xor
lret
leave
scas
popf
daa
jb
cli
and
cld
fcomi
xchg
sub
pop
mov
sbb
fistpl
sarl
fistpl
subl
fstl
jbe
das
arpl
sarb
adc
dec
fcomp
push
mov
adc
imul
addl
push
shr
dec
xchg
pushf
adc
push
lahf
insl
pop
xchg
pop
xor
xchg
push
and
rorl
lret
cli
hlt
or
ss
imul
loope
fildl
adc
sbb
sbb
fstpt
lret
int
pop
daa
in
sub
or
add
mov
mov
lret
fstpt
add
mov
and
sub
popf
das
fcmovnbe
mov
movsl
pop
mov
fstpl
mov
fistl
mov
fstpt
mov
pop
sub
nop
jecxz
shlb
fcmovnb
xor
inc
adc
cld
fsubrp
and
jg
or
and
cmp
xlat
xor
pop
stc
insl
mov
int3
addr16
mov
pop
les
call
cltd
pop
mov
movsb
movsl
fldenv
jno
iret
clc
fistpl
pusha
cmpsb
sbb
sub
jo
adc
sbb
fiaddl
xchg
dec
test
add
xor
ficompl
mov
outsb
test
sbb
neg
pop
xor
xchg
fcmovne
imul
dec
xor
cmp
jo
add
fdivrs
pop
add
arpl
fucomip
fwait
pusha
ljmp
fcmovnb
sbb
jmp
insb
sub
addr16
in
mov
test
out
sti
push
xor
inc
out
in
cmp
ljmp
push
mov
fucomi
mov
lret
ds
frstor
dec
jb
aas
inc
push
sbb
adc
fucomi
pop
add
push
test
fiaddl
mov
rcr
es
ja
mov
jb
sbb
adc
test
fimull
push
add
int
inc
imul
adc
and
push
mov
mov
xor
jbe
fwait
mov
mov
arpl
fcmovnu
mov
int
push
ss
fstpt
out
mov
gs
jne
sbb
or
adc
mov
jo
rcrb
jne
pusha
stos
xor
mov
lock
fst
cmp
push
pop
mov
mov
fldl
lds
and
stc
fildl
adc
ss
sbb
lret
sub
in
lods
lds
daa
movsl
fistpl
mov
es
out
mov
cwtl
orb
mov
and
sub
jle
push
repnz
pop
add
scas
mov
test
or
jbe
cmpsl
add
fistpl
push
pop
jg
lret
out
mov
add
mov
fcmovu
std
test
sub
orl
fcmovnu
jns
rcll
cwtl
or
int
es
xor
ret
or
test
aam
lcall
sbb
mov
push
fstpt
cs
std
daa
mov
fmul
rcrl
insl
rcr
mov
rorb
fldt
pop
mulb
dec
aas
sbb
sbbl
leave
in
sti
aas
dec
inc
iret
in
mov
cmpsb
ret
fstpt
cmp
cmp
pop
push
sbb
fcmovnu
xchg
pop
sbb
mov
jg
aaa
jl
data16
sbb
les
fnsave
fnsetpm(287
xchg
dec
call
lahf
and
jnp
mov
cmpsb
mov
shl
scas
fldt
sub
push
fstl
sbb
fistpl
push
sti
fucomi
pusha
gs
lock
push
popa
xchg
mov
jb
addl
sti
js
xor
cmpl
pop
jle
push
scas
jnp
mov
aad
xor
addr16
fs
fucomi
scas
mov
data16
xchg
mov
push
sbb
lahf
jns
test
cmp
sti
xchg
push
xor
mov
scas
push
inc
push
mov
mov
xor
jecxz
fldt
enter
add
mov
daa
mov
dec
popa
imul
adc
stos
outsb
mov
clc
inc
shlb
es
cld
les
jns
pop
mov
or
jp
fcomi
bound
jmp
cmpsb
push
sbb
jns
out
mov
dec
pop
js
cmp
outsb
push
mov
pop
adc
mov
adc
fcomi
test
andl
outsb
adc
stc
mov
push
sbb
adc
inc
push
mov
int
cmc
mov
fistps
mov
nop
cmp
ficoml
fnsave
std
fcoms
jo
xchg
or
inc
scas
fstpt
cmpsl
iret
lods
jecxz
mov
push
gs
test
or
add
dec
and
mov
and
fildll
inc
or
jmp
add
and
rcrb
dec
xchg
push
insb
leave
orl
test
in
ret
fiaddl
stc
xor
jp
push
fcoml
mov
add
lcall
cmp
pop
adc
xor
lock
ret
sbb
jmp
idivb
insl
pop
dec
inc
fistpl
jne
pop
call
xor
mov
xlat
adc
outsl
jecxz
fisubrl
adc
push
sbb
mov
jae
sbb
aaa
loopne
sbb
jmp
movsl
xlat
mov
dec
fneni(8087
xchg
push
pop
sbb
xchg
push
adc
pop
stos
cmp
mov
xor
neg
jbe
out
ja
pop
mov
pop
mov
mov
fcmovnb
xchg
popf
pop
mov
jae
fucomi
or
dec
pop
fisttps
aad
push
wrmsr
cltd
lock
test
fistpl
lock
push
loope
dec
mov
imul
xchg
push
or
into
sbb
jnp
mov
cmp
sbb
mov
daa
mov
dec
fisttpl
nop
lcall
fdivl
js
or
or
mov
ss
rcl
shll
mov
push
jg
out
xchg
cmpsl
call
enter
adc
sbb
jno
loop
icebp
xchg
pop
movsl
jns
pop
push
imul
pop
add
das
clc
or
push
aad
and
mov
fbld
fstpt
add
out
call
nop
cli
int3
dec
dec
jb
sbb
popf
loopne
stos
les
fsub
call
ret
jp
shlb
xchg
aad
adc
adc
sub
scas
cmp
lret
xchg
push
std
cltd
xchg
dec
fistpl
popa
pop
or
repz
icebp
and
roll
inc
outsl
lret
fcmovnb
or
das
mov
xchg
mov
ret
dec
jge
pop
push
stc
fisubrs
push
aad
imul
mov
mov
fstpt
mov
sub
sbb
fcmovnbe
adc
push
xor
fildl
mov
sub
dec
cmp
lahf
pop
cmp
sbb
fildl
fs
mov
ljmp
insb
aam
mulb
jae
sti
sbb
int
fisttpl
out
pop
fisubrl
or
out
aaa
add
xor
push
push
push
dec
mov
xchg
fisttpl
mov
push
addb
jb
cmp
sbb
int
xor
in
imul
fistl
popa
scas
lahf
jno
fwait
ds
jb
push
sahf
je
and
js
and
and
jg
mov
pop
lock
subl
mov
aaa
jns
rclb
adc
xorl
sbb
dec
aaa
pop
sbb
pop
mov
loop
push
adc
xor
mov
fldt
mov
cmp
stos
jg
imul
jmp
fcomi
push
cmp
outsl
dec
mov
jno
push
iret
jle
cltd
iret
lret
loop
fimull
sbb
mov
stos
sbb
lock
jns
inc
add
cmp
push
xor
cmc
sub
mov
dec
mov
adc
or
cli
pop
loop
in
lods
fsubrl
push
lea
xchg
int3
outsb
push
mov
and
pop
ret
nop
orb
or
lds
xchg
add
mov
fstpl
in
dec
ds
push
sbb
mov
mov
pop
or
stos
lock
ficoms
fisubrl
inc
clc
or
mov
mov
stos
jl
popa
jmp
pushw
mov
pushf
ljmp
mov
repnz
mov
lock
push
cmc
repnz
mov
stos
pop
or
dec
loope
pop
xor
test
call
mov
or
out
icebp
pop
adc
xor
xchg
scas
flds
xchg
les
cmp
popf
rcr
leave
or
imul
push
adc
loop
and
fimull
sbb
push
sarb
mov
dec
fcomi
xchg
movsb
insl
stos
jnp
fstpl
or
insb
dec
loop
push
cmp
fldt
push
loopne
mov
iret
inc
dec
mov
fimull
xchg
lds
adc
ret
test
sub
sbb
out
lods
xchg
mov
push
rolb
in
fistpl
cmp
or
cli
ret
push
mov
imul
pop
adc
int3
pop
inc
icebp
xor
loopne
ljmp
gs
shlb
and
pop
mov
int3
push
repnz
fistpl
arpl
fisttpl
aad
movsl
scas
push
cmp
mov
or
lds
push
cli
or
jmp
ret
dec
sti
mov
and
and
lret
stos
add
xor
pop
or
push
test
loopne
dec
mov
or
xchg
dec
rcrl
adc
nop
push
and
jns
mov
cmp
xor
mov
push
pop
shl
or
pop
das
push
sub
xor
ds
movsb
mov
fidivrl
jo
cltd
int
xchg
out
cmp
pop
aam
fldt
pop
xchg
pushf
push
dec
cmp
std
negl
xchg
cmp
and
in
mov
lahf
fwait
jne
out
fcmovu
arpl
insl
cld
cmp
dec
mov
push
call
mov
mov
cmp
mov
mov
mov
sub
fldt
sbb
mov
je
cs
daa
jo
push
out
inc
xchg
fldt
sarl
push
pop
and
xor
loopne
cmp
mov
jecxz
xor
fisubrs
ret
mov
in
lock
push
pop
subl
dec
test
and
sbbl
imul
xor
pop
jp
mov
in
xchg
and
jmp
xor
ret
dec
fisttps
push
pop
xchg
in
into
push
out
xor
mov
pop
call
ds
fistpl
sub
or
aam
lea
push
jo
daa
cltd
jg
and
lods
and
inc
out
pop
jns
push
and
nopl
push
lret
test
pop
inc
cmp
andl
mov
fstpl
sbb
mov
jbe
mov
mov
fstpt
or
repnz
hlt
out
xchg
or
js
push
sub
push
call
mov
xor
sbb
inc
cmp
adc
insb
jp
fistpl
push
rcr
fbstp
jne
xchg
sub
add
jge
and
sub
add
stc
dec
add
xor
loop
aad
fldt
xchg
mov
pop
in
pop
shrl
fildl
pop
icebp
in
std
cmp
sbb
loopne
rorb
je
xor
test
call
aad
pop
fsubrl
in
les
sub
push
loopne
or
adc
and
add
jp
imul
enter
push
and
sub
sbb
push
add
cmp
inc
loope
lods
into
orb
jnp
xchg
xor
call
clc
sbb
dec
or
xlat
mov
mov
stos
aaa
mov
xchg
out
repz
fcmovne
jle
ret
ljmp
and
fcmovnb
leave
clc
xchg
cmp
mov
fistl
jno
cmp
add
inc
fistpl
dec
dec
negb
sbb
mov
push
sbb
mov
sbb
rcrl
jne
pop
sbb
jns
enter
fistpll
jnp
bound
rcr
into
out
fwait
sti
fstpt
sbb
lret
or
and
adc
or
inc
jmp
jno
fnsave
orb
out
xor
add
or
call
push
cwtl
fildl
imul
cltd
sbb
fisttpll
add
sarb
mov
inc
push
cli
imul
xor
clc
xchg
sub
pop
in
and
fcmovnu
repz
lcall
jbe
push
push
jae,pn
xor
dec
jecxz
adc
call
rclb
fstpt
xchg
fldl
ret
jg
xchg
push
push
cmp
mov
push
cmpb
addl
aaa
iret
ljmp
pop
dec
push
jg
jp
inc
mov
stos
inc
dec
out
jnp
add
mov
adc
leave
push
test
push
fstpt
and
sub
neg
cs
xor
jle
shlb
ret
sahf
scas
stos
push
xor
mov
jns
xor
insb
sub
pop
imul
in
or
aaa
cmc
and
fcomi
and
pop
or
int
rol
ss
pop
push
jae
push
aas
adc
mov
or
bound
test
push
stos
jge
fstpt
fucomip
mov
inc
mov
cmpsb
xchg
cmp
ret
inc
pop
gs
cmp
push
pushf
push
jo
add
xor
push
mov
out
mov
pushf
mov
fst
mov
push
loopne
iret
fwait
push
imulb
adc
jae
movsl
mov
add
fcmovnbe
stc
xchg
test
fistl
sub
push
dec
call
leave
fwait
and
mov
push
jnp
dec
xor
fs
sbb
shl
mov
mov
rcl
inc
jnp
fistl
sub
mov
jae
mov
pushfw
xchg
leave
mov
test
shrl
js
jnp
add
pop
decb
les
or
jp
aam
lahf
sbb
in
enter
gs
adc
pop
push
pop
fisttpll
sub
pop
out
cli
fcmovnb
jbe
mov
jmp
xchg
or
repnz
adc
out
fildl
rcrl
jo
sub
fildl
mov
mov
mov
mov
lcall
call
mov
sbb
mov
aaa
add
std
rcr
xchg
xor
cmpb
inc
iret
rol
xlat
imul
cmpsl
pop
adcb
and
pop
xchg
iret
jae
dec
jp
fiaddl
test
and
clc
lods
icebp
jns
add
in
mov
adc
enter
cwtl
xchg
adc
icebp
mov
loope
inc
pop
dec
sarb
fmuls
jno
pop
fildl
lahf
scas
stos
fistl
clc
fst
xchg
sti
push
loop
pop
lock
or
jbe
imul
mov
aad
fldt
sub
cwtl
push
pusha
pop
cmpsl
pop
lcall
pop
jmp
fdivs
and
sub
popa
jo
inc
ficoml
test
add
xchg
out
cmp
inc
push
push
fisttpl
enter
cmp
stos
sub
loope
add
fcoms
in
add
inc
mov
jecxz
out
jge,pt
jl
sbb
sti
icebp
pop
xchg
push
mov
cs
mov
xchg
fneni(8087
in
nop
cmp
xor
out
movsb
pop
adc
aad
icebp
dec
mov
sub
testb
out
stos
fistl
adc
imul
cmp
pop
sub
hlt
test
xchg
mov
call
into
int
xchg
movsb
adc
fdivl
loopne
ja
iret
inc
fistpl
pushf
out
fldl
xchg
or
repz
imul
fistl
push
pop
neg
inc
mov
or
push
fs
testb
cmp
push
call
or
xor
push
ficoms
lcall
adc
aam
outsl
clc
fstpt
push
mov
and
sbb
fcmovu
jmp
cmp
in
ficompl
pop
clc
sub
add
aad
fs
push
jb,pt
mov
inc
mov
xor
jle
sbb
mov
rcll
xchg
mov
lret
pop
fsub
into
fwait
cmp
dec
or
sar
pop
js
cld
fstpt
dec
xor
call
sar
jmp
or
jne
mov
add
repz
iret
pop
xchg
out
jnp
inc
clc
fisttpl
xchg
cmp
pop
inc
jo
je
clc
mov
push
fistpl
popf
inc
mov
mov
sar
fldt
sar
xor
in
or
xor
fisubrs
loope
inc
inc
les
cmp
mov
mov
mul
sub
fldt
jns
jne
cmp
lods
xor
daa
jbe
les
stos
fsubrl
mov
arpl
lods
std
xchg
fsts
pusha
sbb
in
xor
jmp
sub
stos
mov
push
mov
adc
loop
pushf
adc
rsm
scas
mov
or
mov
push
aam
sub
lret
lret
movl
inc
or
int
into
dec
inc
mov
imul
loope
jecxz
mov
pop
push
jge
fucomip
lods
fists
dec
xor
out
call
add
inc
jmp
test
cmp
push
fsubl
pop
stc
rcrb
sbb
mov
or
push
jo
mov
mov
int
pop
mov
mov
xor
sarl
xchg
mov
leave
mov
sub
icebp
sbb
sbb
inc
popa
mov
xchg
mov
jns
pop
out
inc
std
sub
and
icebp
repnz
cmp
in
loopne,pn
popa
mov
mov
imul
scas
stos
mov
sbb
and
or
int3
enter
lahf
leave
lcall
aad
adc
je
sbbl
das
adc
and
sti
jecxz
pop
push
mov
fistl
imul
cmpsb
sub
or
lea
mov
lret
jno
fcomp
jns
shrl
xchg
out
sbb
pop
push
clc
push
fiaddl
mov
mov
loopne
sub
pop
aaa
clc
into
scas
xchg
mov
dec
lcall
add
mov
leave
shll
out
in
pop
pop
pop
inc
and
pushf
ret
mov
sahf
lret
test
lds
stos
jnp
xchg
adc
test
in
xchg
outsb
dec
sub
fistl
pop
jge
ud2
fldt
sub
sar
push
lret
pop
jl
in
aam
testb
lea
movsb
fldt
mov
mov
js
xchg
jns
push
sub
dec
pop
xchg
push
dec
cmp
cmp
into
sub
or
aam
or
mov
clc
fldt
mov
popf
and
cld
xor
cltd
lds
mov
push
push
lahf
jmp
sbb
lods
into
imul
es
ffreep
mov
and
sub
mov
jecxz
lds
insb
fnstcw
add
and
lcall
gs
mov
cwtl
and
sub
jno
aaa
lret
xchg
mov
inc
jae
arpl
or
div
outsb
sbb
aaa
xchg
das
jmp
bound
push
push
sub
push
cmpsl
scas
fwait
xor
adc
inc
dec
int3
push
imul
add
xchg
and
mov
cmp
mov
sbb
xchg
outsl
cmp
cld
adc
fldt
jge,pt
jbe
or
clc
inc
leave
mov
pop
mov
dec
xor
and
xchg
add
pop
pop
in
dec
fildl
notl
add
sub
mov
fistpl
insb
or
push
mov
mov
pushf
add
outsb
arpl
fistpl
popa
inc
xchg
sbb
fsubs
out
add
mov
add
inc
call
mov
xchg
push
fs
or
sbb
shlb
sbb
fiaddl
andb
imul
loop
mov
jae
scas
adc
cmp
mov
ret
and
loopne
ja
fcmovu
and
adc
mov
fnstenv
lret
lock
movb
sbbl
loopne
aas
cmp
ret
test
or
ljmp
pop
sbb
cmpsl
or
mov
fcomps
popa
repnz
sub
icebp
jecxz
dec
outsb
or
mov
xor
sbb
xor
xchg
jg
loop
movsb
rclb
push
push
loop
les
mov
mov
cmp
call
fs
add
pop
xor
sbb
scas
mov
push
xchg
pop
inc
rcrl
in
rol
cmp
sbb
mov
and
jbe
sbb
sbbl
divl
popa
rcll
stos
enter
lret
faddl
or
mov
pushf
insb
fldt
or
mov
sahf
std
adc
push
imul
int
gs
cmpsb
sbb
mov
xchg
cmp
nop
popa
pop
push
jno
mov
cmp
xchg
out
fisubl
das
loopne
stos
cltd
pop
mov
data16
pop
add
nop
int3
vpsubb
push
call
xor
sti
sub
or
lods
adc
movsl
sbb
mov
adc
mov
aaa
popa
imul
lahf
lret
fistpl
mov
je
inc
inc
pop
sti
loopne
sub
sahf
inc
mov
fstpt
mulb
scas
imul
lcall
jnp
loop
insb
mov
dec
pop
dec
jl
fildl
push
fisttpl
cmp
mov
test
push
lds
dec
add
push
repnz
lret
jae
fisttpll
push
stos
sub
pop
les
xchg
fisubrl
ljmp
fcmovne
mov
loopne
out
pop
cmp
push
stos
iret
jbe
fcmovnbe
add
jne
jp
fcoms
test
out
in
std
cmp
xchg
es
scas
and
xor
jne
mov
fistl
cmp
call
addr16
in
mov
test
sub
sub
adc
dec
fsubrs
mov
sbb
pop
test
cmp
js
fildll
les
repz
cmc
fistpl
fmul
fisttpl
lea
mov
pop
inc
xor
or
mov
add
aam
pop
fistl
dec
push
mov
neg
test
fwait
call
fildl
hlt
sbb
jle
push
cld
int
cmc
test
orl
les
mov
test
mov
cmp
and
cli
fistpl
mov
shl
imul
xor
iret
daa
enter
loope
push
std
cmc
cmp
sbb
lods
add
fcmovbe
adcb
in
js
xor
outsl
mov
hlt
ljmp
pop
xor
loopne
pop
mov
cld
stos
nop
push
fidivrl
in
add
lcall
notb
sbb
mulb
xchg
pop
cmp
xchg
fdivl
lods
pop
out
mov
jl
push
gs
stos
bound
push
cmc
jbe
or
scas
cmp
xlat
fldcw
mov
mov
stos
or
push
mov
in
mov
sarl
cmc
lods
xor
xchg
jle
push
sub
daa
incl
mov
mov
sbb
sub
int3
sbb
dec
stos
pop
jg
mov
inc
aaa
mov
jbe
push
movb
repz
out
push
dec
mov
fsubrl
lcall
addr16
js
das
hlt
push
lcall
loopne
mov
fwait
pop
lods
clc
sahf
scas
sbb
jp
adc
stos
mov
insl
mov
clc
sub
cwtl
cmp
push
xchg
into
cli
and
outsb
out
rorl
in
lods
insl
sbb
scas
xor
dec
cmp
in
iret
popf
jne
cltd
jno
sub
sub
mov
leave
adc
lret
shll
or
jp
das
std
and
sub
cmp
aad
fcomps
mov
into
fstps
loope
scas
or
nop
add
pop
mov
xchg
addr16
lcall
addr16
xor
mov
test
pop
in
jecxz
ret
ljmp
imul
mov
stos
dec
lods
pop
xchg
inc
stos
in
jle
repnz
cld
icebp
adc
mov
loope
clc
inc
lods
adc
stos
enter
loope
and
jmp
lea
insb
mov
notb
fists
scas
dec
js
mov
data16
fdivr
mov
jle
mov
lcall
or
movsl
ret
inc
cld
sbb
in
sub
popa
or
out
nop
std
sbb
dec
jl
mov
leave
pop
xlat
test
sbb
btr
inc
push
outsl
or
xchg
loope
fisttpl
shlb
jbe
in
add
and
out
vpackssdw
push
sub
rorb
or
loop
out
push
lret
xchg
or
imul
fcmovnu
xchg
mov
push
pop
inc
pop
repnz
aam
scas
jge
mov
insl
sbbl
pop
jo
into
loope
out
fstpt
cmp
in
xchg
test
cmp
movsb
xchg
cmc
add
test
sbbl
dec
out
insl
or
jge
lock
outsb
push
inc
pop
ds
insb
sbb
fadd
hlt
std
nop
in
adc
pop
cmp
test
lods
xchg
test
dec
inc
jle
pop
mov
movsl
dec
xor
inc
aas
into
mov
cmp
sub
lods
push
mov
sub
mov
filds
mov
test
push
or
jmp
outsl
movsb
pop
shlb
mov
mov
cmpsl
fstpt
imul
rcr
int3
cmp
in
pop
ret
and
cmpsl
sbb
hlt
mov
cwtl
std
lock
push
fildl
jmp
outsl
jp
fstps
stos
pop
les
xchg
jmp
ud2
jbe
sub
stos
and
mov
xor
fwait
sub
out
lcall
push
push
xor
pop
cmpb
push
push
fistl
fmulp
mov
nop
fisttpll
test
loopne
scas
add
adc
sti
pushf
lods
jg
fistl
in
fiaddl
fcmovnb
test
rclb
add
jge
fldt
fnstsw
add
fnstenv
ljmp
jp
out
insb
pop
xor
js
sti
push
rcrb
push
lret
ja
jecxz
xor
push
std
jae
fldt
pop
pop
movsl
dec
sar
sbb
or
pop
pusha
adc
imulb
cmp
inc
test
and
pusha
hlt
adc
test
mov
cmp
in
jmp
loopne
lods
inc
dec
add
sti
insl
je
fistl
lret
pop
rcr
bound
dec
mov
int
dec
in
shlb
push
pop
pop
mov
lret
push
lock
ffreep
ds
sbb
mov
mov
dec
and
cmp
lds
loop
fmuls
add
aas
fistpl
es
fidivrs
and
jae
mov
jb
je
neg
hlt
pop
call
movb
lret
sarb
or
stos
pop
xor
adc
fldenv
loop
mov
ds
stc
mov
mov
push
lea
sbb
cmp
dec
push
or
dec
mov
lock
test
jo
js
adc
xchg
push
popa
pusha
xor
sub
pop
sub
jo
pop
sahf
mov
sub
cmp
fcmovnb
out
xchg
inc
repz
pop
or
sub
pop
mov
inc
icebp
orl
addr16
lcall
leave
xor
repnz
ss
xchg
cs
nop
pop
roll
jmp
fistpl
mov
push
sbb
push
ficoml
cs
dec
fcomi
iret
loop
gs
fcmovnu
sbb
fildl
insb
clc
xor
shll
int
inc
mov
or
or
xor
cmp
std
mov
clc
push
mov
sbb
in
aam
fistl
pop
and
adc
xor
ror
call
out
cmp
das
popa
lret
cwtl
inc
cmpsl
shlb
mov
fisttpl
mov
mov
int3
ljmp
in
cld
in
sbb
inc
sub
jnp
adc
fnstenv
idivl
pop
adc
test
imul
jmp
xlat
clc
fcmovnbe
sbbl
loopne
imul
fisttps
lods
shll
neg
inc
xor
pop
jl
es
pop
shll
in
jae
xor
cwtl
lret
mov
scas
push
cmc
shll
fwait
push
xchg
push
lret
lcall
hlt
ljmp
insw
dec
mov
repnz
xchg
xlat
jns
shlb
test
pop
push
mov
std
clc
jo
or
insb
loope
in
jb
lret
xchg
imul
lret
push
adc
je
fstpt
inc
xchg
rcr
xchg
stos
dec
in
jl
or
insl
js
fsubrs
aad
pop
fwait
mov
lods
or
add
fwait
clc
repz
sti
jb
push
cmp
stos
fcmovnbe
repnz
mov
push
mov
mov
cltd
mov
pop
inc
dec
in
mov
fdivrl
insl
lcall
push
push
mov
pop
sbb
test
cmp
dec
jl
sbb
add
adc
jmp
and
lahf
fcmovnu
cli
imull
xlat
fmull
cmp
cmpsl
or
jmp
fst
and
pop
imul
push
adc
fildl
loope
add
mov
fwait
rcl
jnp
fildl
xor
adc
loope
dec
inc
push
loopne
fcomps
mov
fistpl
lret
ret
test
frstor
push
adcl
inc
lods
pop
jmp
jo
cltd
xor
inc
fwait
xchg
arpl
mov
jnp
pop
sbb
lret
fisttpl
mov
dec
sahf
xor
fistpl
push
andb
mov
lret
pop
nop
fcmovnb
rcrl
divb
add
push
rol
hlt
fcomi
xlat
ds
jb
fildl
fwait
and
leave
jns
fcoms
sti
cmp
aam
dec
jno
test
xchg
lcall
fistpl
or
out
dec
daa
xor
in
fildll
push
test
add
pop
cmpb
xchg
jnp
cmp
jp
repz
or
xor
mov
ss
scas
repnz
fisttpl
hlt
xchg
mov
xlat
frstor
fdivl
mov
push
cltd
jb
imul
xchg
in
pop
mov
jno
ret
sbb
sub
ret
push
ficompl
or
adc
mov
loopne
mov
mov
adc
lcall
std
rolb
mov
and
pop
add
mov
fldt
jg
mov
pop
nop
call
movsl
jp
jl
sbb
aam
rcrl
push
dec
repnz
loopne
jecxz
leave
sar
clc
fs
jge
dec
or
fisubl
xor
jmp
sbb
mov
mov
cmp
xor
mov
dec
fldt
add
cli
mov
fs
fistl
cmp
dec
adc
jno
xchg
sbb
stc
jmp
push
mov
test
xor
push
fisttpl
jno
mov
mov
mov
fs
pop
ret
js
iret
pop
mov
jmp
lods
clc
inc
pop
pop
adc
lods
mov
mov
or
lods
fwait
lods
pop
fildl
js
and
or
pop
test
lods
sbb
jb
ficomps
xor
push
adc
push
mov
sahf
cmp
and
fnclex
test
mov
adc
cmp
jne
in
adc
push
sub
sbb
iret
popa
adc
pop
dec
sahf
aam
push
or
dec
sub
pop
fisubl
out
jb
jmp
pop
adc
sarl
sub
nop
cltd
mov
jnp
pop
andl
lret
ds
or
inc
out
pop
icebp
inc
mov
inc
loop
pop
bswap
or
push
lock
stos
cmp
jae
xor
sbb
lret
push
push
outsl
xchg
xchg
popf
sbb
les
sti
js
jmp
add
aam
clc
lods
cmp
loopne
es
jp
loopne
adc
push
stos
xchg
call
lea
mov
add
incl
movsb
jp
cmp
pop
dec
sub
loop
stos
sub
inc
or
xor
std
add
in
stos
scas
imul
lret
shl
or
ficompl
stc
test
fdiv
cmp
fwait
inc
mov
mov
jle
xchg
and
jp
mov
pop
push
test
subl
fisttpl
jbe
es
out
in
ss
loopne
push
sub
mov
sub
add
mov
aaa
add
ror
dec
bsf
pop
and
fildl
mov
mov
adc
arpl
push
in
clc
push
addr16
cmp
jecxz
xchg
lods
fs
outsb
in
aad
mov
fistpl
xchg
fstl
inc
adc
fisubl
mov
pushf
gs
push
or
or
push
mov
sub
in
mov
fistl
push
adc
jp
xor
pop
insl
inc
adc
fcomi
mov
sti
inc
leave
fcmovnbe
movsb
roll
fucomi
inc
add
fistl
sahf
lahf
mov
les
fucom
ficoms
hlt
or
adc
jmp
sbb
jae
fs
cmc
mov
jnp
adc
fildl
jne
nop
sbb
dec
xchg
aaa
fcmovne
aam
hlt
into
in
and
addl
test
jnp
in
dec
sbb
fstpt
cmpsl
and
push
fnsave
inc
sahf
jnp
cltd
fisttpl
int3
js
jl
cmp
pop
and
cmpl
sti
jb
mov
imul
cmp
mov
bound
imul
sbbl
and
decb
dec
pop
fs
adc
clc
lock
pop
ret
fisttpl
adc
jne
pop
mov
sub
cmpb
fiaddl
test
ret
add
sbb
jb
fcoms
or
or
stos
lock
cli
popa
inc
fistpl
es
push
in
cmp
fldt
xchg
dec
mov
std
aad
push
cmp
jecxz
jnp
sub
scas
loop
ss
add
std
lahf
std
fstpt
addb
arpl
pop
and
cmp
sarb
sti
fistl
sub
scas
xchg
cmp
pushf
or
fldt
mov
mov
xchg
and
fcomi
addr16
dec
icebp
mov
xor
jge
fldt
scas
das
stos
lahf
adc
sbb
jmp
out
fistl
sbb
mov
sbb
or
rolb
test
xor
stos
shrb
jecxz
fisttpl
mov
or
sarb
push
int3
dec
dec
push
lahf
mov
sbb
enter
sbb
cmp
push
stos
call
push
repnz
dec
jle
mov
popf
fstpt
push
fcmovne
fimull
fninit
mov
lods
or
test
fucomip
insb
ss
cmpsl
notl
add
leave
mov
ffree
adc
in
pusha
mov
mov
popf
fcmovnbe
sub
lahf
fistpl
cli
inc
cmp
lock
jae
sbb
adc
call
sub
fildl
stos
push
call
imul
negb
xlat
popa
cmp
mov
adc
jl
cmp
xor
arpl
clc
sub
fcomi
cmpsl
lret
adc
fldt
stos
mov
fistpl
jne
xchg
jnp
mov
push
out
fcmovb
mov
loopne
pop
jns
repz
fucomi
inc
cs
sbb
fstpt
mov
adc
fistpl
aaa
or
push
fildl
mov
js
imul
adc
je
add
jmp
popa
arpl
or
or
hlt
in
dec
not
pop
outsb
pop
dec
rcr
cmp
xchg
mov
ljmp
lods
stc
xchg
mov
rcr
notl
mov
daa
negb
cmp
cmc
in
fcomps
mov
mov
cmp
lods
cmp
adc
xchg
sbbl
es
cmc
std
lock
push
js
jp
cmp
jg
enter
imul
outsl
icebp
jb
jge
push
jmp
cmp
xlat
ret
sti
clc
push
jmp
dec
jge
mov
out
jecxz
or
adc
arpl
mov
sbb
mov
cmp
cmc
das
faddl
mov
ds
popf
xor
mov
xchg
pop
int3
pop
aas
add
sub
pop
sbb
sub
rcr
adc
dec
lock
and
and
or
cmp
rcl
push
inc
dec
push
push
test
out
add
inc
fisubrl
inc
xchg
in
cmp
sbb
jb
and
nop
cmp
push
xlat
inc
rcr
push
mov
sti
push
sbb
ljmp
and
lods
bound
cmp
or
inc
add
sbb
push
js
jb
xor
lods
jne
cs
sbb
or
pop
sti
dec
loopne
sub
lret
test
iret
mov
int3
or
clc
jno
mov
repz
stos
pop
pop
fcmovu
stos
push
decb
je
cli
xor
inc
and
cmpb
pushf
push
bnd
ss
xchg
test
lods
out
lret
icebp
call
sar
in
and
inc
mov
pop
das
test
in
mov
dec
xor
push
push
pop
pop
push
cs
daa
push
fldt
xchg
fisttpl
lret
cs
and
and
mov
movsl
fistl
xchg
sarb
popa
fcmovnb
mov
push
push
adc
fcmovnbe
movntps
cmpsl
inc
fldt
dec
jnp
loopne
add
mov
cmpsb
into
or
push
cli
cmp
cmpsl
fldt
jp
inc
cmp
pop
adc
mov
fcmovnu
sahf
aaa
or
dec
loop
out
stos
hlt
push
fneni(8087
fwait
cmp
fistl
rcll
fstpt
xrelease
xchg
jns
loop
inc
xchg
ja
push
lret
ret
jecxz
ljmp
ret
dec
lock
nop
fcomi
add
mov
mov
icebp
cmp
fucomi
mov
testl
and
dec
inc
dec
fcomi
mov
jnp
test
test
mov
sbb
dec
mov
fsubs
mov
bound
mov
xchg
cs
push
orb
iret
dec
test
fistl
sbb
pop
icebp
push
jecxz
cmp
loopne
les
lea
dec
insl
mov
shl
or
or
das
sub
fcmovnbe
out
int3
insb
mov
inc
popa
lahf
xor
pop
jbe
popf
movsb
pushf
fcmovne
dec
mov
lret
sbb
outsl
fldt
push
shl
testb
dec
mov
inc
insb
pop
std
add
pushf
lret
outsb
push
movhps
cmp
push
or
scas
imul
sbb
inc
pop
jns
fcmovnu
mov
imul
dec
pop
cltd
inc
je
xor
sub
mov
pop
mov
mov
fstpt
cmp
fisttpl
fisubrs
jl
jecxz
lods
mov
adc
ss
xor
fldt
add
repnz
out
test
jmp
fcmovne
adc
push
aad
sbb
in
adc
xchg
adcb
jae
rcr
and
ret
jb
ja
hlt
lcall
sbb
js
test
in
out
ss
mov
cmp
push
push
aam
fcmovbe
int3
cltd
shl
fstpt
xor
fldt
inc
scas
in
cmp
fistpl
or
ret
push
cmp
or
xchg
imul
loopne
hlt
icebp
lods
add
xlat
mov
nop
mov
stos
and
xor
adc
fcmovne
in
inc
std
insb
fxch
jge
loopne
cmpsl
push
ss
lret
sti
js
mov
mov
pop
imul
xchg
sub
push
divb
jbe
cwtl
xchg
roll
or
fldt
jmp
ret
int3
sarb
mov
jmp
xor
in
jne
fbld
and
test
pop
popa
dec
jno
lods
push
push
call
lahf
fildl
imul
jbe
or
mov
daa
xchg
push
je
incb
and
adc
pop
jne
mov
ss
xchg
aas
cmp
fildl
dec
aam
push
sub
fistpl
fwait
sub
loope
add
pop
fcmovnb
and
jnp
das
sbb
leave
mov
lahf
and
xchg
pop
push
xchg
lcall
mov
int
addr16
dec
xor
enter
jns
dec
push
inc
sub
stc
aad
add
into
ficoml
xorl
xor
cmp
sar
sub
loope
mov
xchg
daa
fcmovnu
xorl
cli
jmp
es
xchg
in
jb
mov
add
pop
loope
fcmovne
add
hlt
jne
inc
sarb
lcall
je
rcl
push
jnp
ret
or
call
outsl
sbb
popa
mov
aam
into
jmp
dec
cld
lods
mov
loop
mov
xchg
lea
fistpl
in
sbb
int3
call
js
jecxz
out
jp
pop
imulb
cmp
push
mov
jg
fstpt
adc
and
xor
pushf
push
inc
add
push
adc
mov
add
xor
sbb
lods
xchg
ficompl
push
fidivs
out
mov
mov
scas
sbb
movsl
cmp
je
pop
shr
popf
int
xor
mov
lahf
jae
push
mov
test
rcr
jge
or
fwait
xchg
fldt
inc
cmc
enter
outsl
lret
repz
pop
sub
mov
fistpl
jne
iret
out
dec
dec
dec
jmp
and
ret
jnp
sbb
fistpl
xor
mov
in
fildl
dec
iret
sub
mov
sub
jle
mov
jno
sbb
out
cs
mov
testb
icebp
lcall
lds
jle
cmpsl
je
pop
call
imul
lret
inc
mov
leave
ret
lea
iret
or
jge
ja
mov
loopne
pop
and
outsb
cmp
mov
rcrl
mov
or
sahf
shll
fildl
pop
adc
adcl
fcmovbe
adc
into
cmp
fimull
push
add
call
xchg
sbb
out
dec
insb
push
ffreep
lea
and
mov
aam
and
or
fcoml
ljmp
adc
jbe
jnp
or
sub
xchg
pop
dec
neg
mov
cmpl
dec
popf
fistl
inc
mov
fistl
mov
subb
decl
in
iret
ret
ss
lods
push
call
pop
stos
repnz
loop
adc
jle
iret
int
or
fisubl
sbbl
pop
cmpsl
mov
xchg
stos
fildl
cwtl
or
dec
pand
outsb
repz
and
fcmovnb
dec
pop
cmp
mov
test
mov
call
dec
loopne
orl
fsincos
fisttpl
xor
faddl
mov
insb
adc
fnsave
mov
sub
call
rcrl
inc
dec
loopne
jae
inc
adc
jl
inc
jge
gs
xor
mov
mov
mov
adc
out
mov
or
fcomps
outsb
pop
gs
insl
cmp
ja
lcall
mov
ds
jnp
mov
pop
insl
pop
adc
loopne
jne
sbb
out
jnp
and
push
jnp
sub
pushl
sbb
js
outsb
pop
jle
jns
xlat
fnsave
andl
jbe
lret
enter
aam
frstor
pusha
aad
in
lods
push
popa
sub
in
fistl
fdiv
test
mov
sub
or
mov
fs
add
xchg
lods
mov
addb
xor
fistpl
loopne
int
push
fstpt
jnp
mov
shlb
es
jb
mov
inc
cltd
mov
fldt
pop
rorb
es
push
xchg
xor
stos
cli
push
fidivl
fistpl
mov
fstpl
cli
push
das
mov
xlat
dec
dec
jae
imul
clc
xor
gs
punpckldq
mov
clc
ds
stos
fisubl
mov
add
push
add
aaa
sbb
sbb
mov
stc
mov
lahf
or
fcmovne
ror
inc
cwtl
add
loope
js
test
fcomi
pop
icebp
int3
mov
lods
push
fistpl
fmuls
lret
jns
jp
jecxz
cmp
fdiv
lret
fcmovnbe
inc
data16
rol
leave
fistl
sub
xor
pop
sarl
fcmovne
adc
xchg
xor
and
clc
scas
aas
or
orb
test
pop
ja
xchg
sub
scas
push
lahf
xchg
dec
ss
repz
fisttpl
push
mov
mov
scas
arpl
inc
sbb
clc
jl
out
lahf
sub
fildl
std
inc
fstpl
in
insb
shl
and
mov
cmp
mov
pop
fstpt
notb
cmc
sub
fldt
std
mov
lods
dec
lods
pop
iret
xlat
sub
push
fistl
inc
sub
cmp
dec
mov
mov
jns
sub
mov
call
push
lcall
and
fcmovb
int3
adc
add
aaa
loop
and
sti
xlat
std
addr16
cmpsl
in
cltd
nop
jnp
stos
xor
inc
mov
cmp
hlt
sbb
aas
nop
sti
je
mov
stos
testb
aaa
and
push
inc
or
js
stos
push
and
pop
aas
out
sbb
adc
ljmp
cmc
jmp
mov
cmpsb
jl
insl
lea
push
push
addr16
rorb
outsb
stos
mov
push
sub
inc
add
cmp
cmp
ljmp
adc
jae
shll
push
cli
fcmovne
out
push
mov
stos
rcll
shr
mov
push
mov
lods
adcb
and
lcall
mov
pminsw
out
inc
clc
in
mov
outsb
loop
jno
aam
jl
loopne
xor
fstp
movl
push
icebp
in
push
push
xchg
sbb
xchg
fwait
lods
stos
pop
orl
fisttpll
or
sbb
vphadduwd
mov
dec
das
repnz
jmp
test
dec
clc
jmp
sbb
test
sbb
jp
and
lods
sub
xchg
loop
and
enter
ljmp
lcall
mov
mov
jp
in
inc
mov
sbb
arpl
push
cwtl
lods
or
mov
scas
rcrb
mov
out
lcall
stos
and
ss
and
or
cmp
cmp
in
imul
lahf
scas
nop
xchg
sub
dec
jae
mov
fidivs
test
lcall
mov
je
pop
push
mov
inc
loopne
stos
add
lcall
popf
pop
imul
mov
pop
cmp
testb
cwtl
push
in
adc
aaa
popf
out
push
and
or
xchg
js
mov
loopne
xchg
outsl
stos
or
lods
pop
not
fsts
xsha256
cmpsb
pop
and
push
cmp
push
dec
adc
ficoml
adc
test
or
jmp
test
xchg
inc
ljmp
lods
adc
stc
and
push
pusha
and
gs
leave
pop
xchg
mov
stos
and
call
jp
pop
inc
cs
sub
sarb
leave
cmc
fstl
xor
lcall
push
stos
movsb
cmc
dec
in
push
cld
stos
sub
mulb
jecxz
jp
mov
xchg
mov
sub
lret
or
pushf
repz
stc
sbb
lcall
stos
and
sbb
insb
cs
outsb
pop
repnz
pop
or
sti
das
mov
mov
int
push
out
mov
out
les
cmpsb
test
int
cmc
cli
mov
or
sbb
pushf
stos
sbb
pop
std
fadd
rcll
sahf
ret
push
fimull
je
pop
inc
mov
cmpsb
dec
jmp
xchg
push
repnz
jno
test
fstpl
notl
push
insl
or
xchg
pop
mov
loope
dec
or
arpl
int
mov
loop
daa
add
je
cmp
lret
jnp
popl
out
ret
mov
sqrtps
inc
stos
dec
mov
movsb
cmp
jmp
ds
stos
and
aas
adc
xlat
inc
in
xor
sbb
pop
mov
jecxz
lods
imul
int
push
outsl
sbb
ret
fcmovnu
lcall
dec
out
mov
fmul
in
pop
xchg
daa
dec
adc
sub
mov
fwait
lcall
icebp
lcall
jne
push
ret
add
mov
outsb
test
cmp
pop
pusha
rcr
in
or
aas
mov
mov
or
leave
inc
scas
fcmovnbe
xchg
adc
movsb
fwait
std
out
mov
sbb
pop
out
ret
xlat
fsubrl
jp
jno
fstpl
mov
jle
js
rorl
inc
inc
ds
xor
jge
mov
test
dec
xchg
mov
pop
xor
dec
pop
clc
stc
aas
and
xor
xchg
adc
repz
cmp
lods
jbe
sub
mul
loope
in
popf
mov
icebp
mov
sbb
add
mov
mov
lods
daa
xlat
or
pop
addr16
jmp
jecxz
out
insb
popf
adc
xchg
jmp
xchg
fwait
mov
fldt
xor
lds
scas
push
push
lock
dec
repz
add
pop
dec
aaa
xchg
dec
xchg
push
mov
sets
test
jno
xchg
adc
sbb
mov
sub
xorb
xchg
xchg
pusha
outsl
push
fimull
jmp
jge
mov
inc
scas
in
push
cs
fcmovnbe
xor
xor
aad
or
ljmp
test
push
movsl
outsb
xchg
nop
neg
push
adc
fldt
add
mov
dec
push
sbb
jmp
inc
cmp
jb
pop
cltd
jne
and
unpcklps
xchg
addr16
ja
fwait
xchg
call
adc
xor
or
cli
xchg
pop
icebp
fstpt
cmp
mov
push
mov
aas
sub
push
dec
test
pop
aad
push
out
fisttpl
test
xchg
dec
sub
daa
nop
add
pop
sbb
out
ret
testl
cld
lods
scas
pusha
cmc
enter
ficomps
aam
fldt
shr
decb
or
sub
jmp
mov
jne
pop
mov
in
jmp
inc
and
xchg
mov
mov
fistl
shl
push
cmp
xchg
ret
arpl
stos
adc
fstl
sahf
jp
aaa
mov
jo
xchg
fldt
xorl
mov
fistpl
repnz
sub
bound
addr16
xor
xor
fwait
inc
pop
repz
aaa
xchg
sahf
xor
fisttpl
fwait
sbb
std
mov
jmp
fidivrs
mov
stc
jo
jge
rorb
fbld
mov
mov
xor
cltd
lcall
fstpt
call
lcall
inc
jg
adc
pop
adc
xchg
sub
push
fcmovne
fisttpll
data16
jle
loop
outsb
dec
inc
iret
jnp
inc
ds
push
enter
rcrl
in
sbb
fcomip
sub
fimull
adc
repnz
das
inc
pop
xor
sbb
outsl
ret
filds
enter
out
loopne
push
add
mov
cltd
xchg
and
fcmovb
push
aas
dec
fldt
lock
icebp
sbbl
jecxz
push
pop
ficoml
push
lods
js
pop
mov
xor
sbbb
mov
cmpsl
mov
xchg
lret
fistpl
dec
test
inc
lret
add
fcmovnu
xchg
ret
add
imul
mov
jecxz
dec
sbb
shlb
sub
sbb
in
and
pop
bnd
or
dec
sbb
rorl
pop
lahf
jl
xchg
push
scas
das
pop
dec
fildl
leave
insb
push
icebp
outsb
mov
int
and
sub
fsubrs
jecxz
popf
cmovb
adc
in
in
inc
mov
or
mov
aas
fldt
gs
sub
pop
adc
pop
pop
inc
xchg
popf
cld
sbb
pop
jbe
dec
fistpl
push
add
fildl
mov
mov
and
xchg
arpl
and
faddp
in
add
xor
sar
loope
aaa
loopne
mov
sti
shrl
mov
or
fiadds
loopne
lock
dec
mov
out
mov
sub
cli
daa
xchg
mov
add
mov
jle
cmp
add
inc
mulb
out
loop
dec
mov
dec
pop
fldt
dec
cmp
and
pop
cmpsl
mov
sub
pop
add
iret
aaa
mov
aam
fldenv
xor
ja
adc
fstpt
and
int
ror
xor
fucomi
cli
adc
fdivp
in
fisttpl
push
sub
daa
sub
mov
lods
fptan
loope
add
sbb
mul
and
pusha
pop
fisttps
test
or
xlat
lret
mov
pop
loopne
or
mov
mov
fldt
int
xchg
dec
outsl
adc
xchg
orb
sbb
add
fidivl
int
jne
icebp
clc
stc
mov
call
in
aaa
add
cmp
xlat
ss
or
icebp
rcll
jecxz
jno
in
jmp
xchg
push
stos
sub
mov
push
lods
mov
lret
pusha
mov
les
sub
int3
lahf
lds
xorb
hlt
ljmp
and
xchg
out
xchg
push
fildl
push
sbb
adc
push
mov
add
aaa
add
mov
sbb
fiaddl
sub
adc
fldenv
insl
fcompl
jnp
sbbb
dec
mov
fcmovne
fwait
pop
gs
inc
dec
stos
fst
shrb
or
aam
les
divb
pop
pop
jecxz
stc
mov
or
push
push
mov
out
mov
mov
cltd
dec
adc
leave
xchg
out
lcall
adc
call
or
fnclex
iret
add
adc
hlt
mov
pop
push
jae
repz
mov
cli
sar
pushf
ficoml
sub
lods
call
sub
cmp
insl
js
pop
mov
stos
and
test
ljmp
pop
mov
inc
sub
adc
and
aam
fisttpl
sbb
push
cmp
pop
pop
push
pop
jno
sti
jmp
lock
and
pop
test
enter
rcr
sti
cmp
xor
mov
rcrl
xor
push
imul
icebp
cld
pop
cmp
test
pusha
cmp
rcrb
dec
push
xor
jae
mov
mov
jl
shrl
adc
push
sarb
fucomi
loopne
test
std
movsl
adc
lods
imul
add
mov
cmp
fcmovne
mov
sbb
pop
fstpt
push
dec
push
dec
int
fidivrl
or
repnz
mov
jle
lods
mov
fistl
stos
ljmp
loopne
inc
jbe
xor
or
mov
sbb
dec
mov
lcall
dec
aaa
fsubr
add
fcmovne
or
lcall
out
and
or
orb
push
and
dec
fidivl
popf
ret
pop
loop
jge
sub
movsb
rclb
scas
push
push
push
inc
out
sub
aaa
pop
lcall
jecxz
jmp
fisttpl
cmp
sti
dec
iret
fisubl
jno
out
fldt
xor
mov
out
movsb
or
mov
adc
in
loope
mov
or
cltd
cmp
sbb
xchg
dec
popa
mov
push
sub
adc
mov
shrb
inc
add
cmp
mov
fimull
pushf
adc
popf
leave
mov
mov
jge
inc
ds
movsl
aad
loopne
pop
xchg
idiv
fcoml
jo
and
rcl
fldt
mov
jp
clc
sbb
lods
mov
mov
mov
xchg
fistl
repnz
sbb
sbb
ljmp
adc
push
mov
adc
scas
stos
push
jl
divb
push
insl
sti
fucomp
aas
jo
jle
mov
jl
fcmovnu
mov
sbb
lret
push
test
in
fildl
popf
pusha
nop
mov
test
mov
in
xor
les
shlb
movsl
push
imul
je
inc
and
sub
jae
mov
sti
xchg
js
or
mov
xchg
cmp
ret
repz
cmp
fisttps
mov
sub
mov
mov
test
cs
xlat
jne
popf
cltd
stos
scas
lock
xor
loop
pop
fdivrs
pop
mov
loop
sub
xlat
fnstenv
sbbl
cmp
sarl
outsl
rcrb
in
subb
fidivrl
jae
fcomi
clc
movsb
push
mov
jecxz
fildl
mov
jmp
je
xchg
xchg
das
stc
mov
mov
push
add
dec
mov
and
adc
in
nop
dec
jmp
out
fistl
clc
xchg
push
adc
mov
repz
les
push
push
cmp
loopne
cmc
lock
jmp
iret
or
push
cmp
loop
mov
imul
xchg
fwait
push
insb
cmp
xchg
int
jo
mov
insl
sub
jnp
rcr
sub
push
cld
push
or
lcall
scas
adc
ror
lods
pop
out
in
mov
push
orl
mov
push
pushf
push
fildll
cmp
mov
or
push
outsb
pop
sbb
mov
insb
dec
inc
fnsetpm(287
push
testb
mov
fisubrs
mov
lock
into
mov
sbb
pop
fwait
sbb
lret
jecxz
jno
jbe
pop
repnz
iret
push
aaa
frstor
ret
jecxz
mov
push
inc
imul
or
pop
jo
into
dec
sti
jecxz
das
shll
cmp
xchg
mov
pop
mov
mov
std
jbe
sbb
ficompl
fsubl
push
jmp
arpl
xchg
adc
mov
xchg
dec
stos
jle
dec
cmc
sahf
in
aas
ffreep
fdivrl
inc
mov
movntq
out
mov
xchg
mov
loopne
pcmpgtb
push
scas
xchg
in
rolb
xchg
stos
jo
jne
in
sbbb
mov
jge
push
outsl
dec
enter
lods
movsb
pop
cmpsl
stos
push
test
out
sti
inc
adc
in
jl
xor
icebp
in
arpl
jmp
int
mov
xchg
lods
xor
gs
cmc
outsb
out
inc
div
stos
icebp
lahf
adc
push
jo
out
push
jo
jg
in
xchg
mov
dec
lea
add
cwtl
adc
mov
mov
add
stos
lock
jge
cmc
fistl
dec
rolb
sti
out
stos
aad
fnstcw
cmp
jge
pop
ret
bound
faddl
loope
shll
mov
fisubrl
push
sbb
sub
or
lret
inc
in
aaa
aas
adc
push
clc
fdivrl
int
loopne
sbb
lret
dec
pop
lret
sar
push
xor
gs
mov
leave
stos
clc
testb
clc
pop
popf
push
stos
fwait
jmp
mov
adc
cmpsl
and
repz
inc
add
stos
jecxz
jp
stos
ss
pop
movsl
aas
lret
nop
in
mov
inc
mov
lock
repz
jge
inc
loope
sahf
or
scas
mov
adc
mov
andb
loope
lods
push
and
sbb
mov
jnp
loop
movsl
repz
ljmp
sub
mov
push
andl
jnp
add
icebp
ljmp
jp
stos
lcall
mov
push
arpl
imulb
xchg
je
mov
into
stos
iret
ljmp
pop
ja
push
outsb
sbb
inc
mov
lahf
out
popf
sarb
fisttpl
stc
iret
mov
lahf
insl
and
inc
addl
inc
lds
stos
adc
movntq
out
lods
leave
loope
pop
test
out
cwtl
ljmp
aam
pushf
add
das
xchg
and
les
sub
aad
fstpl
es
jmp
sub
scas
fmull
addr16
sbb
jo
mov
ljmp
and
mov
push
sahf
jb
mov
add
std
addr16
cmp
subb
ja
xlat
clc
pop
xor
out
xchg
pop
arpl
sbb
incl
or
fwait
call
loop
mov
ret
rorl
je
cmp
jne
add
iret
sub
or
lds
inc
xchg
loopne
rolb
sbb
jno
lods
sub
mov
cmp
mov
xchg
jecxz
mov
sub
xchg
pop
repz
or
push
lods
jb
pop
arpl
insl
ficoms
fisttpl
pop
nop
sbb
add
and
mov
inc
xor
shl
xor
lods
rorl
rep
xchg
add
lods
dec
and
push
xor
xlat
out
pop
and
jne
or
andl
dec
jp
add
scas
addr16
fwait
lods
data16
insb
jae
sbb
jo
mov
fcmovnb
sub
pusha
mov
pop
fisubrl
inc
lods
inc
mov
fldl
lcall
push
ljmp
sbb
repnz
or
xchg
loopne
lcall
mov
add
push
mov
insb
xor
cltd
shl
sbb
fbld
mov
mov
stos
jne
dec
into
cmp
test
sub
frstor
sbb
mov
mov
or
inc
insb
rcrl
inc
fs
sbb
mov
xor
cmp
push
sub
shrl
jno
dec
ss
and
mov
fistl
rep
arpl
inc
lret
in
inc
sti
aad
pop
fistl
int
and
cmp
lahf
cmpb
mov
mov
lret
jns
mov
jo
add
adc
scas
sub
xorl
aam
fistpl
sbb
lds
xor
sub
add
and
bound
fistpl
popf
cmp
shr
mov
cli
rorb
mov
mov
jg
jnp
fstpt
mov
cmpsl
js
jne
pop
andb
sbb
push
fwait
cltd
mov
pop
das
jmp
outsb
popa
aad
mov
imulb
fcoms
xchg
pop
popl
arpl
jne
fwait
dec
sahf
pop
outsl
lret
mov
test
adc
sbb
ficompl
fistl
cmpsl
inc
mov
add
mov
push
je
arpl
insl
push
fstpt
lods
xchg
ds
jnp
add
ret
sub
xor
loopne
fildl
mov
or
add
ss
pushf
mov
push
xor
jp
daa
sbb
mov
mov
fstp
dec
xchg
jnp
inc
cwtl
inc
jb
sahf
mov
cmpsb
fistpl
cmpsl
outsb
pop
cmp
xchg
sbb
sub
sbb
call
das
sbb
add
loopne
shrl
movsb
mov
jg
mov
shrb
push
dec
fisubrl
sbb
nop
cmc
les
adc
addl
loopne
push
loop
fstpt
pop
data16
mov
dec
fnsave
loopne
outsl
pushf
pop
dec
hlt
fistps
ror
fildll
mov
dec
int3
stos
jne
inc
mov
aam
fistpll
dec
jns
sahf
lret
rolb
or
call
in
scas
fistpl
pop
hlt
lods
lock
mov
in
popa
xor
adc
adc
cmp
and
fdivl
scas
test
push
mov
pop
in
fs
mov
mov
fcomip
fwait
call
and
shlb
hlt
mov
jl
lods
loopne
jns
mov
pop
outsl
ret
inc
loopne
out
mov
sarb
jno
mov
dec
add
add
fcompl
aaa
push
adc
test
pop
inc
fwait
push
jl
dec
stos
mov
xor
in
shl
loope
pop
pop
jne
push
xchg
aad
adc
mov
mov
adc
in
clc
jns
xorb
fildl
sub
pop
inc
cs
out
ret
jnp
sbb
xlat
adc
lds
dec
int
lods
std
cmc
in
mov
push
push
lcall
xchg
sbb
scas
push
mov
pop
dec
loope
adc
and
mov
negb
dec
pop
call
add
push
lock
mov
sbb
push
push
mov
pop
xor
cmp
or
fstpl
lahf
imull
jno
fcmovnb
imul
fcmovnb
aad
int
adc
fistpl
pop
dec
push
fcmovne
push
adc
fistl
rorl
imul
mov
adc
sbb
pop
add
imul
inc
mov
fwait
mov
sub
xchg
repnz
xor
fcmovnb
leave
ret
push
jmp
mov
clc
test
int
insb
mov
out
dec
mov
push
jg
testl
nop
pop
sub
stos
pop
shll
repz
push
les
das
mov
fistpl
lds
insb
push
xor
lcall
xor
out
div
scas
inc
sbb
sub
fstpt
das
outsb
push
fnsave
dec
out
cs
mov
fistl
mov
mov
sbb
pop
inc
dec
pop
push
add
jecxz
mov
outsb
mov
fistl
mov
and
call
arpl
lea
sbb
nop
and
pop
push
mov
aam
push
sub
dec
stos
int3
push
cmp
pop
adc
add
sbb
fcmovnu
ds
aaa
fimull
popa
sbb
sbb
cmc
lock
push
add
das
clc
xchg
pop
int3
jl
fistpl
jecxz
cmp
mov
jo
decb
aas
fistl
bound
in
divb
in
xchg
loop
sti
lods
popa
push
jp
sarb
mov
mov
mov
lcall
repnz
jo
icebp
test
stos
xchg
out
or
fstpt
fistps
pop
sub
fisttpl
lret
jl
iret
adc
fisttpl
or
cmp
bound
mov
or
push
loope
mov
jno
fstps
mov
fsubp
pop
movsl
dec
dec
adc
xchg
movsb
nop
mov
xor
mov
mov
in
ljmp
aam
sub
sbb
ficoml
and
adc
mov
fcompl
in
jp
ret
and
lret
push
xchg
mov
adc
into
lods
ja
les
sbb
mov
mov
lea
adc
dec
push
push
shll
fidivrl
clc
and
repz
sub
pop
fcmovne
push
test
in
jp
incl
jns
xchg
adc
pop
adc
shl
mov
pop
aaa
dec
fstpt
dec
sbb
sbb
cvtdq2ps
or
aam
mov
xor
fldt
xor
add
mov
xchg
aas
xor
jnp
out
fcmovbe
and
push
insb
sbb
xchg
sti
sub
lret
mov
movsl
divl
inc
adc
ret
test
or
in
xlat
sub
and
jnp
xchg
rcr
dec
xor
ds
cmpb
and
push
pop
stos
sahf
cmc
pusha
mov
jmp
mov
jns
lret
out
mov
and
xchg
outsb
push
dec
mov
add
mov
fistpl
je
test
cmc
shl
and
sbb
mov
cmc
leave
je
subl
pop
shlb
lahf
in
idivb
nop
xchg
pop
sub
icebp
sub
jle
mov
repnz
cld
sub
cmp
add
dec
mov
lods
fstps
loopne
fistl
pop
rcrb
mov
pop
inc
inc
lahf
xor
pop
or
pushf
arpl
fldt
cwtl
call
jns
fidivrl
push
fistpl
stos
lahf
or
fistl
push
outsb
push
pop
adc
sbb
fcmovnu
test
jge
dec
stos
pop
fistl
out
in
rolb
out
xchg
cwtl
push
jmp
shrl
test
ret
adc
aad
or
add
fimuls
mov
fstpt
push
out
out
push
sbb
jecxz
pop
fdivr
jmp
rcrl
push
push
ret
pop
popa
les
rcr
into
bound
inc
ret
fidivrl
iret
nop
testl
mov
fildl
pop
mov
sbb
daa
sub
mov
bound
js
imul
dec
cmp
push
fstpt
xchg
cltd
out
push
ficoms
mov
shrb
or
xchg
fistl
repz
dec
out
lods
mov
push
xor
in
jp
fildl
fisttpl
call
out
fstpt
int3
lods
into
fistl
push
jge
jmp
mov
cltd
nop
push
sub
test
scas
pop
mov
clc
or
jecxz
push
aam
mov
movsl
and
pop
xor
jbe
xlat
mov
mov
xchg
cltd
push
fs
push
pop
loopne
leave
stos
sub
fwait
adc
enter
sbb
adc
cld
sub
shlb
mov
mov
repnz
inc
int3
mov
xlat
jl
fcmovnbe
test
xchg
frstor
arpl
cmp
fstpl
movsb
push
xor
mov
lret
dec
rcll
insl
add
push
iret
inc
fwait
or
stos
int
push
mov
ret
int
lea
add
jne
pop
mov
mov
adc
rorb
push
cmp
mov
jae
js
mov
inc
movsl
in
xchg
fucomi
mov
or
mov
mov
sbb
fiaddl
les
fstpt
mov
mov
scas
mov
call
and
inc
aam
dec
notb
mov
sbb
sub
ret
imul
inc
cltd
push
adc
mov
in
and
sub
fdiv
in
sub
dec
fwait
mov
pop
es
movsb
and
out
outsb
push
into
xchg
out
and
loopne
mov
fldenv
sarl
roll
incb
into
imul
adc
es
add
add
adc
shlb
cmp
lods
cmp
jne
nop
jnp
aam
out
sub
mov
jp
sbb
mov
cs
xor
cmp
clc
jns
cmc
push
inc
add
inc
stc
mov
and
ficoms
loope
cwtl
cltd
cwtl
sbb
pop
jo
daa
add
icebp
fninit
dec
test
push
outsl
dec
fistpl
stc
jb
fistpl
sbb
adc
jo
in
sbb
cmp
in
jl
pop
jbe
sarl
lcall
fldt
enter
iret
ret
dec
fildl
pop
popl
aaa
incb
inc
call
stc
clc
mov
push
pusha
push
jno
in
sub
pop
mov
jo
or
int
repnz
leave
loopne
and
push
jae
sti
cmpsl
or
mov
push
nop
jo
loopne
mov
adcl
fcmovnbe
ret
jbe
shrb
lea
test
mov
out
jno
lret
mov
cs
sub
mov
rcl
fcomi
repnz
jns
jno
xor
cmp
call
sbb
adc
mov
cmp
jne
rol
jle
xor
mov
rcr
mov
stc
arpl
jecxz
adc
ret
cs
mov
or
mov
fldt
sti
jne
fistl
mov
sub
pop
rolb
adc
sbb
dec
ss
or
scas
insl
imul
mov
or
jo
insb
loopne
jp
xchg
xchg
mov
dec
flds
sbb
out
test
cmc
jne
jge
xor
jb
js
lret
test
sbb
inc
jo
fldt
xchg
je
sti
jmp
call
push
les
add
cli
adc
jne
or
sub
loopne
mov
sub
cmp
in
pop
inc
aam
sbb
inc
std
fldt
movl
out
dec
push
or
add
negl
popf
jg
adc
jle
fwait
xchg
in
aas
scas
arpl
ljmp
jl
ret
sarl
sbb
fmuls
sarb
mov
sub
lret
push
fsubrs
add
xor
scas
fistpl
test
fcomi
mov
add
mov
xor
inc
fldl
lcall
stos
push
fcmovnb
cwtl
in
in
adc
inc
adc
loop
pop
subb
fildll
mov
and
testl
and
sub
inc
xor
push
in
mov
xchg
call
sub
fcmovnb
pop
push
mov
popa
movsl
insb
xor
enter
jg
adc
lret
cmpsb
stos
xchg
push
or
std
lea
neg
jno
clc
pushl
les
and
or
cmp
dec
cmp
lcall
fistpl
das
or
xlat
arpl
xchg
clc
mov
shl
lahf
out
inc
sahf
mov
imul
mov
or
jae
insb
out
xchg
mov
xor
lea
fisttpl
pop
pusha
fldt
dec
into
lods
xor
aas
push
sbb
jge
sbb
and
sub
xor
mov
xchg
mov
fwait
cs
sbb
sbb
inc
loopne
sub
and
cmp
inc
js
aam
scas
jno
fisttpll
dec
iret
shll
push
cmp
scas
fistpll
push
sahf
push
idivb
jne
push
fidivl
cwtl
lock
inc
fistl
popf
rclb
arpl
test
push
shlb
add
cmp
jbe
cmc
lods
cmp
jge
fldt
ret
pop
fnstsw
movsl
dec
fistpl
mov
adc
fldt
gs
xchg
xchg
pop
mov
mov
scas
jl
iret
pop
fcmovne
cmp
pushf
sbb
sub
in
lcall
dec
fcomp
xor
call
push
cmp
cmp
mov
pop
cwtl
dec
int
fildl
push
xor
je
fistpl
ret
fimuls
sub
into
add
dec
call
jb
lcall
xchg
push
mov
or
es
jae
jmp
das
jle
xchg
xchg
sbb
orl
stos
push
scas
fcmovnu
fs
xchg
sbb
inc
push
into
ret
dec
test
mov
jns
mov
icebp
mov
jle
popf
data16
mov
lods
cmp
fcmovnu
mov
push
cmp
cmpsb
sbb
inc
mov
out
mov
dec
inc
push
sbb
icebp
enter
call
or
fldcw
cmp
int
xchg
sub
fldt
dec
pop
push
stos
fbld
fidivrl
pop
fsubrs
pop
adc
sti
pop
sbb
outsb
cmp
icebp
or
push
xor
xchg
sbb
arpl
lock
mov
push
inc
aam
or
sub
adc
cltd
fwait
aas
push
fisubrl
inc
pop
add
ljmp
inc
fldt
out
aad
cli
out
fisttps
cmp
add
shr
adc
fwait
rcrl
stc
add
jns
dec
popf
fisttpl
mov
ret
mov
sub
lea
xor
sbb
stos
fistpl
enter
cld
push
and
jae
fidivrl
jg
sbb
fistps
call
fisttpl
hlt
sbb
xchg
add
cmp
push
mov
imul
push
pop
cmpsl
jecxz
mov
leave
pop
call
fisttpl
outsb
icebp
adc
shrb
ficompl
call
clc
mov
insb
xchg
jge
mov
int
push
or
and
cmpsb
push
leave
mov
mov
mov
icebp
or
lods
xchg
sub
fcmove
pop
sti
fisttpl
mov
sbb
fildl
dec
dec
repz
outsl
lret
js
fistpll
int3
test
mov
pusha
push
xor
adc
aam
clc
fistps
test
les
mov
mov
out
push
pop
mov
out
push
out
xchg
hlt
lcall
pop
in
adc
popf
pop
xchg
out
fwait
out
shlb
inc
daa
or
adc
insl
jbe
lea
mov
loop
mov
in
subb
fcmovne
jbe
add
adc
addr16
jge
stos
fnsave
or
fistl
faddl
mov
loop
outsl
xchg
fcmove
adc
jae
rcll
cmp
sbb
loopne
mov
push
add
xor
inc
inc
pop
dec
mov
loope
fistl
pushf
adc
adc
movsl
mov
fxch
fdivrl
sarl
pusha
insl
and
cmpsb
in
pop
pusha
loope
xchg
sbb
push
mov
jo
xchg
mov
fistl
cwtl
call
mov
popa
jl
xchg
sar
push
pop
neg
sub
add
rcrb
jbe
bnd
mov
sarl
loop
bound
sub
mov
leave
push
jne
push
dec
loope
sbb
mov
leave
lods
or
divb
test
mov
pop
inc
cwtl
ret
and
adc
subb
ret
and
jg
mov
push
sbb
test
cltd
mov
sbb
sub
fisttpll
loop
mov
xchg
loope
ret
rcrl
jg
fildl
jmp
fstpt
push
xchg
sbb
in
and
add
fcmovnb
outsl
fs
ds
jmp
cmp
lock
dec
shrl
call
lds
jge
test
xor
mov
js
and
ficoml
inc
fwait
ja
loopne
dec
outsb
dec
jae
fildl
cs
lret
inc
out
dec
lea
pushl
jmp
and
ret
insb
fistpl
mov
mov
pop
xchg
aam
adc
jle
pop
imul
jmp
fs
mov
mov
out
cmp
mov
call
and
test
jb
and
fcomi
mov
clc
cmp
adc
xchg
inc
and
xchg
into
inc
decl
ret
pop
icebp
fcmovnu
stc
enter
leave
jne
inc
cmp
pushf
push
fistpl
mov
test
filds
aaa
js
dec
fwait
jge
add
rcl
mov
lret
push
jecxz
sbb
shr
je
mov
jge
ficoml
pop
add
sub
pop
inc
cltd
mov
push
mov
lahf
decb
jbe
sti
push
cwtl
xor
fldl
push
dec
aaa
mov
jnp
jecxz
lahf
fwait
lret
cmpl
in
sbb
test
push
adc
fidivrs
das
rcrb
xchg
lcall
xchg
loopne
add
fsubrs
sbb
cli
push
clc
gs
fcmovu
pop
ds
aas
rcrl
call
pop
pop
sbb
jmp
fisttpl
and
mov
fistl
xchg
inc
xor
in
mov
test
or
daa
mov
sar
push
mov
call
jno
gs
roll
test
xchg
cmp
dec
pop
ret
fsubs
fstpt
fsts
pop
add
je
push
out
and
insb
add
stc
aad
fisttpl
jae
shlb
ss
ret
jp
adc
fcmovnbe
rorb
adc
xbegin
fstpt
fsubrp
mov
fcomps
or
xor
mov
push
in
repz
aas
aam
lods
iret
dec
sbb
dec
and
loopne
in
xchg
cmp
loopne
pop
mov
add
repz
lods
mov
sub
clc
fwait
daa
mov
push
fsub
jl
loop
sub
movsl
xlat
fstpt
xor
lods
dec
mov
les
push
push
push
in
fimull
mov
stos
sti
fistpl
repz
adc
mov
dec
add
imul
dec
fildl
adc
sub
sahf
sub
loope
push
fisttpl
push
pop
mul
in
ret
arpl
popa
mov
sbb
dec
ss
sbb
push
mov
mov
repz
add
adc
test
pop
xor
fcmovnu
mov
cs
xchg
mov
xor
shll
bound
fistl
cld
push
mov
or
sti
insb
imul
and
cmp
pop
lret
lds
out
and
scas
mov
imul
fcmovne
jo
fprem1
std
sbb
mov
sbb
jg
lea
icebp
add
mov
xor
sahf
jne
fildl
fstpt
jno
mov
fldenv
mov
negb
jecxz
out
or
jns
pushf
rcpps
dec
shll
leave
imul
push
mov
lods
pop
pop
in
mov
popa
js
out
dec
in
fldt
dec
lods
les
scas
or
aam
addb
lcall
dec
fistpl
stos
push
insb
fcmovnbe
xor
mov
pusha
inc
fninit
mov
sahf
call
or
sbb
mov
fisubrl
mov
inc
fistpl
call
mov
sti
add
sub
fsubrs
mov
add
fistpl
fcomip
jg
ljmp
sub
fsubl
push
out
pop
jmp
mov
xor
or
insl
fistl
sbb
adc
xchg
scas
mov
fdivrl
dec
lret
out
lret
push
mov
jmp
es
jbe
mov
test
pop
mov
lds
pop
push
filds
mov
out
pusha
jmp
ficoml
jle
push
inc
pop
int3
sarb
xor
jg
jp
fisttpl
push
jecxz
push
stos
aas
adc
push
and
ljmp
or
pusha
sahf
pop
dec
lock
jnp
pop
dec
pop
inc
mov
push
loopne
hlt
rorb
imul
mov
push
aas
dec
fs
xchg
stos
xchg
jge
insl
or
xor
fstpt
jne
xchg
fisttpl
lret
inc
add
pop
and
push
dec
ffreep
fisttpl
loop
push
iret
cmp
jae
repnz
fucomi
jle
mov
or
add
add
idivb
pop
xorb
lods
gs
fcmovnu
and
cli
jmp
dec
fnclex
mov
jge
push
sahf
test
icebp
jp
add
sub
mov
mov
add
push
push
stos
push
clc
or
outsb
mov
add
add
hlt
and
cmpb
fisttpl
inc
pminsw
add
and
xor
adc
pop
das
lcall
outsb
push
call
and
pop
jl
inc
jl
fistl
lret
jle
pop
adc
mov
mov
and
call
aad
push
jecxz
or
stc
cmc
adc
aaa
jge
out
dec
lret
clc
inc
push
inc
mov
dec
fiadds
pop
fstpt
mov
jmp
js
xor
icebp
inc
push
mov
arpl
cltd
fcoml
sub
push
ror
mov
daa
loopne
mov
imul
dec
lret
jmp
sbb
xchg
shl
add
sub
fcmovne
and
scas
adc
adcb
sub
ja
fidivrl
push
jns
int
cmpsb
jge
leave
cmp
dec
xlat
fistl
shrl
mov
cmp
cmpsb
jns
push
ret
inc
bound
mov
dec
out
clc
mov
neg
shlb
lret
jb
jns
or
dec
inc
xlat
inc
lds
pop
xchg
push
jb
out
sarb
stos
or
or
push
lods
outsb
clc
xor
call
pop
addr16
sbb
nop
call
insl
cwtl
iret
out
test
adc
in
sarb
icebp
repnz
pop
mov
movsb
dec
pop
cltd
push
sbbb
adc
mov
enter
xchg
push
mov
and
add
into
dec
inc
mov
xor
xchg
fnclex
cmp
mov
sbb
hlt
mov
fsubrl
pusha
inc
fisubl
cld
push
and
iret
jmp
orb
dec
dec
mov
pusha
rcrl
scas
dec
repz
dec
popf
mov
xor
push
fdivrs
sbb
pop
lahf
fwait
pop
mov
sbb
xchg
pop
gs
imul
sbb
push
xchg
dec
fistpl
test
cmc
xchg
shl
mov
icebp
mov
es
add
fistpl
leave
adc
mov
test
cmp
lret
mov
mull
inc
sbb
fcmovne
and
and
outsb
inc
popf
insb
std
stos
lahf
dec
xchg
cmpsl
add
jbe
rcr
sbb
cmp
fsub
dec
ret
neg
xchg
fbld
fistl
or
in
imul
fistpl
repnz
test
add
mov
xor
adc
inc
add
pop
push
sbb
pop
or
aaa
xor
xchg
dec
fldt
ss
sar
jbe
fcmovnb
lea
imul
and
inc
jl
lock
mov
repnz
repz
cmp
adcb
mov
jp
mov
std
sbb
inc
pop
mov
mov
cmp
cmp
inc
iret
das
sti
mov
fchs
and
out
daa
mov
adc
sbb
or
in
cmp
push
nop
cmp
je
fcmovnbe
xchg
xchg
jae
xchg
mov
mov
sub
dec
inc
xchg
rorl
adc
push
pminub
sub
repnz
inc
mov
fistl
das
ret
mov
fisubrs
jo
test
mov
jg
lods
fcmovnb
fbld
push
fisubrl
fcmovnu
push
ret
xchg
fnstcw
fldt
adc
loope
jnp
shr
pop
es
cmc
in
fistl
push
ja
fisttps
fisttpl
and
jp
aas
data16
xchg
mov
fstpt
subb
xchg
mov
jno
in
adc
adc
shr
mov
aaa
push
fstpt
into
mov
lcall
push
jno
ret
jmp
xor
dec
lret
lods
mov
rcrl
dec
sti
or
js
cmpsl
ds
adc
fistpl
jbe
xor
jb
mov
cmpsb
loopne
jl
push
or
mov
xor
push
cs
fldt
jbe
js
xor
or
das
xor
fisttps
or
fcmovnu
and
out
test
mov
xor
repnz
ja
jne
push
fstl
mov
jg
mov
mov
aas
jg
aam
mov
arpl
sbb
and
shrb
jmp
iret
std
mov
popa
dec
xlat
sbb
jmp
decb
fcomi
mov
pop
mov
imul
aad
fwait
lret
fistl
data16
add
mov
loop
repz
loopne
mov
pop
jae
jo
mov
loop
and
outsb
xor
cmp
cli
push
jo
sub
arpl
jecxz
cmpsb
and
mov
or
test
das
aam
pop
dec
cmp
std
loop
adc
pop
shl
or
adc
aam
arpl
stos
mov
xchg
in
outsl
stos
xlat
popa
repnz
out
add
pop
jg
xor
clc
xlat
pop
and
sbb
add
dec
into
cmp
ss
or
adc
and
int
clc
fucomi
rcl
fldcw
cmp
subl
mov
jg
lods
mov
dec
out
pop
mov
loopne
loop
stos
cmc
fldl
mov
adc
jg
addr16
lret
mov
and
pop
in
add
das
leave
fmuls
outsl
cmp
icebp
popa
adc
movsb
jl
adc
or
jle
jnp
stos
inc
dec
out
mov
xor
sti
fildl
sbb
adc
ljmp
lcall
pop
pop
rorb
mov
leave
xchg
jo
lods
or
add
xor
lea
mov
push
ffree
fdivs
jo
lret
lcall
scas
and
int3
pop
sbb
popa
icebp
cmp
xchg
movaps
push
scas
or
icebp
fisubs
cmp
adc
in
mov
push
sub
jbe
mov
outsl
xor
aad
std
pop
movsl
rorb
fwait
scas
fucomp
hlt
int
and
jle
icebp
jmp
imul
mov
xchg
jle
jp
ds
xchg
mov
out
call
ret
mov
insb
dec
push
ret
or
insl
inc
or
and
mov
adc
jge
jns
and
sbb
mov
pop
movsl
xchg
mov
xchg
neg
ret
pop
lds
fcomps
sub
int
xor
fildl
jmp
xchg
push
icebp
js
fstpl
mov
sbbl
gs
xor
into
repz
cmp
mov
pop
test
cltd
fisttpl
pop
inc
push
icebp
rcr
data16
fisttpll
fstpt
jmp
fistpl
xor
stos
enter
test
mov
fcompl
or
jns
loopne
sub
popa
sbb
es
pop
fcmovb
pop
push
icebp
mov
fstpt
xlat
inc
scas
neg
into
int3
mov
mov
or
cmpsb
pop
jp
call
dec
fwait
push
jmp
fistpl
jo
rcll
pop
and
push
fwait
popf
cmc
stc
fsubrl
push
repnz
cmp
or
cmc
sbb
push
addr16
push
fcmovne
pop
dec
cs
outsl
shlb
xchg
aad
push
push
mov
pop
cmp
test
mov
pusha
mov
inc
lds
adc
loop
fldt
mov
imul
loopne,pn
add
cmc
call
fistpl
or
lahf
fildl
mov
jne
sbb
inc
pop
in
cmp
and
es
or
and
js
in
daa
push
ficoml
add
test
push
jnp
adc
loope
mov
adc
mov
sti
in
loop
sub
add
aam
ss
pand
not
pop
addr16
mov
sub
jmp
hlt
xor
fcmovnu
push
cli
xchg
jp
into
lea
xor
and
sub
push
cmp
jo
jp
lret
jle
loopne
mov
arpl
daa
pop
xchg
rcrl
sarl
mov
call
pop
jp
push
cmc
imul
enter
stc
fcmovnb
fsts
aad
mov
adc
popf
jno
insl
stc
call
jb
and
mov
mov
clc
jle
mov
addr16
fistl
imul
jbe
fs
sbb
push
adc
sti
clc
mov
fcomps
fldt
outsl
fstpt
jne
sub
push
sbb
sbb
xor
mov
call
inc
stc
sbb
push
das
mov
add
adc
fcoms
out
fs
inc
push
femms
fisttpl
jle
mov
inc
mov
lcall
je
push
lret
or
mov
outsb
in
inc
fsubl
pop
xchg
xchg
push
subl
popf
mov
scas
icebp
out
cld
cmp
add
xchg
sub
sub
sahf
sbb
dec
std
push
fstpt
mov
lea
mov
add
scas
jb
xorb
loope
jge
leave
fiaddl
jno
fs
aas
xor
sbb
mov
fistl
xor
push
or
fcomi
cmp
sbb
fldl
sub
adc
inc
push
dec
sar
xchg
xor
fistpl
mov
mov
test
adc
jg
in
repnz
dec
mov
fstpl
ja
xchg
or
imul
shr
leave
cmp
fcomi
mov
jno
loope
xchg
push
push
out
ficomps
pop
psubusb
mov
push
movsb
sub
adc
iret
fisubl
mov
inc
clc
and
jns
mov
push
adc
sub
and
mov
outsl
flds
fcmovne
sahf
loop
fldt
test
popf
in
jmp
lds
fistpl
dec
test
fldt
xchg
loopne,pt
adc
icebp
fadds
fwait
or
push
fldt
sahf
fnstsw
fnsetpm(287
jns
ds
xor
dec
xchg
jmp
lods
int3
mov
xchg
jno
pushf
dec
mov
cmp
cmp
enter
les
push
sub
js
mov
testb
adc
mov
into
movsl
fisttpl
inc
frstor
mov
mov
xor
cli
insl
adc
xor
mov
fwait
pop
rolb
stos
fimull
fistpl
mov
dec
fstpt
int3
sti
sub
imul
test
fwait
push
fistl
inc
ja
mov
and
jp
jb
sbb
add
sbb
out
daa
lret
push
jne
loope
fistl
shrl
test
dec
stc
jnp
xchg
adc
add
aaa
cmp
and
repnz
xchg
pop
pop
cmp
lar
mov
call
fcmovnbe
xchg
cmpb
jnp
arpl
or
ret
out
pop
lock
movsl
aam
fcmovnbe
cwtl
push
mov
clc
mov
or
and
mov
lahf
icebp
popf
movsl
loopne
xor
movsb
stos
or
dec
fstpt
push
xlat
movsl
jb
push
fistl
mov
cmp
ret
add
imul
xlat
and
scas
out
cmp
push
lods
fildl
scas
aad
add
imul
bnd
push
mov
stos
mov
enter
ret
lret
pop
jp
mov
jl
bound
idiv
and
push
sbb
loopne
jnp
add
cwtl
lret
adc
mov
int3
push
sbb
ret
adc
mov
std
inc
out
inc
mov
or
lods
push
mov
outsl
ret
fiaddl
mov
mov
fistpl
into
movups
push
fisubrl
aas
sub
mov
push
roll
imul
fidivl
fdiv
testb
and
ffreep
mov
inc
fistl
outsb
dec
mov
add
inc
pop
mov
cs
mov
push
push
sub
push
je
sub
das
outsb
dec
mov
cmp
ljmp
icebp
data16
add
push
leave
subps
shr
inc
cmpsl
mov
push
fildll
adcb
rcll
insl
clc
mov
jbe
addr16
rcr
data16
lret
out
ret
fsubr
pop
xchg
fildl
push
cmp
push
mov
jnp
sub
pop
fildl
cltd
pop
cld
loopne
mov
lds
lret
icebp
js
push
sub
enter
into
out
xor
mov
xchg
jg
and
cli
or
fcompl
fstpt
dec
and
jmp
sbbl
sbb
mov
imul
inc
or
fdiv
mov
ss
lods
jne
aaa
fisttpl
sub
fldt
push
les
js
inc
fldt
pop
inc
lret
lds
in
sahf
cli
mov
dec
fs
fiadds
fildl
sbb
pop
or
iret
cmp
fdivl
jne
and
vmovups
mov
cmp
mov
mov
xchg
pop
inc
pop
mov
sbb
add
fistpll
or
push
bound
pop
jp
push
aas
cli
loop
cmpsl
ja
jno
dec
ja
call
out
sti
roll
call
or
push
shlb
insb
pop
das
fwait
dec
xor
loopne
and
fistpll
popa
in
jbe
inc
pop
fsub
fisttpl
sub
sub
fstpt
mul
jne
fdivl
fistpl
sahf
fsubp
and
in
enter
mov
cmp
push
scas
push
cwtl
cmp
ret
rcrl
sbb
test
inc
mov
fildl
push
sahf
cmpsl
xor
lea
int
pusha
mov
cli
and
movsl
hlt
roll
sbb
ret
rcr
cmp
mov
push
out
nop
fistl
int3
imul
cmc
clc
push
mov
into
pop
out
mov
cltd
jp
mov
sti
daa
xlat
fisttpll
push
cmpsl
mov
mov
ja
into
or
mov
inc
add
in
int
ljmp
or
fldt
jo
imul
int
pop
add
scas
fisttpl
stos
jno
add
and
add
jmp
enter
push
cmpsl
xor
fldt
add
test
imul
lds
aaa
dec
ss
stos
frstor
enter
cld
and
dec
adc
jnp
pop
ds
je
fstpt
frstor
scas
rol
mov
dec
orb
mov
pop
pop
jnp
in
fdivp
in
aam
cmpsl
pop
jge
fucomp
sbb
mov
adc
push
jl
xchg
jecxz
imul
fistl
sub
add
addr16
mov
call
pop
xchg
leave
fwait
sub
jp
insb
fbld
dec
adc
or
xchg
add
scas
sub
inc
repz
mov
jns
dec
mov
mov
jnp
outsb
inc
or
sti
add
mov
ffree
mov
mov
icebp
pop
clc
js
test
fistl
loop
stc
sbb
xor
push
add
aam
fisttpl
mov
out
in
push
jg
jns
push
imul
packuswb
inc
fists
sbb
mov
mov
mov
fucomi
inc
fs
fcmovnb
jg
popf
xchg
inc
jge
add
dec
push
in
push
mov
adc
insb
sub
aad
mov
loop
shlb
les
xchg
pop
fists
repz
lahf
jae
in
clc
stc
frstor
out
orl
lcall
push
cmp
std
fistl
add
scas
loopne
jbe
movsb
je
pop
hlt
or
fcmovnb
outsb
insb
mov
ret
mov
xchg
scas
cmp
lahf
sub
jne
xchg
add
pop
sbb
pop
inc
data16
dec
and
mov
clc
mov
out
das
dec
loopne
mov
pop
out
dec
sbb
cmp
into
mov
xchg
add
mov
fldt
rorl
dec
loop
lcall
lret
cltd
mov
mov
arpl
fildl
out
repz
or
sarb
dec
add
adc
dec
adc
les
addr16
or
mov
xor
fstpt
mov
fmul
jl
lret
ss
daa
adc
repnz
fcmovne
sbb
cwtl
in
stos
scas
jo
in
ljmp
fildl
pop
fcmovnu
xchg
adc
in
clc
xlat
fcmovu
popf
adc
cmp
mov
cmp
mov
xor
xor
int
and
les
lods
fdivl
fcmovne
jo
mov
pop
adc
or
aaa
sbb
push
shlb
fdivrl
dec
loopne
lds
mov
in
daa
int
aaa
ret
mov
lret
and
dec
lcall
les
lods
xchg
loopne
aad
stos
xchg
stc
sub
cli
lods
aam
loopne
out
push
jbe
mov
push
insl
dec
out
lcall
jne
addr16
addr16
enter
loope
jbe
sbb
stos
in
leave
mov
insl
xchg
push
sbb
stos
sub
test
mov
sahf
jo
jo
pop
fwait
jle
cmc
dec
loope
test
sbb
xlat
push
and
cwtl
repnz
lahf
dec
lods
xor
dec
inc
mov
jo
sti
pop
stos
xor
mov
aad
jnp
loop
icebp
out
in
jno
hlt
cmp
cmp
push
arpl
mov
in
pop
mov
in
sbb
mov
lock
mov
in
js
ret
push
aaa
fsubl
and
cmp
call
adc
mov
and
cwtl
and
cmpsb
or
icebp
pop
sarl
pop
add
and
mov
das
data16
lcall
insl
sti
cltd
aad
inc
push
mov
paddsb
push
gs
xlat
les
push
pop
and
jb
or
std
adc
aad
push
push
stos
int
dec
or
stos
imul
enter
push
and
cwtl
sbb
loop
cmp
xlat
add
hlt
stos
add
cs
lods
pop
bnd
outsb
sti
dec
sti
jg
adc
fadd
mov
or
lods
je
push
in
lret
subb
lods
mov
imul
add
cmp
mov
sub
or
andl
or
incb
into
jecxz
inc
sbb
xchg
stos
aam
jbe
stc
lods
loopne
xchg
sub
cmpsb
add
loopne
adc
stos
loop
lahf
test
pop
test
add
out
fcmove
or
popf
jecxz
lea
jne
mov
inc
call
adc
cmp
push
test
or
sub
adc
inc
movsl
outsl
in
xchg
pop
pop
bndstx
lods
rorl
jno
stos
lea
out
insb
add
add
sub
mov
sbb
clc
push
ret
outsb
pop
xchg
inc
mov
out
mov
jge
mov
fidivrl
fldl
popa
in
neg
fcomps
lcall
mov
cmp
aam
int3
lea
movsb
fcomps
cld
iret
loopne
cltd
pushf
dec
mov
mov
sbb
mov
push
jae
mov
stos
push
pop
cmp
fistpl
mov
in
lcall
pushf
mov
jge
stc
pop
pop
add
add
cli
or
or
and
iret
scas
and
stos
fldt
jb
stos
xchg
int
shr
test
insb
sti
pop
jae
fisttpll
xor
pop
sti
idivb
ljmp
sub
fs
sahf
sub
sub
xor
sbb
lods
mov
stos
ret
dec
hlt
push
mov
lret
add
filds
lods
sub
add
fwait
gs
negb
push
jae
mul
xchg
jo
call
fidivl
or
lret
mov
fcomps
pop
cltd
fistpl
jmp
stos
mov
xchg
mov
push
pop
stos
mov
lret
fistpll
sahf
xchg
fcmovnb
push
cmp
jbe
fisttpl
inc
jno
xchg
cmc
inc
loopne
add
push
cmp
inc
lahf
mov
adc
mov
jnp
fs
push
pop
inc
neg
xchg
pop
pop
inc
push
sbb
and
pushf
leave
mov
out
gs
pop
sbb
adc
cmp
fadds
int3
sub
sahf
mov
loopne
fcmovnbe
stos
iret
cmp
hlt
movsl
popf
fnclex
jge
jne
dec
xchg
mov
inc
add
neg
pop
out
dec
lods
adc
js
in
lahf
xchg
cmp
mov
dec
fcmovne
hlt
scas
jg
adc
fistl
pop
pop
sbb
pop
push
not
iret
xchg
mov
xlat
or
jb
stos
cmp
push
fisttpl
in
dec
inc
ret
adc
call
jbe
mov
std
push
jnp
out
das
lcall
dec
fistpl
add
push
test
mov
out
rcl
pop
int3
mov
dec
cmp
cmp
mul
inc
sub
cli
push
xlat
push
ret
sarb
jmp
inc
pushf
repnz
inc
push
stc
cli
jbe
fistl
cmpb
cmpsb
mov
mov
mov
inc
mov
mov
mov
mov
sbb
stos
lea
shr
mov
fstpt
lcall
dec
mov
ret
mov
dec
push
or
fcmovnb
or
lret
sarl
out
jno
rorl
jb
xchg
hlt
loopne
pop
sub
push
pop
pop
pop
mov
popf
fistl
mov
test
or
push
mov
pushf
sub
and
push
fcoms
repnz
push
or
push
jmp
pop
mov
sbb
jl
push
mov
sub
loop
dec
jmp
push
add
das
call
lock
stos
lods
sbb
and
test
fstpt
sbb
or
insl
std
push
cmpsl
jp
sbb
idiv
icebp
pop
aaa
xchg
jl
outsl
das
movsb
lods
icebp
xchg
and
mulb
xor
clc
mov
mov
loope
fnstsw
testl
in
mov
paddsw
inc
sub
or
lea
or
hlt
inc
loope
nop
sbb
movsl
notb
pop
add
fbstp
lret
adc
das
sti
jnp
mov
pop
imul
insb
imul
nop
or
lret
mov
imull
loopne
pusha
pop
fdivrs
sub
in
icebp
lea
xchg
cmp
repnz
dec
dec
lds
sbb
jo
dec
xchg
stos
lock
stc
and
or
xchg
fisttpl
fwait
sub
aaa
call
clc
or
fisttpl
jp
push
fisttpl
popa
xchg
add
push
out
pop
push
mov
pop
xchg
adc
fst
fcmovne
inc
test
mov
fildl
xchg
mov
xchg
xor
fdivl
addr16
mov
test
fwait
out
sub
mov
lods
idiv
mov
sti
jb
sahf
sub
xchg
cld
mov
insl
or
lret
lods
jns
fstpl
hlt
xchg
mov
loope
arpl
insl
pop
fnclex
adc
inc
inc
sbb
in
daa
ret
mov
stc
pop
cmp
push
mov
cltd
lcall
jmp
loopne
jnp
clc
xlat
cld
inc
xchg
sbb
lret
pop
cmp
adc
fcomp
jo
mov
xor
lds
fistl
sbb
add
fcmove
push
out
fs
sbb
xchg
sahf
repz
cltd
cld
into
sbb
sarl
fsubp
xor
bnd
add
inc
orl
in
xor
mov
mov
adc
hlt
and
sbb
pop
lods
mov
fnstsw
push
lahf
xor
xor
mov
xchg
into
icebp
sub
ds
push
or
fisttpl
lret
out
test
push
int3
xchg
addl
fcmovnbe
lret
ret
std
call
int
pushf
push
cli
adc
fisubrs
cmp
sbb
pop
cmc
pop
fistl
or
leave
movsb
cmp
push
pusha
push
iret
fistl
xor
cltd
fnsave
dec
fiadds
shll
pop
loopne
jo
mov
test
das
or
imul
mov
outsb
xor
adc
or
lret
imul
mov
push
cmp
ret
popf
fisttpl
ja
xchg
fistpl
movsb
mov
sub
cmpsl
loop
ss
push
in
jmp
pop
adc
nop
push
push
dec
clc
pop
rcr
push
lret
fistpl
out
rcrb
cmp
inc
pop
mov
daa
out
fldt
pop
jl
mov
aaa
in
jo
in
mov
popf
mov
inc
out
mov
lret
cmp
jnp
fistl
pushl
lods
pop
mov
and
and
dec
jbe
idivb
lods
cmp
dec
stos
push
sub
sub
cmp
daa
inc
cs
sub
sti
cmc
push
fisttpl
adc
icebp
dec
in
fnstsw
popf
mov
int
fnsave
jl
les
mov
insb
ss
mov
jbe
sahf
jl
push
ja
repnz
mov
and
mov
pop
lcall
push
sbb
xchg
fistpl
xchg
je
pop
lea
loopne
adc
mov
pop
fwait
mov
mov
dec
rclb
mov
adc
sbb
stos
or
xor
sti
jp
std
jne
outsl
jbe
cmp
ret
lea
test
call
fdivl
mul
sub
sbb
mov
xlat
test
in
data16
pop
sti
push
idiv
testb
call
bound
repz
loopne
mov
pop
add
mov
nop
divl
sub
adc
dec
pop
std
cmp
push
fwait
test
jb
cwtl
fistpl
or
lahf
cmp
rorl
stos
pop
add
mov
jecxz
push
scas
subb
xor
sbb
jp
or
fldt
cltd
mov
sbb
xchg
jg
xchg
mulb
sub
movsb
xchg
imul
aad
add
cmc
ret
pop
fstl
fisubrs
ror
mov
jle
insb
xchg
sub
cmp
ficoml
pop
dec
cmp
inc
sti
pop
cmp
test
mov
sub
dec
dec
jno
sbb
fstpt
add
mov
mov
dec
and
es
mov
add
adcb
xchg
sti
fstpt
pop
lods
out
loopne
adc
or
loope
int3
mov
leave
loop
jb
fstpt
test
add
dec
inc
ficoml
inc
arpl
and
insb
fistpl
push
jnp
aas
ljmp
scas
jae
jno
in
lods
fidivl
cwtl
or
push
pop
dec
fistpll
faddl
jb
push
aas
dec
int
stc
push
xor
rclb
dec
mov
fists
fcompl
stos
lcall
fistl
dec
es
jno
fnstsw
mov
or
lcall
in
mov
push
adc
dec
out
test
mov
jg
movsl
ds
and
lcall
fistpl
xchg
int
cmp
les
and
fisttpl
int3
cmpb
ficompl
in
xchg
push
fst
push
pop
mov
lcall
jl
fldt
inc
jg
dec
dec
arpl
lret
xor
out
cli
stos
jns
add
mov
cs
mov
or
loopne
adc
sbb
scas
test
loop
popa
adc
and
push
call
mov
push
sub
lock
mov
into
jo
lcall
shrl
insl
xchg
repnz
adc
mov
mov
lods
movsb
dec
pop
push
mov
sbb
subb
shrb
push
push
dec
rcrl
inc
xor
orb
lcall
or
mov
int
int
adc
in
mov
mov
enter
sahf
xor
sub
mov
sub
andb
cmpsl
in
in
jmp
sar
into
sbb
xor
xor
nop
push
cmp
jne
fst
sbb
push
cmc
jecxz
lods
mov
fbld
mov
add
pop
lods
push
dec
lahf
xchg
or
pop
jmp
repz
mov
sti
mov
mov
jmp
stos
aas
pop
stos
push
out
fildll
jns
xchg
cmp
inc
push
in
ljmp
fbld
or
cwtl
sub
sbb
pop
iret
mov
xchg
mov
jle
sbb
ljmp
mov
loopne
aad
lds
mov
pop
test
mov
and
or
insb
adc
jno
xchg
jb
xor
sbbl
lock
arpl
adc
jge
data16
lret
push
frstpm(287
out
sbb
bound
and
cli
pusha
sub
sti
pop
adc
inc
hlt
and
std
and
loope
aas
cmc
pop
pop
sbb
stos
jne
adc
mov
and
arpl
outsl
jae
faddl
aas
ficompl
adc
or
adc
stos
lret
add
outsl
mov
pop
loopne
fucom
xor
fisubrl
jbe
test
or
xor
lods
pushf
cmp
fadd
jbe
popl
and
sbb
adc
mov
sar
add
jnp
pop
adc
js
xor
mov
xor
imul
add
push
push
xchg
lcall
mov
hlt
and
aas
xchg
sbb
ja
ret
in
cmp
std
dec
rcl
imulb
adc
mov
jne
cmpsb
ss
jnp
stos
dec
push
popa
or
and
clc
push
jne
repz
sbb
sub
fiaddl
cmp
ret
or
push
insl
aaa
lret
loopne
inc
jge
lds
movsl
in
outsb
test
outsb
fistpl
loopne
sbb
jnp
iret
in
xchg
ret
lcall
fnsave
arpl
push
nop
or
xchg
int
lcall
push
in
js
sbb
outsl
arpl
fcomip
jae
out
dec
push
mov
insb
loope
jp
rcll
pop
pop
push
lret
mov
pop
add
scas
subl
cmp
jg
sbb
push
out
insb
arpl
or
pop
popf
fidivl
pop
xchg
stos
jno
and
pop
dec
xchg
xlat
insb
mov
or
filds
cwtl
andb
out
roll
cmpsl
insl
pop
dec
inc
mov
cli
inc
jp
mov
enter
ret
pop
pop
repnz
mov
xor
stos
scas
add
and
lcall
fstl
sbbl
ret
jnp
xchg
fistl
out
sti
xchg
dec
cld
into
fcomp
lahf
insl
inc
inc
lock
enter
out
xchg
outsl
stos
xlat
or
inc
rol
aam
outsb
daa
push
jle
xchg
sub
lahf
shr
mov
fcoml
adc
fcomp
mov
leave
mov
rol
mov
fildl
les
icebp
pop
mov
mov
lret
std
lcall
loopne
enter
rcrb
push
pop
fstpl
imul
fadds
fiaddl
xchg
cmp
sahf
mov
out
ds
or
sub
push
je
dec
push
cmpsb
adc
jmp
imul
jne
and
out
add
mov
out
insl
fcmovnbe
lock
or
into
xchg
mov
jmp
pop
jge
mov
fs
dec
lods
es
sub
lcall
jge
sbb
std
scas
xor
xchg
out
sti
fsubs
sub
fidivl
repnz
mov
fisttpl
fcmovu
cmp
inc
dec
or
ror
mov
xchg
sub
ftst
and
sub
and
xor
fstpl
pop
out
stos
roll
fistl
outsb
and
ret
loopne
mov
lret
scas
push
jnp
outsb
xchg
cmp
adc
daa
mov
cmp
rcrl
fildl
xlat
adcl
sub
mov
cmpl
xor
fimuls
test
test
in
and
lcall
mov
and
cltd
pushf
les
or
aad
fdiv
mov
dec
in
xor
jne
fcmovu
fisubrl
jg
jecxz
pop
jmp
jae
dec
adc
adc
int3
or
xor
mov
sarb
push
int3
outsb
rorl
mov
testl
dec
fsubrp
fdivs
sbb
xor
or
pop
sbb
xchg
aad
mov
cmp
pop
pop
aas
push
loopne
mov
rcl
add
cli
push
stc
or
into
inc
adc
sbb
pop
jo
jae
mov
addr16
and
sbbb
cmp
push
jae
stos
or
jno
sub
pop
fndisi(8087
push
mulb
imul
pop
pop
cmp
je
fcmovnu
mov
clc
sbb
jmp
mov
pushf
fcomp
mov
cmp
hlt
gs
in
dec
dec
xchg
arpl
push
addr16
call
jnp
mov
mov
insb
jo
jno
fsubl
add
cmp
xor
dec
pop
jns
pop
jnp
push
mov
xchg
fcomi
or
and
fistpl
xchg
aaa
ret
pop
and
ret
jno
push
stos
jp
pusha
cmpsl
into
and
cmp
push
xor
adc
pop
sub
test
mov
jg
dec
push
xchg
push
push
rol
nop
mov
and
lods
shrb
loope
shll
xchg
pusha
and
das
in
push
ss
fucomp
incb
pop
sub
js
fdivrl
push
xor
cmpsb
mov
sbbb
je
mov
sbb
fistl
add
and
orl
xlat
rclb
fstps
stc
xchg
repnz
or
xchg
test
out
loop
fimull
mov
xor
fbld
mov
aad
pop
push
fildl
xbegin
mov
ret
cmpsb
andl
mov
jmp
popa
test
bound
js
hlt
inc
dec
xchg
inc
fstpt
aam
and
jbe
mov
mov
fisttpl
mov
movsb
cwtl
movsl
fldt
lock
int
mov
ficoml
inc
pusha
add
or
das
pop
test
lret
data16
fdivs
sbb
lahf
push
fildl
fsubl
mov
jg
adc
xchg
hlt
cmpb
push
decb
es
fsubs
mov
leave
fisttpl
xchg
out
fildl
mov
fistpl
mov
fdivl
into
add
popf
fs
xchg
pop
sub
aaa
jmp
nop
lods
adc
outsl
daa
sbb
fcmovnb
sbb
in
dec
es
cmp
jecxz
hlt
mov
fcmovnbe
or
int3
cwtl
fdivs
cli
stc
pop
sbb
mov
out
fildll
repz
push
iret
stc
lock
int
cwtl
fldt
mov
dec
fisttpl
mov
pand
gs
icebp
movsl
mov
ja
mov
les
mov
jns
jle
fistpl
insb
es
lock
xchg
jne
fstpt
scas
lea
sbb
mov
sub
cmp
add
jbe
rcrl
fistl
nop
adc
inc
inc
fcmovnbe
mov
in
fnstcw
sub
in
mov
push
insl
aas
inc
shlb
fcmovne
or
pusha
fistpl
ss
fucomi
lock
push
int
outsb
mov
inc
mov
xchg
jb
outsl
mov
out
mov
fildl
cmp
cwtl
rcll
sbb
fisubrs
pop
loop
lock
cmc
mov
adc
sub
in
bound
inc
xchg
push
pop
add
pop
lods
lret
pop
push
dec
adc
add
pop
xchg
loopne
loope
or
push
cltd
xlat
popa
dec
das
cli
ret
fisubrl
sub
orb
arpl
fwait
insb
clc
push
cmpsl
lcall
das
aaa
jg
jb
sub
pusha
repz
ret
fucomi
xorb
rorb
inc
xor
sbb
into
cmpsb
or
js
fwait
mov
push
pop
pop
ds
adc
sbb
test
nop
ss
data16
dec
pop
loopne
loop
out
shr
stos
fcmovnb
je
or
push
sbbb
push
add
cmp
mov
push
mov
sti
aad
xlat
xchg
dec
mov
lds
sbb
dec
jecxz
mov
cli
mov
gs
repz
imul
sahf
xor
mov
push
jno
ficoml
scas
adc
mov
mov
dec
repnz
ds
call
pop
xor
in
xor
lods
leave
fcmovne
add
mov
mov
sub
push
ficompl
and
ret
pop
test
fistpl
and
pop
pop
fisttpl
or
or
xchg
and
shll
xlat
pop
imul
out
and
iret
adc
cmpsb
or
popa
out
inc
cmp
orps
add
adc
push
fadds
inc
adc
imul
fistpl
movsb
or
std
sbb
jp
cs
fld
sub
fisttpll
pop
ret
adc
mov
in
mov
les
daa
fwait
cmpsl
sbb
insl
mov
movsb
jae
jnp
pop
fcmovnb
aad
jb
loopne
int3
test
fidivs
daa
insb
les
test
inc
push
inc
dec
int
cmpl
fidivl
adc
in
pop
test
dec
jl
dec
loop
sub
aad
outsb
sti
idivb
fildl
lea
fildl
std
add
xchg
push
and
out
sahf
xorb
cmp
inc
daa
fistl
pop
je
fstpl
dec
es
mov
in
test
add
lods
mov
and
xchg
push
leave
in
mov
mov
std
or
and
test
fistpl
mov
and
mov
out
sub
push
bt
push
enter
cltd
sbb
loopne
stos
and
shl
sub
xor
add
pop
leave
ret
enter
fstpt
dec
inc
mov
add
adc
fistl
inc
and
mov
cmpsb
les
in
mov
dec
push
shlb
int3
mov
imul
fstpt
adc
cmp
mov
mov
jecxz
or
lcall
std
fsubl
addw
pop
sub
mov
pop
aam
jno
repnz
outsl
xchg
outsb
stos
out
xor
loop
add
cmpb
jp
push
ljmp
cmp
iret
sbb
lock
jle
inc
cmp
imull
push
sbb
cmpsl
sbb
xor
nop
xlat
sbb
lcall
adc
xchg
lahf
sbb
bound
outsb
add
adc
mov
mov
add
loope
aam
add
jmp
rcl
sahf
insb
sub
leave
jb
add
fucomip
add
call
or
xchg
sbb
ret
push
test
xor
jmp
adc
pushf
xchg
jle
aaa
add
lock
adc
mov
aad
lret
fcomps
push
ret
xchg
outsl
sbb
mov
mov
imulb
adc
pop
cmp
nop
stos
inc
rclb
arpl
adc
aad
dec
scas
pop
mov
test
push
adc
negl
inc
sbb
and
push
sub
pop
test
push
add
aaa
cmp
or
data16
cld
or
in
sub
xchg
mov
int3
push
test
add
jmp
hlt
xchg
inc
jb
iret
out
sub
mov
mov
imul
aaa
daa
jno
adc
mov
or
dec
aam
pop
xchg
push
xchg
or
xchg
xlat
cmc
hlt
dec
es
sbb
ret
pop
lret
and
or
inc
mov
xlat
fistpl
fs
cmp
inc
mov
xchg
mov
xchg
loop
push
xor
pop
rcll
xchg
ss
hlt
dec
out
call
lea
or
fisubs
addr16
outsl
cmp
jecxz
ljmp
push
mov
fistl
sti
mov
push
fcmovnbe
sbb
push
fstpt
out
sbb
aad
xor
mov
mov
pop
aas
loop
sbb
stos
mov
xor
gs
cmp
xchg
sub
flds
fstpt
xchg
lahf
add
shl
cmpsl
xor
inc
clc
pop
sub
pop
inc
pushf
jp
popa
mov
stos
sub
mov
in
and
xchg
sub
inc
iret
jne
sahf
fcmovnbe
and
arpl
push
mov
jg
pop
bound
aas
xor
dec
into
xor
inc
dec
xchg
loopne
aas
dec
imul
popf
cmp
imull
mov
fnstcw
nop
fidivrl
negb
rcrl
mov
mov
loopne
inc
mov
aam
lret
je
sub
mov
pop
loopne
fldcw
aaa
cmp
stc
mov
pushf
div
icebp
fninit
out
inc
mov
lea
cwtl
xchg
subb
dec
push
loop
fcmovne
pop
cmp
in
xchg
push
fwait
pop
pop
iret
fucomi
movsb
je
and
sti
pop
mov
mov
jns
sbb
push
popa
push
fnstenv
fucomi
adc
xor
push
xor
adc
cmp
fstpt
repz
fcoml
sub
sbb
pop
int3
adc
fmuls
fsubrp
fiaddl
out
adcl
test
jae
andb
xor
test
clc
out
fwait
lahf
popa
jmp
pop
scas
mov
add
jge
fxch
mov
pop
mov
dec
into
pop
sub
loop
jmp
inc
sbb
sub
jg
xor
clc
xor
sub
ret
pop
xchg
lahf
addr16
fistpl
mov
jb
jg
fidivl
sbb
fcmovnb
into
arpl
lods
pop
shr
fildl
sbb
mov
mov
arpl
push
fildl
add
pop
decl
cwtl
adc
lret
std
or
add
mov
xor
jno
adc
jge
hlt
jbe
sbb
xor
or
mov
jae
push
lock
sub
mov
inc
xchg
fcmovnu
inc
out
sub
fstpt
rep
xchg
orl
iret
dec
fistl
divb
pushf
test
loopne
jmp
inc
insb
pop
mov
shr
stc
mov
fadds
jmp
outsl
popf
fucomi
lods
cmp
cld
dec
fcomi
out
sarb
pop
sti
cmp
js
mov
faddp
sbb
pop
adc
idivb
sub
loop
jp
ljmp
push
mov
add
jbe
std
call
dec
sub
mov
fisttpl
cmp
sti
iret
stos
fstpt
addr16
xchg
sub
fisttpl
pop
xorl
jecxz
push
pop
ficoml
add
pop
fcmovne
mov
push
fstpt
sti
cmc
pop
sbb
xchg
or
lcall
std
or
cmpb
div
mov
loopne
fld1
stc
dec
lock
in
test
jae
lahf
xchg
sahf
ret
fstpt
stos
push
push
sbb
fistpl
cmp
fildl
cmp
mov
aad
mov
jae
mov
imul
and
pop
rcll
das
lea
jo
mov
mov
fistpl
das
out
into
sar
fs
outsb
pop
add
lahf
xchg
xor
or
out
mov
mov
sbb
outsb
mov
fcmovnu
int3
xor
lret
xchg
inc
add
push
pop
jp
xor
sbb
xlat
sub
push
lock
sub
push
pop
push
daa
pop
es
mov
shrb
fstp
sbb
pop
or
xchg
jp
xor
jge
inc
jnp
pop
test
dec
fldenv
mov
jmp
fnstsw
ljmp
push
ds
repnz
loopne
arpl
cs
fistl
lcall
aad
jne
push
testl
lcall
xchg
test
mov
insl
or
out
push
cltd
aaa
add
ja
or
push
test
cmpsl
mov
out
gs
dec
push
loop
add
outsl
xchg
cltd
aas
inc
mov
mov
adc
xorl
inc
jecxz
mov
mov
clc
xchg
adc
push
push
jmp
mov
repz
adc
into
daa
ficompl
xchg
pop
mov
iret
pop
lret
repnz
fucomp
xor
pushf
test
pop
dec
xchg
mov
stc
xor
push
xor
push
push
pop
popf
jo
dec
dec
fwait
dec
imul
pop
call
mov
fstpt
bound
sbb
loope
mov
das
sub
jge
mov
repnz
out
roll
and
mov
cmp
popa
xor
sbb
hlt
stc
rorl
movsl
fdivs
fildl
idivb
cmp
fucomp
lds
and
in
push
jecxz
push
mov
lcall
jecxz
ret
cmp
dec
mov
mov
sbb
rep
push
pop
fldt
faddl
ret
gs
and
loope
into
xchg
mov
sub
addr16
or
sahf
int3
jnp
das
fs
lea
xor
lahf
cmp
icebp
push
sub
cltd
pop
pop
mov
dec
out
rcrl
pop
push
test
cltd
movzbl
aam
adc
push
cmpsl
mov
fisttpl
in
cmp
enter
popf
push
cli
fildl
sbb
inc
fisttpl
sub
lock
xor
fcmovnb
push
or
push
and
shlb
fimuls
jg
rcr
outsl
xchg
ret
sti
mov
dec
jecxz
cmp
aaa
test
jne
mov
cli
sbb
push
mov
or
fcmovne
jbe
mov
loopne
pop
inc
mov
jp
pusha
hlt
loopne
xorl
sub
movsl
mov
pop
cltd
leave
imul
mov
imul
and
test
sbb
shrb
lcall
xlat
lds
test
add
pop
xor
scas
loopne
dec
ret
and
in
mov
ret
out
push
xchg
orl
pop
fwait
insb
cmpsl
js
xchg
loope
dec
lcall
pop
xor
fidivrl
adc
jg
mov
gs
adc
pop
dec
add
inc
call
imul
fcmovbe
jbe
pop
lock
and
addl
push
outsb
dec
sahf
xchg
and
xchg
fistpl
push
into
pushf
add
iret
por
fwait
rclb
pop
fstpt
jb
push
dec
pusha
test
dec
je
stos
fwait
inc
clc
popa
lods
in
or
sub
cmp
enter
push
add
jne
ss
xor
in
fucomi
cmc
mov
int3
rorb
loopne
cmp
out
add
les
stc
adc
xchg
push
jnp
fisttpl
xor
sbb
adc
int
mov
inc
jl
pop
les
cltd
test
dec
xlat
mov
sub
sub
pop
repnz
fs
or
fbstp
aaa
lods
fcomi
dec
adc
add
jp
in
fistpl
mov
stc
in
and
fimull
xchg
movsl
dec
shll
js,pt
leave
or
pop
mov
dec
call
rcr
fadds
js
enter
jne
cmp
ret
js
cmp
gs
lods
je
leave
push
and
sub
cli
inc
mov
sbb
cmc
mov
cmc
xchg
imul
imul
jmp
pop
test
lahf
clc
jno
call
cmc
adc
inc
and
ljmp
inc
popl
lcall
dec
int3
out
repnz
dec
lcall
inc
shll
pusha
stos
mov
rcrb
mov
jl
push
test
in
fstps
iret
sub
or
testl
xorl
dec
sub
fmuls
pop
pop
dec
inc
stos
into
pop
pop
fwait
pop
shr
cli
aad
fiaddl
imul
rolb
icebp
sti
sti
adc
cmp
ljmp
mov
jae
ds
addr16
lods
lock
push
pop
js
adc
inc
sub
cmc
push
or
xchg
shl
rclb
jbe
out
stc
mov
push
push
ja
push
popa
fstpt
adc
test
js
loope
aam
push
add
mov
cwtl
fisttpll
outsl
js
icebp
into
rcrl
fndisi(8087
xor
lret
jbe
inc
lahf
ds
daa
pop
fldl
dec
mov
sbb
int
fneni(8087
pushfw
clc
xor
xor
lods
inc
add
fistl
dec
xor
dec
insb
lds
fstpl
xor
jmp
cmpb
lret
fistl
fisubrl
fstpt
insl
ja
or
call
mov
call
mov
adc
std
test
pushf
rolb
push
xor
ficoml
pop
lods
sub
int3
mov
in
lret
ja
cmp
in
push
and
dec
and
fdivrl
add
fsubrs
xor
cmc
inc
fistl
and
fstpt
outsl
fs
mov
mov
mov
cmpb
cmp
clc
sbb
pusha
jae
mov
mov
popf
push
ret
xchg
dec
jne
push
push
jg
filds
pop
mov
sahf
or
add
cltd
in
mov
clc
test
sub
addr16
mov
sub
jnp
dec
pop
popf
cmp
jg
fisttpll
repz
in
jno
mov
cs
and
out
cmp
xor
jge
pop
and
add
or
dec
in
push
dec
loopne
ret
fldt
insl
xor
in
std
iret
cld
mulb
lock
jb
fsub
sahf
mov
mov
jmp
arpl
fistl
pushf
inc
loopne
in
insb
mov
jbe
fldcw
mov
test
xchg
pop
sbb
std
fcmovnbe
call
pushf
sub
loopne
jge
push
les
pop
mov
cltd
pushf
cmp
jbe
js
popa
xchg
data16
lods
in
fisttpl
jl
inc
rol
xchg
adc
hlt
mov
pop
in
pop
xchg
cltd
xor
das
pop
loope
int
call
jp,pt
inc
jb
fcmovnu
cmpsl
fidivrl
and
les
cmp
fildl
jl
out
movsb
es
inc
push
mov
sbb
les
add
cmpsb
or
pop
dec
sti
fildl
and
iret
mov
mov
mov
jecxz
pop
fcmovnbe
decb
dec
inc
fildl
inc
mov
jge
sbb
in
mov
xorb
and
mov
pop
cld
jmp
xlat
lret
fistl
jmp
dec
jl
xchg
dec
push
in
mov
add
imul
sbb
outsb
jp
clc
leave
cld
iret
arpl
mov
pusha
stos
mov
cmp
aam
mov
adc
test
es
into
mov
scas
ficoml
gs
dec
test
and
pusha
test
lcall
adc
jecxz
cmp
js
inc
mov
adc
std
fcmovu
out
fistpl
xlat
xchg
xor
add
leave
lret
clc
fistpl
stc
fbstp
push
xor
add
mov
sbb
xor
jae
lret
mov
rolb
cmc
pushf
test
cmp
fstpt
or
inc
xchg
call
lods
sub
call
popa
fdivs
iret
outsl
jo
cltd
int3
fstpt
xor
mov
mov
aas
gs
dec
mov
or
loopne
or
bound
sub
subb
cmp
push
xor
aam
push
and
fidivl
lret
mov
repnz
and
sbb
fistpl
loope
pop
push
push
ret
adc
sbb
xchg
lds
fidivrl
lods
pusha
stc
leave
imul
xchg
dec
fstpt
mov
in
loopne
je
push
mov
imul
inc
fwait
xchg
and
stos
rcr
push
daa
jmp
mov
cmp
enter
xor
push
push
mov
loopne
sbb
push
cmp
fldt
inc
mov
pop
lds
repnz
arpl
cld
mov
pushl
and
dec
lds
pop
test
fcomi
cmp
xchg
cmc
pusha
and
mov
pop
xor
scas
pop
lea
dec
mov
xorl
jno
and
fiaddl
cltd
fldt
movntps
dec
mov
xor
in
inc
push
mov
push
lods
mov
mov
mov
and
fidivs
mull
shll
mov
and
shlb
cmpl
sti
mov
scas
pop
stos
push
and
cli
sub
lcall
push
loopne
jg
jno
in
pop
fstpt
in
fsubs
leave
jns
fistpl
jecxz
test
sub
jb
add
stos
fstpl
popf
mov
call
mov
mov
cmp
das
ficompl
jbe
xchg
push
jo
call
xchg
pop
inc
out
xor
movsl
jb
xor
push
push
out
fiaddl
cmc
xchg
int3
inc
shl
lock
clc
push
stos
in
fucomi
jmp
ror
sub
inc
push
sbb
and
lods
pop
orl
inc
inc
lea
push
push
mov
repz
jns
cmp
out
popf
sbb
jge
out
and
pop
dec
fnstenv
fistpl
les
rcrl
jl
inc
jecxz
pand
push
push
mov
imul
adc
mov
into
int
test
call
imul
inc
ss
pop
in
shll
daa
test
fcmovnb
sub
mov
sbb
fistpll
es
sbb
fidivl
mov
push
or
mov
pop
mov
mov
lds
adc
subl
aam
pop
faddp
mov
adc
fisubrl
pop
xchg
or
push
fldcw
outsb
pop
xorb
push
push
xchg
adc
fistl
loop
shl
jmp
adc
lock
shll
dec
leave
push
dec
pop
lcall
pop
jne
mulb
movsl
aad
or
es
mov
and
xchg
call
clc
push
sbb
fistl
lcall
and
mov
mov
and
adc
incl
adc
pop
xchg
xchg
daa
mov
and
dec
dec
dec
sbb
fucomi
mov
mov
adc
ss
jae
pandn
xor
pop
movsl
jl
imul
pop
sti
sti
lock
stc
push
pop
and
jecxz
xchg
adcl
in
outsl
and
or
fidivrl
popf
lret
push
hlt
mov
ficoms
cmp
fcmovnu
popa
add
cmc
loope
dec
fildl
cmp
mov
fisttpl
dec
adc
rol
lret
dec
fidivs
sbb
push
adc
mov
cmc
loopne
push
xlat
or
fwait
jecxz
adc
mov
cmp
sub
fistpl
mov
lahf
dec
cmp
sub
mov
push
xlat
insw
mov
pop
iret
push
add
jmp
stc
outsl
inc
cli
fcomi
pop
add
nop
inc
mulb
lock
dec
in
push
jl
jg
jp
sbb
popa
rcl
jnp
icebp
call
dec
push
call
in
ret
stos
sbb
cmp
aam
inc
sar
lret
leave
in
xchg
enter
cmc
in
pop
jle
push
sarl
jo
out
jle
aas
fdivrl
pushf
xor
lret
inc
push
fldt
in
call
lret
or
fsubrl
mov
add
sub
dec
add
into
and
frstor
sub
fistpl
loopne
mov
sbb
iret
fldt
imul
lds
call
adc
jns
icebp
fcmovnbe
mov
out
mov
int3
inc
cmp
xor
inc
in
mov
adc
mov
sbb
fstpt
scas
jns
cld
dec
adc
sbb
add
movsb
add
adc
or
in
jmp
push
sbbl
loopne
adc
cmp
pop
push
xlat
xor
fisttps
out
in
rcl
arpl
xchg
jb
mov
mov
xchg
cmp
pop
fildl
js
addr16
je
lock
mov
mov
cmp
cltd
xor
fstpt
jp
nop
pushf
mov
pop
xchg
repnz
lret
jo
mov
rcr
aas
in
fsts
sbb
fsubrp
fistl
int3
orl
sbb
add
dec
dec
ret
aad
cltd
xchg
adc
mov
jecxz
in
cmp
push
or
sysret
jmp
fistpl
inc
fbstp
mov
outsb
stos
lds
ret
pusha
jl
cmp
sbb
cltd
mov
repnz
dec
repz
cmpsb
mov
sti
mov
fistpl
jmp
std
nop
les
cli
inc
addb
into
je
jne
and
rcr
mov
mov
sub
lahf
imull
cmpsb
jmp
push
fldt
int3
push
mov
inc
loop
lret
lcall
in
pusha
inc
add
pop
add
pop
adc
lods
sbb
inc
sbb
fcomi
push
out
inc
enter
mov
lds
mov
and
fdivrp
insl
aas
data16
xchg
fildl
pop
movsl
jb
mov
scas
mov
popa
cmp
lods
push
cmc
rcrb
inc
and
iret
push
jnp
fiaddl
and
mov
stos
mov
call
jnp
rorl
dec
xor
popa
cld
push
pop
or
ljmp
or
cmpsb
add
push
hlt
adc
inc
aas
ja
add
pop
fimull
dec
push
push
ffree
inc
and
test
xor
lret
js
add
outsb
scas
adc
xchg
insl
add
xor
test
sub
movsl
push
push
adc
add
in
dec
xor
cmp
and
fldt
and
mov
aad
push
clc
mov
ret
mov
adc
adc
jne
dec
and
sub
daa
push
push
outsl
ret
not
xchg
fnsave
in
cwtl
push
aaa
dec
sahf
lcall
aam
fisttpl
fnsave
xchg
bound
fcmovnbe
cld
jle
mov
and
adc
add
lea
or
lret
sub
fildl
dec
cmp
dec
fstpl
mov
es
inc
sbb
fisttpll
adc
mov
sub
jb
or
and
pop
xor
fcomi
mov
out
fcomi
add
pop
mov
leave
imul
cmpsb
sub
popa
fisubrl
xor
outsb
mov
sahf
push
xchg
or
fcomi
insb
inc
inc
in
and
imul
or
jns
mov
in
sub
jb
and
std
mov
jns
or
fstpt
addr16
fimull
jns
cmp
xor
out
mov
popf
mov
fildl
mov
sub
loopne
insb
add
xchg
lret
xor
mov
mov
in
stc
outsl
push
push
add
aam
pusha
or
loopne
cwtl
and
mov
out
gs
fcmovne
xor
sub
dec
jg
clc
xchg
push
pop
sbb
cmpsl
fisttpl
sub
ss
cmp
lods
xchg
dec
out
inc
sbb
xlat
ret
inc
dec
sti
pop
loopne
jns
aam
daa
xchg
shlb
jl
mov
fistpl
mov
xchg
ja
push
lods
pop
mov
cli
jno
fistl
cmp
loopne
mov
stos
ja
movsl
push
sub
fstpt
daa
push
jnp
ljmp
sub
inc
xchg
cld
fimull
pop
sbb
jmp
mov
jmp
mov
fcmovnbe
mov
mov
inc
leave
dec
cli
ret
mov
dec
jbe
fildl
sub
push
sbb
roll
aam
sbb
enter
fldt
dec
pop
fwait
sbb
push
sbb
xchg
push
mov
outsb
mov
xor
repnz
mov
sti
scas
cmp
nop
fsubr
jecxz
mov
cmpsl
pop
shl
mov
filds
mov
cli
sahf
pop
unpckhps
enter
jns
cmp
out
push
iret
test
jbe
rcrb
dec
add
jnp
fisttpl
sub
test
pop
pushf
fcmovu
popa
xchg
and
pop
inc
mov
pusha
sbb
ret
mov
fldt
push
repz
bound
mov
mul
jo
or
mov
fldt
push
jl
call
sbb
dec
outsb
pushf
sub
sbb
rcrl
fisttpl
mov
mov
mov
in
in
adc
sub
mov
mov
jle
fcmovbe
movsb
mov
subl
xchg
int3
lds
or
lcall
cmp
mov
imul
pop
cmc
xor
aad
test
clc
sahf
add
cmp
dec
popf
cwtl
adc
loope
dec
fnstsw
orb
loop
nop
fwait
push
shll
imull
cwtl
lret
cmp
repz
mov
rcl
mov
rcrb
xchg
fucomi
xor
pusha
push
adcb
mov
leave
mov
fistpl
in
loope
rcrb
and
mov
or
mov
sbb
pop
filds
fistl
inc
loop
jmp
nop
xor
ret
fstpt
sbb
cmp
mov
lcall
fistl
jno
and
fbld
test
fcomi
sahf
test
add
out
sub
repz
pop
lret
fistpl
push
or
xor
pop
es
pop
sbb
scas
mov
mov
lea
mov
movb
mov
lods
xorl
fistpl
or
scas
fnsave
repnz
cs
jp
add
xchg
call
lahf
fists
mov
sub
loope
pop
jno
lret
xchg
push
stos
fisttpl
hlt
dec
cmp
fadd
xchg
test
filds
loope
aad
ja
sub
int
dec
fcmovnu
jne
dec
sbb
movl
pop
xchg
ret
mov
sub
or
fwait
lahf
pop
lcall
cmp
rcr
push
es
xchg
sub
test
mull
int3
fistpl
xor
xor
pop
psrad
push
sub
test
mov
or
xchg
mov
mov
xchg
sub
lods
dec
loopne
mov
test
bswap
lahf
aad
xchg
mov
jb
fistpl
push
sbb
or
fistl
nop
movsb
lods
js
inc
fildl
inc
test
daa
push
xlat
fstp
inc
xor
clc
or
dec
lcall
pop
lcall
fucomi
dec
or
aad
mov
das
in
shlb
cmc
fistl
sbb
sbb
cli
lret
je
rcr
mov
cmp
scas
pop
mov
add
xchg
pop
imul
insl
outsb
in
test
ja
mov
out
or
mov
jae
gs
flds
int3
jbe
sbb
mov
imul
in
mov
mov
sbb
stos
xchg
cmpsl
fistps
xor
outsl
pop
and
sbb
shr
xchg
loopne
mov
jne
cmc
subl
and
ret
popf
fldt
sbb
repz
pop
es
fcmovnu
pop
or
fcomp
inc
sub
adc
fisttpl
mov
neg
xor
xor
fcmovne
and
dec
push
or
fistl
or
cli
fucomip
mov
ja
lahf
mov
insl
sbb
stos
stos
push
xlat
fbld
xor
fwait
ja
aas
lock
test
jl
mov
pop
adc
bound
inc
xchg
jle
andb
dec
fnstenv
aaa
test
push
jp
sbb
loopne
lret
stos
mov
repnz
cltd
in
inc
imul
movsb
add
cli
fildl
cmp
cmpsl
lods
rolb
pop
popf
adc
mov
push
jg
clc
pop
dec
std
leave
sbb
les
loope
cmp
sbb
dec
push
ffree
fstpt
dec
sub
outsl
mov
pand
dec
hlt
out
sub
std
iret
fisttpl
arpl
sbb
mov
push
push
and
jae
or
loop
jb
lcall
lock
enter
addr16
rcr
or
movsb
jo
ljmp
inc
adc
pop
loopne
enter
iret
sti
mov
xor
pusha
out
std
inc
loopne
add
test
je
fstpt
in
inc
mov
movsb
enter
and
fldt
sub
inc
push
adc
call
pop
ja
loopne
fistl
pop
insl
adc
enter
jecxz
movsb
mov
xchg
dec
arpl
sti
loope
in
loop
push
enter
sbb
pop
out
nop
mov
pop
outsb
fistl
cli
jecxz
fcmovne
xor
pusha
lcall
pop
shlb
push
sub
xor
sbb
test
inc
call
bound
nop
xchg
lds
inc
xor
pop
xor
out
xchg
loopne
xchg
pushf
mov
clc
fucomi
inc
in
mov
rol
cmpsl
fdivrs
adc
movsb
pop
lods
das
add
mov
push
pushf
mov
mov
jne
pop
xchg
sub
fisttpl
push
sbb
push
fiaddl
xor
cmp
mov
leave
mov
cmpsl
arpl
sbb
xor
fdivl
pushf
or
popa
sub
inc
incb
jb
or
pop
test
aam
add
stc
xchg
pop
and
mov
jl
cmp
fnstenv
iret
xorb
jb
push
loopne
ret
ret
sti
inc
push
push
adc
xchg
test
adc
adc
loope
dec
inc
mov
stos
add
dec
cmp
sub
lods
das
ficoms
icebp
scas
fucom
loopne
cltd
inc
rorl
imul
das
cmp
and
cmp
and
fstpt
mov
testb
ficompl
test
int3
fistl
andl
fisttpl
aam
fldt
xchg
jge
loopne
je
insl
mov
sbb
mov
in
sbb
loopne
sbb
scas
cmp
stos
mov
push
add
mov
jg
sbb
lret
fisubrl
aaa
or
ffree
mov
stos
sbb
fucomi
in
mov
sbb
cmpsb
jecxz
ja
mov
jns
push
sbb
fstpt
mov
and
push
inc
push
dec
stos
dec
pop
inc
fildl
mov
std
mov
js
xchg
mov
pop
movl
test
insb
imul
sbb
pop
clc
jg
xchg
loopne
and
fcmovnu
xor
sub
cmpsl
jp
aad
fcompl
shll
and
fs
divl
sub
into
mov
loopne
iret
aas
jl
fwait
stos
inc
jg
push
xchg
ljmp
lods
mov
push
pop
mov
add
popf
mov
sub
test
add
cmp
mov
cmp
into
inc
dec
stos
fst
jne
sbb
sub
shr
pop
sub
insl
fistpll
js
pop
scas
imul
xchg
jle
outsb
loop
sbb
xchg
into
or
not
loop
dec
push
fsubs
icebp
xchg
adcl
insl
cld
cmp
cmpsl
arpl
dec
fistl
ds
cltd
jmp
hlt
loop
sub
aaa
rcrl
pop
cmc
dec
out
loop
mov
ret
xchg
mov
dec
cmpb
sti
rcr
cld
jecxz
and
pop
jnp
adc
stc
pop
lret
pop
sti
sbb
mov
pop
pop
push
ret
fildl
cld
test
fstpt
and
dec
icebp
sahf
cmc
cli
fldt
lods
cmp
jbe
xchg
addb
add
sti
js
xchg
popf
sbb
pop
arpl
cmp
pop
jge
inc
mov
or
ret
fs
out
push
iret
sahf
fistl
fcmovnb
or
cmc
jo
ljmp
mov
jp
fimull
sbb
fwait
aas
push
icebp
call
push
sbb
es
fcmovnbe
mov
add
mov
arpl
push
int3
mov
sub
sbb
add
repnz
cmpsl
aas
fcomi
out
or
ror
lcall
loopne
xchg
subl
fildl
es
lret
push
sti
xadd
jecxz
mov
dec
fldt
add
stc
cld
push
mov
out
fildl
pushf
mov
jmp
jnp
push
ret
fbld
into
mov
fucomi
cs
or
sbb
mov
and
adc
pop
in
push
int3
call
adc
in
or
or
pop
fiaddl
inc
and
fsub
aas
loope
and
decl
movsb
cmp
pop
mov
js
popa
outsb
mov
fucomi
pop
mov
aad
mov
lea
pop
loopne
inc
pop
pop
dec
fcmovnb
xchg
xor
jae
popf
push
adc
int3
mov
push
pop
cmpsl
lret
aaa
fistl
xchg
xor
mov
cli
fldt
ljmp
pusha
fwait
push
arpl
xchg
mov
stos
fwait
xchg
rolb
adc
and
pop
imul
and
or
cmpsb
fcmovnbe
dec
mov
popa
test
sti
xchg
fistl
das
jp
sti
inc
fisttpll
divl
aaa
adcb
cmp
mov
fistps
cltd
popf
clc
scas
xchg
mov
mov
mov
sti
fcmovnu
adc
sbb
pop
sbb
jno
add
push
jle
mov
fistps
iret
dec
push
mov
push
xchg
push
aas
jb
daa
inc
cmp
push
jbe
jle
mov
pop
mov
test
iret
addr16
fisttpl
cltd
clc
in
adc
fisttpll
adc
imull
loopne
in
sar
pushf
jne
jae
ja
mov
adc
inc
daa
idivb
sbb
cmp
sub
lods
call
cmc
fistpl
add
dec
out
xor
cli
out
push
fcmovnu
mov
push
dec
call
dec
sbb
es
jecxz
xor
fildl
add
mov
push
push
dec
out
popf
push
mov
shr
lds
pushl
dec
xchg
jno
cltd
add
add
mov
sbb
hlt
dec
pop
pushl
cmp
rcr
rcr
mov
adc
cmp
adc
fistpl
cmp
adc
mov
fildl
and
aam
sub
sbb
jns
nop
fwait
and
mov
push
or
aad
lock
dec
cmp
dec
jmp
push
std
lock
mov
push
pop
dec
dec
push
jnp
and
bound
jmp
xchg
push
je
lds
fstpl
mov
arpl
dec
sub
fisttpl
sbb
and
sbb
mov
aas
cmp
jg
push
loope
inc
out
xchg
scas
sbb
mov
cmp
fildl
jae
std
in
lcall
pop
lret
fldl
movsl
jle
ds
cmp
pop
insl
dec
mov
dec
fcomi
push
adc
aaa
test
call
ret
notb
aad
pop
adc
sbb
imul
int3
mov
in
inc
inc
lahf
fidivl
mov
fstpt
lret
pop
std
lods
fidivl
call
sbb
loopne
xchg
inc
cmp
add
daa
jb
sbb
into
jb
call
sbb
jns,pn
fistl
sub
and
imul
lret
dec
loope
add
xor
push
fildl
dec
sbb
adc
pop
rep
andl
in
lock
pusha
adc
fnstsw
dec
fdivl
iret
fstpt
sbb
cmp
rcll
xor
loopne
pop
fistps
test
pop
std
inc
xchg
or
sbb
dec
mov
fisubrl
xchg
iret
fcomps
fstpt
push
cli
pand
and
outsb
inc
clc
add
jae
pop
or
sbb
mov
out
aam
nop
xor
xchg
fcmovnu
mov
jp
inc
push
xchg
stos
sub
pop
jbe
pop
loop
inc
idivb
lds
fwait
adc
rcr
out
sub
lahf
push
sbb
pop
push
loop
das
jnp
or
sbb
jnp
cmp
lcall
movsb
xor
sbb
sbb
scas
out
xor
arpl
sbb
pop
ja
inc
loopne
fwait
popf
inc
cmpsl
cmp
pop
fcmovu
xchg
adc
in
dec
mov
iret
daa
dec
sbb
loopne
xchg
lods
sbb
adc
pop
das
mov
popf
mov
mov
stos
xchg
xchg
imul
pop
icebp
or
fildll
lods
bsf
in
pminsw
and
sbb
mov
and
stos
jmp
adc
lret
mov
dec
pop
mov
fsubrs
rcr
loop
mov
mov
jl
adc
std
popa
lcall
pop
jmp
inc
aam
loopne
stos
orl
out
js
fldcw
fmul
insb
push
sub
jae
fiadds
pop
in
sub
mov
lods
fsubr
pop
aaa
loop
push
push
or
aad
push
pop
insl
cmpsl
cli
sub
lods
sbb
pop
loop
jae
iret
dec
pop
and
cmp
in
subl
mov
mov
cmp
jno
test
addr16
sbb
cld
push
sub
jns
mov
sbb
inc
inc
pop
pop
jno
pop
sti
jno
arpl
or
adc
movsl
add
mov
add
jb
xchg
sbbl
xor
xor
push
loop
cli
pop
mov
jmp
icebp
repnz
xchg
cmp
jl
adc
stos
leave
sarb
or
jle
in
or
ficompl
popa
xor
sbb
flds
sti
in
aas
add
aas
call
fisubrs
stos
enter
adc
mov
in
rcll
adc
xchg
adc
jb
push
sbb
out
insb
lret
mov
cwtl
movl
add
mov
jl
fsubs
mov
jb
clc
or
out
lods
xor
sbb
js
or
arpl
in
fisubs
mov
test
jnp
stos
std
and
lock
pop
lcall
insb
add
sti
stos
mov
lcall
pop
cmpsb
jb
dec
scas
xchg
movsl
call
enter
lods
loope
and
jmp
movsl
aad
dec
pop
fcmove
lcall
fcmove
stos
imul
sbb
lods
and
sbbl
mov
leave
loop
adc
pop
lods
pushf
sub
aam
in
or
cmpsl
imul
daa
movsl
mov
inc
xor
pop
push
and
out
in
inc
dec
dec
xlat
aam
push
clc
stos
add
jecxz
xor
mov
xchg
lods
popf
lods
test
gs
sbb
loope
mov
pop
sbb
lea
jae
adc
mov
shll
add
inc
mov
icebp
stos
push
xchg
fistpll
xchg
ret
enter
sub
mov
dec
in
push
fcmovnb
inc
jge
jp
ss
ja
pushf
out
xor
lods
lock
and
or
push
cpuid
mov
aaa
ficompl
stos
push
cmpsb
cmp
outsl
xor
rol
out
sbb
and
push
lcall
mov
shl
dec
std
xchg
mov
and
sub
push
pop
inc
les
cmp
loop
inc
imul
rorb
fucomip
ljmp
int3
scas
lcall
lods
je
mov
movl
stos
scas
in
lahf
inc
xor
movl
mov
fwait
das
fildll
fwait
insb
dec
push
pop
aam
jle
lret
cmp
out
gs
inc
jnp
cmc
push
mov
push
fimull
cmpsb
sub
stos
out
jb
int3
lcall
stos
insb
mov
or
add
inc
sub
leave
jg
xchg
and
pop
js
mov
adc
jmp
cmp
cmc
pushf
fwait
sub
fdivl
add
outsl
xor
into
cmp
sub
adc
cmp
fwait
jecxz
out
aaa
add
cmp
push
dec
lahf
hlt
lret
fldt
icebp
and
pop
outsb
add
or
fstp
jp
lcall
arpl
pop
or
stos
gs
pop
shll
xchg
cmpsb
in
loop
test
inc
pop
lcall
sub
xor
testb
fiaddl
vcvtss2sd
jo
lods
xor
loopne
out
and
icebp
dec
push
lods
stos
jle
pop
outsl
mov
je
push
inc
adcb
lcall
xchg
push
faddl
fisubrl
or
cmove
mov
add
and
or
fstpt
lods
xlat
jle
jge
jecxz
dec
inc
fidivl
mov
insl
dec
add
ret
push
lods
repz
fcmove
adc
adc
mov
pop
sub
sub
pop
stos
cmpsb
outsl
pop
adc
xchg
push
mov
fldl2t
bound
ljmp
fadds
lcall
add
repz
mov
push
test
pop
add
jnp
ljmp
pop
mov
push
cmp
in
in
mov
mov
cmpsb
leave
cmpl
dec
stos
sbb
push
mov
lock
neg
add
repnz
and
lcall
sub
stos
mov
fidivs
insl
jge
call
sub
stos
adc
jmp
repnz
enter
and
sub
jge
or
and
iret
push
fmull
xor
dec
dec
stos
add
mov
mov
mov
xchg
cwtl
data16
shlb
lds
xor
add
sub
insl
sti
add
bound
lea
ficompl
cmc
push
adc
mov
cwtl
lods
xchg
movsl
mov
adc
jp
or
pop
jecxz
fimull
frstor
pop
sbbb
mov
fiadds
test
pop
add
ret
out
rcrl
vorps
mull
or
in
xor
dec
pop
into
dec
or
adc
xor
jl
clc
dec
sahf
or
jle
mov
daa
mov
lods
mov
in
pop
clc
outsb
scas
subb
jge
leave
test
jb
or
in
stos
xlat
dec
mov
icebp
xor
sub
js
xchg
xchg
jp
lods
inc
shll
sahf
add
cmpsl
lea
push
inc
sbb
cmc
cmpsb
sbb
clc
bound
xchg
fbstp
loop
gs
out
lock
xor
out
shlb
lea
loop
cmp
pop
cwtl
in
mov
mov
subl
sub
adc
mov
cmp
jmp
jb
xchg
pop
mov
je
adc
fbstp
jnp
lret
lret
pop
and
pop
sbb
movsb
and
pop
rorl
cmp
xor
sbbl
pop
lcall
push
cmovnp
lea
add
outsl
loop
cmpsb
sub
out
fnsave
cli
lods
gs
les
cli
adc
pop
cmpsb
push
stos
sarb
sti
ja
mov
lea
adc
in
in
jp
sbb
sub
in
add
cs
ljmp
lret
xlat
in
cli
mov
inc
cmp
jmp
ss
mov
lock
test
dec
sbb
xor
fs
pop
cmp
bound
hlt
jo
cli
enter
dec
push
cmpsb
or
in
daa
adc
and
aas
cmpsb
loop
lods
int
fisttps
and
dec
lss
stos
pop
and
out
imul
cmc
aas
dec
dec
add
clc
cmp
push
xor
fstpl
icebp
inc
stc
xchg
pop
lods
sub
dec
je
hlt
pop
push
cmp
sbb
andl
arpl
faddl
lcall
stos
xchg
xchg
in
adc
jmp
inc
push
loopew
es
mov
out
cli
cmc
push
frstor
inc
inc
pop
popa
and
cmp
gs
push
stos
sub
fmull
stos
jge
int3
mov
xchg
inc
mov
push
sub
mov
subb
sti
jae
cmc
adc
lods
sub
sbb
xlat
mov
test
scas
ljmp
stos
in
movl
dec
std
repnz
and
aam
out
and
stos
fwait
add
xchg
sbb
and
dec
testb
stos
cltd
jb
outsl
adc
in
pop
adc
in
push
leave
je
rclb
movsb
in
decb
aas
fidivl
icebp
aad
xchg
fldcw
inc
in
sahf
sbb
lods
pop
loope
loop
out
add
arpl
cli
scas
int
loop
cltd
dec
pop
sub
movsl
lahf
sbb
dec
xor
arpl
test
jl
and
std
mov
dec
push
cmp
push
in
mov
adc
cwtl
adc
jmp
push
and
cmpl
jae
jne
mov
fistl
arpl
add
loopne
in
adc
sbb
out
loope
inc
xor
dec
sbb
push
out
imulb
mov
jb
sbb
cmp
add
fiadds
aad
or
pop
mov
in
sub
add
mov
cmpsl
es
int
in
xchg
sti
loop
mov
lods
sub
cwtl
cmpsb
pop
and
push
mov
add
dec
inc
cmpsb
adc
movl
dec
imul
push
push
in
inc
ret
clc
repz
hlt
aaa
mov
jg
push
mov
fs
push
cmp
fdivr
enter
sbb
in
outsb
adc
lods
movsl
hlt
pop
pusha
cld
aam
push
push
outsl
ficompl
mov
push
fnclex
jns
dec
sahf
push
jb
fldt
lock
push
and
dec
pop
fcmovne
jp
and
xlat
adc
jmp
in
sbb
and
lahf
push
inc
adc
cmp
int3
out
push
jnp
mov
fildl
rclb
push
push
pop
adc
push
aas
xchg
es
out
lahf
push
jmp
push
dec
mov
fidivl
sbb
pop
xor
fwait
mov
les
xchg
fdivrl
test
push
lods
xchg
cmc
lock
pop
fildl
pop
or
hlt
les
jge
mov
loope
in
popf
dec
pop
inc
cmp
mov
jmp
lock
pop
aam
rolb
mov
sub
or
or
cmp
fistl
rolb
fistpl
sub
aam
sbbb
and
mov
enter
popa
jne
in
cmpsb
add
lret
clc
gs
ja
mov
adc
clc
test
mov
sbb
fistpl
test
mov
fistl
jecxz
aas
fistpl
cmp
sub
mov
push
dec
or
mov
mov
inc
scas
dec
mov
cltd
cld
mov
roll
test
call
out
addr16
dec
fsubrl
add
cmpsb
out
test
fists
and
sbb
sahf
cmc
in
rol
mov
fisttpll
daa
mov
inc
pop
jnp
test
and
fwait
sahf
addr16
mov
outsl
loopne
in
daa
gs
stos
in
iret
jno
push
jp
dec
push
or
jbe
shlb
sub
dec
jle
inc
jb
lcall
dec
cmp
pop
push
hlt
or
lret
pop
pop
stos
or
fldt
inc
xchg
inc
and
sub
aad
ficompl
adc
pop
sbb
clc
imulb
push
cs
int
aam
fbstp
add
out
sub
push
clc
aad
xchg
mov
cmpsb
stos
fcmovnbe
aaa
xchg
jle
or
cmc
mul
mov
jmp
hlt
xchg
ljmp
shrl
js
pusha
cmp
fbstp
push
add
test
dec
popf
mov
ret
push
xchg
mov
pop
dec
loopne
push
mov
xchg
out
shl
int3
test
mov
mov
mov
loope
sub
into
arpl
fstpt
push
adcl
loopne
and
ljmp
jmp
push
adc
ss
addl
movsb
cmpsb
fistpl
loope
das
fistl
pop
in
or
pop
pop
cmp
mov
mov
out
gs
sub
cmp
adc
dec
and
shlb
add
sub
mov
xchg
mov
or
and
jp
jmp
inc
sbb
xchg
call
call
add
push
sbb
insl
imul
je
add
xor
fcmovnu
mov
xchg
lds
inc
inc
mov
add
in
or
xor
add
pop
mov
mov
enter
adcl
adc
fisttpl
mov
add
cmp
ds
mov
add
sub
pop
cmp
scas
aas
push
xorb
stos
or
les
pop
popa
push
js
test
scas
fisttpl
cmp
mov
fidivs
inc
jl
push
ja
lock
outsl
jne
pop
sbb
fisttpl
add
fisttpl
test
fisttpl
shrb
push
outsl
add
fistl
inc
les
pslld
pop
cmp
add
aaa
dec
push
jae
ds
mov
call
jmp
fidivl
test
xchg
enter
pop
mov
in
or
pop
or
mov
pushf
or
sbb
and
leave
sbb
out
xlat
fildl
add
fsubr
cli
loopne
out
mov
mov
clc
fisttpll
push
insb
mov
sbb
fldt
cmp
jl
int3
scas
fistpl
fdivrl
stos
lea
insl
mov
dec
or
aad
or
outsb
call
icebp
sti
clc
cld
stc
out
xorb
movsb
ss
fldt
sbb
pop
xlat
lret
mov
sbb
fldt
jmp
sbb
or
pop
sbb
sbb
jle
or
imul
fstpt
imul
loopne
mov
loope
sbb
bound
paddsb
in
bound
jnp
leave
or
push
cli
mov
cs
rcrl
fwait
jle
ficoml
pusha
mov
xor
adc
les
sub
xchg
bound
push
jge
fldcw
xchg
sti
cmpsb
addr16
stc
adc
xchg
js
sbb
ljmp
xlat
out
insl
in
push
pusha
inc
and
adc
addr16
xchg
xchg
xchg
xchg
pop
lea
imul
sbb
icebp
sbb
cmp
shrb
aas
clc
lcall
je,pt
pop
adc
sub
adcl
pop
scas
pop
imul
jp
push
fidivrl
lods
addr16
xchg
fiaddl
insb
xlat
cli
push
outsl
fucomi
cwtl
adc
lock
scas
jecxz
cmpsl
jae
adc
lcall
jne
pushf
neg
or
or
and
xor
sarl
push
fistpl
cli
scas
pop
and
jo
adcl
pop
add
push
adc
aas
pusha
push
mov
dec
prefetcht2
add
cmp
jae
xchg
mov
scas
push
xchg
sar
cmp
ficoml
pushf
dec
or
cli
mov
adc
iret
jmp
jb
test
testb
or
lret
scas
xchg
xlat
imul
xchg
pop
jl
mov
push
jo
and
sub
call
xor
pop
and
adc
mov
sub
cli
xor
imul
lock
fildl
shll
mov
iret
fwait
rorb
bndldx
in
pop
pop
and
cwtl
jo
sbb
mov
outsb
repz
sub
dec
or
mov
fcomp
dec
ret
jecxz
mov
push
fisubl
fildl
push
mov
sbb
cwtl
or
push
fistl
adc
fsubrl
or
add
lret
test
test
mov
int
sub
mov
inc
jle
dec
and
out
pextrw
and
adc
loopne
repnz
dec
mov
xchg
frstor
mov
inc
mov
fwait
pop
shl
add
mov
sbb
add
mov
in
ret
push
inc
fucomi
push
daa
and
sub
scas
dec
dec
cmpsl
inc
dec
fistpl
cmp
daa
call
repnz
or
push
push
out
mov
jecxz
out
dec
gs
inc
fistpl
out
iret
push
outsl
imul
enter
fcomi
sbb
lods
imul
shrl
in
ja
and
pop
add
cvtps2pd
dec
adc
sbb
dec
add
pop
push
dec
lock
and
fisubrl
imul
stos
dec
cmpl
lcall
xor
scas
and
dec
jo
mov
cmp
dec
repz
fstpt
mov
jns
dec
pop
add
push
inc
sbb
cwtl
fldcw
sbb
pop
cmpsl
pusha
fists
lea
outsl
add
push
xlat
mov
push
loopne
push
into
imul
ret
add
movsb
mov
fisttpl
push
in
cmp
xchg
jb
or
mov
loopne
jge
xchg
loopne
sbb
or
xor
adc
cmp
add
jnp
mov
push
sub
int
pop
std
xor
mov
and
out
in
les
push
fcmovbe
test
fcmovnu
jae
dec
jo
rorl
fcmovnb
adc
jns
fstpt
cmp
negb
xchg
push
stos
mov
sti
inc
and
mov
xchg
cmpsb
fnsetpm(287
test
fst
push
cmp
and
fisubrl
in
cmpsb
pop
imulb
xchg
mov
mov
lahf
loopne
push
mov
mov
pop
adcb
into
insb
lret
lods
fisubl
add
fildl
cmp
jle
push
ret
cmc
call
xor
dec
cltd
mov
mov
fneni(8087
test
into
mov
enter
aas
add
imul
pop
shlb
fsubl
popa
jmp
ret
adc
mov
lcall
repnz
dec
test
dec
imul
neg
pushf
and
xor
scas
dec
loopne
sbb
movsl
insb
bound
mov
or
sub
lds
xchg
jo
sub
imul
cmp
sbb
mov
add
or
cmp
jmp
stos
adc
add
fisubrl
add
pop
int
add
in
jne
ss
leave
test
add
jge
push
loop
push
mov
sbb
inc
xchg
xor
popf
jle
stos
pushf
xchg
or
out
imul
mov
mov
shr
xchg
cmc
sbb
out
out
lods
pop
lds
fdivrl
pop
lods
repz
lods
sbb
mov
aam
or
stos
push
jp
nop
adc
nop
jb
xorb
in
and
xor
adc
stos
jp
pop
rcrb
mov
in
mov
pop
sub
scas
lock
jb
mov
xchg
jecxz
sub
mov
ds
popf
adc
cmp
mov
iret
jo
cmp
clc
popa
in
pop
add
mov
leave
shl
adc
pop
aam
jo
popf
push
sbb
and
dec
fnsave
lods
sti
jae
lods
or
mov
push
js
imul
test
fpatan
in
ljmp
fwait
cmp
aaa
insl
scas
mov
mov
loop
addr16
stos
aaa
das
mov
loope
push
in
jo
adc
ds
andl
aad
jmp
in
push
int3
sbb
sarb
ds
adc
inc
inc
or
mov
rcr
cltd
sti
dec
insl
cmp
out
sbbl
aaa
movl
add
fadd
ds
lret
mov
adc
inc
or
std
pop
ljmp
inc
sahf
inc
xor
stos
jnp
fsubp
ret
inc
fisttpll
loope
fwait
and
xor
cs
int3
shlb
sbb
loop
pop
rorl
data16
adc
out
or
mov
jle
ljmp
sti
sbb
ficoms
in
sbb
push
ficoml
adc
pop
or
hlt
dec
bound
push
jp
and
shrb
xlat
lea
xor
pop
add
push
add
stos
lcall
bound
andb
cmp
cmp
frstor
xchg
inc
lods
pop
and
inc
iret
push
in
dec
stos
enter
adc
ds
and
pusha
adc
jg
incb
pop
sbb
fidivl
stos
ljmp
pop
lret
or
out
mov
call
in
xchg
sub
leave
rep
and
dec
dec
cmp
test
mov
lahf
outsb
xchg
push
sbb
lcall
pop
ss
or
aam
mov
inc
or
add
mov
fstpl
sbb
jns
sub
aaa
xchg
movsb
xchg
fcomi
jbe
frstor
out
adc
dec
fwait
stc
rcrl
jmp
int3
lock
lods
in
movsl
push
mov
fstpl
xchg
insl
std
in
and
clc
sbb
movsl
fisttpl
sbb
aaa
cmp
cmp
rorb
fildll
pop
and
enter
mov
cmc
mov
mov
sub
fnstsw
dec
pop
sahf
arpl
fistl
outsl
sbb
add
push
jg
push
lods
and
sub
pop
lds
loop
push
cli
mov
jmp
push
pushf
pop
cld
ja
outsl
into
mov
mov
add
inc
subb
push
stos
jecxz
sub
cli
jns
push
pop
mov
iret
pop
sbb
fisubrs
inc
add
pop
push
mov
add
adc
pop
sti
xor
test
add
or
lock
int
dec
pusha
mov
lea
cmpsb
sub
or
jle
adc
es
fstpl
add
or
or
dec
fwait
adc
sbb
adc
cmp
es
mov
aaa
xchg
adc
bound
pop
pop
mov
xor
xchg
lock
and
stos
aad
in
movsl
lcall
in
adc
pop
ror
push
sbb
mov
ret
test
jb
std
adc
adc
or
xor
add
popa
dec
xchg
push
into
loop
icebp
sar
call
in
dec
int
dec
cltd
add
out
hlt
lcall
dec
mov
inc
clc
fidivrl
inc
sub
cld
sbb
outsl
add
scas
std
jmp
js
push
inc
push
popa
jbe
mov
fbld
aam
jo
mov
and
inc
push
scas
xor
idiv
pop
outsb
rcr
xchg
pop
in
push
aad
sub
xor
aam
ljmp
jge
mov
sub
xor
out
scas
xchg
out
fsubl
test
add
out
sub
sti
les
xchg
xor
cmp
stos
addr16
dec
in
lods
std
imul
jmp
xor
lcall
insb
bnd
mov
pushf
hlt
lcall
jg
arpl
aad
fldl
daa
mov
or
push
jg
stos
xchg
hlt
call
iret
repnz
dec
sub
fwait
mov
divb
insl
adc
outsb
int
push
loope
pop
sbb
sub
inc
xchg
sbb
or
push
sub
movsl
mov
mov
stos
test
xor
fisubrs
or
adc
dec
adc
lahf
mov
ja
push
call
mov
fidivrl
loope
int
xlat
pop
dec
fisubl
test
pop
mov
push
sarl
outsb
inc
mov
cmp
fcomps
lahf
xchg
dec
sub
inc
xchg
jg
sub
and
imul
adc
mov
pop
js
push
das
and
fdivp
inc
in
sbb
in
int3
xchg
jbe
fnstcw
pop
bound
adc
mov
lcall
in
cmpsl
shlb
outsl
rorl
and
inc
fcmovu
fwait
fs
pop
fucomp
mov
jecxz
insl
daa
lret
mov
psubsb
cltd
sbb
mov
sbb
fldt
in
jae
loope
push
fcmovne
addb
in
fisttpl
dec
xchg
stc
clc
mov
call
fistpl
lahf
jne
lret
or
dec
ficoml
test
lcall
fisttpll
xor
xchg
push
sti
fildl
cmp
in
dec
fstpt
imul
dec
sub
push
rolb
mov
mov
or
out
lea
push
pop
push
fninit
or
cmc
xchg
call
in
sti
jnp
xchg
adc
pop
add
cmc
lea
les
test
mov
bound
sub
jno
dec
mov
inc
fstpt
push
cmp
mov
mov
adc
call
rcrb
cltd
lret
scas
mov
push
mov
data16
ja
xchg
js
mov
jns
cli
push
adcl
mov
nop
hlt
int3
clc
pop
loopne
fwait
inc
push
dec
inc
add
ja
jmp
lods
fildl
adc
jno
test
fwait
adc
fildl
jge
movsb
les
fisttpl
lods
inc
into
push
sbb
sub
sub
sbb
stos
fstpt
sbb
jne
mov
push
jno
cmpsb
fcmovu
lahf
xchg
push
fnstcw
popf
sbb
fs
cmp
es
clc
cmp
jne
sub
mov
fisttpl
mov
adc
ja
loop
sub
je
arpl
test
push
cld
dec
and
cmp
fistpl
mov
mov
sahf
stos
loopne
iret
push
push
fldt
cmpsl
jge
ds
cmp
repz
xor
inc
pop
jl
mov
call
mov
fstpt
incl
sbb
jle
dec
loopne,pt
insl
dec
jmp
lods
adc
jbe
fildl
mov
xchg
leave
mov
hlt
pop
loopne
sbbl
pop
fstpt
push
lret
sub
leave
in
lock
sbb
pop
out
push
in
cmp
pop
fsts
sub
sub
scas
sar
fcomi
test
push
aam
sub
mov
mov
jg
add
fs
dec
iret
pop
les
test
jmp
xchg
mov
cmp
fcmovnu
mov
hlt
jl
dec
cmp
rcll
rorl
setge
xchg
rcrl
dec
lods
cmpsl
mov
inc
inc
push
mov
dec
mov
in
mov
mov
add
dec
jne
dec
cmp
push
dec
subb
fdiv
stc
stc
insb
adc
mov
fisttpl
mov
sti
fistl
xor
mov
sbbl
stos
push
xchg
xlat
loop
xor
sub
pop
hlt
sub
fwait
mov
lea
lods
fdivrl
fcmovnbe
scas
push
xchg
mov
mov
jno
leave
push
and
sbb
call
mov
pop
push
repnz
inc
bound
mov
aaa
fcmovnb
test
lret
xlat
inc
xor
jns
sahf
push
loopne
das
push
push
inc
adc
movsl
negb
adc
mov
cmpsl
dec
fstpt
pop
push
cmp
loope
lahf
fildl
cltd
pusha
mov
dec
pop
stos
push
outsb
push
aaa
xor
mov
cmp
fstpt
and
pop
hlt
adc
pop
jb
jmp
or
lock
inc
inc
rcr
xor
jno
fildl
lret
inc
movsb
push
loopne
mov
push
dec
iret
fucomi
push
mov
call
sub
gs
aas
add
and
mov
scas
je
jno
in
or
lea
xchg
dec
sbb
fcomi
add
ja
mov
ret
and
cmp
xchg
fimull
adc
xchg
jns
sbb
mov
cmp
add
mov
xor
or
pop
movsl
fstpt
xchg
mov
into
fldlg2
pop
and
lcall
cmp
xor
test
or
add
sbb
setne
aam
fildl
and
cmp
sahf
mov
mov
mov
jnp
xchg
dec
cmp
xor
cmp
int3
aas
in
xlat
lret
push
mov
test
jle
or
fidivs
call
mov
add
cmp
fmull
pop
in
cwtl
cmc
data16
push
aaa
loopne
sarl
lahf
mov
and
dec
aas
stc
cltd
stos
fdivs
fistl
pop
xchg
mov
adc
idiv
fstpt
push
decb
sarb
sub
je,pt
inc
fidivrl
stos
fcmovnbe
dec
roll
cmpsb
xchg
mov
fcomp
jb
lods
cmp
rcr
sbb
adc
mov
jge
fnsave
fstpt
push
xchg
mov
pop
adc
fisttpl
jecxz
jg
xor
pop
mov
fistl
dec
push
xor
aad
iret
mov
and
icebp
in
stos
testb
fistps
jmp
cmp
jns
sbb
and
lods
mov
clc
push
inc
xor
jnp
mov
adc
and
jge
xor
sahf
mov
arpl
movsl
fstl
or
std
sub
add
mov
les
and
pusha
loop
pop
fidivl
ret
bound
sbb
stos
fs
fadd
inc
ret
into
out
mov
inc
fdivs
adc
outsb
iret
fistl
mov
gs
fcomi
and
inc
mov
dec
imulb
imul
pop
aad
test
push
adc
and
ja
jg
in
fcmovne
js
stos
push
or
test
sub
mov
jl
scas
fildl
lds
xchg
and
or
lcall
and
sub
aam
add
lods
rorb
push
fcomi
imul
xchg
aaa
fistpl
js
pop
jo
test
out
and
notb
insl
mov
pop
rcr
ret
cmp
loopne
notb
sub
int
nop
rcl
imul
mov
fsubrl
push
xorl
push
jae
fs
fnstsw
lret
dec
repz
jns
jae
pop
ret
enter
in
pop
push
adc
jae
aad
pop
cmc
rcr
dec
fildl
xchg
lods
mov
fildl
xchg
ficompl
fstpt
iret
cmp
mov
lods
inc
adc
gs
dec
pushf
xchg
fcmovne
xor
mov
mov
neg
jmp
jb
cmc
jl
out
inc
dec
dec
shrl
add
push
inc
aaa
sbb
cmpsl
pop
mov
cmpb
clc
inc
jo
fisubrl
in
lock
xchg
lret
jp
ss
sbb
add
loope
ja
dec
leave
in
fldt
push
and
jecxz
rcrl
fldt
aam
or
aaa
fisttpl
in
jecxz
fcmovne
cmp
idivb
orl
mov
rorb
sbb
data16
push
push
ficoml
ds
loope
repz
xchg
sub
fistpl
mov
pop
mov
xchg
mov
sbb
int3
inc
pop
fwait
outsb
xchg
fisttpl
outsl
lret
mov
ficomps
adcb
lcall
clc
pop
je
sbb
and
xor
inc
imul
neg
stos
ret
jmp
filds
in
pop
mov
loopne
lret
mov
lcall
jb
pop
bound
lock
cmc
pop
or
mov
fisttps
in
fucom
jg
arpl
fildl
dec
fstl
push
add
mov
fs
pop
lret
mov
pop
pop
inc
bound
clc
cmp
call
lcall
ja
add
and
pop
andb
testl
xchg
xchg
push
ret
dec
jb
ficompl
pushf
aad
scas
dec
adc
neg
sub
jno
fistpl
stos
mov
aas
mov
inc
cli
xchg
arpl
or
xor
add
sahf
push
pusha
push
xor
loop
add
test
lock
iret
fisubrl
mov
sbb
cs
ja
out
cmp
mov
adc
or
and
fldt
stos
jg
out
movsl
add
or
jmp
sbb
pop
das
lods
xchg
lret
lcall
das
lcall
testb
int3
cld
lock
or
rcrb
adc
sub
mov
inc
sub
loopne
sti
xchg
fidivl
adc
ret
mov
jmp
or
lea
jbe
sbb
push
lcall
iret
fwait
mov
stos
fsubrl
pop
arpl
sbbl
adc
and
mov
and
imul
jno
add
adc
lock
subb
jb
sbb
pop
sub
jb
fldt
lods
pop
adc
out
fdivp
xchg
push
cmp
cltd
in
xlat
cwtl
arpl
mov
and
xlat
mov
scas
mov
loopne
mov
push
xchg
pop
push
ss
add
rcr
iret
and
call
rcrb
xor
jg
push
dec
out
inc
lods
jnp
adc
daa
jge
aaa
popf
push
xchg
xchg
xor
push
ds
in
push
pop
mov
fldt
adc
pop
enter
mov
bound
xlat
loop
cmp
add
leave
call
sarb
xor
or
arpl
loope
adc
push
push
pop
stos
xor
xchg
call
fninit
data16
xchg
outsb
out
push
les
sti
fldt
mov
cs
fucomi
sub
mov
mov
test
cwtl
pop
push
fcmovnu
bound
or
out
fildl
dec
arpl
iret
jmp
jae
lret
xor
cltd
adc
fucomi
or
mov
sbb
movsb
jbe
inc
jle
neg
fnstsw
xor
pop
insb
iret
fcom
adc
sbb
ficompl
sbb
push
in
fstpt
sbb
fstpt
iret
pop
fdivrp
xchg
sub
pushf
nop
jge
mov
or
out
fldcw
xchg
in
mov
xlat
scas
fildl
cmp
and
notl
mov
mov
enter
mov
je
mov
sbb
jns
pop
and
sar
in
loopne
sub
dec
orl
sub
fwait
cs
or
call
lods
dec
or
pusha
fistpl
push
je
dec
cmp
clc
ficompl
test
mov
xor
inc
clc
inc
push
add
fcmovnbe
popf
mov
aam
pop
dec
fistl
fdivrs
out
inc
sbb
inc
fistpl
xor
stos
sbb
mov
aad
enter
clc
push
adc
or
sub
jle
popf
call
fs
in
jnp
dec
movsb
pop
cmp
add
fildl
pusha
mov
inc
fcmovne
mov
out
imul
pop
xor
pop
loopne
dec
insl
fsubrs
pop
mov
dec
or
int
cmp
fcmovnb
sarb
mov
fistl
imul
call
aam
fistpl
sbb
sbb
jecxz
shlb
lock
mov
icebp
cmp
cmp
in
mov
fcmovbe
jo
out
pop
rsm
fstpt
inc
inc
mov
in
lods
ja
mov
stos
add
pushf
lock
fcmovnb
dec
ss
lods
cmc
cmp
js
jb
loopne
aaa
stos
fldt
push
les
jno
inc
insb
cmpsb
mov
jbe
into
fstpl
push
and
adc
push
adc
cmpsb
lods
imul
rcll
rcrl
fildl
push
lods
ret
bound
add
std
push
pop
inc
pop
fldt
push
mov
cmp
adc
lods
pop
movsl
in
imul
testb
mov
push
mov
stos
mov
popa
fisttpl
jno
xchg
pop
stos
sub
sub
imul
xor
mov
std
rcrl
aad
ficoml
jo
bound
fcmovne
push
call
mov
and
jb
adc
fildl
sub
rclb
ror
fwait
jb
xchg
push
out
sahf
loopne
cmp
jns
cmp
add
xchg
sub
out
jnp
enter
fnstenv
pop
cmp
mov
lret
mov
xor
mov
push
fisttpl
jo
push
pop
fisttpl
jns
rol
scas
lods
mov
mov
cmp
pop
pop
pusha
fnstsw
jecxz
fsubrp
lock
lods
xor
and
movsb
js
or
lock
leave
jle
xchg
loope
imul
fcmovnu
jg
fidivrs
test
sub
iret
les
or
ficompl
jb
sub
push
fsubr
push
sbb
inc
cld
pop
and
scas
mov
adcl
mov
lcall
mov
xchg
push
loopne
jno
xlat
fstl
or
das
jmp
lret
inc
ljmp
imul
rorb
xchg
ret
xor
ja
dec
jmp
pop
jno
insb
sbb
mov
or
dec
xchg
fstpt
xchg
sbb
mov
pop
push
cmp
lock
fstpl
mov
loopne
mov
sub
gs
loop
cld
rcrb
sub
cmp
fildl
lret
pop
inc
pushl
push
inc
fildl
pop
add
fildl
mov
sub
mov
outsl
inc
fisttpl
jp
packsswb
pushf
xchg
xor
adc
xor
sub
fucomi
pop
test
inc
adc
ret
and
hlt
lods
fcmovne
mov
mov
andl
cli
xchg
push
fildll
xchg
pop
rolb
in
movsb
popa
sub
aam
test
pop
fcmovnb
inc
inc
sbb
bnd
dec
jecxz
loop
lcall
lock
les
rcll
pusha
sbb
mov
in
dec
adc
jmp
xchg
jg
mov
mov
and
ror
mov
mov
dec
jg
dec
int3
flds
les
test
in
fisttpl
pop
cmp
arpl
fs
fistpl
xchg
jns
cmpsl
cmpb
stc
adc
shrb
pop
je
insl
lcall
pop
icebp
stc
mov
push
cmp
pop
inc
fstpt
jle
and
push
jmp
aas
or
push
shll
imul
cwtl
inc
ljmp
and
in
pop
xchg
dec
cmp
sub
or
push
imul
mov
js
mov
jb
ficoml
jbe
sbb
loope
push
loop
mov
icebp
test
movsl
neg
push
out
pushf
push
cmpsb
ret
stos
sbb
xchg
jecxz
sbb
fcmovnbe
add
adc
xchg
hlt
cmpsb
fcmovnbe
stos
ret
repz
outsb
adc
inc
dec
xchg
inc
mov
fistpl
jb
xor
mov
scas
sbb
loopne
adc
fldt
lahf
push
outsl
lret
jp
add
fwait
scas
daa
xor
xor
je
jnp
inc
loopne
xchg
fiaddl
mov
inc
loopne
or
cld
jl
aas
mov
fucomi
nop
cwtl
add
fstpl
and
push
xlat
inc
lcall
push
mov
pusha
sbb
pop
sub
fstpl
xor
fstl
in
fildl
les
aas
cmpsl
pop
or
rcr
pop
clc
add
hlt
xorb
and
inc
leave
mov
cmp
not
stc
dec
inc
sbb
pop
fisttps
notl
fwait
ja
into
pushf
and
mov
xor
fwait
and
mov
jle
in
jbe
pop
add
adc
pop
jl
shrb
in
mov
xchg
std
clc
shll
popf
fwait
pop
add
or
stos
cmp
js
in
into
frstor
loopne
sbb
jae
sbb
lea
lods
pop
sbb
clc
imul
fs
mov
aad
loop
in
movb
cmc
inc
add
loopne
leave
imul
fcompl
jl
in
jns
and
sbb
add
fistpl
pop
stc
or
dec
lods
in
mov
dec
fstps
or
push
ja
add
fisttps
mov
and
jae
push
fldt
test
dec
xor
inc
mov
scas
fwait
dec
add
sbb
lret
mov
sbb
fistpl
sahf
adc
add
out
sub
mov
fdiv
or
cmp
pop
mov
test
aaa
aam
mov
shlb
jnp
xchg
fldt
scas
cmp
das
sub
fadd
aas
sub
lcall
push
fwait
sbb
mov
xor
jne
sub
aam
xchg
div
add
cli
sub
fcmovnbe
or
out
adc
ss
push
aaa
fldt
out
cltd
int3
test
ljmp
inc
std
mov
jge
pop
push
sub
nop
loop
sbb
and
loopne
cmp
imul
js
jo
pop
pop
push
les
aad
cltd
jne
rcr
add
loopne
test
xchg
int
jge,pt
pop
fistl
mov
std
fisttps
repnz
and
jae
or
jmp
lea
push
in
fisubl
xor
fcmovne
mov
dec
cmp
decb
pusha
sbb
mov
cmp
jb
cmp
dec
and
jle
arpl
enter
sti
xchg
in
adc
dec
or
bound
pop
fstpt
loop
cli
popa
mov
sbb
sbb
add
scas
mov
sub
nop
mov
lahf
cmpsl
mov
rcrb
loopne
jb
das
fldt
and
push
rcll
fucomi
inc
xor
mov
mov
sbb
dec
xchg
pop
lds
lcall
aad
andb
insl
fdivrs
outsb
push
jmp
sub
loope
mov
leave
mov
int
fucom
pop
int3
xlat
mov
mov
xor
shlb
popf
dec
lock
cwtl
fimuls
mov
fstpt
je
cmpsb
scas
sub
repz
xchg
cmp
fstpt
push
adc
xor
fildl
fistpl
mov
loopne
xor
push
mov
aad
add
out
fwait
into
loopne
mov
sub
test
fldt
aam
inc
lret
xchg
fisttpl
dec
fs
push
mov
fcompl
in
hlt
fstpt
sahf
scas
xchg
mov
pop
stc
fisttpl
mov
jmp
je
xor
lret
pop
push
add
cltd
inc
into
cmpsl
sub
jecxz
ljmp
iret
dec
lcall
pop
sti
loope
ljmp
cmc
sbb
mov
aam
fistpl
test
in
loopne
dec
xchg
fmul
pop
fistl
out
jb
pop
adc
aam
and
mov
call
dec
pop
in
inc
cmpsl
inc
fcmovnbe
sti
rclb
repz
mov
in
arpl
jo
or
add
ljmp
inc
leave
fildl
adc
insb
add
dec
rcr
fwait
inc
jb
pusha
ds
fldt
push
hlt
lock
in
ljmp
jge
fisttpl
pop
fildl
loopne
mov
xor
addr16
arpl
adc
mov
jl
movsl
push
scas
bound
sub
call
pop
lcall
stc
add
fneni(8087
lahf
adc
and
stos
sub
add
aaa
fnstsw
mulb
incb
stos
inc
xchg
or
enter
fistl
icebp
mov
sub
fildl
mov
outsl
and
adc
roll
in
in
mov
and
enter
cli
cmpsb
xlat
jb
repz
adc
rcr
adc
pop
xchg
add
rorb
test
jb
loop
sub
scas
mov
shr
xlat
aad
aas
ret
dec
outsb
inc
dec
inc
jmp
clc
fwait
pop
fcoml
or
aam
mov
sarl
ljmp
popf
sbbb
hlt
pop
push
loopne
fisubl
pop
push
sub
push
call
cmp
dec
xor
clc
clc
or
js
lcall
jmp
stos
pop
push
mov
fcmovnb
fsts
cmp
sub
hlt
scas
mov
jl
insl
fistl
add
frstpm(287
mov
sbb
sbb
fstpt
mov
hlt
inc
inc
out
pushf
lret
push
sub
lock
push
xchg
stc
popf
mov
fcmovne
outsb
inc
lcall
in
mov
and
cwtl
call
rcrl
push
mov
ja
fistpl
mov
xchg
fldt
loop
out
xchg
dec
loop
dec
adc
das
fadd
idivb
lcall
dec
add
jno
inc
ret
sahf
aam
daa
mov
lods
pusha
dec
in
add
jg
adc
mov
fstpt
or
jnp
push
sbb
cmc
fiaddl
pushf
inc
mov
xor
fsub
inc
cmpsb
mov
sub
dec
xor
push
sbb
in
adc
bound
or
push
sub
jo
lcall
dec
nop
jecxz
cmpl
loope
mov
xlat
mov
shl
andb
sarl
push
clc
punpcklwd
lods
cli
push
into
ja
lock
ret
clc
push
imul
fdivr
sub
jae
std
outsb
lret
movl
dec
call
aaa
fnsave
cmp
out
pop
or
stos
pop
sbb
mov
mov
fwait
lods
sub
jo
fnstcw
in
pop
add
dec
mov
into
ds
leave
idivb
xchg
repz
repnz
cmc
mov
gs
mov
lcall
iret
outsb
imul
cmp
repnz
stos
call
cmc
cmp
mov
fisubl
mov
sahf
out
mov
pushf
imul
insb
sahf
sbb
arpl
sbb
push
xchg
jp
sub
push
leave
jbe
mov
xor
adc
fsubrs
inc
fildll
imul
push
jg
mov
add
adc
sub
mov
and
in
lods
adc
cmp
add
nop
lcall
pop
sbb
stos
and
mov
outsl
stos
ss
cmp
and
test
pop
pop
ja
stos
lds
mov
pop
mov
divb
pop
and
pop
stos
add
fisttpl
mov
loope
js
fstpl
loop
mov
mov
cmp
loopne
mov
mov
fistps
outsb
and
pop
xchg
int3
sbb
inc
or
cli
call
sahf
fnclex
dec
sbb
cmpsb
xchg
pop
outsl
pop
push
inc
fstl
adc
fadd
repz
mov
dec
notl
fcmovbe
aaa
mov
push
pop
pop
and
mov
sub
aas
fcomi
out
sub
fcmovnb
es
fbld
xchg
adc
je
dec
fisubl
add
lock
mov
lret
into
neg
test
jle
sahf
jecxz
adc
pop
repnz
mov
pop
add
sar
lea
sbb
xchg
and
stc
loop
xor
add
push
jecxz
ds
inc
stos
xor
mov
xorb
sub
xchg
fistpl
loope
test
fisubl
fbstp
adc
xchg
test
inc
int
call
es
or
addl
xor
xchg
std
fildl
xchg
ret
shl
fldt
outsb
or
pusha
and
call
out
add
nop
inc
mov
fstpt
pop
jne
insb
imul
mov
mov
pop
push
insl
or
sbb
daa
es
inc
aaa
add
lds
in
pop
int3
xor
jl
fcmovnb
xor
daa
loope
push
cmp
xchg
pop
dec
adc
fldt
stc
subl
sbb
clc
dec
inc
fmull
cli
inc
pop
pop
cmpb
push
push
out
fistpl
andl
pop
mov
adc
iret
std
pop
sbb
dec
aam
pop
cltd
cld
lret
fcmovnb
push
js
ja
fldl
ficompl
mov
dec
lods
mov
lea
jb
lret
ficomps
mov
into
lcall
mov
shr
leave
push
rorl
fiaddl
fldt
cmp
int3
jle
aaa
movsb
add
sar
mov
jae
cmp
shll
mov
sti
adc
pushf
ret
mov
add
or
sarl
loope
fldt
sub
aam
xor
fcomi
pop
mov
pop
fucomi
jnp
xchg
cwtl
fmuls
adcl
outsb
xchg
jo
test
loopne
fnstsw
aam
jmp
lock
pushf
lret
sub
mov
pop
repnz
loopne
xchg
mov
lahf
pop
jp
xchg
sti
out
aad
push
fildl
int3
rcrb
dec
add
lret
or
cmpsb
test
negb
pop
xchg
lock
fnstcw
aam
pop
sub
fildl
or
xor
cmp
aad
mov
out
jmp
test
loope
jle
xchg
sub
adc
pop
cmc
cld
xor
in
or
fsubr
adc
pop
aad
mov
sub
insb
int3
xor
loopne
out
fistpl
mov
out
lahf
shr
dec
sub
ja
loopne
hlt
dec
pop
inc
dec
sbb
nop
pop
popf
pop
fiaddl
clc
add
jg
inc
repnz
and
dec
stos
jb
sbb
iret
fstpt
cwtl
jnp
fildl
pop
icebp
out
xor
mov
pop
fstpt
in
arpl
inc
push
js
fldt
xchg
test
les
push
hlt
jnp
test
fcmovnb
cmpsb
pop
add
adc
sbb
push
sbb
jmp
xchg
push
fldt
movsb
mov
add
dec
loopne
xor
fimull
xchg
movsl
lret
lds
mov
adc
sub
in
out
loop
sbb
cmp
adc
mov
add
or
jp
xor
imulb
lcall
push
inc
aad
cli
lods
add
mov
sub
and
adc
scas
cmp
mov
xchg
mov
mov
push
int
repnz
adc
addl
push
pop
ds
lret
ret
sub
pop
jb
and
out
jb
int
push
inc
and
jp
inc
mov
fcomi
arpl
cli
and
sub
and
fistpl
loop
dec
loopne
mov
xor
ret
push
stc
fldt
add
faddl
pop
push
ret
fistpl
dec
xchg
lods
adc
ret
fstpt
xchg
sbb
mov
imul
push
sub
and
cmp
imul
test
pop
cltd
call
lcall
arpl
xorb
jne
jo
xchg
fldt
ds
jmp
fldt
sub
rcr
test
sarl
and
in
arpl
mov
ss
or
xchg
fildl
xor
aaa
mov
inc
adc
jo
sbb
neg
nop
sub
pop
mov
std
fcmovnbe
xchg
pop
xchg
add
xor
sbb
inc
fldt
dec
jns
xchg
out
shrb
sub
mov
jg
adc
notl
call
cmpb
stc
ret
iret
test
inc
mov
lret
mov
fildl
movsb
xchg
mov
fldt
lcall
js
or
push
lret
mov
add
jmp
rcrb
pushf
mov
mov
ret
into
push
jae
aam
or
mov
movl
imul
push
sbb
fldt
mov
scas
jb
xor
clc
sbb
push
fsub
int3
aas
fistpll
pop
pop
test
fcmovne
inc
mov
jl
je
and
jg
push
fadd
adc
xchg
std
push
lcall
fucomi
out
nop
test
mov
dec
lods
fwait
mov
pusha
stc
es
lret
fimuls
insl
sub
dec
inc
xchg
hlt
push
aam
sub
scas
fistpl
adcl
push
test
adc
fcomi
arpl
scas
xchg
mov
push
arpl
sub
stc
ds
out
pop
and
and
in
leave
pop
cld
into
mov
sahf
inc
pop
cmc
add
or
scas
call
pop
jmp
mov
adc
fcomi
ds
pusha
add
fistps
fwait
or
xor
ja
cmp
dec
inc
add
and
sbb
stc
cwtl
hlt
nop
pop
and
ret
data16
xchg
sub
mov
fucomi
push
jae
lret
fisttpl
cmp
mov
cmp
add
push
js
clc
cmp
loope
clc
lcall
lret
call
inc
cmp
in
adc
divl
sbb
sub
push
lcall
cmp
out
rclb
pop
dec
xchg
sub
icebp
aam
fildl
xor
loope
jl
cmpsl
insb
fistpl
notl
fistl
repnz
pop
or
repz
push
sti
jno
sub
scas
fcmovnb
xchg
adcb
xor
cld
jmp
jg
stos
out
pop
fcmovnbe
flds
mov
outsb
xlat
mov
adc
sub
sub
cltd
mov
mov
mov
in
sbbb
xor
fldt
in
xchg
mov
push
sub
outsb
and
fstpt
push
pop
mov
cmp
cmp
stc
adc
cmp
jp
fisttpl
fmuls
mov
das
jle
pop
loopne
lea
leave
test
jbe
push
call
dec
xchg
fcmovnbe
mov
sbb
push
inc
fstpt
pop
mov
inc
bound
cld
mov
sti
call
cld
dec
sbb
lret
or
or
xor
adc
sub
cmpsl
adc
lods
cltd
movsl
lret
cltd
sbb
jnp
mov
or
xlat
ret
inc
in
mov
clc
int
or
lock
ss
orb
out
icebp
inc
adc
repnz
inc
xchg
dec
sub
imul
int
xor
in
in
or
lcall
xor
mov
out
stos
int
data16
adcl
in
popf
pushl
pop
fildll
scas
mov
ljmp
mov
divb
data16
dec
cmp
stos
test
sbb
jg
mov
icebp
xlat
pop
or
loop
cmp
lods
sub
and
mov
bound
outsb
dec
add
repz
imul
jnp
adcb
xor
pop
repnz
les
or
cmp
into
in
movsb
imul
mov
inc
jge
jb
data16
in
push
stos
fmull
mov
fisttpll
ficompl
mov
loop
adc
mov
mov
ror
xchg
movsl
inc
addr16
stos
pop
mov
stos
adc
inc
add
movsl
jb
int3
lahf
xor
rcr
pop
repz
insl
iret
stos
fiadds
loopne
sbb
popa
dec
mov
push
push
mov
and
jno
adc
pop
cmp
dec
push
adc
cli
fistpl
lods
lret
fs
lods
imul
stos
stc
push
in
cmpsb
inc
xchg
pop
repnz
test
popf
stos
inc
dec
inc
dec
testb
mov
sbb
rcll
xchg
lret
iret
outsl
fsubrs
dec
aam
cmc
jmp
xchg
pop
fcmovnbe
jl
pop
jo
in
repnz
in
ljmp
mov
mov
mov
sti
pop
lea
shll
sub
test
loop
mov
sub
outsl
cmp
cmp
iret
lea
pop
rorl
adc
sbb
ss
adc
sub
imull
mov
ficomps
or
inc
cmc
ficompl
movsb
push
in
dec
jecxz
ret
loope
fisubs
dec
shrl
outsb
inc
xchg
pop
cltd
loop
or
ds
cltd
adc
leave
cmp
js
add
int
mov
aam
add
aaa
mov
fstps
fbstp
in
mov
shl
xchg
dec
andl
dec
pop
inc
jl
in
xor
out
leave
addps
pop
arpl
inc
fcmovb
mov
adcb
jmp
fstpl
push
insl
mov
mov
and
jle
cmp
pop
clc
icebp
mov
aas
and
or
sbb
sbb
lcall
sti
cmc
xor
dec
jb
icebp
mov
mov
mov
push
outsb
fldl
stc
cwtl
stos
cmp
enter
lcall
push
push
dec
jns
mov
and
pop
push
fldcw
push
ss
push
push
dec
stos
sub
pop
aam
ja
out
std
jne
pop
jmp
jnp
xchg
lcall
xchg
adc
lahf
mov
or
push
out
cltd
fisubrl
mov
stc
fcomi
sbb
cli
xchg
xlat
pop
mov
cmpsb
lods
popf
pop
cld
add
push
or
sub
rcrb
push
adc
test
sbbb
sti
je
movsl
cmp
call
add
faddp
fwait
push
adc
das
cmc
inc
test
btr
cmpl
fstl
xor
mov
stos
pop
popa
fwait
push
dec
fisubrl
mov
and
xor
ficoml
xchg
lds
es
push
push
inc
pop
mov
xor
lret
adc
mov
mov
adc
mov
inc
movsl
push
jecxz
push
loopne
push
out
mov
lock
add
cmp
into
sub
xor
data16
nop
test
xor
sbb
mov
jbe
dec
xchg
pop
pop
mov
xchg
and
call
mov
cltd
pop
lahf
dec
outsl
aaa
dec
mov
lcall
test
cli
or
xlat
pop
and
pop
fucom
inc
inc
popf
lods
xor
fcmovu
adc
mov
dec
outsl
fstp
xor
push
jmp
cmpsl
pop
fnclex
lret
insb
inc
pop
out
and
hlt
inc
mov
cmp
or
push
pushf
pop
ret
lods
push
lahf
or
mov
jmp
mov
mov
jne
rclb
sub
mov
int
out
push
mov
xchg
mov
jecxz
lcall
fidivrl
sbb
xor
xchg
add
cmp
faddp
imul
repz
imulb
dec
xor
adc
in
lahf
ss
push
add
adc
fs
popa
push
sub
fstpt
nop
pop
jp
fidivs
clc
mov
adc
fistps
fisttpl
test
arpl
and
cmpb
cmp
shll
lods
mov
insl
inc
mov
cmp
jno
imul
dec
push
into
fistl
push
dec
fisttpl
push
push
shll
jecxz
lea
lahf
xchg
shrl
arpl
mov
test
gs
jnp
cwtl
pop
sbb
pop
in
cmpsl
pop
and
mov
xchg
and
fnstenv
test
cmp
or
jns
mov
lcall
and
pop
test
hlt
mov
mov
and
mov
or
aas
adc
mov
fidivl
mov
sbb
xor
sub
inc
int3
int
fistl
mov
loopne
xchg
cwtl
mov
imul
bound
fildl
aaa
lea
test
pop
int
mov
leave
push
insl
mov
pop
sahf
imul
loopne
push
sub
push
dec
xchg
push
in
dec
xor
push
push
fiaddl
cmp
aad
enter
fistpl
mov
in
and
cli
adc
imul
jecxz
sbb
mov
jbe
roll
pop
hlt
fisttpl
stc
cmp
xorb
fistpl
mov
mov
sub
sbb
fldt
mov
addl
lods
add
fildl
mov
jns
enter
mov
xchg
out
loop
idiv
call
jae
fsubrs
fisubl
cmpsb
mov
out
fistl
dec
es
jno
push
add
pusha
mov
dec
mov
test
adc
clc
pop
or
fldt
dec
push
xchg
jg
or
test
leave
es
cmpsl
in
pop
xlat
rcr
ficoms
scas
orb
push
decl
mov
jle
fmuls
fs
pusha
ret
cld
in
dec
iret
stos
adc
jno
pop
fcoml
xor
pop
mov
out
cmpsb
fnstsw
aam
stc
outsb
adc
pop
sbb
popl
sarl
cltd
in
dec
das
push
push
test
fidivrl
lock
adc
xchg
shll
cmp
push
icebp
adc
fisubrs
stc
xor
out
ja
dec
adc
lods
imul
lcall
ss
cmp
mov
outsl
dec
and
das
mov
mov
cmpsb
rclb
push
clc
fistpl
mov
ds
xchg
mov
ss
lods
push
fcmovne
mov
adc
mov
fldt
lahf
cmp
jo
fxch
in
out
mov
adc
xchg
lock
aam
push
or
pop
mov
push
add
stos
mov
sbb
js
pop
push
jns
mov
insl
cmp
gs
loope
mov
nop
jne
inc
fistl
stc
sbb
hlt
and
and
mov
push
fstpl
mov
inc
dec
jge
jne
xchg
jl
movl
mov
lcall
arpl
mov
pop
and
fbstp
mov
mov
sub
push
push
sti
jns
sbb
movsl
sbb
loopne
xor
fildl
pop
push
jl
jmp
adc
sub
sub
add
das
shl
jnp
xchg
out
dec
cmp
sar
push
bound
loope
pop
inc
cwtl
lea
repz
fisttpl
inc
sbb
cld
in
fucomi
adc
sub
sub
ret
jns
adc
in
ja
xlat
fnsave
add
pop
mov
jl
imul
icebp
sub
xor
xor
xor
mov
push
mov
not
mov
pop
cmpsl
or
lds
out
data16
xchg
jecxz
sub
fisubrl
test
mov
lahf
fistpl
lods
hlt
test
insb
sbb
call
lods
mov
aaa
push
imul
or
pop
sbb
sbb
fistpl
pop
cmp
sbb
das
in
fisubrl
mov
test
cs
fldt
enter
xlat
push
pop
sarl
fisttpl
stos
cwtl
add
dec
push
popa
jnp
cmc
sbb
loopne
mov
mov
fcmovu
sub
ret
fildl
lock
cmpsl
arpl
fstpt
imulb
fisttpl
fs
push
out
mov
out
fistpl
pop
xchg
sti
jo
dec
fcmovne
jbe
adc
fisttpl
pop
loopne
addb
xor
push
fldt
or
inc
pusha
rolb
fistl
mov
or
jae
loopne
push
mov
xchg
jmp
test
movsb
ret
leave
fldt
xchg
sbb
loop
imul
nop
in
pop
or
leave
fiaddl
lock
sbb
stos
lods
and
test
gs
pop
jle
lcall
lds
and
popa
rorl
mov
cs
mov
fcmove
sbb
iret
inc
dec
xchg
fildl
popa
adc
enter
arpl
lahf
mov
push
cltd
sub
or
dec
jbe
sbb
mov
mov
out
xchg
aam
fldt
mov
fildl
mov
push
lock
cwtl
inc
cltd
rol
mov
sub
push
dec
jno
dec
lret
rol
cmp
fistl
push
icebp
in
pusha
xor
lods
fs
mov
inc
jns
ret
xchg
cltd
sbb
icebp
insb
sbb
rcrl
xlat
jnp
xchg
cwtl
inc
xlat
sbb
mov
or
dec
dec
mov
lods
les
mov
ret
out
dec
push
into
pop
jmp
jb
xchg
dec
adc
push
mov
sbb
cmp
pop
cmc
ds
in
pop
shl
inc
or
and
add
cld
mov
repnz
dec
adcl
lret
mov
pop
imul
xchg
pop
cmp
mov
add
imul
inc
xchg
sahf
movsl
out
js
pop
call
test
inc
fistl
mov
loope
cmc
mov
xor
stos
xlat
or
fninit
cwtl
dec
lea
lock
inc
fcmovnbe
insl
jmp
add
jnp
pop
push
popa
xchg
pushf
mov
fiaddl
inc
jmp
dec
imul
cmpsb
jnp
es
mov
push
cs
mov
and
jp
fcmovne
fmull
fdivs
jns
push
pop
aam
pop
movsb
loop
jp
out
fisubrl
rep
xor
filds
pushl
repnz
ja
loopne
lret
push
test
fwait
clc
fisttpl
dec
xchg
dec
sub
mov
cmp
loopne
cli
xchg
sahf
jne
mov
mov
inc
scas
adc
pop
add
sahf
add
pop
lods
adcb
and
pop
pop
in
imul
sub
fldt
push
or
xchg
fcomi
add
xor
push
es
sbb
in
sbb
xor
xor
pop
mov
pop
fidivl
dec
ss
les
sbb
and
cmp
push
mov
in
inc
fisttpl
leave
lds
call
or
call
sub
add
and
in
or
aad
adc
dec
mov
in
fistpl
xchg
repz
mov
mov
enter
ljmp
lret
adc
mov
imulb
jp
repnz
jae
push
or
xor
shl
outsb
adc
stos
xor
push
mov
mov
mov
jae
sub
jg
dec
and
in
pop
dec
mov
xlat
dec
sbbl
inc
xor
sbb
fdivrp
xor
and
dec
dec
fistl
jge
fldt
movsb
movsl
shrb
sbb
fdivl
sbb
insl
pop
arpl
cmpsl
fistpl
outsl
push
jp
xchg
push
out
das
fstpt
aaa
xor
sbb
fisttpll
int
sahf
jns
leave
sbb
orl
mov
cmpsl
sbb
jae
push
aas
fsub
fistps
push
mov
and
icebp
jge
dec
fadd
fimull
sbb
frstor
leave
cmpsb
out
or
and
lods
dec
fcomi
add
rcr
mov
pop
mov
push
fistl
stc
dec
adc
or
ret
arpl
mov
xchg
dec
insl
or
xor
lods
dec
bnd
fildl
int3
cmp
dec
mov
dec
arpl
sbb
adc
push
pusha
clc
jmp
mov
rcrb
push
lea
fildl
sbb
mov
loope
movsb
lock
xchg
cmpb
insb
cltd
xlat
and
push
pop
sub
sahf
mov
xchg
aad
fldt
jns
int
mov
lcall
cmp
clc
push
int3
mov
rorl
es
jno
insb
sub
sar
pushf
sub
fs
test
fidivl
shll
int3
xchg
scas
cltd
loop
int
movsl
fnsave
loopne
cmpb
fcmovne
shll
add
in
push
cmp
repnz
jp
mov
loop
push
sbb
pop
adc
lock
fs
loope
addr16
sbb
sub
fldt
cmp
xchg
inc
dec
loopne
stos
or
mov
fildl
push
cmpsb
xor
xor
push
inc
test
mov
pop
fcmovne
sbbb
cld
ror
mov
testb
push
and
popf
jle
mov
add
pop
repz
cmp
mov
stos
and
nop
fistl
mov
movl
sar
xor
pop
hlt
into
xor
dec
or
jle
mov
cmpsb
inc
loop
fisubs
and
lods
inc
pop
stos
sbb
rolb
cmp
dec
xchg
or
pop
fstpt
xor
int3
adc
loop
stc
mov
and
jnp
es
cmpsb
adc
sub
lods
cmc
xchg
sub
repz
fldt
push
cwtl
xchg
sub
sarb
hlt
and
lods
sbb
add
das
fldt
divl
cmp
fistpl
sub
iret
in
xchg
aas
cmp
lock
frstpm(287
pusha
leave
jbe
mov
jmp
test
js
dec
xchg
jmp
mov
add
and
adc
pop
mov
fs
andb
dec
leave
mov
cwtl
push
leave
loope
xor
div
pop
push
stc
imul
push
dec
and
mov
push
icebp
clc
dec
jle
shll
sbb
pop
xor
fldt
stos
fistl
push
push
push
inc
and
push
inc
push
fadds
mov
mov
pop
fcom
mov
fcmovnbe
fwait
outsb
xor
aas
push
dec
aaa
fldl
pop
out
jmp
out
je
xor
fcmovnb
dec
in
daa
out
pusha
fisttpl
cmpsl
arpl
jno
lods
mov
fisttpl
aad
pushf
inc
push
test
insb
aas
adc
int3
call
shrb
xchg
leave
iret
fcmovnu
push
xlat
mov
js
lret
cmp
fnsave
out
into
rolb
jno
and
jp
aas
hlt
push
fnstsw
fmull
mov
aam
loop
gs
es
call
fisubrl
in
cmpsl
ja
add
dec
insb
mov
push
fucomip
ret
jle
xorb
jecxz
call
jmp
sarb
mov
stc
loop
mov
mov
sbb
cmp
fisubs
imulb
pushf
das
jbe
fcomp
dec
and
roll
push
lret
push
cwtl
fnsave
int3
jmp
adc
mov
rorl
jo
lock
and
push
jp
in
cmp
xchg
ret
mov
sub
xor
lret
adc
arpl
ficoml
cmp
xchg
cmpsl
adc
sbb
jno
dec
add
ret
mov
fimuls
push
inc
test
and
dec
mov
inc
inc
shrl
rcl
add
adc
jge
test
mov
mov
pop
cmp
push
add
stos
fistl
icebp
adc
in
pop
push
repz
cmpsl
xor
test
cmp
mov
add
out
mov
into
jno
sbb
decl
mov
out
mov
mov
divb
mov
cmp
enter
clc
cmc
loopne
out
repz
pop
fildl
test
sbb
add
cltd
jle
sub
or
mov
mov
fucomi
into
popf
aaa
inc
or
mov
and
sbb
sbbl
lret
xchg
daa
jecxz
adc
mov
inc
scas
rcr
lods
call
jno
cmp
rorb
test
cs
pop
mov
dec
add
fidivl
jnp
xchg
dec
xor
add
int
rcr
cwtl
scas
push
or
add
out
movsb
adc
imul
dec
cmp
test
call
sbb
adc
sbb
orl
insl
mov
dec
leave
mov
outsb
fcmovnb
push
pop
test
adc
inc
popa
test
ret
mov
aaa
xchg
test
sbb
xchg
dec
stos
or
call
fstpl
popa
push
xchg
icebp
fisttpl
mov
sub
mov
out
ds
fcmovne
xchg
int
or
mov
sahf
mov
jb
mov
andb
push
mov
ret
out
cmp
int3
ja
mov
shll
sti
data16
dec
ss
xor
test
test
aam
add
pop
mov
pop
call
sub
xlat
decl
pop
rolb
enter
rcrl
push
push
sub
dec
xchg
in
icebp
aad
jno
pop
addb
mov
add
fstpt
xchg
push
ret
fstpt
pop
pop
xchg
loopne
out
sbb
scas
fstps
add
fldt
aad
dec
lcall
popa
pop
xchg
pop
test
daa
fisttpl
jns
sub
fwait
lds
sbb
repnz
add
cltd
mov
sbbl
lret
fistpl
outsl
nop
fucomi
xchg
and
push
add
inc
push
cmp
mov
inc
fstpt
out
das
jns
pop
int3
mov
adc
mov
fisttpl
cld
adc
lock
mov
aad
pop
push
mov
sbbl
or
inc
icebp
pop
adc
fistl
fsubs
mov
data16
testb
and
add
xlat
mov
insb
cmp
xor
js
repnz
fs
cld
pop
lcall
aad
test
inc
sarl
cmpsb
mov
dec
ja
ficompl
hlt
aam
fxch
fistl
pop
mov
cmpsl
cmp
fsubrl
insb
xor
mov
icebp
dec
sbb
filds
aad
popa
mov
add
sub
ret
jnp
mov
ret
stos
dec
pop
xchg
inc
fucomi
fstl
inc
fstpt
xor
and
push
sub
ret
jns
cmp
ss
pop
pop
adc
arpl
js
fstpt
and
ljmp
xor
push
fildl
or
mov
jno
pop
jecxz
lea
je
mov
add
stos
movsl
sub
gs
jmp
push
test
testl
cmpsb
jb
fisttps
pusha
popf
lock
jg
sbb
xchg
cltd
lds
inc
push
sarl
aas
jecxz
mov
sub
mov
mov
movsb
fisttpl
mov
dec
push
pop
vpunpckhwd
fstpt
adc
lea
pop
gs
dec
sub
sbb
or
dec
or
pop
dec
les
inc
mov
cmpsl
fadds
sbb
stos
pop
push
lret
dec
cmp
dec
cmc
pop
fisubl
sbb
adc
ret
pop
fistpl
stos
fistps
cmc
mov
leave
clc
fstps
sbb
pop
jns
mov
mov
out
int
shrl
pop
iret
pop
ljmp
hlt
pop
and
jmp
les
in
or
mov
inc
int
movhps
loopne
jge
scas
loop
ficompl
cmp
sbb
cmp
stos
popa
int
test
pop
cli
pop
out
in
push
mov
sub
xchg
pop
fidivs
push
data16
adc
mov
lcall
leave
cmp
lods
jne
pop
pop
call
mov
sahf
cmp
clc
es
fldl2t
adc
jmp
lcall
clc
in
movl
pop
pop
ljmp
push
sbb
jbe
sar
in
or
loop
in
loopne
push
jmp
pushf
and
push
ja
loopne
sarb
ficoml
mov
lcall
jecxz
pop
mov
stos
js
in
arpl
cld
repnz
xor
jp
adc
push
pusha
cmp
ljmp
ljmp
sbb
jo
cwtl
sbb
movsb
es
dec
xlat
dec
in
cmp
orb
arpl
jmp
movsl
xor
push
lods
mov
xchg
mov
or
add
pop
nop
sub
cli
repnz
aaa
push
pop
rcl
inc
lods
mov
push
loopne
jno
test
inc
lcall
sub
pusha
cmp
jmp
cmc
inc
hlt
inc
pop
cmp
imul
push
rol
inc
jae
stos
add
add
fidivrl
icebp
ljmp
lock
mov
clc
cmc
call
dec
cmp
movl
loope
enter
stos
fwait
mov
pop
cmc
fcomps
dec
fisubs
push
jp
repnz
inc
cmp
mov
mov
gs
lret
shrb
outsl
pop
sub
cli
jmp
ljmp
pop
mov
loop
cmp
inc
or
or
dec
cmpsl
pop
sbb
leave
lods
mov
lcall
mov
mov
ret
mov
lret
push
cli
inc
jns
test
push
fldt
pop
dec
pop
sarl
sbb
nop
pusha
inc
stos
jg
test
hlt
nop
cmp
cmp
jo
cwtl
loop
inc
push
mov
xor
int
pop
push
nop
lock
stos
mov
xlat
mov
push
xchg
inc
mov
sub
loop
lods
lods
je
pop
mov
xchg
inc
push
and
jns
in
mov
cltd
cmpsl
in
mov
mov
mov
aaa
lahf
xchg
loopne
int
stos
mov
or
sti
test
filds
cmc
clc
icebp
inc
mov
insl
xchg
push
or
inc
stos
ss
mov
fisttpll
mov
shrl
pop
push
fs
test
fldt
into
mov
push
sub
data16
cmp
fstpt
add
mov
outsb
push
test
icebp
pushf
jmp
out
fcomi
lahf
imul
cmp
push
xlat
pop
push
sbb
fldcw
mov
pop
sbb
leave
outsb
push
iret
sbb
fcmovu
push
dec
dec
ret
mov
xlat
fisttpl
adc
sbbl
dec
fstpt
repz
mov
cmpsl
ret
xor
jp
mov
xor
fstpt
mov
fcoml
jecxz
add
cwtl
dec
daa
fcmovnu
ret
xchg
push
mov
in
in
jge
cmp
in
jmp
das
insb
scas
notl
adc
lods
push
fimull
jno
mov
mov
lods
mov
and
mull
adc
shr
lahf
mov
gs
fstpt
xchg
aaa
fldt
int3
xchg
sub
push
fistl
or
es
scas
lds
jg
and
iret
mov
sbb
or
hlt
nop
sub
fdivrl
lret
mov
lret
js
dec
fdiv
push
xchg
lret
inc
or
jb
mov
mov
add
fstl
dec
pop
into
xchg
mov
repz
lock
push
lret
fidivl
loope
imul
adc
mov
stc
sbb
insb
jmp
clc
jne
fcompl
fwait
pop
lret
cmc
rorl
sbb
cli
sub
pop
sahf
aad
test
cld
fidivs
in
mov
fldt
add
pop
fldt
xchg
frstpm(287
mov
das
push
sbb
movsb
leave
cmc
mov
push
pop
xlat
mov
comiss
or
ds
mov
xlat
sub
andl
mov
test
mov
sbb
dec
add
dec
test
mov
push
sub
mov
mov
inc
mov
or
mov
loop
push
sahf
or
fwait
mov
nop
shl
stos
inc
hlt
mov
sbb
cli
and
in
pop
mov
and
loop
add
js
dec
jge
mov
push
and
dec
ror
adc
jns
cmp
repz
idivl
sbb
dec
push
dec
outsb
les
test
mov
enter
xlat
fwait
test
pop
int
test
stos
in
mov
pop
loope
dec
pop
popf
lcall
cmp
in
idivl
sub
fwait
loop
and
sti
adc
imul
dec
test
clc
icebp
xchg
push
je
aad
test
adc
out
loopne
cmp
shll
add
jmp
jmp
loope
or
adc
jg
pop
int
fwait
push
add
cwtl
push
lods
out
xor
sub
out
xchg
xchg
xchg
fwait
or
outsl
out
clc
pop
shlb
add
gs
push
bound
cmpxchg
repnz
icebp
push
sar
jl
mov
mulb
sub
js
mov
xchg
addr16
into
push
mov
imul
mov
jae
sbb
push
xor
or
pushf
push
test
stos
sub
push
lret
xor
or
cmp
or
push
clc
add
push
push
adc
jecxz
pop
jmp
stos
adc
fucomi
push
stos
mov
add
aam
and
mov
int3
les
mov
in
mov
stc
and
dec
repz
ljmp
leave
xchg
stos
jno
push
rcr
add
inc
sbb
aad
fnstsw
lds
andl
out
imul
std
mov
lret
jmp
xchg
dec
rcr
fstpt
loop
stos
pop
push
arpl
icebp
loopne
js
out
xor
cmc
rcl
fadds
in
clc
pop
pop
push
add
cmpsl
sbb
sbb
out
adc
sub
sub
lds
mov
je
xor
popf
pop
and
shlb
std
adc
stc
in
cltd
xchg
dec
mov
fisttpll
test
mov
fstpt
dec
push
inc
int
push
cwtl
out
fcmovnu
call
mov
fstpt
xor
pop
sub
or
call
pop
mov
fildl
insl
subb
mov
lods
push
out
fcmovnbe
andl
mov
fistpl
pop
insb
or
mov
das
push
cli
divb
or
sub
pop
lock
aam
stos
cmc
enter
sbbb
in
xor
push
push
mov
sbb
add
addl
mov
loop
ljmp
dec
and
mov
sbb
xor
out
mov
xchg
lds
jle
push
jg
repz
dec
out
xlat
aas
mov
mov
push
divb
insb
mov
mov
and
pop
push
addr16
lods
xor
inc
in
cmp
sbb
movsb
xchg
push
jb
inc
ret
jle
fistps
daa
sub
rorl
shll
jno
std
ljmp
inc
and
es
imul
call
mov
leave
add
stos
imul
stos
mov
dec
bound
jge
orl
add
ljmp
test
push
push
faddl
jns
xchg
inc
push
xor
xor
cltd
cmp
or
enter
jns
jo
sbb
cltd
cld
lea
stos
push
and
fistl
imul
fstl
dec
nop
stos
push
outsb
mov
push
fbld
int
lods
mov
cmp
mov
int
and
hlt
lock
push
jecxz
xchg
jno
sbb
mov
and
xchg
adc
int
mov
add
xor
filds
dec
insb
lea
xor
xchg
dec
push
in
call
sbb
daa
pop
jecxz
aaa
pop
inc
cmpb
stos
sbb
pop
clc
mull
mov
fidivl
shl
sub
mov
xor
mov
nop
add
xlat
test
in
mov
loopne
jecxz
les
xchg
xor
mov
in
bound
fwait
ja
xchg
or
int
cmp
clc
sub
lock
mov
and
lds
xlat
lahf
add
xor
mov
fcmovnb
and
pop
sbb
std
xor
pop
sbb
bound
mov
mov
mov
dec
push
stos
call
or
test
loopne
lods
inc
and
jecxz
jmp
dec
inc
fcmovnbe
pop
mov
mov
call
repz
gs
movl
push
lock
push
dec
fwait
mov
loop
push
jnp
rolb
lahf
xchg
fstpl
movsb
std
in
popf
mov
jg
popf
decb
mov
xor
jl
adc
add
xchg
lods
stc
test
enter
fucomi
xor
cwtl
pusha
pop
pop
popf
sbb
jg
sub
fistl
xor
lret
cltd
outsb
clc
out
sahf
pop
mov
int3
fnstcw
jbe
fimull
sti
aaa
xchg
push
adc
testl
rcl
int
sbb
ror
cmp
movsb
push
fs
xchg
fidivl
push
pop
call
adc
mov
int3
fistpl
push
les
pop
adc
sarb
das
cmp
sahf
jl
sbb
inc
js
or
dec
fcmovnu
mov
out
add
ds
push
mov
mov
rorl
lods
call
sub
loopne
push
mov
test
inc
sbb
clc
sbb
adc
pop
das
jno
sbb
lcall
dec
jnp
inc
adc
xorl
cmp
sar
std
sbb
sub
push
pop
jg
cmpsb
stos
fistl
sub
out
fisubrl
es
adc
out
ljmp
adc
cmpb
cmpb
pop
adc
in
xor
addr16
xlat
fisttpl
sub
sti
fisttpl
jp
out
or
call
lret
mov
mov
and
sahf
fildl
je
xorl
mov
pop
mov
jae
inc
cwtl
cmpsl
rcrl
leave
pop
mov
dec
movsb
neg
addr16
mov
rolb
push
sub
sarb
push
ret
test
in
pop
loop
imul
cwtl
arpl
xor
xorb
jmp
imulb
mov
cmp
cld
sbb
push
aad
dec
sub
insb
adc
adc
jbe
setnp
repz
out
fildl
or
jge
adc
inc
mov
imul
sti
add
mov
loopne
ret
xchg
decl
fadds
sub
out
xchg
cwtl
fcmovnbe
leave
mov
mov
shll
and
xor
cmpsl
test
xlat
loope
mov
repnz
jae
cli
clc
and
pusha
pop
or
in
dec
adc
xor
or
outsl
dec
repnz
push
and
cwtl
dec
jns
loope
data16
out
lahf
hlt
lcall
jg
mov
sbb
fldt
int
cwtl
cmpsl
cmc
call
jmp
cmp
movsl
mov
ja
sbb
push
jnp
or
dec
addr16
mov
and
fldt
cmp
pop
mov
ficoms
cmpl
out
loop
js
clc
or
outsl
xlat
fisttpl
xor
je
xchg
push
pop
push
scas
fcmovnb
push
sub
sub
popf
mov
push
push
fldt
jns
dec
push
mov
and
mov
and
fwait
out
mov
sbb
pop
xor
lret
je
pop
mov
outsl
fucomi
jae
mov
iret
push
xor
mov
push
xchg
mov
cmp
fistl
and
popf
lock
xor
bound
loopne
repnz
dec
pop
xchg
push
out
fcmovne
cmp
inc
and
or
lods
test
lods
fistpl
cmpsl
hlt
neg
push
insl
bound
loop
in
cld
dec
mov
mov
je
loope
xor
mov
fwait
out
mov
arpl
adc
das
fisttpl
hlt
or
and
sahf
int3
ficomps
cmpsl
cli
out
lret
hlt
sub
es
popf
scas
mov
std
pop
inc
adc
call
ficomps
ljmp
push
sbb
jp
fnstenv
repnz
sub
fildll
test
roll
out
aas
addr16
add
cld
mov
fcmovnbe
sbb
mov
push
lret
and
sbb
cmp
ss
packsswb
pusha
or
out
adc
iret
and
int
inc
push
mov
xchg
scas
daa
punpckldq
dec
pop
mov
ret
pop
dec
js
cmp
or
enter
jmp
sub
outsb
dec
orb
mov
sbb
jl
rcr
sbb
xchg
daa
arpl
pop
fisttpl
or
imul
dec
cmp
ret
scas
dec
fisttpl
or
testb
jb
sbbb
test
pop
ljmp
js
movsl
loope
or
add
sub
inc
test
push
adc
bound
mov
stos
shlb
mov
dec
fldt
push
sub
mov
dec
mov
push
and
js
jno
out
insl
xor
clc
bswap
sbb
fisubl
fsubl
dec
loopne
fwait
call
fldcw
shl
sbb
stos
pop
aad
xor
lret
sbb
and
rcr
cli
out
inc
addr16
pop
lods
jno
jp
jle,pn
rcr
push
xlat
repz
and
xorl
pop
stc
jns
mov
stos
pop
movl
push
mov
adc
ss
sbb
fistpl
push
pop
aaa
mov
fucomi
fdivrl
loopne,pn
sti
inc
orb
arpl
aaa
mov
mov
scas
out
add
cli
push
sub
cmp
xchg
add
mov
lahf
cmp
mov
jl
dec
push
mov
repnz
push
push
jge
call
cmp
aam
push
lock
ret
pop
or
jae
aas
sbb
push
lret
fcompl
mov
jb
enter
push
dec
pop
push
arpl
mov
jne
xor
dec
adcl
pop
push
lods
call
sbb
fadd
cwtl
clc
sub
push
fistpl
xchg
dec
xor
call
cmp
fwait
push
sti
fistpl
jns
add
out
clc
sar
dec
and
pop
xor
pop
cmpsb
in
out
int
pop
push
data16
xchg
enter
aaa
sbb
push
or
ror
or
and
js
shr
cmp
jbe
fldt
and
lods
mov
enter
pop
inc
xrelease
call
mov
fistps
xchg
mov
cmp
cli
sbbl
sbb
fcmovnbe
add
rorb
sbb
dec
call
lcall
jecxz
cli
daa
iret
sbb
imul
ret
jns
in
fistpl
xchg
inc
mov
fwait
jmp
sbb
fisttpl
dec
out
clc
sbb
xorb
int3
cmp
xchg
ficoml
stc
xchg
popa
shl
mov
fiadds
push
inc
fildl
popf
fistps
push
jl
loope
mov
ret
fnstcw
sub
mov
cmp
mov
dec
test
pop
das
xor
and
adc
int3
push
out
adc
mov
dec
add
jne
xchg
cltd
mov
sbb
in
call
or
pop
neg
xchg
add
fildll
in
xorl
outsl
inc
fistl
loope
rcr
icebp
or
stc
fldt
insl
jl
fldt
cmp
imul
jno
fistl
xchg
add
call
and
lea
test
shl
sbb
lods
fcomps
scas
je
sbb
ja
cmp
xchg
test
and
lods
inc
fidivrl
jge
in
out
mov
xchg
stos
xchg
arpl
mov
cmp
adc
inc
ja
xchg
rorb
sahf
xlat
push
scas
mov
and
les
add
mov
jne
mov
andb
fidivrs
addr16
in
mov
pop
shll
int
sub
ja
xchg
pop
mov
loopne
pushf
sub
call
pop
sbb
push
inc
sbb
jge
rcll
rclb
push
add
push
cmpps
mov
insl
aad
dec
cmp
pop
mov
mov
jne
cmp
sbb
push
or
xor
fildl
aad
fldenv
repnz
jno
jo
sub
adc
sti
pop
inc
popf
jecxz
jmp
sub
arpl
stos
add
add
and
jbe
mov
xlat
xchg
sti
push
ret
insl
stos
pop
or
popf
xor
lret
xor
pop
fadd
js
mov
jp
jp
sub
insl
ljmp
fstps
dec
out
adc
jbe
dec
add
or
js
push
ds
iret
fiadds
out
or
sbb
jmp
jge
fsubrl
mov
xchg
push
inc
jle
jp
sub
pop
xor
add
cmc
popf
xchg
add
jp
lods
stos
imul
lock
ret
sub
ror
je
push
mov
sbb
jmp
sbb
pop
sbb
insl
push
mov
cmp
nop
mov
xchg
mov
adc
lods
mov
push
jb
dec
jl
mov
aaa
and
imul
mov
lcall
ja
push
dec
dec
jg
js
jne
andl
hlt
outsb
xchg
cwtl
jmp
insb
lret
lock
cmp
cwtl
push
popa
fistps
sti
mov
xlat
sbb
lcall
fiadds
jl
mov
std
outsl
scas
jb
notb
add
adc
cmc
insl
xor
sarl
cmp
int
pop
pop
icebp
stos
scas
xchg
js
ret
fistpll
sbb
jge
jge
and
jb
dec
pop
stc
mov
add
xchg
mov
cmp
stos
fidivl
mov
pop
sbb
les
jp
lods
sub
loopne
push
sub
xchg
addr16
mov
pop
loop
dec
xchg
xchg
cmp
mov
out
mov
pop
adc
iret
lock
insb
jns
outsb
shrl
sbb
pop
adc
insb
sbb
mov
sub
xor
mov
stos
sti
jne
es
repnz
mov
lahf
jge
movsb
cwtl
fldt
repnz
push
stos
out
mov
sahf
in
mov
lods
inc
jg
pop
mov
push
scas
mov
jo
imul
in
lods
xor
insl
push
outsl
ljmp
mov
adc
push
stos
fdivrs
fwait
mov
mov
shrl
aam
lock
xchg
dec
aas
sub
repnz
push
daa
jne
lea
push
sub
clc
jno
pop
mull
jl
jnp
ror
call
pop
lcall
stc
dec
add
ficoml
push
shrl
fs
and
lret
stos
add
jno
rcrb
inc
stos
inc
push
sub
adc
or
cwtl
out
scas
or
mov
mov
xchg
pop
inc
or
popa
xor
int
dec
outsb
inc
loope
stos
test
jb
add
mov
int
popa
mov
dec
push
jbe
incb
pop
shl
cmpb
addr16
stc
cmp
or
pushf
push
fbld
in
out
out
int
icebp
push
arpl
pop
es
js
sub
ficomps
nop
push
inc
or
cmp
jbe
pop
or
mov
hlt
jb
in
lock
dec
push
cmp
mov
stos
int3
push
push
in
cmp
loopne
jle
mov
mov
clc
out
lds
add
insl
out
jp
sar
add
in
in
mov
mov
jae
sbb
cmp
mov
jge
pop
jecxz
push
in
cmp
fildl
jno
jecxz
roll
jbe
call
movsb
mov
popa
xchg
pop
xor
xchg
popf
cltd
and
xor
cmpsb
xchg
fstps
and
fidivrl
mov
out
stos
cmp
adc
insl
in
xchg
pop
inc
cli
jp
and
daa
or
mov
pop
sbb
mov
dec
lcall
adc
push
cmpsb
loopne
dec
cld
adc
pop
scas
mov
stos
icebp
cmp
pop
pusha
push
pop
add
test
pop
push
push
inc
mov
ljmp
fsubrl
push
dec
repnz
imul
xor
imull
adc
rcll
xor
jne
aam
inc
sub
sbb
pop
popa
mov
lods
cmp
pushf
push
sub
shll
cmc
int
xchg
mov
push
clc
stos
push
mov
sub
cmpsb
jle
dec
idivb
sbb
adc
push
dec
pop
icebp
xor
xchg
pop
popa
fisttpll
push
jp
shlb
dec
sub
pop
lods
lcall
mov
inc
rcrl
pop
enter
lods
les
mov
insl
or
loop
inc
repnz
pop
fildll
ret
aad
int
cmp
test
imul
xor
cmp
sbb
pop
fs
jecxz
cmp
std
mov
sbb
fidivl
xlat
fdivl
bound
sbb
mov
sahf
scas
lock
mov
insl
lahf
sub
xchg
rcll
repnz
mov
and
mov
mov
cli
jne
xor
in
test
shll
test
int3
iret
fucomi
mov
sbb
loop
cltd
add
mov
in
adc
lcall
lods
sbb
jecxz
fwait
push
mov
jp
sbbl
shlb
add
bound
scas
adc
mov
add
inc
in
jbe
aaa
pop
xchg
stc
lods
and
lahf
sbb
jae
bnd
mov
xchg
cli
pop
clc
push
stos
cmc
loopne
je
pop
js
xchg
jl
icebp
pop
add
ja
stos
jno
cmp
jp
call
sahf
test
lods
mov
mov
mov
sbb
int3
or
adcb
stos
dec
cmp
add
xor
and
hlt
lods
fimull
in
cld
fimull
xor
mov
add
xchg
popa
push
imul
sub
es
lods
cmp
mov
adc
shll
add
sahf
lods
ds
mov
sarb
add
ja
stos
out
lods
ds
in
pop
icebp
push
jl
add
insb
js
jmp
sbb
addps
ficompl
bnd
jle
arpl
mov
ds
fisubrs
fdivp
outsb
dec
outsb
sbb
pop
mov
stos
test
stos
repz
xor
popa
testb
xchg
fsubl
mov
mov
dec
adc
xor
fwait
stos
iret
mov
xor
adc
cmp
pop
daa
fbld
mov
pusha
or
pop
or
add
pop
icebp
or
xchg
push
jo
mov
adc
lods
pushf
lods
in
jl
stos
cld
add
sbb
repnz
pop
xchg
jecxz
insl
add
in
cmpsb
fneni(8087
push
stos
stos
push
add
mov
push
movsl
int3
bound
cwtl
lcall
and
movsb
aaa
ret
divb
pop
ficomps
cltd
pop
xchg
cwtl
ud2
in
pop
cli
jl
std
aad
sbb
loop
jge
arpl
xlat
mov
add
out
mov
loopne
adc
scas
in
pop
lods
sbb
sub
aam
loop
lret
mov
mov
push
xchg
clc
out
rorl
push
pop
push
xor
adc
ss
fisttps
nop
jb
inc
out
pop
push
lods
jno
lock
add
fwait
daa
and
sti
mov
lret
sar
xor
adc
imul
jb
in
pop
cmp
sub
mov
adc
dec
icebp
inc
lods
movsb
pushf
or
inc
mov
cmpsl
jmp
fisubrl
outsl
arpl
mov
fbld
int
stos
iret
in
jnp
jl
or
lods
and
mul
mov
clc
fcoml
adc
mov
imul
mov
jp
add
mov
out
ljmp
inc
cmp
mov
sbb
adc
dec
out
mov
enter
mov
cmp
pushf
imul
push
adc
nop
xor
enter
cmc
fstl
add
popf
mov
xor
fdivr
adc
pop
bnd
fdiv
push
xor
lods
jns
dec
in
pusha
in
sti
lods
cmp
vmread
dec
mov
loope
iret
jae
stos
fisttpll
int
fwait
sbb
xlat
bound
add
xchg
mov
fstpt
popa
popf
pop
in
cmc
fisttpl
outsl
pop
loopne
mov
repnz
jnp
and
out
jmp
mov
jge
push
pop
sarb
mov
gs
call
dec
pop
pop
mov
dec
xor
jne
mov
pop
pop
jnp
cli
cwtl
fldl
xchg
mov
xlat
ret
mov
or
xor
dec
pop
xor
fildl
test
mov
push
mov
out
dec
pop
in
xor
fisttpl
mov
fistpl
insl
les
shl
pop
dec
fwait
stos
cmpsb
add
xchg
jno
das
std
sbb
mov
out
jge
inc
xchg
fucomi
xlat
filds
dec
loope
dec
and
add
mov
push
int
and
sar
cwtl
dec
mov
add
push
scas
inc
lret
cs
aas
sbb
aaa
lcall
stos
mov
or
sbb
adc
jp
push
adc
jns
in
mov
sbb
cmpsb
sub
fidivl
or
xchg
fwait
lcall
sub
neg
jns
mulb
clc
fwait
out
mov
pop
ljmp
cmc
xor
dec
fldt
sbb
sub
xor
push
fwait
jnp
dec
sbb
mov
and
push
or
xchg
jle
xchg
outsl
inc
test
inc
sahf
pop
pop
cmpsb
pop
and
dec
loop
sub
pop
fildl
mov
push
sub
fstpl
mov
daa
je
cmp
jb
fmuls
gs
xchg
jo
out
push
fucomi
inc
lret
das
ret
fdivrp
jle
sub
pop
or
xor
jo
sbb
imul
test
aam
lds
dec
test
and
mov
mov
or
mov
scas
add
in
hlt
loopnew
enter
jmp
jge
aam
sbb
sbbl
insl
fistl
loop
fiaddl
xor
scas
and
xchg
jecxz
fistl
dec
inc
cld
mov
cmc
mov
mov
adc
pop
repz
shlb
jecxz
fs
lret
inc
mov
sub
push
call
adc
icebp
sti
insb
sbb
xchg
mov
movsl
xchg
nop
fcmovnu
push
add
xor
adc
mov
pop
adc
or
mov
mov
mov
fcmovb
add
fldt
mov
pop
out
cmpsl
leave
stos
fcmovnu
jno,pn
adc
lcall
into
lods
sbb
cmpsl
push
in
push
sbb
xlat
xchg
call
sub
in
add
or
addr16
jmp
mov
fistpl
ds
stos
cmp
es
xor
add
sub
pushf
and
lret
mov
lcallw
mov
push
loope
lret
add
dec
es
mov
and
bound
cmp
int
and
add
shl
pop
cmp
fidivs
jb
and
and
fldt
push
dec
gs
fisttpl
pop
imul
fists
loopne
cltd
stos
lcall
fs
mov
loopne
pop
in
cld
jl
push
push
add
rcrl
fnstsw
lock
xchg
jmp
add
aam
fistpl
repnz
push
inc
inc
mov
pop
add
nop
aam
scas
call
sarl
outsb
inc
or
push
out
fcmovnu
mov
push
fstpt
movsb
inc
hlt
fstpt
adc
xchg
mov
sahf
clc
rorl
out
adc
fsubrs
or
sub
loop
rcrb
fimull
aam
cli
pop
es
ret
orb
frstor
test
popa
clc
fisttpl
mov
fstpl
in
aam
sbb
jae
ja
jle
movl
mov
cmp
xor
leave
add
push
mov
pusha
push
shll
out
jae
inc
inc
push
cmovnp
rcr
pop
inc
mov
movsl
rep
daa
jg
es
sti
add
inc
jl
mov
fcmovnu
rcrl
loop
hlt
andb
cltd
mov
addr16
or
iret
dec
and
test
fisubrl
mov
jmp
insb
pop
andb
imul
test
fs
add
add
cmp
fcmovne
repnz
mov
in
sahf
ficoml
popl
fldt
cmc
sub
fadds
and
imul
hlt
mov
mov
les
dec
into
cmpsl
jp
jmp
inc
aas
mov
adc
lock
insl
cmp
mov
push
fstl
mov
iret
fstps
dec
rcr
inc
sbb
push
scas
fbld
shrl
push
mov
aam
test
rcr
clc
mov
je
dec
fucomi
cmpsb
inc
aas
lea
aad
sti
lds
cmp
daa
repz
loop
mov
mov
push
neg
sub
aaa
and
les
out
fisubl
fisttpl
lock
cld
loopne
das
pop
dec
xchg
imul
xor
sub
ds
inc
mov
addr16
dec
push
je
data16
mov
popa
outsl
stos
lock
fstpt
adcl
andl
ret
arpl
and
lds
ljmp
lret
iret
lcall
lcall
xchg
enter
fwait
and
cwtl
movsl
call
hlt
fcomi
push
sahf
adc
js
lret
inc
mov
pop
out
ds
pop
imul
aam
in
fistpl
js
add
sub
loopne
test
int
rcr
in
adc
dec
jae
stos
adc
lea
pushf
clc
mov
fidivrl
xchg
mov
or
out
or
jb
aaa
fstpt
push
cmp
bound
lahf
push
mov
scas
fistpl
xor
jecxz
jno
es
in
sbb
fisubrs
mov
mov
jae
push
jp
pop
loopne
fs
ss
out
mov
push
outsb
push
repnz
mov
popf
or
mov
mov
gs
fiaddl
leave
fcmovnbe
stos
mov
mov
mov
push
iret
and
gs
sbb
mov
iret
test
int3
xlat
pop
call
or
inc
pushf
jno
pushw
cmpsl
stc
sbb
fcmovnb
and
mov
fisttpl
dec
data16
shl
fistpl
loopne
cmp
sub
xor
call
mov
pusha
cwtl
loop
mov
cmpsl
int3
or
ret
arpl
push
fsubl
test
movsl
xor
icebp
cmc
mov
fldt
pop
adc
movsl
cs
into
popf
orl
push
cli
fwait
aas
cmp
inc
idivb
add
fcomi
push
aas
sub
clc
fs
stos
push
pop
icebp
in
and
push
fwait
cmp
test
leave
jb
inc
js
dec
or
movsl
lock
or
outsl
lcall
or
pop
push
dec
sbb
out
clc
int3
or
jl
les
sub
and
inc
jl
pop
add
xor
rcll
enter
jbe
sub
or
jg
dec
sub
sbb
pop
repnz
adc
and
inc
scas
jnp
es
ja
int3
and
xor
outsb
mov
sbb
dec
pop
push
mov
jo
fnstcw
fistps
outsl
push
pop
pop
pop
arpl
push
inc
xor
jnp
out
push
cmp
mov
and
cld
notl
sti
dec
loop
and
pop
fucomi
fcoml
in
cmp
stos
and
leave
aam
je
jb
call
pop
mov
insl
cmp
inc
stc
loop
call
imul
xlat
sub
pop
test
xchg
hlt
xchg
aaa
data16
sbb
inc
fs
push
push
fldt
pop
mov
lds
push
and
mov
shrl
fistpl
rorb
mov
cmp
mov
pand
pop
mov
cmp
inc
dec
fsubr
xor
out
leave
lcall
jl
jp
inc
fildl
adc
cmpsb
fisttpl
dec
jo
loop
push
divb
jb
out
neg
arpl
sbb
call
and
arpl
mov
das
loop
xor
inc
notl
ja
lods
sub
test
cmpsl
hlt
loopne
xor
sbb
push
orl
jbe
loope
bound
out
xorl
sbb
jo
pop
popf
scas
lcall
ja
stos
sub
sub
add
out
lods
es
clc
cs
cmp
lea
scas
inc
lcall
lods
push
imul
stos
mov
xor
ja
inc
inc
cli
aas
inc
lds
js
or
jbe
adc
or
cmp
xchg
lds
xchg
or
outsl
lret
push
fcompl
inc
dec
dec
clc
lcall
cld
or
and
xor
sub
inc
xor
mov
cmp
xlat
jb
sbb
push
xchg
in
fwait
test
in
sbb
jmp
xchg
pop
popf
stos
rcrl
lret
fdivrl
div
dec
movsl
int3
lock
fwait
inc
push
sar
repnz
iret
or
lock
lcall
cs
stos
and
lcall
ret
cmc
cmp
scas
cli
in
cmp
pop
sbb
loope
push
adc
add
pop
dec
mov
in
inc
ret
iret
jae
imul
andb
outsb
dec
pop
rorl
stc
sbb
jle
shll
xchg
rcrb
stos
popa
divl
das
sbb
jmp
xchg
ljmp
adc
adc
jns
cmc
fistl
jb
dec
outsl
jne
xchg
fisttpll
fadds
push
fwait
pop
arpl
hlt
and
adc
or
stc
js
arpl
lcall
out
movsb
inc
fcomps
cs
jecxz
add
insb
and
out
into
lea
ret
sti
jnp
push
fsubl
lock
pop
daa
jmp
rcr
call
xlat
dec
aas
mov
stc
pop
dec
sbb
int
aaa
in
imul
and
fldt
dec
push
test
mov
lret
cmpsl
ret
sbbb
fucomp
lds
pushf
roll
cmp
jecxz
in
jl
adc
lods
loope
aas
lea
mov
mov
test
xchg
clc
mov
fistpl
les
sahf
fisttpll
stc
push
xchg
or
add
pushf
loop
loopne
dec
sbb
mov
jge
add
pop
fcomi
dec
inc
adc
jo
cli
xchg
test
xchg
sbb
dec
std
rolb
sbbb
adc
cmp
cmc
fisttpl
ljmp
clc
pop
sub
faddl
popf
ficompl
fidivs
and
ret
out
call
adc
gs
mov
js
mov
cwtl
dec
movsb
xchg
imul
dec
enter
cld
mov
lods
outsb
jg
xchg
lret
leave
nop
insl
sub
fisubl
popf
jle
fldt
sarl
dec
lds
int
or
mov
ret
jg
rcl
leave
add
xchg
fildl
add
mov
into
fnstcw
add
xchg
push
dec
gs
and
and
inc
cmp
pop
xor
fstpt
pusha
loop
hlt
call
outsb
in
or
repz
mov
jmp
ret
aaa
call
mull
cmp
fisttpl
inc
scas
fs
sub
fucomp
xchg
push
shr
out
lret
xchg
movsb
sarb
xorb
and
and
fistl
in
aad
stc
inc
fcmovnbe
sbb
mov
adc
push
pop
scas
es
push
pop
out
dec
mov
test
fildll
push
xchg
cmp
cmp
push
push
jo
cmp
pop
decb
dec
shrl
jnp
addr16
xchg
fimull
nop
adc
xorl
jp
push
xlat
lock
ret
pop
int3
mov
std
xor
jecxz
aad
dec
push
adc
inc
ljmp
ja
inc
lock
orb
ljmp
fs
sbb
fwait
incl
lahf
sub
mov
ljmp
sbb
mov
adc
cmp
and
mov
es
cs
push
outsb
int
js
sub
mov
stc
dec
rcrl
jb
outsb
pop
js
add
or
fldcw
mov
xchg
loop
push
arpl
push
daa
mov
loop
lods
iret
in
xor
aas
lahf
enter
stos
push
mov
lds
das
lcall
lock
jecxz
pop
cmc
int
inc
fndisi(8087
pop
cmp
mov
lahf
cli
xchg
loopne
popf
pop
out
or
aam
mov
enter
mov
stos
fbld
sbb
xlat
push
and
xchg
mov
stos
ljmp
add
dec
sub
fcomi
lahf
lret
xchg
imul
jbe
or
push
and
xchg
or
push
rcr
and
mov
pop
aam
fisttpll
or
add
mov
sub
push
clc
add
pop
scas
lock
lods
fcmovne
pop
sbb
pop
andl
dec
ljmp
in
sub
xlat
int3
fcmovb
dec
popf
iret
sub
adc
sbb
in
jecxz
dec
mov
and
lock
fmuls
sub
jg
outsb
mov
pop
popf
call
cltd
cmp
or
rorb
frstor
fsubl
arpl
aas
into
fcmovbe
lret
in
orb
pop
enter
inc
and
pushf
fildl
mov
xchg
jns
shll
cmp
inc
sub
call
mov
out
inc
inc
xchg
mov
rcrb
jle
mov
mov
cs
push
dec
test
js
push
pop
fmull
inc
xlat
adc
jno
xor
mov
pusha
xchg
test
fiaddl
add
ljmp
pop
or
sarb
dec
lock
leave
sbb
adc
xor
fldt
in
jne
sbb
jae
xor
js
negb
mov
fildll
or
inc
cmpb
dec
or
sbb
cmp
bound
xlat
movsb
adc
jae
and
jle
push
pop
and
mov
mov
test
or
mov
sub
sub
xchg
push
pop
lock
sbb
adc
mov
add
mov
sbb
mov
aam
repnz
inc
scas
fucomi
out
mov
xor
adc
and
fcomi
movsl
cmp
or
in
add
fisttpl
lods
xor
in
inc
scas
sbb
aas
cmp
cwtl
push
and
jmp
fistl
repnz
sub
add
dec
fcomi
mov
xchg
or
fnstsw
mov
xor
mov
mov
sbb
jnp
ret
repz
fstpt
rorl
push
dec
fisttpll
decb
jne
aas
cmp
arpl
xor
xchg
push
out
fcomps
pop
and
push
jo
jne
cmp
int3
pop
fildl
cmp
push
ljmp
leave
pop
cmp
jle
inc
out
sti
cmpsl
mov
add
call
dec
mov
mov
xchg
aaa
in
mov
dec
fldt
xchg
fmuls
pop
mov
daa
mov
jne
fistpl
imul
push
fistl
fcmovnu
and
test
cli
scas
pusha
hlt
movsl
fildl
shrl
xchg
jbe
arpl
icebp
aam
fcmovne
mov
fs
mov
sub
repz
imul
mov
jno
sub
lds
jge
stc
fdiv
mov
cmp
adc
loopne
mov
mov
fldt
xchg
inc
cmpsl
sub
lret
jb
sbb
push
inc
iret
sbb
xor
pop
mov
das
into
loop
imulb
cmp
xor
fucom
or
repz
int3
inc
leave
jp
mov
adc
pusha
bound
jnp
lcall
fisttpl
pop
xor
push
mov
fsts
mov
cmp
xchg
mov
fwait
or
cmp
stos
pusha
jo
mov
cmp
push
rcl
ret
or
subb
dec
xchg
cmp
push
or
or
dec
cmp
outsb
inc
aaa
mov
fcmovnu
leave
add
mov
stos
iret
or
pop
xor
adc
xchg
mov
or
pop
ds
aam
add
repnz
push
int3
cmp
jo
mov
ss
daa
xor
mov
sbb
iret
cmp
add
pop
enter
out
mov
or
sbb
es
lcall
ds
insb
cli
icebp
mov
cmp
jnp
xlat
push
push
loope
adc
daa
pop
sub
into
vzeroall
test
fcomps
lret
loopne
adc
push
cmp
test
js
imul
mov
xchg
inc
or
ret
jae
icebp
repz
stos
or
adc
test
in
and
inc
cwtl
in
xchg
in
loopne
mov
lret
jp
into
xchg
stos
pusha
jmp
adcb
and
cmpl
lcall
push
push
icebp
push
xchg
out
ljmp
cs
idivb
lock
test
push
xlat
add
dec
stos
fbstp
xor
inc
push
aaa
xor
xchg
ret
jg
lods
lret
repz
mov
insl
repnz
mov
xchg
mov
jp
aas
cmp
leave
cwtl
arpl
mov
leave
add
lods
aad
loope
cli
xor
daa
mov
xchg
flds
clc
inc
call
mov
aaa
cvtps2pd
es
lcall
mov
subb
xchg
adc
shll
jmp
cmpl
push
mov
notl
lahf
fidivl
sbb
mov
ficoml
fistpll
cli
lcall
mov
jns
fwait
mov
fistpl
pop
int
inc
insl
jnp
and
fucom
mov
fstps
push
stc
loopne
shrl
gs
aaa
dec
mov
fldt
adc
sub
fistl
cmpsb
and
inc
push
fucomi
out
movsb
testl
pop
cs
iret
fldt
push
aaa
daa
sub
jmp
sub
mov
mov
scas
in
in
fdivrs
adc
mov
sahf
stos
push
pop
push
in
repz
cmc
fstl
jl
pop
pop
inc
mov
enter
rcrb
or
data16
jns
mov
test
mov
mov
adc
mov
call
iret
adcb
fildl
repnz
sub
fistpl
ficoml
pop
fstpt
dec
sbb
out
or
push
jmp
mov
pop
iret
ficompl
pop
pop
into
loopne
sub
lea
jnp
xchg
mov
mov
rcr
cmp
dec
push
sub
jp
push
scas
push
fucomi
jo
mov
cmp
xor
ss
das
fldt
sbb
inc
loop
or
lcall
lahf
repz
jb
pop
scas
in
mov
inc
and
sbbb
push
push
mov
fildl
sbb
stos
fcmovnu
xchg
pop
dec
sub
mov
xor
clc
jg
test
sar
jne
adc
xor
andl
sti
ficompl
inc
nop
lahf
movsl
loopne
in
idivl
dec
mov
lods
dec
scas
add
jmp
enter
dec
add
xchg
pop
jle
adc
jae
aas
jnp
fldt
out
popl
jg
pop
and
pop
sbb
stos
xchg
mov
das
in
jbe
int
pop
pop
std
mov
mov
sub
jbe
lret
lahf
and
push
outsb
imul
xor
jno
add
fnsetpm(287
mov
or
xlat
mov
fs
rcll
or
mov
pop
add
sbb
fistpl
and
fistpl
adc
fdiv
mov
call
out
adc
xor
filds
pop
mov
pop
xchg
and
sbb
pop
mov
push
popf
or
or
notb
inc
jle
ja
fiaddl
fists
jge
xchg
fcmovne
xlat
jecxz
leave
fisttpl
jp
stos
outsb
loop
dec
dec
xor
div
scas
pop
shrl
imul
shlb
ss
cld
stos
leave
mov
repnz
ficoml
mov
aas
mov
cmpsl
jl
jns
or
mov
jb
fstpl
outsb
cmp
dec
push
lret
add
fildl
cltd
jo
adc
lods
mov
jge
xchg
mov
fistl
mov
sub
sar
loope
cmpsl
fldt
jle
mov
sahf
sbb
pop
jge
sti
mov
fcmovnb
mov
rorb
iret
xchg
sahf
sbb
push
mov
jmp
fisttpl
sub
outsb
inc
fucomp
inc
add
sub
ret
mov
mov
add
fimull
or
inc
aas
cld
negb
mov
loopne
mov
fimull
jp
testb
fstpt
nop
cli
lods
cld
push
scas
fisttpl
out
test
loopne
add
sbb
and
xchg
fimull
adc
daa
cmp
jmp
fimuls
mov
pop
lock
lods
sbb
insl
loopne
jg
stos
inc
lods
popf
sbb
test
jo
out
arpl
fldt
jp
aam
inc
and
stc
in
cs
xor
and
pop
add
sti
sbb
into
dec
or
mov
jmp
fldenv
xchg
push
imul
mov
cwtl
enter
push
lret
mov
fucom
test
push
pop
pushf
jmp
dec
dec
sub
clc
lea
and
adc
fldt
add
scas
push
sub
xor
sbb
jmp
pusha
sahf
sub
stos
or
das
movsl
cltd
pop
jp
jp
es
pusha
std
fisttpl
or
push
ss
mov
cmp
fucomi
mov
and
xchg
lahf
push
fcmovnbe
leave
popf
pop
lods
sbb
ds
jg
ja
fildl
xchg
inc
idiv
xchg
or
xchg
loop
dec
shl
pushf
aam
pop
push
test
sbb
pand
add
fldt
fld
addb
in
fistl
fistpl
push
mov
fisttpl
add
or
mov
pushf
xorb
mov
sub
pushf
fucomi
and
je
mov
test
cmp
xchg
and
dec
cwtl
xchg
mov
mov
fnstsw
lcall
dec
jb
popf
mov
faddp
ja
cmpsl
push
fistpl
imul
adc
insb
pop
dec
cmp
data16
fistpl
test
roll
in
leave
cmp
stos
out
pop
js
ret
call
cld
sbb
ss
mov
imul
cmpsl
inc
movl
mov
pop
sahf
daa
call
rcrl
or
mov
leave
pop
es
out
jb
test
mov
dec
cmp
ret
gs
mov
fstpt
dec
inc
sbb
inc
jp
pop
mov
mov
cmp
test
out
dec
cmp
stos
pop
push
imul
or
inc
add
imul
dec
mov
and
cld
mov
adc
popa
xor
fdivrs
mov
fistl
repnz
jmp
call
fldt
inc
jno
jle
adc
dec
shlb
pop
push
xor
mov
push
scas
imul
mov
lock
xchg
mov
fsubrs
es
cmp
jnp
pop
fucomi
orl
fldt
test
sub
adc
sarl
cmpsb
mov
xor
icebp
sbb
fistpl
push
clc
cmp
popa
xor
mov
ret
call
test
ss
dec
sub
dec
pop
pop
aam
cmp
add
in
mull
fstpt
pushf
jo
fstpt
mov
fcmovnb
sbbl
outsb
inc
sub
cmp
dec
xchg
or
sub
pop
jmp
jge
insb
xor
insl
mov
das
sti
fisttpl
inc
xor
push
add
jecxz
and
cmpsb
mov
sub
mov
fucomi
rol
mov
shll
popf
icebp
rorb
repz
jge
inc
lcall
inc
push
nop
jmp
fdivrl
sbb
out
repz
lahf
imul
adc
not
add
or
lcall
fstpt
lcall
popa
cmp
xor
scas
fistl
add
push
cmc
cmp
add
inc
mov
popa
sub
sbb
xchg
xchg
sti
adc
lods
jge
dec
jae
jnp
push
cmpl
insb
movsl
cmp
cmp
jae
mov
cmp
push
lcall
fnstsw
fwait
inc
pop
fildl
clc
jnp
dec
ret
inc
jecxz
push
and
pop
inc
push
js
std
mov
lret
xchg
pop
rclb
mov
fstpl
adc
sub
fldt
lret
ds
shrb
add
or
lret
mov
add
cmp
fcom
jge
inc
or
ficompl
clc
cmp
call
hlt
lcall
fstpt
inc
push
ljmp
adc
ret
hlt
fucomip
cmp
push
and
cmp
iret
movsl
inc
jnp
insb
cld
xchg
mov
and
mov
fucomi
push
add
inc
test
notl
pop
dec
push
dec
enter
jl
xor
fcmovnu
jecxz
imul
lea
ffree
icebp
ja
in
mov
popa
popf
add
sub
int3
xor
lret
lret
sub
cmp
pop
push
mov
and
scas
dec
mov
dec
sub
jle
fidivs
xchg
xchg
push
jg
ss
ljmp
sbb
test
call
jge
cmp
pop
lea
frstor
inc
push
cmp
imul
cli
sbb
clc
push
addr16
lods
ret
xor
movl
lahf
loopne
and
push
mov
sbb
stos
fistl
jnp
mov
mov
sub
add
daa
dec
std
call
adc
push
mov
mov
mul
adc
fs
sti
sbb
push
or
mov
jb
loopne
int
pop
jge
iret
dec
mov
add
add
sbbb
ds
adc
xor
ret
enter
fidivl
mov
dec
and
fcmovnbe
cmp
rcrb
stos
dec
imul
jmp
lcall
cld
cltd
mov
test
mov
xchg
movsl
mov
xchg
nop
xchg
xlat
xorl
add
jp
in
addb
cmp
in
imul
cmc
pop
xchg
dec
mov
icebp
bound
and
lcall
mov
cmp
cli
lret
jne
inc
call
loop
cmp
xor
lret
dec
lods
rorl
fistps
and
hlt
test
imul
add
mov
fucomip
cmpsb
mov
xor
xchg
loopne
int3
xor
sbb
add
fwait
xchg
xchg
jno
jbe
pop
sbb
test
shlb
and
cmc
je
loop
inc
lahf
xchg
sbb
ja
movsl
test
std
add
stos
pop
cs
jae
stos
orb
xor
icebp
push
int
in
repnz
sub
pop
loop
pop
fsubr
stos
mov
lods
mov
ds
dec
sbb
dec
aas
sbb
fimuls
addl
notb
or
mov
and
lods
add
sbb
pop
mov
ss
cmp
lods
in
xchg
int3
jnp
shll
lcall
cmpsl
and
push
bnd
lods
into
sbb
pop
sub
push
and
fs
adc
push
mov
mov
mov
jecxz
stos
scas
sub
lods
xorl
adc
in
sub
loopne
clc
fisubs
loope
ret
subb
mov
sti
mov
cwtl
dec
lds
imulb
sub
movsl
push
pop
jecxz
xor
push
leave
sbb
ret
dec
push
outsb
das
insl
xchg
stos
fucomi
lds
sbb
stc
fisttpl
pushf
icebp
cld
pop
inc
add
dec
cltd
test
mov
add
fnsetpm(287
cwtl
and
xchg
mov
fst
pandn
outsl
lret
push
aad
jge
push
fisttpl
das
arpl
fwait
shlb
notb
mov
sub
inc
in
cmp
clc
lcall
subb
add
dec
adc
test
push
mov
mov
fbstp
enter
outsb
fwait
jmp
push
add
lea
insb
or
adc
movsb
mov
jl
sbb
push
iret
lods
cmc
cmpsl
fcmovnbe
mov
mov
inc
dec
mov
outsl
pop
mov
jmp
loop
sbb
nop
push
insb
mov
xchg
mov
into
inc
sub
imul
fisttpl
rcrl
stos
jle
shll
fisttpl
xor
xchg
mov
in
mov
mov
hlt
loopne
jae
out
mov
mov
fistpl
std
in
dec
mov
cmovbe
mov
cs
movsb
rorb
and
cmp
sar
dec
cmp
add
loope
enter
cwtl
add
jae
addl
xchg
fmuls
push
ja
cmp
mov
out
cmp
dec
enter
dec
pop
fbstp
in
adc
cmp
xchg
inc
pushf
icebp
push
jb
stos
hlt
daa
jo
fwait
inc
jne
aad
out
fcompl
push
test
negl
adc
pop
outsb
ja
cmp
or
pop
bound
pop
stc
jbe
add
cmpsl
inc
push
mov
addr16
cmp
fadd
insl
iret
ljmp
jmp
jbe
fucomi
sbb
pop
adc
adc
sub
dec
fistpl
lret
scas
mov
int3
push
fildll
mov
ret
out
rcrb
or
adc
sub
mov
jmp
xchg
mov
movsb
cwtl
decl
fdivs
inc
lret
xchg
clc
sbb
lcall
rcrl
ret
inc
mov
sbb
and
adc
jp
push
clc
jns
out
ficomps
fldcw
xor
shl
sub
push
lcall
aad
fwait
pop
out
mov
mov
addr16
mov
shlb
xchg
cltd
jmp
mov
mov
cld
sbb
sti
fisttpl
sub
call
test
out
jmp
fisttpl
imul
cmp
or
popf
mov
fisubrl
lahf
mov
push
push
push
fcmovnb
mov
out
pop
mov
fmuls
cmp
and
inc
rcll
sbb
cmp
pop
xorb
rorb
lods
fcmovu
push
xor
ret
mov
sbb
aad
mov
lods
leave
push
ss
or
fstpt
mov
roll
std
int
insb
aam
enter
out
outsl
jg
jnp
aas
pop
repnz
iret
loop
popa
cmp
inc
dec
xor
call
mov
mov
popf
mov
das
pop
dec
jp
loopne
push
pop
adc
hlt
fldt
sbb
stos
lret
out
cmpsb
iret
fildl
push
mov
xchg
sbb
xor
cltd
adc
fisubs
imul
pushf
mov
outsb
add
push
cmpsb
std
jmp
sbbl
mov
icebp
dec
sub
decl
in
call
dec
mov
push
xor
add
xchg
rol
jp
lock
sbb
mov
pop
daa
xor
cltd
icebp
dec
pop
clts
jg
insb
or
inc
xlat
adc
lcall
or
mov
lret
subb
push
xor
outsb
int3
and
clc
iret
fstpt
fcmovb
jmp
enter
pop
jbe
xor
fistpl
push
pop
fildl
mov
and
fisttpll
jecxz
pop
loop
fwait
sbb
mov
shlb
je
xchg
jbe
fistpl
imulb
test
cmp
push
stos
sbb
mov
sbb
inc
push
push
fstp
xchg
out
xor
jnp
push
fisttpl
pop
jo
mov
adc
cltd
or
and
mov
mov
imul
subl
scas
jnp
nop
fstpt
ds
call
outsb
cmp
mov
imul
pop
jae
inc
xchg
fists
xchg
mov
add
call
lcall
fldt
pop
xor
jecxz
mov
cmp
in
icebp
fnsave
xchg
or
xorb
jecxz
fiaddl
xchg
jg
sub
xlat
nop
adc
pop
push
push
je
sbb
or
mov
clc
outsl
jbe
cmp
test
xchg
sti
xchg
xor
sub
dec
jno
sub
fldt
cwtl
bnd
xlat
ljmp
pop
sub
iret
add
loopne,pn
jno
inc
pop
std
push
dec
ret
fstpl
clc
ljmp
popf
dec
mov
bound
pop
jg
das
enter
pop
lds
mov
addr16
dec
das
push
dec
cmc
lcall
mov
fcmovnu
and
xchg
adc
cmp
pop
popf
sbb
xor
aad
fidivrl
xor
or
jne
ss
fwait
stos
mov
mov
jp
js
fstp
les
negb
adc
and
fwait
sbb
pop
push
or
cld
sbb
add
sahf
and
inc
xor
add
mov
fisttpl
into
push
notb
movzbl
ffreep
ja
aad
fstpt
sbb
cmpsl
xor
test
gs
enter
jb
cmp
sub
sbb
testl
movsl
cmp
in
pusha
sbb
lods
pop
pop
stc
repnz
push
shlb
xor
lea
cmp
push
mov
adc
sub
int
cmpsb
mov
inc
jne
xchg
pop
push
rcrb
lock
push
daa
mov
das
ficoms
ficoml
movsl
fstpt
cmpsw
dec
sbb
aaa
fisttpll
fwait
sub
push
insl
lcall
adc
pop
bound
enter
out
es
xchg
or
faddl
add
movsb
rorl
push
fildl
jge
jo
cld
aam
fcmovnu
ljmp
fstpt
push
mov
clc
mov
push
jge
jb
in
hlt
jno
cltd
fstpt
push
sub
fstpt
ljmp
daa
cli
jns
xchg
fwait
mov
sbb
test
cli
inc
outsl
in
in
stos
aas
push
fstpt
jb
xchg
call
js
xchg
add
adc
call
daa
sbb
add
inc
jae
push
sub
sub
fcmovnu
mov
add
push
fadd
test
lret
and
scas
pop
lcall
insl
popa
mov
pop
push
adc
xchg
loopne
movsb
xlat
outsb
dec
push
sbb
shl
xchg
xchg
je
fstpt
aas
dec
dec
out
mov
push
popf
lahf
jae
push
jp
fucomi
repz
sbb
cmpsl
mov
gs
push
lods
cmpsb
fistl
les
mov
enter
xchg
fucom
idiv
and
and
xchg
imul
movsl
icebp
stos
pop
sub
pop
les
repz
faddp
adc
cmp
adc
negb
or
mov
popa
mov
jbe
xor
jle
jo
adc
lahf
dec
das
mov
loop
pop
into
add
ljmp
clc
pop
mov
xlat
xchg
jae
in
loope
fmul
stos
pop
mov
add
sbb
in
pop
cmp
std
fistpl
out
scas
in
jnp
push
jbe
fiaddl
add
cmp
out
movl
inc
mov
mov
push
inc
xchg
lock
inc
insb
fisttpl
test
cli
adc
fildl
add
repz
out
or
sub
call
fcmovne
push
aas
mov
dec
pop
add
imul
push
mov
xchg
movsb
fst
and
mov
sbb
loopne
xor
or
adc
rep
inc
sbb
mov
loopne
jl
xor
xchg
cmp
loopne
test
shrl
loopne
repnz
into
jo
fstpt
dec
sub
mov
push
adc
ret
sti
in
cmp
lret
fsubs
lahf
fldt
mov
and
pop
test
jl
cs
movb
jecxz
push
or
dec
mov
xchg
cmc
jmp
lcall
xchg
dec
pop
jp
jge
shlb
rorl
mov
clc
fstl
lret
and
call
cs
jl
and
jp
stos
sahf
dec
push
push
mov
jecxz
cmp
and
xlat
test
movsb
call
sti
xchg
jl
lea
fsubr
pop
mov
aam
andl
jle
loopne
iret
push
in
lods
mov
jl
xchg
pop
stos
and
push
dec
and
jb
lock
sbb
xchg
fcmovne
xchg
imul
xor
jbe
adc
mov
inc
test
jns
gs
dec
and
jecxz
popf
pop
adc
and
adc
js
xchg
jg
fisttps
pop
inc
in
fwait
lods
mov
gs
out
fistpl
lock
mov
add
imull
mov
fbld
cmp
mov
mov
sbb
add
mov
fildll
loope
push
mov
insl
inc
les
fsubl
cs
fmuls
or
incl
outsl
ljmp
mov
lret
add
xor
pop
rcr
fsubr
clc
jecxz
jl
lcall
adc
xchg
mov
jecxz
clc
push
test
out
fyl2xp1
adc
jbe
dec
gs
sti
cli
push
call
adc
dec
lds
lods
mov
addr16
jno
pop
popa
jecxz
imul
cmp
or
mov
lods
bound
ss
hlt
icebp
fcoms
stos
adc
in
stos
ljmp
jo
push
rcr
je
fcmovb
add
stos
in
sub
loop
call
dec
and
bound
lods
into
data16
stos
push
nop
icebp
aas
mov
int
add
sbb
adc
xchg
icebp
notb
add
jne
test
xor
lock
push
test
aam
xor
in
addr16
push
jbe
pop
jne
sbb
stos
aaa
pusha
inc
mov
lret
fstpl
pushf
aad
xchg
test
push
loop
jl
jmp
xor
cmp
dec
call
sahf
movsl
xchg
pop
dec
dec
push
loopne
sti
xlat
fbstp
roll
xchg
push
and
mov
xchg
call
movsb
push
clc
cmp
mov
inc
sbbl
or
in
fstpt
sbb
xchg
dec
cwtl
xchg
push
insl
data16
cmp
mov
and
call
and
stos
or
cmp
dec
inc
adc
fistl
jbe
neg
cmp
ficoml
movsl
ss
fucomi
rorl
mov
fcoml
xor
jp
scas
mov
pop
adc
sub
pop
fisttpl
in
fstps
fisttpl
scas
je
fstpt
push
xor
fisttpl
push
jge
pop
dec
fildl
and
inc
mov
movsb
pusha
mov
fldt
mov
push
cmc
mov
xor
jp
loopne
adc
cld
clc
inc
or
rorb
sub
test
test
mov
fistl
sti
pop
cmp
or
mov
fists
xchg
adc
inc
xor
ds
bound
lahf
push
fildl
hlt
sbb
xchg
push
rcr
cmpl
pop
inc
les
mov
push
sahf
sbb
lcall
mov
fcomp
loopne
or
stc
push
mov
xor
push
aas
cwtl
fstpt
add
mov
fisubl
aaa
xchg
movsb
push
pusha
xor
push
sbb
das
arpl
jg
or
xchg
pop
sub
push
faddp
rcr
loope
arpl
sbb
dec
fistl
sbbb
sbb
int3
cmp
xchg
mov
fisttpl
aam
mov
jg
stos
lods
es
pop
adc
pop
seta
pop
call
out
mov
loopne
repz
outsl
pusha
sub
inc
out
xor
xchg
fwait
pop
iret
stos
push
jl
and
outsl
lods
rcrl
xchg
push
imul
xchg
stc
sti
rcl
out
jns
or
dec
jp
je
sbbb
pop
fstpt
xchg
shrl
les
fmuls
add
movsb
cld
inc
js
into
mov
loop
pop
cmp
lds
mov
add
sbb
jmp
sub
pop
in
mov
popf
xchg
ret
outsb
mov
pop
adc
fstpt
mov
in
inc
test
stos
icebp
loope
fistpl
pop
mov
fnclex
insb
mov
lods
cmp
dec
cmp
or
aad
adc
push
mov
xchg
pop
test
fildl
cmp
mov
or
inc
fstpt
divb
je
cmp
push
push
cs
mov
dec
add
mov
cmp
cmp
cmp
adc
xchg
test
frstpm(287
ljmp
jbe
push
pop
cmp
std
lret
hlt
call
jno
xchg
popa
dec
fnstenv
cmp
bound
test
mov
into
and
jb
sub
paddb
cmpsl
sub
adc
popa
pop
jmp
mov
sub
pop
mov
xor
repz
inc
pop
pop
je
out
inc
sbb
adc
mov
sbbl
fistpl
push
lock
cli
cmp
mov
push
loope
lods
dec
popf
nop
xor
repnz
imul
jns
push
clc
ja
pushf
fildl
das
jl
add
lock
test
gs
add
dec
xor
sbb
add
in
fildl
lea
inc
add
add
adc
jmp
jns
add
rcr
mov
add
lahf
inc
lret
mov
fnclex
add
mov
jge
mov
mov
insl
icebp
mov
push
inc
mov
mov
sahf
mov
fcmovnu
pop
lahf
nop
and
inc
fisttpl
or
sub
push
lods
fildl
rcll
fldt
mov
imul
pop
and
inc
aad
pop
mov
cmp
cmp
icebp
xchg
into
and
das
and
mov
or
cmc
xlat
or
sti
scas
mov
adc
ret
sub
stos
add
out
add
dec
fistps
es
push
push
fwait
xchg
or
cli
negb
sbb
push
mov
jbe
sub
ss
in
mov
das
dec
and
shl
ficomps
sbb
fcmove
int
orl
icebp
daa
clc
jp
or
popf
sub
jne
mov
push
fnsave
mov
xchg
sbb
repnz
push
or
fneni(8087
push
fcmove
push
mov
fstpt
sub
je
jnp
ss
jl
fs
mov
bt
cwtl
mov
mov
sbb
cmpsb
insl
mov
pushf
lods
test
or
outsb
mov
divb
sti
sub
call
push
pusha
loop
ficompl
jnp
inc
popf
incb
dec
jl
jae
cmp
neg
mov
xor
stos
lahf
adc
out
mov
cld
fistpll
insb
aas
jecxz
adc
imul
fsubrs
in
cld
inc
jl
bound
sbb
fistl
sti
fistpl
push
inc
int
js
rclb
fildl
test
xchg
fcmovnbe
cld
push
jne
mov
std
out
jbe
push
fstpt
xor
gs
or
out
mov
cmp
nop
push
mov
add
push
push
fcomi
mov
outsb
nop
fistl
sub
dec
pop
sbb
ljmp
push
imul
mov
fnclex
lret
loope
aad
clc
imul
xchg
outsb
inc
cmp
pop
jmp
xchg
fucomi
or
push
loopne
jle
scas
xlat
in
add
fstpt
in
cwtl
add
hlt
es
sbb
add
jmp
mov
hlt
xchg
and
iret
int
sarl
fisubl
testb
or
xchg
pusha
dec
popa
fistpl
pop
sub
ds
adc
andb
lods
enter
rorl
or
xor
lds
pand
pop
loop
xor
mov
je
ficompl
and
cld
rorl
lock
in
xor
subb
jno
loopne
lcall
push
add
adc
xorl
cs
fst
xor
test
sbb
les
xor
mov
inc
fidivrl
sbb
cmp
aaa
repnz
mov
es
bound
fistl
cmc
cmp
dec
std
cli
sbb
rcr
xchg
lods
or
jne
loopne
mov
or
imul
jl
call
dec
pop
fistpl
cwtl
call
je
scas
subl
mov
data16
ja
repz
dec
cli
test
fldcw
int3
pop
or
ret
push
clc
sub
in
adc
xor
sbb
lret
in
aam
hlt
push
loopne
push
add
loope
ss
jmp
xor
cmpsl
repnz
rcrl
cli
sbb
push
filds
call
pop
push
xor
push
clc
and
cmp
pop
inc
scas
lock
mov
mov
iret
sbb
imul
addr16
push
rcr
sbb
pop
pop
fneni(8087
sbb
adc
mov
and
cmc
xchg
int3
mov
arpl
stos
pop
nop
cli
dec
fstpt
dec
mov
call
out
negl
icebp
fnclex
ja
xchg
test
jne
fldt
mov
dec
fwait
and
lds
mov
das
int3
sbb
mov
std
or
fistpl
jo
push
and
lret
fstpt
xchg
movsb
int3
fildl
sub
dec
ljmp
xchg
push
ret
jg
stc
popf
lea
mov
fcomp
sbbl
out
push
fstpt
lock
testl
cld
call
dec
jae
fstl
sbb
or
adc
clc
mov
jb
loopne
mov
dec
lea
fldt
fcomps
fisubrs
in
mov
ficoml
or
mov
xchg
rcrl
jo
stc
push
inc
jns
adc
or
fsubrs
cmpsb
or
push
sbb
stos
pop
jb
sbb
ss
movsb
or
dec
mov
mov
int3
call
fsubl
pop
xchg
hlt
lret
fistl
nop
adc
notb
je
sub
pop
fcomi
loop
cmpsl
xchg
jg
leave
stos
mov
lcall
in
or
test
xlat
sub
sub
or
sub
std
xchg
lahf
insb
les
adc
rcll
cmp
and
or
ud1
adc
cmp
xchg
imulb
push
mov
sbb
out
lret
adc
test
test
sub
sahf
in
inc
pinsrw
push
push
jnp
pop
mov
arpl
dec
mov
lea
loopne
fcomi
cmc
dec
ror
fcoms
decb
push
bound
insl
xchg
or
xchg
mov
jmp
mov
imul
sub
pop
jae
jecxz
lods
js
jb
or
sti
mov
ret
je
xchg
int3
fstl
stos
cmp
cli
clc
cmc
inc
lds
and
test
fstpt
ret
mov
fwait
xchg
xchg
sahf
lret
fisttpl
cli
dec
mov
cwtl
jp
les
mov
dec
or
jb
mulb
lahf
adc
xlat
jecxz
lock
divl
call
dec
sbb
pop
outsb
icebp
fcmovnu
sahf
les
or
mov
cld
mov
fistpl
xor
sbb
cmp
xchg
pop
sbb
fcmovne
mov
xchg
or
mov
and
add
jecxz
fwait
jnp
adc
pop
xchg
or
sub
mov
pop
lds
popa
data16
mov
or
pop
inc
sti
rcr
pusha
bound
pop
fistpl
xchg
mov
cltd
sarl
push
sbbb
push
xchg
pop
fnstcw
mov
mov
xchg
int
fcmovnb
mov
mov
test
pop
notb
into
push
mov
mov
pop
fldt
mov
lahf
push
and
cmpsl
mov
negb
pop
cli
es
loopne
fisttpl
rcll
jg
fcmovnu
mov
add
mov
insb
mov
jecxz
push
inc
push
arpl
imul
jne
add
add
and
lock
data16
sbb
fldt
inc
dec
sbb
push
pop
cmp
popf
repz
dec
sbb
aad
push
test
lcall
out
popa
pushf
icebp
xchg
stos
pop
add
push
fcmovne
xor
push
adc
out
fistl
jg
neg
push
sbb
call
fildl
rol
out
loopne
and
stc
push
enter
addr16
aaa
add
fisttpl
push
imul
shlb
jo
fidivrl
or
ficoms
cli
fdivrl
sbb
fstpl
enter
pop
push
dec
sbb
mov
mov
cltd
insb
mov
jle
mulb
stos
out
and
jmp
dec
pop
ss
mov
loope
cmpsl
adc
pop
aad
sti
or
fistpl
inc
fs
aas
ljmp
mov
lods
cwtl
xor
test
add
enter
or
xchg
ret
rolb
enter
daa
sbb
dec
sub
ret
pop
int
stos
pop
cmpsl
lahf
adc
imul
pop
add
sbb
lret
or
or
push
sbb
jo
xor
inc
cmp
int
sbb
push
mov
in
push
fldcw
int
push
push
and
mov
adc
add
pop
fxch
mov
sahf
fistpl
xor
jl
jg
test
or
outsl
sbb
cmp
sub
sbb
mov
mov
into
fidivrl
sbb
loope
daa
push
xchg
clc
inc
push
std
aas
push
cmpsl
test
lds
and
dec
sbb
ret
cwtl
xchg
bound
mov
xchg
or
xor
mov
sti
xchg
ret
int3
aaa
das
add
insb
adc
pop
sub
sub
xor
pop
mov
mov
add
dec
into
adc
sub
bswap
negl
xchg
fcomi
xor
cs
loopne
daa
cmp
push
add
mov
push
cmpsl
cli
mov
pop
fstpt
fs
xor
fldt
adc
fistpl
ret
and
adc
xor
int
inc
inc
xchg
scas
xchg
push
push
xor
inc
adc
clc
mov
pop
cmp
lds
cmpsl
mov
gs
adc
jecxz
pushl
fwait
push
data16
dec
fistpl
adc
mov
push
repnz
fdivl
sub
xchg
fsts
icebp
pop
jo
xchg
mov
fs
and
cmp
sbb
fistpl
movsl
clc
xchg
lods
cmp
popf
adc
popa
cmpsb
clc
push
repz
sbb
sub
push
cld
adc
mov
adc
test
jno
enter
push
lret
push
in
dec
es
push
mov
or
daa
sbb
das
in
pop
test
push
jmp
jge
fs
jne
stos
fldt
pop
flds
out
aad
push
jecxz
mov
ja
cmp
add
fistpl
jg
stos
xor
adc
jmp
sub
test
mov
fimull
and
imul
mov
sbb
ret
int3
dec
loopne
popf
mov
and
cmp
mov
enter
out
push
inc
negl
push
push
dec
sub
add
das
jmp
fisttpl
insb
jno
xchg
mov
dec
push
pop
call
xchg
push
adc
cmp
pop
sub
lods
adc
loopne
stos
xchg
xor
sbb
rcr
dec
lock
fcompl
push
test
imul
jae
je
xchg
fst
mov
pop
mov
sbb
bound
adc
pushf
outsl
fistl
xchg
mov
popa
and
mov
inc
loopne
fisubrs
mov
inc
fildl
shl
shl
xchg
fstpt
cmp
outsl
movsl
inc
dec
scas
inc
pop
fldl
leave
imul
pop
xchg
loope
mov
cmp
scas
daa
fcmovne
push
aaa
sti
xorb
cmpsl
mul
fnsave
pop
mov
mov
psrlq
out
repnz
fisttpl
sbb
mov
lods
jl
mov
repnz
jmp
imul
push
sbb
movsb
pop
and
dec
jmp
mov
or
testl
lahf
xchg
daa
pop
fistl
or
cmp
xchg
xor
popa
aad
cmc
sarb
push
mov
jo
fcompl
cwtl
fisttps
sbb
cld
clc
mov
decl
fcmovne
subl
fcmovnb
scas
dec
aam
jnp
sbb
enter
aas
jp
jae
das
fildl
lcall
out
testl
add
out
fs
leave
fstpt
loop
and
xor
jns
ds
ss
test
negb
rcrb
popf
sub
push
xchg
movsb
fwait
xlat
sbb
mov
cmp
push
mov
inc
icebp
fdivrs
or
das
jno
cld
and
imul
fisttpl
in
xor
roll
pop
mov
inc
pop
jb
mov
mov
dec
fwait
cld
loope
js
inc
es
xchg
pop
fisttpll
jbe
test
sbb
cmp
negl
mov
push
push
daa
push
jp
inc
inc
sub
mov
xor
mov
fsubrs
inc
add
fcmovne
scas
sbb
xchg
jl
mov
dec
repz
fistl
xor
out
lcall
sti
daa
in
sub
sub
cmp
in
test
xchg
fidivrl
inc
imul
fcmovb
mov
daa
cmc
clc
cmp
push
or
stos
fcmovnb
mov
int
xchg
insb
mov
jecxz
in
inc
xchg
stc
cmp
inc
dec
inc
sbb
and
fldt
xor
not
into
cld
add
dec
push
fildl
aaa
dec
xchg
out
mov
dec
add
cld
dec
fildl
jae
std
enter
mov
and
jno
or
sti
cltd
lods
rclb
stc
sbb
ljmp
and
inc
cmpsl
add
fisttpl
mov
out
scas
mov
or
inc
xchg
mov
gs
and
mul
test
jecxz
pop
mov
mov
arpl
jg
lcall
sub
jecxz
cld
iret
aam
pop
movsl
test
mov
sbbl
in
jae
add
stos
icebp
leave
mov
fstl
push
jae
jp
pop
ja
cltd
cld
pop
cmp
sbb
mov
repnz
jbe
add
jno
jne
xor
xor
dec
cmp
add
or
out
loop
dec
pop
xchg
rcrb
mov
mov
outsb
shrl
xchg
inc
sbb
pop
sub
aas
dec
rcr
jg
adc
add
and
jmp
xlat
mov
sub
into
fneni(8087
int
jmp
and
ret
lods
or
or
dec
lret
orb
xor
loopne
imul
lods
arpl
outsb
test
mov
adc
fstpt
xchg
rcrb
das
sub
mov
lret
xchg
push
sub
pop
inc
sarb
sahf
dec
loopne
adc
jne
sub
dec
popf
sbb
sbb
mov
test
add
incl
mov
fistpl
mov
pop
gs
fstpt
pop
insb
clc
in
shll
mov
fisttpl
andl
ss
sub
inc
or
in
fstpl
aaa
mov
xchg
sub
enter
fstpt
cmp
jecxz
mov
pop
mov
cmp
imul
add
xchg
jno
loopne
in
call
out
jg
push
pop
add
cltd
fistl
jae
xor
and
or
loopne
call
stos
push
mov
rcrl
scas
cmpsb
cwtl
xorb
in
pop
dec
ficompl
les
call
add
out
jge
and
sub
scas
push
xchg
sbb
pop
cmc
mov
arpl
mov
call
or
cmpsb
ret
mov
bound
adc
mov
ret
fisttpl
shll
fistl
sbb
jno
and
mov
sbb
addl
cwtl
sub
sahf
mov
xlat
xchg
fcmovne
lds
mov
popf
jae
lcall
push
push
in
lahf
aam
mov
or
dec
loopne
clc
jns
pop
jbe
icebp
les
stos
sti
push
ds
pop
cwtl
push
fldt
sbb
lahf
push
nop
sbb
test
sbb
push
jbe
call
adc
xchg
push
fcmovnbe
fadd
test
mov
aam
in
imul
into
jmp
cmpsl
outsb
push
add
jnp
loop
pop
dec
pop
sbb
fdivs
jo
fldt
outsl
xor
sbb
out
stos
xor
leave
iret
cltd
xchg
fs
or
cmp
bound
daa
and
sbb
mov
cs
xchg
xor
adc
sbb
outsb
jae
enter
xchg
addr16
add
pop
bound
push
inc
dec
stos
arpl
and
lahf
sarb
push
aaa
jecxz
in
dec
fcmovu
clc
sti
gs
mov
test
fsubrl
fldt
sti
lods
cmp
fcomi
inc
adc
fsts
jo
xor
ret
mov
push
lods
idivb
shll
push
or
fsubs
xchg
popa
mov
test
push
sti
ja
in
xchg
push
clc
nop
and
iret
roll
stos
popf
sub
mov
mov
mov
loopne
dec
ret
fidivl
sbb
mov
repz
ss
imul
sbbl
mov
jno
hlt
lret
les
sbb
jmp
in
shrb
lcall
jae
movl
stos
jge
faddl
icebp
decb
adc
mov
jmp
pop
lods
daa
jb
and
das
pusha
rcr
das
jecxz
add
in
into
lods
add
leave
insl
scas
bound
sbb
insl
shrb
dec
leave
pop
cmp
add
outsl
popf
xlat
push
push
lcall
pop
in
cwtl
mov
addr16
ja
stos
test
cmp
sti
in
test
lcall
or
xor
enter
add
cmp
imul
inc
cmp
jp
or
and
icebp
adc
leave
lock
sbb
out
mov
inc
call
shll
lret
jmp
add
push
lret
insl
sbb
cmp
lods
shlb
cmpsb
jmp
notb
std
and
out
cmp
dec
push
aad
enter
dec
in
push
sub
jns
aam
inc
popf
mov
jno
aaa
bnd
inc
fisttpl
imul
mov
into
mov
sahf
mov
dec
xchg
loopne
fcmovnb
decb
push
call
xchg
sub
fcmovnu
sub
aam
add
test
xchg
movsb
mov
pop
test
jnp
adc
fldt
orl
in
popa
add
sub
ret
mov
jb
aad
pop
pop
jae
cs
loopne
pop
sahf
or
imul
fsqrt
fs
mov
leave
pushf
inc
xchg
mov
out
cmpsb
ds
imulb
push
pop
hlt
stos
in
shrl
xor
xchg
pop
int3
sub
icebp
lock
lods
lds
test
jge
push
jo
xor
jmp
and
fists
mov
add
push
push
lcall
test
push
pop
push
stos
fisttps
jb
mov
jmp
lock
pop
adc
cld
xor
lret
adc
jnp
test
es
cwtl
adc
out
sti
je
add
add
call
popa
pop
cmp
xchg
jecxz
daa
xor
repnz
inc
pop
mov
or
fistpl
lods
jmp
mov
jmp
push
stos
fstpt
js
xchg
andl
aas
inc
call
notb
add
jge
push
sbb
cmp
in
adc
mov
jae
dec
addr16
inc
test
fstpt
lock
aaa
push
ficompl
jbe
mulb
push
sub
icebp
hlt
call
ret
rcr
jne
sbb
mov
push
pop
cmp
xchg
jp
fcmovnb
out
mov
clc
dec
or
lcall
popa
test
in
and
ret
dec
jmp
pop
loopne
mov
sbb
mov
fldt
lcall
lahf
sbb
inc
dec
or
mov
sub
aaa
fldt
add
enter
imull
jle
repz
and
fimuls
cli
data16
mov
sub
std
cs
roll
fnsetpm(287
flds
fcmovu
daa
sub
push
xchg
add
fcmovnb
lcall
ret
adc
cmove
or
and
or
mov
mov
imul
pusha
pop
push
mov
mov
xchg
sbb
arpl
test
cmp
cmpsl
cmp
icebp
int
pop
cmp
shr
arpl
fwait
pusha
pavgb
pop
inc
mov
sbb
push
jae
std
sbb
insb
fadds
popa
cmp
pop
xchg
dec
adc
jp
mov
push
sbb
lcall
jnp
or
call
xor
sti
inc
stos
xchg
int3
pop
jo
mov
xlat
jg
and
mov
roll
push
pop
push
aas
mov
jecxz
pop
stc
mov
or
fcmovnbe
fadd
loope
or
mov
or
idivb
int
ljmp
push
lock
aaa
or
stos
es
pop
icebp
out
out
dec
add
cmp
stos
test
stos
xor
push
xchg
out
icebp
sbb
aam
daa
pop
mov
mov
iret
arpl
jbe
cmp
pop
xchg
sbb
mov
cmc
inc
in
cmpsl
pop
bound
mov
shrb
lret
repnz
pop
push
or
jne
add
sub
add
cli
xor
mov
in
jl
ret
gs
fisubrs
push
sub
imul
and
sbb
or
imul
xor
out
jae
inc
push
repnz
fsubrs
jle
cltd
or
insb
jle
mov
cmp
dec
xor
xor
sbb
and
mov
stos
cs
dec
fbstp
sti
mov
fwait
clc
and
pop
sub
shl
in
int
mov
and
iret
push
lret
inc
ljmp
leave
push
mov
mov
add
fcmovbe
jle
mov
adc
in
aad
out
movsl
rcr
imul
mov
jecxz
add
je
mov
pop
dec
dec
mov
and
loopne
bound
or
loop
addr16
add
lods
sub
inc
adc
cltd
push
dec
decl
loope
sbb
stos
jno
aas
xchg
sub
test
movlps
test
inc
jb
lods
mov
fnstenv
dec
pop
subb
or
lcall
dec
add
cmpsl
fcmovnu
dec
jmp
out
lret
fcmovbe
outsb
in
loop
xor
inc
lret
cmp
jae
jp
ljmp
mov
ret
xor
stos
test
fstl
lret
xor
fdivrl
stos
lods
mov
mov
leave
imul
mov
out
inc
cmc
in
imul
ljmp
cs
sbb
add
dec
cwtl
push
rorb
cs
jp
rcrl
in
out
mov
adc
adc
lock
rcr
lcall
out
cmpsl
add
jnp
std
cmp
add
das
push
shlb
lahf
jle
aam
lods
sub
andb
fnsave
sar
push
jmp
sti
stos
pusha
and
scas
js
dec
outsb
or
xor
cmp
pop
dec
or
addr16
inc
jp
lock
pop
fadds
test
jmp
test
int
pop
jge
dec
stos
les
inc
xchg
or
cli
in
lcall
dec
jle
mov
and
fimull
jno
fildll
repz
mov
outsl
rcrl
fs
inc
aad
in
loope
sbb
std
xor
dec
pop
xor
or
cmpsb
push
out
lea
dec
mov
jae
stos
mov
xor
in
push
sbb
push
fstps
mov
jg
inc
pop
jle
add
aam
xchg
rcl
sbb
test
popf
and
mov
and
mov
in
mov
insl
pop
jnp
sti
int3
mov
add
cmpsb
popl
in
cmc
sub
loop
mov
pop
cli
icebp
call
jg
loop
mov
pop
jg
adc
out
stos
lds
push
lods
cwtl
iret
sub
cmp
jmp
lods
test
fwait
pop
push
mov
clc
and
adc
clc
lods
jmp
das
mov
mov
sahf
mov
mov
dec
pop
xchg
lods
fisttpl
and
and
or
int
fistpll
and
or
lds
iret
cli
sbb
stos
sbb
sbb
out
xchg
cmpsb
cmpsl
fucomi
stos
in
and
lcall
loop
jl
int
icebp
dec
pusha
add
adc
dec
add
pop
pop
adc
stos
std
enter
adc
add
mov
in
push
cmc
mov
xor
fdivr
fwait
mov
pop
lock
daa
mov
daa
in
pop
aas
sbb
mov
insl
jmp
ljmp
sub
jecxz
bound
das
sub
add
das
sub
orb
loope
and
adc
pop
outsb
push
fwait
rorl
jg
dec
jle
pop
mov
or
imul
xchg
xrstors
jmp
iret
fisttpll
stos
cwtl
shr
jle
xor
and
test
xchg
fnsave
scas
mov
ja
xlat
xchg
or
push
xchg
adc
in
insl
xchg
cs
sub
andb
fdivrl
loop
insl
xlat
inc
iret
push
dec
inc
pop
pop
dec
mov
inc
dec
incl
dec
xor
lock
aad
sar
cld
fldl
pop
fdivl
lods
jecxz
add
mov
cwtl
xchg
dec
push
mov
dec
push
fdivp
sti
pop
cli
inc
ret
dec
sub
loopne
lods
das
jne
push
or
dec
addr16
icebp
inc
jle
jmp
pop
cmc
addr16
imul
js
mov
stos
pop
imul
lods
dec
or
cwtl
addr16
xor
mov
je
adc
pop
loop
pop
inc
cmc
adc
sbb
clc
ss
jg
dec
push
fisubrl
sti
fstps
insl
or
insb
jno
xor
mov
fdiv
js
cmp
xchg
jl
jae
mov
stos
fists
rol
lods
sbb
fcmove
fists
lods
out
test
or
sbb
add
adc
cmpsb
jmp
fs
jae
sti
stos
repnz
push
nop
inc
xchg
ret
cmp
pop
sub
fadd
dec
vpunpckhdq
jp
imul
xchg
setns
fnstsw
in
push
and
test
cmp
scas
xor
popa
lret
jecxz
ljmp
adc
mov
pop
das
test
lcall
jp
das
lods
ss
jne
push
jg
hlt
push
jo
pop
in
or
jl
jp
in
in
push
jle
adc
or
push
xchg
mov
lea
push
lcall
sbb
call
lods
arpl
jecxz
mov
xchg
sbb
dec
xor
inc
dec
xor
aad
mov
leave
mov
cmp
hlt
ss
adc
xchg
jge
sti
stos
pop
sarl
sub
mov
or
pop
stos
ret
cmp
dec
lods
aaa
fs
pop
inc
call
lret
sub
fnstcw
clc
in
xchg
mov
sbb
pop
stos
enter
and
push
mov
push
fucomip
ljmp
aam
jle
push
out
lods
repz
cmpsl
fistps
fistps
xor
push
mov
into
xchg
xchg
xor
xchg
cli
and
sbb
loopne
adc
dec
push
and
and
pop
sti
dec
imul
jl
lea
pushf
lods
xor
ljmp
repnz
es
in
icebp
pop
js
jp
sbb
add
adc
xchg
adc
push
lods
mov
fs
mov
dec
leave
inc
cli
sti
hlt
xchg
or
jle
inc
lret
loop
test
std
pop
pop
push
jmp
pop
movb
mov
sbb
pop
fmuls
fdivp
clc
insl
lcall
push
icebp
jb
mov
push
stos
sub
jns
sti
cmp
jnp
xor
and
sbb
and
or
sti
dec
adc
cli
aam
push
lret
sbb
fs
inc
mov
int3
sub
xchg
inc
push
stos
inc
push
lret
jb
rcrl
leave
stos
bound
out
jmp
mov
cmp
icebp
pop
pop
push
inc
lds
and
jle
enter
pop
loop
inc
and
cmp
outsb
and
subb
cltd
mov
sub
dec
or
inc
shll
fucomp
test
jno
pop
add
jp
mov
lcall
push
scas
mov
cmp
dec
xchg
movsb
push
loop
in
aad
push
inc
mov
mov
push
iret
fiaddl
pop
stos
aas
imul
stos
sub
std
xchg
movsl
sbb
lret
mov
mov
dec
or
aaa
pop
clc
stc
push
mov
lock
test
in
jl
faddl
add
push
jle
mov
or
mov
cltd
add
cmp
jg
fimuls
sub
shr
pop
mov
inc
jmp
sub
pop
lret
push
jo
or
and
jns,pn
sub
cld
ficomps
push
lods
ss
fnsave
sti
cmpsl
cmp
fld
call
push
cmc
pop
lret
jle
outsb
icebp
push
inc
in
sbb
cmp
cmp
adc
outsl
and
lcall
inc
nop
lock
dec
popf
imul
jae
mov
add
outsl
cmp
mov
ds
push
pop
scas
add
jno
xchg
fwait
pop
inc
cltd
iret
aam
push
call
jmp
cld
push
cmpl
movsb
ja
fistpl
es
fcmovnu
jl
mov
sub
xlat
fisttpl
bnd
rol
sub
xchg
fcmovnb
mov
dec
into
ss
fstpt
cmc
lock
mov
movsl
mov
cmp
cs
or
push
fstpt
ss
cli
push
fldt
adc
imul
insl
xchg
insb
call
in
test
dec
cmp
push
movsl
adc
insl
xchg
pop
addr16
iret
in
pop
xlat
inc
out
lds
push
pop
lods
out
pushf
jnp
pop
mov
cld
in
push
iret
inc
and
dec
pop
clc
in
out
fnsetpm(287
stos
jmp
xor
sub
adc
add
dec
xchg
sbb
es
jp
sub
out
stc
jbe
jnp
psubd
in
pop
loop
ret
xor
fsubrl
dec
sub
andl
adc
rep
and
loopne
jb
andl
mov
jo
fs
push
and
lcall
cmp
and
push
or
stos
in
test
or
bound
arpl
loope
stos
aaa
int3
cmc
inc
pop
dec
stos
pop
sar
sbb
fiaddl
jnp
jb
push
nop
dec
test
adc
dec
sarb
stos
mov
cmp
cmc
xor
xchg
test
loopne
dec
jg
mov
or
inc
mov
sbb
xchg
ljmp
fiadds
out
jbe
out
add
lret
pop
pop
pop
in
push
and
jecxz
jne
dec
inc
pop
lds
pusha
adc
in
mov
hlt
dec
shrl
jno
jl
out
mov
add
clc
and
fadd
fwait
and
lods
lcall
and
fistl
scas
pop
inc
inc
sti
jo
mov
inc
cmpsl
lock
dec
iret
ffreep
mov
xchg
rclb
pop
shlb
cmc
or
int
sub
lods
push
fucompp
mov
push
push
int
ffreep
cld
cmp
out
xchg
call
pop
in
jae
fucomp
test
pop
and
jnp
add
and
jp
cmp
out
aaa
jae
stos
mov
dec
pop
out
sbb
xchg
cmc
xor
fadds
or
push
jg
cmp
and
mov
inc
cmc
fcoml
mov
xchg
scas
inc
lahf
inc
mov
lret
aas
mov
xchg
testl
pop
into
xor
nop
cwtl
cmpsl
ds
jnp
jg
sub
adc
dec
xor
push
cmpsl
aam
or
mov
hlt
mov
clc
mov
adcl
xchg
int
and
fisttpll
pop
jmp
cmp
fwait
pushw
mov
fstpt
and
insb
js
fcmovnbe
jl
test
sarb
icebp
stc
filds
and
loop
mov
and
movsb
cltd
in
sub
aas
jo
xchg
inc
inc
dec
lret
icebp
fisttpll
int3
mov
xor
fistpl
jae
xor
push
mov
das
test
add
fisubrs
mov
xchg
decl
cmpsb
jp
fldt
notb
fisttpl
pop
sbb
mov
mov
int3
push
and
mov
dec
and
addr16
sbbl
lcall
mov
sbb
call
mov
mov
das
call
cltd
jnp
or
ss
fwait
or
cmp
xchg
scas
mov
dec
call
idivb
aaa
cmp
js
addb
xchg
in
pop
test
scas
xor
sbb
pop
stos
ss
sbb
sub
call
mov
sbb
shr
lret
push
daa
mov
pusha
jecxz
ds
leave
mov
aad
mov
jns
enter
rcrb
cwtd
dec
mov
fistl
jl
push
and
fildl
movsl
sbb
lcall
js
in
pop
mov
test
fidivs
and
fisttpl
sarb
stos
mov
lods
push
fildl
movsb
xchg
lahf
orl
in
cli
jl
jno
cwtl
jae
push
mov
clc
mov
iret
fldt
jns
movsb
lcall
loop
jo
icebp
clc
and
dec
fs
stos
push
fstpt
sbb
cwtl
fcompl
xor
fcmovnbe
stos
pushl
cmp
xchg
jb
fistl
jno
in
push
dec
or
movsb
out
mov
fstpt
stos
lret
fldt
push
sub
fldt
loope
adc
popf
fsubs
test
pop
push
or
fwait
pop
cld
mov
add
add
xor
xchg
xchg
dec
mov
call
fimull
lods
and
cmc
bound
mov
imul
dec
leave
jb
sbb
lcall
jns
icebp
sub
repz
pop
ja
mov
push
xchg
in
jmp
dec
scas
call
push
fisttpll
shll
inc
jo
jb
xchg
jne
in
cmp
outsl
aas
mov
shl
sahf
repnz
sub
ret
pop
lds
push
xchg
push
mov
inc
pop
jnp
xor
jno
mov
mov
insl
jo
in
or
test
push
jg
dec
push
fisubl
push
outsb
push
inc
lock
fnsetpm(287
aas
sbb
dec
inc
sub
fistl
into
jae
aaa
cld
hlt
fildl
mov
dec
mov
pop
in
xchg
cmpsl
pop
fcmovnb
cmp
jle
cmp
cmp
clc
adc
les
mov
pop
sti
aad
fisttpl
sub
shll
int
insl
sbb
ds
mov
mov
fldt
cmpsl
xor
push
jnp
enter
or
dec
xchg
xchg
mov
mov
fldt
mov
subl
cwtl
mov
mov
pop
test
mov
popa
and
lret
push
jb
arpl
xchg
jno
leave
xlat
mov
mov
fisubrs
fldt
cmc
adc
push
xchg
mov
fs
sahf
mov
push
mov
sbb
lea
fistl
outsb
test
lret
add
push
mov
cmpsb
fst
fbld
lods
into
or
mov
pop
popf
push
bnd
mov
or
inc
jge
stc
lds
xor
inc
icebp
jecxz
daa
or
xchg
lock
sahf
ljmp
xor
push
stc
mov
sbb
mov
sub
mov
mov
cli
mov
std
or
fistl
mov
add
xchg
aam
sub
or
inc
cmpsl
call
pop
sbb
and
fildl
mov
pop
stos
pop
es
js
fistl
cmp
iret
rcrb
stos
cltd
push
mov
stos
lods
icebp
gs
xchg
cwtl
in
sti
sar
sbb
sub
xchg
sub
ja
add
movsb
or
insl
push
mov
lcall
push
pop
cmp
bound
popf
popa
mov
fisttpl
jae
iret
call
jle
pop
cmp
js
test
mov
xlat
mov
mov
pop
arpl
popf
jne
enter
inc
mov
outsl
inc
sbb
xor
sbb
in
inc
jg
dec
pop
sti
loopne
and
add
call
cmp
inc
dec
sti
sbb
scas
jmp
lock
inc
inc
addr16
and
jne
rcrb
push
adc
sbbl
inc
fdivrs
add
lretw
int
and
in
inc
mov
jmp
push
scas
pop
xchg
fstpt
xchg
lds
dec
lea
sahf
test
pop
mov
rcl
cltd
fsubrs
push
in
sub
mov
lods
shlb
pop
pop
fistpl
pop
push
iret
mov
pop
icebp
xchg
bound
fistl
push
sahf
pop
sub
add
iret
mov
cmp
cmp
mov
pop
mov
pop
lret
mov
dec
lcall
call
mov
jle
inc
dec
pushf
push
or
cs
fildl
push
je
mov
adc
iret
shll
xchg
push
scas
push
sbb
rol
and
or
mov
push
dec
mov
stos
fists
je
mov
divb
inc
push
mov
jge
fists
lock
fcomi
dec
push
int3
imul
dec
test
xor
scas
fstpt
lcall
mov
fiaddl
adc
enter
shlb
lahf
cltd
mov
jbe
es
loop
mov
cmp
movsb
adc
pusha
jge
fidivs
fistpl
or
in
mov
sbb
lahf
sub
pand
out
iret
cli
les
bound
std
add
mov
or
enter
fwait
test
jnp
pop
loop
aaa
jmp
push
fidivl
jb
std
xchg
cmpsb
mov
mov
mov
sti
cmp
outsb
sub
mov
ljmp
add
cmp
xor
sti
aas
inc
sarl
imul
andl
test
cli
add
mov
int
sbb
out
int3
add
std
dec
mov
repnz
fwait
ljmp
cmp
in
or
mov
dec
sbb
leave
hlt
js
mov
push
shrb
stos
lret
cmpsl
fcomi
inc
sbb
push
loopne
sbb
imul
inc
neg
jmp
xchg
and
pop
push
sahf
mov
fisttpl
xor
leave
orl
jo
fwait
xchg
mov
push
movsb
fiaddl
rcl
dec
cmp
into
fistpl
cmp
cmp
into
cwtl
fldt
mov
loop
jmp
pop
icebp
adc
lcall
outsb
pushf
mov
jne
dec
cli
fldl
lds
or
pop
loop
sbb
aad
cmp
mov
and
pop
sub
rcr
xor
loope
scas
dec
fcmovnb
fwait
gs
into
daa
fcomi
aaa
mov
lahf
popa
stos
mov
jne
stc
adc
push
push
jb
pushf
mov
loopne
aaa
pop
jae
cmp
fucomi
sub
jnp
mov
xchg
imull
leave
clc
push
popa
leave
pop
mov
ss
mov
outsl
lret
pop
fcmovnbe
cmp
inc
ret
leave
cmp
loopne
insl
mov
dec
scas
in
adc
lret
mov
cmc
rcr
outsb
xor
neg
test
mov
shlb
fnstcw
fistpl
out
mov
push
inc
clc
fisttpl
outsl
mov
sub
pop
insb
das
mov
jno
mov
sub
adc
pop
jae
pop
out
xor
fldt
inc
push
push
fildl
inc
loope
push
sub
jb
aas
test
scas
cmpsl
jns
lret
sbb
mov
or
mov
pop
fadds
cmp
xchg
fldt
leave
mov
shlb
ss
movsl
and
fildl
dec
mov
fcomps
mov
movlhps
mov
cmp
jecxz
fldl
roll
ds
pop
push
pushf
popf
fldcw
lods
enter
test
mov
out
cmp
into
les
fidivrl
pop
scas
jno
push
fistpl
pop
inc
or
mov
adc
in
push
out
xor
test
outsl
and
cmp
fistl
pop
push
sub
add
test
fwait
addr16
fs
xchg
pop
xchg
call
clc
inc
nop
je
aad
jnp
add
and
int3
in
lock
pop
rclb
ja
add
cwtl
jno
dec
add
push
xchg
push
sub
ss
call
cmpsl
lods
call
push
xor
xchg
test
test
push
add
out
filds
mov
xor
or
decl
stc
jge
cmp
pop
int3
gs
jnp
or
lds
mov
frstor
mov
sub
add
push
mov
fucom
jmp
fistpl
out
pop
xor
movsb
out
das
daa
jae
sbb
add
shll
lods
fcmovnb
mov
or
outsl
fistpl
in
jl
jno
movsb
ja
out
in
mov
xor
sbb
jb
jb
dec
in
mov
fnstenv
sub
in
sub
or
cmp
daa
cmpsl
fstpl
flds
xlat
pop
sbbl
popa
jecxz
outsl
and
push
xlat
stos
mov
sub
inc
dec
dec
ficoms
push
les
aaa
jmp
arpl
nop
lcall
stos
aam
push
stos
sti
mov
fisubl
xchg
aas
jbe
or
les
aas
mov
mov
sahf
mov
xchg
jbe
test
sub
jp
and
mov
sahf
lods
not
jl
icebp
leave
adc
sti
and
pop
fincstp
mov
lcall
sti
stos
sub
and
dec
stos
xor
les
data16
xchg
addl
repnz
xor
cmp
js
mov
mov
cs
ljmp
addr16
sbb
dec
push
jno
test
ret
lock
das
jge
xor
sbb
xchg
ljmp
cmpsl
and
iret
mov
repnz
lods
sbb
pop
cmp
jp
cli
add
cmp
inc
std
add
fisubl
outsl
repnz
jne
mov
movsb
stc
dec
or
and
mov
fstpt
inc
pushf
jecxz
cmpsl
neg
lahf
xchg
je
outsl
imul
pop
mov
cs
jb
cmp
in
mov
add
arpl
sbbl
add
inc
popf
stos
pop
mov
je
mov
stos
mov
mov
es
mov
pop
ficoml
push
mov
aas
or
jecxz
data16
inc
dec
cwtl
adc
cltd
ret
int3
sbb
xor
fldt
add
or
mov
jne
cld
es
fistl
fisttpll
or
in
jnp
loop
cltd
jb
lret
pop
mov
loop
mov
sub
pop
xor
insl
xchg
pop
xchg
dec
sub
lods
add
cld
jo
add
movsl
fisubl
push
and
lds
jb
push
js
jp
fisttpl
dec
gs
push
pop
xchg
mov
jmp
jl
lock
mov
ret
sti
mov
imul
and
fstpt
in
sub
mov
mov
adc
push
in
loopne
dec
inc
or
std
mov
pop
leave
jo
dec
mov
enter
dec
or
xlat
jbe
mov
and
in
loopne
jecxz
push
fidivs
rcrb
mov
xchg
pop
sbb
mov
push
xchg
mov
pop
cmp
aas
mov
fcmovnbe
mov
pop
dec
fildl
or
repnz
xchg
outsl
xor
sti
clc
lock
pop
stos
sahf
xchg
dec
fcmovb
mov
cmp
rcr
lahf
adc
repnz
in
loopne
popf
cltd
mov
shrl
movsb
mov
fisttpl
sti
inc
imul
and
cld
mov
mov
ret
in
fbstp
es
out
xchg
loop
lret
cmp
dec
lods
jl
inc
lret
daa
scas
push
dec
add
inc
loope
fwait
mov
cmc
mov
fistl
push
and
in
stos
and
popa
bnd
dec
fcmovne
pop
cmc
rcll
adc
xor
adc
pop
adc
in
out
mov
out
jno
popf
outsl
outsl
fnsave
sbb
fwait
and
push
adc
das
and
popa
sbb
gs
inc
in
cmp
push
adc
push
idivb
lret
mov
xchg
jne
xor
in
enter
ret
xor
negb
mov
adc
fistl
sub
inc
daa
xchg
xchg
dec
iret
imul
fldt
scas
xchg
xor
repz
sub
dec
add
imul
inc
mov
out
sahf
jge
and
xchg
sub
jbe
mov
out
inc
fldt
inc
jl
push
lds
loopne
movsb
fnstenv
jmp
cli
push
fistl
lret
addb
adc
mov
fst
jbe
fsts
leave
mov
shrl
cmp
inc
ficompl
xchg
xchg
add
xor
in
jmp
push
fcmovnbe
mov
mov
pop
sbb
ret
sbb
sub
cmpsl
add
cmp
stc
sbb
fistl
rcll
hlt
data16
ljmp
pop
subl
sti
dec
fstpt
dec
int
loopne
ljmp
sbbb
roll
ja
add
movsl
xorb
pop
jnp
std
pop
mov
fdivs
jle
rcrb
stos
ss
ret
test
sbb
mov
je
adc
push
sub
push
pop
mov
cmp
in
xchg
jno
int
push
and
push
or
or
cmc
rcrl
and
inc
out
mov
fldt
sbb
fcmovne
lahf
add
in
aad
icebp
dec
sbb
pop
pop
mov
mov
push
mov
add
test
insb
dec
fiadds
push
mov
outsl
pop
xor
icebp
fisttpl
jo
xchg
lods
stc
lock
fucomi
xor
dec
popa
sbb
adc
andb
loopne
cmp
pop
gs
and
out
push
xchg
aas
pop
int
scas
fdivrl
insb
push
mov
negb
aam
out
sbb
ficomps
ljmp
add
pop
xchg
loopne
jp
imul
fidivrl
mov
jp
int
pop
push
push
enter
fisttpll
adc
jecxz
ja
fistpl
and
push
je
mov
mov
aaa
sub
cmpsl
pop
scas
ljmp
inc
das
pop
sbb
fildl
pushf
cwtl
mov
fstl
in
mov
shl
cmp
jecxz
cmp
mov
sbb
inc
int
test
sbbl
push
cmpsl
cld
add
insb
push
mov
aas
insl
dec
mov
mov
push
punpckhdq
xor
bnd
and
pop
mov
subl
adc
loop
mov
mov
dec
and
rol
cmp
rcll
or
xchg
dec
adc
xchg
sub
jae
cmp
xchg
pop
push
jp
lret
mov
xchg
into
mov
push
sub
rorb
in
jo
insl
loop
shl
xor
mov
lea
or
dec
repnz
scas
nop
pop
sub
addl
loope
stos
and
jo
sbb
fistps
push
outsl
pop
mov
bound
or
nop
in
jl
and
test
pop
dec
jmp
mov
or
incl
cmpsl
repz
mov
and
dec
testb
push
xchg
jecxz
adc
call
jns
scas
lret
popa
and
dec
cmp
rol
pop
rclb
lret
ds
sub
fs
fldt
jmp
loop
pop
cli
jne
sti
ret
addr16
out
ror
cltd
fstpt
push
repnz
push
sub
push
adc
addl
lock
hlt
cmpsb
loopne
jnp
mov
pop
fistl
pop
sahf
addr16
in
sub
xchg
pop
jno
push
pop
in
push
addr16
data16
xchg
js
add
fldt
leave
je
add
call
pop
lcall
lea
inc
in
repz
unpckhps
inc
sbb
sub
aam
pop
fnstsw
mov
imul
stos
push
push
call
repnz
cmp
cmp
mov
cmp
jns
xchg
add
arpl
iret
fldl
repnz
push
nop
xor
fildll
inc
push
or
and
je
cmpsb
jmp
jg
pop
fistl
out
ficoms
aas
fcmovb
gs
sub
fistl
mov
mov
repz
sbb
rcr
pusha
ror
jns
fidivrs
xor
dec
mov
inc
dec
fildl
out
xor
fcomp
dec
cmpsl
aas
push
mov
mov
fistpl
jo
dec
imul
lods
lock
aaa
lahf
fwait
fs
add
cmp
and
push
scas
or
test
adc
sbb
fistl
sbb
xor
xchg
loope
pushfw
ja
stos
stos
and
xchg
jmp
xchg
call
and
fucomi
cmpsl
cmc
adc
ds
vmovntps
mov
xor
fisttpll
dec
jmp
int
fildl
push
lds
xor
sub
lret
imul
fwait
push
sub
xor
cld
addl
fcmovnb
push
add
fldt
push
in
push
loopne
jae
sub
imul
fdivl
ds
lds
fisttpl
lods
imul
lret
pop
mov
push
stc
in
pop
nop
pop
dec
push
into
loop
xor
cltd
bound
stc
inc
sbbb
fwait
mov
pcmpgtw
sti
testb
or
hlt
lahf
cmp
or
and
dec
jb
mov
fildl
les
rolb
and
xlat
cltd
fistl
xlat
lret
jbe
out
insb
rorl
or
adc
fisubrs
test
add
fists
mov
call
rcrl
setle
xor
cmc
inc
hlt
jbe
popa
sbb
loop
adc
clc
mov
and
aas
xor
sub
sub
jp
inc
dec
fs
push
sbb
adc
mov
mov
bound
mov
or
pop
fndisi(8087
stos
mov
and
fldt
add
cmp
fidivs
insb
jne
or
loop
sti
dec
stos
xchg
pop
mov
lahf
mov
fildl
sti
or
jg
adc
cltd
mov
in
outsl
push
fildl
popa
call
fstpt
sub
fcmovu
add
shr
arpl
adc
mov
jecxz
sbbb
mov
xor
mov
testl
mov
xor
mov
push
cmp
push
xor
clc
jecxz
rorb
jno
ret
fidivl
mov
sub
or
fldt
jle
fistl
cmp
out
or
fldt
cmpsl
insb
imulb
cmpsb
bound
btc
clc
sbb
xchg
mov
cmp
lea
int
push
jne
pop
fistl
fbld
pop
loopne
jl
test
test
ret
repnz
or
and
add
imul
fistl
leave
test
mov
adcb
dec
pop
push
dec
push
movsb
in
js
add
push
fldl
xor
sbb
shrl
cwtl
insl
fisttpl
mov
jne
inc
push
stos
xchg
fildl
js
testb
adc
je
leave
test
sub
inc
adc
add
pop
aaa
call
push
mov
pop
loope
add
xor
call
shrl
out
rcr
jg
mov
lock
xor
add
cmp
fisttpl
xchg
xor
fiaddl
add
sub
cmpsb
ljmp
mov
inc
gs
jo
jnp
mov
jae
ret
dec
fucomi
or
or
mov
fstpt
addl
test
jns
lcall
pop
data16
jle
xlat
push
dec
sbb
add
or
inc
movsb
xchg
and
sti
std
mov
jns
sbb
xor
clc
jp
xor
mov
mov
xchg
inc
lods
inc
out
pop
lcall
push
dec
mov
shrl
fldt
mov
int
aam
aad
rclb
fnstcw
popa
stos
dec
hlt
mov
rcll
mov
lcall
in
jo
js
gs
imul
fistpl
sarl
iret
inc
mov
stos
mov
fidivl
add
xor
mov
xor
adc
xlat
mov
fldt
andb
frstor
enter
cwtl
nop
dec
push
jle
dec
mov
sub
push
cmp
fstpl
clc
and
sbb
xor
fimull
ljmp
push
stos
loop
call
pop
mov
popf
out
lret
cmc
add
push
fisttpl
mov
mov
clc
clc
ljmp
push
push
fidivl
inc
inc
dec
adc
add
fmuls
test
cmp
xchg
in
fcmovnb
and
mov
lret
mov
dec
cs
mov
mov
sahf
scas
pop
xchg
mov
fistl
out
js
les
xlat
in
or
lcall
sti
loopne
pop
push
sbb
mov
ficompl
mov
test
add
das
in
xchg
mov
inc
fldl
imul
rclb
pop
int
inc
push
pop
call
fstpt
add
mov
fistpl
mov
insl
jns
outsl
fistl
jae
xchg
cmc
dec
fstl
into
sbb
jnp
or
fcmovnu
cmp
cmp
mov
js
lret
push
nop
inc
fucomp
push
aam
ja
lcall
push
enter
cmpsl
loop
adc
jne
pop
push
mov
dec
fstl
lcall
sarb
sbb
daa
cmc
mov
lea
in
push
push
in
je
insl
sarb
inc
jnp
push
ss
mov
lret
stos
xchg
shrl
loopne
push
hlt
test
adc
and
lock
jno
cwtl
mov
fisttpl
out
mov
mov
out
add
or
hlt
sbb
lcall
or
shll
outsl
fstpt
and
cmp
dec
ss
sub
cli
xor
xchg
cmp
fcmovnbe
mov
mov
aaa
and
push
mov
push
xchg
add
dec
std
and
adc
push
add
inc
fstpt
shlb
lahf
fisttpl
push
gs
fldt
and
test
xchg
scas
adc
mov
mov
mov
pop
daa
std
icebp
and
inc
inc
shrb
stc
clc
into
dec
gs
sbb
outsl
lcall
hlt
popa
sub
push
shrl
mov
cmp
inc
dec
fwait
inc
xlat
ss
mov
int3
cld
mov
mov
loopne
push
aas
jmp
fisttpl
mov
xchg
into
cmp
and
cmpsl
mov
je
push
mov
mov
clc
dec
adc
add
fsts
lahf
fwait
inc
out
pusha
xor
jmp
imul
fildl
test
insl
sub
in
mov
ss
fistl
mov
ficomps
sbb
jmp
or
mov
or
sbb
mov
arpl
in
add
fldt
mov
ror
fs
roll
and
out
aas
ret
sub
or
test
divb
xchg
push
xor
dec
std
stos
lahf
fistpl
pop
icebp
adc
and
inc
mov
lahf
scas
test
mov
scas
cli
push
mov
push
mov
insl
push
stos
daa
mov
xor
cmp
inc
stos
sbb
call
push
lds
fsubs
lds
mov
popa
lods
int
aad
imul
jge
or
lods
jbe,pt
and
das
ljmp
pop
xor
cli
sub
and
inc
jns
jl
repnz
and
mov
test
jg
or
dec
test
clc
sbb
stc
or
in
and
jnp
fidivs
mov
lcall
inc
call
adc
or
xchg
inc
sub
sbb
xor
ljmp
pop
jle
aad
lahf
mov
xchg
push
jne
xchg
mov
adc
out
inc
sar
cmp
in
sub
roll
pop
adc
and
out
jecxz
inc
push
lret
cli
pop
adc
mov
stos
lods
push
jo,pn
or
cmc
or
cmpsl
dec
in
stos
or
into
dec
incb
lcall
push
testl
stos
fmuls
ds
mov
clc
sti
pop
jge
out
or
in
jno
pop
or
test
enter
sub
pusha
push
sub
and
mov
push
xchg
dec
ds
cli
es
inc
xor
lods
stos
or
lcall
out
jle
testb
add
dec
icebp
sub
mov
mov
dec
mov
mov
jns
loopne
ss
fildll
stos
fdivrs
mov
cltd
ds
mov
push
mov
imul
xchg
sub
jg
lahf
call
int
lds
pop
or
leave
sahf
xor
cmpsb
lds
out
lock
sahf
into
arpl
adc
roll
cmpsl
dec
pop
xchg
jl
inc
mov
pop
adc
cli
test
adc
push
outsl
fisttps
sbb
ljmp
dec
enter
aam
add
lods
dec
cmc
dec
lods
add
jne
sub
rclb
or
stos
jnp
xchg
jmp
aas
js
mov
mov
out
cmp
pop
mov
jle
icebp
or
mov
jb
ljmp
subl
fidivs
mov
sti
sbb
aad
sub
shlb
sti
fprem1
dec
fisttpll
pop
repz
or
push
mov
in
int
xchg
inc
xor
adc
add
ds
ja
imul
sub
inc
xchg
jle
push
mov
cmc
in
push
cmpsl
fisttps
xchg
xchg
cwtl
mov
sbb
mov
mov
sahf
stc
outsl
bound
push
stos
jle
xor
jmp
out
fs
and
psraw
movsb
fwait
roll
xchg
shll
xchg
popa
push
daa
les
insl
cmp
mov
ret
cmp
stos
jp
xchg
xor
das
cmp
rclb
xchg
jle
dec
sti
imul
xchg
mov
pop
lods
data16
pop
lea
and
aas
out
mov
cmp
js
cmp
dec
cmp
inc
inc
insb
lock
mov
mov
lods
sahf
mov
inc
cwtl
scas
add
xchg
jmp
mov
cmp
inc
outsb
push
lds
xor
mov
stos
push
and
jne
push
add
jne
imul
dec
outsl
sbb
fistpl
mov
mov
cwtl
jecxz
pop
xchg
fildll
mov
and
inc
adc
mov
xchg
sahf
scas
lret
neg
imul
pop
mov
push
sub
fidivl
scas
cmp
sbb
jb
outsl
pop
adc
xchg
dec
add
fistl
decl
pusha
or
in
lret
negl
xchg
sahf
pop
or
mov
fs
mov
dec
loop
or
sbb
out
js
clc
sub
add
cwtl
in
addb
fucomi
dec
xor
sarb
outsl
rclb
push
mov
push
mov
es
movb
fisttpl
test
or
out
xchg
dec
inc
xchg
push
jecxz
push
fildl
push
add
sarl
push
cld
push
es
mov
xchg
push
mov
in
neg
jne
popa
gs
dec
mov
daa
sbb
cli
out
pushf
psubusw
xor
scas
js
pop
outsb
jl
std
and
je
testl
call
call
xor
ret
xor
repz
add
lods
dec
repnz
stc
stos
and
cld
lock
add
xchg
sbb
add
pusha
adc
or
lea
fadds
or
sbb
out
adc
push
fstpt
jp
adc
cwtl
sbb
add
jp
xor
lret
add
fdivr
nop
imul
mov
pop
jge
and
mov
iret
sti
lret
fcmovnu
pushf
stc
mov
jl
fisubrl
mov
add
stc
clc
lcall
dec
or
jb
dec
and
pop
dec
ret
mov
shl
pop
out
cwtl
fimull
jl
into
xlat
dec
sti
mov
and
sbb
xchg
loopne
cld
ds
cmp
fcmovne
push
jae
mov
push
shlb
test
jns
fisttpl
test
aad
push
daa
push
dec
sbb
xchg
lea
mov
jno
push
adc
test
into
sbb
mov
sbb
jne
inc
das
jp
shl
movsl
push
and
adc
cltd
fcmovb
jb
mov
fnsave
dec
cli
vpmadcsswd
or
mov
sbb
jne
cmpsl
mov
cmp
pushf
in
jl
jmp
fcmovnu
into
mov
roll
adc
andl
xlat
loopne
hlt
xor
shl
int3
xor
pop
mov
scas
push
movl
les
pop
int
movsb
adc
or
ret
negb
or
add
in
fucom
mov
inc
loope
pusha
jb
call
inc
fneni(8087
lods
les
push
xchg
loope
lea
or
ss
xlat
mov
inc
and
mov
mov
les
and
lock
rcr
pop
sub
jb
iret
insl
or
mov
mov
jne
pop
rcrl
mov
push
shlb
popf
adc
sub
and
add
push
xlat
adc
lock
test
negb
push
sbb
les
cmp
or
dec
jae
mov
mov
loopne
mov
faddl
imul
mov
inc
fneni(8087
push
daa
loop
pop
inc
and
pop
push
repnz
xchg
cmp
fistl
andb
xchg
out
mov
mov
mov
mov
pop
test
add
incb
in
daa
outsl
push
pop
sbbb
xchg
js
and
addl
cmpsl
fstpt
mov
dec
rcr
int3
cltd
inc
dec
call
jmp
lods
out
lret
cmp
les
addr16
scas
ss
std
jae
das
stos
cmp
lds
mov
dec
mov
mov
xchg
std
in
into
imul
mov
sarb
mov
fldt
mov
jl
push
lods
sar
pop
sbbl
aad
mov
jnp
xor
ja
pop
cmpsl
imul
push
loope
mov
sub
fisubs
xchg
lock
clc
add
xchg
push
shll
inc
push
std
inc
int
mov
sub
cmpsb
gs
fucomi
cwtl
sbb
adc
int3
xchg
ficoml
loope
mov
aas
lcall
pop
fisttpl
add
push
adc
mov
pop
fmulp
lret
fisubl
sahf
fistpl
mov
enter
dec
loop
in
pop
sbb
sahf
pop
daa
mov
push
inc
fcmovne
cmp
xchg
shrb
fcmovnb
scas
scas
ss
pop
loop,pn
mov
inc
push
push
daa
outsb
stc
loopne
out
lock
fistpl
dec
push
xor
jne
loopne
std
push
lea
adc
loope
dec
lahf
ss
orl
lock
je
rcll
xchg
mov
push
mov
push
adc
add
add
cmp
sarb
xlat
mov
ds
cmp
and
icebp
bnd
jmp
pop
fsubl
pop
or
nop
ljmp
stos
mov
fimull
leave
sbb
jecxz
pop
mov
imul
call
aam
mov
xchg
push
enter
add
fidivrs
mov
cmc
call
loop
fnstenv
fcmove
pop
mov
in
in
push
das
and
xlat
or
ret
lahf
nop
ljmp
jge
in
sbb
bound
or
jp
xlat
inc
ret
fisubrl
mov
dec
rcr
bound
clc
out
cwtl
addr16
scas
add
call
das
pop
add
dec
xor
add
jmp
imul
xor
pop
movsl
in
adc
dec
push
adc
movsb
jbe
inc
lret
cwtl
and
subl
scas
leave
xorb
lods
fwait
jbe
fstpl
cs
hlt
int3
sbb
and
lret
add
data16
lret
jne
xchg
scas
cmpsl
into
ret
ljmp
xor
stos
xor
xlat
pop
mov
pop
fcoml
int
mov
es
push
test
and
xchg
popa
rorl
push
loope
int
fsubrs
inc
imul
jle
bound
jg
jmp
sbb
pop
stos
sbb
add
inc
add
lret
inc
fsubrl
pop
js
jecxz
sti
lret
jle
add
sub
idivb
push
test
mov
imul
enter
push
rorb
fdivs
push
fidivl
pop
pop
add
fldenv
jo
pop
imul
adc
repnz
loop
jle
aaa
rcrl
fcmovu
stos
call
lods
or
ret
inc
and
xchg
cmp
out
lahf
xchg
push
std
cli
mov
ficompl
loope
jae
push
inc
pop
test
sti
sub
dec
cmpb
arpl
xor
mov
inc
je
jnp
sub
aad
jp
lods
cs
add
jmp
push
push
jb
aad
pop
jmp
fadds
jle
xchg
push
cmp
icebp
inc
or
stc
cmc
sbb
stos
lods
xchg
cli
insl
jp
lods
mov
inc
rcll
repnz
call
cwtl
lcall
out
stos
mov
fildl
mov
outsl
jecxz
sbb
cmp
out
loopne
imul
mov
cwtl
adc
fmul
ss
pop
push
les
pop
xchg
call
fs
rcl
subl
fistpl
rclb
leave
cmp
shr
loopne
ljmp
inc
mov
test
paddusw
sbbl
sahf
mov
add
imul
xchg
insb
rcl
jnp
mov
int3
loopne
mov
or
xor
outsb
xor
fucomp
ljmp
cli
mov
pusha
fsubrl
mov
pop
fstpt
addr16
xor
sbb
ret
mov
pop
adc
sub
cld
or
fstpt
pop
fidivs
adc
mov
int3
lahf
adc
mov
xchg
mov
arpl
jle,pn
jno
mov
repz
mov
cmpsl
mov
lcall
loopne
ja
arpl
fiaddl
fistpl
pop
mov
gs
jne
loope
aaa
pop
test
sub
lea
jle
fs
gs
ret
xor
dec
stc
mov
dec
mov
push
push
pop
test
fs
and
mov
mov
out
ret
mov
fimull
mov
in
add
stos
nop
fldl
lret
and
mov
fucomi
pop
loopne
sbb
loop
mov
inc
call
pop
pop
cmp
and
mov
jns
out
ja
into
or
push
inc
dec
mov
jne
sub
js
cmc
or
fistl
lcall
repnz
mov
lods
in
pushf
inc
or
xchg
imul
push
xor
jmp
xchg
aas
sbb
fstl
dec
mov
divb
fcompl
ds
sbb
ds
loopne
scas
fwait
inc
addr16
enter
rcrl
fstpt
inc
push
mov
out
imul
xchg
shlb
sub
mov
mov
mov
jecxz
out
pop
or
push
xorb
cmp
outsl
test
cmp
pop
jb
and
clc
ljmp
scas
outsb
cwtl
xor
fsubp
mov
jle
nop
jns
or
push
or
sti
andb
pop
add
mov
and
fistl
or
sbb
hlt
inc
std
jns
cld
leave
pop
loopne
cmp
in
int3
sti
push
pop
ds
inc
cmpsb
inc
lds
or
nop
mov
jbe
xchg
repnz
jg
decl
mov
pop
jnp
mov
leave
dec
dec
push
call
lcall
insb
xor
outsb
jae
push
fistpl
fprem1
pusha
fisttpl
adc
arpl
fwait
jb
lahf
dec
or
not
pop
and
insb
inc
cmp
jle
scas
fildl
lods
lods
mov
in
mov
cli
pop
add
data16
repz
or
and
cmp
lcall
fisttpl
mov
mov
call
pop
cmp
cmp
push
ss
dec
cmp
out
xor
rcr
xorb
test
pop
loopne
mulb
fcompl
in
movsb
jg
jae
jns
cmp
inc
dec
or
add
xchg
mov
loope
pushf
les
in
mov
push
xchg
mov
pusha
jge
adc
xor
out
sbb
mov
adc
sbb
jecxz
bound
ja
mov
pop
pop
mov
adc
leave
lret
fdivrs
inc
cmpsb
fcmovb
scas
lods
out
rcl
sti
inc
jmp
sbb
xchg
in
test
rcrb
int3
sarb
push
add
cwtl
jmp
xor
mov
call
xlat
sub
mov
sub
fucomi
fwait
cmpsl
ret
fidivs
neg
in
call
jb
push
fnsave
mov
ret
push
push
es
repnz
mov
lret
decb
out
xchg
mov
rcrl
mov
shll
scas
andb
mov
cmp
mov
dec
shlb
add
push
divb
lods
in
jge
fisttpl
fnsave
iret
and
add
dec
outsl
pop
sarb
sub
pop
clc
loopne
xchg
rclb
inc
jnp
arpl
fnsave
mov
xor
scas
mov
outsl
sahf
loopne
dec
jmp
pop
inc
cmc
jge
enter
push
js
in
sbb
rcr
fists
fcmovnb
pop
jo
repnz
loop
fstpt
mov
push
frstor
sbb
and
shlb
subl
inc
mov
test
call
cmp
adc
xchg
es
test
sahf
inc
fldt
scas
pop
in
xlat
xor
cmc
nop
or
and
jnp
leave
aam
pushf
and
push
scas
ja
jno
icebp
std
inc
adc
push
pop
addr16
popf
mov
dec
ljmp
stos
xchg
cmpsb
xchg
insl
fisttpl
xor
xchg
sbb
mov
hlt
jp
lods
pop
adcl
fwait
cmc
lock
ja
add
stc
sub
add
movsl
mov
in
in
std
scas
js
repnz
outsb
leave
and
xor
je
jle
sarb
lods
mov
in
shrl
inc
bound
ds
and
push
and
push
les
aas
lcall
pop
xchg
and
mov
pop
jg
jo
adc
push
cmp
push
lods
mov
pop
inc
jle
adc
fisubs
cmp
lods
insb
push
dec
or
inc
fistpl
ret
mull
jge
mov
inc
fistpl
out
outsb
sti
cmpsl
lock
sub
fcmovnu
pop
sbb
cld
mov
fldl
daa
loop
test
int3
adc
aam
cmp
push
lret
imul
inc
pop
inc
sub
inc
push
cmp
out
adcb
xchg
scas
lret
fisttpl
cli
mov
das
pop
movsl
xor
jb
pop
lea
je
adc
xor
out
outsl
pusha
mov
push
fisubl
xchg
rcr
adc
fstpt
mov
or
frstor
addr16
lock
aad
add
xchg
insl
push
ss
scas
aam
add
pushf
dec
xor
xlat
cmc
lods
mov
pop
inc
hlt
fsubrl
cmpl
pushf
insb
ljmp
lods
xchg
xchg
mov
fwait
jnp
stos
xor
loop
lahf
outsl
or
fwait
call
inc
mov
inc
adc
add
sub
add
iret
jnp
out
cld
loope
fldt
sti
inc
adc
in
sub
repz
rcll
and
insb
sub
loop
or
outsb
mov
dec
inc
inc
clc
and
shrl
cmp
mov
or
sub
and
lods
bound
fistl
jge
jle
scas
mov
fistpl
mov
stos
jecxz
push
add
pusha
pop
lahf
mov
lods
mov
int
and
fistpl
movb
iret
ret
iret
cs
dec
pushf
push
imul
cmp
in
sub
dec
xchg
daa
out
inc
imul
adc
mov
sub
lret
or
lods
es
fistl
scas
lcall
pop
popf
pop
testl
lock
mov
xchg
inc
and
je
dec
pop
pop
int3
xchg
fistl
loopne
clc
pop
jne
fisttpll
rolb
stos
xchg
bound
aam
inc
addr16
pop
xlat
outsl
mov
inc
and
leave
fmuls
xchg
push
xor
jle
inc
out
ret
cmp
sub
mov
sbb
lock
das
xchg
sbb
push
jmp
fstpt
and
inc
out
cli
dec
call
cmp
jmp
xor
rcrb
notb
call
fistl
xchg
lahf
shrb
lock
dec
pushf
fcmove
ja
pop
int3
test
xchg
cli
cmp
icebp
fucomi
adc
ficomps
cmp
imul
orb
mov
outsl
adc
push
xchg
fisttpl
sub
orb
dec
jecxz
es
pop
lcall
je
int
out
sbb
xor
fistl
iret
fdivrl
fildll
dec
ja
mov
sbb
fcmovne
movsl
in
frstor
sub
xor
lcall
rclb
cmp
divl
mov
xor
push
repnz
rorb
adc
hlt
jmp
into
es
dec
data16
iret
mov
repz
push
mov
dec
cmp
jge
mov
fistpl
mov
andb
push
fnstenv
or
scas
mov
pop
fwait
dec
fcomi
lea
dec
subl
pusha
sub
dec
push
adc
sub
adc
dec
dec
xchg
and
vcvttps2dq
movsb
mov
scas
fcomi
push
cltd
add
mov
dec
add
shr
loopne
repz
push
scas
dec
or
xor
sub
inc
jmp
lods
ljmp
cwtl
add
cmp
pop
jb
sub
loope
js
jns
dec
cli
les
mov
fisttpl
jecxz
ret
incl
mov
mov
insl
inc
xor
cltd
lea
and
jecxz
inc
es
arpl
inc
adc
mov
iret
sbb
add
pop
out
add
xchg
cmp
pop
lods
loopne
les
fdivrl
nop
stos
shlb
std
inc
adc
fstps
lods
out
scas
sbb
sbb
repz
in
xor
rcl
js
pop
sbb
movsb
mov
imul
mov
pop
mov
mov
icebp
pop
jle
mov
mov
bswap
je
outsl
pop
pop
leave
hlt
lcall
cmp
pop
clc
lock
arpl
icebp
fmul
or
push
add
loope
adc
repnz
xor
xor
push
pop
mov
lcall
pop
jg
pop
xor
lods
push
push
adc
xchg
sbb
aaa
add
xchg
fimull
or
fcmovnu
out
ds
pop
es
mov
push
or
sub
rcll
xchg
jno
call
mov
ja
pop
push
xor
int
ds
push
das
or
call
mov
inc
testb
int3
adc
repnz
dec
inc
loope
or
adc
sbb
jnp,pt
sbb
lock
sbb
mov
rcll
fdivp
arpl
mov
lahf
fldt
xchg
cmp
movsb
scas
cs
out
mov
mov
push
fldt
aas
add
cmpsl
lds
aaa
ljmp
adc
stos
sahf
fldt
leave
fstpt
movsl
jp
mov
and
sub
loopne
mov
fwait
stos
outsl
rcr
xchg
jl
jb
pop
in
call
dec
jp
stos
in
scas
fnsave
fs
sub
xchg
xor
jb
xor
mov
adcb
mov
ds
cmp
cld
xchg
mov
xor
sbb
out
out
shll
pop
push
rep
stos
sub
insl
mov
mov
mov
pop
pop
sbb
das
sub
mov
bound
pop
ja
ss
dec
xchg
mov
loopne
sub
test
mov
mov
rcr
int3
sbb
fstpt
mov
dec
mov
add
xor
mov
fildl
daa
jb
push
lahf
push
jmp
cld
testb
fcomps
inc
add
xor
jnp
xor
push
stos
jbe
mov
aas
xchg
ljmp
xor
mov
outsl
clc
push
push
mov
push
mov
mov
push
fdivs
stc
sbb
sub
mov
adc
push
and
sub
jge
mov
sti
pop
lret
mov
mov
mov
mov
jns
sub
fldt
adc
cltd
cmp
sti
outsl
sbb
inc
fistpl
mov
and
fucomi
push
add
fisttpl
cmpsl
sti
xchg
sahf
pop
test
adc
jl
fildl
adc
jbe
jmp
or
add
cmc
jge
aas
mov
lret
jnp
cmp
mov
fstpt
adc
cwtl
and
bound
lods
add
fcmovu
je
adc
cs
inc
add
sub
pusha
adc
xchg
ja
popf
adc
jns
cmp
shlb
fldt
pop
mov
inc
sti
aad
pusha
mov
cmc
int
sbb
pop
fstpt
xchg
out
addr16
decb
data16
subl
movsl
inc
testb
xor
nop
orl
lock
rsqrtps
mov
pop
jmp
pop
out
mov
lods
add
jmp
push
pop
jns
mov
push
pop
pop
inc
insb
lods
push
push
lret
ljmp
fldt
xor
nop
arpl
out
xor
es
cli
mov
push
inc
xchg
xorl
push
in
sahf
fsubrl
aad
fistpl
xlat
test
fcomi
add
es
ja
cld
cmp
pushf
push
add
int3
lods
test
outsb
push
test
ljmp
pop
test
add
and
in
leave
jmp
xor
out
push
pusha
jg
mov
fdivrs
into
rorl
mov
xchg
mov
fcmovnu
loop
scas
mov
or
mov
sti
jecxz
cmp
fstp
test
orl
clc
repz
mov
cmp
add
pop
pusha
sbb
push
sbb
add
ret
jae
ror
xor
and
pop
daa
sbb
or
pop
data16
adc
cwtl
adc
adc
filds
mov
rcrl
int3
std
loopne
adc
cmp
mov
fcomip
jno
bswap
inc
fidivrl
add
call
dec
xor
das
jmp
roll
daa
in
out
in
outsl
es
and
jb
mov
repnz
faddp
mov
fldt
mov
push
pop
fisttpl
push
push
adc
mov
push
aas
mov
outsb
sbb
push
pop
cmp
mov
in
fildl
and
add
and
or
mov
xchg
mov
mov
iret
cmpsb
loopne
sub
push
and
pop
outsl
adc
fldl
repnz
fstp
sti
inc
dec
daa
xchg
mov
mov
fldt
scas
cmp
mov
jo
xor
clc
rclb
jl
push
push
lea
push
fstpt
or
movsb
mov
adc
pop
aam
stos
mov
mov
push
xchg
sbbb
aad
add
sbb
movsb
push
mull
fisttpl
popa
dec
lret
clc
xor
pop
sbb
jns
dec
fucomi
and
fadds
xor
pushf
mov
scas
repnz
sbb
inc
xchg
pop
jno
out
jbe
dec
loopne
test
rorb
sti
int3
loopne
mov
bound
call
sti
les
aad
cmpsb
lret
fildl
xchg
pop
pop
ds
rol
push
in
iret
pop
pop
fistpl
fwait
leave
outsb
push
sbb
addr16
dec
or
ds
adc
sub
xor
mov
test
xchg
xchg
adc
fstpt
sbb
outsl
cld
fdiv
clc
sub
sahf
stos
lahf
je
and
fstpl
inc
sti
jae
std
fisttpl
leave
fcmovne
jmp
xchg
and
jmp
sbb
loopne
loop
icebp
sbb
das
dec
jae
fistl
rcrb
hlt
call
mov
cmp
das
les
mov
add
ljmp
shll
aad
cmpsb
xchg
out
gs
push
js
sub
repnz
mov
pop
fildl
jp
adc
push
push
mov
cli
fistpl
rolb
fcmovnb
dec
pop
shl
shrb
sub
cmp
push
inc
mulb
pop
aas
lret
jno
push
fistl
arpl
mov
mov
dec
mov
setae
dec
mov
loopne
or
jge
add
shl
dec
clc
cmp
movsl
pop
into
mov
xor
fstp
mov
addl
lahf
fldt
lret
js
add
fisttpl
int3
and
sbb
imul
and
jge
mov
sub
lds
and
or
dec
movsb
fstl
cmpb
fstpt
pop
int
add
push
gs
mov
sub
and
call
xchg
jmp
fwait
stos
fsubrs
fucomi
jne
pop
mov
divl
call
adc
test
or
adc
fistpl
loop
cmp
shll
repnz
cmp
fistl
fstpt
addr16
ja
mov
sahf
adc
push
dec
inc
dec
dec
fisttpl
jge
dec
jmp
fisttpl
cmpsb
or
test
sarb
dec
std
dec
or
dec
test
fisttpl
enter
jbe
fstl
cli
faddp
pop
and
dec
cld
lock
sub
call
mov
out
push
clc
inc
js
or
cmp
sbb
xchg
call
stos
sub
pop
adc
lcall
popa
pop
dec
xor
xor
mov
xchg
bound
mov
ss
daa
movsb
pop
dec
and
inc
sbb
loopne
fisttpl
leave
lcall
arpl
pop
stos
and
adc
dec
mov
fneni(8087
fstpl
fildl
push
pop
rcll
testb
in
push
mov
push
fildl
mov
mov
sbb
adc
loopne,pn
pop
stos
shlb
rcl
ret
ret
shr
fistl
dec
inc
fst
rol
jb
jbe
xor
loopne
and
loopne
leave
sbb
jecxz
mov
sbb
in
ret
in
fcmovnb
das
or
fisttpl
mov
clc
fstl
lcall
mov
pop
imul
add
mov
lcall
mov
data16
les
push
test
xor
add
frstor
cmp
insl
push
jnp
sub
movsl
out
cmpsl
repnz
fcmovb
and
mov
call
jns
dec
mov
decb
call
hlt
and
int3
fnstsw
or
xchg
aam
not
mov
adc
sbb
fucomi
or
add
mov
int
sbb
loopne
jae
pop
ljmpw
push
popf
inc
fistpl
dec
fs
insb
xchg
in
in
lods
mov
imul
subl
popa
rol
push
cmp
sbbl
popa
inc
fwait
scas
push
int3
mov
lret
xor
dec
roll
push
cltd
mov
fistps
stos
lcall
call
das
mov
xchg
mov
jle
cmp
int3
test
dec
dec
decb
jecxz
sti
pop
fildl
and
xchg
loopne
add
mov
je
std
add
addr16
add
sti
mov
jbe
out
lret
ss
fucomi
sub
and
xchg
rcr
and
lcall
fidivl
lahf
sub
enter
bound
dec
pop
cmpsb
mov
xchg
adc
lods
pop
lea
lret
dec
fldt
and
or
xchg
stos
mov
ja
add
jo
in
or
pop
sbb
repz
add
fisttpl
bound
fistpl
push
and
jmp
jmp
sub
push
xchg
popa
cmp
mov
addb
dec
jae
fisttpl
mulb
add
push
loopne
pop
cmp
fstpt
cmp
mov
test
in
shl
fisttps
insl
cmp
out
jle
cmp
fimull
movsl
fstp
jge,pn
mov
xor
adc
je
add
sbb
mov
and
cmpl
sub
xor
daa
fucomi
pop
out
sahf
cmpsl
cmpsb
xchg
fcomi
iret
pop
inc
in
or
fbstp
sub
fs
testl
jns
addr16
fstpt
cld
aas
popf
cmp
fildl
sub
xchg
sub
aaa
repz
mov
loope
out
mov
in
in
inc
test
leave
jmp
shlb
xor
push
inc
cmp
inc
lret
xor
call
add
mov
aas
xchg
imul
cld
mov
fistpl
xchg
push
dec
push
imul
mov
call
mov
mov
mov
int
mov
call
jne
xor
repnz
sbb
or
fdivrs
and
xchg
fucomi
into
add
jbe
ja
add
mov
jg
dec
or
jmp
sbb
sub
inc
arpl
movsb
add
jns
mov
outsb
test
pop
in
mov
int3
push
bound
lods
add
xchg
sbb
stos
xchg
xor
rorb
ficomps
dec
fisttpl
aaa
hlt
mov
scas
call
pop
pop
cs
es
cmpl
and
in
aam
fs
frstor
dec
inc
into
sbb
mov
ds
addr16
scas
data16
test
lret
test
and
mov
testb
dec
fiaddl
fcomip
dec
into
in
faddp
pop
mov
and
xchg
mov
jge
in
xor
cmpl
xor
push
cmp
sar
pop
push
test
sbb
in
test
pop
sub
inc
gs
adc
pop
pop
sbb
dec
cmpsb
mov
fcomi
xor
jge
sbb
mov
mov
dec
push
ret
addr16
faddp
adc
fildl
shrl
lret
dec
cld
cmp
pop
jp
pop
jns
fistl
sbb
shlb
cli
xchg
mov
fistl
or
jne
in
imul
hlt
fistl
add
cld
inc
xor
filds
int3
fcmovbe
xchg
sub
mov
fwait
mov
and
daa
subl
outsb
sub
popa
fistpl
sbb
call
enter
adc
les
dec
sub
mov
out
or
cltd
inc
mov
sbb
add
lret
ss
push
adc
cwtl
cwtl
jns
mov
stos
loopew
pop
imul
push
fcmovnu
test
push
fcmovb
push
fldt
nop
loop
pop
xorb
fisttpl
cwtl
sub
or
xchg
test
fndisi(8087
pop
push
nop
rorl
and
mov
pop
sbb
mov
ja
stos
test
or
jl
and
or
mov
hlt
sbb
add
sbb
int
or
jno
gs
or
cli
mov
xchg
in
repnz
sub
popa
popf
ljmp
mov
xor
sbbb
pusha
dec
adc
cmp
add
shrb
sbb
xor
cmp
adc
fstpt
cmp
cltd
xchg
inc
hlt
scas
xchg
fistpl
xchg
or
shl
jns
xchg
rcr
loop
and
lret
mov
rorb
andl
lock
fisttpll
inc
test
loopne
lea
fsubrs
in
jno
bound
lahf
xchg
jb
aas
fcmovne
sub
pop
or
in
mov
jo
push
lock
scas
mov
fsubr
mov
ficoml
pop
lcall
inc
inc
mov
lds
inc
sti
xchg
jns
push
scas
fistpl
pop
pop
subl
loopne
sbb
mov
fcmovnbe
outsb
jno
dec
and
int
loop
adc
mov
fsubrs
fucomi
adc
cs
or
push
fiaddl
and
cmpsl
ljmp
in
stc
enter
addr16
mov
pushf
sbb
cmp
xchg
repz
xchg
loopne
mov
nop
js
cmp
imul
adc
push
push
fldenv
into
jecxz
mov
loop
insl
sbb
pop
adc
jp
fistpl
xor
arpl
imulb
mov
or
loop
lea
test
andl
int3
jmp
inc
clc
cmp
mov
stc
adc
add
out
pop
mov
push
cmpsl
mov
mov
push
xor
pop
cmp
cmp
and
pop
add
pop
mov
je
pop
sub
loope
roll
pop
cmp
roll
rorb
rcr
xlat
movl
fstpt
loopne
cmp
fmul
jne
sub
ljmp
and
mov
fwait
xlat
sti
bnd
repz
sub
mov
fninit
pop
addl
jle
adc
ss
push
rcll
pop
fsts
ret
popa
xor
cmp
xchg
pop
ret
mov
sub
dec
mov
iret
test
iret
inc
sbb
mulb
mov
cmpsb
jae
dec
pop
lret
mov
sbbb
lods
sahf
cmp
pop
hlt
in
and
add
cmp
mov
sbb
iret
pop
ds
and
ficoml
sahf
loopne
fidivs
out
fldt
or
fnsave
push
dec
adc
rclb
out
negl
mov
ds
push
xchg
dec
fwait
mov
mov
pop
je
repz
push
xor
pop
fimull
mov
push
dec
or
fucomi
mov
inc
pop
fcmovnbe
mov
push
hlt
call
loop
iret
jnp
insl
push
add
outsl
fwait
xor
clc
dec
jno
jmp
rorb
shll
enterw
stos
mov
mov
fcomi
dec
add
fisttpl
fcmovb
mov
clc
pushf
dec
add
enter
test
testl
xchg
sbb
sbb
cmp
fcmovne
cmp
mov
fninit
lahf
pop
sti
repz
nop
call
mov
push
inc
test
xor
fldl
dec
loopne
fisubl
adc
jecxz
and
jb
movsl
xchg
lret
inc
sbb
cmp
jmp
addr16
push
cwtl
cld
mov
loope
cmp
sbb
cltd
cmp
sbb
hlt
mov
mov
cltd
push
andb
lret
or
jne
inc
adc
flds
gs
jnp
outsb
or
jecxz
mov
push
sub
leave
adc
cmp
cltd
sub
mulb
lods
xchg
in
and
in
push
mov
data16
or
or
test
dec
int3
stc
imul
cs
push
adc
addr16
mov
cmp
repz
aam
mov
mov
popf
add
xor
or
inc
jmp
mov
mov
mov
imul
test
cmp
cwtl
and
int3
xchg
jbe
rcrl
add
cltd
push
push
jmp
xchg
fs
negb
into
or
dec
or
arpl
mov
xlat
lret
sub
cmp
push
xchg
lcall
aas
or
inc
das
jae
ljmp
dec
aam
clc
loop
fistpl
cmc
or
push
dec
push
shrl
cli
xchg
and
inc
cmpsb
push
rcr
jge
icebp
adc
lock
xchg
xchg
or
repnz
add
lock
push
cmc
sbb
les
xlat
iret
dec
aaa
imul
mov
clc
or
lea
sarl
and
imul
inc
outsb
pop
jns
xchg
in
dec
mov
mov
pop
jne
jle
repz
std
jno
out
out
mov
in
add
cmpsb
in
lods
out
xchg
push
pop
push
clc
in
test
sub
cs
or
dec
mov
lods
lea
fiadds
stos
xor
push
inc
or
adc
outsb
jecxz
dec
fisttpl
aaa
addl
outsl
sbb
cli
fs
in
mov
xchg
je
jp
stos
push
lahf
inc
push
repz
shrb
loop
clc
inc
xchg
iret
stos
mov
cmp
lahf
inc
in
iret
cwtl
lock
cltd
cld
sbb
or
sbb
aas
insl
call
inc
mov
cmpsl
jg
pop
or
xchg
out
rcrl
cmp
fsubs
inc
cmpb
int3
stos
insb
xchg
shrl
mov
test
and
or
ret
movsl
jmp
pop
xchg
scas
dec
loope
dec
jne
fdivrs
pop
imul
mov
out
or
imul
dec
dec
adc
and
cli
aad
push
pop
insl
iret
stos
pop
sarl
inc
sti
jmp
mov
loope
jb
les
lahf
pop
cmp
fucom
mov
sbb
push
or
xor
jmp
sahf
mov
xchg
sub
add
roll
rcll
pop
xchg
stos
imulb
jnp
mov
icebp
lock
mov
mov
mov
add
push
aam
repnz
cmp
sbb
call
pop
jmp
adc
shll
stc
or
xchg
jge
sbb
xor
jl
pop
decb
jle
mov
sbb
fcmovu
xchg
repz
ljmp
fisttpl
insb
mov
sub
test
int3
and
roll
addr16
jo
fldt
push
cmp
pop
and
out
ret
mov
jno
movb
inc
in
fildl
add
fisttpl
xor
mov
mov
aaa
and
lret
xlat
sarb
sbb
filds
xor
ds
inc
cmp
sahf
insl
test
push
fistl
jge
cld
cmpsb
scas
arpl
pop
dec
sub
mov
mov
inc
lds
pop
call
mov
fimull
fildl
xor
push
or
mov
push
dec
lcall
dec
es
stos
jge
mov
pop
push
dec
ss
pop
ret
pop
aaa
sbb
fcomi
mov
ret
movsl
fndisi(8087
sti
insb
fucom
cmp
shll
fstpt
roll
xorb
fstpt
subb
mov
fisttpl
jo
cli
or
pop
fidivrs
bound
scas
in
xchg
hlt
stc
sbb
enter
and
cli
int
cmp
je
lds
in
iret
clc
add
inc
sbb
addl
jmp
dec
scas
insb
fndisi(8087
lds
mov
out
shrl
test
fcmovne
mov
or
pop
fninit
xchg
out
andb
add
mov
add
adc
dec
je
add
pop
scas
fstpl
xchg
push
daa
shrb
fistpl
ja
cmpl
mov
jae
add
push
inc
popf
pop
addr16
push
sub
out
out
rclb
fnclex
add
push
sub
sahf
mov
aad
call
mov
or
cltd
shlb
imul
hlt
or
ret
lcall
push
push
add
fstpt
jbe
mov
repz
jl
roll
idivb
sub
fildl
shl
xchg
sbb
pand
jae
xor
pop
jb
adcb
and
pusha
fcomi
lods
call
inc
fisttpl
jle
repnz
fildl
and
aad
ret
or
dec
inc
in
stc
fistl
push
rorl
loopne
sbb
stos
imul
ja
mov
mov
xor
push
subb
xchg
daa
loop
jb
xor
add
add
push
sbb
dec
fadd
test
mov
sahf
lret
inc
out
fcmovne
cmp
imul
adc
push
lcall
fildl
ret
pop
jbe
loopne
int3
xchg
and
enter
ficoml
mov
ja
sub
mov
fstl
cmp
xor
push
repnz
into
loopne
out
pop
fldt
call
lret
nop
loopne
jnp
push
xlat
push
aas
stos
cmp
ja
mov
mov
sbb
inc
gs
fisubrs
xchg
add
leave
dec
dec
sbbl
imul
mov
mov
fcmovne
and
inc
insb
push
mov
out
jnp
push
fwait
add
or
pop
daa
int
aad
xor
adc
mov
aas
xor
xchg
mov
hlt
xchg
and
loop
and
arpl
sbb
xor
dec
sti
mov
xchg
cmpb
mov
push
addl
fidivrl
xor
fistpl
or
sbb
popf
call
xchg
lcall
or
fistl
daa
mov
outsl
testl
test
leave
fmuls
fiaddl
bound
fs
lahf
outsl
movsl
pop
pop
nop
cld
mov
sbb
dec
fisttpl
lcall
ljmp
mov
aas
enter
xor
repz
and
movsb
jg
mov
push
add
mov
xchg
dec
and
push
pop
fs
lods
mov
adc
mov
lret
push
push
xor
int3
in
icebp
inc
std
leave
nop
das
lahf
xchg
xor
push
shrl
bound
rol
shrb
pop
and
hlt
sti
mov
xor
jge
mov
sbb
jg
aas
rcr
cmp
fldenv
ss
push
dec
stos
bound
mov
je
cli
nop
jbe
sub
lods
lret
push
mov
dec
loop
lods
sub
jp
mov
stos
adc
jge
cltd
sbb
sti
lods
cmp
xlat
pop
mov
push
and
add
add
in
lcall
aad
icebp
and
pop
mov
cmp
imul
inc
lods
inc
xchg
fists
mov
ja
dec
cmpsl
adc
cmp
mov
fwait
leave
outsb
jle
push
cltd
cld
sti
into
daa
xchg
cmp
pop
pop
ja
xlat
sub
out
lods
test
leave
enter
mov
jo
rcr
cmp
lods
pop
inc
lods
es
outsl
sub
adc
mov
mov
sbb
sbb
dec
and
ja
jecxz
idivb
fwait
jmp
mov
daa
dec
jbe
std
test
mov
pop
adc
add
jmp
or
mov
je
out
jle
cmp
xor
js
sub
popa
adc
in
add
outsl
xchg
enter
mov
mov
ret
mov
add
push
inc
lahf
jbe
dec
imulb
adc
pop
outsb
ret
xor
jmp
insb
lods
sbb
dec
mov
stos
xchg
fucomip
ret
mov
jge
in
stc
and
mov
add
pop
and
incb
xchg
ljmp
sti
icebp
xor
and
ljmp
repnz
insl
iret
pop
in
outsl
fisubs
inc
push
push
add
push
push
loop
stos
and
adc
adc
jno
ljmp
push
mov
xchg
xchg
cmp
cmp
cltd
out
sbb
lods
cld
fcmovbe
dec
mov
or
adc
std
popa
or
sbb
inc
fsts
lcall
ja
stos
jb
scas
jmp
jmp
xchg
mov
or
xchg
sub
add
sub
stos
pop
fmul
jle
lcall
jp
mov
add
or
push
loop
cmp
lcall
and
aam
loop
in
ret
cmc
in
dec
aam
lods
xchg
jo
xor
into
iret
jbe
loop
leave
test
sub
mov
enter
pop
jne
cld
cmc
aaa
mov
nop
in
mov
push
in
fisttps
cli
push
inc
cmp
adc
in
lcall
lods
adc
insb
movsb
mov
mov
xor
xchg
xorb
int3
loop
fcoml
lods
outsb
jmp
dec
in
roll
xchg
adc
add
sbb
in
sbb
pop
sti
mov
xchg
popa
scas
loope
stos
outsl
call
sbb
lds
fnstcw
shl
and
std
add
sti
leave
mov
jns
mov
mov
dec
lahf
pop
lock
rorl
fcoml
pop
test
ss
mov
addb
sub
jecxz
fstp
xchg
dec
popf
dec
and
hlt
push
fbld
fsubrl
pop
dec
fistps
imul
dec
pop
jns
loopne
mov
fisubrs
inc
adc
stos
mov
js
push
clc
rcrl
add
bound
xchg
push
xlat
lahf
fnstcw
dec
outsb
addr16
scas
jp
sbb
js
xor
mov
cmc
xchg
sub
add
stos
pavgb
dec
push
imul
jl
cwtl
mov
inc
mov
cld
pop
stos
dec
les
iret
jle
stc
adc
mov
lock
add
fildll
loopne
lcall
scas
fldt
push
xchg
xor
push
roll
adc
mov
pop
fistpl
stos
adc
jmp
dec
xchg
in
in
jl
aad
loopne
push
or
dec
out
mov
cmpsl
jmp
stos
jae
push
or
mov
loope
xor
and
mov
adcl
ficompl
xchg
mov
jnp
mov
test
imul
stc
jns
xchg
daa
into
jne
pop
pop
push
scas
lock
pop
hlt
test
and
test
push
in
and
push
sub
xor
xchg
loop
jo
ficoml
adc
shrb
or
mov
lods
cltd
xchg
aam
xchg
subl
loope
aas
test
mov
sub
arpl
testl
mov
fscale
mov
or
cmpb
pushf
pop
dec
ficompl
sbb
in
adc
adc
and
pop
sub
lret
jg
adc
aam
adc
stos
adcb
pushf
fbstp
cmp
pop
xor
es
bound
cmpsb
es
pop
jecxz
jne
clc
pop
mov
call
push
mov
sub
int
and
pop
dec
fisttps
pop
imul
lock
adc
mov
jle
sbb
pop
pop
stos
adc
mov
xor
ffree
jnp
stc
push
push
jo
cmp
pop
xor
add
in
lods
sahf
xchg
cwtl
jle
aad
popa
stos
xchg
jb
mov
cmp
push
adc
jecxz
arpl
adc
repnz
pop
call
xor
pop
adc
loopne
push
jb
stos
shrb
or
xlat
and
lcall
jg
mov
adc
and
ret
into
mov
inc
xor
test
push
arpl
scas
mov
cs
out
and
fisttpl
push
popa
ret
add
mov
sbb
pop
pop
int
fwait
movsl
xor
cs
push
mov
fucomi
dec
movsb
popa
cmc
iret
ret
stos
fistl
lahf
and
adc
mov
dec
cmpsb
lds
testb
pop
push
movsl
fisttpl
repnz
outsl
mov
sub
lods
aad
cmc
fcmovnu
bound
popf
pop
sub
xor
aam
fcomi
call
lock
xchg
stc
fcomi
in
rcrb
xchg
gs
fadds
fldt
fdivrl
test
fisubl
inc
and
fidivrl
insl
dec
fstpl
pop
gs
in
cmpsl
dec
pop
sbb
jmp
testb
rorl
pop
push
pop
cmp
fisttpl
ret
fisttpl
cmpsl
into
scas
lret
dec
push
mov
mov
outsl
inc
mov
fcmovne
in
push
negb
int3
jne
fisubrl
in
lods
ret
mov
xor
sti
negb
pop
or
sub
xchg
shll
pusha
xor
cmp
cli
pop
pop
mov
fistps
mov
out
testb
adc
jns
pop
je
xor
neg
push
out
pop
mov
and
jae
jb
loope
sub
inc
mov
shll
pop
ljmp
sbb
pop
sbb
xchg
xchg
sub
adc
lret
mov
mov
xchg
shlb
pop
adc
leave
fwait
cmp
or
aam
mov
fstpt
mov
into
fcmovne
cmc
mov
add
jne
and
pop
in
dec
fildl
sbb
fldt
hlt
dec
add
adc
sub
and
daa
les
out
or
jecxz
lret
lods
mov
sarl
sbb
stc
fistpl
fs
push
clc
xchg
movsl
xchg
icebp
cmc
clc
je
push
sbb
cmp
mov
repnz
test
or
sbb
push
xchg
dec
adc
xchg
call
mov
push
fistpl
add
dec
test
dec
inc
call
and
sub
loope
mov
dec
loopne
enter
ficoml
jle
add
inc
dec
adc
fabs
fcmovnb
push
xor
in
not
xor
test
arpl
inc
fcmovnu
int
test
bound
fistpl
fs
cmp
sbb
out
dec
mov
add
repz
mov
sbb
int3
fldt
fildll
jecxz
pop
insb
idivb
lcall
bound
xor
sbb
or
push
dec
sti
divb
imul
mov
sub
pop
lret
mov
fcmovnb
push
and
inc
nop
pop
sub
push
fisttpl
lret
fneni(8087
sarl
vmovss
push
pop
ljmp
in
lea
push
repz
sub
sbb
mov
fistpl
addb
lret
ret
out
add
cmpsb
fisttpll
mov
xchg
lock
mov
adc
int
jno
inc
inc
jl
fwait
shlb
cmc
or
sbb
dec
loopne
cmp
push
test
sbb
stc
pop
iret
sub
push
mov
cmpb
sbb
and
imulb
rol
push
push
fldt
in
mov
dec
ja
add
imul
add
push
cmpl
mov
ss
aad
sbb
into
loope
lea
cmp
lock
gs
push
jmp
inc
incl
sub
mov
dec
subl
sbb
inc
mov
scas
xchg
jbe
aaa
mov
outsb
call
inc
fcomps
push
sub
cmp
rcl
mov
loope
push
mulb
loopne
pop
icebp
inc
pop
push
enter
pop
dec
fimull
push
add
or
xor
idiv
cmp
fimull
out
dec
add
repz
lcall
cltd
mov
mov
or
jl
mov
leave
xchg
notb
adc
shl
fnstsw
cmp
push
jae
cmp
adcl
pop
lret
mov
sub
jp
sub
mov
fldt
mov
mov
imul
call
int3
mov
fstpl
cmp
mov
imul
ret
ret
cmp
outsl
sbb
sub
test
orb
xchg
lcall
loop
shll
stc
fdiv
aaa
ror
push
lods
notb
out
paddusb
xchg
fistpl
orb
fldl
xor
sarb
addl
fcom
adc
lea
and
mov
cmp
xchg
inc
push
in
or
mov
and
cmp
roll
imulb
xchg
jmp
idivl
ror
repnz
aad
fisttpl
dec
fcom
sub
add
jo
sbb
push
das
adc
lret
mov
cs
push
mov
xchg
fldl
jno
jmp
pop
fwait
inc
cmp
out
inc
adc
out
fcmovnbe
mov
vpsubb
outsb
push
fildl
mov
popa
loopne
out
cs
jnp
stos
push
fcmovnu
in
dec
adc
cmp
fneni(8087
sti
outsb
imul
sarb
inc
push
fldt
cmp
inc
add
add
cmp
inc
jge
iret
enter
movsb
sbb
dec
mov
lret
jo
dec
cmp
mov
mov
mov
or
sub
pop
cmc
mov
aam
mov
push
lods
inc
cmp
jge
pop
jae
lods
mov
pop
mov
lahf
fnsave
outsb
jb
push
stc
shrl
push
or
dec
mov
aas
stc
add
fldt
or
ds
mov
dec
xchg
xor
stos
fisttpl
orb
hlt
in
jecxz
aad
es
insl
cmp
push
fcmovnb
lcall
fisttpl
xchg
xchg
sub
inc
pop
mul
popa
outsb
mov
loop
lock
add
fdivrs
jno
lea
and
ret
jecxz
shlb
mov
or
cwtl
adc
cmp
add
sar
aaa
fildl
pushf
gs
fistl
jne
sub
cmp
sbb
mov
push
jbe
xor
inc
call
inc
jp
mov
pop
jle
or
and
stos
mov
sti
in
adc
in
mov
ljmp
daa
cmpsb
ret
lcall
or
leave
pushf
push
pop
movsb
jae
fcomi
cld
lods
je
fcoml
inc
rcrb
lcall
sahf
pop
xor
sbbl
mov
call
sbb
xchg
in
cmc
fstpt
jg
xor
lret
loope
xchg
test
mov
pusha
lahf
xchg
fcomi
dec
and
mov
or
and
mov
cld
mov
and
jno
cltd
lea
scas
push
push
add
xchg
lcall
aad
int3
sarb
fisttpl
imul
ss
cld
fistl
std
ret
push
xor
mov
mov
popf
mov
fwait
icebp
mov
push
lods
in
jp
jb
clc
call
lcall
fistl
add
aad
adc
jg
sub
cmpsb
imul
xchg
orl
push
aaa
pop
fcmovnb
stos
jge
push
adc
negb
roll
mov
mov
arpl
fistps
std
pop
push
sub
mov
aad
ljmp
fistpl
adc
jb
cmp
xorl
fisttpl
dec
lods
loop
es
roll
aam
fldt
mov
pop
jne
movsl
insl
dec
cmp
jmp
fcmove
test
icebp
inc
mov
stos
scas
fistpl
push
imul
jbe
movsl
push
dec
cmp
loope
seto
sub
xchg
clc
cld
adc
jecxz
jo
popf
push
imul
into
jg
cmp
adc
clc
adc
fcos
rcrb
into
xchg
fisubrl
push
sub
cmp
sub
pop
in
jl
out
cli
adc
inc
outsb
imul
arpl
fcmovnu
mov
dec
jmp
movsb
pushf
icebp
fidivrl
pop
stos
test
jne
nop
sub
sarb
fstpl
cwtl
adc
imul
or
stos
lahf
lahf
test
jmp
cmp
stos
mov
pushl
and
and
mov
cmp
cli
xor
adc
fdivrl
lcall
fcmovbe
add
push
cmp
addr16
jge
pop
jl
and
icebp
adc
test
bound
outsb
push
dec
rcll
sbb
in
push
mov
add
inc
cmp
xchg
aad
in
adc
xchg
in
adc
mov
xlat
sbb
adc
in
sub
divl
out
lret
in
cmp
gs
mov
xchg
test
cmc
xor
jl
mov
adc
popf
jnp
pop
stos
pop
loopne
aam
shrl
out
adc
push
mov
outsl
push
out
outsl
push
in
ret
add
xor
pop
clc
push
scas
or
cmp
sbb
sub
mov
mov
imul
jle
dec
outsl
dec
add
imulb
inc
pop
fstl
jge
call
pop
lahf
mov
fstpt
cmp
mov
adc
fisttpl
je
fistl
les
fistl
and
or
ja
dec
push
push
mov
out
inc
call
jmp
inc
mov
das
std
test
fisttpl
movsb
cmp
scas
loop
xchg
jle
loopne
fstpt
adc
fucomi
add
dec
cwtl
xchg
push
fsts
in
add
ljmp
lods
jne
sbb
fcompl
or
fisttpl
cli
add
fildl
repz
hlt
icebp
in
sbb
cmp
scas
add
push
in
jns,pt
push
sbb
mov
addr16
lcall
sub
sub
fmull
mov
mov
inc
sub
fcomp
add
push
lahf
call
jmp
popf
pop
lret
addl
cmp
sbb
mov
cld
mov
jg
mov
pop
dec
xchg
incb
pop
fcomi
lock
cmp
cmpl
pop
cmp
jns
shll
or
dec
pop
lret
adc
hlt
leave
jbe
mov
call
test
int
lds
fistl
and
loopne
lcall
cwtl
in
pop
pop
jno
rcr
or
xchg
xchg
scas
sub
sbb
icebp
into
fwait
add
inc
inc
inc
sub
int
add
daa
fldt
sti
and
or
outsl
add
cmc
shlb
pushf
icebp
lret
leave
sahf
sub
pop
in
mov
push
lods
stc
call
sbb
mov
das
mov
aaa
push
iret
xor
and
out
pop
repnz
mov
mov
mov
mov
jecxz
iret
hlt
fistpl
jns
fstpt
mov
repz
hlt
sub
sub
lahf
mov
pop
dec
call
sub
stos
stc
cmp
push
in
jp
xchg
adc
pop
fstpt
int
jae
iret
fwait
mov
lds
jbe
jo
scas
shrb
adcb
mov
or
cmp
pop
mov
and
mov
fistl
dec
adc
xor
sub
mov
fildl
rclb
loopne
fidivl
inc
je
sub
pop
iret
fs
ret
lahf
adc
cmp
xchg
adcl
ja
or
leave
push
fisttpl
mov
cli
inc
sbb
inc
sbb
fbld
mov
adc
xchg
mov
fcoms
pop
repz
ja
add
inc
stos
sbb
fstpt
mul
insb
fcmovnbe
xchg
jno
cmpsl
mov
daa
xlat
cmp
sub
je
lock
les
xor
ss
xor
dec
jmp
fwait
cwtl
inc
pushl
dec
fcmovnb
fcoms
neg
test
push
inc
aas
rol
adc
lods
mov
xchg
pop
fistl
jg
inc
mov
in
dec
fcmovb
js
aam
pop
cmp
inc
inc
pop
sbb
mov
fwait
insl
mov
push
jae
cwtl
loopne
fisttpl
xchg
js
cld
lds
push
fsubp
clc
gs
dec
fwait
push
jg
cli
mull
arpl
fisubl
insb
sbb
inc
pop
cmpsb
push
xchg
insl
fwait
jecxz
gs
fildl
sbb
mov
or
mov
ficoml
int
in
cmc
adc
xchg
mov
fildl
jle
std
cmp
dec
xor
pop
lcall
or
fcmovnb
loopne
and
or
es
mov
fistl
arpl
or
cld
add
insl
jmp
imul
stos
repz
mov
or
dec
test
push
xor
stos
sub
scas
daa
jb
jl
xor
rcrl
and
sub
xchg
fistpl
xchg
pop
mov
inc
add
hlt
mov
push
dec
jnp
push
loop
jle
cmpsb
xchg
fsubrl
data16
test
adc
paddw
test
outsb
xchg
outsl
inc
fnstcw
mov
das
scas
mov
test
adc
stc
sbb
imul
fstpt
sub
xchg
neg
leave
rorb
loopne
dec
jp
push
pop
nop
aad
sub
shrb
int
aam
or
call
jns
je
push
cmp
xchg
data16
push
imul
ret
cvtdq2ps
jp
jmp
popf
adc
ljmp
ret
mov
fimull
ja
push
xchg
in
fistl
jno
adc
pop
stos
push
or
js
roll
add
mov
lods
adc
xchg
jnp
xor
push
jle
aam
push
xchg
nop
aas
push
repnz
std
jmp
aas
loopne
mov
lods
cmpsb
xor
fisttpll
sarl
nop
pop
daa
pop
push
ljmp
jo
jge
xchg
pop
push
and
pop
or
mov
ds
repnz
cmpsb
shr
in
es
sbb
fdiv
adc
push
xchg
mov
sub
pushf
in
sbb
pop
clc
stos
sub
fstpt
inc
stos
test
xchg
fsub
shll
push
jl
mov
out
insb
andl
mov
xchg
stos
mov
jmp
test
push
lea
dec
pop
leave
sub
cltd
adc
dec
push
loopne
cli
pop
mov
pop
jg
es
fwait
adc
xlat
or
add
arpl
inc
xor
cmp
or
sbb
icebp
xor
jge
out
fsincos
xor
sarl
in
mov
into
cmp
mov
adc
aad
js
push
xchg
xlat
cmp
adcb
sbb
inc
xchg
insb
dec
mov
add
in
push
loope
adc
gs
lea
mov
xchg
hlt
out
dec
cmpsb
in
add
fucomip
lret
cmp
mov
imul
clc
lods
or
inc
sti
jmp
ljmp
scas
es
xor
adc
push
js
xor
cwtl
je
adc
pop
push
fdivs
es
bound
push
cmc
inc
inc
fisttpl
push
mov
stos
xlat
clc
sub
push
aad
inc
dec
mov
cmc
push
cld
ljmp
jae
lahf
push
out
ret
mov
loopne
xchg
out
xchg
stos
jmp
rcrl
scas
add
fbstp
xchg
jecxz
lcall
test
lock
repz
push
jg
and
xor
frstor
xchg
in
jne
bound
mov
add
xor
stos
jbe
loopne
icebp
stos
dec
mov
in
rcrb
push
jns
sub
mov
sub
mov
lock
and
xchg
xlat
xchg
push
sub
stos
sub
dec
push
mov
rcrb
push
jg
mov
pop
push
lods
imulb
mov
sahf
popa
stos
adc
test
rorb
fcoms
sbb
stos
jecxz
and
push
cmp
dec
xchg
divb
jmp
movsl
dec
sub
mov
jo
out
cmp
xorb
in
ljmp
push
into
mov
dec
xor
adc
arpl
mov
lcall
pop
inc
sub
adc
push
jmp
cmp
loop
pop
xor
xchg
cli
lods
sti
cmpsb
mov
fsubr
into
pop
jns
lods
aad
sarb
in
add
pushf
sbb
fwait
and
lret
cmpsb
out
std
lret
in
int
stos
inc
push
das
inc
xchg
cmp
subl
daa
sarb
aas
add
adc
addr16
frstor
and
jae
icebp
or
iret
aad
in
stos
mov
inc
std
dec
repnz
scas
movsb
sti
sub
loop
mov
inc
lret
mov
out
lods
push
mov
int
pop
lds
insl
or
jle
iret
push
jb
imulb
or
mov
push
lcall
scas
lods
pop
jb
sar
repnz
or
insl
mov
lods
dec
int
pop
cmpsl
iret
pop
lock
cmp
nop
sub
sbb
and
mov
add
out
dec
lods
aad
and
adc
repz
push
sti
pop
lods
push
dec
push
ret
sbb
fnsave
add
dec
adc
stos
push
repz
fldcw
movsl
or
insl
cmp
push
pop
mov
filds
cmpl
xchg
nop
jle
fbstp
sbb
xor
mov
adc
clc
jecxz
jo
mov
lcall
add
xchg
mov
inc
or
outsl
outsl
push
lcall
sub
sbb
cmp
decb
data16
mov
adc
cmp
xchg
outsl
idivl
add
stos
int
mov
loop
mov
jae
xchg
add
dec
loope
insb
daa
loop
and
lods
push
out
shll
jp
stos
loope
fisubrl
stc
inc
mov
les
std
js
andl
fisttpll
lods
jl
rcll
sub
mov
cwtl
lcall
sbb
sbbb
sbb
daa
inc
clc
lret
dec
sbb
and
xchg
fistpl
dec
xor
ja
ds
jbe
out
mov
xor
bound
fnsave
jns
sub
jnp
int
push
popa
or
xor
in
fst
in
pusha
xor
xchg
or
das
fisttpl
bnd
or
dec
stos
fistpl
mov
mov
leave
mov
aad
push
fcmovnbe
lock
lahf
aas
loopne
xchg
shlb
fcmovnb
ret
adc
jns
fists
sbbl
icebp
cmp
rcr
fdivl
push
int
pusha
mov
sbb
dec
out
add
fisttpl
stc
gs
mov
test
fimull
hlt
cmp
sbb
push
fcoml
leave
or
sbb
out
ficompl
lds
ret
add
daa
imul
lods
popl
mov
inc
push
adc
cmp
add
stos
mov
xlat
int
xchg
loopne
pop
adc
jp
lods
shrl
ret
fistl
fnop
stos
lahf
dec
pop
fcomi
mov
mov
cmp
mov
stos
mov
mov
mov
aas
push
scas
and
and
popf
adc
aad
pop
cmp
and
fnsetpm(287
xor
stos
cmc
pand
enter
fwait
pop
jnp
into
ret
test
xchg
sub
fcmovne
dec
jge
sbb
outsl
push
pop
clc
frstor
popa
mov
xchg
repz
clc
push
cwtl
sbb
fistpl
decl
pop
fldt
dec
lret
or
sbb
cltd
das
sbb
data16
xchg
mov
cmpsl
icebp
pop
sub
jne
sahf
aaa
xchg
push
out
mov
mov
sti
jge
loopne
mov
sub
push
pop
jno
inc
cld
add
test
cmp
sub
jne
fisttpl
mov
cltd
sbb
ret
nop
stc
cmp
xchg
insb
lret
jge
jmp
sbb
push
stos
fsubs
mov
ud0
jne
int3
sub
push
dec
stos
push
negb
push
xor
xor
in
lods
or
fidivl
bound
cltd
imull
lret
push
dec
lret
loopne
daa
jb,pt
cwtl
repz
inc
adc
stos
fimuls
cmp
adc
adc
xor
mov
stos
adc
test
jne
cmpsb
xor
jmp
jb
lcall
adc
cmp
cmp
cmpsb
dec
xchg
dec
mov
xor
clc
arpl
xchg
pushf
push
int
push
mov
mov
outsl
aaa
filds
lods
pop
xchg
push
mov
push
cmpsl
cmp
testl
fisttps
mov
idivl
fcmovu
clc
lds
bound
jecxz
fcmove
ret
ss
cmpsb
in
ja
lods
push
pop
stos
cmp
xchg
in
pop
mov
rolb
mov
mov
stos
lods
jp
mov
popf
fistl
orl
enter
cmp
jmp
adc
loop
adc
inc
out
inc
dec
insb
loop
dec
ljmp
jno
jmp
fwait
roll
and
lret
stos
fildll
enter
lret
cs
sbb
imul
rcrb
mov
sub
fnsave
lret
pop
lahf
push
test
icebp
outsl
pop
jle
lods
pop
pop
aad
mov
inc
in
int3
insl
jecxz
and
test
jmp
lds
sbb
push
and
in
stos
add
stos
jl
or
dec
mov
mov
adc
clc
enter
je
mov
ret
xchg
lods
test
xchg
imul
movsb
xchg
jae
stos
lock
lds
mov
jp
scas
jae
sbb
lret
lds
sub
sti
push
lods
push
leave
xchg
insb
push
loop
jae
mov
jle
in
inc
outsb
nop
mov
pop
stos
fildll
jo
cmpsb
cltd
pop
loope
mov
cmc
call
xchg
rcrl
scas
xchg
push
cmpl
sahf
push
nop
inc
push
icebp
aad
sub
insl
out
sbb
xadd
lahf
jb
fmull
push
loop
or
int3
push
sbb
ret
sub
fidivrl
sbb
and
les
in
arpl
enter
ficompl
push
int3
adc
icebp
stos
cmp
imul
repnz
scas
call
lds
fistpl
jmp
bound
cld
sub
test
fisttpll
or
lret
stc
xchg
test
rcrb
movsl
or
and
sub
push
or
outsl
loop
test
dec
fildl
icebp
pop
sbb
loope
sub
mov
or
insl
imul
lahf
mov
je
mov
push
lcall
fistl
mov
push
fcmovnu
push
negb
test
mov
mov
mov
sbbb
int
mov
fidivrs
sbb
mov
sub
repz
lds
in
xchg
pop
adc
push
xchg
mov
aaa
cwtl
mov
sbb
xor
nop
sbb
outsb
fimuls
jno
hlt
bound
in
mov
aad
je
loop
jmp
cmp
int
push
jns
pop
pop
lods
push
pop
fldenv
pop
jp
gs
cli
jle
cmp
add
inc
sarb
cmpsl
push
mov
pop
push
and
addr16
loop
or
jnp
sub
hlt
xchg
xlat
insl
bound
or
and
sub
push
rcl
inc
icebp
mov
in
jecxz
pusha
jae
je
cmp
inc
outsb
xlat
test
lds
movl
cmp
or
xchg
mov
std
lcall
add
jnp
lock
cmp
sti
push
pop
in
repnz
adc
lahf
xlat
cld
jns
in
cmp
jmp
sarl
jo
repnz
sbb
pop
popf
push
mov
popa
insb
ljmp
lcall
jae
push
ds
loopne
stos
mov
mov
jmp
das
dec
daa
out
adc
hlt
aaa
push
fdivl
jl
jg
test
add
or
repnz
int3
inc
out
mov
stos
in
fwait
or
pop
lahf
dec
fnstcw
push
repnz
cmp
jecxz
out
dec
outsl
or
adc
jmp
jne
neg
dec
mov
cli
fcmovnb
jns
test
mov
sbb
in
lods
jmp
fistl
aaa
and
stc
pop
pop
call
mov
scas
fcmovne
xchg
dec
aas
or
int
loopne
sarl
mov
xor
sbb
xchg
pop
bound
cmp
xchg
dec
js
stc
and
repz
jecxz
call
fstpl
push
cmp
inc
adc
pop
jae
pop
inc
or
mov
cmp
fcomi
repz
sbb
mov
outsl
mov
ja
pop
ljmp
stos
stos
repz
sbb
cmp
inc
push
pand
test
push
mov
sub
cmp
pop
fldenv
jecxz
mov
mov
push
and
xor
mov
or
out
and
fisttpl
outsl
pop
out
hlt
popf
dec
push
mov
les
out
shrb
movsb
add
loope
leave
jno
mov
imul
pop
sbb
test
mov
push
mov
std
xchg
xlat
fdivrl
xchg
inc
fnclex
lock
rcrl
push
je
fildl
or
fisttps
out
rcr
aas
pushf
pop
andl
push
lods
mov
or
xor
fildl
ljmp
pop
cmp
imul
fcomps
movsb
dec
adc
fcmovb
incb
in
or
icebp
pop
nop
aaa
sub
enter
and
fistpl
mov
jl
xchg
lock
pop
xchg
jne
xchg
lods
ds
out
loop
pop
inc
call
pop
sbb
loopne
push
pusha
sahf
or
pop
xor
xor
push
push
lcall
inc
mov
push
jae
aad
push
push
testb
lcall
std
and
fistpl
imul
cmpl
ffreep
adc
shrl
mov
aad
mov
sbb
data16
mov
scas
fcmovne
inc
fdiv
in
or
loopne
sarb
and
ja
addr16
and
ds
adc
pop
cmp
shl
in
jge
push
pushf
subb
cwtl
hlt
and
pop
xchg
xchg
xchg
inc
xor
fwait
out
shl
sub
jmp
enter
lock
ss
add
jecxz
fistl
mov
pushf
push
mov
rclb
mov
ret
inc
stos
jbe
or
lret
es
fstp
and
xchg
je
scas
arpl
pop
sti
lods
xor
iret
pop
push
mov
sub
adc
mov
lret
xchg
pusha
test
pxor
mul
outsb
xor
cmp
push
ret
andb
xchg
xchg
in
leave
test
push
outsl
jecxz
bound
ja
imul
adc
fbstp
jle
or
sbb
and
ja
outsb
mov
jmp
inc
jmp
mov
insb
xchg
loope
add
push
mov
dec
inc
or
fwait
leave
fstpt
in
movsb
loope
mov
enter
fmuls
adc
call
scas
cmp
pop
iret
mov
icebp
daa
inc
lods
rcl
fisttpl
mov
repnz
mov
sub
xor
and
fldt
adc
pop
sti
loopne
out
inc
stc
lahf
fwait
inc
in
xchg
add
fidivrl
xchg
mov
fcmovnu
and
and
repnz
pop
dec
fcompl
add
pop
fldt
mov
xchg
and
les
idiv
fistpl
cltd
lret
adc
add
sub
sub
iret
mov
and
sub
push
inc
or
fwait
outsb
xor
mov
dec
push
jge
fldt
push
fsubrp
mov
sbb
mov
movsb
mov
outsb
enter
mov
jle
lret
mov
sar
fldt
xchg
fistpl
movsl
or
fcmovnb
push
and
divl
xor
adc
dec
push
adc
and
and
das
outsb
dec
pop
repz
fnstenv
jg
ljmp
and
scas
mov
decb
and
fistl
inc
adc
lock
clc
mov
adc
stos
pop
add
sbb
cmc
jecxz
sub
dec
cmp
jmp
outsl
iret
or
int3
aaa
mov
std
xor
xlat
mov
fcoml
fcmovu
lret
and
sub
mov
hlt
lods
ja
fwait
mov
jg
fildl
in
loopne
or
xor
mov
add
mov
fsubs
dec
inc
xchg
popf
mov
xorl
pop
jb
xchg
gs
mov
jbe
aad
aaa
frstor
fs
mov
fldt
inc
out
lcall
adc
sbb
jne
leave
ficoml
dec
fiaddl
daa
aam
fstpl
lcall
sbb
inc
mov
dec
jmp
repz
xchg
cmp
jne
nop
xor
mov
cmovnp
xchg
jmp
mov
shrl
inc
jge
pop
push
mov
add
test
and
in
or
cmp
ret
jbe
inc
dec
jmp
add
or
dec
andb
int3
clc
rcr
fldcw
xor
fucomi
mov
and
fisttpll
add
mov
dec
sub
outsl
sarb
cmp
in
fistl
mov
leave
cs
inc
xor
or
lret
aaa
jae
addr16
or
push
negb
inc
ffree
filds
fildl
add
lods
loopne
xor
lahf
out
jg
xor
ljmp
sbb
cmp
mov
adc
fisttpl
icebp
cmpsl
orb
fisttpl
add
ds
adc
in
push
je
es
popf
std
fidivl
jb
sub
push
inc
xchg
lock
sbb
fstp
fsubrl
call
mov
and
test
into
or
mov
and
mov
cmpsl
pushf
jge
xchg
sbb
add
pop
loop
dec
cmp
pop
mov
jg
outsl
xchg
pop
repnz
out
cmp
rcr
dec
iret
cmp
or
stc
fldt
clc
adc
mov
test
clc
push
push
test
dec
push
repz
dec
sahf
xor
fwait
pop
cmc
and
jmp
jg
repnz
sub
sahf
daa
xor
neg
inc
std
stos
add
add
loop
push
clc
mov
mov
inc
pop
cld
adcl
xor
sub
movsl
pop
loop
add
insb
pop
popa
jne
xor
ret
bound
xchg
fldt
mov
add
add
xchg
gs
push
int
push
push
data16
jmp
dec
rclb
testl
jnp
es
sti
arpl
iret
sub
cmpb
fiaddl
xchg
enter
sti
cmp
neg
push
dec
or
arpl
push
sub
sbb
adc
mov
xor
mov
or
fldt
subb
pop
xchg
jb
dec
mov
mov
call
fcmovnb
lahf
cmpsl
imul
stos
xchg
fcmove
mov
test
adc
dec
fistl
aad
mov
xchg
lcall
cwtl
loop
dec
fistpl
inc
imul
fucomi
out
or
nop
test
inc
popf
loope
mov
ja
lret
fwait
arpl
mov
xchg
lahf
loopne
sarl
push
sti
mov
bnd
dec
push
cmpsb
fistl
dec
push
lcall
fisubl
dec
push
mov
fisttps
clc
call
or
aas
test
and
inc
push
ret
rorb
and
dec
xor
dec
frstor
sbb
mov
stos
dec
xor
push
nop
loopne
test
dec
clc
or
inc
mov
loop
or
adc
test
test
ljmp
leave
shll
addr16
fcompl
adc
or
les
xlat
mov
test
out
fists
jb
imul
push
dec
xchg
sti
cmp
mov
lcall
mov
aas
int
pop
scas
fimull
ret
mov
dec
and
loop
pusha
je
xor
xor
call
push
repz
cmpsb
js
arpl
rorl
xchg
movsl
in
add
js
jae
lods
and
pop
test
pop
xchg
add
icebp
push
outsb
loope
fcmovb
sbb
sti
test
clc
inc
mov
sahf
roll
push
je
data16
pop
stos
fistpll
shl
mov
stc
adc
dec
in
or
shll
mov
outsl
cwtl
pop
jle
in
cmp
out
dec
xlat
sub
pop
xor
mov
cli
bound
push
xchg
sbb
inc
rclb
sbb
and
xchg
icebp
movsl
xor
fldt
xor
cltd
cwtl
fwait
pop
mov
push
sbb
ficoml
mov
mov
push
fucomi
lahf
jno
add
stos
jb
stos
clc
mov
sbb
mov
js
cmp
sti
lret
ret
dec
sbb
testb
fldt
cmp
push
pop
scas
dec
mov
cmpsb
inc
push
xchg
sbb
push
mov
cmp
cmp
jg
push
fildl
mov
inc
fstpt
mov
call
int
mov
push
adc
mov
adc
fistl
repz
push
xor
cwtl
clc
dec
jae
mov
inc
fs
push
pop
fistl
mov
jp
insb
aas
xor
lret
mov
scas
adc
and
cmp
iret
outsl
mov
imul
popa
inc
loop
adc
mov
jmp
xchg
es
pop
sbb
rcl
cmc
negl
mov
mov
fldt
mov
jecxz
in
add
loope
in
push
sbb
icebp
lods
pop
enter
rcrb
fisttpl
ret
rcrl
dec
fcmovne
cltd
or
adc
outsb
fildl
lahf
mov
ret
in
out
sub
andl
lock
shrb
and
xchg
push
mov
into
xchg
mov
gs
sbb
cmp
test
and
mov
ret
mov
adc
jg
and
leave
mov
int3
js
lods
or
insb
mov
fstpt
repz
fistl
sub
ja
aam
push
cmp
fimull
xlat
shll
std
jmp
sub
fbstp
in
inc
stos
mov
sbb
jnp
outsl
xchg
adc
mov
inc
jne
push
sub
cmp
adc
stos
lods
xchg
dec
inc
daa
shll
fists
push
push
clc
mov
push
mov
inc
dec
fimull
xor
push
lock
mov
fucomp
and
dec
mov
push
sbb
and
pop
pop
cmc
out
stc
fstps
mov
xor
movsl
mov
xchg
pop
xchg
adc
loop
cmpsl
sbb
movsl
mov
fwait
mov
or
pop
dec
pusha
fldt
ja
lea
xor
mov
les
pop
jl
aas
in
daa
xchg
cli
mov
xor
test
enter
mov
mov
outsb
push
push
cwtl
lds
push
idivb
sub
les
stos
cmp
jmp
ficoml
bound
movsb
ret
scas
pushf
ss
xchg
add
jae
outsb
lret
cmpl
fadd
fcmovnb
jns
btr
out
xor
cmpsb
pop
xor
repnz
pushf
stos
jle
mov
sahf
sub
push
jb
dec
or
xchg
adc
nop
out
jl
fildl
and
in
fildl
cs
add
fstpt
jmp
sbb
dec
imul
sbb
dec
push
jnp
pop
sbb
shl
iret
xor
fistl
inc
outsb
and
test
xchg
leave
xchg
int
lcall
sbb
test
punpcklbw
push
insb
dec
aas
sbb
sub
fisttpl
scas
lret
das
in
sbb
or
in
insb
inc
into
cmp
adc
pop
popa
adc
sbb
push
loope
inc
cli
clc
xor
jo
push
xchg
out
mov
pop
fstpt
sub
adc
fsubl
bound
imul
lock
push
ss
adc
fcmovne
mov
add
fistpl
icebp
lods
dec
sbb
neg
iret
xchg
inc
pop
ss
cmp
cli
loopne
dec
call
ljmp
into
lret
cmp
in
fldt
mov
loopne,pt
adc
rcrl
fstl
fcmovnbe
add
pop
pop
mov
jmp
lods
sbb
push
inc
mov
scas
mov
fdivr
movsb
fisttpll
daa
rcll
das
pop
fs
loop
gs
pop
popa
or
fidivrl
mov
aaa
mov
mov
jns
xor
fucomi
sub
xchg
mov
ss
lret
pushl
out
clc
hlt
inc
pop
daa
dec
loop
cs
xchg
cltd
fiaddl
test
adc
add
dec
xor
testl
cmp
les
mov
pop
out
jp
mov
repz
es
pop
in
xlat
outsl
fisttpl
sub
pop
add
jae
stc
xor
fisttpl
fs
aaa
push
fstpt
jbe
test
sub
pop
xlat
fcmovnu
dec
inc
cmpl
fildl
out
jbe
int
xchg
fistpl
dec
sub
sub
push
push
out
jmp
pop
jnp
pop
push
mov
xchg
lods
outsb
call
sub
test
dec
test
fistpl
jnp
shl
pop
cmp
or
pop
dec
xor
outsb
sub
fistpl
push
enter
sarb
loope
xchg
out
pop
push
in
in
ss
cmc
neg
lret
mov
pop
push
daa
mov
mov
aas
xchg
sbb
test
push
leave
push
aad
sbbb
shll
jmp
pop
rclb
call
xchg
push
cmp
sub
cmc
inc
mov
and
bound
lret
mov
push
test
fistl
jg
cmp
adc
sti
mov
mov
shr
add
mov
insb
adc
and
and
in
xchg
cmpsl
cmc
sbb
add
mov
inc
add
or
scas
stc
and
jno
fwait
stos
inc
sbb
jbe
testb
fildl
hlt
push
movsl
xchg
adc
fistl
fists
mov
fldt
or
pushf
testb
mov
sbb
imul
in
push
adc
mov
push
sbb
out
jg
imul
aam
fisttpl
je
xor
lahf
ja
sub
dec
dec
sub
mov
outsb
fistpl
adc
push
cli
in
jmp
loop
sbb
fwait
cltd
pop
ret
inc
ret
mov
aam
or
into
mov
cmp
fistl
sbb
mov
push
rolb
mov
inc
xor
pop
xchg
mov
movsb
push
jbe
testb
fnstenv
dec
fistl
pop
push
push
in
loope
mov
push
mov
mov
sarb
jo
fistl
push
subl
mov
adc
pop
scas
lahf
fldt
jecxz
sub
xchg
fstpt
jno,pt
adc
inc
incb
push
adc
popf
test
dec
mov
ret
xor
shrl
sbb
mov
pop
addr16
sbbb
mov
fildl
pop
pusha
clc
dec
jo
shlb
rcll
pop
jmp
test
in
fcomp
call
adc
stc
fildl
dec
jb
gs
push
add
fiaddl
mov
loop
add
inc
or
xchg
xchg
push
dec
in
test
out
call
arpl
rclb
inc
adc
xor
sbb
in
pusha
or
xchg
fcomi
cwtl
iret
mov
inc
adc
fs
sub
adc
xchg
lea
jne
fistpl
mov
push
pand
mov
xchg
pop
mov
arpl
cmp
dec
sub
fucomi
icebp
inc
push
cmc
cs
mov
por
jle
push
fistpl
jns
fcomi
fwait
pop
push
mov
sub
jo
aad
sti
clc
mov
neg
ss
sbb
jle
xor
daa
mov
sbb
push
aaa
add
add
jnp
and
jns
jmp
fisttpll
test
xchg
push
mov
fnsave
push
fcom
fwait
ret
cmpsl
fcmovnbe
push
add
insb
pop
inc
or
jb
loopne
jo
ja
in
jnp
add
subb
rcll
inc
ja
je
mov
scas
sbb
mov
std
aad
jns
hlt
stos
stos
loop
in
sbb
rcll
mov
fldt
jmp
cli
scas
lcall
pop
mov
xchg
mov
adc
repnz
int3
dec
test
mov
fldl2t
cmp
outsl
pop
cmpsl
jb
jle
daa
orb
xchg
rol
jbe
je
outsb
push
pop
test
mov
hlt
scas
push
aaa
movsb
in
cmpsl
fildl
add
mov
mov
loop
adc
cmp
adc
dec
adc
insl
and
inc
xchg
ja
test
push
lret
inc
jmp
loopne
fistpll
pop
in
fsub
enter
inc
add
fstpt
xchg
or
les
adc
out
icebp
pop
ljmp
dec
roll
aas
push
pop
inc
stc
cmp
fisttpl
dec
pop
push
jnp
jo
lret
ja
test
ret
loopne
and
sub
jmp
std
movsb
loopne
cmp
dec
mov
pop
neg
adcb
jo
fucomp
jecxz
test
vphaddwq
cmp
repz
std
inc
out
lret
add
fisttpl
xchg
out
iret
and
test
and
jns
jp
cli
mov
cltd
inc
and
xor
lahf
hlt
jnp
add
ljmp
mov
fcmovnu
sbb
jne
fistl
jmp
scas
fcmovnbe
fs
xorl
sbb
xchg
xor
adc
jp
jne
mov
into
test
sub
notl
add
out
lock
lcall
cli
jmp
xor
add
fisttpll
insl
bound
fstpt
xchg
inc
mov
pop
lahf
shr
pusha
movsb
jnp
push
cmp
mov
jo
push
cld
push
mov
outsl
and
dec
fdivrs
sub
hlt
cmpsb
outsl
xor
mov
cmp
mov
xchg
sub
push
jp
in
js
fnstenv
mov
jg
sbb
and
xchg
fisttpll
mov
jbe
aaa
push
ss
into
push
loop
jle
mov
mov
out
fistpl
loope
dec
xchg
sbb
xchg
mov
lret
rorb
cltd
inc
daa
xchg
lcall
dec
dec
pusha
loop
cmp
jno
push
out
and
jmp
xchg
enter
ficoml
filds
lods
xchg
popf
mov
fnop
and
adc
mov
clc
jne
hlt
jo
push
cwtl
aas
fldt
cmp
cwtl
cmc
fwait
jmp
sub
cwtl
mov
jno
orb
cmpsb
shlb
fwait
xchg
les
enter
out
sbb
loopne
jns
subl
loop
mov
jns
bound
xor
ret
dec
pop
cld
and
in
mov
lcall
xor
loop
jae
mov
cmp
gs
mov
push
in
icebp
aam
fs
xchg
cmp
ljmp
testb
jbe
cli
imul
cmc
xchg
outsb
ja
jp
add
lcall
adc
inc
jecxz
adc
jle
push
xor
xchg
mov
jmp
jno
and
cmp
and
adc
insb
out
js
pop
xor
aas
stos
in
and
xor
loop
int3
pop
ljmp
stos
cltd
sbb
insb
test
inc
sarb
mov
lods
sub
xor
aas
pop
push
sbb
jmp
ret
xor
in
jge
cwtl
xchg
inc
loope
pop
lods
movsl
mov
xor
cltd
and
push
jmp
in
push
enter
stos
xchg
scas
and
or
xor
add
icebp
repnz
cmp
scas
cmpsl
adc
mov
push
sub
mov
movsl
mov
fists
lods
mov
test
cwtl
sbb
into
imul
fisttps
iret
insb
xor
cs
jb
sbb
jge
mov
ret
ficompl
sub
mov
out
js
and
ret
dec
ss
push
test
nop
adc
sbb
fdivrs
fdivs
dec
aad
stos
shlb
sarb
mov
jl
pop
iret
stos
rcrl
clc
icebp
sbb
push
das
insl
mov
loop
mov
jge
and
xor
leave
pop
cld
cmp
mov
imul
adc
lcall
xorb
xchg
mov
ja
push
push
pop
loopne
mov
in
sbb
ret
es
pop
iret
adc
jge
out
lcall
push
in
lods
adc
mov
lahf
cwtl
loopne
stos
lds
icebp
adc
push
rcpps
pop
lods
enter
aas
xchg
stos
fimuls
sahf
xchg
add
sbb
cmp
push
sarl
daa
cld
xchg
std
fildll
sub
ja
sbb
and
mov
pop
in
sti
mov
cli
add
out
xor
push
lret
add
jmp
dec
icebp
pop
add
les
add
xor
lods
xlat
or
iret
pop
inc
add
out
jp
arpl
jg
xchg
sti
in
aam
int
out
stos
mov
leave
sbbl
sbb
fistpl
test
adc
scas
adc
mov
mov
cwtl
jmp
insb
stc
push
sbb
mov
ja
push
in
and
insb
push
fidivl
rcr
or
insl
push
lcall
and
mov
mov
xchg
cltd
stos
push
nop
outsl
sub
outsl
dec
les
lcall
pop
mov
jmp
jb
stos
inc
aaa
add
sbb
mov
scas
insl
sbb
fcmovu
lds
push
test
lcall
xlat
push
xchg
mov
in
add
or
test
sbb
push
test
pushf
xchg
cmp
mov
sbb
jns
clc
pop
dec
push
sbb
fwait
daa
sti
enter
mulb
rcl
fwait
outsb
jnp
outsl
mov
xor
inc
add
xchg
push
repnz
pusha
outsl
push
cld
jae
cwtl
loopne
fisubs
into
jnp
fistl
sbb
push
in
arpl
movsl
sbb
imul
jp
fcmovnb
xchg
inc
xchg
dec
testb
call
imul
int
addl
or
lret
mov
sarl
and
shlb
fcmovnbe
ret
hlt
inc
loop
fldl
daa
xor
mov
pop
push
or
mov
sub
movb
es
call
push
cld
call
aam
sbb
pop
stos
lret
popa
in
mov
and
les
aam
repnz
imul
fidivs
js
pusha
pop
mov
cmpsl
outsb
out
xchg
sub
fistps
rcrl
mov
call
add
fldt
ljmp
loope
pushf
jp
stos
push
out
scas
ret
sub
xchg
loopne
mov
imul
jbe
lds
out
cmp
pop
outsb
xchg
push
pop
jp
push
mov
mov
or
loop
mov
pop
dec
adc
sbb
aad
pushf
sub
insl
je
idivb
jb
sbbl
fistl
bound
dec
mov
shlb
repz
dec
mov
movsl
aaa
andl
mov
jmp
cli
sbb
xor
mov
push
push
in
pop
add
mov
outsb
xor
lahf
cmpsl
hlt
repz
frstor
popf
enter
jae
jne
dec
in
dec
cwtl
loopne
test
fistpl
sub
shll
loopne
push
xchg
and
lds
scas
lods
lock
or
int3
mov
cmp
ret
and
jecxz
stos
or
ja
fildl
mov
mov
mov
nop
pop
xor
jae
pop
jle
hlt
out
add
jns
outsb
sub
xor
call
dec
jnp
mov
ret
cwtl
sbb
sbb
sbb
shlb
push
aad
xor
fldt
cmc
dec
sbb
fildl
test
jbe
jno
add
loope
push
sarb
lret
push
clc
xchg
sub
outsb
mov
xor
outsl
sbb
dec
fldt
push
pop
jb
inc
push
jg
pop
jp
mov
jno
arpl
fsubs
jl
outsb
xor
push
jo
ficoml
and
cmp
cmp
fwait
sbbb
mov
data16
sbb
in
or
fcmovnu
lods
gs
fmull
out
ss
js
or
lea
loopne
xor
adc
inc
fstpt
nop
push
or
addl
jge
out
cltd
lcall
fisttpll
sti
lahf
ss
push
pop
or
xchg
add
mov
in
pop
ret
jl
pop
ret
mov
movsb
mov
pop
xchg
fsubs
sbb
ds
in
in
cld
out
jb
fldt
fistpl
mov
fsubrl
fstp
cltd
xor
pop
sbb
push
cmp
inc
inc
fistpl
loopne
and
movsl
jle
fldl
std
push
call
es
in
sub
add
daa
xor
mov
repz
dec
push
mov
sbb
fisttps
ret
jmp
in
pop
imul
sti
fcmovu
rcll
insb
jns
sub
cmp
and
fildl
filds
in
lock
inc
leave
jmp
ret
push
fstpt
ljmp
loop
fldt
scas
add
and
in
testb
jnp
jge
sbb
pop
push
fistpl
pop
cmp
fldt
jb
sbb
scas
sub
imul
adc
mov
inc
insl
fisubrs
pop
jo
ficoml
je
fcmovne
stos
mov
mov
scas
sti
lcall
loopne
inc
fs
dec
lock
xlat
dec
or
fisttpl
fsubl
lcall
adc
mov
xlat
sbb
fisttpl
xchg
fistpll
mov
fistpl
test
xchg
mov
mov
out
pop
inc
add
xor
sar
loop
jl
insb
fidivrl
fists
scas
mov
call
ljmp
in
rorb
inc
push
fistl
or
fldt
xor
lea
sub
jmp
sub
sub
mov
cs
cld
clc
add
popa
push
sbb
push
out
clc
push
jne
cmp
fcmovnu
push
sbb
push
adc
pop
bound
jmp
push
cmc
inc
add
add
sahf
pop
pop
inc
jmp
loop
mov
bound
sbb
pop
loopne
movsl
cmp
jmp
insb
mov
jmp
dec
mov
clc
pop
js
jmp
dec
jl
dec
mov
sub
add
cmp
loop
mull
xor
sub
pop
arpl
dec
inc
add
insb
cmp
or
hlt
fistl
dec
xchg
loop
insb
dec
adc
shll
lods
mov
fistl
pop
cmp
cmp
fisttpl
mov
pop
data16
inc
leave
xor
jp
arpl
jns
call
cmp
outsl
or
sub
pop
sbb
xlat
aam
popa
pop
sbb
dec
lret
cmp
rorl
mov
sub
jp
mov
fildl
jmp
loopne
jne
jge
ss
xchg
push
jb
adcb
inc
dec
cmpsb
xchg
fisttpl
std
fisttps
sbb
lret
outsl
ss
movsl
mov
jae
dec
dec
fistl
adc
mov
addr16
daa
mov
cmp
or
ret
push
dec
pop
mulb
jo
inc
pop
mov
scas
dec
or
jg
pop
sbb
ret
fnstsw
dec
adc
add
jl
fcmovnbe
bound
inc
dec
insb
adc
lock
mov
sti
pop
insl
add
fcmovnbe
mov
cmp
push
push
fsubrl
jp
mov
xlat
aam
fimuls
inc
inc
call
jle
fistl
stos
fisttpl
stos
mov
sub
pop
or
jmp
fcmovnbe
xchg
ret
adc
ljmp
xchg
push
push
fwait
iret
rclb
cmpsl
mov
popa
fwait
sbb
push
call
cmpsb
cmp
neg
lods
pop
cmp
sbb
arpl
fcmovu
sbb
sub
fcmovnu
ret
add
cmpsb
mov
add
lods
push
call
pop
adc
sbb
push
sub
fwait
out
fstpt
pop
fcmovnb
jg
xor
enter
int
in
into
fistpl
lods
pushf
sub
mov
add
xorps
out
int
lods
ror
fnsave
pop
idivl
mov
insl
js
xchg
mov
dec
ret
inc
add
sbb
bound
xchg
iret
scas
lret
xor
rcr
mov
xor
bound
push
sub
stos
xor
mov
sbb
add
xor
xor
shl
ret
int
and
mov
in
loop
movsb
das
xor
stos
add
push
xor
cmp
add
fstpl
movsb
sub
fmull
add
inc
mov
hlt
dec
xor
mov
sbb
stos
out
mov
rdpmc
mov
mov
pushf
sub
xchg
icebp
cmp
fistpl
pop
sbb
imul
push
arpl
add
cmpsl
cmp
fistl
sub
out
ret
sbb
loope
sbb
add
adc
rcl
ljmp
dec
pop
push
test
imul
mov
inc
clc
clc
rolb
sbb
mov
xchg
push
aad
add
add
sbb
fninit
test
fisttpl
fidivs
outsl
in
scas
sbb
sbb
lods
sbb
fwait
outsl
sub
xor
sbb
shrl
call
popa
sti
movaps
insb
in
stos
pop
fcmovne
aam
lcall
out
dec
dec
and
or
lret
cmp
lret
or
or
inc
mov
adc
shlb
kmovd
cmp
dec
xlat
addl
icebp
xor
push
push
fnstcw
push
jle
lods
cmp
xchg
and
adc
push
add
test
pop
dec
push
xorb
push
mov
mov
mov
lcall
dec
lret
pop
mov
push
addr16
mov
outsl
xchg
jmp
sbbl
push
ret
in
inc
movl
cmp
mov
xor
jnp
lock
filds
mov
iret
xchg
push
loope
push
out
icebp
fimull
inc
sbbb
cmc
fisttps
fwait
out
leave
sbb
inc
lods
js
cwtl
fnstsw
sub
xchg
and
xor
jp
imul
xor
jnp
gs
lods
sbb
adc
andb
dec
pop
cwtl
je
in
adc
xchg
sub
jae
or
mov
shll
fstps
cmp
sbb
shr
xchg
nop
mov
mov
jl
xchg
test
pop
cmpsb
fdiv
aaa
stos
sbb
cmp
dec
fcompl
repz
stc
loopne
sbb
outsb
pop
sahf
xchg
in
jmp
or
mov
es
cmp
mov
xchg
das
std
pop
push
xchg
or
out
lcall
test
icebp
xlat
leave
arpl
or
lock
xor
loop
scas
outsl
jae
popa
es
imul
sub
or
sti
lcall
pop
add
incl
test
pop
xor
and
jp
cmp
add
lods
cmp
out
or
inc
lcall
incl
xor
lods
xor
jge
loop
or
iret
or
push
insl
sbb
lds
lods
cmp
mov
stos
aaa
and
add
in
jl
lods
sbb
adc
lods
and
add
jge
das
jbe
mov
out
xchg
fnstenv
adc
out
push
push
and
or
jmp
mov
fs
sbbl
lods
pop
outsl
pop
in
pop
push
flds
stos
insl
add
sbb
lods
adc
cmp
jg
add
and
mov
nop
jnp
dec
jp
lcall
imul
push
rcl
fadd
stos
dec
pop
into
xor
stos
dec
lcall
push
les
movsb
pop
test
or
ret
fsubrl
cmp
push
mov
adc
loop
dec
fs
fistpll
jmp
ljmp
aam
push
es
cmp
cwtl
inc
clc
jns
dec
xor
ror
fsubrp
inc
jmp
mov
loop
test
packssdw
mov
and
jbe
addr16
enter
gs
jnp
into
pop
ret
or
imul
lods
stc
sub
orl
xchg
pop
dec
push
xchg
test
test
cmpsb
mov
pop
jne
xlat
fucomi
mov
and
fstpt
or
push
mov
mov
push
imul
push
mov
loop
into
add
iret
test
jbe
mov
int
mov
jnp
scas
mov
mov
xchg
pop
movl
lahf
xor
test
shr
mov
out
leave
mov
mov
fistpl
cmp
xchg
in
and
cmpl
xor
inc
mov
loope
out
into
jnp
fistpl
push
dec
bound
jge
xorl
push
rorl
fstl
bound
xor
call
gs
cmpl
sahf
mov
xchg
insl
fwait
in
pop
sti
inc
lcall
lret
nop
fildl
in
daa
loopne
std
ljmp
in
aaa
loopne
call
into
mov
cli
orl
fistpl
movsb
adcl
clc
in
call
xchg
push
fisttpl
fldl
push
mov
mov
fisttpl
testb
jns
dec
mov
les
dec
sbb
xchg
jnp
dec
or
sti
inc
ffreep
push
xor
sbb
fildl
inc
jne
jb
and
or
pop
orb
enter
mov
fcmovne
mov
mov
in
sub
ljmp
mov
call
sbb
cmp
fistpl
lcall
rcr
nop
jno
pop
xor
shll
lea
jmp
sar
pusha
mov
sbb
imulb
and
bound
mov
push
call
xchg
lods
fcmovb
test
adc
sahf
inc
jnp
and
fcmovnbe
clc
push
outsl
jbe
movsl
fistpl
int3
sbb
and
fildl
popa
add
hlt
jmp
scas
pop
inc
add
lea
sub
aad
mov
mov
das
stos
enter
fstpt
js
mov
xchg
mov
adc
fistl
xor
ret
jl
mov
shll
into
in
jae
jnp
inc
pop
outsl
bound
push
aam
test
push
mov
ret
fcos
rcr
rol
scas
jp
js
mov
jmp
add
fwait
cltd
jle
call
dec
mov
mov
cmp
mov
clc
jl
cmpl
pop
popa
test
mov
mov
orb
out
jnp
jmp
pushf
dec
dec
xor
shrl
in
test
jb
lock
hlt
aad
pop
scas
pop
call
pop
xlat
bound
fimull
ret
jae
pusha
cmc
bound
fwait
iret
mov
notb
test
mov
lods
pop
cwtl
mov
lock
mov
jmp
lcall
gs
jb
and
fisubrl
dec
cld
mov
out
repnz
fsubrs
cmp
xchg
cli
xchg
push
cmp
inc
jp
lock
sub
mov
mov
or
mov
jnp
icebp
pusha
std
sbb
adcl
inc
jecxz
sub
insb
add
dec
sub
xlat
and
dec
gs
pop
push
pop
jno
jo
fldt
xchg
sub
out
mov
add
stc
ljmp
cwtl
mov
mov
sub
icebp
sub
adc
xchg
lock
dec
fidivrl
iret
int
fildl
inc
dec
xor
jge
lds
adc
fisttpl
rcll
jp
cmpsl
outsb
fisttpl
cli
mov
divb
cmp
lock
call
mov
sahf
mov
movsl
or
xchg
adc
mov
pop
sub
push
xchg
scas
imull
mov
and
mov
out
xlat
insl
fildl
dec
out
or
or
push
mov
cmpsb
in
arpl
fisubrl
push
adc
mov
fistpl
aad
dec
adc
sti
mov
lods
pusha
push
rol
pop
jbe
fldt
sbb
repz
push
fistl
stc
add
in
testb
fcmovbe
mov
lea
push
push
out
loopne
or
fwait
leave
imul
and
aaa
out
pop
fisubrl
push
dec
call
xor
test
dec
mov
push
cmp
stos
and
loope
or
mov
andb
dec
hlt
pusha
sub
shl
repnz
clc
hlt
in
fsubl
sbb
lret
popa
fmuls
mov
sub
xor
in
stc
fstl
sti
lea
mov
gs
and
fimull
bound
pop
pop
int
mov
es
shl
or
pop
ja
push
pop
stos
jbe
xlat
fldt
jge
jmp
lahf
jae
add
mov
sub
push
in
cmp
xor
pop
inc
rorb
cmc
aam
fbld
inc
fisttpl
mov
stos
sahf
add
and
je
loopne
mov
fstpt
movsl
das
xor
shrl
cld
sub
sbb
dec
cli
bound
add
and
stos
inc
cwtl
sub
pop
pop
sti
sub
loope
dec
pop
mov
push
call
int
cmpsl
add
das
mov
fst
sahf
push
xlat
fs
fsubl
fnstenv
repnz
ficompl
fistl
pop
pop
sahf
push
jns
pop
fisubrl
inc
lods
pushf
cwtl
sub
mov
pop
adc
add
push
inc
sahf
push
shll
fstpt
jl
mov
sbb
or
add
mov
lret
sub
in
divl
push
xor
js
leave
nop
push
and
inc
filds
add
ret
dec
fisttpl
test
xor
fsubl
fistpl
sub
out
cmp
fstpt
add
andb
or
or
outsb
xchg
and
push
shll
fistpl
lret
ljmp
arpl
cmpb
xchg
fldl
pop
pop
xchg
jp
add
and
and
jecxz
fwait
aam
fstpt
add
adc
fldl
lret
out
bound
lcall
fisttpl
int
cmp
scas
sbb
sahf
xchg
and
pushf
fstpt
enter
ret
sahf
jge
xor
push
jg
lretw
cmp
ud0
fildl
sbb
enter
mov
rcr
cs
ficoml
shrl
lret
xchg
inc
mov
push
jmp
adc
mov
pop
and
icebp
jbe
sbb
les
add
dec
adc
dec
sbb
hlt
lock
movsl
mov
mov
jb
cmp
sahf
daa
fisttpl
dec
movsbl
mov
loopne
rcrb
fidivrl
ss
cli
add
xchg
fldl
ljmp
mov
das
mov
fwait
jne
int
add
mov
mov
notb
mov
inc
or
dec
in
bound
rcr
into
fwait
fnsave
imul
les
fistpll
out
loop
or
mov
loopne
xchg
ss
cmpsl
rcr
sub
mov
das
sbb
divb
sbb
fwait
adc
pop
mov
movsl
out
dec
fstpt
mov
jle
mov
adc
dec
sti
insl
cwtl
mov
jg
push
and
mov
das
jns
lock
adc
mov
repz
mov
inc
fcmovnbe
test
push
cmpsl
xor
in
nop
clc
xlat
xchg
test
pop
lret
aam
fcmovne
incb
cmc
fcoms
jae
pusha
jge
test
sbb
xor
repz
bnd
pusha
fisttpll
pop
push
and
xchg
aas
dec
inc
lcall
inc
fbld
repnz
mov
cltd
js
stc
mov
arpl
or
into
lahf
mov
or
fstpt
cld
shll
pop
xor
xor
adc
leave
movsl
push
lahf
mov
lcall
je
inc
loope
mov
mov
lea
lcall
shrb
notb
sub
inc
ja
add
sbb
lods
testb
jb
cmp
jb
xlat
cli
iret
subb
mov
xchg
lahf
loope
fstpt
xchg
push
es
lea
fldt
insb
jl
aas
dec
cmp
inc
cmp
or
ror
dec
push
in
mov
imul
iret
fst
add
shlb
push
fisttpl
cmc
xchg
aad
imul
xchg
fistl
pushf
sub
pop
inc
add
mov
mov
cmp
es
cltd
pop
mov
jg
cs
cmpsb
dec
xchg
pop
mov
js
and
nop
adc
xchg
ret
daa
or
stos
mov
out
lcall
aas
add
push
sbb
pop
rorb
xchg
outsb
pop
mov
pushf
and
orl
idivb
stos
fdiv
in
pop
fisttpl
inc
cmp
in
shrl
mov
add
testl
out
pop
stos
out
add
jg
xchg
fidivrs
xchg
fnstsw
mov
psubsb
bound
add
repz
and
mov
xchg
and
inc
jp
dec
pop
fstpl
xor
jg
lret
fsubrp
xor
pop
push
jecxz
mov
arpl
jl
lock
dec
cltd
stos
sbb
mov
lods
adc
push
cmp
push
xlat
lahf
andl
fcomi
stos
mov
cmc
stos
adc
inc
dec
xchg
andl
in
jp
idiv
jmp
icebp
inc
sub
jmp
fs
or
and
jle
insb
add
mov
inc
frstor
adc
cmp
inc
sub
lcall
sub
and
orl
lcall
push
mov
imull
inc
jmp
inc
rcrl
pop
and
aad
rcll
add
mov
fstps
pop
adc
push
insb
jecxz
shl
mov
sbb
lret
stos
mov
jo
sub
neg
cli
jl
add
dec
stos
es
sub
or
lock
popa
xchg
jp
fsubr
adc
push
mov
into
jecxz
arpl
sub
sti
mov
inc
and
push
jmp
cmc
fistl
stos
inc
dec
pop
push
fnstenv
cmp
rorl
fisubl
mov
fs
ror
stos
mov
mov
into
adc
fmuls
outsl
sbb
cli
xchg
mov
fldt
shr
rclb
lret
pop
lock
dec
out
add
ljmp
test
xlat
push
xor
jg
call
mov
adc
mov
in
outsl
int3
mov
gs
fiaddl
dec
cmpb
mov
stc
lds
int3
popa
fstpt
add
or
mov
not
pop
fistl
fmull
fs
fimull
test
xor
sbb
das
cwtl
lods
frstor
ljmp
inc
cld
aad
pusha
aas
adc
in
int3
data16
lods
out
sbb
push
pop
ljmp
shrl
fists
pop
fcom
xchg
pop
fisttpll
fistpl
jo
pop
and
aaa
imul
add
fstp
jle
adc
rcrl
fwait
int
mov
mov
cli
insl
mov
or
aaa
add
fcmovne
cmc
andb
xchg
or
jb
iret
ds
push
divl
mov
into
sbb
jmp
mov
push
iret
fildl
xor
lds
fbld
or
arpl
fldt
jge
or
mov
out
test
dec
icebp
xlat
push
jp
arpl
mov
fldenv
hlt
lret
fwait
or
or
dec
ret
leave
popf
aas
jecxz
add
dec
mov
xchg
aad
pop
mov
ja
scas
push
jno
cwtl
mov
decb
aad
inc
lret
inc
icebp
cmp
fstpl
and
arpl
fstpt
push
sub
mov
data16
fisubrl
xchg
outsl
cmp
inc
dec
push
lahf
sbb
mov
jmp
ficoml
mov
mov
sub
mov
cmpsb
mov
imul
pop
mov
or
jle
jae
cmp
pop
inc
mov
das
mov
xchg
jo
in
fcomps
adcl
xor
mov
fsin
stos
mov
and
dec
lds
mov
fcmovne
loopne
or
addl
pop
xor
pop
jle
mov
pop
mov
mov
mov
iret
ret
pushf
xor
clc
add
fwait
imul
cmpsl
lock
inc
ret
add
dec
aad
leave
call
cld
fstpt
sbb
bound
jo
xchg
jle
shl
aam
jb
add
push
je
sahf
leave
pop
add
mov
and
cli
fisubs
insb
pop
in
lcall
in
dec
mov
fstpt
sub
loopne
test
stos
sahf
dec
loopne
mov
add
sbb
pop
xchg
mov
add
xor
xor
dec
mov
fcmovnb
scas
inc
mov
push
stc
ror
dec
stos
jo
sub
mov
sahf
fistpl
pusha
and
ficomps
out
lock
test
popa
xor
mov
call
push
lret
dec
shrl
adc
xor
dec
scas
mov
negb
nop
cmp
fwait
popf
push
lret
lods
test
sbb
call
add
dec
in
cmp
sbb
int3
insb
cmp
fadds
loopne
xor
mov
sub
fildll
mov
cmovs
push
xchg
jle
test
push
cmp
sbb
fisubrl
and
inc
push
mov
mov
and
sbb
rol
aas
and
sbb
dec
jnp
mov
mov
imul
dec
inc
mov
addr16
movsb
pusha
fcompl
aas
ret
test
clc
sti
outsb
and
lcall
fldcw
jae
mov
mov
lea
sbb
add
test
icebp
clc
fimuls
xor
and
adc
fildl
and
and
iret
jnp
pop
push
fisttpl
xchg
dec
and
fucomi
outsl
clc
shlb
sti
lods
mov
fildl
lret
mov
call
and
fldt
call
pop
test
mov
fs
sarb
test
fdivrs
dec
sbb
loope
mov
fwait
sbb
sub
test
jbe
sub
mov
dec
sbb
stos
fldt
push
add
jno
insl
fdivs
enter
cmp
pop
cmp
or
pop
in
movsl
ja
call
cmp
fildl
jne
movl
enter
add
imul
insl
xchg
sar
loope
lock
cmpb
mov
aaa
push
jb
xor
fwait
lcall
ja
cmp
fildl
call
enter
int3
stc
fucomi
push
adc
mov
clc
leave
das
cmp
sbb
fstpt
push
xchg
addr16
add
outsl
pop
pop
sub
mov
pop
mov
sbb
fistl
pop
mov
fildl
mov
inc
fistl
dec
out
cmp
cmp
lret
mov
mov
adc
sbb
bound
fucomi
and
xchg
les
jmp
mov
cmpl
mov
mov
jmp
xchg
loop
push
mov
aas
adc
es
pusha
imul
stc
xorb
pop
mov
mov
dec
push
js
inc
arpl
mov
dec
outsb
jae
loope
jo
cmp
lret
xlat
mov
sbb
push
and
pop
or
sbb
jge
or
xor
mov
cmp
inc
inc
adc
lcall
dec
dec
aas
cltd
cwtl
aaa
sahf
sti
add
xchg
xchg
inc
mov
xchg
push
pop
fisubrl
xorl
arpl
push
mov
cmp
sub
add
add
fisttpl
cmp
or
pop
and
int
push
les
ss
sbb
fistl
mov
mov
mov
fwait
cmpsl
lcall
rcrb
mov
or
fnstcw
xor
fistpl
dec
jne
fdivs
and
jb
sbb
cmpsb
sbb
outsb
jnp
dec
pop
xchg
cmc
loope
fcmovnbe
inc
add
mov
int
outsb
es
cmp
jnp
clc
movsb
dec
cmc
mov
jle
sub
fldt
mov
sbb
les
cltd
fcomi
clc
push
adc
lret
subb
pop
fidivrl
pop
xchg
not
das
mov
mov
push
scas
pop
frstor
jb
rclb
lcall
xchg
push
out
lds
shlb
pop
mov
fdivrl
mov
fstpt
push
pop
fwait
int3
mov
jg
push
popf
mov
mov
or
push
push
ret
push
push
fisubl
in
add
testl
hlt
fisttpl
or
dec
lahf
fcmovnu
loop
lods
int
xchg
sub
loope
add
fisttpl
mov
fldl
xchg
icebp
out
sbb
clc
je
call
fs
adcl
jmp
mov
in
jb
pop
lcall
inc
fcmovne
xlat
scas
or
and
cld
jo
mov
fildl
xchg
repnz
aaa
xor
clc
ja
out
adc
add
fdivl
shll
and
fs
or
lea
out
inc
pop
orb
xor
fcmovnu
mov
xor
out
or
adc
lods
mov
nop
movsl
fisttpll
xchg
mov
or
pop
popa
adc
insl
and
je
sub
fstpl
dec
xchg
iret
xor
lret
or
mov
and
int
mov
adc
adc
lcall
jnp
mov
push
add
dec
stos
mov
lea
fcomi
arpl
sbb
ds
cmp
sbb
out
jnp
cmpsb
sub
dec
jae
sub
jo
fnstcw
lock
xor
fiadds
mov
push
fwait
std
and
orl
adc
jo
in
jp
loop
cwtl
cmpsl
cmp
fidivrs
push
sbb
or
fmul
dec
in
push
repnz
stos
cmc
xchg
fldenv
jo
add
add
lahf
and
lcall
shll
jnp
and
leave
iret
mov
cli
sbb
gs
cmp
fwait
bound
jmp
not
adc
movsb
test
dec
out
test
dec
fsubrs
and
repz
into
jo
xor
pop
sbb
mov
xor
jno
test
push
ret
dec
fsubl
sbb
fisttpl
clc
ja
js
sarl
shrb
and
cmp
pop
xlat
or
orl
lods
adc
xor
out
bound
sub
add
sbb
iret
insb
xchg
loop
lcall
inc
nop
shlb
jnp
lock
jp
cmp
bound
fcoml
lods
repz
je
adc
cmc
ljmp
cltd
loop
cwtl
stos
jb
push
loop
mov
adc
add
push
outsl
dec
push
xchg
pop
xchg
icebp
mull
imul
ja
cmc
xchg
mov
stos
or
lods
xchg
mov
movb
jo
mov
movsl
sahf
add
cmp
cltd
lcall
ss
jb
add
xchg
stos
cmp
ret
lods
mov
jo
aas
inc
inc
ljmp
stos
adc
add
mov
sub
dec
cs
cltd
loopne
adc
xchg
lods
in
stc
outsl
pop
xchg
push
sbb
aam
outsb
mov
stos
popf
push
mov
dec
ds
stos
pusha
jae
loop
fidivrl
inc
hlt
mov
mov
sbb
std
sbb
jns
xchg
mov
xchg
pop
xchg
jecxz
cwtl
fnstsw
push
and
xor
adc
sbb
scas
jge
add
sub
and
xchg
orb
mov
roll
jmp
mov
outsb
jo
in
cmpsl
dec
fldt
lds
sbb
xchg
inc
stos
cmp
iret
mov
pop
pop
movb
stos
in
sub
inc
and
out
sbb
inc
int
inc
sub
je
sbb
shl
xchg
je
testb
push
popa
stos
dec
or
push
jle
inc
xchg
mov
adc
lcall
mov
add
popf
mov
fisttps
jl
ficoms
mov
insb
add
push
push
xchg
cmc
xchg
jns
pop
gs
sbb
fidivrl
cwtl
pop
add
adc
xchg
fldt
gs
sub
stos
pushf
cwtd
sub
cmpsl
sub
aad
jo
mov
out
or
ljmp
push
cld
pop
jecxz
xchg
fists
xchg
mov
loop
addr16
jg
loop
xor
shlb
aaa
insl
mov
xor
fcomip
sub
lcall
fildll
adc
mov
je
int3
sbb
xor
or
adc
sub
or
mov
jp
xchg
stos
add
mov
pop
push
jge
mov
addr16
stos
mov
cwtl
dec
jl
cmp
fidivl
outsb
dec
test
jmp
inc
pop
stos
scas
sub
mov
aam
les
call
jnp
mov
shrb
fldt
dec
mov
mulb
xchg
pop
push
xor
fldt
test
and
or
push
xchg
fldt
xor
cmp
push
loope
scas
test
fidivl
fucom
sub
dec
das
loop
mov
nop
lds
sbbb
dec
fcmovu
sbb
std
pop
test
xchg
fstpt
push
icebp
jno
mov
shlb
scas
lret
cmp
into
inc
fsubrl
jnp
cltd
mov
dec
pop
cld
mov
fbstp
enter
mov
shll
sub
or
adc
sub
cmp
std
xchg
xchg
fwait
cmpsb
xchg
fcmovnu
push
aaa
push
repnz
shrl
dec
and
mov
fildl
daa
sub
icebp
jp
lds
sub
arpl
hlt
outsl
rclb
or
push
scas
push
sub
negb
sti
mov
repz
repnz
mov
xlat
cmp
out
and
xchg
and
rolb
test
ret
dec
fucomi
jecxz
cli
sub
mov
push
dec
rorb
mov
stos
fildl
out
xchg
xlat
mov
fucomi
jp
sti
push
jmp
fcomi
fidivrl
xor
call
addl
pop
je
imul
fdivr
fisttpl
mov
push
cmp
repz
pop
sub
pop
orb
cld
sbb
pop
incl
inc
sbb
std
imul
pop
xchg
push
pop
idiv
fildl
mov
imul
adc
insl
fldt
shrl
sub
and
jge
mov
sti
out
mov
fildl
sub
fcmovnu
lahf
aam
cltd
jmp
das
sub
adc
adc
push
aas
or
mov
xchg
pop
das
rcr
mov
orl
call
xor
fisttpl
out
cmp
fstpt
test
or
fldt
dec
sbb
lret
fildl
sub
fildl
nop
leave
int3
mov
mov
or
test
jmp
stc
sbb
jno
cmp
inc
rclb
or
push
in
push
mov
stos
outsl
in
push
mov
imul
jo
sbb
out
lret
lret
ret
fwait
movsb
pushf
nop
insl
fisttps
mov
fsub
fisttpl
mov
out
dec
jnp
cs
mov
pop
xchg
fldt
push
movsb
repnz
and
jp
ret
jb
xor
addr16
pop
ss
jecxz
or
rcr
push
dec
insl
add
in
leave
fldt
jbe
sahf
loopne
sbb
xchg
int3
enter
outsb
out
dec
adc
repz
cmp
flds
pop
arpl
test
fcmovb
ja
fldl
iret
test
sbb
cld
mov
pop
lock
in
xchg
cmp
mov
inc
fstpt
jmp
mov
test
adc
and
sarl
stos
jg
cmp
jecxz
fldt
mov
xbegin
pop
jne
loop
leave
fstpt
jmp
fcmovne
pop
out
pop
data16
dec
mov
cltd
je
mov
into
cmc
xor
push
aad
das
js
ret
fstpt
adc
fstpt
or
adc
pop
loop
ljmp
cmp
and
clc
push
sub
shrb
push
sbb
fcmovnbe
hlt
dec
add
daa
xchg
fstpl
mov
mov
push
or
test
test
push
insb
lcall
adcl
mov
cmc
shrb
push
test
sub
or
fcmovnb
out
push
fisttpll
fsubrl
or
push
pop
in
cmc
ds
fnsave
adc
imul
pop
enter
adc
daa
and
pop
dec
add
mov
imul
mov
iret
inc
push
fs
or
and
xor
iret
pusha
dec
int
sahf
call
and
rcrl
popa
inc
or
push
loop
testb
pop
fwait
mov
idivb
int
mov
mov
neg
jge
adc
mov
lret
mov
clc
sbb
fucomi
ja
fbld
add
mov
aam
pop
cmpsl
loopne
in
jae
repnz
pop
inc
repz
dec
aad
das
popf
fwait
je
mov
dec
test
shl
fisttpll
stos
xor
fcmovu
mov
mov
and
cmp
sub
aaa
mov
jbe
jl
cmp
rdpmc
push
jle
mov
xchg
pop
ret
adc
iret
and
imul
mov
jl
js
fcmovne
shlb
sub
pop
sti
std
frstor
push
xor
inc
rclb
dec
loopne
mov
dec
sub
popa
fcmovne
das
push
frstor
or
fs
fildll
pop
sbb
inc
jb
sbb
xchg
mov
fcmovnu
fcmove
pop
cli
jne
pop
inc
data16
decb
dec
and
push
cld
xchg
sarb
and
mov
sbb
loopne
sbb
stos
stc
or
pop
fnsave
outsl
mov
mov
dec
sbb
lcall
ss
into
push
or
add
or
pop
loopne
fwait
sub
sub
dec
repz
movsb
xchg
inc
mov
pop
xor
fcomp
mov
int3
fldt
sbb
pop
lret
and
scas
in
cli
cmpsl
lahf
pop
dec
push
jne
fldt
pop
xor
sarl
inc
or
mov
scas
imul
fucomp
pop
lods
mov
mov
int
addr16
mov
jge
and
mov
and
mov
cmc
xlat
aam
or
or
sti
add
in
imul
dec
les
push
pop
fnsave
mov
and
xchg
mov
lret
dec
jecxz
test
adc
xor
dec
es
xchg
mov
or
xchg
pop
cmp
dec
pop
or
xchg
into
and
add
aas
pop
jecxz
cli
cmp
mov
das
loopne
mov
shlb
aad
fcompl
push
jo,pn
cli
in
lcall
or
leave
dec
jecxz
call
adc
mov
decl
fstpt
mov
fistpl
cltd
insl
dec
out
call
inc
pop
lret
cmp
mov
xchg
inc
int3
push
dec
inc
sbb
sub
pop
sbb
sbb
dec
push
fidivl
lcall
push
adc
negb
ja
outsb
sub
lea
rorb
scas
lret
jl
push
mov
jae
jno
lods
mov
xchg
je
cltd
sbb
pop
jmp
in
dec
lds
cmp
negb
lock
jnp
test
pop
xchg
push
fs
mov
fdiv
push
xchg
test
fildl
xchg
mov
fs
xor
cli
pop
fldt
inc
popa
sbb
mov
mov
pop
das
xchg
pop
pop
fstpt
mov
sbb
inc
sahf
jnp
testb
mov
fldl
push
jnp
in
ret
inc
cmpsl
push
fcmovnb
insb
push
add
in
mov
out
push
xchg
adc
cvtdq2ps
cmpsb
fisttpl
push
add
test
fnstsw
push
fstpl
nop
fstpt
xchg
push
pop
lahf
mov
jae
mov
lods
call
jnp
xor
outsb
sahf
cmp
push
fistpl
sti
pop
push
test
loop
enter
dec
imul
xor
int
xchg
or
push
shlb
data16
fdivr
sti
hlt
into
bound
loop
pop
int
jnp
fstl
sbb
add
addl
mov
pop
fcomi
loope
aam
lea
fcmovnbe
pusha
mov
push
pop
sub
push
repnz
mov
inc
in
cmpsb
push
les
and
mov
ja
cltd
sbb
xorb
gs
pop
xchg
sbb
test
lods
sarl
sahf
pop
ja
fucomp
jno
cmp
fidivrl
mov
xchg
mov
fildl
sti
sbb
test
fcmovnbe
cs
call
mov
arpl
jnp
outsl
stos
fldt
jb
jecxz
cmp
imul
xchg
xor
lods
or
fistpl
cmp
cmpsl
scas
fisttpl
rclb
fcomi
jmp
pop
daa
lcall
stos
adc
inc
fldenv
test
das
mov
fisubrl
fstp
pop
mov
sub
sbb
mov
stc
stos
pop
gs
test
xor
pop
add
jecxz
push
shrl
pop
mov
push
leave
pop
lock
pop
cmpsl
sbb
dec
jl
adc
rcll
dec
pop
fcomps
rorb
nop
inc
lahf
push
fucomip
lahf
stos
and
pop
out
jle
inc
cmp
dec
mov
jno
aas
stos
adc
sub
jne
mov
repnz
std
stos
fisubl
push
fsubrs
xor
fstpl
jge
out
sub
out
loop
dec
fldt
add
fistpll
lds
pop
mov
pop
test
hlt
mov
enter
sub
or
mov
nop
fnsetpm(287
mov
mov
clc
push
clc
divl
pushf
aas
out
add
clc
xor
mov
rolb
cmc
inc
pop
jo
fcmovnb
xchg
scas
jns
ds
add
dec
inc
repz
push
cmp
sub
aaa
lds
je
lods
xchg
out
fstpt
mov
sti
inc
xchg
fistl
push
pop
or
mov
sbb
add
sbb
test
lret
ja
add
jp
add
and
push
sbb
mull
push
dec
stos
inc
inc
insw
std
inc
mov
add
fucomi
gs
enter
scas
and
clc
xchg
rcll
call
jo
add
fistl
insl
les
movsb
test
popa
stos
push
dec
add
je
xchg
jnp
mov
sahf
mov
fcmovnbe
dec
andl
movsl
jns
data16
add
adc
push
gs
sub
fldt
pop
mov
fcmovnu
loope
addr16
fcmove
sbb
testl
push
fildll
jbe
mov
shl
aad
stos
jle
notl
push
shlb
nop
jbe
mov
lock
jb
xchg
call
in
mov
sbb
push
push
cmc
loop
fisttpl
xor
ss
repz
adc
int
fwait
and
fisttpl
lods
rcrl
outsb
sub
add
bound
or
shr
inc
pop
jae
cltd
fstpt
or
inc
fisttpl
jmp
xor
fcmovnb
fwait
add
call
pop
ds
pop
subl
mov
sub
test
fwait
loopne
push
xor
test
or
adc
adc
push
call
mov
mov
inc
sub
push
bound
sbb
adc
fistl
fdivs
ds
out
stc
dec
xlat
or
dec
das
fsubl
add
jecxz
insb
cmpb
hlt
cmp
icebp
ljmp
or
jae
mov
in
inc
mov
das
call
insl
jp
sbbb
sbb
nop
scas
rorl
xor
lret
rcr
pushf
stc
int
incb
ret
mov
mov
cmpsb
fstpt
adc
pop
push
push
jns
xor
loopne
sub
mov
adc
add
adc
mov
test
mov
mov
sbb
mov
and
xor
pop
fdiv
in
rcrb
or
mov
sbb
xor
popa
fiaddl
sbb
fs
adc
out
mov
push
xorb
lods
and
fldt
fisubs
and
aam
icebp
xor
adc
ljmp
mov
jecxz
int
or
push
add
insl
mov
inc
sbb
xchg
xchg
mov
adc
mov
dec
sbb
fstpt
test
xchg
xchg
in
lea
mov
jae
push
push
mov
add
and
xor
mov
or
lret
orb
rcr
ret
inc
push
loopne
and
leave
or
cmp
mov
stos
inc
pop
xchg
lahf
mov
pushf
pop
repnz
adc
dec
in
stos
pop
push
icebp
fisttps
jmp
pop
pushf
dec
pop
jbe
push
es
scas
fcompl
leave
mov
pop
sub
pop
in
stos
stos
inc
xchg
cmp
and
in
sbb
fs
in
mov
aas
invd
lods
jo
push
fildll
jmp
stos
mov
xchg
and
adc
iret
scas
cmp
movsb
bound
stos
xchg
out
xchg
cld
or
ret
sti
xor
mov
mov
cwtl
inc
adc
pop
mov
dec
aad
das
fists
mov
call
pop
data16
sub
add
mov
pop
into
mov
jae
loop
jne
xchg
out
push
inc
push
push
mov
fbld
loope
xor
stos
sbb
fdivrp
xlat
fiaddl
xchg
subb
xor
orb
dec
inc
mov
clc
mov
test
pushf
mov
lods
mov
loope
pop
test
out
std
sub
pop
filds
lcall
icebp
rclb
mov
out
push
xchg
sub
sbb
rorl
push
icebp
mov
cmp
pop
dec
stos
or
into
jmp
jb
stos
xor
adc
mov
imul
cmpsb
in
inc
and
jmp
lods
add
cmp
jmp
pop
ljmp
jle
inc
stos
inc
sub
adcl
int3
mov
push
mov
int
sbb
or
sbb
dec
push
or
je
repnz
mov
or
add
add
adc
stos
pop
jnp
push
lcall
sub
fnsave
mov
insb
mov
daa
mov
fidivrs
stos
push
push
aad
inc
pop
cmp
je
test
or
addr16
jecxz
jp
inc
or
push
dec
popf
repz
mov
loopne
les
stos
mov
jecxz
add
or
mov
repz
fldl
xchg
dec
fs
and
repnz
fmul
daa
ret
push
mov
xchg
push
sub
mov
imul
test
mov
mov
mov
or
sbb
ficoml
lods
enter
out
leave
mov
loop
adc
mov
cmp
insb
loopne
pop
sub
jo
add
push
stos
mov
jns
pop
shr
shrl
sbb
addr16
lods
ret
rcl
stos
mov
lods
lret
mov
jl
aad
fsubs
in
add
mov
inc
das
pop
into
or
iret
dec
xchg
jl
lret
jmp
xor
or
imul
sbb
stos
inc
out
mov
repnz
add
jno
mov
fisubrs
out
stos
in
add
jne
jmp
fnstcw
fnsave
mov
or
xchg
cmpsb
cltd
incb
mov
pop
jmp
stos
xchg
adc
jl
int3
mulb
pop
lods
aas
nop
xor
add
fucomp
and
insb
inc
or
xor
push
insb
add
loopne
sub
inc
bound
cmp
jmp
int3
les
inc
inc
push
sbb
cwtl
stos
cmp
inc
icebp
call
or
mov
lods
sub
movntq
out
or
insl
mov
arpl
in
aas
lods
cmp
adc
mov
int
xchg
mov
jl
xor
cmp
push
sti
les
cmpsl
add
xchg
fists
stos
repz
into
cltd
outsl
inc
pop
mov
ret
leave
jb
rcrl
fwait
std
imul
gs
mov
in
dec
jge
jb
out
lods
fsub
pop
ljmp
sub
or
push
jecxz
pop
and
lds
daa
sahf
add
pop
out
mov
pop
movsb
int
std
into
and
inc
inc
mov
loop
inc
bound
jp
pop
addb
imul
repz
lret
push
sbb
popa
daa
add
inc
fnstcw
mov
loope
dec
push
fiaddl
out
je
and
add
fistps
dec
out
mov
pushf
scas
fwait
arpl
jmp
repnz
insb
test
stos
dec
pop
jnp
sti
fistl
jno
cli
add
loopne
jp
mov
es
sub
or
jbe
sbb
sbb
pop
in
int3
in
inc
stos
pop
push
stos
jmp
outsb
inc
bound
rolb
push
jp
pop
orl
in
xor
sub
lcall
and
fistl
xchg
and
in
and
inc
pop
pop
fwait
sbb
sti
pop
dec
loop
mov
lret
repz
add
les
push
repz
adc
aam
jo
aam
inc
jnp
leave
in
stos
out
inc
xchg
clc
sbb
or
jbe
stos
scas
push
fcmovnbe
lret
inc
and
out
or
fdivrs
imul
subl
or
push
sbb
add
adc
xchg
pop
scas
add
rcll
testb
xor
jns
adc
sbb
cmp
cmp
imul
inc
push
fistl
pop
jne
mov
rcr
mov
lods
popa
in
repnz
fistpl
sbb
outsl
jnp
fdivl
leave
jle
jbe
bound
fstpt
mov
lcall
adc
testb
test
rorl
ffree
sbbb
push
call
fstps
btc
repz
add
loop
adc
mov
and
sub
fisttpl
mov
jnp
cmpsl
fcoms
and
repnz
fildl
adc
push
jns
dec
popa
fistpl
fldenv
push
mov
inc
mov
jp
loope
dec
mov
stos
movsb
icebp
jg
mov
enter
sti
push
jo,pn
or
out
add
sti
and
inc
xchg
pop
stos
testl
clc
xor
cmp
xorl
shr
mov
xchg
call
dec
fwait
sbb
pop
movsl
push
jo
ljmp
rol
cmp
adc
add
movsl
fcmovnu
push
jne
loope
xor
xchg
out
cld
rol
inc
mov
out
insb
leave
mov
jmp
jnp
add
fstpt
pop
cli
xchg
inc
ret
cmpsl
mov
mov
or
fdivs
fcomi
add
push
push
or
in
rorl
testb
push
pusha
imul
pop
je
ret
mov
leave
sbb
push
mov
pop
outsb
imul
lret
add
inc
add
or
test
movsb
mov
call
pop
pop
cmp
xchg
or
mov
sbb
fstpt
sbb
psrlq
mov
add
loop
pop
xor
sbb
aam
push
test
mov
fldt
stc
jg
shl
std
jmp
pop
jbe
imul
movsl
imul
das
lahf
cwtl
fnstsw
les
mov
btc
fcomps
jno
dec
aas
inc
adc
or
fisubl
rcl
xchg
pop
rorl
cmpsl
or
xor
jbe
jp
or
lahf
mov
cmp
dec
rorl
adc
jg
sbb
out
xchg
jle
pop
push
inc
pusha
lcall
fisttps
in
jo
fildl
pop
cmc
sbb
ss
fildl
dec
cmpsb
sbb
xlat
sbb
xor
push
sub
sub
popf
mov
pop
or
dec
jecxz
mov
mov
inc
das
aaa
push
cmp
cwtl
mov
fs
lret
inc
fldt
sub
clc
hlt
inc
mov
neg
in
pusha
sub
ja
call
mov
ficompl
sbb
mov
insb
in
xchg
addl
xchg
dec
addr16
fisttpl
inc
sbb
fucomi
hlt
dec
fiadds
shll
lahf
fidivl
pop
adc
fcmovb
push
sub
loopne
cmp
rol
ret
push
shr
insl
mov
fmuls
adc
lret
mov
jb
pop
rcrl
adc
cs
add
rcr
stos
adc
mov
loop
push
or
fisttpl
jle
fisttps
leave
push
fistl
lea
fs
or
cmpsb
out
scas
mov
popf
stos
sbb
neg
lret
scas
enter
loop
fucom
mov
mov
int3
daa
lret
dec
or
stos
mov
fs
loopne
or
cmp
in
fldt
or
pushf
nop
push
popf
xor
fcmovnb
cld
aad
or
lcall
xor
sub
jnp
out
icebp
fstp
jge
ljmp
mov
test
sbbl
and
vpsrlw
outsl
in
repnz
sahf
xor
lcall
mov
push
imul
pop
addr16
mov
inc
mov
outsl
fidivl
mov
ljmp
shll
mov
fs
iret
xchg
xor
sbb
div
scas
mov
xchg
into
in
cwtl
pop
stos
fmull
push
stos
inc
iret
call
lret
xor
dec
sbb
cltd
sub
mov
sub
out
jecxz,pn
pop
dec
inc
enter
int3
imul
dec
and
fsts
aas
es
fcmovnb
cmpsl
jnp
repz
fistpl
jae
jb
sbb
fidivl
aam
add
fldt
dec
loopne
fucomi
mov
jmp
jecxz
rcr
pop
test
push
clc
xor
push
dec
xchg
mov
fildll
jae
lock
insb
jg
out
out
pop
inc
call
je
pop
data16
int
leave
fistps
ljmp
cld
cmp
pop
adc
outsl
add
jg
adcl
jae
imul
mov
dec
cld
mov
rcrl
add
mov
lret
ja
in
cmp
sbb
out
arpl
mulb
inc
jae
pusha
fstpt
call
lahf
fninit
sbb
hlt
insb
loope
ret
icebp
jmp
xchg
scas
cmc
sbb
cmp
cs
fcmovne
dec
cmp
jb
sti
jbe
pusha
movsb
and
mov
push
or
loope
cwtl
xchg
mov
clc
sub
and
inc
pop
je
xor
flds
insb
sub
jno
cmp
jbe
orl
jae
xor
pop
mov
sub
aam
icebp
hlt
add
inc
add
das
stos
js
mov
iret
add
aas
sbb
sbb
pop
inc
fisttpl
test
repz
outsb
sbb
in
fld1
movsb
jne
mov
test
pop
xor
fstpt
xor
test
mov
jne
inc
shll
iret
jp
cmpsl
into
jbe
sub
movsl
test
inc
sub
aaa
adc
and
mov
push
push
fistpl
or
stc
icebp
mov
or
pop
lahf
cmc
lcall
adc
jg
mov
or
xor
adc
in
sbb
pop
imul
into
mov
cmpsb
adc
xchg
lods
sub
aad
jg
ss
sti
fcmovnu
andb
mov
jmp
dec
fisubrl
in
fildl
and
inc
and
test
fistl
and
ss
divl
cmp
imul
cmovg
or
aas
stos
push
inc
cwtl
fldt
xchg
cmp
cmp
xchg
fwait
fs
addr16
into
jae
jge
fucomp
movb
pop
xchg
fildl
jg
js
add
sub
test
into
jmp
ja
or
test
add
fistpl
push
mov
dec
fldt
mov
lret
lahf
or
in
ror
bnd
push
mov
xlat
test
mov
out
pop
xchg
cmpb
cltd
sub
test
loopne
adc
add
xlat
fildl
mov
fstpt
pop
jmp
mov
sti
iret
sbb
push
inc
cmp
xlat
in
add
into
pop
in
and
inc
push
stc
dec
add
sbb
jno
or
data16
dec
pusha
loop
test
xchg
or
fildl
cmp
scas
ds
fidivs
sub
loopne
leave
inc
lods
movsl
fistl
pop
leave
jne
xchg
xchg
nop
dec
sub
pop
fwait
loopne
jge
xchg
mov
imul
cmc
and
inc
aam
and
and
loope
idivl
insb
sbb
pusha
mov
clc
and
aaa
cwtl
jae
cltd
loop
xlat
push
into
cmp
sub
pop
fstp
jo
adc
out
dec
pop
in
fsubr
cmp
lahf
jnp
pop
jg
jns
fcmovne
out
lock
insl
rsqrtps
pop
pop
arpl
enter
pop
jge
mov
fldt
push
test
fsubs
jno
out
sti
jge
gs
mov
cmp
or
aas
xor
cmp
pushf
mov
in
push
pop
fcmovu
imul
jbe
mov
insl
idivb
or
pop
push
int3
test
ret
fwait
or
fstpt
jne
scas
fcmovnu
pop
adc
je
push
movsl
outsl
hlt
xor
lods
stos
or
ret
fistpl
outsl
push
xor
sub
in
in
xlat
or
insl
popa
js
cmp
stos
fistl
xchg
aaa
add
add
outsl
cmp
lea
or
insb
outsb
or
ret
or
fucomi
xor
mov
cwtl
stc
dec
sti
fnstsw
std
lds
fcomi
sbb
mov
fistl
mov
pop
stos
ds
in
push
sti
mov
nop
sub
int
inc
clc
call
pop
dec
les
ss
cmp
add
mov
jnp
fcomps
mov
sub
cs
dec
data16
cmp
fldt
pop
inc
xor
mov
fstp
fwait
inc
fldcw
or
push
fstpt
aaa
jge
xchg
fistpll
sub
mov
fcmovnbe
fsub
pop
movsl
xor
fisttpl
or
mov
cs
adc
dec
mov
fcmovnb
mov
xor
data16
and
loopne
out
adc
fwait
mov
jae
jp
cli
cmp
mov
fldt
push
or
cmp
lock
fwait
sarl
fldt
repz
fdivs
jle
ret
jo
testb
fbstp
sub
int3
rorb
enter
imul
scas
jae
sbb
sti
pop
push
divb
lahf
arpl
mov
and
outsb
inc
mov
cld
rolb
mov
aam
pop
bound
ret
stos
or
fldt
cmc
pushf
test
inc
sbb
fdivs
jg
and
test
pushf
push
sbb
fidivrl
mov
out
jg
adc
not
or
aad
test
push
and
jnp,pt
sbb
inc
jae
pop
stc
insb
stos
inc
mov
xchg
out
sub
jnp
inc
fucomip
inc
or
xor
fisttpl
outsl
mov
adc
std
sti
pop
xlat
shll
popf
nop
xchg
test
inc
cmpsl
inc
sbb
pop
or
andb
je
fcmovnbe
fwait
dec
inc
push
sbb
fistl
dec
mov
jmp
push
jg
aas
inc
lock
outsb
popf
xor
insb
adc
mov
rol
cli
lahf
addl
fisubrs
xor
and
cmpsb
adc
fdivl
mov
pop
xchg
push
stos
cmp
adc
mov
xor
cmc
push
in
nop
xor
int
out
jp
adc
sti
aam
add
or
cs
xchg
jb
mov
ljmp
dec
fucom
mov
in
dec
arpl
cmp
icebp
aam
inc
pop
and
test
lds
inc
stos
icebp
or
cmp
pop
pop
pop
xor
pop
roll
imul
lret
das
fcompl
into
test
cmpsl
push
arpl
adc
sub
leave
bound
mov
iret
cs
push
sbb
adc
cmp
rcll
pop
ficompl
stos
inc
daa
dec
jge
fistl
mov
sub
xor
nop
ss
sbb
test
fdivr
stos
lds
out
mov
jbe
in
jb
pusha
or
pop
lods
mov
hlt
xchg
cmp
push
popf
jle
lods
shlb
jbe
lret
lret
into
push
add
subb
fcomip
mov
gs
adc
push
in
jns
orb
ret
cltd
cmc
and
push
xor
js
sub
arpl
outsb
in
roll
jge
ljmp
divb
rol
fiaddl
fistl
mov
lahf
test
ss
ret
mov
rdmsr
frstor
and
stos
arpl
ljmp
imul
test
mov
mov
fcmovne
out
cld
adc
xchg
fstl
push
sub
scas
pop
inc
out
pushf
lret
cmpsb
add
jl
les
test
cmp
fucomi
jo
mov
xor
fcmovnb
cmp
pop
jae
cmp
out
push
pop
jp
push
fisttpl
pop
inc
nop
jl
into
mov
fdecstp
sar
fwait
jp
lret
fstpt
cwtl
sbb
cs
cltd
fistl
aad
paddsb
or
jae
cmp
or
dec
and
add
in
loope
or
popf
gs
cmpsl
clc
ret
fidivs
fwait
sbb
call
mov
rcr
arpl
movsb
xor
sbb
lahf
mov
fistpl
gs
mov
imul
inc
jbe
push
xor
adc
icebp
fs
fcmovne
loopne
rorb
dec
inc
fstl
neg
out
push
push
pop
sub
sbb
jbe
aaa
or
fistl
push
inc
push
xor
adc
push
fisubl
and
push
or
aad
loope
lret
dec
xor
fistl
cltd
outsl
bound
xchg
mov
fldt
push
aaa
fmull
dec
pop
pop
inc
jo
jge
or
fistpl
cmpsb
pop
rcr
repnz
dec
add
test
lret
out
outsl
dec
push
ljmp
jno
inc
push
xor
movsb
test
mov
lret
sti
out
das
into
movsb
int
mov
jle
or
lock
sbb
dec
inc
ja
sbb
jne
loopne
gs
push
fwait
dec
fbld
mov
dec
test
imul
push
sti
mov
push
fwait
xorb
xchg
int
jae
pop
movsl
mov
xor
popf
cmp
xchg
dec
sbb
and
mov
jle
loop
js
pop
pop
or
add
fistl
xchg
mov
mov
and
addb
in
sarb
sahf
cmpsb
and
xor
dec
sbb
es
jns
fistl
in
imulb
stos
cmp
add
call
adc
mov
test
movsb
mov
fistpl
push
aam
or
dec
daa
fucomi
xchg
cmp
jp
jp
inc
outsl
and
lcall
pop
xchg
lret
push
loopne
cmpb
bnd
add
or
jns
fstp
cmc
xchg
ss
outsl
cmp
push
fsts
gs
xchg
and
pushf
loop
mov
in
or
mov
icebp
lret
dec
stos
xor
test
inc
inc
sbb
add
sbb
imul
fldt
enter
mov
je
sbb
dec
bound
pop
cltd
xchg
jmp
pop
cwtl
rcll
frstor
sti
rcrl
mov
dec
lock
sbb
xchg
imul
mov
sbbl
mov
movb
incb
xchg
sub
sbb
lods
popf
enter
loope
fcmovnu
addl
fcmovnu
jo
pop
dec
sub
dec
shrl
add
sbb
jne
das
lret
mov
dec
or
inc
mov
shl
mov
xchg
mov
add
mov
punpckhdq
pushf
fstpt
push
pop
jecxz
sub
pop
aaa
in
fcmove
add
cmpsl
ljmp
sbb
push
sbb
sbb
loope
xchg
pop
lret
dec
clc
inc
in
repz
mov
adc
or
xchg
xlat
mov
sub
mov
cmp
sub
and
push
cmp
arpl
add
insl
mov
pop
inc
pop
frndint
adc
ds
nop
and
push
iret
sbb
mov
cs
sahf
mov
mov
out
fcoml
sbb
movsl
inc
or
movsl
pop
movb
les
pusha
adc
inc
movsb
fimull
jge
mov
out
sar
mov
cmpsb
fwait
out
mov
idivb
mov
fldt
sub
and
negl
sbb
push
fstpt
repnz
call
xor
push
pop
movsl
mov
ss
xchg
mov
and
xchg
and
mov
adc
sbb
loopne
pop
push
hlt
jg
cmp
into
mov
nop
lret
fildl
gs
imul
and
inc
pusha
cmp
fwait
rcr
mov
and
fisttpl
arpl
fstpt
and
jnp
mov
xchg
call
out
scas
ja
push
xchg
sbb
sbb
movsb
repnz
out
fldt
ss
in
out
mov
imul
shrb
mov
jg
sbb
test
std
inc
push
pop
clc
int
mov
mov
push
jno
fildl
lret
adc
leave
mov
pusha
les
lods
icebp
push
or
aas
xchg
gs
xchg
push
inc
sbb
or
ss
in
out
pop
imul
mov
int3
mov
mov
push
fcmovnb
gs
popf
mov
rcr
mov
in
stos
fistpl
cltd
mov
or
sbb
adc
loopne
scas
sub
add
or
aaa
and
mov
jmp
mov
dec
mov
lret
mov
in
jmp
sub
fcmove
cwtl
push
or
lods
xchg
fldt
mov
loopne
fcomi
daa
enter
mov
rcr
fnstsw
xor
mov
and
nop
and
loopne
daa
fninit
push
sahf
mov
fistl
push
cmp
int3
movsl
sbb
gs
mov
fcmovnbe
out
cmp
test
mov
fistl
push
mov
jb
dec
fildl
jle
push
sub
outsl
fistl
add
inc
sub
enter
mov
sti
sub
jge
aam
rorb
and
jbe
push
jp
mov
insb
fstpt
cmp
jle
movsb
sub
fwait
call
test
xor
xchg
mov
popa
push
adc
idivb
xchg
lret
or
jge
push
lds
fs
mov
testl
xchg
mov
es
jns
loope
fidivs
cmp
daa
lods
scas
ret
fstpt
imul
cmp
and
addb
push
dec
aaa
fiaddl
inc
and
lds
inc
and
sbbl
js
dec
mov
sbb
pop
fimull
pop
push
fidivl
daa
cli
arpl
xchg
lahf
adc
fldt
outsl
pusha
mov
iret
push
fstpt
mov
lods
fnstsw
data16
mov
sbb
out
ret
or
cmp
fadd
hlt
dec
fnstsw
in
jp
fcmovu
pop
and
rep
mov
xor
dec
divb
push
out
inc
cmpl
pop
fistl
popf
incb
mov
scas
in
push
test
stc
aad
outsl
bnd
mov
aas
sar
push
loope
popf
push
add
cli
call
fisubl
lds
fistpl
lret
cmpl
xchg
fistpl
inc
adc
add
sbb
mov
loopne
push
mov
pop
fstl
cs
mov
outsl
stos
cld
push
into
jo
pop
pop
xchg
sbb
xchg
jge
mov
inc
repnz
test
hlt
xchg
inc
ffree
push
mov
dec
sub
loop
inc
cmpl
inc
mov
pop
imulb
ja
sub
mov
fildl
push
inc
dec
sbb
cmp
adc
mov
mov
fcmovb
jne
sub
adc
outsl
in
jmp
lcall
outsb
mov
call
loopne
push
notl
pop
inc
inc
fs
aam
int3
lcall
push
pop
cmp
std
lds
call
jbe
hlt
lods
inc
fcmovnb
dec
insl
jecxz
push
mov
fisttpl
sub
rorb
push
pop
push
stos
mov
in
jle
jnp
cmc
ficomps
stos
sbb
lahf
dec
jo
push
add
fmuls
xchg
stos
fstpl
imul
stos
sbb
adc
mov
pop
cwtl
mov
adc
dec
sub
je
push
pop
xchg
jge
xor
shlb
push
lods
push
mov
sub
fwait
rcrl
outsb
pop
fimull
mov
adc
imul
jo
cmpsl
push
push
ss
gs
mov
lret
lret
mov
pusha
jl
lods
or
sti
mov
in
orl
add
adc
adc
lods
mov
xlat
or
loope
and
jnp
les
int3
les
cmp
xlat
pop
repz
fimull
fistl
mov
ret
jae
xlat
inc
sub
je
fistl
jp
ret
add
sbb
mov
movntps
bound
out
inc
push
mov
repnz
lret
push
jl
dec
jmp
fimull
cmpsl
jp
xlat
mov
mov
lret
fists
adc
mov
mov
xlat
push
fcmovnbe
mov
in
or
push
push
nop
dec
jl
adc
lods
push
ficoml
xchg
push
cwtl
jae
and
or
jb
prefetchw
dec
das
mov
ljmp
cwtl
fistl
push
sbb
fildl
mov
fcmovnu
sbb
stos
add
sbb
sub
or
dec
idivl
testb
sub
cmpsl
cmp
in
loope
jbe
push
mov
xchg
add
test
mov
fistl
sti
fwait
push
call
shlb
out
ret
mov
pop
out
lods
testl
sbb
js
add
lods
push
xchg
add
dec
xor
fdecstp
je
addr16
sbb
push
push
int
fwait
sub
fistl
popl
mov
adc
push
shl
adc
ret
ja
add
jnp
fisubl
mov
push
mov
sbb
idivb
and
imul
mov
push
dec
call
mov
scas
jmp
fildl
pop
dec
mov
pop
call
push
push
pop
sbb
fwait
rcr
enter
cmc
dec
popf
nop
fstpt
bound
jecxz
push
dec
loopne
daa
jnp
cs
lcall
mov
fcmovnb
adc
pop
rcrl
ret
sbb
popf
cwtl
insb
mov
mov
mov
dec
insl
jg
sbbl
inc
pop
add
jmp
cmpsl
pop
lret
arpl
xor
push
mov
pop
call
inc
push
loop
testl
ficompl
fildl
pop
pop
sub
gs
pushf
xchg
vmulps
push
fcmovne
pop
cmpsl
fwait
imull
jmp
and
call
lds
iret
popa
call
pop
cmp
xchg
lret
les
mov
mov
pop
cs
mov
push
or
adc
fcmovne
mov
xchg
lahf
fstpt
mov
mov
dec
fcmovnu
add
xor
int
sub
push
insl
in
cwtl
xchg
pop
dec
fildl
mov
mov
dec
xchg
xchg
fcmovu
dec
inc
adc
sbb
mov
fwait
sbb
popf
adc
gs
push
fistpl
inc
add
sbb
fisttpl
popa
pop
sarl
fstpt
ja
pop
cltd
lods
pop
pop
sti
fcmovb
xchg
shrb
gs
sbb
repz
fisubl
adc
fldt
add
jg
push
push
sbb
out
call
pop
push
jecxz
pop
fcomps
push
jnp
mov
jle
cltd
pop
mov
mov
rcr
adc
testl
nop
push
cs
xchg
fstpt
dec
adc
iret
out
cmp
or
mov
mov
mov
adc
into
enter
ja
call
ljmp
loope
movsb
scas
push
fcmovnb
or
mov
js
xchg
pop
lret
adc
imul
jb
std
push
sarb
mov
pop
lahf
push
or
mov
xchg
fwait
out
fcmovnu
push
stos
jg
imul
jl
inc
mov
std
adc
dec
call
pop
mov
sub
loopne
jnp,pt
sti
std
rcrb
push
aad
int3
shll
shlb
fisttpl
gs
pop
mov
sbb
outsb
es
imul
pop
aad
aad
xchg
mov
sbb
xor
fndisi(8087
mov
pop
ja
es
cmc
xabort
pop
push
call
cmp
or
daa
fcomip
jb
pop
test
cs
fimull
fildll
and
pop
lcall
fsubrs
mov
test
lcall
out
xor
aaa
pop
outsl
and
data16
xor
cltd
pextrw
mov
push
dec
or
mov
inc
mov
pop
les
inc
fisttpll
aas
cld
out
xchg
cmp
subl
mov
pop
scas
scas
xchg
in
xchg
mov
ja
stc
cltd
mov
jge
sbb
inc
push
add
jae
fildl
fldt
je
cmc
mov
cmpsb
pop
xor
sub
inc
pop
into
int3
test
loopne
fistps
mov
in
dec
xchg
addr16
dec
sub
sar
mov
cmp
sbb
scas
fisttpl
sbb
iret
fsubl
jnp
xchg
inc
adc
add
or
pop
mov
pop
inc
cmp
addr16
fcomip
aas
fwait
push
ljmp
inc
sbb
and
mov
call
mov
daa
call
insb
mov
fistl
inc
loopne
xorl
fcomp
iret
push
cmp
pop
clc
pop
adc
je
mov
inc
lahf
sub
lea
stos
push
mov
mov
lret
xchg
call
and
cmp
mov
call
mov
pop
mov
jecxz
jge
stos
xor
pop
adc
inc
fnsave
adcb
int
sub
push
jno
push
sub
ret
push
mov
inc
es
xchg
repz
decl
pop
fwait
iret
jno
popf
fucomi
jp
xor
call
loopne
pop
imul
xor
fcmovnbe
mov
sub
jae
cmp
fcmovne
jecxz
fistpll
mov
jl
inc
stos
push
fwait
int3
or
pop
pop
cmp
fstpt
stc
in
in
rclb
out
mov
rolb
mov
fildl
pop
mov
rcr
lret
repz
fwait
sbb
daa
dec
test
fiadds
frstor
in
or
mov
jmp
adc
fstl
mov
mov
and
call
push
icebp
cmp
xor
inc
sub
int3
jl
push
mov
neg
out
push
inc
pop
xlat
mov
sarb
call
rcll
mov
push
push
arpl
iret
jp
and
push
xchg
mov
clc
add
rorb
icebp
sarb
pop
lret
das
mov
add
faddl
dec
fistl
gs
sub
push
jns
or
imul
insl
xor
sbbl
jg
and
in
cmp
sbb
insb
push
push
push
xchg
dec
push
fdivr
fistpl
push
sbb
fildl
or
movsl
push
les
cli
inc
cmpsb
ret
pop
xchg
mov
mov
sbb
mov
xlat
sbb
adcl
push
inc
es
mov
cmp
cmp
sbb
inc
push
cmp
adc
shlb
mov
adc
pushf
mov
mov
fstpl
fdiv
sbb
mov
call
movsb
repnz
sub
hlt
xor
call
aad
ja
mov
idivb
cwtl
sbb
in
dec
mov
jmp
mov
cmp
into
ljmp
repz
sub
or
mov
push
jge
pushf
ficompl
rclb
test
cmp
loop
and
pop
out
cmp
jmp
cltd
jmp
fildl
lds
dec
inc
push
push
lcall
stc
fsubrs
movsl
pop
push
scas
mov
addr16
cmp
sbb
outsb
cmpsl
lret
iret
data16
je
jb
cmp
push
mov
cmp
scas
and
sub
dec
in
lods
mov
or
jns
icebp
adc
mov
jmp
inc
lods
fucomp
jb
dec
and
dec
inc
icebp
pusha
ficoml
test
xchg
jns
fwait
adc
clc
lret
out
xchg
pop
pop
out
jae
fisttpl
push
inc
or
fdivrp
clc
shl
pop
xchg
cs
mov
andl
std
mov
cwtl
sbb
mov
inc
cmp
xor
push
loopne
add
aam
dec
sub
cmp
popf
fisubs
push
push
sti
dec
mov
sarb
decb
imul
pop
push
sub
fnstcw
cmp
xchg
testb
xchg
jecxz
lret
lret
scas
fistpl
out
jg
repnz
sbb
pop
rcrl
cltd
jb
fldt
xchg
lea
xchg
fstl
and
jge
cli
leave
jnp
xchg
sub
jb
lds
iret
fisttpl
clc
sub
inc
and
test
xor
mov
fldt
pop
dec
and
dec
push
fwait
test
xchg
mov
jp
imul
or
xchg
jp
loopne
inc
not
adc
sub
fidivrs
and
add
mov
daa
test
cmp
rcr
or
enter
pop
dec
sbb
fidivrl
xor
sbb
jmp
test
xchg
call
adc
js
rcr
push
out
mov
and
mov
popa
add
outsb
lcall
icebp
rcrb
movsb
mov
aaa
inc
sbb
int3
add
jne
loop
jmp
loopne
test
or
sbb
push
sbb
fstpl
inc
fmul
fcoms
jg
add
ja
mov
nop
cmp
fildl
push
mov
xchg
leave
fsubs
xor
pop
orb
cmp
aaa
fistpl
mov
mov
pop
fisttpl
cmp
mov
mov
sbb
xor
rol
or
pusha
mov
or
lock
push
xchg
mov
popa
daa
add
cmp
sti
enter
test
xor
jnp
loop
pavgb
mov
jo
movsl
push
mov
mov
rcll
fildll
icebp
les
cmp
sub
push
outsb
js
pop
outsb
lods
jne
rcl
cld
jmp
pop
pop
ja
adc
cmp
dec
jno
xor
push
add
pop
jb
popa
and
stos
jle
repnz
pop
stos
xor
sbb
pop
rol
outsb
xlat
out
inc
cmp
mov
fildll
stos
xor
in
hlt
push
stos
pop
mov
xorl
sub
shl
nop
sbb
hlt
sub
inc
pop
push
testb
call
frstor
stos
pop
mov
jg
push
sbb
push
out
sbb
and
xchg
and
xchg
lcall
lahf
js
stos
je
addl
int
adc
int
inc
int3
shl
pop
jmp
sub
sbb
sbb
std
arpl
cmc
jmp
repnz
jo
mov
les
sub
fbld
cmpsb
dec
add
mov
sbbl
arpl
jnp
lret
sbb
xchg
jo
loope
cmp
adcl
aaa
call
jmp
push
xchg
lods
fwait
mov
pop
pop
or
pop
inc
lds
push
mov
lods
sarb
add
xchg
repnz
ss
mov
das
or
cs
add
shll
cmpsb
jno
ljmp
fisttps
insb
lods
push
dec
inc
ljmp
add
cmp
jecxz
ds
sub
jecxz
xor
and
sub
loope
mov
sbb
pop
sbb
arpl
mov
xor
ficomps
pop
scas
imul
cmc
lock
mov
or
mov
jmp
imul
leave
or
pushf
ds
jbe
mov
dec
rcrl
imul
int
push
adc
fldt
or
add
push
aad
sti
sub
mov
in
popf
mov
lcall
sbb
xor
sbb
mov
xchg
aam
ret
xor
fcompl
ret
sub
in
in
pusha
xchg
or
pop
dec
arpl
sti
int3
and
or
imul
or
and
xchg
lcall
adc
fidivrl
movsb
or
sbb
xor
iret
sti
mov
arpl
lds
sbb
jns
fimuls
cmpl
pop
sub
inc
mov
push
bound
daa
inc
add
jmp
fdiv
int
movl
ss
xchg
in
pop
repz
dec
xchg
or
cli
xor
fiadds
popf
cmp
push
pop
add
pushf
sub
je
sbb
sti
xor
pop
push
sub
mov
ja
aaa
dec
cld
sub
xchg
jns
jp
lret
pop
fists
mov
mov
pop
sbb
pushf
lcall
or
data16
gs
aas
jge
xor
scas
jmp
adc
sbb
pop
popa
push
sbb
movsb
and
pusha
gs
sarl
or
fistpll
sub
jne
jmp
mov
inc
add
or
dec
adc
enter
sbb
fwait
sbbb
loopne
pop
stc
sti
bound
pop
or
scas
pop
cwtl
sbb
sar
sub
push
mov
mov
push
lods
sbb
jae
pop
jmp
xor
inc
in
ffreep
ror
addr16
mov
cmc
push
push
ljmp
mov
jecxz
lret
fucomp
sbb
je
dec
pop
cmp
int
addr16
sbb
jmp
insl
or
jb
mov
in
test
jb
or
pop
mov
sahf
cmp
dec
adc
push
xchg
add
pop
clc
out
je
shrb
fildll
lock
out
inc
pop
hlt
fnstsw
mov
sub
inc
mov
lcall
lret
mov
sbb
jp
jecxz
bound
nop
bound
stc
push
cwtl
mov
and
pop
je
loopne
leave
cld
or
dec
in
sti
xchg
sbb
sti
cmc
mov
adc
xor
sti
loop
cmpsl
pop
xor
rorb
fmull
aas
jecxz
js
cmp
les
repz
out
out
or
sbb
xchg
cpuid
mov
lcall
bound
pop
div
inc
mov
ficompl
lret
adc
jnp
aas
cmp
hlt
fwait
lcall
lret
enter
sbb
mov
gs
add
pop
push
push
fs
jp
mov
add
ljmp
add
pop
mov
xor
sub
inc
cmp
adcb
jne
ljmp
outsb
in
gs
stos
push
std
lret
repnz
arpl
sahf
mov
jecxz
in
lods
mov
xchg
subb
xchg
cmp
repnz
movsb
out
loop
test
not
inc
inc
pop
mov
mov
cld
in
sbb
dec
stos
test
xor
and
mov
sub
jbe
not
sub
fbld
pop
sbb
insb
mov
jl
fstl
add
lea
mov
loopne
or
movsl
add
mov
push
fistpll
in
movsb
lcall
and
add
xor
or
or
xor
cs
sub
stc
mov
mov
add
cld
je
push
loop
jp
add
add
test
cmpsl
pop
and
mov
cmp
lods
jge
xor
adc
push
call
mov
ret
mov
lock
int
sbb
jnp
in
add
jbe
mov
jle
adc
and
ljmp
mov
adc
hlt
je
jno
fnstsw
mov
scas
cli
imul
sub
mov
push
pop
sub
adc
fsubr
or
cli
fs
sub
cmp
xor
pop
lcall
loop
repz
sbb
or
fiadds
pop
int3
loop
cmp
in
sarl
loopne
xor
dec
mov
aam
inc
push
xor
push
loop
outsb
shr
add
add
jp
inc
inc
sbbb
movsl
jmp
and
loope
call
xchg
and
dec
jb
jnp
sbb
add
mov
xchg
loopne
aaa
cmpsl
push
adc
mov
fists
test
sbb
jmp
sub
int3
iret
add
jecxz
mov
fucomi
sub
inc
jl
pop
and
ret
fcmove
inc
outsl
or
cmp
int
sbb
stos
add
cli
shlb
xor
adc
add
sti
loope
cld
dec
loopne
pushf
sub
loopne
xchg
xchg
cld
or
test
rorb
cmp
std
test
in
je
loopne
jb
adc
jae
dec
add
loope
sub
arpl
fisubrs
jmp
xor
lret
jbe
dec
push
filds
popa
sbb
xchg
shll
bound
enter
outsl
cmp
mov
push
mov
lret
jle
mov
lcall
test
or
sub
sti
cli
call
or
push
lcall
push
imul
insb
sub
sub
mov
mov
ret
add
cld
sahf
cmp
enter
or
lcall
sub
mov
cmp
cmp
std
pop
mov
sbbl
or
mov
jecxz
in
inc
repz
mov
insb
or
jecxz
fwait
rclb
mov
fimuls
jno
jp
or
das
inc
or
dec
jb
aad
mov
lcall
call
mov
inc
loop
xor
dec
or
xchg
adc
mov
lods
inc
jmp
push
mov
sarl
push
sbb
jnp
clc
mov
mov
xor
push
mov
sub
mov
pop
stos
or
clc
bound
test
lods
pusha
pop
dec
stos
fcompl
shr
mov
iret
por
dec
ss
cmp
lea
dec
loope
repnz
mov
iret
add
jne
mov
scas
jae
push
mov
jl
ljmp
stc
mov
lret
addr16
mov
adc
js
pusha
repz
fwait
jns
mov
jo
sub
xor
push
jne
fwait
adc
jo
cmp
mov
cmp
push
pushf
dec
nop
cs
sti
fisubs
or
cmc
pushf
movsb
sbb
dec
pop
ljmp
pop
bound
mov
inc
lret
loop
repnz
jg
sti
cmp
in
xchg
add
or
fists
jecxz
sub
cmp
xor
push
mov
cmc
sbb
paddb
xor
push
xor
fimull
and
sbb
or
aam
int3
test
loopne
sbb
imul
mov
cmp
pop
fidivrl
es
adc
fmull
mov
or
in
or
dec
in
aaa
pop
add
fidivl
cs
popf
jo
lods
sahf
roll
bound
andl
adc
hlt
outsb
or
cli
inc
out
sub
mov
bound
dec
outsb
jnp
jae
fst
mov
insb
cli
aad
or
in
xchg
loop
movhps
lret
pop
cld
aaa
push
out
mov
xchg
or
jge
sub
cli
dec
adcl
ss
mov
dec
lret
mov
inc
and
mov
repz
cmp
in
sbb
mov
popf
xchg
cli
mov
sbb
sub
cld
sub
jne
sub
in
test
mov
mov
mov
pop
sti
xor
enter
mov
cmp
jle
mov
out
adc
sub
push
adc
mov
and
out
add
stos
adc
mov
push
loopne
popa
pop
fistpll
mov
xchg
jmp
iret
repnz
outsl
sub
mov
loopne
jne
adc
jle
or
fst
lcall
cmp
movsb
mov
outsl
in
xor
cmp
or
adc
lcall
pop
sbb
scas
inc
icebp
rcll
jbe
lahf
lret
in
jae
sbb
dec
sub
pop
jp
or
cmpb
pop
ffreep
mov
fcompl
sbb
jmp
pop
lods
fcompp
ljmp
xor
sub
scas
or
add
das
or
cli
in
sub
cld
mov
sbb
inc
push
imul
ficoms
cmovo
push
mov
inc
cmp
test
jbe
lock
mov
bound
or
stos
cld
sarb
inc
add
xor
outsl
stos
ja
xor
and
dec
push
rol
or
mov
add
mov
mulb
mov
pop
adc
xor
adc
sbb
push
xor
stos
dec
jge
ljmp
mov
cmc
pop
inc
fwait
pop
lock
pop
or
sub
shl
mov
lret
pop
xlat
lahf
xor
and
sub
push
sbb
jmp
mov
or
mov
push
imul
movsb
or
mov
cltd
jp
fistps
adc
repz
sets
mov
sub
cld
xor
cwtl
int3
push
out
fstps
pop
sbb
mov
cld
nop
sub
filds
fdivrl
dec
jp
sub
mov
mov
or
and
aas
test
negb
ffreep
je
imul
pop
leave
cmp
fisubrs
std
cld
sbb
push
call
jae
jecxz
and
je
and
and
mov
push
or
mov
and
pop
and
dec
and
inc
and
in
fnstsw
jmp
sahf
cli
jno
mov
leave
loopne
cwtl
sbb
cmp
sti
inc
adc
ja
imul
int
pop
call
fdivr
mov
pop
push
fcmovne
or
dec
out
stos
fists
sbb
xor
ljmp
leave
inc
and
cmp
sub
adcb
int3
outsl
add
mov
fadd
js
cli
icebp
iret
sbbl
cwtl
push
and
je
adc
in
mov
je
sub
fcoml
imul
cmpsb
push
arpl
scas
xchg
inc
add
add
int3
rorl
mov
push
sub
pop
stos
filds
mov
fistpl
inc
sahf
mov
loopne
clc
frstor
mov
jbe
fisubrs
add
and
push
mov
add
mov
jmp
jo
movsl
shl
xchg
aas
xlat
pop
insl
push
lret
gs
sti
jl
or
repnz
or
ljmp
sarl
fisubrl
je
inc
push
fidivrl
cli
bound
and
push
adc
out
pop
stos
inc
xchg
pop
fisubrl
cs
daa
clc
ret
cmp
jmp
cmp
add
aaa
gs
and
fidivrl
cmp
push
dec
ljmp
push
mov
in
call
adc
pop
push
mov
cli
jne
or
mov
mov
add
aam
insl
sti
test
sahf
or
outsb
lcall
sub
dec
rcrb
pop
xchg
mov
mov
push
xor
lock
imul
sbb
sbb
gs
fisttpll
negb
sbb
pop
fimuls
je
xorb
ret
fdivr
faddl
sbb
pop
add
mov
sub
jmp
movsl
or
cmc
fmul
movsbl
in
ficomps
sbb
sbb
inc
shr
cltd
mov
ja
movsl
sub
jmp
xchg
enter
or
fdivl
clc
xlat
pushf
out
call
inc
or
cmpsb
xchg
fsubp
cwtl
fisubl
popf
sbb
inc
dec
or
lcall
pop
push
sti
cmp
icebp
fsubp
aad
sbb
xchg
adc
sbb
or
cmp
jmp
cmpb
leave
pop
repz
cmp
fadds
cwtl
add
push
rcr
sub
jmp
or
sub
or
dec
arpl
cmpsl
or
mov
add
mov
pop
mov
jb
jno
out
ja
pop
and
inc
add
lcall
and
pop
sbb
in
sub
lret
arpl
loop
or
div
push
xchg
and
push
sub
in
adc
sti
outsb
jmp
or
out
or
fwait
loop
jnp
popa
sub
jecxz
jo
or
pop
pop
popa
int
mov
mov
sbb
sbb
and
mov
mov
sahf
pop
in
push
dec
or
jne
std
sbb
imul
pop
cli
sub
data16
cld
mov
loopne
cmp
jle
mov
aad
xor
jmp
mov
sbb
aas
push
add
mov
test
xor
mov
arpl
fimuls
jmp
cld
cmc
cmp
xor
pop
insl
pop
mov
insb
addr16
cld
lret
adc
adc
fldt
cli
lahf
dec
mov
inc
adc
pop
inc
lcall
ds
popf
mov
mov
push
in
cmp
mov
in
int
arpl
sub
cld
lret
fucomp
rclb
or
repz
add
and
jae
sahf
repnz
cli
mov
add
ret
xchg
and
movsl
outsb
sub
lcall
pop
sub
fimull
mov
fsubr
int
pop
sti
bound
lcall
adc
pop
fimull
inc
mov
xor
push
xor
and
pop
mov
jmp
insl
jb
inc
pop
mov
ljmp
add
pop
mov
lcall
jb
lret
or
fidivl
mov
sub
mov
out
adc
jle
xchg
add
out
mov
mov
jecxz
mov
xor
mov
dec
pop
add
lret
dec
jp
cmp
push
inc
mov
in
xchg
mov
push
fidivrl
push
sti
mov
loopne
xlat
fs
jb
push
int
in
mov
inc
sahf
xchg
loope
aas
jb
or
jne
std
jecxz
or
je
mov
xor
pop
push
cli
mov
push
cmp
dec
mov
sbb
adc
xor
cmp
cli
pop
shll
push
cmp
add
add
bswap
pushf
insb
jecxz
cmc
mov
jnp
cld
xor
adc
fwait
sub
fisubl
sub
push
adc
sub
sbb
and
jmp
js
into
sub
sbb
in
add
out
dec
sbb
push
lods
add
in
xor
or
pop
fcompl
xchg
lcall
int3
jbe
mov
cmp
rorl
fisttpll
enter
sbb
push
add
lcall
pop
ret
mov
inc
add
cmp
int
push
ljmp
pop
hlt
dec
cwtl
sbb
js
cli
adc
insl
sub
rorb
mov
xchg
cmpsb
pop
rcr
rcrb
push
outsb
nop
xchg
mov
sbb
out
enter
sti
pushf
lcall
jns
pushf
sub
push
aam
adc
sti
xor
lret
or
scas
pop
pop
jb
jmp
jb
inc
push
adc
aam
mov
xor
jecxz
add
xchg
outsb
notl
sub
outsb
xor
pop
ljmp
orb
lock
ljmp
lea
jecxz
aas
nop
sbb
sbb
int3
sahf
adc
ret
fdivs
push
lahf
or
and
fidivrl
cld
mov
mov
les
add
shrb
mov
mov
mov
mull
mov
imul
pop
adc
pop
cli
stc
in
jbe
lock
addb
mov
jecxz
jbe
jb
fmull
test
sti
mov
sbb
fstpl
inc
push
std
jnp
mov
dec
push
dec
xor
dec
mov
lds
bound
or
and
pop
cmp
mov
pop
bound
xchg
in
inc
pop
push
fidivrs
cmp
shrl
les
stos
sub
in
int3
imulb
jmp
adc
mov
cmp
mov
fs
popf
int
outsb
fwait
mov
xor
fucom
jecxz
sub
mov
cmc
push
das
ret
fistpl
or
cmp
cmp
xor
into
arpl
dec
idiv
into
cmp
or
into
fwait
pop
mov
pushf
jb
sub
jmp
out
dec
pop
jbe
iret
jge
jae
movsb
popl
cmp
fwait
push
adc
sbb
scas
xchg
mov
dec
addb
std
ljmp
repnz
dec
je
push
jnp
fdiv
mov
jp
pop
mov
push
pop
push
dec
jmp
cmp
inc
gs
sbbl
outsb
call
outsl
loop
adc
pop
sub
lds
mov
mov
fdiv
jae
adc
push
cmc
ljmp
lods
cli
pop
sahf
jae
insb
sahf
xor
jae
xor
push
jmp
jecxz
cwtl
sbb
rcrl
jb
loop
stc
jle
push
xor
rorb
cmp
xor
lret
inc
repnz
push
pop
mov
mov
icebp
jp
cmp
add
mov
lods
dec
lret
mov
add
cmp
or
xchg
fadds
adc
mov
js
mov
orl
adc
inc
jmp
stos
test
dec
add
arpl
lods
mov
and
loop
push
inc
enter
jge
loop
xorl
sbb
jne
ficomps
jb
je
dec
sbb
out
fiaddl
mov
leave
popa
arpl
dec
adc
aaa
sub
sahf
pop
sbb
and
std
mov
cmp
push
jo
icebp
adcb
jae
pop
sbb
mov
gs
fmull
es
mov
stc
sti
imul
inc
mov
lret
pop
pop
ret
arpl
cmp
adc
pop
mov
ret
jae
adc
push
fwait
xor
mov
mov
fcom
sti
imul
jecxz
test
clc
or
cmp
rcr
and
or
mov
js
pop
or
add
inc
mov
xor
sbb
jo
pop
xchg
call
cli
mov
daa
insb
cmp
and
imul
jns
push
pop
and
rolb
stos
out
xchg
xchg
mov
xor
lcall
insb
nop
jmp
imul
pop
sbb
xor
mov
sub
mov
or
imul
gs
aad
lods
cmpsb
loop
lret
or
cmpsl
stos
mov
ljmp
movsb
loop
mov
jmp
mov
sub
js
in
imul
in
mov
repnz
push
popf
cmp
testb
xor
ret
mov
test
sbb
mov
mov
or
sahf
mov
sub
repz
push
pop
lcall
pop
xor
xor
pop
and
out
adc
sbb
pop
scas
in
lods
cmp
imul
xchg
shrb
add
out
in
mov
je
pushf
jmp
leave
shll
push
stos
cld
inc
ret
test
push
bound
int
inc
mov
xchg
roll
ljmp
divl
push
mov
loopne
sub
pushf
sar
jne
std
in
add
test
test
sub
repnz
jae
dec
or
ss
or
mov
xchg
sti
adc
mov
andb
add
jo
mov
inc
adc
icebp
sbb
out
sbb
jb
arpl
ja
gs
or
pop
ss
pop
or
ret
sbb
inc
push
in
mov
mov
pop
les
xor
mov
dec
ljmp
and
mov
dec
nop
mov
ljmp
mov
cmp
hlt
mov
inc
dec
cmp
xor
sbb
ljmp
xchg
pushf
mov
mov
and
fcmovbe
in
outsb
sbb
stos
bound
popf
pop
pop
shlb
pop
mov
push
push
pop
pop
insl
daa
inc
or
jne
or
pop
dec
mov
lret
xor
sub
fsubr
pop
daa
push
pop
aaa
xchg
lret
push
sub
mov
cmp
nop
inc
sbb
push
cli
js
lds
jmp
fdivs
add
or
inc
imul
sbb
xor
shlb
jmp
loop
mov
mov
sbb
enter
or
inc
add
xor
or
sbb
and
cmp
mov
mov
and
xor
mov
pop
push
xor
or
sti
stos
push
dec
xchg
push
fdiv
pop
mov
pop
jns
jmp
enter
and
sahf
jmp
jae
leave
std
cmp
loop
ljmp
fistpl
or
je
stos
xchg
add
rclb
jmp
mov
mov
and
rcrb
sti
jecxz
sbbb
loope
test
jp
cwtl
jecxz
cmp
sahf
inc
loop
das
jg
mov
cld
jp
loop
icebp
popa
fstps
mov
or
dec
int3
lret
or
fwait
or
shr
sarl
push
call
and
xor
clc
mov
inc
and
insb
dec
pop
mov
cmovae
sbb
in
ljmp
dec
test
ret
loop
and
inc
insl
cwtl
push
loop
outsb
pop
popf
sbb
mov
loop
jp
pop
adc
insb
fistpll
sbb
popa
fcomip
pushf
fmul
mov
pop
sbb
pusha
fstps
adc
dec
mov
jb
rcll
fs
mov
xor
add
push
mov
pop
jbe
or
cmp
gs
iret
or
and
jp
jae
out
add
jae
rcr
in
scas
add
cltd
pop
adc
jmp
fimull
inc
xchg
stos
push
mov
ficoms
outsl
push
dec
cmp
rorl
sub
mov
mov
xor
and
mov
adc
add
mov
jns
sub
sti
cmp
push
push
popf
and
stos
jmp
and
dec
fbstp
mov
scas
push
and
cmp
inc
pop
pop
dec
sub
mov
xchg
sub
inc
dec
pop
mov
xor
cmp
mov
pop
bound
inc
sub
int
pushf
mov
adc
jb
xor
cmc
insl
cmpsl
fsubl
jae
rcrl
jmp
test
jo
pop
imul
mov
xor
jae
push
mov
cli
jno
lock
fisttpll
inc
psrld
jmp
cmp
fcoms
and
fidivl
sbb
jecxz
sub
push
xchg
xchg
fwait
cmp
cmp
jmp
sti
fimull
lret
lahf
cmpsl
sarb
xor
mov
push
les
ljmp
dec
lea
jo
fwait
xchg
sbb
mov
into
pushf
je
ret
push
imul
jecxz
mov
shlw
sahf
addr16
sbb
push
inc
jns
scas
flds
dec
adc
fldenv
ljmp
std
fisubrs
adc
xorl
cli
jno
dec
cmp
cmp
out
add
faddl
imul
out
mov
fstpl
xor
push
loopne
cmp
adc
sbb
adc
mov
jmp
inc
or
sbb
dec
sti
ss
imul
imul
xor
sub
ror
cld
mov
or
std
fdivl
push
pop
lea
dec
pop
push
cld
ss
mov
icebp
cmc
jge
loop
in
push
bound
mov
jl
loop
incl
xchg
fisubrs
sub
mov
test
sub
sbb
cld
cmp
cmp
dec
fdivp
add
cmp
test
cmp
hlt
fdiv
dec
xor
xor
fmul
or
sbb
arpl
rolb
roll
mov
mov
stc
dec
loop
daa
js
ficompl
xchg
bound
aas
or
inc
inc
cmp
bound
in
rcl
repz
fists
xor
and
lahf
loopne
mov
mov
jae
mov
loop
sub
pusha
xchg
adc
fwait
rep
jmp
pushf
std
fmull
jmp
inc
ja
add
andb
cmp
mov
fidivrl
or
inc
and
lock
and
fidivrs
and
mov
jbe
fbstp
add
or
int3
sarb
add
sbb
inc
lcall
pop
pop
sti
stos
mov
cmpb
int3
out
shr
pop
pusha
sub
push
loopne
sub
insb
fldl
or
add
das
stos
mov
pop
xchg
push
por
enter
fwait
push
pop
jmp
jo
mov
cmc
nop
mov
stos
jbe
movsl
push
stos
lret
or
cli
mov
dec
xor
jbe
xchg
sub
xor
stos
test
adc
ret
fidivs
fisttps
mov
jl
fs
inc
mull
fwait
stos
popf
jp
shll
lods
mov
pop
fisttpll
ljmp
test
imul
dec
xor
sub
add
sub
dec
ret
fcomi
bound
and
jle
mov
xlat
lcall
xor
ljmp
xchg
sti
inc
popa
pop
sti
jne
sbb
push
pop
sub
les
push
cmp
jmp
pop
inc
outsl
xor
arpl
mov
and
and
mov
push
cmp
mov
mov
fadd
cmp
pop
mov
adc
mov
mov
xor
bound
mov
bound
ret
cmp
addr16
cmp
int3
push
sub
mov
pop
call
or
out
mov
popf
outsb
loop
mov
pop
shrl
cld
popa
or
pop
inc
sub
xor
ret
sbb
loope
sub
dec
mov
xchg
xchg
push
jp
jecxz
xor
push
in
dec
pop
jp
jecxz
les
pop
outsl
repz
fiaddl
sbb
push
xchg
cld
mov
push
cmp
xor
ja
dec
push
add
push
pop
mov
push
repz
push
repz
mov
sub
subb
addb
dec
cld
cwtl
cli
fists
je
and
ss
adc
movsb
push
sbb
push
cmpsl
mov
pop
mov
mov
bound
dec
push
pop
mov
or
or
push
and
pusha
sbb
fs
je
jb
xor
lret
cmp
mov
dec
mov
scas
stos
mov
lock
mov
lds
mov
data16
loop
fstps
mov
cmp
nop
sti
and
or
jne
sub
fildll
pop
mov
scas
jmp
jle
mov
mov
xlat
std
js
sti
xchg
adc
in
mov
dec
jge
sbb
call
shrl
ret
mov
jno
ljmp
rcl
in
loop
mov
or
rcr
lods
cmpsb
arpl
cmp
nop
jg
ds
ljmp
repz
jae
pminsw
xor
sub
pushf
pop
je
pop
or
call
cmp
pop
mov
fcompl
arpl
ss
cmpsb
pop
into
sbb
xchg
bound
in
mov
bound
mov
pop
jmp
or
inc
mov
sahf
cli
decl
lds
jnp
or
in
push
jg
lret
fucomi
pop
or
or
insb
ds
jge
cli
lret
cmp
pop
fcmovb
les
pusha
pop
mov
jae
movsl
loopne
xor
jmp
lea
xchg
adc
add
lahf
sar
mov
jmp
out
aad
add
lret
mov
or
mov
shll
or
xor
mov
add
inc
cmp
repnz
test
fbld
sbb
sti
ljmp
inc
jg
icebp
std
sbb
loop
dec
adc
sbb
repnz
jb
adc
test
out
outsb
imul
or
imul
aas
xor
lcall
cli
push
pop
divb
mov
jp
sub
dec
mov
jmp
clc
fwait
mov
xor
or
fdivl
push
mov
fdiv
pop
lcall
ljmp
rep
xchg
xor
fmulp
cmpl
cmp
xchg
ret
fdivl
pop
cli
sbb
sub
repnz
and
in
xchg
hlt
cmp
stos
popa
inc
sbb
push
lock
or
adc
and
push
loop
pop
sbbb
int3
pushf
inc
rcrl
adc
adc
in
mov
cmp
push
add
lret
inc
daa
or
add
subb
lret
insb
and
sbb
dec
sub
xchg
icebp
in
imul
jbe
ret
xchg
test
fistpl
add
or
xlat
bound
aam
leave
repnz
jbe
mov
push
std
mov
add
mov
mov
xchg
cmp
jb
pop
cld
in
add
pushf
xor
inc
cld
or
in
push
mov
xor
jne
lea
outsb
jecxz
negl
outsl
adc
xor
sub
mov
test
push
stos
shll
mov
scas
or
mov
cmp
je
stos
sub
pop
jle
adc
push
dec
cli
mov
push
sbb
sahf
std
ljmp
cli
mov
pop
sbb
ljmp
adc
cmp
aas
icebp
push
in
rorl
xchg
xchg
andb
cld
or
jbe
jae
and
sbb
repnz
addb
enter
adc
bound
fildll
dec
mov
subl
sbb
repnz
in
lock
dec
adc
pop
mov
repnz
jl
and
adc
jno
push
sub
jb
push
in
xlat
sub
xchg
add
rclb
cmp
lcall
cs
lret
and
mov
gs
and
psubd
pop
push
xor
cmc
jecxz
inc
cmp
sbb
pushf
std
fsubrl
mov
lods
jmp
fbld
sub
ficomps
xchg
je
fistps
sbb
js
ficoms
sbb
adc
sbb
loope
dec
sarl
xor
pop
fistpll
pop
pop
sub
clc
es
jb
shrl
pop
mov
and
xlat
xchg
pop
cld
in
lock
push
cmp
sub
std
pop
fcmovu
mov
out
lea
mov
testl
dec
mov
std
pop
cli
movsb
xchg
mov
lcall
decb
lret
cwtl
movsb
pop
testb
or
and
cli
xchg
sbb
outsb
and
or
or
stos
mov
mov
sub
sub
dec
jmp
or
pop
sbbb
jmp
sbb
rol
sub
fists
std
inc
cwtl
mov
bound
sbb
iret
bound
arpl
das
mov
xor
lods
mov
add
test
add
add
and
mov
jecxz
mov
and
imul
popf
jb
adc
hlt
data16
fmulp
in
pop
push
or
int
mov
sbb
add
add
sahf
or
sbb
adc
xchg
cmpsb
lods
mov
cmp
and
cmc
inc
lret
pop
fwait
mov
leave
add
or
sbbl
jno
mov
push
push
sbb
sbb
or
stc
int3
mov
mov
jae
test
not
dec
inc
dec
fidivrs
enter
add
in
cld
aam
sbbl
out
push
stos
inc
sub
push
sbb
or
mov
pop
cltd
sub
pop
push
loop
sarb
xor
dec
lcall
cmp
add
xorb
outsb
xchg
jae
jp
xchg
cmp
cld
aaa
add
hlt
or
cmp
and
cmpb
sbb
enter
pop
add
push
rcrb
mov
pop
jbe
sub
jae
mov
pop
adc
fdivs
and
cmp
arpl
daa
decb
cli
jle
cld
xor
xchg
mov
or
lahf
push
jb
loop
hlt
xchg
inc
cli
jo
inc
js
mov
cwtl
push
repz
mov
xchg
lret
add
cli
xchg
lret
jmp
ljmp
movnti
adc
dec
dec
ss
in
push
outsl
inc
jp
push
scas
arpl
cmp
rcrb
adc
out
xorb
in
push
sti
cld
push
and
pop
push
sub
loopne
fcoms
mov
sub
stos
andl
pop
jno
dec
pop
cmp
cli
in
jp
sub
add
lret
pop
add
bound
push
stos
nop
popf
lret
or
lcall
sbbl
xchg
cmpsl
sbb
faddl
fstpl
psubd
idivb
mov
enter
aam
cmp
arpl
iret
or
imul
xchg
outsb
cld
or
cmpsl
ffreep
mov
stos
cld
addr16
jb,pt
mov
jecxz
jge
push
loop
out
pop
pushf
icebp
call
repz
xchg
push
mov
mov
mov
or
push
stos
inc
in
inc
dec
dec
int
stos
jmp
jg
loopne
xchg
out
lods
gs
jno
cmp
mov
and
mov
mov
paddusb
and
adc
jbe
cli
jne
mov
std
cmp
loop
js
loopne
aad
adc
push
loopne
or
cmp
or
mov
mov
xor
cmp
fdivl
adc
inc
add
pushf
push
lret
jg
xor
sbb
inc
cs
mov
and
jns
in
mov
mov
fimuls
mov
ljmp
loope
shll
xchg
jmp
data16
xchg
cmp
fneni(8087
mov
cwtl
pop
popa
sub
cmp
into
jge
rcr
pop
ret
pop
mov
mov
pop
rcrb
adc
bound
dec
jl
sbb
and
movsb
mov
ljmp
rep
pushf
sbb
ja
sub
jb
mov
loope
sub
not
fnstenv
ss
add
ljmp
mov
lock
mov
ds
or
xchg
mov
xchg
xchg
lods
xor
cmpb
fmull
dec
cli
xchg
out
mov
dec
pop
push
pop
cli
sub
jbe
pop
mov
roll
loop
or
shlb
mov
push
fbld
in
cmp
inc
dec
xchg
mov
cmp
mov
mov
stos
mov
push
or
scas
push
fcmove
dec
and
mov
mov
sbb
lcall
or
or
mov
cmp
fidivl
inc
adc
push
inc
adc
imul
je
sti
jae
int3
mov
inc
ljmp
push
hlt
mov
cmp
add
sub
jg
xor
mov
rolb
ljmp
sbb
cmp
jp
push
daa
jne
lret
fstpl
frstor
cli
jns
ja
jp
xchg
jl
mov
call
add
lret
sbb
pop
jecxz
rcrl
cmp
arpl
mov
cwtl
fnsave
movsl
mov
popl
jmp
adc
mov
in
sti
ss
repz
bound
cwtl
mov
arpl
pop
decb
cld
sbb
out
scas
mov
fdiv
enter
add
out
jb
loop
mov
packuswb
cmp
cmpl
dec
mov
fbstp
inc
insl
push
xor
popa
mov
xchg
dec
inc
loop
cmp
pop
in
shr
jae
fsubrs
push
loope
out
dec
jb
jl
push
pop
push
in
mov
ficompl
sub
lock
mov
sub
ret
mov
adc
inc
pop
fiaddl
ficomps
fwait
lcall
fildll
insb
fistl
or
sbb
cmpsl
xor
jp
inc
sbb
jecxz
mull
cltd
mov
mov
in
push
sbb
xor
xor
pop
rcll
adc
lret
les
sbb
inc
in
sub
ret
or
adc
or
and
mov
jl
imul
or
sar
in
dec
call
dec
adc
mov
rol
and
mov
arpl
mov
dec
jecxz
adc
pop
or
xchg
push
add
sub
jg
adc
jne
fdivrs
in
or
jmp
pop
dec
mov
push
jae
in
lahf
adc
sbb
pop
fbld
fistpll
stos
push
sub
xorb
and
add
mov
loop
lods
pushf
pop
dec
scas
xchg
or
push
andb
pop
cmp
mov
pop
fildl
mov
push
add
call
mov
sbb
sbbb
mov
or
popf
dec
fildll
out
sub
xchg
sub
or
data16
dec
in
pop
fists
cli
test
cli
imul
mov
cmc
mov
loope
cmp
pop
and
pop
cmp
insb
cli
pop
xchg
ljmp
or
imul
mov
pop
mov
sbb
cmp
insb
sbb
jp
je
xor
loopne
sub
mov
jle
rorb
ds
inc
push
sbb
lea
cmc
stos
push
arpl
add
sbb
mov
into
xchg
xchg
sbb
xor
pop
add
push
sbb
lcall
push
xchg
loop
enter
sti
and
mov
dec
mov
sub
jne
negb
outsl
sbb
fs
sub
mov
jle
repz
pop
imul
lock
addb
jecxz
push
loop
pop
add
adc
mov
iret
cmp
jns
dec
mov
inc
int
mov
lret
mov
mov
sub
push
push
jae
pop
into
ja
push
jmp
daa
ljmp
ret
jmp
push
xor
pavgw
add
dec
cld
mov
mov
jb
mov
xorb
or
les
dec
sub
leave
out
int3
push
cli
add
jle
loop
mov
pop
dec
jns
dec
push
cld
dec
rcr
jae
pop
jno
fists
jbe
loop
or
mov
ljmp
jle
pop
xor
ret
jp
mov
mov
std
repnz
cmpsl
pop
mov
adc
leave
or
insb
inc
nop
add
stos
cmc
jnp
fldt
ljmp
int
bound
loope
add
adc
icebp
decl
fisubs
or
cmpsb
rcrl
test
mov
sbb
cwtl
push
fidivs
rcrl
fiadds
add
sbb
negb
lods
jo
scas
cli
sbb
icebp
jecxz
push
cmp
lret
js
mov
movsb
test
sbb
push
repz
shrb
pop
dec
inc
enter
cmp
mov
leave
xchg
in
pop
jb
cmp
mov
push
pop
or
push
mov
fistpl
or
or
xchg
dec
cmp
pop
xor
bound
jnp
dec
push
imul
sbb
dec
test
xchg
ficompl
add
adc
pop
stos
add
sub
lret
jge
jle
jae
mov
popf
pop
je
bound
out
and
mov
fisubl
push
mov
xchg
jb
jp
or
pop
cmc
push
das
shr
sub
cmp
and
pop
dec
cmpb
lret
push
mov
inc
out
jmp
je
sub
push
cmc
xor
decl
push
loopne
shll
cmp
jmp
loop
pop
repnz
and
std
lret
mov
pop
inc
ss
mov
sahf
movsl
jmp
inc
loop
stos
mov
nop
mov
jbe
cmp
xchg
pop
or
fistps
adc
jge
repnz
shll
pop
es
test
pop
stos
cld
lret
mov
mov
out
xor
imul
ljmp
jl
call
jnp
ljmp
mov
fptan
in
cli
in
mov
push
push
test
sub
sbb
or
pop
addr16
inc
push
andb
popf
popf
push
dec
fisubrs
fisttps
popf
notl
adc
orb
shll
pop
and
outsl
add
ljmp
das
fdivrl
lock
popf
insb
and
lods
mov
imulb
sbb
addr16
sbb
imul
mov
add
int
and
dec
stos
pop
ret
jmp
aad
insb
xor
xor
mov
add
jb
ret
cld
cmpsl
xchg
call
repz
jmp
adc
pop
and
bnd
mov
sbb
push
and
cmpb
mov
stos
arpl
fisubrl
hlt
repnz
mov
mov
jno
pop
adc
fdivr
arpl
sbb
add
xchg
inc
addr16
ret
pop
mov
cmp
xor
stos
xor
repnz
push
add
fsubp
jl
dec
das
or
dec
subb
sti
push
loopne
in
adc
iret
fwait
and
mov
xor
movsl
leave
xor
sti
lret
cli
cmp
out
into
pushf
push
es
lea
ljmp
jmp
cmp
icebp
sbb
ljmp
inc
sub
jg
xor
repz
insb
mov
xor
ret
add
and
dec
xor
mov
lahf
int3
in
and
cmp
fimuls
movl
fildl
dec
xor
imul
inc
sti
cmp
nop
mov
jle
pop
pop
pop
shrl
test
rcl
pop
fisubrl
cmp
mov
cwtl
cmp
cmp
push
dec
push
mov
ret
adc
sub
faddl
int3
pop
xchg
je
ret
or
testb
hlt
fdivs
jecxz
je
push
ret
loope
loope
out
mov
mov
inc
jecxz
mov
and
dec
scas
fiadds
mov
int3
icebp
fwait
jae
outsl
pop
out
popw
loop
fwait
jmp
dec
ficomps
jnp
mov
insl
mov
add
out
mov
mov
gs
fidivrs
pop
inc
les
sbbb
fwait
and
pop
arpl
mov
andb
mov
mov
lahf
dec
mov
ljmp
mov
push
dec
add
pop
jnp
jne
mov
adcb
out
js
xor
inc
dec
jae
dec
enter
mov
mov
inc
mov
lds
pop
push
sbb
clc
dec
repz
adc
mov
shl
mov
les
xchg
std
mov
mov
loop
jle
clc
pop
cmpsl
js
lret
pushf
sti
in
jp
out
stos
stos
ret
and
rcrb
pop
dec
es
popl
xor
pop
adc
xorb
xchg
incb
cs
or
sbb
shll
mov
repz
or
ljmp
xor
pop
cmp
inc
cld
adc
nop
jle
xor
dec
or
cld
and
shr
mov
sub
loope
and
loopne
aas
in
adc
pop
pop
cmp
or
ficoms
in
popf
xchg
sbb
cmc
clc
bound
cmp
mov
ja
push
mov
add
mov
cli
push
cmp
adc
add
ret
jo
pop
xchg
xor
cmp
push
sbb
cmpsl
push
enter
push
jb
or
cli
push
test
outsl
mov
je
jb
xor
fisubl
sti
mov
pop
ret
and
jno
stos
add
pop
lock
sbb
sarb
sti
jge
and
dec
bnd
cli
dec
push
jg
add
ja
mov
sbb
lods
aad
outsb
and
xchg
icebp
add
mov
in
stos
test
por
add
mov
pop
frstor
fbld
push
mov
cmp
out
cmp
lret
sbb
jb
cmp
sub
mov
jnp
stos
sub
dec
or
lret
sbb
jo
idivb
mov
add
into
push
adc
adc
popa
nop
adc
add
adc
mov
or
inc
cmp
xchg
push
fsubl
add
sub
jo
xor
aam
and
jmp
xchg
icebp
call
in
xor
mov
jp
or
int3
inc
add
adc
out
test
lahf
inc
sub
jne
sbb
xor
pop
xor
or
pop
add
jmp
sub
divb
xor
sub
pop
jb
mov
jno
sbb
ficomps
xchg
iret
mov
and
in
out
sub
pop
pop
or
mov
in
cmpsl
mov
std
cli
scas
lret
mov
push
into
dec
xchg
lahf
dec
sbb
pop
jecxz
mov
xor
ja
pop
imul
stos
push
les
and
sub
pop
sbb
addr16
add
adc
repnz
cmp
xchg
adc
jge
loop
pop
adc
adcb
jp
xchg
aas
inc
in
inc
mov
dec
mov
mov
add
and
or
lret
xor
or
mov
stos
mov
push
int3
bound
divl
mov
shlb
sbb
sbb
loope
aaa
xchg
ljmp
or
cmc
jne
repz
pop
add
jp
out
or
pop
mov
fcompl
aam
clc
repnz
sub
ss
insl
dec
inc
add
les
xor
pop
mov
fst
jae
je
bound
sbb
jmp
stos
insb
xor
loop
lea
loop
popf
out
and
mov
mov
mov
adc
stos
pop
scas
mov
xchg
push
sbb
lods
test
xchg
leave
xchg
nop
fsub
dec
add
add
mulb
jge
ljmp
mov
stos
ret
jmp
aam
jno
filds
enter
hlt
xchg
movsb
push
jb
ljmp
jno
jp
rcll
sbb
pop
xor
jmp
jecxz
icebp
lds
push
pop
xor
shlb
mov
arpl
jl
cvtps2pi
mov
rcrb
and
lods
fcompl
cld
int
shl
push
jo
loop
push
lds
lret
push
mov
daa
dec
add
incb
stos
sbb
mov
sub
ljmp
push
popf
pop
lock
les
and
cmp
outsb
pop
push
xchg
ja
dec
arpl
shl
cld
lret
fistpll
pop
imul
jno
or
sti
xor
lcall
es
sbb
or
push
stc
and
add
jno
cmp
mov
and
jnp
push
frstor
lea
jb
pop
stos
mov
add
mov
sub
enter
hlt
inc
push
xchg
andb
divl
add
cmc
cli
neg
scas
in
xchg
add
iret
push
stos
loopne
stos
cld
cmc
pop
pop
in
xlat
popf
push
xor
pop
dec
jp
sbb
xor
dec
lcall
in
and
mov
cli
pop
nop
and
int
pop
lret
cmpsb
cmp
sub
or
jge
inc
inc
stos
jbe
ss
mov
shr
pop
leave
dec
ret
cld
adc
shrb
bound
in
mov
cli
sti
sti
xor
lds
lret
mov
repnz
and
sub
sbb
mov
fidivs
addr16
sbb
idivl
fisubl
pop
add
inc
movsl
mov
neg
nop
mov
sbb
jmp
add
test
mov
scas
pop
sub
mov
sbb
jecxz
sbb
or
je
test
cmp
sbb
std
stos
push
movsl
cld
add
mov
loop
jnp
js
cmp
mov
arpl
mov
and
mov
sub
les
fs
sbb
pop
js
sti
ljmp
inc
bound
dec
popf
cmp
test
ljmp
lret
jmp
test
and
push
loop
es
push
add
mov
jae
jg
cmp
mov
jb
es
cmp
lods
int3
adc
or
pop
jp
lcall
repz
jne
mov
dec
dec
sub
xor
mov
cmp
call
or
jg
sbb
inc
stc
xchg
mov
push
imul
dec
cmp
jb
in
or
pop
and
jg
vshuff64x2
xchg
cmp
push
and
lahf
jo
fs
inc
mov
sarl
jmp
push
xor
add
sti
mov
notl
and
pushf
xchg
sbb
lret
insl
sub
xor
push
aaa
cmp
jb
pop
jne
mov
clc
rclb
fildll
icebp
jnp
mov
push
jp
jl
sti
adc
mov
mov
lcall
mov
fwait
adc
repz
xor
cmpb
dec
gs
lahf
outsl
add
sub
sbb
cmp
mov
sub
jle
adc
pop
repnz
lret
addr16
shrl
cmp
sub
sub
inc
cs
and
sub
pop
or
cli
push
mov
xor
dec
mov
xchg
int3
jp
repnz
stos
subb
frstor
arpl
leave
mov
cmp
jl,pt
push
or
xchg
mov
cmp
lret
out
mov
ljmp
push
fucomip
sub
pop
mov
pushf
jp
scas
jnp
cmp
jns
or
cltd
dec
lcall
test
sbb
cmp
mov
jbe
dec
add
repz
pop
xor
insb
add
dec
loop
imul
pop
movsb
out
mov
inc
ljmp
push
stos
adc
pop
jmp
jbe
and
stos
pop
pop
pushf
mov
xchg
push
or
fcoms
sbb
jo
in
or
adc
ljmp
jmp
or
pop
inc
lcall
jge
in
sub
push
fdivl
mov
mov
pop
stos
loope
cli
sahf
jp
je
xor
jo,pt
xchg
sbb
fimull
fidivs
xor
jmp
mov
jmp
xchg
inc
sub
xor
shl
inc
fbld
ret
repnz
out
cmp
lcall
xchg
mov
ljmp
movsl
jne
pop
ljmp
mov
mov
loope
sub
lahf
push
sti
jne
fwait
adc
stos
mov
bound
add
and
ljmp
inc
insl
cmp
cmp
lcall
pushf
pop
hlt
pop
adc
add
mov
or
pop
insb
sti
or
cli
pop
ffreep
inc
mov
jbe
pop
negb
mov
or
int3
adc
jb
sub
dec
pushf
jp
mov
jne
cli
fimuls
stos
add
ja
adc
in
xlat
xor
pop
sub
bnd
xor
mov
dec
pop
jp
sbb
repnz
repz
in
or
push
in
sbb
or
pop
jmp
les
shrb
jmp
js
lahf
xchg
mov
lret
jns
in
sbb
cs
lcall
pop
push
sbbl
inc
mov
loope
sub
in
loopne
cmp
test
movsb
push
push
or
inc
lret
out
sub
mov
xchg
sub
ss
lret
loop
daa
rcrb
pop
jnp
ljmp
xchg
fwait
jl
and
jmp
xchg
cmp
dec
sbb
add
cmp
stos
repz
cmp
in
sbb
popa
std
cmp
pop
add
jge
popf
push
loop
push
movsl
loop
arpl
and
pop
test
stos
dec
inc
jmp
add
push
std
outsb
jb
stos
arpl
xor
pop
mov
insb
mov
add
sbb
and
mov
sbb
mov
imul
xchg
jl
stos
mov
push
dec
cmp
aam
in
push
sti
or
add
test
cmp
adc
and
repnz
mov
aaa
fisttps
movsb
filds
mov
int3
pop
fsubl
jecxz
inc
pop
gs
sub
jb
mov
out
dec
mov
cmp
cli
or
addr16
outsb
or
mov
xchg
pop
or
cmc
xchg
pop
repz
adc
arpl
sti
cmp
adc
loop
repz
ds
and
xlat
sbb
icebp
xchg
mov
inc
cmc
inc
xor
lret
adc
jp
sti
mov
xchg
xchg
in
scas
sbb
jp
push
pop
jo
dec
push
lds
add
popa
fildl
or
sti
imul
sub
loop
xchg
xor
ljmp
cwtl
loopne
cmp
sub
scas
sub
jnp
out
lret
sbb
push
test
sti
pushf
lcall
sbb
movsb
fists
mov
gs
pop
add
xor
sub
arpl
lock
xchg
fimuls
sub
insb
push
mov
cmp
cmp
test
inc
xchg
mov
xlat
pop
ficoml
or
fsub
ret
pop
sub
push
inc
adc
xlat
xchg
inc
jmp
mov
es
lret
divb
xor
fcoml
adc
pop
fistl
jb
sub
xchg
cmp
sub
or
shll
stos
sbb
data16
jbe
test
ja
pop
sub
fstps
mov
inc
fsubrl
mov
jo
adc
pop
push
fistpll
lret
cmp
adc
lods
sbb
fwait
push
mov
lods
cmp
shlb
adc
nop
sbb
fisubrl
add
les
jb
jae
mov
xchg
mov
adc
push
in
repz
les
mov
movsb
movb
sub
das
rolb
test
push
mov
fcomi
movsb
add
pop
or
js
adc
jl
call
jmp
xchg
push
push
fnstenv
mov
cltd
push
jno
out
insl
leave
fwait
arpl
aaa
pop
enter
gs
sub
fwait
xor
sub
adc
in
xchg
cmp
fistps
loop
mov
repnz
lods
pandn
adc
mov
lret
inc
rcr
popa
mov
jns
sbb
sbb
jecxz
mov
movsb
push
sbb
in
inc
lret
hlt
or
repnz
sbb
sti
xlat
push
cmpl
adc
iret
xchg
mov
bound
and
push
sbb
in
fistps
stos
pop
xor
adc
ljmp
repz
in
jae
mov
and
add
mov
sbbb
cmpl
xchg
rol
ss
xor
popa
insl
call
push
or
test
adc
ljmp
dec
inc
in
cmp
mov
filds
or
mov
cmp
pusha
enter
jg
js
ljmp
or
or
and
loop
loop
pop
jle
xchg
xor
and
lds
aam
jnp
sub
cli
mov
ja
lcall
adc
mov
call
std
xchg
fidivs
lcall
dec
fcomi
jnp
ljmp
and
repz
dec
mov
or
push
mov
mov
loopne
mov
popa
fidivrs
repnz
pop
mov
or
pop
mov
xchg
fists
lcall
xchg
jecxz
ret
cmc
cmp
add
pop
inc
imul
fstps
and
mov
and
hlt
mov
rcrl
jmp
rcll
sbb
sub
dec
or
pushf
xor
out
out
pop
std
in
cmp
scas
xlat
inc
fimuls
mov
xchg
ljmp
jg
ficoms
cmp
add
push
js
dec
sbbb
les
pop
lcall
push
cmp
fimull
mov
lret
imul
sbb
sbbb
loopne
sbb
inc
mull
es
jmp
cld
xor
ljmp
in
fcomip
and
inc
lret
lods
cmp
dec
sti
shll
js
imul
stos
pop
outsl
arpl
fistps
or
into
adcl
sbb
int3
jnp
xor
mov
xor
and
aad
mov
rcrl
fildll
dec
loope
or
sti
mov
sub
xchg
push
js
cli
sbb
xor
cmp
inc
jecxz
mov
fistpll
adc
scas
mov
sti
mov
shl
jecxz
lret
push
cmp
ljmp
xor
inc
hlt
pop
sbb
mov
in
jb
dec
ljmp
dec
loope
cmpl
sbb
popa
loopne
mov
lods
scas
pop
pushf
mov
inc
jg
repnz
mov
mov
sbb
jo
jle
cmp
lock
mov
and
add
clc
jecxz
gs
pop
cmp
mov
rorb
or
out
cmp
ljmp
push
bound
stos
and
mov
clc
jge
ljmp
icebp
insb
add
inc
cmpsl
dec
sti
push
scas
jp
sub
jbe
pushf
inc
sbb
sti
xor
inc
sub
jno
jae
pop
test
inc
fwait
mov
lret
les
bound
sbb
dec
jbe
mov
mov
gs
aaa
lock
sbb
sbb
and
or
sahf
nop
lret
sbb
pop
shl
cwtl
jmp
iret
or
cmpsl
push
mov
or
push
xor
mov
mov
sar
xor
int
xchg
or
xchg
ss
xor
push
outsl
mov
xor
lods
lea
or
xchg
mov
cli
xchg
and
mov
sbb
sbb
mov
jp
mov
or
push
jge
mov
mov
cli
lea
ljmp
xchg
adc
clc
mov
arpl
add
push
or
lods
bound
mov
and
push
pop
fistps
aam
mov
sbb
mov
out
sbb
outsl
pop
fnstcw
loopne
out
mov
sti
cmc
mov
push
sti
add
xchg
jle
repz
mov
push
xor
jg
mov
or
push
and
lret
bound
push
repnz
jmp
cmp
jnp
add
hlt
inc
adc
mov
dec
ud0
je
xor
jecxz
cwtl
pop
add
lea
pop
jo
subb
cld
pushf
test
test
xchg
hlt
cli
inc
cmpsb
pop
negb
mov
mov
or
mov
jmp
neg
ficomps
jmp
out
cmp
or
cli
jmp
dec
pop
pusha
ret
jae
cmp
sub
fdivrp
cli
lods
aaa
scas
xor
pop
mov
call
sub
shlb
adc
xchg
pop
adc
push
push
repz
pop
sar
loop
dec
or
dec
xchg
movsb
or
ret
jg
mov
imul
data16
push
rcr
cmpb
xchg
hlt
in
stc
lret
addl
jmp
nop
arpl
je
cmp
xchg
mov
mov
sti
xchg
mov
in
pop
add
lret
or
in
ljmp
cmp
pop
push
aas
adc
test
xchg
jle
ret
dec
enter
loop
jge
xor
lock
jae
in
in
push
mov
idivb
shll
jae
and
hlt
sbb
lahf
cs
sti
adc
mov
jmp
inc
xor
mov
sbb
cmpsb
xor
add
dec
insb
xchg
xor
popf
inc
loope
pushf
repnz
fisubl
das
fcoml
cmpsb
cli
ss
and
jae
push
icebp
pop
push
mov
jp
pop
bound
or
sbb
jp
pop
xchg
fs
into
inc
roll
jmp
pop
sub
cmp
and
jmp
mov
jne
add
xchg
and
fdivrs
mov
sti
mov
clc
mov
iret
movsl
or
ljmp
mov
cmpsb
and
in
aaa
push
iret
out
sti
inc
inc
jp
or
ds
inc
mov
sub
loop
add
lock
shr
sub
push
or
xchg
std
aaa
fdivl
mov
fdivrl
inc
pusha
test
fidivl
dec
addb
add
rol
cmp
adc
repnz
ret
loop
pop
aas
popa
sbb
bound
cmp
outsb
cmp
inc
xchg
inc
stos
daa
sub
xor
insb
sti
xchg
adc
inc
shl
inc
fistpl
xor
repnz
xchg
sbb
xchg
movsb
pop
pop
in
inc
jo
add
or
hlt
jb
sbb
aas
addl
mov
push
and
ljmp
xchg
xchg
cmp
test
sub
add
cmpsl
insb
xor
xchg
mov
fwait
mov
loop
pop
and
das
cmp
jb
jo
repz
jb
fwait
sub
sub
mov
popa
jecxz
clc
or
incl
cmp
xor
mov
adc
mov
pop
int
lds
xchg
scas
jnp
add
mov
sbb
jnp
cs
leave
scas
aas
cmp
pop
push
js
and
ljmp
lods
sbb
fisubrs
fisubl
popf
ficompl
popa
ret
and
mov
loop
and
pop
mov
arpl
ja
pop
inc
sub
and
push
sbbb
pop
mov
mov
xchg
inc
mov
jne
add
insl
and
shr
sub
imul
inc
mov
cld
mov
ret
jmp
aas
sbb
je
pop
cli
test
mov
push
negb
lret
lcall
dec
fsubrl
in
inc
and
sbb
scas
lock
sti
cmp
pop
jns
xchg
fidivs
in
dec
fcmovne
arpl
mov
arpl
jmp
shr
ja
fisubrs
shll
cmp
jecxz
fcoml
jb
lods
adc
imul
data16
imul
imul
and
xchg
mov
pop
adc
enter
mov
cmp
cli
xchg
in
ljmp
int3
mov
fsubr
fildll
aad
jnp
movsb
pop
fmul
imul
mov
or
and
pop
std
das
dec
pop
sub
jbe
mov
push
faddl
inc
pop
push
lea
loop
xor
int3
sarl
bound
lcall
lret
outsb
mov
nop
fsubrl
xor
lret
js
aaa
std
stos
cmp
push
loopne
sub
out
cld
lcall
push
ss
mov
add
sub
push
movsl
loop
dec
jp
sub
sbb
push
lock
inc
ficompl
stos
lods
mov
nop
push
cmp
stos
xor
or
xchg
cmp
jmp
out
mov
and
ljmp
int3
repnz
or
std
dec
add
out
mov
imul
outsl
fwait
xor
add
and
dec
scas
and
in
pop
xor
xchg
or
cmpsl
xchg
dec
aas
push
test
dec
mov
shlb
aaa
out
ja
or
jne,pn
aad
mov
test
ret
sbb
push
cmp
add
cwtl
pop
pop
lcall
lret
pop
ret
or
adc
out
mov
mov
mov
add
jmp
push
jo
lret
push
jne
clc
jecxz
add
pop
sub
jmp
ret
and
fiaddl
pop
inc
pop
or
cmp
xor
roll
sub
ss
stc
push
mov
add
xor
mov
test
fwait
and
push
inc
ljmp
mov
sbb
hlt
or
push
cld
adc
les
mov
xchg
jecxz
push
outsb
pop
loop
js
js
and
jo
xchg
inc
jecxz
popf
jnp
in
cmc
idivl
jo
and
cli
lods
aad
cmp
mov
xor
cmp
inc
sti
and
popf
jge
xchg
cs
jecxz
sbb
lock
cs
mov
ficoms
dec
hlt
nop
cmpsl
xchg
cmp
sbb
das
std
lea
stos
inc
bound
push
sarl
xchg
insb
mov
mov
mov
mov
sub
dec
jb
adc
or
sub
or
cmc
push
rcrb
incb
inc
aas
jb
pop
mov
sub
bound
jb
mov
xchg
gs
or
add
sti
jp
lcall
imul
cmp
roll
and
or
push
fldt
sbb
jb
push
gs
xchg
sbb
cld
cmc
test
mov
jb
mov
scas
in
mov
sti
cmp
in
inc
idivb
dec
loopne
lds
dec
push
sbb
or
push
jmp
pop
adc
mov
dec
jg
jp
sub
out
pushf
push
push
sub
out
add
fldenv
mov
xchg
pop
inc
repnz
and
arpl
dec
inc
in
ljmp
mov
xor
enter
dec
sarl
mov
xchg
push
mov
arpl
or
inc
xor
dec
lret
xchg
jmp
mov
fdivp
lahf
lret
mov
sub
mov
mov
xchg
push
lods
enter
jae
pop
or
sub
fnstsw
in
inc
mov
sti
mov
std
sbb
lock
cli
mov
data16
mov
mov
fsubl
push
jae
idivb
ja
jbe
inc
push
pushf
add
lods
cmp
cmp
and
pop
jge
jg
mov
sub
push
inc
jp
push
aas
mov
cmp
push
sbb
sbb
sub
fsubl
jo
cli
sbb
pop
bound
cmc
ret
sbb
adc
adc
aas
iret
inc
into
jb
sahf
test
roll
push
fildl
arpl
jne
pop
shrl
clc
inc
int3
lcall
and
shl
xchg
cli
ret
into
sti
xor
repnz
lret
stc
out
cmc
mov
cmp
sti
mov
cs
jo
xor
ljmp
xlat
jp
insl
test
testl
loopne
xchg
fwait
ret
sbb
cwtl
in
jge
jg
ret
shll
rolb
outsl
push
in
sub
lret
clc
jp
dec
push
fistl
adc
insl
lcall
xchg
or
mov
jmp
stos
sbb
setb
pop
mov
ret
cmpps
pop
shrb
dec
push
dec
fcmovu
sbb
jmp
mov
pop
sbb
insb
dec
adc
loop
fdivrl
sbbl
add
repz
js
ljmp
les
add
cli
cltd
ljmp
fisubrs
adcl
arpl
mov
fwait
adc
movsl
cli
jp
push
cwtl
ja
push
adc
mov
bound
or
shlb
lods
push
lea
adc
lahf
fwait
sub
stos
add
adc
jo
sub
popa
inc
adc
push
out
leave
iret
loop
pop
xchg
out
xor
outsl
mov
jno
fbstp
cli
mov
bound
pop
sbb
in
stos
add
divb
imul
push
lock
popf
push
xor
inc
out
out
mov
gs
scas
subl
and
jo
add
sahf
xchg
sub
pushf
into
dec
mov
insb
sti
and
or
imul
mov
fsubrp
scas
jg
aam
adc
mov
andl
jp
sub
lret
cld
jne
push
loop
jmp
test
xchg
pushl
mov
mov
rolb
insb
in
imul
xchg
jecxz
sbb
pop
or
mov
mov
pop
call
adc
mov
pop
clc
adc
cmpsl
and
mov
sub
jmp
fidivs
cmp
ret
es
xchg
movsb
insb
push
loop
fimuls
fdiv
mov
cli
jle
out
mov
push
xchg
mov
jo
insl
jns
ja
mov
sbb
cmpsb
and
inc
xorl
and
cmp
fstl
xor
aam
xchg
mov
sbb
add
outsb
jecxz
sbb
in
sbb
in
mov
xor
stos
aas
push
sub
jo
test
mov
pop
ljmp
or
sbb
ror
sti
sub
mov
out
jecxz
pop
sarb
push
adc
aaa
loop
out
pushf
out
inc
jb
std
stos
jo
add
fidivrl
mov
movsb
cld
hlt
pop
cmp
mov
jecxz
xchg
xchg
mov
mov
mov
and
adc
imul
fdivp
fnstsw
mov
lock
cmp
jnp
loope
fadds
pop
sbb
rcr
ss
and
pop
jnp
xchg
xlat
or
sbb
mov
inc
push
dec
jne
xchg
pop
mov
mov
nop
jnp
or
mov
in
les
inc
arpl
xchg
aam
cmp
sti
cmp
dec
scas
mov
xor
ret
mov
xor
fildll
inc
fdivrs
pop
into
adc
jmp
push
sahf
fidivs
pop
aad
lcall
xor
and
inc
out
jae
mov
shlb
fsubrs
dec
rorb
out
sti
jle
dec
inc
loopne
add
jae
lret
sbb
rorb
jb
jp
je
addl
pop
push
push
jno
out
jecxz
adc
sti
imul
test
adc
insl
out
das
popf
cli
sub
push
stc
ss
sbb
push
jne
inc
cli
add
shlb
push
sub
jmp
ret
push
lock
and
daa
sub
jl
lret
fadd
jmp
lahf
or
movsb
jmp
inc
or
adc
dec
or
int3
clc
xor
sub
mov
repnz
jle
pop
shrl
leave
dec
stos
and
ret
cld
shrb
mov
fidivrs
sub
in
mov
push
ds
es
pop
cli
xor
push
lock
cmp
jl
lret
aad
sbb
add
data16
repnz
lcall
jp
mov
call
inc
adcb
jge
mov
bound
mov
adc
arpl
sub
ds
push
fs
in
mov
inc
pop
mov
or
inc
loop
out
fsubl
mov
cmp
pushl
insl
dec
xchg
xlat
xor
insl
cmp
les
sbb
outsl
mov
cmp
mov
dec
sbbb
scas
xchg
mov
or
pop
pop
xor
cwtl
ret
bound
sub
dec
add
mov
stos
cmp
mov
jmp
sbb
mov
jg
push
inc
inc
sub
dec
mov
push
sub
and
cmp
jno
xchg
lret
test
pop
lahf
sbb
xor
jecxz
jo
lret
ljmp
leave
dec
sub
cmp
and
cmp
sub
fnstsw
enter
pop
add
outsb
jmp
sub
pusha
loope
mov
push
jmp
movb
lret
jecxz
sbb
mov
lcall
cwtl
cwtl
pop
jp
pop
cli
jae
adc
mov
mov
mov
into
sti
and
pop
je
test
test
push
xchg
jnp
mov
notl
mov
sbb
scas
add
out
jne
and
in
sbb
lock
lahf
cmpsb
pop
push
lahf
test
addr16
leave
loopne
sbb
scas
pop
loop
stc
push
jmp
dec
es
popf
xor
adc
cltd
loop
pop
dec
hlt
push
sbb
inc
lahf
repz
fidivl
pop
sbb
jmp
add
fs
mov
subb
enter
or
int
in
inc
dec
inc
pop
bound
lock
jnp
sbb
ljmp
push
sti
xchg
mov
cmpsb
fimuls
rolb
mov
mov
inc
sahf
shrl
in
sbb
xchg
xorb
shll
sub
mov
add
jle
clc
add
ret
ret
cmp
xor
dec
sti
jb
jmp
adc
push
stos
lcall
cmpsl
or
xor
pop
filds
inc
xchg
loop
out
xchg
sub
adc
sti
jp
sahf
mov
inc
fs
and
inc
nop
std
sbb
jb
dec
leave
imul
fildll
pushf
loop
lods
mov
or
cmc
jp
clc
fsts
sahf
inc
mov
adc
out
negl
push
push
cs
out
stc
jecxz
mov
xor
outsl
mov
out
ret
fdiv
dec
pop
lret
jae
ficompl
sbbl
lods
pusha
movsb
mov
sub
mov
loop
mov
fcmove
cmc
popa
pusha
jmp
jg
lret
hlt
filds
or
frstor
sti
mov
sub
imul
and
push
int3
insb
push
cld
cmp
insl
inc
xchg
cld
lcall
inc
push
push
pop
loop
imull
dec
ret
cld
scas
jo
in
insl
push
adc
jmp
mov
pop
cmpsl
sub
test
cli
push
repz
sub
fistpl
in
lret
jmp
dec
mov
ja
inc
inc
rdpmc
mov
sbb
icebp
jmp
xor
sbb
int3
dec
mov
jnp
xlat
movsb
icebp
insl
xor
mov
stos
lret
sbb
std
mov
mov
or
fstps
fadds
inc
xchg
sub
lret
dec
add
mov
xchg
mov
mov
cmp
rcrl
je
mov
push
cmp
push
ds
imul
test
xor
pop
fwait
cs
or
adc
cmp
jo
mov
or
jb
pop
add
fsubr
inc
xchg
lea
push
push
or
xchg
out
or
mov
pop
jnp
mov
cmc
mov
push
mov
cltd
mov
add
jne
and
ljmp
add
shll
jb
sbb
std
sbb
sbb
fistps
fidivrl
mov
jmp
ds
rcrl
jne
ss
push
cmp
rcrb
adc
stos
sub
mov
in
pop
push
jl
lret
std
int
cmpl
dec
lods
xor
cli
pop
es
sub
pop
pop
int
mov
jle
add
xor
mov
test
xor
dec
and
push
ljmp
stos
insl
mov
or
movsl
xchg
jp
xchg
fs
mov
jle
jnp
or
sub
mov
sbb
xchg
fiadds
ljmp
not
sbb
fisubl
xor
lock
stc
mov
adc
pop
sub
sbb
inc
scas
in
dec
lret
cmp
pop
ret
adc
bound
or
and
pop
in
cmp
adc
sti
sti
cmp
sbb
or
in
dec
bound
or
insl
push
sbb
sub
test
cwtl
sbb
fimull
hlt
aas
sbb
mov
test
arpl
aas
mov
xor
adc
sbb
xor
aas
jmp
cli
sub
dec
fsubp
pop
enter
xor
jb
cli
aam
dec
adc
bound
lahf
sti
ljmp
mov
pop
push
mov
in
and
orb
repz
adc
pushf
add
jb
jbe
dec
mov
add
mov
loop
aas
int3
inc
fcmove
jne
or
in
mov
fimull
dec
in
adc
fisubrl
jle
pop
dec
push
xor
cmpsb
fwait
push
xorl
cmp
jno
push
in
push
loope
fisubrl
fists
ljmp
or
dec
imul
sbb
loopne
subb
sbb
xchg
fists
add
loop
xor
sahf
movsb
lret
sbb
imul
adc
pop
ret
add
jmp
shrd
xchg
push
dec
and
xor
pop
fiadds
mov
ficoms
cli
aas
and
mov
arpl
mov
sub
fdivrl
xor
mov
jb
xor
inc
outsb
enter
sub
cli
inc
fimull
mov
xor
sub
pushf
rcl
pop
cmp
pop
sti
or
cld
cwtl
adc
sbb
fildll
add
lods
aas
pop
addr16
fucomip
cmc
xor
sbb
or
adc
lret
sbb
mov
lahf
fidivs
push
testl
adc
dec
test
outsb
sbb
rcrb
jge
sbb
arpl
sbb
dec
daa
fwait
xor
dec
jmp
test
rcrb
inc
push
jmp
stos
add
mov
stos
jle
mov
shl
push
pop
mov
ss
in
arpl
pop
fwait
xchg
testb
push
or
jl
sbb
inc
fisttpl
add
je
mov
out
xchg
fwait
mov
lcall
jmp
sub
int3
jmp
inc
imulb
xchg
shl
out
hlt
or
aam
sub
in
sub
mov
shlb
mov
mov
cli
xchg
out
cmp
push
mov
ljmp
mov
call
mov
fwait
scas
fmul
xchg
es
outsb
jmp
test
mov
repnz
or
push
mov
rcrl
stos
add
lds
dec
imul
push
ret
or
dec
int
or
jmp
sti
and
out
pop
xchg
pushf
pop
jmp
sub
jb
out
add
and
ljmp
mov
ffreep
leave
dec
dec
out
fists
xchg
repnz
or
fadds
dec
cld
mov
adc
mov
sbb
aad
sub
std
stc
int
pop
jnp
add
xor
add
sub
repnz
enter
pop
adc
aam
insb
mov
negb
clc
xor
push
xorl
repz
aad
js
add
sbb
arpl
xchg
mov
fisubrl
sti
jl
fists
adc
sbb
ret
adc
mov
sbb
bound
enter
sub
hlt
andl
pushf
mov
outsb
cmp
loopne
inc
popf
cld
pop
xchg
cld
mov
xchg
rcrb
test
lret
mov
pop
in
imul
repz
xor
out
jns
jne
adc
lds
mov
adc
and
je
sti
pop
pop
test
cwtl
or
lret
sbb
int
and
lock
mov
cmp
pop
or
fidivrl
pop
jmp
dec
cmp
xor
hlt
js
leave
mov
adc
add
in
insl
loopne
cmp
and
dec
xor
mov
xlat
jp
lahf
fwait
data16
jns
mov
dec
sti
cld
lea
lods
stos
inc
scas
adc
inc
arpl
arpl
insb
mov
js
xlat
loop
imul
fsubl
mov
lock
cmp
jecxz
dec
stc
shll
push
jo
mov
lret
loop
jl
call
push
fstl
inc
es
gs
adc
push
in
insl
sarl
minps
ss
shlb
dec
add
mov
sti
xor
jl
cmp
out
loop
xchg
push
shr
out
fsubl
or
loop
outsl
shrb
push
xchg
cli
xchg
pushf
push
aad
jnp
and
mov
jmp
fnstcw
mov
filds
mov
shlb
sbb
mov
cmp
fnstsw
pop
test
jae
or
jne
and
dec
lock
jno
orl
repnz
adc
int3
xlat
out
mov
roll
adc
push
push
jmp
dec
int3
jmp
push
aaa
xchg
les
cmp
and
push
push
add
loope
loope
lea
fildl
rclb
bound
in
scas
in
sub
fcompl
outsb
pusha
jmp
xchg
mov
mov
push
dec
call
mov
in
jo
jno
mov
cld
push
add
popa
call
fisubs
xor
cmpsl
aam
push
inc
sub
stos
add
pop
mov
mov
cli
das
dec
fldcw
stos
mov
adc
lcall
mov
cli
jo
sub
sub
dec
mov
xor
mov
push
cld
in
mov
mov
movsb
xor
mov
ds
lret
lahf
sub
xchg
mov
fisubl
sbb
jl
adc
mov
mov
and
jl
mov
ret
daa
push
sbb
pop
adc
push
add
lods
sbb
test
cmp
ficompl
adc
add
xor
mov
out
pop
mov
outsb
jmp
adcb
adc
in
loop
out
cmpsb
pop
xor
arpl
pushf
pop
or
pop
mov
sbb
imul
dec
ja
jb
jnp
rorb
sub
lret
pop
push
mov
inc
xor
add
cld
test
or
and
test
adc
xchg
pop
dec
stc
sub
mov
pop
stc
in
out
mov
cld
cmc
push
scas
ret
lcall
or
mov
jmp
mov
xor
push
loop
lcall
mov
mov
stos
xchg
sub
dec
fwait
cli
fbld
xchg
add
mov
dec
shr
add
pop
dec
push
cli
popf
jno
insb
mov
and
mov
dec
ret
xchg
cwtl
fiadds
push
or
pushl
rolb
or
fdivl
jo
ficoms
mov
or
cmp
std
sub
mov
ret
insb
push
jmp
push
sbb
xchg
mov
sbb
in
cmp
jno
lcall
lock
shrl
sbb
jnp
jmp
jne
mov
decl
push
movsl
ljmp
push
out
sti
into
mov
xchg
ret
cmpsb
bound
fbld
je
xchg
fucomip
mov
mov
or
daa
leave
imul
push
jp
push
scas
loop
into
jle
loopne
stos
incl
faddl
inc
mov
xor
jp
dec
shrl
and
rcrb
addr16
jge
xor
loopne
mov
mov
xchg
insl
lret
push
xchg
or
add
mov
or
sub
xchg
xor
pop
repz
or
mov
jmp
fbld
aam
push
out
popf
sbb
push
inc
bound
push
adc
mov
adc
sbb
pop
xchg
pop
aaa
insl
sub
fs
out
in
repnz
fxch
push
popa
mov
pop
or
pop
fimull
lcall
cmp
lret
jo
sti
ficompl
outsb
js
sarb
xor
hlt
push
and
stos
push
adc
or
mull
mov
jnp
inc
sbb
arpl
stos
fcoml
fimuls
lods
sbb
lods
orb
cld
add
jmp
ret
cmp
adc
sub
inc
mov
xchg
movsl
bound
fs
pop
or
pop
stos
pusha
and
sbb
mov
mov
out
ljmp
jbe
jmp
jne
sbb
addr16
xor
push
addr16
xor
push
out
into
pop
xor
lret
fwait
push
ficomps
rclb
or
push
repz
push
leave
xchg
rcll
push
sti
aam
dec
sbbl
mov
xchg
in
cld
lods
pop
sbb
scas
loop
xchg
jne
push
push
rclb
push
add
mov
mov
lcall
mov
jb
push
ss
faddl
lret
data16
js
stos
pop
push
in
sbb
xchg
mov
je
or
lea
jmp
xchg
jp,pt
pushf
add
fidivl
mov
aam
and
outsb
mov
cld
mov
in
in
icebp
cmp
add
dec
pop
xor
sbb
jae
mov
aas
pop
jp
push
fimull
sbb
fisttpl
adc
jmp
and
xchg
sbb
xchg
in
test
sbb
jns
xor
pop
stos
cmp
les
jnp
outsb
ret
loopne
add
and
jns
jl
pop
jae
or
sbb
fists
les
imul
adc
push
lock
push
and
arpl
rcll
into
pop
mov
mov
into
rcl
pop
push
xchg
daa
mov
test
xchg
pop
mov
cwtl
push
repnz
stos
or
xor
or
popf
insb
xor
out
sub
push
mov
or
scas
ljmp
xchg
jno
ds
mov
xchg
lcall
jg
add
imul
test
dec
and
stos
psubd
clc
bound
and
xchg
addr16
pushf
cwtl
mov
bound
dec
sbb
repnz
jecxz
aas
bound
or
mov
je
mov
out
lret
mov
les
push
jo
sub
ret
je
push
or
pop
stos
add
xchg
arpl
xor
add
add
pop
mov
jmp
add
push
jmp
gs
inc
in
fwait
bound
bound
aam
outsb
cmp
adc
pop
dec
dec
jp
stos
stos
ljmp
mov
push
adc
push
sub
lret
or
mov
pop
mov
push
bound
lock
into
inc
int
fcmovne
jbe
bound
mov
xor
ficoml
and
cmp
out
jge
in
mov
xor
data16
lcall
and
testl
jmp
std
inc
sub
aam
clc
xor
jle
and
sbb
lods
adc
adc
mov
lret
push
sub
filds
cmpsl
insl
inc
mov
inc
push
nop
sbb
add
loop
fistpll
and
dec
pop
or
sub
mov
cli
mov
dec
sbb
sbb
sbb
dec
outsl
xor
faddl
jmp
lds
or
rcrb
loope
add
push
lcall
lock
repnz
ja
ds
push
fisubrl
xchg
sti
adc
or
mov
scas
pop
insb
fists
stos
jmp
lret
add
sbb
jmp
sbb
adc
add
lahf
or
or
or
lret
mov
shr
cmpsl
pop
sti
addl
rcrb
adc
pop
mov
insb
ret
dec
cmp
lcall
pop
pop
fbstp
stos
cmp
or
leave
xor
push
outsb
gs
cld
cmp
and
lahf
bound
stos
sbbl
push
ficoms
icebp
scas
sbb
in
pop
inc
adc
sbb
xor
imul
out
aad
mov
fcompl
repnz
push
add
out
rorb
cmp
stos
jecxz
mov
mov
push
xor
inc
jl
sahf
jbe
sbb
mov
sti
sbb
ja
pop
testb
mov
insb
lret
adc
mov
push
jp
outsl
mov
ret
cld
mov
into
push
cld
push
sub
xchg
pop
dec
test
pop
gs
pop
push
mov
inc
push
lret
sub
xchg
movsl
mov
and
xor
ret
mov
sub
addr16
jp
pop
frstor
or
ss
sub
std
arpl
and
aas
loopne
je
psubb
sub
mov
rcll
add
loop
les
cs
repz
fwait
sub
cmpsb
orb
movsb
or
std
jmp
popa
or
mov
pop
sub
sbb
xorb
inc
nop
lds
xchg
and
jl
fbstp
lock
cmpb
ret
mov
push
outsb
or
lods
sub
push
mov
xchg
pop
testb
jp
add
out
sub
cmc
push
pop
shrl
fdivr
jbe
mov
mov
xorb
dec
outsb
fistps
sbb
lret
pop
pop
mov
ja
lock
gs
fidivs
pop
jecxz
xchg
or
test
arpl
addl
mov
out
bound
or
lea
xchg
setl
in
stos
sbb
ljmp
pop
xchg
and
mov
fwait
fs
scas
pop
jae
popl
jb
lcall
pop
jne
jnp,pt
dec
jmp
shl
clc
fisubrl
or
out
cli
pop
or
xor
test
arpl
pop
push
addb
sub
loopne
push
lret
out
je
cmpsb
and
xor
or
mov
and
mov
fists
lods
sbb
frstor
mov
xor
test
jbe
pop
sub
lock
dec
jecxz
js
xchg
cmpsl
fisubrl
inc
dec
repz
loop
pop
adc
xchg
jg
insl
fs
mov
jmp
mov
add
push
movsb
cwtl
repnz
sub
or
outsb
jo
pop
mov
inc
dec
ljmp
push
mov
mov
mov
and
push
pop
fsubrl
inc
aas
ss
std
cli
adc
adc
push
or
cld
adc
lock
clc
push
jae
jb
out
push
inc
jb
jmp
and
add
sub
pop
daa
sbb
fisttps
aam
xchg
lods
xchg
push
add
sahf
es
ficompl
or
imul
and
jae
fisubs
imull
sbb
xchg
sub
jg
lret
xorb
cmp
adc
push
imul
lret
sti
cltd
pop
shlb
sub
mov
lock
xchg
arpl
sahf
lret
pusha
paddb
js
mov
sub
lret
ret
repnz
dec
or
jp
dec
push
fldt
dec
repz
inc
arpl
adc
jnp
push
adc
pop
ljmp
or
sub
jno
loop
std
jne
rcrb
shl
icebp
xchg
push
insb
cmp
sub
orl
bound
dec
iret
subl
in
lods
lret
lock
sbb
mov
xchg
popf
cmp
enter
rorb
loopne
push
fnstcw
dec
aaa
mov
sub
cmp
xor
add
push
cld
sub
jae
fwait
cmp
or
lea
shl
enter
sbb
xlat
insb
ljmp
cli
leave
iret
cli
xlat
sbb
jo
jmp
mov
add
jp
shlb
or
lock
pop
mov
rcr
jp
je
xchg
mulb
push
arpl
xchg
pop
dec
lods
add
jge
sub
sbb
sahf
js
ret
sbb
divb
pop
repnz
pop
pushf
hlt
insb
adc
shrl
push
xor
push
sbb
imulb
inc
sti
dec
bound
ret
clc
or
in
xor
mov
lock
cmp
sub
push
bound
in
jno
adcl
sbb
popf
xchg
pop
mov
data16
aas
push
xchg
loope
mov
les
call
jmp
xchg
int
sti
xchg
adc
xchg
or
cmp
in
adc
sub
sbb
cmp
push
sti
sbb
or
loop
xacquire
stos
ljmp
mov
mov
xlat
js
pushf
push
dec
data16
outsb
mov
cld
inc
mul
repz
ss
jne
pop
or
cmp
insl
mov
pop
ljmp
or
in
jne
outsl
adc
or
stos
sahf
test
pushf
sbb
fimuls
test
jecxz
repnz
mov
sub
mov
ljmp
or
jnp
repz
jl
jp
jb
jmp
out
aaa
ljmp
add
mov
repnz
mov
pop
mulb
mov
rcrb
xlat
movb
cmpsl
es
in
iret
fldt
daa
sub
hlt
fcoml
adc
adcl
fmul
jmp
or
or
mov
pop
add
pop
ds
icebp
pop
std
pop
or
cmp
adc
sbb
mov
rcll
mov
hlt
mov
imul
fsubp
je
sub
jle
adc
pop
out
sbb
dec
adc
mov
repz
and
fcmove
push
fwait
lret
inc
sbb
sub
jg
dec
pop
sbb
pop
es
lret
cmc
xor
arpl
test
jmp
enter
orb
js
in
nop
inc
lahf
cmp
sbb
hlt
push
je
in
fisttpll
xorb
jp,pt
iret
cmp
enter
mov
and
aaa
lret
xchg
pop
lret
jge
mov
ret
push
lahf
lods
notb
mov
in
mov
or
repz
and
jecxz
mov
add
fcompl
bnd
pop
cld
push
out
xchg
lods
mov
xchg
cld
or
icebp
das
loop
scas
punpcklbw
pop
xor
adc
or
jnp
add
in
imul
int
loop
add
or
stos
jb
add
ss
push
push
jbe
push
pop
movsb
push
fadd
pop
dec
outsb
push
cmp
jle
or
add
sub
push
in
add
pop
xchg
rolb
dec
insl
xchg
dec
xor
xchg
push
and
fidivrl
bound
mov
js
fwait
ret
fmuls
jl
fs
sbb
sbb
mov
add
add
ljmp
mov
sbb
and
cmpl
mov
lock
pop
sti
das
mov
jae
pop
dec
sbb
pop
out
loope
pop
data16
iret
stos
dec
shll
pop
adc
mov
sahf
adc
mov
outsb
fdivs
arpl
and
cmp
xchg
adc
dec
mov
aam
fwait
nop
or
or
mov
xor
xor
inc
mov
and
pop
daa
pop
pop
add
lock
push
enter
out
cmc
jl
sarb
push
jbe
movsb
pushf
sti
ds
adc
cltd
sti
jge
in
outsl
and
pop
imul
call
push
mov
lods
aad
or
mov
sbb
inc
add
notb
mov
test
arpl
xorl
lcall
xchg
jmp
rcrb
clc
orb
push
in
push
scas
inc
fs
test
fstp
or
mov
test
movsl
inc
xchg
xchg
sub
hlt
sbb
scas
sarb
mov
cmp
in
push
dec
mov
sub
fistps
fbld
repz
sahf
ret
iret
popf
mov
xor
sub
ljmp
jmp
mov
and
loop
mov
roll
xor
ja
sbb
arpl
xchg
sub
jge
ret
repnz
sbbb
xchg
fisubs
mov
test
popa
push
insb
adc
sbb
test
bound
ljmp
pop
pushf
lcall
lret
jecxz
push
lret
in
push
push
xor
cwtl
cmp
leave
sub
dec
lret
xchg
in
fldenv
adc
jge
mov
cli
inc
jmp
or
popf
nop
xchg
in
icebp
and
outsl
repz
in
xor
cmp
out
scas
sti
repz
mov
arpl
add
repz
and
fdivrs
loop
mov
icebp
dec
lcall
sarb
mov
inc
or
lret
cmc
and
insl
jp
sub
sarb
in
cmp
add
nop
adc
ljmp
dec
stos
arpl
jbe
fisubrs
pop
mov
add
add
cmc
cmpsb
iret
rclb
sub
push
or
enter
or
and
or
sahf
mov
mov
cli
pop
es
arpl
mov
sub
mov
sub
sub
cli
push
aaa
imul
jge
clc
or
test
xchg
xor
out
cld
mov
mov
repz
mov
mov
dec
cmc
pop
mov
repz
fidivl
push
dec
xchg
imull
out
push
sbb
faddl
pop
cmp
push
mov
mov
loop
hlt
fcoml
jmp
sub
jecxz
mov
lea
mov
xor
icebp
sub
xor
push
sub
and
ljmp
ficomps
mov
addb
xor
add
lcall
cmp
bound
incb
mov
sbb
repnz
stc
or
into
bound
sahf
push
movsb
dec
das
cmp
test
pop
jae
mov
aas
dec
lcall
fmull
lret
sub
add
mov
lock
push
popf
jo
push
out
ret
lret
cli
orb
stos
adc
mov
jle
ret
add
mov
pop
fndisi(8087
adc
lahf
pop
add
dec
fs
push
and
les
fcmovu
cmp
sub
test
out
data16
jae
adc
cli
ud1
mov
mov
adc
or
dec
leave
in
mov
movb
ror
bound
add
add
or
and
xor
or
jo
repz
mov
mov
sbb
dec
insl
push
xor
xchg
dec
bound
out
or
cmp
ret
mov
mov
test
sub
sti
into
mov
or
dec
push
lock
sbb
int3
loop
hlt
mov
cli
lods
scas
sbb
ljmp
mov
inc
sub
push
or
add
sbb
push
sahf
dec
out
push
cmp
adc
sub
and
rcrl
push
pop
xchg
pop
xor
mov
es
data16
adcl
dec
pushf
fwait
loop,pn
movl
mov
sahf
call
xchg
cmp
sbb
pop
or
sbb
out
push
popa
pusha
inc
sti
jp
or
or
push
fs
lds
sub
adc
add
jmp
cmp
int
sti
mov
vshufps
jge
jnp
sbb
call
cs
mov
mulb
lock
pop
aam
ret
xchg
lea
jecxz
add
add
call
lods
xchg
movsl
cmpl
je
push
icebp
fwait
push
jmp
bound
ljmp
movsb
frstor
xchg
dec
and
loop
push
dec
pop
mov
fisubl
into
loop
mov
pop
pop
sbb
popa
push
mov
xchg
sbb
push
dec
sti
loop
lock
loop
gs
fcmovnbe
lods
mov
lock
shll
add
sbb
jae
sub
dec
jns
incb
cmp
fcoml
lret
cli
fstpl
outsb
test
loop
cli
jmp
cmp
sub
mov
inc
or
jns
xor
cld
stc
nop
loop
lret
lods
jno
inc
popa
or
adc
sahf
out
sbb
mov
sbb
fistl
or
inc
imul
jno
ljmp
pushf
sub
sub
adc
sub
and
jge
loop
cmp
inc
or
cli
or
dec
sti
inc
mov
bound
push
adc
jo
scas
outsl
ss
jecxz
in
fimuls
popf
int3
sarb
shll
stos
cld
mov
mov
push
adc
mov
subl
pop
loopne
sbb
and
xchg
cld
mov
or
xchg
pop
adc
clc
pop
fwait
push
jecxz
ja
lret
out
in
inc
in
fwait
jnp
bound
xor
in
jecxz
sbb
push
stos
mov
lock
sbb
fbstp
mov
sti
sti
lods
mov
push
pop
or
shl
xor
and
mov
jp
inc
std
sbb
push
out
and
sbb
sub
and
js
loop
pop
mov
enter
sub
pop
ja
aad
sti
pop
movsl
fsubl
mov
and
cmp
arpl
sti
es
sarl
push
mov
aaa
push
ret
negl
mov
pop
mov
adc
sbb
add
add
enter
bound
or
in
mov
mov
pop
dec
sub
cmpsl
jnp
inc
push
mov
repnz
or
cmp
lock
jno
mov
add
jo
mov
xchg
fistps
loope
mov
mov
sub
jo
cli
inc
nop
cli
xor
inc
jp
pop
push
pop
fdivl
movsb
ja
idivl
je
cmp
xlat
push
outsb
pop
pop
inc
aaa
and
or
push
sub
cli
jmp
mov
xchg
sbb
push
sub
jne
leave
cmp
jmp
lock
addr16
cli
movsl
pop
out
insb
stos
sub
mov
dec
loop
mov
xor
add
sahf
sub
fwait
adc
fcmove
sbb
leave
inc
insb
loop
popf
bound
fmull
call
cmp
mov
out
cmp
ficomps
push
popf
jnp
pop
jnp
pop
xchg
add
pushf
std
cmp
bound
lock
pop
sub
push
xchg
pop
push
push
push
repz
push
movsl
adc
pop
and
sbb
push
pushf
test
jge
cld
xor
fldcw
sbb
pop
stos
pop
daa
xchg
cmp
jle
lret
in
pusha
dec
mov
lret
push
out
jp
in
insb
and
fisubs
mov
mov
pop
jnp
push
jmp
stos
and
and
cmp
icebp
or
imul
mov
lret
lock
sahf
lret
pop
sub
or
push
std
and
imul
cld
pop
out
ljmp
push
sbb
dec
fs
jge
movsl
mov
loop
sti
punpcklbw
lock
and
mov
push
jg
sbb
fucomip
test
in
xchg
popa
lock
mov
jae
push
lods
fmuls
mov
mov
lock
xchg
mov
mov
or
jmp
push
jbe
and
cmp
mov
lret
xor
imul
cli
out
ret
push
aad
pop
vcvtsi2ss
cmp
cmp
and
mov
inc
and
ret
neg
ret
out
add
and
pop
adc
sbb
jb
mov
aaa
add
mov
or
fnstsw
mov
fwait
xchg
fwait
aad
mov
mov
loop
jnp
add
push
mov
loopne
sub
lock
jb
mov
xor
pop
lahf
jecxz
xchg
pop
ljmp
shlb
out
fwait
add
mov
stc
push
inc
stos
xor
lret
pop
bound
lcall
pop
aas
or
sar
mov
pop
fbld
arpl
ss
sbb
in
or
adc
aad
jg
ljmp
cmp
xchg
jp
and
add
push
adc
jb
or
sbb
enter
or
add
cli
xchg
testl
stc
aas
cmp
fiadds
aam
subl
and
xor
adc
addr16
jmp
adc
out
mov
pop
arpl
push
or
loop
mov
jb
ja
adc
inc
pop
or
lods
adc
xchg
pop
and
add
clc
insb
push
inc
jp
mov
mov
push
test
and
mov
jnp
add
jle
sub
sbb
divb
lcall
dec
popa
adc
cld
hlt
rorl
stos
lea
fcomps
mov
lcall
loop
add
jge
and
mulb
push
pop
fdiv
bound
mov
mov
repnz
test
bound
adc
or
add
aam
int3
int
stos
mov
lret
xchg
mov
stos
push
clc
or
sub
stos
push
jmp
pop
mov
inc
or
xor
stos
mov
sbb
test
sbb
xor
add
xor
cmp
pop
mov
jg
xchg
cld
sarb
adc
test
xor
imul
push
xlat
nop
inc
pop
mov
aam
push
loop
test
sti
xor
adc
dec
in
push
or
adc
dec
loop
pop
jo
dec
sub
inc
bound
jmp
cmp
mov
jmp
sarl
lret
xor
insl
cmp
or
in
cmp
and
pop
es
bound
jo
push
adc
mov
pop
mov
cld
hlt
fisubl
sbb
or
jmp
insl
es
insb
adc
inc
sbb
add
add
test
imul
xchg
xchg
rcrl
sub
mov
xchg
mov
ret
pandn
fisubrl
fsubs
adc
mov
sbbl
sti
push
lahf
dec
jmp
xor
mov
xchg
cmp
add
xchg
mov
mov
in
mov
enter
xchg
and
idivl
mov
xor
test
dec
jnp
in
sbbb
xchg
add
sbb
xor
lods
sbb
push
bound
subb
or
jmp
lret
mov
in
orb
sub
stos
jmp
ds
fdiv
lcall
cwtl
pop
lock
inc
xchg
jb
mov
cmpsb
repnz
mov
fsubp
add
xchg
jbe
fistl
sbb
push
or
xor
cmp
aad
pushf
mov
mov
xchg
fstp
insb
cmp
into
mov
pop
xchg
cwtl
sbb
test
movsl
aas
sub
test
adc
sbb
sub
mov
sbb
mov
push
testl
cmc
in
fs
lods
or
repnz
leave
inc
cmp
sti
movsl
mov
sub
and
ljmp
xor
mov
dec
ljmp
push
dec
push
aam
insb
inc
sbb
pop
mov
inc
test
xchg
add
or
test
ljmp
gs
pop
inc
and
hlt
in
stc
ret
lahf
adc
mov
cs
imul
adc
fistpl
data16
fmull
xchg
rcrb
or
dec
or
addb
imul
loope
add
cmp
jmp
xor
pop
or
pop
enter
js
fistpll
mov
insb
sbb
mov
or
xchg
dec
xchg
lret
jp
call
lock
mov
xchg
mov
bound
sbb
call
daa
mov
sbb
cmp
xor
push
movsb
push
mov
jmp
sti
mov
push
repnz
cmp
jmp
call
pop
adc
pop
fisttpll
dec
push
bound
rcll
add
outsl
mov
scas
pop
sub
call
sbb
cmpl
es
or
aaa
ret
inc
or
pop
and
mov
nop
pop
xor
xor
mov
aam
push
idivb
ljmp
lea
mov
repnz
pop
and
pop
fisubrl
or
mov
cmp
push
cli
mov
std
xchg
and
fisubs
push
dec
imul
ljmp
pop
cmp
lcall
enter
jo
cli
ret
jle
mov
push
leave
jmp
shrb
out
adc
outsl
adc
ss
ja
sub
lret
inc
and
sbb
cltd
push
aad
repz
in
fldcw
out
daa
mov
inc
cmp
jp
dec
movsb
cli
aad
test
xchg
fwait
lret
mov
mov
outsb
pop
into
arpl
popa
mov
lahf
addb
or
sub
cld
pop
lcall
lret
imul
ds
fisttps
pop
mov
mov
pop
repz
cli
fcmove
in
sub
lock
mov
mov
jae
mov
sbb
jp
iret
arpl
out
jb
sbbb
mov
jecxz
cmp
sub
insb
fcomps
sbb
sub
mov
mov
sub
sti
pop
dec
push
mov
mov
pop
dec
out
arpl
out
pop
loop
repz
pop
lret
lods
aas
ds
fwait
push
cmpsl
inc
in
dec
filds
xchg
in
jmp
aam
sub
xor
filds
mov
movsb
add
ljmp
sbb
xchg
cmpsb
daa
mov
sbb
inc
stos
pusha
arpl
pop
pop
or
pop
sbb
sti
xchg
mov
lods
mov
cmpsl
pop
or
sub
in
jmp
sti
mov
out
mov
je
mov
xchg
xor
loop
xchg
dec
sub
pop
xor
pop
push
jae
lock
push
cmovb
lret
decl
scas
xchg
mov
cmp
int3
movsb
lcall
insb
adc
jmp
fisubl
movsl
mov
dec
sti
pop
js
fwait
sti
add
lea
scas
jbe
out
jp
push
loopne
jg
xor
push
repz
into
in
mov
dec
push
dec
shrl
push
fisubl
push
ljmp
push
mov
pop
mov
lea
pop
adc
arpl
js
loop
imul
loop
popf
lea
sar
push
and
xchg
lea
pop
arpl
push
pop
jg
pushf
mov
pop
jmp
push
dec
add
jo
jp
push
jnp
dec
jbe
sbb
cmp
lcall
mov
lds
cmp
xor
mov
or
or
add
cmp
mov
mov
xchg
adc
shr
enter
and
cmc
mov
mov
sub
mov
mov
cmp
movsb
dec
mov
fld
sti
mov
xchg
jge
inc
pushf
or
cmp
loop
sub
jmp
loop
dec
sbb
jo
pop
fwait
lcall
or
mov
push
mov
daa
pop
shl
jnp
and
xchg
in
xor
fs
and
dec
jecxz
xchg
hlt
loope
cli
lods
ret
cmpsl
mov
ljmp
sub
cmp
cmp
inc
cld
aam
mov
pop
fistps
shrl
decl
inc
inc
sahf
jge
hlt
out
rcrl
mov
mov
mov
ja
cwtl
ljmp
pop
lea
jmp
out
xor
jne
push
rcrb
incb
pop
jp
xor
in
pusha
fisubs
or
shrl
mov
cmp
stc
jle
and
cmp
subl
add
aas
pop
xchg
idiv
dec
jnp
pushaw
les
and
ucomiss
pop
and
or
movsb
cmc
push
pop
repnz
rcrb
fsubrs
xor
adc
pusha
mov
cmp
sbb
or
push
arpl
ds
mov
inc
adc
push
rcr
add
into
in
sbb
das
loop
add
pop
xor
jne
std
scas
out
gs
int3
pop
sub
rolb
adc
jp
push
outsl
mov
pop
cmp
loop
mov
pop
stc
vandnps
lret
xor
cwtl
push
in
jge
jle
loop
inc
rcrl
lcall
sub
cld
and
out
mov
call
out
inc
adc
lret
bound
adc
sti
pop
dec
cli
ljmp
sbb
mov
and
add
dec
dec
mov
push
mov
ljmp
mov
add
adc
xlat
rcl
mov
lret
or
je
sbb
dec
pop
std
arpl
jae
xchg
andb
adc
dec
out
mov
add
test
pop
cmp
push
cli
inc
push
movsb
sub
fisubl
dec
faddp
mov
hlt
pop
push
adc
sub
mov
lcall
xchg
add
sbb
enter
in
mov
jb
and
iret
fsubp
lret
aad
lahf
ret
ljmp
xchg
inc
lret
or
ficompl
dec
enter
shlb
dec
mov
jp
pushf
jmp
mov
lcall
add
push
mov
ja
mov
mov
cwtl
mov
lret
or
mov
ss
jle
or
mov
sbb
fisttpl
jge
cld
shrb
insl
sub
mov
popf
es
adc
jne
sti
cli
int3
pop
push
out
dec
fiaddl
cld
je
pop
fbstp
leave
or
icebp
push
mov
filds
bound
aaa
mov
xchg
leave
fwait
sub
lea
jae
mov
in
mov
lcall
dec
adc
sub
and
mov
xor
js
cmp
in
nop
push
mov
xchg
xor
push
subl
mov
outsl
lcall
jbe
pop
or
out
ret
testb
lea
lcall
lea
sbb
cmp
adc
mov
ficomps
fwait
ljmp
and
pusha
in
fimull
dec
and
mov
mov
mov
push
pop
out
loop
push
pop
sti
jmp
or
in
push
arpl
adc
cli
fucom
or
mov
xchg
cmp
push
gs
imul
dec
fwait
pop
push
sbb
pop
ss
and
or
mov
push
mov
lock
test
push
sbb
cmp
xchg
stos
lahf
pop
dec
xor
mov
cmp
adc
sub
sbb
push
in
call
add
ret
jecxz
xchg
sti
jno
jnp
ror
dec
and
push
test
jp
lret
fidivrs
mov
mov
mov
loop
dec
sbb
push
jmp
jecxz
sbb
jno
cmp
cld
js
in
xchg
mov
jmp
push
lcall
pop
push
jmp
or
mov
mov
jae
mov
mov
sbb
notb
or
add
mov
push
fldl
loop
inc
xor
scas
xchg
push
mov
mov
clc
mov
jnp
fldt
loop
in
ficoml
cmp
lods
int3
mov
push
imul
jmp
jne
push
in
jl
push
push
pop
imul
jne
cmp
and
mov
filds
cmp
jle
dec
pushf
mov
pop
fmuls
fiadds
push
jp
sub
and
push
iret
xor
cmc
cs
sti
in
mov
mov
or
xor
sub
in
aaa
ss
sub
test
fcoms
pop
pop
and
adc
xchg
test
xor
jmp
mov
stc
mov
inc
jp
rolb
in
xchg
sti
xchg
sti
lahf
lcall
dec
hlt
push
aaa
xchg
fcomps
divb
loop
xchg
sbb
push
or
je
cmp
lret
mov
cmp
xchg
sub
xor
cmp
jnp
or
ficomps
mov
lahf
out
fisubrs
add
fdivp
inc
push
imul
sbb
push
arpl
ljmp
mov
xchg
fcmovbe
pop
fimuls
pop
mov
mov
xor
lahf
imul
adc
ret
jmp
fimuls
xchg
jno
and
cmpsl
pop
dec
arpl
mov
xchg
cli
cmp
cmp
xchg
xchg
mov
mov
jne
adc
cwtl
xor
lock
jns
fsubs
pop
lret
cmp
or
xor
pop
pop
pop
adc
inc
in
mov
shll
fimull
stos
icebp
in
jg
mov
sbb
pop
and
mov
jbe
sub
push
push
loop
in
push
shrl
cld
push
stos
loopne
pop
outsb
outsl
and
or
jg
pop
jo
and
hlt
bound
xchg
push
shrb
jae
add
and
add
sti
bound
mov
xor
push
imul
or
inc
not
in
fimuls
xchg
subl
ljmp
lcall
jg
push
xchg
or
cmp
outsl
sub
jecxz
fstl
jne
pop
cli
int
in
jge
repnz
mov
adc
mov
leave
or
js
xchg
mov
ljmp
or
loop
loope
pop
add
add
jmp
out
imul
out
jbe
dec
lret
shl
xor
adc
cmp
ss
lcall
xchg
mov
sahf
xor
imul
push
fsts
in
int
xor
cmp
lods
or
cmpsl
sbb
pop
inc
fsubs
aam
sub
lret
or
sbb
addr16
mov
sbb
add
movsb
sti
lret
shlb
sub
cmp
cmpsl
sbbb
stos
insl
cmp
mov
in
jecxz
xor
sbb
fwait
or
bound
inc
cmp
icebp
mov
popf
inc
jmp
and
or
inc
jp
addr16
cli
cmpsl
cmp
daa
jnp
jnp
mov
jb
fadd
ljmp
and
add
clc
xchg
adc
push
lret
neg
push
sbb
sub
rclb
es
mov
sti
xor
pop
lret
mov
aad
in
jecxz
pop
sub
sbb
notb
out
dec
inc
pop
ljmp
push
mov
fcompl
mov
push
push
ljmp
fnstsw
cld
mov
mov
out
jl
mov
pop
or
and
xchg
andb
daa
or
adc
jo
add
jmp
outsl
into
mov
hlt
adc
or
cmp
popa
mov
jp
dec
imul
push
lcall
xor
push
lret
inc
in
add
xor
xchg
test
rcl
lods
pop
push
out
sbb
fcomip
jnp
sbb
xchg
xor
adc
sbb
mov
fcmove
push
out
fs
or
dec
xchg
sbb
sub
cmp
loop
iret
sub
cmp
adc
push
mov
fdivl
pop
push
jbe
mov
and
jge
clc
pop
fbld
outsl
and
aas
pop
sub
outsb
sbb
mov
ljmp
mov
fsubs
and
push
xor
xor
adc
cmp
jb
cli
imul
fnstenv
dec
mov
movsb
jnp
aad
mov
push
pop
test
pop
je
jl
adc
inc
lods
jmp
lahf
push
mov
pop
or
pop
int
xchg
insb
fidivrl
fisubrl
and
xchg
push
jb
pop
add
loop
movsl
xchg
arpl
fisubs
mov
lcall
lret
repz
pop
bound
jb
pop
and
ret
std
ficoms
add
xchg
adc
jmp
and
fidivs
lcall
push
lcall
fldt
push
and
mov
int
jae
lahf
mov
fsubr
test
push
movsl
repnz
stc
fidivl
jp
lock
jmp
mov
iret
xchg
xchg
test
push
dec
and
fildl
jne
daa
add
ja
pop
lods
sub
dec
dec
adc
insb
cwtl
sbb
mov
dec
scas
sbbb
aam
sbb
mov
sub
xchg
mov
and
dec
lret
shrl
fisttpl
pop
add
imul
lea
loopne
xchg
pop
push
lret
add
lock
sti
cli
mov
loopne
outsl
gs
add
rcrb
mov
and
cmp
sbb
fistpl
mov
fcmovnbe
fwait
xchg
mov
fstpt
ja
insb
jnp
xchg
mov
pop
mov
rcrb
mov
insl
xchg
out
adc
or
cwtl
cltd
out
adc
sbb
adc
add
sti
push
movl
fisttpl
inc
pop
stos
mov
push
mov
cli
push
push
shl
ret
int
rcr
leave
into
pop
mov
or
push
jae
push
mov
xlat
pop
fisttpl
and
cmpsl
outsb
mov
and
fldt
push
jb
jno
fistpl
imul
mov
movsl
push
cmpsb
jbe
and
and
xor
fstpt
scas
lcall
mov
xchg
lahf
fisttpl
xchg
mov
pminsw
or
fbld
imul
mov
add
fidivrs
xor
xchg
and
ss
cmpsl
enter
sbb
je
inc
dec
adc
and
ret
inc
movsl
mov
mov
out
or
jmp
fdivrs
xchg
rclb
push
sti
fcomi
dec
outsl
out
xchg
fldt
call
pop
fisttpl
stc
cmp
inc
scas
cmp
loope
sahf
int3
sub
xorl
sub
cmp
mov
jo
iret
sub
jns
pop
inc
mov
sbb
mov
lods
orl
stos
xor
adc
mov
add
add
sub
lods
loopne
or
cltd
aaa
pushf
enter
add
idiv
xchg
pop
rcrb
les
sbb
add
das
xchg
mov
ss
dec
popf
test
dec
jae
fildl
enter
cmp
fndisi(8087
bound
js
out
adc
inc
imul
fcmovnbe
cli
mov
test
fisttpl
aaa
rorb
mov
lahf
and
adc
loop
and
fidivl
jl
push
stos
sbb
hlt
fistpl
ret
pop
xchg
pop
mov
mov
dec
xchg
fstpt
and
shll
std
call
iret
cmp
fildl
lahf
inc
out
fildl
je
or
mov
pop
outsb
leave
pushf
cmpb
and
cmpsl
dec
loopne
sub
imul
imul
mov
xor
sbb
idivb
pop
jo
andb
mov
lock
mov
push
loope
imul
push
xchg
movsb
ss
fisttpl
mov
jecxz
call
inc
lcall
sbb
out
jb
jns
adc
in
xor
push
loopne
popf
inc
mov
scas
pop
int3
mov
push
cmp
pop
xchg
jmp
sbb
sbb
sbb
or
mov
add
stc
das
mov
cmp
add
cmp
cmp
pop
rcr
xchg
into
pop
cmp
adc
fisubrl
sub
xchg
lods
loope
into
cmpsb
mov
mulb
aas
fidivl
push
out
dec
in
pop
and
pop
mov
fildl
in
lods
mov
fdiv
fstpt
or
pop
sbb
cmp
sbb
mov
mov
lcall
movsb
mov
fisubrs
xor
ficoms
mov
or
pop
lds
mov
lock
stos
dec
adc
xor
cmp
push
pop
popa
test
jmp
lret
cmp
push
cmpsb
daa
push
xchg
inc
inc
mov
cmp
in
fisttpl
lret
dec
ficoms
clc
movsb
adc
rcl
sbb
shrl
add
sbb
or
mov
ljmp
adc
in
push
pop
mov
test
xchg
pop
in
lea
pop
fistpll
sbb
mov
xor
xor
ficoml
jbe
cld
jp
clc
mov
inc
fistps
stos
xchg
lds
rorb
imul
test
pop
sti
pop
out
ret
mov
loopne
hlt
jle
jecxz
test
int
xchg
scas
push
loopne
jb
shl
fdivrl
lods
out
push
jne
fisttpl
sbb
cli
aad
xor
ret
sbb
repz
repnz
fstpt
leave
pop
rcl
cmpb
jle
mov
adc
out
ret
popa
sbb
adc
pop
fst
negb
mov
mov
int3
clc
push
push
dec
cmp
mov
popa
cltd
scas
fstpt
sub
pop
pop
xor
cmpsl
nop
push
daa
sbb
rolb
fucomi
das
or
xorb
out
jns
fstpl
fisttps
sarb
ror
jnp
xchg
in
std
fistl
sub
sbb
jecxz
fstpt
je
jbe
faddp
roll
mov
fistl
xor
adc
jge
add
push
inc
stc
sub
imul
and
pop
inc
cmp
in
movsb
sti
fsubl
sub
fisttpl
stc
lret
push
push
rcll
inc
repnz
jl
outsb
imulb
flds
mov
inc
stos
inc
in
inc
repz
mov
int3
xchg
sahf
pop
jmp
jae
jne
gs
rolb
sub
mov
icebp
fistpl
push
pushf
push
jne
je
sbb
popa
das
pop
and
inc
shlb
cmpsl
test
test
add
mov
adc
inc
adcb
in
dec
movsl
fistl
xchg
mov
rcr
lret
mov
outsl
dec
sbb
sub
fistl
pop
filds
ret
rcr
dec
push
dec
and
xchg
bound
cltd
mov
fucomi
cli
pop
jge
pop
rol
fildl
push
sti
adc
add
std
rcll
call
fldt
sub
cmpsb
clc
data16
mov
ret
pop
mov
insl
ficoms
jle
pop
lea
pop
pop
pop
and
imul
popa
movsb
nop
filds
jae
iret
jge
cmp
in
imul
xor
les
dec
push
pop
or
cmp
sahf
dec
xor
sbb
push
gs
cmpsl
cmp
push
insl
mov
mov
das
jo
dec
inc
or
push
jl
cmpsl
push
mov
sar
stos
setge
pusha
sub
cmp
mov
jle
push
ficomps
fwait
sbb
mov
push
adc
mov
clc
insb
scas
xor
aam
popf
je
xor
out
mov
fucom
pushf
xchg
adc
stos
xchg
adc
inc
incb
rcr
mov
lcall
fldt
jnp
pop
outsl
add
call
pop
sbb
cmp
and
cmp
rorl
push
fistpl
call
mov
in
dec
inc
out
les
and
xlat
inc
test
push
aas
cs
sbb
fisubrl
cmpsl
mul
insl
lret
rcr
pop
call
out
fcomi
push
add
cmp
outsl
and
jecxz
mov
sbb
lret
inc
xor
fisttps
mov
int
cmpsb
fwait
lahf
in
iret
dec
loopne
push
inc
jg
rorl
loopne
in
ja
or
mov
aas
fsts
push
mov
shll
adc
repz
jle
xor
sub
insb
loopne
push
push
add
adc
es
xchg
stos
fistpl
pop
cmp
fcom
lock
js
cmp
fistpl
out
stos
int3
fisttpl
dec
pop
jnp
adc
aas
push
pop
fistl
lods
pop
dec
lea
in
fistpl
push
push
js
lret
out
jmp
jo
mov
repnz
xor
cld
sub
mov
dec
ljmp
mov
cmpsl
push
cmc
xchg
fistl
repz
ret
test
mov
pop
sub
push
xor
fs
jno
xchg
cmc
fistpl
fcoml
in
out
fisubrl
repz
in
or
add
imul
subl
fwait
push
dec
dec
jmp
pop
add
test
mov
mov
fwait
js
xlat
loop
mov
add
je
inc
mov
dec
sub
push
pop
pop
push
fcmovne
adc
or
popa
mov
xchg
lds
mov
sbb
loop
es
xor
xchg
mov
push
pushf
mov
movsb
dec
scas
data16
lret
sub
popf
cltd
xchg
cmp
xchg
int
aaa
jecxz
fildl
js
in
fistl
lock
cli
fildl
push
neg
xor
mov
xchg
sarl
pop
mov
or
fucomi
mov
xor
enter
jg
and
push
inc
shrb
push
in
push
ds
fnstcw
inc
loopne
in
mov
push
push
fisttpl
repnz
fistpl
pop
jecxz
add
pusha
enter
mov
fcmovnb
pop
push
xchg
sbb
inc
jb
mov
ficoml
int3
add
repnz
fcmovu
cld
mov
cmp
pop
rol
pop
popa
jne
icebp
testl
test
cmp
into
xchg
sbb
xor
lret
scas
fucomi
adc
add
iret
jmp
fcomi
dec
cltd
mov
das
lcall
xchg
lods
test
loop
shrb
and
mov
fcmovne
sbb
jne
das
popa
fstpl
fisttps
xorl
adc
push
pushf
pop
push
aad
inc
shlb
sahf
bound
xor
jns
push
dec
cli
inc
push
fildl
imul
ja
jecxz
mov
inc
sbb
mov
in
test
stc
push
fldt
mov
ret
mov
sbb
int
in
mov
xchg
push
dec
pop
fistl
pop
xchg
push
sbb
push
stos
jae
test
out
dec
scas
test
inc
or
pusha
dec
push
jecxz
cmpsb
cmpb
and
mov
push
fneni(8087
cmp
mov
or
add
and
sub
inc
jo
and
mov
movsl
cmp
dec
pusha
mov
cmpsl
sub
imul
mov
and
jge
mov
lods
pusha
call
sbb
jmp
xchg
loop
inc
sbb
imul
pop
and
fcmovnu
mov
push
cmp
mov
fisttpl
aaa
movsb
lret
adc
xchg
fbstp
fildl
in
loop
xchg
ret
fisttpl
js
fdivrp
shll
stos
movsb
insb
jnp
sbb
add
fildl
repz
incb
sbb
lds
pop
sbb
fisttpl
mov
mov
fldt
xor
jne
mov
add
and
fistl
or
in
mov
aas
loopne
add
sub
pop
mov
outsl
and
pop
adc
repz
fstpl
outsl
push
fwait
or
adc
xchg
cmp
loope
fbstp
lods
lcall
mov
xchg
loop
mov
adc
cltd
lds
pop
ja
pusha
lock
push
mulb
push
cmpl
pop
js
fistl
jg
jmp
pop
dec
xor
cmpsb
xor
loopne
into
sbb
mov
negb
mov
rclb
enter
in
cmpsl
cmpsb
lods
rcrl
add
mov
imul
pushf
cs
fcmovne
mov
push
fnclex
adc
mov
fildl
inc
xor
fstp
lea
push
pop
enter
fwait
inc
in
sti
sbb
jbe
ss
and
rcrl
adc
xchg
and
fcmovnbe
aad
mov
imul
test
cmc
dec
pop
fisubl
cli
mov
inc
fstp
into
ret
pop
insb
inc
inc
add
adc
lods
fdivs
test
sar
xchg
push
push
insb
fidivl
aas
push
test
mov
lret
cmp
or
arpl
rcl
ds
pop
dec
pop
lea
dec
push
xchg
sarb
dec
sbb
inc
jmp
mov
inc
adc
shl
fldt
inc
push
rcr
lret
mov
pop
xchg
jl
sub
mov
outsb
jo
sbb
aad
mov
daa
jl
inc
sub
dec
add
bound
fcomps
and
sbb
loopne
and
pusha
fstl
push
sbb
fsubr
fstp
xor
cmp
scas
ret
and
jne
dec
lret
mov
mov
fnstsw
jecxz
jnp
or
fists
mov
clc
sbb
pop
jne
xchg
je
mov
xor
jb
or
inc
pop
call
jmp
sub
jg
je
aam
push
out
cmp
mov
rolb
in
inc
pop
xchg
sub
dec
fprem
dec
fstpt
add
scas
fistl
shr
mov
adc
rcl
pop
pop
adc
outsb
sti
fcomi
fcmove
aam
jp
sbb
pushf
push
jecxz
and
fistpl
lock
mov
fs
jae
cmp
mov
shr
out
sbb
aaa
loopne
loopne
dec
jle
aad
add
in
cmp
into
or
test
xchg
ljmp
shl
cmpsl
jecxz
add
mov
add
loopne
rorl
lcall
push
push
lret
in
enter
and
sbb
lea
cwtl
sbb
das
inc
pop
pop
mov
dec
les
adc
fistpl
mov
loopne
xchg
mov
lret
jns,pn
stc
addb
stos
xorl
xor
aas
std
sub
or
jbe
mov
pand
data16
call
cld
sti
dec
lds
adc
nop
out
movsl
pop
fisttpl
inc
outsb
pop
imul
fildl
js
nop
fildl
jecxz
fstp
sbb
pop
out
xor
lcall
aam
movsbl
sbb
jle
fistl
push
mov
dec
fxch
aad
mov
push
fstpt
mov
fwait
ret
fcomi
testb
push
jle
push
scas
fstpt
lret
sub
pop
imul
cmp
mov
fcmovne
pusha
gs
subb
pop
mov
fcmovu
lds
inc
xlat
cmp
fiadds
bnd
pushf
shll
push
fistpl
dec
adc
fcmovnbe
cld
cmp
js
xchg
dec
jnp
fstpt
ror
loop
scas
insb
or
lea
fisubs
and
and
lcall
pop
and
xor
fistl
inc
jl
jp
aas
and
dec
dec
call
js
shll
sub
and
mov
sahf
in
mov
addl
enter
fcomi
repnz
inc
pop
je
sub
ret
dec
mov
dec
pop
cmpsb
adc
sbb
leave
xchg
mov
adc
sti
push
pusha
mov
fiadds
jle
ljmp
sub
push
fidivrl
sub
std
out
lods
ja
fldt
pop
lock
mov
push
dec
and
adc
pop
repnz
test
daa
pop
lret
cmp
dec
add
fldt
call
addb
in
movsb
cmp
push
dec
shll
addr16
popf
es
mov
cmp
adc
push
or
pop
sbb
inc
mov
in
out
mov
xor
pop
fcmovnb
xor
sarb
mov
xlat
mov
fistl
scas
cld
test
mov
mov
fcompl
stos
je
mov
dec
addr16
movsb
dec
ret
or
insb
xor
imul
test
into
xchg
fs
mov
jb
mov
pop
jb
jo
aas
and
daa
mov
lret
pop
mov
aad
fistl
adc
and
lret
adc
inc
sahf
cmpb
fldt
mov
mov
outsl
push
and
cmp
and
mov
dec
clc
jb
pop
jp
out
push
fstpt
lods
mov
shlb
fsubs
mov
xor
sub
xor
or
jle
sbb
sbbl
and
cmp
sub
les
cli
idivb
pop
scas
xor
or
inc
cltd
lret
pop
push
test
xchg
ret
mov
jge
call
or
cmp
in
leave
in
jp
fisubrs
insb
mov
inc
ret
out
push
xchg
jl
sbb
out
fcomi
jns
xlat
test
jmp
sub
icebp
add
jmp
out
ret
cmpsl
cmp
inc
cld
dec
fcoml
das
repnz
into
push
insb
neg
aaa
imul
mov
add
adc
int
push
sbb
mov
fcmovu
repnz
out
mov
pop
aas
dec
std
outsb
loope
push
push
sub
push
xor
pop
jno
jg
fwait
add
loopne
das
mov
loope
lods
rcrb
scas
roll
xor
jbe
add
push
int3
push
cmp
mov
push
lea
fnsave
mov
mov
push
add
mov
add
pushl
sbb
fistpl
inc
fstp
fcmovnbe
adc
cmp
in
push
mov
iret
fldt
sub
or
fisttpl
jg
adc
push
loope
dec
shlb
mov
in
pop
add
cmp
jns
pop
in
scas
add
es
fnsave
adc
mov
xchg
pop
pop
das
sahf
fistpl
stos
lock
adc
jnp
mov
ret
loope
jg
test
aaa
add
pop
inc
cmp
pop
mov
xchg
fsubs
test
loope
jae,pn
call
jb
sbb
dec
stos
lret
rclb
hlt
loopne
fstpt
mov
and
mov
jl
pushw
mov
pusha
cmp
push
imul
notb
or
stos
in
rorb
mov
dec
imul
imul
fstpl
mov
cltd
mov
and
inc
lret
mov
xchg
loopne
jle
fdivrl
enter
int
adc
fcmovnu
and
jecxz
fstpt
xor
fistpl
sti
nop
scas
cmpsb
sbb
or
bound
lret
imul
sub
add
or
mov
fidivrs
stc
mulb
stos
push
jnp
mov
add
out
clc
lods
mov
std
fwait
xor
jmp
add
jl
xchg
pand
mov
sub
outsl
fcoms
jne
loop
out
das
data16
and
inc
cmp
movsb
xor
lcall
mov
fcmove
adc
adc
mov
test
repz
clc
outsl
shl
or
adc
mov
fiaddl
pop
xor
add
mov
jl
lahf
pop
jae
mov
cmp
out
lds
clc
flds
and
leave
cmp
dec
iret
test
gs
jmp
mov
jno
je
cmpsb
aas
iret
push
loopne
fisttpl
pop
add
call
lds
pop
bound
dec
fstpt
fwait
and
lods
fcmovnbe
xor
xchg
pop
dec
divb
lret
xchg
mov
mov
adc
xchg
fcmovne
pop
adc
mov
pop
mov
jg
jecxz
mov
jb
push
mov
fnstsw
sti
mov
insl
fildl
dec
je
mov
xor
inc
mov
pop
sbb
sbb
shrb
cmc
cli
fadds
mulb
sub
cltd
insb
and
add
mov
out
out
pop
sbb
pop
movsb
sbb
adcl
fisttpl
fsub
fyl2xp1
out
or
xor
or
jmp
aad
stc
in
and
xor
dec
xor
pop
push
mov
inc
cs
mov
jno
fisttpl
shll
mov
mov
pop
iret
lods
fldt
dec
and
push
xor
jns
es
jae
add
shl
sub
pop
and
stos
jns
sahf
fisttpl
sbb
fcmovnu
mov
and
stos
fstl
pushf
lcall
xor
loopne
in
ret
xchg
and
fldt
inc
cmpsb
ss
fcmovnbe
add
fistps
mov
clc
xchg
jp
loopne
pop
add
mov
les
xchg
shll
sub
push
cmp
pushf
sub
je
call
or
and
sub
fildl
movups
sbb
xor
jne,pt
adc
popf
jae
or
in
xchg
adc
dec
bnd
neg
pop
insb
jnp
outsb
test
xchg
mov
cltd
fistl
es
add
mov
add
xlat
mov
jnp
sub
sahf
repnz
out
insb
sub
cmp
mov
out
jae
xchg
push
imul
subl
adc
ljmp
fcmovne
cmpsl
rol
loope
pusha
loop
add
or
mov
push
in
loopne
aam
mov
cs
fistl
icebp
rolb
test
sbb
inc
add
adc
dec
ljmp
dec
push
data16
pop
rorb
cmp
mov
pop
es
jns
mov
gs
inc
aaa
scas
mov
jl
inc
adc
je
std
mov
adc
sbb
popf
in
xor
arpl
mov
ffree
mov
ret
sbb
push
fildll
orb
pop
es
test
aaa
test
pop
push
mov
out
fninit
nop
aas
test
ficompl
js
popf
or
in
aam
rcr
data16
and
imul
sbb
imul
mov
testl
adc
mov
fwait
and
xchg
fidivrl
dec
testl
fisubl
ret
fldl
pusha
mov
jge
sub
jle
repnz
sbb
mov
bound
fildl
iret
xor
sub
xchg
das
fcmovnu
mov
cs
adcl
lock
inc
jbe
mov
loop
fidivs
or
inc
mov
fildl
pop
jnp
mov
leave
mov
adcl
test
out
fdivp
pop
call
or
jne
jbe
aad
cwtl
sub
out
in
xchg
fldt
aas
mov
fcmovnu
add
jb
pop
add
adc
pop
add
outsl
mov
mov
xor
cmp
sbb
mov
insl
adc
add
cwtl
fistpl
dec
push
into
cmp
je
lds
sbb
and
push
stc
clc
outsb
inc
cmp
fisttpl
test
adc
das
xor
cmpsb
inc
jb
loopne
push
ja
add
addr16
fildl
cwtl
lea
fwait
push
adc
arpl
inc
mov
clc
outsb
les
cs
fldt
sbb
adc
fbstp
pop
sub
push
in
rcrl
ret
lock
ret
pop
cmp
inc
sub
fdivr
jmp
sub
fistl
outsl
mov
adc
pop
cld
loopne
fmull
imul
fstl
enter
addl
pop
ret
out
pand
iret
mov
and
js
pop
dec
pop
shll
test
xchg
xchg
or
movsb
jb
lret
dec
push
mov
pop
dec
fldt
test
cmp
fldt
sub
clc
pusha
xchg
outsl
dec
fistl
jns
popl
enter
cmp
jbe
idiv
loope
jno
jp
rcrl
int
in
pop
test
inc
dec
les
mov
mov
jae
adc
inc
iret
xchg
popa
fldt
in
rolb
fstpt
push
jg
or
sbb
fmul
mov
and
sbb
push
dec
popa
xor
or
pop
xor
inc
mov
jp
out
push
push
lret
add
add
fildl
sti
xchg
stos
fisttpl
jns
jecxz
xchg
fcmovnbe
or
test
fildl
jp
pusha
dec
cld
push
aas
sub
push
cli
fidivl
mov
push
loopne
jge
stos
pop
push
fwait
movsl
pop
jmp
sub
dec
leave
je
cmp
xchg
inc
inc
sub
mov
in
sbb
fnstenv
sbb
push
call
movsb
imul
into
repnz
pop
add
fwait
in
fstl
enter
mov
jecxz
rcll
mov
xchg
fisttpll
fisubl
mov
mov
sbb
clc
mov
loopne
mov
in
icebp
outsb
and
out
scas
cmp
fistpl
pushf
clc
test
in
ljmp
fwait
pop
cmpsl
fcmovnb
fcmovb
loope
in
rolb
dec
jo
lods
mov
sub
fstpt
dec
cltd
stos
ds
call
pop
dec
jmp
shlb
popf
pop
out
adc
mov
mov
loop
adc
xlat
pop
shrb
cmc
mov
sti
sub
fimull
jns
sub
sahf
cli
sbb
push
aaa
jne
mov
cwtl
adc
jle
std
sbb
xchg
push
fnstsw
loopne
hlt
xor
add
pop
mov
fisttpl
je
test
ljmp
fidivrl
cmp
sub
fldt
addr16
popf
aam
jae
jmp
fnstsw
mov
daa
in
andb
loopne
dec
in
cmc
jns
lock
test
xor
push
loopne
call
lret
pop
cmc
sub
dec
test
xor
mov
sti
mov
std
in
sub
jne
ret
xchg
fcmovnu
mov
mov
daa
enter
pusha
mov
xlat
sbb
jb
pop
pop
sub
rcrl
sti
push
fcmovnbe
sbb
outsl
mov
push
mov
adc
popf
pop
iret
adc
jb
testb
jg
lret
fwait
daa
jecxz
lea
int3
mov
sahf
repnz
or
mov
jnp
pop
push
ljmp
fwait
inc
xor
xchg
sub
xchg
rolb
jl
test
cmp
push
les
sbb
pop
out
jne
das
push
test
cmp
and
pop
dec
inc
sbb
subb
fldt
popf
fcoms
repnz
ss
inc
pop
inc
pop
in
adc
pop
lahf
repz
lahf
loop
ror
or
cwtl
mov
in
push
and
lea
add
xlat
jae
lahf
lahf
int3
stos
adc
mov
dec
and
pop
ja
icebp
push
lock
loopne
push
dec
fmul
cmp
or
daa
test
jmp
pop
push
xor
fisttpl
mov
add
mov
push
mov
cwtl
lret
xor
fwait
mov
movsb
gs
call
sarl
rcr
mov
fisttpl
sbb
insb
notb
mov
loope
adc
fcmovne
outsl
pop
scas
out
pusha
sarl
xorl
pop
popa
inc
fdivrl
fbstp
sti
hlt
sbb
pop
lock
fadds
aad
dec
rcl
fistl
push
stc
mov
out
imul
loope
xchg
or
sub
pop
sbb
pop
xor
jl
ja
out
pop
arpl
or
fs
fldt
fdivrs
mov
daa
jb
hlt
mov
fstpt
aaa
je
fildll
jg
cmp
adc
das
fldt
and
jmp
pop
pop
mov
popf
cmp
lret
icebp
mov
inc
dec
ljmp
jno
repz
shr
and
mov
sub
add
push
cwtl
fildl
es
adc
and
sub
mov
jg
sti
jo
sbb
push
jl
sbb
shrb
into
int3
fistl
shr
xor
jl
jp
jae
dec
scas
frstpm(287
mov
or
cld
lret
fstpt
lods
xchg
rcll
xchg
inc
loop
test
test
or
inc
fildll
add
fstpt
notl
insb
xor
sahf
add
stc
jo
push
or
jae
fistpl
cmp
fisttpl
loopne
out
call
stos
jne
mov
clc
lret
je
fcmovu
icebp
push
push
in
push
fistl
ljmp
fs
cmp
test
xchg
add
int3
jns
mov
fistpl
sbb
pushf
inc
adc
cmc
jmp
jp
stos
int3
fldt
pop
sahf
shrl
cmp
movsl
les
lea
cmpsl
frstpm(287
icebp
dec
jle
push
jns
fistpll
cmp
pop
shrl
fistl
ret
fldt
int
fsub
aad
fcomi
add
dec
adc
inc
jmp
imul
sub
dec
fstps
add
jecxz
dec
mov
jmp
pop
sbbb
fisttps
mov
jl
sbb
xchg
fcomi
testb
mov
sub
out
fstpt
pop
jb
ljmp
shlb
xor
aaa
cmp
adc
in
sbb
push
shl
sbb
pushl
push
data16
pop
aas
mov
cmpsb
pusha
mov
pop
add
pop
fistpl
jno
xchg
push
jnp
ficoml
pop
jmp
shll
out
int3
rcr
dec
in
loopne
or
sti
fdivs
jae
jo
and
adc
dec
stos
test
push
fisttpl
out
sbb
mov
inc
adc
notb
inc
jp
inc
add
dec
pop
loopne
mov
dec
fnstsw
push
imul
mov
mov
int
pusha
fisttpll
fsubrs
sbb
xchg
enter
cmp
adc
mov
push
mov
fstpt
xor
sub
sub
pop
xchg
fstpl
mov
xchg
arpl
outsb
clc
pop
xchg
fiaddl
fsubr
loop
mov
fisttpl
mov
push
stc
pusha
outsb
jmp
icebp
add
sub
lods
xor
dec
xchg
sub
in
push
call
sub
sbb
mov
and
adc
mov
data16
adc
and
xchg
std
fistpl
in
fstpl
lea
mov
push
mov
fwait
lock
pop
loope
outsl
test
clc
jge
mov
dec
push
ret
pop
inc
dec
add
add
xor
mov
int
inc
lahf
rorb
jae
enter
add
fistl
ja
pop
lock
jmp
cmp
mov
cwtl
iret
mov
leave
test
adc
jbe
xor
push
jo
loopne
fs
add
lret
clc
inc
fistpl
fwait
ret
xchg
fldt
jae
repz
add
add
mov
sbb
cs
pop
pop
mov
mov
test
cmpsl
aam
fstpt
ds
shlb
clc
cmp
lea
xchg
push
and
fidivl
mov
jbe
adc
push
mov
mov
stos
pop
cld
cmp
push
sbb
imul
fstpt
cmc
fs
mov
mov
out
pop
out
jmp
jb
fstpt
or
pop
fstpt
jnp
xchg
fistpl
dec
dec
xchg
sub
jb
dec
dec
fsubrl
push
mov
push
mov
mov
dec
push
aad
movsb
imul
mov
fildl
and
dec
xor
jp
cmp
clc
test
push
inc
dec
fsubs
xchg
jno
cmc
in
sarl
hlt
pop
lods
andb
xchg
push
jg
inc
fstpt
push
push
sbb
push
popa
imul
adc
fcomi
pop
xchg
data16
mov
jmp
fstpt
push
cltd
fucomi
push
lds
popf
xor
add
scas
lret
dec
popa
or
mov
xchg
push
mov
fstps
adcl
cmp
test
clc
rolb
fadds
pop
jp
push
int
fistpl
lods
xchg
aad
push
jge
cmpsl
jle
push
outsl
ds
jmp
sub
dec
je
pop
fucomi
out
xor
inc
push
xchg
push
in
stos
mull
mov
popa
or
popa
insl
push
xor
repnz
out
negl
idivb
fimull
cmpsb
mov
sub
cmp
inc
xchg
xchg
adc
add
adc
int3
fistpl
popa
movsl
mov
cmp
mov
std
xor
lock
add
mov
adc
cmp
fucomi
adc
test
pop
push
ljmp
mov
cmpsl
rol
fcmovne
loope
lcall
lods
xchg
cmp
mov
daa
pop
mov
pop
mov
mov
sub
cmp
sbb
test
das
les
pop
cmovnp
loop
in
stc
add
adc
sub
lcall
mov
and
imul
aam
test
mov
mov
mov
push
pop
mov
push
out
mov
push
clc
fldt
push
leave
into
fistpl
data16
add
mov
cmp
cld
insl
sbb
mov
pop
ds
push
mov
gs
xchg
rorb
in
xor
push
fildl
mov
fildl
jge
pop
xabort
negb
sub
pusha
jmp
xlat
push
in
cmp
mov
mov
inc
mov
xchg
jo
and
in
shlb
mov
and
sub
inc
in
imul
aam
div
test
pusha
sti
fistl
sub
jle
leave
pop
sbb
fucomi
sbb
clc
push
and
push
cli
pop
xor
ret
shrl
or
mov
mov
mov
cwtl
mov
inc
cmp
adc
fstpt
pop
adc
jnp
cmpsl
add
and
jae
call
xchg
cli
jg
icebp
jl
mov
mov
mov
inc
test
jne
aas
popf
mov
and
insb
fldt
inc
sahf
push
in
pop
leave
push
push
aas
fstpt
pop
mov
je
pop
rcrb
adc
pop
fisttpl
aam
fisttpl
fwait
das
mov
adc
and
pop
addr16
xchg
sbb
int
xor
lcall
jb
outsl
cmp
ss
ja
test
fildl
cmp
iret
sbb
sahf
xor
xor
push
lret
scas
loopne
sbbl
inc
inc
pop
lods
fisttpl
pop
ret
cwtl
into
inc
fistl
movsb
xorl
push
fnsave
cmpsb
rorb
mov
notb
dec
sbb
fildl
shl
fildl
lea
rcrl
lods
jnp
js
shrb
jp
rolb
cmp
mov
repnz
ljmp
lret
rolb
stos
inc
in
fstp
xor
addr16
test
dec
lds
fcmovu
fimuls
fstpl
lods
xchg
inc
andl
jnp
gs
std
xchg
xchg
ja
jb
inc
js
cltd
or
jp
dec
sub
or
or
and
xchg
dec
cmp
bound
mov
jmp
loope
add
pusha
mov
mov
inc
sub
testl
fcmovbe
into
jbe
mov
dec
notb
sub
or
push
pushf
sbb
pop
push
inc
popa
mov
jbe
andl
sub
filds
jp
xchg
subb
sbb
sub
mov
xor
fistl
cmp
fistl
or
sbb
gs
fistl
pop
int
fildl
insb
mov
aad
sbb
jmp
lock
jg
jmp
jp
shl
add
mov
push
loope
cmp
mov
jae
push
unpcklps
aam
loopne
xchg
cltd
and
roll
out
gs
and
inc
fildl
push
pop
fstpt
or
adc
insl
and
scas
in
cmp
adc
aad
lcall
pop
clc
ret
fstpt
mov
loopne
mov
and
rolb
loop
ret
cmpsb
pop
dec
int3
push
fcmovne
xor
mov
mov
cmp
imul
icebp
or
sub
push
and
sbb
into
push
pop
test
movsl
stos
call
xor
imul
in
loope
mov
mov
lods
xor
dec
call
lcall
inc
pushf
outsl
sti
push
sarb
push
mov
sbb
pop
sbb
stos
lcall
dec
ret
jp
adc
push
jle
stc
rol
pop
bound
cld
mov
inc
fstpl
pop
mov
inc
shll
cmp
fildl
adc
loop
inc
neg
loope
mov
sbb
stos
mov
lcall
iret
xlat
daa
fldt
in
push
mov
pop
jge
fistpl
push
insb
gs
inc
push
xchg
push
aaa
fbld
mov
jae
fnsave
mov
out
cwtl
insl
push
dec
jmp
jecxz
mov
mov
jle
mov
lret
fneni(8087
push
and
mov
dec
push
xchg
jbe
cmp
add
add
pop
divb
fcmovnbe
push
jo
adc
test
mov
sub
aad
sub
fisubrs
fstl
repnz
pop
clc
push
lea
xorb
aas
sbb
jae
mov
adc
and
stos
and
push
inc
les
xor
sub
cmc
or
fucomi
xchg
xchg
test
xchg
lahf
push
jae
pop
into
push
or
clc
mov
xchg
stc
ffree
repnz
jnp
sub
mov
loop
mov
shrl
mov
xchg
jle
lods
sbb
das
jbe
push
fldl
jne
xchg
lahf
out
dec
xchg
loope
dec
ret
call
dec
push
sbb
pop
in
insb
fmuls
jecxz
sub
frstpm(287
fnsave
jno
adc
cmp
and
adc
outsl
push
push
aas
leave
xchg
cmpsb
out
mov
or
dec
inc
popa
mov
mov
ret
fcmovne
mov
cmp
lret
cmp
cmp
lds
push
ja
loope
call
push
pop
or
adc
test
push
add
mov
xor
pop
fisttpl
loopne
ret
fld1
shr
jns
jg
inc
fwait
popa
cwtl
test
int3
fisubl
jle
xlat
xchg
push
shrl
sti
mov
es
notb
lcall
mov
inc
sbb
push
or
lods
orl
js
jno
sti
pop
out
test
sub
fisubrl
cld
cwtl
jo
and
repz
cmp
xor
or
adc
sbb
lret
enter
fistpl
in
cli
xchg
stos
sub
xchg
fnsetpm(287
add
bswap
out
mov
arpl
mov
mov
popf
sbbb
mov
cmp
or
dec
pop
movsb
fildl
daa
hlt
cmp
fists
pmaddwd
xlat
sub
jmp
push
jno
inc
fistl
dec
pop
mov
pusha
sub
stc
push
pop
fucomi
mov
outsl
dec
es
push
fisttpl
cmpsl
loope
cmp
in
sub
jb
mov
aad
sbb
push
pop
inc
fistl
pushf
push
arpl
fistl
movsb
repz
call
cmp
xchg
mov
fisttps
xchg
stos
push
test
inc
mov
and
or
fistps
xabort
fistpl
pop
add
mov
inc
or
sbb
loope
xchg
subb
add
jp
jmp
sub
fsub
out
fstpt
and
xchg
inc
sbb
sub
ds
scas
dec
fldcw
stos
xlat
in
fwait
pop
fistl
mov
pop
fstp
repnz
pop
xchg
test
outsb
inc
nop
pop
enter
fisttpl
add
mov
xorb
dec
pavgb
jne
sbb
and
aaa
imulb
jbe
jae
icebp
out
fisttpll
cmp
hlt
pop
ljmp
jmp
mov
popl
mov
outsl
pop
fstpt
fcmovnu
lcall
fneni(8087
mov
mov
out
cmc
jno
sbb
je
dec
das
nop
loopne
mov
xor
cli
dec
cmp
lds
push
add
lret
shlb
bound
pop
mov
mov
fisttpl
jns
int3
loopne
cli
repnz
dec
test
jbe
cld
mov
fildl
std
fucomi
test
adc
xchg
lea
stos
mov
mov
clc
imul
mov
adc
jge
fidivrl
clc
fistl
mov
add
int3
gs
pop
xchg
dec
push
jbe
fistl
rolb
call
jle
xor
data16
xlat
or
jp
sbb
dec
insb
subb
in
and
cmpsl
dec
adc
cmp
fneni(8087
mov
mov
movsb
jo
ljmp
pop
adc
in
fisttpl
sub
push
imul
clc
dec
mov
mov
aaa
pusha
mov
enter
sub
adc
jle
pop
fs
mov
ds
sub
sub
jne
xor
in
fistl
fmuls
or
sbb
lret
xor
movsl
insl
mov
loop
ret
or
mov
fisubrs
xchg
push
stc
adc
fildl
mov
pushl
aaa
xchg
stos
out
jl
fimuls
arpl
push
fucomip
adc
mov
rcr
xor
push
and
mov
pop
dec
in
cmp
mov
fsubrs
rcrb
and
mov
pop
pop
push
dec
adc
es
push
pop
jmp
aaa
mov
jnp
dec
je
fistl
mov
cs
xorb
sub
jbe
lahf
inc
into
pusha
mov
cmp
outsl
sti
xor
cmpsl
test
push
fisttpl
jmp
rcr
lods
iret
call
push
aas
jbe
loope
aam
inc
adc
cmpsb
arpl
das
lock
mov
jmp
addr16
jmp
push
cwtl
ret
fistpl
popf
test
mov
pop
mov
mov
sbb
cs
adc
dec
je
ficoml
pop
movsl
pop
cmpsl
or
shll
fsubl
or
insb
pop
clc
push
xchg
js
fldt
xchg
int3
jnp
test
xlat
pusha
adc
lock
rolb
rcr
sar
inc
lcall
imul
stos
adc
into
fcmovne
mov
mov
ret
inc
insb
mov
cld
mov
pop
pop
negb
inc
fs
stc
mov
xchg
inc
adc
sub
cltd
fucomi
jo
xchg
dec
and
dec
fisttpl
adc
aad
imul
jmp
and
sbb
mov
cmp
fstps
inc
orl
outsl
jno
es
sarl
fisttpl
dec
ret
cmpsl
sub
ljmp
js
mov
cmp
popa
mov
fucomi
adcl
fcmovne
jg
push
ficomps
adc
or
and
add
push
fldt
cmpsl
push
xor
aad
bound
jl
cmp
gs
mov
leave
ljmp
inc
pop
pop
push
jecxz
sub
in
filds
cmp
jp
out
cmp
orl
xor
sub
xchg
fcmovnbe
push
stos
jge
pop
mov
and
fldt
imul
pop
push
sbb
js
push
inc
push
push
fistl
in
mov
ljmp
call
adc
push
fildl
mov
adc
orl
outsb
sub
cmpsl
add
fistl
jne
sub
cwtl
mov
push
dec
sahf
jle
mul
cltd
test
or
and
dec
icebp
sbb
push
shlb
xchg
xor
sbb
jb
add
cltd
jecxz
sub
in
inc
loope
popf
fldl
cmp
mov
pop
or
int
loopne
jno
add
andb
ja
andl
mov
negb
mov
fldt
pusha
fistl
mov
fcmovnb
add
mov
jp
insl
xor
or
mov
mov
test
adc
divl
pop
outsb
jno
mov
cltd
fistl
insb
xchg
mov
pushf
mov
jp
push
cli
push
push
xchg
data16
sbb
sti
leave
sub
push
and
mov
clc
iret
push
fistpl
fistl
jae
cmp
fisttpll
fstpt
out
iret
test
cwtl
je
inc
pop
aas
or
jle
neg
push
loope
and
adc
or
mov
dec
lahf
cmpsl
fcomi
mov
inc
jg
shlb
in
inc
dec
neg
outsl
or
inc
sbb
cmpsl
mov
adc
daa
out
mov
rolb
sbb
jle
fstpt
imul
push
lahf
and
int3
fistl
cmp
ret
iret
pop
scas
icebp
inc
fisttps
movsl
fiaddl
loopne
and
xchg
stos
xchg
inc
sub
pusha
dec
loop
das
and
std
fwait
stc
pop
fstpt
jle
aad
dec
add
fstpt
sti
xor
push
xchg
andl
fmuls
push
mov
ja
sub
push
jne
popf
arpl
pop
fistpl
cmovae
xlat
sahf
in
daa
jmp
aas
stos
fisttpl
pop
fiaddl
enter
test
movsb
popl
mov
pop
push
push
das
push
outsl
pop
push
mov
sti
pop
scas
push
cli
mov
lahf
fwait
add
je
mov
cwtl
test
aad
rcr
fstpt
fsub
mov
insl
pop
push
ret
pop
add
xor
rcll
cmp
or
dec
or
fistpl
push
jmp
pop
mov
cmpsb
push
fldt
push
add
pop
cmp
nop
pop
sbbl
movsb
stos
push
sbb
inc
shll
xor
frstor
jmp
or
mov
hlt
cmp
pop
dec
pop
loopne
rcl
frstor
adc
cmp
pop
sbb
dec
jmp
sti
xorb
test
mov
mov
xor
fistpl
cld
hlt
mov
lret
pmulhuw
ss
lods
fistpl
or
jo
dec
add
ret
fcomi
insb
mov
add
cs
cltd
daa
inc
pop
xchg
cwtl
fucomi
fs
dec
xchg
aaa
test
fwait
xchg
mov
lahf
adc
call
xor
mov
repz
aad
or
insl
jb
push
cmc
and
pusha
pop
dec
xor
dec
call
fwait
mov
rclb
dec
negl
dec
rcl
mov
dec
sub
push
lods
jne
inc
loop
ss
sbb
jle
sub
jae
jg
cmp
sbb
mov
sub
sbb
out
jmp
xchg
push
cmp
mov
push
pushf
pop
and
scas
arpl
fstl
lret
lcall
xchg
sbb
inc
cmp
faddl
jge
push
sbb
scas
push
mov
fstl
xlat
sti
mov
jge
pop
pop
push
pop
push
stos
jmp
sub
adc
js
pop
push
and
xchg
lods
mov
shlb
in
fistpl
mov
and
stc
in
jne
mov
adc
int3
fucomi
repnz
insb
mov
scas
mov
in
adc
enter
mov
cmpsl
xchg
ljmp
mov
add
fcmovne
push
push
cmpsb
sahf
cld
scas
sbb
mov
aaa
das
sub
js
jae
arpl
mov
stos
push
push
cmp
sbb
test
fldt
mov
adc
jmp
pop
loope
push
scas
add
loopne
xchg
out
and
ss
insl
movsl
mov
dec
fcmovnbe
inc
ret
adc
and
mov
das
pop
mov
int
dec
and
iret
push
fiaddl
shlb
adc
fistl
xchg
push
dec
mov
pop
and
idivl
sbb
inc
mov
std
xor
adc
mov
dec
loopne
mov
mov
dec
add
cmp
lret
mov
jo
mov
aaa
fildl
rcrb
fsubrp
gs
adc
inc
nop
roll
aaa
fnsave
mov
fnstsw
add
testl
adc
in
xchg
mov
div
xchg
sub
dec
dec
xlat
push
push
fwait
cmpl
lahf
fcmovnbe
mov
fstps
arpl
in
jo
sub
sar
std
subl
push
inc
sub
aas
cmp
imul
inc
mov
sub
fsubs
in
add
je
hlt
mov
fildl
sbb
call
insl
sbb
inc
push
fistl
stc
cmp
xor
pop
sbbb
outsb
or
das
mov
and
lret
fistl
fcmovnb
inc
leave
adc
fisttpl
fidivrs
sar
clc
push
add
add
aad
mov
mov
jns
lcall
jl
cmp
movsb
call
sub
mov
jne
or
pop
mul
and
neg
shr
adc
in
fistl
stos
fadd
inc
sbb
and
pop
ljmp
mov
mov
inc
jne
outsl
add
xchg
leave
add
jp
popa
mov
lret
push
dec
jecxz
inc
pop
push
push
fisttpl
xchg
mov
mov
test
fistl
dec
dec
ja
xor
repnz
push
push
push
fisttpl
cmp
and
mov
add
int3
mov
loopne
shll
push
add
inc
mov
ss
cwtl
call
rcrl
movsb
mov
bound
sti
cmp
or
or
cs
repnz
mov
add
aaa
dec
popa
ficoms
loopne
fxch
pop
shlb
shrl
jmp
lds
int3
and
mov
sti
call
cmp
jp
mov
jl
dec
adc
cld
mov
push
jp
imul
fildl
cmc
push
andl
insl
xchg
push
ret
fcmovnbe
insb
xchg
cmp
mov
pop
pusha
sbbl
mov
sbb
jb
mov
fildl
cmp
xchg
dec
and
fisttpl
pop
aam
jp
ret
push
movsb
sqrtps
in
cmp
jg
mov
sahf
fisttpll
add
gs
inc
jno
lock
call
mov
fistl
sub
fldl
es
fldt
xor
fstpt
dec
sbbb
cmp
mov
enter
mov
in
xor
xchg
js
dec
outsb
orl
fstpl
fmul
cmp
inc
data16
xchg
and
insl
or
mov
test
dec
jp
xchg
cltd
mov
and
in
mov
xorl
fistl
xchg
sbbb
jge
fildl
arpl
insb
pop
jp
mov
test
je
fneni(8087
mov
popa
cmp
ljmp
lea
js
movsb
sbb
fldenv
lods
fistl
outsb
scas
adc
neg
adc
loopne
sub
sahf
outsb
ror
push
mov
mov
mov
xor
mov
inc
lcall
fninit
inc
jbe
icebp
or
push
jge
imul
fcmovnbe
and
leave
fldt
xor
sbb
in
loope
fwait
jp
fistpl
jg
or
aam
cltd
pop
cmp
lcall
fimuls
xchg
aad
shlb
jecxz
mov
mov
mov
mov
dec
fisttpl
adc
adc
push
xchg
dec
fcmovnb
aas
dec
bound
adc
mov
idivb
push
jb
mov
cli
pop
adc
test
fmulp
arpl
adc
das
mov
fisttpl
lea
jo
stos
xchg
jns
hlt
rcr
lods
test
jl
outsb
fcmovnb
es
inc
insl
push
fxch
fstpt
je
iret
negb
or
pop
fldt
xchg
pop
dec
sub
jae
movsl
add
call
xor
stos
dec
loope
test
or
int
dec
xchg
fidivrl
and
adc
sub
mov
mov
addr16
inc
testb
jo
cltd
jmp
daa
mov
dec
ret
sub
add
js
cli
cmpsl
push
mov
scas
pusha
nop
lock
orb
push
inc
jle
ficomps
lods
call
aam
and
push
pop
test
xor
shll
jo
mov
mov
lods
or
xchg
mov
int3
sbb
addr16
jge
cmp
push
dec
push
fcmovnb
dec
fisubs
fcmovne
mov
pop
jns
push
push
int3
pop
fiaddl
xchg
sub
dec
fstpt
mov
xchg
call
adc
pop
jne
fwait
or
out
cmp
pop
les
inc
lea
mov
fstpt
not
cwtl
fadds
mov
sbb
pop
jbe
pop
xor
and
pop
jb
add
outsl
jmp
es
xchg
lock
jns
fiaddl
stos
xchg
inc
jne
adc
lahf
mov
mov
cmp
dec
dec
pop
mov
fcoml
ja
into
fcomp
icebp
loopne
push
test
lret
xchg
iret
sbb
sti
dec
jmp
fcmovnb
pop
movsl
xor
cmpsb
je
clc
mov
sbb
add
inc
lret
lods
xor
xchg
lret
test
fwait
pop
fidivl
dec
xlat
test
es
das
push
mov
pop
mov
jge
mov
inc
mov
pushf
adc
adc
fadds
pop
pop
mov
rcrl
loop
jl
sti
fisttpl
push
push
clc
js
and
out
daa
in
test
fisttpl
ss
adc
mov
fldt
test
or
or
outsl
fldt
cmp
and
mov
ret
inc
insb
jle
lcall
in
mov
fs
sbb
xchg
ret
mov
xchg
pop
jno
jb
jnp
adc
jg
fucomi
and
dec
sahf
fstpt
or
push
aad
lock
fcomp
dec
adcl
adc
dec
imul
mov
sub
dec
fcomi
sub
mov
and
call
mov
jnp
dec
fldt
cmp
xchg
push
jecxz
call
cmp
popa
push
fistl
adcl
sub
fistl
mov
negl
xchg
jp
and
mov
add
clc
fneni(8087
xor
ret
mov
dec
scas
das
lret
loop
jmp
aad
stos
and
fildl
xor
or
mov
sbb
xor
scas
out
add
mov
out
xchg
aaa
iret
xchg
fcos
and
mov
mov
jmp
sub
mov
notl
and
cwtl
or
inc
fstps
jp
scas
clc
ds
pusha
aas
mov
ss
fcmovne
repz
popf
call
hlt
popa
adc
sbb
pop
or
add
aas
popf
in
xchg
in
ss
cmp
push
mov
add
mov
adc
cmp
sub
dec
inc
and
fidivrl
mov
fldt
lret
jbe
xor
pop
xlat
or
push
roll
cmp
dec
fldt
in
cli
test
mov
xchg
mov
lods
loope
gs
push
push
push
mov
ljmp
lcall
movsl
int
cmp
int3
iret
xchg
xchg
fcmovnu
adc
sbb
clc
mov
das
sub
enter
sub
adc
sbb
stos
jecxz
fdivrl
fisubrl
pushf
mov
pop
pop
in
jge
ljmp
cmp
mov
adc
cmp
push
dec
std
xchg
imul
int3
cmpsl
push
lea
mov
sub
push
pop
lcall
insl
fcomi
xchg
stos
test
xor
gs
cs
dec
nop
mov
jae
cmp
push
fstl
iret
mov
lods
dec
pop
rcrl
xor
aam
push
adc
sbb
pop
fcmovnu
and
movsb
fwait
push
fistl
xchg
cmp
xlat
mov
inc
cmc
xor
mov
ret
pop
fistl
dec
sub
sti
cmpsl
cltd
pusha
imul
shlb
stc
push
cmp
fisubrl
inc
dec
fldt
pop
dec
add
sbb
mov
ja
and
lahf
clc
leave
push
test
ret
popf
lret
jno
mov
push
xor
inc
cmp
mov
sbb
or
fstpt
pop
stc
xchg
frstor
add
pop
sbb
push
push
add
cmpl
xchg
sti
and
jl
mov
adc
or
pop
stos
sub
mov
jne
lock
cmp
and
push
sub
lock
push
fstpt
pushf
or
outsl
in
out
cld
in
test
pop
jbe
adc
adc
icebp
imul
push
mov
push
outsl
into
loop
leave
cld
pop
sub
and
in
mov
fistl
cwtl
mov
int
pop
cmc
lahf
fisubrl
mov
cmp
push
lds
call
fwait
lock
mov
fistl
int
cmp
xor
movl
mov
jge
cmpsb
jnp
shl
loopne
mov
pop
lods
pop
shl
incb
dec
out
fwait
cmp
clc
movsb
aad
xlat
stos
add
fcmovnbe
ds
cmp
sbb
popf
mov
xor
dec
jne
adc
pop
dec
shrl
adc
pop
nop
in
js
fistpl
sti
movsl
pop
jp
pop
dec
or
xor
adc
mov
xchg
scas
pop
ret
imul
fidivrl
push
lret
sahf
or
mov
ret
lods
insb
insl
cltd
jae
mov
push
jmp
dec
pop
xor
repnz
xchg
or
xor
xchg
mov
frstpm(287
cmp
lods
dec
and
or
push
sub
or
fldl
aad
pop
pop
jae
andl
dec
jg
jb
pop
in
fstpt
sub
lea
inc
pop
cmpsl
add
icebp
jp
dec
jno
fisttpl
mov
dec
pop
ret
cmp
aam
push
push
js
es
mov
fildl
fimull
cs
or
loop
lret
fsubl
adc
push
rclb
push
js
sbb
sub
xor
pop
xchg
mov
es
xor
adc
xchg
scas
dec
fninit
pop
fucomp
or
cmc
inc
clc
repnz
mov
rcr
in
xchg
add
js
mov
xor
push
xchg
das
sbb
push
test
sub
je
ja
push
out
fucom
and
fcmovbe
inc
outsb
mov
in
fldt
add
lock
adc
outsl
push
fildl
loop
in
mov
loopne
adc
jmp
repnz
ja
cmp
repnz
enter
or
andnps
inc
inc
dec
mov
lcall
sub
fstpt
pop
mov
xchg
jbe
in
icebp
cmp
inc
push
sub
shlb
in
into
mov
hlt
imul
out
in
xor
and
cmpsb
fsubp
les
push
fldt
push
mov
fmul
and
movsl
fistpl
adc
pusha
dec
mov
or
cmp
fisttpl
xchg
mov
adc
mov
jp
dec
bound
fcoms
adc
jns
int3
pushf
cli
addb
inc
aaa
mov
cmp
fistl
lds
std
push
push
sub
rcl
or
cmp
fldt
outsl
pop
jo
cs
sbb
call
fisttpl
push
mov
pop
icebp
rcr
pop
dec
fcmovnbe
adc
sub
fs
stos
fistpl
cli
nop
jmp
pushl
fstpt
fldl
out
cld
push
xor
pop
int3
mov
fcmovnbe
sahf
push
lcall
jg
xlat
and
ret
push
fistpl
jns
add
sbb
orb
sbb
or
sar
inc
fwait
mov
dec
jg
sub
rcll
imul
dec
mov
nop
pop
pop
ss
pusha
int3
push
pop
fldt
fildl
jle
es
sbb
sbb
stos
and
push
in
or
imul
popf
stc
jbe
scas
mov
insl
dec
or
out
lret
sbb
pop
shlb
xchg
xor
pop
loop
das
mov
jnp
in
enter
push
test
fisubrl
clc
popa
test
in
js
shl
fisttpl
jmp
push
call
sub
jbe
jne
cmp
insb
and
out
inc
fldl
inc
push
in
ficomps
aas
mov
fistl
cmp
xor
mov
sbbl
inc
fildl
repz
js
pop
into
test
aaa
test
mov
and
mov
add
out
pop
mov
push
mov
lahf
test
lcall
movsl
rorl
fdiv
lods
pop
out
push
pop
adc
cmp
pusha
js
out
jge
negl
pop
insl
mov
fisttpl
subb
xor
pop
outsl
inc
lods
or
sub
cwtl
clc
ss
jae
fsubs
xor
xor
mov
jo
aad
lds
cmpb
imul
imul
out
rorl
sbb
mov
adc
pop
mov
lods
fildl
mov
pop
mov
test
out
test
iret
icebp
cmc
mov
push
inc
dec
adc
fldt
clc
outsl
imul
gs
cmc
aam
mov
xor
inc
mov
ret
push
call
mov
cmpl
lcall
dec
xchg
xchg
sbb
jb
clc
not
fdiv
lcall
out
out
xor
dec
xor
mov
aad
push
fcomi
in
cltd
or
cmp
push
dec
loope
call
fstpt
inc
dec
and
sbb
sub
fcomi
mov
rclb
outsl
push
pop
les
orl
adc
inc
fs
in
sub
shrb
out
dec
lcall
and
sti
jmp
pop
mov
movsl
ja
add
pop
cli
scas
sti
dec
decb
loopne
lcall
pusha
mov
mov
lcall
add
jb
lahf
data16
sub
lea
rcr
stos
adc
adc
adc
xchg
and
imul
mov
pop
mov
loop
xchg
enter
xchg
mov
stos
jne
sub
addr16
mov
mov
mov
cmp
repnz
leave
je
dec
xor
ds
cmp
or
lahf
cmc
xchg
lods
loope
cltd
adc
xor
mov
push
xor
pop
xor
adc
xor
cmpsb
fiadds
mov
pop
pushf
imul
movsl
pop
push
ljmp
and
lods
jae
and
popf
cmp
ret
pop
jbe
jg
lret
lods
cmp
test
xchg
dec
in
fldcw
xor
stos
cwtl
sub
enter
leave
push
lret
fcompl
xchg
int
fldenv
add
and
pop
in
dec
dec
pop
push
pop
fists
jl
cmpsb
mov
lahf
in
daa
leave
jmp
sbb
or
out
xchg
shl
cli
out
and
push
stos
mov
mov
int
push
push
mov
movb
jb
sbb
cmpsb
add
sub
add
sti
fs
mov
psllw
inc
mov
es
clc
loope
push
sbb
or
mov
ror
std
pop
xchg
inc
addr16
cmp
inc
adc
mov
sub
cmp
test
lock
rcrb
enter
jmp
and
shl
stos
fwait
pop
cmp
stos
into
cli
lcall
and
stos
sub
add
int3
and
sbb
bound
push
push
inc
dec
sub
mov
das
adc
loop
lods
jne
ficompl
xchg
add
adc
test
aas
jmp
fadds
jb
adc
stos
mov
bound
sub
cmp
insb
lds
aad
jecxz
aam
jne
addl
imul
scas
cmp
movsb
and
fsubrl
rolb
jmp
fimull
arpl
jnp
or
xor
lock
jp
inc
bnd
xchg
ret
inc
adc
loope
fisubrs
fucom
mov
inc
push
fcomip
ds
lret
sbb
jecxz
dec
xor
aam
pop
mov
push
dec
dec
jmp
xor
aaa
sbb
jmp
test
push
stos
jo
mov
cmp
add
jns
ljmp
decl
pop
inc
mov
test
mov
cwtl
lods
xor
sti
and
bnd
pop
lahf
cs
adc
lods
out
aas
popa
pop
jge
pop
jg
mov
loope
icebp
decl
adc
fiadds
test
popa
pusha
jne
sti
jg
repz
stc
outsl
in
push
adc
xchg
jns
jle
inc
cmpsb
sbb
mov
stos
pextrw
dec
addb
out
push
pop
int3
loope
sbb
mov
mov
pop
cmp
push
add
sub
push
repnz
jmp
insb
push
sub
jp
mov
ljmp
dec
jmp
imul
ficoml
sahf
jae
loope
mov
lods
sarb
icebp
fadd
fs
push
ljmp
std
cmpsb
in
lcall
cwtl
push
ret
dec
pop
pop
aaa
cwtl
lock
lods
in
pusha
jbe
ds
cli
arpl
lds
cmpb
mov
mov
dec
outsl
add
out
int3
xchg
dec
push
or
inc
test
testl
bnd
push
imul
and
jp
jle
scas
pop
fldt
or
xlat
or
fcmovne
pop
arpl
mov
cmc
xor
subl
das
or
sti
into
sbb
cli
hlt
mov
insb
jg
xor
loopne
cmp
sbb
pop
push
in
in
cld
mov
sub
mov
std
repnz
and
pop
and
adc
mov
loopne
mov
or
xor
push
popa
das
mul
lret
repnz
popf
pop
lcall
aas
arpl
roll
sub
cmpsl
lahf
and
enter
cmp
mov
mov
xor
aam
call
mov
rclb
aad
inc
fistpl
add
dec
and
fildl
iret
out
xlat
mov
icebp
insb
insl
jb
pop
push
push
sub
sbb
gs
push
in
js
xor
loope
cmp
mov
test
sbb
neg
rolb
pop
sub
cltd
xor
je
icebp
pop
jo
add
loop
jne
mov
adc
or
stc
in
dec
mov
mov
cmp
fisubrl
cmp
cmp
jb
std
fisttpl
call
fisttpl
lods
mov
sbb
scas
jl
stc
or
mov
in
pusha
mov
adc
add
int3
ret
xchg
addl
rolb
call
loope
shl
fnstsw
fidivs
mov
push
test
icebp
pop
sbb
outsb
shl
push
fwait
push
mov
in
mov
and
repnz
mov
int3
leave
jnp
cli
lahf
xor
or
pop
inc
or
adc
jne
loopne
mov
mov
push
push
mov
ret
mov
pop
outsl
fistpl
out
scas
inc
adc
outsb
lret
fildl
cmp
adc
dec
fistps
mov
mov
mov
or
inc
fucomi
aaa
dec
inc
xlat
shll
or
ss
pop
pop
mov
inc
inc
jg
movb
push
mov
adc
mov
push
mov
jl
scas
in
fwait
push
dec
push
call
notrack
fstpt
out
jnp
icebp
imul
pop
adc
shlb
fwait
pop
ret
les
xchg
sbb
or
out
fldcw
push
lsl
fldt
push
dec
and
imul
push
fldt
dec
aam
fistl
outsb
ljmp
cmpl
stos
scas
and
and
lcall
in
fstpt
ja
jae
addr16
and
movzwl
stos
daa
cld
fstpt
push
fmull
dec
fmulp
cwtl
add
pop
fcmovnb
fsubs
scas
mov
test
loopne
lcall
mov
sub
inc
push
call
out
lcall
fwait
es
pop
mov
mov
repz
mov
mov
fisttpll
inc
push
mov
sbb
lahf
inc
fwait
push
fildl
adc
cmp
mov
ret
inc
insb
and
dec
rorb
mov
add
out
iret
negl
push
inc
fcmovnu
das
lods
dec
cmp
dec
fstl
mov
push
arpl
inc
frstor
ljmp
dec
scas
jp
cmpsl
jb
fistpl
out
insl
pop
jnp
outsl
stos
sbb
xchg
fcomp
adc
lcall
fildl
mov
jbe
push
lea
adc
fsubrp
mov
popf
cmp
sub
scas
loope
fs
mov
lahf
in
inc
adc
repz
mov
or
mov
iret
fucom
xchg
jp
xchg
psllw
cltd
mov
dec
cmp
inc
cmp
notl
inc
push
lods
je
dec
popf
mov
and
pop
xor
jmp
in
xor
popf
cmp
gs
lcall
das
or
push
jecxz
mov
mov
pop
cli
pop
cmp
sbb
jo
mov
fildl
ficompl
out
push
test
mov
aam
jb
sub
pop
into
repz
outsb
cmp
pop
ficoml
call
lds
fildl
mov
pop
cmp
xchg
push
sbb
pop
mov
pop
fstpt
cmpsb
aam
adc
pop
push
and
loopne
in
mov
sub
push
pop
fwait
shl
sbb
outsb
mov
xchg
movsl
popa
sbb
fmul
in
dec
push
mov
and
dec
divb
loope
outsb
popf
clc
pop
sahf
push
out
fwait
mov
jg
sub
and
pop
fcomi
dec
mov
aas
or
ret
adc
cwtl
cltd
std
pop
insl
xlat
icebp
fcmovu
pop
mov
inc
mov
pop
aaa
fdivrl
fistpl
add
sti
mov
pop
xchg
and
cmp
dec
mov
adc
xorb
shr
jno
clc
jge
or
ficompl
cltd
arpl
cmpsl
in
cmp
das
leave
ja
sbb
loop
cltd
data16
mov
push
xchg
sbb
subb
pop
cmc
sbb
push
scas
mov
xchg
repz
xor
mov
jmp
shlb
outsb
pusha
push
jo
jmp
int3
xor
inc
pop
sbb
andl
mov
inc
or
sub
jg
lret
lods
and
es
jo
push
mov
inc
or
outsb
in
fisttpl
test
call
fistpll
ret
xor
fucomi
out
movsb
xchg
adc
fnsetpm(287
push
push
sub
jecxz
fcmovnbe
outsb
pop
cltd
mov
adc
stos
sbb
fmuls
xchg
sbb
cld
xor
sub
lods
sub
lcall
or
aam
add
hlt
lock
pop
ficoml
adc
mov
lock
jne
push
insb
ss
in
adc
cmpl
leave
xchg
lret
cmp
sti
out
lods
fisttpll
mov
jbe
mov
add
insl
int3
fisttpl
push
add
negb
and
scas
cmp
hlt
mov
xchg
fcmovne
cld
leave
mov
sbb
or
mov
pop
clc
cltd
fisttpl
dec
int3
call
sti
fistpl
push
sbb
mov
div
iret
xchg
fldt
insl
out
cmp
leave
in
rcr
popf
sub
push
mov
test
pop
fistl
xchg
ficoms
sbb
mov
mov
ljmp
movsl
xchg
push
push
insb
pop
outsb
cmpsb
lods
push
and
loopne
mov
lods
xchg
xchg
arpl
es
repz
fidivl
scas
sub
add
cwtl
shr
out
imul
add
mov
call
jns
pop
or
repz
out
fwait
lret
stos
inc
andb
push
and
mov
fstpt
js
xchg
adc
filds
sahf
adc
fwait
popa
mov
imul
fistl
test
and
add
mov
in
sbb
sbb
push
lret
addr16
je
mov
jbe
daa
xchg
add
loopne
iret
xchg
lret
ror
xchg
xlat
pop
xor
dec
fisttpl
mov
loopne
inc
and
enter
or
into
rcr
outsl
jg
pop
cli
pop
cmp
push
xor
fndisi(8087
shll
shr
outsb
sbb
mov
sub
int3
adc
adc
ss
loope
fldt
jmp
jbe
hlt
fcmovnb
inc
mov
or
divb
movsl
lods
fsts
neg
push
fistl
inc
dec
pop
cmpsl
inc
rclb
fisubrl
arpl
jb
into
mov
xchg
sarb
cmpsb
sub
icebp
outsb
hlt
fisttpl
pop
cmp
lods
fistl
jae
jecxz
int3
push
jle
add
mov
fiaddl
xor
xlat
rcl
fcmove
xchg
sbb
int3
nop
jo
popa
xchg
les
hlt
cld
mov
scas
es
rcr
fstl
stos
inc
mov
jno
rcrb
push
shll
jmp
std
aam
imul
sbb
pushf
adc
fistpl
mov
repz
aam
aad
inc
or
adc
nop
mov
adc
inc
push
pop
cmc
loope
arpl
xor
mov
imul
mov
dec
stos
xchg
mov
stos
and
in
xchg
pop
outsb
or
xchg
xor
insb
inc
lds
es
inc
inc
loop
div
fxch
movsl
cmp
mov
inc
inc
inc
stos
adc
fucom
lods
mov
mov
lret
stos
out
sub
rcr
leave
in
or
cmpsb
dec
das
xchg
cwtl
lock
add
mov
and
mov
push
xor
cmp
push
mov
lods
pop
pop
jnp
lcall
jae
cmp
jno
push
stos
ljmp
lods
sbb
fucom
shlb
or
into
adc
fsub
mov
cld
sbb
sbb
fdivr
jecxz
ljmp
in
hlt
xor
sub
and
lcall
popa
hlt
push
cmp
ss
push
and
pushf
xchg
mov
sbb
int
popa
imul
repnz
lret
je
mov
sbb
xchg
adc
sbb
add
insl
frstor
lods
sub
filds
mov
jb
stos
int
jns
scas
sbb
xchg
add
insl
xchg
iret
dec
sub
and
jne
and
jnp
in
stos
mov
pop
bound
dec
hlt
cmc
adc
fstl
and
in
xor
sbb
add
loop
xor
dec
inc
pop
lret
dec
jo
or
cmp
or
lods
cmpsl
outsl
fisubrl
in
mov
outsb
outsb
popa
andl
mov
inc
clc
pop
out
fsubrs
jp
stos
shl
dec
icebp
xor
and
popa
fmull
sub
cmp
stos
imul
xchg
lods
cmp
cli
mov
sbb
mov
add
pop
jns
sti
repz
cmp
sub
mov
xor
frstor
add
subl
xlat
in
xchg
hlt
adc
or
loop
imul
mov
dec
push
inc
sti
pop
les
cmpsb
icebp
rclb
gs
lods
out
adc
cmp
mov
inc
in
lret
sub
pop
cltd
clc
fisubl
cmpsl
or
stos
rcr
push
in
dec
mov
adc
cmp
out
lock
dec
sti
sbb
dec
xorl
stos
rcrl
sti
int3
sti
nop
dec
mov
insl
fisttpll
pop
adc
lcall
jno
mov
sub
cmp
pop
pop
sub
outsb
popa
jmp
cmp
mov
sub
imul
inc
lret
cmp
aam
sti
xchg
xchg
mov
adc
test
test
dec
out
jmp
and
add
mov
loop
sbb
jnp
inc
outsl
jle
sbbb
ficompl
push
js
dec
jae
or
into
add
ret
movl
hlt
push
fisttpl
inc
test
sahf
push
rolb
nop
push
or
test
push
push
mov
adc
mov
lods
xchg
jae
jbe
fcompl
andl
mov
push
and
arpl
add
dec
out
and
mov
and
data16
out
xor
mov
sub
pop
push
addl
sub
fbld
xor
inc
lods
das
mov
sbb
lret
fsubl
cli
jp
cli
adc
cmpsl
push
fisubrl
jecxz
decl
shrb
loop
mov
cmpsb
and
push
mov
and
xchg
mov
pop
pop
and
pop
ds
mov
xchg
stos
mov
sub
cmp
ja
xorps
outsl
stos
jg
dec
gs
out
out
xor
mov
stos
in
lds
out
push
push
testb
pop
push
clc
ja
fnstcw
adc
and
jp
mov
popf
inc
adc
xchg
mov
repnz
inc
mov
cli
or
repz
jl
sub
sti
loopne
notb
pop
fadd
notb
inc
jnp
int3
fwait
or
and
pop
fadd
sbb
into
loope
pop
stos
sbb
roll
arpl
insb
repnz
and
insl
lahf
push
pop
pop
in
and
test
push
sbb
push
stos
dec
in
outsb
sbb
push
and
mov
stos
fnstsw
out
pop
roll
cmpxchg
sbb
xlat
lcall
jne
jmp
pop
mov
adc
ljmp
fnsave
pop
out
rep
sub
xchg
loop
shrb
cmp
xchg
lock
cmp
loop
cs
dec
mov
in
sub
int
adc
xor
push
mov
shrl
mov
movsb
popf
call
jmp
iret
bnd
adc
mov
lods
mov
xchg
mov
jp
out
pop
filds
push
add
insb
jmp
lea
leave
cmp
add
jle
sub
loopne
stos
adcl
fiaddl
cmc
adc
stos
ja
pop
mov
fsubrs
ret
xchg
pop
out
sbb
jno
xchg
movsb
sub
scas
in
and
cwtl
dec
in
stos
es
incl
add
in
sbb
std
mov
clc
mov
lods
hlt
dec
xor
jle
fcoml
js
cmp
mov
repz
lods
les
insb
inc
mull
call
andb
cmp
jne
rol
dec
rcr
ret
ljmp
xor
in
dec
aam
stos
xor
js
loop
jp
lock
outsl
inc
adc
mov
arpl
outsl
repnz
push
jmp
loop
sbb
cmp
ljmp
push
mov
enter
popa
sub
je
cmpsb
rcrl
mov
pop
ljmp
or
icebp
and
dec
daa
andb
ficomps
stos
cld
fstpl
jmp
push
push
sarl
jb
bound
or
push
lret
mov
add
jmp
and
stos
clc
fimuls
sbb
push
mov
jo
iret
xchg
mov
std
mov
xchg
xor
repnz
insl
repnz
cmp
jecxz
jl
xchg
sub
xchg
pop
movsl
xchg
rorb
and
mov
mov
add
xchg
mov
pushf
adc
push
lret
push
loope
pop
ret
sbbl
pop
xlat
stos
inc
out
push
jmp
add
sbb
sarl
adc
dec
pop
adc
jl
sahf
pusha
jmp
mov
or
inc
xchg
mov
ficompl
fnclex
xchg
xor
xchg
jmp
int
mov
mov
mov
sbb
gs
pop
cmc
xor
mov
mov
idivb
pop
xor
jo
mov
adc
stos
cs
out
lods
inc
mov
push
into
sbb
bound
xor
fcompl
pusha
push
or
add
pop
jns
inc
mov
xchg
ret
add
mov
and
data16
ficompl
call
adc
dec
shll
sti
stos
and
mov
push
inc
pop
adc
add
and
cmc
filds
lds
out
insl
repz
stos
jnp
push
test
jecxz
xor
jno
mov
scas
xor
jo
loopne
adc
mov
or
pusha
in
lods
xor
leave
pushl
inc
pop
adc
adc
mov
push
and
outsb
pop
psraw
add
data16
testb
push
loope
repz
in
rcrl
stos
lret
xacquire
inc
test
push
pop
loope
fimull
sub
cld
jg
jge
loop
sub
clc
dec
in
mov
repnz
mov
xorl
fwait
mov
sub
inc
fimull
mov
gs
xlat
fstpt
and
aad
lcall
das
lret
mov
push
add
fmulp
xor
or
mov
fistl
lock
mov
mov
adc
fcmovnbe
test
into
jmp
xchg
adc
repz
cli
inc
std
sbb
pop
fcmovu
outsl
loope
or
insl
out
sub
xchg
fbstp
loop
shrl
das
adc
int
push
push
jmp
scas
addr16
stos
jecxz
dec
push
in
movsl
push
fcmove
rol
inc
out
adc
mov
and
mov
dec
fistl
cmp
add
xchg
fistl
sbb
sbbl
in
stos
add
inc
inc
or
jo
std
add
mov
rcrl
push
xlat
add
fcmovnb
mov
mov
jmp
cli
fcmovne
pop
or
sub
pop
out
js
xchg
fldt
pop
das
push
xchg
fldt
sbb
dec
adc
jecxz
enter
cmp
adc
mov
xor
push
add
into
fildl
sub
hlt
fcmovne
lods
pop
sbb
mov
call
jbe
aaa
pop
loopne
cwtl
leave
in
imul
fistpl
xor
je
bound
ljmp
xchg
inc
movsl
fistl
ja
dec
mov
rorb
dec
fwait
jg
pop
mov
xchg
addr16
in
aas
mov
xchg
stc
cmc
xor
in
fistl
xor
js
pop
repnz
data16
mov
cwtl
mov
fcomp
aad
lret
sub
sub
mov
std
outsb
sub
xor
enter
and
push
or
fstpt
mov
pop
scas
sbb
adc
lret
sub
push
fwait
lahf
imul
movsl
inc
std
mov
add
mov
outsb
xchg
outsl
jbe
jge
movsl
cmp
fcmovnu
push
mov
scas
fistpl
xor
pop
jbe
cmpsb
mov
mov
fstpt
shll
std
xor
int
fildl
pop
or
out
fisttpl
push
int3
push
xor
test
fwait
rcll
dec
xchg
push
pop
in
adc
mov
add
in
xchg
stos
ljmp
cs
fcmovne
cli
mov
out
fldcw
sti
lock
fldt
je
inc
fstpt
daa
mov
dec
sub
inc
mov
rcll
fistl
ss
push
adcb
pop
dec
icebp
mov
fildl
jg
xor
sbb
mov
lret
adc
sbb
jbe
push
insl
or
pop
push
fistps
inc
push
ret
jl
dec
fs
add
stc
dec
xor
arpl
pop
int3
mov
lret
ljmp
lods
cli
adc
iret
test
aas
mov
nop
fistpll
sub
fistpl
lret
xchg
hlt
dec
fistl
std
adc
fistpl
jne
icebp
imul
pminub
test
nop
ljmp
add
dec
pop
add
mul
push
je
fwait
dec
or
inc
cmpsl
les
lock
in
aad
in
insb
rorl
fldt
mov
movsl
mov
stos
sti
fistl
mov
adc
or
outsb
mov
fucomp
mov
mov
fnsetpm(287
orl
jno
sbb
cli
push
ljmp
ja
dec
pusha
sarb
push
daa
mov
pop
inc
xor
fstpt
daa
add
enter
adc
add
or
mov
mov
cmp
fidivs
dec
adc
mov
fisttps
popa
fwait
jnp
dec
fcmovne
repz
ret
mov
mov
pusha
pop
and
xchg
call
xor
lock
xchg
sahf
adc
sti
xor
cmp
out
jle
out
sbb
andl
fidivrs
sbb
mov
sub
fistpl
ret
jg
call
inc
fldt
imull
mov
fldt
fisubrl
lcall
fistl
bound
lea
popa
or
fistl
rorb
pop
add
sbbb
pop
loopne
inc
call
pushf
mov
or
sub
pop
das
fstl
jo
sbb
mov
cmpb
fildl
cmp
call
aas
sub
adc
fildl
fucomip
xorb
pop
xor
lahf
pop
add
push
jno
push
mov
aam
mov
and
imul
rorl
push
fs
fcmovnu
ret
popa
cmp
adc
mov
imul
mov
cwtl
inc
dec
fcmovne
adc
and
mov
int3
adc
push
shl
shl
adc
or
pop
adc
fildl
push
fwait
jl
adcb
outsb
div
ss
in
fdivl
pop
mov
cmp
orl
push
sub
nop
dec
loope
xchg
sbb
imul
jae
or
nop
pop
lods
xor
mov
pop
push
sub
icebp
mov
faddl
fcmovne
ljmp
loopne
jns
adc
pop
call
js
push
mov
popl
aad
ja
stos
pop
fldt
and
hlt
jno
int
fistpl
inc
push
xor
in
fiaddl
jne
call
es
loopne
dec
lret
int
jne
jno
pusha
fistpl
push
xchg
jo
daa
add
and
or
xchg
mov
popf
inc
leave
loopne
sub
shll
in
clc
mov
add
push
jnp
xchg
dec
fcomi
sbb
dec
arpl
adc
mov
icebp
jge
adcb
fcmovbe
pop
sub
aas
cmovnp
iret
mov
sub
les
fstpl
add
fildl
dec
imul
push
out
aaa
push
iret
rcrb
and
inc
add
sbb
imul
sub
js
cli
mov
mov
loop
xchg
std
subl
jnp
fldt
xor
mov
enter
sbb
fwait
icebp
mov
inc
std
pop
or
pop
imul
or
lds
mov
mov
jmp
jge
enter
sub
dec
aam
test
fsubp
push
adc
in
xchg
in
xchg
test
ror
cmp
clc
dec
inc
adc
cmpsb
push
enter
adc
mov
loope
addr16
lods
inc
test
xor
jo
aam
mov
add
sbb
repz
and
cmp
fisttpll
sarl
fwait
sti
cmp
dec
mov
xor
add
mov
xchg
js
std
jmp
movsb
mov
push
repnz
out
out
push
daa
icebp
aam
in
push
jo
or
and
mov
outsl
adc
dec
cltd
jnp
mov
mov
bnd
dec
add
cmpsb
fistpl
fidivl
pop
in
mov
add
pop
fisttpl
jle
cmp
popf
mov
sarb
dec
push
and
lods
push
pop
lret
mov
push
and
cmc
cmp
jl
pop
or
fadds
ret
daa
sub
test
pop
cli
stos
adc
xchg
lret
inc
push
fucom
pop
mov
pop
shll
mov
dec
out
jmp
ljmp
jno
cmp
fildl
jmp
aas
sbb
or
int
xor
lahf
ret
aas
push
adc
mov
push
push
lret
loopne
repz
add
pop
popa
aam
mov
fisttpl
fucomi
push
pop
stos
xchg
movsb
dec
fildl
and
aam
jb
inc
clc
mov
test
dec
cmp
neg
rorb
push
shll
bnd
fstpl
adc
unpcklps
loop
out
shlb
mov
fildl
mov
cmc
icebp
idivl
shrl
add
addl
imulb
adc
jnp
and
inc
fnstsw
fxch
scas
push
out
jmp
js
push
loop
xor
inc
jae
jmp
xchg
gs
in
pop
sbb
xchg
adc
mov
pop
loop
xor
push
cmp
fsubr
lods
mov
dec
xor
inc
push
fstpl
cmp
in
dec
adc
aaa
popf
stos
mov
mov
cli
arpl
mov
repz
mov
and
xchg
adc
add
add
mov
lods
imul
pop
inc
scas
cmp
iret
popf
lret
lcall
add
cmp
sbb
repnz
and
and
jns
sub
xlat
movsl
fadd
scas
or
int
mov
cs
aad
or
negb
xchg
out
mov
ljmp
fnstcw
push
xchg
pop
imul
jb
mov
stos
sti
jae
mov
arpl
pop
mov
inc
lods
cmp
dec
adc
jecxz
out
lock
outsl
add
hlt
ror
cmp
ficompl
ret
movsb
push
sbb
ss
push
sahf
aam
pusha
xchg
jno
xchg
and
les
fstpt
sub
pop
mov
rorb
ret
or
or
dec
add
cmp
fsubr
or
xor
mov
adc
pop
jg
dec
frstor
push
xor
adc
pop
or
mov
push
sub
push
adcl
mov
and
mov
fsubl
jne
pop
jecxz
xchg
rcrb
fcmovu
push
sahf
jg
scas
testb
sub
dec
call
cmp
jge
pop
andb
cmpsl
xchg
lods
fildll
fildl
cltd
repz
cld
fildl
xor
arpl
pop
loope
bound
cmp
mov
or
sbb
test
ret
mov
stos
pop
fstpt
cmpsb
inc
and
mov
ret
or
cmp
lret
stos
sub
mov
repnz
ret
mov
fidivrl
dec
jae
loope
int3
lret
ss
nop
push
push
sbb
fsubs
insb
aas
add
jecxz
mov
mov
xor
dec
neg
and
stc
cmp
clc
and
fildl
in
scas
shrb
arpl
jecxz
and
or
xor
jl
shll
sub
jae
adc
arpl
mov
sbb
jge
fstpt
mov
xor
rcr
leave
cmpsl
stos
shll
loope
or
cwtl
fwait
ret
pop
adc
ficomps
cmpsl
ds
push
and
adc
gs
mov
push
and
sub
std
fldt
mov
jp
xchg
xor
stos
or
push
and
pop
push
pushf
sbb
mov
jp
pop
inc
xor
sbb
hlt
stos
movsb
imul
idivb
push
pop
cmpsb
stc
iret
fwait
mov
je
push
ret
aam
lock
fcomp
popf
fildl
xchg
repnz
and
dec
mov
mov
mov
add
fisttpl
mov
decb
or
xor
mov
sub
aam
adc
gs
aas
cwtl
add
lods
std
xchg
and
mov
dec
adc
js
mov
xor
xchg
lahf
sarl
add
outsb
pushf
test
and
pop
mov
push
add
xor
mov
push
sub
in
dec
push
inc
sbb
xlat
aad
jge
and
sbb
cld
xchg
jle
cmp
or
aas
dec
imulb
sbb
cltd
pusha
pop
dec
loope
fistl
cmp
jnp
aas
cmp
push
jb
or
dec
mov
rcr
in
scas
add
fcom
imul
sub
sbb
pop
fistpl
enter
lahf
sub
es
loopne
pop
mov
fiaddl
hlt
xor
cwtl
loopne
and
jns
jmp
sarl
jne
fildl
stc
or
das
ss
frstor
enter
xor
rorl
jns
pop
gs
fisttpl
fcompl
jmp
pop
fildl
jo
pop
jg
cs
clc
loopne
shlb
sub
repz
cmpsl
pop
sub
int
add
mov
cltd
fmul
xchg
test
sbb
lods
xchg
jae
or
test
mov
xor
neg
cmp
outsb
std
out
pop
test
mov
ficoms
pushf
jo
mov
daa
dec
or
pop
xor
fildl
pop
arpl
cmp
cwtl
jg
insb
shlb
jge
lods
scas
mov
xor
pop
pop
fsubrl
push
div
int3
inc
ss
sbb
lcall
jns
pop
pop
inc
sub
dec
cmp
adc
shl
cli
push
jno
sbb
leave
jmp
shrb
outsb
xor
stc
jb
xchg
call
sbb
sarl
clc
mov
fisttpl
idivb
fstpt
add
add
xchg
rcrl
jle
mov
test
jecxz
sub
adc
into
lods
fdivs
push
pop
fcomi
jg
xor
and
dec
jnp
dec
icebp
out
int
addb
data16
pop
fstp
adc
mov
and
fisubl
mov
inc
cmp
pop
cmp
mov
rcr
push
gs
mov
int
stos
in
shlb
jl
push
fldt
fdiv
push
push
lea
in
int
repz
xchg
mov
popf
fisubrl
pop
dec
fistpl
pop
pushf
push
cli
lds
pop
dec
and
inc
jg
flds
mov
cmpsb
scas
fucomp
xchg
xchg
je
faddl
int3
and
decl
or
mov
ret
pop
push
jae
jecxz
pusha
mov
and
mov
sub
imul
aaa
mov
js
aam
xchg
popa
clc
fistps
and
adc
daa
cmpsl
xor
fwait
adc
shrb
cmp
iret
testb
sahf
addl
fildl
or
jecxz
pop
in
sbb
fldt
mov
scas
ret
adc
pop
mov
fnstsw
xchg
lret
scas
mov
xchg
iret
add
pusha
push
or
xchg
rcrl
mov
icebp
sbb
pop
cmp
cmpsb
stos
fistl
sub
dec
test
push
ret
inc
jne
mov
cmc
call
adc
pusha
dec
sub
mov
pop
mov
cli
fildl
dec
popa
stos
or
add
jecxz
lcall
sbb
fistpl
jmp
out
pop
stos
js
push
cmp
into
xchg
mov
fstl
mov
add
ds
loopne
arpl
sub
xor
pop
shlb
hlt
call
fmuls
jb
xor
mov
and
sbb
aaa
shr
outsl
stos
jbe
lret
pop
push
xchg
sti
hlt
mov
inc
int3
pop
arpl
inc
movsb
mov
fnsave
xor
mov
shr
adc
hlt
cwtl
pop
push
xor
mov
test
mov
fistpl
fwait
push
pop
fstpt
loopne
push
loopne
sar
sub
cmpsb
loope
mov
jmp
fiaddl
xor
cmp
into
dec
out
sbb
sub
dec
adc
fcmovnbe
adc
mov
repnz
sti
mov
iret
mov
cld
inc
xor
add
adc
add
ljmp
stos
inc
sbb
mov
push
add
cmp
mov
jl
push
sbb
stos
fstpt
bound
imul
adc
cwtl
lcall
cli
popa
and
or
mov
negl
xor
pop
or
fimull
inc
pand
xchg
jge
call
fwait
pushf
fldcw
xor
push
pop
add
cmp
push
fldt
pop
push
pop
jno
insb
fisubrl
out
or
sti
cs
mov
ret
jmp
mov
fildl
cmp
enter
loopne
add
lcall
stos
add
dec
xchg
push
ficoml
xchg
sub
push
sbb
cmpsb
cltd
mov
xchg
sub
add
fucomp
imul
xchg
cmpsb
inc
fistl
stos
sbb
fisttpl
insl
mov
fstpt
sub
dec
fcmovnu
jle
addr16
mov
into
clc
ds
mov
pop
jns
fcmovnb
xchg
push
sbb
scas
sbb
pop
insb
mov
cmpsl
rclb
mov
stos
rcrl
es
fldt
jp
and
mov
sub
call
lret
sub
dec
dec
push
sti
add
mulb
mov
std
mov
inc
pusha
xchg
shlb
scas
repz
jae
push
mov
sub
or
add
jno
cmp
push
fldt
ret
sub
aad
cli
add
mov
lret
dec
add
push
xchg
cmp
dec
loop
mov
fwait
pop
sub
mov
fmul
jae
cmp
lret
fldt
ja
adc
test
inc
ficoms
fwait
sbb
sbb
fucomi
push
sub
cmc
jmp
popa
fisubrl
push
mov
hlt
clc
sbb
mov
fistpl
push
sbb
lret
sbb
xor
and
or
pop
mov
lea
loopne
xchg
leave
movsb
call
movsl
insb
test
clc
bound
fisubrl
ja
adc
ret
xchg
fmuls
fcmovne
push
xor
mov
push
iret
jmp
mov
mov
enter
mov
jp
clc
cld
sbb
aaa
pop
rcrl
push
jl
pushf
loopne
xchg
add
mov
lahf
sbb
insb
pop
xchg
pop
pop
scas
iret
pop
ja
dec
fstpt
mov
into
xchg
cmc
fdivr
add
xchg
add
or
mov
add
lods
lahf
dec
mov
push
repz
mov
jns
idivl
fstpt
or
xchg
mov
call
xchg
cmp
stc
mov
iret
cmp
push
xor
lcall
inc
push
dec
mov
dec
sbb
icebp
inc
repz
pop
test
mov
mov
inc
dec
mov
mov
pop
push
pop
xchg
pop
adc
sub
lret
std
cltd
jmp
ljmp
pop
push
fcomip
pusha
clc
adc
in
jnp
out
push
lods
mov
xlat
jae
xor
decb
push
aas
lahf
add
jmp
movsl
jb
or
mov
popa
lods
call
dec
les
testb
pop
ja
lds
shl
cmpsl
adc
movsb
ljmp
add
fwait
mov
stos
dec
filds
in
fimull
clc
adc
sub
lcall
dec
jno
int
nop
pop
pop
stos
and
cs
lcall
mov
jae
lret
push
jp
stc
sarl
outsl
popa
jp
fwait
lds
and
hlt
fstpt
rcr
push
pop
dec
aad
into
enter
fcmovnb
fdivrs
cmp
lret
outsl
push
aaa
ret
and
push
adc
sub
pop
test
jnp
popl
mov
mov
fcmovne
ret
stos
xchg
movsb
sbb
jmp
pop
mov
lock
pop
pop
loope
or
cwtl
mov
test
fisubrs
ss
cmc
and
push
out
frstor
mov
sbb
add
imul
fstpt
cld
stc
enter
fsub
loopne
mov
fstpt
xor
xchg
scas
lret
test
outsb
sti
dec
loop
inc
dec
fimull
push
add
adc
scas
xchg
ds
push
adc
and
pop
dec
xchg
mov
jbe
mov
rdpmc
ret
xchg
add
jnp
movsl
dec
je
pop
fcomi
and
jne
lret
ret
mov
jle
cmovno
in
mov
movsl
pop
fisttps
clc
dec
enter
dec
push
sbb
mov
pop
cmp
jle
and
fldt
fnsave
lret
jns
or
div
mov
iret
imul
leave
inc
bound
pop
flds
fninit
aaa
iret
rorl
movsb
adc
ja
push
popa
test
fstps
jle
imulb
push
lret
add
sub
ds
roll
fcoml
pop
inc
call
arpl
ret
loope
push
inc
mov
std
int3
mov
pop
pop
es
daa
imul
idivl
pop
fisttpl
cmp
in
push
dec
inc
pop
clc
mov
adc
cmp
pop
out
mov
jae
jb
mov
xor
and
jle
icebp
jp
mov
jge
push
stos
mov
mov
hlt
dec
xor
mov
fistl
test
loop
sub
ret
mov
fs
in
shl
fnstcw
xor
adc
ret
push
aam
fldt
pop
lret
fstpt
jle
sarb
out
jecxz
cli
pusha
scas
push
gs
shlb
cmp
jge
stc
lret
aad
xchg
push
dec
loop
loopne
sbb
fildl
cmp
fistl
leave
cmp
outsl
fistl
shlb
inc
fildl
rcll
jo
sub
mov
sbb
mov
inc
push
jle
pop
xlat
xchg
test
int3
adc
fisttpl
jmp
mov
sarl
adc
push
dec
and
ja,pt
cltd
pop
dec
fucomi
inc
xor
lret
stos
clc
out
addr16
call
mov
mov
add
xor
pop
xchg
pop
fcmovnu
clc
je
sbb
mov
test
xchg
mov
fdivl
cmpsb
stos
lea
push
fsubs
cmp
data16
pop
mov
incb
rolb
leave
in
pusha
mov
rol
out
ret
cmpsl
fcmovu
ret
in
mov
aas
pop
dec
dec
push
pusha
test
xor
pop
cmp
scas
loop
das
xchg
jmp
fidivrl
jae
dec
lahf
or
and
xor
sub
cmpsb
mov
fistl
jne
mov
stc
nop
inc
push
push
test
cmp
jne
je
push
and
cmp
dec
lret
and
jns
pop
fimull
mov
rol
test
adc
iret
push
push
int
clc
mov
ret
outsl
jg
fbld
rol
mov
and
mov
fadd
ret
or
rol
loop
imul
cli
inc
pop
dec
inc
je
aas
xlat
mov
out
decb
mov
nop
aam
dec
cmp
stc
mov
mov
aas
push
lahf
insb
or
ljmp
or
mov
cmpsb
mov
and
xchg
push
sbb
rcll
inc
popf
jp
push
pushf
in
sbb
push
fwait
aad
in
js
cmpl
loopne
add
lock
add
int
push
ljmp
shrb
fndisi(8087
hlt
repz
fisttpl
mov
mov
cmp
jno
and
jae
mov
in
push
ja
popa
clc
cwtl
jnp
xor
daa
enter
cld
clc
mov
inc
pushf
test
aam
imulb
arpl
loop
jmp
push
add
cmp
and
push
fnstsw
fmul
leave
aam
fisubrl
add
fistl
xchg
les
in
fildl
pop
cmp
pop
sub
pusha
adc
clc
stc
and
push
jp
outsl
mov
jae
ja
dec
xor
lret
cwtl
push
mov
pop
bound
xchg
ret
or
or
int3
cmp
sub
lretw
movb
push
mov
test
outsl
lea
fidivrl
fildl
pop
imulb
call
pushf
pop
insl
mov
mov
xor
fsubrp
fcmovu
shrb
call
pop
in
fisubl
stos
mov
mov
and
push
hlt
mov
movb
icebp
cltd
fwait
xchg
push
neg
lret
scas
divl
icebp
sub
push
fcmovnb
pop
sub
dec
into
push
fisttpl
roll
or
pop
aam
cmpsl
mov
adc
dec
pop
push
push
mov
fwait
stos
test
aad
sub
scas
imul
stos
sbb
jae
fnsetpm(287
js
xor
cwtl
adc
fistps
ljmp
loopne
sub
sbb
push
loope,pn
ror
fadds
xlat
pop
jb
hlt
or
and
iret
inc
adc
mov
adc
dec
out
pop
mov
mov
mov
scas
sbbb
cli
fcomi
mov
fidivrs
xchg
icebp
fldt
cmp
jecxz
mull
pop
dec
mov
add
push
ds
jae
jecxz
pop
jno
outsb
test
fstpt
loopne
dec
or
xlat
loopne
jbe
nop
pop
push
lret
mov
adc
fdivp
clc
loop
daa
lcall
aad
dec
pop
and
or
mov
fcmovnb
clc
jmp
pop
int3
jbe
enter
pop
or
fisttpl
cld
lock
fldt
mov
jecxz
popf
jnp
ljmp
fbstp
pop
pop
inc
ret
shlb
push
adc
push
ret
fistpl
fstpl
xor
inc
fcmovu
daa
adc
pushf
fsubr
leave
test
jmp
push
lods
fnclex
lock
dec
stc
in
lcall
cwtl
xchg
xchg
pop
sbb
clc
jae
sub
daa
fisubl
adc
jecxz
fcmovu
cmp
mov
insl
aad
cmc
fucomi
loopne
xor
sbb
lret
arpl
sahf
mov
push
cmp
and
or
mov
fisttps
mov
aam
and
fcomp
ds
daa
sub
mov
out
sbb
push
cld
and
pusha
cmpb
lret
dec
insb
imul
test
xchg
fs
cmc
lea
stos
inc
jmp
sbb
clc
outsl
mov
and
xchg
outsb
push
push
cld
or
jns
arpl
lret
xchg
xor
pop
adcl
adc
call
push
pop
push
ljmp
ret
add
pop
loop
or
push
std
leave
adc
mov
pop
pop
mov
push
cmp
fldt
fisubl
add
std
jno
fildl
or
pop
mov
hlt
pushf
mov
call
push
lret
push
fldt
daa
pop
imul
aad
push
sarb
pop
fistpl
cmpsl
inc
mov
jbe
fidivrs
push
push
dec
leave
adc
xchg
sbb
or
gs
xor
fcmovnb
nop
sbb
dec
mov
ret
and
fldt
js
scas
fistl
push
jecxz
mov
je
dec
dec
mov
fidivrl
add
mov
int3
sub
mov
fucomi
mov
imul
or
adc
test
lock
stos
not
flds
sbb
inc
sbb
test
aaa
inc
imul
pop
mov
mov
or
fistl
inc
bound
cmp
out
fs
mov
push
push
pop
adc
push
and
xchg
or
inc
sbb
dec
push
fstpt
out
pushf
fistpl
jb
pop
jbe
sub
fldt
inc
mov
xorl
int3
in
xchg
frstor
aam
cmpsl
push
jnp
cld
loope
orl
cmp
scas
pop
xchg
mov
inc
xchg
bnd
loop
dec
lea
lods
shrl
sbb
jg
fldt
out
mov
ficoms
lods
mov
cli
xor
stos
stos
fiaddl
cwtl
cmpsl
adc
shr
lods
sub
mov
jp
jns
in
insl
xchg
rcrb
stos
leave
adc
mov
push
sahf
jecxz
adc
lods
pop
ljmp
repnz
mov
subb
sbb
lcall
fidivrs
dec
pop
int3
mov
pop
clc
call
hlt
pusha
shrb
icebp
and
out
test
cmpsb
lahf
stos
push
sbb
sbb
inc
add
sub
gs
sahf
icebp
or
add
jp
xchg
lods
xor
gs
in
fwait
xor
xchg
test
data16
rcrb
lods
fcomi
push
rcr
jge
enter
xlat
push
sbb
fisubrs
mov
popf
bound
and
leave
and
stos
adc
aaa
push
and
dec
sti
pop
dec
xchg
and
icebp
push
imul
adc
in
jge
and
add
dec
push
ljmp
cld
or
pop
xor
push
nop
out
lcall
dec
jb
fsubrs
stos
dec
xlat
fisttps
out
sbb
daa
pop
mov
push
stos
sbb
pop
pop
lods
inc
push
jb
jle
dec
adc
pop
mov
sbb
push
dec
cwtl
xchg
push
cld
mov
pop
loop
rorl
sbb
lcall
push
lds
adc
lds
arpl
sbb
data16
pop
arpl
dec
and
cli
lcall
in
push
hlt
adc
lcall
mov
jmp
jne
jo
mov
hlt
movl
xchg
jl
jg
int
cwtl
lret
imul
fstl
inc
adc
test
pop
push
pop
in
mov
inc
js
and
lret
testb
lods
dec
insb
sbb
in
mov
call
and
dec
stos
sub
and
insl
xchg
setno
sarb
out
bnd
aaa
pop
push
clc
punpckhwd
adc
sbbb
cmc
adc
lds
popf
nop
dec
jge
mov
cltd
xor
lods
jl
pop
aad
je
or
add
push
push
add
dec
call
lods
ss
ds
xchg
hlt
psubq
outsb
cmp
dec
mov
pop
sar
pop
sbb
pop
std
cmc
ficompl
jp
add
pop
add
sahf
call
in
adc
clc
out
jl
xlat
xor
pushf
push
or
andb
mov
sub
jns
jae
loope
add
jp
inc
das
mov
push
inc
adc
or
leave
in
mov
dec
jle
fcmovne
or
out
add
sti
leave
xchg
inc
sbb
cmp
cmp
insl
jb
enter
mul
hlt
push
in
daa
sub
push
and
cmpsb
stos
dec
mov
xchg
inc
in
sbb
or
pop
inc
sub
push
pop
adc
xchg
in
and
clc
sub
jmp
rorl
inc
mov
push
jmp
ret
stos
xor
xchg
jle
repnz
outsl
mov
dec
int
xchg
adc
sti
adc
in
fildll
xchg
addr16
inc
jecxz
ja
push
pop
dec
arpl
inc
pop
mov
scas
ds
xor
pop
icebp
jo
imul
fwait
js
out
jbe
out
movsl
stos
mov
iret
pop
push
fcmove
fisttpl
push
jnp
xor
addl
sahf
sub
js
test
fdivrl
jmp
fidivrl
dec
inc
push
jnp
cld
pop
sub
jmp
dec
xor
pop
sub
fistpl
cmpl
fisttpl
insl
cmp
out
pop
sbb
je
mov
popa
testb
adc
push
xor
and
xchg
inc
aam
fistpl
jmp
xor
into
push
out
imulb
sbb
push
sahf
sbbb
pop
mov
pop
stos
loopne
movsl
stos
inc
mov
hlt
add
push
out
cwtl
adc
stc
xor
lret
sub
lods
xor
sti
xchg
lret
lods
cmp
mov
mov
adc
dec
xor
cmp
inc
mov
cmp
jmp
arpl
dec
push
sbb
jl
mov
out
and
mov
scas
inc
adc
out
sti
lods
shll
cmp
adc
cmpsl
stc
lock
daa
dec
sbb
cmpsl
cmp
pop
push
pop
in
jmp
xchg
jg
add
stos
les
aad
dec
add
aad
sub
jp
or
pop
imul
fnstenv
nop
lods
outsl
jl
fwait
dec
cmp
sti
out
subl
in
in
mov
xchg
test
lods
inc
push
sbb
sahf
in
push
fs
mov
in
loop
push
movsb
lods
mov
xchg
add
pop
or
imulb
mov
fcoml
dec
jbe
add
aas
inc
shl
mov
filds
lds
inc
cmpsl
out
pop
adc
into
gs
int
push
cmpsb
test
sub
sti
repz
add
mov
sbb
sub
push
fsubrl
sarl
or
jecxz
fstpl
mov
aad
jmp
and
lcall
jno
outsl
mov
add
lock
movsb
in
popf
jbe
int
push
jmp
jge
in
sub
mov
add
stos
cmp
sbb
pop
cmp
lcall
outsb
jne
popa
sarl
push
aad
or
add
xor
ds
adc
or
test
xor
xchg
aaa
test
bnd
rorl
push
jbe
out
xor
sub
jno
and
push
lods
inc
testl
push
out
pop
mov
mov
or
inc
push
insl
cmc
jp
inc
or
enter
out
jle
pop
in
ljmp
stos
loop
stos
fisubrl
stos
xchg
daa
ljmp
dec
repz
sbb
arpl
pop
ljmp
mov
ficoms
notb
jae
sub
pop
insl
jmp
scas
or
or
add
stos
cltd
xchg
dec
hlt
subb
repnz
inc
pop
loop
push
mov
xor
xchg
add
lret
push
ret
mov
das
repnz
pop
lcall
mov
shll
sub
iret
ljmp
xchg
stos
orl
mov
hlt
stos
sub
xchg
cmc
pop
sub
idivl
stos
pushl
lods
negb
shr
sub
cli
out
jno
jb
cmc
jo
lea
bound
imul
mov
int3
cmp
xchg
aad
push
cmp
mov
loop
or
ja
lea
loope
xchg
dec
lods
in
test
mov
arpl
adc
dec
mov
xchg
pop
jp
lcall
sbb
gs
push
push
shrl
mov
jg
fistl
push
lret
bswap
push
pop
fs
stos
add
or
sub
push
div
sti
and
pop
and
xor
loopne
inc
mov
jb
push
loop
xchg
push
mov
sbb
sbb
es
insb
mov
sbb
sbbl
stos
in
test
xchg
mov
push
aaa
in
ljmp
clc
and
or
and
in
mov
inc
jge
and
mov
lret
loope
xchg
aad
fst
sbb
js
sbb
or
mov
mov
stos
xorb
push
out
enter
cld
xor
cmp
inc
mov
in
out
loop
cmp
lcall
sub
arpl
sar
fists
jp
adc
jp
xlat
pushf
jl
push
pop
inc
imul
jl
xor
ret
out
lods
push
xchg
cmp
cmc
or
xchg
repnz
pop
mov
xor
pushf
or
imul
push
push
and
or
mov
fsubrs
loop
aam
sub
icebp
inc
andb
fistpll
sti
pop
lods
inc
sub
xlat
jge
inc
dec
das
sbb
pusha
sbb
stos
into
int
fisubrl
testl
inc
ljmp
mov
sbb
pop
cmpb
stos
push
adc
cmp
push
or
pop
loopne
das
push
sub
repz
pop
sarl
fiadds
mov
xchg
es
arpl
sbb
lret
fildl
int
stos
outsl
sbb
adc
aam
in
pushf
sub
setle
es
xor
in
xadd
cmp
icebp
roll
es
lock
iret
stos
jge
fcomip
push
inc
arpl
cwtl
or
jnp
stos
es
clc
sbb
pop
mov
ret
movsl
lods
roll
pushf
jg
aad
addr16
scas
mov
push
adc
add
sti
lods
ss
jge
cmpsl
dec
shr
sub
stc
sbb
sbb
xor
andl
sbb
ljmp
cmp
inc
int3
sbb
and
fmuls
clc
adc
xchg
mov
and
or
lods
cltd
sub
movsb
mov
fimull
sub
and
mov
ds
add
mov
jecxz
rep
cmp
push
sbb
sbb
xchg
and
adc
xor
mov
pop
enter
sbb
jge
add
cmpsb
fwait
aad
mov
das
sub
jo
or
xor
adcb
pop
mov
cmc
xor
mov
pop
lcall
sbb
sbb
mov
dec
test
and
in
stos
dec
push
inc
in
mov
dec
jl
jge
adcl
mov
ffreep
adc
dec
jmp
adc
scas
movsl
mov
lock
pop
pop
pusha
in
scas
inc
aam
add
or
pop
inc
jo
add
jmp
into
add
in
xchg
jge
je
out
loop
imul
call
sahf
aaa
mov
and
jge
push
fld
and
scas
sbb
repnz
mov
mov
mov
xlat
jmp
adc
popf
push
inc
lcall
dec
bnd
lock
stos
ss
jmp
jnp
xor
in
cmp
movsb
mov
in
scas
xor
xchg
or
sbb
stos
inc
add
dec
std
inc
or
push
sbb
dec
add
and
scas
pop
adc
adc
sub
fisubrl
and
jns
adc
popf
jne
stos
stc
adc
jmp
mov
movsl
cmp
jp
pop
sbb
stos
in
rolb
outsl
or
add
icebp
mov
jmp
mov
sahf
jnp
fs
cmp
sub
hlt
mov
call
shr
outsl
loope
jo,pt
aad
mov
call
jne
mov
or
je
sub
ljmp
out
mov
inc
adcb
xchg
push
mov
ds
mov
jb
pop
fidivl
lcall
fs
frstor
push
mov
call
stos
lods
aaa
pop
iret
int3
movsb
sub
mov
mov
out
cltd
stos
pop
xchg
jecxz
push
pop
lcall
ret
fdivp
sti
push
in
shll
xchg
clc
and
mov
push
jbe
cwtl
jb
push
xchg
xchg
jo
out
dec
mov
xchg
scas
sti
lock
ret
subb
mov
add
mov
xlat
jecxz
or
lcall
jge
loop
xchg
mov
pop
lret
sbb
xchg
pop
fcmovb
rcrb
jle
jo,pt
add
inc
jecxz
inc
xor
adc
aad
lret
in
or
cmp
dec
lret
adc
add
sbb
rcll
mov
dec
xor
xor
pop
or
scas
inc
push
lea
xchg
loope
inc
xlat
out
mov
mov
jns
mov
clc
stos
cli
mov
js
jb
inc
ljmp
xchg
or
lret
dec
fldt
bound
call
cmp
fbld
insb
lret
andl
testb
andl
push
cwtl
fstpt
jnp
rol
rcll
outsl
mov
and
jne
pop
fiaddl
xchg
push
fildl
cmpsl
push
test
gs
mov
jae
shlb
adc
repz
inc
or
pop
xchg
or
adc
insb
mov
dec
jnp
push
popf
xor
cwtl
mov
outsl
lahf
jnp
shl
or
dec
xchg
cmp
sbb
jmp
jge
test
push
call
dec
sbb
pushf
clc
out
pusha
dec
int
aam
jp
popf
fistpl
stos
inc
push
inc
ficompl
incl
adc
mov
data16
pop
add
sbb
outsb
pop
mov
sbb
pop
les
leave
int3
jae
mov
jg
pop
in
xor
sub
cwtl
sarb
mov
pop
mov
adc
fstpt
sub
scas
fisttpl
mov
leave
xlat
ret
or
lods
dec
fcmovnbe
insl
jecxz
lds
mov
cmp
imulb
pop
imulb
cs
adc
push
xchg
jnp
dec
test
aaa
insl
mov
outsl
ror
call
stos
mov
loopne
insb
pusha
dec
push
mov
fstpt
data16
sbb
inc
push
or
aam
jl
xor
lock
sub
xchg
ljmp
loope
mov
shrl
fcmove
mov
cmpsl
neg
into
add
jbe
scas
dec
fcomi
xor
shl
mov
fildl
or
ret
bound
lcall
xor
movsb
adc
clc
mov
imulb
mov
cvtps2pd
out
shl
filds
je
xchg
jmp
fxch
nop
mov
and
fcomi
jecxz
jg
iret
mov
shlb
mov
jge
sub
cmp
fdivr
add
rcl
or
and
mov
mov
lods
imul
fldt
pop
aaa
imul
and
leave
adc
pop
push
mov
add
jo
loopne
fcoml
pop
mull
ret
ljmp
or
jbe
imulb
int3
addb
add
in
rcrl
and
cs
mov
stos
pushf
jo
adc
stc
sbb
les
dec
fmuls
dec
fcomps
das
push
sbb
nop
movl
lock
sbb
inc
xchg
fisttpl
sbb
inc
cmp
loop
fstpt
outsl
jnp
lret
pop
fisttpl
xchg
lahf
jl
mov
mov
cmpsb
lock
ret
neg
and
push
push
dec
clc
xor
rcrb
jp
mov
dec
inc
jno
fwait
inc
mov
fbstp
and
outsb
insb
lock
hlt
xor
iret
or
add
push
pop
or
push
test
in
mov
jle
cmpsl
mov
pushf
nop
xor
or
fldenv
sbb
test
call
mov
fisubrl
or
inc
sbb
jp
out
xchg
push
xchg
ss
cmc
loopne
adc
jae
inc
das
mov
stos
jne
inc
xchg
fldt
lahf
leave
or
sub
mov
pop
push
js
stos
nop
adc
lahf
fistl
dec
and
jne
sahf
mov
pop
or
push
nop
lock
aaa
repnz
fneni(8087
jne
enter
int3
mov
fistl
scas
test
jge
in
rcr
sbb
adc
fnsetpm(287
cwtl
in
jae
pop
out
movsb
frstor
insb
js
iret
adc
sbb
lcall
jae
push
mov
daa
mov
clc
cwtl
fwait
das
fcomi
ret
shll
fwait
iret
fisttpl
popa
add
mov
nop
fcmovnbe
imul
jle
aad
stc
cltd
mov
adc
fstpl
pusha
daa
add
mov
enter
ret
out
repnz
hlt
jmp
stos
xlat
jns
adc
roll
push
sbbb
and
mov
fisttps
push
jmp
call
clc
mov
inc
or
sbb
mov
nop
add
mov
xchg
lcall
cmp
jnp
inc
dec
xorl
ret
lret
adc
popf
negb
data16
fwait
dec
jmp
sbbl
insb
xchg
cltd
inc
sub
cmp
pop
jno
orl
int
lret
cmp
fprem
and
mov
push
aas
xchg
or
jae
scas
mov
mov
int
lods
dec
imul
stos
or
push
fidivrl
fldt
std
sub
je
pop
pusha
ljmp
pop
mov
xlat
and
xchg
dec
inc
negb
mov
std
insb
mov
jle
frstor
dec
out
dec
push
stos
jl
mov
or
addr16
xchg
fsts
fldt
dec
push
lcall
cmpsl
cmp
jg
test
lcall
fildl
call
xchg
mov
fstl
shl
or
adc
xchg
negb
jo
testb
jae
inc
add
sub
fnstenv
cli
or
adc
xchg
push
dec
cmc
js
and
mov
jp
bnd
sahf
dec
mov
sbbb
imul
mov
in
test
loope
inc
stos
pop
push
imul
imul
dec
shr
fwait
jns
adcl
mov
fisubl
cmc
or
jne
outsb
int
sub
out
cmpsb
sbb
fildl
or
addr16
out
sbb
push
push
aaa
fcmovnu
aam
fsubs
cmpsl
mov
jns
pop
ficompl
jbe
mov
fildl
inc
clc
jo
lods
addr16
fildl
int
mov
sbb
jbe
inc
pop
out
arpl
dec
jp
add
lret
fcoml
idivb
inc
mov
pop
negb
mov
lcall
push
ds
and
lock
loope
add
jecxz
mov
jne
jge
dec
pop
push
cmp
mov
lret
fsubrl
fildl
sub
inc
fwait
into
notb
mov
lahf
imul
or
out
mov
fldt
cmpsl
xchg
add
pop
xor
clc
jae
jne
adc
outsb
sahf
xchg
fstpt
xchg
rorl
clc
xchg
xchg
iret
fwait
inc
fists
pushf
lahf
je
jecxz
fcmovnbe
popf
push
sub
dec
lcall
fisttpl
mov
cwtl
inc
and
pushf
out
xchg
lret
adc
fistpl
xlat
roll
pop
rcr
testl
add
push
or
sarb
out
sbb
bnd
pop
or
or
negl
data16
hlt
clc
and
jbe
adc
mov
rorl
or
popa
loopne
scas
imul
mov
cwtl
xchg
in
stc
fildl
fists
jge
jns
jb
adc
loopne
shrl
out
arpl
cmp
stc
dec
loop
or
cmc
test
jmp
xor
insb
lret
fldl
daa
shrl
lea
fucomi
cmp
shlb
xchg
fldt
or
outsl
mov
lret
cmp
shlb
push
pop
xor
pop
xor
cmp
mov
fildl
jb
sbb
pop
cmpsl
dec
push
inc
pop
ds
push
or
into
ret
push
cltd
and
iret
lret
cli
loopne
pop
xor
nop
mov
pop
mov
dec
mov
enter
sbb
inc
test
mov
sub
sbb
movsl
push
dec
inc
aam
fstpt
movsl
inc
int3
adc
xchg
call
lret
lahf
jg
pushf
push
pop
jmp
lea
add
hlt
arpl
jl
mov
push
and
fistpl
cwtl
xchg
pushf
fneni(8087
cmp
push
out
test
pop
roll
ficoms
xchg
dec
adc
cmp
add
or
pop
ja
xlat
shll
cmp
cld
sahf
lcall
jne
push
popa
cmc
fistl
aaa
inc
xor
jb
mov
sahf
jno
cmp
in
loop
cmpsb
or
fisttpl
cmc
adc
push
fists
aad
vmwrite
insb
xchg
bnd
xchg
test
call
loope
xchg
icebp
xchg
lock
push
imul
sub
std
outsb
adc
stos
lods
sbb
add
insl
sti
jle
sub
cli
push
icebp
loope
lods
aad
jp
sbb
lcall
or
enter
pop
jne
push
xor
loopne
mov
fldt
sub
mov
push
xchg
fcmovnbe
fmuls
call
mov
imul
es
adc
mov
sti
mov
loopne
cmpsl
pop
addr16
mov
push
inc
xor
pop
mov
pop
imul
mov
or
pop
imul
cmc
fistl
xchg
out
sbb
xor
dec
outsl
fisubl
std
sub
lds
fcomi
inc
xchg
cltd
cmpsl
iret
fcmovnu
or
fimull
movsl
xor
fstpt
in
cmpsl
lret
mov
sti
neg
adc
add
fldt
xor
fcmovnbe
imul
xchg
fldt
mov
fistl
in
mov
lahf
sub
xchg
and
xchg
pop
xorb
fistl
xor
movsl
fcmovnu
rorb
pop
inc
clc
lahf
xlat
push
repz
dec
pop
frstor
xchg
enter
cmpl
push
imull
out
loop
dec
xlat
icebp
out
jne
fcmovu
mov
sub
mov
and
jae
add
pop
sub
and
xor
cwtl
shld
push
fidivl
loop
ja
mov
mov
inc
xor
movsl
call
push
pop
inc
loopne
adc
dec
xor
adc
inc
dec
arpl
or
rcrl
into
shlb
adc
fildl
jbe
ja
pop
sbb
pop
fldl
fwait
xchg
loopnew
dec
pop
inc
mov
or
sbb
cmp
pop
ret
and
leave
ja
add
or
loope
les
cmc
call
lcall
into
out
xor
clc
push
jbe
outsb
jmp
pop
ficoms
testb
sbb
push
and
sti
mov
pop
jp
out
out
adc
push
mov
pop
pop
jb
xor
pop
mov
push
vphaddudq
and
pop
add
fisttpl
lock
pop
pop
dec
push
fisttpl
push
mov
add
or
jbe
idivb
rorl
or
daa
jecxz
or
and
mov
ret
fistl
add
call
sarl
jb
or
stc
fistpl
stos
fcmovnu
xor
rcl
fldl
cmpsl
ljmp
mov
jge
jle
call
xorb
dec
push
lahf
movsl
fstpt
leave
push
ljmp
imulb
fmuls
mov
int
ficompl
into
lcall
fbld
rcrl
xor
scas
mov
and
or
xlat
leave
inc
cmp
mov
mov
xor
push
sbb
lret
jnp
pop
dec
rcl
mov
popa
pushf
fidivrl
movsb
clc
mov
fldl
jle
inc
fldenv
sbb
fildl
inc
arpl
mov
cmp
pusha
fstpt
sbb
cmp
not
into
and
sti
fistpl
push
xor
or
cmp
mull
sub
lock
fidivs
xchg
mov
les
xchg
and
loopnew
cmp
or
lret
pop
dec
inc
push
add
loopne
sub
xor
jecxz
mov
hlt
xchg
out
aam
jle
pop
out
fimull
repz
fldln2
call
jo
sub
cmp
jp
loopne
ret
lea
cmp
fisttpl
cs
popa
and
mov
fisttpl
xchg
scas
mov
in
loopne
std
cmp
fdivrs
push
out
imul
cmp
es
inc
inc
out
mov
mov
jg
fcmovne
xor
mov
xchg
frstor
mov
jecxz
pop
fstl
mov
fs
aaa
and
out
jnp
inc
test
pop
out
iret
xchg
imul
cmp
test
scas
mov
lret
addr16
and
pop
loopne
or
mov
cld
push
rcl
xchg
call
pop
mov
jne
fildl
fbld
sti
fsubr
lret
push
jbe
sub
jmp
xlat
or
fldt
inc
mov
insl
sbb
clc
fistpl
fadds
test
jp
xchg
mov
add
je
aad
cltd
fistl
cmpsl
mov
lds
dec
mov
arpl
fstpl
and
ret
jnp
cwtl
mov
mov
int3
mov
and
stc
fcoms
ret
lcall
repz
or
mov
push
jp
jne
mov
add
hlt
fldt
cli
ja,pn
test
mov
ficompl
mov
out
int3
in
stc
in
insl
in
loope
leave
cmp
shrb
enter
fisttpl
push
mov
mov
lcall
fildl
jg
mov
sub
mov
mov
jbe
cmp
push
call
pop
mov
movsl
fcmovnb
pop
jmp
sub
mov
jo
fisttpl
mov
pop
insb
inc
push
rclb
ficompl
add
nop
movsl
fistl
testl
fs
mov
rclb
inc
fidivrl
dec
xchg
and
sbb
fbld
test
mov
ret
arpl
add
daa
lds
aaa
enter
inc
gs
jae
or
cwtl
pop
cs
pop
adc
dec
inc
jle
push
popf
sub
out
fucomp
cmp
push
cmc
mov
lea
subb
mov
mov
xchg
lret
out
lahf
es
out
fistpl
or
fnstenv
outsb
sbbb
pop
xor
shlb
xchg
xor
fstpt
rcrb
shll
in
sub
mov
mov
test
mov
or
cs
lock
pop
pop
pop
mov
in
fs
fiaddl
aaa
fwait
mov
inc
inc
add
nop
and
cwtl
or
push
repnz
sbb
jae
ljmp
push
stos
inc
ror
fildl
lods
xchg
enter
mov
clc
les
fbld
out
pop
jnp
in
cmp
mov
push
cmovno
push
loop
or
add
clc
fildl
pop
mov
jbe
sbb
and
mov
js
call
xor
cmp
call
mov
inc
xchg
lahf
cmp
sbb
fcmovne
lds
lcall
adc
out
jnp
cmp
dec
jne
cmp
xor
lds
stos
scas
jl
push
adc
mov
mov
fisttpl
sub
xor
sbb
pusha
adc
mov
mov
mov
loop
les
mov
push
jb
es
fdivrl
pop
xchg
jae
mov
sbb
loop
xchg
rorb
adc
icebp
cwtl
dec
stc
in
fs
jno
push
cmc
fsubp
loope
fsts
dec
jge
cmp
out
sarl
push
icebp
mov
add
cmpb
mov
rcrb
cs
xchg
fst
sbb
or
aas
imul
call
enter
aam
fistpl
jae
fisubrs
push
sahf
test
jmp
std
fcmovnbe
xchg
sbb
adc
out
jns
xchg
lods
jge
lret
dec
mov
sbb
jle
repz
mov
daa
nop
gs
jnp
test
dec
dec
out
movsl
fcmovu
movsb
fcoms
cmp
fwait
mov
xor
sbb
fistpl
test
fcmovne
into
pop
std
add
stc
loope
pushf
popf
sub
sub
add
out
mov
pop
mov
sbb
sub
cmovae
mov
addb
pop
lret
pop
push
out
js
ss
addr16
cmp
cltd
in
push
fistl
in
cmc
fldt
inc
add
lret
pop
xor
imul
jmp
fdivrs
dec
mov
push
jb
xchg
or
sub
sbb
jmp
scas
cmpsl
or
fldt
stc
xor
insb
dec
fs
clc
fcoml
lcall
ret
fucomip
cmpsb
es
push
mov
insl
loop
ja
jecxz
lret
repnz
xchg
fisttpl
stos
jbe
mov
ret
pop
pop
lea
sbb
lret
add
mov
fidivrl
loopne
paddusb
mov
jmp
xchg
add
lret
xor
iret
push
xor
fcmovne
cmpsb
xchg
xchg
jne
inc
jg
or
mov
mov
lret
dec
xchg
fistl
or
repz
div
loope
or
push
dec
js
cmp
mov
lods
jp
pop
fcmovnbe
test
stos
adc
icebp
out
repz
sbb
and
jbe
iret
xorl
ds
adc
das
mov
or
fldt
jle
sbb
push
gs
popa
cmp
fwait
mov
fistpl
pop
jp
in
test
cwtl
xchg
mov
nop
in
aam
mov
xchg
add
scas
jp
inc
clc
xchg
fistl
sub
imul
or
and
sahf
and
xchg
mov
fs
movsl
pop
fldlg2
stos
jb
fistpl
lds
out
mov
fsubr
sarl
jl
inc
lods
sbb
push
jnp
popa
fistl
test
mov
int3
in
fucom
xor
add
fbld
sbb
loopne
push
cmp
adc
push
call
xor
sahf
jmp
push
mov
sub
push
js
and
xor
push
arpl
lret
mov
dec
js
je
into
mov
add
incb
and
push
mov
in
cmp
inc
aam
movsl
cld
pop
dec
neg
aaa
fstpt
stos
mov
jle
jge
in
jno
or
xorb
inc
fisttpl
movsl
xchg
push
push
insb
fucomip
xchg
das
pop
loopne
pop
out
push
leave
fisttps
adc
rolb
sahf
neg
stos
cwtl
and
jge
xor
std
pop
adc
xchg
fisttpl
icebp
xor
aam
mov
in
xorb
fwait
pop
jae
nop
inc
fistl
mov
stos
movsl
fisubrl
push
dec
inc
jl
fisttpll
aad
xchg
clc
fistl
test
pop
push
pop
mov
loopne
push
loopne
lock
lea
mov
fwait
push
sub
fucom
shl
mov
ret
xor
or
clc
push
rcr
push
test
xchg
push
and
push
popf
enter
fcmovnb
push
cmp
fistpl
pop
cmc
aad
pop
mov
sbb
xchg
adc
pop
cmpsb
clc
add
sahf
xor
mov
mov
rcl
and
inc
pop
xchg
mov
fisttpl
dec
dec
add
cmp
mov
fmull
jp
call
negl
mov
adc
lcall
adc
cmp
pop
adc
xchg
jbe
les
push
cwtl
sub
fcmovu
int3
sub
mov
fistl
outsl
and
fstl
insb
mull
psubq
jbe
mov
sbb
add
fnstsw
jp
inc
loop
inc
fldl
sti
mov
jae
adc
mov
pushf
mov
mov
ret
fisttpll
subb
imul
inc
pop
js
loopne
and
test
xchg
pop
das
divb
nop
dec
pop
push
cwtl
not
repz
int3
psrlq
call
icebp
sbb
pop
jae
in
mov
xchg
dec
fcompl
add
fcmovnu
jnp
cwtl
lods
nop
mov
fistl
sbbl
pop
add
mov
xchg
bound
pop
add
insb
sub
aam
call
push
rcrb
je
std
dec
xchg
sub
idiv
jb
xor
jmp
cmp
pop
jnp
add
mov
mov
add
fistl
jecxz
movsb
call
inc
sbb
cmp
inc
fstpt
dec
fisubrs
push
push
pop
lret
out
lcall
fisubrl
and
arpl
mov
push
lahf
pop
adc
insb
inc
and
cmc
sarl
test
stos
xor
push
xchg
loop
lahf
fistl
or
lock
sti
arpl
pushf
jmp
dec
clc
insl
inc
call
mov
stos
ret
mov
ficomps
mov
mov
loopne
mov
in
dec
pop
inc
cwtl
push
fistl
cmc
jmp
sbb
cmpsl
fcomi
mov
sbb
in
inc
sbb
mov
imulb
fwait
inc
data16
sahf
and
dec
in
in
test
je
shrl
and
les
lods
lahf
lret
lcall
mov
xor
insb
call
inc
fisttpl
dec
xor
fninit
dec
jb
push
sbb
pop
add
push
lods
fstp
xchg
push
mov
fldt
fnstenv
loope
add
push
mov
push
sub
in
lret
fildl
imul
bound
inc
cmpsl
loopne
js
adc
mov
xchg
push
rcr
dec
lea
scas
fldt
cltd
add
xor
xor
lret
jge
push
repnz
jb
jnp
outsl
fisttpl
cmpsl
xor
fcomp
test
dec
inc
mov
mov
sbb
mov
jae
lret
fstpt
divl
fildl
popl
pop
sahf
lcall
xor
inc
lcall
fistpl
test
push
loopne
aad
test
jmp
mov
push
mov
fimull
std
sar
push
and
fs
add
push
lahf
repnz
aaa
imul
sti
fcmovnbe
mov
daa
fisttpl
movsl
in
cld
adc
fnstsw
cmp
mov
stos
mov
sahf
int3
xor
jbe
xchg
pusha
stos
push
and
xlat
push
fucomi
test
pop
movsb
fucomp
or
fwait
lea
les
fldt
sahf
in
push
and
lret
add
fldt
push
mov
adc
inc
xor
hlt
xor
fisttpl
mov
fsts
fwait
xchg
sub
mov
cmp
jl
mov
es
and
adc
fstp
jg
and
push
in
mov
sbb
jns
adc
test
test
fcomi
clc
sbbl
cvtpi2ps
pop
jmp
xor
adc
mov
loopne
push
lea
clc
int3
cltd
cmp
call
out
adc
fldt
stos
xor
js
inc
out
pop
int3
faddp
dec
scas
fisttpl
xchg
dec
cmpsb
inc
xorb
stos
inc
jle
lret
repz
aad
and
fildl
inc
push
out
pop
push
sbb
js
insl
jo
fidivrl
or
xor
fistpl
jbe
adc
cmc
incb
mov
fistpl
add
out
out
into
push
int3
mov
sbb
xchg
fprem1
leave
fidivs
xor
cmp
cmovae
sub
xchg
pop
stos
loopne
fwait
popf
xlat
dec
sti
dec
push
jb
fisttps
cmp
adc
pop
jo
fwait
test
cmpb
fcomps
fcomi
mov
sub
mov
fwait
enter
add
sub
push
hlt
rcrb
dec
and
in
sbb
sub
pop
jns
pop
cmp
leave
or
push
cmpsb
mov
sbb
ss
bound
clc
mov
lret
dec
push
add
sub
xchg
sbb
sbb
or
out
fcmovne
jbe
dec
mov
xchg
cmp
xchg
lods
push
mov
test
fcmovne
test
pop
aad
xchg
cmpsb
push
data16
sbb
jae
aas
rol
jecxz
jo
in
add
pop
push
fimull
fstpt
xor
call
lds
fildl
das
pushf
cmp
and
lret
xorb
cmpsl
int3
call
lret
mov
in
or
jmp
add
fistl
imul
and
inc
fnstsw
mov
loop
push
inc
les
fistpl
push
arpl
fucomp
adc
in
movsl
inc
sub
fcompl
or
push
pop
ss
aad
jg
iret
ficompl
daa
fmuls
push
shlb
popf
out
mov
jb
mov
mov
fildl
shll
push
xchg
in
xchg
jne
pop
jmp
xchg
jge
and
cmp
icebp
fisubl
jmp
jmp
push
jmp
in
push
push
movb
clc
pop
fcom
out
lods
fbld
sbb
pop
push
cli
cltd
test
sbb
fisttps
xchg
subb
dec
add
loopne
pop
jbe
mov
mov
xchg
out
cmp
out
cmc
adc
push
xchg
insl
sahf
lcall
iret
flds
jmp
out
xchg
dec
call
in
int3
movsb
push
and
ljmp
popa
clc
fwait
cmp
rcrl
push
aam
jl
sbbl
inc
loop
lods
push
fisttpl
cmp
jb
shll
jmp
mov
inc
sahf
fcmovnbe
push
jecxz
sbb
cltd
or
in
fidivrl
fisubrs
push
fcmovne
lret
out
mov
pop
cld
in
sbb
jns
mov
call
loope
rcrb
fcmovne
scas
lods
mulb
adc
xchg
fistl
mov
insl
xor
push
out
mov
lahf
subl
sub
dec
sbb
fcmovnu
cmp
mov
pop
and
push
ret
fisttpl
stos
sbb
fistpl
mov
testb
sbb
mov
mov
cmp
cli
jmp
loop
fcmovne
stc
mov
mov
fdivs
rcll
and
cmpl
fnclex
pop
xchg
outsb
mov
mov
adc
mov
cmpsb
sti
or
adcl
mov
mov
mov
sbb
incb
adc
les
xor
xor
dec
and
stos
and
push
lahf
pop
shl
or
out
icebp
xor
cmp
and
push
pop
or
daa
adc
mov
adc
repnz
push
imul
lods
mov
push
sub
and
cmp
adc
cmc
add
fbstp
loopne
jg
test
sub
xor
mov
xor
fnsave
mov
xlat
adcl
lods
xor
rolb
sti
jnp
jg
xor
jmp
loope
xor
test
lods
lea
loop
decl
ljmp
cmpsl
mov
adc
jl
dec
adcb
xchg
or
push
in
jne
pop
pop
shrb
fs
test
xor
insb
jb
cli
add
lods
sub
mov
lahf
and
dec
jae
jns
mov
push
mov
in
stos
aad
fsubrs
xchg
out
ss
xchg
in
mov
cmp
sub
xor
xchg
loop
enter
jb
cmp
enter
fnstsw
inc
mov
pop
lcall
enter
cmp
lods
shl
add
lret
fmull
fidivrl
inc
cs
mov
mov
mov
lcall
add
dec
inc
adc
push
mov
xor
lods
data16
mov
add
movsl
les
xor
add
pop
bnd
or
pop
fiadds
jl
enter
push
leave
xchg
iret
loop
xchg
push
xor
add
cmp
mov
push
out
incl
repz
xchg
sub
sbb
cmp
push
lods
cltd
call
jmp
loop
popa
lods
xor
mov
mov
xchg
std
pop
jp
ret
loop
jg
push
cmp
xchg
pop
cmpsb
arpl
add
jl
xor
test
inc
lcall
rcrl
repnz
mov
pop
sbb
push
mov
loopne
loopne
stos
js
in
mov
sub
xchg
adc
or
push
lock
or
add
shl
clc
icebp
mov
cmpsb
fildll
jl
repz
and
xor
sti
xchg
jbe
repz
aas
adc
jle
jne
push
scas
icebp
cltd
adc
or
push
stc
fildll
aam
push
pop
jno
push
sbb
or
xor
pop
xchg
repnz
dec
movsl
add
stos
inc
mov
mov
jno
shlb
fildll
xor
mov
pop
or
cld
stos
outsb
jo
and
aas
or
mov
ljmp
fisttpl
or
stos
and
call
bound
fisubl
adc
pop
push
pusha
or
dec
icebp
xchg
arpl
mov
into
sarl
mov
cmp
xor
xchg
sti
hlt
jl
jle
add
jo
cmp
stos
call
cmc
cmp
insl
push
add
xchg
int3
and
mov
add
push
repz
icebp
sub
stos
enter
xchg
push
aas
and
aam
mov
pop
cmpsb
cmpsb
lock
dec
fldt
xor
sbb
arpl
ficoml
mov
dec
pop
icebp
fcompl
jp
mov
jmp
inc
cmp
lcall
mov
inc
pop
repz
pop
sub
jbe
adc
mov
stos
jnp
in
fstpl
jmp
pushf
pop
fwait
cmp
and
pop
fistl
in
int
sbb
or
sarb
sbb
push
cli
add
mov
pop
or
insb
or
dec
fistpl
inc
mov
jp
jecxz
call
sbb
stos
xor
mov
orb
shll
dec
or
adc
je
mov
mov
push
fnstcw
ss
out
fldt
je
push
cmpsl
fstpt
push
and
sbb
adc
mov
jmp
cli
fistpl
je
mov
xchg
call
dec
int3
lret
adc
jge
fisttpl
js
sbb
cs
mov
sbb
cmp
xor
lock
fadds
lods
dec
aad
in
add
movsb
or
jp
cltd
fcmovnu
xchg
pop
inc
ror
sti
fdiv
fldl
in
adc
pop
mov
push
repz
ljmp
cli
repnz
inc
mov
sti
inc
or
cmpsl
cmpb
out
sub
lds
sahf
mov
dec
push
pop
xchg
add
push
dec
out
std
insb
loopne
xor
cmp
loope
testl
fistpl
or
lcall
iret
int3
jl
push
pop
mov
aam
xor
dec
sbb
inc
mov
int
movsb
xor
lret
adc
sbb
call
insl
sbb
imul
aam
sub
sbb
negl
inc
incb
pop
push
lods
imul
fstpt
aas
jbe
nop
xchg
inc
fcmovnbe
dec
inc
lods
rclb
sbb
xor
sub
fildl
push
lret
mov
popa
cmp
divb
ja
pusha
fldt
xorb
ljmp
dec
dec
mov
pop
and
jge
add
fildl
in
jne
pop
jl
fstpt
out
scas
xchg
push
xchg
add
cwtl
push
repz
hlt
dec
inc
mov
call
mov
adc
arpl
fstps
adc
add
add
clc
inc
sub
pop
out
shrl
pop
sbb
fldt
xchg
jbe
or
fsts
jecxz
cmpsl
stos
push
dec
clc
leave
idivb
mov
push
xchg
mov
rcll
xor
cmp
arpl
icebp
sbb
mov
adc
lret
inc
push
xor
shll
sbb
loope
in
icebp
lock
sahf
xchg
jmp
xchg
movsl
ja
es
cmp
pop
push
lods
fildl
add
mov
pop
xchg
or
ja
jecxz
ljmp
pop
pop
testb
push
daa
adc
lds
xchg
xor
data16
push
sti
mov
pop
jl
fcmovnu
add
pop
adc
or
out
sbb
mov
jp
call
sbb
dec
mov
push
xor
inc
repnz
in
adc
inc
test
mov
xchg
lock
pop
mov
icebp
sbb
es
test
mov
call
jle
out
adc
sbb
mov
cmp
jge
cld
loopne
aam
dec
out
dec
in
test
iret
rol
clc
pushf
cld
rcl
sbb
fbld
loop
xor
insl
int3
cmp
repnz
scas
mov
jbe
loopne
jnp
imul
out
pop
lcall
mov
enter
fistpl
stos
dec
repz
adc
adc
cmp
pop
bound
loopne
mov
sti
lock
and
shr
fnstsw
fsubr
inc
cmpsb
mov
mov
mov
je
xor
bound
pushf
xor
imul
push
ljmp
fcomi
sub
sub
and
xlat
lcall
shr
fisubl
pop
sbb
in
pop
int
mov
call
inc
fcmovb
push
mov
pop
inc
jp
movsl
stos
lahf
push
cmpsb
fcmovnb
xchg
outsl
daa
in
xchg
mov
add
lock
dec
pop
test
jae
insb
ret
mov
cwtl
sarb
test
add
not
push
push
call
fcmovne
ret
mov
imul
jg
fnstenv
cs
or
push
jo
ret
push
call
xlat
mov
and
mov
cmpsb
inc
xor
jns
fwait
iret
xchg
sub
loopne
cmpsl
inc
mov
xchg
add
add
xor
lahf
and
add
mov
jmp
sbb
or
mov
in
xor
or
aad
fdivp
fcomi
inc
imull
mov
xchg
mov
jno
hlt
ret
cs
andl
xchg
jno
mov
fisttpll
push
mov
pop
int
push
inc
push
cmp
or
push
jno
or
movsl
add
in
xor
inc
ljmp
xchg
cmp
or
ja
fistpl
cwtl
mov
fbstp
dec
imul
mov
mov
movsb
fldt
jo
push
fwait
jae
push
pushf
sbb
jno
hlt
add
pop
shlb
xchg
fistpl
les
ja
mov
fisttpl
js
mov
rclb
popa
orb
lods
loopne
pushf
or
inc
jns
out
cmp
xor
stos
dec
adc
jl
icebp
data16
loope
mov
mov
pop
xchg
pop
ss
adc
inc
mov
mov
stc
push
jo
test
mov
lret
fistl
push
mov
sub
fidivrl
nop
scas
and
fisubrl
cmp
ljmp
sbb
mov
pop
jg
or
nop
test
pusha
insl
adc
jg
shlb
xor
dec
scas
imul
fstpt
pop
push
movsl
adc
mov
loope
mov
xor
pop
sub
cwtl
sti
ljmp
push
popa
pop
and
call
sbb
sub
shl
imul
sbb
fisttps
push
push
push
ret
cmp
es
xchg
pop
mov
fildl
or
loopne
xchg
mulb
jns
sub
xchg
and
mov
xchg
repz
dec
pushf
jne
pop
out
lea
cmpsb
cmp
adc
rcrl
xchg
iret
xchg
pop
nop
lods
sbb
cmp
ret
mov
mov
dec
pop
fldt
mov
and
mov
das
out
out
call
jle
xlat
mov
cmp
call
loop
outsb
sahf
push
sbb
sbb
dec
mov
in
or
dec
jae
sbb
out
dec
and
mov
jecxz
adc
paddsw
lock
fistl
add
stc
fst
sbb
jbe
sti
jns
bound
out
xor
int3
cltd
aad
jno
lods
lods
inc
std
sub
xor
in
into
arpl
inc
sbb
jo
or
inc
repz
xchg
cmpsb
test
mov
int
dec
sbb
mov
or
test
sbb
sub
push
fisttpl
jne
push
movsl
dec
div
sbb
adc
fdivrs
enter
lret
jge
mov
sahf
das
pop
fwait
mov
pop
sub
je
or
sbb
dec
sub
adc
mov
cmp
enter
clc
testb
mov
loop
jle
cmp
mov
adc
clc
loopne
xor
or
out
popf
loopne
mov
pop
xchg
fwait
fldt
stos
push
ds
outsb
enter
out
xchg
fucomi
rol
lock
cmpsl
sub
mov
or
pop
cmp
in
push
push
jbe
adc
mov
mov
and
adc
decb
mov
cmp
cs
jnp
stos
in
jl
add
call
mov
fucomi
test
mov
or
xlat
outsb
fistl
shll
lcall
clc
jb
mov
fildl
cmp
sbb
add
fimull
in
ss
fimuls
inc
xor
imul
das
loopne
sti
adc
push
rcll
in
rcr
ret
aam
dec
lahf
jecxz
fadd
fstpl
lea
stos
sub
gs
clc
outsl
out
jmp
andb
daa
nop
push
xchg
pop
mov
mov
rclb
adc
inc
das
jmp
sbb
sub
lods
xor
cmp
push
dec
out
dec
out
stos
ret
repz
adc
or
into
in
xor
add
add
out
ljmp
xchg
inc
pop
mov
shrb
dec
fistps
pushf
fidivl
lea
push
adc
fs
cwtl
es
je
sbb
dec
cwtl
cmp
jecxz
popa
fadd
push
aaa
sti
lcall
mov
out
fldcw
mov
and
xor
ficomps
lret
inc
test
in
loopne
push
cmp
lock
mov
inc
sub
pop
jo
jmp
dec
xor
adc
push
bound
sbb
loope
sti
adc
push
movsl
fcoml
and
and
inc
dec
ljmp
or
test
orb
dec
ja
jmp
std
mov
dec
adc
jns
mov
cmp
pop
adc
fldl
dec
cmpsl
loopne
arpl
loop
xchg
stos
out
out
rorb
push
xchg
cmp
mov
inc
mov
pop
xchg
cli
xor
imul
mov
in
adc
repnz
call
and
inc
cld
add
jge
xchg
pop
inc
adc
adc
push
es
test
imul
mov
add
mov
loopne
icebp
ficoml
ljmp
xor
mov
nop
push
mov
push
out
pusha
and
scas
lods
and
fsubrl
insb
shrl
lock
push
rcl
mov
fisubrl
fs
jp
loope
loopne
subb
stos
and
adc
or
xor
in
repnz
jb
xchg
stos
jg
aaa
imul
imul
push
sahf
lock
scas
lds
jbe
xlat
lea
add
and
dec
lcall
inc
out
imul
fwait
shll
pop
or
inc
and
aas
mov
push
fwait
in
pop
sbb
dec
sti
fdivr
lods
pop
add
scas
rol
and
test
int
inc
pop
jmp
imull
push
inc
mov
adc
lods
xchg
rcrl
cmc
fistps
mov
pushf
pop
sbb
into
and
cmp
in
sti
out
jg
pop
xchg
jno
lds
cmp
xchg
mov
test
pop
adc
dec
arpl
insl
or
shlb
xchg
stos
mov
xchg
sbb
stc
lods
xchg
dec
imul
lret
lcall
mov
mov
xchg
cmp
lcall
mov
push
mov
fnsave
movsb
push
loopne
xor
jmp
push
lods
inc
repnz
int3
mov
sbb
ds
das
jg
and
adcb
ret
pop
data16
ds
mov
sbb
call
adc
fisttpl
lcall
jb
fwait
pop
aas
dec
sub
sbb
hlt
xor
fwait
jmp
sbb
adc
orb
idivl
pushf
adc
fidivrl
notb
out
pop
outsl
sub
cmp
stc
dec
jl
cmp
adc
test
les
push
mov
dec
pop
fsubrs
stos
pushf
in
test
lods
movsl
jle
ja
lret
popf
and
out
fsubp
or
xor
and
inc
out
and
xchg
idivb
or
fnstsw
adc
jne
fistpl
lods
xor
test
or
ret
xor
addr16
scas
aaa
or
lods
or
lcall
pop
jae
fistpll
and
sbb
pop
mov
fneni(8087
adc
jne
xchg
push
in
lds
stos
stos
popa
push
outsb
mov
sub
in
stos
rcrl
or
pop
sbb
pop
sbb
mov
mov
in
call
push
dec
fiaddl
sub
repz
jb
data16
push
adc
sbb
dec
insb
cmp
push
adc
scas
cltd
pop
mov
pop
jno
out
jg
inc
mov
loope
push
mov
ret
ljmp
les
int3
fnop
jl
fiaddl
pop
push
add
cmp
arpl
scas
mulb
mov
jmp
lret
stos
loop
inc
fadds
pusha
bound
pop
movsb
cli
jb
xor
add
mov
xchg
jmp
pop
pop
loopne
sub
sbb
movsl
lods
jne
stc
scas
lcall
test
jl
cmp
fistpll
test
push
push
icebp
mov
stos
addr16
and
test
jp
add
dec
cltd
sbb
jbe
idivl
and
pop
xorl
outsl
xor
sti
cmpsl
fsubrp
outsl
dec
pushf
and
bound
jno
or
xlat
in
jne,pt
shrb
jecxz
stos
xorb
shr
xchg
icebp
jbe
clc
cmp
jecxz
out
hlt
xor
lds
push
jle
mov
add
mov
repz
mov
dec
inc
cli
cmp
xchg
orb
ja
pop
sub
cmp
sub
test
cmp
sti
fistps
jg
je
xchg
dec
in
popa
dec
cmc
outsb
lret
push
das
or
leave
mov
sbb
or
or
jp
hlt
dec
in
dec
stos
inc
xorb
lock
pop
pop
or
mov
xor
in
lea
jecxz
sbb
test
stos
cmpsb
test
dec
call
clc
fisubl
lock
push
push
sti
xor
push
add
jb
out
or
adc
test
lock
and
xchg
lret
pop
repnz
jns
out
xor
rcrl
add
or
outsb
and
jnp
and
adc
and
adcb
jmp
pop
jecxz
iret
mov
sub
mov
adc
lock
mov
sbb
push
lahf
xchg
lods
push
fsubrl
sub
fdivr
stc
std
test
or
out
imul
pop
xor
je
mov
daa
cmpb
out
rolb
cld
mov
push
mov
in
mov
mov
ljmp
loope
roll
sub
loopne
push
int
pop
stos
mov
push
push
addr16
or
fnstenv
adc
push
in
dec
push
cmp
sti
jo
cwtl
cmc
fists
out
jo
mov
jmp
cwtl
push
jle
sbb
pusha
rcll
mov
lods
sub
jle
mov
ret
jbe
pop
out
dec
sub
cmp
fisubrl
cmpsb
lret
mov
cmc
std
or
xor
adc
outsb
cmp
call
sbb
jge
mov
push
nop
and
push
pop
sub
cs
inc
in
insl
adc
popf
icebp
lcall
out
dec
lahf
push
add
jge
mov
cli
rcrb
xor
psrlw
mov
aaa
inc
test
xor
inc
mov
mov
inc
fdivrl
dec
lods
pop
out
xchg
mov
jp
movsl
inc
lcall
stos
repnz
cmp
add
sarl
les
jnp
in
lahf
xchg
mov
xchg
pop
insl
in
and
fiaddl
add
fistps
popa
fimuls
or
out
js
inc
pop
xchg
mov
scas
lcall
cmc
add
popa
hlt
push
stos
ret
fcomp
mov
lds
repnz
dec
cltd
pusha
jb
adc
dec
je
lahf
and
fldt
sub
inc
ja
inc
adc
sub
cmp
es
pop
push
push
clc
pop
jp
jg
repnz
sbb
mov
add
dec
testl
repz
jecxz
sahf
fmull
inc
sbb
cltd
pop
pop
test
push
jp
xchg
into
inc
pop
ficoml
stos
jnp
add
jmp
push
lods
xor
out
or
dec
pop
aas
pop
jecxz
fwait
xor
pop
xlat
add
out
ljmp
lcall
fbstp
xor
lcall
movsl
sub
pop
sbbb
xorl
dec
add
sbb
fbld
loopne
xchg
mov
fwait
push
jg
lods
js
xor
mov
outsb
gs
push
mov
mov
dec
push
int
stos
int
add
xchg
sbb
scas
in
mov
push
imul
fcomip
sub
pop
mov
sar
and
inc
push
mov
sub
movsl
sahf
mov
mov
jmp
sub
inc
push
cli
repnz
lock
addb
lods
add
mov
dec
add
cmp
dec
addl
xor
nop
dec
rolb
ss
cld
add
repz
ss
ret
addb
sub
mov
cmp
imulb
lret
shl
adc
mov
mov
andb
inc
fidivrl
adc
fisttps
cmpsb
in
loop
push
sti
pop
stos
call
lds
xor
sahf
ss
or
sub
jl
out
lods
hlt
lods
aam
xlat
pop
adc
stos
mov
add
adc
and
pop
xor
stos
jp
in
int3
aas
scas
sub
mov
mov
clc
loope
js
lcall
in
xchg
outsl
decb
pushf
pop
adcl
lods
insb
call
push
leave
pop
in
int3
and
icebp
add
sahf
lcall
push
aas
push
icebp
push
hlt
xchg
leave
into
mov
stos
pop
sti
cmp
addr16
mov
or
jle
push
jbe
adc
icebp
std
sbb
push
jle
inc
lret
idivb
sbb
jl
or
icebp
push
xchg
sub
cld
cld
gs
mov
add
bound
dec
lds
jae
push
dec
sub
call
sub
gs
pop
je
push
pushf
xor
lock
xchg
mov
mov
push
les
dec
cmp
gs
repz
mov
out
fldt
jns
jae
xchg
inc
iret
stos
xor
addr16
pop
xor
add
and
test
lcall
or
sbb
leave
xchg
xor
xor
jg
inc
cld
pop
xchg
or
xor
stos
icebp
jmp
push
sbb
and
leave
movsb
negb
mov
lods
scas
inc
mov
subb
jg
cwtl
sub
in
in
stos
mov
fldcw
ljmp
or
xchg
jo
adc
push
lods
in
and
fnstcw
or
test
mov
aas
insl
iret
adc
add
push
loop
add
add
push
stos
into
sbb
call
dec
outsl
shrb
aam
lea
xor
mov
addr16
or
jnp
in
xchg
pop
push
adc
arpl
cltd
inc
xor
loopne
das
stos
sub
cld
fldt
sbbb
test
div
pop
rcll
xchg
fcmovne
inc
fcmove
jae
daa
fistl
js
in
mov
popa
repnz
mov
fcmovnb
gs
outsb
add
adc
js
inc
xor
push
cmp
push
jl
mov
dec
fistpl
inc
enter
lret
fldt
hlt
push
sti
in
ror
rorb
adc
daa
testb
loopne
inc
fldt
test
adcb
add
push
xchg
ret
jmp
loope
vsqrtss
out
mov
dec
lret
sti
lret
mov
imul
fildl
inc
decb
scas
and
mov
iret
test
sbb
fucomi
mov
loopne
lock
jnp
sub
and
mov
mov
mov
fisttpl
add
loop
adc
rclb
xchg
test
lcall
xor
inc
clc
sbb
dec
jns
pop
arpl
dec
pop
fstpt
inc
in
fadd
cmp
push
or
or
test
mov
xchg
fnsave
dec
xchg
ret
popf
stos
mov
loope
pop
dec
sub
mov
or
cltd
cmp
je
xchg
cmp
pop
sbb
js
neg
lods
jle
pop
sbb
adcl
movsb
arpl
mov
faddl
jne
dec
icebp
or
fidivl
cli
fsts
push
jae
hlt
stc
movsb
fbstp
test
pop
mov
fistl
in
xor
rcrl
movsl
loopne
sbb
xor
cmp
fnstcw
sbb
incb
lret
repnz
mov
pop
inc
loopne
daa
jns
pop
je
or
es
aas
or
or
mov
cmp
jne
cwtl
inc
mov
ss
addr16
fnstsw
sti
lcall
das
or
cmp
cmc
inc
adc
iret
lock
in
aaa
fstpl
in
mov
mov
cmpsl
mov
lock
loope
adc
loopne
adc
inc
shll
pop
pop
sub
jns
nop
xor
ret
vcmpsd
push
lret
mov
repnz
cld
add
les
push
jl
fisubl
pop
ljmp
in
cltd
in
sub
loope
pop
or
xlat
shrl
addr16
stos
faddl
push
imul
lret
xlat
inc
adc
xchg
int3
sti
fistl
inc
roll
push
movsl
lahf
roll
mov
orl
mov
clc
popf
inc
xorb
fucomi
mov
stos
addr16
jg
mov
shrb
cmp
shr
cmc
shlb
inc
fisttpl
leavew
in
adc
clc
idivb
push
pop
jns
mov
enter
jne
fistl
xchg
jae
fxsave
movsb
das
mov
call
mov
xchg
inc
fildl
mov
fbld
push
sub
shr
incb
ds
fcomip
dec
cmp
jp
xor
int
dec
loope
stos
add
pop
xchg
into
inc
pop
mov
and
inc
mov
push
jecxz
sbbb
adc
bound
fcoms
in
xor
adc
cmp
jmp
adc
dec
sti
in
loope
jnp
or
cmc
dec
out
and
mov
and
pop
dec
mov
in
insl
pop
jl
jl
loop
test
pop
rcll
or
in
cmpsl
push
enter
int
lods
je
xor
jne
ss
sub
pop
imul
push
lods
ret
stc
ficompl
xchg
les
jl
xchg
mov
call
dec
pusha
add
sub
and
lea
ljmp
push
cs
mov
push
xor
pop
mov
inc
xchg
inc
ret
push
test
push
pop
pop
mov
clc
jb
push
push
pop
fstp
inc
add
push
icebp
fsubrl
sub
mov
sti
out
out
lret
cwtl
pop
jecxz
add
lds
mov
lahf
stos
ds
in
sub
das
sahf
xchg
shl
inc
lds
xorl
push
mov
lods
leave
adc
xor
push
or
mov
or
lret
jb
push
roll
pusha
mov
pushf
enter
lret
inc
int3
pop
inc
repnz
mov
daa
sub
stos
jg
sahf
xor
mov
jecxz
mov
mov
enter
or
jmp
testb
int3
xor
sbb
shlb
pop
pop
sub
add
xchg
lods
mov
add
dec
xor
int3
xor
push
mov
negl
add
cmpl
and
mov
and
bound
cmc
or
clc
aaa
js
cld
push
jnp
add
fistl
ja
mov
test
ret
xchg
sbb
popa
clc
pop
cmp
pop
dec
jp
and
adc
add
and
divl
fcmovne
cld
jns
pop
xor
fstl
mov
mov
repnz
divb
or
mov
repz
jnp
mov
je
in
fwait
in
subb
xlat
fidivrl
jmp
inc
fs
imul
mov
jge
adc
mov
cmpsb
mov
nop
clc
sbb
jo
sbb
cmp
mov
fwait
in
aam
mov
loop
jbe
clc
sub
push
out
sub
in
cli
adcb
pop
jnp
cmpsl
int3
mov
dec
pop
cmp
es
push
mov
rcrb
xchg
out
jmp
adc
call
cmp
or
call
and
mov
in
xchg
outsb
sbb
xor
jns
repnz
sti
outsl
pop
dec
movsl
xchg
cmc
in
push
add
out
xchg
cmp
cmpsl
dec
xor
aas
jmp
mov
mov
mov
cmpsl
fisttpl
dec
mov
push
push
inc
fsub
iret
out
fmuls
jne
scas
cmp
addl
xor
aaa
lcall
clc
dec
aas
mov
outsl
mov
ficoml
mov
out
test
xor
lcall
ds
xorl
cli
push
mov
int3
fstpt
mov
or
fcoml
jp
lret
sahf
pusha
out
or
sbb
lahf
fidivrl
fcmovnbe
cwtl
pop
add
repz
ds
sbbl
aam
lods
fstpt
test
nop
fisttpl
xchg
dec
lds
push
neg
sbb
mov
fcomi
test
ret
mov
xor
shll
sbb
fistpl
fdivl
fisttpl
std
divl
inc
into
mov
mov
shll
jmp
imul
mov
dec
scas
fcmovnb
vpcmpgtw
cltd
or
call
mov
sbb
xchg
int
icebp
in
sbb
int3
cmp
rcr
pusha
pop
push
mov
fstpt
inc
adc
fimull
pop
ss
pop
sbb
sub
mov
push
pand
in
flds
xchg
push
mov
pop
push
adc
push
clc
mov
push
fisttpl
fldt
call
into
sahf
add
clc
fsubs
fildl
pop
and
inc
adc
rorb
in
imulb
loopne
cmp
pop
lods
stos
ds
xchg
fldt
or
xlat
mov
mov
loope
scas
stos
xchg
mov
xor
hlt
cmp
mov
mov
jne
sub
jbe
inc
push
sub
das
test
cli
ds
loopne
mov
cmp
shrl
aas
fiaddl
sub
loopne
loop
je
mov
fildl
xor
pusha
es
add
fldt
data16
fcmovnbe
pop
lods
jmp
xchg
jns
sbb
xlat
fwait
dec
call
pop
js
push
fidivs
out
test
dec
push
xor
in
and
mov
icebp
mov
jnp
outsl
in
push
and
cmp
add
rcr
sbb
jae
adc
addr16
fcmovnb
jmp
inc
in
outsl
stos
rcr
rclb
and
mov
fstpt
push
mov
in
pop
lds
dec
xor
out
lret
mov
stos
sub
iret
fstpt
int
xchg
pop
shl
scas
mov
jp
aaa
ss
pop
or
or
xchg
cmp
out
in
into
lods
pop
push
repz
and
fcomp
xchg
jo
push
jns
fidivrl
fwait
daa
pushw
add
fcmovne
lock
jmp
test
popf
inc
je
dec
inc
rorb
lret
jp
pop
mov
jg
fucomi
mov
fnstenv
pop
mov
orb
pop
dec
sbb
mov
jnp
es
fildl
aas
dec
xor
fistpl
scas
clc
mov
aam
add
pushf
dec
mulb
jne
push
jae
mov
sbb
or
gs
pushf
sub
and
fcmovne
sub
loopne
fildl
push
mov
lock
mov
xchg
fucomi
les
test
adc
mov
in
fcomi
scas
mov
stos
inc
or
xor
adc
leave
fcmovnbe
jae
xchg
js
rcll
pop
mov
repz
sbb
loopne
mov
fdivl
lret
loopne
mov
test
fucomi
ja
inc
popa
mov
push
and
popf
fcmovnb
les
mov
fidivrs
mov
xor
push
sub
hlt
mulb
jb
inc
stc
dec
mov
in
sub
dec
notb
fstp
jno
nop
dec
clc
mov
cmc
test
sbb
mov
mov
mov
inc
pop
push
aas
fisubrl
pop
sbb
xchg
add
and
jmp
dec
or
call
repz
fisttps
es
in
and
incb
call
add
fcompl
popa
aaa
sub
fwait
pop
enter
scas
lods
cmc
into
jge
fidivrl
pop
push
fstpt
jmp
shl
jb
inc
aad
fldt
in
mov
push
pop
arpl
dec
pop
xor
das
mov
int3
dec
outsb
sbb
fildl
ja
sahf
jae
add
dec
jo
push
dec
in
fisttpl
add
fisttpll
std
outsl
or
movsl
xchg
mov
jmp
popf
push
out
les
dec
int
jmp
xor
movsl
pop
lret
int3
push
call
aas
fisttpl
add
clc
push
mov
subb
not
test
pop
ljmp
jo
testl
pop
sbb
push
inc
pop
mov
sbb
xor
cltd
es
pop
xor
jmp
sbb
inc
cmp
sub
daa
fistl
mov
ljmp
mov
icebp
pop
mov
pop
popa
or
and
int3
addr16
pop
fistl
ja
in
mov
in
sub
jne
int
or
mov
neg
iret
jmp
sar
adc
sbbl
fistpl
jne
jmp
in
fbld
sub
cmp
cmc
push
xor
data16
lret
fstl
in
fidivrl
push
pushl
mov
xor
ds
testb
loope
into
jns
or
fldt
imul
mov
jmp
add
cmpsl
xchg
fs
push
gs
fistpl
insl
jns
pop
or
mov
mov
push
loop
fwait
dec
cli
mov
xor
jle
xchg
push
inc
cld
les
loopne
out
rorl
cmp
or
pop
dec
lret
je
test
mov
push
pop
cmpsl
pop
rclb
aas
out
or
adc
mov
add
roll
je
shlb
repnz
iret
cmc
movsb
lds
fwait
stos
dec
out
push
dec
popf
lcall
stc
fsubp
ror
jl
fadd
mov
mov
outsb
lret
imul
push
pop
mulb
inc
roll
cmp
lods
in
rcl
ret
cmp
repnz
add
sti
stos
sub
daa
and
adc
jmp
test
mov
push
stos
ljmp
adc
fmul
adc
dec
xor
xchg
jne
pop
out
repnz
jae
and
xchg
add
xchg
decl
xor
fisubs
and
cmc
add
iret
sti
adc
sub
in
and
push
movsb
ljmp
or
add
jmp
xor
cmpsl
mov
add
das
addr16
and
jp
into
test
lcall
ficoml
imulb
push
rcr
pop
stos
in
jp
rorl
mov
rolb
push
sbbb
add
sub
and
call
notl
mov
das
fs
mov
insl
sub
sahf
repz
xlat
adc
repz
jae
stos
mov
testb
lods
rcr
push
imul
in
lods
mov
imul
dec
adc
pop
or
subb
lods
add
cmp
adc
cmpsb
fildll
call
mov
xchg
stos
loop
lods
xchg
or
repz
ss
je
inc
outsb
arpl
out
jmp
adc
fidivrl
xor
add
or
pop
stos
and
into
sahf
and
lods
insl
adc
out
jle
scas
call
mov
push
data16
dec
xchg
sahf
adc
test
loope
imul
rcl
mov
in
sub
outsb
shll
fdivr
fwait
jns
push
pop
sub
shr
addr16
cltd
cmp
imul
or
daa
es
jns
push
hlt
xchg
sbb
xchg
adc
sti
cwtl
insl
repz
in
stos
jne,pt
jno
lcall
pushf
cmp
dec
fldt
pop
xchg
decb
out
fldt
mov
ja
fistpl
mov
imulb
inc
ds
and
fcmovnb
out
or
jbe
fcoms
and
fisttpl
mov
push
les
lea
sub
adc
mov
sbb
daa
pushf
xor
mov
xchg
popf
lea
xchg
out
shr
in
cli
scas
arpl
add
mov
adc
sti
sahf
push
loopne
fildl
sbb
loop
and
es
xlat
fistl
ret
rcll
jle
jne
inc
xchg
jb
dec
pop
lds
pop
lods
loopne
mov
jmp
push
mov
jnp
mov
fimuls
bound
pop
mov
xchg
call
and
mov
imul
and
pusha
outsl
fcomi
sbb
test
mov
scas
lret
daa
jae
pop
sti
cmp
into
fwait
cmp
cmp
lods
pushf
fstpt
sbb
fstpt
movsl
mov
lret
push
inc
ret
and
imulb
mov
mov
inc
cmp
pop
pop
shrb
mov
push
hlt
or
pop
cs
mov
cmpsl
cld
jae
fstpt
outsl
push
rcrb
push
adc
mov
lretw
sub
orl
lcall
scas
lods
clc
es
sub
frstor
push
gs
pusha
mov
fstpt
mov
frstor
pop
jnp
call
adc
mov
fimuls
fwait
test
out
ss
add
mov
sub
add
fistl
jb
test
xorb
sti
sbb
out
in
test
jns
ret
xchg
jg
pop
xlat
fcmovnu
pop
add
in
aam
xor
jmp
bound
mov
mov
add
dec
ret
push
out
fsubrs
daa
loopne
or
push
and
movsl
inc
and
or
dec
xor
add
loopne
adcb
cmp
je
jb
xlat
lret
inc
stos
jns
shrb
outsl
sub
movsb
cmp
sub
das
jp
and
rcr
inc
push
and
pop
pop
cwtl
das
xor
cmp
imul
loope
push
test
pop
scas
sbb
mov
adc
pop
dec
xchg
jge
js
sub
mov
cmpsb
movb
and
xchg
or
adc
dec
sub
xor
cltd
jge
call
jecxz
sar
pop
call
lods
sbb
jmp
jo
jno
mov
sub
pushf
fistl
xor
fadds
inc
sti
mov
shlb
dec
shll
push
bound
in
pop
enter
fildl
adc
clc
rclb
scas
fidivl
mov
adcl
cmp
xlat
loope
cmp
push
loopne
stc
inc
andb
adc
cli
std
add
ljmp
rsqrtps
sub
stos
leave
sub
jmp
mul
mov
fisttpl
jbe
fildl
movb
or
shlb
leave
jno
jl
cmp
pop
sub
negb
xor
or
push
jp
call
jbe
int
hlt
fistpl
aad
sub
sbb
ljmp
imul
insl
jne
mov
mov
and
jl
rclb
lea
fcmovnb
cmp
int3
push
aaa
add
test
mov
loop
pusha
mov
fcmovu
out
mov
add
inc
inc
call
test
push
or
test
test
and
push
shll
jbe
fldt
xchg
xor
pop
dec
push
icebp
arpl
mov
xchg
xchg
mov
fistpl
imul
adc
xor
xchg
xchg
push
fistl
icebp
cmc
mov
enter
fs
pop
or
icebp
mov
mov
jbe
in
adc
sbb
shll
jmp
rolb
test
xchg
inc
sbb
push
fucomi
xlat
test
inc
pop
add
mov
sbb
adc
push
icebp
fcomi
out
sub
cld
insl
mov
popa
or
xchg
jg
inc
emms
add
pushf
adc
cld
test
xor
repz
pop
movsl
mov
push
clc
out
add
aad
push
lret
ja
jno
push
fucomp
inc
xchg
pushf
call
push
mov
adc
pop
stos
adc
fiaddl
mov
sarl
sub
and
scas
fisttpl
mov
xchg
movsb
ror
ret
loopne
dec
sub
mov
fs
mov
adc
add
ret
in
fistpl
repnz
test
adc
lcall
mov
fcmovnb
and
xchg
push
test
fimull
adcb
mov
gs
sahf
and
loopne
xorl
mov
arpl
in
push
je
jl
ss
and
test
sub
out
cmc
sbb
add
mov
fistl
lea
in
or
fistps
iret
or
push
cmpsb
inc
mov
filds
shrb
adc
decl
jp
sbb
les
jne
cmpsl
lret
out
fsubrs
xlat
rcrb
mov
rorb
inc
xchg
sahf
xor
jl
ja
add
fistpl
in
mov
and
fcmovnb
addb
inc
cmp
mov
jp
das
outsl
inc
ud0
sti
lahf
and
pop
inc
cmp
sbbb
fstpl
je
mov
xlat
push
stos
stos
cmpsb
call
xor
xchg
test
fcomi
or
adc
and
subb
aaa
test
fcompl
and
adc
fcomi
jmp
in
jl
adc
jg
cmp
das
call
sbb
mov
std
lret
in
sbb
repnz
xor
ja
pop
pop
rcr
pop
sahf
mov
in
repz
clc
ljmp
out
sbb
mov
mov
push
out
jmp
out
push
cmpsl
movsl
rcr
roll
roll
jo
cld
push
mov
mov
ficoml
scas
jmp
jle
sbb
outsb
sub
jecxz
ret
push
sahf
loope
dec
lea
shll
fs
cmp
or
adc
mov
out
mov
lahf
pushf
sarl
push
or
inc
jns
xchg
lock
imul
cmpsb
adc
or
or
mov
test
dec
and
in
lahf
into
or
adc
xor
jp
push
and
or
out
pop
fistpl
push
jb
notb
pand
and
imul
je
test
dec
dec
inc
xchg
mov
ret
sbb
fcmovnb
inc
lcall
repnz
adc
cmpb
or
cmp
rcr
or
mov
dec
in
fsubl
pop
fldcw
iret
fisttpll
add
repz
inc
mov
test
fldenv
sti
aaa
pop
loopne
hlt
sub
mov
xchg
mov
shlb
xor
fisubrs
loop
popa
jg
mov
sub
psllw
loop
add
sub
mov
in
fistl
leave
outsb
ficoml
jnp
repz
fmull
cld
cltd
xchg
sub
sar
loopne
out
lods
fsubl
lock
jae
fstps
aaa
lcall
cmp
not
xor
movsl
mov
lods
jno
int3
sbb
cltd
sub
push
push
shl
fistpl
test
fnstsw
xchg
inc
popa
push
sbb
into
ret
test
call
stc
fcmovbe
xor
ljmp
ficomps
push
into
push
fldt
cltd
xor
je
aas
add
mov
fisttpl
test
popf
lcall
adc
and
out
loope
dec
fisubrs
fisubrl
push
jb
jae
dec
cltd
stc
ret
fucomi
or
push
ret
loopne
inc
daa
popa
sub
fistpl
jle
mov
push
fistl
popa
dec
jecxz
mov
clc
insl
lcall
scas
mov
mov
push
push
dec
ficompl
xchg
xor
adc
shll
mov
cmp
outsl
lahf
bound
jno
push
sub
mov
lret
and
and
subb
test
ljmp
lds
xor
add
imul
stos
xor
push
icebp
push
movsb
jmp
repnz
cmp
xchg
jbe
out
in
push
bound
nop
xor
adc
jge
inc
imulb
mov
jle
icebp
in
adc
add
fisttpl
lahf
out
loop
aaa
mov
add
mov
push
mov
sub
push
lock
lcall
xchg
mov
lock
lods
in
sub
jo
stos
popf
cmp
cmpsb
addr16
lea
cmc
xor
xchg
xchg
pop
leave
sbb
mov
or
cmc
inc
lock
add
or
lods
lahf
adc
stos
out
push
je
or
mov
lods
push
stc
fsts
xor
xchg
stos
lods
outsb
bound
sbb
sahf
ret
cli
or
adc
arpl
out
stos
call
gs
iret
cmp
repnz
loop
jg
or
dec
fldt
push
pop
ljmp
xchg
adc
stos
shll
inc
jp
out
imul
inc
iret
or
lret
int
rcr
call
sbb
loop
cmc
xor
jp
xor
insb
mov
dec
jb
jo
adc
in
je
arpl
inc
jae
mov
jo
sbb
ja
in
dec
add
cmp
xchg
jae
stos
inc
add
jnp
push
sbb
or
mov
lods
fisubrl
les
mov
sbb
clc
or
cmc
notb
inc
sub
cmpsl
stos
add
sbb
in
lcall
dec
ds
dec
fadd
cmpsl
and
xor
pop
jp
loope
dec
sarl
sub
cmpsl
xlat
xchg
loopne
fucomip
mov
iret
fcomps
loopne
ss
into
jecxz
jmp
mov
add
aaa
inc
js
lds
or
fimuls
das
dec
lahf
dec
mov
sti
and
stos
inc
fldt
loopne
pop
xchg
push
cmp
mov
aas
push
fwait
in
enter
xchg
loopne
out
sub
and
es
cmpsb
in
jp
rcll
cwtl
rorb
jecxz
bound
sbb
xchg
shrl
out
fadd
adc
mov
cmp
imul
fistps
sub
mov
mov
out
xchg
sub
int
xlat
or
mov
or
into
add
dec
mov
mov
and
stos
test
sub
jbe
stos
sub
cmp
dec
in
add
stos
cmp
in
adc
and
add
hlt
lods
fdiv
jecxz
iret
or
scas
mov
inc
repz
punpckhdq
mov
shrl
stc
stos
cltd
jbe
and
add
pop
outsb
jbe
out
push
ljmp
xchg
sbb
or
cmc
fwait
jl
lret
imul
jl
mov
sbb
orb
fiaddl
add
dec
sahf
pop
addb
ret
scas
decb
sub
in
lods
pop
sahf
rclb
adc
hlt
cli
outsb
sbb
dec
add
mov
flds
cltd
mov
adc
jecxz
clc
push
out
dec
mov
fsubr
jp
mov
or
cld
andb
jo
push
lcall
aam
ret
int
jo
and
in
std
mov
jmp
mov
clc
outsl
sub
ret
mov
sahf
or
and
and
cmpb
out
push
jo
and
ljmp
dec
adc
arpl
sbb
push
nop
rorb
jbe
pop
or
stos
inc
arpl
cmp
ret
push
and
bound
scas
sub
into
sub
stos
fsub
cmp
xor
pop
stos
stos
adc
pop
mov
and
adc
add
jmp
ret
dec
es
push
pop
lcall
jl
dec
ficoml
jns
cli
fisubs
std
ret
or
push
push
lods
call
mov
push
out
jg
sub
sub
loop
stos
mov
pop
adc
push
mov
xor
mov
xor
adc
mov
sahf
in
lds
les
dec
ret
jle
xor
jno
aad
inc
inc
lahf
mov
add
dec
in
arpl
in
popf
jecxz
cmp
push
testb
mov
sub
push
lds
pop
rorb
scas
and
daa
dec
loop
fwait
dec
xor
xchg
sub
sti
add
ret
in
iret
aas
dec
xor
pop
cmp
fistps
test
std
scas
fistps
stos
imul
fidivl
pop
popa
in
clc
xchg
pop
xchg
les
and
clc
mov
aas
pop
popf
dec
mov
in
rorl
pop
call
mov
lret
dec
stos
icebp
outsl
in
or
mov
mov
call
arpl
test
and
cltd
dec
outsl
xchg
dec
ljmp
loop
mov
pop
rorb
push
mov
cmc
icebp
xor
xchg
xchg
lcall
pop
lret
inc
and
xchg
push
fcmovnu
std
xlat
inc
mov
inc
mov
loopne
sbb
sub
lock
mov
out
iret
dec
cmp
mov
adc
jg
sub
shrl
arpl
mov
add
es
mov
fstpt
jo
fistpl
leave
lahf
mov
mov
fildl
sub
fldt
stos
mov
xorl
cmp
push
pop
repnz
jle
lds
fcomi
cld
jne
mov
dec
pop
orl
mov
fcmovnbe
pop
fdivl
mov
mov
cmpsb
adc
jo
jecxz
push
lret
or
sbb
xor
clc
add
jmp
mov
adcl
fstpt
or
lret
call
mov
mov
sbb
pop
test
dec
dec
xor
mov
push
stos
ds
dec
call
sbbl
insl
sahf
cmp
arpl
xor
pop
js
es
fcmovne
cs
xchg
xlat
push
jp
sti
int3
adc
jbe
pop
dec
je
sub
fcmovnbe
lahf
jb
les
mov
icebp
in
inc
cmc
pusha
lret
dec
arpl
imul
adc
rcr
scas
ljmp
sub
ficomps
cltd
sub
xchg
outsb
out
pop
pushf
cmpsb
mov
adc
inc
cmp
pop
loop
mov
mov
xchg
dec
xor
addl
or
stc
cmp
fstpt
insb
mov
lods
fistpl
pushf
call
stc
lds
fisttpll
sti
repz
mov
mov
jp
cmp
addr16
ret
jge
ds
inc
fcmovnbe
in
hlt
xchg
ret
xor
lret
sub
mov
pop
mull
rcr
jle
push
jl
out
lret
jno
dec
cmp
inc
sbb
fisttpl
testb
cwtl
sbb
push
or
in
pop
idivl
add
fcomp
aad
cmc
addr16
fs
imul
loopne
push
jno
inc
mov
pop
inc
adc
sbb
and
push
mov
and
fbld
jae
loopne
and
jmp
push
loopne
movsb
lods
push
std
pop
cmp
mov
xlat
push
test
cwtl
mov
jb
pop
xchg
xor
fcmovnbe
loope
jl
xchg
imul
cmp
lods
sub
pop
jbe
push
add
sub
mov
pushf
or
sbb
cmp
adc
in
or
stos
int3
insb
jo
repnz
push
cmp
adc
mov
data16
or
push
lods
pop
aam
test
add
jne
jno
mov
leave
test
mov
subl
or
sbb
into
fisttpl
arpl
dec
jmp
in
les
sub
loop
jmp
dec
repnz
sar
scas
pop
fs
shrb
ret
xlat
xchg
sub
jge
adc
gs
fcomi
dec
cmc
jmp
fistpl
xor
cltd
mul
enter
mov
and
push
xorl
insb
inc
mov
sbb
mov
push
pop
paddw
popa
xor
sarl
das
mov
test
lea
adc
push
cmpsb
ret
out
mov
dec
push
jmp
fildl
add
xor
call
pop
pushf
jp
cmp
je
lret
jg
clc
mov
stos
or
push
mov
fildl
stos
orl
add
stos
movl
std
aam
inc
xlat
and
pusha
mov
pop
mov
push
clc
cmp
rorb
ret
xchg
idivb
push
fs
pop
push
add
cmp
loopne
repz
das
mov
cmp
fcmovne
mov
mov
jp
rcrb
aas
fstpt
xchg
es
imul
sbb
fistl
mov
stos
inc
int3
sbb
lret
sbb
ret
repnz
fcmovb
push
mov
fildl
stos
sub
xor
into
jnp
clc
fildl
xor
loope
sbb
or
divb
in
inc
fldt
mov
iret
hlt
aam
stc
int
int3
fistpl
mov
outsb
dec
xor
fisttpl
mov
push
jns
test
repnz
cmc
lcall
mov
loope
xchg
fldt
test
push
fistl
andl
loope
lods
pop
cmp
out
xchg
int3
fisubrs
fildl
loopne
rcr
jge
sbb
aam
xor
push
inc
fiaddl
shrb
inc
out
pushf
mov
loopne
dec
int3
xchg
lods
fistl
sub
fisttps
push
add
dec
mov
je
les
lret
xor
fiaddl
push
out
xchg
pop
sahf
lock
dec
xor
fisubrl
or
aas
mov
call
jb
fstpt
fldcw
pop
lods
push
dec
mov
cmp
jbe
jne
loope
fwait
ret
push
insb
mov
xchg
es
stos
pop
nop
mov
and
daa
mov
lahf
mov
test
fcomip
push
mov
inc
ss
or
sub
xor
or
clc
xlat
loop
mov
mov
fistl
mov
push
iret
scas
fldt
loopne
dec
cmp
testb
mov
add
je
sahf
jp
jnp
jo
cmp
dec
fmull
jmp
aad
aaa
neg
clc
lods
xor
mov
jecxz
or
mov
aad
push
mov
fidivrl
lods
adc
and
mov
rorb
scas
inc
jg
frstpm(287
cwtl
js
xor
pop
cmp
lcall
mov
hlt
mov
cmp
dec
ljmp
inc
jmp
pop
push
xchg
add
or
out
fcoml
add
into
mov
arpl
fstpt
int
insl
rorb
fnsave
sbb
inc
into
arpl
push
fcmovne
mov
cmp
call
loopne
sti
cwtl
inc
add
gs
in
idivl
neg
xchg
cltd
pushf
xor
scas
call
rcr
mov
movb
iret
fiadds
mov
stos
mov
cmp
das
imull
mov
inc
lods
xchg
fstpt
xchg
lods
or
mov
jg
fimull
fwait
and
pop
popa
push
lcall
pusha
fnstsw
sub
imul
fisttpl
jg
pushf
dec
cwtl
andl
clc
fwait
iret
into
jmp
pushl
fnstsw
adc
out
lea
pop
es
lcall
mov
push
and
fcmovnu
adc
fcomip
inc
lock
sbb
aaa
stos
test
fucomi
sub
and
or
xor
jle
arpl
mov
mov
out
pop
jg
dec
fwait
ret
mov
xor
sti
call
arpl
xchg
mov
rclb
shlb
sub
lock
sbb
clc
hlt
in
xchg
pop
and
mov
pop
int3
pop
xchg
scas
mov
mov
aas
rcrb
aad
mov
sahf
push
cmp
lods
and
mov
push
insl
jnp
aad
cli
ja
inc
fstpt
pop
cmp
cmp
and
lods
inc
fsub
imul
nop
push
adc
ficoml
and
jmp
std
fisubrs
je
fldt
xor
int
scas
mov
dec
fcmovne
sbb
xchg
push
repz
jge
lcall
pop
jp
arpl
adc
roll
fistl
or
pop
fcmovu
scas
xchg
push
xor
pop
cltd
mov
mov
clc
fs
out
push
cmpsl
out
ret
es
and
int
arpl
pop
bound
fistpl
mov
adc
fldt
not
mov
ds
pop
pop
xor
popl
fdivrl
and
daa
fisttpl
aas
imul
xor
add
fists
sar
scas
mov
push
lods
ja
in
lret
fstp
xchg
int3
pop
in
xor
mov
jmp
stos
xlat
inc
call
les
fildl
adc
into
iret
dec
push
and
insl
scas
jnp
es
mov
mov
xchg
jle
popa
arpl
lret
xchg
mov
enter
jae
inc
mov
test
ret
ret
mov
jl
add
in
stos
xor
xor
neg
pop
push
ljmp
ror
pop
bnd
stos
mov
jnp
stos
scas
cmp
mov
out
cmp
pusha
fildl
mov
sub
mov
dec
sbb
aam
aad
add
jnp
test
in
imul
sbb
xchg
icebp
inc
ret
sti
stc
ljmp
ret
leave
jecxz
mov
lea
std
xor
lret
jns
cmp
fldpi
fmul
add
xchg
cld
push
pusha
and
popa
add
fdivrl
lods
mov
or
loop
jb
xchg
lcall
or
lahf
sub
ljmp
xlat
mov
sbb
cmp
xchg
or
adc
aas
sub
dec
arpl
jmp
popf
sbb
push
fs
and
mov
sub
js
pop
push
lcall
fbstp
insb
mov
dec
mov
fidivrl
jo
dec
outsl
jg
jbe
mov
sahf
xchg
insb
dec
fldt
mov
fcmovne
mulb
sbb
fidivl
insb
xlat
rclb
cli
add
sub
aaa
lret
lods
adc
jecxz
ret
mov
cli
ss
xchg
xorl
repz
sbb
add
and
movsl
test
cmpsl
xchg
add
test
sub
icebp
insl
loopne
inc
rcl
jecxz
sub
sbb
fwait
xor
mov
int
sbb
fisttpl
xchg
xchg
fcmovnbe
inc
mov
sbb
fidivrl
push
or
fistl
out
pop
fs
lods
in
dec
dec
push
data16
mov
cmp
loopne
push
pop
fsub
sbb
cmp
sarb
out
das
sbb
adc
mov
cwtl
sub
cli
and
ds
push
test
repnz
adc
ret
cmp
in
ss
jg
sub
adc
xlat
mov
fninit
add
mov
daa
loopne
stc
aam
ficomps
cmp
int
lcall
out
cmp
lods
mov
jp
fimuls
lret
xchg
out
loopne
add
stos
and
nop
rorb
pop
push
orl
sar
push
gs
add
test
mov
inc
jge
ror
and
mov
push
xor
sbb
dec
mov
into
xchg
mov
and
xor
jne
repz
adc
sub
lea
push
cmp
mov
mov
adc
mov
imul
hlt
fisttpl
sahf
and
jmp
leave
fiaddl
insb
add
add
enter
jno
sarl
lea
repnz
pop
movl
stc
test
lds
or
jns
add
and
outsb
pusha
add
loopne
pop
mov
fisttpl
inc
nop
lods
jmp
pushf
jnp
mov
jne
mov
cli
stos
fsubrs
sbb
dec
test
jbe
sbbl
or
js
dec
cmp
mov
cmpsb
ret
mov
mov
mov
add
xor
xorb
std
shlb
sub
clc
test
movsb
sbb
pop
cld
xor
fists
popa
shrl
rcrl
push
mov
add
enter
sbb
aam
pop
sbb
dec
xor
and
fcomi
sub
lret
mov
jge
mov
test
int
std
iret
and
mov
scas
pop
jne
aas
repz
loope
in
lret
jle
sub
hlt
call
cmp
pop
out
mov
fnstsw
xchg
push
stos
ljmp
cmp
lods
outsl
popf
fldt
xlat
mov
fistpl
cmc
clc
mov
ljmp
jbe
cs
fisttpl
xlat
adc
fstpt
sub
repz
xor
enter
daa
pop
in
loopne
push
les
pushf
add
or
xchg
mov
inc
jle
adc
ret
jecxz
inc
out
fstpt
pop
xor
scas
sbb
fildl
cwtl
or
outsb
cmp
and
rcr
bound
in
mov
gs
push
fwait
jge
jl
mov
sbb
xor
and
subb
mov
pop
stos
inc
fistpl
aaa
dec
dec
cmp
xchg
inc
call
xchg
popa
dec
jmp
enter
mov
scas
div
adc
pop
test
ret
lds
jns
ljmp
mov
std
add
fisubl
inc
outsl
fcomi
pop
push
loopne
addr16
scas
pop
lcall
cmp
push
idivb
aad
stc
jg
shll
mov
mov
lock
jnp
inc
cwtl
stc
sub
push
loopne
shlb
mov
xchg
mov
pusha
lcall
sub
ret
pop
pushf
xchg
lret
xor
mov
dec
push
fisttpl
dec
add
mov
and
fwait
or
movb
stc
jp
fbld
loop
xchg
ret
clc
mov
sbb
add
cmpsl
jns
pop
das
mov
cs
dec
pop
sbb
add
fidivl
mov
xchg
add
cld
mov
scas
push
dec
and
fildl
pop
rorl
cmpsb
adc
jp
adc
test
insl
push
std
notb
inc
pop
mov
cmp
xchg
xchg
push
pop
int3
icebp
pop
jp
fstpt
outsl
or
add
jmp
iret
aad
pop
addb
scas
jecxz
shl
add
enter
outsl
adc
cmc
sbb
mov
push
fdivs
jnp
es
fidivl
adc
mov
sub
call
xor
and
fldl
inc
popa
fldcw
add
sub
ret
dec
jg
fistl
aad
xor
loopne
cmpsb
icebp
add
mov
push
dec
sbb
es
xor
fildl
push
cmpsl
mov
mov
push
jp
sbb
inc
lcall
fisttpl
lods
mov
sub
add
fildll
jle
addr16
sbbl
fnstcw
in
xchg
lret
out
mov
fldt
scas
lret
enter
and
xchg
movsl
mov
fildl
inc
mov
jne
sub
and
or
mov
sbb
neg
adc
in
pop
out
or
std
lods
sub
out
sub
call
mov
popa
in
pusha
xor
fcomi
add
cld
cwtl
loope
scas
sbb
mov
pop
pandn
dec
jecxz
jge
pusha
es
js
push
in
fidivl
mov
ret
sbb
imul
jb
sbb
lret
scas
popa
cli
fistl
sti
jl
and
mov
ja
stos
fucomi
mov
fbld
mov
pushf
xor
mov
and
ret
bound
fcomp
in
test
popf
lahf
rorl
jb
loope
pop
rol
stos
pop
repz
mov
das
ficoml
or
sbb
xchg
lahf
lock
push
adc
mov
divb
mov
lcall
push
ljmp
pop
pop
fcmovnb
mov
hlt
aaa
push
mov
sub
cmpsb
pop
imull
loop
add
sbb
push
cmpsb
rclb
frstor
cmpl
jp
imul
xchg
lcall
pop
mov
call
sahf
jp
jae
mov
je
add
and
lret
push
add
sbb
mov
xchg
fiaddl
cld
mov
mov
dec
fldt
fstpl
aas
shr
lret
loopne
xor
cmp
sub
pop
rol
fildl
inc
dec
sbb
push
fsubl
pop
clc
fcomi
fwait
out
mov
stc
mov
jb
addr16
cmp
inc
aad
sbbl
dec
pop
negb
inc
imul
pop
mov
fucom
xor
xchg
mov
loopne
cmpl
sbb
mov
push
fildl
mov
mov
rcr
lock
das
jle
fbstp
jne
pop
repnz
dec
xor
inc
dec
fidivl
fsubp
loopne
lds
adc
pop
mulb
and
orb
push
mov
fildl
mov
or
adcb
dec
rol
loopne
popa
add
or
pop
jns
xor
fucomi
gs
lods
or
and
xchg
fstpt
aad
lcall
and
arpl
out
lahf
xor
adc
jnp
xlat
jb
or
mov
int
push
mov
in
mov
popf
mov
insl
and
les
ljmp
mov
loope
sub
call
js
fstpt
xor
fwait
hlt
imul
je
inc
test
in
pop
out
loopne
xchg
out
sub
xor
mov
sti
rclb
fcmovnu
stc
into
xchg
cli
jnp
cmp
sub
sahf
jmp
in
jle
ljmp
idivb
pop
fistpl
xchg
push
aaa
cmp
es
clc
sub
pop
mov
das
dec
fwait
xorb
lret
cmc
jle
jmp
sbb
sbb
dec
fdivrl
fld
add
push
in
adcb
fstpt
mov
mov
mov
mov
inc
subl
adc
jp
fmuls
xor
cmc
pop
lahf
popf
jno
sbb
push
mov
cmp
icebp
icebp
xor
gs
push
pavgw
push
mov
pop
std
adc
into
ret
outsl
mov
popa
add
cmc
in
cmpsl
pop
iret
stos
adc
dec
add
inc
pushf
and
aad
inc
jge
fndisi(8087
dec
ljmp
pop
ljmp
jns
cmp
or
ljmp
je
rorb
icebp
and
addl
fwait
mov
add
add
push
imul
mov
loopne
sti
andl
mov
std
cli
sub
inc
mov
or
jae
ljmp
or
lods
fadds
xor
sti
xor
jle
push
adc
es
adc
fisttpl
sahf
or
mov
outsb
cmc
stos
ret
dec
xchg
mov
mov
nop
or
jecxz
fisttps
scas
cltd
pop
mov
sti
clc
pop
popa
xchg
xorl
stos
sbb
nop
dec
pop
cmp
jg
aaa
cmc
out
daa
lcall
ljmp
icebp
lret
lock
inc
in
sub
cmp
decb
xchg
fildll
jo
mov
xchg
cmpsb
mov
and
sbb
dec
in
je
fstl
sarb
lods
js
pop
inc
xorb
daa
jecxz
shl
aas
push
push
loop
dec
jecxz
sti
jle
sbb
cmc
add
je
pop
xchg
sbb
and
add
cmp
jnp
out
push
das
pop
sbb
or
cmp
repnz
lods
in
stos
ja
jo
fisubrs
jns
sti
inc
or
or
inc
mov
adc
push
add
in
adc
popa
stos
pop
imul
imul
jo
arpl
jecxz
into
jb
stc
sub
or
push
sarl
adc
cmp
in
push
pop
cs
add
mov
adc
nop
bound
xchg
hlt
addr16
inc
mov
loope
push
xchg
mov
cltd
lods
fcmovu
push
mov
push
stos
jp
mov
or
pop
enter
sti
cli
xor
shlb
lods
lods
cmp
sbb
xor
push
or
dec
setne
jo
inc
callw
add
or
cmp
subb
out
nop
mov
jnp
fistps
jns
xchg
pop
or
sbb
xchg
pop
lcall
or
inc
es
dec
mov
fdivrl
jp
sbbl
fwait
shlb
lods
push
sbb
iret
sub
dec
sbb
or
add
enter
pop
xchg
xchg
addb
or
lea
mov
insb
jo
stos
push
subb
inc
imul
lds
dec
or
cmp
or
sbb
dec
cli
std
or
mov
xchg
and
jmp
push
insl
fwait
outsl
jbe
dec
push
sti
jmp
fcomi
arpl
sbb
fidivrs
loopne
jae
pop
notl
mov
popa
cmp
jno
push
dec
mov
push
stc
cltd
into
ss
sbb
hlt
fstpt
call
gs
push
std
dec
mov
push
jp
fcmove
push
fldt
sub
sub
pop
test
scas
lock
push
fildl
push
negl
in
ffree
gs
lcall
push
lret
mov
in
popa
hlt
mov
fisttpl
cmp
dec
fcmovnb
cwtl
rclb
imul
add
addr16
cmp
dec
in
xor
into
sbb
sbb
ffree
sbb
jmp
test
fucomip
cld
dec
fsubl
sub
push
pop
popa
sub
sub
scas
fsubs
and
xchg
clc
inc
xorl
sti
fadd
mov
addps
xchg
lods
pop
insl
mov
sbb
and
mov
ja
jge
test
popf
push
js
int
enter
stos
sub
call
fnclex
xor
sbb
ret
cmp
pop
xchg
ror
in
mov
dec
les
and
out
fcmovnb
sub
or
loope
fstpt
shlb
loopne
push
sub
xchg
dec
lret
or
jge
jo
jg
dec
sti
outsl
lret
fldt
call
stos
mov
pop
cmp
es
fldt
mov
rcr
in
mov
sub
xor
cli
adc
xor
lods
pop
rcr
insb
in
out
xchg
mov
add
sbb
rcr
push
push
fcoml
stos
jns
cmc
out
push
xchg
fs
sbb
or
pop
mov
sub
pusha
sti
adc
out
add
dec
mov
sbb
inc
mov
mov
xchg
mov
push
inc
les
jmp
mov
and
jbe
push
xlat
shl
push
sbb
int
mov
rcr
adc
jg
out
and
lret
pushf
sbbb
fisttpl
fidivl
mov
xor
jnp
push
call
xor
scas
std
cmp
loopne
jmp
dec
sbb
lcall
clc
lret
cltd
cmp
dec
rolb
xchg
je
stos
aam
mov
push
dec
inc
cmp
pop
loop
test
sahf
mov
mov
inc
dec
jnp
js
sbb
fistl
insl
enter
dec
dec
add
or
ret
push
sub
and
inc
adc
clc
cmc
xchg
push
loopne
fisttpll
shrb
push
jo
stc
xchg
test
add
sub
in
cld
ljmp
xchg
or
jb
mov
add
fsubrs
test
addl
cli
xchg
pusha
in
sbb
mov
rcrl
pop
push
mov
fistpl
mov
fistl
mov
mov
push
dec
aad
jecxz
add
imull
xchg
rcrb
mov
inc
in
fimull
das
cmp
sub
push
inc
imul
into
out
sub
insl
push
stos
pop
cmp
fisttpl
mov
xchg
dec
xlat
push
lret
fistl
mov
in
cmp
fistl
inc
jl
mov
inc
orl
inc
jmp
sarb
mov
in
push
dec
push
cmpsl
fcoml
imul
shl
mov
ja
jl
lcall
das
push
iret
pop
fcmovne
jecxz
adc
add
ffree
dec
pop
xlat
lret
cmp
xchg
loope
lds
scas
xchg
imul
stc
in
and
sbb
xlat
cmp
ljmp
loope
push
add
or
jmp
xchg
lcall
out
ret
ds
mov
fisttpll
jae
pop
frstor
imul
jno
call
jns
repnz
in
mov
das
inc
popa
dec
inc
or
adc
jecxz
scas
imul
fcmovu
mov
sub
sub
cmp
arpl
jl
call
sbb
mov
fildl
or
fucomi
insl
outsb
jo
inc
adc
filds
leave
lcall
data16
lret
cmc
mov
pop
in
xchg
push
fucomi
nop
sbb
out
pop
inc
fildl
xchg
data16
ror
fisttps
lods
aad
ja
mov
loope
leave
cmp
call
or
cmp
ljmp
jo
jbe
xor
imul
sbb
je
sbb
add
cmpsl
dec
imul
xorl
fnsetpm(287
and
xchg
xchg
out
cmp
stos
cmpsb
mov
xchg
jns
jp
fs
push
cmc
mov
mov
decl
movsb
jb
sbb
out
mov
mov
ja
fimuls
mov
stc
movsl
std
inc
int
mov
adc
clc
jmp
ret
fldt
lods
addl
and
fsubp
js
add
mov
daa
or
inc
xor
and
cmp
jl
and
jge
xchg
fcmovnu
dec
dec
push
mov
inc
sub
mov
fucomi
adcl
ror
outsl
lds
outsb
jecxz
sub
test
das
mov
cmp
or
ret
mov
sub
or
cmp
push
imul
xchg
icebp
lahf
call
pop
sti
push
jne
inc
clc
std
jmp
jbe
push
loope
daa
outsl
lret
loop
sti
mov
push
cmp
fildl
lret
je
rcr
andl
ret
cli
fldt
jb
fldcw
data16
dec
fdivrl
mov
mov
test
scas
pushf
in
lret
or
clc
fisubl
mov
or
sbb
or
fsubrs
lcall
add
divl
fcmovnbe
push
sbbl
fcomps
dec
lahf
push
lret
push
ljmp
hlt
xchg
stos
mov
xchg
mov
ds
push
mov
fucom
aad
fcomip
les
imul
jns
push
xor
mov
fimull
inc
mov
jl
lds
mov
repnz
fldt
xchg
insb
pushf
popa
sub
fistl
das
mov
push
mov
mov
adc
movsl
fistl
mov
xchg
mov
std
inc
xchg
js
mov
fwait
mov
lret
data16
adc
decb
sti
testb
dec
ja
in
iret
mov
out
mov
int
jecxz
fisttpl
pop
jbe
test
ret
adc
leave
sahf
fimull
pop
xchg
adc
aas
jp
inc
enter
aad
pop
sti
xchg
cmpsb
adc
ficoml
sub
fisttpl
lcall
ret
cmpb
loop
nop
mov
xchg
xchg
fcmovnbe
xchg
add
sub
fcompl
mov
fstpt
scas
and
enter
sbb
lock
loopne
cwtl
mov
jb
lahf
fstpt
cmp
pop
into
jnp
push
shlb
sub
insl
xor
and
dec
pusha
subb
sub
ret
pop
daa
inc
fldt
push
cmpl
dec
push
cli
icebp
xor
add
scas
inc
cmp
sbb
inc
fists
cs
and
add
xor
and
xchg
int
cltd
popf
dec
jmp
or
lea
lahf
fisttpl
repz
jmp
lds
sbb
lret
or
movsb
insl
icebp
iret
rcr
pop
jno
xchg
aaa
fsubrl
xchg
call
lcall
inc
sbb
test
and
sub
fimull
xchg
fisttpll
jne
aam
repz
mov
icebp
ret
imul
xchg
jne
mov
and
mov
xor
mov
push
clc
ret
adc
inc
jmp
fildl
bound
cmp
push
decl
xor
cmp
jb
fsubr
sbb
in
outsl
loopne
dec
and
cmp
repz
mov
xor
mov
jp
lcall
in
fistl
into
lret
mov
pop
pop
fistpl
mov
mov
int
jno
jo
outsb
fistpl
adc
xor
xor
mov
add
aaa
test
jge
dec
cmp
mov
scas
adc
fldl
jp
sbb
cmpsl
scas
jmp
lahf
ljmp
and
cmpl
add
mull
mov
in
data16
loopne
js
push
mov
testb
pop
mov
adc
push
fcmovu
xchg
jae
ja
iret
jns
divb
fidivrl
xchg
or
fcomi
xchg
mov
in
push
mov
fidivl
mov
fldt
nop
push
push
fdivs
ficoml
int3
xchg
dec
and
mov
pop
into
addr16
or
hlt
imul
xchg
xor
xchg
imul
add
cs
xor
or
push
pop
jg
push
loop
int
aaa
fcoml
xor
mov
repnz
movsl
sub
add
dec
pop
fists
xor
fidivl
xchg
lods
dec
pop
ret
lcall
and
mov
or
adc
into
add
arpl
rorb
push
push
pop
jae
insb
mov
lods
sub
call
fwait
in
hlt
fisttpll
icebp
pop
test
pop
insl
adc
add
or
mov
flds
sbb
sbb
sbbb
loop
subb
cltd
fwait
mov
sub
add
sti
scas
andl
mov
stc
xor
stos
popf
and
jnp
lcall
jg
aad
mov
pop
push
adc
dec
inc
jmp
fiaddl
mov
xor
repz
jb
rcll
lahf
jmp
adc
jg
mov
sbb
cmp
flds
sub
xorl
test
xchg
lcall
in
subb
mov
jne
add
pop
dec
jge
mov
addb
pop
sbb
jmp
pop
inc
push
sti
nop
or
pop
fsubrs
jl
dec
mov
inc
mov
fsubrl
fcom
sbb
lods
dec
or
rol
cli
stos
bound
sub
lahf
addb
xor
in
test
sti
pop
aad
in
cmp
inc
loopne
cli
int3
into
cmp
lret
in
sbb
stos
or
pop
inc
fistps
adc
insl
addb
ret
out
mov
push
stos
or
aad
jnp
lret
outsb
and
push
mov
or
jae
dec
adcb
sbb
sub
popa
das
pop
popf
jge
ja
pop
mov
es
loop
mov
mov
std
leave
loopne
clc
jmp
push
cmp
inc
out
stos
pop
out
inc
or
in
fwait
and
sub
push
ljmp
cmp
nop
mov
cmpsl
dec
nop
inc
and
in
add
clc
and
fadd
cli
xchg
sub
lods
sub
add
clc
fs
pop
mov
and
loopne
lds
movsb
adc
clc
add
adc
jbe
lret
jg
cwtl
sarb
jmp
stos
test
xchg
xor
mov
mov
clc
stc
mov
aaa
lds
or
mov
icebp
jns
or
xor
test
push
push
pop
mov
in
adc
mov
in
sar
cs
in
imul
push
loope
xchg
xchg
daa
aam
scas
lahf
cmp
cs
adc
stos
pop
mov
loop
inc
stos
adc
and
pop
lcall
jl
rcr
xchg
or
push
rcrl
leave
lcall
stos
pusha
cltd
outsl
inc
ja
sub
add
daa
and
fists
je
fidivs
push
sub
js
push
dec
outsl
fwait
push
stc
cmc
inc
in
jns
jo
insb
test
lds
jp
inc
jne
sub
mov
ljmp
xor
pop
cmp
fistpl
dec
cmp
adc
fistpl
or
fildl
mov
lock
test
dec
dec
cmp
stc
pop
xor
adc
out
jecxz
and
dec
pop
add
fucompp
and
movsb
push
data16
scas
fisttpl
mov
jnp
pop
jl
sarb
sub
push
ljmp
lahf
cli
mov
subb
int3
fcmovnb
into
lea
dec
stc
rcrl
pop
ficomps
adc
xchg
aam
sub
fucomi
orl
or
fcmovne
shl
cli
jno
sub
sahf
push
lock
rcr
mov
sti
stos
sub
fnclex
icebp
mov
and
sub
fisttpl
add
jecxz
pop
adc
sbb
cmpsb
or
arpl
dec
das
sub
pop
les
and
mov
test
lcall
jmp
mov
push
push
mov
inc
fisttpll
push
shlb
cld
pushf
popa
repnz
repnz
fisttps
popf
aaa
cmc
fndisi(8087
push
or
mov
hlt
mov
lock
xor
or
or
add
lcall
ss
xchg
dec
mov
test
cwtl
imul
mov
push
fstpt
pop
dec
xchg
repnz
xlat
sti
imul
pop
push
cltd
xchg
loopne
fcmovnb
mov
popa
mov
push
cmp
fnsave
movsb
in
imul
test
jno
and
jg
push
lcall
fcmovnbe
xor
fcmovne
mov
and
mov
adc
mov
xchg
xchg
lret
aam
adc
dec
sbb
lods
mov
pop
or
dec
pop
push
fldt
jnp
imul
loop
outsl
scas
adc
jmp
jb
sbb
mov
or
jp
les
fisttpl
out
into
xor
rcll
pop
icebp
and
mov
and
jne
inc
jnp
mov
lods
popf
mov
fstpt
dec
pop
stos
clc
mov
loope
adc
push
fcmovnu
ljmp
or
shrb
lcall
pop
fidivl
test
add
enter
addr16
cmp
inc
pop
ficoms
stos
or
adc
inc
dec
fldt
cld
mov
neg
outsl
add
cmp
fldt
pusha
arpl
icebp
out
mov
jne
test
hlt
mov
nop
sub
je
or
and
enter
gs
jnp
in
xor
or
push
jp
scas
jne
sahf
inc
and
out
pop
pop
ss
stos
push
adc
clc
movsl
xchg
xor
call
repz
cmpsl
cwtl
sti
sbb
adc
lods
fldt
stc
aad
fistpl
outsl
sub
push
fisttpll
or
es
fistpl
shll
fcmovne
mov
mov
fcmovnu
and
fistl
repnz
loopne
dec
jnp
adc
lahf
push
out
fstpt
test
int
inc
xchg
adc
je
sbb
xchg
jecxz
fisttpl
fistl
sbb
inc
ss
enter
add
mov
jmp
imul
cmp
adc
ja
push
mov
std
push
pop
cmp
fiadds
pop
dec
cmp
xor
xchg
jle
push
adc
insl
push
ljmp
pop
mov
dec
push
popf
idivl
xchg
lcall
push
xor
repz
pop
push
mov
mov
hlt
push
fistl
sbb
out
das
iret
sub
mov
adc
test
jbe
insb
sbb
push
out
sbb
cmp
std
icebp
mov
sbb
fdivl
imul
sar
out
xchg
sbb
in
pusha
xchg
dec
jmp
jmp
outsl
scas
out
in
jp
add
xchg
lcall
fwait
cwtl
pop
loopne
xchg
mov
call
fstpt
hlt
inc
fistpl
stos
push
movsb
insl
sub
fwait
repnz
xor
cwtl
sub
jno
pusha
pop
sub
neg
mov
out
push
add
adc
pop
out
mov
lock
inc
inc
xor
push
cs
inc
dec
mov
pop
aaa
mov
orl
add
enter
dec
fstpl
push
out
jb
jne
sub
outsl
fisttpl
add
mov
aam
mov
fisttpl
pop
mov
test
dec
lcall
fstpt
rcrl
loopne
push
out
mov
fiadds
fcmovnu
stos
sbb
mov
add
aas
or
mov
xchg
sahf
sub
or
js
shrb
vpmulhw
in
cmp
mov
sub
inc
mov
imul
sbb
ficoml
mov
out
push
cmp
xor
test
fstl
or
ret
push
mov
shlb
loop
ja
cltd
fildl
fidivl
fisttpl
mov
loope
fs
fisttpl
sub
gs
and
xchg
mov
mov
add
movsb
out
ffreep
out
sbb
jno
in
cld
pop
in
push
and
xor
mov
test
dec
outsl
xchg
shll
lcall
int
arpl
pop
push
fidivrl
add
add
dec
fxch
xchg
sbb
cld
pop
mov
cmpsb
dec
xlat
dec
fcmovnbe
arpl
enter
fcmovnu
std
scas
not
fmull
or
pushf
jns
mov
pop
push
aam
fldt
arpl
add
sbb
mov
cmpb
dec
cs
push
add
cmp
fwait
enter
fnstenv
sub
orl
fistl
scas
fwait
neg
sti
xchg
clc
sub
jb
fcmovne
push
fdivs
mov
cltd
dec
xchg
and
jo
dec
adc
fistpl
dec
in
push
fldt
xor
lock
pop
inc
fnsave
mov
std
mov
addr16
les
iret
sbb
rcll
hlt
scas
xlat
scas
fimull
jns
fiaddl
lods
in
xchg
inc
testb
pop
jecxz
fiaddl
out
insl
push
push
add
clc
lds
or
mov
ret
jns
inc
mov
push
cli
adc
pop
cs
iret
mov
outsb
and
pop
push
inc
fistl
mov
pop
mov
lds
dec
fadd
mov
cmc
pop
cmp
xor
xor
push
xor
mov
fistl
add
leave
fucomi
jns
mov
jb
add
insl
lods
mov
out
fildl
pop
xor
in
cmpsb
and
cmp
mov
popa
xchg
ret
scas
aam
not
jl
pminub
fucomi
cmp
cmc
pop
sbb
add
lods
shrl
fnsave
cmpsl
mov
mov
sub
cli
cmpsb
xchg
xchg
outsl
test
mov
cmp
mov
sbb
sub
inc
clc
xchg
fwait
add
pop
es
loopne
fstpt
outsb
je
push
inc
dec
bound
in
jns
and
jl
fcompl
fldt
adc
lock
sbb
fildl
mov
addb
jb
jno
mov
or
fndisi(8087
and
mov
mov
stos
scas
clc
xor
les
rclb
loopne
int
ret
cmp
dec
add
fwait
icebp
add
lcall
pop
sub
neg
pop
or
xlat
fwait
lcall
ffree
jnp
push
fwait
cmp
lock
cwtl
xchg
pop
testb
cmp
iret
mov
lods
or
loopne
push
xchg
mov
movsl
mov
adc
jno
clc
ret
pop
add
mov
fstpt
jle
and
jl
cmp
jp
sbb
adc
and
sti
mov
pop
sub
insb
nop
fisubrl
les
fucomi
lretw
jge
sarb
fcmovne
cmc
dec
mov
xlat
repz
in
pusha
addr16
xchg
fistpl
les
movsb
loope
cs
pop
sbb
mov
sub
push
pop
cmp
jbe
mov
mul
rcl
aas
fistpl
or
lret
fistpl
mov
adc
pop
frstor
sets
popa
ret
cmp
cmp
fstpt
mov
xor
ret
shl
call
dec
xorb
fldt
add
outsl
frstor
mov
arpl
imul
sahf
push
pop
xchg
xor
lret
pop
cmpsb
lahf
mov
push
fistps
xchg
ret
sbb
pop
push
outsl
aam
stos
jle
test
push
jns
dec
cmpb
fiaddl
push
and
les
pop
or
aas
inc
jo
or
sub
mov
pop
dec
dec
and
out
lods
sti
push
cli
scas
daa
and
xlat
mov
add
adcl
mov
xchg
sub
aaa
cs
push
lahf
sbb
jae
mov
sbb
and
lret
pop
ret
mov
sub
outsb
xchg
sub
sbb
cs
sub
push
pop
cld
add
lods
in
mov
pop
stos
lret
xchg
scas
xor
mov
ret
dec
fucomip
jg
and
stos
pop
adc
fists
aas
jle
popl
stos
dec
inc
mov
fst
or
xchg
cmp
jge
xchg
mov
les
cmp
fstpt
outsl
aam
adc
sub
nop
stos
xor
jnp
mov
inc
push
out
mov
cmpsl
lds
ret
fiaddl
popa
bts
cmp
clc
sbb
and
lods
movsb
test
int3
push
in
or
fimull
jae
out
and
fs
and
mov
test
out
in
sub
pop
imul
inc
mov
cmp
ficomps
and
ljmp
cmc
ljmp
int
pop
in
sbb
addb
add
aas
lcall
lcall
lock
aam
pop
mov
rcrb
inc
fistps
cmp
adcl
dec
insb
in
loopne
les
pop
out
jbe
inc
sti
mov
lock
mov
aad
sbb
cwtl
stos
cmp
pushf
and
pusha
push
jae
push
adc
rcrb
jnp
icebp
leave
push
nop
addr16
sub
push
jle
add
stos
xchg
nop
push
call
aad
sub
push
adc
fsts
sub
scas
icebp
adc
push
stos
cwtl
stos
out
sti
push
inc
mov
and
mov
fmul
push
stos
mov
xchg
inc
bound
jp
pop
lods
in
test
xchg
in
test
mov
lcall
adc
jle
pop
mov
stos
cmp
lcall
ljmp
push
sti
adc
push
sub
fdivr
or
mov
add
jmp
cmp
aaa
sub
jl
cli
pop
add
add
push
fcmovnb
stos
sahf
mov
pop
insl
imul
cs
or
fcmovbe
and
lret
loop
xor
pop
out
sahf
jns
int
sub
in
outsb
insl
push
inc
fisubrs
jle
jbe
ja
int
adc
sbb
lahf
bndstx
jmp
pusha
pop
sti
orl
or
mov
in
loop
aad
mov
cmpsb
stos
mov
enter
pusha
cli
lods
push
push
jb
mov
jne
pusha
pop
pop
xchg
loopne
repnz
icebp
sahf
mov
or
cltd
push
mov
xor
lds
mov
or
stos
xchg
mov
xor
or
rcrb
inc
add
push
mov
jmp
stc
cli
aas
clc
mov
fcoms
movsl
lcall
decb
add
add
stos
sbb
push
stos
xchg
in
dec
addb
popf
lods
fisubs
lock
pop
mov
movsb
and
mov
pop
out
cmp
outsl
cmp
sbb
mov
or
adc
or
fldt
cmp
fcoml
daa
sub
das
mov
pop
aam
cmpsb
xor
ljmp
dec
lock
movsb
cmp
call
pop
adc
mov
xlat
frstor
jg
cmp
roll
mov
fldt
or
enter
roll
cmp
sub
push
leave
cmpsl
rcr
bound
fiadds
in
fistpl
imul
adc
sbb
ljmp
sub
fisttpl
fwait
mov
ret
sahf
rolb
fisttpl
inc
cmp
hlt
mov
pop
sub
ret
xchg
inc
jb,pn
pop
imul
insl
fildl
xor
fld
fstpt
mov
aad
shlb
aad
cmpsb
fwait
loopne
add
mov
jo
das
xchg
cmp
outsb
jno
enter
fisttpl
add
sbb
cmp
jo
mov
aam
out
push
adc
outsl
fcmovnbe
push
and
ss
fisubl
sbb
cltd
and
arpl
popa
adc
mov
cmpsl
push
sub
fistl
dec
repnz
mov
aas
fstpt
xchg
roll
cmpl
adc
xchg
imul
fwait
push
xchg
fwait
das
pop
push
loopne
repnz
sub
mov
test
inc
xor
mov
sbb
mov
or
adc
fcomip
jmp
aaa
int
push
je
leave
xchg
jp
adc
mov
test
push
dec
xor
mov
imul
sub
cmpsl
loop
mov
repnz
lahf
push
mov
or
pop
popf
adc
sti
cli
adc
enter
rcrb
mov
add
clc
repz
mov
sub
data16
je
popa
jae
or
fstpt
test
push
cmp
push
fcmovnb
xchg
inc
mov
jae
push
movsl
cmp
inc
arpl
xlat
mov
outsl
mov
dec
aam
push
dec
fbstp
dec
mov
sbb
push
mov
jp
neg
fwait
or
stos
add
jg
lods
mov
dec
dec
push
inc
cmp
stos
adc
test
fs
adc
sbb
fisttpl
fisttpl
sub
xchg
fcmovne
push
lret
mov
fistl
data16
popf
shr
or
fs
fcoml
dec
aaa
addr16
fisubrl
mov
ds
cs
ficompl
and
push
push
and
adc
aad
mov
xchg
jns
fstpt
cmp
mov
push
dec
mov
jecxz
mov
shrl
adc
neg
xlat
cmp
pop
test
pusha
jns
lret
push
les
scas
pop
fsubrs
push
test
fildl
add
dec
sub
lods
in
shrb
lret
cmp
and
loope
cmp
fwait
cmpsb
sbb
xchg
js
sub
int3
cmpl
sbb
push
sbb
das
fldt
and
sbb
dec
cld
fildl
sub
inc
dec
lcall
out
inc
fcomi
mov
cmpb
mov
loope
jecxz
pop
popa
rol
fcmovnbe
mov
les
add
loopne
das
fistl
aas
bound
outsl
stos
testl
mov
push
test
add
jmp
out
fldl
mov
fistpl
dec
xor
in
insl
fstpt
js
jne
jo
mov
add
mov
in
lds
mov
fldt
stos
out
loop
add
imul
outsb
add
and
xchg
push
sahf
inc
or
sub
xchg
sbb
sbb
cli
sub
imul
push
pushf
sub
inc
fistpl
shrl
and
fistpl
jle
in
cmpsl
das
idivb
sbb
sbb
sbb
pop
cmp
in
mov
in
gs
pop
test
dec
or
add
xchg
fldt
scas
jecxz
dec
mov
pop
inc
stos
adc
je
int
popa
movsb
clc
sbb
push
pop
fstpl
dec
fwait
out
xchg
imul
fstpt
test
sahf
nop
out
fildl
stos
add
je
push
clc
cwtl
jbe
mov
adc
mov
sbbl
jecxz
mov
mov
iret
or
jnp,pt
fisubs
std
and
lahf
stos
cmp
push
jae
mov
jge
xchg
outsl
jecxz
inc
or
cli
fisubs
adc
sbb
fstpt
jecxz
imul
popa
mov
fcoms
cmpsb
push
adc
inc
cmp
sbb
mov
dec
inc
mulb
xchg
das
call
fldt
daa
repnz
jp
sbb
lcall
scas
push
popf
iret
adc
pop
sub
int
scas
mov
repnz
xchg
and
jno
test
roll
ds
mov
mov
push
lahf
dec
adc
aam
push
scas
pop
or
lret
lahf
sbb
fs
lds
es
add
adc
mov
push
sahf
push
stc
mov
jmp
xlat
outsb
add
test
fcmovne
push
das
sub
loopne
roll
cmpb
cmpsl
pop
mov
fimuls
ret
outsb
dec
std
fnsave
dec
adc
popf
mov
push
jecxz
test
popa
outsl
fldt
lds
mov
mov
xchg
adc
test
ficomps
out
cltd
xchg
adc
inc
pushf
pop
jmp
icebp
xchg
inc
lods
mov
mov
pop
push
inc
and
rcr
lds
lret
xchg
daa
jle
adc
adc
std
fisubl
or
sbb
shrb
stos
xchg
fisttpl
popa
cwtl
xchg
mov
mov
and
add
adc
dec
pushf
imul
imul
fwait
in
test
push
sub
fwait
and
add
lret
idivl
xor
adc
mov
pusha
cmpsl
in
fstpl
mov
cmpsl
mov
repnz
int3
push
dec
adcb
fldt
ss
or
pusha
add
int3
es
das
cmp
pop
xchg
ficoml
fwait
daa
mov
scas
push
divb
lret
mov
js
stos
fstpt
lret
es
ret
adc
lods
fldt
jo
repnz
test
inc
out
sti
setg
fistl
mov
mov
pop
bound
popf
ret
fisttpl
lcall
repz
pop
out
shl
bswap
push
mov
es
adc
pusha
dec
inc
mov
pop
cmp
das
pop
adc
cltd
cld
mull
and
out
icebp
adc
pop
adc
mov
cmp
or
cmpsb
popa
test
jae
ja
or
fcmovnu
xor
fdivrl
js
les
cmp
pushf
out
push
cmp
xchg
pop
sub
fstpl
xchg
adc
les
sub
pop
push
fucomi
es
lea
push
nop
push
sub
fidivl
pop
jmp
mov
rcrb
outsb
sbb
or
sub
aaa
pop
aam
cmpl
sub
lock
mov
stos
icebp
out
test
mov
ss
shrb
icebp
mov
cmp
fstps
and
push
scas
xchg
pusha
repz
mov
mov
fistpl
xlat
push
mov
jmp
sti
fcomi
mov
inc
adc
repnz
iret
pop
fldt
in
repz
loope
dec
das
imul
loopne
mov
pop
push
sahf
sti
xchg
neg
xor
pop
test
repz
xor
fisttpl
fadds
fisttpl
mov
xchg
ret
fildl
mov
push
out
mov
xlat
mov
pop
xchg
pop
rcr
loopne
cwtl
inc
mov
outsl
fistl
sbb
pop
cmp
repz
lret
pop
scas
jl
adc
rcrb
xor
out
or
cmp
ljmp
cld
movsb
lock
mov
cmpsb
cli
mov
adcl
sbb
das
leave
imul
mov
jge
mov
cmp
pop
dec
fildl
jp
mov
lcall
pop
fadd
sbb
nop
inc
pop
cli
cmpsb
adcb
or
mov
aas
in
mov
jmp
push
pop
sbb
lahf
xor
xor
sub
jge
adc
mov
mov
push
int
ljmp
lods
movsl
scas
popa
faddl
or
aad
fstps
pushl
nop
repnz
and
call
sbb
stos
xchg
xchg
xchg
imul
push
stos
in
loope
in
mov
shlb
dec
xchg
sub
rcll
mov
and
nop
push
fmull
lds
sbb
inc
bound
in
fwait
mov
movsl
lret
cli
leave
dec
and
xchg
fcmovbe
leave
fcoml
xlat
icebp
int3
divb
fildl
add
cmp
stos
notl
pop
jb
inc
in
popa
lods
push
movsl
test
ret
push
sbb
jle
mov
addb
out
adc
or
inc
insl
xor
sub
clc
mov
xchg
lds
stos
clc
test
inc
sub
xchg
xlat
add
pop
in
repnz
and
inc
push
fstl
xchg
adc
in
and
cli
jb
es
push
and
sbb
xlat
ret
popl
mov
lock
popf
xor
nop
pop
inc
adc
jge
enter
push
xchg
sbb
sub
dec
mov
ret
dec
sarb
aas
xchg
dec
jecxz
jp
inc
pop
cmp
fildl
inc
cmp
ret
movsb
cmp
fisubl
scas
xor
aaa
in
sarb
dec
push
ja
push
push
das
fistpl
inc
repz
or
bound
or
clc
fildl
mov
add
adc
scas
lret
push
lods
out
outsl
enter
add
jns
aam
push
iret
mov
sbb
in
imul
loope
xchg
dec
adc
mov
cli
xchg
add
aas
sbb
fldl
pop
cmpsb
movsl
pop
mov
out
xchg
push
pop
xor
add
call
push
jae
fwait
push
cmc
ja
and
arpl
mov
push
push
and
lock
ficoml
mov
jns
aam
adc
cmp
lods
lea
xor
adcl
das
inc
add
icebp
shrb
enter
popa
cmc
into
orb
xchg
fs
fistpl
aaa
icebp
mov
jnp
daa
shr
fstpt
nop
insb
outsb
pop
sarb
mov
stos
fdivrp
xchg
in
xor
mov
outsl
push
fwait
inc
and
mov
aam
std
pop
sbb
mov
in
jnp
xchg
push
xor
stos
filds
push
pop
sti
dec
popf
adc
pop
mov
inc
cwtl
and
cmp
jecxz
sub
mov
fstpt
mov
dec
loopne
cmp
bound
dec
xchg
les
pop
xchg
fidivrs
fists
adc
cmp
jp
push
jo
pop
loopne
loope
mov
pop
enter
or
mov
jecxz
push
int
fistl
data16
scas
mov
fnclex
cwtl
push
stos
jg
jnp
insl
push
out
push
jmp
clc
lahf
pop
dec
add
loope
vmwrite
fcmovu
not
inc
push
and
push
cmpsb
fwait
jl
sub
test
or
mov
inc
lahf
pusha
call
in
sbb
dec
xlat
mov
lahf
mov
mov
add
lds
mov
push
frstor
jmp
jno
push
xor
shl
hlt
js
pop
mov
pop
in
or
xor
xor
cwtl
nopl
popf
repnz
mov
xor
pop
in
fildl
arpl
xchg
int
call
dec
imul
iret
fcmovnb
sbb
cmpsb
in
neg
lret
dec
cmp
lcall
add
cmc
loope
fsubrl
dec
fistl
cmp
fucomp
pop
jno
or
movq
pop
mov
inc
inc
fistpl
loopne
jbe
rcl
xchg
pop
nop
inc
push
fs
dec
push
pop
pop
sbb
pop
in
cmp
dec
fiadds
mov
xor
push
sub
loopne
loop
xchg
jb
sub
and
inc
ds
sub
cmp
aaa
frstor
fidivrs
cwtl
mul
rcrb
fisubs
inc
push
or
jns
dec
mov
xor
sbb
sbb
jb
jae
jbe
sbb
pop
daa
jmp
cmp
adc
hlt
push
fcmovnb
and
cmp
fnstsw
add
popf
mov
loopne
movsl
xchg
sti
jmp
jecxz
add
bound
mov
aas
inc
mov
or
mov
or
rcr
addl
jecxz
call
das
lret
mov
fucomi
lahf
ret
stos
cltd
xchg
inc
idiv
cmp
fistl
mov
fldt
add
mov
pop
and
fwait
les
dec
sub
iret
fmuls
repz
pop
xchg
das
nop
in
cmpl
pand
ret
notb
dec
aad
lock
hlt
out
mov
or
pop
xchg
xchg
dec
fisttpl
lahf
xchg
data16
stos
jmp
ss
repnz
in
sub
mov
je
cmpb
sbb
adc
lds
jns
xchg
jo
sbb
imul
push
inc
test
ret
aam
dec
xor
bound
lcall
jle
cs
push
loopne
aad
sti
sub
dec
mov
call
inc
sti
sub
and
fldt
sbb
push
test
dec
xor
push
fistpl
adc
fildl
imul
lods
mov
jns
fldt
jo
push
cmp
rclb
pop
fistl
mov
std
hlt
cmp
jns
das
ljmp
lret
push
sub
and
ss
aaa
or
mov
les
and
lock
jae
mov
or
and
lcall
or
stos
mov
xchg
cmc
imul
inc
dec
xor
sbb
dec
repz
cltd
mov
popa
popf
shll
mov
popl
adc
push
out
sti
iret
jmp
leave
inc
cli
pop
stos
orl
pop
frstor
sub
or
mov
fs
jb
jae
es
rcr
sub
divb
inc
js
lock
out
cmp
fwait
aaa
jle
leave
push
fldt
mov
lcall
pop
mov
decl
stos
mov
cwtl
or
add
popf
jge
mov
inc
aad
jb
mov
popa
mov
stos
add
fistpl
out
js
fildl
and
jno
repnz
in
test
mov
and
or
fisttpl
xchg
aaa
shlb
xchg
mov
push
nop
lcall
rcr
mov
imul
jle
jo
sahf
mov
push
fistl
shll
cmc
out
jb
testl
xadd
fwait
stc
shlb
negl
stos
ljmp
adc
inc
pop
mov
sarl
adc
nop
fisubl
push
push
movsb
popa
ja
mov
add
fildl
pop
pop
out
fidivl
mov
xchg
imul
out
std
inc
movsl
movsb
push
cmpsl
or
dec
jl
ja
fistpl
mov
pop
sub
lret
cltd
movsb
xchg
cmp
rorb
aad
test
loope
fistpll
jmp
out
jmp
cli
sbb
cs
pop
push
testb
and
sub
pcmpgtw
test
xchg
mov
mov
mov
push
mov
cmp
mov
or
push
lcall
cli
fstpt
push
leave
jle
out
add
xor
fisttpl
popa
call
ja
or
pop
fcmovnb
enter
and
leave
das
sbb
push
flds
fiadds
addl
pop
mov
add
sub
pop
fstl
push
test
sahf
jle
push
leave
ljmp
dec
sbb
sub
ficompl
repz
sub
rcr
mov
andb
fcmovnu
mov
roll
ds
lds
adc
jmp
jo
fistpl
sub
scas
stos
jnp
lahf
sub
rcr
lahf
int3
mov
lret
push
arpl
pop
pop
push
es
mov
or
push
repnz
in
testl
xlat
lock
gs
les
neg
fwait
repz
inc
fildl
pop
and
push
mov
fistl
test
in
scas
mov
push
and
add
arpl
shlb
pop
std
sbb
pusha
int3
sub
sub
scas
and
mov
cmpsl
xchg
sub
cmp
mov
cmp
xor
scas
jg
cmp
xchg
push
mov
add
add
fists
mov
loope
gs
push
pop
mov
cmpsl
mov
fwait
in
into
lds
fdivs
sbb
jmp
insb
dec
in
out
cmp
cmp
push
jmp
daa
out
xchg
and
aaa
xor
cs
ja
pop
ss
ret
pushf
popa
loopne
and
xor
je
fistpll
push
stos
ror
mov
iret
mov
lock
lock
lds
notb
scas
les
das
mov
dec
fcomps
aam
jo
cmp
sbb
daa
cli
adc
test
mov
js
in
call
pop
jbe
xor
pop
arpl
pop
jo
xchg
sbb
in
push
stos
adc
test
cltd
in
int
lods
add
inc
xchg
cwtl
lret
cmpsb
push
push
mov
stos
fucomip
enter
dec
mov
and
xchg
mov
or
mov
pop
cmc
loop
sub
mov
ror
pop
bound
cltd
sbbb
outsl
jo
adc
icebp
adc
pop
xorl
push
mov
shlb
lea
test
sbb
jg
lock
mov
stos
fmuls
hlt
push
sbb
add
cli
in
shlb
movsb
mov
insb
pop
sahf
dec
mov
sub
dec
xor
xchg
addr16
inc
sahf
mov
pop
jl
cmp
cmovns
xchg
ret
sahf
fnstsw
xchg
and
hlt
int3
in
push
mov
push
push
mov
push
loopne
mov
xchg
jb
pop
xor
div
scas
aaa
inc
outsb
jg
xchg
nop
jbe
jnp
aam
fldt
scas
add
add
daa
sub
icebp
fmuls
mov
lods
dec
jb
mov
inc
loope
in
inc
cmp
fbld
sbb
fisubl
fs
loopne
mov
or
movsb
fldt
mov
test
leave
int
popa
pop
fistl
inc
mov
loopne
inc
enter
in
sub
add
mov
loope
aad
jo
mov
cld
push
fcmovnu
fiadds
inc
cmp
fistpl
dec
sbb
dec
loop
sub
xchg
cmpsl
jne
sarl
and
mov
fucom
push
insl
leave
pop
in
dec
sub
shlb
in
clc
xlat
mov
push
lock
cmp
mov
sub
fcmovnbe
lds
fisttpl
sti
dec
icebp
sub
pushf
js
sub
jecxz
in
outsl
clc
xor
sti
add
enter
out
mov
dec
repnz
scas
sti
iret
inc
mov
mov
xorl
sub
pusha
cmp
mov
xrelease
xlat
lcall
or
xchg
xor
pop
mov
lcall
loopne
inc
fmuls
outsl
pop
jecxz
fdivr
jmp
adc
insb
mov
mov
mov
fistl
stos
jl
pop
mov
nop
dec
fucom
in
pop
mov
xor
sbb
fcmove
scas
sbb
fstp
cmp
mov
cs
jns
mov
nop
mov
pop
inc
std
add
fadd
loop
add
scas
pop
mov
sbb
mov
xor
leave
imul
movsb
adc
adc
iret
lcall
jge
ret
or
cmp
push
cmp
outsb
int
dec
adc
aad
out
loopne
sub
das
loop
and
pop
dec
dec
fucom
jnp
sbb
sbb
addr16
jg
inc
fisttpl
mov
movsl
nop
fildl
sub
in
repz
or
jg
mov
sbb
push
dec
cmp
rcl
filds
in
repnz
xchg
dec
frstor
mov
adcl
lea
push
ljmp
pop
imul
fiaddl
mov
repz
rcr
add
lods
mov
sub
mov
aam
aas
inc
loopne
xchg
inc
repnz
mov
fldt
repz
or
rolb
or
stos
in
inc
idivb
mov
mov
mov
push
mov
rol
fwait
adc
out
neg
pavgb
popf
jns
mov
cmp
mov
push
mov
loop
xchg
adc
sbb
data16
mov
sbb
mov
adc
lods
add
mov
xchg
xor
pop
fistpl
pop
orb
imul
pusha
cwtl
fldt
mov
pop
adc
sub
pop
dec
fnstsw
and
fildl
daa
or
lret
nop
sub
fistpl
sbb
mov
out
lret
lds
pop
hlt
or
adc
outsb
insb
pop
frstor
jg
mov
loopne
div
call
daa
dec
pop
aam
sti
pop
mov
cmpsb
push
shl
pusha
cmp
fwait
gs
cli
push
fcomi
xchg
jb
adc
mov
in
movsb
cli
fwait
or
fistl
xor
neg
cmpsb
cmp
fwait
outsb
test
aaa
fsubrs
or
fisttpl
mov
rcr
fwait
add
bnd
push
mov
and
cmpsl
mov
mov
fildl
push
or
xor
icebp
in
push
fistpl
mov
jne
inc
cmpl
mov
push
in
pand
hlt
inc
xchg
jb
cltd
dec
mov
xchg
sbb
and
out
sub
mov
mov
hlt
into
sbb
or
or
xchg
jb
call
or
popa
inc
out
cld
insb
dec
xor
mov
xchg
rorb
jmp
xchg
sub
mov
insb
lcall
fdivr
shrb
push
fistpl
cmp
dec
lret
adc
out
bound
dec
add
jb
fistl
test
xor
or
xor
sbb
fs
xlat
stos
fwait
loopne
dec
div
cmpsb
out
insl
popf
fidivl
lods
push
and
in
scas
jge
jle
ljmp
xor
int3
push
pop
lcall
xor
dec
cltd
aad
mov
mov
push
inc
in
xchg
dec
sbb
push
lods
jae
and
cs
clc
inc
inc
negl
orl
push
cmpsl
lcall
outsl
scas
outsb
repz
jge
inc
in
in
mov
or
loope
mov
pop
lods
push
loopne
push
sahf
data16
ret
dec
lret
pop
jmp
jnp
cltd
nop
in
cmc
dec
and
or
jmp
int3
inc
call
enter
movsl
fcmove
and
fldt
mov
filds
cmpsb
adc
cmp
mov
mov
mov
ss
xchg
mov
mov
into
fldt
inc
cmpsl
or
adc
pop
and
jnp
mov
sti
xor
xchg
fsubrs
sbb
sbb
mov
dec
pop
cmp
adc
dec
adc
test
xchg
dec
es
fcmovnu
iret
dec
mov
fildl
push
leave
jp
clc
sub
or
xchg
mov
clc
hlt
scas
sbb
ficompl
mov
sbb
movsb
fcmovne
mov
inc
sti
scas
dec
aaa
fildl
lahf
cmpsl
xor
mov
loop
in
shll
jg
pushw
loopne
dec
xlat
fsin
push
cmp
jae
jge
pop
or
jns
pop
fcmovu
lds
xchg
jo
pushl
jl
popa
pop
int
aad
imul
icebp
lret
mov
mov
mov
fisttpl
xor
mov
sub
add
int3
das
fcmovne
lock
insl
les
fistpl
jae
cmp
fwait
push
aad
cmp
mov
aaa
bound
sbb
xchg
test
fistpll
mov
push
nop
or
fucomi
les
xor
fistl
cmpsl
arpl
call
inc
stos
or
hlt
cld
or
lock
fcmovnbe
mov
mov
cmp
mov
fbstp
pop
push
push
add
fstpt
mov
mov
jno
ds
xor
rcr
fstpt
loop
insl
iret
lods
push
outsl
nop
sbb
js
fildl
dec
out
ret
xchg
lods
fisubl
xchg
sub
daa
fistpl
addr16
jecxz
sub
mov
iret
lcall
fsubp
xor
and
cmp
mov
inc
fucomi
out
pop
sub
jg
push
sbb
xor
pop
fidivrl
pop
or
push
call
loope
lret
xlat
mov
mov
stc
mov
sahf
mov
fcmove
stos
test
pop
push
sbb
sbb
mov
jbe
adc
js
mov
rcr
insl
pushf
sbb
jg
jne
subb
rol
push
push
pop
dec
xor
aam
jae
lods
pop
inc
sub
jb
shl
or
call
das
adc
pop
rclb
loopne
jno
adc
out
mov
out
repz
mov
hlt
ret
xchg
andl
sti
ffreep
orl
shlb
cmpsb
lahf
or
inc
fldt
or
imul
sub
es
jecxz
test
cmp
sti
mov
out
ja
je
fcmovnbe
mov
push
scas
icebp
cltd
fildl
repnz
and
dec
std
sbb
or
outsl
sahf
fcmovnb
cmp
or
inc
cltd
movsb
mov
mov
and
dec
add
mov
movsb
xor
cmpsl
icebp
call
in
jp
add
mov
lock
in
stos
mov
and
mov
pop
xchg
iret
mov
xor
or
imul
adcl
pushf
mov
arpl
fstpt
in
js
cmpsl
sub
xor
mov
mov
dec
fcomi
cld
cwtl
pushf
jns
or
clc
fsubrs
stc
cmc
std
les
fiaddl
call
inc
cli
cmp
or
adcl
lods
jae
insb
lock
fucomi
xchg
mov
cli
mov
dec
fstpt
inc
pop
enter
mov
or
enterw
call
and
test
push
testb
jg
push
sahf
sub
les
rorb
dec
scas
adc
mov
push
push
inc
lods
xor
testb
xchg
push
outsl
xor
or
mov
cmp
sarb
jg
cmp
lret
mov
push
movb
or
js
sub
call
sti
clc
aad
sub
movb
xchg
xchg
push
jg
jmp
xor
fildll
enter
xchg
sbb
sbb
mov
leave
rol
and
xchg
insl
xchg
push
fwait
cmc
push
mulb
xor
push
mov
push
lcall
cmp
iret
fsts
cmc
dec
repnz
movsl
mov
or
xor
aad
hlt
adc
inc
fdiv
pop
setns
lahf
in
iret
sbb
fistps
mov
nop
xchg
xchg
pop
daa
or
testb
mov
inc
test
sub
push
add
pop
test
pusha
push
xchg
and
lods
popa
cmp
xchg
dec
popa
es
inc
ljmp
pushf
lods
jp
adc
in
scas
in
enter
push
sub
jno
sahf
lock
fstps
cmp
lret
adc
mov
aaa
inc
mov
sbb
or
and
scas
in
sub
and
mov
or
sti
pop
mov
sbb
daa
adc
movl
mov
push
jne
pop
xchg
or
insb
stc
sbb
in
imul
push
aad
lcall
inc
push
xor
sub
and
mov
pop
incl
test
call
xchg
scas
popa
fstpt
popf
pop
fimuls
mov
fisubrl
lcall
rcrb
mov
pop
push
push
mov
or
clc
inc
loopne,pn
pop
and
and
dec
daa
pop
loopne
out
sub
fwait
std
pop
je
ss
adc
xorb
icebp
jns
jecxz
sbb
repnz
push
ret
or
mov
push
and
lret
fisttps
jns
clc
fistps
sbb
xchg
js
xor
adc
movl
sub
dec
fildl
jecxz
jns
push
popf
and
out
bswap
lahf
mov
xlat
je
les
push
sbb
mov
andl
cld
add
icebp
lcall
mov
jb
jbe
pop
cmpsl
fistl
xor
out
pop
sbb
ret
push
scas
repz
push
aad
sub
pushf
xchg
mov
scas
call
cwtl
mov
or
fstl
scas
ret
rorl
fisttpl
loopne
rorb
jae
sbb
sbbb
dec
xchg
jmp
cli
enter
fildl
mov
int3
mov
lods
nop
dec
ficomps
or
mov
adc
stos
fdivrs
sub
out
dec
jge,pn
lahf
out
fidivl
sbb
into
push
sub
pop
push
fistl
mov
add
pop
push
ja,pn
outsb
mov
dec
int3
and
cmp
pusha
jg
js
mov
rclb
mov
xchg
fidivrs
inc
dec
push
inc
neg
mov
jnp
sahf
mov
xchg
test
test
pop
mov
repnz
ja
sti
daa
dec
or
fwait
cmpsb
pop
scas
dec
cmpsl
rcr
std
adc
sti
xchg
fldt
mov
mov
test
das
fistl
mov
loopne
insb
jno
popa
push
xor
sbb
jae
fwait
pop
pop
sbb
test
fmull
jle
ljmp
imul
pop
cmpsl
fisttpl
xlat
lret
mov
jnp
and
rclb
sahf
jne
xor
jno
nop
adc
dec
jle
call
cmp
xchg
dec
mov
sbb
add
mov
jle
ret
adc
fistl
pop
mov
loopne
test
ret
inc
dec
mov
sahf
mov
xchg
add
shrb
jecxz
push
out
fldt
mov
xchg
and
inc
add
fcmovnb
and
fisubrs
xor
fildl
rorb
dec
push
fwait
pop
xchg
arpl
mulb
xchg
pushf
pop
iret
jnp
mov
mov
and
pop
ja
inc
cltd
push
lods
js
pop
pop
ds
insl
push
fistpl
add
sbb
shl
cmpb
arpl
or
fisttpll
hlt
inc
jnp
mov
lcall
fidivrl
orb
ljmp
and
andl
sub
test
es
push
pop
iret
fcmovne
repz
hlt
push
icebp
fcmovnb
lret
or
in
push
call
or
outsb
cmpsl
push
or
int
adc
sub
xchg
push
xchg
out
pop
ret
inc
mov
xor
leave
push
imul
outsb
jmp
jb
rcr
divb
out
ret
sbb
fsubp
fstpl
push
sub
fisttpl
xchg
push
push
cltd
lods
orl
fcomi
sarb
clc
clc
adc
in
xor
xchg
les
push
out
dec
sbb
pop
subb
push
cmpsl
jne
stos
jecxz
iret
dec
jae
sbb
aad
mov
dec
fldt
in
adc
mulb
mov
pop
push
icebp
mov
movsb
fs
or
xchg
or
pusha
call
insl
sbb
movsb
cmpsb
fucomp
pop
jo
xchg
pop
mov
test
fcomps
lahf
ss
pop
mov
clc
std
cmpsb
jge
and
mov
inc
arpl
fistl
mov
fs
into
or
fstpt
push
repz
mov
insl
add
mov
cwtl
imul
add
ret
inc
loopne
dec
cmp
insl
dec
or
pop
sub
adc
lret
and
pop
cli
sub
lahf
es
fstp
loopne
data16
jnp
add
fcmovnb
adc
mov
and
in
jnp
fildl
lret
push
adc
mov
sti
or
add
bound
aas
sub
cmp
adc
fistl
or
testl
jnp
push
ljmp
call
arpl
pop
sub
in
scas
or
dec
pand
xchg
jae
mov
sti
ret
aas
fs
mov
xor
dec
lea
cmp
mov
sti
mov
push
adc
cmp
fstpt
xor
in
loopne
rcrb
and
insl
sub
or
testb
pop
mov
jne
call
jecxz
pop
fnsetpm(287
or
iret
movsl
xor
and
dec
or
fistl
subb
aas
in
mov
push
dec
mov
pop
fildl
jae
rcr
insl
and
pop
xor
ret
pushf
call
jl
dec
sbbb
shl
push
lcall
jge
cltd
lret
pushf
push
in
xchg
fstpt
jnp
repz
or
fistpl
sbb
fcmovu
pop
mov
out
or
cmp
int3
repz
data16
or
sub
clc
sub
xchg
lahf
pop
mov
insb
xchg
inc
cmp
notl
fidivl
mov
push
test
jle
sarl
outsl
pop
mov
aaa
movsl
ficoml
adc
adc
fstpt
xchg
push
or
xchg
sbb
sbb
test
pop
rcr
adc
cltd
add
mov
enter
dec
lcall
ds
iret
rorb
idivb
inc
test
lock
jne
push
into
roll
jb
movsl
pop
fisubrl
or
mov
sti
orl
in
mov
push
mov
aaa
fldt
shll
lods
push
adc
lcall
mov
mov
adc
push
mov
sbb
loop
push
dec
ljmp
mov
or
xor
movsl
jg
out
pop
in
cmp
fcmovnb
inc
imul
push
sub
fcomi
jmp
scas
pushf
adc
pop
adc
mov
fcmovne
jae
out
int
sub
xchg
andl
or
jp
sbb
add
cmp
mov
sub
pop
xchg
xor
xchg
stos
sti
fildl
push
fcmovnbe
daa
mov
and
in
pop
out
pop
dec
mov
lahf
arpl
and
xor
js
call
fwait
xchg
fisttpll
test
inc
imul
cli
lods
js
fcomps
add
fcmovnb
stos
enter
inc
shl
in
jno
xchg
fcomi
jl
loop
and
in
dec
int
insb
sub
jg
mov
sti
stos
fldt
lahf
or
cld
fcmovnbe
js
test
fistl
aad
lods
rcll
nop
lds
jmp
dec
lahf
jp
mov
je
sbb
xlat
jns
lcall
mov
or
inc
ror
and
xor
fs
mov
inc
hlt
shrl
push
sbb
sub
fcmovnbe
sub
mov
mov
add
repz
lcall
fcomp
insl
clc
xchg
adc
cmpsl
or
mov
arpl
dec
sbb
and
jecxz
pop
test
into
cs
imul
inc
aad
lock
fistpl
xor
xchg
addr16
fnsetpm(287
sahf
cmp
ret
mov
pop
lock
dec
jnp
mov
push
fldt
jb
xor
ljmp
cmp
ret
test
mov
fildll
mov
mov
in
push
and
cmp
cmp
cld
mov
pop
lcall
in
cltd
lods
cltd
ficoml
shl
and
mov
xchg
xor
add
add
stos
out
aaa
mov
xchg
aas
orb
std
jle
stc
pop
popa
clc
push
insl
rolb
scas
gs
fildl
jp
idivb
push
lret
stc
test
addr16
lahf
or
popa
stos
fstpl
jmp
cli
inc
lods
dec
jmp
insb
scas
outsl
pusha
std
fsubrs
ret
pop
fisttpl
mov
aad
pop
mov
clc
add
cs
dec
insl
fadd
add
dec
sub
add
sbb
inc
ror
dec
mov
test
cmp
mov
add
addr16
dec
cld
stos
in
and
mov
lock
xor
enter
push
sbb
lcall
adc
dec
lahf
notb
jne
push
pop
push
daa
jno
enter
hlt
sbb
ljmp
cltd
arpl
stos
jne
repnz
push
faddl
scas
add
mov
roll
insl
mov
cmp
daa
dec
cltd
rclb
rcrl
out
inc
ffree
dec
test
aad
arpl
lcall
jbe
push
mov
push
in
sub
ljmp
pushf
cld
lds
lock
lods
lds
repz
cltd
cli
xor
mov
inc
lods
aam
iret
loopne
push
inc
dec
lock
stos
test
aad
aam
cmp
mov
fnstcw
inc
lcall
lret
hlt
fcomi
pop
xor
jl
jnp
out
insb
sub
fldt
clc
add
pop
inc
sbb
pop
adc
inc
fmul
push
out
stos
aad
mov
sub
xor
rorl
and
fisubl
rcr
cmp
jge
pop
scas
sbb
fistpl
pop
insb
scas
sub
dec
mov
inc
dec
sub
shll
out
mov
in
cwtl
jp
pop
mov
dec
lock
mov
or
lods
shlb
bound
push
out
adc
std
movsb
cltd
sub
lods
out
sub
jns
pop
adc
fistl
sub
aad
lods
pop
lods
dec
shlw
push
adc
pop
fcoml
stos
jns
sbb
mov
outsl
movl
mov
pop
cmp
pop
sub
push
clc
dec
lds
data16
cmpb
enter
sarl
mov
push
dec
inc
xor
jo
mov
out
add
xchg
dec
xchg
rcl
sti
pop
mulb
jg
ja
pop
dec
sbb
or
icebp
pop
cmc
in
xchg
loopne
mov
xchg
stos
cwtl
xchg
popf
mov
mov
xor
add
xor
inc
dec
arpl
lds
or
movsb
lret
xor
lret
lahf
mov
add
rorl
cmc
push
pop
clc
in
and
cmp
fucomi
push
in
loope
repz
dec
xchg
nop
sub
mov
arpl
cmp
inc
and
jl
push
fidivrl
xchg
ret
jae
ljmp
call
sbb
pop
ret
cli
subb
jae
leave
in
mov
xchg
mov
in
cmp
int
ficoml
mov
in
inc
push
xchg
adc
sbb
adc
push
add
cmp
cmp
cli
jo
xchg
shl
rcll
lcall
xchg
int3
insb
shll
outsb
das
les
roll
fistl
stos
popa
dec
add
outsl
out
fwait
mov
sub
sbb
or
xor
pop
xchg
jl
in
xchg
imul
test
adc
xchg
aaa
push
pop
lods
push
pop
mov
dec
fs
pop
push
jmp
xor
push
push
in
sub
xor
repnz
or
in
add
adc
shrl
pop
and
push
adc
scas
jecxz
arpl
cmp
std
dec
inc
pop
push
jo
enter
xchg
ret
das
cmpsl
subb
jecxz
sbb
iret
fistps
stos
or
stos
mov
fisttpll
sub
loop
and
push
sti
leave
cmp
or
inc
call
ljmp
aad
fidivrs
jp
mov
pop
addr16
in
scas
cwtl
mov
xchg
or
dec
neg
sbb
cwtl
and
ret
pop
aas
stos
arpl
adc
fs
mov
fiaddl
xchg
xchg
ficoms
inc
push
dec
fldenv
pop
aam
pop
mov
sbb
stos
cmp
mov
outsl
int3
cltd
pusha
test
mov
cmp
lods
pop
nop
pop
push
cmp
popa
loop
sbb
sub
or
and
add
mov
shll
insl
scas
loop
and
sub
jmp
movsl
jecxz
es
imul
stos
add
sbb
lcall
and
mov
dec
outsl
fstpl
xchg
shr
mov
fcmove
xor
pop
pop
lds
dec
xor
mov
mov
pushf
dec
das
jbe
adc
xchg
and
in
repz
push
xchg
movsl
jg
sbb
loope
jb
cmpb
fcmovnu
mov
setle
lcall
sub
fcoms
js
lret
fwait
scas
fcmovnb
loope
mov
fldt
cmp
mov
inc
rcrb
cli
out
dec
or
fmul
and
popf
cmp
aaa
loope
in
iret
insb
or
nop
cmpl
or
pushf
pop
cmp
data16
inc
mov
add
aam
shl
xchg
fwait
add
inc
sti
das
sub
adc
test
cmp
in
mov
xchg
push
in
mov
int
or
xchg
out
mov
xchg
fldenv
and
fistpl
hlt
cld
mov
enter
mov
in
xor
daa
sti
enter
pop
mov
int
hlt
fwait
jno
add
stc
xor
jp
iret
sbb
lea
push
fildl
fs
test
mov
dec
jge,pn
nop
pushf
mov
fldt
cmpsb
sbb
outsl
add
push
cmp
pop
pop
aas
fistl
movsl
mov
xchg
std
daa
fstpt
mov
fdivrl
and
in
push
loopne
stc
jb
xlat
fistl
jo
fstpt
push
mov
fistpl
push
int3
mov
repnz
adc
fiaddl
jnp
inc
insb
fisubs
das
mov
lret
mov
ja
fcmovnu
lea
mov
mov
fidivrl
or
fcmovnu
push
fisubs
jb
jmp
pop
inc
ss
and
insb
mov
adc
or
xor
lret
or
jle
leave
mov
int
inc
mov
cmp
testb
push
fidivrl
adc
adc
and
cmpsl
mov
outsb
and
adc
jnp
push
adc
lahf
pop
sbb
xchg
sub
mov
mov
xchg
lret
leave
aam
les
fiaddl
fwait
sar
divb
hlt
or
mov
lea
jne
sbb
push
fildl
popa
cmp
adcl
add
jb
rcr
std
dec
push
fldt
adc
pusha
xor
xor
jmp
pop
ds
cld
or
and
xchg
push
fwait
or
repz
dec
fisubrl
stc
in
and
pop
cld
movsl
dec
pushl
lret
mov
push
call
fistpl
ss
in
mov
mov
mov
sub
mov
xchg
sahf
mov
dec
push
cld
pop
xor
test
dec
outsl
pop
fcmovne
imul
daa
clc
cmp
sub
into
pop
lods
mov
cmp
outsl
incb
cmpsb
push
xchg
add
shl
push
cmp
jle
stos
sahf
mov
jg
inc
rcrl
pop
dec
and
mov
jno
dec
lret
push
in
inc
or
gs
idivl
jae
add
ret
addr16
dec
pop
and
mov
jb
andb
gs
lret
cwtl
insl
shll
leave
push
xchg
cli
ja
jns
mov
lock
sub
loopne
cmp
xchg
sbb
jmp
jae
push
dec
or
mov
ret
sbb
mov
xor
mov
mov
jl,pt
adc
fistpl
mov
xchg
lret
shr
adc
test
pop
add
fldt
pop
fcomi
xchg
arpl
cs
in
loop
mov
ficompl
scas
popa
fistl
cmp
mov
fchs
or
clc
hlt
jno
les
or
fstpt
inc
mov
adc
rcr
jbe
int3
int
ss
lcall
mov
mov
push
loope
cmp
into
push
arpl
loop
adc
jg
mov
fistpl
scas
lods
jmp
jge
sbb
jl
movsb
fistl
and
inc
fistpl
adc
lods
popa
fisttpl
ja
mov
and
aaa
pcmpgtw
cwtl
fstl
int
outsl
das
call
sar
jmp
test
iret
xchg
mov
jbe
sub
and
inc
sub
test
pop
test
fadds
mov
mov
or
xchg
push
aam
push
imul
cmpl
dec
imul
jae
xchg
or
int
cmp
ficoml
mov
and
xor
cltd
and
xchg
mov
dec
sub
ds
sbb
adc
push
cmp
in
into
repz
cmpsl
add
and
stos
pushf
mov
jle
insl
mov
cli
sub
sub
mov
fnstsw
popf
es
cltd
jmp
jp
or
or
popa
xor
sub
and
imul
notb
push
pop
jge
scas
rcr
xchg
mov
or
nop
dec
fisubrl
lahf
mov
cmp
push
pop
xchg
shrb
add
cmp
add
push
int
pop
arpl
negb
inc
lods
pop
fdivp
cvtps2pi
add
cli
test
mov
lds
sub
adc
div
out
loopne
or
pop
adc
ficoml
push
jb
pop
cmp
adc
repnz
lcall
mov
xchg
cli
mov
or
arpl
hlt
sti
dec
clc
and
orb
xchg
notb
call
cmpsb
fwait
jno
sti
cmpsl
mov
or
int
es
fistl
jns
push
sub
fcmovnb
out
adcb
and
frstpm(287
mov
sbb
loopne
cmpsb
pushf
les
into
fstpt
lret
xchg
push
sbb
aas
popf
inc
or
dec
inc
fildl
mov
repnz
pop
or
in
lcall
ss
adc
jp
fidivrl
mov
repz
mov
pop
insl
mov
inc
jne
xlat
xchg
out
push
jb
fistpl
inc
fcmovnbe
adc
sub
into
in
xchg
cmp
fcmovnb
int3
shl
xor
push
clc
daa
stc
or
cmp
and
mov
fldt
sub
fistpll
pop
mov
movsl
jns
lcall
mov
xchg
pop
popf
lds
or
jne
xchg
sub
cmp
push
inc
sub
lcall
ret
jae
popa
inc
fldt
cmp
sbb
pop
add
arpl
fnclex
das
mov
hlt
mov
xor
popa
ffreep
mov
mov
les
mov
fldt
cmpsl
popl
cmc
adc
ja
jl
add
jo
das
cmp
mov
jno
pop
leave
pop
cs
lods
mov
pusha
fnstcw
imul
lret
sahf
into
adc
lret
and
xchg
test
or
dec
in
xor
sarl
sbb
fnsetpm(287
jle
adcl
mov
push
shlb
rcrl
push
fwait
dec
mov
clc
mov
adc
je
leave
mov
xor
fldl
imul
inc
and
in
cmpsl
int3
movsl
xchg
mov
imul
sub
or
outsb
pop
fs
daa
sub
int3
mov
aad
fcmovnb
add
pop
cmp
or
movsl
xlat
jmp
add
icebp
xchg
retw
fdivs
loop
outsb
fildl
jle
pop
push
push
sbb
jbe
push
cmpsb
sbb
repnz
xchg
mov
rcrl
lret
mov
mov
aaa
and
or
test
dec
test
sub
rcrb
and
jp
in
sahf
xchg
mov
inc
mov
mov
pop
lods
es
cmp
push
sar
cmpsl
mov
fildl
jg
test
mov
cmpsb
xchg
mov
sbb
push
inc
xor
or
hlt
fimull
test
jns
dec
xor
cmp
push
jp
jb
adc
inc
mov
popa
push
fldt
lcall
pop
and
in
aam
aaa
sbb
shlb
jne
call
repz
inc
mov
ret
lret
fildl
jg
xchg
sahf
int
adc
or
xor
fwait
pop
pusha
adc
lock
loop
fisubl
cmc
or
adc
jbe
fwait
add
xlat
int3
xchg
jb
add
lea
or
xor
scas
adc
or
mov
push
pop
adcb
pusha
pushf
pop
adc
aaa
in
mov
mov
mov
test
pop
pop
lcall
addr16
ja
das
call
rcrb
jbe
dec
fwait
hlt
cltd
pop
xchg
or
push
aaa
pop
add
fldt
lahf
pop
lcall
mov
sbb
xchg
mov
imul
adc
push
rorl
stc
fildl
sub
jbe
dec
lods
lods
sbb
xchg
fildl
push
or
insl
stos
fsubrl
sbb
mov
inc
into
add
imul
clc
cmpsl
dec
out
push
inc
add
adc
pop
xor
outsb
adc
int3
xchg
dec
xchg
pusha
or
mov
jl
cmp
adc
call
iret
sbb
mov
outsb
bnd
cmc
mov
andl
hlt
push
xor
inc
sub
cmp
dec
repz
jle
pop
fcmove
cmpsb
leave
gs
loopne
mov
fcmovne
inc
rolb
push
outsb
jecxz
or
jmp
jne
repnz
int
nop
push
mov
popa
jae
sub
push
push
jl
inc
bound
stos
add
arpl
stos
rcrb
mov
hlt
cmp
cwtl
outsb
call
lock
mov
stos
jl
cmc
fcomi
loopne
sub
lcall
outsb
test
inc
shll
mov
sub
jecxz
les
mov
xchg
mov
push
mov
jb
bound
inc
scas
adc
fcoml
into
and
push
lds
xor
mov
fbstp
pop
push
jnp
loop
mov
rcrl
insb
add
divb
ret
sarl
fimuls
repnz
fistpll
xchg
ret
loop
fdivrl
jne
dec
negb
inc
sub
cmp
pop
and
dec
xchg
mov
fistpl
cltd
dec
xor
fidivrl
mov
imul
fldt
fs
xchg
mov
jg
lahf
aaa
movl
adc
rcr
outsl
fnsave
loopne
pop
mov
pop
push
stos
loopne
mov
movsl
mov
jp
push
mov
loope
pop
fstpt
movsb
data16
pop
hlt
push
loopne
add
jmp
xor
fstpt
sub
pop
sub
mov
fiadds
xor
xor
xchg
inc
and
leave
jno
fisttpl
cmp
mov
lods
dec
lahf
movsl
fildl
sub
clc
xchg
pop
insb
fistps
sub
outsl
dec
ljmp
xchg
xchg
mov
or
leave
mov
fidivrl
fistpl
cli
pushf
imul
stos
dec
fcmovne
and
repnz
nop
clc
sbb
fadds
jnp
shrb
fstl
aad
scas
jbe
mov
pop
mov
loope
loope
je
fwait
popa
loopne
fcomi
cmpsb
lret
push
sub
mov
cmp
jmp
cmp
inc
repz
xchg
cmp
loopne
addb
shl
and
aam
pop
shlb
push
or
jno
clc
cmp
sbb
xchg
adc
sahf
cmpsb
stos
xchg
jge
fistl
lock
out
arpl
pusha
gs
mov
cmp
mov
push
sbb
inc
push
fisttpl
out
movb
fisttpl
test
xchg
sbb
insl
addr16
les
or
mov
and
rcr
in
ds
pop
js
pop
aaa
stos
push
frstor
inc
enter
inc
pop
shll
call
xor
sub
outsb
ret
fimull
lret
rcrb
out
add
push
pop
sti
mov
xlat
sbb
jae
jnp
fimull
pop
add
fisttpll
cwtl
jnp
ret
xchg
stos
mov
mov
and
xlat
mov
out
mov
mov
xor
or
fcomi
push
ss
cmp
mov
sbb
stos
push
lds
sarb
rcll
fisttpl
xchg
dec
cli
call
test
or
sbb
loopne
test
fcmovbe
and
fstpt
lcall
fistl
aad
pop
dec
repz
fisttpll
and
inc
push
mov
sbb
push
mov
ja
insb
jg
jge
stc
int
or
movl
cmp
les
repz
and
jo
lcall
aad
ret
stos
push
fstpt
adc
fucomp
call
jge
int
fnstsw
outsl
fiaddl
cwtl
push
push
insl
xchg
fstpt
scas
or
adc
divb
or
mov
lcall
dec
push
stos
aas
test
sbb
fistpl
pand
push
push
cmpsl
fldt
push
or
es
jne
fucomi
dec
clc
fs
roll
jb
aaa
jecxz
cmp
jnp
cmc
inc
nop
xor
incb
push
ljmp
cmc
pop
fistpl
sahf
repz
fwait
inc
xor
js
int3
and
ret
fstpt
test
aam
fistl
push
cmp
push
xlat
fcomi
pop
shrb
sbb
loop
adc
xor
dec
pop
outsl
jmp
daa
movb
jecxz
sarb
dec
mov
push
fildl
mov
mov
pop
push
mov
mov
call
adc
rcrl
add
pusha
loopne
mov
repnz
in
xchg
mov
dec
mov
mov
pop
in
int3
jecxz
fcmovnbe
push
sarl
and
sbb
subl
pop
addr16
push
mov
movsb
cmp
and
ja
fildl
ljmp
cmp
fdivrl
push
shll
fildl
idiv
fcmovnb
jo
lods
shl
adc
shlb
movsb
ffree
lds
ret
mov
ss
loopne
inc
jecxz
fcomp
ficompl
clc
loop
icebp
bound
fidivrl
ret
sahf
cmpsb
mov
out
pop
fstps
cmp
clc
jns
shrl
mov
jbe
push
movsl
loope
scas
or
repnz
push
pop
call
cmp
or
sub
xchg
or
les
fstpt
add
iret
stc
fisttpl
mov
xor
nop
push
mov
int3
sarb
cmpsl
js
scas
sbb
ja
in
push
cs
stos
rcll
insb
sbb
adc
pop
xor
xchg
mov
fwait
mov
ret
fildl
sub
cmp
sbb
arpl
add
mov
imul
add
cmp
sub
ret
mov
jmp
mov
mov
in
stos
popl
sbb
outsb
mov
sub
sbb
jo
or
mov
push
repnz
nop
in
les
mov
inc
test
or
mov
sbb
mov
fcmovnu
mulb
dec
icebp
sbb
fisttpl
xor
test
push
fisttpl
add
fcmovnbe
or
test
int
ficoml
loope
aad
mov
mov
mov
bound
imul
mov
fcmovne
and
lock
xlat
jmp
xchg
sbb
jbe
fstpl
add
fldt
mov
scas
fldt
and
fstl
int
daa
bound
cmp
data16
fildl
cmp
lods
les
cmc
fisttpl
push
pop
lds
sbb
inc
mov
fld1
inc
add
mov
cmp
icebp
push
sbb
ret
xlat
ffreep
jecxz
pop
loopne
stos
cmp
fcomp
cmp
adc
outsl
fildl
negb
int3
xlat
cmp
pop
mov
imul
arpl
dec
mov
mov
stc
mov
or
orb
sbb
shlb
add
loop
inc
icebp
pop
ret
push
fdiv
lret
and
mov
imul
sub
dec
pop
push
fildl
mov
popa
dec
xor
pop
sbb
dec
stos
xchg
push
inc
mov
mov
jp
xchg
pop
mov
bound
cs
dec
jo
xchg
dec
xchg
cmp
mov
dec
cli
jb
fimull
dec
popf
fistl
xchg
and
xchg
loopne
stc
ficoms
gs
shrl
in
pop
fildl
cmpsl
aam
xor
lahf
hlt
fldt
xchg
or
rclb
into
mov
insl
fstpt
sub
mov
xchg
pop
mov
fisttpl
sub
leave
mov
pop
jg
and
aam
push
pop
fstpt
out
in
or
push
and
out
repz
outsl
fisttpl
call
nop
fisttpl
push
test
sbb
and
jns
repz
jecxz
mov
scas
cltd
and
sti
adc
neg
call
lods
add
mov
jns
cmp
mov
stos
adc
sub
call
lea
fldt
jbe
inc
jmp
in
iret
rorb
cld
fistpl
ja
xchg
jmp
cmc
mov
inc
repz
pop
mov
fstpt
jo
add
fstl
into
xor
ret
in
movl
les
cmp
mov
mov
fistpl
outsl
dec
clc
int3
ficompl
add
mov
pop
jecxz
mov
clc
dec
mov
xlat
enter
mov
divb
sbb
fsubrs
cmpsb
or
xchg
lock
xchg
xor
sbb
pop
leave
push
ljmp
add
stc
fisttpll
vphaddwq
cmpsb
push
movsb
pusha
or
fistl
push
mov
xor
xchg
lcall
faddl
je
int3
pusha
in
fcmovnbe
popf
pop
push
and
arpl
test
xchg
fldt
scas
aaa
lret
ss
mov
push
ffree
pop
dec
int3
arpl
mov
daa
xchg
mov
pop
lds
sbb
lahf
subb
cmp
xor
int3
sti
push
jnp
mov
mov
jp
pop
cmp
rolb
add
rcll
jp
and
mov
iret
in
arpl
repz
rorb
mov
ljmp
add
loop
inc
pusha
movsb
pop
xchg
cmp
cli
adc
dec
outsb
das
cmc
push
mov
push
sarb
add
into
rcrl
lcall
shll
push
repnz
shr
mov
or
sbb
xchg
jmp
and
adc
jmp
jnp
out
xor
int3
jb
lock
pop
fsubrp
daa
or
int3
mov
das
mov
fstpt
ljmp
jp
fidivrl
loopne
stos
push
int
push
fsubl
dec
and
leave
sub
stos
divb
in
or
fisttps
cltd
xor
sahf
sub
mov
mov
lret
ja
lods
mov
xchg
jecxz,pn
das
push
loopne
jb
jle
scas
data16
icebp
push
nop
sbb
fdivrp
cwtl
pop
stos
stos
subl
and
stos
ret
pop
aad
xchg
mov
in
rorb
aad
filds
xchg
cwtl
loope
leave
cs
cmc
outsl
jecxz
fwait
mov
rol
mov
adc
js
repz
cmp
dec
lods
inc
shll
ret
mov
inc
loop
stos
sti
iret
repz
into
movsb
cmp
push
cltd
mov
mov
lods
dec
pop
or
fdivl
repnz
sbb
fcomip
clc
adc
jl
push
movsl
sbb
stos
outsl
aam
in
xor
xchg
fisttpl
or
into
fisubrs
repz
cmp
pop
mov
ljmp
test
sub
lods
push
fs
ret
dec
fwait
loope
sti
sbb
pop
xchg
or
fcomi
push
xchg
in
filds
cwtl
lret
shll
add
xchg
jmp
dec
add
in
xor
pop
mov
cli
and
in
fnstsw
jnp
dec
cmpsb
sti
or
out
repz
nop
mov
idivl
adc
ljmp
mov
or
lcall
xchg
mov
stos
jp
mov
sahf
xchg
inc
in
mov
cli
stos
cs
dec
xchg
sbb
mov
xchg
sti
movsl
dec
fsubrl
lods
pop
outsl
cmp
fsubrl
jg
je
adc
iret
movsb
sbb
aam
lcall
fndisi(8087
call
pop
mov
mov
cli
adc
lret
repz
mov
push
aam
mov
and
cmp
xor
aam
and
ljmp
loop
hlt
testl
push
xchg
clc
jmp
fisubrs
aas
adc
sbb
inc
mov
pop
adc
inc
jmp
test
sbb
outsb
sbb
in
mov
dec
movl
adc
mov
pop
jo
jb
add
jp
or
jge
jecxz
es
push
mov
cld
inc
lods
jae
or
pushf
aas
iret
in
lahf
mov
pop
push
imul
out
aam
adc
jb
cmpsl
loop
sbb
lods
jns
in
sbb
xchg
add
lea
jb
cmp
loope
hlt
push
lods
and
cmpsb
cmp
das
fbld
ss
or
sbb
stos
mov
push
and
pop
shr
lds
stos
jl
mov
ss
mov
sbb
xlat
lret
jb
stos
sub
sbb
lret
lods
arpl
or
dec
outsl
push
lcall
mov
fcomps
outsb
sti
inc
fistpl
or
outsl
int
cmpsl
jecxz
dec
fistpl
daa
std
mov
js
xchg
imul
scas
aas
mov
xchg
fistpl
jecxz
iret
jnp
sub
fildl
and
jmp
sarl
adc
push
pop
jns
test
mov
mov
cmp
adc
push
je
aad
test
and
pop
ret
xchg
lcall
data16
pop
fldt
loop
aaa
push
inc
jo
mov
pop
leave
dec
fucomi
rcrl
imul
cmp
fisttpll
xchg
mov
sub
push
ror
push
fwait
inc
fstpt
jmp
push
fcmovbe
leave
lods
mov
fnstsw
pop
inc
adc
sub
mov
xchg
fwait
pusha
and
fld1
push
mov
imul
ja
adc
fistpl
ss
jg
call
stc
cmp
and
outsl
mov
adc
mov
inc
sbbb
fiaddl
sub
jns
inc
sbb
mov
xchg
lret
fistl
or
imul
mov
pop
add
mov
add
and
sbb
enter
push
or
leave
adc
fcmovne
push
in
mov
sub
mov
nop
jp,pt
xor
loopne
mov
fidivl
xchg
loopne
add
push
popa
pop
sub
and
neg
cmp
out
xor
sub
fcmovnb
idiv
lds
sbb
insl
add
cmp
loop
fcmovnbe
mov
test
loopne
mov
pop
or
fildl
cltd
mov
in
xorl
xor
rorl
neg
and
add
jecxz
mov
fidivl
fnstenv
mov
push
inc
pusha
std
ficoml
sub
lahf
push
movsl
push
das
fiaddl
xchg
mov
cmpsl
mov
and
jg
jmp
push
adc
call
fucom
pop
inc
fwait
ss
int3
inc
into
adc
push
faddl
pop
cmp
add
and
push
mov
push
leave
xchg
xchg
mov
rcr
call
stos
ljmp
push
testb
sub
dec
mov
js
pop
repnz
push
lods
xor
and
jae
jnp
jno
inc
call
mov
push
fnstsw
bound
shll
stos
push
into
loopne
mov
addr16
loopne
jno
cmp
iret
xchg
hlt
dec
loop
jnp
cmp
cli
xor
loopne
ja
frstor
dec
fistpl
xchg
jae
or
movsb
push
or
pop
fstpl
mov
fildl
cltd
jecxz
fcomi
adc
popf
adc
xchg
pop
mov
mov
xchg
out
fbstp
int3
or
push
pop
xor
mov
rcr
stos
scas
xchg
lcall
adc
outsb
shlb
adcb
bound
shrb
fildl
xchg
shld
repnz
mov
mov
inc
or
dec
mov
fstpt
dec
stc
in
lret
fistl
ljmp
outsb
std
mov
mov
mov
sbb
int3
sbb
fcmovu
jne
outsb
sbb
popa
or
aas
or
pop
clc
cmp
pop
test
jns
mov
ret
push
loopne
fnstcw
xchg
dec
jp
inc
daa
pop
cmp
sbb
stos
imul
mov
and
add
lods
cmp
inc
fstpt
xchg
mov
jo
pusha
shll
fistpl
push
sub
cmc
es
insl
outsl
rcr
jp
loop
xor
pop
enter
xor
cmp
inc
and
popa
mov
add
pop
adc
pop
pop
pop
xchg
xchg
push
cmpsb
mov
mov
mov
pop
add
pop
ja
dec
lods
mov
adc
test
inc
fwait
div
pop
mov
mov
sbbb
dec
mov
cmpsb
sub
cld
sti
inc
dec
jo
push
icebp
and
push
and
inc
push
push
ss
pop
in
lcall
mov
fildll
cmp
lcall
stos
aad
sbb
scas
push
pop
pop
fildl
jae
xor
mov
lock
push
loopne
push
mov
or
push
push
mov
stc
pop
fcmovnb
inc
ret
roll
out
lcall
jns
sub
lahf
clc
mov
mov
sbb
lock
sub
adc
and
push
dec
repnz
jp
or
pop
inc
cmp
ret
mov
dec
aaa
push
dec
insl
ficoml
and
shlb
mov
cmp
jge
mov
or
push
xor
fstpt
xchg
scas
or
cmp
in
lahf
sahf
push
aaa
mov
xchg
fneni(8087
lods
xchg
test
cltd
jo
push
dec
imul
xchg
std
xor
movsb
jg
dec
xchg
fcmovne
iret
enter
lods
dec
std
mov
fwait
or
outsl
pusha
sub
fcoms
lret
pop
orl
hlt
fistpl
sets
lcall
mov
mov
rcr
movd
jnp
out
push
cmp
mov
pop
jl
leave
mov
sub
lea
mov
inc
mov
jnp
loopne
push
in
cld
clc
push
sti
imul
adc
push
adc
aas
hlt
aad
jnp
icebp
jecxz
adc
adc
pop
das
lock
call
or
and
dec
push
rcrl
push
and
jae
pop
cmpsb
pop
into
fldenv
dec
fstpt
inc
or
aad
pusha
jge
fmuls
inc
or
sub
std
leave
jo
jae
fisttpl
pop
cs
mov
aas
stos
lret
out
rorb
lds
aaa
lock
fists
rcll
sub
xchg
fistpl
jnp
inc
insb
adc
and
icebp
xor
loopne
fstpt
dec
sbb
test
push
arpl
xor
mov
adc
arpl
xor
fstpt
sub
int
lcall
pop
aad
inc
xchg
fildl
ja
xchg
dec
in
inc
repz
int3
outsb
or
add
cmpsl
aaa
rcr
push
mov
iret
out
fisttpl
imul
int3
movsl
mov
pop
mov
in
bound
clc
roll
mov
into
xchg
insb
rcl
xor
add
and
inc
loopne
call
sbb
cmp
fisttpl
mov
incb
and
xchg
and
push
push
js
and
outsb
jecxz
xchg
fistpll
fcmovnbe
lret
sub
test
fucomp
pop
pop
movups
and
subb
popa
iret
stos
lcall
cmp
mov
and
lahf
mov
js
dec
out
call
dec
loop
aaa
inc
inc
sub
cmpsl
sarl
call
jle
sub
inc
or
dec
out
cmc
fildl
pusha
ss
xor
jl
add
xchg
cmp
jp
sbb
and
in
rcr
js
test
jge
jle
ficoml
mov
lret
cmpsb
add
dec
lret
push
add
adc
arpl
jns
fldt
leave
cmp
ja
push
fisttpl
and
insb
adcb
cmp
push
inc
loopne
iret
push
icebp
shll
movsb
inc
fs
pop
sbb
in
mov
xchg
in
sti
dec
movl
mov
inc
ret
rcr
push
pop
int
in
dec
fucomi
xchg
insl
pop
loop
pop
jno
out
aam
sub
mov
movsb
fildl
pop
in
pop
fs
pop
fcomps
xchg
add
jbe
sbb
icebp
sub
sbb
ficompl
imul
add
and
pop
loopne
cmpsb
test
mov
or
lods
inc
fistpl
push
iret
jmp
cmp
into
sub
add
cs
loopne
mov
mov
jae
push
push
out
dec
fstpt
pop
inc
xor
clc
movsl
push
ds
mov
gs
sbb
rclb
sti
jnp
pop
fisttps
xorb
jne
jp
mov
jmp
push
mov
mov
push
cmpsl
test
or
mov
shrl
sarl
push
test
or
imul
call
mov
and
jl
clc
icebp
inc
gs
jb
fildl
lret
aam
push
out
clc
and
std
xor
test
mov
mov
cld
ds
and
fists
xchg
sub
pop
jnp
fisttps
ftst
in
fmull
xor
adc
stos
jmp
mov
jg
fists
lcall
sahf
sbb
gs
fs
pop
repnz
stos
outsb
mov
pop
jecxz
xchg
in
dec
pop
iret
dec
lods
push
es
push
test
dec
mov
cli
xchg
subl
mov
enter
cmp
iret
fadds
mov
in
dec
stos
mov
imul
push
scas
lcall
push
out
pop
jecxz
stos
clc
jp
xor
xor
push
jmp
pop
test
roll
lahf
repz
sbb
jg
xor
imul
call
in
scas
or
push
repz
adc
and
hlt
push
dec
inc
inc
xlat
adc
loopne
dec
mov
jnp
imul
shll
push
cmp
dec
call
icebp
mov
popf
call
mov
push
sbb
pop
lahf
push
xchg
xchg
mov
fsubrs
ljmp
out
lods
hlt
sbb
jns
cs
inc
rcrl
jp
in
lock
stos
pop
inc
iret
xor
insl
xchg
fnstsw
lock
add
shll
fwait
stos
fsincos
push
lret
outsb
dec
pop
jo
sub
adc
dec
sarb
jmp
inc
inc
fwait
mov
fsubs
loopne
jne
pop
xchg
cmp
fisttpll
gs
leave
fstpt
aam
pop
and
addl
add
add
xchg
jecxz
mov
sti
mov
loopne
jp
outsb
mov
add
xchg
fdivl
mov
ret
je
into
aad
lods
xchg
jg
flds
stos
vpaddusb
rcr
bound
ret
out
loop
adc
fwait
rcr
mov
stos
dec
pop
nop
and
lret
fistl
lcall
shll
andb
fcmovnb
sbb
xchg
dec
fldt
fidivl
iret
jnp
or
jp
push
cmp
pop
pop
je
dec
cwtl
insl
adc
fisttpl
lds
mov
loope
call
add
and
dec
adc
pop
lods
pop
xchg
mov
stc
stos
jne
add
repz
pop
or
fstl
mov
cmp
mov
pusha
aad
incb
in
fcomp
push
pop
test
pushf
cmp
rcrb
filds
pop
adc
pop
movsb
xor
jg
popa
in
stos
inc
into
push
das
fcmovne
leave
jmp
inc
test
test
push
sbb
out
mov
pop
inc
daa
fdivrl
ret
pop
mov
aas
lret
or
add
mov
push
mov
out
cmpsl
cmc
fstpt
jno
mov
cmp
pop
sbb
popa
clc
aam
es
sbb
push
or
mov
and
dec
jp
jb
test
cmp
js
xor
fstpt
sub
or
imul
fsub
sbb
lcall
fstpt
jnp
lcall
jb
fisubrl
sbb
xor
enter
sbb
xchg
js
add
adc
and
lahf
xchg
loop
jnp
mov
lret
rcr
test
jae
pop
inc
inc
imul
cmp
adc
fidivl
cmp
stos
repz
fstl
aad
add
sub
enter
mov
pop
fcmovnbe
outsl
repz
inc
sub
into
fistl
mov
jge
pop
movsl
push
iret
fucomip
and
scas
push
pop
push
fnsave
jl
fs
repz
cli
dec
dec
mov
mov
fbld
add
cwtl
xor
imul
addr16
sbb
ljmp
inc
shr
fildl
fwait
jg
cmpsl
dec
pop
loopne
dec
shl
inc
lret
cmp
fildl
mov
and
fildl
sub
fldt
xchg
mov
fnsave
fidivrl
xchg
fldt
in
add
sbb
ljmp
and
mov
sbb
push
add
add
enter
pop
jg
adc
push
xchg
pop
movsb
rorl
ljmp
xor
and
cltd
fcomi
repnz
xchg
xchg
sub
mov
in
pop
gs
insb
sub
mov
dec
jmp
mov
dec
dec
mov
mov
xlat
inc
fcom
out
stos
sbb
pop
cmpsb
mov
movsl
inc
mov
in
mov
imul
xor
sub
and
push
data16
enter
dec
dec
fiaddl
les
test
call
pop
jmp
push
fistps
mov
sbb
fwait
enter
add
dec
imul
or
call
data16
icebp
cld
fisttpl
xchg
dec
into
fucomi
jp
adc
mov
jbe
and
adc
jge
xchg
fildl
nop
jb
cmp
in
push
movsl
ds
mov
push
push
mov
sub
mov
inc
ret
test
lret
or
dec
outsb
mov
aaa
and
in
adc
iret
mov
sbbl
push
fldt
faddl
push
jno
iret
int3
fld
mov
xchg
in
pop
mov
xlat
inc
insb
pusha
lods
or
xor
add
mov
mov
jb
pushf
loopne
test
orl
add
int
xor
dec
cmp
fistpl
xchg
in
imulb
fisttpl
push
sar
nop
iret
jno
sub
aam
test
subb
add
ljmp
sub
jge
into
jb
insl
fstp
loopne
cwtl
mov
pop
les
insb
enter
mov
inc
fistl
inc
dec
movsb
sub
jge
adc
xchg
adc
test
and
inc
scas
push
mov
loopne
filds
pop
cmp
cmp
mov
mov
sahf
cmp
push
mov
cmpsl
mov
sub
test
adc
js
test
xor
test
stos
xchg
adc
test
and
cmp
xchg
pop
cli
pop
jo
dec
xchg
lods
fcmovnbe
sahf
aaa
daa
scas
ret
call
lret
mov
mov
clc
adc
pop
movzwl
mov
inc
mov
jne
cwtl
stc
fildl
mov
push
call
cmp
mov
fisttpl
rcrb
mov
std
cmp
mov
out
jbe
pop
loop
repnz
pop
shl
call
pop
cli
xor
loop
clc
xchg
sub
mov
fdivs
bound
popf
lret
xchg
test
lcall
les
notb
pop
es
pop
sub
pop
in
jb
movsb
adc
pop
sbb
pop
dec
fldt
dec
push
out
adc
xchg
mov
pop
xor
xchg
stos
jp
or
out
jns
divb
jmp
mov
mov
test
mov
pop
in
cmp
push
fistpl
xor
lock
jp
in
neg
add
pop
mov
sti
pop
adc
lret
das
fildl
add
imul
fldt
jle
loope
adc
fucomi
repnz
sbb
lods
adc
push
cmp
xchg
aam
xor
mov
mov
jne
fsubl
add
xchg
loopne
lea
lret
xchg
sub
popa
in
aam
icebp
and
in
fildl
pop
nop
mov
inc
insl
pop
sub
and
inc
xchg
imul
lcall
fstpt
xchg
iret
popa
adc
xchg
pop
imul
daa
cli
testl
add
jb
dec
lret
mov
add
in
cmpsb
call
into
daa
dec
jl
icebp
mov
rol
fndisi(8087
stc
out
fmul
movsl
or
pop
inc
dec
cmp
or
push
shll
xor
mov
popf
xchg
pand
mov
es
pop
mov
bound
into
rcll
mov
inc
sbb
mov
adc
js
sbbl
mov
mov
fstpt
iret
lret
out
mov
das
pop
push
dec
int3
pop
gs
xor
arpl
fcmovu
xchg
dec
outsl
cltd
xor
mov
scas
aaa
sbb
adc
cmp
xchg
mov
xor
lret
iret
insl
fldt
xor
std
fstpt
or
in
mov
addr16
lret
ljmp
rcrb
out
push
mov
fistpl
in
lock
or
xchg
loopne
cs
fs
fwait
rcrb
sub
bound
into
jnp
cltd
mov
mov
fildl
inc
inc
in
xchg
mov
aas
jmp
std
inc
adc
decl
imul
mov
jg
xchg
push
and
mov
sahf
cmpsb
add
lcall
loope
pop
fucomi
xor
into
xchg
jo
sub
daa
stos
mov
daa
or
rcr
notb
sub
shl
sub
push
sbb
jb
push
cmp
stos
dec
rclb
jne
mov
cmp
fldt
aam
add
sbb
jo
pop
fistl
adc
jg
and
xor
pop
inc
fcoml
int
push
sbb
xor
dec
fistl
mov
mov
fucomi
inc
ret
bound
or
cmc
sbb
fildll
and
xchg
dec
out
jp
fwait
dec
js
and
jmp
sbb
sub
pop
pusha
test
mov
inc
lods
sub
pushf
xor
insl
sbb
cmp
fstpt
jne
mov
mov
pop
lods
add
cmp
sbb
ret
repnz
mov
mov
sub
xchg
cmpb
fcmovnu
or
enter
iret
xlat
xchg
dec
sub
inc
sti
enter
push
repnz
out
cmp
stos
pop
adc
push
outsl
in
sbb
or
out
mov
adc
lahf
call
lock
lods
js
in
dec
lods
shr
mov
cmpsl
adc
push
imul
cmp
push
ds
sub
xor
xchg
mov
pop
dec
clc
fwait
cmc
pop
stos
aas
xchg
jecxz
add
rorl
mov
sahf
lods
dec
push
pop
mov
call
mov
in
ret
jmp
scas
orb
cmp
xor
sbb
out
jle
sbb
rcr
sbb
inc
lea
and
sbb
sub
push
imul
mov
sbb
cmp
loopne
pop
in
xor
ljmp
mov
stos
fcmovne
lahf
out
add
or
imul
or
dec
jp
sub
sub
ds
jno
data16
dec
inc
ret
dec
cmp
fistl
out
inc
cltd
pop
stos
leave
fistl
and
into
fistl
daa
xor
sbb
pop
jge
mov
mov
mov
cmc
jo
fisttpl
ret
and
cwtl
jmp
dec
lods
mov
cmp
rcrl
sub
xchg
mov
call
in
xor
jo
xchg
fwait
popf
stos
popa
sub
push
push
cld
sbb
fisttpl
xchg
insl
jo
mov
in
xchg
ja
mov
pushf
outsl
in
push
push
fistl
out
fsubrl
cmp
push
inc
push
sub
adc
into
fstp
in
scas
inc
cmc
push
sbb
mov
xor
call
fmull
mov
ja
fiaddl
fstpt
std
fistpll
jmp
fucomi
mov
in
fnstcw
adcl
sbbb
dec
lods
or
test
lock
inc
jb
xchg
sbb
fildl
insb
mov
mov
mov
inc
add
mov
sbb
cli
adc
mov
adc
xor
dec
fistl
mov
fisubrs
sub
mov
fucomi
cmp
mov
stos
mov
jecxz
out
imulb
xchg
or
stc
push
mov
mov
push
dec
int3
xor
mov
or
lret
mov
xor
mov
jne
adc
je
push
lret
outsl
pop
imul
mov
in
lahf
dec
pop
repz
sti
fisttpl
push
hlt
in
fldt
daa
and
mov
sbb
mov
dec
pop
jb
or
ret
jnp
cmp
xlat
loopne
fistps
cs
in
jnp
daa
loop
dec
xchg
jle
xorl
enter
lret
pop
in
inc
sbb
inc
push
sbb
mov
pop
in
fcomi
ret
lea
xchg
fistpl
fbld
aas
outsb
imul
dec
sbb
fwait
adc
mov
adc
jae
add
mov
nop
pop
jns
sub
fcmovnbe
add
ret
adc
jbe
fimull
push
in
scas
scas
sbb
fwait
test
pusha
adc
loope
clc
nop
add
pop
xchg
leave
fwait
insl
gs
enter
adc
jg
pop
push
ror
leave
mov
call
shl
popa
dec
mov
mov
xchg
jae
lahf
mov
add
inc
mov
push
or
xchg
call
shll
pop
jo
or
insb
ss
cltd
push
fcmovnb
jns
mov
xchg
xchg
push
xchg
jnp
pop
cltd
dec
mov
fcmovnb
popa
repz
rcr
jecxz
pop
popw
push
dec
dec
fildl
push
or
push
hlt
loopne
scas
jl
addl
push
fs
sbb
cmpsb
lret
cmpsl
mov
xchg
shlb
andb
cli
outsb
or
ljmp
adc
and
mov
pop
test
andps
cmp
sub
insb
or
andl
int3
movsb
fisttpl
jg
jo
lods
jl
or
stos
cli
lcall
xor
arpl
mov
xchg
lcall
call
push
fwait
mov
pop
add
or
mov
fmul
pusha
xchg
jp
cmp
mov
clc
cmp
fisttpl
out
stos
addr16
xchg
in
mov
stc
mov
rorb
add
enter
jno
mov
mov
bound
fcomi
mov
push
xor
mov
adc
sarb
dec
push
outsb
sub
pop
imul
and
mov
pop
mov
aas
fisubl
mov
pop
lock
jnp
mov
test
fstpl
add
imul
stc
dec
inc
lock
mov
jmp
out
push
dec
subps
je
fldt
shrl
push
aad
sub
sbb
xchg
mov
js
lds
shl
jnp
mov
call
dec
stc
mov
aas
pop
clc
mov
addr16
enter
outsb
loop
xchg
into
pop
adc
mov
jb
mov
xchg
scas
jae
push
fcmovne
cli
mov
mov
gs
lds
lret
test
test
or
loope
loopne
jl
ljmp
dec
popa
push
mov
jae
fsub
stos
scas
insb
jo
gs
pop
ja
xor
mov
sti
aaa
loop
dec
fcmovne
cmc
out
ss
aad
shr
sub
adc
cmp
push
fwait
xor
jne
int
imulb
icebp
fnstenv
xchg
popf
clc
fldt
test
sbb
push
call
cli
add
loope
pop
bound
pop
movsb
cmp
imul
fiaddl
jne
fcmovne
xchg
sahf
lods
cltd
fstp
scas
adc
jp
add
and
dec
pop
icebp
push
adc
dec
les
jmp
push
fstpt
rcr
fsubs
or
imul
fildl
and
sbb
cmpb
in
fisttpl
iret
popf
xchg
add
jb
jne
sbb
bound
stos
aam
cmp
in
fstp
xchg
pop
pop
scas
fists
loop
dec
cltd
mov
dec
test
js
push
mov
mov
and
and
loopne
popf
jg
pop
fistpl
jmp
mov
mov
loopne
xchg
jecxz
insl
jno
cmp
xor
sbb
cld
ret
add
adc
out
jle
fcmovnbe
repnz
xor
inc
mov
aam
xchg
mov
fucomi
out
dec
or
cmp
fildl
xor
mov
mov
fucomi
cmp
js
fisubl
fistpl
inc
and
loopne
and
out
pop
popf
pop
add
fisubrs
adc
sti
ret
call
mov
mov
mov
orl
popa
mov
jnp
divl
mov
fcomi
out
sbb
fildl
sbb
push
cmovns
cmc
adc
fwait
rol
pop
test
inc
fistl
stos
inc
mov
mov
dec
mov
fucom
ret
cwtl
lods
icebp
inc
cld
cmp
dec
jge
xchg
and
repnz
addr16
mov
cltd
ficoml
arpl
sbb
push
mov
xlat
ss
mov
cltd
aaa
ja
and
mov
pop
adc
mov
pop
jbe
and
fildl
jb
fstl
xchg
lcall
out
fisttpll
pushf
cmp
or
sub
or
dec
in
fldt
test
call
rcrb
inc
cmp
cmp
rcr
xor
imul
ficoml
fistpl
push
and
popa
aad
xchg
push
jmp
adcl
push
add
fcmovnbe
inc
jp
lret
aad
push
and
in
movsb
loopne
loopne
pop
sub
pop
ret
pop
shrb
dec
dec
mov
and
enter
mov
xor
rolb
in
negl
ret
iret
into
sti
call
insb
jnp
shlb
xchg
loopne
add
movsb
xchg
cmp
loopne
int3
loope
in
sbb
add
fistpl
cmp
adc
repnz
dec
sbb
push
push
mov
aaa
lret
mov
fimull
push
mov
stc
jp
fwait
inc
lahf
sbb
mov
sbb
dec
rcrb
adc
popa
in
fstp
pop
xchg
ja
aad
pop
andl
fcmovnb
outsb
dec
push
ret
out
imul
xlat
xchg
xor
ja
inc
xor
test
fistl
sti
xchg
or
or
jmp
sbbb
ja
pop
rcr
mov
cmp
ret
mov
iret
loop
outsl
cmp
js
jecxz
pop
rcrb
mov
sbb
cwtl
or
das
inc
jnp
push
sbb
fstpt
pop
sbb
repnz
ret
jmp
sbb
adc
test
and
mov
fimull
sbb
insb
cmc
fcomps
jns
clc
and
sti
andb
mov
pop
push
cwtl
shll
stos
dec
mov
cli
xor
flds
xor
cmp
cmpl
das
mov
fnsave
fdivrl
mov
xchg
cmpsl
fsubrl
jp
cli
stos
fs
or
popa
or
out
lods
sbb
sub
xor
push
pushf
sti
or
ljmp
adc
mov
stos
movsb
xchg
or
jecxz
xchg
roll
repnz
sub
orl
sbb
stc
push
push
inc
test
rclb
or
sub
iret
insl
xchg
stos
loopne
pop
sub
or
andl
js
dec
outsl
arpl
fnclex
rorb
fcmovnu
add
mul
in
push
fbld
int3
sbbl
clc
bound
pop
mov
call
and
callw
mov
push
pop
in
outsl
lret
cwtl
sbbb
out
inc
dec
mov
ss
lahf
fisttpl
or
vmovapd
and
mov
aad
xchg
loopne
cmpsb
testb
imul
xor
push
and
jmp
int3
or
add
lods
mov
push
jo
mov
push
icebp
loope
clc
mov
js
xlat
sub
rcr
aas
fwait
pop
pop
jnp
xlat
mov
test
movsb
push
pop
jle
out
dec
dec
dec
or
jae
adc
nop
in
jno
fildl
push
xor
call
ljmp
mov
test
dec
sahf
pop
jmp
fwait
movsl
scas
mov
fistpl
mov
mov
loopne
or
dec
vpand
imul
dec
cmp
fcmovne
sti
dec
inc
icebp
popf
pop
jns
scas
imul
in
cmp
insb
rolb
mov
cmpsl
bound
pop
mov
bnd
fld
lret
data16
mov
add
mov
push
outsl
fcmove
mov
rol
inc
mov
pop
adc
pop
std
jo
jno
sbb
movsb
push
jmp
cmp
push
adc
adc
lods
nop
fistl
jns
icebp
rcr
cmp
pop
xchg
sbb
fistl
or
in
mov
mulb
repnz
pop
call
fldt
add
fistpl
shrb
dec
xor
ret
ss
test
xchg
sbb
movb
fidivrs
ficoml
add
add
loopne
adc
mov
neg
jbe
mov
and
clc
ret
mov
fistl
push
mov
call
and
push
cmc
sbb
es
and
inc
pop
rcll
jb
cld
mov
mov
push
fwait
jnp
fcmovnb
xchg
pushf
sahf
xor
icebp
lds
stos
mov
mov
xchg
ret
fadd
mov
mov
xor
hlt
cmpl
cli
lcall
addb
sub
and
daa
or
mul
lds
lcall
insb
or
sub
push
or
ja
fistl
pop
jmp
add
popa
or
int3
inc
jecxz
pop
or
pop
fldt
adc
enter
jge
push
adc
int3
fcmovne
das
adc
cmpsl
lahf
imul
fistpl
xchg
movsb
xor
in
jns
or
or
adc
in
pop
fcompl
data16
addr16
mov
enter
stc
fildl
push
test
fildl
ss
dec
pop
push
sub
push
fdivs
inc
fldt
test
in
sarb
mov
mov
mov
add
inc
stc
test
std
pop
rcr
pop
fs
push
bound
out
sti
push
push
jmp
push
fcomi
cli
test
mov
movsl
push
dec
out
dec
add
adcb
insb
jns
aad
loope
das
jecxz
mov
jl
or
ljmp
repz
mov
mov
sahf
fcomip
add
jnp
imul
xchg
xor
loop
mov
lods
fistl
cmp
push
push
mov
mov
lcall
jmp
test
clc
dec
jnp
mov
fstl
sub
dec
fwait
and
fistpl
xchg
mov
imul
mov
mov
aas
cmp
pop
jno
int
mov
lahf
fcmovne
cltd
xchg
xor
push
mov
cmp
push
cld
into
sbbl
stc
in
clc
pop
pop
fstpt
jg
repz
cld
sub
push
mov
xor
pop
mov
aaa
cmpsl
cmp
rcr
call
inc
sti
sub
pop
dec
push
or
call
sub
mov
cld
adcl
fstpt
fisttpl
xchg
jbe
leave
nop
adc
clc
imul
fistpl
push
ficoms
pop
adc
test
cld
or
in
jbe
or
fcomps
fstpt
jge
pop
cmp
fldt
push
dec
rolb
incl
out
repnz
cld
lods
mov
mov
call
js
xor
jecxz
cmp
fisubl
xor
sbb
shl
push
cmpb
push
or
xchg
leave
stos
cmp
fildl
push
clc
shrw
pop
sub
sbb
call
xchg
push
push
sub
daa
pusha
subl
stos
loopne
sbb
xor
fildl
fmulp
dec
lds
cltd
sti
sbb
mov
dec
push
mov
bswap
ljmp
mov
push
or
push
push
xor
loopne
lea
imul
fisttpl
mov
popa
cli
int3
sarb
pop
subps
repz
inc
ret
cmpsl
jno
push
inc
push
repnz
mov
mov
pop
jnp
sbb
mov
subb
push
cmp
fisttpll
std
fldt
testb
out
sub
pop
or
lahf
mov
cld
mov
inc
or
rcrl
mov
push
iret
fistl
cli
popf
movsl
stos
pop
rcrb
bts
fildl
pop
push
or
xchg
add
mov
jp
cltd
xor
sbb
xchg
loope
adc
data16
adc
xor
test
jmp
and
pop
add
mulb
push
lock
sahf
sub
xchg
xchg
jno
inc
mov
test
rcll
fisubrl
or
jns
xor
jo
mov
je
xchg
icebp
cmc
fldt
fmuls
add
jp
mov
add
fcomi
pop
test
push
insl
push
and
cltd
mov
idivb
out
push
and
mov
inc
stos
mov
or
vpsubsb
cmp
ror
xchg
jp
pop
dec
fucomp
mov
inc
xchg
pop
inc
fldt
inc
popf
fisttps
mov
sti
loopne
mov
sbb
push
mov
add
fimuls
sbb
fstps
repz
fstl
hlt
mov
int
mov
cs
adc
mov
aad
inc
sarl
jae
dec
sbb
scas
add
or
fwait
cmpsl
enter
and
cmp
push
mov
fstpt
mov
xchg
insl
lret
nop
fisubl
rep
mov
pusha
cmp
push
mov
stos
sbbb
aad
jne
lods
popa
in
or
cmp
mov
push
lds
clc
and
jecxz
stos
fstpt
pop
push
in
mov
sbb
add
xchg
xor
jns
jbe
imul
test
mov
insl
mov
lret
lahf
sbb
sbb
movb
xchg
inc
push
dec
sarb
push
sub
dec
inc
mov
fisttpl
cmp
aam
into
adc
sahf
arpl
out
mov
mov
lret
add
lds
push
jnp
or
jmp
xchg
add
pop
xchg
cli
sbb
testl
out
push
jg
loope
push
data16
stos
repz
inc
sbb
scas
adc
xor
or
sbb
cs
cmpsl
fistpl
sbb
aas
inc
sub
cmp
push
xchg
fld
test
push
aas
cmc
mov
pop
lcall
fistl
dec
xlat
out
lret
push
inc
std
add
push
pusha
xor
or
and
adc
les
lods
pop
xor
xlat
mov
push
leave
sarl
jno
aaa
stos
adc
popf
push
sarb
test
mulb
cmp
xor
mov
cmp
insl
icebp
fsts
testb
mov
test
xchg
pop
scas
clc
ljmp
inc
and
jae
dec
dec
push
fwait
dec
stc
add
jmp
outsb
add
je
and
jbe
jnp
cmp
push
in
fstp
arpl
pop
dec
outsl
jnp
mov
xchg
mov
ficoml
fcomip
sbb
aaa
and
icebp
push
fistpl
test
in
mov
fisttpl
jp
ja
fistl
loope
cmp
int
fisttpl
sub
out
icebp
lock
or
sub
pop
push
pop
in
lods
pop
cmp
sbb
sbb
sub
ljmp
sbb
arpl
push
push
cmp
ret
shl
sbb
pop
das
stos
ss
push
fisttpll
paddsw
push
jno
testb
sti
lods
xlat
cmpsl
std
add
hlt
ret
dec
dec
pop
gs
test
lea
sbb
pop
rcr
adc
pop
imull
dec
lahf
or
sbb
cmp
sbb
fldt
fists
out
fstpt
and
pop
mov
pop
nop
shrl
loopne
in
sub
jo
leave
js
add
sbb
sahf
push
dec
mov
jo
cli
sbb
sub
addr16
rcr
jae
or
adc
mov
shll
push
lret
jecxz
sbb
xchg
jns
lcall
push
jp
fwait
xor
fwait
mov
inc
cmp
int
push
clc
inc
mov
insl
lods
push
mov
out
popf
mov
push
leave
jp
push
mov
into
lods
enter
lcall
lods
hlt
inc
inc
push
arpl
stos
inc
sub
xchg
les
je
cmp
inc
xlat
jp
dec
cmp
rorb
inc
bound
js
test
lret
and
nop
xchg
incb
pop
out
cli
fsub
lcall
xor
ret
iret
dec
into
enter
insb
pop
and
and
mov
insl
adc
repz
jl
mov
xchg
ds
loopne
push
movsl
jno
in
cwtl
in
and
aam
pop
mov
push
or
add
ret
mov
jne
je
pop
scas
pop
test
cld
sbb
dec
push
xor
jnp,pt
jns
xor
dec
push
fistl
dec
loope
xor
xlat
fimull
xchg
outsb
mov
xchg
mov
sub
iret
in
cmp
test
mov
xor
cmp
std
jg
popa
stos
test
fcmovnbe
sub
cmp
jecxz
jle
adc
aad
lcall
jnp
inc
inc
jecxz
push
shl
sub
xchg
fdivs
mov
mov
outsl
jge
add
or
into
fucomi
ja
arpl
lret
outsb
mov
mov
loope
dec
fcmovnbe
inc
inc
aaa
iret
repz
pop
jp
pop
sbb
jl
xchg
scas
das
lods
mov
movsb
sub
daa
int3
jae
stos
mov
loopne
sbb
imul
stos
mov
divl
push
cmp
and
push
ja
sub
out
jg
pop
pop
dec
mov
fistl
jo
jmp
push
sbbb
ret
mov
test
adc
xchg
cwtl
push
fistpl
fdiv
xor
mov
cmp
sub
aaa
adc
adc
fldlg2
mov
and
inc
mov
xchg
sub
inc
cli
inc
std
adc
fistpl
loope
xchg
xlat
xor
int
mov
jg
xchg
insb
inc
dec
pop
xor
call
cmp
inc
cld
mov
dec
pop
fisttpl
sahf
in
lret
rcr
mov
mov
sbb
cmp
sti
mov
jecxz
mov
jge
fstpl
ret
inc
inc
clc
pop
ljmp
mov
push
call
push
ficompl
rcrb
daa
inc
dec
pop
fsubl
test
in
xchg
mov
push
pop
dec
hlt
shll
das
push
fcmove
mov
inc
push
jb
in
mov
lcall
sub
cmp
cmpsl
je
call
mov
xor
daa
mov
jo
shll
jmp
xor
jno
or
push
cmp
sbb
cli
jo
dec
pop
add
xor
fisttpl
test
push
pop
xorl
jbe
sbb
pusha
hlt
cmpsl
adc
xchg
fldcw
fsub
or
fs
mov
push
fsubrl
clc
ds
push
loope
sti
mov
and
add
daa
mov
or
cwtl
xor
dec
sub
jg
dec
mov
iret
stos
cmp
sbb
xchg
jbe
pop
mov
jecxz
add
fldt
sbb
adc
xor
leave
cmpsl
cld
insb
loop
push
inc
pop
jmp
int
fnsave
pushf
leave
in
sbb
cmp
repnz
jno
jae
inc
popa
clc
mov
aam
pop
in
out
mov
xor
inc
sub
or
daa
call
mov
mov
lock
in
cmpb
fisubl
fcmovnb
jo
cwtl
mov
xchg
dec
fistpl
sbb
fstpt
enter
mov
mov
or
mov
dec
imulb
push
inc
les
int3
and
cltd
xor
xor
sub
loope
xchg
pop
xlat
sahf
or
in
push
sbb
pushf
arpl
fidivrl
jns
cmp
sbb
int3
mov
add
push
aaa
xor
fildl
iret
sub
cmpsb
test
mov
paddusw
mov
repz
sbb
fildl
xchg
xchg
sti
loopne
jge
pop
addr16
inc
cmp
fstpt
add
rolb
in
ja
pop
mov
xchg
icebp
pop
lock
aas
sbb
cltd
cmp
mov
cmpsl
lods
jo
xor
pop
mov
jp
push
sub
mov
pop
sub
fisttpll
mov
fisttpl
jp
adc
jmp
incl
loopne
sub
call
jnp
shr
xchg
in
clc
cmpb
in
dec
dec
xor
cmpsb
fidivl
addr16
cli
sbb
sub
pop
push
cmp
outsb
leave
or
sub
xchg
xchg
jle
cmpsb
hlt
lcall
notl
jnp
test
mov
dec
pop
jns
or
push
lods
ja
idivb
add
xor
stos
fdivp
dec
pop
xor
dec
push
flds
or
mov
aas
loope
dec
stc
and
ficompl
aaa
cltd
std
pop
jns
fistl
mov
jl
jmp
inc
mov
mov
lret
outsb
mov
sahf
cmpsl
or
sbb
fdivrl
into
fldt
push
mov
add
sub
xor
lcall
sbb
clc
xchg
rorb
aaa
cmpsb
mov
je
shrl
adc
mov
pop
fprem1
push
in
sbb
add
fnsave
mov
jae
ss
call
inc
sbb
push
mov
cwtl
or
jbe
or
sub
mov
sub
fsubrs
fstpt
mov
pop
sbb
jmp
push
and
lds
mov
adc
jno
fidivs
insb
mov
push
mov
push
outsl
test
fmuls
lcall
fucomi
into
sbb
add
pop
mov
movsl
fstpt
inc
dec
js
sbb
xor
dec
jecxz
clc
lea
imul
fistl
mov
pop
adc
test
fildl
inc
sbb
loop
hlt
lods
enter
push
add
fstpt
mov
sahf
sub
in
call
lret
pop
mov
fstl
addr16
ret
negl
out
mov
sbb
loop
push
inc
xor
int
cmp
fistpl
adc
test
xchg
adc
fldt
mov
scas
into
dec
jb
iret
test
jecxz
cwtl
mov
pop
aas
and
and
popf
fstpt
sbb
in
fidivrs
inc
and
cmp
fldcw
and
fildl
fistpl
mov
mov
cmpsl
mov
pop
pop
bound
and
frstor
stc
jae
lcall
xor
push
das
daa
lock
xchg
shr
outsb
movsb
aam
loopne
mov
or
out
cmp
fldcw
jns
sbb
jo
leave
sbb
fldt
push
flds
and
inc
test
gs
push
fstpt
fnsave
shll
popa
jp
stos
pop
add
and
push
jle
pop
inc
std
add
call
sub
leave
data16
cmpsl
negb
ljmp
bnd
sub
push
pop
aam
or
cmpl
mov
push
inc
daa
sbb
cmp
insl
adc
mov
jecxz
shll
add
fistpl
int3
cmp
add
mov
mov
inc
ret
cmp
fldt
loope
push
inc
mov
xor
icebp
mov
fstpt
lret
sti
pushf
xchg
adc
sbb
mov
inc
stos
mov
imul
insl
fstp
inc
movsb
sarl
shl
stos
movsl
xor
shrb
fldt
mov
jne
push
int
cmp
add
call
cmp
mov
cli
into
gs
ficompl
or
call
xchg
xor
mov
or
sub
and
imull
inc
mov
add
xor
scas
mov
mov
fucomi
inc
cs
rol
pop
cmp
faddl
stos
mov
fbld
mov
les
fstpt
jo
sub
pop
sbb
fdivrl
fisttpl
lcall
xor
test
fadd
xchg
and
outsb
daa
mov
xchg
aaa
or
dec
pop
fistl
enter
cmpl
js
loopne
xchg
inc
gs
or
ret
mov
adc
dec
hlt
fisubrl
daa
lahf
or
xor
push
lock
mov
cld
xlat
jnp
pop
sub
xchg
popf
fldt
inc
adc
call
pop
adc
fistpl
dec
repnz
lods
mov
js
in
or
clc
in
stc
sbb
cmp
dec
xchg
ss
fistpl
out
sbb
scas
inc
clc
add
cmp
pushf
cli
fldt
imul
mov
and
lret
mov
aad
lcall
ljmp
jp
pushl
aaa
cmp
movsl
subl
popa
pop
fcompl
pop
out
fstp
add
aad
sub
mov
fstpt
or
cltd
cmp
test
fninit
into
rcll
mov
mov
mov
decb
aas
mov
mov
jp
push
out
cmp
test
inc
sarb
sbb
pop
xchg
lods
or
push
das
cltd
loope
loopne
fistl
ss
jne
fcomp
mov
gs
xchg
inc
push
adc
jbe
dec
push
daa
inc
and
sub
inc
sbb
imul
lret
push
nop
out
cwtl
mov
mov
mov
enter
jl
test
bound
fistl
stc
fcomi
xor
sbbl
lahf
fiaddl
jle
aas
mov
fcmovnb
xor
aad
out
inc
sbb
clc
adc
dec
push
js
pop
fldt
mov
cmp
pop
mov
jno
fimuls
loop
mov
mov
rcrl
cli
mov
scas
popf
test
das
fistl
ss
movsl
push
jno
mov
push
adc
rcl
xchg
mov
or
in
and
pop
add
aad
repnz
sbb
mov
imul
fildl
or
cld
fildl
dec
and
fidivrl
fildl
and
lahf
jns
repz
sub
addps
mov
clc
arpl
mov
pop
cld
xor
das
sbb
insl
lret
idivl
sti
mov
mov
fimuls
pushf
rcrb
adc
inc
outsb
sti
pop
jbe
lds
mov
mov
adc
and
std
or
xlat
adc
inc
ficoml
mov
xchg
jb
sbb
movsl
aas
inc
int
fldt
sbbl
je
or
fstpt
cli
pop
mov
daa
inc
enter
out
xor
fdivs
gs
mov
js
cmc
frstpm(287
inc
leave
xchg
cmp
sbb
mov
outsb
mov
les
mov
test
gs
call
sub
ss
inc
loopne
push
mov
outsb
stos
cmp
adc
test
sbbb
jle
pop
into
iret
jl
ja
xchg
adc
rcll
rcr
nop
cmp
pop
push
loopne
stos
into
mov
jmp
insl
mov
iret
fldt
enter
sbb
mov
xchg
call
fistpl
or
fldt
inc
stos
leave
movb
movsl
sbb
add
mov
div
cmpl
movsb
sarb
pop
icebp
xchg
xor
fisubrl
mov
sub
ss
in
fucomi
jge
jl
mov
push
adc
loop
movsl
cwtl
inc
mov
out
lret
mov
push
out
test
int3
jnp
sti
push
xlat
mov
nop
fs
jnp
imul
loopne
int
stos
sbb
jnp
fstpt
jo
ja
ss
cmp
push
push
test
lcall
rol
cmp
jmp
imul
popa
js
rcr
outsl
push
jmp
push
lret
aam
sbbl
les
aad
movsl
mov
sub
push
xchg
addr16
or
lret
push
bound
lods
fistl
jnp
mov
aaa
xchg
jae
pop
dec
aas
or
mov
sbb
iret
jge
outsb
fnclex
test
sbb
stos
call
vmwrite
mov
sbb
pop
and
mov
mov
mov
inc
ds
frstor
ljmp
push
jg
and
mov
cmp
dec
adc
stc
pop
add
loopne
xchg
fimull
out
les
sub
push
or
push
data16
int3
daa
test
aam
xchg
fcomi
sbb
lock
jmp
dec
push
stos
adc
add
sub
ret
lock
call
add
push
push
stos
in
cwtl
sub
mov
push
outsl
rcl
gs
sbb
js
test
outsb
mov
add
rep
aam
fistl
mov
mov
cwtl
fistpl
nop
sbb
xor
pop
stos
mov
aam
or
lods
dec
aad
imul
adc
mov
das
pop
cwtl
and
fwait
divl
mov
xor
or
aad
jp
cmpl
cmp
mov
fnsave
jge
push
movsb
sub
xor
xchg
stos
sarl
jmp
ds
fadd
loop
es
or
sbb
or
or
aas
js
minps
testb
mov
xor
iret
lds
xchg
inc
icebp
lcall
sbbb
push
jne
repnz
push
jno
std
out
add
in
lret
sbbb
bound
scas
lcall
add
sbb
xchg
pusha
xor
or
rclb
out
sub
in
mov
lods
pop
or
jae
push
mov
fisubrl
fistl
fadd
test
xor
xor
xchg
push
fsubrl
pop
jns
xchg
pop
cwtl
je
dec
in
call
aaa
fwait
stos
push
in
and
loop
roll
push
push
push
jno
aaa
ss
or
repz
push
xchg
shl
or
xor
mov
mov
and
insb
dec
data16
hlt
xchg
scas
add
pop
xor
inc
fwait
cmp
stos
jne
xchg
cs
jl
test
xchg
inc
insl
mov
lcall
jb
mov
loopne
push
iret
lods
scas
add
out
cmpb
mov
sarl
pop
adcl
lahf
lods
push
jmp
repnz
punpckhbw
fiaddl
aaa
push
movsl
pop
jg
imul
cltd
pop
xchg
minps
lea
cmpsl
call
movsb
mov
into
push
push
dec
dec
ficoms
clc
ja
push
pop
in
xlat
pusha
nop
or
stos
mulb
std
xor
cmc
push
aaa
jnp
stos
xchg
arpl
hlt
repnz
lcall
push
fimuls
aaa
test
popa
lea
fs
mov
fnstenv
stos
sbb
xor
add
push
or
and
xchg
pop
inc
lahf
mov
pop
mov
fistpll
imulb
mov
mov
mov
jmp
mov
inc
lods
push
dec
test
or
xor
add
xor
ljmp
clc
pop
jecxz
jnp
in
mov
or
insl
lcall
daa
dec
dec
dec
js
cwtl
nop
mov
jmp
mov
or
lods
cmp
stos
xchg
pop
lret
cmp
fsin
push
cmp
xor
adc
sahf
test
loop
sub
pop
out
cltd
stos
nop
xor
push
or
addr16
jmp
inc
pop
mov
inc
mov
adc
xchg
int
psubd
cmp
lods
fbstp
das
icebp
xor
pop
ret
inc
mov
jecxz,pn
fiaddl
pop
call
mov
stos
inc
ficomps
stc
cmpsl
lcall
cmp
aam
adc
dec
test
addr16
xchg
push
ljmp
hlt
xchg
and
in
lods
loop
ficompl
out
sar
mov
lods
sahf
mov
icebp
orl
and
cmp
loopne
test
outsl
lcall
fildl
test
jbe
mov
fcmovnbe
lret
ljmp
ss
testb
mov
fbld
sub
xor
fstpt
and
inc
mov
fidivs
xchg
test
xor
xlat
jb
subl
mov
dec
popa
clc
push
xchg
xchg
fisubrl
jmp
inc
push
scas
adc
push
mov
lods
cmpb
loop
popf
xor
mov
fldt
test
arpl
jno
outsl
addr16
dec
jae
pop
cmp
jp
rol
add
xor
sbb
push
inc
cmp
fcomi
sub
mov
push
sub
insl
js
inc
jmp
pop
ss
mov
xor
out
test
xchg
jae
xchg
xor
out
cwtl
push
push
push
lahf
rcr
jnp
fld
lcall
mov
lret
cmp
mov
test
imul
loop
outsl
fs
cmp
jnp
mov
fildl
xor
std
xlat
mov
cmp
sbb
xor
lret
mov
je
pushf
pop
mov
gs
test
ljmp
cmp
lret
fstpt
push
lea
adc
dec
sub
test
negl
dec
fwait
sbb
fcmovne
js
sub
jp
popf
cltd
mov
mov
popf
loopne
inc
sub
cmpsb
pop
sub
or
jle
inc
jne
test
mov
repz
jp
cli
hlt
mov
aas
fimull
xchg
and
fisttpl
fistl
or
fidivrl
mov
clc
lds
sub
loop
fstpt
or
mov
adc
push
cli
xor
test
cld
pop
loop
xchg
or
ret
test
or
jecxz
loopne
xchg
add
mov
xchg
rcr
xor
mov
adc
pusha
xlat
pop
add
sub
fsubrp
fistpl
push
push
push
arpl
push
frstor
add
sub
int
outsb
scas
das
mov
pop
cmp
fistl
xchg
sub
testl
dec
insb
jno
in
fst
mov
dec
pop
mov
or
test
mov
mov
add
ds
pop
les
inc
fwait
push
cmpsl
lret
out
insb
mov
mov
sub
jp
scas
rcrb
adc
xchg
mov
repnz
fldt
hlt
pop
inc
mov
pop
fldt
icebp
stos
std
iret
mov
mov
ja
jmp
es
sbb
fistl
mov
pop
sub
jecxz
jmp
les
xor
push
jns,pn
dec
mov
sbb
and
loop
jno
sahf
insl
test
ret
stos
mov
xchg
xchg
sbb
iret
sub
frstor
inc
and
lea
daa
sub
pop
in
push
fbstp
pop
fldt
adc
dec
mov
xor
dec
lods
dec
adc
inc
xchg
push
adc
fistl
outsb
pusha
sbb
clc
inc
jecxz
adc
movsl
les
jbe
xchg
mov
add
std
cwtl
add
nop
repnz
ficoml
fchs
cmp
lods
sahf
jecxz
xor
fcmovnb
push
mov
cmp
dec
in
rorb
push
repz
and
adc
sbb
daa
je
or
cmp
jp
sar
push
sub
mov
add
test
icebp
clc
movsl
mov
aaa
pop
push
fildl
rdmsr
pop
lretw
push
and
nop
xor
and
scas
mov
fldt
adc
or
mov
or
dec
mov
fidivrl
dec
dec
and
adc
movsb
mov
sbb
out
dec
call
mov
xchg
loopne
aaa
jbe
inc
imul
fstpt
adc
cmpsb
test
or
pop
hlt
or
jae
push
vpsubw
inc
fmuls
add
nop
cmp
loop
fildll
dec
dec
push
mov
stc
outsl
in
sub
push
lahf
mov
imul
jg
mov
pop
sub
push
xor
divl
out
mov
pop
fcmovnbe
jno
ucomiss
clc
pop
in
cmp
lods
mov
mov
adc
xchg
mov
mov
jmp
inc
lods
fldt
rorb
nop
cmp
pop
push
loopne
pusha
jbe
push
mov
dec
shll
sahf
push
cltd
mov
xchg
nop
push
fnsave
in
adc
hlt
jmp
add
inc
lret
jmp
fistpl
add
clc
xchg
enter
decl
sbb
add
rcrb
movsl
jbe
cltd
in
notb
shl
ss
and
imul
sbb
pop
and
adcl
fistl
add
jb
adcb
sub
pushf
sbb
bound
cltd
jb
rcrb
mov
pop
pop
add
call
mov
push
sub
in
jae
pop
push
fstpt
dec
sbb
fidivl
test
inc
sti
mov
iret
stos
fidivrl
add
ret
mov
mov
cmpsb
das
test
cmpb
sub
push
mov
cmc
stc
add
fcmovu
jns
cmpsb
scas
out
lea
jg
dec
sub
stc
loope
and
test
ds
cmp
fsubs
fidivl
ljmp
pop
iret
outsl
and
and
dec
lods
and
or
pop
jnp
cmp
mov
scas
sbb
xlat
fimull
ja
adc
fwait
mov
adcl
ret
push
stos
sub
inc
lock
inc
ss
fildl
push
imul
and
fildl
mov
lahf
lret
mov
mov
test
sub
pop
mov
add
int
or
mov
inc
js
pop
ljmp
jmp
stc
mov
rorl
testb
adc
test
gs
clc
inc
and
mov
jge
xchg
out
fisubl
mov
iret
sti
repnz
add
out
jl
and
ss
ficomps
xor
dec
push
xchg
lcall
push
sti
loopne
adc
sbb
dec
pop
cwtl
fisttpll
push
fldt
dec
aas
jo
mov
fstpt
dec
mov
or
fsubrs
push
sub
fistl
inc
inc
pop
mov
lcall
test
xlat
dec
fldl
fistpll
jmp
mov
inc
and
out
lods
subb
adc
loope
bound
cmpsb
fisttpll
inc
inc
jne
lock
ret
sbb
fnclex
add
mov
sbb
xchg
scas
jnp
sub
inc
and
sub
lods
les
or
scas
mov
cs
rclb
inc
cvtdq2ps
cmp
movsb
sbb
dec
js
pop
mov
xor
jnp
cmp
fmull
xchg
mov
cmpsb
sbb
adc
or
push
ret
pop
push
adc
outsl
outsb
stos
mov
jno
arpl
cltd
int3
repz
fisttpl
into
addr16
ds
in
cmc
push
jbe
xchg
or
in
fstp
std
lods
icebp
push
sbb
stos
mov
fcmovnb
ljmp
lock
into
repz
stos
dec
lcall
fcmovne
mov
leave
ret
mov
clc
fwait
insl
je
push
imul
jnp
xor
sub
call
jle
insl
out
jp
das
frstpm(287
call
ds
test
push
sbb
outsb
pop
push
call
fnstcw
lcall
dec
scas
std
cwtl
sbb
sub
lods
adc
stos
push
in
int3
scas
test
cmp
imul
in
dec
add
mov
push
jbe
rcrl
xchg
mov
mov
mov
mov
pop
repnz
aad
test
ficompl
add
fldt
lods
mov
push
xchg
jo
sbb
cmpsb
sub
in
out
cmc
lods
cwtl
arpl
out
dec
dec
aad
repz
ret
push
sti
adc
xor
inc
push
out
clc
push
xchg
sbb
icebp
add
lods
push
push
fimuls
push
cmp
std
out
pop
sbb
xlat
dec
adc
xchg
jecxz
xor
ljmp
loopne
fs
adc
stos
mov
and
pop
lods
mov
lock
mov
mov
lret
clc
jmp
fbstp
mov
jb
fisubrs
mov
cmc
xor
adc
das
push
fidivl
movsl
jge
xchg
repnz
stos
jb
cmp
jno
loop
sti
js
dec
pusha
js
aas
adc
sbb
das
mov
stc
jo
push
mov
in
mov
sbbl
mov
sbb
and
lods
aas
push
xchg
loopne
sbb
inc
lret
dec
jae
shrl
add
lret
or
pop
fimuls
or
stos
add
clc
push
int
loopne
stos
xchg
adcl
dec
lock
xchg
or
pop
cmp
adc
xchg
in
inc
stos
xchg
pusha
lahf
leave
cmp
les
or
add
mov
ficoms
aad
in
out
movsl
adc
rcll
test
add
fbstp
enter
leave
jnp
popf
imul
xchg
jmp
in
int3
or
emms
push
fldcw
stos
inc
jae
cmp
mov
sub
ljmp
fimull
in
mov
in
outsb
fidivs
sarl
ficompl
cli
jae
stos
dec
or
or
dec
fldt
stos
pop
repnz
xchg
sahf
stc
arpl
fildl
adc
add
mov
jle
xor
pushf
mov
stos
test
pop
mov
push
jns
sbb
inc
filds
xchg
fcmovne
inc
fiadds
daa
mov
ret
sbb
pop
mov
xchg
popl
cmp
push
je
negb
and
or
fstpt
cmp
aaa
frstor
fs
stos
int3
jecxz
fucomi
or
iret
inc
xor
adc
repz
jp
in
lahf
hlt
je
fistl
fidivrl
loope
movsl
mov
test
enter
pop
lock
xor
xor
addr16
fistpl
add
fstpt
fldenv
fisttpl
pop
sbb
add
and
xchg
push
negl
dec
pand
lods
push
sub
adc
cld
stos
pop
or
push
pop
mov
ficompl
mov
popa
out
xor
cmp
cmp
xchg
and
inc
imul
mov
aas
dec
pop
or
outsb
idivb
mul
pop
push
xchg
jae
scas
das
in
or
sti
jb
jp
fistl
mul
out
inc
fstpt
adc
inc
cld
mov
inc
and
jb
in
js
jo
out
pop
dec
fildll
test
sti
pop
cli
sti
stos
dec
push
mov
popa
push
fstpl
lahf
ds
fbstp
clc
in
push
loop
mov
mov
iret
rorl
int
and
mov
or
xchg
lods
repz
or
movsl
lcall
lret
cmp
scas
xchg
je
or
lahf
inc
add
lahf
sbb
cwtl
cmp
jb
and
jmp
cmp
popa
testl
lods
mov
xchg
sbb
aas
test
ret
push
stos
pop
icebp
sbb
daa
rolb
adc
stos
sti
movsl
jp
mov
inc
in
les
cmp
xchg
and
mov
in
fldl
mov
in
rcl
add
ljmp
inc
or
ffreep
orl
cmp
mov
xchg
or
sbb
inc
loopne
movsl
fldpi
fisttpl
adc
mov
xor
xchg
fcmovne
mov
pop
sarb
inc
mov
adc
mov
pop
rcrl
mov
loopne
push
shrb
ret
cmc
fcmovne
cltd
jle
stc
mov
sub
cmp
shr
in
xlat
pop
jmp
jle
push
fucom
add
sbb
ret
sbb
fildl
fnstcw
xchg
pop
pop
push
and
fcomps
mov
ss
and
test
shrl
fiadds
jmp
sub
lcall
jbe
rcl
sbb
add
jne
outsl
push
fstpt
mov
inc
fldt
pop
add
nop
add
pop
icebp
cmp
sti
cld
cli
pop
jbe
in
call
pop
sub
push
mov
iret
nop
loope
cmp
inc
aam
mov
push
and
or
xor
ds
jae
adc
add
sbb
pop
cli
pop
addr16
mov
sub
push
inc
cltd
shrl
fstpl
in
js
and
jno
lock
in
dec
jecxz
icebp
adc
sbb
dec
jle
fstpt
mov
inc
rcpps
fldt
or
lock
movsl
pop
mov
mov
push
and
aad
pop
cltd
popf
dec
das
xor
mov
loopne
lcall
fisttpl
insl
pushf
lret
imul
fisubrl
or
mov
or
adc
std
cvtdq2ps
inc
pop
adc
pop
out
aaa
arpl
lret
bound
jecxz
xchg
inc
rcrb
mov
loopne
and
or
mov
push
mov
and
sti
cmp
test
fucomi
or
scas
ret
mov
fcmovbe
xchg
test
pop
xchg
fsubrs
fsubr
jmp
push
pop
out
incl
insl
sbb
and
add
or
lods
add
cmp
adc
or
out
test
cltd
dec
sub
xor
dec
cwtl
sbbl
in
lcall
das
lret
xchg
call
and
into
add
rcr
jmp
mov
sahf
fildl
sub
mov
cmpsb
imul
sub
lods
loope
mov
mull
pop
movsl
ja
inc
loopne
adc
add
leave
into
out
cmc
lret
lcall
jbe
popf
insb
test
jg
shr
push
pop
ret
ds
jnp
aam
jle
dec
sbb
xchg
pop
and
dec
jns
sbbb
loopne
fstpl
pop
inc
xchg
enter
sub
jo
mov
mov
es
or
fstpt
out
leave
mov
and
push
adc
stc
lret
fdivl
xlat
scas
jns
or
mov
or
mov
lds
xchg
fistpl
pop
iret
addr16
in
fnstsw
dec
cmp
xchg
jecxz
pop
add
aaa
fisttpl
pop
mov
fildl
push
rol
js
mov
fistl
jmp
fbstp
and
dec
adc
inc
cmp
in
cs
addr16
sub
dec
pop
sti
push
ret
loope
fistpl
adc
sub
scas
xchg
xor
add
fimuls
and
mov
jecxz
sbb
ja
lret
add
mov
cmp
fidivrl
lds
or
sub
clc
inc
pop
jecxz
push
cltd
call
sbb
shrl
jo
cmp
out
ss
rcrl
mov
mov
rcrl
mov
scas
push
xchg
stos
fcmovnbe
xchg
cmp
push
ss
push
ljmp
arpl
xor
or
adc
aam
sub
jo
fldcw
mov
xchg
lret
cld
fistl
cmp
fistpl
jg
daa
sbb
pop
sahf
adc
jecxz
pop
inc
dec
je
call
pop
icebp
dec
dec
xchg
scas
fwait
lea
loopne
js
xchg
cmp
stos
pop
mov
push
fildl
dec
mov
rol
lret
popf
mov
sahf
mov
jp
sub
mov
sarl
repz
mov
jnp
push
jge
mov
ret
aas
xchg
fwait
mov
ret
push
lret
pop
mov
sti
hlt
fildl
mov
adc
in
cmp
add
cmp
jecxz
or
mov
cltd
push
pop
in
in
dec
cmp
xor
inc
jno,pn
daa
cmc
in
out
add
sub
lock
mov
aam
sbb
rol
cmp
fistl
mov
lret
sbb
mov
rclb
pop
idivb
das
fcomps
clc
enter
inc
xchg
movlps
notl
add
xor
fldt
enter
or
stos
xchg
pop
iret
pop
add
sbb
push
or
dec
push
cmp
pop
xor
adc
mov
inc
jmp
nop
popa
pop
sub
aaa
push
insl
dec
add
int3
mov
outsb
pop
add
sub
push
mov
push
inc
pop
lret
mov
clc
aad
xchg
cmp
imul
adc
cmp
push
shlb
xchg
add
dec
mov
fcmovnbe
jns
mov
les
sbb
cmp
divb
and
adc
xchg
xor
fisttpl
daa
pop
dec
out
jl
sub
iret
jb
push
ds
cltd
pusha
add
fldt
dec
int
loopne
jne
jmp
outsb
fistpl
dec
pop
sub
or
adc
testl
fcomp
dec
in
xor
scas
and
sbb
fwait
sahf
mov
in
lcall
mov
xchg
mov
lret
mov
mov
mov
stos
movsb
xor
loopne
sbb
ret
aaa
les
pop
mov
loopne
pop
push
dec
fmull
lret
xchg
sub
jecxz
aam
lret
scas
jo
in
lock
das
pop
icebp
jnp
pop
fcmovnb
and
scas
fistl
mov
push
add
mov
xchg
cmp
dec
push
sub
fninit
rcll
nop
cmp
test
inc
insl
push
fistpl
jne
xchg
sub
outsl
sub
push
movsb
push
push
insl
fcmove
divl
add
fdivrl
into
mov
push
rolb
popf
mov
pop
pushf
or
sbb
or
ja
pusha
jmp
popa
enter
add
fidivrl
movsb
mov
imul
push
pop
inc
adc
or
adc
hlt
mov
fldenv
push
inc
and
testb
into
pop
cmp
fisttpl
vcvtss2si
push
int3
frstor
fiaddl
and
fisubrl
shll
mov
lea
jb
iret
loopne
add
lea
sbb
rorb
or
xchg
or
push
push
test
jl
cmpb
push
jmp
leave
popa
inc
add
out
rclb
mov
stc
notl
push
fstpt
inc
cwtl
cltd
pop
in
cmp
jmp
sbb
adc
pop
lret
add
pop
iret
lock
aad
jb
mov
dec
xlat
insb
fcmovbe
cmp
lods
mov
gs
aaa
fldt
call
adc
lret
lds
cmovnp
fstpt
dec
cli
xchg
lock
test
ljmp
mov
mov
clc
mov
fcmovb
loopne
pusha
jnp
mov
or
add
fistl
adc
mov
push
xchg
loopne
pop
push
test
push
jmp
and
lods
adc
jae
shrb
dec
call
sti
in
aad
push
inc
mov
xor
insb
fnsave
nop
jge
add
lock
icebp
fstp
adc
movsl
xchg
fldt
aad
fucom
shrb
mov
jns
sub
aaa
aam
pop
in
out
push
aaa
jmp
loop
xchg
push
jb
ficompl
dec
call
push
jmp
sub
push
dec
push
cld
xchg
lret
cmp
fisttpll
sar
popf
insl
imul
dec
xor
add
stos
andb
xchg
test
loope
or
inc
int3
jge
inc
in
mov
xor
movsl
cmp
aaa
or
jecxz
das
out
pop
inc
ret
ljmp
popa
adc
out
inc
cli
lret
dec
inc
xlat
fildl
out
outsb
cmp
dec
int
movsb
cmp
fistl
or
add
cltd
aaa
push
std
mov
pop
fstpt
push
push
push
js
aam
fisttpl
fbld
adc
adc
roll
sub
inc
push
loop
cmp
xchg
mov
xchg
mov
fcomps
sub
mov
enter
push
push
adc
imul
xor
lds
stc
popa
add
xor
cmp
mov
aad
ss
sti
pop
scas
jge
std
fistpl
mov
imul
push
pop
add
cld
js
inc
jnp
jno
fistl
mov
ficomps
mov
out
and
arpl
fsub
lret
fndisi(8087
push
push
mov
fisttpl
daa
scas
stos
in
rcr
cmpb
popa
lret
mov
unpcklps
lods
pop
xor
rorl
dec
pop
rcl
shrl
call
inc
nop
aas
mov
cmp
out
icebp
cli
in
push
sti
xor
icebp
insl
jp
loop
and
jo
pop
imul
clc
fimuls
movsb
sbb
pop
les
xor
mov
jge
in
cmc
add
lret
xchg
aas
or
stos
in
push
inc
test
rcll
in
mov
lods
sub
in
fcoml
loopne
mov
mov
sub
jno
mov
test
inc
and
in
push
pop
dec
enter
xchg
xor
mov
xchg
stos
lock
rcl
dec
and
lahf
add
stc
daa
xor
enter
sti
mov
jb
rclb
and
ljmp
lcall
hlt
lods
xchg
out
ss
jns
sti
cmpsb
xchg
dec
push
repnz
jmp
mov
sub
cmp
ffreep
clc
sub
mov
icebp
in
cmp
popa
pop
stos
mov
pop
pop
loop
or
sub
nop
pop
insl
ljmp
add
lods
add
xchg
sbb
xlat
stos
inc
cmpsb
call
or
cmpsb
ds
push
inc
adc
daa
lea
lods
jge
mov
xchg
int
test
inc
pop
and
lods
add
dec
adc
ljmp
sub
mov
fsubl
sti
dec
stos
call
pop
inc
adc
popa
loop
clc
add
stos
loop
jne
adc
pop
xchg
cmpsb
shl
stos
insl
lea
mov
lcall
fsubp
nop
push
aad
jp
add
arpl
push
push
stc
enter
loop
sub
add
xor
add
inc
fmul
pushf
sub
int
fwait
sarl
inc
popf
lods
adc
movsb
push
out
xor
ficompl
sub
add
hlt
pop
and
sbb
mov
movsl
aas
fwait
pop
sbb
add
sbb
lahf
jae
xchg
nop
cwtl
mov
add
pop
out
in
aad
imull
and
dec
inc
in
hlt
cmp
add
jae
sbb
jbe
rcr
mov
mov
fisttpl
adc
add
out
add
or
mov
pop
push
popf
pop
hlt
push
pop
lods
push
out
orl
fldenv
push
xchg
pop
sub
add
in
fisttpll
sti
xchg
fisttpl
mov
adc
fisttpl
ret
cs
sub
in
and
jl
push
and
xchg
movsb
in
into
jmp
enter
xor
mov
jge
stc
hlt
dec
cmp
fcomp
inc
std
movsb
push
out
push
dec
fcmovne
cmp
push
fstpt
xchg
insb
mov
rclb
mov
bnd
dec
mov
lds
fistl
or
inc
pop
fistl
outsb
testb
lods
and
lret
fcoml
stos
fistl
sub
aas
fistl
jmp
cmp
jns
sbb
outsl
xchg
ja
mov
sub
iret
push
push
and
sbb
outsl
int3
fistl
shll
fucomp
jnp
cli
or
fstp
ds
mov
scas
stos
loopne
insb
cmc
xchg
icebp
mov
push
out
mov
dec
inc
fistpl
mov
inc
popf
int3
pushf
fstpt
stos
xor
in
cwtl
mov
xor
adc
into
mov
push
cli
push
popa
push
fisttpl
jl
dec
dec
fists
and
stos
pop
push
les
leave
test
sub
xchg
inc
pop
loopne
out
cmp
mov
inc
xor
imul
das
adc
xchg
daa
sar
fisttpl
cld
xlat
pop
push
out
fisubrl
scas
popf
fistpl
pop
jp
loopne
add
test
push
scas
sub
mov
loopne
sub
pop
and
sbb
pop
xchg
pop
imul
dec
cmp
cwtl
lret
gs
sub
sti
ret
xchg
jge
std
pop
mov
lcall
dec
mov
fcomps
and
push
ret
loope
sarl
std
sbb
inc
inc
jno
sbbl
add
add
add
shlb
pop
mov
xchg
sub
lods
scas
mov
sbb
mov
fcomip
mov
push
sbb
jne
sti
or
cld
into
cmp
repnz
fiaddl
notb
test
mov
cltd
jmp
ljmp
pop
aad
adc
addr16
add
adc
std
leave
sbb
fldt
repnz
push
fdivs
cli
mov
or
call
fs
fnstsw
and
subb
xchg
jp
mov
rcr
cmp
test
dec
adc
dec
rcrb
push
stos
lret
out
and
lods
jmp
add
stc
xlat
ja
aaa
push
pop
fistpll
and
or
pop
dec
or
push
dec
data16
or
xchg
or
mov
mov
sahf
sbb
dec
sub
sti
jmp
or
lds
jp
and
ficomps
cwtl
call
icebp
sbb
ror
in
fldt
mov
pop
push
iret
xchg
fimull
aaa
push
fldt
hlt
in
jbe
jmp
push
or
push
lcall
ss
pop
aas
mov
add
pop
sbb
fldt
arpl
lods
inc
push
cmc
mov
int3
shlb
enter
add
push
nop
das
add
fistpl
insl
dec
pusha
pop
pop
shrl
mov
mov
cli
stos
test
mov
cld
dec
outsb
mov
shll
ss
dec
cmp
push
popa
fucomip
xchg
mov
fldt
pop
enter
rcll
sbb
out
xor
lret
leave
pop
fdivs
enter
lea
call
das
sti
ja
lods
psubusb
adc
push
int
fwait
xor
sarl
loopne
iret
mov
in
ja
sbb
dec
pop
fiaddl
repnz
or
fistpl
xor
sti
and
sub
sbb
fistpl
sub
mov
fcomi
cmc
xchg
test
loop
movb
popa
aaa
pop
out
push
jp
ds
pop
or
fidivrl
flds
inc
sbb
popa
insb
xlat
and
rcll
loop
ficompl
inc
fistl
jno
das
xlat
jg
addr16
jl
mov
push
lods
fistpl
int3
addl
sub
sahf
jnp
scas
xor
je
or
fcmovne
xchg
js
mov
fildl
aad
xchg
loopne
adc
push
xor
movb
pushf
movsb
xor
mov
jmp
neg
les
shrl
and
lods
ljmp
ficoms
cmpsl
fwait
mov
sub
dec
add
test
gs
mov
call
add
sbbl
lods
cltd
popf
add
das
and
jmp
add
and
mov
hlt
icebp
fimull
cmp
adc
roll
push
sbb
cmp
outsl
mov
roll
mov
xchg
fs
jmp
outsl
ja
fcmovnu
loopne
sbb
pop
lods
mov
popa
cwtl
cld
imul
push
push
mov
test
dec
fisttpl
sub
cs
in
fucomi
adc
outsb
movsl
add
jo
es
iret
mov
or
cmpsb
movsb
stos
inc
pop
sti
outsl
pop
cwtl
push
lahf
mov
and
into
icebp
mov
adc
adc
jae
mov
jg
scas
adc
clc
pop
daa
mov
mov
fwait
xchg
test
and
ret
insl
inc
cmp
add
and
or
or
cmp
and
fiaddl
add
cmp
and
add
cmpsl
stos
mov
mov
ffree
daa
loop
push
or
test
imul
mov
fwait
clc
add
out
push
mov
scas
fcomp
inc
out
ss
and
mov
pandn
jo
lock
fisttpl
pushl
pop
clc
or
mov
fildl
aas
pop
xchg
pop
mov
adc
lea
xor
loopne
push
jns
out
imul
jge
mov
mov
jbe
ficompl
pop
lahf
push
cmp
mov
mov
pusha
push
push
cmpsb
arpl
je
repnz
or
ret
popl
inc
aaa
xlat
loopne
or
in
ficoml
arpl
adc
fisttpll
out
inc
mov
out
mov
push
mov
stos
sub
roll
sub
mov
xchg
fldt
aad
ss
neg
dec
sbb
addr16
inc
cmp
mov
inc
call
in
add
add
pusha
hlt
call
cltd
insb
js
inc
add
ds
call
in
sub
call
fidivrs
lock
fildl
mov
sbb
sub
shlb
cmp
sbb
mov
mov
mov
cmp
sarl
nop
insl
lods
enter
or
int3
mov
mov
outsb
push
fnsave
jp
inc
sahf
test
fwait
mov
stos
push
fistpl
pop
lods
xor
loope
push
imul
ret
push
push
outsb
add
jno
notl
es
push
es
add
mov
ficoml
lret
cmc
fldt
stc
push
fcmovnu
push
inc
adc
dec
fistpl
fsubs
in
mov
ss
bound
mov
out
and
in
pushf
lcall
mov
rcr
adcl
icebp
xchg
scas
ret
inc
imulb
mov
mov
push
cmp
idivb
jo
cmp
jno
shl
cs
aad
mov
test
ret
jmp
shr
cmpsb
scas
cwtl
fisttpll
mov
cwtl
cmp
mov
and
lock
fistpl
nop
push
adc
fisttpl
sbb
lcall
push
iret
adc
roll
xchg
sub
out
mov
ljmp
pop
and
xor
stos
aad
push
stos
or
int3
mov
or
cmpsl
mov
mov
fisubrl
call
out
test
mov
jo
mov
out
repnz
sub
cmc
pop
popf
add
enter
xor
or
rclb
xor
loop
mov
pop
sub
fnsave
push
and
xchg
inc
imul
xchg
hlt
mov
vpmulhuw
packsswb
dec
push
ja
stos
and
fcmovnu
mov
push
lods
jecxz
mov
push
or
jb
and
insl
in
mov
mov
mov
out
push
add
int3
xchg
fsubl
push
inc
icebp
push
imulb
push
dec
pop
jne
out
scas
dec
sbb
outsl
scas
subl
pop
scas
or
sub
mov
inc
stos
pusha
inc
mov
xor
cmp
out
or
loop
mov
je
dec
rcrl
xchg
shl
in
sbb
jmp
repnz
pop
inc
sti
cmc
adc
nop
test
rep
fidivs
fbld
int
int3
daa
faddl
mov
xchg
jp
arpl
xchg
outsb
stc
iret
loope
inc
stc
lock
lcall
inc
lods
and
stos
xor
scas
or
pop
xlat
mov
negl
fistpll
mov
add
and
mov
ja
pop
sti
cli
inc
daa
mul
stos
mov
pop
ljmp
jbe
mov
jmp
das
or
decb
adc
fisubs
out
lods
add
mov
enter
es
xor
inc
adc
add
sbb
ror
jo
add
dec
push
mov
insl
fdivrs
pop
in
jmp
xlat
mov
mov
mov
adc
daa
scas
cmpb
cwtl
pop
sub
fucomip
push
sbb
stos
gs
sbb
das
xchg
dec
xorb
stos
rcr
and
dec
xchg
cmp
cmp
repnz
dec
outsl
fidivrl
cli
push
fcmovnb
leave
aad
int
dec
mov
movsl
fildl
mov
insb
fucomi
jno
notb
hlt
fstp
jne
popf
lods
sub
add
sub
sbb
cmp
fucomi
ss
xor
push
fistl
lea
mov
sarl
pop
ret
jo
add
enter
scas
or
jg
lret
rcrb
mov
lock
inc
inc
mov
fisttpll
mov
fwait
xor
sbb
jns
inc
adc
push
mov
fistpl
loop
enter
fldt
daa
test
fldt
repnz
fistl
dec
loopne
mov
mov
aas
lock
mov
fidivs
in
into
mov
fcomi
lcall
fistps
sahf
test
frstor
mov
fistl
add
loopne
hlt
and
inc
cmp
lret
lret
loop
mov
in
mov
push
mov
rcll
jmp
rcr
loope
mov
cli
mov
push
aaa
in
pop
pop
pop
xchg
call
das
or
mov
jnp
inc
sub
adc
out
sub
mov
xchg
cmp
sub
neg
mov
push
sbb
stos
dec
fcomi
je
mov
aam
scas
fstpt
pop
sub
ljmp
dec
mov
subb
push
mov
sbb
out
or
lods
icebp
jo
inc
cld
cwtl
dec
inc
xchg
imul
jmp
stc
ret
fstl
loopne,pt
shll
lcall
mov
fcmovne
movsl
outsl
adc
std
dec
loopne
mov
insl
inc
fmull
xor
and
dec
mov
fisttpll
fisttpll
push
sub
inc
jb
xchg
aas
fnclex
sub
movsb
cmp
mov
mov
sbb
bound
xor
test
fistpl
push
ret
sti
shr
pushf
inc
xor
jle
arpl
nop
loopne
scas
test
mov
cmc
mov
insl
sbb
sub
das
leave
mov
lret
push
out
aas
mov
xor
fistl
adc
add
shrl
xor
mov
inc
or
fldt
jp
xchg
and
push
jle
xor
int
sarb
out
jb
fisttpl
data16
cli
out
daa
lret
mull
jnp
sahf
in
jb
xor
movsl
out
cmpl
andl
xor
or
dec
mov
aas
pavgb
popl
andl
je
shll
fildl
popa
fwait
idivb
push
adc
push
mov
dec
dec
data16
sbb
fildl
pop
add
xor
stc
std
xchg
in
push
enter
loop
inc
pusha
bound
ret
mov
pop
fwait
idivl
mov
sub
add
mov
fsubrs
dec
xchg
lds
pop
mov
push
mov
fstpt
push
pusha
icebp
call
mov
mov
or
jge
pop
and
and
mov
push
add
sub
mov
pop
push
push
out
bound
mov
jl
mov
ja
push
or
mov
fcmovnbe
inc
popf
btr
xlat
stos
aas
in
repnz
scas
jmp
out
sub
pop
es
addb
notb
push
lcall
loope
scas
cwtl
lea
fucom
adcb
xor
arpl
adc
mov
mov
jb
sbb
imul
pop
call
add
imulb
iret
les
stos
aad
cmp
sub
push
fnstsw
mov
jl
in
cltd
xchg
xor
popa
mov
fisttpl
add
sub
inc
xchg
bound
fistpl
imul
notb
data16
fwait
mov
adc
daa
pop
out
filds
dec
std
fstpt
push
pushf
call
in
xchg
sbb
dec
jmp
test
cmp
inc
xchg
cmpsb
sub
lret
mov
cmp
fcmovnu
loopne
cli
push
aam
orb
jge
sbb
cmp
mov
gs
cmpsl
pop
scas
jecxz
or
xchg
loope
fldt
insb
mov
test
mov
ss
xor
xchg
sub
jl
pop
cmovp
out
mov
jg
jecxz
xchg
lret
adc
push
sub
icebp
xorl
stos
cmp
sbb
adc
push
fistpll
in
pop
cwtl
fcompl
pop
cmp
mov
pop
jmp
clc
in
loopne
mov
mov
pop
dec
fdivrl
and
xchg
dec
adc
sbb
dec
mov
rcr
xchg
jbe
cmpl
call
pop
push
lods
mov
jne
mov
enter
dec
mov
mov
pop
fisubl
sbb
cmp
inc
popa
lods
gs
lds
idivb
lret
sbbb
mov
sbb
insl
test
add
dec
icebp
loope
add
rcl
fisubs
loopne
imul
adc
ljmp
or
cmpsl
gs
shll
xlat
fmull
mov
adc
xor
popa
xor
push
push
mov
scas
pop
mov
inc
repnz
outsb
rcrb
fstpt
cmpb
cmpsb
xor
dec
leave
pop
fisubrl
mov
mov
ficoml
jmp
mov
test
push
insl
shll
jb
mov
lock
lds
fldl
fcos
jae
ret
arpl
cmpsl
repz
mov
jecxz
mov
jmp
shll
fst
clc
sbb
cld
inc
lcall
xchg
push
cmc
outsl
pop
jae
jl
sbb
push
pop
pop
jecxz
push
mov
fsubrl
iret
fcomi
and
mov
and
dec
lcall
xor
ds
std
sahf
mov
popf
es
jp
cmpsl
jbe
mov
mov
xchg
dec
fs
repz
jle
sahf
je
orb
call
jno
inc
mov
fstp
lods
xor
arpl
lea
mov
pop
sbb
fdivrl
or
mov
sub
and
dec
shlb
popa
cmp
out
mov
push
sub
cltd
rcrb
in
push
fstpt
out
adc
ds
aad
xlat
ret
cmpsl
fildl
test
divb
mov
ljmp
fldt
scas
pop
incb
sub
xchg
mov
lcall
fnstsw
cmpl
rorl
aam
lcall
cli
inc
arpl
fldt
shll
jmp
lds
sub
sbb
call
lretw
inc
pop
and
clc
cmp
or
in
loope
pop
fstpl
and
cld
add
pop
movsl
orl
fstpt
sub
pop
aaa
cmp
loope
pop
test
fnsave
xor
es
xor
xor
test
inc
js
mov
adc
lods
enter
out
xchg
cmp
clc
add
pop
adc
xlat
fcmovne
shl
mov
mov
rclb
fcoms
xchg
jp
cmp
sub
inc
fwait
pop
jns
and
jl
mov
jge
aas
lods
xchg
fidivrs
inc
mov
and
cld
jl
int3
popf
cltd
movsb
cwtl
in
sbb
fisubrl
push
jae
loopne
scas
mov
ds
mov
mov
cmpb
sub
nop
out
mov
testl
insl
outsl
lahf
sub
stos
and
and
pop
dec
scas
mov
push
xchg
mov
fistl
or
std
fistpl
les
out
push
xor
shlb
xchg
stos
and
ds
hlt
push
lock
mov
out
jns
adc
iret
jp
xlat
fildl
cmp
sbb
aam
aaa
or
jae
mov
fcoml
in
fdivrs
and
xchg
aaa
inc
fistl
aas
inc
or
in
sbb
adc
fidivs
pop
test
mov
mov
nop
cmpsl
cmp
pop
fists
mov
fldt
and
enter
lret
mov
pop
sbb
es
loopne
lcall
xor
add
cmp
jecxz
xchg
fldt
aad
icebp
jge
mov
loop
add
mov
leave
loopne
icebp
fiaddl
repnz
pop
sub
outsb
push
fiaddl
pop
pop
xchg
aad
and
lods
jg
pop
jbe
ds
dec
inc
mov
clc
jo
xchg
int3
stos
cmp
pop
fcmovnu
outsl
inc
out
inc
mov
fists
clc
xchg
jg
in
sbb
lock
dec
mov
sbb
frstor
mov
or
rcrb
sbb
out
fadd
jp
inc
add
mov
enter
insl
push
mov
aaa
mov
icebp
mov
mov
shl
aam
xlat
adc
fisttpll
mov
cs
and
push
or
pop
or
movsb
ljmp
adc
mov
mov
dec
mov
clc
sbb
call
add
jmp
adc
stos
scas
mov
cmp
loop
pop
inc
stos
pop
insl
mov
or
testb
not
imul
pop
cmpsb
addl
sbb
gs
lods
xchg
cmp
mov
lods
mulb
pop
shll
nop
mov
in
mov
jp
sysexit
push
idivl
in
mov
iret
aaa
sbb
add
int
cmc
in
loop
sbbb
jnp
and
cwtl
adc
cs
lods
icebp
push
call
dec
jmp
adc
lock
popf
in
lods
insb
leave
in
lock
push
das
call
lods
cwtl
ja
mov
cmc
pop
cmp
sub
loop
xchg
aas
push
add
movsb
sub
push
fbstp
stos
loope
sub
xchg
bound
rcr
add
mov
or
loope
call
push
int3
aam
cld
xlat
inc
fcmovnb
and
fildl
test
push
fldl
imul
push
push
outsl
mov
jb
mov
xchg
mov
paddd
xchg
lcall
xchg
mov
cmp
sbbb
pop
xchg
sar
jo
xor
dec
lret
into
inc
loopne
movsl
or
shll
cmpsb
mov
push
dec
call
add
aas
mov
push
jl
xor
sahf
fistl
repz
fistpl
push
xor
movsb
jb
cwtl
insl
xor
shll
adc
in
pushf
fadds
pop
mov
pavgb
test
nop
xor
jnp
push
xlat
cltd
daa
mov
push
cmp
mov
loope
mov
xor
shl
push
out
inc
shll
adc
jge
fldt
cmp
imul
icebp
lods
mov
shll
fwait
mov
or
inc
jge
mov
fldt
rol
fsubp
mov
lret
dec
fstpt
insb
inc
fldt
fisttpll
hlt
sbb
call
scas
pop
sbb
mov
mov
mov
es
clc
inc
dec
jnp
js
jnp
or
rcll
jecxz
dec
adc
ficoml
xor
js
and
out
fcmovb
adcb
insl
add
dec
mov
test
cli
sarb
out
fdivr
pop
stos
fildl
movsl
call
jne
and
xchg
pop
fstpt
add
das
sub
addl
cmp
inc
loop
xchg
inc
adc
in
push
push
jno
andb
fsubrl
outsb
jo
sub
inc
xchg
loop
enter
sbb
pop
push
jmp
pop
mov
loop
sub
popa
xchg
fs
fisttpl
pop
lret
fstpt
das
hlt
test
add
lcall
adc
fimull
xor
dec
fistpl
ret
dec
lea
fistpl
xchg
or
aas
shl
mov
pop
dec
fmull
fisubrl
and
lcall
faddl
adc
add
lea
es
ret
fisubl
jle
inc
mov
pop
daa
sub
int3
jbe
and
popa
pushf
sahf
cmp
or
movb
mov
push
jnp
sbb
jnp
out
xchg
lcall
push
jecxz
sbb
cltd
fstpt
mov
dec
fldt
js
sbb
lcall
lret
lds
dec
sub
leave
fimull
adc
test
lret
mov
mov
rcl
push
fstpt
push
scas
fcmovne
outsl
xchg
sbb
push
aas
jecxz
mov
jo
push
push
push
ficompl
lea
inc
xor
jg
mov
fstpt
repnz
sbb
das
andl
cmp
or
in
push
shr
sti
or
in
fcmovnb
add
cmp
aad
jae
aas
gs
jne
adc
fcmovnbe
jg
cwtl
jb
clc
pop
ret
sub
rcr
outsl
pop
mov
jl
inc
call
mov
fcomi
push
dec
leave
jecxz
adc
mov
scas
jmp
adc
outsb
jb
insl
jo
jecxz
in
cmp
fistl
push
adc
scas
mov
and
jmp
add
jp
mov
call
clc
and
adc
in
pop
movsl
jns
ret
call
cmpsl
ficoml
push
push
xor
ret
jbe
psubsb
fadd
aam
inc
int
shr
jo
insb
popa
in
jnp
loope
and
adc
fisubrl
roll
pop
dec
dec
xor
fildl
stos
xor
jle
out
pop
arpl
mov
dec
pop
sti
push
in
ffree
inc
mov
jo
pushf
or
cmpsl
cmp
push
push
xor
cmp
iret
mov
call
dec
sbb
and
xchg
movsl
pop
scas
sub
cmp
mov
cmpsl
fistpl
mov
add
push
pop
or
div
mov
popa
outsl
xlat
movsb
insl
frstor
aam
push
dec
inc
mov
mov
dec
jnp,pn
sub
mov
lds
sub
pop
out
repz
fisubrs
call
jmp
std
adc
inc
dec
ret
out
push
dec
push
andl
mov
stc
mov
fistpl
stos
jl
shrb
rorl
mov
dec
repnz
mov
fstpt
mov
dec
xor
popf
adc
hlt
add
xor
test
mov
ret
outsl
mov
sub
xacquire
adc
sub
sub
loopne
inc
std
enter
rolb
mov
fcmovb
int3
sub
xlat
lret
dec
or
fcmovnu
out
ja
cli
sbb
rcr
fstpt
mov
inc
push
and
jp
sub
jnp
das
inc
fisttpl
cld
stc
xchg
cmp
aas
fistpl
cli
lock
fisttpl
pop
pop
mov
in
call
fisubl
test
fstp
int3
sti
les
mov
fisttpl
dec
mov
nop
push
dec
scas
add
loop
repz
push
decl
ficompl
and
arpl
mov
xor
daa
sbb
stos
call
jns
pusha
loop
stc
push
dec
dec
pop
data16
jb
jmp
test
insl
fwait
cmp
imul
fs
in
fwait
sub
rcr
fmuls
jp
pop
xor
fistpl
push
mov
cmp
pusha
jl
in
insl
mov
ret
xor
lret
jle
pop
cmp
dec
mov
lahf
rorb
cwtl
or
jl
xlat
xchg
das
frstor
in
jmp
and
sbb
mov
mov
repnz
inc
adc
lahf
js
jnp
fldt
push
fldt
aam
mov
roll
dec
fildl
lea
cmp
or
lret
cwtl
in
xchg
imul
cli
std
call
movsb
sbb
pop
insb
outsb
mov
xchg
cmpsl
orb
clc
dec
push
xchg
pop
icebp
loop
lock
push
repnz
adc
inc
mov
addr16
pop
out
rol
sti
rcrb
out
fiaddl
fsubrl
outsb
test
in
adc
push
push
pop
push
jnp
push
or
loope
lahf
sti
pushf
popf
incl
test
cmp
xchg
fstpt
fwait
stos
popa
adc
fildl
or
daa
mov
test
ja
pop
outsl
sub
arpl
fcomi
lcall
fistpl
inc
dec
test
mov
pop
cmp
sbb
les
test
fisttpl
cltd
xchg
mov
mov
fsubrs
loopne
out
loope
jno
fistpl
push
in
cmp
xor
push
xchg
cmpsl
je
iret
mov
fisttpl
jmp
pop
mov
and
addr16
jo
jp
sbb
or
mov
sbb
or
mov
rolb
ja
fstpt
sub
in
mov
fcomp
rorl
iret
loop
sbb
or
aam
xor
out
rorb
cmp
dec
xchg
dec
frstor
xchg
test
popf
and
cmp
sbb
leave
cmc
and
mov
fsts
sub
xchg
stos
filds
or
fnsave
shrl
push
in
xor
stc
iret
ficompl
pop
leave
cwtl
sbb
mov
cltd
add
dec
cmp
push
xchg
test
shrb
and
mov
fcomip
pop
push
sub
lock
dec
xor
ljmp
fldt
rol
fisttpl
std
mov
dec
addr16
adc
fisttpl
inc
push
push
adc
in
cmc
xchg
inc
dec
jno
out
mov
imul
imul
jb
and
sbb
out
sbbb
add
lret
push
jnp
into
fbld
out
mov
fistl
mov
scas
sbb
icebp
sbb
rcrb
stc
adc
adc
pop
lods
adc
iret
mov
lcall
adc
inc
mov
add
out
mov
jnp
lcall
inc
pop
ljmp
dec
jmp
lods
mov
test
mov
adc
lcall
imul
xchg
pop
lock
ss
aam
out
movl
jns
stos
adc
shrl
adc
push
ror
mov
dec
imul
mov
mov
in
lcall
nop
into
jbe
inc
inc
sub
sub
in
sbbl
adc
or
test
call
daa
lods
cmp
xlat
stos
lea
mov
xchg
ficompl
inc
in
sbb
mov
fildl
xor
loop
rcl
negl
iret
pause
mov
popa
jmp
xchg
into
cmp
mov
cmpb
repnz
lcall
clc
xor
mov
xor
fwait
push
rcrb
adc
inc
cmpsb
mov
xor
jo
clc
or
jg
xacquire
jbe
xor
dec
cmpsl
clc
bound
loop
sti
stos
idivb
mov
loop
sbb
jp
dec
lds
ss
cmp
filds
cmp
lods
in
xlat
inc
mov
inc
push
lea
sub
jno
xorl
jg
add
in
mov
std
dec
hlt
xchg
imul
add
shlb
push
pop
aad
lock
pushf
and
test
fstps
lods
mov
sahf
push
std
icebp
cli
stos
aaa
push
push
add
xchg
sbb
add
cltd
movl
or
adc
mov
das
push
std
shl
xchg
pop
cmc
in
out
dec
push
ljmp
jmp
xchg
push
sbb
je
mov
mov
inc
je
aad
ficoml
movl
dec
and
hlt
cwtl
and
mov
jl
xchg
stc
lods
cmp
fnstcw
jmp
jecxz
pop
stos
pop
jmp
lds
dec
pop
sub
sbb
repnz
or
cs
lret
rorl
xchg
lock
int3
aad
dec
mov
fwait
fs
cmp
cld
shl
push
jg
mov
hlt
jge
xchg
leave
sbb
xor
ds
rcrl
stos
mov
add
cwtl
pop
pop
cmp
pop
lds
xchg
scas
xor
xchg
in
subb
pusha
mov
fstl
mov
das
loop
sbb
mov
adc
sub
das
std
rcrb
incb
push
jmp
mov
fsubrp
popf
mov
insl
sti
pop
lock
out
aad
jno
and
cmp
lock
fistpl
pop
pop
dec
mov
or
pop
xor
fstpl
ds
mov
xor
xchg
add
inc
lret
aad
cmp
push
test
and
test
clc
xor
test
leave
test
xchg
repnz
mov
dec
mov
jmp
in
sbb
mov
cld
mov
push
cli
sti
dec
mov
jmp
push
adc
call
push
xlat
int
sbb
data16
jae
cwtl
ljmp
ljmp
cmp
mov
aam
lods
movsl
jbe
sbb
jns
loopne
pop
loop
mov
or
sub
imul
xchg
loopne
cltd
fsubs
jle
and
scas
cmc
arpl
cli
in
adc
jp
scas
pop
xor
add
xor
mov
addr16
and
imul
ret
fisubrl
cmp
push
leave
movsb
das
jg
jl
das
pop
pop
bound
je
popf
dec
fnstcw
subb
and
nop
sbb
ljmp
inc
jle
pop
rcll
jb
or
or
enter
pop
push
or
fistl
mov
adc
icebp
call
cmp
pushf
jno
loopne
xor
test
aad
dec
sbb
pop
mov
or
sarb
lret
xchg
push
imul
ret
lahf
das
adc
cmp
ret
mov
fstl
xchg
jb
pop
lea
mov
push
in
push
das
inc
popa
mov
mov
adc
xor
xor
clc
adc
pop
std
dec
inc
sbb
daa
js
test
divl
add
fdivs
xor
sub
xchg
adc
mov
popa
mov
jbe
stc
mov
sbb
out
jge
push
fisttpl
stos
sbb
inc
and
fldt
adc
insl
in
pusha
pop
jge
fiaddl
jle
rcrb
adc
mov
stos
jo
mov
dec
pop
and
adc
fcom
movsb
or
push
sbb
cmp
mov
fldl
test
ret
dec
and
fistpl
fsubrp
icebp
sbb
stc
int
dec
mov
sbb
fldt
adc
pop
cltd
cmc
adc
xor
jbe
mov
sbb
jecxz
fildl
mov
or
mov
int3
dec
call
xchg
fisttpl
push
pop
push
fcmovne
mov
pushf
pop
dec
aad
fistpl
test
call
leave
sti
enter
fisttpl
lea
lret
repnz
rcr
lods
sbb
insb
aas
pop
push
fldt
pushf
jge
fadds
mov
xor
xor
adc
lock
adc
test
xchg
or
jg
out
scas
dec
push
mov
inc
xchg
jmp
call
jne
fistpl
inc
mov
mov
cmpsl
add
fldt
xchg
sub
jmp
enter
addr16
mov
cwtl
test
mov
jb
push
pop
pop
dec
add
push
mov
fimuls
mov
out
leave
arpl
xor
add
mov
cmpsb
and
jb
mov
out
add
push
adc
scas
nop
cwtl
mov
call
jne
or
add
in
adc
mov
push
es
leave
gs
jmp
mov
scas
outsb
fcmovnbe
xlat
xchg
add
cmp
fwait
out
or
lock
and
xor
arpl
js
stos
addb
ret
push
dec
xchg
sbbb
mov
mov
fsubs
fldt
dec
pop
loopne
mov
scas
out
sti
stc
int3
pusha
cmp
loop
sbb
or
and
or
aam
sti
loop
nop
scas
in
lods
orl
scas
pop
mov
jae
push
bnd
inc
shrb
in
sub
ja
fimull
in
pusha
loop
mov
pop
pop
repnz
push
shll
call
push
or
push
ror
fcoml
mov
and
in
int
xchg
mov
filds
aaa
and
into
sub
inc
jb
adc
lahf
ret
fistpl
out
cld
push
stc
pop
mov
fisttpll
mov
dec
loope
sbb
into
lret
sub
hlt
daa
insb
arpl
cmp
mov
mov
dec
pop
fstpt
mull
fildl
push
or
stos
cmp
loopne
mov
mov
jmp
fstpl
daa
adc
xchg
pop
sarl
mov
cmp
pop
jp,pn
ret
sub
mov
negb
stos
add
cmp
mov
jp
sbb
faddl
dec
fstpt
repnz
insb
push
cltd
mov
pop
fdivr
stos
std
incb
fisttps
jo
in
pushf
cwtl
push
test
or
fistl
addr16
cmpsb
sbb
pop
sbb
stos
xchg
ficomps
push
adc
dec
loopne
jno
in
adc
or
sbb
cld
sub
dec
lods
imul
rorl
push
cmp
leave
cmp
xchg
bound
push
jbe
fistl
pop
subl
fld1
mov
push
lret
and
push
pusha
fildl
outsl
sub
xchg
mov
mul
lret
ficomps
push
loopne
lods
cmp
pop
cmp
sbb
xchg
mov
data16
pop
testl
xchg
movsl
add
push
mov
mov
cmc
pusha
xor
enter
insl
cmp
repz
inc
fistpll
sub
bound
jbe
mov
aaa
adc
insb
in
in
rcl
fsubs
and
repz
and
xchg
adc
outsb
xchg
lcall
add
sbb
push
pusha
mov
rolb
stos
aaa
push
imul
adc
mov
inc
pop
mov
fbld
mov
mov
test
cli
fisttpl
les
jo
and
jae
dec
fwait
jnp
add
fistpl
inc
test
adc
push
scas
loopne
and
out
and
sbb
sbb
pop
stos
rcr
fnstsw
imul
add
int
and
jno
rclb
adc
sbbb
aam
scas
dec
repnz
fprem
in
push
fmuls
test
xlat
loopne
mov
sub
aam
mov
dec
xchg
push
lret
pop
sbb
xchg
or
sti
divl
adc
push
xchg
jge
fucomp
mov
sti
imul
mov
lcall
call
adc
or
cmp
ss
lods
ja
arpl
enter
mov
pop
cmc
cmp
jns
jo
ljmp
shrl
sbb
sbb
test
push
rcr
stos
inc
cltd
cmp
subl
push
cmp
mov
aas
pop
ret
pop
mov
in
in
mov
shrb
or
mov
lods
inc
outsl
lods
cltd
xchg
jno
cld
pop
adc
movsb
push
xchg
ss
cmpsl
push
inc
pop
iret
fldt
or
aad
loope
shlb
rclb
xorb
sub
and
pop
out
fstps
add
js
pop
dec
mov
pop
adc
jg
loopne
sbbl
pop
out
mov
and
add
adc
les
repz
add
call
mov
nop
fistl
call
jle
mov
cmp
mov
in
andb
aad
push
sbb
into
dec
inc
frstor
mov
arpl
cli
fwait
mov
jnp
fnsave
mov
call
lds
mov
mov
mov
lcall
in
inc
andl
cwtl
pop
sbb
cmp
aam
xchg
loop
outsl
loopne
and
mov
sub
call
add
and
adc
jle
ss
xchg
fidivrl
in
push
fcomi
es
test
in
mov
sbb
divl
jl
mov
fldt
cs
or
ss
cmp
sub
sbb
in
mov
fldt
iret
shlb
out
sbb
adc
stos
mov
mov
cmpsb
jecxz
cs
add
lods
test
sbb
rcrl
lret
out
cmp
mov
lcall
fldcw
inc
mov
xchg
jns
mov
push
adc
sub
sbb
xlat
jle
decb
rcl
add
hlt
pusha
outsb
fnstcw
sti
pop
sbb
repz
mov
jp
sbb
mul
ficoml
fnstsw
out
cmp
nop
sub
mov
subb
inc
movsb
mov
cmpsb
roll
lods
cltd
and
pop
push
out
repnz
mov
lods
or
inc
adc
and
stc
lods
jae
aas
jne
xor
in
loopne
arpl
lods
loope
xlat
flds
sahf
call
pop
outsb
cld
test
sub
rcrb
stos
mov
xchg
pop
pop
pop
incl
fmuls
in
jb
decl
test
fldcw
mov
cmpsl
cmpsb
jmp
cmc
dec
leave
or
mov
das
mov
aaa
insl
dec
mov
adcl
sbb
jns
or
das
jmp
ss
clc
pop
imul
mov
jo
fcmove
lods
cmpl
cmp
push
icebp
mov
sbb
enter
and
dec
mov
and
and
sahf
add
xor
lcall
jg
ficoml
cmovne
add
cmp
xor
subl
je
mov
leave
rorb
shl
imul
sahf
sbb
repz
mov
xchg
fldt
xchg
fstpl
add
cmp
gs
sub
out
sub
push
loopne
testl
fildl
iret
sub
cmp
in
fstpt
cmpsb
or
dec
xor
pop
jnp
call
sbbl
les
fldt
mov
push
jg
ds
out
aaa
fcmovnu
sub
ret
xchg
inc
repnz
outsl
arpl
pop
es
pop
movb
bswap
mov
fisubrs
mov
add
mov
inc
out
fistpl
imul
add
insl
into
mov
adc
fcmovnu
xchg
xchg
iret
or
adc
fildl
pusha
pop
inc
jnp
dec
aas
mov
lods
fstp
cmp
and
int3
fsts
mov
dec
push
push
or
outsl
push
das
sbb
jp
arpl
cmpsl
rcl
fucomi
sti
mov
aam
fimuls
rdtsc
mov
push
jo
xor
or
in
fistpl
test
ror
dec
fsubr
fld
and
bound
jae
mov
pop
and
mov
cmp
cmp
vminps
lret
mov
pop
xor
and
xchg
jae
dec
xchg
cmc
pop
inc
fldt
push
faddp
adc
add
pop
cmp
xchg
stos
xchg
fisubrl
int3
xor
and
movsl
into
cltd
aad
icebp
lods
inc
mov
fidivs
mul
clc
mov
std
rcrb
pop
pop
ds
fistpl
ljmp
adc
cmp
iret
lock
iret
xchg
fwait
sbb
into
loope
ffreep
out
mov
fndisi(8087
push
outsl
bound
lock
mov
scas
fucom
vorps
dec
inc
fs
int3
add
shrb
push
or
add
xchg
das
addr16
daa
xchg
dec
mov
ja
and
sbb
or
fisttps
or
adc
popa
imul
fstpt
pop
addr16
jp
ffree
pusha
pop
stos
fst
sarb
clc
mov
psrad
es
repnz
jmp
subb
outsl
popf
mov
in
clc
std
jge
ret
jb
daa
jae
sub
subl
mov
les
popf
or
push
jbe
shll
cmc
push
arpl
cmp
fcomps
fistpll
les
lcall
js
jg
in
iret
sub
fisttpl
or
mov
sub
add
decl
dec
aaa
xor
insl
aam
mov
fcmovne
mov
xchg
sbb
call
pop
sbb
outsl
rol
fcmovnb
xchg
jle
test
adc
addl
xor
xchg
jmp
jg
pop
adc
sahf
int
stos
cmpsl
ret
out
jge
jns
push
pop
test
aas
mov
mov
and
pop
push
movsl
test
xor
push
in
bound
cmc
out
fldt
jno
pop
ds
sub
jae
pop
mov
xlat
fstpt
or
sti
and
fcmovnbe
aam
sub
dec
fucomp
push
pop
outsb
mov
sti
das
pop
push
dec
or
pop
jne
jb
mov
fimull
scas
mov
adc
mov
jo
hlt
xchg
ret
fidivrl
cmp
test
xchg
xor
sar
fcomi
mov
scas
cmp
xchg
mov
cld
fistpl
daa
cmpsb
stos
scas
inc
lea
data16
negb
inc
fildl
inc
js
fstpt
pop
dec
push
ja
fiaddl
addb
call
mov
shlb
stos
mov
cmpsl
fdivrl
jo
xchg
cmp
fucomi
bound
nop
mov
adc
js
pop
popa
cmc
test
fst
sub
pop
jb,pt
mov
fldcw
sbb
dec
rclb
arpl
jns
fildl
push
das
xor
jae
mov
push
mov
mov
fisttpll
lcall
or
dec
lock
mov
repz
mov
sub
pop
mov
cmpsb
jns
mov
fisttpl
lcall
jne
das
repz
lods
sub
cmp
test
in
cmp
dec
jb
fisubrl
mov
lret
mov
fstpt
pop
mov
xchg
mov
in
mov
pop
insb
dec
fistpl
pop
data16
jp
mov
pop
cltd
mov
add
mov
inc
add
imul
fldt
or
mov
fistl
hlt
imull
fmuls
aad
outsl
fucomi
jge
push
fisttpl
nop
in
icebp
clc
add
mov
fbld
call
mov
add
in
or
push
jbe
stc
cmp
sbb
jle
fistpl
sti
xlat
loop
fistpll
lcall
dec
add
ficoml
frstor
out
shrb
mov
xor
add
mov
sbb
les
rcrb
add
repnz
bound
lret
lock
idivl
mov
inc
or
mov
xor
aas
or
mov
fld
mov
out
testb
aas
cmp
lcall
cmp
pusha
mov
aad
fstpt
repnz
pop
lret
push
rorl
cmc
add
fchs
mov
xchg
hlt
mov
loopne
gs
mov
sti
outsl
mov
hlt
lret
fdivrl
lods
fs
cld
leave
subl
mov
inc
or
pop
mov
fiaddl
pop
out
mov
mov
dec
push
dec
add
scas
test
daa
es
mov
fistpl
mov
pop
gs
mov
int
daa
mov
fildl
sub
popf
js
mov
imul
movsb
test
lds
add
jb
lcall
dec
ret
or
arpl
loop
scas
clc
pop
mov
imul
fwait
repnz
aaa
fisttpl
mov
cmp
inc
out
and
add
dec
pushf
loopne
outsl
pop
fildl
push
sbb
out
imul
cmp
aaa
fildl
btr
inc
testb
fstpt
dec
repnz
inc
in
in
outsl
mov
fistpl
adc
pavgb
jecxz
cltd
xchg
insl
sbb
sbb
sbb
pop
jo
fcompl
jg
and
roll
fwait
jae
xchg
ss
xor
mov
sti
jecxz
add
divb
push
stos
adc
push
or
or
aaa
in
fcomi
mov
loop
mov
mov
pop
jb
xor
loop
add
push
inc
inc
pop
mov
stos
fstl
testl
outsl
or
mov
xchg
lret
mov
push
movl
push
mov
call
sbbb
dec
mov
push
and
cmp
fcmove
jmp
fs
adc
jbe
shll
push
shlb
jge
inc
clc
stos
nop
rclb
pop
inc
sub
mov
frstpm(287
pushf
jae
sub
sbb
idivb
adc
lds
mov
pop
rorl
add
rclb
xor
jl
sbb
shl
loop
fistps
scas
push
inc
mov
gs
sbb
fildl
rcll
fimuls
aam
fistpl
adc
jge
or
scas
aaa
dec
jg
stc
dec
dec
rcrb
mov
call
pop
popf
mov
lret
sarl
fldl
out
mov
and
out
adc
cmc
aaa
testb
pop
fimull
loope
jne
fisttpl
lahf
push
mov
xchg
lcall
scas
push
sbb
fdivrs
mov
clc
jg
into
fwait
mov
stos
sahf
sbb
fistps
lea
pop
fucom
fndisi(8087
add
mov
inc
rcrb
fwait
inc
dec
lret
pop
dec
sub
hlt
cmc
push
mov
fildl
mov
inc
ljmp
and
test
jecxz
ja
pop
add
test
out
repz
mov
push
js
in
lock
call
push
hlt
inc
fcmovnu
xchg
push
fistps
fs
xchg
pop
add
mov
imulb
clc
mov
mov
out
mov
fucomp
orl
test
mulb
xorb
lcall
inc
pop
pop
dec
dec
shlb
loopne
sbb
sub
inc
mov
stos
je
fisttpl
lods
jns
in
aam
outsl
loop
test
push
jae
xchg
stc
cmp
and
daa
insl
cmp
roll
xchg
pop
fcmovnbe
inc
in
xor
xchg
fstpt
sbb
subb
dec
xor
frstpm(287
add
popf
cld
push
icebp
lock
dec
pop
call
outsb
lods
or
adc
aad
test
xchg
push
sti
push
lret
jne
jmp
je
lock
jl
sub
sbb
popf
pop
jae
cli
out
sub
flds
scas
add
or
imulb
lcall
loopne
out
mov
or
clc
cmp
mov
test
stos
push
dec
push
icebp
fcmovbe
inc
repnz
dec
mov
stos
daa
rcrb
push
out
orl
pop
push
jl
push
lahf
imul
jge
lods
clc
xor
bound
scas
and
loop
pop
or
lods
mov
hlt
dec
jecxz
sbb
sub
fildl
icebp
adc
dec
in
add
mov
sarl
push
mov
cmp
mov
adc
mov
shlb
pop
push
and
and
lea
lods
mov
dec
insl
movsb
ja
sbb
adc
lock
push
push
icebp
aam
ja
jnp
iret
out
leave
jb
xchg
out
push
jb
sbb
into
mov
inc
pop
cmc
loopne
mov
ds
repnz
sub
lods
pop
xchg
jmp
pop
pop
mov
mov
iret
and
mov
stc
repnz
jae
lods
push
movsb
sub
sar
in
stos
imul
scas
mov
aad
jo
in
xchg
cltd
les
and
pop
fimuls
cwtl
stc
cmp
and
jl
sbb
mov
inc
cmp
push
test
out
and
fwait
out
stos
ret
inc
iret
inc
js
xchg
ss
aam
jecxz
inc
sti
stos
loope
cs
negb
push
div
inc
push
fwait
cmp
stc
add
arpl
add
in
push
pop
mov
push
lods
into
int3
xchg
mov
sti
test
pop
adc
stc
lock
jp
sub
xor
test
adc
cwtl
push
push
dec
stos
adc
jmp
cli
in
or
cld
aas
pusha
lock
addl
mov
cmp
mov
repnz
stos
in
dec
or
js
lods
scas
adc
pop
push
add
xor
sbb
insb
or
inc
jbe
jp
out
insb
xlat
push
and
push
cli
mov
cmp
ficompl
push
orl
out
lods
daa
sub
and
dec
sti
inc
in
push
inc
jg
shl
mov
call
call
sub
test
push
stos
xchg
pusha
dec
mov
inc
jl
in
mov
mov
arpl
inc
lret
jne
lret
mov
and
fadd
jecxz
push
mov
sbb
pop
bound
stos
sub
jns
pop
jne
movl
push
sub
lret
in
lcall
movsb
test
insl
cmp
in
out
add
mov
repnz
adc
pop
pop
leave
jle
xchg
xor
lcall
xchg
jnp
lods
push
adc
mov
lods
ljmp
fstpl
outsl
dec
xor
stos
icebp
cmpsl
push
push
pop
xchg
movl
out
jnp
jo
dec
cmp
dec
test
add
rorl
cmp
pop
xor
rol
dec
sti
shlb
and
mov
movsb
clc
sar
xchg
adc
pop
cli
into
inc
jbe
mov
mov
ficoml
push
jns
movsb
fdivs
sub
loop
mov
and
les
sub
rcll
dec
or
fldl
add
shll
cmpsb
cmpsb
test
lods
xchg
cmp
xor
aam
push
dec
out
out
jnp
jo
mov
jno
jb
rolb
cmc
test
enter
lods
fdivrs
in
push
cwtl
xchg
adc
cs
stos
cmp
std
dec
lods
dec
scas
or
xchg
iret
in
xchg
aas
jg
sbb
push
pop
dec
cmp
jecxz
inc
jb
es
jne
add
push
lea
scas
call
test
cltd
xor
push
fisubrl
pop
add
cmpsb
push
mov
stos
in
and
in
rolb
cli
outsl
add
ret
mov
jp
cltd
sub
pusha
adc
sub
adc
int3
fs
dec
xorl
inc
incl
mov
mov
pop
mov
stos
add
sbb
adc
cmp
in
add
lret
fdivs
pop
repz
sarb
push
testb
test
or
leave
pop
pop
dec
jb
sub
adc
not
add
js
mov
xchg
outsl
insb
das
nop
call
mov
frstor
inc
stos
daa
jle
add
lds
lods
data16
jbe
jge
or
cmpsl
outsl
xchg
in
sbb
push
cmp
movsl
mov
bound
ds
pop
lock
or
lods
imul
push
add
xchg
lods
sub
lret
fcoml
adc
or
ljmp
cmc
mov
mov
into
fisubrl
in
xchg
movsl
cs
dec
jl
stos
or
mov
cmp
sti
aas
daa
cwtl
adc
lock
in
inc
lret
leave
mov
cmp
lods
imull
jp
subb
sub
fstpt
xchg
je
inc
cmpsl
mov
sub
outsl
cltd
sarl
clc
pop
jne
int
jo
pop
push
stos
mov
insl
enter
cli
mov
add
pop
fildll
xchg
daa
fdivl
xchg
and
fists
addr16
xor
jmp
inc
cltd
xchg
mov
add
or
jmp
shrl
lds
sbb
push
in
mov
xchg
lahf
and
frstor
data16
jmp
pop
daa
mov
pop
jbe
iret
mov
adc
loop
dec
lahf
ret
jp
xchg
test
adc
dec
adc
imul
and
jg
outsb
stos
mov
in
adc
femms
inc
scas
loop
mov
outsl
js
repnz
lcall
push
pop
into
mov
and
and
xchg
bound
mov
push
orl
fcomps
popf
repnz
shlb
dec
pop
xor
add
pop
int
mov
in
dec
cmp
mov
lods
mov
iret
fbstp
data16
negb
mov
cmp
cltd
ret
jp
fdivrl
loop,pt
push
stos
mov
jno
sahf
js
leave
aad
andl
aam
or
and
push
sbb
mov
int3
mov
imul
jo
dec
jns
jo
cwtl
and
sti
aas
cltd
in
stos
mov
in
xchg
in
sub
xchg
mov
xlat
sub
pop
je
addl
jb
mov
fs
xor
and
loope
imul
imul
ret
push
arpl
scas
fstpt
aas
fldt
xchg
ds
test
pop
aad
push
sti
mov
and
cmp
sbb
inc
or
call
push
or
sub
mov
fucom
cld
mov
cli
jnp
pop
fistl
and
and
les
cld
rcl
mov
or
adc
jno
test
xor
fs
push
fst
mov
repnz
loop
clc
xor
addr16
sub
inc
frstor
and
arpl
jle
pop
pusha
dec
jo
shrb
pop
xchg
cmp
pushf
rcr
aad
lock
xor
out
cmp
sbb
jp
sub
sbbb
lret
int3
dec
imul
jp
les
cmp
sbb
or
fistpl
idivb
fucomi
int3
jp
fildll
mov
xchg
ret
jo
call
jge
test
pop
push
jnp
iret
std
inc
fistpl
in
in
mov
jne
imul
mov
popf
push
xchg
out
call
jmp
fildl
mov
pop
leave
fstpt
aas
cmp
nop
mov
fcoms
jae
adc
jns
rolb
cmp
ret
adcl
inc
fisttpl
jne
ja
jle
fistl
shrb
test
stc
cmp
ja
lahf
fistpl
pop
xchg
inc
mov
enter
icebp
mov
pop
stos
mull
and
push
adc
les
lea
jp
lret
mov
popa
xor
fildll
xchg
pop
lret
std
mov
or
or
jae
gs
inc
pushf
jp
xchg
aaa
leave
cmpsb
sbb
mov
xor
std
mov
jle
addr16
push
imul
fistpl
xchg
cmp
mov
fsubrp
call
dec
mov
pop
pusha
nop
into
jbe
loopne
aas
rcrl
fcmovnbe
pop
loop
push
jnp
rcr
mov
xchg
lock
sbb
xor
jbe
xchg
xor
add
mov
jne
push
out
cmp
fimull
mov
dec
adcl
in
pusha
jae
cmc
fistpl
mov
out
rcrl
inc
jmp
xor
sub
call
or
dec
mov
mov
in
mov
mov
sub
fldt
lods
inc
pop
cltd
frstpm(287
addl
mov
jae
cmp
ss
mov
fiaddl
outsl
test
scas
in
jp
and
test
push
fildl
sub
inc
add
dec
xlat
dec
dec
loopne
aas
pop
pmulhuw
jno
mov
call
cmpsl
push
andl
orb
test
fdivrl
int
ja
xchg
adc
int3
in
ret
xor
fnstsw
sub
push
pop
pop
inc
aas
test
fisttpl
sbb
xor
inc
pop
push
test
cwtl
in
and
and
outsb
clc
cmp
cli
inc
push
test
icebp
jp
movsl
push
loop
ja
inc
push
pop
fmuls
push
lret
ret
scas
loopne
stos
push
sub
sbb
je
iret
xchg
mov
loopne
dec
xchg
mov
test
rdmsr
sbb
adcb
aam
stos
mov
mov
fidivl
xor
arpl
sahf
jle
or
xor
and
sbb
das
fsub
subl
scas
mov
lret
les
ds
call
nop
cmp
frstor
cmc
inc
addl
mov
or
loope
or
in
mov
ret
ljmp
divb
packsswb
shl
mull
xchg
pop
cmp
call
cmp
in
fimuls
fcmovu
add
dec
push
or
fstpt
sbbl
adc
fisubl
push
fcomi
inc
dec
inc
xchg
dec
adc
je
fimull
outsb
mov
lock
jbe
jp
loope
in
in
clc
mov
js
xchg
dec
fs
lock
inc
push
mov
pop
shll
int3
inc
mov
in
clc
or
test
sub
sub
es
cmc
push
mov
cmp
cmp
add
add
sbb
rclb
pop
lret
das
jns
or
cmp
fstpt
mov
or
pop
cmc
clc
and
push
in
adc
add
cmp
sbb
stos
clc
jne
mov
je
mov
scas
add
mov
push
sbb
xchg
sub
fcmovnb
mov
cmp
dec
ficompl
add
xor
push
shrl
cmpsb
mov
mov
push
pop
jg
fisttpl
xchg
testl
cmp
xor
jmp
testb
ja
popa
xchg
rorl
cmp
outsl
test
cmp
popf
cmpb
xchg
fisttpl
xchg
pop
inc
mov
cld
dec
stos
dec
movsb
inc
test
sub
ss
or
shll
testb
outsb
lcall
mov
lods
inc
cmp
lock
xlat
lcall
pop
fs
cwtl
cmp
outsb
dec
mov
ret
cltd
sbb
ffree
xchg
mov
neg
pop
or
in
jl
mov
mov
xor
mov
xorl
cs
pop
fucomi
cmc
xchg
xchg
or
jmp
mov
fcmovnb
sub
adc
push
cmp
xchg
fldt
add
bswap
and
das
jmp
sub
fcmovnb
lcall
out
xchg
xor
jne
adc
es
dec
cmpsl
mov
jp
fisubl
add
pusha
push
mov
sbbl
and
mov
cmp
push
call
or
ss
nop
mov
lret
fisttpl
dec
xchg
mov
inc
and
dec
iret
sub
xchg
mov
fbstp
aam
test
xor
fst
ja
into
out
pop
stos
mov
fistpl
jmp
call
and
pop
pop
ss
loopne
es
loopne
jbe
cmpsb
adc
fcmovne
cli
addr16
fildl
insl
dec
xchg
pop
ja
fcmovnu
jbe
sub
cmpsl
fsubrp
loop
loope
dec
jl
mov
inc
daa
cmp
xchg
mov
loopne
es
loop
xchg
mov
fistpl
cld
jns
test
jnp
fcmovne
mov
std
icebp
and
pop
sub
mov
mov
mov
stos
dec
fidivl
out
mov
mov
inc
imulb
jnp
mov
stc
fistpl
add
or
pop
gs
orl
jmp
pop
notb
in
inc
xor
movsl
push
push
fsts
popa
fsubrl
das
dec
push
push
fwait
cmpsb
movsl
call
add
loopne
dec
push
fildll
loope
cld
in
fwait
shrl
mov
or
inc
pop
and
dec
shll
fsubr
popf
daa
insl
negl
fistl
sbb
out
cs
cmp
and
adc
inc
in
loopne
fistl
push
cwtl
jg
jp
call
in
dec
xor
ljmp
shlb
fidivl
sub
frstor
cmp
lods
xchg
in
shll
push
mov
gs
pop
test
fistpll
outsl
enter
arpl
push
or
xchg
mov
mov
push
or
sbb
gs
roll
sbb
es
fldt
sub
fildl
xor
mov
sbb
push
ficompl
loop
or
bound
mov
mov
loopne
test
push
es
das
mov
jecxz
pushf
push
pop
jns
movsb
cwtl
mov
dec
xchg
adc
mov
sti
inc
fucomi
cli
add
nop
push
lret
stos
cmp
jmp
lret
jne
mov
repz
dec
xchg
fldt
ljmp
sbb
aas
int
ret
out
mov
scas
sub
sub
cmp
es
sbb
outsb
lcall
mov
dec
and
pop
cmp
int
push
repz
cwtl
jmp
inc
scas
inc
push
mov
icebp
or
jg
pop
sbb
inc
ret
repnz
loop
dec
icebp
in
xor
in
jmp
mulb
stos
inc
push
out
adc
loopne
imul
lcall
mov
cmp
imul
or
lcall
mov
mov
pop
sub
jmp
movsb
rolb
adcb
cmp
jg
and
sub
sub
adc
jl
lcall
mov
sti
lcall
jp
ja
insb
cmp
dec
pop
outsl
loopne
xor
ret
xchg
loop
out
adc
cmc
pop
leave
jno
popf
fldenv
insl
dec
stos
xor
push
sarl
fucomp
hlt
out
mov
cs
stos
stos
fistl
icebp
ficoml
inc
adc
cs
dec
movl
and
lcall
loopne
xchg
sbb
in
add
adc
imul
xlat
lcall
stc
pop
xor
and
sub
add
out
cmpsb
push
push
mov
outsl
xor
jb
pop
jl
shrl
jle
shlb
imul
test
push
inc
xchg
jmp
lahf
adc
jne
sub
push
cmp
sub
inc
ds
rolb
pop
jecxz
dec
daa
fcoml
sti
mov
in
clc
mov
push
mov
in
jae
mov
aaa
jecxz
stos
cld
insb
xor
xor
xchg
push
add
jmp
test
jno
mov
leave
test
sub
sti
repz
sbb
or
movsb
sub
inc
shll
dec
roll
stos
add
int
xchg
scas
daa
lea
sub
mov
and
sub
stos
aad
js
xlat
inc
and
sbb
push
jb
add
cwtl
ljmp
pusha
xor
push
jle
push
outsl
push
cmp
addr16
aad
pusha
mov
cli
leave
ficomps
stos
adc
lret
hlt
xor
shlb
sbb
mov
scas
mov
stc
iret
lcall
xchg
lcall
pop
push
std
pop
roll
in
stos
fnsave
out
dec
stos
adc
xor
xchg
mov
add
add
cltd
bound
mov
mov
rcl
sub
sub
dec
cmp
cmp
or
xor
imul
xlat
imul
xor
movsl
and
rcr
add
xor
rorl
dec
inc
xor
or
cmpsb
dec
sbb
call
sbb
mov
das
xor
cmpsb
cltd
fldcw
sbb
xchg
pop
enter
stc
fcmovnu
push
ficomps
mov
dec
xor
mov
arpl
ljmp
mov
sub
and
cmp
lcall
enter
fstpt
or
mov
fistl
inc
sub
cmc
sbb
mul
mov
shlb
add
add
adc
outsb
jns
maskmovq
dec
pop
xchg
cltd
aad
mov
mov
data16
fcomi
mov
cwtl
call
adc
shrb
cmp
test
ficoml
pop
pop
icebp
fninit
divl
rol
xchg
inc
cmp
dec
push
in
aad
pusha
pop
iret
test
add
jne
fimuls
aaa
je
cmp
pop
cmp
pushl
enter
je
jmp
int
or
arpl
fildl
push
sub
inc
xchg
dec
rcrl
fiaddl
inc
fisttpll
je
pop
push
insl
cmp
mov
adc
add
sbb
push
add
imul
lcall
inc
add
fldt
adc
loopne
push
aas
mov
pop
fisttpl
cmp
jl
push
sbb
cmp
add
das
in
push
or
lock
and
loope
mov
mov
cwtl
xchg
xchg
stos
pop
ficompl
xor
dec
mov
lds
movsb
inc
cmp
adc
test
mov
fucomp
data16
mov
push
frstpm(287
xor
dec
fisttpl
mov
cmpsb
popa
loope
enter
cmp
xchg
data16
cmpb
call
xlat
pop
mov
cmpsl
fwait
mov
in
inc
push
push
sahf
mov
fs
jmp
pop
sbb
fistpl
pop
stos
mov
adc
ret
mov
movb
idivl
daa
xchg
pop
xor
scas
ret
cld
fcmovne
add
lret
ljmp
ficompl
movsb
xchg
push
dec
push
xor
dec
xchg
test
push
call
mov
mov
fldcw
inc
icebp
cmp
out
clc
cmpb
cmp
loopne
rcl
insb
nop
push
icebp
scas
or
aam
loopne
xor
mov
scas
test
hlt
add
xchg
xchg
dec
or
cmp
xor
push
fcmovne
aas
inc
or
sub
push
das
clc
movsb
call
insl
cmp
cmp
mov
inc
call
mov
dec
sti
iret
xor
fildl
les
jno
adc
cmp
push
mov
xchg
dec
push
xchg
add
inc
mov
sbb
negb
mov
jno
movsl
sti
xor
inc
out
mov
xor
test
push
lahf
jnp
scas
sbb
mov
xor
es
pusha
xlat
insl
and
dec
xchg
mov
push
imul
xor
icebp
bound
pop
fisttpl
fsubrp
mov
fnstsw
xchg
mov
dec
lcall
push
add
mov
adc
fucomip
rcr
adc
pop
dec
and
fcmovnb
pop
fdivs
dec
sahf
lret
pop
imul
fisttps
dec
in
adc
scas
xchg
fistl
and
cmp
sub
into
loopne
and
cmc
and
imul
sbb
jns
inc
ljmp
sbb
out
jecxz
call
loopne
lcall
push
sbb
push
call
mov
fildl
stos
jle
dec
jns
mov
fistpl
scas
rcr
out
scas
fisttpl
jb
push
fldt
repz
stos
insl
and
pop
inc
jns
xchg
sti
and
sbb
cli
pop
mov
xchg
rcrb
sbb
or
aaa
inc
mov
fsub
stos
adc
aam
sbb
movntps
test
mov
cmpsl
adc
or
imul
cltd
pop
movsl
ss
xchg
add
jg
cltd
dec
pop
loopne
in
scas
loope
sub
jne
inc
leave
jl
sub
cmp
or
adc
mov
mov
out
stos
push
movsl
mov
std
out
push
loopne
ret
jge
sub
xchg
mov
sub
push
inc
ficoml
sub
nop
fistpl
rcll
fcmovnb
inc
data16
xor
test
lds
rolb
movsl
mov
stos
xor
push
aad
ficoml
cltd
call
ss
push
lahf
mov
jo
dec
mov
mov
shl
or
or
push
ja
mov
fisttpl
arpl
mov
add
cmp
xor
adc
mov
dec
lock
adc
fildl
pop
sub
js
rcr
cmp
outsl
mov
movsl
pop
push
ficompl
pop
mov
adc
pop
dec
cwtl
stos
out
lcallw
pop
xchg
je
ds
cmp
pop
xor
mov
cmp
add
and
add
cltd
int
cmpsl
icebp
xchg
nop
aam
sub
mov
xlat
jl
and
xor
cmp
jmp
inc
fcmovnb
push
popa
and
mov
mov
xlat
pop
mov
xor
fstps
push
icebp
push
jmp
outsl
pusha
stos
mov
cmpsl
repnz
xor
lock
cmp
xchg
xchg
and
add
or
out
shl
jnp
push
jo
ljmp
lods
fcmovnb
cmpsl
rorl
loope
push
dec
dec
loopne
sbb
xor
insl
daa
pop
fistl
scas
or
xlat
and
or
xor
pop
jg
add
add
hlt
cmp
dec
nop
dec
fimull
xor
lret
shlb
inc
push
dec
fneni(8087
clc
sub
cld
or
xor
ja
fistpl
adc
mov
jo
sub
fstpt
pusha
cmp
fs
or
je
dec
adc
fisttpl
jns
cs
loop
and
imul
sbb
sbb
cmp
jmp
enter
xchg
push
xchg
in
jbe
in
fcmovnu
rorl
in
xor
pop
dec
or
clc
adc
jo
xchg
pop
cmp
push
fs
xchg
mov
hlt
xor
les
add
mov
xchg
data16
push
cwtl
in
cmc
fldt
adc
or
out
add
leave
ja
mov
stos
fcmovnu
testb
push
cmp
enter
fcmovnu
sbb
sahf
and
rorb
and
cwtl
push
lcall
stc
insb
popa
sti
sub
add
gs
xor
sahf
jbe
and
loopne
jnp
pop
fstp
gs
dec
popa
add
lret
mov
clc
cmp
in
stc
fidivl
fistl
or
mov
inc
dec
push
aam
cmp
cmpsl
mov
ds
ffreep
scas
mov
sti
jl
mov
mov
mov
cmpsl
ret
xchg
mov
sbb
stos
xchg
adcl
insl
dec
call
dec
sbb
xor
fcmovnu
lea
dec
xchg
rorb
incb
jbe
and
es
mov
mov
fistl
bound
jbe
lds
and
xchg
push
outsb
pop
jle
scas
xor
stc
mov
xchg
pop
cmp
inc
inc
repz
jmp
sti
imul
mov
fildll
pop
hlt
mov
sub
sbb
push
adc
cmp
and
aas
push
leave
adc
push
fcmovne
fldcw
push
pusha
insl
inc
push
dec
lahf
clc
mov
mov
jmp
enter
leave
adc
fldt
mov
movb
fists
in
cmc
pop
xchg
fwait
jp
fldt
int3
mov
or
pop
fcmovnu
lods
sbb
clc
push
andb
and
fildl
cmp
in
cmc
fisubrl
lcall
rorl
mov
repnz
mov
mov
iret
cmp
aad
mov
lret
lret
inc
sbb
sbb
pop
leave
aas
mov
and
inc
sub
mov
subb
lods
mov
test
lcall
pop
fsub
mov
mov
mov
call
rcrb
js
xor
sub
jbe
jno
inc
ljmp
jnp
add
add
inc
xor
pop
std
idivb
mov
mov
push
daa
inc
mulb
lods
movsb
fs
popa
sti
mov
mov
add
add
mov
call
comiss
sar
jno
xor
fwait
shll
and
stos
dec
lcall
into
subb
mov
cmp
xchg
gs
xchg
int3
test
aam
ss
js
sub
push
lods
nop
mov
xor
or
clc
fidivrl
lcall
mov
ljmp
js
inc
mov
push
fildl
hlt
add
inc
icebp
fldt
fadds
test
xchg
pop
fildl
or
and
jns
leave
out
mov
cmpsl
xchg
mov
or
xor
sbb
loope
fisttpl
push
fisubrl
addr16
xor
cmp
repnz
jns
xor
fidivrs
mov
out
les
pop
icebp
xchg
rcrl
in
mov
xlat
fcomp
ja
push
or
sub
jg
stos
test
scas
out
cmpl
add
fsubrs
lock
mov
mov
jns
mov
lods
and
ret
cld
pop
aam
outsb
pop
rolb
sar
pushw
call
push
negb
cmp
push
adc
add
dec
mov
cld
insb
mov
pushf
mov
xor
data16
jo
neg
dec
push
inc
sub
pop
test
sbb
push
push
pop
ds
mov
fs
cs
pand
inc
fwait
mov
fildl
gs
mov
mov
fstpt
das
lcall
lahf
lock
add
clc
cltd
jp
sbbb
lret
stos
shlb
dec
xor
add
pop
sub
pusha
or
rorl
lahf
fldt
ficompl
sti
xchg
sbb
sarb
je
cs
lock
js
outsl
lahf
mov
mov
lahf
cli
jecxz
jnp
aaa
adc
sbbb
push
fstpt
inc
pop
push
xchg
xchg
sub
ja
outsl
sub
cmp
sbb
into
iret
mov
adc
fldt
nop
jp
fistpl
fs
stc
ffree
es
sub
push
ficoml
out
fistpl
mov
mov
mov
stc
lahf
jp
aas
mov
std
jo
sub
inc
sbb
mov
mov
call
aam
fistpl
test
mov
stos
push
fninit
and
fnsave
ds
pop
add
dec
cmc
rcr
lods
sub
xor
jg
or
fidivrl
push
pop
nop
adc
sbb
xchg
shll
mov
lods
xor
mov
push
inc
data16
add
stc
int3
pop
adc
lods
fwait
and
dec
jns
clc
das
jl
test
loopne
fdivrs
mov
fildl
das
xchg
dec
imull
jne
cmp
xor
rclb
push
jnp
fucomi
mov
bound
rcrl
aas
inc
inc
and
rclb
adc
fst
loopne
addl
insl
cld
cmp
pop
pop
jle
xchg
gs
add
sub
pop
push
popa
lea
dec
in
rcll
xor
or
inc
adc
xor
jno
ss
mov
sub
or
rcr
fwait
ljmp
loopne
cltd
dec
mov
pmulhuw
dec
lahf
mov
sbb
or
sub
stc
lock
jg
sub
jo
cwtl
jne
rol
loopne
add
dec
call
xor
lock
call
xchg
in
in
add
cmpsl
cmp
inc
pop
adc
sbb
add
sub
mov
and
dec
std
aas
pop
divb
pushf
mov
pop
and
subl
mov
sub
push
cmpsl
fistl
outsl
aam
fldt
sub
lods
lret
mov
fstpl
xchg
xchg
sub
idiv
ja
push
jg
lds
or
imul
fcomi
test
aam
loopne
xchg
sub
or
fstpt
bound
fimull
lret
scas
cmp
adc
dec
arpl
fcmovne
cltd
testb
ljmp
mov
out
cmp
aad
fldt
push
test
jbe
pop
mov
mov
pop
insb
fistpl
enter
in
jae
xor
fisttpl
addb
lahf
fistl
in
push
sbbl
xor
pop
mov
cwtl
cmp
ret
mov
cmp
push
mov
pop
lods
enter
loopne
jmp
mov
in
or
xor
xchg
pop
dec
jne
add
pop
adc
loopne
cltd
jle
sub
pop
movl
jnp
jge
dec
cmp
imul
add
push
stc
fcmovnu
jecxz
out
out
and
jp
sbb
sub
lret
fcomi
ljmp
inc
popa
dec
or
fildl
push
lret
scas
out
sbb
into
sbbl
push
push
fstpt
cmp
fstpl
xchg
testb
add
std
cmp
cli
pop
fs
movsl
sbb
mov
ficoms
xor
mov
int3
repz
js
fcoml
mov
push
sub
push
jne
adc
loope
add
clc
and
adc
xchg
push
lcall
gs
lcall
leave
fldt
movsl
stos
inc
enter
fadd
sub
fidivrs
inc
and
popa
shl
jo
shrl
mov
out
mov
add
lcall
cwtl
in
pop
xor
pop
jo
sbb
adc
add
in
inc
mov
fstpt
xchg
fistpl
jecxz
imul
dec
sar
pop
loopne
inc
fiadds
fwait
mov
inc
mov
mov
fildl
cmpsl
mov
clc
cs
jo
imul
xchg
stos
test
fistpl
jb
adc
fwait
sbb
and
loopne
push
clc
fistpll
xchg
push
or
aas
jb
push
sub
hlt
adc
or
xchg
jmp
fistpl
push
out
test
pop
fildl
dec
dec
pop
repnz
fildl
mov
notl
addr16
std
mov
out
fstpt
mov
shrb
movsl
insl
inc
fistl
pop
pop
popa
pop
out
fildl
aas
inc
pop
and
or
dec
cltd
data16
cmpsb
add
xor
pop
notb
mov
dec
add
cwtl
sub
daa
lahf
js
dec
mov
or
sbb
scas
pop
dec
xlat
imul
push
xorl
adc
inc
adc
push
jne
inc
in
pop
xor
push
test
mov
aad
loopne
mull
or
cmpl
cmp
push
sbb
fucomi
test
shl
sbb
adc
lock
js
aas
pop
not
fcmovne
stc
push
test
sub
imul
adc
aaa
jo
pop
arpl
xchg
fcmovnu
cmpsb
mov
pop
inc
pop
pop
dec
mov
mov
js
mov
inc
in
pop
arpl
dec
das
fcmovnb
xchg
data16
rorb
xchg
loopne
test
call
movsb
mov
fcmovnu
dec
imul
inc
in
push
fisubl
es
popa
adc
inc
outsb
sbb
and
sub
daa
or
xor
pusha
clc
repz
ja
imul
jecxz
popf
test
leave
mov
nop
je
push
xor
adc
notl
insb
movsb
sub
pop
sub
testl
adc
popa
mov
sub
xchg
je
int3
mov
jl
pop
repz
and
daa
cwtl
test
lret
les
xor
fisttpl
adc
or
inc
mov
jbe
fildl
jno
movq
jg
nop
inc
fildl
xchg
jp
xor
sbb
mov
std
adc
mov
cmpsl
add
adc
dec
adc
in
fcmovnbe
iret
mov
in
insb
mov
or
fcomps
loopne
jbe
xchg
in
cmp
lea
leave
mov
mov
les
movsl
push
sbb
xchg
add
push
test
inc
sti
pop
jmp
addl
call
jnp
or
scas
jge
inc
jns
push
xchg
outsl
push
add
mov
cmpxchg
xchg
cmp
cmpsb
rcrb
xor
push
mov
push
adc
sbb
ja
sbb
call
fwait
cmp
dec
mov
sub
mov
movsl
jbe
mov
pushf
mov
test
fcmovne
jl
mov
fildl
rcl
loope
pusha
mov
or
mov
outsl
in
shll
ja
sti
cmp
adc
mov
lcall
mov
test
dec
pop
mov
mov
xchg
sbb
add
std
inc
fdivr
push
in
aaa
adcb
add
fmul
push
pusha
cmp
fimull
push
das
andl
push
adc
rcrb
jecxz
loopne
or
movsb
push
sub
jg
repnz
jnp
cmp
xor
sbb
fcmove
stos
cmpsl
jnp
or
test
push
push
xor
pop
xor
add
test
pop
jns
jne
inc
hlt
sub
add
repnz
xchg
xor
cmpsl
mov
sub
and
adc
pop
vmovq
stos
ja
and
decb
out
notb
mov
fstpt
leavew
jne
push
ficoml
dec
and
fisubrl
adc
inc
jecxz
xlat
icebp
je
es
cmpsb
pop
loopne
out
divb
mov
mov
aaa
incb
sbb
inc
sbb
adc
pop
push
dec
outsb
push
inc
jle
and
sub
pop
sbb
fcmovnb
jb
xchg
mov
jns
lret
xor
addr16
mov
mov
testb
mov
cmp
or
pop
mov
fcmovb
add
pop
mov
mov
jno
lcall
lea
xchg
imul
addr16
xchg
aaa
sar
std
push
call
enter
add
and
mov
das
dec
icebp
mov
sbb
mov
movsl
test
subb
in
ds
fisubs
mov
mov
inc
in
leave
clc
sub
jge
int3
push
mov
aad
dec
add
adc
push
daa
fstpt
insl
add
iret
ret
lahf
xchg
mov
pop
pop
mov
call
fstpt
mov
test
adc
das
orb
sbb
into
loopne
sahf
ljmp
and
push
and
push
mov
stos
xchg
scas
or
dec
mov
push
call
imul
lret
cmp
gs
pusha
pop
je
negb
fistpl
stos
push
push
jl
push
fimull
cmovns
sbb
fdivs
mov
dec
push
mov
popf
mov
dec
ss
jmp
fists
adc
std
pop
pop
and
push
fcmove
mov
mov
fwait
arpl
std
adc
or
dec
nop
outsl
push
xor
push
out
xchg
fcomi
adc
push
hlt
cmp
lret
adc
repz
jmp
insl
mov
shlb
jb
cmc
xchg
mov
push
std
fmuls
jecxz
cmp
push
jge
mov
mov
xchg
aad
push
fildl
inc
lods
les
sbb
lea
gs
add
mov
pop
lcall
int3
icebp
or
enter
xchg
gs
adc
out
mov
cmp
loopne
sti
fdivrl
lret
mov
popl
incb
call
out
into
jmp
mov
pop
sub
neg
cmpps
push
pusha
and
xor
mov
ljmp
sub
arpl
cld
inc
scas
push
mov
pop
mov
or
into
cmp
fisubl
dec
fsubrs
ret
out
test
cmp
xor
cs
mov
sbb
xor
and
pop
sar
xor
repnz
testb
sahf
adc
pop
pop
in
int
in
call
push
lcall
add
pop
test
rorb
movsl
clc
stc
cli
push
notb
fimull
es
enter
jg
cmp
dec
rcr
or
fdivr
test
fildl
pushf
call
mov
xchg
mov
mov
pusha
pop
push
sbb
push
jg
ud1
jns
icebp
int
test
mov
orb
in
popf
jp
fldt
push
or
xchg
fldenv
cmp
scas
mov
or
mov
fcmovnbe
popf
mov
jb
sub
jmp
in
cmpb
imul
stos
jae
fcoml
lds
scas
ret
lock
lods
adc
pop
or
xchg
adc
int3
adc
mov
loopne
xchg
mov
add
rcr
fwait
dec
daa
imul
or
fistpl
aam
cmp
or
sub
sbb
fisttpl
mov
push
in
test
inc
dec
cmpsb
mov
sbb
fnstsw
pusha
insb
pop
mov
stos
jle
cmp
lret
daa
xlat
xchg
js
cmp
dec
stos
fucom
and
ljmp
mov
push
fisttpl
repz
fstpt
rcll
jg
into
sub
rcll
loopne
fisubrl
cwtl
call
dec
pop
fcompl
js
sahf
stc
lock
mulps
fmul
imulb
jmp
mov
add
bound
xor
test
jmp
mov
inc
in
popf
fnsetpm(287
mov
cmpsb
jle
mov
mov
adc
je
fisubrl
mov
fisubl
sahf
pushf
fdivr
sub
adc
mov
cld
push
ret
sub
mov
sbb
pop
pop
out
mov
adc
dec
movsl
pop
loopne
fistl
data16
cmpsl
cwtl
in
fldt
inc
aas
pushf
cli
jmp
inc
cmpsb
xchg
sarb
fisttpl
outsl
cmp
sarl
aad
adc
mov
push
aam
cmp
cmp
adc
mov
xor
addr16
inc
mov
xchg
ret
mov
popf
sbb
insl
sbbl
mov
std
out
popf
rcrb
jnp
jl
sub
fildl
adc
repz
pop
adc
inc
stc
lcall
add
push
xchg
fcmovu
cmp
sub
mov
dec
xor
pushf
dec
lret
cmp
ficoms
rorb
in
dec
fcomi
inc
push
rdpmc
or
mov
sahf
fistpl
jp
cmpsb
mov
adc
mulb
push
pop
out
mov
sbb
adc
aaa
sub
and
subb
std
mov
xor
pushf
cmp
cltd
add
push
push
lods
xlat
push
popa
fistpl
jl
lret
fisttpl
push
adc
cmp
shll
sbb
mov
mov
dec
ss
xor
sbbl
out
aaa
mov
add
jl
sub
dec
neg
xor
jb
xchg
scas
cld
fucomi
mov
and
mov
xor
insl
sub
pop
sub
scas
dec
cmp
dec
sub
negb
aas
daa
fisubrs
in
lods
repnz
iret
push
dec
inc
pop
cmp
pop
sahf
cmp
xor
outsl
inc
bound
popa
in
and
cmpsl
mov
push
clc
lea
fstpt
xor
or
movsl
addl
adc
mov
into
shll
pop
jp
fcmovnb
push
inc
and
fnstcw
fcmovne
xor
in
imul
sbb
ja
and
pop
adc
push
cmp
lea
mov
sbb
aas
pop
jge
sub
bound
adc
jl
xchg
sub
sub
jbe
nop
sbb
mov
es
std
and
sub
repnz
mov
and
mov
ja
jg
xor
mov
cmp
das
lret
lahf
dec
push
adc
mov
push
fdivrl
ja
and
and
xchg
add
out
mov
jmp
rcrb
cmp
lds
hlt
lock
movb
xorb
fisttpl
jge
lods
fcomp
jb
jmp
or
add
xchg
loopne
inc
enter
xlat
mov
or
cltd
cmp
sarb
ja
mov
lcall
arpl
push
call
push
push
jb
bound
mov
es
lcall
xchg
loope,pn
fsubl
in
adc
pop
stos
lcallw
xchg
fnstenv
fnstsw
pop
sbb
aaa
mov
pop
xor
leave
add
mov
push
fistpl
into
push
mov
fisttpll
clc
push
cli
push
repz
into
mov
mov
adc
fisubl
or
sub
mov
dec
jbe
sub
add
shll
inc
fnstsw
call
pop
pop
in
mov
loop
xor
mov
dec
fnsave
mov
shl
in
gs
pop
pop
xchg
pop
fstpt
roll
fstpt
in
cltd
and
push
xor
pop
in
xchg
cmp
mov
incb
je
pop
fmull
add
lcall
sbb
in
cmp
std
insl
imul
sub
cmc
ret
mov
je
dec
jmp
fneni(8087
xor
ret
push
add
xor
pop
lret
mov
hlt
dec
or
jmp
pop
mov
fcmovnbe
jle
outsl
jno
incl
lock
rolb
aaa
jp
push
stc
jecxz
test
fildl
scas
sahf
mov
pop
cmp
add
int
adcl
add
jge
mov
ljmp
and
ds
push
add
in
ljmp
notb
sub
nop
popf
imul
dec
push
dec
lret
dec
pop
jnp
fistl
jmp
mov
fstps
xor
mov
cmp
dec
les
call
mov
fistl
or
cmc
movsb
pushf
mov
cmp
test
ret
mov
add
repz
push
int
sahf
cltd
sbbl
fsubrs
fistpll
pop
pusha
and
fisttpll
sub
clc
xchg
cmp
daa
mov
mov
jnp
mov
prefetch
pop
fwait
xchg
sbb
add
notl
jge
mov
fcomps
cmpsl
int3
repz
ss
pop
inc
mov
or
inc
inc
xchg
fisttpl
outsb
sbb
push
adc
mov
and
mov
mov
in
fstp
rorl
hlt
repz
add
out
mov
xlat
inc
push
mov
lods
mov
mov
sbb
cwtl
cmp
sbb
dec
xchg
push
frstor
mov
inc
mov
adc
push
push
sub
in
cltd
push
jns
xchg
jo
sti
xchg
sbb
fidivl
fstpt
subb
inc
es
call
jecxz
loop
mov
test
dec
sbb
jns
in
or
daa
push
fucomi
testl
call
pop
mov
dec
push
xchg
mov
dec
cmp
stos
test
mov
std
sbb
inc
or
xchg
ret
je
jo
fldt
stos
cwtl
inc
fisttpl
sub
gs
test
fisttpl
jge
xchg
adc
xchg
loop
xor
jns
call
mov
add
dec
add
pop
jecxz
out
and
xchg
or
fcmovne
sub
inc
fildl
sbb
push
adc
inc
call
or
cmpsb
popa
gs
ja
xchg
push
mov
cmp
jp
mov
sub
lods
pop
aam
fcmovnb
cmpsb
jae
lcall
sbbl
lds
xchg
out
mov
fildl
andb
sbb
jg
adc
fldt
jnp
loopne
jmp
adc
pop
mov
call
jmp
fildl
call
enter
adc
push
rcl
loop
jge
in
fldt
stos
adc
outsl
pop
pop
add
pop
lea
fmul
mov
in
or
imul
roll
orb
pop
pop
or
dec
scas
fcmovne
xor
in
jbe
jmp
inc
es
mov
std
js
sub
aaa
push
sbb
data16
mov
stos
cmpsl
lret
pop
push
divb
inc
pop
test
lods
mov
pop
test
fsubrs
mov
dec
mov
lcall
or
fistpl
leave
test
jg
jmp
jns
adc
jmp
icebp
int
xchg
cli
daa
fldt
sub
jb
add
frstor
xor
xchg
lcall
jmp
fistpl
cwtl
add
fsts
iret
jp
pop
data16
jmp
jle
xor
push
fnclex
xchg
sahf
push
out
and
dec
adc
fnsave
lahf
pop
push
dec
insl
scas
fwait
jg
sbb
inc
pop
fcmovu
je
jb
roll
xor
imull
inc
outsl
fcomi
in
test
and
inc
fstp
cmp
fsub
leave
sti
out
ja
bound
mov
adc
xchg
repz
jecxz
dec
aaa
dec
sar
mov
sti
and
incb
sub
into
repnz
in
cmpsb
and
cmp
dec
shl
ret
scas
fcmovnu
repnz
fsubrl
push
sub
fs
add
pop
sahf
adc
lea
mov
rcr
dec
pop
mov
insl
std
insb
sbb
inc
inc
mov
shl
pop
fcomps
mov
jnp
sbb
ficompl
mov
mov
push
lea
cmc
mov
adc
inc
sub
mov
sti
in
imulb
sbb
adc
xchg
dec
fcmovnu
xchg
xchg
inc
push
rol
mov
sbb
and
mov
xor
leave
ficompl
sub
fsts
fstpt
test
add
jbe
jmp
jg,pt
enter
into
pusha
fisttpl
cmovne
sarb
sub
add
aam
jne
cld
js
mov
dec
mov
in
lock
sti
push
div
negl
cld
fcomi
push
cmovg
lods
loopne
fcmovnb
mov
arpl
lock
push
sahf
mov
outsb
fwait
or
fistpl
jne
scas
fstpt
mov
rcrb
frstor
mov
cmp
xchg
and
jnp
dec
cwtl
add
inc
ss
insb
cmp
int3
fldt
dec
pop
out
push
pop
mov
xchg
xor
jmp
push
hlt
mov
adc
cmp
jge
int3
and
inc
hlt
loopne
ret
xlat
mov
xor
fistpl
cld
inc
ljmp
xchg
sbb
das
inc
dec
fistpll
ret
ds
aam
xchg
xchg
call
cli
fmuls
push
xchg
icebp
in
and
xor
pop
mov
ds
rolb
push
cmpsb
adc
push
and
inc
clc
out
push
push
scas
inc
shlb
out
movsb
flds
xchg
or
data16
fdiv
scas
lds
aad
adc
xchg
xchg
fildl
shrb
add
fldt
and
and
push
mov
add
in
fstpt
in
lret
aaa
xchg
sbb
xor
pop
sahf
lret
pop
and
es
pop
sub
mov
push
outsl
push
stc
fnstsw
jmp
lcall
out
hlt
shll
divb
aas
xchg
gs
sti
fstl
mov
aam
push
fwait
jp
fistpl
in
test
aad
sub
out
stc
or
pop
js
ljmp
xor
imul
rol
in
sub
cltd
sub
xor
nop
mov
ljmp
int3
jnp
mov
xchg
xchg
mov
fnstsw
subl
jae
lret
and
es
mov
xorb
into
ret
ret
lods
add
mov
dec
mov
xchg
fldt
jge
stc
cli
mov
setno
lret
pop
imul
sub
mov
repz
scas
lret
xchg
cmc
fcomi
jge
bnd
lods
sub
test
mov
pop
in
push
mov
stos
jg
out
loop
xor
mov
adc
push
jmp
cld
movsl
mov
lret
or
jnp
out
mov
lcall
jno
imul
or
jns
pop
push
sbb
pop
xor
cwtl
xchg
mov
loop
rorb
adc
or
xor
loope
test
mov
mov
in
shlb
fwait
dec
stc
add
fwait
push
fcmovne
mov
dec
dec
ret
fildl
ds
mov
fldt
lret
shrb
sbb
xchg
add
cmp
jp
cmp
loopne
push
sbb
or
mov
cltd
into
rcrb
pop
repz
or
fdivrl
add
lcall
jecxz
fstpt
cltd
fisttpl
loop
pop
rolb
xor
mov
jecxz
mov
mov
and
roll
sub
call
in
pop
in
add
inc
scas
bound
push
adc
cmp
stos
adc
sbb
sub
lods
enter
jno
and
sub
fisttpll
adc
movsb
es
idiv
clc
div
mov
mov
out
nop
fcmovnu
dec
dec
aad
imul
ljmp
daa
add
cmc
jne
add
sbb
loop
lahf
xchg
sbb
scas
roll
push
inc
mov
cmp
fs
and
adc
pop
out
sbb
xor
inc
ljmp
xor
push
in
xchg
xchg
loope,pt
les
nop
inc
dec
mov
xrelease
lds
pop
ljmp
xchg
mov
dec
adc
pushf
fbstp
loop
lcall
movsb
add
mov
aas
fwait
xor
dec
xchg
dec
in
lods
xchg
out
lcall
mov
repnz
cmp
popa
in
loopne
stc
scas
insb
mov
lock
jb
std
fisubs
fcmovne
mov
cmc
in
cmpb
out
insb
or
pop
cmp
fldt
aas
and
insb
js
dec
or
mov
frstpm(287
sub
cs
add
lds
and
sbb
data16
cmp
ja
sub
pop
dec
jg
sbb
mov
fldt
imul
fcmovnbe
sub
cmp
insl
addr16
adc
push
cli
dec
fmul
repnz
fnsave
mov
xor
xchg
jg
xchg
inc
out
sbb
lret
xchg
insl
fistpll
movsl
stos
push
popa
jg
in
jbe
mov
xor
jae
mov
fldt
mov
or
dec
test
mov
mov
sub
repnz
fneni(8087
adc
scas
fstpt
jecxz
xchg
aam
ljmp
pop
mov
jmp
jb
mov
xor
sbb
js
sbb
scas
pushf
lret
sub
inc
fildl
adc
adc
dec
sbb
cli
dec
lahf
test
fildl
jns
fistl
jnp
cs
dec
mov
ficoml
fstpt
jbe
sub
push
arpl
fistpl
mov
clc
jbe
fcmovne
outsl
aas
mov
fstpt
scas
inc
dec
fildl
call
sub
push
imul
subl
je
in
xor
into
lods
hlt
stc
push
pop
xlat
xor
jns
daa
decl
insb
jle
repnz
dec
mov
mov
dec
shl
inc
adc
mov
push
pop
or
leave
and
inc
pop
inc
mov
outsb
dec
lahf
jns
ficompl
loope
adc
mov
mov
shr
pop
test
adc
in
jnp
adc
mov
jmp
icebp
cld
arpl
aad
adc
xchg
lret
test
mov
cmp
ret
fidivs
jnp
imul
fisttpl
mov
test
aas
inc
out
fcmovne
sarb
gs
jo
mov
jp
push
inc
repz
arpl
lret
mov
dec
and
xchg
int3
and
jb
sbb
mov
stos
push
sarl
out
ret
pushf
loope
dec
pusha
in
mov
mov
loop
out
adc
fistl
in
inc
dec
and
divb
mov
inc
adc
inc
lcall
jl
push
sbb
ja
test
lock
sub
aad
push
push
es
pop
mov
xor
xor
daa
push
or
mov
mov
jns
push
mov
mov
inc
fistpl
ficoml
pop
bound
lods
fldt
inc
out
imul
fldt
push
enter
mov
adc
adc
lods
fldt
fisttpl
aas
es
xchg
movsb
xchg
adc
fldenv
gs
or
loope
inc
cmp
inc
aaa
sub
pop
lahf
fucomi
jb
cmpsb
mov
fistl
scas
adc
in
dec
andb
lcall
test
mov
push
sub
inc
or
lods
int
push
pop
fisttpl
test
loop
arpl
rcr
dec
dec
push
push
fstpt
mov
mov
mov
add
cmp
push
fistpl
pop
ret
jnp
clc
add
leave
cmpsl
ss
sub
add
jmp
dec
call
rcrl
dec
mov
sbbb
daa
sub
in
jl
cmp
mov
push
mov
cmp
jo
stos
mov
jmp
cmc
call
mov
mov
test
fnsave
fadds
xchg
into
sbb
or
sarl
push
mov
cltd
dec
out
stos
xor
adc
movsb
xchg
sbb
stos
sbb
pop
sarb
mov
icebp
xor
xchg
in
shll
mov
rcrl
pop
jmp
cwtl
dec
idivl
mov
dec
iret
stos
call
lods
xchg
bound
stos
add
lea
pop
leave
mov
mov
inc
pop
pushl
fcomip
inc
stos
lods
adc
imul
fs
xchg
cwtl
cmp
inc
outsl
scas
dec
clc
xlat
ret
sub
cmp
fldt
xchg
es
add
jnp
fisubrl
fisttpl
out
fcmovne
std
xchg
pop
cltd
dec
xor
dec
push
mov
adc
fildll
stos
mov
mov
pop
jbe
fiadds
or
fwait
sbb
fistps
mov
mov
fcmovnu
lcall
cmpsl
rcll
inc
and
xchg
imul
and
or
cmp
out
push
rcrb
add
dec
lret
inc
fisttpl
add
enter
xor
sbb
pop
nop
data16
ljmp
cmp
stc
xor
fldt
mov
bound
aaa
mov
pop
adc
cmpsb
loopne
lret
jno
xorl
sbb
mov
rcl
lock
outsl
sub
push
sbb
xor
call
pop
scas
push
popa
imul
cld
mov
sub
out
dec
push
or
clc
nop
bound
pop
pop
mov
pusha
cmc
mov
mov
mov
push
insb
sub
imul
mov
jbe
aas
lea
fisttpll
ljmp
jo
repnz
daa
jnp
mov
xorl
fbstp
mov
loope
fwait
or
loopne
jno
cmp
xor
or
fstps
push
in
add
push
pop
idivb
mov
add
call
inc
arpl
mov
lock
pop
fcmovnu
shl
movsl
and
xor
pop
movsl
inc
pop
adc
dec
test
push
xor
jp
inc
or
ljmp
imul
dec
and
pop
loop
dec
pop
int3
shll
xchg
xchg
adc
sbb
xchg
xor
test
pop
mov
clc
inc
fisubl
inc
and
dec
adc
call
icebp
sbb
ss
aas
or
sbb
pop
scas
into
test
mov
hlt
divb
push
dec
push
add
and
xor
sbb
or
cmp
push
sar
push
ljmp
fwait
cmp
popfw
mov
lahf
push
cmp
push
pop
fmull
in
inc
sub
sbb
sbb
xor
sub
int
lea
dec
xor
sub
out
rcrl
fldcw
fisubl
add
mov
fsubrl
stc
int
adc
outsb
es
fistpl
push
leave
sub
in
insb
mov
fistl
cli
cmpsl
and
fnstsw
mov
into
in
iret
pop
xchg
adc
imul
in
pop
pop
mov
das
add
inc
jg
cld
push
push
inc
call
stos
push
cs
inc
xor
bswap
jae
mov
lahf
jae
jnp
in
movsl
pop
fcmovnu
sub
lret
add
fdivs
repnz
push
pop
jbe
fisttpl
xchg
dec
cmp
aam
pop
fistpl
ss
cs
pop
enter
test
call
lods
out
ret
fildl
sbb
mov
adc
jne
lret
data16
dec
lcall
jnp
stc
outsl
lret
xor
jbe
es
dec
pop
fdivl
in
loop
push
add
shlb
icebp
lock
cmp
sbb
adc
adc
cmp
pop
pop
mov
fndisi(8087
out
aad
xor
pop
cmp
jmp
icebp
inc
jp
pusha
mov
movsl
ret
int3
fcmovu
or
rcl
es
mov
fildl
or
sbbb
push
cld
ret
movsl
fldt
fdivr
call
push
mov
or
int
fnsave
or
stos
xor
fcomi
sbb
mov
les
rcl
test
and
mov
call
adc
xor
int3
fsubs
push
dec
out
rcr
stos
fs
nop
jnp
rorb
mov
pop
and
xchg
adc
mov
fcmovnb
inc
in
push
xchg
jge
enter
or
aam
loopne
fiadds
scas
mov
in
bound
ret
int
jecxz
pusha
fildl
adc
out
imul
pop
add
push
clc
and
sub
sar
adc
push
push
mov
decl
jmp
xor
cltd
push
ja
jae,pn
push
outsl
push
das
adc
xchg
push
pop
int
adc
aaa
xor
xchg
lods
or
jg
adc
jmp
cmp
sbbl
jbe
sub
sti
push
mov
test
jmp
add
pusha
and
fidivrs
loop
cs
lods
jo
arpl
inc
or
dec
repz
add
xlat
mov
push
push
sarl
pushf
fstpt
mov
fcmovnb
mov
in
into
add
loopne
cmp
loop
clc
add
ret
fldt
ljmp
frstor
fstpt
mov
inc
and
sbb
jmp
push
jae
lret
fwait
out
mov
dec
rorl
call
fcmovu
dec
jb
cmpsb
cli
xchg
adc
ret
mov
loop
arpl
insl
or
xchg
repnz
dec
fildl
lret
push
ret
movsl
adc
dec
xchg
loopne
testb
fisttpl
add
jge
stos
pop
loope
lea
push
ret
inc
fcmovnb
outsb
cltd
or
fstpt
insb
pop
pop
mov
aam
adc
or
mov
movsl
insb
out
sti
pop
in
sbb
rcll
lods
pop
adc
jg
lcall
jb
gs
push
test
sub
adc
pushl
outsb
testb
push
sbb
fcmovu
xor
cmp
jnp
loopne
pop
push
ficoml
cmpsb
enter
fnclex
mul
sbb
aad
fildl
arpl
sub
mov
scas
push
in
jg
cmp
xchg
dec
fcomp
inc
adc
shl
insb
call
pop
fldt
jmp
sub
insb
fldt
push
fmul
mov
mov
mov
jne
or
mov
mov
xchg
push
jge
pushf
je
dec
push
jne
push
lds
in
jb
lahf
mov
in
xchg
xchg
aas
fldt
hlt
push
and
jg
dec
pop
leave
aaa
xchg
sbb
sbb
mov
call
cli
lods
addb
dec
nop
mov
pop
adc
xchg
xor
pop
pushf
fcmovne
jbe
cmpsl
jp
push
js
in
pusha
lods
pop
push
shrl
cwtl
push
sti
push
jno
pop
xor
das
in
clc
rcrb
push
xlat
mov
xchg
jnp
pop
inc
sbb
call
loope
mov
fucomi
jno
aas
adc
cmc
add
movsl
icebp
gs
orl
lcall
aad
shlb
ds
sbb
push
test
xchg
fwait
mov
dec
mov
inc
push
pushf
and
add
test
dec
inc
mov
sbb
out
imul
mov
outsb
js
inc
mov
mov
std
add
add
lods
pminub
cmpsl
pop
cmp
scas
xchg
adc
pop
lcall
pop
dec
out
push
outsb
mov
test
lret
mov
pop
jp
ud2
mov
insb
add
cld
add
xchg
and
pop
fldt
divl
fisttpll
sbb
imul
push
jmp
sti
fisttpl
in
mov
mov
or
mov
ret
jae
fs
jae
pop
insb
rolb
test
pop
sub
mov
jp
iret
sti
out
hlt
mov
mov
add
add
scas
adc
outsl
sbb
dec
inc
aaa
mov
inc
in
or
fiadds
imul
cmp
mov
jae
out
pop
repz
outsb
add
xor
fistpl
jno
pop
xor
test
jns
cmc
pop
fxch
iret
nop
adc
add
and
repz
stos
pop
push
add
int
jle
mov
outsb
pop
push
inc
and
aam
push
imul
repnz
inc
mov
jmp
push
rcrb
push
inc
int
pop
inc
mov
push
push
dec
in
nop
loop
idivb
jge
ss
notb
stos
add
or
xor
mov
loopne
lods
repnz
scas
jmp
test
cmc
hlt
cwtl
pop
in
cmp
add
xchg
xchg
inc
fcmovnu
leave
pavgw
repnz
test
pop
icebp
sbb
add
incl
mov
mov
mov
mov
push
push
sti
in
in
cltd
daa
xchg
add
jnp
mov
nop
addr16
pop
xchg
scas
sub
out
pop
movl
ss
dec
ljmp
es
sbb
ret
jle
gs
sub
es
or
push
cwtl
inc
pop
mov
loope
repz
bound
movsb
int3
sub
mov
pop
loope
nop
icebp
jp
pop
sbbb
iret
cmp
sub
add
gs
dec
or
jno
dec
fcmovnu
mov
lcall
pushf
pop
or
adc
dec
jg
ss
push
das
movntps
pop
scas
jp
lahf
call
icebp
mov
pop
addr16
xchg
int
cmc
lahf
shlb
mov
push
fsts
push
dec
mov
pop
mov
call
lcall
push
and
or
sub
out
fcmovnb
xchg
inc
or
repz
cmpsl
jge
xor
gs
lods
and
cmp
xchg
mov
pop
add
out
fcomi
fidivrs
pop
sarb
jp
mov
mov
outsb
mov
push
lds
jae
imul
mov
jmp
mov
cmp
loopne
shll
movsb
adc
xor
sbb
mov
iret
in
mov
mov
cmpsb
jo
filds
iret
jbe
int
jl
lcall
jnp
cmp
xchg
xchg
sbb
mov
fldt
leave
pusha
fdivr
aad
xchg
pop
clc
adc
lock
cmp
aam
insb
leave
fninit
xchg
dec
dec
out
divb
xchg
jno
or
sbb
es
cld
ficoms
sub
or
mov
jg
fistpl
cmp
fstl
js
arpl
fisttpl
rcrb
fistl
decb
add
xchg
jns
cmp
dec
jl
loopne
fcmovbe
dec
scas
add
sbb
pushf
int3
push
mov
aad
loope
jb
adcb
fildl
adc
loopne
rdmsr
out
add
push
mov
sbb
lea
gs
fisubrl
push
mov
fstps
push
imul
dec
lods
push
sbb
inc
adc
xor
test
fucomi
xchg
prefetch
adc
imul
aaa
dec
sbb
gs
push
mov
loopne
xor
cmp
fwait
push
lock
xchg
int3
jns
push
dec
aad
dec
xor
fdiv
xor
push
movsb
mov
aas
stos
add
and
inc
fwait
sub
jb
adc
iret
lcall
mov
out
cli
out
imul
mov
cli
xchg
ds
sbb
out
orb
outsl
aaa
jmp
push
fistl
repnz
mov
and
push
fcomi
imul
imul
inc
fcmovnu
es
in
lahf
mov
and
fwait
into
jle
outsl
xchg
je
pop
incb
les
cs
push
or
sbb
fnstsw
pop
mov
test
jnp
hlt
icebp
mov
push
cmpl
mov
jae
bound
stc
mov
je
aaa
fldl
xor
cwtl
cmp
mov
fstpt
mulb
out
jl
sbb
adc
cli
mov
movsb
xchg
mov
push
add
fsubl
push
dec
dec
dec
jb
cmp
push
sahf
jp
dec
and
ficompl
mov
int
fwait
in
pushf
mov
fistps
testl
in
test
adc
xchg
push
sbb
push
sub
fcomp
outsl
adc
mov
lahf
ror
adc
leave
test
xchg
rolb
ret
ror
xor
or
fs
hlt
sarl
mov
sub
cmp
roll
lret
movb
fildll
and
data16
rcrb
lock
mov
xor
mov
stos
fdivl
pop
int3
add
adc
in
imul
push
add
stos
idivb
loopne
xor
popa
fistl
xor
loopne
xchg
adc
cmp
cmp
loop
xor
sub
fcmovnbe
cmp
xchg
pushf
fildl
rorl
push
fstpt
int
mov
in
xchg
or
mov
cmp
jo
cmp
jle
arpl
fstl
sbb
scas
fstpt
fmul
popl
ret
lods
jns
push
adc
insb
mov
cmpsb
add
xchg
dec
cmp
cli
aad
jl
test
add
push
ret
pop
mov
adc
xchg
pop
inc
fcmovnbe
pushf
out
mov
fistpl
arpl
and
sub
fistl
je
inc
clc
stc
gs
mov
mov
out
inc
cli
dec
dec
adc
in
sbb
push
outsb
xchg
mov
sar
popa
sbb
lock
pop
add
pop
inc
call
xor
xlat
ficoml
mov
cmp
add
pop
orl
or
pop
dec
xor
push
inc
fsubs
push
je
push
lcall
outsl
mov
mov
ret
mov
sbb
call
sbb
out
shr
insb
inc
dec
fsubrp
into
pop
cli
pop
xor
mov
lods
jp
add
aaa
ficoml
xchg
or
int
adc
loop
pushf
loope
mov
jl
movsb
fistpl
int3
mov
scas
xlat
fildl
cmpsb
dec
push
xchg
fwait
lret
push
fcmovnu
add
inc
pop
fisttps
imul
xor
jo
sbb
gs
repz
mov
fucom
dec
cmp
mov
adc
fcmovnb
jecxz
pop
fistpll
in
push
xor
xor
inc
push
mov
decb
test
sbb
mov
inc
pop
xor
mov
dec
loop
add
and
aaa
stos
mov
add
xor
mov
aas
inc
iret
adc
fcompl
push
add
adc
sbb
pop
out
mov
cs
fistl
cli
incl
js
pop
mov
inc
fildl
and
jb
aas
cld
addr16
jge
xor
pop
fistpl
push
lret
add
jo
fadds
aam
mov
popa
pop
or
jns
mov
mov
cmp
sahf
arpl
lock
pop
fistl
pop
push
mov
loopne
cmpsb
movsl
enter
and
mov
test
mov
fcomi
pusha
mov
push
jnp
xlat
loopne
out
sbbb
dec
inc
xchg
shlb
fistl
lret
movsl
fbld
stc
fiadds
inc
mov
in
pop
xor
pusha
inc
lds
outsl
and
les
ljmp
dec
fcmovnu
sbb
cwtl
push
inc
push
mov
mov
cmp
adc
xchg
sbbl
loopne
andb
dec
pop
imul
dec
adc
sub
sbb
mov
in
scas
mov
fldt
fistl
pop
xchg
icebp
pop
insb
call
xor
mov
sbb
out
jnp
jg
xor
cld
nop
adc
push
in
push
clc
ficoml
pusha
rcrl
or
roll
idivb
fucomp
or
stos
mov
push
das
pop
pop
cwtl
mov
fmuls
movb
add
mov
push
fisttpl
lret
mov
loopne
push
in
fidivrl
and
aas
js
scas
dec
push
push
aam
insl
popa
push
pop
int3
aaa
es
call
push
jb
inc
fcmovnb
push
rorb
pop
mov
icebp
cmp
shll
ja
insl
lret
sbb
test
cmpsb
test
mov
adc
dec
les
aaa
ljmp
cmp
fstpt
mov
fldt
pop
lret
repz
dec
cmc
and
imul
dec
or
popf
jbe
jnp
add
lods
pop
add
adc
dec
and
dec
add
pop
sbb
jecxz
lods
les
cli
inc
jne
rclb
pushf
test
cmpsb
in
subl
xchg
xchg
mov
jo
repz
outsl
xchg
dec
fwait
aaa
adc
dec
cmp
inc
mov
pop
jp
testl
negb
fcomi
nop
xlat
jmp
inc
fistpl
push
jmp
stc
cld
hlt
stos
sbb
and
lcall
dec
sahf
push
xchg
mov
insb
jo
adc
clc
leave
roll
jnp
jmp
insb
ljmp
jbe
pop
sar
out
fldlg2
add
imul
push
pop
sbb
xchg
mov
pop
pop
int3
and
loopne
aad
pop
sti
lock
addr16
jb
fcmovne
ret
fs
dec
cmpsl
fcomip
xor
cltd
xor
mov
fidivrs
pop
andl
cwtl
test
lea
push
xor
clc
push
lods
fcmovu
mov
je
sub
jecxz
fcmovnu
nop
in
xchg
mov
dec
fldt
mov
mov
inc
xor
add
adc
jbe
or
push
mov
leave
xor
cmp
dec
aas
xchg
mov
xchg
add
pop
data16
imul
mov
in
cmpsb
xchg
stos
adc
iret
pop
les
adc
pop
or
aad
ljmp
je
xor
mov
cmpsb
gs
mov
inc
in
pop
push
adc
ss
or
ret
aas
xor
xchg
repz
fcmovnb
or
lea
mov
cmpsl
addb
add
sarb
mov
add
int
lret
aas
out
movl
sbb
cwtl
mov
and
jno
adc
fistpll
lcall
mov
ss
cmp
in
das
data16
call
xor
es
fisubl
mov
out
sub
adc
divb
cmp
clc
inc
pop
jge
sbb
fiaddl
pushf
ret
test
in
in
mov
scas
je
lods
addl
and
sahf
mov
push
mov
jmp
loopne
icebp
pop
jecxz
out
push
lret
jo
arpl
imul
xadd
sub
int
movsb
adc
outsl
push
pop
loopne
imul
push
push
aad
push
sbb
lods
stc
mov
lds
xchg
cmp
test
mov
adc
jp
not
sbb
mov
rcrl
cmp
aam
loopne
add
sub
fwait
mov
pop
adc
ljmp
pushf
ror
jle
mov
jb
fidivrl
stos
xor
pop
mov
jl
outsb
sub
xor
cmc
pop
jnp
cmp
jecxz
sub
out
imul
lds
cs
jle
mov
mov
shll
out
adc
out
pop
xor
pop
orl
sti
rorl
mov
repnz
xor
or
pop
out
sbb
push
push
dec
dec
out
adc
or
test
xchg
push
and
push
ficompl
sbb
inc
xor
push
mov
ds
insl
inc
sbb
ret
mov
xor
repnz
lods
nop
xor
stos
insb
sti
inc
xor
rcrl
pop
jmp
cmp
fsubl
mov
fdivrp
outsb
mov
mov
mov
mov
sar
or
xchg
pop
dec
mov
aaa
lret
insb
jp
add
pop
movsl
or
sti
jo
aad
and
ljmp
test
outsb
mov
enter
lcall
or
or
xor
adcb
stos
sub
xchg
sti
das
in
fs
sbb
repz
pop
fsubl
mov
push
outsb
nop
stos
pop
fisubrl
xor
lea
movsl
mov
jg
sti
lret
push
add
ljmp
scas
mov
test
in
jmp
sti
push
mov
ret
scas
cmp
cmpsl
pop
int3
sarl
inc
mov
push
inc
fisttpll
push
lret
cmp
lock
mov
clc
cmp
push
cli
loop
ret
loopne
scas
stos
mov
sbb
mov
fsubrs
mov
xorl
fiadds
fistpll
lret
testl
sbb
popf
fiaddl
inc
inc
stc
outsb
in
aas
jnp
aaa
pop
sbb
ss
add
insb
dec
out
popa
leave
fildl
xchg
pop
dec
pop
jp
popf
xlat
fcmovnb
add
mov
cmpsl
pop
push
mov
rcrb
loop
and
mov
in
jg
xchg
shrb
call
xor
imul
scas
cs
dec
int3
insb
es
test
loope
lret
aam
fcmovnu
lahf
sub
into
andl
inc
cmp
add
dec
icebp
in
rcl
fistpl
jne
cmp
pop
mov
fisttpl
out
insb
iret
cmp
inc
imul
mov
sub
push
xor
aad
jl
gs
mov
scas
cmp
ja
xor
sbb
fisubl
push
call
or
mov
js
inc
rorl
js
push
rorl
sub
mov
cmp
sub
cmp
push
shl
in
lret
stos
stos
adc
push
imul
lret
mov
adc
xor
mov
xchg
rcrb
in
push
les
fcomi
dec
ret
mov
jo
std
inc
mov
jno
xor
add
and
test
out
das
repnz
dec
xor
clc
outsl
ss
jnp
sbb
jle
xchg
decb
or
clc
movsl
xchg
leave
jg
dec
shlw
out
lods
jle
dec
adc
loopne
lods
fdivs
lret
into
cmpsl
or
test
subps
icebp
rcr
jl
mov
int
pop
icebp
adc
fistl
or
xchg
dec
cmp
insb
push
mov
or
fs
xor
test
mov
push
mov
inc
test
push
pop
jle
push
cwtl
add
insb
aaa
ljmp
aam
cmp
mov
ret
xchg
xchg
mov
dec
sahf
stos
adc
lea
fdivrl
in
imul
lcall
int
and
inc
add
sbb
stos
push
scas
into
push
jl
incb
insl
ljmp
dec
pop
sbb
cli
dec
push
jnp
lods
dec
pushf
sti
mov
mov
pop
and
enter
lods
call
pand
cld
lcall
fsub
andw
ficoml
mov
in
pop
call
jg
cltd
xchg
lods
cmp
push
or
loop
outsl
cs
adc
mov
pop
enter
sub
jge
adc
mov
inc
dec
int3
inc
test
test
popa
and
push
jge
xchg
or
xchg
call
scas
into
cmp
in
popa
fneni(8087
mov
dec
sbbl
jle
mov
outsl
iret
mov
fucomi
sub
and
std
mov
cli
pusha
ret
int
add
lret
pushf
fildl
loop
fstl
fstps
mov
fisttpl
xchg
in
or
or
ficompl
outsl
adc
fsubrs
fistl
mov
pop
inc
or
bound
jmp
into
mov
jle
mov
jg
push
inc
sbb
push
jae
mov
mov
and
frstor
inc
jmp
mov
lods
js
and
mov
loopne
test
leave
xchg
jecxz
outsl
imul
lock
shl
fisttpl
adc
sbb
jg
bnd
cwtl
lock
popa
cmp
in
pop
xor
ror
pop
fcmovnu
add
cmpb
cmp
rorl
divb
add
loope
jge
jnp
test
call
xchg
ja
cld
xchg
push
pop
sbb
inc
mov
das
fistl
fnsave
jns
adc
lock
xchg
jp
fstpl
jne
dec
xchg
fucomi
insl
jbe
scas
sbb
jg
fiaddl
cmp
out
or
aam
fucomi
mov
rcr
loop
and
jl
mov
and
fistpl
mov
mov
ja
mov
cmp
lret
shr
sub
mov
rcr
clc
xchg
fildl
mov
dec
cmp
ja
dec
xor
fcomi
push
cmp
mov
call
out
popl
sbb
lock
call
push
mov
xchg
in
mov
dec
fstp
fildl
dec
jmp
in
and
fcmovnbe
xchg
inc
pop
cli
sub
fisttpl
lods
sub
clc
add
lret
divb
sarl
fwait
insl
fwait
ret
or
js
fstpt
jo
dec
pop
lret
fwait
es
dec
fistpll
sbb
mov
test
jne
lahf
cmpsl
fnsave
sbb
mov
es
add
fisttpl
testl
aam
cmp
lds
test
stos
fstpt
in
xchg
sbb
fcmovnu
aad
cmc
mov
repnz
fwait
dec
push
loopne
and
fstp
or
dec
jb
in
fcom
sbb
mov
clc
sbb
mov
push
icebp
mov
out
push
jg
cmp
dec
xor
imul
xor
sub
leave
hlt
add
out
notb
outsb
incb
jnp
std
lcall
fcmovnb
outsl
leave
and
push
ljmp
sbb
mov
inc
xor
aaa
mov
sbb
faddp
fcompl
iret
fisttpl
xchg
sbb
fistl
push
push
xchg
sbb
mov
outsb
push
lret
fnstsw
in
fst
fstps
sbb
fldt
decl
mov
shll
mov
ss
fldt
pop
mov
dec
mov
ljmp
dec
dec
mov
and
testb
jno
push
pop
ret
lcall
ret
adc
js
and
mov
xor
fisubl
jo
dec
mov
in
rcl
push
xor
fidivrl
fcmove
loop
push
dec
fidivs
lea
mov
dec
mov
mov
addr16
cmp
lahf
loope
mov
sbb
inc
push
in
add
xor
out
loop
mov
and
xchg
cmc
add
les
jmp
push
fnstcw
icebp
xor
aaa
jns
scas
frstpm(287
push
dec
or
and
aas
jecxz
sbb
or
adc
mov
sbb
mov
ds
dec
orb
cmp
ss
arpl
jge
push
jle
push
pushf
push
int3
rol
mov
fmull
loopne
fldt
fildll
inc
adc
cmp
cmp
mov
pop
into
push
push
stc
rclb
pop
sub
xchg
popa
subb
orb
iret
lret
push
mov
fistl
jle
adc
loopne
pop
mov
repnz
fwait
rcrl
push
xor
jb
fidivrs
clc
ljmp
mov
paddd
insb
loope
mov
cmp
jmp
cmp
xlat
rcl
dec
shrl
mov
sub
in
and
fildl
lods
mov
xlat
inc
push
inc
pop
imul
push
sub
cmp
mov
aaa
dec
mov
or
push
xchg
js
push
dec
cmp
shrb
mov
or
icebp
mov
and
pop
xchg
pop
mov
or
outsl
dec
xlat
sub
cmp
lahf
xchg
aad
aad
sub
or
xor
popf
add
dec
pop
mov
lcall
call
mov
fwait
sbb
fucomi
test
xor
dec
add
fcmovnu
out
lds
out
push
jnp
mov
bound
aaa
or
sub
stos
inc
mov
and
pushf
and
fwait
push
fisttpl
testb
in
aas
add
repnz
pop
fldt
out
cmp
xchg
cmp
dec
sti
popa
fidivrl
jl
adc
fildl
je
pushf
sbb
aam
fistpl
xor
xlat
sti
fistpl
inc
or
fstpt
push
mov
adc
mov
mov
adc
bound
ret
or
add
lcall
sbb
xchg
fnsave
mov
jl
push
imul
js
decb
and
sub
adc
dec
testb
pop
or
mov
ret
jbe
cwtl
ret
pop
movsl
cmp
and
call
pusha
test
xchg
mov
ljmp
inc
je
and
sbb
mov
imul
adc
push
push
out
fistps
pop
dec
mov
cmpl
insl
filds
aad
mov
stos
sahf
ds
ret
sar
fldt
js
mov
adc
mov
lret
mov
xor
in
stc
inc
adc
in
inc
cmpl
cwtl
push
rorl
adc
inc
lcall
xchg
mov
mov
je
xor
fsubr
fistpl
fucom
pop
fcomi
lcall
je
mov
repnz
push
cmp
faddl
les
rcr
gs
cmp
xchg
fidivrs
mov
mov
fidivrl
clc
pop
int
in
popf
push
cli
loop
iret
fistpl
or
pop
fistl
mov
mov
jecxz
popa
add
out
cmp
push
call
hlt
and
cmp
add
push
sub
int
inc
jo
es
xchg
jns
cmp
rcr
daa
icebp
xor
addr16
jo
iret
jle
xchg
sub
xchg
sub
les
fnstsw
pop
mov
xchg
mov
mov
and
jb
jecxz
adc
popa
add
mov
fldt
je
fcomp
mov
dec
jl
jo
icebp
out
jmp
fdivp
fisubrl
lret
fsub
stos
mov
fwait
add
popa
lods
insl
sbb
fxch
xchg
cmp
jmp
and
subb
add
xor
inc
dec
pop
fisttps
rclb
iret
cmp
lcall
fprem
imul
mov
sti
stos
lret
cmp
stc
pop
rolb
push
sub
xchg
xor
fucomi
movsl
bound
sub
mov
push
or
sbb
mov
push
lods
fistl
ret
jp
adc
sarl
imul
sti
mov
rorb
add
pop
jb
shrb
and
mov
lcall
and
push
adc
pop
call
xchg
mov
loope
aam
fwait
jg
test
mov
call
pop
fldt
or
lods
mov
add
sbb
pop
cmpsw
sbbl
fistpl
hlt
mov
cwtl
sub
xchg
into
or
lret
mov
jge
fidivl
scas
fidivrl
cli
pop
mov
loopne
test
imul
cmc
jo
scas
mov
sbb
adc
jmp
aad
shlb
mov
mov
out
xchg
out
xlat
dec
mov
mull
leave
mov
loop
xchg
dec
decl
push
fldt
pop
jbe
stc
rcll
add
scas
ss
into
jo
sbb
push
in
hlt
push
sbb
add
inc
lret
adc
shr
mov
inc
push
or
out
stos
add
divb
rcr
push
stos
ds
int3
mov
adc
fstpt
xchg
mov
in
rol
fistpl
pop
sbb
add
fcmovnu
mov
cmp
add
in
lret
cli
call
pop
popf
pusha
hlt
lea
push
mov
xor
test
xchg
movsb
sahf
sbb
clc
sti
mov
and
popa
ret
cmp
je
fnstenv
mov
xchg
push
fistpl
push
testb
out
aas
ljmp
add
loop
push
or
les
fldt
inc
mov
xchg
dec
rorl
fdivrl
out
data16
adc
push
add
test
sub
fisttpl
dec
insb
popa
fstpl
jbe
inc
loope
mov
outsl
cmovb
pop
pop
lock
inc
push
pop
inc
mov
and
cmp
enter
jno
es
testb
jl
add
pop
cmp
add
and
adc
dec
in
popa
pop
fldt
dec
pop
clc
add
cmp
ss
or
lret
out
sbb
inc
mov
pop
cmp
stos
cmp
aas
pop
daa
pop
jl
out
jecxz
fnsave
and
mov
fistpll
fsubr
call
ljmp
inc
dec
inc
fistl
push
xor
sahf
fistpll
fildl
add
xchg
fistl
jl
js
push
popa
cmp
movb
stos
lret
mov
mov
pusha
mov
xchg
fldt
das
adc
or
scas
sti
mov
push
cmpl
xchg
leave
fidivrl
inc
dec
fwait
into
cmc
scas
push
fucomp
repz
imul
inc
es
test
fcmovne
stos
xchg
inc
add
not
mov
pop
fwait
neg
bound
loopne
push
enter
cmp
sahf
stc
adc
add
push
fcmovnu
hlt
mov
ss
fistpl
xchg
mov
loopne
mov
lods
fbstp
leave
push
lret
bound
loope
out
mov
sbb
ljmp
imul
shr
mov
pop
add
jne
cld
fcomps
and
dec
arpl
ljmp
pop
fistpl
aas
pop
mov
xchg
aaa
mov
cld
mov
pop
jnp
fidivrl
xchg
in
lahf
cmpsl
aad
test
adc
pop
fcomp
aas
out
decl
sbb
mov
js
testl
and
inc
dec
dec
lahf
push
or
jae
mov
sti
xchg
xchg
fidivl
xchg
mov
ss
repz
mov
loopne
int
mov
lret
xlat
mov
push
arpl
enter
aad
stos
aam
repz
sbb
fsubl
enter
xor
cmp
mov
fistl
cwtl
mov
add
adc
sbb
inc
cmp
fcomip
jp
mov
mov
imul
pop
orb
xor
lahf
push
call
dec
mov
fcmovnb
movsl
sub
jo
xor
icebp
sbb
aaa
mulb
mov
and
fisttpl
xchg
sub
xchg
call
dec
jo
fcmovnb
sub
loopne
mov
sbb
fwait
outsb
mov
inc
call
dec
test
fistl
stos
mov
lea
jne
clc
cltd
cmp
negb
or
int
pop
imul
cmc
ljmp
cli
sub
push
and
sahf
fisttpl
and
mov
and
mov
dec
push
jg
jp
mov
mov
sbb
shll
add
sbb
rorb
or
xchg
stos
popf
xchg
data16
and
adc
mov
mov
adc
fwait
jmp
out
data16
and
clc
fcmovnbe
sbb
sbbb
and
sahf
ror
sar
push
xor
jne
jle
notl
fnstcw
call
mov
mov
call
pop
cmp
ret
lret
addr16
jmp
inc
lods
out
cmpsl
adc
fistl
loopne
push
or
lret
stos
fcmovnbe
cltd
rorl
or
dec
xor
lahf
xchg
into
scas
lret
data16
pop
xor
jae
mov
fcmovnbe
stos
jne
hlt
lds
ffreep
sub
sbb
iret
stos
popf
in
jnp
repnz
cmp
in
sbb
cmp
fcomp
mov
add
xlat
pop
test
repnz
push
xor
cltd
and
add
inc
xchg
jmp
nop
aaa
lea
jl
ret
push
mov
repz
stc
pop
sbb
lret
xchg
lock
ja
movsb
call
xchg
sbb
lods
fldcw
loope
cltd
xchg
mov
fisubrl
push
lret
dec
jmp
mov
scas
js
pushf
mov
ss
scas
pop
clc
stc
inc
loop
xlat
aad
mov
insb
xchg
cmp
and
sub
fchs
icebp
jne
jle
jae
dec
aas
cmp
rolb
mov
jle
fnstsw
mov
sbb
lds
pop
sub
popf
fstpt
and
xchg
pop
and
jp
aas
daa
mov
push
fldt
test
dec
jb
std
fildl
xchg
call
fldl
xchg
outsl
and
pop
fucomi
pop
dec
shll
mov
dec
mov
cmpsl
repz
stos
or
xchg
mov
sahf
push
std
notl
pushf
fidivrl
or
cwtl
mov
jnp
mov
or
sub
xlat
fbld
aas
cmpb
pop
fldt
mov
push
and
rcl
mov
les
in
loopne
xchg
sti
pop
xor
push
imul
rorl
push
inc
mov
clc
dec
push
mov
jecxz
aam
jg
std
dec
bnd
sbb
cli
notb
das
mov
cmp
fcmovnu
sbb
push
shrl
incb
mov
jl
scas
jp
pop
shl
xchg
add
fistl
aaa
mov
clc
out
int3
mov
pop
addl
std
cwtl
outsl
push
shlb
icebp
mov
mov
int3
lret
loopne
or
cltd
mov
repz
fisttpl
std
gs
mov
shl
cmc
cwtl
jecxz
cmp
les
lock
fistl
adc
icebp
imul
fninit
mov
cs
fisttpl
cld
dec
lret
fildl
scas
jns
cltd
lds
fiaddl
into
cmp
rcr
dec
stc
jae
xor
lret
add
pop
sbb
lret
jno
rcr
sub
cmp
andb
lcall
dec
pusha
cli
cmpsb
aaa
ljmp
mov
loopne
inc
insb
dec
push
xor
dec
lret
faddp
mov
popf
aam
rol
data16
stos
jmp
pop
jg
sbb
in
add
push
lcall
fstpl
js
pusha
pop
fistl
cmc
loop
aaa
ret
mov
pop
stos
mov
xor
test
dec
fistl
adc
adc
sbb
xor
jg
jo
scas
cmp
dec
arpl
cmc
fidivrl
inc
lods
pop
dec
ret
cmp
stos
xor
xor
or
popa
dec
jbe
jmp
cs
xchg
pop
lods
fisubrs
mov
jbe
cmc
fistpll
dec
int3
cwtl
sub
stos
mov
cs
orb
cmc
inc
notl
lods
cmp
es
repnz
lcall
lcall
push
loop
addl
scas
pop
fs
stos
sbb
shrb
dec
imul
inc
mov
cmpl
lcall
push
mov
inc
cs
aam
pusha
inc
push
iret
mov
movsl
lods
mov
xchg
js
rorl
or
jp
aam
outsb
repnz
push
insb
jo
addr16
in
pop
and
inc
aas
call
stos
mov
mov
das
sbb
add
cltd
push
jb
pop
jle
push
and
fsubrs
mov
sti
adc
jnp
lcall
and
shlb
mov
jo
mov
cwtl
mov
dec
repnz
testl
xor
test
dec
push
mov
ficompl
mov
sbb
push
xorb
or
addr16
inc
add
frstor
leave
lret
popa
jb
pop
fimuls
in
or
scas
or
pushf
mov
mov
jmp
and
add
xchg
pop
dec
xor
fistps
lcall
in
test
int3
push
sbb
mov
mov
es
ljmp
cmpsl
push
mov
insb
repnz
stos
adc
insl
push
jae
sbb
stos
cwtl
dec
jne
sti
lods
push
mov
aas
aas
xchg
lods
iret
jle
fwait
out
xchg
push
unpckhps
xchg
fsubrl
pop
sbb
out
sub
inc
inc
int
mov
js
mov
mov
dec
ss
jmp
ret
push
mov
js
jno
lret
rsm
imulw
int
mov
aam
loopne
fnstsw
imul
fstp
inc
cmc
dec
clc
and
idiv
lds
lcall
pop
xor
in
in
adc
fucomi
jns
mov
idivb
mov
cmpsl
sbbl
mov
pop
cmp
xchg
std
loopne
and
and
jno
in
fnstcw
test
rorl
daa
stc
pop
loop
fmuls
loop
lret
rcr
jne
xor
jl
push
fistl
inc
jns
fldl
adc
imul
ret
push
fstpt
mov
lahf
mov
ret
fildl
pop
xlat
and
inc
movsl
dec
fistl
push
push
inc
pop
fistpl
and
inc
mov
fstpt
sbb
shrb
xchg
call
ficoml
in
test
fstl
mov
adc
xchg
cmp
pop
and
and
jns
fildl
inc
dec
mov
jno
mulb
out
or
icebp
jo
iret
daa
scas
loopne,pt
popf
mov
pop
bound
jmp
insl
loopne
insb
pop
mov
xor
loopne
push
and
mov
fcomip
jge
or
clc
mov
jnp
dec
dec
push
ret
lret
fstpt
repz
out
dec
inc
loopne
xor
fnstcw
jae
xchg
insb
push
mov
fisttpl
jns
fists
rcl
andl
clc
and
sub
push
pop
addr16
add
fsubl
mov
or
xchg
sti
inc
mov
fsubrp
int
xchg
lods
add
cmp
xchg
add
fs
push
mov
aam
push
push
lock
insl
in
or
cmpsl
loop
mov
mov
mov
stos
xchg
fisubrs
jmp
int
arpl
pop
imul
push
sahf
pop
out
imul
popf
cwtl
or
aad
sub
fiaddl
or
ret
cmc
out
mov
adc
or
sub
xorb
insl
mov
fsubrs
rorb
filds
inc
mov
scas
mov
mov
push
fscale
popa
lock
repz
jmp
pushf
push
clc
or
cmc
and
subb
and
sti
mov
movsb
inc
mov
mov
cmp
cmp
subb
sub
adc
fistpl
ror
les
arpl
jmp
loop
fnsave
fisubrl
inc
pushl
fdivr
mov
ljmp
xchg
sub
call
pop
pop
or
fistl
pop
repnz
cmp
call
lret
imul
mov
loop,pn
scas
cmp
sbb
out
and
and
testb
sbb
fcomi
sbbl
push
stos
test
pop
inc
iret
inc
pop
scas
fs
push
adc
mov
mov
xlat
lods
fistl
inc
subb
sbb
aad
rcrl
adc
aas
call
pop
ds
scas
aad
push
pop
and
sbb
loope
icebp
xor
fidivrs
ds
mov
sub
cmp
test
add
ret
mov
jne
cmpsb
stos
cmp
lea
jo
mov
pop
mov
or
mov
mov
dec
pop
aad
sbb
mov
mov
fidivrl
or
cmc
ja
test
into
push
dec
into
jb
jge
or
jle
add
bndstx
jmp
jns
push
xchg
scas
sub
mov
cmp
iret
pop
repz
sbbl
insl
testb
addr16
adc
dec
pop
sbb
rclb
mov
cmp
cld
push
out
fstpt
cmpsb
mov
fcmovnbe
jmp
scas
xor
push
fisttpl
imul
fcmovb
dec
popa
pop
adc
addr16
fs
shrb
inc
sbb
mov
aas
sbb
inc
or
jmp
inc
dec
xchg
shrb
inc
mov
cli
fistpl
push
fbld
push
cmp
ficompl
loop
adc
iret
fsts
or
int3
pusha
fucomi
sahf
pop
pop
mov
fisttpl
dec
std
cmp
push
mov
dec
xlat
loop
mov
inc
cmp
ret
sub
pop
loopne
ja
bound
push
inc
fwait
inc
pop
loopne
push
fiadds
xchg
fldt
lock
shrb
iret
fisttpl
adc
arpl
xlat
out
insb
fsubs
leave
sub
les
cli
test
or
mov
inc
dec
or
and
push
daa
loop
sti
movsl
das
fcompl
repz
push
jp
lret
add
mov
test
out
sub
dec
jle
inc
jbe
stos
clc
fisttpl
adcb
fcmovnb
mov
shrl
sti
xor
mov
insl
clc
loop
mov
push
loop
scas
fstpt
and
sub
inc
ljmp
xor
pop
mov
loopne
aas
push
scas
push
fucomi
inc
cmpsl
xchg
adc
mov
pusha
add
add
fcoms
xchg
in
insb
scas
lods
sbb
mov
dec
mov
scas
xchg
popf
mov
lret
mov
and
cld
ss
push
xor
scas
shlb
xchg
popf
xchg
addr16
cli
lods
push
adc
push
lock
loope
xchg
lock
popa
and
fisttpl
pop
imul
ds
pusha
adc
jg
pop
test
scas
xchg
push
push
or
sbb
xor
arpl
pop
mov
ret
push
gs
and
lcall
xchg
push
repz
rcr
and
jnp
enter
sti
cli
jg
cs
pop
fcoms
pop
xlat
mov
push
daa
push
xchg
xchg
dec
sub
lahf
mov
out
pop
inc
and
frstor
insl
xchg
popa
lock
arpl
test
mov
xchg
mov
test
mov
pusha
fistl
pop
or
add
push
negb
xchg
daa
pop
fcmovbe
scas
jge
out
mov
in
clc
aam
movsl
lcall
dec
fsubr
loopne
cld
je
es
cmp
fistl
fistpll
pop
mov
mov
je
adc
fisubrl
add
movsl
rol
cltd
dec
pop
stos
xorl
xchg
jno
fs
nop
jge
in
clc
mov
mov
dec
mov
cmp
add
jmp
cmp
push
push
in
mov
adc
jae
push
outsb
in
sub
out
dec
fcmovnb
in
cmpsb
adc
ret
push
shll
aam
in
mov
inc
add
dec
fimuls
shrb
add
mov
jo
jno
lock
mov
dec
idivb
add
jecxz
mov
stos
ljmp
mov
push
mov
int
mov
inc
mov
sbb
xchg
fisttpl
repz
adc
cmp
fidivrl
outsl
adc
push
stc
pop
leave
loop
dec
pop
call
cld
mov
fidivrs
rol
leave
fldt
pop
dec
xor
cmc
mov
sbb
cmp
ljmp
sti
jae
out
add
mov
lcall
js
or
pop
cmp
fnstcw
int3
jno
insl
push
xor
fcmovb
sub
jmp
lret
add
ja
js
or
mov
push
scas
loop
xor
mov
mov
mov
stos
outsl
inc
fnsetpm(287
or
xor
movsb
sti
outsb
call
push
in
fisubl
ja
jne
or
and
mov
ficoml
xor
add
mov
fsubp
pop
adc
push
add
ret
data16
idivb
lcall
rdpmc
sub
test
dec
inc
pop
mov
push
rorl
dec
frstor
adcb
clc
mov
fistl
sbb
xor
lahf
jnp
je
add
rcrb
decb
orb
fmul
xorl
sbb
add
fcmovne
or
xor
pop
repnz
jo
push
pop
sub
rolb
xchg
fstpt
js
in
fcmovnu
mov
das
jb
rcrl
xor
and
ret
cmc
sahf
mov
fldt
push
loop
fldt
mov
sbb
popa
pop
movsl
xlat
pop
or
fists
fwait
jg
lahf
enter
shl
mov
cmpsl
sbb
sarb
addr16
stos
data16
imul
shl
repz
sti
fldt
call
nop
push
pop
out
xchg
cwtl
call
push
mov
lahf
jp
dec
inc
and
cmp
mov
andl
std
arpl
jle
push
fisttpl
fcomps
int
xchg
xchg
dec
aad
xor
fnsetpm(287
int3
pop
adc
addr16
call
lret
ds
xchg
push
jmp
push
loop
sahf
pop
jl
adc
add
or
mov
dec
xchg
pop
xor
ds
rcrl
jbe
add
pop
loope
mov
cmp
pop
lcall
fistpl
mov
mov
stos
sub
rolb
or
mov
movb
aam
mov
xlat
fstpt
jno
rclb
outsl
ss
shrl
fstpt
scas
fistl
loope
xchg
dec
mov
fimull
mov
xor
sbb
adc
movsb
loop
das
pop
or
adc
arpl
xchg
jge
jmp
sub
movb
mov
mov
xchg
lods
jo
pop
insl
sbb
mov
pop
push
cld
dec
in
gs
fildl
loop
mov
jno
clc
mov
fistl
xor
nop
fcmovnbe
in
test
cmp
std
cltd
fistl
mov
movsl
fistl
xorb
inc
mov
push
insl
ljmp
xor
dec
lods
mov
data16
dec
popa
adcl
pusha
ret
popl
and
push
lods
fnstsw
jb
dec
mov
or
movsl
pusha
rol
cmp
jo
hlt
mov
jnp
fisubs
fstpt
dec
pushf
insl
call
std
and
dec
fcomi
xchg
lods
mov
fcmovnbe
mov
or
fcmovne
imul
es
and
bound
jb
and
add
or
xchg
sahf
test
fcmovnbe
loopne
inc
lock
jns
fistpl
dec
mov
scas
inc
dec
stos
loopne
mov
inc
or
stos
xchg
mov
push
push
jmp
dec
fcmovbe
rcll
pop
xlat
inc
fsubrs
jo
fdivrs
sub
iret
call
or
cltd
dec
shll
stc
dec
stos
mov
dec
mov
inc
fnstsw
out
jmp
cmp
scas
mov
pop
push
cmpsb
scas
rclb
popa
out
fldt
xor
test
dec
sub
mov
add
imul
sub
fprem1
fcmovnb
lock
add
jp
dec
pop
iret
lcall
stc
cmp
test
mov
xor
lret
fcmovnbe
sbb
jp
stos
lret
fcomip
fstps
fstl
mov
popl
addb
daa
mov
cwtl
mov
loopne
sti
pop
xlat
dec
mov
push
cld
movsl
and
into
add
imul
int3
cmp
mov
fsubrs
mov
xchg
mov
iret
in
leave
pop
push
ficoml
adc
xchg
mov
dec
mov
int3
jb
clc
fisubrs
mov
mov
xlat
mov
fstpl
inc
outsl
repz
iret
push
fldt
lcall
fucomi
xlat
clc
push
xor
jge
ret
fcoml
enter
into
addr16
sub
inc
sti
lahf
adc
jns
outsb
test
jbe
adc
pop
jg
scas
cmp
test
mov
lret
repz
cmp
insl
mov
cld
flds
xchg
fcmovnbe
sti
es
xchg
sub
adc
cltd
mov
and
in
popa
outsb
dec
imul
dec
int3
mov
sub
test
fistl
sbb
pop
in
and
add
xchg
or
cli
dec
pop
ficoml
jbe
rclb
test
ds
subb
call
and
cmp
and
nop
lods
loopne
lea
subb
fmull
mov
add
push
fcomi
pushf
shrb
adc
push
ljmp
jno
or
stc
sbb
roll
add
lds
mov
pop
bound
xor
and
pop
push
cmc
xchg
jmp
pop
add
push
or
out
pop
sti
dec
lret
push
or
lock
dec
fistl
cli
adc
mov
xor
int3
rorl
call
and
pop
fistl
pop
cmp
push
xor
fstpt
ljmp
js
push
pop
aas
subb
out
mov
lods
lock
idivb
sbb
pop
test
cmp
xor
cmp
add
inc
imul
in
pop
fs
fcompl
pop
int
add
inc
push
loop
sub
cmpsl
ljmp
decb
lahf
jae
in
ds
shl
dec
jne
insb
mov
mov
cld
fldt
sbb
lret
pop
adc
add
shrb
adc
pop
cmp
xchg
jecxz
fisttpl
les
mov
sahf
lock
int
in
dec
xor
ficoml
fs
mov
shll
lods
mov
sbb
fisubl
stos
or
dec
mov
sub
sub
testb
mov
push
mov
jle
jg
mov
fildl
dec
mov
stc
fldt
loop
add
inc
pusha
pop
jo
aam
fistl
push
mov
cmp
test
fcmovnu
cld
imul
pop
dec
cmpsl
mov
cmp
xchg
mov
cmp
dec
jnp
inc
fcmovne
mov
int
fucomi
clc
fxch
movsl
push
daa
fildl
outsl
jno
push
or
push
pop
mov
dec
sbb
std
xlat
dec
fisttpll
jecxz
pop
and
addl
pop
mov
mov
jle
sub
loope
iret
into
or
mov
negl
xor
mov
add
xchg
fsts
mov
loop
fists
out
sti
pop
fidivl
mov
sub
mov
mov
jecxz
adc
adc
es
push
das
fisttpl
stos
std
mov
xorb
movsb
in
adc
fldt
or
xor
notb
jnp
mov
clc
aad
je
fidivrl
push
cli
push
mov
arpl
fstpt
mov
stos
push
push
dec
roll
leave
fildl
lcall
fldt
imul
sub
fstpt
pop
ret
fwait
in
icebp
xchg
daa
in
popf
pop
sbb
fldt
ret
jge
xchg
xchg
insb
into
and
sbb
cmpsb
in
mov
pop
addr16
call
mov
fisttpl
pop
and
lea
jns
popaw
out
fiaddl
mov
shlb
stc
rorl
push
xchg
imul
pop
fldt
fsubrl
loop
jge
cmp
adc
negb
jbe
fwait
sub
xlat
imul
lods
icebp
xor
idivb
outsl
dec
ficoml
test
loopne
pop
inc
inc
and
jmp
mov
and
loopne
popf
jns
pop
arpl
out
fldl
sub
mov
xor
mov
insb
pop
jecxz
or
jmp
dec
int
sub
dec
out
adc
mov
push
js
push
test
stos
sub
lahf
and
subl
cmp
lahf
inc
dec
fiaddl
add
arpl
inc
out
xchg
and
jg
add
mov
popf
fucomp
mov
shlb
fcmovnb
je
jae
xor
inc
in
insb
roll
cmpsb
scas
ret
pusha
decb
jl
insb
test
es
ja
and
push
xchg
push
ret
rcr
cmp
add
jl
lcall
pop
inc
cmpb
fstl
inc
fprem
call
mov
pop
push
insl
mov
pop
fistl
xor
mov
rcr
mov
cmp
out
fistl
jmp
lock
fldt
mov
mov
dec
pop
pop
xchg
ds
sub
fistpl
aas
jp
iret
inc
aaa
in
ss
rorl
sub
lods
mov
popa
mov
and
inc
mov
repz
aas
adc
data16
lods
fildl
arpl
fwait
bound
fistpl
xchg
in
jno
mov
and
fistl
cli
cwtl
inc
jae
add
mov
outsl
jnp
sub
das
fnsetpm(287
add
push
pop
leave
xchg
icebp
fisttpll
lods
pop
or
mov
stos
xor
fistl
push
dec
mov
dec
fidivrs
pop
sub
xor
pusha
or
fninit
mov
mov
sub
jl
iret
fcmovnb
mov
ret
mov
div
adc
fistpl
mov
cmp
lds
es
fistpl
call
mov
je
imul
cmpsb
mov
xor
jp
jmp
int
in
fstpt
mov
xchg
test
jns
out
push
cli
push
mov
adc
dec
push
lea
fildl
sbbl
cmpsb
or
loopne
aam
test
push
fstpt
jl
mov
aas
inc
mov
or
call
cmpsb
lret
in
push
fcomi
push
adc
sti
pop
dec
fisttpl
jno
adc
call
into
mov
pop
pop
fldz
ret
mov
dec
dec
inc
aad
adc
fstpt
jle
sub
movsl
lock
cmc
sbb
and
adc
loope
adc
iret
subl
ljmp
dec
fcmovnu
fnstenv
test
jge
mov
or
popl
insb
pop
fistpl
sbb
shrb
lds
or
mov
mov
movsb
daa
cmc
mov
testb
loopne
pop
pop
rcr
mov
andb
fucomi
mov
add
mov
fistpl
add
jae
cmp
fstpt
and
imul
fs
sub
ss
into
push
es
ficoml
les
or
sbbl
mov
sub
push
lret
dec
fildl
arpl
jae
hlt
rcr
or
or
fcmovnu
or
test
jnp
rcr
jno
mov
pop
adc
inc
mov
adc
js
xchg
out
xchg
jmp
fstpt
fnsave
pop
cmpsl
pop
jge
fidivrl
xchg
fldt
mov
adc
cmp
cs
sbb
pop
cmc
int
inc
pop
orb
arpl
ss
adc
cltd
pushl
fildl
xchg
xchg
mov
cmc
je
push
rorl
xchg
dec
std
mov
cwtl
in
add
pop
addr16
mov
scas
dec
adc
insl
into
inc
and
out
ds
imul
jmp
jne
je
inc
fcomi
aad
push
loope
adc
push
ficompl
push
adc
loopne
int3
cs
pop
xchg
sbb
daa
lcall
push
and
cmp
loopne
fistps
stos
push
imul
ret
xor
jb
stos
xchg
mov
ljmp
nop
push
es
push
iret
sbb
arpl
cmp
test
into
dec
fucomp
movl
pop
mov
mov
or
les
pop
cltd
jmp
iret
lret
shll
inc
xchg
pop
push
loopne
out
das
jnp
jmp
push
mov
jb
rcrb
sbbb
add
rolb
push
out
iret
pop
stos
hlt
xchg
ds
xchg
pop
fnstenv
clc
fcompl
xchg
frstor
jge
or
add
cmp
movl
mov
repnz
sahf
ja
mov
pop
and
push
jp
lret
jl
and
or
mov
fdivr
pop
into
cmc
aas
xchg
jo
lcall
xor
lret
les
mov
xchg
add
mov
sti
sbb
xor
xchg
aaa
pop
in
fdivrl
icebp
push
lcall
jo
xor
in
cwtl
jmp
inc
adc
lods
dec
xorb
and
cmc
adc
pop
ret
outsl
sti
cmc
repnz
repnz
jnp
rcrb
fisttpl
lcall
hlt
xchg
dec
lahf
mov
lods
add
adc
test
inc
adc
fsts
push
test
cmc
pop
divb
jo
addl
fldt
lea
mulb
lods
xchg
test
fisttpll
xor
fs
arpl
fisttpl
fwait
popf
loopne
xchg
push
dec
dec
shl
std
mov
data16
mov
loopne
jns
or
fisubl
data16
and
inc
jb
sub
rcrb
ret
push
rep
outsl
jno
pop
and
fs
sbb
jns
loop
lcall
adc
cwtl
mov
hlt
pop
xor
fdivrl
xlat
repnz
cmp
les
sarl
cwtl
fcmovne
jb
and
mov
addb
fstpt
in
jns
shlb
mov
add
mov
call
mov
cmpsb
fucomi
aad
pop
data16
sbb
xchg
sar
pusha
fwait
xchg
pop
push
sbb
push
adc
es
pop
jno
call
or
jbe
sbb
mov
scas
jbe
cmp
fsubl
add
and
lret
test
fildl
in
sahf
mov
xor
push
in
insl
pop
push
repz
call
xor
push
xchg
leave
test
rcr
movl
daa
cmp
mov
and
jmp
loop
pop
add
sub
lds
mov
mov
test
in
filds
pop
mov
mov
sub
testb
jge
push
enter
mov
sbbl
das
cmp
out
stos
jle
or
mov
test
fnsave
jg
jns
pop
adc
xor
lods
sbb
fucomi
mov
push
loop
fcompl
repz
pmulhuw
cmc
pop
jne
sahf
or
jb
push
insb
jne
fildl
in
add
mov
sbb
test
push
mov
fistl
xlat
and
leave
adc
call
cld
cli
sbb
jl
clc
iret
push
inc
pop
fwait
xchg
clc
mov
adc
inc
mov
in
imul
call
sbb
out
jle
fcmovnbe
dec
dec
sub
sbb
push
mov
adc
sbb
loope
and
add
pusha
scas
cmp
cmp
lock
lahf
pop
int
xor
push
test
in
pop
icebp
jge
adc
fistl
mov
loopne
xlat
lret
xchg
cmp
cmp
xchg
cld
xchg
dec
fstpl
sbb
mov
cmp
xor
int3
out
out
lods
pushf
shrl
pop
or
loopne
jo
fstl
add
jne
cwtl
rcl
sub
outsb
data16
fistpl
pop
mov
adc
mov
pop
out
les
ss
jo
dec
sub
jmp
inc
xor
adc
jns
jmp
mov
out
imul
mov
addr16
lds
testb
cmp
fcmovnbe
xchg
lcall
xor
mov
dec
jmp
push
orl
jno
ss
loop
jl
dec
fistpl
aad
mov
jb
in
int
clc
in
imul
sbbl
in
pop
adcb
jp
das
fists
popf
sub
push
sbb
filds
or
lret
xchg
pop
rcr
test
mov
cmp
jae
xor
cmpb
pop
stos
jno
lods
push
sbb
dec
dec
pop
adc
xchg
dec
sub
mov
fidivrl
mov
sbb
xorl
das
mov
outsb
inc
pop
ja
xor
dec
lahf
daa
int3
fucomi
into
cmp
test
in
inc
das
fdivrs
sti
test
adc
lahf
mov
jmp
xchg
adc
imul
pop
repnz
std
adc
loop
insb
adc
xor
mov
lret
sbbb
cltd
call
mov
fcmovb
call
xchg
nop
or
cmpsb
fnstsw
adc
dec
push
fcomi
test
fstpt
lcall
and
movsb
sub
dec
adc
out
adc
imul
mov
sub
pop
inc
sub
or
and
loope
sub
sub
pop
dec
and
fldt
mov
out
pop
or
fistpll
insb
pop
xchg
jl
fistl
push
adcb
adc
cmp
jb
hlt
call
add
cmp
scas
insl
fisttpl
mov
mov
rcr
aam
mov
cmp
mov
mov
shl
shrb
push
push
jge
mov
sbb
dec
ds
xchg
gs
shrb
xor
dec
in
mov
movsl
mov
imul
inc
push
loopne
outsl
add
lret
mov
int3
sahf
out
fistl
les
sub
sbb
inc
aaa
sbb
mov
jnp
jae
sar
lock
mov
fisttpl
stos
idivb
push
mov
cmp
adc
std
pop
jb
or
hlt
mov
pop
add
sbb
xchg
fistl
rcr
lret
gs
ja
bound
inc
scas
daa
ficoml
mov
inc
push
ja
fistl
into
notb
imul
call
push
or
jnp
les
mov
es
mov
cmc
sub
mov
loope
dec
ret
mov
fildl
dec
jno
inc
pop
pop
or
mov
fwait
mov
push
sarb
cltd
mov
or
fbld
xchg
jmp
xor
fildl
sub
fisttpl
cmpsb
xchg
mov
add
mov
ret
mov
pop
ljmp
cli
fldt
mov
sbb
or
subl
push
lea
fistpl
fnstcw
int3
add
mov
push
sbb
fildl
mov
addr16
in
fucomi
push
pushf
mov
fcmovnbe
int3
ds
mov
xchg
pop
sub
fcomp
imulb
xlat
out
adcb
sar
jmp
mov
fstp
adc
mov
dec
mov
dec
and
mov
jge
pop
aam
in
stos
in
aad
cltd
sbb
fst
xor
cwtl
inc
dec
jae
cltd
clc
pop
sbb
pop
es
orl
pop
icebp
fiaddl
inc
lret
sbb
cli
adc
mov
pop
mov
inc
xchg
repz
scas
das
ss
aam
push
cmp
lods
inc
loopne
daa
mov
test
inc
sub
jg
push
and
xchg
adc
ret
cmp
ficompl
add
inc
add
into
frstor
lea
cld
cmpsl
inc
mov
insb
pop
outsb
ljmp
dec
aaa
pop
inc
lds
mov
filds
adc
mov
fistpl
pushf
mov
fstl
repz
gs
adc
push
mov
inc
fsubr
fisttps
clc
aad
dec
icebp
mov
add
and
fwait
inc
xor
lret
pop
loop
adc
mov
lcall
mov
std
outsl
into
mov
loopne
incl
cwtl
xor
loope
ja
shl
add
lcall
xor
loopne
leave
les
fiadds
pop
jle
pop
in
cmpsl
xchg
fisttpl
xor
std
xchg
inc
inc
fstpt
in
push
dec
jb
stos
fistpl
js
jmp
inc
dec
in
push
mov
or
adc
idiv
nop
pusha
in
stos
aas
jmp
sar
xchg
adc
mov
mov
iret
in
fistpl
clc
icebp
andl
into
mov
and
out
mov
in
sbb
shrl
adc
mov
pop
inc
push
dec
stos
orl
aaa
adc
lcall
cld
jnp
mov
push
and
mov
sbb
push
jno
jo
ss
test
daa
jnp
fistl
add
out
stos
mov
pop
lcall
jne
mov
or
and
xchg
sahf
jne
int3
jecxz
sbb
cmc
jmp
lods
xchg
mov
out
or
repnz
sub
push
lods
divb
push
push
int
xchg
int
or
repz
stos
mov
repnz
cmp
shll
push
shll
cwtl
xor
lds
push
imul
adc
lahf
je
aam
jmp
in
repz
shrb
cmp
xchg
and
ret
mov
add
mov
mov
lods
adc
stos
xor
push
add
mov
out
lods
dec
xlat
sti
imul
sub
popa
insl
loop
adc
xor
faddl
inc
and
loopne
or
inc
inc
test
icebp
pop
imul
pop
mov
sbb
adc
cwtl
mov
lods
decb
std
jl
jg
xchg
pop
xor
lods
ret
xor
imul
je
cmp
addb
es
add
push
lcall
in
mov
inc
pop
mov
and
and
fwait
push
pop
pop
xchg
aaa
lods
and
pop
stc
fadd
ja
int
dec
cmp
fisttpll
lret
in
adc
sub
mov
pop
pop
repnz
das
dec
jg
cwtl
jo
push
sbb
loop
add
cmp
scas
jbe
push
out
icebp
icebp
ret
xor
add
pop
mov
pop
sbb
cmpsb
cmp
fisubrs
pushl
call
xchg
lcall
mov
mov
add
fnstenv
hlt
aam
mov
jbe
fstp
and
fistpl
mov
xchg
lahf
pushf
jl
fcmovne
loopne
push
mov
shll
in
aaa
loop
fisubl
mov
adc
mov
cld
cs
jb
in
stos
mov
arpl
fisubrs
stos
jbe
dec
add
push
and
jge
add
push
cmp
sbb
jl
aas
fimull
cmp
and
bound
lods
jne
push
stos
fcmove
and
flds
call
testb
fimull
in
lds
inc
decl
out
jecxz
loope
fisttpll
stos
sbb
cld
stos
test
sbb
ss
cmpsb
and
leave
imul
fimull
xchg
call
stos
cmp
es
in
lcall
stos
fadds
pop
outsl
jle
push
lods
push
adc
mov
iret
jg
roll
sbb
mov
push
jb
pop
scas
shlb
icebp
test
sub
jmp
xlat
daa
das
or
jp
in
clc
adc
or
mov
push
jge
ficoms
in
mov
push
das
lahf
es
loope
push
cmp
cld
sahf
cltd
inc
add
add
dec
xor
out
lahf
fdiv
mov
cmp
dec
cmpsl
inc
fldt
fcmovbe
aad
fadd
lds
pop
jp
and
mov
mov
lret
jecxz
fistpl
int
jb
cmp
or
ja
push
cmp
adc
pop
sbb
push
outsl
insl
jmp
and
cmp
sbb
lods
les
and
and
enter
cmc
lock
ja
bound
fmuls
fstpt
pop
cltd
sub
jo
shl
jne
ret
test
dec
stos
loop
pop
fdivrp
jmp
fldcw
dec
mov
sti
and
stos
push
fcmovnbe
cmp
testb
add
lods
stos
push
jno
clc
mov
jmp
cmp
stos
mull
lods
int3
mov
pop
mov
aam
popf
or
outsb
das
jmp
push
in
fs
mov
push
daa
mov
fisubl
shrl
stos
leave
mov
imul
cmp
mov
or
xor
aas
pop
cmpsl
add
addb
mov
ret
cmp
outsl
stos
inc
bound
aad
pop
add
lea
jge
stc
pop
lds
add
aas
shrl
add
fmull
xchg
stos
dec
int
sti
or
in
lcall
cwtl
scas
cmp
test
jg
dec
outsb
fsincos
mov
repz
adc
jae
inc
sbb
jno
add
pop
dec
mov
insl
pop
sub
jp
mov
mov
push
xchg
jle
fildl
outsb
repnz
repz
pop
bound
lret
outsb
gs
add
xchg
or
adc
push
ffreep
sub
leave
cmp
leave
pop
in
lret
cmp
out
in
es
or
xchg
std
jnp
or
inc
arpl
fstl
inc
stos
xchg
inc
shr
push
lods
cs
test
loope
pop
mov
sub
cli
rcll
jnp
in
test
lock
or
pop
mov
mov
sub
add
stos
add
sar
xchg
mov
test
xchg
push
jle
mov
in
mov
clc
pop
addr16
repnz
push
enter
loop
aad
or
rcl
cmpsb
push
pop
fsubrl
fidivrs
aaa
test
int
pop
fwait
loopne
lods
push
push
jne
cmp
out
mov
stos
scas
cs
xchg
jp
fidivrs
aaa
and
pop
cs
or
sbb
enter
sub
in
aaa
mov
pop
mov
cmp
cmp
jo
outsl
insl
jns
adc
imul
popf
fstpt
in
cmpsl
mov
sbb
shr
adc
inc
and
loope
cltd
sar
loopne
sub
stos
fnstsw
sub
pop
lods
or
dec
pop
cmp
mov
mov
data16
fisttpl
fidivrs
mov
daa
push
and
mov
sahf
or
and
mov
in
sbb
inc
fwait
loopne
pop
mov
pop
mov
pop
pop
add
dec
fisttpl
adc
mov
or
mov
fildl
mov
jo
push
mov
cwtl
test
insl
sub
movsl
ret
cltd
jge
or
fildl
jmp
pop
fnstsw
mov
pop
xchg
aaa
scas
ret
inc
fsubrs
and
inc
xor
movb
push
push
adc
aas
cmp
lods
adc
test
loop
into
scas
or
sbb
fistpl
or
fisttpl
scas
mov
fisttpll
mov
daa
outsb
fisttpl
pop
lods
xchg
xchg
mov
imul
pop
dec
or
pushf
pop
inc
push
add
jmp
and
jb
adc
sbb
pop
inc
pop
loope
fsubr
adc
xchg
jg
cwtl
xchg
scas
fldt
push
push
inc
jle
inc
notb
pop
push
das
pop
inc
pop
cmp
add
jno
jle
cwtl
fldt
fninit
insl
pop
cmp
jge
mov
and
add
add
add
les
mov
xchg
dec
mov
cmpps
inc
in
fildl
mov
lods
and
test
inc
push
lea
in
es
lea
mov
cmp
xchg
fwait
push
inc
in
dec
jl
lret
mov
sbbl
data16
ret
scas
stos
clc
push
jmp
call
sbb
call
and
in
push
cmp
fldl
or
lds
sahf
ret
lea
dec
or
sub
lock
sbb
aaa
push
xor
out
cmpsl
negb
push
jmp
fcmovnu
jo,pt
add
loop
fildl
pop
outsb
mov
mov
pusha
add
adc
jl
cmp
roll
xor
inc
aam
insb
fistpl
sub
adc
outsl
das
xchg
ss
and
je
dec
cld
fistpl
popa
sbb
inc
aas
push
repz
push
jl
mov
lds
ja
lcall
inc
mov
fistpl
cmp
stos
jge
dec
fcompl
mov
aam
adc
shlb
jle
pop
xchg
mov
fistpl
loope
mov
sbb
jp
jb
subl
addr16
add
mov
clc
inc
mov
push
inc
cmp
push
shlb
sbb
lods
pop
mov
jge
cmova
leave
jbe
add
in
mov
ret
sub
mov
mov
dec
cmp
fucomi
xchg
decl
cwtl
mov
int3
repnz
hlt
cmp
out
inc
fistps
fimuls
fwait
mov
sub
fists
push
fldl
pop
into
fidivrl
fistpll
mov
and
sbb
and
rol
not
cmp
ljmp
icebp
mov
frstor
sbb
or
jp
fcmovnu
pop
mov
cmp
inc
mov
or
pop
push
fstpt
cwtl
xchg
scas
test
sahf
xchg
insl
lds
call
rcrb
in
frstpm(287
pusha
xor
or
rcrl
add
rorl
mov
fldt
out
bound
jns
notb
lea
les
je
pop
or
lods
cmc
in
xor
push
fwait
test
cwtd
out
push
inc
cmc
jno
and
les
shrl
jns
mov
push
pusha
sbb
or
mov
jmp
add
sahf
cmc
mov
neg
aas
cmp
xor
daa
fstpt
jae
push
lcall
jns
insl
ficoml
insb
xor
jecxz
pop
loope
mov
jp
jns
push
and
push
fstpt
mov
leave
in
lcall
lret
jo
inc
xor
mov
mov
jecxz
sahf
imulb
jb
fcmovnbe
shll
call
insl
fisubrl
cmp
mov
imul
js
in
in
mov
stos
in
imul
insb
and
mov
in
rclb
mov
cli
imul
lcall
xor
xchg
push
fldt
hlt
pop
ss
inc
in
mov
fcmovnu
sub
sbb
jmp
xor
push
xor
imul
jle
cmp
icebp
inc
fldt
ds
fldt
popf
test
hlt
rolb
orl
add
inc
cli
das
fstpt
js
lcall
cld
outsb
fbld
cmpsb
les
fstpt
fdivrs
and
cwtl
pusha
inc
sti
jnp
mov
mov
jno
jb
xchg
xchg
sub
lea
mov
xchg
sub
mov
fildl
jb
divb
imulb
mov
ret
stc
mov
jno
jbe
or
push
call
aam
mov
or
out
xor
frstor
xchg
or
mov
push
cwtl
mov
cltd
xchg
loop
pop
mov
testb
scas
aas
ja
fisubrl
fistl
loope
fldt
xchg
mov
fcmovnu
cmpsb
mov
xlat
cmp
dec
xchg
test
mov
addl
mov
sbb
pop
loope
xor
jmp
je
fdivrl
ja
adc
fstp
mov
push
and
push
push
sti
and
mov
leave
add
sub
fs
xchg
push
dec
push
ret
scas
lret
jbe
fcmovne
imul
xor
dec
shufps
lret
iret
fistpl
cmp
mov
sub
push
add
xchg
fidivl
sub
mov
xlat
imul
sbb
lcall
repz
push
dec
outsb
cmp
aam
insl
jno
rclb
pop
adc
std
icebp
dec
push
mov
stos
inc
call
rcl
sbbl
mov
xchg
mov
and
or
inc
adc
imul
adc
insb
fisttpl
roll
xor
xlat
cmp
out
pop
das
adc
jle
jg
and
frstor
out
movsb
rcrl
add
hlt
cld
cli
in
fcmovnb
sub
loope
cmpsb
jp
es
aaa
adc
xchg
cmp
sub
and
add
sbb
fisttpl
mov
mov
cltd
xchg
in
adc
and
jo
pusha
fldt
bound
jns
jnp
loop
inc
xchg
fnsave
adc
cld
cmp
aam
lods
stos
loop
pushaw
je
pop
gs
cwtl
cld
mov
mov
clc
stos
aaa
push
imul
mov
dec
les
les
sbb
push
fildl
aad
mov
or
fs
in
pop
and
mov
add
stos
outsb
push
dec
jnp
in
push
mov
and
cwtl
push
xlat
add
and
icebp
ret
xchg
int3
and
in
pop
push
lcallw
ja
adc
sti
push
daa
pop
mov
imul
in
fstpt
jb
pop
imul
sub
aas
sbb
inc
clc
mov
dec
or
or
loopne
fildl
lock
push
in
outsl
cld
fldcw
inc
je
lock
jb
scas
sbb
or
sub
sarb
lea
mov
mov
aas
add
jmp
add
fcmovnb
ret
push
mov
push
out
popa
fiaddl
lret
ja
fcomi
push
imul
mov
pushf
repnz
fcmovnb
fnstcw
push
adc
fistpl
jmp
adcl
sub
sbb
test
cmp
popf
and
movsl
mov
rcrb
ja
mov
addr16
jae
adc
fidivrl
jg
xchg
scas
pusha
push
push
sub
mov
stc
fisttpl
pop
xchg
mov
mov
imul
xor
sbb
mov
in
or
mov
adc
stc
xchg
jb
jg
mov
outsb
and
pop
xor
call
mov
push
jp
push
iret
xchg
or
add
das
jo
mov
mov
loopne
mov
jg
xchg
insb
push
xor
inc
sbb
outsb
sbb
cli
pop
xchg
fildl
mov
fildl
fisttps
mov
daa
push
cli
sub
sarl
inc
popa
pop
xor
jb
fildl
inc
insl
clc
fistpl
and
jmp
and
movlhps
call
push
push
fstl
mov
test
ja
or
hlt
mov
inc
lcall
push
fsubl
jns
jno
aaa
fucomi
mov
test
dec
fstpt
stos
cmpsb
sarb
aas
jge
mov
gs
mov
call
dec
sub
mov
add
mov
popa
sbb
fsts
xchg
rclb
rorl
inc
add
mov
sbb
pop
fcomps
fildl
cli
cmp
jbe
loopne
adc
or
movsl
jns
pop
mov
int
pushf
inc
mov
fildl
pop
xchg
mov
sub
pushw
mov
fistl
call
lret
push
cwtl
mov
push
lcall
jl
iret
and
mov
and
xchg
mov
cmpsl
add
mov
adc
dec
adc
insl
sarb
shr
sti
mov
jo
sbbl
xchg
push
jecxz
add
pop
and
pop
ja
push
mov
mov
subl
in
push
imul
aaa
cmp
push
fimuls
add
mov
pop
sub
xor
out
repnz
js
roll
pop
cmp
push
cmp
fisttpl
std
je
shll
sub
xor
push
adc
and
incb
lcall
cmp
cmp
ret
movsl
pushf
jb
mov
and
dec
push
fldt
jb
and
ds
je
decb
mov
lret
aam
iret
jo
fwait
xlat
pushf
fistl
push
mov
fcmovne
xchg
inc
cmp
mov
mov
jnp
ret
cmp
pop
ret
or
aad
push
in
scas
outsl
fistpl
cmp
fstpt
pop
pop
cld
pop
cmp
in
mov
mov
dec
notb
stos
ret
popf
gs
jne
mov
fistps
out
insb
xor
cs
fistl
or
cwtl
lods
imul
fldt
lock
cmc
mov
push
pcmpgtb
push
cli
cmpsl
adc
dec
das
jo
ss
loopne
ret
daa
sti
stos
lds
pop
inc
imul
mov
dec
out
ret
fidivrs
stos
mov
jae
dec
push
cli
imul
jns
fucomp
aad
arpl
pop
mulb
sbb
add
mov
or
std
fsubrp
mov
inc
xchg
insl
jno
xchg
mov
fisttpl
or
xor
xor
adc
es
sub
insb
rcr
loop
push
loop
sbb
test
pusha
mov
dec
lret
cmp
iret
or
sti
fildl
scas
in
fisttps
aas
xor
mov
rcr
mov
add
mov
jecxz
pop
push
ljmp
fcomi
hlt
ss
clc
push
sub
xor
mov
fistl
shll
fistl
popf
and
cmpsb
xchg
pushf
jo
dec
pop
les
sbb
fs
divb
xchg
lahf
adc
inc
clc
cs
fidivs
dec
popf
sub
retw
inc
pop
dec
push
pop
fstpt
mov
jge
cltd
inc
fiaddl
iret
sbb
push
call
aaa
jmp
xchg
mov
test
push
insb
cmp
fistpl
enter
sub
sarb
sub
mov
sbb
mov
ficomps
sub
sbb
sbbb
sub
mov
pop
ss
dec
into
ljmp
or
sbb
ja
scas
cld
pop
fldl
fisttpll
add
outsl
cmp
je
mov
into
xor
shl
clc
ret
ss
bound
repz
cmc
dec
testb
orb
cmpsb
out
dec
inc
sbb
jns
loop
mov
in
stos
subl
hlt
fcmovnb
mov
sub
fistpl
mov
pop
jne
sub
mov
ror
test
jno
mov
pop
cwtl
xor
jmp
adc
adc
mov
mov
stc
fistl
lea
fcmovnu
xchg
push
out
jae
sbb
jnp
or
and
and
aas
mov
fcmovnb
jno
negl
adc
inc
rcr
cwtl
mov
test
icebp
loopne
add
repnz
fcmovnbe
push
xor
fldt
xorb
inc
cmp
jb
lds
movsb
and
orb
xchg
int
mov
mov
mov
inc
sbb
fistpl
imul
or
lds
or
cmpsl
inc
mov
sub
je
sbb
jne
cmp
sahf
mov
into
sub
ja
fistpll
das
pop
xor
fisttpl
fistpll
pop
in
fucomp
stos
xchg
aam
aas
lret
fldt
add
push
es
mov
adc
out
sbb
icebp
nop
adc
push
popa
fisubrl
test
frstpm(287
cmp
jae
mov
js
aaa
insb
push
test
mov
clc
adc
out
repnz
loope
outsl
adc
fistpl
xor
xchg
sti
xor
and
pop
and
fstpt
jmp
aam
xor
jbe
mov
jle
dec
idiv
xchg
xor
inc
inc
pop
jne
pop
ss
mov
mov
movsl
ja
idiv
mov
mov
or
fcmovnbe
pop
lds
fistpl
and
inc
push
imul
ret
inc
pop
mov
neg
adc
jg
sbb
sub
xor
fsub
mov
sbb
lcall
test
fistpl
ds
mov
fisttpl
jmp
ja
lcall
fstpt
mov
rolb
insb
adc
xchg
or
push
lcall
jno
jg
repz
fnsetpm(287
lods
mov
test
test
sub
mov
stc
test
dec
loopne
addr16
fadds
mov
mov
fwait
shr
call
pop
cmp
and
out
pop
ds
jb
adc
push
jns
rcr
xchg
dec
sub
xor
fneni(8087
call
sbb
fisttpl
xor
js
push
or
ljmp
inc
mov
dec
imul
jbe
xchg
cmpl
cmpb
lods
pop
mov
and
push
and
int
cli
ja
mov
mov
or
xchg
jo
popa
cs
jecxz
adc
popa
aas
jns
aad
cs
rcll
inc
popa
adc
fucomi
mov
dec
bts
push
adc
inc
icebp
jge
cmp
ror
or
mov
test
rcr
sbb
icebp
push
and
loop
fldt
stos
mov
xchg
aas
sbb
sub
jl
out
js
test
fimull
clc
jno
inc
jp
pop
stos
push
jb
enter
jecxz
sbbb
and
test
fisttpll
sbb
loope
lods
cmp
cmp
fadd
adcb
lret
and
jo
sub
gs
and
in
inc
fstpt
pop
inc
mov
loope
lcall
dec
js
mov
pop
xor
push
daa
test
in
lock
lods
pusha
lock
cwtl
sub
mov
pop
addr16
pop
xor
ficomps
jmp
xor
pop
mov
nop
shr
mov
mov
sbb
lock
cmp
jp
jl
hlt
lret
inc
lock
in
lods
xchg
in
push
sarb
fistpl
mov
in
xor
mov
fnsave
pop
cmpsb
cmc
roll
incl
mov
negb
fildl
inc
and
stos
adc
stos
out
cmp
cmpl
imul
arpl
or
jecxz
mov
xchg
push
das
sahf
add
adc
push
leave
mov
ror
pop
mov
bound
int3
adc
idiv
repnz
jb
mov
cmpsb
ds
lods
insb
xchg
into
loop
movsl
sbb
mov
pop
push
push
and
mov
inc
ss
leave
cwtl
xchg
cld
out
push
or
push
xor
ds
adc
adc
fcomp
subb
jb
fwait
inc
jmp
popf
icebp
repnz
insl
push
push
popa
movsl
inc
pop
add
out
xor
push
in
ljmp
push
xchg
mov
lods
push
inc
pop
dec
dec
mov
sbb
mov
fimull
xchg
and
iret
dec
jmp
xor
add
lods
push
clc
inc
ja
sbb
je
dec
dec
sbb
dec
push
into
jbe
fists
push
aas
adc
test
inc
mov
jg
sbbb
out
ljmp
ja
lods
cmp
adcl
lcall
test
dec
cmp
loop
lods
adc
xor
mov
bound
sbb
loop
lcall
ja
lods
ficompl
sub
fisttpl
test
clc
push
and
cmp
and
mov
xor
jno
mov
dec
push
xchg
fcmovne
addr16
repnz
mov
xor
fwait
inc
stos
sub
or
fldt
lret
mov
jmp
pop
push
cmpsb
fisttpl
xor
add
rclb
in
push
jnp
adc
inc
std
test
sbb
mov
pop
notb
neg
in
and
loope
inc
mov
cmp
pop
dec
jmp
lret
mov
lods
cmp
insl
mov
aaa
and
es
xchg
fstpt
out
mov
mov
mov
push
push
scas
jg
es
sub
and
fdivl
fwait
push
push
fisttpl
xchg
mov
fstpt
jp
cld
sbb
mov
fcmovnbe
pop
mov
fndisi(8087
hlt
mov
cmp
lahf
fistl
pop
sub
fldt
testb
outsb
adc
testb
jb
out
int
bnd
insb
sbb
outsb
mov
rcr
pop
mov
das
sub
push
cs
repz
mov
jmp
in
pop
icebp
pop
js
int
pop
shl
mov
imul
push
dec
mov
dec
cmp
jne
gs
add
in
rorl
int
ret
fildl
mov
fwait
loop
shll
scas
add
scas
imul
negb
jp
inc
fldt
inc
aad
shll
cmpsl
or
sub
cmp
ss
xor
add
lods
and
lcall
sub
lcall
repnz
daa
or
leave
data16
scas
mov
push
xlat
xor
loop
lahf
add
fsqrt
iret
in
mov
sti
or
jp
lock
stos
cmp
cmp
add
in
inc
push
push
pop
pop
arpl
xlat
jbe
call
or
add
sbb
loope
and
jno
mov
sbbl
rcrb
push
int3
push
imulb
sbbb
cwtl
leave
rol
lret
cmpl
fcmovne
mov
aaa
push
lcall
mov
fcmovnu
add
mov
loopne
or
insb
add
push
test
cmc
sbb
mov
push
cwtl
in
pop
and
in
iret
fcmove
fcmovne
mov
divb
xor
sbb
xor
sbb
mov
dec
out
negb
imul
fcmovnu
out
in
xor
loopne
ss
pop
cmp
fldenv
mov
push
adc
add
pushf
push
loop
xor
repnz
sbb
inc
stos
leave
mov
and
int
xor
sti
mov
fistpl
push
add
repz
fldt
sbb
jne
fistpl
out
dec
lret
adc
mov
inc
fcmovnu
test
mov
fimuls
sub
stos
aaa
fldt
les
fcmovne
mov
inc
aaa
fisttpl
dec
sub
dec
fisttpl
movsl
ret
mov
push
dec
hlt
cmpb
mov
adc
mov
xchg
daa
or
xchg
loope
fwait
cmp
xchg
movsl
or
mov
aas
pop
bound
push
mov
inc
imul
fistpl
std
cmp
pop
call
xor
insb
ss
fcmovnb
fincstp
add
cmp
add
mov
dec
push
loopne
jnp
dec
push
fwait
repnz
sbb
das
push
fidivl
xchg
test
js
fistpl
add
scas
push
jle
lods
lahf
in
push
or
fldt
or
in
push
or
and
enter
add
adc
sub
cs
inc
aam
fisubl
fdivl
out
pop
popa
scas
out
pop
cmp
fistl
xor
xchg
add
lds
sahf
jb
out
cmp
mov
inc
out
cltd
shlb
insb
or
mov
mov
mov
in
movsb
jp
notb
addr16
sub
sub
arpl
add
lahf
add
ret
push
stos
xor
pop
fistl
inc
js
aam
mov
loop
push
xor
sbb
mov
pop
mov
mov
cmp
add
xlat
push
jl
sbb
sbb
sbb
fstl
jl
out
hlt
sbb
fstpt
sbb
fstl
leave
fidivl
or
ror
cmc
mov
ficomps
jns
ljmp
cmp
movsb
pop
cmp
adc
xchg
push
outsb
or
xchg
test
fstpl
mov
hlt
das
jnp
cwtl
inc
pop
test
push
lret
jecxz
or
and
fcomp
fdivrl
fidivl
fldt
fimuls
push
rorb
jo
insb
mov
push
out
jnp
sbb
push
sti
jb
or
sub
out
push
adc
jae
pop
cmp
lock
dec
pop
ficompl
push
fbld
fwait
movsb
inc
cmpsl
clc
popf
lahf
jg
jbe
fadd
jns
sti
popf
mov
pop
sbb
push
adc
fwait
xchg
repnz
aad
push
pop
fdivl
pop
add
dec
fistpl
mov
and
int
dec
jo
inc
call
daa
xor
mov
hlt
clc
shll
arpl
loopne
add
mov
add
adc
fistpl
lock
mov
jb
in
mov
sbb
pxor
pushf
lret
lea
imulb
cwtl
mov
sub
fists
jmp
inc
xor
icebp
push
daa
jne
jns
and
sbb
fwait
inc
jbe
jmp
xor
pop
push
fstpt
fs
inc
xchg
mov
aam
pop
std
lret
cmp
add
dec
ds
mov
sbb
and
daa
xchg
push
or
pop
sbb
add
jnp
jne
dec
stc
mov
or
jo
sbb
adc
and
negl
pop
fwait
mov
in
fldt
out
out
sub
ffreep
cmpsl
lds
inc
test
insl
mov
sbb
adc
or
sbb
outsb
add
in
test
mov
push
fildl
xlat
rcr
mov
xchg
xchg
aaa
mov
testl
jmp
and
aad
pop
int3
icebp
lods
push
xchg
lahf
push
in
ret
mov
fstpt
pop
xchg
fdiv
or
into
loopne
or
jbe
dec
inc
dec
stos
lock
sub
sti
jecxz
pop
dec
add
cmp
cmp
fistl
cld
dec
loope
cwtl
pop
fisttpl
jle
sahf
mov
dec
js
fiaddl
scas
inc
jecxz
dec
sbb
add
clc
shl
jae
and
dec
fstpt
adc
jmp
ficompl
std
lret
dec
xor
sub
pushf
xor
jbe
or
cltd
add
jne
in
fucomi
pushf
lret
clc
aaa
add
fidivl
inc
loopne
and
pop
in
cmpsl
mov
stos
cmpsb
inc
jns
fcmove
jg
sbb
test
stc
pop
loop
add
push
inc
pop
xor
scas
test
sahf
push
jmp
fildl
mov
imul
mov
into
jp
mov
fwait
cmp
movsl
adc
xor
aad
add
in
lret
sbb
fistl
add
cmpsb
sti
push
or
xor
insb
pop
fisttpl
test
iret
inc
xor
add
ret
lcall
fndisi(8087
jl
push
loopne
add
jg
xor
pop
ja
fistl
int
lds
mov
mov
inc
inc
dec
sub
fstpl
hlt
push
out
ds
sub
pop
dec
call
push
fwait
loopne
fdivr
fcomi
sub
das
mov
xchg
sbb
jmp
add
pop
out
sub
rorl
add
ffree
pop
repz
mov
xor
cmp
jbe
push
ret
jmp
pop
loope
cmpsl
push
lahf
cmp
dec
test
and
popa
arpl
mov
enter
dec
js
mov
lret
add
or
jecxz
mov
repnz
fdivr
int
adc
mov
mov
fildl
cmp
adc
push
cli
shlb
out
add
sub
int3
push
fistl
lahf
pop
int3
popa
lods
xchg
adc
fistps
pop
pop
adc
xlat
and
fisubrl
aam
ret
jecxz
inc
push
and
and
aas
mov
jg
in
repz
in
adc
imul
fisttpl
dec
inc
xchg
push
pop
sbb
clc
or
ljmp
rcr
jl
pop
xor
pop
cmp
sbb
xor
pop
xor
es
push
fisubl
or
mov
xor
push
dec
scas
mov
mov
bound
arpl
sub
pop
fsubrs
lret
ret
push
fimuls
dec
dec
ficoml
xor
fistpl
fs
gs
aaa
or
pop
sarl
test
push
dec
push
fistl
ljmp
ja
out
movsl
cltd
cmp
nop
add
shrl
dec
push
add
ret
pop
popa
jnp
mov
fwait
lods
lret
insl
popf
jge
jnp
mov
dec
fisttps
jmp
pusha
std
dec
push
mov
es
dec
sbb
out
dec
pminsw
mov
fisttpl
pop
sarb
in
or
or
jbe
stos
lods
mov
adc
daa
hlt
icebp
ss
cmp
sahf
and
or
es
push
xor
xchg
and
subl
sub
popl
or
inc
cs
fisttpl
test
sbb
sub
pop
gs
daa
addr16
sarb
frstpm(287
inc
popa
or
cmc
mov
lret
xor
mov
mov
push
xchg
test
or
idivb
scas
lret
out
pop
imul
rol
pop
in
add
mov
xor
mov
pop
xchg
pusha
fldt
inc
in
lods
aam
cmpsb
dec
in
mov
pop
sub
sub
dec
push
out
mov
sti
pop
mov
ret
cmpl
imul
push
fucomp
jl
ds
cmp
and
and
cli
int
gs
sub
mov
mov
loopne
lret
cmc
or
in
dec
subl
clc
lcall
push
fwait
jno
add
mov
data16
filds
fistl
in
aaa
fstpt
dec
inc
push
divb
leave
and
imul
lods
xor
mov
cmpsb
add
mov
lods
fs
iret
push
loope
pop
insl
push
mov
and
sub
xchg
cli
sbb
es
lock
imul
adc
ss
or
repz
divb
ret
push
loope
test
mov
jge
lock
test
or
or
and
lahf
rorb
repz
cmpsl
stos
int
or
lcall
xor
jae
leave
cmp
test
lea
xchg
icebp
push
or
cmp
dec
cltd
pusha
sbb
jae
ror
popf
adc
adc
or
pop
outsl
stos
rcll
push
xor
mov
clc
jecxz
jg
clc
lods
xor
mov
insl
sti
push
jmp
stos
out
mov
pusha
cmp
jb
fcmove
xor
outsl
dec
imul
add
and
fistl
rcrb
adc
sahf
lahf
cmp
pop
lcall
sar
loopne
std
push
xchg
lods
data16
xor
repz
out
ljmp
ret
das
xlat
sbb
mov
imul
and
jb
lahf
subl
fwait
and
pop
fisttpll
dec
jnp
push
mov
fstpt
sub
out
mov
mov
cmp
jne
push
inc
mov
inc
nop
fldt
stos
mov
fistl
hlt
std
mov
adc
negl
pop
xlat
aam
or
js
push
int
mov
scas
movsl
adc
pop
mov
rcl
fcmovnu
xchg
andb
imul
scas
xor
stos
cmp
xor
sbb
xchg
subl
sbb
insb
loopne
cmp
lret
fucomi
lock
sbb
ljmp
rcrl
push
ror
fldt
push
inc
sub
fistl
sub
addr16
and
and
add
mov
clc
jnp
pop
mov
push
xchg
jne
mov
fucomi
sbb
dec
lahf
dec
jae
fildl
hlt
fxch
call
inc
mov
in
sub
cli
pop
sub
test
mov
mov
xor
push
cmpsl
stos
in
into
sarl
scas
cmp
out
mov
loop
aas
popf
xchg
push
fiaddl
imul
push
add
inc
aam
mov
fcmovnu
iret
mov
popf
mov
add
in
cmpb
mov
jecxz
jl
movsl
jle
aad
inc
inc
in
fildl
jge
dec
fldt
or
sub
sbb
arpl
pop
fisttpl
xchg
inc
and
xor
sbb
push
fidivrl
aad
push
call
xor
add
mov
push
mov
pop
xchg
mov
or
dec
push
xchg
out
sub
xor
add
push
cli
or
in
fisttpl
lahf
mov
xlat
es
cs
in
clc
push
lock
sub
mov
sarb
jne
lds
and
sbb
jns
call
cli
jnp
add
aas
fistl
outsb
and
mov
sahf
add
in
cmp
and
rcrb
sub
in
push
cmp
adc
mov
mov
out
pop
and
sbb
mov
rclb
xchg
xor
fisubs
jb
pop
ss
repnz
mov
pop
fs
out
pusha
popf
pop
orl
mov
lret
xchg
add
inc
sub
cmp
cwtl
lcall
nop
imul
fsubrp
test
mov
adc
xchg
cmpsb
fcomi
out
dec
and
xor
fildl
inc
adc
rorb
or
or
loop
or
pop
mov
push
adc
fwait
jb
hlt
cmp
sbb
int3
fldenv
aaa
push
jp
adc
aas
out
jb
and
clc
cmp
divb
aaa
jp
xchg
aad
dec
and
xbegin
fnsetpm(287
aas
lods
insl
inc
stos
or
cmp
pop
adc
clc
adc
fcmovnbe
fisttpll
cmp
jnp
fistpl
mov
jg
adc
movsl
test
sbb
pop
mov
sbb
pop
xor
sbb
fstpt
sbb
or
push
push
decb
cmp
xchg
push
jge
push
and
lock
fldt
adc
mov
stos
daa
ficomps
loopne
xor
push
data16
outsb
imul
test
xchg
jle
aam
scas
loopne
xor
in
sub
in
mov
movsb
xchg
adc
jno
fistpl
repz
pop
arpl
jle
sarl
and
lcall
pop
and
xchg
add
push
mov
fwait
sahf
rorl
and
test
fistpl
mov
jp
fs
js
ret
and
int3
imul
push
fisttpl
push
mov
mov
xorb
mov
repnz
mov
fistpl
xchg
lds
jne
or
out
je
sub
adc
std
enter
out
shlb
jnp
bound
lret
pop
and
jg
mov
ja
sbb
mov
je
add
daa
call
lahf
jp
dec
sub
push
movsb
push
and
and
in
stc
lock
pop
inc
mulb
xchg
pop
sbb
insl
jb
xchg
testb
dec
sbb
int3
pop
xchg
stos
mov
ss
in
loopne
int
push
jno
fdivrl
call
adc
and
out
mov
aas
outsl
pop
daa
dec
or
cmp
pop
ror
xor
pusha
jns
mov
add
adcl
shl
loope
popa
jl
icebp
cmp
lds
mov
shll
push
mov
push
jmp
outsl
fisttpl
dec
enter
cmp
mov
ss
lcall
andb
cmp
fcompl
xchg
sbb
inc
mov
movsb
out
dec
into
inc
fldenv
test
dec
iret
fildl
cmp
adc
xchg
movsb
icebp
into
lods
fldt
push
divb
fcmovu
mov
mov
imul
addl
frstor
into
stc
jno
rclw
scas
or
push
jnp
jmp
rcr
in
in
out
adc
aas
sahf
mov
add
movhlps
jecxz
mov
fldl
jno
cmp
fcoml
rcrb
jae
in
lcall
ds
and
lea
scas
leave
into
imul
cld
pop
jae
rcrl
jnp
jo
pop
xor
xchg
add
adc
and
sub
lret
cmp
setg
sbb
fcmovnb
adc
push
cmpsl
cmpsb
mov
sarb
adc
stos
aas
lahf
insb
pop
mov
ja
ficoml
sahf
test
lcall
scas
cltd
inc
out
inc
stos
inc
or
inc
stc
xor
enter
cli
je
xchg
pop
bound
push
fcomps
or
push
shlb
cwtl
push
stos
shl
movsl
jmp
shr
xor
aam
clc
iret
sub
repz
fcomps
inc
and
aad
sbb
push
stos
out
jbe
aam
ret
inc
pop
out
iret
sub
jge
or
and
or
push
dec
sbbb
inc
sbb
fst
clc
fldt
test
pop
or
or
repnz
xchg
add
hlt
mov
int
jp
push
pop
mov
pushl
in
repnz
stos
fcomps
frstor
inc
outsl
stc
in
pop
fisttpll
dec
sub
popa
jne
xor
rclb
or
inc
mov
and
stc
pop
enter
pop
and
in
hlt
test
mov
repnz
add
in
mov
push
xchg
loopne
fs
inc
push
lret
inc
fcmovnbe
mov
mov
mov
cmpsl
fisttpl
call
lret
pushf
add
dec
and
pop
sti
jbe
inc
fcmovnb
out
xor
out
call
mov
adc
mov
flds
jl
mov
call
sbb
push
mov
xor
cmpsb
pop
xor
fstpt
jle
jp
lret
inc
out
iret
cmpsb
ret
sahf
clc
ss
inc
decb
stos
fistl
into
lret
outsb
ret
push
fnstsw
mov
cmpsb
push
lcall
xchg
inc
sbb
push
fistpl
clc
xchg
in
push
ds
fildl
sahf
imul
js
rcll
jmp
and
enter
mov
fstpt
sbb
cltd
push
add
mov
fstp
mov
insl
jae
arpl
rcrb
roll
add
push
fcmovnb
aaa
mov
mov
scas
dec
sub
loop
arpl
sub
mov
lahf
cmp
push
and
repnz
add
dec
xchg
mov
stos
jp
xor
xchg
mov
fstpt
and
xchg
adc
fisttpl
lea
mov
cwtl
sti
out
mov
pushf
adc
add
ficompl
add
in
lcall
lcall
loop
jl
push
cmpsb
ror
fstpl
out
and
xor
pop
ficoms
mov
sbb
push
sbb
call
enter
int3
cwtl
push
inc
cmp
pop
mov
or
fwait
push
xchg
outsb
subb
dec
jo
mov
jne
test
lds
je
xor
fistpl
in
outsb
mov
psrad
pop
aaa
imul
es
sbb
scas
pop
lret
fildll
pop
aas
jnp
pop
or
cmc
and
popf
adc
xor
jnp
popa
imul
cwtl
jne
dec
or
xchg
sahf
push
aas
fisttpll
out
cs
adc
scas
inc
fisttpl
mov
xor
xor
mov
ds
stos
cmp
mov
lods
xchg
daa
xchg
enter
int
cwtl
jecxz
xchg
mov
add
push
ffreep
mov
stos
cmp
add
scas
fiadds
mov
fbstp
jmp
adc
scas
dec
out
filds
and
lods
lahf
add
adc
pop
shlb
cltd
mov
lcall
loop
jnp
push
subb
sti
shr
icebp
ficoml
or
add
stos
shlw
mov
out
dec
divb
stos
and
xor
stos
jb
jbe
insb
fsubs
mov
adc
mov
xor
fsubrp
cld
dec
aad
leave
mov
and
imul
popf
xchg
xchg
loop
sbb
iret
cmp
stos
inc
xor
dec
imul
sbb
ljmp
sbb
xchg
add
pop
fidivl
gs
loope
adc
and
call
jecxz
imul
lock
add
outsl
pop
cwtl
sbb
pop
mov
dec
out
jbe
push
jnp
dec
sbb
mov
or
lahf
addr16
mov
decb
xor
xor
mov
pop
xor
xchg
in
std
inc
aas
cltd
inc
mov
lods
lods
dec
insb
mov
inc
dec
pop
out
sbb
int
and
dec
dec
pop
js
fdivr
ljmp
and
outsb
repnz
pop
bound
test
mov
ja
jle
inc
fildl
add
cltd
fldt
pop
popa
jge
mov
adcl
jmp
cmp
jp
push
outsl
fcmovne
mov
scas
adcb
fcmovnb
ja
movzwl
aaa
lcall
and
fistl
leave
sbb
inc
jo
mov
dec
sub
mov
cli
jnp
pop
jbe
ja
lcall
pop
cmp
stc
mov
xchg
or
aad
push
mov
cmc
mov
test
aaa
jl
insl
lcall
mov
xlat
test
mov
cmp
lods
stos
lahf
fistl
mov
insl
je
inc
jle
dec
jno
xchg
push
inc
negb
push
xor
push
ja
insl
sti
fidivrl
cmp
out
fisubrl
cmpsl
or
in
xchg
mov
fst
pop
fisttpl
and
loop
movsl
ret
sbb
or
mov
insl
fistl
dec
push
or
fistpl
xor
cltd
test
sub
frstor
inc
lcall
dec
clc
push
dec
aas
call
cmc
add
fisttpl
cltd
cld
popf
out
mov
loop
inc
scas
sub
xchg
jnp
lahf
lret
inc
aas
fwait
pop
shrl
xor
pop
xchg
test
mov
js
cmc
and
cmpsl
cmp
add
dec
ds
aad
pop
mov
push
fldt
inc
xchg
push
ss
loopne
call
sbb
xchg
bound
cmp
loopne
enter
sub
pop
adc
jne
jge
dec
mov
fdivrs
ficoms
movsb
into
and
fwait
jge
fldt
shrb
push
fcmovnbe
inc
popf
pusha
outsb
sub
jne
mov
adc
jbe
iret
inc
loopne
cmp
lea
fisttpl
dec
pop
pop
test
mov
ret
dec
leave
ret
mov
and
mov
pop
cmpsl
mov
lods
aad
ffree
mov
test
or
mov
mov
dec
call
dec
jnp
in
fcmovnb
pop
xchg
fcmovnu
and
mov
sti
push
pop
push
mov
sub
test
testl
int3
xchg
push
xor
dec
js
or
roll
or
stos
sub
pop
leave
call
pusha
pop
lcall
or
movsb
jno
jl
inc
fstpl
and
xor
dec
push
fwait
shr
aaa
fnclex
cmpsl
ds
movsb
addr16
call
adc
xchg
nop
test
push
xor
into
lret
scas
js
in
das
sub
inc
cs
rclb
mov
loopne
fldt
mov
int3
fildl
ss
ret
fisttpl
mov
and
fistl
pop
mov
xchg
jae
adc
or
fldl
and
arpl
pop
xor
icebp
hlt
push
nop
data16
imul
lods
lcall
mov
decl
xor
or
fndisi(8087
and
push
sahf
mov
cli
rcrl
xchg
and
sub
stc
cmp
arpl
lock
movsb
mov
enter
inc
clc
add
pop
fdivl
mov
out
mov
or
cli
xchg
mov
mov
inc
arpl
xlat
and
es
mov
sar
leave
int
cmp
add
ret
xor
rclb
mov
lds
mov
or
inc
into
fs
fistl
jecxz
cmp
in
sub
xor
add
jmp
mov
lret
orl
mov
sub
lods
mov
gs
xor
cmpsb
aaa
or
add
or
shrl
mov
fists
lret
loope
lock
mov
js
cmp
jo
adc
lcall
lods
fistl
repnz
push
xchg
cmpl
fildl
ret
fimuls
push
fistl
iret
ret
es
imull
dec
mov
cmp
xchg
mov
sbb
inc
fidivl
jae
add
xchg
scas
mov
mov
fldt
sub
xor
xor
push
pop
inc
xchg
mov
loop
jp
dec
es
std
incl
mov
push
pop
imul
xor
jp
fistpl
ret
push
xchg
fcomps
mov
notl
pop
fcmovu
repz
cltd
test
inc
and
inc
add
mov
mov
std
push
jl
inc
fistl
cmpsb
aam
movsb
lds
and
into
jo
pop
jne
neg
ja
fwait
not
repnz
js
fstl
push
fldt
mov
sahf
xor
mov
mov
jb
repz
fldt
fldt
mov
sbb
cmp
xchg
mov
bound
int
lret
divl
aad
rol
test
jecxz
cmp
je
inc
test
out
adc
icebp
adc
mov
fnsave
or
jle
jecxz
push
enter
out
cmpsl
ret
filds
cli
mov
adc
add
push
dec
mov
lock
movsl
pop
pop
fmull
stos
sub
ficompl
test
mov
fistl
repnz
dec
fcmovnbe
into
jp
sbb
ret
movsb
inc
cmc
fnstsw
in
in
lcall
dec
aad
mov
mov
add
fstpt
loopne
xchg
sub
int
mov
jne
stos
mov
sbb
mov
mov
xchg
stos
lret
dec
fistl
jnp
inc
les
aas
dec
fldt
imul
jmp
xor
adc
cmp
mov
and
fistpl
mov
ljmp
stos
cmpsb
fldt
lret
push
xchg
sbbb
and
daa
inc
out
ss
fldt
push
jecxz
fldt
int
lods
adc
inc
mov
stos
icebp
lret
pop
fs
negl
mov
xchg
add
jno
cmpsl
ret
fwait
insb
push
adc
cltd
mov
ror
neg
push
mov
loop
pop
iret
fildl
movsb
loope
pop
mov
subl
call
outsl
fwait
cmp
push
test
lret
ja
fcmovnbe
pusha
xchg
mov
push
dec
cs
mov
adc
lret
outsb
xor
lock
push
mov
les
jmp
or
fstpt
imul
inc
mov
mov
xor
push
cmp
mov
sub
loop
ljmp
adc
enter
js
fistl
mov
pop
mov
dec
cld
mov
movsb
fisttpl
outsl
shrl
rdmsr
aaa
loopne
aas
pop
pop
mov
sti
repnz
ja
push
scas
xor
outsl
imul
jecxz
mov
out
and
stc
push
leave
lcall
cs
push
cltd
add
pop
aaa
movsl
leave
push
pop
xor
lods
cmp
or
outsb
stos
mov
test
mov
pop
das
jae
into
rcr
pop
push
xor
cs
sbb
mov
pop
subb
divb
aam
loop
sarb
sbb
jl
adc
fsubs
shl
mov
pop
xchg
pop
sub
fstpt
push
js
loope
repnz
xlat
movsb
adc
ret
cmpsl
pop
cmc
jg
mov
inc
sti
fidivs
dec
sbb
test
pop
add
frstor
xchg
fstpt
add
fistl
and
ljmp
sahf
stos
mov
push
fildll
pop
pop
sbb
lods
das
cmp
ror
mov
add
lret
ja
push
shlb
mov
call
jge
fcmovnb
inc
pop
pop
sbb
jg
cwtl
inc
ljmp
or
mov
in
clc
and
cmp
xor
xor
and
adc
int3
dec
andl
out
int
je
frstor
jns
popf
mov
xchg
loopne
push
insb
pop
pop
dec
repnz
inc
mov
incb
or
and
lret
add
fdivr
add
daa
jne
add
lds
shll
mov
push
cwtl
push
fistl
cmp
inc
fistpl
rclb
fwait
push
fildl
iret
repnz
push
xchg
push
scas
sarb
add
cmpsl
jp
pop
sub
arpl
fisubrs
mov
sub
ja
fldcw
push
addr16
testl
fidivrl
leave
cli
stc
dec
sbb
enter
sahf
dec
dec
pusha
mov
mov
cs
mov
fnstsw
lret
jp
fimuls
inc
aaa
gs
stos
lds
outsl
popl
jge
std
xor
pop
sbb
rcr
jno
fisttpl
dec
sub
push
mov
fimull
sti
xlat
and
xchg
js
pop
xchg
fcmovne
mov
leave
lret
mov
cmp
ja
xchg
adc
call
mov
pop
fisttpl
sbb
sub
mov
pop
imul
in
inc
and
sbb
loope
or
lock
mov
ficoml
sbb
out
cli
jb
call
sbb
push
in
dec
sub
out
lods
popa
repz
repnz
pop
dec
inc
xlat
xor
xchg
scas
pop
pand
fisttpl
das
jnp
fcomi
xor
mov
dec
mov
pop
jo
jno
push
addb
enter
int3
lea
mov
pop
cmpsb
cmpsl
fsubrp
xlat
mov
sbb
cmp
push
xor
negb
jb
mov
mov
add
mov
xchg
fistpl
ret
fisttpll
sbb
push
je
loope
outsl
fidivl
or
cwtl
xor
pop
cltd
sbb
xchg
lcall
mov
leave
cmp
xchg
loop
lret
xchg
scas
sub
push
fistpl
nop
xchg
jno
sub
jecxz
pop
lds
jo
mov
mov
mov
lret
cmpsl
cwtl
fstl
dec
push
mov
and
mov
sbb
jmp
icebp
dec
fwait
fisttpl
pushf
mov
jmp
outsl
xchg
mov
and
xor
call
ret
xchg
jo
sbb
cmp
daa
mov
pop
mov
jl
fistpll
pop
mov
jns
dec
mov
fstpt
mov
lcall
and
vpavgb
adc
daa
adc
xchg
dec
mov
fistps
jmp
lret
rolb
fistpll
pop
inc
pop
subl
mov
mov
filds
xchg
or
les
in
sti
hlt
push
mov
shrb
lods
iret
adc
fistl
sarb
and
jg
ss
jmp
lahf
lret
addr16
sar
mov
leave
sub
sub
lcall
stc
fucomi
scas
popf
sarl
mov
fcmovne
sbb
lcall
lea
outsl
loopne
ror
fisubl
call
inc
sub
sbb
or
test
fldt
fs
ret
xchg
push
cmp
cmp
in
clc
ss
dec
fisttpl
xlat
fstps
push
cmp
dec
or
push
sub
ret
and
dec
out
dec
fs
mov
inc
fstpt
jno
stos
rcll
cs
xchg
aam
mov
stos
sahf
in
sub
cwtl
fcmovnb
cmp
fwait
cmp
fstpt
es
lahf
mov
imul
xchg
rcrl
sub
loop
ficomps
pop
xor
mov
or
xchg
dec
add
or
push
test
adc
sub
ret
fcoms
mov
into
or
or
pop
mov
add
nop
xchg
mov
lret
and
adc
in
fnclex
xor
xorb
repnz
push
incl
mov
mov
xor
pop
clc
mov
sbb
int
ror
push
into
dec
rcr
pop
push
jp
stc
add
xchg
or
cmp
rcr
arpl
inc
inc
push
xor
lret
pop
or
xor
and
fcomp
movq
and
mov
xlat
jp
std
pop
rcl
inc
mov
mov
jle
cvtpi2ps
lcall
add
je
lea
lds
addr16
pop
adc
adc
dec
or
jle
test
je
add
fstpt
fiaddl
int
jl
lahf
pop
int3
stos
adc
scas
scas
bound
adc
xchg
and
adc
xlat
fldt
jne
lock
pop
mov
and
xchg
cmpsb
sbb
jb
adc
inc
fcmovnu
or
mov
andl
fldt
ficoml
arpl
dec
stos
sub
xchg
ret
das
cld
adc
out
jmp
enter
add
stos
pop
mov
mov
and
add
cmp
xor
jo
add
pop
in
adc
mov
jle
pop
xchg
xchg
lods
fisttpl
fmuls
sbb
and
push
ficomps
shll
mov
in
xchg
jnp
dec
mov
and
mov
or
daa
int
push
dec
lcall
js
addb
leave
push
scas
fistpll
dec
stos
dec
mov
or
add
les
fs
lock
mov
cmp
or
out
fcmovnb
int
pop
inc
icebp
add
or
ja
in
outsl
jecxz
lret
fildl
adc
scas
adc
mov
inc
idiv
adc
cltd
mov
addr16
mov
lds
ret
cmpsl
ja
sahf
adc
push
fistl
orl
fistpll
loopne
and
lahf
add
negl
and
mov
xchg
cmp
fisttpl
jp
fisubrl
lds
fnstenv
pop
push
pop
and
pop
daa
into
loopne
mov
jle
xchg
jmp
addr16
cmp
into
fucomip
fcmovne
shrb
mov
mov
sbb
mov
push
in
fisubrl
iret
movsl
xor
sbb
xchg
xorl
lcall
call
cmp
xor
adc
rcr
fsubrs
bound
stc
sbb
or
cmp
sti
mov
xchg
arpl
pop
in
or
loopne
nop
adc
mov
outsl
fildl
dec
mov
jecxz
aad
jbe
subb
push
dec
add
ss
jmp
inc
in
pop
fst
mov
mov
or
fwait
cmp
adc
pop
daa
dec
jg
pop
fsubr
cmp
jno
stos
pop
push
addr16
fildl
imul
mov
fstpt
mov
fsub
jo
or
pop
xor
mov
mov
dec
and
pop
xchg
or
xchg
enter
lods
cwtl
popa
add
or
adc
loope
lahf
arpl
fwait
stos
push
mov
fidivrl
sub
loop
aad
jle
rcrl
xorb
jge
scas
pop
dec
loope
or
cmp
pop
sub
shrb
push
pop
or
lret
mov
out
in
xchg
jecxz
repnz
xlat
loopne
stc
adc
xor
and
lea
fildl
jmp
out
or
flds
and
sub
add
sbb
mov
pop
loopne
int
shll
or
loop
xor
fmulp
push
ja
cmp
cmc
dec
and
pop
movsb
fistl
sbb
rcr
mov
stos
sub
add
adc
out
aad
lods
sbb
adc
or
xor
pop
and
push
shlb
arpl
add
mov
mov
dec
into
fildl
xchg
xchg
loop
inc
lret
pop
enter
pop
xchg
mov
idivb
sbb
inc
das
call
stos
push
pop
std
mov
mov
mov
sbbl
mov
xor
fisttpl
movsb
push
scas
mov
shll
fcmovnbe
shld
negb
icebp
cmp
int
mov
cmp
fldt
mov
cmp
das
mov
cwtl
mov
fstp
inc
lea
addr16
adc
add
test
inc
mov
mov
pop
sub
dec
fisttpl
and
call
sbb
roll
pminsw
cmp
ficompl
movsl
dec
into
fistl
lds
fnsave
idivl
ret
mov
repnz
xlat
into
insl
fwait
test
jmp
xor
shll
int
imul
or
outsl
pop
cmp
dec
jecxz
mov
iret
cmp
sub
cmp
push
jbe
fisubl
cmp
mov
dec
sti
fucom
push
fisttpll
pop
inc
cmp
mov
inc
icebp
mov
in
out
fildl
cmp
stos
test
xchg
imul
add
sbb
inc
push
cmpsb
pop
sbb
stc
fcomi
loopne
jp
sbb
cmpsl
loopne
mov
mov
mov
mov
dec
xchg
fidivrl
cmp
and
imul
neg
ret
xchg
xor
mov
pusha
add
mov
mov
stos
push
cmc
dec
fnstsw
test
scas
fstps
inc
cmc
loope
add
sbb
push
jecxz
pop
or
cltd
xchg
fldt
cwtl
mov
inc
sub
iret
outsl
fcmovnu
jbe
mov
xchg
inc
daa
sti
mov
cli
pop
or
xor
fcmovnu
scas
inc
sub
push
out
jns
rol
mov
pop
dec
adc
and
push
adc
sub
ja
sti
add
js
jmp
xchg
push
cmc
ss
fwait
inc
dec
xlat
mov
mov
xchg
inc
ljmp
mov
outsl
outsb
push
pushf
push
into
pop
sub
lea
jns
inc
rol
fldt
push
add
ss
testl
pop
sub
inc
and
out
pop
fistpl
pop
adc
xor
xchg
xchg
das
mov
ret
sbb
inc
aam
pop
in
ret
mov
sbb
or
pop
cmp
das
sub
sbb
inc
xorl
add
js
push
cmpsl
mov
pop
test
gs
and
adc
imul
lret
sbb
imul
in
push
icebp
jno
xor
movsl
popf
push
fisubl
out
fildl
sbb
jmp
fistpl
xchg
or
jecxz
imul
mov
sbb
or
push
loop
or
pop
dec
dec
lcall
xchg
xorb
fstpt
into
mov
dec
mov
fstpt
mov
fstpt
sub
fcmovnbe
xor
in
mov
mov
les
cld
and
sbb
or
sbb
fndisi(8087
and
mov
mov
cmpsl
js
xchg
call
xlat
add
sbb
pop
sbb
jb
data16
shlb
loop
gs
in
lods
fistl
mov
lea
test
loopne
jo
rcll
cmpsl
push
fcomi
and
sbb
cltd
mov
leave
lahf
mov
nop
add
adc
or
push
outsb
fistpl
mov
popf
mov
call
bound
pop
dec
out
cltd
call
movsb
sbb
add
mov
jo
and
stos
fisubs
mov
inc
add
pop
pop
or
mov
lahf
inc
fstpt
mov
or
pusha
shlb
hlt
scas
lods
xor
mov
and
fcomi
cmp
and
into
jecxz
xor
pop
lods
fcmovne
enter
xchg
cld
aaa
mov
int
dec
shlb
jle
xchg
je
mov
stos
ret
mov
imul
fisttpl
std
nop
lods
mov
sub
stos
test
sub
inc
sti
idivb
dec
inc
push
and
add
mov
out
or
call
in
mov
lods
outsb
cmp
scas
fs
pop
add
fcmovnb
inc
lock
ljmp
dec
sbb
clc
enter
pop
cmp
adc
mov
push
or
jp
adc
mov
cmpsl
xchg
pop
arpl
fsubl
pop
aaa
hlt
sub
ss
in
xchg
mov
stc
cmp
sti
cmpsl
xor
pop
or
fidivrl
cli
xor
pop
jl
jno
and
aaa
sub
sbb
pop
or
push
fistpl
adc
loopne
inc
push
fisttpl
lds
test
cld
inc
fldt
call
jle
icebp
mov
stos
aaa
fisttpl
ret
jl
xchg
pop
ud2
fcmovnbe
mov
mul
xchg
pop
push
scas
sbb
or
dec
inc
fstpl
jp
cwtl
xorb
sarb
adc
je
pushf
push
mov
enter
mov
dec
leave
out
mul
mov
xcrypt-cbc
cmpsl
push
in
stc
sub
in
insl
pop
fisubrl
adc
orb
rcll
fisttpl
imull
mov
je
stos
in
dec
and
push
aad
jne
lcall
out
pop
ds
jecxz
mov
nop
xchg
imul
xlat
pop
jmp
rcl
rol
fistl
dec
scas
sbb
out
jae
add
fadd
fisttpl
sub
fstpt
std
in
cld
mov
roll
dec
push
sti
cmp
push
xchg
or
jno
pop
call
sbb
hlt
mov
shlb
es
xchg
inc
or
rcrl
in
roll
popa
icebp
fiaddl
pushf
cmp
sub
lcall
ds
movsl
fwait
dec
aad
add
out
iret
in
sbb
je
push
pop
subb
lret
sarb
fcomps
aaa
or
jno
fcmovne
dec
shll
data16
or
xor
lock
fildl
out
cmp
mov
sbb
ret
popa
dec
fwait
or
push
mov
aad
adc
mov
pop
in
fadd
rcll
cmp
adc
loope
inc
fistps
je
iret
fstps
ficoms
jno
pop
sub
adc
inc
sbb
sub
bound
stos
movb
mov
xlat
mov
aaa
jmp
fidivrs
cli
jae
in
mov
leave
test
ljmp
jmp
mov
xchg
jbe
in
inc
rorl
fdivrl
out
scas
cmp
lcall
imul
mov
out
lods
out
mov
in
iret
in
push
xor
in
daa
int3
subl
pop
sub
hlt
or
push
mov
stos
lret
xor
jmp
movsb
aas
cmp
or
push
jo
add
test
inc
and
fs
repnz
sti
xor
jle
in
addl
lret
and
enter
lret
mov
stos
xor
int
dec
and
insb
xorb
dec
stos
lret
inc
xor
jbe
ret
es
ror
pop
and
fadd
inc
arpl
pop
cmp
subl
mov
and
insb
test
sarb
cmp
push
adc
fmuls
subl
mov
jg
sti
sub
repnz
xor
icebp
cli
cli
in
jae
mov
and
popa
push
xchg
stos
in
adc
in
fnsave
adc
bound
loop
lods
stos
mov
das
cmp
sahf
sub
xchg
jo
push
sti
inc
mov
into
jmp
das
mov
test
popa
lods
sub
insl
xchg
imul
popf
aad
cs
bnd
sub
loope
jle
fucomip
stos
inc
adc
in
sbb
clc
sbb
sbb
fldt
mov
mov
pop
lods
jl
xchg
movsb
cwtl
pop
mov
mov
add
out
xchg
stos
sbb
in
xor
mov
test
bound
cmp
push
push
adc
mov
jmp
or
inc
fisubrs
adc
or
call
push
and
push
and
xor
lds
loope
or
dec
mov
or
pop
fcmovnb
pop
aam
in
mov
jmp
sti
push
stos
cmp
dec
aaa
inc
ret
cwtl
iretw
add
mov
fsubrp
xchg
jle
bound
jb
sub
out
pop
idiv
call
pop
dec
adc
clc
pop
nop
int
mov
popa
cs
ss
push
loope
jne
xor
xchg
fnstsw
in
pop
sbb
mov
fisubl
es
adc
test
fmuls
sbb
mov
pop
cmp
mov
test
popf
daa
dec
fldt
mov
ljmp
dec
scas
fdecstp
jo
xchg
and
cwtl
je
mov
mov
pop
cmp
or
xchg
fstl
add
inc
mov
mov
sub
xchg
jg
mov
fildl
sub
fistpl
cmpsl
fiaddl
sti
test
hlt
mov
fucom
outsl
ja
adc
cmp
cmp
xor
push
adc
stos
pop
jae
fcoml
das
push
fcmove
pop
setp
adc
ss
jle
fisttpl
and
lods
cmp
fs
mov
mov
mov
aad
xor
filds
sbb
jo
xchg
jl
or
cmpsl
jecxz
lds
cmp
dec
add
int3
rcr
outsb
dec
inc
mov
fisttpl
inc
xchg
mov
and
or
jmp
jnp
mov
mov
dec
movsb
add
sbb
dec
jo
xor
lock
ljmp
fisttpl
xchg
fwait
adc
sub
mov
imul
or
shl
cmp
inc
xor
shll
pop
inc
adc
mov
pop
add
call
cmp
jbe
call
or
leave
add
dec
fstpt
insl
sbb
jmp
outsl
fcomi
dec
es
mov
adc
fildl
and
stc
aam
inc
jl
into
sti
and
push
int
sbb
xor
dec
jne
push
fiaddl
jmp
fisttpl
test
movsl
fistl
test
sti
aam
jle
jge
sbb
lods
movsl
lock
fistl
xchg
ret
ja
cmp
arpl
pop
shrb
add
jno
popa
loopne
clc
mov
fstpt
es
jmp
or
fs
mov
les
sbb
add
stc
xchg
mov
adc
imul
mov
fisttpl
std
or
lds
mov
mov
jp
inc
repnz
adcl
or
and
mov
push
sarb
out
fwait
push
ficoml
jmp
stos
inc
fwait
add
cmp
dec
imul
push
fildl
inc
dec
sub
aas
fdiv
push
lcall
cwtl
shll
or
push
cli
jb
dec
lret
in
push
lahf
ficompl
fdivrl
std
add
iret
xchg
fs
push
jmp
cmp
into
imul
xchg
and
pop
jno
jo
sub
sbb
xor
clc
cli
outsb
sbb
and
lahf
fldt
loope
adc
in
fildl
adc
jnp
push
mov
xor
outsl
sub
mov
inc
mov
fisttpl
jno
daa
repnz
adc
xor
ljmp
enter
adc
jecxz
xor
or
pop
push
or
xchg
lods
sbb
ret
adc
mov
pop
inc
push
dec
je
mov
cs
lods
popf
pop
lahf
les
xchg
stc
xor
stc
xor
sbb
imulb
inc
das
push
push
push
fistpl
clc
add
test
fildl
insl
ret
out
mov
stos
dec
aam
pusha
cmp
pop
mov
ret
fistpll
out
xor
jmp
fnstsw
daa
push
stos
mov
fildl
in
fcompl
xorb
xor
fldt
xchg
sbb
aaa
push
and
and
outsl
repnz
fcomps
fneni(8087
stc
stos
mov
dec
jbe
fisubrl
inc
ja
xor
xchg
rolb
push
enter
mov
sub
icebp
jae
outsb
cmpb
mov
sbb
dec
rol
jmp
outsb
mov
mov
jle
inc
pop
dec
xchg
and
icebp
orl
xchg
cmp
pop
sarl
mov
push
cmc
loopne
push
or
fistpl
repnz
aam
dec
xor
mov
xor
outsb
inc
out
pop
fcmovne
dec
int
je
fistl
pop
bound
arpl
pop
fistpl
rcl
imulb
jnp
jp
cmc
mov
lds
mov
mov
or
xor
fidivrl
or
or
cld
adc
mov
mov
inc
inc
mov
fwait
daa
test
sbbl
mov
pminub
fisttpl
mov
les
dec
imul
fisubl
not
pop
scas
js,pt
sbb
in
pop
push
out
rolb
fistl
ficoml
loopne
iret
ror
ds
scas
aaa
cmpsl
mov
std
outsb
push
lcall
mov
cmpsl
xchg
aam
fldt
add
sbb
orb
cmpsb
sarb
and
ss
xchg
xor
pop
fisubl
shl
repnz
sbb
xor
repz
int3
sub
fstpt
pop
fsts
das
pop
pop
js
into
xor
sbb
mov
andl
lret
int
add
jbe
dec
pop
pusha
push
pop
and
xor
push
in
in
addr16
jnp
fcomi
test
lahf
imulb
das
aam
lcall
xchg
pop
and
repz
push
jle
imul
aam
cmpsb
test
fstl
pop
xchg
mov
fbld
push
sbb
sahf
pop
jb
das
mov
xchg
push
mov
and
inc
push
aam
sbb
dec
xor
hlt
xchg
gs
jb
pop
fildl
shl
xorl
fisubs
data16
adc
xor
dec
push
mov
adc
out
fistpl
pop
sub
imul
into
fidivrl
rcr
add
cmpl
push
pop
rcll
sbb
push
pop
xchg
sbb
pop
rcrl
jbe
loope
mov
inc
jg
repz
or
add
in
mov
sbb
je
pop
gs
or
mov
fistl
outsb
cmpsb
sub
movq
mov
aaa
mov
push
les
std
fldl
ret
fcmovnb
out
int
dec
xchg
movsl
fisttpl
jmp
in
push
fmuls
pop
ss
sbb
push
in
inc
mov
les
popa
cmp
push
sub
sub
ret
dec
loop
leave
add
adc
dec
cmp
lcall
cmc
sbb
cld
divl
sti
jp
push
iret
sti
xchg
mov
fisttpl
xchg
loope
push
mov
sbb
insl
add
inc
enter
sahf
mov
int
pusha
mov
adc
frstor
mov
xchg
sub
lods
loope
cwtl
js
add
fistl
or
inc
jmp
ja
push
mov
or
rcrb
rorl
sahf
mov
mov
and
loopne
mov
mov
sub
sbbb
xchg
pusha
push
fildl
xor
mov
lock
loop
fadds
aaa
fisubrs
iret
xchg
inc
fcmovnb
gs
inc
scas
xorl
xchg
call
xor
adc
push
fndisi(8087
or
out
pop
gs
and
sar
insl
int3
sbb
leave
pusha
or
clc
and
loop
push
rcrb
pop
icebp
push
stc
jne
mov
sub
fistpll
ret
mov
stos
xorb
mov
test
xor
insb
pop
add
cmp
push
icebp
sub
xrelease
mov
inc
dec
fistl
pop
push
xchg
sti
inc
and
sub
fidivs
add
sbbl
or
cld
dec
fwait
cmp
fnstsw
test
jmp
push
fcmovbe
mov
jecxz
cli
lds
repnz
gs
mov
xchg
dec
mov
push
cli
mov
movsl
mov
iret
arpl
mov
sbb
test
pop
notl
loopne
cli
sahf
subb
aas
pop
xchg
in
sbb
rcll
into
mov
mov
jmp
lea
adc
xor
push
or
sub
lods
xchg
call
push
stos
lret
bound
aaa
sbb
cwtl
mov
pop
pop
out
push
push
shll
mov
adc
loopne
and
pop
push
xchg
xor
pop
dec
stos
or
je
icebp
adc
dec
repnz
int
adc
lret
adc
jle
pop
adc
in
jmp
cwtl
addr16
push
icebp
out
lods
or
aad
sti
stos
lock
outsl
shll
jb
stos
xor
enter
les
bnd
cmp
jbe
movl
dec
pushf
leave
push
push
sbb
ret
scas
or
ljmp
sbb
cmp
scas
cwtl
or
lock
arpl
stos
adc
das
pusha
fisubl
lods
je
popa
cmp
xchg
fnsave
stos
out
fs
stos
lret
pop
push
inc
jno
add
sti
xchg
in
or
in
loopne
inc
not
addb
sub
adc
mov
addl
mov
jb
repnz
adc
repz
test
mov
sti
test
stos
movsl
cmc
dec
rcll
filds
repz
fidivrl
cmp
push
cltd
int
lock
cltd
dec
xchg
lods
push
push
aam
imul
mov
cmp
stos
mov
cmp
loopne
jl
lahf
cltd
mov
outsb
push
lods
iret
mov
je
mov
aaa
push
bound
lods
or
push
mov
mov
das
leave
fucomi
fadd
in
nop
out
or
stos
xchg
fadds
test
jle
xor
test
in
mov
jmp
stos
sbb
cmpb
in
lods
in
fstps
sub
in
arpl
lahf
hlt
in
repnz
mov
xchg
stos
push
and
mov
mov
add
cwtl
or
sub
adc
or
pop
lock
pop
iret
loope
mov
stos
pop
push
fistpl
inc
rorl
fildl
jo
stc
mov
lods
mov
pushf
pop
mov
aam
xchg
xchg
mov
lret
mov
lret
adc
fisttpl
cmp
fcmovnb
outsl
sub
rorl
push
mov
jno
sti
fiaddl
cwtl
push
sbb
or
dec
ljmp
pop
loop
dec
ficompl
cmc
clc
mov
push
fstpt
dec
in
xor
pushf
fcomi
out
mov
sbb
adc
mov
mov
pop
cli
inc
jecxz
call
cwtl
xor
sbb
or
adc
push
mov
pop
unpcklps
add
imul
aam
ret
fistl
and
mov
sub
insb
cmp
loopne
push
pop
xchg
test
adc
lea
ffreep
popa
xchg
and
fnstenv
cmp
and
sbb
fistl
jmp
jbe
push
dec
ds
out
sbb
cmpsb
adc
push
jb
inc
fistl
daa
jge
movsb
pop
call
and
fisttpl
cli
in
rcr
lds
ja
sub
mov
daa
clc
cld
mov
adc
inc
pop
xchg
and
rcll
test
mov
imul
sub
in
fwait
lret
pop
dec
push
pop
and
lock
in
int
fiaddl
js
iret
out
or
inc
cmpsb
test
loopne
outsl
mov
lret
xor
iret
xchg
inc
ja
outsl
and
ret
sub
push
js
fistpl
push
push
add
xor
xor
dec
js
cmpsl
pop
fndisi(8087
movsl
sbb
sub
mov
and
pop
and
push
dec
adc
adc
cmp
pop
je
std
call
das
sub
movsl
sub
cmp
push
fisttpl
mov
cmp
inc
outsb
sbb
iret
fstpt
cmp
and
inc
jae
mov
aad
and
out
ret
call
mov
jp
xchg
or
or
inc
int
fwait
repnz
xor
inc
xor
mov
imul
push
enter
mov
jle
and
je
jle,pn
cmp
adc
lret
mov
lods
jge
pop
cmpsb
stos
add
aad
mov
add
sti
pop
xor
and
mov
scas
leave
cmpsl
jb,pt
and
fcomps
lods
or
push
or
daa
inc
jmp
or
in
or
mov
stos
inc
cmpsl
aaa
and
loop
xchg
pop
je
and
pop
add
mov
data16
mov
adc
js
lcall
fcompl
push
pop
scas
mov
inc
shr
fmul
cmpsl
mov
mov
xlat
sub
jl
leave
or
int
mov
or
cwtl
mov
rorl
sti
push
pop
and
in
jle
or
inc
filds
mulb
imul
jne
out
in
cwtl
jmp
std
push
jb
stos
popf
pop
fucomip
sub
sbb
stos
je
cmpsb
jbe
aad
sbb
cmp
pusha
in
pop
repz
xchg
mov
mov
insb
neg
inc
stos
cltd
lcall
sbb
xor
inc
xchg
lock
stos
in
sbb
sbb
stos
push
add
repnz
jg
jns
jge
mov
dec
pop
jge
adc
outsl
mov
rclb
stc
dec
lahf
lret
add
jl
or
sahf
or
stos
jns
add
int
ret
fdivp
pop
ret
rorl
or
sti
or
mov
dec
and
stc
or
loop
popa
sbb
adc
push
mov
imul
mov
das
fidivs
and
stos
iret
cmp
fwait
out
mov
leave
lock
stos
clc
adc
es
sbb
fwait
mov
jmp
cmp
loop
stos
in
arpl
pop
mov
push
stos
push
cmp
es
fldt
clc
dec
mov
mov
aam
pop
loopne
pop
sbb
lock
sti
arpl
fs
lcall
jl
nop
and
mov
sti
clc
jmp
pop
lret
into
stos
fiaddl
pop
adc
mov
and
sbb
addr16
roll
fistl
sub
dec
mov
cli
lods
sub
scas
pusha
mov
std
ljmp
pmovmskb
repnz
jnp
sbb
push
add
adc
xor
popa
xchg
scas
movl
divl
scas
fwait
jg
jle
decb
scas
cmpsl
sar
insb
sub
fsubrs
cli
pop
sbb
lcall
xor
add
js
rclb
cli
bnd
pop
lret
fstpt
test
daa
sub
leave
fistpl
inc
cmc
dec
lods
pop
mov
loopne
ljmp
cli
or
mov
push
pop
add
cwtl
pop
inc
out
cmp
scas
repnz
jp
adc
std
mov
icebp
lea
testb
inc
pop
add
xor
sub
loopne
adc
pop
fisubl
fstpl
add
push
stos
call
xchg
fwait
xor
jbe
dec
xor
fcomi
rcrb
je
push
data16
cmp
js
mov
dec
and
aad
mov
inc
cmp
fwait
in
sub
mov
sti
loop
dec
push
dec
or
add
inc
sbb
shlb
jge
mov
dec
sbb
jmp
inc
adc
test
das
repz
loopne
fucom
inc
inc
or
cmpsl
shrl
arpl
in
scas
inc
mov
aas
pextrw
scas
loopne
sub
inc
lcall
stos
mov
add
aas
fildl
shll
pop
cmp
sbb
lcall
fildl
mov
sti
out
mov
fildl
jae
mov
testl
jl
cmp
movsb
xor
mov
xchg
lds
add
xor
fistl
flds
fidivrs
fldl
mov
mov
insl
fs
fmull
fildl
jnp
jecxz
ret
lods
or
mov
mov
fistpl
out
call
stos
not
fcmovnbe
in
pop
fistps
mov
imul
fcmovnu
mov
xor
and
dec
add
call
pop
pop
adc
or
insl
inc
or
movsl
mov
mov
dec
stos
fcmovbe
faddp
and
notb
fisubrl
mov
add
or
lds
imul
testl
imul
and
pop
jge
sbb
ljmp
mov
jmp
fdivl
push
inc
xchg
push
mov
push
fildl
cmpsl
adc
sbb
xor
fstpt
pusha
sbb
and
stos
popa
leave
jmp
sahf
jno
insb
xchg
pop
jnp
mov
jp
call
js
mov
scas
jns
inc
cmp
adc
fiaddl
xchg
ret
and
fdivr
push
cmc
pop
dec
fcomip
jle
dec
pop
or
mov
push
mov
xchg
xor
imul
lret
fcmovnb
sbb
lods
inc
sub
fildl
cmpsb
insb
jno
arpl
cmp
sbb
pop
lcall
or
dec
pop
fstpt
movsb
pop
fisubl
call
cmpsl
cmp
imul
inc
and
xchg
into
fstpl
cmp
out
mov
xchg
lock
imul
jl
pop
jbe
jecxz
sub
es
lock
mov
fwait
gs
inc
xchg
or
dec
imul
sbb
sbb
add
fcmovnb
or
sahf
cmc
out
out
push
xlat
fdivrp
jle
shrb
fistl
jae
jb
pop
call
xchg
fidivrl
iret
mov
mov
into
repnz
cmp
fcmovnu
cmpsb
xlat
rcl
iret
sub
dec
enter
jp
push
lret
popa
inc
movb
inc
insl
and
pop
push
call
adc
out
sbbb
imul
fcmovnb
mov
dec
arpl
adc
fcomi
cld
mov
rorb
pushf
fimull
mov
fstpt
insl
pop
inc
pop
out
mov
fistl
loop
bound
or
leave
add
inc
or
loopne
or
add
scas
jae
sbb
sbb
ret
cltd
fcomi
add
cmpsl
xchg
lcall
pop
out
in
pop
mov
fsub
loopne
push
mov
addr16
cmc
stc
push
clc
sub
pop
or
bound
jmp
das
fildl
sub
add
add
gs
mov
jmp
and
xchg
xor
scas
add
fldl
cli
aam
jnp
jg
dec
mov
xor
pop
xor
in
sbbl
ret
cmp
dec
xor
xchg
popf
repnz
push
sbb
leave
xchg
mov
lret
sbbl
and
popf
jmp
sub
bound
dec
mov
jae
mov
call
sub
dec
sbbl
frstor
jns
add
js
pusha
push
mov
add
loop
gs
out
rcl
or
pop
add
in
fldz
sub
sbb
cld
rclb
loope
pop
dec
mov
push
mov
mov
adc
dec
xchg
xchg
je
push
fidivrl
push
adc
orb
daa
clc
and
xor
push
xor
pusha
lcall
push
xchg
fwait
adc
arpl
icebp
fnsave
push
or
mov
aas
add
orb
clc
fcmovne
xchg
lods
jno
sbb
adc
fisttpl
sub
clc
std
add
sahf
xchg
fs
xor
inc
and
fwait
int3
sbb
cmp
add
ss
test
movd
cli
sub
adc
sbb
sub
cmp
jmp
ss
daa
push
push
xchg
insb
mov
stos
xor
sub
mov
loopne
mov
mov
jp
fldl
sbb
loopne
out
loop
jae
or
and
push
je
das
call
out
mov
andl
data16
mov
pop
mov
sti
mov
outsb
ljmp
incb
sbb
pop
xlat
push
les
xor
out
pop
fwait
cmpsl
xchg
push
pop
fildl
std
loop
or
fstpt
or
leave
mov
mov
xlat
outsb
mov
movsb
fistpl
movl
call
cmp
call
and
es
sar
mov
xchg
fiaddl
and
jg
cs
mov
add
xor
aaa
dec
push
es
fildl
lock
in
out
rcrb
fildl
cmp
cld
pop
sbb
cmpsl
push
out
fistl
movsb
scas
arpl
jg
imul
push
and
mov
ret
ds
push
das
loopne
adc
mov
popf
fldt
pop
nop
add
aaa
xor
xor
fcoml
dec
mov
mov
mov
insb
xor
mov
inc
test
das
xchg
not
xchg
xor
pop
push
add
aam
dec
fstl
sbb
pushf
loopne
mov
je
int3
std
scas
add
jg
cmp
inc
fstl
adc
push
and
mov
mov
loope
testb
xchg
sti
aam
loopne
lcall
aad
jbe
hlt
jno
loop
add
testl
ret
cmpl
jge
aas
add
pop
inc
call
pop
icebp
jmp
rcrb
fisubl
add
inc
xchg
xchg
fcmovb
leave
mov
in
pop
sbb
xor
jmp
pop
add
add
sbb
call
sbb
adc
aam
pop
dec
lea
fcmovnu
insb
sub
xchg
test
inc
fildl
xchg
ret
out
enter
dec
sbb
jne
outsl
in
cmp
loopne
fwait
arpl
fldt
lret
mov
lock
pop
out
out
pop
ja
call
cmp
fistl
sub
movsl
mov
push
cmpsb
fstpt
jp
pusha
adc
loop
xchg
ret
push
insb
loopne
fst
pop
lcallw
push
es
mov
mov
jns
jne
cs
enter
fwait
imul
fidivl
cltd
scas
int3
fildl
pop
push
inc
dec
scas
cmp
fbld
out
cld
fimuls
push
dec
cmpl
mov
dec
repz
mov
push
pop
movsb
xchg
xlat
jge
fnstcw
in
lahf
mov
sahf
push
sbb
sti
loop
in
jne
fistpl
shrl
test
fldt
mov
adc
mov
adc
jne
fdivr
cwtl
fldt
jo
cmp
mov
insl
cli
ja
add
bound
add
lock
in
cmp
lods
testb
cld
lcall
int3
sub
pop
hlt
fildl
jae
rorl
xor
adc
cmpsb
pop
in
ret
inc
inc
sbb
in
or
add
mov
and
jnp
jle
call
repz
dec
ja
push
shll
jb
outsl
mov
pusha
repnz
mov
movl
sti
in
icebp
mov
xor
in
scas
pop
repnz
stos
sbb
fistpll
cmpb
add
aad
xlat
add
fbstp
lods
lea
xchg
lock
dec
xchg
divb
mov
stos
mov
cli
mov
pop
mov
cmc
loope
add
fs
dec
jae
fisttps
sbb
push
stos
xchg
fprem
hlt
jno
xchg
lods
xchg
add
insl
notb
mov
sti
stos
dec
mov
cmp
xchg
call
idivl
fldt
ficoml
mov
test
and
lock
sub
fstpt
popa
jmp
loop
shl
cmpsl
dec
fildl
outsl
ds
cltd
dec
mov
dec
mov
aaa
stos
sahf
jnp
aas
repz
xchg
mov
dec
mov
inc
adc
xchg
and
add
mov
push
lods
js
lcall
jle
jmp
add
lahf
out
rcll
ret
imul
pop
sub
jge
or
adc
sarb
mov
cli
fninit
mov
jbe
push
mov
js
lock
cmp
cmp
mov
neg
add
popa
mov
jmp
xor
sbb
xchg
ja
push
jae
mov
dec
or
add
mov
sti
loope
push
push
mov
clc
fcmovnbe
dec
imul
mov
xor
dec
addr16
sbb
int
inc
subl
neg
cli
xor
mov
lods
pusha
cs
bound
stos
dec
jb
data16
movsb
aaa
es
popa
dec
push
xlat
loopne
stos
cmp
xor
push
sbb
jne
pop
xchg
cmp
clc
xor
lds
out
rcrb
lock
sbb
push
mov
push
sub
inc
or
cs
clc
sbb
dec
xchg
rorl
gs
cmc
div
push
loopne
fistpl
sbb
mov
xchg
nop
mov
test
fldt
pshufw
or
shl
inc
mov
fwait
dec
cmp
and
mov
es
loope
clc
sub
cwtl
mov
aaa
js
jle
mov
xchg
mov
fisttps
popa
ficompl
test
popf
lahf
cmpl
pop
xor
pop
dec
add
inc
ss
jp
jge
lcall
imul
sbb
dec
sub
scas
aad
jb
andb
jo
push
xor
scas
pop
sarb
fstpl
out
push
jnp
arpl
inc
xlat
mov
fistl
mov
adc
faddl
bnd
mov
scas
mov
cs
in
pop
ss
fdivrl
rcrb
fstpt
cld
push
adc
and
dec
imul
xchg
sbb
adc
add
std
jp
mov
in
das
inc
loope
add
jmp
fiaddl
xchg
hlt
adc
leave
sub
popf
stc
xchg
out
mov
jne
fcmove
orl
inc
popa
outsb
jp
ds
out
add
std
fistpl
in
push
imul
loop
lock
sbb
pop
dec
in
push
sbb
or
inc
ja
fistpl
adc
frstor
test
mov
add
test
lock
fisubl
rorb
mov
shl
pop
fisubrs
out
pop
and
pop
cmp
mov
sbb
aad
adc
dec
fcmovnb
loope
sbb
jmp
lahf
mov
pop
xchg
xchg
sbb
xor
adc
sbb
inc
push
mov
loopne
xchg
test
push
fildl
and
stos
fcmovnbe
fcoml
gs
sub
ret
inc
xor
pop
lcall
aad
leave
jecxz
addr16
push
fstpt
mov
mov
imul
call
in
pop
loope
sbb
jmp
pop
ljmp
fcmovnb
pop
inc
sub
mov
cmp
cltd
inc
cmpsb
mov
cld
and
mov
fildl
xlat
push
xchg
addb
fstpt
and
cmp
xchg
mov
push
jp
adc
mov
in
cltd
test
push
add
imull
cmpsl
mov
fcoms
nop
push
mov
repz
dec
or
push
fistl
lret
mov
fildl
outsb
loope
arpl
lahf
pop
ficompl
fucomi
jns
jl
pop
ret
fninit
loop
sub
je
pop
xor
pop
dec
addr16
subl
jne
orb
fists
in
aam
pop
in
insl
push
mov
cltd
jnp
mov
sarl
sbb
xchg
js
lds
lock
icebp
add
ss
mov
xchg
pop
adc
jns
push
dec
int
adc
and
insl
std
movsb
fildll
imul
mov
imul
pop
lock
daa
sbb
mov
clc
in
sbb
bound
loope
fucomi
pop
sub
fcmovnbe
add
movsb
fadd
add
imulb
mov
or
mov
mov
adc
xchg
mov
mov
dec
dec
fistl
ficomps
xor
mov
in
sbb
cmp
fistl
xor
mov
mov
adc
ror
lret
xor
or
pop
jp
mov
mov
cmp
fisubrs
std
sti
fstpt
mov
into
fistl
pop
lods
ret
add
mov
outsl
pop
sub
fucomip
shlb
xor
cmp
fcmovu
xchg
dec
add
jnp
or
sub
lcall
jl
scas
fbstp
scas
lret
push
pop
pop
mov
popa
sub
fiaddl
insl
push
lock
dec
lods
ror
xchg
push
loopne
mov
imul
pushf
jnp
pop
xor
ljmp
push
dec
dec
arpl
jecxz
jle
xchg
xlat
movsb
loope
test
mov
cwtl
imul
fstpt
lea
mov
aam
adc
scas
mov
pop
add
push
sub
xor
aam
rcr
mov
jmp
adc
add
outsb
jb
scas
push
xchg
ljmp
or
lods
push
and
lahf
sub
and
cmp
sti
cli
pop
adc
cmpsb
fildl
movsl
nop
dec
mov
mov
push
lea
xchg
adc
mov
dec
in
subb
jp,pt
ja
fisttpl
sti
push
pushf
enter
push
ljmp
add
mov
adc
stos
iret
sbb
fnstsw
jne
add
sarb
fistpl
push
leave
call
test
xchg
std
sub
rol
out
iret
mov
stos
pop
in
fcomp
push
cmp
push
out
and
inc
fistpl
push
mov
loopne
jl
mov
mov
adc
push
sub
dec
mov
jg
dec
loopne
pushf
or
fisubrl
dec
fstpt
jbe
outsb
adc
ret
clc
insl
cmp
push
cmc
lea
push
in
pop
pop
out
pushf
mov
fistpl
ja
mov
les
aam
sbb
mov
imul
sub
lahf
xor
dec
adc
negl
shl
or
mov
fists
and
mov
ds
ja
xor
jo
pusha
or
fwait
arpl
fistpl
add
fistl
in
jo
cwtl
fstpt
jle
fs
pop
int
fwait
xor
xlat
mov
iret
mov
in
insl
fbld
nop
xor
xchg
jmp
es
and
fnclex
inc
adc
fistl
push
sbb
add
jno
xchg
fistpl
mov
mov
shrl
xchg
ret
pop
cmp
jne
xor
shrl
aaa
fistpll
jge
pop
pop
fwait
sub
mov
add
pushf
or
xchg
xchg
cmp
in
shrl
mov
in
jl
test
roll
xchg
lahf
jne
push
out
push
cmp
sub
inc
in
leave
xchg
jnp
cmc
inc
xchg
in
inc
aaa
insb
lret
jns
cmp
ror
movsb
fadd
fldt
jbe
lret
cmpsb
clc
and
jge
mov
int
cwtl
in
sub
stc
push
xchg
pop
mov
lret
mov
fstpt
push
shlb
jecxz
lods
jp
ror
sub
push
je
popf
inc
icebp
or
jbe
push
insl
push
ficompl
rorl
popa
lahf
ljmp
xlat
stos
xchg
es
mov
ficomps
dec
jno
cmp
ret
mov
jbe
mov
in
rcrb
sub
push
lcall
outsb
adc
and
inc
cmp
bound
les
rclb
les
shl
aam
add
mov
lcall
jb
fs
stos
rorb
stos
ret
jbe
push
aam
ljmp
lods
jo
ss
es
fmull
jle
adc
test
addr16
cmpl
incl
mov
or
cmp
adc
mov
ljmp
rorb
jp
xchg
add
xchg
dec
ret
jo
lds
jmp
adc
xchg
cld
fdivl
and
mov
pop
aam
iret
sbb
add
lock
mov
pop
xchg
mov
lds
xor
mov
sti
lods
mov
cmp
jnp
or
js
push
aas
jecxz
ljmp
fwait
dec
xor
mov
and
adc
scas
fucom
and
loop
cwtl
cmp
adc
mov
rcr
in
les
xor
pop
pop
out
clc
imull
dec
pop
mov
rorl
stos
lcall
sub
add
or
jnp
dec
or
add
sub
push
push
pop
data16
clc
cvtdq2ps
pop
cmp
ljmp
adc
lods
and
lcall
mov
int
aas
aam
rcl
scas
add
sarl
js
sub
call
mov
lock
pop
push
stos
int
out
sub
jg
jbe
outsl
out
lods
adc
adc
xchg
mov
test
pop
ja
addl
inc
cmpsb
sub
mov
aad
pushf
fistpll
mov
xlat
and
jp
cs
in
pop
data16
cld
xchg
cmp
ret
inc
std
insl
aad
in
pop
icebp
in
out
mov
pop
iret
push
ljmp
bound
cmp
stos
add
adcl
les
mov
mov
jle
in
cli
stos
pop
or
jo
push
cmc
ljmp
or
in
inc
xorl
lods
out
popa
mov
fidivs
xchg
or
xor
aas
or
in
xchg
cmpsb
lock
repnz
xchg
mov
xchg
inc
test
cmpsb
lcall
clc
popf
pop
les
inc
sti
adc
mov
aas
mov
dec
mov
sti
jg
jecxz
insl
hlt
in
add
pop
and
push
push
imul
dec
aad
mov
dec
adc
popf
pop
cli
mov
aam
mov
jmp
cmp
cli
and
mov
cltd
test
mov
addr16
arpl
jnp
imul
fucomp
mov
mov
mov
lret
mov
repz
xor
pushf
rcl
push
add
stc
in
push
call
sub
loopne
mull
insl
call
stos
jnp
enter
mov
or
jae
test
xor
test
adc
mov
cmp
sub
xchg
adcl
or
test
add
icebp
and
mov
shlb
data16
mov
cli
cmp
sti
in
lret
movsl
mov
mov
lods
andl
outsl
sti
cmp
jne
fisubrs
jl
out
and
jecxz
fstpt
prefetch
or
sub
mov
into
and
clc
fldl
imul
cmpsl
aam
dec
scas
ss
mov
insl
jg
xor
les
lods
mov
xchg
or
xchg
pop
fcoms
loop
xchg
push
sbb
stos
sub
int
call
and
push
fsubrl
add
imul
movsl
push
push
cmc
outsl
mov
iret
shlb
mov
sub
lahf
inc
sub
xor
xchg
lods
xchg
out
stos
test
shl
xor
adc
inc
shrl
mov
or
fimull
shll
mov
xchg
cwtl
sbb
xchg
or
sbb
mov
pushf
cmpsb
jge
ret
popa
sbb
and
ljmp
cltd
ljmp
inc
int
cmp
movsl
sub
jmp
xor
lods
pop
cmp
fwait
jbe
aaa
xor
push
imul
or
je
and
icebp
cwtl
jg
jbe
dec
mov
aas
adcl
or
mov
out
lock
notl
shll
sub
cmp
pop
add
xchg
das
jge
inc
and
lcall
sti
das
inc
adc
pop
in
lods
add
shll
dec
out
shrl
add
ljmp
inc
push
xor
xor
add
xor
sub
push
mov
fs
fwait
jo
mov
fildl
xor
fcmovne
add
push
outsb
fldt
in
lods
fistl
push
rolb
cmpsl
mov
xor
push
sbb
add
out
and
fcmovnb
adc
into
cmp
adc
pop
pop
sti
mov
je
sub
imul
fstl
ds
and
mov
dec
inc
imul
fstpt
mov
je
pop
rol
inc
mov
cmp
loopne
inc
pop
adc
and
adc
loopne
incl
je
loop
in
fisttpl
push
rorl
loope
mov
xor
insl
xor
lds
rcr
cmc
lea
add
fildl
in
shll
aam
call
mov
add
push
pusha
out
imul
mov
enter
call
add
or
aam
outsb
jl
ret
fildl
rcrl
jb
icebp
pop
fistl
mov
cmp
fcomi
mov
test
stos
mov
sbb
pop
aaa
jge
hlt
pop
repz
jne
mov
fsts
cmp
into
jnp
in
ret
leave
fistl
in
xchg
or
in
push
in
jbe
mov
mov
cmp
loope
xchg
push
pop
xor
lcall
mov
fucomi
add
shll
inc
lds
sahf
pop
jnp
jp
cmpsl
xor
xlat
add
adc
fidivl
mov
nop
lret
and
cld
in
dec
fndisi(8087
add
push
fldt
cs
or
cmp
mov
adc
xlat
lods
loope
test
jecxz
jbe
adc
dec
sub
jae
cltd
insl
shrl
and
push
xor
xchg
sub
cld
and
jl
daa
lret
imul
push
loopne
inc
add
cmp
stc
fbstp
push
pop
std
fnstsw
out
push
popa
cmc
mov
xlat
repnz
jbe
cmc
jmp
pop
fisttpl
arpl
mov
ja
sbb
jae
fisttpl
hlt
push
bound
pop
scas
loopne
mov
data16
mov
and
sub
jb
ja
jl
fildl
xor
lea
fistl
out
repz
fwait
mov
jnp
sar
mov
cltd
dec
std
sub
mov
sbb
clc
cwtl
arpl
sub
push
clc
insl
iret
mov
mov
pop
xor
jle
xor
in
mov
push
inc
add
aam
xchg
mov
aad
mov
sub
insb
out
pop
mov
jle
movsl
add
daa
mov
dec
call
std
clc
fcmovne
lret
fbld
sbb
fcmovne
ret
or
sbb
xchg
enter
and
pop
mov
jne
sub
mov
pop
adc
rcr
mov
sbb
lods
fisttpll
outsl
pusha
push
xor
sahf
test
nop
or
neg
adc
aas
inc
fistpl
insl
rcr
pushf
push
push
jbe
add
shr
sbb
fisttpl
loopne
fstpt
mov
lds
out
mov
movsb
es
pop
pop
sub
mov
leave
mov
xchg
inc
fistpl
push
inc
sub
test
movsl
cli
xchg
pushf
xor
xchg
and
pop
dec
cmpsl
jp
fiaddl
lea
jmp
ss
push
scas
push
fisttpl
cmpsb
mov
pop
daa
pop
inc
pop
fcmovnb
pop
inc
adc
jg
inc
mov
add
mov
mov
orl
insl
push
xor
jbe
ds
xchg
cmpsl
xchg
fisttpl
adc
push
dec
aad
ja
sahf
stc
inc
fists
pop
lods
mov
dec
into
mov
xchg
addr16
dec
add
stos
shlb
mov
mov
mov
mov
lret
daa
inc
or
fsub
xchg
lcall
jnp
fildl
pusha
fisubrl
mov
and
fisttpl
int
int3
cli
or
fldt
js
fcmovnu
jl
jno
int
hlt
loopne
sbb
cmp
in
icebp
push
dec
or
ret
fstl
loopne
jns
lock
scas
das
rcr
and
cmpsb
fisubs
inc
mov
dec
fisttps
add
cld
lods
adc
sub
fwait
push
fistl
ljmp
push
aam
xor
jl
cmpsb
incb
xchg
mov
jmp
lahf
sti
or
call
dec
add
leave
jno
push
dec
test
int
push
dec
fimull
pop
repnz
mov
mov
fists
jnp
pop
xchg
addr16
fisttpl
fnstenv
or
cmc
mov
inc
popa
outsb
sti
fstpt
add
xor
add
lock
push
pop
sbb
inc
fcmovne
lods
test
clc
std
rcr
jecxz
mov
pop
dec
push
loop
test
in
fiaddl
scas
shr
fildl
leave
flds
mov
xchg
jmp
test
call
stos
data16
ljmp
or
mov
fistl
and
jnp
jp
call
sbb
test
pusha
fildl
dec
in
fistpl
xchg
jle
fisttpl
not
dec
add
push
bound
rol
cmp
dec
cmpsl
in
lret
dec
fmull
ja
fisttpl
nop
mov
mov
sbb
fbld
mov
pop
fisttpl
fwait
mov
mov
pushl
push
push
jo
fneni(8087
shll
fdiv
jmp
mov
iret
loop
inc
pop
and
mov
or
fildl
std
sub
out
fcmovnb
pusha
xor
rolb
pop
jb
into
rcr
xor
jge
mov
add
in
or
out
scas
mov
lcall
fucomi
aam
imul
xchg
loop
sub
pop
mov
orl
loopne
in
mov
mov
add
jb
mov
inc
and
fwait
adc
fistpl
std
mov
fcmovnb
hlt
inc
inc
and
test
rol
pop
mov
fucomi
push
adc
ja
in
jge
xchg
test
jb
cmp
push
jne
adc
clc
jns
or
inc
push
ficompl
lds
and
ja
call
pop
adc
jo
xchg
pop
in
pushf
ds
mov
mov
or
sbb
jg
jae
dec
mov
mov
jnp
pop
notb
out
lahf
jl
loopne
cmp
sti
add
inc
testl
stc
int
xor
addb
push
into
int
mov
push
cmp
pushf
or
stc
jae
pop
call
rcrb
es
jo
aad
std
or
push
push
dec
in
fstl
lods
sti
and
mov
sub
in
fistpl
and
out
mov
rcl
pop
xchg
fistpl
lea
test
fnclex
dec
iret
xor
fisttpl
xchg
repnz
rol
arpl
jp
lcall
push
in
pop
ror
mov
pop
push
ficompl
sub
sub
mov
test
push
insb
call
adc
and
in
lods
mov
jmp
fwait
fcmovu
and
in
lods
leave
fildl
mov
add
pop
lahf
sbb
test
leave
sbb
jecxz
jb
pop
movsl
pop
cmp
in
or
movsb
adc
xor
pop
sub
xor
stos
lret
testb
ret
push
and
ljmp
call
mov
dec
sbb
shl
xchg
pop
xchg
mov
mov
movsl
insb
xlat
pop
loop
aas
pop
push
fldt
pop
hlt
inc
ret
inc
in
sbb
roll
mov
movsb
sbb
fstpt
or
rclb
lea
fisubrl
xor
push
jno
test
fidivl
addl
or
fmul
aam
jnp
dec
xor
mov
dec
inc
mov
loopne
sbb
xchg
dec
fistpl
jl
movsb
and
or
data16
mov
push
jno
loopne
inc
sbb
sub
jns
pushl
repnz
stc
les
mov
js
call
mov
enter
jmp
fwait
in
cmp
mul
js
dec
adc
lds
fadd
jle
repnz
in
addb
in
pop
lret
and
mov
fidivrl
hlt
pop
fbstp
jb
push
jecxz
cmc
fcmovbe
mov
cli
mov
push
out
pop
pop
stos
lock
sbb
bound
or
ss
lods
adc
icebp
insb
inc
mov
pop
sub
xchg
stos
fcomi
xchg
in
push
icebp
adc
xchg
call
adc
sahf
loopne
push
mov
fimull
stos
pusha
pushf
js
icebp
imul
es
fidivrs
in
scas
dec
xchg
or
rcrl
mov
jmp
leave
mov
jo
xlat
mov
shll
cli
cmpsb
das
inc
pop
int3
loop
aas
mov
mov
sbb
jbe
mov
xchg
negb
fildll
mov
push
push
cld
mov
lcall
jmp
fldl
sub
push
stos
cli
mov
push
mov
stos
test
leave
cmp
shr
in
mov
or
xlat
and
repnz
push
xor
xchg
or
jg
mov
ljmp
in
add
lcall
jp
in
das
xchg
lea
icebp
adc
mov
iret
jmp
mov
lcall
lock
es
cmp
sbb
pushf
shrl
mov
mov
push
je
jl
push
mov
cld
loop
mov
in
cli
call
in
popa
movsb
ljmp
dec
xor
lahf
cmpsl
call
mov
or
cmp
jmp
lret
shlb
int3
adc
es
les
push
fildl
push
xor
test
in
clc
sub
sbb
mov
repz
cmp
cmc
sub
ret
push
add
fcmovb
sub
in
jmp
rep
loop
push
daa
mov
fildl
in
rcrl
loopne
sbb
pop
out
dec
in
xchg
fcmovne
iret
loopne
imul
int3
dec
stos
das
stc
xor
in
cmp
xor
call
lret
jnp
aaa
mov
mov
jo
mov
jmp
pusha
test
dec
rcrb
bound
in
scas
shll
iret
sbb
jl
pop
cmpsl
sbb
stos
repnz
push
clc
out
and
arpl
es
fcoml
mov
lods
pop
mov
cs
insl
push
mov
jo
jp
push
and
and
inc
jmp
lahf
movsb
test
or
jnp
jg
pop
fiaddl
cmp
ret
jmp
and
and
outsb
jne
ljmp
jecxz
xor
insb
idivl
fldz
and
mov
mov
sub
icebp
inc
aaa
and
adc
lret
mov
lds
test
ret
xor
cmp
outsb
pusha
in
fwait
dec
pop
mov
ss
cmp
mov
jbe
shll
pushf
mov
mov
add
sub
mov
and
push
and
cwtl
int
sub
cmp
pop
data16
into
adc
fisttpl
imul
es
sbb
pop
dec
test
sbb
fildl
shrl
push
out
xchg
aas
scas
gs
mov
dec
ret
popa
and
in
fisttpl
fidivs
adc
mov
dec
inc
fcmovnu
sbb
or
cmp
cmpsb
lods
bound
iret
loopne
pop
lret
mov
aaa
cmovp
fcmove
jae
icebp
cmp
jp
out
mov
or
add
and
fcmovnbe
inc
dec
inc
or
jne
inc
fnstcw
loope
pop
enter
push
fwait
mov
lea
mov
cmp
and
dec
sbb
jmp
xchg
sti
mov
jg
icebp
fstpt
pop
sub
pop
inc
xchg
push
fildl
xchg
test
scas
je
push
xor
insb
mov
sbb
inc
mov
fisttpl
adc
fisttpl
jbe
arpl
jo
inc
daa
js
test
ficomps
pop
dec
jmp
sbb
add
aam
sub
je
fiaddl
stos
iret
or
fisttpl
fbstp
ret
add
adc
lret
pop
fldt
inc
mov
and
and
addl
cs
ficompl
sub
ljmp
jno
fwait
fwait
push
pop
xlat
decb
mov
in
lcall
hlt
add
mov
add
lods
dec
leavew
mov
cmp
js
fcoml
mov
add
lret
cmp
aas
dec
arpl
call
add
push
fsubrl
mov
mov
fbld
cmpsb
mov
mov
inc
movsb
and
loop
pop
stos
pop
popa
mov
repnz
out
push
incl
cmc
ja
out
stc
movsl
test
add
jp
push
push
push
mov
pop
push
sub
aam
or
repnz
pushf
imull
xchg
xchg
bound
rolb
mov
stos
xor
in
jns
pop
leave
leave
std
xor
pop
jnp
movl
pop
jmp
xchg
add
jno
inc
gs
cld
jb
jg
loope
mov
in
loop
mov
add
sar
outsl
stos
inc
dec
loop
leave
lods
pop
lds
iret
push
push
repz
fcmovb
sub
hlt
popa
sahf
notl
clc
and
sub
sti
adc
sbb
stos
jae
into
sub
xchg
in
adc
mov
mov
xor
mov
ret
lods
dec
pop
mov
iret
adc
inc
sahf
sbb
inc
fwait
leave
push
xor
in
mov
int3
xor
popf
or
jg
flds
lahf
push
lahf
xlat
xchg
lods
je
rorb
stos
or
cmc
add
fwait
int3
imul
ror
fisubl
cmpsl
fadd
cwtl
shlb
jae
or
sbb
loope
bound
roll
test
lret
jo
pop
sbbb
push
sub
lcall
rorb
mov
pusha
subb
jmp
jbe
adc
inc
dec
xchg
push
mov
push
test
leave
test
mov
or
lahf
loopne
jno
pop
mov
das
xchg
xchg
adc
cmp
xorb
cs
sbb
int
inc
dec
jge
mov
push
pop
popa
lcall
cmp
outsl
insb
mov
cmpsb
lcall
mov
dec
roll
ljmp
jne
and
cmp
cmp
push
adc
xlat
mov
push
repz
insb
mov
pushf
repz
adc
dec
loop
fisubrs
das
mov
outsb
dec
lcall
fidivrs
sti
imul
xchg
cltd
cmp
loopne
xchg
rcrb
sub
push
int3
cwtl
jecxz
and
sbb
push
movsl
paddb
fistl
inc
fistpl
outsb
dec
int
lcall
mov
bound
jg
rcll
sbb
mov
inc
or
out
mov
fucomi
mov
ljmp
xchg
push
xor
dec
lds
jb
cmp
out
lea
push
sbbl
pusha
jg
jns
mov
mov
ss
rcrb
ret
dec
in
push
cli
out
mov
mov
fldt
jge
loopne
mov
jmp
int
fstpt
pop
std
out
addr16
ja
mov
mov
jae
sbb
les
xor
adc
xchg
push
test
cmpsl
popl
jp
iret
adc
in
fcmovne
in
push
int3
hlt
ss
fildl
lea
add
adc
xor
fsubrs
aaa
je
sub
or
fldl
int3
repnz
stos
push
lret
mov
adcl
pop
sub
xor
jbe
xchg
adc
clc
popf
mov
data16
lahf
fiaddl
ret
fistl
loope
rorl
dec
imul
xor
jmp
add
fcmovnb
es
movl
mov
add
inc
fistpl
pop
sbb
adc
lods
jle
fcmovnb
orb
fcmovnu
fs
lret
iret
sti
xlat
push
sbb
mov
push
mov
fstpt
jecxz
add
enter
mov
jle
fidivrs
int3
sbb
adc
inc
mov
dec
outsb
mov
sahf
into
mov
popf
test
jns
in
out
dec
add
test
jecxz
andb
arpl
dec
popa
xchg
mov
int
in
mov
fldt
das
push
xchg
pushf
add
mov
mov
test
sbb
push
stos
mov
and
orb
stos
xor
lock
ret
sbb
xchg
movsb
cmp
mov
adc
cs
outsb
fisttpl
aam
jae
aas
adc
pop
clc
xor
cmp
out
inc
inc
das
jmp
lahf
cltd
cs
sub
mov
test
add
in
fildl
adc
mov
mov
fcmovu
out
push
push
fs
sbb
dec
jge
push
in
cmp
and
xlat
mov
gs
fstpl
test
mov
popa
cwtl
jno
enter
sahf
push
jnp
adc
mov
and
jbe
xchg
scas
jecxz
mov
xor
loopne
xchg
jb,pt
mov
fstpt
sbb
insb
pop
gs
jp
stos
xor
cmc
sub
jnp
push
cmp
lcall
push
pop
mov
ror
filds
jbe
xchg
mov
lahf
push
cmc
mov
neg
add
xor
roll
orl
mov
mov
add
fisttpl
dec
push
stos
mov
mov
pop
sub
mov
fisttpl
push
test
mov
outsb
sub
std
dec
add
xchg
in
popl
mov
lret
aas
fisttpl
stc
mov
fisttpl
adc
jo
aas
mov
repnz
imull
pop
loopne
xor
pop
fwait
loop
sbb
cmc
pop
add
ds
call
fistpll
pushf
push
jnp
fcmovnbe
movsl
jns
ret
sarl
daa
arpl
call
in
and
inc
xor
push
jno
outsb
mov
scas
fldt
insl
push
and
cmp
inc
fstpt
sub
and
loopne
cltd
mov
mov
mov
fstpt
pop
mov
lret
push
out
fisttpll
shrl
imul
popa
push
push
jg
fsubrl
cli
push
sbb
mov
pop
dec
push
jnp
cltd
rcrb
mov
fidivrl
fistl
roll
frstor
cwtl
mov
mov
jecxz
xchg
xchg
sub
hlt
es
sbb
jne
nop
lret
fistl
out
ljmp
push
cmp
fistl
xchg
pop
aaa
insb
test
inc
dec
mov
fwait
lea
addl
dec
in
lret
mov
js
xchg
shll
clc
inc
or
out
and
lcall
test
mov
push
jmp
dec
cli
ss
sub
push
fistpl
enter
push
jle
fstpt
inc
xor
jp
mov
xchg
dec
and
pop
loopne
cli
sbb
repnz
push
xchg
into
test
lds
jge
fistpll
adc
inc
stos
aaa
clc
pop
or
fcmovu
rorl
push
notb
loopne
mov
ss
fwait
jb
iret
stos
jl
fstpl
call
mov
mov
in
repnz
lock
test
ds
mov
rcl
daa
pop
push
fists
jae
and
loop
sbb
mov
xlat
jl
ret
pop
xchg
cmp
xchg
pop
inc
das
adc
cld
pushf
movsb
jbe
fstpt
push
and
dec
lahf
int3
sbb
sbb
je
jae
and
out
int
fcmovu
jb
dec
cld
push
dec
jl
faddl
test
mov
lea
xchg
add
out
jmp
push
xlat
loopne
cmc
cld
test
jmp
mov
mov
or
faddl
hlt
xor
push
pop
ret
mov
ret
xchg
cmp
and
int3
ja
jmp
push
ret
outsl
push
loopne
in
cmpsl
fsubrl
scas
push
aam
mov
imul
pop
mov
xor
scas
out
aam
sub
ljmp
bound
jnp
sbb
dec
xor
cmp
jno
mov
in
je
push
or
pop
call
lods
mov
xor
mov
jp
int
xor
insb
push
xor
fstpt
int3
rcr
shr
or
loope
negb
jnp
ficompl
fildll
adc
lcall
in
jge
js
cli
xacquire
push
mov
movsb
push
ja
fisttpl
mov
ret
fwait
add
push
sub
out
push
mov
in
push
jno
and
hlt
mov
cmp
ret
xchg
or
add
lds
cmp
adc
ret
fildl
mov
sbb
pushf
jmp
push
mov
dec
or
inc
les
pop
fistl
in
rorl
test
insl
fisttpl
inc
and
xchg
neg
adc
fistl
inc
or
frstor
sbb
dec
leave
dec
xchg
sbb
repz
rclb
sbb
fwait
cmp
dec
enter
xor
fildl
scas
adc
int
imul
mov
jmp
push
test
or
adc
mov
xchg
loop
mov
mov
push
jecxz
add
scas
mov
lss
mov
push
aas
fcomps
sub
sbb
rcll
and
and
stc
in
and
sahf
in
fcmovnbe
push
pusha
inc
fs
dec
inc
add
gs
std
into
popa
lcall
jmp
jb
adc
inc
adc
cmpsl
fcmove
mov
dec
sub
mov
sahf
jne
and
cld
out
ljmp
fsubrl
inc
xchg
add
jno
fistps
sub
jnp
fcmovu
push
pand
out
ret
pop
shlb
xchg
fcmovu
xlat
cli
les
push
xor
insb
add
xchg
sahf
or
into
hlt
fildl
xor
jle
push
pop
jne
cli
sahf
or
fisttpl
jns
loop
ret
pop
cmp
imul
mov
or
into
fs
fdivs
pop
jg
dec
sarl
in
and
addr16
adc
frstor
mov
movsl
push
sbb
mov
dec
xor
js
repnz
mov
call
mov
shr
mov
sbb
or
xor
out
mov
xchg
xor
cmp
mov
fiaddl
push
jns
xor
cli
push
mov
add
adc
mov
and
xchg
fistl
add
stos
leave
cmp
add
push
push
dec
mov
mov
jl
pop
pop
cmp
cmp
arpl
fwait
add
mov
push
and
data16
sbb
push
jns
mov
int
aam
ficompl
pop
inc
fldt
and
jge
inc
xor
ficoml
jns
prefetch
add
pop
push
aad
mov
jbe
fistpl
test
outsb
adc
and
pop
decl
adc
ficompl
ja
inc
int
dec
cmp
fiaddl
imul
xchg
dec
shr
fildl
or
sbb
mov
fisttps
loopne
mov
imul
js
pop
arpl
pushf
loopne
stos
and
adc
testb
aad
sbb
das
inc
adc
pop
lahf
dec
fldt
mov
in
movsl
nop
sbb
fistps
jge
lahf
sarl
fistpl
loope
adc
pop
pop
push
in
sbb
iret
jns
lock
mov
inc
xchg
pop
and
push
and
mov
add
push
outsb
fldt
test
fstpt
push
or
enter
mov
imul
add
or
pop
inc
scas
loope
cmpsl
mov
sub
pusha
sub
data16
mov
sbb
add
ja
fcmovb
cltd
mov
stc
cmp
ret
and
cmpl
jg
inc
pop
movl
loopne
repz
and
fistl
adc
pop
sbb
push
sub
dec
call
std
lcall
xchg
test
cmp
clc
mov
ret
out
adc
pop
stos
ror
fbld
cmp
inc
frstor
in
mov
cmp
lock
and
fwait
lret
and
mov
add
mov
fistl
lods
je
sti
lcall
pop
add
dec
imul
inc
daa
aas
pop
fildl
jno
push
je
sti
or
mov
in
fstpt
movsb
cwtl
pop
clc
jmp
pop
mov
ljmp
pusha
test
fistl
outsb
jnp
fldt
insl
loopne
inc
mov
inc
sub
or
rorb
mov
icebp
fstpl
fists
insb
xlat
cli
push
loope
fnsave
sub
cs
aam
fcmovne
sub
jno
add
imul
xchg
add
dec
movsb
fisttpl
sub
jne
mov
fdivrs
cmp
imul
sti
ret
enter
pop
mov
sbb
mov
out
lret
lods
pop
inc
mov
fnsave
andl
lret
sbb
adc
jnp
cmp
lahf
popa
fistl
movsl
sar
jg
add
inc
test
sbb
into
movl
xor
push
and
fisttps
insb
sbb
add
add
lret
jp
dec
scas
fstpt
and
dec
push
sbb
aas
mov
push
sub
scas
fisttpl
cmp
mov
sbb
stos
fisttps
out
inc
jbe
ss
fcomi
inc
fcom
fdivl
adc
notl
rcrl
and
mov
leave
push
xor
out
cmpsb
scas
insl
cmp
loopne
fcompl
push
fisubrl
fcmovnbe
pop
insb
iret
movsl
ss
in
mov
jb
xor
jne
dec
fsubrs
mov
push
mov
pop
fucomi
and
inc
out
mov
sarb
push
xchg
cltd
pop
gs
fcompl
into
sahf
incl
jne
mov
mov
fistpl
fisttpll
stos
pop
push
pop
aaa
dec
sbb
adc
cmp
mov
lods
incb
sbb
cmp
fistpl
and
cmp
mov
fisttpll
data16
popf
sub
or
dec
push
fsubrs
dec
xor
lock
cwtl
int3
mov
jmp
mov
cmpsb
push
push
xor
add
dec
aam
jg
in
fisubrs
pop
dec
pop
inc
int3
aaa
lcall
mov
cli
xchg
das
ljmp
sahf
mov
loopne
cmp
call
push
push
shlb
dec
in
call
push
fistl
xchg
push
sarl
push
jmp
and
dec
or
push
cmp
repnz
jmp
lea
ret
jbe
xor
cmp
movsb
scas
or
shrl
fistpl
je
aas
pop
or
sub
pop
jae
das
jbe
rol
movsb
shlb
mov
mov
orb
call
sarb
inc
adc
or
xchg
cmp
sarl
fildl
jmp
push
fcmovne
pop
fwait
nop
dec
xorl
sub
into
pop
popa
or
mov
das
test
xor
int3
mov
jae
or
push
and
das
sbb
and
push
pop
or
cmp
loop
mov
mov
fcmovnbe
ja
pushf
int3
pop
dec
paddusw
pop
jnp
idivb
cs
test
fidivrl
inc
scas
cld
add
outsb
rcr
sbbb
lahf
cmp
fildl
mov
inc
inc
rorb
repnz
loopne
sub
mov
imul
xchg
ret
call
fldl
inc
mov
fisttpl
and
out
pop
rcr
and
jp
ja
add
ds
sub
xchg
or
cmp
int3
ud1
in
cmp
lret
outsl
outsb
lods
pop
adc
test
dec
fildl
mov
movsl
ret
xchg
fwait
rcll
out
popa
add
cltd
bound
xor
adc
repz
test
mov
xchg
mov
jo
inc
mov
sbb
push
lret
ljmp
out
inc
fwait
adc
and
repz
add
or
pop
push
rcr
cmpsb
in
jecxz
rcl
ret
or
jl
insb
mov
sub
push
subl
mov
sbb
fstpt
or
ret
js
std
push
push
and
loopne
popf
int
pop
inc
sti
or
sbb
push
testb
jne
mov
cmp
xchg
xlat
mov
push
cltd
loopne
cwtl
js
outsl
mov
fistl
movb
xchg
mov
rcl
lock
idivb
fcmovnu
inc
push
hlt
sub
adc
adc
out
xchg
sbb
xchg
rcr
pop
xchg
scas
sub
ljmp
fisttpll
adc
nop
lods
lods
cmp
push
fldt
shl
mov
nop
push
dec
test
fistpl
cmp
mov
xchg
fisttps
in
sub
fisttpl
subl
pcmpeqd
movsl
aaa
jge
nop
push
fiaddl
or
sub
jl
sbb
in
pop
sti
iret
and
cs
ficoms
sub
inc
lods
fisttpll
in
lcall
jbe
out
or
cld
push
fisttpl
adc
fcmovnu
add
or
iret
fsubr
adc
inc
xlat
sbb
dec
jp
mov
cltd
and
sbb
add
aaa
xor
jge
fcmovnb
ret
sti
push
mov
or
fcmovnb
xor
outsl
cmp
scas
imul
test
mov
cmpsl
fistpl
xchg
fisttpl
movsl
dec
hlt
andl
xor
mov
int3
xchg
mov
xchg
es
fldcw
out
mov
add
sahf
mov
mov
fistps
or
lock
fldt
imul
fwait
mov
cld
sbb
and
enter
xor
dec
xchg
or
fistpl
cmc
inc
pop
sub
cmp
push
loop
mov
and
fs
fucomi
jl
imul
fwait
cltd
push
int
stos
mov
cmpsl
imul
jno
sbb
adc
jp
fnsetpm(287
cmp
in
jbe
dec
fsub
mov
push
sub
mov
sbb
push
push
pop
jmp
pop
lcall
loopne
sub
and
sub
cmp
fcomi
insl
sub
sbb
and
fisttpll
push
inc
mov
enter
popa
fldt
movsb
cmp
ret
pop
cmovnp
dec
stos
xchg
adc
fstl
xchg
popa
divb
sbb
or
and
push
ficoml
cs
push
pop
cmp
mov
jmp
mov
xchg
stos
jg
outsb
frstor
pop
cmp
pop
and
fistl
push
push
pop
popa
jo
adc
cwtl
adc
add
sbb
mov
in
ljmp
jmp
scas
fdivrl
stos
mov
int
in
pop
xor
jno
dec
or
pop
mov
stc
lret
ds
jae
div
insl
cmp
out
repnz
loop
xchg
push
dec
lret
fdivl
sbb
inc
push
mov
dec
pop
loop
xlat
stos
repz
rcrl
lret
ljmp
std
mov
mov
xchg
mov
xchg
xor
push
fistpl
ss
jle
jg
test
sarl
loop
xor
jge
fnstsw
mov
rcl
pop
mov
jge
mov
and
notb
push
cmp
stos
jns
nop
movsl
xor
inc
in
mov
int3
ljmp
popf
ss
dec
sbb
and
test
dec
sbbb
fdivr
loopne
mov
test
cmp
and
add
xchg
xor
push
fstpt
push
fldcw
mov
mov
adc
add
scas
lret
xor
lods
aas
fisttpl
mov
int
fldt
xor
loope
fs
fistpl
xchg
enter
into
sar
push
data16
push
mov
mov
int3
jmp
sbb
repnz
adc
xchg
cmp
popa
lahf
notl
sarb
call
jmp
mov
sbb
mov
add
and
fisttpl
aad
mov
mov
push
incl
cmp
stos
jnp
cmp
adc
fistpl
cmc
add
fsubl
push
mov
push
rolb
sbb
loopne
jmp
cmpsl
pusha
dec
push
jmp
gs
ljmp
lcall
pop
jns
into
in
push
sbb
out
or
cld
mov
mov
xor
notb
mov
pop
push
pop
fldt
xchg
rol
fildl
fistpll
push
fstpl
xor
pop
dec
insb
mov
mov
jno
xor
mov
mov
ret
mov
mov
fildl
loopne
xlat
das
sub
mov
pushw
inc
push
imul
lcall
out
lea
pop
fildl
inc
add
popa
xor
hlt
xor
ds
pop
ret
test
lret
call
sti
negb
sub
ja
inc
adc
adc
fisttpll
mov
lea
cmp
mov
push
xchg
testb
subl
insb
and
out
adc
add
xchg
adc
mov
mov
cwtl
fstl
aad
cld
lods
nop
call
les
adc
rcr
pusha
jp
imul
or
sbb
fs
in
das
dec
pop
jmp
ffree
rcll
add
mov
out
cli
sub
repz
inc
insl
nop
loop
or
mov
movsb
rcr
fucomi
mov
outsl
push
fistl
and
sbb
out
push
mov
cld
icebp
fldcw
scas
ret
adc
fimull
inc
fistpl
pop
xchg
aas
fcomi
cmc
or
pop
pop
repnz
dec
add
mov
lock
push
repz
and
jno
in
jmp
aam
xchg
subl
das
pop
mov
fcmovb
mov
fcmovnbe
out
adc
fstpt
fcompl
xlat
div
ffreep
ljmp
cmp
insl
mov
lret
push
inc
ds
mov
insb
hlt
scas
jg
jle
inc
icebp
adc
pop
clc
sbb
fldl
addr16
mov
xor
xchg
xchg
frstor
sbb
jmp
xor
adc
adc
rolb
jae
fs
fsts
fildl
pop
adc
xchg
xchg
jmp
int
fstpt
adc
ficompl
stos
lahf
push
add
fistl
inc
push
jge
sbb
fisttpl
sub
fdivrl
adc
cmp
movl
ja
dec
test
mov
dec
mov
pop
loop
xchg
fildl
cmp
jecxz
sub
or
push
fimull
pop
pop
fdivrl
dec
pop
stc
fiaddl
cmp
jg
addr16
push
push
sub
xchg
xchg
call
fidivl
adc
xchg
mov
dec
mov
lret
loope
ljmp
cmpsl
fldt
lock
jno
xchg
push
fstpt
mov
mov
pop
push
sub
sti
fstps
clc
mov
fcmovnb
mov
test
fstpl
test
mov
push
xor
mov
fs
lock
rcrb
iret
es
clc
mov
je
fwait
ja
xchg
push
out
cmp
mov
incl
sub
scas
ds
inc
nop
dec
jmp
je
rcll
sbb
out
movsl
jg
xlat
dec
aaa
imul
es
sbb
pop
fimull
adc
or
fistl
add
xchg
iret
xchg
ficoml
lock
ret
xor
pop
loop
mov
fcmovnb
sbb
enter
roll
sbb
mov
inc
rorl
mov
jb
test
repz
add
lret
push
push
scas
inc
fucomi
sahf
js
jl
pop
insl
fstpt
adc
clc
fcmovnbe
mov
addr16
aaa
aas
in
and
das
mov
andb
xlat
and
cli
lret
cmpsl
mov
mov
loopne
add
sbb
dec
mov
ja
jne
in
push
mov
xlat
mov
sbb
dec
fistl
mov
imul
or
mov
cs
mov
cmp
loopne
push
shrl
add
jp
dec
loopne
enter
add
xchg
shll
fldt
popa
lret
adc
mov
lds
fs
ja
mov
jbe
cmpsb
push
in
mov
push
cmp
femms
scas
insb
mov
mov
xchg
push
xchg
sbbl
mov
shlb
jo
scas
call
jg
hlt
aaa
push
push
pop
adc
addr16
sbb
rcr
call
pusha
jnp
lock
fistpll
mov
mov
lret
sub
mov
inc
cltd
push
sbb
adc
jne
dec
fidivl
std
and
repz
mov
sarl
loopne
subl
loop
pop
clc
cmp
dec
and
jns
xlat
pop
jg
int
lcall
into
xchg
mov
inc
inc
aaa
push
dec
addr16
jo
fstpt
loopne
rcrb
adc
jno
les
jno
repnz
addr16
fidivs
inc
lret
sbb
push
jne
scas
fldt
fwait
jle
cmp
inc
sub
ret
leave
fwait
sbb
pand
aam
sbb
aas
push
lods
adc
arpl
xor
adc
jne,pt
enter
fldt
jecxz
clc
fstpt
imul
in
add
push
sbb
dec
cmc
into
mov
add
inc
push
and
sbb
fwait
adc
loopne
push
imul
fcmovnb
insb
cld
fldcw
and
jo
inc
inc
test
jb
test
xor
push
test
push
xchg
clc
aaa
orb
pushf
push
sub
cmp
jg
outsl
cmpsl
dec
fildl
arpl
mov
xchg
fcomps
cmpsb
movsb
inc
cs
outsl
xchg
hlt
mov
mov
ds
sar
and
fstpt
imul
int
sbb
or
push
mov
fistps
icebp
fmull
xor
roll
pushf
mov
and
iret
fcmovnu
jo
stos
push
cmp
addr16
mov
mov
sbb
inc
fildl
mov
movl
xor
cmpsl
xchg
test
dec
pop
popl
js
shr
mov
enter
ret
repnz
sbbb
mov
dec
fwait
xchg
and
das
fisttpl
enter
or
cmpsb
jge
dec
inc
pop
jle
es
jecxz
subb
mov
incl
fisubrl
xor
lds
and
pop
sub
push
test
ficoml
pop
cs
out
xchg
push
inc
push
push
jecxz
int3
aam
sub
scas
bound
call
pop
int3
jno
cmp
frstor
lods
sub
ja
mov
out
mov
fldt
cmp
fistpl
mov
popf
in
bound
fdiv
dec
lret
jbe
loop
fidivs
rcrl
inc
mov
negl
inc
das
xorl
xchg
add
das
aaa
fwait
mov
frstor
fcmovu
pushf
lods
loopne
int
les
push
test
xchg
in
mov
jns
repz
aas
xor
mov
mov
dec
data16
fcompl
pop
std
ljmp
add
test
xor
lahf
lods
sbb
xchg
sub
jge
insb
mov
mov
lea
test
lea
fldl
repnz
das
lds
and
popl
stc
mov
in
mov
loope
stos
mov
icebp
mov
xchg
fisttpl
cmp
fsubs
loopne
test
rcrl
clc
jno
xchg
out
xchg
and
fstpt
cmp
ljmp
dec
fucomip
jno
mov
xor
add
mov
jns
sbb
jb
push
call
fcompl
xor
shlb
scas
cmp
jno
lods
fistl
sub
pop
ds
into
repnz
je
pusha
fldt
pop
sbb
sti
mov
mov
aaa
pop
lret
lods
xchg
popa
pop
notb
sbb
sbb
fldt
jg,pt
lock
ljmp
outsl
push
push
mov
pop
nop
sub
cli
loopne
sub
dec
mov
fisttpl
scas
pop
fildl
dec
pop
imul
fstp
xchg
pop
and
sbb
jae
xchg
pop
pop
cmp
adc
fstpl
lret
shlb
jne
popa
std
ret
fldcw
or
clc
mov
pop
mov
dec
jle
mov
dec
lret
push
jb
or
sti
push
fistl
into
xor
sbb
bound
je
and
jns
fidivl
bound
xchg
or
fstpt
xchg
insl
and
mov
negb
lcall
jns
mulb
inc
arpl
lcall
ds
sub
testl
add
js
mov
mov
fcmovnbe
insb
cmp
les
pop
loopne
mov
cmpl
out
lret
pop
mov
add
pop
fs
insb
push
stc
and
ficompl
pushf
int3
rolb
push
outsb
in
cltd
ds
mov
cltd
mov
add
and
xor
clc
mov
adc
mov
pop
sub
push
push
les
jp
ljmp
cmp
mov
inc
fwait
ja
lods
hlt
inc
sarb
pop
dec
mov
fistpl
into
xchg
call
iret
cmp
mov
xorb
mov
or
xlat
sub
mov
out
insb
xor
ljmp
call
dec
push
notb
push
jecxz
ret
loopne
sub
fidivrl
stos
adc
imul
pop
cmp
popf
clc
mov
xor
clc
pop
outsb
add
popf
cmp
add
arpl
xor
fs
enter
fistl
xor
stos
pop
std
and
inc
test
lcall
loop
jns
out
fcmovb
sbb
subb
in
in
repz
or
rcr
fwait
mov
push
neg
sub
mov
and
movsl
mov
enter
rcl
xor
fstpt
cld
data16
sbb
mov
dec
mov
pop
fmull
push
xor
or
int
inc
push
mov
into
sub
or
aam
in
push
jge
mov
mov
iret
loop
sbb
and
sbb
fistps
out
jg
fwait
lds
out
fisubl
or
lcall
mov
es
cli
in
inc
push
repz
fisubl
fsubrl
fistpl
mov
mov
xor
mov
inc
add
out
xor
insl
sti
ja
out
cmp
in
lds
fisttpl
fwait
sbb
sub
faddl
sti
jle
arpl
lcall
and
xchg
fs
neg
pushf
mov
pop
mov
fcmovne
sub
popa
pusha
lcall
loope
add
pushf
jg
fistpl
addr16
ret
mov
imul
inc
pop
xor
movsl
aad
mov
dec
push
mov
loope
xchg
nop
fcmovu
jne
cmpb
push
imul
push
dec
iret
daa
cmp
arpl
pop
es
mov
test
sbb
xor
dec
loopne
repnz
jns
add
lret
aaa
push
dec
mov
add
ret
std
leave
cmpsb
outsl
cwtl
imul
call
rcrl
scas
pop
mov
into
jecxz
xor
shl
shlb
test
xchg
and
nop
or
sub
cmp
movb
mov
insb
fldt
in
pop
fbstp
jecxz,pn
es
adc
lcall
mov
adc
rcr
mov
pop
xchg
shlb
dec
fcmovb
daa
jmp
mov
or
mov
out
and
test
fucom
sbb
push
fistl
push
or
or
lock
fninit
sti
pop
ss
fcmovnu
mov
jle
das
sub
sub
fsubrs
lcall
or
xchg
jns
pop
fstl
add
ss
mov
pushf
or
dec
loope
xor
out
or
adc
js
fstpt
or
daa
jg
sbb
test
jns
sbbb
xor
mov
mov
repz
sub
test
aas
jbe
mov
sub
xchg
repnz
push
fcmovnbe
and
lock
imul
or
push
mov
mov
jnp
ficompl
lods
scas
sbb
dec
add
lcall
inc
sbb
xchg
dec
jge
test
scas
es
aad
ja
call
and
jmp
scas
cmpsb
loope
add
in
or
xchg
test
mov
cmp
or
and
iret
mov
sub
imul
and
dec
mov
cli
jl
outsl
sub
jno
push
xchg
fstpt
fcmovbe
xchg
ss
dec
lret
jns
dec
jb
movsl
int
mov
movsb
dec
dec
loope
cmc
clc
mov
jno
pop
adc
fistpl
adc
icebp
addr16
cli
in
inc
xor
push
fidivl
dec
divb
sub
dec
push
fistl
xor
inc
ret
lds
loopne
pop
lahf
fldt
or
add
fimull
int
pop
loopne
mov
lret
mov
rcr
cmp
scas
xchg
xchg
adc
mov
cmp
push
icebp
fistpl
pusha
adc
mov
je
mov
lcall
mov
pop
cmpsb
ja
ds
test
mov
call
jno
out
dec
mov
aad
popa
lods
pusha
xchg
div
mov
ss
xor
call
cmpsl
sbb
fistpl
cmp
inc
hlt
fcmovnb
cmpsb
jmp
xchg
out
mov
fistl
sbb
test
leave
jl
adc
jmp
or
aas
insl
pop
gs
fldt
mov
fsubr
and
test
fldl
loopne
subb
add
stos
data16
or
mov
or
xor
mov
js
mov
hlt
xor
mov
adc
fcmovnu
dec
lock
stc
push
or
lods
fwait
lahf
fnsave
loope
push
daa
adc
aas
stos
fldt
dec
inc
sub
and
dec
loopne
pop
data16
cmp
pop
jp
outsl
fildl
sbb
cmp
dec
cli
fldt
dec
inc
nop
fcmovnbe
insb
cmpsb
inc
and
xchg
fsubrs
fcmovne
inc
std
hlt
test
fldcw
cmp
sbb
leave
cld
add
jecxz
test
test
mov
dec
iret
add
jno
aam
fldt
out
mov
sbbb
lcall
jnp
into
cmp
ljmp
shlb
cmp
inc
jmp
lcall
adc
and
xlat
mov
das
or
call
test
in
dec
addr16
mov
nop
int3
ss
outsb
fcoms
and
adc
pop
mov
sbb
lcall
pop
int3
mov
into
inc
fcmovnu
cmc
inc
push
mov
inc
add
into
pop
loop
jbe
sub
mov
lock
testb
mov
mov
sarl
mov
pop
ds
std
ljmp
adc
push
xchg
dec
hlt
add
jl
aas
push
aad
int3
jge
fldenv
sbb
mov
sbb
inc
or
sbb
fcmovnu
fs
int
test
testb
fimull
fistpl
add
lret
out
pop
mov
out
mov
mov
mov
sbb
push
dec
loop
adc
jb
xor
loopne
add
in
or
dec
sbb
scas
and
jle
popa
dec
inc
push
or
xchg
lret
sbbb
movsb
mov
cmp
rcr
dec
sub
aam
add
jb
pusha
movsb
cltd
jp
pop
roll
je
fs
aas
call
xor
shlb
test
enter
inc
sbb
sub
popf
add
xchg
pop
orb
clc
xchg
jl
pop
jno
jo
mov
fimull
inc
call
mov
inc
test
test
sub
lock
sub
inc
lea
sbb
fwait
daa
sbb
repnz
jo
nop
sbb
out
or
or
sub
lahf
xor
push
std
fdivs
popa
popa
stos
and
jmp
add
repnz
pop
mov
inc
call
and
mov
int
pop
gs
sti
jb
clc
cmp
cmp
mov
cmp
mov
push
jno
sub
jl
push
push
or
stos
xlat
dec
add
stos
iret
gs
push
dec
sbb
lret
mov
in
or
adc
lcall
pop
cld
sahf
mov
adc
lcall
dec
fidivl
jge
outsl
das
xchg
pop
xlat
add
bound
aam
aam
xor
out
aad
dec
outsl
sti
ss
add
mov
lock
ffree
stos
and
pop
scas
or
jmp
lods
jno
insl
xchg
mov
lret
sbb
loope
stos
mov
jnp
repz
jnp
xlat
fstps
in
pop
xchg
cmc
repnz
fistpll
lahf
mov
xor
and
loop
xchg
lods
mov
ret
inc
pop
mov
aam
adc
ljmp
sub
les
xor
mov
out
test
lds
add
jmp
hlt
stos
enter
out
iret
outsl
lock
inc
push
add
xor
adc
or
out
sbb
ret
adc
stos
and
and
rclb
mov
rcll
adc
or
pop
test
or
push
mov
dec
inc
jo
hlt
pop
lods
xor
jle
aas
pop
int
stos
xor
mov
cmpsl
or
int3
mov
in
xor
sbb
mov
std
into
shl
cwtl
sbb
xor
adc
adc
and
fildl
stos
shlb
mov
fs
outsl
and
sarl
xchg
adc
mov
xchg
jbe
in
daa
scas
xlat
and
cmp
push
loope
int3
xchg
push
dec
dec
pop
stos
push
cmc
adc
pop
lea
sar
jne
lods
pusha
jbe
mov
cmp
out
stos
js
hlt
maxps
lcall
inc
mov
ret
icebp
cli
shll
cmp
outsb
shrb
loop
jp
mov
addr16
out
add
clc
or
mov
lcall
adc
lods
gs
es
js
jb
fnstsw
sbb
sti
test
mov
rorl
leave
xlat
jmp
xor
int3
cmc
sbb
sub
out
mov
push
add
sub
jno
pop
mov
push
pop
push
stc
cs
jp
mov
pop
mov
and
cld
push
mov
das
add
mov
loope
rclb
je
inc
int
or
bound
sbb
adc
andl
or
in
ds
jle
mov
dec
pop
lods
aam
adc
inc
and
mov
dec
or
inc
sub
xchg
imul
mov
subb
in
lea
push
add
cmp
cltd
dec
arpl
mov
jl
xor
mov
fwait
push
pop
outsb
jle
pusha
adc
je
dec
mov
fcmovne
stos
add
scas
call
lcall
cwtl
lcall
inc
lock
jns
cmpsl
int
mov
bound
adc
call
xlat
fstpl
mov
mov
xchg
shr
scas
xor
leave
stc
rcl
pop
lcall
int
sbb
mov
sbb
pop
mov
fnstsw
xchg
or
ds
xchg
aam
imul
in
imul
push
and
outsl
sti
jl
xchg
lcall
leave
subl
ja
lock
mov
lret
les
test
call
lods
test
xor
push
jns
pop
insb
cmp
push
pop
in
stos
xchg
push
add
push
jmp
stos
je
clc
jmp
in
mov
mov
mov
popf
add
test
loop
ret
dec
mov
and
test
lret
jb
sbb
or
xlat
and
adc
xchg
fcomp
test
fadds
mov
movsb
ds
dec
inc
cmp
jg
shrl
push
std
addr16
sub
fsubrs
cmp
mov
addb
jl
in
inc
add
mov
and
cltd
imul
mov
aaa
hlt
outsb
dec
andl
test
jbe
xlat
out
jmp
lods
sub
gs
loope
jbe
jge
shr
out
popf
inc
pop
mov
xchg
xchg
daa
adc
sbb
cltd
adc
mov
scas
xor
pcmpeqd
call
inc
sbb
loope
inc
hlt
xchg
fistpl
jmp
fistl
mov
imul
push
fbld
jl
es
jnp
mov
and
std
sbb
xor
leave
mov
call
int
mov
adcb
fwait
inc
test
outsb
or
addl
dec
mov
jno
or
lcall
test
sbb
fcmovnb
mov
inc
aad
vcvttsd2si
lretw
lods
fstpt
mov
mov
adc
pusha
dec
rcr
sbbb
outsl
mov
mov
jo
iret
or
or
sbb
daa
or
lods
cmpsl
dec
shrb
loopne
testb
inc
sbb
rcll
test
scas
aad
stos
pop
or
loopne
rcl
adc
ficompl
dec
jb
sbb
sti
leave
jge
divl
sub
jns
jnp
or
stc
insb
sahf
movsb
sahf
shll
in
inc
mov
or
cwtl
sbb
cmp
stos
mov
stc
dec
lcall
nop
movl
ds
dec
sub
inc
or
cmp
lds
scas
out
mov
mov
out
xor
push
inc
loop
fadd
test
mov
push
and
call
or
xchg
adc
loop
cmp
aaa
jle
in
fs
xor
pop
cmp
shl
cmp
in
stos
mov
or
lods
pop
in
scas
das
test
pop
shll
mov
and
xchg
iret
cmp
mov
lods
addb
pop
lcall
xchg
sub
inc
in
mov
mov
lods
mov
sbb
pop
pop
into
jmp
adc
or
or
and
jge
fnstcw
in
add
fisubs
xlat
pop
lods
fld
or
stos
push
adc
pop
pop
jg
insl
movsl
stos
add
or
mov
mov
cld
xchg
fldl
or
push
bound
jb
clc
fsubl
add
stos
jle
or
lcall
stos
mov
cmp
or
sub
add
adc
out
jl
mov
test
add
dec
loop
pop
mov
push
sbb
test
je
adc
cmc
icebp
dec
lahf
adc
sti
pop
dec
outsb
or
pusha
and
or
out
repnz
loop
xlat
pop
jle
dec
cmpsb
xchg
gs
pop
pop
fildl
lods
jp
pop
pop
fistps
int3
repnz
xchg
addr16
jne
jle
scas
pop
int
or
enter
sub
or
pushl
sbb
repnz
adc
out
dec
mov
mov
push
pop
insb
push
outsl
pop
out
pop
mov
push
mov
xlat
jb
push
adc
xchg
pop
cmp
fucomi
pop
xor
loope
ret
jbe
imul
mov
dec
jle
roll
adc
push
adc
and
and
repz
mov
mov
add
add
and
sbb
sub
cmc
cmc
fidivl
aas
sbb
addr16
push
fisubrs
pusha
jecxz
sbb
adc
ret
test
push
enter
icebp
adc
push
cmp
xor
and
adc
sbb
push
rclb
adc
sbb
mov
les
or
mov
xor
dec
iret
jb
jbe
insl
xor
and
fisubl
das
push
dec
sarb
inc
lods
daa
jnp
and
adc
into
pop
out
ror
push
fisttpl
or
loopne
or
negb
in
or
dec
out
mov
test
or
dec
es
push
fisttpl
inc
xor
ret
xor
push
mov
push
dec
enter
or
in
adc
jmp
imul
clc
stc
fs
add
push
out
ret
jg
sbb
mov
scas
xchg
outsl
push
add
or
call
fcmovu
mov
jle
in
in
loope
xor
jmp
sti
mov
mov
adc
cld
cltd
lahf
push
mov
mov
test
lahf
inc
in
push
movsb
stc
and
inc
fistl
push
dec
mov
xchg
imul
fwait
and
add
dec
fistl
pop
cmp
add
sbb
pushf
cwtl
xchg
push
sbb
or
imul
dec
nop
les
lret
inc
jecxz
pop
add
mov
call
or
fwait
dec
imul
std
xchg
insb
imul
mov
dec
lea
fiaddl
cmpsb
mov
xor
fstpt
sbb
push
fistpl
inc
xchg
insl
loopne
out
or
pop
adcb
fcomp
mov
xchg
fldt
lahf
adc
loopne
mov
jp
outsl
ror
clc
push
test
fwait
and
pusha
loope
fildl
aaa
mov
add
fldt
and
into
loopne
mov
cmp
outsb
fildl
pop
in
int3
fnsave
sti
aas
mov
push
fcmovnbe
cmpsb
push
cmp
dec
insl
and
popa
clc
xchg
fildl
fldl
xchg
xchg
pop
shl
mov
testb
cwtl
pusha
lcall
mov
int
js
in
xchg
and
mov
ror
pop
test
idivl
lods
mov
and
ret
ret
out
adc
mov
aas
fistl
dec
insb
jns
xchg
cmp
inc
jp
push
push
and
sbb
out
inc
repnz
fldt
sahf
jno
lock
push
mov
sbb
mov
rcl
ds
pop
mov
cmp
insl
test
es
imul
lods
add
inc
mov
fistl
test
or
dec
movsb
mov
into
xchg
fldt
aas
push
pop
les
mov
loopne
cmp
lds
mov
push
dec
fldt
mov
xor
fstpt
jo
stos
dec
mov
pop
les
pop
fwait
out
imulb
in
mulb
ds
call
push
jnp
dec
mov
movsl
in
cmp
or
xchg
cld
xchg
inc
sbb
inc
fistpl
ficoms
lods
sbbb
popf
imul
adc
jg
fldt
mov
arpl
sbb
mov
adc
cmp
mov
jne
scas
or
popf
xor
shrb
call
or
mov
xor
and
mov
pop
shll
mov
jmp
scas
jl
into
xchg
sbbb
stos
adc
jnp
ja
shll
shlb
insb
and
pop
ds
cmp
mov
fisttpll
fstpt
nop
jl
enter
stos
mov
xor
test
mov
xor
mov
add
stos
cmpsb
xchg
push
rcrl
or
fstp
jnp
pop
adc
imul
in
fstp
imul
pop
ret
jae
jge
addr16
adc
xchg
orl
adc
jl
cmp
inc
cmp
paddb
sub
xchg
test
orb
add
ret
sahf
mov
jmp
sti
cli
or
xchg
inc
mov
fcmovnb
push
repnz
lcall
repnz
nop
fistpl
xor
push
or
mov
iret
dec
mov
js
insl
fildl
mov
lock
sbbb
sbb
ficoml
fistl
repz
jge
push
neg
adcb
sbb
loopne
outsl
in
out
fistl
xchg
inc
ds
inc
hlt
leave
mov
fistl
or
in
movsb
xor
mov
outsl
imul
popa
movsl
xor
push
fistpl
aas
stos
cmp
scas
pop
dec
push
sti
mov
mov
into
pushf
mov
jo
sbb
pop
in
and
rorb
or
pop
push
sbb
fcmovb
lcall
lret
in
repz
icebp
fwait
push
xchg
sbb
cmp
cwtl
dec
inc
repnz
add
fildl
xor
push
into
scas
xor
pop
adc
mov
sarb
push
insb
outsb
fcompl
jmp
fistl
daa
xorl
pop
mov
hlt
or
insl
adc
add
inc
jle
jmp
xor
mov
rcr
cmpl
ret
lods
cmpsl
sti
fstpt
rorl
pop
push
bound
sub
pop
dec
rclb
mov
ret
and
repz
jae
xchg
xchg
sub
jo
push
mov
push
add
mov
xor
pop
loopne
inc
mov
cmp
or
imul
dec
loop
mov
pop
cmp
imul
add
jno
rcll
pop
cmc
pop
fcmovu
mov
in
into
cmp
fcomi
cmpsl
jne
rol
enter
fiaddl
pop
cltd
cmp
scas
push
fildl
sbb
adc
mov
ss
lret
subl
js
or
mov
ficomps
ret
mov
mov
pop
js
lcall
shll
fcmovnu
es
dec
mov
pop
shrb
call
lds
adc
sarb
mov
mov
divb
push
pop
fiaddl
jno
dec
push
popa
push
mov
cmp
cwtl
lcall
fistl
jle
mov
jbe
popf
adc
push
fildl
inc
aam
enter
push
inc
sbb
out
mov
movsb
pop
push
jns
xor
fldt
mov
lds
pop
repnz
es
scas
cmpsb
shlb
gs
rorb
dec
mov
fisttpl
je
rcrl
inc
inc
xchg
fstpt
fimuls
jg
sub
cwtl
push
fucomi
ret
pop
xor
arpl
and
popa
push
inc
ss
cld
mov
mov
popa
loopne
sbb
push
adc
mov
fildll
xchg
pop
mov
cli
or
jmp
test
mov
mov
fwait
repz
add
stos
push
mov
pop
jge
mov
gs
xchg
nop
cmc
movsl
mov
mov
loopne
push
mov
inc
imul
mov
push
xchg
popa
ljmp
dec
mov
xchg
loope
sbb
mov
sbb
xorl
pushf
adc
mov
out
mov
xor
mov
push
sbb
adc
fildll
mov
sub
fisttpl
and
out
mov
inc
in
add
loopne
xchg
in
mov
dec
mov
enter
cmc
dec
mov
adc
ret
or
jnp
cmp
jno
mov
push
test
adc
ret
push
fcmovnbe
mov
mov
mov
fsubp
movb
dec
sub
fistpl
daa
sarb
scas
loop
aaa
mov
sub
lds
mov
or
movsl
clc
add
sub
cwtl
sbb
cltd
add
fcomi
stc
or
cld
dec
fcmovnu
xchg
sahf
jge
sbb
ret
mov
lahf
push
adc
or
mov
das
mov
loopne
sbb
or
jnp
mov
or
dec
int
das
sti
sub
mov
sbb
cmpsb
in
stos
dec
mov
cwtl
pushf
aad
mov
adc
pop
pop
pop
icebp
fimull
in
stos
hlt
rcr
jg
mov
ds
fiadds
cmp
mov
insb
cmp
lds
repnz
cs
add
ljmp
dec
mov
mov
scas
push
cs
aam
mov
in
sbb
rol
inc
xchg
dec
mov
fistpl
cmp
in
mov
ret
stos
lret
loop
lods
dec
rcl
mov
cli
push
cmp
dec
xor
cltd
cli
icebp
clc
stos
cmp
sti
lods
mov
shr
jmp
xor
xchg
sub
aas
cld
rcr
mov
cmp
jb
jbe
dec
and
sti
mov
lahf
pusha
mov
out
in
push
lcall
jp
fisubl
and
das
fstp
inc
mov
shll
xor
lds
mov
pop
in
ja
popl
inc
rorl
outsb
xor
cld
scas
fdivl
jp
call
sbb
icebp
or
aam
inc
xchg
cmc
negl
mov
xor
addr16
imul
sub
adc
es
sbb
jg
xorb
out
mov
out
icebp
jge
mov
lods
int3
mov
imul
mov
sbb
adc
cmp
cmp
popa
ret
sbb
ret
push
mov
cmp
imul
jle
lods
popa
mov
mov
pusha
fdivr
mov
mov
sub
cmc
inc
ror
jp
pop
jle
pushl
fisttpl
inc
outsl
gs
fldt
mov
lods
stc
xchg
inc
fistl
scas
bound
and
cmp
xchg
scas
andb
popf
sti
jno
sbb
clc
or
mov
stos
cmp
ror
jmp
mov
negl
dec
movsb
test
xor
sbb
push
add
loop
sbb
dec
mov
mov
ret
cmpsb
addr16
pop
mov
imul
or
repz
aam
mov
loopne,pn
cmp
sub
mov
fcmovnu
xchg
into
mov
inc
stos
push
xlat
rorb
loopne
jg
mov
push
sbb
fisttpl
andl
addr16
testb
push
les
push
inc
pop
in
add
push
scas
pusha
add
test
sub
stos
inc
out
cld
cs
adc
fisttpl
test
sub
add
jne
dec
fimull
insl
and
ljmp
fwait
xchg
jae
fisubl
movsb
cwtl
out
add
fisttpl
stos
iret
mov
ret
cmp
ss
rol
pop
ja
or
nop
cmp
js
and
mov
push
out
mov
fstpt
mov
addb
pop
pusha
pushf
lret
mov
ljmp
pop
dec
sbb
mov
or
cld
dec
jnp
fcomi
imul
fucomi
add
lock
in
or
push
push
fnsave
mov
push
loopne
in
call
loopne
jecxz
dec
loopne
fwait
xlat
test
outsb
loopne
add
jmp
jbe
inc
and
push
es
roll
fsubs
sub
inc
jnp
mov
sub
fildl
faddl
push
mov
enter
jmp
in
fistpl
xchg
iret
sti
lock
xchg
mov
add
fistl
std
xchg
inc
lret
mov
add
repnz
rolb
aam
cmp
outsl
mov
std
ficoms
sarl
fistl
and
pop
fstpt
lcall
testb
dec
pop
roll
or
adc
daa
out
fisubrs
loopne
ja
pop
jp
imul
enter
lods
mov
sub
lahf
repz
gs
fldt
sahf
push
xor
dec
idivb
es
fbld
inc
fimull
xchg
jnp
pop
mulb
sbb
test
fcmovne
xchg
mov
and
sbb
je
mov
cmp
les
test
in
xor
push
add
shrl
sahf
adc
pop
ljmp
nop
inc
add
or
mov
jge
jae
mov
mov
sti
xchg
das
sub
fistpl
in
jp
rcrb
fistpl
insb
int3
sbb
sub
push
loope
stos
jp,pn
sbb
mov
enter
pop
les
test
aaa
icebp
sbb
mov
scas
insb
xor
sbb
lahf
call
dec
add
fstl
hlt
xor
gs
dec
shlb
in
sbb
das
push
inc
ret
or
jp
mov
push
lret
add
es
adc
inc
ja
mov
sti
pop
imul
into
in
aam
mull
sbb
sbb
sbb
cmpsl
outsb
jecxz
xlat
imul
or
lahf
add
stos
xchg
data16
jecxz
fstpt
insb
lock
cltd
test
push
pop
loopne
xchg
push
xor
ds
pop
adc
add
lret
ret
fstps
loop
mov
dec
inc
lcall
mov
fisubl
into
scas
mov
cmpsb
dec
xchg
pushf
mov
sti
lods
in
cltd
scas
cmp
mov
iret
rcr
pop
and
clc
adc
cli
in
mov
data16
fwait
gs
xor
clc
inc
cmc
inc
ret
dec
lods
xchg
dec
or
add
sbb
bound
push
cmp
pop
aas
iret
leave
mov
push
clc
mov
or
cwtl
arpl
push
cmc
je
jnp
xchg
fcomps
xor
mov
fs
push
stos
cmp
push
add
orb
ficomps
xor
inc
cmp
addb
mov
or
imul
stos
lret
inc
mov
mov
orl
pop
mov
adc
fistpl
popf
or
inc
cltd
jae
mov
ljmp
or
ficoms
lock
test
pop
inc
out
fdivl
jne
xor
rcr
mov
fcoml
adc
and
arpl
pop
pop
inc
test
lret
jns
cmpsl
lcall
inc
mov
push
add
vminpd
add
orl
pusha
xchg
lcall
scas
out
or
cld
clc
rolb
insb
outsl
fistpl
inc
sub
roll
lret
hlt
fimull
psrlq
pop
and
xchg
out
test
inc
push
push
mov
fisttpl
clc
test
ret
call
xchg
and
pop
mov
pushf
cmpsl
stos
pand
out
mov
add
ffree
mov
push
xor
dec
outsl
jno
test
fldl
out
in
mov
push
inc
mov
dec
imul
inc
movsl
or
jb
mov
adc
and
jns
mov
xchg
popa
lods
es
inc
fistpl
call
nop
sub
aaa
test
jae
mov
jmp
loop
ret
sub
mov
leave
adc
fists
ficompl
push
pushf
aas
clc
frstor
fucom
push
xchg
mov
fildl
jo
mov
andb
rcll
out
pop
jge
call
cmp
fadd
sbb
js
fwait
hlt
lahf
stos
out
pop
cmp
pop
loope
jge
in
aad
mov
sti
jb
mov
xlat
leave
repnz
pop
dec
or
pop
imul
push
xchg
push
fistl
push
push
imul
fldenv
sbbl
idiv
push
fisubrl
pop
ss
fcomi
in
xchg
cmpb
push
je
fildl
imul
xor
mov
in
pop
jl
fistpl
insb
nop
int
aas
cmp
inc
notb
scas
lret
pop
jns
jnp
sub
rcrb
or
xchg
jecxz
mov
fucomi
or
das
inc
pop
icebp
int3
fisttpl
gs
cmpsb
jne
jl
outsl
sub
clc
out
cwtl
add
or
pusha
inc
sbb
fdivr
cli
rcr
fildl
xchg
or
les
xchg
mov
fucomi
popa
es
ss
mov
movsl
scas
out
and
call
push
jp
int
cmp
out
mov
jne
frstpm(287
fwait
bound
xchg
push
inc
cmpsl
dec
pop
mov
xchg
js
inc
negb
jg
es
mov
repz
or
jo
sub
mov
loope
or
jns
pop
pop
bound
or
movsb
mov
and
scas
cmpl
push
pop
in
test
pop
fcmovnbe
jnp
mov
or
mov
js
mov
or
sbb
push
add
gs
fisubs
inc
ret
fucomi
mov
pop
fsubrs
xlat
mov
out
jns
pop
lahf
mov
das
fistpl
gs
sub
movsl
loopne
jnp
mov
pop
nop
and
mov
cli
loopne
fldt
jmp
add
daa
fcmovnu
std
ja
mov
loop
cmpsl
cld
fcomi
mov
xor
fbld
dec
cmp
ficompl
lret
pop
fistl
pop
push
adc
sbb
xor
ljmp
scas
mov
std
jbe
in
das
aaa
out
push
inc
lcall
pop
repnz
dec
sahf
fistl
icebp
xor
test
shll
mov
ret
call
leave
mov
enter
in
or
jle
shll
subl
xor
mov
andb
inc
fstpt
pop
push
dec
push
bound
imul
xlat
adc
pop
sti
fbstp
imul
js
pop
ds
test
pop
mov
mov
push
in
xchg
mov
faddp
add
and
adc
push
mov
mov
clc
lret
fldt
xchg
fisttpll
fwait
jmp
jnp
cmp
dec
xchg
pop
ficoml
fucomi
cmc
adc
cvtps2pd
adc
pop
xchg
test
cmp
sbb
bound
pop
mov
push
fcmovb
addr16
subb
xchg
aad
loopne
sbb
enter
sbb
out
dec
jecxz
ss
jle
lock
xor
mov
cmp
fistl
sbb
call
ret
pop
or
adc
in
adcl
popf
fidivrl
mov
rorl
sub
std
clc
push
sti
bound
xor
cmpsb
inc
es
dec
test
call
int
clc
imul
aas
xor
mov
popf
scas
jb
ds
data16
xchg
aas
pop
sub
loopne
mov
cmpsl
fistl
or
fcmovnu
mov
cmp
lret
popa
sbb
ret
mov
lahf
imul
divb
movsl
popf
dec
stos
repz
mov
loopne
movsl
and
scas
lret
daa
pop
pushl
mov
cli
cld
xlat
aaa
mov
fistpl
loope
ret
lock
leave
jp
in
pushf
and
jmp
cmp
neg
js
sbb
aaa
lret
shrb
add
testb
and
pop
icebp
ficompl
fistl
clc
int3
mov
imul
inc
frstor
push
inc
andl
pop
pop
jno
cld
add
jmp
inc
xor
clc
inc
pusha
jge
and
add
mov
mov
js
sahf
rcll
clc
lods
push
mov
pop
fidivrl
fcmovnu
sahf
sbb
push
subl
nop/reserved
sbb
movsb
test
xor
jae
and
jg
rclb
adc
dec
xchg
enter
lock
ljmp
lods
jbe
adc
inc
jmp
lahf
movsb
movsl
fimull
fldt
dec
mov
stc
and
loopne
and
imul
mov
dec
add
cmp
xor
out
push
test
sub
adc
cmp
in
mov
push
and
pusha
int
sti
iret
jp
scas
mov
inc
xchg
out
fildll
lret
sub
mov
int3
adc
add
stos
push
cmpsl
call
jnp
call
sar
cmpsb
outsl
adc
fldenv
pop
dec
es
fwait
divb
fwait
or
xor
in
inc
fmul
clc
dec
cmpsb
into
push
in
sti
ficompl
jecxz
inc
ja
movsl
mov
inc
xchg
inc
push
push
fildl
jae
xor
adc
adc
pop
jbe
pop
mov
aam
xlat
lret
fucom
pop
and
mov
ret
pop
xor
adc
mov
and
dec
in
std
sub
leave
xor
push
mov
loop
pop
pop
cmp
bound
xor
ljmp
shll
inc
cmp
negl
hlt
jle
shr
arpl
out
ficoms
movsb
test
cmpsl
xor
xor
add
push
and
sub
out
scas
xchg
daa
pop
lret
mov
push
cli
cs
shlb
push
mov
gs
mov
shll
fcomi
repz
pop
xor
gs
in
fildl
movsl
flds
adc
leave
sbb
cs
fidivs
fstpt
jge
cmp
mov
mov
mov
imul
jmp
fsubrp
cltd
mov
scas
loopne
jl
imul
pop
sbbl
call
sbb
cmp
repnz
mov
dec
outsb
stos
inc
fldt
and
pop
sarl
stc
or
cmp
dec
xchg
push
xchg
subb
outsl
dec
ja
fisttpl
stos
rcr
les
push
stos
adc
bnd
mov
cmp
nop
fiaddl
xchg
insb
pop
xor
std
mov
and
sti
lods
xor
aas
gs
addb
in
and
mov
not
cmp
mov
jle
and
fcoml
lcall
push
pop
nop
imul
jne
leave
data16
xchg
pop
dec
and
scas
mov
jno
and
sbb
xchg
mov
dec
jno
jae
fisubs
mov
iret
popa
add
icebp
and
test
xor
nop
add
lahf
sahf
call
mov
jl
in
push
mov
int
popf
mov
xor
mov
adc
jge
pop
icebp
adc
je
ret
xchg
hlt
into
jg
fisttpll
lcall
aaa
repz
mov
out
xchg
cmp
xor
ljmp
lds
mov
test
xchg
cmp
sbb
imul
jmp
lods
adc
fimull
lods
in
cmp
nop
cmp
pop
mov
stos
xchg
arpl
push
push
sbb
add
fisttpll
negl
and
call
fstps
pop
mov
jl
pop
sbb
and
push
sbb
data16
popf
pop
mov
out
jns
fiaddl
pop
mov
int
lcall
decb
loope
outsl
cmp
jbe
loop
sbb
mov
cli
mov
cs
fdivrs
sub
fisttps
inc
mov
arpl
popa
xor
lret
add
jl
sbb
les
or
sti
lret
xchg
sub
aaa
jp
lock
push
pop
ficompl
sbb
sub
lcall
mov
dec
fidivl
push
cmp
fsubrp
fstpt
push
or
out
popa
fwait
jl
mull
fldt
add
jecxz
cli
and
jne
popf
mov
mov
popa
in
xchg
pusha
jb
xor
test
mov
cmc
icebp
mov
fiaddl
sbb
aas
push
mov
push
ret
nop
fnstsw
jge
arpl
fstpt
dec
daa
inc
fisttpl
mov
ret
stos
jns
cvtps2pi
fistl
popa
cmc
mov
cmp
mov
fisttpl
push
jle
xor
fnstsw
stos
dec
cli
and
testb
clc
adc
lret
fcmovnu
mov
cmp
inc
sub
jnp
in
pushf
dec
cwtl
xor
xchg
lods
fisubrl
std
mov
jne
int
cmp
sub
add
sbb
outsl
in
cmc
add
test
ljmp
push
xchg
ret
sbb
rcl
mov
sub
pop
gs
fstps
pop
push
jo
mov
push
jb
push
fucomi
mov
jge
cli
lock
test
pop
jbe
lret
loope
ret
jg
sahf
xchg
jnp
and
in
push
xor
fcmovnbe
jecxz
sahf
shrb
inc
jp
pop
sub
pop
fisttpl
setg
loopne
jmp
mov
std
mov
and
int
cmp
mov
pop
push
mov
fidivrl
sbb
movsb
test
fwait
push
adcb
or
and
gs
sbb
and
cs
pop
in
call
ja
mov
mov
test
dec
fninit
ss
imul
cmp
aas
push
adc
mov
adc
mov
cltd
js
pop
adc
and
repnz
shrl
lahf
mov
cld
arpl
cltd
fistl
inc
dec
xchg
pop
fidivs
push
cli
or
shl
lcall
cmpsb
fisttpl
xchg
add
out
das
ret
inc
cmp
fndisi(8087
push
adc
xor
insl
add
adc
push
fildl
mov
stos
xor
dec
xchg
mov
loope
push
punpckhdq
stc
call
adc
cmp
pop
cmpsl
mov
lods
push
popa
dec
jo
add
xor
push
pand
pop
out
push
fcompl
stc
incl
call
popa
jp
push
mov
mov
jns
lods
outsb
mov
mov
jnp
add
xor
mov
mov
inc
xchg
mov
mov
xchg
mov
sti
pop
add
das
fnsetpm(287
cmp
pop
pop
push
push
jb
push
shll
int3
dec
fbld
inc
icebp
testb
idiv
ret
xor
out
add
xor
es
in
mov
cmc
and
repnz
cwtl
fadd
or
fcmovu
dec
sub
mov
divl
int
inc
leave
or
shrb
enter
call
mov
cld
out
sbb
movsb
enter
mov
cmpsb
int3
and
dec
xchg
jl
pop
sbb
movsl
not
stc
sti
mov
fcomi
cmpsb
add
pop
fldt
push
sub
pop
dec
push
test
add
dec
push
fisttpl
fwait
sbbb
pop
xchg
or
add
andb
mov
or
pop
pop
pop
in
test
clc
jle
inc
bound
fndisi(8087
xchg
sub
ja
jb
xchg
pop
fildl
jmp
in
fcmovnb
cld
jg
adc
push
inc
outsl
mov
xor
push
fldt
and
cwtl
cmp
push
dec
test
loopne
fmuls
or
dec
lret
mov
sbb
cmp
pop
push
dec
inc
lock
and
out
repnz
ret
mov
inc
add
data16
cmp
andb
popf
push
fisttpl
shrb
sbb
clc
push
xor
fiaddl
add
adc
pop
xchg
lock
or
enter
cld
pop
xor
sub
lret
out
mov
cld
push
mov
inc
aaa
sub
das
insb
dec
fcmovne
jge
inc
in
fbld
push
sbb
in
sub
xchg
ret
push
fadds
sbb
mov
addr16
cmp
and
mov
push
sub
and
pushf
pop
sbb
movb
mov
pop
jae
pop
jae
ret
pop
testb
xor
sbb
sbb
lods
rcr
xchg
into
jb
push
sbb
mov
pop
repnz
paddsb
jecxz
xchg
and
aad
xchg
push
clc
dec
push
fcmovu
xchg
cs
sbb
lcall
nop
push
pause
xchg
mov
fildl
mov
mov
nop
sub
mov
pop
jne
popf
xor
jmp
mov
lret
into
mov
dec
outsb
jnp
ds
fistpl
sub
loopne
test
push
mov
fldt
or
sbb
mov
mov
test
dec
jae
nop
fcmovnbe
mov
bound
test
fdivrl
iret
mov
fisttpl
xor
mov
fdivp
mov
push
stos
lret
ret
pop
imul
jno
dec
iret
fcmovnb
and
and
or
or
nop
loopne
sbb
sub
mov
sbbl
int3
cmp
out
xchg
add
push
stos
inc
divb
fstpt
mov
pop
movb
neg
mov
and
sbb
xor
pop
out
inc
pop
lcall
loop
fwait
sahf
fwait
pop
sub
fistl
jmp
mov
mov
or
xlat
rclb
fcmovne
add
push
stc
jg
xchg
loopne
inc
loopne
btc
loop
pop
fildl
les
xchg
adc
push
std
adc
mov
movsb
fstpt
ror
rcr
shrl
scas
jns
jp
dec
arpl
outsl
jo
fstpt
xchg
in
les
fildl
sub
je
mov
movsl
xchg
dec
dec
adc
pop
mov
aas
jae
ficompl
xchg
fnstsw
dec
add
cmp
shll
test
mov
pop
cmp
xchg
and
sub
push
int
mov
mov
or
xor
jae
stc
dec
cmp
pop
test
inc
xor
fstpl
inc
adc
out
fstp
fs
inc
pop
sti
cmp
or
pop
pop
jbe
fldt
sub
fwait
xchg
ret
imul
stos
fwait
xchg
mov
iret
mov
fcmovnb
push
inc
jp
jle
outsl
adc
imul
and
rcrb
ret
push
enter
fninit
dec
pushf
mov
leave
push
pop
fcomip
push
mov
int3
dec
decl
add
jp
es
call
jbe
fucomi
scas
aam
andb
cld
aad
xchg
js
out
add
shr
fistpl
xchg
adc
into
pop
fcmovb
dec
jb
add
sbb
shl
out
adc
popf
cmc
call
push
push
add
fcomi
cmp
insl
or
dec
xchg
shrb
ret
cmp
test
jne
fildl
xchg
adc
push
ss
shll
js
test
mov
fisubl
test
mov
stos
jno
fildl
lods
jbe
loopne
pop
push
leave
hlt
lret
sub
xor
push
inc
inc
sarb
es
dec
fisttpl
mov
orl
out
dec
add
mov
insb
into
arpl
daa
sub
out
push
out
fidivrl
mov
cmp
xchg
inc
add
mov
lds
imul
in
adc
pop
inc
sub
ret
xchg
mov
adc
leave
xchg
ss
mov
push
add
sarl
mov
mov
mov
add
mov
inc
aad
call
push
jp
pop
mov
enter
inc
notb
add
pop
xor
int
iret
push
test
scas
cmpsb
push
sbb
repnz
repnz
clc
fsubs
cmpsb
add
push
fcomi
jmp
dec
jae
jl
idivl
dec
stos
in
cltd
xchg
pop
stos
addr16
js
add
dec
xlat
imul
scas
mov
pop
test
inc
das
xchg
lods
inc
and
pop
inc
add
or
jno
mov
pop
clc
out
lcall
jp
out
mov
sbb
sbb
pop
inc
cli
pushf
jmp
repnz
int3
xchg
jbe
fprem1
jge
mov
xor
pop
mov
jnp
jbe
mov
mov
stos
push
jnp
loop
cmc
pop
fsts
lods
lret
xchg
js
xchg
inc
mov
jbe
and
cmc
jp
aas
js
cmp
mov
xchg
sarl
sbb
ss
mov
or
bound
jg
jmp
adc
jbe
stos
iret
adc
jp
test
dec
sti
stos
xor
cmpsl
cmp
rcrl
xchg
push
fsubl
jnp
or
add
jmp
stc
out
cmc
inc
ficoml
and
or
push
or
leave
jb
jl
cmp
test
jg
adc
fwait
cli
push
fstpt
stos
rolb
int
mov
divl
loopne
mov
mov
fmull
addl
lcall
inc
stos
cmp
loopne
dec
insb
add
mov
das
sbb
outsl
or
stos
mov
jle
push
push
scas
xchg
adc
jmp
ds
cmpsb
fwait
das
stos
push
fst
push
jnp
lret
cld
push
subb
adc
hlt
mov
xchg
push
fildl
jl
mov
mov
cld
adc
cmp
push
mov
fcomi
sub
loopne
jno
in
fistpl
mov
cwtl
pop
cmpsl
add
aaa
push
mov
push
out
je
testl
cmpsl
jp
mov
add
fiaddl
fldenv
fildl
jg
cmp
dec
push
fdiv
popf
add
ficoms
jnp
cmp
mov
repz
in
cltd
fbld
popf
aad
cltd
enter
jge
loopne,pn
adc
out
jmp
adc
movsl
mul
leave
loope
xor
and
or
stc
je
pop
xchg
popf
add
xorb
xor
cvtdq2ps
cmpsb
jecxz
push
mov
lret
pop
fildl
mov
stos
mov
scas
fisttpl
inc
int3
dec
call
cwtl
stc
pop
jno
mov
add
dec
push
xor
cmp
xchg
pop
or
int
mov
in
ror
fnstsw
insl
or
aas
and
mov
fwait
lcall
stos
adc
test
fistpl
data16
outsl
dec
dec
movsb
negb
and
mov
add
cli
cmpsl
dec
lcall
pop
rcr
jnp
ss
out
sbb
jg
sti
lea
stos
jno
call
cmp
clc
cmp
sub
push
stc
mov
adc
xchg
sub
mov
add
and
xor
pop
fisttps
adc
scas
dec
mov
cltd
push
cmp
xor
nop
call
notl
cld
add
push
repz
scas
iret
push
add
sbb
mov
push
and
dec
stos
inc
or
mov
xor
inc
cwtl
rcrl
sub
repnz
divb
in
cli
push
fistpl
data16
jge
fstpt
out
sti
mov
ret
pop
into
mov
fwait
push
ja
call
dec
fistl
stos
jl
sub
cmc
frstor
fidivrs
ljmp
xor
aam
mov
or
test
in
lods
adc
fistl
sbb
fwait
mov
mov
insl
push
dec
jno
mov
rcrb
xchg
fisttpl
jmp
mov
add
dec
testl
dec
dec
or
mov
cs
cld
lcall
ret
jl
inc
bt
fcmovu
push
in
add
push
call
mov
into
ret
dec
pop
dec
popf
notl
lods
push
cs
out
cmp
pop
mov
fucom
fwait
scas
pop
subl
daa
sarl
jge
adc
cmp
jae
cmp
mov
sub
js
push
shlb
das
sbb
add
pop
cmp
push
jmp
push
mov
mov
sbb
daa
out
push
adc
inc
push
std
and
sbb
sbb
ljmp
les
ss
jae
xor
clc
xchg
jb
push
pop
push
scas
push
call
adc
cwtl
dec
mov
fcmovnbe
jp
push
cltd
xchg
push
dec
das
clc
movsl
vandnps
fcmovne
xchg
aas
jbe
mov
jmp
orl
pop
mov
pop
in
cmc
sti
jg
jb
fistpl
outsb
repz
mov
xor
fldt
xchg
cltd
push
lsl
fstpt
adc
or
dec
push
fistl
add
enter
fildl
scas
fsubs
pmaxsw
test
fwait
lock
fisttpl
xchg
dec
in
loopne
fldl
rcl
imul
int3
and
sub
xchg
arpl
rcr
ret
mov
inc
and
in
mov
fnclex
inc
nop
sub
sub
cmp
adcl
jecxz
fs
fisttpl
in
inc
in
movsb
fcmovnb
mov
lret
xlat
ss
scas
sti
adc
push
cmpsb
jne
jmp
sub
push
or
fs
fcmovnu
js
xor
add
pop
in
lds
xor
mov
ljmp
mov
adc
stc
mov
das
hlt
mov
push
pop
movsl
rcr
fstpt
sub
pop
subb
sub
fldt
xor
lock
xchg
xor
arpl
ret
sub
pop
xchg
jp
sbb
mov
add
xchg
xlat
fsts
mov
pop
fstpl
cmp
mov
lcall
addr16
push
xchg
add
push
or
or
pop
leave
mov
add
pusha
cmp
inc
or
jmp
xchg
mov
and
cmpsl
andl
mov
cmp
or
daa
int
cmp
lods
rcl
pop
dec
xchg
push
pusha
push
mov
jecxz
pop
xchg
jbe
test
lcall
jle
cmp
into
icebp
decl
jl
ucomiss
xor
and
aas
pop
inc
dec
bound
add
fidivl
pop
add
dec
sub
adc
mov
pop
xor
push
sarl
mov
jne
mov
andl
movsl
adc
lcall
icebp
sub
push
cwtl
push
rcr
mov
lock
imul
cli
or
sbb
fildl
jg
mov
add
icebp
std
loop
or
pop
jge
stc
inc
fninit
sbb
jb
push
or
pop
dec
xor
push
add
push
mov
ficomps
mov
or
push
aad
sub
pop
addr16
imul
js
sbb
sbb
fistl
dec
cmp
xchg
ror
inc
dec
mov
outsl
fcmovnb
les
mov
add
fucomi
mov
sbb
xlat
fsubp
dec
out
mov
dec
dec
into
or
pushw
mov
pop
xlat
xor
pop
les
nop
xchg
aam
jne
inc
fstpt
call
loop
jb
sbb
sbb
push
pusha
fcomip
sar
lea
fistpl
or
icebp
fneni(8087
test
xchg
add
pop
jp
push
push
in
mov
cmc
xchg
fpatan
sbb
mov
in
psraw
jb
pop
fistl
mov
int
andb
mov
mov
div
loopne
jp
stos
xchg
loop
fisttpl
pop
dec
cmp
leave
fisttpl
rclb
fimull
sub
call
pop
inc
dec
insb
pop
mov
pop
cmp
mov
pop
lcall
notb
lea
dec
imul
lret
xchg
rorb
fistl
inc
mov
sbb
adc
pop
sub
cmp
fndisi(8087
mov
addr16
push
mov
add
dec
mov
jo
dec
xor
push
idiv
cld
mov
pushl
jae
push
inc
ret
pop
fildl
and
jle
fidivl
dec
ljmp
xchg
dec
mov
mov
adc
cmpsb
test
inc
pop
xor
xor
mov
fstpt
cltd
lcall
fildl
stos
pop
pop
clc
mov
adc
aaa
leave
cmp
arpl
push
mov
and
fsubrp
or
fnsave
add
push
sbb
ret
fs
fistpl
pusha
mov
daa
test
cld
mov
int
fstp
mov
push
loopne
loope
xor
call
mov
jns
cmp
mov
adc
xchg
xchg
pop
repz
push
lods
inc
jo
pop
pop
add
xor
mov
add
add
mov
xchg
push
repz
aad
fldt
stos
cmp
cli
push
out
pop
sbb
ljmp
and
fwait
mov
hlt
pusha
jmp
push
jae
jp
inc
ds
inc
clc
pop
jmp
inc
icebp
xchg
mov
out
inc
lods
and
sbb
push
aaa
pop
sub
in
pop
mov
ds
stc
xchg
sti
mov
push
mov
outsb
xlat
fcmovnu
jnp
divb
add
inc
sbb
enter
int3
ror
xorb
test
jo
dec
adc
rcr
push
sub
inc
cmp
outsl
aas
lahf
cmp
int3
mov
xor
fisubrs
in
push
cmp
stos
push
das
pop
in
dec
jno
cmp
xchg
fnsetpm(287
mov
jb
fcmovnb
jne
mov
clc
into
aaa
mov
daa
jp
and
xor
insb
and
dec
stc
int
xchg
jp
cmpl
stos
adc
sbb
rolb
dec
mov
cmp
add
xor
fcmovne
fstl
push
and
inc
test
fs
lret
mov
pop
push
xor
cmp
push
add
mov
fstp
inc
call
inc
or
sbb
cmp
pop
cli
xor
jecxz
int
js
addb
jne
test
mov
xchg
stos
popf
sbb
inc
mov
ss
insb
pusha
jno
dec
xchg
lret
ljmp
repnz
mov
loopne
ret
fldcw
test
dec
sub
mov
xchg
add
inc
rorb
lock
sub
fstl
ds
test
fisttpll
call
lea
lahf
test
in
int3
lcall
jae
xchg
push
jbe
add
mov
pop
adc
into
fstp
clc
sub
shlb
mov
push
mov
ret
ficomps
fnsave
cmp
shlb
jbe
sub
sub
repnz
out
int
push
inc
jns
and
dec
lcall
mov
mov
orb
pop
ds
inc
mov
sub
jge
fisubrl
jbe
pop
inc
dec
or
loope
sub
cmpsl
je
stc
and
test
xchg
push
iret
fcmovne
sub
adc
subl
test
bswap
jle
sahf
lods
test
dec
movsl
imul
cmp
jb
fmulp
loop
iret
xchg
mov
adc
sahf
fcomp
stc
mov
sbb
shrl
sub
or
loopne
or
test
mov
sbb
pop
jne
push
fldl
pop
std
lock
lea
test
push
mov
jge
lods
rclb
inc
cmp
jbe
dec
neg
pop
pushf
jbe
hlt
jne
dec
orb
movsb
mov
sbb
push
push
inc
and
in
mull
fmull
out
sbbl
fsubrs
fisttpl
pop
add
add
pop
xor
mov
sbb
pop
and
push
push
rcl
cmpsl
push
sbb
fcomi
push
xchg
inc
xchg
inc
or
movsl
cli
js
pop
jb
in
push
out
jecxz
frstor
or
dec
lret
out
push
hlt
call
fldt
movsb
xchg
pop
jbe
adc
nop
fs
scas
add
mov
pushf
pop
xor
je
in
ret
and
insb
push
scas
xor
adcl
pop
push
and
mov
in
clc
roll
xor
aas
xchg
and
out
fdivrs
fimull
xchg
add
inc
adc
cmp
fdiv
adc
and
repz
push
add
push
insb
fisttpl
adc
aam
mov
pop
dec
sbb
in
or
fwait
mov
jno
sti
ss
sbb
std
mov
bound
or
inc
dec
cli
pop
incl
fstpt
js
imul
fcmovne
aam
add
call
add
push
or
out
hlt
adcl
or
or
test
push
jns
mov
mov
divl
jnp
add
mov
jns
dec
shlb
ljmp
fwait
and
clc
cmpsl
call
cmp
icebp
push
and
rcr
push
fdivrs
loopne
adc
ret
call
xor
or
lock
mov
fs
loopne
mov
loope
inc
adcl
mov
fistl
push
or
push
inc
pop
call
pop
mov
adc
out
lret
pop
pushl
call
mov
xchg
add
fldt
call
pop
fstpt
imul
xchg
mov
leave
js
les
or
or
aam
mov
enter
insl
push
stc
push
andb
xor
fcomi
imul
fdivl
test
dec
jbe
out
or
mov
mov
mov
jl
add
repnz
and
pop
xor
fiaddl
call
imul
cmp
sbb
jbe
rcr
mov
je
sarl
pop
pop
add
repnz
fwait
dec
aam
cmpsl
fcmovnu
jge
xor
lea
and
outsl
xor
mov
negl
lock
dec
ficoml
and
fcomi
mov
sub
lret
sbb
cmp
imul
cmp
xchg
cmp
lret
cmpsl
push
cmp
fdivrl
int
xchg
rcr
orl
call
pop
sbb
or
mov
push
bound
fidivl
mov
and
xchg
fistl
repz
fistps
dec
jae
adc
rcr
decl
mull
bound
xchg
dec
repnz
popa
fs
sub
xor
xchg
mov
jo
inc
pop
cmp
inc
cmp
fstpt
mov
mov
jmp
mov
or
fistps
pop
jecxz
jno
popa
xor
leave
test
xorb
dec
fisttpl
pop
cmp
fildl
dec
in
jb
inc
pop
rcr
movsl
xor
mov
sarb
mov
pusha
fisttpl
mov
sbb
ja
je
add
or
loope
xchg
adc
mov
fildl
pop
inc
clc
fs
fcmovne
adc
in
loop
aad
mov
ficoms
pop
pop
push
push
fstpl
mov
clc
stos
insb
add
stc
fldl
xchg
int3
rcr
fs
dec
sub
sbb
dec
icebp
add
in
fstpt
loope
mov
popa
xchg
adc
rcl
pop
stos
mov
xchg
mov
rcrb
add
add
lret
xor
popa
mov
lods
jl
fldt
sti
data16
mov
enter
std
addr16
inc
sbb
aaa
shr
fimull
lock
push
js
loopne
adc
mov
jmp
mov
aas
push
add
inc
stos
sbb
enter
ret
or
jp
xor
fldt
xchg
out
insb
and
xchg
mov
fisttpl
scas
pop
ficomps
inc
mov
cld
mov
pop
inc
push
stos
adc
loope
adcb
pop
mov
cmp
les
lcall
call
xchg
inc
pop
cli
cmp
iret
mov
sbb
or
imul
hlt
push
mov
fistl
ds
aaa
das
or
imulb
idiv
faddp
stos
mov
jge
rorb
fistpl
mov
push
fcomi
jnp
subb
dec
nop
xchg
ds
inc
xor
sub
mov
imul
popa
aaa
fildl
fisttps
fcmovnbe
jmp
add
jno
cmc
inc
call
nop
bound
leave
sub
rcrb
rolb
jmp
fcmovnb
or
cmp
mov
not
jae
imul
xchg
push
jle
push
xor
sbb
mov
fdivs
or
andl
sbb
aam
nop
in
ffreep
test
pop
pusha
pop
lcall
add
int
movsl
test
rol
and
lahf
call
jb
pop
ret
test
fcmovne
aaa
idiv
pushf
icebp
sub
cmpsl
jl
xchg
push
push
aas
inc
insb
in
repnz
aam
adc
fisttpl
mov
stos
or
jg
xchg
push
or
ret
pop
adc
xor
fildl
pop
cmc
and
leave
mov
in
fcmovne
pop
push
outsb
jge
sub
rolb
lods
mov
mov
push
push
and
fistl
in
ret
push
loope
adc
jmp
scas
dec
mov
xor
mov
mov
jno,pn
jns
and
dec
pop
in
loop
dec
xchg
test
sbb
lock
loop,pt
divb
inc
loop
fisubrl
pop
fistl
roll
xor
outsb
loopne
stos
mov
mov
jnp
outsl
adc
orl
sub
or
and
dec
mov
pop
int3
fildl
sti
icebp
mov
mov
mov
es
xor
pop
sbb
sub
frstor
and
jb
out
or
cmp
popf
push
insb
jne
ss
and
ja
and
pop
lahf
jl
mov
nop
fs
mov
lahf
call
out
pushf
repz
and
sbb
cwtl
ret
xor
inc
dec
pop
fistl
xor
pusha
popa
call
xchg
add
je
or
mov
fistl
scas
mov
out
jle
push
inc
lret
push
and
outsl
xchg
pop
shll
in
mov
sub
stos
pusha
push
pop
pop
int3
shll
rcll
pop
cmpsl
daa
pop
cli
fistl
cld
cmp
lea
in
iret
out
push
mov
dec
xchg
sti
divb
or
lret
mov
fcompl
sub
mov
mov
and
scas
test
js
mov
aad
aad
cmc
fidivs
cltd
pop
jmp
cltd
xor
xchg
popl
das
dec
sti
jge
stos
lret
lds
js
push
js
mov
pop
or
sbb
imul
lods
dec
mov
or
fildll
jl
cmc
mov
mov
lock
shrl
push
jbe
adcb
orl
hlt
sub
fists
jno
mov
mov
xchg
and
jmp
test
inc
das
aaa
dec
cmpsb
jmp
jmp
mov
icebp
jb
push
clc
cmp
and
ljmp
inc
jno
in
aad
cli
shlb
dec
cwtl
xchg
in
cmp
xor
out
loop
stos
scas
leave
jp
outsl
lods
cmp
mov
push
incb
ret
xchg
int
and
cmp
stos
mov
mov
xlat
sbb
lods
jbe
sbb
ficomps
mov
jge
sbb
xchg
sbb
pop
and
aas
lret
and
test
cli
rorl
push
cmp
int
dec
int
xor
div
sbb
in
pop
xchg
sub
stos
or
add
lea
adc
sbb
push
cmpsb
sarb
lcall
adc
jg
xchg
sub
fcomi
aas
insl
iret
stos
sbb
sub
mov
cld
jg
hlt
dec
fucom
repnz
fs
pop
lret
insb
pop
aaa
mov
xor
push
sub
cmp
add
cmpb
imul
aas
aas
ficompl
and
aaa
inc
xchg
stos
call
aam
mov
pop
inc
cs
decb
fistpl
cli
inc
add
xchg
push
mov
out
loopne
cltd
in
or
fistpl
daa
bnd
fcmovne
dec
sub
outsl
add
xchg
fistpl
push
pop
xor
fstpl
lock
push
clc
std
sub
xchg
add
mov
adc
cmp
scas
push
sub
jnp
fsubl
jae
pop
inc
lret
pop
xchg
xchg
pop
pop
xor
adc
pop
test
es
cld
cli
jbe
sarl
fildl
stos
outsl
dec
xor
bound
add
ja
dec
call
mov
xor
sarb
ss
mov
stc
dec
mov
sbb
fimull
fcmovnb
mov
imul
div
sbb
fildl
out
daa
ja
adc
imul
lahf
data16
jle
sti
pop
ja
repz
or
push
sbb
cld
fstpt
push
sbb
imul
push
fimull
mov
jle
pop
rcrl
sbb
push
fwait
dec
fldt
and
daa
cmp
cmp
dec
test
scas
jg
xor
iret
int3
ret
fcmovnu
pop
jnp
pop
sub
adc
jl
es
pop
fsubr
pop
mov
mov
std
add
mov
data16
ja
outsb
or
jae
dec
xor
testb
js
push
fildl
inc
call
inc
dec
pop
test
mov
lock
sahf
mov
push
jbe
push
test
xor
inc
pop
cmp
sbb
out
xor
fstpt
pop
iret
enter
aad
cmpsb
ljmp
push
cmpsl
js
adc
mov
cmp
jl
jle
loop
cmpsb
repnz
mov
jp
push
sti
jo
or
dec
outsb
add
sbb
xor
add
mov
in
lds
mov
pop
jno
cmp
sub
inc
adc
lret
dec
dec
popa
xchg
call
sub
sub
aaa
fmulp
mov
arpl
fstpt
cmp
inc
fistpl
adc
ja
xchg
loopne
call
lcall
inc
xor
sub
and
ret
arpl
or
dec
xor
outsl
pop
mov
movsl
push
cwtl
mov
inc
and
mov
out
add
fsubr
loopne
sub
xlat
popf
fstps
leave
je
sbb
in
data16
fcmovu
xchg
pop
cmp
or
jns
sub
add
aaa
pop
pop
mov
shlb
add
out
iret
stc
adc
push
enter
mov
cmp
jnp
fcmovnbe
and
dec
stos
add
mov
les
fstpt
dec
lret
scas
pop
fucomi
je
xchg
sbb
in
sbb
call
insl
xchg
mov
fistpl
pop
bound
int
fldl
pop
ss
in
cs
popa
add
clc
std
out
in
mov
insl
repnz
fstpl
sub
inc
jae
jb
outsl
mov
fnclex
incl
pusha
sub
loope
jmp
fildl
int
outsl
orl
dec
push
push
in
subb
loopne
xor
dec
push
fnstsw
mov
inc
adc
fstpt
sbb
loope
push
jg
negb
test
fmull
sbb
lret
and
lods
mov
cmp
dec
stos
es
movsb
lods
fisttpl
sub
inc
push
jo
push
lock
pop
popa
and
inc
push
fisttpl
testl
fldt
jb
lret
and
mov
pop
inc
cmp
mov
fiaddl
mov
cmpb
ss
in
add
pop
jg
lahf
call
mov
in
sub
imulb
pop
jnp
loopne
loopne
mov
insl
cwtl
or
call
mov
adc
dec
aas
xchg
inc
or
lret
addr16
sbb
push
inc
shlb
and
dec
adc
fisttpl
fs
divb
ja
cmc
std
mov
ficompl
out
fcomi
inc
xchg
cld
lea
adc
in
mov
in
fildl
int3
orl
inc
fisttpl
fld
rorl
decb
call
mov
jns
sub
insl
lahf
or
in
fs
xchg
mov
fdivs
hlt
dec
inc
rcr
lret
fwait
fildl
pop
lock
jno
out
std
push
aam
ss
out
outsb
mov
or
push
js
adc
cmc
dec
rol
push
push
shll
mov
add
fbstp
stos
lcall
scas
sbb
pop
xor
cmc
mov
test
jne
or
xor
stc
test
cmp
sbb
addr16
xchg
pop
adcb
cld
fldt
mov
add
shlb
fcmovne
repnz
sbb
sbb
addr16
fcmovbe
fstps
sub
fistpl
es
js
adc
rcrl
xchg
cmpb
xchg
das
lods
inc
je
lods
fs
push
dec
fstl
fsts
dec
out
call
je
ljmp
xchg
jb
scas
or
pop
and
or
in
dec
outsb
dec
xchg
push
inc
int3
mov
inc
fstpt
dec
loope
adc
movsl
jge
push
cmpsl
cmp
push
sbb
mov
pushl
repnz
cwtl
or
jl
sbb
fldz
fcmovne
mov
in
fldl
mov
adc
movsl
sbbl
fucom
sub
adc
inc
sar
xor
lret
or
das
xor
testb
and
inc
data16
das
lcall
jne
jmp
aaa
lock
neg
cmp
insl
add
sub
push
push
mov
rcrl
es
adcb
xchg
push
lock
loop
fdivrl
pop
push
sbb
cmp
mov
add
xor
push
push
inc
mov
push
fildl
cmc
xchg
cmp
fstpt
iret
or
jb
mov
aad
test
gs
scas
stos
fstpt
add
xchg
push
lea
and
and
push
shl
pop
sub
mov
sub
xchg
sbb
cmp
mov
sub
pop
fildl
pop
iret
repnz
mov
mov
dec
data16
mul
imul
lahf
dec
pop
inc
aas
xchg
xchg
fnsetpm(287
outsb
xor
adc
popf
add
mov
sbb
loopne
addb
mov
mul
jl
lcall
pop
or
xor
sub
jne
cmpsb
pop
je
push
cmp
cs
imul
cld
add
cmp
cmpl
and
int3
movsl
cmp
fistpl
bound
dec
mov
jge
popf
jmp
sbbb
sub
call
sbb
jbe
xchg
ja
imul
mov
loopne
xchg
lcall
sub
dec
clc
lea
pop
dec
push
push
push
sti
fisttpl
mov
sub
fimull
pop
enter
and
dec
mov
neg
loopne
mov
test
sub
sub
aad
pop
popa
je
fstps
arpl
das
ret
mov
mov
xchg
pop
pop
int
pop
pop
or
dec
fstpt
repnz
jbe
je
fidivl
repz
mov
xor
sub
testl
sbb
test
inc
rcrl
adc
fisttpl
lcall
cmp
sbb
jbe
leave
xor
cs
lods
sbb
dec
add
shl
sahf
lods
stc
rcll
jp
repz
pop
leave
push
repnz
cmc
pop
mov
lock
jle
fcmovnbe
test
mov
adc
into
sub
shlb
push
loopne
roll
shl
int
adc
iret
and
add
scas
and
mov
fdivr
clc
in
pushf
inc
add
orl
pusha
cwtl
inc
nop
sbb
or
inc
cmp
ror
xor
push
adcb
repnz
xor
mov
fistpl
cmc
in
decl
xor
xchg
lcall
pop
jno
or
dec
dec
test
xchg
arpl
stos
jmp
mov
out
jp
xor
data16
imul
jb
mov
imul
sbbl
push
cmp
dec
pop
mov
and
mov
mov
in
stos
mov
lret
clc
out
cltd
addr16
std
sbb
or
jne
and
and
fdivp
xor
rcrl
sbb
out
ljmp
jo
mov
xchg
jae
jl
icebp
out
decl
xor
or
mov
jp
adc
icebp
jb
stc
icebp
jb
cmc
mov
les
pop
pop
pop
int
icebp
stos
push
out
dec
loope
daa
dec
out
repnz
fdivp
ficoml
ljmp
dec
jo
mov
cwtl
push
call
pop
dec
rorl
jne
shrb
push
jp
cmp
and
lea
or
pop
jnp
adc
nop
push
push
mov
repz
push
bound
sbb
mov
iret
insb
ds
enter
in
cmp
and
sbb
inc
xchg
xchg
pushf
insb
leave
fnsave
jge
into
cmp
out
gs
mov
stos
fcomi
insl
outsl
sbb
inc
push
mov
test
mov
mov
pop
lds
pop
lret
sbb
push
gs
push
add
clc
mov
or
popa
pop
dec
cmpsl
pop
fnstenv
lret
lods
adc
push
mov
stos
pop
add
jp
pop
sarb
sbb
pop
sti
stos
es
xchg
lods
lcall
sbb
enter
mov
loop
cwtl
and
jne
inc
and
xchg
movd
jg
jge
push
dec
adc
out
sbb
ret
cmp
leave
mov
or
xchg
pop
pmulhw
jno
inc
std
pop
mov
ss
sub
push
das
enter
loop
stos
sti
loopne
pusha
xorl
sub
orb
push
ja
cmpsb
in
rcl
sub
out
stos
inc
and
cmp
pop
mov
mov
jb
sti
add
es
or
inc
stos
jb
in
pop
push
aad
pop
jp
sbb
dec
sti
dec
lcall
sub
ljmp
sti
pop
sbb
xor
pop
or
sar
mov
mov
mov
push
jb
fiadds
jg
mov
sahf
pushl
jmp
push
lods
nop
xor
clc
cmp
add
cmp
dec
roll
pop
push
in
stos
add
jl
sub
dec
add
popf
ss
push
xchg
das
sbb
xchg
stos
popa
jl
mov
pop
jnp
inc
jle
lock
jp
lods
xor
clc
dec
or
stos
sub
fimull
mul
xchg
jle
sbb
dec
lahf
lahf
fbstp
lods
daa
pop
lret
lcall
pop
push
lcall
loop
xor
loopne
leave
or
sub
xor
mov
jmp
js
sub
addl
xchg
add
add
fucomi
hlt
pop
sbb
fldl
mov
fdivs
and
cmpsl
jae
or
lcall
mov
sub
sub
mov
ss
mov
xchg
inc
add
in
fldenv
repz
jg
pop
pop
addr16
sbb
push
push
add
jl
popa
or
call
xor
mov
incl
inc
subl
sub
mov
sbb
pop
cs
loopne
lahf
lret
inc
xlat
and
icebp
daa
sbbb
repnz
lods
sbb
cmp
shrl
jle
mov
xor
lods
mov
outsb
jp
je
inc
lock
fldt
pushf
or
popa
xor
cmp
int
loope
add
mov
aas
pop
xor
mov
mov
push
int
rolb
jne
mov
addr16
lret
mov
push
sub
sbb
icebp
adc
or
push
ret
push
mov
jb
adc
pusha
push
lcall
sbb
in
fimuls
mov
cli
push
lods
sub
xor
mov
sbbb
bound
cmp
push
push
loop
fidivs
xchg
push
testb
mov
push
icebp
imul
add
or
scas
cmpsl
int
repnz
fidivl
dec
push
push
lods
add
lret
inc
and
aam
fwait
add
add
leave
jg
xor
pop
fisttpll
fdivrl
push
mov
pop
fisubs
in
lods
sub
shll
inc
mov
shll
adc
mov
in
mov
fstpt
mov
pop
in
add
leave
jl
ffree
inc
imul
xor
loope
add
cmpsb
leave
popa
arpl
sbb
mov
es
lds
lahf
imul
inc
and
aaa
jg
mov
aaa
mov
and
lods
adc
add
pop
add
mov
jbe
jle
repnz
push
sbb
orb
adc
and
pop
adc
mov
mov
xor
stos
daa
jne
pop
add
add
in
psubsw
inc
and
arpl
in
aad
xchg
push
mov
dec
sbb
jp
cmp
xlat
lods
and
popf
mulb
out
aam
and
flds
inc
pushl
iret
pop
sub
pop
xchg
sbb
insb
lcall
dec
inc
sar
lods
loopne
cmp
iret
jmp
js
xchg
lret
jmp
push
lock
test
call
sbb
sub
test
dec
das
pop
stos
add
insb
fsubrp
mov
loop
jecxz
in
fsubrl
jl
lret
mov
sti
dec
clc
notl
and
sub
push
stos
cmp
sti
jno
mov
stos
jo
mov
mov
aas
xchg
pop
jae
jle
mov
stos
faddl
es
sub
ljmp
aad
pcmpgtd
mov
outsl
xor
addl
mov
dec
lods
ljmp
lods
es
mov
jbe
xchg
jmp
xor
ljmp
adc
das
jl
outsl
lahf
jae
mov
mov
add
test
pop
cmpsl
outsl
idivl
loopne
test
xchg
dec
sub
fcmovnb
push
in
cmp
outsb
and
pop
loop
sbb
mov
out
fucom
loopne
xorl
fistl
rcrl
cmp
mov
mov
jb
sbb
mov
test
loop
xchg
mov
dec
push
adc
insl
clc
loope
in
insb
inc
or
adcb
inc
mov
fistpl
pop
loope
mov
cli
mov
out
mov
cmpsl
add
ret
cmp
rorb
roll
xor
js
es
testl
xchg
and
jbe
xchg
imul
push
iret
cltd
pop
push
call
mov
sbbb
repnz
and
dec
call
push
imul
push
push
pop
adcb
jp,pn
cltd
aam
cmovae
bound
pop
xor
or
sub
mov
jno
push
fildl
fcmovu
inc
xor
cmc
or
rolb
mov
fcmovne
add
rcr
aad
lahf
pop
loope
jbe
push
outsl
add
sub
ret
mov
testb
test
cmp
dec
dec
push
pop
mov
xchg
fiaddl
sti
xor
int3
or
popa
mov
mov
test
out
es
mov
fldt
lods
fstpt
aaa
dec
or
cmp
scas
testl
mov
stos
jnp
pop
mov
add
dec
fmuls
into
lret
mov
out
repnz
inc
jle
enter
fistpl
insl
imul
pop
adc
dec
fisttpl
cmp
int
out
mov
fcomi
dec
cltd
in
inc
enter
fistl
xchg
fldt
cmpsl
mov
js
cmp
mov
or
pop
mov
mov
neg
in
mov
aas
fisttpl
ja
xor
jg
fistl
sbb
cmp
cwtl
ffree
mov
std
cmpsl
add
adc
loopne
inc
test
inc
in
aad
ficompl
fimull
pop
xchg
push
fistps
incl
loopne
repnz
mov
fstpt
hlt
out
push
sub
jae
insb
add
subl
ja
arpl
call
push
mov
fcmovnu
push
pop
test
fisttpl
push
lock
loop
and
jo
xor
test
or
repnz
push
inc
mov
fldt
cmpsl
cli
aad
mov
out
mov
xchg
lea
popf
js
xchg
push
dec
sbb
call
call
fcmovnu
xorl
push
arpl
jle
fcmovnb
pop
xchg
je
daa
lahf
notb
cwtl
std
iret
dec
fisubl
outsl
lcall
sub
dec
xchg
and
aad
add
and
mov
repnz
push
fistps
js
loopne
xchg
sub
cwtl
mov
fistpl
outsl
cmc
movsl
pushf
xor
mov
lds
pop
imul
call
adc
sbb
push
xor
mov
cmpsl
repz
lcall
sub
nop
js
scas
sub
test
add
and
mov
jge
adc
mov
add
mov
int3
mov
pop
sbbl
push
pushf
or
pusha
lods
loopne
and
bound
dec
add
fstpt
sub
mov
sbb
push
lock
test
call
inc
popf
pop
or
out
bound
sbb
fsubp
shll
fcom
fisttpl
test
push
dec
push
adc
scas
jb
jge
sbb
and
call
mov
or
ficompl
fucomi
inc
std
shlb
lods
dec
call
jne
dec
xor
xor
cwtl
xor
lcall
mov
push
imul
dec
mov
in
hlt
int3
iret
fildl
jnp
push
fcmovne
icebp
jmp
cwtl
imul
lds
fcmovnu
mov
pop
xchg
mov
dec
dec
imul
shll
js
mov
lahf
imul
fs
lret
ror
idivb
dec
mov
mov
fistpl
push
sbb
call
aam
cmc
enter
and
sub
mov
xchg
cmp
or
and
pushf
pop
pop
cmp
js
mov
or
lock
inc
gs
mov
stc
push
sub
or
push
push
xchg
jno
mov
fninit
scas
pop
xor
jg
lcall
xchg
jnp
inc
popa
out
out
sbb
xchg
push
sbb
cld
movsl
mov
or
mov
leave
push
popf
fcomps
stos
pop
cmp
or
aam
imull
sti
pop
xor
fisttpl
sbb
fnstsw
lret
scas
mov
js
sub
and
mov
stos
mov
in
push
fisubrl
cs
mov
xor
in
aam
fcomi
stos
push
icebp
inc
mov
and
push
mov
jne
add
imul
cmpsb
mov
xchg
es
mov
jmp
inc
mov
fcmovnb
add
fcmovnu
nop
adc
push
lret
fistl
inc
outsl
push
clc
or
into
es
lahf
mov
loop
mov
pop
xchg
pop
enter
cltd
xchg
fcmovnbe
push
add
outsl
lods
fldt
dec
mov
fistpl
and
pushf
adc
push
fucomi
pop
fs
mov
das
xor
cmpb
mov
lods
int
movsl
sub
xchg
mov
jmp
pop
scas
xchg
jb
mov
sub
cli
or
ljmp
add
test
lods
fldt
dec
mov
pop
int
pop
cwtl
iret
xchg
cmp
inc
mov
shlb
pop
xor
adc
cmp
add
adc
sbb
fsub
jnp
jp
cmp
lds
iret
or
fdivl
cmp
xlat
test
insb
fldt
pop
push
mov
xchg
idivb
aam
push
idivb
mov
sbbb
test
cmpsl
jbe
test
rcrl
jp
pop
std
add
adc
iret
xor
mov
lock
jbe
clc
sbb
sub
jnp
add
fstpt
icebp
iret
fldt
mov
cmpsb
in
int3
out
and
fistpl
ss
fnsave
icebp
mov
pop
pop
leave
in
mov
sbb
and
sbb
mov
adc
rcrb
shlb
push
fistpl
push
jae
fistl
push
push
fucomi
mov
add
loopne
mov
adc
sub
scas
loopne
mov
std
dec
imul
jne
fnstsw
sarl
jb
stc
inc
dec
mul
sub
fistl
ss
pop
jae
mov
loopne
rep
pop
inc
xor
jnp
push
fldt
arpl
add
sahf
fdivs
incb
mov
mov
std
pop
pushl
fcmovb
inc
inc
add
jg
call
xchg
sbb
shr
lods
or
fldt
test
dec
fistpl
lds
js
cli
filds
xchg
bswap
ljmp
mov
mov
cmp
daa
fdivs
push
lret
jge
mov
ret
aaa
and
popf
sbb
clc
mov
adc
mov
mov
fisubrl
pop
pusha
lods
out
adc
repnz
sub
fcmovnu
aad
clc
sub
sub
outsl
shll
jbe
fildl
data16
add
push
nop
addr16
adcb
loope
jge
stos
inc
les
xor
add
mov
inc
mov
push
cmc
sbb
lods
cmp
cli
call
sub
cmp
repnz
call
jg
scas
rcr
outsl
mov
mov
mov
cmp
jnp
ret
sbb
dec
loop
int3
add
repz
fldenv
cld
lcall
stos
push
leave
push
mov
fsubl
lock
sub
sbb
ljmp
rclb
lods
mov
cmp
inc
xor
mov
push
out
in
pop
xchg
ljmp
jae
inc
mov
into
lcall
push
sub
in
loope
cmpsb
push
popf
mov
in
mov
fmull
je
call
sar
pop
popf
push
call
jp
push
clc
xor
out
lods
push
jg
out
cli
stos
imul
jmp
nop
rcrl
cs
int
dec
jb
sbb
jecxz
aaa
lahf
mov
mov
out
push
lret
xchg
lods
mov
call
imul
cli
fcoms
mov
sbb
mov
and
add
ffree
fadd
pop
push
aaa
pop
stos
mov
int3
imul
fisubrl
stos
or
jnp
mov
cmpsl
fsubs
repnz
adc
out
jnp
and
or
loop
lret
mov
stos
mov
mov
ret
stos
jp
repnz
clc
clc
repnz
or
jl
inc
push
cmpsl
mov
lock
fsubs
leave
insl
fistpl
mov
neg
lahf
insl
stos
pop
std
xchg
and
vcvtss2sd
lock
test
imul
daa
push
mov
xlat
jp
cmp
movsb
mov
in
test
loopne
mov
and
and
lock
mov
mov
jp
sbb
mov
or
sub
loopne
mov
adcl
inc
inc
pop
sbb
push
int3
push
mov
jbe
pusha
sbb
out
clc
les
and
push
sub
and
fwait
jl
mov
loop
rcll
sub
sbb
dec
aas
sbb
push
xor
sarb
dec
push
clc
xchg
imul
cmp
jbe
imull
add
movsl
popf
inc
mov
dec
shll
mov
jbe
testl
js
loope
dec
sbb
dec
and
stos
popa
loope
or
shll
xor
lret
ret
sub
sarl
sbb
fistpll
mov
loope
pop
imul
call
fs
sub
imul
push
es
push
jge
lea
dec
int
int
rcr
pop
adc
jge
lea
mov
cltd
int
iret
std
lds
es
mov
sbb
sbbl
jmp
inc
js
test
aam
inc
stc
popa
pop
and
insb
sbb
incb
mov
add
test
dec
cmpsb
sti
inc
push
jb
dec
stos
jns
and
dec
adcl
cmpb
pushf
sarl
lcall
adc
xchg
push
mov
sbb
sbb
jmp
add
test
jmp
test
push
arpl
or
outsb
aaa
cmp
adc
or
lret
fcompl
in
sub
fs
js
sbb
sbb
sbb
jmp
testl
mov
pop
adc
shr
loopne
push
dec
loop
test
fsubs
cmc
inc
adc
xorl
ljmp
mov
lret
add
mov
cmp
ja,pt
out
xchg
mov
mov
sahf
dec
ficoml
push
and
xor
fidivs
notl
js
stc
ja
xchg
jns
jns
jae
mov
push
mov
mov
shlw
jle
mov
xchg
shll
rcll
xor
push
js
mulb
mov
popa
cwtl
andl
ror
rol
fadd
loope
jmp
sub
movsl
imul
sti
outsl
or
ljmp
popf
inc
ret
insl
fistpll
sub
pop
stos
xor
mov
dec
dec
daa
fimuls
or
sub
cli
push
scas
insl
arpl
inc
cli
jg
xor
dec
mov
sub
out
jmp
pop
je
sbb
ds
adc
fiaddl
mov
and
dec
mov
adc
adc
daa
js
stos
in
mov
dec
call
push
cmpsl
insl
gs
into
scas
stos
xchg
notb
pop
stos
jb
inc
sbb
sbb
enter
shlb
ja
xchg
js
adcb
sub
xchg
dec
or
adc
lea
push
mov
cs
dec
jmp
add
cmpsb
inc
das
ret
cmp
jmp
std
and
mov
les
leave
sbb
xchg
inc
adc
pushl
shl
outsl
jns
clc
rcrl
inc
pop
inc
cmp
dec
push
push
pop
jbe
imull
clc
jl
test
mov
cmp
mov
mov
test
in
in
test
add
test
jp
sarl
push
mov
insl
jns
jns
jns
jns
jns
adcl
mov
mov
pop
aad
fstl
jbe
div
jns
clc
add
or
adc
fisubs
sub
xor
cmp
inc
test
pop
test
je
jl
test
pushf
test
pop
mov
rcl
fadd
in
in
mov
mov
pop
mov
add
sarl
push
pop
pop
sub
out
cmp
pop
push
dec
adc
jecxz
ds
inc
push
and
inc
mov
xchg
scas
mov
mov
sbb
sbb
jmp
push
push
loope
negl
dec
lahf
dec
adc
dec
jg
stos
ss
push
insl
or
cmpsb
fistps
fwait
sbbb
shll
es
push
sub
cmp
inc
sbb
pop
or
pop
mov
jns
jns
jns
popa
loop
add
and
mov
popa
adc
mov
and
pop
gs
sbb
cmp
stos
lods
pop
or
inc
mov
icebp
push
mov
jbe
out
popa
add
adc
ljmp
scas
mov
dec
xchg
es
pop
fcoml
repz
xor
insl
pop
sub
push
mov
stc
push
aaa
out
push
cli
dec
jb
mov
call
sbb
dec
dec
sub
sarl
rcll
mov
sub
jno
fcmovnbe
ds
inc
bound
lcall
das
push
pop
push
jnp
mov
notl
dec
fisttpll
dec
or
push
jae
cltd
ss
cmp
xchg
push
fsubrl
popf
imul
sub
pop
or
mov
test
mov
inc
push
mov
jecxz
sub
mov
sbb
dec
mov
push
inc
mov
pop
out
mov
mov
cmp
cmp
add
cmp
inc
ds
fs
pop
rclb
out
dec
jmp
dec
pop
sub
cli
incl
repnz
inc
and
adc
pop
call
sub
dec
push
out
lods
fistl
lea
popf
inc
lods
push
mov
mov
popf
iret
popf
sub
int
lret
cld
push
mov
jl
jp
fmul
and
push
roll
aad
cli
sbb
cmp
mov
jo
sahf
adc
adcb
pusha
push
repz
pop
ficoml
adc
pop
out
icebp
sbb
sbb
sub
push
test
push
jo
jb
sbb
inc
jmp
adc
adc
sub
push
xor
jae
mov
rcrl
neg
push
mov
and
or
aad
arpl
mov
dec
mov
notl
xor
sbb
jmp
int3
test
sahf
jge
xchg
imul
add
xor
bnd
movl
scas
mov
mov
xchg
ja
out
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
sbb
pop
or
mov
xchg
xchg
xchg
push
pusha
rclb
add
ret
pop
mov
repz
sbb
das
inc
push
imul
xchg
jo
add
sub
xor
inc
mov
lret
test
cmpsl
adc
inc
pop
adc
fldl
push
push
mov
mov
loop
add
mov
aas
mov
insb
sar
jp
pop
sbb
cmp
insl
add
inc
sahf
dec
mov
sbb
dec
jns
clc
addr16
repnz
incb
xchg
and
inc
std
popa
mov
sub
lock
loop
das
cmp
pop
movsb
dec
jecxz
sbb
cmp
adc
push
push
andl
ds
jno
int
and
sub
push
jl
shrb
test
jecxz
cmp
stos
add
mov
push
ja
jg
xchg
imul
jo
scas
sub
test
xlat
popf
fists
out
jge
push
and
pop
push
pop
push
pop
es
cs
ss
ds
inc
pop
dec
pop
push
pop
pop
pop
data16
in
stos
div
repnz
jmp
loopne
jbe
negb
pop
js
stc
test
jns
jns
jns
insl
cli
popf
repnz
jge
lea
lods
mov
aaa
and
dec
ljmp
dec
and
stos
faddl
stc
cwtl
in
mov
push
adc
out
repz
sti
insb
pop
jb
sbb
and
sbb
mov
aam
cmc
and
call
scas
cmp
popf
mov
mov
jo
adc
out
sub
inc
lods
scas
daa
idivl
lea
mov
fwait
lret
in
inc
aad
imul
insl
add
lea
popf
and
xor
fldenv
sarl
rcll
ret
shr
test
xor
imull
mov
jg
cmp
js
stc
and
pop
jbe
inc
mov
sbb
and
sub
xor
cmp
inc
jecxz
jmp
repz
sti
adc
dec
adc
xor
cmp
jl
jg
jns
jns
jno
sub
arpl
jnp
push
dec
sbb
jge
lea
popf
lods
sti
mov
dec
pop
adc
test
mov
mov
or
stos
popf
lret
ret
int
movsb
pop
pop
push
cmp
mov
addr16
sbb
sbb
dec
jo
sahf
jo
stos
jecxz
jmp
repz
test
mov
lods
and
pop
sub
sub
xchg
cmp
mov
roll
dec
pop
sbb
push
fsubp
mov
adc
dec
pop
jno
xchg
in
test
add
push
mov
mov
iret
rclb
pop
xchg
xchg
mov
out
add
or
cmp
xchg
inc
stos
pop
adc
sub
mov
add
daa
cmp
lahf
mov
aad
inc
adc
adc
jae
and
rolb
popa
add
mov
push
ds
lret
adc
xchg
sbb
xchg
lea
cmp
pop
cli
movsl
lcall
sbb
add
sbb
rcrb
push
add
mov
cmp
jp
adc
jbe
lods
sti
jb
push
sti
push
sub
xchg
test
or
insl
jle
les
sarl
stos
and
inc
adc
sub
js
stc
push
jns
popa
in
lock
and
inc
fbstp
and
stc
rcll
and
int
int
lret
cltd
pop
mov
and
aas
fists
xor
dec
aaa
adc
adc
jmp
je
fisubrs
lret
pop
sarl
mov
aas
fdivrl
lret
inc
fcoms
jle
push
xchg
stos
int
push
xchg
pop
in
out
sub
std
mov
inc
xchg
dec
jmp
andl
lahf
mov
ss
aas
mov
pop
push
pop
shl
push
pop
insb
xchg
pop
lret
mov
and
je
iret
push
mov
push
dec
negb
jo
jl
xchg
clc
jmp
sub
pop
jns
jns
jno
cld
cli
pop
in
add
dec
cmp
dec
and
xor
push
push
pusha
push
jp
mov
inc
rcrl
insl
jo
mov
jmp
rcll
imul
lahf
shrl
ret
jp
mov
cwtl
pop
xchg
sbb
sbb
sbb
sbb
add
inc
imul
rorl
nop
inc
mov
mov
mov
int
adc
sub
movl
jge
mov
jmp
adcl
insl
sbb
dec
cli
jecxz
fcmovb
inc
mov
sti
mov
adc
andb
inc
loope
and
dec
mov
adc
and
int
lea
jg
mov
mov
repnz
std
lret
mov
lea
inc
orb
inc
mov
enter
add
push
ret
push
cmp
sbb
and
cs
inc
pop
xchg
fs
fisubs
loop
mov
inc
inc
xchg
add
lahf
addr16
and
jns
jns
popa
call
push
mov
ret
call
inc
push
and
cld
mov
fistpll
pop
jo
pop
sbb
sahf
cmp
repz
mov
cmpsl
cmp
mov
adc
push
cmc
es
sti
jmp
les
sub
pop
testb
jge
lea
lret
dec
lods
es
jmp
pop
bound
ffreep
std
or
mov
push
jno
fisubrs
cmp
mov
sarl
cmp
dec
daa
ret
int3
inc
jge
xchg
sbb
xor
mov
dec
adc
lcall
enter
adc
fwait
mov
jo
sbb
cmp
mov
ficoms
sbb
jns
push
loope
lcall
lret
inc
mov
sbb
mov
ret
inc
inc
push
decb
stos
shlb
adc
in
push
inc
repnz
or
bound
outsl
mov
loop
dec
sbb
xor
push
pusha
push
jle
xchg
sub
cmp
inc
pop
movsl
mov
mov
imulb
pop
inc
mov
dec
jno
bound
or
and
mov
lret
mov
stos
mov
rolb
adc
in
and
fwait
inc
push
rorl
mov
ds
inc
decb
push
push
mov
rcrb
pop
sbb
cmp
adc
insl
mov
xor
mov
testb
and
jle
movsb
stos
mov
adcl
out
push
lods
arpl
pop
fildll
jbe
cmp
pop
xchg
cmp
ds
or
inc
loope
nopl
mov
xchg
adc
inc
jmp
dec
mov
dec
add
in
mov
lret
cwtl
add
fnstsw
pop
pop
cltd
xor
jp
cmp
jbe
mov
jo
popf
mov
jnp
sub
jne
call
and
cmp
fucomi
pop
dec
push
mov
mov
ss
cmp
and
and
in
push
repz
jbe
pop
andb
pop
mov
ds
insb
pop
mov
mov
sbb
xchg
ds
sahf
outsb
cmpsb
pop
inc
mov
pop
testb
popa
in
dec
xor
in
test
lds
loope
mov
ror
adc
inc
sub
shl
fmull
inc
orb
orb
cmp
lahf
xchg
add
fcompl
cmp
rcl
xor
and
out
jecxz
loope
cmp
into
js
xchg
jmp
fdivl
and
dec
hlt
es
lcall
adc
repnz
or
sahf
and
clc
lods
insb
hlt
sub
js
mov
lret
lahf
adc
add
ss
lret
mov
in
push
inc
pushf
mov
in
dec
cmp
clc
push
das
clc
cmpsl
jo
notl
adc
push
sub
dec
nop
cmp
dec
pushl
adc
pop
decb
shr
das
lret
pop
push
ficoml
aaa
sub
jmp
test
jecxz
cmp
lahf
fdivr
pop
xor
fucom
in
daa
imul
cmp
clc
scas
shr
std
pushf
lahf
xor
dec
int
int
int
int
inc
lret
push
sbb
repnz
pop
and
pop
inc
mov
insb
jns
jns
outsl
mov
pushl
shrb
fwait
in
std
add
clc
cmpsl
sub
popf
imul
int
xor
pop
jns
sbbl
xchg
pop
mov
pop
mov
cld
sub
jb
test
jmp
cmp
cli
dec
rcll
shrl
mov
jo
popa
ss
rol
into
mov
pop
jmp
negb
mov
dec
je
ja
insl
jecxz
popf
lcall
xchg
cmp
adc
and
and
sub
xor
pop
pop
outsb
loope
mov
xchg
mov
sarb
sub
jecxz
pop
sbb
xchg
rcrl
dec
mov
adc
inc
cli
adc
ss
dec
and
sbb
mov
nop
sbb
dec
and
and
add
or
adc
lret
sub
cmp
add
jae
xor
addl
shll
mov
inc
loop
ljmp
sbb
lcall
mov
stos
fnstsw
mov
popf
fwait
mov
lret
int
stos
and
rorl
adc
sub
xor
cmp
inc
add
pop
pop
mov
jae
jnp
addl
sbb
fwait
rol
ror
rcl
aad
jne
mov
jecxz
jmp
repz
adc
xor
mov
xchg
int
int
int
dec
inc
pop
mov
pop
sarl
ljmp
or
cmp
inc
mov
or
ret
arpl
jmp
sbb
incl
cmp
adc
adc
and
sub
or
icebp
bound
dec
push
push
insl
pop
jge
cs
jnp
pushf
jp
int
int
int
dec
pop
sub
ret
daa
sti
dec
loop
ljmp
jmp
test
xor
add
fistps
lret
sbb
jb
jp
and
xchg
rcrl
mov
mov
rcl
fidivrl
jl
iret
aad
imul
ret
imul
sbb
sbbl
sbb
stos
mov
call
push
sub
pop
adc
pop
and
pop
xor
pop
inc
pop
dec
pop
push
pop
pop
pop
bound
pop
jb
jp
sbbb
xchg
pop
lcall
loop
ret
pop
rcrb
and
pop
jg
int
int
sub
pop
push
cmp
adc
insl
cli
mov
push
or
sbb
int
int
mov
pop
push
pop
pop
pop
bound
pop
jb
jp
sbbb
xchg
pop
lcall
jmp
mov
push
jmp
imul
add
xor
pop
sub
pop
cmp
and
in
pop
orl
push
sbb
loop
cmp
add
add
adc
sub
add
test
ret
mov
adc
arpl
sub
mov
rcrl
stos
push
or
push
sbb
jmp
mov
mul
inc
sbb
inc
js
arpl
popa
dec
rcll
mov
jo
in
sub
mov
jb
pop
dec
ljmp
sbbl
lods
inc
pop
int
dec
sub
pop
jp
sbbb
lcall
push
add
loop
mov
adc
bound
lcall
sti
shrl
out
js
and
xchg
mov
mov
sub
dec
mov
shrl
in
jnp
mov
fwait
sbb
stos
shll
dec
jmp
add
and
pop
cmpsb
push
jb
jp
cmp
xchg
insl
lcall
jo
fidivrs
sub
fisubl
jmp
repz
or
clc
stos
and
jns
jns
jno
mov
lcall
pop
ficoml
sti
sbb
sbb
sbb
ljmp
pop
cmp
pop
lret
adc
push
ljmp
push
or
adc
xor
cld
or
jnp
sub
test
inc
cltd
ss
sub
jnp
push
stos
xchg
mov
mov
mov
mov
push
mov
loop
ljmp
or
sub
inc
dec
push
or
mov
orb
lcall
mov
ficoml
jns
insl
adc
cli
sti
or
sub
popa
add
pop
xchg
fildl
imul
jecxz
mov
pop
mov
and
mov
mov
pop
insl
or
push
sbb
aad
fildll
dec
loope
pop
shll
mov
mov
jecxz
call
test
ret
shrb
clc
inc
xchg
push
mov
sahf
or
arpl
xchg
push
push
inc
jp
add
nop
mov
mov
shll
rcl
sbb
jmp
push
and
jecxz
mov
jmp
push
mov
xchg
pop
xor
pop
fwait
pop
jnp
fstp
xchg
xchg
sbb
daa
xchg
jbe
clc
es
jp
sbbb
lcall
sub
mov
pop
mov
inc
mov
insl
arpl
jnp
mov
mov
sub
mov
lcall
xchg
push
push
jb
jp
cmpsl
lret
and
jo
inc
pop
add
jae
jnp
xorl
mov
cmpsl
sbb
push
cmpsl
jb
fisubrs
rcrb
jmp
sbb
mov
jle
jb
sbb
orb
cmp
xchg
jnp
outsl
and
add
jno
daa
add
outsb
lret
xor
int
mov
pop
ret
pop
lret
pop
shrl
adc
pop
cmp
jl
ficompl
lret
jmp
inc
rorl
scas
sbb
jnp
mov
push
repnz
repnz
mov
mov
cmpsl
add
stos
push
fwait
xchg
adc
int3
jae
adc
ljmp
adc
outsb
xchg
and
repz
int
int
sub
xor
jmp
cmp
insl
sbb
bound
push
jp
aas
pop
mov
xchg
in
mov
pop
mov
add
or
cmp
pop
mov
add
jae
or
mov
ret
pop
repnz
xchg
mov
lcall
clc
adc
jns
insl
pop
pop
mov
mov
mov
cmpsl
add
or
dec
cmc
inc
es
ret
adc
shr
sub
pop
push
cli
insl
add
lea
popf
dec
dec
clc
xlat
jb
xchg
popf
mov
stos
out
jae
dec
sarl
mov
ret
sub
sub
jecxz
ljmp
push
pop
jp
mov
mov
add
sub
shll
pop
fwait
and
pushl
sbb
lcall
sub
push
sub
fwait
stos
mov
loop
repnz
pushl
jle
cmpb
mov
roll
or
sbb
in
xchg
arpl
xor
pop
bound
jmp
aas
xor
std
and
push
dec
pop
cmp
jecxz
xorl
imul
inc
mov
jmp
movl
jae
cld
sbb
dec
add
push
sub
inc
push
lods
cmp
pop
or
pop
pop
xor
test
mov
repnz
in
dec
jne
cmpsb
pop
stc
shlb
pop
jecxz
push
xchg
cmpl
lcall
inc
push
pop
sti
shrl
dec
cmp
or
xchg
sub
sub
in
jp
sub
mov
cli
insl
xor
jnp
jnp
mov
xchg
adc
in
mov
sub
push
push
bound
mov
ret
sbb
sub
outsl
js
pop
outsl
imul
push
xchg
push
insb
pop
mov
aas
sbb
mov
jg
addl
insb
and
sti
jg
jnp
mov
jecxz
cli
jo
push
and
sbb
movzbl
adc
push
cmp
mov
or
xchg
mov
mov
fwait
or
jbe
lret
repz
xchg
or
ficoms
lods
pop
push
push
into
es
push
sbb
add
insb
dec
inc
and
fwait
cmpl
cs
sahf
add
jle
clc
sub
pop
jbe
lods
and
rcrl
mov
in
push
and
cmpb
lods
add
inc
mulb
loop
mov
adc
push
push
push
sub
ljmp
mov
mov
repnz
loop
and
push
lret
lcall
add
sbb
ret
inc
cli
mov
push
in
call
add
fwait
fwait
call
add
lea
mov
or
imul
cmp
jmp
xchg
xorl
jnp
xor
xchg
jb
jnp
movsl
fidivrl
cmp
jnp
cmpsl
loop
cmpl
arpl
mov
arpl
mov
dec
jae
lret
jo
pop
dec
lret
pop
ret
jnp
insb
pop
jg
ficoml
ja
mov
jnp
jae
xor
insb
adcb
sti
xchg
push
and
jecxz
cmp
xchg
outsb
insb
jle
mov
xchg
ljmp
or
pop
stos
insl
jmp
pop
imul
cs
stos
jg
jmp
push
xchg
imul
mov
push
add
push
sbb
cwtl
jae
mov
and
dec
mov
and
jae
xchg
jmp
xor
and
rolb
xchg
mov
iret
and
ret
repz
mov
fwait
xchg
inc
mov
mov
ret
repz
mov
lock
xor
scas
push
mov
mov
sbb
ljmp
jb
mov
scas
sub
stos
push
mov
mov
and
xor
stos
mov
mov
add
pop
mov
popf
adcl
in
ljmp
stos
fadds
aaa
add
push
or
cli
repz
insb
sub
stos
test
jo
lret
imul
and
pushf
lcall
dec
xchg
lock
sti
sub
stos
xor
ljmp
pop
mov
shll
pop
sub
push
jo
mov
ljmp
and
call
ret
dec
and
pop
pop
bound
pop
push
sbb
mov
push
xchg
lock
divl
jg
rcrb
and
sub
mov
jecxz
jp
ret
in
or
fisubs
inc
jmp
loope
dec
jg
nop
sar
ret
gs
popf
mov
repz
jnp
call
dec
ljmp
jmp
addr16
pop
push
call
subb
and
call
jo
pop
cmpsl
adc
addr16
test
xor
lcall
insb
imul
xor
dec
lret
push
add
push
add
repnz
pop
jecxz
jp
mov
insl
ds
scas
std
aad
adc
out
xor
cmp
pop
pop
pusha
mov
xor
stos
sub
mov
lcall
dec
loope
push
mov
mov
dec
and
mov
imul
jbe
fstpt
bound
neg
cmp
dec
ds
xchg
cli
cmp
sbb
jle
xchg
rcll
sarl
add
add
inc
shrl
stos
pop
std
cli
push
xor
scas
in
sub
jnp
sbb
mov
and
inc
dec
inc
mov
sbb
pop
cmp
inc
dec
es
jmp
mov
ds
out
pop
mov
popa
dec
in
dec
sbb
mov
loopne
das
pop
cmp
filds
xlat
add
cmp
aas
stos
mov
repz
jl
xchg
jnp
dec
mov
adc
push
cmp
xor
cli
call
inc
repz
add
js
or
call
ret
sub
cmp
mov
addr16
insb
inc
or
xchg
jo
mov
adc
push
and
jg
cs
inc
clc
xor
sbb
aaa
das
sti
jle
adc
mov
gs
adc
add
jo
fisubs
rcll
mov
mov
pop
dec
xor
ds
loop
fsub
xchg
ljmp
dec
ds
xor
sub
out
lret
fldenv
ret
jp
das
sti
and
mov
pop
test
add
fcmovb
push
aaa
push
and
ds
outsl
in
xchg
pop
pop
xchg
push
push
cli
sti
adc
pop
cmp
adc
ds
fcompl
pop
call
dec
adc
add
xchg
ds
repnz
js
jecxz
loope
pushf
and
or
aas
dec
insb
popa
adc
sbb
mov
inc
jmp
popa
sbb
jecxz
cmp
test
in
fwait
cli
xchg
and
or
int3
sub
das
xor
inc
or
out
adc
sub
cmp
pop
dec
inc
fldenv
call
cmp
sub
cmp
repnz
cli
sub
shll
cli
sbb
push
dec
lods
push
sbb
xor
pop
daa
orl
repz
push
mov
mov
nop
mov
xchg
lods
fwait
movsb
insl
pop
jge
lea
cmp
dec
fimull
stc
and
in
popf
xchg
inc
jnp
inc
outsb
mov
cmpsb
mov
and
cld
cmp
sbb
mov
gs
mov
sub
ljmp
adc
add
loopne
push
push
call
dec
push
push
mov
jle
jp
push
adc
jnp
jb,pt
jmp
dec
mov
mov
cmp
std
loop
mov
or
jb,pt
push
inc
aas
mov
insl
push
jge
mov
and
mov
mov
lret
mov
and
outsl
jecxz
inc
mov
sbb
insl
sbb
repnz
leave
imul
in
mov
sbb
jmp
jge
addr16
sahf
add
or
push
int3
ret
cmp
inc
and
stos
lcall
es
ret
dec
arpl
sbb
pop
add
xor
in
arpl
jbe
sbb
adc
mov
sti
dec
or
or
movsb
fimuls
mov
sti
out
jno
mov
mov
lock
push
jo
mov
mov
in
fwait
movsb
adc
andb
mov
sbbb
in
std
jp
ja
pop
mov
fidivrl
lock
mov
sahf
push
dec
loope
lods
inc
divb
ret
sti
sub
in
imul
repz
mov
lret
dec
insl
fwait
lcall
ljmp
xor
testb
pop
add
sbb
dec
and
les
pusha
dec
cmp
in
out
and
inc
inc
lea
xor
inc
sti
and
sub
out
nop
xchg
and
mov
rclb
mov
rcrl
in
push
call
imul
fwait
cmp
mov
pop
mov
in
sahf
stos
fcompl
dec
mov
push
in
push
add
xchg
jl
jb
xchg
or
sbb
cmp
mov
inc
nop
dec
sbb
in
sar
push
push
sub
rorl
testl
push
add
out
push
or
lock
push
imul
clc
inc
outsb
fwait
mov
filds
inc
xor
mov
aas
jmp
out
push
mov
je
jmp
push
push
sti
fimull
cli
or
outsb
inc
sub
cmp
in
dec
pushf
out
push
lcall
adc
in
and
sti
adc
mov
dec
addr16
mov
in
ds
ret
fiaddl
jb
stos
and
inc
out
mov
or
jmp
jge
push
sbb
push
loopne
inc
or
call
mov
pop
push
cmp
outsb
or
push
cld
sti
lock
out
pushf
mov
sti
sbb
push
lret
cmp
cltd
cmp
dec
lcall
cmp
push
loop
cmc
dec
push
rcr
jle
dec
in
dec
xchg
mov
outsb
dec
add
lock
rorb
fisubs
data16
cmp
sbb
loopne
push
icebp
push
dec
push
or
fimuls
push
inc
mov
mov
adc
ret
and
cmp
dec
jns
lods
lods
in
jo
lock
popa
pop
aaa
ljmp
mov
sub
movsb
jb
ds
loopne
mov
adc
mov
ljmp
inc
es
lret
sahf
jno
popf
push
lret
jg
add
add
insb
xorb
cmc
pop
mov
push
scas
lock
popl
mov
repnz
aam
push
cmpsl
inc
or
dec
add
sbb
sbb
sub
jbe
fwait
out
add
fimuls
mov
dec
push
test
call
jecxz
repnz
into
insb
dec
bound
add
repz
les
or
arpl
in
in
dec
insb
mov
xchg
push
dec
or
sub
inc
mov
lock
mov
gs
lcall
cs
insl
cmp
inc
rcr
daa
rcr
mov
and
lea
push
js
div
fwait
loope
push
xchg
sti
push
push
sbb
dec
pop
lods
cmp
imul
outsl
mov
lea
inc
sub
dec
jbe
out
dec
test
notb
mov
cmc
addb
repz
repnz
pop
mov
or
repnz
pop
fs
sahf
cmp
xchg
movsb
mov
xor
icebp
jmp
sbb
fcomi
cmp
and
jmp
lds
inc
push
mov
testb
je
xchg
dec
popf
pop
or
mov
fcoms
decb
movsb
push
mov
cmp
sbb
push
dec
pop
dec
mov
add
xor
loop
inc
dec
sbb
inc
testb
test
sub
push
mov
ficoml
jp
dec
pop
push
dec
popa
jle
mov
gs
jp
cmp
enter
mov
jnp
adc
push
mov
hlt
cmc
jp
inc
cmp
pop
lcall
stos
daa
dec
xchg
cmp
pop
jns
sbb
in
sbb
xorb
pusha
mov
pop
mov
pop
dec
rorl
dec
sarb
pop
scas
test
icebp
mov
faddl
add
jmp
pop
in
mov
test
push
pop
push
outsb
pop
mov
movsb
in
negb
sbb
dec
adc
jle
ds
or
ret
testb
rolb
sub
testb
popa
jl
jno
and
mov
cwtl
pop
xor
cmpsl
int3
push
sbb
and
and
fstpt
inc
in
inc
sbb
adc
repnz
push
out
stc
fiaddl
push
sub
je
outsb
mov
inc
pop
xlat
pop
fmull
lock
cli
popf
jnp
jge
lock
popf
arpl
jge
push
fists
and
in
ficompl
dec
outsl
outsb
cmc
mov
sti
cmp
inc
cwtl
call
jmp
inc
adc
mov
mov
cmpb
sub
mov
mov
mov
out
jp
cli
pop
repz
dec
fs
jmp
dec
adc
sub
mov
test
cmc
cmc
push
cmc
push
add
inc
push
jmp
xorl
test
hlt
jb
inc
fdivrl
xor
cltd
ja
imul
jp
lret
mov
call
sahf
dec
sarb
addl
std
xchg
mov
fistpll
pusha
inc
lahf
and
cmp
pop
pop
popf
mov
xchg
dec
add
push
imul
mov
ret
out
orl
mov
iret
rclb
sub
adc
test
sbb
movsb
push
enter
push
rcr
xchg
out
nop
mov
add
push
clc
int
adc
cmp
mov
mov
cwtl
jge
stc
roll
push
inc
inc
sbb
dec
xchg
out
mov
mov
mov
loopne
fwait
scas
imul
xchg
xor
jns
xor
xchg
stc
aad
jno
call
xchg
xor
hlt
cmp
outsb
sbbb
dec
pop
dec
dec
mov
out
loop
jae
mov
add
add
add
pushf
scas
sub
imul
push
ss
xor
mov
subl
add
sbb
inc
mov
gs
sbb
mov
sub
rcrl
xchg
adc
fildll
loop
push
in
or
jl
mov
adc
mov
pop
loopne
add
fildll
stc
lods
mov
mov
mov
pop
mov
sahf
and
dec
sahf
test
arpl
lock
andl
mov
aaa
and
mov
cmc
adc
into
pop
push
repz
add
jne
cmp
dec
movsl
cmp
mov
adc
lods
mov
addr16
ja
sahf
enter
mov
inc
mov
sahf
pop
mov
xchg
popf
push
pusha
pushl
lea
call
test
push
pusha
sub
movb
push
movw
push
lea
jne
jmp
stos
gs
test
push
aam
loopne
pop
loop
xchg
aam
or
inc
lea
xchg
add
sbb
out
loop
es
imul
imul
push
mov
cltd
hlt
dec
mov
scas
push
cmp
cwtl
dec
pop
add
xor
inc
push
out
mov
lahf
sti
das
in
jb
lcall
dec
push
xchg
pop
ljmp
add
pop
adc
in
inc
pushf
call
cmp
cmp
xor
add
div
adc
xchg
rolb
jl
int
and
xchg
jne
inc
mov
fmull
mov
subl
sub
xor
pop
in
mov
adc
mov
call
pusha
lret
sar
sbb
rorl
xchg
adc
mov
icebp
in
and
mov
in
cli
repz
xlat
jg
test
test
jnp
std
fcmovnbe
out
lods
arpl
sbb
sbb
insb
adc
rcr
mov
sub
push
leave
cmp
cmp
mov
sub
push
enter
daa
lods
jb,pt
add
sbb
popf
cltd
mov
jecxz
fildll
and
jl
scas
mov
in
xlat
ret
ret
mov
cmc
pop
shrl
jnp
repnz
xchg
push
dec
inc
dec
xor
cs
insb
add
rcl
mov
not
sub
mov
push
inc
mov
cmp
add
rcr
pushf
xchg
movzbl
push
bt
push
shld
shl
bt
push
call
dec
je
mov
xchg
cwtl
mov
shlb
add
add
gs
rorl
fistpl
bound
adc
pop
jns
leave
adc
stos
pop
mov
sbb
adc
movsl
sub
jl
push
out
es
hlt
mov
mov
ret
cld
aam
pop
cmp
dec
les
negl
mov
outsb
dec
orb
pop
mov
repnz
fs
adc
lock
xchg
cs
mov
ficoml
test
dec
xchg
jmp
cmp
lock
adc
cmp
clc
aas
inc
pop
out
icebp
mov
cmc
sti
sub
es
xor
sub
dec
ds
and
or
in
add
arpl
setae
imul
inc
mov
pusha
jmp
push
test
pushf
movb
movb
jmp
dec
jo
mov
sahf
cld
adc
and
enter
lock
mov
std
mov
xchg
mov
hlt
adc
js
testb
pop
sub
xchg
cltd
mov
in
xchg
mov
fnstsw
ror
repnz
shl
push
inc
cmpsb
pop
in
popa
outsb
sbb
int
xchg
sbb
sbb
sbb
cli
cli
pop
mov
and
inc
jp
mov
xchg
mov
in
js
into
mov
idiv
movb
pushf
movl
pushf
pushf
pushf
mov
lea
jmp
lea
ja
cmp
stc
inc
sub
pushf
bsr
shrd
shl
lea
add
btc
bt
mov
xor
and
ror
test
mov
call
dec
int3
mov
leave
testl
add
hlt
jbe
and
in
nop
push
sbb
out
fisubrs
sub
sbb
aad
int
xchg
je
xor
and
in
or
fcom
pop
sbb
ret
xchg
mov
testl
outsl
add
fildl
push
jp
pop
cmp
mov
repnz
push
cli
adc
orl
cmpsl
jae
cmp
jno
cli
adcb
inc
or
xor
mov
data16
mov
adc
mov
lret
pop
cltd
fsts
adc
mov
mov
push
loopne
add
decb
push
add
pop
mov
mov
jl
call
and
ljmp
inc
out
loope
paddsw
jmp
popa
adc
popa
pop
push
mov
cmp
movl
pushf
pushl
lea
jmp
mov
lret
pop
outsl
adc
jmp
das
pop
jmp
cmpsl
push
outsb
rcl
cmp
pop
stos
mov
add
jns
stc
lods
inc
sbb
gs
rolb
dec
cwtl
out
push
fmull
dec
aas
pop
jecxz
mov
sub
fmull
cli
inc
push
mov
inc
cmp
add
enter
inc
xlat
nop
add
into
fdivrl
push
lods
pusha
hlt
push
xchg
aas
xchg
mov
sahf
push
pusha
lea
jne
sub
not
btr
rcl
mov
push
cmc
clc
stc
add
jmp
add
shld
movzbw
push
not
add
lea
add
mov
stc
push
shr
cmp
call
sub
pusha
pushl
movw
mov
lea
jmp
movzwl
rcl
bts
bt
mov
mov
call
jmp
cmc
clc
bt
repnz
push
movb
call
in
popa
sub
xor
push
push
cli
push
es
sar
dec
xchg
add
jbe
mov
xlat
aad
cmpsb
mov
not
cmpsl
fwait
jno
mov
scas
es
xor
mov
add
insl
add
cmp
pop
xor
sbb
push
xchg
cmc
ret
sahf
adc
and
sub
data16
inc
test
lds
jmp
pop
fnsave
lods
fwait
roll
mov
loope
aad
xchg
push
stos
fwait
test
and
xchg
imul
sbb
push
and
and
fldcw
push
imul
call
stc
mov
lcall
cmp
outsl
bound
out
imul
ss
jle
dec
sub
cmp
jp
xor
jmp
int3
dec
imul
cmp
idiv
mov
inc
into
xchg
into
mov
mov
cmp
imul
sub
dec
inc
daa
adc
lret
jmp
adc
jle
scas
insb
lret
pop
js
shrl
sbb
add
push
mov
dec
lods
pop
sbb
adc
bnd
jg
ret
xchg
adc
shl
cld
dec
xchg
adc
push
ret
push
xchg
aam
xchg
popa
outsl
sub
mov
test
sub
mov
xchg
sub
jo
xor
in
out
xchg
jno
insl
jnp
mov
in
rcl
xor
rorl
xchg
jecxz
movsl
mov
pusha
lea
xchg
mov
call
push
dec
dec
push
inc
push
dec
cs
insb
add
test
xor
pusha
cmp
jmp
lea
je
jmp
mov
mov
lret
in
dec
jo
fs
cmp
adc
dec
jbe
adc
pop
cmpsl
xchg
dec
jo
dec
daa
add
outsl
jmp
jmp
jbe
mov
sbb
mov
mov
lods
or
fisubrs
test
inc
push
jnp
or
pushf
lods
pop
addr16
mov
cmp
cmpsl
push
and
lods
pusha
jae
mov
loopne
mov
or
jl
pop
or
push
xchg
or
testb
dec
outsl
popa
fs
imul
add
or
cmp
cmp
clc
push
fs
out
jle
dec
movsb
orl
cmp
mov
bound
fisttpl
nop
fsubs
mov
xor
mov
pop
fsubrs
lret
cmp
sub
stc
cmpsb
jb
loopne,pn
adc
repnz
inc
mov
ficoml
jae
sub
enter
add
xchg
adc
dec
sbb
movsb
pop
jge
test
push
sahf
xchg
mov
lret
fs
sub
sbb
ds
fcomps
xlat
mov
inc
ficompl
lods
mov
jp
jno
sbb
add
sbb
out
jge
insb
enter
repz
xchg
pop
int3
xor
fidivrs
xlat
xor
push
adc
add
dec
out
dec
jl
aaa
stc
out
jmp
dec
fwait
movl
xor
fs
je
pusha
adc
mov
pushl
pusha
pushf
lea
jmp
jmp
fnstenv
mov
jge
popa
movsl
or
lea
cmpsb
push
je
push
stos
out
loope
cmc
cld
xor
sbbb
adc
push
push
jae
mov
mov
lods
divb
out
das
xor
sub
jle
addb
push
jo
in
cmp
enter
add
out
pop
cwtl
outsb
cltd
incl
les
cs
jp
lret
push
sbb
xchg
push
idivl
jb
pop
test
mov
jmp
push
lea
call
call
mov
lea
je
cmp
add
pusha
call
int3
sarb
enter
lock
hlt
fidivrl
rorb
clc
dec
mov
scas
aad
pusha
fildl
pop
test
mov
adcb
gs
pusha
inc
mov
mov
sub
arpl
outsl
loop
hlt
in
rorl
sub
or
adc
shrb
pop
daa
and
ljmp
sahf
inc
mov
gs
ficompl
arpl
cli
test
hlt
fisubrl
mov
mov
adc
loope
lods
xchg
pop
cmpsl
xchg
jne
fildl
pop
mov
push
mov
popf
mov
repz
cmp
repnz
xor
mov
adc
jnp
add
pop
sarb
enter
inc
push
movl
gs
sub
jle
scas
ret
jle
or
stc
pop
sub
add
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
add
add
shl
jg
lret
ror
and
imul
scas
jl
xorl
jl
fsubl
mov
jp
mov
sub
clc
je
fisubl
mov
imul
jns
sbb
insb
lds
sbb
xor
sub
rclb
movsb
xor
test
fnsave
test
mov
xchg
inc
js
mov
shr
aad
movsl
jmp
lcall
nop
arpl
scas
or
push
cmpsb
lods
pop
push
jp
test
jp
popf
aad
push
pop
xor
lea
imul
test
xchg
xor
out
pop
push
jl
inc
and
daa
inc
lds
daa
sub
es
faddl
pop
xchg
xor
jns
or
xchg
adc
dec
jb
clc
stc
jmp
lea
call
call
dec
sub
call
test
shlb
add
dec
dec
cmp
cltd
sbb
ja
sbb
and
aam
pop
call
mov
xor
mov
and
push
mov
add
mov
daa
adc
sti
mov
cltd
lods
xchg
jb
xor
arpl
imul
aam
sub
test
push
stos
xchg
stos
lock
es
jns
in
iret
sub
test
stos
test
pushw
ret
xchg
repnz
es
add
lret
adc
fnsave
sbb
cmc
lret
rcrl
and
popf
xlat
fildl
jne
iret
imul
es
scas
inc
arpl
pop
clc
cmp
add
rcrl
mov
xchg
jg
clc
push
jecxz
fwait
pop
movsl
dec
push
or
ljmp
push
inc
or
inc
add
cmpsl
fisttps
jmp
mov
rorl
xchg
imul
xor
or
xchg
jno
mov
lret
add
call
mov
and
add
inc
inc
cmp
je
movsl
scas
dec
enter
cmp
into
dec
mov
popf
icebp
jbe
fmul
pop
pop
getsec
test
test
lret
adc
mov
or
pop
test
test
clc
jae
inc
clc
fcmovbe
sbb
ja
pop
shll
jp
jp
lret
mov
lret
inc
pop
bound
sub
loopne
stos
mov
lret
mov
sub
pop
popa
aaa
insl
in
int
pop
std
pop
fbld
or
push
sbb
push
test
sbb
inc
lret
rclb
xchg
or
sbb
or
sub
scas
xor
emms
sahf
cli
pop
cmpsb
dec
stos
insb
mov
out
push
jb
push
out
mov
in
mov
cmpsb
daa
cmp
pushf
call
dec
jb
mov
lret
add
ret
xor
add
sbb
setne
fcomip
xchg
and
jno
cmpsl
jno
jle
sti
in
js
mov
sub
xchg
lret
adc
xor
jns
mov
int
pusha
or
jmp
add
scas
ficoms
xor
lods
dec
jecxz
and
fildl
jae
mov
stos
stos
mov
or
cmpsl
out
test
adc
pop
movsl
dec
cltd
xlat
sti
rcll
hlt
in
mov
mov
xchg
icebp
in
push
push
mov
mov
push
sbb
insb
push
push
mov
xchg
outsb
mov
pop
xchg
mov
je
pop
outsl
sbb
lret
pop
mov
mov
xchg
push
daa
subl
xor
lret
push
mov
sub
or
lcall
mov
mov
jne
dec
jge
scas
test
jb
ds
pop
rol
bound
jmp
adc
clc
xchg
dec
stos
scas
push
jb
in
mov
xor
xlat
or
aam
rcrb
dec
lahf
xchg
add
data16
mov
enter
fmull
and
scas
xchg
pop
or
cmpsb
jmp
xor
mov
popa
and
leave
pop
test
dec
aaa
lcall
pop
mov
scas
test
dec
mov
dec
addb
loop
into
xor
pushf
pop
movsl
ret
xor
fs
or
stos
lahf
es
hlt
fs
pop
xor
push
jb
lea
xchg
sbb
xor
mov
inc
pop
divb
aaa
dec
pop
clc
ficompl
inc
nop
xlat
aam
cs
aas
rorl
fsubrl
cmpb
pop
jmp
mov
push
jg
fsubrs
jmp
sti
icebp
and
or
cltd
cmc
xor
dec
inc
movsl
lds
pop
pushf
lea
jne
btc
and
stc
mov
push
bt
pushf
and
stc
cmp
pusha
pushl
lea
jne
btr
add
sbb
lea
xorb
movzbw
pop
push
push
pushf
lea
jmp
sub
pushf
mul
jmp
add
bt
mov
rcr
mov
pushf
pushf
add
jmp
mov
push
push
push
lea
jmp
test
add
pushf
pushf
mov
lea
jae
lea
jmp
shl
aad
mov
neg
mov
bt
test
add
push
call
adc
ror
ror
das
rdtsc
call
pushf
mov
pushf
call
jmp
test
ror
mov
seta
push
pop
not
mov
cmp
call
bt
mov
stc
mov
adc
adc
neg
btc
mov
pusha
sub
push
div
pushl
call
add
add
add
test
push
cmc
mov
neg
bt
clc
cmp
add
call
cbtw
bt
cmp
bt
cmp
cwtl
call
mov
jmp
pusha
jmp
setb
mov
call
sub
mov
test
shl
lea
jno
mov
push
mov
jmp
jmp
call
mov
movw
lea
jmp
pusha
cmc
add
jmp
pusha
decl
movb
pushl
pushl
lea
jne
pushf
mov
pusha
jmp
lea
pop
neg
sub
shl
sar
or
cmp
mov
setne
cmc
push
rcl
mov
bt
cmc
mov
add
sub
movzbw
bswap
mov
cmp
shl
bsf
sub
stc
adc
test
sub
or
shrd
xor
test
lea
sub
sar
neg
not
sub
sbb
btc
bts
adc
movzbl
not
stc
mov
cmp
bt
sub
push
stc
jmp
pusha
cmc
mov
call
movb
pusha
push
mov
jmp
call
pusha
mov
mov
pushf
lea
jmp
rcl
movzbl
mov
cmp
bt
bt
test
sub
jb
push
mov
mov
mov
push
push
pusha
lea
jmp
pushf
pushf
mov
pusha
push
pushf
lea
jmp
cmp
bt
xor
stc
stc
movl
pushf
sub
jmp
xchg
lea
pushf
mov
std
cld
cld
pushf
mov
pushl
rep
sar
pushf
mov
std
bt
mov
cld
cld
pushl
popf
pushf
pushf
movw
lea
jmp
shl
pushf
mov
push
add
jmp
pusha
pushf
mov
push
pushf
popl
movw
jmp
mov
mov
push
mov
pushf
lea
jmp
or
jmp
rcr
notl
aad
mov
push
cmc
sub
bt
and
call
rcr
bsf
mov
neg
pushl
popl
xchg
movl
dec
mov
bswap
mov
bts
neg
xor
rcl
seto
pushf
xchg
rol
btr
add
stc
movzbl
jmp
jmp
mov
inc
movzbl
jmp
xor
call
jmp
setnp
rdtsc
bts
mov
movsbw
bts
pusha
mov
inc
and
clc
mov
test
add
cmc
jmp
push
push
mov
pushf
pusha
pushf
lea
jmp
inc
mov
aaa
mov
pushf
sub
je
sub
clc
mul
pushf
mov
movw
jmp
pusha
add
lea
js
pushf
movb
mov
mov
lea
jmp
add
movw
clc
mov
sub
jmp
pusha
mov
movw
movw
mov
pushf
lea
jmp
mov
push
pushf
pushf
lea
jmp
call
aad
mov
inc
cmp
call
stc
cmp
add
jmp
mov
call
call
jmp
mov
pushf
mov
lea
jmp
pushl
popl
pushf
push
lea
jmp
call
call
sub
pushf
call
jmp
jmp
cmp
mov
test
mov
pushf
not
mov
bt
not
pushf
and
mov
pushf
push
mov
lea
ja
pusha
pushf
popl
mov
push
push
pushl
popl
pushf
lea
jmp
dec
pushf
clc
jmp
not
mov
clc
stc
add
cmp
clc
clc
cmc
shld
call
mov
clc
call
stc
clc
sub
jmp
mov
pusha
mov
pusha
movl
lea
jmp
jmp
pushl
mov
pushf
push
mov
movb
lea
jmp
add
bt
cmc
cmc
xor
clc
clc
jmp
mov
mov
pushf
pushf
pushf
mov
mov
pusha
push
lea
jmp
jmp
push
cmc
call
bsf
clc
pushf
neg
clc
xor
stc
call
sub
movb
pushl
mov
push
push
pushf
lea
jmp
pushf
call
pusha
call
mov
push
pushf
pushf
movb
pushl
ret
jmp
add
mov
pushf
mov
jmp
mov
test
test
pusha
add
call
mov
pop
pushf
popl
shr
test
xchg
jmp
and
mov
rol
bt
mov
test
pushf
sub
push
test
clc
add
jg
shl
push
pusha
pushf
mov
jmp
bt
sub
pushf
call
pushf
popl
pusha
pushl
popl
movb
lea
jmp
jmp
push
mov
pushf
mov
lea
jmp
push
pushf
xchg
call
bt
cmc
add
mov
pushf
pusha
mov
mov
movl
push
pushl
lea
jmp
pushf
push
pushf
mov
pushf
lea
jmp
sub
jmp
pushl
popl
pushf
movb
mov
movb
lea
jmp
jmp
pushf
lea
ja
mov
pusha
lea
jmp
neg
jmp
movsbw
shl
sbb
mov
call
lea
jo
pusha
pushf
mov
movb
pusha
mov
movb
lea
jmp
cbtw
mov
pusha
clc
sub
cmp
clc
call
shld
mov
btc
ror
adc
mov
call
mov
pushf
lea
jmp
shl
movzbl
bt
clc
add
pushf
dec
pushf
pushf
movsbw
not
inc
btr
rol
btr
bt
sar
bswap
sub
movzbw
btr
add
stc
movzbw
bt
mov
jmp
pushf
pushl
popl
movw
pushf
lea
jmp
pusha
movw
jmp
pushl
popl
movb
mov
lea
jmp
clc
cmp
pushf
sub
jmp
pusha
push
mov
pusha
lea
jmp
test
pushl
cmc
add
pusha
call
sete
movsbw
setb
movsbw
mov
jmp
cmp
dec
mov
btc
dec
bsr
btc
add
not
xor
neg
rol
shl
shld
mov
clc
stc
bt
bt
shl
stc
shr
jmp
mov
movzbw
pusha
movsbw
pushf
lea
call
call
mov
pusha
pushf
push
inc
stc
add
call
jmp
pushf
pushf
popl
pushf
pushl
popl
movw
push
lea
jmp
sub
mov
shld
dec
mov
pusha
pusha
lea
ja
pusha
add
push
pushf
mov
movb
pushf
lea
jmp
mov
pusha
jmp
add
shl
xor
mov
sets
call
pushf
jmp
lea
jne
push
add
jnp
sub
jmp
push
movb
pushf
pushl
mov
pushf
pushl
lea
jmp
lea
mov
pop
rol
bsf
bt
pushf
cmc
neg
pop
add
and
movzbl
bt
push
test
cmp
mov
push
clc
clc
add
pusha
stc
cmp
or
jmp
mov
mov
call
push
jmp
call
movsbw
not
movzbw
not
mov
bswap
mov
call
mov
mov
push
push
pusha
lea
jmp
pushf
popl
pusha
jmp
pusha
mov
movw
pushl
mov
pushf
pushf
popl
lea
js
popl
pushf
pushf
pushf
pusha
lea
jmp
call
sub
call
cmp
pushl
sub
movb
jmp
add
lea
jg
push
pushf
pushf
pushl
push
pushl
ret
bt
pushf
clc
push
sub
pushf
mov
jmp
pushf
movb
lea
pushf
mov
pusha
pushf
push
mov
lea
jmp
jmp
pusha
mov
lea
mov
pushf
pushl
mov
push
mov
lea
jmp
push
mov
mov
pushf
lea
jmp
shrd
mov
jmp
clc
sub
pusha
push
ror
stc
clc
test
sub
pushf
lea
stc
clc
jmp
lea
push
movzbw
jmp
pushf
bsf
sbb
mov
bt
sbb
rcl
shl
add
pusha
not
setle
push
mov
call
push
call
cmpl
pusha
call
setne
pusha
mov
movb
pushf
mov
pusha
jmp
aam
shr
mov
stc
jmp
mov
jmp
sar
xor
xor
lea
bsf
and
shr
shr
call
mov
call
pushf
popl
pushf
pushl
popl
push
mov
lea
jmp
shld
btr
daa
mov
pushf
stc
stc
stc
sub
lea
jno
pusha
mov
pusha
mov
pushf
push
lea
jmp
pusha
xchg
pushf
movl
pushf
mov
push
pushf
pushf
movw
pushl
ret
add
pushf
jmp
pushf
mov
mov
pusha
pushl
ret
dec
movzbl
sbb
add
bswap
movsbw
movzbw
dec
call
mov
pusha
pushf
popl
push
mov
push
jmp
call
bsr
cmc
mov
stc
mov
jmp
call
sub
cmp
cwtl
bt
test
jmp
pushf
push
divl
movb
mov
call
mov
call
pushf
popl
pushf
movb
call
push
add
bt
test
pusha
movw
add
clc
pushf
rol
push
movl
bt
add
movb
pushf
neg
stc
bt
add
bt
mov
cmp
call
mov
movb
lea
jmp
pushf
popl
call
mov
mov
jmp
call
jmp
pusha
mov
movl
inc
lea
je
pushf
push
decl
push
pushf
lea
jne
pushf
push
push
mov
pushf
pusha
push
lea
jmp
pushl
popl
pushf
movb
pushf
lea
jmp
stc
shl
mov
jle
test
add
clc
bt
cmp
add
cmc
stc
rol
test
test
jmp
mov
call
lea
mov
movb
push
pushl
lea
jmp
pushl
popl
push
push
lea
jmp
jmp
pushf
call
mov
pushf
popl
bswap
push
std
movsbl
std
jmp
movl
pushf
mov
pusha
movb
pushf
mov
pushl
ret
call
jmp
adc
cbtw
rcr
mov
stc
pusha
call
pushf
pusha
mov
pushf
movl
lea
jmp
mov
movsbw
lea
setns
lahf
mov
setno
lea
jae
pop
bswap
call
pushl
mov
pushf
pushf
pushf
push
lea
jmp
pushl
add
pushl
pusha
mov
push
pushf
mov
lea
jmp
call
jmp
popl
pushf
lea
jmp
pushf
pushf
push
mov
jmp
mov
pushf
pushf
lea
cpuid
bt
sub
pushf
jmp
pusha
pusha
mov
jmp
push
movb
mov
mov
mov
mov
lea
jmp
ror
mov
sub
pop
rol
pop
das
btr
cld
btr
pop
clc
sar
pop
cld
pop
xadd
shl
pop
pusha
dec
pusha
adc
pushl
popf
push
not
jmp
mov
pushf
pushf
popl
pushf
mov
pushl
popl
push
movl
push
lea
jmp
pushf
ror
jmp
pushf
pushf
mov
pushf
lea
jmp
pusha
call
movl
call
pushf
mov
push
pusha
pushf
lea
jmp
pusha
push
mov
pushf
movl
mov
pushf
lea
jmp
pusha
sub
pushf
clc
cmp
xchg
pusha
cmp
cmp
mov
cmc
movl
jmp
stc
pushl
popf
pushl
pushf
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
push
pusha
pushf
lea
jmp
dec
and
adc
bts
mov
jmp
movb
push
mov
mov
push
pushf
lea
jmp
mov
call
pushf
pushl
pusha
pushl
pushf
popl
mov
pushl
popl
movw
pushf
pushf
lea
jmp
mov
pushf
movl
pusha
mov
lea
jmp
push
mov
call
call
movsbw
sete
ror
call
pushl
mov
pushf
pushl
call
push
pushl
popl
pushf
push
pushf
mov
lea
jmp
cmp
pushf
test
cmp
pushf
mov
push
pusha
lea
ja
bsr
clc
mov
das
daa
aam
rcr
lea
xchg
sub
aad
daa
pusha
mov
lea
bsr
and
cmc
rcr
cmc
shld
sub
lea
mov
call
mov
push
pusha
pushl
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
jmp
call
jmp
lea
jmp
stc
sub
cmp
shr
push
call
jmp
mov
pushf
pushf
popl
call
jmp
pushf
mov
mov
pusha
pushf
popl
pushl
call
daa
xchg
cwtl
mov
stc
mov
jmp
test
clc
pusha
add
pushf
movb
movw
pushf
popl
pusha
pushl
popl
pushl
pushl
mov
movw
lea
jmp
lea
je
stc
cmc
jmp
pushf
push
pusha
lea
call
jmp
adc
aaa
lea
shl
mov
shl
mov
cmp
jmp
pusha
mov
dec
movb
push
add
cmc
sub
cmp
sub
push
call
jmp
cmp
daa
mov
sar
mov
cmp
jmp
seta
and
sub
add
pushl
mov
test
push
pushl
add
movb
pusha
call
pushl
dec
push
pushf
rol
test
cmp
sub
mov
add
pushf
mov
movb
movw
cmp
stc
sub
call
stc
stc
add
pushl
mov
jmp
pushf
push
mov
mov
pusha
movb
mov
lea
jmp
add
cmc
bt
lea
jb
push
mov
pushl
pushf
stc
push
sub
pushf
call
mov
pusha
movb
pushl
lea
jmp
jmp
pushf
pop
movsbw
btr
ror
bsr
neg
clc
call
movsbw
mov
jne
pusha
push
lea
pushf
mov
pushf
mov
lea
jmp
pushf
mov
movb
movb
pushf
lea
jmp
mov
movw
movsbw
movw
push
mov
movw
pushl
ret
push
pusha
movb
pushl
push
lea
jmp
mov
mov
mov
mov
mov
lea
jmp
call
movsbw
shrd
mov
mov
push
shl
bt
mov
clc
not
movb
clc
bt
pusha
not
stc
mov
stc
clc
sub
movb
and
lea
jbe
mov
jmp
mov
mov
clc
sub
test
clc
shr
pushl
pusha
mov
jmp
call
pushf
pushl
pushl
popl
pushf
lea
jmp
call
pusha
pushl
mov
pushf
push
pushf
lea
jmp
sbb
mov
shr
add
rcr
shl
add
pusha
mov
mov
movb
push
mov
movl
push
pushf
mov
lea
jmp
cmp
shl
call
pusha
movb
dec
cmc
rol
test
bt
call
movw
call
pusha
jmp
lea
mov
setg
mov
pushf
mov
call
pushf
add
call
dec
call
bt
pusha
add
pusha
jmp
jmp
ror
sbb
rcl
and
mov
or
and
cmc
mov
bt
sub
cmp
bt
clc
test
shl
pusha
jmp
pusha
mov
mov
pushf
movw
lea
jmp
sar
shld
lea
call
call
cmc
add
push
mov
movb
pusha
pushf
lea
jmp
pusha
push
pushl
popl
push
push
pushl
movl
lea
jmp
lahf
call
pusha
movw
dec
pushf
jmp
pushf
mov
mov
movl
push
movb
movb
lea
jmp
jmp
pusha
mov
movb
mov
pushl
lea
jmp
movb
pushf
popl
call
jmp
pushf
popl
pushf
pushl
popl
movw
pushf
lea
jmp
btc
sub
neg
mov
bt
cmp
add
pusha
movb
pusha
push
lea
jmp
jmp
movw
pushf
popl
pushf
call
pusha
pusha
mov
mov
pushl
push
pushl
movb
lea
jmp
adc
mov
mov
push
mov
mov
cmp
mov
mov
cmpsl
mov
mov
pushf
sarb
ja
mov
mov
jae
mov
mov
ja
mov
mov
insl
mov
mov
mov
and
mov
mov
jge
mov
mov
gs
mov
mov
ret
sarl
cmp
mov
mov
pop
mov
mov
gs
mov
mov
test
mov
mov
and
mov
mov
stos
mov
mov
mov
and
mov
mov
xchg
mov
mov
mov
and
mov
mov
inc
lods
mov
mov
les
mov
mov
fidivs
mov
mov
stos
mov
mov
mov
les
mov
mov
das
mov
mov
pop
mov
mov
mov
ja
mov
mov
and
mov
mov
and
mov
loope
mov
mov
ret
sarl
cmp
mov
mov
loope
mov
mov
ret
sarl
stos
mov
mov
mov
and
mov
mov
jae
mov
mov
add
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
insl
mov
mov
mov
add
mov
mov
icebp
ret
mov
mov
fidivs
mov
mov
inc
mov
mov
jo
mov
mov
cmpsl
mov
mov
ja
mov
mov
add
mov
mov
stos
mov
mov
mov
dec
mov
mov
mov
loope
mov
mov
inc
mov
mov
xchg
mov
mov
mov
add
mov
mov
dec
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
icebp
ret
mov
mov
pop
mov
mov
icebp
ret
mov
mov
sbb
mov
mov
dec
mov
mov
mov
sbb
mov
mov
test
mov
mov
and
mov
jae
mov
mov
add
mov
mov
sub
mov
mov
pop
mov
mov
and
mov
add
mov
mov
xchg
mov
mov
mov
mov
ret
mov
mov
scas
stc
push
pushl
cmp
add
pusha
pushf
pushf
movb
lea
jmp
pushf
mov
pushf
jmp
jmp
xor
rcr
shl
setp
movzbl
bts
add
adc
add
pusha
cmc
movzbw
rol
movb
neg
bts
mov
add
and
push
bsr
lea
rcl
mov
test
clc
cmp
call
rol
movb
sub
cmp
pushf
jmp
mov
push
mov
lea
jmp
test
stc
jmp
mov
movb
pushl
pusha
pushf
popl
lea
je
pushf
push
pusha
pushl
popl
pushf
lea
jmp
mov
movb
lea
jmp
shl
inc
mov
call
or
push
cmc
xor
jmp
push
mov
call
call
inc
mov
test
bt
sub
call
pushl
popl
push
pushf
mov
mov
lea
jmp
mov
call
clc
mov
bt
pushl
test
movw
sub
push
mov
movb
movw
movb
lea
jmp
pushf
pushf
pushf
popl
mov
pushl
popl
pushf
pushl
push
push
lea
jmp
pushf
mov
call
jmp
neg
movb
movb
pushf
push
inc
jmp
pushf
popl
jmp
xadd
rcr
mov
shl
mov
cmp
call
not
shr
xor
xor
movzww
pushf
sub
pusha
jmp
mov
push
lea
jmp
inc
bswap
neg
movzbw
mov
ror
mov
cmc
pusha
sub
bt
bt
clc
stc
shr
push
mov
call
call
lea
jnp
push
mov
movb
push
lea
jmp
mov
call
rol
clc
neg
push
push
add
cmp
jmp
lea
xchg
adc
shld
shr
stc
xchg
clc
jmp
pushf
pusha
pushl
mov
pushf
pushf
pushl
lea
jmp
pushf
mov
pushl
movb
lea
jmp
mov
pusha
movb
pushf
pusha
lea
jmp
add
add
add
orb
sbbb
push
add
add
pop
add
call
pusha
add
dec
or
add
dec
add
test
addl
add
add
outsb
addb
xchg
addb
mov
add
xlat
addb
sti
addb
and
add
pusha
addl
jnp
add
sahf
addl
out
add
or
add
add
test
add
test
add
test
add
test
add
add
lcall
add
xchg
add
add
addb
add
xchg
add
xchg
add
add
xchg
add
mov
add
mov
add
add
mov
add
iret
mov
add
mov
add
mov
add
add
je
add
lcall
add
mov
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
add
cwtl
mov
add
mov
add
mov
add
add
cwtl
mov
add
mov
add
mov
add
lea
add
add
test
add
fmuls
add
nop
popl
add
popl
add
nop
add
mov
add
call
xchg
add
