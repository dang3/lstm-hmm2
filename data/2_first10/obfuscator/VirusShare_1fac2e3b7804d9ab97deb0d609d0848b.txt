sbb
mov
les
xor
call
xchg
xor
xor
dec
in
sub
fdivrs
xchg
sahf
outsb
push
fs
xor
aad
mov
cmp
push
ret
mov
gs
into
popf
mov
pop
rclb
xor
xor
xchg
stos
pop
dec
push
inc
std
je
call
sub
xchg
mov
es
outsl
fiadds
lods
jbe
fcoms
inc
cmp
mov
stc
loop
negl
not
rcrl
cmpsb
jnp
or
mov
mov
enter
mov
and
test
cmp
aam
xor
in
mov
gs
ja
mov
sar
and
mov
mov
pop
adc
jne
fmul
add
fisttpl
and
insl
adc
mov
fs
sahf
xor
in
adc
mov
inc
gs
mov
add
les
movsl
sub
jae
pop
outsb
fwait
xor
repnz
cmp
lcall
and
mov
mov
rorl
mov
rcr
xchg
xchg
into
cmc
adc
or
and
fsubrl
mov
sub
out
inc
sbb
ds
icebp
ret
jmp
sub
loopne
mov
std
mov
int
les
fistpll
aam
nop
push
and
in
or
sub
and
leave
adc
push
pop
out
rorl
mov
popl
int
ljmp
xchg
rcl
sub
sub
sub
xchg
cmp
jecxz
cmp
jae
not
xchg
xchg
lods
aam
aas
push
repz
adc
das
in
test
fs
xchg
sbb
cmpsb
fcoms
popf
inc
xor
xchg
add
adc
cmp
ds
mov
test
das
leave
jns
cld
push
and
mov
xchg
sub
in
inc
xor
aad
dec
es
int
jns
mov
lods
cltd
inc
js
push
repnz
scas
mov
cld
mov
jo
inc
loop
insl
loope
mov
or
fwait
test
leave
xlat
xor
xchg
sub
and
xchg
lcall
pushf
xor
das
xchg
imul
pop
sbb
or
je
aad
xchg
pop
flds
iret
mov
stos
cli
pop
pusha
xchg
loopne
stos
sti
xchg
enter
aas
sub
push
outsb
add
xchg
test
in
popa
pushf
pop
pop
dec
cmp
and
testb
mov
add
mov
fs
mov
mov
mov
mulb
cmp
shll
call
aad
jb
sub
adc
outsl
sbb
push
jns
iret
fsub
xor
pop
scas
fnclex
sub
das
ja
push
ret
cli
lods
lods
lods
mov
bound
test
inc
mov
dec
test
jne
lods
add
into
into
or
sbb
icebp
cld
lcall
loop
lods
call
andl
rsqrtps
mov
jg
jo
push
xchg
and
push
mov
xchg
lret
clc
clc
xchg
das
mov
pop
add
bound
loop
mov
int3
xor
cmp
pop
and
shll
arpl
mov
fistps
inc
bound
jmp
xlat
push
dec
or
pop
mov
clc
xchg
fwait
lods
into
int
call
adc
mov
mov
mov
mov
popf
add
cmpsl
mov
mov
fcomp
test
neg
add
mov
leave
fsubp
bound
xchg
xchg
in
and
aam
out
adcb
shl
cli
inc
adc
fisubl
fs
fldenv
add
lar
mov
inc
fdiv
or
push
or
jle
andb
mov
movsb
cmpsb
dec
scas
clc
add
fstpt
out
insb
aam
pop
test
jecxz
mov
es
sbb
mov
or
lret
add
xchg
pop
cli
test
lret
or
lahf
adc
or
jbe
push
les
push
mov
push
lock
sub
mov
in
mov
lods
push
fwait
insb
scas
subl
dec
stos
cmp
rcrb
mov
fldenv
rcll
push
aas
push
cmp
movswl
xor
sbb
and
orb
in
call
xorps
out
sbb
loop
bound
xchg
cmp
out
jno
mov
cmp
mov
fsubl
xor
add
dec
ficompl
mov
lock
aam
push
xchg
xor
lret
insb
fsts
ret
sti
je
or
push
clc
add
bound
and
push
xor
das
pop
xor
push
pop
addb
mov
jb
mov
mov
mov
movsl
jmp
das
out
cli
dec
ret
fdivrs
js
sub
xlat
shlb
pusha
xor
jb
mov
divb
fists
std
and
pop
lcall
out
and
push
arpl
pop
orb
fwait
pop
in
outsl
add
add
sub
das
negb
add
xchg
ljmp
mov
adc
and
sbb
mov
xchg
adc
out
jmp
cli
mov
call
mov
mov
push
imull
das
sbb
test
add
and
loopne
pop
sbb
lcall
popl
xchg
mov
pop
push
ret
data16
and
sub
fld
and
jb
mov
lea
nop
lret
jbe
mov
sahf
xor
loopne
out
stc
ds
rcrl
mov
mov
pop
cmp
adc
sub
jl
dec
ret
push
xchg
std
pop
lret
pop
notl
aam
js
xchg
fcmovnb
dec
or
cmp
stos
dec
sub
rcll
ret
stos
icebp
jmp
fistpl
test
sti
pop
fdivl
and
test
push
stos
and
out
aas
push
mov
fdivp
stos
mov
dec
fsubr
les
imul
cli
out
jne
call
xchg
mov
iret
int
std
xchg
xchg
fisttpl
or
xor
fldln2
jmp
push
xlat
lret
xchg
push
in
mov
jl
mov
dec
fcomps
jno
and
jbe
enter
ds
ret
sbb
jl
aam
inc
jg
mov
xlat
lds
cltd
enter
sahf
gs
pop
cmp
sub
lret
add
push
loop
sti
lea
arpl
idiv
fnsave
inc
sbb
add
and
mov
hlt
mov
inc
mov
mov
std
and
mov
shlb
jecxz
pusha
jle
andb
mov
pop
aas
mov
idiv
imul
add
add
push
test
sub
inc
push
mov
mov
imulb
or
clc
inc
mov
push
mov
sub
sarl
sbb
out
inc
inc
andl
out
push
cld
nop
mov
cmp
xor
fstl
lahf
jae
mov
mov
outsb
mov
sbb
ret
fwait
adc
sub
int3
sub
mov
ret
psubd
push
dec
test
cwtl
fdivrl
or
scas
push
xchg
or
les
sar
mov
insb
sub
cmp
cli
xor
mov
mov
jne
pushf
test
pop
icebp
testb
push
loop
pop
pop
pop
xchg
jl
dec
add
push
adc
xor
jae
xchg
adc
xchg
out
or
and
xchg
andb
enter
shll
es
in
sti
mov
in
outsb
cltd
mov
pop
xor
adc
pop
add
outsl
lods
ret
cmp
add
xchg
pop
xor
add
xchg
mov
addr16
cmc
and
xor
push
adc
mov
lds
push
jg
adc
popa
mov
xchg
mov
sbb
std
js
stos
cmp
aad
push
lock
roll
bound
jg
adc
push
mov
cmp
or
repz
push
into
sti
insl
mov
fsubrl
int3
addr16
stos
sub
lahf
orb
stc
cmp
push
sub
jae
xchg
or
or
flds
dec
lods
push
jmp
aam
jl
sti
pop
pop
adc
out
pop
add
pop
lcall
outsl
test
sbb
lods
add
jb
mov
repnz
mov
inc
cmpsl
dec
add
inc
adc
or
fldcw
fcompl
inc
pandn
cld
cmp
xchg
inc
jbe
sub
inc
mov
mov
into
test
jg
mov
xor
mov
jmp
pop
adc
jne
dec
xchg
shrb
test
arpl
add
sbb
test
pop
mov
pop
add
pop
mov
rcrl
test
dec
adc
insb
adc
inc
xlat
fwait
sbb
mov
xchg
cmp
les
hlt
dec
sahf
nop
lods
test
add
lret
xchg
rorl
pop
fcmovb
rolb
mov
mov
rorl
fnstenv
jmp
jl
ljmp
sub
lods
adc
push
dec
sahf
jmp
push
loope
pop
cmp
das
inc
lret
lret
mov
mov
inc
xchg
jg
and
inc
push
enter
insl
ds
mov
outsl
inc
mov
xor
cmpsb
lods
sbb
lods
sub
cmp
sbb
das
daa
addr16
stos
cmp
pop
insb
enter
lcall
or
sub
adc
sub
mov
mov
insb
push
adc
call
sub
xchg
fidivrl
aaa
or
inc
jle
aas
and
dec
stos
push
mov
xchg
mov
adc
sahf
mov
add
mov
jl
pop
xor
hlt
xchg
loopne
push
scas
push
add
sub
fwait
sub
leave
nop
pop
push
fwait
xchg
sbb
pop
out
xchg
push
test
out
xchg
negb
fsubs
testb
mov
dec
outsb
cmp
shll
popf
stos
sbb
pop
scas
add
sub
and
bound
push
mov
pusha
call
sub
out
and
out
sbbl
add
outsl
pop
or
jl
jnp
out
cmpsl
push
xchg
cmpsl
xchg
push
dec
gs
push
sub
pop
bound
xchg
cmc
push
inc
push
stos
or
push
inc
in
aad
ret
inc
or
lods
fimuls
iret
sub
cmp
xchg
mov
div
hlt
orl
repnz
cmp
xor
pop
push
shrb
and
scas
push
frstor
lahf
mov
pop
cmp
dec
xchg
mov
ret
sbb
rclb
pop
iret
insl
ja
lods
fimull
jno
int
fnstenv
gs
mov
insb
pand
rcrb
movsl
sahf
adc
repz
daa
cwtl
loope
ficoml
xor
cmp
mov
mov
add
gs
call
iret
jecxz
shrb
push
xchg
and
fcomps
xor
and
pop
cli
ljmp
ss
or
loope
push
or
rorb
adc
add
xchg
inc
mov
mov
mov
fildl
xchg
lock
ret
orb
push
mov
popa
add
push
out
mov
aad
out
xor
mov
daa
jmp
aam
fnstcw
push
sti
mov
cltd
adc
jmp
notl
ja
out
lods
mov
arpl
cmp
test
or
push
mov
jmp
jl
sub
addr16
into
sbb
dec
sub
fs
out
imul
sti
mov
or
das
test
jecxz
pop
ss
xorl
scas
push
mov
or
mov
adc
mov
xor
leave
in
dec
outsl
stos
movsb
jo
frstor
mov
ljmp
aad
inc
fsubl
sub
jns
daa
inc
inc
je
xor
sbb
xchg
xor
jnp
aaa
insb
shlb
sbb
and
hlt
es
stos
and
mov
lret
int3
or
xlat
movsb
push
and
pop
lock
fmull
inc
xor
into
mov
cmpb
loopne
add
inc
divb
inc
dec
shrl
iret
clc
notl
mov
sbb
mov
cmp
into
inc
lahf
xchg
mov
int
mov
cmpsb
mov
stos
mov
pushf
cmp
adc
mov
dec
adc
sbb
inc
sahf
sbbl
fwait
rolb
xchg
rorb
daa
andb
and
rorl
stos
xchg
lahf
ljmp
or
xchg
xlat
mov
mov
or
fs
outsl
cmp
push
mov
inc
clc
mov
aam
xlat
xor
es
lock
divb
mov
push
lods
xor
sahf
lret
movsb
test
mov
adc
scas
outsb
pop
add
cmpsb
in
ds
sarl
lret
jb
movsb
mov
push
jb
or
push
mov
pop
inc
mov
js
add
cmpsb
movb
jo
icebp
enter
aaa
decb
xchg
jnp
in
jge
fucom
gs
cmp
sub
jne
jmp
mov
loope
pusha
add
push
loop
sbb
and
lds
pop
dec
leave
stc
dec
xchg
pop
fiadds
mov
cmp
mov
in
xor
xor
mov
dec
dec
mov
xor
pop
mov
fisubl
push
pop
aaa
cmp
fwait
mov
cld
pop
sbb
stos
nop
xchg
loopne
rcr
outsb
inc
inc
popl
jne
imul
jle
mov
mov
ja
jbe
cltd
cmp
pop
jmp
xchg
outsl
mov
test
inc
test
inc
mov
pop
in
xorl
pop
inc
and
sub
cmp
and
cmpsl
mov
mov
pop
popf
ja
dec
ret
dec
arpl
cwtl
out
in
ljmp
push
rclb
stc
add
and
and
lret
mov
cmpsl
xor
push
xlat
std
popf
mov
inc
mov
dec
scas
or
sbb
mov
pop
mov
and
mov
movsb
xchg
pop
jae
fisubrs
pop
push
out
call
jmp
es
clc
inc
leave
scas
fisubrl
sbb
cmpsb
aam
aas
adc
sub
pop
in
and
andb
shl
inc
ret
push
rorl
clc
pop
cmp
push
dec
xchg
fsts
sbb
ds
inc
jge
and
mov
cmp
sbb
ss
inc
cmpsl
inc
and
in
cmpsl
xchg
pop
loop
jl
push
adc
outsb
fsubrl
mov
gs
mov
iret
lret
push
xor
cmpl
gs
mov
cmp
jae
sub
repnz
ja
push
jp
jle
out
lret
push
xlat
add
inc
stos
add
lea
jo
movsl
mov
fwait
insl
mov
mov
push
cwtl
sets
inc
jae
enter
cmp
les
dec
inc
or
lock
dec
cld
ds
inc
add
push
and
repnz
and
lret
xchg
dec
loopne
pop
and
pop
push
aas
sbb
test
inc
stos
dec
push
or
insb
adc
out
jnp
jae
and
mov
in
daa
mov
pop
cwtl
fnstenv
movsb
or
insl
dec
das
rorl
xchg
jno
callw
mov
aad
fincstp
and
pop
mov
ds
pop
arpl
aad
movsb
adc
cwtl
sub
adc
stos
jmp
jnp
pop
xor
fiaddl
into
inc
mov
dec
jg
ret
mov
add
push
xchg
test
jmp
xor
dec
mov
xor
fdivs
push
sub
xorl
roll
loope
cli
repnz
jae
mov
cmpsb
inc
push
jmp
pop
les
lds
shl
aaa
movsb
rorb
pop
mov
popa
mov
pusha
fs
or
movsl
mov
push
xchg
je
repnz
mov
pop
popf
data16
or
outsb
cmp
mov
ret
push
jge
jo
ja
lcall
pop
mov
dec
loop
jge
xor
ret
ljmp
sub
pop
xchg
int3
mov
in
icebp
lcall
xchg
jno
pop
xchg
push
or
aaa
push
loopne
inc
jg
inc
orb
inc
mov
inc
mov
mov
sti
loop
dec
stc
outsl
dec
mov
sbb
jns
repnz
push
sti
pop
jnp
imul
ljmp
xor
push
jnp
imull
adc
pop
aas
clc
mov
sbb
sti
idivl
sbb
das
frstor
add
cs
out
push
inc
jo
je
popa
sbb
xor
je
test
mov
add
test
les
sub
insl
mov
mov
mov
cmpb
cmp
rolb
inc
fistl
inc
daa
test
sub
sbb
mov
mov
mov
dec
pop
dec
adc
outsb
mov
inc
pusha
cmp
lods
ret
xchg
or
push
sbb
in
xchg
gs
imul
fcomps
shl
repnz
fistps
inc
pop
lret
push
xchg
mov
mov
iret
orl
or
scas
or
out
aad
lods
pop
into
dec
nop
cmc
mov
jge
sbb
inc
repnz
call
sti
xorb
cmp
pop
pop
mov
jb
in
call
ja
mov
scas
pop
jecxz
adc
dec
lcall
test
push
std
mov
adc
mov
fwait
mov
dec
sbb
xor
fisttps
popa
std
and
cwtl
loop
mov
pop
popf
adcb
dec
pop
dec
jb
mov
cmp
mov
xchg
ds
jp
sbb
je
pusha
adc
repnz
fnstcw
pop
adc
les
mov
mov
enter
jl
inc
jge
sub
stos
or
adc
loop
cmpsb
pop
ret
jecxz
into
mov
add
sbb
into
pushf
sub
xchg
js
movsb
shll
push
and
jnp
or
call
inc
das
lea
shl
pop
imul
cltd
movsl
ljmp
pop
lea
sti
movsl
jne
jb
cmpsl
nop
xacquire
mov
inc
mov
sub
test
pop
mov
dec
xor
xchg
pusha
push
stc
mov
pop
loope
push
xor
int3
shr
pushl
xlat
test
sub
mov
insl
mov
jnp
cli
jle
outsb
loope
test
mov
jp
dec
ljmp
add
mov
test
mov
mov
scas
out
dec
test
add
int3
sbb
cli
ljmp
addr16
xor
loop
xchg
jmp
jecxz
lahf
lret
daa
pushf
dec
cmc
mov
inc
xchg
jbe
and
xor
std
sub
mov
negb
push
or
push
sbb
add
push
inc
outsl
and
cmp
jle
lods
es
rcr
xchg
popa
sbb
enter
pop
jnp
fs
loopne
lods
xor
lret
or
pop
pop
icebp
xchg
hlt
jmp
add
adc
sbb
jp
mov
sub
mov
xchg
mov
lret
and
push
mov
scas
mov
repz
movsb
sti
cltd
push
nop
addb
cld
lcall
cs
pop
add
jno
mov
push
xchg
inc
xchg
mov
jbe
xchg
std
aad
inc
mov
out
call
int
sti
lahf
cmp
cwtl
xchg
or
sbb
cwtl
lret
adcb
nop
add
or
stc
xchg
xchg
addb
sub
sbb
mov
lcall
nop
xor
cmp
std
imull
rclb
ss
shll
fistps
mov
sub
into
les
pop
jne
je
lds
fs
in
sbb
mov
pop
into
inc
add
push
aad
lss
in
xchg
adc
lds
in
lock
pusha
xchg
jo
adc
int
cs
outsb
leave
and
orl
push
pop
push
stos
adc
ret
test
test
push
std
in
or
js
outsl
mov
jp
add
out
loope
loop
mov
cmp
les
sbb
nop
mov
sbb
xchg
cld
pop
mov
inc
xchg
jnp
cmc
xor
addb
xor
cmpsb
and
setle
hlt
lods
in
scas
sbb
movsl
pop
push
outsl
mov
push
dec
lods
outsl
addb
and
in
movsl
xchg
jae
add
cwtl
mov
xchg
add
ret
jns
out
lret
pusha
std
les
pop
jp
je
xlat
xor
xor
xchg
mov
inc
imul
add
int3
shl
mov
bound
pop
movsb
and
and
lret
pushf
mov
lret
mov
mov
push
adc
scas
push
mov
xchg
mov
pop
imul
jne
or
push
lret
lret
jge
out
xlat
out
scas
js
sar
ss
repz
je
aam
cmp
pop
addr16
mov
les
pop
or
std
mov
pop
push
xor
xor
imul
bound
fsubrp
hlt
jge
sub
sub
call
int
out
adc
test
push
or
scas
imul
leave
jo
mov
mov
bound
jae
add
pop
fdivrl
mov
mov
bound
dec
iret
xlat
sub
imul
xor
pop
push
xchg
int
sub
test
xchg
and
roll
push
lods
mov
inc
jae
cltd
imul
adc
ss
xor
bnd
sahf
call
in
fdiv
mov
and
cmpsb
fs
xchg
inc
imul
jmp
push
pop
test
hlt
in
add
psraw
xchg
out
stos
mov
adc
test
mov
inc
push
mov
pop
adc
notb
lds
insb
mov
xor
stos
mov
mov
in
mov
or
lret
mov
add
dec
fbld
xor
push
inc
inc
ret
mov
jnp
xchg
or
ljmp
jb
ljmp
mov
adc
and
adc
in
push
sbb
pop
adc
js
lods
or
into
sub
pop
xor
and
test
pop
pop
int3
loop
dec
add
cmp
in
aas
or
es
add
mov
adc
sub
aam
jo
mov
ja
ja
out
in
cmpsb
movsl
mov
dec
and
test
out
jl
mov
sub
cmc
loopne
fnsave
xchg
scas
and
adc
fstpt
cmp
out
lret
and
cmc
jecxz
aas
repz
scas
stos
mov
mov
outsb
adc
xor
mov
xor
xchg
push
notl
lods
jmp
cwtl
dec
ds
push
and
inc
mov
imull
cmpsl
cli
mov
dec
cmpb
jmp
sbb
mov
and
xchg
jg
test
sbb
ret
adc
xlat
cmc
clc
in
sbb
inc
adc
mov
push
popa
dec
sub
stos
sbb
adc
roll
mov
inc
sub
fwait
in
xchg
dec
jg
out
push
insb
enter
fsubrs
xchg
ds
sub
jnp
push
mov
xor
data16
movsl
pop
mov
pop
inc
popf
popf
push
sub
aas
add
ds
fs
xchg
in
push
mov
mov
mov
rcrl
fs
out
pusha
inc
mov
lret
inc
mov
lret
les
sarb
push
sub
xchg
nop
adc
loopne
jge
test
adc
mov
sahf
imul
pusha
negl
and
sub
mov
mov
data16
adc
sub
xor
mov
jns
push
add
jnp
fstpl
cli
in
jl
xchg
xchg
sub
mov
xor
push
js
fmuls
push
push
mov
and
out
cmp
das
fisubrs
xchg
cs
sti
out
imul
mov
and
add
cs
rcll
fldcw
sub
sti
mov
inc
xor
out
cs
mov
dec
mov
dec
pop
insl
jbe
cmp
xor
shl
shlb
loopne
movsb
adc
jmp
or
and
jns
jmp
jno
imul
dec
dec
mov
call
sahf
lock
popf
or
stos
test
stos
push
aad
idiv
test
out
sarl
notl
std
pop
aad
das
mov
mov
mov
hlt
mov
pop
fldl
dec
cmp
jae
shl
adc
stos
lahf
sbb
nop
ljmp
es
aaa
nop
dec
in
xchg
or
into
mov
icebp
pop
jns
das
push
int3
fwait
loope
or
fldl
and
xor
mov
rorb
aaa
roll
imul
mov
mov
mov
int
or
aas
in
cmp
cmp
adc
test
xchg
fistpl
outsl
out
push
lret
dec
xlat
leave
add
xorl
xor
cmp
cmpsl
inc
push
mov
cmp
ret
in
xchg
and
arpl
das
jb
add
rcr
imul
pop
loope
jl
inc
dec
push
jb
test
sbb
mov
insl
mov
jecxz
mov
lcall
add
add
xchg
xchg
or
les
ret
cmp
inc
addr16
shll
xchg
lcall
mov
sbb
jne
dec
sub
or
sub
je
inc
cmp
repnz
cmp
xchg
xchg
mov
nop
pop
testl
push
stc
movl
add
pop
in
sub
or
or
inc
mov
jbe
and
cmp
stos
call
jp
sub
cld
test
mov
push
pop
adc
ja
adc
pop
and
das
lahf
pusha
std
movsl
imul
ret
jg
sub
adc
icebp
mov
imul
cltd
je
add
dec
inc
sbb
inc
xchg
mov
loop
pop
pop
add
lock
fdivr
jmp
xchg
ret
or
movsb
jns
mov
ret
outsl
sub
test
mov
test
mov
push
xor
sub
iret
xor
cmp
sbb
jbe
jecxz
pop
stc
movl
cmpsb
add
xlat
adc
cwtl
add
mov
dec
push
push
mov
scas
lds
scas
cwtl
jle
fwait
imul
scas
lret
cwtl
ret
push
movnti
mov
fdivrs
popa
ffree
mov
leave
pop
push
sahf
lods
push
sub
cmp
and
adc
adc
pop
push
repz
divb
jmp
xchg
ficompl
fs
push
fcoml
fdivr
clc
popf
ljmp
mov
mov
mov
icebp
sub
pop
pop
rol
fdivrl
mov
sub
shr
push
inc
in
mov
bound
outsb
mov
adcb
add
dec
inc
cmp
add
loop
ja
out
das
add
jbe
gs
dec
ret
scas
mov
insb
fcomip
mov
cmpb
lds
mov
jge
mov
nop
sub
mov
pusha
jmp
insb
add
ss
imul
xchg
adc
inc
scas
mov
scas
sbb
pop
xchg
loope
mov
sub
add
in
push
xchg
xchg
sbb
add
insl
out
mov
sub
dec
dec
mov
or
mov
imul
cmp
dec
hlt
data16
movsb
cmpsb
xchg
loop
int3
mov
mov
sbb
pop
pop
es
fcomip
push
loop
sahf
addr16
sbb
mov
sub
sbb
mov
mov
roll
ljmp
in
mov
mov
mov
pop
push
scas
inc
push
inc
out
ss
adc
mov
roll
lods
xor
and
sbb
roll
ja
mov
inc
xchg
jp
push
ret
or
dec
imulb
sbb
inc
shlb
or
lret
lcall
pop
lcall
and
pop
dec
mov
pusha
subb
ds
xor
dec
jmp
sbb
outsl
and
test
ja
loopne
push
sub
cld
push
fists
push
pop
jns
addb
push
fbld
xchg
jno
ds
or
xchg
lcall
mov
push
mov
int
mov
dec
jbe
and
xchg
jg
sub
dec
push
push
shlb
bound
fwait
cmp
sbb
test
mov
out
xchg
mov
adc
dec
sub
dec
xchg
in
hlt
mov
lock
addr16
in
js
mov
movsl
push
sti
xor
mov
sub
pusha
mov
cwtl
sti
adc
int
loopne
es
loopne
jmp
rclb
je
adc
xor
loop
inc
dec
adc
scas
pop
fcmovne
jne
xlat
xchg
loop
jno
out
xor
mov
dec
pop
cmp
dec
std
shr
jle
push
xchg
xor
aas
mov
lret
jno
cmp
pop
mov
adc
adc
lret
pushf
sub
test
enter
mov
and
push
stos
xchg
js
test
xor
rcl
cmp
push
adc
sub
cmp
jns
outsb
push
xchg
stc
jl
cmp
cmp
push
clc
shl
jne
xchg
xor
fcmovnbe
mov
es
mov
inc
cmp
mov
int
int
mov
add
std
cmp
add
mov
push
pop
int
mov
ljmp
inc
cmp
and
ret
push
and
pop
aas
and
xchg
lock
sar
in
inc
adc
dec
jl
jg
dec
pop
xchg
dec
popl
xor
movsl
add
insl
enter
pusha
pop
call
sub
ja
movsl
mov
xlat
sub
out
sub
cmp
rcr
push
imull
int
mov
iret
js
in
movsl
jle
fwait
fwait
jecxz
sub
add
sub
inc
pop
cmp
imul
scas
dec
hlt
flds
dec
out
aaa
adc
ljmp
jnp
push
test
outsb
or
into
dec
cmc
jge
test
pop
lods
das
repnz
sub
leave
add
pop
popf
repz
pop
xchg
mov
nop
and
ja
xor
adc
fnsave
push
xor
ja
dec
shl
mov
js
lods
jl
repz
fwait
std
add
inc
mov
dec
mov
iret
cltd
ret
mov
mov
or
xchg
lods
inc
jnp
mov
lahf
ja
sbb
ret
mov
std
sti
push
pop
or
aad
testb
addl
inc
adc
mov
sahf
subb
stos
dec
cmp
sbb
push
out
xchg
xor
xchg
loope
jbe
sbb
xchg
scas
inc
xchg
shll
daa
or
fs
xorb
stos
mov
xor
inc
or
fwait
cmovnp
mov
cmp
inc
stc
inc
cmc
adc
inc
ljmp
sbb
mov
push
adc
aad
and
addr16
xchg
xchg
cltd
bnd
sbb
bound
jnp
mov
out
push
mov
adc
xchg
ret
mov
jp
cld
cmp
popf
lcall
push
pop
imul
sub
data16
sub
sarl
inc
repnz
cmp
sbb
xor
out
mov
loope
xchg
repnz
leave
aam
mov
bound
add
pop
jmp
xor
filds
jbe
adc
pushf
xor
push
mov
push
movsb
test
sbb
orl
and
xor
cwtl
xchg
js
sbbb
jecxz
cli
inc
test
jns
nop
and
std
in
cmpsl
fcoml
enter
pop
test
outsb
sahf
ret
mov
rclb
dec
insl
cltd
repnz
pop
mov
orl
std
bound
js
mov
mov
shl
or
mov
lret
sub
and
dec
into
inc
mov
push
mov
add
enter
adc
das
cmp
pop
jne
loope
cmp
ficomps
sub
and
xchg
arpl
jge
ss
popa
sbb
pop
pop
iret
es
mov
scas
aas
xor
sub
cmc
mov
pop
jecxz
adc
in
xchg
mov
sub
add
jbe
aad
or
inc
cld
add
pop
sub
iret
mov
pop
adc
adc
cmc
and
sahf
lcall
push
cltd
pushf
cmp
dec
subb
push
in
add
mov
xchg
mov
add
adc
fbld
jns
loopne
test
iret
mov
and
nop
sub
aaa
je
imul
xchg
pop
mov
mov
hlt
mov
pop
push
jecxz
sub
ror
frstor
stos
icebp
addl
lds
sbb
mov
mov
movsl
rol
shlb
add
or
jge
repz
cmp
pop
dec
mov
data16
rcrl
jnp
iret
push
push
cli
sbb
jecxz
imul
out
outsl
and
or
imul
out
icebp
int3
dec
xor
dec
mov
out
sub
jge
mov
add
lahf
mov
mov
aaa
aam
loopne
in
pop
inc
clc
jae
loope
jl
stos
sti
push
pop
testb
jae
mov
ss
fbstp
ljmp
cld
push
outsb
repnz
xlat
sub
sahf
mov
mov
leave
out
aas
int3
cmpsb
daa
cmp
lods
rclb
rcrl
sub
mov
and
mov
jb
dec
mov
stos
in
into
adc
mov
sbb
repz
jne
dec
popa
les
dec
scas
fwait
loop
shl
repz
pop
xchg
cmp
pop
or
xchg
xor
and
fwait
cmpl
fsubs
ljmp
or
sub
xchg
inc
dec
add
test
cs
movsl
pop
xchg
mov
aad
clc
pop
test
adc
insl
rorb
push
ljmp
addr16
ja
cmpsb
jb
push
test
daa
adc
mov
dec
push
fcoms
and
add
test
jge
cmc
aaa
and
repnz
push
testl
insb
je
enter
mov
out
mov
pop
pop
lods
jae
das
inc
cmp
in
cs
xor
xchg
dec
test
leave
add
fidivrs
rcr
mov
push
sub
es
call
lock
fldlg2
or
cmp
popa
sub
repnz
lods
sub
jl
pop
sub
mov
and
sti
xchg
inc
nop
incb
adcb
lods
jae
push
addl
push
lea
adc
popa
call
lea
mov
mov
inc
sti
cli
mov
rorb
mov
mov
repnz
mov
and
clc
push
adc
mov
insl
std
sbb
add
adc
ja
pop
fldcw
call
stos
and
lret
sbb
rol
dec
pop
loope
or
add
pshufw
pop
xor
adc
cmp
mov
cmp
cli
mov
pop
stos
js
mov
iret
aad
fisubrs
mov
test
aaa
xchg
push
jp
call
cli
mov
in
lret
xlat
bound
mov
push
mov
lahf
stos
xchg
cwtl
aaa
push
int3
sbb
and
fwait
inc
aaa
idiv
xchg
andb
cmp
add
pop
mov
sub
ffreep
stos
stos
add
dec
pop
sub
jg
pop
sbb
cli
outsl
bnd
push
ret
xor
fwait
dec
xchg
cmc
cmp
decl
aas
dec
cmp
sbb
aaa
sub
cmpsb
sbb
shrl
dec
push
lcall
mov
fnstenv
aam
cltd
jmp
cmp
jbe
or
sbb
adc
insl
cmp
and
adc
aam
in
xorb
xchg
sub
js
sub
add
leave
pop
fwait
pushf
movsl
cltd
and
xor
fdivl
xor
or
or
lcall
xchg
pop
loopne
mov
clc
mov
or
shl
int
or
push
xor
dec
fadds
mov
xor
imul
nop
sti
movsl
xchg
or
cmp
push
xor
mov
pushf
jmp
das
lods
lea
sbb
je
xchg
into
mov
loopne
sub
negl
addl
movsb
sub
out
sbb
mov
aas
fwait
inc
shrb
adc
das
lods
je
ret
mov
repz
rcrb
sub
popa
loopne
sbb
cmp
dec
push
adc
push
add
mov
cmp
sti
jmp
ret
repnz
push
cmpsb
adc
ds
imul
mov
mov
xor
in
add
gs
lret
jns
mov
outsb
insb
ljmp
aas
dec
dec
adc
jg
shll
mov
mov
push
cmpsl
cmp
adc
daa
inc
repz
mov
pusha
imul
aaa
in
scas
fsubrl
bswap
lcall
lret
push
lahf
pop
pop
cli
lods
jno
mov
jns
adc
adc
fwait
inc
jb
add
adc
dec
mov
mov
lret
dec
outsl
arpl
iret
cli
jbe
mov
inc
imulb
out
in
arpl
mov
out
xchg
jp
pop
movsb
ret
fcompl
in
je
je
dec
add
push
out
push
popa
mov
and
iret
cmp
jo
es
dec
add
jno
fstl
test
jb
fbld
lock
sbb
fnstenv
sbb
ljmp
aas
shrb
mov
insb
push
pop
dec
jp
pop
and
jle
add
inc
cmpb
in
subl
cmp
int3
test
sbb
adc
mov
sbb
dec
shrb
xchg
jne
scas
mov
inc
shl
aas
mov
pop
mov
repz
or
repz
jle
jge
popf
cmp
push
xchg
and
neg
push
fsubl
xchg
fistpl
inc
lods
push
xchg
xchg
lea
in
cmp
mov
gs
xchg
or
xchg
fimuls
std
jnp
xchg
xchg
add
push
ret
dec
mov
in
test
mov
mov
orb
sub
je
sbb
inc
addr16
sti
add
inc
cli
and
or
pop
add
mov
inc
sub
cld
leave
sbb
dec
arpl
fistpl
stos
mov
lock
or
mulb
jmp
xchg
enter
mov
or
ds
fstpl
mov
pop
bound
in
out
cmc
inc
jle
inc
sub
pop
jo
arpl
xchg
jmp
dec
push
fmuls
lds
cmp
push
arpl
xchg
dec
lock
cmc
and
mov
adc
fildll
push
dec
mov
xchg
push
jg
iret
adc
iret
lcall
cltd
adc
je,pn
sbb
lahf
mov
ret
push
push
mov
ja
fcompl
xor
leave
js
loop
mov
and
sub
nop
fsubrl
pop
enter
dec
fistpl
movsb
xchg
popa
sub
in
jae
mov
jge
fnstsw
xorb
mov
cs
sub
xchg
mov
dec
out
mov
dec
stos
aas
idivl
adc
and
test
dec
mov
push
pop
sub
xlat
int3
imul
scas
mov
rolb
roll
loop
in
and
inc
mov
xchg
xchg
js
mov
mov
icebp
popa
sarb
fdivrl
dec
mov
loopne
xor
xor
dec
out
lgs
sbb
stos
sbb
sbb
loop
push
or
out
mov
cwtl
dec
fwait
mov
lds
xchg
test
sub
loop
ljmp
xor
xor
ds
ljmp
test
mov
jne
hlt
add
mov
dec
pop
mov
lret
std
pop
or
cmc
jo
mov
sbb
insb
push
clc
xor
cmp
xor
inc
xor
cwtl
arpl
mov
lock
xchg
jle
int3
sahf
popf
mov
test
xor
icebp
imul
pop
ljmp
and
aam
clc
mov
sub
dec
add
leave
mov
enter
inc
sub
aas
mov
dec
or
jno
pop
mov
fildll
imul
and
sbb
lret
lea
xchg
cmp
in
frstor
cmp
or
inc
pop
or
test
nop
fadds
fdivs
in
sbb
pop
mov
add
mov
shll
cs
or
jecxz
cs
sub
jl
mov
pop
lods
sbb
cli
movsb
and
repz
daa
pop
mov
test
pop
xchg
dec
fwait
rcrl
stos
aaa
ds
mov
jmp
or
push
nop
aam
sub
xchg
gs
iret
fcoml
shlb
roll
mov
mov
xor
sbb
push
pop
mov
orl
and
jno
mov
mov
sar
lret
xchg
pop
sbbl
addr16
out
xor
bound
xchg
pop
push
es
inc
hlt
pop
movsb
add
sbb
bound
xchg
mov
test
mulb
adc
aaa
mov
outsb
movsb
mov
mov
dec
shrl
sbb
lahf
xchg
mov
fiaddl
ret
add
mov
cmpsb
mov
sbb
cmpsb
sbb
xlat
cmp
xchg
adc
pop
stc
outsl
mov
cmp
jbe
push
pusha
xchg
and
inc
xor
push
xchg
pop
sbb
or
add
lods
stos
push
cmc
xor
or
gs
cmp
push
inc
jbe
shrl
pop
sub
push
adc
push
mov
and
push
xchg
js
push
xchg
dec
scas
push
cmp
lds
mov
cs
call
shll
imul
mov
ficomps
xchg
dec
jbe
or
lahf
pop
mul
dec
mov
test
sub
jge
out
inc
aam
push
sbb
aam
scas
xchg
cmp
lahf
xchg
test
ds
push
sbb
inc
xor
hlt
fdivrl
lret
leave
adc
xorl
cwtl
in
daa
les
jg
jae
xor
repnz
mov
mov
bound
adc
jne
in
push
or
jmp
and
insl
sarl
jae
pop
or
mov
jmp
cmp
pushf
shrl
cmp
lcall
pusha
push
push
test
in
insb
jo
dec
mov
push
js
mov
movb
arpl
mov
lcall
cmp
pop
das
jbe
xchg
dec
xor
loopne
cmc
leave
outsb
fsubl
jbe
cli
sti
sub
cmp
cmp
pusha
das
dec
mov
mov
sbb
repnz
xchg
jp
out
xor
mov
push
push
orb
sbb
xor
lods
bound
mov
mov
inc
push
loopne
mov
mov
cmp
ficoml
inc
mov
xchg
pop
jecxz
sub
shrb
outsl
fstp
adc
jmp
stc
dec
stc
lea
add
mov
fidivrl
clc
les
es
popf
mov
adc
pop
mov
mov
es
sub
ss
jns
movsl
dec
add
outsb
xor
xor
lock
repz
inc
shlb
mov
aas
cmc
cmp
xorb
or
mov
pop
ds
icebp
cltd
cmp
scas
cmp
cmp
mov
jns
mov
push
aam
mov
insb
leave
xor
push
mov
imul
and
xchg
in
or
test
popf
aaa
and
sbb
testl
push
mov
or
inc
stc
inc
mov
sub
add
pop
sub
jns
or
jmp
mov
iret
mov
dec
rcr
add
in
std
pop
lret
mov
pop
and
lcall
fwait
test
notb
sub
jb
pop
dec
cwtl
adc
fabs
int
lods
lods
or
out
and
cltd
test
inc
pop
xchg
addl
adc
lds
insb
jle
adc
dec
pop
outsl
jns
and
or
int
mov
mov
cmpsb
mov
pop
inc
leave
sbbb
fimuls
xor
jmp
sub
movsl
push
inc
in
pop
xlat
sti
jle
mov
js
push
jnp
mov
dec
adcb
into
adc
fwait
das
mov
push
in
or
or
inc
sbb
dec
mov
in
push
adc
aam
xchg
cs
mov
mov
rolb
arpl
sub
iret
push
sub
pop
cltd
push
in
add
sub
ss
stos
mov
daa
fstpt
and
out
loopne
frstor
mov
es
sub
sahf
sbb
xor
add
push
aam
icebp
sub
xchg
bswap
jo
imul
icebp
cmp
and
cmovp
xchg
jae
in
push
fstps
leave
mov
add
pop
data16
dec
cmp
fiaddl
jae
or
jae
dec
mov
and
sub
or
push
hlt
loopne
adc
pop
das
fmull
sub
mov
cli
loopne
fsub
imul
add
in
mov
push
icebp
mov
and
sub
or
rcrl
inc
or
dec
xor
lret
loop
adc
jo
xchg
sub
test
in
scas
pop
ja
sub
jno
andl
add
cmp
jge
pop
or
test
call
mov
popa
jo
popa
xchg
push
jmp
dec
mov
in
das
das
test
mov
push
dec
sahf
xchg
mov
xchg
in
add
mov
dec
insl
mov
test
sbb
iret
or
leave
mov
push
xchg
popa
inc
mov
int3
pop
shll
mov
jl
popa
sub
ljmp
hlt
stc
shll
xor
js
jae
or
in
pop
or
jp
iret
clc
sbb
pop
int3
xchg
jnp
cli
dec
adc
stos
push
nop
cmp
mov
and
add
xchg
jmpw
mov
in
pop
mov
lahf
dec
loopne
into
enter
ds
mov
pop
jns
cs
add
aam
dec
test
mov
popl
iret
sbb
xor
movsl
and
imul
rcrl
xchg
sub
decl
lea
push
shrl
mov
push
cwtl
sarb
push
out
stos
dec
mov
cwtl
mov
cmpsb
test
sbb
fistps
xchg
mov
call
sbb
mov
repz
ret
js
lods
cmc
sti
push
mov
adc
xchg
or
fwait
pop
negb
add
ret
inc
subb
pop
inc
mov
jns
jns
sub
xchg
in
insl
dec
sbb
stos
jo
inc
inc
ret
popa
inc
cmp
cmp
int3
call
xor
xchg
adc
xchg
add
neg
adc
loopne
movsl
jae
das
jbe
or
dec
pop
outsb
scas
mov
dec
outsl
in
lods
lret
das
fnstcw
xchg
ficoml
cmp
popa
add
jbe
clc
fisubl
mov
fucomp
fimuls
xchg
ljmp
sti
inc
push
inc
xchg
shlb
shlb
adc
xor
pop
pusha
hlt
outsb
les
call
aas
out
movsb
adc
jb
jmp
sub
je
call
mov
subl
and
add
xchg
fnsave
sti
jge
sbb
adc
adc
dec
movsl
imull
adc
and
mov
push
addr16
addr16
lods
inc
decl
or
xchg
aaa
scas
popa
enter
fnstcw
pop
xlat
inc
les
movsl
push
sbb
out
mov
sbb
dec
decb
daa
mov
xor
fistl
js
push
pop
jne
mov
bound
test
test
push
xor
push
jne
cmpsl
add
cmp
subl
aaa
aas
fnstcw
mov
sub
pop
repz
mov
or
dec
cs
inc
jle
mov
fbld
test
inc
dec
push
leave
stos
jl
cmpsb
sub
xor
or
fwait
push
sbb
add
fsubr
mov
push
imul
xor
mov
or
out
insb
jne
es
dec
icebp
inc
push
movsl
adc
shll
adc
dec
rcl
adc
rcll
or
xor
xor
add
adc
pop
rcl
lcall
iret
pop
push
jecxz
dec
cli
stos
fbstp
mull
mov
xchg
jecxz
add
or
xchg
adc
inc
bound
inc
sbb
xor
mov
add
xchg
adc
aas
adc
jno
mov
popf
adcl
mov
in
mov
mov
loope
mov
andb
mov
in
roll
sbb
ljmp
ss
jl
sub
mov
loopne
or
stos
cmp
aaa
mov
out
pusha
subb
cmpsb
loopne
clc
pop
scas
js,pt
mov
mov
xchg
mov
sahf
lret
imul
pop
lcall
lods
xor
mov
pop
pop
dec
fwait
mov
xchg
outsb
or
add
inc
dec
enter
loopne
mov
jne
jbe
stc
ja
stos
into
or
int
dec
scas
mov
shlb
add
lret
in
xor
fidivs
jle
mov
ja
add
mov
insl
mov
xlat
cmp
stos
xchg
mov
out
mov
and
xor
popf
mov
jae
dec
in
xchg
repz
cltd
mov
rcrb
daa
push
icebp
test
ds
pop
add
sahf
pop
sbb
push
adc
or
inc
stc
test
pop
add
repz
dec
push
pop
rcr
sub
fwait
xor
icebp
and
cmp
out
and
pop
ret
add
jae
xchg
iret
jne
sub
mov
mov
adc
stos
dec
xchg
aaa
xor
mov
sub
push
cltd
push
insb
inc
pop
inc
xchg
sub
mov
in
inc
cmpsl
je
out
mov
mov
jns
mov
inc
mov
leave
cmp
or
mov
jae
sub
add
pop
subb
clc
dec
aaa
push
jg
bound
mov
and
sti
and
xor
cmp
jecxz
pop
push
fldl
or
shl
mov
xor
mov
mov
dec
test
adc
mov
ja
jae
orb
lret
mov
xchg
mov
add
in
jb
lds
xor
mov
dec
stos
fldt
loope
roll
lcall
pop
lods
fiadds
ds
lar
mov
xchg
into
mov
add
xor
or
jl
rcl
inc
sub
nop
clc
push
sbb
ret
jae
sbb
inc
out
inc
or
sbb
arpl
inc
lods
out
xchg
and
push
inc
cld
jp
pop
xchg
jnp
cmp
mov
pop
or
pop
jne
cmp
imulb
fwait
jg
enter
scas
in
aam
push
mov
xor
xchg
fildl
cli
cmp
push
push
xchg
sbb
push
hlt
mov
div
adcb
movswl
arpl
stos
pop
push
lret
ss
arpl
fdivl
push
and
and
sub
jns
cmp
jg
sub
mov
inc
lret
xor
pop
lock
imul
fimull
and
inc
xlat
dec
push
imul
jno
movsl
jl
xor
fimull
cmpl
movsb
push
push
cs
cs
sbb
pushf
movsb
loop
mov
dec
or
pop
jb
add
pop
xchg
lret
mov
sbb
cli
sub
lds
mov
dec
push
dec
add
iret
jo
mov
adc
lret
jb
xor
mov
into
popa
jbe
xchg
out
sbb
frstor
mov
jle
jnp
dec
clc
push
xlat
into
ljmp
adc
xchg
dec
movsl
enter
jb
xor
loopne
mov
pavgb
je,pt
jbe
xor
adc
or
dec
stc
ret
push
mov
je
pop
xor
jae
imul
mov
jl
fisttpll
lret
arpl
push
adc
push
adc
cld
std
mov
aas
dec
inc
shrb
cmp
test
jo
dec
jnp
lds
lsl
loopne
push
das
inc
sti
sbb
inc
test
mov
cmp
add
fdiv
jle
jbe
addr16
adc
mov
jp
cmp
loope
push
int3
mov
push
pop
adc
mov
mov
jecxz
mov
jl
push
loope
test
pop
pop
xor
cwtl
jle
add
aad
repnz
movb
jb
fstps
outsl
adc
and
mov
aaa
mov
mov
iret
cs
mov
jns
pop
out
aaa
out
xchg
outsl
push
jbe
xor
cmc
pushf
into
out
scas
int
jb
gs
mov
in
dec
jmp
sub
je,pn
ja
adc
jne
fisubs
xchg
jnp
jg
mov
out
jo
dec
decl
addr16
add
test
and
pop
mov
into
push
leave
adc
inc
out
outsb
mov
out
es
out
test
xor
aam
xor
cmp
cli
mov
or
adc
adc
nop
inc
ret
xchg
in
cmp
jle
inc
xchg
out
fcmovb
jns
xor
push
sub
mov
xlat
pop
mov
lods
pop
mov
out
lea
shlb
cmp
adcl
fdiv
loopne
jge
sbb
sub
push
mov
int3
lock
fprem
xlat
test
jmp
cmp
fdivrl
cli
xor
call
sub
std
dec
stos
mov
inc
jp
dec
je
cld
adc
jge
stos
adc
fs
lcall
dec
push
mov
dec
push
aas
push
xor
les
mov
repz
fsubp
aas
imulb
gs
out
cltd
push
mov
or
inc
sbb
pop
push
mov
pop
jmp
jnp
mov
daa
fcomip
push
xchg
mov
jnp
outsb
movsl
push
adc
mov
sub
enter
pusha
ficomps
outsb
push
cmc
mov
popa
pop
das
notb
adc
sub
xor
pop
push
dec
sub
xchg
cltd
pop
lret
pop
xchg
fisubs
pop
int3
add
movsl
push
pop
outsb
dec
push
sbb
xchg
or
insl
fiadds
pop
adc
daa
shrl
inc
cwtl
mov
push
jl
out
xchg
pushf
xchg
cmp
movb
sbb
outsl
scas
jns
sbb
aam
lods
scas
loope
cmp
rolb
mov
call
inc
cmp
sti
push
and
mov
jmp
pop
adc
and
and
mov
addr16
icebp
jecxz
jg
mov
mov
and
xchg
inc
hlt
cs
mov
pop
mov
mov
sbb
fisubs
data16
out
fnstsw
cmpsl
mov
into
mov
icebp
roll
xchg
sub
mov
rdtsc
shll
xlat
popa
int
mov
xchg
add
xor
leave
pushf
xchg
lahf
mov
jge
test
xchg
ja
lret
insl
hlt
std
fbld
cmp
push
push
aas
dec
aam
hlt
lret
and
ss
jecxz
xchg
inc
mov
cmpsl
mov
pop
pusha
push
jnp
test
sub
push
adcb
jmp
and
out
shl
sbb
in
out
fdivl
mov
mov
mov
ret
xor
lea
and
test
insb
out
jne
pop
and
jmp
lock
fs
into
cmp
fwait
dec
pop
push
push
pop
push
pop
stc
loope
and
inc
lahf
lahf
push
push
sub
dec
sbb
popf
mov
cmp
fadd
aam
adc
insl
push
inc
push
dec
jge
push
jg
and
cmpsl
push
pop
dec
push
out
arpl
data16
jo
mov
into
sbb
aas
arpl
cmpsl
push
push
loope
shll
stos
out
nop
mov
push
imul
sub
lcall
jb
push
hlt
cmp
push
cltd
push
stc
jp
push
fistpll
mov
xchg
in
jbe
sbb
int
test
xchg
jns
cmpsb
jmp
pusha
imul
sub
lea
pop
pop
push
sbbl
mov
xor
ljmp
or
lea
das
out
dec
mull
mov
sub
mov
out
adc
lret
imul
mov
dec
jmp
daa
dec
sbb
js
xor
cld
lea
shr
hlt
inc
jmp
pop
mov
push
xor
cmp
sub
stos
sub
rorl
push
push
hlt
aaa
ss
rolb
repnz
mov
sub
jmp
repnz
push
add
loope
push
dec
or
enter
gs
scas
xor
adc
cmpsb
maskmovq
idivl
js
stos
xchg
fistl
stc
xchg
shll
aam
xchg
in
jnp
cmp
mov
pop
popa
push
sbb
dec
movb
cmc
out
into
jg
in
push
fs
jo
sti
add
sub
fbstp
insl
dec
aam
adc
xor
or
movsb
outsl
stc
sub
daa
sti
sti
dec
xchg
out
adc
pusha
jge
fs
loop
pop
push
call
jmp
jmp
bound
dec
or
insl
xor
stc
mov
mov
lods
gs
daa
data16
je
test
idivb
mov
mov
fisubrl
cmp
pop
aas
ds
nopl
inc
jnp
mov
out
mov
aam
sbb
sbb
cmp
fdivrl
iret
lcall
mov
es
mov
mov
sbb
mov
ficomps
sbb
stos
and
mov
mov
dec
scas
xchg
mov
dec
xchg
xchg
es
dec
dec
pop
cmc
ljmp
inc
push
dec
fs
push
jl
loop
cmp
lcall
aad
pop
dec
xchg
push
outsl
rol
jp
mov
in
pop
je
and
xor
push
test
repnz
push
sbb
lret
mov
in
movsl
mov
addb
subb
in
sti
leave
es
sub
xchg
lret
mov
sbb
cmp
js
mov
or
jg
daa
push
pop
lea
inc
pop
fs
xor
mov
mov
mov
adc
js
jmp
loopne
or
ret
insb
mov
call
adc
cmp
addr16
incb
and
or
add
or
dec
lods
mov
movsl
mov
repnz
pop
add
xchg
loope
mov
subl
fcomip
and
sub
fnstenv
jecxz
inc
mov
mov
mov
push
mov
loop
push
movsl
daa
push
or
fidivs
push
mov
popf
push
inc
out
cld
inc
leave
jo
fcom
jl
or
jge
addl
movsb
adc
decl
jg
mov
fdivrl
loop
push
dec
pushf
pusha
pop
push
adc
mov
sbb
inc
mov
adc
fists
push
test
mov
sub
cmp
jb
addr16
mov
mov
xchg
add
rorb
vpmulhw
stos
jmp
or
xchg
cwtl
insl
push
adc
and
aam
lret
mov
jo
fisubrs
push
inc
stc
jb
dec
fdivrs
shll
std
xor
mov
cwtl
sub
mov
jle
ss
loope
pusha
call
fnstenv
add
inc
xchg
mov
lahf
aam
es
pusha
shlb
jecxz
sti
aad
aas
xlat
xor
movzwl
xor
push
orb
dec
mov
xchg
mov
mov
ja
sbb
cmc
stos
js
fwait
and
pop
nop
test
inc
cli
adc
mov
sbb
imul
add
jg
dec
sbb
add
jae
cvtdq2ps
enter
xor
sub
das
inc
jp
aam
mov
pop
pop
push
adc
pushl
dec
repnz
int
insl
scas
int
sub
cvtps2pd
adc
test
int3
mov
jae
cmp
addr16
cmp
enter
xchg
push
iret
or
xchg
fcmovbe
sbb
test
data16
lret
mov
sub
xchg
pushl
sbb
pop
neg
out
mov
hlt
popa
aas
decb
mov
mov
pop
stos
sub
cmpsl
jne
and
pop
jmp
dec
mov
add
inc
xlat
xor
ja
jmp
jg
xchg
and
fdivl
popa
lock
shll
stos
and
pop
xor
add
call
addr16
js
fadds
test
push
cmpsl
mov
fidivl
or
call
fwait
dec
pop
popa
mov
stc
sbb
add
cmpsb
nop
insl
adc
push
orl
push
xchg
test
jg
sub
sar
and
mov
push
mov
rolb
clc
fsubr
mov
inc
and
loop
jnp
jo
test
sbb
fstps
dec
inc
imul
in
popf
pushf
jg
outsl
add
insl
push
lods
jle
push
fidivrl
imul
inc
scas
jae
push
pop
jo
cmc
dec
xlat
xlat
imul
bound
ss
push
mov
sub
hlt
xchg
adc
sbb
stc
lods
movsb
lods
lret
cmp
sub
adc
dec
jbe
add
lret
rcll
das
testb
xchg
push
pop
mov
or
mov
xchg
fs
insl
sbb
cmp
mov
mov
scas
jne
and
into
fstps
rcl
scas
jge
and
jo
xor
out
jae
scas
add
jl
and
add
jbe
arpl
hlt
sub
cmp
adc
mov
dec
cwtl
push
movsl
or
test
and
xchg
add
jecxz
inc
mov
ficomps
dec
jnp
or
mov
sahf
rol
lock
popf
mov
or
cli
aaa
sbb
cwtl
or
adc
test
std
mov
sti
add
jnp
das
jb
cmpsb
jb
and
data16
rcll
pushf
cmpsb
les
sahf
imul
cmp
xor
sti
dec
outsl
inc
jae
mov
jecxz
in
xor
xchg
jl
or
hlt
xchg
xchg
inc
popa
xchg
push
popa
scas
mov
fdivs
mov
dec
pop
rolb
xor
out
ss
sub
sub
jo
or
lods
pop
mov
out
sub
jno
hlt
ret
push
jle
dec
dec
jg
scas
or
xchg
inc
stc
pop
mov
repz
cmpsl
fdivrs
sbb
dec
mov
sbbl
ljmp
arpl
mov
xchg
idivl
aad
inc
jbe
cmp
mov
pushf
inc
test
movsl
jl
mov
cwtl
jne
mov
je
fwait
inc
stos
dec
and
out
and
lcall
cmp
cli
cmpsl
jno
or
and
shl
cld
in
add
fmuls
xchg
jle
jae
cmpsl
inc
mov
jae
pusha
shufps
push
xchg
lods
sbb
stos
or
sahf
pop
mov
jle
xor
sbb
xchg
imul
mov
lods
push
addr16
dec
sbb
outsl
mov
xchg
jnp
pop
cmpsl
mov
add
fcomip
mov
fwait
cltd
pop
pop
ja
inc
xor
loopne
repnz
and
jns
jno
out
fisttpll
shrb
sbb
icebp
icebp
jbe
add
pop
cmp
int
sbb
mov
cltd
and
adc
leave
sbb
fwait
cmp
add
and
and
jo
xor
add
xor
sub
jg
decl
mov
and
setl
fidivl
jmp
jmp
adc
lret
ds
outsb
andb
xor
sbb
xor
mov
lds
test
sbb
stos
js
out
aam
xchg
sahf
pop
mov
pop
aad
mov
sti
hlt
mov
dec
inc
iret
xlat
sub
divb
insb
sarl
scas
paddw
or
fists
xor
in
xlat
pop
mov
pop
pop
in
push
inc
add
cmp
inc
jg
mov
sub
mov
push
sbb
sbb
js
sbb
mov
mov
mov
les
sub
rep
imul
push
and
jnp
stos
sbb
js
or
and
adc
add
or
jae
gs
add
cmp
ret
sbb
xchg
xchg
add
adc
roll
inc
fimull
cmp
jns
or
je
fst
pop
mov
scas
int3
add
fbstp
pop
xchg
jg
ja
push
lock
jl
test
xchg
push
hlt
push
aam
xchg
and
add
dec
shrb
test
movsl
bound
scas
cli
or
and
jns
hlt
pop
test
fwait
inc
sarl
sub
in
mov
and
data16
int
jp
movsl
and
mov
js
adc
mov
in
test
dec
in
xlat
sub
adc
sub
aaa
test
ret
inc
mov
xor
dec
in
cwtl
pushf
mov
pop
cwtl
dec
loop
jmp
pop
push
ljmp
test
aam
xchg
aam
mov
mov
jg
repz
jae
das
enter
out
jmp
cmp
cmovb
lods
std
call
fwait
push
fisttpll
in
and
out
hlt
jecxz
jbe
loope
push
mov
mov
fiadds
clc
mov
push
nop
push
xchg
pop
and
sub
popa
xchg
sysenter
dec
sbb
insb
jecxz
pop
cmpsb
lret
cltd
pop
inc
loope
or
xor
fldt
add
adc
in
add
sbb
lret
cli
inc
pop
enter
and
push
xchg
sub
mov
or
dec
inc
jmp
fldcw
repz
sbb
mov
dec
mov
add
ret
mov
lds
dec
in
mov
les
ss
sbb
and
dec
mov
lds
nop
jle
sub
out
inc
lock
dec
fsubrs
dec
dec
sbb
xor
aaa
sub
lret
pop
stos
xor
stc
jne
lret
test
lahf
ds
rep
test
fincstp
push
stc
insl
mov
call
dec
inc
cmp
lods
push
lret
cmp
add
dec
popf
jecxz
fnstenv
mov
cmpsl
stos
hlt
test
pop
adc
in
js
push
loopne
int3
and
jno
pop
js
pop
lret
int3
pop
loopne
mov
lods
pop
lods
sbb
int
push
pop
sbb
testb
add
ret
adc
and
mov
lcall
inc
imul
movsl
nop
mov
mov
sub
dec
mov
sbb
repnz
jecxz
js
imul
jb
scas
data16
cs
int3
rclb
imul
jae
lods
inc
imul
pop
and
jp
cmp
shlb
popf
inc
jbe
cmp
test
and
mov
pop
jb
sub
mov
cmp
popa
mov
or
lahf
ret
je
or
pop
test
std
and
stos
bound
cmc
jmp
cltd
pop
pop
jb
sarb
pop
dec
inc
lret
add
adc
push
jg
xchg
mov
sbb
adcb
pop
addb
and
jnp
push
lds
adc
nop
das
nop
xor
scas
push
mov
mov
push
fs
add
xor
test
or
andb
or
dec
movsb
or
je
mov
inc
daa
lahf
rclb
test
cmpsb
scas
out
iret
jne
jmp
push
ss
hlt
dec
jne
cli
and
cmpsb
mov
mov
mov
sub
pop
adc
jge
push
add
cmp
aaa
cmpsl
xchg
cltd
cmp
shlb
jge
insl
pop
gs
in
cltd
movsl
mov
mov
sub
mov
imul
js
cmc
icebp
jmp
and
cld
mov
sahf
lods
sbb
sub
nop
lds
and
dec
popa
ret
xor
pop
stos
inc
and
fldpi
add
fadd
sub
insl
push
lods
stos
fwait
lea
mov
fimuls
lcall
ljmp
push
loop
rolb
lea
pop
mov
dec
pop
fcomp
cmp
stos
out
es
dec
push
mov
call
sbb
add
clc
cmpsb
mov
sbbb
lret
out
inc
shlb
enter
xchg
imul
fiaddl
sbb
jae
fmull
out
loop
push
push
pop
ret
icebp
and
mov
or
int
xor
and
les
mov
xchg
push
and
pop
jnp
insl
sbb
sbb
hlt
mov
iret
cld
fidivs
mov
xchg
lret
pop
fcoms
iret
xchg
pusha
cwtl
lods
or
push
shr
or
pop
rclb
pop
decb
movsl
mov
cld
dec
pushf
mov
add
xor
pop
mov
call
inc
add
outsb
lret
shlb
fimull
mov
daa
decb
sub
jo
ljmp
lods
mov
xchg
aad
and
mov
dec
pop
and
data16
sarb
jns
aad
xchg
push
mov
push
cmp
adc
pop
test
in
lock
mov
lods
xchg
aad
dec
cmpl
aas
dec
repz
scas
in
mov
xchg
mov
clc
mov
pusha
cmp
pop
push
and
inc
cmp
inc
xchg
pop
in
out
ljmp
sbb
pop
or
stos
or
xor
jge
and
mov
decb
sbb
dec
or
rorb
in
push
dec
clc
into
or
push
add
outsb
adc
daa
mov
scas
xchg
inc
add
pop
push
daa
cmp
adc
and
mov
pusha
call
roll
add
sbb
inc
mov
pop
cmc
cli
cmpsl
adc
jge
jns
call
mov
sub
jbe
aad
sub
out
lret
push
cmp
arpl
sub
dec
push
sti
outsb
rcrl
test
mov
push
and
sbb
stc
push
cld
iret
adc
enter
stos
pop
fildll
adc
rcrb
push
hlt
test
insl
xchg
pop
jge
mov
int
mov
adc
add
lock
movsb
pop
jmp
bound
sub
cmp
push
andb
push
insl
mov
rcrb
xchg
cmp
aad
enter
or
cmp
inc
mov
cmpsb
jle
int3
das
mov
cs
xchg
popf
jecxz
sbb
imul
xchg
stos
outsl
inc
ret
or
repz
push
xchg
inc
or
outsb
iret
and
jg
jge
sarl
adc
cmp
gs
and
sbb
test
or
es
sub
cmp
xor
aam
into
popf
mov
inc
sub
cwtl
adc
cmp
xor
je
mov
fwait
jb
add
fcomps
add
and
out
idivb
adc
icebp
sub
bound
lods
adc
cld
in
repnz
pop
dec
test
push
test
cmpsl
divl
mov
cmpsl
inc
aam
inc
sub
lret
adc
cli
test
pop
sbb
cmp
inc
sarl
or
out
pop
and
or
cmc
jg
xor
and
test
jp
lahf
movsl
sub
movsw
xlat
loop
dec
and
xor
inc
ljmp
neg
aaa
jmp
jecxz
es
shlb
sub
test
adc
out
mov
lret
push
cli
sbb
push
mov
adc
jge
mov
out
pop
insl
inc
dec
mov
xchg
scas
adc
xor
sbb
mov
mov
fisubrs
mov
cmp
or
add
xor
xchg
fdivrl
push
insb
mov
inc
sbb
outsl
fidivl
and
jecxz
paddsb
dec
push
rcl
pop
mov
add
outsl
dec
fcoms
add
and
outsb
push
xor
loop
pop
add
pop
and
inc
sub
push
push
push
andb
or
or
testl
fs
xchg
pop
outsl
jb
push
pop
fdivr
cld
push
test
inc
add
mov
jge
pop
adc
rorl
out
jp
cld
addl
js
add
mov
lahf
shlb
outsl
add
add
addr16
xchg
fnstcw
push
addr16
lahf
push
mov
sub
in
jns
out
pusha
outsb
inc
aad
sub
jb
mov
cmp
push
aaa
jbe
scas
cmp
in
sti
outsb
mov
lds
pop
int3
enter
jecxz
lcall
sbb
movsl
dec
sbb
inc
sbb
bound
sbb
push
mov
movsb
push
inc
cwtl
push
outsb
ret
xchg
ss
adc
or
shlb
mov
ror
ja
push
cwtl
mov
roll
xor
push
ja
jns
dec
cmp
cmove
xor
scas
sbb
aad
movsb
fwait
es
pop
insb
sub
mov
int
lods
sub
mov
add
dec
orl
out
in
push
dec
insl
sbb
xor
push
rcrb
mov
stc
repz
insl
movsl
cmp
xor
xchg
imul
in
push
or
pop
add
js
sbb
std
fnclex
gs
mov
jecxz
or
sbb
xchg
fsub
dec
mov
sbb
popf
hlt
fsubs
cmpsl
movsb
mov
xor
push
sahf
stos
and
data16
aam
lock
xchg
enter
and
test
loope
mov
sub
xor
sub
add
and
lea
inc
ficomps
hlt
fwait
loop
mov
call
xchg
or
inc
push
mov
ljmp
outsl
stc
movsl
xor
pop
ljmp
outsl
mov
jo
std
fsubrl
pop
std
in
and
or
icebp
cmp
mov
sbb
ja
jecxz
add
imul
push
adc
push
mov
xor
shl
and
mov
js
mov
mov
gs
xor
mov
add
push
mov
mov
push
mov
fisttpll
add
add
mov
call
jmp
cmp
lahf
push
mov
in
xchg
cs
in
cmpps
mov
sbb
mov
cld
add
cmp
test
pop
cwtl
inc
push
mov
inc
cmpsb
xchg
fwait
cmpsl
jns
dec
or
adc
dec
lahf
and
sbb
pop
mov
mulb
xlat
rcrl
inc
popf
cmp
push
xchg
adc
jb
inc
cmp
push
inc
add
ficompl
jnp
iret
fucomp
dec
sub
lods
fstpt
jbe
outsl
pop
into
xlat
cmp
xchg
ret
adc
mov
lret
sub
cmp
fucomip
mov
scas
icebp
movsb
ret
mov
xlat
fs
pop
fwait
shr
iret
add
pop
adc
call
js
test
outsl
lods
scas
dec
adc
xchg
xor
je
shl
push
loopne
sbb
adc
inc
pop
lock
jl
mulb
ja
push
jnp
rcrb
sbb
icebp
aam
or
mov
adc
data16
inc
xor
bound
xor
arpl
mov
out
dec
sub
mov
jg
sbb
aam
jne
les
cwtl
sahf
sbb
add
leave
jo
in
lds
sub
push
xor
or
sub
inc
daa
mov
stos
scas
in
loope
sub
es
fs
js
push
arpl
es
pop
cmpsb
add
mov
mov
dec
sbbb
xchg
push
cmp
dec
inc
pop
mov
mov
es
in
imul
lock
movsb
jb
aas
sbb
sti
push
dec
das
dec
inc
repnz
out
pop
into
rcll
call
mov
pop
jge
xchg
or
cmp
mov
das
dec
cltd
or
mov
add
repz
adc
cli
dec
imul
out
sub
adc
add
insb
outsl
adc
iret
aad
out
xchg
ret
push
jcxz
lea
push
lret
loop
lds
cli
xorb
mov
call
mov
xchg
pop
and
pop
es
clc
mov
mov
cmp
mov
es
pop
pushf
adc
hlt
push
lcall
int
aaa
push
or
adc
adc
sub
xchg
pop
push
idiv
ja
push
mov
jno
pop
lret
outsl
jl
pop
in
xor
inc
mov
sub
adc
nop
lds
pop
rorb
add
mov
and
lea
dec
jg
mov
sbb
lock
cs
dec
mov
enter
es
xchg
jle
enter
mov
sbb
stos
das
push
inc
int3
mov
scas
xchg
jnp
mov
jne
aad
pop
ret
pop
cmp
pop
and
inc
ss
rclb
dec
sbb
xor
mov
cmpsb
cli
fwait
and
leave
arpl
aaa
scas
sbb
and
xor
test
xchg
out
mov
pop
popf
ds
lcall
add
sub
arpl
or
xchg
popa
outsl
jmp
mov
push
out
ljmp
cltd
xorl
sub
xchg
mov
xor
data16
mov
mov
jge
cmp
sub
pop
fsubrs
out
push
push
fildll
dec
andl
js
pop
test
cmpsb
lock
pop
cmpsb
inc
mov
je
outsb
hlt
stos
daa
mov
mov
and
inc
scas
inc
adc
test
pop
fsubs
sbb
daa
scas
adc
add
pop
sub
or
mov
xchg
test
jmp
push
leave
jecxz
call
mov
xor
or
pusha
cs
sub
out
mov
and
imul
cli
mov
add
push
cld
hlt
lock
imul
dec
fisttpll
mov
xor
aas
pushf
repnz
out
cmp
rorb
fidivrl
movsl
and
int
mov
fnsave
pop
repnz
fcmovu
add
enter
xchg
int3
into
ljmp
mov
jg
rorl
dec
jb
lahf
movsl
push
cmp
es
jmp
jo
and
xchg
cmp
sti
xchg
dec
call
repnz
sahf
cmc
orb
movsl
mov
cmp
ret
cmc
loope
inc
mov
shlb
mov
jnp
mov
ljmp
dec
gs
cmpb
aam
xor
push
xor
cmp
pop
leave
js,pt
mov
test
jecxz
es
data16
pop
sti
mov
sbb
lret
sahf
fs
fs
lds
add
dec
xchg
push
loopne
push
cmpb
aam
popf
xor
jl
nop
sub
popl
cld
popl
outsb
nop
in
loopne
testl
add
and
and
out
or
and
xor
out
push
iret
hlt
dec
mov
sbb
fsubr
idiv
stc
push
notb
stos
shll
sbb
mov
sahf
sar
cmp
xor
insl
xchg
mov
fwait
iret
mov
in
mov
inc
out
cmpsb
lahf
bound
dec
pusha
and
loopne
xor
inc
scas
test
dec
int
sub
pop
xchg
inc
test
pop
push
scas
pop
insb
cmpsb
aad
imul
mov
scas
ja
lods
enter
out
mov
aaa
subl
daa
aaa
inc
mov
sub
sarl
test
rcll
lods
fstpl
cltd
dec
fstpl
or
or
gs
lret
pop
in
fstps
mov
sbb
jg
push
fs
movsb
rcll
mov
jge
jmp
mov
lcall
push
mov
xor
jg
pop
jo
push
lret
pushf
fwait
les
in
jae
stos
xchg
xlat
cltd
data16
push
xor
add
js
lret
aad
jle
lret
add
aad
sahf
mov
jbe
dec
jns
idiv
in
and
leave
ret
mov
push
gs
pop
xchg
gs
mov
jp
sahf
scas
mov
andl
pop
jb
inc
call
lcall
int
ds
mov
push
mov
or
ret
jnp
test
adc
mov
adc
sarb
dec
iret
sarl
and
scas
cltd
leave
lret
cmp
sbb
mov
inc
std
insl
data16
mov
lock
dec
pop
stos
sub
mov
or
jae
cmp
ja
ljmp
push
dec
push
bound
dec
xor
jp
lfs
push
mov
leave
pushf
dec
in
stos
and
shufps
pop
leave
xlat
sti
pop
xor
cwtl
scas
scas
push
ss
xlat
cs
dec
sti
jge
push
inc
cmp
ljmp
rorb
inc
sub
dec
mov
jp
lret
dec
addr16
lock
outsl
iret
scas
sahf
sbb
shlb
cwtl
cmp
xorl
inc
stc
test
add
and
enter
addb
and
mov
fadds
and
and
lcall
lret
ljmp
push
lea
pop
pop
lret
xchg
cld
repnz
sub
or
dec
cmp
scas
sbb
push
push
call
aad
stos
inc
pop
movsb
fmuls
sbb
push
or
jno
sub
pushf
cli
adcl
or
push
loop
jns
inc
and
rorl
call
std
stos
fwait
sub
into
hlt
xchg
push
mov
fiaddl
in
mov
pop
add
push
cli
mov
cli
cli
daa
adc
bound
sub
jno
imul
in
and
pop
in
inc
aam
hlt
sbb
and
dec
test
mov
sti
and
test
out
arpl
lea
in
dec
fldl2t
loope
js
xor
aaa
mov
jno
testb
xor
xchg
ja
or
and
fcmovu
xlat
test
mov
and
out
add
dec
dec
aas
imul
dec
ljmp
lea
add
xor
scas
xor
jecxz
cmp
fildl
aam
rcll
or
xor
jno
jp
rcll
cmpsl
fsubs
es
inc
bound
fstl
stos
cmp
push
xchg
xor
push
pop
xchg
dec
inc
xlat
or
cmp
rclb
xchg
aad
int
ja
mov
and
xchg
pusha
pop
mov
insb
sbb
pop
dec
imul
cs
ljmp
push
push
in
rcrl
fidivs
xchg
aam
dec
cld
mov
data16
pop
jmp
lret
icebp
cmpsl
out
pop
mov
sbb
aad
xor
std
popa
je
pop
xlat
aam
mov
xor
mov
sbb
add
stc
lods
jp
out
imul
mov
xchg
xchg
call
sbb
mov
mov
fmulp
int
sub
leave
dec
sub
dec
out
loopne
or
ljmp
nop
jnp
sub
movb
mov
stc
repnz
loopne
mov
repnz
mov
fdivs
mov
sti
jb
push
inc
les
jle
fisubl
pop
test
into
test
les
test
xor
rcrl
icebp
mov
call
mov
je
mov
pop
adc
in
or
jno
imul
push
fildl
cmpsl
fxch
outsl
sub
popf
dec
pop
adc
arpl
rcrb
fmuls
sub
dec
out
xor
fs
pop
divl
dec
mov
sbb
sti
les
aas
xor
jmp
cmp
push
out
test
jmp
dec
pop
push
pop
into
xor
and
les
xor
iret
mov
out
into
mov
mov
push
add
ja
add
sbb
stos
xchg
dec
add
xorl
loopne
adc
sub
jne
sarb
scas
jno
jmp
or
leave
sub
mov
xor
pop
push
mov
faddl
gs
mov
jg
aas
lcall
and
loop
mov
jle
mov
aas
ljmp
cmp
add
fiadds
push
fs
jecxz
into
es
sub
jmp
shr
out
shll
imul
scas
scas
popa
mov
aad
aad
push
push
sbb
sti
lods
jl
pmulhw
mov
adc
mov
xor
out
stos
dec
jb
pop
aad
jae
push
pop
inc
adc
movsb
out
push
adc
dec
data16
loopne
mov
lcall
cli
mov
xchg
in
lods
in
push
push
testl
adc
enter
cs
lret
mov
adcl
xlat
mov
ljmp
hlt
sbb
out
fdivl
xor
lods
ja
mov
mov
inc
js
fistpl
mov
aas
add
mov
fldcw
das
stos
popa
fldenv
cmp
das
inc
add
movsl
add
mov
into
out
mov
es
rol
mov
cmp
outsl
lret
leave
cmp
bound
pop
mov
lods
mov
outsl
shrl
or
push
and
rolb
cmpsb
add
sbb
cs
push
pop
push
fimull
jle
xchg
loop
dec
jb
sbbl
mov
dec
push
cmpsl
mov
cli
jae
out
cmovno
xchg
pop
mov
push
sbb
in
mov
ss
mov
mov
gs
ret
addl
fbstp
or
inc
out
fistpl
dec
mov
push
nop
fsub
test
cmp
cmpl
mov
or
inc
jns
jl
cld
add
cli
mov
cmpsb
cwtl
imul
addb
sbb
sub
and
xlat
adc
xor
test
sub
call
lcall
sbbl
xor
pop
insl
and
cmpps
outsb
ds
lcall
out
stos
cmp
in
dec
lock
push
mov
testb
xchg
jno
lods
or
dec
dec
outsl
js
sti
xchg
subl
incb
ja
mov
inc
sub
sbb
lret
inc
add
cli
dec
pop
push
leave
push
dec
aad
push
cld
outsl
cmp
ret
bound
xchg
fdivs
imull
lret
pop
inc
call
xor
imull
fdivs
push
jle
adc
fxam
aaa
in
cmp
in
adcb
mov
sub
ljmp
mov
dec
inc
push
std
mov
cwtl
test
mov
aam
movsb
mov
push
mov
sub
inc
pop
mov
lock
pop
lods
dec
stos
pusha
jle
push
repz
and
cmp
inc
xchg
and
mov
push
ds
inc
cmc
in
mov
pop
mov
pop
inc
xchg
xor
adc
mov
imul
xor
add
mov
xchg
or
pop
push
jae
jbe
movsl
scas
dec
nop
push
nop
pusha
lea
mov
iret
dec
jne
add
pop
adc
sti
inc
inc
pop
mov
jae
sub
mov
pminsw
mov
js
outsl
lahf
dec
pop
andb
into
sbb
mov
sti
cmp
shl
shll
mov
xchg
lock
adc
xchg
adc
add
mov
or
mov
imul
lea
jne
add
iret
lds
repnz
lret
or
fstpl
cmp
in
cltd
scas
in
pop
pop
push
ret
stos
bound
mov
aas
xchg
les
xor
inc
jl
jnp
and
pop
cld
push
imul
mov
mov
cmp
fcom
addr16
pop
lahf
adc
mov
stc
cmp
jle
sbb
sub
or
cmp
out
xchg
fwait
push
mov
enter
lods
push
cmp
mov
jmp
jae
insb
cwtl
or
lcall
dec
inc
sub
rorl
movb
pop
and
and
loope
jb
push
sbb
xlat
out
cmp
xchg
lods
movsl
out
mov
or
adc
pop
push
lock
xchg
faddl
or
das
jg
mov
inc
leave
adc
cltd
and
mov
pop
ds
cld
ss
pop
lret
push
sbb
arpl
pushf
lea
sbb
and
dec
pop
inc
xor
mov
insb
or
inc
cli
sbbb
test
or
jae
adc
mov
adc
fistpll
jmp
sbb
mov
pop
cmc
inc
out
mov
jns
and
adc
mov
cltd
jmp
and
xchg
pushf
xlat
adc
dec
lahf
jl
cmp
push
xor
jne
xorl
mov
lds
jmp
das
ds
pop
pop
aad
mov
subb
sbb
sahf
outsl
adc
mov
mov
inc
lret
sbb
jle
mov
lret
loopne
mov
ret
adc
xchg
push
xchg
pop
lret
jns
cwtl
mov
scas
pop
xor
jp
push
mov
insb
popf
fstl
cltd
inc
mov
push
sub
inc
test
jbe
fstpt
add
pop
push
mov
pop
cli
mov
push
pop
sbb
xchg
lret
xchg
cmpsl
movb
je
repz
cmc
pop
shrl
loope
xor
mov
popf
in
int
sbb
adc
repnz
fisubrl
xchg
aas
repnz
loop
jecxz
xchg
popl
jl
mov
mov
mov
pop
insb
adc
push
out
or
add
dec
push
lods
push
sub
shrl
mov
adc
outsl
data16
mov
lahf
xor
cmp
sub
stc
stos
leave
repz
or
repz
mov
jno
add
pop
cmc
mov
jbe
jno
push
scas
hlt
outsb
test
stc
andl
add
outsl
aaa
jnp
pop
dec
xor
or
sub
mov
or
andl
cltd
jo
fcomi
ds
test
mov
pop
pop
mov
sti
mov
in
push
addr16
in
mulb
mov
xlat
xchg
xchg
push
fs
cmc
xor
loopw
mov
shll
icebp
mov
sub
xchg
jp
imul
enter
mull
sbbb
sbb
jg
insl
xchg
sub
or
xchg
loop
inc
fnstenv
xchg
or
xlat
fs
inc
ror
je
cmp
insl
sahf
push
and
fyl2x
jbe
push
shrb
lods
out
out
rcrb
mov
leave
jg
xchg
mov
push
inc
pop
aas
int3
les
or
xchg
cmp
push
iret
add
jg
xchg
cmp
xchg
flds
out
inc
jns
xchg
insl
loop
addl
and
jae
adc
mul
and
btsl
inc
xchg
ja
add
das
mov
mov
pusha
pop
mov
pusha
mov
nop
xor
int
adcb
sub
push
mov
jnp
mov
sbb
hlt
mov
je
jno
das
mov
push
out
xlat
mov
dec
add
jne
xor
and
or
or
mov
mov
xchg
pushf
outsl
hlt
mov
jnp
or
inc
dec
sbbb
repnz
fbld
or
orb
aas
test
jb
inc
pop
stos
test
out
into
push
frstor
popa
icebp
arpl
stos
cli
fildl
jecxz,pt
lret
jnp
shll
jge
adc
shrb
stos
sbb
frndint
sub
pop
xchg
sbb
popf
lahf
iret
rcl
gs
push
cmp
cmp
call
add
push
push
xacquire
fistpl
or
lods
fdivs
notb
pop
jae
lcall
fnstsw
lods
imul
cwtl
pop
pop
sub
fs
cwtl
jno
out
out
imul
push
fldl
and
loopne
cmp
or
or
test
or
xchg
and
push
xchg
pop
adc
pop
push
ficoml
xchg
adc
test
jbe
lret
mov
dec
jno
pop
icebp
cs
in
fxch
mov
lahf
mov
outsb
je
push
fists
jae
mov
imul
dec
add
push
xor
mov
in
pop
aad
fnstcw
sub
insb
mov
cmp
xor
imul
xchg
sub
aam
xchg
pop
cltd
clc
and
xor
inc
or
adcl
test
push
inc
les
pusha
call
call
mov
std
fldcw
popl
or
addl
data16
out
and
xlat
sub
cmp
jo
scas
fs
push
push
popa
sub
clc
ficomps
dec
jecxz
sbb
imul
mov
int
fldcw
mov
xor
popa
into
sbb
sbb
loopne
mov
psllq
out
pushf
flds
mov
sub
int3
call
lcall
cs
add
xorl
mov
adc
lcall
icebp
dec
daa
push
adc
sahf
or
les
aam
xchg
xchg
xchg
int
lea
out
hlt
xchg
call
inc
repnz
cmpsb
decb
sub
mov
push
mov
imul
and
sarb
fcomps
imul
cmpb
fdivp
stc
sti
mov
stos
insl
in
into
and
divb
and
aam
adc
dec
andb
inc
mov
lret
lahf
mov
push
jl
xchg
jnp
insb
xchg
arpl
mov
mov
sbb
in
pushf
icebp
and
jo
clc
out
fcoms
lea
enter
mov
jmp
xchg
xchg
mov
mov
push
mov
mov
sbb
adc
xor
insl
incb
addr16
cmp
and
popa
in
jae
jge
xor
dec
xchg
inc
adc
and
mov
into
inc
pop
movsb
test
jg
movsb
imul
pop
mov
jns
dec
fmulp
jmp
aam
mov
pop
pop
sbb
in
xor
or
add
add
mov
inc
sbb
outsl
jnp
loop
in
pop
iret
pop
sahf
out
jle
and
pop
pop
or
mov
inc
addr16
ret
mov
das
sarb
shlb
popf
xlat
lcall
scas
aad
jmp
ds
or
dec
aas
stc
push
test
sub
faddl
push
cli
pop
pop
gs
fisttps
mov
loop
popa
sub
mov
cltd
push
ret
std
outsb
mov
and
out
dec
je
int
jecxz
mov
jo
roll
inc
roll
xor
imul
mov
cmp
push
pusha
call
insb
add
and
jno
pop
mov
notl
mov
pop
inc
mov
push
sbb
in
nop
or
insb
sub
ret
bnd
mov
push
inc
sahf
loopne
xor
xchg
iret
fstl
imul
stos
cmp
test
aam
popa
push
jne
daa
cmc
inc
lahf
aas
and
xor
push
jecxz
out
lret
add
psllw
add
cmc
dec
xchg
mov
and
inc
jge
out
imulb
inc
inc
outsb
mov
leave
lea
xchg
cmpl
add
mov
pop
add
or
jne
sub
jl
scas
inc
xor
in
sub
jmp
les
inc
add
clc
lock
movl
jp
jle
pop
cmp
js
pop
sbb
or
loope
notl
lahf
cmp
aaa
xorb
mov
jl
inc
stos
into
adc
dec
aad
inc
loope
pop
rol
jle
dec
fwait
out
add
cmpsl
popa
sbb
adc
pushf
and
lock
shll
aaa
cmp
push
or
nop
lcall
pop
jae
gs
sub
jae
mov
adc
xchg
sub
add
icebp
sub
scas
inc
sbb
hlt
sub
sbb
xchg
inc
xchg
and
cld
lcall
push
fnstsw
rclb
mov
sbb
mov
and
cmpl
pop
mov
mov
jecxz
andb
test
sbb
and
push
lds
int
in
lahf
jl
adc
pushf
jmp
cld
fidivs
rcrl
popa
sub
cmp
mov
adc
cld
rolb
sub
pop
jbe
jb
mov
ja
das
bswap
push
jb
xchg
test
hlt
lock
test
mov
add
or
jecxz
add
repz
dec
aad
sbb
in
aas
or
scas
cmp
mov
xchg
imul
xor
loope
mov
or
mov
cmp
imul
mov
inc
movsl
mov
in
pop
or
scas
test
ss
aam
push
fisttps
mov
nop
sub
ja
outsl
outsl
push
jl
mulb
push
dec
out
shl
les
rcll
xor
sub
adc
addr16
testl
daa
inc
stos
in
pop
fistpl
cs
cmp
mov
inc
loope
mov
or
mov
lret
xor
movsb
cmc
sub
push
out
xor
xorl
adc
cmp
fld
in
dec
jns
fldl
ja
sti
and
rcrb
mov
pop
outsb
popf
jb
shlb
adcl
lret
sub
adc
pushl
push
mov
cmp
mov
cmp
repz
repnz
inc
dec
and
xor
mov
lods
sar
mov
scas
add
lods
add
sbb
sahf
mov
sbb
mov
icebp
mov
mov
stos
repnz
pushf
mov
mov
mov
rclb
sub
mov
or
xchg
sbbl
nop
pop
sahf
pop
or
loope
push
movsl
fcoml
cmpsl
mov
fistl
sbb
mov
addr16
test
sub
cli
dec
ja
mov
mov
push
test
lds
or
jae
aaa
fimuls
jns
out
test
jnp
aad
bndstx
daa
out
mov
mov
mov
jnp
aam
lcall
loope
adc
mov
mov
xorl
bound
test
inc
les
cwtl
xlat
movsl
or
cmp
jae
dec
bound
sti
imul
fsubp
sub
sub
ret
arpl
stc
cld
sub
sub
hlt
je
popa
andb
lcall
and
jle
out
mov
popf
gs
push
jnp
inc
add
xlat
cmpsb
xor
or
jnp
ret
gs
and
fistps
daa
cmp
iret
fcomps
xor
inc
stc
sbb
dec
jecxz
scas
lret
ljmp
sahf
xor
inc
add
inc
lods
cwtl
cmpl
pop
add
push
mov
cmp
adc
enter
lret
arpl
cld
cmpb
in
mov
dec
lahf
adc
mov
cmp
push
lds
std
lea
mov
add
test
inc
dec
leave
push
insl
pop
rcr
add
xchg
ror
add
add
inc
sbb
stos
lret
jge
rolb
cltd
dec
fidivl
push
outsl
add
mov
mov
sbb
test
rcrl
lcall
das
and
xor
dec
xchg
sbb
mov
cltd
cld
daa
mov
cmpsb
mov
pop
cs
mov
cpuid
push
push
stos
dec
inc
mov
fldenv
cli
loopne
sbb
xor
je
pop
cmp
repz
mulb
push
ret
and
in
ljmp
pop
lock
das
push
push
or
enter
dec
es
fcmovu
jmp
adc
push
iret
pop
mov
dec
xchg
jmp
jg
jae
test
mov
sbb
fs
loope
rcr
cmp
or
movsb
sub
sbbb
xchg
mov
xchg
out
js
push
push
nop
out
pop
push
shrb
adc
insb
xchg
idivb
push
mov
mov
xchg
and
push
jl
jae
jae
mov
mov
sti
pop
icebp
jnp
add
ljmp
or
insb
sub
jge
inc
mov
inc
xchg
sbbb
inc
cmp
aad
jns
lcall
and
cmc
cmp
push
repz
movsb
scas
push
sbb
ret
push
sbb
cmp
lds
sub
out
jmp
faddl
cmp
std
mov
cmp
jmp
adc
out
inc
add
or
or
ficompl
push
jmp
ret
mov
pushf
fisttpll
xchg
inc
sbb
jl
cmp
dec
xchg
test
xor
test
cs
shll
clc
fldt
add
das
shrb
pop
push
cmc
cmp
rcrb
cmp
repz
in
movsb
lds
jbe
pop
mov
add
pop
mov
popa
sahf
cmp
push
gs
and
adc
push
push
cmp
jbe
adc
sbb
mov
lea
mov
adcb
popf
push
call
test
divl
cli
add
and
push
sahf
cmp
cmp
fsts
mov
push
ljmp
mov
pop
not
mov
inc
pusha
push
pusha
push
iret
popf
mov
and
aas
mov
enter
repz
push
ja
pop
jbe
mov
xor
inc
cs
icebp
sub
dec
and
gs
add
daa
imul
add
mov
test
icebp
jp
lods
pop
pop
lret
dec
scas
mov
adc
fistl
add
loop
adc
jo
pop
mov
add
push
shlb
or
add
push
es
test
sub
cli
xchg
rol
outsb
bound
xor
ret
mov
stc
pop
mov
scas
xor
mov
arpl
pushl
sub
inc
psubw
xchg
ret
cli
arpl
into
dec
inc
hlt
enter
cmpsb
les
jecxz
jecxz
jg
xlat
adc
jbe
xor
jl
jle
mov
mov
jle
cwtl
pushl
mov
add
fnstcw
mov
cld
mov
mov
not
arpl
add
jge
xchg
lahf
ret
inc
push
and
subb
je
rep
xchg
sub
test
inc
cmp
inc
outsl
mov
cmpsl
or
xchg
aas
inc
sbb
outsl
fcmovnu
in
mov
push
paddd
out
push
mov
test
repnz
cmp
jae
pushf
out
gs
jecxz
daa
inc
add
scas
push
sti
sti
lret
gs
jnp
adc
mov
xchg
ss
push
hlt
inc
js
push
gs
icebp
icebp
cmp
add
add
xlat
fiadds
cld
mov
push
sub
jbe
sbb
add
mov
push
es
sub
adc
loop
and
xlat
sbb
xor
sub
or
xor
or
jne
dec
ljmp
jno
sub
fmull
mov
add
dec
pop
jp
js
jl
leave
mov
imul
push
je
mov
jecxz
push
xlat
push
pop
imul
imul
pop
or
into
out
test
sbb
xor
dec
inc
es
cmp
es
cld
cmc
sbb
xchg
jp
data16
aad
fildll
mov
or
jbe
mov
popf
pop
shrb
sbb
cmp
cmp
outsl
loopne
ror
fldcw
add
jnp
clc
push
mov
jne
push
mov
cmp
pop
jp
xorb
sub
jae
mov
cmp
jp
pop
push
push
iret
cmc
jl
inc
dec
push
lcall
in
xchg
pop
test
mov
mov
pushf
mov
pop
push
adc
xor
pushf
and
pop
in
test
dec
xor
cltd
inc
inc
sub
cmpsl
lret
adc
sti
out
cmp
pushf
sti
subb
arpl
lahf
test
xchg
scas
ror
pop
ja
lods
sahf
fdivrs
xchg
fwait
sahf
lods
inc
and
in
xchg
lret
enter
stos
cmpsb
add
dec
jo
insl
in
dec
mov
cmp
dec
xchg
aas
mov
adc
scas
clc
xchg
mov
lret
jl
xchg
fldenv
add
sub
push
xor
sub
sarl
jae
movsb
xor
dec
addr16
cmpl
add
testb
mov
jp
stos
mov
mov
lret
dec
fildl
lods
adc
mov
shlb
xlat
pop
addl
mov
push
pop
and
adc
stos
jle
insl
jne
xor
lahf
dec
int
mov
cmpsl
gs
push
rcrb
icebp
mov
lock
fwait
dec
and
loop
xchg
xchg
ljmp
or
sbb
jo
sub
jecxz
pop
and
xor
cltd
lcall
xor
sbb
jnp
jle
or
push
and
mov
fimuls
repnz
fstpt
sub
data16
mov
sub
cmpsb
fbstp
push
mov
or
pusha
sbb
shrl
sub
mov
and
dec
das
xchg
sub
jmp
fldenv
push
push
and
out
lret
rol
je
sub
lds
sub
aas
adc
lahf
icebp
mov
pop
scas
pop
cltd
out
aad
adc
add
je
inc
jge
int
inc
in
out
idiv
sbb
jb
fildl
rcll
cmp
mull
mov
repz
out
sbb
sti
lods
loop
sub
jno
jb
xlat
sbb
shlb
pop
out
and
icebp
jmp
push
mov
inc
lods
aad
cmpsl
add
pop
fs
pop
fiadds
push
pop
repnz
add
or
pop
sti
mov
idivb
stos
mov
loopne
mov
or
dec
dec
mov
xchg
loop
and
jo
fmulp
or
sbb
lods
push
fisubs
hlt
or
jnp
push
lods
fs
pop
lods
jecxz
mov
and
or
stos
dec
push
dec
imul
jmp
jno
bndldx
pop
dec
xchg
mov
push
push
cld
lods
mov
inc
gs
pop
repnz
rcr
notb
stos
dec
jae
pop
xor
pop
jbe
and
notl
pop
insl
adc
outsl
sub
cli
sub
push
je
xchg
mov
lahf
push
or
xchg
add
cmp
xor
int
lret
sub
lds
xchg
inc
mov
sub
clc
loop
mov
xchg
adc
dec
addr16
repz
stos
xchg
pop
push
cmp
adc
or
jb
fidivl
movsl
and
inc
cmp
inc
inc
repnz
aam
sbb
xchg
ljmp
push
inc
xor
lock
aas
mov
xor
popl
cmp
xchg
push
frstor
stos
lods
add
clc
sahf
sti
lret
cwtl
stc
inc
and
loope
jb
lock
lock
daa
shr
lock
pop
rcrl
mov
fxch
sbb
mov
sbb
adc
push
and
xchg
jns
fmul
out
dec
ja
aam
mov
mov
fcomps
inc
lcall
lret
insl
adc
push
xor
ret
pop
ds
fdivrs
cmp
xlat
or
pop
push
inc
jb
clc
mov
fists
jl
addr16
xor
popa
jnp
aad
imul
mov
and
test
cs
xor
mov
dec
into
sbb
push
dec
fstl
inc
fs
mov
in
dec
movsl
sahf
cmp
fwait
jns
xchg
leave
mov
jmp
enter
test
test
xchg
push
add
cltd
das
xchg
or
pop
mov
sub
in
ljmp
fwait
mov
fs
test
inc
jmp
shl
add
data16
imul
faddp
sar
int3
xchg
loope
ss
pop
out
jo,pn
lcall
stos
pop
divb
dec
add
cmp
movl
pop
call
std
bound
cltd
sub
loope
add
inc
pop
mov
sbb
data16
jbe
out
loopne
ret
fisttpl
test
cs
push
xchg
or
ja
into
mov
xor
test
mov
push
arpl
aas
insb
dec
ret
dec
inc
sub
out
mov
inc
cmp
sbbb
fstl
mov
push
xchg
xchg
jns
popa
cmp
rolb
enter
aas
lret
add
adc
les
or
das
sbb
adcb
cld
aas
insb
add
push
inc
cmp
movsb
mov
jl
jecxz
shlb
cmc
jmp
movsl
in
mov
cli
popa
js
push
fistps
push
pop
shlb
xor
aam
sbb
xchg
or
inc
cmpsb
mov
es
ljmp
out
adc
cli
mov
mov
cmpsl
stos
inc
and
ljmp
sbb
inc
aaa
mov
aad
xor
shlb
pusha
push
in
test
mov
mov
add
insl
cmp
add
add
jmp
jno
imul
push
pop
andl
nop
mov
adc
flds
or
pop
pusha
inc
lret
pop
outsb
jp
push
xor
mov
lcall
jecxz
cld
cli
cmp
int
lret
psubw
dec
pop
inc
xchg
dec
jl
stc
sbb
cmp
sub
or
jbe
sub
stos
stc
ret
sahf
and
clc
in
decb
mov
mov
mov
les
addb
pusha
inc
test
movsb
add
jle,pt
imul
lret
jg
arpl
aas
movsl
cmp
inc
dec
loop
pop
repnz
cmp
test
into
outsb
loop
rcrl
inc
mov
aam
and
imul
dec
adc
mov
xchg
scas
pop
add
mov
and
sti
jle
jae
into
mov
daa
ds
lock
fiadds
lods
mov
sbb
mov
jmp
lahf
push
into
shrb
cmc
push
push
clc
minps
das
mov
test
leave
lcall
sub
aaa
inc
pop
icebp
xchg
test
sahf
sbb
jbe
mov
mov
push
test
mov
xchg
rcr
xor
pusha
fiadds
or
mov
aad
iret
lret
jg
sub
pop
sarb
xchg
pop
mov
sub
mov
cmpl
dec
in
aam
insl
push
aas
ret
sarl
shlb
dec
ljmp
jno
add
mov
imul
push
ficoms
shll
cmp
mov
inc
or
sahf
inc
cmpsl
lods
xchg
push
mov
es
pop
and
xor
add
call
mov
sub
cmp
loopne
inc
rcrl
fcmovnbe
imull
nop
pop
jg
int3
mov
and
mov
sub
sbb
imull
in
pop
pop
je
jecxz
faddl
gs
push
ret
ss
fnstcw
clc
sub
push
loopne
pop
jg
mov
lcall
dec
lods
fnstsw
adc
xor
nop
gs
xacquire
out
mov
adc
insb
repz
ja
add
insb
mov
outsl
pop
sub
pop
xor
fstl
pop
cmp
out
jbe
and
adc
out
pusha
movsb
add
jne
mov
popf
inc
loope
das
push
fimull
dec
aam
mov
pop
test
popa
add
jb
mov
push
aam
rcr
sub
gs
lcall
jmp
mov
out
push
inc
and
mov
sti
and
jo
mov
sbb
nop
sbb
cld
cld
mov
xchg
jae
mov
imul
push
xchg
mov
xor
add
jmp
cmp
insb
arpl
jecxz
add
bndmov
in
mov
mov
jge
mov
scas
jns
adc
cwtl
stos
leave
dec
lcall
sbb
cs
icebp
adc
mov
pop
into
data16
stc
xlat
lret
add
popf
mov
rcrb
outsb
je
cld
mov
mov
or
xchg
xchg
push
aad
and
or
dec
push
xchg
mov
popa
aas
or
adc
jbe
xor
mov
dec
cli
mov
mov
jno
cmp
and
shll
add
sbb
sbb
adcl
push
mov
mov
jne
pop
xor
add
cmp
jecxz
out
aaa
je
rclb
adc
sub
std
mov
in
into
xchg
cmpsb
mov
push
lods
dec
sarl
mov
pop
mov
or
jo
stos
jo
repz
jg
in
or
sar
das
roll
inc
mov
out
sbb
pop
cmpsl
dec
lods
leave
inc
mov
cltd
imul
mov
adc
enter
and
mov
mov
adc
testl
xor
test
mov
push
and
aaa
pop
jno
push
xchg
xor
fisttpll
out
daa
jp
jo
out
hlt
mov
movsb
cmpsl
mov
mov
cli
das
inc
sbb
aad
mov
push
mov
pushf
cmp
shll
push
push
mov
rep
cmp
leave
cs
out
inc
xchg
ss
and
pop
cwtl
mov
pop
ss
ret
dec
jecxz
inc
cld
mov
pop
insl
das
aaa
mov
xor
or
ret
xchg
lret
popf
loop
xchg
into
xor
xchg
jns
ss
jne
inc
int3
pusha
pop
mov
jge
pop
in
loopne
fisubl
mov
xor
mov
or
add
sub
clc
xchg
xchg
adc
jl
adc
cwtl
cmpsb
leave
xchg
push
jne
mov
jl
daa
cmp
xor
adc
fadds
mov
inc
fisttpll
or
mov
cmpsl
sbb
enter
mov
fst
and
or
jg
ds
ret
sbb
and
pop
push
cld
pop
mov
dec
pop
psrad
sbb
lods
cmpsl
loope
xchg
in
sbb
pushf
mov
fmull
sti
dec
ds
fidivrs
fldt
and
dec
or
ja
imul
loop
pop
ret
pop
add
mov
add
or
fsub
push
jecxz
out
pop
cwtl
fcomi
aaa
out
mov
adc
out
les
stos
jle
sub
sbb
pop
dec
jbe
cs
mov
pop
pop
test
fs
mov
mov
ret
pop
ret
mov
pushl
mov
decl
inc
push
mov
fnstsw
ljmp
lock
in
sbb
and
scas
aad
pop
cmp
push
sbbb
push
jge
repz
adc
scas
add
divb
mov
or
and
jg
mov
popf
std
mov
test
arpl
insl
or
in
repnz
cmpsl
and
cld
daa
jle
jne
mov
pop
push
loop
or
mov
jmp
sbb
int3
jecxz
push
shlb
mov
mov
mov
inc
dec
sbb
cmp
xlat
xor
aaa
inc
add
lret
outsl
jl
pop
xchg
ds
clc
fsubl
jae
addr16
push
adc
lret
adc
xlat
dec
fsubs
adc
rcrl
mov
and
mov
popa
shll
aad
inc
js
xchg
mov
inc
sbbl
inc
idiv
mov
xor
sbb
out
shlb
rolb
pusha
sub
add
mov
adc
jg
jg
stos
data16
pushf
pop
je
jmp
jl
jne
out
sub
mov
add
xor
cmp
aas
push
arpl
pop
mov
sbb
xchg
int
out
push
adc
les
ret
xlat
add
stos
jge
pop
pop
xor
inc
testb
jno
int3
mov
lcall
test
cmp
je
popf
pop
jecxz
outsl
cmc
push
and
sahf
loop
repnz
lea
ja
add
mov
cmpb
inc
in
js
dec
loopne
sbb
jp
jp
test
std
push
lods
dec
aas
sahf
pop
inc
jmp
pushf
inc
cmp
adc
lods
sub
lods
in
stos
dec
je
shlb
out
sub
popa
sahf
scas
inc
jbe
rcll
out
into
cmp
lcall
sbbb
cmp
pushf
pop
push
daa
pop
stc
dec
fnstcw
inc
fldt
mov
pop
outsl
xchg
testb
pop
mov
fdivl
add
inc
mov
testb
jb
test
cli
or
adc
push
ret
loop
sbb
and
icebp
add
data16
sbb
xchg
pop
test
add
mov
mov
mov
jns
es
out
push
pop
pop
mov
pop
sub
in
aam
mov
aam
and
ficomps
adc
cmp
jl
cmpsb
cmp
pushf
xor
inc
lods
mov
mov
mov
push
fidivs
imul
stos
push
loopne
call
negb
sub
loop
jnp
in
les
sarl
xchg
sbb
dec
cmpsl
ret
xor
pop
mov
sub
inc
out
pushf
cltd
stos
ret
aas
ret
lods
lahf
arpl
mov
xchg
dec
int3
jge
imul
movsl
xor
jle
pop
cmp
dec
inc
adc
jmp
leave
xchg
iret
jb
or
sub
mov
es
iret
push
test
pop
cmpl
inc
adc
out
cmpsl
sbbl
pop
hlt
jecxz
js
cmp
fldcw
jne
test
popw
cmp
fwait
add
out
loop
mov
sbb
mov
push
inc
cld
push
pop
adc
cmpsl
leave
adcl
pusha
hlt
ss
add
sub
fwait
inc
repnz
xor
gs
pop
add
xor
xchg
push
idivl
mov
ret
xor
xor
dec
aad
and
testl
rorl
mov
loop
call
mov
cli
sub
cltd
outsb
jo
cld
dec
dec
ss
mov
push
insl
int3
fdiv
enter
pop
mov
mov
xorl
xchg
aad
shll
popa
out
adc
sub
push
jge
mov
dec
fmuls
jle
jp
loopne
cld
cwtl
inc
int
fisubs
fisttpl
enter
pop
jb
jne
add
hlt
test
aaa
shlb
xor
xor
icebp
vpshab
gs
enter
hlt
pop
push
test
push
push
lea
ret
inc
fs
dec
mov
lcall
shrb
iret
inc
inc
bound
dec
sub
pop
popa
xchg
stc
negb
popa
adc
dec
sub
pop
test
shl
popf
out
xchg
pop
or
into
pop
test
push
insl
je
outsb
inc
call
loope
mov
push
pop
subb
xor
lods
fnstenv
sti
jno
xor
xchg
or
stc
push
je
add
daa
mov
jbe
fsubl
cmpsb
aad
test
mov
rorb
ljmp
jo
mov
pop
fwait
push
cmp
cmpsb
sbb
cld
push
jge
and
push
add
push
int
out
pop
lret
scas
cmpsb
aas
mov
jg
inc
iret
jge
jae
mov
pop
enter
idiv
int3
jae
stc
pushf
jp
lea
sarl
xor
jg
mov
jge
push
inc
jb
pop
int3
loopne
in
js
mov
cmp
dec
pop
sub
int
pop
mov
inc
xchg
rorl
rorb
cmc
cmc
test
push
and
into
scas
adc
pop
adc
insl
aas
fs
cmp
pop
lds
es
lcall
push
push
jbe
mov
scas
add
and
lods
outsl
dec
inc
jb
xchg
pushl
xlat
ja
stos
aaa
xchg
les
adc
xlat
stc
cmp
sbb
fistpll
push
cltd
into
jge
int3
dec
insl
test
add
mov
out
mov
loopne
mov
out
cld
and
cmp
pop
outsl
fidivs
cwtl
cmc
xor
sub
imull
popa
dec
mov
fwait
push
pop
insb
mov
inc
in
mov
maxps
pop
scas
dec
sub
es
jmp
mov
or
inc
sbb
add
leave
ror
loopne
clc
mov
mov
push
sbb
or
aas
outsb
xor
xchg
out
xchg
mov
mov
mov
ret
inc
add
shlb
mov
mov
cltd
jb
inc
repz
aaa
mov
fisubl
icebp
repz
fnstenv
lock
cmpsb
or
or
jno
adcb
inc
sbb
or
je
and
imull
dec
es
imul
inc
inc
push
mov
cltd
in
cmc
aaa
adc
push
add
mov
xorb
loope
mov
mov
add
ret
lods
mov
cwtl
pop
ret
inc
in
push
and
add
nop
dec
ret
cwtl
mov
jb
cmp
cmpsb
dec
mov
adcl
push
and
movsb
and
int
xlat
xor
mov
lods
ss
xor
stos
pop
push
and
xorb
jae
rcrl
xchg
dec
rcrl
cmpsb
dec
jle
rol
add
jmp
mov
xchg
jle
sbb
and
adc
ljmp
mov
insl
int3
mov
add
lcall
data16
cmpsb
jg
sbbl
mov
stos
sahf
mov
cld
dec
repz
in
lahf
insb
cltd
pusha
or
ljmp
addr16
imul
xor
xchg
cmp
mov
faddl
pop
loopne
push
ficoms
push
inc
jg
test
dec
imul
dec
jbe
insb
out
sub
mov
je
pushf
jmp
lret
pushf
xor
into
xchg
xor
lods
push
cli
jl
jle
loopne
mov
pop
mov
push
ss
xchg
mov
mov
loop
mov
pop
scas
imul
jbe
int3
je
cmp
mov
test
xor
xchg
xor
add
pop
imul
lret
test
addr16
imul
rcrl
in
adc
arpl
test
mov
cmp
nop
movsb
std
cltd
div
jne
rcrb
cmpsb
cmp
cmp
dec
fdivr
mov
mov
push
xor
cmp
out
scas
lods
mov
lret
mov
lahf
sbb
pop
dec
and
inc
cmc
add
out
fsubrp
jge
push
in
addr16
sarb
lahf
xor
add
dec
xor
loopne
mov
fdivl
push
xor
add
jbe
ss
cmp
push
test
rcrl
insb
mov
inc
into
sub
insb
mov
jae
inc
mov
jno
cmp
das
rcr
das
sub
movsl
arpl
dec
add
cmc
cmp
lahf
stos
adc
adc
insb
mov
cmp
pop
jno
inc
movsb
lds
in
or
pushf
insl
and
xor
in
iret
xstore-rng
cmpsl
inc
fsubl
mov
add
dec
popa
inc
xchg
lcall
test
cmp
mov
jnp
cmp
ret
inc
outsl
lret
xor
and
insb
jno
daa
mov
call
xor
sbb
dec
loopne
mov
jae
add
lea
cmpsl
mov
imul
dec
inc
sub
call
dec
mov
ret
subb
sub
test
xor
sub
and
mov
sti
sub
inc
lahf
test
xchg
xchg
xorb
out
mov
int3
fisubl
cmpsl
jbe
out
push
xchg
jp
repz
cld
add
mov
mov
insb
mov
call
inc
sub
mov
cmp
movsl
stos
lods
xchg
add
push
lods
lret
push
lock
jg
adc
dec
jo
mov
mov
scas
adc
lds
es
mov
pop
or
lcall
mov
cmp
or
add
sub
insl
xchg
xor
xor
hlt
outsb
push
xor
inc
imul
sub
pop
push
and
cmp
add
sub
pop
dec
rcr
xor
mov
aam
sub
inc
stc
cmpsb
ja
mov
push
jl
out
imul
cld
add
or
add
aaa
cmp
xor
dec
or
or
sub
push
gs
loopne
insl
mov
xchg
mov
xchg
in
jbe
mov
call
test
jmp
ret
jbe
call
mov
jge
std
sti
lods
shr
loope
jmp
mov
imul
fisubrl
xchg
adc
stos
cmc
inc
dec
jle
add
or
les
pop
push
paddusw
cmp
imulb
rol
jbe
lret
lahf
push
cli
nop
repnz
xchg
xor
xor
nop
xor
inc
int3
bound
xchg
sub
ljmp
or
cmp
push
gs
fistl
push
rdtsc
mov
mov
mov
test
mov
scas
push
jl
rolb
add
fsin
sub
js
adcl
or
out
loopne
iret
jle
out
outsl
sub
faddl
lcall
lahf
and
xchg
insl
imul
xchg
cld
sahf
inc
sbb
out
xchg
mov
imul
cs
insl
push
pop
pop
and
jb
stos
in
jb
cmc
cs
into
or
lock
dec
fidivrl
mov
pop
in
scas
mov
mov
jb,pt
roll
mov
icebp
jl
lea
mov
and
mov
mov
or
orb
push
adc
mov
fsts
xor
jbe
mov
test
sub
stc
scas
xlat
fiadds
loop
mov
pop
movl
cmp
rcrl
daa
push
jo
int3
xorl
jo
fwait
mov
jp
sbbl
ret
pop
mov
mov
out
jmp
cmp
in
sbb
dec
scas
add
movb
pop
jns
cld
and
and
outsl
push
or
mov
xlat
add
ficompl
mov
imul
dec
lea
hlt
push
push
cld
jnp
scas
repz
test
icebp
and
mov
nop
xlat
jge
and
inc
iret
rorl
lds
add
jp
mov
cs
scas
dec
xchg
test
inc
push
xor
mov
je
aam
icebp
ficoms
pop
or
orb
cmp
sbb
push
xchg
adc
out
mov
pushf
push
push
out
jge
push
mov
mov
mov
fidivs
lea
loope
jo
jecxz
push
je
push
leave
stos
fs
adcl
sub
imul
sub
shl
mov
add
adc
imul
out
in
push
mov
out
shll
mov
cmp
jne
into
mov
inc
inc
push
cmp
mov
scas
push
adc
push
and
push
pop
ljmp
subl
stc
mov
ret
into
xchg
push
mov
mov
scas
sub
mov
cli
mov
xchg
cmp
mov
insb
mov
gs
xchg
lahf
in
bt
or
pop
or
cld
gs
mov
mov
xorb
outsl
lret
inc
gs
test
jp
cmpsl
lret
out
and
lock
push
or
push
insl
mov
jo
pop
addr16
arpl
sbb
sub
and
je
pushf
mov
sub
sub
clc
xchg
xor
mov
in
rcrb
popa
jae
test
pushf
rolb
or
aam
mov
jb
movsb
push
inc
fildll
test
lods
or
xchg
push
jl
push
cld
pop
cld
lods
stos
cli
inc
ficoms
pusha
xor
xchg
ret
int
jmp
imul
sub
mov
cwtl
int
inc
outsb
xor
mov
fstpt
inc
jb
mov
daa
sub
sbb
out
daa
jns
xor
faddl
or
lods
rol
adc
es
xor
mov
sahf
into
cmp
imul
mov
ret
icebp
push
mov
xchg
test
enter
inc
add
mov
xor
sbb
fldl
push
xor
pop
mov
cmp
mov
or
inc
cltd
lds
pop
add
iret
xchg
xor
rolb
inc
outsl
fildl
insb
mov
sarl
mov
mov
mov
and
mov
mov
repz
rorb
xor
idivl
jmp
mov
sub
hlt
lret
ror
lahf
fwait
out
xor
xchg
pop
arpl
and
ljmp
or
sbb
dec
mov
xchg
dec
xchg
test
sbb
mov
shlb
in
pop
loop
sbb
inc
cmp
adc
lcall
out
lret
xchg
jl
scas
movl
mov
adc
mov
adc
push
mov
sbb
pop
sub
pop
adc
or
xor
les
scas
sti
or
ret
arpl
xor
iret
jne
aam
cmp
add
mov
pop
das
add
and
or
sahf
sbb
jns
pop
insb
cmp
dec
sub
hlt
sbb
cwtl
and
xor
decl
cmp
pop
mov
xor
dec
fxch
sbbb
xor
push
inc
out
enter
jmp
inc
test
out
lock
push
push
inc
cmp
add
dec
jp
and
sbbb
mov
jmp
mov
dec
cld
xor
std
shl
and
xor
ret
mov
cmp
pop
popa
xlat
mov
int
and
or
scas
xlat
add
pop
mov
add
cmp
push
movsl
js
dec
pop
pop
mov
cld
add
in
lahf
lock
lods
add
jo
scas
dec
and
pop
xor
aas
test
stos
jge
adc
notl
push
out
inc
jge
pusha
xchg
push
jl
dec
cwtl
imul
mov
cmpsb
adc
ret
mov
dec
mov
cmp
add
push
in
mov
out
mov
mul
leave
decb
sub
std
pop
int
insb
sbb
push
dec
mov
cwtl
and
mov
lret
xchg
pop
std
orb
or
xor
jecxz
lret
xchg
and
xor
outsl
ljmp
sahf
xor
pop
lods
in
outsb
jge
jbe
jl
shr
lods
fwait
lods
pusha
data16
jae
test
cmp
out
dec
jno
ljmp
mov
dec
enter
xchg
add
xor
lahf
sub
das
or
dec
push
testb
adc
dec
in
clc
clc
nop
inc
je
clc
and
into
adc
and
fcompl
outsb
inc
mov
nop
jecxz
fldl
inc
js
pop
xchg
pop
jne
js
dec
cs
sti
inc
into
sub
cli
ds
pop
in
mov
sbb
dec
pop
shll
idivb
pop
out
into
add
sbb
inc
mov
push
mov
bswap
dec
icebp
xlat
mov
cmp
mov
xor
sbb
dec
dec
cmp
add
xchg
cmp
dec
aaa
jge
inc
and
push
sub
jo
cmpsl
addr16
test
xchg
mov
repz
les
push
lods
add
lods
iret
pop
test
pop
push
rclb
shlb
inc
sbbb
jl
jle
pop
rcrl
cwtl
imul
lcall
fcmovnb
and
mov
cmp
fldl2e
cmp
leave
pop
push
xchg
and
inc
pop
shlb
mov
cmp
mulb
movsl
jne
push
mov
push
and
jecxz
jle
xchg
xchg
jmp
mov
dec
pop
fwait
sbbb
in
xlat
add
cmpsb
ret
sti
pop
pop
out
xchg
test
dec
mov
push
push
dec
push
fidivrs
sti
adc
shll
mov
jmp
jge
fs
mov
call
xor
repnz
mov
bound
jmp
adc
cwtl
cs
sahf
cmp
inc
enter
lea
stos
inc
dec
jnp
je
es
es
fistpll
xchg
and
push
popf
jbe
jno
or
xor
ljmp
dec
xchg
mov
sub
xchg
sub
mov
and
addr16
scas
pop
xor
int3
cs
dec
jne
add
push
lods
add
push
cld
inc
adc
and
cld
cmp
scas
stos
inc
cli
cmpsb
ret
dec
sahf
inc
scas
push
push
mov
mov
iret
dec
push
push
push
or
inc
dec
inc
stos
xchg
inc
mov
xor
scas
pop
mov
imulb
daa
and
jb
lods
pop
mov
mov
push
imul
push
jecxz
pop
notb
inc
pop
cmpsl
push
cmpsb
stos
mov
cmp
das
hlt
sti
movsl
jo
or
movb
push
push
icebp
xchg
xor
shlb
jae
pop
xorl
xor
sub
rcrb
jne
mov
inc
sub
fiaddl
mov
mov
or
inc
scas
test
arpl
dec
js
mov
pushf
hlt
xchg
pop
fimull
sub
stc
fstpl
js
jl
mov
push
xor
stc
dec
sbb
ljmp
cmc
test
out
fcomip
test
inc
pop
dec
mov
insb
hlt
inc
mov
cmp
bound
mov
xlat
mov
xchg
lcall
lods
jg
js
add
sbb
dec
dec
jg
mov
sbb
ljmp
add
sub
xchg
or
mov
push
push
pop
rcr
shrb
lods
mov
test
jae
jns
ja
adc
inc
push
pop
test
imul
sbb
pop
jb
fsubrs
bnd
lahf
das
hlt
loopne
or
push
fdivl
mov
sbb
rclb
mov
xchg
adc
orl
inc
mov
fwait
aas
in
pop
in
sbb
lods
int
mov
fdivs
jg
sub
insl
je
int
shrb
lcall
inc
adc
cwtl
pop
lods
mov
jge
ss
or
es
lret
xchg
sub
or
pop
or
sub
add
outsb
ret
sub
inc
hlt
lock
dec
lods
or
repnz
outsb
add
aaa
pop
add
lods
iret
out
lret
gs
mov
inc
sahf
mov
mov
arpl
xchg
into
xor
stc
xlat
jne
gs
mov
mov
pop
add
pop
bound
in
cmc
arpl
addr16
push
xchg
test
pop
decb
dec
cld
pop
push
mov
cmp
stos
aam
gs
loopne
or
pop
js
dec
mov
loopne
mull
lods
adc
cmp
add
lcall
mov
faddp
fwait
popf
mov
daa
jle
dec
pop
pop
addl
jns
stos
or
sub
dec
or
std
adc
push
mov
inc
lock
jb
mov
out
arpl
or
fidivrl
dec
addr16
pop
xchg
push
ds
jecxz
in
cmp
imul
push
repz
es
mov
mov
mov
xor
mov
jno
sbb
pop
mov
adc
and
pop
gs
push
lret
out
lahf
sbb
iret
orl
pop
dec
test
lods
dec
fildl
and
dec
sbb
add
and
pop
and
dec
jl
or
outsl
js
sbb
push
mov
pop
enter
cmp
push
dec
add
pop
pushf
inc
stos
loope
sahf
sub
xchg
test
movsb
fstps
mov
fwait
push
ret
ret
inc
or
int3
fs
out
movsb
adc
pop
push
aad
mov
adc
cmp
pop
sub
mov
clc
pusha
inc
out
addb
xchg
sbb
add
add
enter
adc
cwtl
mov
andps
mov
clc
pop
mov
daa
mov
and
mov
aaa
das
mov
push
rolb
add
push
fcomps
xchg
das
lock
scas
xor
cli
repnz
dec
push
mov
and
push
ja
ja
lret
repnz
test
xchg
or
cli
es
push
push
repnz
ljmp
push
xor
push
ret
clc
mov
sub
in
aad
sar
pop
cmp
xor
pop
pop
mov
js
mov
xchg
mov
mov
scas
jge
hlt
das
aaa
sbb
xchg
js
mov
push
cmp
mov
or
shl
add
movsl
ds
pop
idivl
mov
adc
movsb
add
sahf
inc
ficoml
jecxz
inc
bnd
test
and
xchg
clc
adc
push
ret
pop
fldt
ljmp
pop
ja,pt
sub
jno
mov
loopne
mul
sub
je
addr16
insb
dec
stos
ficompl
ds
aaa
add
jg
aad
add
leave
sbb
popf
scas
repnz
mov
sahf
mov
hlt
mov
xchg
popa
sbb
stos
inc
test
shrb
mov
in
imul
ljmp
xchg
cltd
leave
mov
and
inc
pop
fmulp
mov
imul
mov
mov
bnd
movsl
bound
dec
inc
roll
inc
popa
adc
or
add
push
cli
lods
add
inc
mov
pop
les
cmpb
dec
dec
push
mov
in
cmp
mov
aam
mov
cmpsb
sub
pop
lahf
inc
imul
roll
in
insl
leave
ds
out
jno
jge
xchg
movsb
sub
fisttpl
push
out
sub
push
dec
sbb
fwait
lds
mov
sbb
mov
fisttps
sti
push
out
jmp
arpl
arpl
sub
jbe
sbb
repnz
jae
stc
subl
scas
inc
stos
inc
jb
mov
int3
roll
inc
push
jbe
stos
mov
popf
dec
movsl
arpl
je
mov
and
adc
lahf
push
jecxz
xchg
dec
je
jecxz
cmc
dec
xchg
inc
cmp
pop
xor
andl
dec
push
in
loope
pop
jge
filds
fnsave
arpl
sbb
dec
lods
adc
cmp
inc
popa
adc
inc
out
dec
shrb
mov
mov
xchg
lcall
xor
mov
test
mov
pop
jnp
xchg
out
mov
test
xlat
or
arpl
or
xchg
notl
in
pop
push
xchg
cmp
ljmp
cmpsb
scas
mov
mov
or
clc
stos
decl
xchg
pusha
jb
xchg
jp
ss
clc
sbb
mov
xchg
jns
das
jbe
add
stos
std
jb
lret
xor
mov
fdivrs
add
cmp
sbb
jp
jg
mov
dec
repnz
imull
loop
mov
inc
std
cmp
outsb
test
in
inc
addr16
fmul
jl
loopne
sbb
push
hlt
mov
add
jmp
jae
add
data16
xor
sbb
cmp
test
not
xor
repz
popf
int
mov
leave
sbb
stc
dec
sub
cmp
lret
aad
sub
testl
add
outsl
iret
imul
xchg
fcmovne
bound
lret
ficoms
adc
mov
push
push
out
mov
fistpll
adc
fcmovnu
loop
push
mov
cwtl
mov
mov
adc
pop
adc
inc
or
fimuls
movl
fldt
sbb
push
in
inc
movsl
or
xor
mov
addr16
xor
adc
sbb
add
nop
mov
push
mov
mov
into
mov
sbb
negb
ret
cmpsl
push
xor
adc
sti
int3
sub
xchg
inc
lock
push
push
push
scas
push
dec
ljmp
jecxz
imulb
int
lds
or
lock
fimull
cwtl
mov
sub
outsb
movsl
aam
movsb
fmuls
xchg
mov
test
aas
pop
mov
xchg
int
sbb
mov
pop
cld
js
pop
fwait
int3
decb
das
fcmove
je
lods
cmp
neg
or
sbb
xchg
sub
insl
push
lcall
lret
bound
gs
popl
sub
out
mov
lock
xor
mov
pop
pop
fsubl
mov
jbe
sub
mov
inc
sarl
inc
stos
sbb
and
cltd
mov
jmp
mov
shrl
mov
lods
sub
xchg
sbb
lods
insl
push
in
sbb
cmp
out
dec
jns
lock
test
mov
es
cmp
cmp
sub
jl
in
cmc
pop
and
out
inc
cmpsl
aaa
js
or
mov
das
sbbl
rorb
adc
outsb
inc
int
repnz
adc
inc
sbb
imul
out
fbld
and
adc
hlt
jle
cltd
fistl
jmp
mov
mov
in
mov
es
aad
push
jns
mov
cld
sub
dec
adcl
nop
jl
lahf
in
sbb
loop
inc
imul
add
test
jo
lret
sahf
jae
in
xchg
push
ljmp
cltd
cmc
sub
jle
out
test
sub
and
xor
in
jle
rcl
jg
rolb
loop
pop
call
dec
jo
addr16
inc
lret
fs
cs
jge
sub
mov
mov
jp
loopne
mov
iret
cmp
sub
jle
std
jo
fwait
cmp
pusha
shlb
mov
sar
mov
inc
dec
sbb
or
dec
inc
movsb
mov
push
les
je
xlat
add
fwait
ja
xor
lea
or
fs
mov
jge
push
iret
lcall
lcall
leave
and
cmp
jns
lds
push
cmp
decb
mov
std
xchg
in
adc
sbb
sti
scas
jnp
jae
xchg
inc
outsb
orb
ljmp
push
mov
sbb
pop
xchg
inc
inc
xchg
and
daa
fidivrs
sub
push
jmp
cmc
push
pop
sub
scas
xchg
mov
div
pop
test
jl
enter
call
popa
int
popa
insl
jl
and
popf
jp
cmp
mov
stos
fimull
cmpl
mov
cs
rorl
stc
dec
or
fldcw
push
fdivrs
mov
mov
xchg
shll
test
push
mov
push
xchg
movsb
mov
pop
addr16
adc
add
jecxz
jl
fcmovu
stc
mul
inc
cmpsl
lret
mov
subb
mov
cmc
fiaddl
xor
jbe
jg
mov
sub
pop
aad
loop
dec
inc
pop
xchg
xlat
sbb
out
ljmp
call
mov
out
jnp
mov
or
stos
sbb
xchg
jns
xor
imul
mov
jecxz
enter
inc
adc
fiadds
test
dec
sbb
jmp
mov
sub
in
insb
xchg
pop
inc
xchg
fsubs
test
or
cmp
cmp
or
lea
xor
xchg
mov
and
scas
pop
and
pop
adc
mov
jnp
test
cmp
dec
jl
jp
jge
in
push
ss
mov
push
xor
sbb
pop
sub
andb
or
imul
ret
sti
pusha
dec
in
sbb
pop
or
fidivrl
gs
push
mov
push
mov
and
or
or
ret
jb
addl
mov
sub
outsl
jbe
test
jns
in
cli
sbb
add
addr16
mov
sub
dec
xor
repnz
in
push
inc
and
inc
dec
lahf
sbb
es
sbb
sub
mov
icebp
inc
das
dec
out
enter
cmp
cmp
jmp
paddd
adc
xchg
ss
pop
cwtl
fdivrs
xchg
ret
cwtl
push
or
iret
add
jg
jns
adc
movsl
sbb
inc
in
mov
push
imul
gs
dec
nop
push
test
or
int
inc
xchg
jo
popa
scas
gs
stos
aam
shrl
cmpsb
pop
pushf
mov
dec
sahf
fimull
loopne
loope
stos
mov
jno
cmp
stos
xchg
je
hlt
arpl
fdivrl
push
mov
mov
dec
out
movsb
test
outsb
addr16
cmp
adc
inc
xchg
sbb
adcl
pop
cmpsb
sbb
dec
insl
mov
adc
aaa
fwait
adc
int
stos
cld
in
popa
push
scas
iret
sub
bound
push
and
push
hlt
xor
cmc
jecxz
ja
daa
mov
jge
adc
push
repz
pop
xor
mov
adc
jae
adc
scas
jmp
ss
xlat
cmp
cmpsb
enter
ljmp
imul
cwtl
cs
and
adc
ficoms
adc
in
dec
xlat
add
cmp
cmc
and
push
popa
pop
mov
mov
cmc
std
lods
mov
dec
out
sbb
push
mov
pop
jp
fs
insl
daa
ror
push
int
mulb
ds
fnstsw
mov
pop
lcall
out
shll
divb
cli
mov
sub
jno
inc
out
xchg
gs
dec
inc
adc
mov
push
cmp
enter
call
bound
fwait
fwait
mov
push
pop
jecxz
jmp
xchg
mov
xor
push
inc
roll
mov
dec
das
inc
cmpsb
sahf
aam
aaa
pop
mov
pusha
cmpsb
bound
aad
or
fistps
popl
call
jge
cmp
push
inc
arpl
into
in
dec
aad
add
cmpsb
mov
popa
fmul
in
shlb
and
arpl
cmp
mov
vpcomud
push
enter
dec
and
lret
ss
lods
pop
pusha
cmpb
push
in
pop
sahf
mov
adc
pop
out
pop
iret
mov
daa
rcr
aam
xor
and
mov
jae
xchg
addl
add
sbb
dec
scas
push
call
sbb
or
mov
jmp
sahf
dec
push
inc
sbb
mov
sub
mov
sti
rol
mov
popf
pop
lock
movsl
xor
and
shrl
push
gs
xchg
push
or
inc
sub
jge
or
jae
and
mov
push
lea
and
jno
push
jmp
cmpsl
scas
sbb
mov
loopne
mov
inc
fstpt
test
mov
push
adc
mov
dec
mov
jbe
jle
jns
stos
pop
clc
xor
movsb
fcompl
mov
sti
xlat
imul
mov
mov
fs
mov
or
mov
jnp
cltd
fs
mov
mov
rorl
cmp
mov
dec
lods
jns
xchg
jmp
sti
jl
stos
arpl
ds
or
and
fsubrs
add
jle
mov
leave
cmp
mov
xchg
cmp
pop
sbb
fmul
imull
in
fisubrs
fcomps
dec
mov
push
nop
inc
imul
cmp
stc
and
mov
dec
out
cmp
dec
mov
sub
andl
fisttps
cmpsb
icebp
adc
dec
xor
loope
lcall
jl
or
dec
adc
inc
outsb
mov
sub
sti
or
inc
and
mov
mov
loope
in
fucomp
insb
loop
ret
in
adc
pop
int3
clc
sti
push
jo
sbb
shll
jg
hlt
push
test
call
lret
out
mov
inc
sub
lahf
lcall
xchg
jl
in
dec
lahf
idivb
push
push
and
in
adc
test
mov
cmp
jl
dec
test
pop
or
push
mov
movl
lds
sbb
xor
adc
pop
mov
cmp
push
rcll
sbb
ss
addr16
in
into
xor
in
lods
mov
movl
icebp
mov
add
cmp
sahf
lret
sub
ss
repz
shl
ljmp
pop
or
cwtl
aam
xchg
push
test
xchg
ret
divl
ret
xchg
jns
jp
mov
test
loop
and
int
iret
lcall
dec
andl
rcll
sbbl
sbbl
stos
fldl
xchg
int
test
cmpsl
lret
mov
cli
popa
cld
push
movl
xlat
dec
out
mov
je
xchg
scas
ss
xchg
mov
lret
test
iret
jl
cli
and
bound
push
cmp
xor
mov
push
xchg
and
jno
xchg
mov
pop
mov
dec
cmp
cld
add
aaa
pop
mov
inc
dec
mov
ret
pop
push
jnp
pop
jno
mov
sub
lock
ror
dec
pushl
jnp
pop
dec
sti
xor
lods
cwtl
pop
pop
fcmove
aaa
jmp
movsb
movsb
xchg
sbb
or
xor
mov
adc
jnp
push
mov
gs
arpl
mov
jo
and
cwtl
shl
mov
aas
out
das
pop
adc
mov
mov
sub
ret
add
sbb
dec
data16
dec
aas
sub
or
aad
jle
sub
fmull
add
std
sbb
es
test
cld
jp
loop
or
cmp
int3
lock
out
mov
cld
ret
rorl
xor
mov
or
adc
xlat
pop
cld
lea
shll
in
test
mov
dec
cmp
imul
and
aam
loope,pt
cwtl
pop
scas
mov
aas
in
divb
adc
mov
sub
xchg
fnstcw
daa
pop
shl
clc
nop
mov
call
ss
leave
xchg
pop
dec
imul
sbb
sbb
push
dec
xchg
sub
cltd
mov
xorl
adc
push
adc
arpl
popa
jnp
pop
xor
and
inc
mov
call
adc
hlt
mov
les
and
sti
es
pop
test
stos
push
mov
sub
mov
lods
or
test
jge
pop
mov
xlat
ret
add
add
pop
loopne
fildll
aas
and
lds
fdiv
push
scas
mov
insb
sub
outsb
jge
cmp
mov
aam
cs
mov
jb
int3
je
push
enter
daa
test
loopne
push
inc
mov
mov
mov
cmpb
jb
push
adc
pop
mov
mov
pop
mov
nop
ljmp
adc
prefetch
icebp
insl
or
fstps
stos
mov
inc
inc
loopne
jnp
inc
or
or
int
cmp
or
out
lret
fdivl
inc
xor
ret
sbbl
shll
mov
ret
cmpsb
movsb
rcl
mov
pushf
jb
mov
je
pop
pop
aaa
add
mov
fmull
clc
push
in
push
insb
jmp
mov
pusha
icebp
jg
adc
xlat
clc
inc
or
pusha
mov
mov
shr
cli
nop
popf
push
xchg
repnz
adc
outsl
or
sbb
sub
lea
popa
fidivrl
pop
pop
into
in
mull
ss
mov
xor
and
cli
aam
fcmovne
adc
ljmp
xor
jle
dec
jae
or
mov
mov
shrb
add
fnstsw
mov
bound
gs
jo
fwait
and
or
cs
addr16
and
imul
aas
fcmovb
pop
idivl
inc
test
hlt
mov
int
pop
aad
les
fwait
mov
push
push
jno
pop
add
addr16
push
icebp
fmull
shlb
add
xor
cmp
mov
stos
pop
cwtl
cmc
push
repnz
outsl
adc
aaa
dec
ja
mov
cli
or
mov
pop
dec
test
aaa
add
fildl
add
dec
sti
inc
pusha
pop
sbb
push
test
daa
mov
insl
shl
mov
inc
sar
leave
iret
and
pop
ret
pop
fcmovbe
inc
sti
pop
popa
insl
jmp
fisttps
xor
fdivl
lods
rcrb
xchg
dec
or
and
das
hlt
rclb
xchg
push
pop
notl
inc
mov
fnsave
xchg
fildll
fimuls
pop
lock
movzwl
jbe
mov
jae
adc
xchg
sub
sbb
testb
sbb
popa
sbb
pop
in
clc
lods
push
xchg
pop
cmp
je
lcall
sbb
mov
dec
push
jge
dec
push
and
lds
stc
test
xlat
aad
jecxz
cmp
xor
repnz
mov
push
dec
and
mov
cltd
jle
arpl
dec
dec
pop
lcall
adc
xorl
lock
xor
xchg
popf
xchg
andps
push
jo
pop
aam
mov
hlt
sub
jmp
cmp
push
cmp
insl
int
ljmp
out
sub
cmp
out
loop
xchg
outsl
dec
jg
int
mov
stc
xchg
mov
fstpl
test
jle
mov
fisubrl
mov
push
fisttpll
sub
arpl
rolb
jecxz
lock
sub
icebp
xor
lock
jg
ds
out
mov
dec
xor
or
push
push
sahf
clc
xor
div
xchg
clc
imul
mov
js
pusha
push
pop
jg
inc
push
xor
adc
addl
jo
mov
rclb
cltd
sub
mov
imul
in
les
in
fmull
testl
and
jle
fdivrl
iret
pop
and
incl
or
inc
push
shlb
lods
xchg
fiadds
js
stos
loopne
pop
and
test
rcrl
mov
iret
test
test
jge
shl
inc
lahf
or
dec
xor
ret
ret
cmp
arpl
push
mov
cmpsl
sbb
mov
icebp
pop
stos
mov
in
sbb
mov
sbb
pop
xor
pop
pop
movsl
pop
sbb
cltd
dec
call
and
in
outsb
call
movsb
add
sahf
adc
sbb
cwtl
inc
xor
std
sub
push
scas
or
sarl
and
repz
mov
pop
adc
lcall
repz
mov
add
hlt
and
push
pop
push
sub
arpl
xorl
dec
sub
popl
setge
jle
and
cmp
mov
pop
mov
and
out
unpcklps
fsubl
ljmp
push
mov
gs
mov
lret
stos
jmp
mov
jg
lock
mov
adc
and
add
vcomisd
mov
dec
loop
jns
outsb
xchg
jge
xor
inc
cwtl
sub
adc
jno
xor
js
or
outsb
pop
jg
test
push
jae
mov
fisttps
pop
ljmp
scas
jge
add
sbb
sbb
fidivs
ja
dec
and
rorb
scas
mov
mov
jp
cltd
filds
outsb
imul
imul
and
stos
adc
lea
and
ret
inc
adc
xor
pop
push
hlt
adc
inc
pop
out
cltd
cmp
xor
xorl
mov
outsl
push
cs
incb
xchg
and
cmpsl
adc
jge
das
inc
push
fldl
or
popf
sbbl
inc
scas
sbb
xchg
fsubr
outsl
call
or
repz
out
cmc
cli
jb
aad
sbb
cld
add
mov
jl
imul
test
fldl
ss
ja
add
es
icebp
mov
pop
cmc
ljmp
stc
push
jne
lods
aas
or
into
call
sub
pop
adc
mov
cmp
shrb
out
cld
sbb
cltd
xchg
lahf
xor
les
clc
int3
movsb
rorb
cmp
in
lret
test
jl
inc
push
sub
movsl
push
push
je
lcall
push
xchg
pop
dec
ret
mov
rolb
ret
clc
mov
mov
mov
cmpsl
inc
mov
mov
cmpsb
pop
xchg
incb
jge
iret
sub
imul
pop
jp
push
add
sub
inc
jne
pushf
xor
inc
dec
mov
lcall
fisubl
mov
inc
mov
divl
nop
idivb
push
add
add
dec
fcmovnbe
pushf
push
arpl
and
hlt
sub
push
mov
jbe
and
push
add
push
out
add
jae
jmp
scas
jge
lret
idivl
or
sub
imul
push
push
xchg
into
test
jmp
cmpsb
popl
mov
ss
mov
hlt
push
inc
xchg
cmp
cmp
pop
add
push
push
stos
push
and
not
dec
cmp
pop
add
sbb
dec
and
lds
mov
out
leave
out
jo
mov
add
push
or
jl
push
sti
pusha
mov
xchg
sbb
dec
inc
rolb
cmp
dec
inc
lds
cwtl
adc
inc
mov
andl
dec
nop
popa
ret
test
jg
and
arpl
or
dec
fwait
xor
es
adc
int
out
xchg
push
add
push
cmp
je
scas
stc
inc
and
jb
cmp
addr16
lock
mov
pop
mov
xor
adcb
bound
insb
pop
cmp
push
movsl
and
enter
sbb
inc
or
cmp
pop
imul
adcb
jne
jp
or
or
sbbb
cmpsw
out
cmc
and
enter
and
mov
adc
lea
into
lahf
cli
out
arpl
insb
dec
out
xchg
jle
push
js
push
sbb
bound
repz
pop
adc
mov
nop
jno
stos
ret
sub
push
mov
mov
xchg
lret
mov
imul
es
mov
shlb
or
in
cmp
out
test
loope
sbb
imulb
mov
mov
dec
pop
inc
xchg
les
xor
fstpt
cmpsl
mov
rcll
mov
das
mov
fsubr
sub
and
mulb
jnp
rol
and
mov
add
test
mov
cli
push
out
lods
dec
mov
sub
fwait
hlt
dec
lahf
fildll
push
mov
movsb
movsl
add
xchg
ljmp
pop
jle
stc
enter
jmp
outsl
in
xlat
test
and
mov
jb
dec
push
add
or
inc
lds
sub
stos
cmpsl
pop
es
negl
rcrl
mov
and
das
fiaddl
sbb
enter
andl
and
mov
push
adc
mov
sti
dec
pop
js
mov
add
call
and
jns
adc
pop
or
mov
pop
test
fisttpl
push
lahf
jmp
mov
and
dec
mulb
inc
jge
sbb
addl
dec
jno
sar
popf
popf
repnz
inc
inc
push
shrb
das
jb
shrl
mov
lret
shll
iret
addr16
sbb
xor
mov
adc
leave
ljmp
mov
movnti
xchg
xchg
test
pusha
add
cmpl
movsl
repnz
jbe
pop
sbb
je
mov
add
sti
pop
mov
push
adc
xorb
rcll
loopne
fbld
in
mov
gs
and
sub
add
mov
push
cmpsl
ret
repz
into
lds
xchg
test
lds
iret
popf
aam
enter
cld
lcall
dec
add
inc
push
sub
mov
adc
out
sub
nop
cmp
add
fidivl
icebp
cmc
mov
push
inc
daa
in
pop
fwait
adc
mov
in
ja
leave
mov
rorb
test
sahf
arpl
jbe
clc
arpl
jge
scas
outsb
cltd
mov
push
lds
xorb
cmp
fidivrl
and
push
dec
call
dec
stc
sbb
aad
out
jo
stos
outsb
jg
sbb
mov
ret
in
popf
add
push
ds
xor
push
int3
push
outsl
xchg
add
fwait
jecxz
outsl
xor
idivl
je
fsubs
and
out
mov
inc
rclb
fscale
jne
mov
jle
addr16
leave
or
add
pop
mul
dec
out
lock
movsb
movsb
sti
jge
jmp
clc
enter
mov
mov
lea
push
sub
add
inc
dec
idiv
dec
xchg
aam
aam
add
cmp
call
mov
push
lds
and
in
fnstsw
or
cmpsb
push
dec
aad
sub
cmc
leave
jb
les
xor
cmpsl
lock
repnz
imul
out
cli
pop
roll
jp
outsb
shrl
dec
loope
roll
mov
notl
push
sub
push
xor
mov
clc
into
sub
mov
aaa
movsb
inc
sub
dec
or
jmp
ss
in
inc
sbb
loopne
shll
adc
xchg
jecxz
dec
mov
ret
or
inc
cmc
cmp
out
xchg
ss
call
add
lahf
dec
dec
xlat
fcmovnu
icebp
push
dec
xor
xchg
clc
pop
insb
es
xor
cwtl
fmuls
js
fcomps
mov
out
mov
mov
out
pop
mov
leave
out
jae
mov
mov
sub
pop
fnstcw
push
outsb
cmp
ret
fs
std
outsl
xchg
in
enter
test
dec
mov
add
stos
and
push
out
push
add
add
rcrl
sub
scas
cs
test
rorb
clc
loopne
iret
mov
imul
pop
adc
pop
cltd
sbbl
add
sbb
fwait
xchg
jbe
mov
ja
cmpsb
icebp
les
std
lock
add
sbb
mov
fisubrl
outsb
imull
popf
mov
xor
lahf
nop
ljmp
pop
add
pop
fnsave
xchg
pop
adc
in
arpl
and
xchg
pop
xor
insb
dec
cmp
enter
adc
mov
bound
sub
dec
mov
insb
rcll
bound
xchg
xchg
mov
jns
mov
arpl
sbb
xchg
lea
xchg
lods
push
das
loopne
adc
inc
addr16
outsl
dec
andl
out
add
mov
fisubrs
in
xchg
pop
lock
push
mov
inc
jecxz
adc
pushf
in
push
sub
cmpsb
dec
jp
loop
push
test
adc
addr16
fcmovb
mov
ja
inc
mov
mov
ljmp
inc
mov
and
pop
sub
ljmp
stos
cmovp
fnstcw
sub
faddl
mov
testb
or
in
lds
jne
ljmp
je
je
into
cli
mov
mov
in
andb
xchg
push
daa
lea
xor
repnz
and
addr16
and
mov
inc
lcall
and
scas
jecxz
dec
sub
jns
push
lret
dec
fdivl
or
les
mov
xchg
outsl
in
scas
jle
mov
cmp
cmp
out
push
inc
movsb
dec
xchg
jecxz
mov
mov
ret
mov
mov
xchg
data16
cmpsb
mov
loope
mov
cmp
sbbl
add
jnp
mov
mov
rol
jae
pop
int
out
fdivs
hlt
das
pop
push
xor
je
test
popf
dec
out
fisubrs
lods
fwait
call
and
adc
into
test
ret
ret
outsb
push
ficoms
sbb
dec
repnz
dec
cwtl
and
outsl
leave
and
ljmp
jns
pop
hlt
cmp
mov
out
mov
xchg
xchg
outsb
inc
adc
sbb
cmc
sub
dec
in
loop
push
ja
lea
jl
nop
or
out
mov
stos
cli
fists
jge
movsl
and
push
std
xor
call
imul
jp
outsb
or
pxor
adc
roll
pop
add
leave
cwtl
inc
and
inc
pop
push
pop
inc
mov
cli
jp
bts
sbb
xchg
push
push
jle
mov
and
aaa
sbb
adc
and
fstp
decb
xor
and
shll
sub
push
nop
mov
push
mov
dec
ss
in
xchg
adc
gs
sbb
lcall
dec
ja
mov
cmpsl
sbb
mov
aad
aam
shl
cs
test
jl
adc
or
xor
dec
shr
jnp
fisubs
negl
push
cmp
xor
adc
incb
in
push
addr16
lods
cwtl
pop
je
mov
xchg
sbb
clc
and
pusha
or
xchg
popf
popa
clc
xchg
js
inc
push
or
ljmp
push
xchg
jp
pop
and
out
out
movsb
rol
int3
sbb
inc
dec
stos
xor
aas
stc
stos
sub
nop
and
sub
popf
test
sbb
lock
dec
aaa
push
inc
cmp
cmc
ret
push
xchg
shlb
scas
bound
fwait
fists
cs
cmpsb
mov
gs
mov
or
lahf
push
and
dec
jbe
mov
imul
cmp
jae
jbe
cmpsb
sub
pop
in
push
popf
gs
and
rcrl
in
mov
mov
flds
jmp
cltd
mov
cwtl
push
out
or
mov
mov
mov
sub
dec
mov
push
in
je
test
pop
std
test
pushf
sub
rolb
cwtl
mov
popf
jge
lcall
pop
xor
je
lahf
cmpl
out
call
xor
test
fcomps
adc
or
loope
popa
xchg
push
incb
xor
test
aad
adc
adc
mov
cmp
daa
lods
nop
xchg
ret
ja
adc
fsub
or
movsb
int
out
xchg
out
leave
adc
jne
mov
sbb
sarl
testl
dec
mov
mov
adc
mov
stos
ret
in
rcll
leave
jp
or
mov
pop
sbb
inc
ss
adc
jns
cltd
dec
fwait
std
clc
stos
fstl
adc
xchg
cmp
cltd
fs
fisubrs
scas
and
jp
sti
or
inc
mov
adc
repnz
js
clc
dec
int
add
imul
xor
sbb
lock
sbb
cmp
adc
movsl
sub
arpl
xor
leave
imul
mov
mov
fidivrs
xchg
inc
or
dec
mov
sub
jge
lds
pop
or
nop
push
aas
push
dec
sub
jmp
and
or
js
mov
ret
cmp
push
xlat
in
pop
mov
dec
es
gs
dec
sub
mov
mov
adc
pause
loope
stc
sbb
inc
mov
cltd
mov
push
mov
lock
pop
cmp
adc
and
scas
out
mov
push
cmp
jg
cmpsl
xor
mov
lods
fstpl
imul
int
xor
xor
mov
push
into
enter
xor
sub
ficoms
inc
adc
scas
xor
call
adc
mov
inc
call
mov
cltd
xor
rorb
inc
les
push
out
sbb
in
sub
fs
jp
mov
hlt
dec
arpl
das
push
jmp
ljmp
pop
mov
les
pop
sbb
lock
decl
in
test
dec
fidivs
neg
icebp
cmp
inc
jmp
cmp
cwtl
loope
mov
mov
push
push
sub
lea
xchg
pop
dec
sub
jecxz
daa
xchg
popa
jl
and
imul
pusha
xchg
jmp
mov
jecxz
popf
bound
cs
lock
jnp
clc
adc
sub
cld
repnz
or
or
test
add
mov
int3
shll
cli
popa
xor
xchg
scas
dec
push
add
ljmp
std
repz
scas
scas
dec
pop
jnp
cmp
fwait
sub
sbb
sub
outsb
out
or
push
gs
loope
cmpsl
scas
sbbl
or
lret
fsubl
in
ret
sbb
test
popf
fiaddl
mov
lock
mov
je
push
mov
mov
iret
pop
inc
jecxz
shlb
cli
fdivl
icebp
cmp
adc
test
scas
mov
cmc
rcrl
sub
mov
out
jmp
lret
xor
xchg
dec
xor
xor
cli
xchg
dec
data16
mov
mov
and
adc
sub
outsl
test
cmp
sub
cwtl
orb
xchg
pop
inc
push
pop
add
inc
loopne
jbe
cmp
call
lods
ds
sahf
shll
aaa
es
insb
adc
push
jle
push
cmp
and
je
mov
rorb
mov
mov
sbb
popa
pop
js
xchg
mov
xlat
sbb
xchg
pop
cs
pop
shlb
fbstp
inc
mov
aad
movsl
push
ds
xchg
sbb
mov
out
subb
push
stos
fiaddl
fdivrs
nop
int
and
shl
push
test
mov
repnz
mull
xchg
cmp
scas
dec
jae
mov
add
mov
stos
xor
popa
jae
popf
pop
add
rcrb
loope
pop
adc
fdivl
fcompl
push
jmp
clc
lcall
je
mov
cmpsb
call
lahf
jecxz
jge
shll
shll
add
dec
gs
je
mov
sub
ret
cmp
loopne
push
push
sbb
inc
rorl
add
stc
add
cmp
mov
movsb
mov
adc
push
mov
fsubrs
in
into
popa
je
mov
mov
jmp
pop
mov
jno
lds
xchg
fsub
addr16
push
jbe
inc
fs
and
hlt
push
sbb
int3
popf
mov
mov
fldcw
or
insb
add
xorb
sub
sub
mov
pop
pop
mov
cld
add
xchg
mov
jne
clc
daa
clc
adc
cli
sbb
cmp
testl
push
xchg
adc
call
out
xchg
mov
leave
add
add
sbb
iret
cmp
out
movsl
inc
and
loop
push
mov
mov
dec
scas
int
cltd
in
mov
mov
repz
add
push
mov
in
fwait
cmp
pusha
daa
dec
cld
fisubl
out
test
jge
inc
xchg
xchg
and
je
testl
jno
add
mov
stc
push
popf
jle
outsl
jg
sub
sbb
pop
cli
stos
imul
xchg
sbb
or
fabs
les
mov
and
lahf
jmp
popa
iret
jno
imul
outsb
cmp
push
push
push
shr
lods
mov
inc
inc
movsb
testl
push
shrl
inc
sti
jle
inc
fdivs
pop
sub
dec
push
mov
sti
test
or
repz
dec
mov
push
sahf
mov
lcall
aas
or
fisttps
les
push
xchg
mov
push
push
xchg
push
sbb
mov
into
mov
push
push
xlat
add
pop
pushl
into
aam
push
je
mov
push
and
mov
add
sahf
rorl
dec
mov
dec
dec
cld
jno,pt
push
dec
and
cmp
inc
mov
addr16
jecxz
in
mov
andl
inc
jo
push
aaa
jecxz
insl
lea
dec
and
outsl
inc
js
sbb
mov
add
xchg
pop
loopne
ds
adc
cmpl
test
adc
xchg
sahf
dec
or
inc
pop
pushf
mov
xchg
and
and
push
imul
and
inc
sbb
icebp
cmp
mov
jne
cmp
mov
inc
fwait
test
xor
pop
faddl
jnp
sub
jne
mov
inc
inc
fcoms
loope
out
or
iret
pop
insb
mul
adc
lret
or
out
and
loopne
test
pop
das
in
cltd
movsl
xchg
out
sti
add
push
cli
xor
add
inc
into
dec
fsub
aaa
sti
or
mov
movsl
gs
aam
jecxz
shrb
and
aam
test
outsl
mov
add
movlps
data16
push
push
jmp
sti
inc
es
mov
sub
inc
negb
in
sbb
or
das
pop
sbb
xor
fs
out
mov
into
out
jno
jbe
mov
imul
sbbl
dec
cmp
adc
cmp
roll
scas
stc
add
jae
js
push
mov
dec
lret
xor
ds
lea
fldenv
enter
lods
cmc
jp
inc
cmp
addr16
lcall
int
xchg
test
xor
les
aas
lds
inc
imul
xor
sbb
push
or
pop
icebp
and
std
xor
or
adc
mov
push
pop
sarb
xchg
out
call
stc
popa
push
xchg
xor
or
aam
orb
idivl
mov
imul
mov
jl
cmp
adc
flds
enter
mov
jge
or
lods
in
mov
cmp
sbb
ret
push
push
icebp
std
sbb
fdivs
adc
pop
pushf
cmp
mov
in
sub
cwtl
jp
cld
daa
mov
test
mov
inc
mov
lds
ffreep
mov
adc
dec
imul
jns
insb
icebp
push
xchg
scas
cmpsl
adc
ret
mov
fstpt
divb
cmc
inc
jo
aad
push
mov
es
leave
mov
push
sub
fsubrs
mov
adc
xchg
aad
fbld
imul
push
pop
mov
cmp
xchg
enter
je
xorb
adc
js
call
xchg
ja
pop
xor
push
lcall
pop
xchg
inc
sbb
sub
fnstcw
pop
inc
or
int
xchg
loope
mov
pop
mov
js
mov
xchg
inc
jo
jle
loop
mov
mov
shrb
dec
lods
sbb
push
sar
xchg
jl
std
addr16
mov
mov
sar
aad
add
das
or
orb
jnp
testb
xabort
push
enter
ja
insl
inc
jge
das
popf
inc
packssdw
mov
fs
lcall
mov
test
inc
pop
aam
mov
add
shrl
or
gs
fistpll
test
clc
push
cmp
roll
call
bound
pop
push
xchg
lock
mov
rcll
cmp
imul
enter
mov
bound
test
xchg
jecxz
and
xchg
dec
ja
add
pop
cmp
pop
add
mov
inc
xchg
jg
gs
push
sub
cltd
aam
pop
inc
cmc
and
fadd
jbe
lods
shl
lods
pop
pop
testl
inc
cwtl
lcall
stos
pushf
loopne
push
adc
int
ss
cld
rclb
lds
stos
cs
push
push
xchg
lea
add
adc
adc
xchg
xlat
jb
cld
pop
insl
cltd
cld
sbb
ds
inc
repz
sha256msg2
adc
mov
jno
sti
scas
dec
insl
mov
ret
add
adc
pop
push
or
mov
inc
adc
lods
xchg
js
popf
sbb
pcmpeqw
fwait
sub
mov
xchg
daa
loopne
mov
inc
jmp
mov
data16
fistps
mov
outsl
dec
fistpll
es
jnp
testl
push
sbb
insb
and
sbb
push
ljmp
scas
mov
rep
popf
pop
and
rcr
mov
mov
jne
xchg
imul
mov
sbb
cmp
rcrl
imul
mov
xor
push
pop
mov
sub
push
or
xchg
cmp
in
xlat
pop
jbe
add
xlat
ficompl
jp
cmp
pusha
bound
xchg
or
lods
pop
mov
add
gs
ja
adc
or
aad
xor
insb
jbe
andl
lea
sahf
jl
lock
inc
push
shll
mov
and
push
movl
adc
adc
add
leave
out
shlb
out
test
popf
mov
loopne
jmp
lods
mov
out
jbe
mov
popa
add
sub
je
mov
or
mov
icebp
cmp
add
test
scas
jno
scas
insb
cmp
ljmp
inc
imull
mov
mov
lock
inc
std
dec
lods
pop
repnz
push
mov
sub
and
insl
cld
cs
jns
ljmp
arpl
std
xor
scas
arpl
pop
sub
fsin
lret
les
cwtl
pop
mov
aam
popf
cli
ret
jo
outsb
xor
pop
jbe
into
daa
out
shll
and
mov
push
shlb
mov
jle
sbb
xchg
cmpb
mov
jge
mov
sub
cmpsb
fistpll
std
pop
xlat
fdivrl
mov
xchg
popf
cmp
loop
or
repnz
and
js
cmp
jae
jmp
lcall
pop
mov
mov
push
cmpsl
cld
push
shlb
add
sbb
jecxz
mov
lds
add
xor
mov
lods
out
lods
pop
add
and
pop
lret
orb
jmp
sub
xor
inc
push
inc
inc
push
bound
push
das
adc
out
jl
adc
js
std
ret
rolb
cmp
dec
fadd
mov
call
push
out
sbb
repz
pop
loop
mov
cltd
inc
sbb
aaa
xchg
movsb
inc
jo
pusha
lahf
bound
daa
aas
jmp
lods
lods
mov
cmpsb
add
xchg
scas
test
add
adc
aam
mov
aas
aad
pop
loope
inc
shlb
popf
jo
mov
aad
pop
hlt
add
cmp
int3
cmp
or
cmp
aad
int
add
cmp
out
cmp
test
aas
out
adc
mov
cmc
xor
insl
jge
fnstsw
pop
or
ja
movsb
dec
jge
sub
lods
xchg
mov
xor
or
outsb
lock
push
adc
shll
mov
and
mov
in
mov
pop
popf
add
dec
in
subb
adc
cwtl
sub
mov
lret
enter
pop
push
mov
stos
rep
mov
push
loop
mov
jg,pt
lcall
push
pop
adc
xor
and
xor
dec
dec
xor
push
fstpt
rclb
sub
clc
jg
mov
push
mov
sarl
pushl
mov
lods
hlt
int
xchg
or
shlb
testb
sub
sbb
out
scas
jmp
pop
sbb
cmp
pusha
push
inc
xchg
jne
xchg
arpl
inc
mov
int
loope
fidivrs
imul
mov
mov
lahf
filds
or
iret
mov
inc
inc
ret
mov
mov
ds
mov
mov
dec
cmp
jnp
ror
xor
outsb
push
mov
fdivrl
jns
jnp
mov
jge
in
cmp
or
popf
mov
adc
popa
scas
stos
loope
xchg
scas
and
pusha
int
jge
repz
dec
idivb
addl
mov
sbbl
jle
push
fdivrp
call
insl
or
stos
je
mov
jl
jbe
pop
sbb
es
and
leave
mov
and
xor
or
inc
sahf
sub
jb
cltd
daa
ljmp
push
aas
mov
jo
cli
imul
or
or
xor
iret
mov
and
sbb
loopne
gs
push
adc
jne
xchg
sbb
ds
mov
push
daa
test
jae
repz
sub
jnp
cmpsb
outsl
fwait
addb
jecxz
in
push
sahf
rcrb
xor
add
les
jg
pop
xor
push
pop
and
xor
clc
pop
insl
mov
dec
pop
xchg
push
movups
popa
fildll
xchg
gs
mov
mov
mov
lret
sub
inc
mov
mov
push
movb
adc
add
mov
stos
lcall
push
popf
xor
cmpl
jne
mov
cltd
lcall
xor
lcall
repz
out
xlat
mov
daa
dec
inc
sub
les
cld
cld
in
add
and
in
add
enter
mov
lcall
sbb
push
xchg
mov
sub
push
bound
fstpl
cmc
pop
ja
rcll
sub
mov
in
push
dec
out
mov
and
std
dec
mov
cmp
imul
jae
adc
jo
xchg
pop
nop
mov
shll
stos
and
rolb
push
rcrl
sub
orb
mov
push
mov
dec
lret
inc
cwtl
inc
jne
cmp
gs
jge
into
cmpsb
repz
insl
pop
popa
mov
sbb
jmp
negl
inc
enter
sub
or
xchg
out
aam
jmp
insl
repnz
or
cmp
js
dec
pop
pop
sub
and
xor
orl
pushf
mov
adc
into
scas
rcll
ficoms
repnz
pop
pop
das
mov
arpl
out
sbb
jne
lods
dec
add
ret
jno
repnz
notl
out
jo
insb
xchg
xlat
pop
mov
test
stc
shrl
jl
mov
or
negl
jbe
xlat
cmp
loopne
sub
pop
jae
mov
and
mov
cltd
out
enter
mov
sub
lods
mov
mov
jns
mov
int3
sbb
xor
lods
iret
sbb
sahf
aad
mov
jge
icebp
bswap
pop
mov
pop
adc
ss
lods
and
xchg
in
inc
mov
sbb
pop
inc
je
xchg
jae
jo
jae
dec
sbb
loope
sbb
cmp
sub
cltd
dec
test
dec
pushl
sbb
mov
dec
jo
pusha
pop
cld
cltd
push
push
dec
ret
das
inc
inc
xor
or
std
cmpsl
adc
ja
je
addr16
xorb
inc
mov
lret
pop
adc
dec
int3
inc
rol
pop
cmpl
lahf
les
fstpt
fildl
call
fwait
loopne
lcall
ret
cmp
daa
decb
pop
pop
jl
jns
stos
movsl
stos
gs
jb
popa
mov
pop
inc
out
insb
scas
xor
insb
aad
int3
test
call
movsb
loop
cmp
arpl
notl
jmp
inc
adc
in
cmpsl
mov
shlb
cmp
sbb
cmp
es
enter
mov
push
scas
sub
aad
or
push
dec
or
adc
ffree
aaa
xchg
xor
iret
adc
sahf
inc
rcrb
and
and
popf
mov
adc
outsb
ja
push
xchg
sar
add
lods
and
sbb
daa
inc
cld
adc
js
loopne
int
cmp
pop
mov
ja
fstpl
aam
and
or
pushf
cmp
testl
mov
xchg
daa
pop
icebp
ja
in
ja
ljmp
int3
negb
adc
pop
shrl
lods
dec
dec
insb
jmp
jne
mov
inc
fisubrl
insl
ret
push
xor
inc
pop
xchg
xchg
mov
push
sbbl
sahf
sbb
mov
dec
notb
jmp
sbb
pop
lret
addr16
out
jl
push
jb
xor
lods
inc
sub
ljmp
add
out
ss
xor
pop
notl
test
and
fmul
inc
xor
jl
fsubrl
mov
pop
and
outsb
je
je
push
push
mov
mov
xchg
adc
or
ret
andl
imul
xor
or
scas
lods
stos
popf
dec
and
inc
movsl
jne
add
leave
jecxz
in
and
int
add
pop
push
sbb
pop
add
mov
mov
xchg
clc
test
aas
add
icebp
lock
mov
movsl
xor
clc
mov
xchg
mov
pop
scas
mov
adc
out
in
cmp
jecxz
imul
jle
push
add
mov
add
jae
and
xchg
dec
insb
pushf
shrb
sbb
inc
mull
test
lret
daa
js
sub
mov
sbb
jbe
mov
out
test
and
imul
pop
mov
jno
loop
dec
fstpt
fcomi
sbbl
mov
loopne
lods
push
jl
adc
sti
fldt
push
stos
nop
les
jecxz
gs
iret
cmp
sarb
lcall
iret
into
shrl
push
test
push
pop
shl
or
mov
pop
lea
xchg
add
arpl
dec
push
and
sbb
xor
popa
cs
loop
lds
and
test
clc
jg
cs
addl
xchg
jns
mov
clc
pop
and
scas
and
jbe
orl
stos
pop
cmpsb
or
inc
pop
out
flds
mov
movsl
rcr
mov
fsubs
mov
sub
movsl
push
jecxz
sbb
mov
pop
mov
scas
arpl
cwtl
sbb
clc
sbb
mov
push
lahf
pop
inc
push
inc
mov
jecxz
mov
mov
adc
fmull
xchg
dec
xor
imul
aad
cmp
aas
xchg
outsl
inc
jno
lea
popf
test
cmp
dec
xadd
or
lret
pushf
mov
rcrb
ljmp
aam
data16
adc
jbe
push
repz
xor
jnp
xor
icebp
data16
push
loopne
je
in
adc
iret
jmp
orl
mov
int3
jp
cmpsl
fwait
loop
pushf
fs
sbb
mov
out
cltd
mov
and
mov
shll
das
loop
enter
roll
aam
imul
repz
clc
pop
cmp
inc
fidivrl
or
out
cmc
sti
mov
cmc
faddl
mov
popa
add
sarb
and
notl
mov
in
dec
popa
sbb
push
or
ljmp
mov
dec
cmp
push
push
cwtl
js
mov
add
fsub
sub
roll
inc
insl
ficoml
arpl
xchg
loopne
dec
cwtl
in
dec
fcmovnbe
add
fstpl
mov
push
mov
cmovno
jae
outsl
pop
in
aaa
je
xor
mov
sbb
jle
jno
shll
cmpsb
inc
je
pop
mov
sub
xchg
pop
push
dec
pop
ret
dec
outsb
inc
inc
dec
cwtl
push
push
sub
mov
fisubl
imul
iret
add
into
adc
push
cltd
dec
rorl
xchg
cmp
inc
loopne
lcall
adc
and
push
loop
mov
std
adc
cmp
adc
ret
fstl
std
pop
call
stos
sti
jmp
cli
out
and
and
xlat
iret
push
cmc
das
push
test
sti
in
inc
test
outsb
cmpsl
pop
xchg
mov
cmp
push
mov
dec
lret
imul
push
inc
dec
adc
notl
stc
mov
repz
sti
and
fbld
lods
je
fnstsw
popl
rcrb
sarb
add
and
mov
pop
stc
mov
lret
es
push
add
out
lods
inc
dec
shl
sub
or
jns
push
into
or
lds
sbb
dec
xchg
mov
or
daa
xchg
test
inc
and
mov
aaa
test
pusha
cli
inc
sub
gs
push
dec
mov
inc
les
iret
out
dec
ja
test
push
sbb
stos
jmp
jl
push
js
xchg
lock
inc
dec
or
mov
iret
push
mov
inc
xor
push
dec
add
imul
adc
outsb
jmp
cmp
push
movb
jno
pop
std
sar
and
fidivl
adc
add
jge
lods
das
add
out
xchg
je
stos
and
adc
es
fwait
int
cmp
sbb
dec
pop
pusha
inc
orb
notb
and
push
add
xchg
sub
or
rorl
out
add
movsb
call
scas
lcall
pop
push
bound
or
mov
mov
mov
adc
cld
lods
jns
pop
adc
inc
lods
dec
cli
jns
mov
mov
push
adc
scas
sub
fs
ret
rcrl
push
mov
xchg
movsb
sbb
jns
lret
mov
dec
popf
mov
mov
lret
push
jmp
mov
lock
orb
pop
fcmovne
mov
jg
inc
nop
imul
cmp
arpl
out
mov
imul
add
inc
pop
int3
pop
cmp
aaa
xchg
sub
mov
mov
add
pusha
inc
iretw
test
adc
cmp
jae
cmc
imul
iret
push
pop
shrl
scas
xor
and
arpl
jnp
loope
enter
pop
pop
xor
in
fcmovnu
loop
lea
fcoms
pop
idivb
sbb
lcall
sub
adc
loope
test
pusha
mov
je
lcall
sbb
sbb
jae
lods
dec
das
das
dec
xchg
pop
ret
fs
push
dec
fnstenv
fcmovne
push
rcll
nop
xchg
inc
xchg
sti
hlt
jne
xor
and
push
int
daa
adc
mov
mov
dec
jmp
inc
call
pop
mov
pop
jecxz
sub
stc
test
in
cmp
es
shll
fidivl
arpl
rorl
mov
nop
imul
jo
jno
push
xchg
repz
aaa
sub
cmpsl
sbb
out
jmp
and
push
lret
jge
and
pop
add
ret
ds
ja
adc
les
push
mov
sbb
cs
jle
push
cmp
leave
outsl
mov
outsb
test
incl
sub
dec
push
inc
inc
aam
popa
je
ret
and
dec
mov
sarb
inc
bound
jae
cmp
les
adc
shrb
mov
shll
add
mov
add
cs
sahf
pusha
mov
outsb
push
adc
filds
jg
sbb
jl
fsubs
cli
mov
ds
and
cmp
addl
mov
mov
shrb
inc
in
je
stos
pop
loop
fnstenv
js
xor
rorl
addb
fistl
in
mov
mov
sbb
push
cmp
in
mov
mov
mov
cmpsl
push
mov
dec
fwait
scas
mov
sub
incl
enter
mov
test
mov
pop
inc
fstpt
push
jne
shlb
xchg
sbb
or
sahf
dec
ret
shll
pushf
mov
cmp
add
adc
fsubs
cld
xchg
je
nop
mov
ror
dec
mov
ret
in
popl
and
cs
jg
jbe
cmpsl
jbe
cld
mov
pop
ljmp
adc
jmp
fdivrp
jmp
mov
divb
push
das
stos
push
arpl
pop
lahf
and
cld
or
in
or
cwtl
aam
add
ficomps
or
in
std
xor
and
push
fidivrl
mov
mov
flds
movsb
ror
sbbb
imul
stc
roll
jne
push
xor
jae
stos
add
insb
out
add
loopne
jl
rclb
mov
jne
mov
add
rorb
xorb
into
bound
sub
lahf
inc
jns
loope
lcall
bound
sbb
inc
and
mov
pop
or
or
mov
shll
aam
add
mov
fistl
mov
xorl
mov
dec
jg
das
popa
inc
scas
fstpl
pusha
cmpsl
sarb
or
inc
jno
dec
push
cmp
cmp
out
add
data16
xor
nop
pop
sub
dec
or
add
mov
mov
dec
and
pop
xor
jbe
and
dec
adc
jmp
push
jmp
xchg
and
jle
push
dec
mov
aad
xchg
lahf
stos
das
pop
dec
mov
xor
outsb
xchg
mov
jmp
adc
mul
sub
jno
cs
imul
add
push
das
fs
clc
ds
faddl
ja
xchg
jmp
arpl
adc
or
cmp
dec
fdivrp
in
rcrl
lcall
stos
addr16
sarl
lea
xchg
sub
add
enter
pop
cs
lods
dec
adc
mov
jmp
sbb
repz
jnp
add
movsl
mov
jns
xor
inc
push
add
inc
stos
mov
cmp
pop
mov
inc
outsb
xchg
lods
lock
fists
and
mov
or
out
ss
xor
push
jg
jge
sub
sub
data16
pop
ja
cli
out
mov
int
adc
call
scas
xchg
sbb
orl
push
mov
or
dec
insb
xor
push
fistpll
jbe
gs
mov
shrl
fcomip
sub
inc
push
fidivl
sbb
sub
out
jp
cmc
mov
push
mov
call
lods
jbe
aaa
jmp
movups
popf
mov
add
xor
jae
popa
fs
cmp
subb
cld
je
push
jge
out
jg
jge
push
daa
testl
push
mov
mov
add
sub
xchg
aad
adc
notl
cmp
addb
jns
mov
out
lods
mov
out
das
inc
xchg
lock
mov
xchg
lcall
add
cmp
pop
out
dec
jge
out
xor
fstp
movsl
cli
inc
rol
fisubs
pop
insb
mov
dec
cli
lods
sbb
jnp
sub
fwait
xor
mov
ds
outsb
cmc
je
pop
mov
xchg
jl
dec
int
jmp
add
divl
in
xor
dec
mov
dec
lods
fwait
jns
out
mov
aam
mov
fldt
inc
pop
or
pop
adc
dec
jle
sub
stc
xorl
mov
hlt
or
negb
jle
movsb
and
stos
xchg
shrb
fwait
mov
sbbb
pop
addr16
xchg
mov
sti
cld
sbb
dec
test
push
jmp
mov
gs
shrl
repnz
aam
out
or
dec
sub
leave
jbe
sbb
bound
dec
stos
aam
mov
cltd
jecxz
cmp
sub
cmp
xlat
xchg
in
outsl
push
jns
jl
and
jbe
int3
bound
movsb
bound
in
mov
sti
lret
pop
mov
pop
mov
mov
gs
ret
jge
call
loop
sbb
push
insl
mov
adc
xchg
cmc
sti
mov
xor
scas
mov
dec
xor
dec
fldl
or
dec
imul
add
add
pop
mov
inc
or
xchg
test
ds
dec
push
and
std
stos
cmp
in
imul
add
cmpsb
push
movsl
pushf
pop
mov
icebp
roll
dec
rorl
int
sub
jno
cmp
mov
add
jge
add
out
rorb
daa
mov
mov
or
pop
jle
cmovo
pop
sub
into
mov
mov
inc
aad
in
mov
pop
fists
inc
pop
out
push
xor
popf
ficoms
jb
add
outsl
out
aam
int
mov
imul
out
shlb
mov
in
pop
hlt
cmp
les
test
pop
dec
or
push
divl
scas
sbb
add
mov
or
inc
mov
push
lods
aad
rcrb
in
pop
in
out
sbb
imul
or
cltd
jns
adc
ds
jmp
cmc
add
js
push
jg
enter
cmp
cmovne
lods
in
inc
or
pop
stos
adc
xchg
lods
and
mov
push
es
addr16
dec
push
jne
int3
repnz
aaa
out
inc
rorb
loopne
je
xchg
cwtl
push
loop
enter
bound
jmp
lret
mov
xchg
add
sub
sbb
cwtl
out
iret
pusha
loopne
out
mov
cmp
out
push
stc
adc
fcmove
fsts
xchg
aaa
insb
imul
mov
dec
lahf
or
jne
cmp
lea
jecxz
pusha
daa
dec
xlat
xchg
enter
mov
fisubrl
pop
mov
cwtl
scas
inc
sbb
dec
xor
xor
enter
xor
jmp
sub
popa
jae
test
sbb
loopne
add
add
or
xchg
xor
arpl
inc
sub
jg
into
test
es
mov
and
scas
jno
insl
jmp
cld
fistpll
adc
sub
ljmp
or
jo
test
pop
jne
mov
ds
push
dec
inc
sub
jb
fmul
xor
scas
push
inc
fisttpl
sbb
adc
stos
mov
cmc
in
inc
mov
insl
fld
hlt
cmpsl
mov
lods
pop
pop
aaa
jbe
outsl
mov
cmp
mov
lcall
dec
xchg
sub
lret
xchg
pop
xor
push
push
xor
xchg
inc
lret
fs
dec
pop
jecxz
insb
dec
push
loope
cmp
mov
int3
mov
fisttpll
fwait
popf
push
in
sbb
nop
fstpl
or
imul
mov
inc
dec
es
lret
pop
mov
dec
and
xor
jecxz
mov
pop
mov
fcoms
inc
lret
jp
das
bswap
in
outsb
pop
jl
xchg
adc
push
orb
push
test
lds
inc
mov
pop
cmp
cmp
fnstcw
dec
int
data16
sbbl
sbb
lock
push
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
add
add
addb
add
xor
add
pop
add
orb
add
addb
addb
add
add
add
add
add
add
add
or
add
lock
push
add
add
add
add
add
add
add
or
add
lock
or
add
in
add
add
add
add
add
or
add
add
add
lock
and
add
in
add
add
add
add
add
or
add
add
add
add
or
add
in
add
add
add
add
add
or
add
add
add
add
or
add
in
add
add
add
add
add
or
add
add
jo
add
or
add
in
add
add
add
add
add
or
add
add
xor
add
add
in
add
add
add
add
add
or
add
lock
or
add
in
add
add
add
addr16
xchg
xor
xchg
jmp
sbb
xor
je
mov
hlt
xchg
xor
je
mov
or
xor
imul
hlt
xchg
xor
mov
mov
hlt
xchg
xor
jne
mov
or
xchg
mov
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
out
lcall
call
xchg
xor
je
and
dec
cli
mov
rorl
xor
je
das
fadds
dec
lret
mov
fisubrl
mov
push
hlt
mov
rorb
inc
jmp
mov
rorb
dec
je
insl
repnz
lea
xor
je
mov
and
cmp
jmp
or
mov
xchg
xor
imul
fbld
fimull
in
jae
lea
push
sbb
pop
pushf
cmp
in
push
push
test
gs
in
aam
and
leave
sbb
pop
cmp
insl
adc
lds
pop
dec
jl
dec
enter
hlt
divps
xlat
add
dec
inc
into
mov
and
and
int
jno
loope
inc
pusha
std
inc
pop
add
int3
xchg
xchg
fdiv
sbb
push
mov
loope
jmp
and
add
dec
addr16
into
xchg
pop
jmp
sub
jp
idiv
movsl
scas
fcoml
iret
lret
mov
adcl
sbb
push
test
scas
mov
lock
and
in
inc
inc
xchg
jmp
sbb
mov
push
mov
jl
mov
sub
scas
or
inc
sbb
add
cmp
sub
lods
push
inc
xchg
adc
cltd
inc
xlat
sub
xor
mov
inc
jle
inc
lock
addr16
inc
sahf
xchg
cltd
hlt
push
js
insb
dec
sahf
or
test
fildl
in
scas
push
add
dec
fisttps
sub
mov
mov
push
test
xchg
sub
push
cmp
in
inc
fdivrl
mov
out
xor
cld
mov
and
jmp
or
into
loope
aaa
es
mov
dec
mov
jb
cmp
add
xor
aam
adc
stos
xchg
jnp
fildll
test
mov
popa
cli
in
movb
lds
lea
xchg
int3
cmp
pop
dec
enter
xor
sbb
mov
and
sbb
mov
out
sbb
push
lret
inc
sti
dec
add
cwtl
xchg
add
jns
mov
mov
xchg
shll
add
mov
xor
or
fiaddl
outsb
mov
dec
in
cltd
cltd
mov
lret
imul
add
pop
mov
dec
and
mov
daa
mov
in
lods
mov
inc
test
rcrl
jns
lret
popf
push
cmp
sub
stos
orb
popa
or
andb
xchg
dec
mov
add
push
pop
enter
ret
jns
out
jg
mov
lret
out
and
addb
mov
dec
sub
repz
ljmp
inc
test
sub
mov
and
jae
sub
cld
lret
adc
inc
jg
xorl
pop
test
mov
cmpsl
mov
mov
dec
outsb
push
and
sbb
mov
stos
sub
gs
inc
out
pop
int3
es
pop
rorl
fs
in
push
sahf
insb
pop
jnp
in
jp
outsl
xor
out
imul
mov
and
cli
sub
dec
fwait
pop
adc
pop
push
iret
fisttpl
scas
out
call
mov
stos
rcll
add
mov
or
data16
icebp
cld
sbb
fs
xchg
jmp
clc
fldt
stos
jae
dec
aam
and
sti
and
push
sbb
xchg
jo
push
pop
ds
rcl
incl
les
jnp
mov
sbb
mov
int
jo
out
push
jl
imul
cmpsl
adc
hlt
scas
ss
lahf
repz
imul
cltd
clc
pop
jecxz,pt
push
mov
je
dec
fildll
lods
mov
push
mov
mov
xor
jmp
mov
xchg
xlat
add
mov
fs
and
add
mov
mov
fwait
dec
or
dec
cmpl
test
test
pop
push
pop
dec
jnp
mov
or
int3
lds
mov
lahf
or
mov
xor
int3
jecxz
pop
sti
ret
dec
add
sub
xor
push
jp
xchg
shr
subl
pusha
dec
js
sub
popa
or
pop
outsl
leave
cli
int
rcll
insb
cmpsl
jno
sbb
lds
mov
shlb
hlt
shlb
sub
or
jle
dec
add
cs
inc
repz
pop
xor
mov
les
das
into
pop
hlt
scas
xor
inc
notl
adc
inc
pop
ljmp
test
add
jmp
into
cmpsl
sub
push
out
je
dec
test
outsb
sbb
fwait
cmpsl
push
adc
hlt
out
out
sbb
cmpsb
iret
jmp
cmp
or
jl
jb
and
es
or
fimuls
sub
and
mov
hlt
gs
push
dec
shrb
loop
jl
sub
xor
jmp
mov
and
pop
daa
mov
push
repz
lods
and
loope
notl
cmp
int
insb
or
mov
loopne
pushf
pop
int3
jo
mov
dec
dec
xchg
jnp
faddl
rcl
daa
mov
je
pop
pop
or
loope
rorb
push
push
test
test
push
inc
push
je
push
rclb
testl
mov
fldcw
dec
xchg
jns
dec
ficoms
repz
sub
imul
stos
mov
rolb
out
sub
repz
scas
nop
mov
inc
sub
popa
push
addb
je
out
dec
fwait
mov
addl
mov
les
testl
dec
jnp
xchg
push
fs
stos
mov
clc
scas
inc
in
cli
sub
movsb
jo
push
in
push
jl
pop
icebp
loop
aas
mov
inc
inc
aas
dec
pop
inc
or
stos
popf
push
lock
pop
cli
mov
cltd
insl
sti
fs
out
mov
jecxz
mov
cld
lods
pop
lret
lea
xchg
fidivrl
ret
popa
push
xor
int3
roll
inc
popf
sbb
or
and
inc
test
outsb
and
subl
lods
scas
sub
mov
cmp
pop
inc
xor
loopne
insl
getsec
xchg
jne
sub
cltd
enter
mov
jmp
cs
aad
je
leavew
loope
enter
and
fiadds
jecxz
mov
jl
sbb
ficompl
ss
sbb
bts
add
ljmp
in
ret
jbe
or
cmpsl
out
jmp
sub
jecxz
or
in
jne
lret
cmp
shrl
cmpb
jo
dec
jle
push
inc
and
inc
mov
aam
and
sub
dec
gs
test
push
adc
call
push
aas
subb
je
dec
push
add
xchg
xor
mov
sbb
jmp
mov
push
scas
jmp
in
adcb
dec
call
add
push
sub
fsubr
loope
call
out
sbb
call
xor
loopne
mov
mov
jecxz
aaa
stos
out
std
sbb
push
mov
mov
push
cmp
mov
ss
push
jecxz
push
popf
inc
outsb
sar
mov
jbe
mov
testb
inc
push
rcrl
xor
test
shr
pop
lret
in
xor
jns
out
xchg
bound
test
jae
mov
pop
fwait
jmp
test
ds
icebp
sbb
xlat
jp
scas
je
add
dec
ljmp
jb
in
or
jnp
mov
cli
mov
mov
xorps
outsb
xchg
sub
in
fs
sbb
add
nop
outsl
test
loop
xchg
mov
cwtl
lcall
int3
inc
add
icebp
push
into
shlb
cli
jno
scas
repnz
mov
mov
push
lret
test
iret
cmpsb
repz
pop
int
clc
aad
inc
leave
movsb
add
adc
mov
lods
xchg
ss
lcall
sub
addr16
add
xchg
decb
sbb
lret
jle
mov
cmp
mov
push
test
aaa
dec
mov
les
mull
icebp
push
or
call
mov
lret
out
fwait
sub
inc
test
add
fmulp
or
cltd
test
dec
sarb
jmp
iret
adc
inc
xchg
cmpsb
dec
leave
add
and
or
inc
lret
mov
outsl
xor
push
ljmp
sub
sub
vpcomuq
adcb
stos
cltd
jle
movsl
dec
jnp
pusha
stc
jecxz
jne
jb
outsb
and
inc
les
mov
xorb
sar
mov
mov
filds
into
add
sbb
fimull
in
add
ret
sbb
imul
or
sbb
and
rorl
sbb
or
inc
movsb
xor
lret
mov
mov
shlb
mov
push
dec
sbb
sub
testl
mov
std
push
lods
mov
in
push
movsl
xor
rorl
fiaddl
hlt
dec
add
sahf
aas
mov
pop
mov
pusha
add
lds
scas
pop
xchg
xor
popf
lahf
mov
imul
aad
icebp
pop
jns
add
jge
int
mov
sub
imul
sub
js
in
and
or
adc
mov
lcall
sub
imul
test
pop
out
clc
and
cmp
mov
ret
js
push
jmp
jmp
sub
rcrl
mov
rclb
mov
jecxz
xor
imul
mov
mov
jb
call
cwtl
dec
cltd
addr16
sbb
addl
in
jecxz
pusha
movsb
xchg
shl
push
ret
xchg
in
dec
std
jo
xor
add
call
cltd
ror
jns
insb
xchg
inc
or
push
hlt
xchg
mov
icebp
hlt
xchg
xor
test
fs
je
mov
mov
cmp
js
daa
xor
je
sbb
je
mov
pop
stc
addl
mov
push
in
loopne
and
push
hlt
sbb
push
jo
cmp
mov
jns
fisubs
and
dec
jp
outsl
inc
ds
cli
lcall
adc
sub
jne
mov
cli
test
ret
shrb
jo
ljmp
xor
sahf
adc
int3
add
insb
or
loopne
jmp
xor
mov
mov
or
pushf
cmp
dec
push
xchg
push
cmp
loope
or
push
test
andl
sbb
cld
fcompl
fimull
out
mov
hlt
xchg
dec
call
pop
ds
loope
cmp
popa
lods
ret
xor
je
mov
or
xor
shl
bound
popa
mov
mov
subl
or
push
test
mov
jmp
jne
adc
or
int3
mov
subl
popa
inc
cmpl
mov
sbb
pop
xchg
hlt
loope
mov
add
dec
je
mov
bound
repnz
xor
xchg
push
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
je
mov
hlt
xchg
xor
in
bndstx
je
or
inc
dec
hlt
pop
adc
je
fs
test
lock
xchg
mov
les
or
cli
cmpsl
out
outsl
dec
lahf
enter
out
mov
ss
push
push
cltd
dec
ret
shrb
jbe
jb
movsl
jge
adc
lcall
push
scas
stos
adc
sub
in
notl
out
in
push
jno
fs
test
adc
inc
fildll
movsl
frstor
clc
xor
cmp
adc
inc
fisubrs
cli
loop
mov
inc
ret
mov
push
xchg
inc
clc
rclb
lock
jle
loopne
stos
lods
mov
rcrl
mov
ss
mov
xchg
push
mov
xor
inc
jl,pt
or
adc
test
mov
cmp
decb
xchg
inc
mov
xchg
xchg
mov
push
push
mov
push
add
push
out
xor
add
jnp
mov
sbb
push
push
movsl
outsl
add
jecxz
push
mov
loop
push
mov
push
xor
sahf
dec
and
test
jmp
dec
xchg
in
pushf
ljmp
jmp
scas
pop
inc
stos
and
sub
mov
push
dec
xchg
xlat
mov
xchg
popf
popa
push
adc
scas
sbb
jae
jmp
fidivl
cmp
and
pop
sbb
adc
push
and
mov
lods
lods
jae
add
leave
outsl
aam
add
mov
nop
add
cld
sbb
mov
shrb
daa
push
mov
mov
dec
sbb
or
rcll
mov
adc
jmp
xchg
jns
sti
jmp
pop
push
sub
mov
int3
inc
cmp
dec
mov
adc
inc
stos
adc
lret
pop
xchg
nop
pop
adc
mov
xchg
scas
in
pop
loop
test
sbb
cli
pop
out
jg
fcompl
dec
mov
in
add
sub
sub
inc
dec
push
pop
sub
je
sub
cmp
cmp
add
cmp
push
xor
pop
push
pop
xor
jb
add
mov
push
test
pop
sub
sub
push
pop
mov
add
je
sub
inc
push
pop
cmp
dec
cmp
inc
push
pop
push
sub
pop
push
pop
push
cmp
pop
sub
dec
sub
cmp
jae
mov
xor
add
cmp
xor
mov
add
sub
jne
test
xor
dec
push
pop
cmp
mov
add
push
pop
test
jg
inc
xor
add
or
inc
cmp
push
test
pop
push
pop
inc
mov
add
add
mov
push
pop
cmp
jne
xor
or
inc
inc
sub
js
add
sub
cmp
sub
push
or
pop
push
pop
cmp
jne
sub
and
jecxz
xor
inc
mov
add
add
jp
add
test
cmp
dec
sub
fnstcw
test
push
ss
or
nop
test
jp
xchg
rolb
or
adc
loopne
inc
cmp
add
fnstcw
or
push
or
adc
fnstcw
test
inc
push
mov
fnstenv
jl
test
push
outsl
pop
xchg
nop
test
loop
nop
test
sub
lods
test
or
push
test
adcb
cmp
flds
or
nop
test
aaa
loop
nop
test
roll
xchg
nop
test
add
pusha
les
roll
pusha
les
and
push
test
jle
clc
push
jl
nop
push
test
push
xchg
nop
test
adc
test
dec
push
xor
cmp
cmpb
adc
je
adc
dec
sbb
adc
push
sub
inc
add
add
inc
push
sbb
sbb
subl
xor
sbb
push
sbb
push
push
and
pop
and
es
sub
xlat
jle
xor
hlt
mov
mov
pushf
sub
xor
inc
std
xchg
int
cmp
decl
or
xchg
xchg
stc
into
mov
cmp
pop
adc
cwtl
or
fldenv
jmp
pop
fildll
and
mov
cmpsl
les
scas
cmc
xor
shlb
adc
mov
dec
cmp
repz
xor
or
dec
jl
pop
jl
xchg
mov
and
popf
stos
push
or
sub
loop
push
dec
stc
or
into
mov
jl
arpl
jp
in
mov
or
mov
adc
jns
scas
push
dec
ror
cmp
jg
loopne
loop
and
outsl
cwtl
jle
sub
in
jecxz
cltd
sub
jns
jno
and
jecxz
jne,pn
jne
push
and
pop
std
cmpl
add
sbb
dec
xchg
xchg
mov
pusha
sub
mov
xorl
xor
movsb
ja
imul
addl
clc
fsubrl
cld
clc
mov
and
cmp
adc
out
pop
in
