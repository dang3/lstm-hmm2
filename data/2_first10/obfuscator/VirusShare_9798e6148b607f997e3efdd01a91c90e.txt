add
or
add
add
push
add
addb
add
mov
add
lock
orb
add
lock
add
pusha
push
add
rolb
adcb
add
add
add
inc
or
addb
add
xchg
add
add
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
xchg
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
xchg
add
add
add
add
add
add
xor
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
addb
add
xchg
add
add
add
add
add
add
add
xor
add
add
add
add
add
sldt
rolb
add
clc
add
sub
add
and
add
dec
add
xor
add
jo
add
cwtl
add
xor
add
rolb
xor
add
call
sldt
adc
xor
add
cmp
xor
add
pusha
add
cmp
add
mov
cmp
add
mov
add
fadds
cmp
add
add
add
sub
add
push
add
add
js
add
mov
adc
add
add
add
xchg
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
adc
or
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
add
add
add
test
or
add
add
add
add
add
add
add
push
add
xchg
add
add
add
add
add
add
add
imul
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
cmp
or
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
jns
add
add
xchg
add
add
add
add
add
jl
add
add
xchg
add
add
add
add
add
add
or
add
add
add
add
add
or
adcb
add
cmp
add
xchg
add
add
add
add
add
push
add
sbb
add
xchg
add
add
add
add
add
add
sub
add
xchg
add
add
add
jg
add
jg
add
push
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
xchg
add
add
add
add
add
push
add
loopne
or
add
add
add
add
add
add
add
push
add
hlt
mov
add
add
add
add
add
add
add
pop
add
or
add
xchg
add
add
add
add
add
pop
add
sbb
or
add
add
add
add
add
add
add
add
xor
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
or
sbb
add
xchg
add
add
add
add
add
pop
add
insb
mov
add
add
add
add
add
add
add
or
addb
add
xchg
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
or
subb
xorb
add
dec
or
cmpb
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
add
or
add
xchg
or
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
or
push
add
dec
add
add
push
add
inc
add
push
add
add
add
dec
add
inc
add
pop
add
dec
add
or
push
add
dec
add
add
push
add
dec
add
inc
add
aam
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
inc
add
outsb
add
add
popa
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
xor
add
add
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
push
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
inc
add
outsb
add
add
popa
add
add
outsb
add
add
outsb
add
je
and
dec
add
je
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
shl
jle
test
test
stc
in
or
nop
push
loope
and
add
add
in
repz
int
dec
pop
out
sbb
arpl
inc
jg
add
cmp
icebp
addr16
push
lret
fs
popa
dec
test
sub
ret
loopne
outsb
nop
push
test
push
mov
dec
pop
or
push
aaa
push
jle
idiv
pushf
popf
fisubs
leave
lods
jno
inc
js
movsl
xchg
ljmp
imul
out
movsl
test
pop
mov
loop
xlat
popf
in
inc
repz
repz
xchg
or
ret
push
or
idivb
inc
add
add
pop
sbb
push
inc
inc
dec
jns
push
hlt
hlt
xchg
sahf
das
dec
sahf
jecxz
std
stc
int3
jp
ss
mov
enter
fs
inc
icebp
out
pop
xchg
add
fimull
dec
mov
add
mov
sbb
out
and
sbb
push
pop
ljmp
sub
out
push
xor
rorb
addps
jae
popf
mov
push
les
int
add
or
cmp
cmp
insb
enter
inc
scas
sbb
ljmp
subl
xorl
inc
sarb
mov
cwtl
pop
sub
mov
mov
loope
sbb
loope
imul
push
pop
mov
sbb
fwait
add
cmp
xchg
sbb
mov
aaa
xchg
xchg
pop
ja
pcmpeqw
adc
out
pop
inc
pop
dec
cmc
pop
imul
mov
sar
imulb
cld
push
inc
xchg
mov
js
jno
sub
jge
push
mov
cltd
dec
insl
push
push
push
xchg
cwtl
adc
stos
shrd
fabs
jecxz
sbb
sub
dec
or
add
subl
xchg
xchg
mov
xchg
xlat
xchg
push
cltd
ss
inc
fnstcw
mov
pop
pop
push
jmp
adc
insb
mov
cs
shl
mov
in
stos
lock
jg
pop
icebp
mov
idivb
divb
rclb
stc
rolb
int3
inc
popa
aad
xor
js
imul
arpl
leave
inc
mov
inc
sbb
add
stc
mov
push
and
js
xchg
and
scas
bound
iret
enter
verr
mov
pop
xor
cmp
fildl
jp
xchg
sub
jmp
dec
dec
dec
push
pop
jle
cmp
mov
xchg
call
into
icebp
cmp
cld
cmp
fs
sbb
iret
leave
mov
sbb
daa
fsubs
add
sub
adc
movsl
cmp
adc
sub
daa
inc
mov
mov
mov
and
pop
in
mov
dec
fstl
out
and
ret
loopne
lods
std
and
inc
sbb
adc
mov
mov
or
jae
push
fidivs
cli
ljmp
cmp
jno
sbb
cltd
adc
ror
dec
sbb
xlat
xor
bound
into
dec
xor
std
inc
enter
dec
and
repnz
or
jp
add
int3
cmp
xchg
mov
mov
inc
inc
pop
mov
xchg
dec
jmp
mov
fisubs
sar
mov
push
xchg
dec
ret
push
sbb
push
sti
dec
lods
out
loopne
push
mov
or
in
std
inc
xchg
out
xor
pusha
xchg
push
mov
aam
xchg
mov
add
mov
mov
addr16
imul
xchg
push
aas
jns
mov
arpl
jl
test
hlt
test
mov
push
jecxz
sbb
pop
call
dec
sbb
stos
cli
sbb
addl
push
dec
jb
cmp
arpl
clc
jno
aam
sub
mov
bnd
adc
pop
add
test
popa
aad
je
cmpsl
mov
out
sub
dec
or
jb
jns
loopne
inc
add
push
movsb
pushf
adc
rolb
fmull
pop
xor
sub
xor
adc
push
pop
add
loop
aaa
jl
bound
ror
fldt
or
add
adc
push
in
xchg
aam
daa
xchg
dec
cmc
lret
mov
sarb
xor
push
out
sbb
jl
stc
mov
inc
cmp
cmp
ds
push
cmp
test
out
pushf
fisubl
xlat
xchg
mov
xor
fs
dec
fcmovnu
hlt
pop
movsl
and
push
fisubrs
dec
jne
pop
sahf
shll
cmp
js
mov
out
dec
repnz
movsb
fcomi
ret
rcr
inc
hlt
jno
cmp
push
or
out
fucom
sbb
inc
aas
ss
lret
mov
pop
lret
fldenv
pop
xor
fldl
pop
push
mov
xchg
lods
mov
sbb
dec
sbb
stc
mov
std
adc
sbbb
sub
popf
pop
xchg
cmp
dec
jo
test
and
xor
dec
incb
mov
aas
orl
pop
lahf
scas
out
ret
push
jmp
mov
sub
inc
adc
jne
int
xchg
add
cmp
mov
das
testb
pop
pop
inc
mov
cmp
lds
jnp
xchg
loopne
jb
clc
sub
dec
loop
xchg
call
and
sub
inc
dec
inc
jbe
repz
xchg
or
xchg
and
lea
push
cltd
cmp
hlt
ss
aad
popf
or
mov
push
xchg
insl
dec
push
push
mov
leave
and
push
divb
xor
and
outsl
int3
sub
repz
dec
pushf
sbb
adc
add
sbb
push
out
fwait
ljmp
push
dec
dec
jecxz
imul
mov
jb
hlt
rcr
rolb
or
bound
pop
mov
inc
xor
mov
sub
pop
das
lods
sahf
pop
mov
xchg
mov
sbb
das
mov
sub
loop
and
lods
cmpsl
loop
mov
scas
mov
add
dec
lods
jb
and
call
jp
bound
fs
mov
popa
mov
sub
sahf
push
push
sub
pop
xor
cld
jle
push
or
sbb
xlat
cmpsb
adc
jmp
adc
mov
pop
fsubr
xchg
xor
or
pop
data16
or
dec
loop
mov
sbbb
cwtl
xor
sub
xor
or
adc
and
and
jnp
inc
mov
adc
adc
pop
xlat
rorb
bound
add
push
push
leave
and
xchg
in
dec
xor
mov
adc
adc
xchg
cltd
xchg
in
cmc
sti
test
sub
inc
xchg
shl
xorl
out
xchg
mov
lds
adc
mov
xor
jb
mov
pop
ja
jns
jmp
gs
test
popf
cmp
lcall
mov
mov
test
and
xchg
pop
and
push
scas
dec
or
outsb
sbbl
inc
dec
fildl
data16
insl
mov
push
hlt
xchg
insb
rol
mov
cmpsl
int
pop
daa
test
add
dec
add
enter
js
daa
mov
in
cmp
into
div
add
daa
sub
jmp
ret
popa
test
ds
outsb
sbb
sub
cmpsb
test
and
or
mov
inc
dec
dec
sbb
pop
aad
std
sbb
xlat
pop
mov
fstps
les
clc
or
xchg
mov
xor
xchg
popa
imul
jo
into
mov
into
ds
lret
xor
sbb
ss
mov
insb
sub
or
sarl
leave
repz
int3
cwtl
insb
loop
dec
hlt
out
xchg
sbb
cmpsb
mov
sub
or
push
vandnpd
icebp
push
std
mov
cmp
mov
sarl
inc
int3
xor
adc
mov
movsb
repnz
push
xor
pop
aam
sub
lods
jl
sti
fs
xor
ss
xor
mov
test
push
mov
lret
or
sub
jbe
rcrb
mov
mov
or
std
aaa
pop
popf
mov
mov
jo
nop
jno
stos
imul
xchg
inc
outsb
mov
sub
inc
push
xor
push
or
insl
xor
iret
sbb
mov
adc
inc
mov
adc
psllq
xchg
lcall
xor
clc
scas
clc
lods
xchg
jle
daa
addr16
mov
inc
inc
mov
inc
mov
push
rolb
push
aaa
jne
add
mov
cmpsb
mov
jmp
stos
cmpsl
aas
mov
out
decl
enter
in
je
cmpsl
adc
jbe
xor
stos
loop
and
addb
sub
cmp
stos
pushf
out
mov
dec
shrl
in
mov
pop
in
scas
test
and
sbb
pop
xchg
repnz
das
repz
cli
sarb
sbb
sahf
mov
imul
xor
inc
or
ret
pop
pop
idivb
adc
mov
jge
and
mov
test
inc
add
inc
mov
mov
cmpsl
mov
pop
adc
mov
scas
in
jne
jo
pop
cmpsl
gs
aam
xor
out
jecxz
mov
lret
jp
adc
sub
or
push
lods
pop
mov
inc
shl
xor
add
int3
xor
rcr
or
and
pop
imul
inc
xor
aaa
sub
pushf
outsl
rcrb
test
std
scas
add
and
adc
es
arpl
insl
fmull
jnp
sahf
lcall
jmp
ljmp
fiaddl
cwtl
insb
movsb
orb
mov
in
mov
dec
lahf
mov
cltd
fimull
xchg
aaa
fwait
test
call
xchg
mov
lods
xchg
test
stos
adc
inc
decb
std
ror
inc
mov
cs
pop
and
lea
cmp
clc
stc
mov
adc
sub
in
and
js
std
and
jle
out
cmpsl
in
imul
jo
jae
repz
dec
cmp
mov
lret
hlt
and
nop
test
cmpb
outsl
sub
and
mov
sub
and
call
add
jbe
xor
enter
add
or
cmp
xor
leave
sbb
sahf
lcall
pop
and
cwtl
pop
arpl
daa
call
repnz
inc
xchg
dec
xchg
stos
addr16
pop
mov
leave
sbb
sbb
or
pop
jno
sbb
mov
rcll
adc
sti
xchg
inc
adc
dec
cmp
sbb
inc
and
testl
aad
pop
aas
jg
dec
or
cwtl
cs
mov
hlt
aaa
bound
sub
aad
pop
inc
outsl
aas
outsb
int3
add
mov
or
cmpsl
fidivl
subb
or
test
rcll
sub
das
mov
mov
add
cmc
cmp
mov
mov
outsb
cld
stc
mov
adc
addb
mov
adc
mov
sahf
lcall
int3
fstpl
xor
cltd
ds
stos
mov
sub
mov
movzbl
fcmove
mov
xor
push
repz
test
pop
pop
inc
adc
xorl
ret
mov
repz
adcb
jg
mov
sbb
popa
les
cmc
testl
xor
dec
xor
mov
lret
scas
or
cmpsb
mov
and
cmc
enter
add
jb
cmp
ds
add
jne
mov
popa
mov
push
insl
loop
data16
sub
shlb
leave
inc
aaa
les
adc
jb
mov
enter
bound
js
or
clc
loop
outsl
mov
lcall
mov
std
ret
mov
xchg
xor
inc
stos
push
mov
pusha
dec
xchg
in
ss
inc
lods
insb
push
push
inc
pop
lds
sub
pop
push
movzbl
inc
inc
jge
and
into
adc
test
aad
sub
aaa
ss
sbb
push
int3
add
fisttpl
xor
mov
mov
loop
loope
xor
pop
inc
stos
adc
jge
jb
xchg
mov
dec
ret
test
sub
xlat
cli
sarl
sub
jo
cmp
inc
xchg
and
popa
mov
lods
outsb
push
adcb
stos
inc
cwtl
sub
add
outsb
xor
mov
and
loopne
push
pop
pop
nop
outsl
jno
les
jle
loop
push
lock
or
in
js
jge
mov
jle
movsb
or
rorb
inc
js,pt
out
pushf
dec
out
xor
jp
test
and
inc
pop
adc
sub
repz
das
pop
jecxz
je
sti
mov
cltd
mov
jnp
and
loopne
popf
sub
dec
test
pop
inc
out
cmpsb
cmp
xchg
ja
jl
pop
or
mov
lock
add
jp
cltd
cmpsb
jg
rcl
pop
push
push
outsb
arpl
lods
xor
jmp
sahf
or
push
test
pop
stc
pop
outsl
mov
and
dec
lds
jbe
and
push
ret
adc
push
test
adc
cmp
in
gs
incb
cmc
mov
sub
mov
push
lock
ja
xor
pop
inc
popa
lret
daa
adc
xchg
cmc
push
mov
pop
jb
in
adc
jb
call
add
jno
xchg
dec
pop
mov
cmp
cmpsb
test
ljmp
pop
pop
int3
das
data16
mov
call
stos
loope
mov
adc
xor
iret
mov
sbb
push
test
mov
dec
sbb
and
fldcw
cs
jl
ret
scas
and
mov
sbbl
sub
shlb
loopne
adc
cltd
mov
jne
jmp
xchg
dec
in
jbe
dec
sbbb
adc
sub
je
imul
pushf
cld
inc
pop
fs
push
push
cmp
mov
jno
pop
or
fimuls
clc
aam
mov
cs
rorl
lea
push
aaa
mov
adc
adc
inc
aaa
cwtl
test
insb
pop
cmpsl
lret
pop
and
sbb
pop
adc
sub
test
push
xchg
fnsave
or
mov
mov
push
popa
je
xor
insl
xchg
xchg
shl
sbb
loop
fcomip
pop
inc
mov
jb
dec
sbb
call
stos
mov
ds
iret
or
fiadds
cwtl
aas
mov
push
fldl
push
xchg
sarb
inc
shlb
cmc
sti
xchg
add
shl
or
jne
cli
mov
clc
nop
loop
imul
push
sbb
cmpsl
sbb
jbe
jge
cmp
outsl
jae
sub
insl
dec
icebp
xlat
loope
push
pop
inc
sahf
jle
fidivl
iret
int3
jnp
xchg
mov
xchg
cmc
cmpsb
xchg
stos
mov
xchg
les
or
out
ja
inc
jge
pop
jnp
sub
clc
repz
add
arpl
add
cmpl
or
int
in
std
xchg
daa
cmp
pop
outsb
mov
loope
test
mov
test
xchg
pop
push
out
inc
leave
jne
xor
and
sarl
out
pop
sub
lods
xchg
repz
ret
mov
mov
jno
lahf
add
les
outsl
mov
cmpsl
mov
addr16
daa
sbb
popa
mov
or
sbb
in
xor
lret
mov
icebp
dec
popf
jb
addr16
mov
repz
cli
dec
sub
xchg
add
mov
lret
push
imul
cld
lea
out
jno
dec
add
inc
add
dec
cli
jno
movsb
add
mov
out
outsl
add
fwait
jno
loop
mov
insb
imul
cmp
and
xor
ret
jo
jb
jg
bound
push
ja
sti
subb
adc
inc
and
add
popf
dec
mov
pop
into
push
leave
sbb
pop
xorb
push
mov
je
es
xchg
pusha
push
insl
pop
and
stos
jg
int
rcll
mov
cltd
mov
les
add
pop
icebp
mov
test
mov
xchg
pop
pop
test
test
xor
in
gs
int3
repz
scas
adcb
jno
or
rorl
ss
addr16
loopne
pusha
sbb
cmc
sarb
cld
fs
mov
adc
ret
pop
test
add
jle
cmpsb
hlt
inc
daa
pop
lahf
push
sahf
adcl
or
jl
popa
dec
inc
push
mov
xchg
pushf
cltd
add
ss
pop
xchg
jmp
and
mov
dec
sbb
inc
jl
movsb
outsl
mov
mov
inc
jg
cld
and
sbbl
and
movsl
push
ret
stos
into
xchg
sti
jp
mov
fdiv
in
popa
stc
lahf
add
sub
jle
or
aaa
loopne
arpl
cmpsb
sti
dec
loop
jp
or
push
repz
clc
mov
pop
pop
sub
icebp
sbb
fsts
ret
pop
or
clc
int3
sbb
mov
in
cmp
or
test
mov
jno
cs
or
les
xor
adc
push
ja
test
adc
test
fildl
cmc
int3
int3
add
lret
icebp
imul
or
movsl
dec
enter
lcall
mov
lret
fs
scas
es
test
mov
push
inc
lahf
cmpsl
loop
and
push
mov
dec
negl
add
adc
sbb
pop
dec
mov
lods
jge
push
pop
mov
mov
sub
mov
jle
imul
jae
dec
sarb
mov
dec
pop
cmp
mov
mov
insb
mov
gs
fbld
mov
mov
jmp
sub
pusha
subl
push
repz
test
xchg
mov
les
cmpsb
or
mov
xchg
jecxz
mov
cmp
enter
aam
xor
loopne
les
mov
lahf
jecxz
pop
mov
or
pop
aad
scas
push
lret
mov
fdivrs
xor
sbb
pop
fimuls
rolb
xlat
nop
shll
dec
and
insl
jl
nop
lods
adc
lcall
inc
in
call
push
adcl
mov
arpl
jno
movsl
mov
addl
or
dec
rorb
dec
pop
mov
inc
inc
sbb
bound
adc
adc
mov
and
sbb
mov
and
imul
push
ror
lret
mov
push
xchg
push
stos
sbbl
adc
hlt
leave
adc
gs
pop
cmp
push
sbb
sti
sub
cmp
lods
pop
repnz
push
lods
mov
add
cmc
js
push
xor
pop
push
mov
ja
nop
jp
fsubs
mov
das
add
mov
ffreep
mov
aas
divl
mov
aaa
inc
sub
cmp
jno
cmpb
mov
repz
jp
sbb
cmp
in
int
out
cmp
push
ss
sbb
inc
inc
out
jns
push
bound
les
push
rorl
cmp
loop
inc
iret
pop
mov
jns
lods
rcr
dec
push
cmp
je
loop
add
arpl
push
push
aad
test
out
arpl
inc
lret
push
xor
fisubs
xchg
idivb
iret
test
ja
out
lods
sub
ret
push
dec
sub
repz
icebp
or
push
mov
fnsave
mov
bnd
xor
insl
fnstcw
mov
sub
jecxz
mov
adc
sub
push
ds
es
mov
mov
mov
test
xor
mov
out
inc
and
hlt
mov
cmc
push
inc
add
lods
xchg
sub
and
popf
pusha
sbb
sub
cltd
dec
pop
es
or
mov
xchg
rcrb
and
scas
and
xor
sub
jae
sti
jb
xlat
mov
roll
xchg
sub
mov
push
scas
xor
popf
ret
frstor
js
les
std
in
fsubl
movl
and
out
push
mov
mov
sbb
jnp
push
sbb
pop
js
mov
movsl
sbb
mov
addr16
subb
push
adc
xchg
add
mov
cmp
cmpb
aas
test
push
and
rcrb
mov
shrl
fstl
sbb
pop
stos
sbb
fstpl
ja
rcr
inc
out
jb
les
sub
cmpsb
jecxz
gs
dec
mov
and
lods
cmpsl
iret
cmp
repz
sub
mov
and
push
mov
test
jnp
mov
mov
push
insb
or
arpl
jbe
into
sbb
mov
lea
fildll
cmp
cwtl
push
mov
xor
push
aaa
jne
into
pusha
xchg
jmp
sub
push
adc
aam
mov
nop
xor
into
sub
leave
in
xorb
mov
enter
mov
aas
mov
push
cmp
push
sub
repnz
sub
xor
sub
add
popa
nop
pop
in
mov
rcll
and
xorl
std
xor
inc
andl
push
jne
mov
jecxz
aas
ja
xor
or
mov
shlb
out
inc
cli
cmp
ss
hlt
mov
xchg
xchg
out
or
lods
andl
or
gs
and
mov
inc
repz
push
pop
test
in
fcoms
dec
pushf
and
mov
ficomps
mov
jae
jno
jne
hlt
push
jg
push
pop
inc
push
aad
mov
jg
and
stos
push
jb
shl
out
mov
lods
leave
cmc
sub
xchg
sbb
mov
cmpsb
data16
jne
ret
pop
add
enter
test
ficoms
icebp
test
cmp
in
lods
clc
mov
xor
into
inc
add
push
jno
fidivs
sub
lock
sbbl
push
clc
into
pop
mov
or
mov
dec
stos
or
scas
lods
mov
push
aas
test
and
jge
sbb
xchg
std
cwtl
xchg
shlb
mov
xchg
call
or
pop
pop
cmpsl
or
xchg
dec
popa
aam
or
push
test
js
push
mov
mov
pushl
js
ss
test
add
bound
cmc
movb
test
inc
sub
leave
xor
pop
ficoms
testl
inc
je
xchg
jmp
insl
lret
push
aad
mov
xchg
xor
mov
mov
jecxz
pop
or
test
mov
sub
int3
daa
jns
push
and
push
out
out
jns
cmp
es
in
aas
lea
dec
pcmpgtw
xchg
jge
cltd
ficoms
jle
jg
jne
cmp
cs
int
frstor
stc
xor
mov
jno
popa
jb
lods
or
aam
mov
xchg
push
leave
push
rorb
enter
bound
clc
add
stos
jp
mov
xchg
adc
mov
loope
test
shld
subl
mov
dec
add
sub
push
xor
mov
fs
dec
mov
idiv
nop
sub
adc
xchg
xchg
stc
inc
out
mov
pop
subb
sbb
ljmp
mov
pop
arpl
mov
inc
lds
mov
call
adc
xchg
xchg
or
pushf
jnp
scas
call
aad
rcl
push
test
xchg
cmp
cmp
incl
in
hlt
xchg
push
cmp
cmp
shrl
clc
adc
xchg
adc
pop
xor
insb
sbb
mov
dec
push
dec
aad
xor
mov
scas
adc
adc
cmp
fmuls
mov
pop
and
jge
xlat
int3
loope
or
fidivrl
cmpl
movsb
lcall
repnz
or
movsb
pop
jne
or
mov
fistl
push
les
insl
add
testl
and
movsl
sub
inc
ljmp
mov
sbb
nop
or
movb
addr16
push
nop
or
mov
in
ds
inc
leave
aas
jae
or
enter
aas
ss
xor
hlt
lahf
xchg
jmp
lock
cltd
imul
cmpsl
jne
xor
sbb
sbb
mov
xchg
jg
pop
lret
sbb
mov
mov
and
or
jmp
or
out
test
out
jb
ja
sub
movsb
nop
sub
mov
mov
cltd
insl
and
test
lods
test
sbb
xor
mov
cld
adc
mov
mov
shll
mov
ret
pop
loopne
outsl
xor
dec
xchg
push
dec
int3
into
sbb
test
push
rorb
push
xchg
leave
lcall
lods
lods
lds
xor
fidivl
pop
xchg
lcall
push
sub
sub
addr16
jae
out
and
cmc
fs
scas
jmp
and
loop
popf
sbb
loop
nop
and
mov
push
mov
gs
mov
dec
pushf
jge
arpl
loope
jae
negb
xchg
sub
mov
xchg
in
xchg
lds
rol
and
imul
inc
mov
mov
pop
xor
jae
stos
or
ss
jns
push
jae
mov
icebp
inc
sbb
into
mov
lahf
sub
cmp
dec
scas
xlat
jae
outsb
insb
pop
xor
cwtl
cmp
pop
adc
pop
jns
test
adc
lcall
in
dec
gs
aad
cmp
cmpb
mov
mov
popa
lock
arpl
lahf
sub
xor
xchg
mov
jle
lods
rorb
test
mov
andl
jno
lea
cli
pop
jnp
mov
push
jmp
mov
or
fs
sahf
jecxz
mov
jbe
xchg
int
fcmovbe
into
insl
jbe
jb
mov
or
rclb
xor
mov
or
jbe
jp
mov
mov
mov
inc
mov
sub
dec
fnstcw
push
lret
sub
loopne
shrl
loope
jge
xchg
jp
dec
nop
jne
sub
cmp
pop
add
inc
jp
es
imul
andb
mov
movsl
mov
pop
std
js
lods
nop
cmpsl
shrb
mov
pop
out
inc
xchg
fiadds
lods
inc
into
jo
xor
sub
sbbl
lds
inc
movsl
xchg
leave
jo
stos
jns
sub
subl
cmpsl
push
mov
into
in
jge
sub
dec
mov
cmp
inc
mov
int3
pusha
out
xchg
xor
fdivrs
stc
dec
cmpsl
pop
adc
pop
nop
outsb
das
ret
inc
sub
js
xchg
mov
mov
es
aaa
mov
movsl
lock
mov
cli
and
xor
pop
out
push
sub
dec
and
pcmpeqd
enter
scas
mov
mov
popf
adc
pop
mov
adc
gs
pop
inc
jne
or
cmp
jo
push
or
or
inc
push
adc
loope
push
and
mov
add
xchg
insb
test
mov
lret
sbbl
dec
mov
inc
dec
scas
jg
push
mov
mov
dec
or
jecxz
cmp
add
cld
sbb
adc
ret
int
sahf
adcb
mov
shrb
jae
or
mov
mov
inc
push
movsl
mov
xor
push
sarl
lock
cmp
call
sbb
push
into
lret
mov
mov
stos
fcmovnu
movsb
xchg
xlat
aaa
das
ficoms
loopne
ds
pop
scas
pop
hlt
mov
loope
jns
in
stos
mov
adc
cmp
inc
scas
iretw
aaa
or
add
incb
dec
pop
sbb
xchg
mov
repnz
inc
popf
das
sub
stos
xor
in
mov
cmp
aad
xchg
fists
loope
mov
xchg
dec
insb
cmp
scas
rcrb
add
mov
cmp
dec
outsb
aam
mov
sbb
inc
adcl
push
mov
cld
ljmp
cmc
mov
stc
bound
test
hlt
inc
sub
les
daa
jmp
lods
outsl
ja
stos
inc
int
sub
dec
stos
xor
mov
xor
inc
test
mov
mov
xor
imul
xchg
push
ja
int3
lock
lret
cli
add
mov
push
jp
aad
mov
das
testl
mov
stc
mov
xor
ljmp
inc
mov
sbb
mov
mov
leave
rorb
iret
arpl
add
lret
cmpsl
out
decl
push
adc
repnz
sub
dec
out
je
aad
incb
jl
mov
fwait
mov
sub
xchg
fadds
mov
aaa
jle
std
xor
xor
roll
dec
jno
pop
arpl
dec
pop
sub
stos
sahf
push
lcall
movsb
stc
mov
adcb
xor
adc
mov
push
sub
inc
jae
add
mov
std
jo
inc
fcoml
cmp
pop
jl
sub
adc
mov
shl
dec
jno
out
mov
inc
inc
add
xor
repz
data16
jg
mov
gs
mov
and
icebp
repz
test
mov
cs
loopne
cmp
jmp
insl
mov
and
add
repnz
pop
mov
jns
fcoml
inc
insl
dec
xchg
and
mov
xlat
mov
vpshufhw
int
ret
xchg
lods
fisttps
stos
insb
cmpsb
clc
hlt
shrl
sti
mov
es
xchg
jle
pushf
mov
sbb
andb
or
inc
adc
out
lds
mov
hlt
hlt
std
fnstenv
shlb
lock
mov
outsl
aad
jo
sbb
push
cmp
ljmp
xor
imul
jmp
push
jp
pushf
cwtl
fadds
pop
test
xchg
jo
mov
mov
jnp
aaa
addr16
pop
das
out
inc
into
adc
fdivr
jmp
fs
aaa
in
test
test
imul
rorl
xchg
test
test
enter
outsl
dec
pop
jmp
xlat
mov
xor
xlat
fstp
sub
push
loop
std
pop
xor
sub
mov
or
cmp
dec
jbe
lock
adc
je
ljmp
mov
pop
insb
mov
stc
inc
ss
xor
sub
xchg
ret
add
notl
fidivrs
lcall
fldcw
or
cmp
fisubrs
fidivs
and
mov
test
div
push
inc
out
and
push
mov
cmp
lods
in
jnp
movsl
daa
mov
in
mov
fnstcw
test
sub
cmpsl
into
mov
cltd
loope
push
stos
loop
xchg
or
mov
add
add
test
insl
pushf
jne
adc
fdivrs
or
orl
addr16
adc
dec
sbb
cwtl
adc
jg
jns
push
sti
push
cmc
icebp
mov
aaa
std
fcomps
shrl
repnz
jae
insl
dec
cs
pop
push
lahf
pop
mov
add
cmp
repz
push
mov
in
rorl
cli
pop
pop
lods
inc
pusha
test
movsb
jne
adc
scas
fcomps
dec
jb
dec
pop
and
jle
outsb
loop
into
insb
lods
mov
imul
test
or
in
and
xor
jno
adc
ja
push
scas
loopne
sub
lret
sub
fs
and
cmpb
scas
jns
or
mov
arpl
xchg
incl
pop
dec
inc
push
orb
mov
pop
and
cmp
sbb
arpl
lods
je
xor
lret
mov
pop
pop
addr16
sti
lret
insl
je
cmpsl
mov
xchg
scas
pop
xchg
scas
xchg
mov
in
lods
xor
jecxz
sub
das
test
pop
int3
dec
inc
out
cltd
mov
cwtl
xchg
pushf
cmpsl
sahf
push
push
test
cltd
cmp
rorb
mov
in
fisttpll
lret
jle
lods
pop
push
insl
dec
xchg
mov
bnd
xchg
push
test
mov
sub
add
and
out
shlb
jmp
in
arpl
out
ljmp
sbb
xchg
lods
fistl
push
jbe
or
add
xor
and
push
push
cmp
xchg
jae
fprem1
jg
data16
sub
rorl
lcall
xor
xchg
inc
test
pop
lea
or
das
lock
inc
addr16
or
push
sahf
cltd
psrlw
shll
imul
adc
cmc
sbb
mov
pusha
daa
xor
mov
adc
inc
and
jmp
xchg
pop
leave
outsl
icebp
jp
repz
add
adc
push
cmp
add
xchg
lret
fwait
push
popa
xchg
jecxz
shlb
gs
xorb
or
inc
inc
jge
sbb
out
pop
fcmovnu
push
mov
push
imul
out
in
jne
imul
or
dec
shrb
inc
ficoml
adc
jns
jo
pop
mov
outsb
das
sbb
or
and
lret
mov
xor
stos
lret
pop
cmp
xchg
dec
in
ss
lods
sbb
inc
cmp
enter
mov
jmp
sub
js
sub
adc
jno
mov
es
xchg
xchg
add
push
push
test
push
aas
out
out
jnp
mov
int
test
dec
repz
mov
fstpt
gs
sub
ret
out
cmp
lret
insl
leave
jnp
jge
bound
push
add
inc
push
pop
lret
lea
add
movsb
ja
add
dec
or
shlb
loop
loop
iret
jle
test
addr16
lret
sub
ja
aad
int
or
xor
mov
jns
ficomps
adc
fidivrs
dec
in
ljmp
mov
jle
push
add
cld
xor
lcall
fwait
arpl
fmull
aam
test
sbb
and
inc
dec
mov
lods
or
jg
gs
cs
pop
jbe
xor
add
adc
push
aad
xor
aas
xchg
inc
repz
leave
pop
dec
add
dec
sub
shl
and
dec
outsb
push
adc
dec
add
dec
or
pop
fisubrs
loopne
push
outsb
mov
xchg
sbb
imul
aas
popa
inc
push
push
jmp
cli
jmp
or
repnz
sub
push
xor
mov
cmp
cwtl
adc
mov
dec
sub
lcall
adc
icebp
je
cmp
shlb
jno
dec
jp
test
mov
in
mov
mov
insl
dec
iret
and
push
inc
es
mov
adc
jbe
test
pop
mov
xor
adc
cmp
fldcw
xor
cmpsl
sarl
cmp
pop
pop
dec
std
push
jno
and
mulb
jno
pop
scas
cmp
fdivrs
dec
push
icebp
sub
and
cmp
jecxz
sbb
and
xchg
mov
lcall
call
fsubrs
icebp
cmp
lahf
cltd
clc
jge
lret
rcrl
stc
xorb
mov
loopne
lret
sahf
push
clc
mov
and
fcoms
cmp
cs
cmp
adc
sub
jge
adc
sbb
mov
push
cmp
movsl
sti
loope
pop
cli
xchg
cli
mov
cmp
movsl
xchg
jnp
push
nop
ljmp
popf
repnz
inc
dec
push
repnz
xor
jle
fmul
daa
pushf
mov
iret
dec
mov
sub
mov
imul
add
adc
inc
cmp
lea
mov
pusha
xor
out
xor
insb
rcrb
push
iret
icebp
pop
mov
sub
call
test
jp
int
bound
pop
mov
sahf
adc
sbb
ret
vcvttps2dq
mov
jg
mov
filds
mov
or
lods
cmp
movsl
fucom
jnp
cmc
or
aas
xchg
ja
jecxz
pop
adc
mov
mov
fisttpl
adc
aaa
rolb
push
ss
add
test
jae
insb
inc
cmp
push
and
sub
and
xor
pop
pop
in
xor
popf
mov
xor
adc
out
fimull
push
mov
adc
pop
stos
aaa
cmp
out
jns
xchg
mov
add
inc
xor
imul
cmp
jg
addr16
int
aad
push
or
push
rorb
rolb
sub
pop
mov
int3
mov
mov
les
cwtl
dec
jecxz
sub
int
mov
les
das
clc
lds
sbb
pop
adc
sub
loopne
jae
cld
mov
xor
push
add
test
or
add
cs
push
jns
sahf
hlt
xor
pusha
cs
popf
inc
aad
outsb
dec
dec
inc
mov
or
adc
outsl
mov
inc
mov
add
jecxz
shll
inc
push
in
mov
fldenv
in
ror
jo
cmp
inc
add
loop
stos
rcll
sbb
sahf
sub
aam
mov
inc
sbb
out
adc
cmp
fimull
pop
int
dec
mov
cs
add
adc
pop
gs
sbb
or
pushf
sbb
xor
sahf
cmp
fisttpll
sub
test
xor
mov
cs
mov
cli
movsb
not
clc
jecxz
xor
xor
test
movsb
aaa
and
dec
insl
std
test
scas
in
lret
jnp
dec
ficoml
outsb
xchg
pop
in
popf
sbb
jo
xchg
daa
xchg
mov
fisttps
xor
sti
xor
push
lds
daa
jb
loopne
jne
xchg
scas
add
xchg
push
add
xchg
xor
inc
sub
sub
stc
mov
lahf
dec
aam
mov
cwtl
and
imul
imul
push
mov
sbbb
jmp
or
xor
mov
add
test
mov
xchg
divb
sti
pop
lret
je
push
out
addb
mov
cmp
shll
add
push
pop
mov
push
test
bound
xchg
es
fwait
mov
pop
or
pop
mov
divb
cmpsb
push
test
push
mov
cmp
jno
add
jmp
jge
and
mov
and
jl
sar
sbb
push
mov
ljmp
jb
lods
mov
daa
xchg
mov
hlt
dec
mov
and
out
mov
jb
aas
dec
jp
sbb
or
inc
ljmp
inc
jmp
lea
cmp
add
jnp
push
nop
incl
push
adc
push
popa
dec
jno
push
mov
into
gs
mov
mov
dec
or
mov
cmp
adc
pop
scas
mov
mov
push
rcll
or
insl
cltd
in
push
fisubrl
cmp
ds
cmp
fimuls
mov
movl
pop
aad
test
add
sub
pop
mov
or
mov
iret
pushf
int
addr16
js
pop
inc
push
xchg
mov
xchg
imul
sub
fsubp
aad
sub
jl
mov
mov
dec
inc
pop
daa
pop
mov
enter
fnstsw
xor
mov
fsubrl
bound
jns
fcmovb
pmaxsw
imul
mov
push
decb
into
xchg
sbb
cmpsb
fstpt
pop
jae
push
pusha
mov
xchg
test
jb
inc
orb
ss
push
dec
or
mov
cmp
hlt
add
adc
pusha
pushf
scas
dec
mov
add
dec
mov
aam
cmp
mov
insb
push
call
ds
hlt
xorl
adc
or
mov
loop
adc
fdivr
mov
sub
frstor
pop
push
cmp
fwait
mov
test
rorb
cmp
jmp
and
mov
shll
mov
call
movsb
lret
cmp
cmpsl
stos
mov
imul
jp
mov
jl
repz
cmp
xchg
mov
cli
jecxz
sahf
cmp
mov
icebp
dec
sbb
inc
rorb
mov
test
in
sbb
push
bound
shll
xor
leave
scas
arpl
and
rcrb
pop
sub
adc
and
ds
xor
xchg
sub
pop
push
insl
push
fstps
jae
mov
xorl
add
add
adc
loope
scas
repnz
dec
or
aad
mov
sbb
dec
or
jne
ss
imul
xor
addr16
push
mov
cmpsb
sub
dec
push
pop
rolb
orl
out
aam
push
adc
popf
mov
add
mov
shl
decl
jbe
cltd
cmp
fistpll
xor
mov
sub
roll
ret
testl
in
lret
pop
aas
insl
jl
lcall
int3
and
fcomps
cmp
or
scas
stos
push
dec
std
xchg
lcall
add
popf
or
leave
cmp
push
rcrb
inc
jno
stos
push
pop
push
iret
out
xor
cltd
scas
cltd
lcall
lcall
stos
cmpsl
jp
sub
and
rcll
push
cmp
push
subl
inc
stos
out
mov
xchg
cmp
and
lods
and
lds
gs
sbb
xchg
cs
dec
jmp
xchg
pop
sub
iret
call
jmp
inc
lret
int
jmp
ja
mov
inc
stos
or
adc
lods
stc
push
pop
cs
jb
data16
dec
xlat
inc
and
adcl
mov
add
call
shll
and
test
or
xor
adc
jl
xchg
out
xchg
in
pop
imul
mov
inc
sub
cmp
test
jo
jge
cmp
dec
xchg
cmc
in
adc
sahf
jne
add
sub
cs
in
lods
fwait
inc
in
cmp
movsb
outsb
sti
out
sub
sarb
loop
push
das
test
adc
js
adc
xchg
mov
loopne
push
pop
pusha
inc
test
sub
push
sub
lock
fisubl
mov
lret
and
push
xchg
in
pop
lods
sti
out
sbb
pop
in
pop
loopne
mov
mov
adc
jmp
add
jne
push
insl
mov
jge
xor
scas
lea
outsb
push
cld
mov
push
sbb
stc
out
inc
mov
and
push
mov
shrl
push
ja
adc
loop
rcl
jnp
test
mov
sbb
shrb
xchg
and
addr16
les
sbb
out
gs
add
mov
mov
popa
or
lahf
push
insb
ds
lret
inc
inc
mov
xchg
insl
lret
sub
out
cwtl
outsl
sar
push
out
pop
cmpsl
sub
testb
dec
or
fnsave
pop
dec
fstl
out
pop
sub
popa
pushf
int
adc
aad
inc
in
cmpsb
and
aad
adc
fwait
lods
das
dec
ds
cmp
adc
pop
or
enter
mov
fdivrl
movsb
add
adc
xchg
mov
xor
mov
pop
test
scas
mov
jp
dec
negl
push
ret
mov
jecxz
in
mov
push
orl
imul
andb
lret
cmp
push
aam
in
sub
orl
mov
int
jb
jne
mov
jge
fsubs
mov
dec
lret
sahf
or
sahf
lock
jp
icebp
dec
stos
mov
insb
dec
push
addl
xor
add
shll
iret
jb
dec
add
mov
hlt
sbbl
push
rcr
dec
dec
jb
adc
ret
xlat
inc
fwait
repnz
aas
lret
or
mov
xchg
or
push
dec
jl
sbb
or
or
add
add
or
or
imul
aas
rorl
in
mov
push
loope
in
cli
sarl
stos
je
push
sub
jecxz
adc
pop
xchg
add
lods
pop
filds
mov
and
subb
add
inc
movsb
ja
out
xchg
mov
in
subl
mov
clc
adc
xchg
jle
adc
enter
xchg
fs
pop
clc
clc
push
jecxz
pusha
aaa
push
ficomps
xchg
inc
mov
mov
add
fsubrs
dec
imul
es
or
popa
sub
sbb
loopne
gs
push
push
pop
insb
jmp
je
int
dec
mov
sbb
gs
cmp
add
stos
jne
and
scas
jg
pusha
insl
jg
xor
pop
rcll
lea
cld
orb
push
into
jns
mov
enter
vmwrite
mov
xchg
cltd
add
lret
int
into
test
fldt
xor
jl
je
popf
inc
mov
xchg
test
nop
xchg
insl
test
pop
sub
jmp
cmp
test
mov
push
xor
dec
mov
js
ja
movsb
adc
cmc
inc
inc
jns
imul
bound
dec
mov
lods
sub
test
pop
pop
mov
into
jo
xor
or
xchg
subl
sahf
inc
or
insb
dec
dec
fcomps
dec
pop
clc
mov
in
addr16
rolb
daa
pop
sub
sbb
adc
rcrb
fbstp
or
mov
push
pop
jno
rcl
setg
fists
xchg
pop
sub
movsb
test
in
das
mov
movb
int3
paddq
fs
cmc
fldenv
push
jb
inc
arpl
mov
aaa
mov
mulb
jb
lods
call
add
push
pop
jecxz
mov
add
shlb
jl
icebp
push
subl
and
xor
popa
call
add
add
fadd
push
imul
push
orl
scas
lcall
add
mov
add
xchg
movsl
pop
adc
cmp
pop
movsl
sub
mov
lahf
lods
cmpsl
jge
or
lds
scas
fcomp
xor
add
add
push
add
nop
push
add
mov
xchg
adc
push
fdivr
inc
jmp
and
xchg
jns
lea
mov
inc
jno
rclw
push
jo
jp
add
mov
test
hlt
add
xor
outsl
pop
xor
scas
or
mov
daa
jecxz
repnz
sub
push
repz
ds
stc
sbb
mov
test
dec
push
xchg
mov
cld
mov
mov
mov
jg
cltd
lock
scas
sub
fwait
or
push
aas
es
xchg
inc
jmp
mov
adc
cmp
repz
or
push
dec
repz
pop
test
ret
xchg
cld
cs
sub
inc
pop
insl
out
shl
adc
xchg
mov
mov
sub
out
test
mov
push
mov
pop
shl
cmp
rolb
pop
pop
int
outsl
lcall
pop
sti
cwtl
aam
push
ret
out
jb
iret
das
jl
mov
shl
xor
jg
aam
movsl
add
or
mov
xchg
add
cld
cmp
lea
push
cltd
pop
ret
arpl
dec
mov
jmp
cltd
inc
jle
dec
xchg
adc
cmc
sbb
sbb
pusha
and
movsl
dec
mul
roll
daa
jmp
scas
sub
fcomps
sar
and
adc
mov
mov
int3
inc
in
dec
cltd
xchg
or
dec
sub
imul
jg
fstpl
adc
lods
mov
fdivr
mov
add
inc
negl
push
pop
sub
pop
inc
jmp
loope
push
pop
add
arpl
adc
addr16
jne
mov
subb
cmp
inc
mov
cld
dec
mov
mov
lret
xchg
nop
rclb
pop
sahf
idivl
jge
shlb
xor
mov
xor
mov
sub
cmp
mov
push
push
or
lret
mov
and
shlb
lds
push
shlb
add
inc
push
adc
bound
and
add
or
loopne
js
push
and
mov
add
xchg
movsb
repnz
mov
push
scas
fwait
ret
inc
jle
mov
pop
jnp
pop
subl
push
jns
mov
push
sub
les
xor
ljmp
pop
cmp
push
xor
mov
cld
and
outsb
mov
mov
mov
data16
adc
adc
stc
cli
or
aad
gs
mov
nop
ja
dec
or
push
mov
jo
sarb
sbb
scas
inc
lahf
leave
sub
inc
cmp
add
xchg
cwtl
shr
xor
cltd
das
cmp
and
mov
inc
or
cltd
xchg
rcl
lods
mov
pop
out
lret
in
xchg
cmp
pop
lret
enter
movsb
jb
inc
jmp
mov
dec
stc
push
sbb
mov
repz
into
sbb
xchg
test
sbb
lret
xchg
cwtl
mov
sbb
sub
pop
xchg
xchg
mov
mov
les
xchg
fidivl
dec
cli
es
mov
sub
dec
jecxz
outsl
into
scas
xchg
or
jno
movsl
enter
cld
push
lcall
sarl
lret
push
fwait
sub
or
jg
xor
cmpb
jp
mov
fisubl
mov
adc
mov
mov
popa
dec
cld
ljmp
lret
push
or
jno
add
adc
or
mov
xchg
je
cmp
bswap
xchg
lahf
push
ret
dec
dec
out
add
enter
cmpl
fldenv
and
pop
or
movsb
xor
dec
jnp
pusha
xchg
ret
hlt
sti
xchg
movsb
cmp
mov
xlat
cmpsb
aam
mov
lods
pop
mov
lods
lds
mov
scas
int
mov
inc
pop
lods
jne
mov
push
filds
xorl
xor
dec
movsl
pop
std
rolb
mov
aad
pop
inc
cmp
cld
aad
inc
enter
sub
pop
xor
pop
js
int
repnz
sub
jecxz
ds
test
cmc
pop
pop
addl
icebp
adc
add
daa
or
adc
sbb
add
mov
int3
push
cmp
call
sub
insb
sub
ljmp
jecxz
dec
out
dec
and
cmp
or
xor
push
ljmp
jns
shll
rorb
inc
out
jbe
fbld
into
cmp
inc
sub
fdiv
inc
lods
out
int3
int
add
sub
inc
lret
stos
cmp
mov
popa
xchg
pushf
pop
ret
lret
push
fcomi
push
add
cli
xchg
ret
popa
or
repnz
fisubs
mov
mov
cmp
stc
sti
xchg
mov
xlat
pop
pop
ret
mov
inc
repz
ja
cmp
popa
leave
cmpsl
xor
push
cmpsb
pop
mov
aaa
push
aam
xchg
int
xor
push
add
js
pop
mov
jg
rorl
mov
inc
icebp
sbb
push
push
pop
fwait
jl
mov
and
mov
xor
loopne
push
and
mov
mov
or
add
adc
mov
test
sbb
decl
popa
mov
jnp
in
in
adc
mov
ljmp
je
xlat
inc
dec
push
out
push
cltd
ja
sti
sbb
lea
insb
pushf
jmp
xor
fcoms
push
scas
insl
adc
adc
nop
dec
or
xchg
maxps
int3
cmp
jle
push
jns
inc
lods
cltd
xchg
inc
mov
sub
out
add
cmp
lcall
fildl
adc
nop
xchg
push
or
ret
jnp
pusha
jbe
add
mov
mov
daa
jg
mov
xor
pop
int
xor
xbegin
push
mov
into
or
es
aam
pop
testb
and
xchg
addr16
push
loope
lock
mov
jae
add
loopne
test
cwtl
mov
mov
subb
xlat
adc
push
mov
jle
pusha
imul
ds
in
pop
and
cmp
xor
xchg
xchg
outsb
pop
cmp
mov
test
sub
daa
adc
mov
in
inc
out
lods
push
in
das
imull
mov
sti
std
scas
out
iret
imul
sub
fucomi
mov
and
or
add
xchg
cmp
xchg
or
pop
xor
inc
jno
xor
and
pop
mov
sub
mov
push
xor
rorl
ret
add
into
mov
pop
mov
lret
movsb
sbb
lock
sub
xchg
and
data16
add
push
cs
sub
scas
mov
pushf
inc
cmp
icebp
pusha
fwait
aas
xchg
pop
add
in
xchg
push
bound
daa
mov
out
lock
cmc
jnp
enter
std
popa
add
or
loop
sbb
jg
mov
arpl
cmp
pusha
aad
lods
push
aas
inc
sahf
loope
xchg
xchg
adc
push
jb
in
divl
iret
in
add
aad
pop
cltd
cmp
inc
sbb
mov
xor
jecxz
sbb
jns
stos
mov
or
cltd
je
lcall
jne
ficomps
mov
mov
jo
insl
pusha
push
dec
daa
jle
cmpsb
sti
mov
mov
and
cmp
add
xchg
les
fimull
imul
mov
cld
stc
insb
fadd
es
fnsave
outsl
vcvtsi2sdl
cmp
jle
push
mov
mov
or
lods
add
xchg
inc
and
pop
pushf
imul
pop
sbb
outsb
cli
adc
int
subl
and
call
cmp
pop
test
dec
add
push
fdivr
pop
pop
jmp
loopne
dec
pusha
sti
imul
imul
insb
xchg
xor
inc
mov
sub
mov
pop
pop
aaa
push
fnstsw
sahf
popa
cwtl
sahf
and
mov
mov
sbb
ds
mov
jge
push
divb
jg,pt
dec
push
xor
mov
iret
add
sbb
cmp
mov
scas
fiadds
push
out
clc
lea
sbb
in
mov
aas
jno
pop
jg
add
lea
xor
test
pop
out
je
leave
repnz
cmpsl
sub
mov
sub
mov
jmp
lods
mov
in
fnsave
xchg
js
lods
sbb
test
insb
or
pop
push
fldt
xchg
pop
jb
stc
mov
into
cmc
test
or
dec
pop
mov
push
shr
mov
xor
push
pop
pop
ds
xor
adc
loop
push
or
sub
inc
mov
fldt
movsl
inc
icebp
fwait
sub
dec
push
call
pop
in
arpl
dec
test
pop
or
or
cwtl
out
sbb
lock
outsb
dec
fnstenv
and
mov
jp
icebp
mov
push
inc
insb
mov
xchg
dec
cmp
aas
stc
push
jmp
xchg
jmp
rorl
lds
lahf
xchg
enter
lret
sarb
clc
mov
in
or
dec
cmp
and
add
xchg
mov
mov
hlt
push
and
fisubl
test
sbbl
push
dec
jmp
push
mov
out
lock
jmp
xlat
loope
push
lcall
pop
push
mov
sti
mov
mov
pop
cld
mov
sub
stos
scas
lds
xor
jp
adc
das
lret
orb
mov
flds
cmp
pop
outsl
push
mov
arpl
dec
or
leave
jne
lods
mov
or
jmp
mov
push
repz
test
sahf
scas
adc
or
repnz
in
ja
or
or
les
xor
in
movsb
shrb
mov
movsl
movsb
jecxz
js
jle
repnz
nop
mov
mov
mov
jbe
stos
lret
and
ljmp
inc
dec
gs
int
xor
sub
mov
nop
sub
xor
adc
cmp
push
sarb
test
mov
addr16
xchg
loop
pop
fwait
in
adc
arpl
daa
xlat
pop
pop
inc
push
data16
adc
pop
xor
adcl
cwtl
xor
inc
adc
mov
inc
neg
mov
movsb
push
int3
mov
mov
adcb
rolb
sbb
cmp
push
in
mov
dec
fidivl
icebp
inc
pop
mov
stos
mov
jp
nop
jge
lahf
adc
xchg
add
mov
push
aam
mov
sbb
push
pop
mov
cltd
jo
and
movsb
sbb
xchg
call
or
out
push
inc
cld
push
xchg
xor
mov
adc
lods
std
into
js
mov
mov
lahf
cli
idivb
daa
jl
jb
jno
imul
xor
mov
arpl
sbb
outsb
roll
and
xchg
push
fs
lods
fucomp
jmp
pushl
adc
dec
aas
daa
add
inc
xchg
cld
nop
push
jmp
enter
insl
cmp
out
jbe
sahf
pop
sub
arpl
in
out
fsubr
rcrb
nop
sbb
mov
and
insb
cmp
in
sub
sub
jne
cmpsb
xor
pop
push
mov
mov
std
sub
bound
fisubrl
lods
ret
lods
xchg
mov
push
test
xchg
xchg
insb
mov
mov
lret
mov
add
out
test
sub
push
mov
sbb
or
pop
dec
mov
jo
imul
insl
push
pop
push
jne
and
push
in
stc
jecxz
sub
inc
dec
mov
aaa
sbb
int
adcb
cmc
fildll
xor
mov
jno
mov
mov
push
pop
xor
ret
mov
rcl
mov
sahf
gs
add
call
push
xlat
in
mov
hlt
add
mov
sbb
mov
ljmp
xchg
xlat
xor
bound
in
inc
inc
push
mov
xchg
ja
pop
adc
or
xor
lock
lds
sbb
cmp
or
and
aaa
inc
jns
add
popa
addr16
push
pop
cmp
pop
lcall
cmp
jl
cmpsl
push
loope
stos
sub
inc
sbb
daa
or
jne
pop
push
xchg
sbb
add
imul
lret
scas
shll
stos
or
ljmp
scas
sbb
pop
dec
sub
mov
mov
stos
leave
add
mov
cmp
xchg
std
and
dec
add
pop
repz
dec
pop
movsb
push
push
add
fldt
sub
mov
call
add
or
and
inc
cs
push
roll
xchg
mov
lods
or
and
dec
sub
jp
lea
xor
test
shrb
push
push
sub
out
mov
mov
lret
lea
dec
fs
dec
jmp
repz
fisttpll
fsubs
mov
in
pushf
loope
stos
dec
adc
adc
je
xchg
or
pop
mov
sahf
insl
cwtl
mov
jg
xchg
and
ret
mov
and
dec
pop
shll
adc
flds
call
or
sti
add
add
xchg
push
sti
pop
stc
xchg
mov
mov
ret
mov
movb
dec
push
subb
jo
cmp
mov
push
or
and
adc
dec
iret
stc
and
mov
sti
loop
pop
xchg
fcompl
lds
and
dec
pop
insb
mov
push
enter
jmp
inc
out
pushf
push
arpl
jae
les
cwtl
out
adc
cmp
cmp
and
dec
stos
cmp
sbb
int3
mov
das
out
stos
mov
xor
in
in
cs
add
pusha
mov
cmp
loopew
int
daa
out
mov
pusha
cld
loopne
inc
outsl
xchg
xchg
ficomps
mov
xor
js
bound
mov
shll
ds
xlat
mov
mov
xlat
dec
mov
lods
xor
adc
out
stos
mov
pop
sbb
lret
adc
jmp
sbb
or
and
adc
mov
pop
jg
scas
mov
cmp
iret
push
jmp
outsb
pop
mov
cmp
jg
dec
fisubrl
push
pop
mov
mov
in
shlb
stos
dec
lock
add
jns
ret
mov
sbb
mov
nop
push
or
mov
push
push
push
or
inc
mov
mov
aaa
add
push
push
add
stc
fdivrp
or
and
pushf
pop
in
sbb
repz
stc
insl
iret
xor
sbb
std
jecxz
je
imull
bound
shr
push
cmp
test
rcll
xor
test
pop
pusha
ds
scas
mov
ror
notl
mov
mov
fwait
push
dec
inc
pop
idiv
mov
int
dec
pop
inc
test
into
insb
ret
fimull
std
arpl
jge
lcall
sti
mov
push
xchg
and
stc
daa
test
push
cmp
push
sub
fcom
xor
stos
jb
out
xchg
pusha
imul
fldenv
scas
sub
lods
rolb
xchg
imul
push
add
insb
sub
push
or
jnp
dec
pop
int
adcb
and
sub
aas
or
sub
xorb
rorb
repnz
subl
sbb
stos
daa
add
outsb
mov
lea
or
test
call
sti
outsb
loop
daa
js
into
mov
dec
or
push
mov
push
xor
add
mov
shlb
mov
out
inc
pushf
repnz
push
adc
pop
jne
fnsave
rcrb
xchg
sbb
sbb
js
movsb
cmp
pop
es
cmp
stos
cmpsl
imul
dec
jl
and
fcoms
mov
adc
sub
shrb
fldz
lret
inc
cmp
test
lret
loopne
jmp
jecxz
movsl
lcall
push
cwtl
mov
xchg
mov
sbb
push
popa
add
jle
xchg
add
ja
lret
xlat
xchg
mov
mov
jge
add
push
pop
adc
out
jno
mov
lock
sub
cmp
xchg
pushf
clc
in
lret
mul
xchg
fcoml
lahf
cli
loop
pop
cmp
cmpsb
mov
rol
sbb
mov
and
dec
mov
aaa
jb
or
std
mov
add
das
mov
jecxz
or
mov
aaa
cld
pop
push
xchg
pop
mov
fldt
push
sar
or
bound
dec
adc
inc
sub
lcall
test
adc
mov
movsl
pop
xchg
xchg
out
xor
and
mov
insb
sbb
mov
sar
rcrb
adc
stc
repnz
mov
sahf
inc
mov
xchg
mov
cmpsl
orl
stos
push
int3
inc
add
sbb
jle
mov
repz
enter
dec
add
jg
stos
je
mov
aaa
adc
jne
xlat
jns
enter
xor
add
or
fnstcw
mov
gs
fwait
mov
sbbl
push
push
sub
pushf
fisubs
sub
leave
or
fwait
daa
pop
outsl
add
loopne
mov
and
and
sahf
sub
fwait
xchg
in
add
mov
dec
or
push
and
xchg
shll
stc
mov
sub
mov
xchg
stos
jecxz
loope
inc
pop
and
in
test
ss
or
js
lods
andl
xchg
and
pushf
sbb
xchg
xor
mov
arpl
les
xchg
mov
xchg
cmp
pop
xor
sub
push
rclb
mov
adc
pop
ds
in
outsb
cmp
imul
stc
cmpsb
mov
mov
lods
lahf
mov
pop
mov
cmp
jno
cmpsb
xor
popa
and
mov
ds
mov
lea
icebp
les
pop
sub
lret
fstl
cmp
lret
clc
rorb
mov
and
push
lods
cmp
inc
clc
push
lcall
cltd
mov
push
js
out
add
mov
fidivrs
push
insl
loop
stc
dec
imul
cs
pop
and
sub
lret
das
nop
add
jecxz
pushf
push
mov
ret
test
or
lahf
lds
aad
inc
pop
or
dec
into
dec
lods
imulb
jl
sbb
sbb
repnz
mov
fimull
repz
xlat
out
pop
sarb
or
dec
sbb
or
aas
popa
aam
stos
subb
mov
clc
mov
ret
into
cmp
lock
lods
mov
sahf
hlt
stos
stc
sub
loop
aam
adc
test
add
xor
or
xchg
jmp
stos
xchg
adc
outsb
test
dec
xchg
or
xor
cs
jae
xchg
inc
es
mov
jbe
loope
adc
add
mov
inc
jp
pop
test
mov
icebp
jne
mov
add
or
xchg
movsl
xchg
adc
dec
mov
xor
mov
inc
add
dec
mov
shlb
clc
mov
out
jo
subl
loopne
mov
cs
xor
repz
mov
outsb
cld
push
outsb
outsl
cwtl
adc
jg
and
cmp
xor
mov
mov
add
mov
cli
rclb
fldenv
insl
xchg
cmpsl
pcmpgtb
cs
rcrl
push
dec
push
cld
mov
mov
stos
xor
mov
xchg
notb
divl
bound
enter
dec
fidivrl
cltd
ret
sub
mov
int
negb
in
ljmp
jle
jl
cmp
and
cmp
jmp
mov
dec
xor
xchg
fdivrl
dec
fwait
add
out
inc
pop
push
icebp
inc
adc
push
das
ffree
popf
inc
out
loope
push
and
mov
mov
or
roll
aaa
cltd
aaa
jnp
decb
mov
add
rol
xor
fwait
das
es
je
dec
pop
jg
fs
adc
dec
or
push
add
jp
out
stc
sbb
and
out
mov
je
xchg
inc
repnz
or
mov
dec
push
push
xchg
mov
inc
xchg
mov
cli
aas
ret
out
inc
or
jo
andl
in
ret
mov
mov
repnz
inc
dec
push
jmp
test
cmp
pop
cmp
xchg
adc
pop
in
in
ficoml
mov
into
fsubrs
cmp
push
loope
inc
lret
cmp
bound
aam
mov
mov
aad
or
cli
jp
cli
dec
js
xor
cmp
incb
inc
mov
adc
mov
out
lcall
add
dec
mov
rcll
faddl
data16
cmp
or
and
xchg
and
jnp
push
and
jb
bound
lods
arpl
scas
pushf
cld
jae
fistl
xchg
mov
add
mov
fisubrs
push
inc
jb
cmpsb
sahf
outsl
das
fs
shll
mov
lods
leave
push
adc
inc
cwtl
adc
int3
push
insl
idivl
gs
call
sbb
or
adc
dec
movsb
push
aaa
add
iret
add
xchg
pushf
and
bound
loope
imul
xchg
or
sub
pusha
stos
sub
add
and
in
les
in
jb
js
adc
mov
push
hlt
out
dec
add
jg
inc
mov
sub
jbe
xor
stos
vcomiss
jae
pop
mov
pop
subb
repnz
sub
stos
fcomi
out
stos
mov
scas
pop
mov
dec
iret
mov
sbb
icebp
es
sub
pop
cmc
int
out
or
mov
add
and
mov
out
inc
and
push
out
loopne
test
add
sub
adc
push
sub
data16
mov
and
dec
sbbl
mov
xchg
stos
aas
xor
gs
adc
lret
push
fsts
call
scas
mov
sbb
fwait
cmp
neg
lea
push
mov
mov
popf
add
and
lcall
ss
adc
insl
stos
std
pop
adc
mov
dec
out
popf
cmc
push
xor
mov
es
call
lods
clc
mov
imul
cwtl
inc
cwtl
shrb
sti
cwtl
push
jg
nop
jge
aam
repz
sbb
sub
xchg
xor
pop
mov
faddp
pusha
pop
xchg
jnp
and
jbe
loopne
rorl
add
or
or
sbb
aaa
and
lods
xchg
xor
pop
push
aaa
sbb
cld
mov
cmp
pop
add
fs
out
or
push
int
inc
mov
mov
ljmp
xchg
mov
imul
out
cmp
pop
sbb
xchg
fldenv
xor
dec
cs
loop
out
jne
iret
rcll
enter
mov
or
push
insl
sbb
mov
xchg
cmp
jnp
push
popf
dec
jge
push
aam
fimull
jbe
sbb
sub
test
cmpsb
outsb
and
and
sub
pop
dec
dec
mov
push
fs
dec
nop
add
lret
jbe
add
mov
add
in
data16
sub
iret
dec
les
sahf
add
pop
mov
rcrl
mov
sbb
pushf
out
loope
test
xor
mov
aaa
jge
idivl
stos
dec
lret
adc
xchg
je
mov
pop
out
push
push
adc
mov
pop
inc
cmc
lods
lahf
es
int3
pop
mov
das
xor
cmpsb
insb
pop
sub
xchg
aad
adc
inc
jne
repnz
daa
test
aam
inc
addr16
mov
cmp
repz
sub
ds
fmuls
jb
ljmp
mov
xchg
shl
into
loop
ffreep
icebp
add
outsb
jbe
movsb
sti
in
mov
test
negl
test
js
adc
cs
movsl
gs
test
push
aas
inc
pop
push
mov
xor
mov
addr16
push
sub
mov
sbb
jecxz
lea
call
sti
stos
jns
cmp
test
xor
jecxz
mov
cmpsb
add
ja
fptan
insb
icebp
addr16
scas
and
add
sbb
and
dec
mov
mov
dec
call
lahf
inc
and
push
xchg
mov
lahf
dec
cmp
add
fcoml
inc
shrb
add
hlt
mov
and
movhps
loop
or
pusha
adc
fiadds
insl
ja
mov
and
sbbb
dec
adc
mov
inc
xchg
mov
rorl
cltd
xor
mov
pop
aam
dec
inc
loop
cmp
and
in
adc
pop
mov
jp
xchg
sub
loop
sbb
mov
mov
cmp
jb
mov
jecxz
push
push
lods
scas
xchg
mov
sbbb
fisttpl
int
push
dec
adc
test
dec
lret
or
bound
fst
jo
movsl
movsb
pop
arpl
or
mull
sbb
or
movsb
add
fisttpl
gs
cli
add
mov
mov
xchg
test
inc
lds
mov
and
loop
js
fildll
xor
std
sbb
mov
add
push
mov
xchg
mov
jne
sarl
popa
cs
cmp
movsl
inc
push
pop
rol
or
xlat
icebp
jns
scas
xor
js
loopne
cmp
pop
iret
lock
pop
pop
pop
pusha
add
cld
test
mov
cwtl
mov
shll
outsl
andl
fistpll
stc
xchg
cmpsl
jle
or
aaa
mov
mov
inc
stos
jp
outsb
loope
push
data16
or
aam
xlat
cmovbe
pop
xchg
xchg
mov
icebp
pushf
or
mov
mov
mov
sbb
or
popf
push
sub
pusha
js
pop
mov
int
xor
and
jnp
push
lods
repnz
xchg
jo
lds
or
xchg
mov
int
push
inc
add
add
aaa
es
adc
xor
dec
int
cmp
adc
pop
xlat
cmp
call
pusha
mov
imul
out
mov
jae
in
js
lea
xor
adc
sbb
jnp
mov
scas
out
pop
mov
mov
daa
xchg
aaa
inc
es
mov
jb
mov
lock
mov
jne
xchg
sbb
pop
or
jp
repnz
or
pop
lods
inc
add
mov
cltd
inc
push
fcompl
stos
push
dec
fucomip
incb
adc
inc
xor
fwait
or
data16
push
dec
mov
dec
test
lds
sub
cmp
sub
mov
push
leave
ss
sti
mov
cmovp
bound
out
arpl
cli
or
icebp
or
or
bound
lods
icebp
pushf
dec
in
jne
mov
repnz
shlb
cmp
dec
sti
outsb
xchg
xchg
sbb
mov
shll
sub
xchg
sbb
push
bound
popf
loopne
inc
adc
mov
ljmp
mov
cmp
mov
decl
icebp
loopne
jb
paddb
ljmp
mov
cmp
in
sub
lea
lock
mov
es
pop
cmp
push
jg
loopne
inc
inc
cmp
sti
dec
xchg
sbb
pop
jmp
scas
jnp
inc
inc
out
lcall
adc
adc
adc
sbb
shll
daa
cmp
push
jl
or
dec
inc
std
cmp
jp
addr16
mov
loopne
dec
icebp
ds
stos
sub
mov
mov
and
ret
sbb
pop
sbb
lds
add
cmc
shrl
pop
dec
sub
cmp
fimuls
sbb
cmp
inc
mov
fiadds
pop
popf
lea
fisubrl
test
stos
shl
jecxz
add
in
inc
mov
popa
jo
pop
cmp
stos
cmc
inc
cmp
mov
mov
repnz
fisubs
xchg
mov
sbb
sbb
fcmovbe
lret
leave
ljmp
and
fcomp
loope
push
add
sbb
aad
fstps
push
jmp
ds
addr16
js
dec
cmp
push
clc
in
rolb
or
testl
or
mov
shrb
cmp
or
and
push
arpl
push
ljmp
movsb
adc
dec
or
push
and
iret
js
stos
or
stos
sbb
jle
push
in
dec
cmp
sbb
jo
test
adc
cmpl
pop
rolb
dec
adc
and
pop
arpl
mov
mov
and
xor
mov
hlt
aad
adcb
xchg
mov
fs
dec
push
mov
jp
xor
sbb
sahf
fiadds
je
nop
cmp
mov
stos
in
shl
and
sti
out
fwait
sti
cmpsb
jmp
jae
push
ja
std
lds
iret
les
fidivs
pusha
mov
jle
and
fcoms
nop
dec
xorl
shl
push
pop
fstpl
les
sub
xor
in
xchg
pop
mov
test
cmp
adc
mov
les
repz
or
or
sahf
movsl
fwait
push
aaa
xor
pop
dec
mulw
cmc
or
xor
dec
ljmp
pusha
subl
xchg
xchg
in
xchg
xchg
dec
jecxz
aaa
ret
add
mov
or
out
icebp
ret
mov
in
xchg
out
push
add
movsl
add
xchg
mov
fdivrs
push
data16
cmp
jne
mov
add
inc
lock
call
push
arpl
adc
sub
xchg
and
movsb
mov
mov
pop
ret
cmp
xor
mov
repz
in
loope
xorb
movsl
in
lret
pop
mov
cmp
jb
imul
inc
jmp
lret
je
movsb
ret
scas
dec
repz
fidivs
pusha
mov
rol
jo
sbbl
push
sub
jnp
std
orl
fnstenv
mov
adc
testb
adc
int3
dec
adc
lahf
mov
cs
mov
out
push
roll
pop
ja
sbb
add
movsb
ret
aad
decb
fwait
ss
push
pop
lret
and
push
jnp
sti
ja
push
imul
nop
add
out
fwait
loope
pop
fwait
sub
mov
cld
cmp
pop
prefetcht0
pop
popa
inc
push
loope
outsb
arpl
push
xchg
je
daa
jecxz
in
rcrl
sbbb
ret
je
hlt
xchg
lret
xchg
pop
xor
cltd
mov
int3
das
vpsrld
jno
xor
adc
fs
add
or
sbbb
popf
sub
lock
jl
push
jns
ja
outsl
in
mov
pmullw
in
movsb
dec
fwait
test
jecxz
pop
fldl
repz
pop
std
inc
mov
aad
sahf
push
lret
cmp
or
sbb
xchg
lock
cld
sub
lcall
lods
jbe
add
lds
xchg
dec
fmul
sub
outsl
in
cwtl
jp
dec
in
rorb
mov
xchg
in
push
je
imul
xchg
cmpsl
nop
lahf
popa
xor
pop
addl
adc
call
xchg
sub
addr16
je
mov
and
fidivrl
and
xchg
shll
sub
dec
jnp
and
pop
cmp
mov
out
cmp
lods
pop
lahf
jb
int3
insb
mov
sub
pop
and
or
ret
out
mov
push
or
jb
imul
aaa
daa
sbb
add
movb
fdivrl
add
adc
xchg
shl
pop
call
pusha
jg
push
xchg
shl
adc
jae
push
pop
rolb
xor
xor
es
sub
inc
mov
dec
pop
call
mov
dec
push
sbb
sub
cmc
test
out
xorb
int3
fdiv
mov
inc
mov
sub
jle
inc
inc
data16
cmp
pop
outsb
fucomip
dec
jg
sahf
dec
push
subb
je
pushf
ret
test
dec
ds
dec
outsl
or
lret
add
scas
out
clc
pushf
je
mov
fmulp
jmp
dec
movsl
scas
ror
or
leave
dec
in
das
mov
jae
push
in
xlat
mov
mov
push
lcall
sub
dec
test
repnz
ja
adc
imul
jbe
xor
pop
jns
fwait
jb
and
push
adc
mov
mov
inc
mov
sbb
jae
repz
aad
mov
sub
xchg
in
inc
dec
outsl
popf
scas
lock
test
test
mov
loopne
pop
xchg
or
mov
fldenv
cmp
in
jbe
daa
imul
add
push
lods
mov
fistpl
mov
loope
sbb
scas
mov
mov
xchg
cmp
aam
mov
jne
into
aam
in
or
xlat
xchg
mov
stos
lea
add
hlt
mov
decl
sub
iret
int
mov
or
gs
cmp
lret
cmpsl
mov
adc
jnp
ja
mov
push
std
mov
add
out
xchg
loope
stos
mov
cmp
pop
ret
dec
mov
repnz
cs
ficomps
xor
repz
out
ficoml
adc
mov
add
mov
fstl
and
pop
pop
push
pushf
sbb
repnz
iret
arpl
out
xor
cmp
jbe
jns
ror
push
xor
push
push
push
fsubrs
mov
fistl
mov
rcrl
jb
addr16
or
lahf
fs
in
jnp
push
sahf
pop
sti
xchg
sub
cltd
testl
fbld
test
stos
add
stos
ds
push
jecxz
xchg
xor
inc
lret
lcall
inc
cmpl
scas
cmp
imul
aam
sub
inc
dec
das
cmc
xchg
test
mov
xor
loop
mov
jne
in
push
dec
enter
pop
test
mov
testb
mov
sub
adc
mov
js
mov
or
out
inc
fistl
jno
adc
es
cs
fists
test
jmp
repnz
test
aas
add
dec
xlat
pop
call
inc
iret
mov
in
ffreep
mov
call
add
mov
mov
add
outsl
lea
and
and
test
sbb
std
sub
sub
add
cltd
int3
xchg
addr16
push
cmpb
jle
movsb
sbb
xchg
sbb
ss
mov
lea
sbb
cwtl
cwtl
incb
xchg
or
mov
ret
mov
lcall
in
cltd
ds
test
or
es
pop
jmp
rcll
add
out
out
mov
arpl
fbld
pop
or
xor
fwait
outsl
call
dec
or
adc
and
dec
aad
push
les
cmp
pop
stos
pop
mov
and
outsl
fistps
mul
mov
inc
loop
into
dec
imul
cmp
bound
sub
push
push
ret
push
xor
imul
dec
pop
cmpsb
loopne
jl
pop
and
adc
xchg
xchg
mov
adc
mov
xor
sbb
int3
jge
int
pop
adc
and
imul
cmp
mov
adc
jb
and
xchg
loopne
mov
xchg
gs
jno
rcr
mov
lods
mov
add
xor
lods
jb
data16
and
jo
sub
mov
sahf
aas
imul
inc
aam
ret
sbb
dec
jg
divl
scas
int
and
mov
clc
mov
out
mov
and
int
repnz
cld
ss
adc
sbbl
inc
mov
lret
or
daa
lahf
jle
lods
aam
cmc
loopne
jns
mov
sahf
out
adc
xchg
lret
xor
cmp
mov
lea
adc
mov
mov
mov
push
mov
mov
pop
mov
dec
loope
sarl
lcall
fists
jae
mov
cltd
ljmp
pop
shlb
mov
inc
pop
iret
mov
out
sbb
cs
lret
js
lret
xchg
out
insb
out
lods
jl
or
jae
sarl
xchg
xsaves
and
mov
cmp
xchg
xor
push
repnz
les
or
xor
fdivrp
mov
dec
jbe
add
cmc
mov
xchg
lcall
aad
push
sar
sub
adc
outsl
das
es
psubb
inc
adc
xchg
cld
lcall
dec
push
dec
push
movsb
fisttps
push
inc
cmpsl
test
loopne
ljmp
lcall
dec
aam
cmp
icebp
or
pop
dec
xor
jb
push
cltd
das
scas
push
cmpsl
stc
add
jae
cmp
pop
mov
in
sub
xchg
sbb
mov
push
xchg
fs
cwtl
test
push
jnp
repz
add
sti
jl
jg
add
dec
sub
daa
xchg
enter
adc
testb
adcl
shlb
add
xchg
push
outsl
arpl
mov
sbb
dec
enter
leave
mov
add
push
ljmp
dec
dec
xor
ss
pop
xor
lahf
sbb
pop
mov
aas
add
sbb
gs
dec
push
mov
jns
sub
dec
inc
inc
je
mov
add
repz
cmp
add
mov
xchg
xor
dec
cmp
test
mov
mov
movl
inc
inc
pusha
cmc
test
subl
movl
dec
imul
cltd
and
add
int
and
lds
aaa
xor
fldt
pop
dec
insl
shrb
xor
and
out
sarl
mov
push
add
ljmp
subb
outsb
les
test
je
test
dec
sahf
xchg
lods
pop
add
imul
int
iret
mov
push
and
mov
xor
cmp
or
push
out
rorl
aad
push
hlt
sbb
jbe
pop
ficoml
cmp
aaa
mov
mov
addr16
shlb
pop
frstor
mov
dec
mov
enter
mov
sub
mov
jnp
jo
insb
iret
mov
cmpsb
xchg
out
xlat
les
add
xchg
fcmove
xchg
inc
mov
dec
scas
int
mov
imul
aas
push
cmpl
pop
adc
jecxz
out
fmul
jmp
mov
ss
and
addr16
xor
cmpb
scas
jae
cmc
imul
pop
jl
jns
incb
insl
and
jmp
mov
add
jno
mov
or
loop
pop
adc
daa
adc
pop
into
sbb
fs
leave
push
mov
pop
pop
mov
sub
jb
xor
cmp
pop
pusha
pop
mov
shrl
pop
mov
movsl
es
cmpsb
jmp
std
jmp
and
xorl
xchg
mov
or
xchg
push
imul
loopne
mov
testl
movsl
xchg
sub
sub
rcrl
into
and
mov
sub
push
and
shll
sub
mov
dec
mov
adc
jno
in
xorl
addr16
or
std
ret
std
mov
test
sbb
xorb
bound
pop
push
mov
mov
fsts
ljmp
push
sbb
mov
pop
push
xchg
loop
push
shll
imul
sub
dec
or
icebp
rorl
add
mov
pop
es
adc
inc
mov
push
add
ljmp
aad
out
pmulhuw
lods
je
mov
insl
mov
xchg
push
fcmovne
sbb
push
xor
mov
callw
inc
mov
lea
mov
mov
mov
test
in
lock
mov
lods
cli
sub
test
lods
in
inc
test
pop
cmp
or
or
adcb
mov
push
add
std
push
mov
fcomps
lcall
dec
outsb
das
add
mov
lss
sbb
loop
daa
adc
mov
shl
mov
pop
das
push
enter
jno
dec
mov
cmpsl
out
lods
mov
cmc
aaa
mov
repz
mov
pop
xchg
mov
xor
pop
mov
clc
mov
ficompl
iret
mov
adc
outsb
les
pop
inc
pop
cltd
and
loop
pop
out
test
cmpb
fs
rcrb
shlb
dec
adc
sub
jmp
adcb
jnp
mov
mov
fdivl
xor
lods
cld
pop
mov
aas
cmpsb
push
scas
in
mov
cmpsl
xchg
mov
mov
lea
test
mov
scas
dec
je
hlt
shll
es
pop
or
in
mov
jge
lods
stc
push
sbb
jmp
jbe
cltd
shlb
test
cmp
insl
test
jge
scas
daa
imul
std
mov
jbe
xor
add
in
and
jbe
scas
pushf
xor
lret
call
cmpsb
insb
cmp
in
jle
mov
and
enter
nop
stc
gs
cmpsb
data16
mov
call
aas
add
lods
sbb
add
lds
adcl
ds
stos
xchg
pop
pop
movsl
cs
cmpsb
aad
cmp
test
mov
jb
ja
ficoms
mov
push
sub
mov
fldln2
mov
push
or
jne
push
mov
jbe
add
xchg
shrb
adc
mov
sbb
jns
outsb
mov
jg
pop
xor
ja
movsl
sbb
mov
das
cmpsl
mov
imul
inc
mov
sub
cmpsl
ficoms
call
orl
rorl
sbb
push
lcall
and
cmp
adc
inc
popa
pushl
mov
ret
lock
out
or
js
mov
jg
lods
test
sub
adcl
shlb
call
adc
or
jae
dec
ret
imul
fwait
out
decb
test
ds
dec
add
test
lcall
xor
xlat
sbb
insl
jge
out
and
testb
cmc
int3
push
add
in
mov
inc
cld
leave
inc
dec
divb
pushf
adc
les
mulb
movsl
jne
inc
push
sbb
pop
adc
push
loop
xlat
test
test
std
data16
repnz
lods
outsb
adc
lcall
sbb
insl
mov
mov
jo
sbb
fwait
ds
hlt
adc
sbb
mov
outsl
pop
dec
mov
lds
fadds
lahf
inc
ret
pop
cs
ja
xor
imul
sbb
xchg
cmp
ljmp
and
les
daa
and
cmc
jl
add
scas
mov
jnp
test
lods
dec
gs
nop
xchg
pop
dec
stos
ret
pop
mov
lock
dec
frstor
ror
jg
xor
cmpsb
jbe
lds
adc
sbb
sub
cmp
sbb
lods
dec
cmp
pop
daa
jae
dec
lods
inc
inc
sbb
mov
gs
cld
sbb
lea
mov
outsb
out
mov
mov
bound
sbb
rcl
xchg
inc
sbb
jne
stos
cmp
loop
pop
daa
icebp
cmp
and
shrl
pop
and
pop
mov
push
push
inc
jmp
scas
jae
jp
mov
mov
aad
mov
inc
push
push
in
into
cltd
cwtl
mov
popa
lea
jecxz
push
ja
or
jge
sub
jl
or
je
mov
xchg
bound
mov
add
scas
nop
fcomp
orl
icebp
cmp
mov
cmc
je
gs
and
xor
movsl
movsb
flds
jae
andl
jg
sub
push
jo
mov
sub
and
cmp
nop
aam
xchg
inc
je
push
ljmp
push
push
outsl
jecxz
cmp
xchg
int3
repz
jmp
imul
xor
or
mov
test
jp
xor
in
dec
pop
shlb
add
xor
dec
jns
dec
pop
fimull
push
push
movsb
mov
cmp
jae
inc
push
rcll
xor
into
or
lods
cwtl
stc
sahf
imulb
sahf
pxor
gs
sbb
call
pslld
adc
push
ja
out
lret
jne
cmp
mov
xchg
or
mov
and
out
xchg
mov
loope
add
movb
ret
pushl
nop
stos
and
jle
sbb
sahf
push
xchg
mull
rclb
xchg
jge
or
sub
push
out
jg
or
aas
xchg
add
je
imul
push
mov
lret
popa
dec
mov
mov
adc
cs
test
hlt
daa
xchg
jmp
add
dec
fwait
adc
lock
cmp
je
add
jns
rcr
sarb
aad
push
mov
add
dec
iret
lret
inc
pop
cld
jp
or
push
dec
add
cs
inc
xchg
out
push
fwait
xchg
je
sub
jb
pop
in
mov
push
fcomp
rcl
roll
call
jbe
or
aaa
pusha
cmc
loopne
arpl
adc
xchg
fnstenv
std
in
add
mov
nop
inc
loope
es
pop
jle
cmp
cs
dec
inc
cmp
jmp
fidivrl
fidivrl
xchg
mov
lods
push
mov
daa
fisubrl
shll
xor
adc
mov
cmp
and
add
sub
in
inc
jne
xor
push
lret
or
iret
jmp
pop
xchg
xlat
in
push
pop
je
jb
push
adc
xchg
data16
addl
scas
push
loopne
inc
pop
rcrl
js
int3
in
jns
daa
mov
cmpsb
dec
lea
inc
daa
cld
or
jnp
into
pop
mov
cli
jne
loope
jno
std
and
test
dec
jl
cmp
fs
jne
loop
add
lret
adc
cld
jnp
adc
lods
dec
clc
cmp
pop
or
test
adc
aas
loop
cmp
mov
test
xchg
fwait
les
int
popa
sbb
fldcw
mov
outsl
xorl
out
xchg
ja
stos
lcall
mov
sbb
dec
mov
ja
mov
or
stos
mov
outsl
sub
int3
jbe
jne
cmp
xchg
or
cltd
ret
mov
in
leave
xchg
loopne
xlat
jb
out
xchg
and
test
push
cwtl
pop
mov
jle
fwait
out
xchg
mov
mov
shrl
or
mov
pusha
les
jno
out
loop
add
inc
jnp
gs
push
movsb
enter
in
jae
js
aaa
add
sbb
imul
fwait
clc
fmul
je
mov
push
in
dec
sti
iret
imul
adc
add
adc
inc
sub
mov
sbb
psllq
fcompl
mov
inc
cmp
or
pop
pop
xor
push
out
lock
pop
jge
xchg
dec
push
sbb
out
pop
dec
or
gs
dec
sub
and
cli
pop
push
adc
cmpb
cmp
ds
clc
ljmp
mov
xchg
lcall
xchg
xor
inc
dec
cmp
cmp
aas
inc
sub
lcall
cmp
inc
mov
bound
cwtl
ret
jbe
leave
jbe
movsl
push
shl
add
xor
daa
fwait
stc
loope
jne
sbb
mov
aad
pop
mov
orl
xor
push
mov
subb
jnp
insl
mov
into
fwait
es
enter
xchg
xchg
mov
xor
adc
push
sub
adc
mov
sahf
jge
jbe
push
xor
test
ds
and
lcall
lahf
inc
mov
xor
insb
push
lods
test
pop
mov
lock
jmp
adc
mov
mov
mov
jecxz
out
bound
add
mov
xorl
dec
rcrb
lea
daa
stos
xchg
stc
mov
jo
push
lds
xchg
insb
and
inc
inc
mov
cmpsl
push
fwait
adc
inc
clc
dec
add
js
pop
sub
out
xchg
popf
rcr
frstor
xchg
push
push
addr16
xlat
mov
and
adc
dec
fucomp
pop
or
mov
xchg
mov
adc
ljmp
sbb
mov
jo
aas
daa
add
mov
push
sbb
sub
sbb
and
dec
jns
sub
xlat
jo
in
sbb
sbb
inc
arpl
or
addr16
push
pop
jle
in
and
adcb
push
mov
mov
fmul
bound
or
insl
and
je
push
cmc
subb
sbb
sub
push
aaa
sbb
in
and
cmc
cltd
addb
dec
mov
pop
out
xchg
sbb
push
cmp
cli
and
sbb
aaa
imul
mov
or
ljmp
rorl
xchg
dec
mov
sbb
hlt
mov
adc
fsubl
pop
jge
xchg
outsl
jp
les
lret
in
cmc
imul
addr16
stos
stos
sub
outsb
aam
outsl
aas
leave
pop
ljmp
in
or
push
or
leave
arpl
sahf
push
imul
jle
testb
sbb
movsb
mov
jecxz
xor
into
sub
dec
pusha
mov
or
inc
xchg
paddb
hlt
jp
inc
es
in
jp
movsb
jl
es
jbe
lahf
adc
mov
loope
cld
xchg
pop
or
cmp
jge
gs
sbb
mov
sbb
pop
xor
addr16
fisttpl
mov
and
push
mov
inc
loope
stos
fwait
dec
mov
fdivrs
stc
pop
cmpsl
pop
pop
sbb
xor
shlb
cmpsb
insl
ret
sbb
push
sti
cmp
lock
outsb
mov
and
or
dec
popa
rolb
lcall
push
fbld
sub
and
das
lods
push
inc
pop
push
dec
push
outsb
fildll
imul
hlt
mov
roll
cmpsb
and
lock
or
aad
add
andb
test
out
xor
test
push
pop
imul
pop
pushf
aad
pop
cmpb
cmp
int
stc
repnz
xchg
dec
pushl
and
and
daa
ret
mov
lea
mov
dec
xchg
pop
pop
pop
xor
les
movsl
cmp
lret
xchg
addr16
lods
out
sub
icebp
sbb
pop
pop
ficomps
push
sbb
mov
dec
mov
pop
xor
test
jle
clc
cmpsb
lds
shrb
fisubrl
jecxz
xor
and
sub
out
and
loope
repnz
sahf
loopne
dec
adc
jo
das
lods
mov
push
xor
pop
nop
adc
mov
inc
lret
add
icebp
ret
sbb
dec
emms
push
mov
repz
out
leave
mov
in
cmp
dec
je
mov
aaa
mov
sbb
cwtl
popa
mov
outsl
xchg
mov
movsl
gs
inc
pop
sub
cmp
mov
adc
lahf
inc
add
into
ret
scas
dec
push
fbld
mov
dec
nop
sbb
repz
mov
cmp
loop
es
mov
test
xchg
adc
push
mov
arpl
out
cmp
sub
movsl
push
jae,pn
xchg
mov
or
xor
paddq
hlt
jl
loop
mov
hlt
push
mov
shrb
mov
mov
jge
imul
mov
js
das
test
stos
jecxz
cld
adc
cmpl
sbb
sbb
and
ucomiss
push
push
push
xchg
mov
sahf
push
out
jle
inc
and
into
push
inc
xor
sub
lahf
loop
pushf
mov
in
sub
or
mov
rorb
dec
mov
fnstenv
ja
pop
add
mov
lods
bound
jbe
xor
int3
inc
jae
pusha
sub
js
enter
sub
divl
dec
loope
stos
lret
aam
gs
push
iret
lret
and
xchg
dec
xorb
imul
adc
into
inc
rolb
int3
leave
push
xor
cmp
rol
or
jl
sbb
test
push
mov
mov
test
icebp
push
cmp
mov
dec
push
sbb
std
out
ljmp
inc
mov
enter
xchg
test
jge
cli
sub
cld
push
push
cmp
push
sbb
mov
jecxz
adc
xor
loop
sub
jmp
mov
jg
mov
jnp
add
jmp
adc
fwait
pop
test
imul
out
xchg
stos
shll
push
jo
lahf
xchg
loope
jl
jle
push
push
push
mov
push
out
adc
sub
cli
aas
pusha
adc
std
dec
daa
mov
lds
or
mov
mov
and
adc
dec
sti
aas
loopew
test
or
xchg
mov
sahf
mov
sbb
push
mov
cmp
leave
lds
lret
xor
add
sub
or
cmp
cld
mov
rclb
pop
add
in
loop
jecxz
dec
int3
loopne
test
sub
mov
ja
out
aad
inc
sbb
sub
jae
and
in
pop
or
dec
sub
ret
dec
loopne
xor
cmp
jmp
lahf
push
nop
pop
cmp
dec
sbb
dec
es
roll
mov
aas
popa
mul
and
outsb
adc
scas
ljmp
jns
dec
lods
nop
ficoml
add
add
movsb
ljmp
jb
sub
scas
imul
mov
insb
jmp
loopne
lods
sbb
dec
sbb
repz
movsl
jnp
insl
dec
shll
stc
shll
ret
xor
add
dec
or
xchg
fs
test
rclb
popf
mov
in
sub
push
ljmp
hlt
mov
negb
leave
fst
out
sbb
dec
inc
cld
in
mov
daa
fwait
shll
lret
fidivrl
inc
aam
sbbb
xchg
xor
xchg
mov
xor
adc
push
dec
and
in
popa
mov
xor
mov
cmc
sbb
jge
mov
sub
or
flds
loop
and
cmpb
or
icebp
and
cmpl
out
xchg
jg
notb
idivb
adc
xor
imul
adcb
call
in
adc
push
jnp
lods
lock
adc
sbb
mov
data16
les
mov
mulb
mov
sbb
loop
mov
xchg
mov
or
xchg
jnp
inc
or
fisubs
hlt
xchg
in
jmp
jnp
push
xor
jp
arpl
mov
in
js
and
mov
mov
add
jno
sbbl
es
xchg
pop
adc
ja
inc
mov
sbb
mov
push
cmp
lock
xchg
aam
arpl
cmp
inc
inc
adc
add
rclb
mov
cmpsl
push
mov
or
repnz
jno
cmp
jg
xchg
push
jb
pop
and
ss
imull
cmpsb
sti
xchg
mov
add
fcompl
pusha
out
xor
repnz
test
test
out
push
mov
fsubrl
sub
addr16
and
xlat
xchg
jne
mov
cwtl
shr
repz
jae
jnp
nop
pop
cmp
fwait
sbb
ret
imul
scas
cwtl
movsb
jmp
inc
inc
outsb
mov
jle
sub
inc
sbb
jle
mov
cmpl
jp
idivb
mov
testb
jbe
fnstcw
and
subb
and
loopne
callw
fistpl
or
mov
push
lds
dec
add
jg
dec
icebp
jle
xchg
inc
test
mov
roll
jae
in
or
jnp
imul
adc
sub
sub
ljmp
notl
jno
add
sbb
insl
test
test
movsb
lock
gs
pop
cmp
and
adc
sbb
clc
dec
and
sbb
imul
stos
mov
jmp
dec
mov
jge
xor
pop
loope
pop
dec
aam
loopne
mov
pop
jmp
gs
fcoml
mov
inc
je
jns
mov
imul
xor
cmp
xor
xchg
scas
aam
push
xchg
aas
adc
stc
and
mov
pop
aam
imul
insb
scas
jbe
fcmovu
lret
dec
xor
sti
test
cmp
mov
xchg
aad
leave
dec
sbb
bound
mov
dec
mov
jnp
popa
out
sbb
xchg
push
idivl
push
lock
adc
icebp
jmp
xor
hlt
and
xor
sub
mov
push
dec
nop
into
lahf
push
push
cmc
stos
stos
push
rcl
pushf
int3
fistl
das
cs
dec
xchg
out
adc
mov
jle
push
xchg
outsl
xchg
imul
pop
mov
fldl
cmp
xor
stos
aad
mov
into
cs
push
mov
shr
adc
fcoml
jnp
aad
jb
std
icebp
adc
and
out
add
fistps
push
xchg
pop
sub
cs
xchg
jne
or
cmc
or
pop
and
mov
notb
dec
jne
ret
or
sbb
sub
mov
rcrb
rep
inc
imul
pop
loop
addl
xchg
sbb
paddsb
out
push
mov
or
cmpsl
sbb
xor
jg
lcall
mov
mov
shlb
lds
xor
cmc
int
xlat
ds
xchg
xor
sbb
xchg
inc
xchg
xor
and
or
add
cmpsb
mov
test
daa
out
sets
repnz
pop
add
gs
out
and
je
mov
push
or
jg
jecxz
jp
push
cmp
loop
fwait
mov
in
pop
out
inc
dec
in
imul
and
sbb
cmp
sub
dec
push
loope
pop
ljmp
outsb
mov
iret
cltd
push
sbb
cmpsl
xor
lds
push
cmp
fistl
loop
ficoms
scas
iret
clc
inc
int
arpl
data16
xchg
and
popa
add
adc
jmp
icebp
push
pop
and
mov
dec
push
mov
dec
stc
lcall
dec
in
sbb
imul
or
jnp
or
dec
mov
aam
xchg
mov
mov
stos
rsm
push
cmp
dec
or
or
or
out
or
bound
mov
pusha
les
jmp
mov
fcomps
lods
dec
clc
stos
push
faddl
out
xchg
mov
imul
cwtl
pop
pop
sub
adc
repnz
mov
or
clc
push
push
mov
in
lods
in
push
jno
push
test
adc
dec
jg
lahf
sub
imul
inc
xchg
ficoms
push
fldl
imul
test
call
filds
xor
adc
js
test
mov
sub
mov
add
adc
mov
addr16
push
test
add
fld
cmpsb
xchg
lods
ljmp
sti
lock
or
push
loope
dec
addl
in
into
inc
aaa
enter
or
xchg
ljmp
cwtl
cmp
sub
in
in
adc
jns
or
jge
add
cmp
mov
rcr
fisubrl
sarl
mov
lahf
stc
pop
inc
pop
mov
ss
jns
and
std
inc
jle
mov
addb
pop
mov
cmp
jne
lock
clc
mov
ss
inc
loopne
mov
andl
jmp
pop
mov
ret
add
sbb
pop
adc
xchg
in
ret
add
pop
xor
fsubp
das
mov
jle
negl
sub
pop
sub
movsl
mov
movsl
mov
lcall
push
cmpsl
or
jmp
adc
pop
inc
decb
fxch
jecxz
and
mov
mov
scas
arpl
scas
fdivrs
lods
jns
jnp
push
iret
les
xor
ljmp
xchg
xchg
lods
sbb
xchg
push
rolb
xchg
sub
test
popf
sub
pop
xor
xor
push
or
das
xor
sahf
ret
je
les
ds
divb
popf
adc
fiaddl
iret
fldl
sub
mov
cltd
lcall
push
push
mov
jo
mov
mov
or
sub
cwtl
outsb
xchg
stc
int
fsubrs
mov
dec
fs
mov
or
je
sub
imul
fadds
pop
and
lahf
into
lds
or
jle
xchg
sti
les
fs
adc
loop
sti
dec
fdivrl
mov
jecxz
sbbl
in
movsl
mov
pop
cmc
push
aaa
mov
sbb
xor
lods
adc
int
mov
mov
xchg
sub
test
pop
add
outsb
stos
shll
je
adc
sti
test
sub
push
mov
in
daa
arpl
xchg
movb
push
lods
and
stos
in
xchg
jnp
xchg
xchg
xor
idivb
mov
outsl
lcall
xchg
mov
cmp
je
add
jmp
les
push
push
xchg
mov
cwtl
add
jp
pusha
lea
test
cmp
in
ret
add
inc
int3
incb
repz
xchg
inc
adcl
push
imul
fnstenv
dec
xchg
mov
ficoms
jmp
lock
sub
es
test
inc
mov
sub
jo
xchg
pop
mov
push
into
idivb
sbb
outsb
outsb
add
ja
jl
push
loopne
mov
outsb
rorb
daa
inc
lcall
lret
jbe
leave
jo
shr
ja
loop
dec
xchg
insl
stc
shlb
pop
pop
int
push
neg
dec
ja
jnp
pop
adc
sub
add
dec
loopne
inc
pop
or
bound
cmp
mov
cmpsb
mov
sub
push
sub
out
mov
arpl
ret
divb
mov
repz
lds
mov
cwtl
push
xchg
nop
shrb
lea
int3
int
shll
push
mov
int
xlat
xor
aas
loopne
cmp
adc
mov
xchg
pop
out
pop
js
lea
ja
iret
cltd
jb
jbe
mov
aas
rcll
aas
nopl
mov
out
sbb
adc
cmp
mull
pop
test
iret
lea
loopne
iret
push
cmp
sub
and
sub
push
call
mov
shr
sti
cwtl
add
popf
mov
mov
sub
sbb
fcmove
ljmp
jmp
adc
mov
or
mov
cmc
mov
and
clc
xchg
popf
or
add
mov
jns
adc
addl
mov
insb
clc
sbb
int3
or
mov
mov
fisubs
fcoml
addr16
mov
shlb
lret
dec
dec
gs
stos
stos
leave
out
cmp
xchg
jg
sbb
repnz
daa
sub
push
sbb
xchg
adc
sti
and
push
cmp
cmp
and
mov
int3
dec
xor
cwtl
sub
dec
lret
pop
lods
loope
push
push
jne
ja
mov
xor
mov
and
cmp
mov
adc
icebp
cmp
negb
inc
clc
cwtl
in
xorl
push
movsl
jo
icebp
inc
cmp
and
mov
or
into
sbb
sbb
into
scas
mov
add
sbb
mov
push
adc
shlb
pushf
adc
in
jl
dec
dec
xchg
pusha
inc
and
xor
cmp
cli
mov
addr16
fidivs
adc
imul
shrb
cwtl
cmc
fwait
fwait
hlt
testl
mov
scas
xor
lcall
inc
mov
lret
int3
int
testl
in
inc
insl
sbb
dec
out
mov
lock
cmp
cmp
shll
in
in
adc
jns
push
sub
sti
addr16
std
fstpl
ds
pop
jo
add
movsb
mov
sub
lods
mov
jns
repz
mov
add
xor
pushf
into
insb
in
outsl
outsl
lahf
fcmovb
cmp
push
mov
sarb
in
in
sub
fs
test
icebp
dec
int3
xor
and
test
push
lods
jbe
cmpsl
cmp
repnz
out
mov
sub
push
arpl
pop
mov
clc
inc
xchg
sbb
frstor
ret
loop
daa
cmpsl
sub
test
jl
dec
inc
gs
out
add
xchg
sbb
leave
xor
xchg
out
fnstsw
call
repnz
imul
ljmp
scas
lea
ret
and
popa
push
mov
dec
and
lods
adc
movaps
jns
and
xlat
mov
jl
outsl
out
add
sbb
mov
dec
retw
mov
cltd
push
add
mov
sub
outsl
jl
push
cmp
sub
movsb
shrb
daa
out
cmp
jge
subl
push
pusha
inc
aad
pop
mov
popa
les
bound
daa
add
jp
dec
stc
int3
pop
std
cmp
jl
mov
mov
mov
mov
mov
in
lods
fwait
sub
xor
nop
es
mov
test
mov
in
leave
mov
lret
pop
in
mov
shrb
mov
mov
sbb
addr16
push
fmulp
push
mov
or
add
stc
aam
sub
jno
inc
inc
inc
mov
pop
sti
movsb
iret
outsb
clc
leave
inc
add
inc
pushf
fcoml
scas
pop
ret
lret
jecxz
push
icebp
movsb
xchg
mov
push
jns
xchg
rcrl
and
jle
sub
mov
mov
rclb
lret
outsl
mov
and
dec
cmp
bound
loopne
gs
mov
das
aam
outsl
cmp
jmp
scas
or
in
aad
xchg
fistl
aad
aam
or
in
dec
sbb
inc
sbb
pop
sbb
pop
push
cmp
or
jmp
jb
cltd
and
push
jns
xchg
jb
dec
int3
or
mov
xor
fwait
add
nop
in
fs
mov
xchg
mov
fs
fiaddl
cld
insb
sub
sbb
dec
cmpsl
mov
loop
imul
popa
sbb
in
cmp
mov
sbb
adc
lret
or
xor
pop
xor
add
lahf
mov
adc
insb
dec
sbb
mov
xor
shlb
cwtl
mov
mov
sbb
mov
pop
pop
push
dec
or
repnz
sub
ja
daa
mov
ret
adc
cli
sbb
sub
mov
adc
icebp
xor
mov
or
in
js
jae
icebp
jbe
mov
mov
std
adc
orl
loope
ljmp
imul
pusha
daa
cld
sbb
out
ficoml
ljmp
sub
sub
xchg
sbb
pop
pop
cli
call
cmpsb
mov
out
xorl
inc
xor
inc
ror
sub
mov
push
dec
xchg
nop
dec
icebp
sub
push
popf
pusha
pop
dec
jmp
sbb
cmpsl
push
mov
lock
adcl
cmp
and
ds
add
jmp
cmp
pop
dec
lods
push
xor
dec
arpl
std
pop
shrb
dec
push
or
test
lea
repnz
mov
inc
mov
pop
add
je
ret
mov
lds
jp
and
jne
mov
jge
in
mov
stos
xchg
addb
pop
shlb
ret
or
inc
ret
fnstcw
enter
ret
pop
lret
ljmp
ja
and
outsl
enter
out
iret
adc
push
and
push
fisttpll
adc
aaa
stos
mov
and
adc
cmpsb
insb
adcb
shrb
cld
imul
jle
jecxz
cld
sbbb
inc
pop
lods
insb
xchg
dec
add
cltd
jns
sbb
scas
int
mov
sub
jbe
ret
faddl
push
ret
or
in
mov
daa
popa
aas
cwtl
sbb
adc
sub
adcl
add
aas
xchg
fidivrs
push
stos
and
repz
pop
fs
jno
pop
pop
adc
leave
xor
or
movsb
addr16
and
jge
push
sub
jmp
popf
pusha
movsl
enter
sub
mov
add
inc
cmpsl
mov
and
insb
lods
push
cli
mov
pop
sbb
sahf
shll
loop
dec
js
sbb
mov
fucomip
int
icebp
push
xor
jge
jae
inc
hlt
mov
adc
and
js
xchg
leave
inc
jl
ret
pop
mov
enter
sub
mov
mov
fstps
lock
lock
and
mov
fildll
xchg
repnz
jns
push
push
insb
xchg
or
aam
or
xchg
sbbl
xor
sarl
cmc
lret
fwait
arpl
jecxz
jo
push
ds
jge
sub
shll
push
cmp
in
add
cmpsl
push
adc
jbe
push
xchg
add
jecxz
mov
add
iret
xchg
popa
test
mov
jecxz
jnp
mov
ljmp
dec
shrl
and
jne
lock
and
mov
rclb
mov
outsl
subl
push
stos
int
dec
mov
loop
cmove
pop
int
loopne
in
clc
fidivrl
fidivrs
pop
jecxz
inc
sbb
inc
pop
ja
cmpsl
cmp
pop
scas
fwait
mov
movsl
pop
mov
fucomip
in
jl
cs
mov
inc
into
lock
leave
mov
dec
loopne
and
ja
sahf
fcompl
xor
push
in
scas
repz
and
push
int3
ret
push
sub
jecxz
sbb
pushf
pop
xchg
ret
in
std
insl
mov
fnstsw
test
add
mov
jae
aam
sbb
sub
sbb
fmuls
cmp
hlt
aad
std
cmc
sbb
je
imull
clc
cmc
mov
dec
pop
sahf
cmpsl
cmc
jnp
mov
je
jge
mov
in
xor
xor
bound
rcl
mov
pop
lret
or
das
mov
dec
clc
push
or
xchg
stos
iret
jecxz
adc
cmp
mov
loope
jmp
stc
repz
sbb
repz
aaa
movsl
and
mov
mov
movsl
test
out
mov
ds
test
stos
or
and
xchg
xlat
test
cmp
lret
cmp
push
stos
in
imul
inc
jb
out
mov
jl
callw
xor
add
mov
in
cmpsb
in
xor
into
cltd
and
mov
sbb
adc
sub
xchg
fildll
aaa
sbb
fwait
in
or
das
cltd
aam
jne
xchg
gs
adc
mov
xor
ret
adc
jnp
jp
dec
inc
adc
mov
cli
out
mov
nop
lods
push
call
xor
call
fnstcw
movsb
xchg
sbb
imul
lret
cmpsb
pop
fistpl
icebp
mov
cltd
pop
mov
xchg
mov
xor
mov
ret
pop
fwait
xchg
cltd
cmp
mov
dec
xor
clc
test
pushf
das
gs
dec
ds
loopne
dec
xchg
cmpsl
push
jg
xchg
jnp
jbe
xchg
dec
sahf
pop
dec
cmpl
sbb
movsb
das
push
insl
jmp
cmpl
cwtl
xor
and
nop
fldcw
jo
xor
shll
jle
push
xchg
arpl
mov
and
lahf
rclb
or
adc
fmuls
xlat
ja
fildl
mov
mov
adc
lods
lock
mov
filds
jecxz
mov
arpl
loop
fbstp
sbb
dec
loopne
jne
mov
add
or
mov
popa
sub
mov
decl
adc
jecxz
out
xchg
mov
sahf
pop
dec
add
cmpsb
mov
stc
push
mov
scas
scas
sbb
into
imul
ljmp
es
push
push
cmp
lcall
insl
dec
mov
in
into
mov
sti
pop
xor
xorl
inc
add
cmp
and
loope
int3
cltd
cld
mov
and
ficompl
adc
outsl
sbb
adc
fisubl
orb
adc
in
sahf
loope
loopne
lods
cs
adc
jecxz
fwait
push
mov
cld
fwait
enter
mov
cli
and
fbld
dec
push
dec
inc
add
xchg
leave
popa
xchg
addb
fldcw
dec
gs
cltd
cmp
jecxz
imul
divl
sbb
jl,pt
mov
mov
mov
fidivl
xchg
sub
loop
and
mov
into
cmp
pop
xor
icebp
repnz
pop
pop
push
out
cmp
lea
xchg
cmp
inc
xchg
jno
outsb
jns
outsl
jg
mov
mov
test
or
jl
pusha
cld
sub
xor
and
push
jecxz
inc
gs
dec
jp
aad
ret
mov
pop
cltd
mov
mov
mov
nop
xchg
ljmp
cs
xchg
push
pop
test
mov
push
dec
mov
data16
jecxz
scas
mov
adc
stos
dec
add
loopne
jge
add
mull
or
std
rclb
mov
out
movsb
mov
push
insb
inc
cmp
imul
inc
pop
fnstsw
cmp
stos
sub
in
popa
xcrypt-cbc
cmpsl
xchg
iret
je
mov
mov
mull
adc
add
or
push
cs
pop
sub
mov
movsb
xchg
stc
mov
and
mov
lret
sti
into
mov
or
in
cmpsl
cs
out
xor
loope
mov
mov
cwtl
andb
mov
ss
loop
xchg
adc
in
push
fldt
or
fsubrp
push
call
and
mov
mov
push
mov
and
push
arpl
push
inc
out
mov
add
mov
fildll
jge
rolb
pop
mov
aaa
add
int
mov
call
stc
mov
add
sub
jle
pusha
pop
sub
loopne
mov
xlat
mov
and
pop
dec
mov
mov
lods
leave
scas
fcmovu
loopne
aaa
add
xor
mov
test
dec
iret
mov
jne
jo
pop
mov
lahf
daa
scas
lods
push
mov
andl
repnz
ffree
lods
mov
pop
xor
push
fsubrl
fwait
stos
es
es
sbb
push
andl
xchg
push
cmc
pop
mov
jns
cmpsb
xchg
sub
loopne
add
jg
nop
jbe
mov
pop
push
mov
das
je
mov
mov
cmp
pop
out
sub
jnp
sub
call
jle
push
movsb
sub
adc
add
testl
xchg
outsb
call
cs
jge
loop
ja
loop
fxch
inc
or
ds
lcall
outsl
xor
jl
js
or
adc
mov
leave
lods
push
mov
test
shlb
sbbl
xor
xchg
mov
loope
dec
cli
add
iret
out
and
ret
lods
mov
xor
stos
jmp
and
ss
sbbb
cs
mov
cmp
sbb
dec
pop
sti
sub
and
ja
cmc
pop
and
test
push
out
cs
and
aaa
xchg
arpl
pop
mov
inc
fsts
inc
mov
into
in
repnz
inc
xor
jg
mov
pop
bound
les
adc
arpl
in
inc
arpl
fidivrs
mov
inc
push
movsb
repz
mov
jno
jno
push
test
psllq
stos
in
into
cmc
cmc
dec
mov
out
xchg
imul
add
and
jmp
stos
rorb
mov
lea
jne
xor
imul
scas
out
movsl
insl
cmp
movsl
pop
icebp
sahf
mov
add
adc
inc
roll
xchg
sub
dec
aas
into
fcoml
and
nop
addr16
push
popa
and
aas
or
mov
sub
jecxz
lds
sbbb
gs
in
aad
leave
mov
sarl
add
fisubrl
pop
fldcw
xor
pop
stos
dec
pop
sub
mov
mov
push
adcb
fstps
outsb
mov
out
fs
js
sub
xor
adcl
out
ss
adc
lods
mov
dec
outsl
mov
sbb
repnz
jno
stc
and
mov
pop
mov
call
or
push
fimuls
xchg
mov
pusha
fnstenv
cli
sbb
jmp
in
jnp
mov
add
shrb
icebp
push
pusha
inc
dec
sti
mov
push
or
or
adc
xor
push
ss
std
addr16
cld
mov
gs
clc
xor
loopne
int3
mov
sbb
add
sub
mov
mov
push
ds
icebp
ljmp
or
fdivrl
pop
test
cmpb
pop
hlt
pop
dec
sti
gs
and
lods
lahf
xchg
push
cmp
and
stc
ret
inc
pop
nop
dec
or
and
ret
pop
inc
addr16
jmp
mov
test
add
lahf
test
jae
xor
rol
mov
ds
xor
int3
push
fdivl
cmp
jbe
mov
dec
ss
in
fnstenv
insb
lahf
xchg
ret
bound
add
mov
popf
inc
add
testl
add
lahf
aad
jnp
shl
subb
jb
pop
mov
or
adc
sub
insb
mov
neg
mov
js
cmpl
sbb
lea
fidivl
repnz
and
jb
push
in
inc
xchg
dec
ja
cli
push
adc
xlat
push
movsl
shrl
mov
push
in
testb
add
or
cmp
push
mov
add
sub
xor
pusha
push
xor
cs
pop
fbstp
pop
daa
jno
cmc
jae
mov
jno
lea
es
pusha
scas
push
and
sarl
xor
add
dec
xchg
dec
pusha
push
test
jg
jecxz
jbe
adcl
int
push
mov
jae
xor
mov
dec
push
scas
sub
arpl
fcom
sub
inc
mov
pop
std
sbb
push
jns
add
fwait
mov
jnp
call
adc
int3
fcomp
das
sbb
sub
jmp
out
adc
jle
xchg
and
xchg
mov
dec
push
cmp
pop
dec
idiv
xor
mov
in
shll
pusha
iret
pop
add
xchg
and
into
and
mov
out
mov
lods
mov
ljmp
add
andl
or
mov
rcrl
xor
in
mov
sbb
mov
mov
sbb
sub
insb
inc
gs
dec
ror
xlat
xor
in
dec
push
popa
gs
outsb
add
sub
fimull
pop
and
pop
push
std
adc
rol
push
roll
popf
cmp
test
add
sub
push
mov
loope
push
lods
jp
xor
lods
fsubr
lcall
push
loopne
cmp
mov
fadds
push
cmp
sbb
adc
mov
fiadds
es
pop
and
jb
pop
fcmovnb
imul
pop
clc
add
out
test
inc
xorl
jnp
add
jnp
fnstsw
data16
cmpsb
dec
push
mov
orb
pop
mov
jno
in
dec
inc
push
and
fsub
sbb
sbb
and
and
lahf
test
jnp
fnstenv
mov
and
mov
loope
sbb
adc
pop
shll
daa
aaa
jge
iret
out
stc
les
push
sub
pop
rcll
xrelease
outsl
fimuls
mov
nop
dec
addr16
push
out
add
jb
jecxz
cmp
out
push
xchg
int3
repz
mov
lods
jbe
pop
cmp
vhaddps
rclb
cmp
insl
push
test
jg
fwait
mov
adc
add
popf
push
loopne
adc
push
lret
and
cmc
cli
scas
movsl
cmp
push
clc
cld
cmpsl
fdivr
mov
les
mov
daa
out
cmc
xor
loopne
je
jl
mov
loope
jns
mov
fdivrs
xchg
testl
pop
dec
push
xchg
incl
add
testb
inc
or
bnd
and
pop
push
jo
push
stos
movsl
in
add
mov
aas
inc
xor
es
sbb
cmp
add
dec
push
xchg
in
in
orl
imull
add
or
fprem
stos
mov
fucomp
test
dec
int
push
xchg
add
xlat
outsl
mov
sub
jb
or
cmp
insb
jbe
inc
xor
mov
cmp
adc
adc
or
push
addr16
inc
and
daa
mov
testl
jge
movsb
jns
fisubrs
xor
or
aaa
fwait
scas
ficoms
jp
sbb
jmp
cmp
dec
mov
mov
call
gs
std
add
sub
dec
out
sub
or
das
pushf
cmpsb
sub
xchg
pop
cmc
mov
addb
add
push
cwtl
or
pop
aas
lea
loop
fsubrl
fsubl
leave
test
ficoml
jo
arpl
dec
sub
dec
mov
insl
jl
xor
push
pop
add
sub
xchg
xor
cmp
mov
mov
js
les
test
cmpsl
jl
hlt
cltd
push
scas
in
cmp
movsl
enter
movsb
dec
push
add
add
nop
leave
les
mov
cltd
dec
je
ljmp
into
mov
xchg
test
push
xchg
mov
sbb
xorps
in
shlb
jl
push
jbe
inc
int3
adc
dec
ret
sub
pop
ficomps
push
lahf
out
test
mov
data16
mov
movsl
jns
pop
dec
sbb
jge
movsl
arpl
adc
es
mov
or
arpl
xchg
push
inc
mov
lret
mov
or
pop
cmc
xor
xchg
pop
iret
cli
adc
sbb
cmc
mov
test
ss
mov
cld
aam
sbb
addr16
add
imul
jle
insl
loopne
mov
sahf
dec
or
sbb
lods
add
pop
push
je
push
dec
push
mov
jno
and
mov
outsl
push
dec
in
push
fists
orb
shll
mov
jbe
fcoml
jbe
lods
or
test
int3
adc
lret
jge,pt
or
sub
loopne
das
ficoms
mov
push
dec
sub
cmp
hlt
sub
cwtl
dec
sub
das
mov
push
and
jae
or
mov
icebp
or
push
popa
mov
sub
push
sub
xchg
adc
out
jo
xlat
iret
mov
outsb
in
ljmp
jbe
sbb
mov
mov
jl
push
push
push
aas
dec
mov
xchg
cwtl
inc
popa
jne
push
or
jmp
in
xchg
sahf
or
imul
sahf
mov
jb
mov
cmp
xchg
dec
shrl
fstl
ljmp
jnp
rclb
sub
and
popa
jmp
dec
lods
push
cli
orb
or
add
in
sti
pop
mov
fcomip
xor
dec
mov
dec
pop
loop
mov
je
shrl
outsl
lods
cmp
imul
ficoml
or
sub
sub
jb
sub
iret
and
cmpl
jg
pop
dec
jmp
cmp
mov
xchg
dec
in
adc
pusha
pcmpgtd
mov
or
subl
mov
push
movsb
insl
addr16
fiaddl
sub
sub
jno
je
jecxz
das
cli
dec
ret
pop
sub
add
jb
mov
mov
or
and
mov
xor
insb
adc
mov
and
dec
notb
pop
and
lcall
sub
in
pop
and
ret
scas
jns
shrl
mov
xchg
jle
jp
int
cmp
lods
cmpsl
in
bound
mov
mov
pop
dec
add
xchg
mov
addr16
int
jns
cmpsb
shl
xchg
adc
mov
fwait
xchg
xor
adc
cmc
hlt
and
xchg
arpl
ret
push
add
in
push
subb
data16
daa
xchg
push
xchg
pushf
pop
lock
mov
xor
fmul
or
push
mov
addl
sub
sbb
and
ja
mov
mov
icebp
dec
insl
jmp
bound
or
xchg
mov
mov
movsb
cmp
push
dec
sti
sub
or
daa
es
popf
fistpl
mov
repnz
push
fistpll
je
lock
cs
cs
adcl
incl
and
and
fs
adc
int
ror
shll
outsl
mov
aas
push
dec
shl
jnp
movsb
test
sub
into
idiv
dec
nop
scas
or
fstl
inc
cmc
adc
sbb
cld
mov
and
negl
shll
inc
outsl
lods
cmc
cmp
pop
test
fcoms
mov
push
add
std
cmpsb
aam
add
inc
xor
enter
mov
data16
xchg
outsb
dec
clc
testb
mov
inc
lods
stc
ret
lds
in
dec
nop
add
popl
popf
out
shrl
inc
out
int
hlt
cltd
es
or
sbb
fldcw
out
pop
jmp
add
ljmp
mov
int3
inc
mov
cmpsb
sbb
cmp
je
ss
cmp
jmp
pop
inc
mov
aaa
xor
dec
push
or
loop
pushf
decl
sbb
mov
data16
fmuls
or
jb
je
xor
pop
jmp
jg
pop
cltd
push
popa
icebp
popa
fildll
xor
lahf
pop
cmp
outsb
cmp
jbe
mov
pop
inc
dec
push
clc
or
add
dec
imul
cmpsb
mov
test
aaa
xchg
sub
jb
outsb
sub
inc
push
sbb
lods
les
and
cmpsb
dec
jmp
jg
shrb
cmp
mov
cmp
in
in
jle
into
pusha
dec
jge
les
xlat
jle
or
not
xor
adc
sahf
je
jecxz
jp
mov
daa
int3
jecxz
xchg
int3
and
lods
xor
xchg
pop
pop
push
lods
orb
mov
and
cli
inc
mov
cltd
mov
dec
mov
sbb
sub
dec
adc
mov
jno
jmp
pop
and
sbbb
mov
sub
andb
stos
cmp
push
pop
mov
push
sub
outsl
pusha
push
jle
je
adc
int3
mov
movzbl
mov
or
fisttps
repz
mov
scas
add
inc
cwtl
sti
jno
in
test
mov
in
aad
mov
aam
xchg
call
add
insl
pop
lock
mov
dec
jmp
mov
arpl
mov
mov
add
adc
add
fucomp
inc
mov
xor
and
sub
xor
fst
dec
scas
sbb
or
rorl
dec
mov
imul
sub
addr16
daa
lahf
jne
stc
mov
shrl
insl
add
xchg
xor
pop
addr16
jle
lcall
les
adcb
minps
xor
scas
ja
loopne
add
movsb
mov
mov
add
out
add
jle
es
mov
enter
mov
inc
and
jecxz
jbe
jle
sti
inc
mov
cli
xchg
jecxz
push
adc
out
mov
into
or
dec
adc
pop
or
dec
movsb
push
xor
pop
xchg
cmpl
jge
and
cld
stos
mov
jne
outsb
push
add
negb
adc
xchg
pushf
jge
jnp
fnstenv
add
jno
jl
add
popf
popf
sarb
fistpl
xchg
sbb
dec
scas
daa
movsb
mov
fst
push
test
mov
int3
cli
jns
lret
pop
mov
loopne
mov
nop
fwait
xchg
sub
jo
or
repnz
out
lods
inc
fsubl
pop
sarb
aam
clc
pop
movsl
cli
shrb
mov
dec
lods
lock
sub
aas
fnstsw
inc
or
xchg
rcrb
mov
push
arpl
aas
or
lods
aaa
xor
pop
stos
loope
loopne
fucomip
xchg
mov
xchg
jmp
mov
orb
inc
adc
and
sbb
inc
popa
std
sbb
lret
mov
fisubrl
in
adc
adc
pop
fcmovnu
xchg
mov
and
lock
push
xor
pop
lret
js
sbb
push
dec
ds
xchg
push
jecxz
shrb
mov
inc
mov
stos
les
imul
xchg
or
cli
in
mov
mov
sbb
negb
cmpsb
adc
add
inc
outsb
pushf
out
cmc
inc
lret
shrb
pop
iret
es
push
adc
jo
pop
loopne
out
xchg
or
add
jnp
mov
pop
popf
or
cmp
mov
test
push
andl
mov
jno
add
cmp
fadds
out
add
xor
repz
out
jecxz
dec
push
imull
push
negl
mov
lods
xchg
lods
loopne
pushf
lock
xchg
repnz
mov
add
push
mov
shll
rol
dec
or
add
mov
pop
rorb
cmp
lds
mov
fdivl
cmp
sbb
out
pop
mov
xchg
dec
mov
mov
std
pop
push
inc
test
xchg
leave
mov
adc
fistps
and
stc
xor
pop
xlat
lods
out
fs
lcall
fiadds
loope
mov
movsl
mov
lret
pushf
xchg
mov
scas
sub
xchg
inc
in
insb
mov
mov
pop
mov
popf
insb
or
xchg
ja
call
sub
push
inc
sbb
pop
outsb
clc
inc
push
mov
adc
add
js
xor
xchg
inc
and
pop
dec
mov
daa
pop
sub
repnz
and
stc
or
mov
pop
xchg
cmp
outsb
lock
mov
ret
push
test
jnp
inc
sub
sbb
fs
lret
mov
adcl
pop
negl
roll
in
dec
repz
or
push
imul
in
jno
mov
mov
into
inc
adc
insb
pop
daa
dec
dec
sahf
daa
pop
pop
inc
cli
mov
push
mov
idivl
cwtl
lods
and
addr16
jae
sbb
stos
mov
sti
mov
adc
lea
mov
cmpsb
mov
lock
in
and
movl
sbb
lret
mov
mov
jp
std
and
notb
xchg
push
push
inc
in
add
xchg
ljmp
in
sub
bnd
cmp
adc
cmp
lret
fildll
arpl
cmp
cmp
xchg
adc
cmp
pop
dec
test
lret
dec
or
call
and
sbb
in
push
xchg
xchg
cmc
mov
xor
lcall
or
rcrl
lock
jmp
xchg
lahf
inc
jl
xchg
add
sbb
adc
cli
mov
int
pop
scas
mov
out
jp
adc
ret
pop
pop
stos
test
fcom
pop
out
aaa
xchg
shr
xor
sbb
int3
sub
mov
lea
mov
in
or
out
pop
pusha
or
mov
aaa
movsl
push
daa
ljmp
and
dec
sub
in
mov
out
xchg
xrelease
xor
in
mov
jae
pop
sub
jmp
lahf
push
add
mov
out
pop
push
js
or
add
mov
mov
push
popf
aaa
test
mov
in
loop
call
ret
add
nop
mov
xor
and
jne
adc
push
push
stos
jge
rcr
xor
cmp
sbb
lcall
sbb
ror
jo
mov
pop
insb
mov
xchg
push
ds
mov
adc
push
push
stc
lret
cltd
xchg
push
inc
imul
fsts
xchg
dec
push
fisttps
stos
sbb
test
xchg
in
std
pop
aaa
ja
lods
mov
pushf
outsb
rolb
sbb
cmpsb
and
les
xor
das
cmpl
cltd
in
push
int3
lahf
inc
cli
add
ljmp
xchg
sub
aaa
mov
or
iret
fs
mov
push
mov
scas
lret
pop
lcall
mulb
clc
cmp
sub
jp
mov
push
insb
cmp
lcall
pop
mov
into
xor
imul
ret
and
gs
stos
fstpl
icebp
add
stc
mov
sub
or
in
inc
add
mov
pop
jb
xor
xchg
mov
mov
mov
clc
lret
jbe
add
fldcw
dec
out
test
popa
adc
mov
mov
mov
fs
jae
divb
jmp
mov
mov
in
enter
fadds
jmp
pop
stos
mov
jo
mov
nop
jle
inc
ds
sub
shll
mov
pusha
hlt
test
lds
outsl
jnp
cmp
inc
sub
mov
popa
dec
xchg
and
or
jne
xchg
icebp
push
xor
jl
stos
jg
lahf
call
jecxz
cld
int3
movsl
cmpsl
negl
xorw
sbb
fmuls
sbb
mov
ss
mov
mov
inc
lods
jp
sbb
in
mov
add
stos
adc
bound
mov
or
add
push
cmc
push
xor
push
sbb
sbb
lock
hlt
ret
sbb
cmp
dec
jbe
imul
idivb
loop
lcall
fstps
lret
setge
add
mov
in
int3
int
push
adc
jne
sub
inc
jae
mov
mov
push
and
out
loope
stc
les
mov
in
xchg
push
pop
fxch
xor
pushf
int3
cmp
aaa
fdivs
xchg
pop
es
hlt
outsl
dec
loope
in
imul
cmp
addr16
stos
lds
inc
rorb
dec
push
mov
pop
rcll
jae
inc
fwait
je
xchg
dec
xchg
push
cmp
dec
mov
in
rcll
fwait
xchg
out
xor
xchg
adc
adc
repnz
adc
pop
test
scas
adc
dec
je
xor
ds
neg
add
dec
fmuls
movsl
push
sub
ficomps
insb
divb
mov
aam
and
sub
push
jmp
cmp
adc
lret
ds
adc
add
xor
add
lea
dec
push
add
push
cmpsb
cmp
mov
fimull
addb
mov
adc
xor
sub
imul
or
orl
sub
jp
cmp
mov
and
dec
mov
adc
mov
pop
and
jmp
mov
lret
sti
into
sbb
gs
push
and
dec
fildl
lea
mov
pop
or
or
clc
sub
aas
cmp
pop
mov
fdivrs
lret
ret
mov
lret
in
and
popa
mov
sbb
xchg
movsl
sahf
js
mov
inc
out
test
add
hlt
mov
outsb
cltd
cmp
scas
push
fincstp
sbb
test
clc
fimull
push
ds
iret
fsubp
jl
cmpsb
cmp
sbb
push
push
sti
push
xchg
add
jg
inc
mov
inc
lahf
ljmp
mov
sub
push
imul
dec
sub
mov
inc
push
inc
add
xor
fidivrl
test
sbb
xchg
inc
sbb
mov
fdivrp
dec
push
cmpsb
pop
ror
cld
incl
cmovp
sbb
pop
or
les
jae
gs
or
push
push
out
sub
jmp
movsb
ljmp
rcll
ret
es
sarb
out
ljmp
pop
cmp
lea
jb
pop
and
popa
aam
mov
mov
repz
rolb
jp
sbb
mov
lock
push
lcall
adc
or
add
gs
inc
cli
das
xor
mov
xlat
cwtl
cmpsb
sub
mov
adc
in
push
xchg
stc
inc
rorl
mov
xlat
mov
in
cmpsl
push
dec
push
mov
mov
mov
fmull
mov
mov
stos
mov
mov
mov
jmp
hlt
sti
sub
testb
jmp
xor
rcll
dec
adc
sub
movsl
stos
test
mov
adc
mov
jg
mov
mov
adc
pop
es
inc
inc
out
fists
and
push
daa
inc
ds
xchg
in
add
mov
ds
mov
call
push
popf
add
push
inc
insb
and
aas
int
cltd
dec
add
mov
rcrb
xchg
ja
gs
sbb
add
scas
arpl
cmp
xor
gs
fidivl
mov
shrl
gs
insl
or
mov
icebp
arpl
lahf
and
jae
stc
das
loopne
sub
fmull
mov
ret
mov
dec
in
idivb
cwtl
inc
and
enter
ret
sbb
ret
lret
data16
pusha
and
arpl
mov
pop
jp
and
and
fs
out
dec
or
and
inc
push
loop
mov
and
imul
jmp
push
sti
inc
lcall
enter
icebp
out
loop
jge
outsl
gs
fs
lds
cmp
mov
test
clc
mov
mov
push
mov
xor
andb
insb
xchg
jmp
or
loope
pushf
mov
cli
adc
stos
sahf
sarl
mov
pushf
cld
dec
sub
ret
jmp
pop
xchg
out
nop
add
cmp
xchg
adc
sbb
xchg
jno
imul
add
aaa
mov
cmp
in
mov
out
stc
orb
in
cmp
insl
loop
js
pop
inc
adc
fnstsw
push
neg
push
sub
mov
xor
xchg
inc
pop
lods
mov
cmpsb
mov
cmp
add
xor
gs
gs
xor
adc
or
adc
fstpl
das
test
in
fstps
in
push
fs
lahf
pop
not
pop
mov
cli
or
mov
jae
cmp
addr16
pop
adc
shrl
jnp
dec
mov
pop
ss
sbbl
push
dec
push
imul
das
push
insb
les
or
dec
bound
outsb
ficoms
lcall
rorb
ljmp
in
fisubl
dec
fmull
xchg
and
jne
add
mov
jmp
add
jp
sub
mov
pop
or
xor
mov
mov
add
movsb
mov
enter
jbe
xchg
adc
mov
xrelease
xor
jp
jp
divl
or
cmp
pushf
ds
xor
cmpsl
add
movsb
in
aas
xlat
mov
shll
xlat
mov
pop
xor
popa
xchg
idivb
mov
xor
mov
mov
or
shlb
icebp
adc
insl
mov
outsl
xlat
xchg
ret
sbb
pusha
cmpsl
mov
dec
push
push
pop
jle
clc
pop
mov
push
jae
mov
mov
aam
in
repz
jp
cld
xor
jbe
mov
aas
ss
or
enter
push
imul
pop
fnstsw
lods
test
stc
xor
bound
fistpl
sub
xor
add
aam
fsub
sbb
sbb
fistpll
and
adc
sub
sub
xchg
mov
inc
scas
std
lea
jecxz
cmpsl
aam
cmp
scas
jbe
mov
aaa
dec
and
popa
test
mov
cmp
inc
fs
aaa
add
les
adc
jle
fildll
rcr
pop
in
out
aam
enter
xor
jnp
inc
pop
daa
bound
mov
jmp
push
sbb
cmp
add
mov
addl
inc
loop
in
mov
arpl
gs
xor
loope
xorl
sbb
inc
fstpl
enter
repz
js
fisubrs
dec
stc
or
cltd
sub
aad
jle
xlat
pop
xor
pop
int
adc
push
xchg
ficompl
mov
or
push
stos
sub
test
sub
add
pop
jo
inc
iret
jecxz
sbb
popf
stos
push
pop
xchg
fldt
stos
cmp
push
mov
mov
lds
lahf
icebp
rcll
dec
cmp
pop
out
aam
out
lfs
or
pop
clc
mov
inc
push
loop
or
fsubs
jns
ljmp
test
mov
or
jbe
jecxz
jae
cmpsb
lock
adc
outsb
xchg
inc
push
rcrl
mov
push
nop
ja
inc
and
dec
sbb
int
add
aad
lahf
push
mov
jl
out
outsb
cmp
mov
pop
pop
jle
jnp
push
cli
insb
xchg
insl
jmp
sbb
and
pop
sbb
dec
mov
in
imul
aas
and
mov
mov
pop
repnz
imul
scas
push
stc
fsubrs
pop
jnp
inc
dec
dec
add
or
fst
icebp
fimuls
ljmp
cmp
divb
xorb
movsl
sub
aam
outsl
inc
xchg
scas
test
or
mov
je
ror
pop
sub
mov
fucom
movaps
sub
dec
fwait
sub
cli
imul
pop
fiaddl
jmp
xchg
inc
out
daa
repz
or
adcl
xlat
push
test
sbb
add
ret
inc
pop
fs
mov
xchg
and
adc
adc
xor
pop
ds
xor
stos
inc
into
mov
or
les
pop
xchg
jmp
pop
aam
movsb
in
lds
jge
sub
gs
in
arpl
push
inc
imul
add
imulb
int3
arpl
mov
mov
stos
jnp
adc
jg
inc
cmp
mov
rclb
bound
or
fsubrl
sub
xchg
cmpsl
push
dec
cmp
fstl
mov
pop
mov
iret
xchg
pop
mov
pop
xlat
jnp
mov
in
mov
es
int
add
inc
inc
sub
jmp
mov
iret
arpl
cmpsb
push
mov
mov
imul
fs
out
inc
inc
mov
jmp
jp
jo
jecxz
in
push
enter
sub
xor
xchg
jp
or
jae
xchg
jbe
out
scas
test
movsl
loop
or
mov
insb
into
jbe
push
jns
mov
inc
sbb
stos
push
mov
jp
hlt
rcl
pop
hlt
add
in
out
add
js
in
and
dec
add
jo
je
repnz
pop
or
mov
call
dec
add
add
jns
loopne
mov
sub
inc
in
xlat
sti
mov
in
clc
cmpsb
cmp
push
mov
iret
enter
cmp
fwait
push
dec
cmp
jae
mov
into
rorl
mov
push
push
pmulhw
push
ffreep
and
cmpsl
je
sti
push
sub
jnp
stos
pop
cmpsl
pop
pop
je
repz
and
add
out
and
push
push
jne
lret
fs
mov
sub
add
ljmp
imul
test
dec
jo
xchg
mov
mov
sub
aas
aad
inc
das
movl
xchg
rcll
push
xchg
les
fs
pop
stos
or
sbb
xchg
mov
add
out
bound
pop
test
push
or
fmuls
jl
xor
xor
insl
and
jmp
es
mov
das
pop
jcxz
xor
arpl
scas
clc
mov
popf
rorl
in
inc
aas
ds
push
es
ljmp
push
ret
adc
mov
push
negl
aad
cld
cmp
jb
mov
jl
pushf
fnsetpm(287
arpl
nop
adc
stos
lods
sbb
mov
add
and
ss
outsb
and
mov
in
cmp
xchg
adc
stos
mov
mov
mov
sbb
in
das
cmp
std
outsb
jl
and
push
nop
push
pop
filds
lock
iret
pop
xor
jne
xor
fwait
push
push
inc
fs
cmp
sub
ss
stos
add
cld
mov
sub
or
sbb
out
or
fiaddl
ljmp
out
pushw
jle
mov
pop
inc
cmpsb
mov
cwtl
lret
inc
jecxz
mov
mov
aaa
inc
adcb
push
adc
stos
ss
out
dec
scas
lods
cs
scas
adc
mov
jecxz
loop
ret
jmp
loopne
jbe
scas
xchg
mov
push
mov
lret
dec
pop
pop
das
testl
int
sbb
pop
out
call
and
call
cmp
and
lahf
sub
sub
push
bound
lahf
add
push
mov
iret
hlt
pop
addr16
and
or
add
repnz
popf
jp
xchg
sub
dec
or
ds
in
aaa
xchg
cwtl
imul
repnz
nop
lret
cmc
pop
pusha
mov
mov
sub
inc
xor
data16
push
test
mov
mov
dec
ds
dec
xlat
jbe
leave
insl
movsl
stos
in
adc
arpl
mov
add
lea
inc
or
enter
sub
pop
gs
mov
or
bound
inc
add
out
lods
push
lock
jnp
pop
loope,pn
test
fs
test
add
aas
bound
add
cmp
repz
sbb
mov
fs
in
mov
xor
rep
and
mov
jg
xor
lods
loop
test
push
divl
out
pusha
mov
aad
cmpsb
and
adc
push
xchg
jmp
inc
shll
lahf
push
jge
repnz
in
push
sbb
je
fwait
outsb
pop
inc
psllq
or
inc
lds
jg
lods
add
in
mov
hlt
sbb
jnp
flds
nop
test
mov
mov
push
jmp
repz
scas
lods
mov
mov
pusha
mov
add
stos
or
sub
sti
mov
adc
out
xchg
mov
test
pop
fidivrl
nop
mov
inc
cmc
and
push
xchg
out
es
divl
fdivrl
xchg
dec
mov
pop
adc
clc
shlb
xorb
fldt
mov
ljmp
inc
arpl
lahf
out
andb
sub
insl
sub
sbb
roll
data16
insl
fs
xor
pusha
sub
rcrl
fmuls
jle
lret
sbb
pop
push
sahf
jle
leave
push
outsb
in
xor
pop
loope
loopne
add
iret
pop
xchg
lds
int
add
push
cltd
mov
into
or
push
rorl
jae
stos
fisttps
mov
je
push
and
ja
mov
rclb
data16
dec
mov
addr16
repz
xorl
bound
inc
loopne
pushf
fisubrs
fidivl
mov
and
jo
ficompl
inc
dec
test
mov
xor
shll
into
mov
cltd
jl
pop
pop
notb
dec
jae
je
dec
out
sbb
test
mov
aad
rorl
loope
adc
int
in
and
mov
jbe
lahf
std
loop
dec
jnp
in
xor
xchg
xor
addr16
jb
out
das
pop
mov
xchg
sub
mov
jmp
mov
jae
sbb
cmp
sub
fadds
xor
pop
mov
mov
dec
inc
in
sub
lods
lcall
adc
in
in
or
push
xchg
test
test
cmp
ljmp
inc
test
mov
jae
mov
and
jecxz
jp
test
mov
or
lahf
xchg
xchg
in
jns
divb
jmp
inc
cld
repnz
cmp
xor
loope
lods
mov
js
mov
xchg
sub
cmp
sub
dec
push
daa
loopne
jno
xlat
xchg
and
pop
scas
sub
inc
jb
rorl
cwtl
adc
jg
je
or
fdivr
call
add
leave
sub
inc
adc
xchg
mov
pushf
jge
ljmp
mov
insb
dec
fs
leave
jne
mov
jo
dec
or
dec
xchg
jge
popf
mov
mov
cmp
pop
push
push
mov
pop
push
pop
push
repz
adc
movsl
or
mov
or
or
lock
or
mov
popa
cs
adc
repnz
cmp
mov
lahf
data16
std
clc
out
xlat
or
mull
mov
xor
cmp
imul
and
mov
or
js
xor
fwait
outsl
inc
mov
gs
xor
sub
imul
pop
mov
lds
sbb
loop
sti
push
add
mov
push
imull
in
jno
pusha
cld
xorl
add
out
imul
fimuls
sub
in
js
or
aad
mov
in
scas
lods
iret
mov
push
mov
shll
aam
out
lock
mov
or
nop
fidivs
add
shlb
popa
and
cmp
sub
fisubl
sub
push
cli
dec
loop
cmpsb
ret
inc
dec
xchg
addl
cmpsb
lahf
mov
adc
inc
adc
xchg
loopne
add
popa
pop
push
xchg
push
inc
sub
leave
repz
add
dec
imul
arpl
paddq
cmp
jb
mov
jb
push
push
fisubrs
cld
mov
mov
outsl
aam
lcall
test
das
xorl
cmc
and
add
mov
adc
test
cmp
jns
inc
mov
mov
jge,pn
in
out
inc
cltd
push
mov
and
dec
out
mov
cwtl
and
sub
aad
pusha
rorl
adc
in
push
outsb
out
and
fmuls
jns
and
in
cmp
mov
icebp
xor
aas
ss
loop
das
xchg
xchg
push
jb
inc
mov
jns
jno
sbbl
rol
adc
cltd
dec
js
lcall
push
dec
push
mov
adc
icebp
mov
xor
das
jge
mov
mov
cmp
in
dec
dec
xor
push
jo
lret
push
ja
aaa
push
cmp
mov
adc
and
xchg
mov
aas
int3
fcmovnb
jmp
dec
shrb
jp
lcall
popa
shrl
inc
push
js
scas
jp
pop
xchg
sbb
xor
sub
imul
hlt
and
push
mov
aaa
outsb
sub
pop
xlat
ret
add
fs
fisubs
pusha
pop
pop
mov
es
sbb
aaa
push
or
fdivrs
inc
and
into
clc
push
push
xchg
mov
rclb
fisubs
jno
sub
and
fchs
ljmp
cmp
and
mov
bound
cmpsb
push
jo
jle
testl
sahf
je
xchg
les
das
sbb
scas
xchg
push
lcall
je
out
xor
pop
stos
inc
xor
rolb
cmc
shll
mov
ljmp
pop
out
int3
je
out
mov
mov
lcall
and
jnp
mov
mov
and
cld
push
ret
int3
pushf
mov
test
pop
lds
sbb
adc
pushf
movsl
jne
lods
cld
call
sbb
sub
xchg
in
add
jg
shrb
ds
inc
fs
adc
or
std
out
daa
cmpsb
push
ja
stos
cli
push
push
sbb
xchg
pop
and
in
sub
std
imul
sub
mov
sbb
hlt
sub
jmp
cmp
ljmp
pushf
loop
bound
cmp
push
ds
or
and
sub
test
adc
xchg
push
loop
pop
in
add
xchg
jg
jle
pop
mov
xchg
jb
imul
mov
pushf
lret
clc
mov
aad
shrl
insl
inc
push
das
mov
sub
aam
pop
cmp
lcall
cmp
jno
pop
jne
jno
add
lods
int3
lock
in
xor
inc
aas
idivb
push
sub
cltd
incb
sub
jo
push
std
stos
push
fldcw
inc
shll
push
ja
mov
jo
out
ja
lahf
xchg
sti
sub
imul
rorl
cli
sbb
js
mov
lahf
mov
mov
movsb
xor
roll
add
popa
ret
cld
popl
or
xchg
pop
lcall
repnz
mov
mov
xchg
jmp
cltd
or
mov
popf
dec
call
mov
loop
and
xchg
test
jmp
inc
jge
imul
pop
insl
pusha
je
daa
imul
or
sahf
inc
mov
add
ror
or
cmp
dec
andb
pusha
cmp
pop
shll
ss
nop
jl
pushf
adc
mov
leave
jno
sbb
sbb
pusha
loop
dec
xchg
adc
lds
shl
das
into
js
pop
les
adc
pop
mov
outsl
clc
xor
int3
loope
jmp
mov
mov
daa
stc
push
call
cld
push
push
aaa
mov
loopne
loope
daa
jb
or
and
pop
xchg
cli
pop
lock
cmpsl
icebp
sbb
into
lock
adc
sub
mov
jae
sub
out
xor
inc
fsubrs
or
inc
jg
ss
cmp
push
aam
movsb
mov
cmp
ficoms
lock
ss
leave
push
cmp
sbb
xchg
and
sti
jo
xor
mov
fwait
sarb
rol
cmpsb
fdivrl
lret
and
into
mov
stc
popf
cld
mov
dec
orb
xchg
push
jecxz
scas
mov
int
addl
adc
xchg
cmpsl
jl
in
xchg
inc
mov
scas
and
pushf
mov
dec
js
pusha
shrb
xorb
push
sti
or
lret
movsl
imul
lods
mov
mov
and
inc
out
loopne
ljmp
add
pop
or
mulb
nop
cmpb
cmp
rcl
movsw
pop
adc
into
dec
not
lret
cmp
fwait
jae
mov
mov
insb
push
sub
add
icebp
jae
sahf
aas
push
push
mov
rcrl
shr
mov
push
cmc
inc
loop
dec
in
mov
mov
sarl
jp
sub
cld
xchg
cmp
sbb
in
mov
into
inc
fnsave
gs
popf
sub
in
lods
pop
ret
pop
xchg
lahf
dec
lret
movsb
sbb
inc
sbb
aad
test
in
popf
jmp
sub
hlt
jmp
movsl
into
mov
pop
cmp
mov
bound
out
jae
adc
push
frstor
or
mov
adc
jmp
cs
outsb
adc
into
and
inc
jo
inc
jle
repnz
xchg
popa
mov
push
outsb
jge
je
testb
rorl
in
repnz
in
rclb
push
in
rclb
xchg
fcoml
loopne
mov
push
iret
filds
dec
mov
xrelease
pop
es
mov
xchg
mov
enter
test
lock
adc
out
mov
jmp
in
ficoml
xchg
jge
push
sti
enter
adc
gs
pop
sbb
stos
sbb
mov
push
xor
dec
into
adc
test
insl
repz
fstl
dec
test
add
and
cmpsl
mov
icebp
scas
cli
insb
outsl
jb
adc
fimuls
test
pop
cld
adc
cmp
insb
cld
pop
pop
cltd
into
cmp
dec
popf
push
lods
or
pop
mov
mov
push
js
pop
aas
or
inc
cmp
cli
aam
iret
cs
in
aad
fldcw
cmp
adc
push
xlat
lods
leave
popf
repnz
popl
jo
es
push
dec
in
adc
sahf
negb
jmp
pop
int3
je
add
mov
subl
stos
xchg
or
sbb
inc
and
lock
std
cmc
rcr
int3
jg
movsb
dec
push
mov
rol
por
sbb
dec
adc
in
add
pusha
inc
jb
xchg
ja
repz
jae
cmp
cli
mov
fsubl
std
das
pop
add
mov
outsb
cmpsb
cmp
mov
stos
std
cmp
push
cmp
popf
jmp
push
cmc
push
sarb
roll
repnz
adc
mov
push
sbb
sub
imul
movsl
sbb
inc
jne
pushf
mov
xchg
sbb
add
ljmp
icebp
and
mov
jo
add
add
lahf
jp
in
xchg
cmpsl
xlat
xchg
stc
mov
in
jnp
lods
push
faddl
sub
and
push
int3
pop
pop
push
pop
inc
gs
sbb
mov
push
aaa
insb
faddl
mov
scas
or
and
mov
or
out
xor
test
mov
fsubrl
sbb
gs
insl
es
enter
pop
fsubl
or
dec
divl
jbe
in
sub
jae
fs
insl
cmp
and
test
fsubl
push
mov
out
sbb
add
rcrl
cltd
insl
mov
cld
push
icebp
call
ds
pop
stos
je
aam
popf
dec
or
in
cmc
test
inc
add
inc
dec
fadds
or
pop
xchg
popl
adc
pop
sbbb
into
inc
pop
in
jb
cwtl
add
imul
nop
xchg
addb
dec
push
mov
subl
pop
cmp
repnz
jl
stc
subb
cmp
jb,pt
or
mov
xchg
push
and
mov
idiv
and
mov
hlt
test
ficomps
negb
and
stc
pop
sbb
ja
cwtl
and
pop
ficoml
lods
dec
dec
cmp
add
dec
imul
or
arpl
xor
and
mov
ja
inc
xor
scas
mov
mov
mov
adc
mov
scas
sarb
sub
and
scas
sbbl
bndldx
cmp
repnz
add
gs
push
mov
test
jge
adc
or
aaa
mov
daa
not
test
notl
jl
jge
hlt
inc
add
jbe
dec
mov
xor
pop
ret
jl
fidivrs
stos
fprem1
mov
fstpl
push
mov
lret
std
dec
cltd
xchg
pop
pop
test
cmp
fcmove
aas
dec
lods
cld
lds
sub
insb
fistl
pop
add
mov
dec
or
adc
pusha
cmpsl
pop
lahf
sbb
out
xor
js
cmpsl
sbb
dec
cmp
negb
pop
xor
add
loope
xchg
dec
cmp
add
sti
enter
jb
sbb
or
cmp
dec
out
ds
or
mov
fs
mov
lds
mov
loop
into
pop
push
ret
fisttps
addb
add
pop
mov
stos
insl
mov
loope
out
mov
sbb
lea
cmp
lds
cld
ds
and
movsl
in
gs
inc
fisubrs
pop
lds
cmc
push
cmpb
mov
lahf
test
cli
xor
adc
jl
outsb
add
sti
fldenv
mov
in
shll
stos
dec
nop
add
les
das
inc
daa
and
subb
ficoms
cli
and
into
xchg
addr16
sub
dec
movsl
orl
pop
cltd
xchg
lcall
or
inc
es
mov
jle
pop
imul
lea
fwait
cmc
mov
leave
xchg
and
call
out
and
jecxz
lcall
jp
cs
adc
dec
fs
and
cltd
cwtl
rolb
push
sbb
mov
pop
push
adc
push
push
jo
add
popf
jle
stc
lcall
cmpl
xor
jno
pop
das
dec
lahf
mov
xchg
xor
inc
insb
jne
repnz
xor
pop
adc
xsha256
cmpsb
push
addr16
cmc
mov
les
jno
loope
sub
dec
int
ja
sbb
pop
lahf
test
mov
imul
xchg
pop
mov
lcall
test
jb
test
cmp
cmpsb
inc
push
addl
add
cmp
dec
pop
adc
mov
movsb
cld
pop
aaa
out
xor
aam
cltd
mov
outsl
cli
arpl
icebp
jne
paddsw
inc
lods
xchg
popa
iret
cmc
jno
aad
inc
loop
clc
mov
call
and
add
xchg
es
es
add
rcrl
mov
addl
cmc
mov
mov
dec
rcr
cmp
sbb
push
or
fsts
cmp
mov
shlb
ss
mov
push
rcl
push
inc
sub
ror
pushf
push
mov
cwtl
inc
sarb
stc
jg
add
mov
inc
sbb
and
adc
xor
dec
push
lret
xlat
sbb
pop
xchg
cmp
in
and
mov
xorl
sti
std
in
xchg
fisubl
in
rcrb
cwtl
jns
adc
jbe
subl
pushl
repnz
in
popf
into
cld
mov
mov
jbe
push
lcall
repz
fwait
sbb
std
add
push
push
jg
fldl
cmc
jle
jo
test
ljmp
mov
sbb
lea
mov
jecxz
aas
scas
cltd
adc
xchg
cmpsb
ret
notl
pop
testb
xchg
mov
jne
sti
in
fisttpl
sub
add
es
pop
add
sub
je
mov
sub
jge
mov
cmp
mov
dec
pop
mov
mov
ljmp
xchg
or
test
adc
adc
push
fdivrl
popa
or
jnp,pt
or
add
add
mov
xchg
shrl
dec
out
aad
sbb
sub
enter
imul
xchg
movsl
dec
lcall
call
fildl
in
iret
mov
in
or
sub
stos
fwait
mov
or
ret
fs
icebp
daa
push
dec
dec
je
pop
dec
mov
mov
enter
xor
cmpb
sub
pop
jge
roll
andl
sbb
arpl
mov
sub
das
dec
in
rcrb
inc
adc
pop
push
pop
scas
or
xor
cltd
adc
in
shrl
adc
inc
pop
dec
fwait
inc
aad
dec
dec
js
repz
sti
stos
outsl
std
shrb
cs
xor
or
inc
fimull
inc
cli
ret
jecxz
repnz
lea
xchg
imul
mov
jecxz
sub
pop
movsb
adc
jne
popa
fbstp
faddl
cwtl
aaa
and
sbb
adc
imul
nop
pop
repz
test
bound
loope
and
mov
and
dec
inc
xor
popa
inc
mov
lock
jne
xor
mov
leave
adc
pop
aam
ds
jp
shr
lcall
cltd
ja
loop
lds
mov
aad
test
icebp
jg
fstl
adc
outsb
stos
push
sbb
mov
cmp
in
add
sub
fcomps
push
jae
test
fildl
and
fimuls
xor
jp
mov
push
push
mov
shl
pop
movsb
bnd
pop
ss
in
xchg
dec
or
add
test
imul
fiaddl
movsb
mov
jb
xchg
dec
out
lret
push
or
sbb
sub
inc
imul
mov
inc
shll
xor
enter
dec
pop
and
xchg
push
mov
inc
fcomp
lret
or
xchg
in
sub
in
sub
iret
or
mov
test
mov
fisttpll
xchg
xchg
daa
scas
adc
pop
dec
hlt
xchg
sbb
xor
aam
sarl
mov
mov
test
pmovmskb
lods
repnz
cmpsb
shrl
cmpsb
pop
jle
lcall
lret
xor
lcall
pop
or
push
or
jl
mov
or
dec
orb
pop
fidivrl
sub
xchg
xchg
add
push
stos
stc
ss
pop
cmc
mov
pop
push
aaa
push
dec
enter
add
data16
shlb
out
push
or
dec
add
test
push
xchg
lods
xchg
stos
lods
xor
and
lea
ret
dec
mov
popl
xor
ds
cmpsb
or
jle
testl
add
rcr
cmp
mov
xchg
xchg
sub
xchg
or
loope
jne
sub
xor
xor
xchg
arpl
icebp
rorl
aam
std
mov
sub
adc
ficomps
bound
hlt
jb
xor
rolb
inc
aas
cmpsl
gs
ret
push
push
xchg
mov
push
mov
test
mov
pop
cld
add
lds
je
jle
outsl
loop
mov
inc
and
fsubrp
xchg
mov
sbb
sbb
push
inc
xor
and
dec
cwtl
out
je
xor
sub
add
mov
fwait
or
push
inc
scas
mov
or
mov
xchg
popa
push
cmpsb
int3
dec
xor
pusha
idivl
mov
loope
loopw
and
xchg
or
cmp
js
out
test
stos
jns
shlb
jecxz
jnp
jb
cmp
fidivl
into
mov
sub
sub
lods
cld
push
adc
les
imul
cs
xchg
inc
cmp
pop
rorb
inc
fwait
clc
fldt
daa
loope
xchg
mov
push
cs
sbb
mov
lods
mov
cld
push
mov
mov
std
loopne
mov
test
pop
clc
lcall
jae
sti
pop
sub
subb
imul
xchg
movsl
stos
xlat
pop
mov
pop
mov
mov
pop
popf
stos
iret
cmp
pop
gs
jecxz
stos
fcompl
lods
je
sub
hlt
pop
mov
lods
adcl
rorb
out
cmp
push
lods
les
inc
pop
sub
das
popa
call
sbb
lea
pop
push
ja
mov
and
cltd
out
cmpsb
cli
add
lea
inc
repnz
pusha
cli
push
cmc
lret
sbb
inc
and
add
xlat
mov
and
mov
mov
fld
pop
mov
mov
or
out
fs
call
std
jl
dec
cli
xlat
jo
clc
mov
adc
loopne
stos
insb
ljmp
sahf
in
outsl
inc
popf
and
addr16
xor
out
xchg
aas
xor
or
pushf
lret
cmpsb
lahf
inc
out
mov
cli
into
lods
inc
pusha
and
cltd
mov
iret
adc
dec
sti
push
repz
dec
mov
shlb
loop
pop
outsl
fwait
seta
cmp
adc
out
pop
push
cmp
and
add
adc
clc
ss
and
inc
mov
sbb
dec
into
psubd
sbb
jmp
loope
pusha
xchg
dec
jo
inc
cmc
cmpsb
add
test
lret
cld
test
punpckhbw
shrb
sarb
int3
lods
test
xor
jecxz
mov
push
push
push
adc
test
inc
repz
mov
pop
dec
and
ss
adc
xorb
addr16
aaa
movsl
push
mov
cmpsl
add
jge
push
mov
mov
xor
out
mov
cmpsl
inc
lcall
fs
mov
out
mov
xor
loope
push
add
sbb
mov
enter
bound
mov
ja
jae
daa
sbb
in
cmc
lods
jmp
iret
and
ja
ret
lock
outsl
je
cmp
imul
dec
and
sbbl
mov
inc
mov
repz
mov
jbe
ss
jo
cmpsl
dec
push
or
cmp
addr16
orb
mov
dec
mov
js
dec
lods
cld
jo
scas
xor
iret
dec
jnp
xor
xchg
xchg
call
outsl
fwait
dec
leave
cs
xchg
push
loope
pop
cmp
adc
or
les
xlat
lahf
shl
sub
xchg
xor
and
xchg
jne
sub
xorb
and
and
repnz
in
shl
std
inc
sbb
push
in
int
mov
add
lods
xor
add
shrb
in
adc
add
push
call
sbb
aaa
fs
out
cmovl
repz
mov
cmp
mov
pusha
sbb
xchg
jne
fildl
xchg
nop
sbb
adc
dec
and
imul
push
dec
inc
push
psrlw
ret
subl
out
adc
sbb
nop
stos
jmp
push
pop
inc
movsl
insb
push
and
mov
scas
cmp
or
sbb
cmp
iret
mov
adc
arpl
adc
cmc
sub
sub
push
lock
sbb
mov
pop
push
mov
clc
xor
test
push
dec
fs
lea
aaa
sub
pop
cmpsl
xor
pop
outsb
push
ljmp
out
sub
cli
pop
pop
shll
pop
dec
popa
dec
adc
stc
out
call
ljmp
sbb
jg
xchg
out
in
mov
add
cmp
loope
sarl
scas
ljmp
aaa
add
or
aam
xchg
lahf
rcl
xchg
sub
mov
push
or
in
fdivs
mov
cmp
fnstsw
arpl
sbb
cwtl
sbb
addr16
push
mov
cld
stc
xlat
out
hlt
sbb
divb
mov
xor
rcr
and
shl
push
cs
dec
cwtl
xchg
es
dec
scas
inc
pop
mov
cmp
rolb
jne
popa
xor
sbb
loope
je
xchg
push
lds
inc
xchg
dec
mov
pop
cwtl
movsb
xchg
cmp
xchg
xor
std
mov
xchg
dec
inc
pushf
jns
add
dec
insb
test
popa
xorb
dec
ret
stc
dec
cwtl
roll
orl
test
dec
sub
mov
insl
or
push
in
loop
mov
test
hlt
adc
inc
adc
fs
push
adcl
push
lret
mov
sub
mov
xchg
pop
xchg
add
mov
inc
lcall
rclb
in
push
fucomip
jae
xchg
aaa
int3
stos
or
out
iret
or
sub
jp
sbb
mov
js
and
in
scas
mov
dec
ljmp
decl
lcall
fidivrs
sbb
in
adc
fstpl
sub
mov
insl
flds
push
sbbl
outsb
stos
pop
outsl
aam
ficomps
sbb
push
cmp
sbb
xlat
div
cmc
fdivrp
cs
pop
adc
mov
mov
andl
leave
icebp
or
std
or
inc
sbb
xchg
pop
lods
daa
mov
mov
mov
mov
push
mov
inc
sbb
ss
adc
clc
neg
test
imul
imulb
lods
mov
cmp
jnp
xchg
sti
js
push
mov
sbb
cmp
js
xchg
dec
xchg
or
or
adc
add
out
subb
add
icebp
fwait
imulb
es
pop
out
mov
ficomps
sbb
add
dec
push
inc
jne
int
popa
lret
mov
invd
in
sbb
and
and
adc
or
pop
add
jg
xor
mov
pushl
jmp
mov
lods
jnp
lret
jmp
addr16
dec
or
push
jle
lods
mov
xlat
adc
lret
sub
xchg
or
in
enter
ljmp
loop
test
add
sub
aas
enter
mov
or
cmpsl
mov
shl
dec
mov
add
aad
aas
mov
pop
add
mov
sbb
xchg
int3
mov
cltd
test
xchg
popf
test
mov
filds
cmc
shr
pop
into
jg
adc
aas
in
hlt
popa
sbb
adc
mov
out
push
pop
rol
pop
aas
hlt
pop
push
lock
rcrb
jno
mov
sub
mov
dec
sbb
popf
es
loop
movsb
pop
in
ljmp
bnd
xlat
cmp
sbb
aaa
repz
push
fdivrs
stc
xchg
pop
decb
ret
pop
fcoml
sub
add
sti
add
inc
sarb
jo
push
bound
push
xor
in
lds
shrb
das
adc
mov
scas
sub
or
mov
lahf
and
insl
sbb
js
test
pop
inc
ljmp
pop
int3
ljmp
jo
cmp
xchg
xchg
mov
cmpsl
testl
dec
imul
dec
lret
and
pop
fsts
cwtl
xchg
sub
push
mov
daa
adc
lret
out
xor
out
shrl
mov
and
scas
jg
dec
movsl
add
imul
mov
mov
scas
inc
mov
cld
jbe
cmc
fstl
test
pushf
mov
out
mov
xchg
repnz
push
adc
call
jp
in
outsb
mov
fnstsw
mov
lds
and
dec
xchg
clc
jne
mov
mov
dec
data16
push
mov
mov
cmp
icebp
enter
xor
or
insb
mov
add
mov
fisubrs
dec
mov
cs
push
mov
or
xchg
repnz
stc
jg
gs
mov
out
inc
outsb
xor
in
sub
mov
shrl
pusha
and
pop
fwait
push
lea
xor
or
xlat
xor
pusha
daa
xor
sub
les
pop
popa
dec
xlat
and
or
jae
andl
sub
movsl
mov
clc
repnz
int3
dec
jb
cmp
and
add
pusha
cltd
cmp
inc
inc
cmpsl
into
dec
inc
ret
out
xchg
sub
insb
cmp
hlt
mov
push
xor
aas
mov
mov
shrl
enter
mov
xchg
and
pop
bound
frstor
jbe
xor
movsl
dec
gs
push
dec
mov
xchg
mov
cwtl
jge
rorb
scas
cld
lds
test
adc
in
mov
fimuls
xor
aam
xor
xor
lock
cld
adc
es
pop
sbb
inc
add
clc
arpl
xchg
pop
mov
gs
in
mov
insb
clc
in
lock
sub
pop
test
mov
movsb
cli
cmp
mov
adc
push
mov
pushf
icebp
pop
add
push
adc
add
das
adc
into
mov
push
imul
negl
dec
push
lret
jl
add
je
imul
fst
xor
or
jecxz
and
pushf
jge
bound
aam
xor
inc
fisubl
mov
icebp
inc
test
jmp
fldl
cmp
and
sahf
push
es
aas
fwait
icebp
lcall
cltd
and
push
xchg
mov
std
or
pop
pushf
cli
xchg
insl
mulb
add
xor
out
jae
adc
add
inc
dec
mov
out
mov
mov
pop
stos
bnd
ja
cs
xchg
xor
insl
sub
insl
shlb
rorb
ds
insb
and
iret
sub
inc
jae
or
jae
ret
iret
pop
adc
pop
cmc
test
xchg
in
mov
mov
popl
orb
sub
dec
xor
adc
add
adc
xchg
fs
mov
aas
xchg
mov
pop
ret
xor
jnp
adc
or
cmp
jb
test
stos
lret
lds
test
xchg
lea
jne
movsl
loopne
popf
pushl
ret
bound
lods
add
repz
and
shr
mov
sti
cmp
mov
imul
iret
in
push
push
subb
pusha
push
sbb
jmp
xor
or
jl
inc
gs
mov
pop
imul
lcall
mov
xor
jg
mov
sub
and
test
jnp
test
cmpsl
push
jnp
xchg
xchg
les
lods
inc
jnp
ds
mov
icebp
adc
xor
outsb
mov
jp
mov
das
ret
sub
sub
jp
pop
xor
movsb
pushf
mov
in
cmp
pop
push
jno
jle
add
aam
popf
push
push
fisubs
cmp
in
sbb
sbb
add
lret
lret
mov
pop
loope
and
mov
push
mov
xchg
pop
lahf
mov
in
add
loopne
aaa
in
fs
push
lock
jb
jg
sub
aam
or
lahf
add
in
adc
hlt
test
cli
push
mov
stos
add
pop
pusha
fcoms
ror
lds
sbb
stos
hlt
adc
pop
sahf
shll
test
aas
sub
sbb
fistpl
ss
lods
adc
sti
pushf
dec
add
push
mov
or
mov
rolb
rorl
xchg
push
in
orb
inc
ljmp
aas
xchg
enter
cmp
test
les
sbb
js
inc
push
xor
jl
leave
bswap
xchg
jmp
in
idiv
mov
lock
mov
in
or
jle
sub
push
dec
stos
pushf
arpl
cld
jl
mov
sub
jbe
sub
shll
test
mov
sub
inc
lea
test
in
mov
push
jnp
jae
push
mov
fists
mov
xchg
sbb
aas
data16
sbbl
mov
dec
das
andb
out
dec
pop
sub
es
in
les
inc
test
loop
into
dec
or
pusha
test
pusha
call
scas
pusha
jge
fdivr
shlb
pop
inc
xchg
mov
addr16
pop
inc
iret
xchg
mov
in
fcoms
mov
or
push
push
push
inc
in
loop
cwtl
shll
push
mov
cmp
push
dec
xor
dec
pop
xchg
mov
ss
lods
add
movsl
jl
xchg
inc
fistpll
adc
popf
and
jl
cs
shl
sub
rol
in
mov
iret
jns
dec
or
in
or
mov
jo
and
adc
rcll
flds
movl
jecxz
enter
rcll
sbb
push
insl
aas
sbb
loope
ljmp
aaa
daa
test
movsl
pop
mov
ret
sub
mov
mov
ret
popf
sbb
mov
sub
adc
inc
pop
mov
cs
repnz
mov
xchg
jecxz
sub
mov
test
cli
sbb
movsb
inc
ja
and
pop
sahf
std
test
mov
stos
sti
dec
inc
add
jbe
sbb
sbb
loope
push
xlat
lsl
ficompl
add
push
insb
mov
into
xchg
xchg
lret
idiv
nop
icebp
out
mov
pop
or
jno
xor
and
ss
in
jmp
nop
jg
push
push
sub
mov
jns
das
lods
mov
inc
add
fcoml
mov
or
mov
pop
push
pop
xor
jp
je
push
pop
stos
sub
gs
fwait
xor
in
pop
sub
gs
cwtl
gs
in
fmul
lds
sarl
addr16
fwait
negb
rcr
fwait
repnz
push
jae
cmp
dec
shrl
push
enter
sub
or
xor
jb
idivl
add
pop
adc
sbb
cmpb
add
sub
ja
xlat
in
fwait
pop
scas
inc
mov
push
test
push
loope
nop
or
cmpb
mov
stc
gs
pop
pop
ljmp
adcl
out
xchg
or
or
push
push
ljmp
pushf
scas
adc
jmp
imul
out
xchg
lahf
or
sbb
push
sub
dec
fnstcw
iret
inc
lret
mov
pop
scas
mov
repnz
xchg
stos
xchg
cli
pusha
pop
adc
pusha
movsl
lcall
xchg
insb
sub
out
sub
sub
pop
cmp
mov
push
cmc
pushf
pop
jecxz
imul
fsub
out
out
sub
cmp
mov
push
ja
in
in
cld
xchg
shlb
push
shrb
sbb
popf
dec
repnz
leave
outsl
mov
sahf
pop
xchg
jb
add
mov
je
mov
fsubl
cmpsl
fadd
lods
sub
push
cmp
xchg
aad
pop
adc
xchg
or
insl
adc
adc
dec
add
repnz
in
push
push
cmp
push
pusha
add
mov
bound
sub
cmp
mov
pop
push
std
out
stos
jp
push
xor
insb
pusha
jg
mov
pop
xchg
cmp
xchg
or
jge
fmulp
js
mov
push
imul
cmp
loop
and
jle
push
loope
mov
add
cmp
ficomps
mov
and
mov
sub
fs
or
xchg
mov
arpl
mov
sub
jo
pop
mov
mov
pop
or
cltd
or
les
jo
daa
add
je
imul
push
faddl
fistl
cmp
mov
das
imul
test
lods
pop
adc
ljmp
cltd
push
xchg
test
int
idiv
jmp
push
in
test
shlb
cmpsb
sbb
mov
pop
addr16
cld
js
jo
test
pop
sbb
sub
rol
or
pop
inc
bound
pop
lret
push
push
mov
xchg
sbb
cmpsl
int
push
or
mov
and
xchg
shll
int3
imul
rclb
adc
and
aas
lahf
sub
cmpsb
mov
pusha
jge
inc
xor
jb
in
mov
push
lods
test
jne
adc
push
push
mov
xor
rcr
movsb
pop
lock
int3
outsb
aad
mov
xor
nop
out
jg
cmpsb
mov
xchg
mov
int
dec
iret
cmp
fcoms
push
rol
mov
imulb
add
mov
orb
outsb
gs
mov
mov
xchg
dec
movb
lcall
ret
sub
cmp
addr16
iret
test
hlt
test
lret
dec
cmp
push
mov
fidivrs
cmp
cltd
inc
dec
out
movsl
loope
int
iret
adc
scas
popf
push
cs
cmp
cmp
xchg
inc
nop
negb
push
fistl
in
add
jecxz
loopne
sbb
popa
dec
cli
fdivl
subl
fsubs
aad
lret
cmpsb
jo
adcb
mov
shll
mov
cli
xor
lods
mov
pop
mov
xor
std
add
lcall
enter
movsb
roll
repnz
fisttps
push
jne
sbb
sbb
cmpsb
inc
es
xchg
mov
pusha
cmp
inc
test
out
icebp
push
sarb
xor
ja
pop
movb
cwtl
stc
scas
test
out
dec
and
cld
repnz
adcl
ds
sbb
xor
outsb
mov
imul
push
sub
mov
es
out
testl
movsl
mov
imul
add
inc
mov
inc
adc
repnz
cld
dec
addr16
push
out
cmp
out
addb
mov
ljmp
out
adc
and
or
call
and
ljmp
inc
inc
movsb
fimull
daa
fdivrl
sbb
pop
movsl
insl
shll
inc
sub
add
jb
dec
cwtl
sub
pusha
xchg
add
cmpsl
cmp
sbb
xchg
test
xchg
push
rorb
fistpll
mov
outsl
into
enter
outsb
je
int
mov
clc
and
int
bnd
push
mov
adc
enter
popf
aas
or
aad
sub
mov
aaa
mov
inc
cmp
push
mov
data16
lahf
cmp
shlb
gs
adc
out
imul
test
insb
pop
mov
add
mov
mov
pop
mov
fcoml
add
std
jl
xchg
mov
xor
stos
stos
fldt
lcall
std
outsb
mov
and
shlb
xlat
outsl
jae
xchg
insl
xor
cltd
jge
push
or
js
call
iret
fdivrl
mov
nop
or
imul
ss
in
aas
or
xchg
loope
pop
fnstcw
jge
negb
push
es
cmpsl
add
fisttps
xchg
xchg
into
push
mov
push
cmp
je
les
fst
push
jl
repz
shrl
pop
xchg
sarl
jecxz
js
dec
ss
push
sbb
or
fstpl
pop
jno
jecxz
jnp
push
stos
jmp
lcall
dec
scas
stos
sbb
pusha
js
out
test
and
cmp
or
push
negb
pop
jmp
divl
mov
sbb
fmul
inc
sub
mov
sti
add
mov
xchg
pop
mov
mov
loope
xchg
mov
enter
xchg
outsb
popf
or
sarb
inc
mov
nop
mov
ja
ret
mov
iret
mov
lods
mov
fdivp
adc
adc
mov
or
test
popf
insl
repnz
pop
xchg
inc
jmp
ss
out
adc
dec
or
ja
inc
sbb
pushl
dec
lods
push
pop
jle
ret
mov
gs
or
xor
adc
jnp
adc
push
add
xchg
nop
subl
dec
sahf
pop
in
scas
lea
mov
ljmp
xchg
lret
xor
int3
shl
mov
jecxz
cli
dec
lods
jmp
imul
push
add
xchg
inc
aaa
int
xchg
sbb
push
cltd
test
and
std
dec
into
loopne
js
fstps
mov
and
or
mov
arpl
pop
fiadds
pushf
mov
dec
xchg
iret
mov
push
sub
outsl
xlat
mov
aas
xor
pop
pushf
mov
aaa
fwait
popa
sahf
arpl
icebp
jge
mov
mov
cmpl
cmpsb
or
shrl
fistpl
xor
test
clts
sti
xlat
cmp
lahf
xor
push
cmpsl
movsb
pushf
sbb
cmp
push
sbb
fidivs
mov
loop
in
fs
mov
mov
jmp
xor
mov
xchg
sbb
out
inc
push
and
adc
inc
fmull
pushf
divb
stc
adc
or
sub
jb
jbe
pop
ss
push
fwait
lods
or
inc
es
ficoms
mov
int3
std
push
shrb
dec
int
jl
movsl
inc
pop
std
push
mov
push
test
jbe
mov
xor
or
cs
out
add
movl
test
mov
cmp
out
fbld
jno
divl
xlat
pop
fldl
scas
pop
sbb
lods
addr16
lcall
dec
scas
fwait
lret
or
ljmp
ljmp
xchg
popl
in
aam
outsb
push
stc
sbb
stos
iret
xor
cmc
mul
jmp
test
xor
sti
push
sub
ret
dec
cwtl
jns,pn
xchg
lock
in
cmp
mov
mov
movsb
imull
xchg
or
or
add
int
xchg
das
add
adc
adc
inc
popa
dec
gs
add
pop
cld
dec
ret
mov
jno
push
or
inc
lods
pop
pop
repz
gs
or
inc
loope
scas
es
in
cmp
sbb
rorl
sub
lret
arpl
add
cmp
cwtl
sbb
sbb
je
sbb
ljmp
cmc
pop
sub
adc
sub
repnz
js
jg
xchg
push
mov
mov
xchg
sbb
je
jbe
cmc
pop
xor
fisubrl
inc
out
das
xchg
aas
mov
xchg
add
cmp
push
pushf
xchg
jl
sub
or
fisttps
int3
pop
mov
adc
test
pop
pop
or
repz
fwait
and
pop
xchg
xor
mov
ret
inc
stc
aaa
dec
iret
lret
test
iret
cmp
dec
xchg
cmpsl
neg
xchg
mov
rclb
and
in
negb
leave
or
adc
xor
rol
movsb
mov
lods
je
fadd
je,pt
pop
daa
mov
dec
jmp
movsb
lret
inc
stos
movsl
or
les
dec
mov
test
push
pop
outsb
jge
sub
pop
clc
das
mov
inc
inc
xor
es
sbb
dec
mov
std
dec
lock
mov
lahf
shrl
or
xchg
testl
cmp
pop
and
sbb
fsubrs
mov
mov
pop
sahf
out
xlat
pushf
inc
adc
lods
jns
pop
rol
popa
push
xorb
out
add
xchg
push
jecxz
leave
add
mov
cmpsb
inc
es
scas
js
push
sbb
pop
or
jbe
stc
jbe
push
push
popf
aam
cmp
push
xchg
xchg
fildll
jae
aaa
lods
mov
fldt
mov
cmp
push
cld
mov
stos
cmp
outsl
idiv
inc
add
sarl
add
add
scas
mov
into
outsl
cmpb
cmp
pushf
pop
sbb
cmp
pop
mov
shl
fcmovnbe
jecxz
mov
adc
or
sbb
int3
dec
xor
mov
push
sbb
mov
fstpt
adc
into
in
sahf
dec
repz
in
sti
mov
dec
dec
push
cmp
mov
cmp
nop
rol
xchg
sahf
xchg
adc
mov
les
pop
adc
xor
cmp
call
subl
in
adc
dec
or
fistl
rcrb
mov
imul
std
scas
push
mov
pop
enter
dec
aam
dec
mov
loop
loopne
fsubrs
cmpl
push
cli
xchg
or
fildll
sbb
popf
lds
lahf
out
pop
pop
xchg
jno
cltd
inc
cmp
pop
pop
subb
lock
add
es
or
aam
ret
je
jp
out
in
and
in
sahf
jno
test
mov
pop
dec
push
sbb
idivb
and
fidivrs
xchg
jne
xchg
sub
or
sbb
cmp
aas
xchg
push
mov
xchg
jbe
cmp
repnz
std
xchg
mov
xchg
fstpl
data16
ja
pop
cmpsl
xor
jmp
lds
rorb
js
fstp
sbb
fmul
lcall
xor
xlat
lret
into
int
jmp
in
iret
test
arpl
dec
in
icebp
aas
in
out
jnp
and
dec
sub
and
sbb
jp
cmc
scas
xchg
push
mov
int3
aas
jp
lods
lret
cs
push
popf
iret
sbb
insl
icebp
cmp
jp
xlat
pop
adcb
add
mov
popa
jnp
cmpsb
cmp
outsb
add
das
nop
sbb
aam
pop
mov
and
lahf
notb
cltd
gs
mov
stos
mov
and
dec
adc
insb
enter
lods
aaa
add
xor
out
xchg
mov
mov
push
and
ljmp
addr16
or
sub
call
xchg
fnsave
sub
cmp
jl
mov
ss
out
or
adc
shll
mov
pop
pop
xchg
cmp
dec
mov
mov
pusha
mulb
loopne
jo
ds
jnp
insb
jns
add
jns
mov
sub
inc
aad
out
aam
xchg
pop
xor
cmpb
add
movsl
sub
xor
mov
push
cmp
addr16
and
movsb
inc
cmp
mov
mov
clc
fwait
clc
or
out
ficoms
int3
leave
xor
pop
inc
fdivr
fs
push
xchg
pop
test
andb
xchg
mov
repz
xor
jb
popf
lret
cld
cmove
fisubl
test
cmp
rcrl
xor
sbb
xor
das
insl
es
push
sarb
or
dec
rcrb
andb
pop
inc
cmc
push
popl
aaa
ret
cwtl
popf
inc
jnp
adc
inc
push
sub
in
mov
shl
test
jne
push
inc
je
push
pop
lock
xor
es
jb
push
jo,pn
flds
ss
lods
cld
xor
add
inc
or
data16
shrb
std
test
mov
imul
cmp
js
mov
shrl
fnstenv
fdivrp
inc
cld
sti
movsb
pop
and
xchg
adc
mov
in
je
or
in
xlat
push
aam
int3
sbb
fcompl
jmp
jg
in
hlt
and
enter
nop
jnp
cmp
inc
or
sub
pop
add
cmc
jmp
xchg
xchg
cs
and
daa
mov
push
fwait
pop
or
insl
cmp
out
mov
es
clc
add
mov
cmp
adc
fcmovnbe
push
clc
dec
mov
fisubl
jns
add
cmp
push
xchg
xchg
lock
jmp
push
xchg
mov
xor
dec
cmp
mov
call
je
js
mov
mov
into
or
xchg
pop
aad
inc
or
cmp
ljmp
mov
cwtl
rcpps
popa
dec
push
pusha
fwait
pop
fsts
cmp
cmp
lahf
mov
xchg
sbb
push
jmp
test
pop
fistpl
iret
xchg
cmp
add
lret
pop
adc
mov
xor
ss
jg
into
lods
xchg
and
jmp
jns
adc
movsl
adc
xchg
xor
cmp
adc
sub
cmpsl
stos
setg
add
mov
lock
dec
outsb
pop
jg
jne
mov
leave
nop
xchg
std
add
shrl
cli
dec
fcomi
jg
enter
xor
rorl
sub
adc
popf
xor
sbb
movsl
mov
adc
movsl
jge
imul
and
sub
das
or
into
pop
push
mov
ds
mov
xchg
roll
pop
and
icebp
test
mov
loopne
cmp
orl
pop
lahf
lret
or
ds
gs
ljmp
lds
inc
sub
adc
inc
sub
movsb
xor
inc
push
xor
bound
push
mov
fidivrs
xchg
out
hlt
aaa
inc
rcr
push
scas
mov
mov
icebp
mov
ret
sub
jge
or
pop
jl
aaa
pop
sti
insb
sbb
mov
xchg
xchg
hlt
jp
cmpsb
inc
cmovns
ja
test
push
lods
fbstp
inc
nop
popl
mov
push
adc
xchg
out
lahf
cmp
and
jnp
pop
push
cmp
mov
scas
aas
loopne
insl
jge
jbe
lret
jno
arpl
mov
mov
aas
sub
add
es
adc
sahf
xor
leave
fwait
jnp
ss
mov
fildll
movsb
inc
outsl
mov
lods
jb
aaa
mov
in
xchg
loop
imul
arpl
andl
cmp
xor
pop
sbb
pop
in
fsubrp
pop
inc
outsb
push
cwtl
mov
sub
ret
mov
lret
mov
lea
in
add
dec
sbb
test
cmp
jg
pop
fidivs
xchg
icebp
gs
sub
xor
into
xchg
mov
xchg
leave
fadd
mov
cli
mov
jae
mov
or
adc
sbb
jb
cmp
scas
push
add
nop
xchg
jle
shrb
out
jnp
pop
cmpsb
mov
push
mov
mov
cld
push
gs
mov
scas
not
int3
hlt
ds
mov
or
adc
inc
pop
mov
sbb
mov
hlt
xchg
aam
in
mov
es
push
pop
arpl
dec
cmp
fimuls
enter
fisubl
adc
mov
stos
bound
jle
jb
sub
dec
data16
fnstsw
cmp
fcompl
jle
xor
in
movsl
es
lret
mov
out
pop
repz
imul
add
out
push
mov
clc
cmp
sub
adc
xor
inc
ret
xchg
add
jno
add
in
adcb
aaa
sbb
stc
xchg
jno
pop
or
loopne
push
mov
and
xor
popa
std
mov
mov
inc
adcb
int
popa
cmpsl
sbb
adc
cmp
imulb
loope
out
es
cmpsl
sbb
cmp
popl
xchg
push
dec
mov
loopne
test
and
in
sbb
and
inc
xor
insb
in
cmp
js
call
cs
xchg
push
inc
data16
xchg
xorb
ret
xor
pusha
lret
cmpsb
mov
jecxz
lods
pop
pop
jle
test
cmp
push
paddq
outsb
inc
loopne
pop
mov
lret
push
jl
int3
fwait
fs
mov
loope
enter
flds
mov
dec
ds
mov
dec
jo
imul
scas
dec
lods
xor
dec
inc
inc
test
mov
sbb
ja
sub
lds
shlb
sahf
sbb
or
out
xchg
dec
push
push
add
sub
repz
mov
incb
inc
adc
test
mov
arpl
jb
ss
xchg
fmuls
or
cmp
lods
xor
mov
adc
pop
cmp
dec
int3
enter
mov
cmp
push
adc
and
pop
add
fst
inc
out
cltd
jae
sbb
dec
inc
adc
xchg
jnp
xor
mov
imul
fcmovnbe
test
out
pop
push
mov
cwtl
push
jge
pop
into
icebp
mov
inc
jo
inc
hlt
sarl
je
and
dec
add
jp
jle
sub
loop
and
jne
ss
faddp
sub
idivb
or
inc
std
stos
data16
fdivr
orb
mov
xor
sti
dec
and
rcl
xchg
rcrl
data16
in
push
iret
or
sbbl
pop
pop
inc
xchg
je
divl
stos
and
xor
cmpsb
mov
mov
mov
jmp
lods
xchg
in
test
aad
loop
repz
ret
in
jl
adc
iret
fidivrl
rolb
sti
sbb
mov
xlat
jmp
jb
arpl
pusha
or
xchg
jle
out
outsb
xor
popa
dec
addb
in
mov
repnz
sub
sbb
adc
stos
push
xlat
lock
jb
mov
add
or
xchg
popa
push
pop
xrelease
dec
or
mov
sarl
jno
inc
jl
pop
int
mov
ret
aad
xchg
repz
dec
mov
fsubs
aam
bnd
xchg
mov
inc
popa
sahf
jp
or
cmpsl
repz
lock
lods
sbb
clc
enter
cltd
push
outsb
mov
inc
repz
nop
sub
push
add
sbb
jne
int3
pop
xchg
cs
xchg
scas
lock
mov
sub
divl
mov
mov
jle
jge
push
cld
jno
jne
sbb
xlat
stos
push
shlb
jae
out
movsb
sub
and
cltd
or
xor
adc
mov
imul
jmp
jp
add
cmp
ret
aas
sub
divl
imul
mov
fwait
cwtl
xchg
cwtl
bound
sub
call
out
int
jp
fcomps
stc
cmp
loop
lds
cli
rcrb
movsl
pop
sbb
push
lahf
cld
or
pop
mov
js
xchg
pop
cwtl
jnp
shrb
jl
shl
add
adc
push
test
and
jecxz
sub
iret
sbbl
mov
sbb
imul
sbb
inc
xchg
jbe
xchg
in
jl
push
jne
or
mov
out
xlat
inc
das
push
cmp
push
cmc
mov
movsl
or
mov
sub
addb
test
add
pushf
lods
mov
aas
js
out
popa
ljmp
es
arpl
mov
inc
rorb
fldenv
push
mov
bound
push
je
add
rcll
sahf
js
aas
sti
push
stos
repz
mov
test
out
jb
imul
stos
jecxz
cmp
pop
xor
sub
xchg
adc
add
test
je
jne
mov
dec
adc
das
andl
sub
push
xchg
pushf
es
mov
shll
in
stos
xchg
cmp
or
jle
test
leave
nop
out
and
pop
scas
xchg
shl
push
jle
xor
sbb
lods
leave
repnz
cmc
xchg
lods
dec
mov
jmp
pop
dec
mov
sti
shll
xchg
push
pushf
sbb
or
and
adc
and
dec
sub
mov
orb
inc
sub
mov
pop
push
outsb
jge
adc
pop
mov
std
fcompl
ret
outsb
mov
jae
mov
popf
xchg
cmpsl
jnp
imul
insb
insb
out
inc
xor
fimull
pop
fs
addr16
jle
loop
jg
ja
andb
lds
push
iret
mov
int
stos
leave
mov
mov
xchg
cwtl
gs
push
fs
xchg
sbb
sbb
pop
orl
rorb
mov
fmull
lods
mov
pop
push
mov
or
jbe
jp
push
jno
push
rcr
pusha
movsb
fiaddl
je
push
push
push
mov
jg
shll
jne
mov
dec
add
jmp
in
and
push
ds
jg
xlat
dec
pop
mov
pop
push
and
hlt
in
push
popa
cmp
push
mov
data16
sti
cmp
out
loopne
lahf
insb
sbb
mov
pusha
pop
arpl
inc
ret
repnz
dec
adc
repnz
iret
in
cmpsl
movsb
push
lahf
bound
lea
dec
xchg
jnp
xchg
mov
push
mov
sbb
in
loop
cmpsb
dec
jne
sub
loope
push
enter
lock
hlt
ss
push
mov
test
adc
push
lret
jno
sub
cmp
cwtl
mov
xchg
and
or
aas
icebp
imull
mov
mov
mov
roll
dec
sub
out
out
fbld
or
inc
cwtl
mov
xchg
and
mov
shll
fsub
rclb
repz
sbb
aas
xchg
stos
cmpsb
inc
sub
dec
pusha
aaa
sub
lea
test
xor
push
lods
mov
popa
cmp
loope
cmpsl
jno
cltd
popa
lods
mov
ljmp
xor
lods
int
and
cmp
mov
mov
cmpsl
mov
sbb
mov
test
rorb
ss
adc
mov
or
mov
repz
push
in
jo
inc
sub
lods
lods
pop
push
xchg
into
in
xchg
fldl
loop
add
out
cmp
sub
jno
mov
mov
lods
sbb
cmp
movsl
sbb
mov
push
or
pop
sub
inc
std
adc
cli
xchg
xchg
fsubs
and
adc
call
dec
mov
pop
push
inc
std
mov
xor
and
xor
insb
jo
loop
cs
neg
fimuls
xchg
sar
fstps
rcll
xchg
cmp
loopne
mov
test
jl
pop
lods
out
call
mov
adc
int3
jnp
dec
mov
jp
aam
dec
cmp
cmpsl
enter
push
arpl
inc
inc
int3
pop
shl
push
or
in
les
popa
add
mov
lcall
pop
sub
scas
cmp
or
or
and
gs
push
iret
imul
inc
out
mov
mov
dec
mov
cmp
cmpb
rcrb
ret
mov
aad
mov
mov
fistpll
or
gs
jle
sbb
ds
mov
imul
pop
xor
dec
pushf
pusha
sbb
gs
call
mov
sbb
int
adc
jo
and
test
stos
icebp
loop
inc
imul
inc
fisubrs
add
mov
push
pusha
xchg
fmulp
out
sub
push
add
pop
enter
sub
gs
mov
pop
pushw
mov
add
out
mov
or
dec
sub
popf
mov
inc
outsb
fsubs
fwait
xchg
aas
push
adc
ljmp
fwait
lcall
popf
push
mov
dec
inc
scas
xchg
cmp
popa
gs
pop
fsubr
pop
mov
popa
inc
loope
leave
xor
mov
out
or
dec
cmp
mov
movsl
stc
int
enter
je,pt
xor
sahf
icebp
pop
jo
outsb
lret
inc
push
dec
sti
lods
loope
inc
repnz
push
mov
pop
dec
in
ss
les
push
cwtl
stos
addr16
push
test
jge
mov
pop
cmp
inc
das
xor
dec
adc
mov
into
dec
shlb
dec
pop
sub
add
out
sbb
jno
pop
dec
jmp
in
ret
dec
sub
xor
mov
or
xchg
inc
imul
cmp
lahf
inc
sbb
ret
xchg
cmp
fdivl
adc
imul
ret
cmp
jns
push
and
loop
repnz
push
bnd
scas
cmp
jecxz
cli
ss
pop
int
jbe
push
adc
loopne
mov
mov
add
pushf
cli
fs
or
push
xor
or
mov
cmp
dec
ds
rcrl
cmp
repnz
sub
mov
fisttpll
bound
movsb
or
ficomps
cmc
ret
repz
arpl
dec
out
adc
push
mov
mov
mov
add
add
push
in
ret
and
and
in
jmp
xor
jae
lea
cmc
ret
lret
mov
fwait
daa
pushl
cmp
sbb
push
mov
test
fldcw
std
sub
fwait
lcall
sbb
loope
pop
pushf
dec
mov
cs
cltd
in
sti
push
shrb
pop
stos
cmp
jle
lea
fmuls
call
cltd
pop
cld
dec
and
sub
fistl
into
insl
xor
pop
pop
push
aad
out
test
imul
std
cld
std
fldt
loope
andb
xchg
pop
jge
int3
mov
sbb
sar
cmp
cmp
jae
ficoms
fbstp
or
in
iret
xchg
or
mov
pop
dec
les
ret
sbbl
inc
xor
test
sbb
sbb
jl
enter
mov
push
jp
cmp
mov
adc
cwtl
es
push
xor
adc
stos
je
movsb
sti
andb
dec
add
add
and
sbb
mov
test
xchg
pop
lock
test
lcall
in
inc
pop
rol
mov
pusha
push
inc
cmp
inc
fwait
mov
mov
sbb
jns
insl
jg
push
pop
push
and
fsts
into
xchg
or
in
fisubrl
add
adc
xor
out
call
hlt
adc
fcomps
mov
mov
sub
scas
jg
lcall
call
fadds
scas
cld
cmp
sarl
xor
out
mov
adc
xchg
or
dec
shll
stos
jae
sbb
imul
mov
aaa
mov
clc
cmc
movsl
test
mov
icebp
inc
pop
js
fs
xor
das
bound
fdivs
mov
add
repnz
leave
mov
push
mov
push
or
adc
movsl
sbb
test
sahf
lret
push
call
and
jnp
sub
dec
cmc
mov
outsl
sub
mov
dec
or
andl
mulb
aaa
xchg
mov
sub
fldpi
andl
in
dec
ljmp
push
inc
xor
pop
jbe
mov
test
icebp
out
dec
inc
ds
testl
cmc
jno
out
lock
inc
adc
mov
pop
insl
fdivl
popf
cwtl
icebp
or
mov
pop
add
or
mov
mov
xor
fsts
addr16
cwtl
pop
add
es
or
xchg
cmp
mov
mov
adc
test
xchg
jecxz
enter
add
arpl
jg
lahf
popf
fisttps
push
pop
dec
sbb
loope
jl
and
push
mov
sub
icebp
pop
out
and
in
sub
sbb
xchg
sub
fcompl
dec
jnp
mov
lcall
movsl
xchg
icebp
inc
inc
jmp
cmpsl
daa
pop
xor
xor
stc
shll
es
clc
inc
sub
mov
mov
xrelease
add
mov
sub
shll
cmpsb
jp
shl
push
ret
xor
xchg
fcom
cs
fwait
dec
push
mov
movsl
cwtl
lea
out
adc
cmpsb
lock
out
pop
insl
jns
sti
mov
sbb
rorb
or
push
outsl
push
inc
pop
scas
mov
cltd
xor
cmp
lret
ret
jmp
daa
insl
xchg
mov
cmp
push
into
sub
sbb
imul
sahf
test
jb
push
pop
adc
dec
pop
xchg
push
xchg
xlat
orl
adc
mov
rol
adc
xchg
imul
repnz
mov
pop
xacquire
xchg
mov
push
les
jg
push
cmpsl
jl
sub
es
out
fdivp
sub
cmpsl
out
repz
push
in
insl
or
or
cmp
ljmp
push
adc
pop
mov
pop
movsl
jmp
ds
adc
cmp
dec
adc
lea
js
test
enter
push
mov
shll
stc
ja
shlb
sbb
clc
push
rorb
shrb
sub
mov
scas
xor
cmpsb
lcall
fs
ret
daa
xor
test
jg
sub
xchg
ss
mov
aas
nop
jo
sti
mov
push
ficoms
xchg
data16
mov
jp
jo
jne
cltd
sub
lods
pop
cmp
or
mov
in
jnp
aaa
lock
pop
stc
in
pop
jge
push
dec
inc
test
inc
shr
cwtl
daa
js
cmpsb
cltd
repz
lret
mov
hlt
dec
aas
pop
sub
mov
sahf
pop
bound
xchg
sbb
outsb
fisubs
test
jnp
adc
outsb
sub
push
adc
add
sub
lahf
pop
das
mov
hlt
shl
in
or
or
ret
adc
xchg
cld
fiadds
mov
jmp
push
and
mov
push
xor
jg
push
and
xchg
sub
mov
add
and
pop
dec
scas
jb
adc
sub
sub
outsl
cltd
rorb
sbb
shll
inc
in
popf
mov
pop
adc
xchg
js
test
movsl
xor
xchg
stos
repz
data16
leave
sahf
leave
shrb
insb
insl
les
loope
and
sbb
sub
lret
lret
out
sub
fs
dec
ret
outsl
xchg
into
xor
cli
jns
mov
rorb
negl
dec
out
mov
mov
out
xor
jns
jle
xor
test
int
or
push
pop
xor
push
sub
int3
mov
add
fs
test
fsubr
sahf
mov
stc
sbb
sub
ret
decb
mov
cld
lret
lods
ret
mov
mov
mul
cmp
sub
sti
sbb
lods
out
mov
lahf
add
cwtl
pop
in
incb
mov
es
ret
lock
pop
sbb
or
jno
daa
pop
iret
jmp
push
loope
cmpsl
scas
inc
scas
lcall
std
hlt
push
lods
sar
fldenv
sbb
push
inc
xchg
mov
lds
rclb
or
pop
inc
and
cmp
test
fsub
adc
dec
mov
les
add
adc
sbb
xchg
fadds
mov
xchg
push
mov
mov
pusha
clc
test
fwait
lods
xchg
mov
sub
into
pop
cld
in
pop
mov
test
xchg
mov
aam
and
scas
push
mov
jns
lret
or
rclb
mov
sub
jns
jle
ret
mov
pop
mov
xlat
ss
cmp
sti
pop
xorb
loop
orl
mov
pop
leave
adc
cli
test
mov
dec
mov
nop
pop
add
sbb
and
cmp
pop
push
daa
pop
mov
lock
push
insb
orl
add
aas
fst
sahf
and
add
add
xor
dec
das
cmp
nop
push
imul
ja
xchg
jl
scas
mov
stos
pushf
pop
test
out
lret
das
divb
ret
test
pop
out
xor
dec
xor
imul
mov
inc
xor
pop
add
cmp
adc
push
repz
cmp
or
gs
xchg
mov
cmp
mov
mov
scas
mov
and
add
pusha
movsb
sarb
push
lods
bound
sahf
addr16
xor
xlat
jmp
xchg
and
cld
mov
movsb
das
sti
mov
push
imul
aam
out
dec
jle
loopne
adc
pop
adc
jle
iret
dec
xchg
dec
cmp
ds
add
je
ja
into
rclb
jns
adc
xchg
lods
cmp
push
cmpl
int3
in
rclb
pop
lcall
dec
movsb
and
add
imul
add
outsl
adc
out
dec
mov
push
pop
mov
mov
push
jo
cmc
fidivl
jle
divl
mov
std
shrl
aaa
testl
or
mov
jg
jle
push
das
push
mov
arpl
outsl
cmp
pop
xchg
dec
movsl
scas
in
xchg
sbbl
leave
lea
cmp
aas
xlat
sbb
push
or
xchg
inc
lret
out
cld
lods
rol
pop
mov
inc
pop
push
adc
jo
mov
inc
push
or
imull
add
jg
das
or
xchg
and
jl
add
xor
jbe
mov
push
iret
iret
lret
xchg
pop
mov
inc
cmp
jp
imul
dec
adc
pushf
cld
leave
call
jle
stc
iret
arpl
pop
push
addr16
mov
orb
fmull
loop
loope
pop
inc
insl
cmp
adc
cwtl
scas
inc
cmp
fdivrp
mov
jle
xchg
icebp
add
dec
xrelease
int3
enter
incl
xchg
ja
xor
jmp
push
iret
mov
subl
insb
push
mov
pushf
aad
xor
idivl
adc
mov
xor
ljmp
fsubp
shl
xlat
pop
mov
cmpsb
insb
fidivs
mov
inc
das
dec
xor
mov
adc
and
shll
mov
cmp
test
test
mov
stos
jge
mov
sti
mov
mov
dec
sub
dec
mov
or
pusha
lret
fisttps
adc
xor
test
add
push
enter
movsl
push
das
cmp
mov
scas
jnp
xor
mov
push
testb
push
into
push
arpl
sub
rorl
cld
mov
int3
add
jno
jns
pop
shrl
mov
cmp
sbb
cmpsl
imul
iret
lea
loopne
inc
es
je
repnz
mov
jbe
jmp
les
and
jmp
and
push
pop
xchg
cmp
movsb
dec
sbb
scas
iret
loope
sbb
aas
gs
add
adcb
dec
hlt
cmp
xor
cmp
arpl
ss
aas
pusha
mov
pop
adc
inc
add
jno
ss
jae
jbe
and
mov
pop
xchg
xchg
les
pop
or
je
test
push
cmp
add
pop
inc
loopne
and
inc
rcrl
loope
loope
aam
pop
xor
xchg
les
bound
das
push
push
pop
mov
pop
ljmp
vpmaddwd
and
ja
ja
xorl
mov
ljmp
pushf
push
roll
jmp
push
xchg
aam
test
flds
gs
cmp
addb
lods
std
jnp
push
call
ds
or
xchg
scas
fistl
fnsave
jnp
int
or
mov
int3
sbb
addr16
push
jb
mov
jge
scas
roll
jp
fs
jge
shl
ret
pop
mov
xchg
loopne
stos
iret
cmpb
pop
xchg
lahf
push
call
jecxz
adc
jnp
adc
mov
inc
hlt
push
and
testb
insl
sbb
out
icebp
fadd
enter
in
js
jns
lahf
sub
enter
mov
push
inc
lret
jle
notb
cmp
test
adc
arpl
test
cmpsb
imul
testb
out
mov
dec
shlb
test
lea
lcall
outsb
fcom
pusha
sub
call
xchg
and
in
pop
push
stos
inc
test
or
sub
divl
xlat
mov
push
out
je
in
cmp
mov
jl
sbb
mov
imul
std
jae
pop
jns
in
add
or
pop
mov
pusha
dec
pusha
push
gs
pop
and
sarb
out
xchg
mov
jae
rolb
lcall
mov
lds
cmpsb
popf
lahf
inc
jbe
insl
dec
rcrl
movsb
mov
aam
adc
fidivrl
mov
call
dec
cmpsb
outsb
xor
or
dec
mov
fbld
inc
mov
sub
filds
jge
sbb
mov
out
or
int3
or
stc
insl
out
pop
mov
sbb
sub
dec
pop
ss
repz
sub
cltd
push
outsb
ds
idivl
scas
xor
or
or
dec
mov
leave
pop
add
jmp
and
stos
xor
sahf
sti
pop
mov
std
dec
ret
jl
shrb
push
test
pop
pop
loop
mov
pusha
pop
lds
inc
jno
es
cmp
add
dec
add
fldlg2
shlb
mov
sti
mov
nop
shrb
inc
repz
jle
or
mov
mov
push
loope
mov
ja
idiv
shlb
test
mov
je
adc
mov
into
psllw
xchg
sbb
pop
xchg
cwtl
mov
out
cltd
fdivrl
out
fistpll
insl
mov
jmp
or
xor
in
repnz
pop
mov
inc
push
cmp
inc
sbb
aaa
cmpsl
mov
pushf
or
test
imul
and
push
mov
sbb
xchg
pusha
mov
xchg
mov
push
test
pop
and
mov
shl
mov
loopne
pusha
mov
lods
dec
sub
xor
push
je
shr
adc
add
mov
int3
dec
mov
das
cmp
into
mov
leave
mov
pop
inc
leave
adc
adc
pop
push
mov
repnz
cs
mov
mov
jmp
xchg
shll
adc
popa
hlt
push
xchg
leave
cmp
fstl
nop
bound
or
and
xchg
outsl
das
loop
in
xchg
or
repz
in
fldt
loopne
lea
shr
in
pusha
xchg
cmpsb
jns
aaa
mov
divb
scas
mov
ret
daa
or
mov
rcl
packssdw
lcall
lea
cmpsl
test
jmp
pushl
jp
jns
dec
pop
imul
dec
and
jno
xchg
sbb
xchg
outsb
roll
dec
repnz
xor
adc
les
into
adc
and
dec
outsb
xor
fsubl
rcr
xor
cmp
jl
sbb
fisttps
repnz
lret
and
in
add
rolb
test
roll
xchg
sbb
adc
dec
xor
cmp
push
sub
pop
js
aaa
pop
push
das
jp
movsb
inc
xchg
dec
xor
xchg
inc
pop
push
popl
popf
or
lret
pop
out
xchg
test
out
repnz
lea
xchg
loop
pushl
in
outsl
cmpsb
ret
test
xchg
dec
imul
out
test
add
mov
test
cwtl
dec
adc
scas
gs
pop
data16
push
mov
mov
dec
mov
sbb
scas
xchg
mov
push
inc
jbe
xchg
xchg
insb
xchg
inc
and
mov
lcall
bound
lahf
test
push
lcall
sub
pop
ds
das
jb
jg
shll
push
outsl
imul
jge
adcb
xlat
scas
pusha
sub
dec
sbbl
stos
push
adc
or
mov
fbld
lds
inc
enter
inc
je
fmuls
in
mov
mov
cltd
clc
in
cmpsb
xchg
mov
imul
movsl
call
lea
fxtract
test
xchg
mov
les
loop
scas
xchg
pop
pop
cmpsl
scas
xchg
xor
popf
mov
push
inc
aam
gs
les
rolb
rcrl
lret
jmp
movsl
pushl
inc
mov
or
or
mov
hlt
xor
pop
into
sbbb
lods
out
loope
adc
mov
fwait
daa
and
xor
inc
sub
sbb
cs
enter
imul
mov
sub
stos
out
fdivrs
jae
adc
cltd
fmul
cmc
ret
xor
inc
stos
lret
jbe
or
hlt
inc
dec
inc
fiadds
bound
iret
inc
adc
mov
pop
xor
in
outsl
cmp
cmpsb
push
ret
xchg
mov
pop
stc
ljmp
jmp
inc
out
les
aad
rcrl
mov
cmc
add
fwait
inc
shl
mov
adc
add
out
pusha
push
cmp
mov
mov
adc
pop
mov
mov
test
ret
mov
insb
cltd
fs
or
ss
jmp
jo
pop
or
cwtl
xor
loopne
nop
mov
testl
add
pop
jle
insb
popf
sbb
movsl
jge
rcrb
mov
sbb
push
add
push
cmc
xchg
push
adc
fdivs
or
das
jmp
sub
out
iret
nop
mov
cld
repnz
mov
jge
test
enter
adc
xchg
cmc
xor
dec
pop
dec
adc
or
fs
mov
jge
pop
ss
stos
jmp
rolb
aas
cmp
ds
pop
push
adc
imul
mov
stc
adcl
inc
sbb
roll
mov
or
mov
js
imul
hlt
repz
push
mov
call
cltd
hlt
jmp
call
or
pop
pop
and
or
jmp
push
lahf
dec
xor
ljmp
mov
pop
mov
test
mov
cmp
mov
lret
adc
sub
dec
mov
xor
std
push
das
sub
jne
ret
cli
nop
or
mov
and
cmp
cmp
fiadds
stc
dec
movsb
xlat
in
shlb
mov
mov
dec
mov
test
pop
push
mov
cmc
sbb
or
mov
jnp
mov
ljmp
sti
cwtl
gs
dec
rorb
dec
or
mov
lock
push
sub
sub
js
jge
push
aas
sub
jno
dec
outsb
push
fsubs
ja
xor
xchg
or
sarb
mov
jl
out
adc
jns
hlt
or
push
loop
add
xchg
push
lods
aaa
outsb
push
in
and
aad
insb
movsl
loope
xchg
into
lods
pop
jnp
movsl
push
ljmp
int
add
movsb
imul
fistl
cmp
mov
das
push
and
mov
jp
or
lret
xor
push
jns
push
sbb
test
inc
cmp
test
lcall
sub
sbb
rcrl
jecxz
call
or
jle
sub
sub
xor
pop
andb
cmc
aad
std
or
arpl
in
ss
xchg
sahf
mov
and
sbb
mov
pop
shll
ss
icebp
out
pushf
cmc
nop
test
sbb
push
pop
in
jecxz
cmp
mov
in
push
imul
mov
push
aaa
and
filds
or
notb
and
jns
lods
sarl
outsl
std
stc
mov
cmp
jnp
xchg
and
push
test
or
pop
popf
mov
lahf
jb
push
push
push
ret
and
jbe
sbb
rolb
inc
or
or
or
inc
pushf
cmp
sbbb
or
push
movsb
xchg
outsl
sahf
dec
xbegin
pushf
sub
mov
add
sahf
icebp
scas
pxor
loope
sbb
dec
movsl
xchg
inc
inc
jle
cli
sub
xchg
cmp
xchg
sti
and
movsb
mov
lahf
sbb
ja
sub
mov
test
cwtl
aas
addr16
mov
mov
xchg
xchg
mov
jbe
jae
addr16
fcmovnu
int
dec
mov
cli
movsb
pop
sbb
aaa
ds
aam
lea
rep
mov
mov
rorb
aas
repnz
inc
cmp
add
fwait
dec
dec
push
pop
push
out
jg
je
scas
and
mov
out
lods
jae
int3
push
fistl
pop
inc
sub
sbb
cwtl
gs
adc
mov
and
in
dec
xor
in
and
loopne
mov
loopne
in
pop
in
fdivrl
stos
nop
xchg
imul
mov
fdiv
jnp
sbbl
or
sub
or
cltd
jb
cmp
mov
or
and
and
lock
cmp
xchg
ret
mov
lcall
out
and
rcll
pop
std
adc
pop
jnp
std
test
out
lods
or
jl
push
push
dec
sbb
outsb
mov
dec
arpl
rcrb
sahf
cmp
imul
js
imull
hlt
jb
jmp
and
fsubs
push
pop
ds
mov
add
pop
pop
cld
mov
cwtl
xorb
mov
inc
and
idivb
aam
rclb
insb
pop
jbe
mov
cli
into
jmp
add
mov
xor
fildl
int3
sub
dec
add
sbb
pop
lds
shrb
adc
shl
stos
sbb
push
out
stos
sbb
fpatan
popf
jp
or
sub
inc
adc
icebp
fimuls
popa
ljmp
test
push
jnp
sub
mov
sbb
mov
test
stos
push
clc
push
fdiv
mov
into
sub
push
add
popa
or
mov
je
or
lret
out
xchg
lcall
pop
outsl
cs
pusha
adc
dec
jle
les
xchg
or
adcb
cmp
rolb
and
std
iret
sbb
imul
adc
test
dec
dec
push
mov
cltd
jne
shr
ret
mov
add
cmp
push
or
shrb
ror
fistpll
fistpll
cmp
jae
std
jg
mov
pop
shr
sub
test
cmp
or
imul
je
mov
xor
adc
xchg
xor
adc
xchg
dec
mov
mov
nop
mov
pop
xorb
pusha
xchg
loopne
sbb
and
cwtl
andl
mov
sbb
ror
into
cmp
or
jno
rcrb
cmp
jb
sub
test
xchg
dec
call
shll
push
jb
jle
add
jge
fucomip
push
jnp
jg
aam
xchg
inc
negl
movsl
add
or
xchg
lods
push
xchg
add
stc
or
cmp
movsl
dec
cld
ss
add
psubw
fiaddl
inc
push
mov
int3
mov
sub
cld
mov
int
call
imul
add
idivb
jecxz
das
push
lahf
mov
push
xchg
enter
decb
es
jge
pop
jmp
mov
ljmpw
xor
and
jb
fsts
and
cwtl
iret
push
lock
dec
outsb
xchg
push
xchg
xor
leave
into
or
sbb
mov
sub
add
sbb
fwait
xchg
lret
mov
sarl
aas
aam
movsb
mov
call
mov
lret
stos
push
jecxz
out
dec
pushf
dec
loop
nop
xor
fistl
inc
ljmp
jecxz
imull
inc
xchg
scas
add
push
pushf
and
inc
data16
mov
jmp
push
inc
mov
sbb
cmp
add
and
lods
push
lods
lds
mov
pop
inc
xlat
adc
dec
pop
push
aad
js
push
push
pusha
mov
pop
ljmp
iret
or
and
cs
cmc
jge
test
add
inc
xchg
dec
hlt
cmp
aaa
sub
nop
int
adc
sbbb
add
jle
ljmp
inc
rclb
adc
add
fldenv
lcall
les
pop
test
xor
cmp
push
jmp
bound
ficomps
bound
int3
cmp
addr16
int
pop
cmp
lret
mov
jmp
xchg
push
cmc
sahf
xor
imul
cwtl
paddusw
xchg
icebp
negl
mov
push
add
fildll
xor
incb
mov
push
dec
jle
and
loop
lea
add
imul
and
mov
sub
in
imul
cmp
scas
insl
sbb
sub
or
mov
repz
inc
insb
arpl
and
mov
imul
dec
stos
test
jecxz
test
repnz
jl
mov
scas
test
js
sar
into
sub
testl
jae
or
daa
pop
int3
xor
sbbb
add
mov
push
add
ror
cs
inc
and
es
mov
push
shr
and
sub
lar
mov
cmp
push
pop
repz
jp
testb
call
push
sub
rcr
xor
movb
rcrl
cmpsb
cs
ret
jmp
mov
in
out
dec
cmp
sub
push
add
rcll
sub
movsb
mov
aas
scas
add
loope
dec
mov
sub
xchg
ret
push
subl
mov
ja
or
xchg
insl
mov
out
mov
adc
js
mov
popf
and
cli
push
mov
mov
js
sbb
push
xchg
jne
fs
cmc
out
popa
add
aam
push
cld
jo
fistpll
int3
lea
adc
jge
mov
fisubs
mov
loope
add
inc
notb
push
int
jbe
or
fwait
jl
call
pop
xor
jp,pt
push
jp
mov
push
jp
popf
cmp
mov
addb
push
stos
in
push
mov
inc
mov
stos
negb
in
fidivrs
imul
aaa
dec
loope
xchg
sub
shlb
cmpsl
and
or
inc
aas
jmp
mov
jns
test
addr16
xchg
mov
rcl
xchg
cmp
fldt
in
inc
inc
gs
cmp
adcb
fdivrs
cmpsl
aad
mov
mov
mov
insl
push
sub
xchg
roll
scas
xchg
adc
jmp
mov
inc
hlt
mov
in
add
mov
mov
sbb
jp
mov
sbb
mov
adc
xor
repnz
adc
and
outsb
les
sub
iret
push
enter
jno
imul
fsubr
shlb
mov
or
cmp
push
lods
aas
cld
aad
add
in
xor
data16
vgf2p8affineqb
sbb
rorl
movsl
std
xor
mov
test
mov
cld
loopne
sub
outsl
jg
vshufps
mov
or
inc
pop
sub
lcall
les
shlb
mov
pushf
mov
sub
sarb
nop
adc
imul
pop
lds
shl
push
mov
mov
mov
scas
mov
lds
ret
and
mov
jae
pop
xor
sbb
inc
jl
jns
adc
fs
stos
cmc
scas
jae
fsubs
mov
inc
shrl
inc
xorb
xchg
enter
icebp
imul
shlb
stc
repz
inc
xchg
ret
in
xchg
dec
and
das
into
inc
sarb
repz
sub
dec
cwtl
cs
int
pop
outsl
cld
jns
push
push
mov
and
andl
cmc
aaa
cmc
lods
add
xchg
lds
mov
jl
stos
hlt
test
adc
rolb
das
ds
xor
div
xchg
mov
jg
ret
jge
adc
orb
pop
je
dec
jg
rcll
dec
adc
in
into
sbbl
mov
dec
ret
les
mov
jecxz
xchg
xchg
in
or
mov
psubd
mov
dec
arpl
iret
bnd
adc
int
jp
jmp
jl
fists
jg
xchg
push
and
out
sub
icebp
idivl
leave
stos
fwait
sbb
xchg
jge
imul
aaa
sbb
or
mov
jmp
push
inc
or
fistpl
sbb
clc
adc
into
jg
sbb
jecxz
push
mov
mov
lods
aad
jnp
std
jl
outsb
out
dec
add
sti
cmp
cmpsl
imul
es
mov
mov
pop
push
sbb
testl
dec
inc
lods
xlat
inc
add
sub
mov
xchg
pop
xchg
int
dec
nop
add
sub
cld
cli
pop
daa
pop
fsubrp
mov
pop
outsl
sbb
mov
rcll
pop
cs
jnp
ss
dec
ja
and
jno
or
icebp
sub
jo
stc
mov
mov
push
pop
cmp
dec
mov
ss
cltd
pop
add
push
dec
sbbb
cltd
outsb
and
sahf
xor
and
hlt
sbb
ss
ret
mov
pop
adc
sarl
sub
imul
xlat
aaa
into
aas
idiv
rolb
jae
pop
shl
adc
addr16
pusha
cli
cmpsb
pop
ficoml
rcrb
sbb
in
push
mov
cli
jo
repnz
in
lods
roll
nop
cmpl
rorl
push
decl
xor
test
cs
lcall
mov
lea
test
cmp
dec
loop
push
mov
andb
xchg
addr16
xchg
addl
neg
dec
mov
mov
aaa
shll
cli
mul
add
xor
call
in
addl
pop
jnp
xor
mov
idivl
sub
or
mov
cmpsb
push
mov
arpl
in
sub
sbb
repz
neg
pop
xchg
rcr
mov
lock
shr
xor
fidivrl
in
aad
out
fidivrl
dec
popa
test
sbb
pop
adc
or
cmpsb
jnp
pop
adc
pop
mov
xlat
pop
daa
ret
arpl
jmp
inc
inc
gs
jmp
xor
mov
out
lea
insl
divl
push
jl
sbb
fpatan
pusha
ficomps
or
mov
pop
aad
mov
je
push
scas
mov
fsubrl
stc
jne
fisttpl
arpl
rclb
sti
pushf
push
je
fsubs
mov
filds
cltd
mov
xor
cmp
sbb
sub
mov
cmp
jmp
movsl
sbb
test
push
rcl
mov
out
stos
push
in
xchg
aas
inc
mov
adc
jg
add
stos
pop
fnsave
pop
leave
pusha
imul
mov
hlt
pushf
mov
lahf
iret
push
xchg
pop
fyl2xp1
mov
and
ficomps
sub
jnp
scas
repnz
ljmp
incb
fwait
dec
sbb
roll
into
pop
push
insb
lahf
lods
es
bound
adc
cmp
mov
lret
fsubl
sarb
jno
subl
push
sti
sbb
js
sub
or
mov
mov
lret
sti
js
xchg
xchg
sti
cmc
fwait
mov
int
jno
xchg
and
adc
jno
push
xor
jmp
sub
sbb
or
es
jp
movsl
xchg
xchg
xlat
repnz
sahf
es
mov
xchg
jmp
xchg
add
lcall
clc
fidivrl
dec
pusha
and
adc
dec
sub
out
xchg
add
dec
mov
std
mov
ja
xchg
sbb
pushf
jo
jl
xchg
lds
adc
clc
pusha
mov
insb
xchg
and
jns
int3
mov
rcrl
cs
rcl
test
fcomps
cmpsb
ret
cmp
sbb
mov
adc
mov
ror
and
pushf
cs
mov
shl
push
movsb
bound
push
cmp
adc
je
pop
jns
dec
inc
hlt
xabort
push
fldcw
fisttps
sbb
mov
adcb
jge,pn
aad
mov
fists
popf
es
mov
dec
add
lret
or
fsubrl
sub
dec
filds
subl
ljmp
sbb
add
sub
out
fdivl
aam
add
das
lahf
divl
pop
fucomi
popf
inc
aaa
push
xchg
out
cmpsl
sbb
jge
push
icebp
adc
push
arpl
sub
mov
mov
adc
cmpsl
xchg
pusha
insb
inc
cmpsb
pushl
mov
jmp
fs
aad
mov
mov
lds
add
outsl
or
xchg
pop
sarl
out
cmpsl
nop
loopne
jno
rcr
mov
xchg
xchg
and
fistpl
sbb
push
mov
xor
cwtl
sub
push
insl
jnp
mov
call
lea
mov
movsb
fidivrl
gs
out
jg
push
pusha
fldt
cmp
sub
inc
out
stos
mov
pop
out
mov
sti
mov
cmp
mov
sub
mov
pusha
or
jecxz
pop
imul
xchg
mov
stos
adc
fcmove
fcompl
cltd
dec
test
sub
leave
cltd
addr16
xchg
mov
jb
cltd
stos
pop
stos
sbb
adc
stos
mov
ret
ds
sub
ds
insb
lahf
sub
insl
addr16
and
mov
ljmp
mov
out
and
outsb
repnz
xchg
sbb
sbb
cli
daa
push
bnd
movsl
scas
mov
adcb
add
out
shll
inc
and
jl
jae
push
pop
aaa
and
inc
repz
ret
arpl
daa
cmp
inc
push
scas
xchg
lds
add
cmp
push
mov
insb
add
repz
ret
mov
cs
mov
faddl
add
outsb
rol
call
mov
shl
inc
jno
std
inc
adc
test
lcall
pop
mov
aas
icebp
xchg
or
js
adc
jg
mov
ja
dec
xlat
inc
repz
es
dec
cmp
pop
cli
leavew
xchg
les
inc
rcl
jnp
out
push
and
xchg
xlat
jle
sbb
pop
test
mov
jne
fucomp
pop
cmp
jp
call
fs
or
xor
das
ljmp
es
push
pop
jno
popa
sub
inc
dec
sbb
xchg
jbe
add
fildl
cmp
add
mov
imul
xor
call
outsl
jbe
sbb
sub
xor
cltd
mov
scas
cmp
cmp
sub
loopne
inc
js
push
jo
stos
cmpsb
pop
ja
cltd
testb
xchg
push
outsb
scas
sub
mov
out
jo
mov
xor
add
testb
fisubs
jge
sub
pop
iret
inc
mov
loop
fnstsw
adc
xor
pop
xchg
sbb
ljmp
pushf
dec
sub
mov
sub
outsb
add
jg
sbb
pushf
cmp
jmp
lds
add
sub
cmc
jecxz
cmc
pop
mov
pop
inc
iret
cli
repz
sub
loop
movsl
test
xor
and
inc
leave
hlt
add
adc
xchg
in
icebp
xchg
movsb
pop
clc
das
sbb
movsl
push
outsb
gs
nop
sub
jae
lret
les
inc
push
cmp
and
ds
data16
xchg
cltd
mov
inc
pop
sti
add
xor
in
dec
shr
pop
out
xchg
lcall
popa
test
push
sahf
icebp
ljmp
cmp
lods
pusha
sub
sub
add
xor
loop
or
addr16
add
aaa
sahf
fmuls
mov
push
add
add
cld
push
sahf
sub
add
aaa
in
aas
lock
push
cwtl
push
xor
test
jecxz
cs
mov
popf
pop
mov
lods
shrb
insl
xchg
push
lods
or
cmp
scas
or
lret
dec
pushl
stc
iret
add
movsb
mov
xor
mov
jnp
int3
pop
jo
ds
gs
insl
sub
shlb
mov
fwait
les
xchg
mov
loope
or
or
jle
jo
dec
cmp
fnstenv
js
cltd
cmp
andl
push
aaa
push
subl
xchg
dec
jns
lea
sbb
out
sbb
cmc
lret
orb
jl
fs
sub
push
jo
lahf
dec
mov
jmp
aad
xor
movl
ss
dec
in
or
imul
xchg
push
push
or
mov
ret
sti
adc
mov
sub
cmpsl
mov
ljmp
mov
stos
das
and
insl
sub
add
adc
or
and
je
ss
pop
pop
pop
ret
arpl
mov
fs
adc
or
push
jo
popf
sti
and
in
cmpsb
movl
sbb
pop
or
test
dec
stos
inc
xor
and
clc
xor
xor
loop
movsb
jbe
std
cmp
jae
cltd
xchg
pop
mul
aaa
push
push
push
mov
mov
fisubl
je
push
or
pushf
cmp
in
mov
sar
daa
jae
and
pop
dec
cli
pop
cmc
test
sahf
jmp
mov
jmp
inc
into
outsb
xchg
enter
pop
sahf
adc
test
jns
mov
dec
or
popa
sbb
aad
inc
or
out
or
push
push
les
or
nop
clc
stos
test
imul
adc
mov
mov
jecxz
push
pop
pop
popa
sbb
lret
and
roll
out
lret
icebp
mov
and
inc
or
loopne
adc
xor
sbbb
pop
out
ror
pop
cmp
ret
pop
xlat
xor
push
out
pop
pushl
xor
pop
mov
jp
xchg
jg
repz
lahf
icebp
bsf
repz
sub
xlat
outsl
rcl
xchg
mov
lds
clc
cli
mov
mov
and
jae
movsl
pop
out
mov
add
jns
ficoml
out
xchg
int3
popa
cmp
or
dec
push
ljmp
push
inc
xchg
jp
js
lret
addl
fs
xchg
rclb
cmp
push
adc
mov
dec
mov
pop
icebp
xchg
mov
or
inc
or
popf
and
lea
aad
inc
jl
jp
test
shr
lds
mov
or
mov
xor
jle
xlat
sub
adc
fmull
jne
divb
mov
icebp
mov
jp
sbb
xlat
imul
ficompl
xor
jns
sbb
add
jb
jnp
add
lds
call
jo
cmp
imul
push
es
shlb
in
in
lds
dec
clc
and
insl
sub
sub
jg
mov
sbb
les
adc
pop
xchg
enter
xchg
scas
cs
cli
loop
pop
stos
cmp
push
testb
xor
andl
adc
cmp
fists
stos
ss
int
movsl
mov
push
jge
test
xchg
mov
jbe,pt
enter
popa
xor
sub
xchg
xor
mov
das
int
lcall
xchg
pusha
out
or
lods
shrl
mov
mov
mov
sub
cmp
add
movsl
stos
insb
cmpsl
xchg
aas
xor
lds
fisubrs
pop
cmpsl
flds
mov
xor
ret
cwtl
cmp
pop
out
out
xchg
insl
xor
icebp
scas
jl
gs
mov
pusha
dec
dec
data16
mov
fcomp
push
sub
aas
es
and
and
xor
mov
fnsave
repz
mov
aas
test
arpl
ss
adc
clc
sub
dec
inc
pop
mov
dec
jns
dec
jge
xchg
xor
inc
sub
popf
js
xchg
and
push
mov
push
lea
dec
arpl
xchg
jno
xchg
inc
mov
ret
lret
sarl
fsubr
stc
add
pop
rclb
idivb
lret
shlb
std
mov
aam
xor
and
out
sub
jbe
mov
out
xor
xor
std
jl
sub
mov
ja
mov
out
push
or
or
pop
jnp
cmp
lcall
aas
push
sbb
movsl
sub
aas
dec
xchg
pop
sbb
dec
pop
popa
xlat
cmpb
xor
inc
mov
mov
fcomp
jmp
or
sbb
imul
js
sub
jne
jne
pop
stos
mov
fistpll
inc
mov
or
cmpsb
lock
ss
inc
mov
sbb
insb
xor
lret
pop
fcompl
ror
cltd
rorb
xchg
test
push
pop
or
pop
cmp
repnz
mov
mov
pop
pusha
cmp
adc
int
pop
adc
ret
dec
sbb
fsubrs
out
and
adc
inc
lds
mov
rcr
subl
out
shr
dec
jg
fidivrs
xchg
bound
lahf
loope
jmp
rorl
ret
test
enter
arpl
xchg
das
sub
and
int
rcrb
pop
jg
sub
aas
mov
push
enter
push
test
jo
xlat
ret
sahf
jae
push
add
cmp
xor
jle
dec
mov
mov
xlat
sysexit
xor
inc
jnp
ret
sbb
gs
mov
jmp
call
sbb
mov
movntq
or
push
xchg
push
loop
xor
mov
inc
subl
sub
lods
inc
cmovg
out
jmp
jmp
adc
xor
or
xchg
sti
test
jl
lea
aam
mov
popf
fisttpl
clc
push
adc
enter
insb
mov
jb
lods
push
movsb
sbb
xchg
sub
ret
xchg
jb
lods
xlat
jecxz
aaa
movsl
pop
iret
mov
sbb
mull
mov
fcomp
divb
sub
test
clc
js
add
addl
fbstp
add
push
and
cmp
mov
push
addl
push
lea
inc
inc
adc
es
dec
pop
shl
pushf
sbb
movsb
rcrb
out
sahf
pop
fdivrp
in
push
ja
sub
shll
adcl
je
xchg
sbb
cs
mov
add
in
loopne
dec
aaa
sbb
xor
aam
sahf
mov
test
xor
out
mov
repnz
test
outsb
sbb
test
push
pusha
push
enter
enter
fsubrp
out
push
out
fidivl
push
xlat
enter
xchg
jb
lods
mov
jno
mov
ja
lahf
sbb
in
push
adc
jge
xor
push
push
jno
pop
and
fbld
add
mov
aaa
mov
rolb
jge
loopne
inc
sbb
nop
xchg
sub
jne
xor
pushf
mov
arpl
out
mov
jle
subl
cmc
in
sbb
cs
xchg
into
scas
rcr
jne
lods
mov
mov
mov
loope
not
lods
out
dec
cmp
xchg
jae
push
jle
test
cmpl
lea
cmp
leave
arpl
bound
sbb
daa
sub
aaa
insb
imul
or
ds
pop
cmc
push
push
sub
xchg
mov
cmpsl
fsubrl
andl
neg
data16
scas
dec
aad
push
sbb
fwait
pop
xchg
pop
and
cltd
fildl
xchg
je
mov
mov
out
xchg
push
jb
test
sarl
sbb
and
cwtl
adc
nop
add
repnz
maskmovq
testl
push
jmp
cmp
sub
adc
jne
sbb
in
prefetchnta
jecxz
dec
fwait
dec
test
add
cld
fsubs
sub
add
addr16
add
cld
jnp
and
mov
mov
sub
cmp
mov
nop
dec
stos
push
inc
fdivr
leave
orl
ds
daa
mov
icebp
in
fisubrl
rcll
push
pop
cmpsl
lea
mov
add
ficoms
pop
mov
pop
xor
xchg
mov
dec
fsqrt
or
pop
jecxz
cwtl
xor
or
es
inc
in
test
in
mov
sbb
fbstp
out
aaa
lods
shll
movsl
cmp
inc
setp
leave
push
leave
in
int
inc
popa
sub
imul
js
stc
push
mov
mov
mov
loopne
lods
dec
stc
and
repz
or
pushf
add
fstl
les
rcl
pop
sub
and
dec
fwait
xor
andb
mov
fcmovu
nop
push
shrl
jg
leave
mov
push
push
loopne
dec
and
pop
push
push
enter
scas
xor
dec
mov
add
cmp
cmp
call
cmp
mov
mov
leave
mov
mov
push
add
std
test
mov
iret
xchg
xchg
popa
in
inc
jns
sub
mov
std
cmpsl
cmc
lea
stos
repz
cmp
orl
int
dec
sarl
sbb
pop
and
pop
out
aas
dec
es
loope
cmp
adc
and
add
imulb
fcmovu
mov
iret
fsubs
push
dec
das
data16
jge
sub
push
push
popa
jns
xchg
pusha
xchg
lcall
loop
int
sahf
sub
dec
xlat
inc
sub
dec
add
imul
in
data16
sbb
out
pop
jge
out
add
std
dec
orl
xor
popf
inc
mov
xchg
scas
lods
push
lds
mov
call
icebp
incl
pop
mov
js
mov
fisubrs
outsl
xor
jmp
in
int
cld
mov
mov
scas
sbbb
sub
outsl
lods
xchg
jne
cmp
add
add
movsb
cmpsl
stos
iret
std
call
and
inc
mov
inc
jne
xchg
mov
mov
ss
or
cmc
fcmovb
enter
shlb
sbb
mov
adc
cmpsl
ss
fstpl
fisttpl
dec
js
pop
into
adc
xlat
sub
jbe
popa
or
addr16
lret
pushf
add
insb
mov
xor
or
push
mov
rcrb
mov
adc
push
mov
dec
mov
lds
xor
imul
cmc
sub
sbb
push
not
subl
xor
sub
fisttps
sbbb
fdivrs
fildll
inc
loopne
cmpsb
bound
xlat
mov
imul
mov
jbe
lret
mov
sub
dec
sbb
jns
jmp
xchg
sti
cmpsl
sbb
repnz
scas
stos
or
mov
les
push
popf
mov
mov
cli
xor
dec
sarl
jne
movsl
add
adc
int
mov
mov
shld
popfw
xor
push
aaa
xor
jnp
lods
cmc
pop
cmp
mov
jmp
popf
dec
xor
jp
cmp
cld
xor
mov
push
push
pop
jae
aaa
insl
icebp
les
inc
stos
push
pop
test
dec
add
inc
pop
add
js
pushf
and
bnd
pop
ds
ret
loop
push
ss
inc
cmpb
mov
mov
adc
push
lret
xchg
adc
push
mov
frstor
cmp
add
dec
lock
mov
mov
adc
repnz
stos
repz
add
call
adc
pop
addl
sub
mov
pop
inc
nop
inc
pop
dec
jae
sahf
imul
xchg
xlat
pop
push
jge
jmp
movsl
int3
add
rcrl
mov
nop
stc
push
xchg
jne
mov
cmc
mov
stc
and
stos
push
jb
push
lret
mov
add
lock
ret
fyl2xp1
mov
fldenv
mov
lock
daa
je
cmp
or
loopne
cmc
cmp
or
sbb
aaa
outsb
cmp
cltd
push
cwtl
mov
mov
sahf
adc
mov
imul
rorb
mov
mov
das
pushf
fwait
int3
mov
in
mov
addl
jle
inc
fs
push
jno
sbb
push
outsl
mov
pop
cmp
mov
ficomps
daa
loope
lods
xchg
into
mov
lods
dec
lcall
sti
cmpb
arpl
xchg
and
mov
adc
dec
mov
jle
repnz
ficoms
push
jne
push
imul
repz
xor
cmpsb
cwtl
icebp
sub
rcr
movsl
lret
int
movsb
les
inc
stos
scas
xchg
mov
pushf
mov
dec
jmp
cmpsb
repz
loopne
subl
lods
dec
mov
cmp
pop
push
dec
cmc
in
ljmp
pop
adc
adc
pop
xchg
sub
jmp
jmp
jl
xchg
mov
and
sbbl
ret
adc
push
jno
cmp
jo
test
jg
lods
push
mov
fs
pusha
mov
or
and
inc
aam
in
mov
push
fcoms
mov
rclb
and
xor
push
shlb
jle
fs
fs
cs
out
roll
pushf
das
js
push
stos
mov
sub
test
outsb
sbb
mov
push
jae
add
popf
jmp
pop
loop
mov
stc
sbb
int3
sub
cld
rcll
add
outsb
sub
subl
pop
in
incb
and
xchg
and
sub
enter
lods
dec
cmp
mov
mov
mov
and
jb
loopne
jne
dec
out
aad
cmc
in
cmp
incb
dec
inc
jne
stos
sbb
cmp
ret
add
movb
or
rolb
xchg
inc
sbb
add
icebp
shlb
sub
test
rol
jb
out
push
dec
cmp
js
adc
adc
mov
mov
mov
push
ss
sbb
sub
mov
mov
fsts
divl
add
sbb
int
xchg
cmp
cltd
jnp
xor
add
pop
mov
enter
sbb
mov
test
ret
roll
sahf
popa
mov
xlat
and
fidivrl
rorl
mov
out
das
pop
test
addb
daa
sti
push
cltd
shll
sbb
cmp
sbb
dec
out
pushf
aas
add
push
icebp
addr16
aam
lcall
ss
adc
fcmovu
shl
jns
dec
push
inc
and
mov
adc
xor
push
lods
hlt
jnp
mov
jno
out
mov
fwait
cmp
mov
xchg
xchg
pushf
test
jne
sub
inc
iret
je
cmp
fistl
insb
scas
aaa
jp
aad
mov
xor
adc
or
scas
in
mov
iret
cltd
aas
cmp
int3
sbb
cmpsl
fldl
arpl
adc
push
lret
xchg
xchg
jb
jb
nop
adc
cmp
xchg
sub
jae
xor
insl
adc
push
pop
mov
andb
cld
stos
push
pop
dec
in
sub
pop
mov
test
sub
fiadds
icebp
fistl
or
movsl
out
sbb
or
xor
cmp
mov
dec
ret
das
cmp
stos
cltd
clc
pop
jns
out
out
sbb
and
jae
mov
fistpl
lods
stos
or
pushf
cmp
repz
pop
je
jge
push
add
cmpsb
fstl
repz
sbbb
dec
push
mov
jns
inc
inc
fwait
mov
incl
pop
lcall
mov
push
cmp
mov
lret
and
iret
stc
push
or
mov
add
inc
or
pop
jmp
adc
xchg
xor
jle
into
inc
aaa
lds
adcl
jne
cwtl
ret
in
sahf
mov
jne
jnp
es
jg
cmc
subb
inc
adcb
push
mov
sbbb
sub
jnp
cmpsl
mov
clc
ja
es
and
sbb
xchg
cmp
ss
mov
mov
mov
adcb
outsb
pop
or
mov
cmc
lods
sbb
mov
sbb
popa
inc
clc
cmpsb
loopne
jnp
push
push
loope
push
pop
stc
adc
pop
mov
or
lcall
jnp
and
dec
cmp
notl
aam
xor
ficompl
mov
aaa
and
dec
cltd
mul
mov
mov
movsl
loope
mov
mov
fnstenv
cld
insl
push
aad
clc
pop
out
xchg
ljmp
mov
push
jb
jge
incb
in
mov
and
jbe
jmp
into
xor
jns
fisubrs
and
adc
mov
inc
add
mov
js
mov
push
sub
or
lods
and
repz
xor
aad
cli
sbbl
mov
shrb
pop
std
xor
lods
mov
mov
sti
stos
sbb
in
fisubrs
mov
push
fisubl
fldt
repnz
cmovle
mov
lret
pop
lea
jecxz
ret
out
sub
paddd
popf
shr
or
xchg
mov
dec
jbe
sbb
push
push
jae
pop
je
cli
pushf
mov
sbb
sbb
mov
ss
and
clc
out
xor
dec
ljmp
cmp
mov
popf
cmp
aam
mov
push
in
push
jmp
xchg
in
test
xchg
and
xorb
pushf
jge
pop
xor
scas
not
cmc
out
mov
aaa
in
in
aas
and
lods
in
push
bound
push
lret
lods
dec
pop
or
outsb
sub
cmp
test
arpl
shrb
cmp
add
pop
icebp
xor
jecxz
mov
xchg
es
clc
mov
sti
pushf
mov
cltd
push
and
fimuls
mov
jo
daa
dec
imul
or
icebp
sub
jmp
mov
add
filds
cs
sub
loop
add
flds
jne
fistps
hlt
push
cld
mov
mov
adc
testl
pop
jno
cli
cli
fisttps
mov
xchg
sahf
pop
dec
andb
jp
out
xchg
aaa
jl
out
mov
jg
jge
jns
xchg
mov
sub
inc
inc
jae
push
sbb
daa
je
add
xor
cwtl
inc
data16
xor
push
or
stos
cmp
mov
popa
ljmp
xor
lds
mov
or
xor
adc
or
psllq
ss
loopne
gs
test
dec
scas
xchg
sbb
and
pop
jae
jp
mov
xlat
and
xor
add
test
decb
or
cmp
jg
and
mov
xchg
js
test
loop
lods
inc
push
sub
lea
and
pusha
or
sbb
xchg
or
jno
jge
mov
sti
mov
cmpl
pop
lock
ja
sahf
sbb
adc
test
fistps
or
or
jge
xchg
mov
mov
lret
bound
jmp
or
adc
mov
push
push
add
imul
pop
ffree
sub
int3
test
sub
movsb
fst
push
add
pop
xchg
sub
wrmsr
test
and
sub
push
dec
pop
mov
stos
push
xor
test
dec
test
sub
xchg
pop
sub
mov
pop
cpuid
jle
pop
les
push
pushf
dec
out
add
mov
mov
fdivl
js
push
imulb
mov
sub
pushl
jne
andb
icebp
xlat
push
mov
push
shl
cmp
std
hlt
inc
and
cld
add
inc
add
gs
call
fists
jmp
in
fcomip
arpl
notl
fnstsw
dec
rorl
xor
mov
add
adc
or
xchg
pop
fisubrl
jns
movb
out
push
orb
inc
shlb
pop
xchg
iret
sahf
fnstcw
cmp
movl
pusha
in
int
push
add
add
fwait
gs
dec
inc
pop
push
or
imul
push
fwait
out
push
sbb
neg
outsb
aas
mov
clc
pushf
daa
xor
xchg
mov
lahf
add
mov
cmp
push
mov
push
cmpsb
rorl
mov
pop
mov
xchg
lock
mov
cmp
push
lret
xchg
push
int3
xor
dec
andl
ror
cmp
inc
int
dec
movsb
mov
push
std
jle
orl
test
ret
adc
int3
mov
loop
xchg
push
int
aas
fsubrs
pop
dec
cmp
lock
or
lds
mov
inc
leave
rcrl
test
ret
jo
jl
cld
stos
shlb
lret
mov
adc
cwtl
add
or
dec
js
aam
jno
cmp
lahf
mov
in
jo
xchg
xchg
inc
sbb
sub
lcall
ljmp
cmp
int3
mov
adc
cmp
movsb
add
xor
dec
mov
xchg
inc
lret
lea
pushf
pop
rorl
push
aam
rolb
sub
pop
scas
int3
push
sub
cmpsl
test
cmpsb
sub
dec
push
ret
jle
push
shlb
pop
push
pop
icebp
dec
loopne
ret
mov
mov
in
cmpsb
mov
or
notl
cmc
sbb
mul
idiv
enter
into
pop
mov
jo
jbe
adc
inc
xchg
rolb
mov
aam
and
jne
cmpsb
add
inc
lods
jno
in
ja
mov
decl
dec
pop
les
insl
add
js
loopne
iret
mov
in
inc
das
iret
dec
aad
cmpsl
pop
and
adc
sarb
or
jecxz
xchg
movsb
pop
add
hlt
push
xor
ret
dec
pop
sbb
adcb
mov
movl
add
lea
xchg
insl
jle
pop
sbb
inc
fiaddl
push
inc
xor
lahf
fsubrl
imul
cmp
xchg
add
insl
dec
adc
ret
hlt
insl
and
imul
dec
inc
pop
call
sbb
jae
sub
and
mov
add
rcrb
xlat
or
adc
test
adc
xor
aaa
inc
cmp
les
xchg
cmp
stos
scas
nop
pushf
iret
and
dec
aad
add
pxor
mov
icebp
jge
xor
jbe
push
jle
push
jb
cltd
push
jge
push
sbb
jb
jge
insb
cltd
lahf
popa
sbb
fists
outsb
movsb
aas
inc
dec
inc
and
test
pop
fmul
adc
xor
mov
xor
push
push
lret
adc
hlt
sbb
and
dec
mov
hlt
jge
popf
popa
jbe
icebp
test
dec
test
and
dec
mov
lea
mov
fnstsw
imul
add
xchg
fcompl
fimull
adc
mov
pop
je
mov
in
pop
popf
sahf
popa
cmp
mov
addr16
xchg
lcall
add
mov
fstpt
jno
icebp
lcall
imul
aam
iret
in
and
fiaddl
mov
imull
inc
mov
jl
lret
sbb
aas
test
add
popa
xor
fwait
js
mov
cli
gs
push
inc
mov
aas
mov
imul
popf
push
fcompl
mov
sub
mov
mov
ljmp
xor
lahf
cltd
or
adcb
sbb
push
or
aad
push
daa
xchg
lds
add
ret
notl
cmc
xchg
arpl
data16
pop
mov
dec
jmp
mov
push
xchg
stos
sub
popa
mov
scas
dec
pop
jp
jb
roll
scas
inc
xchg
cmp
nop
daa
or
imul
int
adc
cmp
inc
loop
mov
push
inc
inc
scas
in
shlb
jg
jl
int3
ja
sti
mov
stc
dec
leave
popf
mov
pop
or
jne
repnz
mov
sbb
push
sbb
imul
stc
sub
ljmp
pop
fdivl
dec
push
ds
popf
or
repz
ja
je
dec
lret
lds
sub
daa
repnz
fisubrs
add
aad
push
je
pop
xor
jg
cmp
push
push
out
sti
aad
push
adc
lods
mov
nop
mov
test
pop
lret
jecxz
mov
jbe
or
out
test
imul
out
xor
add
nop
or
jno
dec
out
addr16
push
nop
or
test
lret
sub
cmp
ret
mov
gs
fsts
mov
test
pop
ret
mov
data16
cmpsb
xchg
inc
pop
cld
int3
push
inc
sbb
and
push
nop
sub
jp
cmc
in
and
out
mov
jge
mov
pop
xchg
lcall
mov
sub
adc
enter
jne
int
test
loope
add
fs
repz
hlt
out
push
loop
out
push
fdivrl
sub
fwait
stc
je
mov
xor
test
rolb
in
cmp
mov
mov
push
sub
sub
or
pop
fmuls
xor
jno
int
xchg
mov
sbb
sub
bts
jno
aas
shlb
sbb
mov
push
inc
outsb
mov
out
sbb
cld
jbe
mov
aas
stos
movsb
sub
mov
add
jge
std
das
lods
data16
sub
fistpl
sti
or
ja
das
rcl
mov
sbb
jecxz
xchg
mov
ja
into
cmpsb
pop
iret
fnstenv
cli
xor
scas
add
xchg
out
push
mov
int
inc
test
imul
lahf
aas
and
mull
sub
jmp
jo
and
xchg
das
clc
incb
dec
xor
push
lahf
dec
rcr
popa
ret
test
sbb
push
lea
mov
dec
xor
sbb
push
xor
cmp
push
fmuls
fsubs
out
add
push
lea
pushl
mov
jg
sarl
cmp
pop
loopne
daa
and
inc
push
xchg
inc
cmp
mov
dec
cltd
inc
inc
test
and
jne
or
mov
mov
cmp
inc
aas
mov
jl
out
imul
push
popa
cld
xchg
stos
int3
rorb
add
ret
das
push
xlat
nop
fwait
stos
and
lret
dec
add
stc
fsubrs
mov
and
or
cmp
xor
and
cmc
xchg
xor
add
int
mov
les
rorb
push
mov
rcll
xchg
mov
aas
jno
je
orl
jg
inc
lcall
xor
jl
jecxz
lcall
jecxz
movsb
pop
sti
jae
xchg
test
pop
and
fyl2x
fmul
loope
cmp
push
fildll
je
test
push
xor
xchg
test
xor
negl
mov
leave
jmp
dec
jmp
pushf
and
repnz
add
push
mov
test
int
lods
mov
sahf
lahf
pop
jno
pop
nop
movsl
pop
std
lret
stos
jge
mov
aad
pop
jo
loop
popf
test
dec
mov
pushl
je
mov
mov
xchg
sbb
loop
mov
repnz
cmp
push
dec
loop
mov
sbb
jp
scas
pop
ss
lea
jmp
pushf
sub
sub
dec
lods
pushf
jmp
out
jg
sub
sub
and
in
cmp
xor
push
insb
push
push
pop
sarb
pop
adc
pop
xchg
sub
scas
loop
sub
dec
fsubrl
fwait
cld
cmp
adc
dec
sub
in
cs
and
shl
ljmp
adc
dec
push
iret
sub
mov
pop
loop
jbe
loop
mov
testl
stos
sbb
fwait
scas
xchg
cmp
inc
nop
xor
xchg
jbe
lods
in
leave
insb
xchg
sub
mov
popf
mov
push
sub
movsl
add
sbb
inc
mov
lahf
dec
push
mov
mov
xchg
int
pop
out
mov
test
jmp
pushf
insl
push
pop
lods
push
shll
leave
int3
arpl
jp
jae
repnz
xchg
mov
and
loopne
ds
jbe
inc
push
or
push
mov
leave
movsl
mov
leave
test
mov
jmp
pusha
add
sub
xor
push
adc
ret
mov
mov
fwait
mov
push
sbb
mov
sbb
cmpsb
inc
mov
out
add
inc
pop
out
lret
je
sub
out
stos
dec
sub
mov
mov
std
push
push
ret
push
cld
inc
sbb
fistl
jmp
push
dec
in
jb
les
jmp
mov
dec
lret
dec
js
adc
and
jnp
stos
fistl
jne
cmp
mov
cltd
enter
shlb
push
add
in
mov
add
inc
js
pop
inc
mov
adc
arpl
xchg
nop
push
pop
fistl
pop
push
aad
cwtl
or
xchg
fldt
mov
aas
xor
dec
ljmp
imul
addr16
xchg
out
xchg
or
push
push
mov
mov
es
cmp
jl
adc
std
dec
fwait
sbb
and
jbe
add
aas
jecxz
lret
mov
xchg
mov
mov
add
mov
fldt
mov
add
mov
cmp
mov
cmp
in
mov
fsubs
test
jge
jecxz
mov
jae
inc
les
xchg
add
test
out
fwait
or
cmp
cli
rcr
movsl
dec
fs
jb
xchg
out
push
sbb
mov
inc
sbbl
cli
dec
in
sahf
test
fisubrl
jbe
stos
push
sub
jge
sbb
push
jno
adc
pusha
jge
jno
jg
adc
mov
insl
cmp
mov
sbb
aas
adc
mov
pop
xor
test
imul
lods
call
pop
cwtl
pusha
cwtl
int
loop
jge
call
push
sbbl
mull
push
mov
loopne
or
jbe
push
mov
sub
in
jle
aam
pop
xchg
nop
out
mov
pop
xor
imul
add
ds
sub
mov
add
xor
stos
enter
ret
call
stc
lcall
xchg
jae
pop
sbb
push
fimuls
test
sub
jge
mov
out
out
sub
jmp
sub
mov
inc
inc
xchg
push
inc
xor
mov
xchg
sub
mov
pop
mov
push
sti
stc
ror
mov
mov
add
xchg
or
jp
bound
daa
std
inc
mov
shlb
jecxz
lahf
cmc
push
mov
jbe
call
sub
shlb
ret
mov
inc
pop
cmp
leave
rcl
sub
enter
or
clc
adc
jns
jne
scas
xchg
cs
adc
pop
sub
cmp
push
jb
sbb
mov
movsl
sti
add
sarl
jle
pop
out
cmpl
hlt
or
push
adc
inc
mov
mov
xor
andb
ret
sub
or
and
and
enter
push
imul
sub
push
cwtl
test
xchg
xchg
stos
mov
repz
mul
ds
lea
xchg
push
jmp
scas
pop
into
pop
jg
stos
sahf
outsb
jae
mov
mov
movsb
test
push
loope
jge
ficompl
int
in
outsl
add
lahf
div
sahf
sbb
pop
push
mov
jo
les
mov
in
xor
ficoml
cmp
sub
fstps
cmp
fsubrl
incb
jmp
movsb
inc
das
add
sub
std
push
push
out
leave
lcall
add
outsl
addb
sbb
scas
lds
pop
cmc
imul
fbstp
or
mov
xlat
adc
popf
imul
daa
dec
rorb
pop
mov
push
pop
dec
sbb
lahf
call
js
out
and
insb
xor
stc
imul
xchg
inc
lods
jnp
loop
xor
sbb
loop
mov
shl
rcrl
cmovp
xchg
insb
and
cmpsl
and
sub
mov
nop
les
lods
jb
mov
js
inc
pop
mov
jno
negb
imul
leave
fidivl
in
popf
and
mov
sbb
fldenv
popf
xchg
aad
lret
clc
pop
mov
fnstcw
out
cmp
lods
lahf
pop
frstor
mov
xchg
filds
ret
sub
loopne
xchg
mov
pop
imul
mov
movl
or
bound
or
addr16
out
mov
sub
cmp
sbb
rolb
xchg
fadd
and
jb
test
test
or
inc
cmpsb
test
jmp
outsl
cmp
inc
jno
xor
mov
jae
ja
mov
xlat
or
mov
fiadds
sti
mov
scas
movsb
xchg
das
enter
jno
jns
jbe
std
loop
in
pop
or
adc
dec
pop
insl
call
lods
cmpsl
rcl
pop
dec
fnstcw
aas
movb
lods
inc
or
push
outsb
outsl
or
push
sbb
mov
clc
cmc
int
cltd
and
xchg
mov
mov
incb
pop
adcb
pop
add
ljmp
xchg
mov
call
push
leave
testb
shl
push
iret
dec
int
sbb
adc
adc
sub
andl
pop
cwtl
xchg
sub
out
and
movsl
aaa
add
fs
loopne
adc
xchg
shl
mov
xchg
cmpsl
aaa
testb
je
bnd
loop
insl
and
outsb
dec
repnz
inc
das
mov
mov
data16
xchg
cmpl
sbb
cmp
ficoms
xor
push
mov
mov
pushl
loope
mov
stos
sbb
mov
cmc
mov
mov
jge
pushl
mov
sbb
mov
loop
int
insb
push
xchg
xor
mov
idiv
adc
out
jecxz
das
shrb
jge
ficompl
xor
andb
and
inc
andb
jecxz
shrl
scas
scas
sbb
daa
stos
popf
add
test
or
idivb
subb
call
int3
dec
out
pop
xor
inc
xor
dec
rolb
inc
test
shrl
pop
dec
and
jge
insb
dec
sbb
cmp
bound
lret
daa
mov
xchg
jl
gs
jle
lahf
cmp
mov
rcll
ret
add
or
xchg
jb
xor
imull
je
or
out
arpl
repnz
dec
daa
js
lods
mov
jae
decw
jg
jle
inc
adc
mov
xchg
out
cmc
and
repz
mov
mov
adc
xchg
jle
ret
pusha
dec
jge
je
scas
push
mov
cmp
fisttps
add
sub
adc
ret
jl
xchg
fbstp
xchg
jmp
mov
mov
out
lcall
sbb
mov
clc
mov
jb
fiadds
adc
add
inc
mov
sub
xor
jne
xlat
lock
add
cmp
insl
mov
jge
mov
sub
stos
int
cmc
jae
int
sbb
inc
mov
adcl
stos
xor
nop
test
iret
std
repz
and
mov
aam
int
cmp
mov
outsb
cmc
mov
sti
cmp
mov
xchg
or
das
mov
add
outsb
stos
xor
aas
jae
push
xchg
cltd
popl
roll
test
mov
cwtl
outsl
jo
xor
popl
in
divl
dec
inc
sub
popl
jae
push
and
push
inc
jbe
sahf
int
lahf
rcl
cmp
loopne
cmpsl
xchg
divb
and
and
aaa
sub
mov
sahf
popf
push
mov
pop
in
mov
mov
pop
cmpsb
xor
adc
mov
test
mov
cmpsb
add
loopne
jl
scas
mov
idivb
xor
cmp
pop
iret
jno
mov
mov
pop
push
sahf
sbb
push
ds
out
ja
mov
fisttpl
mov
lahf
mov
pop
dec
and
xor
push
fs
jne
pop
rcll
loop
movb
loope
mov
std
cmp
mov
dec
lret
sub
data16
adc
repz
mov
pushf
outsb
pop
and
int3
fwait
cltd
dec
push
int
test
js
aaa
aas
mov
loopne
fcoml
push
repnz
test
jle
pop
clc
movsl
sub
xchg
js
loop
mov
pop
sbb
mov
vpsllw
jne
ds
and
into
xorl
subl
or
lods
xchg
xchg
out
fcmovnbe
dec
dec
test
dec
shrb
flds
cli
fisttps
xlat
jae
pop
iret
dec
clc
inc
test
int3
push
mov
add
mov
push
sub
lea
cmpl
jmp
pusha
xchg
dec
xor
adc
aas
pop
sub
xorb
in
imul
dec
std
scas
xchg
shrb
int
mov
adc
sbb
mov
xor
or
jnp
xchg
fmul
icebp
or
clc
mov
outsl
pop
or
add
cs
imul
out
xor
mov
je
arpl
push
rcl
mov
xor
aad
xchg
clc
hlt
orl
jbe
das
sbb
mov
stos
lds
std
in
add
fnstenv
inc
daa
xchg
jecxz
push
mov
cmp
adc
pop
dec
mov
lock
cmpsb
in
test
xor
push
lds
loop
sub
aad
imul
rolb
call
adc
int3
in
push
xchg
push
pop
pop
cmpl
mov
test
sbb
add
mov
adc
mov
in
cmpsl
inc
lret
aad
stc
fsubr
lds
push
lock
and
push
or
data16
add
sbb
je
stos
subl
xor
and
push
icebp
ljmp
jno
popf
sbb
adc
mov
xor
pop
jle
and
sqrtps
stos
in
and
or
jmp
dec
rolb
add
pop
or
jp
cmp
dec
mul
jae
xchg
mov
int3
dec
ljmp
mov
sub
lods
into
mov
mov
fnstcw
ss
pop
mov
pop
sbb
ja
ja
mov
pop
mov
js
pop
mov
cmpsb
mov
push
fidivrl
mov
out
and
rorl
pop
lea
ja
minps
stos
out
pushw
shll
into
pop
movsl
sub
rclb
ss
fs
sbb
cwtl
cs
mov
outsl
mov
inc
jne
out
mov
inc
dec
mov
outsl
inc
call
jns
cmp
insl
movsl
into
mov
xchg
iret
imul
insb
sbb
shrl
rcrb
stc
cwtl
sub
cli
cli
adc
and
pop
jb
lret
mov
push
mov
inc
xchg
inc
sub
xchg
icebp
dec
cmp
mov
and
mov
or
xor
pop
jnp
jae
lcall
mov
pop
outsb
mov
pop
cmc
adc
fists
xchg
enter
jo
add
or
and
inc
xlat
fbstp
cmp
adc
or
cmpb
insb
repz
in
pop
sub
stos
mov
jb
dec
add
sarb
scas
cmp
cs
aad
pop
mov
mov
out
jb
jg
jae
jg
dec
loop
pop
push
stos
add
fcoms
sbb
sbbl
insb
mov
fbld
xchg
or
xor
sub
xor
lods
sarl
mov
sbb
sbb
aam
out
imul
out
sub
cwtl
inc
mov
stos
test
adc
push
mov
aaa
xchg
push
xor
mov
fs
cmpsl
pop
sbb
scas
imul
imul
cmp
sub
fld
aad
add
lahf
cmpsl
in
inc
aad
popa
cs
pushf
jmp
inc
cs
les
scas
mov
xor
add
sbb
sub
loop
imul
xlat
and
sbb
lahf
outsl
push
jge
mov
xchg
nop
gs
loope,pn
push
cmp
mov
xchg
mov
insb
xchg
ljmp
gs
dec
hlt
cltd
mov
sub
scas
sarb
out
fidivs
lcall
add
sbb
test
test
xor
js
pop
mov
xor
arpl
mov
and
addr16
ja
mov
add
and
push
popf
add
sub
push
xchg
jns
cwtl
ljmp
call
out
push
pop
mov
mov
adc
jnp
testb
cld
into
sub
and
xchg
mov
pop
xlat
mov
test
pop
jle
pop
jl
repnz
adc
out
es
mov
mov
xor
mov
out
adc
cmp
jae
sahf
push
sub
je
mov
pop
scas
jmp
out
inc
sub
cld
jne
cltd
mov
push
daa
sbb
fxam
jo
xchg
cmp
sub
push
ljmp
fists
es
stos
lcall
cli
js
arpl
test
into
xchg
xchg
xor
or
aam
lea
dec
push
inc
bound
cmp
les
stos
push
mov
rorl
jl
push
pop
mov
cmp
inc
fiaddl
sub
int
lret
pop
pop
jmp
push
test
aad
dec
adc
cmp
cli
lock
js
mov
out
xor
mov
add
push
push
std
jle
and
ss
stc
out
pop
leave
add
icebp
cld
int3
xchg
ret
sbb
inc
mov
mov
pushf
in
ja
bound
xchg
test
mov
and
leave
sbb
inc
scas
notl
mov
jmp
cmp
or
jb
push
add
cmpsb
mov
and
inc
sub
mov
mov
push
or
imul
fiaddl
dec
clc
inc
lret
xlat
icebp
xchg
mov
jne
xor
ds
or
pop
orb
jbe
push
pop
lods
pop
cmp
ds
das
dec
scas
push
sti
push
jmp
sarl
fnstenv
fmuls
cmc
sbb
pop
sbb
mov
cmpsb
insl
addr16
and
mov
das
testb
imul
and
sbb
push
and
insl
fsubr
xchg
mov
mov
fsub
sbb
sbb
add
or
or
jl
scas
jecxz
pop
mov
aam
mov
aad
scas
xor
out
mov
fcomps
out
divb
push
call
jl
arpl
dec
dec
cld
dec
cmpsl
idiv
faddp
dec
add
mov
push
push
ret
xchg
aas
xlat
sbb
test
jno
int
mov
jae
pop
mov
sub
push
ficompl
mov
lcall
cmp
clc
push
aad
xchg
popf
pusha
pop
outsb
sub
nop
data16
mov
roll
aas
popa
or
movb
pop
iret
stos
push
into
and
ss
mov
xor
xchg
push
out
push
call
test
jb
mov
aas
push
sub
mov
and
xchg
pop
jmp
lds
data16
adc
and
popf
cmp
inc
and
cmp
adc
addb
jg
mov
hlt
sbb
es
aam
pusha
push
xor
sahf
jle
xor
pop
stos
or
push
cwtl
mov
mov
movsl
cmp
add
addb
ss
out
mov
xchg
lret
xchg
sti
xor
hlt
pop
fisttpll
adc
xchg
rcrl
jl
sti
fadds
jo
cmpsb
push
mov
inc
ja
pusha
cmp
les
sbb
mov
enter
jmp
in
pop
dec
xchg
rorb
popf
jo
cld
mov
cmp
stos
inc
sub
push
pop
cmp
daa
fistpll
inc
enter
out
popa
or
dec
flds
dec
jge
mov
jmp
mov
jl
adc
sahf
pop
scas
lea
xlat
imul
ja
in
ret
imul
cld
mov
in
mov
jns
aam
stos
adc
sbb
ss
addr16
lock
xor
sbb
notl
lret
jg
jmp
pop
aas
ljmp
mov
mov
arpl
jnp
push
pop
jecxz
xor
mov
subb
imul
jae
les
jl
xchg
mov
mov
push
xor
shll
imul
dec
ret
popa
lcall
popa
sahf
jnp
movb
scas
bound
adcl
sbb
fildll
push
mov
cmp
scas
sbb
jb
mov
ret
cltd
ja
mov
outsl
inc
jp
mov
orb
mov
mov
inc
scas
jns
lret
inc
loope
repnz
xor
jb
aam
lret
imul
sub
ret
fiadds
cs
mov
pop
mov
jecxz
stos
jno
mov
inc
jge
js
mov
inc
push
bound
cmp
adc
or
cmpsb
daa
shlb
and
test
add
hlt
js
jno
xor
mov
dec
add
mov
pushf
add
movsb
je
jmp
jno
or
vcomiss
shll
scas
or
adc
ret
stc
jns
push
jae
mov
xor
idivb
cmp
sub
mov
adc
or
gs
loop
repz
xor
xchg
lret
les
in
inc
cmp
mov
fisttpl
mov
cltd
dec
push
cmp
daa
cwtl
and
mov
xchg
xchg
mov
sarl
aaa
test
mov
dec
ja
add
idiv
in
adc
dec
sub
xchg
mov
js
jg
or
jo
mov
icebp
pop
xor
loop
je
aas
std
add
pop
add
data16
icebp
jge
ds
add
push
in
add
sub
mov
pop
jecxz
mov
cmc
xchg
push
call
jecxz
leave
dec
mov
out
sub
xlat
addl
cmp
push
jb
aad
mov
test
fdiv
stc
push
fdivrs
es
mov
mov
mov
xor
scas
ss
dec
inc
mov
dec
fsubrl
cmp
fwait
arpl
sbb
fidivrs
mov
jb
pop
dec
dec
sarb
imul
hlt
int3
jno
in
je
jl
mov
sub
and
test
aam
push
adc
mov
jo
and
leave
ret
cmp
cmp
insl
jle
call
sub
mov
push
data16
jecxz
sbb
add
adc
push
imul
into
push
cmp
jbe
fisttpll
movsl
sbbl
add
mov
fwait
addr16
cmpsl
add
xchg
jmp
jns
xorl
inc
mov
clc
adc
inc
add
dec
xchg
push
push
subb
or
lret
shl
mov
mov
in
sbb
sbb
and
loope
je
cmove
jp
inc
xchg
into
adc
sahf
fcmovnb
jle
stos
in
lock
aas
mov
mov
dec
pop
sub
mov
sbb
dec
sbb
adc
jno
jbe
or
popf
sbb
ror
loopne
sbb
out
jl
xor
xor
xor
sbb
psadbw
les
ljmp
loop
int
sub
fs
outsl
cltd
fidivl
jnp
pop
stc
ss
pop
hlt
jmp
mov
push
dec
sub
xchg
je
scas
or
mov
bound
mov
loopne
jne,pn
test
ljmp
mov
xchg
shlb
in
fwait
test
inc
xor
inc
adc
push
jb
fidivs
and
or
sbb
xchg
stos
sub
daa
arpl
cmpsl
inc
fcoms
pop
fistps
lcall
std
dec
xor
jo
ret
push
jecxz
mov
lds
cmpsl
rcrb
adc
mov
rcrb
push
fsubp
ret
inc
dec
mov
lods
cmp
mov
cmp
lods
mov
out
or
xlat
in
pop
sub
ret
out
cmp
xlat
sbb
push
fildll
and
lahf
data16
cs
loop
mov
adc
stos
and
test
pop
add
jb
pop
leave
outsb
mov
lods
addr16
pop
aaa
stos
cltd
lret
sahf
test
dec
add
out
sbb
push
push
fwait
cs
cs
pop
inc
mov
shll
lret
and
sbb
adc
xorl
outsb
enter
sub
inc
lret
imul
pop
mov
shrb
and
pop
lods
or
mov
push
lock
cmpsb
lret
push
outsl
sub
xchg
xchg
out
fsubl
jg
add
inc
dec
adc
mov
mov
in
aad
mov
cmpl
mov
cmp
lret
cltd
repz
sub
insl
daa
lret
into
sub
hlt
mov
ljmp
cmpl
call
add
sahf
popf
and
test
adc
ds
fwait
push
pop
mov
call
push
xchg
call
dec
iret
int3
jae
addr16
or
or
xor
inc
leave
add
adc
fildll
daa
sbb
shl
xor
mov
incl
xchg
cld
enter
outsl
and
inc
push
inc
cmpsb
pop
fidivl
outsl
pmaxsw
pushf
mov
addr16
lahf
xchg
jmp
dec
push
test
testl
jnp
cmpb
inc
and
and
jl
xchg
adc
sti
pop
in
push
mov
fadds
cld
mov
loop
sar
xor
push
ss
dec
arpl
sub
in
stos
int3
ficompl
scas
cmp
mov
pop
jp
fidivrs
push
popf
out
mov
subl
lods
lods
ret
sahf
cmp
jmp
dec
ljmp
pop
cwtl
add
add
scas
mov
mov
mov
jecxz
pusha
adc
cmp
sar
jnp
outsl
js
sub
push
leave
add
mov
xor
out
add
mov
add
sbb
sub
add
loopne
pusha
mov
pop
ret
addb
mov
sub
negb
inc
sbb
xlat
dec
in
pop
ret
mov
daa
adc
mov
mov
out
and
mov
mov
fmulp
sub
stc
add
and
rclb
aad
xchg
pop
pop
mov
jge
xor
notb
rolb
push
lock
cmpsb
jae
xchg
sbb
outsl
test
shlb
repz
mov
xor
bound
push
out
jmp
jmp
cmp
dec
outsb
ds
pop
sbb
mov
xchg
sbb
out
ret
sbb
add
inc
test
jge
add
push
lods
in
iret
testl
mov
mov
cmp
jo
repz
xor
imul
jle
popa
xchg
sub
xlat
imul
xchg
aam
add
mov
ret
inc
pop
dec
cmp
sub
fldt
xchg
push
jbe
mov
and
fwait
loopne
inc
ret
cld
test
dec
mov
pop
and
enter
mov
sbb
loope
lcall
jns
das
ljmp
sub
cmp
addr16
inc
mov
cld
clc
mov
fiadds
fwait
rcll
jg
mov
icebp
bound
aaa
sub
adc
testl
in
xlat
insb
fdiv
mov
mov
mov
lea
mov
jmp
sub
and
lods
outsb
add
cmpsl
bound
outsl
fildl
ret
push
das
shll
jl
mov
push
sahf
lock
cltd
push
jne
aad
pop
hlt
sub
scas
neg
in
or
sub
das
inc
cmp
ljmp
ja
xchg
fwait
lods
pop
push
mov
push
ja
fnclex
lret
stos
inc
adc
xor
push
fmull
test
hlt
sbb
inc
sub
and
aad
pop
insb
inc
ja
scas
mov
and
repnz
outsb
lods
adc
adc
mov
stc
aas
loopne
out
add
jbe
outsl
ror
cld
mov
xor
pop
fstpt
and
test
mov
addr16
jns
loop
cmp
and
sbb
xchg
mov
mov
inc
sub
shlb
pop
sub
fs
rcrl
sub
rcl
sub
fmul
jne
or
lahf
fcom
fnstsw
lods
bound
mov
xchg
subl
fstp
stos
cmp
mov
or
push
adc
mov
cmc
jecxz
shrb
sti
imul
ljmp
scas
data16
lahf
ss
mov
ds
push
repz
ljmp
mov
les
lods
inc
scas
or
push
mov
cmp
add
jle
add
fistpl
repnz
frstor
subb
cwtl
inc
sbb
jae
sbb
push
cmp
test
xor
jo
xor
mov
xor
pop
out
pop
xor
push
and
mov
arpl
les
xor
dec
mov
cmpsb
and
pop
ss
mov
lret
jle
dec
pop
shr
lret
fstps
rol
adc
push
lea
add
xchg
rcll
pop
mov
push
sub
sbb
add
mov
lret
sbb
nop
jle
and
sub
arpl
stc
inc
add
mov
clc
mov
out
loop
fimuls
ret
fisubl
mov
jl
in
es
cmp
rcrl
pop
and
or
xchg
add
xchg
fcomps
subb
push
inc
js
mov
adc
repnz
sub
aaa
push
jne
jle
test
pushf
das
mov
addr16
push
mov
arpl
jne
gs
cli
mov
in
jg
add
ret
mov
xchg
pop
mov
pop
fcoml
sub
aaa
pop
fs
mov
xor
mov
jmp
mov
inc
ljmp
lret
mov
and
mov
pusha
cwtl
mov
push
xchg
push
jp
and
inc
jp
dec
mov
inc
xlat
lahf
cwtl
out
sub
dec
loopne
xor
mov
push
outsl
cmp
mov
adc
je
mov
movsb
sbb
inc
or
push
or
mov
jge
fwait
and
fcompl
sub
icebp
pop
negl
popf
call
push
mov
in
hlt
icebp
stos
jl
lds
testb
pop
sbb
stos
ljmp
in
fildl
xor
xchg
sub
adc
mov
dec
cmpsb
sub
sub
fistps
adc
mov
push
cmpsb
pusha
xlat
into
iret
fbstp
mov
nop
insl
xchg
jmp
jle
fwait
mov
push
xorb
outsl
xor
mov
sbb
jle
and
fcmovnb
jnp
data16
cmp
add
sub
stos
add
bound
dec
add
or
out
push
pmaxsw
je
hlt
test
pop
mov
sti
adc
add
push
ret
mov
fsubrs
sub
push
lret
iret
jb
mov
aas
adc
adc
push
xchg
dec
push
mov
rcll
sbb
iret
bound
shll
loop
inc
jno
adc
xor
mov
hlt
mov
xchg
fs
pop
pop
aaa
xchg
ja
shrl
jbe
inc
cmp
cmp
adc
mov
mov
sub
shlb
jle
add
push
in
dec
stos
in
inc
add
sbb
cmp
xchg
aaa
popf
lods
adc
push
and
inc
mov
arpl
icebp
xor
and
push
add
lods
xchg
inc
push
xor
lret
mov
int
stc
jnp
mov
orb
jnp
into
pop
jmp
in
subb
movsb
lahf
je
out
inc
aad
push
pop
adc
scas
stc
push
sti
or
mov
xor
jbe
adc
out
cli
add
mov
imul
and
loope
shll
jg
fmul
sahf
dec
jg
pop
test
pop
mov
mov
cld
sti
jmp
insb
in
xchg
cmp
ficomps
pushf
cli
test
fnsave
sbb
scas
sbb
mov
les
loope
cmp
pop
fisubrs
sub
mov
sbbl
and
rolb
xchg
mov
inc
fs
push
jg
scas
int3
pop
pop
lret
ja
in
std
sbb
xchg
mov
mov
and
shll
aas
out
movsb
shlb
mov
clc
cmp
push
and
add
out
shll
test
dec
addb
cltd
or
loopne
pop
adc
pop
out
mov
pop
enter
in
jnp
push
insb
cmpsb
loopne
repnz
lahf
ret
mov
jae
bound
mov
dec
outsl
icebp
out
jbe
idivb
dec
ss
jae
and
xor
int3
subl
inc
cmp
rol
mov
fbstp
push
dec
aaa
inc
ret
fs
adc
mov
push
add
imul
push
std
mov
push
jno
inc
jns
out
popa
gs
jmp
adc
sub
jns
cs
dec
mov
hlt
loop
icebp
hlt
or
and
dec
xor
mov
push
out
or
fistps
pop
mov
jle
scas
xor
mov
jge
popf
rol
xchg
add
sbb
outsb
add
and
dec
rolb
nop
pop
pop
cltd
fwait
push
sub
push
lods
call
in
test
outsb
cmpsl
lret
jmp
cmp
inc
adc
jnp
sub
push
rorl
mov
adc
jmp
cs
mov
js
and
add
xchg
cli
xor
cs
je
imul
add
adc
add
sbb
outsb
mov
pop
pusha
lds
jno
out
push
mov
fsts
push
xchg
cli
fnstcw
jb
les
ror
and
inc
call
das
adc
push
out
mov
les
imul
leavew
inc
fdivrs
lock
or
mov
inc
incb
lock
jmp
pop
dec
out
std
das
cmpsl
mov
jb
adc
adc
cmp
fistps
dec
rcr
or
filds
imul
jns
xor
cmpl
dec
jg
cld
dec
lahf
popa
add
lcall
out
push
mov
or
enter
push
gs
add
push
cmp
fwait
pop
orb
adcl
sub
mov
or
xlat
adc
xchg
repnz
xor
aad
stos
pop
js
cli
jp
cmp
mov
cmp
shr
adc
jo
xor
and
outsl
andl
sub
ror
imul
ljmp
add
pop
fistpl
int
inc
rclb
sub
ret
and
outsl
mov
mov
fdivs
insl
lds
popf
xor
mov
int3
loopne
pop
fwait
movsl
push
fdivrs
icebp
sub
sbb
or
aam
fucomi
or
lcall
popf
mov
sbb
out
xor
pop
fwait
nop
xchg
out
fwait
shl
jl
push
rorb
adcb
mov
mov
cmp
movsl
xor
aam
test
sub
pop
cmp
ds
out
xchg
popf
mov
mov
xchg
jo
cmc
sbb
shll
pushf
dec
jae
jmp
mov
cli
or
out
test
xor
aam
xchg
xor
lcall
mov
pop
flds
outsl
xchg
mov
lds
push
ljmp
nop
or
enter
xchg
dec
sbb
push
lret
leave
sbb
cltd
and
roll
or
int
shlb
pop
insl
into
stos
inc
mov
sahf
dec
adc
leave
xlat
stc
mov
mov
lret
inc
out
int
movsb
add
out
mov
adc
js
fistpl
aas
in
mov
cli
add
jecxz
xchg
sbb
dec
std
rcr
pop
mov
mov
cs
mov
or
dec
orb
sahf
push
loope
pop
fdiv
xlat
or
push
mov
or
lods
js
pop
adc
insb
stos
movsb
sub
fwait
sub
add
mov
aas
jmp
inc
add
inc
push
clc
call
popl
test
sbb
nop
and
in
sub
fidivs
sti
out
mov
test
ret
pop
lods
nop
adc
clc
add
cld
mov
ljmp
call
fsts
xchg
add
scas
jecxz
cmc
mov
imulb
push
and
dec
mov
adc
jb
dec
int3
jns
lahf
jo
cld
mov
pop
xchg
call
icebp
mov
push
cld
in
std
pop
xchg
adc
lea
adc
pop
adc
pop
xchg
sbb
daa
and
jl
add
shll
push
mov
jnp
loop
stos
or
lock
push
pop
sub
shr
mov
mov
xor
jle
adc
lret
aad
lods
push
lret
popa
aaa
mov
lret
or
out
stos
adc
mov
popf
mov
xorb
cmc
mov
rclb
stc
adc
lods
fs
sub
lock
sub
dec
mov
int
movsb
mov
dec
push
sub
aas
pushf
sub
fmull
sarl
xor
mov
lds
inc
popa
jmp
mov
popa
sbb
bound
jo
mov
sbb
xor
xchg
out
pop
push
jmp
mov
push
or
fs
fsubs
mov
jmp
ret
fmull
aad
lods
cltd
ret
mov
mov
xor
inc
mov
and
add
out
mov
aad
mov
sahf
mov
lods
dec
test
inc
in
cltd
jns
aam
std
test
xchg
pushf
jae
sbb
lods
int3
jno
push
xor
scas
out
and
dec
inc
cmc
lret
fs
push
xchg
adc
dec
mov
mov
leave
mov
and
stc
or
mov
pop
pop
pushf
mov
adc
fcomps
inc
imul
xchg
ret
xorb
add
iret
push
lock
aaa
mov
xchg
imul
fildll
xchg
iret
ficompl
aas
add
mov
es
inc
fnstsw
iret
xchg
loopne
int
cmp
pop
out
fidivrs
and
insb
stos
shlb
push
loopne
das
cmp
push
leave
test
arpl
xchg
inc
xchg
mov
mov
and
aaa
jge
outsl
cmp
idiv
sbb
insl
jo
cmp
rol
int3
into
xorl
lcall
fmull
les
xchg
mov
in
sbb
lahf
mov
pop
arpl
mov
sub
test
les
test
or
mov
fisttps
inc
push
cmp
rclb
xor
cmp
rcll
xchg
add
pop
jnp
inc
xchg
ret
das
mov
mov
fs
jmp
mov
int
adc
out
pop
pop
in
movsb
js
fmuls
add
push
lret
push
xchg
cmpsb
je
addl
inc
out
daa
sub
push
loopne
xor
hlt
inc
adc
orl
outsl
fucomip
clc
adc
insb
inc
mov
imul
xor
cmp
dec
rcrb
or
push
mov
or
push
in
insl
sbb
inc
int
inc
cmpsl
jle
xor
dec
subb
imul
push
fildll
jmp
ja
cltd
pop
or
sahf
pop
insb
insl
lea
dec
and
sub
dec
add
in
nop
fucomp
xchg
jb
xchg
xchg
jns
adc
sarl
xchg
inc
mul
popa
lea
stos
adc
push
sub
ffree
mov
scas
push
movsb
hlt
shlb
hlt
pop
sbb
ljmp
sti
fistpll
loopne
push
mov
mov
push
mov
jo
add
cmp
pop
insb
sarl
rsm
xor
nop
push
add
add
loop
stos
cmp
and
mov
dec
cmp
jo
test
orl
ljmp
in
pop
adc
cwtl
dec
adc
cld
sarl
jnp
ret
fistps
call
repz
xor
testl
fisubrs
mov
js
xor
cmp
jle
jle
mov
call
dec
inc
add
xchg
cmpsb
lods
jns
jl
mov
cmp
mov
pop
and
sbb
lahf
stos
sub
pop
dec
fsubrl
lods
mov
out
sbb
inc
mov
adc
mov
popa
add
push
les
out
pushf
mov
xor
dec
fmul
dec
mov
pop
dec
mov
xchg
test
das
push
jae
xchg
imul
fbstp
icebp
add
fwait
repnz
cmp
aas
ret
sub
push
pop
sub
xchg
outsl
cmpsb
push
and
sub
ret
lea
out
aad
jnp
stc
fiaddl
mov
mov
xlat
mov
aam
loope
lret
and
xor
in
insb
lds
sub
aas
jo
ljmp
repz
add
and
ss
mov
xor
adc
xchg
out
lea
repz
jl
jb
dec
cmp
pcmpeqw
jecxz
xor
mov
test
mov
sti
pop
icebp
out
xor
adc
pop
nop
dec
pusha
and
cmpsb
mov
out
andl
test
popf
or
mov
dec
push
stc
cld
dec
scas
sub
loopne
inc
sbbb
out
movsl
add
jecxz
and
push
adc
das
scas
dec
ljmp
insb
out
pushl
scas
cmpsb
jmp
arpl
fdivrl
es
sub
push
mov
bound
add
scas
xchg
and
cmp
sbb
pop
arpl
cmpsl
pop
mov
popf
bound
je
push
mov
push
xchg
sub
or
jno
jp
pusha
inc
loopne
push
ljmp
aam
sbb
push
aaa
sub
pop
lret
gs
xor
jo
push
out
mov
lret
push
icebp
loopne
out
pop
pusha
addr16
add
stc
pop
fimull
insl
dec
xchg
push
cli
or
ss
cmp
dec
xor
adc
test
pop
imul
mov
push
jg
mov
test
jb
popa
xor
or
inc
and
and
sti
shll
mov
xor
mov
rcrb
dec
mov
or
lret
pusha
gs
fwait
repnz
out
icebp
cmp
mov
mov
lret
dec
out
dec
mov
stc
mov
call
adc
dec
or
fsts
lret
xchg
stos
xlat
sub
sub
outsl
cmp
sbbb
jecxz
push
add
jnp
lea
lret
sbb
into
dec
jbe
imul
pushf
cmp
rcrl
mov
add
fstl
jo
cmp
cwtl
sahf
repz
icebp
push
in
in
fldcw
movsl
pushf
and
fld
fs
xchg
xor
add
bnd
adc
cmpsb
shll
xchg
scas
das
movsb
push
mov
push
inc
jmp
iret
jmp
incb
pop
testb
inc
sub
mov
push
subl
js
les
mov
cmc
out
sbb
inc
into
fists
mov
xor
jmp
loop
out
and
mov
divl
daa
movsb
out
xor
cmp
adc
mov
test
in
jnp
cmp
les
imul
mov
into
rorl
inc
subl
mov
stc
js
outsl
fdivrl
mov
jbe
sub
mov
rcrl
rcrb
insb
push
sbb
movsl
xchg
out
pop
mov
xlat
push
cmc
jecxz
mov
nop
jmp
cmp
jmp
orb
dec
into
orl
push
jnp
cmp
test
call
pop
push
stos
outsb
sub
shr
out
notb
orb
fdivr
out
arpl
push
cmpsb
mov
les
clc
push
push
inc
aam
cmp
pop
lds
ljmp
mov
mov
ja
sbb
insl
xchg
add
inc
popa
sbb
sub
ss
outsl
xor
lcall
cli
pop
lahf
and
jg
push
jns
mov
stos
sub
arpl
xchg
push
int
loopne
jno
repnz
pop
inc
shr
dec
mov
je
mov
pop
adc
xchg
jmp
outsb
lea
clc
pop
loopne
sub
xor
mov
test
rcrl
inc
dec
inc
cmp
cmp
jg
cs
cmc
aas
jo
mov
mov
cmp
jbe
lods
dec
ret
mov
push
or
es
pop
sub
pop
mov
rcll
lea
movsb
cs
push
jmp
mov
jmp
fdivl
dec
in
fs
or
lahf
mov
std
cmpsb
lcall
into
arpl
inc
xchg
pop
sbb
ret
out
aam
insl
es
sub
dec
sbb
pushf
in
int
add
rolb
pop
mov
rcrb
test
iret
mov
push
fcmovnb
or
mov
rcl
xor
bound
dec
scas
nop
pop
cmp
aam
fidivs
in
xor
mov
lret
rcrl
cmc
fwait
add
out
cmp
out
pop
jns
repnz
inc
pop
pop
mov
les
pop
in
out
bndldx
incl
pop
popa
mov
sbb
test
jecxz
pop
cmc
xchg
add
cmp
mov
cli
push
push
sub
shll
inc
jbe
adc
mov
into
add
mov
adc
add
mov
jae
test
add
orb
mov
pusha
push
push
xchg
into
jno
hlt
sbb
sbb
sub
push
lahf
aaa
jecxz
sub
push
fdivrl
mov
out
aam
sub
push
lods
jns
sbb
lretw
ja
jge
push
shlb
add
jae
xchg
ja
jl
or
ljmp
mov
cmp
and
mov
imul
loop
add
jnp
cmp
xlat
ret
ja
inc
addr16
adc
push
bound
mov
test
loop
mov
js
in
mov
psubq
add
pop
cmpsb
aad
sahf
cwtl
stos
lds
dec
inc
xchg
xchg
xor
push
bound
xchg
adc
cwtl
mov
cmp
data16
cld
fcmovnbe
gs
testl
int
pop
xchg
into
movsl
jle
jmp
sbbb
cmpsl
cmp
push
ret
and
push
push
lret
dec
daa
push
mov
pop
aad
vdivss
jg
aad
addb
fs
push
mov
dec
and
mov
fadds
mov
mov
js
clc
popf
jge
jl
cmpl
sti
jns
in
cmc
das
dec
mov
pop
pop
push
fwait
push
xlat
dec
xchg
repz
push
xor
lret
mov
fldt
in
xchg
sub
xor
add
pop
mov
cmp
adc
add
dec
repnz
leave
out
mov
xor
cmpsl
dec
add
fisttpll
sbb
lea
mov
out
mov
icebp
fidivrs
pop
jmp
or
in
lds
imul
adc
jge
push
xor
loop
or
jns
sub
adc
sbb
mov
adc
imul
pop
pop
pop
cwtl
test
push
into
dec
pop
mov
cltd
adc
mov
nop
out
mov
xlat
mov
mov
add
stos
call
pop
ret
or
mov
rcl
sbb
cmp
xlat
xor
popf
push
in
push
xor
inc
add
ret
stos
in
pop
arpl
or
sbb
cmpsb
inc
aaa
and
sbb
out
sbb
dec
scas
lcall
push
pop
and
adc
or
push
cmp
jmp
sbb
mov
jne
iret
inc
mov
sbb
cmp
adc
jmp
aas
mov
stos
jg
sbb
rorl
push
aas
in
andb
mov
mov
mov
stc
mov
dec
pop
aaa
dec
inc
lods
mov
lret
mov
inc
jns
mov
rorl
mov
ljmp
decb
fsub
sbb
push
mov
test
dec
iret
mov
add
gs
fbstp
mov
mov
cmp
jg
add
mov
inc
mov
rcrb
add
daa
loop
xchg
mov
dec
dec
adc
pop
std
add
mov
movsb
stos
int3
lahf
fcomps
pop
test
xor
adc
sti
pop
rolb
sbb
push
out
pop
lret
push
into
add
jle
mov
clc
inc
fidivl
xor
repz
mov
xchg
clc
or
lahf
and
insl
insb
or
ror
stc
daa
int3
jmp
cmp
mov
call
jmp
addr16
xor
ljmp
jp
adcb
cmpsb
mov
xchg
aaa
test
sti
das
dec
pop
stos
dec
jle
xchg
push
jnp
pusha
xor
jg
clc
push
xor
dec
loopne
mov
inc
push
mov
mov
testl
pusha
iret
je
or
mov
cmpsb
leave
mov
movsl
mov
add
and
xchg
inc
dec
push
mov
sub
imul
icebp
mov
out
pop
stos
shrl
sbb
div
inc
and
and
fiadds
or
or
test
sub
mov
push
dec
mov
sub
mov
data16
adc
insb
lret
out
mov
pop
lahf
cmpsl
xor
lea
cmp
andl
mov
cwtl
xchg
fcoml
insl
mov
or
mov
mov
or
lds
lcall
daa
jmp
movups
inc
cli
lret
cmpsl
movq
mov
pop
enter
lahf
mov
arpl
inc
clc
mov
push
into
jne
dec
mov
xchg
lods
cwtl
sub
andl
divl
outsb
jmp
insl
ljmp
and
scas
inc
lret
mov
xor
sub
push
push
popa
jecxz
test
sahf
shrl
xchg
pop
test
loope
pop
mov
dec
xor
dec
cld
aad
adc
ret
jnp
dec
out
xor
pop
insl
lods
pop
stos
sbb
aaa
int3
pop
and
sbb
js
and
js
cli
and
lds
out
aaa
loop
mov
mov
push
lds
and
jp
sub
into
int3
sbb
xchg
mov
lahf
fmulp
pop
add
inc
ret
mov
and
ljmp
leave
lret
daa
fildll
popf
inc
dec
ror
shl
xchg
sub
mov
push
or
adc
inc
insl
and
in
insl
lret
pop
adc
scas
sbb
jns
and
and
xchg
xlat
inc
cmp
movsb
mov
cmp
loope
popl
in
mul
xchg
in
pop
mov
xchg
test
inc
aam
stos
aas
mov
mov
inc
mov
mov
mov
cli
into
out
call
iret
jl
mov
fcomps
inc
push
lret
insb
pushf
call
xor
jns
pushf
push
sbb
fsubrs
fistps
fcmove
loope
mov
roll
rorb
enter
scas
mov
inc
mov
ret
aas
loope
mov
adc
push
and
sbb
incb
test
xor
jb
inc
mov
mov
and
int
add
jns
lods
dec
mov
jns
mov
and
out
mov
les
out
mov
pop
lret
rcr
cmc
inc
int
lock
mov
pop
mov
mov
add
bound
mov
mov
mov
push
push
loop
in
sub
lods
aaa
popf
cmp
add
dec
add
sub
cltd
xorb
insb
xchg
divl
aaa
and
dec
mov
and
jl
mov
dec
mov
pop
ret
xchg
rcr
xchg
dec
pop
aad
pop
sub
enter
add
mov
loope
cs
adc
mov
dec
test
add
xchg
mov
insl
out
shrl
into
pusha
adc
inc
movsb
insl
mov
xchg
int
outsb
and
sbb
test
js
call
mov
js
add
mov
xchg
or
mov
fs
inc
fisubl
push
xchg
dec
dec
add
out
xchg
mov
dec
adc
test
or
loope
push
adc
add
sub
repnz
lcall
inc
into
out
pop
push
mov
pop
push
jle
imul
lahf
adc
cmpsb
lret
mov
jns
cmp
jae
inc
cli
mov
cli
cmpsb
out
cmp
into
xor
lock
push
test
aaa
stos
scas
mov
jnp
push
mov
xlat
cli
outsb
xchg
jo
xor
jns
pop
jecxz
fxch
iret
sbb
jg
xchg
mov
fwait
inc
ror
das
xlat
pushf
sbb
xchg
mov
aaa
pop
cmp
xor
in
inc
adc
mov
gs
mov
scas
jecxz
mov
test
xor
add
mov
jae
sahf
and
or
mov
xlat
sbb
mov
xchg
sub
push
dec
pop
test
ja
push
nop
fsubs
cltd
enter
call
movsl
mov
int3
sbb
pop
shll
iret
inc
jg
xor
jle
aad
sub
pop
mov
sub
adc
dec
and
arpl
hlt
popa
addr16
sti
rolb
pusha
aam
xchg
lret
sub
mov
mov
or
dec
repz
mov
cmpsl
addb
cltd
lret
pop
jp
in
in
adc
inc
xchg
push
popl
fldcw
xchg
out
sbb
dec
andl
int
ss
pop
daa
lret
push
imul
stc
jbe
js
pop
shlb
jo
stc
test
sub
outsl
loope
mov
pusha
jp
xchg
dec
scas
push
mov
test
stos
mov
xchg
xchg
enter
sbb
out
lahf
inc
pop
or
test
lcall
int
mov
sarb
pop
mov
push
jnp
jp
xlat
add
inc
sbb
adc
adc
in
adc
pop
rcl
jg,pt
add
and
hlt
test
or
mov
stc
pop
jg
xor
in
mov
movsb
push
jns
jge
rep
push
dec
aaa
cmp
fildl
stos
rcr
movsl
imul
xor
pushf
in
xor
sbb
xor
push
add
xor
outsl
push
and
cwtd
push
dec
arpl
fidivrs
mov
orl
iret
jecxz
push
jmp
scas
shrb
dec
xchg
sbb
sub
pop
dec
jg
fildl
push
push
mov
cs
xchg
dec
push
mov
int
or
jno
inc
jb
stos
clc
jg
lods
mov
push
jp
cli
push
pop
movsl
xcrypt-cbc
cmpsl
adc
pusha
insl
aaa
addr16
lods
xchg
sar
cltd
xor
stc
aas
and
enter
jl
notb
incb
stos
pushf
or
xor
dec
sbb
pop
mov
inc
xchg
jb
jno,pt
inc
pop
push
dec
cmp
jmp
mov
pop
mov
mov
push
ja
adc
cmpsl
popa
cs
mov
inc
dec
lret
mov
jo
repnz
jne
adc
ja
idiv
adc
shlb
daa
mov
pop
cli
sbb
jb
mov
neg
out
adc
fcoms
inc
or
adc
push
xor
jmp
clc
cmp
outsb
scas
in
xchg
mov
xchg
out
inc
add
pop
jae
mov
subl
xchg
cmp
jmp
push
out
mov
sbb
sbb
mov
mov
shlb
jae
xchg
xlat
mov
sahf
fs
pop
jmp
in
fistps
std
bound
xchg
cmp
mov
xor
jp
push
push
xorb
shrb
add
sub
add
and
or
cs
add
loop
cmp
mov
shl
cwtl
and
mov
insb
mov
nop
and
icebp
repz
sbb
ret
sbb
mov
sbb
jo,pn
adc
jns
pop
mov
insb
add
fcomps
aad
cli
sbb
popf
sub
push
dec
into
addb
loop
mov
outsb
push
jb
push
scas
jns
jo
mov
dec
pop
push
negl
ss
stc
nop
push
xchg
pushf
and
or
arpl
mov
adc
mov
rcrb
jns
shrb
lea
divb
addr16
mov
cmp
sbb
test
movsb
out
nop
mov
jl
mov
xor
and
xor
and
jp
pushf
fwait
icebp
mov
imul
add
test
jg
es
stos
push
popf
cmp
hlt
sarb
aam
push
and
cld
aas
loop
andb
xor
push
pop
adc
dec
daa
cmp
jg
pop
cmpsl
lcall
sub
pop
cmp
dec
sar
dec
bnd
push
xchg
loop
outsb
stos
daa
cmp
jecxz
mov
lods
mov
repz
ret
jp
xor
clc
dec
add
sub
pop
inc
lods
add
mov
and
sub
mov
ljmp
mov
bound
adc
in
lret
lret
inc
loop
fcoml
adc
push
inc
jecxz
add
pop
push
sub
jmp
mov
add
push
add
jg
sets
cmp
push
mov
leave
test
fstp
inc
dec
adc
xlat
stos
mov
jmp
daa
jge
jns
out
xor
dec
sub
negb
loope
imul
and
lcall
inc
adcb
cli
dec
dec
xchg
jp
inc
das
mov
movsb
xchg
pusha
cmpsl
and
push
mov
xchg
mov
pop
jle
xchg
lock
hlt
adc
inc
pop
repnz
pop
mov
jecxz
repz
popf
inc
mov
out
mov
inc
outsl
std
jmp
mov
jns
addl
dec
add
outsb
sub
pop
mov
pusha
and
cltd
js
add
sub
sub
jmp
fdivrs
xor
fildll
push
outsl
test
jae
xchg
in
push
leave
fisttpl
pop
push
pop
movntps
je
xchg
out
dec
test
outsl
in
dec
sub
es
xor
in
and
imul
test
sub
mov
dec
adc
xor
mov
loopne
cmp
pop
and
popa
call
cmp
push
pop
jmp
ss
push
pop
lods
push
popf
inc
xchg
lds
xchg
je
in
mov
push
and
popa
and
push
rorl
js
mov
pusha
mov
push
dec
xor
push
and
repnz
mov
fldt
jge
aaa
dec
cwtl
mov
out
pop
outsl
arpl
ret
adc
jecxz
dec
ss
lret
jge
stos
dec
sbb
loope
mov
push
inc
loope
outsb
fst
cs
jno
dec
mov
jb
push
sysret
lods
and
shlb
popa
sbb
inc
ret
xor
mov
or
dec
ljmp
add
jo
push
add
ret
xchg
in
pop
jo
push
mov
xchg
push
push
and
adc
and
mov
sahf
inc
push
add
mov
aaa
sub
xlat
test
ds
test
sbb
lock
sub
sbb
inc
lea
jp
dec
test
dec
inc
mov
aaa
lea
xchg
movd
cmp
mov
xchg
pop
sub
cs
push
push
jp
mov
bound
pushf
enter
imul
roll
adc
loope
add
jns
inc
xchg
andb
movsl
add
sub
inc
jl
push
aaa
mov
nop
in
js
or
fcmovnb
mov
scas
and
sub
xchg
pushf
data16
fmulp
dec
xor
mov
lods
lret
inc
dec
adcl
lret
outsb
cmp
pop
int3
push
imul
dec
pop
dec
inc
push
xor
lock
and
and
jmp
or
push
pop
lods
cs
cltd
subb
sbb
add
repz
jl
stos
roll
stos
jns
jns
xchg
sbb
pushf
stos
or
jb
jl
push
in
dec
add
xchg
int3
jl
fistpl
cmpsb
push
and
xor
lahf
mov
dec
clc
es
aaa
aaa
mov
push
std
dec
addb
or
iret
and
stos
pop
je
pushf
lret
ds
int
insl
subb
iret
push
cmp
sahf
sbb
rcrb
insl
fwait
sti
pop
repz
push
mov
xchg
scas
lods
or
call
in
loop
mul
rolb
push
andb
mulps
stos
js
loop
push
jp
pop
loop
jp
loope
int3
fldcw
or
inc
jnp
test
mov
jb
and
ss
mov
push
ljmp
nop
and
or
cmp
push
jge
or
ljmp
icebp
xchg
dec
dec
shlb
xor
mov
fisttpl
push
sbb
aas
outsl
cmp
mov
xor
mov
rcrl
pop
adc
jnp
lea
out
mov
ret
dec
add
lret
pop
mov
jmp
mov
pop
sub
ds
outsl
sbb
inc
dec
fcmovb
test
push
out
push
fbld
mov
sbb
lods
or
int3
push
loopne
or
int
fucomip
les
inc
adc
outsl
pop
mov
push
xor
lret
fbstp
sbb
dec
loop
outsl
xor
xlat
sub
mov
inc
sub
or
add
jg
test
adc
add
orb
mov
dec
in
in
lods
aaa
shl
xor
mov
xchg
xor
sti
repnz
sub
insb
mov
mov
loope
subb
mov
or
add
sub
test
jle
fldl
nop
in
cltd
sarl
mov
push
mov
sub
xchg
cmp
test
in
fisubs
inc
orl
pushf
mov
sub
mov
sbb
cmp
and
cmp
out
add
pop
dec
adc
or
mov
or
cs
inc
jne
insb
sub
pop
adc
push
sub
sub
inc
out
jecxz
push
sbb
into
pop
push
aaa
or
fisttps
out
cmp
ds
lods
sub
mov
xchg
add
and
mov
in
aas
dec
mov
xchg
pop
sub
iret
adc
push
out
scas
inc
push
fdivp
mov
xchg
fsts
pop
push
call
stos
dec
push
push
test
mov
stos
test
mov
aaa
push
xchg
and
push
dec
sub
fnstcw
js
push
icebp
jns
test
fcomip
in
je
mov
lret
dec
ret
imull
ja
stc
adc
cmp
lret
test
mov
xchg
aas
jg
cmp
test
jp
sahf
stos
cmp
cmp
sbb
lret
pop
xchg
cmc
fistps
ja
stos
mov
shlb
mov
mov
push
movsb
and
xor
ja
or
nop
pushf
jnp
out
inc
dec
jo
push
jae
adc
in
loop
lods
adc
sub
test
pop
leave
call
jg
imul
add
notb
cmp
ljmp
mov
jge
push
pop
mov
push
cmc
cli
xchg
dec
mov
sti
and
pop
push
and
cmp
pop
int3
adc
push
shr
lea
rcll
mov
fbld
mov
cmpsb
and
jl
pop
in
enter
lock
pusha
insl
xchg
fdivrl
xorb
jmp
or
lret
daa
psubusb
dec
popa
jge
test
sbb
sub
rorl
imul
or
cmp
sbb
sbb
sti
leave
sbb
subb
rcrb
inc
shrl
loopne
xor
pop
jns
insl
aam
sbb
loope
in
push
jno
out
jns
mov
dec
sub
fmull
ss
push
push
daa
mov
lods
or
cmova
test
je
fwait
loopne
sub
mov
hlt
xlat
dec
adc
aam
xor
push
cwtl
push
push
fidivrl
sub
xor
sbb
icebp
mov
xchg
and
dec
sahf
or
mov
popa
roll
cmpb
andb
jmp
sbb
lcall
ds
addl
push
mov
mov
sub
jnp
mov
cld
xor
adc
xor
xor
rorb
imull
pop
pop
xchg
add
xor
mov
jns
pushf
bound
xor
fsubs
mov
sbb
fdivp
lcall
lcall
add
or
dec
ret
sbb
cmp
push
mov
orb
mov
lret
aaa
and
mov
ds
jo
mov
jle
sub
push
js
or
xor
xor
imul
sbb
test
fidivrl
in
mov
push
pop
andl
cmp
call
xchg
add
xchg
mov
xchg
aad
jge
sbb
dec
jecxz
je
test
xlat
cltd
clc
imul
pop
inc
push
out
push
jb
or
roll
inc
fstl
inc
cwtl
enter
pop
push
push
ret
jmp
ret
dec
jge
sbb
jno
outsl
mov
fs
inc
js
nop
mov
orb
sub
das
pop
fisubs
shrl
xchg
flds
push
mov
sub
mov
jg
push
xlat
or
lcall
add
lcall
or
popf
jg
sbb
daa
and
fcmovbe
scas
rclb
gs
mov
popf
inc
lret
mov
or
cmp
mov
fsubs
jnp
rorl
xlat
outsb
mov
mov
movsl
xchg
in
nop
fisubrl
or
fiaddl
or
in
dec
ret
pop
fistpll
adc
jg
inc
add
mov
rolb
pusha
mov
pusha
outsb
orl
dec
push
subb
or
jecxz
or
push
sub
out
jl,pt
fbld
icebp
xor
adc
aas
mov
sub
loop
xor
daa
mov
inc
add
adc
inc
add
dec
inc
les
mov
mov
pop
out
cmpsl
filds
out
imul
fwait
hlt
call
push
aad
adc
popf
mov
pop
daa
jb
movsb
mov
mov
mov
shrl
ret
shll
subl
push
loop
jge
lahf
push
jns
push
jmp
lods
fadd
mov
mov
sbb
and
adc
and
push
and
mov
enter
js
mov
jp
sahf
xor
mov
dec
dec
dec
jg
add
gs
into
out
pop
push
fcomip
insl
lret
xor
shlb
pop
sub
int
fnstenv
stos
clc
test
xor
lods
movl
cmpsb
push
push
mov
sbb
movsb
stos
mov
addr16
mov
aad
call
push
adc
adcb
push
shr
arpl
lret
cld
cwtl
jne
or
loopne
mov
rorb
loopne
xchg
data16
adc
sub
fildll
cmp
rcrl
or
call
inc
stc
cs
cmpsl
mov
pop
inc
jl
frstor
mov
inc
add
xor
and
mov
dec
add
bound
pop
cs
aam
orb
xor
jg
mov
arpl
imul
push
fstp
popf
inc
divps
jae
adc
js
pushf
inc
jmp
dec
arpl
sbb
mov
cmp
lods
dec
or
xchg
sbb
sub
loope
in
das
mov
lods
cmp
mov
sub
gs
aad
ret
in
stos
in
std
sub
jne
loope
pushl
sbb
pop
inc
pop
mov
xchg
or
aas
in
sub
mov
imul
lret
pop
mov
hlt
outsb
hlt
test
jns
pop
ret
btr
pop
sub
adc
mov
cmp
fwait
lds
idivl
pushf
mov
push
mov
insl
pop
aas
mov
gs
inc
xchg
pop
ljmp
xor
enter
push
lods
repz
fmull
dec
add
mov
aas
popa
adc
lret
mov
pop
xor
in
push
and
ds
sub
dec
lock
mov
pshufw
data16
loop
sbb
ljmp
push
cmp
mov
xchg
pop
in
dec
movsb
cmpl
xor
in
adc
shll
les
sub
test
push
aam
ret
inc
cs
insb
push
js
out
lods
rclb
aaa
gs
or
out
xlat
flds
addr16
cli
lods
push
divl
jge
adc
push
pop
mov
nop
xchg
jecxz
cmp
mov
clc
adc
pushf
xor
xchg
out
aaa
loop
je
dec
and
xchg
dec
mov
ljmp
mull
lcall
cltd
in
mov
sti
push
adc
in
adc
jl
pop
mov
jb
add
mov
cmp
jl
imul
xchg
inc
sti
cmp
loope
xor
mov
jp
setne
pop
sub
or
adc
shll
es
jl
cmp
jmp
mov
sahf
call
lea
roll
lds
adc
cmpsl
mov
push
mov
outsb
cwtl
scas
mov
push
xor
mov
daa
mov
add
jno
fldcw
gs
cmp
incl
mov
jnp
jmp
sub
arpl
sarb
cmp
sbb
fwait
aad
and
dec
and
dec
rcrb
fwait
mov
push
add
sbb
sbb
mov
jle
aam
pop
popf
in
jb
inc
into
xor
movb
jle
mov
pop
sub
sti
sbb
add
idivb
jge
push
sub
mov
jnp,pn
or
imul
imul
popf
loopne
ds
add
cld
xlat
push
dec
pop
call
mov
mov
lahf
mov
bound
dec
testb
mov
dec
cs
xrelease
sti
jne
jb
or
sub
pushf
mov
inc
outsb
das
cmpsb
mov
inc
out
fbld
mov
inc
xlat
int3
fstpt
adc
xchg
loopew
jmp
iret
mov
xchg
leave
sub
pop
xchg
int3
xchg
mov
frstor
mov
mov
call
jmp
out
mov
cmpsl
nop
jge
mov
repz
adc
jecxz
repnz
push
mov
insl
push
inc
push
xor
stos
mov
pop
sbb
rol
ds
cmp
mov
mov
mov
mov
mov
aas
pop
das
fistpll
fxch
repz
dec
cmp
movsb
mov
shrl
adc
dec
jmp
xor
int3
out
sbb
sti
mov
or
mov
dec
fnsave
mov
mov
arpl
cmp
lea
js
das
leave
cmp
sub
mov
add
adc
mov
lret
mov
jb
sbb
jne
mov
cld
call
hlt
mov
mov
xor
adc
outsl
mov
stc
int3
addl
shl
cmp
stc
and
ja
daa
rcr
push
rolb
xor
xchg
add
scas
nop
in
mov
int
or
adc
lahf
jl
and
and
mov
pop
loopne
ret
xchg
jne
xor
sub
pop
lret
in
loopne
push
xchg
pushf
stc
mov
imull
stos
push
fwait
mov
add
popa
pop
gs
mov
icebp
fstl
adc
mov
test
or
adc
leave
pusha
inc
xchg
andb
fwait
movsb
pop
mov
inc
jne
mov
lea
orl
clc
in
xorl
jle
mov
push
mov
xchg
jne
jge
insl
mov
mov
jns
adc
inc
imul
lret
jno
mov
call
pushf
pop
xor
movsb
sub
mov
ret
dec
loop
into
fbld
sahf
test
aad
mov
fdivrl
ljmp
xor
and
sbb
or
int3
fwait
cmp
repnz
push
dec
inc
scas
sub
add
in
jnp
mov
jg
int3
push
xchg
mov
adc
jo
push
add
stos
push
fisubl
add
mov
mov
mov
arpl
fscale
das
shl
hlt
add
jmp
push
adc
iret
les
xchg
push
push
jl
dec
sub
pop
aas
stos
aaa
sub
imul
dec
test
adc
adc
divb
push
les
lcall
les
sub
daa
mov
stos
cmpsb
jnp
hlt
or
jae
fisubl
cmp
aad
roll
or
cmp
xchg
push
dec
push
js
mov
xor
xchg
ja
js
sub
or
fistpll
jae
jo
lcall
gs
or
mov
enter
dec
es
ror
stos
outsl
lock
mov
pushf
je
sub
fsub
mov
test
push
leave
ja
sbb
mov
test
ror
aam
push
adc
leave
data16
les
out
adc
sbbb
lcall
dec
jmp
cmp
pop
ret
mov
leave
xchg
cmp
cmp
jbe
dec
in
movsb
and
dec
inc
fadds
roll
out
rcrb
jge
sub
mov
adc
cmp
lret
adc
cmp
sbb
pusha
sub
and
fists
loopne
push
adc
imul
pop
in
icebp
nop
cmpsl
outsb
jg
pop
gs
or
mov
jnp
adc
add
mov
or
mov
test
dec
inc
mov
enter
cmpsb
popa
xor
mov
sub
mov
movsb
dec
mov
loop
pop
inc
or
cmp
mov
xor
or
mov
inc
jmp
add
clc
mov
mov
hlt
adc
pop
add
xchg
sbb
push
and
test
dec
filds
dec
cmp
clc
mov
test
rclb
in
and
outsl
adc
xchg
sub
xlat
push
pop
or
xchg
daa
outsl
je
les
jb
mov
push
or
and
lock
pushf
inc
aas
leave
into
mov
pop
sub
aas
mov
cmp
adc
mov
in
push
adc
aaa
mov
imul
scas
icebp
loope
insl
and
mov
xor
jae
and
pmulhuw
push
aas
jne
arpl
shlb
pop
frstor
cmp
je
cmp
scas
in
mov
popa
push
xchg
mov
jae
shll
or
xchg
stos
int
shll
mov
aaa
inc
outsl
dec
pop
push
sti
sub
pop
sti
movsl
das
fbld
mov
pop
xchg
std
in
inc
dec
fstpt
sub
clc
pop
mov
out
jne
cmp
fisubs
mov
test
daa
in
das
fistps
cmp
jmp
popf
loopne
nop
divl
pop
enter
sbb
in
mov
ficoml
aad
and
pop
lock
mov
jecxz
jecxz
add
clc
jo
fiaddl
adcl
out
ja
push
movsl
stc
mov
jae
stc
adc
and
int
aad
mov
mov
outsl
mov
mov
xorl
inc
mov
cmp
fildll
shlb
jnp
jle
xchg
jo
into
jno
xor
pushf
inc
stos
jp
es
std
lcall
cmc
adc
cmp
fstpt
jle
cmp
xchg
mov
leave
stc
pushf
jno
in
sub
fwait
pusha
mov
adc
jae
mov
pop
xor
or
sbb
je
cmp
int3
push
lahf
ret
mov
fistpll
fwait
sarb
into
xchg
mov
lods
jmp
popf
pop
cmp
mov
jae
adc
cmpsb
cmp
fdivp
out
leave
jns
xlat
cli
aas
and
xlat
jp
scas
test
data16
sbb
popa
je
outsb
in
stc
daa
dec
repnz
mov
inc
pop
call
je
mov
pop
rcl
jbe
jge
test
add
adc
inc
jno
jno
enter
rolb
push
pop
aad
dec
push
push
cmp
test
dec
cld
xchg
stos
add
mov
mov
gs
pop
je
lock
maskmovq
mull
push
test
cs
mov
adc
movsl
cmp
xor
xchg
inc
out
inc
hlt
cld
and
dec
jnp
push
xor
imul
mov
sub
test
rol
es
dec
cld
frstor
mov
mov
pop
addr16
dec
pop
lret
or
enter
cmp
mov
loopne
push
pushf
jg
cwtl
pop
inc
lret
cmc
mov
sub
in
xchg
push
or
lock
mov
addr16
xchg
cs
sub
popa
push
and
cmp
lock
sbb
loope
and
add
fidivrs
test
xchg
std
jecxz
bound
in
mov
sub
mov
xor
push
aam
roll
lcall
ja
jge
or
clc
add
insl
fs
arpl
test
shlb
xchg
add
das
and
adc
fsts
stos
lret
je
sub
loop
iret
inc
orl
ja
iret
ficoml
inc
jmp
xchg
mov
mov
mov
bound
mov
repz
lcall
pushf
push
leave
push
cwtl
stc
out
arpl
pop
and
orb
call
loope
es
inc
test
inc
mov
jg
in
bound
int
rclb
push
ljmp
cli
sub
ret
push
and
divb
mov
ret
sub
sbb
xchg
popf
inc
and
enter
or
push
sbb
outsl
jo
pop
sbb
dec
xor
roll
lcall
lret
stc
xchg
pop
ret
aad
sub
lock
xchg
ds
cli
es
ss
das
xchg
mov
sbb
inc
fidivrs
iret
pop
nop
cmp
scas
std
scas
jbe
pushf
arpl
dec
inc
out
jmp
inc
or
pop
cmp
test
cmc
pusha
insb
adc
jns
imul
loop
push
out
jbe
popf
loop
add
xchg
push
xchg
shrl
lock
imul
std
ret
aaa
inc
out
or
movsb
or
lock
nop
imul
popa
icebp
aas
sete
repnz
into
rolb
mov
fdivrs
sub
es
cwtl
icebp
mov
cmpsl
repz
dec
ret
lds
test
pusha
jb
sub
pusha
push
std
cmp
xlat
movsl
add
clc
pop
add
pop
test
sbb
mov
inc
xchg
jle
iret
sbb
dec
jno
in
lds
ja
das
shll
movsl
xchg
jmp
gs
push
mov
xchg
sti
jmp
repz
sub
jmp
scas
stos
xlat
or
stos
leave
in
shl
fsubrs
cmc
cmp
imul
mov
inc
rorb
arpl
push
lret
in
mov
cmp
adc
push
adcl
arpl
cld
push
mov
mov
fdivl
jge
aad
cmpl
cltd
test
je
lds
dec
mov
push
out
push
pop
jge
imul
aam
mov
mov
repnz
arpl
dec
fists
or
scas
add
ss
push
add
inc
popf
inc
dec
mov
mov
sbb
pop
and
sub
inc
mov
test
fildll
cltd
les
clc
jne
notl
int3
insl
push
notl
stos
xchg
add
mov
push
movsl
sub
adc
or
fs
sub
lret
mov
jmp
je
add
mov
insb
aad
das
addr16
stos
js
inc
dec
cmp
jnp
ret
inc
jle
mov
sub
adc
imul
mov
or
test
cmp
jo
xor
push
movsl
ljmp
or
dec
dec
jg
push
push
nop
lcall
arpl
stos
pop
sbb
push
xchg
fs
or
dec
adc
sub
jg
sub
jmp
cmpsb
jmp
add
cmpsb
mov
and
or
cmc
stos
add
pop
cmp
in
arpl
push
fistpll
call
inc
std
adc
scas
in
inc
hlt
bound
push
or
sub
jns
and
push
inc
mov
sbb
int3
jg
adc
mov
jnp
call
fstpl
inc
or
or
sbb
sub
xchg
cmp
or
mov
dec
pop
scas
push
adc
movb
jno
mov
rcr
gs
test
out
rcll
int
push
and
outsb
loop
loope
dec
cmp
xchg
add
cmp
dec
sub
ss
rcrl
scas
cmpl
or
pop
cld
inc
and
scas
fimuls
xchg
add
sarl
stos
jle
or
or
inc
ficoml
adc
stos
mov
mov
push
or
out
mov
pop
jo
add
repz
mov
inc
and
cmc
lret
inc
add
imul
push
leave
inc
sub
push
jmp
pushf
inc
mov
and
dec
lea
fsubr
adc
dec
or
nop
lods
or
inc
dec
rclb
mov
and
mov
mov
sub
pop
lcall
xchg
jno
lcall
shll
js
pop
dec
cwtl
in
mov
popa
xor
dec
lahf
ds
int3
and
out
xlat
cmp
pusha
jb
inc
pop
aas
xchg
inc
mov
inc
lods
das
mov
dec
jle
pushf
imul
jae
xchg
jge
push
std
sub
add
mov
xor
insl
xor
notb
aaa
stc
jo
je
aaa
jl
or
jne
xor
rcrl
pop
jmp
or
or
cmp
push
insb
mov
add
popf
fnstenv
fldenv
mov
xchg
jns
mov
lock
mov
and
xchg
push
push
cmp
jmp
ds
xchg
push
inc
add
lahf
pushf
divl
sarb
pop
mov
shll
push
xor
mov
addr16
mov
dec
mov
sbb
jl
aaa
or
push
and
lock
aaa
sub
push
es
xor
pop
mov
jle
scas
stos
rcrb
sub
or
inc
push
push
jge
ja
xchg
ja
adc
mov
xchg
mov
adc
cmp
mov
std
jnp
sub
ljmp
jmp
jmp
fucomi
in
or
shll
stc
push
bound
jno
repnz
push
bound
loop
clflush
push
dec
xchg
push
push
sub
pop
aaa
shlb
outsb
or
scas
repnz
int
cmp
push
hlt
or
fistl
stc
testb
dec
xor
lret
lret
add
in
push
or
push
lret
mov
call
add
mov
pop
aaa
lods
repnz
loope,pn
pop
inc
and
stc
sub
scas
xchg
push
inc
mov
inc
mov
push
inc
inc
jp
inc
mov
and
aas
jns
shll
mov
sub
mov
push
mov
leave
inc
lods
cmp
insl
push
pop
pop
addl
xor
scas
or
pop
mov
push
mov
popf
outsb
call
mov
call
mov
xor
jecxz
push
jo
rcr
data16
ss
inc
cmp
mov
sbb
in
mov
test
dec
mov
mov
fistps
rcll
push
cmpl
pop
aad
mov
push
jbe
adc
inc
cmp
xlat
ljmp
and
es
pop
outsb
xchg
xchg
cltd
ds
jmp
fwait
inc
pop
icebp
mov
shll
add
adc
xchg
cmp
xchg
add
xchg
and
xor
bound
adc
mov
xchg
xchg
sub
and
outsl
xor
cmp
mov
jl
int3
mov
aad
jae
inc
fists
ss
mov
scas
stc
xor
sbb
jge
sub
call
cs
test
iret
shlb
or
adc
repnz
jle
push
cmp
cltd
jmp
sbb
loop
enter
add
adcl
cmp
cmp
pop
in
loope
in
mov
xchg
in
push
lock
int3
imul
mulb
cltd
or
in
stos
pop
test
mov
cmpsl
push
mov
or
xchg
jae
xchg
mov
jmp
xchg
push
xchg
mov
sub
out
mov
sub
xchg
pop
xor
insl
push
xor
or
insb
cltd
in
cmp
mov
test
fidivl
cmpsb
pop
shl
sub
xchg
mov
inc
jmp
push
mov
xchg
scas
ds
mov
cwtl
sbb
push
dec
lret
pop
mov
cs
mov
mull
mov
test
jae
cwtl
test
mov
enterw
fcomi
sub
fwait
rcrl
inc
test
insb
push
jne
inc
jg
cs
rorb
sahf
jge
pop
popf
fnstenv
or
je
pushw
subb
je
mov
hlt
stos
adc
lret
mov
push
add
andl
mov
mov
pop
mov
pop
out
rclb
add
je
push
sbb
test
call
mov
xor
enter
js
xchg
ret
lret
js
roll
mov
adc
mov
cmpsb
xchg
cmp
repz
jle
arpl
fstpl
push
adc
adc
or
ret
ss
cmp
cmp
out
es
and
ljmp
xchg
add
cld
lock
stos
push
cltd
imul
out
enter
fldcw
dec
add
or
xor
and
shll
out
pop
out
clc
cmp
repnz
aaa
cmpsl
adc
cs
cmp
dec
iret
orb
adc
les
addr16
push
test
push
bound
xchg
nopl
lret
mov
or
movsb
arpl
push
or
lret
imul
lea
insl
sub
mov
mov
jge
mov
xor
pop
xchg
mov
jns,pn
call
and
cmp
data16
ja
add
or
and
push
jp
cmp
jg
es
aad
push
jg
and
xlat
decl
loopne
or
div
rcrb
mov
push
pop
mov
push
mov
jp
ljmp
push
test
mov
lock
pop
adc
arpl
in
repnz
xchg
mov
cmp
shll
mov
cld
sub
popf
enter
into
jge
enter
cwtl
in
mov
xor
adc
cmp
xor
pusha
jl
lods
aad
fwait
inc
jmp
push
ret
pop
movsl
jp
andl
loopne
fistl
jecxz
cwtl
fs
test
add
scas
lods
ficoms
clc
mov
jp
insl
test
lods
int3
push
testb
fst
ret
xchg
xchg
or
pop
rorb
scas
in
sub
popa
xor
aam
push
inc
insl
mov
cmp
aas
jne
lahf
enter
inc
nop
je
mov
adc
test
jge
lea
cmp
or
dec
xor
subl
mov
in
inc
nop
lods
jbe
stc
sub
mov
int3
mov
push
xor
add
and
mov
pop
sub
std
rclb
sahf
sarl
ljmp
push
lods
es
jge
clc
xor
or
and
mov
lds
jl
out
xchg
ljmp
int3
int
adc
pushf
test
lock
enter
jp
mov
hlt
mov
arpl
repnz
xchg
test
or
cmp
insl
stos
aas
jae
jns
into
mov
mov
or
push
repz
and
sub
das
and
jmp
add
movsb
adc
xchg
cmpsl
and
sub
push
mov
push
dec
stos
mov
and
out
or
lahf
mov
mov
jnp
add
pop
aaa
xor
aas
sbb
inc
inc
cs
lret
repz
or
in
push
push
jg
xchg
jb
aas
jae
cmpsb
xchg
or
inc
in
adc
in
lret
inc
mov
lea
cld
cmp
xor
daa
movsb
lods
lock
dec
xor
arpl
jecxz
push
and
mov
mov
test
sbb
or
xchg
jnp
mov
inc
sub
stos
insb
mov
out
out
lds
aas
fdivs
out
mov
out
stc
ret
das
mov
adc
inc
jg
mov
mov
loope
add
ljmp
je
mov
or
dec
xor
aad
stos
mov
dec
idivb
sar
adc
mov
stc
enter
fidivl
cmp
repz
out
popa
adc
dec
mov
push
enter
sub
movsl
push
aad
in
pop
mov
sub
add
enter
sbb
pop
sbb
xchg
dec
pop
or
xchg
add
xor
inc
and
xchg
mov
mov
adc
sti
mov
adc
inc
push
jge
cmp
xchg
jmp
lahf
push
divb
or
adc
ret
je
imull
pop
pop
xchg
jg
xchg
push
xchg
inc
mov
mov
cwtl
imul
stos
xor
inc
movsb
sbb
push
lods
cld
in
dec
pop
and
mov
mov
call
sbb
and
stos
ja
je
int3
mov
xchg
out
inc
pop
jge
xchg
test
std
rclb
cmpsb
ss
sbb
sbb
insb
in
mov
out
cli
mov
dec
inc
jno
insl
inc
dec
or
iret
push
pop
dec
sbb
and
jnp
lcall
mov
sbb
testb
inc
cld
xchg
repnz
inc
loope
loope
and
and
arpl
imul
cmpb
in
sub
pop
push
or
jns
pop
int
mov
or
cmp
xchg
int
ret
and
mov
nop
xor
stc
andl
cld
movsl
jae
mov
in
cmp
mov
mov
xchg
push
enter
add
cmp
mov
jg
enter
clc
push
jl
icebp
mov
inc
int
setae
push
sbb
xchg
push
mov
ret
les
xchg
dec
scas
mov
xlat
sahf
inc
test
pop
nop
loopne
xchg
decb
mov
push
xchg
bound
addr16
repnz
rcll
aam
cmp
test
neg
icebp
ss
jbe
add
mov
or
test
jnp
mov
mov
imul
jecxz
call
ljmp
and
or
int
add
test
cmp
push
sub
and
inc
jmp
mov
xchg
xorl
lcall
ret
pop
enter
pop
leave
adc
dec
repnz
sbb
or
test
jnp
int3
jmp
jne
dec
xchg
iret
ds
mov
xchg
xchg
mov
ja
fwait
ja
lahf
jnp
rorl
lea
lea
or
rolb
repnz
aaa
fdivrs
mov
dec
jns
mov
iret
bound
sbb
std
loop
addr16
jp
repz
lret
mov
roll
in
adc
pusha
jl
test
push
lret
dec
clc
ficomps
pop
bound
cmp
fdivs
mov
insb
int
jnp
jmp
xchg
inc
mov
imul
cmp
add
inc
rcrl
arpl
pop
scas
sub
call
cmp
into
push
out
orb
imul
repz
jb
fbld
jns
lea
iret
pop
mov
stos
fs
push
pop
lods
gs
sub
pop
or
cmp
dec
test
dec
mov
int
fcmovnbe
loopne
and
test
sub
adc
popa
leave
mov
cmp
add
jne
movsb
inc
cmp
xchg
sub
jno
ja
push
inc
aas
std
jp
mov
inc
adc
cmp
push
and
mov
xchg
inc
shll
sub
and
mov
jb
dec
iret
push
int3
push
cwtl
xchg
imul
add
xchg
testl
cmp
pop
cld
out
sbb
cwtl
mov
mov
clc
pop
call
lods
loope
add
xlat
mov
repz
cwtl
aas
lea
inc
movsl
sbb
and
mov
xor
in
mov
add
fists
mov
jo
sub
popa
mov
sub
es
inc
pop
into
addb
imul
cmp
stos
mov
ret
mov
rcll
jge
xchg
push
mov
lea
inc
not
cmc
in
ret
xor
dec
inc
mov
adc
pop
mov
loopne
fldenv
cli
sbb
pop
push
fidivl
enter
push
add
ret
fs
xchg
test
mov
inc
or
jno
mov
jge
movsb
mov
shrl
dec
sti
jbe
cmp
xchg
jnp
imul
jno
mov
fldt
adc
cmp
or
mov
fisttps
jge
mov
das
fsubs
in
aad
scas
mov
sub
cmp
mov
incb
mov
push
xor
icebp
cmpsb
loope
mov
mov
sbb
mov
or
inc
sahf
dec
cmp
inc
inc
adc
mov
into
sbb
push
mov
adc
das
shl
les
adc
sti
repz
call
js
fs
lds
pop
xchg
inc
loopne
ljmp
leave
and
dec
test
push
fmul
mov
clc
sub
sarl
xchg
push
lahf
out
nop
jge
test
cmp
lods
xor
push
mov
push
test
pop
dec
inc
stc
test
push
cmpl
iret
sbb
jmp
inc
enter
loopne
cmc
popa
sub
leave
out
xchg
xor
test
data16
sub
nop
mov
in
enter
js
mov
in
jmp
mov
xchg
clc
mov
leave
sub
out
loope
out
pushf
insl
addr16
int3
sub
push
jno
xchg
shll
cmpsl
inc
das
mov
enter
add
shlb
fldcw
adc
dec
pop
dec
jp
push
xlat
inc
popa
adc
adc
fsts
aam
mov
testb
dec
and
stos
jge
xor
cmc
adc
call
cmp
cltd
push
in
cld
loopew
adc
sbb
sbb
movsb
push
push
arpl
loope
fistpll
xor
shl
sub
add
mov
fidivrs
daa
imul
loopne
lahf
xchg
iret
and
hlt
sbb
xchg
mov
mov
mov
cmp
jg
int
pop
sub
push
es
iret
xor
xchg
inc
movsl
std
ss
into
adc
outsl
in
lahf
pop
dec
ffree
jle
mov
fsubp
jg
mov
add
mov
lret
push
mov
faddl
pmullw
push
in
shlb
inc
fwait
or
iret
inc
leave
push
mov
fmull
mov
lea
repnz
add
sbb
sub
subw
aas
dec
and
leave
cli
sahf
dec
ss
xlat
cmpsl
ret
mov
or
aad
call
test
sbb
lods
ret
add
cmp
hlt
push
pop
sub
push
aam
pop
xchg
sbb
scas
mov
in
push
inc
push
pop
mov
sub
fisttps
mov
mov
inc
dec
xchg
xchg
sbb
stos
sub
enter
xlat
mov
inc
mov
bound
negb
shll
lods
arpl
js
mov
sub
jge
push
idivb
jns
push
pop
mov
jecxz
std
movsl
lret
icebp
ret
shll
mov
int
je
les
inc
lea
test
mov
push
sahf
ljmp
out
cs
cmp
aad
enter
popa
xchg
notl
sub
xchg
hlt
fwait
sbb
push
dec
jno
aaa
rclb
mov
jg
in
pinsrw
xorl
xchg
leave
or
aad
dec
aas
dec
lret
ja
xchg
xor
push
xchg
gs
cwtl
call
jb
test
stc
pop
add
stos
inc
adcb
cmp
enter
jo
in
add
dec
fmuls
xor
aad
inc
adc
and
je
daa
pop
mov
jae
mov
mov
lds
es
test
mov
mov
mov
mov
call
lcall
rorl
outsl
mov
outsl
ss
mov
hlt
jmp
adc
roll
out
cmp
in
dec
lret
jecxz
outsl
lods
sub
mov
add
pop
mov
ds
cmpsl
sbb
add
push
repz
pop
mov
dec
ljmp
adcb
lcall
mov
mov
mov
mov
imul
dec
lret
gs
mov
insl
data16
insb
xchg
cmpsb
jg
mul
lahf
cmp
adc
adc
fbstp
in
stc
cmp
and
sub
fwait
add
mov
adc
movsl
repz
imul
out
leave
fildl
imul
push
push
clc
repz
cmpl
xchg
pushf
mov
mov
mov
dec
jle
mov
lods
lds
dec
jmp
sub
test
lcall
cmp
cmp
imul
cwtl
inc
je
xchg
push
mov
push
inc
or
sbb
into
je
sub
mov
insl
xor
mov
cmp
push
fisttpl
sbb
cwtl
in
jo
addl
add
pop
das
and
push
and
daa
subl
imul
inc
sub
dec
xchg
or
add
mov
or
sarl
add
adc
or
push
pop
cmp
fwait
inc
mov
dec
mov
ljmp
pusha
mov
fs
outsb
mov
lea
mov
subb
xchg
setno
push
cltd
out
fwait
dec
pop
xor
rorl
shlb
xchg
pop
fdivrp
add
or
pop
loopne
and
imul
rcrb
lods
cld
nop
repz
jl
jnp
call
pop
jmp
inc
mov
xor
and
clc
pop
sub
push
xchg
pop
pop
test
or
jbe
jl
jb
xlat
push
jbe
sbb
scas
xlat
aam
rcrb
inc
sub
or
adc
clc
cltd
xlat
pop
or
subl
stos
xchg
add
hlt
xchg
or
sub
xor
fwait
sub
in
push
sti
fistpll
popa
jbe
jmp
xor
and
push
pop
pop
xchg
sub
xlat
aaa
inc
mov
jbe
pop
push
cmp
and
fcmovb
mov
push
mov
jp
or
mov
fnstenv
ffreep
mov
loop
cmc
mov
subb
jmp
push
inc
xchg
pop
mov
test
pop
stos
jb
stos
mov
mull
jo
and
add
mov
jl
jp
leave
add
jb
fidivl
cmp
mov
jnp
lea
out
ss
push
add
jne
repnz
jnp
or
mov
scas
add
fistps
in
pusha
insb
mov
cmp
les
dec
loopne
mov
mov
sub
loop
movsl
pop
pop
dec
pop
or
or
inc
dec
or
pop
xor
movd
dec
push
sbb
xlat
testl
sub
mov
cltd
mul
mov
in
std
cli
mov
lods
add
jne
in
shrl
push
dec
lcall
popa
sbb
adc
jle
and
shl
int
insb
movsl
adcl
jmp
movsb
cwtl
call
ljmp
push
lcall
mov
das
push
cmpsl
cmpsb
jbe
mov
jg
add
add
das
arpl
pop
push
dec
stos
sub
xor
mov
cmpb
les
adc
repnz
adc
jbe
out
mov
push
sbb
jecxz
push
std
outsb
rorl
mov
jl
adc
xor
cli
xor
shl
push
adc
jle
pusha
or
xor
xchg
dec
sub
sbb
ja
inc
fwait
mov
jg
fsubrs
mov
in
push
mov
cmp
jo
mov
movsb
aad
rcrl
mov
shll
pop
orb
negl
dec
dec
test
mov
push
loop
daa
xor
sahf
rorb
mov
orb
sbb
andl
int
mov
xor
aaa
jl
jae
mov
sbbb
hlt
cmpsb
sahf
add
mov
jg
and
push
sarb
xor
lock
cld
cmp
push
mull
mov
and
call
xchg
jge
push
movsl
xchg
ret
loop
and
shll
pop
inc
das
inc
mov
cld
outsb
cmp
lea
stc
icebp
testl
jbe
stc
addb
xchg
fildll
dec
test
test
sbb
cmpsl
push
cmp
outsl
add
jno
es
and
les
xor
lock
push
aad
lcall
xor
fnstenv
jl
or
ret
mov
push
cmp
popa
imul
das
mov
cmp
sbb
jg
push
enter
cmp
out
pop
lea
mov
and
arpl
inc
mov
aaa
push
rcr
enter
stos
mov
and
push
popa
out
cmp
push
ffreep
arpl
and
lcall
cmp
and
mov
mov
data16
jno
fbstp
fadds
sahf
adcb
jnp
xchg
cli
pop
dec
cmp
jmp
ljmp
pop
out
and
add
sub
sbb
fdiv
add
adc
jmp
jno
movsl
loop
xor
xchg
xchg
mov
add
and
in
repz
adc
push
jb
mov
sub
xor
mov
xchg
mov
dec
jo
pop
fisttpll
jae
xchg
sub
repnz
cmp
and
lock
dec
adc
leave
sbb
sub
repnz
cltd
sub
dec
nop
xchg
pop
pop
jno
sbb
add
push
lret
cmove
fists
mov
mov
roll
jge
cs
xchg
sub
jle
add
cltd
in
lcall
xor
or
mov
sub
jnp
pop
inc
sbb
mov
aaa
iret
shll
cmpsb
leave
loope
int
mov
sbb
and
ficoms
iret
xchg
jae
pop
rcr
cmpsb
dec
cmpsl
cld
push
jne
in
inc
xor
std
aam
in
pop
cmp
les
cld
adc
mov
mov
sub
call
sub
jne
stc
je
loop
jp
cmpsl
inc
loopne
dec
stos
adc
jecxz
mov
ror
pushf
imul
pop
push
sbb
sti
cmp
aad
add
push
xor
mov
or
sub
inc
xor
push
jno
jnp
loopne
shll
lods
lret
jne
adc
sbb
insb
das
and
push
rcl
movsb
dec
aaa
xchg
push
cmpsl
lret
cs
add
mov
lcall
mov
rcrl
loopne
in
orb
and
pushf
test
outsl
ss
testl
pop
fsubl
sub
lock
cmc
add
scas
jnp
out
push
pop
arpl
pop
cmp
mov
lea
out
mov
lret
dec
push
scas
adc
sahf
out
xchg
mov
ret
sti
sti
fsubrs
clc
outsb
add
ret
pop
rcrb
or
fisubl
mov
insb
pushf
or
push
outsl
mov
xor
and
dec
cld
mov
xor
mov
mov
inc
mov
stos
shlb
cmp
lods
scas
push
lret
bswap
repnz
inc
fstpt
pusha
lods
and
mov
mov
xor
ret
mov
xorl
ss
fcmovb
test
sub
add
jl
mov
jge
dec
in
out
sarb
push
mov
jg
rorb
fwait
aam
inc
ja
sbb
lock
push
sar
enter
call
mov
sbb
sbb
bound
inc
mov
xchg
dec
imul
mov
add
fisttps
es
mov
outsl
dec
out
and
mov
mov
jbe
leave
ret
sahf
adc
popf
imul
imul
fnsetpm(287
sahf
iret
jo
fsubrs
out
movsl
push
pop
idivl
iret
imul
xchg
cmpsl
jns
fwait
or
jae
adc
mov
adc
mov
push
ds
fidivrs
out
mov
dec
xor
movsl
adc
mov
mov
ljmp
mov
sbb
lret
mov
sbbl
testl
in
int
and
lods
push
xor
test
jo
lret
dec
rcr
mov
ljmp
and
cmp
mov
jmp
fs
cmpb
rorl
adc
scas
cld
xchg
xchg
sbb
add
subb
jge
xchg
clc
andl
jp
hlt
cld
xchg
stos
loope
dec
push
scas
sub
inc
pop
seto
inc
ss
iret
fistl
loopne
jg
movsl
das
cltd
sarl
xchg
xlat
inc
sub
aas
mov
push
inc
lds
movsl
jmp
bound
sub
aaa
jge
pusha
mov
sub
mov
xor
sub
sahf
inc
shll
push
bound
int
dec
std
dec
sub
arpl
sub
xchg
and
ret
jmp
push
addr16
cmc
sub
push
cmp
pop
inc
sub
or
shrl
or
pop
out
shrl
dec
insl
lret
cmp
add
ret
subl
fiaddl
jl
pop
in
jne
add
add
sahf
push
cmp
test
lcall
arpl
xor
out
push
xor
sti
lock
popf
fsts
dec
popl
mov
mov
cltd
out
rorl
out
ljmp
arpl
leave
pop
and
hlt
imul
in
add
mov
leave
setp
mov
lea
inc
push
sbb
ret
pop
jge
aam
cli
adcl
iret
lahf
test
outsl
scas
push
push
test
aas
scas
ljmp
push
pop
test
inc
imull
xor
jno
cwtl
inc
pop
leave
lods
jbe
push
iret
imul
cltd
aad
fsubrs
sub
lcall
popf
in
xchg
call
sbb
xor
ss
pop
mov
and
xchg
adc
inc
out
test
insl
cli
jns
or
mov
sbb
mov
push
mov
fisttpll
in
inc
cmp
addr16
scas
mov
xor
adc
push
pop
popa
jae
outsl
pusha
sbb
mov
sbb
xlat
loop
stc
xchg
xchg
mov
lods
out
imul
jp
sub
aad
loop
out
imul
xor
mov
xlat
dec
dec
inc
mov
jle
nop
pop
mov
pop
sbb
ds
fcoml
sahf
xchg
pop
in
scas
lods
jp
mov
lods
xchg
mov
outsl
test
dec
scas
jns
or
adc
cwtl
je
incl
cmp
mov
jmp
pop
ret
inc
dec
jo
es
fisubrl
aaa
sti
lea
push
dec
rep
addb
sti
adc
and
push
in
stc
addl
xor
stos
cmp
cwtl
xchg
decl
xchg
dec
pop
mov
fcompl
lds
push
xchg
icebp
popf
lret
cld
xor
shll
jns
mov
je
pop
insb
sbb
scas
cwtl
lahf
scas
out
lock
leave
ds
xchg
data16
hlt
sbb
jae
or
dec
mov
xchg
jns
pop
enter
mov
mov
mov
mov
scas
and
test
mov
fbld
push
movsl
popf
cli
aam
mov
gs
sti
shrl
aam
ja
ljmp
addr16
pop
mov
push
ret
sahf
inc
mov
pop
dec
cs
lock
pop
cltd
mov
ljmp
inc
inc
std
jle
or
ret
movsl
shlb
incb
or
sbb
mov
stc
dec
jne
push
orl
inc
xchg
adc
cmp
cmp
incb
add
fstps
insb
fimull
call
adc
mov
cmp
push
aam
push
xchg
dec
into
jl
jge
dec
sub
pop
out
jne
repnz
adc
lods
and
sub
dec
lds
scas
pop
fsubrl
mov
inc
xor
adc
adc
xchg
mov
aas
mov
dec
mov
push
loop
cmp
lar
jb
add
rcr
aam
shrb
hlt
insb
daa
adcl
cmc
repz
xor
mov
insb
xor
cli
int3
cmp
inc
rcrl
push
gs
int3
cld
inc
imull
pop
push
lret
in
insl
int
or
cmp
sbb
mov
sub
call
push
fs
js
shll
cmp
stos
xchg
mov
sahf
jns
push
pop
mov
lea
popa
xorb
push
mov
fisttpll
xchg
outsb
subb
fsubrp
cmp
and
push
pop
adc
fists
mov
cwtl
or
mov
cmp
push
cmp
add
ret
push
jne
je
rclb
les
pop
xchg
sarb
mov
push
mov
fwait
nop
mov
add
mov
sbb
loop
aas
js
mov
xor
aaa
setns
rcl
sub
pop
rol
inc
ljmp
mov
out
add
cltd
and
out
in
lret
pop
jmp
leave
test
insb
divl
sbb
push
mov
arpl
arpl
in
xorb
arpl
jb
in
jmp
outsl
addr16
loop
dec
out
xor
mov
lds
sub
mov
sbb
pushf
mov
jp
adc
and
shrl
data16
sub
adc
push
stos
repnz
or
or
xchg
loopne
mov
sti
repz
push
inc
cmpsb
sub
and
push
rcrb
stos
aad
or
lldt
or
mov
lret
pop
inc
pop
cli
pop
inc
shrb
lock
sbb
or
sti
inc
cmpsb
sbb
and
js
les
cmpsl
test
in
xchg
and
jl
jecxz
adc
or
in
xchg
xchg
push
ret
sbb
dec
xor
cli
scas
jnp
scas
shrl
rclb
fwait
xlat
sub
ret
shl
inc
jmp
out
jno
or
sbb
add
mov
in
xor
or
out
jmp
pop
push
sub
dec
push
mov
mov
es
mulb
sbb
je
int3
leave
sbb
fldln2
cld
and
mov
push
add
movsb
sbb
shll
loop
repz
in
decb
dec
push
push
xor
mov
xor
into
outsl
std
call
dec
cltd
lock
outsl
xchg
jo
jmp
in
iret
xor
sub
dec
fcmovb
mov
push
push
cli
lea
loope
std
sub
push
nop
add
mov
test
mov
int
xchg
mov
lea
outsl
and
sbb
sub
gs
mov
dec
dec
adc
jl
xchg
stos
jmp
lock
data16
sub
popf
cmpsb
pop
movntq
out
mov
aad
push
andl
add
adc
jbe
inc
xchg
in
call
push
ljmp
mov
xor
mov
sub
adc
and
in
sar
add
cmp
in
aas
sarl
mov
jns
int3
add
rclb
mov
xchg
cmpsl
sub
inc
sahf
arpl
subb
mov
sbb
push
cmp
jae
add
xor
xchg
movsl
push
imul
mov
test
outsb
lcall
xlat
adc
loopne
cwtl
push
stos
in
lds
cmc
or
nop
jecxz
rolb
ret
arpl
fsubs
jge
loop
ret
push
lcall
dec
ljmp
adc
and
mov
dec
sub
pop
imul
push
adc
shll
adc
movsl
test
sub
je
loope
or
notb
dec
push
pop
xor
mov
jne
add
xchg
and
pusha
pop
mov
or
insb
sub
mov
imulb
loope
mov
and
jno
mov
scas
addr16
cltd
push
xchg
adc
and
add
mov
and
sbb
lahf
cmpsl
insl
sub
pop
sub
xchg
xchg
xchg
push
xor
mov
fnstsw
inc
pop
popf
dec
mov
repz
add
and
push
add
mov
test
push
adc
push
fs
push
xchg
add
and
or
inc
cmp
aad
jne
les
and
push
cs
pusha
imul
stc
data16
jns
xorb
jo
and
cmp
pop
xor
sbb
call
inc
je
lahf
popf
or
fdivrs
int
outsb
xor
cmc
mov
rcrb
inc
mov
insb
jecxz
call
outsl
stos
jo
sub
add
sbb
push
xor
int
push
icebp
or
stos
sub
sbb
add
in
pop
or
ljmp
cmp
xor
push
imul
xchg
push
nop
out
pop
js
cli
sbb
or
aad
pop
imul
in
lahf
shlb
push
loope
jecxz
aam
stc
pop
push
and
cmp
push
and
lock
call
and
test
lock
dec
ret
inc
cli
outsb
sub
pop
sub
pop
cltd
mov
iret
push
mov
je
mov
sub
sbb
pop
pop
rcll
pop
inc
mov
bound
addr16
xchg
mov
cmp
mov
pop
cmp
std
dec
sub
pop
or
lcall
sub
test
pop
jb
aaa
lret
je
sub
inc
aam
xchg
fstpt
push
imul
imul
cmpsb
mov
je
mov
add
sbb
mov
push
lods
mov
pop
xchg
dec
lds
rorb
or
mov
inc
stc
fisubrl
cmp
imul
shll
adc
rep
les
rcrb
and
daa
mov
les
xchg
inc
dec
aas
mov
pop
cmp
xchg
lahf
lock
out
adc
popf
ljmp
icebp
push
insl
xchg
mov
inc
dec
cmp
mov
mov
xchg
jns
adc
inc
rcll
inc
xor
add
sbb
jae
in
cmpsl
loope
aas
inc
sbb
mov
push
pop
xor
call
cmp
mov
lock
jb
movsl
pop
cmp
addr16
or
jg
dec
rcr
imul
dec
mov
mov
and
ret
jecxz
ret
pop
mov
in
test
scas
push
mov
cli
sbb
scas
ficoms
in
sub
sbb
xchg
xor
push
fistpll
leave
adc
mov
ds
jb
mov
dec
inc
aas
stc
fbld
imul
out
push
in
xchg
inc
mov
addr16
stos
pusha
mov
jne
adc
push
inc
test
mov
js
hlt
arpl
adc
add
ret
dec
int
push
int3
inc
mov
adc
jg
sbb
push
pusha
inc
sarb
iret
cld
in
xor
testb
push
mov
add
and
inc
addr16
inc
shlb
dec
subb
push
mov
xchg
xchg
out
roll
adc
sub
out
outsl
cmpsl
mov
leave
xchg
mulb
movsb
inc
pop
negl
ret
aam
adc
mov
popa
jns
scas
xchg
stc
into
jnp
xchg
enter
jle
aam
ds
sbb
add
xchg
jbe
leave
mov
sub
movsl
in
fadd
jnp
cmp
sbb
leave
xor
das
cwtl
test
jne
dec
inc
xchg
mov
imul
fmuls
sbb
xchg
or
or
in
pop
test
addl
push
das
cmp
icebp
ror
jnp
jg
jmp
arpl
push
jp
scas
gs
inc
push
mov
push
rcrb
add
stc
mov
rorl
or
mov
outsl
pop
and
mov
test
fwait
lret
mov
and
clc
mov
outsb
sti
push
and
jge
aas
jp
mov
int
jno
ja
popf
inc
xchg
mov
scas
ljmpw
ja
ja
out
mov
mov
sbb
lods
xorl
xor
negb
cmp
mov
rorl
cmp
ret
lret
addr16
mov
ja
sbb
add
push
jecxz
jle
mov
mov
mov
into
xchg
jns
push
jecxz
adc
inc
push
pusha
fcmovnu
dec
or
push
rcrl
jb
mov
stos
fimull
jo
jl
xor
xchg
and
mov
les
ret
add
addr16
lcall
inc
ret
mov
add
xchg
stos
inc
jb
cmpsl
mov
nop
out
sbb
shll
and
and
sahf
and
cli
cs
mov
xchg
ret
xlat
mov
mov
add
test
xor
ljmp
aad
mov
stc
dec
mov
push
dec
sbb
mov
pop
iret
repz
xchg
or
and
sbb
xlat
dec
fcomi
adc
and
pop
loope
jge
sahf
mov
int
clc
jbe
pop
psllq
mov
es
sarb
inc
cltd
imul
mov
jnp
sahf
and
aam
xchg
add
cmc
sub
xchg
xor
das
iret
pop
leave
fldcw
and
push
inc
cs
inc
xchg
ret
das
pop
push
and
int3
jbe
out
xor
fwait
fs
cmpsl
stos
lods
pop
sti
push
inc
mov
out
fsubrs
jle
push
es
clc
ljmp
add
ljmp
in
sbb
inc
xchg
pop
in
add
loop
jmp
movsl
popf
push
das
xor
or
mov
or
dec
push
fnstcw
xchg
add
add
push
mov
stos
add
and
leave
and
lea
xlat
push
ret
sbb
and
add
jnp
sar
xor
loop,pn
and
pop
jle
arpl
jne
gs
cmp
insl
addr16
test
scas
push
lea
out
jle
cmp
push
sub
xchg
cmp
orl
jle
push
add
es
lret
xchg
adc
fidivrs
sub
sub
mov
cmp
sbb
les
bound
sub
mov
sbb
js
add
bnd
ficomps
push
ds
mov
jmp
xchg
dec
and
addr16
fdivr
lods
fneni(8087
sbb
push
add
mov
cmp
mov
int
sbbl
xor
add
xchg
outsb
std
mov
dec
rolb
mov
lahf
cld
hlt
sub
int
adc
std
jne
inc
jmp
adc
ret
in
sub
out
js
imul
adc
and
inc
loop
loop
dec
mov
pop
es
mov
push
dec
mov
pop
cmp
adc
sbb
leave
xor
data16
xchg
jmp
mov
mov
push
in
mov
jg
popa
daa
cmp
add
dec
push
dec
xor
mov
ss
fisubrl
or
scas
cmpsb
repnz
push
cmpsl
push
pop
adc
mov
inc
loopne
sbb
mull
pop
push
call
jmp
int3
xlat
push
fwait
pop
scas
pop
xchg
push
pop
decb
stc
sbb
add
or
shlb
mov
add
dec
dec
ja
pop
cmc
push
aam
mov
imul
test
cmpsl
jmp
sti
push
or
pop
mov
jo
pop
fistps
dec
jne
aas
pop
ja
lods
jmp
icebp
lods
fsubr
cmp
add
imul
lcall
insb
sbb
jno
or
negb
jo
aad
mov
or
outsl
inc
pop
subl
push
cmpsb
mov
insl
and
mov
xorl
push
fs
pop
pop
push
dec
jge
out
push
add
loope
adc
stc
daa
xchg
adc
mov
imul
pop
dec
data16
mov
fsubl
lret
stc
dec
aad
push
and
paddd
test
push
rcrl
add
ss
jbe
sti
jg
xchg
imul
lods
frstor
sti
mov
inc
cld
mov
pop
xor
mov
dec
add
leave
jne
js
loop
loopne
daa
test
out
aad
addb
outsb
cmpsl
ffree
mov
jbe
scas
push
jb
mov
scas
in
xchg
or
filds
cwtl
lret
lahf
lods
mov
mov
jne
adc
push
mov
push
pop
inc
or
adc
imul
lock
sbb
mov
fdivrs
insl
sub
and
aaa
or
shr
dec
arpl
sbb
sti
int
imul
scas
into
popf
subb
jb
mov
inc
jne
daa
cwtl
stos
jle,pn
xchg
jb
and
ret
xchg
xor
stc
cmp
negb
jne
pop
dec
movsl
or
pop
movsb
arpl
cld
jo
xchg
imul
adcb
jmp
push
or
xchg
pop
fsubrs
test
divl
bound
push
mov
lds
out
push
and
jl
ret
movsb
arpl
dec
out
push
push
push
adc
or
movsb
je
jge
inc
pop
sub
mov
pop
clc
adc
cmp
xchg
or
pop
sub
xor
xchg
loop
inc
aam
or
mov
sub
rorb
sahf
js
sahf
lock
dec
push
adc
sub
or
cmc
inc
dec
mov
xchg
mov
repnz
mov
mov
jg
jae
jl
aas
scas
out
cmp
xchg
addr16
xchg
mov
mov
dec
mov
andl
iret
loope
and
outsb
jmp
ficoml
scas
dec
insl
bound
xlat
aam
mov
inc
add
fsubrs
sub
dec
xchg
jp
push
mov
xchg
sub
adc
mov
notb
cmp
mov
sti
pop
sahf
ret
imul
iret
mov
cmp
test
nop
dec
add
call
loope
je
fucomp
cmp
mov
gs
dec
cmp
adc
mov
cs
mov
or
jmp
std
mov
dec
repz
mov
sub
dec
gs
sbb
out
aas
dec
or
sub
cmp
cmp
popf
jecxz
sbb
jae
inc
loope
mov
ret
sub
arpl
push
sbb
add
pop
stc
std
addps
inc
ret
mov
jno
lea
ss
mov
in
lods
cmpl
in
sbb
inc
into
andl
stos
cmp
mov
js
cmp
adc
lea
add
or
inc
shrl
lret
push
xchg
negb
or
sub
out
and
cmp
imul
pop
push
dec
insl
inc
test
in
xor
sub
mov
push
pusha
mov
out
or
into
ljmp
push
fisubs
and
js
pop
adc
insl
add
inc
pop
mov
test
sti
mov
or
lock
test
pop
hlt
div
xchg
int3
or
xchg
sub
jo
test
shl
nop
lcall
pop
loop
in
cmp
pop
insl
cli
ja
aam
push
adc
insb
inc
aaa
xchg
fldcw
arpl
out
lahf
push
out
push
dec
push
mov
lcall
mov
cmpsb
mov
cli
call
or
outsl
mov
shll
lea
xchg
mov
xchg
or
or
pop
adc
inc
push
mov
push
hlt
neg
pop
xchg
test
sahf
movsl
and
pop
pop
xor
add
sub
test
movsl
mov
loope
xor
scas
movb
cmpsl
and
add
cmpsl
mov
test
sub
add
outsl
lods
repz
movsl
loope
jp
mov
fcoms
pop
mov
loop
pop
add
mov
sbbl
sbb
push
sub
lret
cmp
fwait
or
ror
inc
in
aas
repnz
push
xor
inc
adc
fsubrp
and
and
xor
mov
xchg
pop
inc
add
and
sub
pushf
push
in
int
es
xor
ljmp
sub
mov
mov
inc
pusha
pop
mov
imul
jge
xchg
jns
pop
aaa
aam
int
pop
pop
stc
sbb
sbbb
bound
inc
jge
mov
jns
scas
stos
push
push
inc
xchg
aaa
out
jl
mov
cmpsl
cltd
xor
xlat
repnz
hlt
push
out
sub
enter
shrl
imul
xchg
lea
adc
dec
mov
lds
push
mov
into
out
xchg
fimuls
repnz
xchg
lods
cmpsb
cmp
push
fxch
xor
movsl
scas
fcomi
jg
adc
sub
pop
nop
mov
xor
mov
push
lret
and
cmp
mov
fnsave
cwtl
rclb
mov
out
jno
dec
jecxz
mov
out
aas
cwtl
jb
int
hlt
sbb
jo
fcmovnb
das
xor
push
sbb
inc
je
lds
test
jecxz
add
je
and
js
idivl
push
push
sub
pusha
std
cltd
adc
clc
lea
push
jae
es
mov
sbb
and
mov
test
ja
loope
sti
cltd
sub
mov
jmp
push
mov
push
mov
popf
psubsb
into
inc
fcmovnb
pop
insb
iret
or
lcall
fisubrs
dec
es
xor
loopne
cltd
push
ret
dec
test
xchg
cmp
loop
dec
cmp
addr16
fidivrs
shl
in
mov
sub
in
fnstsw
mov
shl
shll
insl
adc
add
mov
stos
xchg
lret
sub
xchg
cmp
pop
fidivs
rolb
mov
out
rcr
xor
push
mov
sbb
inc
xchg
stc
popf
cmp
mov
ja
test
cmp
or
mov
gs
add
xchg
push
or
insb
sbb
dec
lods
xchg
cmp
inc
popf
shl
dec
cltd
add
fsubp
jnp
xor
cli
pop
lods
imulb
pop
mov
out
jl
cmp
mov
cli
aas
dec
sti
mov
push
lds
mov
stos
popf
sbb
fstl
outsb
inc
in
shlb
push
cld
and
jne
sbb
jge
adc
jecxz
ds
xchg
mov
fsubrs
inc
mov
xchg
sbb
mulb
cmp
mov
fsubrs
push
jg
xchg
cmp
push
hlt
stos
jl
stc
aaa
adc
cmp
adc
push
pop
outsl
jmp
fisubl
pop
loop
adc
cmp
es
iret
mov
ljmp
jbe
call
cmp
shlb
notb
cmp
xor
and
push
adc
leave
test
insl
adc
push
arpl
push
mov
aad
mov
shlb
loop
pop
jb
lock
pop
decb
je
lret
outsb
lock
dec
and
mov
repnz
push
mov
push
cmpsl
pop
inc
fisubrs
gs
rcll
jle
push
mov
mov
and
pop
xchg
cmp
pusha
mov
repnz
lahf
scas
mov
dec
inc
mov
daa
jnp
pop
xor
sbb
add
aad
pushf
hlt
jge
mov
movsl
sub
add
mov
sahf
fcmovb
dec
xchg
mov
add
in
sub
fstps
jp,pn
mov
jno
clc
adc
mov
out
or
xlat
bound
aad
xchg
and
mov
arpl
mov
jno
aad
jp,pt
outsl
lods
imul
jb
lock
lds
clc
mov
ss
xchg
and
call
out
and
jle
repz
mov
and
push
jp
test
pusha
or
fildl
mov
xchg
jecxz
test
jno
int
or
mov
sub
inc
xchg
lods
or
dec
sti
sbb
sarl
cli
jecxz
mov
subl
loope
mov
dec
mov
and
mov
subb
aad
fldt
mov
xor
pop
mov
mov
xchg
jmp
leave
jg
xor
lahf
xchg
or
and
jae
test
sahf
dec
lea
loop
loope
js
es
gs
mov
push
xor
push
or
jmp
pop
xchg
inc
dec
fsubl
jmp
mov
out
cs
and
xor
cmc
adc
dec
sub
mov
mov
inc
push
lock
jle
adc
inc
push
or
test
xchg
filds
inc
loopne
je
sbb
ljmp
cli
sbb
dec
lret
mov
inc
jns
or
adc
stos
aaa
push
scas
jae
push
or
popf
in
sbb
fwait
mov
lods
xchg
xchg
out
mov
pop
inc
iret
pop
and
pop
imul
pop
xor
ja
adc
xchg
inc
pop
dec
mov
or
fnstenv
shlb
in
adc
xchg
push
decb
xchg
andb
shlb
cltd
xchg
xchg
dec
add
mov
mov
cwtl
lods
jl
mov
push
mov
out
add
out
cmp
sbb
xor
mov
push
xchg
jp
lret
mov
or
inc
pop
ja
mov
faddl
mov
inc
xor
mov
jmp
frstor
mov
xchg
popa
arpl
in
cmpsb
out
pop
jno
filds
cwtl
dec
xchg
mov
add
cmpsl
push
adc
push
xchg
sbb
jl
mull
imul
and
dec
jle
xchg
mov
jne
out
outsb
aaa
mov
out
hlt
pop
scas
lock
jae
jl
xchg
jne
push
jg
mov
xchg
xor
xor
and
sub
fstpt
in
pop
in
incb
dec
pushf
dec
sub
ficoml
xchg
jne
pop
mov
inc
cmp
xchg
dec
into
in
push
pop
xchg
aam
jo
xchg
xchg
movsl
fs
xchg
add
insl
cli
scas
fisttps
ss
sbb
test
dec
stos
cmp
cld
movsl
enter
cmp
movsb
outsb
sbb
jns
push
inc
and
mov
xchg
pop
into
iret
dec
cli
fbstp
jbe
les
lods
dec
and
mov
loop
ret
loop
sahf
sti
mov
push
loop
dec
cmpsl
bound
je
add
int
and
mov
lcall
add
sahf
sbb
negl
jb
in
ret
cmp
fmul
inc
adc
xor
adc
dec
lret
lcall
xor
lods
sub
decl
and
inc
xor
mov
in
adc
pop
lock
and
movsb
lret
mov
dec
cli
fsubrs
xchg
mov
mov
mov
push
pusha
pmaxsw
xor
aaa
push
xchg
dec
in
scas
fcmovb
adc
mov
insl
xchg
pop
cs
cmpsl
repnz
daa
mov
adc
xchg
cmpsl
clc
repnz
aas
and
in
mov
cs
push
push
add
inc
test
pop
xchg
scas
push
lds
out
xchg
sub
and
xchg
add
jge
cld
mov
or
int
jge
pop
sbb
jl
cli
or
and
xchg
jns
fwait
sbb
inc
mov
test
push
fsubrs
sbb
mov
jbe
testl
in
push
cld
adc
inc
addr16
sub
mov
cltd
sbb
push
nop
testl
aad
inc
mov
mov
sahf
test
inc
sub
add
sbb
jns
js
inc
das
cltd
ss
push
push
data16
cmp
lea
pop
pop
imul
pop
in
or
aam
sti
mov
cmpsb
lods
pop
stc
sbb
adc
and
ficoms
adc
pop
lahf
inc
in
push
nop
cmp
or
mov
ja
cmp
dec
xchg
je
decl
jo
fwait
scas
je
in
popf
or
repz
sbb
lea
fwait
leave
stos
jecxz
jne
movsl
fmull
data16
testl
xor
xchg
lret
jne
inc
mov
mov
hlt
sbb
ds
sub
mov
mov
adc
cmp
lods
adc
fsubs
push
dec
in
cli
push
aas
sbb
mov
test
stc
lock
sbb
call
dec
add
jnp
scas
push
scas
orb
jmp
jmp
push
lret
push
in
ds
hlt
mov
stc
out
dec
mov
stc
mov
test
test
sahf
adc
pop
aaa
in
aam
movsl
or
push
imul
repz
iret
adc
nop
sahf
repnz
mov
sub
dec
jae
loopne
xchg
rclb
mov
sub
outsl
inc
mov
push
out
stos
sarl
movsl
pusha
lds
or
hlt
jno
lock
pop
jbe
push
xchg
xor
cmp
cmp
adc
ds
cs
iret
lods
test
adc
iret
scas
je
sti
dec
push
inc
push
sti
sub
cmpsb
adc
pop
sub
loopne
dec
sbb
fnstenv
cmp
testb
stos
sbb
test
jge
fisubrl
sub
sbb
xor
xorl
mov
ja
pop
flds
loop
push
lea
or
pop
mov
das
fisttpll
sahf
in
mov
sbb
adc
and
inc
lret
mov
sarb
mov
and
pop
sub
dec
pop
insb
in
xchg
sbb
xchg
inc
js
inc
xor
ja
and
test
out
hlt
cwtl
jno
fcmovnbe
and
sar
sub
mov
sbb
scas
cli
pop
gs
jge
ret
xlat
jb
jnp
aas
in
xchg
cli
lock
sbb
mov
and
stos
stc
inc
mov
mov
aam
or
xor
pop
orl
out
punpcklwd
push
lods
imul
adc
jbe
bound
and
fistpll
adc
enter
movsb
rcll
sub
pop
mov
ficompl
popa
mov
subb
stc
pop
jne
lahf
inc
cmp
jg
dec
lret
leave
scas
push
movsb
ja
out
cmp
jnp
mov
cmc
xor
mov
loopne
xor
sbb
mov
insl
lret
push
mov
cmp
hlt
sub
movsb
cwtl
addr16
sahf
xlat
adc
cli
je
scas
or
and
insb
pop
push
ds
in
push
jmp
mov
mov
xorl
xchg
pop
mov
scas
pop
add
cmp
push
aad
cmpsl
xlat
mov
sbb
push
dec
mov
cwtl
movsl
push
mov
movsb
inc
lods
mov
mov
mov
test
call
add
adc
dec
fidivrl
push
add
inc
sti
sarb
inc
das
pop
jge
repz
shlb
pop
scas
lock
push
push
and
xor
mov
data16
or
mov
les
jl
or
jp
mov
jp
ffreep
arpl
push
cmp
inc
pop
imul
inc
nop
inc
push
mov
jno
sbb
popf
dec
fsubs
fcom
mov
xchg
rcll
add
xchg
xor
rcrl
add
sbb
inc
sub
inc
lods
cmc
pushf
and
cwtl
sbb
xor
xlat
addr16
cld
and
int
cltd
sub
jp
stos
xchg
leave
mov
out
cmp
hlt
xchg
dec
mov
lret
scas
pop
adcb
loope
ja
cmpsb
adc
ficompl
rcrb
sub
bound
test
in
sub
mov
mov
push
sbb
cmp
aam
sbb
ja
mov
leave
adcb
das
inc
or
subl
and
mov
addr16
sti
int
mov
mov
roll
test
cmpsb
rclw
jo
in
int
xchg
roll
adc
dec
xchg
daa
xchg
cmp
xchg
in
daa
rcrl
xor
rorl
repz
cmc
std
jbe
popf
stos
push
and
repz
mov
lcall
push
sbb
pop
mov
adc
aaa
out
movsb
xor
or
lcall
test
jmp
xchg
adc
inc
mov
dec
imul
aad
dec
movhps
out
cmc
jge
pop
in
sub
movsl
out
clc
mov
popa
in
std
jmp
dec
movsl
pop
adc
in
lods
dec
mov
adc
jge
and
jmp
aam
fwait
stos
xchg
pop
les
aaa
lods
unpckhps
inc
and
adc
sub
push
inc
in
add
cmc
jne
cltd
je
stc
jne
jne
push
pop
dec
mov
out
mov
mov
movsl
enter
ret
orl
cmp
cmp
mov
xor
divl
js
mov
jo
hlt
seta
std
jns
mov
and
inc
inc
sahf
inc
ja
and
arpl
dec
mov
in
nop
test
xor
xor
cld
clc
or
nop
cmp
mov
outsb
movsl
mov
in
wbinvd
sahf
or
or
loop
ljmp
out
xlat
or
jno
jno
xor
jl
mov
idivb
or
mov
dec
lods
or
mov
nop
decl
push
mov
dec
push
outsl
addb
cmp
je
adc
loopne
lahf
mov
sub
ret
jg
test
push
push
mov
pop
jl
push
mov
frstor
andnps
inc
sbb
xor
addr16
imul
and
sbbl
lods
rclb
adc
int
dec
cmp
mov
fiaddl
lods
or
and
inc
xchg
inc
fsubrp
mov
mov
pop
mov
pop
dec
je
or
mov
and
lret
xchg
repz
pushf
cmpsb
mov
mov
pop
lods
call
push
decl
outsl
jg
lcall
loopne
js
shl
sbb
mov
inc
faddl
bswap
fcoml
sbb
loopne
sbb
scas
dec
das
ja
fidivrl
pop
pop
jae
push
dec
loopne
sbbl
pop
fidivrl
mov
xor
sahf
lahf
add
aas
fisttpl
mov
jno
mov
leave
test
mov
dec
outsl
cmp
mov
and
sub
push
pop
push
xchg
mov
test
push
xor
adc
repnz
xor
push
pop
pop
or
dec
mov
mov
mov
hlt
inc
sub
sbb
scas
in
mov
fstp
dec
push
push
mov
xchg
clc
cs
xchg
in
hlt
and
jmp
cmpsl
lods
mov
aaa
xchg
inc
daa
arpl
pop
pop
inc
je
ret
push
jae
add
xchg
mov
mov
xchg
or
pop
or
add
cmp
test
jnp
shll
insb
push
enter
and
test
in
cmp
mov
add
cltd
and
inc
mov
sti
sarb
scas
bnd
outsl
ret
add
loop
pop
sbb
loopne
push
mov
pop
pop
repz
push
ficoms
jg
mov
addr16
pop
fimuls
push
loope
in
out
call
mov
stc
pop
inc
iret
jecxz
ror
cmp
push
shlb
xor
test
stos
xchg
xchg
js
pop
out
inc
leave
fcompl
popl
popa
add
lahf
out
outsb
fisubs
mov
int
mov
pushf
popf
lods
jp
mov
cmp
xorl
sub
cmp
xlat
adc
repnz
es
out
sub
aad
add
loop
cmc
jno
mov
inc
inc
test
add
outsb
outsb
add
lock
pusha
icebp
jo
aaa
imul
iret
vcvtsi2ssl
in
and
lahf
or
inc
imul
and
push
add
je
sti
add
sti
fxch
aad
std
sbb
mov
pop
sar
popa
pop
js
mov
sub
in
or
out
adc
sbbl
pop
mulb
data16
rorl
add
in
ljmp
test
mov
dec
or
rcrl
cli
js
imul
push
sahf
push
test
stos
lea
mov
flds
jmp
lret
enter
or
outsl
test
sub
inc
adc
scas
test
int
sub
pop
sti
cmc
sub
in
jo
andb
add
pop
and
cmp
sbb
mov
xor
popf
outsl
mov
inc
or
cli
movsb
gs
mov
cld
rcl
inc
xchg
sti
add
jno
ret
jmp
mov
or
adc
mov
ds
lods
pop
sub
data16
adc
bound
imul
enter
repnz
mov
jecxz
jg
and
jnp
adc
ret
cwtl
rol
inc
mov
xor
cmp
popl
mov
sub
js
lods
stos
cmp
loopne
insl
inc
and
dec
push
mov
adc
push
in
xchg
mov
mov
jns
push
jg
add
or
arpl
sub
mov
mov
push
sub
and
das
stc
mov
push
pop
xor
inc
test
pop
mov
mov
icebp
or
loop
xchg
mov
in
and
xor
mov
jae
push
lret
xor
mov
je
pusha
mov
out
sub
add
icebp
and
pusha
pop
xchg
cs
decb
out
ret
ljmp
pop
inc
aas
rolb
pushf
mov
dec
sti
leave
enter
mov
xor
xor
push
cmp
std
adc
inc
pushf
cmp
ret
loopne
mov
xor
dec
outsb
in
test
mov
pushf
dec
jge
cmc
cmp
inc
xlat
call
mov
mov
push
movsl
fldl
std
cmc
repnz
scas
push
and
and
pop
je
xchg
mov
inc
cmp
in
or
jmp
loopne
fs
xchg
icebp
lcall
movsb
lds
addr16
std
pop
jae
aas
or
pop
aas
or
push
mov
pushf
aam
aas
sub
movsl
cwtl
mov
add
cmp
enter
pop
arpl
pop
push
cmp
pop
xchg
pop
push
or
sub
push
inc
dec
ret
std
xchg
or
add
repnz
add
xchg
test
nop
mov
cli
jno
push
push
lret
loop
ljmp
sahf
mov
xor
lret
inc
push
or
jb
movsb
mov
stos
shlb
cld
xchg
in
pop
xchg
mov
icebp
fcomi
sub
loop
or
aam
cmpsb
xchg
xchg
push
es
mov
adc
or
inc
or
inc
mov
ss
jecxz
cmc
leave
add
add
push
stos
outsl
mov
adc
or
pop
in
lcall
stc
push
or
fcomp
xchg
add
push
adcl
dec
xchg
sub
pop
imul
push
rcrb
jno
cli
pop
xchg
repnz
push
push
insb
push
bound
popa
in
mov
adc
movsl
std
sbb
cmp
adc
sbb
and
lcall
fld
leave
xor
enter
and
inc
movsb
push
jae
idivb
inc
jns
cs
gs
mov
call
xor
hlt
mov
add
fisubrs
icebp
mov
scas
fdivl
cmp
mov
inc
popf
mov
pop
fcoml
pop
sub
jnp
mov
aaa
inc
add
xchg
loope
repz
mov
cmp
fisttpl
sub
cwtl
and
fsub
ss
mov
stos
xchg
jp
inc
mov
add
pop
aam
mov
mov
and
test
mov
sahf
xchg
xor
outsl
jne
mov
mov
mov
leave
and
xor
push
mov
lock
xchg
fwait
loope
leave
lods
mov
push
fsub
or
bound
loop
jl
xchg
leave
push
rcrl
ret
mov
xchg
adc
jne
push
xchg
mov
insl
cmp
pop
sarl
mov
and
and
jp
mov
ljmp
je
add
or
jl
and
test
lret
in
jle
fisubrs
mov
inc
mov
loop
imul
in
out
dec
jl
loope
sbb
pusha
rcrb
cmp
in
push
rcl
int
movsl
aaa
sub
xor
cwtl
mov
std
or
cltd
or
sbb
cmpsl
bound
ds
or
ss
sbb
xchg
lea
or
fisttpll
dec
push
and
add
inc
test
push
addl
mov
fwait
addr16
ficomps
rorb
jo
fsubl
mov
nop
sti
popa
shlb
pop
fwait
stc
sbbb
jle
sub
inc
shrl
jle
or
aam
enter
pop
cwtl
test
loopne
or
dec
mov
fistpl
and
inc
nop
and
or
pop
mov
xchg
xor
mov
pop
pop
lcall
jge
rcrl
ja
std
push
and
pop
push
rcr
adc
sub
roll
aaa
push
leave
stos
lcall
lcall
add
ds
orb
mov
scas
sub
fdiv
xchg
mov
xchg
fs
ja
test
std
sbb
xchg
rcrl
out
sbb
std
stc
xor
cmp
fistl
retw
pushf
aaa
lods
dec
sbb
mov
in
cs
ds
inc
insl
jb
rcrb
rcrb
clc
adcl
cli
and
scas
lods
xor
mov
sub
in
lret
lret
sub
dec
inc
sub
and
cld
pop
out
int
adcb
cmp
ret
push
sub
lahf
sbbl
fimull
push
xor
cmp
mov
mov
pop
into
pop
push
movsl
xchg
insl
loope
call
inc
cmpsl
mov
pop
xor
fstpl
jmp
repz
sub
mov
es
push
loopne
enter
inc
xchg
aas
jnp
fisttpll
incb
push
or
xor
inc
lret
hlt
je
sahf
jle
push
loop
in
push
movsb
aas
in
decb
fmull
jle
cmp
xor
scas
sub
sub
sub
mov
ljmp
cmpsl
imul
sbb
mov
dec
les
imul
xor
sbb
fs
addl
int3
cmp
call
aam
dec
pop
push
push
mov
cmpsl
cs
xchg
xor
cmp
sbb
inc
lret
inc
and
sbb
ret
jae
push
outsb
pop
mov
pop
mov
jle
cmp
mov
leave
pop
sub
mov
jecxz
sbb
in
mov
pop
xorl
push
push
sbb
test
out
cli
outsl
mov
add
mov
push
or
inc
mov
shlb
loopne
and
add
enter
cmc
sub
scas
out
xchg
sbb
daa
xbegin
sarl
push
inc
in
cmp
mov
xor
and
imul
cmp
rcll
inc
stc
mov
test
subb
shrb
dec
adc
or
mov
jnp
jae
dec
xor
or
sub
ficoms
xor
ljmp
xor
sarb
mov
pop
in
icebp
mov
sub
mov
movsl
cli
or
loopne
out
cli
sub
in
mov
mov
fiadds
or
dec
into
push
fstp
imul
lods
inc
adcl
mov
dec
loopne
push
push
jno
jno
xchg
mov
jno
lret
cmc
dec
faddl
or
mov
or
pushf
jg
cmp
hlt
dec
cmc
mov
repnz
divl
call
insl
push
mov
or
xchg
sbb
mov
fldenv
movsl
imul
fiadds
jmp
cmp
pop
lods
cltd
sbb
push
inc
movsl
imul
pop
into
stc
xchg
adc
daa
repnz
fistpl
xchg
shrb
pushf
imulb
dec
push
jg
repz
xchg
and
rcrl
fcomps
in
cmp
in
cmp
ljmp
sbb
and
stos
loopne
sub
push
and
out
dec
cmp
ljmp
sub
pop
jne
cmpsl
jl
xchg
test
push
pop
pop
stos
fimull
in
inc
cmp
rdpmc
and
mov
mov
xchg
or
sbb
pop
sbb
bound
loopne
cld
mov
cmp
adc
jo
inc
addr16
cmp
js
or
push
ja
das
ret
inc
imul
stc
push
les
fadds
cmp
push
lcall
push
fcmove
sbb
sbb
dec
cmc
mov
pop
fs
xor
inc
pop
xchg
aaa
inc
int
loopne
imul
icebp
pusha
and
xchg
test
and
stos
and
fcmovbe
dec
fsubl
jmp
cmp
xor
or
add
fildll
mov
add
loope
sbb
cmp
ds
mov
push
fmull
and
pop
and
fcompl
push
in
jnp
add
mov
jecxz
push
dec
or
inc
mov
dec
jnp
stos
cmpsl
or
mov
pop
lar
movsb
adc
sbbl
jg
mov
sar
arpl
sbbb
adc
and
inc
fmull
push
cli
ja
cmpsl
and
test
pop
das
js
stc
xor
or
scas
push
sub
dec
sarb
mov
cmp
subl
adc
mov
ja
std
lods
pop
sti
loope
mov
adc
mov
pop
out
inc
iret
push
pop
push
push
mov
xchg
andb
cmp
adc
fldl
les
push
std
jno
das
cmp
xorl
xchg
aam
imul
or
insl
mov
and
fisubs
sub
out
mov
rorb
cmpsl
jae
jecxz
and
sub
add
es
push
fisubrs
push
mov
pop
jno
push
cmp
mov
sti
cld
fildl
lods
mov
out
notl
mov
dec
xchg
cmpsb
adc
imull
jp
mov
sub
lcall
jns
push
popa
pop
sti
sub
in
stos
je
mov
shrl
sbb
push
fists
or
arpl
adc
adc
loopne
cmp
or
sub
sar
loopne
cmp
sbbb
dec
adc
xor
cmp
mov
andl
movsl
imul
lahf
divl
repnz
inc
aaa
in
out
ret
pop
push
jmp
divl
mov
push
sub
mov
push
and
gs
sbb
push
and
dec
or
stos
outsl
aas
scas
scas
sub
iret
push
enter
fbstp
out
lock
pop
mov
stos
dec
repz
loop
push
push
cmp
nop
xchg
out
ret
stc
fstl
lods
gs
dec
lods
in
lock
fadd
aam
pop
push
nop/reserved
add
test
mov
fstps
jne
and
or
test
mov
push
xchg
fmuls
std
ret
ljmp
ss
sti
test
and
pop
jge
js
into
add
out
pop
imul
cwtl
lret
div
push
pop
cwtl
nop
xchg
mov
jl
mov
or
jbe
orl
mov
nop
xchg
adc
dec
sbb
cmp
dec
fdivrl
push
dec
xchg
cmp
sbb
rorl
adc
aas
add
cmpsb
loope
icebp
cmp
or
stos
in
xor
roll
jg
inc
ss
and
push
int
jo
loopne,pt
sbb
push
shlb
inc
jae
sti
and
jmp
in
ret
lret
push
mov
push
cmp
adc
imul
out
inc
mov
jnp
aam
jecxz
push
testl
add
add
bound
xchg
adc
repz
mov
pop
jns
shlb
pop
fmull
mov
xchg
fld
xchg
xor
jb
mov
cmc
std
push
lds
lret
sar
pop
loop
imul
lcall
lret
jecxz
mov
push
mov
mov
imul
outsl
cmp
in
sbb
pop
sahf
fistl
mov
ljmp
das
jle
cmpsb
and
pusha
jbe
cmp
ljmp
lds
ret
mov
mov
jmp
jno
or
jnp
xor
das
push
imul
test
ljmp
lds
adc
pop
push
es
shll
adc
fldcw
int
daa
in
out
inc
jae
mov
adc
aam
mov
in
pop
icebp
jne
push
xlat
outsb
jg
push
ja
das
jmp
cmpsl
imulb
mov
adc
xchg
xchg
lods
jge
mov
cmp
or
out
enter
inc
adc
loopne
cmp
hlt
adc
int
pop
dec
or
and
test
xor
rcrb
ficoms
dec
fiaddl
ljmp
insl
pop
push
outsb
xchg
mov
or
iret
xchg
mov
mov
push
scas
sbb
adc
add
push
xor
adc
enterw
ret
sub
cmp
hlt
subb
xchg
cld
cmpsb
addr16
jmp
jg
pop
cmpb
mov
cmp
xchg
notb
xchg
imul
inc
das
iret
push
sbb
xchg
ret
std
lock
or
arpl
push
stos
pop
fwait
popf
adc
ret
cmpsb
int
into
pushf
cmpsl
outsb
call
sub
xor
xor
xor
ret
jge
icebp
mov
iret
sahf
loope
inc
pop
aaa
pusha
sub
lods
inc
sub
mov
inc
sub
mov
out
push
mov
test
ficomps
cltd
rorl
mov
repz
fs
enter
dec
jp
fimull
sub
ja
ds
fdivs
es
adc
leave
pop
int
das
pop
test
mov
cli
inc
ja
cld
xchg
cmpsb
test
scas
pop
mov
data16
mov
fistpll
mov
mov
mov
inc
mov
shll
cmp
xchg
push
xchg
or
push
mov
loop
xchg
in
scas
dec
pop
loopne
mov
sub
adc
push
arpl
xchg
jnp
push
cmp
call
mov
mov
jmp
ds
xor
xchg
outsb
jecxz
and
xor
sub
mov
and
push
ret
hlt
xchg
rcrb
sub
jbe
loope
and
cmpsb
orl
xchg
xor
add
ja
xchg
popa
adc
mov
mov
mov
push
sbb
out
pop
shll
cli
loope
sbb
or
fsts
mov
lea
dec
mov
jns
cltd
adc
out
icebp
es
stos
cmp
pop
or
out
outsl
dec
test
les
mov
ret
jecxz
sbb
subb
sub
mov
loopne,pt
mov
jp
or
jb
psubw
adc
mov
ret
mov
xlat
repz
sub
repnz
jbe
and
push
mov
jl
and
mov
mov
push
xor
and
in
and
std
ljmp
inc
mov
inc
jp
stc
mov
jo
jb
jne
cmp
xchg
or
sbb
addr16
das
mov
dec
xchg
cs
popf
jg
push
mov
xchg
gs
mov
jno
sub
test
fcmovu
test
pop
jmp
jg
xor
dec
push
notb
dec
cmp
sbb
ja
and
sahf
adcl
lods
xor
xor
lea
mov
jae
rorb
popa
mov
daa
ret
dec
hlt
and
shlb
mov
add
jne
dec
cmp
loope
pop
gs
or
mov
mov
scas
cs
enter
mov
in
jp
or
jbe
push
xor
mov
fimull
lcall
pop
mov
xchg
mov
inc
xchg
push
xor
fsub
in
inc
inc
dec
add
mov
pop
xor
mov
out
fistpl
in
jmp
aaa
adc
mov
dec
pop
lret
lods
in
popa
fdivs
imul
xchg
lods
into
divl
or
je
dec
aaa
imul
mov
sbb
lock
push
jb
lods
jae
movsb
icebp
lods
xor
push
cli
jle
call
xchg
xorb
add
fcomip
bswap
mov
int3
cmp
mov
fs
std
inc
out
mov
mov
sarb
in
loopnew
movsl
in
rcl
inc
sub
nop
lcall
unpckhps
ret
sarb
fcmovu
cmp
inc
cld
insb
xlat
inc
lds
and
xlat
pop
push
jg
dec
jg
popfw
lcall
sbbb
je
movsb
xor
cmp
jge
jl
sub
and
add
sbb
adc
and
aam
sbb
push
outsb
shr
ret
out
int
pop
cltd
xor
mov
xor
or
mov
lret
ret
mov
mov
xchg
fsubrp
jno
cmp
sbb
mov
dec
inc
loope
cmpsl
fwait
hlt
test
test
push
test
and
sub
imul
mov
inc
test
int3
fucomi
sahf
frstor
push
lods
std
aam
test
fldt
push
add
std
fdivs
dec
ret
lret
xor
js
clc
push
fimull
inc
stos
call
test
mov
mov
cmpsl
ja
jne
insb
lods
cmp
push
movsl
ret
movsb
adcb
mov
test
ljmp
rdmsr
js
push
mov
fisubrl
xchg
push
lds
dec
rol
popf
sub
ret
stos
and
xor
adc
xor
nop
push
fcomps
test
data16
loope
mov
popl
inc
inc
mov
mov
enter
orl
push
daa
leave
mov
fisttps
mov
pop
push
std
xchg
jno
fdivl
pop
push
push
inc
jmp
mov
dec
xor
add
jecxz
roll
out
or
jb
test
xchg
rclb
into
stos
pop
add
xor
sbb
inc
mov
push
sub
pop
fwait
push
nop
add
mov
cmp
int3
lds
out
negl
and
mov
push
ret
nop
popa
or
mov
sbb
into
lcall
loopne
loope
pop
das
xchg
in
push
adc
push
fcmovnb
adc
dec
cmp
dec
pop
jecxz
inc
cli
cmp
je
adc
test
push
sbb
loope
lret
mull
ja
sbb
divb
mov
mov
fldpi
push
or
roll
xchg
inc
lcall
jp
aas
mov
jb
pop
pop
pop
clc
aas
sbb
je
jbe
inc
leave
in
int3
inc
fistl
fldl
fwait
and
inc
das
adc
andnps
xchg
fstpl
iret
dec
cmp
mov
push
jge
mov
mov
or
and
push
cli
rorl
or
test
shrb
jmp
shl
fadds
or
xor
jge
in
adc
add
int
xchg
xorl
popf
sarl
bound
orl
push
bound
pusha
test
jmp
xor
imul
mov
shr
test
jne
or
aaa
xchg
test
jns
or
imull
fwait
lds
lret
iret
push
loopne
cmp
add
imul
mov
std
daa
enter
cmp
xchg
mov
xor
cmp
xchg
sbb
in
cld
call
sbb
fwait
mov
insb
fwait
xchg
outsl
out
jecxz
lea
jp
lret
mov
inc
xchg
icebp
fsubrl
incb
loopne
mov
cli
cli
mov
call
out
and
pop
push
xlat
lret
mov
call
int
sub
cmp
fwait
push
inc
rcrb
andl
pop
punpckhbw
and
in
lcall
xor
mov
clc
jb
jae
icebp
pop
stos
outsl
adc
add
jo
push
inc
inc
lret
push
mov
leave
cmc
in
mov
test
lea
mov
or
sahf
adc
push
xchg
icebp
lret
sbb
jl
popf
shrb
leave
stos
push
inc
or
mov
clc
aam
inc
aam
outsl
mov
insl
jp
jb
push
inc
fildl
or
push
xrstors
dec
or
shlb
faddp
neg
movsb
xchg
xlat
jno
jns
add
ucomiss
cli
dec
movsb
lods
pop
xchg
testl
push
push
jg
mov
jb
mov
je
xchg
jl
loopnew
pop
fidivrl
push
shlb
in
cmp
aam
sub
xor
push
jmp
pop
add
inc
mov
pop
mov
jg
add
or
adc
add
mov
jecxz
std
fmuls
clc
jp
and
inc
and
xor
sub
insb
notl
pop
cmp
stos
push
push
xlat
xor
xor
clc
sbbb
add
adc
lret
sbb
pop
pop
dec
mov
mov
mov
outsl
mov
enter
rcr
mov
sbb
in
andl
das
call
jne
ret
xchg
cmpb
pop
enter
inc
sub
dec
orl
and
pop
out
pop
jge
aam
lret
adc
inc
test
cmp
sti
xlat
add
jg
inc
sub
dec
mov
xor
mov
stc
pop
push
dec
fdivrs
pop
loope
imul
pop
inc
nop
mov
iret
sub
xchg
jp
daa
imul
jl
pop
jecxz
std
cmp
push
aam
mov
ret
mov
cmp
mov
int
inc
in
xor
jp
mov
pop
inc
sub
insl
ftst
test
int
lds
int
adc
xor
fistl
jle
inc
lret
cmc
hlt
daa
ret
rol
mov
fs
and
div
pop
pushf
sbb
or
les
outsb
ljmp
pop
jle
adc
pop
ret
adc
in
jb
int
jle
das
push
aas
loop
xchg
jo
push
dec
imul
cmovg
dec
add
push
lcall
inc
inc
outsl
cmpsl
les
aad
xlat
int
jl
pop
xchg
loope
sbb
adc
cmc
aam
sub
adc
adc
cmp
fcoms
enter
test
fs
fsubrs
lret
cmp
mov
pop
popa
inc
ja
mov
and
pop
aas
jb
call
mov
popf
popf
or
mov
ret
imul
pop
fisttpll
inc
inc
sahf
and
dec
shr
jle
cli
ljmp
ret
arpl
inc
mov
out
sbb
js
insl
into
lcall
or
pop
or
je
jle
insb
jo
pop
inc
cs
mov
xchg
loopne
mov
xor
sbb
jne
ljmp
loope
int3
ja
roll
and
int3
int3
mov
inc
dec
stos
outsl
push
inc
cmp
pop
pop
pusha
jnp
pushf
cs
jl
lock
xlat
outsb
imul
inc
popa
clc
and
pop
mov
data16
inc
loope
aaa
sbb
movsb
negb
sti
rcll
mov
sub
es
outsl
sbb
inc
fstpt
sbb
cmp
xchg
sarb
insb
pop
mov
lea
or
mov
xlat
movsl
xchg
gs
mov
jo
cmp
push
negb
sbb
and
jl
push
mov
mov
xor
fists
inc
stos
push
icebp
rclb
inc
lds
adc
mov
out
and
xchg
adc
call
and
js
add
and
imul
sub
mov
stc
daa
pusha
test
shll
in
sbb
adcb
add
dec
and
sbb
adc
inc
ds
add
sbb
fsts
in
cmc
xor
xchg
leave
sub
adc
mov
jmp
test
adc
lock
and
push
jp
xor
insl
test
shrb
test
fnstcw
iret
rcl
jle
push
mov
jp
xchg
ret
nop
sub
sahf
mov
ja
inc
jecxz
add
xchg
popa
jmp
fsubs
jmp
dec
lcall
inc
mov
inc
mov
scas
mov
incl
jmp
mov
aam
jge
daa
insb
insb
loop
xacquire
adc
fs
mov
jmp
sub
jp
and
add
test
incl
insl
push
shlb
loope
lret
mov
iret
pop
cwtl
sub
rcrl
mov
sbb
push
lahf
lds
aad
fnstenv
insb
sub
test
mov
out
movsl
mov
enter
pop
push
xor
mov
or
int
xorl
decb
push
xor
cmp
mov
dec
push
push
mov
jb
stos
mov
aam
test
add
push
mov
dec
jne
or
leave
pop
jae
and
jmp
push
das
pusha
push
leave
in
insb
push
scas
adc
and
pop
bound
ljmp
mov
sti
jnp
ja
cli
inc
lahf
fiadds
call
jp
repnz
xchg
sub
cs
fldenv
fadds
or
test
fadds
fnstsw
int
push
clc
mov
mov
fwait
xchg
jg
mov
rorl
push
mov
sbb
fiaddl
shll
xor
mov
loope
fstps
ret
repnz
jns
pop
jae
fs
sarl
pushf
rcll
movb
cmp
fcmovbe
jb
lret
cld
mov
pop
inc
push
sbb
push
aaa
push
fs
int
mov
pop
inc
movsl
xchg
int3
jne
sarb
dec
sub
popf
jmp
stc
adc
iret
in
and
ret
lahf
dec
pusha
lods
sbb
sub
sub
arpl
cmc
es
cmp
call
hlt
fwait
cs
int
add
xchg
mov
adc
cmp
cmpsb
xor
add
lock
and
adc
push
mov
out
pushf
outsl
and
lahf
ja
or
or
inc
cli
ja
aam
cli
sahf
push
sti
cmp
mov
pusha
jbe
popf
in
mov
lret
push
add
out
jge
mov
xchg
test
les
lock
clc
jge
adc
or
or
pop
arpl
sub
js
xchg
mov
inc
movsl
mov
xchg
ret
in
ja
das
test
xchg
scas
out
push
call
xor
cmp
sbb
adc
in
fcompl
andl
mov
add
inc
and
out
mov
jae
idiv
outsl
dec
je
stc
xchg
lcall
sti
push
nop
into
leave
dec
clc
sbb
lahf
stos
mov
js
arpl
adc
inc
pop
cmp
das
call
jb
dec
stos
leave
sbb
adc
xchg
sub
pop
pop
pop
out
orb
add
stos
outsb
jo
push
inc
jo
jns
xchg
push
inc
lods
jbe
mov
test
repnz
stos
repz
int
jb
out
sarb
lahf
pop
jmp
dec
cmp
stc
sqrtps
cmc
pop
repz
dec
adc
pop
das
in
dec
daa
jge
sar
xor
push
xchg
jbe
mov
mov
stos
js
in
xor
pop
mov
mov
push
cmpsl
pop
sbb
ret
out
lret
sti
insl
sub
jmp
dec
iret
cwtl
xchg
jp
and
cmp
roll
adc
repz
pop
je
xchg
divl
incl
popf
int
dec
je
lds
js
cmp
cli
ror
gs
or
jmp
and
stc
jne
outsb
das
outsl
pop
xor
dec
pop
or
lret
ljmp
lahf
adc
pop
push
gs
lock
mov
les
fisttps
jb
xor
jp
notb
roll
xchg
pusha
inc
add
pushf
inc
or
push
inc
dec
rcrl
fsubr
je
into
in
cmc
adcb
insb
std
dec
or
xchg
test
cmc
or
lds
ret
sub
push
jecxz
xlat
stc
scas
lods
xor
push
lret
dec
or
add
jns
pushf
fdiv
mov
mov
gs
icebp
pushf
pop
sbb
sbb
push
push
and
sbb
mov
stos
adc
cmp
add
ljmp
jo
loopne
pusha
and
push
das
and
adc
sti
mov
ret
push
hlt
push
popa
rclb
xchg
push
xchg
or
and
xchg
xchg
and
mov
lock
ss
inc
jp
adc
in
mov
xchg
or
scas
outsl
jb
mov
dec
xchg
push
fdivrp
xchg
test
jp
push
jo
adc
ret
je
and
in
cs
popa
insb
out
std
adc
push
ja
sub
dec
jp
pop
cld
inc
mov
jmp
cmp
stos
adc
jmp
adc
js
adc
push
stc
xchg
xchg
inc
xor
mov
pop
pushf
arpl
mov
or
and
ss
jmp
xchg
pop
fsubrl
sbb
xor
cmp
xor
lret
mov
push
scas
pop
call
pop
out
imull
fdivl
cli
inc
sub
add
imulb
xor
jp
fwait
ljmp
mov
push
add
fildll
adc
adc
and
inc
aad
int3
and
scas
and
adc
sub
xchg
lods
jl
add
loopne
fdiv
jmp
inc
mov
stos
ja
maxps
add
leave
jmp
jecxz
hlt
cmp
testl
and
outsb
stos
push
adc
cmpsl
pushf
daa
xchg
stos
pop
xchg
add
mov
xor
push
dec
ljmp
test
fimuls
mov
popf
mov
cmp
ret
rcrb
test
mov
xchg
mov
mov
test
sub
and
xor
out
ja
pusha
add
cltd
lret
jbe
adc
rcll
mov
or
sbb
aam
fsubl
sub
out
pop
imul
pop
andl
pop
jmp
addr16
mov
mov
jp
aas
scas
aad
mov
loop
jge
mov
pop
xchg
xchg
adc
push
testl
and
bound
outsl
and
jecxz
ss
cmp
or
add
sti
jns
aaa
fistpll
fadds
fnstsw
cld
in
movl
vunpcklps
jo
and
dec
mov
icebp
stc
aam
xchg
test
in
jno
dec
fmuls
cli
iret
out
sub
or
fdivs
outsl
mov
scas
sahf
adc
jnp
pop
sub
mov
mov
scas
push
jg
jp
add
xchg
jl
dec
test
xor
pop
add
mov
adc
sahf
ror
hlt
lahf
adc
add
mov
hlt
rcll
imul
dec
int
mov
sub
push
iret
in
movsl
xchg
xchg
aam
cmp
sarl
dec
dec
lret
xlat
jmp
aad
cwtl
popa
and
stc
mov
andb
test
push
cmc
outsb
push
fstps
xchg
mov
cmp
popf
pop
fildl
lahf
fadd
push
das
xchg
hlt
xchg
outsl
sbb
mov
imul
xor
jl
into
pop
pop
lret
pop
mov
je
movsl
pop
lea
jo
push
cld
pushf
jmp
dec
hlt
int3
scas
or
push
xchg
stos
fmuls
cltd
rcrl
jl
push
sahf
cmp
scas
sbb
sub
xchg
outsb
imul
mov
sbb
outsb
sub
jnp
mov
sbb
mov
loop
aas
pop
or
push
aam
inc
out
lret
loope
jo
cwtl
push
in
movsb
outsb
sbb
lea
in
and
inc
insb
mov
cmpl
int
shlb
cmpl
out
cld
mov
sbb
xor
adc
cmpsl
into
imul
push
cmp
mov
adc
loope
pushf
popf
add
out
add
mov
pusha
inc
shll
sahf
cmc
xchg
out
test
and
inc
mov
jo
push
js
adc
add
cmpsb
xchg
shl
fstl
jae
jne
call
add
add
mov
test
lcall
addb
int
dec
xchg
mov
stc
in
jp
jo
es
out
mov
iret
dec
leave
push
rorb
add
scas
imul
add
mov
inc
sarb
jg
mov
aad
rorb
in
and
jl
inc
xchg
xchg
dec
or
movsb
out
dec
and
add
and
jle
mov
repnz
dec
mov
adc
out
ret
mov
or
push
imul
cmp
test
push
nop
mov
aaa
dec
xor
lahf
pop
lods
scas
js
pop
dec
hlt
xchg
sahf
xor
ret
and
fnsave
fcompl
test
xlat
aam
mov
adc
mov
mov
or
sbb
cmp
in
int
fsub
pop
mov
add
std
jge
push
mov
adcw
aas
arpl
into
sbb
jno
imulb
ljmp
inc
jecxz
loopne
mov
iret
clc
aas
mov
sbb
fwait
dec
xchg
sub
fimull
cmp
int
sub
inc
adc
cmp
pop
push
jbe
push
sti
dec
add
lods
rsm
push
aaa
push
mov
mov
insl
out
in
xor
sbb
xor
rcl
or
or
scas
sub
jle
shll
pushf
inc
sbb
pop
cmp
xchg
xor
dec
lcall
xchg
int3
pop
sti
shl
bound
xchg
loope
cmpsl
and
in
mov
or
jo
fnstenv
iret
and
mov
sub
push
shrd
mov
jnp
xchg
data16
cltd
adc
inc
in
inc
mov
stc
adc
push
or
mov
loopne
dec
int
mull
jle
mov
adc
xlat
icebp
mov
sbb
outsl
and
int
mov
sub
call
sbb
sbbl
mov
popa
pop
iret
add
xchg
mov
pop
jmp
sbb
jg
sub
cmpsl
movsl
pop
stos
mov
push
lods
push
ljmp
scas
in
out
stos
push
mov
jge
cmp
fs
nop
cmp
lea
xor
je
mov
xor
push
xchg
mov
xor
sub
aam
adc
andb
call
xchg
fsts
add
mov
add
cmpsb
inc
cmp
mov
cmp
jno
sahf
ljmp
xchg
rolb
push
icebp
lods
cwtl
xor
or
and
cwtl
aad
scas
popa
cli
cli
and
pop
iret
dec
sahf
scas
call
xchg
jg
jo
sub
in
push
sbb
dec
xlat
bound
dec
mov
push
mov
sbb
sbb
push
and
push
dec
or
or
es
sti
int3
leave
mov
cmp
mov
std
jmp
and
lods
test
mov
stc
inc
in
cmpb
dec
mov
pushl
inc
push
into
jb
inc
sub
movsb
and
repnz
lahf
cmpsl
aam
clc
xor
and
mov
lods
insb
negl
incl
ffreep
js
mov
xchg
adc
cmp
mov
cmpsl
cld
bound
dec
push
mov
movsl
and
loopne,pn
jae
sahf
insb
sub
sbb
mov
dec
cmc
sbb
cld
outsl
es
dec
fnstsw
and
je
test
mov
jno
int3
orl
or
fwait
ret
scas
adc
cmp
mov
inc
outsl
negl
in
cmp
pop
rorl
xchg
xchg
add
cmpsl
cmp
fistl
jbe
mov
test
iret
mov
push
jmp
cmp
adc
in
sub
adc
xchg
xchg
push
lcall
jb
jns
lret
add
lock
adc
mov
mov
push
loopne
pop
inc
and
pop
sbb
jg
scas
cli
sarl
outsb
fdivr
jno
or
push
test
mov
icebp
dec
mov
repz
inc
xor
adc
ja
sbb
xchg
mov
call
lods
fisttpl
mov
jl
xor
test
xlat
test
mov
sub
je
jno
jo
push
aam
in
loope
pop
adc
cwtl
ss
mov
mov
and
rol
xor
xchg
js
dec
cltd
inc
dec
idivb
cmpsb
or
adc
orl
adc
lcall
xor
inc
cltd
repz
push
sbb
loope
lcall
lret
insb
sahf
xchg
adc
pop
in
pop
jmp
daa
clc
cmp
andb
cmc
add
add
sub
cld
inc
ljmp
pop
mov
xchg
sub
xchg
adc
hlt
cli
test
xchg
and
xor
adc
dec
hlt
sub
das
add
jno
adc
loope
jnp
add
jo
add
jns
or
jp
pop
lahf
sbb
lcall
inc
dec
mov
test
std
data16
cmc
scas
jl
movsl
dec
gs
test
scas
scas
gs
pusha
popf
aam
or
shlb
dec
ds
lcall
daa
fidivl
cmp
rcl
mov
outsl
cmp
int3
aas
xor
inc
jl
add
and
rcll
mov
mov
bound
nop
outsb
xor
pusha
pop
bound
cmp
leave
insb
cmc
mov
xor
push
iret
iret
xchg
push
jno
dec
fiaddl
inc
and
repnz
pop
mov
cmp
inc
xor
lcall
push
fistpll
sahf
inc
cmp
fsts
mov
push
lret
ror
jo
pause
inc
mov
pusha
pusha
mov
fidivs
mov
pop
xchg
loopne
negb
or
add
cmp
xchg
mov
insl
sbb
lds
test
sbb
stos
sti
fdivr
sub
test
cltd
push
or
int3
mov
sub
push
xchg
inc
push
jmp
fiaddl
push
pop
push
cmp
or
sbb
ja
push
xchg
pop
xchg
sarb
rcll
inc
jb,pt
andb
jno
ljmp
nop
cli
or
test
fwait
stos
fisubrs
arpl
aaa
push
iret
sub
cmpsb
dec
cmpsb
into
cmp
xchg
ljmp
cmp
sub
jle
dec
sub
inc
jbe
jmp
xor
and
fiadds
xchg
or
mov
sbb
shl
push
sbb
mov
lds
push
or
adc
jae
scas
adc
adc
xchg
sbb
xor
ds
icebp
dec
sub
cmpsl
shrl
dec
mov
or
int
js
out
and
or
push
sbb
xchg
leave
insl
lea
add
cli
inc
jl
dec
or
push
sub
sahf
rcll
pushf
xchg
out
xchg
mov
adc
and
cmp
repnz
sar
inc
mov
xor
fwait
mov
ds
in
cmp
sub
pop
adc
leave
lret
push
fsubs
mov
stos
movsb
scas
arpl
sbb
ret
ds
jns
cmp
scas
mov
jg
jnp
arpl
xchg
mov
ret
ds
sub
cmp
dec
cmp
lock
push
xchg
mov
fsubs
xor
mov
ret
ss
shll
cmp
pop
mov
mov
cmp
cmpsb
adc
insb
mov
jno
xchg
cmp
mov
popf
gs
sbb
cli
aam
xchg
pop
jns
aam
dec
sbb
mov
and
xor
nop
sub
cmc
iret
cmp
cmp
sub
pop
test
es
add
test
xor
lock
pop
mov
leave
sub
mov
and
xchg
xchg
cmp
xchg
mov
jne
push
jle
mov
pop
insl
mov
loop
xor
lahf
dec
fsts
in
push
inc
inc
push
cltd
or
mov
sbb
lds
pop
enter
lcall
loope
mov
aaa
mov
in
inc
add
lahf
fs
call
enter
or
xorl
sbb
pusha
mov
ret
loope
mov
xor
adc
pop
cmpsb
stc
inc
or
pop
ret
fstl
push
fimuls
aad
mov
stc
fbld
push
nop
shrl
jo
push
scas
arpl
dec
test
dec
das
jb
push
inc
push
or
mov
mov
xor
rclb
aas
lcall
jo
mov
addb
js
scas
mov
loopne
add
out
or
or
sti
shlb
mov
and
cmp
cmp
sahf
inc
jnp
add
movaps
lods
xchg
or
push
sub
movsl
pop
jbe
aad
cmpsl
inc
shrl
mov
jno
aad
add
push
mov
test
ds
cmpsl
mov
int
lea
xor
pushf
add
stc
fdivl
loope
imul
int
push
sub
pop
dec
cwtl
jle
push
imul
incl
mov
dec
call
pop
sbb
lahf
insl
imul
cmpsl
adc
inc
inc
push
mov
push
pop
cwtl
shll
inc
call
es
lods
mov
mov
repz
mov
iret
rclb
outsl
inc
sbb
mov
ret
std
sbb
push
orb
arpl
pop
fdivrs
or
jno
sti
aaa
lods
insb
or
or
xor
repz
push
xor
jno
out
ret
add
mov
cmp
lea
das
out
std
xchg
push
add
lret
mov
push
je
cmpsl
imull
pusha
or
and
out
pop
push
adc
popf
scas
lods
xor
adc
loop
dec
out
in
mov
in
xlat
xor
out
mov
in
aam
les
pop
repnz
jp
xchg
std
addr16
nop
xor
mov
mov
add
dec
cwtl
popf
sbb
aad
sub
sbb
mov
out
into
lds
xor
xor
scas
in
adc
call
ret
sub
lods
jmp
xor
inc
jo
out
pop
ret
sub
test
mov
outsb
dec
xor
pop
adc
jae
mov
bound
rorl
add
enter
stc
adc
push
or
ljmp
jo
mov
jbe
idivl
aad
notb
imul
ret
adc
dec
sub
test
adc
bound
mov
int3
ds
sbb
xchg
xor
jle
outsl
dec
subb
fldt
mov
jmp
inc
dec
cltd
sub
imul
jmp
mov
inc
dec
mov
mov
aam
pusha
mov
movsb
rcll
jae
inc
fs
and
mov
sti
pop
nop
bswap
sar
in
sub
das
aas
cmpsb
cwtl
jge
jmp
jle
push
iret
pushf
addb
dec
lds
sub
das
xor
pop
xchg
hlt
cmpsl
adc
push
and
loopne
fs
in
sahf
aas
imul
jecxz
jnp
iret
in
push
pop
xchg
sbb
cmc
jae
xchg
scas
mov
xor
lea
and
adc
mov
add
ret
sbb
cmc
cwtl
stos
pop
xor
insb
mov
fmul
lods
jle
stos
inc
xchg
popa
inc
mov
push
sub
into
bnd
addr16
in
clc
add
mov
outsl
and
stc
inc
push
movsl
mov
xor
popa
test
outsl
sbb
shlb
sbb
push
loope
jne
test
insl
sbb
stos
adc
or
sbb
pop
cmp
dec
data16
int3
xchg
dec
xchg
insl
inc
test
hlt
mov
in
cli
repz
or
and
jge
rorl
pop
mov
push
sub
fwait
and
roll
popa
push
jmp
inc
cltd
xor
add
pusha
stos
lahf
jo
jg
mov
clc
xor
inc
std
push
je
mov
pop
jmp
aam
jmp
sub
xor
clc
and
mov
pop
dec
cmp
repnz
dec
pop
pop
or
mov
push
jnp
inc
stos
enter
sbb
and
out
or
jbe
xor
ret
shll
pop
mov
push
pop
pop
and
push
mov
fsubl
mov
or
dec
jns
lods
adc
sbb
push
xchg
pushl
sub
idivl
sub
daa
jne
stos
push
lock
int
and
sub
in
mov
add
and
leave
int3
pop
test
xor
scas
std
lock
jno
mov
pop
test
adc
jne
pop
nop
sbb
mov
cmpl
lock
jne
hlt
fcompl
mov
loope
fs
and
cmpsb
inc
das
xchg
in
loope
out
bound
mov
jmp
push
or
dec
pop
fidivs
and
cmpsb
xchg
aas
mov
pop
or
mov
add
cmp
pop
pop
hlt
mov
iret
dec
cmp
outsl
stc
scas
jmp
and
add
mov
mov
jnp,pn
nop
cmp
cmp
lea
push
mov
rcrl
mov
aam
xchg
pushf
std
add
insb
and
push
mov
jmp
jp
mov
out
dec
mov
mov
jg
into
and
mov
cli
pop
inc
sub
subb
inc
adc
test
jnp
cmpl
das
xchg
insb
inc
jg
into
ret
push
ret
push
in
xchg
dec
stc
stos
lahf
lods
dec
arpl
fbld
jl
negl
jne
xor
jae
cmp
cmp
jnp
stos
and
outsb
or
dec
push
roll
incl
out
mov
push
leave
sti
std
xor
cmpsl
leave
insb
cmpsl
adc
sub
stc
jle
loop
lahf
inc
outsb
sti
sub
mov
mov
or
and
fwait
scas
xchg
orl
jns
repnz
cwtl
push
mov
fsubp
nop
ret
pop
pop
aas
sub
int
mov
cmc
jbe
push
in
sbb
cmpb
cwtl
loopnew
sbb
popf
hlt
push
fxch
leave
add
mov
cmpsl
loope
rolb
arpl
inc
scas
add
ret
lcall
inc
dec
sbb
sub
mov
repnz
out
inc
xchg
sub
lods
or
mov
mov
cld
dec
xchg
fdivrp
sti
xchg
push
out
fsubs
sub
cmpsl
imul
ret
dec
clc
mov
hlt
jge
pop
jno
mov
push
mov
xor
fucomip
lcall
xchg
sbb
pop
in
sti
aam
jge
or
mov
mov
popa
and
pop
add
mov
adcl
jecxz
xchg
pop
cwtl
push
jecxz
mov
das
jle
or
addr16
jge
cmp
mov
pop
out
mov
out
ss
mov
mov
cli
sbb
das
orb
insl
jmp
mov
mov
pusha
add
test
cld
sub
in
sbb
cmp
daa
aaa
fstl
mov
mov
shlb
pop
cs
in
in
into
test
clc
lahf
mov
int
jo
daa
ds
jg
pop
dec
pop
mov
jmp
mov
repz
push
lock
test
xchg
cmp
sub
shl
sbbb
jnp
fimull
mov
stos
jae
mov
out
inc
ss
fisubrs
hlt
mov
or
out
push
jns
sbb
sti
repnz
cld
sub
add
mov
outsl
sbb
mov
jge
cld
adc
mov
mov
mov
popf
rol
mov
iret
lock
inc
dec
inc
in
push
cmp
je
ret
sti
mov
cs
xchg
pop
mov
sbbl
jp
push
add
mov
fwait
pop
mov
dec
mov
mov
mov
or
loop
xor
push
out
ss
pop
mov
stc
jbe
sbb
jo
and
std
pusha
jle
stos
mov
lock
cs
and
repnz
push
xorl
lods
and
fimull
loope
fsubrl
int3
stc
xchg
test
jg
mov
ja
test
and
outsl
loopne
adc
fcomp
adc
into
xor
mov
hlt
xchg
sbb
mov
inc
push
sub
pop
into
mov
add
sbb
sub
mov
xor
pop
push
push
mov
xor
or
xchg
dec
imul
cs
bound
sbb
stos
into
inc
pop
leave
jbe
out
jle
pop
mov
jp
or
or
lret
out
jb
js
add
and
lahf
test
nop
jmp
cmp
divl
ret
dec
fimull
cmp
cmp
popa
icebp
gs
pmullw
and
mov
cmp
xor
mov
inc
sub
cmp
icebp
or
push
in
and
ljmp
mov
push
in
je
rol
lock
inc
mov
mov
xchg
cmp
cmpsb
xchg
cmp
dec
out
push
pop
movsb
inc
jbe
jae
adc
outsl
xchg
stc
roll
ljmp
sbb
mov
dec
mov
cmpsl
ja
mov
in
jmp
notl
inc
jno
push
rcll
add
inc
mov
idivb
inc
dec
sbb
and
dec
or
aam
stos
ret
pop
fisttpl
dec
enter
push
sbb
inc
jb
mov
cmp
scas
jecxz
mov
mov
pop
xlat
push
mov
dec
mov
js
stos
mov
jo
fucomp
popa
dec
jo
gs
mov
clc
subb
leave
dec
jge
pop
testl
and
movsb
mov
mov
mov
loope
and
inc
testb
xlat
into
insl
xorl
jmp
lock
call
lds
arpl
xchg
mov
iret
dec
fidivrs
arpl
mov
gs
dec
and
pop
xchg
inc
leave
xchg
fiaddl
imul
inc
je
jge,pn
xchg
movl
addl
or
ds
gs
adc
rorl
std
push
js
mov
dec
call
cmp
movsl
scas
fcmovnu
lcall
lea
mov
dec
hlt
dec
sbb
test
sub
mov
xor
dec
adc
test
xchg
hlt
cmovs
out
fs
or
add
inc
test
push
scas
fstps
inc
mov
mov
mov
cli
mov
pushf
aam
push
bound
add
filds
int
sarl
adc
imul
stos
aaa
add
and
sahf
or
jno
stc
icebp
push
in
fsubrs
push
out
mov
ss
lret
inc
sbb
loop
cltd
and
cmc
add
out
inc
adc
testb
je
pop
fistps
insb
setp
jg
jns
insb
jmp
add
iret
jbe
jp
shlb
rol
jbe
cmc
enter
add
inc
je
add
rcrb
icebp
std
cli
sahf
mov
insb
cmp
xor
xor
cmc
imul
sahf
arpl
and
add
int3
xchg
pop
imul
mov
push
dec
std
shl
jo
cmp
sbb
dec
sbb
mov
gs
push
jp
and
inc
and
jae
stc
cltd
mov
add
and
cwtl
mov
push
xchg
sub
mov
jle
or
or
jo
xlat
inc
test
int3
lods
stos
mov
mov
or
ljmp
push
add
adc
daa
sbb
or
push
iret
fs
es
xchg
inc
leave
cmp
outsl
pop
add
mov
xchg
dec
dec
mov
jae
scas
cs
insl
xchg
jg
pop
inc
cltd
push
sahf
add
xchg
xchg
or
pop
rdmsr
cmp
jne
pop
or
mov
adc
sub
pop
sbbl
sbb
fwait
mov
ss
pop
add
test
or
xchg
or
popa
lds
in
push
add
mov
repz
push
sahf
or
mov
adc
repz
pop
adcb
pop
rorb
push
jge
gs
test
stc
xor
mov
shrb
lods
outsb
es
sbb
mov
mov
pusha
sbb
inc
stos
orb
mov
mov
aas
mov
push
icebp
adc
mov
sub
push
sub
stos
mov
jp
leave
adc
push
push
cs
push
ja
sbb
ret
mov
movsl
aas
out
inc
bound
push
js
out
jbe
popf
sub
das
cmp
xor
add
fwait
xchg
dec
test
dec
add
negl
gs
mov
and
adc
adc
js
shlb
push
lods
stos
or
mov
push
pop
add
sbb
dec
aas
lds
xor
test
fxtract
dec
stos
mov
inc
rcr
xor
push
jnp
test
mov
scas
ja
ret
push
sbb
sub
fmul
sbb
bound
cmp
test
and
jg
adcb
loop
loope
rcll
mov
or
cmp
sarl
jo
pop
test
cmp
enter
jbe
std
fs
xchg
cwtl
jo
xchg
sbb
sub
add
pop
fbld
cwtl
pop
mov
scas
xchg
movsb
mov
sub
aaa
pop
lcall
iret
movsb
push
push
int3
adc
sbb
mov
out
or
outsl
mov
sub
jno
mov
add
es
jnp
fsubs
cwtl
or
push
mov
cmc
adc
xchg
and
fsubrl
hlt
mov
imulb
and
repz
lds
fidivs
dec
jbe
jp
lahf
scas
aas
pop
outsl
dec
aam
push
lods
cmp
and
pushf
push
pop
xor
inc
insb
inc
sbb
rolb
repnz
pop
imul
shl
xor
ret
sub
mov
out
call
pushf
sbb
sti
out
je
shlb
push
lock
and
fs
pop
and
xchg
out
jp
mov
hlt
cmp
xchg
mov
insb
mov
filds
scas
cmp
mov
imul
arpl
out
inc
subb
add
and
fnstsw
mov
mov
sbb
fwait
je
into
out
jnp
inc
scas
pop
push
cmpsl
adc
in
push
test
stc
test
mov
imull
pop
fdivp
outsb
int3
gs
xor
mov
fstp
icebp
inc
mov
adcb
adc
es
mov
adc
and
push
std
or
jns
mov
xchg
bound
cwtl
ret
pop
xor
adc
cli
sub
repnz
out
adc
ficomps
rcll
mov
ret
and
sarb
icebp
push
dec
sysexit
mov
or
dec
mov
adc
fdivrl
xor
jno
cmpsb
out
ja
rolb
jecxz
mov
adc
jb
adc
lods
rcr
shlb
sub
test
xor
pop
in
cltd
addl
cmp
std
jnp
fsubrs
fiadds
mov
mov
adc
int
jg
std
xor
cmp
mov
je
test
cltd
mov
sar
jge
les
addb
and
jne
pop
shrl
out
dec
dec
sub
dec
or
mov
and
inc
cltd
mov
jno
int
popfw
cmpsl
cmovg
hlt
xchg
testl
lea
pusha
xchg
cmp
rcl
sahf
scas
pop
shlb
push
cmp
mov
jmp
test
stos
dec
xchg
sti
bound
sbb
jecxz
cmp
dec
push
cmp
mov
lods
ret
incl
cmpsb
adc
add
xchg
arpl
clc
dec
mov
lret
dec
mov
jns
mov
and
push
fldenv
enter
repz
and
push
push
imul
xor
xor
jl
hlt
lods
mov
jge
push
adc
mov
inc
pop
fists
sub
sub
or
lret
aaa
frstor
pmuludq
scas
adc
arpl
mov
pop
mov
fisubs
dec
cmp
cs
cmp
push
call
lods
inc
pop
xchg
adc
sbb
mov
mov
jb
ljmp
loop
sbb
fwait
add
and
pop
pop
cmp
scas
insb
xor
xor
xchg
mov
push
out
in
mov
movsb
fwait
jno
jno
test
xor
dec
sbbb
mov
jbe
fs
nop
add
add
and
pop
jge
sub
add
pop
jmp
ret
pop
cmp
xor
stos
aad
pushf
fs
mov
push
aas
daa
xor
jnp
pop
mov
les
jne
xchg
adc
mov
lahf
xor
nop
or
popa
movb
out
das
push
sbb
push
add
push
cmpsb
loopnew
mov
leave
or
lods
sahf
push
xchg
repz
sbb
fistpl
mov
sahf
or
leave
lahf
sahf
mov
ret
mov
rcrl
sti
sub
cmp
sarl
mov
hlt
inc
or
out
in
lcall
jg
les
dec
jb
rcrb
pop
dec
pop
mov
scas
jmp
jmp
loope
pop
lock
inc
pop
cmp
push
push
out
xchg
imul
xchg
pushf
sub
xchg
inc
scas
mov
mov
loope
inc
and
enter
and
add
lcall
jno
insb
sahf
lods
sbb
dec
xor
les
and
mov
lds
xor
or
mov
jne
jb
test
xchg
push
sbb
push
mov
cltd
inc
sahf
sub
and
sub
push
out
fwait
mov
inc
fistps
push
xor
inc
xchg
orl
add
popf
fsubs
sbb
mov
xor
and
dec
jecxz
lods
iret
shll
adc
push
sbb
std
jae
pop
lcall
mov
loopne
cmp
pushf
mov
adc
sbb
pop
add
mov
sbb
pop
pushf
mov
ds
xchg
inc
pop
and
adc
sarl
xor
mov
cmp
mov
dec
fadd
and
imul
sbb
mov
xor
jae
jne
xchg
lods
mov
sar
mov
inc
pop
stos
ja
adc
add
sbb
fmuls
xchg
sbb
jge
jbe
insb
pop
jg
movsl
push
data16
in
loopne
cmovo
shr
stc
add
add
add
mov
aad
xor
aaa
pop
or
xchg
inc
pop
imul
fists
dec
push
xor
push
out
std
mov
lods
negb
call
jne
cmpsl
xor
sub
pop
data16
pop
daa
mov
nop
icebp
sti
sahf
mov
pop
arpl
adc
jp
test
dec
xor
out
push
sti
jmp
jno
ret
outsb
mov
inc
dec
mov
xlat
pop
xchg
popa
add
xor
test
cltd
mov
and
xchg
push
inc
mov
sbb
dec
sti
push
mov
das
pop
stos
jae
pop
mov
or
scas
push
mov
std
xor
mov
dec
imul
adc
fs
enter
jmp
jmp
jmp
movsl
cmp
or
push
mov
imul
xchg
mov
push
out
stos
push
sub
jnp
jno
and
pop
pop
push
pop
mov
xlat
jne
push
mov
xlat
push
and
mov
negl
mov
bound
out
push
mov
dec
lahf
test
sbb
icebp
mov
add
mov
fsub
sub
cmp
fs
mov
jb
enter
dec
sbb
push
sbb
push
and
data16
out
rol
xor
xchg
sbb
dec
adc
lock
leave
add
in
lea
xor
mov
int3
ret
rclb
mov
jmp
call
jecxz
inc
mov
mov
pop
mov
xor
ret
leave
dec
xor
in
xchg
popf
xorb
cli
xor
push
aaa
mov
ss
movsb
push
inc
cmc
insl
leave
dec
out
sbb
dec
data16
test
push
dec
xchg
lea
testl
cmp
or
out
inc
mov
fmulp
sub
insl
xchg
cwtl
mov
dec
bound
dec
in
fildll
mov
adc
mov
out
pop
xchg
push
dec
push
or
push
mov
and
xor
pop
sbb
dec
rorb
push
inc
cmp
outsl
xchg
aad
mov
mov
add
stos
loop
les
clc
popl
xor
mov
xchg
stos
sbb
cmp
adc
xchg
stos
stos
adc
mov
and
aas
mov
jns
pop
cltd
sbb
jbe
in
insb
and
xor
jp
sub
mov
push
ficompl
movsl
nop
lods
push
inc
sti
arpl
inc
dec
inc
mov
pushl
jo
mov
push
cmp
sub
popa
or
mov
mov
mov
pop
in
cmp
mov
xchg
in
add
jne
arpl
jg
lcall
xchg
sbb
sub
inc
mov
idivb
mov
popa
jb
ret
push
mov
or
pop
add
sub
inc
mull
imul
into
aaa
push
call
jb
shrb
dec
cmp
xor
jo
dec
jge
data16
push
imul
rcrl
sub
jno
fdiv
push
cmp
mov
aaa
hlt
or
je
int
imul
mov
pop
xor
jo
repnz
dec
push
push
and
jg
mov
divb
xor
scas
mov
push
outsl
jae
inc
add
scas
and
sbbb
sbb
push
xor
leave
inc
jo
cmp
leave
adc
xor
neg
mov
mov
push
test
loope
jmp
pop
addb
fdivrl
jl
mov
inc
clc
mov
push
adc
loop
sub
repnz
xorl
jne
xchg
out
rcll
cmc
inc
inc
pop
cld
lea
push
xchg
rorl
sbb
nop
and
push
daa
mov
dec
nop
and
or
test
push
jno
sbb
stos
sbb
out
lods
add
call
dec
repnz
jmp
xchg
jg
inc
mov
xor
add
stos
cmp
dec
mov
cmp
pop
sti
mov
inc
icebp
sub
ficomps
mov
lods
test
push
insl
cmp
or
stc
lret
sub
and
lea
mov
add
ljmp
mov
adc
sub
mov
int3
into
fxch
or
ficompl
ljmp
loopne
popf
jnp
sub
mov
pusha
nop
out
cmp
cmpsl
mov
or
or
jmp
push
and
add
cmp
out
or
push
dec
dec
push
or
jns
or
dec
adc
inc
sub
cmp
push
jbe
mov
xchg
clc
fisubs
sub
inc
jg
mov
dec
clc
sub
das
add
cs
add
flds
pop
leave
push
xor
push
dec
repz
movsb
insb
pop
ja
push
cltd
das
inc
inc
pop
ficomps
dec
jmp
incb
dec
xlat
cmpsb
add
ljmp
ret
cmpsl
test
stc
sahf
mov
dec
add
ds
sub
pusha
pop
lods
or
inc
mov
add
lret
jno
in
sbb
in
adc
aam
mov
cmp
in
mov
out
sti
lea
jle
loop
push
jg
lret
aas
push
cmp
je
xor
fdivp
mov
fs
xchg
es
je
mov
xchg
imul
mov
dec
mov
jmp
sti
fdivrs
in
mov
out
pushf
scas
loope
jns
mov
or
out
and
ret
sbb
outsb
fisttps
mov
fmuls
inc
out
arpl
sub
in
enter
lret
mov
jge
inc
mov
xor
arpl
dec
push
out
xchg
pusha
cmp
test
mov
push
xchg
ds
pop
jns
and
nop
xchg
jg
lcall
and
mov
inc
lret
lds
outsl
inc
mov
cmp
xchg
data16
sbb
cmp
adc
cmp
je
fwait
sbb
int
test
in
mov
cwtl
jae
insl
ja
xor
mov
add
fxam
xchg
stos
adc
ret
imul
roll
test
movsl
inc
inc
xor
enter
fcoml
popf
jbe
ja
jg
scas
lret
decl
and
push
pop
andb
fs
mov
cmp
jo
jbe
movsl
push
jbe
fwait
xor
data16
add
sbb
fcmovbe
shrb
sar
repz
push
mov
cli
hlt
insl
mov
push
sbb
mov
jmp
jge
and
adc
mov
fdivrp
icebp
movsl
call
subb
in
mov
xchg
loop
mov
iret
rcrb
pop
mov
add
sbb
dec
fdivrl
dec
sbb
scas
faddl
shl
mov
imul
sbb
pop
push
out
mov
pop
movsl
jae
shll
cmp
dec
fcomip
movsb
mov
les
dec
pushl
adc
lock
clc
cltd
call
imul
movsb
inc
out
movsl
cmp
cmc
inc
dec
mov
aam
pop
adc
in
lods
add
fidivl
fmull
data16
pushf
mov
adc
or
mov
hlt
jnp
or
adc
ret
scas
jo
cmp
jns
aas
lret
leave
xlat
push
inc
sbbb
push
mov
pop
cs
leave
insl
add
jle
inc
adc
clc
test
mov
pop
push
imul
push
in
xor
je
xchg
jp
cwtl
xlat
out
and
mov
dec
jge
out
in
mov
leave
stos
mov
mov
mov
cmp
adc
xor
fisubrs
out
mov
and
std
les
in
dec
push
mov
mov
and
dec
mov
scas
in
fsts
add
inc
jle
pop
mov
adc
test
and
xchg
xchg
loope
push
sbb
lock
xchg
fs
ja
inc
lods
popf
jp
testb
adc
mov
lcall
aam
mov
sub
pop
xchg
callw
fstps
cmp
cmp
cmc
add
popf
mov
idivl
sbbl
movsl
pop
push
push
xchg
jno
mov
cli
jmp
xor
leave
dec
jmp
ret
in
gs
xchg
push
bound
add
fsubl
sub
in
mov
fsubs
jecxz
jp
adc
mov
inc
out
pop
ds
xor
sub
pop
std
inc
and
push
fdivrs
rcl
inc
les
setge
mov
setb
jmp
jge
movsb
adc
data16
jmp
pop
xchg
je
mov
mov
xor
mov
inc
imul
push
cmp
sbb
mov
mov
outsb
scas
sub
dec
dec
test
inc
mov
je
ljmp
rorb
in
loop
mov
push
ss
lds
cmpsb
add
push
repz
fdivrs
add
mov
xor
inc
and
mov
mov
cmp
gs
jne
std
adc
inc
push
dec
xchg
mov
adc
mull
cli
sub
jns
cli
outsb
adc
mov
cmp
adc
rclb
cmp
rorb
or
adc
adc
cmp
xor
adc
in
outsb
or
fdivl
les
xchg
jg
imul
xchg
mov
int
dec
push
movsl
jmp
insb
leave
test
sbb
add
fistl
pushf
ret
rcl
sbb
std
dec
cltd
aam
fidivl
imul
lods
pop
mov
jmp
jno
in
pop
xchg
dec
fidivl
or
mov
jge
pop
fisttpll
jno
dec
std
mov
pop
test
leave
dec
jne
and
mov
adc
sub
inc
jbe
loope
in
mov
shll
dec
rcrl
sti
cmp
pop
xchg
aas
insb
adc
xorb
fistpll
and
mov
push
sub
sbb
test
xlat
inc
rorb
bound
test
xchg
xor
test
sbb
cmp
push
push
mov
xor
inc
hlt
inc
or
lds
iret
ficompl
mov
mov
aam
loopne
in
into
imul
out
xchg
iret
out
push
lds
popa
mov
jp
xchg
das
adc
sub
in
ror
call
aas
fstps
inc
mov
pop
movsb
insb
lret
mov
push
mov
push
insl
jge
leave
movsl
inc
mov
push
cmp
jle
rorb
iret
mov
jo
in
sbb
loopne
pop
mov
loop
pop
and
inc
loope
repnz
nopl
stc
movsb
loop
xchg
leave
test
sub
movsl
out
pop
and
divl
fdivs
cmc
es
dec
cs
dec
js
into
push
inc
mov
mov
out
repz
jno
or
mov
test
pop
inc
pop
icebp
xchg
inc
cli
jae
pop
movl
push
pusha
dec
out
mov
push
prefetch
dec
adc
mov
add
push
test
aaa
inc
sub
dec
lock
lock
mov
inc
dec
jns
ret
push
and
sbb
into
dec
arpl
dec
push
pop
rcrb
dec
in
cld
xor
call
lcall
insb
fs
jo
aas
jmp
cmp
mov
lods
hlt
std
cli
repz
jp
mov
enter
sarb
pop
and
lahf
stc
sbb
imull
pop
mov
fidivl
std
adc
cmc
sbb
pushfw
xchg
mov
push
cli
push
mov
push
inc
rclb
add
insb
jae
or
popa
push
into
hlt
stos
lea
lds
cmp
cmp
rorb
mov
pop
sbb
mov
mov
inc
aaa
gs
rclb
repnz
in
add
xchg
mov
lea
sub
xor
sbb
lahf
pushf
adc
fucom
sbb
in
pusha
jnp
and
xor
sarb
cwtl
jnp,pn
pop
push
lcall
bound
fists
push
sahf
mov
sub
clc
int3
add
add
push
mov
adc
cmpsl
xor
mov
sbb
push
jns
in
ds
add
xor
addr16
mov
cld
push
cli
inc
inc
xchg
sub
out
lods
insl
hlt
cmp
cmp
xchg
mov
cmp
idivb
lcall
pushf
es
arpl
test
fwait
push
notb
repz
mov
mov
lret
in
cwtl
ljmp
outsb
cmp
push
adc
inc
dec
sub
sarb
fiadds
adc
hlt
cmp
inc
leave
sbbb
cwtl
orl
sahf
pop
mov
lcall
xor
cmc
push
sub
imul
leave
mov
js
call
mov
add
push
ds
cmc
push
mov
fidivrl
sub
mov
xor
xchg
adc
and
insb
xlat
cmc
adcb
add
and
adcb
add
dec
xchg
lcall
sti
mov
inc
loopne
jns
stos
add
in
and
sbb
mov
lods
es
jo
aaa
mov
mov
jp
mov
cs
hlt
outsl
sbb
dec
in
xor
push
outsb
mov
notl
inc
outsb
rorb
outsb
mov
xlat
sarb
adc
mul
sbb
xor
jnp
dec
xor
and
cmp
cmp
dec
fisubl
or
adc
test
xchg
inc
xor
lahf
aad
or
push
inc
mov
xchg
test
push
jo
in
mov
inc
dec
fldl
dec
mov
mov
loop
movsb
mov
mov
mov
sahf
loopne
adc
js
xlat
aas
sbb
imul
lock
inc
xchg
rcrb
dec
sub
dec
cmp
imul
int3
mov
cmp
mov
jno
into
push
bound
das
and
cmpsl
add
sbb
out
inc
xchg
xor
fildll
or
pop
out
repz
sbb
div
inc
dec
leave
mov
mov
or
in
arpl
mov
add
add
mov
in
jbe
xchg
lea
xchg
frstor
mov
xchg
sarl
mov
inc
pop
mov
xchg
imul
push
loopne
or
out
das
sahf
mov
loop
mov
movsb
dec
ja
mov
mov
cli
push
jb
pop
insb
mov
ds
mov
xorb
clc
push
hlt
mov
cmpsb
xchg
cld
jmp
push
push
movsl
dec
pushf
subl
jb
mov
and
lret
outsb
cmpsl
aam
adc
dec
mov
stos
sbb
pop
sub
push
xchg
loope
lret
push
add
jg
aad
fdivrl
xchg
lods
jg
dec
iret
outsl
pop
dec
and
sbb
aam
pop
and
jns
cmpb
xchg
sbb
and
sub
ret
mov
aas
insb
push
loope
or
imul
int3
icebp
lret
lock
lods
mov
test
jne
lods
mulb
ljmp
adc
xor
insb
incl
cmp
negb
mov
aad
jae
lret
dec
cmc
jge
adcb
or
inc
and
push
inc
add
push
pop
dec
jl
ds
push
add
scas
jae
cmp
inc
pushf
repz
data16
pop
jge
fdiv
push
push
inc
pop
push
and
cmpsb
push
clc
aas
stc
mov
inc
xchg
in
adc
lock
inc
aas
inc
cltd
push
mov
add
push
fisubs
inc
lods
outsl
xchg
popa
push
push
out
clc
and
push
push
scas
sub
mov
xchg
and
scas
and
cmpsl
jecxz
jp
enter
lahf
pop
pop
das
cmc
and
xchg
ljmp
jg
dec
xchg
iret
loopne
inc
out
mov
and
push
mov
mov
adc
mov
cmp
out
xlat
stos
xchg
fsqrt
adc
ror
cmp
adc
int3
xchg
rorb
cmp
inc
push
out
out
shll
pushf
mov
inc
cmpb
stos
das
mov
mov
mov
cmp
aad
dec
jne
push
xchg
xchg
insb
jmp
popa
sub
bound
push
add
cltd
pop
cmpsb
inc
aaa
xchg
ret
mov
loop
push
loope
jb
adc
cld
adc
xchg
mov
jae
arpl
push
je
ss
lods
jg
dec
icebp
sbb
pop
daa
orl
pop
or
data16
hlt
test
xchg
or
test
aam
test
push
les
sbb
mov
lcall
pop
pop
sbb
in
cmc
push
dec
and
and
jge
xor
cltd
push
push
and
and
test
fsubl
mov
lret
cmp
dec
sbb
test
clc
pop
outsl
pop
negb
subb
lahf
xlat
sahf
and
xchg
sbb
pushf
sarb
or
faddp
js
fdivrp
xchg
mov
in
repnz
adc
adc
aad
mov
cmp
add
pop
out
jp
andb
fldt
mov
pushfw
pop
js
jno
push
jae
test
shrb
test
ret
ds
inc
push
sub
xor
adc
xchg
pop
loope
adc
or
xchg
das
addr16
add
insb
sti
hlt
mov
mov
out
xor
stc
mov
sub
xchg
sti
mov
call
xchg
ds
jge
aas
push
xchg
adc
popa
inc
sbb
stos
jo
in
addb
fs
shlb
cmp
pop
mov
cwtl
out
fbstp
cmp
cltd
cmp
int
rclb
cld
or
sub
pop
mov
out
sbb
ja
out
mov
push
movsb
cmp
dec
in
mov
inc
rcr
mov
jo
mov
push
mov
mov
pusha
xlat
xchg
lret
fdivs
iret
lods
mov
pop
dec
pop
mov
pop
cmp
jecxz
adc
push
dec
add
pop
push
push
incl
mov
cmp
jge
cld
popf
or
xchg
adcb
mov
or
test
int3
pop
int
sub
stos
pop
mov
test
add
inc
and
inc
mov
adc
inc
fcmovnb
jecxz
mov
adc
mov
sbb
xor
and
push
cmp
mov
outsl
inc
sbb
fisttpl
out
sahf
pop
int3
pusha
jno
dec
pop
aad
jmp
adc
dec
sbb
add
sahf
repnz
nop
and
cltd
fdivrl
int3
sub
js
shrl
mov
cmp
and
push
popa
jne
aad
sbb
cmp
ja
jb
adc
jl
int3
sbb
into
or
mov
push
ss
adc
sbb
lahf
clc
popf
and
jl
dec
push
push
cmpsb
out
fndisi(8087
test
pushf
xor
rorb
dec
inc
mov
xor
leave
lock
pop
push
jnp
repz
adc
inc
rcll
push
adc
fiaddl
lcall
rol
outsb
cli
or
arpl
mov
mov
sbb
and
push
mov
clc
cmp
adc
lret
std
sub
mov
mov
mov
add
jae
es
jns
aas
jno
mov
mov
subl
ss
xor
cwtl
push
in
mov
into
mov
add
cmp
aad
xchg
lea
stos
add
cmp
in
pop
roll
shll
ss
sbb
lods
repz
jmp
cmp
jmp
fs
mov
xor
iret
adc
es
cltd
pop
movsl
jne
or
idivb
mov
cmp
jne
lret
xor
loope
pop
xor
lcall
xchg
adc
inc
in
repnz
fnsave
int
xlat
std
cld
mov
pop
jecxz
push
imulb
and
imul
loopne
lods
imull
sarb
pushf
xor
or
pusha
sbb
inc
mov
nop
stos
imul
subl
lret
xchg
insl
rcr
push
sub
adc
xor
xor
or
mov
jns
jae
dec
cmpsl
mov
enter
xchg
test
pop
or
and
adc
cwtl
or
sti
sub
dec
popa
hlt
stc
cli
sub
xor
jecxz
inc
mov
and
pusha
dec
enter
push
js
cmp
mov
pop
imul
or
xchg
outsl
into
imul
rcrl
mov
mov
jne
inc
fwait
iret
cmp
inc
imul
and
jo
aas
add
add
jae,pn
jmp
pavgw
and
jns
push
add
arpl
repnz
push
mov
cmpsl
inc
movsl
cwtl
xchg
jle
adc
jmp
sbb
lea
mov
pop
test
dec
adc
adc
sbb
push
ljmp
cwtl
dec
jg
out
mov
leave
adcl
mov
aam
cmpsb
jns
pop
sbb
adc
jle
jns
and
cmp
and
imul
je
scas
lahf
test
pop
test
mov
outsb
mov
cs
jo
adc
getsec
push
out
stos
pop
sarb
repz
add
shl
and
lahf
loope
daa
loopne
ret
dec
ret
call
mov
dec
or
push
xor
jecxz
cmp
jo
inc
imul
clc
fidivl
je
jbe
scas
push
adc
pushf
adc
sub
loope
imul
push
lcall
into
stos
jmp
cltd
lret
push
inc
pushl
inc
icebp
imul
fs
out
in
out
mov
movsl
lret
lcall
notb
inc
jno
add
subl
inc
or
icebp
mov
mov
add
inc
aas
dec
cwtl
mov
pop
fisubl
mov
les
pop
scas
shl
jge
fdivl
pusha
push
push
lret
sub
sub
cli
pop
mov
mov
mov
movsb
xlat
mov
jl
ret
adc
sbb
jge
mov
into
test
ljmp
cmpsl
jl
push
cmp
cmp
jg
pop
dec
xor
nop
xchg
jbe
adc
mov
xor
ja
sbb
cmp
pushl
xchg
out
cmp
mov
or
shr
outsb
inc
pop
imul
scas
mov
popf
outsb
jg
push
push
jnp
push
cmc
pop
pop
adcl
and
dec
ljmp
or
adc
lods
lahf
daa
lret
mov
or
daa
sbb
cs
sbb
mov
dec
and
loopne
jle
cmp
xchg
repz
mov
arpl
dec
xlat
xchg
dec
dec
and
push
and
jbe
dec
add
test
sub
jmp
xlat
mov
stos
lds
orl
or
imul
leave
xor
or
inc
jle
cs
jmp
add
out
pop
push
int3
jne
mov
adc
ljmp
mul
in
data16
fstpt
push
mov
mov
xchg
push
jnp
cmp
adc
mov
sbbl
popa
lds
mov
sub
int3
loop
ret
dec
lods
push
xchg
imul
imul
in
dec
addl
dec
and
pop
xor
lds
dec
mov
dec
in
sarl
and
fsubl
in
incl
mov
fs
push
push
daa
and
arpl
popa
push
test
inc
ljmp
and
rcll
into
lock
scas
shlb
cs
add
insl
cmpsl
push
push
and
inc
je
imul
stos
addl
scas
pop
push
or
sub
inc
jmp
lock
out
frstor
cmpsb
repnz
iret
or
push
lcall
frstor
add
jl
daa
hlt
fdivr
jne
jno
inc
outsb
mov
add
scas
push
popa
cmp
fisubl
mov
xor
out
loop
fsincos
dec
inc
mov
push
xchg
rcl
fldt
stos
cs
outsl
push
arpl
inc
mov
ret
fiaddl
xor
rolb
enter
andb
movl
data16
movsl
push
adc
mov
out
xchg
add
fiaddl
fyl2x
jnp
lret
stc
inc
push
je
lcall
push
rorb
push
cmpb
sbb
lods
pop
ja
or
movsl
sbb
test
clc
testl
sbb
es
jne
movb
push
xor
mov
mov
push
ja
je
ret
loop
out
addr16
mov
dec
mov
jbe
int
add
dec
inc
subl
iret
mov
test
pushf
sbb
out
jle
sub
adc
icebp
sub
ds
cmpb
ds
jne
adc
popa
xlat
loope
or
mov
or
push
clc
sbb
ret
shlb
ret
sub
inc
aas
or
and
pop
jg
mov
test
mov
mov
xor
orb
dec
and
pop
push
push
jo
inc
mov
adc
jbe
fimuls
aas
or
stos
sub
rorb
add
ss
fiadds
aam
mov
test
add
mov
int3
fildl
jmp
sub
jnp
popa
jl
repnz
xchg
imul
push
jge
and
pusha
xchg
jp
je
sbb
in
sbb
sub
daa
sar
jecxz
aad
jge
das
jp
pop
push
insb
fnstenv
mov
nop
aaa
or
popf
cmp
push
push
or
aam
cmp
js
pop
pop
sub
and
sub
leave
sub
jmp
out
lods
inc
xor
daa
mov
add
inc
jecxz
push
hlt
negb
and
std
mov
mov
push
repz
xchg
jp
fldt
ds
leave
repz
jne
rcl
mov
jae
js
cld
pop
adc
inc
mov
push
cmc
loopne
push
adc
ljmp
cmp
loop
pop
fistpl
cmpsl
jae
mov
push
int
fsts
sub
mov
jmp
and
xchg
int
js
scas
mov
push
cmc
push
stos
xorl
and
out
mov
stos
push
sbb
jns
adc
iret
shll
adc
jl
dec
pop
pop
mov
pop
icebp
js
push
cltd
push
loop
iret
subb
jae
or
mov
xchg
ficompl
push
cli
mov
mov
jle
lret
jl
hlt
mov
lcall
jo
add
push
jle
xor
sti
push
jbe
push
es
mov
ret
mov
mov
or
dec
inc
push
stc
loope
stc
daa
jl
icebp
rcll
xchg
add
push
dec
push
lahf
push
add
sub
mov
movsb
mov
xor
cmpsb
test
add
push
outsl
jmp
iret
jecxz
sbb
jecxz
and
jno
add
js
sbb
repz
xor
lds
and
and
imul
pmulhuw
pop
imul
fisttps
push
xchg
xor
sub
jmp
mov
jo
rorb
adc
inc
dec
test
adc
jmp
out
je
hlt
mov
pop
xchg
fcomps
scas
pop
inc
insl
and
test
rorl
xor
outsb
cwtl
dec
daa
je
push
mov
and
pop
bound
push
jae
repnz
jecxz
addr16
xor
push
jle
in
into
adc
dec
ja
lret
dec
sub
dec
add
dec
jmp
jp
int
repz
cmp
inc
adc
ficomps
nop
gs
orl
call
lret
stos
jg
sub
pop
sbb
cmp
xor
jne
mov
adc
test
inc
leave
sarl
sub
lea
inc
jae
cmc
test
mov
out
jnp
aas
mov
in
sti
ja
mov
xchg
pop
push
pop
xchg
ret
loop
add
jbe
mov
mov
shrl
or
sbb
popa
pop
int3
clc
call
sub
inc
xchg
fwait
cld
mov
dec
sub
mov
fwait
enter
inc
in
pop
and
addr16
pop
stc
cld
cmpl
std
aaa
and
push
ret
pop
stc
ficoml
aam
push
sub
mov
mov
sti
rol
aam
dec
or
test
aad
mov
cmp
fsubrs
sti
ja,pt
and
sbb
daa
ficomps
mov
mov
insb
lods
mov
aas
dec
mov
mov
or
push
inc
xor
xor
xchg
push
and
jge
xor
ds
xlat
add
xchg
jecxz
cmp
add
fstl
aad
jno
sub
pop
pop
pop
std
jl
js
es
aaa
pop
jno
mov
test
jno
fstps
sub
or
in
xchg
dec
mov
addb
jbe
mov
mov
push
dec
pop
mov
call
adc
cltd
push
inc
outsl
fmull
cltd
or
mov
cmpsl
icebp
out
insb
sahf
pushf
xor
inc
enter
adc
mov
adc
dec
xor
push
mov
divl
mov
sbbl
and
insb
stos
sbb
fiadds
push
mov
mov
add
xchg
inc
and
loopne
lret
aaa
imul
pop
aas
xor
lock
jne
rcrl
stos
ja
dec
addr16
cwtl
nop
fs
push
call
xor
mov
mov
mov
dec
jl
icebp
adc
push
jge
mov
enter
scas
mov
in
dec
adc
xchg
out
jle
out
inc
push
and
xchg
test
pop
insl
ss
pop
xchg
sahf
rcr
fnstcw
inc
mov
sub
out
mov
mov
movsl
insb
les
loop
orb
cmp
stc
scas
jg
mov
mov
jae
push
loopne
jno
outsb
push
fwait
inc
xchg
push
lods
jns
dec
notl
out
shrb
adc
test
sbb
xlat
and
xchg
js
mov
mov
roll
test
test
sub
daa
pop
ret
pop
sub
clc
or
xor
mov
je
dec
sub
aaa
scas
push
and
repz
and
dec
cmpl
xchg
out
sar
sbb
sbbb
cltd
mov
out
pop
adc
shlb
into
xchg
popa
shlb
jae
inc
icebp
or
mov
pop
outsl
dec
dec
cmp
insl
push
mov
mov
add
push
push
jge
popf
call
ficomps
pop
dec
outsl
lds
xor
aas
pop
push
pop
cs
pop
push
inc
sub
cmp
movsl
movsl
cmp
push
mov
push
inc
add
push
sti
int3
rorb
lock
movsl
xchg
mov
inc
cmpb
lcall
fucomip
fldcw
insl
and
mov
inc
aaa
shl
cmpsb
divb
sahf
xchg
mov
xchg
xor
inc
adc
fidivrs
int
les
nop
js
ret
std
leave
es
pop
test
mov
sbb
push
push
cmc
sub
fs
popa
je
push
push
mov
inc
and
xchg
cmp
scas
ljmp
fsubr
pop
mov
push
cmpsb
inc
daa
insl
lea
mov
dec
or
test
les
add
xor
fs
inc
add
mov
jle
cmp
nop
pop
ficoms
push
sub
cmp
pop
mov
fsubrp
sbb
nop
shll
addr16
lods
xchg
and
dec
inc
pop
pop
daa
inc
mov
adc
xor
arpl
out
lahf
mov
lahf
push
ficompl
jne
sbbl
testl
rdtsc
enter
jo
fstpl
xchg
stc
test
js
sub
loope
aam
fisubrs
aad
addl
pop
pop
loopne
push
icebp
sub
inc
int
cmp
or
outsb
mov
pop
jns
mov
sub
add
adc
ficomps
outsb
push
push
test
loopne
jmp
mov
mulb
push
or
pop
fnstcw
mov
jp
sbb
cmpb
ljmp
popf
and
movsl
add
dec
push
cld
adc
test
push
mov
sub
outsl
mov
repz
hlt
or
push
and
iret
leave
test
lcall
jbe
mov
jp
xchg
jmp
test
mov
testl
push
sub
sbb
ficomps
jo
and
push
ds
hlt
pop
push
test
out
dec
scas
cmp
add
add
pop
lcall
push
xchg
pop
pusha
add
mov
mov
outsb
test
out
rol
xchg
aaa
sbb
inc
leave
or
dec
mov
call
add
and
xor
xor
cs
cmp
scas
popf
imul
movsl
sub
in
fildl
out
frstor
into
push
fdivp
ficomps
mov
out
subl
push
jo
cld
inc
dec
xchg
pop
icebp
les
jl
ds
lods
push
lret
iret
sbb
sbb
daa
dec
lahf
sbb
dec
push
xchg
push
movsb
into
cmp
test
cmp
sbb
dec
and
jl
mov
and
popf
gs
in
lods
adc
or
sbbb
and
jno
mov
or
add
cmp
fwait
jae
jbe
cli
fstpl
pop
or
stc
aad
jne
mov
xchg
jmp
dec
xor
pop
addr16
xor
aad
popa
cmp
pop
or
pop
pop
fcompl
sbb
insb
mov
adc
xor
pop
test
loop
aam
and
push
jecxz
sub
dec
push
scas
scas
lahf
pop
faddl
mov
leave
ljmp
adc
daa
loopne
enter
das
call
loopne
add
insb
mov
mov
lret
cmpl
repz
sbb
push
mov
ds
stos
outsl
inc
enter
jnp
pusha
shrb
movsb
jle
pop
sub
movsl
mov
imul
addr16
inc
ret
and
rorl
pop
aaa
ret
dec
das
mov
push
jmp
jmp
movzbl
adc
lcall
popf
dec
adc
jmp
jo
lea
in
fs
aam
jge
hlt
aaa
cmp
xlat
sub
pushf
cmp
adcb
xor
mov
scas
jle
mov
scas
push
and
test
pushf
negb
push
mov
dec
inc
push
cmp
adc
hlt
maskmovq
divl
push
lods
and
pusha
andb
arpl
xor
mov
mov
call
jae
fdivs
movsl
jnp
jmp
shr
jne
sti
outsl
stc
inc
dec
cmp
idivb
or
int3
jp
push
cwtl
cli
shr
and
mov
sbb
or
in
cmp
mov
or
jb
xor
cmp
xor
imul
sub
adc
scas
push
xchg
mov
iret
iret
loopne
jg
gs
fisubrs
ds
inc
add
jns
icebp
push
enter
xor
sbb
aas
and
fimull
mov
cld
aaa
push
inc
inc
ljmp
test
in
xchg
push
jle
mov
sti
or
imul
sbb
out
frstor
lret
jns
insb
sub
and
add
into
adc
or
int3
pushf
dec
pop
push
jmp
cmpsb
sub
aad
inc
xchg
pop
xor
xchg
mov
jbe
mov
inc
xlat
loope
cmpsb
fstps
shlb
mov
mov
clc
inc
fs
lods
adc
push
xor
movsb
insb
dec
cmp
cwtl
xor
add
inc
sub
jle
cmp
sub
cmp
push
int
mov
shlb
cmp
sbb
fisubl
adc
clc
sub
outsl
jmp
test
mov
and
cs
dec
and
sbb
in
cmp
xchg
in
mov
lret
pop
adc
sbb
imul
andl
stc
mov
test
mov
xchg
push
fbld
adc
shl
insl
pop
mov
mov
or
dec
test
fs
popa
cmp
fbld
ljmp
push
jmp
push
and
sbb
cmp
pop
in
stc
mov
jnp
pop
addr16
in
stc
sbb
xor
push
rorb
hlt
shl
iret
wbinvd
int
jmp
sbb
mov
add
int
scas
inc
jge
xor
dec
outsb
xor
imul
outsb
xor
fucomip
ret
xchg
adc
push
pushf
sbbb
scas
test
and
xchg
mov
push
or
aas
mov
lret
popa
xor
mov
hlt
popf
sahf
push
call
jb
negb
in
xchg
inc
stos
mov
js
popf
test
add
orl
pushf
xor
push
xlat
and
mov
and
pop
mull
iret
arpl
ja
mov
popa
ljmp
mov
addr16
add
cmp
mov
subl
insb
mov
mov
int
mov
pop
mov
lds
ret
fdivrp
cmp
mov
pop
sub
mov
dec
fwait
imul
sbb
pop
jns
adc
sbb
push
out
inc
aam
sub
js
cmpl
and
cmc
push
mov
popf
mov
loope
mov
or
pusha
add
push
mull
aaa
stos
fdivr
pop
dec
cmpsb
negl
pop
xchg
stos
dec
enter
mov
jb
jae
and
xchg
xchg
mov
jno
xor
mov
fdivrl
adc
cmp
and
cmp
sub
and
jl
scas
fcom
xchg
jecxz
pop
int3
inc
pop
mov
jns
in
pop
outsl
pop
mov
ja
cmpl
in
mov
xlat
add
cmc
sbb
xor
and
mov
sub
push
xor
xchg
adc
adc
jne
pop
inc
ss
fs
and
dec
xchg
mov
inc
xlat
push
addl
xchg
pop
or
leave
test
movsb
in
mov
test
into
inc
push
xchg
stc
xchg
jp
mov
push
cwtl
xchg
or
push
push
or
jne
bound
insl
std
inc
inc
sub
int
xor
mov
cmp
movsl
mov
push
sub
and
mov
xchg
add
push
and
scas
fnstcw
das
push
cltd
mov
shrb
les
jo
lods
iret
xor
test
mov
dec
xor
mov
mov
push
mov
mov
mov
ljmp
js
lcall
xor
xchg
xor
iret
cli
cli
sbb
xchg
test
enter
jne
mov
jns
enter
in
push
and
adc
fidivs
and
jbe
cmp
adc
sub
mov
xchg
loop
or
jl
fndisi(8087
div
xchg
pop
jl
andb
push
jbe
pop
test
adc
aaa
mov
cmp
lods
xchg
test
add
ljmp
xor
mov
adc
cs
and
push
mov
sbb
daa
cmpsl
lods
add
mov
dec
mov
or
and
sbb
xchg
andl
cmp
push
addl
iret
sbb
add
xchg
xchg
popa
mov
cmp
int3
insb
sub
iret
notb
jp
jmp
sub
jmp
testl
daa
shl
cmp
ret
or
mov
add
into
fildl
xor
xchg
dec
insl
dec
sarb
xchg
aad
out
movsl
push
sub
adc
mov
or
add
add
mov
out
popa
lahf
xchg
fsubrl
pusha
pop
lahf
xchg
test
or
fsubrl
arpl
outsb
pop
mov
pushf
dec
outsl
mov
cld
lret
scas
xor
inc
jo
xchg
pop
bound
mov
jno
pop
jnp
addr16
les
adcl
dec
aam
aas
xchg
lock
inc
imul
mov
xor
rol
lds
jb
jecxz
inc
mov
jl
mov
mov
mov
sbb
xchg
pushf
adcb
scas
xchg
jecxz
cmp
mov
mov
dec
cmp
mov
aas
gs
loop
out
sub
mov
ja
stos
fldt
sbb
mov
bound
sub
mov
orl
sbb
mov
push
mov
mov
fmuls
sbb
outsl
cmp
adc
and
cmp
psllq
out
and
jne
lods
daa
sbb
es
mov
mov
mov
add
add
dec
jo
mov
adc
xor
dec
stos
cmp
inc
mov
cli
insb
or
jnp
lahf
test
and
xor
dec
xchg
jbe
cmp
out
add
dec
mov
sti
mov
cmp
cmp
cmp
cltd
and
nop
addr16
dec
cmp
test
cmp
mov
push
pop
cmp
mov
sub
sub
das
sbb
fwait
cmpsb
das
pop
fdivr
mov
mov
mov
sbb
sub
dec
ljmp
jbe
jno
sbb
outsl
mov
lahf
ror
sbb
pop
mov
jle
stos
push
out
mov
les
xchg
aas
xchg
addl
in
mov
pop
das
imul
aad
ficoms
setne
jmp
mov
mov
sti
or
mov
fldcw
xchg
sub
sbb
das
imul
fsubr
jae
xor
scas
lret
pusha
pop
ret
lock
pusha
popf
jg
repnz
pop
inc
mov
scas
cmp
cmp
shrb
pusha
std
rcrl
aas
sbb
outsl
mov
ficoms
les
and
lret
mov
adc
xor
stos
aaa
sbb
mov
je
scas
pushl
mov
fucomip
adc
jg
dec
mov
pushf
or
adc
mov
sbb
inc
arpl
and
stos
shlb
cmpsb
jle
out
mov
cmp
cmp
hlt
faddl
rcrl
dec
inc
fidivrl
xchg
and
sub
mov
sbb
shlb
xchg
mov
dec
mov
iret
adc
jle
push
cwtl
fwait
adc
out
dec
inc
lahf
push
dec
shl
add
hlt
sub
mov
adc
imul
push
shll
stos
pop
stos
aaa
and
sahf
xor
cs
data16
outsb
xchg
pop
push
dec
mov
push
vpor
xchg
into
jl
mov
add
mov
arpl
pop
mov
push
adcb
addr16
pop
imul
fistpl
mov
add
cmp
push
iret
adcl
pusha
adc
shlb
add
out
gs
mov
xlat
and
cmc
jb
jne
jge
stos
add
adc
jmp
and
mov
fwait
mov
adc
or
pop
lret
jne
mov
jl
lret
sbb
dec
add
test
loop
cwtl
pop
call
pop
mov
cmp
sub
jae
mov
pushf
dec
sahf
or
xchg
add
mov
cmp
jmp
shll
aad
mov
ss
adc
jae
mov
sub
jo
jns
cmp
fdivs
xor
jmp
call
inc
mov
icebp
or
jne
pop
cmp
push
pop
push
addr16
xchg
mov
sbb
test
dec
or
int3
int3
jge
dec
or
mov
push
mov
xlat
lahf
mov
lcall
cmp
xchg
lahf
lcall
sbb
gs
pop
jge
jge
push
outsb
adcb
call
or
jl
imul
xchg
repnz
xor
int3
adc
cli
xchg
loopne
sbb
mov
lea
jmp
mov
cmp
in
pop
cli
xor
mov
sti
sub
test
out
jnp
mov
fsubrl
subl
adc
das
xorl
movhps
int
xchg
pushf
scas
out
iretw
pop
cmp
iret
push
mov
inc
jne
or
lret
cmp
fidivs
push
call
push
lret
movsl
popf
xchg
mov
daa
in
lods
js,pn
sahf
pushf
test
mov
jge
ret
fsubrs
mov
aaa
les
shll
sub
push
jmp
xchg
adc
lods
daa
adc
mov
ret
pop
ret
mov
xchg
push
mov
xchg
sbb
push
dec
cld
cmp
js
dec
xchg
jnp
cmp
xchg
dec
xchg
dec
xor
mov
cs
shl
adc
sarl
loop
push
ljmp
xchg
out
push
insl
inc
cld
pusha
push
mov
mov
iret
inc
dec
dec
lret
xchg
sti
jae
loope
loopne
jae
mov
push
sub
sbb
sbb
mov
jge
inc
sub
cwtl
inc
dec
add
jmp
adc
sub
fidivl
jae
mov
sbb
jle
mov
mov
mov
jmp
mov
scas
jae
ret
add
sub
adc
nop
lods
test
and
push
jle
ja
jbe
and
sbb
cmp
xlat
pop
push
hlt
sbb
add
fmuls
sub
lret
in
mov
mov
ret
jne
insb
sub
inc
les
ss
in
mov
jecxz
sub
ret
outsl
cmp
lock
mov
dec
jge
jo
mov
outsl
pop
aam
jns
mov
push
adc
add
outsb
push
xchg
popa
push
loopne
jae
cmp
fsts
iret
mov
adc
jge
pushf
popf
stos
jle
lret
fisubrl
adc
jae
adc
out
stos
add
cmp
insb
stos
pop
push
mov
mov
fstps
cmp
xor
enter
pusha
jno
jecxz
push
lds
jge
pop
fnstcw
shll
lret
fcomps
mov
fdivr
sub
add
push
addr16
jl
sahf
dec
mov
dec
lret
addb
loope
push
push
mov
add
leave
and
inc
jns
sub
push
xchg
in
shl
pop
std
jmp
popf
pushf
xchg
insb
bound
testl
outsb
sti
or
out
jg
xchg
fcmovbe
or
out
in
add
push
popf
mov
sub
je
and
adc
call
or
cs
mov
and
inc
cmp
in
sbb
add
cmp
sahf
mov
cwtl
sbb
jbe
mov
mov
pop
pop
mov
lea
pop
or
mov
cmpsb
or
dec
pusha
xchg
mulb
and
cmpl
and
pusha
push
and
in
or
rcr
imul
jnp
std
mov
pop
adcb
iret
fwait
dec
aam
cmp
inc
sarb
mov
stos
pusha
incb
out
xor
add
add
or
int
xor
fiadds
int
pushf
xor
xlat
xor
mov
iret
int
or
push
pop
ja
cmpsb
int
add
leave
iret
xchg
lods
dec
stos
js
mov
out
mov
scas
aaa
les
bound
add
cmp
fists
nop
aas
or
sbb
jns
sub
pop
xchg
add
lea
mov
inc
xchg
xchg
mov
lret
cmpsl
mov
pop
jl
add
and
and
jo
pop
cmp
aad
out
bound
mov
dec
sub
and
adc
jo
inc
dec
add
mov
pop
pop
add
sub
icebp
jl
mov
xor
fwait
ljmp
push
sub
pop
repnz
mov
mov
sub
inc
repnz
jle
adc
cmc
cltd
adc
fs
and
inc
pop
adc
xor
inc
jbe
xor
cmp
ja
bound
into
xor
or
or
lock
lods
enter
add
pop
insl
test
into
dec
jno
fistl
jne
lods
push
aam
fwait
mov
repz
push
push
pop
test
push
popf
lock
cs
xchg
add
sbb
push
ret
mov
mov
jmp
adc
sub
adc
pop
or
out
xchg
cld
clc
xor
jg
sub
out
loope
dec
lods
rcl
std
push
pop
jl
fwait
add
push
fidivrs
mov
mov
fsubrs
sub
scas
jns
mov
and
jbe
call
ret
mov
insl
jne
jno
leave
adc
jmp
adcl
lods
pusha
lea
jbe
lds
jb
mov
push
push
inc
xor
rcr
mov
jo
mov
sahf
inc
inc
in
sub
mov
xchg
fildll
rcl
cmp
addb
je
xchg
dec
imul
bound
mov
aam
pop
cmp
jg
fisubs
jbe
xchg
mov
and
sub
stos
cld
mov
ljmp
in
fidivs
insb
pop
jae
idivb
inc
push
lahf
xor
mov
push
sahf
sub
roll
mov
add
push
xlat
loop
loop
or
ds
add
scas
sub
jne
add
sbb
add
imul
test
les
insl
ljmp
leave
push
int3
cmp
fnstcw
pop
inc
push
and
loop
xor
jne
insl
lds
frstor
cmp
das
mov
cwtl
sbb
jb
cmc
addr16
test
mov
repnz
xchg
cmp
movsl
pop
jae
lret
and
aas
cli
roll
mov
mull
sbb
jge
push
aas
add
dec
mov
clc
pop
mov
pop
stos
xor
xchg
int3
or
pop
ss
push
fistpll
xchg
push
outsl
pop
push
mov
test
loope
pop
cmp
inc
cmpsb
std
outsb
mov
inc
xor
loop
ret
ret
ret
iret
add
sbb
dec
mov
js
inc
adc
add
out
xor
daa
addr16
in
int3
pop
pop
cmp
sarl
roll
dec
mov
xor
jle
loop
test
mov
xchg
mov
les
sbb
test
dec
cmpsl
cwtl
xchg
jae
faddl
add
fs
andb
mov
mov
cmp
mov
jb
ja
lret
jbe
jnp
mov
adc
sbb
testb
jmp
xchg
stos
jle
mov
sbb
cmp
xchg
or
aad
into
inc
mov
in
fcompl
inc
push
mov
adc
adc
xchg
je
arpl
pop
mov
cli
jnp
jle
dec
lahf
cmp
addb
bound
repz
mov
pop
mov
sbb
dec
cmp
lret
sbb
ret
pusha
dec
xor
fcmovu
mov
aaa
loop
lret
cmpsb
ret
xor
clc
add
mov
push
int3
xor
in
dec
mov
fwait
dec
shlb
mov
xlat
jge
aad
xchg
mov
loopne
bound
xchg
pop
sar
mov
or
inc
add
leave
cld
cld
jle
imul
aad
jle
jae
lea
mov
push
lahf
or
xchg
mov
ja
les
xor
das
mov
xor
daa
sub
adc
call
movsb
fsub
mov
dec
cltd
mov
mov
sub
sub
push
mov
push
stc
shl
stc
mov
fsub
pop
mov
cmp
das
mov
insl
mov
popa
sarb
xchg
mov
add
sub
adc
mov
mov
out
int3
jmp
xor
daa
push
in
inc
sbb
pop
push
cwtl
add
push
cmpl
cmp
xchg
cmp
adc
sub
push
dec
inc
in
cmp
sub
jecxz
stc
in
int
loop
hlt
test
loop
xchg
or
inc
cmp
lcall
bound
sti
movsb
mov
mov
sbb
jae
jecxz
sub
addr16
adc
adc
mov
cmp
inc
mov
xchg
outsl
cmp
push
lcall
lret
push
aad
js
xor
jp
icebp
mov
pop
stc
lea
rol
mov
mov
xor
mov
insb
pop
push
adc
nop
xchg
xor
xchg
xchg
mov
mov
popa
adc
mov
xor
lods
or
fdivs
stc
xchg
mov
pop
enter
daa
cmpsb
shlb
pusha
jp
inc
mov
inc
push
mov
sbb
jno
mov
jne
arpl
inc
stc
mov
or
outsl
sbb
jnp
jmp
std
repnz
push
dec
mov
jae
fisubrs
jbe
dec
pop
sar
and
loope
out
dec
aaa
ss
and
enter
cmpsb
mov
outsb
pusha
sub
xchg
shr
mov
aas
sbb
test
popa
gs
jno
mov
inc
jmp
loop
jns
cmp
push
pusha
clc
gs
or
mov
and
xchg
lret
enter
fldl
xorb
fsts
dec
sub
sbb
add
xchg
push
shl
jbe
and
subb
cmpsb
mov
adcb
cwtl
inc
idivl
xchg
inc
mov
fsubrs
sub
dec
out
cmp
mov
ret
ficoml
push
or
dec
pop
adc
xchg
lret
cmp
in
push
push
or
scas
hlt
and
call
mov
and
mov
lret
sahf
adc
ficompl
call
outsb
cli
in
xor
in
shll
lods
jnp
inc
cmc
ja
jecxz
imul
xchg
stos
ret
pop
xor
push
mov
jo
inc
push
mov
dec
jae
addr16
add
xor
fldl
dec
ret
cmp
dec
jp
mov
xor
cltd
cmpsl
addb
test
dec
xchg
and
jl
je
popa
push
mov
and
mov
jbe
push
in
add
push
jecxz
jb
jge
mov
xchg
fs
jecxz
inc
sbb
or
inc
push
inc
push
jl
pushf
jo
call
mov
int3
jle
jge
pop
lods
ja,pn
dec
jp
jl
or
data16
insb
dec
adc
imul
inc
inc
push
mov
jbe
push
jp
xor
lcall
outsl
addr16
xchg
lret
pop
in
xor
pop
loop
mov
adc
rorl
sub
add
dec
xlat
ljmp
xchg
rclw
in
insb
pop
ficompl
xor
and
jbe
scas
rcrb
adc
sub
lahf
fs
xlat
das
loop
push
fmuls
and
sub
push
js
mov
addb
popa
adcb
out
out
pop
jge
shlb
push
pop
and
fs
dec
pop
stos
popf
fidivrl
push
mov
pop
inc
fmuls
sbb
adc
mov
xor
sbb
fs
les
dec
bnd
sbb
mov
pop
dec
pop
xorb
imul
mov
out
xchg
rolb
mov
jne
add
hlt
fsubrs
pop
xchg
cmpsb
mov
stc
bswap
cltd
arpl
jae
popf
popa
daa
mov
pop
loop
fisttpl
cmc
es
hlt
neg
jbe
in
repz
test
fistpll
and
hlt
sbb
jle
or
aam
rolb
aam
jno
cmp
push
mov
xchg
cmp
fisubrl
push
adcl
add
hlt
and
roll
mov
push
pop
ret
ficomps
push
and
push
fisttps
mov
adc
mov
jle
pop
push
pop
ja
xchg
jmp
icebp
imul
insl
and
cmc
sbb
push
sbbb
jge
cmp
test
cli
pusha
adc
xchg
pop
or
jmp
faddl
push
adc
fstl
mov
sub
push
orb
xchg
pop
or
cmp
lods
add
data16
xchg
stos
cmpb
lcall
mov
mov
push
adc
push
ror
sahf
push
cmc
les
lret
or
mov
insb
pop
call
xor
cmp
xchg
test
cltd
enter
js
int3
divps
shlb
dec
adc
jne
ret
pop
dec
xorb
icebp
ror
mov
cmpsb
dec
cld
std
test
mov
lods
add
adc
jmp
and
dec
cltd
popa
pop
add
xchg
pop
imulb
adc
ljmp
and
add
cmp
mov
adc
cmp
movsb
push
pusha
lret
dec
enter
addr16
sbb
adcl
lock
xor
inc
jmp
cwtl
out
mov
inc
jle
mov
leavew
out
loop
sbb
and
dec
adc
repz
call
xor
dec
stos
mov
addr16
mov
or
sbb
lret
cmp
push
sub
dec
clc
jb
in
push
or
push
sbb
enter
cmc
mov
jbe
jnp
lahf
cltd
add
imul
mov
pop
dec
mov
rorb
js
push
stc
movsb
test
push
out
mov
shl
dec
cmc
popl
mov
mov
pop
push
and
inc
inc
aaa
repz
xchg
dec
xor
mov
jbe
movsl
sbb
icebp
pop
xchg
loop
add
repz
inc
xchg
scas
out
aaa
sub
cmp
cltd
mov
jmp
sub
shl
cmp
pop
dec
test
dec
pop
imull
pop
std
loope
pop
xchg
cmpsl
xlat
jmp
add
cmpsb
jp
vhaddpd
pop
imul
pop
out
shl
aaa
mov
mov
scas
add
aas
sub
inc
mov
or
pop
js
scas
sbb
mov
loopne
jae
out
fsubrl
sub
push
jbe
xor
rcrb
mov
sub
xchg
subl
push
push
inc
mov
in
lods
xchg
mov
sbb
in
jecxz
out
sbb
add
iret
jecxz
mov
pop
xor
add
fistpl
adc
ljmp
inc
xchg
lret
fnstsw
mov
cli
pop
out
test
mov
mov
and
nop
and
jnp
mov
jne
xor
sbb
inc
jae
into
pop
dec
mov
inc
mov
addr16
cmp
in
lds
cmp
out
xchg
push
sbb
cmp
lock
adc
pop
in
mov
data16
cmpsb
fsubl
dec
stos
stos
push
push
lahf
sbb
cmpsl
mov
loope
cmpsb
push
jmp
call
or
sub
mov
mov
outsl
push
clc
loop
outsb
fwait
push
rolb
and
inc
jo
stc
addl
bound
xchg
sbb
int3
and
sub
xor
adc
rorl
xchg
push
jmp
xchg
jp
and
cs
mov
loop
lods
push
fisubrl
mov
mov
xchg
cmc
in
mov
mov
insb
jecxz
xchg
fistpl
mov
add
lretw
jge
imul
fucom
pop
insb
xchg
xchg
pop
lret
or
mov
insb
lods
test
mov
pop
pop
mov
pushf
or
adc
and
das
hlt
fildll
arpl
icebp
jl
in
popa
xchg
jnp
stc
mov
cmp
inc
mov
adc
sbb
and
out
add
mov
inc
idivb
lahf
xacquire
ret
movsl
rorb
rol
shlb
mov
lods
sti
sahf
pop
movsb
mov
inc
mov
loope
push
adc
shll
xlat
mov
imul
cld
cli
dec
xchg
jbe
lock
ret
sti
cmp
js
mov
test
pop
movsb
movsb
sbb
sbb
jbe
xchg
sbb
adc
pop
scas
mov
push
pop
mov
adc
pop
push
jl
test
fwait
enter
sbb
mov
mov
cltd
lock
es
and
xchg
fcomps
adc
pop
xor
rcl
out
mov
xchg
dec
enter
mov
fcmovb
cmp
lods
adc
jle
xchg
cmp
mov
xchg
cmp
fsubp
test
fistpl
dec
dec
mov
repz
outsl
call
sbb
jno
xor
xor
push
push
and
mov
jl
shrb
adc
imul
xchg
adcb
repz
adc
loop
mov
inc
xor
push
orb
mov
xchg
pusha
dec
in
and
pop
stos
popa
cltd
movsb
mov
xchg
xchg
sti
ljmp
fistl
fisubrs
icebp
aad
popf
int3
bound
jo
adc
or
jno
jne
loopne
insl
add
sbb
jg
aad
mov
sub
xor
shr
and
jb
push
cli
ljmp
adc
ja
cmp
mov
add
dec
jns
mov
rcr
xorl
movsl
test
jmp
ret
movsb
mov
dec
dec
sub
pushf
mov
leave
ss
push
subl
sub
sbb
pop
scas
pop
neg
mov
lock
aad
das
out
insb
jno
mov
fcompl
imul
adc
lea
daa
pushw
loope
jmp
mov
out
mov
lsl
iret
cmp
mov
in
dec
adc
push
sub
xchg
cmp
iret
push
mov
rorb
idivb
mov
mov
flds
mov
pop
inc
jo
add
sub
ljmp
out
mov
add
jae
push
mov
aas
mov
testl
test
sub
addr16
cltd
sbb
gs
sti
pop
call
inc
sahf
mov
insb
leave
rolb
nop
fwait
cmp
sbb
cltd
push
in
push
adc
cli
fimull
mov
and
xchg
lret
in
mov
pusha
int3
xor
push
sti
add
adc
jno
pop
mov
testl
mov
test
push
int3
jge
jae
mov
mov
test
fwait
stc
and
scas
sub
sar
in
enter
ja
pop
ret
or
or
push
add
mov
pop
mov
or
fistpl
jb
lahf
mov
repz
jecxz
adc
inc
je
pop
stc
fs
cmp
push
push
cltd
in
xor
mov
mov
je
idiv
lods
in
push
push
mov
stc
ja
movsb
in
lods
popf
shrb
jle
out
sub
popf
or
sub
ja
push
dec
mov
loop
jno
mov
ret
loopne
call
xlat
pop
cld
ds
aaa
mov
sub
xchg
mov
xchg
xor
ss
inc
int
dec
ss
out
push
test
push
xor
pop
pop
ja
sub
xor
std
xor
int
mov
adc
xchg
sti
shll
dec
jecxz
fdivrs
repz
sub
outsb
bound
insb
cmp
jecxz
hlt
in
popa
jns
dec
lods
xchg
sub
iret
cmp
popa
xor
mov
push
and
and
and
leave
inc
test
xor
cmp
mov
pop
jl
stc
test
inc
pop
pusha
les
lods
sahf
push
ret
pop
imul
andb
add
dec
or
mov
jbe
test
or
adc
xchg
jnp
clc
sub
dec
aaa
cmc
adc
cmp
out
stc
cmpsb
pushl
and
xor
mov
inc
adc
fiaddl
out
ss
sub
adc
sahf
ss
pop
xchg
sub
xlat
mov
pop
ljmp
pop
pushf
xchg
inc
fdivr
insb
push
sbb
jg
inc
lcall
lahf
fidivrl
in
imulb
lods
inc
xor
push
clc
cmp
mov
pop
loop
cwtl
mov
cmc
inc
adc
adc
sub
insb
xor
mov
sbb
insb
sub
cmp
les
inc
negb
mov
scas
mov
sub
imul
lock
ret
test
mov
cmp
out
xchg
xchg
pop
scas
inc
cmp
xchg
fdivs
out
inc
push
outsl
inc
pop
xchg
lahf
inc
inc
stos
mov
xchg
test
mov
or
cs
push
inc
popa
push
fidivs
push
cmp
stos
jecxz
jg
out
dec
out
push
push
scas
imull
fcmove
xor
pop
loope
sub
das
push
aad
and
add
push
fs
or
scas
pop
dec
push
scas
sbbl
pop
rclb
mov
adc
mov
adc
mov
out
and
test
test
dec
inc
or
addr16
lret
sbb
mov
testb
sub
int
repz
push
nop
addb
cs
mov
fs
mov
xor
stos
mov
pop
shll
dec
notl
sbb
cmp
in
sub
xchg
fucomi
cmp
clc
or
jno
rcrl
and
daa
jge
test
adc
mov
push
mov
sbb
arpl
roll
pop
and
adc
ss
ret
aam
xchg
test
inc
xor
xlat
mov
pop
mov
add
push
aam
ret
outsb
ljmp
cmc
test
adc
loopne
outsb
in
call
pop
and
repnz
shrl
or
xchg
sub
xchg
fnstenv
js
add
lods
sti
pop
cmpb
mov
ret
mov
ja
jno
adc
in
mov
xchg
pop
cltd
mov
rcl
popa
and
ret
pushf
lock
imull
sahf
idivb
xchg
iret
xor
sbb
sub
shlb
pusha
push
fbstp
pop
mov
mov
pushf
pop
push
cmp
add
ret
popf
int
push
add
orl
mov
mov
arpl
daa
add
mov
push
pushl
test
xchg
xor
popa
xchg
ret
hlt
adc
xchg
xchg
call
sub
rorb
nop
inc
mov
fs
mov
loopne
push
es
mov
xor
imul
push
leave
jne
cld
cmp
push
ret
cld
jnp
icebp
lock
pop
adc
popa
loopne
jle
jnp
sbb
ss
std
add
shll
xor
dec
adc
mov
xchg
add
loop
pop
fs
pop
sbb
xchg
push
xlat
xor
shll
call
aad
mov
lea
jns
je
mov
gs
push
sbb
lds
pop
jle
repnz
call
rorb
lret
ss
outsb
inc
shlb
mov
sub
sub
mov
xor
xor
push
xor
loopne
inc
push
fwait
hlt
lods
xchg
mov
iret
sahf
sti
ret
adc
jnp
dec
dec
or
mov
xor
xor
orl
mov
and
inc
inc
mulb
ss
fimuls
add
mov
lods
and
push
adc
jbe
es
pop
aam
adc
mov
inc
jecxz
lret
cmpsb
imul
test
inc
mov
lret
test
repnz
insl
repnz
xchg
int3
lcall
xor
outsl
sahf
movsb
sub
mov
stc
in
insb
bsr
xchg
cld
jecxz
sbb
and
outsl
popa
leave
and
push
loopne
xchg
cltd
mov
inc
iret
test
lcall
pop
cmp
and
pop
out
pushf
pop
jae
mov
lret
mov
jbe
testb
les
add
cmpsb
push
out
or
inc
dec
cli
mov
stc
movsb
pop
sbbl
push
push
push
movsb
inc
cltd
mov
iret
jno
lahf
pop
repnz
repz
es
in
and
flds
movsb
jl
adc
inc
mov
adc
cmpsl
cli
testb
push
xchg
push
ss
jae
loop
add
cli
in
dec
mov
pop
popa
or
push
add
or
insl
xchg
lret
add
filds
cs
ljmp
fwait
xchg
pop
pop
out
lods
sub
stos
outsl
aaa
mov
inc
daa
jmp
es
cld
pusha
add
xor
pop
pop
sbb
cmpsb
mov
repz
lahf
out
cmpsb
xor
mov
push
shrb
stos
cwtl
shrl
loopne
or
mov
fs
jns
jl
push
inc
sub
mov
repnz
int
or
bound
cmp
jecxz
mov
dec
cmc
xor
call
and
sub
fstl
sub
stos
inc
pop
stos
out
aaa
sub
pop
xchg
or
insl
mov
out
xor
mov
mov
cmp
push
mov
arpl
in
sbb
test
mov
xchg
jp
imul
les
sar
xchg
mov
loopne
subl
int3
mov
lds
dec
rcll
pusha
pop
cmpb
repnz
movsb
mov
xor
std
aam
jmp
fdivrl
std
scas
sbb
push
fwait
xchg
jmp
in
and
in
movsb
lods
lock
adc
pop
imul
or
sbb
dec
mov
cld
xchg
fs
dec
movsl
mov
or
fs
fdivrl
or
sarb
mov
aam
jmp
int3
in
fildl
mov
mov
xchg
out
mov
test
pop
leave
push
aad
popf
enter
push
cmp
je
cmp
imul
mulb
xchg
sub
mov
dec
push
comiss
cmp
jp
fistpl
jmp
jns
mov
xor
bound
mov
push
lds
bound
loop
adc
mulb
mov
jmp
icebp
mov
sub
lret
dec
inc
pop
jns
jmp
mov
inc
outsl
or
xchg
or
jg
inc
cmp
jmp
jg
add
inc
xor
cltd
out
jne
dec
mov
shll
push
mov
scas
shl
lahf
sahf
loop
jb
cld
add
xchg
lods
scas
adc
xchg
and
stc
push
out
hlt
or
das
push
inc
sbb
cmpsl
sbb
pop
and
sti
mov
xchg
add
and
ss
xchg
sub
nop
pop
lret
data16
jnp
xchg
jbe
pop
mov
sbb
in
cld
jb
rol
dec
scas
adc
mov
inc
ljmp
sbb
mov
outsb
cmp
xor
xor
mov
xor
inc
adc
push
jge
cmpsl
test
push
rorl
cmp
sbb
xchg
mov
inc
cs
sahf
loop
lahf
ja
sub
rclb
sbb
loop
test
cs
movl
sub
inc
sub
sbb
lea
sub
loop
inc
pusha
sbb
xchg
jge
sub
mov
leave
pop
and
inc
cli
add
add
inc
dec
mov
cli
pop
push
jl
sbb
xchg
inc
lret
sgdtl
xchg
adc
mov
xchg
or
std
sbb
stos
fstpl
xchg
inc
lcall
mov
test
ja
xor
pop
lcall
push
std
push
outsb
cmp
lods
adc
sti
repnz
xchg
fisubl
jmp
push
inc
push
cmp
sbb
xchg
jmp
sbb
sbb
or
push
mov
or
test
mov
push
and
xor
cmp
lea
and
faddp
fdivs
aam
das
xor
inc
data16
mov
clc
divl
test
adc
fadds
pop
xchg
xor
sbb
scas
test
push
pop
mov
out
inc
and
adc
push
int3
sbb
es
cld
cli
jl
fisubrl
fstpl
or
push
mov
fsub
jnp,pn
data16
ret
iret
jbe
cs
inc
sub
mov
cltd
lds
ds
dec
jecxz
aad
cmp
test
scas
xchg
adc
sbb
enter
mov
sub
fildll
pop
str
imul
call
sub
fcoms
jp
shl
sahf
cmp
ds
notl
jae
subl
das
push
xchg
addr16
repz
cmc
adc
sbb
add
test
add
dec
xchg
mov
xchg
mov
lcall
cmp
dec
cmp
mov
push
adcb
sbb
dec
std
jmp
push
inc
js
xor
scas
mov
jo
shr
sbb
in
xchg
adc
inc
out
test
cmp
mov
cmpsl
xor
cs
sbb
inc
or
xchg
popf
sub
sbb
dec
popa
stos
je
mov
pop
mov
jmp
push
ret
cli
mov
inc
cmp
loopne
pop
fnstsw
ds
out
mov
mov
aad
mov
push
incl
out
fcompl
cld
add
and
and
cmp
popa
cmp
mov
cmp
dec
inc
insb
call
or
and
repz
add
pop
add
mov
dec
dec
jle
into
icebp
or
bound
or
cmp
pop
xchg
adc
ret
and
inc
and
mov
pop
loop
mov
loop
leave
stos
mov
cmp
aaa
lcall
imul
mov
dec
testl
jp
lret
loopne
inc
popf
subl
in
fs
inc
cmp
inc
shrb
mov
in
xchg
jne
pop
cmpsl
pop
push
add
std
into
subl
movb
cltd
pop
scas
lock
mov
mov
mov
lea
inc
into
mov
adc
sub
gs
ror
mov
mov
and
aad
jo
sub
jl
cmpsl
sub
in
or
jb
loop
in
in
jle
dec
mov
push
cmp
dec
and
jnp
inc
cwtl
jns
stc
out
dec
stos
pop
test
imul
dec
aad
loopne
scas
andl
lahf
xchg
push
mov
sbb
sbb
mov
inc
adc
cltd
dec
mov
adc
jl
pop
or
mov
std
sbb
enter
jb
jb
cmc
andb
pop
jl
sbb
int
insb
scas
fidivrl
adc
lods
in
fstps
das
mov
fs
ret
out
ds
pop
ss
ficoml
cld
and
inc
rorl
stos
inc
push
test
ret
aaa
sar
and
inc
subb
sti
dec
and
and
hlt
jge
pop
jbe
test
pop
or
jle
dec
enter
push
xor
jne
or
les
mov
adc
cmp
sbb
inc
andl
jmp
xlat
mov
fsubr
arpl
xor
cmp
mov
inc
pop
ss
orb
stos
and
mov
outsb
ret
cmp
es
shr
cmp
test
sub
sbb
fs
mov
ss
repz
push
xor
inc
ljmp
dec
rclb
stos
mov
mov
push
jo
iret
je
sahf
repnz
gs
mov
jb
stc
hlt
gs
enter
fisttps
int
mov
push
xchg
pop
or
push
test
push
mov
sarl
arpl
orl
sti
cmp
push
or
loop
jge
mov
rcrl
push
rclb
mov
push
scas
in
arpl
sbb
mov
imul
pushf
jl
and
inc
idivb
cmpsl
test
xlat
dec
mov
icebp
and
pop
call
rol
mov
mov
sbb
iret
int
sub
dec
push
insb
xor
and
addr16
mov
jg
int3
aas
imul
sarb
inc
in
fcomp
adc
inc
fcmovnbe
sbb
je
loopne
mov
xlat
jmp
orl
and
imul
test
imull
xchg
mov
fwait
iret
je
mov
fninit
call
cmp
push
inc
out
adc
andl
sub
and
pop
xchg
fmull
cltd
rcl
push
jnp
adc
inc
xor
aaa
and
repz
and
jae
mov
xchg
mov
shll
cmpsb
jp
push
sub
inc
mov
xchg
adc
jmp
adc
push
and
push
cmpl
shlb
test
dec
addl
iret
jo
and
arpl
sbb
adc
jbe
jp
mov
mov
ss
in
and
lret
out
or
out
mov
sahf
pop
jo
in
cmpl
rcrl
mov
and
test
push
sbb
xor
cmp
lret
xchg
mov
jns
dec
lret
out
cmpsb
stos
lods
jp
mov
popa
push
jecxz
rorb
jb
mov
add
imul
sbb
repz
push
ret
cmp
ret
out
mov
xor
push
xorl
andb
outsb
cmp
inc
or
orl
nop
sub
popf
js
lret
lds
xor
ret
loop
lret
mov
enter
popa
dec
movsl
xchg
xor
out
aaa
fisubs
jecxz
cs
xor
ljmp
lock
mov
andb
int3
mull
cli
push
sub
shll
dec
mov
leave
mov
ss
mov
adc
pop
cmp
in
ret
fnstenv
cmpsb
push
frstor
dec
es
cmp
aam
leave
nop
or
stos
clc
lods
dec
jae
sbb
jge
sub
pop
mov
sub
inc
inc
pop
sahf
adc
pop
cli
clc
in
add
rclb
xchg
test
mov
lea
loope
iret
in
sub
nop
xchg
sahf
addr16
push
add
addr16
cmp
jl
adc
ror
sahf
or
das
mov
sbb
jnp
sbb
scas
cmp
push
in
mov
dec
neg
xchg
popf
roll
sbb
pop
xchg
ss
aad
push
mov
mov
popf
pop
jmp
or
jg
lahf
lods
pop
mov
sbb
cld
mov
xchg
mov
mov
loop
add
jo
mov
pushf
leave
dec
lods
xchg
or
push
push
mov
mov
test
mov
fisubl
and
sub
sub
mov
stc
add
mov
lret
xchg
loopne
icebp
fistpl
rcrl
pop
xor
push
xchg
push
repnz
popa
pop
or
pop
xorb
add
add
dec
jmp
ss
pushw
pop
jg
fimull
lods
std
push
pop
add
push
pushf
lret
popa
ret
nop
cmp
aam
stos
push
das
cmpsl
xor
insb
ret
pop
daa
cmpsl
mov
or
jg
loope
pop
addr16
enter
add
jp
push
test
sbb
addr16
divb
clc
repz
xor
fidivrl
mov
testb
and
and
ljmp
sub
jmp
or
jmp
push
add
mov
xor
aam
add
ret
fstpt
mov
fxch
sbb
or
clc
cli
xchg
add
or
mov
stc
pop
imulb
js
nop
fdiv
xor
bound
mov
cmp
loop
and
fwait
and
push
je
mov
adc
inc
test
ss
jecxz
fstpt
adc
xchg
ret
or
adc
out
cmp
stc
shl
mov
loopne
icebp
rcrl
sub
push
movsl
xor
pop
mov
push
out
pop
lods
jecxz
mov
push
nopl
lahf
jle
jl,pt
dec
inc
into
pop
xchg
cmp
jl
inc
mov
out
vpminsw
jo
xor
addr16
mov
dec
jne
mov
rcr
mov
mov
adc
push
popf
jmp
movsb
dec
fisttpll
jno
je
nop
pusha
sub
xor
cmc
mov
push
cwtl
popf
out
adc
ret
ja
mov
and
lcall
fcompl
mov
bnd
fiaddl
push
cmp
mov
xchg
ds
xorl
mov
test
or
mov
inc
push
mov
loop
xchg
addr16
cmp
stc
in
sahf
pop
popa
dec
jecxz
lock
mov
inc
adc
jnp
aas
jbe
sbb
and
stos
pop
aaa
les
mov
addr16
jp
dec
jbe
rcll
pop
arpl
fisttpll
aad
loop
insb
mov
pop
in
bound
adc
mov
js
mov
sub
out
push
push
sbb
stc
jbe
pop
lcall
inc
push
pushf
leave
push
jno
mov
push
mov
adc
push
lods
add
xchg
out
int3
and
repnz
mov
push
cmp
mov
pop
fisttpll
sub
mov
mov
popf
mov
dec
cli
ljmp
and
lret
popf
push
mov
lea
add
push
lock
adc
dec
jbe
jns
jb
shl
les
add
xor
call
pop
repz
jo
mov
or
subl
ja
xchg
enter
movsl
shrl
repnz
sub
stos
enter
pusha
lret
jle
negl
pusha
pop
push
or
dec
mov
mov
push
push
jbe
xchg
loop
push
xchg
cmp
cs
cmp
push
pop
xor
hlt
int
push
les
xor
jp
lahf
mov
push
cwtl
xor
pushf
lcall
mov
push
mov
pusha
into
and
repz
mov
adc
xchg
insb
or
push
push
sbb
jae
mov
jo
rclb
repz
lahf
cmp
or
xlat
mov
int
mov
add
cmp
pop
and
push
jbe
mov
popa
adc
jmp
cwtl
in
or
test
xor
or
ret
cmp
int
or
fadds
sub
or
and
mov
xchg
les
sub
icebp
mov
outsl
cli
xor
ret
das
pop
mov
shrb
cmpsl
pop
icebp
and
inc
les
push
imul
pop
jo
mov
aas
add
out
mov
cmp
mov
or
and
loopne
dec
aam
and
ret
imul
sti
mov
lea
cmc
push
int
sbb
pop
movsb
dec
sbb
jecxz
push
jg
std
ds
aad
nop
sub
pop
repz
cmc
sub
aaa
test
aaa
sbb
fists
sbb
ljmp
mov
jle,pn
roll
stos
out
fimull
dec
sub
in
js
dec
xorb
dec
push
mov
iret
add
jl
mov
aam
scas
xchg
pop
xchg
insl
mov
arpl
jbe
xchg
mov
into
add
sub
shll
cmpsb
scas
sbb
push
mov
aam
inc
inc
dec
mov
insl
jo
ret
addr16
insl
sub
icebp
lret
jno
adc
inc
cwtl
pop
scas
jne
xchg
nop
or
fs
hlt
movsb
and
pop
push
mov
out
mov
loope
jmp
inc
inc
arpl
out
push
xchg
push
nop
into
xchg
fcomip
into
pop
xchg
lock
lahf
inc
enter
dec
icebp
imul
test
or
jmp
sub
gs
orb
ret
sub
or
loopne
lock
movsb
mov
inc
jo
pop
popf
fsub
xor
inc
movsb
or
mov
jl
out
and
pop
lahf
movsb
pop
mov
shlb
pop
push
and
cmpsb
mov
cli
add
test
xchg
int
stos
xlat
clc
push
fwait
inc
mov
popa
in
rclb
fdivl
sbb
stos
fwait
pushf
dec
jmp
cmova
fnstenv
add
outsl
pop
mov
out
sub
adc
dec
fidivl
hlt
xchg
cmpsl
movsb
xchg
dec
cli
sbb
test
icebp
daa
in
push
cmp
scas
insb
mov
sbb
mov
inc
aas
adc
out
sub
and
nop
adc
xor
mov
jge
push
addr16
jmp
mov
lods
mov
sbb
push
mov
jae
fildll
fdivl
pop
enter
into
es
inc
xor
mov
ljmp
mov
test
imul
in
aad
test
xor
sub
inc
data16
aad
mov
mov
addr16
fistpll
mov
mov
cmp
dec
mov
les
pop
ja
cmp
mov
dec
cpuid
sub
jbe
outsl
sub
shrl
aas
nop
jle
pop
cmp
push
insb
dec
mov
xchg
in
popf
cmc
dec
add
jp
clc
mov
in
mov
cmc
scas
xchg
xor
aam
sbb
inc
jl
add
call
sbb
jg
push
mov
or
inc
xor
movsl
inc
adc
dec
cmp
xchg
push
and
push
ds
in
imul
dec
es
mov
xor
pop
pop
std
clc
fdivl
gs
mov
bound
jg
sub
add
dec
sbb
xchg
xor
dec
inc
jl
mov
sub
sbb
les
mov
sbb
push
cmp
dec
test
lods
shll
sbbl
push
inc
out
in
hlt
or
push
push
in
hlt
pop
loopne
loop
push
andl
add
hlt
fistl
dec
icebp
push
arpl
dec
inc
and
imul
mov
pop
inc
add
pop
loopne
mov
pop
xchg
jae
mov
add
xchg
add
out
fidivs
mov
int3
xchg
mov
test
xor
lea
std
stos
pop
xchg
negl
mov
inc
pusha
jge
add
mov
jmp
leave
xchg
inc
stos
xchg
mov
pop
sbb
inc
es
sub
ret
cmpsl
dec
and
fwait
jo
or
xchg
mov
ds
lcall
loope
ficoml
add
ds
push
adc
idiv
mov
stos
test
push
std
pop
sub
pop
mov
dec
test
jb
xchg
pop
stos
mov
sub
jno
clc
ret
imul
add
jle
xorl
les
xchg
cmp
out
sbb
mov
out
js
sbb
outsl
fsubs
scas
sub
or
psllw
mov
jge
sarl
jl
rclb
das
imul
mov
ds
mov
lcall
mov
ja
jbe
sub
scas
call
inc
xor
add
xchg
rcpps
loope
mov
ret
add
cmp
or
rcr
lret
xchg
mov
shlb
or
rcll
jmp
cli
notb
mov
lods
push
mov
outsl
cmpsb
push
arpl
or
jae
add
pop
jl
scas
lret
inc
orl
imul
cmp
pop
mov
jbe
sub
test
fs
js
xchg
addb
xor
add
mov
sbb
out
sub
scas
lods
jb
mov
pop
loope
and
cmp
outsl
dec
loop
push
or
bound
js
sub
outsb
test
xor
test
lods
pushf
repz
lock
xchg
inc
popa
xchg
lock
popa
xchg
int
sub
jg
mov
test
imul
mov
lret
inc
jns
mov
adc
pusha
xor
lcall
sub
inc
pop
xlat
leave
stos
aaa
aam
add
jb
rcll
xchg
fxch
les
bound
cmp
out
cli
in
clc
xchg
movsl
xchg
lret
xor
push
js
fmuls
jbe
pop
ret
push
xchg
std
pop
inc
jmp
pop
das
movsb
mov
cmc
mov
push
in
fstps
xorl
lods
fsubrp
ja
inc
inc
shrl
sbb
cmpb
mov
push
jge
dec
andb
mov
icebp
movsb
jg
adc
cli
clc
sub
sub
iret
mov
rcll
gs
xchg
jnp
cmp
out
daa
xchg
xor
cli
xchg
jbe
cmpl
loopne
pop
xchg
push
mov
arpl
sub
fs
mov
sahf
mov
and
rcrb
jl
xchg
faddl
imul
cmp
insb
mov
and
pop
add
call
pop
adc
mov
xchg
jmp
cwtl
mov
int3
inc
insl
adc
push
jge
bound
mov
inc
sarb
loope
test
out
xchg
cmpsb
test
mov
inc
or
mov
xchg
mov
push
sub
in
hlt
mov
aaa
repz
in
pushf
enter
idivb
cmp
aad
jne
mov
enter
call
sbb
into
dec
mov
mov
dec
jecxz
aaa
aas
test
xor
sbb
popf
inc
sub
or
shl
leave
insl
flds
dec
sahf
shlb
and
outsl
inc
insl
sub
lods
mov
jmp
lret
sbb
hlt
sub
add
int
push
mov
sbb
in
or
ficoms
dec
mov
mov
pop
xchg
xchg
lahf
mov
push
mov
xor
xor
mov
xor
test
shll
aas
mov
dec
adc
sub
subl
ljmp
jns
shr
mov
sub
fnstsw
mov
xor
lret
call
push
lods
test
pusha
pop
rcrl
loop
sub
rcl
push
aam
cwtl
ja
pop
loop
pop
movsl
jmp
cmp
mov
pop
fwait
pop
push
xor
outsl
lret
sub
jae
sbb
sub
sbb
xor
dec
cmpxchg
add
adc
movsl
pushf
xor
out
add
add
sub
out
std
ds
dec
push
xor
xlat
push
mov
cltd
cmp
cld
dec
adc
dec
fnsave
cmp
sub
or
aam
daa
and
repz
adc
xor
cmp
loop
ret
dec
fimull
mov
sti
cmp
mov
in
mov
and
out
sahf
lret
enter
pop
dec
fimull
fs
outsb
aas
fwait
cmp
addr16
inc
ljmp
rol
mov
cmp
daa
mov
mov
mov
pslld
mov
fdivp
push
mov
xor
cmc
ret
out
sar
js
push
fstpt
test
mov
or
cwtl
out
push
adc
pushf
out
scas
std
bound
xor
repnz
in
outsb
ljmp
fidivl
stos
cwtl
pop
insb
dec
adc
jns
ljmp
push
pop
jnp
je
scas
jo
out
dec
fistpl
jecxz
add
lods
and
mov
cwtl
jecxz
push
fs
ja
xchg
ror
test
xor
in
lods
aad
lock
or
mov
icebp
test
xchg
or
jnp
repnz
lds
sbb
sbb
rcrb
pop
fcomps
js
fnstenv
and
mov
push
push
adc
dec
ljmp
push
and
insl
scas
sbb
mov
es
mov
mov
jnp
icebp
push
inc
out
xchg
or
xchg
popf
push
push
push
pop
adc
inc
push
testl
call
test
in
push
and
push
mulb
push
jmp
mov
in
jg
insb
add
shll
fistl
add
adc
lods
sbb
daa
sahf
jle
inc
fildl
nopl
mov
out
jmp
jns
and
movsl
fstps
sub
test
movsl
daa
orl
das
inc
fwait
repz
sahf
out
setle
lds
mov
mov
push
xchg
and
ret
sarl
xor
cmp
cmp
adc
pop
add
sbb
pop
and
push
pushf
jbe
mov
ljmp
mov
insb
jae
push
sarb
dec
addr16
add
mov
cli
mov
divps
mov
pop
test
scas
in
inc
fsts
dec
pop
inc
jne
js
cwtl
jns
and
lds
or
push
push
mov
faddl
loope
jg
pop
add
pop
out
xchg
push
clc
xor
movsl
insb
dec
enter
scas
cld
xchg
dec
xor
push
xchg
push
and
es
dec
mov
dec
fs
xchg
cwtl
mov
cmp
stc
ret
ljmp
rclb
je
inc
les
dec
lahf
in
dec
mov
sub
leave
stos
xchg
out
pop
push
fs
mov
jl
out
js
repnz
lock
sbb
sub
adc
setl
in
jne
cs
test
mov
int3
gs
xor
test
push
loope
push
mov
mov
push
mov
repz
pop
insl
mov
pop
mov
test
xor
fwait
mov
cs
insl
js
xchg
enter
dec
das
sbb
mov
dec
jp
fnstsw
in
out
mov
dec
sbb
sbb
stos
adcl
test
mov
cs
mov
mov
idivl
daa
add
sbb
or
inc
fdivl
inc
fs
and
inc
leave
bound
mov
popf
in
xchg
xchg
pop
aaa
adc
pop
adc
mov
sbb
or
sarb
ds
lock
fimuls
rcll
xchg
cs
cmp
xor
add
es
sbb
fdivl
dec
ficomps
jp
push
pop
jae
inc
xor
icebp
insl
push
fisubrl
xchg
fmuls
lret
ljmp
std
iret
xor
test
pand
movl
test
inc
inc
xchg
push
xchg
or
push
roll
in
lret
lea
call
test
sti
loopne
mov
xor
fimull
dec
shrb
out
js
lahf
enter
push
out
jo
mov
stc
push
out
dec
scas
ds
adc
mov
fbstp
and
add
jo
imul
xchg
jb
clc
sub
add
out
orl
out
xor
test
jns
imul
fisttps
call
adc
out
popa
testl
pop
or
xlat
adc
push
imul
xor
insb
lods
test
sbb
data16
testl
xor
mov
imul
sub
lock
add
adc
jb
loop
nop
inc
jb
gs
stos
fnstsw
fistpll
xor
ret
stc
jmp
addl
and
pop
popf
and
test
inc
or
test
rolb
xchg
rclb
adc
in
fidivrs
out
idivl
shlb
aaa
aas
ficoms
and
outsl
outsl
std
add
into
and
fstl
test
stos
push
enter
and
sarl
movl
sub
enter
mov
or
dec
xor
loopne
add
jae
in
jae
and
cli
push
loop
xor
aad
push
push
xchg
and
pmullw
jne
jecxz
mov
dec
fdivl
lcall
aad
shrl
xchg
sahf
and
inc
dec
lock
fisubs
push
test
int3
cwtl
je
lret
adc
and
mov
push
mov
lret
into
sub
lds
push
imul
mov
mov
fimuls
bound
and
xorb
dec
gs
and
dec
mov
mov
jb
mov
data16
jecxz
push
mov
nop
mov
pop
sbb
cli
dec
shl
jno
lock
cld
push
aad
daa
or
xlat
cmpb
add
adc
xor
decb
dec
rcrb
jae
mov
adc
mov
inc
jnp
xor
add
ret
lahf
cmp
dec
sbb
dec
xchg
xchg
sbb
xchg
fnstcw
lcall
sub
cwtl
shlb
test
mov
ret
pushf
in
insb
jmp
fcompl
sub
les
push
xor
push
call
jge
in
pop
push
add
sbb
fwait
hlt
comiss
les
icebp
repnz
outsb
ret
gs
shlb
loopne
repnz
mov
inc
mov
call
xchg
xchg
js
sub
xchg
aaa
imul
push
jge
mov
fistl
xchg
jecxz
xchg
dec
cmp
aad
mov
aad
xchg
xchg
sarb
aad
jns
or
cld
mov
xchg
xor
adc
aas
insl
adc
sub
mov
dec
loop
xchg
rcl
dec
rolb
or
in
sbb
leave
sub
sahf
mov
mov
out
fst
push
aaa
xor
xor
aad
addr16
push
mov
mov
dec
cli
imul
mov
mov
inc
lret
xchg
mov
sub
sub
ds
jne
lods
mov
inc
inc
xlat
aad
or
mov
mov
mov
repz
shrb
mov
add
mov
icebp
mov
iret
and
nop
scas
sbb
testl
out
or
loope
push
jns
rol
cmp
imul
jo
sbb
push
mov
mov
loopne
cmp
adcb
adc
lret
xor
mov
daa
dec
dec
sub
mov
mov
out
jbe
fdivrs
jecxz
inc
lcall
jno
adc
repz
push
repz
fstpt
and
call
leave
jns
inc
ja,pt
js
int3
inc
jns
push
xchg
dec
into
pop
sbb
mov
pop
movsl
imul
push
push
and
xor
xor
notb
dec
inc
push
xchg
and
mov
ss
adc
inc
lock
mov
xchg
rclb
xor
out
es
in
cmp
mov
sarb
sub
arpl
sbb
sub
or
jmp
inc
add
movsl
jnp
lea
lock
movsl
arpl
xor
orb
into
sub
aam
or
das
mov
fildl
orl
ficoms
mov
adc
jae
dec
or
and
sub
aaa
fcmovnu
addr16
pop
add
mov
push
add
clc
sbb
xor
push
xor
lret
pushf
test
jle
jecxz
mov
fwait
cmp
int
cmc
into
jmp
sub
loop
pcmpeqd
lahf
out
mov
xchg
adc
mov
scas
imul
rolb
inc
cld
mov
in
test
xor
pop
lret
fimuls
int
jle
xchg
push
push
stc
mov
xor
pop
push
testl
jno
jecxz
jae
pop
add
rolb
movsl
inc
or
test
mov
and
dec
xor
pop
das
adc
es
dec
into
bound
mov
xor
mov
inc
ret
inc
das
mov
mov
push
cmp
ss
cmp
lock
pusha
movsl
or
xlat
insb
shll
rcll
shrb
jmp
cmpsb
pushf
inc
jae
mov
inc
push
sub
mov
jno
pushf
lods
insb
xorl
jnp
sub
cmc
mov
push
shr
sbb
push
jae
sub
imul
mov
mov
popf
jbe
out
push
sbb
mov
movsb
flds
pop
add
loop
aas
add
inc
cmp
shll
xchg
and
lods
stc
into
ljmp
repnz
cmp
scas
aam
cli
add
xor
popf
and
sub
sub
or
xchg
test
and
test
adc
ja
xor
mov
mov
jns
ljmp
sahf
push
sub
jo
out
fimuls
dec
add
rorb
add
xchg
push
inc
lcall
pop
shl
inc
in
ret
cmp
in
mov
je
push
into
sub
dec
push
pop
mov
clc
xchg
mov
jle
pusha
pop
push
call
sbb
cmp
test
das
xchg
lock
pop
dec
out
dec
sub
in
xchg
cltd
aas
jmp
cmpsb
jb
cltd
jmp
es
std
fs
jns
or
leave
pop
mul
cs
mov
mov
cmp
and
jmp
cltd
shlb
iret
dec
shrl
mov
insb
imul
scas
push
int3
test
mov
xor
pop
pop
mov
jmp
call
inc
outsl
cmpsb
iret
push
shl
test
or
mov
pushf
lock
or
insb
mov
push
repz
lock
mov
sahf
test
pop
sbb
leave
fists
into
fsubr
add
rcr
ficomps
xchg
je
mov
jp
pop
cmp
jno
fs
mov
fpatan
mov
mov
ds
adc
in
jns
inc
xchg
lret
inc
testb
pusha
add
mov
mov
add
pop
std
mov
xor
fbstp
pop
adc
and
mov
jne
and
push
jno
fbstp
add
jnp
pop
insb
js
imul
fisubrs
dec
jg
dec
mov
mov
jecxz
call
and
xchg
insb
sahf
mov
cmp
fmuls
jbe
fisubl
adc
add
iret
sarb
call
jecxz
or
mov
rolb
popl
pop
iret
iret
in
mov
nop
adc
insb
xchg
xchg
sbb
fnstsw
pop
dec
jmp
movsb
xchg
mov
add
push
sub
jno
rcrb
lret
loopne
mov
sti
cli
pop
test
dec
imul
loop
lds
mov
dec
dec
pop
mov
icebp
jb
mov
dec
xor
dec
andl
add
mov
js
mov
divl
test
sbbl
ret
aas
pop
mov
push
clc
rcrl
xchg
lods
lods
mov
cmp
adc
push
pusha
cmp
das
adc
inc
jo
jae
jmp
jno
push
cltd
sbb
xchg
xor
adc
es
mov
inc
loopne
pop
leave
jg
mov
dec
arpl
sbbl
push
push
sub
jg
mov
lahf
or
mov
rclb
out
shl
pop
jge
mov
stos
fidivrl
mov
shll
sub
notl
mov
pop
addr16
inc
gs
jnp
sbb
xor
pop
cmp
dec
mov
sub
clc
add
lods
and
sub
insb
pop
iret
ret
hlt
cld
push
aad
xor
sbb
les
push
in
mov
cmp
sub
and
jmp
jb
cmp
mov
cltd
pop
popa
popa
dec
outsl
xlat
add
or
mov
add
loope
xor
add
pop
mov
adc
insb
push
cmp
andl
lods
jno
imul
imul
cmp
aaa
lret
mov
mov
into
xchg
fisubs
stos
dec
xchg
es
mov
add
pop
into
in
xor
ljmp
imul
cltd
mov
adc
or
out
std
jbe
cltd
add
repz
movsb
add
stc
and
stos
in
add
sub
push
push
lret
adc
adc
hlt
pop
test
sti
sub
jns
dec
pop
out
jne
inc
sbb
mov
std
mov
icebp
sbbb
xorb
loope
shrb
fs
push
sub
mov
cmp
jle
test
or
pop
dec
nop
inc
cltd
int3
sub
xchg
mov
mov
xor
or
mov
insb
add
mov
mov
cltd
leave
add
mov
jo
pop
adc
jbe
sub
dec
ret
or
lret
xchg
cwtl
xlat
xlat
mov
mov
add
push
inc
push
add
sbb
jae
dec
mov
fucomi
push
cmc
in
mov
pop
scas
lods
out
popf
mov
das
pusha
and
push
sbb
inc
mov
push
add
test
inc
and
mov
mov
add
push
in
cwtl
cwtl
mov
dec
jbe
daa
sbb
fnstcw
adc
add
scas
cld
jb
dec
les
test
fucomp
cltd
ja
rorb
dec
push
stc
mov
push
dec
sbb
jb
xor
popa
test
faddp
inc
lock
xchg
adc
repnz
push
pop
mov
ja
test
lret
aas
jge
dec
stos
outsl
mov
jns
and
leave
mov
fnstenv
xchg
add
cmp
stc
mov
mov
push
xor
stos
add
push
mov
and
push
jecxz
sub
mov
shrb
clc
dec
dec
lods
push
cld
mov
js
enter
cmovno
mov
sub
arpl
enter
xor
mov
pop
mov
or
pop
pop
mov
inc
scas
dec
fwait
mov
add
mov
jmp
and
jle
leave
adc
pushf
sahf
push
aad
js
sub
lock
xchg
bound
xchg
inc
movsl
js
clc
xchg
sub
neg
jle
aaa
iret
fnstsw
inc
int3
cmp
adcl
pop
xchg
xor
cltd
stos
testb
and
add
sub
pop
mov
cmp
ret
in
leave
mov
jns
fincstp
stos
inc
push
push
mov
push
ret
scas
andl
inc
loop
push
fndisi(8087
xchg
shlb
movaps
sarb
mov
adc
sbb
xchg
js
xor
cmc
mov
outsl
jns
xor
fnstenv
mov
loop
mov
jno
add
es
mov
insl
and
fldenv
push
push
orb
inc
add
andl
and
xchg
add
clc
dec
in
sbb
and
add
insl
out
loope
js
jbe
dec
test
xchg
sti
dec
and
jne
jecxz
pop
je
ret
add
cmp
pop
sahf
mov
lahf
es
pusha
shll
jge
insb
sbb
aaa
pop
mov
sbb
fisttps
in
sbb
in
pop
mov
lea
aas
push
test
sub
mov
repnz
test
into
fwait
mov
mov
adc
js
aam
ret
fistpl
imul
dec
xchg
fidivrs
call
and
jg
movsb
loop
or
and
xor
inc
int
outsb
es
les
sbb
roll
aaa
scas
fnstcw
dec
pushf
in
inc
or
lcall
aaa
inc
popa
shlb
cmpsl
out
inc
inc
lock
into
std
push
test
and
test
pop
adc
push
clc
or
cmpsl
push
sbb
add
rclb
sub
loop
gs
in
adc
mov
mov
iret
addb
rorl
mov
push
std
loop
scas
cmpl
cmp
push
push
xor
subl
test
and
js
and
bound
imul
inc
mov
push
fmull
imul
jno
xchg
ss
mov
into
mov
adc
sarb
xchg
nop
push
jns
lret
mov
test
pop
stc
out
sub
cwtl
xchg
xor
dec
ss
cmpsl
test
gs
cs
or
jae
fmulp
js
adc
fistps
jb
pop
sub
test
test
aad
sti
pushf
mov
pushf
rcr
jecxz
into
push
pop
adc
sub
idivb
fnsave
mov
xchg
xor
pusha
or
fstpt
fsubrp
sbb
cmp
add
dec
stos
xor
cvtdq2ps
dec
cmc
enter
les
fs
pop
aam
rorl
mov
push
stos
jg
fstpl
inc
and
cmp
in
dec
xlat
xor
pop
cli
fmull
test
mov
sbb
icebp
mov
test
pop
mov
xchg
xchg
xchg
and
jae
cld
sti
adc
imul
xor
adc
push
mov
mov
and
addr16
xchg
jp
sub
shll
mov
push
popl
inc
movsb
data16
in
mov
divb
in
mov
loopne
subps
cmp
test
xchg
ljmp
imulb
dec
test
and
inc
int3
mov
data16
xchg
pop
dec
ljmp
lret
aam
xor
cs
mov
or
pop
mov
jns
int
dec
daa
add
dec
out
xchg
pop
cmc
or
popa
sti
sar
loop
gs
mov
aas
mov
mov
mov
jmp
inc
out
shll
ficoms
and
arpl
sub
add
dec
xchg
cmp
inc
or
dec
mov
xchg
cmpsl
loope
push
out
mov
psraw
push
addr16
out
sti
out
cli
mov
push
add
in
mov
adc
push
out
dec
imul
idivl
rorb
mov
rcll
decl
cwtl
or
out
cmp
or
cli
aas
lahf
repnz
sub
fdivrl
mov
repnz
mov
das
dec
lret
mov
stos
add
out
fstpt
or
aaa
cli
cmp
das
and
push
mov
stos
inc
insl
insl
push
loopne
sub
shlb
nop
adc
push
add
sub
push
into
mov
test
inc
daa
add
dec
jle
das
and
hlt
cld
pop
pop
push
clc
dec
sbbl
lock
xor
dec
and
shll
xchg
and
sbb
out
add
add
out
push
mov
pop
sbb
imul
rorl
pmulhuw
jg
sbb
mov
arpl
addr16
xor
mov
imul
loope
out
and
sub
imul
cmpsl
scas
out
das
and
and
js
mov
in
mov
mov
add
jbe
mov
jo
sbb
sbb
js
iret
gs
hlt
decl
xor
loop
xchg
cmp
and
xor
faddl
mov
add
xchg
test
cltd
out
in
xlat
mov
add
xchg
in
sbb
divb
je
lcall
mov
mov
insl
sti
xor
js
cmc
inc
xor
push
xchg
xor
lods
in
xor
push
imul
push
dec
inc
inc
test
std
and
scas
adc
push
pop
add
mov
dec
mov
enter
test
imul
mov
fcmovnu
pop
pop
sub
bound
mov
cs
out
push
add
lahf
and
pop
aas
cltd
pop
and
lea
jmp
dec
cwtl
rcl
mov
pusha
insb
mov
and
push
add
add
cmpsl
mov
out
jno
sahf
ret
lret
imul
ficoms
popf
add
inc
xor
dec
cmp
mov
in
cs
das
ljmp
popf
call
push
xchg
xor
jmp
dec
and
mov
ret
adc
jmp
inc
outsb
lods
fdivrs
push
cmpsb
mov
lods
test
hlt
jmp
cmp
xor
or
clc
fiaddl
pop
mov
stos
repnz
mov
outsb
test
ret
shl
ss
sbb
xchg
mov
mov
sub
mov
push
cmc
cwtl
imul
mov
push
jb
mov
imul
mov
nop
repz
sub
imulb
aas
fwait
sahf
iret
cmpsl
loope
aad
lahf
mov
xchg
int
lods
mov
and
bound
loop
mov
dec
lods
bound
sbb
les
std
and
hlt
push
test
push
xchg
test
push
push
testl
into
jns
dec
jecxz
mov
fwait
aaa
pop
cs
jge
cltd
repz
jne
xor
push
dec
jl
mov
loop
dec
or
add
cli
scas
add
jp
cmp
stc
dec
nop
clc
enter
aaa
add
sahf
mov
mov
dec
sub
test
push
pusha
movsl
dec
cltd
in
mov
cld
and
xchg
ss
sub
popf
xchg
aad
ret
movsb
lds
mov
push
divl
mov
sbb
outsl
out
cld
repz
scas
pop
dec
out
mov
adc
mov
cs
fwait
dec
mov
mov
test
push
es
ficompl
mov
mov
add
pop
enter
mov
movsb
add
dec
mov
mov
test
iret
adc
adc
push
xchg
movsl
push
cmpsb
dec
fdivl
stc
add
fldcw
inc
pushf
push
mov
and
jns
testb
lret
and
insb
sbb
out
iret
inc
into
call
loopne
mov
daa
jo
out
ja
and
adc
movsb
sarl
insb
dec
and
cmp
pop
aaa
mov
sti
push
out
jg
lods
mov
add
mov
aam
cwtl
cli
xor
push
mov
mov
addr16
inc
sbb
xchg
nop
iret
lahf
outsb
int
movsb
xchg
xor
pop
sbb
rorb
dec
jmp
fildll
sbb
mov
jp
outsl
mov
pop
xor
cwtl
pop
and
cmp
imul
xor
cmp
mov
or
sub
pop
sub
pop
sarl
push
sub
and
cmp
repz
pop
jg
stc
pop
fstl
and
stc
cmc
add
scas
cltd
cld
adc
pop
push
in
mov
enter
dec
shll
mov
loope
jne
jnp
xchg
aam
jg
sub
js
xor
pushf
arpl
mov
jle
mov
push
fidivl
mov
rcrb
jmp
sub
mov
cmpsl
jno
fld
das
cmp
cmp
jl
xor
je
test
inc
outsb
cmp
mov
xor
jle
jno
inc
cmp
cmpsb
testb
pop
add
jns
inc
push
sbb
popa
out
adc
sub
xor
push
popa
icebp
pop
aaa
sbb
pop
sbb
jne
loope
sahf
dec
inc
mov
fstps
cltd
sbb
sub
les
inc
into
shl
andb
or
sub
inc
jecxz
loope
cmp
int
arpl
cmp
mov
in
loope
int3
data16
and
inc
inc
adc
or
pop
push
rcrb
ljmp
xchg
scas
xchg
mov
xchg
inc
stc
cmp
dec
pusha
das
cmpb
mov
lods
bound
sub
jne
sub
rol
fidivs
pusha
addr16
das
adc
and
inc
test
lock
pop
or
ficoms
xor
je
push
das
data16
add
sbb
push
dec
ss
into
insl
movsl
pop
sub
xor
xor
int
fsubrs
ljmp
aaa
pop
push
fldt
scas
frstor
sub
aas
pop
push
mov
cmpl
fstps
adc
xchg
fwait
inc
cmp
enter
cs
mov
flds
and
movsl
sub
je
dec
std
ja
pop
adc
xor
and
mov
adc
fimull
jae
je
inc
cmp
imulb
cld
das
lahf
mov
xor
mov
or
jg
rcrl
dec
push
push
push
insb
stos
jmp
push
aaa
in
lret
adc
in
fcmove
arpl
jnp
dec
outsl
out
bound
nop
shll
neg
pop
stos
fisubl
call
add
adc
shrl
pusha
outsl
add
mov
jns
movlhps
lods
xor
jmp
push
aad
adcb
bound
lret
shll
push
sbb
call
push
in
push
test
mov
sbb
cs
xchg
iret
push
inc
popf
cmp
sub
jge
stos
cltd
in
bsf
roll
bound
push
mov
mov
inc
push
ss
testb
mov
pop
scas
or
sub
ljmp
out
dec
cmpsl
ljmp
add
mov
mov
psubw
bound
mov
out
mov
daa
jmp
enter
negl
imul
or
mov
scas
pop
jle
sbb
or
roll
jecxz
outsb
inc
jae
sub
mov
in
mov
popf
aad
push
or
push
and
out
mov
pop
jbe
mov
jge
mov
adc
push
and
push
test
cmpl
aaa
mov
mov
and
lahf
jne
sub
adc
jge
aam
sbb
stos
cmp
les
pushf
mov
xor
daa
iret
sbb
jbe
aas
out
aaa
pop
das
mov
ret
popl
pop
mov
jp
adc
mov
aaa
mov
addr16
imul
add
dec
sbb
test
cmp
hlt
push
or
ljmp
in
lahf
scas
cmpsl
adc
mov
arpl
push
mov
push
pushf
fisubrs
jo
faddl
lea
movsb
call
push
cmpl
and
cltd
and
push
xchg
push
push
bound
test
bound
and
cmc
repnz
out
xchg
test
std
pop
mov
xchg
add
shl
iret
mov
clc
les
loop
dec
cmp
std
jl
xchg
or
jl
adc
pop
popa
mov
sti
push
lds
fstpt
xchg
pop
es
stos
sbb
pop
cmpsb
adc
pop
dec
aam
inc
insb
out
out
jmp
adc
jo
adc
loopne
cmp
xchg
in
mov
xchg
clc
mov
sub
dec
dec
pop
push
mov
adc
out
popa
test
sub
and
repz
repnz
rcr
xchg
xchg
cltd
das
je
insb
les
xor
jecxz
pop
shll
rorb
cmp
adc
aam
mov
cmpb
testb
sub
cmpl
adc
mov
add
divb
xchg
icebp
and
add
adc
dec
mov
sub
push
daa
ja
dec
cmp
xor
pop
nop
lock
sub
push
xchg
xchg
rcrl
repnz
fldl
xchg
stos
stc
outsb
pop
dec
mov
xchg
xor
xchg
push
mov
shr
repz
jge
or
pop
insl
pop
jbe
mov
xchg
inc
jle
mov
shll
push
scas
pop
dec
lods
push
jnp
pop
sahf
push
push
mov
mov
insl
cwtl
pop
test
add
mov
pcmpeqb
jge
mov
dec
out
or
pushl
push
das
scas
push
adcl
push
xor
cmp
bound
adc
xchg
pop
bound
mov
lcall
and
mov
push
insb
stc
and
xchg
in
adc
and
dec
lods
fistpl
xchg
mov
dec
jl
xor
add
fwait
and
mov
mov
dec
jecxz
scas
rep
push
push
dec
mov
out
int
adc
leave
out
inc
mov
out
xor
es
dec
cli
mov
sub
out
test
mov
ljmp
loope
cli
mov
dec
shll
mov
dec
sub
das
in
iret
xchg
in
mov
xor
or
js
push
jbe
inc
jns
mov
add
in
stc
adc
mov
mov
add
xor
lahf
cmp
jl
cmp
xor
jne
ja
out
xchg
shlb
cmp
or
pop
inc
divl
sbb
in
rcr
sbb
cli
sbb
cs
addl
fwait
out
push
xchg
outsb
push
je
pop
xor
stc
stc
popa
mov
dec
lahf
adcb
cmpsl
jo
push
shlb
add
outsl
loop
mov
pop
aam
sbb
mov
insb
clc
ret
ljmp
pop
jno
xor
lret
movsb
dec
loop
xchg
mov
les
testb
or
xchg
mov
les
cmp
xor
mov
and
or
lods
xchg
aam
mov
xor
pop
in
push
mov
mov
and
adc
or
xor
push
mov
icebp
loope
bound
push
adc
inc
ds
mov
test
repnz
imul
int3
imul
mov
in
push
outsl
sub
call
nop
scas
out
mov
lods
in
in
inc
movsl
pop
outsb
mov
lods
imul
mov
lcall
div
outsb
mov
sub
jecxz
mov
adc
dec
mov
mov
js
shl
fstpl
xchg
iret
sub
cmpsb
sub
sbb
lcall
push
cmpsb
mov
cmc
addr16
ret
lret
xchg
and
in
lock
andl
int
mov
xchg
aam
cs
mov
ja
mov
stos
jge
fiaddl
shrl
sbb
lcall
out
xor
cs
ja
xchg
xor
sub
inc
cltd
cmp
int
popa
jmp
sbb
shrl
incl
xor
test
pop
bound
push
push
xchg
fwait
addr16
mov
inc
push
dec
in
cs
ficompl
mov
sbb
pop
add
xchg
add
movsb
inc
outsb
in
ficoms
lds
mov
iret
fcompp
xor
lock
adc
rep
ret
inc
mov
mov
push
xchg
mov
mov
lock
cmpsl
addr16
xor
push
cmp
or
mov
push
push
enter
aaa
inc
push
push
sbb
mov
adc
mov
testb
push
in
and
pop
push
inc
lods
scas
inc
dec
mov
pop
nop
xchg
orb
scas
xor
lods
xlat
dec
mov
out
mov
mov
int3
add
mov
xor
outsb
scas
jle
inc
cmpsb
fsts
mov
lock
sbb
imul
outsl
lods
or
lock
out
ja
or
pop
push
ljmp
clc
js
cmpl
dec
mov
lahf
leave
repnz
pop
sbb
lods
scas
clc
mov
pop
pusha
pop
inc
repnz
inc
cmpsb
jb
sub
mov
lret
shlb
adc
cmp
dec
and
int
scas
mov
add
iret
enter
ja
adc
push
sbb
lret
mov
sub
mov
adc
or
gs
rcrb
outsb
xchg
jbe
and
mov
movsl
aas
adc
jb
sbb
mov
adc
dec
or
cld
xor
inc
and
mov
inc
dec
lret
mov
mov
and
in
inc
stos
outsb
sub
mov
push
pop
sub
test
mov
imul
fistps
jge
popa
xlat
and
sub
out
mov
or
cmc
add
ja
js
hlt
mov
int
pop
bsr
inc
shll
leave
or
mov
cli
xchg
push
adc
cmpsl
cmp
mov
jae
jbe
cmp
movsl
adc
data16
and
in
ficomps
push
mov
jne
mov
das
mov
jbe
es
adc
aam
push
neg
jmp
in
mov
push
mov
out
lahf
mov
fwait
mov
push
jae
inc
sbb
in
jnp
push
and
xchg
lds
or
popa
cmp
jmp
mov
sub
insl
mov
data16
lock
sbb
in
sbb
aam
loop
adc
mov
ja
ret
mov
je
dec
out
sub
mov
decl
xchg
sub
push
push
int3
ret
jbe
ljmp
pop
inc
sub
mov
cli
lds
in
imul
adc
push
pop
adc
cmp
mov
cltd
push
adc
dec
inc
mov
psubusb
out
dec
mov
cmp
fists
pop
cli
lret
lcall
xchg
outsb
mov
movsl
sub
sbb
xor
mov
xor
insl
pop
sub
jl
xchg
sub
mov
fs
cmp
mov
mov
imul
add
ljmp
jne
dec
xchg
mov
push
push
lahf
shrl
bound
ret
cmp
cmp
aam
les
inc
mov
pop
mov
pop
sbb
movsb
adcb
iret
and
mov
xchg
in
and
push
xchg
or
or
lea
incb
mov
lods
adcl
push
ficoms
test
rolb
pop
idivb
loope
dec
imul
xor
leave
adc
add
rol
xor
mov
clc
adc
xlat
jle
jns
ret
mov
dec
rorb
ljmp
bound
pop
lock
hlt
test
pop
push
xchg
stos
adc
ss
scas
mov
insb
xor
ret
mov
das
in
scas
aam
lret
mov
xchg
push
in
sub
cwtl
fwait
int3
ljmp
inc
mov
cmpsb
shrl
in
inc
shrl
fstpt
aam
or
lret
push
pop
cmp
cmp
gs
lret
in
jno
pop
outsl
dec
sbb
dec
push
mov
cmpsl
arpl
outsb
gs
ret
cld
push
and
lods
cmp
das
idivb
fisubrs
mov
mov
mov
sbb
jle
pop
inc
push
jl
pop
or
push
or
es
hlt
lret
xor
xchg
xchg
and
push
test
and
aas
lcall
xor
mov
lret
shll
in
in
fiadds
stos
inc
dec
cld
and
jl
mov
mov
imul
adc
arpl
sahf
adcl
repnz
inc
ds
sub
cltd
cltd
lcall
in
mov
sub
out
notb
out
mov
mov
scas
cwtl
out
add
mov
add
movsb
mov
repz
push
int
jmp
in
pop
mov
pop
xor
mov
addr16
insl
repnz
aam
mov
outsl
cmp
icebp
cwtl
or
das
es
repnz
dec
xor
dec
push
imul
imull
addr16
in
ds
inc
addr16
mov
push
push
pop
dec
jmp
mov
mov
lcall
mov
push
push
jns
mov
xlat
cmpsl
sbb
mov
and
jnp
sbb
xchg
rcll
aaa
fidivs
lods
or
rol
jecxz
mov
ljmp
int3
sbb
jle
rol
xchg
push
repnz
jne
adc
or
xchg
xchg
loope
dec
pop
mov
prefetch
or
xor
sbb
cmp
adc
sbb
or
push
add
fbld
aad
jae
mov
xchg
sbb
popa
lds
mov
sub
adc
repz
fwait
cltd
imul
mov
add
mov
insl
cmp
sub
out
cmp
int3
or
mov
in
sub
rorb
push
mov
mov
movsl
aas
lret
jne
jg
mov
outsl
sub
pop
mov
push
int
das
mov
aam
push
stc
add
sbb
cmc
xchg
sbb
dec
xor
inc
add
mov
jmp
pop
lea
insb
rorb
add
test
aaa
xor
push
aam
imull
mov
ret
fwait
cmp
in
insl
daa
mov
sub
add
pop
xchg
add
pushw
cli
or
insl
icebp
sub
cs
mov
jo
or
pop
mov
mov
cltd
push
mov
psubw
pop
dec
stos
jno
movsb
sub
or
or
repnz
lods
bound
pop
mov
out
push
push
or
lods
leave
dec
lock
loop
xor
mov
pop
mov
aas
lock
in
mov
fcmovbe
fisubrs
adc
repz
out
call
push
in
adc
rclb
add
push
std
dec
repz
sub
jg
out
out
add
mov
dec
jecxz
mov
sub
into
mov
jns
xor
js
mov
jg,pn
xor
xor
hlt
aam
inc
fs
mov
xchg
pop
xorb
incb
jb
sarl
push
imul
fcoms
into
adc
xlat
and
pop
mov
add
ss
cmp
shlb
mov
and
push
ds
test
ja
sbb
lcall
divb
pop
lods
xchg
jp
lret
cmpb
sbb
inc
test
xlat
test
popa
cmpsl
mov
fcmovne
ds
loope
dec
adc
lods
fwait
cmp
jb
and
dec
pop
sbb
fcmovu
scas
in
mov
pop
outsl
imull
stos
fneni(8087
lahf
cmpsb
fs
daa
movsb
cmp
mov
fstl
pop
scas
rcl
lcall
aad
dec
pop
sbb
sub
lds
xor
or
pop
add
fbstp
insb
out
pop
dec
scas
xchg
outsb
dec
cli
pop
fs
cmp
mov
adc
dec
and
decl
fwait
mov
popa
outsb
icebp
nop
mov
call
int3
xor
je
inc
ret
dec
lea
sub
mov
dec
stos
pop
xor
or
fdivrl
sbb
mov
imul
jge
test
pushf
mov
lock
pop
out
mov
aad
mov
xlat
movsl
stc
fadds
insl
cmp
cmpsl
lcall
leave
pop
fwait
pop
sbb
and
incb
xchg
rol
push
add
rorl
aaa
mov
pop
xor
inc
sub
inc
jns
rcpps
mov
mov
outsb
xchg
and
in
sub
jae
or
cltd
adc
mov
sbb
adc
mov
push
or
mov
bound
int3
fwait
test
dec
push
pop
mov
mov
popf
mov
xorl
ja
pushl
push
push
stos
jle
jnp
pop
nop
fwait
sub
pop
insb
int3
add
loopne
push
dec
pop
inc
fildl
jmp
stos
dec
int3
cmpsl
aas
push
aad
push
aas
leave
sarl
mov
add
ljmp
movsl
fldt
xchg
mov
adc
dec
cmp
cmp
shlb
popa
jle
jnp
mov
int3
xor
je
push
xchg
call
jno
jecxz
mov
pop
es
mov
lcall
adc
jae
addb
mov
push
jo
push
xchg
adc
or
jne
std
sbb
mov
leave
pushf
xchg
insb
mov
in
pushf
in
sahf
xorb
mov
out
lods
popa
push
fdivrl
jp
inc
scas
fidivrl
scas
ret
outsb
aas
loopne
mov
in
jle
cmp
push
test
sbb
cli
in
xchg
xor
mov
push
dec
jle
test
mov
aas
test
pop
verw
cmpb
or
xor
mov
cmp
pop
fs
loop
je
jge
fbstp
add
mov
icebp
or
mov
js
and
xchg
xlat
repz
rolb
mov
test
dec
fcompl
xchg
dec
or
mov
addr16
outsl
push
dec
push
dec
lea
xor
test
jl
mov
xor
cmp
jle
stos
addr16
mov
mov
and
pop
int3
jmp
push
int3
rcll
dec
mov
inc
fwait
jl
push
mov
mov
mov
test
loop
clc
cld
jno
sbb
cmp
jno
fsub
shr
jae
fcomp
das
sub
mov
mov
sbbb
jecxz
pop
pop
fdivrl
int3
push
jp
add
push
pop
ss
pop
cwtl
mov
adc
mov
fwait
push
sbb
into
jbe
inc
mov
mov
outsb
out
push
in
stos
ds
xchg
cmpsb
xor
dec
sbb
push
sbb
test
jne
int3
lea
jp
inc
jb
add
push
jecxz
xchg
lods
aam
pop
or
and
out
into
inc
orl
inc
cmpsb
jb
rolb
push
shr
jl
fcompl
dec
sbb
gs
mov
push
mov
out
add
mov
mov
adc
lea
push
js
fs
ret
pop
jno
leave
add
ret
and
jno
das
push
jnp
adc
daa
sbb
test
sbb
imul
fidivs
xchg
mov
sub
mov
mov
ret
sub
inc
subb
dec
xchg
add
xchg
in
sbb
in
test
inc
mov
sbb
sbb
cmp
in
in
into
mov
addr16
xor
mov
lahf
imul
shlb
xchg
cmp
jns
mov
cmp
sbb
data16
sub
push
aaa
leave
push
mov
xor
sbb
mov
mov
icebp
shlb
add
or
push
push
aaa
mov
mov
push
sub
xchg
movsl
popa
or
push
jo
pop
mov
or
and
sub
push
jle
cwtl
cwtl
stc
aaa
pop
push
and
pop
aaa
jg
fisttpll
push
ds
xor
cmp
mov
movsb
xor
icebp
in
call
push
lock
xor
and
mov
icebp
xchg
mov
testl
nop
push
subl
int3
push
in
pop
cmc
mov
in
out
inc
pop
mov
xor
jo
shll
jno
in
push
and
cmpsb
repnz
movsl
adc
adc
mov
mov
les
jne
mov
les
pushf
lret
push
test
sub
fiaddl
jp
lahf
mov
into
aad
ja
fmull
pop
mov
inc
or
cmc
icebp
movsb
int3
insl
mov
insl
std
jnp
mov
sbb
and
jnp
xchg
mov
fwait
imul
cmpsb
pop
or
jmp
imul
lods
dec
ljmp
aam
adc
jl
jl
repnz
in
insl
sub
aaa
dec
and
rcr
dec
fimuls
enter
test
and
loope
xorb
fsubl
xor
push
sub
js
push
inc
int3
outsb
repnz
add
sbb
js
stc
lret
add
nop
xchg
mov
test
nop
popl
inc
jg
ret
mov
orl
popf
imul
neg
cmp
mov
icebp
ret
sar
cmpsb
mov
in
jecxz,pt
aaa
fs
iret
cmpsl
add
cmp
neg
lea
pop
cmc
fsubrl
mov
push
sbb
sbb
sti
xor
cwtl
iret
in
or
jb
fs
adc
pop
push
sub
cmp
ficomps
inc
pusha
xchg
dec
pop
cltd
pop
fldenv
cmp
mov
loope
stos
out
and
xchg
jne
aaa
test
movsl
cmp
inc
aas
jecxz
jns
lock
mov
push
incb
repz
mov
aad
xchg
insl
pop
pop
pop
insl
xchg
mov
xor
lret
and
and
hlt
mov
dec
shrl
dec
sar
jnp
push
mov
push
xor
dec
js
roll
ljmp
sahf
push
mov
cmpl
std
cwtl
pop
ds
and
int
ret
inc
data16
pop
dec
fwait
xchg
inc
cli
pop
xchg
enter
pop
jl
js
jmp
push
mov
jle
and
cmp
lods
mov
int
mov
jo
dec
xchg
mov
notb
sarl
dec
scas
out
mov
lret
add
andb
addr16
xchg
push
stos
ret
mov
or
adc
xor
mov
ret
mov
stos
xchg
and
pop
sbb
and
jmp
inc
lods
mov
dec
shll
jnp
dec
mov
and
xor
stc
fdivp
mov
cltd
dec
mov
out
mov
jbe
xchg
out
sbb
test
iret
cmp
xchg
call
cli
ret
adc
dec
mov
inc
jg
into
push
pusha
xchg
mov
inc
insb
xor
ss
and
jle
mov
inc
imul
push
xor
mov
das
shr
or
lcall
cmpxchg
xor
sbb
into
sub
hlt
test
mov
or
mov
sub
push
ret
insb
out
fs
push
adc
int
cwtl
gs
lea
loopne
lret
xor
dec
dec
dec
jnp
popa
test
call
popf
adc
call
or
loope
jl
lods
loope
sti
add
faddp
xor
inc
xor
shlb
arpl
popf
and
sub
push
les
in
inc
clc
or
push
lret
sbb
mov
addr16
in
imulb
dec
insb
ds
pop
lret
mov
add
out
mov
ficoml
mov
mov
push
leave
ljmp
or
loopne
push
lahf
push
shll
fidivrl
xor
and
and
push
and
imul
movsb
cli
add
pushf
in
and
pusha
imul
icebp
xchg
das
sub
je
subb
pushf
or
pop
mov
mov
data16
hlt
add
add
mov
inc
mov
addl
jae
or
xchg
lods
push
in
push
mov
or
addl
mov
iret
or
or
push
mov
aad
lock
lods
dec
mov
dec
xchg
test
xchg
lods
cld
movl
scas
jle
cwtl
loopne
dec
sub
in
mov
out
aam
popa
ljmp
mov
add
ja
clc
or
jg
mov
xor
cmc
clc
cmp
cmp
jl
daa
add
les
mov
mov
iret
sub
lret
xor
fsubrl
or
arpl
outsl
push
mov
mov
jge
jge
cmc
into
je
ret
aad
movsb
ret
mov
lret
js
sti
jnp
dec
addl
mov
jmp
pushf
jp
imul
push
push
imul
or
sub
push
xor
mov
cmp
fidivrs
or
ret
mov
call
push
push
and
arpl
dec
cli
nop
aas
pop
dec
pop
lock
sbb
cmpb
push
pop
xchg
xlat
imul
mov
das
leave
mov
mov
mov
dec
pop
xchg
xor
and
mov
dec
ret
lahf
xchg
loopne
pop
sub
xor
bound
in
mov
xor
fsubrp
cmp
mov
xchg
test
daa
out
scas
jle
andl
push
mov
pop
ret
and
sub
push
imul
lods
gs
imul
sbb
int3
out
pop
xchg
xchg
pop
dec
dec
dec
and
pop
mov
out
push
bnd
dec
xchg
cli
push
fnsave
icebp
enter
in
jnp
sbb
movsb
push
das
xor
ds
xchg
das
mov
jo
cmc
sahf
sbb
cmp
les
orl
and
testl
gs
mov
das
cmp
daa
push
nop
or
movsl
and
in
pop
push
ret
fisubrs
sbb
jo
out
in
dec
mov
mov
push
lea
and
pop
ret
xchg
mov
or
xor
dec
cmp
adc
dec
iret
xchg
into
mov
lock
cwtl
xor
adc
shrl
add
fwait
es
mov
aaa
sarb
mov
inc
fdivrs
dec
push
mov
mov
xchg
mull
pop
stc
rcl
test
enter
or
pop
mov
ret
push
lods
stc
dec
cwtl
mov
jp
shr
stc
push
aam
pushf
jb
out
mov
clc
jmp
aaa
ret
ds
ja
mov
push
inc
aaa
sub
fcompl
sarb
fnstcw
add
insb
notl
popf
adc
jl
sbb
push
cs
and
imul
int
adc
movsl
fisubrl
jl
pop
sbb
jno
push
add
xor
es
xchg
or
mov
mov
and
imul
sub
xchg
add
aaa
adc
dec
pop
js
std
adc
pop
push
pop
mov
pop
mov
mov
jmp
add
stos
xchg
xchg
addr16
sbb
sbb
aas
out
sbb
sub
add
inc
pop
outsb
jb
cmp
dec
xchg
sbb
bnd
push
in
mov
fs
mov
cli
mov
insb
scas
pop
movsb
mov
jns
ljmp
outsb
push
cwtl
jge
test
daa
popf
adc
xchg
lods
and
add
lret
push
pop
push
into
or
cmc
inc
adc
adc
int3
nop
test
imul
pop
cmpb
pop
adc
or
lock
jns
xchg
push
test
test
popf
sub
or
sahf
mov
mov
xor
inc
dec
loopne
insl
and
xchg
cmp
push
std
dec
xchg
mov
adc
inc
popa
mov
pop
cmp
aam
xchg
pop
xor
inc
cmpl
push
loop
aam
stc
xchg
movsb
pop
mov
inc
ss
outsb
jge
jo
andl
sub
lock
nop
mov
jnp
test
or
cvtdq2ps
pop
cmp
or
fmulp
mov
fdivrs
sbb
dec
pop
jo
push
outsl
push
jno
fnstsw
mov
ret
jle
stos
and
sbb
ret
jno
fiadds
fs
jnp
ljmp
cmp
ret
sti
dec
add
xor
xor
aas
and
and
into
jp
push
mov
mov
and
std
in
cmpsb
cmp
stos
add
mov
inc
sbb
fldcw
movsl
rol
aam
and
lcall
cmp
shll
adc
out
mov
inc
dec
or
popa
push
lods
shrl
mov
mov
out
lods
call
mov
stos
test
inc
jmp
adc
stos
cld
lock
cmp
pop
and
ret
orl
sbb
bswap
push
add
lret
movsb
stos
pop
fwait
aam
pop
or
mov
pusha
int3
mov
push
fistl
push
lahf
rclb
dec
or
int3
mov
outsb
sub
outsb
orl
mov
lods
sub
aaa
pop
sub
fisubl
dec
movsb
jle
dec
jbe
in
pop
mov
addr16
popf
mov
mov
push
jae
sub
sbb
lods
pop
sub
mov
jns
insb
mov
mov
dec
jge
sbb
fdivp
fnstsw
xchg
out
push
orl
popa
mov
mov
and
inc
test
imul
mov
repz
mov
push
es
or
std
mov
xor
or
push
leave
sub
test
shrb
std
cmp
testb
clc
xchg
mov
or
mov
test
mov
shll
test
push
inc
cmp
mov
popf
pop
lock
and
inc
insl
dec
loopne
xchg
adc
shlb
cs
jge
xchg
push
push
ja
sbb
push
aam
in
sub
jb
cld
lahf
lretw
in
in
pop
push
cmp
mov
sub
pop
push
push
ds
jns
add
in
je
cwtl
inc
sahf
push
push
mov
cmp
lods
cmp
cmp
inc
rcrl
mov
mov
test
das
and
mov
pop
pusha
cwtl
ja
outsl
xor
push
sbb
push
loop,pt
loope
sub
add
in
pop
jg
fsubrl
add
outsl
cmc
sub
sbb
mov
adc
insl
xchg
std
test
sarl
jnp
xchg
fs
lea
inc
test
mov
inc
loop
pop
insb
dec
push
push
xor
xorb
ljmp
hlt
mov
stos
dec
outsl
or
daa
ficoml
push
jae
cltd
out
add
sbb
adc
jg
adc
lahf
repnz
test
lcall
nop
xchg
scas
xchg
negb
loop
sahf
jle
add
or
inc
repz
mov
sbb
lcall
fs
dec
dec
aaa
cmp
int
cmp
daa
ret
mov
jle
jl
mov
mov
add
pop
sub
ret
mov
sub
out
adc
stos
fbld
fstpt
xchg
sub
and
aam
or
cmp
pop
addr16
cmpsl
jnp
mov
xchg
call
pop
pop
dec
and
in
aaa
and
mov
test
jle
mov
hlt
loop
lods
inc
rcl
mov
pop
lea
sbb
xchg
add
je
sub
mov
out
adc
inc
mov
js
loope
enter
xchg
sti
fistps
mov
stc
pop
push
xchg
gs
inc
movsl
hlt
jbe
cwtl
sub
mov
inc
add
inc
je
divl
pop
adc
jno
call
call
push
sbb
lock
sbb
mov
dec
aaa
insl
dec
sbb
filds
sbb
cmp
push
rclb
mov
and
adc
xchg
pop
aad
adc
jmp
fcoms
xor
or
push
ss
inc
add
ss
jge
je
mov
rcpps
add
adc
mov
sbb
mov
cmpb
pop
mov
pushf
mov
scas
add
dec
add
mov
ds
push
push
icebp
push
fcmovnu
subb
mov
hlt
pop
stos
rorl
pop
fldt
mov
cltd
loop
test
daa
outsl
or
test
or
in
jbe
jb
push
inc
in
jb
xchg
jbe
push
cld
mov
repnz
or
mov
jg
insl
enter
hlt
add
push
and
sub
fmulp
xor
push
test
xor
arpl
xor
mov
and
lock
js
jns
sub
xacquire
lock
push
shll
add
cld
addl
or
dec
in
jns
das
xor
mov
add
mov
sbb
xor
jnp
cmp
nopl
inc
aam
lods
add
gs
pusha
and
mov
sti
pop
jp
push
es
in
cmp
mov
mov
cmp
xor
mov
adc
out
and
sbb
lods
or
and
mov
loope
adc
out
je
push
sub
test
add
jge
fcom
adc
insb
or
pop
sbb
mov
sub
lcall
nop
cmp
xorl
rolb
or
mov
arpl
pop
adc
rcll
push
loop
and
ss
jp
and
pushf
test
xor
sbb
mov
scas
mov
cmpsl
rcr
ror
jno
neg
xlat
lcall
pusha
xlat
sahf
cmp
add
imul
enter
mov
lds
int3
ds
adc
adc
pop
push
fdivr
pop
clc
fcoms
sub
add
in
sub
out
sbb
lods
in
lret
fildll
mov
aaa
sbb
addr16
mov
or
ret
sbb
lahf
cld
nop
and
dec
dec
rolb
shll
jmp
sbb
xor
push
push
cwtl
call
loope
bound
dec
cmpsl
jge
testb
cwtl
lds
in
add
mov
cli
sub
mov
imul
outsb
shl
loop
push
pop
jmp
xor
scas
test
scas
add
out
cmpsb
cmp
enter
rorb
dec
orb
push
push
and
add
xchg
pop
push
or
lds
adc
insb
sub
lds
adc
popf
xchg
movsl
in
fwait
jb
jne
leave
mov
xchg
push
add
add
mov
loop
rcr
xor
ds
fnstcw
push
addl
idivl
subl
and
or
jp
adc
scas
sahf
pop
xor
adc
xor
cmpsl
ds
add
cmp
adc
pop
add
outsb
jnp
jp
adc
rclb
sbb
addr16
adc
ror
in
out
dec
lea
dec
inc
cmpsb
dec
xchg
pop
in
rorl
or
popf
sbbb
mov
jge
fiaddl
ret
jae
jno
fidivl
test
outsb
dec
es
add
adc
in
jecxz
aad
pop
and
push
sbb
enter
in
pop
pop
sub
test
cwtl
cli
fldt
pusha
in
push
call
xorb
js
insl
int
push
jecxz
sub
mov
sub
mov
and
rcr
or
dec
or
bound
pop
mov
cmp
and
pop
jl
aas
test
jl
pop
adc
mov
mov
dec
mov
xchg
mov
pop
sbb
and
push
dec
icebp
cmp
sub
imulb
xor
sbb
xor
or
dec
xchg
outsb
pop
lahf
xor
and
mov
xchg
call
push
mov
jne
add
cltd
xorl
insl
fwait
inc
jb
fildll
int
loop
dec
insl
pop
mov
pop
into
push
mov
jmp
jg
inc
and
ljmp
mov
inc
outsb
mov
xlat
mov
int3
cs
dec
lea
aas
scas
out
push
fsubrl
xor
or
adc
aam
or
jns
fsubrs
lock
out
push
or
xlat
insb
dec
shr
idivl
pop
cmp
mov
nop
notb
lret
xchg
into
cli
push
into
inc
jle
sbbb
arpl
mov
js
mov
mov
jg
fstpt
inc
xchg
shr
pop
dec
add
jno
xchg
inc
enter
fsubrp
sbb
in
lcall
not
mov
dec
xchg
xchg
int
loop
in
add
jmp
into
push
ss
pop
sbb
sbb
jmp
rol
out
leave
add
cwtl
outsl
add
xlat
sub
arpl
sbb
leave
xchg
stos
mov
dec
rorl
jl
inc
int
popf
add
jb
jb
dec
mov
bound
lock
add
nop
lcall
int
cmp
out
adc
rcl
xor
push
stos
jecxz
dec
fs
sbb
divl
push
int
test
mov
pop
dec
sti
xchg
sub
jl
and
mov
dec
cli
fwait
pop
in
jae
mov
jb
test
iret
clc
lret
in
outsb
mov
and
lds
sbb
mov
adc
ret
in
and
rcrl
adc
adc
mov
outsl
inc
mov
sarb
xor
popa
and
xchg
roll
fstpl
aaa
pop
jmp
inc
adc
jnp
dec
cld
sub
gs
cmc
dec
mov
cld
pop
dec
mov
insb
dec
mov
fdivrp
jb
out
imul
shl
test
rolb
in
stc
or
or
out
es
jne
sbb
cs
mov
xor
insb
ljmp
cmp
push
je
mov
adc
jp
imul
sbb
xchg
inc
outsl
in
sbb
jns
xor
xor
jne
sub
loopne
xor
loop
mov
dec
outsl
orb
fcompl
loopne
pusha
je
cmp
loopne
fiaddl
cltd
ja
lea
das
rcll
fnstcw
lahf
js
add
and
or
inc
mov
aaa
inc
cli
loope
cltd
repz
in
stos
and
int3
jnp
rclb
adc
mov
xchg
push
iret
xchg
iret
or
imul
jge
icebp
or
ret
leave
cs
add
cltd
fbld
or
gs
in
dec
cli
jae
jmp
test
adc
push
or
leave
outsl
dec
cmp
rcll
iret
or
xor
add
push
nop
sbb
xchg
mov
xchg
enter
xor
jo
mov
aam
push
mov
clc
addr16
fildl
in
sub
push
adc
push
sahf
sbb
jnp
mov
loopne
xchg
ffreep
inc
jle
xor
inc
int3
cmp
loopne
hlt
gs
xchg
shll
adc
dec
adc
adcb
mov
data16
fwait
rorl
inc
xchg
sub
imul
and
out
and
cltd
mov
sbb
ja
roll
and
mov
mov
xchg
pop
jne
insl
sbb
sub
dec
imul
sub
xchg
movsb
or
adc
fisubs
fs
shll
mov
jnp
xlat
xor
inc
cmp
std
insl
sub
insl
nop
jne
scas
test
or
mov
into
fistps
inc
sbb
pop
lock
scas
icebp
nop
push
fistl
jp
or
push
inc
xchg
xchg
out
xchg
clc
jno
call
inc
ja
xchg
jmp
out
cld
dec
jle
int
aam
pop
sub
add
or
cmpsl
sti
nop
cmp
aaa
in
dec
inc
or
adcb
jbe
jge
test
dec
xchg
xchg
sub
inc
int3
movsl
outsb
xor
cmp
pop
sub
movsl
lock
pop
loopne
pop
pminub
mov
sbb
jge
sbb
lock
ret
loopne
jge
sbb
jecxz
fdivl
jnp
cli
mov
sbb
push
out
sbb
adc
mov
lods
push
sub
mov
mov
pop
idivb
xchg
xchg
add
add
ss
andl
incl
jmp
xor
mov
pop
mov
pop
out
inc
out
mov
push
ror
bound
aas
jnp
jle
jge
mov
xchg
push
lcall
orb
sbb
stos
push
clc
rol
xchg
outsb
push
stos
push
aad
data16
cmpsl
negb
fldl
inc
cmp
pusha
mov
mov
adc
leave
pop
xor
dec
sub
inc
mov
out
popa
mov
adc
fcoml
popa
add
xchg
xchg
and
mov
inc
push
leave
ret
in
dec
enter
int3
mov
in
mov
inc
or
mov
push
cwtl
xchg
pop
lea
imull
push
lds
pop
mov
sub
lock
clc
shll
adc
int3
sarl
stc
loope
out
movsl
cld
outsb
xchg
and
ljmp
stos
jno
mov
xor
in
dec
add
outsl
jns
push
test
push
jecxz
fsubrl
and
mov
xorb
fsubrp
pop
scas
inc
rol
fistpl
fistpll
push
mov
ja
in
dec
mov
adc
movl
dec
sahf
fists
sbb
popf
insb
pop
imul
es
and
push
cmpsl
arpl
ss
dec
adc
cmp
push
addr16
push
inc
int3
adc
ret
cmpsb
test
dec
pop
or
mov
add
push
dec
jae
scas
xchg
cmp
mov
fcoms
jbe
int3
rolb
push
jno
mov
gs
leave
inc
call
in
imul
cmp
push
or
or
inc
push
mov
inc
push
sub
jecxz
stc
pop
mov
push
hlt
pushf
dec
cmp
popf
mov
sbb
adc
stos
int
int
js
shl
jb
mov
and
mov
lea
jmp
sti
sub
mov
adc
loope
xchg
loopne
imul
out
jbe
inc
iret
int3
shl
stc
mov
xor
jb
mov
ss
dec
mov
mov
bound
push
jo
mov
inc
mov
xchg
pop
sarb
jns
push
jo
adc
sahf
push
gs
sbb
jae
jl
arpl
adc
pop
sub
xchg
push
mov
cmp
dec
cmpsl
inc
decl
xlat
sub
mov
jne
adc
sarb
xchg
pop
mov
and
je
shll
cmp
adc
fstps
std
popa
in
mov
inc
repnz
inc
sub
jl
xchg
jl
push
insb
out
shlb
std
push
cmp
lahf
inc
jno
sbb
push
mov
std
sti
mov
cmc
std
dec
aad
pop
bound
hlt
lods
lcall
add
cmpl
xchg
mov
xlat
lret
cmp
movb
cmp
les
cmp
push
cltd
xchg
push
sarb
or
das
jae
add
jl
jmp
sub
xor
or
jns
sbb
sub
mov
or
rcrb
scas
push
addl
outsl
sahf
cmpsl
scas
out
loope
lahf
xor
repnz
jnp
sti
xor
in
xor
cwtl
xchg
sbb
adc
mov
pusha
xchg
push
flds
push
pop
lahf
pop
xor
pop
adc
mov
fildll
mov
lret
bound
les
sbb
not
jmp
mov
or
pop
pop
out
iret
test
mov
inc
fildl
lcall
fs
outsl
enter
mov
push
push
xchg
push
stos
sti
jmp
jecxz
inc
mov
push
dec
mov
jmp
ficomps
lock
jne
setnp
stos
test
push
dec
pop
cmp
imul
add
mov
cmpsb
repnz
test
imul
mov
pop
pusha
scas
cmpsb
push
aaa
xorb
iret
pop
pushf
int
in
call
and
testb
dec
or
inc
scas
inc
enter
xchg
test
push
test
cmp
sti
pop
mov
xchg
cmpsb
and
mov
or
pusha
sub
pop
jae
cmp
mov
out
mov
push
sbb
orb
or
push
sub
outsl
mov
xlat
xchg
or
jmp
test
push
push
inc
pop
aam
mov
or
xor
jo
rep
mov
or
imul
out
adc
cmc
add
out
jl
dec
xor
lret
and
ljmp
ret
xchg
pop
inc
mov
ljmp
add
iret
cltd
or
aad
mov
scas
sbb
push
data16
dec
pop
pop
jae
xor
adc
outsb
sub
sub
orl
sbbl
xor
add
movsl
test
sub
mulb
xchg
rcrl
aaa
pop
aam
out
inc
adc
out
mov
loope
mov
pop
xor
ds
mov
jb
int
shrb
sub
cmp
leave
hlt
mov
jecxz
js
mov
mov
jmp
mov
jo
outsb
in
or
icebp
bound
dec
pmovmskb
mov
cmp
lahf
and
scas
stos
xchg
or
xchg
cli
jae
sbb
inc
jae
cs
jp
adc
cmpsb
xor
stos
xchg
roll
adc
jl
daa
out
push
subb
sub
mov
aad
es
lods
inc
aaa
jo
cwtl
jecxz
enter
stos
fnsave
fisttpl
movsb
cmp
loopne
insb
in
ret
scas
nop
imul
repz
andb
out
pand
xor
push
push
and
daa
cld
repnz
xchg
or
insb
movb
cld
cmp
adc
test
sub
imul
xlat
add
outsl
sbb
push
rsm
push
mov
out
enter
mov
mov
dec
and
hlt
pusha
movsb
add
adc
pop
push
fs
cmp
mov
movsl
jae
or
pop
fistl
add
cmp
push
mov
insb
xchg
out
mov
jns
xor
lds
mov
in
push
pop
imul
in
cmc
lods
jle
push
mov
inc
push
cmp
out
push
xor
mov
xchg
or
std
xor
or
pop
push
mov
mov
lret
fwait
inc
mulb
aas
in
imul
cmp
mov
add
inc
sub
leave
sti
pop
nop
leave
jl
jo
loop
push
in
mov
xchg
push
cmp
jle
fs
pop
shl
adc
cltd
data16
in
cmp
add
inc
lds
mov
jb
rolb
test
lods
inc
add
test
sbb
mov
addb
inc
iret
dec
mov
jmp
shlb
sbb
pop
shlb
fdivrp
add
dec
push
roll
scas
test
lock
xchg
mov
sub
nop
sti
bound
dec
insl
xor
jmp
inc
jle
stc
enter
cmp
andb
ja
in
mov
mov
push
fcmovnb
ficomps
mov
loope
inc
outsl
popf
pop
js
js
mov
pop
add
jmp
dec
jbe
xor
fdivs
lret
adc
dec
mov
dec
nop
loope
mov
ret
cmp
imul
or
divl
fdivrs
outsl
repnz
add
pop
push
pop
add
adc
pop
in
sbb
dec
pop
or
jb
and
cltd
nop
sbb
es
pop
cs
jl
cmpsl
push
mov
adc
in
mov
mov
pop
std
scas
in
xchg
push
and
push
sbbl
cmc
mov
add
ja
inc
lcall
xor
mov
push
xlat
cli
and
or
rcl
push
iret
pop
adc
cmp
cli
lods
sbb
mov
or
xchg
add
ja
adc
adc
lahf
sub
sbb
xchg
adcb
push
sub
dec
xchg
adc
out
mov
test
dec
notb
rclb
je
jns
push
dec
sbb
sub
pop
leave
pop
dec
fadds
cs
push
test
xchg
xchg
inc
mov
popa
sub
test
inc
scas
repz
jp
cmpsl
push
dec
outsl
mov
shll
inc
push
imul
je
jbe
movsb
pusha
add
xchg
jno
jl
fs
inc
pop
icebp
subb
sbb
out
stos
jle
mov
sub
test
inc
fisubrl
out
scas
mov
jg
ljmp
mov
xchg
xor
in
lret
mov
xchg
sub
and
push
ror
push
push
shlb
jne
adc
push
rcr
fsts
in
scas
inc
and
aaa
cs
cld
fsub
ror
cmpsl
sub
test
push
inc
aaa
iret
in
fldt
imul
mov
and
xchg
fisttpl
jbe
aad
inc
and
sbb
mov
jp
movsb
ret
and
dec
or
test
sbb
pop
and
xchg
push
aad
inc
cmp
aas
pop
mov
lret
push
adc
leave
test
outsb
dec
cmp
icebp
mov
pop
sub
cli
hlt
xchg
jge
imul
loope
dec
cli
dec
xor
adc
add
dec
out
add
sti
pop
xchg
fidivl
push
sub
jge
or
xchg
xchg
inc
sbb
jg
xor
cmp
daa
lds
add
jbe
adc
test
mov
cmp
idivb
sbb
cmpsl
cltd
cmpsb
xorl
repnz
div
add
push
mov
sbb
mov
outsb
inc
ficomps
js
cmc
pop
xor
ret
popa
repnz
fistpl
push
dec
ljmp
pushf
decb
fdivs
inc
xlat
in
and
cmp
shlb
arpl
aam
or
adc
mov
xchg
and
add
mov
dec
mov
mov
fsubs
lock
cld
xor
pop
add
and
push
imul
fildll
cmp
inc
mov
or
add
shll
or
mov
data16
xchg
sbb
inc
cltd
popa
pop
int3
cmp
aas
xchg
bound
pop
fdivrl
jno
xor
pop
xor
push
pop
push
stos
std
sbb
sbb
and
enter
ffreep
jmp
faddl
inc
pop
cmp
add
repz
xor
xchg
scas
xchg
jge
cli
xor
daa
mov
adc
leave
cmc
xchg
mov
adc
adc
xor
pop
in
cmp
jg
mov
scas
sbb
xor
jp
imul
lds
cmp
jmp
or
scas
insb
out
stos
pop
ljmp
or
add
mov
and
aas
into
pop
call
aas
jne
dec
xor
mov
cmp
sti
add
sbb
or
fisttpll
dec
adc
std
jae
cmp
jns
arpl
mov
rcll
jmp
jbe
outsb
jns
xchg
in
and
icebp
ret
mov
mov
les
push
cmpsb
dec
je
icebp
test
jmp
enter
les
xchg
js
in
add
int
xchg
jecxz
jo
mov
jo
test
xchg
stos
mov
ret
sub
xlat
enter
dec
push
out
andl
jge
inc
mov
cmp
je
pop
sar
icebp
or
ss
in
rclb
and
mov
and
insb
in
js
call
and
push
lea
cs
les
push
mov
jl
movsb
sub
iret
jle
mov
xchg
mov
mov
mov
mov
dec
cmp
mov
inc
lods
cmc
push
pop
adc
out
call
lods
sbb
xchg
sub
fiadds
mov
cmp
adcb
push
out
insl
mov
movb
out
lret
xchg
movsl
sti
lcall
stos
dec
rcll
add
jo
xor
adc
shrb
repz
adc
daa
sbb
cmpsl
xchg
jmp
or
loope
add
inc
decl
fists
xor
stos
in
inc
jo
ret
push
xchg
pushf
and
mov
mov
cltd
repnz
loope
and
xchg
add
cmp
stos
stos
les
icebp
lcall
sti
lods
xchg
jge
mov
adc
push
ret
lret
cs
aad
mov
and
shrb
cli
je
and
ljmp
stos
mov
xor
out
push
clc
clc
xchg
xlat
in
or
gs
mov
jge
cmp
cwtl
ljmp
cld
in
andl
xchg
push
aam
popa
adc
jg
mov
or
or
cmp
aaa
out
lahf
lret
pop
bound
or
mov
push
fmuls
addr16
out
iret
out
adc
xchg
inc
or
hlt
xor
mov
push
into
out
push
push
add
and
mov
sti
inc
lock
sub
jb
push
xchg
adc
sub
pop
add
dec
sbb
mov
std
or
ja
cmpl
pop
xchg
jg
daa
ror
mov
dec
sbb
addr16
test
bound
testl
or
roll
stc
shrl
clc
cltd
cmp
fistpll
xor
int3
jg
das
xlat
jb
dec
lods
je
jge
and
xchg
and
mov
sbbb
xor
stos
lock
mov
inc
cmpsl
adc
mov
mov
push
push
mov
sahf
mov
inc
add
and
jb
dec
jno
lret
in
int3
mov
leave
imul
lds
push
adc
addr16
les
ljmp
loopne
cld
sbb
sbb
shll
mov
xchg
fidivs
lock
xchg
xchg
xlat
adc
add
icebp
xor
inc
clc
and
stos
cmp
jp
push
sbbb
je
jo
and
dec
jmp
inc
sub
std
sbb
sbb
daa
or
cwtl
adc
fsubl
xlat
push
decb
lods
mov
in
pop
stc
mov
lret
adc
xor
shlb
stc
pop
push
inc
dec
ret
std
stos
mov
loope
nop
jnp
push
enter
jg
subb
clc
cmp
call
mov
iret
sarb
stos
scas
ss
xor
xor
pop
outsb
inc
in
dec
pop
xor
aad
pushf
aad
adcl
outsl
fistpll
push
cmp
outsl
jne
mov
cmp
add
insl
inc
iret
jmp
cld
push
leave
std
mov
aam
dec
or
nop
out
outsb
nop
pop
aas
sbb
lea
imul
scas
jb
mov
das
push
inc
cmc
mov
fcomps
popa
adc
xchg
lods
stc
jne
mov
mov
push
ss
fcmovnu
insb
add
adc
dec
insb
push
add
xor
mov
cmc
xchg
xor
push
mov
pop
and
daa
jge
cld
xchg
mov
pop
sub
dec
divb
aas
or
ficoml
cwtl
lcall
loope
and
jmp
pop
shrl
dec
mov
cmc
pop
sbbb
sbb
stos
fildll
fcmovu
cmp
nop
and
mov
or
out
and
dec
and
mov
push
xchg
push
ljmp
enter
call
jge
mov
nop
and
loop
aad
cwtl
outsb
inc
ds
mov
push
int3
into
xchg
insb
jnp
je
insb
jmp
out
jo
jl
out
aad
lea
xor
hlt
adcb
xor
aam
ss
jns
stc
out
rcll
pop
dec
addb
fcomp
and
cmpsl
imul
xor
pop
movsl
cmp
inc
icebp
ljmp
sub
and
xchg
sub
in
mov
cmp
sub
jmp
shlb
jp
popa
loopne
mov
inc
mov
outsl
sbb
inc
and
movsb
arpl
mov
mov
icebp
out
in
daa
movsb
push
adc
lods
cwtl
sub
or
pop
mov
push
test
pop
loope
les
adc
or
mov
jmp
popa
data16
pop
mov
pushf
in
mov
jle
add
aaa
and
sub
xchg
out
add
icebp
idivb
jno
adc
mov
rclb
aaa
push
ljmp
push
add
sub
pop
icebp
mov
data16
push
popa
jno
sub
pop
xor
and
pop
jo
fidivrs
nop
outsb
pop
shrl
push
inc
lock
pop
add
psraw
pop
hlt
ficoml
sub
test
lahf
imul
or
cmp
dec
or
out
pop
adc
inc
ljmp
or
adc
or
test
loopne
bnd
jp
push
lahf
pop
xchg
fimull
loope
inc
and
and
mov
jp
push
push
mov
cwtl
adc
xorl
mov
cltd
and
orb
and
aam
push
lods
arpl
movsl
pop
rcll
ljmp
ss
mov
cmpsb
mov
mov
sbbb
enter
inc
inc
pusha
jno
lods
aam
int3
or
cmp
daa
xor
mov
adc
sub
xchg
mov
mov
pop
outsb
inc
out
cmp
sbbl
xor
pop
adc
js
popf
dec
sti
push
decb
sbb
push
ret
dec
leave
jg
lcall
mov
mov
shlb
mov
sub
mov
imul
xor
xor
popa
mov
decb
cs
mov
add
cmpsb
addr16
stos
pop
lds
mov
clc
push
inc
aas
loopne
jp
mov
sub
push
add
loopne
mov
xchg
sub
push
sub
testl
insb
add
sub
jmp
outsb
lock
lahf
lahf
jmp
rclb
mov
sahf
aad
mov
mov
mov
into
inc
or
ljmp
mov
push
lea
es
gs
call
out
xor
loopne
xchg
out
jl
cmpsb
popa
mov
iret
jnp
inc
pop
mov
sbb
inc
outsb
push
popa
xor
mov
fsubs
sahf
xchg
out
int
movsl
or
pop
adc
cmpsb
out
jmp
xchg
jl
ds
lock
adc
inc
repz
adc
popf
jmp
xor
cli
shrb
cmp
dec
cmpsl
jmp
lret
arpl
ds
lods
jmp
or
sti
mov
popa
scas
and
adc
sbb
flds
mov
or
into
addr16
cmp
sub
andb
arpl
int3
popf
sbb
hlt
stos
or
add
jg
and
mov
into
pop
cmp
jmp
push
stos
es
loop
in
stc
outsb
fucomip
mov
test
jb
inc
mov
push
push
shl
cmp
test
lea
lods
mov
mov
movsb
and
mov
popa
pushf
cmp
aad
inc
inc
mov
lcall
xchg
add
jle
scas
mov
repz
mov
orl
pop
fnstenv
sbb
sub
mov
imul
adc
aam
jle
pop
shlb
popa
leave
sub
mov
inc
jbe
sub
bound
sahf
jecxz
push
repnz
ret
push
cli
cmp
xchg
xor
inc
cmp
mov
pop
aam
mov
xor
out
add
test
ror
sbb
mov
and
ret
cmp
rorb
popf
cmp
fsubrl
adc
scas
testb
and
stos
mov
mov
and
dec
aad
push
push
pop
dec
jge
xor
test
jno,pt
cmp
outsl
mov
cmp
xor
ret
xchg
loopne
cwtl
ljmp
fnsave
cmpsb
mov
dec
popa
push
push
je
sbbl
lds
inc
mov
addr16
xchg
inc
cmp
mov
cmpsb
add
adc
cmpsb
stos
pushf
mov
jecxz
icebp
add
xor
xor
std
sbb
mov
sub
or
jl
mov
sbb
or
or
push
xchg
or
mov
sahf
pusha
or
pop
mov
sbb
cli
cltd
xchg
stos
adc
popf
faddl
cli
push
pop
mov
mov
cmp
mov
sbb
ficoms
mov
and
cmp
jne
pushf
lods
mov
and
dec
es
mov
inc
out
stos
mov
dec
fiaddl
movsb
imul
dec
lcall
cmp
orb
jecxz
fs
mov
ss
mov
call
inc
and
and
or
pop
fwait
jmp
push
movsb
in
sub
arpl
ljmp
push
jmp
enter
inc
sbb
iret
push
inc
add
lods
divb
dec
jbe
pusha
add
fs
push
add
add
lods
cmpsb
hlt
call
sbb
jg
decb
hlt
addr16
in
ret
sti
xchg
ljmp
sbb
cmp
clc
jne
mov
fs
aad
jmp
mov
loop
repz
fisubl
push
sbb
or
popa
jnp
divl
sub
xchg
sub
test
hlt
xchg
mov
jne
cmp
adc
mov
add
mov
xchg
loop
inc
out
jge
dec
sub
test
push
popf
xchg
imul
pop
jg
ss
popa
pavgw
mov
fwait
ss
cmp
pop
nop
or
outsb
jo
fldcw
jo
push
popl
std
cmp
adc
inc
xchg
insl
add
nop
jnp
imul
mov
xchg
xor
call
xchg
in
mov
push
aas
or
cmp
pop
jmp
movsl
rcrb
lods
jns
pop
mov
in
stos
add
sub
mov
pop
or
inc
xor
xor
mov
pop
xchg
cltd
sbb
pusha
cmp
out
adcb
sti
subl
push
rcr
in
pop
xchg
xchg
cld
rcrl
fisubs
add
ss
cmpb
lea
inc
in
or
sbb
nop
cmp
mov
cmp
cmp
pop
fisttpl
enter
movsl
rcll
pop
or
dec
shl
xor
daa
pop
mov
nop
scas
stos
leave
lea
add
mov
dec
jmp
mov
xchg
loope
cwtl
je
mov
je
in
clc
shrb
les
loope
in
pop
dec
dec
imul
sub
repz
es
and
add
sub
into
cld
cltd
lds
popf
dec
mov
inc
and
repz
mov
adc
f2xm1
sub
popf
mov
ret
hlt
add
pop
dec
dec
cmpsb
push
jg
xor
cmpsl
mov
int3
ds
xor
test
aam
jne
dec
xor
scas
mov
sahf
fld1
pop
push
aam
stc
pop
jne
test
cld
sbbl
insl
add
dec
sub
jb
mov
mov
push
aaa
mov
fildll
mov
cmp
add
sbb
in
push
mov
out
push
push
sbb
pusha
mov
jmp
mov
das
adc
pop
les
mov
mov
jb
lcall
and
pop
cwtl
sub
in
out
pop
ret
pop
bound
push
push
push
or
fimull
push
and
mov
rcll
jge
mov
jne
negb
ss
in
cmp
add
and
out
pop
in
mov
cmp
mov
data16
add
jb
ljmp
incl
rolb
rolb
int3
pop
and
sub
push
fdivrp
pop
fdivr
mov
shrb
repz
add
mov
insl
or
dec
lret
push
popf
jae
mov
mov
add
movsl
stc
scas
mov
fnstenv
test
sbb
jecxz
xor
dec
sbb
or
adc
int
ss
aas
aam
lds
push
dec
cmp
jmp
faddl
out
outsl
cwtl
add
arpl
ret
lea
xchg
xor
mov
lahf
xor
pop
sub
cltd
mov
loope
xchg
xchg
or
cmovno
lea
jb
je
scas
out
insb
pop
jne
call
adc
bound
sub
arpl
adc
out
dec
cmp
mov
push
cmp
stos
xchg
xor
lods
stos
cmp
test
test
loopne
sub
lods
lods
jbe
enter
xlat
jg
pop
pop
test
test
outsl
or
in
insb
in
mov
addr16
neg
stos
inc
xchg
fdiv
mov
mov
fdivl
roll
fisubl
bound
gs
in
cmp
repnz
in
push
mov
inc
inc
add
xlat
int
popa
mov
mov
mov
mov
mov
jmp
lret
lret
mov
jge
cmpsl
jl
mov
pusha
pushf
inc
push
movsw
pop
xor
insl
clc
pop
popa
insl
sti
or
push
outsl
sub
push
test
mov
int
lea
fildll
fcoms
test
jnp
jl
inc
rorb
dec
scas
enter
jmp
cmp
push
xor
int3
push
dec
sbb
lcall
shll
inc
js
cwtl
test
aad
add
mov
enter
test
movsl
mov
mov
xchg
jbe
iret
mov
push
insl
shll
mov
addb
push
cltd
push
dec
popf
lret
or
lahf
mov
stc
leave
jecxz
or
or
sub
popf
or
outsb
cwtl
xor
fistpll
les
sar
popa
adc
inc
sbb
insb
jne
lods
jle
loope
push
call
jne
cmp
mov
sarl
in
pusha
sub
xor
cli
push
rcl
jle
cmp
or
xor
sub
das
and
jle
jg
adc
pop
adcl
fsubrs
pop
mov
xor
aaa
out
aam
int
jno
mov
inc
push
push
test
cmp
mov
mov
ret
popa
sarl
or
mov
nop
dec
sub
outsl
in
dec
mov
add
sbb
add
lret
jecxz
jo
fwait
sub
push
ret
cmp
stos
xchg
adc
fistps
pop
xchg
push
fs
jns
and
jbe
hlt
xlat
lcall
mov
sub
popf
pop
pusha
jb
les
adc
cltd
jnp
stos
mov
std
push
hlt
popf
and
sti
lea
popf
sbb
pushf
sub
jb
jl
adc
push
in
jp
add
stc
arpl
cmp
out
loop
js
add
inc
es
mov
xor
or
arpl
popa
xchg
lret
lret
inc
pop
mov
and
xor
push
pop
int3
sub
jb
mov
mov
xor
mov
insb
mov
add
and
push
mov
aam
sti
stos
mov
mov
sub
cld
cmp
inc
ja
push
pop
call
xchg
sbbl
lahf
add
dec
push
scas
roll
jge
mov
cmp
data16
cltd
lea
out
add
push
stc
push
ret
rcrb
cld
xchg
dec
jne
xchg
cmp
pop
cld
pop
and
scas
pop
out
pop
arpl
adcl
sahf
mov
mov
and
cmovp
shl
int
adc
add
dec
add
pop
inc
jmp
pop
mov
lds
cmp
inc
out
cmc
push
and
mov
std
sub
rclb
pop
dec
xlat
pop
inc
les
jl
orl
bnd
iret
mov
arpl
lahf
adc
cmpsb
lea
adc
and
in
inc
fiadds
mov
push
les
shlb
xchg
and
xor
jmp
adc
sbb
pushl
jbe
jg
pop
sub
pusha
xchg
or
idivb
adc
inc
clc
push
adc
ja
jecxz
mov
ja
insb
out
jmp
rep
call
adc
xor
sub
sub
mov
mov
fistps
pop
mov
push
popf
xchg
std
repz
imul
inc
shrl
cmp
fs
or
not
sbb
sti
mov
sar
jmp
lcall
stos
inc
xor
adc
xchg
dec
or
fadd
cmp
in
imul
or
movsl
scas
lods
add
out
push
lcall
insb
lods
scas
ljmp
iret
aaa
mov
fnstsw
aaa
lahf
sbb
loope
mov
ss
lods
sti
add
jg
stos
lock
lahf
daa
pop
pushl
adc
test
push
add
xor
add
jno
mov
add
cld
bound
and
popf
aaa
negb
pushf
inc
adc
cli
pop
or
fs
dec
aad
sbb
insl
ja
dec
je
mov
cmp
das
push
sbb
inc
mov
mov
push
push
sbb
cmpsb
nop
lcall
stos
in
mov
jne
push
pop
scas
sbb
ret
dec
xchg
std
mov
fimull
inc
fdivs
popf
hlt
mov
mov
filds
loop
mov
xchg
gs
pop
dec
shll
sub
fcompl
imul
xchg
mov
cmpsl
cmp
cmp
ljmp
or
sbb
lcall
push
pop
pushf
mov
cltd
clc
mov
cmpsb
and
dec
jb
addr16
dec
mov
and
pop
shrl
mov
cmp
cli
inc
fcmovne
adc
mov
mov
out
ss
or
aam
or
xorb
aaa
push
sub
hlt
mov
sarl
mov
sbb
lahf
jle
mov
mov
xlat
sbb
pop
ds
mov
add
push
jo
arpl
loopne
jg
xlat
push
shrb
in
sub
outsb
jmp
aas
sub
and
ret
call
fidivrl
fisubrl
movsl
outsl
jns
mov
loop
mov
jo
or
mov
xchg
add
mov
mov
mov
je
jb
sbb
sarl
in
outsb
es
dec
jge
cs
imul
mov
mov
pop
ja
push
lahf
or
lea
jecxz
das
popa
dec
outsb
divb
insb
lods
inc
pop
popf
xor
subl
and
inc
mov
mov
push
sub
and
nop
arpl
ret
jb
subl
sub
mov
pop
cmp
js,pt
jo
cmpsb
push
push
xlat
pusha
repz
ret
lods
dec
cmpsb
inc
jbe
mov
adc
call
mov
sbb
add
shlb
or
jp
sbb
pusha
popf
adcl
divb
xor
into
pop
mov
clc
add
arpl
int3
push
gs
cmp
xor
pushf
mov
stos
addr16
fimuls
cmpsl
clc
lret
mov
jp
xor
mov
add
repnz
mov
cmp
sbb
lods
stos
xchg
add
movsl
insl
lcall
xor
inc
dec
pop
into
mov
cmp
subl
lret
mov
cmp
sti
dec
icebp
insb
inc
stos
and
pop
jbe
sub
push
xor
mov
test
out
lret
loope
add
mov
lock
xchg
es
movsb
sub
push
pop
enter
out
int
sub
fsubrs
push
ss
mov
add
sbb
into
dec
ss
ret
insl
jae
inc
mov
cli
mov
roll
pop
roll
lods
cmpb
cltd
loopne
xchg
out
les
insl
stos
jo
jmp
aas
loope
insl
sub
sub
outsb
insb
popa
and
addr16
jge
dec
cmp
cmpsb
pusha
pop
cmp
scas
pop
fwait
add
aaa
xor
lret
jmp
mov
popf
and
loopne
mov
lods
shr
mov
pop
and
or
idivb
test
push
add
jb
addr16
daa
sbb
stos
fidivrl
jb
movsl
push
pop
stos
add
mov
cmpsl
daa
addr16
jmp
jnp
mov
push
ja
in
xchg
lock
sbb
icebp
jmp
test
push
ffree
and
iret
push
imul
cmc
ficomps
lret
cmp
mov
dec
jg
dec
icebp
push
out
jle
ss
push
dec
sti
dec
or
mov
int
data16
mov
fwait
add
mov
adc
xor
cmp
dec
cmp
stos
jo
mov
push
jnp
fcomps
sub
mov
dec
loop
pop
lds
push
adc
add
push
push
and
pop
dec
xlat
fwait
loop
stc
in
or
aad
cli
fst
jle
pop
mov
and
sbb
dec
sbb
or
std
dec
mov
decb
add
mov
adc
push
roll
fldenv
dec
adc
adc
sbb
mov
push
aad
push
push
or
or
and
pop
push
add
sub
daa
dec
jb
push
adc
lahf
outsb
xor
mov
push
and
mov
in
pop
scas
es
push
fiadds
rcrl
shll
pop
xchg
add
lret
call
cwtl
sub
dec
cmpsb
mov
dec
add
mov
xor
or
lock
jle
or
pop
inc
fstpt
sbb
cmpsl
sahf
mov
rcrb
and
inc
sub
shl
pop
xchg
or
das
cwtl
out
dec
inc
sarb
stos
cwtl
adc
sub
pop
mov
out
inc
inc
push
js
les
sbb
or
popa
sbb
inc
inc
lock
pop
lahf
js
dec
out
test
roll
stc
inc
jnp
mov
daa
bound
and
hlt
pushf
imul
pop
rolb
pop
or
lahf
outsb
or
lock
shl
mov
fcmovnb
inc
inc
mov
rolb
jmp
push
insb
and
push
add
inc
das
mov
jmp
mov
jg
pop
ror
loopne
stos
out
fcmovnu
stos
int
pop
nop
mov
clc
push
outsl
jne
int
or
xor
lahf
cmp
ljmp
mov
adc
add
sbb
and
add
cmp
ss
fiaddl
arpl
sbb
or
xchg
jmp
mov
out
sub
fwait
pushf
push
ror
dec
xchg
insl
or
xlat
data16
sub
mov
loop
push
xchg
inc
mov
cmpsb
mov
sub
jp
fadds
fistpl
xchg
xrstors
subb
rcrb
les
orl
lock
push
icebp
nop
out
jp
cli
pop
push
scas
aad
pop
mov
add
scas
push
cmp
repz
idivb
xlat
xchg
sub
call
lods
jo
shlb
cld
popa
loope
pusha
fistps
in
xchg
dec
jae
cli
int
scas
cmp
mov
push
add
add
fwait
outsl
in
cmp
jle
cltd
dec
out
cmp
std
or
cmp
ss
data16
or
scas
pushl
pop
arpl
push
and
mov
mov
je
cltd
bound
stos
push
cmp
cmp
add
fwait
mov
fs
loope
cs
cmpsl
mov
test
push
sarl
lahf
mov
push
sub
bound
andb
dec
jnp
adc
imul
cltd
jmp
xchg
imul
and
mov
cmp
ljmp
std
cmp
pusha
mov
fbstp
adc
xor
stc
jo
mov
push
add
nop
ljmp
stc
adc
fimull
or
je
add
pop
jno
stos
scas
push
addb
mov
in
mov
scas
scas
inc
ret
fisubl
sub
pop
stc
cltd
dec
repnz
subb
or
mov
fcmovbe
adc
dec
jecxz
sahf
xchg
jecxz
shlb
mov
dec
and
xchg
mov
inc
push
bound
push
cs
fs
push
mov
cs
sub
dec
ja
aam
adc
imul
inc
test
fcomps
popa
jb
mov
push
jmp
loope
jmp
xor
jno
mov
adc
mov
fsubrl
cmp
pop
or
call
push
enter
adc
cmp
sahf
jb
xor
mov
les
mov
mov
mov
jae
mov
popf
inc
cmp
adc
add
xchg
scas
call
in
mov
mov
in
xchg
or
dec
decb
mov
push
out
divl
inc
shl
mov
dec
fldenv
add
push
cld
leave
sbb
jb
call
or
adc
sub
push
or
fmuls
inc
shrl
stos
jnp
in
loopne
cli
add
add
mov
pop
push
rclb
xchg
push
jmp
mov
adc
or
sub
push
insb
cs
xor
push
ret
fsts
lret
lret
pop
xor
sbb
mov
inc
xchg
out
cmc
test
sub
dec
jl
addr16
aad
sbb
push
nop
adcb
add
ljmp
push
lods
test
repz
aad
ret
scas
icebp
jb
xchg
mov
inc
add
mov
fimull
loope
inc
pop
lds
dec
inc
add
scas
sub
push
in
rol
test
adc
push
cmp
std
adcb
push
cld
and
lods
outsl
pinsrw
ljmp
test
pop
fs
out
fdiv
pop
shrb
outsl
inc
mov
test
mov
bound
or
adc
dec
addl
pop
lret
mov
fadds
pop
xor
ret
ret
shlb
push
and
push
push
sarb
outsl
insl
insb
xor
add
push
sti
pop
pop
push
das
iret
out
int
scas
hlt
or
addr16
cmp
pop
and
adc
adc
outsb
orb
mov
stos
aas
xlat
test
dec
dec
mov
xor
jnp
subb
fcoms
sbb
test
dec
into
ds
inc
mov
enter
loop
push
mov
add
mov
add
fiaddl
xchg
xor
cmpsb
mov
inc
insb
out
dec
xchg
add
mov
sub
xchg
push
push
xchg
test
add
enter
subl
pushl
xchg
push
int
xlat
out
fwait
mov
pop
add
sbb
inc
nop
mov
dec
add
cmp
ret
pmaddwd
ja
cmp
xor
inc
popa
mov
aaa
mov
hlt
pop
in
cli
jle
mov
sbb
jb
sub
xor
inc
mov
sub
push
iret
out
into
fstpt
mov
xchg
cmpsl
fcoml
pop
lcall
call
xchg
cmp
cmp
pop
cmc
push
sub
pop
roll
movsb
in
pop
insb
adc
loopne
out
jge
rcrb
push
jae
sub
mov
rclb
outsl
icebp
sbb
mov
mov
inc
adc
hlt
cmp
jne
adc
movsb
inc
icebp
ljmp
stos
push
stos
cltd
in
jne
test
push
sub
dec
adc
icebp
int3
cli
ret
in
sahf
inc
repz
inc
push
push
dec
pushf
insl
in
fcmovnb
and
or
mov
fsts
and
dec
rcrb
dec
stos
in
adc
and
fmul
daa
adc
push
mov
add
pusha
sub
sub
mov
outsl
xor
dec
inc
std
shll
jae
test
filds
rcll
sti
icebp
gs
jno
icebp
mov
xchg
aas
cld
lods
mov
mov
mov
je
js
out
xchg
clc
mov
push
subb
jp
fwait
push
or
testb
lods
sub
pusha
popf
xchg
out
lea
and
xorb
jns
dec
fwait
ret
inc
aam
or
pop
xchg
ss
cmpsb
add
mov
lods
clc
out
mov
xchg
cwtl
adc
mov
push
xchg
popf
push
push
lock
fsubl
mov
dec
xor
out
push
mov
test
pop
movsl
mov
lret
and
fildl
and
cs
int3
jne
cmp
loopne
push
insb
adc
add
hlt
roll
jno
sbb
cmp
dec
iret
sbb
std
lret
out
nop
das
scas
pop
das
stc
into
push
pop
add
or
ficoml
mov
test
and
lret
lahf
push
mov
ljmp
aaa
push
loope
daa
lret
mov
or
loope
mov
cwtl
pop
inc
sub
fnstsw
repz
pusha
test
js,pt
ja
add
mov
imul
ja
aaa
nop
and
gs
aaa
hlt
and
loop
dec
push
jge
sbb
sti
ficomps
pop
cli
xchg
stc
push
push
mov
add
mov
push
mov
and
popa
cmp
push
into
sbb
sarb
cmpl
sbb
sub
data16
cmp
push
mov
push
sbb
mov
push
lods
ljmp
cltd
arpl
and
or
adc
mov
sarl
ret
insb
sti
sbb
mov
lock
sahf
push
orb
mov
adc
dec
add
or
rcll
xchg
adc
loopne
scas
fwait
out
xor
xchg
repnz
inc
mov
enter
fbld
notb
jb
cmp
sub
inc
pop
pop
shrl
loopne
jb
imul
loopne
cli
jle
movsb
push
push
cmp
inc
fmull
dec
rolb
pop
fldt
std
test
mov
mov
test
popa
jle
pop
lods
les
mov
jno
push
mov
inc
icebp
test
sbb
adc
std
lahf
dec
cmp
incb
pop
rcrl
ss
movb
subl
cld
add
daa
in
xor
lahf
fisubl
push
fiaddl
rorb
adc
pop
outsl
dec
popa
out
cmp
xchg
imul
and
fistps
jecxz
add
js
cmpsl
sub
cmp
scas
xor
sbb
shlb
dec
imul
jne
add
cmpsb
cmc
mov
and
popf
aaa
cwtl
rcll
dec
mov
mov
ja
icebp
cmpsl
xchg
bound
call
cmc
pusha
pop
pop
cli
dec
sbb
sub
sbb
cltd
test
jl
es
inc
inc
and
aaa
mov
fwait
mov
scas
sbb
lret
jbe
dec
cld
lret
add
push
xlat
lea
or
out
sub
movsb
push
fsub
repnz
dec
sbb
movl
nop
xchg
shrb
add
je
cmpsb
push
and
mov
cltd
lcall
jg
leave
inc
adc
xor
repz
clc
pusha
call
jecxz
lods
cmp
pop
or
adc
add
imul
push
pop
cmp
or
movsb
insl
xchg
pusha
inc
cmp
pusha
push
lret
mov
inc
mov
add
dec
add
inc
mov
imul
pop
mov
sub
sbb
in
add
jno
test
bound
daa
pop
sahf
xlat
adc
sbb
ret
andl
or
lcall
out
mov
sub
add
cli
push
sbb
mov
mov
dec
in
call
insl
sub
mov
xor
aam
jbe
cmp
push
stos
mov
negl
stc
jno
dec
jg
daa
sarb
inc
pop
popa
push
pop
mov
testl
cmc
cmp
mov
mov
ret
xchg
sahf
mov
clc
jge
insl
mov
sbb
frstor
dec
sahf
hlt
push
bound
inc
fisttps
repz
cwtl
mov
jnp
and
cmp
jl
scas
sub
mov
xlat
inc
dec
and
cmp
and
sub
mov
outsb
xchg
popf
jno
sub
ss
jg
jnp
mov
xchg
lods
sbb
jg
and
les
repnz
jno
unpckhps
outsl
test
loope
stos
xor
inc
aas
rcll
lods
mov
or
lods
xchg
inc
lods
mov
pop
lret
pop
sub
nop
out
cmc
popf
pop
fs
or
sbb
jle
xor
gs
inc
rcrl
mov
sub
arpl
add
xchg
adc
cwtl
dec
push
lahf
cld
lret
loopne
pop
xchg
addr16
push
mov
cmc
mov
das
es
mov
cs
repz
mov
fmull
das
shrb
mov
xchg
loopne
dec
and
jl
xor
pop
js
popa
push
add
jge
pop
mov
loope
repz
mov
lock
mov
bound
outsb
lahf
sub
dec
jnp
pushf
sbb
ret
pop
shlb
loope
or
pop
cmp
icebp
cmpsl
or
leave
mov
xor
mov
aam
cmp
jmp
push
ljmp
imul
sub
shll
scas
jp
mov
out
dec
or
dec
mov
jnp
adc
jno
jb
adc
loopne
push
sar
pusha
jmp
aas
jl
add
mov
ja
bound
std
lods
sub
fildl
inc
lods
sbb
ds
je
push
addr16
mov
and
or
and
aad
int3
fcom
sbb
push
rcl
test
std
mov
xlat
xchg
mov
shrl
push
pop
push
sub
pop
push
addw
mov
push
fcmovb
int3
insb
dec
push
xchg
popa
out
cmp
repz
fstp
mov
xchg
xor
repz
mov
ret
mov
out
sub
iret
dec
sarb
push
cltd
test
das
mov
inc
jno
adc
cmpsl
jp
adc
inc
cwtl
adc
dec
mov
push
gs
test
jo
jae
mov
lea
hlt
lret
sub
push
shll
stc
cmp
mov
out
adc
sahf
mov
icebp
andb
xchg
mov
in
aaa
mov
popa
dec
subb
mov
jg
add
mov
mov
dec
fmuls
sar
jnp
sbb
push
xchg
push
aaa
jne
in
cmp
xor
push
xchg
lret
ljmp
xchg
jae
sbb
decl
pop
stc
xchg
xor
loope
gs
dec
loop
push
popa
pop
pop
jmp
and
arpl
lock
push
in
adc
pop
jns
aaa
cmp
sbb
sti
minps
adc
dec
into
hlt
pop
push
cs
adc
ss
inc
nop
stos
imul
mov
aaa
std
adc
aaa
loop
cmp
sbb
sbb
repnz
mov
cmp
xchg
sbb
gs
mov
cld
das
push
and
mov
js
in
dec
and
push
sub
mov
sbb
les
and
mov
sbb
les
inc
mov
ds
fnstsw
inc
push
jmp
aam
or
mov
pop
and
dec
ds
and
lods
jg
dec
repz
stos
pusha
sub
inc
jno
add
mov
and
ret
or
xchg
push
pop
lods
push
xchg
xlat
out
or
jl
mov
stos
push
mov
xor
jl
orb
pop
rolb
add
dec
test
inc
lea
insl
push
pop
sub
or
loope
cmp
and
cld
ja
cmpl
out
pop
mov
repnz
rcrb
dec
jge,pt
cmp
fnsave
sar
mov
pop
jb
mov
clc
idiv
and
xchg
mov
rcr
sar
jae
mov
aam
mov
or
mov
rolb
xor
in
loop
and
fsubrs
sbb
sbb
movsb
xchg
mov
or
hlt
leave
dec
out
mov
test
push
push
mov
mov
xchg
stos
arpl
push
and
mov
sub
std
stc
iret
jnp
mov
clc
or
rolb
cwtl
and
mov
push
stos
mov
daa
testb
mov
jnp
jo
push
jp
mov
loop
sub
adc
push
ret
imul
sbb
xorl
cmpsl
lea
xor
repnz
sbb
jne
aam
or
out
fisubrl
je
les
jge
into
jl
sbb
xchg
jg
bound
pop
sbb
lods
xchg
sti
lods
cli
scas
aad
pop
mov
stos
insl
sub
fisttps
out
pop
and
leave
arpl
jbe
mov
or
add
fdivr
jp
jb
mov
clc
jmp
sbb
mov
jl
testl
add
adc
ljmp
jne
adc
jge
insl
adc
sbb
hlt
cli
jecxz
dec
and
push
xchg
mov
xchg
cmc
mov
cmp
enter
fnstsw
mov
push
jae
sahf
sub
fldenv
sub
aaa
mov
pusha
ret
push
push
jns
mov
adc
mov
dec
out
jle
sub
sbb
cmp
inc
enter
sub
fidivrl
ss
xchg
or
in
mov
xlat
fincstp
int3
mov
adc
cmp
out
adc
xor
cs
in
testb
cld
adc
sub
fwait
imul
inc
mov
test
jg
outsb
push
jo
cmp
sbb
and
push
inc
out
loop
cmpsl
outsl
sub
add
fwait
std
xor
cld
test
ss
and
int
arpl
cmp
lock
or
mov
stc
outsb
sub
sbb
mov
sahf
pushf
repz
outsb
in
dec
dec
loop
mov
sbb
xchg
insb
and
pop
mov
dec
fwait
cmp
outsb
jp
cmp
sub
imul
lret
dec
mov
sbb
hlt
xchg
ret
xor
add
aaa
or
imul
pushf
outsl
jg
mov
stos
push
aad
aam
pop
mov
jno
push
mov
movsb
pop
inc
jp
xor
or
adc
pop
in
mov
das
mov
adc
sbb
xchg
add
fdivrl
pop
dec
je
lret
push
add
adc
pop
mov
dec
subl
xchg
sbb
add
push
mov
inc
cmp
lods
mov
enter
imulb
aas
imul
xchg
lods
lock
stos
mov
int3
mov
pop
loopne
mov
xchg
cmp
sub
fistpll
cmp
mov
insb
out
dec
bound
xchg
add
repnz
sbb
call
dec
lods
icebp
loope
mov
movb
jne
adc
addr16
jns
adc
outsb
cwtl
jb
xchg
leave
daa
adc
cmp
push
adc
bound
add
mov
decl
sbb
adc
xor
dec
in
push
outsl
jg
ffree
scas
call
aad
sbb
fs
inc
test
push
xchg
orb
out
xor
pop
push
mov
fsubs
hlt
dec
push
pop
insl
aam
ret
pusha
out
cmp
dec
cltd
out
cmp
shlb
cltd
std
mov
idiv
cmc
sbb
add
mov
push
popf
pop
and
popf
test
test
adc
mov
popf
and
pop
cmp
imul
enter
adc
lahf
xchg
sbb
dec
adc
loopne
insb
dec
int3
add
jp
mov
sub
lret
jae
and
scas
pop
dec
pop
or
arpl
add
sbb
xlat
aad
xchg
or
push
dec
divb
adc
cwtl
jae
jne
push
mov
pop
add
lods
jno
mov
xchg
jge
loope
ja
cld
stos
xchg
rcrl
mov
pop
xor
mov
inc
xor
mov
add
dec
mov
and
sbb
hlt
divl
pusha
lahf
cmpsb
add
es
ss
sti
jp
mov
sub
hlt
adc
lock
ja
sub
cli
pop
or
clc
pop
lret
jp
ret
into
idiv
pop
test
and
push
jg
js
clc
jge
xchg
cmpsb
cltd
cmc
mov
jae
ret
cltd
add
test
jmp
jne
rcrb
xchg
aad
push
ret
mov
sbb
xchg
jnp
xchg
loope
inc
push
mov
push
pop
xchg
jmp
cmp
push
negb
sbb
mov
inc
lahf
push
or
lahf
dec
mov
adc
icebp
scas
adc
add
pop
jmp
pop
sub
jg
xor
cltd
add
mov
rcll
dec
pop
or
iret
pop
and
push
mov
fwait
or
pusha
ss
leave
scas
test
or
aaa
scas
shlb
aam
hlt
add
jle
iret
add
or
mov
or
inc
js
sarb
popa
insb
xlat
push
fists
lods
cwtl
xchg
nop
inc
cmp
daa
gs
xor
mov
aas
lds
pop
mov
sbb
fisubrl
or
pushf
int3
and
xor
mov
aaa
pop
out
add
cmpsl
dec
popf
out
push
fucom
push
cmp
mov
push
outsb
and
xor
les
aam
push
rorl
out
push
mov
xor
xor
lret
pop
pop
sbb
xchg
fstpl
lcall
icebp
pushf
pop
int3
addb
in
cmpsl
cmc
pop
out
sub
stos
das
inc
push
out
lret
movsb
inc
mov
test
mov
inc
into
cmp
add
jnp
mov
xor
aam
lcall
hlt
cs
scas
sahf
sti
and
push
test
cmp
jb
gs
jnp
ficoml
sub
sub
sub
push
lods
rolb
xchg
ss
mov
ds
push
cmc
xchg
add
cld
push
adc
je
sbb
pop
push
xchg
push
inc
sub
push
dec
push
jle
testb
or
mov
leave
pop
add
cmc
aaa
imul
and
aas
push
subb
or
xchg
pop
rorl
jl
lods
ret
sub
outsl
cwtl
xlat
xchg
outsb
add
jmp
repnz
pusha
imul
inc
sahf
imul
push
shlb
outsl
jl
lret
adc
push
fadd
faddl
sub
push
jnp
mov
mov
mov
pop
inc
push
cli
jp
mov
repnz
sub
insl
bound
push
add
jle
push
aam
push
arpl
jmp
pop
repz
frstor
bound
mov
loopne
push
out
jge
cltd
cmp
add
repz
inc
and
sub
add
dec
cmpsb
mov
movsl
test
rcrb
movsl
gs
push
loope
xor
push
and
mov
fs
adc
push
cltd
rcrl
mov
shr
push
nop
repnz
scas
cs
scas
mov
lahf
ds
jecxz
out
outsb
or
dec
xchg
sti
stc
dec
test
dec
out
xor
cmpl
lds
jle
ss
xchg
insb
dec
test
adcb
xor
adc
and
in
pop
outsb
lahf
lea
repnz
enter
pop
roll
jg
inc
jecxz
fnstenv
mov
push
ja
mov
cltd
out
adc
mov
sti
push
jl
lods
shlb
shll
sarl
leave
outsl
ret
pop
mov
mov
sbb
lds
cmp
imul
push
xchg
inc
sti
fnsave
call
fmull
cwtl
inc
das
pop
xchg
stc
pop
sbb
mov
sub
dec
lock
add
add
gs
mov
xlat
jne
dec
jne
adc
ret
cmpsb
aas
nop
sbb
and
clc
imull
in
stos
push
xchg
adc
pop
or
sbb
sbb
cmp
in
jecxz
scas
mov
mov
cmpb
mov
fiadds
cltd
mov
lret
mov
out
or
out
out
sub
xor
mov
adc
jmp
fistps
add
jl
xchg
out
xor
mov
xor
nopl
jmp
push
ja
and
mov
lds
sub
movl
adc
dec
lret
lods
and
push
mov
out
mov
test
js
ret
hlt
sub
lea
or
mulb
add
dec
adc
mov
jmp
sub
mov
mov
scas
inc
inc
int3
arpl
cmc
cmp
pop
cmpsl
mov
clc
add
arpl
sbb
pop
cmp
stos
push
fldl
xchg
lea
sti
mov
cmp
jecxz
mov
mov
push
sub
push
xchg
sub
cmp
inc
add
leave
fs
loope
int
mov
pop
push
xor
sbb
jl
in
and
int3
add
xchg
add
fidivl
sahf
or
imul
xchg
dec
cmp
inc
jg
xchg
loopne
enter
add
mov
data16
mov
pop
repnz
adc
or
cmp
inc
pusha
sub
adc
lea
xor
ret
adcb
xchg
cmp
scas
js
mov
add
pushf
pop
lock
arpl
mov
rorl
xchg
push
into
mov
xchg
lods
js
dec
jns
push
and
and
jp
inc
dec
nop
xor
dec
push
jo
ffreep
das
jl
fldl
icebp
es
leave
sub
mov
add
test
sbb
int3
or
fimull
mov
and
push
xor
rclb
test
jo
mov
stc
or
repnz
stc
js
mov
out
sub
adc
or
push
dec
push
test
adc
and
and
test
ret
jb
or
shlb
dec
loope
jmp
aaa
xchg
in
fisttpll
or
sub
mov
sbb
pushf
outsl
mov
out
scas
sub
das
scas
icebp
mov
test
lret
or
xchg
pushf
jmp
push
nop
nop
out
inc
jl
loopne
sub
inc
iret
mov
add
or
fwait
insl
pop
add
enter
loopne
mov
push
mov
pushf
sbb
fs
adc
cmp
and
adc
cmp
push
push
xor
and
jb
outsl
inc
push
shlb
mov
xchg
sbb
mov
pop
clc
and
cmp
jno
xchg
mov
xor
add
ret
pop
les
in
in
mov
lods
mov
inc
add
lods
insl
sub
xchg
cmc
mov
scas
mov
test
xor
inc
cmp
pop
xchg
lea
std
mov
mov
aas
mov
test
mov
jne
cmp
stos
mov
jne
cmpsl
loopne
push
rolb
and
fsubrl
jmp
loope
dec
adc
mov
cmp
ret
es
inc
cs
jle
in
in
lods
cli
rclb
sub
xor
dec
xor
and
sbb
test
ss
mov
dec
rcrb
out
dec
cli
xor
push
ja
sbb
mov
xor
fwait
push
fsubrp
sahf
cmc
sti
popa
loopne
loopne
inc
in
test
mov
jbe
imul
inc
add
cmp
cli
push
jecxz
pushaw
rclb
add
sub
fcmovnbe
loop
outsb
int3
adc
cmpsl
out
xchg
dec
push
pop
fmull
sbb
sti
addb
mov
dec
push
cltd
ljmp
xor
fdiv
hlt
push
bound
int3
add
add
fst
ficoml
mov
inc
xor
xor
add
pusha
lods
add
clc
dec
add
cwtl
outsl
dec
adc
jo
jb
cmc
sbb
push
jns
dec
sub
dec
mov
cli
insb
fisubl
out
outsb
ficomps
jno
lods
sbb
bound
xorb
stos
and
xchg
push
rorl
and
mov
mov
cmpsl
out
repz
xlat
cmp
stos
pop
dec
sarb
sbbb
xchg
adc
outsl
rol
addb
enter
xor
xor
jle
fidivrl
xchg
mov
jmp
sbb
mov
adc
pushf
and
popa
sbb
je
bound
icebp
and
or
lcall
add
mov
das
adc
ret
into
pusha
out
movsl
ljmp
scas
pusha
jmp
mov
test
xchg
bound
ret
inc
jbe
test
fidivrs
dec
add
cmp
cmpsl
stc
or
cmp
popa
jo
fs
sub
mov
xchg
mov
out
outsl
and
lahf
mov
push
shlb
mov
pop
jmp
arpl
jl
inc
mov
in
lahf
aad
testl
pushf
add
jp
leave
mov
out
dec
xor
pop
add
sub
clc
push
dec
ss
push
push
xchg
and
add
adc
movsl
ret
jbe
mov
cli
mov
mov
inc
pop
inc
ja
mov
lcall
sahf
cmp
cli
repz
cbtw
fcmovbe
popa
test
xor
outsl
or
adc
sbb
mov
cmpb
xchg
adc
fdivrs
test
hlt
mov
gs
rolb
ljmp
jmp
xor
adc
out
mov
fst
xchg
lods
pop
dec
xor
mov
fildll
adc
mov
sbb
ja
xchg
loop
fsubrs
mov
or
add
and
loopne
xlat
inc
movsl
xchg
adc
ret
popf
out
inc
push
shl
lods
inc
aad
loop
ud2
mov
fisubl
mov
mov
adc
movsb
insl
sbb
out
fstpt
xor
push
arpl
mov
insl
outsl
xchg
movb
icebp
test
push
popf
arpl
test
add
pop
enter
push
int3
test
sarb
pop
mov
stc
and
sahf
imul
into
dec
lods
mov
loopne
fsubs
inc
mov
push
ffreep
adcb
ss
rcrl
daa
fdivrs
insb
aad
cmc
and
data16
pop
and
out
jbe
and
pop
add
mov
xor
push
xchg
jmp
mov
adc
les
push
into
mov
not
mov
ret
add
imul
cmp
rclb
push
icebp
pop
adc
or
xor
xchg
mov
call
sbb
sub
cltd
adc
mov
cmp
leave
subb
out
daa
xor
imull
jg
push
out
adc
and
adc
push
cmp
and
popl
lods
cmp
sbb
mov
js
out
or
sar
push
pop
popf
jmp
bound
sub
inc
xor
jne
cli
scas
test
or
lcall
adc
mov
arpl
das
js
mov
fbld
xchg
xchg
orb
js
mov
mov
js
sbb
mov
inc
mov
or
push
pop
gs
adc
fwait
in
pop
icebp
pop
fisubl
in
call
imul
sub
push
cmpsb
fbld
inc
add
cmpsb
test
pop
lds
scas
adc
sbb
or
sbb
xor
loop
dec
lret
inc
testl
adc
fyl2xp1
sbb
lea
out
pusha
add
push
cmp
inc
fsubrl
add
dec
enter
push
ljmp
cmp
shll
jp
add
popa
rclb
push
xchg
mov
push
xor
out
or
jp
and
in
lcall
jnp
lea
sti
pop
in
cmpsb
or
daa
fbld
jle
subl
or
inc
xor
sbb
cli
push
imul
mov
and
lahf
lea
sbb
adc
jl
cld
cmp
stc
push
cmp
dec
int3
inc
je
mov
pop
xor
sbb
fmuls
popa
inc
rcll
and
mov
jecxz
fnstenv
fdiv
push
inc
sub
cmp
mov
std
jae
call
cmpsl
or
pop
jmp
movsb
push
jno
int3
pop
push
std
or
movsb
mov
lahf
test
mov
xor
fnsetpm(287
or
std
mov
stos
sti
jg
rcrb
je
clc
push
xor
sti
xchg
xor
add
adc
das
mov
fdivrp
aaa
xchg
int3
loop
mov
xchg
gs
mov
pop
insl
outsb
pop
sub
fisttps
in
fcomps
addr16
xchg
fimull
test
xchg
push
test
roll
jno
fs
call
mov
mov
dec
sub
mov
loopne
lds
outsb
lds
movsb
or
jns
cld
and
repnz
xchg
hlt
in
sub
xchg
ja
inc
sbb
daa
lahf
push
lret
mov
mov
outsb
mov
mov
lahf
pop
mov
xchg
popf
and
icebp
sbb
mov
arpl
mov
aas
sub
ret
sarl
out
sbb
std
xchg
cmp
cmpsb
pusha
ss
inc
rcrb
insb
mov
movsb
mov
fwait
or
mov
movb
cmpsb
loope
shll
je
pop
inc
fbstp
sti
ljmp
fisttpll
aas
movsl
ficompl
aaa
les
cmp
sbb
into
mov
faddl
fimull
loop
hlt
shll
or
clc
sbb
mov
mov
stc
mov
es
xchg
or
adc
lcall
aad
sarb
mov
into
stc
std
xor
dec
je
mov
push
lahf
jl
gs
fistpll
pushf
icebp
or
sbb
lret
mov
xor
mov
mov
negb
repz
add
fdivp
imul
mov
mov
fdiv
ds
push
xor
dec
mov
inc
pop
adc
xor
push
mov
pop
pop
andl
mov
cmpsb
fs
lods
cwtl
mov
scas
frstor
mov
push
jnp
imul
cli
mov
or
outsb
pop
mov
xchg
jge
ret
mov
dec
mov
adc
xor
fsubs
insb
add
jns
inc
cli
movb
mov
or
xor
mov
in
movsb
lods
mov
mov
pop
cld
nop
xchg
cli
cmp
push
out
dec
lods
sub
in
fldz
pop
shr
cmc
dec
scas
xchg
pop
push
or
scas
or
ljmp
jae
insb
loop
shlb
xor
cmp
fstpt
inc
fldt
dec
shlb
push
lds
das
ret
add
xor
repnz
rclb
pop
pusha
mov
pusha
ljmp
or
add
imul
sub
shl
inc
and
hlt
das
loope
rcrb
fs
inc
lret
xor
xchg
arpl
lahf
stos
and
ret
bound
mov
inc
mov
fucomi
cltd
push
push
or
adc
lret
mov
test
movsl
inc
loop
fiadds
dec
cmc
aam
mov
loope
ljmp
aaa
sbb
in
fistpll
je
repz
xor
into
test
add
mov
repz
mov
in
out
fwait
aam
inc
sub
add
mov
pop
add
sub
jl
ror
int3
jle
in
fxch
adc
fistpll
femms
mov
ret
dec
insb
pop
sub
jae
gs
mov
imul
call
shl
stos
pushf
ret
into
nop
inc
ficoms
rolb
sbb
push
repz
ret
repnz
xor
sub
mov
cmp
stos
repz
in
lods
cmpsl
pop
mov
std
pushf
mov
push
xor
inc
loop,pt
mov
lret
pop
jae
les
pushf
adc
pop
jg
std
in
and
sarl
test
ljmp
pop
inc
and
jg
adc
fisubrl
shlb
jg
inc
rorb
sbb
inc
lcall
in
sbb
inc
xor
scas
and
outsl
in
fidivl
in
mov
gs
rcll
cmp
jbe
loopne
xor
je
int3
sbb
repnz
ljmp
arpl
mov
inc
cmp
mov
jmp
cld
rcrb
dec
out
jae
jg
int
sub
cld
inc
adc
and
cmp
in
cwtl
popa
test
les
xor
xor
xchg
das
in
loopne
call
nop
inc
jp
cmpl
dec
stos
pop
push
scas
mov
or
xchg
dec
and
xor
in
cs
jb
sub
mov
adc
repnz
ds
sub
call
outsb
es
sti
ficomps
bswap
stos
icebp
adc
add
aam
aam
lret
or
fwait
mov
sub
adc
inc
push
xor
pop
subb
push
sti
sahf
rclb
mov
fisubl
jo
jp
lods
mov
adcl
ja
stos
cmp
mov
add
aam
adc
sarb
gs
cwtl
insb
or
call
and
xor
pop
aam
negl
aas
xor
nop
cmp
inc
rcrl
fstpt
pushf
outsl
lods
ficoms
outsl
arpl
adc
pop
test
test
out
sbb
or
and
xor
lcall
lret
lods
sbb
aas
mov
xor
mov
sub
push
pop
sti
repz
popa
addr16
int3
or
inc
repnz
retw
aaa
loopne
push
leave
ljmp
mov
adc
cmp
movsl
rcrb
outsb
sub
jp
sbb
dec
xor
mov
imul
push
pop
mov
xorb
mov
popf
test
mov
sbb
and
lret
enter
movsb
cltd
pop
aas
shlb
xor
fs
loop
jl
iret
jns
int
pushf
inc
test
std
out
jle
cwtl
push
add
data16
or
adc
adc
jp
int
jp
lcall
cwtl
repnz
mov
xchg
ljmp
lahf
fwait
add
lds
dec
or
or
aam
sub
adc
stos
cli
gs
sbb
rcll
push
inc
les
hlt
out
js
inc
push
stc
int3
and
fidivrs
and
pop
loop
fwait
icebp
cltd
dec
je
movsb
mov
add
jno
stos
pop
sbb
dec
xor
jle
nop
test
ja
push
and
stos
mov
icebp
jne
inc
dec
xchg
dec
je
mov
inc
dec
scas
jle
shll
pop
lret
loopne
jo
push
aaa
dec
add
xor
cli
cmp
flds
push
in
dec
fildll
mov
sub
inc
push
inc
cld
sub
shll
data16
mov
push
popf
add
pop
es
inc
rcrb
push
cmc
mov
leave
mov
enter
psubsb
sbb
dec
pushf
pushf
xlat
out
out
rolb
xor
xor
inc
dec
out
cmp
testb
or
clc
movsb
jp
xchg
sbbl
xchg
mov
xor
jl
call
pop
mov
testl
mov
je
jbe
fwait
dec
stos
outsl
call
mov
sub
out
fcmovb
mov
out
in
xchg
shlb
cs
data16
lahf
cmp
stc
adc
add
mov
xchg
daa
js
lea
inc
cwtl
add
push
mov
enter
jns
es
adc
sbb
inc
mov
sahf
cli
mov
push
dec
push
push
mov
xchg
mov
push
les
dec
adcb
dec
mov
enter
mov
and
dec
push
mov
lea
inc
mov
nop
mov
lret
add
outsb
mov
stos
repnz
into
or
bound
lods
xorb
cltd
scas
pop
cmp
stos
jne
mov
cltd
cmp
jp
cwtl
pop
dec
popl
mov
les
adc
test
out
fisubl
stos
popa
lock
add
imul
ds
mov
stos
and
pop
jecxz
cmc
and
outsb
jle
cmp
sub
popa
xor
xchg
push
cld
jp
or
add
sbb
mov
in
mov
int
fwait
xchg
arpl
popf
das
jb
dec
mov
jp
fsubl
outsb
test
jbe
xchg
cld
movsb
sbb
or
jmp
stos
and
pop
stos
mov
or
sub
mov
loope
addr16
sbbl
dec
jns
mov
stc
jmp
out
ja
sub
mov
hlt
inc
outsb
mov
in
pop
xchg
jae
movsl
mov
and
fdiv
mov
fidivl
pusha
cmp
out
insb
jge
mov
mov
imul
xor
ret
call
dec
ja
cltd
mov
or
push
adc
mov
lret
loope
cmp
fstpt
popf
and
push
fistl
enter
leave
mov
jge
dec
cld
xorb
stos
jle
xchg
jecxz
inc
pop
ljmp
pop
inc
sbb
je,pn
ja
mov
mov
and
sbb
int
mov
pop
mov
mov
out
mov
add
sub
fiadds
pop
in
push
lcall
mov
gs
cmpl
xor
dec
push
and
or
push
push
addr16
and
push
adc
push
call
mov
push
and
addr16
xchg
mulb
cmpsb
push
pop
fsts
movsl
subb
mov
popf
dec
mov
ljmp
out
popa
stos
mov
jne
mov
insb
or
or
pop
jb
std
shlb
mov
addr16
fs
imul
xor
push
ljmp
add
aam
call
into
jl
xor
or
sbb
fbld
fisttpll
test
jo
or
xchg
imul
imul
dec
scas
fldt
sub
bound
xchg
adc
hlt
mov
das
sub
jo
xchg
loope
mov
add
sbb
inc
cmp
adc
fucomip
enter
mov
cs
push
cmpsl
inc
jo
dec
negl
insl
and
mov
mov
lahf
inc
cwtl
xchg
mov
and
addr16
pop
jb
adc
xchg
out
subb
mov
rorb
mov
lcall
add
push
int
mov
mov
jns
push
pop
loopne
ss
mov
cwtl
cmp
jmp
adcl
ss
iret
inc
push
cwtl
mov
jg
mov
es
inc
test
xor
jne
cwtl
dec
xor
mov
addl
dec
shll
xchg
pop
or
adc
mov
push
push
mov
pop
xor
jo
cmc
dec
mov
pop
push
aas
ja
and
pop
lret
cmpsb
insb
lahf
sbb
mov
xchg
pop
scas
xlat
push
xor
sti
add
pushf
add
std
pop
in
sbb
imul
imul
pop
adc
loop
movsl
fs
inc
sar
mov
repz
mov
sbb
push
aam
push
int3
dec
lea
insl
dec
sbb
jb
aas
stos
push
pop
cld
ljmp
pop
push
adc
out
movsl
mov
push
adc
pop
std
sbb
js
mov
or
jmp
lcall
and
nop
mov
arpl
sub
popf
mov
push
mov
outsb
sti
movsl
adc
push
push
jb
push
sub
jge
cld
aam
repz
xor
jg
lds
inc
pop
sub
movsl
mov
sbb
loope
fildl
add
jmp
cmp
sahf
lcall
jge
adc
in
lret
ret
jecxz
sbb
mov
enter
popf
dec
jne
int
stc
shl
movsl
ltr
js
inc
xor
es
xchg
and
pop
sbb
fisubl
pop
add
pop
dec
cwtl
adc
fcoml
data16
es
xor
adc
pop
mov
cli
pop
jnp
int3
rolb
jnp
out
cltd
mulb
popa
fwait
lods
repnz
mov
push
dec
adc
scas
dec
outsb
cmp
cmp
cmp
xlat
mov
mov
mov
sbb
fisubrl
test
pushf
mov
sbb
jmp
xor
iret
ljmp
mov
aam
cld
sbb
jo
les
inc
in
jnp
testb
mov
mov
aad
push
out
sahf
xchg
or
dec
or
xchg
mov
bound
inc
es
ja
adc
insb
xor
xor
sub
push
test
mov
cmp
lret
sbbl
mov
sub
repz
lea
in
push
filds
sub
das
cmp
out
dec
push
lock
jge
clc
cmp
out
popa
cmp
cmp
push
add
jbe
push
in
rorl
incb
jl
jg
pop
dec
ret
std
mov
cwtl
dec
jle
out
push
iret
stos
mov
inc
xchg
pop
aas
imul
xor
shlb
icebp
loop
nop
leave
or
pushf
fcmovnb
or
adc
push
xor
loop
fwait
cltd
rclb
out
jp
aad
daa
das
mov
pop
aad
shlb
add
stos
test
decb
arpl
or
jno
test
cli
add
test
cmp
xchg
adc
add
xlat
push
idivl
push
adc
xor
adc
dec
sub
and
test
lock
fisttps
pop
out
ss
dec
hlt
les
push
inc
dec
retw
es
push
add
insb
les
and
cmpb
dec
mov
cli
mov
scas
adc
sub
push
lret
iret
mov
mov
stos
mov
addr16
xchg
mov
sarb
fwait
js
sub
fcoml
and
nop
imul
mov
fnstenv
jecxz
add
mov
repz
jmp
fdecstp
ss
cld
sbb
js
shrb
xchg
lea
outsb
pop
cmp
cmp
out
inc
xchg
jecxz
test
call
mov
scas
aaa
sub
ja
out
xchg
mov
jg
pop
lahf
xor
pop
jbe
mov
cli
mov
push
pop
mov
gs
testl
push
pop
mov
or
pop
add
mov
addr16
sahf
jle
lds
and
mov
xor
out
mov
fucom
addr16
out
mov
je
fldl
sbb
mov
inc
adc
mov
xchg
and
mov
pop
rcl
and
sub
dec
andb
ljmp
mov
popa
mov
mov
test
ficompl
cmp
mov
xchg
fwait
and
pusha
arpl
mov
push
inc
lds
mov
loopne
mov
mov
mov
ljmp
lock
pushf
push
aaa
or
stos
lret
lcall
test
repnz
xor
xorb
lcall
mov
xchg
out
in
jmp
push
int
mov
sarl
or
je
stos
push
mov
mov
dec
sbb
call
dec
or
aas
loopne
in
rorl
inc
repz
aaa
pop
cmpsl
mov
filds
dec
ds
jo
cld
dec
or
out
aas
cmp
out
test
ret
sbb
repz
ret
cmp
push
xchg
mov
enter
mov
out
fucom
mov
and
bnd
add
pop
xchg
mov
mov
fwait
inc
xor
add
aam
stc
adc
or
pushf
mov
and
mov
js
push
xlat
sbb
inc
test
and
inc
ret
cs
std
dec
insl
stc
jnp
jae
sbb
sbb
movsl
fidivrs
or
nop
shrb
dec
cmp
mov
ficompl
aas
push
jno
cs
test
iret
popf
sub
or
mov
js
push
les
xchg
push
outsb
ljmp
push
test
pop
outsb
sub
shlb
xchg
stos
nop
push
stos
bound
mov
in
add
pop
lret
in
daa
into
punpckhwd
mov
inc
adc
das
pop
xor
inc
lret
mov
cli
mov
mov
dec
adc
sti
jl
pop
insb
xchg
cli
dec
and
mov
push
inc
and
iret
sbb
ffree
nop
stc
sub
mov
mov
xor
negl
add
dec
mov
not
hlt
mov
sub
sub
mov
push
xor
inc
mov
mov
lock
xor
dec
mov
adcl
inc
clc
xchg
pop
add
or
cmp
mov
xchg
mov
dec
cmp
stc
push
adc
or
sbb
icebp
xchg
insl
insl
fwait
loopne
addb
int3
ljmp
lods
mov
jle
xlat
fadd
mov
push
mov
fwait
imul
push
jecxz
imul
jle
or
cld
out
inc
push
pop
clc
push
test
jbe
inc
faddl
sti
xchg
enter
rcr
adc
popf
push
push
xor
cmp
jo
jge
lods
cmp
or
xchg
imul
mov
dec
test
dec
packuswb
jbe
mov
pop
add
movsb
pushf
sub
mov
or
fsubr
enter
dec
push
lock
mov
es
jno
rclb
in
daa
push
xchg
mov
stos
stos
insl
cmp
add
iret
adc
daa
imul
and
fbstp
or
lret
push
rcl
push
cwtl
movb
add
sti
xlat
dec
jg
fcomps
push
dec
insb
cmp
dec
scas
bound
mov
lcall
les
inc
fisttps
xchg
mov
and
sti
fnstenv
mov
or
pop
test
jl
lods
mov
arpl
mov
jbe
pushf
push
test
inc
pop
sbb
pop
jae
xlat
and
jl
add
cmp
sub
or
ret
add
nop
movb
push
in
pusha
das
mov
dec
testb
or
daa
inc
push
sub
loop
testb
inc
jg
xlat
and
outsl
cmpsl
mov
stc
inc
and
pop
cmp
mov
pop
sbb
adc
fs
cmp
cmpsl
cmp
lahf
sahf
test
push
cmc
mov
mov
js
push
iret
xchg
fxch
push
sbb
inc
sbb
inc
lret
loope
pop
movsb
jg
lods
adc
pushf
cltd
mov
out
aas
aas
ss
jge
stos
pop
jb
aas
mov
orl
xor
push
fistpl
dec
adc
out
cmpsb
add
daa
and
pop
and
push
mov
stos
pop
flds
mov
add
and
cmpsl
shrl
jle
sbb
ljmp
hlt
push
test
es
cmp
adc
cld
jbe
xchg
pop
std
adc
ret
cmpsl
cmpsb
xor
ss
shl
mov
mov
cs
sub
push
lahf
xchg
lret
rorl
adc
fsubrp
jge
pusha
sti
xor
mov
addr16
nop
cmc
add
dec
arpl
repz
fisubrs
into
fistpll
jb
in
std
fidivrl
cmpsb
xchg
and
sub
and
mov
stos
xchg
jbe
sbb
push
lret
pusha
mov
mov
inc
loopne
jnp
aas
push
in
outsb
jmp
sbb
lods
jo
xchg
adc
and
xchg
int3
stc
jp
sti
sub
addb
ss
mov
mov
jecxz
pusha
test
sub
fidivl
loopne
scas
das
data16
xor
or
ja
inc
loope
cmp
scas
sbb
pop
and
pop
test
aad
sbb
lahf
jnp
repnz
aas
mov
mov
test
test
push
mov
fsubrl
mov
add
iret
push
movsl
sub
dec
jno
or
xchg
sbb
push
sub
add
test
mov
adc
in
push
add
mov
inc
push
cmp
aas
jns
sbb
xchg
jne
test
sarl
mov
arpl
fmul
ret
jmp
mov
mov
jno
dec
lret
fwait
loop
mov
add
add
mov
mov
call
cltd
sbb
push
and
pop
mov
arpl
in
dec
cld
cld
jle
leave
cmc
mov
inc
pushf
add
insl
sbb
xor
insl
lret
cld
cmp
lods
xlat
mov
add
mov
cmpsl
iret
mov
insb
int3
sbb
int
nop
in
mov
rcll
lcall
dec
movsl
jg
cmp
add
fucomi
cwtl
or
cli
inc
xchg
adc
fdivl
push
mov
xor
add
ret
push
push
sub
jmp
push
push
jmp
dec
lahf
enter
dec
fdivl
popf
dec
push
inc
add
mov
mov
lahf
pop
lods
outsl
hlt
mov
hlt
pop
mov
xchg
cmp
daa
call
lods
pusha
bound
mov
mov
dec
ljmp
lds
jmp
lcall
add
inc
adc
sub
inc
outsb
push
mov
fsubl
aas
pop
push
arpl
mov
fldl
mov
pop
mov
cli
lea
lods
dec
popa
and
idiv
ficoms
fwait
jns
in
into
pop
mov
add
push
int
leave
or
hlt
mov
test
xchg
data16
lret
and
and
xchg
push
or
mov
scas
jae
jl
push
cmp
pop
mov
cmpsb
int3
pop
addb
jb
pop
xor
cmpsb
popa
mov
decl
jle
ds
pop
stc
arpl
dec
jmp
int
iret
inc
jae
pop
dec
add
xchg
mov
push
popf
xchg
iret
mov
push
xchg
fisttpl
daa
shl
or
mov
xchg
iret
dec
pop
mov
mov
push
cltd
aas
out
xor
cs
sbb
outsb
aam
mov
add
mov
icebp
dec
je
les
in
pavgw
push
or
lds
loope
and
xlat
lahf
sub
pusha
fimull
rolb
or
xor
stos
xchg
jae
ljmp
sub
mov
ds
xor
pop
and
stos
aas
fmull
pop
xchg
jns
sub
fs
enter
leave
clc
dec
out
pusha
adc
notb
popf
xchg
das
cmp
int
imulb
loop
fisubl
fmuls
inc
inc
sub
mov
ret
mov
xlat
mov
cs
dec
and
push
pop
push
jg
mov
ja
sub
popl
push
sti
cwtl
fidivs
sub
mov
push
push
xchg
int
xchg
rol
mov
pusha
sar
sub
and
test
adc
sti
mov
adc
fdivl
xor
lods
popa
adc
stc
or
mov
ffree
aam
test
mov
push
mov
xchg
fs
inc
inc
lcall
pop
dec
adc
adc
add
int3
mov
add
leave
pop
push
cmpsb
aas
nop
push
fsubrl
and
jnp
xchg
or
mov
xchg
mov
rolb
test
ficoms
cli
ljmp
xchg
fistps
insb
adc
and
pop
add
or
out
push
push
and
das
idiv
aaa
pop
mov
xchg
cmp
mov
leave
out
xor
dec
adc
leave
push
add
adc
test
test
in
mov
sbb
testl
imul
jle
inc
jno
pop
sbb
mov
lock
mov
out
addb
pop
into
inc
sahf
cmp
movups
movsl
or
sub
inc
or
std
xor
dec
pop
lret
in
push
pop
cmp
fldt
lock
xor
and
sub
add
mov
dec
int3
sarb
mov
mov
ds
imul
dec
outsb
add
push
shrl
adc
add
test
push
pop
es
dec
stos
inc
pop
push
rcll
mov
out
pop
jb
cmp
das
aam
mov
inc
cs
test
adc
clc
iret
pop
stos
inc
dec
or
andb
sahf
cmpsl
in
leave
inc
cmp
jae
gs
lods
jbe
xor
stc
add
sbb
in
push
pushf
mov
jg
xchg
std
dec
mov
clc
lea
sahf
fidivrs
test
or
add
lea
inc
fcmovnbe
lock
adc
push
xorb
lods
sarl
xchg
sahf
data16
sub
mov
js
in
loop
sub
push
mov
sub
dec
in
sahf
leave
pop
fwait
push
dec
pop
pop
rcll
icebp
les
jne
test
sub
inc
mov
ss
es
cld
incb
lock
sbbb
jno
nop
mov
fdivp
xor
fsts
iret
jnp
jg
dec
cmp
jecxz
aas
and
jle
mov
mov
or
imul
jle
loop
sub
mov
jnp
sbbl
sbbl
cmpsb
pop
je
nop
and
mov
mov
imul
lret
ja
jmp
mov
adc
jge
fdivrs
push
mov
loopne
sbb
lds
adc
mul
adc
push
sbb
stos
xchg
mov
in
jb
mov
icebp
add
daa
insb
mov
push
adc
sbbl
dec
aad
fdivs
scas
clc
fadds
sbb
out
loopne
pusha
les
rcrl
orb
mov
add
test
jb
jge
xlat
jno
or
les
sub
pop
push
cmp
xchg
test
xchg
test
cwtl
xchg
aad
push
push
pusha
bound
jnp
rcll
loope
cmp
cwtl
cmp
dec
leave
ss
daa
jge
leave
sub
dec
insl
xchg
sahf
and
jae
add
lret
movb
pop
or
cmpsl
leave
test
xchg
adc
dec
push
pop
xchg
fwait
add
bound
into
fistpll
cmp
and
ja
arpl
mulb
aaa
cmp
push
jl
sti
mov
fnstsw
and
out
test
sbb
mov
mov
mov
pusha
pop
mov
test
and
out
push
mov
mov
iret
imul
inc
std
clc
or
aaa
cwtl
xchg
ljmp
sbb
xor
jb
mov
pop
insl
cli
aas
mov
dec
pop
cmpsb
out
stc
or
jns
sti
ret
iret
mov
clc
mov
add
jp
inc
jne
mov
push
lods
xchg
mov
xor
xchg
pusha
adc
sbb
aad
or
scas
xchg
xor
dec
mov
or
hlt
jecxz
cmpsl
push
push
in
xor
inc
and
lods
je
xor
xchg
push
add
imul
cs
out
pop
inc
and
mov
flds
cmp
sub
cli
dec
push
or
out
mov
call
xchg
iret
mov
popf
and
mov
mov
pushf
lahf
ficoms
das
cmp
add
aad
ss
fxch
insl
fisubrs
jae
out
sub
inc
mov
pop
and
sbb
clc
jecxz
push
aas
mov
or
je
mov
lret
mov
xor
cmpsl
jge
push
dec
lods
fdiv
in
lods
inc
lret
das
push
mov
adc
pop
xchg
in
inc
mov
fisttps
cwtl
xchg
xor
sbb
lret
int
sti
scas
dec
cld
cmpsb
jle
popa
push
adc
inc
xchg
int
xlat
add
roll
aad
fcmove
sub
adc
xor
ds
sbb
out
in
or
sbb
lcall
xchg
sbb
lock
sbb
xor
out
scas
dec
add
stos
fwait
cli
mov
mov
in
xchg
shr
adc
insl
sbb
call
shlb
adc
dec
cltd
pop
mov
ja
push
add
add
sub
addl
and
xchg
inc
daa
stc
enter
fwait
lahf
or
test
dec
fisttps
lods
lret
mov
push
iret
sub
xchg
sub
dec
jmp
call
sahf
bound
lds
inc
inc
dec
sub
gs
mov
aas
pop
leave
aad
or
sbb
dec
push
jo
in
pop
cld
cwtl
cmp
imul
sub
sbb
jns
xchg
sub
and
out
rolb
cmpsb
leave
fbld
into
xorl
lldt
push
mov
and
outsb
and
cmp
dec
mov
mov
mov
test
and
xor
fldenv
in
add
adc
push
lods
xor
roll
cmp
fisttps
fidivrs
enter
in
addr16
lret
or
inc
sbb
out
mov
jecxz
adc
pop
negl
mov
adc
xchg
mov
int3
xor
mov
std
je
xor
movsl
xorb
pop
mov
xchg
in
cmp
cmp
stos
ror
sbb
call
leave
loopne
pop
fsubrl
pop
dec
jecxz
leave
adc
mull
mov
ss
xchg
xchg
sbb
or
test
or
cmp
fiaddl
lret
sbb
jo
push
xchg
adc
jo
gs
push
loopne
lock
sub
cli
hlt
cmp
adc
scas
push
mov
mov
inc
cmp
jmp
into
test
call
or
into
std
mov
pushf
sub
neg
outsb
push
arpl
push
mov
mov
insb
mov
test
jp
adc
invd
xor
jbe
jb
sti
fwait
aaa
sbb
cmp
movsb
sarl
cmpsl
pusha
ss
sahf
lahf
mov
or
fcompl
jp
stos
notl
bound
mov
ljmp
xchg
xor
int
aas
sbb
clc
mov
mov
dec
push
push
jae
int3
push
popa
aas
fmull
or
jbe
fwait
dec
sub
pop
mov
fstp
int
scas
pop
cmpsl
xchg
pop
pop
call
aas
pop
movsl
outsb
and
stos
ret
xlat
sbb
stos
pushf
jnp
aaa
scas
dec
adc
mov
mov
sahf
cmp
jnp
iret
imul
call
mov
nop
mov
xchg
sub
jp
aad
cli
bound
imul
insl
jnp
mov
xor
jg
popa
shrl
fiadds
or
ficompl
pop
cmp
sti
iret
xchg
test
dec
xchg
dec
fldcw
add
cld
sub
cwtl
leave
jecxz
push
cmp
sti
stos
and
push
mov
leave
ret
sbb
push
add
push
test
sarb
in
jmp
mov
icebp
pop
sahf
dec
or
nop
mov
jno
push
push
out
repz
sub
and
push
cli
stc
dec
lds
loope
xchg
imul
lret
push
pop
call
dec
cwtl
movl
outsl
sbb
push
aam
and
mov
push
pop
pop
loop
sub
rcl
jns
imul
mov
es
out
lahf
mov
mov
xor
inc
out
adc
fcoms
idivl
in
mov
dec
test
aam
cmp
data16
sti
sti
adcb
or
add
rclb
push
out
sbb
pop
sbb
jo
cmp
ror
adc
aas
js
ds
xor
mov
leave
fcomip
outsl
call
dec
jne
push
xor
adc
loopne
lea
xor
push
jnp
les
je
mov
enter
jl
mov
pop
mov
jb
or
loopne
stc
cmp
jo
shl
orb
fwait
add
pop
sbb
popa
and
orb
jle
addr16
mov
ficompl
push
pop
pusha
or
imull
xor
push
mov
cmp
push
jbe
jg
dec
rorb
dec
ret
sbb
add
out
adc
sub
xchg
cmc
inc
repz
dec
fisttpll
sbb
push
sbb
push
adc
adc
mov
xor
jle
das
cmp
mov
ror
push
sbb
or
call
jge
mov
dec
inc
push
imul
cmp
test
cs
adc
in
arpl
cmpl
sbb
mov
jle
imul
sub
push
mov
lret
cmp
mov
or
data16
adc
xor
cmpsl
fisubl
or
inc
mov
jae
lods
or
mov
pop
out
shlb
data16
jl
cmpsl
int3
sarb
cmpsb
movsb
push
lcall
test
mov
test
pop
gs
popf
stc
fdiv
mov
loop
pop
cmpsb
jnp
pmulhuw
std
push
adc
push
sarb
mov
leave
es
movsb
and
movsl
xchg
flds
push
add
jl
xchg
fcoms
out
sarl
int3
sub
lds
mov
lock
cmp
inc
test
lods
sub
popa
dec
adc
rorl
leave
jg
xchg
lret
pop
jmp
adc
cwtl
xor
inc
in
mov
push
loop
je
push
les
pop
push
jp
js
jbe
push
dec
mov
jo
dec
call
and
push
pop
push
jge
cs
ret
jp
push
add
xor
pop
sbb
mov
push
sub
xor
xlat
lods
frndint
imul
adc
cltd
test
pop
jecxz
xchg
out
lods
add
mov
push
in
sub
into
sbb
scas
mov
ret
adc
mov
xchg
pop
jecxz
adc
ljmp
fstps
jne
push
xlat
push
xor
outsl
icebp
bound
xchg
mov
popa
shll
push
mov
rcrl
inc
lods
add
cmp
fs
sbb
cmp
xchg
and
loop
in
pop
test
and
andl
stos
movsl
insl
cli
sbb
stos
das
ja
and
add
xchg
fsts
inc
jmp
lods
mov
out
mov
push
bswap
sub
or
inc
daa
lret
jecxz
sub
out
push
in
inc
fwait
mov
aad
js
push
or
out
jp
pop
shll
lret
popa
jns
fistpl
jnp
fwait
dec
mov
xorl
in
scas
push
lds
sbb
mov
in
je
cmpsl
jecxz
xchg
outsb
sub
daa
sub
int
push
jge
mov
mov
and
jmp
cmp
or
add
stc
pop
lcall
mov
mov
lret
les
pop
aaa
ficompl
clc
inc
shl
mov
inc
inc
test
and
or
mov
add
fiadds
lcall
mov
or
loop
push
lods
jne
shlb
sub
cmp
xor
mov
adc
cmp
out
push
rol
lcall
les
mov
in
aaa
ret
and
iret
xorl
sbb
rclb
lea
push
shrl
sbb
xor
push
cld
xlat
fadd
aad
mov
mov
adc
mov
stos
inc
xchg
lock
jae
pop
loope
repnz
clc
insl
inc
scas
das
scas
enter
fs
xor
pusha
or
pop
je
mov
mov
aad
ljmp
scas
xchg
aaa
lret
jns
and
dec
test
pushf
bound
sub
mov
out
inc
pop
add
loop
inc
lods
jns
add
mov
lea
xor
jne
mov
into
push
jge
dec
xor
sbb
push
call
cwtl
mov
mov
cmc
push
cmpsl
mov
subl
ja
iret
mov
aaa
sbb
shrl
out
push
sub
xor
ret
pop
mov
out
lds
mov
sarb
cwtl
cmp
fwait
push
xor
push
and
xchg
repz
out
insb
out
addr16
mov
loope
pushf
xchg
xor
push
adc
ljmp
pop
outsl
jb
pop
into
test
cmp
sub
popa
fcoml
aaa
shl
adc
inc
sub
je
jp
fldcw
testl
jp
mov
xor
roll
xchg
pop
pop
repz
xor
pop
dec
stos
mov
adc
or
mov
addr16
sbb
cld
mov
inc
movsb
and
movsl
je
mov
pop
pop
faddl
push
orb
and
stos
add
and
adc
insl
hlt
mov
xor
jg
shll
mov
jecxz
je
sbb
add
lret
jo
decl
andb
fidivl
xlat
xor
outsb
cmp
add
inc
inc
ret
add
cltd
sub
je
xchg
outsb
xor
clc
fistps
push
into
lds
and
sbb
pop
js
das
outsl
adc
insb
xchg
int3
fisubrs
inc
jne
cmp
popa
jge
sub
rclb
repnz
clc
push
jl
sbbl
inc
out
inc
inc
adc
sub
cmp
repnz
into
cld
jns
push
out
leave
jg
push
data16
add
fdivs
cmp
int3
popa
jno
push
adc
int3
lahf
repnz
jge
xchg
xchg
dec
mov
bound
xor
push
sub
les
or
sub
subb
outsb
lods
imul
sbb
movsb
ss
adc
mov
cmp
cltd
rclb
ja
cli
andl
pop
push
push
jge
jl
cmpsb
in
pop
push
lea
inc
les
aaa
jmp
popa
inc
pop
lock
or
and
push
push
mov
popf
dec
in
xor
popa
jmp
mov
jbe
movsl
cmp
and
xchg
outsb
add
jg
mov
sti
jmp
stos
xor
sbb
xor
je
movsl
cmc
test
or
add
rcrl
ror
in
jg
ljmp
dec
jecxz
lret
xor
rclb
ss
xchg
pop
xor
and
movsl
sub
lret
pop
out
ja
xchg
lock
popa
mov
pop
je
in
shlb
add
push
imul
inc
movsb
movzbl
xlat
cmp
sub
lods
pop
ret
bound
int3
out
sub
push
nop
jg
or
pop
dec
mov
cli
jmp
data16
sub
sti
insb
inc
repnz
jl
clc
rolb
and
pop
inc
dec
and
out
shll
mov
inc
lea
popa
mov
data16
xor
sbb
adc
js
jns
inc
inc
and
inc
mov
mov
loop
push
test
aam
jp
aaa
pop
xchg
xchg
mov
cmp
fwait
xor
xchg
outsb
xor
pop
xlat
in
add
fs
add
cmp
push
pushl
jo
cmc
jne
pop
push
pop
cmc
hlt
jbe
jne
insl
sbbl
mov
add
or
decb
js
andb
and
test
mov
movsb
in
push
jge
xchg
xchg
insb
dec
lock
fnstcw
cmp
cmpsb
popa
data16
xor
push
adc
push
jnp
sbb
pop
xor
mov
icebp
sbb
scas
popa
into
filds
call
nop
cmc
cmpsl
sub
scas
mov
cmc
bswap
stos
test
mov
sub
xchg
leave
nop
decb
ficomps
popa
ror
mov
pusha
and
cwtl
pop
cmpsl
dec
mov
aam
sub
inc
and
push
adc
mov
add
xor
popa
and
or
push
mov
mov
aam
jecxz
stc
je
pop
jb
fcmovne
push
sub
xor
inc
aad
xchg
gs
fsub
xor
dec
mov
dec
je
add
mov
rcrb
fists
ljmp
xor
inc
in
inc
fcmovnu
pushf
adc
rorb
and
mov
nop
imul
in
jmp
xor
jmp
push
ljmp
icebp
push
incl
add
xchg
cmp
xorb
inc
xchg
mov
adc
or
outsb
adc
push
cltd
arpl
and
icebp
bound
pop
xor
xchg
movsb
dec
lods
pop
sub
dec
mov
out
jle
jno
notl
movsb
dec
cmpsb
inc
sbb
push
das
jbe
fistpll
fisubl
mov
xchg
mov
loope
int3
mov
test
test
jmp
addr16
ss
inc
mov
dec
in
stos
rcrb
repnz
sbb
dec
mov
add
sub
lcall
and
orl
xlat
scas
mov
ud1
jmp
mov
xchg
push
aam
mov
add
outsl
and
mov
dec
inc
fwait
jp
jge
cmp
add
and
addr16
popa
inc
inc
test
push
dec
icebp
sub
pop
sub
movsb
int3
in
jnp,pn
sbb
or
lods
popf
jno
repz
inc
adc
popa
push
jmp
scas
pop
mov
frstor
leave
andb
test
in
outsl
push
add
jge
loopne
cmp
ds
mov
dec
loop
jae
dec
ss
push
outsb
arpl
shrl
fsincos
cmp
push
lcall
xchg
push
mov
pmaddwd
in
pop
in
aam
push
insl
std
xor
or
mov
aam
and
jnp
addr16
mov
andb
mov
push
orl
sti
outsl
push
xchg
lds
pop
lea
je
roll
mov
cmpsb
inc
add
sub
lds
rcl
loop
pop
dec
pushf
lcall
inc
rclb
jmp
xchg
cmp
lods
arpl
dec
mov
outsb
xlat
adc
sbb
adc
aam
dec
xor
pop
mov
or
ljmp
cmpsb
cltd
out
es
test
scas
dec
icebp
sub
xchg
ret
jne
add
call
addb
push
mov
lds
into
push
sub
fs
lcall
loop
xor
ficomps
icebp
xlat
jg
sbb
int3
pusha
push
dec
fidivrs
cli
mov
addb
mov
iret
mov
scas
xor
arpl
fst
jmp
mov
fildl
xchg
aaa
js
mov
in
scas
lcall
cld
addb
bound
cmp
popa
and
mov
inc
mov
cmp
jo
mov
std
sub
inc
andl
cwtl
push
iret
sub
jg
mov
jmp
xor
adc
xor
mov
cmp
xor
aas
sbb
popa
lods
popf
notb
dec
cwtl
addr16
sub
outsl
add
mov
aas
mov
add
das
adc
fildll
adc
inc
insl
pop
insl
or
pop
dec
mov
dec
enter
add
xchg
xor
int3
cmpsb
and
sub
or
insl
cmc
dec
dec
mov
add
jns
imul
mov
sub
xorb
dec
out
xchg
lods
in
xor
xchg
out
push
cltd
push
ljmp
pushf
dec
orl
fnstenv
mov
addb
cmpsb
xchg
sub
cmc
icebp
xchg
lods
mov
xchg
jnp
ret
cmp
mov
hlt
gs
test
hlt
scas
cwtl
add
xchg
push
jmp
mulb
and
pop
inc
int3
loopne
movsl
mov
pop
inc
or
lods
or
insb
in
int
ja
call
out
push
aaa
fimull
push
sbb
adc
mov
les
test
adc
loope
xor
dec
ds
add
stos
cmpsl
inc
jnp
inc
xchg
jns
mov
ficoml
xor
push
push
mov
cmp
dec
jl
xchg
dec
sahf
push
sub
movsl
into
ljmp
cmp
jbe
push
js
aas
jl
fadds
push
ret
mov
mov
jge
in
add
loopne
fldenv
pop
jg
pop
jmp
push
test
lods
mov
stos
mov
and
fidivrl
jnp
inc
sub
test
clc
push
pop
xor
or
lock
insb
stos
xor
cs
jl
in
dec
mov
mov
adc
add
jp
cmp
in
out
push
pushf
inc
out
dec
jno
hlt
iret
std
or
add
inc
scas
inc
ret
push
pop
aas
dec
out
xchg
mov
mov
test
sub
stc
stc
jo
sti
xchg
and
mov
or
dec
push
inc
mov
and
fldenv
xchg
mov
scas
add
es
dec
pop
xor
mov
push
pop
sub
stc
adc
push
jecxz
push
ljmp
inc
or
push
xor
ret
out
pop
fcoms
mov
and
mov
push
xchg
data16
push
lret
pop
es
dec
jl
out
lahf
cmc
xor
out
adc
pop
jno
jnp
lret
cmpsb
inc
mov
imul
mov
add
aas
lea
xchg
arpl
cmc
sub
fwait
jge
push
loop
rorl
jae
pop
imul
lds
cmp
insb
lret
xor
cltd
ss
cmc
xor
popf
fcmovnu
inc
sub
and
push
sub
mov
jge
pop
pop
mov
sbb
fisubs
js
std
xchg
rol
les
sub
shrl
mov
or
or
sbbl
adc
into
aam
mov
pop
or
loope
fsubs
mov
xchg
mov
pop
adc
std
outsl
jg
inc
rclb
mov
xor
jne
hlt
arpl
sbb
jmp
mov
jnp
inc
and
hlt
sub
loope
mov
sub
xorb
mov
push
cli
inc
jnp
xorb
ffree
mov
xor
arpl
jae
mov
adc
sti
icebp
adc
xchg
bound
pop
add
loopne
int
jge
jl
xchg
sbb
mov
inc
mov
mov
xor
cwtl
push
lahf
mov
adc
imul
jl
imul
jne
push
pop
out
into
cmp
push
gs
mov
pushf
lea
xor
and
pop
pushl
jb
nop
mov
inc
mov
pop
mov
int3
sti
jne
mov
rcl
cmpsb
and
test
pusha
mov
cs
std
xor
and
or
fstps
das
jno
jno
mov
test
idivb
out
pushf
repnz
lcall
rcrl
ljmp
shlb
pop
mov
mov
cmc
outsl
sub
movsl
test
pop
divb
mov
mov
sub
shll
test
sahf
xchg
daa
push
je
hlt
shrb
ficomps
xchg
xchg
pop
mov
das
popf
add
mov
das
sub
cmp
pop
in
out
add
jp
pop
sti
adc
loope
movsl
aad
cmp
mov
js
push
mulb
dec
daa
imul
pop
outsb
and
push
mov
loope
int
cmp
rcll
mov
pop
adc
pop
das
outsl
addl
mov
sbb
jb
adc
xorl
lret
fdivrp
aas
sbb
push
aam
movsl
dec
xor
gs
out
mov
xchg
dec
fcomip
inc
std
sbb
dec
sbb
sbb
mov
arpl
pushf
hlt
mov
mov
lods
movsb
rorl
hlt
xor
imul
inc
lock
jb
lret
adc
in
sbb
fwait
in
lahf
adc
or
mov
fcmovu
dec
imul
push
add
and
mov
stos
pop
insl
push
fnsave
sub
movsb
mov
jb
insb
mov
push
dec
shrl
ss
testl
cmpsb
jo
sub
mov
jl
and
shll
popa
lds
cmp
jecxz
movsb
or
addl
mov
mov
nop
xchg
fs
les
mov
loope
mov
xlat
fs
cmp
dec
fnsave
pop
cmp
popf
nop
mov
mov
pop
cmp
add
mov
cmp
std
ds
lahf
popf
fsts
ficompl
iret
lret
lret
mov
jg
repnz
push
mov
lock
or
mov
mov
fs
mov
push
push
mov
clc
scas
jg
xor
pop
pop
call
sub
inc
jno
or
sti
jnp
outsb
pop
cmpsb
fistl
ds
out
xchg
fmuls
out
cmp
lahf
fildl
adc
test
push
mov
jle
jl
aas
add
hlt
or
lods
aaa
fldl
pusha
pop
leave
and
fstpl
fmuls
adc
xor
ficoml
bound
rorl
call
roll
fistl
adc
mov
sbb
xchg
clc
cld
fstl
adc
push
stc
dec
mov
mov
cs
xchg
sahf
cmp
arpl
dec
icebp
data16
jecxz
add
xchg
sub
push
ds
mov
cld
cmp
lock
lea
push
int
inc
std
leave
xor
rcl
push
push
arpl
outsl
pop
cwtl
scas
sub
out
mov
fldl
xlat
push
and
sbb
cmp
es
bound
test
cmp
mov
mov
cwtl
inc
sbb
insl
movsl
jbe
pop
icebp
pop
xchg
ja
xor
add
xlat
sub
add
test
scas
aam
push
mov
imul
xchg
inc
shr
mov
pop
jmp
call
and
repz
scas
repnz
mov
repnz
jl
adc
push
jmp
aam
or
lock
mov
cmp
push
js
jns
mov
pop
pop
pop
in
cmp
mov
leave
cmc
cmp
daa
push
jb
test
enter
cld
nop
lods
aam
shrl
hlt
push
lahf
repnz
out
daa
daa
fdivs
mov
xchg
inc
cmp
scas
insb
rol
or
and
cmp
xchg
pop
int
pop
pop
mov
lds
lods
mov
not
and
scas
push
iret
push
mov
pop
sbb
popf
and
aam
inc
ljmp
shl
cltd
lods
scas
out
scas
test
pop
lds
hlt
lcall
bound
roll
aas
jge
bswap
pop
out
and
mov
fwait
sub
push
dec
xchg
jmp
adc
cwtl
leave
adc
or
lds
lea
daa
xlat
push
stos
ficompl
add
stc
idivl
mov
movsl
ds
call
push
jo
scas
cmp
scas
sub
xor
jmp
add
mov
pop
sbb
mov
pop
and
lcall
push
mov
sub
push
dec
pop
or
jne
mov
xor
and
repz
out
jbe
icebp
cwtl
daa
push
sti
aaa
dec
out
sbb
jmp
push
jmp
adc
or
xlat
repz
mov
sahf
or
mov
mov
sti
outsb
jecxz
movsl
mov
jbe
addb
sub
fwait
js
repz
push
cmp
out
dec
add
test
data16
stos
imul
adc
out
dec
cwtl
rcrb
xchg
cmp
fcompl
bound
leave
rcrb
cwtl
inc
xchg
testl
popf
xchg
jno
daa
sahf
pop
test
pop
in
inc
pop
xor
xchg
dec
add
in
loope
sbbl
mov
movb
inc
sub
mov
push
pop
das
dec
jns
push
ds
icebp
fidivrs
mov
mov
inc
push
adc
adc
jbe
mov
scas
mov
out
push
cmpsl
xchg
aaa
add
jno
stos
sub
inc
repnz
cs
xor
flds
outsl
mov
sahf
adc
ffree
in
fmul
inc
sbb
imul
cltd
jbe
mov
sbb
out
adc
cmp
test
push
or
pop
pop
popf
scas
xor
pusha
aam
testb
pop
pop
rolb
and
sbb
es
inc
ret
mov
adc
fidivrl
mov
fwait
imul
stc
aad
jae
sbb
jb,pn
cwtl
clc
fdivrs
cmc
ja
sti
pop
sub
test
insl
ds
add
mov
xor
cmc
mov
pop
pop
call
loopne
sub
push
arpl
les
mov
inc
dec
pop
loope
cmpsl
xorb
push
es
aad
movsb
aas
or
cmpsb
inc
es
jmp
sbb
pop
es
in
enter
out
xchg
sbb
std
popa
lret
scas
lahf
add
dec
dec
sub
enter
lret
mov
dec
ret
mov
stc
je
ljmp
push
lret
mov
pop
jmp
daa
mov
test
xor
xor
push
mov
sahf
stc
sbb
mov
hlt
cmc
push
sahf
mov
sbb
dec
test
push
push
and
adc
fisttps
and
repz
rcrb
das
xchg
into
sbb
lea
ror
xchg
add
xlat
fidivrl
sarb
lea
mov
repz
mov
shlb
dec
repnz
push
add
cwtl
xchg
sbb
adcb
ja
rorb
scas
mov
scas
aad
mov
aas
ja
add
aam
fucomp
lret
push
aad
clc
mov
inc
xor
jp
cltd
cs
fstl
leave
mov
loope
mov
or
pop
add
inc
xor
adc
pushf
std
repnz
xchg
sub
fidivl
bound
mov
aas
jbe
fs
add
je
dec
call
push
jg
mov
push
insl
sub
cmpsb
cld
and
mov
mov
addl
cmpsl
add
mov
lods
aad
inc
xor
and
stos
mov
push
mov
das
add
mov
xor
jns
push
icebp
push
aas
lret
fldcw
insb
pop
push
in
or
mov
mov
xor
mov
add
cmp
out
incb
pop
jle
popa
mov
pop
sbb
jge
sub
test
shl
adc
aad
das
sbb
cmp
fwait
aam
js
mov
push
repnz
xor
icebp
mov
outsb
sbb
adc
pop
inc
jecxz
xchg
ret
faddp
mov
js
test
sub
cs
dec
popa
addr16
cmc
popf
je
aas
dec
lods
mov
push
mov
xlat
sbb
push
push
cli
pop
jne
cld
jo
cwtl
inc
rclb
fdivr
push
push
mov
sub
shll
sbb
mov
sbb
loope
jo
fxch
mov
daa
cmc
loop
pop
sbb
mov
test
push
in
rcrb
inc
push
add
ret
jnp
mov
bound
add
data16
jmp
icebp
ret
shlb
insl
lods
insl
xchg
jns
faddl
in
push
or
aam
repz
scas
lea
test
add
jae
ret
int3
popa
sub
inc
test
sbb
and
stc
push
xor
icebp
rclb
push
ficomps
inc
shl
jae
icebp
inc
js
jecxz
std
lcall
pop
aam
das
ds
mov
push
jns
scas
cltd
leave
pop
cltd
movsl
sub
scas
mov
gs
fnstcw
mov
outsb
sub
sbb
xor
mov
aam
in
in
and
inc
mov
xchg
les
nop
inc
lods
sbb
bound
popf
mov
sahf
jge
xchg
or
xchg
and
fcomps
mov
jne
pop
outsb
dec
jl
rolb
inc
inc
cmp
inc
mov
dec
fs
push
inc
pop
addr16
dec
rcll
mov
mov
aaa
test
std
insl
ret
xor
leave
ret
lock
hlt
psraw
push
cmp
xchg
mov
test
mov
sbb
dec
jnp
mov
movsl
xor
ljmp
jle
mov
inc
xor
push
bnd
cmpsb
push
jmp
fnsave
lcall
rclb
daa
out
lcall
pushf
cmpsl
fxch
mov
sub
outsl
in
sbb
jmp
fwait
cmpsb
xchg
cmpsb
ljmp
imull
mov
lea
hlt
cmp
jns
jns
or
push
pop
icebp
mov
lock
dec
test
test
outsb
mov
jle
inc
call
and
into
fdivr
fidivrl
aaa
xorl
ret
or
lcall
shll
inc
lds
pop
lds
test
icebp
mov
dec
clc
xor
mov
mov
mov
out
xor
mov
xlat
cmp
imul
lds
and
pop
daa
or
mov
test
jae
mov
loopne
cmpsl
leave
cltd
dec
enter
sub
mov
out
add
aad
add
pop
test
mov
divb
sti
inc
shl
push
cmp
ficomps
mov
adc
shll
movsl
lret
outsb
outsb
inc
and
jl
mov
push
mov
cld
jp
ret
cmp
loop
push
ja
je
push
lea
jnp
xchg
adc
sub
sub
push
cmc
int3
push
push
lods
ds
jb
cld
cmp
jmp
mov
dec
cltd
das
xor
testb
mov
inc
sbb
les
cmp
stos
sbb
mov
test
fsubrl
inc
orl
pop
arpl
jae
sahf
inc
mov
push
jp
jl
lock
mov
daa
dec
pop
fbld
xchg
daa
sbb
xlat
add
in
add
inc
mull
or
or
inc
and
movsb
jg
test
or
jae
xor
ficomps
iret
insl
sbb
mov
addr16
int
rcll
push
pop
jno
data16
cmpsl
cli
sbb
mov
dec
or
test
mov
hlt
xor
xchg
movsb
push
je
fsubl
pushf
mov
pop
shll
test
scas
iret
sbb
or
ret
stc
xchg
call
adc
cs
or
adc
jl
aaa
mov
push
aad
mov
test
popa
lods
popa
jnp
sti
mov
add
rolb
faddl
push
les
imul
push
cmp
ljmp
in
rcl
int3
xchg
js
adc
sub
mov
cmpsb
pop
cli
popa
jo
je
scas
add
mov
adc
mov
mov
in
add
rcrb
fildl
addl
mov
in
js
clc
inc
mov
jns
in
cmp
scas
xchg
inc
leave
out
xchg
xor
leave
popa
test
out
jo
lock
movsb
mov
stc
mov
pushw
mov
and
cld
into
loop
mov
xorb
fiaddl
mov
rorb
std
es
lods
jp
outsl
test
add
inc
adc
sarb
jmp
sbb
or
mov
aas
leave
pushf
fxch
ss
jg
sub
jbe
rclb
lret
and
ficoms
inc
fstl
xor
lret
adc
cmp
fneni(8087
in
pop
jno
mov
add
clc
jmp
cmpsb
xlat
sub
fdivrp
stc
andnps
xor
in
pop
sti
out
cmp
and
pop
mov
scas
and
lcall
popf
xchg
rorl
cmpb
aaa
mov
xchg
inc
mov
fsub
rorb
test
add
bound
lods
movsl
and
adc
inc
icebp
jp
jbe
pushf
or
adc
dec
fstpl
fidivrs
in
inc
or
repnz
mov
mov
sbb
add
scas
mov
jns
out
ss
cltd
mul
xor
mov
adc
adc
fmull
aad
and
xchg
testl
lcall
movsb
scas
and
and
xchg
subl
data16
int
test
cmp
xor
pusha
add
mov
lods
cwtl
jmp
cmpsl
mov
adc
xchg
inc
or
add
push
lahf
bound
push
in
jge
scas
mov
jecxz
arpl
scas
dec
xchg
test
loopne
je
lret
in
fcoml
fsubrl
jns
and
pop
mov
xchg
insb
ss
or
in
xchg
mov
xchg
int3
push
movsl
sub
sbb
jnp
movsb
push
bound
cmp
in
mov
add
clc
dec
mov
mov
stos
bnd
fldt
fwait
into
jo
push
sub
push
sbb
lea
jb
jne
mov
dec
jge
jae
int3
lcall
mov
xchg
jo
aam
out
xchg
add
addr16
inc
clc
adc
add
mov
add
mov
push
xor
sbb
xorb
push
hlt
jb
and
dec
and
dec
adc
mov
loop
movsb
or
jle
repz
out
lods
adc
mov
sub
fucom
outsb
push
add
cmp
and
mov
divl
bound
fwait
mul
jnp
sbb
in
int
sub
lock
mov
lods
lret
push
bound
je
cwtl
mov
fs
shrb
out
in
clc
xor
and
cwtl
decl
sbb
fucomi
add
xchg
in
xor
clc
jmp
test
mov
push
push
add
orb
adc
add
inc
xor
fisttps
pushf
stos
psadbw
sbb
cli
test
imulb
jae
add
clc
dec
arpl
iret
xchg
pop
xchg
adc
fwait
imul
cmp
ja
je
and
repnz
insl
dec
mull
xchg
xor
sbb
mov
pop
test
repnz
js
jns
pop
shlb
add
sti
out
push
inc
inc
fldenv
repnz
orb
mov
cmp
xchg
cmpsb
pop
test
xchg
cwtl
jge
adc
out
jae
addr16
ds
mov
and
rsm
inc
imul
inc
mov
sbb
shll
sbb
out
sub
lret
ss
out
movsl
stos
daa
lret
andl
push
gs
arpl
mov
in
pop
pop
and
lretw
xchg
fwait
xchg
lea
mov
in
inc
adc
xor
push
mov
cmpsl
daa
hlt
push
jl
and
jne
mov
push
push
in
push
in
add
outsl
fmuls
xchg
sbb
or
cltd
dec
xor
js
leave
insb
test
outsb
pop
or
out
lds
xchg
repz
mov
inc
inc
sbb
std
mov
or
les
sahf
push
stc
in
lahf
mov
aad
sbb
sarb
mov
stos
jne
sbb
ss
sub
mov
cld
mov
sbb
mov
fs
adc
orb
add
arpl
adc
xchg
lcall
notl
leave
inc
ret
xchg
in
cwtl
in
int
loope
movsb
insb
jge
sub
or
sub
pop
popa
fwait
into
xchg
cmp
lret
mov
jnp
sub
loopne
cmp
push
jns
lret
jmp
aam
mov
and
test
fcom
jns
sbb
das
xor
push
lock
sbb
stos
jg
mov
xlat
mov
mov
push
pop
or
mov
bound
mov
sbb
movsl
movsb
pop
adc
dec
je
sbb
addr16
xchg
cmc
out
cmp
pop
pop
sub
inc
jnp
sbb
jle
adc
mov
rcr
cmpsl
inc
lods
mov
fnsave
sub
das
xchg
push
subb
out
mov
push
adcl
test
stos
jmp
mov
test
inc
mov
xchg
idivl
push
sbb
cmp
hlt
movsl
cmp
push
mov
or
lcall
cmp
call
out
fisubs
iret
jecxz
jns
xor
mov
add
negb
xchg
and
sarl
insl
sbb
scas
dec
mov
das
arpl
mov
psubb
dec
test
xlat
imul
mov
popa
xlat
fisubrl
xlat
hlt
jl
xchg
movsb
out
jb
lahf
idivb
xchg
shrb
push
jns
loop
mov
pop
push
mov
inc
mull
shrl
lret
xchg
inc
gs
xchg
pop
cmpsl
add
popa
aam
ret
repnz
xchg
movsl
pop
fiadds
rorl
and
add
shlb
sub
rcrl
xchg
cmpsl
sti
lea
fnstenv
sbb
daa
xor
lret
cli
mov
jae
xchg
xor
test
scas
test
andl
popf
sbb
mov
mov
cmp
and
cmpsb
cmp
pusha
out
bound
xchg
xor
sti
in
data16
movsb
pop
pop
loope
mov
push
test
arpl
ficomps
jecxz
jl
rcll
aas
ret
repz
mov
into
lods
mov
out
mov
cmp
enter
adc
sub
imul
into
mov
inc
cmp
and
les
scas
and
cwtl
shlb
cwtl
dec
iret
mov
adc
inc
clc
imul
popa
mov
mov
xchg
daa
out
add
roll
mov
adc
ficoml
inc
js
sti
xor
xchg
notb
sbb
fstpt
sbb
jmp
popf
fcmovbe
xor
in
arpl
cmp
inc
xlat
out
mov
insl
jne
lea
dec
push
push
mov
push
mov
push
sti
push
pop
je
jl
into
dec
or
and
mov
push
jmp
jl
xchg
add
lcall
aas
nop
pop
inc
xor
mov
pop
outsl
sub
cltd
or
int3
cmp
shlb
outsb
pop
cmp
push
mov
subl
ret
and
xchg
xchg
adc
pop
sbb
pusha
push
xchg
push
pop
mov
lods
in
imul
sbb
mov
cmc
flds
pop
frstor
loop
fstpt
mov
xchg
ficoml
cli
cmp
orl
xlat
iret
into
daa
sub
or
jo
ljmp
loop
outsl
jl
cs
mov
jb
push
rcrb
out
push
dec
push
insl
jecxz
cs
insl
movsb
stc
jmp
and
pushf
mov
pop
stos
loop
js
mov
jg
xchg
hlt
pusha
mov
repz
jg
mov
jb
mov
insb
jbe
fnsave
rcrl
std
push
lret
sti
std
dec
or
paddd
or
dec
ss
imul
bound
inc
inc
inc
sahf
xor
dec
jb
leave
or
repz
shlb
mov
jo
leave
cwtl
imul
xor
cli
or
push
popf
pop
test
push
xchg
cmp
push
scas
decb
inc
cmp
fsubs
jl
push
pusha
mov
repnz
pop
jp
adc
fbstp
add
and
inc
ss
push
mulb
out
sbb
push
sub
mov
jmp
mov
loope
mov
add
adc
out
incb
mov
fnsave
outsb
dec
lock
jns
aaa
fldcw
mov
jns
lods
and
xchg
lods
adc
out
jle
scas
cmp
mov
jo
sub
push
cmpsb
sub
in
push
sbb
adc
xchg
add
push
cmpsl
movsb
jg
sbb
jne
mov
mov
add
loopne
out
shrl
push
mov
xor
jne
inc
mov
les
pop
out
sbb
insl
dec
incl
xchg
jae
or
lahf
rcl
add
adc
js
das
xchg
pop
or
dec
idiv
xchg
sub
push
fwait
ljmp
adc
sbb
rcl
push
sub
mov
xor
into
in
pop
daa
imul
cmpsl
aad
inc
xchg
rol
cmpl
sbb
mov
push
jne
mov
mov
js
pop
test
daa
lds
jne
and
outsb
adc
dec
xchg
push
sbb
adc
dec
mov
and
or
repnz
lds
adc
xchg
rorl
and
in
pop
and
xchg
mov
mov
repz
ret
cmc
sub
xor
cmp
data16
outsl
push
inc
enter
sub
cmpb
repz
adc
dec
xor
xchg
lcall
lret
test
shr
pop
cwtl
rclb
mov
enter
data16
hlt
int3
dec
xor
scas
xlat
adc
dec
outsl
or
in
pop
mov
xchg
pop
lcall
pop
out
lret
std
leave
pop
mov
les
jne
add
fmull
pop
xchg
test
lods
xor
fisubl
in
push
fs
insb
inc
adc
sarl
loopne
inc
mov
pop
sub
pop
shr
push
mov
jo
jg
dec
dec
or
ljmp
enter
mov
fucomp
iret
fcomp
mov
dec
mov
fidivs
test
mov
stos
jmp
in
pushf
mov
lds
dec
ss
loop
nop
xchg
cld
cld
hlt
sub
add
pop
sub
sahf
fnsave
cmp
lcall
xor
daa
inc
outsb
out
push
fdivl
xor
xchg
pop
or
in
mov
xchg
sbb
les
sti
cmpsl
adc
clc
or
lcall
nop
add
in
xchg
lret
mov
fcompl
lcall
jnp
out
movsl
sbbl
or
or
fldenv
gs
xor
mov
out
push
mov
std
xchg
int
imul
mov
stos
mov
nop
je
mov
nop
clc
or
shrl
aas
mov
lcall
add
test
jecxz
or
pop
sbb
mov
mov
push
mov
xor
mov
filds
or
cmp
shlb
enter
and
sbb
insb
in
fsubs
cwtl
ja
push
mov
stos
sub
mov
arpl
cmp
cmp
sahf
mov
jmp
test
push
xchg
sub
outsl
xor
decl
rorb
aad
xor
pusha
jecxz
fidivs
stos
shll
push
stos
ljmp
inc
mov
dec
stos
addb
push
mov
dec
scas
sub
mov
jnp
enter
xchg
and
lcall
xor
or
sbb
adc
popf
or
inc
jbe
icebp
pop
cltd
mov
fxch
mov
jbe
ror
nop
jns
mov
sub
repz
xor
jne
or
daa
les
sbb
mov
add
imul
lcall
cli
repz
test
adc
and
jns
iret
and
mov
sub
pop
popa
mulb
xchg
mov
cmp
fcmovnbe
xorb
mov
roll
fnsave
bnd
jnp
xchg
fcmovnbe
mov
fwait
push
add
loopne
rorb
lock
shrb
aam
mov
mov
rclb
pop
mov
mov
jns
mov
sti
cwtl
es
mov
mov
outsb
repz
xchg
mov
mov
ljmp
les
xchg
add
les
lahf
dec
ret
call
lock
es
mull
fcomps
mov
inc
aaa
sbb
aaa
out
add
cld
stc
mov
int3
jp,pn
aaa
stos
xchg
lret
sbb
push
xchg
cmpsb
aad
test
sbb
ss
push
popf
mov
xchg
adc
repnz
cmp
ret
sub
lods
repz
imul
fisttpll
cmpsb
pop
data16
fwait
push
push
inc
mov
pop
xor
rol
fsubrl
xor
int
pop
into
loop
xor
mov
push
inc
stc
dec
cwtl
jle
outsl
xchg
hlt
outsl
into
mov
loop
xor
outsl
pop
pop
addr16
stc
into
and
ljmp
ljmp
pop
popa
cmc
insb
pop
imul
mov
xlat
or
sbb
cmp
xchg
es
int
or
pop
jp
pop
push
inc
mov
adc
xchg
lcall
xchg
inc
sbb
fldt
and
jle
out
mov
sbb
movsl
movsl
pusha
xchg
mov
pop
push
inc
imull
cmp
pop
inc
mov
inc
test
inc
jae
push
std
ret
aad
and
popf
popa
jl
jne
dec
dec
adc
mov
mov
add
add
fwait
stos
in
fnstenv
fcomps
dec
mov
and
mov
fildl
pushf
xor
push
cmp
rol
movsl
in
lods
jno
xor
inc
xchg
pop
mov
pop
pushf
cmc
xchg
pop
rorl
fnstenv
dec
leave
adc
mov
or
in
push
mov
dec
movsb
lahf
xchg
out
pop
andl
cmp
cmp
popf
cs
ffreep
outsl
jo
xor
out
mov
stos
mov
sarl
movsb
sbb
scas
shlb
out
aaa
nop
pop
inc
pop
cwtl
jecxz
or
sub
fstp
lret
in
mov
call
scas
ds
insl
pop
mov
subb
rorl
sub
rcll
into
inc
mov
aad
jle
lds
push
xchg
sbb
ss
cmp
daa
imul
out
add
jl
hlt
push
out
lahf
dec
in
enter
inc
inc
aad
jle
push
and
jmp
mov
cmp
xchg
sub
xchg
daa
jge
xor
sahf
sahf
add
movsb
rorl
repz
and
sti
in
icebp
or
dec
pop
into
push
jle
in
fwait
mov
repz
cmpsb
and
jl
sbb
stc
das
stos
repnz
mov
call
add
aad
xchg
xor
jno
or
loope
pop
loop
xchg
push
or
clc
mov
out
xchg
mov
sti
cmp
sbb
add
or
or
setne
mov
xorl
out
daa
or
and
xor
jge
icebp
mov
push
lods
psubsw
out
rol
sbbl
lods
cmpsb
xor
iret
mov
adc
test
add
pusha
dec
xor
push
pop
cmp
sbb
mov
jae
out
loopne
or
add
mov
push
pop
loopne
aas
sub
mov
dec
jp
dec
mov
push
mov
mov
or
jp
aaa
mov
cmc
jbe
inc
push
es
sbbl
jno
fxch
cld
xchg
int
inc
outsb
iret
jnp
fmuls
cmc
aaa
inc
sbb
xchg
dec
std
pop
sub
dec
sbb
xchg
cmp
repz
push
jo
cmp
pop
mov
in
sub
adc
aas
cmp
cs
rcll
mov
adc
pop
cltd
jge
pop
cmp
xor
xchg
decl
mov
dec
dec
push
insl
mov
scas
pop
out
cmp
dec
test
test
mov
mov
lock
hlt
mov
push
pushf
outsl
outsb
mov
pop
inc
sub
rcrb
xlat
xorb
cmp
lds
add
fwait
xchg
testb
mov
std
mov
xchg
dec
aaa
cwtl
stc
fstpl
xchg
imul
mov
in
movsb
movsl
aam
xchg
push
xor
mov
mov
ds
leave
mov
add
cmpsb
in
addr16
cld
aam
mov
sub
push
pop
push
jmp
repz
or
pop
icebp
test
add
push
mov
cld
movsb
pop
lea
add
ss
loope
xlat
rcr
sbb
mov
sub
push
out
shll
lret
ret
push
scas
in
ret
xor
sub
sbb
rolb
lods
ss
cmp
mov
fnstsw
dec
lcall
inc
pushf
xchg
sub
adcb
aaa
rolb
cmpsl
sub
repnz
xchg
cwtl
dec
cmp
jb
or
xorl
jns
sub
ljmp
xor
lret
xchg
sbbl
in
xor
nop
outsl
pop
aam
ss
xchg
jae
mov
mov
xor
or
mov
push
test
push
adc
pop
mov
mov
in
popa
add
and
inc
ds
mov
jb
mov
lret
push
jecxz
inc
mov
xchg
mov
mov
test
out
mov
std
mov
fwait
arpl
and
repnz
mov
frstor
cmpsb
cmpsb
in
push
dec
pop
sbb
jp
cmpl
cmp
arpl
data16
dec
or
sbb
cmp
inc
sub
ljmp
and
rolb
clc
in
xchg
push
jg
imul
pop
push
xchg
mov
outsl
out
or
enter
mov
rolb
mov
inc
sub
and
add
or
mov
aam
jbe
sub
mov
fwait
outsl
imul
push
pop
mov
clc
rorl
push
cs
jns
ret
push
insb
fiadds
les
sahf
pop
adc
push
pop
repnz
jge
pusha
and
movsb
xor
es
inc
inc
clc
ds
popl
out
cld
mov
mov
nop
sbb
notl
lock
sub
dec
push
push
shlb
jns
xchg
sub
pop
fimuls
test
and
mov
jecxz
jl
movl
inc
sti
fdivs
sbb
mov
addr16
inc
outsb
mov
sbb
popf
or
cld
adc
pop
call
add
fsub
cli
lea
fldenv
push
jmp
scas
arpl
inc
cmpsb
insl
rcrb
sbb
sub
and
push
ds
ffree
adc
arpl
rcll
sub
and
mov
mov
mov
xchg
mov
push
push
inc
arpl
pop
in
lret
shl
inc
lods
out
xor
jnp
mov
pop
aaa
in
movsb
adc
jp
je
aam
nop
and
jmp
lds
mov
dec
lahf
sbb
push
add
jns
pop
xor
mov
out
adc
jo
icebp
add
and
loopne
sub
sub
out
jb
dec
mov
mov
push
testb
pushf
sbbl
xlat
adc
outsb
xchg
jno
vmwrite
aas
les
sbb
pop
mov
repz
fsubr
dec
das
xchg
xor
inc
mov
loope
addb
sub
fs
jecxz
aam
cmp
sbb
shrb
xchg
mov
mov
repz
mov
loope
aad
cmp
sub
pop
shlb
daa
dec
js
jg
cwtl
push
cs
sbb
popf
jno
shlb
ja
cmp
mov
sarl
xor
xchg
jl
loop
adc
or
clc
dec
mov
jmp
cwtl
fists
xchg
adc
pusha
aam
fucomi
fs
xchg
shr
sbb
call
inc
cmpsl
xchg
repnz
adc
ds
das
xor
js,pn
mov
and
xchg
sarb
jl
xchg
jno
icebp
inc
cmp
xor
push
lea
insl
rcrb
sub
xor
ret
xchg
jle
imul
aaa
dec
add
dec
daa
repz
and
add
rclb
cltd
adcb
repz
ficoml
ret
into
cli
rol
mov
orl
imul
sub
pushl
in
xchg
pop
lret
sti
xor
jbe
mov
push
cmp
in
hlt
sbb
push
mov
adc
lods
arpl
dec
or
cmp
movsl
cmp
xchg
mov
movsl
dec
lret
fscale
jnp
cmpsl
popa
push
stos
int
and
xchg
movsl
pop
pop
cmpsb
lret
push
xchg
inc
pop
jle
mov
jo
and
pop
lea
ss
push
inc
aad
lcall
cld
sti
pop
mov
pop
jbe
dec
cwtl
pop
mov
and
sti
or
adc
stos
add
test
jne
stos
stos
fsubrs
enter
cmp
xor
sbb
cld
icebp
lret
loopne
sbb
add
dec
dec
xchg
jle
pop
jae
mov
aaa
repnz
xchg
cld
lds
inc
enter
push
nop
cs
daa
pop
jbe
mov
ss
aad
daa
into
push
pop
in
xchg
jge
xor
jecxz
aad
mov
pop
arpl
push
pop
ficoml
jmp
int
mov
xor
dec
add
or
stos
mov
dec
out
inc
out
fs
adc
test
and
subl
mov
xchg
push
aas
enter
xor
jl
lret
divb
aad
or
adc
push
pmulhw
frstor
movsb
les
mov
arpl
add
pop
cmc
pop
ss
dec
jno
cmpsl
jbe
test
int3
aam
mov
xor
adc
dec
inc
pusha
cs
bound
jns
lods
cwtl
scas
mov
adc
jp
cld
pop
inc
aam
addr16
jg
out
fmuls
sub
xchg
xlat
jae
rcrb
ret
or
push
jecxz
dec
push
xor
mov
push
xor
cmc
mov
iret
jns
in
cmp
dec
rorb
cmpsl
sbb
adc
hlt
or
mov
in
inc
xor
mov
into
add
add
fistps
aam
test
icebp
push
push
mov
cmp
cmp
test
popa
dec
fadd
xchg
pop
cwtl
xchg
push
fisttpl
pop
jl
inc
insb
and
xchg
rcrb
imul
jno
mov
fsts
test
xchg
sbb
adc
aaa
movd
mov
add
loop
jg,pn
xchg
lcall
add
jl
out
insl
fmuls
push
or
imul
inc
mov
or
repnz
repz
hlt
push
jbe
add
pop
pop
sub
jp
aaa
aad
lea
pop
mov
repnz
js
test
inc
aas
and
jmp
popf
sahf
dec
outsl
ds
pop
adc
cmp
arpl
cld
outsl
push
or
xchg
sub
pushf
cmpsb
mov
ds
inc
dec
xlat
lds
or
dec
enter
jne
adc
jmp
pop
mov
xlat
push
pop
popf
push
loop
loopne
dec
fs
into
push
pusha
in
jb
mov
inc
negb
mov
paddsb
outsl
ret
in
cs
into
dec
dec
mov
push
cli
arpl
stc
push
push
mov
leave
mov
pop
pusha
adc
scas
movsl
scas
push
movsb
shll
ficoms
pop
in
mov
cmpsl
sub
jnp
mov
imul
test
mov
mull
mov
mov
sbb
jbe
pop
mov
adc
cld
jp
dec
cmp
pop
cmp
loop
inc
and
push
cmp
lcall
imul
sbb
or
sti
xchg
imul
loopne
adc
loopne
enter
out
enter
mov
add
adc
xor
les
mov
ss
inc
xor
sahf
xor
adc
call
xchg
ret
in
scas
push
dec
mov
dec
pusha
xor
sub
arpl
or
nop
insl
rcrl
push
inc
arpl
rcr
dec
jl
sub
pop
jmp
sub
mov
dec
cmp
fs
ret
mov
mov
push
out
cmp
outsl
jl
mov
dec
mov
mov
outsl
sbb
push
outsb
mov
jmp
jmp
insb
pop
inc
sbbb
fwait
xchg
iret
cmp
push
and
mov
or
sub
jge
hlt
mov
add
addl
push
push
push
cmp
or
add
fdivrl
mov
cmp
mov
out
shlb
imul
jecxz
jmp
lahf
dec
test
adc
mov
mov
sbb
movsb
adc
fmuls
cmp
xor
add
stc
xor
inc
out
inc
push
push
bound
std
pop
int
scas
pop
xor
insl
fists
sub
sub
mov
iret
cmp
mov
into
imul
stc
adc
mov
cld
cwtl
sti
mov
push
xchg
jg
xor
addr16
mov
mulb
je
gs
shlb
adc
sub
sbb
mov
push
sbb
mov
hlt
fildl
xchg
xchg
shrb
mov
addl
mov
daa
adc
pop
mul
and
iret
push
pop
cltd
fisubrs
mov
std
jecxz
push
xor
push
and
scas
daa
out
jp
orb
jmp
or
mov
incb
adc
xor
push
frstor
call
push
lods
and
or
inc
fwait
pop
fiadds
or
mov
mov
cmpl
dec
xlat
sbb
mov
cmpb
icebp
or
dec
cmp
stos
pop
cmp
icebp
std
xor
sbb
fdivrl
popf
mov
mov
push
in
aam
sbb
jmp
sahf
xchg
scas
and
mov
adc
add
sti
sbb
fsub
mov
cmp
cmp
push
mov
out
pusha
fsubrs
repnz
or
dec
in
outsb
push
test
hlt
popa
lcall
jnp
std
int3
movsb
inc
ds
cmp
mov
sub
sbb
sbb
cmp
pop
pusha
jae
mov
xor
push
test
xchg
cmp
cmpsl
pop
sbb
or
nop
push
mov
xchg
cmpsl
dec
jo
inc
lods
inc
lds
mov
pop
inc
aam
cmp
shrl
sub
mov
hlt
jnp
addl
add
adc
insb
xchg
adc
shrl
sbb
nop
jnp
and
dec
push
dec
ficoml
cmpb
xchg
aam
outsl
loop
add
ja,pt
add
cmp
xchg
xor
rcr
mov
pop
pop
pop
sub
sbb
roll
push
sub
out
cli
leave
mov
fnstenv
pop
mov
sub
insb
mov
movsl
cmp
mov
sub
jle
rorl
lods
inc
xor
xchg
mov
add
sbb
dec
loope
es
arpl
mov
mov
das
lahf
loop
lods
add
fimull
pop
loopne
test
jne
sbb
sub
arpl
imul
or
insb
mov
or
xchg
inc
xchg
cmpsl
scas
add
xchg
loope
in
push
call
xor
mov
std
inc
mov
jnp
subb
addl
adc
mov
es
cmp
lcall
out
jg
cmpsb
adc
xchg
mov
mov
jp
push
mov
sub
cmpsl
xor
mov
out
or
sbb
add
and
in
xor
xor
mov
loopne
lahf
movaps
push
clc
lcall
cmpsb
loop
pushf
sub
shll
cmpsl
xorl
outsb
mov
adc
inc
sbb
jae
cltd
pushf
fcompl
popa
mov
in
add
ja
mov
inc
pop
add
push
jo
inc
lds
dec
dec
sbb
pusha
push
test
imul
mov
lds
sub
cltd
scas
xor
mov
sahf
nop
push
sub
test
dec
aad
cmp
and
pop
pusha
dec
repnz
fiaddl
sub
mov
cmp
adc
imul
lahf
mov
in
repnz
or
test
push
lods
pop
jge
xor
jmp
shrb
adc
cli
inc
cmp
cli
dec
jge
in
mov
enter
push
mov
lea
jo
cmpsb
push
mov
clc
test
push
jecxz
aas
stos
jbe
dec
xchg
mov
and
or
ja
ja
inc
into
ret
leave
cli
fwait
sub
loope
call
inc
out
push
shlb
movsl
ret
and
nop
jne
and
lock
mov
xor
arpl
fldl
sub
js
mov
pop
or
fwait
movsb
dec
jns
popa
rcrl
add
inc
push
jo
scas
rol
mov
jp
idivb
cli
pop
mov
sub
loope
mov
repnz
popf
mov
jle
cmc
xchg
rorb
cld
fwait
xor
inc
movsb
and
sarb
xor
sub
and
dec
push
shlb
jnp
addr16
aas
xchg
ja
jno
mov
push
push
das
sbb
push
popa
outsl
inc
in
mov
pop
adc
or
movsb
and
or
jb
mov
mov
lcall
cli
fsubl
repnz
mov
cmpsl
popf
dec
sbbb
pop
lds
mov
xchg
out
adcl
fs
repz
in
jns
mov
lret
xchg
mov
test
xchg
jns
out
iret
pop
test
mov
jg
jnp
movsb
addr16
xchg
adc
jl
push
dec
stos
push
cltd
jl
loop
outsl
inc
jb
fcmovne
pop
push
cmp
fdivs
ja
xchg
xor
xchg
or
cmp
sub
sbb
addr16
add
or
or
int
xor
cmp
push
rorb
pop
xchg
pop
lods
retw
jl
lock
mov
ret
test
mov
sub
xorb
ss
mov
sub
mov
int3
pop
inc
mov
xor
in
ror
popf
xchg
in
leave
pop
inc
test
pop
in
mov
out
cltd
aas
pusha
dec
cmpsl
sub
int3
int
loope
pop
std
cmpl
pop
movsb
stos
popa
js
popl
jg
repz
add
scas
pop
cmp
xorb
js
out
sbb
ljmp
movsb
jae
imul
pop
sbb
jb
jnp
je
rorl
cs
sub
lock
loope
test
jmp
jae
gs
inc
xor
cmpsb
or
push
pop
pop
mov
ds
inc
add
sub
rcrl
stos
mov
popf
arpl
gs
cltd
decb
jne
mov
lea
sub
adc
add
cltd
les
fsubrl
jecxz
addr16
lods
popf
inc
insl
data16
imul
dec
push
loopne
xor
movsb
stos
mov
xchg
dec
ret
or
out
ret
dec
adc
imul
sarb
sbb
cmp
sub
popa
sbb
adc
vpaddq
mov
das
popf
cltd
jno
push
cmp
dec
push
dec
test
movsl
cltd
pop
pop
pusha
mov
or
jns
adc
sub
xchg
pop
outsl
shlb
sti
jbe
mov
rcll
sbb
dec
lcall
or
dec
stc
ds
icebp
ja
or
cltd
lock
test
loop
jno
mov
jp
mov
inc
int
and
mov
add
adc
cs
mov
sub
ss
ljmp
dec
cli
sbb
sub
ds
or
addl
pushl
aaa
sub
or
jmp
mov
mov
jnp
xor
fst
xor
adc
mov
loop
dec
cmpsb
fisubrs
sbb
xchg
daa
js
in
mov
lahf
xor
in
into
daa
in
je
gs
sbb
and
mov
les
adcb
xchg
lods
adc
shlb
mov
adc
ja
mov
push
stos
popl
fldcw
pop
mov
lods
scas
and
pop
xchg
mov
push
xor
mov
cli
loop
add
gs
lods
and
daa
insb
sbb
mov
popf
dec
adc
subl
xchg
add
push
cltd
xchg
push
les
sti
addb
je
push
sahf
jne
mov
xchg
inc
cmp
jle
pop
and
inc
dec
pop
enter
cmp
js
sub
inc
push
mov
into
xor
sbb
cmp
out
dec
and
rcrl
jecxz
or
nop
inc
jmp
xchg
rorb
and
and
sub
pop
push
cltd
pop
push
xchg
shll
in
mov
adc
pop
divl
std
xchg
xor
and
fisttpl
iret
xchg
mov
jb
aam
lahf
push
fsub
lret
out
and
sub
stos
fidivs
stc
cmpsb
sub
orl
cmpsl
fistpll
loop
movsl
push
pushf
shrl
out
push
fimuls
imul
mov
enter
aam
adc
xchg
dec
mov
or
dec
popa
adc
notb
ja
aam
sbb
jge
inc
dec
jge
jmp
or
jo
out
fs
push
pop
mov
jp
vmovupd
popf
inc
je
xor
pop
je
mov
add
out
movsl
sub
and
xchg
mov
push
enter
jbe
fwait
inc
das
adc
sub
addr16
es
scas
aam
pop
jl
cmp
gs
cmpsl
pop
inc
loopne
daa
mov
mov
pusha
in
mov
loope
mov
testl
pusha
mul
icebp
mov
testl
dec
int
mov
in
push
imul
in
ret
or
mov
sahf
shll
xor
adc
adcb
pop
push
push
imul
sbb
add
xor
shl
jg
xchg
mov
jbe
inc
xchg
adc
das
in
sub
sti
lahf
mov
shlb
cli
bound
jae
xlat
loopne
ljmp
inc
lock
jecxz
sti
sbb
insl
jp
adc
pusha
fsubs
push
pusha
mov
stos
shlb
xchg
xchg
int3
sub
pop
insb
or
push
out
pop
push
xor
imul
fcoml
div
jbe
mov
mov
pop
inc
push
mov
or
lods
shll
sub
mov
dec
or
add
aad
push
scas
icebp
stc
bound
pop
es
and
xor
cmp
ss
pop
adc
ja
movsl
pop
mov
lock
pushf
sbb
rcrl
and
daa
cmpsl
das
int3
loopne
cs
jo
lods
xchg
lcall
jmp
mov
adc
pop
sbb
push
cwtl
int
movsl
int3
mov
repz
cmpsl
fistpl
add
push
xlat
pop
cmpb
inc
test
aad
rcrb
shrb
out
inc
jmp
push
insl
xor
pop
ja
sub
xor
xchg
jnp
pop
xchg
sbb
add
ja
cld
jecxz
subb
dec
icebp
dec
sbb
jle
mov
std
push
push
cltd
push
enter
pop
pushf
xchg
jecxz
mov
arpl
mov
insl
lds
mov
enter
push
xor
je
sbb
cs
stos
je
adc
dec
std
push
call
neg
adc
push
mov
add
rolb
pop
test
sahf
out
adc
popa
cmp
clc
stos
jle
sub
icebp
add
in
pop
clc
pop
mulb
add
in
mov
in
mov
pop
and
gs
cmp
aad
popa
or
iret
fdivr
aaa
xor
cs
adc
mov
cmp
push
mov
pop
mov
fldcw
int3
fldcw
ds
xor
dec
and
sub
fsts
fmul
into
outsb
into
mov
mov
pop
ja
jle,pt
sub
mov
fcomi
test
xchg
int
xchg
mov
pop
call
push
add
mov
rclb
and
inc
and
push
in
or
jo
mov
pop
lcall
dec
lahf
pop
sbb
loop
int
pop
lret
mov
das
ret
mov
xor
in
mov
inc
das
cltd
xchg
bound
mov
xor
std
jl
xor
jmp
adc
jle
adc
mov
cmpsb
add
jp
rcll
fdivl
pop
in
stos
rcr
inc
out
ljmp
xor
cmc
subl
cmpsl
stos
fwait
mov
inc
lea
fdivp
aam
in
lcall
fidivrl
arpl
idivb
imul
roll
and
int
dec
push
icebp
adc
aaa
into
nop
test
inc
jo
out
cld
cmpsb
bound
jge
fcompl
xorl
or
jge
cmpsb
imul
mov
or
addr16
popa
loopne
js
xor
in
inc
pop
pop
repz
aas
add
pop
int3
add
xlat
jb
sbb
adc
lcall
adc
dec
cmp
mov
std
movsl
and
popl
cmpsl
ret
jnp
cmp
push
icebp
sbb
out
cmpsb
ret
cs
lahf
mov
je
mov
cmp
add
fldt
mov
mov
inc
outsl
sub
out
sub
mov
push
mov
lock
inc
jo
and
aaa
jp
add
pop
and
xor
adc
inc
sub
xor
int3
push
in
ffree
add
es
andl
lods
mov
lahf
mov
cs
mov
repz
sub
mov
data16
dec
mov
mov
pushf
rcrb
mov
adc
fdivs
iret
sub
xor
adc
add
adc
push
jae
pop
aas
fldt
dec
adc
push
dec
mov
stc
arpl
jae
movsb
test
lock
aaa
cmp
sub
mov
mov
repz
bound
cwtl
repz
adc
sbb
outsl
lds
mov
or
insb
or
fisttps
mov
mov
cmp
pop
je
icebp
popf
in
stos
scas
in
mov
jge
xchg
stos
mov
fisubrl
jge
movsl
sbb
or
dec
mov
pop
jnp
test
les
and
pop
loopne
subl
jnp
push
test
mov
cltd
fsts
in
mov
std
sub
pop
inc
dec
leave
jae
cmp
mov
dec
daa
cwtl
or
lret
dec
cmp
fistps
ja
ja
loopne
pop
xchg
add
stc
pop
adc
scas
stc
xor
xor
test
mov
stc
or
cld
sbb
jb
adc
jns
imul
jl
sbb
adc
sbb
xor
decl
xor
inc
lea
mov
popa
mov
pusha
jb
fbld
dec
ficompl
sbb
das
xchg
xchg
bound
es
pop
push
mov
fsts
ja
cmpsb
adc
adc
pop
xchg
sbb
dec
cmp
lods
insb
mov
into
mov
pop
cmp
jno
aas
and
jmp
lcall
call
lahf
cmp
aam
fidivs
jle
test
xchg
inc
pop
or
cli
dec
sub
sarb
xlat
jge
pop
loope
and
jo
mov
dec
nop
cmc
sub
lods
inc
cmpsl
aad
xor
xchg
push
lret
cwtl
data16
push
addb
icebp
mov
outsl
mov
loop
test
pop
jae
dec
and
or
shll
divl
movsb
xchg
mov
inc
lret
imul
sub
sub
and
stos
cwtl
mov
dec
into
inc
arpl
xlat
mov
xchg
or
pop
inc
leave
mov
or
je
cmc
sub
test
movsl
and
fsubrs
pop
xlat
testb
repz
pop
cmc
and
lcall
sbb
insb
enter
adc
ds
icebp
cmp
scas
push
loopne
adc
cmpsl
jno
sbb
cmpsb
dec
stos
enter
cmp
js
mov
into
arpl
cwtl
in
mov
fisubrl
pop
ja
cwtl
jo
xchg
adc
fldt
sti
add
enter
repnz
mov
insl
xchg
dec
sbb
out
iret
imul
dec
pop
lahf
in
cmp
orb
fiaddl
xchg
addl
dec
jbe
mov
aad
das
dec
inc
mov
sbb
movl
push
pusha
mov
or
or
in
test
mov
das
add
sub
movsl
add
ljmp
xor
sti
lods
out
out
cmpsl
mov
inc
aas
sbb
push
xchg
hlt
push
fnstenv
in
sbb
data16
cmp
adc
push
inc
lods
jl
pop
adc
jg
addr16
cltd
scas
dec
fistpl
mov
fldcw
int3
cltd
cli
test
and
cmp
xchg
pop
scas
aad
mov
jg
adc
or
iret
iret
inc
shrl
mov
dec
push
fs
enter
das
push
mov
pusha
hlt
and
xor
pop
cli
add
das
das
add
mov
data16
xchg
xchg
mov
mov
loopne
and
fistpll
lea
cli
imul
and
in
xchg
xor
mov
xor
fdivrp
testb
ret
mov
cmpb
xchg
std
int
jns
pop
dec
subb
in
xchg
inc
repz
fisubrl
xchg
cwtl
fildll
pop
addr16
jno
add
push
shlb
ror
fwait
cmp
loopne
andb
sbb
sub
add
loope
xor
xor
jno
sbbb
cmp
sub
mov
inc
and
add
mov
mov
lea
dec
stos
push
mov
aas
fcom
mov
ljmp
subl
xchg
fnstcw
daa
sbb
ret
add
call
lods
mov
insl
cmpsb
jbe
jmp
rcl
sub
fisttps
mov
subl
dec
in
enter
sbb
test
adc
adc
xchg
lcall
clc
or
and
in
or
fldl
cltd
mov
push
inc
sub
enter
cmpsb
push
jl
push
repz
mov
andb
push
in
movsl
dec
jmp
jp
cmp
div
lds
ret
popa
aam
test
andb
xor
mov
push
lods
mov
inc
mul
cs
and
sbb
leave
xor
into
adc
push
mov
xchg
xor
push
add
adc
lret
insb
sub
scas
jno
sbb
cmp
xchg
in
testl
mov
aaa
pop
lods
imull
mov
jg
mov
daa
jbe
sub
or
sub
neg
pop
or
cmpsb
mov
js
dec
test
push
sbb
mov
fidivrl
sub
mov
iret
xor
xchg
or
push
mov
dec
jmp
xchg
adc
rcll
cmp
xchg
cmp
xchg
fiaddl
ljmp
add
fnstenv
inc
pop
and
mov
incl
or
ss
fbstp
lock
pop
iret
xchg
inc
ds
ds
add
and
xchg
je
div
dec
inc
test
arpl
jl
push
nop
cmp
sub
aam
add
repnz
push
mov
clc
add
nop
mov
dec
mov
or
pop
loopne
sbb
arpl
sub
clc
repz
std
fwait
mov
loope
and
repnz
pop
jmp
ss
sbb
loopne
addr16
mov
pop
cmpsb
mov
mov
stc
iret
rolb
xchg
or
ljmp
in
rcl
dec
sbb
lahf
in
pop
cld
gs
daa
or
and
adc
decb
dec
fcmovnu
jns
or
stos
cld
fs
mov
ret
dec
cmpsb
mov
push
xor
mov
mov
fnsave
lea
cwtl
jo
cmp
and
daa
mov
movsb
pop
hlt
test
jnp
add
cmc
in
jl
sahf
test
jl
xor
int
into
or
mov
into
scas
movsb
popf
daa
and
outsb
adc
mov
xlat
add
cmc
scas
js
sub
imul
add
loopne
sti
pop
push
jbe
dec
addl
mov
and
inc
add
xchg
sub
add
cltd
mov
push
dec
jge
mov
xor
xchg
jbe
int3
fcomps
ss
xchg
xlat
and
mov
in
scas
cmp
add
mov
sahf
push
sub
adc
test
inc
out
cmpsl
shll
push
xchg
jp
sbb
push
or
stos
sbb
aas
mov
jbe
adc
fcomi
fildll
gs
add
sbb
add
frstor
aam
test
jle
or
jge
mov
fwait
sti
fs
nop
sahf
es
les
in
into
out
test
inc
data16
jns
pop
pop
sarl
in
jo
cmp
xchg
push
fidivl
cmpsl
sbb
out
orl
and
loopne
add
xor
xchg
pop
jle
sub
leave
fld
outsl
icebp
jle
cli
divb
dec
dec
pop
cmp
fs
mov
mov
ret
xchg
mov
xchg
cli
insl
push
push
movsl
sbb
xor
mov
mov
aaa
dec
mov
ja
pop
es
push
arpl
xchg
or
mov
push
fldenv
or
ja
mov
stc
ret
imull
cld
pop
mov
aam
int
mov
and
lds
imul
out
adc
fidivs
nop
scas
fdivs
sub
in
jns
inc
xor
arpl
jg
into
sbb
cld
fwait
loopne
adc
jmp
loopne
mov
jecxz
xchg
cmpb
add
mov
xor
xor
cmp
or
mov
xchg
ret
stos
inc
mov
mov
pushf
addr16
or
lea
mov
sub
test
std
mov
pop
ficomps
xchg
add
xlat
es
loop
mov
add
in
cwtl
cmpsb
cli
add
aad
push
ds
jle
xor
fs
mov
inc
xlat
insl
jecxz
push
icebp
icebp
xchg
mov
imul
icebp
or
xlat
stc
push
xchg
xchg
lret
fstpl
loop
xor
jo
fisttpll
ret
add
dec
loope
add
into
cmp
pop
push
mov
push
sarb
push
mov
push
jnp
adc
push
adc
cli
mov
or
cltd
xchg
push
push
aam
dec
cmp
adc
or
sbb
notb
in
inc
jno
mov
jp
xor
fistpl
xor
orb
out
mov
cs
sub
push
sbb
and
lods
ljmp
mov
fstpl
xchg
lods
and
push
fs
insl
jns
rorb
mov
testl
mov
dec
lret
aad
daa
shl
add
mov
inc
popa
mov
out
das
ret
add
mov
inc
ljmp
clc
cmp
and
test
pop
lea
js
das
mov
mov
sbb
cmpsb
xchg
push
mov
das
pop
inc
data16
jns
cltd
pop
lret
push
fs
push
pop
clc
pop
negl
jle
movsb
mov
dec
fisttps
out
jae
pop
sahf
and
and
call
inc
pop
cmpsb
imul
arpl
bswap
sbb
les
addr16
ffreep
ljmp
sub
enter
xchg
dec
mov
xchg
push
inc
jae
jno
pop
dec
leave
mov
xor
push
clc
pop
and
push
test
cld
xor
fistpl
es
ss
pop
jecxz
cwtl
jl
push
sub
dec
jecxz
add
push
leave
pop
add
addl
bswap
mov
mov
cmp
xor
clc
mov
cld
stos
cmp
mov
sbb
add
inc
push
sub
lahf
push
push
mov
ja
in
rcll
and
jns
mov
and
mov
pop
cli
movsl
idiv
xchg
adc
ja
test
lahf
dec
push
pushf
jae
dec
int
dec
adc
imul
pop
add
cmp
or
jnp
sbb
dec
adc
push
sbb
mov
push
repnz
divl
adc
inc
sbb
pop
in
js
add
adc
les
loop
pop
or
jns
mov
sbb
aam
xchg
out
lret
mov
mov
and
stos
hlt
xchg
insb
pop
and
and
inc
rcll
or
add
jbe
push
out
adc
cmp
out
gs
ficomps
icebp
push
mov
or
stos
andl
inc
pushf
ds
dec
inc
sbb
mov
push
fwait
les
xor
xchg
sbb
mov
or
dec
insb
dec
shlb
inc
into
mov
add
and
or
movsb
push
pop
std
out
mov
cmp
inc
divb
dec
sbb
jmp
and
mov
imul
dec
lahf
lea
and
orb
push
pusha
bswap
push
cmp
or
or
js
in
pop
or
call
or
out
jge
inc
ljmp
nop
push
lret
mov
repnz
fmuls
mov
adc
cwtl
out
sarb
push
xchg
pop
aam
sbb
inc
dec
jnp
or
les
mov
xor
pusha
dec
mov
insl
mov
push
fmull
dec
mov
test
fcmovnb
and
xor
xor
add
adc
stc
push
mov
xchg
lock
out
jbe
jno
pop
jns
push
push
hlt
stos
mov
js
jp
cs
and
push
xor
arpl
jno
jl
cltd
lahf
js
xchg
aad
ficompl
das
stos
fwait
scas
out
jle
jmp
push
mov
loop
inc
xchg
mov
fistl
in
xor
push
shrb
sbb
aam
movsl
aad
leave
push
fsubrp
adc
xorl
out
stos
insl
mov
inc
in
mov
xchg
pop
jae
shll
orb
sarl
jae
fstl
ret
xor
xor
cmp
nop
lret
push
int
popa
dec
mov
cmpsl
or
mov
sti
dec
or
sarb
adc
ror
pop
adc
mov
mov
int
add
ret
mov
push
mov
dec
push
xchg
pushf
adc
xor
adc
clc
lods
cs
repnz
nop
das
popa
jmp
movsb
pop
lcall
loop
mov
pop
inc
adc
nop
pop
repz
xchg
push
or
xchg
xchg
pop
test
mov
push
xor
rcrl
int
xchg
adc
sub
push
mov
cs
xor
leave
mov
sub
jne
xorb
mov
in
xchg
call
cs
mov
xor
mov
fmull
negb
mov
fs
mov
jmp
jle
or
in
js
add
add
xchg
push
push
mov
int3
cwtl
push
in
add
gs
xlat
adc
cmpsb
or
mov
or
test
sbb
cmp
fdivl
movsb
adc
cs
mov
xor
cmp
cltd
xchg
and
addr16
mov
add
jne
jg
xor
sahf
xor
sar
movsb
xchg
push
sbb
xlat
pusha
cmp
xor
or
jno
pop
out
xchg
add
bound
iret
fistps
mov
pop
xor
mov
xchg
orb
inc
les
stos
adc
add
push
xchg
dec
ret
pop
push
adc
jl
sti
push
imul
int
out
loope
pushf
sbb
loope
push
pop
out
inc
dec
fsts
test
arpl
xchg
imul
lock
int3
dec
cmc
pop
push
xchg
cmp
add
xchg
mov
test
lock
arpl
dec
push
mov
add
jno
sbb
and
das
adc
repnz
sbb
fdivl
fs
jmp
pop
outsb
sarl
pop
push
jp
mov
stos
in
fdivrl
pop
imul
sbb
mov
xor
clc
daa
jg
cli
inc
mov
loop
pusha
add
jo
std
fbstp
adc
mov
pop
in
inc
push
aam
pop
out
in
xchg
jo
shll
dec
pop
cmp
es
lods
add
inc
mov
jmp
lds
or
pop
or
ja
xor
push
aad
notb
sbb
adc
or
movsb
push
clc
pop
pop
testl
les
add
lods
or
and
push
mov
jmp
dec
cli
jge
adc
sub
shrl
cmpsb
push
cwtl
stos
aad
xchg
mov
sbb
popf
mov
addr16
mov
dec
movsb
push
jl
inc
jp
lods
cmp
lcall
cmp
jns
js
out
cmpb
addr16
mov
dec
jmp
pusha
int
cmpsl
jl
adc
adc
lods
inc
dec
arpl
add
inc
mov
mov
sub
in
push
push
or
imul
out
adc
cmpsl
mov
jae
mov
adc
dec
push
add
gs
dec
jge
xor
xchg
cmpb
mov
je
hlt
mov
dec
xor
imul
daa
push
mov
inc
sub
push
rorl
push
stos
pop
sbb
cltd
loope
out
ficomps
pmovmskb
scas
les
lcall
cmp
xchg
daa
and
mov
push
imul
aaa
sbb
push
jno
sbb
mov
outsl
sub
cmpsb
inc
scas
idiv
xor
aad
clc
xor
mov
aas
mov
mov
sbb
push
cltd
mov
icebp
cmpb
mov
mov
xchg
movsl
mov
dec
sub
cmp
jbe
lds
sbb
mov
dec
push
mov
mov
inc
subl
cmp
xor
sbb
mov
std
xor
mov
mov
inc
xor
xor
adc
repnz
jno
sbb
dec
push
in
pop
adc
jae
call
jmp
mov
xor
daa
fdivrl
dec
cmp
lcall
mov
popa
cwtl
and
ficoml
out
sub
push
data16
mov
push
mov
jge
sahf
ret
pop
pop
cmp
adc
aam
pop
or
mov
pop
ss
and
sbb
sbb
sbb
cmp
add
fadds
sbb
or
adc
loopne
push
fcmovnb
adcb
pusha
movsb
lods
in
out
out
mov
jg
mov
fs
pop
or
ja
inc
lret
push
cli
stos
mov
sti
sub
cmp
sub
test
aas
or
pusha
imul
or
test
add
insb
aas
jbe
or
xchg
mov
pushf
jae
mov
dec
pop
sbb
push
sti
xchg
stos
push
xchg
or
adc
aaa
jecxz
les
sub
pop
sbb
xor
push
or
mov
xor
and
lcall
bound
test
jle
dec
and
test
jo
je
aaa
pop
adc
dec
icebp
pop
shr
and
xor
test
loopne
cwtl
add
jge
sarb
inc
int3
cltd
fisttpll
sarl
mov
dec
fs
sbb
bound
xchg
and
ror
sbb
loopne
rcrb
inc
test
dec
lcall
fcoms
out
mov
mov
and
dec
cmp
add
dec
push
mov
bswap
js
les
hlt
cmpsl
sar
xor
in
stos
pusha
stos
xchg
dec
inc
scas
stos
sub
dec
cmp
inc
jnp
adc
push
sbb
or
testl
scas
bound
in
daa
and
cmpsb
movsl
je
mov
insl
cmp
in
bound
das
mov
rorl
mov
push
adc
jns
inc
mov
iret
movsb
nop
xlat
push
in
cmp
out
fcoms
adc
sub
gs
das
test
xchg
jle
sub
push
fisttpll
mov
inc
inc
dec
xlat
push
mov
lods
and
cmp
mov
jns
pop
sti
enter
fcmovb
mov
lret
fnsaves
aam
push
sbb
adc
loope
mov
lret
addr16
dec
adc
jge
es
mov
xchg
pop
inc
decb
push
xchg
sub
xchg
push
scas
in
cmpsb
hlt
ljmp
lds
push
mov
ja
dec
arpl
movl
outsb
fsubrs
push
inc
popf
mov
lods
int
inc
fcoms
dec
inc
push
and
fwait
dec
scas
addl
les
ja
hlt
pop
cmp
or
mov
in
jnp
pusha
mov
popa
dec
bnd
xchg
nop
fs
mov
aad
sbb
pop
or
mov
xor
xor
les
dec
es
js
iret
cltd
lret
popa
fildll
push
cld
ljmp
xchg
dec
ds
pop
sahf
in
in
mov
or
ret
and
clc
push
sub
stos
mov
and
sub
fwait
sbb
gs
test
and
dec
loopne
push
inc
daa
ds
xchg
shlb
mov
dec
pusha
adc
iret
adc
sbb
into
ret
lds
mov
call
dec
or
push
loopne
shl
les
mov
pop
dec
jnp
jbe
xchg
mul
mov
cld
fmuls
dec
test
test
in
jbe
mov
fists
loopne
xchg
outsl
dec
pop
scas
xlat
movl
dec
xor
mov
in
out
push
cwtl
xchg
sbb
mov
jo
lock
fisttps
mov
mov
testl
pop
add
mov
test
xor
stos
enter
aaa
push
lock
push
jne
cld
inc
or
pop
gs
mov
dec
das
jg
sbb
popa
popa
pop
mov
shll
pop
int
dec
mov
sbbb
mov
shll
add
loop
rcrl
push
repnz
add
pop
mov
push
xchg
loopne
inc
fdivr
imul
cld
mov
mov
out
pop
push
shr
mov
stc
insl
test
les
sarb
mov
and
pop
scas
iret
pop
ljmp
aas
sbb
inc
loope
inc
lea
pop
pop
dec
add
xor
or
cwtl
enter
push
pushf
test
nop
inc
arpl
inc
sub
inc
mov
mov
cmp
xchg
imul
mov
fcomip
insl
in
add
je
mov
inc
jae
sbb
lds
movsb
test
es
xchg
iret
and
imul
mov
and
mov
mov
inc
xor
push
dec
insl
and
into
add
iret
sbb
jbe
insb
ss
mov
cmp
jb
pop
int3
rcrb
inc
and
mov
xor
lods
lcall
xor
fisubs
jne
mov
or
jmp
rcrl
xchg
push
and
daa
mov
into
fs
push
sub
sub
icebp
xor
test
es
mov
jbe
push
xor
xchg
sbb
adc
dec
mov
or
xchg
mov
sub
xchg
sub
int3
or
jmp
mov
cltd
cmp
cli
mov
icebp
js
add
push
fstl
adc
lods
andl
test
pop
dec
pop
sahf
outsb
stos
xchg
jle
std
aam
cwtl
pop
pop
sub
popa
sub
mov
mov
aas
lods
iret
in
mov
adc
push
inc
and
out
jecxz
or
icebp
push
dec
mov
mov
mov
ds
repnz
xlat
add
jle
or
add
shll
in
mov
jl
mov
cs
insb
mov
jnp
xchg
jp
iret
adc
fisttpl
cltd
add
jl
add
imul
popf
sbb
stos
push
dec
dec
mov
mov
cltd
xchg
dec
sti
push
outsl
pushf
cli
xchg
pop
and
cli
pop
sbb
setnp
lahf
cmp
pop
lret
lret
pop
cltd
hlt
icebp
push
xor
fisubrs
lahf
cmpsb
popf
mov
push
sahf
out
push
idivb
inc
faddp
mov
sarl
or
addr16
adc
ficoml
jno
jl
xlat
outsb
xor
lock
movsb
cmc
cltd
jno
pusha
jl
lds
add
fwait
call
imul
pop
lock
js
dec
out
gs
xchg
jp
mov
jecxz
add
sbb
mov
test
xor
cmp
push
out
mov
shl
addr16
add
out
or
loope
adc
mov
clc
add
add
xlat
jmp
mov
jne
sbb
cmp
adc
cmpsl
pop
push
mov
leave
pop
pop
iret
iret
cli
out
imul
jmp
jnp
enter
out
xchg
adc
mov
sahf
loopne
pop
je
test
jno
std
popa
fld
ss
pop
adcl
sbb
xchg
xchg
adc
test
mov
ficoml
arpl
xchg
inc
add
inc
and
xchg
mov
mov
xor
notl
jnp
sub
cmc
mov
loope
fistpl
sub
popa
movsb
pushl
fidivrl
scas
cmp
inc
loope
mov
or
dec
push
cltd
inc
lods
and
push
or
les
sbb
lcall
scas
jmp
iret
ret
cmp
add
and
fisubrs
jecxz
out
out
repz
dec
add
js
mov
sub
pop
push
cmpsl
sahf
not
test
sbb
mov
outsb
adcb
jle
mov
out
pushf
test
pusha
sbb
aad
js
cmp
jl
lahf
jno
jmp
sbb
sub
gs
imul
pop
push
pop
adc
ret
sub
mov
ja
das
xor
xor
ja
lds
xchg
add
int3
cmp
mov
mov
pop
fisttps
or
jmp
or
popa
jle
and
push
mov
xchg
pop
jnp
xor
outsl
mov
test
aad
mov
mov
pop
iret
pop
leave
add
cmp
cmpsl
gs
stc
cmp
dec
jbe
push
push
int3
jnp
mov
cmpl
mov
mov
cmpsl
sbb
ror
cmp
inc
ljmp
or
les
jle
push
mov
mov
cmp
mov
cwtl
pop
aas
mov
cli
out
jmp
push
subl
xor
sarb
dec
in
sub
cmp
clc
push
mov
lods
fcomp
push
ds
cmpsl
adc
lock
inc
mov
scas
and
popl
mov
xor
nop
test
push
movsb
insb
fsubr
inc
movb
jb
mov
lods
fcoms
mov
and
xchg
mov
xlat
xchg
adc
inc
aad
aad
mov
imul
xchg
add
int
es
testl
add
adcl
cltd
lock
fidivrs
sub
mov
lret
and
imul
jns
mov
pop
or
or
pop
and
rcll
jb
mov
xor
and
adc
xchg
adc
add
or
pop
es
push
adc
iret
jmpw
mov
pushl
cmc
fs
push
jo
popa
dec
loopne
or
into
dec
cld
out
cmc
dec
or
push
adc
in
ficompl
sar
sbb
xchg
sbb
lods
mov
ljmp
stc
xor
push
in
and
fwait
xchg
and
fcomps
push
push
movsb
dec
jne
cmc
xchg
sub
mov
outsl
mov
xchg
rclb
sti
inc
int
repz
xorl
mov
lcall
xor
jne
lea
mov
cmp
jmp
sbb
bound
mov
xlat
fdivrs
dec
pushf
int3
test
cmp
int3
scas
sub
adc
repz
lcall
outsl
sahf
jo
leave
pop
imul
jecxz
add
or
xor
jg
xor
sbb
fisubs
popa
repz
mov
outsb
jmp
dec
mov
inc
les
cmpsl
dec
pop
js
dec
cmpsl
jmp
jns
js
xchg
mov
mov
mov
fiaddl
jp
loop
dec
test
lods
shr
data16
lret
arpl
and
repnz
push
cmp
dec
push
adc
push
sub
pushf
outsl
cs
out
jno
inc
sbb
pushf
and
or
adcb
fdivl
mov
iret
jmp
xor
add
adcl
scas
mov
movsb
add
es
jne
xchg
mov
test
pop
mov
sahf
into
fisubs
gs
int3
cmpsb
lahf
mov
pusha
ficoml
or
xlat
push
out
leave
fldt
push
arpl
fs
push
xchg
jmp
lea
outsb
pop
in
lods
inc
decb
fisubs
loope
mov
mov
test
inc
sub
test
cmpsl
imul
test
cltd
jg
xchg
jbe
push
or
mov
or
aad
cli
fcomps
cs
inc
or
loope
shr
dec
sbb
mulb
mov
hlt
je
testb
inc
dec
add
mov
xchg
in
xor
sub
cs
out
pop
pop
or
inc
xor
inc
pop
jb
stos
cmpl
gs
shlb
and
ljmp
ss
push
loop
mov
fucomi
outsb
adc
mov
mov
js
test
ds
pop
add
add
xchg
pop
loopne
outsb
xor
in
out
lcall
xor
addr16
sahf
stc
mov
inc
decb
popf
int
or
rcrb
or
jp,pn
sub
cmp
jnp
out
movb
jmp
sti
dec
push
lret
icebp
fistpl
outsl
push
aas
andb
out
in
leave
in
or
in
in
das
insb
xchg
sub
cmp
shlb
dec
pop
jl
daa
inc
jl
stos
sbb
rcrb
jmp
orb
jmp
test
add
dec
add
rclb
lds
mov
jl
mov
das
aam
sahf
repnz
mov
pusha
scas
aad
shlb
jbe
or
adc
enter
jns
cmp
cmpsb
mov
jns
inc
aas
loop
int
jg
inc
pop
cmpsb
aad
adc
lahf
mov
cwtl
and
mov
xor
dec
int3
cltd
arpl
in
push
gs
arpl
jmp
sbb
mov
mov
loope
mov
mov
add
addl
dec
sub
pushf
andb
cmp
adc
inc
cmc
sub
fmul
insl
pop
cltd
add
fisttps
xor
dec
mov
bound
push
xlat
sub
cmp
push
inc
fisubs
jae
mov
subl
mov
push
xchg
popf
pop
ds
mov
mov
fcomps
push
dec
dec
mov
in
pop
cmc
in
or
in
rcrl
call
push
shll
cmc
mov
mov
sti
int3
sbb
cltd
xchg
jge
dec
or
shlb
lret
xor
fisubrs
push
fsts
cs
mov
test
repz
mov
pop
lahf
ret
bound
xchg
loopne
xor
bound
add
out
mov
push
icebp
sbb
sbb
stos
sarl
stos
int
adc
dec
xor
mov
jecxz
xlat
push
int3
add
je
stos
xor
sti
mov
sti
xchg
xchg
addr16
mov
or
mov
inc
jbe
pop
xlat
cmp
inc
xor
jle
sbb
mov
nop
stos
cs
xchg
stos
jle
leave
inc
ds
jns
cmpsb
test
or
test
sub
insl
fildll
insb
cmpsb
iret
or
push
test
shl
jnp
pusha
dec
jp
mov
push
fstpl
cmp
inc
jp
sbb
push
iret
nop
rol
aam
test
rcl
adc
aas
jae
mov
aam
call
out
pop
outsl
sub
pop
xor
dec
jo
fdivr
clc
xchg
nop
jo
and
ret
jbe
daa
out
push
mov
popf
roll
add
mov
adc
imul
jmp
out
imul
or
aas
dec
adc
dec
inc
dec
imul
adc
popa
jno
jae
scas
lret
and
pushf
cwtl
push
int3
ljmp
dec
push
mov
mov
aaa
xchg
jecxz
in
sbb
test
cmp
stos
das
mov
dec
imul
bound
aad
jmp
in
sub
jge
ret
or
jle
push
dec
mov
add
sub
mov
mov
cmp
dec
mov
pop
test
mov
dec
gs
mov
pop
fs
adc
mov
lahf
xchg
xchg
lods
pop
cmp
inc
mov
outsb
add
xor
push
sub
adc
xor
sub
jp
and
sub
inc
mov
dec
shr
xchg
out
pop
test
mov
js
pushf
arpl
lret
xchg
cmp
dec
dec
lcall
pop
push
leave
mov
popa
fidivrs
xchg
xchg
xchg
pop
fnstsw
lock
sbb
cmp
xchg
mov
dec
fs
xchg
mov
mov
add
scas
mov
insl
pop
jae
xchg
cmp
sbb
sbb
imul
leave
lcall
in
insl
and
aas
add
cmp
pop
aam
sbbl
jnp
aas
hlt
cmp
fistl
and
leave
jge
lahf
lds
adc
sub
pop
push
and
xor
sahf
xor
test
lcall
test
stos
cwtl
out
aad
mov
sub
lret
cs
pusha
add
je
lret
xchg
or
loopne
mov
movsb
jns
cld
pop
or
nop
sbb
iret
mov
ficomps
dec
lea
stos
call
pop
xchg
test
les
mov
loope
ret
outsl
jae
adc
subb
push
rorb
pop
das
push
daa
jmp
fbstp
jb
adc
mov
fisubl
daa
std
lcall
inc
es
ret
repz
cmp
jecxz
mov
mov
out
out
jge
mov
dec
mov
insb
iret
test
jnp
dec
mov
decb
push
xlat
mov
pop
repnz
push
cmp
cld
adc
mov
call
jmp
popa
decb
xchg
cmpsl
ja
inc
push
lcall
pop
xchg
jl
push
sbb
push
xchg
mov
out
inc
sub
testl
loopne
xlat
or
sub
lea
cmp
lcall
in
jns
faddl
subb
test
fcompl
push
and
xchg
imul
fwait
xor
jo
mov
faddl
andl
fndisi(8087
mov
dec
inc
mov
hlt
xor
repnz
fsubl
ljmp
sub
dec
ret
movsb
stc
inc
pop
movb
mov
and
stos
mov
dec
ljmp
xor
cmp
in
sbb
pop
nop
and
daa
dec
ret
sbb
xchg
ficomps
push
jno
adc
mov
bound
insl
scas
push
lods
arpl
movsb
das
in
cld
ljmp
pop
sub
fists
mov
fcomps
icebp
mov
jnp
mov
jle
aaa
into
cmp
lahf
adc
popf
test
or
dec
hlt
ficoms
mov
xor
push
icebp
mov
insb
push
dec
xor
mov
das
fstpt
fs
stc
push
aas
sub
arpl
push
rcrl
mov
jno
add
adc
arpl
daa
sub
bswap
mov
leave
jno
sub
lea
inc
lds
lcall
jle
fwait
ret
push
or
and
xor
test
push
xor
gs
repnz
push
mov
ljmp
stos
dec
test
leave
fisubl
lahf
icebp
sbb
dec
mov
test
es
add
js
cwtl
and
push
into
jno
inc
dec
divl
mov
into
jmp
adc
lds
nop
add
xchg
lcall
mov
into
xor
int
fadds
iret
clc
fs
std
xor
fadd
test
movaps
das
and
push
inc
inc
nop
inc
jp
pop
call
dec
jns
mov
outsb
xchg
mov
hlt
clc
cmp
jl
cmp
loop
mov
movb
repz
xor
xor
add
insb
imul
imul
outsb
sbb
inc
xchg
rclb
fistl
xchg
jns
push
inc
xchg
mov
jno
pop
jg
inc
push
mov
sub
aad
lahf
out
jnp
sub
mov
dec
fiadds
test
jl
fidivrl
push
ret
into
cmp
mov
fcmovnb
in
sub
aam
add
mov
jnp
jne
fcomp
test
ret
inc
xor
imul
adc
cmpsb
mov
icebp
lcall
add
mov
xchg
out
cmp
insb
fstpt
sbb
cmpsl
xchg
je
call
dec
gs
mov
fadds
sub
adc
mov
mov
daa
adc
outsl
dec
push
push
mov
push
inc
in
jmp
mov
mov
insb
insb
adc
loope
inc
orl
xchg
lock
xchg
lock
shrl
cwtl
jns
hlt
xor
jmp
imul
scas
outsl
xor
adc
and
pushf
add
adc
insl
stos
cmp
xchg
loop
mov
jne
cmovns
lds
mov
repz
xchg
aas
xchg
jb
ret
and
adc
and
cmc
fildll
cmpsl
jmp
addb
cmp
jns
shll
jns
stos
mov
push
clc
adc
xor
and
or
fcmovbe
clc
fimull
lods
cld
dec
fbstp
mov
sahf
lss
adc
mov
dec
mov
movsl
jmp
nop
filds
sbb
bswap
jecxz
and
inc
mov
lock
mov
sub
xorb
or
inc
repnz
ret
mov
xor
mov
mov
adc
sbb
sub
stos
pop
lcall
or
mov
dec
adcb
push
jnp
xorb
jae
jbe
add
stc
aaa
xchg
fs
jne
shlb
mov
mov
push
pushf
mov
js
fsubrs
mov
add
into
pop
jle
inc
jae
jae
inc
call
into
inc
fcompl
shll
mov
add
push
mov
lcall
aam
hlt
rcr
scas
sub
cld
push
mov
push
out
jg
xor
mov
pop
and
or
mov
adc
push
jne
mov
inc
adc
scas
popa
movsb
lcall
lretw
mov
add
or
adc
and
stos
or
push
push
dec
movsb
and
sbb
mov
push
movsl
jle
pop
or
adc
into
loope
mov
out
pop
xchg
sbb
ljmp
xor
sbb
sbb
and
aaa
sub
mov
clc
dec
stc
insl
or
aam
adc
fidivrs
xchg
push
call
mov
cmc
push
hlt
test
mov
aaa
pop
aam
sbb
je,pn
cmp
push
push
ja
loop
aaa
cwtl
xor
mov
test
xchg
enter
sbb
push
dec
sub
int
xchg
outsb
push
sub
cmp
outsl
xchg
add
int
sbb
mov
movsl
push
imulb
xor
mov
ss
ss
cltd
dec
jp
pusha
enter
cli
scas
outsl
sar
inc
and
test
pop
fistpll
out
jp
fistps
nop
ficoml
jae
cmp
adc
out
pop
xor
or
fcomps
add
pop
movsb
andl
pop
lahf
enter
in
pusha
aad
out
repnz
pop
cmp
test
aad
push
popf
push
dec
or
jecxz
ret
push
xchg
mov
push
or
cmp
pusha
inc
push
rorl
mov
xchg
sub
push
popf
stc
mov
sub
pop
sbb
push
push
lock
imul
out
ret
les
mov
test
inc
sub
pop
pop
dec
in
mov
mov
and
jnp
mov
jecxz
add
fdivrs
shlb
test
call
mov
sbb
sub
cmp
jae
in
int3
fsubrl
mov
cmp
popf
inc
hlt
outsl
push
mov
inc
rorb
add
test
cmp
cmpsb
lds
test
xchg
test
and
mov
push
popf
mov
adc
lcall
stos
push
cmp
icebp
imul
xchg
popf
add
out
enter
sub
dec
pop
dec
jnp
insb
loopne
cwtl
jg
pop
add
xor
pushl
push
mov
jp
dec
popa
scas
mov
fs
add
lods
cmc
addb
andb
shlb
outsl
rclb
lret
bound
gs
mov
jnp
cmp
adc
jp
std
cmp
cwtl
les
push
aad
adc
sub
mov
jbe
adc
test
mov
int
dec
adc
xchg
jecxz
aas
push
inc
jge
cmp
addr16
popl
jl
add
add
lock
in
sub
fbstp
push
xor
int3
adc
inc
lcall
sbb
cmc
cmc
adc
xor
bnd
testl
inc
mov
cs
test
sub
pop
emms
xchg
push
lods
cs
mov
in
xor
inc
fistl
negb
sbb
add
xor
mulb
insb
push
faddl
out
hlt
ret
mov
pop
and
sub
mov
xor
aaa
add
pop
lret
cmp
add
add
xchg
dec
idivl
sar
stos
fidivrs
data16
out
xlat
pop
in
std
mov
out
inc
fists
idivl
lcall
aaa
xorl
cmpsb
mov
push
sbb
jp
xchg
sub
mov
push
test
fcompl
arpl
mov
lea
cmp
xor
test
ja
loop
push
mov
insl
xchg
insl
mov
and
lods
inc
pop
fdivr
rcrl
movsl
aaa
add
xlat
jecxz
cmp
push
fildl
adc
mov
and
mov
int
arpl
sub
sarb
in
sub
pop
flds
fsub
test
mov
lahf
jbe
pop
sub
jbe
dec
push
test
cmp
or
arpl
pusha
jns
bnd
mov
gs
sub
aas
cmc
and
inc
push
ss
cli
xchg
fists
bound
fsubs
in
das
push
test
stc
jmp
stos
push
inc
fldenv
jmp
cltd
scas
cmpsl
popf
xchg
stc
pop
push
lds
add
lret
inc
cmp
push
xchg
in
mov
or
xor
pop
jae
sbb
lods
loopne
xorb
std
repz
jbe
in
les
sub
push
cltd
mov
dec
test
out
arpl
repnz
mov
sub
xchg
jne
std
push
int
sahf
xchg
imul
icebp
ud1
stc
pop
inc
adcb
addr16
xchg
mov
sbb
sub
insb
out
xor
push
xchg
push
sbb
enter
fistps
mov
pcmpgtw
push
inc
or
xchg
mov
in
xchg
add
pop
push
sbb
jmp
scas
into
dec
mov
cmp
inc
mov
cld
mov
aad
test
outsl
fs
fsubrp
stos
cs
jno
shlb
sbb
and
sbb
pop
inc
add
pop
fidivl
inc
push
je
xor
in
insb
lds
push
push
out
incl
xor
xchg
icebp
adc
push
lock
lock
jge
xchg
mov
xchg
inc
xchg
and
aaa
pushf
ret
pop
stc
popf
cltd
jmp
gs
fidivrl
in
ret
incl
lcall
jcxz
jl
or
jne
pop
stc
dec
mov
pop
sarl
xchg
mov
andl
sahf
jbe
outsl
nop
jmp
cwtl
test
pop
sti
in
loopne
or
or
push
and
adc
sahf
push
xchg
clc
or
sbb
fwait
push
leave
adc
nop
sbb
adc
and
aad
push
out
jns
std
fldt
mov
imul
xor
ss
insb
ljmp
mov
xor
imul
sub
add
divl
jae
push
out
adc
mov
and
push
xchg
daa
sbb
es
gs
dec
xchg
dec
fisubrl
rclb
mov
pop
fsubl
mov
enter
int3
push
and
pop
inc
daa
pushf
sbb
sbb
lods
test
sub
aaa
cld
ret
push
xlat
dec
cltd
out
mov
dec
pop
push
mov
push
rorl
jge
cwtl
ja
or
pusha
mov
and
dec
lret
imul
shrb
mov
pop
mov
pop
mov
stc
cmp
icebp
sbb
outsl
jne
jg
icebp
stc
jmp
jmp
pop
mov
sbb
in
adc
cmp
jmp
dec
ja
sbb
sti
and
xchg
mov
inc
gs
leave
mov
aas
sub
pop
xchg
sbb
repnz
cli
icebp
inc
std
pop
and
mov
add
mov
aas
in
mov
ss
pusha
shl
cli
ja
pop
push
mov
sar
sbbb
clc
pop
push
sbb
dec
sub
pushl
gs
subl
cli
add
ss
pop
or
adcb
imul
out
mov
test
jns
sbb
inc
test
sti
cmc
in
sti
mov
cmpsb
aad
loopne
call
lock
dec
push
stc
fildll
inc
sub
out
mov
mov
dec
sbb
inc
lret
push
sbb
pop
rcrb
mov
push
rcl
mov
lret
and
push
mov
pop
ret
adc
jge
mov
or
or
daa
enter
je
arpl
stos
sti
ljmp
jp
cmp
mov
outsb
push
and
inc
cmp
jne
xor
lret
xor
mov
mov
fsubrp
lret
imul
ljmp
int3
enter
fidivl
out
pop
pop
sub
fdivl
mov
shlb
insb
lds
ss
mull
mov
mov
lcall
and
movsl
or
int3
pop
adcl
and
mov
outsb
pushf
setg
mov
rorl
imul
in
gs
jae
dec
iret
icebp
xchg
insb
sbb
int
xor
jecxz
scas
adc
jp
cs
ret
xchg
stos
decl
and
ljmp
pop
dec
movsb
ja
out
sbb
mov
leave
idiv
pop
jns
pop
mov
jo
add
ss
outsb
leave
out
sbb
dec
inc
in
push
mov
mov
push
popa
adc
push
jle
repz
fwait
out
insb
mov
push
mov
std
inc
fs
push
inc
lret
mov
lds
xchg
push
ss
cmc
xchg
push
fmuls
orb
xlat
loopne
push
add
xchg
push
jle
push
jge
xchg
cltd
add
cld
xchg
push
aas
enter
mov
js
sbb
ret
and
orb
pop
adc
fisubl
xchg
xchg
and
inc
mov
lds
cs
xchg
dec
push
xchg
adc
loopne
adc
ss
and
jo
or
xor
subl
pop
pop
dec
mov
sbb
mov
xchg
jnp
pushl
dec
mov
loope
icebp
mov
cld
lahf
jns
inc
in
mov
ds
sub
xchg
int3
add
dec
cmp
gs
hlt
sub
cld
into
out
lock
in
sti
cld
jl
fdivrl
test
out
call
pusha
sbb
loope
mov
xlat
sub
aad
mov
lahf
lret
or
mov
dec
out
fisubs
lcall
inc
pusha
adc
insb
mov
lods
jnp
inc
cmp
cwtl
adc
mov
xchg
cmp
add
or
xchg
fwait
loope
dec
test
push
out
in
lods
sti
in
jo
xchg
inc
inc
scas
jle
dec
sbb
dec
push
in
out
nop
loop
in
mov
sahf
dec
lds
pop
dec
ret
subb
sub
int
scas
nop
pop
sub
push
ja
or
inc
stos
out
mov
jne
pop
scas
addr16
call
repz
out
jo
inc
sub
ficoms
push
imul
scas
hlt
xor
dec
je
loopne
push
mov
adc
gs
cld
jmp
test
out
push
ja
xchg
dec
and
stc
stos
loopne
mov
fs
push
xchg
cwtl
xchg
mov
cmp
subl
mov
and
cld
dec
mov
in
imul
out
bound
sahf
dec
das
sti
mov
pusha
incb
push
mov
cld
cltd
stos
inc
inc
push
push
fs
out
cmp
push
faddl
je
fwait
xor
mov
nop
test
xor
leave
mov
and
outsb
mov
imul
data16
scas
pop
test
icebp
mov
stc
and
stos
negl
mov
cmpsl
and
fsubrs
enter
xchg
pop
pop
xchg
lods
push
xor
and
mulb
cmp
rcrb
stos
mov
outsl
fwait
mov
and
mov
mov
outsl
and
mov
sbb
dec
mov
or
xor
in
cwtl
push
sub
lret
jg
movsl
jmp
lahf
data16
insl
aaa
xlat
gs
pop
mov
jle
test
xor
pop
pushf
fsubs
fwait
jge
outsl
cli
stos
cld
int3
iret
xor
xor
orb
pop
mov
dec
or
ret
fdivr
jecxz
inc
in
mov
ret
ficoms
add
adc
fisubrl
and
add
xor
hlt
fcmovu
and
sub
xor
and
push
sub
test
mov
in
sbb
inc
cltd
cmp
shlb
cltd
call
aam
add
cmp
std
aaa
or
mov
stos
cmp
dec
stos
inc
hlt
clc
orb
and
data16
es
andw
mov
or
lahf
xor
xchg
pop
je
mov
adc
roll
aaa
or
idivb
mov
testl
push
push
pop
sbb
cmp
lcall
xchg
mov
add
fisubrl
xchg
lods
dec
jg
sub
jle
jnp
adc
testl
das
call
push
imul
or
ss
sub
adc
mov
push
cmpl
jbe
jnp
push
stos
or
das
and
pop
push
adc
sti
dec
les
mov
ret
mov
jmp
daa
imul
pop
in
ljmp
aad
mov
icebp
sub
stos
daa
lea
mov
pop
insl
pop
loopne
xchg
xor
mov
pop
fcoms
test
sti
gs
and
fldl
jae
outsl
cmp
dec
cld
xor
addr16
int
pop
fstpl
mov
inc
out
stos
lock
scas
dec
mov
add
mov
ror
out
movsb
push
aad
das
test
jbe
mov
add
jge
imul
sahf
pop
lahf
inc
aas
addr16
cld
pop
shrl
add
inc
loope
adc
jg
repnz
sub
inc
fcoms
push
xchg
jae
lods
xlat
pop
test
cmpsl
lds
sti
pop
adc
jb
add
lahf
sti
leave
icebp
stos
push
idiv
filds
cltd
dec
orl
sbb
mov
mov
cmpsl
iret
test
cmpsb
adc
loopne
adc
push
inc
mov
out
cmpsl
jp
add
out
jno
aaa
bound
mov
lahf
fwait
dec
fwait
int3
and
xchg
lods
push
call
hlt
pop
jecxz
xchg
rcll
and
ss
js
mov
adc
mov
icebp
add
fwait
popa
xor
jns
xchg
xor
xchg
mov
and
sahf
push
int
mov
cmp
sahf
in
inc
insb
cld
nop
cli
fmul
xor
call
aam
push
cwtl
mov
lods
dec
ret
enter
ffreep
and
lcall
ss
test
or
stos
xor
pop
dec
repnz
std
insl
jg
mov
push
sbb
loope
gs
mov
and
insl
pop
mov
and
in
addr16
adc
mov
mov
sub
mov
inc
sub
and
test
mov
cli
add
insb
das
sti
fsubp
mov
xor
and
push
adc
andb
mov
jbe
iret
lea
in
cld
cmp
jo
pop
pop
cmpsl
out
cmp
cld
cwtl
je
mov
jp
add
addr16
and
in
xchg
adcl
in
cmc
adc
fldcw
imul
mov
test
xchg
dec
enter
pop
sbb
add
scas
mov
or
insb
mov
dec
mov
shll
rolb
shlb
lods
mov
popa
ret
pop
scas
xor
xchg
aad
and
xchg
mov
push
rol
lret
mov
ss
or
insl
movsl
pusha
push
ss
int
arpl
xor
and
pop
dec
push
fidivrl
inc
cltd
stc
cwtl
das
mov
in
shl
dec
movsb
sbb
ja
adc
daa
lods
fsubl
mov
adc
adc
scas
ss
push
repnz
mov
mov
mov
mov
cwtl
adc
stc
mov
lea
or
arpl
mov
lods
out
sbb
mov
cwtl
lods
clc
push
dec
jbe
cwtl
stc
jg
shll
call
sbb
mov
mov
pop
out
cs
push
mov
mov
loope
popa
sbb
sub
fisubl
cmp
inc
and
and
xlat
mov
xor
mov
ds
ss
sub
sbb
js
nop
je
add
mov
mov
or
adc
jmp
dec
arpl
sub
aas
test
je
jge
repz
jmp
mov
sbb
mov
shrb
pop
pop
push
xor
test
jmp
mov
shlb
jge
xchg
pop
pop
and
xchg
pop
jmp
mov
cltd
adc
lds
jnp
out
daa
popl
add
ret
cmpsb
cmp
push
mov
in
xchg
ficomps
imul
insl
and
sub
inc
shrl
push
mov
negb
mov
arpl
or
xlat
in
dec
cltd
mov
xor
loop
or
inc
or
dec
cmp
adc
inc
mov
push
jbe
pop
clc
adc
sbb
loop
push
xchg
or
lret
mov
rorl
hlt
js
and
jns
inc
adc
pop
rcrb
stos
fistl
sub
outsl
orb
and
push
jnp
cmc
pushf
jg
pushf
loopne
movsb
mov
cmp
sti
aam
sub
sahf
mov
dec
jbe
sub
jno
test
sub
sar
add
jle
jae
lret
cs
scas
mov
rolb
lea
add
leave
ds
test
or
gs
sub
sbb
shlb
mov
sub
scas
les
xor
xor
jae
dec
push
sub
adc
mov
int3
jne
arpl
sti
dec
ret
pop
push
fldt
fdivrl
enter
inc
subb
movsl
pop
aad
and
or
push
movsl
test
push
out
sti
mov
or
add
mov
leave
jns
add
sti
pop
in
scas
test
je
cwtl
cld
insl
outsb
stos
adc
dec
les
test
adcl
mov
or
fcoms
movsb
inc
popf
popa
mov
sbb
test
lret
pop
jne
mov
mov
in
shll
into
lock
aaa
movsl
push
mov
push
and
iret
rcr
pushf
pusha
xchg
or
arpl
jo
lds
scas
mov
sub
bound
mov
or
jg
mov
inc
das
xchg
inc
fsubl
pusha
popa
jle
push
ljmp
movsb
cli
push
dec
mov
cmpsl
dec
leave
fcmove
mov
or
dec
test
push
and
fldl
push
xchg
data16
and
ret
jne
sbb
mov
aaa
mov
insl
add
cmp
adc
dec
adc
int
stos
pop
xor
and
jno
jo
imul
push
sbb
mov
xor
xlat
add
cli
xchg
jp
sub
and
inc
pop
push
mov
out
stos
adc
data16
call
mov
xlat
dec
push
mov
movsb
ret
lods
mov
mov
mov
out
insl
daa
xchg
cltd
add
test
lcall
add
dec
sub
pop
sbbb
inc
push
add
adc
dec
dec
pusha
mov
sbb
lahf
adc
hlt
and
das
shll
mov
mov
mov
test
inc
jmp
roll
adc
stos
and
push
mov
sbb
in
cmc
xor
popf
insl
xor
and
imul
into
pop
xor
adcb
in
xchg
repz
out
cmc
sub
add
cmp
push
loopne
sbb
and
aas
cltd
fisubl
addl
lods
int3
sbb
mov
loope
sbb
cwtl
jge
cmp
nop
mov
add
push
dec
push
jno
xor
lcall
adc
daa
incl
mov
mov
add
mov
fdivs
xchg
mov
idivl
ret
adc
out
mov
mov
cmp
mov
dec
loopne
cmpsl
aas
mov
fadd
into
xor
fisubrs
std
loopne
movsb
fstl
and
xor
cmc
adc
push
call
sbbl
addr16
push
arpl
shlb
jecxz
test
add
andb
or
adc
cmp
or
loop
add
push
push
cmp
xorl
jmp
pop
and
adc
in
in
mov
adc
pop
psrlq
push
mov
cmpsb
jle
data16
fdivs
inc
popa
sbb
fwait
push
mov
jge
xor
mull
out
add
bound
mov
adc
rol
xor
mov
cmp
fidivrl
negl
jmp
jge
mov
jecxz
jecxz
pop
fs
es
push
cmp
aam
ss
scas
jb
jp
lods
add
mov
and
test
adc
scas
or
lahf
sub
shrb
je
data16
xchg
push
mov
cmpsl
jb
or
movlps
dec
and
push
daa
inc
pop
pop
cmp
sarb
mov
cwtl
or
add
lock
mov
jo
cmp
inc
mov
or
xchg
frstor
imul
sub
sub
push
push
pop
mov
not
and
mov
test
mov
mov
sub
mov
pop
or
sub
sbb
mov
xor
and
cmp
cmpsb
jnp
arpl
scas
and
aam
inc
jl
repnz
mov
addr16
outsb
push
mov
push
push
aam
int3
test
fdivrs
or
mov
imul
add
add
push
imulb
into
lret
lock
sarb
addr16
ret
call
adc
inc
sub
add
adc
adc
jns
ss
mov
mov
push
mov
out
push
lods
or
inc
sub
int
push
pop
fstpt
xor
or
xchg
insb
add
gs
inc
enter
inc
or
lods
xlat
cmp
jo
cmpsl
sub
sbb
pop
mov
int3
leave
addb
sbbl
add
mov
movsl
add
insb
bndldx
loopne
testw
icebp
bound
aas
fdivrs
test
push
xchg
mov
xlat
mov
xchg
orb
or
daa
add
add
test
or
mov
pop
lahf
ja
gs
cmp
cmp
add
mov
mov
rclb
sub
cld
sbb
std
xor
mov
inc
mov
fnstenv
dec
aas
jge
sub
bound
fwait
inc
adc
mov
mov
mov
and
jb
mov
popa
xor
jg
cmp
dec
loopne
stos
adc
fnstsw
mov
sbb
hlt
repz
add
push
jns
and
inc
jle
sub
aad
out
imul
push
mov
xor
pop
dec
push
adcb
pushf
in
and
test
mov
hlt
sub
cmp
xchg
mov
sbb
inc
gs
xchg
mov
fsubr
mov
sbb
jo
mov
cmp
jmp
xor
jl
and
push
rclb
cltd
xor
mov
lahf
add
fisttpl
push
push
inc
test
leave
or
add
sbb
jmp
push
popa
in
movsb
rclb
jbe
mov
insl
cmc
mov
cmp
out
jecxz
loop
push
and
xor
mov
jnp
adc
push
fstpt
out
sbb
scas
imul
lods
filds
movsb
jb
adc
dec
out
mov
mov
jmp
ret
mov
xor
inc
mov
jae
xchg
out
scas
pop
insl
sarl
and
jbe
jne
enter
lea
pop
jmp
inc
stc
dec
jmp
and
testb
dec
aam
jo
scas
adc
lods
pop
jmp
dec
mov
bound
scas
ja
push
add
xchg
mov
xchg
rclb
adc
insb
pmaxub
stos
pop
int3
dec
push
cs
imul
fst
fistpll
int3
push
dec
test
mov
inc
sub
jnp
pop
dec
pushf
sub
pop
mov
or
jmp
inc
aam
sub
repnz
push
mov
cmp
cs
and
not
cwtl
stc
mov
push
cmp
mov
mov
xchg
jge
aas
in
inc
sbb
mov
jecxz
inc
pop
push
push
sbb
dec
or
loope
mov
rorb
mov
and
insl
loopne
dec
mov
call
rcr
jle
movb
enter
daa
cmp
mov
popf
sti
lods
adc
sbb
inc
sub
fst
mov
jns
mov
popf
int
adc
jp
xchg
mov
dec
ret
andb
mov
push
rcl
fimull
jnp
ljmp
push
adc
loopne
test
clc
aas
cltd
gs
pop
lods
xorl
jbe
and
ja
jne
pop
ljmp
inc
push
ss
loop
roll
das
pop
adc
jns
dec
pmaxsw
cld
cmp
fists
faddl
add
inc
and
incl
test
or
in
lea
lcall
call
xor
pushf
aam
clc
adc
mov
popf
mov
dec
lea
jnp
push
cmpsb
adc
xor
lock
hlt
sub
sub
push
cmpsb
jmp
cmp
fcmovb
gs
jmp
jae
push
pusha
and
pop
jnp
add
fucomp
les
ficompl
jecxz
mov
addb
adc
pop
fdivs
and
add
add
inc
dec
clc
leave
adc
bound
leave
idiv
pop
fs
testb
adc
jb
jl
mov
mulb
ret
mov
je
pop
iret
jg
sbb
std
mov
jae
pop
xor
outsl
mov
mov
mov
cmp
aam
pop
cmp
cwtl
inc
fstl
cld
fmul
imul
sub
inc
cld
or
or
mov
lods
scas
in
lcall
ja
mov
push
mov
shlb
adc
or
in
cmp
lret
cld
repz
push
mov
jg
xor
adc
popf
xchg
mov
outsl
call
in
scas
pop
jo
jo
or
shr
or
addr16
imul
xor
jp
push
cmpsb
stc
lret
sbb
xor
fadds
std
push
in
add
push
mov
test
add
adc
jp
fninit
aas
sub
repz
idiv
sub
lret
xor
adc
sbb
subb
aas
aad
cmpl
mov
sbb
mov
bound
adc
bound
inc
inc
aad
mov
test
insl
out
in
movsb
in
jnp
push
xor
mov
in
push
out
dec
push
call
mov
cmp
mov
outsl
push
mov
sbb
sbb
cmpl
jns
sub
das
in
scas
ret
cmp
pop
fmuls
or
pop
add
mov
push
dec
rorb
stc
or
add
test
add
rol
mull
mov
movsl
in
repz
dec
js
mov
mov
rorl
sub
push
ljmp
insl
xchg
xchg
mov
lods
mov
dec
pop
or
xor
pop
out
cmp
and
imul
lods
cmpsl
popf
cmp
pop
jae
jae
arpl
add
ljmp
mov
and
add
sti
or
mov
push
push
lahf
sub
repnz
sub
lods
pop
or
and
lcall
mov
aaa
xor
sahf
mov
add
pusha
push
push
adc
into
xor
or
xlat
jle
das
stc
jb
push
mov
cmpl
jns
sbb
xor
mov
roll
stos
stos
jae
paddsb
xchg
data16
sar
jo
xchg
xchg
lods
mov
js
repz
cld
and
cmpsb
fbld
cli
fcompl
fsts
sbb
cmp
pop
sbb
loopne
dec
int3
dec
and
imul
sbb
jnp
std
jae
jo
jp
pop
xchg
outsl
aaa
test
xchg
lods
inc
jae
adc
and
js
enter
fbstp
inc
sti
dec
outsl
ljmp
and
dec
push
hlt
in
not
sbb
adc
clc
leave
fldenv
xchg
test
xchg
inc
sub
jl
movsl
dec
nop
in
aas
pop
fimuls
mov
and
js
sti
dec
push
mov
fdivs
or
fldlg2
dec
push
stc
or
inc
adcl
call
cld
cli
sbb
or
mov
fcomi
in
add
jg
or
in
test
mov
and
mov
or
aam
mov
and
cli
cwtl
add
cli
aam
or
mov
enter
ret
pushf
xchg
aam
xor
jo
pop
clc
cmp
shll
sbb
shl
xchg
jmp
pop
repnz
sub
mov
dec
mov
bsf
pop
adc
mov
push
mov
addr16
aas
aad
push
cs
mov
in
push
dec
jp
add
int3
into
adc
sub
cmp
xor
inc
jmp
mov
push
jge
das
jl
sbb
mov
fs
nop
mov
cltd
pop
dec
sbb
repz
pushf
scas
out
rolb
cmp
fcmove
adc
cs
rolb
arpl
sub
stos
pop
dec
xchg
scas
jp
or
add
inc
adc
outsb
popf
lods
pop
sub
pusha
fimull
stos
jge
mov
jg
jo
or
mov
repnz
sub
cmp
push
cmp
fsubs
push
xor
lahf
out
push
lcall
ds
pop
mov
repnz
mov
pop
pushl
push
xor
test
adc
push
or
push
mov
lahf
in
mov
cld
cmp
pushf
cmp
xor
les
stos
xor
mov
movsl
popf
out
sahf
xor
jl
int
xor
mov
mov
call
rol
daa
and
cmp
xor
and
pop
cmc
xor
sbb
mov
jb
jp
xchg
shr
and
test
insl
push
adc
jmp
sbb
shr
loopnew
dec
data16
xchg
fdivrl
pushf
movl
adc
jbe
or
dec
outsl
jmp
dec
add
mov
ds
sbb
cli
fadds
into
das
lea
fcmovnu
stos
daa
out
imul
xlat
ljmp
pushf
cmp
stc
cmp
jmp
hlt
inc
xchg
ja
xlat
in
cwtl
lock
cmpsl
loope
mov
inc
mov
roll
test
mov
sub
mov
pop
enter
sbb
cwtl
push
std
and
outsb
push
mov
jp
loop
mov
add
les
cmp
dec
int3
aam
sub
rcll
or
lods
bound
bound
je
fs
lahf
sbb
aad
pop
movsl
enter
mov
mulb
inc
mov
inc
jbe
outsb
adc
xchg
push
int3
sub
lcall
jae
mov
in
roll
pop
negb
mov
adc
faddp
rcr
sbb
stos
imul
sub
mov
sbb
lret
test
insb
mov
and
cli
sbb
stos
pop
cmp
jmp
inc
or
imul
xor
pop
mov
fwait
pop
xor
popa
cmp
add
mov
popa
cmp
inc
xchg
les
mov
and
std
in
mov
cmpsl
mov
ja
xchg
ljmp
out
cld
aad
xchg
mull
pop
sub
add
add
and
mov
shll
and
sbb
in
in
clc
lock
lds
shlb
or
jmp
xchg
cmp
adc
xchg
or
lds
out
inc
add
cmp
inc
xchg
gs
add
div
cmp
push
xlat
mov
in
xor
jp
jno
cmpsb
mov
lods
push
stos
adc
mov
lcall
leave
xor
daa
pop
and
jne
mov
mov
fcmovne
mov
andb
or
xor
pop
mov
les
scas
les
jno
adc
mov
roll
clc
jns
fdivrs
dec
enter
jle
cmpsl
pop
pop
shll
outsl
fwait
mov
dec
jp
jns
loop
pusha
pop
aaa
out
and
jg
mov
inc
popf
pop
shr
cltd
nop
out
dec
cmp
int3
sti
cmp
jmp
xchg
jle
mov
dec
dec
xor
xchg
je
loopne
mov
leave
and
sbb
lret
xor
jbe
fwait
pop
push
adc
cmpsb
push
loop
aam
jecxz
sahf
lcall
mov
mov
xchg
pop
pop
pusha
cmpsl
scas
mov
cmp
sub
sbb
pusha
icebp
pop
imul
inc
sahf
push
cmp
push
pushf
xor
sub
jmp
repnz
xor
mov
cmpsb
dec
or
adc
int3
je
fs
xor
enter
gs
cmpsb
loop
jae
mov
inc
loope
filds
and
adcb
rcr
fisttps
out
repz
inc
fldl2t
mov
sub
ja
popa
cmp
adc
adc
ret
mov
jb
mov
jnp
xchg
jle
les
shlb
fsubl
movntq
out
push
adc
cld
mov
test
lcall
jecxz
arpl
or
jl
js
pop
icebp
int3
bound
lahf
xchg
mov
sub
mov
adc
ljmp
cmp
loop
scas
xor
aad
or
mov
stos
scas
push
dec
sbb
rorb
fmulp
and
pop
shl
decb
mov
or
aas
sti
lods
aaa
xor
xchg
idiv
dec
cmp
in
and
mov
jle
push
or
cmp
inc
inc
mov
inc
mov
mov
repz
out
es
into
lar
xor
adc
mov
xlat
cmp
ror
fimuls
out
enter
in
jp
js
mov
nop
daa
cmp
add
fstps
push
pop
lods
add
sar
sti
icebp
insb
inc
mov
push
sahf
js
in
add
inc
lcall
push
cmc
outsb
xorb
outsl
les
push
daa
push
and
scas
xlat
jo
imul
xor
push
test
aam
stc
xor
push
bound
mov
or
push
pop
inc
mov
popf
cld
sbb
rcrb
jge
inc
fcoml
cmp
test
adc
lret
mov
test
xchg
sti
in
add
nop
call
pop
insb
loope
js
and
or
xchg
sbb
loopne
sub
xorb
xchg
leave
sbb
lahf
fstpl
stc
dec
rolb
stos
adc
cmp
popf
das
ret
jecxz
pop
mov
in
lahf
mov
in
loop
pop
jmp
cltd
scas
je
fists
mov
scas
mov
movsb
pop
and
xchg
adc
stos
mov
scas
aas
xchg
push
popa
sub
insb
dec
cmpsl
repz
hlt
mov
mov
xchg
or
inc
pop
pop
mov
test
push
mov
popa
dec
shlb
cmpsb
jmp
rcrb
pop
jmp
loopne
jl
sub
addr16
pusha
push
imul
and
adc
popf
push
sub
adc
add
addb
ja
or
pop
call
in
std
mov
clc
out
lret
pop
dec
dec
loope
aad
test
dec
daa
cmpsl
test
add
leave
mov
hlt
daa
pushf
testl
daa
sbb
xlat
aam
fstl
sub
scas
adc
inc
sahf
mov
xor
movsb
fists
lahf
pop
cmp
sbb
enter
enter
push
fnstcw
sub
sbbb
mov
movsl
sbb
mov
and
xchg
je
jmp
and
mov
fadd
jb
jne
stos
mov
dec
mov
or
mov
push
cmpsb
sub
outsb
enter
jecxz
inc
int3
shll
push
pop
jmp
mov
test
out
into
movsb
cltd
jmp
push
pusha
out
xchg
cmpsl
and
bnd
ss
push
and
mov
lahf
xchg
nop
jecxz
lds
stc
icebp
loopne
and
imul
das
idiv
cs
leave
arpl
aas
sbb
aam
into
in
dec
icebp
andl
dec
loop
xchg
pop
mov
lret
push
and
cwtl
or
mov
xor
mov
test
ret
push
sbb
in
push
out
pop
jp
jo
xor
dec
scas
das
adc
aaa
push
mov
cmc
jmp
iret
cs
enter
mov
mov
daa
adc
and
jb
pop
xlat
mov
iret
mov
mov
lods
xchg
push
lods
push
dec
add
les
jnp
addr16
and
sub
data16
incl
add
nop
cmpsl
pop
inc
or
gs
sbb
push
mov
add
and
aas
xchg
sub
adcl
insl
and
arpl
mov
nop
fnstenv
sub
sbb
dec
sahf
popa
xor
test
mov
pop
rcl
cld
jo
rclb
icebp
out
loopne
xchg
je
inc
in
adc
jbe
cltd
dec
xchg
mov
in
mov
pop
lahf
fsubrl
cmpsb
sub
out
ja
test
jb
mov
inc
xor
xor
mov
jo
js
jle
cwtl
fisttpll
jp
fistpl
mov
mov
sub
bound
stos
and
jmp
adc
inc
push
call
in
add
in
lea
out
je
rcrb
pop
ljmp
xor
incl
gs
ljmp
pusha
popf
xchg
bound
mov
nop
mov
sub
cs
les
xor
cld
push
xor
mov
xor
out
push
out
xchg
or
cmp
cwtl
insl
outsl
xor
cltd
lods
mov
and
add
cmp
add
ljmp
cmp
test
ljmp
xchg
in
dec
and
inc
mov
jns
xchg
sbb
push
out
jnp
or
jmp
push
cld
cmp
mov
lods
jne
mov
mov
loopne
push
sub
sar
fldl2e
sar
aaa
cmp
inc
add
int
mov
dec
xchg
jb
and
mov
jb
push
push
pop
outsb
repz
adc
pushf
arpl
push
adc
cld
enter
push
jle
mov
loop
jns
jle
pop
in
sub
jge
mov
mov
push
test
xor
pavgw
cmp
sub
pop
movsl
mov
rcrl
ficoms
scas
adc
push
inc
inc
pop
test
repz
clc
add
shll
jnp
inc
scas
adcl
mov
addr16
mov
cmp
mov
push
sub
add
std
mov
lods
dec
inc
push
sbb
sub
cs
push
lret
sarb
test
mov
jo
ret
js
dec
fldcw
cmp
popf
jp
cmpl
jb
out
mov
aas
add
stos
xlat
xor
mov
lea
leave
lds
inc
lods
movsb
pop
rcll
mov
adc
add
mov
mov
mov
xor
dec
sub
ret
push
mov
xchg
enter
out
jmp
push
lds
orb
pop
inc
and
jo
lods
jb
or
stos
adc
inc
fisubrs
mov
sbb
xor
icebp
xor
fs
push
mov
jmp
lret
mov
dec
aaa
aad
jmp
sbb
adc
mov
adc
pop
push
inc
push
inc
addb
loopne
popf
aaa
ss
cli
sub
or
sbb
sbb
mov
add
xor
mov
inc
std
push
std
dec
ss
adc
adc
pop
add
mov
add
add
ljmp
fisttps
out
or
add
pop
ret
push
adc
sub
popf
cmc
in
cs
jle
jmp
mov
mov
xchg
fisttpll
cmp
adc
mov
test
push
movsb
xchg
fldl
rcll
rorb
cmp
fimuls
mov
pop
subb
movsb
or
push
gs
and
cltd
inc
xor
lock
or
and
pop
sbb
xlat
rclb
ret
and
dec
mov
jge
pop
in
and
cltd
mov
lock
sub
xchg
popa
cs
fiaddl
cs
pop
or
jae
outsb
pusha
jb
sub
dec
mov
lret
int3
or
xor
int3
mov
aam
call
mov
pop
cwtl
add
pop
xor
xchg
insl
shlb
icebp
mov
arpl
dec
fs
fstpt
inc
jno
in
pop
push
movl
cwtl
ret
aas
push
cmc
negl
iret
bound
out
in
sbb
ja
sahf
mov
iret
inc
out
fisttps
nop
clc
push
fldenv
sub
push
out
cmp
sbbb
sbb
and
push
mov
cmp
jns
cmp
pop
and
xor
into
pop
push
mov
scas
dec
push
xorl
in
xlat
clc
xor
mov
add
stc
add
mov
cltd
das
sub
mov
dec
aaa
inc
push
add
std
fdivl
fstps
sub
inc
mov
daa
sbb
or
repnz
pop
test
scas
push
iret
push
movsb
mov
mov
loop
sbb
dec
adc
mov
dec
mov
push
sbb
out
sub
jle
push
call
jne
ja
sti
lods
mov
lret
stos
jno
pop
fmuls
rolb
rcrl
push
lcall
or
pop
pop
mov
test
dec
xor
mull
xor
cmpsl
mov
dec
xchg
jo
test
pop
cmpsb
pop
daa
mov
test
mov
mov
mov
mov
sbb
jns
fisttpll
adcl
sub
cmc
in
aas
xchg
test
cltd
xor
ja
scas
pushf
mov
jns
stc
arpl
jb
cli
lret
push
jecxz
ret
pop
out
and
shl
mov
xchg
scas
jno
and
xor
fwait
push
adc
lret
pop
cmpl
or
in
into
popa
cld
jns
out
adcb
adc
xchg
sub
xchg
xor
dec
fisubl
std
and
lea
or
jnp
andl
or
rorl
gs
lods
in
inc
mov
mull
or
in
js
xor
dec
movsl
cmp
rclb
jg
cmp
add
ret
mov
mov
inc
or
test
mov
cld
add
adc
dec
repz
fnstsw
insl
popf
xchg
and
add
enter
pop
loop
inc
lea
idiv
push
cmp
aam
movsl
mov
jb
imul
test
adc
sbb
jns
cs
pop
lods
or
and
and
hlt
adc
imul
fistl
xor
inc
xor
in
sub
popa
cmc
cmp
xchg
mov
popa
mov
mov
adc
jne
push
cmp
je
fstpt
cmpsb
movsb
mov
mov
mov
mov
hlt
sahf
cltd
mov
outsl
and
dec
mov
fcmovb
xchg
lea
adcl
mov
shll
add
sbb
xchg
movsb
mov
xor
shlb
decl
imul
fiaddl
cmovno
shll
pop
or
cmp
push
lcall
or
add
movsl
int3
in
mov
xor
inc
insl
and
jo
jne
push
jae
pop
inc
ds
mov
sbb
out
add
ljmp
aaa
pop
addr16
fisubs
sbb
cmp
jbe
cmp
fbstp
imul
mov
push
int3
push
fwait
push
insl
lds
inc
or
mov
xor
push
mov
push
mov
in
jle
sbb
mov
jmp
sub
flds
xor
inc
cld
aaa
call
in
mov
xor
lock
adc
outsb
mov
or
dec
stos
fcoms
xor
mov
lods
sti
out
mov
popa
xchg
outsl
dec
outsl
fisubrs
dec
test
aas
in
pop
mov
lcall
cmp
dec
jns
jp
icebp
popa
scas
adc
cmpsb
test
cmpsl
mov
loopne
orb
pushf
mov
adc
xchg
sbb
cmp
fcomi
sub
jns
int3
scas
cmp
jg
out
cmp
es
rolb
cmp
out
adc
sti
jl
enter
jge
sub
es
stos
lcall
test
ja
add
pop
cmp
pusha
insl
inc
mov
or
sub
test
les
xor
repnz
ret
cmp
in
dec
inc
test
aas
lahf
push
push
mov
in
js
mov
cmp
mov
mov
lret
mov
add
aas
iret
out
add
hlt
xchg
push
inc
mov
add
arpl
repz
icebp
pusha
inc
aam
cmc
test
in
sti
add
fmul
dec
mov
pop
jg
add
imul
push
jge
test
test
stos
aad
xor
cmp
mov
jbe
and
mov
adc
sbbb
in
cmp
mov
adc
fcoms
shlb
pushl
pusha
mov
xor
add
xor
cvtps2pd
fs
inc
push
rcr
pop
cmp
jb
pushl
out
test
imul
es
xor
cld
mov
imul
mov
xlat
inc
or
cs
cld
push
movsb
jbe
and
fwait
insb
mov
pop
push
gs
rcrl
pushl
lret
leave
sar
mov
test
data16
push
jo
add
jp
rcrb
lahf
dec
add
aaa
fs
fs
icebp
sti
cmp
insb
xor
cmp
add
sbb
cwtl
sbb
rorl
xor
das
int3
ret
dec
or
xlat
icebp
ja
bound
loop
adc
ret
adc
out
pop
jae
xlat
mov
call
jmp
jge
addr16
and
jge
insl
pop
sbb
mov
jg
test
jnp
cmp
mov
inc
inc
lods
js
add
jns
inc
xchg
outsb
mov
cmp
lahf
jge
jge
inc
or
cli
sahf
inc
fcmove
mov
bound
lods
xabort
daa
aaa
test
add
push
cltd
push
dec
lahf
pop
lret
cwtl
mov
fimull
mov
cmp
dec
mov
push
or
push
dec
ret
pusha
or
jbe
dec
cmpsb
and
sbb
jae
inc
les
movsb
push
repz
rorl
xor
lahf
imul
push
mov
sbb
js
aam
dec
fists
lea
or
mov
lods
into
and
imul
mov
adc
dec
leave
adc
xchg
inc
lea
mov
mov
and
mov
insl
pop
cmp
mov
adc
inc
pop
cmp
sahf
pop
jb
repz
push
jnp
das
sahf
mov
push
aas
in
jbe
mov
inc
jl
outsb
and
cltd
adc
fisubs
push
push
addr16
rcll
repnz
sub
sbb
sbb
and
shrl
jp
sub
jmp
push
daa
cmp
stos
and
inc
cmpl
lahf
inc
adc
xor
mov
movsl
cmp
add
std
jge
and
test
cmp
add
fmulp
mov
inc
mov
sub
daa
push
ficompl
push
jmp
cmp
fmul
dec
std
lods
orl
sub
dec
hlt
push
sbb
mov
xchg
fldt
outsl
sub
pushf
test
pop
ret
or
sub
xor
fiadds
sub
xor
fisttpll
lods
adc
adc
cld
jne
popf
nop
psubq
adc
repz
test
and
mov
rclb
test
cltd
dec
gs
push
inc
or
xchg
neg
gs
aad
mov
in
mov
das
les
inc
inc
pushf
lret
lret
jp
jo
or
xchg
les
xchg
inc
lahf
sarb
scas
mov
add
adc
xchg
mov
int3
inc
loop
xchg
inc
xor
xchg
fnstenv
outsl
aas
std
mov
shrl
les
in
pushf
or
outsb
ja
adc
mov
inc
jns
push
xor
movsl
mov
and
adc
xchg
int3
jne
fistl
sub
sbb
jb
jbe
clc
adcl
xchg
es
insb
mov
jl
pop
pop
fldenv
mov
or
shlb
mov
mov
xor
das
roll
xchg
ds
xor
or
adc
movsb
jmp
xor
out
aaa
mov
loop
jge
pop
rclb
push
cld
popa
dec
or
dec
lret
mov
lods
insl
push
ljmp
xchg
inc
out
lahf
data16
or
stc
mov
cmpsb
mov
inc
insb
outsb
int3
jl
sub
dec
repz
sub
cwtl
push
add
adc
xor
fcompl
cwtl
mov
test
adc
daa
cmp
pop
daa
jecxz
lea
in
cltd
pop
in
clc
inc
mov
es
lea
rcrl
in
ficoms
mov
cvtps2pd
sahf
sbb
pop
inc
fstl
scas
idivl
stc
int
in
xchg
inc
mov
sbb
gs
ret
out
ljmp
mov
push
int3
pusha
aad
fld
dec
pop
jle
xchg
dec
data16
mov
pop
repz
ror
aaa
sbb
push
test
push
mov
adc
js
cmp
dec
cmc
cld
adc
mov
inc
repnz
rclb
jp
sub
ljmp
daa
mov
outsb
divb
scas
imul
addr16
aas
push
mov
adcl
gs
or
dec
data16
mov
push
cli
cmp
inc
lock
mov
std
inc
mov
jp
inc
adc
test
lds
push
test
sbb
mov
in
or
sub
push
cmp
sbb
and
or
mov
hlt
dec
adc
ds
lds
push
mov
xchg
or
jg
imul
lds
shrb
jecxz
lahf
fwait
mov
ret
jnp
int3
sarl
xchg
shll
gs
fnstsw
lock
addr16
xchg
xlat
dec
cmp
data16
sahf
dec
lods
loope
mov
xchg
mov
call
jg
sbb
fists
inc
loopne
outsl
add
aas
xchg
mov
cmp
xor
into
clc
addb
mov
mov
adc
or
jmp
xchg
imul
je
rcll
fsubrl
pushf
push
mov
sub
adc
jnp
addr16
sbb
inc
xchg
stc
std
add
push
subl
sar
mov
rorl
out
add
mov
cmp
xchg
cmp
sub
out
ljmp
mov
fwait
add
xor
insl
ret
dec
outsb
out
mov
push
cltd
leave
scas
ret
inc
adc
push
jns
mov
mov
leave
sti
mov
push
shlb
das
in
sub
movsl
fnstenv
cmp
in
xchg
ljmp
addl
xor
das
outsl
push
add
cmp
lcall
pop
pop
fucomip
insb
xor
in
sbb
mov
daa
mov
mov
xchg
xchg
xchg
sbb
icebp
sbb
outsb
and
dec
mov
mov
sbb
test
inc
xlat
mov
xchg
repnz
mov
mov
and
dec
mov
add
cmp
adc
and
pop
mov
repz
pop
out
decl
dec
jge
shr
inc
test
enter
push
xor
sbb
fs
sub
and
int3
sub
push
adc
iret
jno
insl
mov
fcompp
push
xadd
or
test
or
push
or
lds
imul
cmp
adc
push
inc
mov
mov
shl
daa
lcall
movsb
loop
pop
ret
insb
test
loopne
aas
arpl
and
fstl
xor
test
outsl
idivl
lds
fidivrl
test
adc
fwait
aad
sub
sbb
rolb
mov
out
sbb
ja
loopne
fsubrs
sbb
cltd
in
fsubl
pop
and
cmp
fsubrl
loopne
sahf
je
mov
push
xchg
add
jle
push
sbb
movsl
adc
dec
adc
pop
insl
jno
add
xor
mov
fucomp
std
pop
dec
dec
pop
cmpsl
adc
cld
out
mov
mov
popa
jmp
lret
inc
iret
scas
movsl
imul
iret
mov
adc
xchg
xchg
sbb
fdivs
in
inc
aad
shlb
lcall
cmp
and
clc
xchg
ret
rclb
pop
fnstcw
mov
cs
outsb
repnz
daa
hlt
insl
add
ja
xchg
icebp
shl
shll
pop
insl
mov
insl
das
xchg
and
cmpsb
lods
fxch
imul
repz
xor
aad
pop
xchg
insl
pop
call
jmp
sar
scas
jmp
mov
cmp
jmp
out
xchg
dec
xor
aas
sarl
stos
arpl
mov
test
and
mov
add
sub
mov
enter
cltd
adc
ljmp
test
adc
cwtl
add
aam
stc
jae
aad
fstps
or
fucomip
inc
inc
pushf
fcmovnbe
jo
xchg
sub
sbb
mov
dec
inc
adc
jno
mov
jg
jnp
cmp
xchg
cmp
jge
rol
es
and
xchg
push
and
ljmp
shl
pusha
xchg
fdivrs
pop
mov
sbb
test
adc
andb
ret
mov
in
call
jbe
xchg
mov
mov
mov
iret
dec
loop
cmp
les
cli
mov
repz
inc
dec
sub
inc
addr16
pop
fst
int
inc
sbb
shll
add
movl
xchg
mov
pop
adc
int3
jle
mov
and
mov
lods
jns
and
pop
iret
adc
push
addr16
out
cltd
orb
pop
lret
and
mov
hlt
xchg
xor
pop
aas
or
fwait
jne
adcb
push
push
aas
insl
dec
sbb
ret
mov
or
ss
sbb
sbb
xchg
mov
sbb
lret
add
call
es
and
shrl
mov
lret
and
sbb
push
int
xchg
mov
es
repnz
cs
pop
xor
lret
int3
sub
adc
or
rcll
lret
test
pop
mov
and
mov
js
or
js
xor
leave
add
pop
cmpsb
mov
int3
inc
aad
jo
fsubs
pop
int
out
es
out
push
enter
filds
sahf
in
mov
hlt
in
ret
or
stos
daa
pop
sub
in
fcoml
push
xchg
hlt
scas
unpckhps
insb
cmpsl
mov
pop
arpl
loopne
inc
mov
sub
scas
icebp
cmp
adc
repz
mov
sbb
cmp
in
mov
xchg
les
push
psubsb
add
loop
int
popa
nop
lods
jmp
ret
ret
lahf
mov
sti
jns
ja
push
inc
pop
sbb
adcb
pop
lods
nop
mov
int3
test
mov
pop
sbb
dec
xor
je
scas
pop
dec
pop
jmp
lock
inc
mov
cmc
mov
roll
faddl
ret
out
cmp
dec
fstpt
pop
push
stos
testl
ror
push
ds
jmp
mov
inc
jae
movsl
lcall
rcrb
les
jne
mov
test
mov
mov
adc
jg
pop
cli
lcall
mov
fcom
and
mov
test
mov
jge
or
shrl
test
mov
sbb
inc
adc
or
mov
cwtl
pop
scas
outsl
pop
les
xchg
xor
out
dec
cmp
push
dec
mov
xchg
add
pop
lea
xlat
xor
sbb
mov
mov
addl
loope
cmp
inc
mov
lret
imul
shrb
in
int
sbb
ficompl
shrb
pushf
pop
lret
imul
cs
adc
dec
pop
inc
mov
xor
loope
movsl
hlt
sub
push
shrl
xchg
test
sti
cli
and
cmp
int
sub
iret
subl
dec
sbb
adc
cmc
lods
leave
mov
or
test
jmp
jnp
xor
sub
mov
cmp
lahf
jge
sub
inc
and
jecxz
inc
push
jge
adc
insb
ss
mov
ds
pop
repnz
pop
dec
lock
aaa
dec
dec
push
add
push
cmovge
push
ljmp
into
jns
mov
std
nop
outsl
lret
push
jb
movb
mov
nop
sub
jb
cmp
pop
enter
mov
pavgw
je
xor
cld
or
scas
jnp
fdivrl
add
shlb
das
mov
adc
popf
xor
dec
add
pop
xor
shl
pop
pop
in
jbe
adc
jb
jb
sub
dec
and
cs
sbb
into
pushf
ss
cwtl
dec
adc
lahf
jnp,pt
xchg
push
cmpb
das
and
pop
gs
pusha
and
pop
push
sub
mov
sbb
lret
cmpsl
outsl
movsl
bound
clc
dec
dec
int
lahf
jmp
inc
stos
addb
std
insb
xchg
outsl
pop
dec
cmp
jp
xor
push
insl
and
shll
das
adc
cmp
sbb
mov
adc
jge
mov
mov
sarb
scas
push
inc
outsb
out
les
incb
jmp
lock
fs
lds
fisubrs
in
or
pushf
insl
mov
mov
enter
inc
inc
mov
aaa
dec
mov
and
je
sbb
mov
mov
dec
pop
hlt
mov
mov
cli
cmp
jo
lret
sbb
add
rcrl
add
pop
mov
push
cmp
mov
cwtl
popa
cmp
dec
imul
sub
add
shrl
jae
add
sbb
xchg
add
xchg
nop
push
sub
cltd
lret
adc
inc
and
mov
ffreep
xchg
mov
les
jl
cmp
stos
sub
sub
cwtl
mov
mov
fstp
movsl
and
hlt
in
or
orb
mov
adc
jg
cmp
sbb
dec
cmp
mov
mov
add
xchg
and
nop
adc
es
aam
pop
pop
mov
int
js,pt
adc
xchg
loop
pop
xor
cmp
aas
cltd
push
sbb
xchg
lret
push
popa
xchg
mov
xor
bound
xor
xchg
rcrl
xor
xchg
fisttps
fsts
mov
and
fidivs
xor
sbb
mov
xchg
pop
js
dec
insl
inc
push
mov
or
jae
jno
leave
out
cld
mov
xchg
add
jno
pop
popf
mov
cmc
sub
js
mov
imul
andl
add
insb
push
ret
stos
lock
cmp
leave
mov
cmp
xor
gs
jnp
insb
int3
jg
sub
dec
jge
adc
xor
lock
mov
aam
push
rclb
inc
mov
cltd
cs
mov
cwtl
int
mov
int
mov
hlt
cld
fs
pop
loope
rorb
repz
sbb
mov
rorl
out
push
jno
mov
xchg
mov
int3
out
imul
xchg
mov
adc
sbb
sti
loop
imul
cmpsl
cwtl
dec
and
je
mov
out
xchg
xor
xor
pop
xchg
insl
addr16
test
call
mov
push
cwtl
and
push
pop
mov
lock
pushf
fs
shll
push
fsubrl
mov
lea
mov
lret
adc
ljmp
pop
mov
and
fstl
jae
clc
push
pop
sub
mov
xchg
push
cmp
cmpsb
mov
popa
sbb
cmp
push
inc
imul
mov
out
stos
jns
cmp
xlat
das
jge
test
cmpsb
fs
jns
clc
pop
xchg
stos
cwtl
sub
jle
ds
mov
sahf
pusha
add
or
mov
dec
push
pop
insb
push
inc
in
xor
imul
cs
enter
adc
cwtl
dec
xchg
clc
push
add
pop
mov
xchg
xchg
rcl
jl
imul
mov
mov
cmp
inc
push
add
and
jle
out
pop
xor
lret
sub
mov
iret
add
push
add
jp
js
cmp
xor
andl
sti
xor
sub
cwtl
xlat
arpl
mov
jno
add
add
sar
mov
popf
lea
addr16
popa
sbb
out
dec
fmull
jo
xorb
insl
outsb
fsubrl
sarl
out
add
roll
test
pop
ljmp
sti
and
popa
xchg
mov
and
mov
ljmp
lahf
and
movl
cmp
repnz
shll
iret
sub
daa
mov
mov
loop
addr16
and
mov
pop
push
aaa
mov
inc
mov
out
daa
sub
pop
scas
dec
jo
dec
xchg
lea
sub
lods
mov
pop
fisubl
daa
inc
jb
adc
jp
aas
lea
inc
inc
sub
cmpsb
push
push
adc
aad
or
negb
lods
mov
dec
dec
xchg
std
punpcklwd
jbe
adc
mov
aam
testl
pushf
jmp
and
test
xor
pushf
mov
xchg
je
sub
aas
pop
xor
push
movsl
cmc
jae
aas
aad
sahf
sbb
sarb
shrb
stos
icebp
test
mov
dec
test
out
push
arpl
addb
inc
int3
sbb
imul
es
es
xchg
aam
jns
addb
enter
xor
int3
sbb
xor
jecxz
jbe
shlb
mov
xchg
movsl
mov
sub
aas
decl
jp
fcmovbe
cmc
pop
je
mov
adcl
in
push
gs
mov
push
aad
idivl
sub
mov
pop
cmp
jo
cmp
js
dec
dec
mov
push
loop
adcl
adc
out
mov
iret
lock
push
cld
jecxz
cmp
mov
xchg
iret
outsb
imulb
or
loope
mov
pop
jbe
outsl
xorl
shrb
mov
inc
pop
das
lods
or
jne
repz
mov
xchg
sbb
xchg
pop
and
ret
jecxz
mov
dec
lea
loope
cwtl
jbe
out
dec
mov
aad
ds
mov
aas
dec
mov
lret
icebp
sahf
ja
not
inc
popa
xchg
stos
xchg
or
add
fdivrl
or
scas
js
rcr
dec
hlt
insb
bound
pop
or
andb
add
repz
inc
std
orl
or
enter
push
mov
fistps
iret
fmul
pop
test
fimull
dec
push
pop
es
pop
dec
insb
xchg
mov
push
sub
xchg
aam
add
ficomps
out
jge
xor
pusha
cmp
inc
inc
fmulp
lahf
push
nop
mov
mov
sbb
mov
mov
fdivs
mov
mov
mov
sbb
pop
negb
nop
popf
enter
jmp
push
push
cs
ror
pop
scas
cmp
or
rorb
mov
xchg
cmp
push
test
add
ret
pop
pop
iret
daa
sub
or
insb
lock
or
and
xorl
cmp
fdivrl
jb
stos
outsb
pop
add
mov
ds
pop
icebp
push
shlb
mov
out
or
fsubs
pop
pop
sub
mov
or
xchg
test
test
outsb
in
sbb
mov
and
adc
sarb
push
test
rorb
dec
insb
fldl
pcmpeqb
jl
pop
inc
xor
jl
mov
dec
sahf
pusha
popa
mov
push
mov
hlt
rcrb
es
pop
jge
addr16
sub
lds
xor
fst
test
mov
mov
cmpsl
rclb
mov
iret
pop
dec
lret
jns
adc
daa
mov
incb
jmp
stc
out
subl
sub
mov
les
dec
loope
adc
mov
roll
aas
shll
cmp
mov
push
int
push
jl
into
cmp
out
fsubl
push
test
add
mov
pushw
mov
jbe
sar
sub
dec
mov
sti
sarb
xor
in
sbbb
pop
hlt
push
sbb
bound
popa
inc
dec
dec
jno
dec
and
sbb
pop
xchg
push
and
outsl
sarb
out
add
inc
push
mov
mov
cmpsb
mov
bound
sub
sub
cmp
lods
cmp
add
or
ficoms
repz
cmpl
add
cmp
mov
push
loop
ds
stos
daa
dec
push
gs
aaa
dec
leave
and
addr16
sbb
jge
push
or
push
add
sahf
cmp
xchg
pop
test
lods
inc
js
into
or
inc
or
jne
addr16
cld
pop
pop
adcl
or
scas
std
and
or
cwtl
xlat
mov
shll
push
adc
fdivl
xchg
hlt
jbe
out
pop
imul
sahf
jno
mov
into
fmull
fs
dec
mov
int
nop
lds
adc
sub
xor
pop
test
inc
push
push
stos
je
and
test
outsb
and
ret
mov
insl
cmpsb
test
cli
sub
clc
nop
das
test
icebp
mov
adc
in
std
mov
or
inc
inc
xchg
nop
push
xchg
ds
inc
mov
dec
hlt
das
mov
push
xacquire
out
clc
outsb
inc
movsb
dec
gs
mov
pop
cwtl
jo
in
sub
in
lods
and
andb
or
cmpsl
pop
dec
repnz
aam
ds
dec
outsl
add
cmc
arpl
mov
lea
push
ljmp
push
inc
bound
or
mov
cld
or
sar
out
add
cld
arpl
pop
or
inc
sbb
jl
mov
cli
cmp
push
lahf
mov
inc
std
out
push
adc
sub
xor
repz
aad
inc
ud0
in
cmpsl
mov
lods
shr
mov
xor
and
or
fnstenv
sub
xor
nop
cmpsl
adc
pop
adc
cli
mov
in
imul
test
test
mov
or
jno
mov
dec
stos
sbb
inc
cltd
outsl
stos
cltd
xor
inc
or
or
arpl
stos
xor
out
and
shlb
mov
jl
xchg
cmp
hlt
hlt
cmpsb
ret
aas
stc
dec
or
pop
inc
in
call
push
aad
pop
mov
lret
xchg
syscall
outsb
or
jge
jmp
das
cmc
pop
jecxz
test
adc
inc
js
bound
pop
pusha
push
sub
jecxz
dec
dec
fisubs
mov
lahf
mov
lods
mov
push
push
sarb
in
int3
fisttpl
xchg
xor
pop
dec
cli
mov
fs
mov
and
push
shll
lods
mov
in
mov
popf
sub
push
xchg
test
and
dec
les
pop
add
loopne
lcall
mov
cmp
cmp
lea
cmpsl
cmpsb
dec
cmpsb
pop
add
test
sub
xchg
sub
and
add
cltd
sub
mov
push
lods
nop
add
out
shrb
scas
jg
inc
push
mov
into
push
fdivrl
dec
xchg
or
and
inc
in
lods
or
cli
mov
iret
lods
pop
out
ret
push
inc
inc
mov
mov
outsl
in
push
mov
mov
xor
in
add
mov
addr16
pusha
pushf
bswap
movsb
dec
jp
cmp
add
inc
outsb
rcll
popa
add
jmp
inc
fsubp
cwtl
rolb
imul
das
add
lds
mov
mov
call
aad
inc
arpl
cwtl
jb
addr16
data16
push
fsts
subb
push
sub
cltd
mov
nop
push
and
mov
int
in
fwait
xchg
rolb
cld
dec
pop
cmp
movsl
adc
imul
push
fucomip
popa
repnz
cmp
mov
mov
jns
and
enter
popa
sti
and
mov
repz
rol
clc
xchg
pusha
call
ds
fbld
clc
rcl
cmp
fst
jae
movlps
cmc
push
add
ret
pop
scas
jecxz
pop
jecxz
push
les
sub
mov
xlat
int3
cli
outsb
cmc
aas
lods
cld
cmp
cmp
or
leave
adc
testb
insb
lahf
sbb
or
mov
enter
sti
loopne
fwait
insb
out
jmp
or
in
test
js
rorb
ds
lods
push
cmp
loopne
jg
jne
in
mov
add
imul
jo
mov
inc
or
faddl
cli
das
cld
xchg
add
dec
mov
dec
test
mov
mov
lcall
mov
out
jmp
or
xor
push
mov
lcall
push
loope
movsl
loopne
cmp
pop
andb
mov
and
clc
aas
lock
push
test
pop
insb
popf
fnstcw
push
out
jle
mov
imul
fisubl
push
es
popa
adc
adc
sbb
xor
iret
mov
icebp
xchg
mov
lahf
sbb
lret
mov
mov
xchg
jle
out
hlt
dec
mov
and
jo
popf
subl
icebp
ret
dec
adc
mov
loope
xlat
pop
push
les
xlat
mov
loope
addr16
pop
jnp
inc
mov
fsubrl
outsb
xor
rcll
jne
and
mov
sbb
cmpsb
and
insb
dec
push
and
jae
outsb
push
mov
enterw
sbb
movq
call
xchg
mov
mov
pop
xor
xor
pushf
cltd
mov
bound
js
adc
shlb
shl
repz
pop
shl
orb
pushf
lcall
and
mov
xchg
cmp
push
dec
pop
loop
xchg
or
pop
aam
js
fdivl
hlt
jnp
pop
cmc
cmpsl
fwait
mov
and
dec
hlt
mov
cmp
cmp
pop
add
call
sub
fbstp
dec
xchg
pop
mov
and
int3
repz
ja
push
lods
or
sub
jnp
mov
vpsubq
jo
popf
push
scas
xor
inc
jns
xchg
test
dec
cmp
sub
cmp
jb
mov
mov
nop
jnp
pop
test
jo
xchg
arpl
sub
sbb
pushf
cmpsl
jns
mov
pop
or
repz
imul
add
or
or
int
ja
inc
and
mov
push
add
data16
movsb
ret
addl
mov
or
push
cli
dec
mov
rcrl
dec
aam
sbb
ret
xchg
outsl
in
xchg
lds
aaa
mov
arpl
or
dec
jecxz
mov
and
frstor
fnstsw
add
inc
lahf
or
stc
gs
dec
gs
jne
and
daa
ret
push
leave
jns
aam
jnp
or
cmp
std
dec
push
ja
add
outsb
lret
fwait
cmpsb
jbe,pt
cmp
outsb
xorb
rorb
pusha
inc
xchg
add
dec
or
xchg
pop
repz
adc
adc
jo
xor
adc
repnz
movsb
iret
stos
movsl
movsl
mov
fwait
pop
sbb
mov
add
insb
rorb
ja
mov
jo
repz
cmc
xor
dec
imul
clc
push
inc
push
movsb
in
stos
dec
pop
and
scas
sub
and
add
loop
cmp
imul
add
mov
or
insl
mov
rorb
pop
sahf
sub
push
sub
and
mov
and
push
xor
sub
arpl
xor
mov
sub
push
mov
and
adc
lahf
inc
int
pop
std
cwtl
pop
fisttpll
js
lods
sahf
dec
shll
arpl
xchg
loopne
test
loop
cmp
push
push
aaa
nop
mov
dec
or
mov
stos
es
mov
adc
or
jp
stos
add
xchg
std
out
mov
insb
push
or
fsts
js
mov
lods
sarb
lds
lret
mov
pop
imul
or
popl
fwait
addr16
jbe
pop
mov
pop
leave
mov
dec
mov
shlb
pop
dec
stos
fidivrl
sbb
add
xor
sbb
clc
mov
sub
stos
mov
xchg
mov
cmp
jecxz
inc
and
sbb
popa
outsl
add
ud0
repz
ja
fs
insb
inc
aam
sbb
shll
addr16
clc
ret
repnz
jmp
xchg
inc
decb
push
cmp
fiadds
aad
outsb
out
outsb
dec
cmpsb
xor
push
js
xor
sahf
cmpsl
fmuls
adc
stos
sbb
js
sub
cmp
xor
in
mov
xchg
stos
testb
xchg
cli
cmp
lods
mov
int
push
daa
xchg
push
inc
push
dec
aaa
mov
mov
sub
mov
leave
addr16
testl
std
in
mov
cmp
mov
xor
fisttpl
push
mov
insl
pop
pushf
outsl
pop
scas
test
stc
sti
push
in
add
lcall
mov
repnz
int
mov
mov
popf
xchg
jg
adcl
lahf
xchg
stos
inc
aad
in
rcrl
push
cmc
rorb
jp
mov
test
cld
or
mov
fisubrl
into
insb
nop
not
rorb
arpl
mov
jno
xor
lcall
add
or
arpl
sub
test
ja
sbb
sbb
and
out
in
lret
insb
dec
pop
cmp
stos
dec
scas
jp
mov
or
dec
das
lock
enter
in
xchg
aad
push
jp
cmc
adc
sahf
xor
sarl
shr
mov
movsb
push
jae
add
call
daa
dec
jne
ja
inc
mov
pop
nop
enter
xor
adc
sbb
cs
inc
into
cld
jnp
pop
ljmp
jnp
and
cmp
sahf
inc
std
jmp
loopne
movsl
scas
icebp
jp
xchg
ljmp
adcb
pop
ret
push
adc
pop
mov
lea
daa
outsl
sarb
lods
scas
pop
cltd
pop
mov
addr16
mov
lret
add
hlt
mov
jg
dec
aad
cmp
daa
sbb
stos
scas
mov
jo
mov
ret
clc
jnp
or
push
or
jmp
sbb
popf
into
sub
out
pop
daa
mov
pop
pop
jp
js
ss
mov
push
sbb
das
les
movsl
andl
mov
arpl
cld
aam
push
mov
stc
jmp
int3
out
imul
lea
and
stc
scas
adc
adc
xchg
pop
mov
movb
rcrl
mov
and
sub
outsb
loop
mov
mov
sub
mov
shrb
pop
aas
mov
jne
push
fisubs
fs
mov
rclb
int
es
stos
stos
fisttps
outsl
shrl
mov
pmulhw
push
notl
enter
mov
enter
cltd
repnz
mov
daa
lds
jg
ret
mov
cmp
mov
cld
add
sbb
and
ficompl
test
sub
scas
js
mov
add
das
idivl
mov
add
and
ss
dec
pop
repz
push
xchg
mov
xchg
lea
push
dec
in
insl
shrb
movsb
and
cmpsb
ja
push
mov
mov
inc
mov
rol
mov
lret
jle
mull
test
dec
mov
jbe
rcrb
pop
jne
or
mov
mov
xchg
jmp
movsl
mov
mov
rolb
insl
and
cmp
ret
and
negl
inc
cwtl
add
sbb
loop
xor
outsl
push
add
bound
fcom
jns
jne
lock
adc
adc
or
pop
lret
inc
in
dec
or
pop
cld
push
arpl
fildll
lods
fwait
movl
shlb
mov
cmp
xor
cmp
outsb
dec
fistps
mov
popf
push
mov
ljmp
test
popa
mov
in
das
lahf
xchg
sahf
mov
stc
aaa
mov
es
xchg
stos
js
push
adc
sti
jle
arpl
mov
nop
rcrb
rclb
sub
and
jl
int
adcb
xor
out
cmp
mov
xchg
dec
jno
rol
js
test
xchg
mov
dec
or
adc
imul
popf
jne
xor
pop
sti
mov
and
fldl
mov
mov
pushf
add
ja
scas
fdivr
cmp
scas
test
jg
jmp
jns
mov
cmp
popa
xchg
or
out
mov
sbb
popw
cwtl
push
jmp
dec
sbb
push
dec
adc
push
negl
dec
fadd
mov
mov
dec
imul
xchg
push
insl
push
mov
adc
jge
mov
rorl
cmp
lds
sbb
jmp
push
lahf
aas
cmp
xchg
pop
insb
xchg
inc
fidivrl
xchg
scas
push
aas
jno
sar
cmp
mov
and
cld
mov
mov
mov
cmp
ds
in
mov
mov
ja
xchg
cld
call
lcall
stos
insl
jnp
stos
xor
push
lahf
stos
daa
ror
jg
dec
inc
inc
sahf
cmpsl
jle
xor
inc
pop
int3
insl
xchg
adc
js
mov
add
out
ss
mov
popa
pop
mov
inc
std
push
push
pushf
pop
cs
cmc
pushf
jno
mov
xor
lcall
sub
neg
insl
cmpsl
push
pop
mov
xor
add
punpckhbw
xchg
dec
aad
ds
add
adc
push
push
ds
je
mov
or
xor
es
ss
xor
out
jnp
dec
leave
daa
addr16
adc
and
mov
or
xlat
push
fldl
bound
cmp
xor
push
aam
rorb
in
outsl
xchg
xchg
and
scas
mov
dec
add
jb
popa
sbb
mov
jnp
vmwrite
jecxz
cmpsb
mov
inc
lods
ret
test
ret
push
pop
insl
mov
cmp
mov
inc
cmp
inc
xor
stc
and
pop
les
icebp
cld
xchg
cld
xchg
sub
inc
arpl
pop
negb
mov
iret
mov
or
pop
mov
popf
jb
stc
sub
fistps
fwait
aaa
jns
add
repnz
outsl
and
ret
rol
into
sbb
jmp
inc
xchg
xor
clc
aam
out
addr16
push
fistps
xchg
cs
cmp
js
iret
add
sahf
or
test
mov
sub
cmp
mov
les
scas
sub
das
pushf
popf
fdivr
dec
hlt
jnp
decl
and
mov
cmpsb
fstpl
jg
xchg
rcrl
push
mov
cltd
jne
rcll
int3
or
cmpsb
push
pop
xor
mov
push
sub
fnsave
lods
mov
stos
mov
xor
roll
clc
jno
dec
xchg
out
les
lods
fcmovbe
int
jae
jnp
mov
flds
pusha
push
cmpsl
jnp
push
pop
fmuls
cltd
xchg
movsl
mov
pop
dec
mov
fsubrs
in
adc
sti
popa
dec
pop
nop
inc
add
inc
out
cwtl
adc
inc
jl
jl
fmul
rol
js
mov
cmpsb
fld
int3
dec
loop
push
int3
adc
cmp
mov
fs
cmc
mov
shl
adc
out
test
push
enter
cwtl
jg
xchg
xchg
cmp
mov
xchg
lcall
jge
mov
out
lods
addl
and
insb
stos
xchg
imul
cld
mov
or
sub
loop
inc
std
in
ljmp
andl
pop
lds
mov
leave
stc
mov
dec
adc
push
sub
mov
hlt
in
xor
sbb
xor
sub
insl
jno
mov
iret
in
xchg
lcall
push
add
pop
out
mov
test
cmpsb
lret
jg
adc
add
movsb
mov
in
ret
sbb
pop
jmp
and
cmp
in
int3
jns
sbb
xor
sbb
das
lahf
pop
les
fcomps
or
aaa
mov
inc
xchg
movsl
cwtl
mov
cmp
movsl
mov
popf
loope
cli
cmc
nop
pop
loopne
lahf
inc
lods
push
int
repnz
adc
sub
dec
rorb
and
icebp
pop
adc
jno
pop
mov
inc
xchg
pushf
mov
sub
push
test
clc
sub
fs
push
mov
es
mov
mov
data16
scas
movsb
push
jmp
cltd
xchg
adc
aam
xor
jae
out
ret
mov
popa
aas
xchg
popf
mov
jp
mov
inc
jge
stos
lds
and
push
iret
inc
push
mov
fcomps
pop
iret
ds
xchg
cwtl
and
out
cs
std
sub
xor
lock
imul
jnp
popa
sub
jl
push
push
push
outsl
mov
pop
sti
add
fadds
iret
xor
loopne
and
das
sub
fstpt
int
mov
outsb
push
aas
push
mov
sub
jns
sbb
sbb
testl
imul
cmp
pop
xchg
dec
mov
cmp
das
cli
movsb
mov
lds
icebp
pop
test
push
mov
dec
mov
dec
mov
mov
pop
xor
mov
and
mov
sub
add
add
xchg
mov
or
inc
cmpsb
mov
mov
fnstcw
inc
pushf
dec
cwtl
jle
dec
mov
mov
movsl
fnstcw
mov
addl
lahf
add
shrb
cmc
jo
pop
int3
shll
pusha
mov
addr16
rorl
in
inc
push
push
int
inc
in
dec
mov
stc
test
sti
fstpt
or
scas
push
pop
sub
inc
jmp
mov
std
push
adc
push
pop
or
mov
or
mov
data16
lcall
dec
mov
stos
lret
cmpb
daa
lods
sahf
push
js
test
cmc
shlb
pusha
pop
cs
mov
lret
movsb
pop
in
sub
dec
das
mov
inc
pop
dec
mov
outsl
ds
sbb
aam
xor
mov
filds
jmp
jo
fs
outsb
aaa
lahf
sbb
lock
lret
pop
lock
inc
movsl
cmp
in
aam
pusha
add
cs
daa
scas
push
inc
xchg
mov
popa
adc
sub
loope
out
je
outsb
push
push
jecxz
mov
lods
mov
sub
hlt
icebp
mov
xor
int
inc
pop
insb
pop
cmp
insb
nop
dec
inc
shl
adc
and
dec
pop
mov
insb
jmp
icebp
sahf
dec
or
shll
insl
cmpsb
aaa
sub
pop
add
dec
std
int3
out
xor
or
jmp
rcrl
aaa
hlt
mov
jne
push
dec
inc
cmp
pushf
dec
pop
dec
repz
and
enter
roll
and
bound
nop
push
addl
popa
dec
outsb
dec
pop
xor
add
push
inc
fwait
cmp
push
shll
jmp
mov
pusha
xlat
test
in
or
es
sub
adc
xor
sbbb
mov
repnz
cwtl
xchg
arpl
data16
add
cmpps
les
test
pop
leave
jmp
bound
into
shll
in
pop
jecxz
shrb
xor
sbb
add
dec
mov
imul
sbb
mov
dec
xchg
xor
pop
dec
jmp
or
adc
flds
push
daa
bound
mov
in
lods
fmul
and
pop
sbb
dec
outsb
dec
lods
insl
xlat
add
ret
or
mov
lods
inc
pop
daa
mov
frstor
mov
adc
in
test
mov
sbb
imul
sti
in
or
sub
sub
adc
stos
int3
ror
sub
cmp
movsl
and
leave
popf
fsubrs
std
mov
cmpxchg8b
inc
out
loop
enter
in
inc
mov
in
dec
xor
pushf
jp
and
adc
andl
ljmp
mov
lret
push
je
repz
pop
jno
jns
pop
add
xchg
test
jecxz
mov
out
scas
mov
mov
cltd
lret
sub
dec
lea
fldcw
loop
fldcw
xor
test
sahf
arpl
or
sbbl
fadd
sub
xor
mov
stc
cmpsl
mov
and
test
leave
std
dec
arpl
xchg
pushf
mov
lret
mov
cvtps2pd
das
adc
leave
inc
adc
cmpsb
mov
pop
int3
stos
mov
xchg
out
lea
sub
imul
insb
jmp
xchg
push
int3
xchg
adc
iret
int3
xchg
outsl
test
mov
mov
pop
xchg
push
sub
das
sbb
ja
popa
cmpsl
mov
flds
pop
jl
nop
cmp
incl
cmp
sbb
inc
aad
mov
loopne
cmp
adc
sbb
loopne
js
and
sbb
add
xchg
pop
mov
ss
add
shrb
fsubl
fucom
ljmp
add
roll
xchg
push
mov
repnz
mov
lods
jb
adc
imul
outsb
mov
into
popf
fcoml
dec
sbb
sbb
or
insb
rcrl
push
std
xchg
pop
add
xchg
add
add
jae
cld
popa
push
pushf
lret
movsl
sbb
mov
add
lea
mov
mov
imul
push
es
rcll
addr16
mov
add
cmpsl
andl
add
push
adc
lock
ja
test
aas
adc
stos
les
negl
outsb
lods
cld
icebp
add
adc
pop
je
frstor
xchg
fldl
popf
js,pn
jge
xchg
das
cld
sub
push
test
push
or
push
clc
adc
xor
jb
pop
xor
xchg
outsw
aad
sbb
sbb
xor
test
cmpsl
aad
push
adc
pop
scas
cltd
and
sub
ret
imul
xor
aad
mov
adc
fwait
cmpsb
jo
mov
mov
xor
pop
dec
push
lea
sub
jo
sub
mov
sbb
push
xor
cmpsb
bswap
shlb
push
shlb
mov
pop
ss
pop
int
ficoml
test
xchg
lea
mov
sbb
sti
jne
sti
test
xchg
in
popa
push
addr16
xchg
imul
fdivs
imul
je
addb
test
loopne
xchg
cli
dec
stc
sub
or
popf
inc
lret
cltd
icebp
dec
fisttpl
repz
stos
in
gs
subl
and
push
xchg
jmp
in
stc
pop
xchg
inc
frstor
test
or
push
dec
iret
or
push
mov
into
sub
bound
sub
or
dec
mov
add
call
sub
cmpl
les
stos
sub
jg
mov
test
inc
shr
mov
stc
xchg
or
aaa
dec
inc
shrb
add
cmp
mov
jg
sti
or
mov
inc
fstl
and
out
xor
pusha
adc
lret
cld
jbe
adc
push
sbb
pop
ret
sbb
les
cmp
mov
test
shl
xchg
jb
aad
dec
or
sub
add
outsb
jecxz
adc
cmpb
dec
or
faddl
or
stos
add
xchg
aaa
inc
jmp
cltd
xor
imul
roll
adcl
mov
add
stos
movsl
dec
cmp
shrb
mov
sub
cmc
fwait
in
inc
pop
push
icebp
daa
adc
insl
and
loope
sub
pop
icebp
cmpsl
stos
dec
sub
xchg
sbb
pop
int3
addr16
js
mov
add
dec
aas
jle
loope
fsubrl
jge
mov
lea
mov
jg
jns
pop
mov
test
das
mov
cmpsb
repz
popf
and
cmpsb
nop
cmp
sbbl
test
aad
movb
xor
mov
xchg
lds
pop
inc
repz
sub
jp
lret
outsb
xchg
inc
aas
out
lcall
mov
dec
int
pop
dec
jg
xchg
xlat
pop
mov
push
mov
cmc
andl
mov
inc
xor
or
sub
ds
sbb
push
push
scas
mov
mov
jne
pop
dec
sti
loope
jne
sub
jbe
js
or
or
fimuls
int
aas
sbb
enter
mov
jnp
inc
push
pop
sbb
sbb
or
mov
call
fisttpll
sahf
jl
jne
jp
cmp
ret
adc
mov
fcmovnb
jb
outsl
mov
and
out
inc
ret
add
or
fs
gs
lcall
adc
fstp
sub
shrb
adc
mov
push
pop
or
test
pop
loope
pop
call
jne
sub
int3
scas
aam
xlat
inc
jo
ja
lcall
sbb
xchg
loopne
jl
inc
and
mov
push
int3
inc
scas
loop
lcall
dec
hlt
lret
pop
stos
mov
pop
cmpsb
mov
scas
mov
icebp
xchg
jno
repnz
xchg
dec
cltd
xchg
sbb
mov
je
xor
lret
ljmp
test
ss
out
orl
hlt
adc
cli
shrl
haddps
mov
sbb
jnp
rclb
push
repnz
repz
ja
lret
push
sbb
push
mov
sbb
les
mov
push
pop
out
das
shrl
imul
xlat
outsb
sub
pop
int3
repz
dec
cmp
movsb
push
dec
push
shll
xor
sub
xor
test
aam
cmpsb
imul
imul
mov
dec
push
aaa
jbe
mov
jo
push
or
xor
mov
decl
sbb
sub
mov
adc
mov
dec
rcrl
xor
cmp
fstl
repnz
iret
pop
popf
dec
sub
fld
insl
fsubrl
inc
enter
xchg
lock
xor
cli
mov
js
pop
or
dec
add
inc
mov
xor
pop
adc
push
mov
inc
sub
mov
or
jl
repz
mov
fstp
fisttpll
lea
cmpsb
inc
push
cmp
jecxz
add
leave
inc
and
iret
adc
add
push
push
aam
push
mov
push
xchg
mov
ja
lods
push
mov
test
push
mov
adc
cmpsb
pcmpeqw
or
lea
push
sahf
filds
adc
ror
ljmp
out
mov
inc
sub
dec
cmp
or
xchg
sub
lret
mov
in
mov
push
ljmp
xchg
dec
mov
cmpsl
jl
clc
and
xor
jne
lods
push
xchg
push
mov
test
outsl
pop
xchg
xlat
js
xor
jb
jae
shl
cmpsb
or
shll
movsl
pop
add
mov
in
adc
add
cld
insb
pop
and
mov
adc
lret
cmpsb
jmp
lea
loope
add
adc
lock
stc
xor
lods
std
jae
sbb
fldenv
dec
fiaddl
dec
pop
xor
movb
mov
push
jp
jno
stc
test
stos
addr16
int
mov
push
pushf
mov
push
inc
je
pop
test
std
lods
jnp
sub
sub
gs
cmpsl
sub
xorl
adc
mov
jle
push
mov
jp
andps
leave
jo
inc
pushf
inc
xchg
test
pop
push
bound
inc
mov
sahf
xchg
mov
adc
jae
test
cmpb
cmc
fsubrs
mov
adc
mov
pop
push
and
roll
in
add
popa
lock
sbb
sub
repnz
popf
xor
js
xor
jmp
or
lret
mov
fildll
push
sahf
aam
cli
loop
push
mov
adc
les
jne
sub
lret
adc
test
lds
sbb
adc
sahf
dec
add
or
fs
orb
pushf
mov
div
scas
or
mov
ds
mov
stc
addb
lods
cs
fwait
sub
repnz
in
mov
mov
data16
xorb
mov
push
xor
or
mov
pop
jg
pop
mov
mov
lret
imull
adc
sahf
ret
out
pushf
iret
mov
mov
or
cmp
iret
adc
or
aad
pop
js
add
and
mov
ret
pop
and
test
loop
jns
push
add
inc
lds
scas
xchg
push
daa
jno
adc
ret
aaa
lcall
jge
pop
mov
clc
aam
aam
insl
mov
inc
sub
and
mov
push
orl
push
js
sbb
mov
bound
push
cmpsl
jo
xor
cmp
test
js
addr16
es
aad
lcall
dec
ja
mov
in
adc
push
addr16
push
rolb
cmp
xchg
pop
test
xor
mov
sub
cli
sbb
dec
xor
into
push
les
call
movsb
dec
or
ja
clc
scas
mov
or
hlt
push
imul
test
sbb
enter
push
mov
pop
cli
mov
gs
push
stos
aad
mov
xor
cmc
nop
push
inc
or
inc
jl
jns
jmp
push
sahf
cmpsb
insb
add
jg
lret
mov
test
xchg
idivb
rcr
dec
lods
ret
or
test
lods
cmpsl
nop
push
push
or
jno
mov
xchg
mov
loope
leave
xor
call
push
mov
mov
xchg
cs
fs
jne
cmp
ja
mov
inc
mov
inc
mov
pop
push
das
ret
xchg
add
icebp
sbb
cmpsb
cs
xor
movsb
lcall
insl
push
int
push
andb
fcmovu
clc
jae
push
out
aas
inc
leave
cmovb
js
fdiv
mov
mov
and
orl
popa
and
cld
sbb
ljmp
and
push
test
xor
aaa
in
in
outsb
push
das
jecxz
lods
inc
test
inc
jne
lea
inc
movsl
ss
jo
sbbl
mov
pop
mov
adc
pop
ret
pop
mov
xchg
test
in
in
jmp
mov
dec
insb
subl
mov
and
dec
out
pop
cmp
sbb
jo
icebp
mov
xchg
xchg
inc
jo
movsb
aaa
jp
pop
in
in
push
mov
arpl
jo
sub
xchg
imul
je
lock
sub
out
push
sti
jno
sbb
push
lahf
and
mov
sbb
outsb
mov
push
adc
xchg
popa
push
sub
inc
sarb
imul
mov
dec
int
outsb
and
jns
nop
cmpsb
push
cmp
and
fimuls
sahf
cwtl
and
xchg
scas
ret
out
xor
dec
rcll
xlat
lret
cld
sbb
pop
xchg
notb
or
lock
or
mov
fnstenv
inc
lods
xchg
xchg
std
jae
inc
pop
push
test
pop
movb
out
inc
aad
jns
mov
dec
repnz
test
mov
pop
insb
movsl
push
sbb
jl
incl
insb
dec
sub
popa
js
stos
rcll
mov
into
jp
fimull
jge
lods
mov
mov
cmp
mov
jae
xchg
hlt
adc
aas
cli
add
pop
push
add
and
ficoml
cli
cwtl
xor
fstpt
jne
inc
ds
cld
rclb
push
lahf
jp
add
scas
into
mov
jp
dec
icebp
pop
xor
jmp
and
and
sarb
mov
add
mov
or
outsb
jmp
mov
jbe
xchg
cltd
sub
adc
ja
inc
adc
sbb
jle
cld
ret
lods
or
jns
stc
rcll
aam
or
pushl
enter
jecxz
inc
inc
mov
psrad
fdecstp
push
inc
pop
sub
js
bound
leave
xor
jne
sub
loop
mov
push
rcll
xchg
push
xor
in
xor
movsb
inc
test
out
dec
push
cmp
sub
add
push
shl
leave
pop
add
jns
mov
fmuls
sbb
into
pop
add
mov
mov
jns
or
nop
jae
pusha
push
hlt
xchg
dec
push
push
out
mov
cmp
aam
aam
pop
test
push
cmp
sub
mov
mov
push
push
out
or
add
lcall
cs
cltd
scas
lods
addr16
add
add
push
test
xchg
or
testb
jns
ret
fwait
cltd
fwait
data16
test
rorb
or
into
shr
sub
shr
cli
dec
push
lods
sbb
lret
mov
inc
sub
and
dec
aaa
int
sub
fstl
rcrb
ret
xchg
stos
xor
lods
lds
dec
mov
mov
in
mov
add
dec
fmull
pop
push
mov
mov
cltd
pop
int
lock
fsub
pop
cli
add
loopne
jno
pop
push
lahf
lock
adc
cmpsl
and
jmp
mov
sub
fidivrs
out
icebp
jns
push
gs
pop
pop
lcall
pop
stc
cmpsl
ret
and
dec
int
std
pop
xchg
adc
cmp
int3
dec
out
push
xor
mov
test
loop
gs
push
add
mov
daa
jno
and
xchg
pop
mov
ss
sti
test
push
xchg
enter
sub
cmpl
insb
fldt
xchg
mov
mov
push
xor
das
das
aas
jg
sbbl
lahf
pop
loop
cltd
loopne
inc
mov
sub
insl
and
and
push
push
insb
insl
pop
jo
lahf
lret
inc
scas
mov
ret
ja
fwait
jmp
push
in
sbbb
aad
jo
push
insl
sbb
jbe
add
xchg
sti
ret
fstl
cmp
inc
int3
xchg
fisttps
mov
bound
xchg
and
jg
test
adc
dec
shl
or
mov
out
stos
mov
sti
nop
sti
aas
arpl
dec
cmp
dec
sbb
mov
test
xchg
in
rorb
inc
dec
jecxz
in
push
mov
into
cmp
in
out
sarl
xchg
mov
sub
test
dec
fs
hlt
or
or
xor
fwait
cmp
in
dec
inc
sbb
jno
test
adc
addb
sahf
das
lea
inc
jo
sar
jl
pop
pop
jp
sbb
push
cmp
inc
dec
aad
sub
and
aam
ret
je
dec
cmp
or
sub
cmp
inc
bound
sbb
aaa
xchg
cli
leave
mov
sahf
adc
fwait
push
popa
sti
jmp
xor
cmpsb
outsb
rdtsc
xchg
lret
inc
test
dec
daa
jb
dec
ffreep
sbb
test
sub
int3
rcr
pop
aad
fidivrl
sbb
shll
cmpsb
xchg
pop
sti
or
in
xchg
pop
cmpsb
and
mov
sarb
fs
shrb
sbb
aam
push
test
jne
inc
inc
pop
or
xor
lea
cmp
dec
test
mov
or
mov
popa
adc
inc
jnp
mov
add
call
mov
pop
testl
xor
movsb
cld
int3
loop
pop
xchg
cmp
mov
sbb
pop
out
push
add
lahf
je
lahf
repz
and
pop
inc
scas
cli
bound
out
popf
push
ret
jg
add
adc
aad
cs
into
rol
push
ljmp
mov
roll
ss
ret
pop
adcb
cltd
push
aam
jo
jne
popaw
bound
shrb
adc
imul
push
jnp
cmp
jae
fwait
into
movsb
mul
push
mov
out
aas
rcrb
scas
sub
pop
push
repnz
stos
pop
cmp
lahf
cmp
lds
imul
insl
push
insl
cwtl
adc
pusha
inc
and
mov
inc
in
mov
mov
int
xchg
sbb
mov
sbb
sbb
xor
dec
test
xor
lahf
push
mov
inc
inc
movsb
mov
bound
aas
mov
xor
pop
pop
cli
or
inc
in
xchg
dec
ljmp
sar
mov
ret
mov
jno
or
lahf
test
jns
imul
jg
dec
xor
and
ret
mov
or
mov
and
or
icebp
add
int3
add
iret
loope
out
xor
inc
sti
and
test
mov
in
jbe
dec
mov
or
je
adc
lock
pop
mov
xor
notl
xchg
in
nop
or
pop
adc
scas
imul
push
inc
sbb
inc
xor
je
adc
jnp
xor
sti
jns
xchg
aam
mov
jno
ljmp
lods
bound
mov
mov
cmc
push
jl
mulb
insb
fildll
cmc
cmpsl
inc
sub
notl
nop
jmp
mov
mov
dec
fstpt
sbb
or
int3
lds
inc
fnstsw
fildll
xor
cltd
stc
dec
or
mov
pop
es
adc
xor
ret
pop
mov
and
das
sbb
adc
pop
push
mov
push
lahf
push
imul
sub
testl
hlt
packssdw
incb
repnz
jnp
xchg
mov
movsb
sub
inc
orb
xchg
jecxz
cmp
lret
mov
inc
les
xchg
mov
test
push
std
push
mov
mov
jle
sub
addr16
cmp
add
mov
push
or
pop
xchg
cs
test
or
test
push
inc
sub
out
fcoml
lods
outsl
cmp
sbb
mov
bound
dec
xchg
nop
mov
hlt
pop
jb
push
pop
mov
jb
mov
cmp
mov
push
inc
jnp
insb
into
out
sbb
inc
xor
std
lret
jbe
addr16
adc
pop
add
insb
sahf
mov
sub
mov
cltd
dec
jbe
daa
cltd
sub
push
sahf
shlb
xchg
hlt
repz
fisubrs
aas
lret
mov
mov
test
mov
mov
lret
jbe
jle
xchg
sub
push
cmpsl
insl
mulb
adc
popf
cmp
add
jmp
aam
in
ss
fwait
push
mov
shr
xor
jg
xorb
sub
lcall
push
pop
pop
xlat
icebp
pop
adc
push
cmc
je
out
or
and
pop
jo
popa
cli
out
test
scas
pop
push
mov
push
es
cli
jmp
jbe
adc
inc
fcoml
and
or
daa
cmp
push
frstor
pop
xor
inc
mov
scas
xchg
inc
out
arpl
stos
dec
adc
mov
das
push
sahf
stos
sub
mov
xor
pop
and
cmp
shlb
mov
stos
adcl
lock
lea
int
js
sbb
adc
push
ret
mov
int3
lahf
fstps
daa
negl
and
jne
ds
and
fwait
mov
add
jmp
sbb
fisttpll
sub
out
negl
pop
lds
xor
shll
xor
outsl
dec
psrlq
shr
adc
pop
sbb
fld
mov
xchg
dec
jle
inc
ljmp
push
cli
in
mov
out
mov
push
pushf
and
mov
xchg
or
enter
xor
bound
mov
mov
jle
fs
xor
pop
xor
sbb
call
repnz
xchg
push
cmpsl
stc
sbbl
aad
movsl
or
mov
xlat
xor
cs
stos
push
mov
mov
push
adc
popf
adc
and
dec
scas
daa
dec
mov
lea
jb
pop
stos
pop
jge
xchg
sbb
fwait
mov
jno
mov
outsb
lret
std
lock
imul
out
aaa
fistl
cmp
dec
push
pop
sbb
pusha
cmp
popf
mov
insb
adc
or
imul
pop
dec
fwait
pop
cmp
shrl
sub
les
daa
aaa
neg
push
or
jnp
scas
xor
jl
sbb
movsl
mov
mov
jmp
movsl
test
push
push
pop
test
xchg
aad
sbb
aaa
add
orb
cltd
push
push
push
daa
mov
ja
and
inc
jns
scas
repz
icebp
addr16
mov
cld
jb
int3
call
insl
push
mov
push
xchg
xchg
daa
push
adc
mov
lahf
sbb
inc
add
mov
sub
mov
pop
push
sbb
push
push
push
add
nop
jl
test
sbb
or
add
sbb
mov
sbb
or
dec
mov
in
jno
repnz
aas
lahf
repnz
sti
pop
lret
ds
mov
fstps
mov
jmp
stos
xor
xchg
jno
repnz
xor
sbb
cmp
xor
lcall
cmc
adc
pop
xchg
daa
fwait
imul
inc
lods
loope
mov
ljmp
xchg
pop
sbbl
push
mov
icebp
and
aad
je
mov
aad
pop
add
dec
std
sub
test
cmpsl
shr
xchg
ret
xchg
dec
aad
mov
sub
lcall
iret
sub
out
cmp
rcr
jbe
sbb
les
jno
jb
daa
mov
aas
flds
gs
sub
push
movsb
inc
roll
inc
hlt
andb
cmc
repnz
mov
fcmovbe
bound
push
cmpsl
pushf
je
mov
xchg
and
cmp
subb
dec
loope
push
mov
addr16
fdivr
lret
push
in
jmp
sub
lds
mov
iret
xchg
loope
ret
sub
push
mov
ret
cmp
shl
in
ss
push
jg
ret
mov
push
push
sbb
mov
sub
aam
mull
or
dec
rcll
xchg
imul
rcrb
dec
push
outsl
out
pop
or
imul
shl
mov
call
xor
repz
dec
push
cltd
out
adc
andl
cmp
out
arpl
xor
xor
fcoml
clc
mov
pop
int3
sbb
push
in
aas
cmp
dec
cwtl
add
scas
outsb
mov
loop
hlt
out
jg
cmc
out
cmp
pop
mov
jo
dec
mov
adc
xchg
gs
aas
push
icebp
lea
push
and
jge
sarb
sub
sub
inc
sbb
arpl
add
arpl
sahf
cmpsl
rclb
test
push
in
cmpsb
aaa
sub
jae
and
arpl
sarb
and
push
lahf
push
bound
ret
aam
mov
mov
out
sahf
cmp
jge
add
or
push
rcll
mov
int3
xorb
pop
pushf
mov
cmp
fldenv
dec
in
sbb
ret
fcoms
xor
lods
dec
lock
pop
fmull
mov
xchg
xor
xor
ss
arpl
dec
das
or
push
jmp
sahf
xor
inc
cmc
scas
scas
popf
sub
add
jmp
pop
or
in
push
cmc
bound
fnstenv
add
fcomi
jmp
add
cmc
push
jecxz
inc
push
and
mov
fs
das
insl
arpl
push
sti
or
adcb
and
sub
or
fcmovne
jge
dec
sarb
inc
inc
xchg
sub
pop
ja
xor
sub
cmp
jbe
xchg
in
pop
pop
lret
out
or
xchg
test
pop
adc
int3
push
shlb
push
or
cld
push
cmp
ja
adc
rcll
and
inc
mov
test
dec
neg
sbb
cmpsb
out
movsl
cwtl
dec
add
jp
bound
jne
jns
cmpl
daa
aaa
pushf
fwait
push
push
mov
aaa
push
fnstsw
ret
shll
test
pop
push
faddl
lock
hlt
xchg
mov
sarb
or
sub
pop
sbb
lret
fiadds
xor
lret
and
and
mov
mov
das
mov
push
test
sbb
lea
aaa
add
rol
sub
psubusw
or
rcll
sbb
xor
ret
jb
in
adc
test
repz
push
cmp
das
jns
cmp
add
push
jg
jge
ljmp
int3
mov
dec
inc
add
aad
and
sub
add
lock
push
sbbl
mov
push
xchg
dec
aam
dec
stos
loope
call
or
adc
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
jne
add
add
add
add
add
add
xorb
lcall
add
add
xor
add
or
add
les
add
add
add
jne
add
jne
add
jne
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
