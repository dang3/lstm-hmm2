push
call
ret
ret
aam
cmp
or
mov
out
xchg
sahf
sbb
or
loop
jno
sub
mov
push
sub
pop
adc
pushf
fmul
cmpl
testb
add
repnz
add
ljmp
scas
das
adc
sub
sbb
and
into
lods
stos
mov
jns
sub
cmp
ja
xchg
sbb
bswap
xchg
push
scas
push
mov
outsl
jge
loop
pop
lods
cld
mov
cld
bound
aad
in
mov
pushf
and
push
inc
cmp
lea
enter
xlat
in
push
ret
dec
pop
xor
and
stos
fsub
or
in
fs
and
adc
data16
mov
movsb
fldt
sbb
push
xchg
adc
inc
scas
stos
jne
sub
test
fisubs
mov
push
mov
ds
sbb
int
mov
cs
or
shlb
mov
jo
ljmp
imul
sti
stos
inc
add
sarl
ljmp
lods
ss
in
add
cmc
out
popa
mov
mov
pop
insb
dec
outsb
sahf
add
ret
aaa
loop
fisttpl
xor
out
roll
sub
xchg
mov
daa
ficompl
imul
mov
fidivl
pminub
add
fwait
lock
add
fdivrl
aas
xchg
mov
enter
mov
pop
fiaddl
lods
jns
add
insl
jmp
rcr
xchg
pushf
pop
push
and
leave
lods
lods
loope
mov
pop
inc
loopne
sahf
xcrypt-ecb
cmpsl
cvttps2pi
ljmp
xchg
pop
sub
cmp
movsb
mov
pusha
jecxz
dec
adc
les
mov
inc
or
loope
out
arpl
mov
push
add
ss
lds
mov
mov
mov
in
push
mov
nop
sbb
mov
pop
nop
dec
mov
fadds
outsb
sub
xchg
jae
repz
jle
aam
or
int3
out
add
xchg
int
test
jne
inc
dec
sbb
jle
push
test
push
faddp
mov
fnstenv
sbb
jle
push
std
movsl
pop
ret
movsl
xor
sub
mov
cmp
xor
push
shrl
xor
mov
in
nop
adc
add
and
int
sub
pop
pushf
push
sub
cmp
pop
inc
adc
cmp
inc
inc
mov
jle
inc
mov
cwtl
add
shll
iret
dec
jmp
imulb
bound
add
push
jbe
mulb
cmpsb
inc
int3
cmpsb
lock
data16
ja
or
lock
or
xchg
or
dec
ja
lock
lods
clc
push
bswap
xchg
jnp
mov
inc
aam
xchg
leave
movsb
into
cwtl
cmpsb
and
mov
out
stc
js
and
sar
xchg
pop
es
mov
orb
mov
push
fs
dec
sahf
test
pop
sub
inc
and
cmp
lods
shl
fsubl
or
jbe
aad
mov
xchg
sub
or
cwtl
mov
lods
jo
loopne
sub
cmp
frstor
out
lea
xor
jle
mov
push
int3
pop
pusha
add
andl
or
push
fs
cmpsb
dec
out
jle
push
push
lret
pop
pop
add
scas
nop
mov
cmc
sbbl
add
rclb
cmp
cmp
addr16
cmp
mov
sub
push
and
addl
push
xlat
insl
lods
add
pop
inc
jp
adc
faddp
out
mov
xor
cmpsb
and
loope
dec
dec
cmp
fmul
shrl
xchg
lock
cmp
sub
lock
push
stc
mov
hlt
inc
inc
rolb
push
push
stc
fwait
jo
jo
pop
dec
jno
mov
addr16
xor
icebp
popa
cli
sbb
in
xorl
fcomps
int3
mov
mov
filds
movsb
mov
lea
or
ret
push
mov
pushl
enter
inc
sub
sbb
jno
xorb
dec
aam
adc
lret
jmp
jno
sub
scas
and
dec
fimuls
ficoms
aad
fdivr
inc
add
jl
aaa
xchg
xchg
xor
addr16
lock
pop
cmp
jl
add
adc
mov
or
jmp
sbb
adc
sbb
pop
jge
mov
sub
cmpsb
dec
jb
sub
std
mov
arpl
and
xlat
cmpsl
jno
pusha
pop
jp
xchg
adc
mov
mov
stc
pop
ss
dec
stos
xchg
sbbb
out
stos
adc
jl
or
outsl
test
imul
push
lcall
jne
and
aam
xchg
insl
pusha
mov
mov
jb
xor
push
fwait
cmp
fisubrl
sub
ss
repz
fisttps
push
fidivrl
lock
sbb
cmp
stc
cmp
enter
jmp
mov
pop
jge
sbbb
loope
popf
mov
fcoms
sbbl
jo
adc
jp
jecxz
or
pop
inc
outsl
jb
inc
out
or
jmp
mov
pop
mov
jae
ret
repz
or
scas
xor
cmp
cmp
sub
sbb
scas
cwtl
jl
lret
in
jge
loope
sub
outsb
negl
push
sbb
into
sub
popf
mov
mov
mov
add
xchg
jecxz
mov
aaa
mov
into
lahf
clc
inc
adc
iret
mov
pop
jnp
pop
lods
cmpsl
mov
add
push
shrl
lret
dec
xor
push
push
add
mov
sub
nop
jb
insb
mov
enter
mov
testb
fdivrl
shrl
adc
xchg
xchg
fdiv
or
xchg
mov
mov
dec
pop
int3
call
adc
mov
mov
xchg
and
xor
push
fists
mov
inc
fcompl
xor
out
fld
cmp
sbb
pop
xlat
pop
inc
popa
dec
jns
adc
push
add
jmp
cmp
sbb
pop
mov
inc
fiaddl
jne
cmpsl
arpl
outsl
pop
int
into
outsb
adc
lret
xchg
lds
adc
call
movsl
push
and
cltd
dec
sbbl
sub
ret
cmpsb
dec
shrb
orl
sbb
mov
mov
insl
dec
xor
or
xchg
add
shrb
lahf
out
dec
xchg
jns
outsl
ss
in
hlt
call
ja
jne
pop
cmp
cmp
popf
js
adc
ret
inc
dec
push
xchg
mov
ficomps
push
push
cmp
sahf
mov
dec
or
je
out
int
mov
cmpsl
sbbl
jnp
push
or
insb
out
cmc
mov
jecxz
adc
popa
insl
mov
lods
jmp
push
lods
cmp
outsl
aad
xchg
or
push
outsb
dec
pushw
and
loope
repnz
cwtl
add
push
aaa
mov
push
cmp
add
stc
xchg
xchg
mov
ficomps
cld
sarb
add
in
call
push
jne
insl
push
into
test
cmp
ja
xchg
js
inc
gs
jmp
lea
jmp
cmp
popl
sbb
dec
rorl
aas
mov
mov
cltd
jge
lods
ret
ficoms
pop
jecxz
jecxz
cmpsb
and
repz
cmp
jle
movsb
jno
sbb
or
cmp
push
mov
popf
cmpsl
pop
mov
pop
in
mov
pop
xor
popf
mov
inc
pop
fidivs
stos
inc
mov
jo
mov
adc
dec
cwtl
ljmp
fstps
fisttpll
or
pop
xlat
mov
mov
out
or
xchg
mov
hlt
add
xor
xchg
fmull
mov
push
lods
mov
pop
pushf
iret
push
mov
push
push
lcall
rorb
outsl
ficoms
shlb
sbb
jecxz
pop
pop
frstor
jecxz
movsb
jo
sub
movsb
cmpsl
sub
pop
cmp
xlat
push
aas
popl
jo
out
lock
mov
or
cmpsl
jp
inc
xor
test
fs
andb
mov
push
in
mov
ss
or
dec
xor
and
xchg
ljmp
dec
mov
xor
bound
fnstenv
leave
call
push
insb
mov
dec
sbb
outsb
pop
movsl
sbb
jns
ret
mov
inc
jp
or
or
or
push
mov
mov
xor
sbb
dec
sarl
je
lahf
cmp
ss
mov
lock
out
pop
out
dec
shr
or
mov
out
addr16
fs
add
rcrl
aam
pop
mov
pop
dec
lds
sbb
test
jnp
fisttpll
pop
sbb
push
scas
cld
xor
gs
pop
outsl
out
xlat
dec
jo
or
sub
inc
add
out
imul
fsub
cmpsl
xchg
shrl
pop
pusha
in
arpl
out
test
jl
push
mov
mov
loopne
repz
push
push
mov
test
fsubp
mov
sbb
arpl
cltd
cwtl
lahf
fwait
scas
scas
ror
mov
and
clc
popa
pop
stos
add
cltd
sub
push
mov
out
adc
gs
or
in
or
or
fstpl
test
mov
das
jmp
push
fdivp
stc
add
xor
mov
inc
andb
decb
mov
cltd
sub
cmp
sbb
mov
int
mov
jb
cmp
xchg
lods
clc
dec
cltd
xchg
mov
scas
data16
inc
pusha
dec
push
push
adc
pop
mov
pop
pop
mov
xor
cmp
mov
aaa
addr16
test
xlat
nop
push
adc
xchg
fisubl
cmpsb
or
xor
mov
rcl
std
daa
ffreep
xor
loopne
popf
enter
dec
fsubl
add
xchg
jo
mov
sbb
or
in
add
add
or
push
push
sti
fnstcw
push
scas
int
inc
test
mov
imul
mov
xor
div
repz
outsb
push
pop
sub
in
adc
je
sbb
inc
arpl
cmpsl
sbb
incl
movsb
pop
cltd
pop
pop
ficoms
mov
shr
gs
push
mov
bound
xchg
rorl
adc
out
outsl
jns
orb
pop
fimuls
stc
mov
mov
mov
int
roll
addr16
mov
les
insb
jmp
adc
jg
jecxz
in
nop
fs
pop
ret
ret
sub
push
sub
pop
mov
fucomip
sub
in
sahf
loope
sbb
subl
jae
dec
pop
fwait
cmp
or
outsl
sbb
fs
out
and
mov
sarl
into
incb
ljmp
mov
aas
movlhps
adc
jo
jno
daa
ror
jmp
in
jbe
fwait
dec
popa
stos
jo
clc
pop
fld
mov
cmp
and
cli
cwtl
lea
bnd
push
jnp
jmp
nop
out
pop
sbb
js
xor
iret
in
dec
xor
movsl
jne
std
pop
mov
loope
mov
pushf
sub
mov
hlt
pusha
jae
pop
cmp
int
sub
sbb
inc
cmpsb
dec
fmull
mov
stos
or
push
aaa
cltd
cmc
enter
cmc
je
dec
out
cmp
mov
mov
jp
sbb
sub
mov
adc
sbbl
dec
imul
or
daa
xor
rclb
sbbb
fistpl
push
mov
or
jns
lods
sub
inc
xchg
xorb
arpl
dec
adc
sub
leave
lods
ds
int
jp
cmp
and
sub
jns
mov
pushf
pop
repz
dec
jns
jbe
mov
mov
shll
jns
mov
add
push
pop
add
adc
filds
sbb
icebp
icebp
sub
aas
stc
dec
arpl
cwtl
outsb
incb
fwait
in
out
pusha
inc
imul
iret
dec
mov
push
aas
es
test
xchg
mov
addb
popf
cmpsl
push
repnz
clc
cwtl
nop
mov
sbb
dec
fmulp
in
and
xor
xor
pop
jecxz
in
lock
mov
jns
push
inc
fs
xor
xchg
and
into
mov
jne
fstpt
cwtl
fstpl
mov
or
fldt
dec
add
sbb
xchg
mov
outsl
cltd
mov
sub
or
in
lret
cli
outsb
jb
sub
and
cmp
call
stc
inc
loop
adc
xchg
ljmp
je
sbb
movsl
adc
jge
rcrb
fstl
repnz
mov
xchg
cmp
dec
jl
testb
mov
sub
xor
loopne
aam
xor
xchg
push
aas
stos
pop
pushw
and
andb
sti
pushf
movsl
fmulp
mov
sub
push
add
enter
and
jns
leave
mov
jbe
cmc
es
sub
in
dec
push
add
jne
xor
mov
mov
add
or
movl
outsb
shrb
bnd
pop
pop
and
jb
decb
das
and
repz
xchg
jns
inc
test
sub
adc
cmp
mov
sub
dec
repz
mov
sbbb
pop
sub
xchg
scas
cmp
adc
xchg
push
aas
shrb
jne
shll
sbb
push
ljmp
mov
or
ret
bound
ret
test
ljmp
lods
jns
cmp
rcrl
mov
push
int
cwtl
jae
sbb
mov
mov
sub
ficompl
scas
mov
std
jmp
mov
jmp
call
loope
and
pop
jo
repz
mov
cmpsb
out
sbb
and
js
leave
push
andb
dec
and
dec
bound
in
jmp
cmp
in
mov
xchg
xorl
out
mov
push
or
iret
lcall
cmp
leave
jle
std
dec
adc
test
or
stos
sahf
dec
cmp
fisubl
mov
je
mov
cld
jno
aaa
add
jmp
or
fisttpl
and
push
pop
lret
leave
xchg
bound
jge
add
mov
loop
es
aad
sti
ss
xchg
bound
lret
les
pop
xchg
out
and
ljmp
push
stc
outsb
js
add
lahf
andb
sahf
xchg
dec
clc
test
or
popf
inc
lds
jmp
rcrb
push
adc
lods
test
xchg
int3
cmp
dec
cld
aam
fcomp
fmuls
jecxz
pusha
arpl
mov
cmpsb
xchg
dec
in
mov
ds
or
inc
pop
mov
outsl
mov
ficomps
adc
adc
insb
inc
outsl
bound
and
loopne
lret
dec
cmpsb
lcall
sub
and
dec
cmpps
adc
rcl
test
cmp
add
test
inc
dec
bound
mov
lods
push
sbb
adc
mov
jo
cltd
push
mov
add
repnz
xor
scas
sub
xor
jmp
sub
cltd
and
insl
add
hlt
mov
push
xchg
stc
mov
lahf
cmp
imul
or
xor
cltd
lea
dec
pop
std
repnz
rcrl
decb
jno
ret
xchg
pop
xchg
mov
lock
xor
subl
mov
xchg
sub
mov
dec
rcr
adc
sbb
addb
pop
sbb
in
insb
dec
pusha
js
and
addb
sahf
xchg
cli
and
push
add
jmp
stc
add
mov
push
push
aad
call
mov
mov
push
xchg
dec
inc
loopne
inc
xchg
movsb
decl
arpl
and
jmp
in
fisubl
imul
incb
pop
cmp
jae
inc
and
adc
std
mov
lcall
lcall
cwtl
xlat
xchg
or
cmp
mov
sbb
imul
fwait
xor
pop
xchg
enter
dec
mov
aaa
mov
icebp
xchg
xchg
or
out
jo
enter
lret
pop
sub
mov
push
add
xchg
sbb
out
cmp
divl
sarl
aas
fisttps
test
cmp
mov
test
sbb
popa
xchg
and
jmp
sub
rcrl
push
mov
dec
xchg
sbb
pop
scas
dec
pop
insb
ljmp
movsl
ljmp
jbe
adc
push
test
jmp
nop
xlat
lahf
sub
scas
es
mov
lret
jbe
inc
cmp
cld
movsl
ficompl
repnz
xchg
jae
mov
or
jnp
and
adc
ficomps
ret
je
push
jns
jge
popa
outsb
add
stc
add
pop
testl
push
mov
cmp
jge
xchg
ss
cmpsl
data16
mov
mov
rcl
rcrl
clc
cmp
sbb
nop
mov
mov
cld
mov
dec
adc
das
cmp
add
jne
das
std
mov
rolb
and
mov
cmp
repz
xchg
pushf
pop
mov
xor
xor
pop
out
shl
test
or
add
bound
movsl
roll
rcl
in
mov
mov
inc
dec
shl
push
enter
stos
jl
adc
push
jmp
imulb
and
cld
mov
es
test
cmc
lret
push
push
lcall
ja
lods
ror
jo
daa
dec
rcrl
fs
cli
adc
scas
xor
out
jbe
inc
jbe
push
jecxz
pop
pop
sti
adc
divb
jns
or
mov
out
dec
xlat
es
lahf
mov
push
cld
clc
dec
mov
faddl
iret
in
push
lock
sbb
rcrl
fcoms
inc
mov
notl
daa
scas
push
test
lods
fildll
ret
jp
shl
adc
cli
sub
pop
push
repnz
testl
pop
push
fdecstp
cmc
test
and
test
es
into
les
sbb
jae
mov
xor
fstpt
xchg
mov
clc
sub
int
int3
loop
lods
in
mov
mov
lahf
lods
mov
sub
shrl
mov
js
pusha
out
xchg
sti
push
jb
sti
rcrl
and
iret
xchg
in
cmpsb
loope
cmp
ds
push
xor
xor
scas
inc
push
movsl
lds
mov
xchg
pop
ror
repz
pop
jno
aam
add
ret
lods
in
push
jp
jg
jp
loop
sti
or
lahf
add
shll
xor
inc
ja
inc
fisubs
int3
js
cmpl
sbb
jns
inc
mov
mov
out
test
mov
and
cmc
lcall
xor
and
ljmp
test
movsl
js
lret
xchg
cmp
pop
cld
cmp
fsubs
sti
insl
pop
cmp
movb
stos
jmp
sbb
mov
orl
push
add
sub
mov
in
lock
mov
cmp
push
adc
cmp
fadds
or
jg
add
jo
lea
pop
clc
fs
adc
dec
test
rclb
scas
and
sarb
pop
jnp
mov
mov
repz
adc
jecxz
adc
or
dec
sahf
imul
xorb
loopne
popa
xor
in
inc
sub
pop
pop
jb
cmpsl
sbb
mov
loop
pop
add
aam
popa
pop
xchg
jb
testl
mov
aas
aam
enter
push
dec
xchg
decl
lcall
xor
stc
adc
sub
cmc
outsl
inc
inc
sbb
iret
jmp
dec
ret
cmp
in
mov
cmp
out
xor
jae
sub
lcall
cltd
jle
stos
jecxz
stos
dec
or
dec
stc
lock
jg
loope
inc
loopne
mov
jmp
pop
push
addr16
xlat
mov
negl
jns
jle
push
mov
add
fmull
dec
outsb
test
cmc
out
or
xlat
outsb
cmp
cmp
repnz
and
outsb
mov
xor
gs
lods
sub
mov
push
lods
mov
in
fsubp
dec
sbb
push
cwtl
fsubrl
daa
pop
sbb
popf
repnz
jecxz
inc
lea
icebp
or
fs
mov
add
mov
out
adc
cmp
sti
jmp
add
in
mov
adc
dec
push
mov
mov
lsl
mov
mov
add
jbe
or
mov
xchg
arpl
loopne
mov
pusha
gs
test
pop
mov
cmp
orl
xchg
xchg
out
adc
dec
jnp
mov
mov
sub
cmpl
lahf
or
scas
clc
jl
push
cmpsb
pusha
cmp
xchg
xchg
clc
test
clc
cmc
or
out
ja
sub
xor
shrb
inc
scas
imul
mov
shl
dec
push
test
insb
and
in
sub
and
pusha
hlt
cmpsb
sti
fs
repz
cmp
push
mov
in
jge
sub
adc
add
lahf
shll
out
adc
jbe
sidtl
mov
cs
js
jecxz
inc
sub
mov
mov
sbb
or
imul
jl
negl
xchg
movsl
mov
outsb
cmpsb
lahf
fmull
sbb
add
inc
cwtl
jne
jmp
vpavgw
cmp
dec
mul
jno
call
rcll
push
xor
sbb
int3
jne
dec
add
xchg
fidivs
xchg
popa
ds
out
jge
push
out
cmpsb
lahf
std
in
enter
jns
aad
mov
test
jne
pop
jl
push
push
sbb
and
adc
inc
pop
popa
mov
jg
ret
xchg
lods
dec
in
das
mov
pop
cli
mov
outsl
pushl
testb
gs
push
sbbl
xor
or
dec
repz
inc
lock
bound
out
cltd
mov
dec
clc
sub
pop
mov
int3
sbb
pop
loop
mov
out
xor
cmp
sub
push
int
ret
xchg
pushf
test
jge
shrb
xor
movsl
push
cmp
cwtl
pusha
adc
inc
and
or
dec
mov
adc
int
pop
rolb
fs
ret
test
in
mov
cmp
sub
mov
rcr
inc
les
and
leave
out
pop
mov
incb
test
mov
fists
jns
iret
xchg
les
xchg
pop
pop
int
xchg
imul
insl
mov
enter
ret
movsb
jmp
loop
out
or
mov
imul
les
cld
dec
not
dec
cwtl
push
push
lock
fs
push
ja
xchg
cmp
sahf
out
cmpsb
divl
and
dec
fisubrl
dec
mov
and
jle
jle
addr16
sbb
push
xor
add
jae
mov
fcoms
repz
push
ljmp
xorb
stos
gs
nop
js
mov
repz
cwtl
pop
mov
jle
cmp
jecxz
enter
sub
bound
and
lea
xor
aam
popa
enter
dec
inc
popa
imul
stos
popa
pop
imul
cmp
ss
aad
clc
sbb
inc
lcall
sub
add
push
sbb
cmp
je
xchg
push
pop
fwait
mulb
sti
cmp
mov
pop
jnp
push
sub
or
in
aaa
cmp
es
repz
in
cmpsb
sbb
inc
sahf
mov
lcall
ds
and
mov
push
xchg
xchg
push
lods
stos
or
pop
mov
and
adc
repz
jns
mov
mov
dec
pop
test
xor
pop
test
inc
fs
or
insl
inc
xchg
hlt
aam
loopne
pop
push
loope
jmp
decb
lock
or
loopne
inc
enter
pushf
fs
xchg
ljmp
lds
or
scas
push
fs
xor
cmp
hlt
mov
sbb
aaa
addr16
ret
adc
sub
sbb
pop
sub
push
mov
cs
inc
imull
fcoms
push
mov
jp
dec
bound
mov
subl
jno
ret
fbld
in
fcmovu
inc
jo
addr16
adcl
fidivrl
inc
pop
test
loope
and
push
or
roll
popa
jno
add
mov
jo
rorl
adc
negl
xchg
mov
pop
bound
addr16
hlt
out
cmp
cmpsb
in
jne
push
sub
orl
xor
jo
out
stos
push
cmp
lcall
mov
lcall
sbb
dec
inc
push
ljmp
cmp
sbb
fwait
xchg
or
loope
imul
mov
shll
mov
daa
icebp
mov
jno
call
and
sub
in
pop
std
scas
xchg
fiadds
lahf
out
fs
out
popa
ljmp
ret
push
jb,pn
popf
subl
sarb
into
dec
mov
jns
add
std
and
and
dec
mov
cmpl
adc
pushf
mov
data16
or
xchg
addb
je
out
ss
rclb
in
pop
inc
lods
lea
cmp
lcall
dec
push
add
int
lds
push
lds
lds
push
mov
repz
sbb
xchg
je
addl
sub
dec
inc
je
sahf
jbe
pop
xchg
xchg
cltd
aaa
mov
call
mov
mov
sub
clc
hlt
loop
in
or
add
push
jge
fisttpl
sub
fsubl
dec
adc
lea
and
or
mov
test
test
mov
sti
or
cwtl
int3
mov
cmp
xlat
xor
scas
int
dec
mov
js
sbb
aaa
enter
jne
xchg
dec
xor
sbb
cs
mov
cmpsb
mov
push
es
add
nop
dec
ss
adc
in
stos
faddl
jbe
xorb
aas
push
add
insb
arpl
imul
push
and
pushf
js
loope
adc
pop
test
add
sub
lcall
mov
incl
gs
push
add
add
xchg
in
popa
aam
call
cmpsl
enter
scas
jmp
adc
adc
dec
xchg
test
xchg
mov
xchg
cli
sub
cmp
aaa
test
adc
sub
jl
pop
loop
mov
mov
push
jno
jno
pop
int3
icebp
das
shlb
sbb
ljmp
inc
insl
adc
call
lahf
rclb
sub
cltd
insl
loop
fs
popa
nop
adc
push
sbb
stos
pushl
repnz
cmc
sub
fisttpll
add
pop
adc
out
fwait
pop
push
rolb
jg
or
xchg
or
and
push
and
and
or
dec
jb
mov
jbe
stc
or
xlat
sbb
xchg
xlat
cmp
xchg
cmc
push
inc
adcl
or
mov
fistps
pop
xor
lret
xor
stos
nop
pavgb
inc
push
sub
jmp
pop
push
or
mov
test
or
xchg
mov
add
jle
fldl
xor
popa
notb
and
jle
ljmp
xchg
sbb
sub
lret
movsb
popa
add
add
cs
and
lock
iret
out
ss
and
xchg
mov
push
negb
gs
xchg
xor
or
adc
js
aad
push
sub
adc
or
outsl
mov
mov
imul
push
orb
add
add
sub
and
inc
jp
rcrl
and
cmp
lea
or
stc
out
cmp
adc
repz
inc
cmp
cltd
mov
mov
out
popa
mov
lods
pop
lret
mov
bound
mov
pop
loope
outsl
xlat
xorb
icebp
xchg
rcl
or
cmp
pop
cmc
movsb
mov
push
add
in
push
mov
jmp
fwait
enter
stos
push
xchg
mov
cmp
std
lahf
mov
mov
mov
iret
outsb
cmp
or
mov
mov
fsin
jecxz
inc
popf
test
xlat
inc
mov
outsl
sahf
popf
or
lock
outsl
loope
xor
sub
adc
bound
popl
cmp
bound
test
fsubrl
sarb
arpl
imull
fdivs
hlt
clc
push
sub
les
mov
add
in
xor
xor
out
cli
incb
dec
roll
out
ss
ror
stos
test
addl
mov
sbb
pushf
mov
test
fdiv
cmp
cmp
stos
adc
mov
lds
outsb
fiadds
lahf
js
cmpsl
mov
aas
repz
xchg
mov
orl
not
dec
xchg
add
fldcw
mov
mov
add
cmp
jmp
dec
repz
sbb
mov
jb
or
or
push
or
jg
jp
imul
mov
outsl
adc
mov
push
cwtl
imul
sti
sti
pop
and
add
rclb
adc
push
cmpsb
xor
jne
iret
sbb
data16
sbbl
stc
xlat
mov
nop
in
sbb
aam
adc
mov
sbb
inc
scas
maskmovq
testl
cmp
or
or
pop
and
movsl
jb
gs
mov
xchg
lods
xor
push
pusha
lods
addr16
out
and
dec
leave
rcrb
sahf
sti
cmp
mov
and
repz
pop
cs
pop
jne
mov
jmp
jne
leave
inc
in
jmp
dec
sti
insb
outsb
mov
adc
cmpsb
aaa
addr16
jb
outsl
in
fisubrl
sbb
out
in
shlb
arpl
sub
and
pushf
jb
adc
iret
mov
stos
inc
and
inc
mov
cmpl
ret
les
dec
mov
xor
cld
outsl
cltd
xchg
std
fwait
mov
mov
addr16
jl
dec
ud0
mov
popf
sub
jmp
mov
inc
and
movsb
mov
mull
cmc
pop
or
cli
add
in
xchg
jbe
jb
aad
inc
mov
lods
mov
fwait
xorb
pop
test
movl
adc
xor
aaa
cmp
push
jb
xchg
dec
cmp
mov
and
or
mov
addr16
or
js
aam
outsl
adc
out
adc
fs
aas
mov
inc
add
lret
ret
jnp
test
insl
or
or
negl
inc
sbb
sub
out
lods
ds
sti
sbb
mov
jae,pn
sub
int
test
inc
imul
into
adc
call
nop
or
data16
sbb
mov
out
mov
inc
jno
cmpb
seto
xchg
and
ja
scas
jle
pop
xor
outsl
jne
test
push
or
push
andb
in
outsl
sbb
xor
push
mov
xlat
les
test
mov
cli
xlat
idiv
lret
iret
idiv
iret
lea
pop
or
add
bound
dec
push
int3
mov
fdiv
rcll
pop
adc
jnp
mov
das
xorl
stc
mov
pop
pop
sbb
xorb
xor
push
nop
sti
mov
jo
cld
add
enter
pop
cmp
cmp
daa
sbb
push
bound
push
dec
es
movsl
insl
sbb
arpl
add
test
loope
sub
sti
add
rorl
mov
in
pop
inc
dec
decl
mov
das
jmp
fisubrs
push
loope
enter
insb
pop
lods
lods
fmuls
sbb
popa
movd
cli
cltd
in
push
push
aad
mov
fbld
inc
sbb
jbe
fistps
sub
movsb
out
out
xchg
push
enter
jo
adc
addr16
scas
xchg
loopne
inc
leave
pusha
pop
mov
lock
loope
cmpsl
inc
sahf
jne
xchg
jbe
jp
or
mov
or
imul
or
je
aad
decl
repz
xchg
shrb
xchg
lret
add
test
or
and
pop
cmp
cmp
je
cmp
addr16
repz
sub
loopne
xor
rcrl
dec
mov
inc
mov
lods
sub
sbb
push
push
jmp
lods
mov
std
imul
cltd
int
pop
rcl
pop
sub
gs
fsubl
mov
orl
adc
xor
cmp
mov
add
adc
jge
push
cmp
cltd
inc
cmpsb
stos
int
add
sub
pop
out
add
jno
inc
jns
mull
inc
popa
push
nop
ret
cmpsb
xchg
mov
sbb
iret
or
pop
add
mov
sbb
les
fisubrs
stc
xor
call
or
jg
fmuls
dec
cmpsb
xchg
lods
in
mov
cmc
xchg
imul
dec
xlat
add
outsb
jmp
and
adc
bound
jge
xchg
pop
lods
pop
outsb
test
jbe
mov
xchg
or
imul
cld
imul
repz
lcall
fsubrp
iret
rorl
nop
pusha
jge
ficomps
dec
test
jb
add
xchg
lods
mov
outsb
dec
lock
lock
out
mov
lods
or
push
cltd
sub
in
aaa
push
dec
outsb
sub
xlat
in
mov
out
mov
push
sub
imul
jle
jmp
loopne
and
dec
push
add
dec
popf
out
or
and
sahf
mov
cld
add
xor
lahf
dec
cmp
push
sbb
sub
sub
pop
les
jmp
call
scas
jbe
movsl
lcall
aaa
xchg
pop
in
or
push
hlt
addb
or
jne
push
push
popa
pop
xchg
push
xorb
f2xm1
pop
fwait
mov
push
push
sti
jecxz,pn
outsb
cmpsb
mov
leave
inc
push
dec
std
sbb
mov
cmp
lds
mov
les
mov
stos
scas
mov
inc
fisubs
push
cld
cmpsb
jae
sahf
ror
mov
push
rcll
daa
inc
dec
pop
popf
xor
xor
and
jp
mov
jle
aam
popa
jl
sub
sub
mov
adc
subl
xchg
adc
loopne
cld
jle
aas
push
pop
and
push
loopne
adc
addr16
icebp
dec
add
gs
adcl
cli
dec
adc
mov
sarb
cmp
mov
mov
jecxz
xor
xchg
sub
movsl
ja
jae
mov
ds
aam
jae
xchg
lcall
mov
or
sub
push
and
call
xchg
jecxz
imull
mov
push
pop
insb
adcl
adc
in
or
das
dec
cmp
enter
cmp
inc
insb
fnstsw
imul
shrb
mov
jmp
pop
push
insb
dec
dec
xor
xchg
out
adc
dec
xor
pop
cmpsl
repnz
pushf
or
cmpsl
fstps
mov
mov
xchg
sub
mov
shll
jbe
push
add
jge
or
lret
or
fcompl
pop
pop
sahf
xor
xchg
movsb
mov
cmp
pop
pop
and
jge
das
sbb
movsb
jne
inc
sahf
xchg
orb
dec
loop
pushl
enter
gs
adc
xor
cmp
out
test
xchg
loop
call
xchg
sub
mov
sbb
imul
jmp
inc
cmp
arpl
fdivrl
inc
sahf
js
ds
mov
mov
in
dec
es
sti
xchg
mov
fstps
adc
push
jbe
popa
xchg
push
mov
int3
fmuls
or
dec
cmp
dec
inc
cli
gs
loop
movsb
cli
fisttps
cmp
xchg
add
in
inc
cmp
test
pusha
bound
mov
xchg
cmp
jo
and
push
jae
and
jae
push
aaa
jnp
mov
sbb
sub
mov
das
xor
je
mov
pushl
data16
sbb
push
and
repz
sbb
outsl
ret
pushf
xlat
outsb
addr16
xchg
jb
stc
adc
popf
shl
je
pop
sub
push
mov
repnz
mov
dec
push
imul
out
testb
mov
in
jns
or
xchg
sbb
popf
adc
iret
fs
mov
sbb
mov
sbb
stc
xor
and
mov
push
xchg
lcall
stos
push
jp
dec
jb
negl
pop
lods
repnz
in
bound
mov
fcoms
xor
shll
mov
mov
test
adcl
out
pop
jnp
jns
mov
push
aaa
stc
pop
in
out
outsb
mov
int
lods
xchg
and
xor
mul
cmpsb
and
fsubrs
js
or
ds
pop
pusha
rorb
imul
repnz
sti
mov
leave
loope
mov
add
shrb
adc
ret
inc
mov
cli
lahf
adc
xchg
push
push
ret
rcrb
dec
out
sbbl
jbe
mov
cmp
push
push
pop
jl
xor
adc
je
aaa
mov
bound
repnz
in
aam
push
fists
fwait
cmpb
out
insb
pop
sahf
mov
mov
xor
jno
subl
adc
int
rcrb
push
cltd
jmp
jge
sti
loopne
dec
lret
mov
xchg
lods
or
sub
cmpl
add
in
add
pop
xor
ret
fldenv
cmp
mov
stc
mov
adc
xchg
mov
aas
sbb
xchg
cmc
xchg
sti
rcrl
outsl
lods
int3
fstl
pop
leave
mov
add
mov
jecxz
ret
mov
stos
scas
arpl
ljmp
inc
xor
jae
iret
add
pop
shr
fwait
jmp
scas
pop
filds
mov
fdivrs
xorb
repz
insl
xchg
das
add
std
xchg
adc
cwtl
mov
rep
mov
jne
data16
and
dec
xchg
mov
decl
scas
add
pop
lret
jae
and
xchg
sbbl
fwait
fs
loopne
sub
pop
movsl
out
push
push
mov
aad
and
stc
or
call
or
loope
xchg
stos
or
jl
or
cwtl
out
lret
int3
aas
cmp
nop
sub
lods
adc
or
and
add
jb
cmp
test
and
testl
mov
sub
sahf
shll
adc
jmp
mov
jg
mov
and
rorl
sahf
aas
sub
dec
lcall
cs
adcb
clc
stc
mov
xlat
ljmp
push
jae
cli
dec
mov
int3
test
repnz
ret
int
in
inc
stos
mov
sbb
aam
cmp
mov
mov
negb
test
rclb
cmpsl
imul
mov
lock
lea
mov
jecxz
bound
sub
call
nop
mov
les
add
in
mov
pop
mov
mov
pop
pop
mov
adc
add
outsl
arpl
sti
stos
xchg
jl
cmpb
mov
rorb
and
lods
push
adc
nop
sbb
stos
cmp
andps
mov
je
and
in
sub
add
faddl
movsb
push
mov
add
lods
or
mov
jbe
lea
fsubr
pushf
mov
jno
pop
sub
andl
popa
cltd
dec
mov
ja
ja
loopne
mov
mov
push
lahf
cs
cmp
adcl
inc
push
sbb
mov
pop
loopne
push
aaa
repz
inc
ficoms
mov
lret
shrb
cmp
cli
leave
inc
adc
sub
xchg
or
jg
mov
xor
clc
jns
test
cld
lahf
inc
inc
pop
dec
or
xlat
call
or
dec
ds
push
jno
sbb
mov
pop
aas
outsb
pushl
lods
and
in
movl
jl
mov
sbb
test
sub
mov
stos
jge
jne
loop
gs
push
cmp
add
pop
clc
shl
or
pop
out
imul
cmc
mov
and
and
in
cmpb
imul
mov
dec
imul
xlat
ja
pushf
jbe
xor
mov
xchg
clc
push
mov
push
lea
inc
ds
mov
scas
fdivrs
addb
incb
fldenv
test
xchg
jmp
lret
and
adc
pop
je
mov
cwtd
xchg
test
inc
movl
cmpl
dec
cmp
stos
mov
mov
stos
mov
lea
iret
add
lret
test
lahf
mov
jge
sahf
pop
push
movsb
fsubr
mov
lret
add
hlt
orl
in
cmpsb
cmp
mov
out
dec
fs
pop
xor
xor
mov
sub
add
lcall
incb
mov
sbb
ret
mulb
sub
push
ret
xchg
xchg
imul
jmp
dec
aad
or
lcall
testl
gs
movsb
hlt
sub
leave
push
bound
in
sti
or
movsl
xor
jo
cmp
loop
scas
mov
xchg
jmp
jmp
data16
add
popa
sbb
shll
jo
lret
push
mov
add
jns
cmp
pop
fcomi
cmp
mov
or
dec
scas
daa
adc
inc
cmp
adc
add
ret
in
fwait
int
popf
mov
lock
pop
cmp
pop
dec
mov
jmp
shlb
hlt
dec
iret
ss
push
xor
sub
popf
hlt
inc
inc
or
xor
into
fadds
mov
push
hlt
lcall
imul
loope
push
push
push
insb
sti
stos
jg
leave
stos
stos
ret
js
cwtl
je
xchg
add
xchg
stos
jnp
push
sbb
rclb
xchg
fsubrl
push
push
cmp
pushf
fwait
pop
aaa
insl
mov
add
fdivl
fisttpll
in
jmp
sbb
ret
xchg
or
or
data16
dec
mov
dec
mov
sti
test
dec
adc
or
in
loope
dec
aam
pop
sub
xchg
aas
sar
xlat
jae
push
dec
pop
in
orl
sbb
push
mov
mov
cmc
jno
int3
jb
shll
pop
je
je
dec
jecxz
fcmovnbe
adc
push
loope
xlat
aas
shlb
mov
jnp
scas
dec
cmpsb
mov
loop
imul
btc
in
mov
movsl
out
mov
xor
enter
and
ja
loopne
xchg
icebp
shlb
pop
fcompl
jns
cmpsl
jne
cmp
xchg
xchg
and
aas
cmp
fisubs
push
int
cs
xchg
adc
and
cmpsl
lcall
add
cmp
add
inc
cli
push
xchg
mov
inc
or
xlat
push
test
cmp
mov
movsb
sub
mov
sbb
dec
and
dec
xchg
mov
inc
jo
ret
sbb
push
fwait
xchg
or
mov
xchg
push
popf
outsl
leave
inc
adc
xlat
mov
into
aad
loopne
sub
and
iret
sub
je
mov
xchg
push
popf
inc
mov
add
les
lret
jmp
xlat
mov
jbe
pop
out
imull
aas
test
lea
sub
inc
push
push
jmp
or
sbb
hlt
adc
popa
lahf
popa
sub
sub
add
or
loope
mov
fdivl
daa
dec
in
and
inc
jne
jmp
mov
sub
sub
mov
sub
lods
ret
lret
popa
clc
push
fdivr
jecxz
or
pop
idivl
and
sbb
out
lods
push
dec
mov
push
inc
into
das
repz
shlb
jg
psubusb
cld
lret
sti
outsb
test
call
test
adc
popf
mov
adc
push
adc
ret
loopne
fisubrs
sbb
push
fstp
sbb
in
cmp
int3
imul
dec
aad
jp
mov
aad
iret
xchg
sbb
fiadds
les
insb
inc
push
dec
imul
add
mov
lods
cltd
stos
sbb
jecxz
adc
sub
cld
xor
sub
leave
inc
push
stc
cli
cmpsl
fidivl
rolb
jl
jle
in
arpl
and
loopne
into
inc
lret
xor
and
push
jae
cwtl
sbb
dec
dec
dec
cmp
negl
or
jo
xchg
sbb
add
jnp
dec
int3
add
daa
sbb
sbb
sub
clc
sahf
dec
inc
xchg
xchg
cltd
inc
mov
push
inc
jno
jae
or
adc
push
test
cmp
push
jmp
pop
mov
jbe
cmpsl
cli
or
fnstenv
or
pop
mov
xorb
mov
psllw
adc
es
lret
fsubp
mov
leave
sti
hlt
jne
dec
leave
jg
xchg
mov
dec
dec
mov
outsb
lret
sub
xor
mov
xor
lods
mov
mov
ljmp
cmpl
sahf
dec
shl
movsl
jno
loop
sub
lds
lcall
mov
or
sbb
std
xchg
inc
sbb
lds
inc
ret
mov
sub
ret
dec
inc
jbe
push
cmp
cmpsb
dec
out
lret
add
push
mov
arpl
pushf
inc
cld
das
sahf
adc
pusha
jecxz
cld
or
and
test
out
lahf
jbe
jl
mov
adc
lods
pusha
rorb
test
clc
test
lds
xchg
rorb
push
hlt
jl
iret
push
loope
and
fbld
pop
pop
xchg
adcb
daa
ucomiss
add
movsb
mov
cli
xchg
xchg
mov
jmp
cmp
out
xor
jne
sbb
icebp
imul
ret
mov
outsb
push
dec
inc
adc
idivb
imul
sub
lods
sahf
outsl
xchg
mov
repnz
dec
in
sbb
movsb
aaa
cmp
xchg
mov
sub
fcmove
repnz
push
int3
push
emms
or
sti
jnp
jmp
push
imul
loop
jns
xor
cwtl
pop
xor
in
push
out
sub
movsb
cmc
std
mov
mov
loop
cmp
enter
movl
fisttps
cmp
cld
pop
push
push
rorl
cmp
pop
add
sar
test
cmp
mov
or
mov
call
xor
ljmp
stos
outsb
pusha
push
add
xor
jecxz
push
sub
subb
adc
mov
ljmp
mov
mov
push
add
fsub
or
shl
jns
push
or
aad
mov
jno
push
lods
lret
loop
cmpsl
es
jmp
adc
mov
test
and
ret
leave
lods
pop
or
rorb
addr16
pop
and
aam
dec
lcall
dec
inc
inc
hlt
popa
add
decb
pop
mul
xor
jae
mov
or
es
add
xor
fildll
push
and
jg
insl
fs
adc
scas
and
and
and
aaa
mov
cmp
jne
jle
sub
test
pop
push
aas
push
sub
cmpsb
ja
mov
shrl
cmp
ja
js
std
sub
xor
je
loope
outsb
add
cmpb
push
xchg
sub
gs
cwtl
pop
adc
xchg
stos
adc
xor
pop
jbe
movsb
inc
je
cli
std
push
cmc
pcmpgtw
mov
fwait
adc
in
and
cli
mov
sbb
sub
cmc
push
push
enter
dec
bound
xchg
icebp
cmpsl
and
mov
out
pop
pop
lods
or
sbb
xor
addr16
xchg
lret
call
test
mov
sub
pop
mov
cltd
push
repnz
fnstcw
fucom
push
out
scas
outsb
xor
ja
std
jmp
sub
and
jb
inc
lock
xchg
mov
lahf
in
mov
sub
mov
jnp
shlb
loopne
ret
jno
lods
dec
mov
xchg
xchg
nop
cmpsl
imul
mov
sub
fisubrl
mov
adc
lea
xor
flds
lds
fistpll
pop
pop
mov
outsb
testl
addl
mov
or
push
iret
add
xchg
mov
jns
sar
nop
arpl
dec
ret
sub
push
aam
mov
popa
dec
ja
push
int
fdivs
sbb
mov
out
test
jmp
add
xor
jle
mov
mov
sub
arpl
arpl
and
dec
inc
scas
aaa
gs
ret
loop
dec
in
cltd
jge
imulb
imul
decb
dec
rclb
js
popa
es
adc
sub
cmp
fcoms
push
cmp
into
dec
or
lods
flds
lahf
and
mov
mov
testl
push
sti
jnp
xor
push
xchg
sbb
imul
mov
or
enter
push
cltd
lahf
or
jo
inc
push
jae
pop
xchg
mov
repz
sbb
dec
and
in
and
fiadds
ret
mov
pop
sbb
inc
or
dec
jecxz
jmp
icebp
loop
test
test
jmp
andb
clc
fisubrs
jmp
dec
xchg
fs
bound
cmp
push
inc
hlt
pop
test
fwait
inc
sbb
popa
cwtl
std
mov
shr
dec
jnp
xchg
jnp
mov
or
adc
pop
out
outsb
shll
cmp
pop
es
in
ds
and
xor
jmp
leave
rcl
mov
xchg
shll
mov
lock
sub
jno
shlb
adc
testl
pop
out
pop
jns
and
push
repnz
enter
push
dec
lret
pop
repnz
arpl
loop
dec
add
cltd
fiadds
sub
inc
ljmp
xlat
jo
pop
sbb
das
outsl
jecxz
mov
les
dec
fwait
pop
fcoms
jno
jae
jnp
les
je
scas
vminps
and
add
pop
jae
push
cwtl
xor
pop
movsl
rolb
cmp
push
mov
jmp
jb
sarl
sbb
faddl
xor
stc
or
fadds
inc
popf
adc
mov
pop
imul
mov
in
mov
or
sbb
fiaddl
fmul
pusha
test
push
pop
inc
or
lea
push
jmp
lcall
jne
dec
insb
por
add
sbb
xor
clc
lds
imul
and
shl
test
cmp
pop
test
cmp
popa
imul
lods
sbb
cmp
push
and
dec
adc
mov
dec
fcomps
sub
xchg
adc
jns
sub
pop
inc
push
push
cmp
popf
sub
sub
ficoml
mov
call
inc
jae
mov
mov
add
dec
aaa
pop
dec
sarb
pop
ret
jb
mov
icebp
popa
mov
mov
jae
pop
or
mov
pop
arpl
ja
push
into
jno
mov
into
and
mov
mulb
data16
fwait
jl
adc
mov
xor
xor
cmp
arpl
clc
mov
cmp
push
jl
lock
jle
xlat
ljmp
fdivrl
movsl
shlb
or
js
fdivl
jp
sar
cmp
cmp
dec
psubd
lea
mov
pop
shrl
and
mov
nop
adcb
inc
cmp
inc
xor
push
jb
push
shlb
mov
push
mov
push
dec
sub
jg
mov
popa
andl
adc
inc
cld
add
mov
ss
out
div
mov
dec
or
in
dec
add
sahf
int
push
mov
mov
sbb
cwtl
mov
test
sbb
mov
dec
xchg
dec
int
pop
sub
inc
mov
adc
add
xchg
xor
adc
inc
stos
push
jecxz
mov
push
pushf
and
test
cltd
lods
scas
pop
fcoms
jns
dec
dec
or
push
insb
iret
push
xor
jp
xor
jb
adc
insb
jne
xor
mov
int
rorb
cwtl
pushl
and
scas
loope
movsl
jns
test
sahf
adc
sbb
lock
xlat
inc
jecxz
adc
lds
aad
mov
jae
cmp
fisttpll
cmpsb
mov
loop
pop
popf
sar
xor
mov
pop
push
das
fmull
mov
insb
and
sti
inc
loope
sbb
cmpsl
mov
icebp
mov
stc
mov
mov
js
setp
mov
mov
dec
jo
pop
jns
adc
shll
imull
mov
lea
mov
mov
and
push
or
lcall
test
mov
aas
xchg
outsb
outsb
int
add
inc
mov
adc
test
lock
pop
inc
stos
mov
xchg
xchg
add
js
arpl
xor
mov
push
push
jmp
or
fistps
pop
dec
sub
mov
dec
or
inc
rorl
ret
loop
adcl
outsb
pop
nop
sbb
pop
jb
sbb
enter
pop
xchg
cmc
je
pop
lahf
lcall
leave
call
shlb
mov
in
sti
add
jge
push
outsl
out
mov
stos
in
movsb
inc
imul
mov
push
sbb
jb
in
jnp
cmp
or
fs
xchg
rcll
sub
icebp
movsb
mov
in
jge
cltd
inc
and
or
pop
sub
gs
bound
and
iret
jne
sub
jb
xchg
xchg
aaa
push
loope
cltd
stos
lcall
dec
pusha
inc
cltd
shlb
aaa
outsl
add
push
sbb
jmp
xchg
add
lock
dec
adc
popf
stos
in
sub
cmp
ja
icebp
out
add
adc
loope
xchg
mov
shll
push
adc
popa
sub
out
roll
inc
cmc
dec
popa
scas
jmp
pop
iret
ret
mov
dec
mov
adc
dec
das
shlb
faddp
rcrb
push
jbe
pop
adc
inc
cld
adc
inc
lret
cmpsb
sar
fistpl
push
xchg
xlat
sbb
mov
jo
xchg
aam
xor
out
mov
cwtl
inc
sarl
xchg
lret
mov
jmp
pushf
add
mov
cmp
mov
pushf
fistpll
mov
insb
xchg
ds
inc
sub
add
roll
mov
stc
aam
dec
add
inc
cmp
lahf
out
pop
repz
ficoms
push
push
lock
adc
pushf
xchg
shlb
push
ljmp
sub
inc
mov
jp
fbstp
fnstenv
fs
sahf
movsb
xchg
sub
inc
adc
mov
and
rolb
xchg
pop
and
or
or
fists
jle
test
and
mov
bnd
ljmp
test
insl
mov
jmp
outsb
xchg
lods
push
xchg
jmp
mov
adc
loope
jae
mov
add
jns
jmp
loop
movsb
scas
pop
loop
xchg
push
jp
cwtl
inc
mov
push
in
sbb
fmul
pop
pusha
iret
fidivrs
fs
sub
xor
fcmove
cmpsb
mov
in
pop
sbb
mov
dec
cld
cmp
addb
cmp
loopne
mov
bound
push
mov
adc
push
js
fs
jge
ret
jg
pop
or
and
or
pusha
mov
hlt
test
test
cld
ficompl
ret
popa
inc
mov
mov
call
cmpsb
push
dec
loope
lret
dec
push
out
sbb
stos
mov
stos
sub
pop
fnstcw
cli
outsl
cmp
loop
inc
dec
divl
sbb
jecxz,pn
inc
mov
jns
cltd
orl
jmp
jbe
test
int
stos
lock
cmp
jecxz
scas
movsb
movsl
or
negl
dec
sbb
inc
cmp
add
movsb
sub
jl
add
push
dec
push
jge
popf
mov
push
xor
rcrb
cmp
push
xchg
pop
or
stos
test
lahf
xchg
xor
sbb
add
xor
and
pop
adc
and
or
pop
stos
fidivrs
out
sahf
push
insl
pop
sarl
pop
std
arpl
push
xchg
scas
arpl
in
fs
cmc
mov
ja
adc
xchg
mov
and
cmp
out
cmpsl
mov
mov
insb
dec
cwtl
les
das
arpl
xor
push
mov
jae
xor
xorl
aam
xor
out
outsb
xchg
fcmovbe
aam
mov
xchg
inc
pop
lock
je
lods
pop
cmpb
loope
adc
push
sbb
mov
inc
xchg
xchg
movsl
pop
sbb
in
mov
push
push
sbb
lea
shlw
pop
fidivrs
or
push
into
ret
dec
adc
imul
imul
or
jo
test
xor
pop
and
hlt
mov
repnz
mov
sub
jmp
addr16
push
fbld
stos
mov
les
repnz
adc
cltd
jle
out
mov
js
sbb
and
in
jnp
adcb
and
insl
lods
ret
jo
push
cltd
bound
pop
add
shll
js
pop
dec
push
lcall
and
mov
neg
sti
xchg
test
sub
aad
xor
xor
shl
rorl
mov
std
jne
std
and
sbb
shl
lea
insb
ret
mov
or
and
mov
xchg
push
cmp
mov
pushf
push
push
stos
or
dec
add
lds
adc
jno
mov
stos
stos
pushf
lcall
lods
jp
pop
pop
or
adc
sti
les
cli
imulb
les
mov
jle
rorb
fisubl
xor
hlt
addb
ret
cmpsb
dec
fisubl
inc
and
mov
arpl
xor
mov
push
adcl
in
push
arpl
cmp
sbb
push
outsl
pushf
les
push
adc
mov
sub
inc
repz
lock
stos
test
xchg
xchg
mov
scas
pop
dec
sub
pop
or
add
xchg
mov
insb
mov
ret
jmp
add
pop
insb
mov
sub
outsb
ds
int3
mov
add
ja
ja
inc
or
cmp
jl
inc
loopne
inc
push
idivb
loopne
push
cmp
and
pop
mov
aas
ds
imul
adc
or
push
sahf
add
jns
mov
lcall
pop
call
fistps
or
cmpsl
cmp
sub
sbb
stc
mov
addb
sbb
push
out
push
leave
cmp
xor
cltd
inc
enter
out
fcompl
xchg
or
lods
mov
cmp
lds
ss
lea
cs
dec
mov
add
push
mov
sbb
cmp
pop
sub
inc
sti
mov
or
or
int
mov
aas
iret
js
lret
add
loopne
xor
popa
inc
aad
ficoml
shlb
out
adc
xchg
add
sahf
xchg
jecxz
xor
insb
mov
addr16
scas
insb
push
out
mov
jge
pop
leave
lcall
xchg
sub
mov
les
daa
hlt
dec
mov
pop
push
mov
push
daa
les
loope
enter
mov
in
push
cwtl
test
fsts
and
movsl
in
out
repz
imul
jp
outsl
and
fcompl
or
xchg
push
scas
mov
dec
push
popf
jne
pushf
sbb
mov
inc
add
or
ret
in
mov
icebp
jecxz
repz
jecxz
inc
outsl
test
sbb
cmp
jmp
sbb
and
daa
pop
ret
or
stc
mov
test
cmpsb
fwait
fwait
icebp
iret
dec
stc
stc
shlb
test
addr16
add
jae
jp
test
inc
push
jecxz
pusha
or
mov
mov
aas
in
dec
int
lea
mov
pop
xchg
or
inc
ss
cli
inc
mov
je
push
pop
cmc
dec
xchg
xchg
sbb
add
dec
fidivrl
pop
jns
jle
stos
inc
hlt
and
or
add
sbb
sub
mov
aad
pop
inc
ss
sbb
inc
or
sbb
xchg
fistpl
mov
xchg
mov
test
fstps
fldl
lahf
or
addl
sbb
je
int3
mov
lea
push
and
addr16
lcall
pusha
rol
mov
cmp
pop
jo
iret
pop
sub
rcrl
sbb
lcall
pop
int3
in
jne
mov
fldenv
shrl
outsb
fdivrl
aad
ss
inc
jl
call
pop
push
pop
fwait
and
push
js
jo
jmp
xlat
shlb
lods
pop
cmpsb
push
jge
pop
int3
sbb
stos
les
ja
xchg
out
sbb
outsl
rol
cmc
dec
lret
sti
pusha
inc
fidivs
daa
mov
pop
pop
or
adc
jo
dec
repz
mov
mov
popf
fdivrs
shrl
lahf
lret
dec
out
xor
hlt
adc
cmp
lds
dec
dec
js
push
arpl
or
repz
outsl
outsb
xchg
inc
xchg
daa
enter
or
and
push
rorb
mov
lock
dec
mov
leave
mov
movsl
push
mov
lcall
pop
push
out
fld
adc
lods
jns
xchg
pop
sbb
mov
jp
fsubrs
cmp
inc
pop
in
int3
cwtl
in
or
push
sub
sbb
aam
ja
cmpsb
out
add
scas
sbb
pop
leave
jns
popf
std
loop
lea
shlb
icebp
xchg
test
push
cmpsb
das
daa
adcl
and
sub
push
and
sbb
into
sbb
repnz
add
inc
std
movsb
adc
mov
test
repnz
mov
inc
je
out
mov
sbbb
lock
pop
pop
jbe
mov
mov
je
lods
cmpsl
repz
data16
mov
lea
nop
in
and
repz
and
or
xchg
leave
lret
rol
insb
sbb
sahf
sbb
xchg
xor
xchg
in
inc
mov
out
js
leave
ficoml
sbb
pushf
out
or
push
mov
addr16
mov
or
movb
inc
movsl
sub
nop
and
and
dec
cmc
subl
xchg
inc
push
stc
mov
movsb
out
repz
sti
cmpsl
fcomp
insb
push
jp
inc
mov
das
in
push
leave
enter
dec
pop
add
fistpll
outsl
cmc
ret
divb
pop
push
fiaddl
rclb
scas
mov
and
add
jbe
mov
push
dec
jae
mov
jmp
sbb
mov
stos
sub
mov
jae
lods
loopne
dec
xchg
and
push
aaa
std
mov
or
shlb
mov
mov
xchg
and
test
mov
inc
xor
xchg
and
sbb
xchg
inc
pcmpeqb
pop
push
fs
mov
addl
sbb
call
fwait
cmpsl
pop
push
dec
es
test
sub
lcall
insb
sbb
js
sbb
fwait
popa
hlt
sub
adc
std
shl
add
mov
imulb
cmpb
cmp
mov
lfs
inc
mov
rcrl
js
adc
adc
jo
xor
dec
fdivs
jg
mov
xchg
shrl
mov
jno
xchg
mov
xchg
shlb
es
xchg
mov
inc
xchg
or
cli
ficoml
mov
lds
test
bound
adc
shl
mov
jb
mov
ljmp
mov
jnp
pop
mov
int3
jmp
dec
inc
rorl
xchg
jmp
scas
sbb
add
fs
cmp
ljmp
movsb
int
xchg
outsl
inc
std
pushf
push
pusha
leave
test
mov
repz
adc
test
fistpll
mov
cmp
mov
sahf
clc
dec
stc
push
rcll
std
dec
cmpsb
or
cli
cld
mov
fcoml
or
roll
mov
pop
dec
push
out
movsl
mov
jno
leave
adc
mov
adc
push
pop
mov
outsl
inc
js
lcall
push
fnsave
mov
adc
inc
movsb
lods
icebp
aas
adc
lock
hlt
jno
push
xor
popf
jns
mov
out
or
push
insl
cs
or
push
pop
dec
xchg
cs
imul
jmp
sub
mov
adc
orb
mov
mov
adc
test
xorl
jl
cmc
mov
mov
xor
sub
jmp
fcmove
dec
dec
imul
xor
pop
daa
insb
movsl
jns
dec
push
repz
pop
pop
pop
sub
xor
hlt
mov
mov
pop
mov
and
xor
in
pop
xchg
pop
lcallw
cmp
sub
test
in
pop
gs
nop
push
movsb
dec
not
lds
out
fstps
mov
add
stos
fldl
aam
mov
sarl
ja
mov
dec
inc
xor
stos
adc
js
xor
loope
jmp
imul
jo
rcll
out
stos
xchg
or
iret
std
in
orl
mov
mov
sub
ds
pop
negb
sbb
data16
xchg
push
insb
cmpsb
ret
jne
sbbb
pop
mov
sbb
adc
je
shrl
movsb
sub
push
inc
sti
test
pop
mul
lock
sbb
sahf
lea
push
leave
mov
sbb
jns
cmpsl
popl
cmpsl
jl
cld
scas
mov
das
movsl
jb
jmp
enter
sub
mov
pop
in
pop
pop
sahf
dec
pop
pop
lods
adc
roll
or
xor
stos
pusha
bound
icebp
xchg
pushf
mov
push
xchg
daa
push
add
mov
inc
lcall
or
call
out
push
or
mov
test
cmp
cmpb
push
lock
and
call
rcll
push
xchg
add
xor
inc
add
out
jl
cli
iret
lds
int
push
stos
or
and
dec
ss
xchg
push
int3
in
popf
sbb
test
mov
sub
cmp
sahf
cmp
add
mov
sbb
mov
mov
dec
jne
ret
xor
or
mov
mov
sub
pop
sbb
arpl
dec
in
out
add
in
arpl
repnz
sbb
jae
mov
cwtl
test
add
mov
mov
std
or
cmc
mov
fistps
outsl
pop
xlat
fwait
cld
mov
movb
std
or
scas
idivb
mov
cld
xchg
cmp
inc
test
xchg
pop
outsb
lds
inc
mov
std
jbe
addr16
scas
mov
mov
sahf
testb
std
xchg
mov
mov
iret
and
jecxz
xchg
inc
mov
dec
add
add
enter
inc
outsl
xchg
fcoml
pop
mov
fildl
lds
icebp
and
mov
.byte
pop
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
cvttps2pi
negb
mov
pop
xor
pushf
dec
inc
xor
mov
movsb
cmp
cli
stos
movsb
mov
call
inc
xchg
repnz
or
mov
or
jge
adc
clc
or
iret
jne
call
cli
ss
sbb
dec
mov
lock
xchg
inc
xor
pop
cmpsb
cmpsl
sub
mov
push
fwait
out
movsl
insb
out
mov
in
shll
sbb
push
jbe
mov
es
lock
push
pop
add
aam
mov
.byte
add
add
out
repnz
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
out
repnz
add
add
add
mov
add
addb
add
out
repnz
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
out
repnz
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
out
repnz
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
out
repnz
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
out
repnz
add
add
add
mov
add
addb
add
out
repnz
add
add
add
add
add
rolb
add
add
out
repnz
add
add
add
add
add
rolb
add
add
add
repnz
add
add
add
add
add
loopne
add
add
add
out
repnz
add
add
add
add
add
lock
add
add
add
repnz
add
add
add
add
add
add
add
out
repnz
add
add
add
add
add
adc
add
out
repnz
add
add
add
add
add
and
add
out
repnz
add
add
add
add
add
xor
add
out
repnz
add
add
add
add
add
inc
add
add
out
repnz
add
add
add
add
add
push
add
add
out
repnz
add
add
add
add
add
pusha
add
add
out
repnz
add
add
add
add
add
jo
add
add
add
out
repnz
add
add
add
add
add
addb
add
repnz
add
add
add
add
add
nop
add
add
out
repnz
add
add
add
add
add
mov
add
add
repnz
add
add
add
add
add
mov
add
add
add
out
repnz
add
add
add
add
add
rolb
add
repnz
add
add
add
add
add
rolb
add
out
repnz
add
add
add
or
add
add
add
out
repnz
add
add
add
or
add
add
add
out
repnz
add
add
add
or
add
push
add
add
add
out
repnz
add
add
add
or
add
push
add
add
add
out
repnz
add
add
add
or
add
push
add
add
add
out
repnz
add
add
add
or
add
push
add
add
add
out
repnz
add
add
add
or
add
add
add
add
out
repnz
add
add
add
or
add
add
add
add
out
repnz
add
add
add
or
add
add
add
add
out
repnz
add
add
add
or
add
add
add
add
out
repnz
add
add
add
or
add
add
add
repnz
add
add
add
or
add
add
add
repnz
add
add
add
or
add
add
add
repnz
add
add
add
or
add
add
add
repnz
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
enter
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
sbb
add
in
add
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
xchg
movsl
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
les
add
in
add
add
add
hlt
mov
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
sub
por
fwait
cwtl
mov
mov
outsl
xchg
cld
and
lret
dec
test
adc
lods
ret
cwtl
mov
filds
lret
push
in
mov
je
mov
ljmp
jno
xchg
or
push
jnp
aam
adc
sbb
outsb
adc
lahf
sahf
mov
and
imul
and
jge
mov
add
sbb
mov
cmp
loope
imull
xchg
sbb
dec
push
hlt
adc
sbb
mov
inc
jo
movsb
pop
xchg
sub
pop
dec
das
inc
xchg
mov
cmp
aas
jo
into
cmp
mov
mov
ja
push
packssdw
cmp
lret
dec
lds
cmp
inc
pop
xorb
pop
pop
cli
jmp
in
xchg
adc
sub
nop
in
xchg
xchg
lods
mov
push
sub
repz
filds
mov
popa
jl
xchg
loop
out
mov
jnp
cs
sub
inc
adc
imul
mov
insl
mov
icebp
ret
fcmovnu
testl
xchg
pop
adc
sarb
ja
adc
je
add
pop
inc
orl
repz
mov
pop
mov
sbb
push
loop
and
cmp
inc
jno
xor
or
xor
cwtl
pop
adc
ror
push
pusha
mov
fldcw
out
inc
fwait
scas
dec
inc
lea
lods
adc
push
icebp
mov
mov
xor
insl
bound
pop
mov
test
lret
mov
mov
cmp
stos
push
add
mov
mov
popa
add
adc
push
repz
jp
sahf
insl
mov
dec
and
mov
decb
test
jle
push
or
inc
fisubl
ret
jmp
sar
ds
sti
jl
loopne,pt
jb
jne
shl
out
stos
movsb
insb
mov
out
lods
pop
lods
xlat
lcall
aam
xchg
test
hlt
les
mov
adc
xor
xor
ret
outsl
jg
repnz
movsl
leave
ss
pop
jae
mov
rcl
aad
call
inc
movsl
sbbb
jp
pop
popf
jg
jge
xor
fsubl
pop
sbb
pop
aad
imul
pushf
repnz
cmp
jle
dec
lods
push
into
xchg
cs
cmp
mov
mov
pop
mov
pop
int3
cmovbe
xor
inc
mov
inc
shlb
in
dec
push
or
or
and
std
pop
or
mov
push
outsb
ss
outsb
mov
test
stc
xchg
sahf
scas
fdivrs
repz
adc
pop
ljmp
scas
movsb
adc
in
ds
sbb
or
push
and
rcrl
or
mov
out
sahf
pop
mov
adc
sub
xchg
xor
mov
mov
sbb
leave
lret
sub
ss
in
test
mov
push
or
push
jmp
movsb
sub
dec
icebp
insl
repnz
xor
dec
inc
cmpl
xor
or
pop
mov
cmpsb
jl
incl
arpl
fcmovnu
shlb
test
mov
dec
mov
inc
push
mov
lret
inc
adc
stc
repnz
adc
scas
or
sti
insb
sub
loope
mov
call
adc
mov
push
lret
pop
sbb
movsb
movsl
rcrb
inc
or
and
cltd
fmull
enter
xchg
mov
fisubs
rclb
rorb
jno
ficompl
repz
xchg
and
ret
clc
ljmp
mov
jne
inc
sbb
pop
cltd
pop
xchg
xlat
adc
outsb
xchg
test
bound
into
pop
inc
movsb
xchg
es
adc
sub
popa
into
stc
scas
jl
in
mov
mull
out
aad
or
shll
je
bound
mov
sti
xchg
push
sub
push
xor
cmp
hlt
in
fimuls
imul
je
mov
fsqrt
jl
psubsb
mov
dec
lcall
and
test
insl
jecxz
adc
add
mov
push
mov
aas
mov
sti
imul
pop
je
aad
inc
sbb
inc
nop
rcll
mov
dec
loopne
mov
push
idiv
not
pop
mov
ja
lret
mov
lret
pushf
sahf
dec
sbb
ja
in
inc
mov
shlb
add
lahf
aam
add
sbb
push
adc
add
pushf
out
inc
movups
subb
push
sub
cwtl
arpl
mov
inc
lret
sbb
add
pushf
mov
lods
jg
mov
lock
push
xchg
in
cwtl
ljmp
mov
mov
dec
mov
ficompl
mov
inc
enter
sub
out
test
es
aad
mulb
shll
inc
pop
push
jge
cli
out
inc
or
xchg
enter
fiaddl
and
mov
add
inc
or
pusha
mov
testb
fcompl
and
add
adc
add
insb
fisttps
rcl
fst
pop
clc
je
loopne
rolb
xchg
hlt
repz
pop
shrb
xchg
fsubrl
xor
cwtl
rcrb
inc
out
adc
test
lea
mov
push
addr16
popf
arpl
and
pop
dec
mov
je
adc
push
add
fldt
mov
in
int
ret
out
xchg
shlb
fstpt
mov
push
out
int
in
dec
ds
dec
into
repz
es
xchg
flds
mov
in
jp
xor
inc
jb
and
mov
mov
sub
push
cmp
cmp
sub
adc
pushf
sub
test
adc
pop
jge
movsl
out
add
pop
lret
jae
sub
js
push
pop
jp
add
mov
push
cld
dec
and
incl
mov
xor
sbb
xchg
pop
loopne
mov
and
mul
lcall
pop
faddl
lret
sbb
push
daa
sbb
je
lea
xor
cld
lock
insl
popf
or
lahf
jg
xchg
push
push
adc
ss
cmp
push
leave
or
inc
fimull
and
test
mov
fistps
and
inc
push
inc
xchg
fbld
mov
add
push
mov
sbb
shlb
ljmp
mov
add
adc
mov
xchg
xor
cld
ss
shr
adc
cmp
mov
call
add
out
cmp
fs
int3
mov
popf
loope
fwait
lahf
jecxz
js
cmp
loop
loop
test
mov
int3
aaa
cmp
push
out
sqrtps
into
adc
incb
adc
scas
imul
pop
jnp
push
aaa
gs
jne
popf
sti
icebp
pop
aad
pop
test
fists
mov
scas
cli
addr16
pop
xchg
jmpw
sub
hlt
mov
or
cs
jmp
add
cmp
pusha
repz
dec
xchg
mov
lods
jge
dec
aaa
aam
mov
ret
xchg
orl
sti
push
xchg
mov
std
dec
pop
out
mov
dec
roll
in
inc
mov
mov
inc
out
test
popf
sub
push
jecxz
in
and
sub
xor
mov
push
mov
adc
pop
add
mov
mov
adc
out
mov
jge
mov
mov
jge
test
aad
test
das
fcompl
out
and
ret
lahf
fwait
rorl
sahf
cmp
mov
ja
ret
add
inc
fwait
mov
dec
sub
add
dec
shll
or
mov
mov
scas
daa
dec
xchg
aam
ret
movsl
fsubs
mov
loopne
jnp
test
xlat
sbb
out
xchg
and
and
jne
cmp
mov
mov
add
or
xorb
inc
inc
imul
jnp
sub
rorb
mov
ret
dec
cmp
mov
mov
fs
loop
pop
push
hlt
aas
xchg
hlt
int3
pop
outsl
add
dec
cmp
add
sbbl
ja
push
mov
test
fisubl
mov
pop
mov
scas
pop
cmp
pop
ficoml
add
xchg
dec
xchg
lcall
mov
lcall
jne
adc
jecxz
push
fmuls
out
pop
sbb
mov
lods
icebp
scas
sub
in
xchg
dec
loope
jne
in
jo
out
cmp
cmpsl
ja
aas
ds
das
nop
cmp
push
int3
sub
iret
inc
xchg
pop
pop
jne
mov
adc
jmp
add
ja
ret
inc
bound
cld
les
push
ljmp
sbb
hlt
ret
nop
sbb
xchg
add
and
rcr
lcall
aam
dec
lret
jbe
shll
jo
and
call
test
ret
out
add
addr16
aad
jno
out
push
pop
jnp,pt
mov
fidivrs
push
inc
jbe
lods
gs
jae
repz
adc
or
inc
data16
dec
fwait
pop
pop
idivl
fisubrl
and
push
xchg
xchg
cmc
int
enter
insl
popf
std
stos
daa
shll
adc
cmp
rcrl
adcb
scas
stos
sub
lods
mov
xchg
jne
sub
jae
mov
cltd
call
lock
xchg
inc
pusha
and
rorb
push
ficompl
mov
cmp
adc
cmp
cmp
fidivrs
pop
out
inc
mov
mov
js
fdiv
inc
popa
push
cmpsb
inc
lods
pop
pop
ret
mov
add
or
mov
adc
lahf
dec
repnz
fsubrs
push
aaa
in
cmp
sub
add
ss
cli
and
sbb
ss
pop
jb
sub
int
in
jae
mov
daa
mov
mov
xor
push
movsl
sub
sarb
and
outsb
arpl
mov
lret
nop
push
adc
xor
mov
arpl
aam
mov
dec
mov
popa
sub
mov
daa
cmp
pop
mov
sbb
scas
mov
mov
dec
sbb
jns
popa
jb
jb
or
jecxz
cmpsb
dec
lcall
sub
mov
test
mov
into
call
bound
sbb
add
out
and
add
std
cli
jnp
es
scas
mov
and
lret
iret
jmp
mov
adc
jp
adc
lea
mov
push
mov
lea
mov
stos
xchg
popf
sbb
notl
ljmp
outsl
mov
jmp
frstor
cltd
mov
jnp
jle
fistpl
testb
je
pop
fisubrl
rcr
loope
mov
adc
cmp
lcall
push
sub
dec
movsb
mov
pushfw
xchg
dec
pop
mov
movsb
ret
mov
fcmove
mov
out
jg
mov
addl
xor
fiadds
enter
rcr
fcomi
lahf
repz
cld
orl
fwait
jne
outsl
cmp
pop
lods
and
cltd
and
arpl
sbb
shlb
xor
int
jne
push
push
leave
scas
jg
xchg
cli
inc
xchg
adc
jb
mov
add
fnstenv
fldenv
out
cs
ds
sbb
sub
dec
gs
rorb
add
dec
cmp
add
frstor
dec
ret
fcoml
faddl
pop
dec
cmpsl
jo
int3
mov
add
nop
loopne
xchg
rorl
mov
loop
lret
xor
int3
out
scas
roll
xor
mov
pop
and
push
mov
mov
cmpsb
add
or
sbb
scas
shrb
outsb
sbb
enter
rorl
mov
add
sbb
imul
cmp
rcl
or
mov
cld
mov
ss
imul
xchg
cmp
mov
or
add
movsb
mov
movl
add
out
ret
js
xchg
pop
xlat
loopne
ds
cmpsb
mov
arpl
clc
dec
imul
addr16
xchg
sarl
enter
mov
add
fisttps
push
aam
mov
test
jmp
dec
fidivs
inc
dec
lods
push
adcl
jmp
mov
add
and
xor
sub
shll
or
sub
jl
sbbl
iret
adc
outsb
imul
or
jae
inc
addr16
mov
xchg
ljmp
dec
cmpsl
add
arpl
jo
add
xor
mov
mov
cmp
mov
mov
ror
loopne
xchg
push
pusha
and
mov
inc
adc
mov
push
jp
push
in
or
cmp
jg
pop
stos
mov
outsl
mov
aaa
mov
and
and
push
dec
sub
xchg
push
fcomps
xchg
mov
push
sbb
frstor
ja
dec
scas
testl
and
fnop
xchg
mov
icebp
ret
sbb
hlt
adc
cli
lods
ret
lds
mov
mov
test
dec
arpl
mov
add
ffree
popl
enter
push
out
mov
scas
sbb
in
paddsb
mov
sbb
mov
cmc
pop
out
pop
xchg
ja
add
add
push
loopne
xchg
out
in
sbb
xor
push
and
in
push
jnp
xor
push
sbb
push
loopne
ljmp
dec
sbb
jb
adc
fyl2x
pop
testl
imul
jne
je
jne
dec
std
fisttpl
xchg
lock
inc
outsb
sub
push
xor
test
pop
push
sub
movsl
mov
pop
out
pushf
inc
fwait
cmpsb
fadds
mov
mov
pushf
addr16
movsb
aad
jge
jp
inc
ljmp
xor
pop
push
dec
xor
es
lahf
fnsave
movsl
jmp
psubsw
popa
xchg
cmp
jb
sbb
jo
fsubrl
bound
cmpsl
push
lds
in
mov
enter
jecxz
test
xor
fnstenv
dec
cmp
jb,pn
add
pop
and
dec
pop
aad
pop
mov
and
sbb
js
xor
inc
pop
dec
leave
jns
shl
data16
or
repnz
push
push
dec
popa
adc
es
and
push
sub
int
stos
pop
aad
jmp
push
or
dec
jno
aas
xchg
or
lds
cmc
sub
mov
clc
hlt
cmp
je
mov
xchg
loop
shll
loopne
ror
inc
mov
loope
add
imul
lahf
cltd
jne
enter
xlat
aam
mov
je
std
incl
jg
adc
stos
ja
cltd
mov
push
icebp
push
lods
pop
sub
pop
std
pop
dec
push
xchg
mov
shr
rolb
add
pop
scas
jle
push
inc
pop
jb
mov
out
push
adc
stos
enter
cli
inc
nop
mov
xchg
push
xlat
xlat
test
sbb
pop
jg
mov
xchg
aad
mov
shrb
xchg
clc
pop
lods
jmp
mov
mov
add
int3
fisubrs
fwait
inc
nop
mov
lods
adc
pslld
gs
jp
push
lea
in
sub
pusha
xchg
cmpsb
xor
or
out
jge
fsubs
mov
js
mov
cmp
xlat
push
and
cmc
jmp
xchg
ret
int
clc
mov
ja
into
xchg
fucomp
pop
lea
jne
mov
dec
loopne
push
aam
iret
repz
cmp
lret
add
js
pusha
mov
mov
sub
arpl
shll
rclb
aas
adc
jb
imul
les
add
leave
push
test
jae
std
cltd
jg
sbb
or
adc
push
cmc
add
adc
cmpsl
in
ljmp
enter
and
ds
xchg
cmp
xor
sahf
stc
xor
dec
repnz
jle
icebp
aad
loope
pop
lahf
mov
mov
fadds
cmp
je
addb
cmpsl
pop
push
dec
dec
pop
jb
xchg
pusha
cmp
cmp
int3
lods
test
stos
cltd
push
inc
pushf
inc
fsubp
jno
popf
or
out
xor
cld
addr16
add
pop
xchg
jl
nop
sahf
clc
frstor
mov
in
cwtl
xor
mov
lds
lcall
arpl
loopne
daa
sbbb
or
or
mov
mov
add
mov
scas
or
in
fs
ss
daa
pop
push
xlat
pop
fisubl
and
cwtl
test
ret
xchg
jle
in
nopl
out
add
jg
and
inc
cmc
xchg
push
in
inc
inc
test
lock
orb
fdivr
sub
loop
jl
xchg
mov
dec
mov
xchg
in
das
adc
arpl
and
pop
stos
cmpsl
sub
enter
push
adc
shll
dec
stos
sbb
mov
mov
inc
iret
add
jge
xchg
xchg
lcall
bsr
xlat
test
outsl
jp
je
outsb
cmp
or
mov
mov
repnz
sub
xchg
and
test
push
push
imul
push
dec
out
or
pop
fistl
inc
mov
inc
hlt
imul
add
sub
popa
push
xchg
xchg
pop
cmp
jno
dec
ds
fimull
mov
add
lock
daa
jns
mov
pushf
or
xchg
ret
into
dec
nop
jo
mov
xor
lahf
xchg
xchg
dec
xchg
ret
inc
and
lret
es
or
cmp
add
jne
inc
push
lock
mov
lahf
push
ss
loop
dec
inc
cmp
jnp
mov
arpl
xchg
mov
push
lds
rcrl
out
sbb
into
adc
sti
cltd
mov
movsl
icebp
inc
xchg
dec
push
xor
mov
out
mov
iret
outsl
xchg
cmc
out
stc
mov
inc
xchg
stc
arpl
jmp
push
adc
aam
lea
jae
xlat
loope
outsl
out
jp
sbb
adc
sbb
mov
and
push
dec
pop
xchg
push
shl
call
bnd
cmp
cmpb
sub
mov
and
add
je
out
sub
xor
rcrb
mov
lods
pop
fdivl
cli
pop
aas
mov
cmp
cmp
mov
jmp
cmp
mov
cwtl
mov
push
xor
add
out
loope
xchg
roll
push
fs
mov
or
cld
mov
push
lea
adc
scas
test
lcall
cmpl
in
ret
stos
fbstp
and
cld
mov
call
adc
out
dec
inc
jle
push
into
bound
lcall
add
into
jb
xlat
pop
adc
cmp
cmp
mov
inc
clc
divl
rcl
mov
scas
icebp
mov
nop
push
dec
test
movsl
cmpsb
cmc
xchg
addr16
jo
dec
imul
cmp
addb
push
pop
mov
arpl
jmp
cltd
cs
pop
ret
pop
push
ja
fs
adc
mov
test
cltd
and
or
mov
sbb
repz
dec
test
push
xor
fwait
push
pop
mov
shrb
je
and
dec
adcb
jbe
into
and
mov
xor
repz
int
mov
out
add
xchg
push
sub
jo
popf
ret
xchg
stc
addr16
out
and
push
fst
in
xchg
in
mov
or
leave
xchg
sub
outsl
lahf
leave
popf
push
xor
xor
leave
int3
sub
lds
sahf
movsl
lods
fistl
mov
xor
movsl
pop
mov
jno
data16
inc
mov
dec
lea
sub
loopne
andb
daa
and
push
jmp
data16
loope
mov
sbb
xchg
aam
iret
js
cwtl
sbb
fs
cltd
xchg
cmp
pushw
cmp
inc
cmpsl
jl
jmp
mov
push
mov
pop
jno
test
shrb
fiaddl
lahf
dec
cs
jb
adc
or
dec
loop
sbb
adc
xor
aaa
mov
bound
inc
adc
or
ficompl
aas
and
inc
jae
jge
aam
push
dec
push
in
inc
fadds
arpl
gs
bnd
lret
pop
movsl
fists
cld
and
imul
or
sbb
ljmp
inc
xchg
aam
push
pop
push
decl
mov
and
movsb
xor
hlt
jp
xchg
sub
pop
mov
push
jb
pop
cmp
ficoml
out
jmp
sarb
lahf
jne
lahf
lahf
lock
icebp
push
xlat
addl
inc
mov
mul
in
dec
cmp
icebp
dec
fwait
loope
andl
popf
push
sbb
jge
scas
mov
fildl
and
insb
xchg
fsubrs
mov
jne
mov
sub
inc
in
dec
push
scas
call
dec
aas
mov
cmp
push
xor
rolb
mov
popw
dec
mov
test
loopne
pop
xor
int3
mov
dec
insl
cltd
and
and
mov
mov
push
or
lods
mov
loop
subps
sbb
pop
xchg
es
aaa
imul
hlt
test
adc
mov
lods
fdivl
add
into
ret
lds
clc
sbb
lock
push
clc
push
sub
daa
aam
lds
inc
aam
pop
mov
inc
aam
mulps
shl
fimull
sub
add
mov
test
inc
xchg
sarl
scas
push
mov
sbb
cmc
jge
popa
push
loope
movsb
outsb
insl
dec
cld
push
dec
lcall
mov
jle
int
cmp
out
xor
jno
cmc
and
stos
adc
inc
nop
pop
push
xchg
roll
xchg
xor
add
popa
mov
ret
in
int
dec
push
or
and
pop
inc
insb
mov
cmp
inc
andl
cld
push
fwait
femms
cmp
mov
push
pop
pop
jbe
pusha
dec
ljmp
mov
mov
adc
cmpl
imul
pop
mov
push
or
sub
jne
insl
inc
int
data16
fidivs
or
das
xchg
or
lea
ljmp
mov
mov
cmp
lods
movsb
in
and
mov
and
scas
jg
mov
mov
mov
scas
loope
repz
mov
das
test
push
dec
jmp
mov
lret
push
ja
dec
std
aam
adc
rcrb
ror
jmp
push
test
ret
sbb
push
gs
jno
jmp
adc
xlat
adcb
xlat
fnstsw
mov
std
sub
insb
inc
push
rolb
lcall
lea
je
iret
pushf
imul
mov
push
mov
int3
or
mov
sbb
orl
or
mov
dec
xor
aam
js
mov
pop
dec
mov
jno
add
sti
rcrb
pop
xchg
repz
jb
roll
and
xchg
xor
es
pop
es
dec
inc
ret
std
adc
inc
jno
shl
xchg
mov
clc
add
icebp
in
add
hlt
pop
lret
pushf
stos
in
sub
outsb
sub
inc
dec
ss
in
outsb
jg
push
test
pop
es
add
insl
stos
test
das
lds
subb
jb
cltd
lods
jo
xor
mov
leave
ljmp
push
xchg
push
lods
cs
sub
mov
and
imul
pop
and
pop
test
xchg
ret
pop
push
jnp
cmp
mov
jno
push
lcall
ss
andl
in
mov
fldenv
xor
mov
jmp
xchg
sbb
inc
stos
or
dec
iret
les
jae
icebp
and
pop
or
xchg
repz
pop
pop
lret
pop
out
testb
lret
xchg
je
jmp
push
pop
push
xchg
dec
fadd
push
jl
dec
stc
lret
mov
orl
ret
andb
mov
push
add
or
adc
adc
adc
dec
or
pop
or
in
fcmove
push
jo
mov
jb
sbb
and
adc
cltd
cmpsb
pop
adc
test
xchg
enter
push
and
push
js
lds
scas
gs
mul
mov
fildl
out
aad
mov
in
loopne
jb
mov
cli
adc
and
les
jns,pn
rolb
xchg
xchg
fs
xlat
cmp
xor
and
sbb
dec
aam
stc
cltd
inc
cmp
rcrb
pop
mov
and
cld
fwait
cmp
out
xchg
loope
int3
mov
cwtl
inc
loopne
in
push
fcomip
mov
shrb
jmp
sub
or
xchg
mov
pop
xchg
in
stos
test
imul
jnp
daa
mov
stos
sbb
gs
sub
cmp
add
cmpsb
push
xor
sbb
ficoms
mov
test
sti
mov
ljmp
or
mov
repnz
push
bound
add
cmp
sbb
or
shrl
adc
cld
add
fs
or
gs
nopl
jb
mov
shrb
push
cld
js
push
ret
mov
cmp
pop
int3
mov
adc
push
mov
outsl
add
in
jg
mov
into
lods
cwtl
xchg
xor
adc
inc
addr16
or
arpl
adc
mov
cmpsl
arpl
cld
fcmovb
stos
insl
negl
aaa
mov
adc
jns
xor
mov
push
dec
pushf
shll
adc
into
mov
jb
or
sub
push
adc
or
lock
jae
js
cmp
arpl
xor
ja
stc
cmp
fwait
adc
pop
rcrl
shll
imul
inc
or
pop
mov
mov
xchg
pop
and
jge
sahf
test
or
outsb
adc
sub
aas
aam
push
cmp
imul
jo
mov
sahf
jae
jns
xor
mov
push
xchg
or
icebp
mov
sub
pop
fwait
aad
dec
cmpsl
and
and
mov
dec
lcall
pop
jg
fstps
cld
cmp
outsl
pushw
xchg
pop
jp
mov
call
inc
inc
fcoms
lods
ljmp
add
mov
sbb
enter
int
sbb
inc
mov
push
mov
clc
add
sbb
std
sbb
inc
ret
aaa
popa
sbb
adc
push
sbb
hlt
shr
fldt
jo
out
mov
jl
dec
dec
pop
lcall
sub
inc
dec
pop
sbb
sbb
and
jl
andb
in
xchg
cmpsb
dec
loopne
pop
xor
xlat
stos
stos
xchg
sub
mov
test
jecxz
lea
pop
mov
iret
sbb
cmp
mulb
cli
imul
jmp
pop
hlt
mov
jnp
das
cmpsl
cmp
mov
cwtl
in
add
jns
cmp
cld
mov
mov
popa
pop
pop
add
aad
xor
add
into
mov
subl
push
in
lcall
out
push
pop
ja
test
cli
in
add
pop
add
and
mov
movsl
gs
mov
sbb
mov
sub
push
data16
jecxz
call
ja
int
pop
mov
scas
sub
rcrl
shll
out
jp
sbb
ret
int3
xchg
cmc
arpl
cmp
test
add
dec
pop
lea
iret
mov
pop
pushf
sub
sahf
dec
stos
sbb
dec
les
sub
call
mov
jns
mov
mov
fcomp
arpl
add
jp
xchg
into
jno
and
cmp
pop
pusha
xchg
mov
sub
or
mov
lds
cld
sti
cmp
dec
sub
int3
hlt
out
jmp
xchg
dec
lods
mov
sub
pop
rclb
dec
or
gs
cwtl
test
into
jns
das
pop
mov
lret
xchg
mov
leave
scas
inc
pop
imul
dec
inc
in
int3
lret
mov
pop
stos
cmp
mov
and
cmp
insb
stc
and
cmp
add
jns
mov
decb
or
outsb
add
mov
xchg
xor
lret
or
enter
push
add
pushf
push
push
imul
setb
sbb
sbb
xor
xor
imul
mov
push
mov
sbbl
and
jnp
aad
pop
aas
mov
mov
or
aas
sahf
lock
sbb
unpcklps
add
stos
jns
inc
sbb
outsl
inc
xchg
jmp
popa
nop
dec
mov
int
cmp
stos
mov
sti
mov
shrb
sarl
xchg
mov
jmp
push
fnsave
mov
cmp
pop
pop
or
xchg
or
pop
sub
mov
inc
lods
xchg
ret
mov
jge
rorb
cmp
xor
or
in
imul
mov
inc
xor
jmp
insb
pusha
clc
push
cltd
or
test
xlat
les
nop
fstpl
push
add
pop
add
icebp
sub
xchg
loop
test
sub
jbe
mov
data16
push
outsl
std
out
inc
je
mov
lock
stos
imul
sub
iret
dec
loope
push
inc
sub
iret
leave
adc
pop
stos
jno,pn
xor
inc
stos
pusha
sbb
test
push
sbb
jge
aaa
pop
movsb
into
cmp
fildl
sub
fwait
mov
sbb
inc
es
adc
sub
shlb
jecxz
mov
push
add
inc
ror
popa
int3
jo
insb
sti
push
sub
dec
mov
ss
mov
cwtl
mov
dec
out
ret
ficoms
add
cs
dec
cmp
shll
push
lahf
jo
cld
pop
dec
ss
mov
pop
sbbl
dec
xchg
push
and
sub
inc
rorb
mov
and
mov
nop
xchg
clc
movsb
add
mov
mov
jbe
faddl
call
push
sbb
mov
ja
pop
out
mov
dec
xor
xchg
cmp
jae
pop
add
lret
ret
mov
fimuls
out
imul
pop
aas
in
inc
pop
fimull
xchg
and
mov
xor
ds
dec
mov
shlb
in
pop
sub
sbb
mov
xor
sub
jge
mov
pop
test
jbe
movsl
adc
mov
jnp
push
push
test
mov
ret
mov
popf
push
repnz
jb
std
or
rcl
jno
sub
mov
leave
ja
ljmp
and
gs
rclb
shl
shlb
mov
lds
in
insl
into
jae
into
fdivrp
adc
and
mov
sbb
int3
add
jbe
fnstcw
or
movsl
int
sbb
loope
in
sbb
mov
cld
pushf
push
sbb
pop
into
fs
mov
iret
mov
jl
and
sbb
std
inc
mov
push
sub
mov
into
push
mov
stc
adc
and
in
push
cmc
or
cmpl
sbb
scas
xor
fcoml
movsl
add
iret
ljmp
adc
dec
sti
stos
loop
scas
pop
test
test
cmc
and
add
and
fwait
daa
push
test
outsb
aad
lds
les
dec
sbb
push
xchg
out
pop
dec
pop
nop
mov
pop
add
mov
pop
fs
leave
stc
addl
pop
or
xchg
aas
test
ss
cmp
fistl
lret
sub
out
movsl
icebp
inc
jge
mov
ja
mov
addr16
xor
cmp
mov
inc
dec
lock
pop
mov
out
loopne
scas
mov
cwtl
adc
mov
inc
aad
rorb
jg
push
ds
cmp
dec
mov
scas
rol
cmp
imul
stos
mov
sub
aas
xor
call
test
and
sub
fldt
jge
sub
leave
cmpsb
sub
jns
icebp
jno
int3
orb
jmp
mov
inc
aaa
lock
call
jle
mov
pop
jae
aaa
cwtl
inc
fisttps
or
sti
jecxz
push
mov
dec
movl
jo
inc
lds
and
sub
sbb
lret
test
inc
addr16
adc
and
sub
xchg
dec
cli
enter
jae
into
ss
stos
pop
inc
je
je
or
and
push
outsl
fcoms
dec
lock
push
int
mov
inc
push
dec
into
pop
pushf
adc
addr16
sbb
add
cmp
pop
inc
inc
jns
pop
and
cltd
mov
cmp
inc
js
outsb
xchg
adc
xchg
inc
ss
push
sbb
jmp
inc
dec
ja
gs
mov
leave
jo
daa
mov
push
nop
push
aaa
repz
mov
popa
popa
out
sbb
mov
push
mov
push
fcomp
js
xor
lret
into
mov
cs
pusha
pop
sub
hlt
or
adc
xchg
sub
nop
xchg
push
mov
push
pop
mov
mov
mov
inc
jae
and
into
add
cmp
pop
loopne
imul
iret
and
lcall
stc
and
mov
roll
push
mov
pop
sub
pushf
jno
mull
imul
jmp
mov
in
ss
push
push
pop
cmpb
mov
std
mov
jle
pop
fmuls
push
inc
add
cld
fbld
push
jg
mov
js
bound
push
sbb
stos
jae
gs
sub
or
and
and
adc
adc
aam
popf
jno
mov
test
mov
or
adc
mov
mov
mov
into
lds
aad
call
inc
stc
bound
mov
movsb
jns
mov
jl
xor
jbe
or
nop
add
aam
xchg
cmp
imul
out
push
inc
dec
jle
cmc
mov
lods
dec
pop
ret
sbb
imul
in
and
mov
mov
xchg
dec
mov
ret
push
scas
push
mov
sti
adc
add
mov
daa
fsubrl
lods
inc
out
imul
sub
lcall
dec
xlat
cmp
cli
sbb
mov
jnp
aad
lcall
fnsave
fnstcw
push
mov
mov
mov
lahf
ljmp
dec
aad
test
lcall
in
push
sbb
dec
inc
imul
pop
mov
loope
sbb
dec
jp
mov
mov
insl
push
daa
adc
cld
xor
mov
lea
fdiv
jmp
insb
push
gs
xchg
xchg
xchg
int
scas
enter
push
fs
icebp
into
jns
jo
inc
std
fstps
fimull
push
mov
enter
test
aaa
sub
xchg
jno
push
stos
jecxz
enter
push
xor
fsubl
outsl
sub
push
pop
xchg
stos
sub
mov
mov
out
sub
cmp
aam
jg
cmp
push
test
shl
jge
dec
xchg
pop
ret
outsb
pop
rcll
jb
push
add
idiv
cmovg
or
sbb
dec
cmp
enter
sub
jl
dec
adc
negb
fst
xor
stc
mov
fdivr
and
pop
scas
add
pop
fidivrl
xchg
repz
or
pop
aam
mov
cmp
icebp
xchg
int
pop
xlat
xor
dec
int3
fiadds
inc
inc
dec
push
aam
dec
lret
xchg
pop
pop
jl
and
rclb
lds
xor
push
push
mov
mov
push
sub
movsb
jne
xor
or
xor
mov
and
pop
dec
jae
mov
push
add
lret
cmp
xor
push
clc
push
jbe
jl
cmp
fisubl
scas
sbb
ja
and
or
cwtl
jp
mov
sahf
movsb
cmpsb
add
dec
aad
cmp
xchg
jl
xchg
arpl
inc
jle
outsl
jb
pusha
shl
sub
cmp
dec
repnz
adc
mov
xor
sbb
iret
out
adc
mov
add
add
pop
nop
and
out
mov
ja
enter
mov
scas
and
mov
andl
adc
cs
pop
lock
inc
or
insb
pop
cmp
xlat
sub
dec
sbb
movsb
mov
xor
xchg
test
jecxz
jns
jg
mov
call
jmp
jnp
fimull
sti
test
ret
in
cmp
sub
push
pop
jg
jb
js
pop
push
cld
cmp
add
repz
stos
jb
mov
and
mov
and
lods
jge
rorl
sub
and
iret
xor
jne
xchg
cwtl
jmp
and
subl
sarb
ret
mov
hlt
xchg
icebp
xchg
ret
mov
jmp
xor
mov
in
es
shlb
xorl
daa
add
cmp
cmp
adc
cmp
mov
clc
mov
addl
push
add
sbb
push
rcrl
sub
sti
shll
push
cmp
out
xor
testl
jp
push
adc
push
push
ror
cwtl
or
stos
inc
lret
dec
jle
dec
push
xor
mov
rep
stos
or
daa
xchg
dec
add
or
dec
push
das
jo
les
push
mov
repz
test
push
xchg
out
roll
adc
and
fwait
loop
mov
push
xor
xchg
mov
or
inc
push
and
dec
push
inc
jae
mov
cmc
push
pop
mov
loope
lds
test
mov
xchg
lret
mov
enter
mov
xlat
pop
lods
dec
fistpl
dec
fdivrs
pop
rclb
push
out
std
out
in
ret
ja
pop
or
in
repnz
sub
rcrb
dec
cli
shl
inc
inc
push
dec
push
pop
ljmp
call
jp
cmc
jo
add
movsb
les
adc
mov
insl
xchg
push
xchg
loopne
mov
push
leave
mov
add
push
mov
gs
in
ja
mov
fadds
ja
sbb
mov
lcall
pop
shll
xor
loopne
sbb
aad
out
pusha
outsb
or
hlt
mov
xchg
js
int
dec
lret
sub
mov
xor
loope
dec
testl
dec
divb
cli
inc
imul
sarl
push
sbb
or
cmp
mov
jl
dec
pop
adc
nop
xor
aaa
xchg
sbb
int3
lret
ja
add
nop
mov
hlt
ffree
adc
cwtl
mov
dec
dec
loope
adc
cld
shl
sub
ljmp
outsl
dec
mul
inc
scas
sub
xchg
push
je
mov
pop
divb
xor
lcall
scas
or
in
pop
in
jmp
adc
sbb
cltd
push
mov
lcall
inc
cli
pop
pop
inc
fdivs
or
and
add
fst
test
mov
outsb
push
shl
ret
pusha
sti
add
or
gs
xor
mov
cmp
dec
and
test
sub
pop
hlt
jecxz
into
ret
inc
adc
lock
pop
pop
jo
xchg
mov
xor
pop
clc
and
dec
adc
cmpxchg
pop
ss
cmp
pop
dec
cmpsb
xchg
jb
mov
add
sub
jge
or
ja
dec
dec
mov
adc
arpl
addr16
xchg
add
xchg
inc
fisttpl
ffree
inc
mov
mov
aam
jne
lcall
addb
mov
rorb
add
shl
jbe
mov
cld
pushf
movb
adc
sbb
movsb
mov
push
mov
push
adc
mov
cmc
inc
mov
push
addr16
mov
pop
mov
jp
xor
imul
dec
cwtl
xor
inc
loop
jo
mov
scas
int
fcomip
sub
cmp
mov
js
outsl
inc
test
dec
scas
test
push
das
jnp
or
xor
pop
adc
jecxz
xor
rolb
shll
adc
fildl
inc
mov
mov
sar
push
mov
lret
nop
xchg
les
hlt
or
jg
jns
mov
and
adc
xor
data16
and
jle
ljmp
orl
stos
in
scas
xchg
jg
ss
in
fs
jno
cmpsl
jmp
sbb
loopne
adc
mull
xor
jecxz
aad
clc
inc
mov
enter
push
or
jb
cmpsb
jecxz
push
sbb
cmp
dec
paddd
jecxz
adc
xchg
xlat
pop
lea
jnp
jmp
cmp
inc
out
dec
stos
dec
cmp
add
das
jnp
inc
loopne
sbb
pusha
pop
repnz
add
mov
enter
cmp
xorb
imul
addr16
add
movsb
sub
dec
cmc
loope
cmp
scas
lods
or
jge
add
sahf
jecxz
xchg
mov
mov
cmp
lretw
cmp
sub
mov
xchg
xchg
movl
push
push
pop
xchg
lds
xchg
jmp
push
mov
push
and
das
mov
loop
icebp
dec
cmpsb
testb
mov
xchg
aam
icebp
mov
cs
sbb
mov
dec
mov
cmpsb
into
push
pop
in
mov
out
addr16
fldenv
lods
jp
mov
xchg
sbb
jne
aaa
pop
or
adc
fsubl
and
mov
jno
sub
push
fiadds
jmp
std
mov
jl
and
jecxz
popf
cmp
insl
push
rclb
pusha
cmp
jle
ficoml
fucomp
xor
or
outsl
sub
add
fs
popa
cmp
orb
scas
bound
cmp
xor
cwtl
mov
movsb
stc
loope
pop
in
sahf
pop
or
pushf
mov
mov
loopne
mov
mov
insl
in
sub
aad
and
fsubrl
mov
and
mov
stc
insb
pushf
movups
push
cmp
jb
ret
movsl
bound
mov
inc
outsb
pop
inc
addb
leave
dec
add
das
jns
push
pop
mov
sbb
pop
adc
jmp
xor
inc
push
jno
fstl
mov
push
lock
adc
stos
xor
sub
adc
enter
dec
popa
adc
mov
sbb
movsb
dec
xchg
jg,pn
outsl
ljmp
push
lock
mov
mov
shrb
jae
ret
movsb
daa
cmp
cli
inc
out
mov
adc
dec
mov
aas
pop
xchg
xchg
or
mov
lea
int3
out
jp
jle,pn
inc
les
sti
sbb
xchg
or
ficompl
xchg
mov
push
frstor
fsubl
mov
inc
mov
out
addr16
test
mov
ficoms
pop
jbe
addb
pop
call
repz
addl
in
pop
fwait
xchg
in
sti
fisubs
mov
lock
fwait
sub
xchg
mov
push
cmp
pop
mov
push
mov
sbb
mov
jg
test
jne
dec
mov
cmp
jae
int3
enter
das
cld
or
adc
fsubs
add
pusha
insb
or
shl
mov
scas
loope
xchg
leave
idivb
xlat
jo
adc
test
hlt
shl
out
test
dec
sub
icebp
sbb
outsl
icebp
mov
jae
jns
mov
add
add
sbb
dec
lcall
int
mov
jge
shll
dec
pop
aad
inc
cmc
daa
lret
jbe
xchg
jnp
jnp
mov
clc
loopne
pop
rcr
nop
into
arpl
rorb
aaa
or
pushw
gs
sti
dec
aad
scas
pop
xchg
test
mov
ret
cmpsb
js
mov
ss
mov
outsl
jmp
cmp
stos
lret
sub
fs
ss
popa
add
sbb
int3
outsb
in
int3
mov
sub
pop
cmp
xchg
mov
cmp
mov
xlat
pop
call
mov
leave
sarl
aad
sub
lcall
fcoml
pop
jne
sub
jae
sbb
mov
addb
clc
enter
imul
mov
inc
sahf
loop
ja
or
dec
leave
fwait
or
add
inc
jmp
ss
push
mov
fnstcw
aaa
data16
sbb
fcomi
sub
jbe
les
testb
mov
test
mov
cwtl
sbbl
cmp
pop
mov
shl
mov
mov
popa
inc
cmc
daa
sbb
cmpsl
mov
push
aaa
js
aas
sbb
mov
popa
jge
adcb
push
call
cmp
fidivrs
jg
cld
in
fdivs
add
inc
test
cld
mov
lahf
sti
jno
dec
out
fstpt
rcll
push
nop
dec
cs
adc
out
sub
popf
sbb
addl
jo
das
icebp
pop
loopne
push
add
xor
jge
adc
mov
popa
or
jle
add
xchg
rcl
cmpsb
sbb
bound
cmc
sbb
or
imul
test
test
or
lcall
inc
aad
lahf
lret
xchg
popa
dec
dec
push
fst
jnp
pmulhuw
or
movsb
xor
subb
into
and
push
andb
inc
xchg
js
pop
shlb
dec
les
fisubrs
jnp
arpl
adc
mov
pop
sbb
bound
rcrl
mov
mov
adc
cmp
shl
mov
add
add
pop
jle
and
ja
add
xor
je
lea
xchg
setno
inc
xchg
out
cltd
adc
cli
and
dec
adc
inc
jp
pop
imul
pop
jbe
xchg
aas
mov
aam
add
xor
pop
add
xchg
cltd
iret
cmp
lock
mov
sbb
fwait
gs
shll
cmp
mov
lock
xor
mov
enter
sbb
mov
inc
cmp
repnz
ja
lds
and
pop
pop
sbbl
daa
in
cld
cwtl
inc
repz
xor
sbb
bound
inc
sbb
mov
xchg
jo
sti
push
or
mov
enter
in
roll
sbb
pop
push
pop
fisubrs
adc
psubd
aad
sarl
push
aad
cmp
fs
add
mov
repnz
push
xor
mov
push
push
aaa
mov
jno
iret
out
dec
and
jge
cmpxchg
jns
insl
movb
adc
enter
lds
mov
fldt
scas
pop
mov
mov
out
dec
movsb
shrb
jp
or
xchg
xor
pop
sahf
pusha
mov
xor
mov
lret
cmpb
js
cmp
jb
fcmovu
jo
outsw
push
cmp
into
call
cld
aas
lahf
jnp
jo
xlat
or
sub
aam
dec
dec
xchg
sub
fisubrl
jp
jb
cmp
mov
pop
jmp
dec
push
mov
pop
jb
std
icebp
sbb
rcr
jmp
jecxz
jp
shll
loop
test
lods
xchg
cwtl
or
and
cmpsl
adc
fucomp
xor
loope
push
inc
divb
xchg
fcom
pop
icebp
jbe
pop
sub
and
or
lds
or
or
cmp
cltd
in
ret
rcll
adc
call
int3
inc
xchg
xchg
or
adc
and
sbb
mov
test
cmc
cwtl
arpl
icebp
mov
xchg
orl
cs
jge
movsb
sub
cwtl
fsubrp
daa
dec
das
sbb
sti
mov
jae
fldt
jno
mov
add
stc
lahf
daa
add
xchg
stos
scas
jae
mov
es
mov
mov
clc
ljmp
or
dec
ljmp
xor
cmp
dec
in
xor
xchg
mov
std
sahf
aaa
leave
int3
jle
mov
xor
in
scas
inc
aaa
out
add
mov
sbb
js
jle
cld
lods
imul
int
xor
lcall
pop
repz
sbb
cmp
fwait
jae
daa
pushf
lods
cli
add
jp
pop
xchg
in
pop
dec
push
movsb
add
xorl
into
add
popf
ds
lret
scas
or
sbb
cli
sbb
repz
mov
aaa
fincstp
mov
jnp
ss
fmull
pushf
lea
clc
mov
cmp
test
or
shll
or
das
fsub
test
ss
jo
mov
xchg
inc
cltd
nop
sub
xor
fiadds
lret
sti
xor
sbb
push
xor
adc
and
aas
icebp
dec
fbstp
shlw
stos
add
mov
arpl
or
mov
arpl
mov
and
dec
inc
loop
and
mov
nop
mov
xorb
push
imul
or
insl
es
xor
sbb
movb
push
nop
stc
mov
mov
rorb
orl
jb
dec
scas
sub
jl
les
mov
mov
pop
test
jg
stos
jmp
mov
lcall
or
js
leave
lret
and
fidivl
int3
adc
sub
lahf
mov
mov
and
mov
push
rol
jbe
insl
push
mov
mov
pop
arpl
cmc
movsl
and
or
push
xchg
sub
out
jmp
sbb
jne
mov
pop
jl
mov
push
imul
std
dec
dec
cmp
insb
mov
cmp
dec
into
fisubs
mov
ljmp
push
mov
inc
movsb
adc
mov
data16
mov
push
pop
mov
enter
sbb
inc
test
or
pop
or
xlat
popf
pop
cmp
vmwrite
int3
insl
dec
jne
ret
out
and
lret
es
xor
jp
outsb
lock
das
xor
push
cs
stos
aad
inc
test
cmp
or
jmp
jmp
push
jae
push
movsl
adc
cli
lahf
insl
cmc
mov
clc
andl
inc
in
bound
insl
add
sti
dec
and
add
inc
pusha
test
add
lods
out
test
pop
mov
loop
rorl
mov
mov
inc
rorb
lret
daa
or
lods
jp
xor
fsubs
or
test
or
mov
adc
outsb
es
jp
dec
cltd
dec
xchg
out
scas
push
jle
loope
jns
pop
insb
jbe
xchg
cltd
push
testb
dec
pop
loopne
cs
rcll
out
andl
xchg
cmp
js
cli
sahf
cltd
jmp
and
popf
adc
sbb
stc
xchg
lods
arpl
pop
jb
xor
xchg
jnp
clc
dec
push
dec
imul
jmp
cltd
lds
imul
mov
fisubl
push
sbb
mov
orl
sub
pop
icebp
xchg
sub
sbb
cld
divl
xchg
and
cmp
mov
movsl
add
iret
or
add
jmp
or
icebp
adc
jbe
int
ret
imul
jg
scas
jo
mov
jno
loopne
mov
testl
std
push
ds
ret
cli
int3
mov
addr16
jecxz
rcrb
je
push
pop
add
loop
ss
cmp
push
imul
sbb
mov
cmpsb
or
xchg
mov
cwtl
dec
popf
std
roll
out
pop
push
int3
icebp
mov
sarb
std
push
and
cmp
psllq
jne
fucomp
mov
mov
xor
add
adc
mov
mov
adc
scas
in
add
push
out
movsb
lds
scas
fst
das
shr
pop
sbb
inc
outsb
stos
pop
and
sub
xchg
outsb
jne
pushf
inc
stos
and
mov
aas
dec
sti
cwtl
lods
mov
sarb
outsb
pop
jnp,pn
mov
push
push
push
fldl
adc
outsl
mov
dec
mov
cs
repz
rcll
or
stc
xchg
inc
push
sahf
cmpsb
or
xor
lea
out
andl
adcb
add
int3
ljmp
loop
in
mov
cmpsl
inc
lahf
lock
push
insb
outsb
cmp
inc
call
es
lret
sub
decb
or
les
pop
leave
push
psllq
pop
jmp
xor
mov
jecxz
loopne
into
iret
ret
or
and
sub
sub
lahf
aad
ret
inc
outsl
push
pop
mov
xor
xor
repnz
pop
push
idivl
fdivrs
pop
inc
or
add
mov
or
jne
leave
fisubl
xchg
int
inc
jno
js
into
repz
cmpsb
jecxz
nop
outsl
mov
sti
adcb
cltd
add
test
xchg
xchg
out
call
sbb
jp
cmp
scas
lahf
sub
inc
inc
or
imul
jbe
dec
repz
push
sbb
or
mov
jl
scas
shrb
stos
jns
out
pop
sbb
arpl
ja
pop
cli
cld
imul
mov
push
mov
mov
cmp
inc
push
xor
xor
cltd
mov
dec
sub
inc
adc
add
movsl
jg
mov
insl
pop
dec
xchg
fwait
inc
insl
mov
scas
in
in
and
iret
jbe
or
cmp
cmp
xchg
or
mov
xor
or
add
sbbl
push
cli
testl
mov
cs
es
adc
xlat
fcmovnbe
test
and
jge
jg
sbbl
pop
push
mov
sub
push
rclb
or
test
push
es
mov
mov
sbb
push
add
stos
out
push
xor
xor
dec
add
adc
and
cltd
pusha
mull
pusha
shll
fsts
pusha
fs
ljmp
push
add
int
xchg
push
dec
sbb
push
xor
and
xor
cmp
or
or
out
test
lods
push
and
xor
lock
mov
sbb
and
hlt
sub
sbb
out
or
loop
jp
push
fs
cmp
stos
adc
jmp
ljmp
dec
add
sahf
idivl
loopne
sti
jb
sbb
gs
xor
cwtl
aaa
or
mov
jbe
leave
cmp
jp
pop
pusha
lods
nop
lds
push
mov
mov
es
inc
repnz
cmp
aam
nop
cmp
fmull
push
lds
popa
mov
sub
dec
out
jno
test
cmp
test
sbb
push
adc
or
lods
and
out
dec
xchg
out
imul
mov
jp
rorb
xor
rorl
jnp
pusha
sbb
enter
test
cld
or
mov
in
add
adc
shlb
pop
push
mov
lds
push
mov
push
cmpsl
jle
dec
clc
sbb
sbb
into
std
fs
lds
push
add
les
fwait
stos
inc
out
mov
mov
mov
inc
jmp
inc
push
enter
xchg
xlat
daa
aaa
or
rol
shr
cmp
sub
xchg
call
popf
cmpsl
jb
imul
fistpll
lcall
imul
lods
shlb
andb
mov
jo
insb
dec
les
push
fcom
sahf
xchg
sub
ljmp
inc
mov
lret
adc
gs
cmpsb
sbb
xor
mov
cli
mov
cmpsl
dec
and
fnsave
and
xor
cmp
outsl
sub
sub
divb
mov
pop
and
stc
jae
sbb
lods
pop
lcall
cld
imul
dec
cmp
pushl
out
imul
xor
subl
bnd
sbb
call
and
jo
pop
pop
int3
pop
dec
pop
in
daa
sbbl
iret
pop
mov
and
rcr
xchg
add
or
fdivr
dec
sahf
aaa
lea
dec
ret
xor
cmpsl
dec
jae
xorl
mov
adc
out
test
leave
xor
pop
sbb
mov
mov
repnz
cmpsb
stos
out
push
fs
jnp
addl
mov
test
mov
xchg
out
jle
dec
inc
lahf
cmp
pushf
lret
adc
mov
pop
popa
cld
mov
mov
jp
les
adcb
shrl
push
in
mov
fldenv
test
push
loopne
loopne
inc
xor
jl
outsb
jae
out
cmpl
inc
pop
inc
push
mov
lds
jmp
cmp
jo
mov
ret
cmp
or
pop
pop
pop
cmp
cmp
xchg
sbb
aam
subl
xorl
jno
and
xchg
add
lds
fs
push
push
mov
and
mov
adc
in
dec
das
adc
movzbl
lock
sbb
inc
popf
bound
ja
lret
pop
cmp
popa
lret
fwait
mov
repnz
lods
cmp
adc
pop
and
in
les
push
sbb
es
dec
ja
or
cmp
and
or
add
js
loope
push
inc
xchg
scas
ja
mov
mov
pop
sub
int
jo
add
dec
dec
mov
lcall
test
mov
pop
jl
add
lret
fistps
cmp
jmp
dec
push
and
push
leave
shr
mov
pcmpgtd
sbb
pop
xchg
xor
arpl
mov
test
scas
cwtl
test
adc
inc
add
cmp
sbb
lcall
test
andb
pop
test
mov
ljmp
iret
inc
push
fs
xchg
movsb
into
pop
inc
loope
scas
or
dec
inc
fbstp
push
xchg
outsl
sub
xchg
test
rol
dec
sub
push
jns
iret
or
sahf
adc
inc
push
adc
xor
insl
jbe
add
sub
or
pushf
inc
cmp
stos
jge
mov
dec
call
in
int
jnp
xor
sub
and
scas
imul
test
cmp
or
push
js
jae
leavew
pop
xchg
mov
stc
xor
add
out
lea
outsl
in
stos
xor
xor
and
aam
add
idiv
lock
mov
loopne
in
mov
cmp
cli
fistps
outsb
int3
cmp
adc
or
fld
jmp
cmp
sbb
xchg
sub
scas
mov
mov
stos
div
xchg
pop
push
xlat
cmp
cmp
sti
sbb
adc
sbb
aaa
push
notb
lock
xor
push
pop
jae
aaa
in
inc
inc
adc
fiadds
leave
leave
and
xor
push
adc
aam
adc
mov
mov
inc
test
icebp
stc
adc
sbb
pop
and
bound
adc
xor
add
enter
js
push
aam
pop
lcall
out
jbe
jno
jnp
jno
inc
movl
push
adc
lods
lods
insb
push
xchg
std
test
add
xor
mov
pop
pop
cmp
xchg
stos
jecxz
nop
add
jmp
fildll
outsl
loope
pop
popf
ret
addr16
imul
imul
gs
sub
into
in
add
out
sti
ja
divb
mov
sbb
dec
not
adc
xchg
les
xchg
adc
adc
mov
add
fimull
cli
test
xchg
dec
sub
pop
mov
movsb
adc
mov
test
xor
adcl
dec
inc
dec
mov
stos
ds
push
jmp
scas
lods
leave
pop
pop
xchg
dec
or
ds
sub
stos
cli
imull
fmul
xor
mov
push
lahf
xor
incb
int3
aad
add
repz
or
or
stc
icebp
mov
popf
shlb
fmuls
mov
mov
dec
mov
jb
lea
int3
call
dec
push
fwait
ds
es
jle
pop
int3
sub
test
stos
mov
cwtl
enter
insb
aam
xor
add
mulb
inc
dec
jmp
test
and
sub
test
mov
and
aaa
mov
and
mov
in
pop
jbe
or
push
jo
jl
add
push
jle
adc
fldcw
aas
mov
out
mov
adc
inc
int3
fisubrl
lock
stos
mov
pushf
adc
jp
fildl
clc
and
sub
aam
inc
fs
insb
mov
pop
movsl
test
jbe
push
sti
fisttps
dec
push
cmc
mov
dec
lock
out
jp
ss
xchg
pushf
sub
xchg
mov
mov
push
movb
pop
clc
mov
repz
cmp
mov
das
xor
fscale
cltd
je
aam
mulb
lods
in
gs
gs
cld
dec
sub
mov
xchg
lcall
pop
mov
flds
sbb
push
sub
ljmp
sbb
sub
push
sar
in
sub
aam
mov
test
popa
mov
lahf
sbb
dec
pop
sbb
pop
add
pop
mov
xlat
mov
inc
xor
in
jnp
jo
mov
xchg
inc
add
sub
fsubr
sub
shll
jb
js
pop
xchg
dec
push
inc
pusha
xor
adc
dec
fcompl
outsb
and
dec
pusha
adc
addb
js
test
xor
subl
adc
mov
jge
sub
sub
xor
adc
loopne
sub
fidivs
ljmp
inc
dec
mov
lock
jne
xor
inc
mov
adc
dec
pushf
cmp
cmp
sub
adc
push
cmp
push
rorl
sar
cltd
out
fnstsw
frstor
add
les
adc
xchg
movsb
add
xchg
ja
movsl
and
cmp
jno
cmp
dec
mov
push
jl
push
loope
pop
sub
mov
ret
sahf
mov
mov
outsl
mov
mov
sbb
jmp
lock
dec
call
lahf
out
enter
in
fdivr
mov
mov
pop
push
imul
imul
sub
pop
in
imul
cmpl
mov
stc
test
cli
inc
inc
pusha
lret
pop
loopne
js
push
push
clc
iret
dec
loope
js
dec
push
and
fcoml
loopne
add
cmp
cwtl
clc
out
mov
aas
ja
jg
cld
jle
or
cltd
das
push
stos
dec
jge
fiadds
int3
and
jo
xor
lahf
mov
xor
sahf
jmp
dec
fs
daa
push
cli
rorb
fcoms
pop
push
scas
adc
jle
adcb
dec
xorb
das
jl
movsb
mov
imul
pop
cmp
lret
add
inc
gs
pop
ja
test
aam
dec
aaa
dec
xchg
jmp
adcl
add
jl,pt
xchg
inc
add
imul
movsl
xorl
jns
dec
xor
ret
ljmp
clc
lods
or
lret
push
sbb
sarb
cmc
mov
outsl
jle
pop
scas
das
add
xorl
jp
out
cmp
sbb
add
test
pop
mov
aaa
outsb
push
mov
insb
cmp
inc
into
cmpsl
rclb
mov
mov
adc
push
xchg
mov
fld
and
push
add
sbb
js
inc
xlat
mov
nop
leave
int
popa
mov
ret
insl
out
xor
push
inc
std
jp
or
and
push
cs
mov
xchg
inc
not
mov
inc
sahf
arpl
test
in
lds
push
out
movsl
ljmp
jecxz
sahf
aas
out
std
adc
pop
outsb
push
push
jb
inc
sub
add
push
andb
mov
jb
or
xchg
adc
dec
jbe
push
jmp
cltd
cwtl
pop
mov
adc
add
test
or
jmp
jg
int
jo
aaa
sqrtps
lret
js
rcll
ret
mov
lahf
aaa
push
notl
inc
push
pop
mov
push
or
xor
hlt
push
or
fstl
jb
pushf
out
or
sarl
lock
jb
popf
push
xor
in
push
rorl
xor
popa
imul
shl
sbbb
scas
xor
cs
fwait
cmpsb
mov
pop
jle
jecxz
outsl
pop
adc
adc
xchg
push
loope
jae
push
sub
fwait
xchg
fistpll
movsb
add
inc
inc
push
cmpsb
jmp
jecxz
movb
jmp
push
jecxz
in
dec
sub
push
and
loop
paddsw
mov
adc
jg
out
push
sbb
jp
int
shrl
mov
call
ja
out
sub
jb
out
or
mov
sub
fcoms
add
cmp
lea
jl
adc
leave
mov
push
jecxz
je
cli
mov
dec
and
or
jg
mov
fwait
mov
adc
sbb
lock
fistps
cmp
or
or
cmpsl
mov
int
int
sbb
adc
dec
xor
xorb
stc
orl
cmp
sub
aaa
pop
xchg
leave
and
clc
stos
mov
iret
cmp
loop
bound
and
ja
push
jbe
mov
push
pop
scas
andl
sub
hlt
sti
out
ds
mov
cmp
loop
inc
mov
sahf
stos
sub
outsb
xchg
mov
cmp
outsb
cwtl
mov
sbb
and
adc
mov
mov
add
test
xor
add
mulb
xorb
add
test
call
cmovb
sbb
mov
int
sbb
std
sbb
ljmp
inc
int
test
scas
scas
mov
pop
cltd
sub
rcll
mov
shlb
mov
dec
popa
mov
aam
nop
or
xor
xchg
mov
inc
mov
pushl
push
jl
cmpsb
cmc
jo
cmp
push
mov
pop
stos
icebp
stos
or
sarb
adc
std
out
sub
dec
imul
enter
cs
jae
push
int3
dec
movsb
sub
mov
pusha
mov
xchg
ret
insl
jnp
pop
push
lahf
adc
add
pop
xor
mov
repz
aaa
jp
push
je
or
out
sbb
or
lcall
insb
bound
adc
push
loop
sbb
sub
lds
cmp
add
inc
dec
mov
adc
mov
lcall
mov
das
and
mov
pop
in
adcb
test
sub
jmp
enter
movsb
scas
cld
sub
jno
pusha
push
mov
clc
repnz
aam
aaa
inc
cmp
bound
cli
out
mov
jg
mov
scas
pop
mov
cmpsl
jp
xchg
xchg
fs
adc
sub
or
jp
hlt
push
fcompl
or
mov
pop
pop
sysret
ds
mov
sbb
xchg
insl
loopne
inc
std
push
mov
adc
lea
fs
xor
xchg
xor
nop
pop
fnstcw
popa
inc
mov
aaa
cmp
scas
dec
push
adc
xor
pop
xchg
xchg
pop
sub
pop
loopne
mov
es
push
jmp
ds
jmp
cld
dec
lahf
decb
imul
test
pop
subb
or
adc
push
jge
sub
mov
push
lds
xchg
pop
xor
outsl
test
repz
dec
cmc
into
xchg
idivb
sbb
repnz
jl
sbb
jno
loopne
out
icebp
adc
repnz
shl
cld
pop
jb
hlt
or
test
cmp
ja
iret
mov
orb
xchg
fs
outsb
lret
sbb
popa
sub
loop
mov
idivl
jmp
mov
jmp
in
js
and
clc
mov
push
add
lods
fs
mov
push
daa
jno
inc
and
in
pop
inc
jno
stos
jae
mov
jmp
xor
scas
stos
and
int3
cli
sbb
fs
ret
or
stos
push
xor
jp
bound
rclb
and
nop
pop
cld
enter
cmp
orl
daa
fisttpl
ss
or
inc
or
call
arpl
cmp
lods
push
pop
sub
lahf
inc
mov
cmpsb
hlt
push
cmpsb
enter
es
cmp
aaa
add
and
add
and
push
cltd
push
jne
repnz
loope
mov
pop
movsl
adc
pop
mov
inc
pop
loopne
ljmp
stc
in
lcall
and
daa
stos
mov
mov
push
pusha
mov
pop
sbb
add
repnz
mov
sbb
into
lock
sub
icebp
cmc
fistps
cmc
cmp
add
sbb
movsl
cmp
les
out
add
push
out
add
dec
adc
jno
add
dec
inc
pop
xchg
push
lret
lods
adc
hlt
add
jno
hlt
inc
aam
pushf
nop
jge
adc
int3
add
sbb
aaa
and
pop
pop
adc
dec
int3
fwait
mov
in
mov
bndstx
jmp
dec
lods
sbb
pop
pop
testb
aas
sbb
jmp
cmp
iret
icebp
fisubs
mov
mov
or
lcall
lcall
pop
xor
xchg
jg
outsb
xlat
mov
aaa
mov
insb
pop
cmc
incb
cmp
mov
enter
loop
xchg
push
pop
jl
nop
rorl
dec
mov
inc
scas
stos
mov
pop
leave
push
push
mov
test
adc
mov
lahf
push
inc
xchg
cld
or
imul
sub
pop
jbe
push
rcll
push
mov
orb
add
ja
sub
push
ja
jb
icebp
int3
mov
cmpl
dec
inc
mov
adcl
and
int
jnp
mul
rcrb
jnp,pn
movsl
xchg
lds
jmp
cmp
cmp
ret
mov
aam
push
outsl
outsb
push
sub
jo
mull
ret
jbe
popa
incl
mov
popa
outsl
sub
inc
aad
int3
lret
stos
xor
test
xchg
std
adc
mov
and
pushf
dec
sti
jnp
sahf
and
cmp
sbb
repz
ficompl
push
pop
and
push
adc
lds
les
sub
xlat
lret
sbb
mov
xor
iret
sub
sub
lahf
sbb
mov
cmp
dec
jmp
sub
repnz
mov
in
cmp
sbb
inc
cmp
sbb
xor
and
iret
and
js
sbb
xlat
iret
adc
shlb
push
and
pop
cmp
in
punpckhbw
push
push
pop
cmc
rcll
nop
mov
clc
in
pop
xchg
cmpsl
sar
push
push
dec
outsb
push
inc
scas
push
push
dec
shr
dec
dec
sti
mov
fsubp
push
mov
adc
imul
lahf
jnp
aaa
adc
pusha
dec
mov
dec
fstpt
je
in
imul
negb
int
mov
arpl
in
push
scas
lcall
jno
into
ss
test
mov
gs
cmp
or
notb
xlat
jbe
je
inc
mov
sub
fwait
pop
jo
mov
mov
mov
pop
lods
jo
sbb
pushl
ret
aam
cltd
push
xor
inc
mov
inc
pop
adc
cwtl
lret
fs
adc
pop
xchg
inc
aas
adc
addr16
gs
cmp
push
shll
inc
xchg
cwtl
int
inc
jbe
aad
jle
jno
stc
out
loopne
mov
and
xchg
fistpll
push
movsb
lahf
les
leave
xchg
outsb
pop
mov
mov
jmp
mov
add
insb
add
clc
dec
gs
add
cmpsl
subb
call
lret
dec
jmp
les
pop
pop
xchg
cld
push
popf
dec
jns
sti
icebp
or
pop
and
push
push
mov
cmp
adc
sbb
sti
out
xchg
push
jne
mov
das
stos
aam
push
enter
add
push
mov
xlat
xor
sub
sub
jmp
in
lret
in
andl
push
jg
or
or
mov
addr16
data16
sub
jne
mov
sbb
mov
adc
adc
out
pusha
and
fsts
mov
xorb
pop
jne
bound
jle
in
adc
sbb
cmp
stos
mov
ja
and
fbld
in
cmp
push
addb
movaps
push
in
mov
cli
push
shlb
cmp
push
imul
cmp
mov
aam
dec
and
leave
mov
fimull
push
pusha
test
xchg
inc
imul
nop
mov
jnp
inc
mov
jp
add
mov
pop
push
lahf
push
fwait
pushf
fdivs
cmp
das
adc
test
mov
mov
jecxz
std
cs
add
out
pop
sub
faddl
loope
nop
int3
aas
pop
scas
dec
xlat
lret
call
clc
push
dec
mov
fists
sub
scas
jnp
jl
dec
pusha
mov
inc
lahf
fs
loopne
xor
inc
cmpsl
push
in
daa
mov
and
jo
xchg
cmpsb
fimuls
scas
push
int
push
sub
pushl
bound
cmpb
fcompl
hlt
xor
push
mov
pop
jmp
lea
pusha
lahf
inc
push
mov
jno
dec
ret
add
test
les
stc
ljmp
add
mov
popa
call
lea
and
cmpsl
dec
push
outsb
mov
aaa
dec
popa
sub
jp
stos
jo
xchg
or
pop
and
fldt
mov
mov
pop
outsb
push
add
jl
push
and
xlat
hlt
in
movsl
jl
lret
pusha
in
ds
mov
enter
out
and
rol
mov
int
adc
daa
fstl
jmp
scas
jb
test
add
pop
push
adc
mov
shr
mov
repnz
sarb
xor
mov
ljmp
pop
lods
sbb
das
lret
jno
aaa
cmp
xchg
dec
inc
pusha
rcrb
push
aaa
stos
fwait
push
aaa
pop
mov
pusha
xorb
ret
call
ret
inc
inc
xor
sahf
jp
jl
jge
int3
cmp
xor
pop
xor
mov
ljmp
xor
xor
call
fs
int3
xor
pop
adc
dec
add
es
push
mov
insl
test
inc
mov
scas
dec
int
iret
int3
pop
inc
push
in
or
scas
lahf
push
loop
jae
repz
insl
das
pop
cltd
adc
sbbl
pop
scas
das
int3
in
hlt
scas
out
faddl
sbb
adc
mov
push
cmpsl
xchg
dec
mov
cmp
cmc
sbb
mov
mov
rcrb
jnp
and
fwait
mov
scas
mov
xchg
test
cli
adc
sub
aad
jge
xchg
mov
adc
mov
sub
rol
repz
lds
cmp
pop
xor
pop
pusha
leave
and
mov
lcall
xor
ljmp
fidivrl
fnsave
or
cltd
dec
negl
push
add
mov
cmp
out
dec
and
lahf
and
out
mov
fsub
mov
sub
call
jno
sbb
pop
xchg
pop
pop
insb
inc
movsl
mull
jl
stos
jmp
xchg
out
mov
jne
cmovae
sahf
pop
int3
xchg
inc
cltd
xor
dec
ljmp
mov
neg
xor
cmpsb
lahf
xor
jp
xchg
lods
push
sub
stos
push
pop
cld
jb
ljmp
outsb
dec
inc
and
dec
int
cmp
mov
stc
imul
leave
mov
aam
mov
cmp
lahf
std
lret
xchg
inc
in
xor
push
gs
mov
and
bound
cmp
mov
dec
jno
movaps
cli
and
out
pop
xchg
cmp
test
outsw
in
jecxz
mov
sub
aaa
je
xchg
rorl
testl
es
mov
adc
sbb
dec
pop
add
xlat
ret
jg
jmp
loope
sti
das
mov
mov
jbe
mov
add
sbb
stos
jl
jae
inc
pop
and
mov
lds
pop
and
sbb
sahf
inc
repz
sahf
cmp
push
dec
and
xchg
dec
push
cs
adc
and
mov
stc
add
inc
mov
sti
test
les
mov
mov
pop
pop
inc
std
xor
stos
adc
das
cli
filds
dec
cmp
and
cmp
dec
out
out
sti
jg
cli
xor
xchg
sub
mov
out
cwtl
das
push
cwtl
jo
xchg
cmp
adc
adc
jg
stos
in
push
jmp
imul
imul
mov
add
imul
ja
negl
inc
mov
sarl
or
sbb
out
js
ja
lea
int3
clc
stc
in
adc
jecxz
push
in
dec
iret
fadds
xchg
lret
xchg
lea
movsb
sbb
xor
dec
xchg
cmp
aam
stos
sar
xor
out
out
gs
add
out
push
inc
repnz
inc
xchg
lods
add
pop
adc
stc
int3
stc
xchg
push
sbb
fcomp
sub
adc
push
dec
dec
outsb
and
sbb
addl
and
orb
dec
adc
cwtl
cld
pop
jmp
stc
into
enter
into
push
les
cwtl
imul
cmpsl
fisubrs
sub
push
mov
mov
cmp
xor
lods
shll
stos
test
lahf
lea
fsubrp
jo
add
int3
pop
mov
fwait
cwtl
iret
mov
dec
xorb
push
loop
cmp
pop
aas
xor
jge
daa
arpl
mov
xor
psllw
mov
mov
sub
pop
jae
sub
iret
cltd
js
sbb
sbb
jg
ss
pop
mov
ljmp
push
ds
popa
adc
shll
adc
fldl
lret
mov
lea
inc
add
out
lea
lock
rep
fcmovne
add
mov
or
dec
push
lods
jp
jae
ror
jecxz
pop
fs
push
fwait
lock
jnp
add
jg
push
add
scas
dec
add
add
pop
push
popf
fldenv
pop
fsubrp
cmp
shrl
je
mov
rcll
ficoms
pop
fildll
adc
adc
xchg
pop
ret
arpl
enter
cmp
movsl
lahf
mov
jmp
fmull
loope
dec
sbb
sti
clc
lahf
push
mov
inc
pop
jmp
mov
mov
das
dec
loopne
and
in
sbb
sahf
xchg
pushf
cmp
xor
jge
aas
sbb
hlt
adc
adc
sarb
int
push
jmp
icebp
scas
mov
and
pop
sub
in
loope
lcall
add
mov
test
jne
aas
adc
cmp
call
faddl
jne
or
lea
mov
fwait
mov
aad
dec
fs
inc
bound
push
push
dec
mov
arpl
sbb
or
adc
andl
mov
add
jb
les
clc
inc
pop
cmp
mov
dec
mov
pop
pop
cmp
mov
sbb
iret
packsswb
mov
sbb
mov
out
imul
push
fcmovnbe
push
fbstp
sub
into
lock
out
sub
in
adcl
mov
or
test
data16
clc
xchg
cmp
fidivrl
add
scas
jmp
cmc
cmpsl
cs
shrl
and
imul
lods
add
adc
xor
inc
mov
jb
push
mov
es
jle
mov
pop
daa
rorl
imul
jns
and
fdivrs
add
test
test
mov
ja
ror
sub
sbb
lock
or
int3
movsl
sti
and
dec
adc
outsb
jne
or
mov
int
jns
mov
cmp
adc
dec
xor
push
test
movsl
mov
mov
mov
jg
push
mov
xor
icebp
or
lcall
xor
xchg
sub
push
inc
sbb
test
add
mov
mov
push
outsl
mov
cltd
les
out
jbe
insb
clc
inc
dec
push
xchg
fiaddl
or
icebp
dec
ret
inc
imul
cmp
mov
pop
mov
movsl
inc
xlat
mov
repz
jo
fadds
adc
cmc
or
jns
in
lods
lret
pusha
mov
push
inc
icebp
cmp
repz
sub
out
in
lcall
or
jne
shrl
lahf
pop
dec
int
popa
pop
in
pop
data16
mov
test
jo
inc
imul
mov
sub
sub
xchg
pop
insb
imul
icebp
fisttpl
add
lea
add
outsl
out
cmpsb
pop
sub
out
nop
ret
push
push
loope
fcmovnb
aas
jnp
in
sub
pusha
fldt
mov
xchg
mov
fcmovne
shrl
and
pusha
and
notb
mov
iret
in
pop
jp
out
fisttpl
fs
les
into
mov
inc
cmp
xchg
sub
dec
xchg
cwtl
jmp
sti
test
push
or
xor
outsl
imul
fcoml
dec
mov
pop
into
outsb
jae
push
lds
add
dec
pushf
hlt
push
add
aad
orl
pop
lahf
sub
out
sarb
inc
stc
loope
mov
ret
jl
xchg
jle
pop
data16
dec
inc
lds
push
push
push
push
mov
and
adc
clc
jns
push
mov
pop
jno
xor
das
scas
rclb
sbb
add
outsl
je
test
jb
mov
cmp
sbb
pop
in
fistl
pop
cwtl
xchg
mov
add
testb
xor
sbb
shlb
out
jo
sub
call
imul
lfs
add
dec
push
and
mov
adc
push
sub
mov
jmp
cmp
decb
xchg
adc
in
mov
ljmp
out
or
and
cld
mov
push
dec
lds
lds
mov
jbe
pop
push
sti
wbinvd
outsb
subl
jmp
push
xor
je
mov
in
jmp
mov
mov
xchg
js
sub
jne
das
or
jmp
mov
xchg
iret
das
jne
imul
cmp
aad
aad
xor
jge
out
lds
mov
imul
inc
les
inc
sub
add
pop
adc
lods
cmp
je
adc
mov
aas
pop
ds
mov
and
push
repnz
lods
fwait
dec
xchg
xlat
adc
nop
addl
shll
lret
cmc
sub
pop
xor
sbb
sub
push
inc
or
mov
stc
jle
mov
insb
xchg
mov
ret
sbb
push
lret
mov
imul
xchg
inc
pop
cmc
xor
adc
add
pop
mov
stc
sub
adc
loope
add
mov
inc
loope
jmp
out
or
pusha
loopne
inc
add
lret
pop
xor
xchg
pusha
xlat
iret
sub
cmpb
mov
fwait
cltd
leave
mov
sbb
xchg
fimuls
or
in
insb
nop
outsl
jae
repnz
test
mov
sub
xchg
sti
jne
in
mov
add
or
sub
int3
daa
lea
and
cmpsb
gs
xchg
cwtl
insl
dec
cmp
clc
mov
push
sarb
ds
dec
lods
fcomp
fisttpll
lret
pop
hlt
lock
loop
mov
mov
sub
adc
xor
pop
lcall
in
jo
lods
ror
sbb
xchg
in
ljmp
mov
stos
mov
dec
ljmp
test
xchg
sbb
or
addr16
adc
push
dec
aas
mov
test
test
xchg
adc
daa
roll
xchg
xor
or
int3
inc
sahf
jl
idivl
mov
fdivr
inc
add
lods
sahf
aad
and
sub
mov
dec
jp
repz
cmp
sarl
fimull
fisubrl
js
out
in
test
daa
mov
stos
pcmpeqb
movsb
cmpsb
mov
icebp
and
mov
lcall
inc
jne
testb
rorl
or
movsb
lahf
mov
lea
fidivs
cli
out
sahf
adc
out
loopne
add
lods
js
fcmovnb
mov
and
movsb
enter
cmp
mov
dec
data16
call
dec
mov
mov
shrb
repz
lods
out
ds
push
mov
aam
mov
daa
ljmp
push
sub
mov
test
int
or
lock
xor
mov
pop
push
dec
mov
shrb
mov
fs
jns
mov
and
mov
cltd
push
sub
or
cmp
cmpsb
pop
or
jmp
fldenv
xor
cmp
flds
cli
cmc
xchg
dec
lock
scas
stc
lods
fs
aaa
popa
fdiv
dec
sarl
andl
push
and
out
mov
movsl
add
xchg
pop
lods
into
shr
lock
arpl
and
cmpb
sbb
rclb
lcall
and
scas
mull
and
cmp
cmp
lods
cwtl
mov
mov
pop
lret
xor
fwait
andl
sub
sub
ja
xchg
imul
and
dec
testl
fisubl
sahf
adc
cmp
sbb
sti
enter
and
into
jg
pop
add
or
lock
xor
sub
movsl
add
mov
mov
xchg
ds
lods
scas
call
loopne
ja
stos
imul
cmpsb
mov
pop
pop
lock
ss
mov
sbb
push
xorb
testb
mov
ret
pop
push
or
mov
or
shlb
or
inc
jge
faddl
push
lret
cwtl
xchg
sub
jns
movsl
add
adc
xchg
or
push
push
outsl
es
jl
loopne
addb
sbb
clc
cltd
fcmovne
inc
adc
mov
movsb
lahf
xor
push
ror
ret
jp
push
xlat
lcall
or
jns
out
scas
inc
daa
push
lahf
in
insl
in
jl
mov
cwtl
stos
add
push
cmp
or
aam
push
icebp
aam
mov
jae
mov
imul
cmp
pop
adc
jae
sbb
cmp
xor
adc
scas
xchg
fstpl
xchg
cwtl
adc
mov
aas
sbb
jge
cmpb
inc
hlt
dec
test
popf
inc
and
fcmove
mov
stos
push
loope
jb
aas
add
popf
lret
repz
jnp
adc
fidivrs
leave
out
or
dec
jg
sbb
ss
add
push
push
sbb
pop
es
das
inc
mov
add
hlt
or
lret
adc
mov
push
lret
pop
stc
jl
stos
aam
dec
adc
bound
push
out
stos
adc
in
gs
cwtl
mov
pop
aaa
mov
or
cmp
jno
popf
stos
mov
int
popa
mov
aam
sahf
arpl
in
mov
into
das
lahf
adc
scas
cltd
insl
adc
popf
jmp
push
iret
adc
rcrl
rclb
mov
outsl
popa
test
sub
mov
jbe
or
dec
nop
xchg
push
int
or
rcll
movsl
cmp
arpl
addr16
cltd
notl
scas
cs
addl
push
call
insl
or
xor
stos
daa
xchg
xchg
js
ja
or
add
xchg
xor
add
jg
int
fcmovb
dec
pushf
add
adc
add
adc
aas
out
out
mov
xchg
mov
in
or
lods
xchg
sti
mov
scas
sbb
pop
sbb
pop
daa
ljmp
insl
lcall
and
jne
ja
inc
je
loope
jp
enter
add
cs
mov
pop
inc
adc
test
fwait
jge
xor
sti
sbb
or
jae
jle
pushf
add
push
mov
mov
mov
mov
ss
clc
dec
cmp
icebp
leave
insb
jle
stos
nop
and
mov
xor
js
and
cmp
aam
sbb
sbb
mov
int
jmp
xchg
lea
and
push
cld
in
scas
adc
inc
insl
fsubr
push
leave
jl
push
mov
inc
dec
repz
sbb
push
pop
add
sub
xchg
sti
jne
cmp
pop
stc
shr
mov
xor
in
mov
das
jg
mov
mov
test
test
popf
adc
movsl
cmp
loop
and
xchg
in
jns
cmc
cmpsb
fldt
in
ss
fdivrl
jne
push
addr16
cmp
pop
or
fwait
adc
inc
mov
xchg
adc
sub
std
test
fcoml
add
cmp
lret
sbb
lds
push
sbb
or
push
and
aad
mov
js
cs
mov
xchg
pop
andb
out
sti
daa
xlat
push
push
or
stos
shll
lret
hlt
mov
in
sbb
xorb
xchg
enter
add
inc
cld
std
arpl
pop
lret
repz
loopne
test
out
aad
sub
ret
cwtl
aas
mov
mov
es
mov
insb
icebp
imul
push
inc
sub
inc
mov
push
push
and
clc
repz
sahf
in
jns
out
loopne
ret
lret
jle
and
xchg
pop
scas
or
and
add
orb
push
dec
sahf
insb
sbb
push
add
subb
inc
mov
push
sbb
mov
mov
xchg
jg
push
rclb
push
stos
cwtl
sbb
push
fadd
inc
pop
hlt
sbbl
dec
mov
mov
insl
pop
addr16
cli
fdivl
push
test
xlat
pop
adc
fsts
cli
sti
sbb
mov
and
jle
outsb
cli
cmpsb
mov
xchg
cmp
in
iret
adc
adc
jns
maskmovq
negl
test
push
add
pop
ret
inc
fdivl
in
mov
leave
loope
xchg
fisttpl
push
xchg
xchg
inc
repz
fdivrl
xchg
fwait
movsl
addl
adc
mov
imul
out
mov
sbb
xchg
fcomip
stc
dec
dec
test
aas
arpl
push
push
push
mov
repz
ds
lds
jmp
and
call
jns
repnz
mov
cld
cld
loope
loope
and
sbb
jne
add
inc
inc
sbbb
dec
imul
loop
sbb
in
std
lea
sub
mov
nop
shrb
mov
js
in
loope
es
out
dec
sub
movsb
or
dec
pop
insl
into
push
inc
jo
sub
add
aas
test
or
mov
hlt
int
and
int3
add
and
sbb
jb
arpl
add
fs
mov
cmp
push
lock
push
stos
outsb
in
inc
popf
or
hlt
imul
test
xchg
insb
iret
bound
mov
adc
fsubs
xlat
ss
dec
call
das
adc
out
and
dec
cmp
aam
xor
popa
int
inc
push
sar
jo
outsb
dec
mov
cltd
sahf
add
add
cltd
mov
lcall
jge
repz
aad
in
sarb
into
cmp
sub
xchg
or
sahf
ret
or
in
ret
cmp
jne
xor
stc
call
jle
push
ljmp
push
aam
js
mov
iret
dec
outsb
loop
sub
call
jecxz
or
jo
stos
addb
xchg
push
arpl
dec
into
sbb
fwait
add
xchg
imul
dec
rorl
or
enter
jns
roll
test
sub
pusha
sti
sbb
or
lds
lea
lods
push
mov
jmp
sub
push
repnz
fs
lsl
jl
jbe
xchg
push
mov
lret
stos
scas
sbb
xchg
mov
sbb
pop
sub
and
sbb
fs
mov
xchg
pop
mov
rcr
pop
das
fldt
cmpsb
dec
movsb
add
scas
stos
and
push
ss
aad
rep
mov
mov
mov
pop
add
or
dec
inc
idiv
cwtl
hlt
pop
xor
test
adc
rol
sub
popf
les
shl
rcr
push
jge
fwait
js
mov
insl
jnp
rcl
aam
hlt
nop
dec
cmpsl
jge
les
pop
ljmp
cmpsl
xchg
notl
pop
and
es
outsl
add
or
xchg
popf
mull
pop
mov
psllq
ss
iret
scas
ja
fcmovb
mov
sbb
lcall
sbb
dec
inc
leave
push
int
lcall
testl
jl
inc
ss
in
ret
imul
test
sar
jle
xchg
sahf
and
jg
cmpsl
into
out
rclb
adc
mov
adc
jle
push
repnz
dec
add
fcmovnu
jmp
lea
pushf
push
aas
jecxz
test
cli
leave
jge
xchg
xchg
pushf
movl
bnd
mov
insl
jp
adcb
xchg
sbb
mov
popa
lods
in
iret
loopne
mov
dec
mov
cmp
fmulp
loopne
cmp
and
fidivs
cwtl
push
mov
addr16
push
add
push
sbb
sbb
out
adc
mov
or
ret
out
arpl
pop
sub
sbb
add
xchg
jmp
pushf
ds
dec
rol
outsl
in
in
xor
in
aad
lods
mov
dec
cltd
scas
in
je
add
jge
pop
xchg
mov
insb
fisubrs
xor
xchg
dec
outsl
adc
push
mov
mov
insb
scas
mov
iret
pop
and
repnz
jge
push
dec
push
out
shr
pushf
pop
adc
cmpsl
cmp
inc
cltd
sbb
pop
fwait
cli
cwtl
fimuls
jno
and
cmp
dec
jbe
or
mov
xor
mov
push
mov
scas
stc
out
gs
cmp
add
inc
mov
inc
xchg
mov
inc
dec
or
scas
xor
aad
and
test
loope
adc
cmpsl
push
fldenv
mov
lea
ljmp
cltd
xor
ret
sbbl
mov
add
mov
out
dec
pop
xchg
xor
adc
lret
xlat
arpl
call
adc
push
xchg
std
and
test
sbb
stc
jno
dec
scas
addr16
jmp
lea
arpl
sub
xchg
iret
sahf
scas
dec
aas
rcll
jl
loop
xchg
mov
loop
pushl
sub
add
mov
jg
daa
mov
lcall
icebp
lods
jp
or
stos
mov
xorl
xchg
jno
pop
popa
adc
rclb
or
es
lret
test
out
adc
in
neg
or
out
mov
lahf
sarl
jmp
jl
mov
add
addr16
fwait
adc
xchg
xchg
jmp
mov
movsb
mov
iret
add
mov
sub
lock
sbb
sub
push
mov
inc
adc
arpl
mov
psubusb
pop
incb
jno
andl
enter
cmpb
mov
std
divl
popa
test
mov
pop
push
imul
xlat
popa
or
jl
shll
jl
jb
push
pop
and
mov
xchg
invd
pop
scas
ret
sbb
scas
push
sub
jns
lods
mov
icebp
outsb
in
insb
data16
ret
lods
push
xor
push
leave
sub
push
or
ljmp
mov
sti
pop
cmpl
xor
xchg
push
jl
and
or
sbb
pushw
sti
xchg
enter
in
ljmp
addr16
mov
pop
cmp
inc
scas
sbb
jb
scas
std
popa
jmp
loope
pop
push
mov
or
clc
mov
mov
push
in
push
in
pop
cmp
xchg
cmc
push
pop
pop
jg
push
push
dec
cmp
js
aam
jp
dec
imul
jns
push
mov
xor
inc
pop
push
hlt
jge
sarl
jp
or
or
pop
aad
jge
mov
cmp
inc
push
or
xor
adc
out
jmp
ret
mov
mov
je
sti
pop
mov
pop
sub
xor
dec
out
push
add
jb
aaa
push
repnz
clc
fstp
stc
adc
xchg
aam
stos
and
mov
fldt
testb
lods
mov
sub
divb
inc
out
push
daa
sub
mov
dec
jo
sub
fidivl
daa
shr
add
and
pop
les
jecxz
insl
mov
push
mov
lcall
sub
jnp
mov
ja
das
aam
push
and
bnd
push
xor
out
loope
jmp
cmp
insl
pop
jecxz
adc
push
mov
data16
adc
shll
imul
les
push
sbb
xor
adc
add
sbb
mov
and
mov
add
js
dec
push
mov
add
lahf
imul
sub
jge
lahf
fists
adc
fwait
jecxz
mov
mov
sub
or
andb
stc
loop
mov
jmp
push
leave
and
les
and
das
call
ds
out
fbld
js
dec
test
lcall
mov
arpl
mov
xchg
jmp
add
rcr
daa
or
shl
data16
and
test
movsb
push
sti
aas
add
and
data16
flds
push
xlat
push
jle
rcr
xchg
movsb
or
pop
mov
xchg
cmp
shr
sub
out
das
and
jp,pn
cmp
mov
adc
dec
js
cmpsb
or
mov
xchg
pop
cwtl
pop
scas
sub
xchg
sbb
test
cli
das
and
fistps
mov
xchg
lret
insb
sbb
lret
jp
daa
fdivrl
jmp
in
sub
xchg
cmp
xor
inc
in
rcll
inc
lret
fucomp
or
cmc
mov
lahf
jne
mov
stc
jle
cmp
test
aam
nop
fstpl
and
mov
pop
inc
and
xchg
lods
or
test
pop
add
jb
sbb
add
clc
cmp
or
mov
push
rclb
xchg
in
dec
fdivr
inc
pop
test
mov
into
jmp
stc
in
jge
push
cld
mov
pop
cmp
jno
xor
lock
mov
push
inc
stos
dec
subl
mov
dec
push
mov
add
jl
shll
hlt
adc
stc
fsubl
aad
ja
lret
bound
xchg
mov
sub
subb
ljmp
push
mulb
mov
add
fs
fisubl
scas
out
clc
mov
xchg
sbb
into
xor
add
stos
es
cli
inc
jecxz
imul
into
and
mov
ljmp
xchg
roll
fistpll
stos
mov
clc
xor
imul
cmp
sbb
shl
adcl
sbb
push
fildll
push
mov
scas
fldenv
sub
adc
insl
imul
xchg
pop
ss
and
push
mov
pusha
cld
inc
xchg
cwtl
push
mov
and
xor
test
gs
mov
lcall
in
fstpl
lcall
cld
jmp
neg
mov
cmp
repnz
icebp
lods
in
mov
mov
bound
lret
jl
sub
push
xchg
pop
or
push
mov
aas
mov
bnd
push
adc
jmp
sbb
aam
dec
popl
movl
stc
test
push
adcl
jge
adc
sarb
enter
lds
xor
sti
popa
arpl
add
push
xchg
test
mov
test
jge
aaa
sbb
cmp
and
aaa
repnz
ja
or
push
and
shrb
sbb
sbb
inc
fdivs
xor
inc
push
push
fdivs
fsub
mov
sub
cmp
mov
nop
je
loope
fistl
xor
lock
xor
lods
fdivrp
es
pop
imul
xor
or
testl
cwtl
std
dec
in
out
daa
mov
sbb
aas
xchg
xchg
stos
loop
jle
mov
sub
dec
cmp
mov
mov
mov
sbb
inc
push
jb
lock
daa
adc
iret
sbb
add
andb
fdivrl
cmp
add
ja
push
popa
xchg
pop
cld
cmp
sub
idiv
inc
js
fucomi
das
mov
sub
cmp
add
mov
cld
and
stos
mov
adc
mov
jecxz
test
jo
xchg
inc
mov
in
popf
mov
add
lahf
in
cltd
in
sti
sub
jmp
add
xor
movsl
mov
and
inc
jnp
jo
jbe
xchg
dec
sbb
test
dec
iret
mov
out
ret
add
mov
adc
adc
or
out
lret
in
or
ljmp
mov
jmp
push
iret
cmp
inc
jo
dec
not
shl
mov
in
mov
jp
cs
addr16
pop
das
addl
jg
jp
xor
and
sub
int
fimuls
movsl
inc
push
imul
arpl
ror
dec
adc
cs
mov
cmp
cmc
imul
mov
out
lret
or
jmp
out
loop
jp
ficoms
movsl
jbe
andb
repnz
push
and
aaa
cmc
fnsave
shr
jle
insl
jno
jge
data16
dec
push
int
mov
ds
and
nop
push
roll
pop
pop
or
icebp
jbe
in
sbb
aaa
sub
jmp
jle
or
loop
js
fldenv
mov
fcompl
icebp
mov
mov
sub
shll
inc
andb
cld
dec
rolb
popf
xor
shl
pusha
iret
adc
jns
mov
sti
lcall
pop
sub
or
dec
std
aad
sbb
add
scas
scas
inc
pop
pop
fsts
mov
in
xor
jg
or
xchg
clc
sbb
andb
adc
inc
in
insb
or
cmp
and
fistpl
dec
adc
call
aam
jbe
setno
cltd
stos
xchg
cmpsb
loop
sub
add
cmp
jbe,pt
fldenv
das
ds
jnp
fimull
xor
adc
loopne
out
pop
das
es
mov
into
inc
js
in
push
adcl
shr
ljmp
mov
and
push
pop
sub
and
sub
loope
hlt
fnstsw
adc
add
ds
ss
mov
repnz
push
pop
mov
sbb
or
lahf
shrl
sub
mov
inc
fstps
clc
ljmp
sbb
add
pushf
mov
fdivr
ret
xchg
sahf
xchg
frstor
fnstenv
mov
mov
pop
leave
mov
push
sti
inc
cmp
and
jmp
out
lock
mov
gs
popa
lea
adc
sarl
jae
test
xchg
xchg
xor
divb
bound
fwait
dec
outsl
or
stc
data16
cmp
push
xchg
xchg
adc
inc
neg
ret
push
out
add
pop
lret
icebp
je
or
or
mov
xor
dec
icebp
or
popl
fs
lea
outsb
cld
xor
fnsetpm(287
pop
pop
and
adc
insl
xchg
fiaddl
dec
cltd
popf
fsubr
shl
xchg
out
xlat
adc
in
mov
inc
cmpsb
and
pop
mov
jle
aas
cld
int3
mov
xor
xor
or
shrl
lret
lds
fstps
int3
ss
or
enter
dec
mov
adc
jns
pop
push
lea
sarl
pushf
pop
cmpsb
ds
in
adc
inc
adc
fs
out
xchg
xchg
mov
fsubr
scas
xchg
jge
bound
stos
push
sbb
inc
adc
lods
or
xor
scas
cs
dec
stos
lahf
iret
sarb
mov
inc
stc
inc
in
outsb
xorb
and
lret
js
jl
loop
mov
aaa
cs
sub
aas
pop
outsl
mov
lret
jns
out
adc
mov
jl
push
or
lret
loope
push
or
mov
sbb
fwait
mov
cld
addr16
lock
shlb
lcall
xchg
xor
les
xchg
sbb
sarb
in
mov
sbb
mov
shrb
xor
sub
push
ret
sbb
xor
push
adc
inc
subl
xchg
dec
mov
out
inc
scas
dec
hlt
xchg
mov
mov
push
mov
test
lahf
sub
and
cmp
int3
in
or
notb
mov
addr16
test
adc
cli
std
stc
insl
lea
jns
mov
push
mull
adc
rcrb
push
adc
add
imul
testb
inc
inc
adc
and
bound
bound
sub
mov
fimull
jne
fsubl
xchg
mov
lret
add
js
in
testl
mov
fadd
movsl
inc
fbstp
scas
pop
adc
movsl
sbb
adcb
push
outsl
mov
leave
sbb
sbbb
cmc
xchg
loopne
repnz
mov
fisubrs
fdivrl
pop
or
jg
repz
push
fsubrl
dec
push
movsb
jne
popf
movsb
icebp
lock
inc
addr16
out
popf
cli
jge
ss
mov
xlat
stos
cwtl
xchg
enter
inc
or
sub
xchg
sahf
pop
mov
xchg
mov
adc
stos
xor
dec
sar
pop
mov
sbbb
push
pushf
cmc
cli
in
pushf
outsb
jns
mov
sti
out
fmuls
mov
jb
and
std
xchg
sbb
je
out
adc
mov
lcall
stos
sbbl
roll
jp
xor
or
or
push
pop
sub
xchg
aaa
cmp
mov
notl
adc
add
pop
or
lea
jae
xchg
nop
in
push
pop
adc
jg
xor
ds
mov
sarl
popa
xor
push
push
pop
sub
add
mov
push
mov
mov
clc
jge
sbb
pusha
out
fwait
daa
std
jp
cld
aas
lds
mov
jl
inc
xor
jno
pusha
jge
or
sub
fcomi
std
pushf
jnp
lods
pusha
aam
imulb
fcomip
xchg
cmp
or
cmc
xor
xor
cmp
push
lcall
sahf
movsb
add
movsb
aad
xlat
out
xchg
xchg
bound
into
ror
sahf
xor
call
mov
xor
or
test
sub
lock
jmp
cwtl
cs
jg
imul
dec
stos
mov
dec
hlt
mov
dec
mov
mov
inc
popf
add
and
xchg
int
js
insb
subb
mov
scas
stos
ror
out
push
test
testb
xor
test
daa
lahf
lret
lds
or
adc
jmp
lock
and
ds
xchg
cmp
popf
mov
lahf
in
lea
popa
xor
sbb
shrb
rcrb
fsubs
outsl
push
ds
lds
inc
sbb
push
push
inc
cmc
add
and
cld
leave
mov
test
mov
xchg
mov
scas
mov
push
cmp
jge
daa
jae
sub
and
loop
or
cmc
push
cmp
xor
pop
xor
incl
push
or
dec
dec
or
dec
cmpsl
test
outsl
stos
sbbb
scas
or
mov
xor
xchg
mov
flds
mov
movmskps
lahf
lea
mov
jl
mov
mov
aad
and
fistpl
adc
scas
sbb
ret
movsl
mov
adc
sub
push
jno
aas
or
inc
push
fmull
xor
cmp
fwait
ljmp
arpl
dec
jl
dec
mov
pusha
xor
mov
mov
aam
push
fistpl
xor
lret
jecxz
push
fmull
outsb
dec
xchg
inc
sbb
jbe
aam
inc
mov
je
adc
cs
mov
mov
add
out
push
jno
sbb
dec
xor
bound
mov
and
jg
movsb
xlat
jnp
mov
mov
xor
and
mov
mov
push
fsubs
mov
pushf
jno
pop
orb
notl
cli
push
or
and
aad
ljmp
push
xchg
and
mov
xor
pop
add
mov
xchg
pop
inc
and
adc
push
add
es
xchg
pop
fsubs
add
pusha
inc
mov
jns
push
sti
jo
outsb
ret
data16
mov
loopne
jge
movsb
pushl
test
out
rcrl
movsb
jp
aas
std
adcl
arpl
in
push
das
insl
andb
in
es
adc
pop
aaa
xor
sub
int
jl
push
push
pop
inc
and
push
pop
mov
sahf
xchg
xchg
je
rol
xchg
dec
scas
adc
or
mov
push
pusha
xor
rorl
pop
pushf
mov
and
incl
pop
sahf
lea
pop
xchg
std
dec
sub
js
iret
jbe
add
jno
inc
and
sbb
push
dec
or
aam
push
sub
lods
shrb
sub
in
test
inc
dec
xchg
rclb
aas
ret
sbbl
jp
sbb
inc
cmpsb
call
cmp
pop
shll
sbb
adc
push
or
lret
mov
push
xor
mov
stos
lock
inc
pusha
xchg
mov
add
cld
pop
sahf
or
repnz
add
add
out
push
pop
jae
daa
fsts
add
cmp
cli
or
ror
xor
out
mov
mov
mov
inc
inc
in
pusha
mov
das
notb
nop
setge
shl
jmp
rcl
sbb
sub
cmp
mov
add
imulb
in
xchg
notl
out
and
inc
cli
dec
cwtl
popf
incl
jp
iret
pop
jnp
jbe
btr
pop
loope
push
pop
mov
push
xlat
aas
scas
rcrl
dec
lds
adc
jge
xor
add
mov
cmpsb
sbb
lahf
mov
mov
movsl
bound
adc
sahf
repnz
enter
out
and
adc
pop
mov
xchg
sub
or
ss
bound
push
or
insb
push
adc
xor
insl
and
cld
test
test
lock
pop
movsl
into
inc
or
mov
aam
nop
mov
jg
or
pop
lods
icebp
pop
mov
xchg
int
and
xlat
mov
les
bound
sbb
inc
in
xor
add
inc
out
iret
lods
inc
mov
sub
push
pop
sub
or
cltd
nop
sub
inc
mov
frstor
dec
mov
in
repnz
sub
dec
jbe
pop
mov
xor
loop
push
mov
stos
ds
divl
push
cltd
filds
inc
lahf
mov
call
dec
mov
push
jmp
lods
push
or
insb
idivb
mov
ret
aas
push
jle
mov
clc
jecxz
in
cltd
cmpsl
jl
xchg
das
jle
xor
test
push
les
and
test
pop
rorl
stc
clc
in
nop
adc
clc
push
icebp
stos
stos
inc
out
data16
loopne
daa
ret
mov
dec
jne
mov
cld
into
je
or
cld
cmp
ds
rol
loopne
mov
iret
bound
add
pop
inc
out
cmp
lahf
inc
inc
data16
or
and
out
cli
pop
inc
mov
adc
or
pop
jae
xchg
aam
jbe
mov
data16
icebp
xlat
push
sbb
insb
xchg
xor
add
or
mov
aaa
adc
xorb
mov
adc
loope
les
push
lret
movsl
repz
adc
inc
pop
jp
out
inc
and
aaa
orl
roll
int3
adc
xchg
sub
dec
pusha
adc
jbe
mov
js
iret
rcrb
push
stos
cmc
lods
repz
lret
adc
fldcw
cmpsl
jge
dec
divl
and
jecxz
inc
dec
inc
mov
imul
mov
cwtl
mov
sahf
push
xor
cmp
loope
cmpl
pushf
insl
mov
stos
test
jl
pop
pop
mov
pop
mov
jl
sti
out
pop
xlat
gs
test
movsb
push
lods
xor
iret
mov
sub
sbb
rol
scas
dec
rol
loopne
add
xor
je
mov
fimuls
add
sahf
jno
test
ret
push
dec
in
jmp
cmpsb
ja
jmp
pop
xlat
jg
mov
sub
jge
loope
inc
iret
inc
sbbl
and
pop
jns
fdivp
out
xchg
lahf
enter
popf
mov
add
out
cltd
dec
push
mov
popf
jno
cmp
in
adc
icebp
out
push
arpl
sahf
in
lcall
push
popf
inc
fistps
add
cli
mov
sarl
sub
push
aam
pop
andb
mov
andl
rcl
push
pop
lcall
ret
push
ss
pop
nop
pusha
lcall
mov
xchg
mov
dec
mov
and
sbb
fwait
mov
stc
hlt
sbb
sub
lret
dec
xor
hlt
fsubrl
stos
mov
loope
sub
adc
ret
stc
mov
jmp
pusha
loope
mov
gs
rcrb
inc
lret
adc
xlat
rcll
dec
clc
std
push
push
jmp
sti
push
gs
jnp
push
shll
jns
lret
jg
ret
cli
inc
pop
sub
cli
push
xchg
pushf
mov
cmp
mov
dec
fcoml
cmp
mov
sbb
out
les
mov
jecxz
push
lcall
ja
shrl
push
mull
fistpll
fidivs
cmc
and
lcall
sub
xor
add
inc
outsl
inc
sub
pop
les
adc
pushf
mov
fdiv
xchg
pushf
sub
enter
cli
add
adc
inc
mov
clc
lods
adc
sbb
repz
adc
or
add
movsb
inc
mov
sar
jno
decb
and
cmp
jno
mov
mov
addr16
jle
add
jge
jo
ljmp
inc
adc
shll
or
clc
push
jne
mov
cmp
jns
fsubl
mov
xchg
setbe
mov
repnz
mov
aam
push
xor
stc
xor
pop
cltd
imul
jmp
popa
sbb
adc
cmpsl
mov
mov
int
cmp
nop
add
xor
idivl
xor
subb
mov
adc
jne
neg
pop
lds
push
into
iret
cmp
mov
or
cltd
idivl
movsl
mov
aam
ds
mov
sbb
in
push
jecxz
mov
fs
push
js
push
in
mov
pop
movsl
test
int3
addr16
pop
xchg
mov
xor
out
mov
sub
push
sbb
inc
or
iret
push
stos
aad
mov
cmp
in
js
mov
and
insl
and
lock
insb
decb
push
and
jbe
fldenv
mov
popa
addl
sti
ja
jb
fwait
cli
js
repnz
mov
mov
pop
imul
xchg
lods
movsb
in
mov
push
jb
pop
test
lds
cwtl
pushl
sbb
pusha
sbb
sub
mov
je
pop
xor
xchg
jno
fisubrs
movsl
push
lcall
mov
pop
arpl
pop
and
mov
fsubl
test
sub
mov
mov
xor
dec
mov
mov
push
adc
dec
lea
les
pop
cli
pop
sbbl
mov
sub
mov
pop
mov
repnz
xchg
call
test
lea
jbe
dec
dec
jne
push
cmp
push
scas
pop
cmovnp
mov
dec
fidivrl
mov
cmpsl
testl
mov
mov
pop
push
das
mov
add
xorb
rorl
lea
jb
inc
lods
imul
add
sub
stos
jno
sub
mov
jg,pt
mov
sar
pop
mov
inc
ffree
fbld
push
pop
ss
push
ds
dec
sbbb
aad
jmp
inc
mov
push
fsubrl
mov
or
mov
or
mov
sbb
mov
jmp
leave
ja
fcoml
add
add
cwtl
or
fnstenv
add
repz
mov
jle
adc
mov
stos
cmp
insb
bound
imul
sarl
mov
cmp
and
aaa
shll
dec
push
push
je
jns
xor
xor
push
sub
loopne
inc
mov
sbb
shrl
pop
lock
dec
push
mov
xchg
out
push
pop
cltd
cmp
data16
int3
stos
sahf
test
fidivrl
mov
divb
aaa
cwtl
or
loope
lock
xor
ret
xchg
pushl
lahf
ljmp
push
int
push
mov
push
fnclex
inc
add
jl
mov
and
iret
dec
pop
scas
inc
test
push
mov
sbb
outsb
scas
out
sar
sti
imul
gs
add
sbbb
int
scas
adc
push
mov
sbb
loopne
iret
push
push
sbb
xchg
mov
xorb
inc
sahf
adc
pop
hlt
shrl
out
mov
xchg
test
ret
add
add
sbb
add
sbb
pop
or
in
popf
push
sbb
std
cmp
dec
adc
mov
addr16
outsb
pop
and
loope
lahf
inc
push
mov
lahf
into
cwtl
insb
imull
inc
jae
pop
jnp
mov
sub
cmpsb
jge
jmp
sbb
pop
je
and
scas
inc
xlat
xchg
mov
pop
mov
mov
push
andl
icebp
push
mov
fldt
or
dec
and
aam
jecxz
mov
pop
mov
ror
int3
and
stos
popa
insb
orb
mov
xchg
gs
add
inc
mov
and
fs
xchg
dec
mov
cmp
mov
insb
fistps
aam
and
aas
rol
scas
dec
xchg
pop
push
movsl
pop
push
lods
sub
rolb
fucomp
mov
fisttps
in
or
scas
ret
insl
jne
inc
outsl
repz
movsl
sahf
cmp
dec
arpl
js
push
inc
pop
push
jg
pop
adc
cli
push
enter
std
arpl
out
cmp
jb
std
testb
jp
push
daa
add
leave
rcrl
jnp
orb
das
out
inc
in
les
mov
pushf
ljmp
clc
mov
pusha
movsb
xlat
cmp
popf
jg
mov
mov
ss
scas
jp
decb
enter
aad
jmp
adc
outsb
xchg
dec
sbb
jo
fisttps
or
sub
inc
and
shl
stc
out
xor
iret
adc
fwait
sub
lock
jmp
ja
or
lods
pop
xchg
pop
mov
sbb
lret
fsubrl
sub
jle
push
sahf
push
roll
sbb
add
jmp
sbb
mov
lret
rolb
mov
push
push
push
rcrl
aas
cmp
mov
in
sub
sbb
fistpll
cmc
mov
pop
inc
lahf
loope
vmulsd
xor
fs
imul
in
and
cwtl
faddl
mov
mov
test
repnz
lock
push
frstor
mov
clc
inc
int3
xor
mov
mov
fiaddl
push
xor
inc
outsl
lahf
dec
sbb
xchg
sbb
testb
cmp
pop
and
add
jecxz
inc
iret
mov
cltd
and
mov
movsl
in
cli
mov
dec
sub
add
test
mov
aam
mov
sub
inc
dec
in
jmp
inc
ficompl
mov
negb
sbb
sub
sub
stos
movsl
sbb
or
out
inc
or
pop
lea
mov
add
je
mov
sbb
je
push
jle
mov
jo
push
add
push
insl
xor
xchg
loope
lcall
sahf
jae
adc
or
sub
pop
push
sub
mov
pop
lds
loop
xor
fmulp
adc
and
rolb
xor
sarl
adc
cmpsl
popf
repz
jae
mov
adc
loope
test
mov
popa
push
sbb
dec
mov
lret
ror
and
add
out
stc
pop
jle
cli
arpl
ret
sahf
sub
lods
mov
outsl
out
stos
pop
dec
ficompl
cmp
pop
cmp
scas
lea
add
arpl
adc
push
out
jl
push
add
dec
in
loop
lahf
in
xchg
inc
jnp
xchg
cmp
xchg
pop
jne
push
jmp
bound
pop
sahf
shl
inc
add
jge
push
scas
aad
dec
fnstsw
push
pop
mov
mov
fstpl
jmp
jo
outsl
sbb
push
sbb
outsl
xor
dec
lret
mov
dec
dec
lret
sahf
popa
mov
or
aad
xlat
push
push
cld
mov
mov
mov
jns
fucomp
dec
je
shrl
xchg
imul
ja
icebp
arpl
adc
test
out
pop
lret
pop
xchg
xchg
mov
imul
std
add
imul
mov
repnz
arpl
mov
push
fwait
leave
fs
or
dec
sub
push
insl
out
aas
mov
xchg
enter
nop
add
jl
mul
daa
pop
mov
push
push
ss
inc
xor
sbb
xchg
loope
mov
out
lret
inc
or
insb
test
push
jb
cpuid
inc
push
shll
inc
dec
inc
inc
push
test
add
sub
or
movsl
filds
dec
sub
popa
out
dec
sbb
adc
cmp
leave
in
push
out
out
pop
imul
mov
jge
push
insb
xchg
jle
jo
lret
lret
pop
loopne
addl
or
mov
int3
push
mov
sbb
movsb
and
js
jmp
pop
xchg
mov
out
inc
jmp
inc
mov
mov
and
add
int
jp
mov
das
cmc
in
pushf
pop
sar
cmp
daa
fwait
pop
into
inc
enter
jmp
stc
xor
sbb
mov
jmp
mov
and
jno
cmpsl
push
xchg
fs
xchg
mov
push
sti
mov
ret
ss
pop
jp
test
popa
insl
loopne
ja
mov
or
test
lods
jmp
dec
mov
int3
aad
lods
cwtl
ss
add
and
bound
and
and
xchg
mov
mov
arpl
push
xor
jne
xlat
test
adc
mov
sub
call
push
mov
inc
stc
ret
pop
mov
xlat
inc
mov
outsb
pop
sub
jle
jo
int
pop
and
add
xchg
push
add
or
loope
ret
out
les
stos
shlb
mov
mov
in
jge
sbb
int
outsb
push
fcompl
data16
or
jbe
dec
jmp
cld
scas
mov
outsl
int
out
jb
push
in
mov
sbb
ljmp
repz
mov
cmc
ficoml
pop
in
xor
fsubrs
fwait
push
mov
mov
mov
movsl
lret
loopne
push
sbb
inc
xor
imul
repz
and
inc
gs
test
js
test
dec
mov
mov
dec
dec
outsl
pop
xchg
adc
inc
pop
xchg
sub
mov
mov
les
adc
xor
or
push
cli
mov
cmp
cmp
imul
sub
pop
mov
xchg
sub
xchg
jb,pt
imul
or
dec
fsubs
int3
aad
test
xchg
das
dec
jmp
hlt
dec
addr16
movsb
adc
jle
mov
inc
lea
xor
fnstsw
inc
iret
sub
mov
mov
pop
sub
dec
clc
jp
or
inc
push
fisttpl
pop
jl
stos
add
popf
pop
mov
ja
stc
into
mov
push
jp,pt
insb
pop
mov
pop
mov
push
ret
or
pop
dec
lcall
mov
mov
cli
mov
lods
add
sbb
xor
push
adc
cmp
cwtl
popa
push
ror
dec
jo
lock
push
ljmp
subl
push
push
pop
loopne
and
bound
mov
imul
in
loopne
add
test
push
fwait
mov
loope
lret
mov
dec
fs
icebp
subl
cmp
popf
ret
xlat
daa
or
lahf
cmpb
add
xchg
adc
lock
add
mov
lock
imul
popa
je
xchg
and
in
or
insl
mov
jp
cmp
imul
mov
cmc
lcall
push
sbb
leave
call
xorb
or
sbb
push
lds
adc
xor
leave
inc
push
mov
and
push
mov
orb
stc
fisubrs
pop
lret
sti
pop
xchg
or
and
sub
inc
mov
aam
es
xor
out
cmpsl
scas
dec
sti
mov
cmpl
insb
mov
add
leave
push
jmp
mov
into
rcrl
mov
xor
mov
ljmp
jbe
fsts
jne
fcmovb
lret
iret
js
jmp
fidivrl
aam
call
mov
xchg
lods
fimuls
lods
jno
insl
outsb
inc
filds
add
ret
xor
mov
cs
mov
int
pop
inc
rcrl
cld
sbb
mov
sub
mov
pop
dec
dec
int3
dec
loopnew
jnp
sbb
and
mov
push
mov
push
dec
daa
stos
stc
movsl
jle
and
les
out
cmp
inc
pushl
mov
push
lahf
lods
cmpl
sbb
imul
lcall
cld
jbe
loop
jne
call
jb
pop
aad
loopne
lcall
bound
insw
pop
sub
inc
mov
iret
cmpsb
inc
mov
out
mov
sbb
sbb
in
subl
cmpsl
lods
and
mov
fdecstp
push
mov
sub
push
in
not
sbb
mov
mov
cli
sub
and
loopne
rcrb
stos
imul
mov
out
dec
out
and
and
jns
or
in
mov
add
les
pop
inc
cmp
inc
lahf
ror
aas
pop
lret
cmp
movsl
fcmovnu
ljmp
fimull
mov
add
adc
aad
mov
leave
mov
sbb
adc
add
aam
out
fbstp
mov
into
mov
jmp
cmpsb
test
dec
sbb
cltd
out
push
inc
sub
orb
lret
mov
cld
pop
mov
je
push
sub
cmp
movl
cli
push
sub
ja
xor
sub
outsl
clc
push
adc
push
push
int3
sahf
cmp
ljmp
mov
adc
mov
pop
sbb
pop
in
push
push
cmpsl
add
sbb
daa
aas
arpl
pop
dec
cwtl
imul
jno
xor
push
xchg
mov
jp
mov
jecxz
push
add
xor
jne
cmp
fdivs
pop
loopne
mov
sbb
cmp
rolb
and
mov
jl
cs
hlt
lods
test
shr
lret
mov
or
adc
cmp
inc
push
xchg
pop
pop
dec
lods
adc
push
push
pusha
or
mov
movsb
repz
mov
mov
sub
pop
in
and
addl
and
sahf
lock
mov
pushf
gs
aad
ret
in
push
fxch
xchg
inc
or
cmp
das
sbb
pcmpeqw
jg
mov
jne
stos
xor
mov
xlat
mov
inc
lret
sub
movsl
mov
cli
clc
add
rcrl
push
mov
inc
out
cltd
inc
sbb
icebp
cmp
adc
and
js
cmp
scas
or
inc
leave
add
loop
or
or
mov
scas
jge
cmc
jg
repnz
or
shrl
pop
daa
add
movsl
add
jle
inc
hlt
mov
and
nop
sub
pop
xchg
jp
add
sbb
cli
mov
mov
jbe
add
jecxz
in
xchg
mov
loopne
ljmp
sub
and
push
pop
sub
xchg
test
lret
subb
daa
push
out
xor
std
adc
push
in
stc
daa
dec
mov
shrl
imul
xor
imul
loope
pop
jae
dec
iret
jge
mov
inc
das
iret
and
mov
cli
ljmp
adc
xor
xor
pop
lret
xor
popa
test
out
and
push
ret
imul
xchg
xor
and
and
ss
gs
lret
fwait
arpl
ja
ud1
jns
xor
in
mov
repnz
out
stc
inc
inc
lret
lahf
pop
ljmp
mov
xchg
cwtl
xchg
add
fisubrl
ret
lods
adc
mov
scas
sbb
scas
fidivrs
lods
push
mov
or
add
das
dec
cld
insl
cmp
cmp
push
xchg
aad
and
rcll
popf
cmpsl
aaa
aam
pushf
iret
jl
xchg
aas
lahf
lock
out
and
jnp
cwtl
fs
sub
push
ja
jb
lret
sub
aam
repz
scas
mov
cwtl
inc
sub
push
dec
shlb
inc
hlt
push
mov
push
outsl
inc
aad
add
out
mov
dec
mov
rolb
add
push
pop
lcall
mov
inc
inc
ret
jae
popa
mov
mov
inc
mov
cmc
sbb
addl
dec
mov
xor
cmp
xchg
adc
femms
xor
flds
or
lods
mov
stos
or
sbb
inc
jne
jge
aaa
ljmp
dec
shlb
mov
sub
repnz
mov
inc
dec
jp
jg
mov
out
sti
sub
mov
addb
leave
es
movsl
jb
mov
mov
mov
and
das
mov
rcl
aam
inc
inc
mov
inc
icebp
out
dec
fwait
sub
fmuls
sub
je
je
push
push
push
stc
inc
fldl
bound
ret
cltd
or
xor
adc
insb
adc
cs
cmp
dec
cmp
lock
xor
xchg
mov
shll
stos
mov
test
pusha
mov
adc
pop
rorl
dec
xchg
stos
xor
out
outsl
push
js
jb
mov
jnp
mov
jg
add
jno
cmp
nop
mov
fcmovne
shlb
icebp
sub
cs
stos
pop
js
xor
pop
orl
add
sub
xchg
iret
cmp
adc
lods
add
sbb
ja
add
fucomi
sub
jnp
mov
xor
stos
mov
aad
ret
fwait
inc
test
push
mov
sub
outsb
fnstsw
ds
add
xlat
pop
pop
enter
jmp
repz
pop
shl
mov
lret
sbb
xchg
cmc
jl
mov
incb
pop
fistl
or
lods
dec
dec
mov
out
in
test
jnp
and
pop
lods
fwait
in
fwait
pop
stc
ljmp
jecxz
neg
inc
sub
ljmp
jecxz
movsl
stc
push
pop
sahf
cmpsl
ret
mov
rol
cmp
push
pushf
jle
ja
mov
or
sbb
test
fbstp
mov
js
or
jno
lahf
jecxz
mov
cs
push
int
pushf
dec
pushf
xchg
or
ljmp
rclb
push
or
mov
dec
mov
pop
mov
jmp
mov
cli
pop
xchg
push
in
arpl
shl
ret
xor
mov
lods
cmp
push
add
in
jge
fwait
xchg
or
cmp
stos
popl
faddl
xchg
xchg
rol
xchg
mov
sarl
jp
repnz
iret
sbb
in
or
push
loop
dec
jbe
cmp
pop
jecxz
sub
sbb
inc
jmp
lahf
out
imul
ret
mov
xchg
push
or
adc
mov
push
jb
inc
cwtl
sbb
lret
lock
cmp
insb
adc
inc
nop
cmp
mov
enter
aaa
push
cmp
out
or
pop
or
mov
inc
jge,pn
sahf
add
push
cmp
je
aaa
cmp
testl
or
mov
sbb
lods
adc
and
pop
sub
push
jge
inc
clc
int3
insb
sub
lret
cwtl
mov
xchg
and
stc
xor
mov
int
sbb
xor
shl
xchg
push
fldl
int3
int
bswap
or
xchg
xchg
popf
and
and
aas
in
aad
in
out
xor
or
mov
inc
orb
or
mov
dec
xor
mov
arpl
enter
sub
jmp
jp
cmp
push
rcr
sub
jnp
out
imul
shlb
lods
inc
add
bnd
ds
mov
fadd
xchg
jl
cmp
ja
cmp
or
shr
add
test
addr16
call
idivl
fcmove
and
data16
push
or
gs
pop
into
jo
aam
ret
jg
call
jg
es
xchg
xchg
inc
jg
dec
mov
sbb
mov
cmp
or
inc
mov
insl
in
dec
out
xchg
mov
pop
gs
loopne
bound
sbb
cld
and
mov
dec
dec
stos
push
cltd
xor
or
inc
inc
mov
ds
pop
or
loop
stos
icebp
jb
mov
pop
add
xchg
xchg
add
jo
in
test
cld
push
fadds
push
les
sub
mov
inc
cwtl
push
stos
adcl
push
cmp
js
lea
mov
outsl
pop
cmpsb
ja
xchg
lds
add
xchg
cmp
xor
imul
aad
out
adc
aam
jae
lea
lods
call
sub
call
mov
inc
lock
push
inc
sbb
leave
call
mov
add
repnz
aas
xor
and
sbb
mov
dec
push
jo
mov
or
xchg
in
mov
arpl
das
fst
shl
andl
outsb
jmp
adc
mov
adc
mov
pop
jns
aas
push
je
jl
imul
scas
sbb
lea
aam
fimuls
push
out
inc
mov
mov
imul
mov
inc
adc
pop
sbb
jnp
inc
or
test
cli
jnp
dec
dec
dec
loope
rorb
subb
or
cltd
popa
cmp
sub
dec
sub
movsl
test
mov
pop
imul
rcll
jp
jecxz
jge
pop
pop
out
xchg
pop
shll
pop
mov
push
lods
stos
sar
xchg
out
insl
inc
mov
cmc
mov
adc
test
outsb
jmp
xrelease
mov
mov
cltd
lret
push
les
mov
cmp
mov
jp
or
fstpt
hlt
xor
push
xor
xor
adc
cmp
jl
repz
out
mov
imull
mov
mov
movsb
out
adc
fcom
or
lods
xor
int3
fstl
mov
test
xor
leave
adc
int3
xchg
popa
jl
sbb
or
out
repnz
das
mov
in
fdivs
fdivs
iret
lahf
cmp
xor
xorb
xchg
mov
lahf
push
jae
hlt
ret
mov
pop
dec
dec
mov
or
mov
add
cmpsb
loope
shlb
movsl
dec
jnp
or
loope
jno
or
jne
movsl
adc
popf
outsb
push
and
mov
sti
cmpsl
jg
and
jbe
mov
sub
adc
adc
xor
dec
es
xor
jnp
jp
dec
lret
and
jle
test
sbb
and
mov
pop
out
insl
sahf
fisttpll
xor
or
rorb
mov
dec
iret
inc
sub
popf
jbe
jno
test
rcl
addr16
stos
pop
nop
aam
dec
outsl
mov
adc
fdivrs
aas
sbb
push
mov
inc
add
fwait
and
mov
pop
scas
out
stos
repnz
out
jg
andl
sbb
and
xor
std
mov
pop
push
mov
adc
test
inc
aam
inc
mov
ja
cmp
jle
xor
cmp
adc
lahf
paddusw
jg
addl
push
aad
jecxz
mov
mov
pop
in
pop
jae
mov
xchg
rorl
fmull
in
xor
cmp
xor
jmp
fwait
xor
std
adc
out
push
xor
inc
cld
sbb
int
sub
xor
imul
dec
sub
in
xchg
ret
mov
or
xchg
shrb
fcmovnu
pop
and
sbb
test
mov
push
clc
push
fdivrl
dec
push
xchg
aad
xchg
sbb
ljmp
idivb
mov
into
push
inc
inc
fs
jne
inc
adc
iret
mov
cmp
enter
test
mov
push
sbb
dec
mov
addr16
cmp
mov
sub
inc
lea
or
out
sub
test
inc
maxps
xchg
call
adc
test
xor
ret
subl
fdivp
pop
inc
pop
fnstcw
test
repnz
push
mov
test
subl
lret
nop
in
sbb
test
jbe
lret
sub
inc
xor
add
sub
stos
rorl
in
sbb
push
cwtl
jg
pop
cmp
adc
mov
mov
insl
dec
sbb
mov
jl
mov
loop
xchg
jns
jmp
push
popf
dec
and
loope
enter
dec
push
xlat
mov
push
dec
movsb
ss
pusha
or
movsb
jp
ret
jns
push
inc
imul
leave
cld
sbb
cmpsl
pop
xor
dec
xchg
fcmovbe
test
scas
mov
and
lea
aaa
aad
inc
cmp
jl
sub
jns
mov
pop
pusha
cwtl
ljmp
lea
push
lock
or
mov
mov
repz
push
into
xlat
scas
and
cli
mov
stos
mov
pushf
imulb
stos
push
lea
imul
ja
fwait
xchg
sbb
aad
repnz
popf
mov
into
loope
xchg
sub
scas
fstp
add
mull
aas
mov
out
in
jnp
dec
push
les
add
jo
xor
jg
cmp
icebp
scas
xchg
inc
adc
push
lock
les
xorb
mov
loop
lds
adc
out
lds
in
mov
or
ret
aad
xchg
nop
sub
pop
pop
loopne
fldcw
lret
jl
or
inc
adc
fcompl
ss
and
cmpl
jg
mov
mov
inc
add
cmp
clc
ret
pop
outsb
lret
insl
fsubs
sub
push
lret
cmp
xchg
scas
cli
aad
push
mov
mov
movsl
idivb
movsl
cmp
jno
test
dec
call
or
lock
fcom
xor
jp
out
cmp
movsl
jge
pop
cli
adc
inc
push
adcb
xchg
xor
fstpl
fldl
lock
subb
or
lea
int3
xor
nop
call
pop
add
or
inc
repnz
mov
xchg
loop
jg
push
mov
sub
aaa
dec
jae
or
mov
ret
xchg
inc
inc
adc
sub
inc
xlat
lcall
ror
mov
insb
int
inc
and
pop
cld
fcomp
push
cmp
cmp
lods
and
add
nop
cwtl
adc
sub
negl
pushf
shr
mov
mov
pop
out
subl
pop
mov
dec
mov
test
and
push
or
dec
xor
dec
push
push
lret
pop
add
or
and
mov
mov
inc
into
sbb
mov
mov
sub
push
sahf
and
fidivrl
ret
shl
test
cld
add
popf
insb
jl
pop
stos
push
dec
pushf
push
ret
mov
mov
push
shrl
or
jmp
push
and
mov
xchg
sub
pushw
icebp
cs
fldt
mov
sbb
in
cmc
mov
dec
int3
imul
fwait
jnp
inc
repnz
or
pop
fsts
xor
negb
mov
jns
js
test
mov
xor
in
inc
lds
aam
ret
cmpsl
jmp
xchg
dec
lcall
adc
sbb
lea
push
mov
xchg
lahf
lcall
or
add
pop
inc
test
pop
or
addr16
inc
in
call
shll
push
jmp
mov
xchg
fwait
xor
sub
addr16
es
pop
dec
lcall
je
mov
out
out
ja
cmp
icebp
mov
cmp
sub
int
pop
mov
imul
pop
movsl
jg
test
pop
xor
movsl
ret
jne
xchg
and
stc
push
outsb
out
jne
out
and
sub
jle
icebp
leave
mov
mov
insl
jl
xor
jns
or
mov
push
pop
sahf
xor
mov
fcoms
and
test
in
sbb
pushf
fldl
imul
jge
sbb
push
neg
cli
das
stos
pop
cmp
pushf
nop
xor
xchg
jb
mov
or
dec
or
test
lds
icebp
nop
push
iret
cld
in
sbb
inc
lcall
adc
and
xor
sub
sub
jb
jmp
shlb
push
cmpsl
xor
inc
xchg
mov
push
popf
stos
fiadds
lret
dec
push
lahf
xchg
xor
sub
or
cmpsl
cmp
sub
jno
mov
dec
mov
mov
adc
hlt
and
roll
sarb
lea
sahf
pop
out
aam
sbb
mov
aad
js
push
adc
mov
or
icebp
pop
xor
sub
cld
lret
inc
jp
xchg
add
mov
or
mov
les
or
gs
repnz
sub
mov
sbb
inc
sti
insl
add
stc
jp
addl
jge
sbb
pop
dec
dec
fs
jmp
jg
mov
repnz
cmp
cs
adc
mov
dec
inc
aas
aas
jmp
and
loope
mov
adc
insb
lock
dec
jmp
rcr
dec
push
fidivrs
cli
lahf
ja
sub
jge
sub
lcall
xchg
cmc
or
iretw
aas
push
jle
xchg
jp
pusha
je
inc
jecxz
jle
mov
sbb
test
xchg
adc
push
inc
sbb
std
test
mov
add
jl
imul
clc
dec
jo
stc
sub
enter
into
cld
cwtl
jg
jo
inc
sub
inc
insb
xchg
jb
int
and
push
gs
pop
sti
out
adc
fldl
dec
lahf
pop
mov
jns
outsl
pop
add
xor
rorb
addb
stc
mul
sbb
stc
and
and
maxps
add
push
sub
sbb
push
pop
icebp
jae
sub
dec
jmp
jb
outsl
fldcw
push
lret
add
cmp
jbe
mov
arpl
mov
push
mov
in
aam
test
mov
daa
xchg
mov
push
or
xchg
push
jne
push
dec
push
push
mov
cs
hlt
out
mov
lret
pusha
pop
ss
in
mov
movsb
mov
sti
and
popa
iret
xor
jge
pop
lock
sub
mov
pop
addl
out
or
xchg
cs
setnp
dec
out
repz
fmull
inc
shrl
aaa
jo
movsl
mov
lock
xor
aas
insl
jle
lahf
mov
std
call
inc
cmp
outsb
mov
enter
lock
inc
loopne
xchg
pop
push
ss
nop
das
adc
xchg
movlps
imul
ds
mov
xor
sti
sbb
stos
enter
cltd
mov
mov
add
es
test
sbb
outsl
test
fs
inc
cmp
push
outsl
cmp
lcall
sub
test
pop
pop
pop
pcmpeqb
mov
pop
push
pop
xor
push
and
adc
cwtl
out
mov
sub
cmp
mov
jb
imul
dec
dec
ret
in
inc
dec
into
pandn
cld
lcall
sahf
cmp
push
loope
and
scas
fs
jbe
mov
jns
sahf
and
data16
mov
arpl
es
dec
add
fmul
fxch
aas
push
mov
push
incl
and
jnp
aaa
test
mov
lds
jp
cmpsl
push
push
int
shll
aam
into
mov
jmp
bound
mov
int
dec
jnp
jge
push
int
pop
adc
repnz
fcoms
test
setbe
adc
mov
pushw
mov
cwtl
cld
fildll
lret
sahf
mov
aaa
push
mov
add
clc
add
nop
add
hlt
rcl
aad
dec
arpl
andl
and
mov
jno
jnp
pop
cmp
inc
scas
js
jb
loop
push
xchg
stos
fwait
mov
and
cmpsb
jle
nop
nop
loop
je
pop
adc
fistpl
cli
xchg
movsb
cmpsb
outsb
sub
or
cld
jno
std
and
aaa
in
xor
pop
cmp
cmp
push
pop
push
ror
out
sbb
nop
jno
dec
xor
aas
push
xchg
sbb
stc
int3
mov
and
dec
and
outsl
pop
cmp
shr
xor
adc
movsb
lock
pushf
inc
sbb
inc
sbb
scas
add
pop
mov
push
pop
orl
hlt
jbe
sub
or
cmp
add
mov
inc
pop
test
sahf
lcall
lock
and
cmp
in
test
mov
push
adc
imul
jp
push
add
push
cmp
or
outsl
sub
dec
pusha
scas
xchg
fwait
lcall
sti
rol
or
jmp
sub
dec
and
xchg
popa
mov
repnz
aaa
daa
xchg
inc
lcall
xor
movsb
ss
rol
insl
adc
mov
imul
and
inc
cmpb
xor
or
test
adc
push
cmpl
mov
jecxz
loope
shll
cmp
mov
sub
mov
rolb
cli
ja
fsubrp
lret
shrl
dec
loope
or
and
je
add
mov
cmp
or
dec
repz
mov
add
xchg
sbb
fiaddl
pop
inc
scas
into
test
push
mov
cmp
sbb
andb
imul
xor
stc
xor
sub
push
mov
mov
enter
sub
icebp
in
stos
mov
jle
pop
insl
pushf
cmp
inc
rcl
mov
push
fildl
stos
jbe
ljmp
jp
mov
lock
push
jne
jb
iret
data16
in
push
xor
push
into
mov
dec
or
mov
arpl
pop
xchg
popf
push
sarb
jecxz
sub
xor
push
adc
cld
cmp
lret
push
and
or
call
inc
xchg
jne
adc
xor
ljmp
sub
cvtdq2ps
pop
sbb
mov
and
loopne
jg
dec
inc
repz
mov
popa
xchg
sbb
xor
sub
jns
jae
or
gs
pop
lods
stc
mov
cmc
repz
addl
jmp
rclb
mov
repz
pop
lcall
cmp
xchg
sbb
stc
mov
in
inc
cli
cmp
push
xor
mov
arpl
add
leave
fistpl
ret
enter
pop
shrb
cmp
and
movsb
sbb
dec
movsl
scas
push
adc
mov
test
pop
ret
daa
mov
jp
or
fs
xchg
imul
or
movsb
push
out
push
xlat
testb
mov
fisubrl
mov
pop
pusha
mov
lock
movsb
adc
inc
xor
lea
hlt
js
daa
mov
mov
or
xchg
mov
push
int
mov
pop
ret
or
cmp
ljmp
in
pop
xchg
pop
sbb
xchg
sahf
add
xor
rcrb
cwtl
rolb
test
out
sub
cmpl
adc
add
jp
in
push
dec
add
mov
sbb
push
push
mov
mov
mov
pop
fcmovne
xchg
inc
mov
idivl
cld
cld
les
push
adc
rcrl
sahf
xor
sbb
mull
add
add
sbb
push
xchg
test
xchg
or
lahf
std
lret
jge
jo
inc
shlb
mov
iret
push
enter
imul
call
and
mov
pop
fwait
xor
pop
clc
jmp
sub
jle
mov
sbb
sbb
mov
inc
lahf
and
fsubrs
jne
add
clc
insb
into
pop
mov
pusha
lahf
sbb
mov
rol
daa
dec
pop
sbb
ja
lcall
inc
subb
mov
in
adc
fimuls
ret
mov
dec
mov
xchg
and
imulb
outsl
mov
cld
and
hlt
std
fsubrl
fs
pop
in
jmp
addr16
adc
daa
add
hlt
adc
pusha
sbb
aad
push
mov
arpl
xor
mov
cld
xlat
stc
imul
pop
inc
sahf
mov
pop
mov
fs
xchg
pusha
jbe
dec
js
repz
mov
jmp
cld
pop
sbb
sub
mov
inc
aaa
pop
mov
sbbb
and
pop
rcr
and
imul
and
jbe
jmp
push
cmp
lcall
dec
push
movsb
mov
test
inc
mov
ljmp
or
shlb
lret
xchg
aad
cltd
xor
insl
int3
ja
or
xchg
and
test
js
data16
jl
ljmp
cmp
jl
cmp
push
jecxz
leave
and
add
stos
movsl
call
gs
iret
mov
or
inc
jnp
fists
insb
dec
adc
js
jo
lds
inc
fsubrs
jbe
and
xchg
pop
push
int
mov
bound
push
xchg
adc
fcoms
test
or
test
shll
dec
xor
xor
cmp
mov
outsb
out
mov
sbb
imul
inc
xlat
loop
pop
mov
inc
cs
or
lcall
lock
mov
int
xor
mov
sub
ds
vzeroupper
mov
mov
sbb
cmpsb
pop
xchg
dec
mov
xor
test
cmc
pop
loope
push
fwait
inc
push
fwait
in
scas
ret
sbb
cmp
pcmpgtb
cmp
and
in
pop
andl
xlat
mov
enter
bound
dec
and
sahf
imul
sbb
add
xor
rcrl
add
lods
lret
adc
arpl
pop
leave
popf
mov
inc
jb
push
enter
pop
clc
andl
test
push
or
mov
shlb
cmp
repnz
shlb
lcall
jge
mov
adc
sub
mov
jns
les
and
xchg
pop
out
or
inc
rcll
mov
je
test
fistps
nop
pop
sub
mov
leave
jnp
test
jecxz
push
aas
push
inc
mov
adc
pop
stc
sbbl
mov
push
adc
cmp
push
adc
or
and
cmpsb
int
pop
mov
sub
pop
xor
movsl
jmp
mov
je
add
inc
shrb
adcl
xor
pop
adc
or
xor
and
xor
jo
adc
pop
jnp
xor
cmp
mov
jns
pushf
fstpl
xchg
lods
inc
mov
loope
jp
std
pop
jo
dec
cmp
movsb
push
mov
cmp
out
cmpsl
fwait
mov
dec
mov
sbb
dec
loope
subl
imul
push
pop
cmp
cltd
adc
movsl
cmp
or
cli
pop
fidivl
xlat
push
xchg
aaa
in
repz
dec
push
into
dec
orl
jmp
hlt
cmp
test
xchg
dec
mov
jmp
mov
notb
gs
jnp
std
mov
sub
mov
xchg
mov
and
scas
jmp
push
idivb
mov
or
jmp
jae
xchg
in
jge
leave
push
aad
sbb
adc
push
shlb
xor
and
mov
fstpt
fmuls
sub
lahf
lcall
inc
dec
call
jno
pop
out
lods
jb
xchg
push
jb
inc
jmp
repz
xchg
jo
shl
dec
cs
mov
adc
les
es
out
out
dec
movl
fs
loopne
scas
movsl
aaa
and
adc
leave
and
lods
sti
hlt
rorb
loopne
bound
pop
js
and
fsubl
add
push
and
push
push
cli
pop
adc
xchg
sub
loopne
shl
nop
jl
scas
imul
dec
sbb
repnz
pusha
daa
aam
pop
movsl
repz
popf
cltd
movsl
jb
xchg
mov
inc
mov
ds
or
fdivrl
pop
outsb
pusha
inc
mov
cmpsb
adc
xor
cmc
lods
and
outsb
mov
in
xor
pop
sub
dec
lea
dec
ds
int
adc
aas
test
inc
sub
xchg
cmp
cmc
lahf
xor
cmp
xchg
xlat
xchg
rorl
xor
xchg
repnz
dec
stc
scas
cmpsl
dec
dec
clc
push
pop
outsb
call
sbb
inc
fstps
add
pop
push
mov
fistpl
sbb
cmp
inc
inc
xor
test
or
mov
repz
imul
push
sbb
loope
push
push
jge
pop
mov
sub
mov
int
dec
test
add
pop
popa
jae
clc
xorb
fwait
or
and
imul
mov
into
or
enter
adc
repz
pop
cmp
aas
lret
pop
mov
adc
test
mov
adc
cmc
mov
jae
movsb
call
mov
fsubl
arpl
adc
add
mov
fldt
pop
stos
mov
pop
pop
jl
and
je
testb
dec
or
rorl
icebp
jno
cld
add
cmp
jecxz
add
pop
pop
xlat
and
out
or
jns
cmp
movsb
dec
mov
or
mov
int3
and
imul
pop
icebp
cmpsl
push
xchg
sar
mov
mov
xchg
fcoml
adc
xchg
xchg
mov
jmp
or
mov
imul
mov
es
push
in
or
fbld
mov
repnz
cmpsl
ret
je
out
push
and
push
xchg
push
pop
lods
jge
jge
dec
lcall
testb
pop
cltd
push
jo
fcompl
push
in
lock
mov
or
imul
inc
mov
pop
rcrb
sub
push
ret
mov
sub
lods
fdivrl
fdivs
mov
es
jp
fld
ja
or
pop
xlat
sbb
pop
mov
lea
dec
sbb
stos
in
fistps
popa
aaa
stos
dec
xchg
pop
inc
or
lds
mov
mov
lret
stos
and
mov
and
jl
sbb
fidivrs
pop
pop
inc
lds
pop
ljmp
push
and
lds
out
testb
mov
adc
xor
cltd
pushf
sub
mov
dec
fisubl
dec
or
cmp
fsubrs
xchg
lahf
loop
or
fstp
xor
dec
movsb
pop
pop
in
ret
test
cmpb
push
sub
sub
insl
jge
icebp
jp
push
ja
daa
push
and
mov
pop
out
inc
sbbb
push
stos
push
lock
fcompp
sub
mov
imul
sbb
xor
and
mov
sbb
dec
xlat
push
inc
jo
jmp
test
push
jl
jnp
push
fidivl
mov
xchg
push
xor
aad
xchg
or
rcll
mov
imul
and
fstps
sarl
xchg
adc
pop
movsb
and
in
out
mov
or
sbb
lock
or
adc
int3
push
std
push
pop
rcrb
pushf
hlt
insb
and
es
pushf
add
lds
sbb
dec
sbb
mov
dec
mov
enter
cltd
xchg
in
add
lret
dec
sti
pop
jbe
psubusw
xchg
push
lods
ss
lea
lret
fdivs
das
fisttpl
jle
fbstp
xchg
push
jp
lods
fsubrl
cmp
rorb
add
mov
inc
jno
sub
leave
js
cmc
loop
inc
test
fsubl
sub
dec
mov
xorb
imul
push
push
push
fld
pop
xacquire
in
mov
ljmp
cli
push
movsl
sbb
pop
ffree
push
pop
jne
jno
add
aad
divb
out
xchg
call
fmull
pop
push
lods
mov
cld
cmp
pushf
pop
adc
dec
jne
stos
jno
and
cmpsb
dec
movsb
es
out
test
into
mov
jne
cli
in
add
enter
mov
push
dec
inc
cmpl
cmp
jne
je
mov
push
mov
les
xchg
xor
sbb
mov
push
lcall
ficompl
xchg
icebp
sub
shll
fs
jg
adc
pop
cmpsl
add
aas
jg
push
out
jle
sub
call
sub
sbb
inc
mov
fsubr
push
idivl
pop
into
xor
jmp
imul
shl
inc
and
dec
rcl
clc
ljmp
pushf
negb
jo
add
adc
dec
push
cmp
pop
mov
ljmp
lods
jbe
cmp
push
push
pop
es
dec
push
fstpt
sbb
add
aam
mov
icebp
dec
jle
sub
fistps
cmp
mov
sub
cmp
cmp
push
insb
repz
inc
sub
fldpi
idiv
js
xchg
or
xlat
loopne
fsts
dec
loope
gs
popf
mov
xchg
std
mov
inc
test
or
pop
aad
addl
cmp
test
mov
rorb
in
sub
ds
je
stos
mov
xchg
xor
arpl
add
adc
dec
push
clc
xchg
daa
shll
in
sub
jecxz
in
aas
mov
jo
aad
cld
mov
mov
ret
pushf
add
push
andl
adc
inc
dec
outsl
lcall
sbb
enter
xor
dec
cmp
test
push
adc
call
inc
lret
jae
sub
dec
mov
test
pop
xor
inc
mov
or
add
pop
es
jecxz
xor
add
in
pop
and
dec
push
adc
lock
adc
push
inc
jo
repnz
and
add
rorb
call
ja
aad
and
in
mov
movb
pop
in
mov
mov
mov
cmpb
pop
cmp
or
scas
jno
mov
clc
mov
fcomi
mov
mov
ds
daa
sub
push
mov
pop
popf
mov
repz
pop
lcall
cwtl
and
out
mov
iret
dec
fdiv
adc
ret
adc
filds
mov
mov
mov
jecxz
mov
mov
jns
out
add
ja
and
movb
stos
or
inc
jne
cmc
mov
push
outsb
outsb
ja
mov
pop
or
inc
push
inc
sbb
mov
shll
dec
fisubs
jo
add
sbb
mov
or
dec
cmp
cmp
movsl
pop
xor
mov
iret
rorl
cwtl
cmpsl
ljmp
cli
pop
ja
imul
xor
adc
sbb
mov
stc
insl
inc
dec
lods
push
and
in
lods
cmpsb
lahf
jg
stos
idivb
adc
pop
leave
arpl
ret
movsb
mov
pushf
cmp
dec
iret
mov
cwtl
aas
dec
pop
push
dec
lock
pop
roll
mov
test
xor
xor
push
dec
xchg
dec
push
or
aad
rcll
fs
mov
adc
lods
pop
push
mov
or
clc
test
push
test
addr16
mov
cs
push
or
fidivrl
xor
mov
push
or
mov
sbb
stos
jp
loop
mov
cmc
into
mov
add
or
arpl
push
movsl
and
and
dec
xor
test
aam
cmc
leave
lret
loope
ds
push
inc
rcrl
pmulhw
dec
test
push
or
add
sbb
pop
loopne
inc
in
pop
test
jle
pop
jmp
sbb
jecxz
arpl
insl
sub
ljmp
inc
jnp
ds
push
push
push
cmpsl
and
divl
test
inc
jge
dec
push
push
rclb
cwtl
shrl
xor
packsswb
xchg
pop
enter
pop
mov
mov
lret
cmc
out
sti
lahf
sbb
gs
test
and
imul
pop
push
lret
js
out
into
fninit
arpl
rcrl
jno
inc
stos
jmp
adc
cmpsb
xor
int
sarb
xchg
clc
mov
je
sbb
jecxz
jno
xor
sarb
pushf
cmp
mov
or
out
dec
fs
push
inc
out
pop
iret
and
fnstenv
or
xchg
xor
fcomps
shlb
pop
movsl
fstps
jmp
in
adc
sub
cmp
jp
inc
into
pop
push
in
inc
sbb
sbb
sbb
push
mov
pop
mov
mov
and
jo
and
mov
loope
pop
insb
ja
or
hlt
sbb
fwait
xchg
loopne
aam
cmpsb
pop
sbb
adc
inc
sbbb
dec
sub
and
add
mul
jnp
int3
repnz
iret
pop
push
push
fstps
xchg
mov
insl
and
and
adc
sbb
sbb
mov
ss
sarb
popf
jg
cmp
add
out
lahf
jns
push
out
inc
ficomps
jb
test
outsl
push
xchg
loopne
jns
mov
ret
cltd
test
loope
call
or
es
xchg
pop
add
inc
dec
dec
fwait
fcomps
js
rclb
ret
cmp
mov
mov
pop
and
fs
fs
in
mov
repnz
adc
xor
add
fists
negb
fcomps
setp
cmp
pop
or
sbb
lret
aaa
mov
adc
aas
add
in
adc
int
mov
call
jne
xor
flds
jb
xchg
shlb
mov
cmc
mov
cwtl
orl
lods
lea
mov
int
inc
adc
mov
push
movsl
sub
dec
adc
imul
or
and
mov
push
mov
xchg
lea
and
int3
mov
push
in
ret
test
or
aas
xchg
decb
das
mov
int
or
shrl
loop
loope
mov
xor
dec
xor
push
shrb
dec
xor
stos
das
push
popa
daa
mov
repnz
pusha
cmc
or
test
xchg
cwtl
add
cs
rolb
es
sub
mov
fisubl
in
out
lcall
shlb
sbb
loope
cmp
xor
xchg
push
je
js
das
outsb
inc
adc
lods
stos
rcll
mov
pop
adc
sarl
test
or
fwait
lods
push
sub
lods
pop
icebp
xchg
sub
fldcw
push
sbb
fisubrs
add
cmp
int3
mov
popl
clc
xor
sub
pusha
mov
andl
pop
mov
sbb
mov
fs
pop
sbb
xor
inc
fs
sub
xchg
enter
jae
test
cmpsb
pop
fldenv
insb
or
dec
mov
sbb
xchg
mov
cmp
fnstsw
insl
sub
mov
xor
mov
int
cmp
inc
sbb
jl
mov
ret
in
pusha
aaa
cmp
xchg
xchg
fucomp
xchg
call
testl
sahf
mov
insl
lods
pop
aad
in
add
cmpsb
push
xor
outsl
jo
xor
dec
xchg
in
push
imul
cwtl
sub
fwait
cld
ficomps
jp
adc
outsl
imul
push
inc
mov
call
cld
push
gs
pop
ljmp
adc
out
lret
test
fiadds
call
sbb
testb
fnstsw
jge
inc
ja
xor
ss
cmp
fisttpll
xorl
pop
arpl
loope
pop
sarb
and
aad
outsb
and
adc
jle
inc
xlat
lahf
sahf
inc
loopne
outsl
insb
push
aad
sti
mov
sbb
inc
ret
sub
cvtpi2ps
add
mov
xchg
cmc
or
leave
push
mov
ja
jae
xchg
xchg
pop
xchg
fwait
aam
movsb
jecxz
pusha
mov
push
imul
ret
jnp
jno
insl
jmp
sub
scas
pop
cmpsb
xor
dec
je
insl
sbb
gs
add
test
clc
mov
push
and
aam
xchg
cmp
push
inc
adc
xor
enter
inc
js
mov
adc
orl
out
inc
add
dec
inc
cmp
mov
insb
cmp
push
pop
add
push
mov
or
aam
mov
data16
or
daa
cmpsl
jne
lds
jns
xor
add
loope
mov
stc
pop
mov
add
mov
in
mov
cltd
add
fisubs
mov
push
lds
and
and
mov
xchg
mov
sahf
frstor
mov
cwtl
xor
lds
mov
xor
adc
pop
loop
pop
add
push
cmc
ja
adc
or
adc
push
jg
loopne
pop
dec
call
lds
add
dec
rorl
nop
push
test
jae
leave
xchg
inc
mov
imul
sbb
xor
popa
stos
cmpsb
nop
inc
xchg
xchg
xchg
jb
sbb
lea
mov
in
add
lods
push
imul
out
into
inc
iret
rcr
jmp
gs
cmpsb
pop
push
into
popa
shr
dec
mov
adc
sub
pop
xor
mov
inc
arpl
stos
mov
mov
sub
cmpb
loop
adc
or
and
test
fldcw
pop
sub
movsb
fsts
aaa
ja
xchg
mov
jb
push
pop
or
mov
mov
jbe
pop
insl
pop
outsb
scas
add
sti
icebp
add
sbb
and
dec
and
push
insb
ja
out
jb
lods
mov
inc
orb
mov
movsl
xor
inc
clc
pop
mov
incl
or
jle
push
jge
fstpt
sbb
push
int
cmc
pop
mov
xlat
jns
xchg
push
ljmp
mov
sbb
scas
pop
mov
fimull
test
pop
inc
divb
jle
sbb
stos
adc
insb
sbb
stos
shl
and
or
jb
cld
lods
in
fsubrl
aas
mov
incl
outsb
cmp
push
mov
mov
lods
xorb
dec
mov
xorl
int
and
and
addr16
sbb
ja
in
xor
jmp
addr16
sub
loop
inc
pop
dec
jg
inc
mov
fnsetpm(287
rcll
shll
jo
fdivp
pushf
and
ss
mov
or
fs
adc
mov
mov
pusha
xorl
jo
sbb
repz
ret
push
das
jno
sbb
insl
jecxz
test
and
sub
mov
xor
stc
insl
fsubl
cmpsl
adc
mov
icebp
aaa
add
xchg
stos
xor
std
adcl
mov
inc
xchg
shll
out
xchg
xchg
sahf
stc
mov
sub
std
mov
mov
gs
lret
ljmp
idivl
add
cli
cmc
xchg
popa
jle
mov
sub
addb
rorb
movsl
fnstsw
xchg
fcoms
daa
mov
inc
add
ror
dec
scas
scas
fs
fistpl
push
pop
scas
js
nopl
fmuls
rorl
cwtl
cmp
mov
clc
or
push
jns
inc
adc
fstps
ja
cmpsb
inc
loop
xchg
das
dec
adc
cli
orb
cmp
or
and
das
pushf
pop
cmpl
nop
pop
sarb
dec
les
lods
gs
stc
out
js
out
fwait
dec
inc
in
dec
and
adc
fcompl
bound
pop
iret
in
pop
rcrl
shlb
loope
inc
mov
inc
lea
flds
pop
and
and
push
fcompl
mov
pop
aam
jl
xor
mov
or
lds
xor
cmc
mov
or
cltd
xchg
dec
icebp
std
fdivrs
outsb
xor
mov
and
out
mov
cs
insb
mov
movl
jbe
push
push
repnz
ljmp
push
xor
lret
inc
sub
xor
mov
mov
add
ja
test
dec
add
xor
xchg
pop
fbstp
cwtl
jne
repnz
scas
xchg
mov
cwtl
sbb
icebp
test
xchg
lcall
mov
stc
add
arpl
mov
add
xchg
outsl
lret
outsb
mov
mov
std
addb
inc
adc
aas
and
test
fisubl
repz
in
inc
jbe
jmp
int3
adc
movsl
adc
dec
mov
sbb
lcall
mov
dec
inc
decl
divl
adc
mov
rorl
pop
pop
bound
fwait
pop
lds
push
leave
xchg
add
inc
mov
add
mov
movsb
jno
in
fwait
scas
sti
lods
js
scas
loop
rcll
jnp
push
push
mov
or
imul
lahf
xor
fdivl
mov
cs
add
xchg
cmpsb
xor
cs
mov
add
cmp
dec
iret
shll
pop
stos
shll
aas
out
xor
push
neg
add
jl
into
push
pop
push
je
xchg
dec
jnp
mov
divb
mov
mov
push
test
cmp
int3
lahf
mov
dec
mov
mov
xor
adc
notl
sahf
push
cmc
cld
cmp
sbb
stc
sahf
sbb
cli
jl
or
lods
std
add
fld
mov
pop
add
in
mov
out
add
push
bound
fisttpll
jge
mov
push
test
adc
or
pop
in
iret
xorb
pop
dec
mov
insb
lods
and
pop
scas
rol
addr16
jg
and
cmp
lahf
mov
aam
lods
aas
scas
pop
adc
pop
or
xchg
outsl
lods
std
in
xorb
xor
and
xchg
push
inc
xchg
sbb
std
mov
pop
and
xchg
in
pop
or
sub
lock
mov
mov
xlat
subb
in
rol
pop
inc
in
faddl
ret
sti
inc
adc
push
fists
inc
inc
jge
mov
scas
ljmp
js
xchg
fsub
adc
or
fwait
cld
sub
repz
daa
push
ffreep
out
lahf
int3
nop
mov
int
inc
cltd
pushf
xchg
mov
push
xchg
mov
jle
pop
mov
adc
les
sbb
cld
imul
push
xchg
and
sti
ja
and
add
jp
or
sub
jmp
std
fisubl
dec
aas
popf
inc
dec
repnz
in
jbe
iret
lahf
cmpsb
adc
aas
in
testl
adc
incb
adc
test
dec
lret
call
loope
sarl
adc
jns
fidivrl
jbe
aaa
pop
shlb
push
repz
daa
sbb
scas
and
stos
cmp
inc
push
je
cmpsl
sbb
mov
cmp
push
int3
sub
sbb
stc
mov
mov
adc
cs
lds
das
push
insl
into
subb
adc
shlb
sbb
repnz
fdiv
jl
cs
and
mov
out
test
iret
push
xchg
push
inc
pushf
in
mov
or
movsl
sbb
xor
xor
xor
pop
popl
sbb
lret
out
in
mov
jecxz
lods
jg
push
imul
inc
push
xchg
cmp
push
lahf
mov
add
aad
jmp
das
cmp
insl
loopne
in
pop
fs
negl
leave
or
and
sbb
outsb
lods
pushf
test
xchg
ss
cmp
sahf
pop
test
clc
sub
int
shrl
cli
sub
fs
and
inc
movsl
push
fcomps
mov
repnz
mov
divb
pop
and
and
loopne
pop
dec
cld
add
mov
aam
mov
aam
mov
push
and
int3
or
push
xor
arpl
xor
push
lret
sbb
jb
insl
and
mov
aaa
test
mov
jbe
leave
pop
jae
mov
mov
call
push
jno
mov
push
cmp
imul
cmpsl
xchg
ljmp
xchg
in
pushf
ret
cmp
jge
out
push
jp
pop
pop
flds
pop
repz
pop
out
sarb
cli
jb
jno
xchg
mov
mov
gs
aad
std
stos
xlat
adcl
test
outsb
mov
and
jnp
lret
jge
fdivrl
adc
mov
iret
lret
adc
sub
xor
cmp
or
scas
or
and
or
aaa
ffreep
aas
push
inc
jl
mov
mov
mov
pop
mov
inc
mov
or
cmp
in
dec
roll
mov
stos
movsl
or
sbb
aad
xchg
lahf
jne
in
mov
leave
dec
sub
or
or
shl
adcb
xor
repnz
push
xchg
sarl
dec
ja
xlat
adc
mov
nop
sub
adc
and
leave
pop
mov
scas
in
cli
sbb
jecxz
out
mov
cltd
out
sub
sti
ljmp
scas
pop
mov
push
cmp
repnz
adc
enter
cld
jnp
mov
out
xlat
jbe
inc
push
push
sahf
add
subl
push
add
inc
pusha
xor
aas
testl
xor
cmc
push
add
sar
adc
jle
es
push
data16
pop
inc
pop
cld
std
sub
repz
jle
daa
xor
ja
ror
sahf
mov
jg
imul
xor
push
adc
cwtl
imul
lahf
xor
mov
cs
adc
call
add
push
out
ds
sub
and
imul
into
das
jae
dec
pop
leave
add
int3
mov
rorb
fsubrs
movsl
dec
jbe
inc
dec
sub
inc
insl
mov
cmp
and
cmp
cmpsl
mov
sti
cmpsb
sbb
test
mov
aas
aad
pop
inc
push
mov
pop
inc
add
xchg
subb
pop
cmpsb
leave
jp
or
arpl
nop
pop
mov
out
or
stos
subb
test
jne
add
call
mov
imul
jae
cli
mov
pop
das
repz
aam
popf
sub
das
sbb
push
jl
scas
outsb
push
fs
pop
movsb
mov
ja
dec
pop
adc
enter
aad
and
dec
cmpsb
push
cmpsl
inc
dec
sarb
jae
loope
cmp
push
dec
loopne
fsubs
bound
mov
test
mov
lret
mov
or
popa
xchg
in
ljmp
jo
xor
fsts
ds
pop
gs
popf
aad
push
jne
stc
sahf
aam
cmp
mov
mov
mov
aas
loopne
or
push
gs
mov
pop
dec
sub
arpl
out
not
int
xor
cmpb
insb
mov
aad
cmpsl
dec
out
or
int3
bound
lock
xchg
imulb
test
ss
inc
sub
fimuls
outsl
jge
pushf
cwtl
lods
cmc
sar
mov
cltd
xor
push
rep
dec
push
and
addr16
jo
rcl
push
ljmp
imul
shll
xchg
jne
push
jne
dec
jne
lea
aad
icebp
lock
bswap
stos
movl
jo
adc
push
or
mov
out
aaa
sub
push
adc
adc
iret
data16
in
in
jmp
int
inc
sub
orb
lcall
push
ja
jns
pop
sbb
push
popa
jo
fwait
xchg
jno
shrl
push
lds
jp
pusha
dec
scas
mov
fstl
push
jmp
outsb
ja,pn
hlt
mov
mov
push
mov
inc
ds
stos
mov
loopne
and
cmp
popf
sbb
jo
jbe
mov
inc
sbb
cmp
das
pop
cmp
scas
fidivrs
sbb
cwtl
int
cmp
ss
mov
xchg
mov
je
pop
out
addl
aaa
lods
jp
imul
xorl
jecxz
pop
stc
into
lahf
into
sub
sti
pusha
mov
mov
inc
adc
jbe
sub
ljmp
sbb
out
addb
xchg
or
shrb
mov
arpl
jo
icebp
adcl
cmp
rorb
push
test
pop
int3
outsb
call
pop
hlt
xlat
adc
in
mov
push
ds
inc
inc
nop
xchg
adc
mov
cmpl
out
icebp
jecxz
das
jg
adc
fs
pusha
cwtl
push
aam
add
scas
mov
repz
hlt
dec
and
cmpsb
cmp
xchg
orl
mov
fsubrl
test
rclb
shlb
mov
popf
mov
add
cmp
test
push
lcall
xchg
in
fcmovb
outsl
lcall
movd
incl
frstor
daa
cmc
mov
sbb
leave
stos
sub
cmp
cmpsl
vpunpckldq
dec
jb
inc
xchg
ret
mov
in
out
adc
filds
rcrb
imul
mov
xchg
fs
inc
or
cmp
sub
mov
outsl
cld
adc
sub
es
dec
sub
add
push
cltd
inc
push
and
jl
jge
popl
pop
sbb
and
push
add
inc
int
clc
pop
cwtl
add
jmp
mov
jo
in
sahf
mov
push
adc
aad
add
and
ror
aam
push
mov
frstor
push
insl
icebp
call
orb
insl
fcompl
pop
test
add
and
roll
push
leave
jg
test
rorl
mov
sahf
aad
sbb
dec
inc
sub
mov
mov
divl
addb
je
imul
adc
xchg
xchg
cmp
xchg
mov
pop
test
lds
pop
das
pop
mov
and
xor
imul
sub
push
pop
outsl
gs
cld
lret
push
sub
lods
ficomps
sub
movsb
inc
sub
stos
xchg
xchg
mov
in
imul
loop
mov
xor
mov
ret
dec
mov
aaa
dec
enter
fwait
js
add
das
lea
mov
pop
addr16
xchg
mov
inc
out
jp
test
add
pop
lock
adc
cmp
adcl
add
mov
mov
sbb
fisubs
jnp
dec
movsb
and
fisubrl
stc
in
addb
data16
in
lds
ljmp
and
test
dec
or
stc
sbb
lret
inc
ja
cvtps2pd
repz
shlb
mov
adc
add
aas
std
ds
mov
mov
push
shll
mov
addr16
dec
mov
aas
xchg
dec
or
cltd
ds
sub
dec
or
xchg
cwtl
in
pop
xor
sub
lahf
fcoml
test
call
cmp
aaa
scas
dec
push
mov
and
leave
push
mov
jns
lret
xchg
mov
loopne
and
mov
aam
mov
daa
mov
test
push
nop
inc
int
sbb
add
je
insb
xchg
jno
add
test
mov
imul
fidivrl
xorl
pop
cmp
idivl
xor
inc
sub
mov
std
rol
xchg
mov
xor
les
push
jnp
inc
pop
je
lret
and
mov
into
add
mov
fnstcw
loope
out
inc
std
enter
xchg
sub
iret
aam
pop
xor
das
xchg
repz
in
cmpb
mov
add
xor
sub
jmp
enter
hlt
xchg
jno
fcompl
test
inc
inc
adc
pop
popa
jb
push
out
xor
scas
pextrw
sub
js
or
out
fsubl
shlb
xchg
cmpsb
insb
add
lcall
das
adc
sbb
idiv
jl
or
test
jnp
sahf
jl
jecxz
lods
out
dec
mov
pop
js
mov
mov
xor
mov
sub
cmp
ret
xchg
pop
mov
and
mov
dec
lret
decl
lods
and
loop
incb
mov
loopne
stos
pop
sbbl
mov
fdiv
inc
es
or
dec
mov
mov
lret
inc
lods
movsb
es
ret
mov
dec
lods
push
mov
mov
mov
dec
cwtl
sbb
lcall
sub
out
or
jle
push
scas
fsincos
push
popl
xorl
clc
sbb
nopl
bound
jo
cmp
dec
in
std
mov
mov
jmp
popf
cmpsl
stos
leave
movsb
cltd
jno
and
movsb
cmpsb
jl
or
jle
outsb
xchg
movsb
xor
arpl
addr16
cmpsb
int3
clc
les
and
jl
adc
adc
adc
shrl
test
bound
les
cmp
push
cld
mov
dec
mov
popf
test
jne,pt
jecxz
insl
xchg
popa
xchg
movsb
cli
mov
adc
fcoml
enter
xchg
pop
arpl
ds
xor
cwtl
scas
mov
mov
in
in
ret
and
add
inc
push
push
cmp
mov
mov
jmp
pop
lahf
add
sti
push
cmpsb
mov
xchg
dec
idivb
daa
jno
mov
adc
and
inc
movsl
repz
movsb
in
adc
mov
in
outsl
adc
mov
call
fsub
imul
fucomp
xchg
cmp
fcomip
aad
jmp
and
sar
cmpsb
jo
push
negb
inc
cmp
dec
incb
daa
cmpb
and
mov
aaa
pop
inc
add
or
and
and
mov
cmpsb
cmpsl
lds
pop
inc
jb
das
push
fistl
pop
mov
arpl
xlat
out
xchg
mov
dec
cmp
test
rorl
addr16
jmp
movsb
rclb
out
daa
mov
push
sbb
clc
daa
push
stos
aam
stc
pushf
inc
into
pop
ret
and
xchg
jne
aam
xchg
mov
sahf
loop
mov
aad
jl
pop
jl
push
and
xchg
jle
loop
bound
orb
add
mov
lea
sbb
push
mull
mov
pusha
pop
inc
adc
test
sti
push
adc
mov
out
mov
sti
mov
jmp
lea
test
mov
push
add
jno
test
cmp
mov
loop
idivl
adc
xchg
adc
jg
outsl
ds
jo
push
cmp
push
xchg
aas
int
lods
mov
adc
inc
pop
lds
lret
repnz
sub
sahf
andb
insb
mov
cmp
xchg
xchg
imul
mov
inc
outsb
mov
sub
rcrb
dec
cmpsl
adc
push
insb
pop
int3
dec
repz
inc
or
lahf
nop
bound
lock
in
scas
aam
add
mov
mov
mov
pop
add
and
out
add
out
mov
mov
mov
lock
sub
cmp
sbb
lds
outsl
outsb
rcrb
fs
daa
fisubrl
rcll
jbe
jbe
inc
je
ret
clc
shll
inc
xor
xchg
push
add
hlt
fnstsw
fisubl
lock
cmp
adc
bnd
negb
lret
iret
lods
and
and
mov
and
pop
hlt
push
adc
inc
in
push
or
adcl
in
push
pop
pop
sti
aad
push
mov
add
arpl
jmp
stos
xor
lret
dec
imull
pop
imul
ret
arpl
cmp
sbb
out
das
push
pop
inc
sub
xchg
pop
inc
push
xor
pop
cmp
or
jge
popf
dec
or
add
xor
pop
nop
fistps
push
adc
or
xor
adc
pushf
cmp
addr16
lahf
pusha
pop
or
pop
fwait
dec
or
rclb
inc
add
movsb
or
jns
neg
sub
add
sbb
mov
pop
rorl
mov
out
mov
ja
mov
vsqrtss
cmp
and
roll
jle
cmp
cli
sub
mov
sbb
mov
shrl
dec
fiaddl
lret
mov
dec
pop
ljmp
negl
fbstp
repnz
adc
mov
xor
add
and
jge
fmull
adc
out
mov
test
stc
and
jl
nop
and
and
jecxz
stc
stos
testl
cmpsl
xor
inc
pop
and
xor
push
fildl
fucom
push
in
adc
dec
sbb
xor
aad
stc
es
pop
popa
jmp
add
shlb
pop
mov
lahf
js
dec
pop
int
mov
push
mov
mov
js
pop
pop
push
cmp
insl
jae
in
cmpb
mov
cmc
data16
xor
mov
aad
fs
adc
jge,pt
dec
and
mov
scas
mov
dec
in
fcmovu
popa
pop
lds
out
es
rcrb
dec
loopne
test
testl
dec
mov
adc
test
outsl
fldenv
std
jl
insb
mov
iret
imul
mov
outsb
leave
pop
cmc
mov
and
rclb
jecxz
xchg
pop
xchg
jmp
je
and
cli
mov
xor
xor
scas
inc
mov
and
xor
jmp
adc
leave
pop
dec
mov
imul
dec
add
shl
mov
inc
cli
adc
sbb
frstor
imul
iret
repz
xchg
fdiv
fs
xor
mov
in
adc
insl
push
outsl
pop
push
xor
ret
sub
cmpsl
mov
jb
sbb
popf
jp
sub
out
fdivl
and
repz
lcall
pmaxsw
sbb
jnp
dec
test
pop
push
popa
jge
xchg
ret
inc
xchg
inc
inc
adc
mov
imul
sub
lcall
add
clc
fcomps
aam
dec
std
mov
fildll
in
or
push
push
sub
mov
and
jo
pop
stos
mov
mov
pop
xor
mov
cmp
mov
mov
ret
add
sti
in
sbb
jmp
and
out
xchg
xor
sub
iret
enter
pop
pusha
cmc
testl
mul
aad
pop
jmp
jle
bound
sarl
mov
fadds
out
jp
pop
dec
or
mov
aas
mov
es
and
mov
pop
lcall
loop
enter
sbb
incb
bound
popf
add
and
cwtl
xor
int
sub
ss
clc
add
push
cli
and
cmp
shrb
dec
mov
or
inc
fadds
cltd
sbb
jno
addl
cmp
push
mov
cli
jge
fisubl
sub
int3
ret
cld
inc
sub
ds
leave
out
cld
add
femms
mov
outsb
jmp
push
and
xchg
je
std
jbe
push
add
push
cli
into
mov
movsb
or
cmc
mov
out
loope
cmp
rol
scas
shl
cmp
pop
mov
repz
imul
stos
addb
mov
push
dec
lret
int
int3
or
or
pusha
or
mov
push
push
fisubs
xchg
insb
push
cli
mov
sti
adc
sti
and
mov
jnp
mov
in
xchg
lret
dec
sub
xchg
dec
inc
jnp
pop
cld
lds
xchg
push
jno
pop
sahf
popf
fisttps
dec
movsb
mov
scas
mov
jp
fisttps
xchg
push
jmp
imul
or
or
adc
test
xor
and
push
sbb
sub
mov
sub
dec
add
orl
push
mov
outsb
in
pop
sbb
out
push
or
icebp
mov
and
mov
stos
mov
dec
add
dec
in
push
sbb
fidivs
imul
jg
lods
xchg
mov
lcall
mov
sbb
inc
out
dec
push
jecxz
lods
add
lret
insl
xchg
inc
inc
outsb
mov
out
or
or
ud2
lret
out
xchg
mov
adc
mov
mov
xor
gs
lahf
test
out
inc
or
loop
xor
lea
add
out
ret
or
cmp
bound
dec
lret
icebp
xchg
sub
cmpsb
mov
jns
pop
sub
jge
sbb
xor
xchg
out
fsubp
mov
dec
test
repnz
popf
lret
outsl
mov
inc
adc
pop
loopne,pn
dec
cwtl
scas
add
roll
jge
push
mov
inc
mov
adc
mov
pop
popf
xchg
test
mov
sbb
push
daa
stos
iret
mov
mov
cmc
std
push
sbb
pushl
ja
and
jne
or
adc
sbb
or
dec
pop
xchg
cli
jbe
inc
push
jge
ret
enter
lret
lahf
and
add
lock
call
aad
repnz
cld
jle
icebp
cmc
sub
mov
js
push
mov
hlt
pop
jp
pushf
fcmovb
lcall
sahf
xlat
arpl
roll
pop
xor
stc
mov
nop
outsl
int
pop
sbb
out
cmpsb
loop
pop
push
mov
adc
xchg
test
sub
stc
fsts
cmc
cmpsl
leave
pop
cli
add
xor
push
or
mov
test
mov
nop
xor
xor
jns
pusha
jb
outsl
into
notl
std
test
pop
hlt
cwtl
dec
cmp
sub
inc
sbb
jmp
lahf
pop
mov
and
sahf
call
dec
outsl
ja
pop
addr16
sbb
adc
inc
push
jae
cmpsb
pusha
fsubs
cmpsl
rclb
inc
mov
ret
xor
mov
xchg
add
imul
imul
jg
sbbb
jns
shll
mov
cmc
mov
testb
jp
dec
add
outsl
mov
inc
add
inc
cwtl
aas
pop
sbb
cmp
sbb
or
mov
mov
inc
cmp
fbstp
sub
mov
repz
dec
mov
or
int
jle
push
imul
cli
sbb
adc
jle
dec
test
cmc
xor
xor
jg
repz
loop
mull
mov
mov
xor
jl
in
sbb
or
bound
pop
jo
and
icebp
bound
aas
int3
push
stc
sbbb
fistl
in
inc
jmp
int
or
ljmp
in
cmc
inc
and
xchg
pusha
imul
mov
in
push
jl
mov
jb
out
scas
cwtl
and
and
fwait
xchg
or
mov
clc
jb
fucom
ljmp
sbb
inc
sub
xchg
enter
xchg
out
mov
pop
fld
dec
xlat
addr16
cmp
out
and
sbb
cmp
xchg
or
out
adc
ljmp
pushf
das
stos
push
pop
enter
adc
cmp
xor
mov
arpl
push
outsl
mov
call
popa
clc
add
mov
mov
decl
mov
mov
arpl
into
out
and
adcb
rcrb
rcrl
punpckhbw
and
fstps
push
iret
jb
outsb
ret
jbe
lahf
es
out
iret
int
in
icebp
sbb
rcl
or
lds
mov
or
xorb
cltd
movsb
popa
insl
cs
jb
push
sarb
or
repnz
sti
xor
cmp
sub
movsb
or
pusha
cltd
lret
xlat
pop
mov
or
movl
dec
rcl
sbb
out
ljmp
outsl
es
repnz
dec
mov
pop
jne
inc
movsl
xchg
sbb
notb
rcll
test
imull
mov
les
pusha
shlb
icebp
movsb
jg
inc
mov
mov
sub
and
xchg
out
push
xchg
lods
popa
std
or
outsb
mov
xchg
mov
loope
xor
imul
or
mov
pop
cld
push
xchg
rcrb
mov
and
sub
stos
test
jno
cwtl
dec
jge
jmp
add
outsb
push
inc
cs
cli
push
nop
sbb
sub
js
and
movsl
xor
sub
mov
jp
jmp
jecxz
jecxz
enter
and
popa
pop
xchg
aas
mov
scas
xchg
add
mov
imul
push
push
add
cmp
idiv
outsl
mov
clc
pop
jbe
jecxz
mull
test
and
mov
rorb
frstor
sbb
xlat
adc
lret
testl
mov
and
sahf
std
mov
sarb
adc
xchg
in
mov
call
push
sbb
pop
inc
xor
or
std
inc
insb
adc
sub
inc
mov
pushf
dec
mov
outsl
pop
push
mov
xor
lds
jp
in
rep
loop
dec
popf
stos
xor
rcr
push
popa
push
push
jb
aad
out
ds
cmp
enter
sbb
jmp
iret
jp
jge
std
mov
negl
aas
push
and
jbe
push
inc
andl
xchg
cmc
pop
xchg
out
scas
push
and
cs
lea
adc
popf
pop
sub
xor
cmovae
jl
fsubl
dec
test
mov
jne
repnz
outsb
sti
das
mov
push
fidivrs
cmp
xor
pop
popl
daa
pop
push
in
lcall
sbb
dec
ljmp
pop
pop
and
daa
cld
loope
es
fwait
inc
pop
das
es
pop
inc
lret
testl
jbe
bound
xchg
jno
mov
mov
test
ret
jge
jnp
cmp
sti
aas
insb
jno
and
mov
adc
das
mov
sahf
adc
fisubrl
and
jo
jecxz
or
xchg
cmp
int
in
adc
mov
add
sahf
ljmp
mov
sbb
ret
push
ficomps
mov
mov
fisubrl
mov
imul
dec
or
xchg
cwtl
or
inc
lea
repz
loop
and
insl
sub
mov
insb
inc
movsl
mov
inc
cmp
fmul
scas
lahf
xchg
enter
mov
mov
scas
sahf
jnp
in
enter
hlt
stos
or
divb
or
cmpsl
js
aam
decl
je
popa
inc
mov
sti
es
lods
out
or
add
enter
aas
out
sbb
scas
and
sub
ret
stc
push
pop
fcmovnbe
add
mov
ret
fs
adc
repz
shl
cmp
scas
fwait
push
stos
dec
pop
adcl
mov
mov
xor
imull
movsl
push
mov
test
pop
sub
mov
jno
sbb
xchg
mov
xor
mov
cli
cmovne
lret
mov
xor
mov
dec
inc
or
inc
jmp
inc
rorl
scas
pop
and
mov
cmp
inc
inc
mov
loope
nop
ffree
xchg
pop
out
xor
call
mov
jns
dec
loop
add
repz
leave
push
ljmp
lcall
xchg
in
and
les
fnstsw
lret
bound
in
push
fdivr
mov
and
loope
adc
shl
mov
push
jns
xchg
push
jno
sbb
jne
and
mov
popw
add
sti
repnz
das
sub
cli
int
pop
jp
mov
ds
scas
pop
insl
xchg
mov
rolb
shlb
xchg
aad
sahf
fldl
imul
xchg
in
mov
shlb
add
push
pop
and
push
dec
fs
xor
jno
sub
mov
popf
mov
dec
loopne
imul
mov
jns
sahf
ffreep
sbb
inc
add
subb
adc
or
ret
adc
sbb
ja
cltd
dec
out
loopne
dec
aam
push
cmp
add
mov
sbb
push
jg
mov
rclb
faddl
in
pop
out
sahf
pop
mov
fdivrl
dec
aas
inc
test
cltd
jmp
xchg
sbb
iret
bound
mov
sub
daa
orb
lods
mov
daa
pop
cmp
sub
push
mov
into
dec
repnz
sbb
lods
rcrl
fwait
int3
popa
rol
cmp
mov
mov
aaa
push
cmp
cmp
test
sub
rcrb
out
inc
cwtl
sub
jo
pushf
sti
sub
lahf
fisubrs
nop
loopne
adc
leave
inc
and
std
lock
sbb
push
mov
loope
mov
mov
call
sub
cltd
rclb
aad
and
add
jnp
out
mov
or
add
pusha
xlat
add
adc
and
fbld
outsb
imul
push
cmpsb
lds
jle
and
je
imul
pop
lea
inc
pop
hlt
inc
push
jae
mov
cmp
cld
xchg
test
inc
jno
mov
pop
add
fdivr
jne
mov
jno
mov
push
sahf
out
idivb
mov
mov
lods
xlat
sbb
je,pn
out
add
ja
pop
sub
int3
cld
cmpsb
popa
push
ret
inc
das
cmp
adc
inc
mov
mov
pop
mov
mov
jp
mov
cwtl
setbe
insl
mov
les
aas
mov
xchg
xor
cltd
lea
xor
adc
push
sbb
rol
jae
pop
inc
rcll
jecxz
push
dec
cld
daa
jmp
out
fldt
insb
scas
jge
xchg
rorb
add
mov
out
stos
scas
daa
xor
xlat
les
pop
push
decb
loop
adc
adc
or
add
or
fdivs
out
shll
add
sbb
mov
adc
sti
test
mov
dec
dec
push
inc
xchg
lcall
sub
sti
ret
dec
mov
call
lock
jl
bound
das
sbb
mov
hlt
xchg
sbb
js
dec
sub
fcmovne
aam
dec
lahf
ds
jmp
and
in
adc
in
mov
sti
scas
mov
out
add
cmp
ss
aam
stos
aad
incb
popw
lcall
fwait
mov
movsb
jne
lds
pop
dec
sub
inc
push
jae
jl
into
and
add
jns
aas
xchg
aas
pop
test
jmp
cltd
sub
inc
mov
bound
insl
mov
fldt
psubw
or
rorb
fists
stos
fcmovne
sahf
ror
cwtl
xor
fsubl
add
lahf
or
xor
shlb
dec
xchg
loop
and
xchg
mov
shlb
inc
dec
xchg
mov
mov
and
repz
lds
fmull
sub
mov
aas
arpl
add
cmp
incl
or
negb
out
gs
jno
hlt
movsl
mov
ljmp
lock
das
sbb
pushf
xor
fmull
mov
jb
push
les
push
jl
repnz
mov
insb
aam
cmp
mov
dec
cmp
sahf
stc
mov
cwtl
dec
dec
aad
mov
mov
hlt
add
pop
rcrb
out
sbb
lods
fdivrs
dec
fneni(8087
dec
dec
jb
cmpsl
push
pop
xorb
push
pop
or
mov
mov
aas
xchg
inc
test
movsl
outsb
popa
sahf
mov
movsl
dec
push
pop
cwtl
shrb
mov
lods
cld
shlb
out
sbb
dec
push
mov
jnp
cld
je
in
sub
or
or
xchg
sbb
or
lods
cmp
inc
pop
in
pop
jb
je
jle
sbb
dec
push
jl
fwait
sub
into
pop
shlb
lcall
mov
loopne
jl
fwait
jno
lods
roll
icebp
bound
sbb
jne
adc
inc
cmovnp
loop
loope
fwait
int3
hlt
rol
data16
lods
dec
pop
cmp
dec
ret
or
xlat
mov
fwait
notl
pop
inc
les
lods
push
cmpsl
add
or
cmp
xor
or
sbb
and
lret
cmp
cmc
and
cwtl
insb
imul
icebp
jg
scas
xchg
jp
pop
lcall
add
jg
mov
les
jmp
xchg
xlat
pop
fstps
test
adc
sbb
adc
fdivr
repz
push
repz
add
xor
arpl
sub
aam
add
vpunpcklbw
jmp
fistpll
xlat
inc
shlb
mov
xor
dec
cwtl
mov
in
and
mov
aad
and
dec
mov
mov
fs
sbb
pop
ljmp
push
cmc
dec
mov
fistps
in
cmp
out
ss
lock
sub
mov
test
adc
mov
mov
pop
cmp
pop
testl
push
mov
cmpsl
jno
nop
jp
pop
push
out
cltd
lahf
rcrb
pusha
mov
mov
aas
adc
jns
pop
sbb
mov
sub
push
fs
inc
fildl
jl
xor
shlb
pop
xchg
mov
add
sbb
outsl
pop
mov
mov
out
jle
mov
andb
jbe
mov
push
jmp
xchg
mov
add
sahf
jbe
movsl
and
jae
pop
and
test
jbe
jo
shl
xchg
pushf
fwait
pop
mov
in
jbe
les
mov
and
push
mov
call
sbbl
jle
dec
xor
arpl
cmpsl
jb
push
sti
sub
xchg
rcrl
loop
cmp
fs
subl
sub
fimuls
pop
dec
je
mov
xchg
sub
mov
loope
rolb
stos
adc
and
push
mov
sbb
mov
jp
dec
adc
xchg
fidivl
dec
popf
mov
cltd
jl
andb
xchg
cmp
loope
sbb
addb
int3
sbb
push
in
sub
out
rolb
negb
or
imul
push
in
jecxz
ljmp
pop
loopne
enter
fistps
push
call
jno
or
je
push
jb
inc
jg
aaa
insl
loopne
dec
xchg
pusha
aad
push
out
scas
lods
aam
ss
out
xor
pop
push
mov
jnp
imul
mov
dec
frstor
imul
sbb
bound
pop
movsl
repnz
push
in
fildl
into
int
and
flds
mov
inc
adc
dec
repz
daa
mov
lock
leave
mov
cwtl
sub
sti
xorl
outsl
jl
jns
ret
lahf
pop
push
jecxz
push
ficoms
or
mov
mov
and
dec
xchg
int
imul
mov
adc
pop
inc
pop
std
ret
mov
mov
cmpsl
mov
push
mov
fidivl
imul
and
rolb
stos
mov
jge
imul
pusha
data16
pop
push
push
movq
xlat
pop
mov
and
int3
lock
adc
gs
jne
test
fstpl
scas
cmp
ror
inc
lea
mulb
and
mov
daa
fstps
jecxz
lcall
cmp
data16
jbe
xor
lock
shrb
mov
jnp
call
and
test
push
rolb
mov
rorb
mov
mov
xlat
jae
add
push
ret
nop
xor
test
jb
test
outsl
xchg
dec
ss
subl
add
mov
ror
adc
orl
and
sub
mov
xchg
mov
cs
cld
int3
out
negl
push
dec
jecxz
mov
hlt
nop
cs
jae
push
stc
push
mov
in
jl
in
adc
mov
gs
sub
push
rcr
dec
mov
lea
call
mov
push
inc
repnz
xor
scas
imul
add
xor
int3
into
jae
push
std
push
test
in
into
je
and
or
push
xor
pop
in
testl
push
mov
jg
xchg
sbb
loop
shr
test
jge
movsb
mov
push
xor
pusha
test
fidivrl
adc
lcall
mov
dec
pop
adc
xchg
stos
shll
pop
insl
cmp
sub
sbb
lods
dec
loopne
add
mov
int
mov
jae
out
add
mov
xchg
add
mov
add
mov
mov
and
lock
and
mov
dec
jae
lcall
dec
pop
push
lds
repz
cmp
jne
lret
ret
jmp
sbb
xor
incl
mov
sti
pop
adc
hlt
mov
fsubrp
pusha
dec
call
jae
cmp
call
jg
scas
loopne
je
sub
sbb
cmc
mov
lahf
push
dec
sbb
jmp
mov
fcompl
sbb
imul
push
shlb
cmpsl
jge
enter
xchg
push
jp
jb
mov
out
xor
mov
xchg
iret
shl
push
sbb
icebp
mov
mov
stc
ss
je
addl
xor
inc
xchg
outsl
sub
jl
out
push
shr
rorb
imul
lods
aas
xchg
scas
aas
mov
enter
sti
adc
movsl
das
clc
xor
lds
push
jb
adcb
repnz
lea
aas
stc
xor
jp
push
test
dec
loopne
popa
clc
push
hlt
lods
out
cmp
lcall
push
in
mov
add
sub
adc
mov
aam
pop
mov
into
and
cmp
fcoml
inc
mov
xchg
and
sub
inc
cld
js
aam
add
cld
mov
xchg
ret
sar
inc
gs
sbb
outsb
lret
scas
ret
test
and
push
xchg
add
xchg
mov
mov
add
add
mov
mov
mov
mov
xchg
mov
adc
dec
hlt
lods
roll
mov
popa
int
repz
dec
call
outsl
sti
gs
dec
cmp
jo
dec
dec
mov
pop
lcall
cmp
faddp
adc
mov
mov
inc
dec
cmpsl
or
push
mov
mov
shll
mov
out
mov
or
pop
insb
cmp
repz
lea
cmp
jl
pop
dec
lods
test
sub
jg
pop
hlt
fucom
jnp
scas
xchg
fsts
cmp
popl
dec
int
pusha
jle
aam
lret
cmp
fisubl
scas
inc
arpl
roll
shr
dec
sub
call
std
sbb
jb
push
movsl
bnd
xchg
es
cmp
out
pop
pop
jo
imul
addr16
inc
or
sub
enter
sub
xchg
sbb
mov
subl
pop
test
mov
mov
outsl
dec
cld
data16
aas
or
imul
dec
iret
jbe
scas
nop
sub
daa
pop
mov
xchg
xchg
pop
inc
xchg
je
mov
enter
neg
repz
setbe
in
cmp
fs
dec
ficoms
lock
mov
into
aam
and
mov
adc
push
mov
cwtl
jb
sbb
dec
cwtl
push
cmp
inc
js
dec
sti
movsb
push
dec
ret
fldenv
sbb
in
inc
icebp
xor
sbb
adc
cld
rcrb
xlat
push
mov
pop
lea
jbe
push
jae
mov
dec
stos
xor
xchg
dec
popf
xor
mov
push
pop
sub
out
mov
fsubrl
inc
pop
xchg
in
dec
xchg
sub
jg
iret
and
cmp
mov
clc
sbb
and
daa
mov
inc
mov
mov
mov
int
int
jb
sbb
stc
xchg
push
and
test
jns
insl
aad
cltd
in
dec
jbe
xchg
int3
lret
mov
ljmp
iret
inc
ret
repz
jp
test
aaa
push
cli
and
popf
or
push
xchg
xchg
sbb
push
xchg
fidivs
mov
sub
dec
aam
sub
call
jmp
inc
jecxz
fiaddl
xor
mov
push
inc
cmpsl
sahf
dec
jg
enter
movsl
iret
loopne
push
cmpsl
dec
dec
sarb
std
imul
call
lcall
jge
lock
sbb
ja
mov
in
loope
stos
mov
nop
sbb
add
fimuls
das
adc
inc
fwait
mov
lock
pushf
jl
adcl
stc
add
repnz
inc
test
jns
mov
enter
out
push
dec
and
mov
jb
mov
loop
cwtl
insl
xchg
test
jns
push
jno
pop
je
adc
imul
inc
jne
movsb
icebp
mov
out
icebp
dec
js
popa
das
btr
outsb
mov
dec
dec
push
stos
or
jp
mov
divl
sbb
push
mov
adc
xor
bndldx
add
stc
ret
pop
and
pop
inc
xchg
jno
int
and
out
scas
adc
lods
xor
movsl
imul
mov
lods
jb
lds
sbbl
mov
int
rep
xor
mov
push
fistl
mov
arpl
nop
add
cwtl
mov
dec
repnz
push
mov
xchg
fwait
adcb
rcr
dec
lahf
push
push
inc
ret
std
rorl
xchg
aaa
push
test
fwait
call
pop
mov
mov
xchg
mov
pop
xchg
add
dec
mov
jmp
out
je
dec
lahf
jae
jne
test
in
mov
cld
dec
scas
les
fstp
jge
xchg
roll
sub
add
mov
jge
mov
and
int3
scas
inc
insl
and
and
aaa
xchg
sub
cwtl
out
lret
fldenv
lcall
pop
outsl
xlat
into
fsub
into
add
outsl
xchg
pop
cs
mov
xchg
sub
idivl
push
pop
and
sub
lret
dec
inc
out
push
or
jno
test
mov
ljmp
cmp
sbb
or
push
sub
bound
xchg
scas
add
popf
call
jo
fwait
mov
mov
sub
test
push
fs
adc
iret
and
mov
jae
dec
outsl
lods
stc
aaa
and
push
push
or
mov
push
movd
arpl
popf
sarl
data16
dec
dec
sbb
push
pop
pop
mov
mov
in
imul
imul
mov
out
shrl
ss
mov
icebp
sub
das
jge
test
insb
jmp
shr
iret
imul
add
and
and
mov
mov
in
mov
adc
icebp
adc
push
cmp
int
aam
mov
adc
sub
xchg
xchg
out
or
or
sti
xor
pop
add
mov
sbb
sub
sbb
nop
gs
jns
jno
inc
mov
mov
repz
cmpsb
cli
inc
andb
insl
sti
or
push
xor
or
xchg
fiadds
pop
jecxz
pop
jne
out
inc
pop
jno
inc
jae
add
and
mov
jle
xor
jecxz
jno
jb
mov
push
fisubrs
stos
daa
cld
gs
insl
xor
sbb
xchg
xchg
cmp
adc
push
popa
and
bound
lea
daa
xchg
cmpsb
cmp
jp
dec
arpl
in
xchg
aaa
test
sbb
gs
jmp
xor
bound
cli
fistl
enter
cwtl
mov
or
push
pop
xchg
fsubr
mov
hlt
fwait
xchg
mov
addr16
sub
and
jae
mov
add
jae
xchg
cs
rclb
add
xchg
sti
xchg
pop
test
arpl
test
in
mov
jge
rcrl
stos
xor
cmp
cwtl
sbb
cltd
imul
movsl
mov
push
dec
loop
pop
xchg
es
ja
test
mov
jo
sbb
inc
cltd
mov
popf
add
fwait
stc
xor
mov
inc
lods
xchg
xor
cmp
ljmp
cmp
fdivrp
popf
mov
test
lret
cltd
add
outsb
mov
popl
je
loop
imul
sub
leave
push
int3
adc
lret
bswap
test
and
sahf
pusha
xchg
cmp
fwait
xchg
enter
jp
mov
sarb
fcomps
mov
pop
fnstenv
fdivrl
lcall
or
and
mov
in
add
push
or
dec
shll
imul
jae
out
mov
stos
jecxz
pop
cwtl
dec
dec
lods
pusha
imul
jl
pop
icebp
pop
in
popf
cmp
add
mov
cmp
sbb
aad
jns
enter
sbb
outsb
add
enter
cmpsb
std
push
aad
cmpsl
mov
xor
sub
idivl
add
sbb
fs
es
lods
push
sub
sub
xor
fsubl
mov
push
ret
rorb
into
in
cmpsl
sub
aaa
adc
cmp
shl
loop
rcrb
mov
lret
pop
xor
cld
enter
jbe
ja
cwtl
push
std
xor
jmp
insl
xor
movsl
repz
rcrl
sbb
loop
shrl
pop
mov
or
mov
adc
push
xchg
sub
dec
lcall
in
sar
xor
adc
add
roll
xchg
pop
loop
fistpl
xchg
out
add
loopne,pt
and
daa
jl
add
js
inc
mov
ljmp
lds
pop
dec
test
mov
scas
dec
mov
mov
inc
push
es
cmpsl
fsubl
adc
mov
mov
test
int3
add
jnp
divb
idivb
cmpl
dec
enter
mov
jnp
xchg
jae
rorb
ret
push
icebp
and
aam
lret
and
mov
sbb
outsb
push
adcl
pop
jge
mov
nop
scas
test
aas
cmpl
dec
xor
fcmovnbe
cmp
xorl
int
lods
or
aaa
dec
movsb
xor
lcall
inc
call
sbb
imul
fnstsw
fcmovnb
mov
mov
dec
and
test
test
cltd
out
mov
inc
clc
enter
mov
les
xchg
sbb
dec
push
call
xchg
push
mov
rcr
cmpsl
jmp
rolb
in
and
pshufw
or
stos
jne
xchg
dec
lock
mov
in
sahf
xor
push
lds
jae
pusha
jmp
xor
aaa
cmc
sub
sbb
cmp
lret
inc
xchg
aad
or
mov
test
adc
outsl
xchg
inc
arpl
inc
jnp
dec
imul
out
arpl
xchg
jae
cmp
add
or
lods
pop
in
xchg
xchg
sar
fsubrs
negb
fcoml
popf
dec
jno
sbb
jns
mov
xchg
cmp
xchg
adc
sbb
cmpsl
push
xor
mov
mov
sub
mov
imul
cwtl
popf
and
loop
adc
mov
je
push
test
call
or
insb
lret
sub
daa
ss
repnz
mov
incl
jbe
fs
arpl
mov
adcb
rcrl
ss
test
ret
and
call
aam
sub
shlb
orl
adc
cmp
iret
mov
xor
jmp
mov
xlat
add
pop
pop
pop
mov
push
cmp
jne,pt
cmp
dec
and
inc
inc
add
push
mov
scas
pop
test
icebp
cmpsb
clc
xor
xchg
out
mov
out
add
negb
aad
push
add
or
jae
cli
mov
mov
inc
into
aas
sub
fwait
int
icebp
mov
jbe
ss
lock
lret
fld
in
int
mov
jg
insl
cmp
movsb
ds
in
ftst
and
sbb
xchg
shll
sub
fisubrl
ficompl
das
cwtl
pusha
into
jns
ret
pusha
aaa
test
repz
and
pop
dec
xchg
in
push
cli
stos
out
push
es
mov
adc
aas
or
cld
jle
add
mov
add
imul
jnp
jbe
call
inc
and
lea
pop
dec
inc
mov
jg
repnz
add
pop
test
dec
fld
push
hlt
xchg
daa
or
jae
rorb
add
arpl
jae
cmp
orl
pop
out
sbb
push
xor
movl
xchg
jge
fprem1
out
pop
outsl
cmpsb
sbb
psllq
divb
sahf
jp
out
cltd
shrb
cmp
scas
pusha
jae
mov
mov
xchg
cltd
sub
cmp
andl
or
test
scas
call
ret
xor
cld
rolb
cmp
jae
add
bound
mov
js
inc
jb
add
xor
dec
inc
fucomip
shll
jp
repnz
mov
das
dec
add
sahf
xchg
andb
cs
push
int
or
adc
cmc
ret
es
cli
mov
inc
inc
cs
add
xor
fsts
pusha
js
pusha
adc
mov
push
or
fsubrp
cli
test
cmpsl
jp
dec
dec
pop
fs
and
xchg
mov
setb
jmp
and
mov
fsubrl
and
ficomps
mov
push
inc
and
inc
lock
clc
ret
inc
and
jne
in
sub
cld
sbb
ret
gs
repnz
bound
jo,pn
mov
sarb
xchg
mov
mov
mov
test
fwait
imul
popa
shll
adc
scas
cmp
fwait
mov
out
ret
jbe
mov
popf
inc
bound
add
repnz
addr16
ja
jmp
xor
or
adc
xor
adcl
call
jns
cltd
sub
xor
out
test
shlb
mov
and
cmp
sub
sti
cmpsl
adc
jns
cs
aaa
fucomp
sbb
aas
insb
cmp
mov
loop
out
rcl
popf
xchg
bound
popa
sub
mov
dec
push
mov
xchg
push
xor
mov
pop
out
sub
fisttpl
movsl
daa
jmp
cli
loopne
and
mov
inc
xchg
sbb
mov
push
mov
lret
rcrb
inc
stc
and
fbstp
mov
sub
sub
push
dec
addr16
pop
mov
and
imul
gs
pop
loopne
adc
xchg
inc
in
sub
jmp
dec
mov
jle
test
stos
or
push
in
incl
test
or
int
ror
fwait
pop
outsl
jb
pop
push
std
movsb
cmp
push
out
add
jecxz
imul
and
aas
test
adc
push
call
pop
xchg
je
inc
adc
arpl
add
mov
mov
es
mov
lock
cli
fwait
movsb
xlat
ret
and
push
hlt
pop
adc
clc
sub
lahf
outsb
pop
imul
lahf
xchg
push
sub
ret
mov
and
cld
sbb
dec
pop
sub
loopne
ret
test
psubq
sbb
push
cmp
in
insl
mov
lret
ljmp
lds
bound
jne
int3
clc
loope
fsubr
dec
rclb
lock
and
ficomps
cmc
outsb
xor
mov
add
and
push
pop
and
dec
stc
out
jp
pop
test
js
cmp
loop
test
cmp
test
xchg
sbb
inc
imul
mov
aam
sub
pop
subl
movsl
or
xchg
out
jo
in
aas
sbb
mov
addb
push
pop
adc
jl
scas
int
popa
xchg
sbb
lret
mov
and
cwtl
and
aas
and
add
push
lcall
sti
mov
test
fwait
pop
xchg
sbb
inc
jne
bound
push
testl
push
and
jp
mov
dec
pop
push
mov
cmp
and
and
ficoml
xchg
push
cmp
mov
jp
out
int
es
insb
jnp
pop
mov
push
add
stos
inc
or
mov
xor
loopne
xor
sub
mov
jnp
xor
adc
inc
or
cmp
xchg
jns
inc
aaa
xor
ds
lea
xor
mov
or
pop
data16
ret
mov
xchg
scas
out
mov
ret
call
push
sarb
lcall
pop
dec
imul
mov
aam
inc
test
mov
sub
and
lret
mov
xor
ss
xchg
dec
call
js
loop
popa
mov
adc
sub
arpl
mov
sub
fisubrl
enter
push
jae
aam
mov
stos
mov
orl
cmpsl
jne
dec
or
dec
clc
loop
or
mov
ss
push
push
mov
jno
and
scas
scas
mov
sub
ss
xorl
shlb
rcrb
push
jnp
ret
or
pop
or
test
imul
jle
arpl
or
jne
sti
fistl
pop
pop
out
or
or
or
xchg
fldt
test
add
data16
inc
dec
add
out
divl
out
icebp
sahf
mov
jb
sarb
adc
shrl
jne
jg
or
xchg
and
fwait
sbb
imull
ja
add
push
mov
stc
call
xchg
fldl
aas
pop
lcall
jae
aad
sbb
dec
cmc
pop
pop
imul
or
adc
dec
or
or
cmp
cld
lock
movsb
sbb
je
mov
add
cltd
out
mov
xor
insb
add
sub
push
ss
mov
and
movsl
pop
xchg
adc
mov
pop
cmpsl
in
ds
mov
rclb
ljmp
or
in
les
or
pop
div
push
and
push
in
in
into
pop
rorb
loope
lock
mov
sahf
xor
adc
sub
push
xchg
imull
add
cs
cmp
popf
aaa
lahf
mov
jmp
fimuls
pop
inc
adc
movsl
inc
pop
mov
adc
jg
inc
in
stos
xor
stos
or
adc
or
int3
adc
xor
insb
jg
push
xor
xchg
dec
ret
ror
ds
ficoml
inc
in
insb
jg
in
jge
pop
test
adc
leave
mov
sarl
jne
ss
hlt
mov
xor
mov
jecxz
or
js
ret
cmpsl
xchg
iret
sub
cli
sarl
int3
lcall
rorb
and
mov
imul
in
imul
jb
push
inc
jne
or
andl
stos
sub
sub
dec
dec
xor
push
and
or
shlb
loop
mov
popa
push
dec
inc
adc
cmp
dec
jns
jle
scas
sbbb
dec
push
or
pop
scas
jmp
add
mov
in
xchg
inc
cmp
xchg
pop
decb
nop
cmp
xchg
xchg
xchg
movsb
lea
movsb
jl
xor
into
mov
je
pop
adc
dec
sub
out
adc
and
pop
adc
clc
scas
test
xchg
add
jno
in
cmp
nop
jmp
inc
movsl
cmp
xchg
xchg
enter
pop
xchg
shlb
lcall
mov
int3
pusha
movsb
out
sub
adc
adc
xor
jae
imul
ret
push
xchg
push
test
incb
xchg
xorl
xchg
jl
cmp
aas
adc
mov
aam
mov
add
mov
add
ljmp
add
xchg
adc
mov
cltd
mov
aas
add
push
enter
ret
add
pop
lret
es
fs
scas
mov
sub
lret
rcrl
or
sbb
and
xor
jae
aas
xor
dec
mov
push
pop
mov
jle
bound
in
in
or
or
mov
dec
stos
movsb
mov
lock
std
cmc
push
int3
movsb
fimuls
push
int3
inc
sbb
push
sbb
sarb
xor
xor
mov
cli
jl
jg
dec
mov
aad
mov
jle
pop
xor
out
incb
in
jge
rcrl
jmp
add
loop
inc
loop
pop
inc
mov
pusha
lea
dec
stos
fcmovnb
scas
mov
mov
ds
mov
and
test
int
inc
ja
add
stos
jecxz
sub
mov
pushf
add
outsb
and
aam
mulb
cmp
and
jno
mov
pop
xchg
fs
daa
dec
fwait
xlat
mov
mov
jp
mov
clc
pop
shl
data16
ss
push
mov
cmp
xor
out
inc
ljmp
or
pop
fiadds
je
rcl
loop
int3
in
insb
sub
xor
pop
daa
jo
xchg
and
aam
test
push
lock
lret
push
xchg
pop
nop
jge
call
std
mul
rorb
push
out
sub
and
orb
or
xchg
mov
pushf
sub
inc
xchg
inc
scas
push
push
out
imul
push
push
cmp
insl
cmp
nop
ss
out
xor
pushf
sbbb
leave
scas
mov
ret
and
mov
in
jns
xchg
loop
xor
lcall
push
fcoms
sbb
cmc
cmc
in
loopne
ret
jo
or
hlt
in
and
jb
pop
cmp
push
cld
scas
sti
mov
pop
cmp
hlt
push
es
je
push
cmp
imul
rcrl
es
dec
dec
xor
loopne
aas
movsl
out
imulb
outsb
insl
std
stos
insb
add
setp
pop
in
icebp
cmpsb
fstps
mov
sbb
adc
shrb
adc
sti
mov
pop
addb
aaa
pop
call
cltd
fists
cld
or
out
add
or
push
int3
adc
es
xrelease
ds
mov
ljmp
jl
mov
out
or
test
mov
mov
sbb
lret
arpl
and
int
in
mov
mov
sub
addl
and
scas
pop
rcl
sub
mov
cmc
out
sub
clc
dec
mov
sbb
push
shlb
jecxz
scas
xor
inc
aas
xor
cmpsl
sub
ds
adc
into
push
cmp
aas
xchg
jecxz
xor
push
inc
out
inc
lods
nop
xlat
roll
jg
xchg
bound
shll
das
negb
lahf
dec
xor
push
lret
scas
mov
sub
aaa
xchg
lahf
clc
out
in
mov
std
push
or
sub
into
sbb
loopne
fwait
aad
popa
lahf
popl
pop
dec
xchg
imul
insb
out
and
jo
sub
in
jnp
sbbl
jno
mov
lret
jg
jp
pop
mov
es
or
push
sbb
shrb
aaa
out
int3
jmp
xchg
in
xlat
mov
popf
xor
dec
loop
jb
outsl
outsl
jno
mov
jl
aaa
or
iret
sub
mov
pusha
fcmovnb
enter
in
xor
mov
pop
inc
sbb
loop
add
cmpsl
and
aad
or
sub
daa
jl
mov
xor
cmp
adc
sub
mov
inc
lock
test
push
fisubs
mov
out
cmp
je
in
je
clc
shll
lods
mov
std
jp
in
mov
xor
std
shl
mov
outsb
addr16
xor
push
push
jb
cltd
into
cmc
aas
sub
ret
out
mov
and
arpl
xchg
mov
data16
pop
je
or
add
jp
and
dec
mov
mov
in
imul
cmp
fmull
xchg
movsb
insl
and
out
inc
decl
roll
imul
test
inc
aas
jns
cltd
xchg
test
ret
xorl
add
xlat
cmc
xor
ljmp
xchg
add
movsl
insl
bound
pusha
mov
ret
repnz
fildl
xchg
scas
xorb
shr
mov
js
imul
dec
popf
xchg
movsb
jae
scas
inc
icebp
out
mov
ds
sbb
cmp
outsl
pop
sbb
and
clc
dec
scas
clc
inc
inc
sti
and
mov
adc
xchg
xor
fucom
mov
mov
pop
insb
add
in
xor
loope
mov
js
pop
ja
add
push
adc
mov
jmp
test
jg
ret
call
xchg
shlb
inc
daa
and
or
cmpsl
mov
add
icebp
repnz
daa
mov
scas
mov
push
repnz
xchg
lock
cwtl
pop
push
faddl
insl
and
into
push
pusha
imul
jo
mov
leave
inc
jge
cmpsb
inc
test
add
out
xchg
hlt
imul
push
arpl
test
rcrl
mov
cwtl
ss
xor
in
imul
in
pushf
mov
lcall
pop
jo
in
scas
leave
aaa
pop
neg
das
pop
or
fwait
mov
rcll
nop
xlat
mov
jge
or
cmpb
sub
repz
mov
mov
std
xlat
popa
jg
pusha
sub
mov
in
lods
ss
add
ficompl
shll
gs
testl
sarl
sub
adc
jns
add
out
cmp
fstpl
ror
lahf
movsl
jmp
pop
lcall
push
insb
dec
stos
adcl
xchg
les
scas
hlt
jmp
inc
scas
fcoms
xor
pop
push
mov
xchg
out
movsb
mov
add
xchg
xor
fsubrl
mov
repnz
push
sub
outsb
xchg
cli
jmp
cwtl
xor
jbe
add
shll
lret
xor
cwtl
and
dec
idiv
cmp
sbb
dec
fisttpl
jmp
and
dec
ss
les
aam
pop
lods
sub
das
sub
fwait
pop
push
cs
pop
push
cmp
sub
int3
push
or
imul
xchg
and
adc
cmc
ret
xor
filds
test
dec
out
mov
test
cli
mov
xchg
enter
mov
rcrl
push
adc
loopne
pop
cmp
xchg
shll
js
inc
mov
pop
icebp
popa
stc
sub
sarb
lcall
nop
inc
xor
insl
add
push
adc
fnstenv
ds
pop
push
stc
dec
sbb
jns
jnp
mov
push
mov
int
test
or
cwtl
push
jecxz
dec
enter
js
lret
in
out
pop
cmp
dec
mov
jecxz
push
inc
cmpsl
xor
mov
push
ss
or
jne
dec
int3
jmp
mov
jg
jmp
add
fcomip
pusha
add
jbe
cld
stos
clc
pusha
mull
dec
or
add
mov
movsb
sbb
ret
arpl
call
add
jge
clc
cwtl
mov
mov
nop
mov
add
stos
rorl
mov
lods
lods
lret
cmpsl
mov
test
aam
push
add
mov
je
aam
lahf
lock
shrl
ja
rcrb
inc
test
repnz
cmp
std
jmp
jae
cmpsl
mov
sub
jge
lret
ja
mov
mov
pop
aad
fistpl
fisubl
xchg
push
and
jmp
insb
sbb
sbbl
xchg
int
lock
ljmp
es
mov
mov
dec
xchg
adc
xchg
in
insb
lahf
pop
inc
pushf
dec
jo
push
lea
test
seta
cmp
push
outsb
mov
mov
dec
in
and
cmp
out
rcrl
xorl
add
faddl
sbb
xchg
add
mov
add
xor
sub
sbb
dec
shlb
mov
xchg
addl
jnp
jb
mov
je
push
mov
test
dec
mov
xor
movsb
mov
sbb
lea
xor
sub
andl
jb
mov
pop
ja
test
push
shlb
mov
xor
test
negb
das
xchg
outsb
xchg
std
imul
out
daa
jl
jnp
xchg
sar
cmp
pop
in
cmpsb
push
pusha
jnp
rcr
int3
pop
push
lea
cmp
insl
lahf
xchg
test
add
addr16
jl
sub
inc
fnstsw
mov
fwait
mov
pop
pop
outsb
or
pop
xor
dec
nop
nop
mov
dec
pop
mov
idivb
jmp
lods
loope
bound
push
ss
mov
jnp
xor
test
xchg
xor
adc
and
add
out
adcl
jecxz
cld
add
xchg
mov
push
ja
sub
leave
ljmp
aam
push
mov
push
jb
movsl
leave
inc
aas
xchg
pop
stc
and
xor
or
clc
ljmp
xchg
shl
dec
insl
cli
pop
into
rcrb
sbb
mov
xor
stos
jbe
faddl
out
sub
in
rcl
inc
mov
ret
ljmp
sbb
cwtl
sbb
filds
mov
pop
aaa
outsl
jno
outsb
popf
pop
shl
stc
lods
pop
jno
repz
mov
xchg
inc
cmp
or
adc
adc
lahf
cltd
repnz
aaa
fnsave
sub
mov
pop
jecxz
mov
inc
movsl
push
mov
daa
jne
mov
std
fmull
pusha
cmp
andps
notl
jo
jnp
push
mov
mov
outsl
pop
nop
lcall
std
lret
pop
add
mov
loop
in
leave
jae
pop
daa
jbe
jecxz
add
mov
hlt
lods
test
in
jecxz
bound
cmpsb
in
leave
jmp
iret
subl
xchg
dec
mov
jne
imul
mov
adc
and
jecxz
push
outsl
inc
fwait
pop
mov
pop
frstor
aad
inc
mul
adc
xchg
sub
mov
jb
add
inc
push
lods
pop
pop
aam
icebp
popf
loopne
aam
or
js
add
xor
test
rol
jnp
fwait
add
cmpsb
or
fcmovnbe
jg
xchg
mov
mov
out
sub
mov
pushf
jg
mov
gs
lods
adc
jmp
sbb
sbb
lret
fs
adc
dec
ds
mov
popf
leave
cmp
push
xchg
push
outsb
decl
sbb
outsb
inc
cmp
mov
sbb
sub
sti
xlat
add
and
xchg
xchg
mov
add
push
mov
and
cs
inc
not
nop
cmpsl
es
pop
fmul
push
out
jae
adc
mov
scas
ret
jg
sbb
test
or
inc
fs
sbb
pop
cmp
ds
pop
push
mov
inc
hlt
push
lea
push
jno
lea
push
adc
cmpsb
inc
pop
pushf
pop
rclb
scas
and
pop
xchg
in
push
mov
mov
out
sbb
je
xchg
mov
cltd
adc
push
fisttpll
testl
xchg
int
shlb
orb
outsl
test
and
sbb
push
sbb
mov
js
lahf
push
dec
add
jo
jmp
sub
das
test
cmp
daa
rolb
insl
or
lret
xchg
inc
test
inc
out
sbb
push
lods
xchg
pop
je
adc
jmp
insb
jb
push
fwait
sub
push
insb
lret
test
leave
adc
sti
das
xchg
adc
mov
lea
inc
and
xchg
test
cmpsb
dec
sahf
inc
scas
bound
in
xor
stc
ljmp
jecxz
roll
stc
cli
cmpsb
xor
mov
into
mov
out
ljmp
mov
inc
shll
into
fwait
and
es
xchg
cmp
cmc
cmpsl
lds
adc
aaa
jl
cmp
or
out
mov
mov
push
xchg
cmp
dec
adc
pop
lods
in
jg
sbb
aas
push
xchg
pop
or
xor
jo
mov
adc
inc
aas
lods
xchg
stc
sbb
xchg
fisttpll
leave
push
push
dec
mov
cs
not
dec
test
les
xchg
lock
fcmovnbe
xchg
and
inc
arpl
fs
xor
ret
aam
inc
and
fbstp
insb
insl
enter
inc
dec
cli
xor
ret
mov
call
xchg
mov
jno
int3
rcrl
sub
test
ja
pusha
fisubrs
pop
jle
xchg
pushf
push
fdivrp
jns
mov
push
add
mov
jle
shl
cmp
jmp
js
adcb
xchg
in
out
lret
enter
jns
xchg
xchg
add
dec
push
push
into
sar
xchg
pop
push
arpl
lret
and
and
pop
fwait
in
xor
dec
sbb
xchg
push
or
xor
add
test
int3
push
adc
adc
repz
stos
push
mov
scas
sti
lret
shrl
sbbl
mov
sbb
jg
jecxz
mov
std
mov
jb
fwait
sbb
adc
cmp
xor
or
aad
test
fcompl
jg
lods
arpl
enter
loop
add
sahf
pop
lock
mov
mov
cmpsl
jg
or
and
dec
mov
add
cmp
cmpsl
ret
clc
mov
xchg
xlat
push
add
lock
and
js
jl
stos
and
mov
dec
push
clc
insl
clc
enter
ljmp
stos
dec
js
insb
neg
mov
mov
mov
or
cmpsl
nop
fiadds
ja
scas
push
in
or
ret
xchg
and
jbe
mov
push
lret
mov
popf
sbb
sbb
mov
leave
dec
sbb
shrb
sub
icebp
fidivrs
inc
push
sarl
mov
xorb
xchg
add
push
and
in
xchg
adc
xor
jmp
cmc
call
imul
cmpsb
or
push
mov
lret
mov
movsb
lcall
scas
daa
dec
hlt
or
xchg
int
sarb
out
je
fnsave
jbe
inc
in
push
push
hlt
mov
mov
sub
push
dec
sub
aas
and
cmc
js
cmp
add
bound
dec
pusha
addr16
inc
adc
adc
into
cmp
std
nop
xchg
sbb
push
jbe
jmp
test
clc
mov
shrl
test
andb
mov
scas
je
dec
repz
aam
or
inc
je
xchg
and
add
inc
inc
out
pushl
clc
insb
lcall
jno
sub
fucomip
mov
pop
js
out
lds
into
jns
daa
xchg
jl
lea
and
mov
push
mov
fistpl
and
dec
push
xor
das
test
popf
add
sbb
ret
ret
pop
xchg
xor
out
jne
pop
dec
pop
sbb
mov
pop
loopne
movsb
xchg
sub
fcomps
lea
adc
xchg
stos
out
out
mov
mov
pop
sbb
popa
xchg
sbbb
les
jmp
in
cwtl
add
inc
add
mov
mov
stos
sub
out
jae
mov
cmc
xchg
xchg
mov
mov
mov
xchg
insb
push
mull
mov
push
sarl
sbb
adc
addb
ja
movsl
outsl
push
push
sub
out
jge
data16
faddl
cmpsl
push
or
aaa
ljmp
dec
inc
sbb
gs
pop
mov
xchg
mov
push
push
dec
loopne
jl
cmpl
cmp
daa
mov
jl
sbb
insl
outsl
dec
push
adc
sbb
adcb
lcall
out
test
test
mov
mov
jmp
xor
ffreep
out
sub
push
cmpsl
push
push
ss
gs
inc
push
cmp
scas
lea
idivl
push
out
adc
cs
fiadds
push
int3
movsb
mov
inc
lods
mov
aaa
add
nop
es
mov
add
mov
les
pop
fldl
dec
pop
cmp
add
jmp
outsl
push
cmpsl
inc
js
push
xchg
sbb
xor
and
jge
xor
pop
add
loopne
lea
iret
shlb
addr16
mov
sub
sub
xor
pop
icebp
xchg
inc
jnp
fnsave
jnp
pusha
test
andl
ja
jne
inc
xor
add
bound
mov
ret
repnz
inc
in
xchg
test
stos
or
adc
push
popf
jns
adc
in
insl
lods
ljmp
add
call
lahf
xchg
fsubs
cwtl
push
frstor
mov
mov
sub
sahf
cmpb
xor
les
ret
ret
dec
sub
repz
movsl
mov
inc
jb
jo
xchg
popf
mov
lcall
sarb
stc
and
and
stc
in
lret
adc
std
in
lcall
in
fldl
imul
repz
rol
mov
jle
xchg
pop
inc
jno
je
std
xlat
push
xchg
push
mov
sar
dec
jb
cli
inc
xorl
and
mov
mov
xchg
sub
jle
and
out
adc
xchg
sub
icebp
add
lret
push
rcll
mov
das
push
mov
into
je
test
mov
mov
sub
ja
adc
movsl
inc
adcb
xchg
or
iret
adc
dec
sub
test
xor
add
test
lds
mov
and
inc
jmp
push
xchg
lock
cmp
mov
out
shl
and
divb
sbb
dec
xchg
jecxz
test
pop
nop
mov
adc
iret
mov
shll
jl
fs
cmp
lret
in
stc
mov
cli
mov
cli
loope
repnz
jnp
mov
out
mov
mov
jmp
and
xchg
sub
jae
xchg
pop
mov
rorl
mov
inc
mov
arpl
push
arpl
fdivs
out
mov
sbb
gs
dec
nop
push
jb
adc
cs
pushf
mov
xchg
pusha
xor
xor
cmp
or
pusha
dec
addr16
sub
or
xchg
lods
jno
push
mov
out
mov
in
mov
add
push
ficomps
les
sub
and
out
dec
sbb
gs
stos
call
xor
mov
add
sbb
xor
cltd
movsl
inc
jecxz
push
mov
das
and
add
push
jmp
push
jmp
lret
add
loopne
jecxz
in
cld
push
movsl
imul
shrb
xorb
repnz
lahf
repz
and
xchg
insl
push
mov
dec
jno
push
jnp
ret
cmpsb
std
das
add
adc
shl
push
es
jl
dec
add
pop
cli
movsl
mov
lea
mov
and
lds
hlt
add
fs
js
testl
aaa
lret
fdiv
cmp
imul
adc
sub
jb
insl
ret
cs
push
rorl
jl
sbbl
cmpsb
and
enter
xchg
lret
inc
mov
cwtl
cmc
xor
cmp
and
inc
shll
fs
in
adc
bound
mov
ficoms
in
mov
lahf
mov
and
inc
inc
arpl
or
push
or
aaa
bound
notl
cmc
adc
repz
call
outsl
dec
adc
jne
push
or
cmpsl
jmp
adc
xchg
shll
cmp
adc
sbb
in
sbb
add
xlat
mov
orl
mov
rcll
adc
clc
adc
jae
push
arpl
test
lods
imul
enter
out
mov
adc
hlt
pushf
pop
test
pusha
iret
push
mov
je
pop
lret
xor
je
xor
test
decb
stc
and
add
mov
and
fwait
and
jecxz
xchg
insb
xchg
aaa
sbb
mov
jg
scas
and
fimuls
dec
les
ljmp
jg
dec
fsubs
cmpsb
test
loope
out
lock
push
cmpb
sbb
jg
mov
pop
fs
dec
orl
xorl
negl
js
mov
in
mov
lea
mov
cmpsb
or
dec
imul
cli
subl
mov
repz
and
cmp
rolb
add
xchg
mov
aam
cmc
pop
or
call
cmp
lret
fwait
lcall
mov
push
mov
mov
test
mov
cmp
fcompl
or
xchg
or
add
aas
call
xlat
in
push
push
lret
add
xor
pop
or
xor
lea
jo
faddl
movsl
sub
iret
cmc
lea
pop
ds
dec
ss
out
rorl
push
ss
mov
in
jp
push
push
ds
sti
mov
or
iret
andl
pop
out
xlat
xchg
mov
imul
ret
jb
mov
stc
cmp
cmp
out
inc
xchg
and
fimuls
leave
xchg
bndldx
test
cmp
cli
pop
mov
cmp
test
pushf
test
out
mov
sbbb
jl
push
in
insb
call
scas
push
cld
sbb
call
sub
dec
jmp
sub
aas
push
ret
flds
mov
cmc
xchg
cmpsb
mov
incb
push
adc
sti
mov
add
nop
cs
jl
push
or
xchg
popf
lods
cmpsl
pop
xchg
jg
lods
movsl
test
xor
cmp
subb
mov
sbb
pop
push
cltd
jno
fldenv
fldt
scas
ja
jnp
inc
aam
stc
clc
leave
and
test
jo
sbb
jge
cmc
mov
mul
jmp
es
pop
loope
xor
sub
cmpsb
das
cmp
fcomps
int3
daa
ss
xor
pop
jb
jo
popf
nop
cmpsl
test
pop
fs
sbb
fstl
xor
add
lahf
cmp
mov
int3
lods
roll
int
rol
dec
orl
mov
or
or
push
lss
dec
mov
loopne
stc
pop
ljmp
inc
cmp
and
cmc
jae
in
ret
jae
push
out
dec
shl
and
hlt
iret
and
or
test
add
or
test
gs
pop
xor
push
push
xchg
adc
repnz
jecxz
push
fld
out
gs
arpl
scas
add
pop
scas
cwtl
mov
aam
push
addr16
orl
loop
ret
or
mov
pop
fcoms
jecxz
xchg
movsb
cld
test
das
mov
scas
xchg
fnstenv
lods
inc
inc
cld
loope
icebp
xor
mov
xor
mov
insl
mov
mov
push
aad
xor
fiadds
pop
shll
popf
mov
pop
mov
mov
mov
cmc
into
xor
mov
jg
shlb
leave
lods
ljmp
sbb
test
xor
out
icebp
sbb
imul
cmpl
cs
sbb
loop
call
push
insb
pop
cmpsl
pop
inc
or
int
cmp
aas
sub
mov
and
sub
pushf
jle
jge
and
ss
push
arpl
dec
adc
rorl
xchg
add
cwtl
mov
or
xchg
adc
add
inc
lods
aaa
dec
xor
adc
inc
mov
xor
adc
nop
xchg
dec
vpsubb
mov
inc
push
xor
mov
sbb
lds
or
mov
cmp
add
out
dec
xchg
dec
imul
sub
ds
mov
test
sbb
out
incl
push
stos
adc
bound
loopne
push
xchg
ds
pop
inc
adc
test
movsl
push
ret
lcall
lds
int3
inc
jp
popf
add
xor
fisttpl
rep
inc
xor
test
and
push
pop
bound
outsl
sbb
loopne
mov
and
fimull
movsl
in
bound
ds
mov
mov
fidivs
mov
cld
xor
sbb
stc
mov
cmpsb
mov
mov
stc
lahf
or
mov
sbb
adc
lret
sub
jno
jns
je
push
pop
cmp
jmp
dec
ret
pusha
push
mov
inc
mov
into
out
lahf
lret
out
mov
and
aas
adc
mov
adc
out
aad
and
sbb
xchg
cmp
sbb
add
loop
pop
jbe
xor
testb
fisubs
pop
les
mov
test
jns
sar
inc
stc
mov
int
jb
xchg
sub
cmp
dec
jp
iret
cmpsl
out
scas
in
xchg
pop
pop
and
add
fistpl
cltd
ljmp
adc
nop
jns
sbb
jmp
push
dec
pushf
fidivrl
into
or
addr16
adc
inc
jo
popa
and
das
add
hlt
push
loop
inc
aad
les
sub
lods
sarl
fwait
test
xor
dec
bextr
jno
mov
arpl
adc
scas
push
out
xchg
dec
popa
and
jmp
xchg
mov
mov
and
or
cld
add
push
idivb
pop
push
dec
loopne
push
das
mov
int
pusha
data16
syscall
xor
inc
imul
cmp
and
sbb
xor
in
push
jp
and
cmp
mov
sub
cmc
jg
add
pop
in
jle
les
loop
hlt
andb
fwait
mov
repz
mov
movl
sub
cmp
unpcklps
pop
fs
adc
cmpb
xchg
mov
jo
cwtl
loopne
cltd
pop
adc
mov
xor
mov
sbb
add
movsb
xchg
orl
jae
jp
xchg
nop
mov
xchg
dec
repz
sbb
sbb
lods
mov
imul
jno
jno
push
lods
sbb
jno
cmpsb
sbb
fstpt
sbb
shll
lods
jecxz
je
daa
lods
mov
push
mov
sbb
mov
lods
lahf
mov
xchg
sbb
stos
cs
call
int3
movsl
gs
repnz
pop
repnz
mov
pop
or
push
mov
out
es
lret
shll
or
xor
sarl
shll
cmpsl
cmc
pushf
adc
cmc
jbe
div
jmp
stos
rep
inc
push
repz
leave
aam
testl
lret
push
les
push
xlat
mov
xchg
imulb
jnp
cmp
loop
outsl
shl
jge
mov
bound
add
test
fnstsw
adc
jecxz
loop
gs
out
je
int
lret
cs
outsl
int
pop
jb
mov
add
xchg
pop
daa
stc
mov
out
jnp
fisubl
ret
icebp
cmp
mov
std
or
movsl
pop
cmc
outsl
and
rorl
outsb
loope
sbb
mov
je
jno
jmp
push
lea
and
in
mov
dec
adc
jmp
fmull
push
shlb
push
add
movsb
or
mov
mov
insl
fsts
sub
jbe
push
outsl
inc
xor
push
or
jne
cli
sbb
aaa
es
ret
sbb
aad
scas
pop
jnp
jmp
xrelease
nop
negl
fsubrl
ret
pop
rol
dec
pop
and
dec
fdivrl
xlat
jmp
pop
and
or
sarl
xchg
lock
gs
aaa
lods
fldl
pop
addr16
fimull
and
imul
iret
add
adc
rol
xchg
fwait
movsl
xor
push
pushf
xchg
out
push
inc
cmp
aas
data16
jno
add
cld
negb
sub
out
cld
data16
dec
arpl
stos
sbb
mov
lret
xor
push
push
sub
mov
popf
xchg
push
or
xchg
mov
mov
cmp
push
sti
cmp
xchg
pop
mov
leave
add
pushf
aad
or
leave
and
push
and
dec
lcall
sbb
aaa
insb
fcomip
in
sbb
xor
in
gs
push
pushf
les
mov
sub
cwtl
add
sahf
cmp
or
in
rcrl
lods
addr16
push
pop
gs
jne
mov
mov
push
lret
push
sub
pop
clc
scas
out
fwait
int3
lret
or
leave
fisubs
push
and
dec
lock
xorl
jno
push
cmpsl
repz
arpl
jnp
adc
dec
mov
adc
rcll
mov
cmp
aaa
mov
adc
sub
fwait
jg
or
insl
adc
push
ljmp
add
loope
jmp
mov
mull
jne
gs
in
fdivrs
xchg
addl
scas
lcall
popf
jnp
mov
in
insb
xor
push
add
xchg
cld
jle
jbe
inc
stos
out
adc
mov
inc
sub
loope
aas
fs
mov
movsl
cmp
fidivs
cmc
lods
sti
repnz
mov
push
or
jae
mov
pop
std
dec
loop
dec
fbstp
cmp
or
jp
dec
jbe
push
lock
xor
adc
cmp
mov
js
gs
pop
xor
cs
add
movsl
inc
xor
xchg
push
cmp
dec
sub
pop
dec
mov
mov
test
jecxz
push
cmp
mov
imul
mov
xor
and
rorl
cs
flds
cmp
ret
mov
out
inc
mov
orb
imul
sub
pop
leave
pop
mov
cmp
cmpsl
and
mov
lock
fnsave
sbb
mov
jns
arpl
mov
movsb
testl
outsb
scas
cli
push
clc
insb
fmull
xrelease
sub
bound
add
mov
loope
push
jo
test
imul
sarl
sar
add
push
stos
xchg
sbb
hlt
mov
and
outsb
mov
inc
adc
jg
scas
jg
clc
test
dec
mov
push
push
rcrb
pop
mov
jl
and
idivl
mov
lods
sub
jb
sub
stc
xchg
xlat
ret
aas
fisttps
xor
push
cmp
fistl
stc
daa
add
testb
gs
or
call
out
xor
pop
hlt
loopne
pop
dec
addr16
xchg
xor
bnd
add
imul
xchg
inc
daa
or
cmpsl
pop
fstps
add
outsb
ret
leave
xchg
sbb
mov
sub
insb
les
xor
ja
sti
inc
mov
fidivs
leave
popa
add
xlat
nop
dec
fldcw
or
popa
and
lret
push
jb
xor
adc
or
shlb
je
pop
push
fsubs
inc
add
mov
cld
xchg
clc
mov
pop
dec
fidivrs
mov
ret
cmp
aas
subl
loopne
dec
jmp
popa
mov
sub
jecxz
addr16
aas
std
pop
sbb
dec
imul
xor
cld
jbe
sub
test
shr
jne
andb
lahf
mov
mov
bound
in
mov
mov
loop
push
aas
scas
loopne
shlb
inc
and
inc
xchg
pop
and
jmp
pop
scas
jge
mov
mov
lods
lods
es
into
mov
cmp
cltd
ret
adc
mov
scas
cmpsb
sub
ret
enter
sub
jecxz
scas
mov
mov
mov
mov
jp
fcomps
cltd
lds
dec
or
pop
mov
lods
jne
dec
cmpsb
aad
fs
fnsave
push
jp
ljmp
xor
adc
cmpsl
lretw
xor
ret
idivb
dec
out
es
pop
mov
add
add
sbb
push
xor
icebp
or
iret
push
movsb
pusha
xchg
push
dec
dec
cmp
adc
inc
repz
mov
lret
xor
jg
fs
xor
push
rorb
add
addb
pop
jecxz
adcb
jns
call
and
xchg
in
mov
sti
mov
lcall
pop
sub
cwtl
imul
outsb
in
pop
and
xor
add
lods
inc
insl
jmp
jmp
mul
ja
sub
xchg
inc
cmc
ficompl
in
popf
movb
push
cwtl
pop
cmpsl
inc
enter
imul
xlat
addps
jge
ja
out
mov
cli
mov
push
in
xchg
jo
scas
jno
sbb
in
push
jne,pn
jns
xor
out
popf
imulb
xchg
cmp
leave
adc
mov
shl
in
iret
xchg
daa
mov
add
and
pop
mov
jbe
jne
cs
aaa
mov
int3
inc
mov
lock
jae
fwait
add
adc
repnz
movsb
je
cmp
fisubrl
or
mov
xor
xchg
daa
sti
addl
mov
inc
and
mov
cli
mov
or
add
push
xchg
aad
dec
jecxz
fsubl
mov
lahf
rcrb
pusha
dec
sbb
imul
or
xchg
cwtl
push
repz
and
aas
adc
jbe
inc
lds
jg
sbb
out
cmp
cld
xchg
imul
leave
mov
bnd
js
sbb
popa
int
add
cmp
out
sahf
mov
inc
jecxz
loop
jg
movb
xchg
jle
dec
jne
inc
in
pusha
mov
out
test
icebp
addr16
rcll
sub
mov
mov
or
dec
jne
add
push
mov
inc
and
pop
dec
cmp
mov
repnz
sbb
inc
mov
ror
into
rorb
cmp
cmp
lea
sahf
shrl
pusha
aam
es
xchg
jae
cmp
ret
xor
or
jp
mov
fcmovb
add
out
lods
imul
push
xchg
out
outsb
pop
and
pop
inc
mov
or
sub
addr16
xchg
ja
mov
repnz
out
push
mov
push
xor
fmuls
arpl
mov
int3
pop
jl
inc
add
sbb
mov
imul
sbb
mov
stc
repnz
adc
push
and
ret
mov
lret
mov
adc
out
add
idivb
test
sub
jbe
add
shl
cwtl
ja
add
out
pop
sub
cmp
sti
popa
sub
dec
jle
pop
cld
push
pop
inc
dec
jmp
cmp
and
mov
push
mov
or
inc
mov
cwtl
ds
push
mov
pop
mov
das
fdiv
ss
outsb
adc
or
cmp
adc
mov
pusha
icebp
orl
mov
or
push
fmuls
xor
lods
fadd
out
test
sbb
test
inc
int
inc
dec
dec
rol
stos
iret
mov
mov
and
mov
dec
add
xor
mov
int3
add
or
fnstcw
inc
sbb
jne
mov
sub
out
xor
fnstcw
push
repnz
inc
addb
arpl
les
dec
xlat
push
mov
mov
push
sub
fimuls
and
inc
add
add
xor
pop
xchg
pop
mov
dec
push
das
lret
add
sahf
mov
insl
inc
mov
xchg
mov
daa
insl
sub
xor
mov
loope
mov
pop
popl
rcrl
jns
xor
or
xchg
jg
jns
imul
hlt
inc
rol
in
test
mov
ja
call
movsl
rclb
and
xor
add
leave
mov
mov
jae
test
pusha
sub
leave
insl
testl
aas
cmp
pop
in
loopne
nop
push
xchg
mov
add
and
scas
pop
jno
inc
sbb
xchg
pop
repz
dec
push
xchg
or
cld
cwtl
jne
cs
cli
ret
inc
movsl
enter
out
sub
xor
rcrb
mov
pop
lods
popf
xchg
dec
or
xor
or
clc
insl
jo
jno
cmp
cs
mov
gs
sub
decb
cld
xor
test
push
loopne
iret
inc
and
or
es
loop
hlt
add
mov
jp
shll
inc
mov
call
movsb
outsb
cmp
xor
push
inc
push
in
not
mov
in
stos
outsb
rcl
mov
jge
adcb
pushf
lret
les
ss
ja
in
inc
out
xchg
mov
add
inc
jecxz
sub
and
cmpsl
mov
pop
ds
jno
xor
loopne
adc
lret
lret
imul
loop
dec
testl
dec
push
shlb
sbb
push
cmp
mov
mov
xor
punpckhwd
pop
insl
adc
in
lcall
pop
mov
aam
cmp
cwtl
lret
jle
jns
or
int
enter
outsl
imul
cmpsb
cli
orl
inc
and
cmc
in
sbb
mov
xor
sbb
in
pminsw
or
push
mov
stc
xor
pop
out
mov
ljmp
sub
in
xchg
je
out
cltd
nop
add
ret
push
rcrb
pop
js
js
dec
sbb
lock
or
test
sbb
pop
adc
or
in
mov
sbbb
aam
into
sbb
aaa
push
xchg
jecxz
subb
mov
mov
mov
xlat
adc
mov
xchg
cli
sub
jg
inc
sbb
cmp
in
cltd
mov
add
addr16
stos
jo
lock
aad
ret
add
inc
cs
sbbl
jmp
aas
push
mov
lods
xchg
nop
stos
fisubrl
mov
push
call
pop
lcall
out
popf
cmp
jle
add
adc
jbe
loopne
test
sti
aam
dec
je
and
inc
imul
xchg
cmp
jb
and
js
xchg
or
in
lds
pop
sub
sub
hlt
dec
icebp
pop
mov
cmpsl
push
xchg
addr16
cld
ljmp
and
popf
sbb
jecxz
aad
jnp
mov
mov
xlat
adc
enter
xchg
push
xchg
mov
dec
and
add
sbb
push
test
or
push
shrb
add
xorb
dec
mov
js
jne
xor
cmp
jl
call
inc
pop
pop
insb
test
cwtl
call
jp
xchg
adc
jg
icebp
imul
pop
nop
jg
test
popf
inc
popa
frndint
sbb
jo
push
imul
push
mov
push
test
notb
jnp
mov
xchg
imul
sbbl
xchg
add
jmp
cltd
mov
adc
or
stc
mov
and
sti
out
iret
cmp
jae
or
loope
cmp
push
pusha
cwtl
mov
pop
shlb
sbb
daa
sub
push
nop
enter
jp
jno
test
movsb
or
mov
rclb
mov
push
std
arpl
xchg
mov
and
insl
push
jb
add
js
imul
sub
jne
push
adc
fwait
lea
cmp
lea
negb
movsl
out
adc
mov
or
xchg
addr16
cmp
fists
cmp
xchg
sbb
jecxz
int3
xor
or
insl
cmc
mov
push
daa
sub
mov
or
mov
outsl
clc
sbb
loop
cmp
xlat
sub
mov
mov
imul
xchg
mov
mov
xchg
jbe
outsb
dec
test
rcrl
dec
fnstcw
enter
fmuls
rolb
add
insb
dec
pop
add
aad
mov
fisubrl
mov
push
fldl
fstps
mov
pop
jne
xor
mov
push
subl
jns
rorl
jg
mov
fcoms
fwait
jle
mov
mov
pusha
cmc
into
pusha
add
fsubp
into
push
psrad
leave
mov
icebp
ficoms
es
addl
out
jb
lahf
shl
sbb
or
enter
out
ljmp
test
mov
addr16
stos
repz
push
fisttpll
dec
jno
mov
and
xchg
or
or
or
mov
jbe
push
cmpsb
sub
push
xor
arpl
outsb
jnp,pn
cli
rolb
clc
int3
inc
hlt
sbb
jno
subl
sub
and
outsb
int3
insb
xor
outsb
sub
aaa
xchg
das
inc
adc
out
aad
gs
dec
adc
or
mov
sbb
pop
push
outsl
enter
cli
sbb
jae
sub
jnp
pusha
movsb
repnz
test
xchg
test
dec
mov
in
xchg
or
ret
dec
andb
adc
dec
sub
outsl
cmpsl
fisttps
push
insb
mov
cltd
dec
mov
aas
xor
and
mov
int
and
pop
ret
push
and
mov
scas
sbbl
xchg
mov
cmp
sahf
mov
cmc
or
mov
cmpsl
mov
inc
cmpsb
sbb
push
cmp
shlb
dec
sub
sbb
sbb
cmpsl
xchg
jle
add
movsb
push
adc
ffreep
andb
inc
cmp
repnz
orl
int
mov
mov
cltd
xchg
mov
push
popf
orb
sub
cmp
and
sub
call
orb
mov
js
adc
sbb
fs
add
xchg
stos
pop
cltd
popf
jecxz
rol
test
xor
jg
or
arpl
mov
jle
pop
inc
mov
cmp
repnz
jge
xlat
jg
out
in
mov
sahf
jp
aas
adc
pop
ss
cmp
aad
jnp
adc
push
dec
fwait
cmp
xchg
and
push
pop
mov
xor
mov
mov
xchg
jmp
lods
mov
mov
out
lret
mov
xchg
sbb
pop
mov
sub
aam
daa
rorb
cmp
cmpsb
sub
sub
cmp
rcrb
mov
pop
add
mov
divl
jle
sarl
shr
repz
dec
pop
cmp
je
inc
jmp
lods
or
inc
or
push
cmc
aas
fwait
adc
mov
sbb
loop
jne
cmp
fisubrl
sbb
movsb
or
jb
cmp
lods
inc
ds
xchg
arpl
orb
jecxz
call
inc
or
jae
js
mov
xchg
and
dec
mov
cltd
sbb
jns
inc
loope
divl
icebp
mov
scas
fsub
pop
push
dec
sbb
mov
cmpsb
jns
xchg
test
enter
xchg
inc
sahf
xlat
inc
pop
sbb
stos
icebp
or
xchg
icebp
jp
or
mov
or
sub
out
insb
push
add
mov
xchg
xorb
call
lds
addl
out
dec
push
cmp
in
roll
xchg
xchg
pop
movsb
inc
or
sub
dec
adc
mov
push
popf
push
adc
scas
push
rclb
sti
push
mov
xor
int3
ds
loope
or
daa
mov
inc
push
nop
pop
pushf
add
pop
popf
loopne
xchg
pop
pushf
pop
and
cmp
sarb
xor
mov
fwait
dec
das
rcr
xchg
xor
xor
imul
les
push
or
sub
shr
dec
test
icebp
rorl
xor
pop
shlb
dec
ss
movsb
icebp
test
mov
loope
push
ret
xchg
into
cwtl
and
mov
jb
sbb
inc
out
mov
adc
or
outsl
repz
repnz
mov
ljmp
dec
xor
jecxz
mov
mov
mov
lds
daa
pop
and
add
jecxz
or
or
mov
cmp
dec
push
outsl
fdivrl
jae
or
out
xchg
inc
adc
or
clc
jnp
xchg
pop
cmpsl
scas
sub
mov
subb
lret
add
cmp
add
bswap
pop
jle
sbb
enter
sub
fistl
mov
mov
loope
mov
sbb
out
scas
adc
adc
jp
ljmp
outsb
mov
dec
sub
repnz
inc
pop
push
dec
outsl
inc
fnsave
test
out
sub
jo
or
ljmp
ret
add
and
sbbb
ds
push
mov
adc
dec
xor
mov
shl
push
or
adc
adc
std
imul
sbb
pushf
and
or
fdivr
sbb
scas
mov
inc
or
in
nop
ret
outsl
cmp
sub
or
loop
mov
nop
out
dec
out
lods
ret
fnstcw
inc
sub
in
test
pusha
adc
xor
test
push
dec
cmp
pop
pop
xchg
fyl2x
lods
int3
xchg
out
pop
xor
mov
mov
dec
fadd
js
repnz
sub
subb
cli
test
sbb
mov
and
sbbb
stos
push
js
mov
pop
stc
push
xor
call
dec
adc
repnz
mov
imul
or
scas
pop
push
ficompl
mov
mov
add
inc
fbstp
jg
jbe
or
int3
fwait
pop
mov
inc
pop
xor
jg
fwait
mov
insb
movb
pop
xchg
pop
pop
mov
bound
lret
jnp
fwait
aas
daa
cmp
mov
and
jmp
stos
mov
mov
jae
mov
pop
lret
mov
arpl
xor
es
shl
shlb
pop
inc
mov
ss
inc
add
add
sbb
movsl
dec
sub
mov
dec
lret
ret
pop
shrl
test
push
dec
add
cmc
call
int
jo
adc
cmp
ds
jnp
adc
enter
xchg
adc
ret
cld
notl
mov
jne
insb
rorl
sbb
mov
mov
lahf
daa
mov
push
dec
mov
adc
fsub
std
out
mov
aaa
mov
push
mov
dec
repz
push
inc
sahf
mov
or
pop
mov
pop
lret
negb
stos
cmp
jne,pn
rcll
add
lods
sbb
out
movsb
inc
lret
jb
cld
shl
aaa
test
rorl
cli
cld
ror
call
arpl
pop
lret
cmp
pushf
xchg
sbb
fsts
or
jp
sahf
ret
inc
add
jl
jp
psrld
push
adc
xchg
xor
nop
addr16
sarl
insl
mov
ja
mov
repz
fdivrs
add
cwtl
out
inc
ljmp
mov
les
mov
xor
fistps
mov
xor
aam
dec
es
mov
add
cmpsl
mov
flds
add
hlt
lods
lods
popa
sbb
addr16
jb,pn
in
fcomps
or
mov
pop
loope
sti
pop
cli
xchg
cmc
add
pushf
or
and
xor
dec
insl
out
sahf
xchg
xor
push
sbb
ja
sub
decl
sub
pop
aam
ss
fnsave
mov
in
xchg
push
out
cmpsl
fyl2x
imul
rcr
and
mov
sub
jne
jmp
jo
movsb
gs
jle
mov
xor
daa
inc
rcrb
es
sub
testl
scas
movsb
sbb
popl
popf
push
frstor
test
xor
sarl
dec
mov
push
lret
sbb
cs
dec
add
insb
in
bound
loop
pop
jnp
mov
aas
out
mov
or
ljmp
ds
jge
loop
lds
outsb
and
and
add
xor
sbb
push
sub
fisubrl
xor
dec
dec
add
in
lds
js
jns
mov
xchg
popf
mov
jne
adc
loopne
dec
scas
test
xor
add
dec
dec
rclb
lock
push
inc
pop
mov
cmp
imul
je
fwait
ret
pop
inc
mov
mov
xor
or
data16
movsb
sti
or
outsb
je
xchg
sbb
dec
shlb
push
xchg
call
push
inc
out
ja
ss
jns
call
sbb
inc
dec
add
dec
cmp
das
inc
mov
aas
mov
push
add
stos
data16
sub
mov
js
bound
mov
mov
popa
adc
scas
cmpl
jb
push
call
xchg
shlb
ret
clc
jne
inc
lock
xor
sub
lahf
pop
xlat
pop
inc
pushf
sub
clc
outsb
addr16
xor
out
pop
cmpsb
push
sbb
pop
adc
pop
cs
shlb
add
and
out
stc
stc
pop
daa
pop
mov
add
add
pop
mov
mov
shrl
xor
xchg
mov
test
or
push
pop
inc
ret
movups
mov
adc
dec
inc
or
lret
imul
or
lret
cmp
jno
mov
adc
mov
xor
mov
pop
sub
push
add
lock
bound
and
mov
ret
repnz
mov
sub
fmull
ret
aas
and
fisubs
cmp
sub
jno
and
mov
pop
and
jge
cli
fwait
pop
clc
adc
adc
jecxz
leave
fdivrs
jbe
and
nop
adc
gs
cmp
out
xchg
mov
fucomi
int3
out
cltd
data16
jle
mov
je
stc
jmp
ret
aam
push
sub
shlb
ds
push
dec
popf
cmp
popf
jp
lcall
cmpsl
add
xchg
enter
sbb
mov
mov
jmp
or
mov
push
shll
ret
lods
enter
fistpl
and
mov
adc
inc
lods
fdivl
inc
jmp
mov
xchg
sbb
xchg
shlb
xchg
test
xor
cmp
inc
aad
fsubrl
pop
sub
cmp
les
cltd
jae
jg
sbb
sbb
mov
adc
inc
adc
add
ss
loop
inc
cmpsb
cmpsb
dec
in
xchg
in
loopne
push
mov
inc
lcall
sub
test
test
in
or
testb
notl
cwtl
cmp
xchg
xchg
je
xchg
jl
subb
loope
test
xchg
xlat
jg
and
cli
add
push
add
xorl
sbb
loop
aas
ficoms
jl,pn
ds
dec
fcmovu
adc
ds
rclb
xor
pop
pop
data16
mov
daa
rorb
mov
push
outsl
cld
sub
fidivl
pop
fisubl
loop
jns
push
inc
pop
std
pushf
cmp
data16
int
test
push
pushf
add
rcrb
mov
imull
push
bound
mov
rcr
xor
dec
repz
insl
mov
mov
imul
push
movsb
les
pop
sbb
pop
xchg
popa
xlat
movsb
cmp
insl
dec
pushf
lock
fisttpll
fcompl
icebp
xor
jo
lcall
out
loope
pop
pop
dec
cmp
and
push
popf
test
pop
enter
inc
inc
ror
dec
or
mov
cmp
orb
sbb
negl
or
xor
cmpsl
pop
cmp
scas
and
sub
daa
not
mov
outsl
pushf
js
dec
aam
stc
aas
push
loope
xchg
mov
xchg
mov
not
xchg
sahf
jno
sub
leave
inc
mov
cmpb
jmp
andb
lret
adc
and
mov
jne
push
inc
mov
adc
jae
js
aaa
xchg
xchg
clc
out
mov
cld
test
add
je
leave
movsb
mov
pop
add
repz
out
inc
lds
xor
xchg
cmp
mov
lret
dec
xchg
fdivl
xchg
cli
inc
push
sub
push
arpl
out
push
fwait
sbb
cli
lahf
nop
sbb
xchg
stos
imul
aas
jb
jo
clc
cmpsl
loop
dec
cmp
pop
adc
lods
sub
push
dec
sar
sub
test
xor
jns
movsl
pop
pushf
push
jge
ror
add
inc
inc
scas
sub
and
stc
add
ss
sbb
pop
bound
inc
inc
xchg
mov
loop
xchg
push
fildll
pushf
mov
testb
lea
test
dec
mov
mov
push
stos
xchg
inc
btr
aaa
pop
pop
arpl
or
mov
mov
test
adc
inc
stos
ss
int3
pop
cmpsl
sbb
sbb
jl
enter
mov
rcll
call
sub
std
sarl
filds
cmp
pop
data16
push
out
push
xchg
add
mov
xchg
in
sbb
lret
cltd
insb
xor
jo
xchg
out
xchg
stc
pop
movsl
cmp
inc
jmp
ret
in
or
add
stos
std
aas
mov
adc
ljmp
addr16
lret
aaa
into
jae
jb
xor
dec
push
aas
stos
aam
hlt
lcall
shlb
cmp
sbbb
push
flds
sbb
and
aam
daa
mov
pop
call
jbe
mov
addr16
pushf
fldpi
and
mov
ljmp
enter
mov
mov
into
iret
mov
cltd
push
movsl
or
lds
es
jne
sbb
lods
jecxz
mov
sbb
xchg
and
cs
sahf
cmp
faddl
fs
pop
aad
mov
int
mov
inc
jg
jno
hlt
dec
jo
sbb
cmp
push
adc
pop
int
loopne
mov
push
repnz
mov
inc
and
xchg
arpl
xchg
enter
clc
sar
xchg
mov
mov
mov
std
data16
jmp
jnp
sub
sub
adc
test
sub
push
lcall
ret
add
outsb
sarb
shlb
cs
mov
repz
mov
mov
test
loopne
mov
cs
gs
rorb
ret
rcrb
loop
aad
cmp
xchg
mov
cltd
lods
push
mov
in
cmp
sub
xor
dec
add
shrl
pop
adcl
mov
and
out
mov
cs
cld
adc
bnd
cltd
pop
lret
mov
cmpsl
ljmp
push
and
mov
lea
loopne
sbb
sub
lods
into
sub
inc
xchg
mov
push
mov
adc
jb
push
lcall
aam
push
test
jb
or
mov
mov
pop
sahf
out
out
or
bound
push
repz
stos
lea
mov
mov
pushf
sub
pop
mov
test
mov
cmp
push
sub
lds
sub
loopne
jbe
sub
insb
dec
and
ljmp
xchg
jg
inc
cmpsl
stos
sbbb
scas
insb
adc
in
adc
test
or
jne
push
xor
mov
mov
ljmp
mov
std
xchg
scas
sbbl
xchg
or
es
pop
fscale
add
enter
sbb
insb
sahf
adc
sbb
push
ror
dec
ja
add
addr16
pop
in
addr16
or
adc
inc
pushf
fs
and
fimuls
mov
mov
lea
jnp
les
rcrl
clc
sub
fsubrl
stc
pop
in
inc
test
xlat
imul
popf
cmpsb
stos
lahf
int
loopne
cld
int3
jmp
push
cmp
jbe
cmp
imul
scas
and
dec
pop
sub
jg
jnp
aas
in
cmp
adc
mov
sub
push
loopne
adc
jo
xchg
mov
leave
xor
pop
xchg
jecxz
adc
jne
outsl
pop
in
dec
inc
imul
out
inc
push
out
xchg
and
dec
or
lahf
and
arpl
dec
inc
dec
ss
divb
and
cmp
mov
outsb
xor
add
shrl
pop
outsl
rorb
push
popa
push
push
cld
ss
lcall
mov
push
xor
pop
data16
hlt
cmp
xor
daa
jl
sahf
sar
mov
call
and
enter
cmp
push
adc
xor
jge
rcrl
sbb
aas
movsb
xor
fcmovnb
nop
sbb
incb
xor
push
ret
shl
ficoml
adc
add
push
mov
sbb
dec
data16
jmp
imul
movsb
mov
mov
sbb
jo
or
adc
cmpl
fldcw
xchg
xchg
clc
addb
add
leave
bnd
add
xchg
lret
adc
jp
mov
imul
add
data16
push
inc
adc
cwtl
sti
mov
fimuls
pop
jecxz
mov
lcall
clc
aam
mov
ja
or
sbb
imul
call
scas
faddl
xchg
stos
pushf
cld
pop
sbb
mov
arpl
in
cmp
mov
iret
lds
cld
jae
fs
sub
mov
inc
aad
js,pn
mov
or
and
into
or
xchg
dec
mov
cmp
xor
push
dec
cmpsl
mov
and
imul
jnp
sbb
jle
mov
xorb
daa
ret
rcr
mov
in
lds
lock
int3
call
ds
dec
push
outsb
lret
xchg
mov
mov
adc
lock
repnz
add
push
mov
jne
push
sub
out
cmp
jecxz,pt
push
fiaddl
jno
ss
cmp
and
and
inc
fstl
or
xchg
sbb
movsl
js
loop
loop
pop
jns,pt
or
jle
scas
xchg
testl
xchg
and
lahf
sub
push
push
insb
out
mov
mov
nop
sarb
insl
cmpsb
push
or
fidivl
xor
pusha
mov
cmpsb
inc
mov
jae
push
test
fcmovb
mov
mov
insl
leave
nop
test
iret
inc
mov
xchg
icebp
pop
mov
add
sub
cmp
xor
js
int
adc
jne
push
jne
fisttps
push
xchg
add
inc
dec
sub
imul
inc
pop
add
xor
lret
xor
jae
xchg
jbe
aam
pop
mov
mov
pop
sti
pop
add
adcb
ljmp
faddp
xchg
xor
movsb
cmp
cmpl
stos
std
xchg
push
aam
lds
push
fxch
sbb
in
fwait
cwtl
popf
xchg
sti
out
add
sbb
jle
fidivl
cmp
loop
xor
dec
push
mov
pop
addr16
dec
xor
inc
mov
dec
psrad
pop
aaa
clc
ret
int
mov
mov
test
inc
out
push
fdivs
pop
jl
sbb
push
fdivs
mov
loop
add
add
xchg
mov
data16
adc
test
dec
mov
fdivp
jle
jnp
popa
mov
sub
fildl
sbb
adc
fnstsw
aas
sbb
mov
dec
lret
dec
xchg
cmp
sbb
jne
je
cmp
fnstenv
aaa
mov
sbb
stc
xlat
jnp
or
mov
sub
dec
movsb
cld
inc
popa
xor
lea
int3
insb
icebp
stc
pop
iret
out
insb
lds
frstor
and
inc
inc
fiadds
jl
lods
dec
je
les
sub
data16
mov
cmp
push
insb
aad
int3
or
inc
xor
xlat
push
bndldx
insl
repz
notb
fistpl
insl
xor
es
inc
ds
inc
jecxz
repnz
pop
push
jge
mov
and
pop
scas
xchg
enter
aas
jo
add
test
std
or
add
sarb
fsubs
mov
lret
add
pop
notb
sub
xchg
or
sahf
adc
pushf
sbb
shl
pop
jns
sarb
cld
add
mov
jmp
xchg
add
loop
repnz
ljmp
jl
imulb
int3
dec
and
mov
dec
lea
mov
sub
icebp
and
push
movsb
lods
ret
dec
mov
xchg
iret
adc
fisubs
sub
faddl
iret
movsb
xor
dec
cmp
loopne
mov
push
xchg
cmpsb
sub
and
pop
enter
pop
les
cmpsb
int
insl
in
cltd
testl
outsl
xchg
sbb
and
dec
and
stc
sarb
add
dec
ja
cs
imul
inc
popa
mov
fdiv
outsb
mov
adc
push
imull
pop
repnz
pop
cwtl
mov
sbb
jb
adc
jb
test
cmpsl
jecxz
rorb
cwtl
and
andb
and
push
lea
stos
movsl
inc
cmc
or
inc
xchg
repz
xchg
lds
ret
pop
addr16
inc
pop
lds
push
imul
jmp
mov
jmp
sub
dec
jmp
aad
fildll
push
dec
mov
out
mov
mov
jg
or
fstl
jno
jns
fsts
lea
xchg
mov
fbstp
mov
pop
jl
push
cmp
repz
pop
cmpsl
inc
push
popa
ja
pop
into
and
push
rclb
mov
jmp
cmc
pop
sbb
cmpl
std
jne
cli
jmp
mov
push
fsubs
das
addb
adc
jne
mov
or
pop
test
sbbl
inc
xor
mov
inc
cmpsl
fdivrs
jl
lret
ja
in
pop
mov
or
cmp
push
test
sbb
dec
cmc
xchg
imul
mov
xor
cmpb
xchg
cwtl
test
andl
dec
or
push
mov
jae
jmp
sbb
pop
lret
sub
sbb
jne
adc
dec
adc
rcll
pop
lahf
movsb
arpl
mov
mov
dec
dec
sub
in
ret
pop
mov
stos
pop
push
dec
lea
sbb
cmp
xor
dec
mov
cld
mov
daa
xor
adc
test
or
stos
xorl
jbe
dec
or
insb
bound
iret
push
mov
xchg
out
das
add
push
adc
mov
or
push
add
scas
loope
pop
fdivs
in
adc
jnp
mov
cmp
cmpsl
xor
out
lret
push
mov
sub
xchg
dec
into
adc
jns
in
sub
inc
arpl
call
and
cmp
movsb
inc
cmpsb
mov
in
xchg
std
sarb
in
mov
adc
in
sarb
fwait
testb
ret
in
std
sar
dec
pop
fimuls
xor
jae
out
cmp
jmp
lods
jmp
sbbl
push
fldcw
xor
jle
popf
dec
int
ret
sbb
xor
data16
icebp
dec
mov
fwait
repz
add
xchg
pop
daa
push
andl
call
aaa
orb
push
mov
outsb
popa
mov
cmp
pop
cmp
aam
cld
testb
xchg
decb
aam
dec
xchg
test
rol
out
sub
daa
jle
sahf
movsb
rolb
jmp
imul
cmp
ja
xor
adc
push
xchg
je
lret
or
pop
test
push
cmp
pop
outsl
jg
sub
scas
test
xchg
lahf
push
jb
pcmpgtd
add
add
adc
insl
jns
sbb
lret
mov
orl
pushf
pop
pop
bound
aas
cs
mov
jle
repnz
shrl
jb
push
loope
mov
cwtl
mov
fmuls
lods
xchg
xchg
in
pop
stos
in
push
push
jg
int3
repnz
popa
or
jns
out
ss
loop
jae
cmp
sub
push
rorl
jl
sub
test
daa
leave
test
jl
scas
cmpsb
xor
adc
sub
ljmp
nop
push
aad
mov
icebp
pushf
fs
inc
ss
bound
add
or
adc
scas
notb
xchg
insl
mov
adc
popa
add
add
cmp
outsl
cld
popa
jno
loope
xor
idivl
and
jge
pop
or
out
popf
push
xlat
mov
inc
subb
xor
cmp
adc
add
loop
cli
insl
adc
inc
cmp
pop
divb
mov
imul
xor
xorb
add
xchg
xor
popf
es
mov
testl
cmpb
imul
pop
and
fnstsw
xor
lds
inc
into
and
or
jl
xlat
aad
xor
in
cmp
ja
cwtl
into
movsb
jp
dec
xchg
pop
sub
xor
xlat
mov
imul
ljmp
scas
subb
push
repz
lahf
and
push
cld
je
inc
int
sub
push
pop
movsb
jecxz
addr16
xor
jp
insb
loop
sub
or
test
clc
xchg
rolb
ljmp
dec
mov
jns
ljmp
mov
push
and
xor
je
jecxz
jae
fistl
in
and
mov
and
mov
xor
mov
inc
daa
lock
push
pop
cmp
inc
jo
repz
adc
lret
scas
js
test
sbb
jge,pt
xchg
lods
nop
into
jp
sub
enter
pop
mov
rcl
sbb
pop
mov
inc
leave
fdivl
mov
xchg
mov
lret
and
inc
leave
popa
inc
or
clc
repnz
call
ja
jmp
dec
aas
fs
mov
jmp
fcmovu
and
xchg
loopne
push
dec
pop
pop
jns
mov
pop
push
xchg
push
pop
stc
add
inc
pushl
les
xchg
enter
sarl
jae
in
fistpl
jecxz
xchg
test
mov
mov
sub
pop
xor
mov
cli
mov
sub
int3
scas
mov
test
mov
mov
popa
adc
loope
scas
cltd
loope
push
pop
inc
and
or
cmp
cmp
andb
dec
insl
dec
clc
in
mov
jp
addr16
faddl
xor
ret
xchg
movsb
std
fisttpll
movsb
std
in
js
add
cltd
pop
lds
and
insb
mov
inc
ficoml
int
jbe
adc
push
out
sbb
lret
mov
fdivp
sub
pop
mov
adc
mov
daa
dec
jge
adc
xor
popf
mov
loope
pop
jge
test
inc
outsl
sub
addr16
push
repnz
mov
jo
loope
popa
sub
stos
insb
or
add
inc
bound
dec
add
xor
and
das
jmp
insb
sub
das
pop
fbstp
imul
mov
scas
jmp
push
xchg
mov
leave
call
and
inc
xchg
inc
ret
ret
adc
push
pushf
testl
iret
pushf
xchg
in
pusha
adc
mov
and
inc
loopne
bound
cmpsl
xchg
cmpsl
es
insb
and
push
push
icebp
jns
push
sbb
mov
cli
int
rcr
push
lds
cli
push
shlb
bound
and
cmpsb
sbb
je
stc
jo
mov
subl
es
jecxz
add
or
out
xchg
dec
ljmp
add
call
sbb
pusha
movsb
jp
mov
jecxz
inc
or
push
sub
mov
adc
mov
sub
addb
mov
lret
pop
sti
mov
jnp
in
mov
fmul
push
enter
mov
cld
loope
xchg
add
out
cwtl
out
les
mov
push
sahf
pop
xor
mov
inc
lods
popl
sub
sbb
rolb
sbb
mull
cmp
imul
test
fisttpll
pusha
mov
inc
pop
aas
or
or
es
jae
dec
xchg
cmpsb
jb
xchg
mov
std
xchg
popa
push
js
rclb
mov
inc
std
xor
dec
inc
push
adc
jo
mov
data16
cltd
mov
mov
inc
cmp
ret
cmp
and
adcl
or
mov
cld
movsl
adc
addr16
loop
in
xor
mov
push
lcall
data16
xor
call
outsl
inc
push
pop
ss
push
lock
aas
xor
or
lret
imul
mov
int3
clc
lods
test
xchg
inc
inc
xor
push
add
scas
fisttpll
pop
fsubrl
inc
sbb
pop
inc
push
xchg
sbb
dec
dec
cltd
loopne
mov
pusha
fcompl
lock
mov
jno
and
xchg
jle
ffree
mov
or
or
mov
jle
push
mov
rcrb
xchg
cld
xor
ror
jp
cmpsb
mov
pop
and
call
push
test
sahf
scas
jo
pop
pushf
cmpsb
xchg
mov
js
mov
xor
and
mov
pop
dec
popa
clc
out
xchg
xor
aam
jne
xor
and
adc
mov
xor
jmp
leave
lock
pop
add
mov
std
jb
or
incb
dec
sahf
pop
fwait
cld
inc
dec
stos
mov
adcw
mov
mov
sbb
or
lods
sbb
not
cs
inc
jbe
inc
mov
testl
cs
out
fs
js
movsb
dec
mov
imul
outsl
cld
mov
inc
lock
adc
xchg
adc
xor
scas
stc
push
in
fcomps
std
pushf
jle
dec
daa
xchg
lret
movsl
das
mov
adc
sbb
pop
testb
and
xchg
cmpsl
mov
xor
push
mov
xchg
add
mov
fmull
cmpb
cli
adc
inc
sub
mov
and
cwtl
inc
push
fsub
pop
sbb
lcall
dec
ret
out
xchg
or
push
jae
inc
sbb
insl
divb
mov
sub
adc
mov
fistps
jl
jecxz
xor
or
adc
lahf
xchg
and
sub
or
push
mov
inc
pop
or
insl
jo
js
cmp
jb
inc
sbb
lret
sbb
movl
lcall
pushf
mov
out
push
stos
iret
xor
pop
mov
sbb
mov
or
lret
out
mov
push
outsb
cmp
push
stos
into
xchg
or
xchg
and
in
mov
mov
push
loope
xor
iret
fcoms
push
lahf
adc
das
ds
lcall
mov
insb
test
test
mov
mov
test
jb
cltd
adc
fwait
xchg
ss
push
sti
imul
pushf
and
sbb
int
push
cli
adc
std
rclb
or
xchg
push
nop
xor
add
xchg
or
xor
jmp
mov
push
cld
cmpsb
loope
sahf
mov
dec
jnp
jl
cmp
jnp
fcmovb
push
push
test
lods
cmp
test
push
cmp
lret
dec
ret
and
mov
rcl
into
call
sub
int3
sbb
ror
jns
sarl
mov
jge
push
test
lret
js
mov
xchg
jl
int
lods
lcall
cmp
subb
sti
fwait
inc
in
and
pop
xchg
sarl
shlb
jl
enter
mov
mov
sub
jecxz
popa
adc
pop
xchg
sbb
imul
xor
mov
xchg
pop
data16
push
mov
and
mov
or
orb
jg
test
adc
cmp
inc
mov
popa
andl
dec
jecxz
xor
fists
adc
cmp
popf
lods
stos
xlat
call
imul
jg
lds
popf
loopne
push
push
inc
push
cmp
ret
push
addb
add
pop
inc
xchg
sbb
jb
and
add
loope
fmull
jge
jbe
xor
mov
push
scas
jne
xchg
out
xor
leave
loopne,pn
jb
int
mov
mov
xlat
outsl
xor
aam
das
push
icebp
test
ljmp
or
fstpt
adc
and
mov
xor
shll
rorb
adc
movsb
fcomps
inc
pushf
decb
add
dec
scas
shrl
mov
pop
inc
std
push
cmovnp
lds
mov
pop
loop
daa
lcall
or
jns
or
pop
cmpsb
or
arpl
xor
jae
ret
add
popa
outsb
out
sbb
add
sbb
data16
scas
adc
js
and
xor
sbb
inc
jb
data16
cmp
xor
xlat
inc
out
andl
push
add
xchg
fiadds
aam
or
fsts
mov
addr16
ljmp
popf
add
iret
mov
adc
sub
or
mov
pop
inc
fdivs
xor
and
pushf
push
cmpsb
fdivrl
insb
rcl
subl
push
arpl
mov
out
push
cld
out
jp
jg
mov
daa
jmp
clc
jae
and
mov
adc
mov
test
and
ljmp
sbb
outsl
jbe
aam
int3
mov
subl
xor
loope
dec
jns
and
mov
mov
icebp
insb
xlat
not
or
ljmp
dec
popa
mov
cld
pop
xchg
or
cmp
aam
sub
pop
lods
ss
cmc
jl
cwtl
adc
in
loope
sub
add
adc
imul
sbbb
in
and
xchg
jne,pt
out
xor
rolb
imul
pop
dec
push
mov
mov
incl
in
mov
cmp
pop
xor
cwtl
sbb
lods
scas
push
inc
out
movsl
arpl
sub
xor
fwait
clc
sahf
cmp
or
cld
cld
xor
cmp
ficoms
push
gs
call
adc
mov
out
lahf
negl
push
orb
lahf
adc
or
into
jle
rorl
sub
test
outsl
adc
mov
incb
mov
adc
nop
es
jns
fldenv
pop
mov
push
loopne
mov
decb
ret
scas
test
jp
cmp
cmp
fwait
cmc
lock
fwait
mov
jp
mov
lods
les
frstpm(287
adc
clc
fistpl
mov
cmp
sub
adc
xor
sbb
popf
shl
or
dec
scas
xchg
mov
cld
sbb
xchg
ds
test
cli
cmc
jae
pop
das
ret
inc
sahf
xor
roll
aaa
pop
loopne
icebp
jle
insl
xchg
pop
mov
sbb
leave
xchg
xor
stc
sahf
cmpsb
pop
orb
cmp
and
mov
push
mov
ret
mov
sub
test
and
divl
mov
shlb
sbb
rclb
cmp
test
fsubrl
pop
lahf
xlat
xor
cld
pushf
je
cmp
mov
movsl
movsl
jnp
xchg
std
pushf
mov
xor
fadds
jp
xchg
int
lahf
push
mov
jmp
stos
subl
test
mov
aas
out
int3
mov
out
adc
pop
adc
xor
stos
lods
ret
imul
shlb
sbb
jo
pop
pop
jmp
push
repnz
push
scas
cli
fstpl
daa
adc
pop
sar
or
sbb
inc
iret
adc
lret
iret
xor
dec
xchg
call
repz
fisubs
mov
lock
test
popf
cmp
mov
cmp
cmp
push
inc
mov
cmpsl
rcrl
pop
movsl
rolb
mov
lret
xor
out
xor
shll
or
fnsave
sarb
inc
test
lods
daa
test
mov
dec
repz
fcmove
iret
js
inc
or
mov
aaa
dec
pop
xchg
push
sbb
ret
pop
mov
movsl
cmp
mov
nop
mov
inc
push
jmp
cmp
xchg
dec
jp
rolb
insl
in
push
pop
in
push
lcall
in
add
mov
outsb
int3
cltd
in
ds
or
in
mov
pusha
and
push
xor
in
push
mov
test
lahf
xchg
repz
xchg
jmp
mov
push
and
push
jl
and
nop
sub
push
aas
sbb
into
jno
aam
lods
out
mov
test
xchg
hlt
in
pop
js
sub
adc
iret
test
or
and
lea
sbb
lret
adc
cmp
stos
sub
or
clc
sbb
aaa
add
add
dec
iret
jl
xlat
dec
cltd
daa
sub
aas
test
divl
xorl
aad
stos
lods
mov
add
xor
xchg
dec
icebp
in
xlat
out
add
movsb
mov
inc
shlb
push
cmp
pop
xchg
aad
lock
fwait
mov
ret
mov
inc
dec
inc
icebp
dec
mov
int3
jmp
sbb
jmp
inc
xabort
lea
push
les
mov
mov
lret
fldcw
lret
enter
or
and
mov
popl
arpl
jns
testb
cmc
sahf
call
pushf
push
test
or
sub
xchg
xor
mov
ss
stos
push
rolb
jo
pop
mov
mov
cld
sti
fisubl
dec
das
pop
insb
cmpsl
xchg
in
push
das
test
int3
inc
out
je
xchg
cwtl
adc
jo
loopne
std
or
sbb
lret
cs
inc
lea
bound
test
fnclex
fldenv
push
mov
shlb
and
add
inc
and
cmp
movsl
adc
mulb
pop
call
push
std
mov
sti
sub
insb
in
add
cltd
inc
and
les
push
addr16
iret
sub
popa
dec
pop
jb
hlt
jnp
outsb
sub
test
push
xchg
fists
jmp
leave
jge
popf
xchg
es
jo
add
mov
psubd
jo
insb
test
lahf
xchg
sbb
pop
lea
cmc
roll
insl
push
std
lret
or
out
adc
daa
cmpsl
rol
fisttpl
in
inc
cmp
icebp
imul
test
mov
pop
rcrl
cltd
cmp
xchg
and
inc
aam
cmpsl
int3
lock
mov
lahf
ja
mov
push
fisttps
adc
add
push
xchg
mov
mov
scas
adc
cmc
into
add
mov
sbb
add
xchg
arpl
or
mov
cmc
push
mov
pop
dec
jno
incl
dec
add
hlt
mov
xchg
mov
dec
ror
lret
mov
in
adc
cmp
aaa
and
mov
push
in
icebp
mov
mov
push
es
outsb
je
jae
jl
aaa
mov
cmp
inc
mov
stos
mov
mov
es
fsubrp
xor
movsl
dec
pop
xor
sub
add
loopne
mov
jno
rolb
stc
and
stos
xor
mov
or
xlat
es
and
cmp
dec
dec
nop
out
pusha
cmp
es
push
sbbb
or
jno
out
fldl
out
adc
add
xor
mov
nop
cmpsb
loope
mov
mov
jecxz
iret
stos
mov
addl
outsl
xchg
rcrb
xchg
pop
inc
shl
inc
pop
test
xor
dec
push
push
push
out
test
cs
and
pop
insl
add
and
incb
inc
mov
iret
dec
ja
addb
sub
sbb
push
negl
int3
xchg
shlb
mov
mov
outsb
sub
mov
movlhps
xchg
pop
sub
jcxz
int
and
in
cmp
push
insl
push
in
mov
stos
test
and
cli
mov
cmp
xchg
cmp
adc
xchg
es
pop
adc
stos
cld
mov
sub
hlt
in
int
dec
outsb
andl
dec
inc
enter
or
loopne
dec
aam
mov
loop
mov
add
lea
mov
in
dec
dec
jno
orb
xchg
jl
ljmp
sbb
fcom
mov
sub
cld
fdivr
push
fadds
daa
fs
lock
fs
in
mov
mov
test
lock
sub
test
inc
ss
hlt
cmp
lcall
pop
dec
insb
int
and
pop
mov
ss
sub
sbb
ja
stos
jg
nop
cmc
outsl
pop
lret
andb
cli
rcl
stc
nop
into
pop
dec
mov
xchg
lret
sti
pushf
lret
les
jae
fmuls
int
push
jle
div
lret
cmp
mov
scas
stos
scas
mov
daa
xchg
leave
xchg
mov
add
movsb
fwait
nop
negb
dec
bnd
scas
and
sbb
cmp
lock
inc
dec
adc
dec
jae
daa
bound
jbe
xchg
push
xchg
jmp
in
je
pop
sbb
in
icebp
push
ds
daa
stc
pop
sbb
adc
adc
xchg
lods
fdivs
ret
xchg
xor
dec
cmpsl
mov
lods
push
cld
mov
popa
xor
mov
cltd
stos
stos
push
repz
mov
sbb
push
testb
lods
shrl
cmpsb
cmp
bnd
cmpsb
push
sub
or
cwtl
mov
fsubs
xor
dec
call
cmp
sbbl
jbe
icebp
fmull
dec
test
nop
pop
cmpsb
out
mov
lea
sarl
lcall
and
in
imul
dec
inc
mov
sbb
dec
sti
mov
sub
stos
xor
xor
out
push
sahf
sub
fdivp
gs
mov
or
inc
lods
mov
pop
xchg
addr16
xchg
xor
cmpl
adc
xor
xchg
flds
sbb
lods
and
xor
dec
cmp
stos
dec
adc
or
mov
aaa
imul
sbb
adcl
and
outsl
dec
jmp
mov
mov
xor
push
in
pop
jle
mull
fldt
xchg
repz
xchg
out
and
repz
mov
out
icebp
add
cld
mov
mov
les
dec
sbb
xor
gs
dec
jp
adcl
mov
test
cmp
in
lods
xor
add
dec
aad
dec
pop
or
adc
mov
in
hlt
adc
daa
scas
inc
mov
cs
ret
push
sbb
sahf
test
mov
jmp
bound
fisttpl
sbb
sbb
xchg
pop
sub
xchg
push
ljmp
mov
nop
jg
mov
cltd
xor
cwtl
mov
push
xor
loope,pt
pushf
and
addr16
test
enter
jbe
cli
je
mov
jnp
lret
fists
mov
loop
mov
gs
sets
push
jge
movsb
mov
cmp
mov
jbe
out
jecxz
inc
stos
xor
mov
jb
js
push
mov
dec
aad
xor
addr16
fldt
push
in
test
sub
xchg
stos
or
sbb
dec
sahf
add
out
mov
xchg
sbb
int
lahf
mov
xchg
dec
mov
dec
das
xchg
es
hlt
jno
or
fldt
cmp
movsl
sbb
mov
push
sub
jmp
cmp
out
or
jmp
scas
jle
mov
dec
mov
cmp
push
inc
out
jl
xor
adc
xor
mov
ja
sbbb
lods
loopne
lret
scas
and
inc
pop
xchg
cmp
lods
push
xchg
push
dec
aaa
out
push
adc
addr16
cmp
jo
cmovle
aam
test
jae
hlt
rclb
adc
fistpll
mov
subl
pusha
popf
sbb
aaa
fstps
ljmp
pushf
and
ret
gs
aad
insb
cmc
push
js
inc
adc
add
add
sahf
sub
stc
in
inc
arpl
data16
outsb
pop
and
popfw
rclb
sub
sbb
movsl
das
xor
push
std
dec
push
imul
mov
and
cltd
dec
xor
outsl
stc
cmpsb
and
jns
and
cs
mov
jns
pop
in
lock
into
xor
mov
fisubrs
lds
test
aas
jp
inc
movsl
sbb
add
dec
and
loop
jmp
jo
mov
jl
rorb
out
adc
dec
add
enter
or
cltd
xor
in
xchg
inc
and
sbb
inc
or
test
xor
sti
sub
int
or
lods
push
add
cmp
aad
xchg
add
xor
leave
jmp
pop
lret
iret
out
jo
fs
xor
mov
mov
lahf
jl
imul
mov
xlat
pop
out
call
std
sbb
ds
adc
popf
adc
cmp
sbb
cs
dec
scas
inc
jmp
imul
hlt
mov
shlb
js
inc
add
push
insb
mov
mov
inc
insb
xlat
xchg
shlb
movsb
stos
call
inc
dec
mov
adc
xchg
inc
shll
fisubs
mov
mov
push
in
pop
inc
leave
pop
pop
lcall
movsl
adc
test
cmc
inc
cmp
out
dec
pop
test
pop
loop
jmp
xchg
jne
stos
push
in
jnp
push
fs
call
ret
out
cmp
movsb
mov
lret
sub
or
aad
mov
hlt
test
je
bound
push
inc
adc
dec
shlb
sub
loop
push
pop
sbb
xchg
mov
mov
and
into
fldenv
inc
movsb
mov
ss
xlat
arpl
or
test
mov
es
mov
shrl
push
lds
pop
leave
cs
jl
inc
add
sub
mov
pop
cmpb
pushf
push
jo
inc
fs
push
jns
mov
jns
hlt
arpl
cmp
ds
imul
out
dec
mov
cmp
inc
aaa
mov
and
push
mov
lds
xor
dec
dec
add
mov
inc
pop
adc
jns
dec
mov
jo
sbb
mov
jmp
icebp
pop
mov
add
rcrb
fwait
lods
xor
add
insl
mov
daa
enter
pop
and
pusha
inc
cmp
inc
je
mov
lods
cmp
mov
popf
repz
push
scas
inc
sbb
push
nop
lea
test
mov
pop
push
lods
dec
call
dec
adc
cld
add
sahf
pop
out
stc
fwait
jno
js
add
aaa
mov
lds
sub
imulb
imulb
jbe
lea
or
icebp
fs
lret
pusha
shlb
jae
mov
insl
pop
xchg
push
call
or
sar
sub
xchg
out
lcall
stos
mov
imul
mov
cs
sub
in
sti
imul
cmpsl
mov
mov
adc
mov
in
into
add
icebp
subb
add
dec
fdivr
into
mov
sbb
in
pop
jnp
pusha
or
jo
xor
les
and
jmp
lea
push
or
mov
mov
push
out
iret
xchg
outsb
jbe
push
and
addr16
test
daa
repnz
cmpsb
push
xchg
mov
or
ds
mov
or
push
leave
test
cmp
cmp
cmp
xchg
push
sbb
inc
or
push
xor
mov
sahf
or
stc
adc
hlt
ss
jg
mov
pop
scas
sahf
lcall
cmp
inc
xor
out
jl
sub
jmp
jbe
loope
and
mov
inc
fisubl
xor
fcmove
cs
xchg
orb
cmp
lahf
fs
fisttpll
scas
add
lea
out
popf
add
ds
lahf
jne
icebp
cs
jo
push
and
xchg
mov
loop
outsl
stc
popf
push
mov
sbb
fsubrp
ljmp
inc
cmpl
mov
sub
or
movsb
sahf
mov
loope
mov
cmpsl
or
loope
loope
js
jmp
dec
push
ss
andb
shll
cmpsb
add
inc
jg
add
cmp
sub
jecxz
iret
xor
fs
mov
lret
add
arpl
lock
stos
fwait
xchg
mov
cmp
out
fcmove
icebp
popaw
xchg
popl
mov
nop
fldenv
aaa
jae
xchg
jmp
js
movsl
in
icebp
mov
rcl
out
or
fsubr
in
mov
dec
push
sahf
jo
mov
fwait
loop
loope
sub
outsb
clc
lock
dec
je
jnp
jmp
cld
loopne
iret
roll
aad
sbbb
inc
fmul
push
sbb
push
jae
movsb
loopne
mov
into
pop
popa
jbe
dec
xor
mov
gs
sub
push
jp
sbb
sbb
idiv
cltd
loop
into
push
jecxz
add
les
pop
test
push
xchg
or
lock
inc
daa
aas
test
in
mov
js
mov
add
lret
call
aaa
dec
push
insb
rorl
rcll
pop
in
pop
mov
sbb
mov
out
call
test
aaa
in
pop
sti
pop
ss
outsb
xlat
and
pop
add
pushf
iret
cmp
adc
mov
push
imul
std
arpl
fdivl
pop
movsb
aad
mov
shll
fwait
addr16
out
pop
inc
jns
outsl
cld
and
jne
inc
mov
jo
scas
inc
clc
outsb
adc
test
mov
cmpsl
js
cld
cmp
cmpsb
xor
call
lock
enter
and
cmp
shll
test
rclb
lret
in
jg
nop
mov
stos
iret
in
mov
das
inc
jns
sub
fadd
pop
pushf
push
fucomp
mov
insb
rcrb
shll
arpl
xlat
into
je
push
notb
push
dec
xlat
push
daa
pop
clc
fsubl
stc
adc
aad
shrb
push
or
sub
and
jne
int3
mov
fsts
or
psrld
mov
lods
adc
popf
movsl
clc
test
jmp
cmc
mov
gs
sbb
pop
add
pop
or
pop
push
cltd
dec
inc
sbb
push
jno
fmuls
add
pop
lods
and
adc
rolb
sub
dec
das
or
mov
xchg
sbb
lods
pop
pop
push
add
ja
popa
mov
lret
adc
pop
test
psubsb
sub
icebp
in
cmpsb
mov
sti
jge
jp
mov
fcoms
jle
pop
loope
xorb
sub
sub
sub
push
add
add
pop
mov
test
xchg
hlt
mov
sub
xchg
xchg
and
std
sar
pushf
cmpsl
xchg
sbb
mov
xor
mov
dec
pop
push
sahf
push
enter
cmp
fidivrl
das
cs
push
xchg
sub
lds
mov
vpaddd
mov
outsb
mov
sub
call
aas
lahf
jbe
jge
das
js
imul
mov
jo
xor
leave
das
push
mov
mov
lcall
cs
ja
mov
repnz
fdivrp
fimuls
aaa
jle
mov
cmpsb
loopne
jmp
mov
push
push
push
ss
divl
push
scas
cs
push
cmp
mov
push
pop
sbb
pop
mov
aad
mov
push
lock
daa
push
rorl
inc
pop
inc
daa
sarb
push
cmp
jp
cmp
xchg
xchg
cmp
xchg
loop
push
test
sbb
sbb
pop
in
and
or
xor
jne
cmp
add
dec
test
add
aaa
dec
lock
xor
movsb
imul
add
loope
mov
dec
adc
insb
push
lret
aas
pop
inc
jge
sub
jo
cmp
rcl
out
rcrb
ret
sahf
sbb
lock
mov
fnstcw
xor
nop
call
fsubr
push
cmp
jnp
sahf
inc
les
sub
inc
mov
push
jge
out
int
sub
mov
in
adc
leave
sub
test
movsl
mov
sbb
in
xchg
mov
sub
add
push
imul
cmp
sub
xchg
jb
shlb
mov
pusha
cmp
sbb
xchg
out
iret
dec
rorb
adc
jno
xchg
leave
add
or
flds
cmp
cmp
ret
xchg
jb
add
cmp
inc
adc
ja
fcmovb
xor
sbb
lcall
inc
mov
aad
pushf
dec
adc
clc
xchg
in
or
xchg
adc
mov
mov
stc
icebp
adc
roll
les
jg
shl
jp
inc
cmc
in
pushf
out
xchg
movsb
mov
and
fnstenv
jge
in
decb
sub
xorb
cmp
sbb
xor
mov
mov
stc
jg
cmp
imul
outsb
and
sub
sbb
rcrb
test
call
pop
mov
ds
or
inc
das
rcl
rolb
mov
inc
jecxz
out
ret
sub
idivl
data16
push
inc
pop
xor
adc
out
decl
sbb
inc
das
mov
movsl
in
cld
jle
push
or
shl
lock
lods
mov
xchg
lahf
mov
test
dec
xchg
mov
stc
js
push
or
inc
lock
and
adc
jle
sahf
lret
xor
mov
cmp
out
or
mov
mov
lock
fmuls
das
pop
sahf
cmp
out
inc
fiaddl
in
mov
xchg
mov
aaa
jge
xlat
xchg
xchg
sbb
mov
dec
mov
lahf
sbb
ret
mov
subl
fcomps
loop
sbb
shll
je
cwtl
pusha
hlt
or
mov
icebp
dec
dec
decl
lods
sbb
and
xor
adc
mov
and
fscale
mov
push
imul
mov
adc
ret
pop
and
dec
or
pushl
pop
mov
sub
inc
push
ds
pop
inc
sub
xor
xchg
test
loope
xchg
jp
inc
ds
mov
lock
nop
imul
adc
shr
hlt
adc
cmp
and
ja
into
jl
fistpll
shl
test
pop
loop
iret
pushf
sahf
jecxz
lret
jns
push
pop
jmp
mov
mov
add
addl
or
push
ds
inc
fisubrl
out
sbb
xchg
repnz
cmp
cld
push
sahf
or
ret
test
inc
xorb
sbbb
inc
pop
ljmp
pop
mov
mov
and
inc
cmp
fimuls
pop
cmp
repnz
sbb
push
xor
mov
daa
loope
scas
pop
loope
aas
stc
jmp
clc
leave
xchg
cwtl
mov
add
pop
pushf
xchg
popl
out
inc
jge
imul
xchg
mov
jp
or
mov
test
test
jmp
or
jp
cmc
sub
inc
and
iret
mov
mov
cmp
xchg
mov
das
fstp
scas
pushf
lock
outsl
repz
and
xor
mov
push
mov
xchg
repz
lret
sbb
xor
sbb
popf
jb
lcall
dec
and
dec
jnp
mov
mov
pop
jns
loop
mov
jp
mov
pop
pop
rorb
stos
sub
dec
push
je
and
movsl
insb
data16
test
movsl
repz
pop
repnz
sub
arpl
xchg
pushf
mov
or
sub
aad
add
lahf
cmp
pop
popf
or
xor
rclb
movsl
jle
fstpt
ret
test
repz
sub
mov
rcl
aaa
clc
and
pop
testb
cmp
insb
cmpsb
and
sbb
push
sbb
xchg
scas
les
dec
mov
mov
push
pop
dec
notl
cmp
and
fidivrs
inc
inc
mov
or
int3
inc
loop
out
rcl
js
test
dec
repz
fs
lahf
dec
aas
andb
aaa
negb
hlt
xchg
notl
xor
add
inc
in
cld
js
or
mov
into
aad
fcomps
mov
mov
iret
add
test
fists
shll
xor
push
push
cmp
pushf
test
std
sbb
out
fcoml
and
add
mov
out
std
xor
push
lret
shr
ja
popa
in
dec
mov
test
in
xchg
dec
xor
aas
push
sahf
add
cli
pop
sub
int3
aas
bound
jae
add
pop
mov
lret
roll
aad
sar
movsb
pop
mov
xor
and
mov
xor
les
loopne
sub
jmp
inc
xchg
cmp
push
cmpsb
data16
push
popa
jmp
shll
in
hlt
pop
jbe
loopne
ss
sbb
arpl
sbb
or
sub
push
dec
pusha
shlb
icebp
sub
mov
cs
lock
subl
xchg
sti
fldt
enter
xor
or
out
sub
loopne
adc
mov
push
pop
or
in
cmpsl
push
xorl
xor
xchg
jle
call
mov
jnp
xchg
push
fwait
sti
jle
xchg
dec
add
jle
add
pop
into
mov
xchg
loope
in
and
repz
test
sti
xchg
push
outsl
loop
adc
cld
loopne
xchg
cltd
sub
movsb
push
mov
cmp
adc
rcr
lds
push
sub
hlt
xchg
lods
xor
jnp
std
fistpl
push
mov
inc
sbb
fcomip
lds
popf
mov
mov
or
in
xor
roll
adc
xchg
mov
or
rclb
pop
dec
andl
fisubrl
mov
fdivr
rorl
pop
push
push
sub
cmpb
sbb
sub
or
loope
lock
in
das
insb
popa
sub
pop
pop
fdivrs
jl
mov
sub
add
pop
es
pop
push
xor
dec
pushf
orl
ljmp
pop
pop
mov
push
push
add
movsl
xrelease
call
cmp
scas
fiadds
int
sbb
xor
sub
cmpsb
mov
lods
sbb
xorb
and
mov
lods
mov
xorb
insb
xor
test
lret
imul
js
icebp
xor
dec
sub
push
test
sub
or
xor
sbb
mov
loop
in
mov
idivl
cli
xchg
adcb
inc
dec
pop
lods
xchg
aas
adc
pop
clc
dec
lods
iret
add
call
add
inc
dec
sbb
pop
repnz
fadd
sbb
xchg
sbb
fisubrs
jno
movsl
dec
jecxz
jns
test
push
or
sbb
jmp
fs
xor
jmp
inc
ljmp
xor
cmp
outsb
mov
hlt
dec
sbb
xor
scas
pop
mov
mov
pop
skinit
push
or
cmp
nop
data16
ljmp
roll
repnz
jns
inc
es
mov
popa
fisubrl
shll
or
cmp
xchg
insb
es
aas
icebp
ror
fistl
jp
ljmp
cltd
das
xchg
ljmp
inc
inc
loop
xchg
jl
mov
pop
iret
jae
out
rcrl
loop
roll
fdivl
mov
xchg
mov
fdivp
daa
fimuls
mov
repnz
mov
andl
sbb
dec
xlat
rol
mov
jns
in
ss
dec
out
xchg
jp
cmp
mov
and
xchg
jecxz
jmp
push
push
aas
dec
sub
nop
adc
cld
push
mov
xor
push
xchg
addr16
cmpsl
push
pop
cld
stc
lds
inc
mov
jo
addb
ss
jmp
nop
mov
mov
test
popa
cmp
mov
shrb
push
xor
fists
inc
push
int3
pop
mov
mov
js
ss
xchg
add
xor
insl
aam
mov
test
int3
outsl
mov
add
and
lods
sbb
filds
subl
dec
icebp
mov
or
push
std
cmpsb
je
or
test
mov
mov
sbb
dec
xor
cmpl
sahf
jne
cmp
fwait
pop
stc
inc
sbb
add
lods
in
and
add
aam
jmp
and
sub
js
sub
mov
arpl
out
push
dec
dec
scas
icebp
fnstsw
repz
mov
loop
fdivr
cmp
xchg
xchg
fsubs
pusha
out
sarb
push
adc
imul
ds
int
adc
jo
sbb
dec
inc
out
mov
push
and
and
cmovne
mov
xchg
cltd
inc
inc
rcll
and
je
pop
mov
add
cs
mov
pop
popa
div
adc
test
lods
mov
or
jle
sub
push
dec
aam
push
jecxz
cli
shl
fs
add
out
xchg
inc
stos
inc
mov
je
push
stos
sbb
rclb
push
ljmp
ljmp
mov
bound
jmp
dec
add
push
or
in
sub
xchg
and
sbb
data16
leave
sti
scas
adcb
aaa
xchg
sub
test
mov
xchg
out
and
daa
inc
aaa
jne
addr16
mov
jae
inc
inc
mov
mov
adc
push
into
mov
push
lea
mov
inc
mov
push
dec
push
and
cmc
adc
lea
fsubr
das
cmp
jne
mov
xor
cmp
fcomip
and
add
and
sub
out
mov
push
leave
insl
mov
and
out
bound
icebp
gs
int
fisubrl
pop
dec
out
mov
gs
xlat
ficompl
test
dec
shll
aaa
jl
add
mov
sub
loopne
stc
jle
sbbl
cmpsb
mov
dec
mov
xchg
ret
xlat
jge
fucom
sub
pop
inc
fcoms
or
inc
repz
or
xor
fstpt
jbe
pop
outsb
sbb
ficoml
push
inc
adc
icebp
xor
dec
push
sbb
xor
scas
fsubrs
mov
cmc
pop
lahf
sub
xchg
sti
inc
adc
mov
cltd
fcmove
sbb
xchg
jmp
es
loop
lods
ret
push
add
mov
sbb
fstps
mov
and
arpl
scas
mov
fnstenv
push
sub
je
inc
int3
data16
push
mov
ficomps
mov
cmp
gs
sti
xchg
shlb
notl
cltd
cmp
je
fwait
sbb
dec
in
pop
adc
xorb
mov
es
push
lret
mov
in
mov
imul
inc
popf
lods
dec
lahf
sub
int3
lcall
lcall
jbe
cs
pop
push
out
pop
fisttpll
imul
and
jb
or
in
sub
movsb
aad
push
sub
sbb
lahf
test
xor
push
xchg
ret
sub
sahf
and
pop
sub
xchg
subb
mov
pop
adc
cmp
je
adc
push
mov
pusha
in
cmc
and
in
loope
outsb
add
xor
jecxz
icebp
push
ficompl
push
or
dec
mov
mov
ret
or
aas
mov
adc
xchg
mov
lret
adcl
dec
xchg
lea
xchg
lret
xlat
ret
out
cld
dec
jecxz
dec
jnp
xlat
aas
xchg
sbb
mov
mov
fildl
insl
ret
sbb
nop
repnz
mov
pop
mov
test
push
add
xor
outsl
arpl
dec
divb
sarb
ret
sub
push
or
pop
imul
mov
add
mov
xor
cli
out
pop
or
fchs
stos
orb
sbb
pop
or
incb
pop
in
out
shll
sub
das
cltd
outsl
test
test
insb
jl
xchg
insl
inc
xor
dec
repz
hlt
dec
adc
pop
shll
pushl
mov
sbb
adc
ljmp
sub
dec
push
data16
pop
lcall
pop
fistps
or
xorl
mov
add
xor
repnz
in
mov
dec
out
xchg
jbe
arpl
pop
imul
rorb
pop
shll
roll
xchg
add
std
fcompl
repz
pop
leave
popf
jb
jne
aaa
in
and
test
dec
lds
sbb
rcrl
sbb
xchg
jo
cli
cwtl
push
sub
or
scas
or
inc
sub
mov
lret
sbb
jecxz
test
sub
adc
insb
sbb
xor
shll
pop
outsb
xchg
fs
fcoms
jp
loop
push
cmpsb
shrb
mov
mov
arpl
cltd
out
js
lcall
cli
mov
push
out
pop
iret
pop
dec
sub
add
pop
mov
fdivrs
stc
pop
adc
sub
pusha
sbb
sub
notb
mov
xor
sub
cwtl
mov
xchg
scas
and
or
lea
pop
loopew
dec
sub
adc
sbb
repnz
pop
inc
and
or
inc
pop
icebp
sub
inc
inc
cs
ljmp
mov
jns
out
rcll
sub
mov
leave
push
outsb
aas
push
in
sarl
std
fnstenv
loop
fwait
sarb
lret
cmp
fists
mov
xor
mov
dec
mov
inc
fdivp
sbb
xchg
rcl
sti
mov
ret
les
cmpsb
call
mov
xchg
mov
xchg
imul
cli
mov
xor
outsb
in
repnz
loopne
lcall
stos
fwait
idivb
std
data16
push
cmp
in
aaa
outsb
aas
fimull
sub
test
in
dec
ljmp
cwtl
andb
inc
rcl
dec
push
push
aaa
movsb
out
dec
or
push
fisttpll
insb
sahf
fnstsw
sbb
mov
loope
loop
xchg
call
rorb
cmp
popf
jmp
in
xchg
daa
mov
push
aaa
sbb
mov
mov
jl
cwtl
cld
js
push
jle
cmp
xchg
xchg
imul
arpl
push
adc
stc
aas
sbb
xchg
cmpsl
sbb
fiaddl
call
push
insb
and
sbb
mov
and
lods
pop
or
pop
jle
sub
aaa
pop
sbb
xchg
inc
out
xlat
adc
pop
or
add
xchg
inc
bound
imul
xor
daa
xor
or
pop
jne
push
in
push
mov
insw
sti
mov
mov
inc
xor
dec
pop
xchg
lahf
push
dec
js
add
stos
or
das
test
enter
into
pop
pop
fs
roll
xor
mov
add
adc
add
sub
xchg
sbb
andnps
fdivrl
hlt
mov
cmp
stc
sub
push
in
push
rorl
loopne
jnp
add
xor
mov
sbb
mov
dec
mov
or
mov
popa
in
lahf
pop
mov
test
dec
bound
dec
js
fldenvs
or
jo
and
addl
dec
pop
and
cmpsl
arpl
out
enter
incb
lods
ljmp
cmp
jmp
mov
dec
mov
cmc
xchg
cmp
mov
sahf
imul
pop
sub
mov
cmpsl
push
push
sbb
popa
mov
test
inc
pushf
fld
mov
pop
pop
add
dec
cld
push
push
mov
jle
popf
fcompl
mov
or
sub
inc
sbb
into
daa
adc
add
or
popa
add
scas
adc
mov
mov
push
into
mov
adc
push
add
push
cltd
mov
sar
mov
daa
inc
xchg
ds
mov
imul
int
lcall
adcl
inc
push
sbb
sbb
sahf
dec
lea
popf
dec
stos
or
cwtl
das
adc
xor
clc
imul
jg
shlb
mov
loopne
mov
fcomps
lds
aam
stc
int3
stc
adc
push
popf
adc
mul
jo
mov
xor
sti
or
sub
loop
lea
shll
xchg
pop
mov
mov
sti
mov
mov
icebp
pop
lock
lcall
pop
pop
call
jbe
fisubs
xchg
cmpb
mov
les
inc
mov
lds
shl
loopne
in
mov
inc
sbb
sub
insl
fwait
shrl
nop
xchg
subl
in
push
xorb
lret
icebp
loopne
jb
lds
sbb
int
sti
and
enter
dec
js
adc
pop
std
mov
fiadds
jb
add
jl
enter
jbe
fwait
jmp
sbb
pop
mov
xor
ja
cli
xchg
add
or
insl
adc
inc
add
sbb
mov
jne
roll
arpl
or
pop
cltd
jbe
iret
push
and
pop
sarl
mov
or
test
das
vorps
aas
out
pop
pop
push
fisttps
push
insb
scas
lcall
mov
aam
mov
cmp
jb
push
push
xchg
mov
mov
lds
rcll
es
xchg
mov
pop
mov
mov
mov
dec
push
mov
aam
inc
sbb
rcrb
roll
imul
es
xchg
pop
adc
fsubr
out
mov
pop
filds
xorb
pop
push
sbb
das
add
xor
inc
loope
and
sub
add
in
mov
mov
sbb
fpatan
jp
scas
cmp
pop
xchg
jne
xchg
ret
in
mov
lret
ret
jne
jmp
stc
fsubs
jo
sbb
aam
adc
les
loop
dec
pop
movsl
jl
jecxz
push
xchg
ljmp
rcrb
mov
or
test
shr
xor
aaa
sbb
cltd
pop
stos
adc
aas
push
sbb
add
nop
fsts
insl
aam
adc
xchg
jmp
fsubs
movsl
dec
scas
rolb
lret
jne
lahf
and
lods
mov
daa
in
icebp
and
jns
sbb
pop
movsl
add
ljmp
rolb
lock
aam
push
dec
ror
pop
pusha
sbb
sti
push
cmpsb
cmpsb
mov
mov
mov
pop
push
popf
loope
mov
pop
pop
sub
inc
fwait
testb
add
mov
shlb
xorb
lock
jbe
faddp
mov
andl
and
xchg
dec
out
dec
push
gs
mov
xchg
cmpsb
and
xlat
and
popf
cld
push
push
iret
push
ror
sbbb
fsub
mov
call
fidivrl
push
sub
aam
scas
mov
xchg
std
imul
imul
push
jge
fwait
mov
ss
jae
sahf
ja
mov
jnp
sub
out
cs
stos
and
sub
jno
push
int
mov
jle
dec
push
sahf
shl
xlat
mov
rorb
jbe
rcll
or
pop
cli
data16
outsl
push
xchg
sbb
decl
sbb
push
mov
jno
mov
lret
sbb
mov
inc
dec
add
inc
test
xchg
pop
adc
icebp
lods
outsl
dec
sub
xchg
in
test
lcall
inc
into
andl
leave
aad
push
out
mov
fstpt
iret
lea
or
xchg
sbb
stc
popa
xchg
sub
hlt
push
sbb
and
sbb
test
test
lds
mov
pop
and
mov
or
testl
rorl
cmpsl
fldenv
adc
frstpm(287
jns
and
ja
cmp
mov
adc
sub
scas
jmp
inc
movsl
push
mov
inc
xlat
mov
aad
in
push
xor
sub
dec
lods
xchg
add
pop
push
adc
pop
in
ss
mov
jne
jne
xor
cli
mov
sbb
cmp
jb
add
mov
sahf
cltd
push
lret
xor
dec
dec
xlat
xor
pushf
lret
sbb
jns
mov
mov
aas
movsl
mov
ret
xor
fsts
insb
jp
mov
mov
or
inc
dec
push
test
inc
movsb
xor
cwtl
in
pop
aam
mov
daa
rcll
cmc
push
lahf
mov
insb
jb
sbb
xchg
pop
aaa
jo
push
xor
xchg
mov
repz
cmpsb
adc
mov
pop
mov
push
dec
clc
pop
cmp
gs
and
pop
rcl
xchg
push
lret
pop
pop
rcr
jb
bound
test
sbb
ftst
sub
xor
mov
push
inc
adc
movsb
push
cmp
add
adc
and
mov
lret
inc
cmp
nop
and
inc
or
inc
mov
mov
lods
mov
cmp
mov
mov
cltd
and
sbb
xorl
in
jge
daa
ljmp
pop
sbb
pop
lcall
pushf
cmp
testb
aas
mov
mov
and
data16
jmp
stc
lds
es
shrb
mov
dec
fucomip
in
dec
cmpsb
rep
cli
outsl
xor
push
mov
test
inc
nop
nop
push
out
cld
jae
adc
dec
ds
adc
jg
mov
outsb
popl
jnp
cmp
outsl
stos
fistpl
rol
mov
rcll
test
xchg
loopne
lahf
cmp
and
jg
test
xor
mov
das
dec
ds
sbb
mov
cs
inc
sub
mov
ljmp
ljmp
rcrb
fs
outsb
and
mov
lods
xchg
enter
mov
lods
jecxz
pop
xor
push
test
mov
add
adc
mov
lods
mov
pop
sub
add
mov
lret
outsb
outsl
sub
test
test
jae
cmp
cmpsb
movsl
orb
xchg
test
jge
add
test
and
jp
ljmp
aas
sub
ror
cmp
sbb
inc
xchg
mov
push
jmp
push
push
test
xlat
mov
mov
inc
cmc
arpl
cmp
dec
mov
jp
push
mov
imul
inc
faddl
lret
mov
mov
xor
ret
mov
pop
jecxz
sub
push
inc
jbe
mov
hlt
jmp
daa
outsl
cmpsl
imul
repnz
pop
test
test
divl
pop
mov
andb
mov
add
pop
jb
push
xchg
bound
dec
adc
test
pushf
or
js
dec
fistps
rcl
in
adc
push
fsubs
push
mov
int3
popf
mov
mov
xchg
pop
lods
dec
jg
sub
fmulp
dec
repz
sbb
ror
enter
mov
jae
mov
out
mov
pop
mov
pop
push
push
popl
jmp
push
cmp
mov
lcall
test
push
ljmp
sub
sbb
or
or
jne
push
push
iret
jge
negb
mov
cmpl
push
mov
xchg
inc
dec
outsb
sar
es
xchg
push
and
lods
sahf
dec
mov
inc
jl
mov
pop
mov
sub
fcmovb
and
in
in
out
out
fs
add
jp
xor
std
stos
adc
mov
fdivl
mov
or
testb
sbb
pushf
adc
jo
lds
sbb
pop
das
sub
jne
xlat
pop
jo
ja
push
aaa
mov
je
xlat
loope
dec
in
inc
inc
pop
mov
in
sub
popa
jne
aam
repnz
cltd
loop
xchg
xchg
test
mov
push
js
notb
mov
aam
xchg
arpl
dec
push
loop
stos
jl
icebp
push
pop
mov
push
adc
dec
les
mov
pop
sub
xor
jnp
clc
dec
pushf
push
aaa
fs
xor
add
sbb
imul
scas
mov
subl
ja
push
mov
inc
loop
lret
cli
xchg
mov
add
mov
mov
in
mov
sbb
mov
or
aaa
sbb
leave
pop
movsl
lret
out
cmp
daa
sub
and
stos
pop
mov
fnsave
cmp
inc
pop
push
push
dec
ret
out
jl
ret
lea
cmp
rolb
movsl
push
mov
dec
jo
fdivrl
loope
shll
orb
and
jp
icebp
jae
pop
xlat
add
stos
lea
xchg
mov
faddp
cmc
aaa
icebp
aas
cli
push
pop
daa
vcvtusi2sd
shrl
jnp
data16
dec
ss
shl
jp
sub
and
les
jo
test
mov
aaa
insl
repnz
lea
push
add
sbb
sbb
mov
jmp
or
or
xlat
mov
fs
jle
xor
sbb
mov
push
mov
or
sub
adc
xor
cmp
pop
or
jae
xchg
sahf
cmc
aaa
mov
xchg
pop
stc
mov
out
ljmp
lahf
adc
and
dec
pop
cmc
mov
mov
movsb
nop
push
inc
fmull
filds
repnz
sub
into
cmpsb
bound
inc
repz
jmp
jb
ja
push
add
cmpb
enter
mov
mov
ficompl
mov
mov
addb
lods
add
rolb
sub
cmp
lods
sbb
push
jge
pusha
in
dec
shlb
fidivrs
imul
jmp
push
ficoms
movsl
insl
imul
jno
ret
inc
nop
mov
and
jmp
mov
fisubl
movsb
lods
xor
frstor
fisubl
les
inc
push
mov
sbb
filds
inc
lds
sti
dec
jbe
sub
ror
push
mov
shlb
and
mov
daa
jle
mov
push
insl
aad
sti
lea
adcb
icebp
dec
movsl
or
dec
sbb
xor
addr16
mov
lahf
jecxz
addr16
mov
call
cs
or
jb
test
aaa
xchg
jp
filds
inc
lcall
imul
jmp
add
mov
push
in
jmp
icebp
dec
dec
addb
or
data16
sbb
imull
or
in
lods
cld
enter
xchg
outsl
iret
pop
cld
jmp
daa
jle
mov
push
sbb
add
cwtl
add
add
int3
and
fstpt
xchg
jns
cli
fistl
dec
ficoms
or
adc
and
pop
cmpsl
hlt
adc
push
shlb
xchg
in
je
mov
sbb
jl
test
int
lock
mov
fdivrl
popf
and
xchg
dec
js
les
mov
dec
xchg
sub
into
xchg
adc
fistps
mov
push
jmp
fsubrl
dec
test
xchg
dec
inc
jle
dec
pop
push
imul
cmp
sub
rorl
shll
cmpsb
jne
cltd
popf
sub
add
sbb
fsubr
xor
jns
ret
fcomps
lods
lods
add
mov
test
pushf
xor
push
insl
cmpsl
sti
ret
and
pushf
es
inc
cs
outsl
sbb
movsl
cmc
hlt
shrl
test
xor
adc
rclb
and
neg
sbbb
fnstenv
push
cld
and
jecxz
push
cld
sbb
cmpsb
test
clc
inc
pop
pop
ss
rol
xchg
jns
xor
call
sub
or
push
or
and
cmp
mov
dec
pushf
mov
mov
cmp
ret
cmp
stos
cmp
fiadds
mov
call
add
inc
insb
arpl
aaa
aam
xor
mov
out
inc
pop
test
xor
popf
mov
cmp
xchg
imul
sbb
add
and
outsl
jbe
mov
jno
in
dec
out
imul
enter
xor
stos
mov
in
ja
cmp
in
test
outsb
jmp
pavgw
fsubrl
mov
cli
xchg
ss
mov
xchg
cld
xorb
push
cmp
mov
pop
xlat
scas
jno
dec
rcrl
jle
push
pushf
cmp
push
out
inc
pushf
adcl
lcall
pop
mov
push
sub
sub
jle
loopne
repnz
push
sbb
inc
add
jle
mov
popf
daa
movups
push
xchg
pop
adc
adcl
lahf
mov
xchg
lcall
pop
lret
mov
pop
or
adc
dec
pop
mov
rol
pop
sbb
mov
dec
jns
pushf
ljmp
pop
lods
aad
mov
test
push
pop
pop
add
mov
pop
pop
cmp
out
mov
test
fidivs
xor
sahf
inc
mov
push
lahf
add
pop
xor
ja
dec
or
mov
push
mov
hlt
xor
movsl
xchg
scas
shrb
bound
inc
jecxz
lods
inc
aaa
das
inc
addl
add
inc
stc
stos
imulb
insb
xchg
xchg
inc
jno
jle
addb
repz
in
sbbl
cmp
xchg
add
sub
aaa
and
gs
shrl
sub
xor
std
add
push
adc
in
xor
aam
or
in
mov
inc
fimull
push
jg
jne
sarb
or
in
add
or
pop
cmp
outsl
xor
out
repz
mov
adc
cmp
orl
and
cltd
xchg
cltd
cli
pushf
push
mov
jl
icebp
mov
xor
jnp
cmp
test
test
fldenv
test
fsts
dec
or
mov
gs
jecxz
imul
clc
push
pusha
mov
mov
cwtl
sbb
std
jge
repz
push
popf
pusha
js
int
sbb
sarb
clc
adc
outsl
cmpsl
pop
aaa
jo
mov
loopne
and
jp
lret
mov
in
sub
rcrb
imul
cmpl
cmc
loopne
and
inc
cs
call
mov
push
push
stc
adc
ja
nop
daa
ja
insl
bound
dec
cmp
daa
xchg
fidivrs
sub
jns
dec
sbb
cmp
mov
sub
add
loop
mov
sub
xchg
adc
movsl
dec
aam
sbb
mov
out
push
dec
stc
xchg
out
out
enter
je
les
enter
push
ret
jge
std
mov
dec
std
xor
inc
cmp
fsubs
mov
cmp
add
aaa
sub
in
mov
jp
cmc
lcall
mov
icebp
fcom
pushf
push
xchg
mov
jo
sti
jo
mov
fucom
adc
adc
adc
gs
lods
jbe
dec
jmp
cmp
adc
push
test
fs
ret
pop
xchg
stos
inc
lock
pop
sbbb
lods
cmp
sub
add
fiaddl
adc
xchg
cli
inc
aas
jle
rclb
ficoms
jle
movsb
cmp
ss
dec
cltd
testb
leave
out
pop
lea
or
je
xchg
shlb
hlt
aam
jo
jo
roll
dec
enter
mov
stos
sub
mov
push
push
jbe
sbb
mov
cli
imulb
push
mov
dec
jl
xlat
xor
pop
sbb
shll
mov
jecxz
bound
xor
push
mov
push
fstpt
roll
fwait
cltd
in
add
add
push
arpl
imul
mov
sbb
frstor
lods
mov
sahf
jecxz
mov
adc
mov
xchg
je
aas
or
push
ja
mov
fstpt
outsb
outsl
call
push
aaa
mov
mov
jae
shll
test
lcall
test
je
jae
cltd
aaa
das
xchg
lods
mov
sarl
pop
and
adc
stos
fcmovne
int
lea
xchg
pop
cwtl
push
mov
int
sarl
add
push
and
push
movsl
sarl
andb
test
add
int3
adc
mov
fisubs
fldcw
sar
fbld
xorb
sub
xlat
adc
sti
pop
mov
inc
mov
dec
je
xor
pop
adcl
mov
sbb
xchg
dec
cmp
and
sub
cmp
push
xchg
pop
mov
and
insl
push
mov
sub
add
cmp
mov
push
movsb
xor
hlt
mov
pop
sub
jne
dec
fcomp
push
fstpl
sbb
mov
jae
pusha
scas
jo
add
sbb
out
cmc
bound
mov
dec
adcl
add
xchg
push
imul
ljmp
jge
sbb
or
add
mov
inc
pop
inc
push
cmp
or
sub
push
mov
test
xor
mov
mov
js
movsl
push
and
negl
hlt
je
push
adc
popf
mov
xlat
pop
inc
push
fstpl
orl
dec
cltd
loop
xchg
clc
xor
cmpsl
adc
pop
cmp
je
mov
cmp
lahf
dec
push
jne
dec
push
dec
mov
add
xor
push
sti
shll
push
sbb
nop
mov
psubw
popa
testb
fsubrs
or
xchg
insl
push
jne
shl
mov
adc
cli
lods
fiadds
in
jecxz
pop
adc
pop
out
out
and
jmp
aas
mov
sub
jmp
pop
mov
inc
mov
ror
jno
jle
test
xchg
cmc
loop
adc
outsb
mov
mov
mov
xlat
or
mov
pushf
idivl
pop
cld
push
push
movsl
adc
dec
scas
jp
add
in
xchg
out
xchg
not
pop
pop
imul
pop
and
lret
cltd
rol
add
mov
test
sbb
loope
lret
push
sahf
rolb
adc
sarb
lret
add
sahf
enter
addr16
loop
aaa
shlb
arpl
sarl
adc
dec
cli
and
int3
mov
or
dec
mov
dec
rol
cmp
js
and
ljmp
mov
push
aam
mov
das
jne
mov
xor
idivl
fstl
xor
lds
push
xchg
pop
mov
inc
fcomps
test
and
rolb
arpl
sar
gs
das
sbb
xor
daa
ret
jns
faddp
fcoms
mov
mov
fisttpl
ret
pop
xor
mov
bound
dec
xchg
mov
xlat
cmpsl
mov
or
rclb
cmp
ficomps
gs
movsl
ljmp
dec
das
icebp
xor
inc
es
jl
lahf
sahf
mov
mov
in
imul
add
pop
pop
and
cmpsl
mov
leave
aas
dec
mov
mov
sahf
sub
jno
test
dec
pushf
loopne
xchg
dec
dec
icebp
or
xlat
enter
xchg
outsb
mov
push
fistpl
out
aas
cmp
test
je
test
fdivrl
push
in
adc
or
call
push
mov
in
dec
inc
dec
sub
cs
loope
stos
mov
mov
aaa
aas
cli
loop
push
mov
movsl
push
mov
adc
in
mov
rcrl
ljmp
xchg
enter
rcrb
mov
cwtl
cmpl
lock
push
movsb
mov
dec
cmp
sub
subb
jns
dec
fcoml
cli
or
xchg
dec
jle
andb
inc
mov
xchg
mov
inc
in
loope
or
jp
cmp
or
adc
inc
xchg
or
sbb
jnp
lods
repnz
int
ret
mov
mov
mov
add
test
jmp
ljmp
data16
jae
fimull
imul
jb
jo
sarl
sbb
mov
loopne
aaa
cltd
pop
gs
xor
jmp
pop
cwtl
cld
mov
jnp
fs
cmpsb
push
movsb
mov
mov
push
mov
inc
sti
imul
repnz
lock
jl
mov
fisttpl
fsub
aaa
scas
dec
jb
out
mov
ret
xor
scas
pop
mov
cwtl
stc
outsl
aad
mov
xor
lods
cmp
xor
and
sbb
or
fs
xchg
es
les
sbb
loop
xchg
xchg
push
es
inc
std
cmp
inc
jne
pusha
ljmp
orb
cmp
cltd
icebp
xchg
xchg
orl
subl
shrb
push
outsb
pop
sbbb
pop
arpl
int
cwtl
ret
popf
sub
xor
sbb
stos
pushf
mov
shll
fs
mov
in
popf
push
sbb
cmp
inc
std
fbstp
or
or
sbb
push
scas
ds
call
sbb
subb
mov
adc
popf
push
sarl
pop
out
cmp
xchg
mov
test
lret
sbb
lods
gs
dec
sahf
test
sub
cwtl
ja
xchg
pop
movsb
test
lret
fisubrs
pop
dec
cmp
lret
fcmovu
mov
mov
jnp
push
insb
mov
pushf
ja
lock
pop
fs
mov
or
cld
jecxz
popa
inc
ljmp
out
adc
mov
xchg
mov
mov
mov
pop
mov
xchg
xor
in
repz
and
jbe
xlat
mov
imul
movsl
js
lret
add
idiv
hlt
or
jp
cmpsb
mov
dec
xor
mov
lea
out
sbb
insl
cs
sbb
mov
icebp
movsl
dec
xor
pop
and
lcall
pop
add
pop
mov
enter
jns
leave
jg
dec
inc
enter
sub
jl
push
mov
repz
popf
xchg
jo
mov
cwtl
push
test
les
or
lock
lods
add
or
lods
xor
sbb
insl
pop
ljmp
cmc
stos
jle
or
jne
push
int
fs
test
mov
andl
xchg
pushf
les
fiaddl
cmp
mov
imul
movsb
sbb
scas
dec
imul
into
mov
xchg
into
loopne
push
add
mov
mov
sub
cmpsb
sti
xchg
jo
addl
mov
insb
ss
xchg
inc
jge
or
fucom
sub
pop
ja
sub
sbb
fsubrl
dec
xchg
adc
fst
push
cmp
dec
adc
fstp
leave
adc
or
ret
xchg
push
out
arpl
jmp
out
mov
push
daa
lea
cli
lret
mov
inc
pop
sar
push
xchg
pop
inc
inc
in
inc
mov
and
cs
ret
xorb
add
xor
in
and
mov
cmovge
mov
xchg
adc
idivl
jb
xchg
out
scas
daa
mov
cli
enter
and
adc
ds
loope
cmp
int3
les
in
mov
push
jno
sar
jp
xor
shl
in
cltd
cmc
fadds
pop
outsb
sbb
push
repnz
xchg
mov
pop
inc
movhps
movsl
jbe
pop
sahf
mov
cmp
es
clc
mov
decb
pop
sahf
dec
mov
push
add
dec
xchg
push
jecxz
fsubrl
mov
roll
cmc
push
add
lods
repz
add
fwait
push
imul
cld
inc
repnz
mov
clc
cmp
subl
fs
jl
sbb
cmpsl
jb
out
cwtl
orb
pop
sbb
pushf
cmp
and
dec
pushf
stos
icebp
cmpsl
and
cli
push
cmp
sub
jg
and
cmp
enter
outsb
add
cltd
stc
bnd
mov
test
cmp
adc
dec
adc
sub
fwait
adc
shrl
repz
outsl
push
adc
or
mov
leave
adc
push
add
mov
xor
int3
loope
add
and
inc
ret
fs
out
sub
push
pminub
sti
sbb
mov
mov
inc
fildll
iret
mulb
push
cmp
jbe
pusha
ja
xor
fstps
scas
jge
jp
cltd
movsb
lds
int3
dec
cmpsb
or
fwait
jnp
xchg
dec
sub
fbstp
sbb
sbb
adc
mov
sub
mov
popf
aas
jno
sarb
mov
lods
or
pop
in
fstpt
mov
dec
aad
sub
sarb
dec
shl
outsl
cli
out
leave
jg
and
adc
mov
cmp
bound
and
jnp
pop
mul
push
inc
in
and
pop
push
add
adc
jo
add
dec
data16
xchg
lcall
cmc
mov
and
ljmp
add
adc
lock
push
mov
test
mov
pop
mov
jbe
mov
gs
xchg
adc
into
sbb
out
sub
pop
dec
stc
cmpsb
sti
mov
leave
jo
add
mov
mov
pop
push
dec
dec
jecxz
mov
ss
cmp
ret
pop
inc
xchg
js
ret
mov
push
push
stc
mov
out
js
into
jnp
mov
dec
or
out
jo
or
pxor
push
inc
jno
sub
roll
push
sub
mov
inc
sbb
sub
xor
aad
pushf
xor
ja
outsl
and
xor
mov
testl
icebp
arpl
pop
xor
adc
jge
adc
subl
push
mov
jge
dec
ret
pop
enter
insl
xor
adc
dec
cmp
inc
popl
mov
pop
lea
mov
ret
out
int3
aad
pop
add
pop
mov
popf
add
aam
jmp
lock
ret
push
sub
mov
sub
pop
clc
mov
push
dec
push
pop
cmpsb
aam
and
das
dec
add
repnz
arpl
repz
fnstsw
jge
sbb
mov
xadd
je
icebp
mov
scas
or
pop
loope
jb
xchg
int
mov
push
sbb
inc
or
sub
jge
pop
mov
les
mov
or
jo
or
repnz
xchg
jge
mov
push
adc
adc
cmp
stc
icebp
adc
fisttpll
push
sub
cmp
pop
mov
sbb
dec
dec
imul
mov
xor
lcall
repz
mov
insb
lods
enter
nop
push
divl
sbb
xchg
loope
adc
pop
popf
inc
iret
icebp
add
loope
sub
cs
cmp
xor
dec
test
xchg
sub
push
cli
ljmp
jle
dec
out
inc
fisttpl
leave
fwait
cmpsb
dec
sbb
or
mov
fsubs
jmp
sub
out
dec
popf
shlb
dec
test
loopne
ds
into
in
push
fldt
add
mov
in
stos
inc
js,pt
dec
jle
cmp
dec
xor
mov
xor
pusha
cs
mov
scas
nop
mov
rolb
std
sti
sbb
jae
add
loopne
or
mov
cmp
mov
dec
movsl
add
fsubs
fstps
push
add
cmp
inc
rol
aam
mov
dec
idiv
pop
cmp
cmp
fidivrl
add
and
xor
loopne
mov
push
cmpsl
loop
push
adc
adc
addb
mov
mov
xchg
in
sub
or
cmc
inc
inc
lahf
xchg
dec
aad
int
adc
push
sahf
call
subl
push
mov
cmp
mov
xchg
dec
push
mov
rolb
shr
pop
xor
popa
xchg
xchg
pop
inc
jae
mov
add
sub
jp
mov
sbb
mov
sahf
cltd
repnz
ficompl
out
cmp
inc
fsubrs
in
xchg
add
mov
xchg
and
in
lret
outsb
mov
stc
adc
jecxz
stc
call
lock
push
sbb
and
push
pop
dec
ds
add
fucomp
xchg
mov
lods
cmpsl
mov
lahf
jne
mov
insb
test
cmp
es
or
dec
dec
xor
jns
xchg
cmpsl
xor
lock
bswap
jns
outsb
js
out
icebp
mov
mull
dec
inc
push
ja
mov
jge
sub
pop
outsb
std
out
adc
cs
add
or
lock
jmp
std
loope
mov
xlat
rorb
jbe
inc
adc
aad
dec
and
jbe
popf
dec
cmovae
gs
fnstcw
sbb
jno
mov
and
data16
insb
inc
push
xor
addl
data16
call
add
dec
jbe
inc
fsubrp
push
jno
fs
rcrb
out
repnz
jl
int
lret
mov
jmp
xchg
xor
insb
arpl
jcxz
xchg
adc
xor
cs
fidivrl
into
aam
std
bound
out
mov
pop
aaa
das
subl
leave
sbbb
add
mov
enter
mov
mov
shrb
sub
jne
sarb
sbb
stc
jb
xacquire
popf
cwtl
adc
add
jo
mov
xor
mov
scas
adc
js
push
rolb
sub
pop
idivl
cmp
cmpsb
inc
mov
test
mov
cmp
jecxz
stc
rcll
pop
lods
dec
push
and
and
cmp
hlt
fists
int3
push
sahf
sbb
adc
inc
mov
adc
mov
mov
test
cmp
inc
push
mov
imul
into
pushf
jle
inc
inc
sbb
insb
jge
add
xchg
cmp
adc
enter
mov
cmc
mov
adcl
mov
cs
xor
outsb
call
ja
jne
push
cmp
les
adc
jmp
out
jb
xor
mov
mov
pop
pop
mov
mov
ret
add
pop
gs
fistps
mull
leave
cmpsb
negb
sub
cmc
lea
shlb
jge
sub
xchg
and
push
fmull
sahf
adc
je
pop
dec
cmp
fcoms
rorb
mov
mov
icebp
into
fs
cmpsb
cltd
inc
mov
popa
push
cmc
add
add
aam
cmpsl
and
xor
and
cmpsb
adc
movsb
jmp
out
inc
cli
jecxz
add
movb
popf
dec
dec
push
inc
sbb
dec
mov
mov
dec
clc
pop
xor
movsl
mov
mov
std
and
ret
mov
lods
pop
jge
pusha
jge
dec
pusha
data16
bound
int
adc
adc
xchg
stc
fisttpl
push
push
je
imul
or
xor
sbb
aam
fisubl
scas
sbb
decb
pop
inc
dec
loop
test
sub
add
mov
outsl
push
dec
jb
jg
lods
lock
lret
push
inc
jbe
push
test
xor
imul
xchg
cli
out
mov
fwait
clc
xchg
jge
sti
daa
insl
jae
sub
shr
pop
pop
and
mov
jp
xchg
scas
xchg
test
or
clc
insb
mov
or
sahf
add
push
aam
adc
cld
jmp
stc
ficoms
jmp
fdivs
scas
aas
dec
jl
ret
inc
xor
add
pop
ficomps
loopne
lods
cld
sbb
sarb
ret
rolb
in
cmp
ljmp
xor
sbb
insl
dec
and
aas
fstpt
sbb
mov
clc
push
imul
sbb
lret
push
push
out
xchg
mov
add
imul
fcomps
cmp
pop
scas
mov
fildl
and
xchg
cmp
pop
sub
xchg
ficomps
fucom
jne
xor
mov
jnp
sbb
rorb
out
sbb
imul
pop
repnz
aam
push
fidivrs
xchg
xchg
dec
push
adc
xor
cmp
push
inc
mull
rorb
fs
outsl
cli
subl
lock
movsb
adc
cwtl
scas
xlat
jns
xchg
mov
mov
dec
icebp
js
flds
testl
mov
jp
jns
xchg
mov
push
lods
or
bnd
mov
enter
popf
fldlg2
mov
in
ljmp
enter
lcall
xor
push
cmp
inc
jns
or
jno
jbe
lods
lea
in
int3
stc
cmp
fidivs
loop
push
mov
addr16
into
sbb
dec
insl
popa
add
xlat
mov
loop
add
or
xor
in
mov
jo
mul
mov
xor
mov
repnz
jne
mov
or
sbb
and
lea
fldcw
sbb
lds
cmp
orl
leave
movsb
cltd
repnz
int
inc
sub
or
mov
adc
loopne
dec
movsl
notl
aad
popa
xor
in
dec
mov
ret
jle
mov
test
lea
xor
cs
mov
xor
xchg
cmp
dec
push
ss
push
repnz
addr16
pushf
into
nop
pop
and
ds
push
and
ljmp
je
pop
or
jp
fidivrl
mov
or
xchg
fwait
mov
push
or
cs
in
in
jbe
insl
cmp
adc
jmp
call
mov
xchg
jle
rcl
xor
sbbb
int3
pusha
loope
rcl
jp
jno
xor
leave
orl
cmpsb
jmp
mov
imul
push
mov
push
adc
cmp
dec
push
add
mov
fcomip
cltd
cwtl
nop
cmp
jae
cmc
cmp
and
mul
bound
inc
loope
test
push
loope
roll
in
test
jg
pushf
add
or
imul
add
jl
loop
es
mov
fcoms
test
gs
into
dec
ret
fs
cltd
shr
imull
xor
int3
aaa
xchg
ljmp
aaa
xchg
out
cmp
test
push
scas
sbb
inc
adc
popl
pop
dec
clc
shl
jno
fidivl
outsl
add
mov
cmp
pop
aaa
inc
iret
jo
xchg
push
mov
pop
xchg
cmpsb
push
loop
aam
mov
in
pop
movb
mov
mov
fwait
stc
out
sbb
out
xor
pop
mov
test
or
adc
push
mov
xchg
loop
mov
pop
js
inc
xchg
fsubl
cmpsl
cmpsb
call
mov
sahf
mov
sahf
sahf
mov
adc
jns,pt
adc
and
and
push
jo
out
jge
cs
jmp
add
push
xor
cmp
test
xchg
rclb
std
test
sbb
inc
hlt
add
shrb
repz
daa
xor
mov
pushl
pop
adc
arpl
mov
cli
stos
lea
mov
popa
popa
xor
or
mov
aad
jno
in
mov
out
push
aas
mov
mov
xlat
adc
xchg
push
sbb
cltd
jle
movsb
push
sub
inc
shll
stos
cmpsl
and
push
dec
out
mov
sbb
shrb
or
mov
or
or
push
inc
bound
push
cmp
dec
addb
dec
out
sahf
rolb
or
inc
loopne
add
lea
mov
stc
addb
pop
lea
mov
sbb
mov
xor
mov
jne
push
and
cltd
cmp
push
int3
dec
xlat
mov
addr16
stc
out
xor
iret
inc
dec
test
dec
clc
les
jecxz
push
cs
mov
into
clc
ret
jecxz
into
ds
pop
or
lods
movsb
or
out
insl
mov
scas
out
mov
pushl
mov
ret
daa
mov
xchg
jo
mov
adc
leave
test
stos
mov
push
pop
cmpsl
sub
cli
imul
es
mov
mov
movsb
cmpsb
outsb
push
jns
cmp
rcll
sti
cltd
flds
hlt
cmp
xchg
loop
jno
xchg
mov
fisubs
cmp
and
repz
pop
xchg
mov
enter
int
jecxz
ljmp
dec
xchg
lret
test
movsl
xchg
scas
mov
sub
in
cmc
fisubrs
sub
sub
lret
xlat
jge
mov
dec
mov
mov
sbb
jmp
in
test
cvtps2pd
fdiv
scas
jecxz
and
add
loope
pop
fimull
mov
push
mov
outsl
pop
stos
mov
mov
mov
push
dec
aad
clc
clc
mov
xchg
sarl
lret
out
jnp
lret
jae
xlat
dec
pop
gs
inc
divl
cmp
pop
inc
sbb
ja
sti
push
aas
push
mov
lret
pop
into
rcr
cmc
arpl
push
sbb
pop
xor
testl
inc
xchg
mov
jae
ds
sub
mov
adc
adc
cs
mov
sar
int3
repnz
jmp
add
xor
or
jnp
aaa
fucomip
inc
inc
imul
out
pusha
xchg
lods
test
mov
ja
loop
repz
pop
jnp
into
mov
xchg
fwait
movsb
lds
jns
sub
mov
inc
lcall
mov
mov
dec
sti
cs
inc
sahf
inc
cwtl
mov
shlb
lods
mov
test
jo
fsubl
push
and
loope
outsb
lcall
popa
stos
dec
inc
sbb
divb
push
loop
add
mov
sub
scas
and
mov
cmpsb
test
push
pop
and
lea
pushf
lods
in
jbe
mov
inc
jns
mov
cmp
add
in
inc
mov
out
les
iret
push
negb
cmp
jbe
push
push
jg
xchg
adc
jae
push
xor
int
and
jb
xchg
call
mov
dec
sar
xorb
or
or
rorl
lods
mov
into
les
in
cmp
jl
lods
cmpsl
jae
push
inc
mov
pop
movsl
and
xchg
ja
das
push
test
jns
jne
jne
lret
or
imul
xor
jne
jne
faddp
push
not
push
outsb
fwait
cmp
lds
push
pop
and
or
out
xchg
orb
and
dec
or
shl
inc
out
cwtl
test
ss
repz
xor
or
mov
mov
sbb
cmp
add
mov
cmp
dec
cmp
pop
les
xchg
jb
adc
dec
xor
movsl
inc
fstps
push
lret
fsub
aas
stos
data16
dec
mov
scas
neg
pusha
cmpsl
subb
fcoml
addl
add
jg
sbb
jg
adc
into
popf
cmp
push
sub
xor
mov
dec
lods
jle
and
aas
in
mov
adc
cmpsb
xor
orb
xchg
andb
pop
aaa
pop
ja
shl
popf
jl
arpl
jl
dec
xorps
test
test
orl
pop
adcl
out
jg
cmpsl
scas
push
imulb
fidivs
mov
mov
idivl
jecxz
cli
pop
xor
std
ljmp
sub
xchg
inc
inc
out
fdivl
lock
pop
jbe
jbe
sbb
testb
jae
sbb
popa
movsb
lods
push
pop
xchg
push
or
dec
mov
jge
dec
mov
dec
pop
add
sub
hlt
and
pop
outsl
leave
lods
sub
adc
and
push
jbe
imull
jbe
roll
xor
pop
add
push
cs
fcmovnu
cmp
imul
cmc
mov
sbb
mov
loop
and
and
lahf
lcall
sub
jno
cli
xor
and
int
insb
jae
repnz
dec
pop
les
shlb
push
out
test
inc
das
xchg
mov
jge
xchg
fnsave
outsl
imull
mov
add
clc
adc
xchg
xor
pop
dec
xor
int
clc
add
mov
add
xchg
clc
jnp
mov
push
aam
clc
ret
notb
mov
dec
adc
cmp
aad
adc
xchg
sub
push
push
adc
addr16
test
shrl
insb
ja
nop
scas
ret
jle
aam
push
sbb
loope
pmullw
arpl
xor
cs
lock
mov
adc
data16
outsl
sbb
mov
js
or
out
fcoml
sub
push
in
ret
mov
aam
jp
add
inc
rorl
dec
xchg
inc
bound
jo
xchg
push
mov
sbbl
xor
sbb
rclb
jae
lcall
or
push
mov
mov
push
inc
outsb
aaa
xchg
int
outsl
add
out
ret
cwtl
in
sbb
jbe
lods
into
ficoml
lahf
repnz
adc
daa
pop
das
xlat
movb
fdivr
mov
or
test
orb
sbb
scas
int
inc
mov
int
xchg
xor
add
pop
andb
test
adc
enter
mov
mov
ss
mov
push
sub
in
lret
aas
adc
jno
aas
dec
into
popf
mov
mov
dec
jo
push
jne
lods
shl
call
movsl
push
sub
cmp
pop
mov
mov
cwtl
or
push
pop
or
cmp
sub
loop
iret
sub
mov
inc
ds
jg
mov
adc
mov
inc
xor
and
jb
int
and
fldenv
int3
adc
push
lcall
jecxz
and
ret
jo
popa
loope
jb
pop
movsb
sarb
out
dec
or
ret
push
inc
mov
adc
xor
mov
mov
pop
test
cwtl
into
test
push
lahf
sbb
cld
lahf
aas
mov
popa
add
add
in
cltd
or
je
int3
fdiv
mov
xchg
clc
sub
out
cmp
jb
push
mov
insl
movsl
inc
mov
jo
pop
das
popf
pop
mull
jo
and
lahf
ret
ljmp
adc
into
jecxz
xchg
pop
test
and
mov
cmpsb
cld
pop
repz
push
es
out
mov
out
jne
lretw
dec
jb
mov
cld
mov
inc
inc
int3
or
enter
xor
push
movsb
fs
lods
into
and
mov
lea
ret
outsl
scas
scas
pop
icebp
mov
cmp
sarl
pop
cmp
daa
imul
xchg
fisubs
mov
jbe
sbb
popf
data16
ljmp
cmp
sbb
aaa
or
xchg
push
dec
inc
aas
lret
push
cmpsb
xchg
sbb
add
mov
mov
call
out
in
in
push
fsub
lock
js
mov
jmp
movsl
stos
xchg
lahf
push
jg
or
cmp
dec
adc
lock
pop
std
add
aam
xchg
or
add
loope
fdiv
cmc
je
jmp
roll
sti
pop
cmp
push
dec
xor
inc
subl
push
cmp
and
or
stos
sub
sbb
inc
pop
sbb
or
dec
sbb
addb
push
cmp
in
xchg
jnp
ds
popa
hlt
pusha
test
insl
push
cmp
out
cmp
pop
inc
rcrl
mov
dec
out
and
inc
jnp
leave
adc
in
scas
cmpsb
testl
fstpl
loop
mov
xor
and
ds
sar
pop
mov
outsl
add
adc
leave
inc
push
icebp
xor
addr16
lcall
fcomi
push
sub
mov
hlt
pop
pushf
jae
pop
andl
inc
cmp
and
je
mov
dec
push
dec
adc
lcall
repnz
daa
jno
mov
dec
aad
hlt
mov
inc
and
shrl
lods
xchg
test
push
cmp
int
call
loopne
jae
adc
test
nop
call
lea
pop
ljmp
loop
cs
out
inc
dec
rcll
mov
and
shrl
mov
cmp
and
inc
scas
stos
push
push
push
xchg
push
mov
outsl
decb
sbb
pop
mov
cld
sub
xlat
in
jae
clc
gs
dec
sbb
popa
out
rorl
add
xor
jmp
mov
stc
je
movl
jecxz
xor
push
fldcw
inc
out
in
paddsw
cwtl
jecxz
lods
mov
imul
xchg
inc
cld
fsts
xor
dec
sahf
xchg
and
xor
mov
jns
push
ret
or
push
repnz
push
scas
sub
push
xchg
clc
xor
sbb
les
adc
cmp
xchg
test
add
psadbw
sbb
mov
mov
test
fisttps
xor
sub
jg
adc
mov
daa
xor
push
ret
mov
add
cwtl
xor
movsb
fstpt
testl
inc
push
lret
or
aas
cmp
or
sub
iret
mov
push
xchg
push
aad
popa
loop
dec
outsb
idivl
inc
mov
mov
js
int
ret
test
ss
sbb
out
cmpsb
or
ss
fisubrl
cmp
ss
dec
scas
insl
mov
or
jmp
push
rcrl
iret
pop
std
repz
xchg
pop
stos
pop
or
hlt
jbe
push
sub
pop
sub
push
dec
sub
dec
jno
push
shrb
lret
sti
xchg
imul
notb
or
adc
jge
pop
adc
negb
jl
sub
or
fcmovu
xor
sub
mov
xor
call
imul
adc
sub
cmp
add
or
mov
jmp
cld
out
test
mov
sbb
cwtl
xchg
inc
fiadds
aam
scas
out
xor
fs
cmp
in
out
adc
xor
or
xor
jl
mov
dec
xchg
and
jns
fidivl
sub
aaa
lret
push
mov
in
inc
inc
aam
push
sub
jae
xor
call
pop
test
cltd
xlat
pop
push
cmp
addr16
xor
lods
mov
je
inc
orl
rorl
push
cmp
hlt
xchg
cmpsb
pushf
inc
shl
loope
xor
mov
mov
movsb
xchg
testb
jb
lock
xor
das
ror
es
jne
test
in
xor
dec
nop
xor
mov
mov
mov
aam
pop
or
xchg
sub
jg
cltd
cmpsb
cmp
pop
xor
call
aam
mov
outsl
mov
into
loop
xor
or
xlat
dec
xor
mov
pusha
jo
mov
cmp
cltd
push
mov
pop
add
push
sbb
push
das
sbbb
ljmp
add
dec
imul
fisubl
or
xor
pop
pop
lods
sbb
std
sbb
push
js
std
and
push
lods
in
push
movsb
loopne
in
aad
lods
inc
clc
es
mov
adc
push
repnz
sub
js
pop
jo
mov
push
sbb
xor
pop
and
add
insl
xor
push
shll
outsl
insl
int3
sarb
sub
hlt
fcomi
sahf
pusha
jle
mov
mov
roll
cmp
adc
sbb
sbb
jecxz
push
aad
jbe
js
push
mov
scas
mov
dec
and
movsb
out
xor
sub
sahf
mov
push
or
and
xchg
fimull
xor
xchg
hlt
aam
pop
in
pop
es
into
and
push
jge
iret
xchg
pop
lods
sub
jp
xchg
pop
cmp
jo
sbb
clc
xor
scas
addb
cmp
cli
lcall
adc
or
pop
cmp
xchg
stc
nop
hlt
jnp
dec
out
mov
add
out
xchg
dec
jb
fmulp
js
je
in
ret
imul
test
mov
mov
xchg
rol
stc
or
cmp
dec
or
sbb
in
shll
jae
incb
mov
adc
mov
mov
jecxz
icebp
mov
mov
mov
xor
jns
pushf
cmp
xorl
enter
sti
or
xor
cltd
ljmp
popa
push
dec
loop
cmpsb
in
cmpsb
popa
lahf
mov
imul
ljmp
enter
mov
enter
xor
lea
pop
mov
mov
jmp
push
je
in
fildl
out
mov
cmp
test
std
push
add
sub
inc
or
and
stc
xor
mov
je
mov
popa
adc
mov
fs
push
movl
into
and
jo
push
sbb
lcall
std
inc
and
aaa
arpl
in
rcrl
ret
in
push
cmc
xor
loop
mov
sti
xchg
jb
mov
mov
xchg
push
jge
arpl
stc
ret
sahf
sbb
repnz
icebp
movb
push
rcll
sub
mov
lret
cld
shlb
pop
ficomps
leave
cmc
jl
loop
scas
fistps
xchg
sahf
push
hlt
pop
mov
pop
inc
pop
sub
inc
sub
mov
shl
inc
ret
popf
pushf
sub
pop
iret
pop
sub
shlb
or
outsb
jl
adc
push
rorb
loop
add
mov
inc
popa
xchg
aad
add
xor
xchg
sbb
mov
das
add
daa
xor
dec
out
dec
lahf
mov
js
jnp
mov
mov
outsl
sbb
dec
jb
cld
fst
jmp
xchg
insl
into
mov
lret
mov
mov
adc
add
xchg
fdivrl
dec
test
jg
push
mov
jns
dec
aad
out
scas
inc
and
pop
fdivl
lds
cmpsb
rorb
ret
sbb
pop
leave
insb
int3
ret
mov
ljmp
or
pop
mov
sarl
je
ja
lods
pop
mov
fucom
ret
jnp
test
adc
pop
inc
inc
mov
jg
sahf
cmp
sbb
dec
push
scas
pop
mov
mov
fsubrs
and
xor
adc
or
ds
cmpsb
or
pop
pop
cmp
pop
xchg
hlt
xchg
and
lods
fisubrs
xchg
dec
mov
fnstcw
flds
xchg
outsl
xor
popf
stc
mov
incl
add
or
roll
pop
fisubrs
inc
push
dec
cltd
jnp
pusha
movsb
lret
popa
xor
lret
xchg
xchg
inc
push
int3
xchg
loop
cltd
cmp
repnz
dec
sub
aam
roll
ret
movntq
jg
or
push
inc
je
sub
mov
pop
or
out
add
add
jecxz
icebp
jge
sarl
cmpsb
negl
rcrl
mov
push
outsl
dec
iret
cmp
mov
mov
test
sub
xchg
aam
xor
int
dec
aaa
pusha
cmovs
add
andb
pop
outsl
xchg
xor
fidivs
enter
fwait
add
dec
scas
lea
add
push
fdivrl
fidivrs
out
repz
mov
add
xchg
push
out
push
ret
adc
jne
push
test
cmp
xor
and
cmp
pop
xorb
enter
add
out
and
loopne
movsb
sbb
sub
imul
aas
pop
out
pushf
je
mov
push
jl
cmp
cmp
xor
cmpb
jb
jge
mov
sub
lods
rcrl
sarb
jp
add
mov
push
lret
lea
dec
or
test
or
or
push
addl
xchg
lds
mov
fldt
cli
shrb
pop
push
psllw
xchg
aaa
int
addr16
cmp
in
xor
jge
test
cwtl
jg
shl
ret
cmp
jecxz
dec
pop
cmp
adc
imul
cltd
pop
fldpi
and
or
sar
or
lea
dec
and
mov
adc
jl
sbb
rcr
inc
divl
cmpsl
mov
sbb
adc
popf
xchg
inc
cli
lock
fistpl
les
dec
sub
sub
dec
std
sub
sar
mov
adc
testb
jno
xchg
cld
cwtl
nop
push
outsb
ja
dec
add
rol
ljmp
mov
shl
mov
pop
lea
ficoml
jecxz
dec
mov
sub
pop
push
pop
lahf
sub
mov
cmpsb
inc
or
in
xchg
pop
cmp
jle
mov
and
cmpsl
scas
aaa
icebp
jmp
ss
divb
mov
out
inc
es
inc
mov
xchg
xor
leave
outsb
repnz
cmp
pop
dec
cmp
cmp
lods
add
div
jne
or
pop
das
inc
push
scas
or
testb
jns
jb,pt
xchg
in
jp
pop
mov
cmp
mov
idivb
and
dec
fs
cmc
sarl
mov
mov
repnz
dec
sub
jne
mov
dec
mov
test
jno
jne
push
adc
call
xchg
pop
enter
nop
and
sbb
dec
cmp
mull
int3
pop
scas
xlat
loop
div
push
mov
out
orl
fmulp
cltd
sbb
mov
bound
jl
aas
mov
gs
scas
pop
xchg
iret
add
dec
jmp
cwtl
cmp
xor
test
mov
pop
lret
or
dec
xchg
sub
and
jg
lcall
sub
data16
lret
insl
jle
xor
push
dec
aad
icebp
adc
aas
mov
adc
lret
sti
notl
jmp
lds
lcall
lret
add
sbb
out
jbe
enter
repz
jns
mov
std
ljmp
xor
test
jno
int
repz
xor
mov
divl
xchg
and
cs
cwtl
lcall
push
pop
pop
adc
push
sub
test
mov
orb
inc
mov
cwtl
mov
clc
mov
inc
push
pop
push
xor
xchg
cmp
out
mov
lods
das
subb
push
shll
out
shll
mov
xor
cwtl
cld
daa
in
fdiv
push
pop
aaa
jge
aad
or
or
cli
lahf
sarb
sub
cmpsb
or
mov
lds
jl
pop
movsl
add
daa
jne
shll
js
lcall
cmp
mov
loopne
and
sbb
sub
std
pop
push
jmp
loopne
or
scas
xor
cwtl
shrl
out
hlt
mov
lds
lock
stos
out
je
push
add
jbe
insb
push
rclb
mov
adc
lcall
mov
cwtl
mov
sub
and
ljmp
cmp
scas
out
cmc
jl
push
stos
xchg
push
jnp
arpl
push
fldcw
bound
fs
add
cltd
stc
mov
mov
mov
lods
adc
popf
xlat
out
xorl
jae
loope
add
insl
test
add
adc
and
das
adc
test
cmpsl
mov
push
push
cmp
cs
imul
daa
cmp
pop
jmp
testl
cld
divb
je
fdivrl
loopne
aam
mov
cmp
push
dec
jns
push
jb
dec
lock
mov
ja
and
leave
jns
out
dec
repnz
mov
sbb
fmul
out
outsb
sbb
movsl
fcomps
movl
lock
jno
repz
push
add
les
sub
mov
inc
inc
movsb
push
imul
loope
or
lret
pop
add
or
orb
xor
mov
and
ficompl
mov
and
repz
xchg
shlb
adc
adc
fwait
mov
sub
fcomps
cmp
push
icebp
sub
mov
mov
into
inc
adc
pop
call
pop
sbb
dec
dec
dec
push
dec
inc
adc
shll
leave
arpl
jl
cltd
xchg
adc
or
fstl
idivb
shrb
loope
adc
mov
xorl
sbb
es
leave
add
lods
pusha
cmp
jge
mov
aas
lods
aaa
xor
fcmovbe
jnp
ret
repnz
or
jp
push
pop
cld
cmp
or
xor
dec
or
sbb
and
mov
add
xchg
mov
mov
push
flds
scas
outsl
xchg
daa
adc
mov
or
fs
es
pop
movsl
mov
inc
test
es
aas
mov
into
jns
test
daa
dec
out
mov
pop
sbb
and
jo
lret
scas
call
xchg
je
lret
out
mov
jbe
mov
pop
mov
negb
add
jno
jg
pop
push
dec
inc
sbb
pop
sbb
jo
xor
sbb
dec
cmp
scas
xchg
bound
inc
jle
jnp
test
push
cltd
inc
hlt
iret
push
add
mov
stos
test
push
hlt
mov
mov
ljmp
sbb
aaa
inc
inc
jbe
call
mov
loop
repz
cs
jle
pop
pop
out
lods
mov
sub
int3
pop
cmc
movl
mov
sahf
mov
cmc
mov
push
adc
inc
mov
das
and
xor
mov
and
mov
push
mov
pop
int3
mov
xor
lcall
sarb
fmuls
mov
xchg
adc
mov
stos
mov
sub
lret
inc
addr16
and
sbb
mov
mov
sti
inc
push
push
xor
push
cmpsl
or
push
divb
xor
jbe
pushf
jge
jo
or
pop
inc
mov
xlat
test
xchg
mov
cmp
ss
cmp
stos
cmp
call
mov
jae
pop
xchg
test
push
add
xor
pop
mov
psllq
loopne
jmp
adc
push
addr16
xor
adc
out
mov
jne
cmp
in
adc
insb
shrl
mov
and
fmuls
mov
xchg
mov
std
aaa
rcll
lock
call
ret
xor
jl
in
fmull
inc
incb
mov
push
mov
lret
push
cwtl
push
clc
subl
xchg
leave
lahf
ja
push
xorb
cld
mov
add
pusha
mov
sbb
fnsave
mov
lcall
fcom
sub
push
jle
add
mov
or
jge
adc
jnp
mov
mov
mov
dec
sbb
dec
xchg
ret
cmp
mov
ret
call
push
inc
jl
sbb
sub
add
lds
mov
imul
imul
imul
pop
sbb
mov
and
movsl
imul
pop
dec
push
push
cwtl
je
jbe
add
xor
sub
and
mov
lret
cmc
bnd
jle
ja
and
loope
enter
scas
out
pop
repz
rclb
jp
movsb
adc
dec
or
mov
or
xchg
enter
cld
or
fsubrs
lea
hlt
aad
cld
pop
stc
ret
pushf
out
fs
push
fisubs
outsl
jmp
jp
out
in
push
aam
daa
mov
lock
mov
int
iret
pop
push
cli
mov
icebp
dec
fwait
sub
inc
hlt
roll
enter
hlt
mov
and
ja
jb
insb
xlat
jbe
rcrb
in
and
mov
or
hlt
and
cmp
mov
xor
add
or
push
pop
mov
into
outsb
push
cld
add
int3
mov
int3
inc
xor
mov
cmp
ja
aam
insl
mov
popa
mov
arpl
or
idivl
dec
test
fistl
ljmp
pop
pushf
xchg
inc
inc
mov
scas
lea
ss
addr16
cltd
ljmp
int
loopne
daa
jge
inc
inc
nop
adc
lds
cmp
jge
sbb
mov
and
mov
jns
movsb
sub
not
je
pop
ret
out
mov
mov
cwtl
lcall
dec
lea
push
mov
cmp
adc
mov
push
jns
jae
rorb
cltd
bound
ljmp
in
fimuls
inc
std
lods
pop
pop
and
pop
lods
and
mov
outsb
xor
and
push
mov
sub
nop
ror
cmp
adc
fs
push
adc
outsl
jp
add
fbld
fisttpl
inc
sub
jbe
stos
dec
test
xchg
cmp
jns
jmp
std
shlb
sbb
sbb
sub
xlat
xchg
fimull
mov
and
iret
or
push
xor
enter
mov
jmp
lcall
mov
cltd
pop
pop
iret
outsl
xlat
cli
dec
es
adc
je
cmc
das
sbb
out
aam
and
add
enter
roll
adc
inc
rcll
in
in
fwait
mov
popf
pop
jb
adc
pop
bound
add
jne
orl
and
lcall
xchg
jne
movsl
or
xchg
sbb
sbb
lods
pop
mov
daa
cwtl
adc
setnp
sub
mov
adc
je
xor
xchg
adc
or
and
pop
add
pop
mov
mov
rclb
push
sub
ret
insl
xchg
adc
add
sbb
inc
add
lods
cwtl
push
imul
js
test
lds
dec
mov
lret
push
xchg
mov
test
pop
dec
pop
sbb
xlat
shll
sbb
xor
aaa
addr16
add
loop
test
cli
dec
xchg
xlat
pop
and
xchg
push
jl
nop
or
cmp
int
sub
outsb
cmp
jg
sbb
xchg
popf
cmp
in
fs
int3
aam
push
out
fildll
jg
lret
or
sbb
sub
cmpsb
cmpsb
leave
xchg
repz
and
push
cltd
enter
sub
push
rcrl
sub
sbb
icebp
pop
inc
std
cmp
leave
jbe
fdivrl
in
xor
adc
nop
mov
cmp
push
pop
insb
rcll
pop
stos
inc
out
scas
outsb
icebp
sbb
xor
or
adc
inc
rcrb
inc
mov
pusha
jbe
sbb
movsb
xor
lcall
lds
dec
testl
nop
adc
pop
imul
or
nop
push
lods
sbb
insl
mov
cmp
fstpt
popa
dec
jbe
jae
or
testb
popf
iret
push
shl
mov
jno
add
xchg
ljmp
out
cmp
pop
aam
ja
xchg
sbb
lods
stc
sub
faddl
mov
pop
mov
or
push
pushf
xchg
mov
enter
mov
in
pusha
sub
and
fs
mov
jnp
stc
int3
jo
sarb
mov
mov
in
jo
icebp
jp
pop
adc
pop
jns
jne
in
or
sbb
mov
sar
mov
sbb
inc
adc
dec
gs
jnp
cli
mov
or
or
out
rcr
repnz
loopne
xor
cmpb
scas
pop
mov
sub
lahf
xchg
pushf
push
xchg
push
mov
mov
and
mov
or
inc
cwtl
inc
add
mov
das
mov
or
xor
scas
sbb
ss
leave
sarb
jbe
xchg
lret
leave
mov
cmp
testb
hlt
cli
pop
dec
push
xlat
push
ret
adc
icebp
cmc
cmc
scas
push
ss
push
jmp
mov
out
dec
mov
cmp
scas
jne
pop
pop
xchg
repz
lcall
xchg
roll
mov
lahf
pop
arpl
sub
shl
xchg
adc
ja
sbb
sbb
mov
cltd
mov
outsb
and
aas
shl
mov
test
push
hlt
xor
and
sbb
inc
or
fwait
and
popf
mov
insb
sar
or
mov
pop
fldenv
loope
test
sahf
xor
pop
sbb
fwait
dec
xchg
lods
push
loopne
push
mov
cmpsl
pop
stos
mov
cmp
or
and
pop
pop
xor
dec
out
add
push
push
and
aad
and
jnp
mov
mov
sahf
mov
xchg
or
pop
cmp
out
ljmp
xor
xchg
mov
in
mov
mov
cmp
and
mov
jecxz
rorb
pop
sbb
pop
pop
shr
xlat
movsl
push
ds
fwait
push
adc
mov
in
jb
sub
ja
sub
and
dec
icebp
push
add
and
pushf
jae
jno
push
test
xchg
dec
cmpsb
sbb
lahf
aas
xchg
inc
xchg
mov
inc
mov
clc
ds
or
in
ret
mov
inc
and
test
sub
fchs
mov
out
mov
jp
sub
cld
mov
sahf
push
inc
or
pusha
mov
add
adc
pop
pusha
or
daa
mov
jmp
sub
arpl
icebp
cltd
leave
xchg
ret
jge
add
repz
sub
cmp
push
mov
out
fistl
repnz
jae
fs
hlt
push
clc
ficomps
popa
loop
push
lea
in
push
icebp
data16
ret
cmp
mov
jno
mov
setne
and
xor
push
repnz
adc
in
lret
cmpb
xor
pop
jmp
mull
add
out
and
jecxz
push
sbb
shl
out
dec
rcl
aad
and
ljmp
mov
mov
mov
ret
test
push
mov
cmp
xchg
jae
cmc
mov
insl
clc
ja
pop
cmc
data16
ds
jmp
jl
mov
add
fsubrl
fistpll
std
hlt
and
cltd
xorb
mov
adc
test
pop
lcall
test
addr16
sub
mov
jno
adc
fmull
and
add
lret
push
in
test
cltd
mov
fs
scas
pushl
and
add
pop
xor
fwait
mov
adc
ss
insl
mov
mov
fldcw
lds
lcall
cmpsb
sub
jmp
stc
add
mov
dec
mov
shrb
mov
push
push
dec
repnz
test
mov
push
adc
jl
push
sub
push
leave
data16
idivl
lret
pop
and
aam
mov
pop
pop
sahf
cmp
fstpt
stos
xchg
push
mov
inc
fidivrs
repz
out
aas
xchg
lock
mov
push
and
xor
subl
lds
sarl
aas
inc
or
mov
divl
xor
push
xor
add
cmp
arpl
jae
lahf
das
mov
popf
std
lret
repz
xor
aaa
adc
push
lret
mov
sub
mov
test
pop
jg
sbb
and
cld
stos
jge
push
stos
fisubl
inc
sbb
add
mov
movsl
pop
cld
push
scas
repnz
push
xor
push
das
scas
cmp
mov
dec
mov
mov
in
cld
sub
std
sbb
jb
jb
in
outsb
and
jmp
les
sbb
lret
jnp
mov
ja
ljmp
jle
or
adc
jmp
push
mov
arpl
test
mov
push
adc
xor
iret
add
push
in
and
or
mov
pushf
lret
inc
ror
push
and
dec
insb
add
lret
mov
stos
push
xor
mov
sub
push
out
push
or
mov
xchg
in
xor
mov
add
mov
or
sub
imul
push
cmp
mov
test
loopne
jne
xor
loope
hlt
mov
dec
mov
icebp
sbb
jg
mulps
pop
cli
stos
xchg
ds
pop
jne
dec
adc
int
cmp
cmpsl
cmp
add
fs
adc
push
cmp
clc
pop
xchg
test
push
fnsave
sub
ret
xchg
test
sub
lcall
bound
call
xchg
pushf
gs
fisttpll
mov
shll
mov
out
xor
adc
inc
pop
sub
mov
aam
mov
cmp
insl
push
fsts
in
cwtl
adc
dec
in
inc
insl
adc
cmp
cwtl
sub
inc
mov
rclb
add
scas
sarl
pop
gs
les
out
ret
movsb
dec
xor
xchg
mov
xor
sbbb
sbb
mov
sbb
pusha
daa
aaa
mov
mov
scas
repz
cwtl
pop
inc
mov
sub
data16
sub
dec
icebp
lea
push
push
cmp
cmp
dec
imulb
pusha
jne
je
es
mov
adcl
xchg
push
jmp
repnz
sahf
dec
clc
add
test
or
inc
mov
inc
and
lock
mov
dec
adc
movswl
sahf
xbegin
fstps
xor
pop
adc
pop
add
mov
lcall
jl
pop
adc
das
adc
push
data16
ret
mov
and
hlt
adc
stos
andl
jmp
lds
cmp
movsl
outsl
or
inc
dec
je
or
loop
sub
lea
and
fldl
dec
inc
mov
or
fnstenv
mov
int3
rcll
add
sarb
push
mov
sbb
jbe
imul
std
dec
mov
out
mov
lcall
sub
cli
or
enter
jle
sbb
push
fildl
clc
mov
inc
lcall
push
lods
ret
out
jae
punpckhwd
and
mov
dec
xorb
nop
adc
jp
push
fnsetpm(287
adc
imul
xchg
popf
add
test
lods
ficomps
adc
int
sahf
fdivl
ljmp
mov
mov
and
push
shl
jo
popa
fnstenv
rclb
xor
scas
mov
mov
dec
leave
dec
rcrl
adc
sbb
adc
lea
add
rcll
rorl
insl
lret
jnp
icebp
add
cwtl
lahf
jne
bound
rcll
xor
pop
inc
sahf
ficompl
cmpsl
sub
mov
in
and
mov
add
lahf
push
lahf
mov
clc
push
jmp
ficoms
lock
xchg
pusha
push
cmp
xchg
aaa
outsl
sti
sub
push
lret
pop
mov
outsl
push
divl
inc
add
loopne
sbb
xlat
fcoms
pop
and
pop
jo
jle
pop
mov
xchg
rcrl
add
lock
mov
pop
out
les
mov
scas
insl
inc
jns
dec
ss
pop
test
jecxz
push
push
dec
rcrl
scas
or
cmp
faddl
mov
dec
or
paddsb
add
outsb
hlt
inc
jmp
inc
jmp
out
inc
push
out
xchg
push
sbb
lea
push
mov
ret
fwait
mov
adc
pushf
jp
cwtl
loop
je
dec
adc
scas
dec
test
pop
test
aaa
cmpsl
push
add
mov
pop
test
das
fnstenv
and
pop
fwait
pop
scas
xor
push
call
outsb
jmp
or
jle,pn
xchg
sti
mov
sub
cld
sti
mov
test
in
adc
xchg
mov
sbb
bound
aaa
and
mov
sahf
pop
decl
lock
jg
cs
sub
mov
neg
mov
lcall
adc
das
inc
dec
mov
sub
orl
or
mov
pop
xchg
inc
and
pop
push
mov
test
mov
inc
pop
mov
xchg
pop
in
mov
xorl
cltd
pop
arpl
mov
pop
cld
fwait
mov
cmp
popf
jmp
cli
addr16
pop
rclb
addr16
ja
inc
mov
xor
sub
adc
add
sub
push
pushf
xchg
aaa
pushf
push
push
movsb
push
aam
popf
jns
pop
sub
movsl
insb
inc
mov
jmp
add
outsb
sub
out
daa
punpcklbw
xbegin
cmp
jo
push
out
fstpl
or
inc
fdivr
test
sub
fisttpl
jns
fsubl
pop
jae
popa
xor
jns
fsubr
jae
push
jp
push
outsl
xchg
nop
clc
mov
aas
in
imul
sbb
mov
shrb
inc
cmpsb
loopne
imul
mov
testb
std
fmull
call
sub
mov
xor
mov
outsb
cld
push
add
insl
flds
adc
cmp
shll
push
sub
adc
cmp
mov
push
mov
mov
cmp
cli
push
cwtl
push
imul
push
scas
cs
jp
cmp
pop
stc
and
aad
out
mov
inc
loopne
adc
shll
inc
jbe
popf
push
fwait
cmp
mov
inc
into
out
bound
neg
scas
mov
jle
xor
sbb
pop
into
mov
fldl
repz
adc
clc
xor
mov
lret
sub
inc
pop
cmp
mov
ror
add
inc
sbb
push
fdivl
ljmp
das
jno
push
fs
inc
inc
and
jae
xchg
dec
xlat
into
pop
inc
cwtl
inc
jnp
shl
push
pop
loopne
add
data16
sar
cmp
cmc
es
pop
ljmp
dec
icebp
fs
or
push
aad
jmp
mov
inc
cld
jl
push
insb
cs
mov
ret
or
pop
aas
push
fcomps
jne
pusha
xchg
sbb
inc
push
jo
out
out
dec
lods
mov
es
cli
cmp
hlt
pusha
bound
rolb
xor
jg
outsb
inc
fisubrs
or
ret
sub
es
adc
stc
loop
xchg
rcrb
adc
mov
fdiv
sahf
scas
pop
daa
addr16
fs
insl
mov
sbb
mov
inc
push
ss
add
inc
clc
repz
adc
popl
cmpsl
int3
jle
out
cmpsb
jmp
jno
adc
roll
fildll
push
mov
pop
push
pusha
rolb
and
xchg
pop
inc
push
jl
std
xor
sbb
ss
xorl
lock
filds
push
and
enter
sbb
push
mov
sti
push
push
ss
jp
mov
aaa
mov
in
fstps
fdivs
sbb
ret
mov
inc
push
stc
sbb
mov
ret
xchg
rorl
das
or
mov
aam
daa
xchg
aad
das
icebp
xor
adc
dec
fdivrp
fwait
mov
scas
addr16
or
mov
sbb
outsl
and
adc
cltd
movb
fsubrs
ljmp
dec
fbstp
sarl
imulb
repz
and
aas
adc
mov
mov
dec
mov
das
insb
rcpps
cmp
sub
and
loope
enter
and
sub
add
or
push
outsl
push
inc
xchg
sub
test
je
cli
lds
push
inc
ss
ljmp
inc
xchg
cmc
mov
int3
sub
clc
push
pop
rclb
imul
cwtl
ret
aaa
out
mov
int3
add
mov
outsl
mov
cmc
push
pop
dec
scas
or
shlb
fnstenv
mov
inc
pusha
arpl
fstpt
push
lea
aaa
mov
inc
lret
sbb
into
loope
push
pop
sub
test
cmp
xchg
fs
xchg
arpl
hlt
data16
xchg
add
or
xchg
or
push
push
jmp
cmpsl
sahf
mov
dec
aas
push
xor
push
xchg
ds
adc
push
imul
stos
stos
jmp
mov
pop
add
shlb
cltd
mov
int
mov
mov
add
xchg
shlb
loop
sbb
pop
imul
and
out
jb
jp
stc
jne
loope
inc
pop
pop
jmp
daa
adc
jp
inc
stos
outsb
or
negb
rcrl
lds
popw
out
jp
mov
cmp
rcr
mov
mov
hlt
repnz
push
das
mov
pop
jmp
pushf
xchg
or
adc
test
push
or
or
push
cmovnp
adc
xor
dec
mov
or
xor
mov
mov
mov
mov
lea
sub
xchg
imul
scas
popf
stos
xchg
lds
dec
daa
xchg
lods
sub
int
negl
inc
xor
mov
push
mov
shlb
push
aam
xchg
push
int3
xchg
into
add
addr16
pop
mov
push
dec
sbb
ja
dec
push
fistl
and
fistl
negb
ds
mov
push
xchg
jne
or
adc
sub
dec
lds
mov
lock
test
bnd
pop
inc
test
dec
or
or
addr16
int3
inc
sub
xchg
pop
daa
es
jne
sbb
push
mov
and
mov
dec
mov
jb
leave
imul
sti
sub
and
mov
cmpsb
xchg
adc
xchg
sub
sbb
fwait
scas
push
ds
sub
cwtl
insb
inc
stos
and
int
xchg
xchg
xor
pop
or
leave
inc
lret
test
push
scas
lds
and
jg
fcmovbe
mov
stc
lret
cmpsl
or
jle
inc
popf
fdivrp
imul
push
push
cmp
in
int
sub
sub
arpl
fdivrl
pop
scas
testl
xor
mov
lahf
fldenv
mov
mov
dec
fldcw
stos
andl
in
shl
outsl
sub
bound
imul
cmpsl
xchg
cmp
je
dec
or
lcall
dec
and
rorb
xor
jmp
daa
lret
or
and
xor
inc
xchg
movsb
sti
int
xchg
mov
mov
stc
test
movsb
sbb
lods
cmp
mov
out
jmp
sub
mov
out
xor
fstl
or
iret
fstpt
xchg
or
movsl
mov
mov
adc
rcrl
sbb
push
outsl
fsubrs
dec
jae
lods
jo
mov
insl
fs
movsl
ljmp
pop
pop
jecxz
aad
shll
pushf
cltd
repnz
call
mov
enter
sbb
sbb
addl
jl
iret
xchg
mov
js
lock
mov
out
jle
movsl
xor
fisubrs
lret
icebp
xchg
out
adc
testb
lods
sub
cs
mov
mov
fsub
sar
jne
idivl
iret
js
cltd
push
shrl
jecxz
dec
adc
cmc
out
lods
adc
cwtl
sbb
sub
rep
mov
stc
mov
inc
xchg
imul
xchg
lcall
ficoms
lock
sub
cli
xor
cmp
push
pop
mov
addr16
cmp
jae
fbld
mov
out
sub
mov
jnp
out
imul
mov
mov
ja
mov
addb
int
and
cmpsl
xchg
into
pop
and
mov
sbb
push
xor
or
mov
cmpsl
and
xor
mov
jne
insl
mov
out
loope
cmpsb
sub
inc
lcall
or
out
pop
mov
fimull
xchg
fnstcw
into
movsb
lcall
cld
push
mov
sahf
sbb
pop
or
jo
mov
or
jne
jb
ret
movsl
lcall
pop
cld
or
mov
pop
fs
daa
dec
or
pop
ja
adc
add
or
js
or
nop
clc
loopne
sti
loope
pusha
scas
xor
push
sbb
or
push
loopne
lods
ret
stos
pusha
inc
sbb
pusha
push
pop
into
cmpsb
push
mov
add
in
mov
inc
fcmovnu
inc
jb
je
lret
dec
in
stc
cmp
stos
movsb
or
lock
sti
and
std
sub
mov
gs
fstp
mov
stos
pop
jmp
mov
lahf
cli
inc
mov
ret
jnp
lds
mov
push
cmp
adc
mov
xor
xchg
lcall
mov
dec
fistps
sub
xchg
adc
addr16
aaa
xchg
pop
shlb
out
test
insb
cmp
hlt
add
xchg
adc
jnp
xchg
push
add
jmp
pop
jmp
cmc
pop
dec
and
imul
daa
test
sbb
into
dec
pop
popa
jne
mov
lds
leave
sbb
int3
pop
gs
in
pop
stos
adc
icebp
pop
clc
out
dec
fimuls
fbstp
or
dec
dec
outsl
aad
sbb
pop
ja
xor
pop
orl
mov
push
jnp
xchg
jbe
aam
ljmp
call
imul
inc
fimuls
fidivrs
cmp
bound
jmp
ds
xchg
shl
shlb
dec
mov
mov
jns
js
cmp
dec
adc
xchg
out
or
enter
insl
cmp
imul
out
ss
mov
cli
mov
popa
or
mov
mov
push
gs
lods
and
push
sbb
jmp
insl
pop
mov
cltd
mov
imulb
scas
push
in
into
or
mov
pop
out
add
ret
adc
pop
mov
arpl
cmp
fmull
popf
jle
add
js
test
xchg
fwait
sub
clc
movsl
fs
cld
mov
or
daa
cmp
pop
sarb
inc
sub
add
int3
xor
mov
push
push
sub
xchg
push
icebp
cmp
xor
test
mov
out
subl
push
loop
add
mov
xchg
insb
in
mov
push
repnz
cli
sbb
cmp
dec
and
dec
add
dec
or
push
lea
xor
sub
repnz
sbb
sar
or
insl
cmp
popf
inc
aas
scas
mov
jmp
mov
or
fisttpll
stos
pop
stc
push
lods
mov
test
xchg
scas
fcmovnu
and
imul
add
int3
sub
mov
and
xchg
sub
lahf
subl
push
mov
sub
xor
jbe
pusha
aaa
mov
sbb
sbb
fsubrl
mov
dec
outsb
shl
int
mov
cmc
rorl
sahf
sub
and
mov
outsb
and
xchg
jno
push
lods
inc
fldcw
push
outsl
mov
nop
or
in
je
mov
inc
cmp
imul
and
lods
stos
xor
aaa
adc
push
rolb
cld
mov
shrb
sub
ja
xor
sub
xor
sub
mov
iret
xchg
cs
lea
daa
cltd
dec
adc
adc
scas
mov
into
sahf
mov
enter
push
cmc
loop
ljmp
or
cmp
xchg
lods
cld
iret
out
dec
xchg
scas
mov
in
inc
xchg
xor
addb
xchg
popf
fwait
mov
into
inc
xor
neg
dec
and
mov
mov
ret
aas
scas
lret
aas
repnz
push
dec
leave
gs
loop
outsl
cmp
xor
sti
out
and
cmpsb
test
dec
xor
repnz
push
lcall
ds
lods
cltd
jae
pop
xchg
loope
cmpb
in
push
iret
jle
push
mov
roll
mov
ja
inc
mov
int3
andl
or
mov
push
sub
pop
cmp
mov
addr16
fldt
imul
div
into
scas
push
xor
lock
imul
fsubr
sub
cmp
dec
push
push
test
xor
cmp
pop
vpavgw
repz
jg
mov
movsl
xchg
or
jno
and
test
es
dec
sti
icebp
int
data16
xchg
jno
adc
add
xor
out
repnz
xchg
sub
fwait
pop
mov
adc
mov
popf
jp
jb
aaa
cmp
push
imul
sbb
imul
or
test
mov
xor
stc
ret
jecxz
aam
add
and
xchg
gs
sbb
xor
xor
and
push
je
pop
sbb
pop
push
rcl
inc
inc
cld
xchg
aam
shl
pop
xchg
out
fcomip
add
mov
jno
lahf
cs
fwait
pop
adc
shr
inc
mov
jno
pop
push
insl
cld
into
or
dec
push
leave
sbb
or
aam
shrl
ret
adc
jmp
jne
or
mov
shrl
into
pop
pop
outsl
nop
mov
adc
jo
scas
fs
shll
jae
xchg
mov
mov
mov
cwtl
xchg
add
jae
es
es
push
lret
aaa
or
sti
lcall
stc
clc
or
shll
adc
push
xor
jne
pushf
stos
dec
fcom
pop
out
xchg
rcr
pusha
xchg
dec
mov
insb
jmp
jg
or
divb
enter
fmull
mov
and
cltd
inc
xor
fldenv
mov
out
jecxz
sar
mov
call
cmp
fldcw
adc
sub
popf
adc
lock
mov
xor
cmp
mov
or
sub
mov
in
lret
pop
js
int
inc
fldenv
dec
into
in
aas
mov
movsl
jae
mov
mov
enter
scas
je
mov
cmpl
and
loopne
sahf
jne
loopne
fisubrl
xor
test
test
mov
out
insb
pop
inc
out
add
jge
cmp
jg
jmp
ja
fs
sbb
ljmp
sarl
adc
movsb
and
ret
sbb
pop
bound
push
adc
mov
mov
std
mov
js,pn
or
mov
dec
jbe
sub
sahf
jecxz
pop
mov
decl
push
pop
mov
cld
mov
dec
inc
add
je
aam
xchg
lds
sbb
mov
pop
mov
sar
dec
cli
or
dec
imul
imul
cmp
stos
fnstcw
orl
fs
and
fiaddl
and
pop
ljmp
push
fisubrl
icebp
stos
js
test
repnz
push
xchg
pop
cmp
add
out
pop
das
out
rcrb
ffree
xor
xor
adc
test
cmp
icebp
shlb
ja
bound
das
leave
mov
xchg
xchg
mov
mov
negb
mov
ljmp
adc
mov
mov
stc
test
lods
sbb
inc
int
aad
jg
jecxz
bound
test
mov
jnp
and
mov
lds
inc
mov
mov
push
out
and
movsl
pop
xchg
pop
mov
call
push
loope
iret
dec
lea
imul
dec
pusha
sar
mov
inc
in
pop
push
xchg
pushf
add
sahf
int
cmp
inc
das
es
out
xor
scas
mov
xchg
jmp
dec
fisubl
add
jcxz
or
popa
fwait
mov
adc
pop
mov
adc
sub
cmpsl
xchg
imul
and
out
fwait
mov
cmp
sub
cmp
aam
pop
xchg
into
sub
sub
cmp
sub
ja
aas
addb
cmp
jno
scas
in
in
insl
hlt
jg
mov
or
sub
imul
mov
packssdw
jae
divl
shll
inc
sahf
fstpl
je
sbb
leave
mov
imul
xchg
imul
mov
jmp
push
pushf
jecxz
gs
push
test
fsubs
pop
aad
lahf
pushf
icebp
push
outsb
scas
cmp
iret
or
sbb
pushf
lahf
jb
inc
sub
lcall
ret
daa
or
mov
sahf
sti
or
out
fsubrp
sbb
push
int
adc
xchg
jl
mov
test
xor
dec
lret
jmp
aam
add
test
fisubrs
xchg
rcr
imul
and
out
out
ret
and
add
ret
in
stos
mov
dec
lods
dec
iret
adc
outsb
push
in
sbb
mov
in
and
repnz
cmp
xor
inc
and
in
xor
jl
cmpsl
dec
and
mov
mov
push
cltd
adc
pop
cmc
ss
cmpsl
jns
xchg
hlt
cmp
mov
mov
dec
in
add
cmp
mov
test
test
shll
cwtl
ss
cmp
cmpsl
mov
and
loopne
mov
and
adc
stc
jb
scas
popa
int
or
idivl
pushf
es
out
cmp
mov
push
sbb
adc
xchg
data16
adc
shr
sub
test
cmc
imul
int
cmp
push
test
push
xor
roll
add
cmp
cmp
xor
dec
loop
stc
add
jns
test
jo
lcall
pop
dec
in
xchg
push
inc
mov
and
inc
inc
mov
inc
je
test
jl
pop
aaa
jae
in
cmpb
mov
inc
xor
popf
push
xor
addr16
xor
jmp
sti
clc
fmul
cmp
data16
test
dec
push
sti
or
mov
pminub
mov
mov
sbb
fcmovbe
test
or
adc
das
mov
fsubr
ds
cmp
sub
cld
xlat
dec
stos
pop
fisttpl
rcr
mov
mov
insb
arpl
lcall
js
mov
xor
sbb
sub
outsl
pop
aaa
pop
pusha
inc
push
nop
je
xchg
dec
nop
push
cmp
ja
pop
ret
aam
xchg
adc
in
call
xchg
in
fstl
push
imul
push
or
pop
sub
lcall
mov
subb
pop
rorl
cli
jne
and
fildll
fs
adc
or
xorl
lods
adc
in
lahf
out
imul
mov
lret
scas
and
arpl
lods
push
lret
scas
ror
cmp
stc
iret
insb
in
or
jae
icebp
dec
dec
pop
and
repnz
lods
mov
sub
adc
lret
out
cld
jne
or
pusha
push
lods
xchg
dec
or
fmuls
jmp
pushf
ret
lods
repz
sarl
add
xchg
xchg
notl
lret
lret
push
pop
fdivrp
jmp
or
mov
mov
xchg
cmpb
cmp
cmpl
pop
mov
pop
fwait
xchg
mov
in
test
mov
js
mov
inc
pop
inc
dec
xchg
dec
or
mov
adc
repnz
mov
sarl
jecxz
mov
xchg
loopne
cmpsb
fdivl
sbb
xchg
and
push
xor
push
pop
cmc
add
decl
pusha
pop
inc
bound
lea
or
cmp
and
int3
imul
jecxz
stc
int
sar
cmp
addr16
dec
pop
insl
xor
dec
aaa
xchg
mov
jb
scas
pop
int3
pop
sub
cmc
ja
pop
outsb
mov
repnz
xor
cmp
or
and
fists
in
xor
mov
pusha
or
data16
xchg
fdivr
pushf
or
lods
xchg
sub
pop
sbb
mov
cs
mov
jecxz
lret
xor
xor
pop
loopne
xlat
fnstcw
xor
xchg
xor
ja
loopne
es
and
mov
adc
xchg
mov
inc
cmpsb
jnp
sub
push
out
out
mov
hlt
push
insl
je
push
sahf
inc
std
jecxz
jnp
test
test
stos
mov
fcompl
stos
jns
add
push
adc
adc
aaa
lock
jl
scas
push
push
mov
jl
or
xlat
into
or
int
pop
arpl
inc
shrl
sub
sarb
jne
ljmp
add
rcrl
sub
jge
sti
mov
test
cmp
sub
addr16
xchg
or
stc
je
push
mov
inc
inc
add
xchg
jae
aad
or
shll
shlb
jb
or
pop
movsl
fisttpll
inc
jnp
mov
mov
adc
add
jmp
lret
push
orl
in
into
adc
fstp
sbb
fs
add
hlt
fcompl
mov
and
and
pop
rclb
fsubr
jno
mov
jo
jbe
lret
pop
repnz
data16
stc
mov
js
xor
ljmp
mov
pop
notb
mov
lods
push
inc
aam
repnz
push
cmc
or
ret
ret
jae
lret
fiaddl
and
fwait
jne
fldl2t
ret
je
mov
into
jl
jle
arpl
mov
int3
or
out
pop
arpl
arpl
sub
mov
ror
add
fs
inc
mov
pop
iret
fistpll
mov
cmp
test
adcl
xlat
call
or
cmp
aam
pop
xchg
cltd
repz
out
aaa
sahf
lcall
dec
clc
mov
subl
lret
mov
ja
xchg
int3
cs
xchg
iret
mov
call
mov
inc
sub
shrb
das
inc
filds
ljmp
dec
xor
jg
in
rolb
movsb
sub
ret
mov
add
mov
mov
gs
sub
dec
ljmp
adc
add
and
imul
nop
and
adc
lahf
mov
fcoml
mov
pop
add
pop
lret
cmp
xchg
pop
mov
mov
sub
jmp
xchg
in
inc
xor
shrl
jp
mov
jb
js
aas
add
aaa
inc
adc
and
jb
nop
add
xor
test
repnz
repnz
lahf
lds
clc
adc
fucomi
rcrl
dec
ret
lcall
add
push
push
out
aam
cltd
in
cmp
aad
sahf
sbb
sub
das
dec
insb
push
clc
and
mov
lahf
in
pop
sbb
add
or
and
jmp
mov
ds
fsts
mov
sbb
cmp
fcoml
add
xchg
in
mov
ss
jl
mov
aaa
cmp
loope
mov
lock
loope
ret
mov
sarb
loopne
sub
jns
ret
cmc
or
sub
dec
xor
shr
and
inc
fldl
inc
out
jne
jb
mov
jmp
push
cmp
push
mov
cmp
mov
pop
mov
lcall
mov
jb
jne
cmp
xchg
ficoml
cmp
mov
inc
mov
in
jp
ss
jne
int3
mov
das
test
js
adc
jns
out
cmp
cmpsl
fsubrl
adc
loope
xor
jne
mov
or
leave
test
mov
dec
pop
mov
fstp
dec
pop
inc
mov
dec
jp
aam
mov
mov
cmp
imul
cmp
cs
out
and
fchs
das
cld
mov
in
inc
push
in
xchg
fstps
cwtl
lret
movsb
and
sub
js
or
out
inc
xor
inc
jnp
insl
je
cmp
sub
xor
lods
call
inc
sbb
leave
sbb
inc
in
ja
sbb
xchg
les
jecxz
scas
jle
push
inc
in
subb
sbb
adc
mov
inc
mov
sahf
aas
jle
lock
push
mov
pusha
inc
push
xorb
inc
add
test
xchg
lea
or
xchg
jmp
sbb
test
pop
mov
jp
add
cli
or
sub
sub
mov
stc
push
lea
mov
cmp
imul
popa
gs
scas
sub
xchg
sti
hlt
outsb
push
or
ret
outsb
fnsave
adc
push
mov
xchg
jo
mov
and
in
ss
or
rcrl
sbb
sarl
mov
out
mov
pop
dec
jmp
int3
xchg
mov
pop
lea
gs
pushf
push
ret
mov
inc
loop
push
pop
xchg
push
into
mov
out
mov
or
jb
outsl
adc
daa
cltd
out
sti
sbb
mov
iret
js
xor
xor
stos
lods
test
stc
and
sub
roll
sub
fildl
push
fstpt
call
sub
mov
xchg
push
out
cwtl
lret
add
sbb
xchg
pop
mov
adc
xchg
push
sbb
add
add
fxtract
cmpsb
test
dec
hlt
sbb
scas
inc
dec
sahf
loopne
and
pop
mov
dec
add
addr16
dec
shll
dec
ja
fisubs
dec
mov
pop
shll
rcrl
mov
xchg
and
cmp
jb
adc
pop
ds
mov
adc
in
out
xor
mov
xchg
movsb
cmp
rclb
xor
xor
xor
xor
popl
nop
mov
call
mov
mov
filds
push
aad
pushf
or
jns
xchg
mov
pop
or
std
out
cmp
add
cld
sub
pop
repz
pop
xor
imul
mov
mov
loope
push
xchg
add
int
jno
pop
push
or
mov
push
lods
hlt
dec
stos
cmp
sbb
shlb
sbb
push
hlt
and
push
fisubl
addl
inc
filds
pop
roll
cmp
add
push
mov
jb
dec
imul
ja
jne
pop
mov
mov
lds
jmp
enter
mov
hlt
orb
xor
ljmp
lahf
std
push
pusha
pop
mov
lea
sub
inc
add
dec
dec
test
fsubrs
mov
adc
sbb
or
add
sub
xchg
cmp
push
push
push
sbb
outsl
add
int3
int
fwait
bound
scas
insb
jl
mov
or
sub
pusha
push
fadds
ret
adcb
inc
xor
or
out
lea
push
lods
mov
mull
popf
imul
popl
dec
inc
inc
lahf
jo
iret
outsl
jle
inc
sbb
es
sub
sbb
loop
out
inc
cli
repz
push
mov
xchg
jae
xor
loope
loopne
imul
and
movsl
sub
mov
cmp
adc
pop
mov
inc
addl
loop
add
test
and
mov
fstpt
dec
dec
mov
pop
scas
xchg
push
or
popa
test
sbb
test
stos
or
js
int
pop
pop
inc
inc
testl
test
aad
pushf
mov
scas
inc
add
cmp
into
mov
jns
mov
adc
push
push
cmpsb
push
in
sub
sbbb
jecxz
cli
mov
aad
idiv
lds
icebp
add
dec
xchg
stc
std
popf
mov
cmp
lahf
in
adc
cmc
bound
out
or
push
jo
ja
mov
mov
push
add
mov
repz
insb
mov
out
pop
jmp
outsl
pop
cmp
sbb
jb
jecxz
sti
pop
sub
mov
mov
sub
cwtl
inc
rclb
pop
add
jno
les
hlt
push
iret
leave
enter
mov
pop
repnz
or
jo
cwtl
movl
or
outsb
pop
cmpsl
fs
sub
adc
mov
mov
popa
xchg
fiaddl
and
mov
cli
inc
jecxz
in
aad
fmuls
ret
inc
cs
cmp
or
sbb
nop
pop
enter
in
nop
mov
scas
inc
jnp
or
pusha
xchg
add
repnz
js
push
xor
lods
lods
mov
aam
dec
nop
mov
out
mov
dec
mov
jecxz
dec
sub
inc
jmp
imul
mov
out
arpl
xor
ds
jae
bound
push
rcl
adc
in
xlat
es
sbb
mov
sub
and
pop
mov
sub
adc
repz
jbe
dec
mov
cmp
add
dec
adc
sub
stos
inc
cli
mov
and
clc
push
adc
mov
add
scas
push
xchg
fsubs
sbb
ss
daa
stos
inc
sub
or
adc
imul
and
cmp
jl
jnp
pop
movsl
adc
mov
pushf
ret
push
cltd
imul
pop
mov
into
mov
adc
jbe
icebp
push
push
inc
dec
xchg
cmc
mov
mov
push
or
xchg
movsb
lock
mov
push
in
pop
fadds
call
repnz
fists
xor
or
push
jmp
int
out
sub
lods
mov
test
arpl
xor
rcrl
lret
add
sar
test
mov
pop
sahf
push
sub
xor
pusha
push
jg
mov
add
xor
pop
mov
sub
ss
dec
mov
mov
addr16
and
xor
ret
and
std
adc
addr16
lock
test
cltd
lea
push
pop
xor
clc
lock
pop
fwait
movsl
pop
stos
cmp
sahf
scas
addr16
stos
lock
test
imul
loopne
das
sbb
xor
pop
mov
mov
cmc
pop
movsb
sub
jl
stos
push
jbe
cmp
mov
pop
cld
and
push
inc
and
or
inc
addr16
mov
mov
cmp
mov
push
int
sub
jl
pop
push
loope
lds
outsb
inc
jg
jno
jg
rcr
dec
push
clc
jns
pop
xchg
mov
jle
sbb
loop
jge
xchg
out
imul
xchg
mov
push
inc
popf
data16
xchg
push
popf
xor
mov
adc
mov
cwtl
or
cld
sbb
sub
mov
fwait
mov
dec
mov
gs
mov
popa
push
sbb
jne
push
mov
add
subl
mov
sub
jb
push
push
aam
pop
jge
rcr
pushf
add
mov
leave
xor
mov
or
cmpsb
xchg
sub
inc
xor
jbe
dec
jle
mov
cltd
inc
mov
shlb
mov
xchg
pop
repnz
sbbb
shrb
lods
lahf
shlb
in
sbb
das
into
sub
mov
push
and
imul
test
jmp
outsl
push
jno
and
ret
sub
push
xor
push
xchg
add
ljmp
cmpsb
or
decl
pop
test
enter
cmp
xchg
pushf
aaa
clc
fstp
ja
into
jbe
dec
int3
sbb
jp
fldcw
es
aas
js
jg
movsb
dec
aam
xor
and
xchg
pop
iret
xchg
repnz
lahf
and
cltd
jmp
aam
mov
call
jnp
xchg
aaa
cmpsl
sbb
clc
outsb
xor
out
jae
mov
sub
pushf
clc
lock
ret
inc
or
pushf
lahf
imul
push
outsb
out
xchg
adc
iret
out
shll
cmp
clc
push
dec
stos
dec
xchg
or
and
fwait
shl
pushl
xchg
add
cltd
loope
pusha
mov
cs
fdiv
xor
jnp
in
mov
mov
dec
gs
jmp
bound
mov
shr
adc
sub
or
mov
popf
xchg
pop
pusha
jge
out
jle
push
into
leave
dec
ja
mov
push
cmpsb
imul
adc
sub
xor
and
sub
mov
dec
and
add
ret
xor
pop
mov
xorb
pop
sub
xlat
das
pop
mov
imul
insl
adc
pushf
and
sbb
nop
push
adc
icebp
sbb
mov
andl
jns
in
adc
fisubrl
dec
dec
adcl
aaa
pop
push
mov
sub
jnp
push
fwait
stc
xchg
sbb
mov
mov
shll
shrb
ss
cmpsl
adc
rorb
adc
xchg
xor
dec
jbe
fnstenv
shlb
mov
orl
test
pop
cmc
push
out
xchg
mov
jae
xchg
repnz
adc
lcall
lret
cmpsb
out
jno
xchg
fsts
cld
vmovsd
jg
stos
and
fidivrl
mov
add
jmp
sarb
inc
cmp
cmp
loopne
adc
pop
mov
loopne
inc
lods
push
add
jg
jg
out
mov
lret
fdivrp
aad
adc
test
je
out
orb
jne
add
pop
ds
mov
aam
mov
outsl
out
sub
add
subl
mov
push
ret
cmp
mov
xor
sub
pop
adc
dec
dec
nop
not
clc
xor
fnstcw
arpl
cli
push
push
shll
addb
dec
mov
and
fists
enter
mov
dec
push
jle
movsl
hlt
jmp
xchg
std
mov
hlt
inc
and
or
sbb
shlb
ljmp
xchg
filds
lock
jb
into
inc
inc
adc
shl
inc
lret
xlat
rcll
sti
shl
iret
dec
mov
sbb
mov
sarb
mov
jecxz
jge
or
xor
add
bound
aad
mov
pop
jo
mov
stos
movsl
pusha
pop
dec
push
loope
sbbb
repz
add
mov
dec
push
popa
jp
and
pop
out
repz
pop
mov
push
pop
add
xor
popf
decl
adc
pop
fsts
pop
xor
lahf
xor
shll
mov
push
lret
inc
mov
ljmp
sub
fst
int3
add
inc
rcr
imul
imul
mov
int
push
and
sub
add
pop
jg
js
fwait
jecxz
jp
outsl
adc
sbb
sbb
mov
inc
dec
or
cld
lahf
inc
cmp
cs
mov
cmpsl
mov
scas
push
or
shrb
cmp
inc
fnstcw
add
pop
mov
mov
or
xchg
adc
nop
jmp
and
popa
pop
dec
xor
int3
enter
jp
jb
pop
push
lock
mov
mov
bound
loope
cmc
repz
mov
imul
or
mov
jl
std
mov
out
pop
add
arpl
pop
sbb
imul
inc
xchg
xchg
fwait
aas
add
nop
out
aad
shlb
fwait
mov
mov
xchg
add
jmp
and
push
and
pop
jp
addb
mov
mov
sahf
mov
ljmp
push
xor
mov
pop
add
mov
popa
inc
jge
push
cmpsl
roll
xchg
mov
aad
sub
pop
xor
rcr
push
inc
adc
test
shlb
push
fwait
roll
jecxz
xor
loop
leave
mov
rclb
sub
xchg
sub
repz
mov
fdivr
pushf
dec
sarl
in
jmp
adc
push
cmp
iret
int3
cmp
mov
mov
jns
mov
hlt
mov
dec
es
pushf
out
pop
dec
stc
or
shrl
pop
clc
xchg
xor
mov
clc
fadds
jl
adc
ljmp
icebp
add
sub
add
inc
pop
xchg
pop
and
xor
adc
repnz
inc
sbb
push
data16
add
fidivs
cmp
sahf
les
pushl
and
or
loope
mov
ret
loopne
jl
xor
dec
repnz
inc
inc
ds
lods
scas
lock
pop
push
xor
pop
popa
cwtl
dec
sub
clc
jb
fwait
jne
mov
mov
xchg
imul
mov
cmp
jo
jb
mov
jbe
mov
mov
xchg
jnp
lods
inc
add
add
adc
mov
adc
cld
jne
enter
push
pop
out
xor
sbb
push
cmp
pop
push
notb
xchg
mov
lret
xchg
sti
adc
inc
dec
xchg
dec
aas
jl
loope
testl
push
in
sbb
mov
fisttpl
pushf
dec
cltd
mov
ja
pop
leave
test
sbb
lods
sub
inc
jg
clc
enter
dec
outsl
daa
jl
mov
imul
inc
xchg
outsl
mov
mov
jl
xor
jne
jns
lea
clc
sbb
jmp
jg
and
inc
aad
nop
and
sub
push
jns
imul
fisubrl
scas
mov
aaa
sti
gs
aaa
lret
xchg
sar
pop
jae
sub
inc
sahf
pop
fidivrs
push
pop
dec
into
sub
nop
jmp
jl
push
out
test
imul
mov
sub
dec
repz
push
shlb
inc
xchg
adc
cli
outsl
pop
test
sub
insb
addr16
mov
test
addl
lds
or
data16
add
jle
jns
outsl
mov
in
dec
cmp
loopne
mov
shlb
adc
dec
cld
xchg
add
scas
pop
in
inc
cmp
sbb
lods
mov
pop
mov
fisttpl
add
or
mov
fstpt
lea
icebp
mov
push
scas
test
pavgb
out
mov
pop
jbe
mov
cs
inc
fdivrl
adc
lds
or
les
mov
sbb
jb
hlt
pusha
mov
nop
call
pop
das
std
xlat
sbb
mov
xchg
and
add
in
mov
cld
fldenv
jns
and
sti
fs
roll
mov
fdivs
xchg
mov
rcr
cmp
mov
xchg
xor
mov
leave
fbstp
daa
and
mov
and
test
into
mov
ds
jo
mov
adc
fildll
inc
pop
cmp
dec
out
sub
pop
pop
and
frstpm(287
inc
sahf
dec
test
stos
rcll
mov
bound
aam
imul
mov
xchg
jbe
lahf
cwtl
pop
in
or
mov
adc
jmp
ret
xchg
int
addr16
cli
mov
jg
lret
mov
and
sub
cltd
subb
hlt
adc
push
xchg
js
xor
pop
adc
loop
test
xchg
xchg
pop
mov
push
cmp
lret
push
insb
popf
mov
mov
mov
jp
std
sbb
pop
scas
cltd
pop
lods
dec
mov
jne
or
xlat
ds
iret
xlat
div
idivl
outsl
in
out
sbb
fcmovu
ds
out
and
imul
xchg
dec
jp
dec
mov
aad
dec
adc
fnstcw
sub
aaa
xchg
fstl
jmp
xchg
out
aam
dec
jns
lcall
inc
lahf
les
dec
jno
jno
and
jg
mov
mov
outsl
test
adc
xlat
stos
mov
xor
jge
mov
or
divl
sub
dec
fstp
int
cmp
or
sarb
jb
pop
cli
ss
fcmovnbe
push
xchg
mov
jl
pop
mov
arpl
mov
xchg
adc
xlat
fcoml
dec
xchg
in
mov
cltd
out
sbb
mov
scas
out
mov
into
ljmp
mov
popf
push
pusha
rcr
shlb
cmp
test
add
leave
mov
pop
mov
jns
leave
fistpll
dec
inc
lret
dec
shrb
test
fildll
ss
mov
stos
sbb
jl
dec
mov
jle
scas
add
dec
lods
sub
pop
add
fcomi
hlt
inc
push
cld
jae
push
addr16
inc
xorb
cmpl
fisttps
notl
mov
repnz
test
pushf
or
ja
mov
cmpb
mov
insb
cmpsb
pop
inc
add
lods
push
mov
aas
out
insl
loopnew
jb
divb
imul
push
js
icebp
div
pop
adc
add
nop
and
outsl
aaa
loop
xchg
dec
jb
loop
and
in
mov
mov
cli
daa
inc
push
push
add
jl
adc
xchg
xchg
mov
pop
pushf
xor
sahf
xchg
and
sub
mov
sbb
mov
and
movsl
loope
cmp
push
xchg
int3
sbb
fnstenv
xchg
push
aaa
test
inc
mov
js
xorb
fadds
xchg
ret
xchg
mov
dec
cmp
or
mov
mov
cmp
dec
lods
ret
fildll
fiadds
mov
insl
and
out
out
push
je
lods
add
outsb
lock
les
je,pn
sbb
test
inc
jae
or
popf
or
xchg
sbbb
mov
loope
fsubl
mov
stos
and
jmp
ljmp
fisubs
int
pop
mov
test
int3
mov
repnz
adc
cmpsl
stos
push
clc
cmp
mov
inc
or
movsb
cltd
lcall
inc
scas
into
inc
pop
aad
mov
call
in
lret
enter
cli
ret
jp
mov
nop
or
cli
mov
push
add
and
divl
inc
fildl
jnp
pop
in
adc
mov
and
pop
xchg
rolb
or
sbb
mov
adc
xchg
mov
jns
mov
clc
dec
mov
push
daa
push
mov
sbbb
in
cmp
shlb
add
test
test
dec
test
push
lods
into
in
mov
adc
movsl
mov
int
test
gs
dec
mov
test
insb
mov
lea
call
and
pop
sarb
and
push
loop
into
mov
sbb
xor
loopne
leave
sub
andl
mov
cmp
cwtl
fwait
movsb
lds
cmpsl
push
pop
lock
xchg
add
push
cmc
into
hlt
push
sbb
xchg
cli
in
push
inc
insl
pop
mov
mov
repz
fbld
adc
mov
xlat
fidivl
outsb
pop
push
lds
lcall
cmp
lea
out
fs
mov
dec
add
pop
mov
decl
out
mov
sbb
mov
mov
mov
and
and
or
sbb
jb
lock
pop
pop
cmp
sahf
dec
mov
pop
sbb
stc
mov
popf
sbb
iret
sub
leave
or
addr16
cs
pop
stos
sub
cli
push
rol
stc
jnp
xchg
enter
lret
push
sub
jne
adcl
adc
mov
psrlq
insb
mov
jb
mov
and
out
jo
fldenv
mov
mov
decb
jle
ja
mov
or
repz
or
jl
inc
std
and
aas
je
clc
je
and
rolb
pop
incb
push
inc
xlat
lds
jp
push
jge
mov
jns
sub
push
pop
adc
daa
roll
fucom
je
pop
sub
jge
out
cmp
jge
push
inc
xor
pushf
ds
imull
insl
ja
outsb
ja
test
mov
push
inc
sub
rclb
in
or
andl
imul
iret
mov
pushf
jne
push
cmpsb
aas
ljmp
addr16
mov
sbb
push
jbe
icebp
ret
ja
bound
out
xor
xchg
lcall
hlt
pusha
test
lds
add
adc
push
push
sub
in
inc
lret
sub
dec
out
jle
lret
adc
sub
scas
sub
mov
sub
xchg
imul
cs
imul
jp
or
jge
mov
setbe
sbb
es
out
jns,pn
cmp
and
clc
mov
ret
sbbb
jnp
or
enter
xchg
pop
xchg
and
xchg
xlat
mov
movsb
in
mov
and
pop
xrelease
jne
scas
lret
fsubs
iret
sbb
xor
aas
xchg
clc
mov
bound
jnp
movsb
in
push
mov
inc
mov
test
jg
mov
pop
push
clc
dec
stos
inc
cltd
mov
sbb
cmp
sub
std
mov
jg
xchg
popa
cmp
dec
bswap
adc
xchg
nop
arpl
scas
scas
testl
ja
fmulp
insb
or
xchg
aam
repz
dec
or
xlat
test
cmp
mov
fbld
dec
imul
pop
shlb
pushf
ffree
dec
call
out
std
and
jle
shr
sbb
push
pushf
pusha
push
fsincos
jnp
int
xchg
loop
outsl
mov
push
add
ret
push
add
fildll
arpl
popf
stc
je
cmp
rclb
and
and
sbb
sbb
cmp
loope
in
jae
push
fstl
add
xor
jmp
out
fcmovu
orb
inc
in
icebp
inc
xor
mov
push
pop
jne
mov
sub
jle
aas
daa
push
sub
out
je
cmp
ret
xchg
xor
sbb
sbb
adc
pop
or
ljmp
push
aaa
mov
xchg
enter
loopne
jle
sub
lods
pop
idivb
adc
cltd
mov
push
fcmovb
testl
pop
lret
sahf
jns
in
xchg
mov
aaa
daa
bswap
test
mov
mov
inc
in
mov
repnz
add
shrl
ja
js,pt
xchg
pop
inc
inc
fnstsw
daa
pop
testl
scas
mov
lock
out
pop
xor
sub
cmpsl
and
dec
mov
ffree
xchg
sbb
inc
popa
dec
fldl
sbb
dec
xor
daa
xor
mov
stc
xor
bnd
and
aaa
xchg
arpl
push
iret
iret
or
xchg
xchg
sub
jle
push
arpl
into
rcr
hlt
pop
jmp
adc
and
ja
call
cwtl
loopne
sub
or
les
push
stos
cmp
test
dec
xchg
fiaddl
add
mov
dec
jae
sbb
jne
insl
jge
mov
push
mov
mov
push
adc
pop
jg
sbb
push
repz
addr16
cmpsl
jge
cmp
jl
fldcw
and
mov
mov
icebp
filds
xchg
test
sub
push
jmp
adc
rolb
xor
lea
pop
dec
fadd
push
test
inc
aam
push
or
das
jns
fidivrl
outsb
lret
in
imul
cmp
stos
inc
icebp
test
add
mov
int
add
jne
out
adc
adc
xor
mov
pop
mov
fcompl
setge
scas
sbb
icebp
add
je
jo
bnd
pop
iret
jae
or
test
dec
adc
jle
jns
mov
rcrb
leave
sub
fidivs
mov
lock
sbb
repnz
xlat
sbb
cltd
mov
push
dec
cmp
into
mov
add
cmp
dec
pop
jae
aam
in
mov
stos
hlt
sbb
scas
fcomi
pop
cmp
int3
out
mov
int3
and
in
pushf
and
sbb
mov
mov
fimuls
xor
mov
jmp
xchg
adc
inc
push
in
das
repz
mov
sbb
xor
lret
cmp
fsubrs
mov
lods
ret
jmp
push
ficoml
jl
cmpl
mov
jmp
xchg
outsl
mov
shll
ret
cli
sbb
mov
cmpsl
jno
lods
lret
cmpsl
pop
icebp
loop
stc
or
and
shl
mov
arpl
push
pushf
mov
adc
cmp
sarl
dec
push
sahf
sbb
and
and
cltd
inc
cltd
jl
pushl
in
mov
mov
ret
test
movsb
in
add
pop
iret
inc
mov
pop
subb
insl
in
add
nop
cltd
fcmovu
icebp
lcall
push
push
shrl
insb
dec
ret
or
aam
imul
sbb
cmpsb
pop
add
xchg
and
xchg
jecxz
cmp
lret
pusha
adc
mov
xchg
dec
arpl
pop
scas
mov
push
jo
mov
pop
pop
or
mov
rcr
out
scas
popa
and
push
lret
jmp
or
dec
enter
fsubrp
loopne
sub
jns
mov
pop
fs
cmp
cmp
push
dec
pop
les
cmpsb
and
mov
call
scas
lret
es
fs
pop
test
xchg
add
cmp
fistps
bound
dec
out
sbb
insb
jg
nop
das
sti
jp
jmp
std
popa
and
sub
insl
push
jl
adc
repz
iret
ret
and
jne
jg
scas
mov
or
addr16
jno
lret
mov
push
shrb
sbb
cmovs
mov
jl
jns
mov
pop
push
mov
scas
lret
fiaddl
idiv
mov
jne
jge
mov
dec
push
mov
and
hlt
and
mov
mov
add
leave
mov
push
and
movsl
hlt
jno
cmp
test
mov
jno
xor
andb
stos
cmp
push
push
mov
out
sar
test
lds
int3
ja
cmc
push
scas
xlat
mov
in
push
gs
shll
push
mov
sub
xor
fmuls
adc
ljmpw
cmp
adc
dec
sub
cld
std
jmp
in
mov
in
hlt
out
dec
sub
bound
mov
stos
push
divl
mov
lcall
pop
das
mov
cmp
sub
loopne
scas
adc
inc
mov
movsb
add
xchg
enter
adc
pop
jae
nop
fnstcw
in
popf
pop
jno
push
leave
lret
adc
adc
aam
mov
jl
orb
insb
cwtl
push
popa
inc
aam
sub
daa
aam
ljmp
pusha
push
or
insl
mov
je
jae
daa
push
xor
pop
or
data16
fiadds
push
clc
sub
and
push
insb
pop
xlat
or
dec
push
xlat
pop
adc
mov
dec
jl
ret
sbbb
cmpsl
scas
dec
sub
mov
jl
dec
arpl
mov
xor
cmpsl
ret
xchg
das
inc
imul
inc
xchg
mov
xchg
adc
sbb
ret
ja
int3
outsb
out
push
jmp
lcall
bound
jle
lds
ja
scas
and
mov
jae
out
cwtl
insb
into
mov
rorl
loopne
pop
sub
jns
test
dec
sbb
inc
mov
rolb
pop
dec
lahf
clc
mov
jno
cmp
mov
mov
dec
daa
xchg
mov
or
insb
lret
pop
or
nop
and
mov
bound
inc
rorl
sbb
inc
fdivrs
xor
std
ret
mov
mov
pop
pop
dec
pushf
aas
lret
dec
dec
xor
sub
jne
pushf
mov
mov
jnp
xchg
aaa
leave
insb
adc
jnp
xor
scas
mov
popa
pop
jbe
data16
subl
popf
add
inc
dec
ret
push
lret
arpl
fucomip
je
aad
aad
nop
jb
lret
fnstenv
imul
std
bound
shll
jns
adc
out
sbb
into
mov
adc
mov
clc
div
dec
add
sub
shrl
mov
mov
lea
jnp
pop
xlat
dec
xor
insb
add
pop
pop
sub
mov
mov
cmpsb
shll
lods
push
sub
jbe
or
and
jg
cmpsb
filds
cmc
push
or
bound
dec
dec
xor
or
cmpsl
xor
add
cld
in
clc
int3
inc
or
and
cmp
sbb
in
out
xchg
jge
std
sahf
lahf
popa
dec
ds
jp
shl
push
add
lock
jo
push
decb
pop
aam
push
xor
xor
push
ret
fildll
lock
and
push
pop
jl
cmp
insl
and
shll
dec
insb
jb
mov
add
mov
jno
mov
mov
mov
aaa
xor
test
stc
cwtl
jo
jmp
nop
mov
jo
aas
cs
mov
sub
cmp
xchg
stos
sub
fdiv
fisubs
add
xchg
or
mov
mov
jle
pop
or
adc
mov
iret
rcrl
adc
outsl
loop
int3
or
imull
jne
xor
js
testb
and
pop
movsb
js
nop
shlb
push
fdivr
xchg
andb
sub
cltd
push
mov
popa
dec
sbb
jnp
push
xchg
in
popf
add
sbb
idivb
xchg
in
cltd
aad
jno
dec
lret
dec
stos
ret
sub
fs
mov
dec
lcall
js
xchg
mov
push
fcoml
cmp
fucomi
pop
dec
out
xor
leave
les
dec
cs
and
lcall
imul
lds
lret
movsl
or
pop
je
jg
and
clc
adc
cmp
pop
cmp
dec
cmp
adc
mov
push
mov
data16
jo
pusha
cmp
pop
test
mov
jb
imulb
or
notl
mov
mov
inc
ljmp
mov
roll
push
cmc
jae
mov
lods
fldl
loope
call
neg
xchg
outsb
or
subl
jb
addl
add
and
mov
push
ss
lods
lods
pop
cltd
add
shrb
or
shll
mov
ss
mov
inc
xchg
stc
jbe
fmull
mov
adc
test
sub
lcall
xchg
jge
jl
add
add
imul
data16
nop
dec
xchg
and
fst
pop
xor
cld
jmp
cld
jge
aaa
mul
in
pusha
xchg
and
fld
inc
mov
sarb
adc
std
mov
out
cmp
scas
push
aas
icebp
pop
js
lea
push
jns
jp
scas
lret
sub
call
or
sub
adc
pop
jno
leave
lret
jne
aam
mov
lds
loopne
jmp
testl
in
jg
frstor
loope
movsl
imul
es
mov
lahf
cmp
cmp
rcr
insl
pop
incb
add
sbb
mov
ja
dec
mov
xor
sub
stos
pop
add
jb,pt
push
push
rorb
mov
bound
and
in
push
pop
push
jne
cli
lea
mov
pop
mov
xor
rcr
push
cmp
mov
sub
jbe
cmc
pop
mov
nop
insl
outsl
xor
dec
adc
dec
imul
ja
sub
mov
cmp
and
push
cmpsb
ds
mov
sahf
xor
pop
sub
test
push
mov
int
or
enter
lods
sub
xor
sarb
cmp
sbb
sarb
in
sub
inc
mov
jo
lret
or
and
xchg
add
push
xchg
fs
push
pushf
test
repnz
xchg
in
push
push
xchg
xorb
int3
ljmp
add
out
mov
adc
std
call
ret
and
jns
fwait
xchg
aad
dec
or
inc
sbb
insl
pop
or
inc
jb
out
pop
repz
popa
out
rcl
pop
imul
push
in
mov
add
inc
jno
aas
sub
cmp
pop
cmp
hlt
xor
cmp
into
fimull
aad
push
sbb
sub
call
adc
push
imul
push
daa
lcall
aad
jl
inc
lcall
cli
icebp
jmp
popf
aad
cmpsl
lret
and
lcall
in
and
add
fldcw
push
cs
mov
cwtl
and
lods
fucomp
mov
and
push
stc
or
mov
dec
into
add
mov
xor
test
push
cmp
dec
mov
insb
pop
clc
xor
xchg
mov
jge
inc
test
mov
or
jae
in
or
rcrl
into
scas
scas
jb
in
push
pop
xchg
fcomip
mov
es
mov
sub
add
and
sub
cmpl
aaa
xor
and
out
ret
cmp
aaa
insb
sar
xchg
inc
xor
xor
cmp
xchg
loope
xor
push
insl
mov
int
or
adc
jns
gs
stc
or
cmp
mov
push
test
dec
stos
aas
push
cmc
pop
cli
jp
int3
sbb
push
lcall
mov
or
sbb
inc
adc
loope
mov
mov
daa
add
mov
sub
mov
dec
stos
cmp
jle
pop
cmp
imul
cmp
sub
add
push
and
push
cmp
repz
push
jo
iret
jg
jge
outsb
aas
lret
inc
pop
into
mov
imul
ficompl
lahf
out
xchg
rcrl
fwait
add
sub
mov
pop
and
inc
mov
adc
out
cmp
adc
jb
cltd
adc
xchg
aad
mov
sub
pop
cmp
and
xchg
stc
mov
out
sub
cmpsb
sbb
mov
test
xor
addr16
dec
mov
loopne
mov
addr16
pop
xor
adc
pop
mov
aaa
xchg
and
fadds
or
test
test
incb
mov
inc
popf
in
das
fwait
int
lods
and
out
orl
push
push
mov
xchg
into
add
in
sar
hlt
repnz
dec
ret
add
jb
inc
dec
pop
stos
scas
xchg
imul
icebp
jnp
mov
in
jp
xchg
cmp
fdivr
jne
mov
psrad
and
sarb
icebp
rclb
shll
cwtl
lahf
popf
adc
roll
gs
test
adc
out
mov
andb
fwait
inc
ja
add
repz
cvtps2pi
push
adc
and
int3
adc
push
mov
mov
int
push
cmp
icebp
in
push
sbb
inc
mov
mov
mov
jmp
fstpt
jmp
push
lods
push
lcall
leave
jns
xchg
ret
jo
xor
cli
rcrb
fcompl
test
lret
pop
jge
icebp
ljmp
cwtl
jecxz
pop
sbb
aaa
push
xor
dec
sub
mov
jns
xor
xor
and
in
in
test
mov
dec
mov
dec
test
fs
lods
sbb
mov
dec
push
mov
movsb
setne
xor
aas
or
mov
loop
adc
inc
pushf
or
cmp
outsb
int
sarb
fiadds
and
mov
aas
xor
lock
adc
jecxz
cmp
adc
ret
inc
in
jno
cmp
paddsw
fnstenv
lods
xchg
fidivs
or
pop
in
adc
pop
dec
enter
daa
adc
stos
das
dec
icebp
aam
rol
mov
loope
test
mov
js
pop
subb
rorl
arpl
test
mov
sbb
push
push
imul
lock
outsb
fs
push
inc
rcr
fsts
and
incl
lock
or
fdiv
cmp
into
cmc
test
in
xchg
jle
jmp
or
ljmp
aaa
push
cmp
std
pop
pop
xchg
and
push
icebp
sub
inc
or
aad
xchg
mov
repnz
mov
sub
add
adc
sub
and
xchg
repnz
jno
int3
mov
pop
cmp
jp
leave
std
outsb
xor
push
jge
roll
je
filds
in
add
or
or
adc
and
mov
lcall
pop
testb
aaa
sbb
mov
push
jl
inc
push
outsl
dec
daa
addr16
outsb
sub
xor
lret
sti
mov
jae
dec
jge
popa
idiv
mov
add
out
ret
adc
xor
cwtl
push
push
cmp
mov
push
js
xchg
sub
xchg
pop
xchg
adc
sub
pop
les
aaa
push
subb
jno
ret
repz
sub
pop
test
rorl
outsl
das
push
xchg
cmp
loopne
jmp
jo
in
fs
mov
inc
push
cmp
xor
sub
mov
data16
in
xchg
cmpb
movsl
dec
adc
jbe
rorl
bound
jnp
sub
fisttpl
lcall
fmull
mov
inc
out
mov
mov
pop
testb
and
jb
cmp
mov
xor
mov
sub
pop
andl
jne
or
lret
mov
jae
dec
dec
inc
out
xor
std
cli
or
adc
shrb
clc
inc
out
rclb
sub
cwtl
loopne
pop
and
test
daa
cltd
push
add
mov
push
sbb
in
mov
sbbb
dec
jbe
neg
sub
fs
dec
enter
adcl
mov
loop
loopne
testl
rcll
push
mov
push
jbe
push
faddl
jecxz
scas
sbb
mov
movl
sub
xchg
movsb
popf
mov
mov
out
je
fistps
adc
in
sub
and
pop
push
cmc
sahf
clc
dec
int
dec
icebp
mov
push
mov
adc
pop
sub
pop
add
lret
xchg
call
leave
hlt
js
popa
push
push
jle
sbb
loopne
dec
sub
loopne
test
or
mov
sahf
xlat
add
leave
mov
pushf
xchg
and
push
xor
sub
nop
push
int
mov
xchg
add
add
sub
sbbb
iret
stc
cmp
push
fmul
sub
inc
xor
loopne
push
nop
xchg
jo
pop
loop
aad
repnz
and
sar
mov
ja
andl
mov
sub
sub
pop
jno
add
sub
clc
cmp
xchg
sub
fnstsw
add
mov
sub
or
leave
ljmp
lcall
cmpsl
add
enter
pop
leave
inc
rcll
addr16
sub
addr16
jne
outsb
sarb
loope
iret
dec
mov
arpl
lcall
sarb
loop
ss
add
stos
or
int3
movl
sub
leave
add
insl
dec
or
shl
test
insb
std
cltd
sbb
aaa
adc
and
dec
jmp
dec
mov
outsb
mov
and
call
test
sbb
outsb
into
mov
push
das
xchg
sti
or
jmp
rcrl
inc
pop
cwtl
fistl
mov
aam
xchg
cmp
scas
std
scas
int3
xchg
cmp
ret
lcall
rcrb
adc
les
add
rcll
ret
sbb
ja
push
and
cwtl
xchg
into
sti
or
mov
adc
pop
sub
pusha
add
adc
mov
jbe
mov
in
ds
push
test
pop
pop
out
or
sarl
add
std
call
sbb
scas
add
jge
xor
pushl
sub
call
jl
loop
xchg
mov
insb
and
pop
decl
lret
rcrl
fiaddl
fdivr
shl
or
aad
clc
insb
inc
cmovo
pop
add
add
addr16
cmp
scas
mov
icebp
push
hlt
aam
push
push
fcomi
push
push
add
push
push
cltd
les
cmp
adc
pop
and
xchg
push
adc
testb
cmp
lock
push
lret
mov
cmpsl
add
dec
jecxz
pop
mov
cltd
sbb
pop
aam
adcb
imul
mov
ja
fimuls
nop
mov
insb
sbb
push
jo
fists
adc
fildl
stos
adc
xchg
inc
fnstsw
rorb
sti
xor
ljmp
mov
sbbl
push
cld
gs
xchg
scas
enter
iret
cmp
sahf
into
pop
xlat
lret
push
aam
jmp
dec
outsb
je
mov
adc
add
dec
jp
mov
mov
arpl
je
test
in
push
movsb
test
int
addb
idivl
add
push
rcrl
cmpsl
pop
in
and
sub
test
fnstcw
ret
imul
jp
vminsd
in
mov
ret
es
jne
fwait
cli
pop
int3
aad
cmpsl
test
pop
sbb
and
pop
ss
xchg
jle
sbb
jecxz
int3
dec
push
xor
jbe
sbb
add
or
inc
in
cs
sbb
cltd
mov
push
fmul
fs
sbb
js
sbb
jb
jo
push
push
iret
pop
add
xor
jae
jno
mov
lods
shrb
mov
sarl
dec
add
or
lods
sub
ret
js
negl
mov
daa
aaa
xchg
adc
jp
loope
nop
sti
jp
push
cmp
mov
mov
mov
jecxz
or
and
arpl
int
into
sbb
frstor
lret
les
sub
lea
xchg
leave
leave
cltd
fcmovu
shl
add
movsb
lods
and
adc
shrl
mov
insl
fiadds
cli
lahf
jl,pn
popf
pop
inc
xor
lea
sub
push
xchg
mov
cs
cli
inc
cmc
sbb
aad
cmp
sbb
xlat
bound
js
ret
in
ja
cmpsl
cmpsb
cmpsb
fcoml
aas
jge
inc
sub
add
mov
pop
icebp
in
paddsw
dec
lret
clc
cmp
xchg
fistpll
out
ret
outsb
mov
sub
and
add
or
div
cltd
andb
pop
and
inc
pushf
add
xor
mov
or
mov
cmp
add
mull
test
lods
shll
push
jbe
arpl
mov
mov
je
push
lcall
inc
and
jns
sbb
loop
movsl
stc
loopne
jp
sub
and
cmp
movsl
mov
cmpsb
sbb
aaa
mov
fnsave
pop
adc
cmp
inc
test
xor
icebp
and
ja
mov
fdivrl
mov
add
mov
ja
int
mov
sbb
pop
mov
xchg
sub
push
mov
test
clc
repnz
mov
mov
shll
addr16
mov
pop
aaa
aaa
jmp
js
ret
cmp
mov
pop
adc
nop
lahf
scas
add
mov
mov
sbb
cmpsb
xor
or
ror
stos
inc
negb
sbb
into
xor
sub
sbbb
inc
fisubrs
sarl
orl
xor
mov
cmp
cmpsb
lret
lret
and
in
mov
sahf
sub
xor
adc
jne
push
pop
inc
lret
mov
das
and
and
inc
sub
sub
arpl
adc
sarl
jo
loop
addr16
mov
pop
cmp
mov
popa
lock
mov
push
mov
push
pushw
insb
dec
and
out
or
xor
mov
cs
out
jl
xchg
sub
out
nop
pop
jo
jo
inc
or
jle
cmp
pop
lret
testl
cmc
mov
mov
ja
mov
mov
or
dec
and
sti
inc
cli
xchg
adc
sbb
cwtl
sbb
int3
xor
movsb
sbb
iret
in
aam
sub
add
xor
sbb
cmp
jle
std
pop
adc
pushf
test
imul
add
aam
lret
jns
add
adc
inc
inc
aad
mov
xor
add
cli
loopne
mov
arpl
xchg
push
cltd
sub
push
and
stc
aad
repz
in
xlat
dec
mov
or
fimuls
jl
add
pop
and
mov
mov
mov
das
inc
loopne
loop
pop
loop
jge
or
sub
add
lret
inc
leave
mov
ficoml
cwtl
push
mov
fldenv
fs
movsb
stos
mov
in
fnsave
sub
cmp
dec
icebp
jp
hlt
jbe
lret
adc
mov
jnp
add
xchg
fisttps
pop
or
mov
lock
xchg
ljmp
repz
or
decl
jp
call
adc
cltd
loopne
stos
push
rorl
sti
lahf
fs
lods
stc
fmuls
ja
insl
sub
sahf
jecxz
sti
pop
test
loopne
pusha
mov
sub
mov
lret
scas
xchg
fdivs
cltd
push
inc
or
sub
mov
add
jns
pop
sub
cmpsl
enter
cmp
mov
icebp
in
das
add
scas
inc
or
xchg
sub
sbb
pop
jge
imul
and
pop
iret
arpl
lods
jno
ret
mov
je
or
jg
fs
adc
scas
int3
cli
add
pop
aam
xchg
push
lret
cmc
stc
mov
add
xor
ja
dec
add
mov
lods
xchg
imul
push
push
mov
add
cmp
xchg
loopne
adc
test
dec
out
repz
add
les
push
fs
mov
mov
push
clc
stc
sbb
xchg
lcall
aam
hlt
pop
jmp
pushl
sub
push
test
pop
icebp
fcomps
xchg
iret
sbb
mov
popf
stc
addr16
div
push
xorl
addl
cmp
mov
sub
push
arpl
sub
lods
and
cs
mov
clc
pusha
cltd
jl
out
pushl
inc
or
movsww
or
test
jp
divl
cltd
add
scas
mov
repz
sub
sbb
je
loop
jb
cmp
mov
push
ljmp
dec
push
sti
pop
sti
ret
pusha
dec
push
xchg
pop
push
lret
test
dec
add
enter
xor
in
or
scas
sahf
sub
lret
cmp
adc
fdivrp
cmp
movsl
ds
or
xchg
sti
fpatan
aas
push
leave
or
jp
pminsw
jl
and
and
test
orb
jo
sub
xor
jle
jge
je
push
imul
leave
pop
repnz
cld
pusha
push
mov
and
ret
sti
je
cmp
dec
frndint
sub
in
sbb
orl
int3
inc
mov
clc
cmc
inc
and
cmp
dec
cwtl
mulb
call
hlt
addb
cmpsb
pushf
leave
xchg
out
les
xchg
dec
dec
ret
inc
xchg
dec
iret
dec
jae
xchg
push
cmp
xchg
add
mov
jg
jnp
nop
jne
adc
mov
pushl
je
mov
jno
in
fisubrs
jbe
jnp
mov
test
pop
popa
sub
sub
pop
fs
sub
push
repz
ljmp
xlat
ss
dec
daa
push
stos
loop
loopne
xor
add
jne
mov
sbb
fists
or
dec
xchg
sbbb
lret
dec
fwait
pushf
adc
push
jge
or
aas
fdivrl
or
fisttpl
mov
movsl
mov
sbb
mov
xchg
test
jne
jne
mov
sbb
icebp
addr16
mov
push
xor
dec
sub
cmp
sbb
daa
cmpsb
xacquire
mov
enter
fstpl
imul
mov
mov
out
sub
cmp
int3
xchg
subb
mov
gs
or
pop
insb
arpl
add
popl
arpl
rcll
mov
pop
push
daa
mov
sbb
pop
xor
int
rcll
sti
xchg
sahf
ss
in
clc
loop
mov
or
test
orb
cmp
out
in
fs
jne
rcll
lahf
xor
adcb
enter
ja
pop
fcompl
push
jns
das
mov
mov
fwait
cmp
std
ret
inc
or
mov
cli
fwait
cwtl
xchg
cmp
and
cmpsl
subb
arpl
mov
jnp
insl
xor
mov
adc
pop
and
jno
out
pop
push
outsb
and
jns
sub
sarb
test
loope
jne
adc
xor
and
out
outsl
mov
xor
jmp
xor
loopne
dec
repz
cmpsb
and
loope
push
lcallw
sti
into
test
pop
sbb
js
pop
add
push
jge
jmp
imul
aam
cmpsl
dec
loop
push
enter
into
xchg
xchg
int3
in
cmp
js
and
dec
aaa
test
ds
xchg
ja
jge
fs
sbb
test
icebp
inc
jmp
sbbb
jbe
xor
mov
or
shl
clc
fisubrs
ljmp
lods
add
out
xlat
add
inc
dec
leave
cltd
lcall
std
aam
imul
ret
mov
in
aad
out
push
mov
aad
push
xchg
xor
stos
testl
sub
sarl
inc
icebp
aad
imul
sbb
sub
adc
jle
addr16
int3
int3
mov
mov
and
in
sti
sbb
add
fistps
les
xchg
or
cmp
add
shrb
les
jno
xchg
mov
xchg
cltd
popa
repnz
in
ret
bound
sub
and
xchg
jecxz
movsl
negl
test
cld
mov
dec
ljmp
jo
ret
mov
push
movsb
sbb
pop
dec
fsubrl
mov
lahf
mov
dec
mov
dec
pop
fcompl
dec
lods
xchg
stos
push
jo
mov
sbb
sub
fcoml
fistl
add
int
cmpsl
add
std
lcall
inc
sub
ficoml
mov
pop
repnz
je
clc
mov
add
xchg
mov
xchg
pop
cltd
mov
cmp
push
xchg
dec
je
adc
push
sarl
add
notb
leave
and
inc
mov
subb
dec
inc
fnsave
dec
bound
push
test
and
in
stc
xchg
mov
movsl
cs
pop
loopne
movsb
cld
or
mov
dec
add
pop
mov
cmc
push
notl
mov
sbb
shrb
sti
jno
lods
fcomps
jl
aas
fdivl
cmpl
in
jp
inc
and
mov
push
lcall
mov
mov
fdivrs
cmpsl
shl
test
mov
xchg
movsb
scas
das
sarl
jnp
orl
not
push
cld
mov
stos
lds
inc
stos
dec
fdiv
xchg
hlt
out
icebp
xchg
pop
add
leave
enter
xchg
imull
lret
ret
dec
sub
push
into
in
fldenv
pop
lock
adc
xchg
imul
push
adc
pop
inc
push
mov
fbstp
sub
jbe
xchg
fs
test
iret
jl
and
inc
inc
popa
adc
cld
ss
jb
fcomps
push
mov
into
jmp
sub
iret
adc
pop
or
inc
cld
roll
or
push
sub
cmp
push
push
push
dec
popa
in
add
add
mov
neg
add
lods
sbb
mov
adc
jmp
add
inc
andb
out
cmp
jecxz
pushf
xlat
xchg
mov
shl
repz
insl
add
push
mov
sub
popa
insb
jg
sbb
cli
imul
cmp
out
rorl
enter
push
dec
jecxz
jge
repnz
popf
jle
test
and
mov
jnp
stc
push
in
push
ss
mov
sbb
xor
push
jne
fs
mov
sub
cmp
test
pop
xchg
cld
jmp
xor
push
lret
push
shl
adc
mov
sub
lods
iret
lret
pop
sub
sarb
xchg
sub
push
cld
push
xchg
subb
test
push
push
or
add
push
lcall
or
pop
add
push
les
xlat
scas
mov
call
xchg
pop
mov
xor
mov
scas
das
jo
jnp
ss
and
imul
dec
loopne
mov
loope
es
or
dec
lahf
rclb
jb
js
ss
pop
loop
sti
add
gs
push
enter
nop
push
pop
daa
mov
push
imul
cmp
bound
cmp
lahf
xchg
outsb
or
orb
mov
push
jb
add
pop
lret
push
ljmp
xchg
leave
addr16
xchg
gs
loop
leave
adc
jbe
ds
xchg
bound
aad
mov
arpl
iret
rclb
rclb
popa
and
push
ret
cwtl
xor
mov
das
scas
inc
shrl
dec
sub
out
dec
jl
repz
into
pop
sub
cmp
clc
aam
in
cmp
jns
mov
jb
repz
jle
xchg
jecxz
test
jmp
stos
lcall
xor
mov
jp
hlt
int3
insb
push
movsl
lods
sbb
cli
insl
add
pop
push
mov
mov
pop
inc
and
aas
loop
sub
andl
xchg
mov
sbb
push
push
cltd
iret
cmp
lock
aaa
or
sbb
or
popf
jae
lods
lea
clc
sbb
pop
add
cmp
fcoml
push
stc
popf
inc
adc
mov
mov
sub
pop
add
int
jae
scas
ljmp
aam
ss
and
sbb
push
ds
push
mov
pcmpgtb
cmp
sub
sti
loopne
mov
mov
out
mov
push
adc
pop
adc
or
cmpsb
add
and
xlat
loop
and
xchg
dec
rcl
dec
lock
ljmp
push
xchg
pop
inc
cltd
pop
xchg
sub
call
mov
sahf
mov
xor
adc
cwtl
out
ret
cmp
test
pop
push
loop
jge
dec
rorl
ds
pop
popf
mov
lret
mov
jnp
lods
push
xor
imul
dec
mov
aad
jecxz
adc
jecxz
mov
fcompl
cltd
ljmp
cs
rcrb
and
push
icebp
cmc
out
ror
lods
pop
adc
out
into
cmp
shr
arpl
js
sbb
lods
lret
mov
mov
adc
fnstenv
xor
add
and
cmp
in
jge
or
outsb
add
gs
cmp
mov
sti
fs
xchg
or
inc
xchg
stos
adc
adc
imul
stc
lahf
mov
insl
jne
xchg
stos
and
testb
sahf
xchg
mov
mov
adc
lock
int3
sub
mov
notb
xchg
lds
sub
ljmp
scas
cmc
push
jmp
nop
adc
popf
lret
jge
adc
xchg
pop
repnz
xorb
inc
sbb
mov
xchg
inc
push
js
adc
xchg
insl
xchg
fimuls
jb
flds
test
std
pop
les
ss
sub
aad
cmp
xchg
jmp
cmpsl
arpl
arpl
push
jbe
cmp
cltd
lock
outsl
pop
rcr
imul
int3
inc
add
cmp
xchg
int3
cmc
movsb
adc
inc
sti
out
cmp
lock
adc
mov
pop
addr16
insl
aad
test
mov
cmp
jo
dec
mov
xor
dec
jl
xorb
and
xchg
decb
cmp
int
test
out
jmp
mov
xchg
or
popf
mov
cmp
pop
mov
cmpsb
cmp
stc
xchg
mov
aad
or
call
adc
adc
push
jge
mov
pusha
mov
je
jge
pop
test
jae
movsl
dec
rolb
inc
insb
divl
pushf
sub
outsl
mov
rorl
fidivrs
jmp
hlt
clc
inc
jo
lcall
mov
mov
js
push
loop
dec
ja
jl
stos
dec
pop
jge
push
fucomi
fldcw
dec
pop
mov
into
and
jecxz
inc
in
mov
or
add
pop
inc
add
addr16
mov
out
inc
push
jp
mov
std
fisubs
sti
xchg
sub
xchg
or
push
mov
dec
pop
testl
push
lock
add
cmpsb
aaa
flds
in
fmuls
jle
push
jb
lods
cmp
popf
sub
leave
fwait
std
insb
int3
mov
xchg
mov
repz
adc
mov
sub
mov
rclb
js
cld
adc
outsl
js
mov
xor
jecxz
negb
insb
adc
add
xchg
mov
cmp
call
xchg
dec
push
xchg
pop
mov
mov
xchg
sub
dec
mov
into
pop
lret
push
push
out
rorl
divb
test
test
scas
out
xchg
ljmp
arpl
mov
test
fidivrl
rcr
pop
vcvtss2sd
inc
and
mov
sti
jp
outsl
mov
push
negl
orl
dec
xchg
popf
sbb
lretw
jmp
testb
jb
dec
mov
imul
mov
mov
push
divb
iret
xchg
mov
fmull
sti
stos
push
inc
or
rclb
adcl
test
loopne
adc
pop
je
push
jbe
enter
dec
jge
test
cld
sub
shlb
mov
enter
mov
loope
cmp
xchg
adc
mov
lret
pop
outsl
ds
jne
jl
pusha
das
adc
gs
fcomps
push
lock
mov
pop
xchg
jmp
push
test
sub
pop
cmpsb
inc
jb
ss
pushf
hlt
adc
xor
push
pop
out
jne
lea
xchg
mov
xchg
cwtl
shr
test
cwtl
bound
stos
dec
and
jb
jb
mov
push
cmp
test
adc
cmp
dec
dec
stos
sbb
inc
mov
bnd
mov
mov
fs
xchg
jo
sbb
loopne
in
jl
xlat
mov
in
pop
xchg
les
mov
dec
and
pop
dec
cwtl
es
fnstenv
and
lock
insl
and
lods
mov
xor
and
jnp
gs
jg
jl
gs
mov
adc
lea
add
scas
lret
lds
pushf
push
inc
xor
fcomip
ret
cmpsl
pop
loope
push
daa
lock
or
mov
add
xor
mov
cmp
and
lock
aad
scas
popf
sahf
dec
mov
mov
shrl
loop
imul
pop
ficomps
or
cmpsb
inc
lods
loope
push
mov
add
ror
sbb
outsl
inc
cmpsl
decl
mov
add
pusha
in
pop
test
or
gs
xor
fwait
dec
shlb
rclb
add
mov
addr16
pop
mov
jnp
adc
testb
cmpsb
cmp
xchg
mov
mov
je
in
fistpl
aaa
cld
dec
cmp
imul
mov
inc
out
out
pop
fs
sub
inc
xchg
test
mov
adc
loop
pop
mov
in
dec
add
jle
inc
mov
std
ficompl
mov
fsub
cmpsl
adc
mov
aas
dec
push
fcomp
push
icebp
jg
shrl
jbe
xor
sbb
sahf
jno
dec
das
jp
cmpsl
mov
or
call
test
popa
jecxz
push
in
daa
stos
mov
lods
jae
dec
movsb
xchg
mov
lock
jnp
mov
jne
push
insb
stos
jno
pop
out
cld
mov
scas
pop
test
dec
push
iret
insl
fcmove
jo
or
test
mov
in
or
lcall
js
jg
jle
loop
sbb
adc
push
sti
cmp
xchg
xor
adc
adc
aad
outsl
popf
jmp
fdivl
jno
stc
out
push
mov
clc
in
push
and
dec
push
xacquire
pop
pop
shll
mov
mov
test
je
outsb
ss
mov
cmpsl
adc
imul
or
mov
fsubr
sbb
pop
dec
daa
mov
jae
lods
shlb
and
out
or
mov
pop
gs
push
cmpsw
sub
fisubrs
insb
pop
cld
push
jnp
pshufw
popf
mov
nop
push
lea
out
aad
sub
movsl
mov
xor
in
adc
and
jecxz
out
and
pushf
stc
out
sub
mov
add
mov
loope
adc
push
ss
cwtl
cmc
lret
fisttpll
int
pop
aas
pop
mov
pusha
pop
arpl
cmpsl
pushf
xor
add
insb
pop
adc
mov
mov
imul
sti
sbb
icebp
aas
test
aaa
pop
mov
pop
stos
inc
hlt
adc
popa
jbe
xor
lret
mov
push
daa
push
faddp
test
push
mov
fxch
stc
jg
negb
lods
xor
push
rcrb
mov
dec
pop
imul
add
mov
aas
mov
push
inc
lret
inc
loopne
pop
lret
or
inc
jl
mov
cmp
add
inc
mov
jb
aaa
pop
add
sub
loopne
cmpsl
daa
xchg
pop
test
mov
cmp
mov
xor
or
push
pop
adcl
and
jmp
sub
pop
mov
mov
movsl
pop
cmp
add
and
test
imul
lock
out
outsl
icebp
fwait
idivb
int
ljmp
jmp
and
pushf
fwait
addr16
popa
push
ljmp
jo
divl
int3
sbb
data16
pop
movsl
repz
inc
andl
adc
xchg
jo
push
rorb
movsb
out
test
add
pop
mov
dec
inc
movsl
xchg
int
ret
ficompl
iret
pop
mov
jae
fcmovne
incl
rclb
push
pop
cmp
lahf
out
fistl
push
xor
insb
scas
scas
or
mov
fst
ljmp
add
mov
insb
pop
mov
js
pop
shrl
fdivr
xchg
popa
xchg
sbb
mov
adc
push
repnz
mov
mov
mov
add
xchg
rcrl
push
inc
popa
out
hlt
or
mov
mov
fcompl
pushf
lahf
jecxz
sbb
inc
push
inc
or
and
xor
mov
mov
dec
dec
jae
fcmovbe
xchg
jge
xchg
add
fmull
repnz
testb
cli
or
sahf
dec
mov
xchg
adc
cmp
stc
js
or
mov
jmp
outsb
imul
xchg
cmc
shll
add
or
aas
sbb
sbb
cmp
jne
or
in
mov
rclb
lock
xor
shlb
xchg
mov
and
mov
cmp
int3
xor
gs
scas
popa
stos
lret
pop
and
cltd
loop
lahf
fmuls
aad
jbe
and
mov
add
mov
repnz
xchg
mov
add
inc
nop
adc
lds
in
adc
push
mov
sub
ja
lret
push
mov
mov
stc
sub
jecxz
fwait
mov
dec
adc
sub
jecxz
int
repz
or
mov
shr
fiaddl
cmp
dec
out
mov
out
xchg
fcoms
pop
hlt
jae
sub
inc
cmp
repz
mov
push
or
sbb
in
adc
xchg
mov
push
xor
lret
leave
push
mov
jmp
lods
scas
popa
add
cli
sub
and
mov
or
leave
and
in
jns
popf
push
adc
mov
mov
inc
pop
aas
lds
mov
pusha
popa
pushf
dec
mov
cmp
xchg
imul
int3
test
sub
or
jmp
jecxz
lahf
jmp
mov
in
push
or
imul
xor
push
ret
bound
sbb
lods
adc
shrl
fldl
pop
dec
sbb
mov
sbb
or
jl
mov
notl
lret
jge
je
add
add
imul
or
cmp
mov
sbb
outsb
test
test
insb
rclb
fisttpll
push
cld
inc
pop
xor
fisttpll
adc
xchg
adc
bound
movsb
ffreep
sub
xor
xchg
mov
sti
xor
jae
and
popl
int3
pushf
xor
push
out
popf
mov
stos
mov
in
push
add
ror
popa
jbe
test
push
js
cmp
popf
mov
push
xlat
mov
arpl
lcall
xchg
fwait
cltd
sarl
rcl
or
or
lock
notl
in
add
xlat
popa
add
sbb
adc
sahf
inc
xchg
xchg
sbb
sarb
cltd
movsb
jp
aad
xchg
inc
out
call
popf
xor
lcall
pop
aas
ror
lods
aaa
shlb
mov
mov
push
mov
mov
fnsave
fidivrs
pop
dec
xchg
mov
mov
adc
mov
sub
dec
jecxz
in
out
fsubp
call
es
pusha
xor
xchg
and
mov
mov
lds
aam
gs
daa
faddl
mov
add
and
inc
add
scas
jno
push
xor
sbb
test
dec
std
lahf
adc
call
push
iret
out
mov
mov
gs
add
bound
mov
inc
jecxz
mov
dec
cli
sbb
cmp
jae
stos
icebp
jnp
lret
jo
inc
jg
add
or
pop
loop
mov
fnstsw
push
popa
inc
xor
test
jecxz
jle
test
jnp
jmp
and
add
fimuls
loop
jae
inc
jmp
lods
cs
mov
mov
orb
inc
mov
sub
aad
je
call
adc
lock
ljmp
bnd
push
pop
sbb
popf
scas
rorb
cltd
cvtdq2ps
xchg
mov
outsl
mov
loopne
testl
mov
adc
mov
pop
jno
jp,pn
xor
icebp
adc
fnstenv
jb
js
test
arpl
std
jae
js
add
in
pop
pop
sbb
cli
pushf
idivl
xchg
pop
repnz
imull
iret
std
les
into
scas
mov
rolb
adc
dec
xchg
jo
lea
add
jbe
adc
jbe
sbb
lods
popa
jno
jo
add
jmp
enter
adc
test
add
sub
mov
sti
je
fs
cmp
mov
out
movaps
pop
add
ret
push
popf
daa
xchg
ja
addr16
dec
add
test
mov
jb
mov
cmp
ret
mov
in
xor
xor
jecxz
lea
insl
jmp
fs
adc
insl
fldz
xchg
shlb
mov
das
test
lret
adc
sub
movsb
sbb
std
sti
nop
sub
cwtl
sti
sub
and
pop
lods
dec
cmpl
test
inc
fmul
rclb
jno
xor
push
into
push
lods
jns
rol
push
jmp
in
dec
push
jge
scas
sbb
adc
jo
jnp
adc
stc
or
ret
out
addr16
cmp
push
cli
and
xor
fcmovb
inc
cmpsl
subl
in
cmc
inc
mov
out
lds
xor
mov
and
in
mov
inc
inc
shl
inc
push
jg
insb
mov
jle
in
pop
jno
addr16
jne
cmp
mov
aas
adc
popa
mov
jo
push
aad
mov
add
icebp
xor
pop
out
outsb
push
gs
js
cli
outsl
mov
cmp
loop
mov
das
mov
fwait
movsb
dec
jmp
mov
add
enter
test
outsb
insl
and
inc
push
out
mov
mov
mov
mov
mov
push
cmpsb
add
ffreep
inc
or
sti
aas
inc
in
lahf
xchg
xchg
add
cmp
pop
sarb
call
fnstsw
mov
in
mov
mov
inc
push
mov
out
fincstp
pop
fstl
and
ss
cmp
sbb
push
pop
enter
pop
movsb
roll
mov
fsubl
pop
or
shlb
mov
lods
sahf
popf
mov
jae
repnz
xor
mov
test
jl
push
insb
lea
movsl
movsb
adc
daa
adc
cmp
je
add
cmp
jo
mov
gs
mov
ljmp
out
test
dec
add
adc
loope
in
les
push
cmc
mov
iret
cmp
add
xor
leave
lret
jle
mov
outsb
shrl
mov
dec
mov
fsubr
iret
xor
mov
xchg
cmp
or
mov
sbb
dec
jo
add
sub
xchg
hlt
jno
jle
aas
and
out
cmp
cmc
add
mov
sub
dec
mov
rcr
imul
pop
rol
push
in
shll
lods
pusha
sbb
or
orb
lret
add
mov
xor
dec
xor
cmc
mov
push
cltd
inc
or
ljmp
punpckhwd
xchg
and
in
stc
push
push
mov
mov
imul
aas
or
and
cwtl
cmp
sub
add
pop
daa
les
mov
pop
jbe
inc
ss
leave
mov
dec
pop
sub
rorb
jecxz
xchg
into
mov
and
lea
dec
add
cmc
leave
es
neg
cmp
push
or
outsb
jge
mov
push
cli
divb
lret
cmp
rcrl
js
mov
cmp
test
xlat
jne
adc
aaa
subl
push
sbb
int3
inc
scas
pop
jns
adc
or
mov
push
lret
addr16
sahf
fistl
jecxz
imul
fisubl
or
add
cmp
fldl2e
dec
mov
and
sbb
nop
jl
push
pop
test
add
pop
outsb
push
push
dec
mov
xlat
andb
push
cmpsb
xor
mov
cmpsb
inc
ss
ret
fcompl
mov
gs
stos
dec
ljmp
push
cs
xchg
cmpsl
cld
bound
adc
stos
push
in
cmp
or
out
lods
outsl
popa
scas
xchg
ret
cmpsb
cwtl
loope
into
orb
mov
sbb
mov
popa
mov
xor
xor
test
push
mov
aas
sub
inc
icebp
stos
je
sub
sar
xchg
xorb
popf
int3
jg
xor
pop
jle
sub
sahf
xor
insb
pop
mov
push
js
jge
dec
fldcw
iret
cltd
sub
xchg
mov
or
out
iret
rorl
cmpb
sbb
and
inc
in
insl
jmp
pop
cs
ja
into
andl
mov
bound
cs
test
cmc
push
es
mov
test
pop
cmc
sub
ret
scas
ss
push
pop
mov
inc
cmp
xchg
cmp
xor
sbb
outsl
push
inc
and
outsb
ja
sub
inc
sub
xor
loope
pop
gs
sbb
mov
push
in
push
inc
scas
lods
rcrb
dec
cmc
andl
loop
mov
inc
mov
sub
jne,pt
sub
scas
out
mov
lds
fcompl
clc
pop
and
ret
and
fs
rcrl
jg
or
enter
cld
in
push
shlb
mov
sub
sub
ss
jecxz
jb
scas
in
push
mov
add
sub
cmp
cltd
and
lret
enter
inc
xor
pusha
nop
dec
cmc
sub
int
xchg
xchg
sbb
das
je
or
adc
fdiv
rolb
into
mov
and
xchg
jmp
sbb
and
push
xor
xor
imul
sbb
stos
insb
clc
inc
push
dec
xor
icebp
imul
imul
mov
push
outsb
loope
mov
call
mov
mov
cmpsb
cltd
push
dec
testl
jmp
fnstenv
ud2
movsb
dec
cwtl
fwait
push
jmp
outsl
cld
adc
mov
rclb
cmp
rcll
xlat
lock
and
pop
popf
lea
mov
push
cmpsb
int
inc
pusha
add
xchg
or
sub
lret
xchg
ljmp
stc
fldl
add
mov
dec
dec
jb
xchg
mov
add
xor
icebp
cmp
xchg
push
push
jne
cmpsb
imul
add
sbb
inc
std
mov
mov
add
rorb
xor
lret
or
scas
dec
inc
popf
ljmp
aaa
or
das
sub
mov
cs
sbb
les
repz
jnp
es
aaa
ljmp
imul
outsb
mov
and
push
into
shlb
or
pushf
mov
push
loopne
out
int
jnp
add
xchg
xor
adc
ret
adcb
push
in
xor
aam
pusha
out
pop
fadd
in
and
or
clc
and
outsl
stc
movsl
icebp
fs
mov
in
mov
fwait
dec
jo
data16
or
xor
std
std
out
pop
cli
je
dec
popa
icebp
xor
xor
iret
sub
inc
fimull
jb
inc
jnp
jbe
add
lret
fists
xchg
jl
inc
stc
lahf
pop
cmp
cli
jno
test
arpl
xchg
cld
rolb
sahf
mov
jmp
jbe
lods
cli
loope
mov
xor
xor
aam
cmp
cmpl
pushf
pop
pop
dec
cmp
leave
out
mov
sbb
or
not
aad
orl
les
pop
pusha
addr16
loope
and
test
into
or
aam
or
mov
data16
dec
dec
add
mov
subl
jbe
adc
repnz
std
leave
xchg
pop
push
jnp
add
fistpll
orl
mov
mov
push
inc
xor
xor
sbb
jno
and
cmp
aam
sbb
xchg
and
dec
mov
rclb
in
jne
stos
and
frstpm(287
mov
das
lahf
adc
leave
push
jnp
stos
and
mov
lods
xor
push
in
dec
push
nop
lcall
gs
outsb
cs
jmp
xlat
sbb
lods
adc
fisubrs
adc
pop
inc
imul
icebp
jbe
mov
testl
inc
rcll
cmc
xchg
rolb
mov
adc
push
inc
adc
mov
fdivrl
iret
dec
cmp
push
negb
mov
push
cmpsb
ret
ljmp
movsb
xor
adc
pop
out
repz
es
data16
fisttpll
inc
iret
in
test
pushf
push
rcrl
cmc
shrl
add
sub
frstor
fnsave
jae
mov
lret
cld
or
ss
es
ljmp
out
vpaddd
cmpps
mov
mov
jne
ss
lret
pop
xor
and
int
rcrl
ficoms
pop
stos
sub
sarl
in
shll
cmp
movsb
sbb
mov
sub
dec
into
lock
scas
ffreep
push
insl
gs
push
aaa
test
out
push
cmp
cmpsb
push
insb
ficompl
dec
dec
pop
add
cmp
in
ret
insb
xor
or
test
out
ret
cmpsl
outsb
mov
cwtl
cmp
fldenv
iret
es
pop
pop
orps
and
pop
jo
mov
out
push
sbb
in
pushf
stos
test
daa
cmc
mov
push
rcll
pop
call
cmpsb
int3
adc
xchg
out
pop
outsl
inc
daa
daa
outsl
jle
pop
mov
adc
icebp
cmp
scas
adc
div
test
mov
repz
shr
push
push
pop
hlt
xorl
push
std
pop
loopne
out
scas
jecxz
filds
es
jg
push
cmp
push
inc
add
arpl
sub
ljmp
cli
lret
cmp
jp
out
adc
add
and
jl
and
and
in
jmp
enter
int
push
insb
aaa
push
lret
xchg
and
sbb
lods
sbb
addr16
rolb
ss
les
fistl
push
movsb
mov
lds
fs
push
mov
jnp
test
pop
mov
aad
fadd
xor
dec
add
in
add
inc
pop
ss
mov
int3
mov
and
inc
pop
cmpl
sub
fldenv
icebp
dec
ror
xorl
gs
xchg
xchg
xor
mov
push
mov
add
mov
addr16
xchg
lret
adc
cltd
mov
push
or
testl
jb
inc
xor
jg
pusha
cs
adcl
inc
push
mov
pop
pop
stos
aam
xor
adc
cmp
mov
xchg
call
mov
inc
sarb
aam
xchg
rcl
xor
sub
jnp
sbb
mov
mov
into
stos
cmp
or
mov
pop
add
mov
addr16
cmpsb
fwait
andb
mov
rcrb
cmp
push
pop
jne
sbb
test
enter
call
xchg
fucomi
mov
adc
cmp
lock
test
mov
adc
mov
and
adc
enter
scas
aas
adc
push
jl
mov
mov
lcall
mov
test
cmpsb
ret
mov
out
pop
cli
mov
aaa
test
cwtl
leave
xchg
andl
mov
xchg
lahf
pop
daa
lret
push
rorb
pop
pop
push
aam
push
mov
out
sbb
mov
lret
or
mov
movsb
ret
cmp
pushf
xchg
test
mov
mov
es
sbb
mov
icebp
sahf
add
addr16
dec
mov
xchg
insl
xchg
inc
cmp
imul
out
cmp
movsb
test
and
mov
sub
cmpl
cwtl
lret
pop
mov
fcomps
mov
sbb
jae
sti
sub
in
jle
mov
adc
jnp
mov
pop
imul
stos
inc
lock
xchg
push
outsb
xchg
hlt
enter
jae
shlb
clc
rcrl
cmp
loope
sbb
jecxz
sub
push
and
aas
sbb
xor
inc
fcoms
xchg
in
xlat
in
cmp
pop
loop
xlat
loope
sbb
or
or
or
sub
pop
jmp
imul
aad
rolb
cmp
jno
cld
mov
push
roll
sub
ret
push
mov
and
sbb
push
gs
cltd
mov
cmp
out
test
add
sub
icebp
mov
insl
movsb
daa
push
in
xor
inc
in
jp
test
sub
pop
test
and
lcall
adc
fs
out
sahf
test
jb
fimuls
aaa
dec
in
pop
and
push
mov
add
jl,pn
out
fwait
jae
xchg
and
cltd
xchg
xlat
and
arpl
loop
add
or
sti
fs
mov
lea
push
repz
dec
aas
adc
mov
gs
mov
addr16
lret
scas
xor
aaa
js
mov
xchg
out
mov
fimuls
mov
mov
iret
es
popa
push
jb
xchg
push
xor
popa
andl
cmp
loope
cmc
adc
aad
jg
jnp
sub
sub
or
cmp
mov
in
sub
pop
add
jmp
das
adc
test
cwtl
mov
jbe
xchg
jbe
xchg
mov
sbb
and
pop
pop
jb
mov
or
and
faddl
adc
mov
sbb
sbb
push
push
or
xchg
aam
jecxz
orl
mov
cltd
mov
ss
jl
stos
aam
out
and
dec
pop
xchg
sub
aaa
std
jge
jle
std
ljmp
mov
sbb
sti
movsl
or
aam
rclb
jp
add
pusha
lock
jmp
fcmovbe
jbe
cwtl
nop
add
jecxz
mov
xchg
and
jnp
outsl
xchg
add
aaa
sbb
and
and
iret
aaa
jnp
ss
loop
jg
in
mov
fwait
mov
lret
adc
imulb
and
sbb
adc
sbb
stos
xor
jecxz
mov
inc
and
jp
aad
jl
xor
sub
sbb
sbb
adcb
je
inc
stos
je
sub
jns
add
rolb
dec
fimuls
call
mov
iret
jne
ficoms
cmp
sub
jnp
leave
and
aaa
inc
movsb
push
jns
xor
je
out
stc
out
inc
dec
pop
hlt
xlat
jne
lds
aam
lcall
or
out
cmp
inc
cmc
mov
sahf
insl
je
jno
sub
inc
mov
sarb
in
in
mov
les
mov
lcall
mov
out
xchg
call
xor
cmp
decl
and
ds
fsubs
jl
fmull
test
rorb
sti
out
movsl
sbb
mov
dec
xchg
ds
dec
mov
roll
add
scas
push
sbb
mov
mov
movsl
pop
imul
jecxz
xchg
xchg
sahf
test
pop
mov
js
ret
lret
add
cli
mov
stos
sahf
movsb
and
mov
push
mov
inc
cmp
movsb
sti
and
sbb
and
in
or
scas
cs
arpl
ljmp
outsb
fidivrl
adc
sub
mov
das
mov
cmpsl
fadds
subl
sarb
sbb
lea
jae
int3
xor
inc
jg
sub
xchg
pusha
pop
sarb
mov
mov
loopne
add
test
and
sbb
jo
cli
mov
jne
stc
add
sub
lods
ja
add
and
push
dec
in
popa
cmp
out
pop
repnz
lods
xor
push
push
jmp
fisttpll
fsts
inc
out
push
adc
or
and
mov
adc
add
xchg
pop
jne
aam
aam
mov
sub
mov
test
add
addb
jae
data16
mov
push
fildl
xchg
ret
testl
loop
loopne
in
lret
outsb
sbb
incb
cmc
nop
arpl
shll
subb
std
inc
jg
cld
loop
je
das
cmpsl
fstpl
jecxz
cmpb
pusha
loop
es
sbb
test
stos
int3
pop
jecxz
or
das
mov
sbb
adc
jmpw
lret
dec
xchg
leave
dec
fstpl
mov
xchg
jno
or
rol
jnp
or
xor
sbb
pusha
push
xchg
into
sub
dec
daa
xchg
xchg
mov
jmp
jb
add
dec
insl
xchg
mov
loope
push
jecxz
push
outsl
jg
lea
aaa
mov
cmp
mov
sbb
lcall
xchg
mov
orl
ret
jecxz
mov
jne
pop
xchg
mov
ds
fwait
nop
mov
icebp
iret
pop
sti
sub
movsl
stos
xchg
mov
outsb
iret
rcrl
cwtl
popf
dec
movsl
aaa
mov
or
adc
sub
mov
jnp
or
jg
sbb
mov
fimuls
dec
test
xor
jae
lret
xchg
mov
shll
or
xchg
pusha
movb
add
mov
shll
jae
imul
push
dec
or
mov
hlt
mulb
fwait
scas
xchg
je
ret
jbe
jnp
jb
pop
pop
fcmove
dec
pop
cli
stos
testb
mov
stos
mov
mov
lcall
cltd
adc
scas
mov
mov
lea
pop
inc
shll
push
or
jecxz
lods
test
xor
mov
pop
es
pop
xchg
jnp
push
sbb
xor
or
and
mov
jno
repz
pop
adc
insb
cmc
mov
xor
mov
pop
sbb
test
cmp
jg
mov
scas
push
lcall
push
lock
mov
jns
out
mov
test
jl
dec
ret
push
divl
mov
xor
lock
cld
adc
out
int3
rcrl
aaa
jmp
push
and
mov
add
arpl
call
pop
push
cmp
int
adc
scas
jno,pn
cli
push
push
xchg
js
loop
jns
sbb
pushl
insl
adc
xchg
aas
pop
jp
xor
imul
push
dec
inc
xor
push
scas
inc
scas
call
repnz
mov
xor
or
and
mov
mov
popf
andl
sbb
fcmovnbe
jae
pop
adc
mov
jo
xchg
add
xchg
and
xchg
out
xrelease
sub
add
lock
add
and
into
push
stos
ja
aad
lods
cli
mov
insb
xor
sti
out
and
mov
sbb
xor
inc
mov
add
rcrl
xchg
adc
push
and
inc
inc
repz
mov
add
jo
stos
dec
sub
daa
adc
push
or
inc
cmp
sbbl
xor
pop
ljmp
sbb
add
and
xchg
or
cs
mov
sti
push
clc
jl
mov
fisubl
pop
and
jmp
adc
jo
shrl
add
pop
pushf
cld
xchg
fldt
adc
jl
jb
imul
ds
movsl
repnz
xchg
pop
imul
pop
ja
xchg
xorb
out
jae
cwtl
or
mov
rcrb
test
push
mov
test
or
xchg
popa
pusha
sbb
insb
mov
xchg
lret
popa
jle
in
mov
adc
std
orb
xchg
js
dec
aad
repnz
sbb
cwtl
imul
jns
cmp
inc
dec
mov
dec
jbe
jae
sti
sahf
fwait
lods
xchg
or
outsl
test
sbb
xor
into
inc
dec
xchg
mov
xor
clc
or
cmp
xchg
adc
pop
int
movsb
dec
add
add
or
mov
sub
movsl
ret
lret
mov
test
stos
das
sti
test
cmc
xchg
repz
mov
loop
fs
fidivrs
mov
pusha
or
inc
jb
mov
inc
pop
in
or
insl
call
lret
push
push
rorl
les
or
test
sbb
jnp
jnp
pop
and
mov
out
add
lods
adc
std
sbb
or
and
dec
js
mov
pushf
pop
adc
xchg
mov
and
cmp
inc
movsb
inc
mov
rclb
flds
add
push
frstor
pusha
xor
shrb
mov
fsub
cmpl
imul
sti
ficomps
mov
add
shlb
push
sbb
sti
incb
mov
push
sub
mov
stc
mov
movsl
imul
imul
adc
xor
aad
in
cmp
into
pop
fisttpll
mov
xchg
das
leave
movsb
jl
dec
cmp
int
mov
gs
push
ss
fiadds
cmc
push
xchg
inc
fidivs
stos
jmp
fstpt
lds
cli
ret
jle
mov
scas
push
aad
push
inc
cmpb
nop
xorl
mov
mov
inc
shrl
xor
mov
jl
push
pusha
into
dec
pushf
lds
push
mov
ljmp
push
mov
shlb
mov
cmp
testl
inc
fxch
jo
xchg
loop
adc
int
test
outsl
sub
shlb
dec
jecxz
fsub
jno
mov
cmp
inc
pop
cs
pop
push
movl
in
jg
fs
and
rcrl
add
jne
mov
or
outsl
lcall
mov
xor
push
adc
push
jns
mov
popf
shlb
jge
fldenv
dec
sub
adc
xchg
lret
jbe
jno
rcll
dec
sub
rcll
jecxz
adc
push
jne
ja
mov
cwtl
lock
and
or
mov
cmp
cmpl
cmp
dec
push
jne
xchg
pop
add
ret
xchg
sbb
ds
nop
iret
push
mov
jecxz
scas
and
fcmovbe
jne
push
sbb
xor
adc
lahf
insl
loopne
les
cmc
sbb
call
inc
stos
lahf
and
fldcw
push
dec
bound
aaa
lcall
fistpll
sahf
pushf
push
adc
mov
in
sub
sti
sbb
jl
jns
aam
jbe
sbb
out
cmp
loope
and
ret
clc
pop
scas
and
lret
inc
xor
add
sub
pop
cmp
xchg
cltd
pop
jle
test
push
mov
push
pusha
jge
out
sub
xchg
push
sub
test
sbb
imul
cltd
inc
mov
cwtl
mov
in
js
test
mov
and
jge
adc
mov
xor
inc
sbb
jnp
lds
inc
xchg
sub
dec
loope
add
dec
inc
mov
cmp
add
dec
mov
ss
pop
fidivs
in
sti
or
stc
icebp
out
mov
sub
jp
cs
int
mov
sub
mov
data16
in
leave
or
mov
cld
aas
sbb
sti
in
hlt
xor
popf
pop
outsl
or
sbb
mov
fsubs
mov
or
mov
xchg
mov
adc
push
adc
pop
jb
addl
mov
sahf
gs
das
push
jle
xchg
insb
fcmovne
dec
sbb
adc
lods
std
in
test
insb
push
test
iret
loope
inc
hlt
arpl
adc
inc
jl
andb
inc
inc
dec
push
movsl
lret
insl
movsb
xchg
pop
mov
mov
xchg
fucomp
or
pop
sbb
sbb
push
verw
pop
or
adc
fsubs
testl
in
insl
xor
icebp
mov
fs
adc
test
addr16
mov
jo
rorl
add
pop
fsubp
sub
xor
xchg
int
add
jg
add
xor
xor
popa
pop
push
fistpll
sbbb
pop
leave
mov
add
inc
or
out
and
es
rorb
pop
ds
stc
popa
aad
js
jae
int
out
pop
pop
push
cmp
push
rcrb
into
and
xor
xchg
imul
pop
adcb
adc
outsl
enter
fsubs
mov
mov
shll
add
sahf
das
xchg
inc
pop
inc
in
stos
sub
lahf
in
xchg
lods
inc
addr16
inc
mov
loopne
push
add
bound
incl
pusha
mov
mov
lds
add
imulb
std
cmp
cmp
outsl
push
push
dec
add
sbbl
mov
gs
fmuls
jne
notb
cld
cwtl
cmp
mov
push
jp
arpl
clc
mov
test
pop
sub
xor
cmc
xchg
and
fistps
test
push
insb
mov
or
push
lds
xor
mov
pop
jo
xlat
aaa
sbb
push
imul
ret
std
jp
sarl
xchg
popa
in
sub
cmpsb
js
mov
shlb
out
lds
shrl
dec
cli
fs
pop
popa
in
push
movsb
jp
pusha
add
mov
pop
cmpsb
jne
jmp
fdivrp
popa
rolb
adc
mov
xchg
loope
xchg
push
cmp
in
or
decl
insb
push
in
stos
or
imul
and
subps
mov
or
add
jns
cmp
dec
mov
xor
fsubs
push
mov
adc
xchg
ss
mov
inc
mov
lcall
xchg
dec
arpl
imul
je
jbe
cmpsl
jnp
sub
scas
mov
or
or
lods
or
adc
push
cli
iret
add
outsl
xor
add
sahf
jge
xchg
lods
lds
je
mov
adcl
inc
test
movsb
cmp
adc
dec
adc
je
ret
cmp
xchg
fldenv
sbb
sarb
jecxz
xor
push
adc
xchg
ret
adc
addb
push
xchg
cmpsl
divb
xchg
andl
add
push
adc
sub
les
mov
call
cltd
loope
pop
sbb
dec
cmp
lods
inc
test
push
jge
rcl
jns
pop
lahf
cld
adc
xor
mov
pop
or
stos
sbb
sbb
mov
sub
xor
gs
adc
or
push
jbe
mov
addr16
iret
mov
jg
clc
mov
or
xor
and
scas
icebp
insl
sbb
or
outsl
popa
lods
mov
inc
mov
pop
cmpsl
rcr
out
dec
gs
bound
lods
sub
pop
mov
pop
inc
mov
fdivl
out
scas
xchg
sbb
or
cmp
or
adc
push
loop
flds
lahf
sbb
fmuls
out
xor
stc
dec
jmp
mull
push
clc
sarb
xor
xchg
dec
pop
adc
bound
in
adc
inc
jmp
cltd
sbb
inc
sbb
iret
adc
cmp
cld
mov
cs
push
xor
fmul
sahf
mov
mov
jge
mov
dec
sbb
xchg
mov
test
xchg
add
push
cmp
dec
mov
mov
stos
mov
pop
es
mov
inc
aam
xor
adc
mov
xchg
repnz
shl
testb
pop
mov
push
or
cmp
mov
enter
lods
in
aad
mov
movsb
inc
fidivs
xor
cmp
js
insl
daa
rolb
adc
scas
sti
out
aas
or
sub
xor
adc
dec
test
lods
inc
loopne
pushf
jl
adc
dec
and
outsl
int
dec
push
loopne
sti
mov
xor
out
ss
dec
mov
cmp
push
xchg
jb
mov
aam
lods
xchg
mov
xor
push
xor
pushf
cmpsl
jle
cmp
out
gs
inc
daa
adc
mov
adc
gs
test
in
mov
pusha
mov
adc
fsubl
add
pop
xor
mov
xchg
mov
xchg
fs
lret
sub
mov
outsl
sub
mov
repnz
cli
aam
jl
pop
dec
or
add
and
cmp
push
repnz
mov
inc
cli
xor
adc
cmp
stc
xchg
testb
shll
test
dec
ret
mov
divb
adc
add
fsubs
cmp
sarl
mov
out
std
and
mov
bound
aam
jne
popf
mov
pop
cmp
dec
rol
push
pusha
imul
pop
stos
and
xchg
test
andb
test
ss
inc
fldenv
stos
in
scas
or
getsec
pop
add
mov
adc
adc
jg
ja
ret
sub
outsb
je,pn
pusha
bound
insb
dec
push
sbb
or
leave
mov
popa
adc
xorb
push
repz
sub
enter
push
dec
jg
xlat
cmp
adc
mov
cltd
je
dec
mov
fcoms
xlat
imul
adc
ret
jns
rorb
fs
sbb
or
xor
cmp
subl
pusha
xor
xor
data16
aaa
inc
xchg
cmpsl
btr
push
imul
or
push
inc
movsb
testb
push
outsl
jb
cmc
and
sti
repz
jno
std
outsl
dec
or
mov
lahf
jge
fsts
aad
andl
or
sbb
push
lcall
sarl
sub
js
push
ss
movsb
dec
pop
jmp
cld
inc
and
jle
xchg
inc
rorb
ljmp
hlt
out
faddp
xchg
fwait
adc
or
stos
cld
jo
mov
jno
inc
les
cmc
lret
mov
insl
and
cs
in
sub
jle
add
add
inc
rolb
icebp
adc
adc
out
stos
sbb
sub
notl
inc
stos
es
xchg
inc
sub
cwtl
push
xchg
jge
adc
lods
fwait
repz
xchg
repz
fucom
fbstp
out
cwtl
xchg
jmp
push
fbld
dec
ficoms
es
out
xchg
fildl
pop
xchg
scas
outsb
loopne
jge
scas
das
in
inc
lock
pop
les
push
pop
push
xchg
sbb
xchg
inc
fcoml
fmull
xchg
mov
cmc
addl
sbb
jno
iret
cmp
pop
jge
or
mov
jge
in
and
inc
mov
mov
rclb
or
dec
cli
rcrb
je
lcall
mov
mov
data16
mov
lret
clc
adc
xor
push
xor
das
jne
jbe
adc
sub
ss
fidivl
mov
cmp
adc
popf
push
in
dec
ljmp
xor
scas
mov
cmp
pop
sbb
push
add
push
and
das
lahf
sub
adc
insl
lods
stc
inc
insl
inc
call
sbbb
leave
inc
pop
push
mov
pop
out
hlt
adc
xlat
jbe
cld
xchg
test
imul
outsl
cmpsl
add
push
dec
mov
aam
movl
pop
mov
mov
mov
fiaddl
sbbl
xchg
push
into
mov
cwtl
xchg
xchg
mov
jp
or
mov
orb
insb
mov
into
lret
adc
pop
push
pop
cmp
mov
mov
or
jle
aad
rcll
cmp
gs
mov
mov
fcmovbe
mov
insl
sbbb
ret
add
push
dec
pop
jb
cmp
sub
outsl
pop
or
loopne
sbb
jle
or
jmp
sub
negb
mov
orb
imull
fstpt
mov
shrb
pusha
les
mov
ret
fsubrs
xor
push
int3
mov
inc
sub
call
cmp
add
push
pop
sub
push
add
push
incl
cwtl
loop
jle
nop
mov
in
pop
inc
test
xor
push
push
jbe
test
cli
mov
fucomip
aas
pop
scas
lcall
imul
and
adc
pop
pop
sub
int3
xchg
xor
mov
add
stos
rep
mov
pop
jno
sub
or
pop
cmp
ret
push
insb
sbb
push
xchg
pop
sbb
mov
sbb
pop
js
in
test
add
sub
aas
insl
mov
ja
inc
jb
sbb
std
pushf
fstp
pop
outsl
xchg
sub
adc
cmp
push
out
and
lods
sbb
pop
enter
pop
xchg
mov
sti
js
or
repz
sbb
sub
xlat
mov
xchg
into
jge
rol
scas
cmp
aam
lahf
and
cmp
subl
adc
lds
stos
cld
lcall
mov
mov
xor
fsubrl
fwait
test
xor
xor
lea
cmpsl
cmp
fildll
jo
dec
orb
or
popl
mov
das
filds
sub
push
test
les
xchg
sub
daa
add
aam
mov
sbb
sbb
sub
add
inc
shll
dec
dec
jmp
inc
ret
adc
sbb
int
push
mov
mov
mov
icebp
cwtl
mov
das
xchg
movsl
or
push
orl
xlat
xchg
push
ror
out
fiadds
inc
out
jmp
shll
inc
sub
mov
push
adc
or
int3
jle
cmpsl
mov
inc
cmp
pop
stc
arpl
mov
enter
adc
cmpl
into
rorb
in
mov
sub
sub
pop
xor
xchg
sbb
xor
cmp
mov
cld
lea
or
out
mov
dec
dec
repz
pushf
shlb
enter
jecxz
jbe
push
arpl
and
push
out
jp
cmp
jg
stos
jno
mov
arpl
cmc
scas
mov
stc
outsl
pop
inc
sub
or
mov
ret
fbld
or
subl
or
pop
xor
xchg
sub
dec
out
mov
mov
test
repz
pop
or
add
addl
leave
in
xchg
push
in
xchg
xor
jecxz
andl
inc
push
mov
inc
cld
and
popa
ficoml
repnz
shll
shlb
int
jnp
jmp
lods
out
bound
xchg
aad
and
cltd
ds
mov
xchg
add
cmp
adc
dec
cs
insb
xlat
inc
cli
push
imul
fcompl
inc
dec
in
aad
push
jbe
add
jmp
aad
mov
aad
sbb
outsb
sbb
std
icebp
jp
xor
lcall
mov
mul
call
out
and
gs
negb
fisubrl
sbb
andl
mov
std
mov
ss
lahf
sbb
movsl
fcoml
xor
test
pop
stos
pop
stos
sbb
inc
lods
and
rcr
adc
imul
and
jp
insb
in
cmpl
jb
cmc
sahf
ret
out
push
mov
cltd
pop
jae
xchg
jecxz
inc
pop
cmc
testb
scas
pop
push
sub
adc
stos
xorl
mov
repz
popf
push
mov
incb
add
test
test
pushf
sub
jns
rol
pop
arpl
sbb
aas
aad
cmp
mov
fnstenv
fs
or
dec
call
cmp
call
fisubrl
xor
or
cpuid
mov
and
xor
jle
loop
mov
lock
lahf
lahf
js
add
jg
cmpsl
jmp
mov
rol
inc
mov
sub
or
jne
testb
adc
cmc
in
fisubrl
sub
pop
inc
jns
pushf
sbbb
int
and
or
test
es
push
inc
dec
adc
and
jns
pop
divl
dec
imul
sbb
and
mov
jmp
mov
stos
movsb
sub
pop
ret
xchg
xchg
cld
mov
lcall
movsb
cmpsl
aad
add
xchg
push
sub
mov
arpl
daa
arpl
mov
xchg
inc
xor
jge
nop
enter
frstor
enter
fdivs
lods
push
or
push
mov
bound
cld
popf
clc
jne
mov
in
inc
xchg
fldln2
ret
pop
pop
pop
mov
aas
ret
iret
xor
lods
lcall
int
nop
jbe
add
ds
inc
jmp
adc
test
push
out
and
mov
inc
push
cld
pop
sub
lods
movl
cmp
loopne
leave
outsl
hlt
jno
sub
ds
jg
scas
jns
sbb
sub
shl
jecxz
mov
scas
mov
test
iret
cmp
push
push
or
mov
mov
xchg
adc
mov
cmp
lods
out
xor
mulb
sub
cld
insl
jg
add
sub
xchg
pop
jg
xchg
mov
adc
jbe
out
leave
frstor
iret
in
testl
dec
mov
lds
lret
sbb
xor
shlb
and
mov
cwtl
xor
imul
xor
push
jl
sub
cmp
insb
cmpsb
jno
jnp
xor
inc
into
mov
imul
sub
pminsw
mov
jns
stos
sub
fistpll
insb
arpl
imul
mov
outsl
and
adcl
add
or
pop
push
xchg
stos
sub
sub
push
sbb
sbb
repz
cmp
mov
or
ret
add
sti
jmp
jge
call
pop
sar
stc
loope
fisttpl
ret
std
fldenv
adc
cwtl
cmpsb
xchg
test
lds
jbe
mov
mov
shll
imul
jge
inc
pop
roll
dec
scas
cwtl
mov
sub
and
push
adc
imul
outsl
cld
or
push
sahf
lods
cmp
gs
dec
and
pop
jecxz
mov
fstpt
push
mov
jo
ficomps
mov
andl
sbb
insl
inc
leave
add
adc
inc
sub
insl
repnz
ds
out
add
sarb
popa
adc
mov
mov
push
lds
push
fldl
push
add
je
jne
aam
stos
repnz
lods
mov
ficompl
inc
jl
ja
ret
into
test
lahf
sbb
mov
sbb
or
test
repnz
fs
sti
jnp
add
fcompl
fsubl
xor
sub
dec
lcall
shrl
lock
add
int3
sbbb
sarb
out
movsb
leave
mov
or
push
or
subb
in
xor
inc
mov
mov
int3
mov
mov
mov
push
jp
leave
jle
outsb
enter
sahf
ds
sbb
imul
dec
adc
ficoms
inc
push
adc
lret
into
xchg
inc
rol
mov
gs
or
sub
dec
mov
mov
idivb
aam
pushf
ljmp
loopne
ret
adc
ljmp
testb
push
out
pop
cmp
mov
sti
sub
mov
out
inc
jmp
jge
pop
sbb
xchg
jl
or
mov
call
dec
sub
loope
stos
sub
scas
and
or
in
scas
psubq
fisttpl
ljmp
push
mov
xchg
add
add
pushf
add
fucompp
add
mov
leave
mov
cmpsl
cwtl
cs
insl
add
lods
inc
stc
and
jge
addr16
adc
pop
cmc
addr16
idiv
aad
fld
iret
lock
jo
mov
mov
lret
lods
jns
in
xor
aad
pop
loop
fnsave
xchg
jns
push
inc
pxor
mull
stos
arpl
jge
push
jge
nop
mov
roll
rcll
push
sbb
cmp
mov
loopne
xchg
pop
xchg
std
cmp
dec
sub
mov
mov
loopne
xor
pop
push
arpl
sahf
inc
mov
aad
lahf
out
adc
subb
adc
or
dec
outsb
jne
inc
or
sbb
pop
and
pop
lahf
sub
lret
jmp
or
in
push
gs
adcb
and
pop
push
mov
loope
push
jl
jnp
jmp
inc
frndint
movswl
push
cwtl
aam
in
push
push
xchg
sbb
enter
loope
inc
mov
int3
xchg
sbbb
adc
cmpsl
cmp
add
negl
movsl
in
pop
mov
push
push
aam
sbb
bound
stos
mov
dec
loopne
jecxz
popa
nop
jae
outsl
pop
push
lock
cwtl
adc
or
cmp
outsl
pop
pop
scas
shll
movsl
xchg
xchg
jge
mov
push
xchg
int
push
add
mov
mov
add
sub
sub
mov
test
bound
push
add
add
xchg
imul
out
push
fsub
jp
pop
int3
pusha
add
adc
jne
jnp
rcl
je
shrb
or
or
mov
jnp
and
xor
sub
fsubs
bound
lock
cs
fistl
push
cmp
leave
aad
sbb
shlb
flds
scas
sbb
xchg
adc
loope
push
aad
xchg
scas
fstpt
fildll
shll
cmp
jnp
arpl
rorl
cmp
xchg
xor
clc
mov
and
sahf
xchg
pop
in
xlat
pop
js
mov
stos
fxch
fdivl
cli
and
movsl
push
aaa
rcr
in
jne
in
loopne
in
stos
mov
or
dec
add
scas
sbb
mov
push
jbe
mov
xchg
es
test
jb
jg
push
sbb
jecxz
ret
jo
and
arpl
loop
and
fs
add
mov
mov
or
xor
push
sub
subl
lahf
scas
insl
cmc
inc
fdivs
fisubs
in
int
pop
push
mov
mov
jne
mov
jg
add
xchg
popa
dec
inc
mov
clc
fwait
lret
dec
and
mov
mov
and
sub
imul
adc
mov
xchg
jae
and
lods
or
in
in
add
lods
aad
lods
clc
fisttpl
push
lods
mov
imull
jae
adc
xorl
int3
mov
xor
frstor
dec
mov
fadd
mov
stc
add
adc
movsb
inc
hlt
stos
outsl
dec
lea
lods
xchg
jae
push
pop
fisttps
push
insl
fsts
test
push
jle
inc
and
loope
lahf
adc
mov
mov
push
arpl
ljmp
xchg
scas
and
adc
enter
cmp
mov
imul
xor
push
test
jo
loop
std
fimull
rep
pop
xor
out
sbb
test
xorl
mov
or
adc
cs
imul
int
mov
push
cmp
or
sbb
scas
or
and
cwtl
not
push
push
outsl
add
push
sarb
les
sub
lret
push
dec
sbb
icebp
imul
fs
divl
stc
movsl
xor
popa
adc
xchg
ret
push
addl
jle
mov
sbb
pop
jne
cs
dec
stos
mov
pop
add
insb
loope
iret
sub
fldl
xchg
mov
mov
xchg
sbb
pushf
mov
xlat
sub
ret
fwait
cwtl
sarb
orb
mov
aad
in
scas
add
int
mov
insb
adc
das
inc
push
inc
ret
in
imul
fiadds
mov
or
cli
cs
add
xchg
aaa
repnz
pop
add
push
jmp
dec
inc
dec
inc
inc
iret
pop
lret
mov
sbb
jl
es
inc
push
mov
in
sub
or
push
sti
sub
cli
adc
push
push
cwtl
adc
mov
movsb
or
mov
lds
xor
push
movsl
and
sub
jno
arpl
mov
push
fisttpl
int3
cmpsl
pop
sub
push
jnp
mov
ss
push
push
xor
clc
ficompl
or
mov
test
shll
fcmovnu
icebp
scas
mov
adc
cmpsb
enter
jno
sbb
lret
into
sub
es
xchg
jg
mov
movsb
lods
add
mov
call
jl
add
pop
and
inc
xchg
ljmp
push
ja
or
rcrl
adc
fldl
inc
ficomps
push
mov
xor
test
clc
in
xchg
rolb
iret
out
and
xor
jo
cmpsl
daa
adc
mov
adc
push
in
xor
leave
dec
sti
jb
hlt
enter
adc
sbb
pop
mov
xchg
sbb
adc
aas
cmp
xchg
mov
push
insb
ds
inc
stos
shr
test
push
lock
xor
loopne
addr16
mov
cs
in
stc
and
xorl
add
data16
aas
jmp
jmp
lock
sti
imul
xchg
in
stos
hlt
push
cltd
mov
adc
sbb
jnp
dec
jbe
mov
ds
or
hlt
lods
xor
xorl
pop
pop
xchg
mov
test
push
mov
cmc
mov
sbb
ret
sbb
gs
push
int3
out
call
xchg
xchg
and
rclb
adc
dec
outsb
inc
mov
out
js
jle
jns
adc
lods
ret
test
add
mov
push
jle
or
mov
dec
push
cmp
mov
dec
je
xchg
inc
inc
cmp
or
inc
ret
jge
cmc
inc
push
shlb
jl
mov
js
cmp
jns
adc
xlat
push
sbb
fdivl
xchg
js
mov
sbb
enter
roll
sbb
test
inc
out
scas
arpl
pop
scas
sti
pop
stc
shrb
mov
lods
push
shrb
dec
in
or
aas
ss
ret
pop
add
adc
push
adc
shll
je
push
mov
jg
outsb
stos
and
cli
xchg
outsl
mov
mov
in
xlat
mov
insl
stos
xchg
push
pop
sub
or
add
imul
cmp
inc
push
ret
loop
adc
mov
ljmp
lods
xor
sbb
jecxz
adc
rorb
pop
inc
jae
pop
cmp
adc
movsb
ret
xchg
push
shrl
mov
inc
pop
or
xchg
push
daa
fld
ss
sbb
imul
fistpl
stos
adc
jbe
das
add
push
dec
pushf
dec
add
jo
mov
xlat
or
pop
sub
adc
pop
adc
pop
xor
fidivrl
sbb
mov
pop
or
inc
and
rolb
mov
xlat
sti
lcall
aas
pusha
movsb
xor
cmp
jp
xor
movsl
sub
imull
fmull
lods
fucomip
out
push
aam
loope
fildll
xchg
dec
ljmp
cmp
or
std
sub
mov
cli
loope
xchg
mov
loop
cmp
add
js
movsb
loope
mov
aaa
push
popa
inc
jle
jecxz
push
arpl
sti
loopne
fbld
into
adc
adc
mov
pop
dec
jge
cmpsb
movsb
scas
and
add
ja
in
js
jae
sub
or
arpl
mov
push
jne
mov
cli
mov
andb
bswap
xor
dec
mov
dec
cmp
dec
xor
lods
jae
stc
xor
jb
mov
outsb
cmp
or
ret
mov
clc
cli
lods
push
stos
pop
movsb
test
cli
adc
jo
xor
lret
and
xchg
add
mov
jns
in
adc
pop
mov
sub
call
adc
inc
data16
xchg
shll
sub
push
mov
loopne
sbb
mov
cltd
addb
pop
dec
xor
jp
adc
pop
xor
sub
mov
fisttpll
cmp
les
lea
fiaddl
jae
adc
xor
cltd
enter
cwtl
mov
push
aad
push
lds
xchg
jbe
pop
or
fcomps
lret
aad
sbbl
or
movsb
sti
iret
subl
and
ljmp
push
jmp
loope
les
test
loop
std
and
pusha
push
jge
pop
mov
xor
aam
scas
mov
or
dec
xchg
insb
aam
clc
or
mov
das
sub
popa
cli
int
pop
mov
mov
rclb
sbb
shll
test
or
adc
xchg
push
decb
vshufps
sbb
mov
outsb
pop
adc
shrb
add
dec
push
jbe
in
mov
cld
or
push
sahf
mov
push
sub
in
dec
incl
and
mov
clc
in
pop
pop
and
inc
xor
js
rol
jb
cs
pop
bound
or
cs
and
jmp
dec
rorb
push
inc
bound
pop
nop
stos
dec
fisubrs
and
sbb
imulb
mov
out
xchg
xchg
and
xchg
lcall
xchg
mov
aam
and
xchg
mov
repz
in
ljmp
inc
or
push
adc
rcrl
into
dec
xchg
dec
lcall
push
enter
in
adc
rclb
sbb
in
in
ljmp
sub
clc
push
ljmp
jecxz
dec
out
movsl
xchg
sub
jne
out
pushf
clc
xlat
test
test
sbb
stc
mov
add
sbb
sbb
test
sub
pushf
xchg
int
repz
or
cmpsb
out
sbb
enter
mov
std
xchg
mov
test
adc
push
fildll
stos
rorl
mov
dec
push
pop
xchg
movsb
cmp
pop
mov
cmp
sbb
lret
sub
push
jge
inc
inc
es
cmc
or
cmp
cmc
mov
addr16
pop
ds
push
bound
out
sub
push
inc
xlat
mov
mov
das
nop
and
jl
inc
sub
cmp
mov
or
aam
cmp
loope
pop
pop
out
inc
std
fdivrl
jge
aad
shll
shll
jl,pt
jg
sub
andl
jnp
shll
mov
in
cmp
rorl
sbb
cmp
into
push
cmp
mov
adc
cmp
int3
inc
xor
sub
push
les
jl
cmp
jmp
and
pop
movsb
inc
and
leave
or
popf
xor
pop
loop
cmpsb
or
pop
lods
fcmovb
lods
lea
and
sbb
mov
sti
mov
movzwl
or
push
cmpsl
mov
push
test
pop
push
cs
lret
stc
add
adc
lahf
jae
cmp
inc
jno
dec
ss
push
pop
xchg
xchg
push
push
push
sbb
sbb
fnstsw
mov
jg
mov
xchg
mov
arpl
pop
dec
and
loop
sub
mov
lea
cs
scas
adc
stos
pop
pop
push
fs
stc
push
sbb
jo
lret
ljmp
xchg
andb
in
dec
rcr
jmp
inc
mov
out
jo
imul
add
je
repz
jg
cmpsb
scas
lods
dec
add
in
dec
and
lods
inc
mov
pop
in
cmc
sub
jb
cmp
xlat
pop
lods
data16
jmp
jb
imul
aad
mov
incl
xchg
bound
push
dec
in
mov
aad
push
negb
cltd
mov
repnz
mov
popf
dec
icebp
dec
lahf
rorl
lcall
xchg
xchg
arpl
xlat
pop
sbbw
mov
sub
outsl
les
sarl
jp
cwtl
out
cmp
push
cmp
jle
mov
imul
daa
lea
scas
push
aas
dec
pop
xchg
fidivl
sbb
lock
push
lock
hlt
add
cmpsl
push
imull
adc
bound
scas
jg
or
aad
sbb
add
test
sub
shrb
aad
jmp
mov
aaa
mov
lds
scas
stos
or
or
jbe
fadds
fstps
jno
pop
jno
aad
xor
test
pop
ret
adc
test
inc
daa
cmp
mov
ljmp
hlt
xchg
jg
imul
mov
dec
sub
inc
xorl
pop
fisttpl
test
fildll
mov
lods
jecxz
insl
cs
popf
xchg
cmpsl
and
mov
ss
gs
in
lcall
fs
cmp
aad
pop
inc
insl
pop
arpl
cli
orb
insl
icebp
loope
xchg
dec
mov
xchg
adc
out
movsl
adc
dec
mov
testl
and
out
out
fwait
dec
sbb
sbb
adc
add
frstor
or
mov
aaa
lcall
fbstp
mov
inc
xchg
or
test
and
mov
in
hlt
rcrl
icebp
in
popa
int
cs
xchg
mov
pop
dec
mov
cmpsl
in
nop
into
mov
pop
mov
mov
xor
dec
ds
stc
mov
lcall
jb
lret
mov
and
test
jge
out
xchg
arpl
inc
sarb
shll
or
jp
stc
mov
xchg
push
pop
lahf
inc
pusha
addl
test
movsb
into
jno
daa
adc
sub
xchg
or
loop
loop
xor
scas
ljmp
pop
jno
pop
sbb
cmpsb
push
cs
cmp
mov
adc
insb
leave
cmc
mov
popf
clc
pop
inc
rcrb
sub
clc
sbb
stos
pop
inc
popf
testb
bound
repz
or
mov
mov
enter
push
inc
pushf
sbb
mov
adc
mov
adc
fcompl
ja
add
std
sahf
arpl
enter
sahf
mov
lret
adc
fldenv
fs
sub
jl
xchg
jo
test
cmp
push
adc
add
jl
and
inc
adc
ds
push
loope
xor
out
fyl2xp1
ljmp
xor
rolb
mull
xchg
lret
in
lods
sbb
sub
mov
outsb
xor
xchg
pusha
jmp
jne
xlat
int
leave
mov
adc
add
mov
les
mov
sub
jbe
rcrl
push
mov
pop
sbb
mov
ret
fwait
xchg
ds
cmp
into
jo
xchg
xor
sub
shrb
fcompl
mov
push
stc
mov
int3
jmp
mov
daa
js
mov
jmp
fldt
xchg
or
cmp
aad
cmp
push
jbe
pushf
sarb
add
fnstcw
jnp
repnz
movsb
or
sahf
mov
in
and
je
cmpsb
sub
mov
push
jae
lock
in
lods
inc
rclb
setp
xor
jecxz
cmc
fnstenv
std
sbb
mov
adc
dec
test
pop
lods
into
movsl
test
adcl
push
dec
xorl
sbb
mov
enter
mov
cld
adc
addb
out
mov
mov
sbb
les
mov
dec
jne
sbb
aaa
imull
cmpb
loop
mov
cmp
adc
outsb
stos
sbb
and
jl
lcall
cmp
xor
xor
cli
testl
xrelease
jns
dec
mov
cmpsb
mov
mov
xchg
jo
mov
add
imull
fldl
or
inc
lahf
das
xor
inc
aaa
ret
fldl
insl
mov
jle
cltd
mov
mov
es
cmpsb
int3
test
jmp
loopne
jb
frstor
flds
mov
sarb
mov
popa
movsb
add
dec
sbb
icebp
cmp
push
pop
popa
mov
cld
xchg
push
dec
cmc
movsb
cwtl
jno
jnp
movsl
add
xor
test
mov
addb
and
add
dec
xor
je
scas
stc
or
mov
ret
or
pop
inc
or
aas
sarb
insb
fwait
loope
jg
sbb
dec
jg
push
xlat
mov
adc
push
xor
ss
fcomip
fldl
pop
mov
xor
adcb
push
icebp
and
inc
outsb
inc
out
push
andb
jmp
cld
add
imul
cmp
loop
das
iret
add
in
mov
sub
push
iret
daa
stos
loope
scas
xchg
das
jge
mov
fstl
or
pop
dec
push
jo
push
pop
jbe
movsb
inc
loopne
cmp
mov
adc
into
xchg
inc
xchg
xor
testb
pushf
add
xchg
ss
mov
xchg
dec
mov
jle
jae
aas
dec
xchg
dec
sub
rclb
cmpsb
stc
jecxz
movsb
cs
shrb
wrmsr
inc
pop
cli
mov
int
movsl
pop
mov
mov
addb
mov
mov
out
call
and
std
jbe
pop
das
push
xor
xorl
pop
xor
in
mov
lods
lea
insb
pop
pop
neg
push
adc
dec
in
fstl
out
lret
inc
ret
lods
xor
mov
ja
bound
xor
mov
test
popf
pop
inc
push
sub
inc
xchg
adc
jmp
mov
clc
inc
or
sbbl
mov
mov
add
lret
sub
inc
rcll
sti
clc
or
and
cwtl
test
ljmp
in
shrb
sbbl
xchg
jno
fs
xchg
mov
push
aam
stos
fdivrl
stc
negb
adc
pop
push
jae
stos
pushf
jnp
sbb
insl
repz
or
mov
add
mov
movsl
push
inc
pop
pop
cwtl
iret
mov
mov
jmp
call
cld
add
clc
in
imul
arpl
xor
cmp
mov
data16
ror
popa
rcl
or
fs
jmp
popf
mov
and
mov
arpl
mov
popa
jnp
ret
out
daa
adc
nop
movsl
lret
and
xor
jns
ret
out
sbb
dec
jg
mov
push
lea
push
and
sbb
sub
test
sub
call
dec
mov
cmpsb
or
leave
mov
dec
setno
push
test
mov
sbb
int
scas
scas
mov
cmp
xlat
dec
mov
cmp
or
aaa
scas
jg,pt
add
shlb
adc
cmp
fisttpl
push
mov
pop
in
sub
stos
xorl
xor
jns
ss
nop
push
outsl
and
mov
inc
test
inc
push
and
insl
outsb
es
inc
xchg
fprem
das
mov
cltd
xchg
outsb
sub
idiv
sbb
sbb
scas
outsl
inc
and
and
jae
cmc
jo
stc
sbb
mov
mov
inc
sbb
jecxz
xchg
push
insl
adc
pop
int
dec
int
jle
xchg
push
ret
enter
xchg
jne
mov
std
imul
popf
bnd
imulb
push
pop
push
mov
adc
jp
cmp
sbb
sbb
mov
sub
fadds
lahf
call
mov
ja
push
mov
stc
movsl
add
jno
rep
mov
sub
hlt
dec
lea
pop
shr
inc
cmp
dec
and
cwtl
mov
fyl2x
repnz
mov
add
jmp
add
das
loop
int
ret
xor
sub
xor
shrb
lahf
xor
es
pop
push
jno
cmc
inc
shrb
ret
scas
add
sub
idiv
jg
and
push
repz
xchg
negl
pop
or
js
in
pop
pusha
xor
out
cmpsb
xor
ss
jb
adc
push
in
pop
arpl
jl
push
push
lret
sbb
add
mov
call
jp
add
lcall
cmc
pop
flds
cmp
and
mov
inc
insl
push
adc
xor
mov
mov
and
pop
ret
add
cmpb
sti
sti
cmpb
inc
cmpsl
sbb
inc
xchg
movsb
mov
adc
adc
push
and
fidivrs
pop
mov
xchg
jb
shrl
daa
cmp
pop
andb
out
xchg
scas
or
mov
ja
js
enter
or
pop
mov
pop
cmc
push
cltd
xchg
clc
xchg
les
jbe
push
sarb
and
out
fisttpll
or
test
xor
in
scas
push
sub
or
mov
pushf
push
std
xor
adc
xchg
test
pop
nopl
adc
mov
movsb
fnstsw
jae
scas
or
lahf
mov
jg
jno
arpl
cli
movsl
outsl
rcrl
pop
mov
add
decl
pop
sti
stos
or
aaa
ret
jmp
mov
xor
in
adc
fwait
ss
sbb
mov
ret
add
popf
ret
scas
xchg
ret
test
xor
call
data16
or
psllw
out
mov
out
test
sub
cmp
jmp
shll
iret
mov
adc
cmpsb
cmp
jp
lret
mov
out
call
jne
cmp
mov
push
mov
in
mov
sub
xlat
fs
push
jns
sub
stos
push
mov
cwtl
dec
push
inc
scas
pop
mov
fsubl
and
and
lcall
adc
pop
sub
int
mov
xchg
push
dec
imul
repz
mov
fildll
insl
and
loop
add
ja
ret
jns
pop
sbb
movl
jnp
cmp
fucomi
dec
or
fstl
popf
inc
fwait
jle
outsl
sub
insb
sbb
inc
shlb
mov
rcl
insl
sbb
xchg
add
pop
pop
xor
add
rcr
push
mov
out
jb
ss
inc
dec
int3
cmp
jnp
das
leave
jo
xchg
jecxz
scas
data16
pop
lods
ljmp
mov
mov
fnsave
mov
adcb
jo
and
jnp
inc
jmp
fs
xchg
jmp
testb
jmp
ret
mov
dec
sub
xchg
aaa
xor
push
dec
lcall
jnp
mov
pop
ss
pop
push
push
xchg
mov
das
shll
mov
fmull
fs
adc
aaa
ja
orb
hlt
adc
fisttps
mov
add
xor
lock
jae
mov
pop
testb
add
stos
mov
dec
mov
sbb
fiadds
fisubrs
fmuls
pop
xor
add
loopne
fsts
shll
sub
xchg
xchg
lods
dec
jae
aas
mov
xchg
push
or
mov
add
inc
out
aad
scas
dec
cmpsl
fisubrs
lret
jl
dec
cmp
cmp
mov
pop
nop
inc
xlat
orb
addr16
inc
mov
in
arpl
lock
gs
mov
inc
rcl
repnz
xor
inc
cmp
repz
popf
pop
or
xchg
add
cmp
mov
or
out
jbe
cmp
adc
xchg
cli
adc
push
sbb
jb
test
sahf
dec
faddp
push
sbb
push
dec
push
xchg
cmpb
xchg
aam
push
mov
std
fidivs
bound
insb
mov
or
and
and
add
scas
push
test
mov
mov
jmp
mov
rolb
mov
dec
and
stc
and
divb
jo
jbe
es
jne
scas
mov
pop
mov
add
lods
scas
in
adc
cmp
push
int3
mov
dec
add
push
sbb
nop
add
hlt
shrl
sbb
sbb
mov
push
xchg
push
add
cmp
pop
adc
loope
adc
sbb
mov
jae
xor
push
pop
mov
movsb
or
xor
addr16
lock
mov
mov
bound
pushf
push
ret
adc
jns
pop
in
xor
loope
insb
mov
leave
push
pop
in
movsb
mov
aaa
scas
enter
setne
fsubrs
push
adc
push
pushf
jno
je
in
inc
inc
fsts
test
aad
pop
leave
sub
add
movsb
adc
xchg
or
and
mov
mov
jns
icebp
push
mov
movsb
sbb
jnp
lea
lock
into
jecxz
pushf
mov
push
push
mov
cli
jnp
and
pop
idivb
idiv
mov
in
and
sub
pop
cmc
mov
sbb
incb
mov
ja
push
or
std
fcoml
out
cld
xchg
and
bound
sbb
push
sub
popa
push
sarb
fbstp
mov
scas
imul
int3
outsb
sub
or
lock
cmpsl
inc
stos
dec
test
mov
push
jmp
cmp
mov
insl
dec
outsl
pop
cmpsl
repz
out
repz
rcrb
mov
sub
dec
mov
cmp
cs
pop
mov
and
cltd
xor
inc
in
stos
mov
jge
push
inc
jl
inc
iret
pusha
cmpsb
mov
mov
add
outsl
dec
fwait
push
fmul
out
pop
out
push
mov
out
jl
ljmp
push
pop
sti
dec
daa
or
sbb
orb
dec
clc
pop
jecxz
adc
jmp
and
iret
sub
mov
repnz
xchg
push
out
mov
mov
es
mov
mov
adc
popa
shll
adc
sub
xchg
sti
sbb
fsubs
lea
stc
fldt
loop
dec
aas
les
lds
mov
mov
mov
jp
inc
add
mov
xchg
adc
xor
and
sahf
jge
ljmp
pop
imul
into
inc
dec
cwtl
lods
cmp
jmp
dec
pop
scas
pop
std
pop
rclb
jno
mov
sbb
loope
pop
lcall
push
mov
addr16
dec
fnsave
insb
mov
dec
sbb
iret
cwtl
scas
shl
fcoms
push
sbb
xchg
xor
add
std
mov
lods
xchg
mov
sbb
mov
jbe
sbb
icebp
les
add
icebp
sub
or
dec
mov
sub
fstpt
push
ljmp
ficoml
lret
mov
aam
jb
and
lahf
dec
cmovo
xchg
push
mulb
mov
jmp
fisttpll
add
jp
pop
add
xorl
inc
pop
push
xchg
mov
jle
adcb
loopne
jmp
mov
test
loopne
in
cmpsl
add
shlb
aad
js
add
jecxz
push
jns
sub
aas
orl
icebp
inc
or
in
test
movsl
pushf
dec
sub
and
sub
dec
jbe
inc
pop
out
sti
xchg
and
jg
mov
jmp
in
mov
mov
jns
push
out
xchg
iret
popf
xor
mov
popa
lds
negb
push
pusha
pop
jns
cs
es
xor
jno
push
push
pop
inc
add
stos
xlat
popf
inc
mov
imul
popf
adc
push
rcrb
push
jge
dec
xor
and
lea
sub
clc
push
mov
addr16
sbb
cmpsb
scas
stos
inc
adc
sbb
jp
sahf
jbe
mov
int
cwtl
stc
add
sub
ljmp
cmp
mov
insb
lods
ret
pop
mov
mov
and
inc
out
int3
scas
sub
sub
stos
push
in
jl
mov
mov
adc
jl
push
push
pushf
sbbl
repnz
push
orl
andl
sub
imul
mov
data16
sahf
ds
push
add
sub
ja
lods
je
mov
sub
inc
add
dec
stos
mov
fcmovnu
lock
and
mov
in
mov
jp
sub
and
xlat
aam
pop
adc
mov
cmp
cmpsl
sbb
jnp
es
jae
fpatan
and
jbe
mov
xchg
xchg
xchg
out
pop
push
daa
das
cld
xor
xchg
in
mov
push
pop
out
lea
pusha
out
out
and
or
aam
sub
or
scas
sub
or
push
sarb
out
sbb
movsb
gs
xchg
inc
dec
sbb
inc
addr16
and
sub
punpcklwd
mov
pop
ror
sub
nop
test
xchg
cmp
mov
outsl
out
push
addb
test
dec
or
jl
stc
out
mov
mov
pop
imul
idiv
sbb
jns
xor
adc
add
sahf
pop
pop
testl
les
imul
adc
bound
nop
fimuls
add
mov
das
fldt
add
int3
xchg
pop
and
push
std
mov
push
lods
sarl
jbe
or
fsub
push
aam
xor
ret
push
lods
lods
dec
fisttpl
or
dec
sbb
out
or
rorl
fldl
outsb
push
push
scas
fincstp
cltd
fadds
push
call
flds
test
mov
les
fsubrl
xchg
sbb
sub
and
sti
push
sbb
sub
scas
test
in
adc
adc
inc
sti
testl
sbb
lds
call
fidivrl
push
mov
insb
jb
sub
xchg
dec
daa
mov
xchg
jp
fbstp
pop
repz
outsb
mov
xor
jbe
lcall
ss
out
jl
aad
bound
push
into
imul
popa
lds
jne
xchg
icebp
mov
imul
push
ret
xor
subl
addl
pusha
xor
sbb
pop
xor
adc
sub
jge
push
sbb
jne
stc
cwtl
push
push
push
pop
mov
or
dec
pop
dec
push
cmp
iret
cmpsl
push
pushf
jbe
in
loope
sbb
rcrb
jnp
fsincos
mov
out
scas
mov
rcll
cmc
mov
cltd
lock
daa
fdiv
and
out
mov
ret
push
adc
push
mov
insb
mov
mov
mov
mov
inc
sbb
outsb
add
pop
jg
das
or
mov
mov
ljmp
and
add
push
mov
cs
stos
mov
pop
mov
adcl
repnz
jge
xchg
jle
in
outsl
ja
data16
mov
movsl
push
out
jge
cmp
xchg
je
jae
mov
insl
cld
scas
pop
int
pop
leave
imulb
push
push
lcall
mov
loopne
xor
cmpsb
pop
rcr
aaa
add
or
rcrb
sbbl
fimull
in
pushf
cmc
jp
fdivl
fcomip
out
iret
fucomi
mov
push
inc
pop
test
repz
loope
dec
enter
mov
out
shl
inc
mov
xchg
cltd
push
jle
lret
mov
cs
push
sub
ja
pop
mov
nop
jbe
inc
cmp
sbb
insb
adc
into
sub
inc
scas
loopne
cli
lahf
cmp
push
dec
push
add
addl
mov
jmp
cmpsb
sub
adc
gs
cmp
lock
es
push
sti
jo
add
leave
mov
fcomp
inc
fbld
push
pushf
and
mov
movsb
jne
sub
arpl
jg
mov
sub
mov
inc
lahf
xchg
sbb
and
scas
test
loop
ja
addr16
mov
pusha
pop
int3
push
dec
arpl
jp
mov
xchg
push
les
inc
lret
mov
sarl
mov
dec
inc
xorb
adc
or
sbb
fstpl
push
fisttpll
and
mov
das
pushf
js
mov
enter
xchg
in
cwtl
fisttpll
nop
add
inc
inc
pop
mov
fcompl
scas
fsts
out
cld
jns
cli
jecxz
rcl
or
cmpsb
mov
das
mov
jl
push
add
sbb
lea
sbb
shrb
sbb
call
roll
je
pop
clc
mov
hlt
jo
inc
mov
and
jae
cmp
and
jne
and
jmp
fs
push
dec
adc
rol
mov
mov
push
mov
mov
stos
dec
jp
cmp
imul
cmpsb
repnz
repnz
lret
data16
sub
aaa
xchg
sub
repnz
xor
fucomi
lods
cmp
aas
xchg
mov
shlb
ss
shr
clc
insl
jecxz
adc
incb
ficoms
ret
pop
pusha
sbb
dec
dec
cltd
in
rcr
jno
scas
jns
ret
add
movsb
xor
mov
sbb
adc
ss
shrl
push
or
lahf
inc
jp
or
sub
mov
imul
cmpsb
aad
mov
adcb
lea
fxam
into
cmp
loope
pop
dec
addr16
ljmp
jae
out
mov
cmp
std
cmpsb
enter
mov
lret
pusha
and
or
pushf
ss
sbb
cltd
fwait
leave
jp
add
add
popf
xchg
stos
xchg
push
jno
mov
popa
mov
add
push
out
or
and
filds
rol
or
imul
mov
dec
jmp
mov
test
add
sbb
imul
or
lods
adc
in
rcll
lcall
jecxz
pop
mov
inc
mov
jae
scas
adc
push
xor
cmc
inc
test
sbb
notb
jbe
adc
test
push
shlb
adcl
popf
es
fmull
fimull
test
push
push
add
push
jl
call
mov
push
aad
in
sti
lret
inc
repnz
mov
dec
adc
sub
or
cmp
insl
pop
rol
add
sti
lahf
in
push
pusha
mov
push
jl
sahf
in
jmp
repz
xchg
andl
mov
pop
pop
and
mov
and
sub
xchg
push
add
add
jmp
mov
dec
cmp
movsb
test
lahf
arpl
xchg
pop
aam
int3
fcompp
jmp
loope
sbb
jae
cltd
or
dec
lret
out
mov
mov
cmp
jns
adc
adc
adc
jae
xor
mov
ljmp
lds
aam
testb
sub
mov
cli
scas
pop
or
inc
jmp
and
nop
mov
lea
inc
jns
xchg
enter
daa
test
mov
jmp
popa
cmp
dec
sub
sub
push
inc
xchg
daa
and
js
call
jl
out
mov
ret
scas
pushf
aad
js
add
and
and
hlt
pusha
mov
jmp
popf
add
adc
push
and
sub
sbb
inc
cmc
ds
jno
loope
lcall
mov
or
fmuls
sbb
push
stos
in
insl
jns
pop
mov
sbb
icebp
pop
and
mov
sub
add
or
stc
xor
mov
scas
jmp
in
lods
das
sub
shll
dec
pop
mov
aas
addr16
add
xor
inc
sahf
packssdw
ret
scas
movsb
pop
out
or
jns
js
sar
movsb
and
fs
dec
xlat
fwait
push
and
pop
aad
or
dec
sub
mov
es
lods
js
xchg
es
ss
std
pusha
and
push
mov
jne
adc
dec
js
mov
inc
or
cmp
inc
int
lods
sahf
pop
lcall
or
ret
xor
push
sbb
iret
arpl
jnp
mov
mov
pop
xchg
fstpl
add
pop
xchg
incl
in
std
push
test
fsubs
mov
adc
mov
stc
test
mov
pop
dec
jae
inc
xorl
xchg
xor
stos
adc
pop
push
out
stos
addr16
lods
dec
out
xchg
aad
push
ljmp
pop
test
out
dec
push
shl
pop
insb
jp
enter
xor
add
pop
cmc
mov
popa
jne
push
cs
ds
test
popf
sbb
or
xor
mov
mov
imull
dec
jb
mov
or
cs
mov
in
jge
cmp
fxtract
inc
cmp
cmp
faddl
xor
aaa
lahf
nop
imul
or
cmp
lret
leavew
lcall
xor
and
or
or
inc
fiadds
lahf
lret
cltd
sub
xor
nopl
xchg
xor
xchg
push
cmp
xor
stos
pop
mov
mov
popf
hlt
cld
int
movsl
jae
pop
sub
repz
clc
cld
push
sub
repz
adc
jmp
rorl
gs
mov
push
clc
mov
add
les
mov
push
mov
pop
and
cltd
pavgb
pop
call
and
pop
push
cmpsb
xchg
and
mov
fwait
sbb
xor
lock
xchg
push
push
clc
icebp
mov
sbb
cmp
shlb
ljmp
je
jbe
imul
ret
xor
testb
sub
cmc
xchg
cmp
in
insl
aas
pop
shrb
adc
inc
fsts
sti
adc
xor
test
addr16
enter
cmp
sbb
adc
fcompl
sub
add
mov
rorl
test
subl
mov
in
sub
jp
cmp
cmpsl
nop
push
mov
aas
push
jecxz
sbb
mov
xchg
cmp
js
cmp
push
in
fistpl
push
inc
fisubrs
test
push
addl
xchg
xchg
test
cmp
cli
add
push
out
xchg
xor
pop
sbb
int3
adc
es
clc
stos
jp
adc
add
in
dec
bnd
notb
shrb
add
pop
pop
jbe
fdivrs
cmp
test
pop
cltd
nop
mov
mov
aaa
lcall
mov
imul
mov
xchg
rclb
pushf
out
push
push
popa
lock
inc
repz
mov
popf
fisttpl
iret
jo
lds
pop
push
mov
or
cmc
cmp
inc
inc
cwtl
push
mov
sub
aad
jae
addr16
mov
hlt
repnz
mov
pop
pop
inc
push
sarl
xchg
inc
push
dec
insb
outsb
fs
inc
mov
jl
jbe
cmp
sbb
sub
in
mov
ljmp
mov
mov
lret
and
pushf
sbb
fisttpl
insl
mov
mov
adc
inc
add
add
ss
mov
cltd
aam
push
movsl
mov
imul
insl
aam
pop
rolb
cvtps2pi
push
add
mov
mov
sub
popf
lahf
out
aas
and
and
dec
xchg
mov
lea
pop
and
jbe
cmp
and
stc
out
movsl
cmp
jo
out
adc
addr16
jb
and
xchg
mov
push
xor
adc
stc
shl
sar
adc
nop
push
add
add
adc
xchg
add
pop
xchg
mov
mov
sbb
sub
mov
sbb
push
push
ljmp
and
inc
hlt
jne
popf
push
iret
test
mov
jle
jecxz
mov
test
jmp
dec
cmp
jns
js
rcrb
popa
xchg
leave
out
testl
mov
test
stos
push
push
sbb
mov
jns
cmp
icebp
push
sbb
loop
sub
ds
mov
in
mov
adc
ja
cmp
sbb
fcoms
or
xchg
lahf
stc
scas
out
das
lock
add
test
fcomps
push
xor
leave
xor
loope
orb
jmp
lcall
popf
mov
push
int
lods
repz
popf
sbb
and
mov
cld
jae
xchg
mov
aad
or
mov
dec
ja
sbb
adc
xor
and
jno
fimull
or
pop
sub
in
adc
xor
sub
adc
in
lcall
dec
mov
aas
push
pop
dec
jne
xor
aad
rcr
sbb
adc
xlat
adc
jbe
inc
push
fisubs
rcll
jbe
sbbl
insl
push
sbb
jo
movsl
cwtl
dec
jne
std
pop
daa
loop
dec
and
popl
push
mov
dec
or
aaa
rcrb
ret
aas
push
mov
mov
jo
jns
mov
mov
or
dec
dec
cmpl
ja
sbb
repz
lock
adc
lea
sub
sub
stc
int
pop
push
clc
in
roll
je
fstpt
pop
repnz
fidivrs
inc
mov
fnstcw
mov
cmpl
jle
sub
aaa
movsl
cmpsb
push
lods
nop
xchg
loope
das
dec
std
loop
loopne
cmp
jnp
shrb
mull
scas
adc
setnp
push
add
cmc
jnp
outsb
mov
rcrb
cmp
mov
or
pop
hlt
mov
mov
adc
sbb
cltd
aas
fbstp
xlat
mov
push
pop
mov
mov
jg
mov
sbb
mov
ds
fimuls
popl
cvtps2pi
arpl
inc
movsl
out
test
dec
jle
icebp
push
loopne
mov
loop
lds
fstpl
out
aam
out
push
stc
push
mov
cld
mov
loop
adc
lahf
subb
shld
jge
cmpsb
cs
incl
fwait
jae
push
rolb
js
fucomp
jne
add
push
iret
adc
add
fcmovne
cmp
or
push
jo
into
imul
addr16
add
jae
lcall
push
dec
loopne
dec
cmpb
repnz
xor
cmpl
int3
mov
cmp
sbb
add
ds
sub
and
fisttps
dec
dec
adc
pop
xchg
cs
xchg
jp
ftst
cmpsl
pop
aad
adcb
lret
cld
pop
addb
pop
cmp
aam
shr
add
cmp
mov
cmp
clc
xchg
les
adc
ja
mov
add
std
mov
aad
xchg
in
decl
adc
les
mov
push
lock
dec
sti
daa
xchg
mov
dec
lods
pop
jg
cmp
int3
mov
add
jnp
sub
addr16
mov
pop
inc
mov
pop
out
jge
mov
mov
mov
push
sahf
stos
je
mov
test
rclb
dec
addl
movsb
push
push
cld
je
and
int3
xchg
jmp
stos
inc
xchg
jle
dec
push
lret
xchg
loopne
mov
adc
or
std
pop
mov
xor
js
sub
ret
lahf
ret
je
movsb
out
stc
lds
les
stc
push
mov
and
push
sub
adc
pop
ret
xchg
mov
loop
push
and
fmuls
call
cmp
pusha
jno
cli
adc
imul
and
ret
mov
mov
insl
cwtl
fwait
arpl
les
je
cmp
adc
inc
sbb
fs
add
or
in
adc
pavgb
jno
push
rclb
mov
jg
addps
xchg
daa
enter
notl
pop
fiaddl
test
mov
sar
sub
add
inc
out
aam
adc
shlb
cli
shl
incl
jbe
int
rclb
nop
sub
ret
out
jmp
je
stos
jle
sbb
push
inc
push
sub
pop
cmp
test
add
pop
lea
or
pop
or
push
add
daa
scas
xor
cs
movsb
mov
cwtl
cld
pop
mov
inc
cmpsl
dec
push
fs
sbb
sub
mov
cmc
cmp
lfs
xchg
xchg
push
mov
pop
xor
lea
jg
fdivs
or
test
sbb
test
in
add
stc
popl
out
jb
jecxz
sbb
rcl
push
shlb
addr16
mov
into
mov
xchg
xchg
and
insb
gs
lret
ret
and
or
jl
daa
stos
xchg
pop
mul
adcb
mov
pop
scas
push
jo
std
pop
jmp
pop
add
xor
sar
pop
bound
fcmovnbe
hlt
shrl
outsl
js
arpl
xchg
shll
inc
sub
mov
mov
mov
push
shlb
xor
fisubrl
push
jl
iret
push
push
jne
push
push
pop
pusha
push
xchg
mov
and
sub
jmp
cmp
pop
stos
out
cmp
xorb
bound
adc
arpl
mov
mov
or
jno
push
push
loop
sbb
aad
push
leave
push
mov
and
and
jge
inc
cli
fidivl
cmpsl
lret
leave
xor
loopne
sub
pushf
pop
fs
shlb
imul
shlb
pop
inc
sub
push
sbb
lret
shrl
pop
cmp
xchg
and
adc
fidivs
mov
lcall
jmp
push
sbbl
lret
pop
es
mov
mov
mov
test
iret
test
jae
in
pop
mov
loop
mov
mov
dec
pop
inc
dec
pop
mov
fucomp
loop
shl
jl
mov
bound
pop
adc
scas
adc
mov
mov
dec
jmp
test
popf
or
aas
jbe
lahf
out
sbb
mov
adc
pop
out
jo
adc
dec
xchg
push
pop
dec
push
fwait
loopne
pop
xchg
enter
mov
and
mov
mov
inc
jnp
jae
adcl
in
xor
pop
inc
jecxz
mov
mov
imul
cmp
adc
sbb
clc
test
fldenv
ret
mov
mov
jle
add
insl
push
dec
xor
outsb
mov
adc
sub
sbb
jl
shll
loop
pop
rcll
imul
rclb
mov
cmp
mov
rolb
lock
xor
out
test
pop
xorl
ret
imul
fsubr
faddl
mov
xchg
out
into
cmp
jns
add
adc
push
les
mov
jae
std
daa
mov
mul
sub
xchg
or
jp
xor
cmp
push
push
add
mov
stc
dec
sub
xlat
add
xchg
int3
sbb
xor
sub
stc
icebp
jg
icebp
pop
aad
adc
mov
mov
rcrl
push
add
cmp
les
leave
paddusb
mov
fs
mov
mov
in
xchg
xchg
popf
icebp
int
xchg
mov
mov
mov
xchg
push
cli
mov
dec
mov
or
sbb
test
cmp
out
imul
leave
das
mov
lock
test
push
mov
mov
dec
movsl
cmpb
jnp
popa
ljmp
test
rcrb
mov
add
mov
jbe
mov
push
shll
shl
jae
das
sub
xor
orl
mov
lahf
push
add
jmp
insb
or
push
adc
sub
pop
mov
cmp
shl
fwait
das
mov
imul
testb
andl
jbe
mov
cmp
cmp
mov
hlt
ret
jecxz
je
add
insb
test
scas
aam
sub
test
and
out
rclb
imul
push
pop
aas
xor
lods
or
xchg
ret
and
adc
cmp
fimull
jno
out
lods
mov
fisttpll
rcrb
outsb
adc
repz
int3
or
or
pop
xchg
sub
push
fld
pop
sbb
std
adc
pop
movsb
push
cmp
pop
xchg
sbb
jae
enter
dec
addb
xor
xor
dec
std
pop
cmpsl
mov
and
add
test
pop
sub
flds
xor
jns
lcall
ret
xor
adc
rolb
aaa
mov
imul
sti
jbe
dec
mov
mov
sbb
mov
out
into
in
cmp
addl
xchg
stos
mov
mov
jbe
in
ss
data16
sbb
cmp
xchg
or
repnz
push
icebp
mov
dec
bound
mov
xchg
in
inc
stos
sarl
movsl
add
out
dec
mov
jnp
mov
or
cli
xchg
pushf
bound
mov
xor
push
test
stos
lret
sub
out
xchg
inc
ret
mov
stc
imul
dec
lods
push
xor
xchg
dec
movsb
lcall
pop
mov
scas
out
dec
xchg
popf
inc
jg
divb
in
pushf
lahf
mov
cmp
mov
xor
and
mov
mov
push
jbe
hlt
cmpsb
leave
insb
cld
imul
movsb
mov
inc
test
mov
jle
sbb
and
mov
test
rcr
push
call
lea
pop
cmp
inc
sub
pop
inc
push
or
push
add
push
inc
push
xlat
mov
mov
jmp
xlat
lods
dec
fsubrs
add
stos
jg
call
ss
dec
mov
pop
dec
int3
adc
jo
out
and
cmp
outsl
add
insb
xor
repnz
mov
cltd
adc
fs
pusha
iret
mov
data16
shll
xor
inc
testl
sub
cmpsl
aaa
imul
fcomps
mov
bound
rol
lahf
in
pop
ja
fisubrs
xchg
sub
out
and
lahf
outsb
and
xchg
call
call
test
mov
icebp
mov
stos
mov
mov
mov
pop
cmc
push
xor
fidivl
mov
mov
fisubrl
push
xlat
inc
sub
mov
fistl
and
push
jecxz
fcmovne
out
pop
cmpsb
dec
xorl
add
inc
fisttpl
mov
pop
dec
sub
push
sbb
rcl
shr
lods
fstpl
daa
mov
adc
int3
cwtl
mov
fs
jmp
es
xchg
pop
shlb
rcrb
cltd
push
int3
arpl
rcll
clc
sbb
in
clc
push
mov
inc
jp
fdivrs
jge
stos
cltd
icebp
fisttps
xchg
clc
jb
repnz
add
je
mov
lods
mov
add
jg
dec
ljmp
cs
xchg
jge
popf
ja
xor
or
imul
outsb
test
xor
ds
arpl
cmpsb
rorb
dec
mull
lods
pop
or
dec
mov
xor
jo
icebp
sub
jae
jl
and
xor
lds
cwtl
addr16
lock
fcmove
out
cmpsl
rcll
ret
mov
push
lret
push
xchg
or
insb
mov
popa
xchg
jbe
xor
xor
mov
inc
stos
fsts
mov
sub
testl
inc
fistps
inc
mov
cltd
mov
cs
jl
xchg
int
call
ret
cmpsl
cmp
xlat
jne
push
xlat
int3
fstp
test
leave
mov
mov
loope
xor
sbb
aam
inc
std
mov
mov
mov
add
inc
repnz
sub
cli
call
xchg
ret
sbb
sub
rolb
shlb
and
xor
inc
stos
cmp
dec
ds
movsl
add
pop
mov
cmc
popa
movb
add
mov
dec
fistl
ret
mov
xabort
mov
popf
sub
add
hlt
jae
out
rclb
test
icebp
outsl
lods
mov
cli
jb
sbb
notb
outsb
or
hlt
add
lods
lds
cld
mov
nop
shlb
rcrb
pop
lcall
into
rorb
out
mov
push
adc
loopne
mov
pop
lea
cmpsb
cmpsl
sbb
push
adc
rorb
outsl
xchg
cmpsl
inc
sbb
mov
mov
lock
enter
xor
je
outsb
xlat
xor
rcrb
mov
and
adc
test
movsb
mov
inc
push
mov
xor
icebp
pushw
and
nop
dec
jp
xchg
add
out
xchg
dec
push
push
movl
out
lcall
cmp
in
cmp
mov
dec
popf
into
pop
mov
fcompl
push
leave
jno
int
in
mov
xor
xor
mov
mov
lahf
push
addb
sbb
inc
adc
or
clc
cmp
jnp
push
bound
adc
pop
push
cmp
jbe
outsl
mov
cmp
push
xlat
jne
sub
lock
adc
sub
cmp
push
lret
inc
bnd
lods
testl
ret
test
mov
cmpsb
push
ja
outsl
lds
or
stos
movsb
inc
mov
sahf
mov
insl
push
mov
inc
enter
xor
pop
xchg
inc
sub
loopne
jns
lods
fwait
pop
movsb
repnz
jmp
mov
fs
call
test
call
mov
jbe
stos
sub
xchg
jge
fwait
daa
or
js
cli
push
sti
push
push
pop
or
insb
jbe
jno
sub
push
shlb
xchg
addr16
add
sahf
push
xor
add
add
es
sti
fcoms
mov
xchg
inc
les
ret
movsb
in
sarl
sub
pusha
or
dec
adc
mov
mov
inc
sbb
mov
enter
lods
les
dec
std
inc
cmp
pop
push
cmp
test
dec
insl
test
fmull
mov
mov
aaa
ficompl
mov
int
fs
shrb
jl
imul
inc
test
cwtl
pushf
xchg
xor
jmp
push
cli
mov
dec
arpl
shl
lods
push
test
dec
pop
data16
xor
bound
fstp
andl
adc
test
xor
dec
jbe
mov
ds
lock
addb
inc
fwait
adc
lcall
repnz
sbb
push
lcall
fbld
pop
stc
push
add
jp
lret
clc
outsb
xor
sbb
mov
outsl
push
xor
pop
inc
and
dec
sub
iret
sahf
mov
lahf
sub
movaps
cmp
cli
and
leave
lock
int
mov
xorb
mov
ret
mov
lods
cmp
add
int3
jecxz
sti
lahf
les
push
lods
xor
lret
into
lods
or
mov
outsl
ja
pushf
insb
gs
ss
push
mov
movsl
xchg
dec
je
lods
pop
cmpb
mov
jp
iret
stos
mov
addl
sub
in
inc
addb
cmp
out
xchg
xlat
outsl
mov
xor
dec
and
xchg
scas
repz
or
or
mov
jnp
push
mov
xchg
movsl
loop
and
and
push
aas
lcall
sbb
adc
dec
pop
lods
push
das
test
xchg
inc
test
insb
sbb
xor
xor
push
push
cmp
movsb
repz
xchg
popa
enter
stos
push
in
ss
cmp
mov
and
adc
roll
push
add
jmp
mov
std
sbb
jno
mov
popf
sbb
outsl
mov
mov
add
xor
inc
ret
ret
icebp
jp
ret
mov
jmp
and
les
push
out
push
xlat
adc
imul
bound
pop
sbb
mov
cmc
jbe
jnp
fs
jge
sar
das
insb
pushf
mov
jmp
mov
xchg
mov
sub
movsb
andb
sti
test
sahf
imull
cld
push
lret
xchg
in
push
adc
add
addr16
and
ror
mov
es
repz
pop
call
call
and
jae
sbb
dec
add
dec
adc
loopne
mov
add
xchg
ss
addb
push
arpl
fs
aaa
nop
xchg
xchg
testb
andb
int3
dec
subl
jle
jnp
xchg
fwait
dec
lds
leave
add
mov
lods
mov
sub
testb
jp
push
fxch
repnz
pop
xor
jmp
xlat
sbb
push
pop
leave
fcmovnbe
cld
push
cmp
in
mov
sbb
test
push
pop
jnp
rcrb
jb
js
rcr
pop
mov
clc
xchg
or
cltd
and
adc
or
mov
pop
xor
das
xor
add
adcl
shlb
cmp
or
fld
jmp
mov
xchg
test
in
psubsw
or
iret
adc
data16
scas
xchg
fildl
cmpsb
xchg
movsl
add
notl
inc
repz
cmp
repz
cmpsb
dec
shll
mov
outsb
mov
cltd
jl
mov
sti
es
mov
loopne
ja
cmp
lea
ret
mov
push
shrb
sub
out
outsl
inc
jbe
dec
dec
nop
into
addr16
sbb
test
adc
sbb
sahf
loope
fwait
push
add
movsb
mov
xchg
mov
mov
mov
shll
mov
push
rcrl
or
roll
test
gs
fisubrl
bound
aad
cmpl
push
test
lds
xor
mov
aam
inc
data16
xchg
clc
adc
mov
stos
mov
dec
in
cmpsl
cmp
push
mov
cmp
loopne
shl
repz
loopne
sub
push
inc
sub
or
jl
fbld
test
into
data16
scas
lods
mov
jl
cltd
sbb
mov
std
xchg
xchg
push
out
pop
add
push
test
xchg
jnp
mov
push
sti
lret
sti
insl
test
ret
and
jae
or
xor
dec
lret
sub
insb
filds
lea
mov
fisubrs
sbb
xchg
data16
and
call
adc
mov
cmpsb
add
test
mov
mov
out
movsl
push
addr16
ror
cmpsb
sti
icebp
xchg
or
sahf
push
xchg
popf
and
fdivs
insb
mov
lock
fwait
mov
pop
push
cmp
cld
out
or
xlat
or
rcr
movsl
shr
call
mov
jnp
lea
pop
mov
lret
push
mov
inc
icebp
call
test
mov
and
std
pop
inc
lea
mov
inc
scas
ljmp
fcoms
fninit
test
pusha
nop
add
aaa
adc
addr16
mov
inc
loope
call
jb
aas
ss
out
pop
mov
repz
mov
dec
sbb
iret
mov
fcmove
cmp
bound
outsl
fwait
pop
mov
xor
cmp
test
jb
lods
test
pop
push
jl
cs
jae
add
push
or
cltd
pop
jl
in
jae
imul
cld
xchg
jle
mov
out
xor
in
dec
sbb
enter
mov
enter
leave
insl
or
cmp
pop
pop
int
fwait
sub
loop
dec
cmp
mov
and
push
rcl
popf
xchg
sub
sbb
out
push
jne
jmp
lcall
add
inc
jb
ret
push
shrl
dec
or
mov
clc
push
and
jno
xorb
imul
jns
sti
sub
and
ret
arpl
add
push
fbld
out
test
push
out
push
mov
jno
imul
insl
mov
xor
mov
xchg
adc
lds
ljmp
cmp
fcmovnbe
scas
loopne
sub
dec
cmc
insb
addl
or
jecxz
xlat
pop
and
stc
jbe
pop
xchg
shlb
pop
pop
cmpsl
loop
push
mov
clc
push
sbb
pushf
movsb
stos
movsl
ret
xchg
cltd
sub
into
add
dec
daa
jge
shrl
ret
loop
out
movsl
cli
jp
mov
repz
pop
test
test
push
int
jmp
or
repnz
js
or
loope
add
jne
sarl
lret
clc
roll
movsl
mov
sbb
or
bnd
inc
cs
inc
adc
jno
aad
push
clc
xchg
jge
inc
and
fbld
and
mov
sbb
cmp
and
push
mov
sbb
and
xlat
mov
stc
jno
jo
jbe
xor
and
lret
cmp
fidivs
adc
xor
adc
mov
in
jmp
lahf
mov
fs
leave
xchg
and
xlat
sbb
jo
push
add
xchg
adcl
jb
xor
and
jae
and
add
add
push
repz
rol
xor
enter
in
in
ss
jne
xchg
xor
inc
push
insl
mov
lret
jno
adc
jnp
sahf
and
daa
mov
adc
mov
in
lcall
mov
sbb
scas
add
aad
mov
dec
pusha
das
jmp
mov
push
jle
pop
js
dec
aad
lret
jl
lahf
loope
and
movsl
mov
pushf
push
and
add
es
cmpsb
lds
jae
aam
andb
arpl
loope
movsl
mov
push
mov
inc
ret
sub
in
pop
leave
mov
bound
rcrl
cmp
int
dec
daa
into
xlat
in
in
add
lcall
and
add
add
divb
mov
inc
popa
pop
ds
pop
xchg
lods
cmp
pusha
xor
lret
push
mov
mov
push
dec
js
pusha
xchg
adc
mov
cmpsb
lods
add
fucomip
sub
clc
xor
in
pop
xchg
push
stos
scas
dec
xchg
mov
sub
imulb
inc
jo
mov
mov
push
adc
sbb
out
rolb
inc
in
xlat
mov
mov
out
mov
inc
xchg
push
daa
aam
inc
inc
stos
dec
pusha
mov
imul
xor
js
lret
loopne
inc
notb
cmpsb
sub
loop
push
jno
or
push
movsb
and
xor
arpl
in
xor
das
hlt
inc
subl
push
push
xchg
mov
add
mov
mov
dec
pushf
cs
ja
dec
xorb
pushf
pop
push
dec
or
mov
cmpsb
mov
mov
push
sub
movsb
xchg
add
jbe
pop
push
bswap
jae
mov
adc
and
xor
jg
or
addl
xchg
call
aad
scas
arpl
nop
cmp
inc
push
int
ss
pop
xor
push
xchg
gs
cli
aaa
shrl
xor
cmp
nop
sub
pop
or
mov
loope
xor
mov
mov
mov
pushf
ror
aam
in
mov
inc
sub
dec
push
mov
cmpsl
mov
cmp
pop
jb
xchg
cltd
xor
or
call
fisubrl
mov
pop
lods
inc
add
lret
xor
jo
lret
xchg
mov
insb
adc
or
mov
lcall
jge
jecxz
test
xchg
sbb
fsubrp
cs
adc
pop
lahf
and
inc
xchg
inc
cmc
add
or
dec
push
adc
mov
rol
add
and
mov
clc
out
sub
cld
sbb
aam
cmp
xchg
sti
out
inc
add
punpcklbw
jg
xchg
xor
das
push
push
iret
out
mov
sti
and
sbb
fcmovb
loope
and
cmp
mov
cmp
lds
pop
notl
arpl
out
mov
xor
jmp
movsl
maskmovq
testl
fs
gs
sbb
jmp
sub
negb
or
fisttpll
cli
pop
into
lahf
ret
lret
lea
lcall
pop
fadds
mov
loopne
pop
fwait
cmp
fs
hlt
lods
mov
adc
adc
push
dec
sti
mov
fs
mov
xor
and
addr16
shlb
data16
pop
dec
pop
adc
clc
mov
loop
out
push
mov
pop
ss
adc
or
loopne
aas
jns
xchg
jecxz
add
icebp
std
pop
mov
adc
inc
dec
repz
lea
nop
and
sbb
cmpsb
iret
or
jmp
xor
pushf
cmc
insl
and
push
sti
rorb
imul
nop
ss
adc
aam
jecxz
fwait
rcrl
jno
outsl
mov
pop
imul
lahf
mov
dec
lods
jge
adc
loopne
out
out
popa
stos
mov
xchg
pop
jo
push
sub
jp
adc
test
test
fcmovnu
aad
cmp
xchg
dec
pushf
cmc
xchg
pop
mov
adc
push
hlt
dec
or
out
stos
sub
stos
cmp
mov
adc
cwtl
hlt
or
cs
xorl
icebp
int3
gs
mov
lret
jp
push
push
jno
jns
or
subl
out
cmc
js
xchg
in
push
jo
es
add
jle
roll
pop
std
shrb
add
pusha
outsb
jbe
data16
push
xor
mov
xor
or
cwtl
and
leave
adcb
cmp
push
test
push
push
lods
popa
pop
fldl
inc
dec
cli
mov
mov
js
in
imul
or
fldl
or
jne
lret
sbb
loope
sub
adc
adc
sub
loop
adc
jbe
je
jbe
pop
dec
orl
dec
sub
popf
data16
push
mov
gs
jnp
pusha
fnsave
mov
mov
push
add
ljmp
lds
out
in
push
xor
jg
rcr
fmull
in
pop
cmp
hlt
int
adc
push
es
jge
cltd
jns
push
lods
ljmp
dec
imul
repz
add
retw
jl
mov
out
xor
ss
cmp
incb
sbb
xlat
out
movsl
ljmp
js
lahf
xchg
and
gs
jge
sub
fbstp
icebp
mov
sti
mov
inc
pop
push
sub
cwtl
rorl
call
mov
ljmp
sbb
push
fwait
lea
mov
jae
test
in
pop
inc
js
sbb
stc
gs
add
pop
popa
inc
inc
out
xchg
jbe
sbb
sub
jne
sarl
cmp
enter
insb
and
adcb
out
inc
jne
sub
in
in
hlt
divb
cmp
enter
add
inc
scas
out
jg
mov
ljmp
aad
std
pop
or
push
test
out
shlb
xor
and
lea
cmp
push
sbb
jne
sbb
repnz
dec
imul
mov
pop
mov
insl
enter
addr16
adc
push
bnd
stos
mov
insl
sub
push
add
lcall
xchg
das
cwtl
or
lea
enter
push
in
mov
dec
push
jns
cld
xchg
pop
mov
and
cmpsb
out
jo
ljmp
xchg
cmc
test
inc
les
ret
pop
iret
push
enter
fld
lret
add
adc
movsb
int3
xor
lods
jge
sub
repz
call
mov
shlb
ljmp
pop
popf
cmpl
dec
sub
mov
pop
mov
icebp
daa
sbb
rorb
mov
mov
outsl
inc
mov
and
sbb
stos
cmpb
xchg
daa
adc
lods
mov
jecxz
stos
or
or
ja
xchg
in
cmc
mov
push
lock
pop
add
mov
jp
push
shrl
ret
sub
xor
pop
and
push
xor
bound
sub
cmp
enter
jmp
push
push
clc
xlat
add
xor
or
data16
jo
movsb
push
pop
in
adc
push
in
loopne
scas
fadds
push
dec
inc
scas
pop
mov
mov
add
or
cmp
and
dec
mov
jp
icebp
inc
in
pop
mov
push
xchg
cmp
jbe
in
rolb
xor
sbb
push
pop
outsl
jmp
pxor
pop
inc
pop
mov
dec
and
fdivrl
xlat
add
pusha
pop
cmp
mov
cmc
dec
test
ret
xchg
loop
movsl
stos
cmp
sub
mov
aas
adc
mov
cmc
mov
in
sbb
aas
push
data16
or
jbe
dec
pop
insl
push
cmpsl
dec
out
stos
aas
pop
fidivrs
dec
int
inc
dec
jno
mov
lock
iret
mov
stc
jae
cmp
xchg
dec
cltd
and
clc
inc
sahf
sub
mov
scas
inc
pop
dec
cld
scas
xorb
sub
int3
out
loope
jge
fdivrs
ret
dec
repz
je
leave
leave
stos
imull
mov
rol
ret
imul
int3
pop
cmc
jl
pop
push
xor
lods
mov
fmul
dec
push
insl
and
mov
pop
sub
push
pusha
xchg
loope
adc
xchg
sbbb
push
mov
jl
mov
xor
xor
orl
cmp
popf
insl
mov
ret
aam
je
jg
pop
and
or
movsl
xor
std
inc
mov
mov
dec
pop
pop
out
push
clc
mov
rol
decl
lods
dec
mov
insl
aam
fwait
pop
xchg
xchg
inc
push
ror
mov
sbb
aad
cli
push
push
vpcmpeqb
leave
out
add
jno
mov
cmc
pop
jmp
pmulhuw
mov
or
loop
xchg
out
repnz
sub
loopne
popa
cmp
ds
dec
sub
sbb
lret
sub
mov
js
mov
mov
mov
test
pop
into
lods
fiaddl
mov
in
out
xchg
cmp
push
cmp
fwait
outsl
in
das
cmp
jae
hlt
mov
dec
clc
push
inc
sub
or
xchg
push
push
or
pop
adc
fdivrs
out
sub
sbb
inc
inc
cmp
inc
mov
or
mov
int3
pop
popa
les
inc
out
inc
ja
lahf
lret
push
sub
push
adc
mov
into
in
sbb
das
lahf
es
add
addr16
push
xor
dec
sti
pop
mov
xor
mov
out
lods
mov
sub
je
mov
mov
rorb
cmp
and
jp
mov
insb
sub
xchg
shlb
daa
jmp
xor
std
lcall
adc
inc
das
dec
arpl
mov
fisubl
inc
loopne
add
sbb
addr16
daa
xor
adc
repnz
icebp
loopne
and
xor
cmp
pop
xor
or
loope
loopne
faddp
sub
mov
clc
mov
out
mov
mov
sti
inc
or
and
outsl
gs
sbb
pop
movsb
mov
ret
stc
pop
iret
and
dec
push
rorl
pop
pop
xchg
in
sbb
mov
rcll
in
mov
inc
ds
bound
sbb
sub
stos
push
dec
popa
xchg
adc
mov
movsl
and
sbb
cwtl
clc
mov
or
xor
es
popf
xor
xor
lods
int
pop
loop
mov
jno
push
insb
rorb
add
cmp
jmp
subb
es
mov
jecxz
sub
shll
add
mov
mov
xchg
imul
mov
vmovsd
cmp
ljmp
test
jge
mov
movsl
inc
dec
fbstp
xchg
hlt
scas
ja
push
shl
test
sub
xor
stos
imul
lods
pop
pop
adc
sub
aad
pushf
je
and
cmp
arpl
pop
mov
mov
jns
ret
iret
rcl
lds
outsl
outsb
and
xor
mov
mov
imul
pop
insb
fwait
adc
call
sahf
inc
fildll
push
xor
ss
mov
jbe
adc
mov
adc
xor
insb
inc
in
iret
cld
mov
cmp
cmp
fsin
fsubl
andb
inc
push
mov
add
mov
mov
adc
add
xchg
gs
xchg
mov
lcall
out
into
pop
dec
scas
mov
pop
push
imul
jp
sub
mov
mov
sti
and
fldcw
push
sub
shl
pop
mov
or
das
out
add
out
cmp
mov
cmpsb
shll
push
inc
popf
or
js
jbe
or
jmp
cmc
cs
fstps
sbb
jg
in
xchg
idiv
pusha
or
xor
icebp
test
dec
sbb
mov
jge
adc
cmpb
sbb
shll
and
mov
pop
xor
lds
out
les
cwtl
imul
jnp
sub
jmp
dec
push
xor
adc
cs
into
jp
cmp
cmp
sub
sbb
pop
mov
add
push
ljmp
xor
jecxz
int
clc
call
in
xchg
fiaddl
xchg
aad
movsb
push
sbb
inc
subb
sbb
andl
popa
clc
xor
negb
xchg
lods
fidivrs
mov
lods
pop
cmp
std
mov
stos
pushf
cmpsb
iret
mov
xchg
push
scas
in
cmpsb
xchg
inc
out
cmp
leave
aas
outsl
mov
aad
in
push
movsl
test
push
aaa
inc
pop
mov
in
loope
stos
mov
lds
in
frstor
dec
cmc
sbb
jbe
leave
test
mov
imul
inc
shlb
push
mov
push
outsl
mov
mov
adc
sbb
test
popa
sub
movsl
mov
fcoms
out
bound
dec
daa
movsb
xchg
mov
iret
push
cmp
shrb
cmpsl
sbb
mov
lahf
jo
movsb
loop
sarb
xchg
addr16
lret
sbb
rclb
lret
in
dec
stos
and
sbb
insb
jno
push
inc
jne
stos
xchg
test
inc
imul
dec
sbb
push
fsubr
in
ljmp
jo
mov
rcr
stos
pop
xchg
push
xor
inc
inc
imul
mov
xchg
cltd
jg
inc
cmpb
jae
enter
dec
fwait
inc
xor
cmp
mov
and
mov
sbb
cld
mov
xchg
aad
inc
sbb
stos
in
daa
into
faddl
outsl
xor
rcr
sahf
or
xchg
fmulp
adc
or
mov
jns
xor
fdivrs
repz
cmpsl
mov
dec
in
mov
mov
es
outsb
mov
push
add
inc
xchg
sbbb
sub
or
ss
push
push
sub
add
mov
jno
fisttps
jno
push
loope
ret
mov
push
cmc
cmp
pop
test
scas
push
mov
cld
addr16
out
out
push
addr16
cmp
xchg
mov
mov
jge
mov
fnsave
pop
pop
mov
inc
rcrb
and
mov
test
aad
xor
add
pop
adc
sahf
das
shlb
mov
into
mov
jne
xchg
push
mov
sti
cld
push
adc
adc
enter
jecxz
imull
add
movsb
hlt
icebp
push
mov
sbb
mov
hlt
mov
pushw
cmpsb
add
roll
sbb
scas
mov
mov
shlb
push
push
mov
cmp
sub
dec
dec
xor
es
and
jecxz
mov
add
fistps
dec
jp
xor
jp
lock
testb
call
cmp
xor
mov
jge
pop
and
cmc
xchg
movsb
mov
hlt
cli
mov
rclb
xorb
aad
jmp
jb
inc
daa
ja
leave
lcall
pop
push
sti
add
mov
aad
dec
ss
push
popf
mov
outsl
and
mov
stos
pop
jp
jecxz
int3
add
das
lods
hlt
gs
data16
sub
je
jmp
push
dec
icebp
pop
dec
sub
xchg
clc
fwait
mov
lret
cmp
push
mov
das
ss
icebp
enter
or
sbb
cmc
pop
outsl
and
inc
add
pop
movsb
orl
cmp
cwtl
inc
std
pop
push
ljmp
lods
addr16
xchg
mov
rcrb
mov
mov
mov
jns
es
movb
inc
cmp
lds
int3
out
jae
jmp
je
dec
iret
mov
scas
adc
push
aas
xlat
push
mov
out
inc
loope
stc
mov
fbld
pop
outsb
push
sub
fiaddl
push
lds
mov
jno
mov
mov
jle
pop
jbe
scas
jnp
loope
fadd
repnz
mov
repz
pusha
fsts
lret
negl
dec
add
xor
movl
enter
mov
jns
dec
cmp
sbb
push
mov
rclb
jp
ds
mov
jecxz
cmp
xchg
jge
movsl
inc
xor
mov
push
sahf
iret
ret
cltd
mov
xchg
pop
mov
inc
sub
push
ror
lods
xchg
stos
ret
pop
ret
jl
add
pop
pop
xor
inc
mov
cmp
pop
mov
sub
js
pop
leave
ret
insb
stos
rorb
sti
repz
in
add
loopne
adc
xchg
adc
movsl
inc
addr16
cs
mov
pop
clc
fidivrl
cs
fs
xor
arpl
jmp
fwait
idivb
mov
dec
adc
pop
push
adc
or
aad
push
rcl
fwait
ljmp
stc
int3
push
sbb
cmpsb
loope
fs
ja
or
sbb
mov
or
jo
fmuls
rcl
and
push
jg
cli
dec
in
jae
mov
adcb
mov
fcmove
out
scas
push
mov
cmp
sbb
pop
adc
sbb
test
mov
pop
mov
jl
cmp
and
adc
and
mov
scas
dec
fsubs
pop
push
pop
pusha
sbb
jae
fldt
dec
in
insb
imul
aad
sahf
cmp
sub
jne
int3
ljmp
cmpsl
push
aaa
fwait
adcl
mov
xchg
pop
sub
add
lahf
mov
push
mov
mov
jnp
jo
sub
cmp
xchg
jne
mov
pop
loope
fucomp
jo
dec
outsb
xchg
mov
hlt
sbb
rorb
ja
test
fcoml
push
pusha
push
sbb
test
and
push
ret
rclb
leave
jmp
push
mov
push
jbe
in
lods
arpl
wbinvd
fldt
arpl
aas
fists
idivb
or
xchg
cmp
xor
je
mov
pop
lret
bound
jmp
arpl
jl
data16
movsl
lret
insl
inc
clc
xor
dec
and
adc
in
dec
aam
jno
repnz
pop
xchg
call
cmp
push
aas
fmuls
sub
repz
xchg
xorl
xchg
cmc
mov
pop
iret
push
imul
outsb
orl
add
repnz
xchg
fsubrs
mov
inc
jbe
cwtl
daa
nop
pop
and
push
out
inc
cmp
lcall
shr
or
out
stos
in
push
loope
aad
lcall
push
out
lods
xchg
movsb
clc
js
sub
push
mov
jnp
lret
testl
dec
repnz
adc
inc
inc
inc
fucomip
popf
dec
stos
dec
mov
or
mov
add
jno
add
jne
ljmp
xor
mov
test
aas
jmp
or
sub
adc
lcall
xchg
repnz
adc
adcl
jns
enter
cmpb
inc
adc
jnp
jns
inc
fwait
cs
loop
mov
fildl
fldt
cmp
scas
mov
repnz
jo
shll
cwtl
fcoml
add
xor
mov
fcmovu
icebp
ds
add
jle
xchg
pop
push
sbb
cld
cmp
sbb
or
sbb
shrl
dec
repz
cmp
repz
imulb
movsl
arpl
mov
adc
jmp
dec
cld
imul
dec
repz
repnz
pop
pop
jmp
jmp
dec
movsl
mov
push
je
lds
in
fnstenv
sbb
add
jle
fwait
mov
pop
jg
and
lea
ret
lods
dec
jno
pop
jg
lods
js
cli
jnp
mov
inc
stos
xchg
sahf
pop
mov
call
or
repz
xor
divl
inc
mov
push
cmc
lret
inc
inc
mov
xchg
pop
pop
mov
lock
call
sbb
lret
ret
lock
fs
jp
xor
arpl
outsl
or
pop
xor
adc
mov
test
sbb
cwtl
and
cmp
xchg
cmp
inc
aas
adc
pop
inc
cmpsl
ror
xchg
add
mov
push
mov
xor
add
jl
xchg
sub
xor
jg
push
cmpsl
pop
lods
arpl
xor
mov
jp
mov
mov
leave
cmp
repnz
notb
lret
loope
pop
and
inc
fistpll
test
fwait
or
mov
jno
imul
dec
bound
cmc
mov
mov
fisttps
xchg
vminpd
outsb
jae
xor
into
scas
stos
sbb
insb
outsl
sub
cmc
cmp
mull
sbb
fsub
dec
scas
fneni(8087
inc
adc
loopne
mov
lahf
int
sbb
push
or
push
mov
ficompl
rcll
dec
in
aam
pop
add
data16
fadds
mov
lahf
jp
pop
xor
add
fcoml
icebp
test
dec
cwtl
sbb
call
jge
aad
lret
jp
into
fsubrs
sub
arpl
leave
sbbl
mov
cmp
jne
jmp
push
in
lds
adc
push
ret
lret
stos
mov
inc
ja
dec
stos
shlb
test
adc
popl
adc
sbb
lds
lret
mov
pop
pushf
push
cmpb
aam
icebp
pop
jb
scas
xorb
lock
mov
sbbb
rcr
pop
sub
aaa
cwtl
insb
dec
inc
mov
daa
and
sbb
mov
test
adc
jns
xor
mov
jbe
xchg
imul
cltd
icebp
loopne
mov
jno
jge
aaa
les
and
pop
pop
inc
pop
imul
cmp
pop
clc
in
mov
arpl
sbb
mov
inc
mov
adc
mov
add
adc
mov
push
loopne
xchg
stc
push
sbb
jne
rol
push
cmpsb
or
shll
or
les
iret
jmp
cmp
sbb
lods
jb
clc
ja
mov
loopne
xchg
mov
cmpsl
mov
shlb
xlat
rclb
sbb
jge
inc
test
ds
sahf
pop
xor
push
ljmp
dec
mov
out
nop
or
int3
imul
imul
test
jmp
pushf
xor
mov
add
push
xor
loope
or
inc
fwait
int
sbb
mov
js
insl
stc
add
dec
repnz
sbb
push
push
out
scas
or
jecxz
insl
rcr
jno
and
xor
outsb
icebp
bound
pushf
out
pushf
adc
pusha
mov
mov
pushf
inc
add
ds
hlt
fcmovnu
push
into
in
xchg
sub
inc
mov
mov
mov
testb
fmul
pop
push
push
inc
push
xchg
stos
push
lahf
roll
sbb
movsl
popa
xchg
xor
fnsave
lds
arpl
or
idiv
cmp
sbb
or
cli
rcrb
sbb
das
xor
mov
inc
and
xor
test
pop
or
lods
aad
xlat
mov
mov
inc
scas
daa
and
adcl
lods
mov
jb
ss
int3
fst
cmp
jp
pop
add
adc
pop
sahf
pop
inc
jp
push
fimull
iret
sub
mov
repz
adc
clc
inc
xchg
mov
divb
jmp
push
xor
push
add
inc
cs
cmp
ret
mov
adc
or
mov
cmp
jo
sbb
push
push
and
jle
sbb
jo
shrb
sbb
jo
cmp
mov
adc
cmp
repnz
adc
adc
rcr
xchg
or
mov
cmp
jmp
fcoml
aad
int3
dec
push
cmc
sbb
scas
push
push
sbb
cmp
or
cmc
and
sbb
or
test
movsl
push
orb
insb
iret
mov
push
stos
xor
call
je
fs
divl
mov
aas
arpl
or
setl
movsl
cmc
mov
xorl
mov
orl
jb
xor
mov
push
rorl
jnp
sbb
leave
mov
stos
call
cmp
sbb
mov
jge
testl
mov
or
stc
xchg
mov
lret
pop
rcr
shrb
imul
pop
icebp
in
outsb
jecxz
stos
mov
mov
aaa
pop
inc
xor
in
les
dec
sub
mov
cld
jne
jecxz
cmc
push
and
mov
insb
cmpl
scas
lahf
hlt
mov
xchg
jnp
roll
pop
cld
xchg
sbb
or
cltd
xor
clc
sub
jle
imul
stos
enter
ret
push
movsl
add
adc
adc
and
bound
cmpsb
cs
in
into
pop
pop
push
adc
popf
inc
dec
cmp
movsl
es
jl
xor
outsb
xorl
int
xor
push
shll
cwtl
clc
nop
push
push
ret
lcall
cmp
iret
pop
hlt
mov
clc
and
fs
and
push
hlt
push
adc
cs
cltd
pop
test
icebp
sbb
inc
sub
popf
popf
push
inc
test
lahf
sbb
out
fildl
xchg
sbb
and
fwait
out
mov
mov
inc
inc
cmp
mov
xchg
data16
cmp
mov
cmp
sbb
mov
mov
xor
sbb
pop
xor
mov
inc
jge
test
pop
je
scas
push
fisubl
dec
cmpsl
push
dec
sbb
mov
mov
adc
or
pop
xchg
into
in
gs
nop
test
xor
loop
orl
inc
cmp
jecxz
and
sti
push
dec
cmp
loop
mov
add
jo
dec
sub
subl
cmp
or
adc
jnp
fiaddl
shlb
mov
jo
arpl
mov
mov
shrl
mov
jne
scas
pop
das
stos
leave
sti
sbb
jb
lds
xor
mov
mov
jmp
ja
iret
dec
out
pop
or
rcll
mov
jmp
dec
dec
outsb
jmp
jnp
xchg
int
into
sbb
lret
loopne
cmp
fiaddl
mov
push
pop
xor
stos
cltd
mov
dec
jns
jmp
or
ds
clc
sub
fnstsw
inc
stc
sub
dec
into
les
ficoms
sub
rcll
adc
popa
mov
sbb
push
dec
add
frstor
lret
movsb
push
push
mov
imul
or
das
rorb
adc
not
mov
and
hlt
jle
daa
or
mov
mov
jl
inc
jo
and
stos
popa
mov
arpl
mov
xchg
gs
loope
ja
jmp
aad
mov
das
push
cli
cli
jbe
xchg
gs
mov
int
inc
subb
aam
mov
xchg
fiaddl
xchg
xor
mov
jl
adc
gs
or
cmp
imul
jbe
sub
std
loop
and
fldt
aas
call
popf
mov
mov
cmp
int
mov
ja
adcl
cs
jmp
popa
mov
ljmp
xchg
lret
pop
outsl
imul
sarl
cmpsl
mov
cs
dec
mov
movsl
xchg
lea
push
and
aam
mov
stc
insl
aam
pusha
xor
mov
and
pop
push
jb
aas
xchg
ficompl
lds
rorl
mov
fs
mov
inc
push
lret
sbb
andb
mov
mov
addr16
mov
or
pop
bound
fdivrs
jmp
cwtl
xchg
jno
stos
or
addb
in
inc
mov
test
sbb
fisubs
lcall
icebp
cmp
roll
sti
xlat
or
fdivrs
mov
clc
adc
scas
or
xchg
pusha
push
or
jmp
js
add
adc
scas
inc
pop
arpl
repnz
and
mov
stos
ljmp
xchg
mov
mov
or
icebp
enter
cli
mov
popf
mov
sub
add
mov
arpl
cwtl
push
inc
and
sub
popf
js
xchg
jb
cld
test
mov
xchg
mov
lret
xor
aam
cltd
das
fmuls
and
or
dec
dec
xchg
fnstcw
stos
js
stos
sbb
loop
push
mov
add
ljmp
cli
movsb
imul
pop
xchg
sbb
je
cmc
xchg
cmp
std
add
rcrl
cmpsb
xor
or
push
les
mov
cs
test
sub
xor
jl
adc
push
idivl
add
out
subl
sub
mov
movsb
imul
cmpl
or
shrb
sub
fst
das
cmp
nop
adc
and
pop
sahf
cmp
pop
mov
repnz
sbb
cmp
fwait
insl
stos
mov
mov
cmpsl
outsl
adc
fwait
cs
add
xor
push
test
sbb
sti
lods
inc
lahf
sbb
push
cmp
iret
jmp
add
push
loop
push
rcrl
sub
popa
mov
mov
adc
sub
add
mov
scas
jecxz
jns
sub
sti
dec
cmovo
pop
repz
pop
mov
inc
and
leave
push
sbb
mov
adc
lahf
mull
movsb
aam
loope
jp
mov
daa
jno
data16
rorl
movsb
pop
and
fimull
jle
lods
jg
mov
add
add
arpl
pop
pop
jne
cmc
pop
std
addl
xchg
call
cmc
pop
stc
enter
lods
loopne
movsb
outsl
inc
jo
sub
xor
mov
jns
xchg
insl
add
jb
xchg
add
xor
xchg
shll
and
hlt
and
sbb
cmpsb
xor
insl
shrb
rcrb
push
imul
xor
pop
pop
cmp
mov
adc
sbb
cmp
inc
movsb
rcr
roll
push
xor
dec
dec
or
lods
movsb
scas
fidivl
pop
cmpsb
inc
lcall
sub
mov
sub
es
inc
push
lahf
je
rol
add
pop
sbb
inc
and
cmp
gs
sahf
in
push
rclb
aaa
cmpsl
pushf
mov
fsubs
stos
addl
movsl
cmpsl
and
jg
xchg
arpl
inc
mov
sub
push
ret
xlat
adc
call
xchg
fldenv
in
stos
pop
xchg
dec
mov
sub
push
push
xor
push
xor
xchg
adc
aas
aad
je
jo
imul
cmpsl
sbb
insb
stos
rcrb
ja
popa
sbb
scas
insb
inc
daa
outsb
cmp
adc
int
mov
mov
iret
mov
jle
cld
rcrb
or
mov
mov
addl
xchg
sti
jmp
cli
jb
mov
lods
sahf
jp
and
xor
jnp
arpl
dec
ds
dec
out
incl
jb
add
outsl
xor
loopne
lret
or
jb
jp
adc
mov
scas
ret
mov
sbb
push
divb
mov
pop
jle
pop
loop
mov
mov
and
cmpsb
shlb
or
inc
je
rolb
add
dec
dec
out
fwait
push
pop
add
fcmovu
fcmovnb
inc
xchg
mov
loope
cmp
mov
pop
adc
subl
mov
mov
repnz
ds
mov
push
push
push
sub
push
mov
dec
mov
stos
mov
js
pushf
sbb
sub
add
stc
test
outsl
cmp
popa
jl
cmp
ljmp
push
jbe
mov
stc
int3
dec
in
notl
stos
push
cmp
in
sti
neg
mov
insb
adc
jno
jno
xchg
sub
loopne
add
test
add
divb
daa
dec
scas
mov
aaa
andl
pop
sub
dec
inc
pop
int3
and
sub
push
mov
mov
out
sbb
cli
test
cmp
mov
mov
push
cmp
inc
sti
outsb
xchg
adc
jno
movsb
stos
jae
sbb
xor
sbb
das
pop
cmp
ret
jg
push
inc
loop
out
mov
in
add
aam
sti
jp
jle
sbb
clc
hlt
aad
xor
lcall
or
add
dec
sbb
shrl
addr16
ljmp
ficoml
cld
cmp
push
push
mov
mov
or
inc
jecxz
dec
cmp
out
pop
mov
dec
sbb
xchg
mov
repz
mov
mov
mov
sti
push
push
xchg
test
popa
lret
pop
cmp
in
lods
lahf
jl
pop
or
push
stos
and
add
lods
dec
ja
jns
pop
jle
sub
jl
fwait
dec
es
pop
mov
xorl
adc
daa
inc
and
pop
loopne
jnp
sbbl
addb
push
imul
xchg
outsb
repz
sbb
xchg
sub
ds
lods
std
daa
sbb
cmpsb
jg
pop
lahf
fwait
jmp
jbe
xchg
in
cmp
adc
cmp
cmpsl
imul
cs
push
lea
sub
mov
pop
mov
inc
jecxz
pop
jae
push
or
mov
pop
xchg
push
jg
mov
jl
adc
cmp
add
movsl
pushf
mov
popf
pop
fidivrs
pop
mov
mov
stos
sbb
dec
inc
mov
das
out
adc
add
jnp
jmp
fisttpll
in
mov
mov
fsubrl
int3
cwtl
shll
out
dec
enter
idivb
mov
ds
jecxz
cs
mov
idivb
rcll
in
adc
push
or
pop
lcall
sbb
cmp
ret
bound
jl
adc
dec
lock
lret
imul
stos
enter
outsl
in
pop
sbb
shlb
push
cmp
adc
test
shl
inc
cmp
imul
inc
mov
mov
mov
fsts
jg
pop
pop
add
add
inc
shlb
cmovae
cld
xchg
cmpsb
cmpsb
sti
push
xchg
jns
mov
xchg
cmp
fwait
xlat
cmpsl
pop
dec
out
jae
mov
lods
imul
aad
mov
mov
je
sub
movsb
lcall
lahf
and
out
cvtpi2ps
fs
ljmp
mov
jbe
popl
mov
adc
mov
stos
adc
negb
push
bound
adc
push
push
mov
push
rolb
js
repz
or
ss
mov
ja
xor
mov
je
add
inc
mov
cwtl
lods
and
push
or
sub
ljmp
pop
inc
in
adc
nop
inc
nop
xchg
mov
pop
mov
stos
outsb
jle
inc
and
xlat
pop
fwait
xor
adc
jmp
aam
mov
cs
cli
and
dec
sbb
inc
daa
add
sub
daa
mov
pusha
sbb
xlat
add
xor
and
dec
add
jbe
mov
dec
jns
sub
sti
daa
add
popf
les
sub
gs
data16
or
mov
imul
les
and
mov
gs
jno
push
inc
adc
xlat
sbb
sub
cmpsb
or
jle
rcrl
lret
out
mov
sbb
mov
scas
push
lret
imul
std
shrl
in
fstpl
gs
clts
sahf
xchg
pop
mov
xor
jge
nop
outsl
pop
push
jno
insl
jge
cmpsl
dec
ds
xor
dec
mov
rcrb
fildl
push
inc
jb
insl
icebp
ret
xchg
jecxz
test
imul
dec
sub
mov
jg
mov
inc
push
cltd
cmpsb
and
bound
push
mov
dec
sbb
and
fdivl
push
inc
lea
in
loopne
dec
pushf
xor
mov
fs
movsb
in
dec
sub
jmp
fadd
pop
push
arpl
insb
stc
std
pushf
pop
pop
xor
jle
idivb
stos
mov
iret
ss
shrl
popf
cmc
jo
adc
fisttpl
adc
scas
mov
push
xchg
inc
stos
fistpll
jno
fs
bound
push
sub
out
xchg
fdivrl
dec
and
imul
jmp
ja
fcmovu
sub
dec
in
int3
lds
mov
movsl
mov
mov
jecxz
xchg
fsub
pop
sbb
popa
les
xor
outsb
loope
test
jg
xchg
test
xchg
add
xor
dec
outsb
mov
jbe
adc
inc
xlat
adc
adc
pop
xor
stos
dec
mov
and
cmp
push
arpl
xchg
pop
xchg
mov
sbb
sbb
jle
xchg
inc
adc
inc
stos
mov
add
lcall
roll
pop
test
pop
int3
gs
mov
test
xor
xchg
lea
dec
push
daa
xchg
mov
jne
dec
or
fisubrs
pop
daa
movsb
push
push
xchg
jecxz
ja
stc
inc
adc
daa
stos
lock
pop
loopne
xchg
cwtl
xlat
jbe
mov
adc
stos
rorb
call
repz
and
jle
js
push
jle
stc
sbb
out
cmp
inc
fsubrl
stc
and
test
push
aas
mov
outsl
fsub
mov
and
jno
sub
adc
cmp
arpl
lcall
enter
mov
pop
mov
pop
lock
jnp
push
jle
fs
sbb
pop
aam
mov
jo
push
adc
push
test
js
adc
dec
sbbl
iret
pop
das
idiv
mov
mov
pop
in
popa
jg
jno
repz
insb
aas
lahf
xchg
das
mov
adc
mov
mov
inc
mov
hlt
xor
repz
stos
hlt
std
push
xor
pop
jne
addb
jmp
mov
lds
ljmp
sti
mov
fbstp
add
adc
pop
fcomip
scas
sahf
or
inc
pop
xor
xor
jl
ficoml
sbb
inc
daa
fildl
addr16
xchg
xchg
xchg
aam
hlt
mov
lock
mov
pop
orb
jmp
out
sbb
subl
sub
xor
cmp
mov
fists
fs
push
push
xor
xor
lahf
fisubs
dec
outsb
pop
pop
mov
cmp
dec
bound
mov
fsts
inc
push
insl
xor
cwtl
mov
shl
xor
popf
std
pop
mov
loopne
and
adc
cld
xor
push
xor
mov
shll
xor
xchg
fs
xchg
lea
jecxz
cltd
jecxz
jae
mov
push
fst
jmp
dec
cmp
aam
fisttps
test
lret
add
mov
xchg
jp
idivl
fnstenv
jno
xor
mov
cmp
inc
lds
dec
cmp
jecxz
cmp
cwtl
sbb
sub
shr
push
inc
hlt
leave
add
shlb
cmpl
push
sbb
icebp
pop
js
into
out
sahf
sbb
out
cmp
adc
movsb
aad
xor
daa
pop
adc
ljmp
push
shll
jns
sub
and
stos
jge
and
cmp
add
jge
shlb
dec
fstps
test
out
mov
inc
out
xchg
enter
mov
jecxz
pop
jge
xchg
cmp
lret
aas
mov
adc
sti
int3
fadds
pop
or
scas
shll
shrl
fs
in
sbbb
cmpsl
movsl
mov
or
inc
pop
pop
fsubs
jns
sbb
pusha
icebp
inc
inc
and
sbb
inc
ja
mov
lret
pop
push
adc
jnp
pop
lds
push
js
inc
jge
xchg
out
fildll
push
push
push
leave
jae
sub
and
push
lahf
repnz
aam
popa
push
movsl
mov
aam
int3
adc
outsb
adc
lret
mov
inc
ss
adc
mov
xor
test
lret
loop
pop
push
pusha
andl
cld
inc
adc
or
mov
je
pop
lock
add
cli
hlt
lcall
xchg
sbb
push
jne
hlt
adcb
shrl
test
jl
or
cmpsl
scas
leave
cmp
push
jns,pn
filds
inc
lcallw
fdivl
jo
pop
bound
mov
adc
add
arpl
lahf
clc
sub
adc
in
dec
insl
mov
adc
adc
add
pop
add
pushf
fidivrs
jl
sbb
aaa
mov
inc
jle
xor
jge
inc
out
incb
xchg
out
jecxz
or
mov
aam
test
fs
outsb
jl
cmp
das
pop
inc
int
filds
inc
adc
jmp
mov
xchg
test
call
loope
bound
jns
ret
mov
xchg
jl
adc
test
stc
inc
jecxz
out
ljmp
dec
adc
subl
iret
sbb
push
mov
add
loopne
sub
sarl
push
daa
lock
loope
inc
sub
call
mov
rcll
cmpb
or
mov
inc
gs
cmpsb
inc
adc
add
idivl
cltd
mov
cmp
or
mov
sbb
cmp
pop
and
insl
cmp
add
mov
das
jmp
adc
inc
aam
xchg
xor
out
ljmp
fnsave
cmp
mov
and
daa
cmc
adc
nop
pop
push
sub
sub
cmp
adc
popf
add
jb
dec
pop
dec
inc
xchg
pop
loop
aaa
hlt
lods
adc
pop
outsb
in
daa
pop
popa
jbe
je
cmp
xchg
jle
fdiv
fstpt
in
jmp
daa
push
inc
inc
std
sbb
jmp
sbb
mov
dec
jecxz
gs
inc
test
stos
sbb
addb
sub
pop
jge
in
mov
or
out
fwait
pusha
jnp
mov
adc
push
in
pop
adcb
orb
fbld
movsb
shlb
mov
adc
and
or
pop
mov
push
lret
ss
jl
cmp
cli
jns
pop
lret
fldt
loopne
inc
stos
add
decb
mov
adc
and
mov
hlt
xchg
rorb
add
shl
push
daa
test
add
mov
cmp
or
xchg
loope
adc
inc
mov
mov
pop
mov
cli
ret
sahf
aas
xchg
shl
mov
ret
jmp
push
cmpsb
rolb
add
cmpsb
mov
xlat
push
and
add
arpl
jbe
inc
push
das
push
sbb
repz
data16
movsb
lcall
add
out
shll
mov
sbb
dec
scas
imul
stc
adc
fiadds
or
add
mov
push
pop
pop
aaa
sbb
cmp
mov
sahf
jge
repz
lahf
pop
int
or
cli
mov
aad
cmp
fdivp
pop
fisttpll
adc
add
nop
inc
or
adc
push
daa
adc
jo
aam
scas
pop
sbb
adc
test
jecxz
pop
ja
dec
incb
xor
cmp
cmp
cltd
push
mov
sbb
std
xchg
pop
xchg
adc
cmp
sub
insl
subl
fstpl
xchg
ja
push
inc
xor
sub
lods
xlat
fbstp
mov
and
mov
xor
inc
lods
jecxz
jns
test
movsb
loopne
shr
and
mov
fiaddl
imul
pop
in
cmp
mov
loopne
pop
iret
adc
andl
inc
lret
inc
stos
mov
jge
push
or
and
mov
mov
mov
pop
jmp
inc
imull
leave
fidivl
sbb
bound
xor
mov
movsb
inc
and
movsl
lret
jns
push
sbb
sub
pop
mov
dec
bound
mov
std
push
fucomi
movsb
xchg
fmuls
pop
loopne
stos
aad
jle
or
shll
test
insb
fisttps
mov
nop
test
popf
add
test
xor
mov
pop
pop
dec
lret
orb
ds
mov
mov
inc
aaa
and
lahf
insl
subl
es
push
add
push
pop
xor
push
pusha
repnz
xchg
idiv
fisubl
push
adc
into
jb
movsl
test
add
pushf
outsl
cltd
mov
imul
repnz
pop
sbb
rolb
fcmovne
xchg
sub
out
ja
cld
jne
push
dec
test
mov
jne
jle
fisubrl
in
mov
add
jo
in
sbb
fisubl
xchg
jmp
inc
inc
mov
xchg
mov
push
pop
pop
xlat
jbe
enter
imul
insb
cmp
pop
lods
cmc
repz
sub
cltd
mov
cwtl
rcll
and
test
dec
scas
js
cmp
xchg
mov
jmp
in
dec
fwait
aad
lds
icebp
test
mov
icebp
lods
adc
arpl
mov
test
and
pushf
or
paddsw
push
cmp
xor
insb
mov
inc
pop
jle
sbb
adc
addb
movsl
mov
push
dec
mov
cmp
ja
js
dec
repnz
jns
aad
lret
andb
mov
mov
dec
aas
or
scas
lds
into
in
inc
cmp
cld
repz
fistpl
inc
inc
aad
pushf
xchg
xchg
nop
sbb
jge
filds
pop
rcrb
out
adc
pop
pop
mov
xorl
test
nop
iret
int
aad
pop
stc
stc
mov
cmp
or
push
mov
jge
jnp
out
lods
iret
xchg
jae
sbb
pop
int
inc
jns
cmp
mov
aad
lret
into
dec
insl
push
leave
cmp
filds
xchg
mov
pop
int
push
bound
int3
rorb
sub
mov
mov
add
repz
dec
jae
push
cmp
cmovg
out
xor
cmp
clc
cmp
push
rcl
add
ret
insl
popa
cmpsl
jge
pop
scas
mov
es
or
cmpsl
fpatan
shl
cli
sub
rclb
idivb
push
dec
lret
add
lcall
inc
xchg
popf
sub
mov
lods
xor
mov
addr16
jns
mov
and
and
jmp
test
sbb
jl
pushf
pop
inc
xchg
xchg
xor
xor
repnz
sarb
mov
cmpsl
push
mov
dec
pmuludq
dec
xlat
inc
mov
ja
add
lods
ds
xchg
xchg
hlt
sbb
lods
scas
das
mov
pop
in
movsb
loopne
insb
mov
mov
movsb
cmp
ficompl
inc
jecxz
sub
adcb
out
popf
mov
adc
mov
lock
push
repz
push
pop
ja
fidivrs
imul
jp
test
arpl
inc
sub
in
xchg
cmp
or
xor
mov
xchg
cmp
inc
shll
cmp
loopne
ds
xorl
repnz
push
loop
xchg
movl
enter
fisubrl
outsb
mov
xchg
mov
lock
fisubl
shlb
icebp
pop
gs
lods
popa
test
pop
mov
jne
adcb
shlb
xor
pushf
mov
push
sub
ja
mov
lahf
add
push
ss
jle
mov
inc
je
cmp
and
fmull
lret
push
mov
add
xor
and
les
sbb
nop
cmp
imul
test
xchg
pop
or
mov
push
push
std
push
es
sbb
aam
push
inc
add
cmp
xor
and
mov
xchg
and
xchg
scas
jne
lds
repz
arpl
cmp
scas
cs
xor
fstl
pusha
ficoms
push
jb
shll
xchg
into
jb
cwtl
jb
sti
push
cmp
or
adc
xchg
decl
icebp
gs
dec
cmp
dec
mov
xchg
dec
sbb
orl
subl
cmpb
enter
in
xor
mov
push
test
lods
add
in
ljmp
push
nop
or
aas
adc
xor
xchg
rcrl
shr
into
adc
pusha
xor
push
fisubl
cmp
or
decl
xor
pop
dec
mov
push
int3
adc
sub
ret
push
std
push
xchg
inc
jae
pop
ret
leave
xlat
rcr
mov
jne
lahf
inc
dec
push
insb
mov
inc
mov
sub
icebp
push
into
inc
pop
mov
mov
icebp
stos
std
rcll
loope
mov
cmp
lds
xchg
lods
lock
jnp
mov
shrl
sbb
loopne
jbe
sarb
icebp
mov
rolb
pushw
icebp
std
push
mov
cmp
mov
mov
fcmovu
negl
js
movq
ret
mov
scas
ljmp
sub
lahf
push
jp
jecxz
outsl
inc
push
xlat
mov
mov
lods
scas
mov
xchg
sarl
xchg
mov
imul
add
xor
pop
or
imull
adc
and
mov
add
cs
sbb
pop
rcrl
xor
es
xchg
lahf
lahf
and
or
std
cmp
sti
dec
cmpsl
ja
sub
cmp
cmpsl
pop
add
mov
mov
data16
cmp
add
add
xchg
insl
or
popa
dec
in
les
mov
cmp
add
mov
mov
into
addr16
dec
mov
pop
movsb
adc
xchg
adc
iret
rorl
popa
out
inc
pop
icebp
das
push
and
int
and
push
pop
aam
mov
lcall
enter
cmp
mov
rorb
xor
fidivrs
shll
add
mov
js
aas
fbstp
mov
and
clc
jge
xor
jge
mov
xchg
dec
xchg
jns
lahf
cmc
les
imul
jmp
lods
ret
xchg
loope
loopne
inc
pusha
mov
cmpsb
pop
orl
andb
mov
mov
cmp
cmp
fsubr
pop
push
ss
arpl
mov
jno
pop
lds
std
mov
nop
test
push
repnz
ss
inc
mov
clc
out
jb
ror
dec
das
jno
mov
adc
outsb
lahf
ljmp
and
in
or
out
cmp
je
repz
scas
add
sub
fcomps
loopne
lret
cmc
push
sub
int3
dec
cmpsb
and
jecxz
jecxz
aaa
push
mov
pop
add
cmc
imul
movsl
add
xor
inc
or
and
scas
ja
or
into
pop
test
mov
push
cs
push
imul
push
mov
and
outsl
adc
inc
push
pop
xchg
imul
repnz
add
addr16
push
or
or
sub
stc
sarl
ss
jno
sti
dec
outsl
dec
mov
mov
cltd
sarb
stos
cs
insb
sar
add
pop
and
mov
jno
aaa
fsubrp
dec
inc
popf
mov
jne
lods
mov
push
test
mov
push
xchg
and
imul
cmc
rorb
xchg
int
loopne
cmpsl
shlb
incl
iret
mov
push
roll
jo
shl
int3
aas
mov
sub
jp
xchg
dec
or
mov
sub
xor
sbb
cmpsb
jnp
imul
dec
mov
xchg
cltd
jnp
sbb
sbb
cmc
fwait
dec
clc
push
inc
hlt
insl
data16
cmp
repnz
popa
sub
popf
inc
stos
xchg
or
or
into
sbb
mov
mov
shll
fidivrl
or
sub
aam
sub
outsb
and
jl
cmovs
dec
daa
jmp
or
sub
jno
xor
push
cltd
adc
push
test
mov
lret
pop
fwait
jb
ficoms
loopne
mov
popf
add
pop
fnsave
test
xor
push
inc
gs
push
std
mov
and
fldcw
shrl
mov
mov
fidivrs
nop
mov
push
xor
aad
push
push
pop
pop
je
stos
jecxz
adc
mov
pop
push
sub
inc
cltd
mov
push
mov
jle
lcall
add
movsbl
xchg
std
jg
mov
into
jl
xchg
push
push
ljmp
imul
ljmp
push
fs
sar
mov
jmp
dec
je
addl
adc
xchg
int3
test
xchg
mov
mov
fstl
sbb
jae
gs
inc
add
xchg
call
push
stc
enter
sub
xchg
inc
xchg
subb
scas
test
jmp
clc
inc
xor
cmp
rcrb
daa
mov
jecxz
mov
mov
xor
repz
lret
lods
icebp
add
xor
ret
testb
xchg
pop
jl
imul
movsb
xor
mov
repnz
mov
test
lea
xchg
pop
ret
add
inc
repnz
inc
jb
jns
jns
cld
dec
add
ja
dec
iret
or
jns
mov
add
outsb
jno
push
sub
jae
sbb
insl
pop
iret
nop
xlat
test
mov
fwait
pop
pop
imul
mov
and
shl
outsb
jnp
mov
cmp
cmp
dec
pop
push
ja
push
mov
xor
insb
cmpb
dec
jp
hlt
mov
sahf
adc
sbb
and
xor
jno
dec
sub
int3
mov
lds
xor
fs
pop
shr
xor
int3
cmppd
dec
inc
pop
xchg
ret
jnp
cwtl
ds
cld
mov
jb
push
push
push
gs
xor
lock
or
push
pusha
pop
movl
scas
test
lods
cmp
push
mov
inc
loopne
fmulp
fcomps
fwait
jge
jbe
js
imul
sbb
cmp
cmc
jno
jl
mov
mov
mov
inc
outsb
or
sub
mov
ss
pusha
xchg
adc
cli
mov
xchg
jb
dec
adc
fisttpll
mov
or
ror
xchg
inc
mov
fildl
dec
mov
add
loope
adc
leave
nop
shll
dec
inc
insl
std
rorl
xchg
int3
push
xor
jg
pop
sarl
aaa
out
sbb
inc
lock
push
push
and
lock
lret
insl
mov
orb
xor
movsb
test
lcall
pop
in
adc
ja
mov
push
sti
repz
or
pop
loopne
repnz
test
into
lock
repnz
xor
mov
dec
dec
or
xchg
mov
xor
stc
int
pusha
mov
or
data16
movl
add
inc
or
and
xorl
jg
cmp
or
push
add
movsl
mov
imul
cmp
movsb
sarb
arpl
adc
fstpt
sub
inc
xchg
insb
push
dec
mov
push
dec
dec
nop
iret
imul
sbb
cmp
add
mov
inc
adc
loopne
call
jo
jne
xchg
repnz
pusha
xor
mov
mov
and
data16
mov
fidivl
mov
sahf
fwait
add
out
adc
jae
inc
bound
jnp
ljmp
test
sbb
jbe
push
mov
sahf
lods
sub
int
pop
xchg
test
jns
add
sub
int
andb
sbb
xor
inc
hlt
cmc
outsb
test
js
sub
jl
lds
cmp
int3
ficoml
cmp
push
mov
scas
outsb
sbb
iret
into
add
mov
insl
xor
outsl
inc
adc
jbe
push
ja
add
or
icebp
lret
push
cld
push
sahf
subl
dec
stos
iret
dec
lret
ret
sbb
xchg
xchg
inc
loop
jle
xchg
call
mov
add
inc
cld
fists
mov
cmp
inc
mov
rclb
scas
pop
pop
mov
inc
aam
movsl
xor
lea
aas
adc
repz
xchg
inc
clc
jne
xchg
rorb
lahf
bnd
mov
dec
fsub
sbb
or
mov
scas
icebp
sbb
xor
inc
push
packsswb
loop
clc
cs
mov
je
pop
mov
jb
test
das
inc
or
mov
loope
push
dec
sub
dec
adc
mov
push
cmp
sub
testb
into
jp
sub
in
lea
test
lods
ds
adc
ret
add
pop
sub
push
jge
jg
test
mov
lret
mov
push
mov
sbb
dec
mov
adc
loopne
jne
in
pop
inc
cld
pop
ss
rcr
cli
fwait
xor
mov
enter
imul
or
enter
js
sti
cmp
pop
fs
mov
outsb
js
or
sbb
mov
repz
fwait
sbb
je
xchg
dec
or
xlat
leave
cmp
leave
testb
shl
jnp
push
sahf
cmp
mov
and
sub
mov
xlat
push
lea
jl
fisubs
pushf
pop
fs
rclb
and
daa
stc
cmpsb
pop
sub
jle
inc
jno
data16
and
pushf
pushf
mov
mov
jns,pn
in
fidivrs
dec
xor
mov
pop
mov
sahf
leave
mov
xchg
sub
aas
push
ja
addr16
rcl
addr16
jmp
in
xor
fsubrs
sahf
adc
cmp
frstor
insl
add
cmp
leave
fwait
shll
sub
pusha
lds
idiv
jg
mov
inc
daa
adc
inc
add
addb
and
daa
adc
mov
jl
ficompl
push
mov
fldcw
popf
fldl
xchg
test
jecxz
mov
call
push
fwait
or
xchg
and
mov
lahf
out
pushf
inc
adc
ret
addr16
push
cmp
push
cmc
pushf
xor
xchg
dec
mov
lahf
xchg
jmp
js
call
fidivs
sub
fbstp
sarb
mov
or
sbb
fsubrs
and
and
in
rcll
dec
out
cli
xor
xchg
imul
fs
jmp
adc
sbb
lock
adc
xchg
fcompl
popf
xlat
push
cmpsl
orl
dec
out
mov
inc
xchg
lock
xchg
pop
xchg
repnz
lret
pop
int
ljmp
in
andb
adc
scas
pop
enter
repz
movsb
mov
cmp
xchg
xor
jge
xchg
test
arpl
hlt
inc
sti
push
push
sbb
lahf
stos
sub
out
ret
es
cmc
cmp
in
inc
xor
cltd
pop
mov
pop
enter
icebp
pushf
mov
rcr
pop
pushf
lods
cmp
aas
sahf
aad
loop
sbb
pop
subl
xor
mov
add
cmc
xchg
call
sbb
pop
js
inc
std
sbb
fstpt
xor
or
and
mov
xlat
mov
cmp
ds
adc
push
mov
mov
lret
imul
add
add
push
pop
test
mov
sbb
arpl
mov
je
mov
cltd
xchg
mov
fwait
daa
xor
inc
cmp
insb
test
cld
subl
pop
push
notb
fcmove
adc
xchg
sbb
and
xchg
mov
jae
pushf
mov
inc
sbb
fdivr
iret
loop
push
shrb
mov
pop
xchg
adc
imul
sbbl
xor
mov
mov
out
push
stc
lahf
lea
mov
push
xchg
sti
and
xchg
push
mov
mov
push
test
cwtl
in
sub
fwait
jae
out
repz
cmp
push
fcomip
clc
movsl
fistpll
movsl
fisttps
inc
mov
sub
pop
dec
dec
jae
jnp
push
ss
les
adc
data16
sahf
push
xor
sub
int
push
xchg
int3
fisttpll
add
pop
lret
fisubrl
pop
dec
int3
jecxz
cmp
pop
andb
repz
jecxz
sbb
aas
emms
and
pop
xor
inc
xchg
or
lods
sub
jl
test
adc
iret
fst
shrl
and
clc
lock
jae
jmp
jno
dec
rclb
push
xchg
inc
dec
fs
push
ret
roll
int3
add
inc
pop
lret
add
mov
mov
mov
lret
adc
fwait
and
mov
xchg
aad
cwtl
mov
or
adc
add
ljmp
sub
stc
loope
mov
mov
lods
hlt
fnstsw
popa
shll
daa
repz
sub
ljmp
sarb
int
and
cmp
test
sub
cmp
inc
iret
out
push
aas
movsl
clc
mov
mov
lcall
rclb
roll
popa
inc
xchg
or
fcompl
cli
mov
cmp
adc
mov
and
dec
jl
ret
cmp
adc
pop
pop
mov
sbb
stos
dec
fstpl
faddp
scas
mov
lahf
cmp
inc
push
ret
mov
in
pusha
xchg
lret
sahf
pop
xor
lea
add
jns
rclb
xor
pop
leave
mov
adc
enter
push
gs
ljmp
dec
jecxz
xlat
addr16
lret
add
sbb
push
jge
jmp
imul
in
mov
jle
cmp
push
sub
adcb
cmp
cmpsl
xor
mov
and
xchg
gs
jbe
ja
sar
mov
test
push
les
popa
mov
and
sbb
inc
hlt
dec
jne
mov
je
scas
and
into
dec
into
addr16
and
mov
dec
xchg
sti
fsubrs
inc
push
out
ret
dec
aaa
or
adc
mov
mov
jmp
or
push
cmp
adc
or
int3
mov
lret
xor
aam
push
jecxz
inc
fs
bound
mov
das
outsl
aad
dec
add
pop
fwait
jne
pusha
dec
test
repnz
cmp
stc
push
jge
cltd
and
mov
loopne
aaa
imul
ds
xor
dec
mov
mov
mov
mov
lods
inc
add
cld
and
dec
int3
pop
sbb
push
xor
iret
push
mov
leave
and
ja
or
mov
subl
cltd
sub
mov
icebp
sbb
and
icebp
add
insb
push
call
lcall
mov
ds
mov
push
pushf
arpl
test
mov
inc
add
xchg
loope
pop
sub
testl
xchg
cltd
cld
adc
xor
or
cmp
inc
and
in
mov
test
leave
lcall
psubb
push
stos
insb
jo
mov
sbb
in
sub
xorl
sub
pop
xor
addr16
test
push
cmp
xchg
cmp
shrl
out
dec
ljmp
into
insb
pop
mov
mov
push
lods
aad
push
mov
adc
pushf
or
insb
out
mov
es
test
mov
push
out
out
shll
jl
ljmp
stc
jmp
mov
dec
push
or
cs
ljmp
std
cli
shll
add
and
or
xlat
pop
and
jae
mov
loop
adc
mov
pop
jecxz
popa
or
hlt
outsl
stos
int3
mov
inc
mov
adc
in
jns
pop
outsl
jo
ret
sub
mov
cli
sub
aad
dec
xor
add
loopne
jnp
dec
adc
ljmp
fildll
mov
hlt
addr16
outsb
xor
popa
inc
out
ret
int3
imul
js
shll
push
jo
push
andb
punpckldq
xchg
adc
push
lock
add
enter
sub
sub
sbb
sti
or
pusha
fiadds
mov
sbb
leave
shlb
aad
jnp
pop
jae
dec
addb
leave
cltd
es
insb
cld
js
out
pushf
pop
stos
adc
pop
test
jle
cmpsl
arpl
jl
dec
push
mov
jecxz
loope
popf
mov
dec
out
jo
sbb
in
test
shrb
push
int3
cmp
adc
lret
dec
cltd
outsb
pop
or
std
andl
cli
icebp
lds
sub
lock
cmp
pop
shr
loopne
aad
enter
sbb
xchg
inc
inc
scas
xchg
xor
jnp
pop
sbb
inc
insl
mov
cmc
lcall
mov
mov
bound
dec
vpaddb
inc
pop
ja
scas
outsb
movsl
mov
fsubrp
xor
scas
je
jp
xlat
iret
jmp
mov
enter
adc
dec
and
cld
nop
dec
cmc
mov
divb
inc
jp
jns
cs
enter
enter
or
mov
adc
push
fs
in
cmp
mov
xchg
jle
repz
mov
int3
adcb
fldcw
enter
cmc
data16
test
push
fcomps
les
sub
pop
and
nop
repnz
cmpsb
ret
cs
jmp
mov
or
in
inc
xor
push
jo
xchg
aas
mov
xor
cmpsb
mov
pop
lret
push
into
or
mov
push
jnp
mov
fs
cmp
pop
fwait
in
jae
jmp
or
xchg
jnp
cld
mov
rol
mov
pop
sub
add
lds
or
sbb
mov
xchg
push
sti
pop
enter
pop
mov
dec
mov
sbbl
and
ja
insb
cmpsb
out
scas
or
jno
fwait
mov
push
shl
xacquire
dec
dec
adcl
shl
inc
lods
jb
jecxz
sub
push
push
pop
mov
int
scas
push
movsl
sbb
adc
iret
sub
jl
insl
pop
jno
xchg
into
dec
push
cwtl
and
mov
leave
lock
fnstcw
adc
scas
cmp
mov
fstpt
je
aaa
xchg
mov
jl
sub
fnstenv
push
movsb
insl
faddp
test
loopne
dec
mov
sti
lods
into
sbb
lock
dec
hlt
push
dec
sti
mov
dec
insb
pushf
daa
insl
add
mov
push
adc
dec
mov
out
leave
dec
add
push
xor
test
icebp
or
fbstp
mov
insb
gs
es
add
jb
mov
push
mov
cld
mov
pop
push
pop
dec
js
pop
adc
fwait
js
adc
cs
hlt
push
movsw
pop
mov
mov
loope
xlat
sbb
ds
sub
xor
cld
das
jo
sub
test
cmc
aaa
adc
jp
inc
lcall
ljmp
stos
lock
repnz
popa
xchg
mov
dec
rcl
push
push
xchg
sub
hlt
fwait
sbb
dec
xorl
dec
fiadds
jo
test
pop
fisttpl
and
cwtl
xchg
outsb
sbb
int
cmp
into
lcall
test
hlt
jb
js
nop
and
or
add
icebp
inc
rcll
dec
fucomp
std
jl
iret
fdivrl
insb
mov
das
xchg
lea
sbb
jecxz
cwtl
pop
aam
push
add
lahf
mov
test
int
fcoms
xchg
clc
and
mov
jo
sarb
cmpsl
and
add
or
xchg
xchg
mov
xor
lret
mov
push
loope
shll
aam
mov
cmc
mov
lret
fisttpll
sbb
pop
jne
pop
arpl
xchg
inc
bound
test
imul
insb
or
adc
xchg
out
push
call
ss
cmp
push
add
sub
mov
xor
inc
push
stos
in
ret
sbb
mov
test
mov
jbe
loopne
popf
rclb
push
mov
das
js
shrl
dec
xchg
es
lods
jns
decl
out
jne
xchg
in
xchg
cmpsl
js
nop
inc
or
push
xor
lods
xor
movb
bound
out
mov
rolb
push
xlat
popf
dec
dec
xor
pop
push
and
jae
pop
rcrb
jmp
adc
mov
mov
out
popl
icebp
test
jp
mov
out
jge
dec
fimull
ja
and
push
popa
test
jnp
cmpsl
es
mov
fsubrs
outsl
adc
push
and
or
mov
push
push
adc
fldl
js
jp
je
mov
inc
dec
adc
aam
or
and
jecxz
loop
je
enter
fldl
iret
and
enter
fwait
call
add
hlt
pop
adc
loope
mov
inc
fldcw
mov
mov
mov
rorl
shr
or
sbb
xorb
dec
dec
stc
ja
mov
and
xchg
adc
inc
push
arpl
fwait
mov
dec
ret
mov
lock
xor
adc
outsl
jmp
cmp
dec
sahf
adc
push
jnp
inc
dec
stc
imul
inc
xor
pop
fnsave
cltd
aas
fisubs
icebp
iret
mov
sbb
or
cli
jg
sbb
sub
inc
repnz
mov
dec
pop
out
leave
and
jo
xchg
out
fcomp
pop
sbb
jg
fbld
push
mov
or
fistpl
jmp
mov
call
xchg
loopne
aaa
adc
mov
add
mov
sub
jbe
shll
mov
mov
dec
dec
xlat
pop
cmpb
div
cld
movsl
adc
fsubrl
loopne
inc
push
movsb
pop
outsb
jg
push
cmc
je
push
cld
movsb
mov
test
out
push
das
xor
adc
adc
sahf
call
and
movsb
xor
jns,pn
lahf
mov
aad
pop
out
fbstp
push
sbb
test
pop
sub
xchg
das
mov
mov
mov
aad
push
mov
adc
sbb
ret
dec
jns
rcr
xor
shll
jo
xchg
jae
mov
sti
jo
in
sbb
mov
inc
bound
mov
push
jbe
mov
lret
dec
push
pop
add
hlt
call
ljmp
pop
popf
inc
ja
jno
jecxz
sub
push
xor
imulb
pop
adc
sti
nop
xor
add
insl
adc
test
pop
xor
or
xor
stos
lea
pop
in
es
insb
pop
inc
mov
ljmp
jno
gs
dec
ds
xchg
xorl
lcall
ficoml
jno
inc
sbb
cmp
mov
jns
push
pop
push
test
mov
xchg
sub
push
inc
in
cli
data16
sbb
mov
shlb
in
repnz
jb
jo
mov
jmp
roll
xchg
call
addr16
mov
push
add
lcall
ja
inc
daa
rcrb
in
pop
fmuls
dec
bound
stc
sbb
jp
jb
jno
push
mov
int3
inc
call
add
cwtl
popfw
icebp
mul
xchg
mov
test
and
mov
arpl
mov
cmpsb
jo
push
jns
adc
cmp
aaa
mov
and
nop
hlt
int
xor
dec
fisubrl
lret
adc
std
rorl
or
repz
jmp
lds
in
addr16
mov
xchg
adc
inc
inc
xchg
cmp
loop
inc
pop
or
enter
xor
pop
mov
mov
das
call
shrl
shlb
or
and
stos
sub
mov
popa
xchg
dec
gs
inc
cs
cmp
gs
jns
out
add
pop
cmp
les
mov
xor
stc
stc
xor
xor
xlat
je
mov
add
ja
and
js
adc
sbb
cmp
leave
jb
test
rcrb
fwait
loop
lcall
push
fdivr
cs
loopne
aas
jae
inc
cwtl
cltd
jnp
dec
fnsave
and
test
push
pop
dec
jl
pop
xchg
mov
mov
inc
push
jl
out
xor
lret
pushl
dec
ret
dec
xchg
jnp
dec
jmp
add
icebp
dec
repnz
pop
std
sar
shl
fisubrl
mov
add
lods
ss
insl
test
stos
lods
cli
push
cmpsl
mov
and
lret
aad
rcr
sbb
mov
or
cmp
setl
lea
std
mov
movsb
lcall
adc
mov
pop
inc
jle
and
ljmp
jg
cmp
cmpsb
stos
xor
cmp
mov
cld
sub
int
mov
insb
and
mov
jl
push
cwtl
pop
es
mov
pop
add
push
sbb
mov
xchg
addr16
mov
xchg
orb
ret
push
push
inc
pushf
dec
fdivl
pop
aam
mov
les
cmp
pop
push
xor
mov
pop
mov
or
and
push
sarb
jecxz
das
sbb
and
mov
jl
fnstcw
inc
and
jb
fwait
mov
jl
test
push
loopne
push
fists
xchg
push
aas
dec
sarl
or
in
aas
mov
xor
cld
xchg
adc
sbb
mov
or
cmp
pop
or
or
xchg
sbb
xchg
loopne,pt
loope
xchg
dec
int
and
ja
push
adc
mov
shl
mov
dec
or
mov
out
push
loop
jno
inc
mov
jne
arpl
insb
xor
addr16
mov
idivl
scas
mov
hlt
inc
sbb
and
std
pushf
cmp
pop
fldt
popf
xchg
mov
and
xor
add
std
lea
adc
int
adc
mov
push
into
mov
push
in
xchg
jae
push
nop
fnsave
fcoms
inc
mov
adc
outsl
sub
xor
mov
jns
fists
rclb
clc
iret
push
std
xchg
mov
xchg
scas
arpl
es
clc
xchg
lea
insl
cmp
push
cmp
icebp
xchg
mov
xor
and
loopne
mov
mov
je
xor
test
cwtl
cmpsb
sbb
out
ss
jo
wbinvd
xchg
mov
jmp
xchg
shrl
pop
cltd
cs
and
scas
inc
das
ret
pop
xor
or
in
cmp
aaa
mov
sbb
sub
ds
in
pop
cltd
fimull
mov
pop
mov
inc
mov
repz
sub
pop
fsubs
pushf
or
nop
outsl
push
dec
and
out
pop
inc
dec
jbe
jecxz
into
jo
mov
pop
lea
adc
mov
and
sub
imul
adc
cwtl
pop
cmpsb
insb
add
mov
sub
mov
xchg
push
jl
imul
add
mov
popa
or
mov
test
mov
adc
inc
xchg
sbb
pop
sbb
xchg
xchg
or
bound
flds
mov
icebp
insl
scas
pop
mov
test
lcall
je
shl
pushf
shlb
std
cmc
outsl
sbb
and
mov
dec
cmp
addl
sub
testb
mov
sub
sub
les
pop
sti
mov
es
push
mov
mov
movw
cli
mov
stos
jne
pop
mov
push
outsl
mov
mov
mov
test
nop
add
jns
call
sbb
fimull
xchg
popa
inc
setne
or
test
das
std
xchg
test
mov
sub
bnd
sub
data16
sub
xor
test
jl
mov
jae
mov
dec
testl
movsb
or
fisubrl
std
aas
pushf
movsl
gs
mov
bound
mov
cld
mov
and
mov
daa
in
push
mov
jp
mov
inc
mov
jns
push
inc
orl
into
enter
stos
inc
fsubs
mov
subl
push
adc
scas
stc
xlat
cmp
or
jno
popa
sub
xor
adc
pop
mov
or
mov
cmp
inc
test
enter
sbb
sub
xor
mov
scas
mov
cmp
loop
dec
mov
sbb
sub
bound
jge
sbb
cmp
pop
lock
mov
jns
pushf
lcall
sbb
ljmp
jp
repnz
xchg
pop
jecxz
sub
cs
insl
sahf
dec
or
jge
mov
fcompl
sub
sti
std
icebp
xchg
dec
xor
mov
sbb
sub
popf
lods
mov
inc
mov
and
jge
pop
ds
jb
cmp
repnz
insb
out
sbb
cmc
outsb
aad
ljmp
out
ficoml
xor
mov
sub
lea
cmpsl
or
imulb
or
test
and
fcoml
vunpckhps
jne
roll
flds
in
mov
sub
xchg
cld
adc
outsl
pop
dec
int3
std
adc
in
add
addb
mov
mov
call
repz
push
fs
mov
mov
sbb
pop
dec
and
or
sbb
push
sub
cmc
les
scas
ficoms
push
or
cmp
jl
test
xchg
nop
insb
xchg
inc
cmc
sub
aaa
pop
ret
cwtl
dec
stos
add
mov
mov
mov
xchg
mov
jns
into
fs
push
fmul
mov
test
sub
inc
xor
cmp
popa
mov
pop
inc
mov
test
sbb
je
jl
fldenv
orl
lds
inc
div
mov
mov
lret
mov
mov
call
in
push
lods
dec
sbb
sub
rclb
out
cld
sub
push
imul
cmpsb
adc
outsb
testb
cmp
or
xchg
jno
pop
arpl
or
out
in
push
or
icebp
push
fsubrl
lcall
cmpsb
pop
mov
pop
push
adc
mov
sbb
mov
push
je
jbe
mov
ret
add
jg
lret
mov
gs
in
rcrb
rclb
aas
fcoml
popa
icebp
cmp
int
in
mov
cmp
hlt
sbb
cmp
sub
sub
imul
movsb
mov
mov
test
mov
loop
ret
cmp
mov
add
mov
jl
outsb
test
les
and
dec
lods
or
leave
les
jp
sbb
add
popa
rcl
scas
fisubl
mov
push
lods
movsb
or
nop
jo
inc
repnz
jo
shrl
pop
into
movsl
push
add
popf
fcmovne
add
mov
test
rolb
test
cmp
pushf
andb
hlt
jae
test
adc
out
aam
cmp
jp
push
cltd
xlat
arpl
stos
lret
dec
pop
ficoml
push
mov
xchg
sbb
and
pop
out
scas
bound
push
adc
xchg
adc
mov
xchg
jb
xor
push
jno
cmc
mov
nop
inc
std
pop
xchg
rol
pop
movsb
xchg
dec
xor
mov
inc
fs
inc
insl
mov
out
jnp
xchg
mov
stc
xchg
jno
mov
pushf
push
rol
aas
enter
out
mov
ficoml
test
or
insb
insb
xchg
add
xor
rclb
inc
ja
sbb
ret
pop
les
mov
lret
or
fsubs
or
daa
jbe
xchg
enter
jecxz
lahf
cmp
lea
out
sbb
mov
add
cmpsl
mov
fwait
pusha
inc
testl
inc
popf
add
fistpl
xor
lods
insb
inc
out
mov
out
mov
cli
or
xchg
or
cli
shl
mov
int
imul
rcrb
movsb
iret
pop
pop
adc
cltd
xchg
cmp
mov
jl
lahf
aaa
mov
loop
jne
stos
xchg
xor
nop
cmp
sar
movsl
das
sub
test
pop
out
push
xchg
rcrl
inc
imul
mov
jae
insl
dec
notb
xlat
pusha
stos
out
lea
add
bnd
mov
dec
push
rcll
in
jo
jns
xchg
lds
inc
mov
outsl
ficomps
jl
je
mov
hlt
push
jle
push
or
and
pop
adc
dec
jne
jno
roll
cmc
scas
lock
mov
cmp
lea
dec
inc
stos
dec
inc
adc
adc
inc
rcrb
jg
cmp
push
lret
adc
dec
sub
stos
jp
push
mov
sub
xchg
xchg
dec
xchg
jns
cmp
ss
rol
mov
daa
add
push
sbb
ja
sub
imul
sbb
mov
movsb
xlat
pop
push
push
addr16
add
sarl
or
and
jmp
dec
add
incb
xlat
mov
test
or
test
mov
mov
sti
xor
aad
xchg
xchg
xor
cmpsb
sub
cmpb
mov
nop
fmull
out
adc
popf
sarl
inc
aas
pushl
inc
jbe
mov
arpl
movsb
fwait
adc
adc
inc
mov
push
ret
inc
sbbl
sbb
shrb
mov
leave
call
cmc
call
int
repz
pop
xchg
pop
inc
sbb
adc
bound
jp
xlat
dec
aad
xchg
push
xor
xchg
adc
cmp
dec
inc
push
aas
sbb
pop
scas
es
shr
pop
pop
jecxz
movsl
cmp
fs
cmpsl
mov
sahf
fs
sbb
movups
jbe
mov
stos
stos
int3
aas
sub
adc
mov
and
mov
sub
inc
inc
rclb
jno
or
jmp
push
fsubs
insl
push
cwtl
sbb
arpl
pop
ja
mov
xchg
pop
outsb
repz
daa
pop
mov
cmp
je
xor
or
int
rcl
testb
hlt
lret
jmp
inc
cmc
addr16
addr16
sbb
xor
pop
ret
mov
into
or
push
orb
jne
stc
cmp
push
in
cmp
mov
pop
adc
sub
stc
scas
pusha
ret
adc
add
adc
inc
xchg
stc
lods
adc
in
daa
mov
out
insb
sub
imul
cmp
jo
in
push
inc
adc
inc
das
insb
iret
fucomi
daa
mov
ret
fwait
xchg
ret
arpl
and
mov
in
outsl
icebp
cmp
fsubr
and
add
adc
mov
frstor
testb
sbb
jmp
mov
xor
push
dec
leave
add
js
mov
adc
js
sbb
ja
xchg
jae
jnp
inc
mov
adc
ds
outsl
cmpsl
dec
hlt
mov
loope
mov
or
mov
jg
xchg
cs
loope
mov
push
and
sub
shlb
pop
xor
push
cmp
inc
pop
dec
and
imul
shlb
xor
scas
data16
lret
push
fnsave
shrb
fs
jbe
push
cs
add
aas
cmp
jmp
adc
out
sbb
push
sbb
call
mov
aas
scas
inc
pop
sar
sub
pusha
dec
sbb
or
das
mov
xchg
xlat
xor
pop
mov
out
pusha
adc
or
into
pop
or
stc
int
or
push
add
inc
jb
ror
cmpb
adc
xor
lea
aaa
ja
push
lret
cmc
inc
mov
int
sub
sbb
scas
push
fistpl
fwait
negb
sbb
aaa
stc
fwait
lods
sahf
pop
adc
push
adc
pushf
xchg
xor
popa
stc
flds
add
add
adc
adc
sub
push
hlt
pop
lods
add
ljmp
aaa
adc
pop
pusha
sarl
adc
mov
sti
fisttpl
outsb
fcomip
aam
rorb
jns
mov
push
lods
xorl
arpl
push
xchg
sbb
aad
lock
pop
sbb
push
or
dec
jae
fs
jmp
mov
push
pop
roll
sbb
stos
or
in
testb
cmpsl
leave
jo
xchg
int
rcr
dec
ja
jnp
xchg
inc
std
outsl
sub
jne
and
mov
and
cmp
outsl
imul
out
pop
xchg
or
jp
int3
sub
push
ss
lahf
sar
lds
fcomi
sbb
xchg
sub
and
lretw
sub
mov
dec
movsl
mov
rorb
mov
sahf
cs
lock
sbb
fs
push
xchg
imul
lods
leave
out
aas
inc
push
pop
dec
add
mov
stos
or
sub
fdivrs
cmpsl
sbb
and
mov
sub
adc
or
rorb
aas
jl
and
loope
adc
pop
push
push
cmp
mov
push
cwtl
xchg
adc
clc
lds
mov
lret
mov
inc
fmull
stos
pop
inc
jp
andb
test
dec
push
push
lods
xorb
pushf
lock
stos
xchg
aam
bound
out
sub
mov
cmpb
std
cli
rol
mov
dec
inc
imul
in
add
std
pushf
shrb
daa
mov
mov
cmp
sbb
cmp
cli
or
insl
or
jb
xlat
pop
pushf
int
std
insb
adc
clc
fdivl
sbb
int3
or
inc
cmpsl
andb
cmc
in
movsb
inc
clc
push
adcb
jle
jmp
xchg
mov
mov
mov
sbb
mov
mov
mov
and
subl
mov
sub
push
cmp
xor
and
and
mov
int3
mov
popf
stos
scas
add
cmp
sbb
mov
add
mov
pop
mov
call
jge
mov
cs
leave
lret
jae
mov
pop
sub
pop
stos
movsb
loop
push
not
cmp
rep
sub
mov
fmull
lret
xor
fwait
push
je
mov
dec
cmc
repnz
je
xor
pusha
sub
push
outsl
movsl
dec
sahf
jae
fistpl
lods
mov
xchg
sub
enter
mov
mov
pop
add
test
adc
imul
scas
fucomip
adcb
push
dec
push
repnz
mov
pop
and
adc
and
jge
js
pop
xor
mov
push
xchg
mov
lea
in
cld
cld
xchg
ss
popa
add
push
xchg
call
mov
push
mov
fildll
mov
shlb
or
mov
clc
cmp
add
xor
loopne
lock
sub
movsl
std
out
jns
or
imul
sbb
pop
aas
loop
sub
dec
out
xchg
inc
repz
ret
cmpsl
rcr
inc
inc
jg
jo
or
xor
dec
popa
test
add
mov
imul
std
jne
sahf
in
pop
stc
add
outsb
loopne
inc
sub
outsl
push
lret
sub
dec
bound
js
sbb
cmp
mov
fnstsw
and
add
aaa
addr16
pushf
ljmp
xchg
adc
push
cmpsb
sub
loop
push
dec
jne
js
dec
and
pop
pop
adc
pop
inc
hlt
cmp
popa
inc
push
int3
daa
call
in
test
jbe
sub
push
jae
cmp
ficompl
sub
cli
push
loope
popa
outsb
xchg
xchg
imul
inc
je
icebp
xchg
mov
rorb
ss
pop
in
dec
sbb
mov
out
push
sub
dec
cmc
enter
es
jb
xchg
xchg
int
add
ficomps
out
mov
jae
ja
adc
ss
dec
mov
push
jne
pop
fstpl
xchg
pushf
push
daa
loope
mov
icebp
das
xor
rcrl
shlb
test
std
sar
or
xchg
bound
lods
jb
jmp
adc
push
mov
movsl
and
sbb
sbb
push
cmp
outsl
scas
mov
jecxz
ss
aaa
sbb
arpl
out
idivl
lcall
push
mov
pop
dec
movsl
pop
mov
loope
mov
xchg
enter
icebp
test
add
mov
mov
xor
pop
mov
sub
or
inc
mov
fadds
repz
in
nop
enter
push
mov
pop
sahf
outsb
dec
dec
stc
out
aaa
mov
push
mov
and
and
dec
sub
cli
shrb
push
rcr
cmp
stos
pop
mov
adc
xlat
movb
ret
pminub
imul
or
jp
ds
pop
nop
sahf
lds
jbe
ror
fimuls
outsl
mov
adc
mov
dec
dec
mov
ja
pop
or
mov
mulb
das
cmp
outsb
aas
mov
ficomps
test
mov
mov
cwtl
mov
jp
lret
pop
pop
loope
data16
rol
xchg
push
push
daa
xor
or
sub
xchg
repz
jge
add
ret
mov
pop
std
xor
pop
aaa
loope
cltd
out
in
jae
mov
out
lea
adc
jo,pt
pop
je
imull
add
int3
mov
xor
scas
loope
push
xchg
loopne
mov
cmp
int
xor
jnp
js
repz
pop
add
mov
in
mov
push
je
inc
decb
dec
push
cli
pop
mov
cmp
pop
or
fdivrl
lods
stos
dec
add
push
es
fwait
inc
cltd
sbb
jne
pop
xchg
sahf
jae
push
or
xchg
sti
dec
cmp
orl
pop
orb
sub
push
jmp
mov
xchg
jmp
mov
stc
sahf
inc
mov
in
dec
xlat
loop
or
pushf
addr16
and
das
pop
cmp
jmp
jo
clc
pop
daa
cld
or
add
push
push
and
lds
daa
shrb
les
push
sub
mov
pop
loopne
mov
mov
dec
dec
loope
test
sbb
xchg
and
adc
push
cmp
push
dec
hlt
cmp
adc
cmp
cltd
mov
inc
push
mov
and
ljmp
inc
popf
sub
pushf
cltd
push
mov
xor
je
sbb
xor
push
add
cmp
mov
inc
adcb
outsl
xchg
fadd
cmp
movsb
jbe
push
inc
popl
daa
dec
imul
sarb
xor
push
sbb
outsb
hlt
dec
sub
imul
stos
in
jbe
lock
mov
inc
insl
sbb
lds
jl
xchg
jne
mov
scas
inc
shlb
out
xlat
repz
pop
mov
hlt
pop
in
sarb
ret
aad
jl
mov
popa
shlb
mov
pop
out
fdivp
pop
int
inc
adc
fcomps
and
flds
jb
dec
paddw
hlt
cmp
mov
int3
outsl
fisubrl
add
insl
sahf
and
fdivs
repnz
test
or
mov
adc
sbb
cli
jne
jge
icebp
inc
push
data16
push
mov
je
mov
xchg
addb
adc
les
popf
fwait
dec
mov
inc
jno
mov
mov
rol
in
xor
sti
loop
addr16
fistpl
inc
mov
adc
stc
jl
push
and
jae
inc
lds
sti
dec
std
xor
lds
lods
push
lea
xor
push
add
mov
ja
lret
cmp
jbe
push
push
cmc
xchg
jbe
adc
inc
mov
sahf
inc
hlt
inc
lods
xor
xor
ljmp
icebp
out
aam
lods
scas
jno
lock
lahf
jmp
out
push
jle
lahf
sbb
jl
xchg
pushf
and
repz
sbb
cwtl
ret
adc
loope
xchg
lahf
in
jmp
imull
sbb
test
xor
push
or
pop
sub
nop
outsl
iret
aas
mov
in
cmp
ret
jmp
fwait
pop
add
push
cmp
neg
mov
dec
sub
das
dec
arpl
mov
aad
cmpsb
fidivl
push
popa
and
or
je
xchg
xor
leave
pop
movsl
xchg
or
shlb
hlt
sub
scas
repz
sub
and
test
push
or
sbb
sbb
xor
andb
cmp
mov
or
sbb
pop
cmp
push
movsl
push
imul
push
add
shlb
inc
movsb
or
movsl
sub
orb
dec
adcl
aam
sub
dec
lcall
fimuls
fs
or
fcomps
es
xchg
xor
mov
or
inc
xor
outsb
pop
shl
mov
rol
cld
and
add
lret
cmp
mov
cmp
xor
out
jge
in
lahf
dec
ljmp
jbe
aas
xor
in
fsubrp
inc
cmpsl
inc
and
xor
imul
aad
jne
sarb
enter
push
nop
js
lret
ljmp
aad
clc
add
mov
lcall
in
ret
mov
jmp
movsl
xchg
add
mov
rcrl
dec
cltd
sar
and
xor
in
es
push
jnp
call
and
imul
jae
lret
cltd
pop
sti
dec
inc
repz
mov
or
lds
into
cwtl
jge
lods
push
jae
enter
notl
icebp
addr16
xchg
adc
mov
fldenv
call
mov
add
cs
pop
mov
or
cmp
mov
rcrb
lea
mov
dec
int
jns
lods
add
cltd
popaw
imul
popf
in
test
loop
mov
or
lret
inc
jge
sbb
adc
push
loop
and
pop
aas
pushf
pop
iret
add
imul
fldt
push
xchg
repz
inc
ljmp
jle
sbb
push
ficoml
fcomps
adc
std
inc
jae
xchg
test
ss
imul
mov
lea
pop
add
aaa
rcl
mov
mov
jae
cmp
stos
mov
popa
pop
out
jl
push
pop
mov
jne
push
scas
and
leave
jnp
inc
repz
or
lock
or
in
clc
jl
pop
stos
jne
fnstenv
mov
in
adc
fisttpl
js
jno
ljmp
shrl
arpl
push
imul
push
add
mov
aad
cmp
sbb
hlt
sbb
mov
and
int3
xchg
or
sub
push
jecxz
imul
data16
ret
in
in
in
lds
pop
insb
xchg
sbb
jmp
mov
sub
inc
aaa
vzeroall
rolb
in
fbld
jae
lcall
push
pop
adcb
dec
cs
popf
lods
jp
mov
rcl
mov
add
test
sub
fwait
repz
insb
xchg
fldcw
or
out
sbb
sub
pop
outsb
sahf
cmp
pop
jnp
jp
cld
es
xlat
sbb
push
arpl
jbe
pusha
push
mov
cltd
ret
stos
cmc
subl
cmp
repnz
outsl
xchg
xchg
mov
sub
out
sub
cmp
pop
xchg
inc
test
js
mov
push
shl
stc
addr16
add
js
cli
inc
roll
cmc
es
orl
mov
sbb
cmpsl
pop
dec
mov
and
out
sbb
daa
mov
mov
sub
push
jecxz
rdmsr
push
mov
daa
test
lret
dec
adc
int3
mov
xor
adc
inc
jno
jbe
xchg
xchg
ja
inc
std
ror
cmc
mov
sbb
orl
pushf
inc
xchg
out
ret
shrl
dec
cli
sahf
pop
and
jle
stos
and
js
push
inc
daa
nop
decb
mov
in
outsb
outsl
adcb
mov
outsl
or
xor
insl
dec
dec
fisubrs
fwait
mov
pop
pop
and
in
dec
mov
mull
mov
std
fsts
cs
call
sarb
cld
add
pop
mov
scas
in
add
push
jnp
std
jecxz
leave
cs
in
dec
sub
cmp
cmp
inc
data16
pop
mov
hlt
out
mov
roll
mov
cmpsl
in
xor
lret
std
lods
adc
dec
jno
and
in
sub
or
aas
stc
mov
mov
and
clc
loope
stos
pop
fdivrs
and
dec
gs
daa
loope
daa
pop
cmpsb
clc
aaa
jnp
outsl
orb
xlat
mov
test
fnstcw
cmpsl
pop
cmp
inc
out
mov
bound
data16
jo
mov
xor
or
lcall
hlt
gs
lret
scas
fdivs
xorl
dec
adc
mov
fldcw
mov
or
jb
pop
push
std
aas
lock
pop
mov
mulb
xchg
sahf
lret
sub
out
or
cwtl
push
fistl
or
into
hlt
repz
rorl
call
mov
out
mov
iret
lret
imul
sub
pop
sbb
out
jb
dec
and
cld
cmpsl
mov
dec
lcall
cwtl
je
fwait
imul
lock
pusha
movsb
add
push
je
push
loop
nop
or
aam
stos
stos
outsl
ret
cmp
sbb
movsb
push
push
movsl
cmp
mov
out
aam
jb
loopne
addb
mov
lods
ja
es
jb
xchg
lret
leave
inc
mov
fsubrl
xlat
xadd
movsb
in
push
or
fnstcw
lods
add
bound
fidivrs
not
sub
or
cs
and
popa
mov
jno
jmp
mov
jne
pop
pop
mov
adcl
test
or
stos
inc
negl
dec
neg
adc
cmp
xchg
inc
push
fsts
inc
add
scas
subb
cmp
cmp
ja
lret
stos
cmp
sbb
mov
xchg
scas
jg
arpl
push
add
mov
jmp
test
sbb
inc
mulb
in
gs
repz
add
push
pop
lods
je
sbb
dec
push
adc
jb
mov
sub
mov
pop
mov
cmc
int
call
mov
ja
and
rorl
aam
mov
icebp
or
jnp
addr16
sbbb
jmp
xorl
dec
jae
icebp
pop
mov
jmp
mov
xchg
adc
stos
sub
in
popa
pushf
adcl
push
pushl
dec
dec
cmp
shlb
int3
hlt
lret
jnp
inc
addb
popf
xchg
mov
sub
insb
les
pop
pushf
or
sub
inc
and
aad
sbb
cmp
hlt
iret
xchg
sarb
pop
sbb
filds
popa
in
lods
gs
mov
and
pop
lock
popf
mul
outsl
jo
sti
jp
mov
inc
pop
lahf
dec
sbbb
in
push
icebp
push
addr16
ret
fcomps
dec
stos
jo
inc
ljmp
mov
xchg
popa
sbb
in
inc
dec
mov
add
mov
addb
lcall
jb
fadds
sub
and
sbb
and
adc
jae
jno
dec
mov
int3
fldcw
in
inc
pop
mov
jmp
sub
jne
lea
rol
loope
in
jae
in
je
lds
addr16
addr16
dec
mov
mov
mov
jmp
jbe
pop
adc
push
jp
push
neg
dec
or
ud1
jge
mov
in
addr16
pop
in
jge
ljmp
pop
mull
and
push
les
inc
rorb
push
ffreep
fsubr
jl
push
repz
cmc
ret
sbb
fdivr
xor
mov
xchg
daa
pop
cli
movb
sub
test
imul
mov
ret
push
movsl
pop
pop
jge
in
or
adc
add
push
mov
lahf
mov
inc
fldt
xchg
ja
out
int3
jne
add
stc
popf
fildl
dec
shr
push
scas
pop
ja
xor
mov
loop
popf
test
push
cmp
and
loope
enter
data16
test
xlat
xlat
mov
insl
insl
xchg
negl
fisubrl
add
insb
lcall
push
icebp
js
mov
cmc
sub
cmc
jg
jnp
bnd
int
ds
inc
pushf
jle
jge
test
call
sub
push
cld
mov
push
xchg
push
aad
xor
jns
cmp
jge
dec
pop
out
or
and
frstor
mov
push
jmp
inc
xchg
mov
push
mov
and
out
std
lds
mov
lcall
aad
in
dec
mov
xchg
mov
mov
enter
jo
jmp
sbb
scas
push
shlb
jle
out
mov
popf
push
sbb
into
push
das
mov
jp
jmp
std
pop
sbb
mov
dec
sbb
sarl
add
adc
in
lods
pop
outsl
xchg
pop
out
sub
inc
or
cmp
push
lret
pop
pop
jl
or
inc
icebp
sbb
mov
dec
test
pushf
xchg
bound
daa
fscale
pop
cmp
sbb
insb
fiadds
sub
ss
les
and
aam
je
fnstenv
and
frstor
jns
andb
adc
xor
sbb
jp
test
mov
dec
into
jecxz
sti
insb
fists
jge
cmpsl
cs
jno
add
stos
or
jge
jne
loope
hlt
rorl
cmc
xor
push
call
mov
outsl
mov
mov
sbb
lock
insb
leave
addr16
cmpl
lahf
xor
or
divl
and
add
mov
in
mov
testb
jg
filds
jp
pop
push
lods
jns
mov
and
add
inc
xor
push
xor
pxor
pop
clc
movsb
mov
xlat
js
sbb
push
cmp
daa
cmc
jne
test
mov
sbbl
lahf
xor
or
ja
sub
ret
mov
fdivl
xchg
ds
or
insl
pushf
out
lods
or
mov
sub
push
or
pop
or
es
pop
lret
pushf
aas
int3
inc
jb
adc
lds
shll
leave
jno
inc
adc
aaa
or
mov
jo
xchg
push
xchg
cmp
or
and
std
adc
jno
inc
jno
lods
std
pushw
mov
ss
loopne
push
mov
dec
mov
fstps
push
cmp
ds
rol
push
mov
or
in
ficoml
ds
mov
ficoml
test
jbe
jns
mov
rcll
cltd
adc
in
jns
add
or
or
jmp
sub
out
or
test
icebp
pop
cli
cmp
adc
pop
orb
das
or
mov
int3
pop
mov
int
mov
imul
out
ret
outsl
insl
push
jbe
aam
dec
xchg
jle
sbb
inc
popa
je
fs
mov
mov
lcall
test
add
lcall
lahf
xchg
sbb
push
jle
ss
inc
test
mov
and
and
xchg
bnd
sub
push
hlt
or
rolb
mov
jmp
loopne
pop
and
shl
lock
xchg
in
ljmp
loop
pop
adc
xchg
aad
jo
fcoms
test
and
xchg
mov
lret
cmp
es
sub
test
or
sbb
enter
xchg
inc
fs
cmp
mov
mov
or
jp
sbb
jmp
fcomip
mov
dec
dec
int3
and
mov
call
cltd
incl
lock
in
cltd
cmp
js
iret
fs
or
loop
push
sub
mov
fdiv
cmpsb
cmp
mov
jns
iret
xchg
std
les
push
pop
les
fdivrs
std
popf
sub
pop
dec
enter
mov
sbb
lock
cwtl
and
cmp
stos
roll
lods
adcb
push
hlt
lds
rcll
outsb
arpl
enter
cmpsl
mov
lea
jp
aas
cmp
cmp
dec
fisttpll
push
xor
adc
mov
inc
mov
into
in
cmp
xchg
cld
loop
pop
lret
aaa
movsb
mov
ja
pop
xchg
mov
or
xor
out
mov
adc
pop
sub
cmpsl
xchg
mov
xor
push
test
inc
mov
ret
and
jmp
mov
sbb
aam
pop
fcmove
nop
xchg
mov
fs
adc
add
je
lods
pop
xchg
popf
and
mov
mov
out
into
in
mov
into
iret
jmp
inc
sub
pop
push
sub
lret
cmp
add
add
push
xor
xchg
xchg
mov
fcomps
sbb
xor
dec
and
cmp
xchg
dec
mov
and
aas
add
and
lcall
movsl
loop
mov
xlat
and
test
int
adc
jle
inc
rol
jmp
iret
clc
repnz
test
mov
push
cwtl
scas
pop
inc
sub
incl
xor
push
pop
jmp
fdivrl
in
stc
pop
cmp
dec
pop
push
loopne
mov
ljmp
jecxz
and
mov
cmpsl
push
and
lahf
ret
xchg
sbb
aad
cwtl
shlb
jge
repz
sarb
icebp
mov
les
shlb
movsl
jbe
je
sbb
cmpsl
cmp
aad
and
js
das
fcmovu
gs
xchg
mov
lock
hlt
cmpsb
xor
inc
hlt
lcall
jno
pop
or
popa
aam
adc
stos
pop
arpl
inc
xchg
mov
out
xchg
xlat
test
enter
ror
lret
cmp
cmp
popa
inc
xchg
pop
mov
sbb
hlt
fisubl
icebp
call
dec
mull
aas
cmp
fildll
sbb
loop
and
add
scas
lcall
das
pop
xor
cmp
inc
mull
pushf
jb
hlt
or
stos
test
jb
sbb
jno
inc
cmp
jge
sbb
cmpsb
cltd
cld
xor
mov
test
es
out
loope
fwait
outsb
dec
outsb
mov
jl
mov
cli
in
cmpsb
icebp
in
aam
xor
inc
xor
movlps
in
xor
imul
or
add
xor
andb
jp
test
cmp
jp
into
in
push
mov
push
fwait
adc
std
sbb
hlt
int3
add
test
jle
jl
and
mov
and
or
mov
or
cmp
mov
stc
nop
mov
xchg
popf
mov
jg
ret
pop
loopne
adc
and
imul
lahf
les
push
cs
outsb
jo
push
pop
repz
mov
test
stc
rcl
sbb
and
mov
jae
pop
movsl
movsb
pop
mov
inc
dec
imul
mov
cmp
hlt
in
insb
fildl
lock
mov
test
movsb
or
push
shlb
js
dec
std
call
cli
push
adcl
cmp
pop
lods
int3
mov
mov
fstpt
cmp
push
sbbb
sub
mov
or
dec
fsubrs
pop
pushf
cmp
shlb
push
mov
and
mov
test
scas
fnsave
shrl
test
mov
or
jns
adc
popl
cmp
lret
in
das
fmull
and
jp
inc
jg
sbb
stos
xor
out
or
pcmpeqw
lret
rorl
popf
rcll
xchg
icebp
add
shrl
sub
push
xlat
inc
mov
out
mov
pusha
sbb
hlt
data16
dec
sub
jmp
cwtl
cmpsb
mov
mov
out
dec
jge
add
jge
mov
xor
test
in
lds
outsb
testb
push
hlt
loope
std
sub
popf
into
mov
xchg
adc
or
fistpll
add
adc
rorl
push
adc
adc
xor
inc
inc
push
mov
push
test
es
and
movsl
jecxz
mov
int
sub
inc
or
inc
push
sarl
notb
fs
inc
cmp
iret
mov
push
aad
test
mov
pop
fmuls
les
push
xlat
push
or
xor
call
fidivrl
stos
push
jle
rcll
sub
cmp
les
jge
fadds
mov
aaa
mov
in
mov
mov
cmp
add
mov
sahf
push
ficomps
jle
aas
lcall
lea
pop
scas
movsb
sbb
inc
dec
ds
jae
loope
add
mov
mov
xchg
jmp
mov
negl
jg
cmc
daa
imull
ret
lret
cltd
pusha
lods
xor
push
sbb
mov
mov
addl
cli
icebp
addr16
aaa
jg
ja
xchg
cwtl
mov
dec
fldcw
ds
leave
inc
in
stos
aaa
out
in
mov
pop
test
cmc
insb
xchg
lea
lods
out
fmulp
test
js
add
lea
mov
mov
adc
icebp
insl
xchg
xchg
pop
outsl
mov
cmpsb
or
sbb
dec
imul
xchg
xchg
sub
cmp
adc
sub
and
inc
adc
mov
adc
in
lds
xchg
and
sbbl
xor
cld
sub
pop
mov
je
xor
in
jp
mov
bound
pop
mov
cli
and
inc
cmc
sub
call
push
xlat
mov
xor
pop
jns
out
ret
ljmp
in
jmp
xor
movsb
gs
shrl
daa
push
stc
mov
push
in
xor
leave
sbb
cmp
cmp
rcrl
mov
mov
outsb
and
movsl
inc
jbe
sub
loopne
fbld
jne
test
call
mov
nop
aaa
adc
jns
imul
test
sub
nopl
out
stos
clc
mov
dec
sub
or
push
js
inc
lret
insl
and
arpl
cmpb
scas
xchg
popf
add
sbb
cltd
pop
aad
jl
and
xlat
ret
jge
adc
dec
in
adc
xchg
nop
and
xor
mov
ficoml
push
adc
xorl
push
jmp
add
dec
in
ret
data16
outsb
xor
inc
in
or
outsl
xchg
rclb
flds
and
stos
adc
cwtl
ficomps
sub
fsub
lds
sub
imul
lahf
icebp
adc
sarl
cmp
cld
xchg
sti
pop
mov
push
lret
pop
hlt
sub
enter
arpl
cmp
sbb
sbb
js
pop
leave
scas
pop
fisubrs
push
addl
lock
call
cld
lahf
sbb
out
ljmp
push
push
out
sbb
fcmovnbe
mov
cltd
sub
xchg
xor
xchg
stos
rcrl
cli
out
inc
negb
mov
sbb
adcb
push
xchg
push
idivb
fstpt
mov
xchg
xchg
or
dec
gs
or
jbe
mov
sbb
push
xchg
sbb
mov
mov
cmp
daa
movsl
dec
lock
out
pop
loop
cmpsl
push
push
movsl
mov
les
and
ret
lea
into
bound
aam
xchg
sbb
sti
sub
lods
dec
dec
ljmp
xlat
dec
loopne
inc
adc
add
cs
sub
and
movb
and
gs
xchg
xor
push
pop
fbld
lock
sti
push
aas
stc
jecxz
iret
pushl
out
lods
mov
les
adc
pushl
add
cld
pop
mov
ror
inc
jecxz
inc
filds
in
lret
fwait
test
cwtl
int3
sub
lea
leave
into
xchg
lret
repz
lcall
ret
fsubr
outsl
inc
xor
pop
cwtl
xor
test
loop
jmp
pop
dec
push
cmpsl
cwtl
cmpsl
xor
test
stos
jnp
sbb
and
or
mov
inc
popa
push
imul
adc
arpl
andb
or
mov
pop
stc
pop
push
jno
ffree
loopne
jns
lock
call
movsl
jecxz
adc
jnp
rorb
and
popa
jns
pushf
pop
aas
adc
mov
inc
push
dec
fcomp
test
hlt
cmc
sti
jle
jbe
test
scas
adc
jb
xlat
inc
jmp
movsl
out
push
xchg
cli
pop
leave
shll
outsl
add
push
jbe
imul
int3
sub
in
dec
mov
movsl
mov
sbb
pop
out
insb
jae
dec
shll
out
pop
sub
cmp
mov
call
sub
add
clc
jecxz
scas
mov
mov
cmp
int
and
pusha
dec
xchg
mov
sub
insl
cmpsl
push
xchg
int
outsb
xor
xchg
jecxz
jl
imul
addr16
push
shlb
pop
imul
imul
sbb
xor
mov
pusha
sub
sbb
call
xor
jge
mov
dec
cld
sbb
mov
sarb
fmuls
inc
leave
out
aas
in
std
pop
data16
sub
dec
pop
or
xchg
jbe
int
mov
jne
and
xchg
inc
insl
add
jmp
cmpb
andb
add
mov
sbb
cmpsl
inc
add
jg
and
rolb
stos
out
popa
mov
daa
movsb
push
stc
mov
mov
adc
ret
imul
cmc
std
icebp
or
lock
sub
mov
fldcw
xor
arpl
add
sbb
add
jae
xchg
inc
dec
push
inc
pop
sub
dec
mov
movsl
cmp
dec
ds
pop
mov
scas
or
push
jb
jno
test
pop
call
stos
bound
mov
pop
roll
ltr
lods
mov
add
dec
mov
adc
arpl
fisubl
xchg
push
test
das
mov
push
or
or
insb
push
insl
push
lock
add
pop
shrl
mov
mov
xchg
or
mov
or
jns
mov
mov
aaa
add
je
jns
adc
into
push
insb
aaa
ret
pop
inc
push
popa
pop
scas
and
arpl
lahf
lea
lds
imul
mov
je
xchg
scas
inc
test
in
ret
jecxz
ficoms
push
stc
sub
cmp
pop
or
inc
in
mov
jl
adc
js
cmpsl
es
add
dec
loopne
cmp
add
mov
jmp
mov
mov
adc
inc
imul
add
arpl
leave
shrb
mov
mov
cwtl
popa
add
mov
fnstcw
aad
fildll
push
stos
push
add
aam
sbb
sub
fucomi
xor
sbb
push
int
movsl
fwait
push
push
pop
nop
pushf
xchg
mov
pop
inc
out
sbb
adc
jnp
in
movsl
aaa
mov
mov
sti
adc
or
mov
or
enter
vmread
cmp
insl
orl
insl
xchg
addr16
cltd
push
pop
mov
jno
orb
into
jmp
scas
xchg
or
mov
push
sbb
out
mov
inc
shll
cmpsb
sbb
push
movsl
sub
lea
fwait
lods
lods
jecxz
jge
push
shl
js
add
add
inc
pushaw
cli
mov
cmp
mov
push
push
xchg
xchg
sub
call
cwtl
sub
dec
mov
mov
dec
jbe
call
repnz
cmp
add
repnz
mov
push
iret
push
mov
push
icebp
push
mov
pop
shll
mov
push
adc
jl
out
and
mov
dec
mov
pop
mov
scas
adc
inc
int
inc
fwait
xor
stc
test
imull
sub
cmpsl
sbb
add
das
or
les
inc
inc
cmp
imul
push
jbe
mov
mov
mov
imul
daa
adc
loop
mov
cwtl
das
sub
jmp
pop
xchg
mov
mov
fwait
push
cld
sub
insb
or
lret
push
pop
fdivl
faddl
loopne
xchg
sahf
xor
jno
xlat
add
inc
xor
xor
xor
addr16
ja
mov
xchg
popf
adc
mov
sub
fsub
test
rorl
xor
movsl
xchg
shl
andb
mov
sbb
lea
std
cltd
pop
mov
repnz
fidivrs
cmp
imul
jge
and
pop
fdivl
jns
pusha
aam
test
sbb
cs
imul
mov
push
popa
push
jbe
inc
stos
int3
lock
repnz
mov
hlt
mov
push
js
jb
inc
mov
movlps
or
lret
ljmp
jo
inc
lcall
fisttpl
je
loope
xlat
adc
sub
pushf
sub
rclb
cmp
jne
mov
sbb
push
fistl
xchg
sub
andl
dec
or
push
jle
push
mov
arpl
iret
jmp
push
imul
cltd
cmp
xchg
data16
shr
arpl
inc
mov
pop
arpl
jne
daa
xchg
adc
mov
dec
popa
or
xor
test
nop
into
das
jp
mov
sbb
sbb
pop
iret
push
stos
and
sub
lock
jno
je
push
jmp
add
mov
and
mov
mov
call
cmpsl
push
or
xchg
shlb
cmpsb
sar
mov
scas
lea
in
dec
lahf
daa
mov
mov
mov
aas
pop
mov
jno
cld
mov
push
push
jnp
lcall
adc
rcrl
xchg
enter
xchg
sbb
pop
loopne
addr16
sti
push
add
or
insb
loop
icebp
gs
arpl
or
push
mov
fwait
test
push
jp
mov
xchg
pusha
cmp
xor
xor
lock
xlat
jmp
push
mov
push
icebp
add
mov
out
xchg
test
lret
xchg
push
jnp
mov
sysexit
and
dec
dec
jl
adc
add
sbb
sbb
sub
rcr
sub
pop
push
inc
mov
loop
push
fcmovnb
inc
mov
popl
insb
add
cmpl
mov
inc
stos
ljmp
imul
mov
or
xchg
mov
mov
xlat
xor
sti
jg
fnsave
push
cwtl
xchg
ret
xor
mov
inc
mov
lods
dec
clc
popf
xor
mov
mov
cld
or
cwtl
jg
mov
mov
aas
test
jns
jmp
jnp
cli
rclb
dec
pop
jl
mov
mov
sbb
xor
loop
in
mov
int3
pop
pushf
cmp
inc
decl
cs
pushf
fwait
pop
je
push
aaa
ret
xchg
lcall
sbb
pop
adc
lds
dec
mov
sbb
pop
jmp
sahf
out
pop
push
xchg
addl
into
add
out
adcb
fldt
scas
lods
daa
daa
int3
push
push
dec
test
or
mov
out
add
and
xchg
mov
paddq
call
xchg
jb
add
into
imul
sub
fisttps
mov
and
decb
aam
sbb
orb
sahf
mov
insb
mov
mov
lahf
std
pusha
sub
das
test
pop
or
insb
mov
pop
add
out
movb
sbb
dec
ret
sbb
out
pushf
imul
pop
jo
lods
int3
insl
mov
repz
adc
imul
jns
sbb
add
leave
inc
jmp
scas
dec
std
and
stc
xchg
testb
pushf
push
mov
push
das
out
jae
fisubl
xor
and
imul
int
in
and
inc
cltd
pusha
push
and
inc
or
dec
and
mov
mov
ss
pushf
inc
xchg
test
mov
enter
cltd
mov
xorb
pusha
imul
sbbl
mov
jne
popa
xchg
inc
popa
jnp
aam
pop
in
jbe
cmpsb
inc
paddsb
je
inc
loopne
add
push
mov
repz
sub
aad
lods
int3
stos
lea
in
mov
inc
je
adc
sub
mov
bound
mov
push
insb
xchg
pop
jmp
mov
mov
inc
xchg
sbb
push
lock
xor
dec
leave
and
andb
mulb
sbb
cwtl
push
mov
in
dec
xchg
iret
ljmp
repnz
inc
add
incl
xor
hlt
and
daa
test
sahf
push
repnz
les
mov
in
push
das
jmp
movsb
leave
mov
into
out
cwtl
ljmp
ret
lock
and
andb
scas
test
dec
jb
into
jmp
stos
movsl
outsl
jecxz
pop
ja
mov
imul
int3
scas
push
hlt
ret
mov
stc
xor
mov
jle
mov
pushf
mov
xchg
iret
push
or
push
and
push
icebp
mov
ror
test
dec
xchg
test
sbb
push
in
mov
bound
repnz
and
enter
jo
xchg
mov
mov
mov
xchg
pusha
shll
inc
cmp
mov
add
js
test
and
scas
sbb
xchg
out
mov
push
xchg
je
popf
stos
push
bound
stos
data16
repnz
add
dec
mov
jae
add
add
xchg
popf
cltd
sbb
je
dec
cld
icebp
mov
test
ret
and
stos
sahf
out
mov
xor
mov
aas
fcompl
mov
lret
cmc
sbb
xchg
sbb
jae
loop
dec
add
fcomi
mov
jns
and
or
or
notb
js
sahf
mov
mov
aas
shr
cmp
push
and
ja
xor
gs
les
mov
aad
sbb
cmp
pop
sbb
mov
repnz
outsl
pop
sub
stos
push
dec
xlat
inc
sti
movb
lcall
sahf
fldcw
sbb
std
nop
mov
adc
mov
addr16
mov
pop
xor
sub
nop
pop
xchg
lahf
iret
xchg
jl
push
dec
xchg
loopne
pop
cmc
imul
mov
pop
ficoms
push
adc
jmp
cs
fisubrl
dec
xlat
int3
push
jbe
adc
xor
sbb
lock
push
sti
mov
enter
fwait
dec
pop
in
test
fdivs
xor
fadd
and
pop
lock
int
cmpsl
icebp
rclb
sahf
pop
sbb
lea
mov
sub
rorl
pop
adc
inc
jae
push
imul
sbb
leave
mov
add
push
out
xchg
add
out
imul
lods
clc
dec
sbb
push
add
cld
ja
pusha
ja
imulb
mov
add
fstpl
mov
cmpsb
push
add
xor
pop
push
movsl
js
fnsave
cmp
xchg
and
add
aam
movsl
pop
dec
hlt
faddp
rol
out
mov
mov
cli
popa
push
stos
dec
lcall
sahf
xor
pop
jecxz
pop
mov
mov
js
rorl
in
jp
pushf
std
es
dec
mov
into
loopne
ljmp
sbb
xchg
jae
mov
mov
xchg
mov
imul
in
lcall
mov
aad
sub
or
or
dec
dec
fcomip
fs
adc
test
insl
shlb
mov
dec
mov
imulb
inc
jcxz
push
fs
popa
addl
ror
ficoml
cmp
in
jbe
adc
dec
fistps
jo
pop
loop
mov
cmp
fimull
aad
outsb
mov
jb
and
cmp
adc
aam
pop
cmp
push
in
outsb
js
mov
outsb
cltd
cltd
leave
adc
testl
lea
xor
mov
fucomip
add
cmp
jbe
add
push
sub
pop
xchg
addb
adc
sahf
mov
popf
mov
cld
jnp
ret
pop
jae
fistpl
inc
dec
out
outsl
stc
add
test
test
ficompl
cwtl
add
sbb
gs
add
add
pusha
mov
sahf
mov
repz
push
es
sub
testw
out
out
mov
shl
sbb
and
add
in
jns
xor
roll
mov
mov
ret
lock
dec
jp
rclb
test
mov
clc
out
out
test
ljmp
add
mov
sub
push
cmc
arpl
push
xorl
jmp
sub
rcrb
pusha
mov
xchg
cmpsl
cmc
in
iret
or
mov
ret
xchg
pop
rcll
and
push
lahf
leave
imul
shrb
and
adc
fimull
sbb
jp
lods
enter
stos
pop
insb
or
into
and
xchg
fiadds
xor
scas
and
data16
cli
leave
out
jge
pusha
popf
add
rcll
sar
mov
and
hlt
sti
outsl
or
jle
cmp
ja
lret
or
cmp
sub
pop
sub
loope
and
ss
repz
and
xor
lret
mov
in
jbe
sbb
push
xchg
imul
cmp
pop
sahf
jle
in
movsl
jge
mov
imul
test
inc
jl
lcall
fiadds
insl
or
and
pusha
dec
add
sbb
or
pop
dec
loop
fs
mov
add
add
andl
pop
inc
xor
daa
mov
cmp
jae
arpl
lret
or
fwait
call
les
lcall
les
push
mov
jp
les
addb
std
or
jmp
pop
popa
jbe
out
jle
sbb
cltd
xor
cmp
test
push
dec
mov
inc
jmp
jno
push
mov
and
nop
push
inc
push
jo
mov
popl
or
jns
rcr
push
jmp
ror
loop
pusha
mov
adc
ds
inc
dec
mov
repz
mov
mov
in
and
dec
rorb
mov
aas
imul
rorl
and
pushf
mov
mov
inc
cmpsb
lea
fiadds
mov
mov
sub
cld
ljmp
popf
cmp
das
insb
into
test
bound
push
push
or
jl
movsl
les
sub
mov
mov
or
push
push
mov
andb
mov
mov
sub
mov
lock
jnp
shl
jle
and
dec
jbe
mov
xor
mov
enter
xchg
sahf
mov
mov
push
adc
mov
push
call
int3
insb
outsb
test
sub
hlt
enter
ret
lods
adc
in
je
push
aas
sti
lods
scas
push
fsub
scas
scas
das
jp
jbe
movsl
sub
mov
xor
stc
roll
push
movsb
lahf
iret
pop
addr16
dec
or
xor
lahf
int3
imul
sub
lret
jmp
ret
in
lds
or
pop
test
fists
out
jae
dec
jnp
fisubl
jmp
roll
cs
pop
ficoms
icebp
push
xor
jecxz
sarl
dec
int
aam
cmc
adc
mov
push
in
jmp
xchg
pop
xor
push
and
xor
shrl
push
mov
mov
fidivl
popf
in
ja
pushf
repz
mov
xor
jnp
stos
cmp
mov
popa
lret
popf
xchg
je
xor
pop
dec
sub
or
enter
xchg
popf
popa
sub
and
cmc
popf
or
mov
int3
popf
stos
sub
dec
lea
cmp
stos
mov
pop
call
pop
pop
shlb
mov
sbb
out
xchg
imul
pushf
pop
mov
inc
lea
arpl
sbb
pop
js
mov
out
mov
xor
add
mov
pop
fwait
clc
int3
lock
scas
lods
jle
mov
mov
cld
and
push
les
iret
aaa
add
insl
xchg
lock
push
sbb
aas
pop
mov
and
pop
push
popf
es
jp
and
out
imul
adcl
adc
mov
jl
xlat
jge
mov
add
out
incb
stos
mov
mov
push
adc
imul
test
push
xor
mov
cs
xor
or
dec
leave
out
movsb
sarb
push
xchg
out
sbb
sbb
pop
mov
dec
fsubrs
arpl
mov
add
in
xchg
sbb
sbb
addb
mull
mov
std
or
mov
cmc
push
or
sub
and
pop
int3
out
adcl
stos
cmpsl
lret
cmc
pop
xchg
xor
iret
and
loopne
mov
mov
aam
repnz
fildl
mov
mov
mov
jo
mov
jle
cltd
test
add
pop
sub
adc
jle
mov
imul
fdivr
mov
out
paddb
pop
data16
test
dec
mov
sbb
mov
adc
jb
addr16
or
ret
mov
xchg
xchg
std
push
push
out
fdivs
mov
cmpsb
pop
fnstsw
mov
cli
cmp
leave
and
add
jg
mov
and
xchg
push
stos
adc
outsl
out
push
ja
fisttpl
cmp
fistpl
lret
add
loop
adc
mov
cmpl
aaa
xlat
xchg
cmp
cmp
push
out
jbe
movsb
fdivs
push
add
xchg
pop
inc
sbb
jns
outsl
xchg
xchg
inc
lcall
repz
movsl
adc
data16
sub
inc
test
adc
push
cmc
js
mov
or
sbb
int3
adc
jo
popf
sti
fsubrl
movsl
scas
cmc
lds
test
mov
xchg
xlat
add
imul
shlb
shrb
jns
mov
insl
repz
pop
jb
push
cmpsl
shlb
lret
dec
and
fs
fmull
xchg
push
fiadds
out
outsb
xor
lret
xchg
mov
adc
inc
mov
xrelease
stos
inc
clc
out
mov
and
cmp
movsl
add
pop
daa
ss
adc
cmp
std
pop
scas
push
sahf
jnp
roll
leave
pop
push
mov
stos
dec
mov
cltd
fnstenv
mov
fimull
push
nop
aam
pop
jnp
sub
out
mov
pop
out
mov
ljmp
std
cmp
mov
jo
cmp
inc
mov
jmp
test
cmp
mov
xor
repz
addr16
or
mov
mov
lods
repnz
shrl
xor
in
test
mov
mov
jg
xchg
mov
sub
mov
pusha
inc
xchg
les
pop
jg
subl
xchg
fidivrl
int3
jns
sbb
inc
push
stos
jle
stos
outsl
jle
sub
fiadds
or
cmp
mov
scas
cld
adcl
adc
adc
fwait
test
int
stos
or
out
ljmp
mov
xchg
loope
int3
jg
fisubs
dec
xor
andl
fistpll
xlat
out
aas
test
orl
arpl
dec
mov
ss
push
xchg
jl
clc
sarl
fwait
mov
sub
imul
adc
movsb
add
in
jge
mov
mov
scas
int
cs
mov
negb
adc
out
cld
and
sbb
inc
dec
sar
dec
das
jmp
hlt
and
ss
mov
mov
bound
std
sbb
adc
pop
xchg
test
punpckhbw
loope
lahf
shrb
cmpsb
sbbb
imull
and
dec
jp
mov
cmp
das
sbb
notb
push
xchg
subl
sub
or
xchg
or
aas
cmc
lods
mov
int
mov
jge
jae
sub
pop
call
jo
mov
xchg
out
dec
dec
and
test
sbb
push
sub
cld
xchg
negb
pop
push
jge
rcrl
test
std
xchg
mov
adc
rorl
inc
test
into
or
push
push
mov
mov
xor
fsubl
aam
and
jle
in
adc
into
addr16
movsb
pop
push
cmpsb
mov
jnp
mov
inc
dec
push
inc
xor
stc
lret
sub
mov
es
adc
lock
popf
add
sbb
jne
and
clc
cmp
cld
add
dec
lahf
pop
mov
testl
push
mov
and
imul
sbb
mov
divl
xchg
cmp
sti
mov
xlat
and
sbb
or
and
clc
xor
fisttpl
push
cmc
mov
repz
or
sub
cli
push
fidivrs
adc
ja
call
pop
repnz
imul
cmp
hlt
xchg
je
ficoms
fs
xor
and
movsl
data16
sti
loope
out
shl
cltd
sahf
and
fsubl
xchg
sub
mov
mov
and
fs
sbb
sbb
mov
pop
sub
or
js
xor
xchg
lahf
add
add
xlat
sbb
outsl
xor
mov
fsubrl
mov
dec
dec
jnp
mov
xchg
pop
mov
sbb
insl
mov
rol
fsubl
mov
adcl
pop
xchg
jb
push
aas
mov
adc
cli
push
xchg
dec
sbbb
mov
jl
dec
lret
repz
add
roll
imul
leave
fs
pop
rcrb
out
add
std
mov
sbb
scas
mov
adc
pop
popa
in
inc
or
int
sbb
add
jmp
mov
lret
out
sbb
popf
push
popa
fistpll
push
out
imul
push
rol
fnstsw
pop
pop
outsl
in
push
outsl
cli
loop
jle
outsb
rorb
push
stos
inc
mov
int
test
imul
cmpsl
in
push
pop
sub
or
js
mov
gs
repz
adc
faddl
into
pushf
subl
into
inc
or
push
pushf
cltd
lahf
clc
rorb
mov
sti
xchg
into
mov
imul
push
out
push
pop
cs
loopne
or
jb
rclb
cmp
mov
fstpt
push
jl
mov
inc
mov
notb
xor
lcall
pop
cmp
inc
xchg
push
dec
in
add
mov
les
pushf
mov
cmpsb
jg
jo
std
icebp
popf
xor
sbb
xchg
xchg
sbb
repz
ja
xchg
pop
int3
into
in
jge
fmuls
lret
ret
or
xor
jbe
xor
and
ret
push
xor
push
lret
mov
mov
or
lret
fisubrl
stc
out
shl
xor
mov
mov
cmpsb
cs
pop
js
cmp
ja
cmp
jmp
xchg
call
out
pop
cli
sbb
stos
mov
sbb
iret
iret
pop
mov
xchg
push
repz
push
mov
or
out
fcmovb
icebp
and
xor
jl
dec
sti
adc
push
jmp
or
sbb
outsl
fsts
and
cmp
add
in
ficompl
test
and
les
mov
repnz
fcoml
out
xchg
mov
mov
mov
xchg
mov
pushl
add
mov
cmpsl
es
adc
dec
sahf
hlt
out
sahf
das
mov
lds
fwait
jle
or
out
jnp
lods
jle
in
inc
test
xchg
test
dec
pop
lock
xlat
or
xchg
lcall
in
aaa
loopne
or
sahf
mov
hlt
push
repnz
aaa
lret
divb
dec
lds
sub
popa
in
xchg
out
ss
add
sub
jo
add
push
test
sbb
fcmove
ljmp
rsm
stos
jl
stc
ficompl
pop
shll
pop
add
mov
in
push
fwait
cmc
cmp
push
cmp
xchg
daa
and
jl
adc
adc
mov
jbe
add
and
movsb
cltd
add
bnd
inc
jmp
add
jecxz
cli
ja
int3
lds
cltd
pop
push
and
test
lea
in
cmpsl
sub
sbb
sti
sub
leave
sarb
push
mov
jge
repnz
scas
fistpll
rcr
xor
and
inc
lcall
stc
sbb
push
std
js
rol
ja,pt
ret
ret
xchg
mov
pop
pop
sbb
into
or
sbb
insb
cmp
mov
movsl
xor
fwait
dec
adc
lret
mov
push
ljmp
dec
push
fxch
mov
push
jge
mov
lods
dec
mov
repz
push
xlat
xor
xchg
int3
sub
sarl
mov
addb
data16
or
or
add
jns
out
cmpsl
jae
decl
or
and
ror
int
sub
sub
lock
mov
in
dec
decb
pop
fnstcw
pop
out
push
sbb
clc
xchg
or
loope
mov
jb
mov
pop
adcb
pop
lods
out
addb
inc
test
aam
cwtl
add
aaa
int3
cmpl
js
push
dec
jle
sub
mov
inc
add
mov
inc
cmp
jns
addr16
inc
mov
in
xchg
sbb
sbb
test
dec
lds
cld
mull
fucom
lods
sbb
andl
data16
scas
or
or
push
mov
add
push
popa
pop
sub
xor
dec
enter
dec
inc
icebp
and
lds
push
xchg
fstpt
mov
jecxz
sbb
xchg
cmp
pop
sub
out
pop
mov
fcomi
rcll
xchg
stc
clc
and
aaa
gs
jns
mov
inc
inc
cli
push
jo
xchg
movsb
pusha
mov
sbb
mov
cmp
lret
inc
aaa
test
adc
es
movsl
mov
loop
scas
cld
pusha
jge
lods
daa
cmp
rcll
aad
movsb
adc
inc
sub
int
mov
repnz
faddl
lret
dec
push
adcl
push
das
mov
sbb
mov
jns
dec
into
iret
ret
xchg
fsubr
cmp
jecxz
imul
mov
push
std
test
rcl
rorb
add
dec
out
movsb
mov
lcall
mov
nop
add
mov
fwait
mov
jge
push
pop
push
jo
mov
mov
dec
ljmp
sbb
add
adc
xchg
or
xorb
js
out
inc
pop
lea
inc
xchg
mov
pusha
in
fsubrp
fcomp
sub
xchg
jge
test
lods
add
xchg
test
xchg
mov
xor
push
jns
shl
mov
dec
into
icebp
stc
into
out
ja
cltd
aas
loopne
pushf
push
shlb
adc
into
mov
cmpsl
and
scas
pop
mov
shrl
add
and
inc
sub
iret
loopne
movsl
shrb
xchg
xchg
cmp
jno
adc
scas
in
shll
push
and
out
xorl
push
daa
ret
hlt
cmp
in
out
adc
pop
imul
lods
xchg
test
out
pop
addr16
xchg
sbb
mov
frstor
popa
loop
pop
or
out
adc
je
lods
xor
jge
loop
cvtpi2ps
add
mov
dec
or
cltd
mov
fldcw
cmp
cltd
push
pop
push
imul
inc
fdivr
insl
pop
sbb
cmpsb
push
inc
inc
jmp
mov
xchg
lock
ljmp
pop
cwtl
lea
fldenv
mov
sbb
push
mov
sub
mov
mov
xor
lfs
and
inc
xchg
test
sub
pop
cltd
inc
jb
mov
pop
cmc
dec
enter
movsl
add
rcrl
stos
jb
adc
mov
loop
jno
std
inc
andl
sbb
adc
repnz
arpl
loop
ja
nop
aad
insb
test
mov
shrb
arpl
pop
lods
xchg
or
inc
imulb
test
xor
mov
jb
pop
test
sbb
mov
or
outsl
notb
dec
rcl
inc
rclb
sbb
jecxz
fucom
cmp
nop
xor
mov
repz
popa
popf
leave
adc
push
out
pop
popf
inc
xor
shrb
fstps
mov
pusha
mov
mov
adc
rclb
push
call
ret
adcb
mov
mov
loop
mov
xchg
cmc
xor
repz
inc
out
pusha
pop
cld
testl
mov
ret
dec
adc
mov
add
xchg
xor
gs
jo
scas
jo
cmp
notb
daa
leave
insl
jnp
inc
jo
and
mov
and
ds
sbb
xor
jae
arpl
outsl
insb
jg
jns
xchg
xchg
popf
fdivr
mov
push
or
popf
js
sbb
std
lods
mov
pop
push
or
mov
mov
mull
push
adcl
sbb
es
cltd
mov
lods
adc
insl
pushf
add
or
cmpb
mov
dec
jge
fsts
movsb
test
and
outsl
jmp
aas
xchg
push
xor
xor
or
popf
dec
pop
cltd
loopne
or
adc
popf
enter
fnstcw
add
out
pop
lods
daa
arpl
mov
add
mov
subl
popa
shlb
and
dec
xchg
stos
mov
lahf
sub
movl
decl
divl
pop
lcall
lea
mov
dec
dec
divl
mov
sub
fnstenv
jge
xor
fisubrs
iret
cmpsl
add
popa
cmc
sbb
test
jns
ret
jne
loop
repnz
imul
mov
cmp
add
inc
fiaddl
add
pushf
mov
cmp
pop
cs
cmp
fildl
jns
inc
xor
push
fs
pop
pop
dec
inc
mov
into
aam
inc
jo
popf
xchg
push
popa
xchg
pop
hlt
xor
int3
sub
scas
int3
test
jp
cmp
rsm
fs
filds
ds
cli
sub
sbb
shll
dec
jb
push
cmpsb
push
stos
mov
repnz
xchg
aad
cmp
inc
jae
inc
lcall
sti
adc
ret
stos
dec
mov
movsb
or
cmp
lahf
bound
ljmp
aas
jnp
mov
mov
dec
bound
pop
test
clc
adc
pop
add
add
jns
pop
out
mov
jbe
pop
jae
xchg
cli
aaa
push
sbb
test
into
mov
cmp
and
cltd
sti
jae
ja
push
lock
sub
sub
hlt
xchg
mov
imul
sbb
cs
sub
xlat
dec
jo
ss
out
lcall
sub
addr16
or
jg
out
pop
es
popa
jae
fdivl
test
ror
sub
cmp
loop
sbb
adcb
sbb
test
push
loop
mov
mov
std
jne
in
xchg
test
mov
xor
ret
pop
movsb
sbb
mov
movsl
xchg
shr
adc
out
sti
xor
dec
inc
mov
ret
int
stos
cltd
xchg
jp
mov
enter
repz
sub
jmp
xchg
xlat
mov
add
adc
test
sub
mov
fidivl
mov
lahf
pop
jl
imul
and
dec
or
sbb
ret
cmpsl
fistps
fistpl
xor
out
repnz
lods
add
rclb
fistl
call
push
bound
ljmp
sbbl
stc
stc
lds
mov
sbb
cmpsl
je
sub
jbe
ficoms
push
outsl
sbb
fs
sbb
or
pop
add
hlt
outsb
add
jbe
test
jae
call
jl
sahf
jae
mov
aad
repnz
inc
int3
ret
jns
lock
sbb
sub
or
or
cmpsb
and
add
bound
hlt
js
cmp
xchg
mov
dec
aas
data16
mov
cs
dec
and
mov
fwait
inc
repz
fists
jg
lock
mov
outsb
mov
icebp
xor
cli
push
sbb
cmp
sub
inc
es
and
and
jb
push
adc
movsl
in
in
pop
bound
jg
lret
shlb
std
sti
mov
push
xchg
cmpsb
adc
jo
add
cmp
out
cmpsb
dec
out
and
jle
jp
fistpll
ja
out
xchg
or
clc
mov
jae
call
jl
ljmp
aad
xchg
mov
in
fiaddl
mov
popf
add
call
mov
add
fbld
adc
das
mov
jge
js
inc
adc
jge
popf
cs
aam
jo
mov
popa
lcall
add
or
sub
rol
adc
js
sahf
sub
lods
fbstp
insl
add
test
adcl
pop
mov
sahf
push
js
push
xor
sub
add
add
lods
xchg
cli
adc
imul
cmc
add
mov
fsubrl
mov
iret
mov
sub
shrl
gs
js
insl
jp
inc
pop
add
push
cmpsb
cmp
mov
adc
mov
mov
test
enter
push
arpl
ss
hlt
cmp
movq
sub
mov
out
sbb
mov
sbb
sub
inc
inc
pop
out
inc
out
sub
or
in
jmp
or
xchg
loope
dec
and
rclb
pop
jg
dec
push
ja
jmp
xchg
stc
rclb
push
dec
xorb
mov
pop
jmp
xchg
movsb
cs
mov
mov
test
nop
sbb
mov
int
xchg
xchg
push
mov
dec
inc
jbe
adcb
lods
rcl
scas
rcrl
mov
mov
aas
mov
jbe
fildll
dec
mov
adc
inc
cwtl
or
sub
push
push
dec
jno
and
push
push
pop
sub
popa
pop
pop
dec
push
rorb
test
push
stos
push
ret
mov
or
leave
mov
fs
sbb
cmp
inc
adc
es
xor
sub
pop
push
mov
test
mov
test
les
repz
movsl
inc
adc
push
pop
pop
mov
out
push
enter
fwait
adc
xchg
adc
push
and
mov
push
push
iret
mov
push
mov
out
inc
mov
fidivrl
mov
in
cmpsl
dec
xlat
jno
jp
dec
dec
jno
out
and
pop
inc
cltd
and
insl
ret
or
add
into
out
mov
push
push
push
fimuls
fucom
xor
cmp
insb
dec
mov
shlb
popa
jle
adc
cmp
dec
frstor
cmp
fmuls
imul
nop
es
cmp
jbe
je
cs
je
jne
shll
mov
xor
or
cmp
js
out
lcall
push
mov
in
ja
xor
pop
xchg
push
dec
sbb
jb
cmp
mov
outsb
inc
shll
mov
push
pop
mov
push
fstl
jg
stc
xchg
icebp
daa
push
iret
fcompl
pushf
xchg
mov
jle
sub
aad
imul
or
mov
sub
mov
sahf
mov
out
add
neg
adc
rorl
add
mov
lea
loope
dec
xchg
xor
pop
sbb
push
mov
orl
clc
sar
mov
and
rolb
pop
pop
jmp
inc
inc
cli
mov
fsubrl
xchg
sub
ret
ss
mov
testl
ljmp
repz
xor
les
call
fnstenv
js
xchg
xor
adc
jge
xor
push
subb
pop
mov
sub
or
sbb
mov
and
shlb
fisubl
jb
cmp
sbb
add
iret
lods
add
insl
out
lea
insl
notl
push
rolb
add
mov
sbb
push
or
ror
jnp
jg
jecxz
and
repnz
test
dec
gs
dec
xchg
inc
loopne
dec
inc
shrl
dec
aaa
jle
mov
dec
cmp
xchg
jne
scas
ds
enter
popf
out
push
jge
or
lret
xor
jbe
xchg
out
outsl
ds
andl
test
rcll
lret
mov
sti
adc
mov
scas
icebp
cmp
stos
insb
aam
daa
fs
es
sub
in
shlb
mov
mov
xlat
out
pop
lods
sbb
jb
sbb
fisubrl
lret
lods
and
inc
xor
lods
ror
call
cltd
or
js
mov
jmp
jno
pop
inc
mov
test
mov
das
pop
loope
pop
js
pop
and
push
and
adc
dec
adc
xchg
add
scas
out
cmpb
jns
out
es
scas
dec
pop
inc
sub
add
sbb
imul
mov
push
or
push
packssdw
pushf
jp
cmpsb
jge
jno
add
cmpsb
jnp
das
stos
push
mov
xor
pop
push
jnp
pop
movb
mov
out
cltd
outsl
sbb
adc
int
sbb
into
lea
inc
insl
scas
or
add
mov
xlat
aas
mov
xchg
or
enter
outsl
and
xor
mov
mov
imul
ja
test
mov
jecxz
movsl
lret
cmpsl
or
mov
add
ds
inc
pop
add
cs
mov
fisttps
mov
pop
dec
pop
in
and
and
scas
enter
jecxz
int
jecxz
cmp
mov
nop
xchg
test
fdivl
jecxz
dec
mov
fmuls
xchg
inc
jecxz
mov
xor
or
dec
xchg
and
push
xchg
loop
sbb
jle
dec
popa
pushf
push
inc
mov
ljmp
pop
cmc
add
adc
int
push
lods
adc
dec
jecxz
mov
je
push
popa
test
and
jmp
cmpsl
add
or
sub
orb
xor
fimuls
cmp
and
add
push
out
mov
aas
repnz
in
test
incl
mov
lock
aas
inc
frstor
and
sub
aad
and
orl
pop
lods
sahf
and
mov
xchg
cmpsb
jno
call
popa
adc
mov
dec
test
std
sub
sub
data16
les
lods
nop
sub
push
xchg
bound
jp
mov
stc
dec
repnz
pop
pop
dec
dec
mov
inc
push
pop
std
adc
jbe
mov
jmp
ds
xchg
xchg
stos
enter
pop
loope
outsb
jo
jg
pop
and
pop
sbb
outsb
iret
pop
cmpsb
dec
and
cltd
lods
je
or
xchg
adc
lods
cs
adc
dec
add
aad
aaa
sbb
mov
pop
sahf
dec
lret
add
pop
ret
lods
fadd
ficompl
into
pusha
imul
mov
mov
mov
out
cmp
shrb
out
dec
aas
out
xor
jne
xor
test
sbb
jns
addr16
in
xor
rorl
push
cmpl
jae
sub
fmul
push
jnp
fs
fldcw
nop
iret
pop
call
ret
fdivl
add
sub
lret
ds
fisttpl
dec
cmp
mov
sub
push
out
icebp
pop
xor
fst
pop
out
test
mov
jns
scas
jne
dec
push
cmp
mull
aas
outsb
jp
mov
dec
test
adc
les
mov
test
test
cmp
xchg
and
pop
mov
shl
loop
dec
scas
ficompl
rcl
mov
cld
sub
mov
dec
mov
push
mov
inc
les
mov
xlat
mov
mov
leave
mov
daa
push
sub
jge
jmp
add
xchg
push
and
or
jne
and
cld
mov
ret
pusha
pusha
cli
imul
or
popf
icebp
inc
std
pushf
pop
pusha
dec
jnp
sbb
cmp
add
test
jle
inc
fcmovb
ss
lock
adc
push
mov
jnp
cltd
push
addr16
xor
int
sbb
jb
ror
insl
or
enter
lods
lahf
inc
incl
push
fsubr
outsl
addr16
mov
xor
inc
cs
dec
mov
repz
pop
add
sahf
jo
dec
call
loopne
fmulp
stc
sbb
pop
and
jp
adc
push
and
push
iret
test
jmp
mov
pusha
xchg
inc
xchg
rclb
insl
call
aad
push
mov
fxtract
lret
fwait
insb
xor
push
jg
rclb
out
mov
push
into
into
pop
cmp
inc
sti
std
loopne
cli
cmp
arpl
cmpl
loope
repz
cmp
test
jmp
mov
int3
pop
popa
push
cmpl
pop
mov
sbb
clc
inc
jmp
outsl
std
popf
dec
cmp
xchg
xchg
outsb
mov
xchg
inc
mov
jbe
push
push
out
pop
call
stos
mov
cli
or
ret
aas
imull
lods
push
or
stos
lcall
add
addr16
push
gs
dec
out
sub
jo
xchg
inc
lods
ret
arpl
leave
je
adc
pop
push
stos
nop
sub
dec
cltd
loop
call
lret
icebp
pop
sub
xor
outsl
aaa
ljmp
sub
xchg
data16
sub
out
stos
xchg
icebp
aam
and
movl
cmp
aam
xor
push
xchg
fwait
jmp
clc
vmovhps
add
mov
mov
mov
iret
add
jecxz
ficompl
jae
jno
aaa
push
ds
and
mov
sbb
test
push
fisubrs
mov
ret
fldl
das
lahf
cmp
mov
lcall
pop
in
dec
cmp
loopne
lret
and
adc
mov
cltd
xchg
repz
cltd
inc
jbe
in
dec
stos
mov
shrb
lods
and
inc
adc
cmp
jae
movsl
clc
call
sarb
ret
ret
mov
bound
push
outsb
mov
inc
and
rcr
dec
inc
cltd
sahf
popf
jbe
push
xor
pusha
pusha
mov
push
jg
jno
cmp
inc
jo
xor
pop
push
push
iret
cmp
and
iret
in
cwtl
mov
call
loope
sub
in
loope
lcall
mov
aad
push
aas
xor
aam
enter
loope
int
push
add
mov
insl
rolb
xchg
xor
das
xchg
dec
sub
fdivl
fisubrl
ljmp
add
mov
dec
push
pop
jae
xor
popf
outsl
or
popl
cmpsl
or
cwtl
fstps
cmpsb
je
pop
add
stos
pop
or
aas
hlt
mov
pop
pop
leave
lock
mov
aaa
or
cmp
xchg
inc
int3
pop
dec
loopne
cs
lods
out
or
pop
ss
testl
bound
dec
xlat
inc
jl
in
xor
add
mov
adc
xchg
fadds
es
cli
pandn
ss
stc
add
fadd
daa
dec
lret
mov
xorl
in
adc
daa
je
cmpsb
inc
mov
dec
jno
xor
push
sbb
mov
fcoms
push
shlb
aam
aad
sub
dec
das
pusha
sahf
sbb
pop
adc
mov
push
jae
cmp
lock
inc
push
sbb
jmp
sbb
adc
stc
insb
pop
mov
pop
mov
mov
and
add
add
bound
out
das
jno
sbb
inc
xor
sub
add
push
das
fildl
xchg
xchg
enter
jmp
repnz
sub
and
int
push
or
push
fwait
lcall
mov
shl
lds
or
test
push
out
xor
sbb
imul
pop
push
daa
xchg
inc
push
out
cli
sarl
fisubl
mov
sarb
mov
fcom
xor
cmp
add
aaa
dec
inc
xchg
jne
loopne
insl
mov
xor
xorb
je,pt
imul
push
cld
cmpsb
and
int
mov
sub
outsb
mul
fisubrl
add
jo
jnp
dec
inc
pop
insb
inc
and
mov
mov
enter
mov
arpl
fists
pop
insl
add
or
dec
pop
shrl
ret
xchg
mov
jle
adc
xor
jecxz
fcomps
sub
iret
js
xchg
andnps
xor
add
roll
data16
lret
in
mov
cs
and
adcb
mov
add
cli
adc
lahf
adc
outsb
mov
lods
addr16
add
sti
pop
inc
fcmovne
mov
das
mov
ja
out
push
testb
enter
jecxz
push
inc
mov
inc
push
cwtl
loope
adc
adc
outsl
lods
inc
lcall
shlb
mov
rcll
dec
sub
jno
jno
out
adc
jp
ja
pop
das
fwait
jbe
movq
cmp
inc
mov
js
lahf
sub
test
pop
shlb
test
dec
push
lods
clc
bound
push
bound
out
xor
sbb
cmp
cmp
and
xchg
pop
or
loopne
xchg
ret
push
es
int
in
mov
push
sub
or
dec
sub
push
adc
jmp
add
arpl
cli
in
stos
mov
or
fstpt
cmp
cmp
out
out
test
scas
or
or
ret
jg
test
fisubrs
decb
mov
addr16
mov
xchg
shlb
push
inc
jns
xchg
xorb
lods
and
and
adc
leave
jmp
lods
jg,pn
adc
cmp
fists
fsts
loop
add
mov
mov
mov
hlt
add
mov
mov
test
ss
push
adc
inc
adc
lods
gs
movsl
add
dec
xchg
push
std
inc
sbb
dec
sub
inc
pushf
xor
add
jno
mov
push
mov
test
iret
lods
mov
mov
dec
jge
aas
add
cli
outsb
icebp
or
insl
dec
jns
and
cmpsb
mov
jle
sbb
xchg
aam
dec
imul
and
cmpl
fisttps
push
imulb
cmp
andl
scas
in
mov
mov
jg
push
outsl
mov
mov
jne
idiv
jg
cwtl
popl
sti
sarb
mov
pop
inc
jbe
insb
cmp
cmp
sub
addr16
into
and
sbb
or
sbb
add
jae
xor
and
or
jae
int
outsl
arpl
leave
pop
data16
unpckhps
xchg
sbb
ljmp
and
pusha
ss
pop
dec
lahf
ret
outsb
out
adc
jl
xorl
lret
out
ja
gs
fwait
and
mov
jecxz
jbe
test
xchg
xor
push
mov
lcall
jle
xchg
sbb
xchg
mov
insl
cmp
add
rolb
sub
enter
daa
add
stos
dec
push
dec
movsl
push
stos
jle
pop
inc
sbb
es
mov
fstps
mov
cs
arpl
dec
jne
aaa
pop
add
mov
addr16
jns
gs
mov
aaa
jle
push
adc
test
lds
sub
fildll
fildl
jecxz
inc
testb
rorl
clc
add
push
jae
xchg
sbb
mov
fsubrs
aaa
cmpb
enter
mov
add
loope
in
repz
lcall
mov
adc
pusha
push
sahf
mov
xchg
rcll
sbb
adc
sub
dec
xor
mov
es
ss
push
mov
ljmp
daa
lock
stos
xor
sbbb
xchg
mov
add
enter
cli
ret
movsl
js
ret
xchg
push
cmp
cmc
fwait
cli
jmp
rcl
xchg
leave
repnz
out
dec
xchg
imul
mov
pop
loopne
mov
jmp
shl
adcb
cmc
lock
and
punpckhbw
aad
cmp
mov
add
aas
push
scas
movsb
lcall
je
out
ja
mov
mov
ljmp
ss
cmp
add
lcall
dec
mov
test
pop
mov
cmp
mov
fisubrs
inc
pop
mov
arpl
pop
lods
les
std
icebp
adc
push
adc
hlt
push
cmc
popf
ja
mov
fdivl
xlat
enter
dec
bound
push
mov
lret
mov
sbb
imul
xor
fdivp
inc
jnp
stos
mov
inc
push
test
dec
popf
mov
andl
ret
jae
mov
addr16
imul
sub
xlat
enter
jecxz
xor
cmp
xor
hlt
inc
dec
jo
jae
add
pop
imul
jo
lret
add
mov
mov
out
push
mov
dec
cld
jle
gs
das
cmp
je
cmp
jne
xchg
ljmp
sbb
mov
leave
pop
js
insl
sarl
cli
dec
lock
fld
mov
push
into
cmp
mov
je
divb
arpl
repz
pop
rolb
ret
adc
add
outsb
sbb
mov
add
mov
test
cs
test
cmp
aas
lock
aaa
mov
sarb
pop
dec
push
or
lea
loop
scas
lods
fs
jns
aaa
out
icebp
xor
mov
mov
movsb
mov
cmp
dec
push
pushf
daa
aas
add
or
push
xor
pop
cmc
addr16
insl
push
xchg
fidivs
hlt
xchg
xchg
xor
push
sahf
and
cmc
lret
insb
popa
push
and
repnz
xchg
or
outsl
imul
xor
clc
scas
rorb
pop
lods
jle
xchg
nop
mov
stos
je
imul
sub
ja
nop
pop
in
leave
repnz
pop
aam
inc
cmp
fmull
call
scas
ds
scas
xchg
xchg
push
sub
push
cmp
mov
mov
jmp
imul
cs
jb
sbb
and
cli
lods
jge
mov
sahf
int3
jbe
xor
inc
sub
mov
lahf
cmp
cmp
cmp
sub
divb
test
adc
stos
mull
xchg
repnz
dec
jbe
movsb
pop
mov
push
inc
mov
jle
jo
adc
insl
hlt
outsl
cmpsl
xchg
out
pop
popf
xchg
cmp
mov
mov
push
cld
xor
out
dec
loopne
or
lock
add
dec
pop
jecxz
inc
fdivs
adcb
mov
repz
xchg
mov
inc
sub
push
test
jns
sbb
decl
aas
xchg
inc
popl
call
addr16
mov
xor
xlat
das
push
clc
leave
add
leave
or
mov
push
in
decb
loop
or
shr
clc
rcrb
inc
jns
aad
push
jle
hlt
jnp
sbb
mov
xor
test
cmpsl
and
sbb
mov
and
fisubrs
pop
mov
data16
sarl
push
jmp
xchg
mov
add
mov
mov
sahf
clc
adc
stc
adc
mov
je
popl
dec
pop
mov
push
and
mov
shlb
mov
ja
rorl
scas
pop
cmp
adc
mov
fistps
mov
jae
cmp
dec
push
movsl
rclb
xorb
pop
jp
mov
jmp
add
dec
xchg
push
aaa
or
ffreep
lock
push
mov
ss
push
fildl
lret
stc
mov
int
xchg
sbb
sbbb
pop
pop
mov
sahf
imul
push
xchg
cmc
cmp
pop
add
adc
je
bound
jo
ljmp
lahf
test
sub
pusha
xchg
inc
or
jne
jg
jns
inc
nop
push
out
fcmovnu
pop
imulb
sub
inc
sbb
dec
data16
out
inc
lcall
out
push
push
adc
push
ss
push
enter
clc
arpl
pop
add
imul
in
mov
sbb
mov
cli
xorb
movsb
mov
mov
aam
aas
into
sahf
ja
cmp
sub
xchg
pop
and
mov
mov
ja
icebp
ja
push
add
dec
mov
cmp
mov
cmp
xor
adc
dec
add
call
fldenv
and
pop
add
leave
and
or
shll
add
push
push
fiaddl
lds
mov
clc
pushf
cli
out
inc
sahf
mov
cmpsb
mov
fbstp
das
push
add
push
xor
jmp
cmp
scas
call
lods
or
ret
popf
flds
dec
test
or
push
add
cmpsb
mov
or
pop
sub
dec
push
jmp
in
dec
mov
cmp
mov
out
jne
jg
mov
loop
mov
dec
push
das
fwait
jns
mov
das
jno
shr
sub
dec
cwtl
xchg
pop
mov
in
loope
pop
jo
std
movsb
mov
fsubl
fs
mov
iret
and
movsl
add
sahf
sti
popl
in
dec
shll
scas
sbb
sbb
xor
mov
and
outsl
add
scas
mov
add
in
sbb
ffreep
dec
out
jecxz
adc
mov
add
jb
cli
call
cwtl
inc
in
outsl
jo
sbb
loop
out
mov
pop
jle
and
mov
jg
call
mov
inc
mov
mov
in
lock
mov
and
mov
jae
leave
adc
mov
dec
xchg
dec
outsl
mov
cmp
scas
dec
mov
dec
test
push
jns
mov
in
aam
sahf
int
xchg
popl
and
lret
sbb
mov
jl
popa
enter
sbb
arpl
hlt
aaa
sbb
mov
mov
push
lods
ljmp
scas
xchg
xor
sbb
out
jle
les
cmc
jle
repnz
dec
mov
mov
daa
sahf
xchg
mov
jg
aas
and
sbb
jg
sbb
les
into
sbb
bound
xor
rol
pop
aam
das
es
leave
testl
ret
lcall
cs
add
xchg
pop
loopne
mov
fidivrl
fst
mov
adc
jmp
fisubs
mov
mov
ljmp
aad
cmp
out
test
lea
xchg
mov
sbb
xchg
cmp
or
jae
or
dec
out
lahf
and
jp
sbb
aas
fisubs
jns
jp
sti
loope
adc
adc
xchg
in
mull
jmp
xor
and
fst
and
dec
mov
inc
movsb
das
xorb
enter
or
adc
inc
xlat
movsb
mov
bound
adc
mov
ret
ljmp
fnstcw
dec
xor
inc
vprotb
mov
das
aad
sbb
aas
or
push
pusha
scas
inc
adc
sbbl
cmp
into
data16
xchg
xlat
adc
pop
out
js
push
pop
iret
xchg
jbe
jbe,pt
pusha
faddl
jmp
pop
adc
inc
mov
insl
enter
shll
mov
aaa
insb
adc
fwait
adc
sub
insb
jb
fsub
add
pop
incl
in
test
enter
bound
call
pop
sbb
or
in
inc
adc
xlat
stos
stos
push
mov
mov
sub
xchg
mov
mov
cmp
in
scas
add
push
imul
stos
push
popl
das
cwtl
sbb
mov
sub
repnz
lea
stos
ljmp
inc
inc
lret
aaa
add
mov
push
mov
sub
pop
fldl
addr16
jb
jno
or
add
lret
mov
jo
repnz
sbb
sbb
jne
dec
push
xchg
pop
shll
dec
jmp
div
bound
inc
mov
xchg
xor
inc
xlat
gs
xchg
dec
repz
adc
jmp
out
mov
sub
push
mov
insl
jge
xchg
rcrl
outsl
jge
hlt
dec
rorl
leave
loopne
cmp
out
mov
dec
stos
or
ljmp
mov
xor
inc
adc
jecxz
lret
inc
dec
or
sub
cmc
jae
aad
or
jbe
into
ss
pop
bound
ficomps
jl
push
push
scas
scas
mov
pop
scas
gs
es
or
or
cmp
add
lea
out
xchg
ret
adc
sub
inc
lds
rclb
jecxz
loope
iret
cmp
ret
cltd
mov
int3
int
dec
adc
inc
adc
jne
or
dec
icebp
leave
xlat
ficoms
xchg
fistps
push
mov
sbb
jmp
sbb
repz
dec
js
aas
cmp
jl
add
fwait
outsl
or
mov
fwait
lea
cmpb
dec
xchg
lcall
jmp
sub
inc
or
hlt
mov
pop
aad
mov
ret
or
mov
ljmp
es
addr16
cwtl
fildll
faddl
push
pop
pop
lods
int3
lods
js
stc
and
cmc
fstl
inc
test
jmp
lds
push
roll
jbe
push
sub
in
and
out
subb
repnz
adcl
test
in
push
xchg
sub
sub
xchg
adc
inc
fisubs
xor
inc
sbb
insl
mov
aad
jl
lock
or
add
push
cs
mov
enter
int3
ds
and
dec
inc
mov
ror
dec
shlb
mov
mov
xor
sbbb
add
mov
cmpsb
sti
addr16
fwait
dec
jns
xor
and
lret
jg
dec
aad
or
jp
cli
push
adc
out
adc
cmp
mov
mov
int3
push
push
fwait
sub
sbb
sub
int
push
jp
rcr
scas
push
inc
fidivrs
push
sbb
cld
pop
ja
inc
mov
or
push
inc
mov
pop
outsb
mov
hlt
or
xchg
jp
bound
es
fidivl
pop
rol
mov
fistpll
jle
in
mov
mov
into
loopne
mov
sub
mov
movsl
mov
imul
inc
sahf
sub
pop
fiadds
hlt
mov
out
pop
add
lahf
jb
push
imul
test
dec
pushf
inc
inc
mov
mov
pop
and
push
xchg
cmp
mov
fcmovbe
mov
jnp
sbb
dec
sub
aas
daa
fdivrs
jnp
pop
inc
mov
fistpl
mov
sub
test
cmp
adc
test
pop
push
stos
cmp
dec
mov
inc
mov
mov
ss
push
in
push
scas
cmpsb
mov
imul
inc
xor
dec
fisubrs
lcall
sub
add
push
lock
inc
adc
mov
mov
sbb
div
push
cmp
seto
xor
enter
xchg
dec
out
push
arpl
pop
and
mov
ljmp
aaa
push
or
adc
mov
inc
test
pushf
cld
insl
mov
push
out
xchg
and
cmp
mov
arpl
lds
sbb
test
loope
sti
cmc
movsb
pop
ja
inc
fists
pop
test
fdivrs
xchg
pop
mov
stos
fdivs
enter
ss
out
fwait
shll
adc
dec
adc
xor
in
gs
dec
daa
pushf
out
mov
scas
popa
rorl
jns
iret
sub
pop
std
lock
stos
sti
inc
sub
in
jnp
pop
cmp
pop
int
and
mov
outsl
adc
bound
jg
outsb
pop
jae
mov
clc
repnz
fst
cmp
or
inc
xchg
jg
aad
les
test
gs
push
mov
lds
shll
mov
sbb
jl
push
jmp
cltd
test
xchg
stos
repnz
sbb
push
jb
inc
sti
insb
int3
mov
mov
push
add
add
test
icebp
fwait
in
ret
mov
jo
mov
repz
cmp
xchg
scas
pop
scas
or
cwtl
dec
inc
and
jle
push
pushf
push
insb
imulb
mov
cltd
mov
sahf
and
scas
dec
jbe
xor
pop
and
cmp
pslld
push
xor
pushl
sub
add
mov
mov
sbb
movsl
sti
push
mov
cmp
push
push
push
outsl
out
rorl
cmp
jmp
inc
jne,pt
or
mov
pop
test
xor
pop
cmpl
ljmp
gs
pop
mov
inc
xchg
pop
xchg
push
inc
add
jp
xor
leave
enter
xor
push
sar
cmp
adc
sbb
ret
std
scas
xchg
mov
inc
cmp
fwait
jl
xchg
daa
mov
xor
faddp
mov
sbb
cmp
xchg
jp
popa
icebp
sarl
and
mov
rcrb
icebp
jl
jne
mov
jecxz
push
mov
mov
push
xchg
mov
inc
mov
dec
iret
lods
lods
mov
adc
out
test
xchg
sarl
hlt
adc
pop
loope
sub
mov
xchg
les
pop
mov
cmc
stos
mov
outsb
xor
mov
mov
jnp
pop
mov
int3
push
sbb
rcrl
jns
test
pop
and
scas
ss
xor
test
jp,pn
pop
and
lret
sub
cmpsb
test
pusha
adc
mov
and
test
addr16
out
and
mov
fdivr
and
push
pop
sbb
adc
pop
cltd
fwait
pop
mov
sbb
aas
daa
sti
mov
sbb
add
ljmp
push
mov
mov
mov
mov
bound
or
xor
sarb
daa
out
adc
test
lea
int
inc
mov
stos
int
outsl
mov
or
out
xchg
lds
pop
in
jg
adc
negb
lcall
lea
lret
stc
cmp
pusha
jo
mov
inc
xor
mov
xchg
jecxz
xchg
xor
add
ja
lret
fnstsw
jns
or
test
test
cwtl
lock
repnz
shrl
fsubrl
xorb
jne
rorl
aaa
mov
lea
dec
jp
dec
fcoml
pop
ret
push
insl
sub
lcall
sub
cmp
push
mov
sbb
lods
cmpsl
jno
scas
stos
sub
inc
cld
push
andl
adc
push
lods
lahf
test
jmp
dec
lahf
and
mov
xchg
mov
mov
xchg
andl
aam
ss
das
cmpsb
pop
cmp
inc
in
mov
mov
ss
pop
xor
cmp
lds
stc
std
cmp
outsb
adc
jae
sub
adc
repnz
pop
ds
cmp
clc
pushf
adc
int3
jmp
cmpsb
sub
aad
add
jne
scas
sub
inc
mov
imul
pop
lods
mov
mov
xor
push
or
ja
loop
jo
ret
adc
sbb
adc
dec
in
jg
add
mov
mov
push
fs
lret
movsl
enter
outsl
mov
int
mov
jb
xlat
fnstsw
lods
cmpsb
xchg
cmp
sti
mov
mov
and
xchg
adc
or
mov
push
sub
stos
push
loope
pusha
lds
and
insb
das
push
lret
pop
imul
add
fstps
scas
mov
xor
shrl
jg
jmp
jb
call
testb
outsl
adc
mov
dec
add
pushf
mov
push
shll
lods
fidivs
dec
negb
pusha
fcmove
test
add
out
stos
sbb
popf
ds
jmp
pusha
cmp
jo
xlat
fdivrl
repz
rclb
jg
ret
loope
and
adc
xchg
jnp
inc
cmp
pop
mov
push
jne
ret
mov
stc
mov
or
std
xor
jmp
loope
jnp
push
or
in
test
dec
inc
prefetch
or
popf
test
xchg
jbe
xchg
daa
fsubl
mov
cmp
or
dec
ret
xchg
xchg
stos
aad
mov
xchg
mov
mov
sbb
dec
jne
rorl
xlat
xor
pop
addl
xchg
in
adc
in
xchg
xchg
mov
cltd
sbb
mov
mov
cmp
or
fisubl
lock
lahf
xchg
jo
sbbl
loope
imul
sti
je
mov
arpl
je
sub
pop
and
xchg
pop
in
ret
xor
stos
pop
mov
and
call
jmp
adc
insl
push
add
sarl
test
mov
mov
in
subb
out
in
mov
push
jmp
ficompl
in
je
inc
fcmove
arpl
add
add
scas
sarb
repz
pop
cs
test
in
lock
js
xchg
xchg
pop
icebp
jmp
and
lds
in
cmp
pop
mov
add
mov
pop
xchg
push
subb
icebp
std
push
cltd
jl
fdivrp
gs
mov
push
divb
xchg
dec
sub
fadds
jmp
inc
into
xor
jno
dec
mov
adc
sahf
or
xchg
push
sbb
add
pushf
je
cs
sbb
out
adcb
dec
sbb
mov
pop
neg
cltd
sbb
rcr
xchg
sub
stos
xor
dec
mov
mov
push
lods
je
out
cmp
gs
sub
mov
pusha
arpl
into
and
lret
and
stc
fistpl
sti
fadds
mov
cli
mov
xor
push
xorb
sbb
rclb
adc
or
mov
outsb
jnp
adc
sbb
lods
jo
shlb
in
xor
push
sbb
subb
dec
push
sub
and
push
rcrl
cli
mov
add
aaa
jo
filds
leave
stos
roll
adc
cmp
xlat
adc
mov
jecxz
imul
cmpsl
inc
or
dec
test
ficoml
dec
lahf
mov
adc
sbb
jge
outsb
or
add
and
push
push
lcall
fwait
imul
insl
jne
int
loopne
pop
mov
and
jnp
lsl
dec
ds
js
or
nop
push
pop
stos
adc
stos
and
mulb
sub
daa
mov
sahf
sub
pop
pop
out
in
icebp
xor
sbb
loope
xchg
adcb
divl
and
add
xor
jmp
test
aam
xchg
mov
push
mov
test
lods
imul
js
mov
and
sub
sub
pop
sbb
sbb
push
dec
mov
daa
adc
cmpsl
push
dec
into
and
dec
fucomp
push
inc
fs
jno
dec
fidivrl
inc
sub
sub
sahf
out
xchg
insl
jge
mov
push
decb
cmp
mov
cmp
imul
fiaddl
out
pop
rolb
mov
mov
push
call
inc
pushf
gs
lcall
negb
xchg
stos
testl
dec
imul
xchg
mov
xchg
xchg
xor
ds
mov
push
int
imul
mov
push
mov
pop
jge
or
dec
sti
in
fdivs
loopne
int3
or
pushf
fwait
ret
rclb
outsl
out
mov
cmpsl
xchg
cmp
mov
movl
xchg
addr16
jmp
and
std
mov
fisttps
sbb
call
loopne
test
xchg
and
and
and
push
insb
pop
push
jo
ds
lahf
sti
dec
lods
dec
sub
mov
mov
mov
dec
in
mov
test
mov
js
fs
push
icebp
iret
and
xchg
popl
fcomi
cmp
mov
xor
ffreep
jns
mov
xor
cmpsl
je
xchg
ja
add
popl
mov
in
mov
and
inc
xor
les
push
imul
mov
dec
loope
jns
out
repnz
mov
divb
inc
xchg
jne
mov
in
inc
scas
mov
fs
mov
dec
mov
enter
lret
jp
orb
sub
fildl
icebp
jo
mov
dec
sbb
sub
jge
jo
test
scas
das
or
mov
dec
notb
add
adc
xor
std
shll
std
stos
cmpsb
add
xchg
jbe
or
xor
inc
lcall
ficompl
sbb
sub
rol
lahf
dec
repz
and
ret
cmpsb
out
mov
cmpsb
scas
and
data16
out
pop
out
adc
movsl
fstps
and
rolb
mov
je
fcmovbe
push
inc
mov
out
aad
sbb
sbb
mov
repz
js
xchg
jbe
cs
xor
andb
inc
cmp
lds
arpl
mov
int
push
mov
fs
mov
xor
mov
or
lcall
std
repnz
ja
fdivl
fistl
mov
mov
mov
inc
pand
sbb
pop
std
aaa
pusha
loopne
int
add
cmpsl
subb
fwait
stc
cmp
pusha
mov
inc
add
mov
lea
data16
pop
or
sub
rcrl
mov
je
jae
xlat
ljmp
xchg
lods
out
push
arpl
jae
fs
sub
or
sub
jae
dec
jnp
pusha
movsb
mov
rcrl
out
or
ljmp
xchg
into
lods
add
outsb
xlat
lahf
stc
shll
jbe
or
pop
sub
lret
dec
test
sbb
and
fisubrs
xchg
pushf
mov
pop
daa
icebp
in
jno
push
mov
divb
mov
push
ds
cs
mov
das
push
xor
loop
mov
inc
push
jo
mov
add
xchg
ljmp
int3
jno
inc
push
ds
lret
push
and
inc
sti
jae
inc
cmp
nop
into
add
cmp
cli
cmpsb
lret
push
jno
mov
pusha
out
les
and
in
shrl
inc
mov
mov
inc
and
push
loopne
rorb
dec
das
fcmovne
xor
iret
aam
cmp
mov
js
sub
sub
test
jecxz
and
jnp
scas
call
pop
repz
mov
mov
popa
jmp
loopne
xchg
stos
jl
sti
push
int
adcb
cmp
push
test
leave
sbb
and
adc
mov
pusha
test
sub
cmp
jecxz
movsl
xchg
dec
es
mov
ss
xchg
dec
stos
fucomip
xor
rcrl
lods
adc
sar
mov
pusha
sahf
loop
add
mov
loope
pop
dec
jmp
push
cs
lods
adc
sbb
loope
jbe
dec
mov
shlb
clc
filds
jge
pop
or
outsb
inc
negb
mov
mov
in
jnp
in
push
jns
ror
cmp
iret
push
or
mov
shll
add
cs
xlat
sbb
jl
add
lcall
push
and
imul
mov
xchg
adc
and
jl
jle
jo
sti
adc
and
lds
cwtl
loopne
mov
arpl
sub
subb
cmp
pusha
cmp
jb
inc
adc
sti
cmp
cmp
mov
in
mov
jge
rol
jp
int
inc
fidivrs
insl
cmp
or
jecxz
adc
xchg
fiaddl
test
jnp
push
out
out
mov
or
sbb
insb
repnz
in
push
orl
into
repnz
test
mov
pop
adc
pop
add
sahf
repz
pop
mov
sub
daa
test
insb
pop
testl
xor
push
mov
les
aad
mov
xor
test
aam
inc
and
mov
sbb
pop
and
cli
jmp
xchg
add
cmp
and
or
or
pushf
fmull
insl
pop
inc
and
push
repnz
out
push
sub
ret
cmc
and
scas
adc
ficoms
stos
mov
push
mov
xchg
lret
test
mov
mov
mov
cwtl
lea
imul
sbb
dec
pop
jecxz
sub
lret
adc
and
adc
push
inc
sahf
lret
xor
adcb
inc
insb
inc
in
or
push
shrl
aaa
add
cmpsb
jbe
roll
subl
mov
mov
pop
xchg
push
mov
imulb
mov
hlt
dec
or
jo
push
adc
push
fcom
sub
or
add
testl
fistl
sub
fwait
lret
dec
mov
shrl
cmpsb
imul
test
js
and
xor
outsl
stos
pop
les
xor
fwait
fwait
cmp
xchg
decb
outsl
sbb
mov
mov
add
jae
or
push
ret
sub
push
incb
lret
pop
sub
push
ljmp
shlb
push
pop
dec
or
sbb
lods
dec
data16
dec
stos
and
sbb
push
xor
cs
adc
xor
sbb
mov
add
ret
xchg
shrb
dec
fnstcw
call
and
push
adc
in
and
adc
outsl
pop
fcmovnbe
jnp
or
mov
sbb
loop
jg
inc
insl
fadds
push
rcrb
popf
cs
in
fmulp
adc
inc
jno
decl
arpl
jbe
or
push
fwait
divb
sub
adc
jne
xchg
aaa
lahf
scas
push
popa
mov
mov
inc
arpl
inc
mov
xor
ret
jb
shrl
pushf
nop
aad
adc
std
cmp
insb
and
ret
cs
insb
stos
jmp
xor
aad
pop
sub
push
hlt
test
fs
pop
xlat
mov
cltd
mov
add
or
xor
jmp
jle
int
in
sahf
sbb
call
cmp
stos
lcall
mov
sbb
addr16
sbb
mov
pushf
nop
mov
insb
popf
push
pop
fdivrs
push
lret
mov
inc
call
jle
or
scas
fdivrp
adc
dec
movsb
hlt
outsl
dec
clc
mov
add
stos
mov
add
push
or
out
gs
popf
test
or
rcl
test
adc
faddl
mov
xor
cli
popf
pop
jle
sahf
add
sbb
mov
dec
xor
and
push
sub
ljmp
sti
popa
ljmp
jecxz
movsb
stc
xlat
xchg
out
rolb
and
rcll
cmpsb
leave
ljmp
scas
push
xor
loope
dec
mov
pcmpgtw
fsubs
imul
cmpl
cmc
mov
mov
push
notb
push
popa
jo
jae
mov
cmp
sbb
xchg
fs
xor
pop
and
mov
sub
push
add
mov
xchg
loope
mov
inc
or
gs
test
cmpsb
aas
add
and
fstl
std
pushf
mov
int3
insb
movsl
in
adc
adc
push
sub
pop
js
mov
cli
mov
sub
repnz
and
xchg
push
or
addr16
jo
and
outsl
mov
loopne
fs
in
in
mov
inc
stos
xor
adc
insb
jns
mov
xchg
out
jp
jmp
dec
and
repz
cmc
ret
push
out
out
sub
push
ds
pop
mov
lahf
jmp
fistps
ljmp
stos
scas
stc
jecxz
jg
adc
or
jo
mov
fldenv
sub
fwait
or
xchg
rclb
insb
pop
and
jne
xchg
ss
jnp
mov
mov
mov
dec
dec
pushf
movd
xchg
mov
rcll
add
lahf
jp
inc
mov
mov
jmp
aam
sub
outsl
xor
ja
les
cmp
pop
xor
repz
or
cmp
sub
inc
push
cs
add
jo
rcrb
or
add
dec
sahf
cli
cmp
xchg
adc
pop
cmp
mov
sbb
and
jmp
loop
xor
aam
arpl
sbb
inc
aas
outsb
imul
mov
ja
sub
mov
fsubs
adc
xor
outsb
cmp
mov
in
lds
lds
cmp
decl
jo
mov
cmp
in
mov
mov
pop
jmp
int3
lret
lahf
mov
sub
outsl
sbb
add
adc
cmp
shlb
sbbl
in
adc
inc
xor
imul
gs
fcomip
rclb
out
sbb
das
sti
lods
scas
popa
lgs
out
mov
lahf
in
xor
cmpb
sbb
ljmp
jg
jns
xchg
das
cmpsl
popf
movsb
cmp
mov
pop
xor
dec
movsl
add
lcall
push
lret
orb
iret
adc
xor
adc
inc
lds
outsb
pop
inc
test
mov
aaa
adc
mov
cmc
icebp
gs
jb
into
mov
lret
jmp
mov
inc
inc
add
cmp
fistpl
jp
es
push
jns
loope
dec
lret
insl
jae
dec
sub
xor
push
insl
leave
and
xlat
ds
inc
push
adcl
pop
mov
inc
lea
pop
mov
shl
inc
jle
inc
test
adc
int3
int3
rcrl
cwtl
out
aam
xchg
jne
xorb
and
mov
jae
dec
lret
dec
push
dec
mov
xchg
addl
cli
pop
loop
jecxz
in
mov
outsb
imul
rolb
lea
xchg
or
lret
test
std
add
xchg
inc
xchg
or
mov
push
xchg
mov
test
cmp
dec
jl
or
dec
loope
mov
and
clc
pushf
and
xchg
mov
and
or
jbe
adc
cmpsl
push
cwtl
push
mov
mov
xchg
stos
call
inc
xchg
lret
sbb
out
lds
popa
sahf
xchg
sub
xchg
add
xchg
rolb
iret
jns
int3
mov
and
loope
dec
mov
mov
shl
sahf
mov
xor
or
fs
dec
mov
in
push
in
setno
inc
dec
setg
cli
or
shll
shr
shll
fistpll
repz
jbe
aad
push
and
xchg
pop
adc
jle
pop
insb
jle
pop
arpl
push
jle
sub
or
out
mov
pop
movsl
pop
loop
pop
inc
inc
push
inc
cmpsl
jo
mov
icebp
mov
sti
mov
repz
mov
sbb
les
mov
or
std
mov
jno
in
push
mov
jp
lock
jae
xchg
pushf
pop
fdivp
lret
outsb
xchg
aad
mov
mov
inc
test
mov
out
sub
jae,pt
dec
test
xchg
mov
int
push
pop
xor
enter
dec
sahf
adc
cmpsb
xchg
iret
stos
jmp
sub
jae
cmp
popf
ss
sbb
pusha
ss
mov
push
pushf
push
jo
pop
pop
sub
or
icebp
push
unpckhps
fwait
mov
jb
test
sti
inc
dec
xor
fisubl
xorb
bound
inc
leave
popa
mov
hlt
inc
adc
sbb
loopne
jo
rcrl
stos
scas
rclb
out
ljmp
lds
ret
mov
in
sbb
inc
jl
adc
mov
lahf
pusha
add
xor
push
scas
lret
jns
or
xchg
adc
inc
in
cli
adc
and
xchg
gs
scas
repz
repnz
les
icebp
lahf
daa
stos
enter
in
fdivrl
enter
fs
jmp
mov
sbb
or
out
cltd
jbe
das
stc
cs
mov
and
mov
int
push
inc
mov
inc
aad
shl
out
or
mov
lahf
mov
sbb
ss
jae
sahf
scas
xchg
das
pop
adc
fs
cs
addl
idiv
adc
fidivs
mov
mov
ss
loopne
dec
stos
adc
in
cmp
xchg
dec
mov
aas
cmc
jp
insb
fsubrs
les
jo
cmc
shll
or
repz
pusha
mov
lods
sub
sti
ficoml
test
dec
sub
add
jo
test
xor
push
add
inc
pop
movsl
mov
divb
or
pop
shlb
or
leave
aad
dec
push
out
push
cli
enter
xchg
cmp
cmp
cmpsb
xor
ror
orb
add
add
sahf
lods
test
fcoml
test
sbb
fwait
pop
iret
jg
add
je
sbb
and
fisttpl
fists
mov
cwtl
or
fbstp
mov
dec
leave
add
jnp
adc
xchg
jl
or
inc
mov
sti
mov
sarl
sarw
xchg
adc
daa
inc
aas
sarl
mov
sbb
fisttpll
push
adc
rcl
jo
cmp
das
pop
mov
lcall
sbb
mov
ljmp
xor
pop
ljmp
and
mov
and
xor
xor
in
negb
in
cmp
inc
sbbb
lret
jbe
pop
js
mov
mov
daa
jmp
cmp
mov
dec
movsb
pusha
rcl
cmp
aaa
and
mov
xchg
and
mov
scas
in
popf
dec
in
push
inc
movsb
mov
push
inc
pop
jmp
mov
das
loope
mov
enter
lods
sti
mov
cmp
sub
lds
add
mov
pop
mov
adc
or
mov
imul
dec
jae
mov
xor
out
subl
scas
pusha
jnp
mov
ss
push
and
cmp
add
add
lods
pop
xor
jmp
jl
rcrl
mov
cmc
sub
rcr
pop
adc
fisttpl
inc
mov
mov
and
test
outsl
cltd
lds
sbb
or
out
pop
aaa
sar
push
mov
std
mov
lea
mov
pop
dec
mov
sbb
popf
aas
insb
icebp
cmp
mov
jecxz
sar
xor
pop
insb
mov
arpl
add
or
aad
in
andl
jle
negl
and
mov
insb
adc
jecxz
out
xlat
or
rolb
mov
lds
nop
hlt
out
push
data16
out
mov
test
jb
sarb
push
mov
icebp
mov
je
stos
test
daa
adc
es
mov
push
out
scas
inc
mov
jne
pusha
insl
jge
push
ret
stos
mov
and
lds
add
mov
cmp
cmp
dec
and
out
mov
popf
push
mov
cmp
cs
push
clc
xorb
add
pushf
jmp
ret
cs
push
mov
mov
mov
pop
arpl
pop
jl
cltd
push
mov
cmp
and
push
fldcw
fcmovbe
and
or
loop
jp
jae
add
inc
dec
in
mov
jne
aas
adc
sar
data16
xor
mov
pop
cmp
fldl
outsl
sub
mov
jg
popa
in
xor
cmp
lods
mov
stos
adc
cmp
dec
sti
inc
xor
jp
mov
pop
jne
cmp
shl
sub
add
lret
dec
adc
sbbb
aam
or
add
das
dec
add
mov
pop
movsb
cwtl
cmp
bound
inc
sbb
xchg
pusha
mov
in
sub
or
and
inc
dec
fcmovne
addr16
add
mov
mov
outsl
jbe
push
in
incl
adc
test
cmp
inc
arpl
inc
cmp
add
jg
cmpsb
sbb
mov
and
add
mov
mov
pop
push
ret
cmc
pop
or
inc
xor
ss
xchg
push
mov
add
mov
cmp
fiaddl
mov
les
icebp
js
mov
xor
add
push
mov
jbe
gs
or
jns
aam
notl
and
add
adcl
rcrb
add
pop
mov
std
mov
jle
mov
test
insl
orl
dec
and
fdivrl
mov
mov
xor
loop
sarb
fldt
push
add
dec
mov
mov
and
push
jmp
daa
cmc
cwtl
cmp
loopne
mov
pop
mov
xor
neg
nop
jge
jb
sub
cltd
adc
data16
js
mov
cmp
mov
out
or
into
insl
daa
out
mov
mov
in
sarb
ret
adc
int3
sbb
ds
jae
enter
cmp
pop
fcoml
popf
imul
js
into
cmp
inc
outsb
ret
xchg
out
fucomi
cmpsl
adc
popf
ss
icebp
jno
mov
or
loop
mov
scas
push
scas
mov
std
xchg
data16
adc
iret
push
insl
cmp
clc
aaa
lahf
gs
xchg
add
hlt
js
in
daa
pop
icebp
pop
mov
cmp
pop
out
jbe
dec
lods
fbstp
xchg
in
mov
push
fld1
and
push
enter
dec
pop
jae
pop
ja
mov
or
movsl
icebp
inc
sti
sbb
inc
xor
hlt
pusha
inc
js
dec
inc
fwait
jp
out
inc
sub
sbb
cmpl
pop
mov
mov
lret
shrl
ficompl
or
enter
inc
fidivrs
xor
mov
into
dec
pop
push
pop
int3
xchg
stc
and
andb
test
xchg
fdiv
add
outsl
mov
enter
jmp
add
sbb
scas
std
push
mov
jle
sub
sahf
imul
nop
gs
dec
js
lret
lock
or
or
mov
push
subl
cmp
aad
adc
in
cmpb
stos
test
leave
lods
mov
cmp
imul
pop
std
mov
clc
inc
and
jb
sbb
je
test
pop
or
aas
pminub
jmp
xchg
and
mov
movsb
pop
and
jge
push
inc
inc
frstor
push
inc
inc
enter
sub
fimuls
faddp
js
mov
sbb
shll
jecxz
xlat
lds
testb
push
or
mov
push
inc
movsl
shlb
mov
out
das
in
scas
cmp
iret
pop
repnz
sub
jmp
sbb
mov
mov
std
jns
and
sahf
bound
sub
cmp
movsb
sbb
push
xor
dec
push
pop
mov
and
cmp
xchg
popf
dec
ljmp
jb
xor
sarb
sbb
mov
mov
aas
sub
in
cmpsb
sub
mov
push
adc
aad
popa
pop
push
or
jae
jo
nop
cmp
outsl
xchg
mov
mov
cmp
les
mov
sub
imul
cli
pop
cli
pop
rolb
ljmp
cmp
mov
mov
nop
cmp
loopne
dec
je
in
insl
or
out
ds
mov
xchg
inc
push
in
loope
stos
aad
sahf
movsl
xor
sbb
mov
imul
fdivrs
mov
fisttps
sbb
stos
sbbl
psrlw
dec
pop
push
mov
inc
daa
add
dec
in
and
xor
dec
gs
ljmp
lods
push
inc
call
mov
push
aas
xchg
push
int
jmp
cltd
cwtl
into
lcall
sbb
pop
mov
push
xchg
and
sbb
add
dec
inc
cmpsb
mov
ret
jg
push
iret
and
movsb
imul
inc
push
cmpsl
or
shl
je
test
dec
je
jecxz
cwtl
and
out
push
add
mov
sub
roll
loop
fistpl
outsl
call
shll
loop
jno
inc
dec
lds
push
jecxz
or
xchg
out
movsl
xchg
push
pop
xor
in
jno
in
cli
adc
inc
nop
jns
popa
and
sbb
mov
data16
inc
cmp
adc
lahf
jno
movsl
jb
flds
jp
inc
adc
xchg
jl
dec
les
push
imul
mov
int3
mov
aam
pop
gs
bound
fdivr
push
pop
add
rorb
mov
inc
inc
jmp
test
sub
jg
sub
hlt
xchg
bound
dec
jl
pushf
dec
scas
mov
cmp
es
ret
sbb
xchg
push
imul
sbb
rorb
movsl
sbb
pop
add
xchg
jae
leave
aaa
js
insl
sbbb
cs
imul
stos
sbb
mov
xor
cmpsl
push
movsb
xchg
aaa
lret
jge
push
xor
push
jle
decb
xchg
bound
fidivs
popf
sti
pusha
sub
imulb
scas
outsl
rcrb
or
movsl
pop
cmc
xor
jecxz
push
dec
shlb
pop
xchg
es
ds
mov
cli
test
push
mov
sbb
jno
outsb
and
pop
inc
xchg
sub
shll
out
fs
or
out
jo
adcb
lahf
call
cld
outsl
dec
out
mov
into
mov
in
ja
xchg
xor
xchg
pop
cltd
sbb
testl
int3
ret
arpl
nop
gs
daa
dec
lret
ficoml
xor
jecxz
sub
je
cltd
dec
jae
sar
cmp
stos
cld
lds
movsl
iret
pop
insb
inc
js
leave
add
mov
xchg
jecxz
movl
xchg
int3
hlt
mov
mov
movsb
out
xor
push
lds
sbb
rcll
sbb
out
mov
sub
and
sbb
in
xchg
call
mov
aad
repnz
cli
mov
xor
mov
mov
in
xchg
popa
mov
bound
xor
adc
ffreep
cmp
mov
fnstenv
pop
xlat
add
ret
mov
rol
pop
cmp
cmc
xor
or
imul
cmp
jb
jl
cmp
ss
shlb
iret
jmp
jne
clc
jo
push
adc
movsl
inc
cltd
enter
inc
sub
xor
cmp
and
icebp
cmp
pop
mov
jle
jnp
ss
mov
sti
xor
dec
push
sbb
adc
out
jno
push
push
or
cs
jecxz
push
sub
dec
popa
cmc
jle
jae
and
sbb
mov
or
dec
sti
pop
mov
cmp
mov
fldcw
xor
dec
lods
mov
push
cli
sbb
cmpsl
lret
scas
or
inc
cmp
int3
clc
fnop
das
test
cmp
data16
sti
xchg
imul
roll
out
mov
in
xchg
jnp
cmp
push
cmp
or
mov
inc
sub
jg
sub
cmp
and
jmp
xchg
aad
iret
test
jp
divl
cmpl
cmp
dec
hlt
aas
push
in
cld
lea
dec
or
lret
in
mov
cmp
stc
aam
push
jo
jmp
push
jmp
out
inc
aas
cmpsl
cmp
mov
fdivrs
movsb
loope
and
aaa
std
sbb
popf
iret
mov
xchg
aas
dec
inc
jno
cmp
mov
and
adcl
lret
sbb
mov
adc
test
fildll
pinsrw
nop
mov
dec
lret
aad
xor
add
push
lcall
cmp
scas
hlt
shrl
and
das
scas
or
dec
jl
shr
xorb
mov
mov
or
fsubrp
out
scas
cmp
out
or
insl
jae
pop
rcll
ffree
jns
data16
cmpsl
mov
icebp
sahf
stos
xor
dec
test
and
sti
mov
adc
mov
nop
aad
lock
pop
data16
xchg
fidivrs
mov
push
jns
adc
push
testl
dec
les
mov
xchg
push
and
jns
icebp
dec
push
test
mov
popf
pop
ljmp
cli
cmp
cmp
test
inc
out
pop
pop
ror
mov
inc
and
and
xor
mov
xchg
stos
xchg
pop
out
inc
xor
cmc
mov
decl
dec
testb
repz
out
cltd
adc
or
arpl
mov
adc
adcb
xor
mov
cmp
fidivl
mov
sahf
stc
fisubs
push
jp
pop
mov
pop
imul
sbb
xor
adc
fistpl
repz
mov
mov
add
sbb
mov
push
lcall
loop
xor
mov
fwait
sbb
sbb
jge
ja
mov
mov
imul
jecxz
ja
fisubrs
scas
push
fmulp
loope
sbb
push
and
ljmp
addr16
fsubrl
xchg
add
mov
loope
gs
dec
add
cli
mov
dec
out
mov
ret
xor
sarl
inc
adc
inc
test
insl
mov
push
ficoms
mov
ja
jmp
dec
mov
std
jmp
mov
cmpsl
inc
mov
sub
mov
jb
push
pop
loop
xchg
adc
lods
cmp
in
xchg
ret
and
cmp
adc
pop
mov
jmp
icebp
jb
movsl
cmpsb
sti
nop
mov
and
les
cld
and
push
cmpsl
test
sti
xchg
adc
add
or
loope
sbb
std
pand
int3
xchg
ret
ret
or
jbe
adc
adc
push
sub
inc
ret
in
mov
xor
sti
flds
mov
fisttps
mov
inc
sub
mov
push
ljmp
xchg
fstpt
mov
loope
rcl
sub
xor
push
movsl
pop
leave
es
stc
fcomip
jmp
add
filds
out
jb
xchg
outsb
adc
int3
in
outsl
hlt
dec
enter
lock
sub
or
int3
gs
pop
pop
mov
add
xchg
and
jno
addr16
xchg
fs
dec
jbe
outsb
fstpl
test
adcl
inc
loope
mov
fs
shr
add
jbe
push
push
and
not
imul
push
push
loopne
cld
mov
lss
scas
fnsetpm(287
std
lahf
hlt
push
pushf
xchg
dec
aas
arpl
fistpll
cmp
out
lods
movsb
hlt
sbb
divb
dec
adc
cmp
xlat
inc
jl
push
push
in
and
fidivs
sbb
cmpb
mov
sahf
dec
les
push
dec
cwtl
stos
adc
jg
mov
aad
iret
ljmp
sbb
or
or
stc
sbb
adc
cmpl
cmc
mov
aaa
jmp
cmp
aaa
add
add
pop
movsl
iret
divb
cmp
xor
repnz
das
mov
in
out
mov
adc
iret
lcall
jnp
imul
push
fmuls
push
add
push
jae
pop
cmp
sbb
push
jo
inc
push
stos
xchg
mov
add
outsb
arpl
sub
adc
loop
out
call
stos
mov
pop
movsl
xchg
sbb
cltd
push
dec
sub
fnstcw
cmp
call
cmp
iret
shr
and
xor
sub
or
pop
aas
ss
jle
paddsb
ljmp
popa
sbb
pop
mov
jecxz
xchg
mov
clc
mov
lahf
adc
xchg
imul
cmc
xor
xor
rcll
out
or
pop
xor
mov
imul
dec
outsl
jge
bound
scas
outsb
stc
lds
data16
mov
pusha
leave
mov
notl
xchg
jecxz
lea
ja
mov
adc
enter
or
sub
aad
add
mov
xlat
or
jg
std
lret
into
mov
daa
jb
insl
cs
adc
pop
cmp
inc
pop
adc
inc
sti
faddl
data16
lret
jl
fistl
in
dec
inc
and
xchg
js
daa
in
pusha
cwtl
sbb
jmp
ss
cmp
mov
lret
stc
stc
cmp
sbb
push
mov
and
rol
add
push
popf
sahf
stos
mov
inc
dec
or
mov
dec
lcall
fwait
xchg
lahf
out
add
xchg
and
lret
mov
sbb
mov
sarl
sbb
fs
lods
sahf
jbe
push
xchg
jmp
jae
testb
mov
cmc
xchg
adc
int
pop
or
dec
cmpsb
sub
ss
pop
je
mov
mov
movsb
fistl
mov
je
enter
mov
mov
jp
mov
mov
jl
gs
in
shlb
int3
jle
les
das
mov
dec
jb
jae
mov
jne
in
inc
push
pop
cmp
xor
inc
mov
push
aad
cmp
fisubrl
movsl
rcll
mov
and
push
sub
or
mov
rcrl
dec
mov
addb
mov
stos
ljmp
in
push
das
fistps
sub
and
pop
lahf
notl
sbb
das
das
or
add
adc
jns
in
int
mov
sub
movsl
mov
mov
scas
push
mov
fadd
mov
in
sbb
sbb
loope
mov
leave
loop
pushf
scas
fisubrs
mov
ja
xchg
adc
mov
push
mov
or
push
cld
and
or
int
or
daa
mov
jecxz
jp
sub
xchg
mov
testl
int
fiaddl
aam
fcmovnu
jnp
mov
movsl
in
pop
popf
jp
mov
jno
int
pop
loope
lret
shrb
into
cmpb
ja
lret
dec
dec
dec
pop
cmp
jecxz
aas
lahf
sahf
dec
or
mov
cmpsb
ss
cld
stc
loopne
and
in
pop
nop
inc
in
sbb
push
jne
push
popa
psllw
sbb
hlt
les
cld
mov
cmc
iret
add
mov
xchg
loop
fs
fsubs
or
enter
pop
repz
fs
cmpsl
or
adc
in
push
push
repnz
mov
and
jle
addr16
scas
or
dec
int3
lock
cmp
fisttps
rdpmc
add
enter
add
cmpsl
push
ret
leave
bound
push
xchg
xchg
push
and
test
outsb
dec
shll
icebp
orl
enter
mov
push
test
insl
push
push
cmpsl
adc
data16
cmp
sub
mov
push
push
jno
xor
sbb
addr16
jl
fdivl
pop
mov
roll
fxch
mov
out
push
popf
xor
xchg
pop
sub
out
add
clc
gs
inc
decb
adc
int
inc
mov
xchg
lcall
and
leave
popa
mov
mov
imul
mov
and
in
sbbb
loope
into
pop
mov
mov
xchg
mov
rcr
bound
cmc
call
mov
sbb
cmpsl
xchg
hlt
pop
ss
adc
lret
ret
push
pop
cmp
fsts
pop
ficomps
pushf
sbb
stc
xchg
fucomp
dec
popa
fildll
pop
cs
xchg
aam
cmp
lret
fnsave
sbb
call
shrl
cld
sbb
das
into
mov
or
mov
test
xor
int3
out
xchg
cmp
test
iret
and
jno
test
movsb
rcrl
scas
add
dec
dec
lods
xor
and
and
xchg
mov
xor
sarb
jl
shlb
jmp
pop
or
test
or
frstor
jle
xor
mov
and
in
mov
mov
add
jmp
add
jg
mov
popf
add
pop
jge
mov
lds
nop
cld
cwtl
lock
lahf
cmp
xchg
lock
cmpsb
xor
fstl
cmp
lods
ss
imul
jae
dec
xor
cmp
jne
or
shll
pop
ss
xor
incb
lcall
mov
or
lahf
dec
xor
jle
jle
stos
adc
mov
ss
lahf
pusha
imul
fsubs
scas
call
dec
or
xor
sub
dec
das
out
jbe
ljmp
lea
mov
jg
iret
fsubrl
ljmp
enter
add
xchg
or
add
fwait
push
add
mov
push
mov
mov
adc
inc
push
shll
sub
mov
jp
push
insb
push
cld
and
sarl
xchg
sbb
pop
ds
lock
cmp
imul
sub
jmp
in
push
pop
dec
les
pop
lahf
pop
mov
outsb
fcomps
in
les
push
cmc
inc
xchg
fs
leave
or
imul
jb
andl
popf
outsl
mov
sub
xchg
mov
and
jmp
sbb
negl
pop
push
xchg
adc
pushf
inc
jmp
inc
insb
add
pop
jae
sub
js
jnp
cli
xor
das
sbb
mov
pop
mov
sbb
aad
push
cmp
jg
push
mov
sbb
pop
pop
mov
sub
paddq
mov
imul
adc
jle
push
std
mov
mov
sub
jno
in
push
xchg
dec
xchg
icebp
ret
cmp
outsl
fcomps
pop
les
mov
test
adcb
inc
repz
push
ljmp
insl
add
pop
sbb
sub
xchg
xor
xchg
pop
movsl
movsl
test
jl
push
rolb
add
push
sub
scas
dec
repnz
lock
xor
shlb
outsl
adc
faddl
fbld
push
ret
xchg
idiv
insb
sahf
mov
fwait
and
add
xchg
jo
adc
xor
push
rol
sub
cs
dec
in
or
xor
push
mov
push
and
lock
rclb
dec
mov
std
push
pusha
push
pop
leave
dec
or
add
sub
test
adc
dec
in
inc
pop
insb
xchg
popl
sub
cmpsl
rcll
cltd
push
mov
cld
int
add
jg
outsl
mov
push
cld
dec
stos
adc
mov
pop
clc
pop
adc
pop
push
aas
sub
in
sbb
imul
jl,pn
push
xor
xchg
lds
jae
pushf
xor
andb
mov
dec
fwait
adc
out
pop
xor
push
adc
xchg
or
int
push
arpl
inc
ss
cli
sti
jecxz
sbb
xchg
les
push
sbb
jp
pushf
pop
mov
push
xor
xchg
mov
popf
cmp
sub
jae
mov
xchg
std
test
out
sahf
fxch
jp
pushf
int
cmp
fnstsw
jne
popf
ret
inc
mov
xor
push
ret
repnz
pop
and
aam
add
aam
cmc
sbb
adc
xchg
xor
dec
push
ja
cmpsb
cmp
pop
rcrb
aad
aaa
adc
pop
addr16
jno
jb
jb
push
sahf
dec
jno
inc
cli
fidivs
sbb
dec
mov
jb
jns
mov
leave
mov
xchg
jns
movsb
pop
add
inc
inc
pop
dec
or
sub
stos
scas
subl
rcrl
inc
jecxz
cmpsl
lds
inc
ret
mov
addr16
mov
pop
stos
in
xchg
add
push
lcall
test
pop
mov
ja
movsb
shrl
jne
jl
lret
cmp
ret
and
dec
adc
dec
pop
mov
dec
lea
aad
dec
mov
cmc
mov
icebp
push
mov
push
testb
pushf
pop
sbb
push
lods
das
dec
loop
xor
push
lods
add
in
mov
iret
jno
push
int
dec
and
xchg
push
xor
adc
adc
or
in
xlat
pop
les
sbb
push
mov
es
in
hlt
sub
gs
aam
adc
cmp
jae
fisttps
cmc
imul
pop
pop
lea
jmp
xchg
push
sub
inc
rclb
mov
dec
jbe
imul
adc
jge
cmp
aaa
daa
push
dec
jecxz
ja
les
scas
pop
xor
inc
test
sbb
mov
mov
call
test
in
xchg
outsl
leave
xchg
cmp
sbb
lea
mov
mov
jne
mov
inc
cld
or
cmpsl
cmpsl
pop
sbbl
xchg
std
mov
xor
dec
sub
or
sbb
daa
pop
cmpsl
sbbb
pop
jle
pop
add
mov
js
mov
xchg
repz
mov
shrl
icebp
hlt
iret
jno
push
adc
hlt
sbb
mov
sbb
aas
sub
cltd
mul
sbb
popa
outsb
sarl
xorb
mov
adc
cli
fisubs
into
repnz
xchg
jb
out
adc
in
loop
cmc
andl
in
and
int
or
sub
fwait
and
push
xchg
push
mov
push
push
mov
scas
jp
adc
jmp
push
pop
movsl
or
xchg
test
mov
iret
call
sarb
sbb
in
iret
adc
adc
out
xchg
popf
insl
push
adc
jbe
and
xor
loopne
mov
outsb
inc
and
addr16
mov
cltd
faddp
daa
push
push
pop
push
nop
dec
ss
add
dec
jp
sub
insb
push
push
jno
data16
idivb
xor
push
xchg
neg
dec
sub
xorl
push
add
std
fs
pop
mov
pop
dec
cmp
out
fs
sub
fmuls
xchg
push
push
push
jno
frstor
lock
orb
shll
js
mov
jmp
repz
repz
es
jmp
mov
mov
mov
cld
cmp
clc
mov
iret
lods
mov
subl
ret
dec
push
es
mov
inc
sub
sub
mov
inc
ds
fwait
subl
les
push
and
sbb
lret
ss
push
cwtl
jno
pop
mov
hlt
sbb
das
stc
jp
int
fnstenv
ja
icebp
xor
lds
sub
xchg
push
add
imul
push
jne
jle
push
pop
fs
shl
and
jl
inc
mov
jno
cmp
and
ficoml
xorl
fcmovu
movsl
xchg
sbb
adc
mov
addb
cltd
mov
and
hlt
imul
jbe
dec
shlb
psadbw
or
or
add
loop
inc
jne
js
aam
xchg
nop
mov
jmp
stos
jg
cmp
pop
scas
imul
divl
mov
and
enter
pop
shr
mov
loop
sub
call
es
jnp
push
bound
lock
push
lds
add
jo
xchg
pop
mov
dec
aad
popa
jmp
cld
cmp
push
in
pop
fldenv
shrb
adc
adc
in
or
inc
popa
adc
stc
sub
jmp
popf
mov
dec
fistpll
loope
xchg
fsin
repz
data16
jmp
adc
lods
jnp
fdiv
out
std
dec
lods
inc
movsl
jmp
push
push
lea
mov
jb
sbb
sbb
sub
addb
or
push
cmpsl
add
je
cmpsb
mov
jle
sbb
out
mov
xchg
pop
jmp
jmp
push
inc
xor
cmp
push
inc
sbb
sub
mov
lahf
lret
out
popf
bound
sti
add
cld
js
cmp
shlb
cwtl
clc
lahf
jne
push
aas
cld
fst
icebp
inc
xchg
push
xchg
cltd
movsb
mov
and
push
dec
sub
dec
dec
test
scas
lret
adc
sarl
and
cmpsl
xchg
movsb
dec
xchg
jo
dec
rolb
icebp
cmp
frstpm(287
das
aaa
mov
mov
mov
and
test
cs
push
cwtl
jp
sbb
in
shlb
not
scas
dec
mov
mov
or
pop
je
les
xchg
repz
jmp
imul
pop
cmp
out
push
ret
into
mov
pop
hlt
dec
jns
cltd
sub
fadd
int3
aaa
or
and
pop
in
xor
dec
cmp
pop
cli
or
testl
int3
sti
cmp
fsts
or
pop
les
push
std
loop
lret
adc
loopne
sub
sti
negb
cmpsl
inc
lock
in
test
cmp
xor
or
mov
dec
xchg
push
sidtl
or
mov
mov
xor
xor
lock
dec
cld
push
jns
sti
mov
data16
mov
adc
xor
test
xchg
hlt
mov
loop
test
xor
jle
cmp
movsl
push
rclb
testl
sti
mov
mov
push
repnz
lret
jmp
and
ss
cmp
out
adc
leave
iret
xor
mov
xor
jmp
push
push
push
mov
int
daa
test
testb
out
sahf
or
or
sub
rcll
je
pushf
stc
mov
xor
dec
add
arpl
inc
icebp
mov
pop
shlb
sub
jle
cmp
loopne
rorl
enter
cmp
inc
xor
mov
outsl
or
loope
sbb
dec
lret
push
in
jb
popl
dec
mov
xor
inc
sahf
dec
mov
in
pop
mov
aad
pop
add
xlat
mov
lret
lret
pusha
fdivr
movsl
or
fwait
ret
lcall
or
pop
pop
mov
mov
dec
push
test
inc
outsb
fldcw
jge
inc
flds
mov
fmulp
popf
fimuls
rcrl
and
hlt
stos
sbb
cmp
enter
push
mov
scas
sub
dec
bound
outsl
xchg
loop
cmpsb
mov
shll
in
push
dec
insl
cmp
xor
loopne
dec
xchg
cmp
fldl
incl
xor
cwtl
xchg
pop
adc
and
jbe,pn
xor
test
adc
pushl
lret
pop
mov
cltd
lret
mov
dec
je
xor
adc
out
lods
adc
cli
outsl
or
lods
fs
ljmp
mov
xor
cmp
mov
pop
mov
sahf
xor
pop
pusha
jge
je
out
sti
mov
pop
mov
jle
inc
xchg
shl
movsb
clc
pop
xchg
idivl
shrl
sbb
jae
js
pushf
ds
mov
or
pop
xchg
cli
pop
adc
jbe
dec
fsubs
stc
sarb
aas
adc
xchg
push
cmpsl
push
hlt
in
xor
dec
out
mov
dec
rcll
iret
leave
mov
popa
inc
sti
add
xor
push
cli
push
jne
sbb
cmpsb
xor
xchg
arpl
sub
in
pop
iret
and
lcall
fidivl
dec
loope
cli
mov
cmp
xchg
cmpsb
out
test
sub
mov
arpl
adc
push
cmpsb
rcll
int
mov
or
xor
xor
jbe
inc
mov
or
ret
pusha
clc
jge
xchg
leave
mov
sub
out
sbb
push
test
lcall
bound
inc
dec
mov
popa
add
int
rolb
adc
sub
outsl
push
inc
mov
pop
jmp
cwtl
out
and
es
push
push
dec
sub
ja
pop
mov
nop
add
jbe
ret
dec
cmp
and
or
sub
cld
xchg
jno
rcrb
ja
dec
jbe
fsubs
scas
adc
aaa
push
adc
jecxz
sub
fiaddl
shll
dec
pop
ss
pop
mov
push
data16
insb
xchg
push
or
cmp
movb
in
xor
stos
push
lret
mov
mov
mov
insl
jb
xchg
icebp
stos
mov
out
call
jge
and
mov
lea
mov
mov
sub
add
push
shl
das
push
pop
insb
and
mov
test
mov
imul
movsb
lock
es
xchg
dec
loop
fisubl
push
call
sbb
jp
jb
jge
cmovae
out
fs
add
out
arpl
jge
outsb
jge
adc
jnp
outsb
add
mov
mov
arpl
jae
jbe
loope
jecxz
mov
ds
movsb
push
sbb
jno
add
inc
mov
scas
call
jb
cli
sbb
jne
jne
pop
sbb
jg
cmp
lods
shll
jo
add
sub
mov
loope
lds
stos
dec
inc
and
fs
mov
xor
mov
cmp
ret
jge
dec
mov
adc
jl
sbb
mov
pop
hlt
push
xchg
xor
shrl
or
iret
push
jb
mov
push
aas
rorl
incl
sub
je
add
mov
push
push
and
xchg
std
out
ds
test
dec
dec
call
push
mov
icebp
test
push
mov
dec
jno
nop
jecxz
cltd
shlb
leave
pop
clc
shl
movsl
pop
mov
sub
negl
adcb
aam
rolb
testl
pop
call
ficompl
pop
adc
xchg
mov
xlat
gs
inc
outsl
push
fsubrs
add
ret
and
xchg
adc
inc
insb
mov
ret
sub
aaa
ds
mov
push
add
imul
mov
mov
pushf
shrl
movsb
mov
out
aas
movsl
lcall
insb
sbb
dec
in
adc
jae
loopne
jp
pushl
mov
test
fisubrs
cmp
ss
outsb
cmpsl
mov
jle
das
pusha
mov
into
out
sub
add
outsb
jle
pop
sti
xchg
outsl
popa
lahf
shl
add
jns
dec
mov
in
out
push
test
xor
push
jle
jo
lods
and
xchg
pop
xchg
xor
xlat
dec
loope
js
sbb
mov
ja
aaa
add
out
add
rcrl
addl
in
push
mov
sbb
cld
and
clc
xor
pop
cmp
push
cmpb
aaa
pop
ds
and
repnz
jmp
das
fsubr
mov
lock
out
mov
mov
xchg
xchg
call
inc
xor
pop
sbb
aas
add
fcomp
jae
xlat
jg
dec
dec
mov
lods
mov
adc
aam
jns
mov
iret
jae
inc
mov
repnz
jae
xchg
testl
rol
xor
push
dec
ds
lret
in
mov
jl
jge
adc
jnp
pop
outsb
pop
add
fadd
mov
sub
dec
andl
inc
mov
jl
pop
xchg
rcr
mov
ret
and
or
mov
lods
jmp
mov
enter
iret
mov
fld
mov
pop
jp
mov
pop
mov
ret
lret
imul
adc
mov
insl
mov
adc
cwtl
jg
out
pushf
sbb
adc
lret
inc
mov
sub
jp
sub
dec
push
xchg
lods
jne
pusha
ret
or
jl
mov
test
je
out
faddl
dec
dec
jl
mov
jecxz
iret
cmpsl
adc
movd
lahf
jo
int3
cmp
push
ljmp
cmp
dec
xchg
fildll
and
in
ret
out
outsl
repz
jl
dec
pop
jp
ds
cltd
popa
stos
jno
dec
pop
xorb
mov
jmp
jge
cmpsl
out
lret
adc
push
lahf
inc
sbb
cmpsb
addb
mov
adc
das
ja
add
adc
cmp
int
mov
lods
mov
and
cmp
cmp
subl
inc
xor
loope
or
decb
aas
sub
pushf
fdivp
fs
setbe
mov
sbb
adc
mov
int3
or
lcall
inc
enter
mov
dec
ss
xor
ret
sbb
ljmp
fisubs
iret
mov
adc
pop
icebp
js
inc
xchg
int3
aam
mov
dec
adc
ret
fisubs
sbbl
mov
and
push
aam
xchg
or
adc
sbbl
or
add
arpl
leave
std
adc
dec
fmulp
push
jmp
ret
pop
sbb
cmpsl
xchg
out
cmp
pop
cmp
mov
icebp
inc
shlb
ja
mov
cmp
fwait
shll
mov
push
adc
dec
mov
xor
inc
mov
loopne
das
lock
lods
cmc
and
pop
enter
cld
push
int3
sub
mov
andl
das
fstps
das
daa
scas
jb
test
icebp
stos
jne
out
sbb
mov
push
sbb
fnstenv
dec
add
bound
stc
jmp
add
inc
andl
and
mov
inc
dec
pop
sub
sbb
shr
dec
add
fld
test
stos
jl
loope
mov
xchg
imul
add
jp
mov
outsl
out
dec
ds
out
sti
mov
mov
mov
push
dec
repz
mov
repnz
add
sahf
in
in
cmpb
stc
mov
mov
lea
push
call
sbb
into
cmp
dec
aas
mov
mov
js
xor
xchg
aaa
fwait
imul
push
mov
push
push
test
cld
enter
inc
push
hlt
adc
test
ss
adc
data16
xchg
add
adc
mov
mov
sub
jp
cmp
jns
pusha
add
and
jb
xlat
lret
mov
xor
add
les
push
mov
inc
inc
push
inc
add
push
xchg
inc
push
mov
leave
imul
test
cmp
or
aam
or
pop
mov
mov
xor
cmp
push
popa
daa
mov
fistpl
push
mov
xor
bound
jne
dec
out
adc
and
ret
mov
daa
cli
adc
dec
add
pop
sbb
mull
pop
orb
mov
lret
inc
mov
movsl
xor
sub
cmc
xchg
cmp
mov
sahf
xchg
or
and
jbe
into
jmp
enter
add
rcll
mov
xchg
rclb
pop
iret
repnz
data16
mov
lods
jbe
adc
scas
or
test
mov
setbe
dec
out
iret
lcall
paddusb
jno
movb
jmp
and
jns
dec
pandn
lods
jmp
dec
rolb
dec
adc
insb
sub
and
outsb
dec
and
sub
test
mov
jp
sbb
shl
pop
jbe
mov
push
sahf
xor
add
outsb
xor
addr16
gs
mov
ljmp
push
lods
dec
test
rorl
jge
mov
push
std
insb
and
dec
xlat
or
fnstcw
das
and
outsl
mov
and
sbb
jecxz
jno
dec
and
or
out
xor
jmp
adc
pop
adc
jnp,pt
in
es
mov
in
dec
jno
test
cmp
fwait
mov
sbb
hlt
pop
das
and
jno
sub
mov
or
movsl
push
push
add
movsl
xchg
pop
mov
dec
mov
jmp
loop
add
pop
ss
daa
dec
and
dec
inc
mov
or
loopne
dec
popa
daa
testl
xlat
sub
jb
cmp
jge
inc
in
fwait
cwtl
idivl
lock
and
popf
adc
pop
jbe
inc
setbe
xchg
sarb
xchg
mov
sub
pusha
jae
andl
rcrb
pop
imul
lret
xor
mov
movsb
int
test
es
and
psraw
stc
push
jae
ret
popa
sub
bound
mov
and
xlat
mov
icebp
fisttpl
push
mov
out
pushl
pop
jb
icebp
mov
ret
xor
test
cltd
in
das
cmp
sub
out
pop
or
gs
stos
lret
lret
add
jnp
incb
fs
lock
mov
cltd
sbb
ret
pop
sub
push
mov
out
and
and
fcmovu
adc
xor
push
ss
inc
cmp
mov
mov
mov
and
outsl
rcll
push
rolb
push
inc
mov
fwait
movsb
sbb
ficoms
or
xchg
pop
inc
mov
xchg
push
dec
jnp
add
scas
jecxz
pusha
jnp
pop
daa
push
inc
cmpsb
fnstsw
out
sbb
pop
dec
xlat
cmp
xchg
mov
fbld
test
inc
lcall
sbb
push
gs
out
sub
sbb
insb
ret
sub
test
adc
jne
aam
and
xor
repz
loop
loopne
aaa
and
pop
pop
mov
pop
daa
in
mov
add
and
rclb
pop
iret
hlt
loope
dec
push
xchg
ss
dec
out
pop
std
fldl
mov
sub
pop
lods
out
cmpsl
xchg
gs
lcall
inc
fists
push
fwait
push
jb
jmp
es
adc
sbb
cmp
stos
test
subb
sbb
hlt
and
test
and
pop
cmp
inc
loopne
mov
sbb
pop
subl
mov
and
jns
pop
pop
int
andl
sbb
cmp
adcl
clc
and
inc
sbb
inc
loope
mov
add
adc
and
sub
push
cmp
inc
shlb
and
shll
bound
std
repnz
daa
adc
adc
iret
xor
fimuls
mov
aad
fdivrs
rolb
icebp
sub
ljmp
or
filds
aas
clc
adc
or
sub
xchg
lods
add
or
xor
and
lods
mov
and
sub
mov
sbb
mov
xchg
sub
add
mov
call
scas
sar
lods
xchg
pushf
stos
cld
jg,pn
ljmp
xchg
xor
push
xchg
fwait
push
mov
lret
rorb
inc
xchg
aam
imul
loop
dec
dec
jo
lds
in
adc
cmp
and
lahf
jle
mov
dec
pop
push
mov
and
pop
aad
adc
cmpl
mov
jge
xor
xchg
fadds
or
mov
shl
fidivs
mov
repnz
and
dec
arpl
je
cmpsl
jmp
jae
sub
daa
stos
mov
pop
adc
jmp
neg
xor
mov
cwtl
mov
jg,pn
ret
subl
add
sbb
pop
cmpsl
jo
mov
lock
inc
inc
icebp
pop
sbb
test
jno
dec
ja
xor
inc
pop
addb
xchg
mov
fcmovbe
jbe
test
xchg
jno
out
outsl
les
cmp
pop
stos
sub
cmp
outsb
mov
pusha
scas
dec
dec
lcall
lods
movsb
dec
ds
fsubrl
in
jo
push
loopne
test
lret
dec
jbe
xor
sub
dec
mov
mov
sub
les
jne
xor
adc
add
sbb
mov
popf
push
sub
pop
daa
bound
cli
imul
mov
pop
loopne
inc
loope
int3
rcll
pop
js
lret
adc
push
dec
sub
arpl
sbb
adc
addl
popa
lea
mov
call
insb
lret
filds
fisubrl
dec
pop
filds
test
push
sub
hlt
and
mov
mov
lock
cmc
cltd
cmpsl
daa
adc
outsb
adc
jae
aas
jo
push
repnz
mov
cmc
sub
sti
mov
xchg
sbb
dec
pushf
cmp
push
cli
sbb
lcall
sbb
lahf
mov
dec
ret
fisubl
push
nop
bound
mov
mov
mov
or
es
into
inc
pop
adc
in
push
sbb
fs
jb
dec
and
jl
aas
imul
testb
push
lret
ret
push
jecxz
cmc
popf
mov
je
imul
dec
or
or
mulb
out
fildll
sbb
in
cmpsb
xchg
bound
roll
fiaddl
mov
subb
or
inc
push
ja
mov
inc
insl
or
popa
and
mov
push
add
enter
ja
cmp
inc
testl
cmp
mov
dec
mov
fisubrl
outsb
pop
les
cmp
cld
mov
ret
pop
xor
and
testl
in
cmp
insb
dec
in
sbb
push
int3
leave
xor
test
enter
push
dec
xlat
pop
xlat
fwait
xor
lret
je
andb
jne
aaa
daa
adc
insb
fs
test
sar
inc
repnz
outsl
add
dec
mov
mov
sub
add
sub
dec
xor
lea
xchg
inc
mov
lods
test
test
std
jo
out
gs
xor
xor
xchg
cmp
mov
or
mov
repz
cmp
lahf
aam
out
push
and
fs
pop
aad
test
pop
xor
add
in
loope
std
mov
push
lock
jne
or
stos
in
ljmp
mov
sbb
lea
pop
jge
dec
cmpsl
std
lds
cmpsl
xlat
pop
leave
in
dec
push
jmp
repz
pushf
sub
fdivs
and
insl
lret
sub
out
inc
push
mov
aam
push
jl
mov
sbb
xor
mov
sub
xor
das
jecxz
loope
xlat
dec
push
push
sub
mov
xor
lods
sub
loopne
sub
cmpsb
mov
jp
in
xchg
sbb
inc
xor
std
out
add
pop
pop
repnz
data16
jne
pushf
stos
daa
and
imull
out
ljmp
out
popa
frstor
clc
test
mov
ja
mov
pop
inc
push
adc
lret
mov
mov
dec
in
aad
xor
lds
cmpb
xor
sbb
dec
xor
xchg
and
fyl2x
and
ja
cs
aaa
and
nop
or
mov
fildl
popf
cld
lret
pop
cmpsl
jg
cltd
jge
scas
jns
mov
cmc
cmp
dec
jae
mov
xchg
and
out
ret
in
mov
out
sbb
sub
nop
adc
or
lock
pop
cmc
cmp
addr16
fimull
mov
adc
mov
sub
jge
lods
fdivrl
mov
sbb
in
jmp
and
jge
inc
mov
jbe
jp
mov
sub
xlat
repnz
int
movsb
stos
mov
adc
xchg
and
int3
push
fs
inc
lahf
sbb
inc
sub
add
sub
jb
cwtl
cmpsl
fdivrl
or
add
sub
add
add
cmc
jge
ficoml
xor
add
into
imul
mov
mov
mov
cmp
sub
sarb
mov
mov
pop
dec
cmp
fldl
in
data16
fstps
push
inc
rolb
adc
xchg
std
adc
test
incb
xor
adc
cld
mov
std
int
cli
jne
stos
cmp
mov
mov
cmpsb
cmp
adc
mov
fld
dec
das
dec
sub
cmpsb
test
sbb
movsb
adc
push
loope
adc
gs
cmp
out
shl
out
adc
mov
mov
lcall
stc
cmp
add
sub
test
pusha
mov
mov
rorl
shrb
mov
xlat
pop
mov
stos
cmpb
or
mov
push
xchg
mov
cmp
mov
sub
repnz
fsubrs
push
ret
daa
fdivrl
sub
aad
lret
push
xor
movsb
addr16
in
jecxz
mov
push
lahf
decl
xchg
pop
pop
jbe
xor
ret
ds
or
outsb
lds
aaa
push
pop
add
jnp
xchg
add
and
inc
insb
mov
jmp
bound
dec
int3
push
mov
test
jge
call
jl
pop
mov
xchg
mov
sahf
cmc
add
push
ja
add
dec
jge
bound
in
or
mov
cmp
repnz
testl
imul
push
pop
inc
and
arpl
lret
push
xchg
out
mov
sbb
aam
rol
repz
imul
push
enter
testl
es
inc
sub
jp
xchg
xor
enter
cmp
outsb
mov
dec
rorb
and
mov
sub
adc
int
pop
pop
aaa
movsl
sub
cmpsl
dec
mov
sbb
inc
jnp
or
xchg
or
dec
inc
xor
lcall
ss
xchg
dec
jg
out
xorb
gs
dec
shrl
jg
jecxz
xor
movsb
sahf
andl
cmp
jo
pusha
jno
movsb
fwait
sub
sbb
pop
inc
jo
das
jnp
mov
ss
mov
out
in
push
cmp
add
lcall
xchg
inc
xchg
add
fsubs
mov
push
mov
cmp
sub
xchg
jne
inc
xor
dec
and
sarl
adc
arpl
cmp
sub
inc
and
shlb
jle
pop
icebp
imul
int
mov
sub
pushf
int
and
dec
not
xchg
fdivrl
enter
or
mov
mov
dec
jge
jne
mov
fs
cld
or
pop
mov
mov
cmp
sub
jl
and
cmp
cwtl
mov
sub
dec
je
mov
cltd
jbe
jge
adc
xor
repz
sub
adc
cmp
xchg
mov
or
arpl
pop
dec
jne
cmp
in
jae
popa
gs
xchg
dec
nop
xchg
jo
call
out
enter
arpl
sti
lea
xchg
test
push
xchg
pop
lret
sub
push
arpl
push
xchg
mov
adc
or
insl
movsl
testb
push
inc
mov
sub
sbb
je
inc
dec
ret
sti
add
cmp
in
mov
shrl
loope
bound
jns
fs
sahf
stos
jl
xchg
outsl
fs
inc
push
sub
pop
dec
mov
adcb
mov
rorb
mov
outsb
shlb
push
push
dec
outsb
mov
cmpb
mov
dec
inc
outsb
outsb
ja
enter
out
push
and
notb
out
mov
cwtl
jo
xchg
xor
ss
add
sbb
push
or
pusha
push
mov
sbb
fstpt
mov
jmp
mov
test
rcrb
cmp
xchg
sub
pusha
decl
xor
xchg
sub
xchg
push
lods
repnz
push
sbb
cmp
in
cmc
xor
aam
xor
mov
mov
mov
lods
xor
mov
cmpsl
je
pop
push
jle
cli
daa
jmp
jl
aas
jns
out
or
icebp
je
inc
push
sub
out
xor
cmc
cmpsb
sahf
imul
cmp
xor
mov
das
pop
adc
jne
in
call
ret
sbb
pop
out
mov
dec
mov
xor
je
loope
fistps
and
lods
imul
lock
andl
push
test
dec
sub
add
lahf
xchg
dec
sbb
popf
mov
lods
clc
push
mov
dec
sub
cltd
scas
cmpsl
jl
add
dec
add
data16
les
cmpb
int
and
mov
push
inc
dec
rcr
mov
pop
loop
iret
iret
loope
ja
push
mov
xchg
imul
dec
bnd
add
jle
pop
cmp
push
arpl
imul
cmp
lea
dec
mov
adc
or
mov
ja
outsl
xchg
push
test
cltd
out
in
shlb
clc
and
mov
jl
jl
push
cltd
mov
nop
mov
loop
ljmp
sarb
push
push
jbe
imul
push
xchg
push
sbb
pop
cltd
jne
jae
out
pop
out
mov
dec
inc
lahf
popa
popf
or
mov
sti
ds
mov
sbb
arpl
mov
cld
rorl
inc
adcl
lret
outsb
shl
icebp
inc
mov
inc
and
arpl
data16
sbb
sbb
pop
loope
imulb
add
leave
sar
faddl
in
xor
pop
sti
mov
faddl
push
xchg
adc
inc
loope
jb
jecxz
pop
ds
pushf
jmp
mov
jno
hlt
push
and
adc
inc
pusha
cltd
jns
ds
enter
pop
lahf
jp
popf
pop
xor
in
sub
push
arpl
or
jno
and
out
jge
mov
mov
pop
sbb
inc
lods
push
push
add
jmp
adc
sub
jbe
sahf
dec
jp
or
outsl
jnp
push
ljmp
stos
int
sbb
sub
sub
jle
cmpb
jae
mov
fs
jg
xchg
test
ss
mov
scas
cmc
mov
lret
stos
stos
mov
add
stos
pop
mov
pop
add
or
lcall
push
xchg
mov
push
das
scas
cmp
lock
cltd
mov
je
outsb
ret
mov
ror
fmuls
or
sbb
ja
repz
xchg
or
loope
pop
cltd
push
test
push
jp
lds
xor
lcall
shl
ss
mov
push
into
cmc
mov
les
or
adc
xchg
push
sub
ret
cltd
mov
jp
pop
mov
adc
lea
jb
addb
xchg
pop
popa
pop
adc
or
rcll
inc
xchg
jno
out
bound
jnp
leave
xor
mov
add
lret
and
sbb
fistpll
cmp
jge
adc
push
jae
fldcw
mov
nop
fcoml
mov
jno
rclb
repz
push
xchg
pop
enter
mov
mov
sbb
lcall
loope
mov
leave
fcoml
mov
call
enter
jne
mov
into
jno
xchg
mov
and
adc
cli
jno
mov
xchg
scas
loop
xchg
jb
sbb
sub
loopne
mov
push
push
lods
jne
out
xchg
scas
jecxz
mov
cmp
sarb
jp
pop
xor
roll
ja
jge
popf
xor
out
lret
mov
ljmp
adc
stc
inc
pushf
ret
in
inc
jg
sub
cld
push
mov
inc
mov
jl
cmp
ss
loope
add
stc
rcl
cmpsl
pop
data16
test
icebp
sbbl
aas
or
dec
sbb
sub
jmp
sbb
mov
push
jl
xlat
pushf
rol
push
mov
jmp
jmp
cltd
out
scas
adc
pop
jns
sub
and
fildll
push
add
adcl
dec
pushf
cmc
pop
js
lcall
pop
xchg
sbb
jl
lods
sub
xchg
inc
mov
ficoms
mov
out
fs
shlb
arpl
pop
cmpsb
vmptrst
lret
dec
bound
xchg
shlb
push
pop
lea
inc
out
in
sub
fs
xchg
jmp
stos
mov
pop
ds
pop
dec
fsubs
sub
stos
xchg
jp
icebp
lea
jle
movsb
xor
repz
test
cmpsl
mov
rcl
lock
sub
icebp
xor
xchg
dec
loop
mov
add
dec
cmp
movsb
cwtl
scas
jbe
sub
mov
sub
out
add
fldenv
test
cmp
shr
ret
cmpsl
jp
imul
enter
jl
mov
push
add
or
std
inc
sub
int3
inc
adc
adc
jne
into
dec
inc
rolb
ds
sbb
movsb
inc
ds
repnz
inc
or
mov
mov
xchg
xor
clc
jo
push
sub
and
rclb
lret
pop
jb
mov
scas
out
in
xor
cs
add
mov
repnz
pop
push
gs
or
gs
out
in
lods
inc
out
mov
in
test
aad
dec
out
mov
scas
dec
sahf
mov
pop
rcrl
cmp
scas
add
aaa
mov
inc
cs
adc
cld
jne
lock
fcoms
adc
out
jnp
adc
jmp
rclb
pop
decl
div
mov
test
jecxz
lret
lret
adc
adc
xchg
sti
mov
jp
pop
in
jnp
mov
in
scas
mov
xchg
mov
fwait
add
or
loope
icebp
jmp
mov
rcrb
rolb
pop
dec
sbb
popf
in
enter
push
sub
push
sti
add
or
mov
pop
in
dec
ror
jns
insl
outsl
outsl
mov
dec
test
fisttpl
ret
adc
sbb
pop
jae
mov
ja
fs
xor
jnp
mov
test
sub
inc
test
loop
inc
push
xor
dec
std
mov
rcrb
imul
cwtl
pop
jnp
or
lods
cmp
and
xorb
iret
cli
insl
hlt
push
mov
pop
cli
fwait
add
test
lds
jle
dec
pop
popf
mov
mov
push
mov
inc
cmpb
daa
mov
xchg
negl
movsl
orb
imul
add
lahf
test
mov
repz
jae
stc
mov
pusha
xchg
cld
push
outsl
sbb
mov
pop
fsts
and
push
and
call
or
lahf
jmp
mov
push
xor
daa
cmp
pop
mov
leave
xor
imul
sbb
addr16
aas
jne
enter
arpl
mov
cltd
movsb
cmpsb
jmp
in
xchg
cmp
mov
rcrl
stos
stos
mov
sbb
jbe
dec
daa
push
lret
sub
inc
mov
mov
xchg
ja
test
pop
push
faddp
sti
mov
faddp
in
jo
aaa
jae
push
pop
loope
in
mov
in
int
imul
or
pop
stos
cmp
movsb
dec
dec
ljmp
sub
and
and
push
xor
mov
mov
adc
outsb
mov
cltd
mov
fidivs
sbb
sbb
shrl
mov
and
and
movl
dec
dec
addr16
cli
jecxz
sbb
jg
mov
scas
loopne
mov
cmp
arpl
inc
pop
xchg
mov
pop
add
stc
add
ret
inc
daa
dec
fadds
add
pop
pop
test
push
stos
icebp
inc
rcrb
pusha
fmuls
test
cwtl
or
clc
cli
aam
movsb
into
push
mov
dec
shrl
pushf
cmp
movsb
shlb
insl
xchg
lcall
jno
imul
arpl
lret
cld
pusha
and
pop
fwait
addr16
in
mov
cld
shrl
mov
mov
mov
xor
jle
fwait
ja
push
test
dec
jle
in
and
lds
push
push
ret
int
int
jo
push
or
and
or
sub
fdivrp
or
push
fsts
pop
mov
and
or
pop
loopne
sahf
cs
inc
inc
popa
xchg
mov
add
xchg
loope
aad
lret
mov
ss
hlt
scas
mov
dec
add
sbb
xchg
mov
pop
pop
xor
adc
in
ficoml
gs
outsl
mov
call
int3
add
loopne
xchg
dec
cmp
sti
lret
mov
xchg
jmp
or
je
ja
testb
test
cwtl
ficoms
sbb
push
dec
fistpl
mov
jnp
test
shr
pop
jo
and
and
daa
jb
mov
cwtl
sbb
negb
cwtl
cmp
scas
mov
clc
push
xor
mov
jbe
dec
add
daa
cmpsl
shlb
mov
test
fisubs
jno
insl
adc
shrl
ljmp
loope
fdivrs
int
pusha
pop
fstp
jbe
push
pop
xor
pusha
dec
cmc
sar
and
mov
fscale
dec
call
and
inc
ficompl
lock
leave
popf
daa
pop
iret
jle
hlt
cli
movsb
lahf
mov
jae
jl
pop
mov
adc
popa
xchg
cli
fs
push
sbb
icebp
repz
out
lea
gs
inc
sub
mov
and
mov
xchg
adc
sub
cmp
mov
jae
or
or
and
je
xor
xor
jb
sbb
loopne
mov
cmpxchg
add
arpl
push
mov
pop
mov
sbb
push
mov
add
pop
rolb
and
cli
gs
push
mov
lcall
mov
push
and
xchg
mov
es
lea
sti
nop
aad
lods
sbb
push
clc
aaa
imull
xchg
push
roll
scas
mov
push
cmp
lods
mov
in
inc
xor
pop
std
cld
sub
pop
shl
stos
mov
push
aas
enter
xchg
pop
cmp
cld
xchg
inc
addr16
mov
insb
loopne
or
popf
ret
fisttpl
cmp
xchg
shrl
sbb
out
aaa
jae
xchg
xchg
adc
or
pop
ffree
shl
fsubl
xchg
jno
les
ret
subb
add
dec
ss
repnz
pop
movl
sbb
mov
pop
cmc
cmp
repz
jmp
dec
pop
xor
xchg
insl
cwtl
fiadds
adc
loope
and
adc
repnz
stos
inc
pushf
lea
sub
pop
test
pop
fisttpl
out
lock
xor
addr16
and
push
lret
fdivs
gs
in
pop
dec
xchg
sbbb
xchg
mov
mov
xor
sub
imul
adc
cld
or
jmp
popa
add
jae
cli
push
add
lock
loop
cwtl
mov
push
mov
js
loope
sub
and
testl
or
out
dec
aas
jae
pop
es
xchg
mov
call
int
push
xor
aam
xor
add
js
out
shlb
cmp
jge
adc
loop
dec
cmp
lcall
jecxz
xor
jnp
mov
movsl
iret
int
jl
adc
dec
xchg
sub
cld
in
divl
add
inc
pop
adc
mov
sldt
iret
insb
int3
enter
adc
js
sarl
fs
mov
ja
dec
lea
push
hlt
jno
or
mov
add
jns
hlt
push
daa
insb
jecxz
pop
dec
or
in
pop
xorb
ret
jmp
inc
sub
xchg
stos
test
out
inc
repz
data16
mov
mov
lcall
dec
mov
xchg
xlat
mov
pushl
rorl
pop
gs
bnd
sti
call
mov
ret
lret
add
inc
cmp
adc
jno
sarl
pop
push
mov
cltd
es
rcll
mov
lds
addb
inc
add
insl
add
test
aam
and
daa
aas
adc
in
xor
and
add
test
bound
xor
mov
push
and
inc
jb
dec
test
or
jp
push
icebp
and
cli
inc
sbb
push
pushf
sub
into
xor
jecxz
add
jns
addl
xchg
sti
pop
xor
and
movsl
adc
mov
or
clc
ja
cltd
lea
inc
mov
xchg
lahf
int3
adc
and
cmpsl
push
shlb
push
cli
xchg
scas
mov
or
pop
popf
cmp
or
jo
std
leave
bound
mov
dec
lret
cmp
lock
andb
in
out
xchg
ljmp
cmpsl
das
cs
pushf
test
xchg
add
bound
addb
adc
test
mov
jl
faddl
inc
ucomiss
xchg
cs
mov
xchg
pop
imul
jg
pop
xor
mov
inc
lods
inc
fbstp
sub
dec
cmpsl
jecxz
popw
mov
jle
push
rcr
add
aaa
rcll
test
mov
jmp
repz
dec
inc
pop
mov
inc
loopne
clc
scas
sub
pushf
mov
fbld
fidivrl
insb
mov
mov
mov
negl
pop
xor
jg
ffree
pusha
inc
mov
xchg
mov
jg
imul
out
ret
sub
imul
sarl
push
ja
int3
add
sbb
pop
mov
inc
into
inc
mov
test
pop
cmpsl
pop
push
cmpsb
mov
stos
sbb
or
outsb
xor
addr16
add
and
push
int
in
fdivr
ret
push
mov
pop
push
mov
dec
jne
xlat
mov
jbe
loopne
in
pop
mov
jae
and
jo
xor
push
js
pop
mov
sbb
mov
aas
mov
pop
push
add
ret
xchg
aaa
jbe
inc
push
mov
mov
scas
cmp
cltd
jo
lds
dec
out
jne
loop
pop
mov
iret
mov
fwait
pop
push
das
jmp
or
pop
adc
repnz
fsubrs
movsb
mov
dec
aad
pop
jnp
repnz
mov
pop
jp
les
add
or
das
js
lea
cmp
out
mov
ja
push
stos
xor
call
cmpl
fsubrs
xchg
fsub
mov
sub
sub
xchg
mov
jae
addb
in
or
pop
notl
dec
in
jbe
push
jbe
iret
push
sub
das
imul
rorb
inc
aaa
sbb
xor
lods
mov
into
lcall
in
xchg
inc
rcll
pop
subb
pop
arpl
add
call
mov
and
in
mov
sub
dec
jns
cs
loope
xchg
or
cmpsb
mov
loope
outsl
push
jb
inc
jbe
add
pusha
mov
fs
aas
popf
inc
cmp
pushf
pop
mov
std
jl
mov
adc
mov
testb
outsb
gs
cmp
dec
call
adcl
xchg
or
add
sub
push
shll
repz
iret
out
mov
xchg
jg
mov
mov
inc
mov
stos
adc
dec
xchg
sbb
fwait
in
xchg
inc
out
mov
cmpsl
xchg
cld
cwtl
sub
imull
ljmp
xlat
mov
pop
scas
push
mov
in
addr16
aad
pop
xchg
jne
cmp
or
aas
mov
test
std
je
stos
cmpsl
inc
xor
jb
arpl
lds
cmpsb
shlb
xchg
xlat
inc
dec
fimull
jo
je
or
dec
lret
push
in
aas
rep
xor
xor
cmp
ds
mov
inc
sub
mov
jo
mov
dec
repz
repz
or
jns
lret
pop
lret
sbb
push
ss
int3
jbe
out
mov
mov
mov
nop
clc
mov
mov
leave
dec
pop
lods
mov
inc
cmp
frstor
in
sahf
and
push
push
imul
cmp
ja
push
pop
jmp
jp
mov
loopne
jp
and
jecxz
loop
xchg
mov
addr16
movsl
clc
push
adc
inc
addl
out
xchg
mov
imul
lret
sub
xchg
add
mov
push
pop
sub
jg
and
jmp
ljmp
mov
loop
pop
ds
push
mov
mov
push
ret
decl
test
xor
sbb
sbb
icebp
add
aaa
shll
inc
js
orb
sbb
out
push
nop
das
mov
dec
mov
lret
out
mov
push
rcrb
xchg
sbb
mov
in
or
adc
sub
xchg
mov
lcall
pop
in
popf
inc
pop
sahf
iret
mul
push
aas
pop
lahf
fs
fsqrt
outsl
or
dec
ljmp
inc
ficompl
mov
sbb
and
cmp
rolb
xor
cs
mov
cmc
bound
pop
mov
mov
dec
cmpsl
cld
dec
inc
cwtl
into
call
ret
xchg
neg
fstps
dec
gs
hlt
mov
push
mov
xorb
popf
xchg
fistps
sub
push
daa
mov
loope
lahf
rcll
data16
ficompl
lock
jmp
in
pop
int3
push
test
insb
mov
add
push
filds
xchg
fdivrs
outsb
push
dec
pushf
cmp
cmp
aad
stc
adcl
mov
adc
in
ss
fistpll
scas
and
inc
ret
inc
fcompl
pop
shl
loope
cmpsb
xor
cmpsb
jno
out
push
scas
rcrl
jne
ss
push
inc
in
mov
dec
shll
sub
mov
scas
jecxz
mov
outsb
xchg
cltd
add
lret
jg
mov
clc
jmp
add
xchg
aad
imul
dec
fisubs
mov
mov
push
roll
mov
cmp
fistps
ljmp
jl
dec
adc
xchg
push
cmp
sti
and
aas
and
sbb
frstor
jnp
andl
pusha
loope
enter
pop
je
sti
mov
lret
adc
push
movsb
call
push
dec
mov
dec
popf
fcoms
cmp
jle
out
cwtl
sbb
xchg
arpl
lds
mov
int
mov
inc
jmp
sbb
ret
jg
jp
dec
cmpsb
or
mov
shl
xor
sti
outsl
ss
mov
imul
divb
jo
lret
jae
stos
repz
rcr
mov
mov
mov
push
push
jg
cmp
sbb
gs
imul
enter
mov
cmp
mov
jmp
or
rcll
add
loope
test
jle
int
in
scas
test
icebp
or
lahf
call
insl
jge
inc
sub
iret
sub
sub
add
sbb
mov
and
jp
cmp
fwait
mov
xchg
out
mull
add
sarb
arpl
ljmp
fisttps
pusha
adc
incl
xor
adc
pop
adc
and
nop
stc
xor
inc
inc
pop
rclb
sbb
fidivs
mov
incl
dec
jb
int
je
cmp
rol
jo
pop
xor
jnp
push
add
jl
vandps
cltd
sahf
jmp
data16
addr16
dec
outsb
mov
mull
addr16
imul
xchg
aas
pop
int3
in
fldt
mov
filds
xchg
jno
or
test
pop
add
lea
adc
out
add
push
xor
stc
add
nop
pop
push
cwtl
hlt
push
lock
push
in
xchg
pop
push
mov
shr
out
sbb
sti
pop
inc
inc
inc
xchg
jmp
inc
test
js
cmc
push
xor
push
pop
int
inc
mov
out
insl
xor
ds
dec
push
and
inc
pusha
push
cmp
paddd
leave
push
out
sti
outsl
sub
jmp
cmp
jo
lahf
leave
sbb
cmp
fldcw
jnp
lret
jmp
shlb
imul
repnz
aaa
adc
idivl
pop
mov
xor
cld
scas
xlat
in
xor
adc
lea
dec
stc
ljmp
stos
xchg
mov
inc
jne
fdivl
lcall
fs
aaa
cs
lret
dec
test
mov
pop
insb
ljmp
out
sahf
lret
rolb
jle
jnp
sbb
add
push
push
pusha
test
push
icebp
adc
lock
pop
add
jmp
loope
stos
aaa
fmul
and
pop
fdiv
outsb
scas
adc
and
mov
test
mov
xor
lods
or
jp
adc
dec
negb
cltd
push
pushf
test
imul
mov
pop
lret
push
push
add
in
loop
sti
sbb
hlt
pop
mov
mov
push
mov
mov
sbb
ret
test
sbb
mov
jnp
jecxz
int
int
outsl
icebp
cwtl
or
and
adc
or
loopne
mov
push
add
and
inc
jb
add
push
rol
push
xchg
pop
add
gs
data16
jge
sbb
push
or
dec
jae
add
xor
and
movsl
add
gs
or
mov
pop
pop
dec
push
ljmp
mov
loop
mov
aam
pop
or
sbb
mov
movsl
xor
mov
sub
push
mov
xor
pop
arpl
out
test
hlt
dec
mov
xor
lds
cmpsb
or
outsl
not
and
or
sbbb
add
clc
pop
movsl
jnp
sbb
mov
out
test
cmp
pop
aad
cmp
mov
add
cltd
into
test
imul
lret
addr16
rorb
rcr
inc
sbb
push
decl
imul
sahf
not
fildl
mov
pop
aam
test
lods
jle
xchg
mov
lock
bound
xlat
cwtl
push
cmp
std
mov
xor
pop
xor
repz
gs
adc
push
mov
push
int3
xchg
fcompl
add
and
or
cmpsb
test
hlt
cmp
inc
inc
and
movsb
push
ds
jnp,pn
call
fwait
leave
jno
or
rcr
fcmovnb
int3
add
imul
cmp
loopne
lea
mov
sarb
lds
mov
repz
mov
imul
cmp
jecxz
push
xor
mov
sub
sub
mov
loopne
push
sub
sub
mov
stos
popf
arpl
je
xchg
mov
xor
mov
iret
cmpsl
scas
scas
or
loop,pt
cmc
mov
lret
nop
ljmp
es
add
inc
pop
filds
lds
mov
ljmp
add
push
popf
into
and
leave
inc
mov
xchg
and
jecxz
lahf
xchg
jge
dec
cmp
ds
xchg
xor
xor
sarb
pop
sbb
enter
adc
fildll
xchg
xchg
outsl
adc
sti
or
aam
push
movsl
outsb
mov
lahf
inc
outsb
jle
jge
in
and
ret
sbb
cmpsb
fcompl
dec
popf
sti
sub
xor
lahf
lock
sarl
pop
aas
lock
movsb
daa
adc
sbb
push
fs
xchg
add
je
dec
sti
sub
or
jne
pop
mov
dec
bound
push
add
shr
es
xchg
sahf
call
jae
mov
iret
pushf
in
or
test
ret
out
jg
pop
jns
ss
xchg
pop
jne
mov
sbb
add
cmp
arpl
cli
ljmpw
push
rolb
js
add
and
jle,pn
pop
into
dec
push
insl
repz
pusha
xor
shl
aad
mov
cmp
ljmp
sti
sbb
cs
mov
les
mov
dec
adcb
pop
nop
into
les
jb
cld
cmpsl
aad
in
das
clc
shll
sbb
and
rolb
movmskps
sbb
stos
loop
push
test
pusha
call
ficomps
inc
mov
shrb
int
sbb
into
mov
mov
hlt
mov
mov
aad
inc
inc
ficompl
insb
jl
aaa
and
xor
push
fsubrl
or
std
insl
incl
sub
adc
pusha
aad
xlat
jbe
fcmovnu
sar
push
xor
and
add
in
push
cmpsl
outsb
cmpsl
popf
jp
clc
vcmppd
fnsave
mov
loop
test
aad
fisubs
andb
out
das
jnp
ret
sbb
int3
inc
cmpsl
and
xchg
inc
add
xor
test
pop
imul
fimuls
sub
jbe
imul
and
mov
pop
addb
sbb
adc
test
dec
push
mov
or
clc
aad
hlt
popf
push
cwtl
or
nop
add
jecxz
lds
aas
xor
bound
fidivl
lahf
pop
xlat
insb
pop
mov
testl
es
push
clc
scas
mov
ja
xchg
sarl
or
out
push
notl
adc
push
dec
pop
clc
loop
inc
xor
divl
pop
fwait
xor
xchg
subl
out
popa
sub
mov
lret
ss
popa
iret
movsb
shlb
fcom
mov
insb
add
leave
adc
pop
repnz
xor
mov
xchg
jle
ror
sahf
pop
test
push
mov
repnz
dec
out
push
lcall
sub
jg
gs
dec
sbb
adc
cltd
jnp
mov
leave
std
scas
movsb
fndisi(8087
inc
in
push
dec
iret
xor
jns
sbb
cmp
cmp
pusha
add
cld
shlb
pusha
arpl
jns
xchg
sbb
repnz
popa
idiv
sbb
mov
sbb
loope
xchg
mov
xchg
shll
sub
and
add
sbbb
mov
sbb
bound
adcl
addr16
pop
and
lods
xchg
mov
test
jae
sbb
pop
pop
pop
jge
xor
push
shr
aas
sub
pushl
inc
addb
cmpl
inc
divl
jl
jnp
cmp
lret
xchg
mov
mov
adc
out
add
xchg
aas
jge
shr
xor
sub
fidivl
jbe
icebp
xor
jg
icebp
js
push
adc
xchg
jge
cld
filds
push
push
sbb
lret
xchg
ret
outsl
and
sbb
out
shr
mov
orb
out
adc
push
jp
pop
mov
xchg
adc
adc
cmp
mov
lods
mov
pop
push
int3
xchg
inc
or
scas
add
adc
scas
push
push
adc
negb
icebp
jg
and
mov
jns
push
pop
add
cmp
sbb
adc
test
mov
and
jae
in
test
xchg
mov
ficompl
jmp
mov
cmc
dec
mov
push
mov
aas
sub
add
adc
fldl
and
lock
popa
inc
fisubs
push
push
push
inc
push
ret
les
ror
push
xorb
fnsave
stos
fwait
sub
cmp
stc
mov
dec
mov
inc
xchg
aam
and
adc
nop
xorl
fdivp
out
mov
enter
test
nop
mov
xchg
jmp
mov
ds
pop
xchg
cmp
lods
dec
mov
ret
enter
dec
cwtl
sub
and
outsl
mov
les
shll
pop
push
inc
fstpl
cmp
std
repz
or
pushf
pop
sub
mov
xor
lret
into
xor
adc
push
pop
cwtl
jg
nop
mov
outsl
cltd
jb
and
pop
cmp
enter
mov
push
ds
xor
sbb
es
icebp
insl
push
out
cmp
jbe
mov
clc
hlt
ret
fldcw
movsb
ret
dec
mov
cmp
dec
push
mov
das
pop
cmp
lock
add
bnd
cmp
cmp
call
out
xchg
jmp
fs
ds
xchg
ficoml
xchg
out
outsl
out
jg
hlt
fdivrp
pushf
stc
movsb
iret
push
push
or
test
xchg
mov
push
jle
call
mov
jo
xchg
pusha
mov
icebp
xor
std
jno
xchg
xor
mov
mov
mov
movsb
stc
bound
scas
mov
repnz
dec
pushf
stc
lret
fisttpl
sub
mov
add
fstpt
fwait
push
in
in
fs
push
pop
daa
mov
mov
test
pushl
sbb
icebp
inc
jecxz
push
mov
and
mov
dec
xchg
pop
add
in
lds
mov
mov
int3
int
pop
jne
cli
lcall
jnp
outsb
jo
lahf
sub
pop
push
mov
mov
push
pop
cmp
cs
mov
ljmp
or
stos
push
int3
jne
sub
mov
nop
scas
outsb
and
test
scas
je
scas
shlb
pop
fimull
lods
xchg
push
push
mov
jbe
int3
mov
mov
jae
sub
add
testl
lods
clc
dec
pop
or
in
xor
test
dec
loope
mov
cld
lea
sub
jno
gs
mov
dec
adc
fdivs
bound
dec
cmp
add
sbb
lret
push
pop
mov
iret
cs
and
addl
mov
nop
and
divb
cmpsl
mov
ljmp
ss
or
mov
sub
mov
adc
enter
mov
cli
push
test
stc
arpl
jp
xor
fadds
add
loopne
or
pop
movsb
adc
aad
sbb
xchg
pop
and
clc
push
mov
scas
clc
das
sub
arpl
or
or
in
mov
sahf
pop
cs
das
popa
test
cmc
lahf
loopw
out
icebp
sti
sbb
cmp
je
fisubl
and
lea
dec
jns
lods
call
mov
bound
das
cli
scas
mov
in
lcall
shrd
ds
fidivrs
fsub
loope
dec
push
pushf
faddl
loopne
dec
or
cmp
xor
pop
imul
or
in
movsb
mov
cmp
fisttpl
sbb
jno
or
and
popa
in
fs
add
sar
pop
pop
stc
mov
mov
aas
out
mov
push
pop
jb
out
std
push
add
sub
or
adc
popf
mov
mov
mov
rcll
jp
outsl
xchg
pop
out
inc
push
cld
in
push
das
xchg
or
shl
cmp
xchg
mov
div
add
mov
mulb
scas
jo
popa
pop
push
jae
mov
mov
lods
dec
fs
jg
bound
idivb
push
rcll
and
icebp
loopne
jp
mov
jo
bound
outsb
adc
mov
jmp
loopne
int
iret
dec
insb
or
cmp
jmp
push
leave
pushf
adc
xchg
push
xchg
mov
out
stc
cmp
popf
sub
add
sub
mov
jne
aaa
sub
lods
sub
shrl
repz
filds
pop
pop
push
ss
insl
pop
sub
fnsave
ds
jecxz
add
xchg
mov
push
pop
addl
loop
push
fdivs
inc
adc
mov
push
lea
idiv
xor
pop
insb
jle
inc
dec
data16
pop
rep
adc
rorl
push
sbb
or
aam
repnz
addl
fcoms
js
ss
mov
pop
sar
sub
mov
jmp
mov
nop
int
je
int
cmp
jns
ret
pop
test
dec
mov
lret
sar
dec
adc
cmp
fs
mov
test
pushf
test
shlb
push
in
sbb
inc
fwait
outsl
scas
loope
cwtl
push
fidivl
or
inc
repz
repnz
insl
movsb
inc
outsb
jge
inc
lahf
add
stc
xor
pop
add
cs
inc
scas
popa
call
retw
pusha
fwait
rclb
into
lods
lods
inc
jo
sahf
mov
mov
stc
mov
adcb
lds
data16
pop
rol
shll
loop
ret
repz
lods
add
lret
out
aas
idivb
mov
mov
popa
jo
aas
xchg
sub
faddp
cmc
mov
dec
pop
sysexit
sti
add
lcall
and
sbb
int3
or
pop
jbe
fisttpl
scas
aas
adc
mov
inc
sub
bound
or
xchg
push
sub
adc
xchg
mov
fadds
mov
xchg
cmp
pop
mov
lret
mov
int3
mov
ds
push
das
imul
stc
mov
ss
adc
popf
or
test
scas
pop
or
sub
pop
sarb
cmovns
aad
jns
lock
xchg
fldcw
leave
push
call
in
loop
sarl
mov
in
stc
xchg
rolb
sti
mov
mov
push
dec
push
pop
loope
negl
loop
shlb
pop
xor
cmp
imul
adc
push
adc
xor
adc
and
jae
sbb
pop
inc
jmp
cli
in
out
add
mov
xor
inc
stc
mov
push
pop
mov
into
mov
sbbb
sub
stos
push
xor
cmp
mov
xchg
stc
test
ret
out
test
adc
test
hlt
mov
inc
imul
lock
mov
dec
jmp
cs
mov
jle
sarb
sub
mov
sub
jns
test
insl
sti
ficoml
xlat
daa
fldpi
jbe
jnp
fists
pop
inc
cmpsl
out
add
inc
stos
fisubl
arpl
mov
mov
xchg
rorl
insl
add
scas
mov
or
lock
cmp
shlb
pop
and
xor
icebp
mov
insb
popa
mov
adc
pop
out
dec
xchg
push
mov
or
mov
jno
sub
mov
out
mov
test
push
pop
popa
jl
mov
arpl
jg
sub
repz
add
outsb
popa
subb
add
scas
loop
sub
pop
out
aaa
rcrb
push
imul
push
jp
insl
stos
nop
in
pop
lahf
rorl
mov
and
enter
fisttpll
insl
jmp
or
cmp
sub
cmc
xchg
push
add
sbb
or
and
aas
sahf
in
out
outsb
sbb
insb
adc
jle
ja
out
xchg
mov
lret
daa
mov
outsb
mov
out
popf
je
mov
daa
loop
out
cs
fimuls
and
mov
and
xchg
or
icebp
insl
mov
mov
push
jb
test
hlt
cltd
xchg
jp
xchg
outsb
and
jge
fwait
in
xchg
pop
sbb
outsb
and
push
mov
mov
mov
insl
add
out
mov
mov
pop
mov
shl
dec
xchg
or
xorl
adc
leave
aam
cltd
in
bound
fldl
daa
mov
add
xor
movsb
arpl
cmp
push
in
push
adc
inc
xchg
add
push
call
aaa
in
stos
xchg
sbb
arpl
sub
rcr
mov
cmp
arpl
movsl
xor
pop
inc
in
mov
pop
dec
mov
jle
rorl
test
dec
inc
int3
repnz
sub
addl
jmp
xchg
test
aaa
and
or
mov
mov
adc
test
pop
negb
les
lods
in
stos
mov
scas
test
in
lret
dec
sbb
adc
mov
pop
repnz
testl
jl
inc
fidivs
mov
enter
subl
mov
mov
out
cwtl
jle
cmp
rcll
add
popf
lret
int3
stc
lods
sahf
add
repz
lret
and
xor
cltd
or
mov
out
add
pop
xchg
pmaxub
jmp
hlt
clc
ja
mov
push
int3
lds
push
insb
jle
icebp
jmp
mov
cld
xor
xchg
xchg
push
leave
inc
add
sbb
testb
out
add
pop
push
insb
dec
sub
mov
push
add
cmpsl
fstl
cmp
ja
sahf
hlt
out
das
inc
fwait
mov
or
cmp
mov
inc
ret
cmpsl
mov
aam
mov
dec
les
inc
mov
or
add
imull
mov
cmp
inc
jne
jno
movb
std
adcb
jo
push
xor
xor
into
stc
jne
cwtl
stos
sbb
adc
and
shr
cmpsb
sahf
shrl
cwtl
mov
lock
cwtl
add
or
jmp
hlt
imulb
add
adc
lret
or
sbbb
in
jbe
out
int
cltd
mov
daa
adc
rcll
jg
or
roll
cmc
cmp
jnp
xor
sbb
inc
stos
fstps
cmpsb
and
inc
outsl
push
sbb
mov
adc
neg
and
sub
jge
mov
icebp
repnz
movsl
pop
xorl
clc
repz
orb
pop
fnstsw
sub
xor
sbb
jne
std
sbb
andb
pusha
in
push
aas
and
icebp
test
out
push
sbb
gs
addr16
lods
stos
repnz
ss
orl
and
jg
notb
fldl
out
clc
adc
pop
adc
mov
push
nop
mov
mov
movsb
cmpsb
mov
in
push
xor
test
sbb
jnp
mov
xchg
imul
inc
inc
mov
test
bound
shlb
sti
lea
ds
cmp
in
imul
xor
xrelease
pop
iret
decl
fcmovne
movsl
mov
mov
adc
sbb
sbb
adcl
cmp
mov
sub
dec
fs
or
cmc
xchg
cmp
adc
sub
jg
xchg
jnp
mov
nop
sub
xlat
outsl
sbb
insl
cld
cmp
sub
jo
or
sbb
add
mov
pop
fnstcw
dec
out
jbe
cld
cld
mov
dec
sbb
adcb
arpl
xchg
out
in
fistl
push
es
cwtl
outsl
lds
fs
clc
call
pop
pop
push
cltd
repz
lret
xor
push
sbb
sbb
and
or
sub
mov
mov
je
cmpsb
sub
sbb
sbbl
mov
mov
es
adc
sub
rorl
and
es
add
xor
sbb
mov
rcr
mov
jg
gs
enter
push
push
pushf
dec
inc
push
jbe
push
mov
popa
jmp
into
push
mov
lock
shrl
cmp
js
jae
inc
mov
inc
and
idiv
dec
data16
fcoms
cmc
lds
icebp
imul
out
addl
ljmp
pop
and
divb
cmpsl
pop
or
test
mov
pop
jnp
jnp
mov
fwait
test
mov
xchg
outsb
push
test
push
outsl
add
in
pop
mov
mov
push
out
xchg
fmull
cmp
xchg
and
jne
adc
or
es
xchg
or
xchg
in
jmp
and
dec
sbb
popa
push
jno
nop
mov
out
inc
dec
movsl
cmp
mov
mov
mov
mov
imul
mov
mov
popa
sub
adc
icebp
paddusw
ss
dec
mov
jg
add
pusha
pop
sbb
fmuls
mov
loope
sbb
mov
sbb
pop
xchg
lock
xchg
or
lahf
or
dec
loop
push
lea
orb
mov
add
mov
es
data16
push
adc
repz
enter
or
sub
js
cmp
loop
aas
sub
fistpll
pop
dec
lods
sub
orl
mov
lcall
outsb
xor
rorb
test
fnsave
decl
ljmp
cmp
dec
scas
dec
add
not
ret
sbb
ljmp
mov
mov
cmpsl
xchg
sub
lea
mov
pop
and
int
mov
cltd
test
cmpsl
sbb
push
sbb
xchg
jle
enter
inc
mov
fwait
insl
push
sub
or
push
fnsave
xchg
push
scas
and
dec
pop
add
mov
and
mov
cmp
in
in
xlat
push
call
or
js
adc
es
cmpsb
bound
adc
pusha
or
pop
out
adc
or
loope
mov
inc
sub
in
add
rcr
rcll
cmpsl
popf
push
rcr
lods
jge
out
dec
inc
inc
sbb
lds
fcomps
lcall
dec
daa
pop
into
adc
arpl
fdivs
and
mov
xor
cld
mov
adc
push
lret
push
sti
and
andb
cmp
dec
out
pop
or
cmc
or
int3
call
iret
cmp
pop
insb
xchg
mov
xchg
mov
sbb
lea
sbb
mov
push
data16
mov
and
mov
outsl
jno
in
std
bound
cmp
shll
push
mov
sahf
cmpsb
and
lods
mov
push
add
in
shll
jecxz
or
out
lret
shl
pop
jmp
cmp
and
out
add
cmpsb
addl
sub
lcall
pushl
fsub
mov
pop
pop
add
ds
or
sub
jae
shll
call
rcll
jecxz
repz
movsb
cmpb
out
call
sbb
mov
mov
xchg
call
cmpsl
push
pushf
cs
in
dec
mov
arpl
test
hlt
scas
xchg
mov
adc
es
mov
pop
mov
pop
jae
cmpl
testl
lret
fwait
or
scas
idivl
xlat
xchg
push
dec
mov
push
insb
adc
fsubrs
ljmp
jmp
sub
pop
sub
adc
jecxz
popf
mov
cmp
push
call
mov
mov
push
jecxz
dec
pop
es
rcll
xlat
sbb
shlb
popa
add
ret
js
sarb
std
lret
xor
fcompl
lahf
inc
loope
cmp
lahf
sbb
imul
dec
movsl
dec
dec
cmp
pop
add
adc
push
enter
sbb
clc
shrb
mov
jnp
sti
lods
and
or
cmp
lods
aaa
mov
cwtl
ror
dec
scas
sub
cmp
push
adc
jno
je
xchg
loopne
ds
movsl
or
mov
mov
dec
and
pop
movsb
nop
inc
xchg
xor
cmp
or
aam
leave
mov
les
adc
sub
push
inc
push
hlt
loope
inc
mov
mov
push
xor
pop
dec
xchg
or
ss
adc
jnp
push
shlb
xor
in
out
mov
cltd
scas
cmpsb
lret
xchg
lahf
mov
fneni(8087
sti
inc
lea
cmp
in
cmc
lahf
cwtl
shll
clc
fs
mov
or
dec
test
xor
push
inc
fwait
repz
icebp
adc
int
push
imul
and
sub
push
mov
cmpsb
movsb
xor
cli
pusha
cmpl
pop
xchg
add
lock
out
push
jns
aas
push
and
addr16
sbb
jnp
push
add
fsubp
loop
cli
or
fisubs
mov
out
cwtl
ja
xchg
test
sbb
aam
data16
rorl
adc
push
ljmp
or
dec
jo
test
xor
push
and
jae
mov
pop
ss
mov
pop
push
lock
out
pusha
sbb
clc
and
enter
out
hlt
lock
and
in
inc
sahf
mov
lock
mov
bound
jge
clc
jle
jns
sub
jle
scas
adc
jge
jle
pop
push
jnp,pn
sub
push
xor
sbb
daa
mov
test
jo
mov
mov
add
lret
xchg
and
pop
xor
icebp
mov
adc
add
jnp
test
push
jbe
or
cmc
mov
mov
mov
dec
jo
jmp
mov
movsl
and
stc
cwtl
imul
test
jle
jl
mov
loop
fs
sbb
mov
push
xchg
ret
cmp
xchg
clc
xchg
mov
int
mov
mov
je
ss
xor
and
loope
mov
cmp
and
xor
dec
inc
sbb
jmp
jmp
hlt
loop
lret
dec
sarl
inc
adc
test
jns
inc
loopne
pop
push
sbb
push
data16
idiv
cld
inc
and
fistpll
outsl
ja
inc
dec
pop
push
fdivs
inc
adc
out
sbb
xor
xor
int3
in
inc
push
sarl
sub
sbb
cmp
mov
popa
popf
cmc
lret
sbb
sarl
pop
mov
out
mov
jl
ds
int
add
push
idivl
mov
adc
pushf
mov
scas
es
xchg
in
ret
clc
stos
jbe
push
mov
sub
mov
out
addr16
jo
fcoms
pop
mov
pusha
mov
sarb
xchg
add
pop
mov
inc
int
shr
nop
push
xchg
cmpsb
loopne
scas
dec
pop
loopne
pop
sub
in
roll
mov
push
inc
addr16
rclb
pop
push
push
push
cli
test
push
gs
ss
adc
fwait
dec
sbb
gs
cmp
cmp
cli
pop
dec
jne
add
xor
leave
xor
orl
jno
and
rclb
ja
pop
dec
push
notb
cwtl
pop
lcall
test
lds
out
or
xchg
aaa
js
xchg
pop
popf
adc
lret
sti
mov
or
fisubl
xchg
or
xchg
mov
aam
mov
jae
xor
and
inc
dec
in
and
shlb
or
aam
jns
add
push
stos
inc
dec
cmp
jno
lds
lock
pushf
pop
iret
icebp
mov
xchg
jmp
adcb
clc
lods
push
add
pop
jge
or
push
loope
mov
stos
pusha
loopne
sbb
mov
test
jbe
loopne
xchg
sub
cmp
shll
out
mov
rclb
flds
jbe
add
push
faddl
xchg
mov
test
add
mov
inc
lock
lret
sbb
cltd
imul
pushf
pop
inc
lcall
jae
ss
inc
jl
insl
xchg
or
ljmp
push
pop
dec
adc
xchg
shr
or
and
outsl
mov
xlat
mov
add
loope
mov
jle
xchg
add
xor
sbb
sub
loop
or
push
cmpsl
dec
out
lock
in
dec
jae
std
insb
push
jae
loopne
jecxz
cmp
les
push
popf
int3
pop
insb
pop
jb
pushf
popf
inc
mov
je
cmpsl
xchg
fsts
int
mov
jbe
jmp
dec
int3
and
fiaddl
push
mov
lods
mov
and
xchg
fwait
push
and
cmc
jb
stos
xor
in
cwtl
mov
cmp
sub
mov
repnz
scas
xor
mov
int
adc
sbb
and
out
mov
shl
loope
mov
in
aas
js
andl
cmp
es
roll
in
or
into
ljmp
jnp
dec
sub
cld
mov
loop
gs
fdivs
sub
movb
imul
hlt
dec
movb
dec
xlat
rorl
xchg
fistps
push
lock
inc
jno
mov
dec
stos
sbb
imul
sub
test
mov
xchg
mov
sbb
lret
inc
out
or
insl
push
sbb
cmp
mov
js
lret
pop
mov
testl
xor
lcall
aad
shrl
stos
cmpsb
shll
mov
xor
cli
inc
or
imul
jnp
dec
ja
lcall
or
and
stos
repnz
mov
cmpsb
not
dec
cmpsb
xchg
mov
rol
add
fdivl
sub
out
loope
sub
ret
jecxz
nop
lahf
pop
and
incl
enter
iret
or
cmp
nop
mov
push
jl
fisubrl
cmp
pop
xor
mov
xorb
les
iret
sbb
and
jmp
xchg
sahf
push
cmc
and
pusha
fisubrl
aas
pop
jle
jmp
sub
ss
push
mov
ss
pop
test
xchg
dec
mov
mov
or
jne
xchg
push
pushf
inc
adc
hlt
or
and
ret
mov
into
lcall
push
popa
aaa
push
test
outsb
fisubrs
add
cmp
pop
cmc
pxor
inc
popa
mov
dec
sub
xor
test
fidivs
fwait
mov
imul
pop
movsb
adc
mov
ds
or
sti
push
pop
cmpb
rclb
jge
jb
add
pop
lcall
push
imul
aam
cmp
shrl
mov
mov
loope
push
cmpsb
int3
scas
push
mov
jae
lret
adc
xchg
xor
orb
and
push
xchg
or
push
mov
sbb
popf
daa
idiv
fwait
call
out
ret
cltd
mov
dec
jne
adc
loop
and
or
pusha
pop
push
leave
push
fwait
mov
ds
in
stos
cs
inc
cmpsb
push
fcomps
or
cmc
stos
mov
and
jge
cli
into
out
pop
fsubrl
xor
iret
jl
lock
mov
sbb
test
mov
stos
divl
iret
jno
test
rcrb
sbb
lods
xchg
or
test
xlat
sti
add
push
or
cmp
cmp
mov
add
rcl
cmp
add
pop
std
repnz
insl
or
push
lods
sub
dec
ffree
std
out
int3
fistpll
pop
jb
push
xor
mov
jp
mov
andb
jl
mov
mov
or
sub
arpl
ja
push
add
fadds
dec
inc
lock
adc
inc
push
jbe
sti
pushf
in
aaa
outsl
pop
shl
in
pusha
jno
sbb
int
dec
xchg
or
jo
and
xor
and
mov
rorb
mov
shl
and
dec
loopne
cs
icebp
ja
mov
in
in
jecxz
sub
movl
push
mov
xchg
inc
lret
loop
xchg
sbb
cmpsb
pop
pusha
mov
xchg
dec
movsl
add
lds
fstpl
sbb
jbe
sub
fucomp
fisubs
int3
mov
rolb
xor
mov
cs
cmpsl
subb
and
aaa
popf
adc
inc
inc
push
popa
loope
mov
sahf
push
jp
in
js
cmpsl
sbb
aas
mov
iret
inc
xchg
push
je
lahf
sti
mov
lods
aad
push
aaa
inc
jbe
mov
jl
lea
lods
and
ret
mov
pop
adc
dec
xchg
cmc
lcall
mov
test
jle
icebp
pop
imul
pop
clc
mov
out
dec
mov
clc
andb
jge
test
adc
xor
adc
mov
add
lods
outsl
push
lea
add
sub
and
jmp
mov
scas
in
pop
insb
cmpsb
mov
lds
inc
mov
or
data16
popf
outsb
add
lods
cmp
mov
xor
pop
xchg
and
jno
push
arpl
bound
jne
push
jo
pushf
xor
mov
push
daa
sahf
call
adc
aad
mov
inc
rcrl
mov
das
mov
sbb
pop
ds
sub
fcmovnu
mov
mov
jl
mov
aad
jmp
rol
fcomps
in
loope
cmc
inc
in
repnz
sub
xchg
mov
sub
pop
mov
mov
sub
adc
sub
in
insl
xor
enter
dec
ljmp
sub
fchs
sti
subb
mov
push
decb
mov
fcomip
adc
xor
cld
mov
xchg
or
loopne
cmp
xor
jp
xlat
dec
mov
adc
pop
sub
daa
adc
insb
lds
jno
push
dec
mov
mov
cmp
xor
pop
popf
jmp
shll
push
jle
int3
dec
rcr
mov
dec
or
or
lahf
dec
pop
aas
hlt
mov
adc
push
dec
pop
imulb
xorb
and
mov
repnz
stc
inc
mov
fstl
xchg
mov
pop
mov
mov
push
jle
jmp
scas
add
pop
rcl
shll
dec
fwait
loopne
scas
push
dec
pop
pop
mov
cmpb
repnz
sarb
and
xchg
dec
push
mov
inc
jns
leave
mov
fistpll
rcll
cmp
arpl
int
push
dec
xor
test
add
aas
pop
dec
jge
dec
fwait
bt
rcr
mov
lock
and
imul
push
mov
sarl
add
pop
sub
xchg
ds
mov
jmp
imul
repnz
out
sub
lods
adc
push
outsb
dec
out
lret
push
adc
mov
popa
mov
loope
insl
cld
dec
dec
or
stos
jae
push
sahf
pop
xchg
ss
add
mov
outsb
mov
or
je
shl
xchg
int3
addr16
pusha
outsb
or
and
or
sbb
add
mov
ss
xlat
cmp
push
xchg
fistps
stc
fidivrs
insb
sub
push
ja
cmp
sbb
popf
aaa
jb
mov
sub
inc
pop
jle
mov
jp
aad
push
scas
stos
out
fs
mov
inc
ja
stc
mov
jns
push
test
xchg
inc
xchg
push
aam
sub
sahf
lahf
int3
fwait
data16
dec
cli
dec
push
loope
mov
popf
inc
jae
ret
jp
jns,pn
test
push
out
sub
mov
lds
lahf
mov
or
jbe
cmp
out
mov
push
nopl
or
jne
push
pop
test
imul
dec
add
jbe
inc
mov
sbb
rorb
xor
dec
dec
add
out
sub
push
inc
mov
pop
xchg
shl
adc
test
mov
add
mov
stc
jo
xor
shrb
aam
clc
cmp
pop
rep
iret
adc
sbb
dec
inc
dec
mov
mov
sar
in
aaa
gs
inc
add
xchg
push
into
xor
and
and
les
hlt
pop
sbbb
and
sbb
jno
pushf
insl
addr16
out
in
ret
sbb
pop
or
jmp
mov
push
dec
pop
push
mov
inc
inc
stos
sbb
push
sbb
mov
in
lods
mov
sub
pop
push
sub
mov
imul
clc
xchg
cli
test
repz
stc
loop
fdivrs
iret
mov
sub
mov
sbb
out
and
xlat
test
mov
pop
mov
ja
and
push
mov
cli
test
nop
sub
popf
mov
rcrl
sahf
dec
lea
or
xor
push
or
inc
test
int
sbb
int
mov
sarl
jp
sub
sbb
and
cmpsb
out
xchg
rcrl
icebp
xor
aad
xor
test
shlb
fnstcw
out
jae
std
loope
push
fwait
ror
push
jb
aas
and
mov
adc
jno
mov
aaa
dec
callw
xchg
mov
imul
jl
adc
test
cmc
sbb
xlat
jl
daa
or
inc
pop
adc
aas
push
int3
or
mov
pop
xchg
xchg
pushf
mov
mov
std
ret
add
jmp
pop
inc
sub
or
cmc
leave
rcll
shlb
sub
jo
xor
sub
mov
jge
movsl
pop
jmp
xor
arpl
outsl
and
cmp
imulb
lahf
pop
test
mov
xchg
call
in
cmp
scas
imul
sti
arpl
pop
jne
push
xchg
cs
xchg
mov
setns
ljmp
jge
mov
incb
mov
xor
adc
cli
jno
test
mov
adc
adc
dec
mov
std
push
mov
imulb
insb
jp
dec
xor
mov
mov
sbb
inc
xor
lahf
out
mov
sbb
sti
mov
jle
ss
xor
jg
imul
shlb
subl
add
insl
fcomps
andb
fsubl
push
mov
pop
mov
inc
mov
jl
jns
lds
loopne
imul
loop
pop
mov
jnp
mov
sbb
mov
enter
daa
dec
or
and
sbb
leave
jb
xchg
mov
pop
std
mov
test
sub
xor
insb
sub
pop
js
out
or
cmp
sahf
add
jmp
pop
shrl
sub
mov
test
popf
add
lea
notb
jge
leave
cmp
hlt
cltd
repz
sbb
mov
mov
dec
stc
sbb
pop
adc
or
jecxz
mov
shlb
add
xor
popa
fbstp
outsl
dec
adc
outsb
cmp
loopne
mov
imul
shll
cmp
lock
inc
bound
out
xchg
jmp
test
xor
push
and
int3
inc
in
pop
das
adc
or
pop
push
or
xor
pop
xchg
and
and
xchg
cmp
cli
pop
mulb
decb
rcll
inc
leave
pop
ljmp
and
or
aaa
into
dec
orl
mov
cmp
jl
divb
push
inc
pop
inc
mov
aas
fldpi
insb
jecxz
ja
aam
stos
push
in
das
out
mov
jle
cmp
or
xchg
xchg
fisubs
les
in
cmp
jae
inc
sub
inc
xorl
bound
pop
mov
pop
incb
into
sbb
pop
push
mov
aam
jnp
pop
mov
out
into
dec
inc
or
mov
sbb
jae
jnp
pushf
testl
xchg
adc
int
sti
out
sarl
cltd
and
shrb
test
dec
mov
lahf
sbb
push
mov
inc
push
in
push
mov
sti
and
xchg
cld
jns
stc
and
lea
mov
adc
xchg
pop
mov
addr16
push
xchg
mov
inc
push
loopne
xlat
push
xlat
dec
xlat
push
inc
or
scas
or
sarb
sub
dec
sbb
mov
cltd
aaa
push
pop
push
iret
dec
jb
inc
mov
sub
inc
data16
jne
shrl
pusha
xchg
mov
daa
inc
mov
add
sbb
ficomps
in
sub
xchg
jb
jo
stos
stos
push
jae
popa
arpl
or
pop
add
lock
ss
xchg
addb
repnz
cmpsb
inc
movsl
lods
mov
lret
xchg
mov
lods
and
dec
sbb
pop
adc
adc
adc
dec
cmpsb
add
dec
out
inc
cwtl
or
shrb
sarb
lods
stos
inc
fld
dec
pop
insl
push
xor
sub
aam
pushf
roll
sbb
popa
dec
dec
ds
or
fidivl
lahf
mov
arpl
or
hlt
mov
xchg
sub
in
fstps
aad
notl
rcrl
xchg
pop
adc
scas
pop
jb
or
mov
xchg
adc
dec
stos
adc
sbb
jno
sub
out
ja
leave
arpl
cmpsb
sbbl
push
pop
fs
xor
lahf
lock
bound
fdivrs
xchg
pusha
ds
mov
or
nop
add
movsl
int
pop
pop
daa
sbb
jge
pop
aaa
jbe
fs
mov
inc
incb
sub
xor
fidivs
and
jge
pop
jecxz
jg
push
fs
cmp
popf
jmp
or
popa
mov
mov
xchg
xchg
mov
xchg
xchg
adc
ret
popa
cmp
lcall
jno
cmpsl
lcall
sti
popf
mov
jo
ds
jnp
sbb
mulb
sbb
xchg
cli
adc
mov
aad
into
fiaddl
cmp
leave
and
int
fisttpl
jb
popa
jmp
xchg
cmp
cmpsl
sbb
out
inc
push
adc
xor
hlt
push
adc
sub
dec
testb
adc
sbb
jnp
dec
inc
cltd
push
jnp
or
inc
pop
cmc
mov
fsubrp
sbb
pushl
roll
js
insb
stos
jecxz
sub
ficoms
roll
clc
xchg
loopne
aam
or
jl
stc
repnz
dec
not
pop
pop
icebp
ret
int
lahf
xor
mov
add
pushf
mov
jae
dec
outsl
aam
ds
mov
arpl
xchg
jbe
add
cmc
nop
cmpb
lods
sahf
scas
lret
pop
or
arpl
cmp
jae
std
pop
cmpsl
idivl
inc
add
inc
cltd
xchg
testl
sub
xor
push
clc
add
cmp
jns
icebp
test
mov
in
ud0
xor
and
imulb
mov
incl
mov
cmp
add
mov
cmp
pop
out
out
je
pop
pop
es
inc
stc
sub
rcrl
outsb
mov
dec
xchg
and
mov
ror
inc
cmp
jp
cwtl
gs
int3
xor
jge
push
inc
pusha
cmpsb
pop
into
xor
in
inc
mov
cld
out
or
movsb
repnz
push
div
xlat
jmp
fwait
lret
sub
fsubrl
sub
scas
jne
push
dec
xlat
xchg
add
mov
fldl
lret
jmp
movsb
fstpt
sub
mov
cmp
mov
ljmp
lods
mov
std
or
mov
ja
inc
push
xor
loopne
adc
shll
bound
imul
xchg
xchg
subl
fiadds
push
dec
add
push
icebp
subl
lods
lret
mov
mov
sbbl
xor
lcall
leave
inc
and
add
or
ljmp
jo
jl
cmp
cli
cltd
cmp
lea
mov
jmp
dec
movsl
jp
and
insb
push
in
iret
andb
pop
sbb
pop
mov
iret
js
jae
jno
in
mov
fcmovnb
add
cmp
xor
inc
mov
jmp
or
xchg
ret
jle
dec
lock
mov
lods
jmp
scas
mov
imul
push
cmp
out
sub
repnz
mov
mov
gs
ret
testl
jo
jg
dec
dec
sbb
push
fisttpl
aad
int
sub
push
idivb
shll
xor
pop
shrl
pop
aad
add
scas
inc
outsl
cwtl
rcr
pop
repnz
xchg
jnp
add
icebp
sti
repnz
or
movsl
push
push
mov
inc
xchg
push
lcall
push
enter
sbb
sub
jl
inc
icebp
gs
mov
lea
in
stos
or
fmulp
jp
mov
icebp
fwait
xchg
add
fwait
aas
sbb
in
les
in
stos
notl
cmpsl
or
lods
ss
jecxz
shll
mov
cmpsl
or
xchg
inc
imul
movsl
idiv
fisttpll
jle
outsl
enter
sar
mov
mov
mov
movsl
aam
hlt
lcall
push
xor
mov
cmp
xor
pusha
mov
cmp
fistl
clc
cmpsl
mov
cmpsl
out
test
nop
jae
cmp
adc
fcmove
jg
aam
or
pop
shr
pop
int
add
loopne
or
ret
add
das
add
decb
scas
xlat
mov
add
push
lods
push
xchg
lea
insb
jle
aaa
cltd
adc
push
pop
icebp
mov
jns
outsl
xchg
pop
cld
lret
sub
mov
lock
xchg
fsubl
pop
icebp
fwait
fwait
into
and
jb
out
cwtl
fsubl
fbld
add
jno
std
stc
shll
pop
scas
xor
bound
and
movsb
sbb
sub
cmpsb
pop
ficomps
call
push
xchg
inc
shlb
repnz
lcall
mov
cmc
pop
xchg
repnz
xlat
sub
mov
shl
sub
push
push
mov
movsl
xchg
xchg
lret
std
lock
repnz
pop
es
dec
fists
xor
pop
mov
pushf
test
cmpsb
sbb
xorl
mov
cwtl
jmp
or
xchg
pop
pop
lret
cvtpi2ps
mov
leave
xchg
movsl
mul
push
adc
jns
in
adc
push
mov
pop
inc
mov
sbb
xor
cmp
mov
jl
movsl
push
mov
in
testb
sbb
mov
cmp
iret
in
or
jo
ss
stc
js
filds
xor
jmp
mov
add
push
int
dec
iret
pop
loope
repnz
test
scas
add
decl
idivb
jb
nop
or
mov
in
ss
mov
push
jbe
nop
sub
mov
jbe
sub
imulb
xchg
sbb
pop
inc
push
xor
xor
dec
mov
xor
ret
adc
loopne
push
fldpi
push
shll
dec
dec
cmp
cmp
push
mov
sti
mov
and
mov
add
testb
in
jle
ja
and
mov
inc
adc
fstl
loope
jae
fldt
jae
mov
mov
lods
imul
adc
push
mov
in
stos
mov
idivl
lea
in
inc
dec
pop
cmp
mov
pushf
and
cs
mov
jns
cmp
dec
add
push
mov
push
jp
push
pop
mov
je
add
orl
add
mov
xlat
pop
stc
dec
aas
dec
push
push
cmp
sti
push
fs
fdivs
rclb
leave
sbb
xchg
fwait
adc
mov
clc
or
jno
fwait
aaa
jmp
mov
outsb
mov
scas
ffreep
xchg
jae
fwait
jnp
aad
in
push
sarl
rcll
nop
sbb
xor
lret
scas
lods
cmp
gs
sub
test
push
push
shll
movsb
into
mov
lcall
xor
and
aad
inc
inc
jge
and
dec
iret
test
lahf
aam
pop
les
inc
cmp
jg
inc
lds
lods
aas
sti
stc
mov
sub
sbb
xor
dec
imul
loopne
or
in
mov
andl
sbb
popa
pop
sub
js
les
fistpl
mov
sub
cmp
test
insb
cltd
movsl
aad
cs
xor
push
pusha
stos
mov
pop
and
jbe
outsl
inc
orl
subl
icebp
jae
mov
mov
adc
fistl
jbe
loope
jne
sbbb
int
cmp
sub
sub
xchg
stc
pop
pop
aas
dec
clc
test
fimuls
pop
xchg
xor
and
mov
into
or
dec
inc
and
imul
test
or
sub
xchg
and
mov
stos
pop
xor
movsl
xlat
inc
into
push
shrl
repnz
fsubr
or
scas
cmp
pop
in
pop
mov
ljmp
mov
push
xor
mov
ss
aas
push
lahf
sbb
fs
sub
cmp
dec
pop
and
jnp
add
sub
or
scas
je
or
stos
lock
and
movsb
xchg
daa
and
add
inc
push
in
jmp
repz
mov
cmc
orb
inc
lcall
insl
insb
outsl
and
cli
mov
push
mov
jnp
cmp
or
movsb
aas
fimull
ds
fcomps
call
add
int
cmpsl
stos
ret
xchg
inc
pop
std
add
aad
cmp
cli
popf
fdivrs
ss
xor
xchg
xor
sub
xor
sub
lds
and
mov
and
and
xchg
hlt
jp
adc
nop
xor
add
jmp
inc
inc
pushf
mov
cmp
xor
xchg
mov
insl
sbb
pop
inc
mov
pop
leave
dec
and
out
test
push
adc
xor
icebp
testb
imul
push
aam
in
dec
clc
mov
ljmp
push
test
push
divl
jecxz
jmp
testl
xor
fcmovnb
inc
mov
jae
sbb
lock
xlat
lcall
push
mov
xchg
clc
mov
mov
and
mov
shl
lret
into
sbb
cmpsb
pop
lds
stos
lcall
repz
iret
add
cld
mov
and
and
push
adc
cltd
mov
xchg
adc
push
xchg
inc
pusha
cmp
mul
roll
lret
cld
push
xlat
aaa
mov
enter
popa
and
xchg
out
cmp
cmp
xor
xor
repnz
insl
in
cmp
aam
daa
sbb
adc
test
sbb
sub
arpl
lea
push
mov
inc
pop
rcl
or
add
push
lea
mov
sub
and
hlt
fwait
cli
pushl
fidivrs
mov
pushf
sbb
xlat
pusha
mov
scas
adc
jo
imul
xchg
es
cs
dec
xor
in
push
pushf
xlat
or
outsl
mov
ret
mov
mov
xchg
add
popf
sub
adc
cli
ret
push
cmpsl
sbb
sbb
mov
mov
scas
xor
mov
adc
lcall
lret
cmp
xchg
mov
lahf
adc
sub
rcl
pushfw
loope
xor
add
test
cwtl
lcall
pop
aas
mov
mov
adc
outsl
mov
xchg
stos
push
xchg
in
push
shr
mov
xchg
out
loopne
pop
testb
lret
jg
xchg
scas
lahf
and
nop
in
or
ficoms
sbb
cwtl
cmpsb
xor
jl
mov
mov
push
dec
push
out
je
dec
fsubrs
xor
xorl
jno
out
outsl
cs
and
inc
add
xchg
add
cmc
ds
cmp
jo
sub
popa
scas
das
mov
imul
push
adc
mov
out
imul
inc
pop
gs
outsb
pushf
enter
mov
ficompl
inc
add
mov
into
adc
push
lret
fstl
and
add
insl
jecxz
mov
bound
pop
clc
mov
ds
leave
and
push
lahf
fisubrl
int3
cltd
sub
fwait
add
out
fistpl
mov
add
in
lds
sbb
push
repz
cmpsl
in
js
inc
out
rclb
ss
subl
fwait
xor
mov
sub
sub
cli
hlt
cmp
shll
call
jecxz
push
rol
les
xor
mov
imul
aad
jge
repz
cmc
inc
push
mov
fs
xchg
cmp
dec
pop
bound
data16
mov
mov
aas
xchg
mov
lret
es
jbe
mov
mov
imul
inc
cs
mov
xchg
pop
ret
aad
jae
cmp
dec
pop
ss
mov
jno
xchg
or
sbb
movsl
sub
mov
sahf
xor
mov
jmp
jae
shrl
mov
or
sbb
call
jecxz
jmp
iret
es
mov
inc
jno
add
bnd
sub
inc
adc
dec
cld
and
pop
inc
xchg
jecxz
cmp
push
cld
sti
push
jnp
pop
popf
lcall
in
inc
and
test
pop
xor
mov
mov
xchg
fwait
int3
mov
es
pop
jo
pop
aam
jo
push
sbb
int
sti
pop
out
aas
xchg
sbb
xchg
mov
push
xchg
negb
inc
lock
pop
jle
inc
jno
ret
lock
push
jbe
insb
aam
ja
pop
dec
shrb
out
dec
jbe
les
mov
push
aad
insb
sub
xor
jbe
ficompl
fistpll
fisubrs
subb
xchg
push
adc
cmp
jb
test
and
call
test
push
mov
out
movsb
sbb
pop
cmp
aam
cld
ret
call
and
add
insb
call
mov
pop
fxch
stos
mov
inc
movsl
ret
mov
jnp
cwtl
shlb
cs
out
repz
imul
shlb
sub
cmp
out
shl
sti
enter
nop
pop
push
or
push
adc
adc
fsubs
sub
sbb
fists
movsb
es
stos
xlat
lret
mov
lods
jae
jno
out
repz
andl
pop
push
hlt
dec
insb
or
daa
lret
ljmp
cmp
lods
jo
push
movsb
pop
cli
filds
adc
dec
pop
dec
rcrl
mov
mov
ds
cmc
popf
scas
sbb
or
movsb
stos
test
pushf
jae
or
pop
push
xor
and
lahf
and
push
out
lahf
rorb
test
dec
adc
lock
push
nop
jmp
push
xor
add
ret
fisttpll
cmc
cmp
push
push
cmp
xchg
dec
js
mov
add
mov
insb
aad
push
xlat
addr16
rcrl
mov
sbb
repz
sbb
das
cmpsb
sbb
pushf
adc
mov
out
jle
cmpb
add
or
or
filds
movsb
je
test
adc
adc
cwtl
test
xchg
imul
ret
loopne
mov
xchg
inc
clc
xor
push
push
lahf
pop
add
jne
sbb
pushf
xor
pop
mov
orl
andb
enter
in
fcomp
out
repnz
inc
push
mov
test
int3
popa
and
xchg
cwtl
mov
or
xchg
imul
cs
or
shll
adc
jbe
xchg
sti
stc
mov
arpl
xchg
scas
ret
sbb
cmp
and
adc
dec
dec
loop
or
repz
lock
int
mov
adc
dec
sbb
and
mov
sub
sub
or
pop
outsl
push
add
test
lds
ffree
xor
jae
scas
dec
shlb
pop
push
ficompl
out
adc
into
aam
inc
sub
sbb
jg
in
pop
push
sbb
mov
fildl
or
mov
cmp
in
pop
int
mov
jb
jno
pop
inc
mov
lock
adc
xchg
aaa
xchg
jl
dec
xlat
cld
movsb
out
pop
push
pop
hlt
or
nop
pusha
and
push
sbb
or
pop
outsl
mov
movl
add
mov
insb
aaa
push
add
pop
call
push
pushf
lock
inc
addr16
iret
rolb
mov
daa
sarl
out
cmc
in
arpl
pushf
and
out
das
mov
or
sub
xor
or
mov
jo
dec
ror
outsl
stos
sub
jbe
sbb
pop
in
mov
cmp
sub
adc
jmp
mov
js
in
jle
push
inc
mul
sbb
es
jb
mov
aaa
out
scas
cmp
mov
lret
filds
inc
sub
jb
lret
das
mov
pop
repz
mov
push
mov
or
adc
xchg
or
xchg
loope
mov
movl
sbb
stos
xlat
cmp
js
cli
pop
cli
scas
call
into
dec
rcrb
pop
das
out
or
and
dec
cmpl
insb
sbb
pop
sbb
pop
or
mov
push
stos
aam
mov
mov
cltd
fstl
ret
inc
push
notl
aaa
nop
sbb
sbb
xchg
mov
jl
lret
pop
add
cld
repz
mov
lcall
out
out
js
sbb
lea
shll
lods
xrelease
lea
inc
nop
cmp
stos
negb
imul
jns
or
mov
inc
mov
and
negb
sbb
stc
add
je
inc
adc
std
add
jp
or
or
mov
test
jno
or
mov
add
loop
lods
orl
loopne
fdivrs
add
mov
mov
mov
jnp
movsl
cmpsb
aas
push
jno
lea
mov
and
push
jbe
xor
in
dec
ret
shlb
cmp
xchg
push
inc
daa
cmp
cli
xchg
mov
ds
push
ja
push
imul
jb
xor
ds
mov
and
cmp
loope
imul
mov
sub
aad
sub
out
aam
fs
push
cwtl
and
rolb
dec
aad
test
push
fs
aaa
daa
adc
dec
push
addr16
movsb
sbb
and
je
or
popf
mov
test
push
mov
mov
test
addr16
and
jl
imul
dec
test
cmp
lret
xor
insb
inc
aad
pop
dec
rcll
rorb
cli
mov
xchg
add
std
pusha
mov
frndint
jmp
push
sbb
pop
xor
imul
jle
out
pop
adc
sbb
lea
dec
xor
fidivl
in
cwtl
stos
pop
lock
jo
mov
push
pop
and
mov
pop
movsb
pop
in
jg
push
in
push
dec
xlat
lods
xchg
xchg
or
dec
cmp
jne
ds
mov
aaa
popa
mov
or
add
push
lock
fsubrs
xor
mov
xchg
pop
jp
cltd
jmp
into
mov
enter
das
cs
cs
push
pop
out
cmc
xchg
dec
loop
cli
push
pushf
jmp
mull
unpcklps
pop
popf
lret
and
push
and
sbb
lcall
pop
sarl
ss
adc
mov
cmpl
sub
lret
cmpsl
xchg
lahf
and
int
xchg
jb
out
jl
imul
outsb
jnp
loop
addl
mov
int
pop
xchg
adc
pop
rep
test
loop
cs
in
gs
sti
test
repnz
outsb
call
xchg
lcall
mov
icebp
dec
and
push
mov
testb
iret
pop
js
jl
xchg
jns
sti
pop
mov
push
dec
mov
lea
push
xchg
cmpsb
popa
adc
jge
pop
jno
outsl
ljmp
fdivl
dec
sub
jnp
sub
test
int
in
je
pop
or
add
ret
cltd
test
mov
fwait
daa
push
jg
jle
popf
leave
mov
testl
dec
xchg
notb
movsb
mov
or
pop
adc
cmp
out
testl
and
mov
pop
xchg
sub
sbb
sbb
add
pop
les
lahf
out
cwtl
dec
test
jmp
lret
les
popf
pop
std
mov
subb
into
insl
es
mov
dec
orb
add
addl
dec
mov
cmp
pusha
data16
mov
mov
lret
jns
sub
push
mov
lahf
xchg
orl
mov
push
test
push
and
add
iret
cmpsl
cmp
imul
inc
push
jle
out
add
xchg
push
lret
dec
bound
dec
lods
and
loopne
and
dec
movsb
and
dec
lods
sub
aad
add
adc
mov
rorl
push
stos
pop
lock
jmp
mov
ret
push
dec
andps
inc
xor
lahf
mov
mov
stos
int3
jge
mov
xchg
shlb
inc
adc
cs
mov
jle
adc
push
test
mov
xchg
dec
cmpl
pop
xchg
std
loopne
data16
xor
int
sbb
in
and
test
jae
pop
inc
in
sbb
mov
frstor
sbb
xchg
ss
and
dec
xchg
or
xchg
int3
inc
icebp
sub
scas
ds
leave
mov
adc
xchg
sub
std
out
mov
inc
cltd
pop
lock
xor
pop
mov
ret
lahf
sahf
dec
cmp
popa
or
rol
insb
cwtl
sbb
cmp
sbb
push
mov
sahf
jbe
mov
mov
mov
push
dec
ret
add
inc
or
xchg
iret
loopne
out
add
mov
inc
inc
ljmp
in
popa
jbe
mov
add
cmp
inc
popl
mov
hlt
dec
inc
mov
daa
mov
stos
ret
push
push
or
fs
cmp
jb
or
std
jb
sub
ret
pop
sub
je
incl
adc
pop
aas
sbbl
rol
loop
loope
pop
mov
hlt
outsl
jb
add
mov
push
movsb
or
mov
add
js
scas
mov
and
in
adc
test
mov
iret
sbb
xchg
loop
mov
sbbb
stos
call
js
cmp
enter
cmp
cmp
push
lea
xchg
loopne
mov
xchg
ja
sub
shl
addr16
inc
or
pop
adc
add
xor
pop
inc
cltd
loopne
jge
push
inc
imul
pop
pop
lret
and
dec
das
es
fwait
xlat
stos
popa
dec
xchg
push
adc
sahf
mov
or
xlat
or
xor
adc
es
cs
cld
add
ret
and
cmpsl
stos
inc
push
add
adcb
fwait
add
gs
les
lods
pop
sub
cld
or
pop
mov
cmp
xchg
sbb
ficompl
lret
mov
pushf
fidivl
jbe
mov
test
push
adc
jmp
push
test
cld
nop
mov
in
sub
lahf
adc
sub
es
add
popf
add
dec
cli
insl
jle
adc
movl
dec
les
push
out
sub
imul
xor
add
mov
out
xchg
jp
or
or
inc
xor
in
mov
pop
adc
xor
stos
jno
push
fadd
or
push
pop
push
mov
shl
insb
mov
add
shrl
dec
push
pop
xor
das
adcl
mov
lods
mov
push
cld
scas
add
daa
and
leave
xchg
aam
and
pop
notb
sbb
cltd
push
mov
xor
cmp
cmp
popa
sbb
cmp
cld
mov
in
mov
lods
int
daa
or
sti
aaa
rcll
mov
cmp
and
test
arpl
fwait
or
ror
mov
clc
mov
movsb
dec
mov
iret
and
loop
insb
int
xor
ficomps
xor
fiadds
int
or
into
push
aas
cmp
sti
pop
mov
jp
lds
test
push
dec
mov
pop
add
int3
call
pushf
inc
ret
sub
and
outsl
jno
inc
add
xchg
xor
std
cmpsb
add
hlt
push
pop
pop
adc
mov
and
xchg
cmpsl
dec
cltd
in
aam
sbb
mov
lds
ud0
fisubl
movsl
xor
ret
enter
and
jns
xorl
cli
addr16
leave
mov
addl
lock
dec
mov
or
cmp
mov
sbb
inc
out
mov
loopne
dec
sbb
ret
enter
inc
jmp
cmp
add
jecxz
push
call
rolb
push
cmp
add
faddl
xor
loop
dec
jb
push
pusha
aad
call
andl
out
scas
sbb
push
add
or
push
jne
lret
mov
in
pop
fidivrl
cmp
sbb
dec
jne
sub
cmp
insb
jmp
es
xor
or
mov
sahf
push
and
xchg
pushf
fnstcw
jne
xchg
dec
mov
nop
insl
stc
in
cld
push
push
mov
movsb
loop
enter
xor
inc
sub
divb
in
ljmp
or
mov
hlt
loop
sub
mov
lret
add
dec
add
cltd
fsubr
jmp
push
ret
dec
cmp
and
cmpsb
dec
iret
das
mov
inc
enter
push
imull
cmp
lret
and
stos
and
dec
inc
pushl
add
add
divb
inc
jae
push
js
hlt
jmp
mov
js
mov
cltd
in
enter
stc
or
aaa
jnp
popf
dec
cmp
popf
loop
das
stc
lahf
pop
mov
ret
mov
adc
ret
xor
fiaddl
sahf
add
push
jnp
in
jo
cmp
test
push
test
xor
push
sbb
xor
mov
ja
pop
pop
lods
ret
out
aas
adc
xor
dec
icebp
stos
outsl
pop
in
cmp
sub
fisttpll
sub
insb
repnz
mov
jg
lods
in
xchg
inc
jo
je
lret
lds
xchg
cld
sahf
xor
mov
cli
jno
leave
movsl
test
pop
xchg
jecxz
imul
insl
ret
lahf
test
sbb
sub
fdivrl
roll
sbb
movsb
xchg
hlt
mov
mov
lahf
sub
cmc
and
in
pop
mov
or
in
lock
mov
loop
out
je
rorb
push
lcall
jbe
sub
hlt
push
enter
jp
das
push
ret
mov
shrl
aam
dec
lods
push
int
repz
lret
pop
fs
test
dec
pop
mov
aad
xor
repz
add
dec
ljmp
jmp
fs
jmp
ds
fdivrs
ljmp
jns
imul
sbb
frstor
aam
sbbl
dec
in
stos
lds
arpl
out
cmp
dec
inc
adc
mov
xchg
mov
lods
xchg
int3
shr
cltd
mov
mov
cmpsl
mov
out
push
push
cmp
sub
mov
testb
ret
push
loop
cmp
jp
mov
shr
mov
push
push
mov
sbb
ficompl
mov
dec
out
sbb
hlt
roll
scas
movsb
repz
adc
lods
sbb
mov
sbb
adc
ss
mov
inc
jmp
aad
dec
or
stos
push
ds
in
or
sub
ret
bt
dec
insb
pop
ja
ja
fs
dec
popf
push
scas
movsl
push
arpl
lahf
cmp
and
test
dec
icebp
inc
sbb
fstpl
add
push
arpl
jnp
insb
inc
jle
jecxz
and
xchg
add
mov
sub
pushf
inc
jne
pop
xchg
mov
adc
iret
xor
adc
add
mov
xor
test
loopne
in
xchg
test
pop
mov
mov
add
mull
leave
push
sbb
daa
push
xchg
or
pop
adc
stos
scas
call
fwait
rcrb
stos
in
sub
xor
mov
negb
pop
add
aaa
xor
mov
jge
in
xchg
mov
pop
ficompl
les
cli
pusha
inc
xchg
stc
xor
sbb
bound
or
mov
test
rclb
imul
std
sbb
stos
cmp
dec
lods
adc
push
xor
jnp
out
cld
pop
lods
sbb
out
popa
out
jle
aad
cmp
gs
push
xlat
or
dec
pop
push
or
fwait
shlb
cmp
xchg
cwtl
imul
or
or
or
lahf
outsl
or
pop
mov
pop
bnd
clc
fs
loop
aaa
adc
cs
nop
push
pop
inc
scas
lock
and
and
cmp
pop
inc
je
lahf
pop
in
mov
fmull
inc
mov
bound
mov
push
pop
push
lahf
int3
xor
push
add
inc
out
cli
cwtl
or
or
scas
push
mov
fs
sarb
jge
inc
jno
xor
aam
mov
lods
stc
xchg
jne
add
icebp
push
lock
cmp
repz
insl
out
pop
sbb
or
cmc
and
mov
in
pop
jbe
jnp
ljmp
inc
rorl
cmpsl
inc
fstpl
sbb
clc
sub
mov
mov
ficoml
or
in
pop
loope
push
and
xor
ret
cmpsl
lahf
sahf
in
popa
fprem1
dec
cwtl
and
in
loope
out
mov
rcr
add
out
test
mov
test
sub
aad
aad
cmpsb
xor
and
and
shlb
add
cmp
mov
pop
and
neg
je
mov
bound
in
mov
xchg
mov
jo
pop
mov
xchg
mov
lock
xchg
mov
inc
push
mov
sbb
pop
push
jnp
repnz
lret
xor
add
cmp
xchg
iret
fsubs
cmp
fistpll
cmp
pop
mov
and
in
aad
xorl
jecxz
xor
fs
popa
mov
not
jae
mov
adc
cmpsb
arpl
icebp
jo
sbb
cmp
pop
add
mov
inc
rorl
jecxz
ljmp
pushf
push
ret
bound
jnp
xchg
xchg
pop
xchg
cmc
mov
pop
icebp
mov
push
and
mov
sahf
test
in
mov
repnz
mov
sub
push
iret
into
leave
lret
adc
adc
xchg
test
xorb
loop
xorb
ret
xor
into
pmulhw
inc
mov
fnstenv
push
pop
fidivl
jnp
enter
fwait
jecxz
mov
cmp
popf
pop
test
les
ss
testb
adc
jecxz
rcrl
cld
adc
mov
xchg
enter
mov
add
into
jg
aaa
sahf
int3
pop
gs
adc
scas
out
inc
pop
repnz
shlb
outsl
arpl
dec
loop
and
lret
cld
cli
push
xor
cmp
add
mov
notl
test
ja
out
dec
and
and
insb
push
std
mov
das
loope
push
out
in
inc
cmpsb
or
adc
dec
mov
mov
xchg
out
filds
xchg
push
and
in
stos
fldt
mov
leave
adc
jno
mov
rcll
scas
lahf
ficomps
xor
into
out
test
xor
mov
sub
or
lcall
aad
pop
inc
mov
sub
bound
sub
addr16
leave
ret
and
inc
inc
fidivrl
mov
out
push
lds
ss
xor
mov
test
inc
dec
out
loop
push
push
mov
dec
push
pop
iret
into
out
imul
fcompl
fldenv
outsb
imul
outsb
push
jg
push
in
les
xchg
xchg
loopne
gs
sub
and
xor
sbb
sbb
cmpl
test
es
iret
adc
push
cmpsl
roll
rclb
or
xor
jbe
jo
xchg
inc
and
addr16
out
ficompl
mov
sti
xchg
sbb
mov
insb
mov
rcrb
scas
int3
sub
in
nop
dec
inc
sbb
test
pusha
mov
push
or
jl
insl
test
dec
push
xchg
sub
mov
inc
out
test
jnp
xchg
sbb
sub
mov
jp
repz
xlat
mov
sarb
and
sbb
push
mov
mov
rol
mov
gs
mov
les
xchg
lcall
sbb
cld
dec
pushw
pop
xchg
sub
int
xchg
je
cltd
xchg
pop
mov
dec
mov
and
test
push
pushf
icebp
outsb
test
pop
rclb
add
imulb
add
xchg
dec
stos
xchg
cld
pop
iret
divl
lea
lock
jne
cmc
out
pop
cld
addr16
into
int3
mov
bound
or
lock
pop
jo
fs
scas
lods
js
je
and
loope
cmp
and
data16
mov
dec
inc
adc
dec
lods
jmp
dec
cs
mov
test
push
test
rol
into
sti
stos
push
dec
xchg
repnz
test
add
or
push
shlb
or
repz
fsubs
scas
repz
fmul
pop
adc
cli
insl
insb
popl
xor
push
inc
add
and
out
cwtl
fld
push
jecxz
aad
enter
pop
imul
insb
fbstp
aam
ja
mov
mov
shr
call
jge
shlb
movsb
fstps
test
scas
cmp
gs
mov
test
call
fiaddl
cmpsl
xchg
and
loop
repnz
lcall
jle
jns
sub
jb
in
cltd
dec
xchg
or
into
inc
sub
cmp
xchg
inc
bnd
xchg
cmp
popf
ret
iret
leave
xor
popa
push
inc
in
pop
and
lahf
xor
jnp
sbb
add
mov
fmull
mov
sahf
push
movsl
outsl
inc
mov
movsl
ds
in
mov
push
stos
ret
lods
out
jecxz
push
out
mov
scas
lcall
jbe
mov
adc
push
data16
adc
lds
daa
shll
int3
fcmovne
stos
insl
popf
jno
mov
pop
xor
push
les
cmp
ja
aad
sub
lahf
subb
mov
sub
mov
jge
es
scas
mov
enter
or
cmp
orl
jns
repnz
jl
fsubrl
shll
pop
push
xchg
sbb
data16
icebp
lret
lds
and
adc
and
push
movsb
add
movsb
push
popf
lods
movsb
push
in
stos
mov
adc
jmp
jp
cmpsl
sbb
scas
cld
std
mov
xor
mov
popf
shl
pushf
lea
mov
lock
sub
icebp
pop
push
into
push
in
dec
std
stos
mull
dec
popa
mov
mov
and
ficompl
scas
and
cmp
lods
push
add
push
xchg
lock
adc
sbb
imul
test
xchg
bound
addr16
ja
lahf
repnz
jnp
sub
test
clc
test
or
sub
mov
mov
inc
scas
sti
je
cmp
xchg
roll
sub
gs
pop
push
addr16
xor
mov
mov
xchg
ror
mov
cwtl
or
push
idivb
mov
movsl
jb
xor
adcb
mov
pop
inc
call
cmp
sti
sbb
inc
idivl
out
cwtl
sbb
outsb
in
addl
les
mov
int
add
dec
aam
add
jge
mov
pop
outsl
push
and
sahf
rolb
icebp
jne
outsl
mov
test
jle
xchg
push
push
push
mov
stos
or
or
sub
call
in
pusha
xor
jns
out
ret
loop
add
adc
or
push
mov
sarl
xor
mov
adc
es
pop
dec
or
jg
pop
push
xchg
out
pop
add
out
xchg
mov
loopne
mulb
jecxz
ja
pop
xchg
cmp
fstpl
mov
das
pusha
xchg
dec
cwtl
sub
fstpt
cmc
sbb
out
sub
push
dec
imul
int
hlt
ret
mov
stos
lahf
call
pop
imul
icebp
aam
xor
repz
call
adc
les
or
xchg
push
jle
stos
sub
fistl
fimuls
push
icebp
sbb
xchg
or
pop
aaa
mov
jge
add
mov
in
ret
jle
mov
es
mov
jl
xor
mov
call
dec
cwtl
push
and
frstor
xchg
fistl
fdivr
fmuls
xchg
das
cld
aam
push
xor
subl
out
xchg
inc
xor
jae
fldt
jmp
fs
icebp
mov
movsl
and
cs
out
mov
jb
mov
pop
push
sarl
mov
inc
push
sarl
test
jl
sub
hlt
cmp
bound
mov
mov
stos
nop
ljmp
call
mov
shlb
adc
cmp
dec
test
int3
mov
adc
mov
mov
fsubrs
sub
jbe
mov
scas
sbb
aaa
fs
mov
out
icebp
jno
inc
clc
test
or
or
pop
popa
xor
mov
jae
mov
aas
or
jns
mov
cmc
test
xchg
pusha
int
fmulp
out
cld
imul
loop
xchg
inc
xor
clc
adc
and
and
mov
cmp
stos
sub
jbe
fstl
sub
xchg
sbb
mov
and
insb
pop
mov
dec
sbb
cmp
lods
xlat
je
das
imul
and
xchg
lret
inc
mov
aad
pop
ss
jnp
push
lods
test
jo
imul
mov
cmpsl
push
mov
iret
mov
cwtl
sbb
dec
jmp
lods
addr16
or
sbb
shlb
adc
adc
mov
dec
out
fiaddl
stos
and
ss
cmp
std
icebp
sub
jns
pushf
sub
xchg
cmp
ss
pop
int3
repz
sbb
jnp
add
cli
jo
dec
sub
mov
adc
pop
fcomi
in
pop
cmc
stc
aaa
call
or
arpl
fsubrs
add
and
pusha
lods
xlat
ja
cmpsb
gs
decb
stos
inc
ret
jnp
test
cli
ss
insl
aam
xor
cmpsb
push
xor
and
call
dec
mov
sbb
or
jecxz
pop
jnp
cmp
fs
xor
inc
bound
repnz
mov
sbb
xor
ret
mov
jecxz
inc
popf
adc
fstl
sub
jbe
inc
inc
leave
push
popa
das
xor
inc
mov
push
xor
dec
repz
jns
mov
into
stc
xchg
adc
out
and
dec
inc
nop
loope
push
stc
int3
xor
shrl
and
cs
test
dec
ret
adc
out
mov
rorb
lea
xchg
cmp
inc
mov
imul
xor
or
xchg
sub
sbb
sub
sub
in
inc
fs
aam
fistps
adc
dec
xor
jbe
fwait
xchg
sub
sub
mov
stc
cmc
xor
xchg
lods
fadd
les
mov
jl
xchg
adc
inc
xor
hlt
les
mov
ljmp
rcll
cs
fists
std
pop
inc
mov
out
stos
push
lcall
sub
enter
push
add
dec
or
xlat
sbb
sub
jle
jmp
fsubs
sub
ss
out
cld
jb
pop
lahf
mov
adc
out
fsub
cmp
sbb
fcmovnb
ss
mov
in
stos
scas
and
lods
push
arpl
push
es
cs
call
lods
sbb
sti
shll
inc
nop
xor
jg
outsb
cmp
sbb
dec
sub
jle
cmp
shrl
sbb
int
bound
into
lods
je
adc
rorb
notl
jmp
push
adc
imul
lret
sub
fistpl
jge
dec
mov
adc
xor
je
clc
repnz
adc
ja
dec
xor
out
movsb
push
fstps
push
jg
xchg
mov
mov
push
jp
add
orb
pusha
jecxz
pop
sbb
sbb
xchg
lds
cmp
int
test
push
stos
cmp
sub
xlat
testb
subl
mov
cmp
mov
mov
pop
sub
mov
xor
dec
int
out
outsl
aam
sti
imul
inc
xchg
shll
sarl
sbb
mov
push
jp
sbb
adc
movsl
insb
xchg
adc
lret
sub
xor
xchg
int
stos
xlat
xchg
push
outsb
outsb
adcl
int
pop
lock
insl
inc
rorl
pushf
inc
popf
sub
jg
jno
jp
mov
sub
cld
xchg
xlat
sub
sub
jg
jmp
pop
repz
test
mov
mov
xor
jge
hlt
incl
scas
lret
ds
ss
adc
mov
repz
adc
jg
pop
cmp
pop
xlat
mov
in
and
mov
xchg
mov
dec
mov
add
adc
fnsave
push
fs
enter
xchg
icebp
cmc
push
adc
push
push
loopne
call
les
ljmp
in
mov
outsl
mov
cli
adc
add
popf
negb
jle
or
sbb
sbb
add
sub
icebp
cmp
leavew
aaa
pop
mov
jmp
xlat
push
ja
push
mov
std
shll
out
out
in
cmp
mov
sub
or
push
jb
or
xchg
orb
fbld
in
cmp
push
movsb
imul
or
adc
pop
lahf
mov
sbb
adc
pop
inc
push
test
adc
push
pop
add
popa
sub
test
xchg
xor
cmp
gs
sti
xchg
daa
mov
sbb
mov
js
or
testl
mov
xchg
sub
aam
add
mov
out
xor
cld
divb
or
jb
stos
addr16
idivl
add
fwait
jae
out
push
sub
push
aam
add
faddl
xchg
pushf
out
popf
and
fcomip
mov
add
jb
js
dec
jecxz
aaa
fisttps
ret
neg
mov
fdivrs
hlt
loop
scas
pop
in
aaa
outsl
ljmp
test
xor
out
cmp
jecxz
test
fwait
jae
pop
test
std
lock
jo
xchg
xchg
mov
push
test
mov
ss
cwtl
cltd
loopne
rolb
test
sbb
out
mov
inc
mov
filds
fwait
shlb
mov
inc
or
addps
mov
out
mov
inc
sbbl
adc
repnz
sahf
add
scas
gs
or
pop
mov
xchg
push
dec
or
jo
jno
mov
lds
adc
std
adc
outsb
fdivrl
xorb
push
cmp
mov
push
mov
nop
cmp
shrl
inc
push
push
dec
jne
fcompl
lods
loop
daa
xor
add
js
adc
ror
ret
sub
test
out
adc
pop
scas
dec
xor
jae
push
xchg
push
xor
dec
jle
int
mov
imul
daa
jg
inc
xor
pop
sbb
or
outsl
dec
cli
popf
leave
adc
xor
shll
push
sub
push
mov
sub
in
inc
push
mov
iret
push
fisubrs
cmp
push
xor
mov
je
cmp
xor
adcb
mov
pop
pushl
push
push
and
out
sbb
and
push
stos
add
dec
pop
js
pop
stos
mov
jae
mov
xchg
xchg
mov
jecxz
xchg
les
cmp
decl
lock
daa
mov
cmp
cmp
jb
add
mov
pop
add
push
ljmp
loopne
lcall
scas
inc
mov
ljmp
mov
test
cmpsl
and
or
nop
sub
adc
push
fadds
mov
add
mov
hlt
loope
ss
es
jmp
cli
push
fwait
adcl
in
mov
adc
je
test
mov
sub
sbb
pop
jmp
lods
dec
bound
sub
imul
adc
scas
mov
push
jp
push
arpl
jo
stc
cld
xchg
scas
and
mov
pop
inc
jg
out
je
xchg
push
or
add
mov
insl
inc
imul
sub
shll
popf
mov
lods
ljmp
xchg
ret
sbb
jne
imull
pusha
mov
andl
arpl
push
scas
pusha
mov
lock
push
xrelease
js
sub
or
sarb
sahf
dec
scas
cmpsl
adc
cmp
mul
push
testb
lret
mov
lods
cmpsb
dec
mov
xor
jo
lods
enter
pusha
inc
xor
das
iret
push
in
sub
mov
sbb
test
or
fs
push
push
add
or
fistl
pop
pop
lea
movsl
pop
or
fdivrs
or
and
iret
push
xchg
enter
push
jo
fs
mov
cmp
test
push
stos
jo
push
and
outsb
xor
add
jp
xchg
adc
xchg
fwait
outsb
subl
jle
and
add
je
leave
out
pop
js
sub
and
lret
cmp
mov
outsl
imul
int
push
xor
jo
addl
pop
or
dec
cli
in
add
push
mov
in
cmp
xchg
test
push
in
adc
add
call
rolb
jnp
imul
push
fcompl
sub
imul
sub
xor
xchg
pop
in
bt
mov
pop
jb
popa
pop
sub
sub
mov
test
jne
fsts
push
pop
or
in
mov
jecxz
mov
add
mov
push
cs
scas
jle
adc
daa
addr16
test
mov
and
dec
shlb
mov
push
mul
jb
cs
cmc
addr16
test
repnz
fstpl
push
add
and
cld
xchg
nop
mov
or
in
sbb
leave
pop
cltd
pop
lods
popf
jmp
notb
lret
scas
pop
dec
adc
aam
jle
jp
cmp
shrb
lods
sbb
xor
iret
jl
push
push
faddl
scas
jae
sub
and
pusha
sub
add
mov
push
jb
cmpsb
push
imull
leave
mov
jbe
and
cld
pushf
adc
mov
xor
push
gs
cmpsl
scas
rcr
lcall
lds
in
pop
std
mov
icebp
arpl
je
jno
dec
xor
and
je
xchg
movsb
mov
test
cs
repnz
ss
lods
pop
stos
outsl
mov
add
dec
mov
filds
jne
shrb
into
mov
push
xchg
xor
gs
push
lods
inc
fisttpl
test
add
rol
jns
imul
test
mov
adc
sbb
or
cmpb
mov
into
jne
sub
sub
loope
and
je
negl
mulb
test
xor
pop
lcall
popf
fisttpl
es
push
mov
cwtl
jecxz
or
fs
xchg
xchg
sbbl
sbb
sbb
xchg
sti
jecxz
insb
addr16
pop
and
loop
ret
test
xchg
add
xchg
das
sbb
aaa
add
imull
sub
call
pop
fcomps
jbe
dec
fucomip
fldenv
in
xchg
sbb
ljmp
out
inc
stos
je
add
aad
xor
dec
push
test
insb
stos
add
ja
push
das
sbb
inc
pushf
lea
aad
sub
dec
inc
xchg
xor
push
sbb
inc
bound
adc
loope
jl
jae
mov
cmp
fcompl
test
je
and
pop
pop
je
imul
mov
mov
jo
add
gs
fdivrs
aad
iret
test
dec
sahf
and
aam
addl
jge
pop
out
jp
addl
mov
cld
clc
mov
adc
fdivs
ss
subl
mov
dec
cmp
movlps
call
add
fdivrs
jb
xchg
mov
test
ja
pop
aam
aad
xchg
push
cmc
inc
pop
cmp
ljmp
into
mov
push
insl
bound
cmp
adc
add
lock
push
in
sahf
test
es
sbb
dec
or
adc
jns
xchg
sbb
and
jmp
cmp
lods
xor
scas
out
pop
xor
cmp
jo
add
in
stos
or
and
and
dec
lret
jae
aam
fistpll
imul
sbb
sti
inc
lods
addl
pop
and
pop
pop
sbb
push
insb
sbb
mov
sbb
fists
stc
stc
inc
and
dec
fdivrp
sbb
out
xchg
mov
ss
lcall
sti
aaa
pushf
add
ret
cmp
cmp
shll
sbb
pop
ficomps
push
in
out
daa
pop
sub
insl
cmpsb
inc
xor
sahf
xchg
push
sbb
sbb
pop
jg
cli
jne
test
es
jg
imul
jb
fcomp
sti
ds
mov
movsl
decb
push
sub
sub
sbb
sbb
rorl
inc
jl
sub
inc
mulb
lahf
orb
fwait
shlb
jno
jecxz
mov
jp
adc
sub
sbb
cmp
sbb
ja
clc
mov
xchg
je
mov
and
pop
jns
cmc
pusha
xor
push
sbb
pop
mov
out
xchg
pop
imul
je
and
je
repz
push
mov
inc
cltd
fs
out
mov
mov
lock
sub
xchg
xchg
sub
sbb
mov
ss
aaa
ljmp
mov
repz
rorb
inc
mov
imul
into
mov
xor
mov
cmp
rdtsc
push
mov
jecxz
xor
jecxz
pop
stos
flds
pop
and
popa
loope
cwtl
and
add
or
stc
pop
aas
and
bound
test
fstpt
lahf
ss
cmp
fistl
cmc
jge
scas
lods
sub
dec
add
cli
ss
jno
addr16
push
aad
lods
pop
jo
mov
sub
leave
inc
lock
rcl
imul
outsb
jge
call
sub
jle
mov
movsb
push
out
jbe
out
stos
mov
jle
nop
jbe
jge
dec
push
add
stos
repz
arpl
popa
shll
sub
decl
or
lods
mov
mov
lret
pop
push
cmp
adc
adc
mov
popf
xor
sbb
fistps
and
js
inc
pop
push
mov
dec
fnstsw
rclb
mov
pop
cmp
xchg
add
xchg
pop
dec
mov
cwtl
rcrb
sahf
es
and
outsb
aaa
call
lea
out
jnp
mov
adc
clc
mov
jmp
and
imul
mov
ss
int3
inc
cmp
sbb
loope
cmp
lret
mov
jno
test
push
jle
mov
sub
mov
movsb
adc
pop
inc
xor
scas
scas
fsubl
pop
daa
add
pop
jo
std
mov
movsb
adc
orb
sti
orb
add
mov
or
mov
fsubrs
fnstenv
aas
xchg
mov
xor
cmp
pop
rorb
jl
inc
sahf
xor
test
popa
adc
ret
add
sbb
cmp
into
test
std
inc
call
mov
mov
sbb
xchg
ficoml
sti
sub
mov
loop
sbb
fs
test
inc
sub
jmp
adc
mov
aad
sub
dec
inc
mov
in
cmp
mov
adc
shlb
or
mull
pop
xchg
daa
cmpl
pusha
mov
fidivl
sbb
andb
aad
aad
mov
or
xchg
popa
sub
jno
xor
jno
leave
xor
xor
dec
lods
xchg
cmp
andl
jne
cwtl
jmp
pusha
lds
xor
add
xor
push
push
pop
in
popa
addr16
aam
pop
push
and
fidivl
pushf
pop
sbb
dec
adc
push
pushl
mov
ss
mov
add
push
xchg
rorl
lret
push
sbb
push
sbb
rorl
jb
mov
pop
and
pop
pop
mov
push
rcrl
call
loopne
mov
sub
xor
adc
into
aaa
jge,pn
xor
inc
push
test
test
or
mov
clc
insl
dec
sub
fst
and
cmp
pop
inc
dec
jns
les
aam
jno
dec
scas
xchg
dec
lcall
push
scas
das
and
mov
iret
xchg
nop
imul
xchg
out
cmp
test
xchg
lods
popf
mov
inc
lahf
inc
andb
jo
popa
jno
and
pop
mov
stos
inc
daa
out
sub
mov
dec
xor
xchg
nop
aas
insl
stos
mov
test
mov
and
ja
jns
daa
jp
shlb
icebp
adc
out
insl
fistl
or
and
clc
mov
hlt
dec
pusha
jne
mov
add
je
or
outsl
sub
cmpsb
lcall
lfs
xor
popf
lods
ss
dec
cmpsl
sbb
bound
fistpl
outsl
fstpt
shrb
mov
push
sbb
outsb
push
push
sbb
fs
loopne
sbb
loope
xchg
inc
sub
clc
mov
ret
sbb
mov
popa
enter
imul
imul
mov
mov
ss
adc
inc
je
outsl
xor
mov
push
inc
orb
and
enter
mov
loopnew,pt
and
pop
pop
pop
cwtl
cltd
jno
clc
push
repnz
ja
sbb
daa
les
mov
add
mov
stos
mov
lret
mov
es
push
dec
cmpl
jmp
and
add
pop
sbb
ljmp
jns
push
xor
cmp
mov
ds
inc
mov
xorl
cmp
icebp
push
icebp
adc
jecxz
jge
add
fistpll
in
in
pop
arpl
dec
lock
xchg
out
std
std
add
repnz
mov
mov
inc
push
mov
popf
lret
xor
dec
and
dec
stos
mov
popa
and
or
mov
scas
or
ss
mov
xchg
or
jns
insl
nop
mov
gs
push
movsb
xor
aad
sub
sub
dec
lahf
das
dec
mov
adc
imull
or
lahf
sub
stos
js
js
stos
gs
call
xchg
and
xchg
pop
in
test
cmp
ljmp
cld
loopne
shr
push
lret
in
aad
out
repz
lds
sub
sbbl
xor
imul
jle
imul
call
fsts
xor
and
jb
loope
and
cmp
ret
lea
cltd
add
mov
out
dec
sbb
dec
xlat
mov
lods
lcall
ds
icebp
inc
ds
xchg
xor
adc
xchg
inc
sub
inc
push
rcrb
call
inc
xchg
fcomi
or
pusha
and
sahf
dec
mov
dec
sub
sub
xchg
fbld
push
pop
xchg
aaa
sti
jns
je
push
cmp
dec
mov
push
xchg
mov
stos
daa
xchg
or
xchg
lods
add
cmp
jbe
pusha
out
mov
sub
insw
mov
or
lds
cmp
xor
fldenv
inc
insl
sbb
and
jecxz
jmp
or
cmp
es
in
ret
cmp
cmp
cmpsl
leave
in
push
cmp
mov
pop
pop
rcll
cmpsl
inc
pusha
mov
movsl
push
pop
cs
xchg
inc
jnp
inc
lods
jns
push
xor
jnp
pop
cld
inc
bound
inc
pop
clc
jb
fwait
lds
push
mov
mov
dec
sbbl
mov
ret
mov
movswl
mov
xchg
add
mov
sti
jge
inc
lret
js
cwtl
jmp
rclb
je
adc
cmp
and
sbb
sub
lret
jno
and
jl
in
mov
outsl
jl
sbb
cltd
pop
sti
insl
and
push
dec
lods
stc
dec
aam
bound
add
inc
or
lret
xchg
pop
adc
fs
pop
les
pusha
cmp
pop
pop
out
xor
lods
stos
jnp
nop
add
dec
or
loop
push
mov
icebp
or
fs
test
push
popf
iret
dec
les
test
inc
jge
mov
outsb
cmp
push
adc
dec
icebp
dec
dec
push
push
dec
push
mov
add
es
inc
pushf
mov
scas
aaa
test
pusha
pusha
scas
cmp
or
lahf
es
jnp
mov
in
inc
jl
sahf
and
sti
mov
xor
lock
inc
fwait
popa
xor
mov
sub
fldenv
aaa
insl
push
add
mov
ds
arpl
pop
lret
imul
fimull
mov
cs
jmp
pusha
mov
xchg
hlt
call
xchg
xor
jns
clc
mov
cltd
pop
sysenter
test
loope
mov
rcl
les
or
inc
lret
mov
into
or
sti
out
sub
or
cmc
xchg
sub
enter
cmp
out
xor
adc
out
sbb
xchg
dec
fistpll
or
mov
mov
sbb
sti
xor
jmp
sbb
adc
mov
sar
pop
out
lret
filds
cli
jmp
rcrb
andb
add
sub
ss
inc
mov
xor
xchg
xchg
add
mov
bound
lods
ja
xchg
ljmp
sbb
mov
mov
es
daa
pop
jmp
std
sub
push
or
xor
sbb
add
test
adc
repz
test
outsb
stos
ror
mov
mov
out
mov
loopne
adc
lahf
fdivr
jae
call
pop
fadd
pop
or
and
test
fstpt
mov
cmp
loop
pop
test
pushf
data16
mov
cmp
jmp
fmuls
sbb
cmp
std
cs
dec
das
or
pusha
fwait
push
push
cmp
lcall
mov
jo
incb
sub
jns
aas
icebp
adc
jecxz
lds
ds
sti
mov
lret
dec
push
into
mov
insb
dec
or
cwtl
fwait
lods
popa
sarb
mov
xlat
mov
mov
hlt
and
or
outsl
imul
adc
xor
shrl
inc
add
jge
push
cmp
shrb
adc
les
push
loopne
idivl
inc
dec
adc
sbb
aad
cmp
pop
insl
mov
sub
es
adcb
pop
fildll
repnz
cmp
mov
insl
stos
cltd
mov
mov
fisubl
scas
xor
add
xchg
out
mov
mov
or
push
mov
xor
inc
shrl
enter
inc
out
push
jno
into
adc
mov
push
int
or
les
cmpsb
cmpsb
insl
add
adc
div
cmpsb
push
xchg
into
loopne
xchg
mov
inc
sub
sahf
add
mov
lret
pop
jns
es
sub
or
fcmovnu
test
ret
lods
cmp
pop
sub
shll
and
int3
mov
add
jae
or
arpl
rcl
adc
xchg
add
jecxz
movsb
xchg
lahf
xchg
fwait
jg
push
pop
inc
jno
stos
xor
adc
dec
or
and
add
sbb
inc
aas
push
lret
mov
pop
jne
pusha
repnz
movb
jp
enter
jbe
adc
int
lahf
sahf
rorb
mov
sbb
cmp
mov
fdivl
fcomps
jns
xchg
mov
and
aas
in
fs
jmp
push
fstps
fnsave
xchg
jb
and
push
mov
jb
inc
adcb
inc
cmp
js
xchg
jge
sub
cmp
and
xchg
addb
cmc
mov
mov
jmp
sub
test
sub
mov
lds
mov
or
fdivrl
icebp
sub
push
push
jle
push
mov
movb
xchg
mov
jnp
pop
pop
call
add
lcall
idivb
lock
testb
adc
sub
mov
sarl
sbb
mov
mov
in
mov
pop
addl
cmpl
sub
mov
xor
jecxz
into
mov
adc
ror
sbb
or
std
fdivs
jmp
mov
add
aaa
lahf
jecxz
and
inc
xor
pop
sub
pop
adc
or
jmp
sub
out
adc
cmpsb
pop
xchg
clc
out
pop
outsl
push
cld
and
out
imul
inc
rcll
adc
lods
mov
and
in
mov
cvtpi2ps
and
mov
out
cwtl
and
cmp
rsqrtps
cmpsb
xor
in
xchg
dec
in
fsubr
mov
xchg
and
xchg
lret
aas
push
pop
sahf
into
xchg
adc
xor
jg
xchg
cmc
xor
cmc
movsb
xor
into
leave
dec
mov
shrl
cmpsl
test
fsubrp
mov
and
cli
lds
jmp
daa
jnp
repnz
mov
sub
xchg
mov
aad
int
sub
mov
lods
fcoml
jns
cmp
enter
stos
stos
pop
pop
fistps
mov
xor
inc
cmpsl
out
arpl
inc
or
das
mov
mov
sbbb
xchg
push
mov
sbb
dec
sub
gs
stos
hlt
sarb
cmc
pushf
loopne
jbe
fsubrs
push
inc
cmpb
int3
ret
gs
sub
sbb
and
xlat
orl
test
subb
popf
sahf
jo
loop
daa
fistpll
jo
repnz
hlt
lcall
jno
movb
mov
vmovshdup
mov
ret
outsb
xlat
outsb
mov
fwait
dec
lret
lcall
jle
mov
jns
imul
mov
cli
xchg
fisttpl
xor
jae
jmp
inc
dec
outsb
push
sub
mov
fsubrl
data16
cs
and
add
xchg
jge
push
aad
mov
push
xchg
rcrl
adc
xor
aad
lss
jo
dec
nop
das
push
or
mov
adc
xchg
push
jnp
out
inc
dec
outsl
fldenv
adc
dec
push
std
ficoml
cltd
lds
out
sub
imul
fistpl
sti
rcrl
xor
push
or
movsl
loopne
add
push
xor
mov
aad
cs
push
pop
cmp
stos
jle
or
add
incb
mov
dec
loopne
cli
dec
out
add
in
sbbl
aaa
or
outsl
jmp
mov
jl
dec
sbb
inc
je
lds
bound
push
lahf
pushf
jmp
repz
sbb
jle
push
add
mov
movsl
or
xchg
test
and
or
sbb
icebp
jecxz
inc
in
inc
mov
idivl
std
adc
dec
gs
movb
jae
push
jg
gs
sub
xchg
jne
repz
mov
loopne
mov
xchg
or
push
jnp
mov
popf
imul
push
dec
sub
mov
jg
test
pop
jno
mov
addr16
dec
jmp
mov
xchg
cli
stc
xchg
testl
pop
call
xor
add
mov
clc
push
rcrb
inc
movsb
int3
or
es
cmp
fbld
clc
enter
cld
lods
inc
sti
in
out
loope
dec
jg
leave
in
lds
cmp
addr16
jl
pop
xor
xchg
mov
je
fcomi
mov
mov
lods
mov
cmpsb
shlb
lahf
lahf
pusha
stos
js
loopne
in
mov
dec
cmp
sub
jb
movsb
stos
add
mov
mul
xchg
mov
vmread
push
roll
repnz
pop
lcall
dec
mov
hlt
sahf
insl
aas
pop
ffree
xchg
adc
hlt
xchg
mov
out
sbb
push
leave
adc
lea
out
mov
mov
mov
sbbb
pop
iret
aaa
push
push
scas
fwait
insb
out
sbb
fimull
and
cwtl
sub
mov
lds
or
jo
jp
pop
jle
jge
repnz
shl
sbb
into
test
pop
mov
push
mov
push
test
cmc
aas
in
daa
mov
and
pop
sub
bound
sbb
mov
imul
test
lea
lcall
jae
aam
loope
pop
pop
mov
pop
scas
jge
ret
sub
cmp
push
fwait
imul
mov
sub
or
and
lcall
lahf
push
popa
adc
push
leave
dec
xchg
out
lret
aam
out
shlb
xchg
or
cmc
sarl
cltd
out
inc
aam
add
fildll
xchg
ficoml
inc
lret
call
dec
inc
jmp
mov
jl
stc
imul
mov
push
lret
add
bound
sbb
cmpsb
leave
addb
push
sub
stc
inc
xor
or
pop
and
xor
jge
ret
call
cwtl
in
pop
and
or
xchg
ljmp
push
xor
and
movsb
clc
add
or
mov
jge
sbb
scas
pop
dec
or
or
or
xor
insb
xchg
jmp
cli
out
out
lret
xchg
mov
roll
jmp
cld
mov
pop
daa
out
pop
push
into
push
ds
jecxz
sbb
pop
mov
xchg
jl
stos
lret
cmp
mov
jl
mov
mov
movsl
sbb
or
and
aad
xchg
repnz
inc
push
jnp
dec
xchg
out
xor
push
enter
lahf
test
into
out
imul
cmc
add
cmp
cmp
pushf
addb
lock
and
data16
fwait
xchg
jl
xor
mov
out
mov
sahf
jnp
fwait
push
lods
add
cltd
test
repz
mov
inc
test
dec
cmp
push
xchg
adc
lahf
adc
shlb
outsl
push
cmp
shlb
xchg
incl
lret
xchg
xor
and
cs
xor
xchg
fcompl
outsb
jo
out
push
fstps
call
inc
mov
pop
push
jg,pt
fcmovb
inc
fs
es
aas
fstps
out
pushf
ss
sahf
xor
push
mov
adc
int3
cltd
cmc
add
popa
xchg
cwtl
mov
in
mov
loopne
add
enter
pop
push
dec
insl
inc
xchg
mov
in
adc
nop
xchg
dec
jge
ret
sub
loope
dec
xchg
jne
dec
mov
scas
add
aam
jnp
orb
mov
lods
sub
into
push
xchg
data16
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
xor
call
and
inc
push
nop
mov
lret
mov
pop
ja
mov
add
mov
sub
push
movswl
pop
pushl
jb
call
movb
xchg
add
add
call
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
mov
pop
xor
xor
push
call
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
push
pop
pop
pop
xor
mov
mov
or
sub
add
mov
cmp
jne
and
jmp
mov
cmp
xchg
pop
add
and
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
xchg
xchg
add
test
fstpt
fwait
mov
leave
cld
out
pushf
out
pop
xlat
push
dec
or
push
xchg
xchg
in
push
pusha
sbb
repnz
sbb
call
ret
adc
add
pop
adc
adc
sub
xlat
arpl
push
cltd
adc
sub
notl
lea
jl
add
dec
orl
xchg
or
mov
ret
fs
push
xchg
xchg
lahf
outsb
and
mov
xchg
pop
push
fcomp
imul
repnz
test
and
test
fwait
out
mov
shlb
fsubrs
inc
cmp
lret
sarb
mov
push
push
loopne
shlb
dec
outsl
shlb
mov
pop
dec
inc
mov
mov
shlb
mov
jno
out
adc
fidivl
or
and
dec
stos
stos
xchg
pop
mov
mov
aas
dec
jmp
and
aam
sbb
sbbb
test
dec
or
lahf
imulb
jg
jmp
loope
mov
call
jecxz
xlat
mov
sbb
inc
clc
and
movsl
shrl
dec
push
shlb
mov
pop
mov
mov
ja
arpl
pusha
jno
inc
icebp
pop
aad
add
cmc
pop
inc
inc
and
test
lea
mov
or
pop
adc
xor
dec
jge
les
cs
or
hlt
mov
jae
add
mov
ljmp
add
mov
push
dec
adc
outsl
out
in
cmp
sbb
push
subb
cmp
push
repnz
scas
mov
xor
lret
push
or
dec
push
fbld
in
repnz
add
and
add
popf
icebp
jae
xlat
jns
add
inc
and
push
pop
in
mov
inc
add
lahf
test
push
push
in
jnp
xchg
pop
imul
pop
test
aad
xchg
repnz
pop
nop
mov
test
into
lahf
adc
clc
jmp
test
out
pop
jne
ficomps
sub
js
mov
outsb
lods
add
inc
mov
and
push
xchg
and
and
mov
mov
jmp
xchg
shll
jnp
filds
icebp
xchg
test
movsb
scas
pop
pop
aad
adc
ret
push
lods
flds
or
or
mov
cs
mov
sti
pop
adc
lret
push
cmpsl
push
add
stos
dec
out
ja
sub
push
in
aaa
pop
call
lods
inc
call
and
inc
adc
add
add
mov
mov
rcrl
mov
jecxz
test
sbb
pop
or
in
daa
cmpsb
aad
jg
mov
pop
mov
test
shll
and
add
sbb
inc
ds
inc
es
pop
daa
and
fwait
minps
sbb
daa
xchg
xchg
call
mov
stos
jo
es
daa
cs
roll
mov
add
bnd
testb
pop
rcll
leave
push
movsb
push
movl
xchg
pop
push
insb
or
scas
xchg
or
pop
daa
add
xchg
mov
cs
outsl
or
pop
and
cltd
inc
and
sbbb
mov
pop
daa
cs
push
or
pop
daa
mov
shl
pop
test
mov
enter
daa
add
test
sbb
add
popa
cs
in
or
dec
xchg
and
xchg
out
add
mov
xchg
cmc
shl
rcrl
daa
cs
sahf
add
adc
sbb
inc
enter
and
fadds
aas
fisubl
test
pop
daa
cs
repz
and
or
rorb
inc
into
or
fmull
test
jecxz
addb
aas
inc
dec
push
sbb
jecxz
cwtl
inc
daa
xchg
daa
add
dec
cmpl
or
mov
pop
push
fwait
addr16
cmpsb
xchg
and
mov
lret
and
xchg
xchg
xchg
xchg
push
repz
pop
push
dec
insb
xchg
bound
sub
or
xor
jno
xchg
mull
xchg
pop
leave
or
mov
or
xor
jno
neg
mov
xchg
xchg
pop
leave
or
sbb
pop
mov
test
ja
fwait
adc
sub
or
dec
arpl
repnz
sti
mov
aas
xchg
repnz
cmc
fwait
inc
daa
cs
adc
sub
or
dec
arpl
jmp
mov
cmc
fwait
inc
daa
cs
adc
sub
mov
or
xor
jno
jmp
cmp
cmp
outsb
push
sbb
inc
les
addb
daa
xchg
mov
scas
jb
lret
data16
fwait
adc
sub
outsb
insb
cltd
lds
jmp
cli
test
mov
cmp
cmp
outsb
adc
push
fcomps
push
push
sub
adc
and
add
jg
cltd
outsl
or
rorl
adc
and
mov
les
test
xchg
dec
xchg
add
inc
push
pop
daa
and
inc
sub
xchg
movsb
sbb
or
enter
das
and
xchg
mov
xor
fwait
dec
mov
cs
sbb
addb
jnp
cs
push
test
cs
dec
xchg
fistpl
jb
dec
outsb
test
stc
enter
daa
add
xchg
rcl
punpckhbw
push
xchg
mov
jno
dec
arpl
ljmp
or
and
imulb
int
pop
and
pop
mov
dec
cmp
jl
add
loope
test
sbb
push
adc
sbb
sbb
outsb
cwtl
and
es
loope
fisttpl
adc
push
fwait
and
sbb
notb
mov
xchg
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
push
xchg
addr16
daa
cs
pop
daa
xchg
xchg
xchg
xchg
xchg
lcall
xchg
xchg
xchg
mov
loop
test
sbbb
popa
cmp
jecxz
jmp
xchg
add
ffree
das
sbb
js
push
pop
push
push
push
mov
push
cmpsb
cmp
sbb
inc
mov
jge
mov
into
cwtl
pop
xor
mov
mov
or
lds
nop
fs
aaa
xor
dec
dec
out
jae,pt
pop
lods
into
jae
cltd
dec
rclb
xchg
loop
jle
xchg
out
repnz
mov
fisttps
push
outsl
bound
push
repz
jae
gs
dec
sahf
or
in
pop
outsl
fs
jle
mov
cmp
inc
jnp
adc
fildl
xchg
xchg
jmp
and
sub
lock
inc
jecxz
mov
pop
mov
int
shr
and
mov
jg
adc
adc
push
or
jl
sbb
cmp
jmp
rcll
idivb
pushl
fiadds
insb
loope
lds
aad
lcall
lahf
mov
push
xchg
aam
xchg
cmp
mov
shl
mov
fwait
in
lcall
jg
cli
jg
imul
aad
in
roll
adc
ret
enter
test
dec
xor
and
out
lcall
loope
inc
or
lock
lcall
cwtl
sbb
add
aam
aas
dec
psraw
and
push
xchg
icebp
test
jge
lcall
dec
mov
insl
push
or
in
in
out
push
sbb
sti
push
cmp
cld
jno
shr
mov
loopne
cmp
lahf
sahf
test
in
adc
cmovg
inc
lds
out
dec
int3
inc
ja
dec
mov
jge
xor
mov
and
push
cmp
test
push
stos
clc
adc
mov
xor
shll
xchg
inc
in
test
mov
movsl
xlat
push
test
adc
clc
mov
pop
into
sti
mov
arpl
sbb
jae
xchg
test
or
orb
fildll
pop
inc
sub
inc
mov
cmp
mov
cmpsb
pop
insb
jg
inc
imul
dec
into
mov
sub
out
dec
add
cwtl
or
ror
arpl
and
and
movsl
aam
in
mov
inc
jbe
cwtl
inc
daa
xchg
cmp
aad
imul
loopne,pt
fmulp
sub
into
add
xchg
adc
inc
std
mov
imul
sti
ljmp
xor
push
adcl
imul
push
jne
xchg
pop
js
sbb
cli
cmp
cmp
pop
fisttps
out
scas
fwait
aaa
gs
jmp
add
add
add
or
add
adc
mov
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
mov
add
fistpll
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
mov
add
add
add
outsb
leave
addr16
cs
pusha
fwait
and
cmc
repz
push
stos
jae
mov
push
sub
leave
mov
scas
sub
pop
inc
sbb
popa
bnd
mov
mov
movb
jnp
stos
cmovno
je
mov
rolb
mov
mov
negl
dec
and
mov
pop
lret
cmp
and
leave
or
xor
hlt
jne
lret
popa
cmp
sub
fucom
adc
inc
or
lret
das
mov
dec
movsb
ss
xchg
movsb
inc
stos
xchg
aam
int3
cmc
stc
out
stos
fistps
test
add
pop
loope
rcll
dec
ret
pop
test
aam
dec
pop
and
dec
inc
adc
cmp
movsl
xor
push
inc
ret
mov
mov
mov
xchg
jmp
or
cmp
jbe
lea
xor
mov
xchg
push
out
xor
cli
in
mov
mov
mov
fcoml
cmc
cmp
leave
sbb
fs
and
xchg
aaa
sbb
xchg
dec
push
inc
outsb
push
push
pop
jae
dec
shlb
data16
pop
push
mov
leave
rol
lds
jle
push
loope
leave
leave
clc
adc
add
xor
or
pop
incl
cmp
addr16
mov
mov
test
pop
add
mov
jl
mov
mov
push
leave
into
dec
mov
lret
pop
decl
lods
aam
and
xor
popa
stos
sahf
push
sub
cmp
mov
ljmp
inc
sbb
xchg
out
jmp
in
jmp
ljmp
aam
or
lock
aad
or
imul
adc
test
fisttps
jae
inc
add
or
mov
into
sti
fldcw
pop
xor
sbb
mov
sarl
push
sub
mov
pop
repnz
fldl
out
mov
mov
pop
cmp
and
movsl
ret
lret
jge
test
and
cmp
int3
sahf
lret
push
sbb
ds
push
std
sbb
sub
push
sbb
in
iret
rcl
loope
movb
jae
dec
sbb
pop
data16
pop
ja
adc
pop
dec
mov
add
adc
jno
push
icebp
fisubl
cmp
or
shlb
jmp
push
hlt
cs
cld
add
movsb
xor
fwait
mov
cmc
repz
mov
cmc
mov
xchg
jmp
mov
bound
negl
lahf
cmp
fisubrl
inc
or
es
inc
dec
and
mov
ror
sbb
data16
pavgb
cmp
cmp
mov
pushf
fcompl
movsl
in
inc
dec
loopne
dec
xchg
test
int3
cmp
rcl
cmp
arpl
mov
mov
std
jl
stos
xchg
pop
xorb
fcmovnu
loopne
in
vmwrite
fisttpl
daa
adc
testb
cli
adc
mov
and
cmp
scas
jp
dec
add
pop
add
clc
push
popf
ret
sub
cld
dec
dec
test
ljmp
imul
jb
hlt
xchg
cli
dec
adc
in
jge
ret
mov
popa
push
jmp
fucom
lock
js
test
xor
rorl
push
cld
pop
pop
xchg
out
stos
pop
lahf
push
and
loopne
add
lock
mov
popf
xchg
std
adc
repz
mov
in
mov
mov
push
jge
aas
nop
inc
mov
add
push
hlt
adc
adc
int3
dec
iret
sub
fidivrs
arpl
and
lods
jge
out
pop
push
repz
add
test
dec
out
cmp
loop
mov
loope
xchg
pop
cmp
xchg
enter
dec
ljmp
or
mov
sbb
es
mov
sahf
clc
mov
leave
shlb
sub
pop
movsl
fucomip
xchg
mov
jo
out
xlat
mov
out
xchg
push
fiadds
test
das
jns
xor
hlt
mov
pop
pshufw
push
push
xor
xchg
icebp
mov
xor
mov
push
or
insl
mov
or
cmp
add
insb
gs
inc
push
movsb
shlb
lret
jle
mov
push
into
sbb
push
sub
mov
in
mov
mov
cli
lods
sbb
inc
leave
aad
pop
mov
push
stos
ljmp
test
fstl
cmpsb
clc
xor
insl
fsub
adc
mov
push
cmp
push
pop
pop
in
daa
dec
and
lock
loopne
mov
sub
add
fimuls
adc
and
jno
mov
push
xchg
mov
add
shlb
push
xchg
cmc
sahf
lret
aam
repz
mov
sbb
or
jecxz
dec
lods
in
mov
lods
push
inc
mov
cmp
dec
popf
sti
movsb
es
pop
cli
add
rorl
push
push
pop
out
xchg
jmp
fcoms
push
inc
dec
aaa
xchg
pop
in
jb
or
adc
test
popa
rcl
sahf
lods
je
arpl
sub
xlat
mov
add
sub
cmp
add
addb
test
loopne
mov
and
mov
into
lahf
add
js
daa
adc
pusha
sti
jecxz
repz
xor
jmp
in
dec
icebp
fwait
mov
outsb
rolb
mov
imul
dec
pop
push
ljmp
xor
or
xor
cmp
test
nop
sbb
push
inc
in
and
btc
mov
jp
movsl
sbb
sahf
dec
sbb
in
add
clc
scas
es
ret
inc
inc
call
adc
lock
mov
movsb
js
mov
cmp
push
jl
lahf
int
cli
aam
stos
daa
test
sbb
cltd
jecxz
popa
inc
push
push
popa
outsb
or
lsl
stc
pop
int
aam
pop
jnp
mov
popa
push
daa
push
sbb
sub
js
push
aaa
pop
pop
xor
lds
fstpt
ja
out
cs
xor
cmpsl
mov
cmc
out
mov
add
loopne
push
shll
pop
add
lock
faddp
repnz
pop
out
sbb
push
jg
mov
ja
or
jge
outsb
mov
jo
xchg
adc
xchg
je
push
cld
inc
xor
sub
xor
cmc
or
sub
fucomi
cmp
addr16
adc
push
repz
sub
in
movsl
mov
fimull
es
mov
out
sub
decb
xor
aad
adc
push
mov
into
jno
dec
sbb
xchg
mov
aas
dec
lock
aad
cs
jb
xchg
loope
mov
call
jge
sbb
push
hlt
cld
sub
cmpsl
shlb
leave
les
push
mov
movsb
aam
mov
nop
push
rolb
in
xchg
dec
dec
loope
ds
jne
fs
lahf
push
or
dec
sbb
sbb
sarb
leave
nop
shl
sbb
dec
inc
jns
and
pushf
adcl
fdiv
scas
add
inc
push
fldt
jecxz
xchg
mov
orl
call
imul
aaa
inc
mov
and
jge
or
and
sbb
cmp
sbb
fs
adc
repz
cmp
mov
orl
mov
pop
jns
mov
cli
cmp
inc
sub
stos
rcl
cmp
sahf
fidivrs
mov
lods
pop
adc
testl
es
add
xchg
add
xor
out
adc
mov
jge
fstl
push
scas
sub
mov
cmp
fisubrs
loop
mov
lock
adc
movsl
push
ret
jns
lcall
cwtl
inc
jp
xchg
popf
xor
mov
sbbl
sub
push
std
out
mov
add
arpl
repnz
ja
adc
adc
adc
mov
shlb
pop
mov
add
int
inc
fisubrl
aas
inc
clc
push
movsl
or
mov
or
push
mov
dec
or
cltd
sbb
mov
daa
xor
in
outsl
jns
mov
mov
dec
xor
jp
mov
add
nop
cwtl
push
inc
inc
cmpsl
lock
jo
sub
lea
aam
inc
lahf
test
sahf
xchg
push
sub
push
popf
xlat
xor
in
ret
dec
mov
movl
push
or
push
add
sbb
in
in
js
test
sub
aam
outsl
add
fscale
mov
hlt
gs
int
xchg
fsts
sbb
test
in
or
or
ss
push
push
xor
inc
lods
pop
mov
inc
sbb
cli
mov
cmpsb
sbb
sub
cs
mov
popf
subb
pop
call
hlt
test
imul
popf
sti
xlat
or
fldcw
std
mov
int3
xchg
aaa
movsl
adcb
dec
sbb
cmp
push
in
xchg
xlat
js
test
cmp
dec
push
scas
cmp
xor
ds
pop
xchg
out
jge
mov
shl
popf
xchg
lea
jecxz
cmp
call
sbb
xor
adc
cmc
hlt
popa
inc
aas
ss
inc
mov
or
out
pop
popa
out
out
jnp
leave
mov
dec
adc
or
idivb
dec
add
int
mov
jle
ret
mov
jnp
ss
stos
iret
aam
dec
pop
adc
nop
loope
shl
dec
mov
add
lods
mov
fcmovu
mov
pop
cmpsb
mov
xor
es
mov
jl
mov
int3
sbbb
cli
jns
or
jmp
fwait
out
mov
sub
mov
fsubl
cwtl
arpl
jns
jne
jo
inc
jmp
mov
gs
xchg
cmp
cmpsl
mov
les
insb
repz
imul
fsubrl
sarb
or
mov
add
mov
pushf
ds
aaa
andb
adc
adc
data16
pop
cmc
adcb
xchg
loop
std
loop
add
jmp
jne
movsl
jnp
leave
dec
push
mov
mov
xchg
xor
push
jg
pop
enter
pop
xchg
repz
dec
sahf
push
push
and
test
pop
jnp
sbb
inc
mov
push
push
jl
hlt
popf
lcall
sub
loopne
add
les
aaa
pop
fnstsw
xchg
insl
lds
scas
xchg
pop
adc
test
or
fldt
adc
mov
mov
inc
rolb
cli
out
adc
rcll
inc
loopne
sub
or
or
aam
dec
cmp
and
pop
jo
push
lahf
push
jae
xchg
inc
xor
sub
xchg
cmp
sti
push
push
and
push
ss
inc
adc
mov
imul
jl
mov
and
testb
mov
mov
repz
pop
xchg
pop
iret
hlt
add
mov
dec
jl
pop
jmp
pop
xlat
loopne
jns
scas
pop
pop
out
jecxz
pop
xor
es
and
aam
ljmp
in
rorl
sub
adc
loope
add
mov
jecxz
push
addr16
pop
dec
imul
xchg
sbb
mov
pop
mov
jo
icebp
fistps
cmp
shrl
jmp
aaa
xchg
loope
insb
push
mov
ficoms
jmp
push
cmp
or
mov
xchg
cs
inc
lahf
sbb
pop
push
call
mov
cmpsb
outsb
ficoms
daa
cmp
fadd
pop
cwtl
add
or
in
lahf
fbstp
mov
push
stos
nop
push
ljmp
lock
xchg
loope
push
inc
aam
and
jp
int3
dec
cltd
sub
jns
mov
sbb
or
jbe
sub
xor
clc
aaa
xor
cmpsb
ret
jo
xor
adc
inc
sbb
movsb
inc
rcll
pop
fcomps
insb
inc
push
clc
xchg
cmp
push
aas
incl
in
fistl
xchg
lods
icebp
add
out
jae
es
jno
cli
sbb
and
inc
sarl
pop
mov
iret
xor
mov
inc
add
shrl
rclb
mov
adc
xchg
dec
or
ljmp
frstor
xchg
popf
jne
aad
jge
ss
push
shll
stos
xchg
xor
add
sub
mov
jecxz
jno
sbb
dec
lret
sbbb
rclb
popa
jo
mov
movb
lods
mov
aad
push
cwtl
mov
sbb
clc
repz
fmull
pop
frstor
push
vxorpd
addr16
jnp
popa
sub
js
insl
jno
jge
cli
sbb
rorl
out
addr16
imul
iret
mov
add
or
jp
adc
mov
sub
std
pop
jne
mov
mov
mov
lret
dec
xlat
sbbb
and
mov
mov
out
fstl
jne
fcomps
stc
cs
mov
xor
adc
ret
mov
pop
adc
in
pop
push
test
mov
frstor
or
pop
xchg
cli
hlt
pop
cs
negb
xchg
sbb
aaa
gs
jge
into
lcall
adc
sbb
mov
xchg
inc
and
pop
jb
icebp
pop
adc
stc
scas
add
lods
jge
std
ja
sbb
mov
mov
pushf
add
mov
ss
shll
lea
cmp
push
sbbl
or
mov
bnd
shlb
cmpl
jno
inc
push
xor
dec
fnstcw
jmp
sub
enter
lds
adcl
mov
aas
pop
jo
sbb
in
loope
in
loopne
and
in
pop
and
negl
sahf
dec
jb
outsb
cmp
in
jmp
daa
ja
pop
loop
leave
out
out
jg
les
inc
mov
cmp
int3
repnz
test
jbe
xchg
cmp
out
sahf
cmp
jl
push
in
or
not
pop
out
jo
leave
xor
fstpt
outsl
fmulp
imul
adc
gs
pop
aas
push
cmpsl
push
pop
mov
fwait
push
dec
into
jecxz
nop
xor
ljmp
lcall
fcoms
xor
add
adc
orl
pushf
neg
sbb
lods
sahf
pusha
push
mov
xor
mov
dec
pop
xor
jno
ucomiss
sub
out
outsl
or
mov
xor
out
cli
arpl
enter
out
jno
mov
push
inc
out
inc
sbb
outsb
xor
js
lock
xlat
xchg
and
cmp
lods
or
pop
ret
mov
rcll
imul
mov
inc
fptan
jnp
mov
lock
xchg
lcall
sti
movsb
jg
add
xchg
push
adc
jb
lods
xchg
inc
pop
clc
or
adc
xor
jle
dec
stos
dec
pop
dec
push
sbb
mull
xlat
mov
mov
lret
sub
mov
jmp
out
push
mov
pop
xor
inc
pop
fists
adc
test
decl
pop
inc
xchg
ret
sbb
ficompl
xlat
pop
mov
or
adc
in
out
jae
mov
adc
shlb
mov
inc
and
repnz
rorw
jb
push
data16
inc
stos
xchg
adc
arpl
push
mov
dec
jecxz
and
lods
pop
outsl
insb
jp
add
mov
xor
int
xchg
xor
ret
mov
int
and
in
call
dec
cmc
dec
loop
js
fcomps
pop
mov
cli
inc
sahf
clc
mov
int
out
stos
aaa
ljmp
aas
repnz
test
pop
lahf
arpl
sti
out
pop
xor
adc
ds
jmp
out
jne
adc
insb
aas
aad
pop
xchg
sarl
lods
imul
sbb
jae
dec
dec
mov
pop
mov
mull
add
push
adc
les
icebp
adc
mov
mov
fnstsw
test
add
dec
mov
push
sbb
cld
cmp
cld
ja
push
add
pop
jns
ret
jecxz
mov
fcomps
mov
push
lds
mov
cwtl
jb
popa
or
fcmovnb
rclb
adc
cmpsb
xor
das
pop
xor
out
jb
jo
arpl
add
mov
sbbl
lret
hlt
popl
jecxz
bound
andl
dec
xchg
scas
enter
sub
mov
mov
pop
inc
cmp
js
and
repnz
sti
cmp
or
mov
pop
pop
out
sbbb
dec
jge
add
movups
jl
sub
xchg
out
dec
add
pop
sub
addr16
fidivrl
loopne
lcall
les
fldenv
dec
sti
pop
add
loope
xchg
lds
inc
fwait
push
mov
fisubrl
popl
xorl
stc
mov
and
jbe
sbb
movsb
xor
jle
mov
daa
pop
into
sub
and
cmp
push
add
sub
ss
pop
or
lock
loop
mov
ljmp
test
pop
and
inc
jne
pop
paddq
stc
inc
in
xor
jmp
pop
cs
popa
jle
sub
xlat
sahf
leave
pop
sbb
sbb
scas
andb
mov
pop
test
mov
add
or
fs
stos
ds
mov
xor
shlb
xchg
and
mov
mov
mov
in
cmp
pop
aas
or
pop
cli
or
sarl
das
pop
pop
xchg
out
test
sarb
mov
xchg
imul
mov
jbe
lock
jge
aad
mov
push
and
aas
push
loopne
jnp
jp
lods
incl
in
push
rcr
pusha
sbb
push
and
mov
in
mov
in
aaa
lds
xchg
pop
xor
jmp
jecxz
daa
push
xor
out
dec
cld
sbb
outsb
lret
loopne
dec
rolb
dec
mov
pop
xchg
mov
or
addr16
sahf
mov
or
rorb
jmp
loopne
xor
movl
lds
sbb
mov
int
add
mov
aaa
nop
sbb
les
aaa
cmp
outsb
pop
imul
dec
and
xchg
cmp
push
adc
es
sbb
fstl
cmpsb
inc
xor
aad
dec
iret
ds
outsl
jg
jbe
xchg
insl
push
dec
or
out
loopne
pop
dec
jge
lcall
in
jne
xchg
andb
stc
push
mov
das
adc
xchg
add
adc
add
xchg
cwtl
inc
mull
sbb
rcr
push
shlb
popa
mov
js
in
sub
iret
dec
cwtl
aam
mov
xchg
call
gs
adc
push
ljmp
lret
xchg
xchg
sub
sarl
inc
jae
stc
pushf
test
fwait
addb
imul
fdivrl
jnp
mov
and
mov
mov
or
fdivr
out
je
jg
inc
scas
and
and
test
adc
add
hlt
negb
int
push
hlt
jle
shrb
jb
test
dec
lahf
sbb
in
aaa
bnd
jo
test
cmc
jecxz
push
ds
jecxz
in
xchg
aas
sarb
cmp
cli
xchg
das
test
adc
or
repnz
inc
popf
sub
das
lcall
mov
inc
sbb
dec
outsb
test
mov
scas
cli
cmp
xchg
js
fwait
and
int3
imul
sub
jb
lea
dec
sbb
add
mov
cltd
xor
push
jae
call
rorl
iret
add
imul
jp
dec
sbb
push
dec
mov
out
xor
pop
mov
sbb
cmpsb
inc
jge
pmullw
loop
insl
iret
push
int
lods
mov
mov
and
or
xor
outsl
lcall
cmp
or
fnstenv
test
fisubl
jno
hlt
push
leave
mov
xlat
test
in
cmp
loop
in
jne
stc
in
sti
xchg
rorb
dec
rolb
lcall
inc
gs
mov
and
dec
push
out
cmp
es
ret
sub
add
sbb
pop
imul
xchg
jo
jne
je
lret
scas
adcl
cmp
and
or
stc
lcall
push
popf
add
cltd
xor
jae
icebp
mov
add
loopne
in
push
add
scas
test
in
sbb
mov
add
loopne
adc
xor
mov
mov
and
ror
rcl
inc
mov
mov
popf
push
xchg
popa
cld
or
popa
xchg
scas
out
fdivrl
notl
je
inc
mov
push
cli
lcall
sti
lret
inc
out
and
test
jecxz
cmp
mov
inc
test
leave
mov
adc
test
lds
aas
rcrl
adc
dec
xchg
loopne
gs
arpl
sbb
and
out
in
xchg
jbe
fildll
faddl
jecxz
stos
fbld
aas
cmp
cmp
std
fists
xchg
iret
int
jecxz
inc
push
pop
mov
jns
or
jl
mov
or
add
jnp
mov
inc
rcrb
testl
mov
xor
fucomip
xor
push
addb
mov
mov
inc
xchg
cmp
in
hlt
sub
and
fsubp
inc
inc
out
test
add
mov
movsb
mov
nop
mov
push
sub
cmp
loope
inc
outsb
pop
and
and
xchg
fdivrs
movsl
mov
pop
push
pop
fidivs
or
jle
pop
stc
notb
loope
mov
push
jne
aas
sub
cli
nop
xchg
fptan
mov
mov
dec
cmp
xchg
sbb
incb
data16
lret
cs
lock
movsb
cmc
fsts
fldl
sub
arpl
sbbl
jmp
cwtl
retw
or
lret
int3
cld
loopne
mov
push
sti
sub
or
ljmp
dec
andl
mov
js
test
dec
adc
dec
in
or
std
mov
loopne
sbb
cmpsb
dec
icebp
imul
cmpsl
inc
or
xchg
mov
pop
std
test
jae
cmp
in
shll
sbb
cli
hlt
jns
jl
jo
stos
hlt
gs
outsb
orl
fstl
mov
scas
test
lret
lea
and
fbstp
insb
out
and
sub
out
xchg
ret
jnp
or
popf
outsb
jp
dec
mov
adc
aam
push
mov
adc
mov
stos
sti
sub
xor
lcall
insb
inc
xor
add
push
xchg
std
xor
inc
inc
lea
and
lret
dec
daa
aad
test
adc
cmp
fisttpll
jno
xchg
xor
cmc
xor
mov
scas
int3
adc
dec
cmp
in
arpl
aam
mov
push
sarl
dec
sbb
or
jg
insl
mov
push
clc
sarl
mov
sti
mov
inc
aam
cmp
xlat
test
jbe
sub
cmp
shlb
adc
sti
push
rcrl
push
ds
mov
imul
int
test
jns
push
cmp
mov
or
jle
test
jl
shlb
sub
mov
fadds
or
dec
mov
insb
cmc
dec
out
or
sub
ljmp
das
and
mov
leave
ret
pop
push
aas
lahf
insl
add
js
pop
mov
pop
xor
in
adc
jmp
filds
dec
jmp
fisttpll
jmp
in
in
sahf
test
inc
out
sbb
mov
fsubrl
inc
xchg
sub
mov
jnp
ret
jne
gs
cmc
pop
cmp
scas
cmp
jae
inc
cmp
mov
fdiv
lret
shll
lret
add
sbb
lods
bound
lods
out
jmp
pop
rcr
ljmp
adc
pushf
frstor
call
mov
bswap
cmpl
and
stos
movsl
loopne
inc
out
sbb
leave
je
mov
or
mov
dec
jo
xchg
pop
cmp
pop
push
push
jo
insl
or
aaa
out
add
data16
lea
shll
ror
lds
mov
aad
mov
sahf
adc
dec
mov
mov
rclb
sbb
mov
loope
pop
and
adc
xchg
mov
jge
mov
data16
in
icebp
dec
cmpsl
rcrb
nop
loop
inc
mov
mov
sbb
pop
das
xor
cs
sub
and
push
add
mov
jnp
inc
out
mov
stos
mov
test
insl
mov
mov
mov
loop
fnstsw
outsl
push
inc
xor
fldcw
mov
or
aam
xor
push
cmp
sub
loope
xchg
push
adc
icebp
pop
push
or
dec
ds
xor
insb
sub
ss
sti
xor
mov
insl
push
std
movsb
jg
pop
adc
mov
adc
mov
cmpsb
xchg
insb
dec
mov
sti
movsl
sbb
pop
xchg
inc
lcall
push
cmp
stos
aaa
inc
cmp
and
mov
mov
test
cmpsb
out
xor
popa
dec
xor
inc
aaa
sbb
ret
out
cmp
pop
loop
sub
mov
sub
daa
repz
push
stos
das
imul
dec
mov
mov
gs
sbb
scas
es
hlt
into
or
jae
mov
lahf
adc
scas
dec
bound
mov
inc
addl
popa
or
pop
mov
das
push
add
int
aad
push
add
fwait
xor
imul
xor
lret
inc
sbbl
jno
stc
in
imul
sti
mov
xlat
sub
sbb
lret
mov
out
inc
es
inc
and
xchg
jbe
add
or
mov
lock
xchg
push
dec
in
xlat
lahf
sbb
js
push
nop
pop
shr
mov
mov
call
outsl
test
or
or
and
cmpsl
cs
add
mov
test
jmp
mov
jmp
jne
and
decl
imul
fs
ds
cmp
adc
scas
inc
push
add
sbb
or
loope
xchg
int3
scas
mov
adc
lock
jno
in
jns
loopne
jmp
sub
cmc
imul
mov
adc
adc
mov
dec
arpl
dec
out
or
mov
andb
xchg
sub
lcall
cmpsb
lret
repnz
ror
add
adc
xchg
pop
pop
cmp
pop
iret
xchg
lock
xor
test
fcomps
or
adc
sub
bound
movsb
lret
out
imul
mov
int
xchg
scas
push
scas
cmc
pop
adc
leave
pop
or
inc
inc
mov
xor
sti
out
mov
scas
daa
mov
fsubrl
dec
mov
test
aam
lcall
xchg
leave
lods
cli
in
es
frstors
jmp
mov
jb
je
or
repnz
cmpsl
cmpsb
ret
cltd
stos
fcompl
xchg
pop
rcrl
pushf
adc
fdivs
sbb
lcall
test
sub
std
inc
iret
push
sti
mov
cmc
dec
sbb
and
int3
jp
sub
popa
mov
je
sub
imul
in
cmpsb
test
push
mov
subl
jbe
repz
push
jp
jmp
mov
es
inc
ret
jl
fisttpll
mov
adc
inc
psubb
xor
and
add
dec
push
call
pop
jp
mov
outsl
in
call
or
pop
and
jb
dec
mov
or
loope
push
sahf
movsb
ret
mov
mov
lret
push
stos
andl
data16
rorb
movsb
bound
pop
adc
mov
and
dec
sub
cmp
push
ror
jnp
cs
imul
call
in
icebp
sbb
push
push
test
cmp
add
stc
or
arpl
pusha
hlt
inc
mov
sub
loope
mov
xchg
adc
lods
or
popa
jo
jbe
insb
xchg
ja
sub
adc
outsl
ja
mov
mov
dec
add
xchg
loopne
rcrl
mov
clc
es
sub
stos
fadds
cmc
push
push
stos
xor
mov
xchg
clc
faddl
fadds
mov
sbb
push
inc
push
aaa
mov
mov
sub
mov
mov
call
es
js
out
inc
sub
lock
insb
sahf
in
or
adcb
mov
aad
shll
mov
out
int
pop
dec
xor
cmp
dec
les
cwtl
mov
xor
cmpsb
lahf
dec
sub
loop
stos
in
dec
insb
mov
loope
aad
push
shll
xchg
jne
je
test
test
out
jmp
call
jmp
cmp
sub
add
inc
jns
jns
cmp
pop
fcoms
xchg
scas
mov
inc
adc
jns
pop
inc
fldcw
cmp
arpl
je
adc
jle
dec
and
cmpsb
outsl
push
addr16
mov
push
mov
test
loop
push
mov
sub
lret
xor
scas
adc
fs
pop
sarl
xchg
hlt
xor
dec
daa
test
je
cmpsl
fistpl
aad
jg
dec
bound
mov
sbb
test
xor
sub
mov
aam
int
scas
repz
movsb
xchg
nop
pusha
mov
xor
dec
rclb
jecxz
mov
jge
mov
dec
pop
data16
lea
daa
jbe
push
push
repnz
add
jnp
jbe
pop
jl
adc
xor
dec
sarb
dec
pop
stc
stc
out
jge
mov
shlb
test
ret
gs
sub
xor
dec
lret
andb
aas
bound
inc
nop
fbld
pushf
sahf
or
divb
out
jo
rcrl
ljmp
loop
outsb
push
js
ja
sar
mov
jmp
je
push
jl
xlat
pop
or
push
sbb
stos
jge
xor
jns
popf
jnp
popf
mov
pusha
pushf
mov
dec
aam
sbb
hlt
xor
and
stos
mov
sahf
andb
movsb
inc
cli
dec
mov
js
ret
jbe
cmp
test
jb
shrl
add
jae
jl
shll
fcmovnu
test
repnz
dec
cmp
or
xor
mov
sub
pop
icebp
jbe
mov
aaa
cmp
aaa
sub
pop
sahf
insl
mov
cmp
fdivrs
or
fisubrs
adc
and
pop
mov
pop
out
push
mov
cmc
pop
sub
inc
jle
xor
scas
jb
mov
pop
jmp
fisttpl
push
orb
or
ljmp
mov
push
pop
mov
inc
or
xchg
gs
fsubrl
pusha
mov
dec
mov
cmpsb
jp
out
inc
lahf
loopne
in
ud2
aaa
pusha
jmp
cmp
push
dec
inc
movsl
inc
in
and
repnz
push
bound
mov
je
cmpb
and
and
and
ds
adc
xchg
fbld
pusha
xlat
dec
or
xor
sub
int3
xor
and
push
ds
push
movsb
insl
mov
dec
cwtl
std
or
fldt
test
jbe
push
sti
jns
ljmp
xchg
lahf
in
pop
push
into
dec
jecxz
scas
or
xchg
sbb
dec
jbe
sub
cmp
jns
push
pop
lret
and
xor
and
add
loopne
in
fldl
aam
or
inc
aad
lret
mov
decb
test
sbb
cmp
pop
xchg
or
jnp
mov
mov
popf
in
jno
cmp
mov
xchg
xor
push
prefetchnta
call
add
pop
cmp
test
imul
repnz
xchg
lods
or
dec
pop
pop
fdivrl
pop
cmc
stc
in
fcmovne
in
sbb
adc
adc
fnclex
ljmp
popf
adc
push
ret
mov
sub
data16
push
pop
xlat
loope
mov
xchg
out
orl
dec
into
adc
mov
add
xchg
xor
xchg
pop
popf
push
cmp
adc
xchg
fs
stos
jecxz
lods
fcmovnbe
inc
outsl
mov
sbb
idivb
jmp
pop
into
jl
lock
rclb
sbb
sti
and
fwait
mov
pop
push
cmp
enter
inc
shr
adc
leave
iret
mov
test
fs
or
cwtl
mov
xor
pop
mov
xchg
test
add
pop
push
adc
stos
mov
int3
inc
aam
lret
mov
ret
add
cltd
ss
std
out
out
sub
dec
fisttps
les
es
mov
inc
out
negb
dec
sub
mov
cmp
pusha
mov
inc
jnp
sub
cmpsb
mov
mov
lods
stos
sub
ret
mov
jge
roll
jp
notl
jb
fsubrl
push
sbb
data16
cs
inc
out
dec
xlat
repz
and
iret
mov
mov
stos
sarb
inc
pop
mov
add
cltd
xor
stos
mov
in
hlt
addr16
cwtl
std
xchg
xchg
mov
in
mov
cmp
inc
mov
jle
push
or
dec
xchg
xor
mov
jecxz
mov
in
xchg
mov
xorl
icebp
dec
mov
xchg
dec
int
dec
flds
pop
ja
push
mov
pop
jne
out
push
xchg
enter
stos
bound
nop
cmp
fdivp
hlt
in
or
adc
scas
bound
mov
or
pop
sbb
sub
loopne
jmp
pusha
popf
dec
insl
daa
or
pop
adc
movsb
sbb
push
pop
xchg
subl
sub
ljmp
xchg
jmp
mov
mov
inc
mov
aam
lea
sub
nop
add
dec
stos
enter
mov
out
xchg
adc
mov
mov
adc
push
mov
sub
push
lea
das
add
nop
fnstenv
gs
jno
int3
outsl
iret
pop
test
cli
xchg
int3
sub
sub
repnz
xorl
pushf
push
sub
pop
mov
ret
sbb
mov
jmp
jg
pusha
jecxz
jle
stc
sbb
and
mov
cs
jle
or
mov
or
jge
inc
stc
ljmp
cmp
sub
dec
cltd
pop
sub
push
mov
lret
xor
cmpsl
xor
sbb
lods
jg
sbbb
and
jg
jo
mov
inc
fidivs
test
aaa
out
mov
sbb
and
jns
data16
ljmp
mov
jne
cmp
xor
bndstx
adc
sahf
or
push
sub
iret
int3
je
sub
inc
adc
je
push
sbb
pop
jbe
mov
push
mov
cmp
dec
adc
cmp
roll
jmp
inc
in
repnz
in
fwait
xor
movsb
int3
fwait
jns
inc
pop
dec
hlt
bound
mov
into
push
push
pop
jle
lods
mov
add
stos
and
sbb
jo
push
and
sub
icebp
dec
cld
xchg
aad
sub
imul
inc
mov
mov
add
cmpsb
test
testl
imul
and
fwait
sub
pop
adc
mov
inc
sbb
cmc
dec
ret
popf
dec
ret
lods
jnp
arpl
arpl
jo
jl
jae
scas
popa
mov
xchg
lods
sub
movsb
sub
imulb
mov
aad
es
ja
adcb
mov
and
mov
xor
xor
mov
es
sbb
pop
inc
pop
xor
loope
pop
push
test
add
jg
test
pop
es
icebp
jmp
pop
and
add
arpl
and
add
clc
inc
mov
fisubrl
dec
sahf
xor
mov
adc
or
xchg
leave
repz
push
xchg
mov
scas
dec
jmp
dec
andb
jbe
mov
push
pop
aas
int3
leave
shl
or
imul
mov
mov
mov
lcall
xor
aas
and
jae
lods
cmp
stos
clc
jecxz
mov
inc
faddl
sbb
or
mov
pop
and
push
mov
xlat
and
cld
aas
xor
icebp
and
loope
xchg
pop
into
daa
test
mov
push
jns
mov
data16
stos
cmp
sarl
push
push
and
jp
add
dec
cltd
ret
leave
aad
xor
sahf
je
cmp
mov
xchg
mov
ja
push
cmpsb
aas
inc
inc
sub
ds
sub
mov
pop
xchg
in
fwait
inc
mov
push
push
int
das
and
test
das
ljmp
or
movsb
push
fistl
stos
and
pop
cmpsl
sub
mov
sub
or
call
push
rcll
rcrl
jp
das
inc
out
hlt
xchg
sbb
mov
mov
popa
icebp
call
lahf
lods
cwtl
fwait
lret
xlat
adc
add
add
xchg
xor
xor
pop
add
or
daa
mov
xchg
aaa
dec
xor
xor
push
pop
push
iret
or
frstor
cmp
ds
stc
lods
pop
cmp
push
xchg
imul
ror
int3
stos
push
jo
push
mov
loopne
int3
and
and
sbbb
cvtdq2ps
mov
inc
adc
inc
outsl
add
push
mov
leave
sbb
push
pop
xor
int
mov
xchg
push
xor
cmp
xchg
imul
std
mov
cltd
xchg
inc
mov
stos
test
lahf
enter
push
mov
xchg
pop
aad
jl
jbe
or
test
mov
cmpsl
int
fs
lock
bound
lret
jl
fdivrs
stos
lcall
pop
sbb
mov
lds
jp
movsl
push
les
adc
scas
loope
int3
inc
dec
push
cmpsl
jecxz
sub
into
sbb
jg
xchg
add
cmpsb
xor
les
sbb
outsb
orl
xchg
ja
push
push
jl
push
inc
cli
jb
int3
add
mov
inc
rcrl
ror
sbb
adc
push
xchg
push
outsl
mov
sbb
outsl
fidivs
adc
aas
jecxz
test
xchg
mov
sahf
xchg
nop
inc
mov
sahf
cmpsb
insl
stos
rorl
adcb
cmp
repnz
cmp
adc
movsl
stc
nop
enter
mov
dec
mov
pusha
mov
ds
mov
loope
clc
jecxz
cmc
or
bound
mov
ret
xor
pusha
pop
and
fwait
xor
cmp
lock
cwtl
jmp
push
fstpl
mov
xor
mov
inc
insl
test
pop
inc
push
lea
push
jo
xor
jbe
push
mov
xchg
push
addr16
add
je
into
fldcw
loopne
jg
sarb
cmpsb
sbb
push
xchg
cmp
mov
push
cs
adcb
jne
nop
sbb
jg
fwait
jo
mov
push
mov
imul
inc
push
mov
xchg
es
repnz
xor
ss
pop
lcall
fdiv
fs
outsl
lock
push
push
loop
mov
pop
mov
dec
sub
sarb
jecxz
pop
int
push
data16
cmp
push
jle
test
adc
ja
add
stc
imul
mov
jne
jo
fnsave
negb
ret
rorl
push
and
push
xchg
je
adc
xor
repnz
rcr
pop
or
xchg
lods
mov
or
sti
in
stos
mov
test
or
xor
pushf
mov
jno
mov
xlat
sub
sbb
movsb
cmp
dec
jge
and
es
push
scas
loopne
ljmp
fwait
sbb
shl
popf
fdivr
pop
lcall
testl
mov
or
xor
mov
xor
jg
stc
or
xor
mov
xchg
into
imul
mov
aaa
popa
jb
cltd
out
das
sti
lods
paddusb
pop
in
out
sub
adc
sbb
sbb
jge
mov
push
out
sbb
fldt
mov
jno
shlb
scas
in
pop
jno
mov
ret
insl
xor
mov
sbbl
and
ds
fwait
adc
xor
shlb
mov
sbbl
aad
loopne
push
data16
mov
mov
hlt
xlat
dec
lahf
repnz
inc
mov
cmp
pop
nop
cmp
cmp
and
out
jno
shll
push
mov
cmp
into
cmp
mul
int
lds
cmp
pop
int
aaa
jg
cmp
ds
or
cmp
jno
jae
dec
or
push
aaa
mov
repz
aaa
call
rolb
xchg
or
pop
or
push
sub
inc
jg
js
scas
test
aaa
dec
and
js
fldcw
aad
pop
and
es
mov
xchg
cmpsl
push
pop
leave
or
push
fldt
and
orb
insl
sub
test
xchg
mov
fadd
dec
lods
in
cmp
xchg
or
jo
call
dec
cmc
push
xchg
sbb
mov
sub
xor
cmp
shrb
sbb
mov
xor
mov
neg
mov
inc
or
ficoms
cmp
fdivrl
push
jl
sbbl
mov
mov
lods
mov
mov
xchg
push
or
addr16
out
and
lds
test
into
dec
push
loop
cs
cmpsb
nop
aad
jns
xorl
cld
inc
pusha
xchg
aas
add
out
push
xchg
mov
lret
lret
aam
sub
xchg
in
adc
imul
sbb
dec
scas
std
pop
mov
scas
add
idivb
addb
jno
and
sahf
add
rcl
cmp
mov
sahf
popf
rcrl
jnp
mov
int3
aas
loop
xchg
xchg
mov
pop
jl
inc
dec
jmp
leave
cmpsb
sbb
mov
ljmp
xor
adc
mov
mov
inc
pop
stos
subb
in
mov
stos
mov
mov
dec
aam
pop
push
and
dec
bound
test
cmp
jl
push
xor
mov
and
repnz
ret
mov
popf
adc
roll
push
jae
mov
jno
test
add
cmp
sbb
nop
stc
jno
or
jns
ds
inc
ja
repnz
mov
sbb
mov
adcl
push
rcrb
xor
dec
cmc
jge
sbb
and
mov
mov
in
lds
out
adc
dec
adcl
gs
sub
mov
dec
sub
lds
sbb
insl
sub
dec
addr16
int3
int3
sbb
sub
test
sbb
inc
cltd
mov
movsl
pop
lahf
and
fidivs
xchg
stos
gs
out
ret
in
pop
lea
daa
push
test
and
imul
push
outsb
nop
mov
jns
roll
repz
mov
mov
cltd
sahf
add
in
or
bound
pop
sbb
data16
adc
cmpb
pop
cwtl
aaa
mov
cmp
add
jnp
in
lock
inc
lea
pop
xchg
out
mov
rol
or
mov
and
loop
cmp
je
out
jne
sub
push
lret
cli
out
call
lret
int
aam
icebp
sti
movsl
in
pushf
les
inc
dec
arpl
mov
xor
sub
int3
jae
mov
cmp
mov
fs
xlat
add
shll
adc
cli
loop
lcallw
js
gs
pusha
xor
subl
repnz
loopne
int
shlb
movsl
lret
repz
and
jae
inc
das
test
mov
xchg
cmp
dec
inc
cli
pop
xchg
inc
adc
xchg
dec
mov
test
loope
add
jge
jno
loope
mov
mov
cmp
jmp
outsl
pusha
mov
pop
sbb
sbb
dec
sub
inc
sbb
cmp
enter
in
test
dec
xchg
jle
call
mov
cmpsl
and
nop
xchg
rcrl
adc
les
cwtl
sub
pop
sbb
xorb
dec
inc
cmp
mov
xor
xchg
pop
outsl
fwait
int
es
inc
mov
add
or
jo
das
add
pusha
rclb
cmp
push
test
aaa
lock
pop
xor
lcall
pop
push
pop
sbb
adc
cltd
mov
insl
dec
or
cmc
daa
or
mov
push
dec
cmpsl
adc
test
mov
cmpsb
mov
push
aam
adcl
mov
pop
mov
repnz
test
or
into
into
mov
test
insb
xor
stos
push
in
ja
icebp
insb
pop
rolb
loope
sub
dec
icebp
adc
push
sbb
mov
adc
pop
push
loope
int
mov
loopne
aam
mov
pop
cmp
mov
pop
xor
fiadds
cmpsl
and
aaa
cmpl
fisttpl
daa
cwtl
inc
jnp
rcrl
or
sbb
outsl
orl
es
in
mov
leave
cmp
das
lcall
ja
jnp
lret
push
int
mov
into
insl
mov
cmp
ret
jns
fsts
popa
fisttpl
dec
jno
rorl
or
rdpmc
ljmp
lret
adc
jns
insl
cmpsl
xchg
in
daa
cmpsb
cmp
xor
cld
popa
inc
push
test
dec
push
into
fisttpl
les
in
frstor
cld
les
roll
jbe
push
cmp
les
das
lahf
in
mov
dec
adc
shlb
mov
push
xchg
pop
into
iret
push
repz
mov
xchg
stc
dec
push
fcompl
sbb
mov
jp
sub
mov
cmp
push
iret
sbb
inc
dec
test
and
mov
mov
outsb
jo
lods
jbe
lods
jp
xor
pop
sub
addr16
loop
jge
out
in
imul
push
xchg
push
out
ljmp
sub
int3
lods
sahf
dec
inc
mov
hlt
sbb
jl
movsb
popf
sbb
or
push
jle
jmp
xchg
movsl
test
mov
insb
cmpsl
mov
daa
jmp
sti
push
jg
xchg
sub
int
mov
adc
mov
lea
push
jo
cmc
sub
dec
add
int
movsl
movl
fldpi
fcomp
test
xchg
pop
mov
ljmp
push
ret
dec
cmpsb
fldt
rorb
test
call
mov
arpl
jno
out
addr16
out
sub
lcall
out
mov
or
int
sub
cmp
ds
sbb
imul
push
imul
pop
sbb
movsl
jbe
push
inc
jns
fbstp
xor
ret
insl
mov
adc
mov
mulb
cli
insl
pushf
clc
movsl
les
pop
jge
aaa
inc
scas
push
push
jns
das
mov
mov
pop
add
dec
js
jle
lock
mov
mul
jl
imull
daa
ss
idivb
jecxz
out
adc
and
pop
pop
inc
mov
cs
xchg
mov
out
push
or
js
mov
xchg
call
jb
sub
pop
or
ret
add
ja
jae
jg
es
mov
mov
ret
in
cld
or
sbb
mov
loope
leave
out
mov
push
jp
dec
gs
push
mov
es
test
adc
vmovntps
cmp
int
xchg
ss
mov
repz
pop
sub
xor
fstp
out
stos
mov
pop
sbb
add
jge
call
mov
pop
leave
lea
popa
in
pop
sbb
lahf
ds
mov
fsubrl
jb
mov
or
cli
xchg
pop
add
pop
mov
mov
inc
xchg
test
mov
dec
cmp
pop
cmp
sti
aas
push
mov
gs
jl
push
adc
int
out
jp
in
iret
sub
fldl
push
add
sub
add
inc
gs
test
sti
lret
add
inc
mov
fs
add
adc
test
jg
fistl
in
sahf
movsb
or
stos
bound
sbb
in
testl
jmp
dec
shl
int
outsb
xor
sbb
lods
and
add
lds
aam
pop
or
or
xchg
in
cmp
mov
cwtl
nop
lahf
in
ds
cs
or
mov
mov
lea
outsl
and
icebp
or
pop
add
add
sub
pushf
dec
inc
add
or
loope
fbstp
push
jno
das
and
mov
hlt
mov
cmp
imul
scas
jae
xchg
std
pop
lret
cwtl
enter
jl
sar
outsb
nop
dec
stos
mov
push
mov
cmpsl
jnp
xor
ss
cwtl
data16
cli
iret
divl
fidivl
sbb
shrl
adc
jp
mull
mov
or
add
lcall
xlat
test
adc
inc
jl
in
loopne
cmp
clc
hlt
es
insl
out
pop
stos
cltd
shrb
insb
add
sbb
mov
dec
into
pop
mov
jle
ljmp
and
addb
inc
sub
sub
fcompl
push
and
stos
adc
jno
cmpsl
mov
xor
jo
and
ds
xor
shll
sub
arpl
inc
push
outsb
adc
jg
mov
jnp
mov
arpl
mov
dec
mov
xlat
ret
out
test
cld
fstp
pop
into
or
xchg
dec
jo
mov
arpl
mov
push
push
cmpsl
nop
jne
or
mov
mov
fwait
dec
pop
jmp
mov
jmp
fcoml
and
cmp
mov
ljmp
adc
adc
mov
shr
or
jbe
fildl
imul
sub
loop
jge
xchg
jne
arpl
in
pop
cwtl
daa
mov
icebp
fldenv
in
add
dec
inc
sub
stos
cmc
mov
mov
mov
mov
adc
mov
jnp
test
in
xlat
or
xchg
xchg
mov
hlt
movsl
ficoms
or
xchg
mov
fcomps
jne
sbb
leave
int3
inc
stos
cmc
push
or
das
inc
cmp
fstl
rorl
pusha
or
psubb
loopne
std
xor
mov
enter
push
jbe
aas
adc
in
aad
push
pop
add
jl
aaa
push
jg
sbb
popf
movsb
xor
push
aad
cmp
xchg
scas
xchg
xchg
dec
and
loopne
insl
cmp
mov
popa
dec
mov
xchg
adc
push
mov
addr16
loopne
mov
bound
lock
jge
insb
aas
pusha
outsb
push
xchg
lea
call
ds
dec
outsl
lock
dec
dec
and
imul
ljmp
sbb
lock
add
mov
cmp
mov
xor
dec
int
enter
rcl
and
das
or
cli
jo
adc
push
test
jmp
pop
test
mov
mov
arpl
pop
xor
ss
fnstenv
rcrl
sbb
addr16
ljmp
cmp
jae
adc
filds
sbb
xchg
inc
inc
jle
addl
mov
addr16
push
adcb
ljmp
xor
repnz
into
jbe
rorb
lcall
mov
fwait
and
jge
push
jp
shl
and
mov
mov
ljmp
ret
and
sbb
ljmp
ja
rcll
cmpsl
mov
lods
ret
jecxz
jmp
aam
ss
clc
sub
filds
jb
pop
mov
push
cmp
cmp
test
outsb
out
mov
push
mov
xor
outsb
mov
adc
jnp
adc
xchg
loop
stos
push
add
jmp
inc
das
shlb
cmp
pop
fsubrl
mov
xchg
pop
push
incb
outsb
add
pop
adc
enter
hlt
mov
mov
sbb
push
hlt
xor
push
aam
cmp
dec
cmp
push
cmp
repz
jno
popa
dec
insb
in
jno
push
xor
aaa
insb
scas
push
ret
mov
cmp
xchg
test
lods
dec
xchg
sbb
mov
or
lahf
sahf
push
fisttps
scas
test
fnstenv
in
ret
cmp
jns
inc
lds
push
push
or
or
lods
loopne
and
sub
add
ficoml
cmc
cmp
cmp
imul
xchg
cmp
sahf
out
mov
push
pop
ja
xchg
mov
mov
xchg
es
mov
xchg
in
xchg
fwait
daa
lahf
addr16
xchg
mov
imul
sbb
inc
jle
lods
adc
mov
in
and
mov
imul
orb
xor
fisubs
mov
jl
clc
testl
jecxz
repz
push
pusha
rolb
push
outsl
loop
xchg
pop
pop
aam
fcom
lret
xchg
stos
adc
pop
je
or
push
push
pop
out
pop
xlat
pusha
cmpsl
arpl
lret
dec
loope
and
pop
cmp
mov
dec
pop
lret
daa
pushf
xor
pop
add
xchg
popf
sbb
mov
in
push
gs
xchg
dec
jb
repnz
jno
pushl
push
clc
or
ror
or
adc
xchg
push
adc
inc
sub
frstor
addb
fisubrl
pop
mov
iret
cmp
aas
mov
mov
mov
nop
sub
mov
cmp
jg
ficomps
mov
stos
ss
push
inc
push
xlat
mov
jg
push
mov
cmp
shrb
add
sub
fisubs
insb
push
bound
add
pop
sbb
insl
rol
ret
push
jge
mov
mov
pop
xor
jl
ret
adc
lea
mov
ss
fsubs
test
mov
int3
inc
scas
fidivrs
dec
sub
push
pop
in
imulb
mov
sti
mov
mov
ret
shll
lret
lods
js
lods
dec
mov
popf
mov
pop
aam
shrl
popf
pop
sub
out
ds
scas
cmp
into
pop
aam
adc
mov
icebp
dec
xchg
xorl
scas
dec
sbb
pop
jae
test
leave
cmp
mov
jb
sbb
call
ds
push
inc
loopne
aad
pop
or
add
cmovp
testl
jle
jmp
inc
add
xor
xchg
out
add
repnz
sbb
mov
les
aad
adc
pusha
pop
call
cmp
jae
sub
inc
mov
movsb
lock
loopne
aas
push
xor
inc
xchg
or
and
cltd
dec
mov
in
xor
or
inc
sbb
cmpsb
sub
sub
les
mov
movsl
loopne
push
jg
jns
aam
or
out
push
add
insb
jnp
mov
add
lock
sar
mov
int3
gs
or
xor
hlt
add
stos
loopne
jns
and
js
add
push
mov
pop
mov
mov
xchg
cli
cwtl
dec
lcall
xchg
or
je
rclb
or
ja
mov
adc
dec
or
push
xor
ror
mov
jbe
idivb
pop
pop
icebp
sbb
test
stos
dec
mov
xchg
inc
test
mov
push
insl
cmpsl
outsl
jge
add
int
mov
pop
pop
daa
imul
mov
pop
mov
push
fmull
aas
adc
mov
mov
xor
gs
mov
into
inc
mov
add
ljmp
jmp
cmp
dec
xor
jb
mov
xchg
cmp
push
aas
lea
pop
adc
jbe
dec
pop
xchg
int3
xchg
sbb
push
add
xchg
adc
add
jns
lahf
mov
mov
mov
pmaxsw
sub
mov
repnz
ja
ret
mov
inc
mov
sarb
cmova
sub
sbbl
add
packuswb
pop
and
push
sti
icebp
add
jno
xor
jne
jae
ss
jne
lret
sub
push
pop
addl
push
sbb
dec
lods
mov
sub
jne
loopne
mov
mov
xor
adc
mov
andb
lret
adc
daa
ret
cwtl
add
aam
pop
repnz
pop
xlat
inc
test
insb
jae
jge
push
leave
aam
hlt
dec
and
or
jbe
in
push
int
push
jmp
push
sbb
mov
jbe
cli
xchg
in
lods
pop
shlb
loope
sbb
hlt
sbb
je
idivl
inc
jecxz
mov
pop
mov
or
lret
dec
mov
lea
in
push
lds
movsl
sub
ds
je
add
add
ret
sub
inc
inc
lds
repnz
push
jp
js
lds
repz
push
je
xor
xor
mov
addr16
jns
insb
ja
xor
fdivl
xchg
sub
pop
pushf
inc
cwtl
shr
andl
insb
mov
adc
loope
scas
cmp
pop
xlat
xchg
mov
lods
fwait
rol
push
outsb
cmp
icebp
sub
popf
mov
pop
xor
arpl
and
jno,pn
ss
mov
shll
mov
outsl
data16
mov
pop
pop
xor
sub
sarl
sub
movsl
imul
cmp
cltd
fstpl
xchg
lods
mov
jo
add
mov
add
jo
lahf
pop
cmp
out
push
or
mov
lret
push
lcall
jnp
in
jae
push
sbb
adc
in
inc
pusha
lret
cmp
out
ds
push
cld
pop
cmp
popa
mov
mov
popf
jle
lea
lea
sbb
mov
out
lock
ret
je
cmpsb
insl
lret
xchg
dec
mov
fwait
popf
imul
and
pop
sbb
cmpsb
add
jnp
cmp
add
ss
mov
inc
xor
xchg
dec
lret
dec
jbe
scas
xchg
xchg
mov
repz
mov
scas
test
out
cmp
cmp
aaa
cmc
and
dec
fs
jge
test
inc
es
fcmovu
pop
inc
jg
pop
jmp
int
push
lret
hlt
data16
mov
sbb
sbb
jmp
sbb
shll
dec
jb
adc
fistps
repnz
jecxz
movsb
ret
out
jns
jle
sub
jmp
gs
fistl
mov
push
xor
mov
into
mov
rolb
aad
jae
push
in
fs
or
pop
sbb
pop
sub
or
cld
dec
pusha
mov
xor
mov
or
rcrb
push
daa
fsubs
pop
inc
sub
pop
fbld
jnp
divl
popf
and
xchg
adc
shrl
repnz
movsl
jbe
pop
mov
loopne
add
mov
and
jg
scas
les
outsl
mov
adc
cmp
pusha
push
movsl
and
scas
mov
mov
push
add
aas
xor
dec
cli
pop
xchg
subb
ficompl
loope
movsb
clc
sahf
in
xchg
add
xchg
jno
out
addr16
jbe
push
sbb
aam
outsl
addr16
shl
mov
xchg
push
mov
lods
ret
aas
dec
cmp
call
arpl
lock
cli
mov
rclb
jne
cld
in
mov
pop
pop
lods
callw
jno
or
jb
outsb
lds
stos
add
mov
or
arpl
cwtl
push
pop
or
scas
sub
scas
mov
mov
das
mov
repz
mov
sarb
xchg
cmpsb
or
xlat
mov
pushf
dec
inc
arpl
inc
mov
std
std
aad
adc
ret
mov
outsb
jne
sbb
mov
mov
hlt
cmp
int
jp
pop
test
mov
and
adc
dec
mov
ss
aam
mov
aad
repnz
rcrb
mov
pop
pop
sub
cltd
call
inc
and
pop
arpl
mov
mov
imul
xchg
int
dec
mov
bound
jecxz
mov
dec
jge
shlb
je
xor
xor
movsb
lret
push
lcall
into
out
lods
inc
jecxz
pop
cmc
pop
fdivp
xor
sbb
sti
call
into
mov
test
subl
mull
stos
fldt
daa
jecxz
xlat
add
lret
ljmp
arpl
shll
xchg
sti
cli
out
xchg
push
addr16
jge
out
out
js
sbb
mov
cmp
stos
dec
and
movsl
xor
mov
pop
not
mov
mov
movsl
mov
mov
mov
mov
sub
push
fsubs
cmp
sub
cmpl
xchg
xor
sbb
fwait
or
movsb
ret
cmp
addr16
mov
push
pusha
pop
inc
repnz
aad
in
mov
jp
push
lcall
xchg
cmp
or
mov
movsb
xlat
and
jae
pop
inc
and
mov
int3
mov
scas
xlat
mov
sub
lock
pop
xchg
add
cmp
mov
lret
mov
sbb
add
mov
in
lea
xchg
stos
outsl
lods
mov
icebp
hlt
test
add
stos
push
mov
mov
jns
xor
in
mov
mov
arpl
xor
mov
fsubp
sub
daa
cmp
js
int3
jl
repz
pop
shrd
addr16
add
cmpsb
int
stc
cmp
aam
sti
js
lcall
sbb
or
add
xchg
cmp
shrb
cmpb
lcall
testb
es
pushf
jb
enter
addb
push
imul
push
xchg
fldcw
test
mov
fnstenv
push
test
sub
jo
imul
int3
or
in
add
add
mov
out
jne
idivb
jmp
dec
adc
jge
negb
mov
jle
aas
lea
adc
das
loop
add
jp
lret
mov
imul
pop
push
fisttpl
jl
xchg
mov
test
mov
int
fwait
call
add
inc
imul
dec
dec
mov
xchg
mov
pop
inc
xchg
and
and
out
fldenv
pop
and
xchg
fs
pop
inc
sub
out
mov
clc
lcall
in
sbb
ret
xorb
inc
insb
insb
stc
jae
push
loope
sbb
cmpsl
xor
loope
jmp
jmp
inc
sbb
daa
or
lret
push
shrl
dec
add
aaa
xor
sbb
repnz
ljmp
aad
dec
pop
iret
insb
xor
add
jg
and
pop
orl
int
iret
push
sbb
ficompl
and
mulb
out
xchg
pop
or
push
lds
inc
jne
inc
adc
enter
jns
pop
in
fstl
in
sbb
scas
fwait
or
mov
outsl
imul
clc
inc
adc
nop
cwtl
push
push
testb
mov
adc
sub
inc
pop
mov
mov
pop
inc
mov
jmp
in
inc
inc
fstps
leave
in
data16
xchg
and
jle
fildl
fsubl
les
xchg
insl
xchg
pop
aam
rcrl
mov
adc
mov
jg
aam
es
dec
aaa
insl
cmpsl
pop
addr16
push
outsb
cmp
clc
ljmp
dec
cmp
stc
adc
data16
outsl
cld
sbb
iret
jnp
add
inc
out
fmuls
lea
and
fnsave
xchg
shll
out
shrl
xchg
sbbl
ret
mov
jns
cwtl
add
iret
scas
mov
insb
jne
fadd
in
dec
sub
popf
std
cltd
jp
add
out
lret
mov
mov
insb
dec
sbb
mov
dec
sub
into
test
pushf
mov
push
aad
inc
jo
scas
stos
jnp
cmp
out
mov
dec
insb
in
add
dec
je
xor
xchg
mov
push
adc
pushf
clc
cmp
pop
mov
inc
sub
inc
addr16
lea
sbb
mov
shl
lahf
std
push
cmp
jp
sub
iret
call
sar
cmp
int
pop
pop
test
dec
mov
aaa
out
into
into
mov
mov
mov
sbb
xchg
aad
pop
and
dec
pop
mov
cmpsl
mov
jg
adc
xchg
out
mull
inc
pop
mov
in
add
shll
gs
hlt
mov
test
xchg
ret
inc
fnstcw
and
dec
js
sahf
adc
rclb
into
js
mov
jl
jg
pop
mov
sbb
push
dec
fisttpll
and
insl
sub
in
pcmpgtb
jge
pop
push
sub
push
outsl
test
mov
andb
xor
xor
or
dec
mov
push
mov
dec
outsl
int3
push
jge
fcmovnu
cld
imull
xchg
xchg
testb
jge
mov
insb
xor
loop
and
cmp
mov
cmp
int
push
pop
jnp
arpl
fs
xchg
cmpsb
jmp
lret
push
dec
push
rol
xor
mov
xor
mov
sbb
movsb
enter
enter
pop
ljmp
iret
out
dec
inc
push
repz
xchg
inc
test
fisubs
mov
ss
adc
icebp
bsf
inc
sbb
mov
mov
push
dec
mov
mulb
mov
xor
nop
js
ret
push
test
fwait
ss
adc
out
sbb
test
push
mov
xor
dec
data16
pop
repnz
pop
inc
push
push
or
add
fs
ds
pusha
pop
repz
mov
sbb
loopne
lds
push
mov
fildl
es
or
dec
mov
out
inc
test
stos
add
and
out
or
mov
imul
push
outsl
ja
pop
inc
adc
cld
sub
stc
fadds
insl
pusha
dec
cmc
lea
ret
mov
movsb
ja
jg
push
xor
mov
mov
arpl
and
fwait
mov
add
xor
fisubs
out
push
push
xor
sub
inc
lret
mov
addr16
int
fnstsw
out
xor
pop
clc
movsl
mov
bswap
out
mov
mov
nop
mov
loopne,pt
xchg
stos
inc
in
and
call
push
or
sbb
ret
je
ja
aam
dec
icebp
cmp
mov
adc
mov
sub
mov
in
mov
cmc
or
ficoms
pop
outsb
inc
stc
stos
sbb
sub
scas
push
mov
xor
or
mov
mov
jno
sbb
or
cmpsl
lds
out
cs
clc
lock
inc
clc
scas
mov
jge
in
sub
sti
imulb
arpl
jp
sub
fwait
xchg
push
lret
enter
test
ja
clc
mov
ret
inc
ja
xor
sbb
ljmp
insb
sbb
hlt
inc
out
push
popf
fistl
push
lcall
xor
out
jo
sbb
push
dec
mov
aas
jnp
dec
push
mul
jge
outsb
cltd
test
pop
loope
rorb
jno
jl
dec
push
mov
xor
das
movsb
lods
scas
nop
add
cmp
outsl
nop
xchg
in
fwait
inc
clc
movsb
adc
lret
clc
cld
jae
or
ret
push
sti
lods
bound
loopne
adc
mov
pop
sub
push
push
mov
rolb
scas
js
mov
sub
mov
out
sbb
test
punpckhdq
lds
jno
mov
mov
aad
gs
lret
and
jecxz
leave
jb
test
repz
aam
imul
inc
mov
mov
xchg
adc
cmp
lds
and
loopne
xchg
pop
sbb
mov
inc
sub
lahf
cs
or
out
stos
stos
popa
loope
fs
fisubrs
fnstcw
inc
jg
popf
outsl
dec
mov
loop
mov
outsl
inc
loop
sbb
cmp
dec
mov
pop
push
inc
or
in
jne
aaa
test
push
sub
imul
xchg
notl
jg
push
jno
sub
add
xchg
pop
addb
nop
mov
push
inc
mov
in
pop
and
xchg
xor
mov
dec
push
mov
mov
popa
mov
mov
cld
push
adc
hlt
sbb
pushf
push
stc
int
lret
call
xor
mov
add
xchg
xchg
jle
mov
push
repz
xchg
pop
lahf
arpl
ss
adc
push
add
lods
pop
sahf
pushf
or
mov
rclb
loopne
js
cmp
shrl
outsl
mov
add
cmp
xchg
addl
outsb
or
jp
mov
mov
mov
aad
ret
lds
jnp
jge
rcrl
clc
stos
xchg
popa
out
add
inc
movsl
loopne
fwait
mov
loopne
xor
in
sbb
adc
scas
mov
pop
dec
mov
cli
sbb
inc
loop
arpl
xchg
repnz
mov
lcall
mov
mov
mov
int
sub
adc
rorb
dec
mov
mov
xchg
dec
push
xlat
das
sbb
sbb
sub
jb
sub
add
cmp
mov
daa
test
insb
jmp
mov
ja
mov
add
inc
sahf
int
stc
nop
sub
jg
pop
pop
jge
clc
mulb
xchg
enter
cmpsl
add
ret
test
mov
addr16
shr
and
push
dec
dec
aam
adcl
lods
dec
mov
ror
push
negl
inc
roll
mov
xor
adc
sti
stos
mov
fnstsw
xor
cmp
out
stc
sbb
xchg
clc
and
jmp
pop
add
and
sbb
mov
mov
gs
add
mul
int3
js
in
es
clc
cmp
adc
enter
shll
loopne
lods
cld
int3
sub
or
inc
jecxz
dec
mov
imul
push
scas
jl
sub
stos
sbb
inc
jbe
inc
jne
xchg
mov
into
loope
sahf
jns
and
fisubrs
jo
jg
test
mov
aam
xchg
hlt
fs
mov
mov
add
or
subb
pop
push
scas
adc
mov
pop
push
loop
mov
push
push
clc
std
push
jge
jmp
subb
test
jbe
mov
int
int3
cmp
call
test
cmp
add
mov
xchg
add
cli
out
and
or
mov
add
mov
enter
outsb
gs
sbb
jnp
repnz
adc
adc
cmp
popa
add
loop
lret
jmp
cmp
ret
sub
les
fldcw
mov
xchg
je
sub
fcmovbe
push
in
out
out
in
xchg
cmpb
sub
les
in
cmp
into
enter
jns
std
pop
jns
lea
dec
cmc
test
mov
jae
xchg
cli
push
jmp
dec
sub
call
jnp
shll
outsl
in
loope
sahf
push
lds
xor
test
sub
nop
and
mov
sti
aaa
ret
popf
sub
inc
ljmp
les
mov
xor
and
ja
push
sbb
lcall
push
inc
push
push
in
pop
pop
adc
fimuls
and
push
and
test
mov
cmc
test
fstpt
push
dec
and
dec
sub
or
and
pop
cmp
adc
out
inc
andb
sbb
stos
push
mov
dec
out
stos
ds
jne
in
sbb
fwait
mov
add
cmp
xchg
xor
in
inc
xchg
test
movntsd
test
imul
sub
and
hlt
popf
ss
cs
sub
shl
and
std
lds
push
orl
mov
mov
sti
test
nop
ljmp
jl
lods
sub
sbb
sarb
mov
enter
scas
xor
js
cli
jo
es
push
mov
shlb
xlat
pop
xchg
lods
loop
test
pop
xchg
andb
testb
push
mov
pop
shlb
xor
sbb
outsl
xor
fbstp
js
add
stc
sbb
mov
scas
scas
xor
lds
sbb
cwtl
aas
mov
dec
lods
imul
jl
jecxz
cmpsb
fwait
xor
jle
stos
repz
push
rcll
sub
pop
mov
and
ja
imull
outsl
lds
jnp
mov
test
and
cmp
jge
rorl
leave
scas
scas
or
sarl
mov
add
jmp
psubw
sub
push
add
lds
roll
dec
addr16
dec
sbb
movsl
dec
cltd
negb
dec
pushf
pop
xor
xchg
adc
loope
rorl
jne
dec
inc
sub
movsb
movsb
call
and
out
int3
cltd
test
out
inc
mov
pushf
lea
sub
je
popf
or
mov
push
pushf
shl
mov
fbstp
je
xor
jecxz
push
test
sub
or
or
xlat
es
mov
xchg
jle
jb
scas
xchg
xchg
call
jmp
mov
fmull
ds
mov
arpl
imul
cltd
test
inc
mov
push
lods
mov
jns
cmp
mov
data16
test
cmc
add
js
ss
add
aad
push
xchg
or
and
sub
inc
mov
jne
sub
ret
sbb
and
sbb
pop
sahf
push
cmp
jge
adc
xchg
lret
push
stos
lcall
adc
mov
mov
inc
loope
dec
xor
pop
mov
test
sbb
jbe
imul
add
scas
pop
stos
push
cmp
xlat
push
hlt
ss
imul
jl
loope
adc
stos
inc
cmpsb
mov
add
mov
xchg
xchg
into
shl
in
inc
pop
sahf
stos
mov
and
jle
push
and
push
loop
sub
pop
or
scas
addr16
arpl
call
mov
pushf
push
leave
push
fxam
std
or
cmp
pusha
lods
aad
andb
pop
push
rolb
enter
pop
adc
jecxz
jmp
inc
xor
ret
pop
mov
pop
xchg
aad
pop
inc
fsub
sub
xor
inc
xchg
mov
test
or
cmp
inc
inc
fadds
lods
pop
jge
pushf
pop
xchg
ss
in
mov
movsl
pop
mov
pop
and
out
rolb
mov
fildll
mov
mov
leave
push
push
push
mov
jg
inc
lret
out
data16
jge
push
adc
add
or
add
lds
scas
sysenter
jo
popa
jp
gs
pop
mov
cld
pushf
sti
and
pop
leave
adc
mov
shl
cmp
pop
bound
rorb
adc
sub
fcompl
movsb
rclb
ror
cmp
push
mov
cmp
pop
jb
clc
loopne
xchg
mov
in
pop
aad
fwait
cwtl
test
mov
pop
add
jae
mov
push
and
lret
in
add
pop
lret
and
mov
and
inc
pop
jnp
mov
test
xchg
mov
lock
lret
dec
fs
dec
push
push
sti
cmp
negb
sahf
insl
sub
adc
push
pop
cmp
lahf
push
aad
ret
inc
jg
pop
das
clc
lock
pop
ljmp
mov
mov
rcr
fldcw
bound
pusha
scas
shll
les
pushf
mov
int3
dec
or
push
leave
loop
cmpsl
mov
outsl
stc
fsubl
gs
sbb
movsl
sbb
mov
xor
bound
add
jae
push
pop
mov
adc
xor
cli
xlat
lret
sub
cmp
inc
loope
imul
jo
push
add
int3
enter
shrl
add
lods
call
push
dec
lcall
popa
pop
leave
mov
cmp
sub
jle
sub
inc
pop
cmpsb
stc
mov
push
mov
test
add
rolb
cmp
adc
mov
sbbl
cmc
in
lods
rolb
push
sub
mov
push
out
mov
sbb
or
inc
jo
scas
loope
push
adc
fldt
dec
pop
mov
mov
loope
pop
int3
push
inc
sbb
loopne
add
adc
scas
fisttps
push
add
inc
in
aaa
cmc
sub
ljmp
jmp
dec
les
adc
pop
add
push
out
mov
in
lar
jg
pushl
xor
sbb
nop
jg
cmp
jns
scas
arpl
adc
inc
shlb
jne
push
popf
push
push
lods
pop
xchg
adc
mov
and
push
je
jmp
jmp
xor
mov
jae
ljmp
insl
sub
and
outsl
cltd
std
dec
jnp
fcompl
fwait
js
adc
xchg
add
inc
push
out
int
xorl
lea
test
xor
cmp
iret
cltd
je
jo
mov
into
stos
insb
inc
ja
addr16
xchg
movsl
fmuls
mov
push
push
xchg
fnstsw
sti
mov
sbb
cmp
push
sar
aas
leave
test
stos
add
pop
push
pop
mov
dec
repnz
int
insl
dec
push
sbb
je
jnp
mov
and
mov
stos
js
sub
lds
mov
mov
cmp
jae
sbb
pusha
xchg
mov
test
mov
inc
xchg
mov
and
cmp
iret
loopne
lahf
jne
idiv
cld
mov
or
test
pop
pop
push
pop
jns
add
lods
xor
jg
fwait
iret
sbb
inc
sbb
push
xor
hlt
jo
repnz
push
dec
pop
or
mov
fdivp
push
decl
cmp
mov
mov
jbe
es
xchg
je
ficoml
cltd
aad
pop
push
cmp
es
mov
fwait
in
es
stc
xchg
fisubrs
in
cltd
mov
test
sti
add
xchg
or
inc
ret
repnz
mov
xlat
sub
dec
push
scas
in
std
xor
mov
jb
xor
dec
sub
ljmp
xchg
loopne
mov
add
std
xchg
sub
ret
pop
lret
jnp
mov
jne
mov
push
aam
mov
adc
sub
add
sub
ret
pop
add
pop
stc
inc
push
and
aas
mov
js
mov
mov
jmp
aad
jb
test
jae
mov
jo
adc
scas
lock
mov
mov
xchg
jl
insl
cmp
int3
fisubrl
mov
ja
cmp
adc
in
lahf
iret
and
mov
mov
xor
jb
lcall
jne
xchg
cmpl
cmp
gs
sub
push
xchg
jbe
stos
pop
out
das
jb
aam
test
xor
push
inc
cmpsb
cmc
pop
outsb
jno
sub
jnp
jp
jno
adc
ds
aaa
pop
xor
fisubrs
jno
rorl
ja
or
movsb
push
lds
shlb
pop
orl
mov
push
das
xchg
aaa
pop
push
mov
and
push
xchg
je
popa
jge
push
inc
cld
jae
subb
push
testb
jb
fimull
out
daa
enter
mov
inc
fnstsw
movb
jge
mov
jb
shr
loopne
aas
insl
leave
or
cld
lret
lea
dec
bound
xor
and
pop
stos
pop
cmp
lds
push
jbe
or
sarl
push
xchg
sbb
and
in
mov
or
filds
dec
es
dec
stos
xor
jle
adc
daa
jecxz
push
bound
aas
ljmp
popa
out
shll
inc
mov
pop
in
je
pop
lds
push
ja
and
out
dec
pop
dec
and
iret
call
je
inc
jb
lods
cld
dec
std
pop
je
pop
jnp
mov
mov
and
scas
scas
xor
fisttps
shlb
sub
hlt
sbb
lahf
jnp
mov
cmp
inc
loope
jbe
mov
adc
mov
jns
add
mov
dec
mov
lock
xor
and
dec
jnp
mov
inc
popa
and
aas
pusha
mov
sub
out
les
stc
mov
xlat
xchg
jmp
out
jnp
daa
popa
mov
fcompl
adc
daa
sbb
adc
mov
and
push
leave
sbb
mov
sbbl
push
adc
sub
jl
or
inc
icebp
xor
mov
popf
jae
jno
sub
cld
and
icebp
adcb
in
ss
scas
inc
imul
xchg
push
sbb
cmp
mov
out
mov
fbstp
cmp
imul
loopne
test
cmp
lds
jae
lds
shlb
repnz
sahf
fiadds
xor
and
xor
sub
push
mov
bound
jp
es
fadds
pop
jp
pop
pop
js
cmp
cmp
hlt
xchg
andl
addr16
xor
and
outsb
shl
movsb
xlat
fdivrp
insb
dec
fistps
lahf
sub
mov
sub
sub
sbb
lea
jge
cmpsl
push
cmp
push
sub
inc
clc
rorl
flds
jns
sub
fst
push
bound
outsb
dec
push
pop
xchg
les
inc
cmpl
xor
jecxz
cmpsl
lcall
sub
xor
frstor
nop
stos
cmp
insb
outsb
add
jp
dec
and
push
insl
lods
jg
into
fadds
scas
aad
jl
xchg
pop
scas
les
scas
mov
push
add
sub
cmp
mov
inc
xor
sbb
stos
push
sub
jl
mov
stc
push
dec
pop
fistpl
sbb
or
sub
push
fidivs
mov
leave
ljmp
push
stos
mov
sahf
bnd
sti
insl
stc
enter
and
mov
addr16
sbb
test
adc
adc
in
dec
and
aaa
cmc
push
lcall
cmp
add
sub
in
xorl
or
mov
mov
jg
push
mov
xor
mov
add
daa
cld
dec
int3
aas
les
call
jnp
push
out
xor
push
mov
xchg
and
mov
outsb
test
and
mov
xchg
shll
mov
xor
jb
xchg
cmp
add
test
fcomps
ficoml
dec
pop
mov
lret
and
addr16
push
cli
xor
les
push
sbb
xorl
loopne
shll
xchg
jno
cli
imul
mull
les
fcoml
outsl
dec
int3
inc
mov
jno
add
mov
pop
inc
cs
mov
in
cmpsb
or
dec
in
imul
xchg
pop
hlt
mov
inc
je
ja
xchg
cmp
jecxz
mov
mov
xlat
jl
movsl
jg
xchg
fisttpll
mov
cltd
xor
test
mov
imul
js
gs
jns
cli
pushf
xchg
fdivr
shrl
sbb
divl
mov
inc
mov
mov
jg
adc
add
fadds
icebp
sub
aam
xchg
repz
ret
mov
cli
cmp
add
push
fs
stos
lods
mov
pop
jl
insl
jns
dec
pop
xchg
inc
jbe
flds
push
xor
shlb
jg
or
cwtl
mov
decl
or
ret
pop
inc
nop
mov
sar
es
int
and
jo
dec
mov
gs
mov
mov
sub
xchg
mov
loopne
sub
and
int3
inc
stc
shr
imul
aad
repz
mov
xor
cmc
inc
test
icebp
mov
mov
push
mov
push
jmp
ficoml
jp
ljmp
out
not
mov
pop
scas
cmp
loope
mov
sbb
jg
pop
or
in
sbb
mov
add
je
or
aaa
sub
data16
xor
and
scas
fdivrl
ficomps
mov
xchg
faddl
shl
mov
ljmp
mov
stos
fidivrs
xor
fwait
gs
movsl
adc
in
mov
mov
sbb
xchg
xchg
xchg
movb
pop
add
xor
into
lods
lods
add
int
cli
enter
add
cmp
std
sub
lret
lcall
jo
adc
out
sbb
vunpcklps
insl
frstor
inc
xor
sahf
and
icebp
scas
mov
or
sub
repnz
jo
cmc
mov
mov
mov
cmp
stos
lea
xor
jmp
mov
sub
insl
and
or
bound
xchg
icebp
cld
push
and
mov
cmp
lret
pop
in
iret
dec
pusha
and
and
out
or
mov
jg
lret
add
cld
int
xchg
and
xor
pop
or
fildl
cmpl
mov
gs
add
fs
rolb
test
sbb
ret
int3
sahf
jno
jb
cwtl
pop
mov
and
hlt
sti
scas
push
add
call
cmp
jmp
ds
add
add
ret
inc
dec
repz
jge
adcl
dec
scas
xchg
push
sub
pop
push
add
je
lea
cmp
fmuls
dec
insl
push
or
cmpsw
in
sbb
adc
scas
adc
inc
scas
lods
mov
sti
gs
subl
sbb
rorb
xor
xchg
movsb
stc
dec
sbb
jnp
cmp
sub
mov
jae
in
inc
data16
sbb
js
push
mulb
dec
add
syscall
bound
movl
shll
cmc
push
fcomps
mov
jecxz
jo
ret
xor
sbbl
movsl
andl
adc
js
aad
bound
rorb
sbb
out
hlt
lods
out
jmp
jp
add
cmc
daa
movsl
fiaddl
in
or
mov
paddw
or
xchg
insl
jmp
js
scas
jno
mov
popf
mov
not
cld
xchg
mov
popf
arpl
jp
sub
and
xchg
cmp
mov
sbb
sbb
or
mov
cwtl
inc
mov
jmp
icebp
fwait
test
scas
xchg
sbb
mov
mov
stos
push
xor
jge
daa
daa
inc
pop
mov
dec
bt
xchg
sbb
jmp
in
push
out
mov
jmp
mov
mov
dec
in
mov
fnstsw
lahf
pop
jmp
jns
hlt
sub
pop
das
xor
cs
mov
push
inc
cmc
call
push
sahf
xchg
adc
pop
into
inc
in
jg
add
jl
out
mov
jmp
jge
adc
out
cmp
repnz
xchg
rcl
add
sarb
ret
test
int
xchg
and
mov
es
push
lret
outsb
cltd
mov
cmpsb
sbb
xor
mov
hlt
in
dec
imul
push
adc
aaa
xchg
dec
fldt
push
cmpb
ljmp
sbb
orl
adc
mov
and
test
hlt
dec
jns
ljmp
push
xor
adc
mov
and
cld
dec
sbb
js
or
inc
cwtl
mulps
xlat
inc
push
idiv
mov
ja
pushf
and
sub
mov
ja
cli
inc
push
frstor
xchg
jmp
repz
insl
sub
fwait
dec
mov
into
inc
mov
mov
and
or
inc
xchg
xor
lds
lahf
fdivrs
gs
jbe
popf
cmpsl
lcall
cltd
push
mov
lods
push
push
dec
arpl
imul
inc
mov
pop
mov
and
inc
and
mov
or
ljmp
imul
in
movsl
inc
fwait
mov
jno
xchg
sbb
fistl
mov
cltd
jbe
or
add
pop
cmc
push
mov
jb
lock
xor
mov
inc
pusha
pop
pop
outsl
sub
and
pop
lock
lret
push
dec
je
cmp
out
lcall
push
das
fs
cmpsl
fcoml
rol
dec
test
shll
test
cld
scas
cmp
aaa
or
cs
scas
nop
out
xchg
fadd
pop
addr16
test
add
movsl
movsb
sub
xor
jbe
inc
add
mov
dec
mov
inc
ret
xchg
repnz
sub
pushl
push
mov
ficoms
inc
rcr
mov
sub
add
add
cmpsl
and
scas
or
fisubs
fmul
mov
sbb
ret
cmp
sbb
push
inc
loope
mov
ret
and
out
sahf
inc
sub
stc
lcall
mov
xchg
stos
out
insb
outsl
popf
je
cld
xchg
out
mov
inc
jo
imul
push
pushf
cltd
fiadds
jnp
xchg
mov
push
or
xchg
enter
cmc
lea
test
jns
push
push
jl
and
sub
jge
aaa
mov
jle
ret
xor
popa
imul
dec
pop
mov
sub
inc
jp
xor
enter
faddl
lcall
stc
mov
jle
psllw
mov
pop
mov
lock
clc
testb
daa
cmp
insb
outsb
or
cld
inc
test
mov
or
mov
dec
jmp
pop
pop
sub
pop
and
cltd
mov
push
aad
out
pop
leave
lret
pop
loope
fnstcw
and
xor
adc
cwtl
mov
dec
movsb
sbb
into
sub
dec
rcr
loop
stc
fcmovnb
sbb
push
jae
jae
push
or
or
fldenv
imul
xchg
hlt
mov
dec
sbb
push
add
xchg
movsl
out
movsl
add
fisttps
mov
pop
lret
cmpsb
add
aam
pop
int3
and
push
and
ret
pushf
dec
jo
cli
movsb
mulb
out
xor
inc
cmp
pop
imul
push
cli
sbb
cmp
add
je
fimull
jge
dec
outsl
out
pop
ss
nop
jge
adc
add
int
test
xor
push
imul
mov
pop
push
mull
adcl
mov
add
call
jp
bound
aaa
les
xchg
test
inc
sub
hlt
push
shrl
xlat
add
xor
stos
mov
scas
movb
xchg
arpl
and
adc
dec
leave
lods
push
jb
add
ret
mov
jmp
pop
aam
stc
loope
adc
pusha
or
lea
xor
dec
inc
shlb
adc
push
lahf
call
lock
mov
stos
mov
into
sub
or
pop
mov
jl
dec
cld
cmp
sub
dec
mov
jno
sbb
add
fdivrs
and
movsl
jno
fwait
adc
enter
out
ja
loope
xchg
enter
ja
mov
pop
pusha
jns
mov
ja
ja
inc
sub
in
sbb
call
xorl
sub
sarb
out
pop
imul
clc
cmp
adc
jmp
adc
lcall
out
sbb
into
ret
pop
insb
pop
inc
jae
jl
sub
inc
or
lds
data16
add
mov
sbb
enter
push
lret
dec
sub
pop
scas
cmpsl
iret
lea
sub
adc
fbstp
xchg
xchg
xchg
mov
sahf
in
fidivrs
ficoms
and
lea
mov
inc
xor
sbb
add
jb
ret
mov
cltd
lcall
mov
adc
mov
mov
ss
aas
pop
scas
add
xchg
push
sub
adc
push
jge
insl
jno
in
cld
jecxz
mov
int
out
arpl
cwtl
cmc
lock
xor
and
sbb
adc
in
lods
je
leave
stc
subl
mov
push
jne
test
out
hlt
push
cmpsb
sahf
stos
mov
jae
das
mov
cmc
test
shll
test
or
scas
pusha
cmpsl
cmp
lret
rep
add
pop
xchg
outsb
ljmp
call
push
cmc
jl
into
xlat
sub
imul
jne
repnz
or
les
loop
lock
test
push
dec
adc
jne
repz
fcoml
mov
mov
andb
xchg
dec
jae
aad
sub
cmpsb
jg
xchg
cmp
jne
movsl
sbb
add
inc
test
jne
daa
jnp
xor
test
jno
nop
xchg
rcrl
imul
xor
popf
push
xor
sbb
push
jge
fdiv
adc
xchg
lods
and
push
dec
mov
sbb
inc
adc
ds
clc
jo
scas
mov
les
cmp
dec
inc
adc
fcom
push
cmp
dec
cmp
jb
ja
jmp
cmp
push
loope
imul
sub
pop
nop
pop
cmp
and
pop
pop
sti
loop
std
xchg
push
mov
mov
outsb
rep
adc
rcrb
dec
push
jmp
ret
roll
dec
xchg
mov
cmp
and
mov
hlt
insb
cmp
cwtl
xor
push
adc
adc
mov
fcmovb
xchg
push
xor
stos
xchg
or
and
cmp
adc
inc
mov
or
jl
loopne
test
mov
pop
outsb
pop
mov
js
push
or
and
out
cmpsb
sub
out
les
mov
xchg
andl
inc
or
xchg
mov
mov
mov
imul
stos
dec
cmp
pop
or
stos
push
iret
dec
and
mov
data16
rorb
sub
push
xchg
std
jns
and
jo
jns
ljmp
insb
icebp
sahf
inc
mov
xchg
and
andl
out
scas
in
add
jge
and
addr16
iret
push
lods
ret
stc
or
mov
or
inc
fnstenv
mov
test
popf
ds
xor
dec
sub
jle
sbb
pushl
test
sbb
cltd
aad
lcall
inc
jl
push
push
andb
enter
push
aad
push
daa
outsl
dec
cmp
cmpsl
add
es
test
xchg
inc
rep
jns
clc
dec
or
or
adc
aam
add
lock
mov
nop
sti
clc
mov
icebp
test
mov
dec
cmp
test
hlt
push
push
jae
mov
and
push
xchg
jle
cmpsb
sbb
out
imul
add
daa
xchg
cmp
mov
stos
int
pop
push
mov
addr16
je
icebp
cwtl
stc
cmp
es
jmp
jno
rclb
clc
repz
lret
xlat
push
xlat
call
or
adc
aaa
arpl
pushf
jl
fldt
test
nop
mov
negb
into
jae
ljmp
add
out
scas
push
fsubrs
iret
rolb
jae
mov
sbb
int
xchg
sbb
loope
sub
push
mov
addr16
push
push
cmp
sub
push
insl
lods
fdivp
inc
inc
shlb
adc
dec
mov
inc
in
add
lods
daa
add
aaa
lods
pop
fucom
adc
jo
fdivrs
in
mov
sub
das
loopne
cmp
mov
cs
pop
call
cmp
push
imull
leave
inc
push
mov
inc
and
ds
jl
xchg
addr16
lcall
jmp
test
mov
cmp
push
cmpl
mov
xor
sub
lods
jae
jge
lods
out
adc
mov
ja
or
in
rorl
pop
add
sub
fadds
repnz
sti
aas
mov
sbb
mov
leave
lret
push
testb
leave
push
test
or
pop
jmp
in
aam
cltd
jle
orl
add
subb
sub
loope
mov
std
inc
push
xchg
jne
addl
imul
out
nop
mov
push
test
mov
cmp
testb
scas
subl
sbb
subb
inc
dec
lods
push
shl
dec
and
cltd
movsb
add
fs
xchg
lret
icebp
scas
movsb
xor
adc
arpl
mov
scas
mov
ficompl
sbb
shl
adc
jecxz
inc
mov
ds
fldt
lock
in
enter
or
int
mov
pop
sub
fsubrl
cltd
mov
std
out
sub
sbb
out
lea
sub
sbb
adc
clc
sbb
fs
ret
sub
rcrb
adc
dec
xchg
repz
ficomps
in
or
or
cmp
rcll
or
sbb
iret
push
ss
mov
pop
mov
jecxz
mov
inc
cs
add
adc
fimull
pop
sbb
dec
inc
imul
ljmp
and
into
pop
mull
out
xor
negl
inc
cmp
sub
sarl
jmp
sub
sbb
dec
inc
mov
pop
xor
inc
lcall
xchg
pushf
push
arpl
enter
ja
adc
ret
in
into
xchg
lcall
push
test
movsl
loope
sub
jmp
fbstp
out
mov
xor
sbb
das
adc
aas
dec
mov
push
sbb
test
call
sub
inc
out
fsubrl
lock
or
push
test
mov
or
dec
shrl
mov
adc
jp
and
setns
and
xchg
pop
mov
lods
je
pop
push
push
cltd
icebp
addb
hlt
xchg
in
fmuls
mov
pop
xor
daa
jns
sarl
ret
adc
xchg
dec
xchg
ljmp
pop
adcl
popw
lods
push
shlb
inc
gs
pop
sahf
pop
jb
sbb
xchg
sbb
cmp
lods
and
pushf
mov
sbb
or
and
fsubr
add
test
dec
stc
mov
add
std
add
sub
or
outsl
mov
push
into
push
stc
push
pop
test
sub
push
lods
fistps
repz
inc
lds
arpl
scas
std
int
ret
cltd
imul
outsl
lods
test
fidivs
repnz
pop
mov
adc
mov
mov
stc
addr16
mov
xor
nop
cltd
addb
jnp
int
dec
fs
mov
loope
cmpsb
lea
pop
jbe
shr
repz
inc
pop
mov
loopne
mov
pop
cmp
shll
mov
xor
pop
in
push
dec
loopne
xchg
mov
xlat
xchg
push
cwtl
loop
enter
repz
inc
lds
mov
inc
fidivl
in
dec
pushf
jp
fimuls
pop
bound
pop
and
jmp
xchg
stos
lock
dec
mov
decl
dec
sahf
aas
add
call
fidivs
out
mov
icebp
pushf
xchg
mov
or
mov
pushf
push
push
out
pusha
js
pop
mov
gs
push
nopl
xchg
pushf
jge
xor
push
or
lret
out
mov
loope
cmp
xchg
xor
testb
daa
sbb
dec
or
xchg
popf
repz
loopne
bnd
xor
jp
in
xor
shl
loopne
roll
xchg
fs
cmpsl
pushf
xchg
ss
lock
sub
mov
xchg
push
mulb
mov
jno
in
sub
add
jg
cmp
dec
sub
lret
mov
and
in
mov
xor
xchg
cmp
xchg
gs
xlat
movzwl
mov
loope
mov
fildl
leave
in
int
out
xchg
cmp
jmp
daa
pop
jecxz
mov
xor
loop
xorb
hlt
sub
push
adc
cld
jl
add
fst
clc
sbb
xor
outsl
pop
fnstsw
jb
bound
in
into
jle
int
movsb
mov
cmpsb
gs
push
sti
inc
cmpsl
add
adc
mov
mov
icebp
test
fidivrs
cmp
stos
adc
repz
pusha
lds
dec
cmpsl
mov
mov
imul
test
aam
dec
push
dec
shll
push
sbb
outsl
in
mov
xchg
jnp
dec
cwtl
inc
in
mov
popa
lcall
jno
mov
cli
push
lret
push
leave
sub
stos
repz
xchg
jge
mov
and
daa
inc
sarl
hlt
cmpsb
xchg
into
and
push
out
sbb
xor
inc
mov
sub
add
ret
lret
imul
test
outsl
push
mov
xor
push
lds
call
imulb
push
stos
out
pop
adc
sub
jge
mov
sahf
cmp
pop
push
lods
xlat
lods
xabort
inc
push
add
jg
pop
gs
xbegin
popa
mov
push
mov
add
push
or
sbb
or
dec
cli
call
xor
xor
jb
pop
or
mov
stos
inc
movsl
pop
sbb
xor
add
push
jle
pop
mov
sub
sbb
or
and
pop
cltd
pop
jecxz
in
and
inc
add
fdivrp
jbe
push
jmp
ror
dec
dec
cli
js
fadds
pop
sbb
add
and
and
ror
cli
lods
inc
out
xchg
sub
fs
orb
mov
push
and
jnp
lods
fwait
pop
inc
or
dec
xchg
and
xchg
dec
xchg
fwait
dec
xchg
xchg
mov
repz
loope
xor
sbb
shll
push
jp
cmp
in
mov
ret
add
negl
stos
cli
jb
or
loopne
ficoms
jmp
add
adc
in
sub
shr
add
outsb
iret
sbb
int3
jle
lock
mov
std
mov
mov
jns
nop
lods
sbb
fsubr
in
adc
push
js
rcll
mov
pop
sti
cmc
loope
mov
push
fistpl
pop
push
jle
cli
ss
dec
dec
xor
test
adc
dec
sub
test
icebp
fsubl
cmp
lods
lcall
mov
mov
dec
aam
stos
inc
mov
pop
mov
ja
push
loopne
std
test
sbb
xchg
xor
mov
les
mov
daa
xorb
jmp
out
xorl
repnz
pop
mov
adc
mov
rcrl
cltd
shrl
int3
dec
inc
daa
push
negl
and
dec
cmpl
adc
cmpb
add
pop
inc
fucomip
xor
adc
sub
xor
push
mov
ja
stos
repnz
xor
repz
testl
jne
js
mov
imul
or
ljmp
mov
mov
xchg
scas
iret
hlt
and
scas
sub
ds
jno
popf
jmp
aam
xchg
push
and
or
dec
push
std
cs
sarb
in
es
ret
ljmp
pop
dec
sbb
mov
jnp
fldcw
or
daa
int3
push
fwait
and
int
cmc
and
and
xor
add
and
dec
popf
jp
adc
push
sbb
push
daa
sti
repz
cmp
xchg
push
add
nop
dec
or
and
push
sti
rcll
adc
ret
in
mov
xchg
add
mov
bound
pop
bound
adc
arpl
mov
sbb
mov
orl
push
dec
fdivl
sbb
sub
pop
xor
test
enter
jbe
addr16
push
loope
inc
dec
mov
inc
push
fstps
aaa
mov
imul
out
ret
lods
add
outsl
call
je
hlt
insl
cld
dec
dec
cmc
jmp
addr16
les
out
fwait
shl
and
std
fcoms
mov
push
push
std
mov
addr16
aam
xor
orb
xor
pop
jbe
push
pop
pop
pop
repz
andb
and
cld
std
jmp
jns
dec
daa
mov
or
imul
adc
push
mov
or
loopne
sarl
test
jo
mov
ret
jo
stos
cmp
or
mov
aaa
or
repz
lret
std
shr
int
js
cmp
in
sbb
sub
ret
sbb
or
loopne
push
dec
push
sbb
ss
call
mov
jbe
dec
and
jmp
rcll
pushf
jg
daa
test
sahf
adc
mov
pop
pop
sub
dec
ds
lret
ljmp
push
xchg
ss
jmp
pushf
sti
popf
mov
enter
mov
sub
or
xchg
ja
pop
aam
push
jb
pop
push
mov
rorl
bound
mov
push
mov
and
loopne
lcall
sbb
stos
ret
in
sbb
and
xchg
addr16
movsb
sbb
test
sahf
inc
cmp
repz
js
mov
jb
jno
jne
je
lret
fsubrl
test
stos
bound
rcrb
lret
sub
fistpll
mov
mov
inc
xchg
fxch
push
dec
jo
aas
in
and
xor
lods
xorl
pop
add
repnz
bnd
lahf
and
xchg
push
and
js
fsubs
and
pop
xchg
and
or
clc
cmp
sbb
in
jle
sbb
mov
inc
sub
pusha
nop
cmp
and
jg
dec
lret
loope
in
lds
mov
frstor
js
imul
arpl
xor
push
mov
mov
xchg
push
lea
sbb
or
aaa
sub
pop
mov
fidivrs
dec
inc
movsl
jg
je
push
or
daa
xor
xchg
xchg
mov
inc
inc
adc
mov
js
inc
xchg
jmp
lock
sti
data16
mov
lcall
adc
pop
or
cs
scas
ja
fsubs
lea
and
into
aas
wrmsr
cmp
iret
outsl
inc
xchg
adc
push
mov
notb
repz
mov
pushl
adc
cmpb
xchg
push
jge
sub
sub
mov
cltd
fimull
mov
inc
aad
inc
js
fcoms
push
xchg
in
aas
aas
sub
imul
pop
cmp
inc
mov
stos
jl
xchg
je
jmp
push
mov
jne
repz
mov
add
adc
adc
push
shl
cmp
fstpl
and
xchg
aam
mov
mov
addb
xor
adc
loopne
mov
sub
and
push
xchg
cli
lods
std
mov
lea
loopne
stc
and
fnsave
xchg
pop
or
subb
into
lock
mov
mov
addb
dec
sti
sub
insb
adc
xor
mov
jbe
lock
or
cld
bound
jp,pn
jns
mov
xorl
mov
or
push
push
lcall
movsb
addr16
popa
imull
in
inc
jno
ret
sbb
dec
cmpsb
cmp
lret
lods
add
sti
leave
lods
inc
sti
inc
subl
and
mov
jno
xchg
sbb
mov
adc
addr16
imull
cli
fdivrs
stc
and
pop
adc
lods
jnp
fwait
bound
test
dec
jns
vmwrite
xchg
mov
lcall
lahf
mov
ucomiss
mov
fcompl
inc
pop
jne
dec
pop
iret
lods
mov
push
cld
mov
pusha
pop
xchg
gs
mov
jl
pop
dec
xor
xor
pushf
in
jecxz
lock
xor
cmp
iret
fucompp
xor
in
inc
into
mov
sbb
or
fwait
lcall
xor
xor
movsl
dec
jb
clc
fildl
pop
aam
test
mov
movsl
sbb
fisubrl
sar
iret
inc
ss
xchg
daa
scas
pop
jno
icebp
mov
repz
xor
in
cmp
movsl
in
imul
push
xchg
cltd
jg
sbb
xchg
or
cmp
aaa
add
adc
int
out
push
or
adc
pop
mov
and
sub
ret
dec
xlat
mov
jl
inc
cmpl
xor
pop
gs
mov
bound
push
mov
cmpl
mov
ja
add
push
dec
inc
add
shll
inc
cld
movsl
leave
mov
lret
std
repnz
andl
popa
xchg
lds
sbb
adcl
je
lcall
loope
shl
adc
shlb
sbb
aam
xor
adc
pop
cmp
jnp
xor
dec
cltd
shlb
push
stos
call
xchg
cmp
inc
enter
xchg
inc
inc
xchg
lcall
sub
and
xor
add
inc
mov
hlt
fadds
in
pop
mov
cmp
loope
inc
xlat
ds
pop
out
out
xchg
fdivs
sbb
jae
cmp
lds
lcall
cmpsl
mov
lret
jae
aam
ss
popf
aas
ficomps
lock
dec
dec
shlb
or
sub
fsubl
inc
and
cli
aam
cli
jnp
cmp
push
push
jo
pop
and
rorb
or
inc
ds
lds
shll
fsubrs
aam
cmpsl
iret
leave
dec
cs
lods
cltd
add
lock
sub
sbb
mov
idivl
xor
push
sub
adc
sbb
jmp
repnz
push
jae
aam
lds
loope
mov
fdivl
pusha
jmp
xor
sbb
mov
aad
xor
cmp
es
xchg
leave
push
jno
rolb
jl
dec
push
in
mov
and
push
hlt
pop
test
xchg
call
add
fnsave
jle
mov
in
out
push
scas
mov
pop
mov
xchg
popa
pop
fsts
psllq
push
lods
adc
outsb
xchg
xor
pop
mov
sbb
or
mov
mov
adc
jge
sbb
push
cmp
cwtl
shr
ret
xchg
or
in
push
push
mov
sti
mov
mov
imul
xor
push
adc
in
xchg
repz
xor
sti
cs
inc
pop
js
inc
stos
mov
fsts
lret
pusha
sub
in
mov
xchg
pop
out
notb
add
repnz
sub
punpckhbw
sub
pop
test
jb
nop
inc
push
jae
pop
insl
int3
mov
jle
mov
sbb
lods
fidivs
insb
jne
xchg
and
inc
jne
cwtl
mov
dec
aad
adc
add
or
pusha
adc
imul
out
mov
fisttps
sahf
adc
pop
sahf
pop
orb
inc
in
sarl
loope
lahf
jg
pushf
sub
push
mov
icebp
repz
pusha
mulb
in
dec
jg
xchg
cmp
sub
and
ljmp
cld
cmc
bts
sbb
mov
outsl
cmc
add
ret
pushf
sbb
daa
pop
sub
je
cmp
and
std
sub
mov
adc
arpl
push
shrb
mov
addb
cwtl
push
mov
pop
pop
mov
cmp
and
ret
loopne
sbb
inc
mov
ret
cmc
sub
xchg
loopne
nop
xor
addr16
mov
jns
mov
mov
sub
cmp
or
fwait
pop
ror
lahf
sbb
xchg
xchg
in
xchg
pop
cmpsb
xchg
popa
fisubrs
aaa
xchg
adc
jmp
xchg
test
pop
jnp
out
int3
cmpsb
mov
add
pop
mov
ljmp
push
les
inc
daa
mov
push
xlat
and
jmp
sub
xor
jo
daa
xchg
out
mov
xlat
jge
rorl
xchg
ja
hlt
inc
jb
jp
jg
mov
rorb
pop
mov
mov
jae
dec
loopne
add
dec
mov
lock
mov
mov
mov
movsl
mov
or
test
sbb
gs
cmp
ljmp
inc
adc
pop
inc
sbb
out
inc
xchg
sbb
fstpl
dec
xlat
scas
les
mov
and
cmp
popa
adc
aam
sub
or
add
pop
call
sti
negl
lods
and
xchg
das
incb
mov
sub
pop
enter
mov
or
push
add
in
add
sub
xchg
push
adc
sbbl
inc
mov
fildll
es
inc
insb
cmp
es
mov
jmp
scas
ljmp
push
dec
fdivrp
pop
mov
or
and
popa
gs
add
in
jno
jno
loop
icebp
das
sbb
push
mov
mov
pusha
mov
les
decb
adc
push
sbb
lahf
xor
test
lods
mov
inc
pop
lret
add
mov
lret
sub
xchg
outsl
pop
imul
dec
xor
inc
popa
js
pop
cltd
sub
mov
xchg
pop
adc
out
test
xlat
das
pusha
mov
std
xor
adc
in
xchg
push
test
aam
push
sub
xchg
or
ret
pop
xor
push
cmp
pop
add
cmpsb
cwtl
mov
mov
or
mov
adc
mov
mov
xchg
pop
pop
pop
lahf
mov
stc
inc
sbb
push
mov
sahf
jl
insb
fstp
imul
mov
sub
add
sarb
ficoms
push
cmc
xchg
das
add
sub
xor
add
adcb
mov
push
sti
lds
in
dec
pop
rcll
shlb
fisubs
mov
ret
and
imul
mov
jno
lods
shlb
jae
mov
mov
mov
and
sub
je
sub
data16
lods
push
dec
das
aam
out
sub
hlt
cmpsb
sub
in
int3
inc
repz
movsb
adc
mov
loopne
and
cwtl
fidivl
pop
mov
jns
or
lret
mov
adcb
mov
push
pop
mov
sbb
push
xor
inc
mov
mov
sbb
into
addl
and
rcl
sbb
int
inc
mov
cld
mov
push
jne
icebp
cmpsb
jge
adc
ljmp
iret
out
insb
mov
and
push
out
jne
fs
mov
in
push
vpcmpgtw
jp
and
cli
cmpsl
xchg
xchg
sarb
jp
mul
mov
cmp
mov
mov
aad
ja
add
mov
and
sub
popf
fsubr
imul
pop
fpatan
xor
ret
fnstsw
mov
fcmovne
add
mov
loopne
shr
mov
lds
aas
cld
mov
mov
sbb
sbb
add
addb
xchg
dec
jo
inc
cmpsl
jmp
jo
jno
mov
sub
insl
notb
fidivs
sbb
xchg
lret
out
outsb
mov
andb
stc
ljmp
xor
cmp
lock
mov
lea
aam
icebp
mov
pop
vaesenc
sub
pushf
insb
cmp
js
cmpsl
sbb
and
cmpsl
test
aaa
aas
mov
dec
push
jbe
fimuls
repnz
daa
in
bnd
sbb
xchg
pop
adc
sbb
aam
les
fsubs
adc
cmp
pop
adc
pop
outsb
scas
sub
and
arpl
inc
jp
push
repnz
pop
jl
lds
xchg
dec
inc
pop
cmp
mov
xlat
lret
xlat
aas
sub
in
sti
mov
pop
xor
inc
sub
jecxz
pop
dec
rcrl
cmp
sahf
adcb
scas
arpl
scas
cmp
nop
fdivrs
icebp
adc
mov
shrb
pop
sbb
cmp
xorb
pop
push
call
stos
inc
mov
xor
loopne
fisttpl
ljmp
xlat
inc
adc
test
dec
push
movsl
push
sbb
mov
pop
and
push
or
scas
ja
mov
test
aas
std
insb
lods
xchg
pop
shlb
mov
mov
jp
inc
add
or
stc
arpl
pop
sub
adc
and
ja
scas
mov
mov
fwait
sub
mov
mov
sub
lret
adc
ljmp
ret
test
dec
pop
mov
pop
clc
inc
mov
outsl
and
sub
divl
jns
mov
rcrb
sbb
outsb
push
idivl
dec
div
adc
adc
sbb
xchg
clc
dec
inc
ret
pop
push
test
jmp
fistps
push
popa
cltd
inc
jbe
cmp
fdivl
fidivrl
sub
jns
dec
fmull
rcrl
test
into
mov
pop
mov
mov
mov
cmc
sbb
pop
xlat
xchg
pop
ljmp
xchg
sbb
ret
clc
imulb
jg
fildl
pop
clc
loopne
and
adc
inc
loope
sub
enter
and
ret
sbb
int
mov
clc
mov
andb
rorw
inc
mov
pop
pop
leave
mov
mov
fidivl
or
into
out
out
xchg
push
pop
inc
sti
repz
mov
xor
dec
push
xchg
and
cvtdq2ps
mov
into
test
sbb
cmp
ljmp
xor
ds
mov
and
sbb
loope
mov
dec
arpl
mov
xchg
sbb
cli
adc
rolb
or
loop
cs
es
and
repnz
shl
dec
cmpsl
push
stos
push
xchg
sbb
rcrb
int
loop
into
push
loopne,pn
jnp
sub
add
pminub
call
mov
in
rclb
mov
adc
push
and
inc
jae
mov
lahf
dec
mov
ja
aad
ljmp
inc
leave
and
sub
xchg
or
dec
stos
aas
sbb
mov
mov
push
cld
mov
mov
outsb
fidivrl
mov
jbe
les
ret
dec
lret
cwtl
jecxz
out
jmp
push
fists
pop
dec
popa
out
es
sub
ret
xorl
je
adc
scas
fnstenv
repnz
mov
pop
adcl
fsubs
or
cld
nop
pop
inc
into
scas
pop
lea
xor
push
fisubrs
lahf
out
cmp
xchg
mov
mov
push
sub
mov
lds
pop
pop
sub
movsb
lea
sarb
daa
jbe
sti
jecxz
mov
loope
xlat
aaa
insb
test
cli
ja
push
aam
mov
push
xor
ja
and
movsl
gs
jl
cmp
pop
sub
pop
cmpsl
nop
ljmp
xchg
ljmp
ja
and
mov
jl
loope
and
test
inc
outsb
repz
xor
loope
clc
and
rol
adc
andl
fnsave
fcmovbe
outsl
mov
mov
cmp
xor
pop
pop
call
xor
sub
loop
cmpsl
shrb
sbb
mov
mov
mov
inc
mov
loopne
add
or
dec
or
mov
out
iret
or
or
jae
lods
or
out
ss
lret
stos
aam
movsb
sbb
mov
inc
pushf
shl
aaa
pusha
arpl
jb
mov
movsl
fiadds
outsl
xchg
shll
mov
shrl
mov
cmpsb
and
dec
mov
jp
jge
adc
pusha
das
xorb
cmp
pop
ss
xchg
jnp
jmp
ds
outsb
sbb
push
adc
cmp
frstor
inc
xchg
bound
in
ret
lret
int3
mov
mull
add
imul
in
imul
xchg
sbb
cwtl
call
dec
pop
and
dec
xor
jp
mov
cmp
rorl
mov
icebp
inc
sub
adc
pop
pop
or
sahf
inc
cmc
js
mov
jge
pop
call
imul
scas
xor
or
mov
lret
fstpt
jge
dec
mov
jns
outsl
mov
xor
sti
dec
pop
pusha
sbb
xor
loope
sbb
dec
lcall
cmpsl
dec
gs
insl
out
sub
mov
mov
loope
push
bound
iret
stos
les
inc
fistpl
cli
inc
push
or
insl
das
ffreep
jne
inc
mov
sti
mov
fwait
or
hlt
adcl
pop
xlat
sub
ds
inc
aad
addr16
cli
sbb
enterw
repz
mov
jae
jnp
out
mov
cmpsb
and
xchg
cmp
lret
inc
xor
dec
mov
xor
push
stos
cmpsl
sbb
adc
mov
pop
xchg
jo
push
loop
add
or
test
mov
mov
mov
adc
das
sub
rcll
mov
movsl
sbb
repnz
push
into
xlat
mov
test
sub
je
leave
and
and
ficompl
test
push
mov
fldenv
mov
mov
pop
mov
adcl
and
jne
mov
push
out
pop
fidivrs
aad
stc
cmp
mov
cmp
cmpsl
sbb
dec
jmp
pop
mov
mov
or
or
dec
int
movsl
push
ret
js
js
ret
pop
aad
mov
outsb
cltd
mov
les
xchg
enter
lock
xor
add
pop
dec
out
cwtl
in
sbb
push
iret
mov
and
cmp
fwait
jge
pop
jmp
fmull
mov
outsl
sub
scas
xchg
std
movsl
sbb
add
sbb
out
xlat
addr16
insl
jnp
sbb
dec
fadds
xor
std
mov
repnz
mov
mov
mov
dec
sahf
pop
fisttpl
js
xor
cmp
cmp
cmp
cld
jnp
into
push
std
mov
xor
std
push
icebp
jno
iret
mov
stos
pop
cs
int3
pop
iret
in
cmpsb
arpl
call
imul
xor
in
mov
cmp
nop
not
jmp
stc
mov
mov
inc
test
std
mov
xchg
push
in
lods
stc
jecxz,pn
and
xchg
and
push
aas
cmp
cmp
mov
add
and
xor
pop
push
push
xchg
aad
mov
loopne
aas
ljmp
jl
fcmovu
xor
push
mov
mov
hlt
pop
adc
test
dec
xor
jb
or
mov
mov
mov
sbb
pop
inc
or
and
inc
cmpsl
xchg
fistpl
push
push
adc
inc
sti
call
mov
xchg
cmp
movsb
push
cmp
jp
adcb
dec
cmpsb
add
fucomip
inc
repnz
or
cmp
xlat
testb
das
inc
or
push
faddl
call
pop
testb
sub
aaa
negl
push
outsl
mov
cmp
inc
and
lret
pusha
push
mov
mov
and
xchg
pop
cmpsl
loopne
mov
xchg
out
aaa
cs
or
test
pop
sub
fstpt
fwait
imul
rorl
push
mov
jae
dec
xor
fnstsw
shrb
jbe
xchg
in
shll
imul
int
aaa
mov
mov
push
call
mov
dec
adc
inc
xchg
movsl
fldcw
shl
std
xchg
ss
xor
adc
fdiv
popl
push
cmp
push
out
das
ss
xor
cmpsb
and
mov
dec
jl
mov
mov
cmp
mov
mov
inc
push
mov
mov
loopne
jg
aam
add
sub
jne
sbb
push
mov
sbb
fstpt
icebp
mov
in
js
xchg
fsubrl
push
xor
push
or
stos
sub
js
repnz
cmp
sarb
push
repnz
aad
fwait
scas
sahf
repnz
jl
dec
test
out
push
stos
cmp
les
test
inc
out
mov
push
xor
jb
sub
fnsave
push
jno
popa
cmc
mov
xchg
pushf
cltd
das
cld
mov
lcall
xor
sub
jo
enter
int
mov
xchg
sbb
mov
call
cs
inc
hlt
cmpsb
adc
add
fidivrs
ja
in
scas
pop
xchg
enter
fs
arpl
jnp
mov
cmp
dec
popf
push
sub
push
adc
push
xor
dec
sbb
xchg
jg
inc
ss
push
jns
mov
ds
lea
out
mov
int3
mov
pop
ds
lock
shl
test
es
mov
xchg
mov
iret
popa
gs
sub
push
lret
fimull
in
ss
sub
fdivrl
jb
push
out
adc
fdivs
push
outsw
or
pop
arpl
data16
popa
or
pop
cmp
fwait
push
pop
inc
fs
sti
and
mov
mov
mov
fsubp
xor
adc
jge
mov
ret
xor
dec
mov
and
jne
xor
sti
pop
insl
jge
decl
jb
mov
int3
mov
pop
mov
pop
mov
icebp
insb
addr16
stc
xchg
scas
dec
add
movsb
xor
push
mov
mov
iret
imul
lods
and
sub
jno
sbb
jne
or
xchg
jp
je
cmc
and
int3
popa
cmp
jno
add
push
dec
inc
int3
sub
sbb
fwait
adc
xchg
int
std
mov
iret
imul
mov
jmp
mov
lret
loopne
in
test
fcmovnb
mov
pop
jle
notb
mov
mov
mov
pop
add
lods
sbb
ljmp
sub
jae
jb
or
mov
popa
gs
insl
push
xor
popa
dec
hlt
mov
lods
daa
and
cmpsb
sbb
dec
fucom
xor
dec
ds
mov
int3
jmp
pop
nop
imul
shll
arpl
jns
xor
dec
pop
xor
dec
add
dec
in
cld
jae
add
fcmovu
push
sbb
sbb
pushf
dec
and
mov
mov
shlb
mov
sti
jo
scas
mov
add
scas
adc
faddl
mov
xor
inc
shll
inc
mov
shlb
idiv
leave
or
or
dec
xchg
mov
in
das
hlt
inc
sub
mov
cmp
mov
ds
das
clc
adc
std
jbe
daa
sbb
shl
mov
cltd
scas
in
flds
test
hlt
sbb
inc
and
test
leave
push
mov
mov
aam
js
test
pushf
mov
mov
cld
push
lahf
jo
pop
push
push
movsl
popa
fsubrs
sahf
sbb
pop
rcrl
pop
subb
fildll
sahf
adc
aad
leave
mov
mov
mov
fdivl
cmp
and
js
push
hlt
cmp
sti
and
movsl
mov
cmp
dec
sub
xor
imul
inc
loop
out
bound
jbe
addr16
pop
mov
rclb
mov
sub
mov
cli
icebp
jbe
push
in
test
jnp
xchg
lret
scas
les
andb
inc
ljmp
cmp
rcrl
mov
cwtl
mov
cmp
rcll
outsb
lock
lret
mov
sbb
cmp
cmp
jo
jp
stos
push
mov
aam
push
dec
je
mov
aas
int
outsb
add
and
leave
xchg
and
inc
push
xchg
ret
pop
jb
mov
inc
popf
cmp
xor
adcl
mov
test
shlb
mov
ret
je
cmpsl
sub
mov
aam
or
sbb
xchg
jp
push
or
and
pusha
adc
xchg
or
jbe
jecxz
sbb
pop
stos
daa
add
test
ss
dec
pop
rol
iret
xor
cmpsb
test
lahf
push
mov
pop
jno
or
dec
arpl
inc
fwait
add
xchg
pop
pop
lea
int
push
jge
add
inc
in
add
mov
and
stc
pop
mov
rcrl
pusha
xchg
insb
ja
ret
stos
lods
lods
sub
pop
mov
adc
rclb
es
ljmp
pop
and
push
push
imul
pop
cs
and
pushf
push
test
movsl
mov
daa
int3
cld
add
inc
scas
cmpsl
ja
or
add
aaa
in
jb
push
dec
mov
jl
ret
xchg
dec
sbb
pop
xchg
ljmp
cmp
xor
push
sub
out
addb
and
fimuls
xchg
loop
bound
xor
mov
fildll
xchg
les
in
push
es
pusha
cmp
das
jp
dec
xor
cmp
loop
notl
mov
adc
out
xor
loope
jne
mov
jle
popa
dec
push
and
dec
addr16
mov
cwtl
arpl
fwait
shrb
push
iret
sahf
push
in
fldl
das
outsl
loop
cltd
sub
jg
push
pop
adc
cmp
stos
shll
iret
dec
push
in
sbb
dec
stc
and
push
in
cs
and
cld
ljmp
dec
pop
or
es
dec
add
push
sbbb
xor
xor
mov
mov
or
pop
test
inc
pop
sbb
cmp
fldt
dec
xchg
xchg
inc
out
test
mov
dec
push
or
ret
aam
cli
adc
cmp
push
out
sbb
aaa
loope
sub
mov
cmp
pop
lret
jp
enter
mov
pop
jg
insl
in
jecxz
inc
xchg
dec
ja
xchg
lea
jecxz
aas
aas
push
mov
cmp
orl
or
sub
jb
cltd
int
stc
bound
and
call
and
std
mov
rcll
popf
les
lods
or
fstl
adc
inc
divb
clts
in
dec
jne
jge
fs
insb
or
jae
sbb
xlat
jno
sub
cmp
mov
xchg
xchg
scas
jo
clc
clc
xor
clc
pop
jo
pusha
out
pop
insb
bound
insl
jecxz
jbe
leave
rcrb
and
daa
inc
aam
lret
jnp
pop
or
aam
movsb
dec
push
mov
ret
je
arpl
xchg
dec
mov
arpl
xor
xlat
cmpb
and
andl
sti
cmp
dec
shll
jnp
jmp
ljmp
xor
push
adc
push
cwtl
push
mov
das
mov
cld
mov
mov
fimuls
ret
loope
or
push
sahf
repnz
lcall
out
mov
push
repnz
sub
arpl
fs
xor
jecxz
ret
negl
inc
ret
or
xlat
cwtl
sbb
push
pop
daa
pop
movsl
or
dec
je
pop
mov
fdivrl
push
cwtl
cmp
push
pop
ja
and
idivb
push
pushf
push
push
mov
aaa
outsb
out
xchg
mov
orb
and
test
jb
or
push
jnp
jns
leave
lret
addr16
rcll
dec
imul
arpl
leave
jmp
adc
mov
push
cld
movsb
inc
test
in
dec
jo
test
inc
sub
fimuls
add
loope
sub
test
aas
inc
adc
cs
mov
mov
xorb
inc
lods
jne
xchg
mov
adc
mov
xlat
popa
ficoml
push
xor
int3
adc
lret
jnp
and
das
ucomiss
stc
push
stos
cmpsb
cmp
jp
rcll
fsubl
add
dec
in
je
stos
xchg
mov
fisubl
push
insb
fidivs
call
pop
jnp
out
push
or
sbb
pop
test
outsb
jl
nop
push
dec
out
dec
out
mov
frstor
xlat
popf
jbe
adc
xchg
cmp
outsl
test
mov
fucomip
add
push
and
jmp
sub
mov
test
xor
jb
frstor
push
mov
cmpsl
jp
fiadds
aam
aad
outsb
nop
xor
and
test
mov
inc
adc
loop
lret
mov
add
xchg
xor
int
xchg
add
mov
scas
inc
dec
int3
stos
push
mov
jmp
xor
adc
xlat
dec
mov
dec
jnp
aam
incl
dec
mov
push
outsl
lret
mov
movsl
fsubrl
and
xchg
cmp
push
pop
inc
testb
xor
cmp
fucomp
jb
jmp
cmp
aam
stos
pop
or
fcmovnbe
jnp
cld
fadd
inc
pop
lahf
mov
push
je
fldl
fs
adc
fisttpll
add
jnp
jne
aaa
dec
add
in
sub
mov
sbb
jmp
flds
mov
sarl
xchg
or
mov
adc
jle
or
and
lods
adc
shl
jp
push
push
pushfw
sbb
cld
negl
xorb
push
cmp
mov
mov
push
es
cmpsl
aas
popa
std
movsb
insl
imul
push
push
sub
inc
rcrl
loope
pushf
xchg
dec
add
fisubs
push
test
xchg
cmp
sub
hlt
jl
xchg
or
mov
arpl
cmc
pop
mov
test
ljmp
loope
adc
inc
inc
jecxz
dec
push
inc
push
xor
in
mov
inc
xchg
cltd
cwtl
stos
es
mov
jnp
xor
dec
xchg
mov
dec
divb
ret
cmp
pusha
mov
fnsave
mov
insl
icebp
pop
lock
push
popa
nop
daa
mov
aas
jg
arpl
jge
stc
add
jo
mov
fs
dec
outsb
and
ds
fisubrs
lds
stos
mov
loopne
or
inc
jne
jae
push
jno
call
and
outsl
ret
lds
pop
and
pusha
addr16
dec
pop
inc
ds
fdivr
shl
loop
add
mov
sar
dec
mov
fisttpl
enter
fsubr
adc
cld
ret
jo
in
je
dec
add
loope
imul
sbb
scas
jp
out
push
call
push
pop
xorl
repnz
dec
add
enter
xchg
or
sub
daa
or
loopne
imul
das
jbe
jmp
xchg
aas
leave
fwait
and
les
test
test
and
jmp
inc
std
cmp
mov
sbb
adc
stc
addr16
dec
cld
mov
cmp
mov
xor
adc
cmp
sbb
in
movsb
call
cmp
scas
inc
out
test
jp
xor
sub
push
or
jo
adc
loope
lods
movsl
loop
test
sub
enter
icebp
jb
pop
imul
push
ror
sub
mov
daa
pop
xor
mov
dec
or
push
mov
fnstenv
flds
out
add
push
inc
je
pop
fsub
xor
iret
cltd
hlt
dec
sbb
xchg
add
in
cld
sbb
aas
jnp
cld
mov
inc
add
bound
bound
mov
dec
test
jae
out
sub
lods
inc
jp
dec
movsl
adc
xlat
popa
test
cmc
add
adc
ljmp
and
or
int
std
rorb
repnz
iret
aas
cmp
cmp
ret
popf
adc
cmpb
jno
sahf
ja
sbb
pop
sub
cwtl
lock
sub
add
and
pop
jle
sbb
or
xor
jl
pushf
shll
test
arpl
std
fbstp
fimuls
fsubl
xor
adc
jmp
xlat
cmp
stos
call
bound
push
xor
and
mov
add
repz
or
jecxz
outsl
lcall
mov
adc
rcrl
push
push
or
and
xor
xchg
mov
rcrb
mov
pop
daa
iret
adc
insl
jmp
cmp
sti
jp
loopne
jl
loope
in
ja
mov
xchg
inc
int3
addl
add
in
dec
test
sbb
mov
add
adc
cmc
mov
add
adc
xchg
mov
xor
jmp
int
enter
cmp
mov
pop
mov
jno
lods
cmp
aas
sbb
or
out
or
and
into
in
movl
adcl
loop
jno
lds
or
cmc
idivb
mov
pop
stc
leave
negl
cmp
aam
loop
xchg
dec
mov
sbb
lcall
std
cltd
jmp
addr16
rcll
pop
adc
mov
mov
jecxz
loopne
js
sbb
imul
dec
adc
adc
repz
mov
or
lods
js
test
fwait
inc
jp
enter
pop
jg
outsb
sbb
int3
xorl
push
int3
add
jl
cwtl
xor
fadds
inc
pop
fldl
dec
std
cwtl
scas
pusha
ret
push
daa
clc
pop
test
sub
sti
js
pop
stos
pop
inc
push
add
repz
insb
in
jge
int3
rorl
or
test
sbb
shlb
sbb
icebp
inc
fbstp
cli
xchg
inc
test
stos
xchg
cmp
jl
mov
cmpsl
inc
jg
insb
mov
fdiv
mov
pop
adc
scas
test
cmp
and
and
xchg
dec
cmp
stc
sub
cltd
push
inc
push
lds
out
dec
rcll
xchg
mov
daa
aas
lds
adc
dec
jnp
inc
popl
lods
daa
cltd
js
movsl
fcmovu
and
cmpsb
xchg
jl
sbb
cmpsb
mov
movsb
stc
add
test
adc
ficompl
add
pop
xchg
scas
arpl
jge
pop
push
iret
mov
aam
pop
mov
xor
inc
push
lahf
test
dec
repz
imul
mov
shl
mov
pmaxub
sbb
mov
add
pusha
loopne
pusha
add
xchg
test
push
popf
lret
lods
xchg
mov
cmp
mov
jecxz
add
aaa
add
mov
enter
movsl
popa
aaa
cmp
sti
int3
jb
pop
imul
pop
movsl
mov
in
mov
hlt
outsl
movl
jl
sub
rol
sub
fadds
mov
ds
mov
shrb
mov
aaa
push
mov
jmp
push
mov
cld
push
sub
xor
cltd
cmp
cmpsb
push
jp
inc
jne
mov
push
arpl
cmpsb
fs
jb
repnz
cmpsl
sbb
xchg
ret
mov
mov
outsl
push
lods
sub
mov
xchg
gs
lods
push
in
aaa
cmp
mov
or
push
add
lcall
lret
push
jge
cli
icebp
jmp
and
mov
adc
inc
pop
setae
sub
push
scas
in
sub
mov
aam
cmp
jno
movsl
cmpsb
cmp
cs
inc
rcrb
call
add
dec
push
jne
ja
les
stos
push
je
push
sub
lret
xor
scas
inc
cmp
mov
es
xchg
divb
sbb
leave
test
inc
andb
pop
adc
fadds
cmpsl
xchg
stos
add
in
adc
in
push
lds
jg
xchg
and
mov
data16
ret
insb
fiadds
jmp
lcall
daa
lcall
and
sub
push
movb
das
dec
pop
jns
xchg
push
shlb
mov
fucomp
insl
adc
enter
sbb
jbe
in
sbb
stos
ffree
and
aad
repz
push
insl
dec
mov
lea
xchg
gs
in
lods
loop
icebp
leave
imul
ret
xor
sub
xor
and
mov
xchg
jbe
rol
xchg
orb
inc
jl
push
push
ljmp
inc
rcrb
in
clc
jp
jno
mov
pop
movsb
aas
mov
mov
test
add
xchg
pop
outsb
dec
pushf
xor
push
dec
xor
jge
cmpsb
test
mov
mov
dec
repz
dec
pop
imul
leave
push
shl
xchg
dec
mov
lahf
ja
push
pop
inc
andb
aam
mov
pop
addr16
adc
adc
and
cmc
iret
sub
aas
mov
xor
lahf
test
inc
rcll
sbb
push
pusha
or
fcompl
jno
das
fsub
xchg
jg
mov
push
inc
ret
lret
pop
lds
sub
xlat
mov
adc
iret
mov
xchg
loopne
or
pop
dec
sbb
in
cmpsb
xchg
imul
sbb
out
sbb
sbb
xchg
out
mov
adc
jno
fbstp
sub
cwtl
pop
pop
in
popa
sbb
jno
jl
jne
xor
pusha
inc
mov
addr16
outsl
dec
push
push
sbb
adc
pop
pop
repnz
dec
pop
mov
aad
mov
int3
icebp
lock
push
cmp
fs
mov
mov
pop
pop
cmp
lahf
aad
dec
and
add
mov
stos
mov
add
iret
aad
inc
test
sub
xchg
cmpsl
dec
xchg
xor
outsl
aaa
je
dec
je
rcll
and
push
subb
ljmp
aad
and
clc
std
iret
outsl
mov
mov
imull
dec
rcll
repz
mov
lahf
push
xor
mov
mov
lea
faddl
into
adc
cmp
dec
mov
sub
fistpll
lods
jg
outsl
inc
in
inc
push
or
mov
lahf
inc
imul
enter
into
insb
cmp
dec
es
mov
imul
movsb
sti
orl
jecxz
mov
mov
or
rclb
cmovbe
push
mov
sub
mov
dec
and
shrb
hlt
fcomp
aaa
ret
add
sahf
cmp
out
jb
repz
fxam
push
mov
mov
add
add
in
imul
adcl
inc
test
lahf
inc
mov
inc
pop
out
mov
add
xor
pop
mov
mov
int
ret
mov
jle
jp
aas
lahf
gs
jnp
pop
jl
fcom
or
lods
push
gs
mov
lret
adc
add
fxch
or
mov
or
mov
movsl
loope
xchg
cwtl
or
daa
inc
mov
xlat
jg
les
popa
mov
mov
shll
add
test
jnp
add
data16
enter
push
pushf
popa
push
in
mov
and
daa
push
xor
push
loope
sbb
or
jle
in
jecxz
cmp
jmp
fmul
mov
dec
fsubrp
inc
inc
ljmp
mov
movsl
testl
loope
incb
push
repnz
push
ret
push
jl
jb
sub
insb
fdivs
lahf
call
clc
out
in
mov
sbb
mov
jns
mov
je
lock
add
cli
mov
jns
loope
pop
divl
negb
cmp
in
mov
sbb
jnp
in
cmp
jae
inc
mov
xchg
adc
sbb
cmp
dec
lret
cmp
insb
mov
in
mov
xor
cwtl
stos
jno
adc
shll
cmpl
cmp
inc
jne
lds
push
lahf
add
inc
mov
jecxz
mov
pop
lock
adc
xor
int
inc
test
mov
daa
ljmp
fnstenv
jmp
push
and
pushf
mov
xor
cld
popa
imulb
cmp
sub
daa
mov
rorb
xchg
repz
lahf
lock
lret
pushf
aad
and
int3
pop
jae
jmp
push
mov
cmp
movb
test
sarl
test
dec
mov
std
xlat
inc
aad
mul
cld
mov
or
hlt
roll
push
mov
dec
sarb
sub
and
dec
in
xchg
sbb
pop
movsb
lcall
ret
or
pandn
sbb
data16
test
movsl
cs
fmull
cmp
out
lock
loop
mov
jge
xchg
movsl
push
push
cmc
daa
call
sub
loopne
ficompl
nop
mov
fisubl
mov
add
jb
pop
mov
xchg
jb
xchg
pop
hlt
mov
or
test
dec
jo
enter
mov
pop
ret
ja
cltd
cmc
pusha
pop
test
dec
ljmp
dec
clc
and
jbe
mul
shl
bound
pop
jno
jno
push
sbb
adc
dec
jbe
lahf
clc
aad
dec
jbe
test
add
popa
lea
mov
push
aad
imul
je
mov
cmp
les
pop
outsb
mov
mov
mov
test
int3
cmp
adc
jo
ljmp
int
mov
pusha
bound
pushf
mov
iret
lock
lcall
sub
das
repnz
adc
je
dec
mov
mov
iret
xlat
out
mov
jp
push
daa
cmp
sub
adc
xor
sub
pop
ret
mov
mov
push
xchg
mov
and
hlt
pop
mov
test
inc
outsl
scas
rcrb
cmp
xlat
mov
sub
or
inc
les
into
addb
jae
popf
into
clc
cmp
cli
sbb
leave
ret
cmp
mov
es
sub
sahf
lock
sbb
ds
mov
leave
dec
cmp
push
adc
add
leave
xchg
xchg
lahf
pop
push
push
mov
pop
stc
dec
dec
push
cli
mov
add
cmp
adc
push
gs
mov
sbb
xchg
stos
push
fucomp
sbb
ljmp
or
mov
lret
ss
cmp
and
inc
mov
push
das
add
std
test
or
mov
jp
out
pop
sar
inc
shll
icebp
js
inc
pop
pop
aam
pop
adc
mov
mov
ret
sbb
adcb
rorl
and
pusha
fisubrl
push
inc
xchg
cmp
push
inc
jb
dec
into
xchg
mov
and
or
dec
out
mov
xor
fidivs
into
pop
cli
cli
inc
ja
test
ror
push
mov
mov
xlat
repnz
cli
pop
dec
sub
mov
adc
xchg
push
sub
sub
pusha
into
out
lods
scas
aam
mov
fcmovnb
lret
inc
jo
je
pop
and
inc
aaa
mov
pop
pushf
add
cmc
add
push
xor
push
mov
inc
mov
lea
adcb
fadd
inc
mov
sbb
imul
int
pop
ljmp
lret
and
jge
ja
mov
add
push
rcrb
pop
mov
inc
or
mov
jno
shl
add
imul
adc
sub
cmp
je
dec
add
add
aam
idivl
jge
xor
add
mov
ja
and
jecxz
inc
push
pusha
call
subb
lods
dec
push
mov
pop
jb
shll
pop
cmpsl
jo
add
push
xchg
sub
inc
sub
mov
lods
xor
imul
dec
cmp
jmp
mov
push
or
xlat
gs
sahf
jbe
movsb
xchg
push
jo
cmpsb
mov
mov
fidivrl
clc
enter
std
adc
dec
fucom
jne
fists
push
add
mov
scas
dec
adc
daa
inc
lods
pop
lret
adc
scas
inc
jae
repz
inc
idivl
xor
fdivl
fdivl
nop
lcall
aad
fistpl
push
test
ret
xchg
mov
hlt
pusha
movb
js
bound
insb
std
or
lcall
xchg
inc
das
dec
outsl
add
mov
or
dec
xor
mov
cld
and
jle
lods
mov
loopne
inc
jp
inc
inc
loope
jbe
or
cwtl
fcmovu
or
lret
cli
ret
cmp
scas
mov
test
cmp
addr16
scas
hlt
fucomip
mov
je
push
mov
repnz
inc
push
jge
xor
out
add
add
dec
xchg
mov
pusha
add
jb
or
dec
mov
shl
mov
dec
fisttpll
mov
into
jne
xor
push
cltd
mov
loop
pop
xchg
stos
jge
pop
fldl
loopne
lahf
sbb
out
sbb
in
lret
pop
stos
mov
push
sbb
stc
lcall
dec
imul
push
stos
xor
jge
push
mov
test
add
cwtl
scas
addl
inc
bound
int3
mov
bound
movsl
js
inc
movsb
jecxz
xor
add
xchg
push
gs
dec
dec
push
cmc
adc
fld
jno
inc
mov
push
test
mov
popf
arpl
mov
ljmp
jb
mov
push
sbb
outsb
cmc
pop
call
sarb
add
cwtl
add
sub
loope
in
orl
xor
fdiv
fwait
xor
pop
cmpsb
push
dec
jle
mov
nop
out
sti
fs
cmpsb
push
mov
shl
lret
lds
or
fstp
jno
inc
insl
dec
shlb
shll
in
cmp
xchg
shll
les
cmp
movsl
adc
sub
outsb
cmpsl
add
movsl
loopne
aad
jns
lcall
xchg
std
loope
cli
stos
es
xchg
xlat
imul
cmp
or
dec
roll
imul
sub
inc
test
pop
outsl
bound
jge
mov
outsb
and
loopne
mov
scas
ljmp
mov
les
sub
inc
in
repnz
cmpsl
jge
sahf
jmp
div
dec
jge
pmaxsw
lcall
xorb
lods
sbb
ja
ficoml
mov
shll
fs
jb
fcomp
test
mov
xchg
cld
jl
pushf
lret
pop
add
pusha
mov
inc
fsts
hlt
in
lds
stos
push
lret
jge
in
add
dec
pop
lret
dec
jne
inc
cmpsl
daa
sbb
ja
mov
lods
addr16
adc
dec
pusha
dec
bound
pop
addr16
scas
pop
mov
cmpl
push
mov
xchg
push
stc
adc
push
jb
or
inc
xor
sbb
ret
sar
incb
pop
popf
push
shl
in
popa
fidivrs
sbb
adc
pop
mov
or
aaa
sub
scas
cmp
add
dec
cmp
pop
jle
xor
addl
ret
lcall
add
adcl
jbe
andb
mov
jge
ret
xor
xor
test
jns
sbb
dec
lcall
imulb
adc
mov
imul
and
adc
dec
add
dec
adc
loopne
mov
addr16
fdivs
leave
pop
xor
jae
outsb
jecxz
sub
jne
cmp
and
or
lahf
inc
mov
lahf
adc
aam
sub
mov
imul
sbb
sub
shll
mov
inc
and
dec
ljmp
dec
or
mov
mov
scas
aaa
mov
dec
add
pop
rorl
rcr
add
call
inc
test
out
sub
loop
sub
cltd
push
test
daa
cmpsb
dec
movsl
stos
or
into
and
sub
sub
or
adc
mov
movsb
std
jp
ljmp
push
mov
and
pop
shll
dec
push
dec
je
lds
lret
mov
pushf
mov
push
ja
rcrl
push
inc
mov
pop
mov
xchg
xor
push
mov
int
ja
in
add
mov
enter
push
jns
or
adc
fidivs
stc
pop
xor
sbb
test
rol
inc
out
inc
stos
loope
gs
bound
das
cmp
bound
out
sbb
mov
dec
sub
out
repz
fldt
es
je
push
outsl
mov
je
xchg
mov
push
cs
add
mov
fcoms
rcrb
xchg
pop
jecxz
mov
sub
lret
outsl
or
sub
xchg
adc
sbb
lret
xchg
or
dec
add
mov
testl
cmpsl
cs
sbb
clc
cmp
xor
jecxz
inc
in
iret
sarb
stc
aaa
loope
fs
push
ret
fists
pop
push
pop
push
js
mov
jno
enter
mov
inc
fisubrs
push
dec
adc
loope
cmp
ds
and
inc
adcb
sub
das
mov
popa
jo
insb
mull
divl
inc
sbb
loopne
fs
or
lods
ja
cmovnp
movsl
rorl
sub
lods
fistps
rcl
xchg
pop
jg
bound
fsts
out
and
inc
shrb
clc
repz
mov
mov
mov
jno
cmp
cmp
ficoml
mov
dec
cmpsb
test
rclb
lea
int
pop
ret
iret
insl
add
packssdw
xchg
aam
inc
jmp
and
jge
pop
xchg
jb
stc
pop
cs
pop
jl
in
es
xor
rorb
pop
xor
aas
xor
jne
movsb
daa
test
inc
sub
mov
insl
pop
adc
out
sub
push
mov
popa
repnz
and
mov
sub
and
dec
addl
mov
mov
testl
jp
pop
mov
loope
rcr
lahf
bound
shlb
mov
mov
or
mov
fdivrl
gs
fldl
enter
add
lea
push
rolb
inc
push
iret
cmc
loope
push
aam
je
push
and
mov
in
movsl
int3
loopne
mov
add
cmp
lods
ret
pop
xchg
pop
fcompl
mov
jge
jno
js
jge
lods
sub
mov
and
imull
repnz
jnp
pop
lods
adc
int
js
lcall
sbb
inc
cli
adc
cltd
mov
int
bound
stos
push
xchg
repnz
adc
aam
cmpsl
dec
clc
xor
push
or
mov
pop
xor
cmp
clc
scas
mov
add
cmpsl
aam
push
dec
and
xor
shl
xchg
sub
fldz
pop
add
test
loopne
xchg
adc
cli
fmulp
push
popf
mov
popf
inc
adc
pop
lea
shrb
aaa
ret
inc
pop
add
sub
and
fsubs
ficoms
mov
repnz
int
into
push
jae
jbe
outsb
sbb
sub
or
ljmp
cmp
and
mov
popf
sub
in
adc
pop
bound
and
js
and
mov
mov
pop
mov
lret
mov
mov
aas
cmc
or
sbb
add
mov
scas
inc
lds
imul
mov
sbb
and
lea
shll
xchg
mov
push
in
pop
fprem
fwait
xchg
xchg
mov
js
pop
jle
xor
push
add
sbb
mov
add
pop
test
jmp
leave
fprem1
xchg
inc
xor
sbb
loope
or
mov
sbb
imull
mov
stc
clc
jmp
mov
outsl
or
shl
pop
pop
mov
shl
aad
sbb
imul
jne
push
movsb
bound
sti
or
pop
xchg
pop
mov
js
shl
pusha
in
rorl
inc
xor
out
outsl
insl
mov
test
or
sub
jb
adc
insb
push
or
jb
adc
sbb
mov
js
mov
jb
into
add
scas
inc
pusha
fidivs
sub
es
negb
dec
dec
pop
dec
or
xor
loop
fcomi
mov
inc
rcrb
testl
repnz
fldenv
in
popa
mov
neg
insb
pop
ficoml
pushf
xchg
testl
dec
cs
repz
fiaddl
pop
inc
popa
cmc
cmp
mov
lea
lea
push
stc
push
cs
ja
test
mov
mov
jp
push
dec
in
mov
dec
enter
pop
mov
scas
rcrl
lahf
or
lds
movsb
outsb
jecxz
xchg
jmp
push
outsl
insl
jne
mov
icebp
cmp
mov
inc
sub
push
fimull
push
sub
mov
xchg
icebp
outsl
inc
pop
inc
mov
sub
cmp
mov
mov
mov
push
add
loope
insl
xlat
lret
fmull
or
icebp
push
mov
and
jp
repz
stc
adc
je
and
mov
in
mov
fwait
jno
mov
push
not
lahf
imul
xor
jno
rol
fisubl
sub
icebp
pop
dec
adc
and
dec
outsb
scas
jl
or
lods
out
mov
or
cmpb
aas
sbb
sbb
mov
mov
les
cmp
fstpt
dec
popf
test
inc
mov
jnp,pt
popa
sbb
mov
xor
sub
movsl
mov
out
add
leave
jns
les
cltd
xor
mov
cmp
sahf
jbe
sub
test
cmpl
xor
daa
adc
js
into
js
data16
jmp
es
imul
mov
push
popf
pop
jl
lcall
xchg
cmp
mov
sub
pushf
push
sbb
out
dec
das
nop
or
and
push
cltd
jnp
nop
lds
dec
clc
mov
loopne
sbb
mov
rdtsc
push
shr
xchg
aad
sbb
insl
daa
xor
call
pushf
sub
add
fnsave
cli
lods
pop
mov
cmp
fisttpl
shrb
fnstsw
sub
test
les
icebp
outsb
mov
add
inc
shll
shrl
xchg
xchg
mov
jb
lret
clc
and
aas
sarb
xor
cwtl
mov
xor
inc
aad
roll
sub
data16
mov
jae
test
sub
jg
mov
lea
mov
push
cmp
cmpsb
xchg
xor
call
xchg
rcrb
push
into
or
pop
out
pop
mov
mov
jnp
xchg
fmull
jmp
fidivrs
stos
sti
test
xor
aas
dec
pop
cld
fnstcw
adc
jecxz
sti
jge
das
notl
pusha
fidivrs
mov
inc
insl
pop
adc
mov
dec
cmp
mov
jle
pop
sar
or
push
lret
cltd
int3
clc
test
pop
adc
xor
int
cmc
enter
clc
sub
push
popa
and
push
fbld
cmp
fdivl
scas
sub
je
sub
loopne
rep
lcall
inc
fnstcw
pop
cmp
push
sub
or
sahf
andl
testl
and
adcb
sbb
movsl
push
xor
in
cltd
out
xchg
cmp
adc
cmp
loopne
add
out
aas
iret
adc
inc
push
sbb
jl
das
cmp
mov
scas
dec
addr16
mov
clc
mov
bound
lods
inc
stos
sbb
jns
pop
cmpsb
lret
ljmp
dec
test
lcall
lods
cmpsl
nopl
or
cmp
and
dec
dec
test
out
int
jbe
out
inc
cmc
mov
cmp
jmp
xor
fnstcw
out
mov
int
inc
shrl
dec
mov
xchg
mov
pushf
lock
sarl
mov
cmp
sbb
in
pop
flds
mov
and
dec
and
xor
sbb
xchg
into
test
insb
add
and
lea
int
insl
mov
cmp
rorl
cld
xchg
sbb
pop
aas
dec
int
out
aam
stc
movsl
mov
dec
jmp
das
cwtl
enter
push
rcrb
orb
xor
sub
or
xlat
lods
jmp
iret
jae
outsb
or
ja
leave
rcll
das
xchg
sbb
out
pop
adc
rcll
mov
mov
testb
cli
or
dec
fadd
cltd
cmp
notb
mov
lcall
cli
sti
push
jg
inc
ret
adc
inc
jnp
call
jmp
xchg
pop
ljmp
jge
sub
sahf
mov
add
xchg
push
movsl
xlat
mov
addr16
mov
sahf
ret
cmp
in
mov
rcl
and
mov
push
adc
nop
pop
cmp
inc
cmpsl
mov
mov
int
add
test
lds
mov
seto
scas
push
push
inc
les
or
push
movsl
and
into
xchg
xor
sarl
or
xchg
test
rorb
mov
fstpl
loop
je
ret
test
xchg
iret
jae
xlat
push
and
push
hlt
addb
push
dec
cmpsl
push
dec
xchg
aas
loopne
scas
lods
outsb
xchg
scas
rorb
jmp
push
mov
cli
rcl
fildl
push
jne
push
std
daa
and
mov
mov
dec
in
jmp
jb
and
push
das
xchg
icebp
dec
add
add
xchg
push
jp
cmpsb
daa
aas
mov
dec
pop
lds
xchg
cld
lcall
sub
inc
sbb
mov
mov
and
lcall
sbb
sarb
rol
push
xor
nop
test
pusha
jbe
mov
mov
mov
and
mov
cwtl
xor
mov
dec
mov
sub
test
mov
fildl
jnp
lahf
mov
rcll
sub
std
mov
out
adc
push
xor
repz
stc
or
inc
cmp
dec
push
out
sti
icebp
jge
mov
scas
xlat
mov
test
fucom
adc
mov
rolb
mov
cli
xor
jmp
sbbb
adc
int
pushw
sbb
lock
bound
call
movsl
out
xor
cltd
cs
xchg
cmp
loope
jmp
mov
imul
xchg
sub
jnp
xchg
sbb
outsl
scas
mov
jno
rcll
ds
test
shl
jbe
pop
repz
in
les
pop
mov
ja
mov
adc
mov
add
and
test
lods
hlt
inc
imul
cmp
xor
insb
jbe
stos
add
xchg
xchg
out
jle
mov
outsl
sub
sbb
les
popf
push
das
dec
sti
inc
dec
nop
out
inc
test
shlb
cmp
mov
subl
or
cli
fwait
imull
adc
and
ds
xor
inc
push
call
jl
stos
daa
adc
stos
fidivl
push
dec
and
lret
movsb
pop
inc
mov
out
dec
pop
mov
rcr
cmp
xor
dec
and
or
xchg
cld
cmp
mov
les
xor
dec
push
sti
xor
pop
cmpsl
cmp
pop
jmp
popf
mov
push
icebp
mov
jbe
add
mov
xor
lock
cmpsb
mov
nop
in
push
adc
pop
pop
fs
insl
pop
jo
sbbl
imul
lcall
iret
inc
cld
test
inc
push
subb
inc
stos
sub
scas
lret
push
and
addl
sub
cmp
mov
or
clc
inc
inc
in
iret
repnz
xlat
bound
pop
test
pop
sbb
std
test
dec
pop
xchg
inc
xchg
xchg
bound
in
test
js
or
dec
pop
mov
and
pop
je
push
cwtl
cmp
rcrl
repz
rcrl
andl
sbb
mov
dec
add
push
add
xchg
mov
adcb
loope
pop
hlt
jg
aaa
popa
xor
fcmovu
add
xchg
jecxz
mov
pusha
outsb
xchg
ja
jl
jnp
lret
lea
jb
mov
arpl
insl
xor
jae
ja
push
icebp
jo
jne
jp
pop
test
mov
lea
repz
adc
lds
adc
xor
call
dec
sbbb
ret
dec
subl
lret
xor
jno
inc
xor
sub
mov
daa
mov
mov
jns
into
lret
int3
je
cli
or
cmp
dec
pop
inc
mov
pop
adc
cmpl
dec
popa
rcrb
xor
scas
in
lret
ljmp
mov
pusha
push
ss
insb
push
ljmp
in
and
dec
cmp
xchg
test
inc
pop
pop
mov
in
test
ljmp
cli
adc
jno
mov
push
testb
je
xor
lahf
incb
mov
push
push
sbb
hlt
ret
jnp
test
cmc
mov
aaa
mov
xchg
xor
test
int
ret
dec
sti
mov
and
add
clc
inc
ja
add
adc
jbe
je
aam
xor
cmp
xchg
xor
repnz
xchg
adc
ret
mov
dec
pop
dec
mov
push
shll
int
add
inc
lcall
dec
dec
inc
fdivr
pop
in
mulb
test
loop
sub
fs
mov
sbb
lcall
cmp
inc
or
in
int3
fistpl
sbb
fwait
das
xor
xlat
pop
dec
xchg
xor
cmp
pop
add
test
inc
xor
xchg
push
cs
sbb
arpl
mov
xchg
loope
iret
sbb
fcmovnu
aad
xor
ja
stos
fwait
fwait
inc
outsl
xchg
testb
in
popa
xchg
test
addr16
pop
sub
out
rcrb
int3
imul
fidivl
dec
int
jge,pt
dec
jl
rcl
xchg
lods
dec
pop
mov
sbb
cltd
sub
flds
and
popf
in
ss
mov
cmp
int
xchg
and
mov
ret
push
push
sbb
adc
fidivs
stc
fs
loopne
jg
xor
fists
xchg
insb
dec
ss
mov
jmp
leave
jp
loop
outsl
std
or
cmp
cli
mov
inc
mov
sbb
xchg
mov
or
or
add
int
pop
aam
mov
jbe
mov
in
fcmovnb
mov
int3
jl
loope
cmc
aad
dec
xor
jae
mov
dec
inc
push
out
jno
fsubp
mov
dec
iret
mov
push
dec
out
push
jle
inc
mov
push
scas
mov
add
sbb
pop
mov
sub
fisttpl
loope
int
mov
sub
arpl
scas
stos
dec
dec
mov
cmpsb
out
movsl
and
pop
xchg
test
sahf
out
in
subb
sahf
mov
adc
add
sti
adc
outsl
push
lret
inc
cmp
bound
push
push
scas
outsb
add
out
sbb
cmp
iret
xchg
out
jnp
xchg
cmp
push
add
lahf
es
pop
mov
cltd
mov
lahf
enter
call
xor
push
cmp
cmpb
fmuls
sarl
aaa
inc
in
or
adc
scas
mov
push
jg
leave
push
add
sub
ja
rcr
pop
fstp
icebp
jmp
mov
mov
inc
and
aas
cmpsl
loope
std
aas
mov
shll
sub
insl
nopl
or
xchg
stos
orl
mov
cltd
lods
fisubs
rolb
mov
inc
jge
jg
lret
sub
mov
repz
sbb
or
lds
aam
xor
dec
xor
xor
cmp
outsb
mov
test
xor
sar
jmp
insb
ret
shl
dec
mov
fadds
js
js
andb
in
mov
shll
push
sbb
cltd
inc
outsl
lcall
add
pushf
jae
pop
cltd
call
test
push
out
and
mov
jmp
mov
movsb
mov
jp
and
xchg
adc
call
sahf
sub
sbb
popf
clc
loopne
mov
arpl
dec
lds
sub
mov
sbb
push
mov
sbb
cmpsl
add
xor
mov
push
inc
loope
mov
nop
mov
sbb
jmp
xor
cmp
movsl
inc
gs
and
lahf
cmp
or
mov
mov
loope
sti
jae
stc
sti
or
xchg
and
imull
mov
jae
push
andl
test
mov
or
xor
fists
pop
adc
add
push
out
xchg
xchg
xchg
sti
ficomps
cmp
shrl
dec
lcall
and
notb
push
loopne
or
out
or
mov
scas
jg
sub
mov
in
mov
jmp
lods
mov
out
xchg
sahf
mov
shlb
cli
and
arpl
sub
inc
jns
clc
jno
sub
mov
sbb
out
lahf
mov
lods
xor
cld
and
fwait
add
insb
outsb
xor
fcmovu
mov
mov
sub
push
mov
nop
push
es
divb
ficomps
jle
and
mov
je
add
pop
add
and
push
inc
push
mov
or
mov
dec
add
add
popa
lock
roll
sub
adc
push
mov
lods
adc
test
pop
aad
jbe
pop
mov
sub
or
dec
and
sbb
rcrl
push
mov
clc
adc
sub
js
jecxz
xor
scas
sub
dec
sub
std
mov
int
jbe
fxch
mov
outsl
dec
mov
jl
inc
fistpll
sub
or
and
add
test
stos
cmp
adc
in
fs
dec
inc
sub
insb
ret
xlat
cmpsl
push
add
inc
dec
mov
loopne
shll
jle
pop
pop
hlt
xor
sub
dec
data16
inc
mov
push
scas
es
pop
or
sbb
mov
aam
push
jecxz
push
lods
and
repz
fsubrs
mov
pop
add
scas
push
adc
sub
ja
stos
xchg
pusha
dec
sub
jecxz
rolb
xor
sti
mov
lock
mov
add
mov
lock
sub
nop
popa
and
aad
add
out
or
add
ljmp
jp
insb
add
xchg
and
jns
xchg
movsl
scas
ret
aas
jmp
xor
jns
fldcw
into
mov
cli
call
xchg
mov
fistpl
adc
adc
and
push
testb
push
in
in
xchg
xor
fdivl
int
insl
icebp
adc
inc
nop
cwtl
pop
push
enter
or
add
or
in
jo
loope
in
fisubs
test
ss
xchg
mov
sub
xchg
testl
push
cmp
clc
push
sub
push
sti
mov
ljmp
ds
push
add
adc
add
push
popa
in
lahf
sbbb
mov
aaa
je
movsb
dec
fdivl
inc
mov
jge
xchg
lods
jl
jp
mov
push
inc
xor
stos
mov
xlat
in
push
loope
rorb
inc
xchg
xchg
int
ja
cmp
into
dec
pop
push
xchg
enter
adc
in
sub
add
fwait
lea
popf
popf
add
or
lret
cvtps2pd
je
cli
pop
rcll
mov
daa
push
int
add
mov
jo
movsb
ret
dec
les
mov
ret
das
pop
movsl
or
adc
push
lret
sar
adc
xchg
mov
xor
mov
mov
test
add
xor
out
xchg
hlt
shrb
cmpsl
iret
or
dec
lea
push
xchg
xchg
movsb
xor
movsb
adc
jge
dec
sbb
fisubs
test
jle
mov
fstp
pop
es
xlat
cltd
daa
sub
pop
or
jns
dec
jge
rcrl
push
inc
push
sbb
jno
or
mov
out
add
sbb
mov
and
mov
push
cmc
cld
xlat
sti
jecxz
adc
jp
daa
pop
mov
and
mov
repz
dec
add
inc
push
sarl
mov
pop
js
push
and
lahf
mov
cmp
addl
stc
lret
add
or
lret
jno
movsl
mov
adc
addr16
daa
imul
cmpsb
lock
je
or
pop
xor
lahf
aaa
shrb
dec
roll
jns
xor
popf
pop
jb
les
aad
jns
fiaddl
add
mov
mov
mov
push
nop
out
fidivl
add
pop
sti
jle
rcr
iret
mov
pop
int3
insl
mov
pop
in
or
cmc
add
int3
aaa
in
imul
iret
xchg
ja
data16
lods
cmp
jg
and
aam
sub
sub
lods
cli
push
imul
in
jns
rep
mov
sbbb
cs
pop
ljmp
mov
stos
adc
mov
jmp
sahf
test
das
bswap
mov
xor
pushf
jbe
jp
push
inc
mov
push
popl
push
inc
jno
add
mov
pushf
jae
das
adc
jb
dec
lea
cmp
stos
jg
std
loope
xchg
pushf
mov
nop
xchg
mov
mov
repz
push
mov
mov
jae
lock
pop
sahf
mov
push
pop
lcall
mov
and
rcr
daa
test
sub
jg
popf
ret
and
and
and
inc
jnp
inc
js
jno
xor
sub
jae
fnsave
adc
pop
ss
or
out
cld
pop
push
and
mov
push
arpl
push
fists
ss
and
mov
hlt
add
mov
xchg
das
sub
sbb
inc
add
fidivrs
sbb
pop
in
mov
les
shlb
pop
loope
ret
addr16
dec
dec
add
xor
ret
pop
fidivs
push
mov
or
jp
xor
mov
ds
popl
shl
nop
in
std
pop
xchg
mov
jg
jl
data16
sbb
or
mov
pop
out
aam
gs
outsb
and
xchg
pushf
stos
std
movsb
fistps
and
xchg
inc
sub
insl
mov
jne
mov
cmpsb
shrl
add
xchg
mov
or
lcall
and
xchg
rorl
in
push
add
jb
arpl
lahf
jo
dec
xor
bound
sub
mov
inc
add
inc
call
or
sub
jnp
ss
mov
lock
leave
push
pop
pop
in
rcll
cmpsl
pop
add
dec
aaa
or
test
call
adcb
jge
ljmp
add
aad
roll
xor
call
push
icebp
push
inc
push
jae
shll
fs
cli
jp
or
js
ja
std
dec
adc
sbb
pop
out
push
addr16
inc
aas
fwait
inc
repz
insl
ja
scas
sbb
sub
inc
cmp
xor
push
fisttpl
inc
or
push
idivl
xor
inc
cld
mov
or
xor
dec
jnp
sub
jmp
addb
add
or
je
test
xchg
dec
mov
dec
inc
mov
cmp
aaa
rcll
or
inc
mov
pop
mov
adc
sarl
pop
jnp
jbe
aaa
cltd
fs
shl
add
insb
fs
fsubl
add
sub
out
icebp
jno
out
pop
sub
pusha
and
xlat
insl
mov
scas
dec
lods
sub
mov
mov
adc
pusha
dec
cmp
inc
jecxz
sbb
xchg
xlat
fs
inc
adc
stos
jno
dec
xchg
mov
adc
shrb
sbb
out
inc
mov
aas
dec
mov
out
dec
and
nop
pop
sbb
push
or
fidivrl
cmc
jp
xchg
sbb
adc
inc
adcb
cmpsl
aaa
repz
lret
or
jg
cs
pcmpeqw
arpl
ja
cmp
inc
xor
cmp
sbb
xchg
into
jmp
test
jnp
cmpsl
mov
xor
pop
inc
icebp
inc
rorb
test
bound
cld
mov
pop
jae
insb
cltd
ss
xor
mov
data16
and
inc
inc
add
stos
lret
into
dec
stos
fisttpl
mov
xchg
cmp
testb
jge
stc
mov
push
rcr
mov
stc
xchg
in
mov
insb
in
lret
jmp
loopne
lcall
mov
adc
xchg
pop
loop
stc
jb
adc
mov
insb
jp
mov
addr16
mov
or
lds
jno
adc
lods
jge
jmp
cwtl
pop
lock
lds
orl
aam
pop
or
ss
aad
dec
and
dec
or
pop
pop
icebp
mov
jle
stos
xor
in
mov
lock
add
orb
gs
jae
sbb
push
sub
popa
fiadds
xor
test
xor
adc
mov
push
aas
out
pushf
or
fistl
cmp
push
dec
mov
ljmp
xchg
ljmp
or
loop
addb
push
lods
in
xor
push
add
mov
lods
gs
and
jae
cld
enter
xchg
pop
xor
outsl
inc
rclb
mov
dec
test
mov
out
push
mov
or
dec
inc
fidivrl
push
and
push
scas
push
pop
inc
mov
aam
add
aas
push
cmc
ret
mov
sbb
sarb
mov
movsl
fldl
mov
push
es
and
cmp
cmp
mov
cs
jnp
mov
sbb
sbbl
add
push
insb
push
jo
cmp
in
ret
pop
es
out
jg
outsb
dec
pop
add
outsl
outsl
pop
test
test
test
movsl
pop
add
mull
out
inc
insb
sub
sub
ljmp
pop
stos
mov
cmp
pop
fsts
sub
add
xchg
xor
gs
popa
lret
out
mov
jmp
test
int3
xchg
mov
or
cld
mov
sbb
popf
movsb
insl
pop
push
rcrb
or
sub
push
jo
xchg
adc
imul
sahf
pop
mov
int3
pop
cmp
sub
sbb
test
inc
adc
int
std
fsubrp
mov
or
out
cmp
mov
xchg
lret
outsb
out
adc
incb
notl
jmp
push
cmp
sbb
dec
out
in
cmp
psraw
and
aaa
add
aas
mov
push
bound
cmp
mov
jmp
sub
mull
shl
je
pop
jl
xchg
sbb
xor
push
lods
out
iret
jno
bnd
or
fucom
and
add
popf
out
mov
push
cld
repnz
lret
ficoml
sti
cltd
orl
mov
cwtl
inc
and
mov
mov
add
mov
sbb
mov
lods
shrb
cmp
pop
std
sub
jno
mov
pop
lock
sbbl
push
xchg
notb
and
inc
xchg
dec
mov
in
dec
dec
fcmovu
fwait
mov
lret
mov
pop
mov
mov
sbb
mov
jae
enter
sbb
inc
or
fisttpl
jns
sbb
adc
cmpsl
mov
jbe
xchg
and
mov
sbb
jg
push
into
dec
daa
adcb
shl
jecxz
out
jl
mov
in
push
cmpsl
add
hlt
push
dec
push
push
ss
mov
sub
xor
xchg
inc
mov
xchg
outsb
mov
movsl
pop
ljmp
cs
cli
mov
aam
sahf
jo
or
pop
cmp
cs
or
push
mov
xlat
mov
inc
sahf
cmp
test
adc
adc
ret
es
icebp
repz
cmp
mov
sub
ljmp
mov
pop
test
insl
pop
and
cmc
shll
jno
mov
jb
in
subb
je
sbb
sub
dec
xchg
mov
dec
cld
sbb
and
shrb
dec
jmp
adc
cld
jge
bound
aad
mov
xchg
ds
pop
add
sbb
lods
jmp
ja
sub
jecxz
mov
xchg
mov
ljmp
and
ret
sub
imul
and
adc
push
and
and
cmpsl
aas
daa
adc
add
xor
push
and
dec
ss
in
sahf
out
push
mov
fisubrl
sub
pop
jae
pop
aam
or
pop
inc
and
out
clc
outsl
sbb
pop
js
aas
int3
push
mov
mov
cmp
ret
mov
shr
push
add
gs
jb
cld
mov
add
cld
cs
inc
outsl
push
dec
xchg
out
shrl
push
mov
fdivl
lcall
sahf
push
fmull
icebp
add
fidivl
push
sbb
sbb
std
cmpsl
fsubp
jns
nop
iret
filds
lods
repz
dec
push
ret
enter
jmp
fbld
stos
jg
out
into
ss
std
inc
js
out
test
imul
test
lcall
ja
sub
lahf
js
subl
inc
xlat
mov
xlat
push
scas
cmp
fucomip
xorl
pusha
add
fisubl
pop
out
shll
aam
jnp
stc
dec
adc
insl
xor
jns
in
xor
sub
or
int
sahf
sbb
cmpsb
faddp
push
xor
mov
mov
pop
aas
mov
cwtl
loopne
enter
loop
aam
lods
push
pop
lahf
push
or
cwtl
xchg
and
les
cmp
add
mov
andb
jp
dec
mov
push
lret
aas
mov
arpl
call
mov
arpl
lea
sbb
test
dec
scas
xor
or
push
inc
mov
imul
mov
cli
shll
cltd
int3
mov
mov
popf
lcall
aas
push
fldcw
sbb
lods
push
and
in
pop
popa
jne
pop
stc
loopne
enter
lea
shll
sarl
push
sarb
in
mov
inc
fmul
addl
cmc
or
mov
mov
or
inc
mov
movsb
test
stc
pop
mov
mov
out
jns
pop
mov
pop
loopne
cld
sub
inc
xchg
xlat
out
lods
mov
add
sbb
nop
xor
imul
rcr
imul
cltd
xor
mov
add
pushf
out
fbld
loope
rolb
adc
movsl
fistpl
mov
shl
mov
int3
out
push
pop
dec
into
je
xchg
mov
xor
dec
cmp
lcall
mov
js
mov
aam
lods
call
scas
or
pop
call
insb
and
cld
mov
daa
jne
pusha
pushf
pop
jb
mov
sbb
mov
jge
mov
stos
loop
and
cmp
jmp
ljmp
lret
imul
xorl
shlb
fldt
test
sub
sbb
mov
mov
fwait
push
cmc
push
imul
fldcw
insb
xchg
and
fcoms
lret
add
mov
mov
mov
cmpsl
inc
imul
cmpsl
push
rcrb
or
mov
das
mov
xlat
stos
jo
dec
gs
push
mov
clc
jo
pushf
lret
subb
aas
xor
mov
jns
cmpsl
test
int3
adc
add
dec
frstor
pushf
enter
daa
fs
inc
ficoml
fs
ret
push
ja
inc
insl
stos
rcl
addb
sbb
call
test
cld
lods
push
or
ss
dec
and
ss
test
inc
shlb
xor
pop
or
jge
sar
ret
xchg
int3
adc
cmpsb
mov
dec
lods
push
adc
and
lock
push
enter
and
stos
adc
inc
fstps
cli
inc
lock
into
test
pop
xchg
ljmp
je
repz
xor
push
lea
add
inc
hlt
mov
addl
sarl
out
test
sbb
jbe
sti
aas
rolb
push
data16
mov
fwait
in
leave
test
jo
mov
inc
mov
jge
jge
fadd
rorb
test
ljmp
or
fsubl
icebp
lret
lcall
sub
fnsave
data16
adc
or
push
sbb
cmp
xor
out
movsl
lods
mov
sbb
mov
dec
dec
js
cmp
daa
outsl
loop
ljmp
cmc
xor
insl
cmp
cmpsl
mov
lea
rsm
cmp
lret
clc
mov
cmp
fcoms
lds
frndint
xchg
mov
fdivrs
std
out
dec
and
jmp
dec
dec
pop
shll
test
xor
and
and
call
ja
push
push
mov
fildll
out
xchg
xchg
ret
int3
push
mov
pmaxsw
sub
fnsave
mov
and
jmp
sub
sub
sbb
imul
lahf
cmp
push
push
imulb
vmaxss
aas
mov
fistps
out
aaa
and
jmp
sahf
pop
popa
pushf
test
rcr
pop
and
loope
mov
ret
stc
mov
mov
push
js
xor
mov
pop
or
scas
lds
sbb
sti
call
jbe
sub
push
cmp
push
pop
inc
lods
mov
out
mov
imul
inc
in
adc
outsb
andl
adc
sar
mov
popa
or
es
sub
sbb
xchg
out
je
filds
pushf
push
insl
imul
xor
nop
jo
and
mov
sub
adc
or
xor
shlb
jle
int3
xor
jmp
adc
cmp
nop
sbb
scas
sub
or
push
xor
mov
dec
fidivl
push
test
mov
xlat
nop
int
push
sbb
xor
aaa
and
cmpsl
stos
lock
in
bnd
and
xchg
pop
cs
push
add
maskmovq
negl
and
sub
jnp
mov
cmp
and
xchg
dec
hlt
sub
insb
mov
cwtl
adc
call
aas
jne
fstl
sbb
arpl
sbb
add
adc
xor
inc
fwait
cwtl
mov
movsl
mov
jno
adc
xchg
jle
sub
es
ficomps
jae
xor
adc
pop
jns
adc
icebp
inc
xchg
adc
jno
test
ljmp
scas
les
dec
out
in
mov
push
xchg
stos
jle
inc
cltd
in
js
cmp
cmp
xchg
xchg
loopne
mov
maxps
adc
lock
scas
in
ja
lods
or
xchg
pop
inc
cmp
das
aaa
sarl
repz
add
icebp
mov
cld
push
nop
adc
aas
insb
push
xor
pop
int3
inc
fcmovb
pop
push
aas
or
loopne
arpl
shll
jns
and
lods
fcoml
sub
mov
push
nop
inc
stos
jae
jg
pop
mov
ljmp
push
cli
stos
sbb
add
lock
and
push
sub
ja
and
jnp
mov
jo
pop
stc
add
add
dec
out
cmp
sbb
xchg
mov
imul
inc
mov
popf
sbb
lcall
xchg
jae
mov
outsb
mov
xorl
jp
call
out
dec
lea
adc
pop
fwait
std
xor
jge
repz
mov
sub
testb
inc
lock
cmp
adc
pop
sbb
ljmp
add
sub
or
movsb
ja
jns
push
inc
aad
add
inc
out
add
test
leave
cmovle
mov
rolb
cmpsb
nop
inc
pop
pop
cli
add
inc
xchg
mov
adc
fcomps
pop
imul
mov
or
int3
and
fisubrl
mov
ja
xchg
push
fdivl
or
fisubrs
sub
call
test
push
js
dec
dec
adc
dec
sub
cmp
mov
inc
mov
push
fwait
mov
inc
lock
inc
jg
xchg
pop
aad
add
push
and
shrb
pop
jl
sti
mull
sub
ljmp
cmp
testl
inc
xchg
dec
xor
pop
loopne
jge
push
call
pusha
lahf
push
dec
gs
movsl
ja
inc
cmp
xor
pop
mov
mov
es
scas
push
jbe
cmp
dec
dec
sarl
xchg
sub
stc
dec
xchg
in
mov
cmp
adc
mov
inc
aam
aam
rol
adc
in
and
or
dec
xlat
cmp
add
jecxz
push
dec
iret
stos
icebp
sbb
dec
inc
inc
pop
shl
je
mov
pop
xor
xchg
popf
adc
leave
popf
jb
sub
mov
or
idivb
out
xchg
popa
addr16
push
pop
dec
dec
inc
int3
ret
cli
mov
leave
and
mov
shl
inc
outsb
je
nop
cmp
mov
mov
mov
das
into
inc
fdivr
dec
popf
scas
rcrl
and
ret
sbb
pop
and
in
bound
mov
outsl
cld
xchg
out
sub
mov
data16
mov
xor
into
insl
jne
dec
outsl
sti
inc
movsb
jns
or
scas
xchg
xchg
pop
out
loopne
push
lds
push
sub
scas
fcomps
adc
or
mov
lods
in
mov
mov
decl
push
lret
jne
cmpsl
or
dec
jg
ret
cltd
adc
adc
add
lcall
mov
or
cmpsb
pop
pop
iret
xchg
stos
pop
xor
fs
add
jecxz
mov
pop
xor
push
pop
pop
or
sar
add
or
mov
push
xchg
jb
outsb
xor
xchg
enter
sbb
insb
mov
push
mov
cmpb
jo
or
pop
pop
sahf
xor
loopne
pushf
test
pop
stos
fmul
cmp
pusha
and
loop
stos
insl
ret
mov
aam
jnp
mov
outsl
mov
jecxz
aaa
cmp
pushf
cmpsl
xor
or
sub
inc
cmp
out
and
dec
mov
gs
out
and
fwait
out
scas
outsl
mov
mov
jnp
sub
pushf
mov
pop
mov
mov
mov
insl
adc
sbb
jae
mov
jae
or
shlb
pushl
mov
push
mov
aaa
ja
mov
mov
dec
mov
dec
out
pop
gs
insb
pop
cld
jo
mov
jge
pop
and
popa
lea
test
loopne
test
jae
dec
mov
add
test
shrl
xor
add
jge
iret
mov
les
shrb
mov
mov
test
pop
xchg
int
arpl
mov
les
cmp
mov
jg
data16
ss
leave
sub
adc
push
sar
jb
out
divb
adc
mov
dec
nop
push
jecxz
inc
cs
xchg
popf
jnp
pop
mov
in
push
loope
push
push
fmulp
sbb
pop
adc
cli
jecxz
mov
or
dec
decl
popf
test
mov
dec
pop
je
aam
sbbb
rclb
sbb
jl
sub
loopne
idivl
shlb
fwait
je
out
cli
in
leave
or
pop
jb
or
jecxz
cld
rolb
scas
mov
in
sbb
pop
jae
push
cmp
lods
lock
sahf
icebp
inc
mov
jne
cmp
push
mov
add
outsb
mov
popf
fldl
adc
cld
fsubrl
pop
dec
pop
or
mov
adcl
mov
fs
pop
movsl
rclb
imul
pop
jecxz
pop
mov
dec
dec
out
nop
gs
loop
jmp
pushf
pushf
adc
jne
or
out
dec
enter
sub
int3
insl
push
pop
into
xchg
add
pop
jae
mov
and
mov
xor
gs
inc
popa
cmp
jecxz
movsb
rcl
cmp
pop
inc
dec
movsl
fists
inc
sub
jl
lahf
jnp
or
pushf
adc
je
and
out
jl
pop
ss
dec
int3
insb
cmp
xor
outsb
jp
jmp
daa
cmp
mov
in
or
repz
jge
idivb
inc
sbb
xor
shll
mov
add
filds
cli
sub
fwait
xchg
add
jge
arpl
mov
push
mov
adc
bound
xchg
arpl
push
sbb
lds
xchg
dec
dec
fidivs
mov
mov
je
int3
cmpsb
outsl
into
push
repnz
test
push
iret
scas
jb
mov
cld
out
outsb
pop
jne
repnz
push
movsb
push
pop
sub
test
mov
xchg
push
je
dec
gs
sbb
lcall
sbb
mov
movsl
jbe
sub
xor
mov
lret
jne
test
shr
test
mov
add
sbbb
aad
jl
aas
cmpsl
push
int
add
jg
sahf
jg
nop
lock
inc
cltd
adc
fildl
lcall
insb
mov
int
aam
jl
stc
in
andb
mov
cwtl
mov
xor
push
lea
push
jns
jns
ret
mov
test
sbb
mov
fucomi
std
add
ss
icebp
je
dec
les
jne
stos
int3
lahf
pop
xchg
adc
mov
mov
mov
xchg
je
adc
lea
mov
push
inc
dec
and
in
stos
xchg
xor
xchg
cmc
sbb
fadd
and
test
js
and
pushf
loopne
ljmp
add
or
mov
xchg
add
roll
mov
pop
xchg
push
mov
pop
jle
jl
push
sar
sub
pop
sub
pusha
jae
inc
test
inc
push
and
iret
cs
xor
je
cltd
xchg
adcb
pushf
jbe
and
sbb
and
out
rolb
mov
mov
push
jno
filds
fwait
lds
mov
cmp
or
clc
push
jge
ds
scas
or
addr16
orb
cmp
fwait
jno
popf
xor
xchg
in
xor
adc
mov
imul
inc
hlt
pop
or
push
sbb
xlat
inc
fcompl
cmp
popl
enter
sub
or
test
jns
aaa
mov
out
xchg
aas
inc
dec
cmp
repz
pop
popa
jnp
jle
sbb
xor
push
adc
mov
jno
dec
add
push
push
add
outsb
outsl
mov
dec
sbb
sbb
repnz
fdivl
fnstcw
shrl
imul
jmp
in
in
icebp
sub
sbb
push
xor
loopne
pusha
lds
inc
jmp
insb
arpl
xchg
cmp
jl
cmp
jg
sbb
sbb
mov
cltd
aad
cmp
mov
mov
cwtl
lea
scas
ret
pushf
add
jge
clc
jns
sub
psrad
and
ret
jo
pop
adc
mov
js
xchg
scas
cmpsl
insb
push
xchg
mov
scas
dec
into
rorb
or
fldl
fisubl
sbb
ljmp
pop
out
in
mov
or
loopne
ljmp
imul
and
push
pushf
jle
adcl
gs
nop
cmp
and
enter
rolb
mov
mov
or
inc
lret
lahf
aam
mov
mov
add
imul
daa
gs
add
mov
cmp
xchg
test
in
ret
inc
shl
sbb
ret
subb
sub
xor
xchg
inc
xor
cltd
jge
dec
mov
mov
int3
mov
loopne
lret
clc
insl
mov
xchg
pop
jmp
inc
test
pushf
cs
call
xchg
mov
leave
cld
or
adc
fidivrs
inc
xchg
jae
mov
push
jle
pop
pop
inc
ss
orl
inc
jmp
stc
mov
and
lods
imul
push
xor
add
out
push
xchg
pop
jl
add
inc
adc
js
test
jmp
adc
lds
mov
cmpl
jmp
sbb
cmp
inc
sub
and
mov
jbe
add
push
sti
ljmp
mov
jmp
pop
push
sbb
iret
mov
jae
add
test
sbb
repz
pop
jle
lahf
pop
sbb
jns
pop
inc
dec
cltd
pop
ljmp
pop
js
and
lahf
out
inc
out
dec
adc
js
adc
xchg
and
mov
loope
xor
out
lret
inc
mov
sbb
fadd
movq
lcall
dec
outsl
out
jle
mov
jno
push
into
lods
cmpsl
dec
mov
imul
ficoms
and
rol
adc
sbb
xor
movsl
xchg
dec
scas
pop
fstpt
inc
andl
mov
scas
sub
push
aad
pop
test
xchg
les
mov
loopne
aas
mov
aaa
call
mov
cli
jle
jb
sbbb
jg
add
xchg
push
popa
ss
jg
mov
pop
mov
mov
lea
aas
adc
clc
sbb
sbb
call
sbb
push
and
xchg
lock
adc
add
mov
mov
mov
mov
mov
scas
dec
sub
adc
fnstcw
bound
clc
xchg
adc
inc
js
mov
cmc
popa
clc
mov
out
adc
jmp
addr16
xor
xor
test
xchg
cli
pop
mov
pop
xor
scas
and
fsubrl
es
add
loopne
sahf
stc
inc
outsl
cmp
pusha
mov
xchg
or
andl
jge
mov
xchg
shrb
sub
mov
adc
aaa
dec
push
cs
stos
cld
jnp
cmc
aad
xchg
test
pop
xchg
sub
sarl
pop
lds
faddp
ja
fistps
cmp
adc
cs
pop
pop
jne
je
jmp
movsl
jmp
mov
and
jg
sub
jnp
mov
leave
mov
cmpsl
jmp
rep
fs
inc
pusha
jg,pn
mov
std
mov
xlat
jae
pop
sti
fwait
jns
jecxz
data16
imull
cmpsb
sub
push
sub
mov
inc
aas
mov
jo
out
add
nop
and
cmp
pushf
mov
lcall
popa
pop
xor
pop
popf
movsl
mov
movsl
mov
adc
pushf
xchg
jae
pop
popa
in
aas
sbb
mov
cmp
out
xchg
shrb
int
pop
adc
or
incl
insl
xor
in
movsb
inc
push
mov
jns
popf
sub
add
dec
out
sar
testb
add
inc
pop
push
inc
mov
adcb
int3
mov
int3
mov
ss
dec
jmp
test
repz
cmp
or
push
ret
and
mov
mov
xchg
addr16
mov
xchg
fwait
outsb
push
cmp
inc
test
lcall
movsl
xchg
inc
inc
or
pop
vprotb
xor
rclb
fwait
mov
movb
hlt
loop
add
xchg
mov
rcr
cmp
fidivrs
stos
adc
mov
adc
lods
scas
sbb
or
daa
lahf
xor
mov
stc
sbb
push
jnp
in
into
aad
adc
ljmp
jbe
test
push
pop
cmp
sarb
add
inc
pop
sahf
jmp
rcrl
shll
aaa
test
hlt
or
outsl
dec
push
and
jge
popa
add
dec
iret
les
lea
mov
cmp
call
repnz
fdivrs
jb
inc
pushf
fcmove
push
inc
rol
mov
or
fldt
sarl
mov
call
pop
rcrl
shr
push
adc
lcall
rcll
ret
icebp
xchg
je
icebp
xor
lret
addr16
adc
movb
mov
lock
sub
mov
jno
lret
pushf
adc
pop
sub
out
arpl
push
dec
loop
sub
loope
pop
sub
movsl
or
pusha
dec
or
pop
push
ljmp
lock
out
dec
push
xlat
pop
in
xor
add
jle
dec
out
and
sbb
mov
cmp
or
lret
in
jnp
jmp
vsqrtpd
test
adc
mov
mov
test
add
daa
pop
movsl
fisubrl
negl
nop
cmp
add
sbb
sti
mov
xor
adcb
xchg
adc
mov
add
sbb
addb
pop
xor
inc
mov
dec
ror
insl
adc
sub
negb
add
pop
add
arpl
jb
insb
orb
push
cmpsl
rol
jb
enter
scas
fcompl
xchg
add
fsubs
add
xor
iret
and
push
loope
jns
jno
out
rep
pop
negl
sub
add
mov
sarb
sbb
xor
mov
mov
andb
push
nop
bnd
aad
nop
lods
enter
popa
test
inc
sbb
mov
and
rcl
lret
lds
aam
std
mov
adc
sbb
insl
popl
jne
sub
enter
icebp
push
cs
jbe
xchg
and
sahf
out
fxch
insl
mov
loop
jge
pop
jo
pop
cwtl
adc
fs
andl
adc
ss
mov
or
sbb
xchg
pop
push
cs
mov
adc
mov
pop
loope
aaa
add
mov
mov
es
push
icebp
or
cmp
sub
dec
mov
dec
jb,pt
cwtl
cmpsl
jl
push
xor
mov
dec
sbb
push
fisttpll
xchg
popa
adc
imul
sbb
lret
repz
insb
mov
nop
xlat
sub
sarb
cmpsb
push
xor
jbe
push
fmul
stc
icebp
fs
in
sub
test
adc
pop
leave
out
xchg
fwait
dec
mov
cld
cltd
mov
inc
xchg
push
cmp
mov
out
nop
mov
aaa
movsl
lcall
paddusb
ret
dec
sub
and
cmp
iret
adc
out
in
dec
or
jecxz
imul
add
push
repnz
dec
scas
add
lock
add
mov
aaa
sbb
mov
jmp
imul
jbe
jmp
jmp
xchg
sub
push
pop
aas
nop
aas
ds
dec
jo
movsb
pop
xorb
or
repnz
icebp
lods
stc
popa
xchg
fadds
pop
xor
push
sub
sbb
adc
insb
rorl
xor
cmp
sbb
icebp
mov
nop
aam
and
dec
sub
pop
sbb
push
aam
nop
adc
and
rcl
dec
mov
inc
pop
inc
pop
mov
stc
sbb
jb
adc
sbb
dec
std
ja
push
dec
push
mov
jge
js
push
fsts
ret
out
push
or
push
push
xor
mov
call
std
sbb
repz
adc
cli
add
jecxz
cmpsl
sbb
push
and
sub
adc
into
jne
push
addl
jge
cmp
push
ljmp
out
mov
xchg
adc
bnd
cmp
addr16
add
lahf
iret
jge
fldt
lcall
sbb
push
adc
je
inc
xor
jnp
icebp
add
adc
dec
mov
popf
roll
mov
in
mov
daa
adc
jp
mov
ds
and
pop
leave
pop
popf
xlat
cmc
sbb
loop
mov
add
daa
cmp
cmpsl
adc
xchg
loopne
add
lahf
jnp
icebp
mov
addr16
imul
in
jne
int
mov
dec
fwait
js
pusha
mov
in
mov
loopne
outsb
lods
in
jg
rolb
shrb
or
xchg
dec
xor
std
int
mov
inc
shr
aad
mov
mov
dec
fmulp
andb
lds
pop
mulb
push
add
shl
pop
aad
inc
xchg
arpl
jmp
jmp
push
fdiv
jecxz
out
sub
pushf
out
std
pop
xlat
sub
inc
popa
leave
push
fs
add
jno
sub
fsubrs
cmpsb
pop
lea
mov
enter
faddl
xlat
mov
dec
mov
out
rclb
jmp
dec
in
fisubrs
xchg
sbb
out
enter
add
mov
sub
xor
test
ds
and
hlt
out
es
pusha
mov
xchg
inc
and
or
or
sbb
dec
pop
cmpsl
aaa
pop
adc
test
mov
xor
in
lret
cmc
mov
movsl
mov
lcall
bnd
xchg
push
ficompl
pop
test
mov
lds
sub
dec
xchg
adc
scas
bnd
mov
dec
cmpsl
mov
ret
es
mov
pop
cmp
popa
add
pop
pop
ffreep
adc
jecxz
mov
loopne
add
pop
jne
rcr
push
out
fdivrl
mov
mov
xchg
pop
inc
or
push
dec
sub
les
mov
pop
in
or
add
push
filds
and
cmpsb
add
out
in
adc
jb
sub
pop
int
cmp
popf
sbb
rcrb
loop
dec
movsl
enter
pop
std
jne
push
jno
pop
loopne
loopne
shr
jg
pop
add
loope
cmc
addb
stos
jg
lcall
nop
int3
and
in
shrb
stos
mov
sbb
inc
xchg
clc
mov
mov
fnstenv
mov
je
ret
cmpsl
mov
sahf
cwtl
mov
enter
sbb
fstps
jbe
mov
xor
jge
out
pop
xchg
jecxz
scas
mov
adc
sti
lret
rcll
cli
add
pop
test
sub
enter
jp
add
ret
rol
mov
loopne
xchg
fisubl
out
jbe
fcomps
cwtl
in
mov
add
lea
push
xchg
mov
push
cld
fwait
in
pushf
xchg
in
mov
xor
xchg
ljmp
outsb
xor
fwait
inc
clc
mov
sbb
sub
mov
and
push
mov
sub
xor
lret
in
repz
inc
and
xchg
addl
fisttps
inc
lea
insb
arpl
dec
pop
mov
subl
in
leave
add
js,pt
pop
lcall
mov
xor
jecxz
daa
lock
stc
daa
push
mov
fldcw
add
push
sti
pushf
stos
mov
fwait
dec
pop
cmc
stos
push
push
scas
sarb
inc
mov
enter
lret
movsl
adc
sti
fisubrl
jl
inc
scas
sbb
xchg
mov
nop
int
outsb
gs
xchg
mov
mov
aaa
jg
fistl
les
aas
push
lods
jp
dec
adc
and
hlt
sbb
pop
mov
xchg
mov
jns
aas
mov
das
in
lret
jb
sub
mov
mov
lock
mov
loopne
imul
into
cli
xor
shrl
cmpsb
sub
mov
sti
cltd
dec
inc
cs
push
and
jp
or
fimuls
pop
in
cmc
adc
in
sahf
fdivrs
jecxz,pn
pop
push
bound
mov
inc
adc
push
add
pop
test
mov
out
lahf
add
hlt
addb
cmp
mov
repnz
mov
loopne
adc
fdivs
pushf
xchg
lret
xchg
pop
fisubs
add
lds
addr16
jge
sahf
mov
das
pushf
lods
stos
sbb
pop
jns
cs
dec
fldcw
in
sbb
cwtl
pop
out
rcl
pop
fldl
inc
es
mov
nop
cwtl
stos
fwait
in
cld
out
popf
iret
outsl
add
cmpsl
jae
in
mov
push
insl
xchg
jge
imul
lcall
sbb
or
dec
adc
lret
ja
jecxz
xchg
dec
cltd
cli
inc
sbb
xchg
pop
fwait
sbb
dec
pop
mov
fstp
mov
in
jmp
jp
clc
cmc
cmpsb
sbb
ret
push
mov
xchg
lods
pop
jle
test
fisubl
adc
xorb
sbb
inc
and
sbb
outsb
inc
push
pop
js
stc
jne
es
divl
lods
das
adc
lret
adc
fcomps
dec
adc
mov
xsha1
cmpsb
leave
ljmp
mov
sbb
std
popa
and
call
fs
mov
xchg
add
sub
aaa
je
adc
mov
shll
and
mov
sbb
and
mov
dec
push
call
mov
pop
repnz
stos
jbe
dec
lods
jnp
push
xchg
xchg
push
sbb
xor
or
pusha
dec
mov
shrl
leave
xor
mov
repz
or
inc
mov
jbe
adc
sbb
sbb
pop
enter
mov
insl
dec
dec
jnp
inc
jecxz
push
jp
pop
mov
push
and
sti
jp
fcompl
rorl
stos
push
adc
push
mov
dec
insl
daa
adc
xchg
pop
out
bound
jmp
jg
pushf
ret
stos
popa
and
cmp
bound
enter
and
add
xchg
mov
cmp
add
ds
dec
mov
addr16
sahf
fs
inc
or
jb
cmpsl
sbb
jl
fidivl
fstpl
or
leave
enter
push
dec
pushf
or
sti
es
ljmp
pop
pop
xchg
pop
mov
inc
inc
pushl
sbb
ret
mov
in
das
dec
jo
and
inc
inc
jg
scas
and
test
loope
jp
ror
xor
push
add
ds
cmpsb
cmp
nop
xor
pusha
dec
test
jle
mov
dec
mov
cmp
cmp
jbe
pop
adcl
mov
mov
xor
mov
shlb
dec
mov
cmpb
cwtl
outsb
jge
std
add
addr16
gs
jmp
lret
stos
enter
lret
or
bound
inc
fnstenv
subb
aas
jmp
add
mov
mov
paddusw
jb
pusha
movups
mov
sbb
loope
sub
and
or
jbe
je
in
imul
mov
jb
sub
adc
adc
or
xchg
cmp
imul
jbe
movsb
mov
mov
mov
jl
adc
xchg
mov
test
sub
adc
jg
lds
adc
rclb
sbb
inc
lds
sbb
mov
ljmp
popaw
pop
inc
cmp
pop
mov
and
sbb
mov
bound
into
dec
add
or
jmp
cltd
imul
sahf
sahf
sbb
arpl
lret
xchg
sahf
dec
xchg
sub
adc
leave
pop
aaa
jae
into
sub
scas
cmp
and
xchg
ret
adcb
xor
gs
mov
dec
pusha
xchg
mov
dec
mov
enter
popf
xchg
fisttpll
mov
ja
test
push
sbb
aas
es
fsubl
and
and
lcall
ss
sbb
jns
cmc
out
jae
dec
jbe
call
mov
fs
flds
mov
pusha
inc
js
jp
insb
jmp
fistpll
test
movsl
lret
inc
mov
and
mov
pop
mov
ljmp
ret
mov
jl
shl
cmp
fildll
mov
popf
mov
mov
mov
jo
pop
test
into
push
add
pop
icebp
bnd
xchg
insb
nop
insb
pushf
ljmp
mov
pop
sub
jbe
js
inc
hlt
mov
mov
dec
sbb
adc
mov
adc
test
sub
fstl
mov
add
dec
in
jl
push
xchg
mov
and
clc
xchg
jle
sub
cs
imul
mov
int3
scas
jle
adc
xor
push
xchg
mov
inc
push
stos
aaa
jle
cmp
dec
aaa
mov
clc
rcl
jle
or
jns
push
dec
jno
mov
mov
or
addr16
out
int
std
sub
scas
movsb
js
or
mov
sbb
inc
pop
cmp
xchg
loopne
xchg
cmpsb
xlat
dec
frstor
cs
aas
mov
int3
mov
mov
scas
jmp
adc
std
fcmovu
testl
xor
push
push
outsb
push
ja
inc
dec
lds
mov
les
sbb
ds
adc
mov
and
push
jmp
mov
add
sbb
jp
iret
or
fildl
mov
mov
ds
and
daa
sub
test
incb
dec
or
dec
jecxz
std
sbb
sbb
mov
mov
pop
cltd
xorb
cmpsb
repz
test
jb
dec
not
scas
mov
push
fsubp
clc
pop
rcr
shr
outsl
les
iret
push
adcl
arpl
les
repz
adc
xor
test
aaa
mov
inc
ljmp
pop
pop
fsub
and
pop
fnstcw
fwait
jb
aam
adcl
cmp
dec
push
popa
mov
adc
sti
idivl
dec
test
in
lret
xor
push
mov
lods
nop
lock
sub
icebp
inc
iret
sub
sub
cmp
mov
out
ret
jo
inc
push
push
add
inc
fwait
inc
and
or
ret
out
mov
insb
xchg
roll
outsb
xchg
mov
xor
jno
iret
popa
insb
int3
scas
cmc
movb
fs
xchg
shl
fcoms
orb
stos
lret
sub
pop
push
mov
xchg
inc
lcall
add
enter
movsb
add
pop
mov
mov
push
enter
test
lret
xorb
push
add
outsl
mov
cmc
ret
pop
push
sub
cmp
mov
push
loop
pop
out
cwtl
mov
mov
pop
int
int3
dec
or
push
sub
cld
mov
add
jl
push
inc
loope
test
aas
cmpb
aas
sbb
xor
cmpsb
mov
add
and
insl
movsb
mov
pop
dec
push
lds
in
add
dec
and
movsl
ljmp
cs
daa
cmp
adc
fisttpll
xchg
imul
mov
and
mov
stc
rolb
mov
xchg
rorl
inc
xor
pop
fisttps
aas
cmp
in
mov
cmp
mov
fs
adc
inc
inc
xor
pop
or
nop
mov
xchg
jmp
dec
inc
jg
push
ret
xor
cmpsb
aad
dec
fidivs
test
ficoml
or
sub
mov
mov
and
arpl
into
imul
in
and
cmp
xchg
or
jle
pop
es
aaa
xchg
add
dec
sub
repz
dec
push
ss
add
sarl
outsl
pop
cmpsl
xor
es
pop
and
or
les
mov
fsubrl
cmp
push
jmp
sbb
cmc
fimuls
gs
sahf
mov
les
xchg
mov
lahf
xor
sub
mov
inc
dec
mov
xor
sbb
fistpl
push
lret
idivl
mov
nop
loopne
mov
mov
fiaddl
jmp
lret
sub
lret
pop
loope
jno
xor
sahf
jns
sbb
in
cmpsb
xor
xchg
lret
push
inc
push
shl
xchg
jae
inc
out
cmp
adc
inc
mov
mov
fdivrs
lds
mov
stos
dec
xchg
xor
insb
push
stc
fdiv
xor
sub
inc
insb
cwtl
or
or
cmpsb
or
push
jns
dec
cmp
dec
add
insb
push
cmp
mov
or
js
dec
push
ret
mov
testl
fdivs
aaa
aam
sub
sbb
daa
jg
gs
dec
mov
xchg
movsb
mov
push
xor
sbb
adc
data16
xchg
pop
and
cli
xchg
sub
in
fs
insb
dec
popf
adc
pusha
xor
std
outsl
lock
xchg
loopne
push
cmc
cmp
xor
mov
sbbl
sub
sbb
mov
push
pop
fwait
cmpsl
pop
sarb
mov
in
lahf
mov
ss
cld
cmp
xor
outsb
stc
aad
sbb
push
aam
mov
enter
push
ds
inc
bound
mov
mov
addr16
out
cmpsb
nop
rcr
fists
fadd
push
and
gs
xorb
add
mov
fcmovbe
aad
gs
aaa
and
cmpsb
mov
dec
orl
out
mov
and
popa
fidivrl
xor
jb
lret
cmp
in
or
jae
cwtl
fsts
stos
mov
cmp
and
int
sbb
aaa
mov
out
in
and
and
push
push
jmp
cmpsl
pop
mov
add
lret
outsb
sub
sub
xchg
int
push
mov
and
fmull
pop
shrd
cmpsl
xor
arpl
push
add
jns
xorl
mov
push
push
adc
mov
sub
ret
dec
cmp
cwtl
mov
int3
out
aas
cwtl
ret
xor
lods
inc
mov
xlat
les
cmc
aaa
push
push
jns,pt
mov
mov
adc
cmpsb
neg
add
adc
push
enter
dec
jg
jp
ljmp
cmpl
mov
mov
pusha
popa
popf
inc
icebp
fcmovbe
mov
dec
push
jg
mov
enter
sub
mov
jl
stc
push
mov
out
cltd
jl
adc
push
addr16
cld
cmpb
mov
or
adc
mov
inc
xor
dec
dec
and
push
je
into
push
scas
jmp
rorl
movl
jnp
scas
inc
loope
imul
out
insb
shll
push
imul
pop
je
cmp
push
rorl
aas
fstpl
mov
xorb
cwtl
sub
test
mov
add
dec
pop
mov
pop
jecxz
scas
sti
std
loopne
xchg
repnz
in
loope
aaa
mov
mov
xor
xchg
ljmp
lcall
add
push
icebp
jne
xor
mov
imul
push
mov
cmp
nop
mov
add
mov
add
mov
sbb
mov
cmp
lcall
std
loopne
or
add
lret
inc
aas
cmp
adc
dec
fwait
xlat
mov
push
call
push
mov
cmp
es
movsl
dec
insl
cmp
out
xchg
iret
xor
into
fimull
scas
nop
or
orb
in
sarl
mov
lahf
rolb
fwait
sub
repz
into
cmpsl
aaa
lret
pop
jno
and
daa
or
insb
xor
pusha
push
ret
xor
lret
xchg
aas
xor
and
mov
push
cmp
imul
or
mov
aad
mov
mov
pop
into
mov
imul
jg
imul
in
mov
jnp
push
das
cmpsl
leave
mov
nop
stc
xchg
stc
call
jl
negl
mov
call
cmp
sbb
or
cmovs
xchg
mov
mov
repnz
cld
lahf
add
ret
sbb
loop
lret
mov
lret
int
inc
add
stos
xor
aas
adc
das
lods
rorl
test
pushf
test
inc
xchg
mov
sbb
pop
rclb
mul
cmp
arpl
add
test
dec
cmp
mov
mov
aaa
leave
xchg
rolb
mov
inc
mov
cmp
push
leave
in
or
pop
pop
jle
das
pop
pop
aaa
pusha
push
inc
pop
arpl
fwait
jns
nop
cmp
lahf
divl
gs
movsb
pusha
and
and
fistpll
es
pop
bound
mov
lock
lock
ds
dec
loopne
arpl
cmp
cmp
popf
xchg
sti
int
xlat
mov
add
push
sub
in
push
dec
mov
pop
xchg
hlt
lahf
mov
cwtl
in
xor
mov
add
jp
imul
jae
and
sbb
scas
add
mov
lock
dec
ljmp
push
jl
xchg
sar
popa
lods
int
scas
xchg
sbb
mov
cmp
sub
cld
add
test
popa
xor
add
hlt
adc
mov
js
test
cmp
cmp
in
mov
and
je
aad
leave
test
mov
cmp
out
in
jecxz
lea
push
test
into
icebp
loop
arpl
jmp
sahf
sbb
icebp
or
fwait
push
inc
adc
lahf
mov
vandnps
test
lret
sub
rcll
or
subl
daa
daa
shrb
mov
lds
sbb
repz
aaa
mov
cmp
loop
dec
xchg
inc
mov
lret
popa
fs
add
fucompp
xchg
mov
nop
test
test
fnsave
jle
in
call
mov
cmp
push
inc
mov
xor
int3
cmp
pop
jno
cmpsl
and
out
aam
fdivs
stc
cmc
push
mov
push
int3
arpl
jge
jl
ljmp
adc
addr16
xchg
repnz
sub
jmp
cmp
mov
test
add
xor
mov
mov
ds
mov
aad
gs
push
sbb
adcl
aas
inc
mov
popa
int3
mov
cmp
stos
test
js
and
dec
xchg
xor
outsb
mov
lods
cmp
sar
sub
das
or
gs
les
mov
sbb
movsb
or
stos
dec
and
mov
pop
xchg
push
hlt
push
push
fildll
movl
or
je
ljmp
sub
jp
cs
fsubrs
push
cli
mov
mov
std
mov
lcall
jo
cwtl
pop
sarl
sahf
out
dec
push
jmp
cltd
dec
inc
iret
push
sbb
movsb
scas
out
mov
mov
int
jp
scas
sbb
mov
pop
push
inc
inc
test
jae
push
sbb
sub
sbb
cmp
add
sub
js
mov
jp
cld
shlb
mov
jecxz
xor
jmp
and
stc
nop
cmp
push
fists
inc
pop
dec
jl
adc
sub
pop
cmp
movsl
stos
les
stos
in
xchg
sub
mov
test
aad
nop
cmpsl
sub
jp
mov
mov
push
es
insb
stos
aaa
mov
lret
sbb
dec
sahf
jns
roll
sub
xchg
fbld
fsubr
jns
jae
dec
and
aad
push
shr
mov
call
xor
sub
mov
push
fstp
mov
inc
rcr
jmp
mov
ret
test
and
repz
fmuls
lods
decb
jmp
test
pop
out
push
pusha
xchg
das
mov
adc
jmp
add
dec
jns
push
inc
dec
sti
sbb
data16
addr16
flds
xchg
fmull
aam
notl
add
push
cltd
mov
xor
addl
hlt
pop
pusha
lret
or
push
jecxz
pushf
lret
jp
jp
add
sti
jmp
shr
sub
in
jnp
sti
push
dec
push
pop
add
mov
adc
pop
dec
mov
mov
xor
jle
push
jl
pop
and
rcrb
jg
sbb
inc
and
nop
xchg
ja
adc
rdtsc
leave
js
insl
test
lahf
inc
ret
cmp
jnp
ret
jl
inc
and
testb
xor
pop
mov
lret
inc
inc
out
outsl
jo
aad
cli
xor
mov
aaa
out
or
inc
cmp
xchg
pop
mov
xchg
sub
xchg
and
mov
bound
cs
sbb
pop
int
je
cli
shl
pop
push
sub
mov
pop
push
sbb
and
push
jl
inc
xchg
jmp
mov
lds
mov
push
cmp
mov
dec
jmp
out
mov
xchg
cmc
ljmp
mov
pop
scas
rorl
and
xchg
xchg
dec
mov
dec
pop
dec
mov
cltd
xor
jno
div
ror
inc
jg
sar
mov
and
add
sbb
sbb
ljmp
les
pop
int
inc
jmp
xchg
xchg
add
xchg
fcom
int
lret
inc
lods
jge
mov
mov
loop
fistpl
ret
inc
add
push
xor
mov
popl
insl
cmp
ja
push
test
jo
nop
cmc
mov
xor
add
mov
mov
mov
pop
sbb
es
xchg
fadds
arpl
xor
jbe
dec
addr16
add
clc
cmp
push
mov
and
mov
in
mov
add
ret
sub
xorb
push
xorb
add
loope
or
inc
imul
shl
jp
pushf
pushf
push
pop
in
mov
sbb
inc
xchg
cmp
pop
push
outsb
inc
lea
cmp
aam
outsb
pop
pushf
or
xor
daa
stc
mov
sbb
fdivrl
pop
or
incl
mov
mov
cld
gs
aam
sbbl
cmpsl
pop
cmp
push
cmp
orl
pop
push
out
mov
pop
push
ret
aaa
scas
cmpsb
xchg
cmp
mov
insl
shlb
xor
pop
popf
jl
pop
cmpsb
bound
xchg
dec
push
cwtl
je
gs
dec
daa
mov
aad
lret
xchg
sub
mov
out
insl
jbe
pop
xor
push
pop
sbb
mov
scas
inc
jno
mov
and
or
cwtl
cmp
dec
push
inc
faddp
sti
dec
jno
and
jns
into
inc
cli
mov
sub
xor
lods
in
lods
into
frstor
pop
xchg
cmp
mov
xchg
jmp
ja
into
test
sbb
ror
dec
int
js
mov
cld
fistpll
xchg
cmp
and
add
mov
push
adc
add
push
cs
pop
xor
inc
je
test
sbb
jbe
sub
sti
das
rcrb
lret
and
dec
mov
pusha
test
rcrb
imul
ljmp
xor
and
test
mov
add
or
sbb
mov
jle
pop
cltd
fcmovu
ja
imull
and
cld
test
and
out
sub
cwtl
inc
hlt
sub
bound
sbb
adc
or
pop
and
and
push
sarl
scas
dec
pop
adc
sbb
addr16
jno
adc
inc
sbb
andb
mov
ds
jl
or
fwait
push
jecxz
cli
pop
ret
dec
cmp
call
jl
popf
stos
or
cmp
in
inc
outsl
sub
imul
mov
cltd
fbstp
inc
xor
xchg
out
mov
push
pop
adc
clc
pop
xor
loop
call
sub
out
push
pop
out
sti
imul
or
pop
mov
cltd
push
pop
arpl
in
mov
enter
rcll
pop
mov
cld
imul
push
dec
dec
inc
fisubrs
fstps
outsl
testb
mov
xchg
mov
sbb
je
std
and
mov
sub
or
out
cmp
jne
mov
and
ljmp
das
xchg
ficoml
xor
loope
mov
sub
orb
mov
inc
sahf
adc
cs
jle
outsl
je
outsl
dec
or
mov
outsb
mov
cmp
imul
push
gs
fcompl
imull
jle
add
fs
cmp
pop
mov
xchg
fmulp
cmp
fcmove
inc
aad
lahf
fstpl
clc
cmp
sbb
or
fstpl
out
in
js
mov
mov
pusha
mov
js
dec
cmp
mov
stc
push
cmp
loop
pop
jp
stos
inc
jne
fisttps
shlb
dec
pop
inc
adc
mov
fcoml
into
inc
xchg
das
mov
test
sbb
push
dec
pop
adcl
loop
in
jns
cltd
add
add
mov
push
dec
push
out
adc
outsl
iret
pop
sub
pop
fucom
pop
mov
adcl
jl
mov
dec
popa
sti
lret
movsb
jo
into
movsb
xchg
dec
xor
mov
lods
adc
inc
dec
popf
pushf
pop
out
adc
mov
mov
in
sbb
and
orb
rcll
out
popa
pop
mov
out
sahf
cmp
out
jge
ret
mov
cmpsb
hlt
xor
andl
add
xchg
cmp
and
xchg
jl
mov
int
dec
adc
in
add
jmp
das
ret
mov
add
lods
int3
repz
scas
xchg
sti
push
xchg
mov
sbb
xor
pop
mov
aas
dec
cmpsb
pushf
fcoms
outsb
sub
cmp
jecxz
adc
popf
adc
sarb
ficompl
sub
pop
fldl
cli
jnp
clc
and
pop
sbb
mov
idivl
inc
push
dec
push
sbb
adc
stc
gs
xor
or
imul
mov
sub
out
xchg
bound
ret
push
mov
cltd
ss
loopne
ret
dec
pop
jns
push
icebp
sub
cmp
in
lock
mov
push
mov
call
adcl
xchg
mov
out
push
cld
bound
flds
pusha
rorb
adc
rcrl
push
cwtl
fwait
push
xor
jecxz
mov
jecxz
lock
cltd
ds
cmp
fstps
ljmp
inc
cmpsl
pushf
and
fisubl
push
jae
push
frstor
in
outsb
mov
push
mov
pop
dec
or
jo
xor
jb
shlb
jb
push
dec
pusha
decl
aaa
add
lods
cwtl
and
mov
out
push
lret
mov
or
xlat
cmp
fcmovb
movsb
or
rcl
push
ret
testl
xor
jbe
cmp
lock
sub
popf
adc
popa
pop
insb
mov
xchg
and
lret
xchg
sub
inc
mov
or
push
pop
inc
mov
and
leave
ss
jnp
int
mov
pop
in
fidivrl
jno
or
jb
sbb
scas
and
cmpsl
movsb
or
xchg
outsl
lock
call
fimuls
std
lock
adc
mov
outsl
addr16
js
cmpl
mov
add
cmc
repz
inc
mov
lock
sahf
and
mov
icebp
dec
je
rorl
lods
imul
divl
jo
lret
mov
xchg
fimuls
sbb
repnz
cmpsl
je
adc
sbb
add
sub
js
jno
add
pop
cmpl
lods
shlb
fnstenv
dec
or
xchg
cmc
fwait
out
sub
xor
test
insl
jnp
ret
xor
nop
scas
cmp
mov
dec
inc
ja
push
call
sahf
or
pop
dec
ret
jns
cmp
ret
dec
outsl
enter
xchg
xchg
out
lret
imul
loopne
inc
adc
pop
stos
push
add
xor
mov
jg
inc
adc
mov
push
in
inc
imul
and
popf
jge
sub
popf
fisubrl
mov
sbb
jl
clc
orb
mov
sub
xchg
ret
mov
les
sub
jge
add
sbb
pop
outsb
adc
mov
mov
mov
xlat
jmp
lods
repz
xchg
clc
jb
fidivl
ljmp
mov
lcall
lods
xchg
dec
xor
shl
adc
add
pop
mov
lret
scas
lods
icebp
and
jno
jp
sti
sbb
pop
jo
mov
mov
xor
fwait
sub
jg
fwait
sub
xor
or
adc
aam
movsb
xchg
add
mov
gs
or
mov
jns
jbe
xchg
and
test
jmp
out
adc
mov
xor
cs
cmp
adc
repz
xor
ret
enter
add
stos
leave
xor
call
sub
mov
or
movsl
dec
xchg
mov
fldcw
xchg
pusha
nop
hlt
ja
or
dec
js
shl
popf
xlat
and
adc
cmp
and
and
std
gs
adc
outsl
mov
test
fwait
mov
out
or
dec
jbe
mov
icebp
inc
sarl
mov
cmp
into
mov
addr16
push
das
rolb
leave
mov
or
pop
test
inc
ljmp
mov
nop
icebp
xchg
test
mov
in
fs
push
and
ljmp
das
stos
mov
pop
fisubl
aam
jmp
ret
mov
jl
imul
xor
mov
push
mov
jp
rcr
or
jns
or
adc
push
stc
mov
sbb
cmpsl
pop
cmpsb
bound
mov
cmp
dec
int
pop
inc
in
fiadds
test
out
int
adc
and
insl
push
enter
cmp
pop
add
push
sbb
dec
rcr
jl
popf
popf
adc
xchg
adcb
mov
mov
cld
stos
cltd
mov
jns
fisttps
test
sbb
mov
fmul
nop
sarb
pushl
int3
dec
push
clc
inc
xchg
fs
lcall
nop
int
ljmpw
sub
in
ljmp
mov
stos
fs
push
inc
std
pop
xchg
mov
adc
cmpsl
faddl
test
ja
lahf
or
xor
enter
bound
out
out
nop
gs
stos
call
rcll
dec
mov
push
lock
cmp
shrb
xor
mov
mull
aam
subl
cld
sbb
js
mov
std
cmc
and
repnz
push
fwait
adcl
fstp
ds
adc
in
dec
lock
icebp
mov
or
arpl
sbb
rcl
fld
sbb
xchg
mov
sub
cmp
sub
cmp
lgs
fimuls
pop
push
in
add
push
push
ljmp
rorl
push
hlt
sbb
lock
int
fucomi
call
minps
and
adc
jne
push
pusha
mov
lret
pop
pusha
mov
shll
cmp
int
lea
hlt
call
inc
vpsllw
cmpsb
aam
mov
add
addl
mov
addl
or
adc
dec
roll
lahf
pop
mov
int3
add
or
jge
push
xchg
push
mov
jns
lcall
xchg
mov
mov
or
addr16
dec
xor
sbb
loop
outsb
mov
inc
push
cwtl
leave
mov
mov
mov
jae
sub
jo
imul
lcall
test
shrb
lret
decb
arpl
mov
pop
pop
jb
cld
andl
out
cmp
negb
sub
xchg
std
aas
sbb
loopne
inc
pop
push
lock
fiadds
enter
mov
pop
mov
adc
jo
adc
xchg
cmpsb
das
in
cli
dec
push
dec
xchg
push
shrb
add
or
stos
inc
lret
ficoml
cmp
push
aas
dec
inc
dec
jno
adc
mov
out
data16
pop
imul
xchg
stc
jno
sub
or
test
ljmp
xchg
sbb
push
dec
sub
xchg
stos
adc
test
ret
push
cmp
divl
jno
shr
mov
dec
in
sahf
enter
inc
rcr
jle
cmp
leave
ja
fprem1
insb
ret
xor
sub
imul
in
xchg
adc
jle
sahf
aam
xchg
adc
movq
pop
mov
push
pop
sub
jb
adc
fstps
mov
ds
fisttps
mov
lahf
jo
int3
mov
icebp
dec
mov
xorl
inc
xchg
lcall
mov
clc
cmp
int
and
inc
xor
xor
dec
mov
js
dec
sbb
push
je
daa
aad
xor
iret
insl
xchg
jns
aas
test
pop
rcrb
sbb
xlat
rcrl
sbb
jp
and
enter
cltd
and
iret
mov
in
in
std
inc
jp
in
aad
mov
mov
jp
mov
adc
push
pop
es
cmp
mov
inc
call
fidivrl
push
dec
fidivl
dec
fiaddl
jmp
int
xor
stos
dec
lret
arpl
adc
sbbb
aad
inc
pop
cmp
imul
mov
add
mov
dec
mov
rcll
mov
or
adc
mov
cmpsl
mov
gs
test
inc
xor
mov
mov
in
adc
icebp
dec
and
fmuls
in
xor
imul
pop
clc
dec
dec
push
inc
push
inc
sbb
orb
int
outsl
test
sti
push
pop
mov
or
ret
iret
sti
js
bound
pop
call
mov
in
xchg
or
mov
or
push
jp
clc
push
subl
iret
mov
orl
filds
add
and
mov
jne
adc
addr16
or
lods
push
aas
sub
dec
lock
stos
lahf
cmc
fstpt
dec
pop
push
sbb
sbb
sbb
bound
push
xchg
hlt
cwtl
adcl
push
add
pop
mov
or
out
ss
mov
out
adc
sbb
adc
ss
ss
mov
or
sti
xchg
sub
fisttpll
test
mov
fmuls
xchg
inc
xor
sub
jmp
mov
xchg
push
adc
mov
lods
in
inc
or
add
movsb
fildll
cwtl
in
test
fsincos
ret
adc
out
clc
je
pop
mov
or
imul
stos
xlat
xchg
add
or
shl
in
lret
push
push
enter
push
cmp
pop
data16
xor
jecxz
pop
cwtl
mov
out
ja
fsubl
sub
sti
xor
test
insb
pop
xor
sub
xor
jbe
in
outsl
notl
push
mov
mov
xlat
mov
andb
scas
mov
push
fsts
ljmp
mov
scas
mov
sbb
test
adc
push
iret
add
add
jno
call
subb
sbb
jnp
cmpsb
cltd
test
js
mov
jae
mov
mov
daa
or
and
lret
pop
mov
outsb
push
ljmp
sahf
jo
adc
pop
gs
xor
es
sbb
add
or
and
shrb
in
gs
lcall
in
sub
andl
and
out
pop
pop
xchg
adc
lock
cs
pop
xor
jo
sarl
xchg
fsub
cwtl
mov
mov
mov
mov
test
movsl
scas
dec
clc
push
or
or
scas
daa
mul
ss
or
mov
xor
aad
fistpl
out
mov
stos
in
iret
pop
jp
inc
dec
xchg
fnstcw
aam
dec
inc
mov
jl
cmpsb
xchg
addr16
es
pushf
dec
or
decb
or
lds
dec
test
dec
fisubrl
pop
mov
sub
aam
sub
sbb
aaa
jecxz
loopne
and
pop
andb
leave
fsubs
mov
push
outsl
xor
shl
mov
jl
mov
cs
lret
jns
xchg
or
dec
cmp
mov
sbb
fimuls
or
ja
lea
xchg
icebp
cmp
sub
xor
dec
cmp
decb
mov
cmp
pop
daa
js
jne
push
cmpb
popa
cld
or
or
ret
fnstenv
pop
enter
jmp
xchg
cli
inc
sbb
xor
pop
std
in
test
adc
xlat
lock
loopne
insb
arpl
dec
dec
mov
out
cmc
cmp
shll
stos
pop
jb
mov
ret
js
repnz
sub
xchg
pop
in
and
mov
lret
pop
jne
call
add
pop
inc
add
xor
pushf
dec
pop
xor
aam
shl
mov
or
sbb
and
icebp
add
jno
mov
clc
pop
mov
les
imul
push
stos
pusha
cs
jae
mov
scas
xchg
add
sahf
dec
add
sub
fs
mov
in
jp
insb
hlt
and
sbb
mov
pop
loop
in
cwtl
out
fs
or
xor
js
jb
cltd
push
pop
leave
mov
pushf
cwtl
lcall
arpl
roll
push
lock
xor
mov
mov
sbb
aad
and
push
pushf
or
daa
loope
aam
bound
push
cs
and
mov
negb
xor
push
ret
cmpsb
lahf
movsl
add
pop
xchg
jns
into
pop
fsts
push
xor
rorb
or
inc
cmp
inc
inc
mov
and
addr16
ret
testb
iret
bound
mov
lahf
mov
lahf
cld
xchg
mov
int
or
call
and
ret
test
outsb
xchg
xchg
insl
lret
pop
dec
jno
popa
xor
cmpsl
add
pop
dec
xchg
xor
and
pop
test
push
push
ja
dec
sub
adc
push
sbb
popf
cmpl
sub
lcall
inc
xchg
movsl
ds
gs
jne
xchg
je
cli
xchg
mov
movsb
daa
inc
xchg
xlat
call
bound
ljmp
jge
aas
das
cli
xchg
mov
adc
jg
notb
in
gs
pop
sbb
pop
and
lods
adc
or
lods
mov
adc
mov
popf
sub
pop
shrl
rcrb
aad
add
std
jnp
adc
sti
fcmovnbe
cmp
gs
in
movl
addr16
fisubrs
bound
into
and
scas
fstps
stos
aaa
imul
lock
xchg
das
ds
mov
cltd
mov
mov
adc
sbb
mov
sahf
mov
mov
inc
inc
xor
jp
inc
rcl
movsl
mov
sbb
dec
cld
push
es
jg
mov
pushf
call
and
mov
cmc
outsl
xor
xchg
scas
fs
mov
mov
push
nop
adc
jmp
push
lret
adc
push
mov
fldenv
lret
sub
xor
bnd
push
xchg
ret
lods
add
faddp
push
xor
popa
and
push
addr16
shlb
mov
popa
dec
add
adc
cltd
mov
add
shll
xlat
lcall
xchg
fstl
shrb
xchg
adc
mov
cli
icebp
js
orb
xchg
mov
ret
je
push
out
icebp
movl
cmp
das
mov
mov
mov
inc
shll
loope
cmp
loopne
xchg
test
mov
dec
sbb
adc
stos
movsl
sub
stos
push
stc
dec
fldt
test
xchg
es
add
mov
scas
loopne
mov
cmpsl
jne
or
cmpsb
pmaddwd
adc
dec
fwait
cwtl
outsb
xchg
ja
out
push
les
inc
call
and
cmpl
bound
je
cli
jecxz
pop
dec
shr
out
call
in
scas
sub
jnp
mov
inc
add
pop
pop
out
or
movsb
mov
add
jmp
mov
cmp
adc
push
xor
push
xchg
clc
adc
cltd
jg
adc
pop
insb
imul
xchg
clc
lock
xor
push
add
popa
add
cli
jg
in
sbb
xchg
jno
xor
enter
testb
ficompl
test
addr16
push
mov
das
arpl
ret
adc
or
add
push
xor
mov
fdivrl
mov
outsl
pop
stc
aas
test
arpl
ret
cmp
ljmp
add
das
cmpsb
leave
mov
xor
push
test
cmp
inc
loop
nop
pusha
daa
mov
call
fs
pop
test
mov
inc
cmpl
mov
cmp
xchg
jl
out
dec
das
subl
std
dec
xor
and
xchg
mov
cmp
popf
cli
push
lock
mov
and
js
cmpsl
fnstsw
cltd
xchg
sarl
xlat
rclb
sbb
stc
push
insb
cli
add
pop
push
cs
jmp
sbb
adc
xlat
hlt
in
xor
dec
mov
es
lretw
loop
cmpsl
div
pushf
jno
and
mov
daa
popa
jmp
mov
mov
ret
mov
lods
clc
cs
xchg
adc
pop
sti
insl
xor
add
int
jmp
dec
fadds
jmp
sub
rcll
outsl
cmc
out
inc
pop
aaa
stc
lahf
dec
xchg
test
dec
or
ja
xchg
mov
icebp
cld
add
jno
dec
popa
ret
loopne
pop
jle
lods
push
mov
xor
fsubrs
fstl
outsb
xor
pop
jae
pop
loopne
adc
stos
mov
sub
sbb
clc
jnp
subb
mov
data16
insb
adc
inc
and
lahf
push
andb
and
inc
fs
jmp
and
jbe
cmp
mov
xchg
cmp
pop
sahf
shll
aam
data16
push
pop
shrl
xchg
int
pop
std
lea
lretw
jge
xlat
add
insb
mov
pop
cli
fmulp
lods
sub
xchg
dec
cmpsb
push
lods
and
data16
rorl
les
in
mov
sub
pop
mov
nop
in
pusha
gs
fsubrp
and
test
mov
movsl
xor
jl
jae
gs
cli
adc
shrl
push
lcall
imul
lods
xchg
push
movl
mov
dec
out
cmp
shl
xchg
and
push
sub
setns
rcrb
push
lods
cmp
inc
cld
subl
das
push
daa
in
xchg
dec
imul
incl
insb
jo
test
out
mov
test
adc
insb
inc
fs
push
lret
mov
cli
insb
pop
pop
add
mov
out
lcall
lock
rclb
cmpsl
mov
icebp
or
dec
pop
pop
mov
mov
fisubrs
push
push
lock
sub
add
push
sub
hlt
xor
sub
addl
adc
lcall
xchg
rcl
and
aad
das
push
loopne
and
lret
adc
sti
lock
pop
in
pop
jmp
push
movsl
sub
lcall
in
push
xchg
add
js
movsb
push
mov
out
xor
addb
sub
sub
popa
js
pushf
push
push
xchg
ds
lret
rcl
lret
jno
dec
add
pop
add
fwait
int3
mov
xchg
iret
or
or
stc
cmp
add
std
jns
mov
test
jmp
inc
jecxz
push
adc
out
repz
or
xor
add
inc
pop
nop
fisubrl
scas
pushf
out
sub
popl
stos
mov
inc
test
leave
rcrl
test
gs
cmp
int
mov
les
inc
fisttps
inc
test
jmp
add
cltd
cli
movsl
mov
pushf
jne
add
fld
jb
nop
dec
or
mov
leave
push
cli
inc
clc
cltd
pop
rcrb
push
aad
rol
lret
cmp
inc
cmpsb
cmc
cltd
jb
call
lcall
xchg
push
jno
aam
pop
imul
lock
sbbb
mov
or
int3
jb
pushf
insl
ja
xlat
out
cmp
xorl
test
add
icebp
xor
call
pop
sarb
fdivrl
push
lahf
and
movsl
pop
lea
xor
adc
movsb
bound
adc
jl
mov
addr16
idiv
jno
push
mov
scas
mov
mov
popf
dec
popa
push
sub
adc
and
jge
icebp
jb
push
aaa
rcll
addb
stos
imul
xor
xorb
pop
push
dec
cmp
dec
push
jns
inc
adcb
aad
pop
mov
fcmovu
scas
repz
cwtl
inc
ret
push
stos
std
popa
and
pop
and
mov
mov
mov
mov
cmc
inc
imul
imul
pop
repz
int
pop
hlt
das
leave
sub
add
sub
enter
push
and
dec
lods
mov
push
fmull
inc
dec
out
fnsave
or
jnp
shll
add
xchg
xchg
jle
or
or
mov
repz
mov
mov
test
adc
xchg
add
mov
sbb
lret
xlat
or
pop
stc
cmp
std
jo
idiv
mov
std
xchg
or
movsb
cmp
shlb
sbbb
mov
test
loope
or
and
out
dec
mul
int3
sub
pop
lock
inc
sub
push
cli
pop
mov
out
idivb
push
fs
mov
out
pop
imul
mov
insl
push
mov
div
inc
or
lock
popa
add
or
pop
xor
cmova
adc
push
fwait
or
repnz
cmpsb
in
mov
mov
fwait
lcall
enter
mov
clc
adc
data16
inc
shrl
imul
mov
cmp
push
push
lret
inc
cmc
mov
mov
fstp
add
jbe
lods
jne
push
test
mov
and
jle
sbb
xchg
sbb
orb
mov
pop
sub
ffree
sbb
add
jb
repnz
aas
jg
sub
cli
in
fdivrp
das
stos
out
loope
fidivrl
fdiv
int3
mov
lahf
out
mov
mov
push
fnstcw
jno
ret
adc
add
push
sub
jmp
add
xor
fcmovu
dec
out
or
stos
jb
cli
lahf
icebp
fstps
ret
in
xchg
mov
jae
pop
lods
stos
unpcklps
outsb
out
sbbl
jne
sbb
aas
pop
push
js
jl
add
les
cli
adc
dec
ja
scas
sbb
jp
fildll
jae
push
in
insb
into
push
mov
dec
sti
mov
in
push
ja
pop
pusha
repz
fimuls
mov
rcll
imul
fs
xchg
push
insl
in
outsl
call
out
inc
lret
mov
arpl
fwait
and
arpl
push
movsl
mov
cmp
sbb
in
push
pushf
mov
mov
jno
adc
or
aam
pop
loope
dec
outsl
jno
inc
in
test
jle
aaa
xor
in
mov
add
ds
out
mov
mov
xchg
enter
fsincos
in
out
arpl
add
adc
cli
sti
jmp
movsl
lock
int3
jns
hlt
sub
pop
fcomip
fsubl
fbstp
pushl
ds
push
xchg
ljmp
into
cmp
sub
cmp
dec
push
daa
or
jle
out
mov
ret
dec
mov
push
rolb
repz
mov
pop
inc
mov
inc
xor
push
in
jbe
sbb
jnp
add
add
outsb
inc
lcall
cmc
sbb
xchg
push
rol
jl
enter
ret
pop
test
cltd
inc
gs
inc
mov
xchg
insb
pop
inc
lret
es
jo
xchg
sub
fsubp
sahf
or
xor
cmp
sub
cmpsb
and
lods
adc
fiaddl
mov
dec
stos
es
add
notb
test
test
sar
mov
add
imul
pop
xor
clc
in
add
movntps
mov
mov
mov
rorb
imul
test
mov
pop
test
xchg
lock
mov
inc
stc
fdivs
mov
fnstsw
mov
dec
sbbb
mov
daa
scas
stos
cmp
add
outsb
push
adc
mov
scas
les
adc
aad
pop
pop
or
and
pop
jae
test
js
xchg
pop
cmpsl
inc
frstor
cmpsb
sbb
cmp
in
rclb
in
inc
outsb
pushf
mov
pop
adc
jno
cmpsb
clc
or
imul
fwait
xchg
aas
or
mov
je
aam
shlb
fdivrs
cmp
push
pushf
bound
jecxz
fildl
cli
push
pop
sahf
cs
mov
jbe
adcb
hlt
fsubrl
fstpt
dec
das
movsl
lcall
out
push
jp
ljmp
mov
mov
dec
fs
sub
adc
leave
jnp
and
mov
stos
sub
sub
mov
jne
cli
inc
sub
bound
or
rcll
lret
popf
jb
mov
inc
sbb
scas
pop
jae
cmp
lret
mov
mov
shr
pushf
add
shll
lcall
in
and
add
xchg
jb
scas
jecxz
into
sahf
ljmp
xchg
dec
sahf
dec
push
adc
sbb
test
das
std
fwait
lock
cmc
jo
iret
lret
pusha
push
int
ja
sub
test
mov
enter
xlat
fcmovb
out
sarl
icebp
rcll
outsb
inc
insl
lock
int3
adc
pop
mov
sahf
mov
mov
cmpsl
lret
mov
dec
push
cs
inc
icebp
mov
jge
in
das
push
jb
push
sub
push
jmp
and
xorb
adc
cmp
popa
test
hlt
fists
test
fsubrl
push
xor
mov
sub
repnz
popl
jl
jns
pop
mov
mov
fisubrs
inc
pop
pop
scas
ljmp
sub
push
cmp
dec
jge
dec
aad
push
cmp
mov
xchg
or
push
xor
arpl
or
es
daa
xchg
in
in
popf
push
mov
mov
push
dec
inc
pop
mov
sbb
or
push
xchg
fsubs
mov
insb
xor
movsl
fcomi
shl
sbb
adc
dec
aaa
enter
sub
pop
jno
popf
ret
mov
add
fdivr
dec
clc
cmp
lds
pop
pop
and
iret
cmpsl
ljmp
jge
dec
push
into
popf
lahf
sahf
mov
push
repz
sbb
ds
or
mov
jle
cmp
mov
dec
adcl
leave
fidivs
or
cmp
imul
pusha
pop
push
stos
sbb
push
mov
lcall
adc
test
icebp
adc
in
pop
push
dec
and
cmp
iret
xor
call
xchg
adc
xor
cmp
outsl
mov
sahf
addl
outsl
repz
ss
mov
pop
jno
addr16
lea
mov
xchg
aad
loopew
ret
pop
inc
movsl
int
mov
push
mov
sub
daa
fsubrl
lds
insb
icebp
stos
pop
push
xchg
jl
hlt
addr16
dec
lret
clc
inc
hlt
rol
pop
cs
xchg
cwtl
scas
push
cli
dec
rcr
into
iret
inc
pop
into
repz
cmc
and
ficompl
inc
pop
loop
scas
not
int3
adc
in
and
mov
jp
aas
and
arpl
mov
mov
mov
mov
pop
repnz
or
xlat
cmp
rcl
xchg
sub
push
cmp
inc
and
popf
pop
cmp
push
dec
leave
fnsave
adc
mov
outsb
or
aaa
lods
pop
outsb
mov
pop
mov
cmp
add
sub
pop
test
and
out
adc
pop
aaa
repnz
cli
adc
and
cmpb
movsb
in
xchg
fiadds
outsb
lea
scas
les
rol
mov
insl
mov
inc
sahf
add
mov
and
inc
sarb
mov
dec
sbb
sbb
push
add
jnp
das
xchg
xchg
pop
clc
dec
push
jmp
pop
xchg
mov
xor
pop
popa
cmc
fisttpl
clc
aaa
xchg
mov
sbb
scas
jg
cmp
lock
lea
jmp
mov
imulb
push
pop
std
push
and
xchg
cmpsl
or
jg
dec
jmp
sub
or
jae
sub
out
mov
add
pushf
push
scas
pushf
test
mov
stc
adcb
repnz
mov
repnz
movsl
movsl
mov
cmp
pop
dec
lds
xchg
sub
pushf
int
ss
or
nop
outsl
jge
pop
iret
jmp
scas
cmp
jne
xchg
xor
jecxz
aam
inc
xchg
stos
int
cmp
mov
sets
mov
es
mov
cmc
add
add
lea
pop
insb
xor
sbb
fildll
out
cs
in
inc
lock
mov
pop
adc
dec
call
sbb
or
push
jle
jae
add
popf
jp
mov
sbb
loopne
push
subb
or
shld
mov
push
inc
cltd
ljmp
jmp
inc
or
test
push
jo
jmp
test
dec
js
lods
jg
jnp
mov
or
aas
lock
or
clc
pop
ret
sbb
ja
jae
insb
outsb
or
sbb
sarl
pop
xchg
cmpsl
aam
pop
cmc
rol
push
mov
and
cld
adc
addr16
fnstenv
push
sbb
push
ss
cmpsb
ss
and
add
mov
pop
sub
enter
sti
sahf
xchg
push
jecxz
repz
aam
pop
clc
stc
fidivs
in
cmp
mov
jae
xor
repz
aas
mov
out
jne
sti
adcl
xchg
shlb
cmpsl
pushf
in
pop
adc
repz
lods
std
push
outsl
lret
pop
cmpsl
adc
jecxz
les
push
sti
dec
test
shrb
inc
push
sahf
sub
movsb
inc
push
bound
fidivrl
adc
mov
xlat
out
cs
popa
and
push
bound
testl
mov
jge
pop
ret
gs
lret
and
icebp
push
sub
xchg
cmp
out
cmc
fs
sub
mov
mov
pop
jno
cld
dec
push
sbb
cwtl
fwait
pop
das
outsl
dec
mov
push
mov
stos
adc
std
test
xchg
mov
sub
lea
jno
cmpsl
push
mov
lahf
push
inc
add
mov
pop
insl
sti
xchg
popa
and
and
cmc
loopne
dec
add
neg
pop
and
je
inc
in
jp
inc
push
cmp
mov
aam
xchg
add
rcll
dec
dec
pop
insl
fcomi
xchg
loope
dec
dec
arpl
outsb
ljmp
mov
popf
mov
fsub
xchg
lret
sbb
inc
fsubrs
shl
imul
cmp
jns
lods
mov
leave
jp
loop
jb
fstpl
cltd
and
rcrl
xor
int3
jae,pt
sbb
lods
mov
sub
mov
cltd
add
ret
jnp
outsl
adc
pop
loopne
out
lret
movsb
das
aam
or
fiadds
data16
pop
es
popf
sbbl
mov
pop
addr16
test
insb
xchg
push
jne
sub
mov
push
mov
outsl
dec
lret
pop
and
lods
dec
mov
xor
xchg
mov
into
sub
pop
pop
xor
daa
das
call
mov
inc
rol
stos
sbb
push
mov
insl
js
out
mov
shl
mov
lcall
mov
jg
jbe
jbe
ds
cmp
movb
je
mov
pop
int
je
outsl
enter
xlat
dec
sub
bound
or
and
fmulp
sahf
inc
adc
xor
inc
test
mov
push
arpl
lret
jbe
push
xor
cmc
xor
jnp
fnstenv
adc
es
iret
cltd
mov
loope
outsb
adc
or
fildll
hlt
add
mov
arpl
mov
cli
scas
mov
xlat
xor
inc
iret
mov
pop
dec
xchg
or
pop
repnz
out
mov
sub
or
nop
pop
and
dec
dec
sbb
leave
in
or
push
or
jge
and
mov
pusha
and
adc
push
lock
push
ret
sub
scas
xor
enter
jecxz
fadds
pop
insb
cld
in
fildll
pop
test
ds
jno
mov
cmp
mov
out
cmpsb
pop
sbb
ljmp
fwait
rorb
sahf
adc
mov
push
not
xor
xchg
pop
push
and
xchg
cmpb
aas
das
mov
pop
dec
movl
dec
cmpsb
adc
push
xlat
mov
pop
out
push
imul
in
loopne
scas
repnz
and
lods
sbb
or
jmp
and
mov
imul
add
adc
add
push
cmp
popa
outsl
push
jnp
je
sbb
jl
gs
or
orb
dec
cmp
mov
cmpsb
xchg
in
pusha
adc
mov
inc
in
inc
cld
and
xor
ficoml
xor
jno
out
fsubrl
mov
push
push
mov
add
fadds
mov
mov
jmp
mov
scas
jmp
fs
pop
adc
push
in
call
popf
mov
sbb
fsubl
pop
std
mov
fdivp
dec
cld
sbb
mov
int3
cmpl
das
lods
push
mov
or
aas
fdiv
rcll
mov
sub
imul
aad
mov
cmp
add
sbb
sarl
mov
fstps
inc
mov
popa
cs
jnp
pusha
aad
pop
push
imulb
mov
pusha
push
shl
loopne
mov
xor
cmp
pop
lock
js
mov
adc
fwait
pop
mov
mov
mov
xor
aas
jns
mov
mov
mov
adc
popa
mov
movsb
clc
mov
jg
ret
jl
loope
fs
daa
or
test
loopne
mov
movd
into
xchg
outsb
dec
cltd
jmpw
mov
xor
sbb
ret
xor
ja
mov
sbb
adc
or
xchg
test
aam
lcall
mov
sti
or
and
inc
mov
pushf
or
repnz
or
mov
push
and
xchg
cmp
inc
mov
sub
scas
mov
loopne
in
imul
loope
sub
jo
enter
and
dec
xor
pop
test
data16
lahf
fistpll
adc
test
push
fwait
xor
aaa
pop
mov
sbb
inc
pusha
push
push
xchg
shll
jne
scas
pop
and
loop
notb
or
inc
into
outsl
push
dec
inc
in
js
aam
repz
cwtl
mov
xchg
sbbb
inc
jmp
adc
gs
into
or
in
xor
mov
and
pop
push
sbb
push
loope
into
dec
mull
xor
rolb
arpl
shl
lods
fbld
orb
xor
ds
xchg
push
adc
outsl
imul
shrl
mov
inc
movsl
jbe
lret
mov
mull
xchg
xlat
cld
inc
ss
mov
stos
ficoms
jp
jle
lahf
aad
in
xor
add
cmc
add
cmp
mov
jne
stos
sub
arpl
addr16
mov
adc
mov
aad
or
test
movsb
fdivl
or
cmp
dec
lods
rcrb
inc
inc
add
sub
xchg
pusha
or
jo
cmp
ss
jbe
and
insl
xchg
mov
push
sar
mov
into
stos
dec
movsl
push
int
xlat
mov
scas
stc
pop
cmpsb
mov
xchg
jbe
fidivs
jb
repz
shrl
test
mov
fimuls
outsl
pop
and
mov
xchg
insb
cmp
movsb
mov
call
adc
imul
btr
add
sahf
sbb
mov
pop
test
add
pop
in
lahf
dec
dec
repnz
cld
test
call
call
popf
sbb
cmp
and
call
mov
pusha
push
and
shll
sub
fldl
fidivs
mov
test
sub
sbb
push
adc
bnd
fdivs
adc
pop
dec
adc
out
dec
xchg
push
cmp
loop
movsb
mov
cld
je
or
push
push
and
stos
dec
arpl
xchg
pop
sub
cwtl
or
subl
mov
cmpsb
sub
and
lcall
scas
lods
cmp
inc
mov
xchg
or
mov
or
inc
xor
push
mov
notl
mov
call
fiaddl
incl
sub
ja
fnsave
hlt
pop
or
aaa
xchg
movsb
divb
add
inc
mov
sarb
rolb
xor
mov
pop
push
inc
insl
cmp
popa
scas
std
icebp
mov
mov
in
cmp
cmp
shll
pop
mov
jmp
push
aad
adc
xor
pop
jne
cmp
shl
mov
stc
mov
loope
pop
shl
adc
sbb
or
fistl
push
mov
out
adc
aad
inc
outsb
inc
mov
or
imul
das
jne
test
and
out
mov
pop
mov
mov
cmp
and
dec
mov
push
xchg
xor
mov
mov
fists
data16
fistl
loope
dec
mov
and
loopne
imulb
rclb
cmp
add
sahf
pop
addr16
loopne
lahf
scas
jg
push
cmp
es
xor
jp
fadds
sub
test
imul
or
in
aaa
mov
fisttps
mov
mov
and
loopne
mov
out
pop
push
jo
jne
aaa
sub
inc
inc
outsb
movsb
test
subl
adc
dec
xchg
mov
mov
xchg
shll
hlt
call
mov
jle
outsb
mov
lahf
push
test
add
xchg
fidivrl
iret
pop
push
fistpll
and
loopne
notl
jbe
leave
xor
mov
add
jl
stos
adc
mov
test
fidivl
dec
push
rcrl
das
dec
ljmp
sub
xchg
cmp
and
fiaddl
lods
ret
and
mov
jbe
addl
bound
adc
mov
or
sysret
adc
jnp
add
jmp
dec
or
es
ret
jp
xchg
roll
fnstenv
sbbb
xor
faddp
and
cmpb
insl
mov
fidivrl
and
xorb
fwait
jmp
bound
pop
lods
call
mov
jnp
movsl
and
jae
sub
subw
cmp
or
or
je
pushf
es
cmpl
scas
jnp
inc
jnp
imul
push
movsb
xlat
mov
jae
imul
pop
push
out
insb
cmp
or
inc
sub
data16
jecxz
aam
bnd
sub
push
outsl
cs
add
iret
mov
mov
inc
enter
mov
sbb
xor
mov
jne
cmp
add
xor
mov
pushf
iret
adcb
adc
arpl
popa
add
mov
cmp
pop
push
enterw
cs
out
jbe
pop
mov
arpl
xor
cmp
xchg
mov
inc
dec
aad
or
mov
sub
add
pop
and
mov
jo
shll
push
jns
sarl
lock
jl
pop
lret
out
stc
or
in
xchg
inc
pop
adc
xor
inc
cmpsb
jne
sti
jno
mov
leave
jecxz
sahf
dec
fisubrs
test
xor
je
shlb
or
pop
cmp
icebp
mov
cmp
xchg
sbb
mov
shlb
pop
xor
sub
test
jno
testb
movsl
xor
imul
jmp
lret
pushf
hlt
dec
mov
rcrb
outsl
loope
aaa
mov
xor
jno
or
fstps
push
out
cmp
outsb
mov
inc
shll
rorb
mov
sbb
xchg
add
enter
sub
hlt
call
popl
xor
mov
adc
int3
rcrb
add
jmp
ds
adc
sub
cwtl
pusha
inc
pop
shlb
fistpl
icebp
xlat
test
xchg
pop
or
sub
loop
pop
pop
cwtd
or
cmc
mov
jo
mov
mov
cmp
sbb
aas
lahf
insl
loopne
je
jmp
not
dec
or
test
ljmp
xor
add
mov
mov
jg
pop
jno
stos
jl
ret
mov
or
mov
jno
in
leave
sahf
fists
ficompl
jno
es
push
add
xor
jne
xchg
mov
xor
daa
nop
stos
dec
mov
fsubrl
cmp
lcall
lods
jle
sub
push
out
push
scas
push
iret
adc
lahf
stos
push
das
dec
ss
shll
call
fldt
setne
into
push
mov
mov
stos
popa
xor
jno
jmp
pop
push
pushf
adc
int3
mov
push
fwait
inc
push
jne,pt
shl
and
inc
repz
inc
fimull
fisttpl
idiv
push
or
insl
push
call
mov
gs
fs
cld
push
pushf
mov
pop
sub
sbb
inc
add
dec
push
aaa
sub
addl
or
lahf
cltd
sub
add
or
jmp
jb
adc
imul
jle
lods
pop
loope
test
std
dec
inc
ljmp
mov
push
in
add
sbb
loop
mov
push
rcll
xlat
adc
sub
dec
hlt
stos
mov
mov
and
popf
adc
pop
orl
pop
push
xor
jmp
pop
cmc
xlat
lcall
sbb
dec
fcoms
cmpsl
mov
lods
stc
or
mov
ljmp
cs
adc
pop
ja
aad
inc
xchg
or
jnp
fcmovb
icebp
adc
imul
cmpsl
inc
stc
mov
cwtl
xchg
loop
cwtl
gs
ret
popa
adc
push
pop
jecxz
ret
cltd
int3
movsb
push
xchg
mov
add
into
mov
imul
aas
cmp
repnz
xor
lea
in
popa
push
mov
sub
rcl
sub
das
aas
fwait
pusha
les
jne
mov
inc
fs
das
ret
or
hlt
je
shll
push
mov
lcall
mov
jne
ret
negb
add
push
gs
cs
jne
mov
sbb
add
push
push
jmp
jae
xor
add
arpl
mov
xor
inc
xlat
leave
mov
jno
adc
mov
mov
hlt
or
iret
jns
clts
popf
cmp
adc
ret
out
inc
movsb
cmc
out
lea
ret
cmc
out
jmp
and
aad
hlt
or
mov
jo
push
mov
cltd
addr16
cmp
adc
jmp
ss
jle
js
inc
xor
jae
cmpsb
push
inc
cmc
addr16
mov
sub
in
insl
sar
pop
decb
sbb
sbb
dec
add
xor
mov
sahf
sbb
pop
leave
dec
dec
adc
pop
or
filds
xchg
mov
xchg
data16
lods
jg
stc
stos
cwtl
ja
and
pop
or
mov
outsl
shl
dec
xor
fcomps
or
outsl
fldcw
and
mov
jae
idivb
fst
jne
or
and
mov
sub
imul
mov
sbb
mov
adc
lods
jmp
push
xchg
mov
stc
out
out
arpl
jmp
insb
pminsw
sub
sub
jbe
mov
mov
cs
cwtl
loope
fidivs
mov
imul
sahf
pop
in
loopne
sarl
or
sbb
push
add
negl
adc
mov
cs
movsl
mov
repz
bnd
hlt
mov
jp
cwtl
mov
mov
data16
mov
stos
into
cmpsb
out
jp
lds
enter
sub
fists
push
push
cld
sbb
mov
lret
loop
jg
mov
sbb
jne
cmp
jo
js
mov
inc
jmp
shll
mov
and
add
add
and
test
mov
in
and
out
push
int3
jae
arpl
cli
cmc
in
sbbl
sub
lock
xchg
testb
icebp
push
jle
xchg
and
cmp
in
push
lret
and
push
gs
mov
sub
push
jmp
mov
cmpsl
mov
fsubrl
aam
mov
and
xor
mov
pop
push
sbb
xchg
lds
mov
xchg
or
roll
add
test
ficomps
jecxz
pop
aam
push
imul
lds
fcmovu
leave
loopne
ret
adc
mov
insb
sbb
dec
push
jl
sti
int3
setg
mov
arpl
mov
cmp
and
mov
inc
push
add
and
push
orb
sub
jns
loop
mov
nop
int
add
pop
aaa
aam
mov
jmp
add
sub
test
cmp
mov
sbb
cmpsb
xchg
pop
hlt
mov
pop
bound
inc
idiv
mov
mov
inc
lret
dec
sbb
cmp
jns
cltd
or
ds
add
mov
mov
jnp
xor
sub
pushf
cld
push
test
aam
add
sub
cmp
dec
jp
jp
sub
xchg
jae
lret
pop
lret
scas
pop
lods
xchg
popf
imul
imul
xor
add
sbb
rcrb
cmpsl
xchg
and
bound
push
push
jp
repnz
icebp
adc
jp
sbb
mov
inc
in
xchg
mov
and
mov
fs
push
mov
insl
inc
push
mov
add
lods
ret
rcrl
xchg
ss
mov
and
adc
imul
mov
fcmovu
pusha
daa
les
mov
push
movsl
xlat
pop
std
insl
lcall
inc
outsb
inc
mov
xchg
int3
das
push
sub
cmp
notb
fcoms
add
xchg
imul
dec
or
sti
shlb
aaa
jne
cmovne
iret
mov
jb
mov
out
mov
mov
stos
fwait
push
test
cs
fnsave
fwait
and
sub
scas
push
test
or
dec
xchg
out
aad
adc
lds
loope
movsb
pop
inc
xchg
out
pop
push
mov
dec
or
leave
sbb
aam
les
push
sbb
mov
fs
sti
cmp
or
pop
sarb
push
xor
ja
arpl
pop
xchg
and
pop
js
push
testb
mov
imul
movsl
or
mov
fwait
xchg
adc
inc
loop
jg
in
mov
xor
mov
jbe
jne
mov
mov
xor
xchg
cltd
pushf
xor
or
pop
js
jmp
test
xchg
and
outsl
xchg
les
andl
adc
jecxz
add
cmpsl
push
and
add
pushw
scas
es
sub
outsl
cmp
push
outsb
cltd
mov
cmpsb
and
mov
xor
ret
ret
cltd
and
fnstenv
mulb
into
mov
lcall
cmp
or
mov
mov
xchg
or
popa
pushl
pop
xor
shll
and
stos
pop
xchg
dec
mov
lock
xor
push
add
cmpsb
cmpsb
ja
mov
mov
js
mov
mul
inc
js
fstpt
or
insb
push
out
ss
fisttpll
xor
enter
and
pop
push
cmp
add
bound
fisubs
out
adc
in
push
pop
aaa
mov
xor
and
pop
push
xor
mov
rorb
mov
jne
lret
sbb
shlb
data16
push
rorb
cmc
push
mov
adc
sahf
sub
xlat
gs
cmpsb
dec
and
lods
dec
inc
nop
xor
or
mov
mov
and
jmp
mov
fists
stos
sub
dec
mov
fldl
jbe
scas
mov
int3
hlt
mov
jbe
addl
enter
push
and
dec
lock
lock
sub
sub
or
in
adc
loope
outsl
pushf
fidivrs
jmp
inc
movsl
cli
stos
nop
adc
jbe
enter
xchg
insl
mov
xor
jmp
dec
sbb
xor
mov
mov
adc
mull
test
fisttps
out
xchg
and
mov
mov
bound
sar
push
js
iret
jp
fstpl
orb
insl
jle
or
inc
cmp
pop
push
out
lds
push
and
mov
dec
cmpsl
cmp
inc
add
int3
repnz
addl
mov
jo
cmp
adcl
add
ljmp
mov
or
cmp
mov
inc
sub
movsb
dec
repz
sub
in
xor
dec
mov
outsb
pop
stos
pop
or
mov
in
icebp
dec
rcr
pop
adc
mov
add
jmp
les
iret
fcmovb
out
mov
add
out
in
adc
jecxz
sub
ds
push
mov
mov
dec
mov
push
push
test
mov
inc
insb
mov
repz
xchg
popa
sub
loope
lea
stos
ds
std
hlt
push
shrb
clc
popa
aaa
mov
out
or
out
mov
repnz
xor
lcall
arpl
lcall
aam
inc
cltd
cwtl
fs
ljmp
popa
pop
loop
rcll
inc
adc
icebp
and
jne
mov
cld
es
fiaddl
jg
fldl2e
mov
push
in
test
mov
pop
subb
push
lret
inc
jbe
mov
addr16
add
ss
xchg
jbe
mov
pop
out
orb
aam
outsb
arpl
and
push
fmull
rolb
and
stc
std
mov
jbe
dec
add
xchg
aas
movsb
test
or
movl
mov
jmp
add
jecxz
push
mov
aad
push
aam
mov
adc
mov
mov
or
fistps
or
stc
mov
pop
dec
je
fcmovu
scas
enter
push
mov
and
in
test
jns
jmp
adcl
ljmp
ljmp
call
cwtl
inc
fdivs
cwtl
dec
add
cmp
movsl
rcrb
push
cmpsb
in
dec
cmp
xchg
push
fistps
ficomps
mov
xlat
ficomps
repnz
mov
icebp
push
push
fcmovnu
dec
inc
pushf
fmul
mov
lods
push
mov
popa
leave
das
arpl
js
sbb
ss
test
jle
shrl
dec
shlb
das
clc
push
cmp
loopne
mov
fisubrs
aam
push
mov
call
mov
in
jbe
outsb
cltd
stc
loopne
cltd
mov
push
mov
fs
mov
sbb
push
enter
cmp
inc
mov
call
xor
mov
and
pop
test
add
push
dec
sbb
push
leave
or
aam
aaa
mov
in
addr16
adc
xor
call
pop
sbb
dec
addr16
mov
inc
ret
mov
push
add
inc
mov
mov
es
rol
inc
lock
inc
mov
testb
mov
xchg
sbb
loope
sub
mov
adc
repnz
daa
adc
neg
mov
xchg
xchg
push
xchg
sub
scas
cvtpi2ps
sti
add
hlt
inc
pop
adc
adcb
flds
insl
inc
sbb
jp
push
push
jg
mov
mov
hlt
into
aaa
inc
jge
fstps
or
xchg
jb
daa
mov
push
push
inc
push
dec
and
loopne
pop
xchg
insl
sbb
add
arpl
pop
push
inc
ljmp
fld1
outsl
inc
sbbb
lcall
sub
nop
daa
nop
ds
dec
out
les
aaa
cmp
jo
cld
mov
cltd
or
pshufw
int3
jns
inc
cld
iret
jl
lock
sub
mov
adc
adc
hlt
popa
jb
int3
jb
or
xchg
add
mov
scas
push
jp
sub
cmp
data16
or
data16
mov
jne
fildl
scas
daa
test
and
gs
add
sbbb
adc
mov
push
sub
call
outsb
inc
in
sub
or
pop
xor
jg
les
mov
cmp
xchg
or
sub
out
mov
and
adc
bound
pop
sbb
mov
out
movb
test
add
movsb
ja
in
out
xchg
xchg
push
inc
cltd
pop
mov
add
jp
stc
jbe
adc
aam
movsl
inc
jbe
popa
xchg
dec
mov
mov
pusha
aad
das
or
jbe
sub
sbb
fistps
sub
repnz
sbb
jmp
shlb
int
mov
pop
ss
int3
and
add
mov
leave
hlt
inc
push
or
sub
bnd
mov
in
dec
jb
and
decl
jbe
aam
xchg
mov
mov
or
out
cltd
and
jecxz
or
xlat
movsb
cli
pause
sarb
jmp
je
and
les
and
cmp
and
lods
sub
dec
paddd
or
rclb
jl
push
nop
jae
inc
jmp
adcb
scas
popf
inc
das
lods
dec
sub
cmp
sbbb
add
jp
insb
or
mov
or
mov
xor
push
dec
pslld
pop
lret
mov
test
xchg
fadd
sbb
cmp
and
mov
test
cltd
std
sub
jecxz
fwait
lahf
jp
push
iret
mov
lcall
popf
and
inc
sahf
cmp
cmp
xchg
push
popa
xchg
inc
lahf
int
xor
push
in
leave
pop
scas
jne
imul
repz
lock
jmp
mull
mov
mov
mov
and
mov
into
inc
push
ret
lcall
dec
sti
shrb
inc
data16
stos
or
fdivl
negb
mov
add
dec
and
add
sbb
hlt
cmpsl
xchg
jae
insl
mov
xor
sbb
xor
insl
icebp
negl
aaa
adc
cs
mov
ljmp
cld
icebp
into
or
stc
xchg
loop
les
stc
mov
lahf
sti
imul
jmp
xchg
add
sbb
xor
lahf
or
and
and
in
mov
pop
stos
lods
mov
popf
pop
jb
or
mov
dec
push
xlat
or
mov
bound
orb
inc
popf
dec
jns
in
jnp
dec
pop
pop
sub
xchg
inc
das
pop
pop
hlt
test
dec
mov
popf
ret
mov
imul
fsubl
push
insl
sub
pusha
ds
push
push
adc
xlat
mov
iret
dec
clc
dec
xchg
sub
addb
inc
rcl
inc
flds
mov
lea
test
jno
rclb
sarl
lcall
jmp
rclb
mov
stc
inc
dec
pop
push
test
jae
scas
lods
mov
lret
add
gs
daa
jns
enter
dec
aad
mov
inc
mov
pusha
or
lret
pop
sbb
insb
mov
les
push
sar
mov
sarb
pop
mov
fildl
sub
shlb
push
pop
adc
adc
sarb
bound
cmp
outsb
mov
lahf
test
cmp
clc
adc
lds
and
rcl
andl
pusha
lods
mov
dec
xchg
pop
lods
mov
mov
lods
and
pop
imul
sarl
jmp
stos
and
dec
dec
clc
cmp
sub
mov
mov
adc
sarb
mov
popa
jbe
icebp
movsl
push
sub
add
dec
inc
jmp
push
into
packsswb
orl
xor
out
push
aam
repnz
dec
adc
std
out
popa
push
push
mov
xacquire
lock
scas
cs
pusha
inc
xchg
mov
pop
gs
add
lods
in
popa
and
jbe
add
imul
pop
dec
sbb
and
scas
pop
mov
xchg
mov
sub
xchg
loop
sbb
popa
loop
insl
sbb
into
inc
mov
out
js
cld
xchg
cmpsb
out
dec
xorb
idivb
pop
and
bound
rorl
out
lods
xor
jo
inc
push
inc
mov
aas
jno
mov
pop
loopne
cmp
into
sbbb
testl
xchg
and
les
jns
dec
adc
mov
jle
cmp
js
pop
xlat
imul
fs
imul
clc
leave
insl
jne
dec
xchg
sbb
push
shrl
test
add
test
std
sbb
mov
pop
mov
fldcw
je
pop
xchg
aas
mov
cld
test
inc
adc
xchg
push
in
jp
dec
loope
adc
or
addr16
sbb
or
lcall
test
lods
leave
fnstcw
insb
mov
repz
pusha
sub
or
pop
push
mov
sbb
mov
enter
pushf
xlat
push
add
jbe
jne
mov
stos
cmp
and
pop
mov
mov
out
inc
cld
xchg
cmp
das
lds
inc
sub
mov
cmpsl
ucomiss
nop
cmp
xor
jecxz
dec
stos
fsubr
loope
mov
out
lea
call
in
add
mov
or
pop
mul
js
xlat
add
adc
push
sbb
jb
fists
repz
cwtl
push
inc
ja
mov
cwtl
adc
xchg
fistpl
mov
mov
dec
idivb
pop
and
lea
shl
mov
sbb
std
mov
repnz
mov
hlt
js
add
in
xchg
xor
add
sbb
aam
jae
add
bound
pop
popa
cmpsl
cltd
jecxz
call
adc
jo
push
test
seta
xor
scas
out
cmp
xor
push
fisubs
lret
andb
xchg
dec
lea
rorb
cmp
sub
and
push
xor
xchg
insb
ret
pushf
test
xor
cld
or
repz
mov
movl
push
lret
sub
push
ret
in
mov
leave
popf
mov
inc
jp
sbb
cmp
xchg
dec
adc
push
mov
push
xor
jp
xor
jns
sahf
xor
leave
sbb
cs
cmc
mov
push
xor
addr16
int
push
loope
or
adc
inc
loop
dec
int
in
aam
outsb
mov
pop
cmpsb
lret
jecxz
ffreep
mov
jl
cmpsb
xchg
xchg
jo
movsl
dec
xchg
jmp
mov
and
push
mov
aas
sub
mov
mov
mov
add
int3
dec
xor
add
mov
iret
and
test
dec
sbb
mov
and
subl
clc
repnz
push
aas
xor
inc
lock
mov
xchg
xchg
in
jnp
mov
adc
dec
test
xchg
sti
pushf
les
enter
insl
dec
dec
xchg
xor
mov
aaa
add
out
rcll
inc
daa
insb
outsl
mull
sub
mov
pop
jns
nop
data16
loop
pop
mov
fisubrl
mov
pop
push
and
ljmp
mov
inc
movsl
bound
test
mov
adc
add
andb
repz
js
test
negl
shll
sub
mov
lods
push
scas
sub
push
inc
into
outsb
cmpsb
ficoml
jg
cmp
push
adc
loopne
sbb
and
inc
enter
xchg
fists
push
addl
adc
std
mov
push
test
insl
pop
clc
ds
mov
xchg
jmp
cmp
or
in
pop
rcrl
imul
dec
push
sbb
rcll
enter
jbe
pushf
out
icebp
test
imul
lods
hlt
popa
int3
xlat
push
xor
test
pop
loopne
mov
and
addb
and
sbbl
js
lahf
addr16
mov
or
rcrb
scas
lods
or
mov
adc
inc
cli
jmp
jl
ror
fbld
movsl
fisttpl
js
mov
and
das
pop
lcall
pop
jl
pop
add
jns
push
jno
loope
cmpsb
lcall
mov
pop
add
lods
shlb
xchg
push
adc
imul
jmp
xchg
or
in
sbb
pop
pop
xorb
cwtl
sub
ja
scas
sarb
inc
push
adc
inc
int
jmp
inc
jnp
or
inc
mov
andb
sbb
mov
adc
fstpt
popf
lcall
mov
push
ret
inc
clc
stos
fcomps
mov
push
and
movsl
lret
sbb
jb
mov
int
pop
rorl
mov
inc
sbb
jle
inc
and
mov
and
xchg
lret
push
or
dec
mov
testl
daa
test
mov
lock
push
popa
sti
xchg
cmpsb
add
sti
or
shrl
ds
cmpb
fadds
out
jle
out
push
addr16
dec
hlt
movsb
sub
nop
mov
sbb
rcl
push
js
lods
insl
adc
mov
sbb
jge
nop
jns
jl
in
test
jp
fucomp
xchg
lret
xchg
dec
adc
popa
js
push
mov
adc
das
pop
mov
test
test
leave
push
xor
fisttps
cmpsl
mov
stos
mov
in
aad
leave
adc
cmpsl
out
lahf
rcrl
pop
mov
mull
enter
cmpsb
or
inc
roll
mov
jo
add
and
adc
xchg
in
inc
je
adc
dec
das
adc
sbb
push
inc
push
adc
xor
and
icebp
xchg
stc
adc
pop
mov
mov
sbb
out
or
imul
cs
js
jae
in
cli
push
add
mov
add
pushl
and
cltd
outsl
out
stos
inc
jl
daa
loopne
dec
into
dec
clc
dec
and
jge
int3
jmp
imul
pop
mov
dec
bound
pop
xchg
shrl
push
jns
mov
daa
or
dec
ljmp
dec
sbb
test
dec
into
loope
daa
out
movsb
or
mov
pop
add
outsb
jno
push
push
scas
in
push
cmp
mov
add
sti
inc
add
icebp
jno
xor
xchg
mov
adc
cmpsb
sbb
jg
pop
dec
cmp
inc
sbb
ret
je
inc
cmpsb
inc
inc
out
call
pop
mov
mov
ret
add
cmp
ja
dec
add
mov
stc
mov
sahf
push
aas
fstpl
pop
or
jns
pop
xchg
xchg
pop
and
int
jae
jge
mov
jb
cmp
dec
in
out
int
add
rorb
sub
pop
xor
xchg
adc
js
mov
push
sub
imul
imul
mov
rcr
push
add
cmc
xor
jnp
popa
jp
sar
hlt
call
sbb
add
lock
pop
and
or
xchg
cmp
lock
sub
lea
push
ret
jo
aad
adc
xchg
les
mov
lock
or
mov
sar
cmpsb
cmpsb
add
and
and
cmp
mov
or
jle
stc
lret
roll
fdivrl
jno
in
es
pushl
cmpsl
mov
out
cwtl
xchg
shrb
jb
dec
jno
xor
pop
int
cmp
cmp
and
jae
stos
cmp
dec
loope
out
inc
jbe
pop
hlt
mov
cld
popa
cmp
xor
jl
jl
inc
aas
push
es
dec
fsub
jne
mov
pop
fisttpll
outsl
jmp
mov
xor
cmpsb
lods
pop
mov
inc
jge
mov
jae
inc
cmp
shl
lds
js
adc
scas
mov
push
subl
ret
sahf
fnstcw
out
pop
inc
ror
sbb
adc
sbb
jl
cmp
daa
out
jg
mov
adc
mov
fnsave
daa
push
mov
mov
pop
pop
lock
or
dec
mov
xchg
cltd
jl
pop
enter
into
jae
movsb
push
xchg
and
lock
movsb
test
cmc
je
in
rol
ljmp
mov
cltd
jb
or
adc
inc
jge
lea
sbb
fnstcw
inc
and
pop
adc
inc
ret
nop
lret
ficompl
xchg
clc
jg
and
in
int3
mov
insb
add
push
loop
and
inc
sbb
out
fstpl
cmp
cmp
push
mov
sub
mov
mov
lock
xchg
mov
push
adcb
imul
aaa
mov
sahf
push
std
pop
decl
sub
test
lock
dec
sub
and
pop
lods
roll
push
sub
mov
addl
push
and
mov
cmp
mov
jg
pmuludq
xor
popf
js
or
adc
mov
xor
hlt
xchg
push
sub
js
fildl
out
inc
int
add
shlb
es
addr16
imul
imul
mov
iret
mov
adc
outsb
mov
insb
arpl
stc
cwtl
addb
and
cmpsl
aam
enter
out
xchg
mull
cmp
cld
outsl
jl
push
mov
outsl
clc
adc
inc
push
lock
cmp
add
shl
mov
dec
adc
and
arpl
aas
out
jne
dec
aad
and
xor
xlat
repz
and
cwtl
out
mov
bound
daa
mov
and
ret
cmp
das
jnp
in
jae
shrl
test
stc
jge
sbb
adc
outsb
or
cmc
pusha
pop
inc
fisttpll
call
jle
jae
pop
dec
cltd
cmp
jp
dec
xor
jle
mov
and
test
loop
repz
add
mov
sbb
mov
xor
mov
dec
cmc
ljmp
mov
or
push
adc
rol
mov
ffree
xor
push
ds
xchg
cmp
in
decl
inc
cli
aas
sub
lret
lds
out
bnd
cli
pop
sbbb
int3
mov
lret
xor
leave
cld
jle
fdecstp
lcall
and
ss
cmp
pop
sub
test
stos
imul
movsl
and
arpl
lods
dec
mov
sahf
sahf
adc
lods
lret
mov
repnz
in
js
xchg
jnp
loope
sbb
stos
cltd
pop
jnp
dec
int3
sub
int3
shl
aas
or
movb
add
out
int
std
push
or
fsubp
sbb
subl
test
adc
cmp
arpl
or
xchg
mov
outsl
fwait
mov
iret
mov
stc
arpl
subb
je
fsubs
inc
aam
sub
inc
sbb
push
nop
inc
outsb
add
sub
repnz
ss
movsl
fwait
xor
pop
xchg
dec
clc
ret
inc
fdivrs
mov
cmc
jecxz
scas
inc
lds
loopne
sub
cltd
push
adc
lret
dec
or
pop
lods
push
adc
xchg
mov
jnp
mov
lret
adc
mov
inc
sbb
outsl
push
jmp
push
mov
push
or
xchg
mov
lock
sub
loop
dec
mov
and
jg
out
and
dec
out
scas
xchg
fiaddl
and
cwtl
frstor
jmp
sti
xor
jg
jecxz
inc
jno
lods
sahf
lret
cltd
ret
out
rcrl
repnz
mov
call
and
test
add
clc
sahf
and
add
repz
loop
mov
push
or
pop
ret
fs
repnz
pop
xchg
loope
aas
test
rorb
aam
ret
nop
push
jle
push
dec
insb
call
aam
ret
ja
mull
bound
xor
mov
jle
mov
inc
sub
sub
push
lcall
sub
int
mov
loopne
sbb
lea
lahf
xchg
sbbb
jb
mov
push
inc
in
loop
in
fsubp
out
pop
stos
xchg
mov
jns
pminsw
dec
pop
add
fmull
jp
push
pop
adc
shlb
adc
mov
add
lods
or
or
lret
mov
and
sbb
xor
mov
incb
cld
dec
mov
int3
in
rdmsr
pop
adc
xor
into
adc
cwtl
mov
xor
outsb
scas
xchg
push
leave
sub
add
sub
les
outsb
dec
push
arpl
push
pop
cmpsl
icebp
adc
sbb
cmp
pop
sti
nop
jp
sbb
xchg
leave
push
push
or
mov
jg
mov
xor
sub
cmp
cmpsl
inc
dec
subb
leave
and
mov
push
push
xchg
inc
repnz
fnstsw
or
repnz
xor
sbb
ret
fmull
test
lds
lock
xor
push
add
call
jle
jecxz
stc
mov
sub
push
mov
fwait
stc
testb
xorl
xor
daa
dec
dec
xchg
mov
push
aas
adc
insb
int3
xor
sbb
ret
cmpsl
test
mov
pop
sub
loope
cs
inc
test
push
addr16
dec
sbb
xor
jecxz
cmp
and
in
icebp
fildl
test
in
fwait
pop
out
mov
stc
aad
jecxz
dec
pop
fists
mov
push
int3
fiaddl
ret
or
jge
pop
push
mov
push
loope
and
ja
cmp
cltd
jb
loopne
cmp
fwait
sbb
imul
rcrb
sbbl
mov
lock
mov
mov
arpl
mov
mov
mov
inc
lcall
mov
imul
jnp
push
lock
aad
fs
pop
pop
aas
dec
test
cmp
lret
dec
pop
push
pop
outsb
inc
std
fnsave
xchg
mov
jno
pop
mov
dec
test
dec
dec
mov
gs
jne
hlt
sti
and
sbb
mov
paddb
out
das
sarl
in
pop
push
xchg
cmp
mov
repnz
clc
mov
inc
mov
or
xchg
push
test
aam
cmpsl
or
int
or
add
cwtl
arpl
mov
mov
jnp
mov
sub
mov
sub
jp
mov
mov
pusha
loopne
addl
int
lahf
loopne
sub
enter
xor
in
adc
pushf
fwait
cmp
cmp
jmp
lret
rep
ret
push
xchg
insb
mov
adc
cld
nop
idivb
xorb
jo
push
shlb
ret
lret
jnp
aas
pop
lret
pusha
inc
adc
clc
xchg
sub
cmp
cli
out
imul
pop
jne
nop
clc
ljmp
lahf
fldl
out
mov
xchg
xchg
or
test
mov
xorl
out
mull
add
jnp
add
pop
int
push
adc
push
iret
bnd
out
nop
pop
mov
fldl2t
xor
test
fsubl
icebp
jge
das
movl
or
push
and
jp
hlt
sahf
push
stos
xchg
pop
ss
add
jge
rorb
rcll
jle
sahf
cli
sub
shrb
xchg
aad
xlat
into
mov
sahf
push
xchg
lret
sbb
lods
and
adc
cmp
fiaddl
cmp
inc
cmp
xchg
adc
cmpb
xor
cmp
xchg
aaa
out
or
fcmovbe
movsb
mov
sbb
imul
ljmp
cmp
or
sarb
int
inc
jo
in
or
mov
jmp
push
push
or
mov
add
fcmovbe
lock
add
mov
or
iret
ror
jle
daa
test
js
out
fsubrl
std
xlat
cmp
inc
imul
lret
xchg
sbb
mov
aad
jmp
les
add
jg
xchg
inc
outsl
push
and
jae
push
ds
jle
repz
in
in
cmp
adc
xor
adc
xor
push
add
loop
pop
add
sub
cmpl
icebp
mov
mov
mov
add
jecxz
jge
add
and
adc
mov
push
fimuls
xchg
daa
es
loopne
in
insb
cmp
stos
pop
shl
dec
xor
nop
sub
daa
mov
andb
test
mov
mov
js
jno
jmp
xor
pop
pushl
xchg
sbb
pop
lds
sbb
pop
pop
inc
mov
push
fcoml
inc
flds
loope
sbb
ja
mov
outsb
bound
nop
test
xchg
lods
out
lods
mov
dec
lods
sub
and
subb
mov
jne
in
addr16
cmpsl
mov
dec
add
mov
imul
add
add
xchg
lret
add
mov
push
sbb
xor
imul
xor
notl
jmp
shll
out
jl
lret
xlat
push
bound
loope
xchg
jo
cmpb
pushf
mov
pop
inc
test
test
lret
sub
arpl
cmp
leave
fwait
movsl
loop
clc
mov
mov
push
aaa
xchg
mov
je
mov
mov
xchg
mov
add
dec
push
push
std
jle
jge
push
lret
nop
pop
jg
mov
dec
cmp
leave
adc
mov
cltd
fsubrl
out
xlat
pop
mov
push
mov
or
xor
lcall
sbb
cmp
rolb
and
pop
or
push
push
cmp
push
cmpsl
rorb
cs
fwait
jae
roll
push
repnz
stos
sub
test
fs
repnz
pop
les
movsl
popa
test
dec
and
mov
ret
test
fs
int3
push
or
jne
outsb
out
mov
push
gs
mov
rolb
outsb
xor
cli
push
and
xchg
idivb
fdivr
adc
push
mov
stos
push
or
xor
push
fwait
lock
sarb
add
mov
or
lret
jmp
xor
je
jae
jmp
bound
mov
rcrl
sbb
rcll
mov
inc
xchg
and
in
stos
dec
cmpl
jno
mov
dec
adc
xor
and
jg
mov
cmp
jecxz
mov
xor
iret
int
fidivl
lcall
lds
scas
je
mov
sub
int3
push
jns
divl
mov
inc
mov
sub
sub
mulb
ret
sub
xchg
mov
lahf
fdivp
pop
dec
outsl
jne
sbb
add
cmpsb
push
test
cmp
cwtl
lods
mov
or
sub
sub
repnz
xchg
jl
movsb
jo
insb
clc
adc
mov
mov
jae
cmp
xchg
pop
scas
jmp
cmpsl
subl
xchg
add
imul
dec
and
repz
sub
mov
fs
jge
pop
in
in
add
add
fs
sbbl
jns
ljmp
into
adc
inc
movsb
dec
mov
push
fsubr
movsb
arpl
mov
xlat
mov
and
insl
dec
es
cmpsl
enter
push
sub
and
sbb
add
push
jmp
lret
in
xor
je
push
leave
cmp
pminsw
in
in
mov
pushf
mov
xchg
outsb
mov
dec
in
or
jp
cmp
and
fstpt
imul
out
lret
xlat
pop
inc
out
adc
popa
mov
loopne
nop
jnp
jno
lods
movsw
jg
rolb
enter
cld
test
pop
lcall
or
push
xor
cmp
push
or
adc
enter
loope
shlb
imul
mov
inc
xchg
xor
jle
imul
sbb
into
mov
in
cs
lahf
inc
repnz
pusha
pop
stos
xchg
mov
add
ret
repz
xor
push
shrb
in
xor
in
dec
aad
and
lods
add
lahf
dec
aas
jge
or
add
cmp
mov
or
push
out
shrl
pop
adc
xchg
mov
push
adc
rorb
jns
or
pop
movl
sub
cmp
test
mov
in
movsb
dec
lods
jbe
jp
fld
mov
inc
es
arpl
ficompl
cwtl
aad
mov
insl
pop
ficompl
aam
je
pop
push
cmpsl
dec
aas
stos
in
lahf
scas
pop
xor
mov
xchg
lcall
popf
scas
push
xor
sahf
js
push
mov
inc
cmp
pop
out
pop
pop
out
fbstp
dec
orl
mov
fucom
jg
rcr
push
fs
pop
mov
jae
pop
add
sbb
mov
icebp
imull
jnp
adc
pop
jae
inc
dec
and
js
and
sub
addl
xchg
cmpsl
pop
mov
pop
jmp
fcmovnbe
fmul
xchg
fildl
inc
inc
xorb
push
dec
jl
sub
sub
or
aam
movl
pop
clc
xchg
ja
dec
jne
testb
cmp
and
or
xchg
and
imul
nop
sti
pop
repz
insb
push
xchg
sub
pop
leave
push
mov
dec
sbb
add
inc
xor
es
aad
daa
test
adc
out
pop
rcl
or
jns
xor
pop
outsl
jno,pn
or
fisttpl
mov
daa
mov
push
hlt
fnstenv
in
dec
xchg
jb
fists
xor
mov
jl
or
lahf
push
std
sbb
mov
test
rclb
jl
sbb
xchg
push
cmp
push
jno
lret
and
add
loop
push
xor
cmp
or
js
adcb
repz
sbb
sbb
mov
xor
sarb
push
sahf
adc
xorb
gs
mov
repz
mov
mov
stos
or
aad
inc
stos
sub
inc
cltd
xchg
push
mov
mov
mov
je
xor
dec
dec
mov
sub
mov
insb
lds
fwait
loope
insb
cmc
pop
rcr
and
into
sbb
divl
insl
push
repnz
fisubs
or
dec
cmpsb
add
xchg
xchg
xor
das
push
mov
push
jne
pop
cmpsl
into
stos
add
leave
xor
pop
js
stc
add
popa
add
jp,pt
test
mov
sahf
not
or
lret
xor
rorb
stc
adcb
aam
cmpsb
cmpsb
fnstenv
cmp
adc
push
pushf
rorb
adc
push
jne
data16
and
jmp
or
rolb
pop
or
pop
dec
popf
jg
into
lds
push
add
jo
fimull
lret
mov
daa
repnz
les
mov
es
add
and
xchg
fcomi
mov
cltd
sub
sbb
cmc
lret
movsb
mov
xor
gs
pop
fldcw
lret
iret
cmp
push
popa
xor
push
pop
adc
imul
popf
ror
mov
in
aas
push
mov
add
shl
shl
add
je
xor
pop
sbb
dec
mov
int
testl
imul
in
test
cld
into
stos
fsub
shrl
dec
adc
test
cs
jle
xchg
stc
cmp
sub
popf
aam
jnp
test
xlat
mov
mov
out
adc
mov
push
adc
repz
std
push
jge
jp
sbb
sti
push
iret
adcb
lock
shr
in
mulb
push
clc
rcrb
mov
sbb
push
inc
xor
ljmp
decl
outsb
in
adc
xchg
hlt
out
movsl
daa
jo
or
and
lods
stos
adc
lea
xor
and
xor
js
iret
push
sbb
or
mov
in
add
xor
imul
push
test
lahf
push
aam
fwait
les
aas
dec
ljmp
repnz
pop
sahf
mov
clc
xor
dec
addr16
test
xchg
out
cmpps
xor
cmp
mul
test
mov
mov
test
xchg
and
add
push
adc
pop
lods
jbe
shll
mov
inc
or
mov
test
mov
shrb
pusha
scas
test
lret
inc
sbb
lock
jl
pop
jns
lret
add
push
mov
fidivrl
enter
add
pop
and
jns
test
sahf
notb
and
push
xor
inc
adc
testl
js
xor
fildl
add
mov
push
add
jmp
ja
sbb
inc
or
popf
and
pusha
repz
xchg
arpl
pop
adc
jmp
inc
test
adc
arpl
inc
rclb
testl
daa
loope
and
ret
std
xor
arpl
or
and
lods
and
jno
sahf
push
aam
js
ret
imul
mov
dec
mov
mov
push
mov
imul
out
clc
sub
les
jne
inc
dec
cmp
mov
lds
add
mov
fsts
cmc
pop
test
xlat
insl
add
adc
dec
adc
sbb
and
lcall
insb
cmp
fcomps
pop
pop
insb
loop
dec
mov
loop
sub
movsb
std
popa
scas
pop
loopne
pop
addr16
mov
add
jb
xchg
jecxz
pop
pop
test
inc
cld
jne
lea
lret
les
pusha
insl
push
push
sbb
push
inc
adc
jne
push
jecxz
mov
mov
fnstsw
sbb
or
lret
fmull
or
or
es
pop
mov
xchg
add
xor
pop
rcll
outsb
shl
dec
in
jge
cwtl
adc
outsl
mov
xor
mov
lret
sbb
es
push
sub
xor
roll
outsl
arpl
inc
pop
cmp
fisttpl
pop
loopne
and
or
divw
sbb
lcall
stc
out
stos
xchg
aas
icebp
aaa
or
cmp
push
jmp
in
fsubs
data16
jmp
rclb
adc
sub
in
push
pop
cmp
repz
pushf
les
test
es
inc
cmp
jle
lea
sbb
lds
jmp
in
xor
shl
fmull
rcl
push
dec
pop
out
andb
lods
inc
out
out
aaa
mov
mov
push
call
loop
addl
jl
xor
jl
cmp
dec
out
in
in
sbb
sub
lods
dec
and
sar
dec
clc
xor
and
ret
subb
ljmp
lret
mov
sbb
jl
into
xchg
in
adc
lock
cld
mov
pop
or
lret
lret
sub
rcrb
mov
icebp
jmp
aaa
mov
inc
mov
test
test
fnstsw
inc
inc
mov
xchg
cs
cmp
add
adc
arpl
dec
pop
pop
lea
pop
inc
adc
popa
jp
cld
push
mov
mov
dec
fimull
les
mov
movsb
popa
lret
insb
inc
hlt
mov
push
int
or
scas
mov
lds
popa
mov
mov
daa
inc
aam
push
popf
js
cmp
sbb
mov
aaa
ss
cmpsl
repz
mov
fisubs
pop
push
xchg
movsb
push
js
faddl
push
xchg
in
lcall
arpl
add
rol
fcompl
mov
mov
test
lods
out
xchg
test
hlt
lcall
lock
movd
aaa
out
and
je
stos
pusha
std
aaa
cmp
and
sbb
add
add
sarb
lahf
adc
iret
enter
xchg
jo
loopne
sbb
or
mov
add
mov
ss
mov
mov
xchg
cmp
add
fdiv
in
rcr
js
add
cld
xor
test
lcall
std
mov
push
and
repnz
rolb
int
fdivl
push
hlt
or
mov
mov
add
inc
mov
inc
mov
mov
and
dec
fwait
mov
pop
mov
lock
rclb
dec
sub
sarb
xchg
fdivr
sysret
xor
cmp
stc
pushf
pop
push
mov
imul
push
jae
jl
adc
sbb
movsb
xlat
repnz
out
addr16
xor
int
push
inc
xchg
sub
mov
sbb
pop
xor
mov
sub
ds
adc
mov
sub
iret
and
push
fucomi
adc
iret
loop
inc
xor
aas
lret
lret
sub
outsb
enter
pop
cmpsb
xchg
pushf
or
in
dec
mov
push
pushf
sub
push
ret
popa
icebp
and
mov
imul
dec
xchg
lret
jns
hlt
test
mov
mov
pusha
mul
jno
icebp
lea
mov
lret
mov
adc
mov
xor
stc
cmpb
xor
mov
xor
call
call
rcrb
popf
jecxz
jns
gs
and
or
pop
jle
stos
add
sbb
jb
imul
cmp
ja
jge
xor
movb
ret
into
mov
test
sti
add
push
dec
test
nop
lcall
jnp
aad
mov
out
inc
dec
lret
js
aad
jnp
sub
and
jns
rolb
repnz
jge
das
pop
icebp
shlb
pop
jecxz
lret
std
test
jo
out
push
adc
imul
and
inc
lret
or
ret
mov
ljmp
mov
in
outsl
pop
into
xchg
bound
and
push
xchg
adc
inc
pop
sub
lods
or
in
lcall
or
out
xchg
adc
inc
dec
setle
das
mov
pop
push
mov
adc
outsb
das
lock
out
pushf
call
enter
dec
adc
cld
inc
cltd
bound
aam
mull
rorb
movsb
cmc
cmp
test
in
daa
cli
daa
or
adc
add
xor
out
ds
fs
mov
dec
movsl
dec
out
icebp
and
ret
sub
sbb
mov
push
add
arpl
cmp
mov
xor
sbb
fwait
int3
mov
int
xor
adc
inc
ret
outsl
bound
mov
add
nop
mov
lahf
ret
push
loopne
or
mov
fcompl
mov
push
jge
or
inc
fcmovbe
loop
ret
add
mov
fs
push
daa
push
sub
mov
movsl
fisttps
mov
dec
pop
push
mov
sbb
xchg
sub
mov
bound
sbb
jecxz
stos
or
hlt
nopl
or
jecxz
inc
dec
stos
dec
sti
popa
dec
sbbb
sub
mov
xor
sub
loop
push
push
cmp
lret
and
testb
popl
addr16
das
negl
int3
mov
xchg
or
add
sbb
aam
outsb
orl
and
sub
pop
or
xchg
push
outsl
pop
fsubr
pop
jl
arpl
mov
fs
pushf
push
call
or
mov
insb
cmp
enter
shll
jo
cmpsb
xor
cmpsl
sbb
push
sbb
in
cld
jmp
and
std
mov
daa
into
fldcw
sub
push
popf
insl
imulb
aam
sub
pop
outsl
std
repnz
jge
adc
jp
cltd
fldl
nop
mov
and
pop
stc
repz
lods
int
jecxz
lods
jbe
lret
jg
push
fstpt
pop
or
out
push
cs
inc
xchg
andl
push
pop
mov
xlat
jns
aam
mov
jmp
jp
fld1
imul
jg
cmc
mov
aas
jnp
and
out
xchg
mov
sub
fmull
lahf
js
jno
jo
es
in
or
inc
xchg
test
sarl
adc
loop
xchg
je
div
push
push
movsl
adc
ret
das
test
mov
imul
fwait
movsb
dec
leave
scas
sub
sub
inc
pop
mul
cmpsl
mov
xor
inc
sti
adc
clc
rcl
or
fwait
dec
mov
sti
insb
lock
outsl
mov
pusha
movsl
lock
mov
mov
nop
inc
sub
sub
mov
pop
jmp
aam
lahf
inc
or
scas
movsl
and
dec
movsb
adc
inc
clc
inc
push
sub
xchg
imul
pushf
jo
inc
jne
mov
add
adc
outsl
adc
cmpsl
jge
pop
dec
repnz
je
pop
cwtl
push
or
mov
sub
cld
cwtl
roll
mov
daa
sbb
enter
icebp
mov
mov
repnz
mov
inc
mov
mov
mov
clc
leave
pop
clc
ljmp
pop
cmp
lret
xor
stc
add
gs
adc
push
pop
aad
mov
mov
das
aas
jnp
in
lods
cmp
push
dec
jb
mov
stc
loop
in
add
pop
or
sbbb
outsl
inc
out
inc
sarl
cmp
rcr
pop
xchg
sbb
xchg
xchg
pop
je
lds
add
shrl
pop
sbb
mov
xor
mov
push
mov
rcrb
push
enter
mov
pop
fidivrs
jge
adc
jno
push
mov
sub
es
push
loop
xor
pop
inc
xor
cmpsb
jnp
push
mov
scas
clc
add
xor
shll
mov
aad
daa
in
mov
mov
jne
and
adc
je
rolb
sarl
cltd
mov
xchg
int
add
loope
imulb
cmp
ror
enter
sbb
xchg
inc
stos
les
adc
add
and
push
mov
mov
push
cli
mov
jo
or
jbe
xor
test
int
jnp
mov
imul
fisttpl
jo
leave
push
push
loope
cld
rorl
iret
pusha
enter
xchg
mov
sub
jns
into
adc
mov
clc
mov
jbe
shr
lcall
mov
in
jle
cmpsl
cmpsb
xor
shlb
xlat
out
pop
mov
jg
xchg
rcr
fidivrl
inc
push
testl
es
sbb
shlb
inc
jne
xchg
add
loope
in
jo
dec
fsts
push
lock
lahf
cltd
mov
aas
mov
sbb
in
lock
fldz
xorb
dec
pop
pop
pop
jbe
fisttpll
sub
sub
vcvtss2si
mov
and
cmp
lret
push
insb
cmp
jmp
repz
bound
inc
xchg
xchg
andb
push
lcall
sub
push
jp
adc
sbb
mov
repnz
mov
jg
insl
leave
subl
push
nop
pop
mov
sti
mov
fs
and
adc
int3
fnstenv
or
cli
stc
cli
push
mov
and
and
arpl
int
jne
ret
sub
jge
push
and
or
xchg
xchg
mov
inc
in
pop
lods
and
push
pop
jns
movsb
adc
fsts
lret
push
pop
pop
fbld
js
mov
lods
inc
pop
adc
jl
mov
mov
pop
dec
scas
imul
mov
stc
add
fstpl
or
or
sub
loope
jecxz
mov
leave
pusha
aam
dec
sub
out
jnp
cmpsb
mov
cmp
inc
hlt
xchg
roll
loopne
movsb
sahf
pop
enter
in
mov
mov
lock
test
pop
sub
popa
imul
ja
jne
lods
in
pop
xchg
mov
loope
push
xchg
mov
xchg
repz
test
cmp
mov
in
adc
pop
sub
cwtl
icebp
nop
pop
inc
mov
enter
xchg
call
outsl
jo
fadds
ret
sarb
xchg
adc
ljmp
dec
sahf
test
or
mov
jnp
mov
mov
lds
mov
pop
mov
mov
cld
call
sub
xchg
sbb
pop
ds
les
mov
adc
not
jns
cmp
sarl
les
aad
mov
jne
cmp
jnp
stc
mov
icebp
sub
mov
outsb
pushf
popa
jge
push
mov
sbb
xor
test
nop
jae
add
jp
mov
aad
and
xchg
mov
lret
psllq
dec
gs
nop
and
in
jl
and
cmp
xchg
push
jb
aas
pop
xchg
sarb
loopne
frstor
out
insl
dec
push
stos
cmp
sub
adc
stc
mov
xor
loope
repnz
add
js
scas
xor
ljmp
std
in
push
pop
mov
pop
shrb
addr16
stc
pop
push
xor
jl
movsb
xchg
in
loop
lret
jle
arpl
stos
or
movsb
dec
pop
xchg
dec
sbb
cltd
xchg
xchg
mov
les
add
xchg
add
jo
jp
in
mov
and
mov
dec
inc
stos
pop
movsl
cmpsl
xor
sbb
cld
adc
stos
pop
cmc
popa
or
lahf
arpl
insl
lcall
cmp
fiaddl
xchg
mov
sbb
xchg
adc
aad
xchg
jge
imul
scas
push
inc
nop
xor
imul
pop
mov
lock
ret
jge
hlt
shll
fidivs
stos
push
sbbl
dec
push
xor
repz
jge
and
dec
cmp
xchg
dec
cmp
in
and
pop
push
hlt
xor
sbbb
adc
cmp
push
jae
daa
in
xchg
push
out
sub
jnp
xor
and
xchg
testb
movb
sbb
sub
in
jno
aad
pop
mov
jge
divl
add
ficoml
mov
fsub
aaa
popf
sbb
hlt
mov
push
add
add
xchg
cli
scas
dec
add
dec
es
mov
adc
and
es
fidivrl
movsb
in
jo
inc
push
shlb
pop
std
xor
fidivrs
bound
sbb
rcrl
mov
out
jns
roll
mov
dec
cmp
outsl
mov
mov
jo
fwait
daa
inc
aas
inc
or
test
mov
jno
jmp
xchg
pop
mov
or
sub
jp
in
loop
pop
jp
adc
dec
mov
mov
repnz
hlt
add
sbb
fnclex
test
jl
dec
sub
lock
pop
ljmp
adc
pop
clc
push
xlat
aam
scas
in
sbb
inc
insl
mov
sar
mov
in
shrl
std
xlat
jo
xor
xchg
push
ret
xchg
dec
andl
jnp
insl
test
movsl
pop
or
sahf
int3
jp
nop
mov
iret
imul
and
mov
mov
loop
rcrl
leave
fwait
push
ret
arpl
add
or
loopne
les
xchg
loope
mov
insb
jnp
and
or
mov
jl
sbb
lods
pop
flds
xor
xor
sbb
pop
outsb
mov
lcall
push
and
test
sti
enter
sub
ret
outsl
hlt
cltd
ss
adc
dec
fisttpll
mov
js
out
lock
clc
int
cli
hlt
fsubl
mov
xchg
in
xchg
push
sub
gs
push
in
sub
push
mov
jge
imulb
mov
jmp
das
pop
cmp
or
cs
pushf
sbb
in
jle
out
imul
sub
rclb
sbb
pop
stos
mov
sub
test
lret
dec
dec
cmc
dec
cmp
jns
cmpsl
sbb
sbb
dec
cmp
push
sti
adc
push
push
roll
andl
dec
inc
sbb
fsts
lds
mov
lret
xlat
mov
mov
jle
mov
xor
test
popf
jae,pt
or
pop
out
sub
adc
mov
or
xor
pop
mov
adc
repz
or
xchg
out
jae
cmp
mov
mov
sbb
inc
add
or
pop
pop
mov
cmp
aad
jbe
ret
sub
mov
sti
adc
arpl
imul
repnz
fldcw
adc
les
jmp
push
jle
lret
icebp
xchg
insl
or
lahf
movsl
adc
xor
repnz
mov
sbb
inc
lcall
lret
ret
scas
stc
lret
dec
in
and
add
pop
out
fnsave
mov
les
xchg
mov
sbb
addr16
insl
push
cmpsl
fxch
xchg
adc
push
imul
stos
repz
outsl
clc
dec
lcall
sti
mov
shrl
roll
or
and
mov
xchg
call
push
push
fnstenv
lret
push
sahf
nop
lds
inc
push
adc
add
jmp
shll
jbe
insl
gs
pop
or
inc
mov
cltd
jb
jnp
into
push
scas
int
mov
dec
enter
mov
inc
pop
popf
repz
or
or
xchg
adc
dec
bound
fidivl
into
pop
sbb
aaa
mov
sbb
inc
mov
push
adc
shlb
fwait
push
nop
cld
inc
mov
mov
arpl
xor
xchg
push
in
inc
dec
lds
dec
in
fistl
out
or
daa
xchg
popf
xor
mov
fcmovne
mov
shlb
adc
push
or
mov
inc
xlat
push
cmp
and
mov
enter
outsb
sub
ljmp
dec
pop
aam
mov
test
add
mov
cmc
sti
and
stos
adc
les
repnz
mov
cmpsl
xchg
fwait
fs
cmp
movl
cwtl
and
push
pop
fmuls
mov
cwtl
loop
push
xor
fisttpll
cmpsb
add
imul
movsb
adc
data16
inc
dec
sahf
sbb
inc
push
mov
xchg
mov
repnz
push
lcall
adc
push
insl
in
scas
pop
cmp
xchg
push
movl
xor
push
sub
and
in
mov
mov
push
mov
adc
mov
scas
cmp
xor
jne
shl
pop
in
sbb
mov
adc
mov
jl
lds
pop
dec
call
mov
popa
aad
push
push
mov
or
pop
loopne
xchg
cmpsb
aad
sti
test
cmp
lods
lret
and
jmp
mov
xor
dec
or
addr16
jbe
add
ljmp
sub
sbb
xchg
and
jae
inc
jl
dec
adc
jae
aas
lods
mov
jp
aaa
adc
add
fstl
xchg
shr
dec
cmp
cmp
add
sar
or
loopne
pop
aad
js
adc
sbb
xor
and
fisttpll
mov
inc
and
aas
aad
add
and
xchg
shr
adc
xchg
popf
rclb
and
mov
mov
push
ret
andl
jne
cmp
not
push
mov
xor
jg
out
lcall
sbb
int3
and
ret
pusha
push
rolb
testb
arpl
push
and
arpl
leave
dec
clc
std
add
std
shll
add
lds
mov
mov
scas
xor
aas
fprem1
pop
or
mov
movsb
cmpsb
xlat
lret
xlat
test
test
xchg
cmc
pop
mov
jo
mov
pop
std
int3
dec
mov
mov
jns
rcl
xchg
mov
cld
or
popa
idivb
mov
in
jbe
cwtl
je
adc
roll
rol
mov
jp
in
insb
test
cwtl
add
mov
pop
movb
adc
dec
scas
xor
fdivs
insl
sbbl
les
cmp
pop
rcrl
mov
inc
aam
sar
sbb
in
sub
popf
jp
in
into
mov
outsb
jge
push
sbb
mov
shlb
or
mov
testb
mov
je
in
movb
dec
lret
add
mov
pop
shrb
leave
cmpsl
jecxz
or
mov
ss
push
xlat
mov
mov
pop
xchg
sub
xchg
inc
aad
mov
mov
and
in
aam
add
jp
adc
inc
icebp
call
sub
cmpsl
cli
lcall
xor
subl
loopne
nop
mov
test
xchg
mov
inc
jnp
dec
dec
dec
loopne
ret
enter
dec
dec
std
pop
or
or
sti
inc
cmpsl
mov
jo
int
lret
push
xor
fwait
push
enter
jp
and
scas
dec
std
jl
lods
xchg
out
cmp
imul
jmp
inc
fcoms
xchg
fists
int
cmp
outsl
loope
int3
cmp
test
ror
imul
dec
fdivrl
fstps
adc
orb
xchg
movsl
out
push
pop
sarb
cmp
sub
pushf
mov
sbb
orl
xchg
dec
mov
ss
int3
je
and
push
add
les
ficoml
fisubl
xor
pop
dec
outsl
dec
mov
dec
iret
je
in
mov
dec
jo
push
jo
inc
and
cmpsb
ret
sahf
ja
sti
addb
fisttps
subb
inc
add
lds
int3
xchg
into
cli
inc
cli
pop
in
xlat
dec
jg
nop
sti
xchg
push
dec
movsb
adc
mov
sahf
dec
pushf
movsb
or
adc
call
out
inc
pop
xor
addps
mov
sahf
imul
xor
or
gs
imul
pop
lcall
stos
push
add
and
imul
out
stos
fwait
xchg
lea
js
mov
stc
or
cmpsl
lds
rorl
pop
popf
and
aaa
push
ror
mov
fsubrs
ljmp
push
movsb
cmp
dec
inc
pop
mov
mov
dec
loope
in
adc
fiaddl
mov
pop
loope
mov
fcomp
xor
into
fwait
xchg
add
inc
sbb
cltd
les
push
popa
pop
inc
out
sbb
adc
das
dec
push
movsl
ds
fimuls
outsl
aaa
jno
bound
pop
jle
ss
jno
sbb
inc
sbbl
data16
aam
sub
fidivl
notl
pusha
mov
in
mov
mov
aam
ljmp
call
jecxz
push
mov
pop
mov
jbe
gs
int3
xchg
mov
pop
sbb
or
scas
xor
add
sahf
mov
jg
mov
mov
mov
dec
test
je,pt
jp
ds
and
jl
cli
mov
inc
jbe
cs
orb
lock
pop
pop
jne
scas
or
dec
lods
mov
loope
out
lret
push
xchg
cmp
and
xlat
push
cmp
mov
xor
jae
jns
lahf
push
imul
xchg
cmc
lret
aas
xlat
sub
pop
call
shl
or
cmpsb
in
iret
push
or
or
inc
fsubl
cmp
rorl
repnz
in
jae
rol
pop
mov
cltd
rcr
pop
dec
inc
icebp
popf
flds
xchg
mov
cltd
adc
out
outsb
sub
lcall
subb
mov
adc
jecxz
ret
push
add
into
pop
pop
push
inc
mov
pop
mov
inc
push
or
les
iret
inc
pop
idivb
rclb
test
mov
into
pop
js
andb
mov
fmull
jmp
fucomip
negl
iret
out
add
call
repz
pop
cmc
mov
imul
sbb
idivl
shrb
xor
ja
ds
cmc
mov
jecxz
aaa
insb
int3
mov
bound
cmc
fstps
sbb
fwait
cmp
push
cmp
rolb
repnz
mov
outsb
xchg
sbb
test
jle
fstl
popf
test
sbbl
adc
and
jbe
test
cmpsl
repnz
clc
inc
lea
das
aas
outsb
fisubrl
sub
pop
repz
cmp
adc
les
jne
ret
adc
les
adc
sbb
test
jecxz
xchg
jo
xorb
pop
mov
int3
ljmp
sub
in
jae
dec
lock
sbb
fsubrl
dec
cmpsb
add
jmp
push
movl
xor
adc
das
repz
push
inc
jns
aam
out
lahf
outsb
mov
mov
jno
or
and
ficoml
push
pushf
sbb
jno
int
fcmovnb
and
push
bound
in
mov
inc
pop
inc
repz
sbb
dec
add
cwtl
aaa
pmulhw
ficoms
mov
xchg
adc
adc
outsb
dec
loop
insb
mov
shlb
fcmove
inc
mov
lock
xor
and
mov
push
nop
sub
push
xchg
lret
test
les
inc
add
lock
pop
fcmovnb
push
mov
xor
jmp
sub
lea
sbb
insb
in
xchg
orl
xchg
scas
pushl
jle
popf
adc
aam
popf
and
movsl
lds
mov
repz
into
out
xor
imul
or
adc
gs
clc
mov
icebp
loope
fisubrs
jo
test
divb
data16
out
mov
sbb
push
mov
cmpb
out
hlt
inc
iret
lret
addr16
adc
mov
in
cmpsb
jg
push
addr16
aas
enter
jl
loop
push
shr
and
pop
insl
xchg
jmp
lds
aad
lret
dec
lcall
test
xchg
mov
lret
jns
jmp
jbe
fdivrs
xor
mov
lea
jle
je
sub
rorb
cmp
adc
cmp
hlt
pop
mov
xor
push
insb
or
sub
cmc
arpl
hlt
ret
adc
andb
mov
adc
sbb
pop
jns
cmp
mov
dec
or
jne
or
jl
mov
clc
sarl
inc
cmpsl
push
push
std
icebp
inc
femms
rcrb
inc
test
mov
test
sti
popf
cmp
repnz
inc
mov
jns
or
add
insb
popf
insb
and
out
mov
cmp
jmp
mov
shll
pop
push
ret
cmp
xchg
sub
stc
in
or
mov
adc
clc
sahf
cli
addl
dec
jne
daa
pop
lret
test
iret
add
out
scas
add
xor
icebp
mov
inc
or
insb
les
lret
fcmovnb
ss
sbb
jne
cmpl
out
dec
sub
js
stos
lahf
adc
aas
stc
dec
aam
mov
inc
cmp
int
sub
fimuls
outsb
inc
push
out
sahf
sub
xor
push
popa
lds
outsb
dec
adcb
lods
pop
fcmovnbe
jge
jmp
and
movsb
jae
loop
shlb
je
mov
xchg
out
mov
cwtl
xor
xchg
sbb
xor
out
out
pop
pusha
scas
loope
inc
pop
pop
add
in
sbb
xlat
cwtl
dec
sbb
sbb
rclb
out
and
fldenv
sub
jp
adc
movsl
notb
lea
pop
jmp
push
sub
jae
sbb
loope
xchg
in
and
jne
gs
pop
pop
loop
sbb
iret
incb
push
cmp
push
lods
push
movups
push
repz
insb
and
mov
movsl
outsb
inc
sbb
cmp
mov
inc
int3
mov
and
xor
pop
adc
int3
cld
mov
push
adc
sahf
inc
sub
push
js
mov
cmp
inc
push
adc
lds
outsl
cld
arpl
mov
lds
ss
ret
mov
sbb
jge
push
xchg
cld
pop
dec
jg
les
mov
in
inc
sahf
push
adc
test
dec
xorl
adc
or
cltd
ss
lock
mov
out
nop
inc
fildll
or
and
rcr
push
add
add
pop
push
iret
cs
lods
xor
icebp
mov
int3
fcmovnbe
test
push
xchg
test
jo
mov
add
jo
and
pop
fisubs
jmp
dec
aas
pushf
and
and
mov
lods
jae
jecxz
sarl
out
hlt
sahf
fiaddl
push
clc
fsubl
popa
inc
in
sbb
sti
inc
leave
mov
hlt
mov
hlt
mov
imul
xchg
fildl
xor
jne
test
mov
test
jle
mov
in
xchg
rolb
movsb
mov
out
or
xchg
mov
adc
movsb
or
scas
ja
out
arpl
stc
loope
imul
dec
es
and
adc
loopne
in
daa
cltd
fisttpl
mov
dec
int
xchg
jl
in
ror
sub
push
cs
idivb
mov
mov
and
adc
sub
dec
push
scas
loop
stc
pop
clc
pop
mulb
test
dec
lea
pushf
lahf
mov
mov
data16
ljmp
cmp
cltd
test
xchg
cmc
add
push
cmc
sub
shrb
and
xchg
pop
sub
pop
xlat
xchg
jno
sbb
in
out
addr16
xchg
mov
sub
test
fimuls
pop
mov
sub
jnp
enter
xor
pop
shr
inc
inc
lods
mov
mov
pop
rclb
testl
add
or
ret
jge
xor
je
mov
lahf
lahf
cmc
sbb
pop
lret
loop
dec
lahf
shl
pop
mov
sub
mov
data16
mov
ljmp
mov
jb
mov
lods
out
jle
ret
push
jbe
jge
jmp
outsb
adc
xor
ds
pop
lret
subl
rclb
cld
mov
jl
xchg
in
mov
pushf
mov
dec
stos
fldl
outsb
inc
je
add
sub
std
int3
mov
daa
jnp
mov
pusha
movsb
jmp
icebp
jle
stos
or
add
loop
jb
add
imul
ss
fchs
adc
call
xor
and
fs
mov
es
jnp
aad
stos
mov
loop
cmp
mov
xor
xor
mov
push
push
xchg
or
test
movntq
adc
out
repz
jno
xchg
jmp
mov
jae
test
mov
repz
imul
shrb
stc
pop
int
pop
fdivrl
pop
pusha
push
sahf
xchg
mov
ret
sub
cmc
add
or
nop
incb
imull
xchg
jbe
or
push
dec
cmp
mov
sub
cmpl
dec
pushf
icebp
jnp
fsubs
shll
cld
xchg
ds
push
inc
jne
inc
test
scas
das
jecxz
mov
sbb
fstl
or
stc
nop
popa
ficompl
dec
pop
lahf
pop
pop
hlt
shlb
fsub
jge
imul
leave
in
or
jnp
or
les
mov
sbb
repz
popf
out
into
push
xor
sub
roll
lock
xchg
add
sub
mov
lgs
inc
aad
sahf
movsb
or
sbb
aaa
or
sub
imul
mov
pop
mov
push
mov
fdivr
stos
mov
jno
add
test
dec
jl
and
adc
lcall
aas
cmc
pop
xchg
xchg
add
pop
lcall
xor
fstpl
push
sbb
adc
push
cmp
lds
pop
pop
in
pop
and
outsl
out
pop
inc
and
pop
clc
xor
adc
cmp
insb
sub
pop
adc
push
rcrb
and
mov
cltd
push
in
in
pop
and
pusha
mov
out
push
fucomi
jno
pop
repnz
pop
out
les
out
pop
out
dec
mov
hlt
xchg
test
insl
mov
clc
movsb
sub
lds
or
cmp
xchg
ret
arpl
sub
sub
add
jg
mov
les
cmp
adc
xlat
roll
sbb
hlt
inc
test
sub
aam
mov
ss
daa
repnz
out
pop
mov
mov
ss
jle
or
jmp
mov
nop
inc
lods
adc
mov
push
jne
or
jl
mov
mov
je
enter
in
cmp
outsl
and
lcall
mov
jmp
sbb
test
int3
xchg
add
fsubr
lahf
call
out
mov
inc
loop
sub
repz
in
or
icebp
cmp
mov
mov
fsub
daa
jne
or
or
sub
inc
leave
xchg
xchg
mov
lcall
mov
xchg
pop
dec
mov
inc
pop
gs
ret
pop
cmp
into
jge
or
adc
pop
fwait
pop
inc
in
scas
sub
push
cmc
rcrl
adc
dec
out
mov
cld
or
pop
mov
pop
mov
in
and
dec
jb
sbb
cld
lret
mov
shlb
jg
mov
push
adc
lret
fwait
or
lret
pop
jne
stc
cli
push
repnz
and
nop
jb
ret
inc
mov
ret
aaa
fisubs
insl
inc
sub
clc
daa
int3
fyl2x
movsl
pop
adc
data16
push
adc
cmp
int3
icebp
inc
mov
push
shr
xor
dec
fisubl
cmp
daa
scas
sbb
mov
jne
loopne
daa
inc
out
fidivl
stos
mov
leave
mov
adc
pop
cltd
test
cmpl
testl
mov
jns
into
and
mov
push
fwait
add
pop
and
mov
fimuls
jecxz
xor
mov
and
push
aaa
movsb
adc
pop
jo
pop
aaa
shl
popf
pop
jecxz
lods
mov
bound
sti
mov
mov
push
ficoms
xlat
jecxz
mov
je
mov
adc
fbld
push
mov
xchg
roll
add
dec
dec
fcoml
std
aaa
sub
xlat
lcall
int
in
sub
movsl
mov
movsb
xchg
mov
arpl
adc
xor
cmp
out
lods
mov
pop
addps
xchg
rolb
xlat
je
stos
and
xor
cmpsb
adc
xor
inc
cmp
or
fnstsw
icebp
cmp
lods
pop
out
imul
and
lods
lcall
popf
stos
jne
gs
sub
and
dec
insb
rol
add
cmp
push
in
mov
dec
pop
cmp
mov
sbb
jns
or
test
je
inc
sahf
cli
pushf
jnp
mov
imul
cmp
outsl
insb
ret
sbb
fnstenv
push
jbe
xor
iret
pushf
ds
pop
sub
imul
cmp
xchg
les
fistps
dec
or
xchg
std
pop
outsl
cli
add
adc
push
push
dec
pop
or
aad
cmp
xchg
mov
cwtl
xchg
or
cmpsl
dec
push
sbb
movsl
pop
jge
mov
hlt
nop
cmp
in
hlt
enter
inc
add
push
hlt
sbb
das
sub
loopne
mov
jle
pop
mulb
sbb
je
mov
jmp
mov
jge
dec
push
mov
cmp
rcl
ss
in
lcall
cs
mov
mov
sub
jb
scas
int
loopne
sub
jns
xchg
stc
insl
icebp
popf
sbb
xchg
ret
sbb
lcall
and
bound
bound
fwait
gs
dec
mov
xorb
lods
or
int
decl
inc
lcall
test
popf
imul
adc
pop
push
sub
orb
stos
std
xchg
push
inc
repnz
cs
cltd
adc
lods
mov
testb
jl
lahf
repz
daa
pop
lcall
cmp
mov
jl
negb
xchg
pop
int3
dec
mov
mov
add
sbb
in
xchg
xor
cmp
xor
mov
jne
add
mov
cmp
or
pushf
in
mov
add
mov
pop
xchg
cmpb
add
aaa
jmp
inc
clc
pop
add
and
gs
jb
inc
mov
mov
xchg
ljmp
ret
aad
and
movb
aam
cmp
xchg
mov
outsl
out
xor
and
push
adc
pop
js
add
push
js
shlb
push
push
arpl
dec
movsl
std
mov
xchg
pop
neg
aad
push
stos
adc
mov
and
ret
aad
dec
adc
pop
scas
scas
in
xor
xor
mov
dec
test
push
dec
mov
inc
push
bound
mov
test
rorl
imulb
push
mov
mov
in
loop
stos
test
or
pop
out
imul
mov
lods
test
ret
in
mov
jne
mov
push
or
or
std
sbb
cmp
mov
mov
fmul
push
insb
outsb
add
xchg
lods
loop
add
enter
jp
fildll
loopne
call
inc
cwtl
lret
xor
scas
xor
mov
cmc
mov
scas
lods
icebp
push
ja
arpl
ret
xor
clc
popl
cmp
repz
cs
inc
popa
int
stc
mov
in
or
mov
cmpsl
xor
aas
das
lods
cmp
mov
sub
ljmp
out
shl
add
stos
sbb
rcrl
push
add
lcall
jo
leave
mov
push
adcb
dec
test
js
xchg
dec
pop
cwtl
testl
mov
push
xor
sub
jge
inc
pushf
add
or
and
mov
arpl
test
pushl
jecxz
out
stos
pop
sub
mov
stos
es
jp
enter
cmp
sbb
or
xor
mov
xor
in
dec
push
dec
push
pop
add
cld
aad
gs
add
icebp
fsubr
mov
adc
call
xchg
xchg
sbb
pop
daa
iret
arpl
ja
jmp
and
lods
mov
loop
jbe
cld
inc
shlb
iret
ret
push
test
daa
int
mov
stc
ret
icebp
nop
call
ss
rorb
insb
dec
xchg
xchg
inc
jae
hlt
inc
pop
cmc
imul
hlt
lods
lret
sub
cmp
xchg
mov
and
mov
push
sti
cmp
shlb
mov
sbb
rcll
fdivrs
xor
xor
dec
out
js
xchg
sub
ja
sti
inc
ror
sahf
fildl
int3
fld
jb
pop
xor
addl
jge
push
pushf
out
mov
repnz
mov
sahf
je
xlat
mov
and
dec
pop
xchg
mov
outsb
in
mov
loop
jnp
lret
imul
sbb
mov
mov
cmp
push
loop
add
xor
insl
ss
pop
push
dec
inc
mov
ds
and
and
test
or
adc
loop
mov
arpl
adc
in
sub
divl
repz
pushf
cli
or
pop
pop
in
jmp
ret
mov
sub
xchg
shl
notl
jp
shlb
mov
dec
repnz
sbb
sub
add
leave
jno
add
add
adc
jmp
les
dec
es
loopne
inc
xor
jle
xor
call
outsb
popf
inc
mov
dec
frstor
repnz
jecxz
and
test
daa
sbb
jg
mov
shrb
push
cmpsl
add
jnp
sbb
inc
das
mov
mov
pushf
pop
cmpl
orl
mov
dec
cmp
inc
adc
mov
pop
add
scas
mov
pushf
movsl
mov
mov
mov
dec
hlt
inc
aam
hlt
inc
mov
push
jbe
addr16
lea
loope
test
aad
mov
sub
iret
or
adc
pop
jno
mov
imul
mov
inc
fistpl
loope
adc
mov
lods
xchg
xor
pushf
loop
and
mov
push
adc
in
jmp
pop
mov
lock
daa
out
push
enter
jbe
and
pop
push
lock
mov
imul
dec
inc
add
mov
jle
in
mov
cli
outsl
scas
push
xchg
inc
dec
movsb
xchg
and
sahf
shrb
nop
push
pop
lret
push
mov
les
cwtl
sub
mov
fsubl
fidivrs
pop
xor
sub
and
in
xchg
clc
sbb
rcrl
scas
push
jnp
repz
mov
scas
test
lahf
dec
mov
mov
mov
push
mov
dec
jno
cmpsb
inc
dec
jno
imul
aam
cmp
jmp
cmp
mov
lea
push
fiadds
push
out
sbb
mov
dec
pop
push
les
int3
lea
enter
sbb
xor
mov
rcr
sbb
bound
push
popf
sbb
shl
imull
icebp
fnstsw
xchg
leave
les
stos
xchg
test
sbb
in
sbb
add
add
rcrl
test
shrl
sbb
and
inc
add
out
adc
and
divl
mov
lods
pop
iret
scas
xchg
mov
pop
test
leave
call
lock
inc
lock
test
clc
aad
lcall
mov
js
pop
std
adc
jp
int
cmp
inc
inc
xchg
andb
mov
fsubr
pop
push
lock
in
xchg
loopne
ss
aaa
hlt
stc
pop
movsl
mov
adc
jb
push
push
push
jg
sti
arpl
push
lcall
loope
dec
adc
shll
divb
mov
mov
cwtl
stos
ret
or
outsl
dec
sbb
lret
xchg
lds
sbb
rorl
lods
sub
jecxz
enter
add
das
mov
mov
clc
popf
jg
sbb
mov
mov
lcall
mov
adcb
jb
inc
dec
test
nop
jns
mov
in
imul
sub
into
and
and
subb
mov
enter
ljmp
push
cli
or
push
cmp
pop
insb
aam
shrb
ljmp
xor
lcall
ja
push
shrl
add
cmp
and
arpl
sub
outsl
es
lock
jg
pop
int3
scas
nop
mov
aam
jo
in
xchg
jecxz
sahf
les
icebp
push
pop
inc
pop
frstor
mov
dec
add
cmp
cli
jbe
sub
mov
push
and
daa
cmp
dec
mov
and
enter
test
scas
divl
adc
dec
sbb
imul
mov
mov
test
shll
jb
pop
lock
mov
sbb
and
push
cmc
xchg
xchg
push
out
fcomp
mov
jb
sti
cmp
cmp
mov
leave
push
fisubs
in
add
jbe
fidivl
aaa
movsb
sahf
ljmp
cmp
jo
std
dec
ucomiss
sbb
xor
inc
test
addr16
cld
push
sbb
jne
lahf
xor
or
nop
cmp
and
loopne
add
in
int3
xchg
dec
cltd
lahf
js
loop
or
imul
leave
in
xor
idiv
and
aas
int3
sub
xor
xchg
data16
comiss
imul
pushf
cwtl
xchg
inc
insl
les
jno
xor
rcl
mov
shlb
ret
arpl
leave
cwtl
mov
shl
push
cltd
cmpsl
or
pop
mov
nop
test
insl
in
pop
std
push
jecxz
add
mov
cld
inc
mov
fsubrs
out
mov
ljmp
mov
xor
cmp
push
mov
loopne
js
push
cmp
hlt
pop
rcr
mov
imul
mov
cmpl
in
pop
xchg
int3
loope
js
pop
lock
das
es
pusha
pop
mov
mov
xor
in
mov
xlat
jecxz
xchg
fdivrs
pop
push
push
insl
stos
lds
enter
repnz
inc
cmp
movsb
add
push
pushf
cmpsb
sub
and
mov
lcall
or
cmpsl
add
push
orb
addr16
jmp
movsl
sub
sbb
movsl
jae
xchg
movsb
xchg
ret
push
repnz
adc
adc
add
outsb
cmp
int3
fdivrs
sbb
xlat
pop
pop
test
sub
aaa
xor
and
sub
mull
stos
cs
mov
add
sbb
sub
push
fs
jno
fdivs
mov
jae
adc
mov
lds
xor
jns
adc
push
fists
xor
fistl
cmp
and
inc
test
das
xor
xor
iret
cmpsb
mov
int3
stos
cli
mov
sub
jl
or
loope
addr16
or
dec
les
adc
pop
adc
mov
cmpsl
push
inc
dec
pop
movsb
push
mov
fimull
xchg
roll
add
orb
popf
fnsave
cmc
xlat
leave
sub
sub
mov
vaesdeclast
add
inc
pop
cmp
fs
jge
popa
adcb
lahf
mov
js
les
dec
sbb
int3
in
mov
insb
rdpmc
je
out
std
dec
pop
fdivrl
imul
shlb
fdivl
mov
xchg
cld
xchg
aas
ljmp
xor
stos
mov
xor
xchg
incl
sbbb
iret
in
dec
or
push
or
pop
fcoml
cmp
dec
jo
das
ret
add
xchg
movsl
mov
lahf
ja
dec
aam
call
dec
adc
sahf
jnp
fstl
imul
xchg
pushf
or
lahf
movsl
lret
xor
sbb
xchg
mov
cmp
mov
fdivl
xor
lahf
xchg
or
in
jmp
jbe
mov
mov
gs
arpl
pop
and
hlt
clc
xor
sbb
or
bound
jmp
cli
cli
aaa
pop
fnsave
or
dec
test
xchg
loopne
xchg
and
mov
je
insb
cmc
inc
push
mov
mov
fcmovne
cmp
sbb
jmp
lods
out
and
enter
cmp
mov
imull
jl
cmp
jb
mov
ret
aas
mov
xor
cli
cli
xchg
sub
add
mov
xor
lea
adc
or
pop
xor
in
pop
xor
cmp
enter
addr16
pop
iret
lods
outsb
pushf
adc
movsl
pop
hlt
movsb
fidivrs
add
js
push
lds
inc
cs
dec
add
filds
pop
leave
loope
and
mov
fdivs
mov
or
lret
imul
les
inc
push
movsb
ss
ret
repz
mov
mov
hlt
mov
popa
sub
inc
int
fisubrs
inc
lock
push
xchg
pop
arpl
jle
loop
stos
cli
and
push
fdivs
adc
sbb
nop
loope
add
mov
call
pop
ja
ret
xchg
js
push
and
sti
mov
jo
repz
int
repnz
lock
sub
scas
adc
cmp
and
mov
icebp
fcmovnbe
dec
jnp
sti
pusha
lret
hlt
mov
xor
ror
jb
stos
mov
mov
ds
sbb
stc
cltd
jo
jne
and
loop
and
sub
pusha
sarl
mov
inc
aas
dec
hlt
scas
and
daa
sub
mov
popa
dec
jns
das
cld
adcb
repnz
adc
imull
std
bound
std
or
cmp
in
loope
nop
in
inc
cmp
or
sub
fcmovnu
in
lods
mov
pusha
push
mov
pushf
or
xchg
fs
pop
stos
or
repz
mov
int3
lret
or
xor
cmp
popf
push
fwait
sbb
jle
rolb
sti
js
test
fldt
add
dec
mov
jno
mov
roll
jmp
jp
adc
sub
mov
rorl
in
adc
js
dec
dec
push
pop
or
mov
rcrb
inc
cltd
ljmp
push
std
xlat
inc
in
fildll
cmp
ds
insl
loop
mov
mov
jno
int3
push
pop
fs
shrl
adc
and
repz
lea
test
ret
inc
inc
mov
rcrl
lea
ret
sahf
lahf
add
jg
rorb
mov
push
dec
pop
fdivl
out
imul
sbb
push
mov
adc
jmp
and
mov
jo
fadd
pushf
fists
test
sbb
lret
pop
dec
dec
in
fs
das
and
sbb
cmp
pop
push
fisubl
inc
xchg
dec
mov
cli
sub
movsb
mov
repz
out
push
call
dec
xchg
loop
mov
jg
in
xor
push
jge
sbb
xchg
xchg
push
mov
fbld
pusha
sbb
jne
cwtl
mov
inc
mov
and
cmp
and
test
aas
inc
mov
repz
fistpl
test
inc
into
sbb
data16
push
shrl
add
push
outsb
mov
dec
scas
testb
hlt
stos
adc
xor
cwtl
mov
fldl
fnstenv
les
cmp
push
andl
je
mov
stos
sub
push
nop
cmp
and
inc
jmp
jge
insl
cmc
dec
dec
pushf
pop
sbb
push
outsb
push
ret
sbb
xchg
inc
inc
div
orb
mov
dec
out
test
cwtl
inc
pop
inc
push
xor
push
out
push
out
insl
adc
push
es
sbb
mov
adc
loope
stc
push
mov
out
fadd
pop
cmp
mov
ja
int
adc
movsb
ja
lock
in
stos
fldl
test
add
jno
hlt
and
mov
pop
jb
arpl
pop
push
shl
mov
mov
jle
dec
lahf
dec
sbb
inc
das
and
dec
dec
adc
aaa
ljmp
sbb
cmp
into
pushf
loop
mov
xorb
or
ss
jno
mov
xchg
inc
fadds
cld
adc
and
cmp
in
rorb
bound
sti
pusha
xor
mov
mov
dec
mov
mov
jp
and
xlat
sub
mov
inc
xchg
repz
mov
pushf
cld
icebp
and
loopne
scas
les
xor
les
mov
enter
rorb
add
sti
idivl
adc
fdivs
stos
arpl
push
cmc
push
pop
clc
pop
orb
cmp
and
dec
dec
push
inc
jo
popa
gs
ja
aaa
and
mov
xor
pop
pop
inc
ret
stos
or
ljmp
out
ljmp
jo
hlt
pusha
lods
mov
add
mov
in
dec
fs
fadds
add
and
pop
lcall
sbb
enter
das
fsub
call
mov
mov
in
outsl
mov
cli
dec
and
jno
xchg
bound
cmp
movsl
mov
dec
test
movsb
fcoms
mov
ret
and
push
stos
in
idivl
xor
loope
imul
cli
and
xchg
mov
and
and
lods
and
mov
or
push
and
ss
out
out
imul
sub
repnz
cmpsl
loop
adc
mov
mov
aaa
aad
xchg
add
test
ja
jecxz
cld
add
std
cmp
loop
xchg
inc
cwtl
fldz
lock
jecxz
xor
fidivs
fwait
mov
rcll
les
jmp
dec
ret
pop
mov
xlat
js
enter
filds
fwait
loop
in
ffreep
dec
cs
data16
pop
fdivr
mov
pop
leave
jle
shrb
mov
cli
jle
push
mov
loop
push
nop
mov
push
pop
cmpsb
mov
jne
out
mov
fisubs
mov
fbstp
xchg
cwtl
mov
mov
das
out
jne
sub
jnp
mov
notb
aas
and
sub
add
add
mov
sahf
roll
add
mov
lcall
cmp
mov
mov
push
outsl
ret
leave
hlt
sbb
popa
mov
stos
xorb
enter
ljmp
std
push
inc
ret
arpl
push
enter
dec
lret
out
sar
xchg
xchg
adc
ds
gs
arpl
push
ja
jmp
in
pop
xchg
xlat
out
mov
xchg
enter
outsl
fadd
subl
lret
xchg
and
sbb
nop
or
jg
mov
mov
jbe
pop
cmp
scas
inc
add
dec
xor
repz
ret
adc
sbb
add
mov
mov
and
cmp
sbb
jecxz
sub
dec
xchg
mov
adc
mov
and
and
jno
mov
pop
xchg
push
lea
loop
lahf
test
mov
jne
sbb
in
dec
out
push
inc
adc
testb
inc
in
adc
lea
sbb
or
pop
mov
xor
jecxz
test
aam
mov
mov
push
daa
adc
sbb
adc
aad
jbe
xor
jno
pop
mov
gs
pop
lea
lea
mov
aas
jo
push
push
mov
pop
mov
int3
xchg
pop
pop
les
daa
in
ljmp
or
gs
enter
dec
mov
pusha
adc
xor
cmpsb
cmp
mov
jg
add
xchg
and
sbb
mov
icebp
sbb
rcl
and
sbb
outsb
fistl
insb
push
cmp
fstps
inc
mov
or
lahf
imul
cmp
icebp
pop
mov
ljmp
dec
cld
cmp
test
or
jae
cmp
dec
iret
pop
imul
xlat
and
and
fisubrl
sub
mov
jp
jns
mov
sub
incb
aas
jo
mov
jb
ficompl
enter
xchg
pop
dec
jne
mov
popf
stc
dec
scas
inc
jp
pop
sbb
inc
sbb
push
lcall
sbb
int3
sbb
fdivs
lods
in
xor
aam
test
test
dec
scas
adc
xor
insb
push
push
pop
je
and
cmpl
jge
shll
adc
add
jecxz
mov
cmpsb
and
cwtl
add
inc
mov
shl
push
test
push
xor
sub
je
mov
jmp
mov
push
sub
es
cs
lcall
in
daa
lcall
cli
test
and
into
sub
pop
movhlps
adc
scas
inc
inc
add
aam
call
add
push
mov
pop
push
mov
and
ss
pop
inc
or
cmpsl
mov
dec
push
aas
dec
icebp
pop
nop
ret
inc
push
ret
jge
jp
jb
inc
adc
dec
js
call
cmp
pop
sbb
nop
inc
pop
inc
jmp
xchg
pushf
push
pop
jbe
jno
sub
add
push
or
xor
add
popf
mov
xor
and
leave
cmpb
je
in
add
outsl
sub
iret
jno
dec
ds
icebp
mov
mov
rcrl
ss
pop
mov
or
jge
cmc
enter
xchg
and
xchg
ret
cmp
jmp
scas
mov
fwait
sub
fcmovb
mov
ret
clc
sbb
add
aad
insb
or
mov
stos
pop
push
mov
xchg
mov
xor
sbb
nop
add
push
arpl
loopne
loopne
xchg
jmp
lret
mov
fidivl
sti
cmpsl
fmul
roll
aaa
daa
mov
mov
enter
mov
rcrb
popa
inc
push
sub
xor
pop
dec
mov
xchg
bound
mov
xchg
lock
cltd
cmp
sub
push
in
add
mov
mov
call
outsl
pop
shlb
xchg
rcr
filds
and
test
popa
mov
mov
mov
add
pop
and
inc
sbb
andl
jp
in
addr16
mov
in
inc
push
insl
cmp
lcall
add
mov
in
lret
outsb
pop
or
dec
addl
movsl
je
mov
mov
daa
jb
rol
mov
push
movb
pop
cwtl
push
pop
jecxz
push
and
jge
popf
lods
cltd
cmc
sub
mov
shlb
adc
adc
inc
add
mov
sarl
pop
mov
ds
aad
or
xlat
cmpsb
jg
sub
aad
sbb
ds
insb
add
popl
lret
fdivrs
std
cli
xor
jno
mov
mov
dec
fs
icebp
dec
jle
stos
sar
shll
mov
ljmp
dec
cwtl
mov
add
xor
out
dec
iret
stos
pop
jge
or
cli
and
dec
call
pop
call
std
mov
aas
mov
icebp
mov
jg
and
insl
jne
mov
mov
imul
cmpsl
pop
xchg
pop
cmc
xor
outsb
cmpsl
inc
cwtl
insb
xor
clc
frstor
and
movsl
test
mov
adc
leave
outsl
cmp
lods
shrl
jmp
out
and
xor
pop
jne
inc
pop
cmp
popf
in
push
incl
cs
aaa
arpl
mov
mov
pop
sub
xor
fisttpl
pop
aad
loop
aad
psubusw
ficompl
cmpsl
inc
stos
out
push
pop
dec
jecxz
xor
mov
arpl
xchg
xorl
adc
dec
xor
es
cmp
fmull
mov
or
movsl
pop
xchg
mov
sub
mov
pop
cmpsl
and
jecxz
fimuls
pop
or
pop
jnp
cmp
loop
xchg
jo
jns
cmc
inc
dec
out
push
outsl
orb
sub
aad
push
cmp
jo
pop
fwait
movsb
cmp
jecxz
jo
push
jo
fistps
push
push
lret
shll
jno
into
mov
stc
add
push
mov
xchg
add
and
inc
fs
add
outsb
mov
cmc
repz
movsl
incb
adc
js
inc
xlat
pop
fnstsw
fs
dec
lret
and
or
andb
xor
hlt
icebp
inc
xchg
cmp
in
xchg
mov
in
push
mov
pop
pop
out
push
adc
clc
jecxz
push
lock
sbb
adc
cmp
shlb
pusha
dec
shl
lret
pop
rorb
clc
bound
adcb
cwtl
xchg
scas
cmp
je
lock
ds
lcall
mov
fidivrs
xchg
lret
lods
out
or
cwtl
cmp
leave
mov
mov
jnp
dec
cmp
aad
int
push
cmp
addl
js
mov
enter
pop
mov
stos
shl
data16
enter
jnp
ret
and
and
adc
push
xor
xchg
cmp
pop
and
mov
fstpt
push
fists
pop
mov
inc
mov
mov
addr16
and
pop
sub
mov
rep
adc
ret
add
lahf
dec
xchg
fyl2x
dec
mov
xlat
roll
and
jns
xchg
or
cmpsl
adc
cmp
stos
stos
js
loope
nop
fdivl
push
or
aas
clc
adc
clc
lret
xchg
imul
sbb
sub
cmp
and
pop
je,pt
insb
test
psadbw
rorl
scas
jae
dec
sbb
xor
ljmp
sbbb
insb
cmp
cmpl
dec
lods
cmp
outsl
in
add
loopne
mul
les
or
inc
lea
sar
rolb
add
repnz
jge
rcrb
mov
sub
shl
cmp
push
jb
pop
and
incl
ss
nop
push
sbb
xorl
iret
dec
mov
fcompl
jp
mov
xchg
jge
add
outsb
loopne
int
ret
jno
xchg
ret
dec
das
scas
mov
sbb
out
push
fwait
adc
jg
bound
inc
jl
ds
cmp
sbb
enter
hlt
mov
ret
mov
pushf
push
inc
subl
add
loopne
pop
adc
lret
and
test
fcoml
lcall
xchg
xor
popa
jns
cmp
mov
push
or
stos
mov
dec
and
cmp
jmp
ss
pop
push
jecxz
mov
xchg
fsts
ret
loopne
dec
test
adc
in
push
mov
sbb
scas
xchg
in
popa
lret
inc
mov
lea
mov
hlt
outsb
or
call
fld
or
lea
mov
daa
stos
ljmp
cmp
mov
inc
dec
xchg
imul
daa
adc
imul
iret
mov
jnp
or
push
fisubrl
scas
hlt
push
mov
jae
xor
pop
loopne
fwait
stos
lahf
arpl
pop
fs
std
arpl
mov
dec
jae
xor
sahf
mov
ret
push
lret
ja
loop
movl
pushl
adc
or
sbb
arpl
jle
repnz
push
dec
push
mov
jns
clc
daa
push
mov
rcrl
xchg
sbb
pop
mov
lock
call
int
xchg
adc
xor
fidivl
xchg
ja
xchg
int
mov
push
hlt
adc
mov
xchg
adc
rorl
mov
cmpsl
push
or
sarb
add
insb
icebp
push
lea
inc
sbb
movl
insl
push
sbb
pop
add
add
cmpsb
fs
sbb
and
and
es
push
test
sbb
in
add
jmp
fwait
mov
push
push
ret
cmp
ficoms
lea
into
mov
add
dec
divl
mov
push
int3
pop
mov
ljmp
xchg
pop
cmpsb
dec
aaa
cmp
mov
mov
mov
mov
mov
mov
push
fiaddl
lret
adc
popa
push
cmp
addb
js
xchg
adc
jo
inc
mov
pop
dec
test
jns
daa
cmp
cmp
xchg
mov
sti
push
jl
ja
xor
mov
and
imul
push
mov
or
in
mov
push
pop
iret
call
xor
in
into
dec
and
insl
dec
pop
add
fadds
push
ficoms
fadds
push
pop
dec
jl
rclb
adc
xchg
out
ds
in
lcall
mov
inc
xchg
ret
icebp
out
sarl
lret
adc
out
jg
jg
cmpsb
dec
imul
out
fdiv
lds
mov
bound
cs
inc
jle
dec
cli
dec
cmovp
ficomps
stc
imul
pop
loope
cs
leave
test
ret
jb
cmp
xchg
in
rclb
test
push
mov
inc
mov
mov
in
andl
xchg
fcmovnbe
loopne
mov
and
fistpl
mov
bnd
lods
add
cs
adc
mov
mov
loopne
sub
in
and
adc
sbbb
or
or
enter
push
js
test
shll
aad
mov
cwtl
xchg
lock
data16
sahf
int3
cwtl
enter
fsub
imul
sub
jle
in
std
sbb
outsl
fbstp
stos
test
ror
xchg
mov
out
stos
jnp
and
pushl
xchg
push
mov
lret
mov
pop
push
ja
jl
mov
movsb
aas
xchg
dec
inc
ret
push
sahf
inc
inc
nop
cmp
dec
jno,pn
mov
les
jo
fnsave
xorb
clc
jecxz
dec
xor
cmc
mov
sti
xor
rcrb
pusha
ss
popa
xorb
leave
cld
les
rcll
or
ss
or
inc
popa
pop
addr16
add
push
shrb
dec
jl
call
dec
insb
loop
mov
inc
mov
insl
sub
bound
sbb
shll
jmp
fwait
imul
adcl
dec
dec
stos
popf
repnz
sub
mov
cmp
mov
aaa
jns
dec
and
xchg
cwtl
push
inc
imul
pushf
ds
cmpsl
or
push
sbb
sti
loop
add
insb
pop
stc
or
xor
nop
mov
sbb
mov
bound
arpl
xchg
inc
and
inc
std
fistpll
test
loopne
test
fwait
mov
jns
out
aaa
and
inc
push
jl
or
psubusw
aas
into
call
mov
fs
sub
push
shll
les
int3
mov
xor
cwtl
cwtl
insb
idivb
imul
cmp
movsb
and
lret
adc
fucom
mov
scas
popa
dec
orb
divl
xor
rcrl
int
cwtl
pop
bound
or
adc
popa
cmp
mov
int
fs
inc
aam
out
cmp
xlat
cwtl
stos
and
cmp
aam
push
in
ret
jmp
in
sahf
repz
add
loope
and
jge
mov
test
mov
incl
inc
jbe
sub
sub
xchg
push
in
sub
mov
dec
imul
test
or
pop
dec
insl
or
in
data16
xchg
mov
jecxz
push
push
xor
imul
cmpb
push
data16
mov
mov
outsb
push
je
inc
popf
movsb
pop
into
rorb
jno
ds
xchg
mov
cld
sub
mov
xchg
sub
push
or
mov
outsl
inc
mov
cmpb
adc
add
sahf
cmc
cmpsl
push
fisttpl
popa
sti
jo
jae
push
xor
jb
sub
les
lret
test
rcll
xchg
dec
xlat
xor
xchg
ja
popf
dec
sub
shrb
jbe
ret
mov
test
and
out
jno
outsb
lcall
dec
data16
dec
dec
cmpb
dec
imul
shl
push
dec
fwait
jno
jo
adc
movsl
outsl
cmp
sbb
mov
cmp
xor
add
popf
pusha
inc
pop
clc
and
pop
push
push
add
aad
adc
dec
mov
mov
leave
cli
lock
cmp
sub
jbe
or
mov
cwtl
imul
outsb
xor
iret
push
and
call
pop
out
imul
gs
cmp
lret
out
mov
lea
pop
inc
mov
adc
sbb
je
xor
cmp
rorb
mov
in
leave
ficompl
mov
std
xchg
push
insb
jb
fildl
push
pop
xchg
mov
mov
in
xor
cmp
xchg
pop
aam
mull
and
cli
rorl
jne
imulb
sub
in
inc
fdivl
xchg
inc
add
bts
xchg
mov
jmp
out
ret
fidivrs
lea
scas
or
out
jmp
out
test
imul
aam
gs
xchg
cs
aaa
jl
mov
nop
loope
ret
and
dec
mov
ret
pop
push
mov
movsl
inc
lahf
and
pop
jp
lcall
pushf
or
cmp
or
sbb
pop
cmpsb
movsb
push
fucomp
pop
cmc
sub
je
sarl
mov
pop
sti
jg
lods
push
aad
les
ja
in
popf
lods
adc
les
and
mov
and
xchg
jns
adc
je
lea
jmp
push
into
dec
popa
cmp
movsl
insl
xchg
xorl
mov
sbb
data16
enter
jmp
aad
jnp
dec
imul
and
add
lods
aam
push
test
hlt
sbb
jns
sbb
sahf
pop
aaa
ret
data16
xchg
cli
mov
dec
jae
dec
cltd
add
add
pcmpeqw
js
mov
or
lock
xor
mov
filds
fisubrs
xchg
cmc
jno
inc
cmp
push
push
rclb
aaa
addr16
xlat
aam
aas
mov
jnp
rcr
mov
or
dec
adc
push
popa
pop
aaa
into
mov
pop
test
incb
inc
xor
clc
add
xor
mov
or
pop
push
sub
mov
dec
fsts
jmp
pop
jmp
dec
addr16
inc
sti
test
mov
inc
and
movsl
stos
jno
mov
dec
mov
movsl
mov
cmp
adc
fldl
adc
dec
xchg
sbbl
in
orb
jns
jmp
jne
lahf
xchg
or
stc
pop
nop
push
lret
lods
dec
mov
mov
in
stc
ja
pop
mov
lds
cmp
ficomps
xor
push
scas
and
and
xchg
lock
mov
fdivrl
jle,pt
les
sbb
and
push
ljmp
or
sti
test
mov
leave
or
mov
mov
sub
sub
mov
movsl
push
stos
xchg
stc
mov
repnz
je
pop
mov
cmpsb
xor
pop
rclb
mov
dec
unpcklps
and
fidivl
mov
or
xor
popa
mov
jae
arpl
or
xchg
xchg
adc
jb
outsb
cld
cmp
fwait
push
ror
enter
cmpsl
sbb
adc
adc
jl
imul
mov
push
orb
mov
add
xchg
add
cmp
fsubs
pop
xchg
testb
mov
cmp
inc
cwtl
xchg
xchg
addl
xor
push
shlb
add
dec
mov
inc
out
sahf
scas
pushf
gs
mov
adcl
pop
inc
fs
cld
mov
mov
adc
mov
push
and
stc
xor
push
jo
dec
aaa
data16
rolb
fdivs
adc
inc
mulb
push
js
js
lahf
or
xchg
scas
imul
mov
jg
sahf
xchg
pop
repz
lret
inc
popa
cmp
add
ret
xchg
push
clc
pusha
std
popa
sub
sbb
mov
pmaddwd
jmp
leave
mov
das
mov
out
nop
dec
inc
je
sub
xchg
lds
push
mov
sbb
or
dec
xchg
movsb
push
sub
lea
in
adc
inc
fldpi
fldt
sbb
stc
leave
inc
stos
mov
loopne
outsl
jle
ja
leave
mov
jp
insl
and
or
dec
jae
pop
pop
sbb
jne
push
pop
aaa
sub
inc
adc
jno
push
sbb
or
inc
cwtl
xor
lcall
or
add
lret
addb
mov
add
cmp
xor
push
adc
sub
iret
ljmp
inc
ret
out
testb
mov
in
add
jmp
push
mov
cli
pop
fnsave
insb
mov
ljmp
leave
pop
clc
outsb
pop
mov
and
icebp
and
cmp
loopew
cmp
loopne
out
mov
scas
xchg
dec
sbb
out
inc
jle
inc
mov
stos
and
test
or
xchg
ds
add
xchg
sbb
mov
ret
sub
popa
dec
ds
loopne
les
pop
adc
push
inc
inc
psubusw
sub
sub
sbb
mov
jnp
outsl
push
outsl
jb
xor
lret
fs
test
push
je
repz
jbe
adc
push
jnp
leave
scas
stc
mov
and
xchg
push
sub
pop
negb
lea
xchg
insl
pop
mov
pop
push
and
inc
arpl
jo
mov
inc
ljmp
xor
mov
dec
cmp
push
orl
push
fldcw
int
jne
into
sub
fdivrl
mov
pop
inc
xor
push
or
callw
lods
cltd
ds
jb
bound
rolb
cli
jp
dec
shl
cmp
aas
movlps
aaa
das
jbe
xchg
jge
loop
pop
mov
xchg
and
lret
rcr
jae
es
jmp
xchg
popf
xor
mov
jae
in
js
xor
mov
sbb
out
xor
push
or
sarl
insb
mov
adc
cmc
mov
push
sbb
xchg
test
sub
pop
push
pusha
fwait
je
out
imul
cwtl
sub
sub
mov
int
or
bnd
not
scas
aaa
push
mov
dec
push
mov
pushf
stc
pop
sti
imul
orb
mov
adc
notl
mov
xor
bound
aam
xchg
and
andl
stos
push
xchg
cmp
das
sti
sub
mov
lds
mov
fs
jecxz
dec
popf
mov
fldt
sub
int3
mov
pop
inc
mov
lret
repnz
lock
or
popa
dec
fnstsw
xchg
lds
xchg
push
sub
pop
out
sbb
movsl
dec
sbb
mov
push
or
pmaxsw
sub
jb
jmp
mov
das
mov
jbe,pn
cltd
cwtl
pusha
test
ljmp
sarb
dec
pop
add
adc
lcall
and
dec
dec
mov
rol
mov
jbe
fnstsw
push
push
fcoml
pushf
inc
rcrb
xchg
push
fwait
and
and
xor
jnp
out
mov
mov
out
daa
inc
jge
insl
or
add
sbb
roll
cmc
jbe
jmp
call
mov
cmpsl
or
or
sub
enter
or
cmp
jb
cmp
inc
xlat
sti
std
fs
mov
jecxz
jle
test
popf
hlt
mov
cmp
cmp
mov
add
fcmovu
lcall
scas
push
movl
enter
mov
push
dec
pushf
sahf
addr16
packssdw
dec
arpl
les
loope
xchg
dec
stos
sbb
ret
sbb
mov
in
call
lret
repz
xor
xor
aad
inc
mov
xchg
cltd
popa
fwait
adc
aas
daa
push
cld
push
imul
cmc
aaa
add
scas
mov
mov
cmp
mov
dec
sbb
ds
lods
ja
imul
push
xchg
pop
stos
xchg
fcoml
mov
mov
sub
xor
sub
adc
stos
data16
out
pop
lds
dec
dec
mov
ljmp
jge
clc
cmpsb
or
movsl
adc
scas
fadds
xchg
or
jns
aas
lds
test
push
daa
sbb
pop
dec
sub
ss
xor
or
mov
ds
dec
push
shrl
fisubs
iret
lcall
js
sbb
or
dec
mov
xbegin
ss
mov
mov
xchg
and
dec
repnz
pop
test
cmpsl
fistpl
repz
mov
dec
pop
sub
mov
mov
dec
js
dec
xor
jmp
jb
push
daa
mov
xor
dec
cmp
inc
inc
adc
mov
loope
and
fisttpl
xchg
xor
scas
scas
repnz
fsubs
cmp
dec
mov
stos
cmc
sbb
and
daa
mov
scas
xor
dec
popf
or
std
mov
into
sub
cli
test
imul
mov
add
sub
sbb
sbb
pushf
xchg
js
xchg
or
fucomp
les
sub
inc
pop
inc
push
stos
repz
cld
loope
dec
sbb
sahf
pop
mov
xchg
int
push
cld
sub
cmc
mov
xor
fdivr
or
popa
mov
out
jno
sbb
or
movsl
fsubrs
in
jns
jge
push
loop
dec
push
sti
mov
push
xchg
pop
dec
xchg
sbb
insb
jge
repnz
xchg
js
inc
add
lock
mov
in
fisubl
inc
mov
sub
lcall
xor
movsb
jns
mov
jne
inc
and
imul
push
insl
xchg
push
fld
inc
idivb
mov
inc
shlb
jnp
addr16
dec
push
push
adc
imul
mov
or
shll
mov
mov
xchg
sahf
loopne
imul
shrb
cmpsl
push
pop
xchg
or
in
cmpsl
dec
or
mov
add
lods
repz
jno
enter
test
push
add
lret
stos
test
fdivl
mov
loopne
adc
call
ljmp
sub
and
inc
dec
outsl
inc
or
hlt
repnz
push
dec
ja
add
scas
and
pusha
push
or
dec
inc
outsl
jge
dec
sub
leave
aam
dec
sbb
sarl
xchg
pop
xchg
stc
sub
bound
xchg
cmp
cmp
movsb
pop
inc
pop
push
cmp
and
rolb
xchg
dec
xchg
nop
push
inc
ja
rcl
adc
faddl
xor
les
adc
int3
lcall
inc
int
loope
cmc
dec
mov
int3
test
sbb
jbe
xchg
sarb
mov
xor
push
adc
lock
add
cmp
xchg
mov
xchg
jg
push
jno
cwtl
pop
cmp
inc
rcr
inc
push
outsl
cmp
lds
stc
lods
dec
mov
out
and
mov
push
xchg
or
xchg
push
or
cmp
push
gs
mov
movsl
or
arpl
push
loope
stc
xchg
push
jl
pop
cli
pop
ret
xchg
push
ja
xor
pop
mov
mov
inc
dec
inc
out
push
mov
jl
into
out
cmc
ret
std
push
call
scas
mov
jge
mov
jno
cmpl
xchg
and
out
mov
xchg
or
loope
in
mov
ss
in
mov
lock
ret
push
iret
mov
in
jle
loopne
test
pop
push
and
sub
lds
push
hlt
mov
xchg
mov
lods
jg
lret
sub
push
xlat
push
sub
mov
insl
cld
fprem
mov
add
insl
rcrl
or
das
or
movsl
mov
loopne
pop
pop
xor
cmpsb
out
and
jmp
dec
cs
xchg
ret
xchg
mov
adcl
push
stc
pusha
lcall
push
ja
int3
push
in
stc
lock
sbb
mov
bound
scas
sub
mov
ljmp
repnz
mov
divl
in
cmp
dec
mov
jo
aaa
pop
in
rclb
movsl
je
push
cmp
rorb
inc
scas
jmp
nop
ror
or
and
lcall
pop
out
ss
out
sub
lock
inc
and
repz
xor
imul
jge
pop
shl
leave
pop
icebp
lods
mov
xlat
ja
or
sub
jno
outsb
popf
pop
test
sub
movl
fcmovnb
push
xlat
push
scas
cmp
sahf
and
cmp
pop
and
bound
sti
mov
xor
cmp
lea
jo
jbe
lcall
fmull
jg
cmp
out
sbb
cmp
ret
mov
lcall
cmpsb
xchg
aad
lret
nop
mov
or
les
pop
sbbb
adc
and
jbe
pop
mov
repz
call
and
aas
imul
loop
push
cmp
lock
push
fsts
les
fmuls
mov
jmp
xor
adc
sbb
push
ss
and
aas
insb
outsb
std
stos
push
cmc
or
xchg
sub
or
pop
imul
mov
stc
outsl
cltd
xor
mov
out
mov
pushf
cmpsb
dec
jbe
mov
adc
sub
hlt
out
add
adc
mov
movsb
add
jmp
lods
in
push
dec
fsubrl
xor
xchg
xchg
dec
vmovupd
sub
insb
pop
out
insl
xorl
js
lahf
bound
and
addl
mov
push
push
push
xchg
lds
loope
sar
and
mov
test
es
je
xor
inc
mov
cld
sti
call
dec
iret
push
stos
popl
arpl
adc
inc
stos
sbb
sbb
ds
lahf
dec
stos
xor
in
mov
xchg
adc
aad
cmp
aas
hlt
cmp
mov
xchg
test
out
arpl
jge
sub
lods
mov
lahf
lahf
addr16
mov
mov
sar
push
mov
imul
and
daa
sbb
inc
dec
rcrb
aaa
xchg
js
cs
lret
push
cmp
sahf
xchg
fsts
mov
movsb
dec
mov
push
sub
inc
and
cmp
inc
and
lods
sbb
jecxz
mov
bound
lahf
insl
out
mov
sarl
test
inc
shlb
inc
mov
inc
ss
adc
push
xor
data16
mov
mov
or
int
cmp
xchg
cld
cmp
gs
lods
pop
popf
mov
inc
into
sbb
mov
jns
cli
jp
jecxz
xchg
rcrl
add
lret
rorb
pusha
mov
das
shrl
xchg
xlat
cld
adc
dec
push
gs
imul
stos
jecxz
daa
jo
jne
add
sbb
push
mov
pushf
and
sub
or
cmp
jne
xor
divl
fchs
mov
das
fs
jl
pop
mov
scas
mov
mov
cwtl
xchg
pop
std
or
inc
mov
cmpsb
jle
adc
and
dec
pop
or
or
jl
sbb
xor
lea
in
outsl
xchg
mov
add
jecxz
aad
inc
mov
mov
jl
outsl
lock
out
icebp
adc
xchg
clc
and
xchg
jns
cmp
jae
pminub
push
pop
insl
sub
inc
pop
push
insl
fisubrl
into
jmp
jecxz
sub
in
int
movsb
inc
xlat
scas
push
or
xchg
push
dec
sub
addr16
or
mov
cmp
xor
fucomip
pop
sub
xchg
mov
cmp
in
je
mov
lea
or
sarl
rcrb
inc
mov
jno
icebp
or
jbe
and
movsb
adc
sti
sub
nop
int3
popa
xchg
call
xchg
sbb
sahf
cmp
jle
adc
jne,pt
mov
xor
or
stos
add
inc
in
mov
testb
les
out
imul
or
xor
pop
xchg
sub
xlat
jmp
jmp
cmp
pop
rorb
fists
aam
mov
mov
imul
fistl
or
in
into
repnz
fcmovbe
movsl
jl
dec
add
or
sub
mov
outsl
and
mov
jae
jp
outsl
pop
inc
fcompl
or
xchg
cmpsl
outsl
call
into
int3
jmp
mov
stc
cwtl
test
cmp
dec
aaa
and
and
test
dec
push
ss
push
and
mov
sbb
cmp
xor
rolb
arpl
push
cltd
subl
into
pushf
sarb
in
sbb
shlb
inc
sti
mov
scas
pusha
jno
test
packssdw
sbb
pop
dec
loop
gs
mov
push
push
and
pop
jo
adc
add
call
lods
les
push
fs
pushf
add
fiaddl
inc
mov
jae
pop
das
int3
stos
clc
mov
mov
cmp
pop
ss
mov
add
jl
mov
push
es
cmpsl
push
lret
ds
popa
jmp
push
adc
or
jecxz
sub
sub
popf
sarl
sar
xor
repz
jg
push
or
loopne
sub
or
xor
adc
xchg
xchg
cmp
les
test
xor
add
inc
or
dec
sub
mov
iret
nop
pop
xchg
mov
mov
sti
in
pop
es
cmp
push
in
fldenv
mov
lock
lahf
fdivr
adc
scas
fstpt
frstor
pop
jge
jno
mov
in
xor
loope
inc
out
dec
test
fldcw
mov
movsl
gs
push
mov
rorb
scas
movb
cmp
jns
aas
outsb
push
and
pusha
das
xchg
hlt
cmc
mov
dec
fisubs
mov
cs
jmp
in
stos
jne
outsb
jae
sub
mov
int
push
mov
daa
scas
leave
shlb
outsb
xchg
xchg
pop
lcall
lods
add
adc
pop
repnz
push
es
gs
adc
lods
xchg
daa
dec
in
dec
ds
jns
xchg
or
adc
lods
add
mov
push
mov
mov
dec
test
cmp
aam
jnp
aaa
ror
popa
mov
xchg
and
mov
sbb
xor
or
aas
ljmp
leave
add
ja
jbe
mov
sbb
loopne
xchg
adc
enter
loopne
mov
xor
adc
int
jge
clc
pop
xlat
sub
lahf
fiadds
push
mov
imul
push
push
xorl
mov
imul
fcomps
les
popa
push
xor
pop
fucom
aaa
mov
push
sarl
addr16
add
jl
jno
mov
adc
lea
out
lcall
and
and
rcrl
add
sbb
ds
f2xm1
and
lock
sub
mov
push
addb
push
ffree
shll
jecxz
push
sub
addb
dec
lea
mov
sub
jg
out
insb
push
mov
adc
cwtl
pusha
jp
mov
lock
pop
add
mov
add
outsl
push
js
push
adc
jle
cmp
fs
fdecstp
pop
jmp
imul
out
xchg
inc
inc
push
cmp
dec
cmp
clc
outsl
cwtl
data16
xchg
mov
add
jmp
jl
and
out
add
xchg
movsb
imul
pop
or
ret
jmp
xchg
and
pop
dec
pusha
loopne
mov
pop
and
xchg
push
and
call
jle
flds
mov
and
and
cmp
pop
divl
cld
jae
ljmp
mov
js
and
dec
add
out
ret
pop
test
mov
mov
jmp
std
mov
rorb
outsl
push
push
in
out
dec
nop
inc
test
inc
int
and
sbb
push
sti
subl
lahf
xor
stos
mov
bound
mov
xchg
add
dec
out
std
movsl
xor
cltd
mov
rcr
mov
push
ret
pop
push
xor
cli
loopne
dec
xor
lret
xchg
fwait
pop
lods
xchg
btr
cmp
adc
cmc
fwait
aad
cwtl
xor
inc
ret
xor
test
je
inc
add
xchg
sub
mov
mov
adc
mov
xchg
push
imul
out
adc
lods
inc
les
xor
mov
aad
xor
clc
dec
xchg
pop
cmc
pop
mov
cmp
mov
pushf
fs
scas
subb
imul
adc
adc
xchg
into
stc
xor
add
stos
fimuls
je
xor
jnp
pop
insl
adc
cmp
adc
cld
add
push
inc
pushl
inc
sbb
xor
out
js
cmp
sub
jno
iret
mov
jo
mov
xchg
lret
aaa
rcrl
mov
pop
add
data16
fisttpl
mov
xor
push
mov
jecxz
insb
in
mov
xchg
test
sti
and
mov
inc
dec
cwtl
cmp
xchg
fcmovnbe
dec
cltd
sahf
xchg
xchg
aam
cmc
xchg
rcl
adc
lret
push
in
sbb
fmull
aas
mov
negb
jo
outsl
cmp
cmp
and
fxch
mov
jl
or
mov
inc
cmpsb
jns
insl
adc
jnp
or
xor
jge
enter
call
ficompl
xor
mov
je
sarb
outsl
icebp
nop
pop
aas
mov
mov
jecxz
mov
adc
jnp
data16
mov
out
loop
jb
add
sbb
in
or
inc
adc
xor
and
es
arpl
sub
loop
adc
adc
mov
push
test
lods
sub
and
mov
and
pusha
movsl
push
push
test
push
js
jg
dec
jl
mov
mov
cmp
leave
adc
pop
push
fwait
data16
adc
pop
shl
cmp
adc
inc
add
cwtl
enter
pop
mov
les
xchg
imul
mov
aas
aad
dec
xor
sbb
pusha
cmp
movb
dec
jo
sbb
out
cmp
aas
adcl
cmp
mov
xchg
std
cmpsb
push
cmpsb
or
sub
nop
xchg
idiv
and
mov
je
mov
or
insb
fs
ret
push
mov
popa
dec
or
cmp
adc
dec
xor
movsb
fidivrl
jg
aad
leave
imul
and
pop
out
pop
adc
dec
xchg
sarb
push
sbb
repz
test
mov
sbb
fldenv
pop
and
lea
test
in
or
push
fisubrs
aad
adc
insl
adc
loop
push
lock
mov
addr16
jmp
shrl
fidivs
jl
outsl
popa
ret
movsl
fdivr
pop
cmp
jle
mov
mov
leave
and
add
imul
stos
dec
push
mov
movsl
shll
scas
loope
sub
push
leave
jle,pn
dec
out
push
cmp
mov
inc
sub
pop
push
adc
js
dec
gs
jns
icebp
xchg
ljmp
test
mov
mov
jecxz
adc
shll
rcrb
in
mov
dec
fnsave
inc
jmp
jle
in
fsts
jmp
lret
add
notb
mov
imul
fidivrs
jmp
and
imul
xchg
in
clc
loop
and
pop
xchg
jp
jns
pop
pop
pusha
add
fimull
push
ds
out
sbb
mov
sub
jp
xor
jnp
imul
add
stc
xor
push
lcall
push
mov
adc
xor
pop
or
js
test
cmpb
jb
test
repz
test
jg
jle
xchg
sub
bound
mov
rcl
push
sub
mov
jae
jge
adc
aaa
outsl
ficomps
pop
lret
cld
xor
cmp
aas
mov
add
dec
pop
fnstenv
popa
mov
pop
cltd
arpl
mov
inc
cmpsl
jecxz
lret
pop
insl
cs
insl
sub
xchg
leave
jbe
mov
cmp
movsb
outsb
test
jbe
sbb
divb
inc
and
insl
fwait
imull
mov
mov
dec
ja
cpuid
outsl
out
xor
and
jno
xor
jae
je
iret
fiadds
adc
movsb
js
sbbb
cmp
lds
or
jecxz
push
out
cmp
std
into
pop
and
push
pop
pop
mov
stc
xor
stos
xor
fwait
mov
testb
movsl
push
insl
call
rolb
iret
add
mov
out
andl
adc
out
inc
aad
xor
cltd
inc
xchg
ret
insl
arpl
loopne
xor
test
sbb
mov
xchg
stos
out
push
add
push
jns
addr16
xor
pop
mov
xor
cli
and
fwait
pop
mov
insl
sub
loop
mov
dec
into
cmc
or
jle
mov
push
aas
iret
cmpsl
lahf
inc
mov
and
mov
rsm
aam
dec
cmp
mov
mov
sbb
je
scas
cli
ljmp
mov
push
ds
in
je
loop
pushf
xchg
lahf
gs
add
dec
cmp
cmpsb
std
mov
mov
sbb
mov
rcrb
shrb
shlb
sub
lret
mov
stos
lock
sti
jle
movsb
popa
add
xor
push
add
mov
push
divl
int3
das
lea
cmp
fistpl
mov
sbb
adc
jecxz
les
dec
aas
out
pop
leave
sbb
sub
rorl
shr
cmp
pop
adcb
fisubl
xor
xor
inc
out
pop
repnz
xchg
scas
sbb
mov
push
fistpl
cli
js
mov
inc
popf
aam
pop
adc
test
sub
cmp
mov
rcrb
jmp
mov
orb
loope,pt
mov
scas
rclb
mov
test
xchg
mov
cmpl
dec
sub
scas
movsb
hlt
or
push
sub
jne
sbb
ja
xor
gs
jmp
xchg
mov
or
je
adc
lock
pop
push
jmp
jnp
sub
rcll
jo
iret
sbb
xchg
out
addl
xchg
lret
mov
mov
or
or
jp
xchg
fldl
cli
pop
mov
mov
jb
ljmp
int3
inc
fildl
mov
outsl
dec
sbb
jns
cmp
in
icebp
add
pop
jmp
les
aam
push
insb
mov
dec
loop
in
fidivs
and
mov
subl
mov
mov
xor
mov
push
lahf
popf
arpl
outsl
and
push
scas
jmp
pop
inc
std
mov
popf
adc
out
imul
xchg
xchg
dec
scas
and
aaa
xor
fadd
and
sahf
mov
popf
dec
add
lds
outsb
pop
adc
add
sbb
jge
js
jp
push
outsb
sub
arpl
aas
in
cmp
fnstsw
lock
sub
pop
ja
xchg
adc
mov
les
test
dec
icebp
mov
push
sub
dec
icebp
cmpsb
mov
aaa
popf
xchg
cmp
in
or
mov
xor
outsb
dec
adc
cmp
popf
ror
adc
cmp
push
stos
popf
aas
adc
and
sbb
stos
push
in
pop
ss
ret
ret
jl
stos
add
cmp
aaa
jp
lea
dec
aam
scas
mov
test
cmc
mov
and
cli
movsl
sub
push
cmpsb
inc
xchg
jecxz
inc
gs
lcall
pop
leave
jo
inc
aad
mov
int3
ds
gs
mov
lods
and
pop
cmp
sbb
push
test
xor
scas
testb
mov
loop
add
dec
inc
mov
test
and
in
femms
or
int
scas
std
adc
and
jl
test
push
inc
lds
out
pop
bound
and
dec
movsb
inc
cmpsb
or
jmp
jmp
lcall
dec
cmp
movsl
lds
ficomps
aad
leave
xchg
aam
pop
and
lcall
jno
mov
shlb
into
fdivrl
mov
and
mov
or
or
sbb
jno
ljmp
xor
popa
aad
pusha
test
or
sbb
sub
mov
pop
js
ret
mov
sub
fs
mov
dec
sub
pop
jecxz
nop
mov
ja
inc
sub
outsb
jmp
je
cmp
adc
and
fmuls
push
pop
sub
mov
adc
and
arpl
pop
inc
sub
mov
push
dec
mov
push
cmp
ficomps
sub
mov
movsb
adc
lret
pusha
imul
sbb
icebp
mov
or
inc
add
mov
jp
or
dec
add
fistpll
or
jns
shlb
adc
mov
cli
inc
sbbl
inc
jo
inc
stos
mov
test
icebp
sbb
jl
sti
push
adc
dec
jae
je
mov
inc
aas
shl
outsl
aad
mov
mov
pusha
mov
inc
loopne
adc
mov
xor
cmp
f2xm1
aam
loop
fisttps
arpl
leave
push
mov
sbb
fdiv
dec
out
sarl
pushf
js
ret
cwtl
scas
jg
jns
xor
fcomi
in
sbb
inc
ret
insb
push
cmc
lods
push
addr16
sbb
adc
int3
ja
test
and
aaa
sbb
cmp
push
mov
scas
sbb
fwait
repz
mov
repnz
gs
mov
pop
xchg
cmp
sub
jg
icebp
mov
lret
adc
testl
fldlg2
mov
xchg
or
and
mov
mov
sbbl
sbb
add
sub
jo
cmpsl
shrl
in
sbb
int
adc
fdivl
jno
pop
jne
in
mov
pop
push
pop
scas
lods
ret
cli
cmp
scas
aad
cmc
pushf
mov
outsb
push
or
imul
sysenter
int
sahf
adc
ss
stos
mov
ret
pop
jbe
push
sub
xlat
leave
fisttps
add
es
bound
out
in
in
cmp
and
fs
mov
dec
loop
hlt
xor
mov
out
icebp
fmull
lds
lcall
lds
xor
clc
sbb
cmp
shll
mov
xchg
sbb
sbb
cmp
jmp
popl
ja
in
daa
sbb
jno
xor
movsl
pop
xor
add
xchg
mov
xchg
iret
stc
ret
push
cmc
mov
cmp
mov
loop
xor
loope
fdivp
nop
scas
mov
inc
insl
mov
adc
into
inc
mov
orl
jno
pop
icebp
mov
out
xchg
add
jb
clc
divb
and
iret
shll
pop
jnp
adc
das
dec
les
mov
paddsw
loope
cld
aaa
push
mov
repnz
loope
jecxz
mov
ficomps
lea
pop
xchg
push
test
lcall
jg
xor
in
loope
test
out
lea
ret
xor
cli
outsb
add
rcrb
mov
repnz
dec
dec
add
jmp
call
sbb
xor
mov
xchg
push
rep
stc
test
aam
fdiv
pop
jge
mov
add
pop
inc
push
pop
aaa
out
sub
popa
add
addl
pop
rorb
fidivs
repnz
cmp
inc
inc
imul
fcomi
inc
inc
repnz
rolb
inc
mov
push
aaa
mov
out
js
bnd
in
aad
xor
lds
stos
cmp
mov
test
lea
dec
jns
dec
lds
into
jns
pop
and
lds
xlat
sbb
inc
push
mov
cmpsl
add
sbb
hlt
xchg
aam
aas
addr16
sub
jl
push
inc
stos
ret
sti
or
cmp
mov
inc
sub
test
rorl
repnz
daa
mov
insl
mov
jge
push
addr16
jo
ljmp
mov
and
out
cli
inc
bound
jb
leave
ja
push
fbstp
js
ss
sti
jg
cmpsb
sbbl
and
inc
or
cwtl
lret
push
loop
pop
sbb
sbb
xchg
outsl
stos
inc
flds
cs
in
pop
pop
flds
and
inc
add
xchg
in
sbb
repz
ljmp
cmp
cs
cld
pop
leave
xor
mov
jp
popf
push
out
mov
out
inc
inc
shlb
xchg
nop
mov
xchg
mov
std
rcrl
in
pop
dec
jmp
sub
mov
outsb
popf
shrl
mov
ja
loope
cmp
add
jecxz,pt
sti
and
es
mov
addb
rcrb
lahf
mov
cmpsl
cmpsl
dec
fidivl
jmp
scas
mov
push
addl
mov
inc
sub
mov
sbb
aaa
test
push
cld
and
frstor
cmp
sub
push
insb
imul
or
mov
xchg
pop
testl
mov
stc
lods
mov
push
sub
lock
sbb
lret
lcall
mov
aad
inc
imul
fcompl
xchg
push
add
into
pushf
stc
inc
bound
sub
scas
cs
out
jae
xor
jb
mull
aas
cld
hlt
test
int3
loope
mov
or
ficoml
hlt
cld
lds
push
xor
jl
and
mov
std
test
xchg
adcb
call
adc
and
inc
cmp
mov
xor
cmp
fdivs
test
aam
add
jnp
lods
inc
shlb
or
fcomi
and
in
xor
dec
cmp
repnz
mov
push
stos
push
imul
mov
mov
inc
loope
jns
popf
aam
pop
jbe
jo
push
outsb
pmulhuw
inc
inc
adc
pop
cwtl
iret
push
ret
sahf
mov
mov
pop
add
jno
jnp
and
and
mov
add
mov
and
fst
rclb
dec
outsb
and
pop
inc
fcompl
jl
xor
nop
pop
add
sub
popf
or
mov
mov
or
add
jl
repnz
cwtl
pop
inc
fwait
adcl
leave
adc
adc
mov
out
shl
subb
inc
test
xchg
lcall
cld
jg
xchg
int3
jle
and
test
mov
decl
cld
push
mov
inc
add
popf
adc
mov
in
add
adc
add
movntps
push
inc
add
jmp
push
out
sub
cmc
pop
repz
or
mov
and
lcall
mov
inc
outsl
call
aas
xchg
call
loop
insl
cmp
xor
iret
xlat
jne
lret
pop
fcoml
aaa
push
push
sub
arpl
aam
mov
incb
add
jno
sbb
and
pop
and
in
pop
cmp
gs
mov
mov
jbe
loop
mov
inc
mov
adc
jbe
imul
jg
stc
repnz
rcrb
dec
mov
jl
loop
ficompl
adcl
les
mov
push
jg
out
arpl
xchg
repnz
mov
imul
inc
out
xchg
adc
xchg
pop
or
dec
adc
mov
aad
into
mull
add
mov
adc
xchg
add
mov
lahf
les
movsl
dec
or
aad
push
sub
popa
jge
pop
mov
out
ljmp
xchg
jecxz
pop
pop
dec
lock
jno
and
nop
inc
sbb
fdivl
xor
pop
cs
test
jae
test
loop
jno
pop
repnz
jnp
adcb
in
mov
pop
cli
sarb
push
sbb
fadds
test
lcall
adc
jne
repnz
push
lods
int3
test
push
frstor
pop
lret
inc
dec
lcall
inc
dec
or
ljmp
lods
or
push
add
cmpsl
rcrb
xor
imul
int
movl
cmp
pusha
adc
div
int3
outsb
jo
aas
test
and
push
adc
or
or
lods
add
es
mov
jae
and
cwtl
fsubs
xor
fsubp
in
enter
fmulp
xor
push
mov
jo
sub
cld
add
rcl
ljmp
and
inc
push
xor
cltd
in
sti
ljmp
xlat
xchg
inc
mov
jno
mov
pop
mov
bnd
jmp
ja
lds
xor
pop
mov
test
adcl
lret
mov
xlat
mov
mov
dec
sub
jne
jg
js
xchg
icebp
ror
add
mov
pushf
lock
ja
stos
mov
or
test
jnp
mov
test
mov
aaa
or
sbb
dec
icebp
iret
test
fldenv
sub
fnstcw
jl
in
jmp
mov
mov
push
mulb
xor
hlt
add
das
in
mov
rolb
dec
or
mov
ja
ja
mov
scas
addr16
leave
loop
or
dec
push
fisttpl
and
sub
popa
dec
sub
jl
sbbb
dec
int3
test
push
and
push
sbb
or
cmc
lret
sub
pop
adc
js
rcrl
movsl
adc
adc
and
data16
or
div
adc
xor
sub
mov
jns
adc
xor
cmpsb
or
aas
fbld
imul
mov
lret
inc
mov
and
push
adc
sahf
mov
gs
and
icebp
int3
lret
jns
imul
xchg
out
mov
push
xor
ret
fsubl
mov
mov
aad
clc
dec
add
dec
fildl
add
pop
dec
gs
jne
pop
pop
jmp
mov
mov
popa
mov
test
into
cmp
fnstenv
xor
sbb
and
mov
jmp
add
cmpsb
xchg
adc
fildl
inc
lea
jb
je
fisttps
icebp
aaa
cmp
jo
mov
fsts
ljmp
push
sarb
sub
push
add
pop
adc
fsubrs
adc
cmp
aam
or
lock
popa
int3
or
inc
xlat
jecxz
xchg
pusha
sub
push
jbe
js
add
mov
cmc
add
js
mov
xor
inc
sbb
sbb
lds
jge
jmp
arpl
addr16
call
ja
xchg
pop
mov
sbb
pop
or
dec
out
add
stos
xchg
call
data16
add
pusha
arpl
dec
fidivs
out
lcall
xor
xchg
adc
hlt
lods
imul
cld
in
js
out
adc
lock
outsb
jbe
icebp
mov
xlat
mov
leave
movaps
das
inc
and
kxorw
add
das
xchg
and
test
jmp
pop
mov
test
stos
adc
inc
ret
add
dec
xchg
ror
jb
scas
dec
loop
mov
pop
stc
lcall
xchg
jbe
xorl
mov
or
leave
cmpsb
rcr
daa
cmp
mov
cmp
push
filds
jg
dec
push
sti
sti
das
js
ss
aaa
cwtl
mov
jge
push
dec
mov
subb
pop
push
dec
aaa
cmp
push
xchg
sbb
cmpsl
push
stos
clc
mov
mov
je
sbb
scas
mov
xorb
xchg
cmp
sarb
xor
lea
mov
fstpl
fsubrs
and
jecxz
pop
jae
push
dec
push
shl
in
mov
fists
or
mov
inc
andb
incl
xor
in
or
or
adc
movsb
mov
mov
pop
mov
mov
clc
inc
dec
fwait
mov
mov
xchg
jb
mov
inc
loop
and
lock
mov
fisttpll
mov
or
add
popf
lret
stos
xchg
loope
repz
imull
cli
stos
in
popa
clc
lods
push
gs
jns
stc
test
out
pop
xchg
vunpckhpd
xchg
sahf
push
and
pop
call
ffree
arpl
pushf
sbb
sub
cmp
sbb
test
pop
adc
mov
hlt
pop
loopne
dec
icebp
frstor
add
push
mov
pop
add
or
sbb
mov
xchg
sbb
std
loopne
mov
leave
js
lock
jl
jle
or
aas
adc
sub
or
dec
sub
subl
and
std
add
lock
fsubs
mov
add
lret
sub
leave
cmp
jne
adc
shrl
inc
xchg
xchg
pop
mov
fwait
push
pop
jecxz
movsl
mov
xchg
jae
leave
movb
mov
std
das
arpl
repz
in
rclb
out
out
push
ss
inc
sbb
sbb
dec
les
mov
in
inc
xchg
add
mov
loopne
xor
scas
in
dec
lea
mov
adc
xchg
add
insb
xor
jae
sbb
or
in
pop
fcmovnbe
xchg
lahf
fsubrl
mov
adc
ret
and
xchg
es
or
xchg
outsl
or
hlt
push
sub
aas
in
inc
testb
lock
test
mov
lock
pop
mov
insb
or
or
or
or
lahf
push
cmp
xor
jmp
jns
mov
jecxz
jo
ret
adcl
in
sbb
and
repz
paddusw
mov
add
jmp
jnp
iret
xchg
adc
fistps
cmpsb
sbb
arpl
cmc
cltd
or
jbe
div
xchg
movl
lods
cs
or
icebp
push
inc
repz
mov
cld
icebp
and
enter
js
cmpsl
dec
jnp
les
xor
hlt
imul
xor
push
in
xchg
mov
fildll
lret
cltd
js
loope
xchg
push
stos
iret
push
test
insl
in
push
pusha
popf
fisubrl
xor
pushf
das
mov
adc
xchg
mov
jo
push
push
int
daa
mov
out
xor
cmp
daa
sub
stos
xor
xchg
mov
jnp
inc
mov
and
popf
jecxz
jns
icebp
dec
repnz
mov
ss
sub
loop
mov
cmp
gs
jmp
mov
xlat
pushf
dec
js
dec
shrb
or
in
dec
xor
inc
insl
clc
jo
xchg
movsl
scas
inc
das
push
mov
popl
lret
cwtl
xchg
dec
or
call
fs
xchg
lods
fildl
int3
jo
ljmp
and
sub
outsl
inc
fsubl
mov
adc
or
mov
pop
stos
adc
popf
aam
or
nop
pop
roll
fcomip
add
test
mov
call
pop
popa
xor
cmp
xchg
sti
cmpsb
adc
jb
mov
and
jmp
pop
jg
int3
adc
out
or
xchg
pop
lock
cmp
pop
and
push
dec
push
add
nop
sbb
or
inc
push
loope
push
push
loop
dec
arpl
sar
loop
roll
sbb
fldcw
push
and
jno
inc
mov
in
push
mov
enter
mov
movsl
out
pop
jae
sub
lret
inc
push
aaa
loop
imul
mov
add
inc
mov
cltd
je
cmp
add
inc
xchg
cs
sub
mov
and
push
popa
ss
and
cmp
adcb
cmpsb
mov
mov
mov
mov
xchg
imull
push
cmp
or
leave
lock
test
or
cmpsb
cli
sbb
fistpl
lret
outsl
and
pop
movsl
push
aam
sub
jbe
cmpsb
push
cmp
jmp
fs
mov
pop
into
gs
or
inc
cld
xchg
iret
jbe
push
mov
shrb
add
push
daa
test
leave
outsb
jecxz
mov
shlb
movb
shl
ljmp
add
mov
jg
cmp
movsb
xor
mov
out
int
imul
dec
sub
cltd
rolb
std
adc
mov
rcr
and
cs
cmp
mov
mov
int3
pop
inc
xchg
sub
xchg
jp
bound
add
int3
mov
add
clc
call
inc
in
and
sub
pop
fnstenv
mov
cmpsl
xlat
mov
rolb
sub
fcomps
mov
adc
hlt
xor
in
pop
cmp
sbb
xor
outsb
imul
scas
pop
iret
repnz
push
insb
xor
mov
sbb
sbb
int3
push
loope
fisubs
sub
inc
sub
andb
inc
insl
lods
or
lea
inc
cwtl
cmpsb
inc
xlat
mov
jge
dec
mov
sahf
cmp
jo
adc
test
mov
sbb
xor
stc
ljmp
fidivs
addb
mov
jo
test
aam
mov
lcall
icebp
iret
out
fwait
addr16
and
imul
mov
and
ja
icebp
es
pop
push
lea
outsl
scas
cmp
mov
popf
out
xchg
sahf
cli
icebp
out
pop
jne
pop
ljmp
es
and
iret
push
stos
in
jae
scas
and
xor
inc
mov
mov
je
cld
push
push
xchg
bound
push
loope
leave
in
in
mov
out
xchg
clc
ss
cltd
fsubrp
add
cwtl
add
popf
divb
fists
inc
cmp
je
jnp
decb
cwtl
iret
inc
jle
dec
push
out
clc
push
push
aas
cld
std
pop
sub
mov
nop
out
shr
xor
cli
adc
mov
ja
mov
and
cmp
jns
aad
in
add
movsl
xchg
xchg
imul
jl
negl
rclb
lods
out
cmpsb
stos
xorps
pop
mov
arpl
pop
adc
fisubs
hlt
stos
pop
scas
shrb
xchg
lret
and
push
loopne
into
decl
jno
push
gs
mov
mov
mulb
cmp
pop
nop
dec
add
adcb
mov
xor
or
xchg
mov
fcoml
cmpsl
popf
jmp
jp
insb
adc
aas
enter
cmp
sahf
pop
cmc
inc
je
xchg
pop
shl
xchg
mov
pop
pop
push
hlt
addr16
pop
mov
push
pop
lcall
pop
bound
fmuls
pop
faddl
mov
stos
pop
subb
mov
stc
or
sbb
mov
fwait
pop
mov
jge
into
insl
dec
loop
out
pop
test
fisttpll
mov
div
xor
in
jg
dec
mov
add
rcrb
fsts
lahf
fst
pop
clc
enter
movsb
repz
cwtl
push
cmp
add
jb
movsl
inc
call
sub
pop
aam
mov
aad
push
xchg
cmc
pop
push
call
inc
lret
cltd
repnz
pop
adc
pop
cmpb
mov
lods
repz
mov
shl
add
jmp
xor
mov
stos
mov
inc
pop
aam
jo
imul
inc
pop
inc
jno
lcall
fwait
or
dec
mov
repnz
pop
clc
push
in
clc
or
push
add
pop
adc
jne
push
jne
mov
in
je
cmp
fs
dec
imull
jb
pop
addr16
addb
pop
dec
cs
sub
bswap
sub
mov
and
repnz
xor
add
dec
sar
jnp
mov
xor
add
mov
and
push
sub
loopne
es
push
stc
jns
xlat
inc
xor
enter
push
or
sarb
and
add
nop
sub
mov
xchg
lret
and
popa
dec
xlat
inc
lods
cmp
fcmovu
mov
aam
xor
gs
in
das
and
rorl
cmp
jb
es
mov
call
or
aad
repz
add
adc
xchg
dec
ja
push
sub
jno
dec
lds
es
lds
add
pop
jmp
xchg
in
add
xor
push
adc
pop
jns
xor
repnz
mov
insl
mov
fwait
ljmp
ret
jg
dec
push
lock
push
pop
test
sahf
jmp
jmp
push
lcall
lock
cmpb
rcl
insb
orl
scas
lods
int
in
xchg
ja
cmpsb
xchg
stc
sub
or
push
xor
add
lods
movsl
jno
sti
jns
lods
pop
pop
iret
inc
jb
leave
push
adc
cwtl
sub
fnstenv
cmp
pushf
xor
fcomp
aam
outsl
lock
and
cmp
jp
sbbb
jo
xchg
or
mov
int
add
insl
jb
push
fnstcw
inc
test
cmp
roll
popf
mov
sub
scas
mov
sub
mov
add
xchg
arpl
xor
cmpb
xchg
sub
scas
outsl
cld
cmp
fdivrp
in
dec
push
mov
int
loop
shl
jbe
lods
dec
mov
hlt
lahf
les
inc
cwtl
js
es
mov
push
inc
icebp
pop
and
mov
mov
ret
or
and
sub
or
ja
arpl
push
fnsave
lret
push
inc
mov
push
es
insb
push
xchg
in
shlb
mov
pop
adc
and
in
imul
ret
push
or
insb
xchg
pop
aaa
add
jl
lods
and
imul
pushf
pop
and
popl
or
jmp
and
adcl
icebp
add
test
pushf
movb
sbb
add
shll
pop
testl
hlt
xchg
cmpl
dec
mov
scas
outsb
in
push
cwtl
negb
mov
lret
xchg
jl
out
inc
push
inc
dec
xchg
mov
subb
ja
outsl
cwtl
ficomps
lods
andb
jns
arpl
pop
mov
daa
fs
ret
jbe
sbb
dec
fs
repz
subl
xchg
push
pop
and
pop
mov
out
cld
outsb
mov
xor
in
push
push
mov
push
xor
test
push
pop
cmc
pop
xor
cmp
mov
imul
pop
jge
mov
testl
jbe
and
int
mov
scas
sbb
jno
in
sti
in
ret
lds
push
sub
lahf
fsts
or
xor
inc
adc
mov
mov
js
lea
and
sti
add
lret
add
inc
insb
xchg
pop
into
cld
sti
cmc
imul
movsb
push
aam
push
jo
popa
punpcklwd
pop
lret
cmp
jge
in
and
je
mov
pop
sub
sbb
pop
fstpl
xorl
xchg
push
add
aad
sub
aam
jle
repz
pop
push
dec
loop
and
pop
jge
mov
loope
pop
std
pop
jb
mov
push
int
xchg
out
lret
outsb
cmp
outsb
pop
out
mov
mov
mov
push
cmp
inc
pop
popa
jns
repnz
in
jns
dec
lock
and
sub
std
sub
rorl
movsl
mov
mov
add
or
test
clc
stos
lret
lock
lods
js
in
push
movb
mov
sar
sbb
bnd
cmp
xchg
insb
imul
scas
xor
rolb
nop
faddl
or
aas
lret
cmp
cli
sub
xor
loop
call
fs
and
jmp
xor
lods
scas
jbe
dec
xchg
sbb
xchg
jno
sbb
xor
xor
add
sbb
push
aaa
in
aad
aaa
mov
xchg
dec
clc
adc
int
push
shll
cmp
lahf
ds
and
dec
jno
mov
xchg
mov
inc
inc
push
data16
pop
or
cmp
mov
add
ret
mov
arpl
fnstcw
loopne
scas
pop
std
call
shrl
mov
add
xchg
sub
adc
add
call
mov
mov
notl
jnp
inc
das
je
das
int3
or
jnp
stos
add
mov
sbb
cmp
lods
fs
in
jmp
fwait
jnp
xorb
adc
sbb
cmpsl
jb
in
and
ret
jmp
lea
xchg
pop
pop
mov
inc
jnp
jbe
xchg
cmp
add
mov
mov
inc
add
out
lahf
je
add
std
pop
jecxz
fwait
outsb
fcoms
inc
das
sbb
inc
mov
loope
out
cli
in
ss
dec
fidivs
pushf
mov
add
add
and
filds
push
popa
rcr
scas
cmc
stos
add
mov
and
push
js
pop
or
mov
xorb
jns
push
or
stc
mov
cmp
psadbw
std
push
int
jnp
or
lea
or
stos
pop
call
jne
sbbl
int
data16
daa
je
popa
loopne
pop
sbb
sub
or
xor
push
je
test
pushf
shl
jge
jg
mov
sub
fdivr
adc
jnp
mov
xchg
push
push
push
xor
ja
mov
rolb
or
call
fs
in
push
push
xchg
testl
jae
imul
xor
subb
in
xchg
dec
stos
sbb
sub
or
addl
sub
push
push
ja
scas
pusha
push
je
cmp
push
inc
cmp
aaa
ficoms
jmp
pop
dec
pop
jge
adc
sbb
inc
or
je
pusha
mov
inc
jmp
push
jno
cmpsb
xchg
scas
jmp
adcl
jb
xor
mov
push
cmp
xchg
mov
cmpsl
int
pop
xchg
lds
outsb
stc
mov
mov
in
xor
stos
mov
psubusb
sbb
stos
pop
mov
mov
pusha
bound
addb
sarb
sub
orb
sbb
mov
jns
cmpsb
sub
shll
mov
xor
cmpsl
xor
rolb
jge
sub
or
pop
out
mov
dec
cmp
mov
pop
les
outsl
mov
orl
dec
mov
pop
cli
sub
mov
into
mov
and
ss
jns
or
xchg
arpl
mov
in
push
sbb
shrb
push
je
mov
add
jp
leave
test
lret
imul
cmp
and
nop
pop
int3
inc
push
xchg
and
xor
pop
sti
mov
popa
stos
jmp
push
mov
roll
repnz
or
arpl
push
bound
xor
mov
lahf
push
movsb
mov
outsl
adc
sbb
cmp
inc
xchg
jae
pop
sbb
lcall
inc
lret
das
stc
in
movsl
movsl
clc
div
in
ja
into
mov
cmp
pop
push
pop
inc
test
and
cmp
dec
mov
adc
inc
insb
push
fs
sbb
cmp
dec
in
or
lods
mov
sti
add
in
gs
mov
int
gs
dec
jmp
lods
jno
pop
addr16
mov
dec
loop
xchg
push
push
push
aaa
not
mov
jl
cmpl
in
cmc
push
push
mov
xor
dec
push
icebp
adc
sti
movsb
pop
cmp
mov
dec
and
ljmp
cs
add
jns
loope
sbb
js
movsb
pushf
js
icebp
div
mov
fldcw
adc
pop
stos
lods
popf
aam
lods
sbb
outsl
pushf
fwait
mov
mov
adc
idivb
push
lea
js
int3
andl
scas
data16
cmp
inc
fldt
je
push
mov
push
fdivrl
and
adc
mov
mov
fwait
jne
cmp
sub
test
in
fs
repnz
lock
mov
mov
repz
rclb
popf
xchg
sarl
sub
addl
fcmovnbe
mov
cmp
cwtl
inc
vmwrite
and
push
add
mov
xor
out
dec
mov
fsubrs
mov
adc
in
inc
bound
mov
les
test
xchg
test
pmulhuw
sub
sbb
xchg
cld
and
popl
shlb
ja
sub
repnz
dec
shl
xor
into
sub
test
xchg
jns
mov
xor
mov
lds
mov
xchg
xor
pop
inc
and
mov
pop
mov
xchg
test
pop
inc
lods
mov
test
pop
or
int
daa
out
pop
loopne
sbb
mov
push
or
inc
mov
lret
shrb
and
pop
or
imul
xor
xchg
xchg
mov
or
or
xchg
adc
aam
test
push
bound
push
pop
dec
xchg
sub
test
push
cmp
mov
roll
push
inc
jo
cmp
mov
shll
lret
inc
insb
pop
in
jmp
or
mov
pop
sub
mov
ss
fmuls
jle
scas
push
ss
inc
ds
adc
sub
jae
fisttps
add
fistl
or
lods
js
xchg
dec
or
xchg
dec
sub
aaa
sub
call
test
mov
imul
rolb
xor
fs
add
xor
in
mov
int3
inc
adc
xchg
in
lret
push
shr
xchg
cmp
lea
cmpb
pop
in
mov
xorb
xchg
cmp
jns
stos
adc
inc
outsb
mov
adc
push
icebp
adc
add
push
je
mov
iret
call
fimull
inc
and
mov
adc
push
out
repz
int
outsl
mov
ds
mov
or
inc
dec
pop
xchg
fadds
xchg
dec
in
mov
adc
mov
lcall
not
repnz
mov
mov
push
aaa
flds
cmp
call
inc
sbb
jecxz
add
push
cmpsl
jo
sbb
xchg
mov
push
dec
inc
xchg
pop
xorb
imul
movq
rcrb
pop
push
xlat
rolb
xchg
test
stos
stos
lods
xchg
movsb
dec
shlb
adc
mov
jne
movzwl
nop
sub
xor
stos
cli
jae
inc
cwtl
jb
xor
fdivs
cltd
mov
mov
ja
jg
cmp
sub
sub
adc
mov
loopne
dec
popf
scas
push
in
lds
lock
dec
popa
nop
xor
inc
sub
out
jecxz
jge
clc
mov
push
pop
mov
xchg
int3
imul
jg
stos
scas
xchg
in
das
in
mov
incb
lea
lods
call
add
sbb
fwait
subl
jnp,pt
cwtl
mov
mov
dec
mov
sub
mov
gs
fsubs
xchg
and
pop
mov
outsl
jecxz
sub
cmc
lea
pushf
fildl
add
xor
shrb
dec
and
push
inc
pop
mov
cmc
cmp
hlt
adc
jnp
inc
lods
xor
add
push
repnz
mov
push
outsb
dec
mov
jp
mov
adc
and
sub
xchg
int
data16
or
cwtl
movsb
sbb
adc
push
push
jns
adc
adc
scas
cmp
push
jae
cltd
rcrl
pusha
stos
xchg
fbld
sub
add
push
in
ljmp
adc
jnp
xchg
out
sub
cmp
xchg
sbb
pop
cwtl
mov
adc
add
das
push
xchg
cmp
cli
xor
sub
imul
dec
mov
orb
or
sub
inc
inc
data16
inc
add
pop
je
insl
sbb
hlt
or
and
push
and
xchg
adc
and
clc
mov
add
movsl
cli
pop
sub
dec
sbb
push
xor
ret
xchg
test
cmpsl
cs
shll
or
xor
sti
test
hlt
loop
jmp
inc
xchg
fcoml
rcrb
ja
push
or
cmp
sbb
push
push
mov
cmp
dec
push
ret
lcall
mov
add
push
xchg
int3
adc
or
sbb
in
xchg
sub
aad
cwtl
add
adc
push
shll
in
jo
les
cli
or
cli
arpl
cltd
jle
mov
pop
int3
xchg
jo
add
pop
fldcw
mov
jo
xlat
inc
shlb
les
in
xchg
mov
negb
sub
and
push
mov
movsl
or
fadd
xlat
mov
xlat
push
mov
cmp
and
cmp
pushf
scas
insl
icebp
inc
dec
aaa
mov
push
popf
jp
gs
jne
popf
mov
or
andl
xchg
sub
loop
xlat
std
jg
loopne
call
and
sbb
jne
and
lret
pop
icebp
mov
sti
incb
test
and
jae
cmpsb
or
dec
cmpsb
imul
cmp
sbb
mov
scas
sbb
sahf
daa
rorl
inc
push
cmp
and
and
je
pop
mov
jge
dec
and
mov
lods
mov
jg
sub
mov
cs
inc
shll
jmp
daa
mov
gs
mov
xchg
cmpsl
pop
xor
insl
jnp
and
mov
call
mov
add
xlat
lds
sub
dec
pop
mov
int
clc
aas
loopne
jbe
aaa
or
and
lods
mov
lods
pop
push
jl
loopne
arpl
mov
lods
int
sbb
mov
and
inc
cmp
orb
cmp
cwtl
xor
adc
insl
or
addl
mov
out
push
les
sbb
test
ds
cli
mov
mov
add
sub
or
pusha
mov
in
cmp
jge
in
mov
ljmp
xchg
mov
cmpsb
rolb
push
sub
push
clc
cli
push
jecxz
adc
and
fisubl
lret
rcl
mov
leave
mov
enter
jo
shll
pop
dec
xchg
mov
inc
or
xor
push
pop
rcll
test
dec
stos
sub
sbb
cmp
lret
xor
clc
into
lods
cmp
dec
sti
adc
jae
lcall
pop
test
mov
ss
or
out
sbb
stos
lahf
and
popf
or
lock
inc
xor
dec
cmpsl
lods
and
pop
je
out
push
pop
in
lock
loope
lret
int3
mov
mov
jg
aam
mov
hlt
cmp
add
jge
out
addr16
scas
icebp
and
dec
leave
call
inc
loop
stc
and
or
pop
jnp
repz
lea
push
mov
nop
adc
xor
in
adc
add
jl
ret
inc
cmp
cmp
inc
or
jb
fcmovbe
sbb
sbb
lahf
mov
into
mov
sarl
pop
neg
xchg
xor
inc
ja
xchg
repz
stos
into
imul
push
fstpt
insb
mov
out
cmpsl
add
in
shlb
stos
cmp
add
mov
and
bound
cmpsb
sub
and
inc
pop
dec
and
mov
adcl
stos
fisubrs
pop
pop
add
ja
mov
daa
daa
popf
cs
iret
add
fwait
ds
or
pop
add
pop
out
mov
mov
xor
jle
cmp
addr16
cmp
lahf
pop
jmp
add
jns
aas
push
add
scas
popl
sbb
lds
repz
shrl
cmp
xor
movsb
sub
mov
lret
into
imul
jnp
inc
leave
or
inc
add
test
jge
jl
inc
xchg
out
sti
push
loop
cmp
fiadds
add
pop
jo
push
cwtl
add
pop
pop
jo
mov
dec
bound
push
mov
std
scas
push
fcmovu
pusha
notb
shll
clc
mov
je
rorb
dec
leave
fistps
adc
int
jecxz
and
cmp
lock
cs
pop
jmp
daa
adc
or
pop
cltd
adc
mov
inc
mov
cld
stos
jle
in
rorb
les
xchg
imul
test
xchg
sbb
cs
pop
ljmp
in
push
mov
in
jecxz
ja
aaa
xor
cmpb
sbb
mov
xorb
xor
dec
add
pop
scas
pop
push
jnp
bound
clc
push
inc
or
scas
fmulp
lock
fisubl
cmp
dec
xor
cmp
push
cmpl
adc
or
sbb
add
sbb
sbb
jg
sub
std
out
pop
aad
push
push
or
inc
and
mov
sub
sub
andl
push
cmpsb
sti
das
inc
add
xchg
fsubrs
movl
mov
mov
cld
clc
inc
add
mov
lods
adc
movsb
pushf
nop
xchg
clc
sub
mov
and
jnp
sub
and
sub
shll
fs
or
pop
into
cmc
mov
fadd
inc
xchg
push
ret
lcall
mov
aaa
in
jne
lcall
shlb
mov
mov
in
cmp
mov
lds
xlat
ss
push
pushf
in
loopne
inc
jo
sub
and
addb
add
mov
mov
xchg
or
sub
mov
and
sub
nop
das
in
mov
pop
cltd
popf
pop
rcrl
in
ds
rcrl
pop
out
pusha
mov
inc
cmpsl
mov
or
cwtl
test
dec
iret
fimull
ret
shll
add
jae
loope
jae
adc
or
lret
dec
fsubs
ds
pop
testb
xchg
mov
aas
mov
orl
sub
and
xor
dec
adc
and
push
jbe
jge
ret
xchg
sub
mov
xchg
lret
repnz
xlat
repz
lret
pop
and
mov
ret
mov
lea
sti
xchg
lea
push
sbb
int
xchg
inc
and
test
push
cmc
loopne
pop
jns
into
xchg
sub
push
in
ret
in
mov
mov
jmp
cld
pop
std
lcall
push
mov
lods
adc
out
push
out
xor
adc
sub
add
scas
mov
mov
mov
mov
or
cld
out
pop
mov
mov
add
xlat
nop
mov
push
xchg
mov
inc
mov
lods
test
push
xchg
stc
xor
mov
jl
mov
ret
dec
xor
rcrb
and
std
cli
dec
inc
stos
out
xchg
xor
dec
sbbb
xchg
ja
xchg
mov
bswap
loope
test
imul
repz
inc
pop
inc
mov
arpl
cmp
lods
sarb
imul
stos
adc
push
orb
shl
mov
out
rorl
icebp
out
cld
aas
jg
scas
outsb
push
shrl
dec
in
iret
fisttpll
lds
cmpsl
pushf
cmp
fmull
out
mov
mov
or
add
fmulp
fidivrs
aaa
fnstenv
cmp
jp
or
out
jmp
push
xor
or
add
mov
mov
imul
jbe
out
mov
sbb
adc
or
push
cmc
lds
add
cwtl
sarb
sub
iret
enter
into
sbb
mov
sbbb
and
xor
in
jmp
xchg
mov
and
push
push
fwait
pop
fbstp
push
push
or
xchg
test
push
nop
test
mov
iret
jno
repz
icebp
test
out
out
add
stc
cmc
mov
orl
xchg
mov
mov
push
dec
push
xor
repz
cmc
mov
mov
jnp
push
aaa
dec
add
and
das
lods
mov
loopne
js
stc
jge
lea
jp
js
or
lea
lds
jge
sbb
call
or
xor
cmpb
xchg
mov
xor
loopne
sbb
sbb
loope
mov
sahf
fnstcw
stos
loope
sub
js
imull
dec
std
rclb
cmpsl
cmp
jb
cld
cld
push
repz
or
sahf
lds
sti
mov
ret
cmp
dec
xor
imul
daa
nop
fidivl
push
je
cmp
pop
adc
push
test
pop
aaa
mov
jns
push
xor
fs
pop
xlat
stc
int
cmp
movsl
mov
shr
inc
mov
shrb
xor
inc
bound
jmp
sbb
das
nop
push
call
sahf
mov
cmp
adc
je
imul
xor
test
pushf
call
cmp
xor
jge
mov
push
aaa
xor
in
aad
imul
imul
fsubs
int
mov
stos
les
sub
inc
rcrb
push
bound
popa
xor
decl
inc
les
dec
or
push
pushf
out
jmp
in
or
add
add
lahf
ret
sub
mov
sbb
mov
mov
xchg
mov
adc
xchg
ss
ret
scas
mov
into
inc
shl
inc
xchg
mov
mov
shll
fs
aam
push
gs
cmpsl
and
or
xchg
in
cmpsl
and
inc
ficompl
xchg
gs
insb
js
movl
stc
out
out
mov
push
jmp
test
fwait
or
in
loope
ficompl
into
test
xchg
jno
xor
push
pop
cmc
mov
and
cwtl
sbb
xchg
and
xor
out
dec
imul
es
add
cmc
push
mov
cltd
xchg
loope
cld
or
dec
outsb
lods
fisttpl
icebp
hlt
ja
std
cmc
int
fs
repz
dec
pusha
addr16
andb
dec
and
cld
fsubrs
test
int3
mov
cmp
rol
push
cld
cmp
pusha
and
pop
jg
xor
push
iret
sbb
jg
sub
xchg
sub
xor
aaa
xor
jae
mov
sub
adc
pop
xlat
out
lods
inc
mov
push
cmc
push
in
imul
jge
jmp
rclb
sub
inc
sub
jne
xchg
adc
ss
in
mov
arpl
in
sarl
sahf
test
mov
mov
lods
cmp
adc
dec
lea
lret
jmp
and
or
out
push
stc
testl
imul
stos
movsb
int3
dec
xchg
jp
rcll
jle
idiv
and
aad
xor
pushf
mov
push
fsubl
push
insb
adc
mov
jo
mov
insb
jg
mov
lea
jmp
fcoms
jno
pop
testl
mov
test
pop
cltd
mov
daa
bound
cltd
jo
jmp
cmpsb
sahf
pop
dec
pop
dec
sub
fdivrs
cli
mov
adc
clc
mov
mov
lret
mov
dec
fimuls
mov
cmc
xchg
shll
xor
sbb
popa
jo
jg
nop
fs
das
cmp
xlat
leave
ja
xor
mov
dec
cmc
cmpsb
pushf
repnz
and
cli
dec
popa
and
mov
mov
popa
mov
lcall
mov
das
adc
mov
xor
or
rorl
mov
mov
mov
loope
out
fdiv
xchg
out
bound
cmpsl
icebp
and
xor
in
lcall
push
cmp
fisttpll
repnz
or
ljmp
pop
mov
xor
jno
cli
inc
ja
imul
movsb
xor
add
push
aad
push
test
lret
repnz
cmp
int3
cwtl
lea
enter
ljmp
jg
leave
mov
jle
sbb
mov
adc
jbe
insb
or
bound
xchg
or
inc
sub
out
cli
mov
call
lcall
stos
sbb
das
push
sbb
cmp
pop
mov
movsb
into
sub
mov
lahf
xor
out
hlt
insl
std
xor
mov
repnz
movsl
pop
mov
mov
push
mov
lahf
mov
cmp
push
ret
ds
cmc
aas
mov
or
mov
insl
lahf
movb
outsl
dec
aam
repnz
lds
mov
and
mov
mov
in
int
std
fs
jecxz
dec
xlat
and
sbb
mov
into
shrb
cmp
xor
rclb
cmp
lret
bound
cmp
push
mov
cmpsb
dec
jge
jmp
fwait
mov
pop
pop
imul
pop
cmp
popf
inc
cmc
cltd
repnz
adc
jno
and
inc
or
mov
sub
fstpt
jns
aas
into
sbb
cmp
push
packssdw
pop
push
lahf
xchg
scas
jp
aam
and
ss
sub
sub
mov
movsb
xchg
inc
aas
stc
dec
xor
ret
fwait
pop
lods
xchg
test
xor
stos
rcr
nop
lcall
repz
push
cltd
bnd
and
inc
in
cmpsb
mov
je
imul
sub
jecxz
pop
xor
dec
ja
int3
sub
jmp
scas
add
xor
dec
lea
pop
push
sbb
imul
icebp
mov
orb
fsubrs
mov
jle
push
pop
adc
and
outsl
pushf
pop
mov
sbb
pop
jb
andl
adc
xchg
addr16
inc
pop
mov
or
xor
roll
andb
push
mov
adc
inc
rcll
pusha
push
xlat
pop
mov
xchg
movsb
push
push
bnd
enter
inc
stos
sahf
loop
xor
and
repz
pop
arpl
pop
shll
pop
mov
xchg
and
inc
push
push
outsb
rcrl
outsb
rol
ja
mov
les
xchg
loope
call
cmpsb
pop
or
cmp
daa
sarl
jno
clc
sub
xor
in
jnp
mov
lcall
inc
adc
jl
adc
push
lahf
add
flds
or
dec
loopne
and
mov
adc
jg
add
icebp
push
bound
push
or
les
pusha
mov
fisttps
leave
inc
jp
add
in
das
and
mov
dec
mov
int
jne
xchg
rorb
and
daa
adc
shl
aas
notb
mov
mov
dec
lcall
pop
mov
cmp
hlt
movsb
idivl
push
sbbl
repz
pop
add
pop
hlt
cmp
lcall
test
cmpsb
mov
popf
jo
je
dec
jb
cmp
xchg
and
mov
ljmp
pop
push
outsl
add
mov
enter
pushf
jecxz
jle
xor
ret
mov
ret
movsl
push
inc
adcl
mov
je
xor
roll
jnp
sti
pop
shlb
mov
cli
popa
dec
addr16
pop
mov
mov
ds
pop
jmp
insb
aas
and
enter
pop
or
scas
mov
pushl
sbb
xlat
frstor
mov
ss
in
fstl
pop
mov
imul
mov
cwtl
push
mov
add
xor
or
mov
mov
jne
repz
jns
sub
sahf
out
gs
call
cmp
sti
orl
hlt
or
lea
fisttps
notb
call
cmp
cli
inc
lret
lret
add
inc
inc
jb
in
inc
ficompl
inc
clc
stos
pop
insb
hlt
movsb
dec
in
adc
fcmove
mov
pop
lahf
pop
mov
and
addr16
add
jl
je
lret
loope
and
sub
hlt
insl
je
cmpsl
loopne
add
aaa
push
insl
and
je
xchg
loope
xchg
cmp
dec
movsl
cltd
nop
mov
sbb
sti
aad
insb
jae
push
repnz
cmpsl
xchg
sub
mov
or
pop
xor
rclb
add
pushl
jmp
push
pop
les
bound
cwtl
hlt
sbb
adc
in
popf
and
xchg
imul
jo
inc
ja
add
sti
scas
mov
mov
test
insb
pop
inc
push
xor
iret
dec
sub
enter
lret
sub
mov
inc
push
in
mov
mov
mov
cmc
addl
int
inc
test
loope
xor
cld
mov
test
cmp
mov
pop
push
jno
jo
js
mov
fwait
xor
outsl
stc
imul
shl
das
pushf
or
mov
sbb
test
sub
push
lea
xorb
push
dec
mov
aas
aas
popf
jo
out
pop
mov
dec
pop
into
xchg
stos
xlat
add
push
and
outsl
xor
jge
in
adc
loope
test
adc
dec
ret
repz
loopne
lds
sbbb
outsb
xlat
scas
push
dec
xor
or
cmp
pusha
pop
outsl
popf
add
inc
xchg
cmc
cmp
mov
popf
or
push
adc
push
mov
lock
ss
mov
faddl
sahf
shll
xchg
mov
mov
push
repnz
int
push
stos
and
out
js
xchg
fwait
mov
and
mov
out
jmp
inc
gs
fdiv
es
in
pushl
adc
test
add
jmp
cmp
test
out
out
push
add
push
sub
les
js
sbb
dec
sbb
mov
mov
and
mov
ss
test
stos
mov
repnz
stos
aam
imul
jg
aam
out
lods
arpl
add
or
lock
mov
enter
sbb
pop
mov
xlat
sub
pop
cmp
jmp
bound
xchg
jl
adcl
xchg
jnp
mov
ljmp
push
test
jo
repz
mov
jle
insb
into
cmp
and
and
cmp
push
bnd
das
popf
jge
int
xchg
jg
mov
repz
outsb
dec
xchg
xor
jecxz
push
jg
out
push
jecxz
add
sbb
mul
and
add
mov
mov
stos
out
push
mov
dec
or
dec
mov
cmp
cmp
push
jle,pn
mov
jne
jle
rolb
adc
ja
shlb
ret
lret
or
mov
add
mov
xchg
xchg
pop
pop
imul
shr
pop
or
in
xchg
jp
lahf
movsb
dec
dec
mov
lcall
shrb
test
ret
mov
adc
loope
filds
cld
pop
add
cmp
fsubr
neg
mov
es
in
inc
mov
lret
lods
es
outsb
loop
inc
and
add
les
test
mov
dec
nopl
out
xor
jns
push
sbb
test
ljmp
push
sbb
sub
out
call
scas
jns
inc
loopne
mov
or
xchg
dec
loopne
dec
clc
xor
jmp
pop
hlt
jae
cmp
jge
int3
lcall
mov
mov
inc
jae
xchg
fwait
jb
mov
xor
call
pop
mov
mov
jecxz
dec
clc
pop
ret
xchg
addr16
in
xchg
movsl
jecxz
dec
ss
dec
insb
dec
repz
inc
push
pop
es
add
data16
cs
popa
lret
push
ret
enter
stos
jge
and
int3
loope
push
inc
rcrb
push
into
cmp
test
les
pop
xor
mov
dec
and
jp
jae
sub
data16
mov
in
enter
xor
enter
fs
fsubl
or
add
push
cwtl
xor
xchg
xchg
xor
lods
and
ja
scas
xlat
dec
andl
notl
dec
scas
cmpsb
mov
ljmp
test
shll
cmp
pop
mov
jo
add
cli
jmp
jmp
es
mov
das
push
repz
push
popa
pushf
adc
lea
ret
pop
jns
ds
test
push
and
mov
cmp
scas
xchg
lods
xchg
repz
push
and
ret
in
jno
jmp
push
test
fs
fildll
out
notl
ret
mov
ficompl
xchg
jns
shl
pop
xor
xlat
imul
cmpsb
push
fdivl
fs
jnp
imul
add
scas
and
xor
mov
dec
int3
mov
mov
add
int
xor
cs
dec
jmp
push
adc
jle
fs
loopne
jl
pop
pushf
dec
cmpsb
mov
movsb
clc
jge
add
repz
scas
js
add
mov
es
shrl
mov
push
pop
lock
insw
faddl
fildl
or
adc
leave
mov
aas
pop
mov
inc
and
adc
rcll
repnz
lods
std
test
mov
movsb
repz
or
jbe
and
cs
inc
sub
das
stc
in
out
inc
insl
jmp
lods
hlt
jne
cltd
mov
and
jnp
lds
lret
out
iret
dec
pop
mov
adc
and
pusha
cmp
mov
sub
add
fbstp
scas
int3
ss
subb
fwait
outsl
in
loopne
jnp
jmp
pop
dec
ds
push
add
push
mov
leave
shlb
cs
mov
cmpb
movsb
add
mov
jns
add
lock
lea
add
sub
pop
dec
jnp
ljmp
dec
mov
lds
fisubs
pushf
push
add
test
jbe
es
lds
out
loopne
or
ja
push
adc
ficoml
mov
and
out
jo
cmp
adc
mov
cmp
aam
push
ds
or
idivb
call
mov
mov
loope
out
sahf
dec
and
lret
dec
xorb
bound
addb
sub
roll
jg
cmp
inc
sti
inc
push
fsub
adc
dec
or
pop
fldl
loop
faddp
dec
xorb
outsb
mov
or
xor
jecxz
pop
mov
xchg
jnp
cli
out
movsl
pxor
cmpsb
push
fucomp
sbb
mov
and
mov
clc
sub
pop
hlt
sub
mov
mov
out
push
or
sbb
lcall
push
lods
hlt
adc
mov
cs
mulb
enter
movsl
mov
jo
pusha
mov
add
mov
mov
test
sub
xlat
mov
dec
call
leave
loop
push
fidivs
jno
pop
push
out
sti
mov
push
scas
loope
mov
iret
iret
inc
std
out
out
sbb
xchg
push
sbb
inc
inc
jmp
fmull
xor
xchg
jne
test
sub
mov
sub
sti
xor
add
cmp
mov
jo
stc
int
adc
sbb
enter
pop
fldt
shll
mov
add
xchg
mov
test
imul
mov
and
dec
mov
or
xor
fbld
mov
mov
lahf
sbb
popa
lret
push
push
repnz
adc
pop
outsl
out
iret
mov
push
mov
jmp
pop
cmp
cmp
lahf
lock
stc
mov
sbb
xchg
xlat
fistpl
xorl
cltd
xlat
cs
mov
mov
mov
aas
mov
push
outsb
sarl
lret
mov
aas
enter
cmp
bound
ret
lcall
into
scas
enter
imul
imul
xor
mov
mov
ffree
inc
mov
rcr
je
cmp
cwtl
mov
pop
gs
out
fwait
sbb
loop
sbb
xor
aad
xchg
dec
psubd
jecxz
push
and
and
movsb
mov
xchg
aam
test
ret
sbb
ss
dec
stc
push
xchg
icebp
icebp
ficomps
clc
out
cmp
sub
cs
sub
mov
andl
ds
or
jb
insb
cmpsl
cmc
dec
push
cmp
push
aad
sahf
mov
adc
xor
test
mov
movsl
pop
xor
fs
dec
jmp
pop
mov
adc
les
aad
enter
decl
jb
xor
aas
lock
mov
dec
aad
ret
xor
sub
xchg
sub
push
fsts
jg
ljmp
cli
xchg
mov
and
cmc
enter
or
mov
outsb
fidivl
jb
fildl
push
test
das
sbb
int3
mov
jo
sbb
dec
inc
pop
add
insb
lcall
xchg
xor
lret
xor
mov
pop
xor
insb
aaa
inc
sub
mov
sbb
push
xchg
adc
sub
in
or
clc
addr16
pop
xchg
es
xor
xchg
pop
sub
adcb
movsb
xor
sti
arpl
push
and
push
push
lds
push
xor
test
adc
pop
adc
das
shlb
pop
ret
mov
js
imul
test
insl
mov
pop
xchg
in
jge
rcrl
and
ds
jge
mov
in
popf
outsb
pop
mov
movsb
ret
add
data16
movsl
jge
or
rorl
or
enter
mov
aaa
sbb
add
test
fisttpl
sub
mov
pop
out
or
inc
and
and
jmp
adc
out
add
pop
xor
jbe
adc
lcall
pop
icebp
and
inc
int
popa
in
enter
and
lahf
push
sub
imul
pop
test
sub
stos
je
pop
loopne
or
jbe
popf
out
mov
push
adc
insl
sbb
mov
sub
mov
sbb
jae
cli
sarb
fisubl
mov
or
dec
stc
aas
fxch
sahf
movsl
sub
inc
mov
out
sbbb
adc
in
add
fisttps
mov
hlt
lahf
scas
dec
sbb
or
jo
sbb
je
lret
adc
es
dec
scas
aad
dec
fistpl
frstor
push
push
sbb
daa
and
adc
in
emms
mov
jle
iret
imul
mov
lcall
add
mov
fcmovnb
sbb
adc
fcoml
xchg
mov
sti
pop
mov
jmp
push
jmp
out
cmpb
cmpsl
in
mov
mov
sbb
mov
and
outsb
xchg
pop
mov
jns
mov
jae
sub
jne
pop
push
mov
xor
shlb
adc
lock
iret
mov
fmulp
test
xchg
idivl
movsb
mov
loop,pn
xchg
fcmovbe
scas
push
outsb
imul
in
cmp
push
push
pop
or
sub
popf
sarl
mov
loop
mov
sbb
rcrb
aad
out
push
mov
mov
lods
inc
ljmp
mov
lock
jp
push
ja
inc
inc
cli
shrl
xor
popa
in
jecxz
movsb
adcb
sub
insl
iret
roll
inc
adc
rol
bound
les
pop
add
fimull
popa
repz
jg
loop
add
adc
fwait
or
daa
or
mov
mov
adc
out
hlt
pop
or
xor
es
jbe
jae
cmp
sahf
nop
adc
dec
loopne
inc
sbbb
inc
xor
jne
xor
sahf
inc
inc
jo
mov
call
mov
mov
fisttpll
jns
push
test
jae
int3
pop
je
mov
and
shrl
cwtl
loopne
add
and
lahf
pop
cmpsl
pop
and
mov
mov
pop
jmp
nop
mov
cwtl
cvtps2pi
cmp
out
push
dec
mov
rcll
outsl
mov
test
pop
add
add
dec
xchg
mov
in
aas
lcall
mov
jb
jnp
in
dec
fwait
push
push
jl
pop
dec
sub
xor
mov
xchg
cmp
sub
xchg
cmp
int3
mov
inc
mov
iret
sub
ds
cmp
xor
pop
jbe
adc
loope
xchg
push
mov
sub
xchg
cli
pop
xchg
or
scas
arpl
xchg
or
lods
mov
lret
rcll
lret
inc
jle
jle
pop
test
sub
cli
mov
gs
xchg
js
jae
xchg
mov
pop
pop
hlt
sahf
cmpsl
mov
mov
clc
ret
in
inc
push
ficomps
xor
mov
sub
sbb
std
cmpb
add
adc
ss
push
and
xchg
push
mov
loopne
jae
jnp
push
inc
rcl
adc
cmpsl
mov
bound
cmp
cmpb
fstl
addr16
xor
mov
and
pop
dec
scas
push
jno
cmc
mov
jp
sbb
push
dec
repnz
shrb
pop
mov
dec
ja
gs
jae
dec
mov
mov
pop
int
pop
sbb
add
and
ja
and
addr16
iret
mov
les
inc
or
adc
ss
ja
das
fisubl
xchg
and
adc
mov
inc
inc
imul
cmp
or
or
xchg
and
jp
nop
pop
mov
in
adc
cmp
loope
push
jge
push
popa
cli
push
inc
cmpsl
sahf
lods
cmpsb
test
bnd
jno
xchg
xor
popf
pop
fwait
lret
mov
mov
push
sbb
hlt
data16
or
adc
repz
or
sbb
mov
and
xor
insl
pop
mov
insl
push
mov
aas
fwait
lea
clc
xchg
test
or
addb
xor
js
cmpsl
cmpsb
adc
outsb
sub
xchg
test
orb
test
mov
popa
ret
testb
xchg
pop
das
push
aas
cmp
test
and
pop
jg
neg
pop
inc
inc
mov
imul
dec
aam
pop
sahf
insl
fimull
mov
adc
xchg
mov
shl
adc
test
int3
lods
or
scas
jno
inc
jmp
and
enter
insb
les
nop
jecxz,pt
xlat
test
cmp
and
cmp
mov
cld
inc
add
mov
mov
jl
push
cmpsb
xchg
cld
int
sbb
cmp
add
ficoml
dec
rcrb
jp
and
push
or
jbe
sbb
nop
testl
pushf
dec
pop
jg
push
push
fsubrs
fnstcw
mov
ficompl
daa
insb
and
inc
lock
xchg
mov
jg
sub
clc
dec
mov
sbb
or
xchg
mov
cltd
inc
mov
addb
sbbl
cmc
push
cmpsl
jno
adcl
sbb
loope
mulb
cmp
je
cwtl
ss
or
xor
inc
add
xchg
cmpsb
or
test
jg
xor
iret
scas
jg
add
xor
mov
mov
dec
insl
or
xchg
and
mov
out
dec
and
loope
push
lods
inc
inc
pop
in
lea
dec
cmp
lods
or
pop
iret
addl
pop
jne
xor
mov
push
cwtl
jge
imul
test
xchg
fbld
shll
or
mov
int
lahf
mov
mov
les
cmpl
xchg
xchg
inc
add
jb
roll
or
pop
jae
insb
out
adc
mov
and
popl
rorl
jno
rorb
pop
cli
movsb
jle
ja
cmp
adc
inc
jo
lea
mov
shl
out
xchg
test
aam
add
popf
mov
jb
xor
add
cmp
cmovg
mov
repz
pop
jmp
cli
and
inc
inc
lods
scas
cmp
in
fnstenv
aad
or
mov
mov
aad
inc
loopne
xchg
lret
call
mov
pop
addl
mov
xchg
clc
cli
add
hlt
cmp
jns
out
pushl
pusha
xchg
cmp
or
insb
ds
mulps
jae
mov
jnp
out
js
and
or
mov
in
pop
iret
pushf
orl
jbe
mov
inc
ret
jb
mov
jbe
insl
ret
loope
pop
scas
loopne
imul
movsl
xor
das
cmpsb
mov
push
pop
cltd
in
jno
pop
test
ret
or
and
push
xor
addr16
test
fmuls
jbe
mov
loop
loop
lahf
lods
fbstp
lcall
fs
cltd
jmp
sub
lea
adc
lds
inc
push
pop
pushf
pop
out
in
pop
cmp
pusha
lret
push
icebp
ds
mov
pop
jl
xor
bound
jno
xor
and
scas
fnstcw
popa
mov
daa
cmp
dec
cmc
rcrb
cmpsb
loopne
cmp
icebp
inc
cmc
jbe
pop
cmp
jae
or
fs
iret
jle
add
add
xor
mov
icebp
es
mov
sbb
pop
push
jo
imul
add
push
test
leave
push
in
repz
cmp
cmc
nop
fsubp
dec
sbb
add
shll
test
pusha
adc
movsb
jle
sbb
clc
add
xchg
mov
pop
inc
sub
das
add
cmpsl
jge
push
out
data16
out
jns
push
in
icebp
push
shll
fiaddl
mov
mov
movsb
arpl
daa
imul
cmp
dec
jle
lcall
rdtsc
jmp
sbb
pop
xchg
test
sbb
push
or
and
cmpsb
mov
pop
pop
lahf
lahf
aaa
bound
fwait
push
aam
fldenv
ret
add
add
sub
or
or
lea
pushf
jg
aaa
mov
cli
sbb
icebp
pop
or
stos
xchg
sub
jb
sbb
addl
shrl
ss
lret
addr16
outsb
lea
dec
xor
add
js
dec
push
dec
es
jecxz
adc
mov
or
pop
or
cmpsb
in
imul
sahf
inc
pop
xor
mov
bound
enter
jg
pop
std
shrl
lods
fs
arpl
outsb
xchg
jp
into
dec
pop
pushf
scas
lahf
or
mov
cwtl
jnp
stos
xorb
pop
push
push
dec
sub
jns
add
dec
arpl
pushf
roll
push
xchg
fsubl
ja
dec
push
testl
or
inc
enter
loopne
movsbl
popa
add
and
inc
scas
sub
pop
lea
sub
ret
mov
fcoml
sub
das
imul
fadds
fdivrl
fs
pop
or
or
mov
adc
push
jecxz
in
je
mov
inc
push
pushf
sub
mov
inc
fstpl
mov
cmp
xor
cmpsb
bound
loop
dec
pop
pop
stc
add
stos
xor
jge
sub
xchg
mov
push
jne
sahf
or
leave
and
xchg
popf
inc
movaps
jo
xchg
push
or
or
xchg
cltd
push
sub
inc
aam
sarb
fmuls
or
or
mov
xor
cmp
jl
dec
jecxz
jle
jae
mov
and
aaa
scas
sub
push
imull
xchg
cmc
sbb
lret
sarb
mov
rcr
fstps
imul
jle
addr16
insl
aas
orl
std
or
push
pop
sbb
or
fcoms
mov
jns
dec
test
leave
jecxz
mov
pop
cmc
jle
notb
jecxz
int
inc
push
or
fwait
loopne
cmp
and
lret
mov
sub
and
pushf
mov
mov
sub
jecxz
dec
in
loop
scas
jb
repnz
roll
inc
data16
nop
stos
lds
inc
mov
and
popa
pop
jno
popf
popf
lcall
pop
or
push
mov
popf
hlt
les
ja
push
aad
pushf
sbb
add
and
fs
inc
arpl
rorl
add
xor
fwait
mov
enter
push
aas
ss
jecxz
jl
clc
lods
lret
mov
jns
xor
jg
xchg
adcl
inc
testb
test
dec
fnstsw
xchg
arpl
les
dec
cs
sbb
dec
insb
cmp
dec
xorl
mov
mov
nop
and
roll
mov
add
mov
sub
mov
mov
adc
mov
scas
je
or
jo
dec
sbb
pop
in
pop
adcb
ja
fwait
or
leave
popf
lods
lock
sti
dec
sbb
sbb
mov
dec
int3
xchg
mov
cmpsb
cld
movsb
mov
jp
call
hlt
js
fsubrs
sti
dec
loopne
popf
add
mov
nop
das
mov
pop
fstpt
mov
pop
jecxz
popf
test
xchg
adc
mov
jmp
cmp
scas
fwait
xor
clc
cwtl
mov
rol
xor
dec
repnz
mov
stc
or
inc
pop
or
lret
mov
jb
ficompl
pop
outsb
mov
xchg
jno
pop
xor
out
fidivrl
adc
insb
jecxz
sbb
xlat
inc
enter
push
cmp
add
sub
cmp
stc
ja
adc
cmp
call
pop
aaa
jle
sub
outsl
ret
jnp
hlt
pushf
insl
push
inc
mov
cld
jg
gs
loopne
mov
testb
xchg
sarb
pusha
xor
or
bound
popl
addr16
lcall
xchg
mov
int
sbb
lcall
addr16
jle
into
jecxz
ret
mov
arpl
leave
xor
mov
scas
sub
aas
adc
jl
test
fsubrp
outsb
inc
jae
jg
out
mov
pop
int3
push
add
push
mov
xor
xor
sub
lock
xor
jb
jnp
mov
mov
fs
roll
imul
add
into
scas
or
arpl
or
dec
xor
xor
out
inc
mov
ja
aaa
adc
jmp
lods
add
out
arpl
jnp
lret
inc
fimuls
inc
or
fdivrp
les
ljmp
xchg
sub
push
xchg
dec
filds
nop
inc
mov
mov
stos
xchg
dec
cmp
adc
cli
add
int3
adc
je
push
sub
xor
repnz
mov
out
cli
ret
out
mov
ljmp
mov
das
int3
mov
insb
xchg
test
cmp
mov
test
xchg
out
jp
out
repz
push
add
mov
mov
dec
movsb
loop
mov
sbbb
loopne
rcr
leave
xor
cmp
add
enter
xchg
push
mov
fstpt
cwtl
imull
mov
cmp
ja
jb
ss
dec
xchg
push
sti
push
call
outsl
or
jo
fidivrs
or
adc
jg
loopne
push
lcall
pop
dec
jp
jl
sahf
xor
mov
in
and
dec
popf
sbb
sar
mov
cmpsb
mull
mov
pusha
push
sub
inc
insl
push
sbb
sub
inc
jge
jno
ret
lods
lahf
popl
dec
adc
dec
jne
rcrl
cmp
pop
js
mull
sbb
mov
jns
xchg
leave
push
sbb
xchg
cmp
push
push
ja
cmc
xorl
rcll
js
mov
pop
jecxz
stos
lcall
add
sbb
lahf
add
cltd
js
imul
in
xchg
fmuls
dec
js
pop
mov
and
pop
int3
fs
movsl
int
pop
stc
fwait
aaa
in
stos
lcall
xchg
xchg
cmp
or
jne
movsb
iret
sahf
jo
add
jmp
in
aad
jno
pmulhuw
mov
push
cltd
jl
mov
jmp
jl
mov
mov
pop
mov
pusha
imul
mov
mov
cmp
es
js
mov
pop
imul
fisubs
sti
inc
inc
pusha
insl
adc
mov
ljmp
jnp
movsb
inc
push
loope
cmpsl
add
or
ret
cmp
clc
ret
mov
ja
fldenv
jecxz
pop
push
js
sub
cmp
mov
fwait
ja
sbb
sbb
push
push
sbb
dec
push
mov
sbb
dec
push
add
mov
cmp
pop
mov
scas
inc
mov
xchg
push
das
cmp
or
xchg
enter
sbb
pusha
shl
sbb
push
or
mov
mov
aad
xchg
rol
push
jbe
ret
je
ja
mov
jns
std
scas
and
imul
adc
or
icebp
pop
push
lret
leave
xlat
cmp
mov
push
lret
cmpsl
inc
cmpl
in
pop
mov
cmc
jmp
fdivr
aas
pop
iret
cmp
mov
in
jmp
cwtl
jl
lods
sbb
jbe
je
clc
pop
dec
sbb
cmp
mov
test
mov
adc
popf
inc
pop
cwtl
bound
pop
outsl
mov
cmc
icebp
sub
addl
scas
push
mov
lods
enter
mov
mov
cmp
xchg
popl
test
aaa
mov
and
push
je
push
jns
call
dec
pop
mov
sub
push
push
adc
out
ds
adcl
dec
mov
cmp
test
repz
mov
packsswb
iret
daa
les
push
dec
das
cmc
mov
fadds
mov
cmpsb
fimuls
mov
daa
popf
test
add
xor
sub
das
fwait
push
jecxz
jno
push
aam
dec
xchg
jecxz
inc
sbb
pop
jb
iret
pop
pop
stos
std
movsl
and
pushf
adc
popf
jb
sahf
mov
cltd
mov
fucomi
pop
inc
flds
adc
movsb
enter
icebp
jbe
bound
sbbb
sub
rclb
fidivrl
adc
push
mov
push
mov
sbb
xchg
ror
mov
mov
inc
xlat
daa
dec
mov
jno
mov
in
stc
lea
add
sub
outsl
mov
jns
xor
aam
movsl
jge
adc
loop
and
mov
lret
lcall
sbbb
mov
cli
or
insb
push
gs
mov
xchg
cmp
adc
mov
and
test
mov
add
add
cmc
xor
or
imul
lods
sbb
sub
int
xor
push
in
push
and
mov
jne
sbb
xchg
nop
add
jno
lea
jmp
push
aaa
sub
lret
cmp
fstpt
sbb
mov
call
in
pushf
cmp
push
ret
cwtl
ret
rclb
leave
insb
xor
js
nop
push
popf
in
adcb
mov
jb
and
lock
push
cmc
icebp
aad
pop
mov
jnp
pop
mov
sbb
pop
mov
mov
arpl
test
fimuls
adc
movsb
xchg
insl
jnp
adc
mov
call
dec
loop
xor
fimull
ret
cmpsl
divb
jbe
inc
pop
pop
mov
loopne
insl
inc
fisubl
sbb
iret
test
test
and
cld
jle
xchg
push
xchg
mov
scas
xor
mov
clc
and
mov
push
cmc
pop
insb
jo
setns
pusha
js
pop
rcrb
pop
rcrl
mov
and
js
ds
stc
pop
std
jno
mov
jno,pn
enter
push
adc
add
push
ljmp
push
lret
shll
insl
push
adc
arpl
mov
pushf
jo
mov
leave
div
ret
shll
push
lret
or
add
cmpsl
fildl
ds
out
jnp
pop
popf
shrl
call
lret
dec
fmull
and
push
test
mov
loope
xor
mov
arpl
cmp
push
xadd
push
dec
inc
shrl
xchg
aas
je
add
movsl
xor
add
xlat
or
mov
xchg
dec
cmp
xor
adc
inc
add
mov
in
fsubs
and
mov
dec
je
push
cmp
sbb
incl
xor
mov
jno
popa
out
loope
jno
lods
aaa
js
adc
pop
in
ret
pop
xchg
sbb
comiss
mov
mov
das
lahf
icebp
imul
adc
cmpsb
sub
jecxz
add
pop
icebp
pop
stc
adc
mov
push
adc
test
mov
rcll
sub
cmp
sub
xchg
xchg
push
push
icebp
je
or
jmp
mov
xchg
arpl
mov
pop
push
or
fs
int3
aas
pop
jbe
test
inc
sbb
mov
push
push
fldt
inc
jecxz
daa
or
negb
jmp
cmp
rcrb
les
inc
scas
movsb
cmp
add
push
inc
jmp
jle
test
inc
scas
mov
add
popa
xor
fsubr
and
iret
xor
std
xor
test
cmpsl
addr16
xchg
or
into
cmp
xchg
and
sbb
les
xchg
xchg
sub
dec
push
jl
jns
test
mov
loop
dec
enter
xchg
inc
rcrb
push
in
pop
xchg
inc
jb
mov
adc
mov
lret
add
out
or
add
and
imulb
fimull
scas
push
out
addb
add
mov
and
hlt
ret
daa
ds
addr16
push
dec
cli
add
cs
lcall
lret
sti
jl
fwait
mov
das
mov
add
fidivl
push
negl
push
inc
or
adc
aas
insl
sub
mov
xlat
int3
ror
xchg
loope
lahf
mov
sub
mov
je
cmp
fidivrl
push
imul
aad
and
sbb
inc
stc
test
frstor
xorb
sbb
stc
add
in
lods
sti
ja
jge
dec
sbb
pusha
imul
sub
jns
mov
lds
push
idiv
mov
bnd
jo
jecxz
das
or
movsl
xchg
or
pop
mov
test
mov
mov
push
js
mov
gs
mov
aam
pop
mov
xor
ret
add
cmc
leave
les
mov
lahf
pop
mov
jo
outsl
ja
mov
push
pop
xor
adc
push
mov
lods
or
fildl
push
mov
sub
and
sbb
daa
pop
sbb
into
cmp
cltd
cwtl
inc
ja
jne
orl
sbb
fs
cmpsl
inc
into
mov
xchg
int3
pop
jl
data16
mov
repnz
jle
dec
psubsw
cmp
pop
mov
xchg
jo
push
cwtl
inc
icebp
scas
xchg
ja
or
dec
pop
cmpsl
andl
insl
and
das
lods
popf
enter
and
mov
test
enter
xor
pushl
lcall
dec
ss
out
roll
adc
mov
jnp
in
and
mov
mov
int3
insb
pop
rorl
mov
xor
mov
push
and
inc
jo
es
mov
xchg
add
bound
xchg
jo
inc
es
sbb
enter
mov
movsb
cmp
cmp
add
add
or
fldt
xchg
pusha
mov
lcall
pop
pop
dec
ror
cmp
and
mov
mov
mov
sahf
inc
sbb
bound
sbb
js
pusha
sti
andb
xchg
push
gs
push
push
jg
cmc
sahf
inc
repz
lods
mov
cmc
push
cmp
movsl
nop
fisubrl
bswap
not
cwtl
pop
into
cmp
mov
outsl
cmp
dec
movsb
mov
ja
and
repnz
iret
adc
mov
test
jecxz
iret
xchg
daa
cmp
add
and
fdivrs
lcall
mov
cmpsb
jge
xor
mov
adc
dec
fsubl
cmpl
insb
arpl
add
insb
cmp
fnstcw
out
out
jae
cmp
cmp
inc
pop
pushf
push
les
inc
cmp
js
pop
outsl
ror
fdiv
sar
adc
pop
dec
stos
mov
shlb
and
xchg
lret
je
into
dec
push
inc
mov
pop
adc
mov
jge
iret
jno
popf
sub
sarl
mov
push
inc
cmp
mov
loopne
pop
or
in
int3
pusha
mov
mov
push
xchg
mov
sbb
pop
mov
out
adc
fldpi
adc
sub
xchg
test
push
imul
xlat
and
jo
pop
mov
mov
xor
ror
jns
mov
ds
jns
cli
jns
dec
push
outsl
subl
mov
cmp
roll
in
fbld
test
jb
movsb
aaa
cmpsl
xchg
outsb
add
push
and
enter
test
sti
mov
cld
and
push
xor
or
scas
or
arpl
pop
push
xchg
out
mov
repnz
jecxz
xor
jge
and
test
movsb
fsubs
into
xor
pop
leavew
aas
cmp
mov
jo
mov
into
xchg
mov
adc
insl
pop
lahf
xor
pop
jbe
pusha
add
movsl
pop
repnz
jbe
test
lahf
or
cmpb
pop
sbb
pop
xor
mov
movsl
cmp
pop
aam
jmp
fdivrl
sbb
push
mov
xor
cli
scas
push
cmp
out
adc
fwait
js
out
and
cmpsl
scas
ret
les
add
data16
mulb
jecxz
shll
ret
cmpsb
mov
arpl
dec
sbb
jmp
jg
sub
addl
ret
outsb
push
mov
cld
orl
xchg
movsl
adc
gs
arpl
fsubrl
aad
hlt
xor
push
outsl
pop
or
cmp
outsb
outsl
sub
lret
call
and
cmp
xchg
pusha
aam
in
orb
pop
mov
inc
cltd
mov
sub
fs
pop
pusha
and
sub
adc
hlt
popf
stos
inc
dec
and
cwtl
adc
sub
inc
lock
sbb
sub
pop
jbe
test
mov
push
popf
outsl
les
rcl
test
pop
lds
ret
call
jo
cltd
das
insb
rorb
and
mov
add
aas
ss
in
fistpll
jb
repnz
sbb
pop
sbb
pop
pop
jg
ud0
or
rcll
mov
mov
mov
repnz
dec
fs
pop
xchg
inc
mov
sub
fidivs
sub
inc
ds
test
jle
mov
sub
movsl
cmpsb
mov
ds
int3
aaa
popl
jo
sbb
call
aaa
fdivp
sbb
shll
xchg
std
pop
dec
jb
mov
mov
push
inc
dec
sahf
pop
imul
rolb
mov
xchg
icebp
dec
gs
arpl
jmp
in
imul
ljmp
sbb
and
movsb
sub
jns
xor
pop
clc
push
jno
lret
or
outsl
cmp
push
into
rolb
mov
push
inc
adc
adc
mov
inc
addr16
test
test
jge
test
popf
fimull
pop
cpuid
push
add
arpl
lods
cltd
bound
xchg
sbb
mov
sub
add
aas
js
adc
sbb
push
xor
in
enter
or
mov
imul
xor
mov
add
mov
out
jno
mov
and
fdivs
ljmp
outsb
fxch
xchg
lods
inc
movsl
add
mov
loop
xlat
mov
dec
dec
rorb
repnz
mov
lahf
mov
mov
fisubs
mov
jno
and
jb
mov
flds
je
enter
jnp
push
ss
gs
push
add
mov
shr
mov
stc
sti
scas
out
mov
std
cld
jne
jle
in
stos
fnsave
add
cmpsl
stos
in
mov
repnz
cmp
jl
xchg
mov
shr
je
and
or
les
scas
shl
jne
ja
sbb
dec
out
clc
sub
repz
in
jb
xor
insl
inc
inc
stos
inc
mov
sti
cli
jbe
orl
push
mov
insb
pop
outsb
sahf
aad
addr16
mov
push
and
push
fs
cmpsl
rol
pop
cmp
insb
enter
lret
ljmp
xchg
push
mov
push
and
lea
arpl
leave
rclb
scas
xchg
or
mov
call
cwtl
cmc
jg
sub
ret
sbb
jecxz
jecxz
add
aad
and
mov
sbb
sub
lahf
lret
pop
dec
out
test
fildll
fistpll
xchg
push
jnp
pop
je
pop
and
mov
push
mov
push
insl
and
js
ja
jl
call
in
cmc
sub
out
inc
dec
mov
dec
add
fdivs
add
imul
mov
pusha
jle
mov
aam
push
dec
test
adc
push
jb
pop
outsb
das
dec
xchg
xchg
shl
xchg
mov
adc
cld
jl
xchg
mov
test
cmp
arpl
sub
test
ficomps
scas
popf
scas
mov
pop
aad
sub
or
dec
mov
cmp
cmpsb
stos
push
pmuludq
jne
mov
mov
push
sbb
or
adc
rcll
mov
pop
into
leave
sub
adc
outsl
loop
mov
inc
in
pop
dec
sbb
flds
mov
pop
shrl
pop
pop
jge
aam
cld
hlt
cmpsl
xorps
cs
add
inc
mov
dec
movsb
pop
mov
inc
cs
adc
lahf
cwtl
hlt
or
test
imul
push
das
xor
push
repz
and
fldcw
xlat
dec
rorb
sbb
pop
ret
lods
out
add
imul
cmpsl
jg
fildl
cmp
xchg
mov
imul
andl
xor
nop
dec
loop
faddl
out
movsl
int
inc
push
stos
cmpsb
jg
outsl
jmp
inc
pop
dec
cwtl
in
call
ja
cmp
sub
mov
test
loopne
jae
sbb
cmpsl
pusha
push
test
lret
mov
lahf
jge
pop
popf
divl
cmpsl
lods
data16
sbb
movsl
data16
cmpsl
lret
pop
in
in
jnp
subl
mov
push
ret
inc
mov
jle
mov
cltd
mov
jae
xchg
xchg
daa
xor
sub
js
std
mov
fs
rorl
xlat
movsl
fnstsw
jns
les
push
faddl
mov
xchg
pop
mov
jns
dec
mov
scas
cmp
jle
mov
or
stos
lods
out
cmp
xchg
lcall
cmpl
mov
inc
pop
inc
loope
mov
lahf
iret
hlt
xchg
mov
popf
mov
cwtl
gs
dec
test
jp
xor
add
popf
or
dec
cmpps
roll
cli
mov
inc
test
or
jmp
sub
fidivs
mov
adc
test
mov
cmp
mov
test
mov
xchg
xor
stos
add
or
lods
bound
push
daa
dec
je
std
repnz
xchg
lahf
arpl
dec
into
scas
gs
inc
cld
pusha
popa
mov
dec
lds
clc
mov
daa
adc
loope
add
or
out
xchg
aaa
aaa
inc
fbld
xchg
les
adc
rcll
jle
jns
lahf
push
xchg
in
ror
fnstsw
mov
mov
int
push
adc
ja
or
adc
iret
cmp
iret
rcrl
shrb
fnstsw
popf
loope
les
pop
dec
pop
sub
in
mov
or
xor
pop
mov
adc
imul
mov
rcll
dec
dec
ret
sub
or
loope
fsubl
ja
stos
clts
stc
fwait
sbb
pop
add
mov
xchg
sub
mov
xor
xchg
push
ds
out
pop
aam
iret
mov
and
mov
pop
hlt
jae
xlat
mov
lods
or
mov
test
sbb
sbb
testl
loopne
mov
popf
push
cmp
mov
mov
outsl
cld
sbb
jecxz
into
lock
data16
cmp
lods
out
aam
push
mov
sti
jnp
sbb
sub
dec
mov
pop
xor
and
or
sbb
ret
rclb
das
fadds
mov
das
cmc
mov
dec
mov
clc
jnp
sbb
mov
in
add
push
sbb
adc
and
mov
popf
pcmpeqd
fldenv
jmp
push
aam
sub
cmpsb
mov
mov
pushf
inc
xchg
jg
inc
lods
inc
testb
mov
push
mov
loop
fistpll
mov
mov
xchg
subl
fstpl
lcall
or
icebp
hlt
mov
ljmp
shrb
adc
dec
fldenv
mov
inc
mov
mov
mov
xchg
pop
pop
sub
inc
sub
lea
pop
das
inc
xchg
in
loopne
loopne
adc
add
loope
sbb
scas
xchg
int3
lahf
adc
cld
imul
aad
lahf
jle
in
ljmp
push
xor
fsubs
xor
lds
mov
mov
ret
hlt
aam
les
ja
jns
jle
adc
aas
psubd
or
push
insl
mov
sbb
cmp
aam
mov
iret
loop
cs
fisubrl
outsb
mov
mov
in
add
cmp
cmp
ja
scas
jp
pop
pusha
in
push
or
xor
or
or
adc
aaa
adc
jmp
push
std
and
inc
lea
cmp
inc
fs
cmpsl
in
push
jge
shll
or
ds
and
mov
lret
mov
aad
lea
xchg
push
pop
cwtl
inc
hlt
inc
fcomp
das
jg
push
cltd
jecxz
aam
sub
outsb
mov
std
ret
xor
push
add
jmp
into
sbb
cld
push
or
loopne
adc
popf
clc
pushf
and
inc
test
mov
sahf
mov
mov
xchg
lret
inc
mov
jae
lea
pop
jo
xchg
mov
add
mov
push
or
enter
sbb
jb
cltd
or
add
add
push
push
mov
lret
gs
and
aaa
loope
mov
mov
mov
and
dec
ret
inc
ret
popf
les
popa
and
movsb
fiadds
sub
inc
sti
repnz
sahf
xchg
push
jg
ljmp
cli
les
pop
jp
cmp
mov
outsl
xchg
ds
cli
dec
sarb
das
jecxz
mov
cld
fcompl
and
push
into
test
lds
imul
add
mov
mov
cmp
dec
ds
push
and
jne
mov
je
stos
or
clc
sub
jns
aas
pop
out
imul
jbe
sub
mov
jns
jge
sbb
out
push
adcb
cwtl
fwait
mov
mov
mov
or
jo
es
fsubrl
jmp
cmp
adcb
das
or
fistpll
cmp
or
test
inc
es
fwait
jle
pop
and
add
and
cmp
pop
aam
jle
outsb
into
fmuls
test
xchg
fmuls
push
imul
pop
inc
xor
cmp
cli
push
ljmp
nop
loope
adcb
jo
xor
push
fs
addr16
dec
cmp
mov
ficomps
dec
idivb
cmc
dec
mov
cmp
ret
xor
in
adc
sbb
cmp
xchg
add
push
dec
xlat
andb
outsl
push
dec
mov
mov
cmp
mov
stos
in
mov
cmp
jbe
cmp
mov
addr16
arpl
aas
mov
xchg
sub
cmpsl
nop
cli
adc
pop
cmp
stos
dec
in
push
push
shl
les
imul
push
in
aam
pop
jb
mov
sbb
bound
adc
jns
push
mov
add
std
scas
out
cwtl
out
out
cmp
push
xor
xor
leave
sub
jle
push
ret
movsb
push
cs
ja
popa
inc
sub
sbbl
mov
and
pushf
xchg
fmull
cmp
adc
popa
sub
jmp
andb
inc
cmpsb
ljmp
xor
lret
add
jp
pop
mov
sbb
int3
mov
jb
mov
mov
je
scas
imul
scas
sub
or
xchg
mov
jle
sub
arpl
push
dec
pop
lret
add
ss
fldenv
mov
and
cmc
push
les
test
push
jp
cmp
js
cmp
dec
aam
stos
aas
push
add
stos
pushf
or
sub
pop
adc
lods
mov
xchg
mov
mov
mov
movsl
adc
lahf
cmpsl
loop
std
scas
outsl
iret
xor
leave
xorb
loop
push
jnp
bound
or
xlat
sub
dec
das
mov
jecxz
mov
scas
sbb
cwtl
and
xchg
loopne
imul
ret
ja
add
xchg
and
sub
push
sub
add
in
mov
lods
xor
pop
adc
push
mov
or
or
scas
and
test
push
out
add
sub
sub
xchg
adc
movsl
jno
pusha
mov
lods
xchg
and
pop
insb
cld
push
push
push
fcmovbe
cwtl
in
pop
mov
fstl
push
pusha
dec
pop
mov
iret
aam
xchg
insl
cltd
jne
push
shl
adc
fs
jge
test
push
pop
std
mov
leave
mov
orl
aas
xor
leave
sahf
aas
cwtl
pop
shll
jnp
push
sub
xchg
jge
dec
xchg
shlb
add
pop
xor
sbb
mov
loop
mov
cmc
fs
add
sbb
pop
inc
outsl
jge
xor
and
jg
aaa
mov
pop
and
sbb
adc
cmp
jbe
mov
xor
lock
mov
jl
scas
mov
testl
cli
mov
lahf
shrl
xchg
ja
into
jb
mov
bound
loop
jbe
in
cli
inc
lods
iret
stos
jno
sahf
jno
jbe
cmp
std
out
pop
mov
mov
ret
pop
inc
scas
add
and
fidivl
inc
push
inc
data16
or
inc
adc
fcomp
cmp
xchg
lahf
jb
xlat
push
insl
pop
push
push
fcoms
popf
adc
push
cs
arpl
sahf
ljmp
cmpsl
jle
jl
sbb
pop
in
pop
xchg
dec
inc
dec
inc
dec
add
push
lret
mov
mov
outsl
movsl
adc
pop
clc
xor
xor
frstor
cmp
add
push
jne
adc
ss
mov
cmp
je
cmpsl
dec
aaa
xor
sahf
dec
sbb
adc
dec
or
les
sub
ljmp
popf
cld
repz
daa
mov
lahf
lods
pop
fldl
or
mov
call
int3
ss
subl
sarb
fisttpll
andb
xor
dec
sbb
mov
push
insl
mov
in
pop
xchg
imul
repnz
int
testb
jno
aad
shl
sbb
push
jmp
out
test
push
or
rcll
jb
push
jg
inc
sbb
xchg
repz
or
roll
cmp
adc
cmp
pop
pop
xchg
test
ss
pusha
out
xlat
fsubrp
test
movsb
mov
lret
ret
ja
pop
push
jge
adc
aam
or
test
cltd
jne
pushf
add
js
sbb
pop
mov
pop
jno
test
out
mov
fisubs
rcrl
cmpb
jl
mov
mov
dec
jg
sahf
repz
xlat
mov
mov
rcrl
pop
mov
movsl
sti
test
movsb
inc
inc
int
fwait
mov
out
lret
fidivrs
sub
mov
repnz
jns
xchg
mov
testb
testl
xor
push
jle
stos
jmp
cmp
sub
mov
and
add
add
jle
inc
out
xchg
dec
je
mov
lcall
ds
pusha
cmpsl
aas
push
ljmp
and
in
dec
sbb
out
sbb
or
pop
cltd
pop
sub
adc
sbb
pop
inc
es
mov
int
iret
icebp
std
mov
das
push
outsl
jnp
mov
test
cmp
inc
cmp
cmpsb
dec
jo
pop
lahf
push
xor
push
mov
mov
mov
mov
fidivrs
xchg
inc
test
bnd
jnp
arpl
rorb
xor
aam
xor
mov
cmp
int
pop
pop
fbstp
add
popa
sub
pop
add
cmp
fs
mov
mov
cwtl
lock
cmpsl
cld
push
inc
pop
clc
out
mov
ds
flds
in
shrb
sub
sbb
test
out
out
jmp
xor
pop
clc
xor
xchg
jmp
leave
fdivs
push
mov
push
push
xchg
lcall
bnd
fnstsw
cmp
clc
clc
sub
and
pop
imul
adc
lods
jecxz
cmp
into
pusha
push
fbld
repnz
lds
clc
lahf
adc
sub
jno
push
cmp
mov
ret
and
mov
lret
lret
inc
push
aam
xchg
es
mov
mov
dec
cmp
mov
mov
nop
xor
cli
cmp
test
adcl
mov
stos
pop
push
shll
jnp
pop
fwait
jne
sub
mov
mov
cmp
ret
mov
leave
rcl
mov
fdivp
sub
sahf
add
mov
mov
das
lds
cmp
mov
cmpsb
lods
mov
add
icebp
scas
mov
cmpsl
inc
inc
in
int3
test
xchg
mov
and
mov
fcoml
xor
xor
xchg
dec
and
stc
push
or
jge
popf
mov
mov
and
sbb
rcrl
imul
push
mov
add
push
dec
xor
orl
inc
pop
and
loope
icebp
inc
in
imul
xchg
xchg
std
sbb
test
and
xor
mov
cltd
aad
mov
sbb
mov
cli
sbb
jno
imul
inc
xchg
ljmp
ret
aam
dec
stc
mov
js
mov
arpl
cli
mov
ror
aad
sub
frstor
mov
jnp
test
xchg
sub
es
pop
insb
call
test
adc
mov
adc
mov
mov
mov
stc
xor
movntq
sbb
xor
nop
sbb
add
push
scas
pop
ret
jae
jno
lods
lret
ljmp
or
mov
pop
cmpsl
in
stos
mov
call
xor
adc
test
cmpsb
lahf
pusha
push
pop
mov
sti
das
imul
imul
pop
sub
pavgb
jecxz
enter
insb
adc
int3
loope
imul
dec
jp
test
test
movsl
int
lret
filds
pusha
lcall
clc
mov
fcomip
adc
ljmp
inc
dec
pop
mov
fimuls
mov
push
iret
cmpsl
movsl
dec
or
push
jb
lods
inc
js
das
or
loope
xor
mov
shrl
sub
lret
add
jecxz
or
lret
icebp
aaa
lret
cmpsb
pop
dec
pop
pop
add
mov
sub
and
mov
dec
outsb
push
adc
and
daa
or
stos
roll
jno
arpl
mov
adc
pop
je
outsb
in
aad
daa
mov
not
xor
das
nop
sub
ds
mov
jg
push
cld
cmp
daa
clc
inc
pop
jmp
pop
or
xor
pushf
dec
and
pop
inc
call
fstpt
dec
in
sub
add
mov
xor
adc
xor
and
leave
lret
cmp
fdivrl
sbb
divl
fidivrs
ror
and
push
pushf
lret
pop
pop
fnstenv
or
aad
hlt
out
add
jno
fnstcw
mov
sub
jb
movsb
jae
mov
jns
or
xor
mov
arpl
push
icebp
fisubs
scas
add
dec
add
push
sbb
jnp
std
jmp
scas
mov
nop
lret
dec
xor
ret
cwtl
and
mov
cmc
pop
adc
xor
and
mov
xchg
movsb
mov
push
inc
nop
jp
cwtl
fstl
cwtl
insb
fdivs
xor
adc
imul
insb
mov
cli
jp
popa
rolb
sub
cltd
in
aas
leave
mov
or
bound
fsubl
pop
pop
rorb
sti
test
push
jecxz
cmc
jge
sahf
insl
ljmp
int3
push
jae
xor
jl
mov
cmp
repnz
movsl
or
filds
inc
sbb
push
jbe
pop
sub
mov
jb
or
mov
mov
lret
cli
ds
mov
and
fadds
out
imul
std
cmp
cmp
inc
aam
outsl
dec
stc
fs
jle,pn
lock
or
icebp
mov
push
xor
jmp
outsb
xor
cwtl
dec
shlb
cmp
jecxz
cs
dec
mov
dec
pop
mov
je
outsb
mov
mov
in
pop
subb
xchg
popa
mov
xchg
xchg
out
mov
pop
lret
dec
stc
push
ds
loopne
mov
ljmp
mov
mov
and
mov
rcrb
sbb
jmp
xchg
adc
adc
add
popa
xor
adc
push
gs
adc
dec
das
pushf
scas
xchg
ret
jmp
mov
dec
mov
popf
out
inc
sub
in
mov
dec
ret
cmp
dec
sbb
xchg
xor
sbb
in
ja
jae
mov
pushl
or
in
cmp
fcmovne
jae
xlat
and
mov
cmpsb
movsb
lahf
pop
cmpsl
xchg
shll
push
je
cmp
cmp
in
rclb
sbb
outsl
iret
jb
das
xchg
adc
hlt
xor
fcmovu
xchg
iret
aam
insb
xchg
in
aad
xor
lock
neg
and
and
xor
push
push
test
std
and
cmp
hlt
or
outsb
cld
lret
mov
andb
icebp
repnz
mov
push
xchg
loopne
outsl
jnp
push
jo
pop
mov
cmp
rcll
lock
imul
aas
cld
aam
lahf
fdivl
mov
push
movsl
xchg
pop
jae
mov
mov
inc
inc
sbb
roll
xchg
add
stc
jmp
fcomip
ret
imul
jle
pop
movsb
test
cmp
mov
dec
lcall
sbb
add
std
arpl
cmp
mov
dec
dec
cmp
popa
jo
xchg
adc
mov
test
stos
ret
shl
mov
and
mov
pandn
les
jecxz
xchg
add
push
push
mov
adc
test
fwait
sbb
pop
movsl
insb
mov
xchg
movl
pusha
loop
pop
ds
mov
add
push
sbb
je
mov
mov
push
loope
inc
cmp
and
out
mov
mov
jecxz
cmp
mov
fimuls
ret
into
js
push
add
adc
sbb
iret
movsb
add
inc
mov
ss
outsb
mov
mov
lds
cmp
pop
test
jns
shll
jecxz
inc
testl
mov
xlat
insb
add
out
cmp
ja
push
jg
jno
add
lret
sbb
pop
jb
mov
loop
sub
xchg
call
push
sbb
imul
xor
insl
data16
push
ja
inc
arpl
sarl
and
in
aaa
movsb
push
loope
pop
mov
loope
mov
jmp
incb
jne
jg
dec
mov
outsl
dec
push
xor
mov
popa
hlt
sbb
arpl
lds
icebp
mov
in
pop
sub
out
sub
popw
lret
test
roll
in
std
rorl
das
inc
mov
pop
push
stos
fwait
mov
mov
adc
out
mov
pop
rclb
into
rcrl
mov
std
sub
or
jb
jge
mov
mov
mov
push
mov
and
and
icebp
xor
xor
lods
add
into
cmp
mov
jmp
out
sbb
pop
test
repz
and
aam
and
xchg
cmp
fidivl
push
cmp
mov
jl
xchg
dec
push
fs
cmp
loopne
mov
sbb
xchg
xchg
es
xor
jo
enter
dec
cmpsb
push
and
out
mov
push
out
mov
enter
popf
dec
cld
mov
fcmove
adc
jb
cltd
int
out
adc
es
dec
and
jmp
mov
jl
std
ss
bound
pop
pop
xor
mov
mov
pop
push
lods
mov
add
loop
pusha
push
push
sub
and
or
jno
pusha
aas
mov
lahf
fs
aam
imul
adc
stos
mov
pop
sbb
fsts
adc
xor
cwtl
fs
push
cmc
xchg
push
addb
arpl
pop
and
std
nop
mov
jb
and
and
shlb
xor
outsb
push
sub
out
jb
push
imul
cmp
movsb
mov
fisttps
add
pop
and
sub
cltd
xor
imul
mov
int3
xor
aam
das
adc
add
cmpsb
push
cmp
mov
adc
sti
dec
adcb
and
pop
faddl
icebp
dec
pop
jge
lret
aas
imulb
mov
jo
mov
sub
inc
stos
jns
push
sub
jno
int
jbe
push
mov
mov
inc
scas
rcl
and
cwtl
adc
or
pop
cmp
aas
mov
fs
push
xchg
sub
sbbl
imul
in
dec
movsl
dec
jns
in
or
dec
dec
xchg
pop
jp
cmpl
fs
xor
movsb
fldenv
loopne
lret
insl
movsb
push
into
pop
dec
addr16
aad
cs
adc
xor
add
pop
std
pop
jns
movsb
sub
iret
test
repz
jp
and
sub
sbb
mov
xchg
fistpl
fbld
je
pop
les
jl
ljmp
ficoml
into
cmp
in
push
or
dec
jbe
push
mov
es
mov
cmp
ja
mov
hlt
lahf
sub
pop
pop
test
in
sbb
outsb
xchg
je
cmp
inc
mov
push
or
aas
lea
mov
pop
negl
insb
push
scas
jg
cli
movsl
xchg
hlt
xchg
jecxz
std
inc
mov
dec
lret
lret
add
mov
fsub
insl
iret
cmp
or
fs
cmp
xchg
daa
jg
mov
xor
gs
sub
lods
mov
ja
mov
inc
add
dec
ret
or
cs
fwait
and
cmc
mov
inc
push
jp
inc
push
mov
clc
imul
out
pop
jmp
dec
clc
inc
mov
inc
jo
inc
push
bound
aas
mov
imul
pop
ljmp
mov
movsb
mov
pop
daa
xlat
out
xchg
mov
in
cmpsl
xchg
push
dec
mov
loop
mov
push
jne
kxorw
lods
imul
mov
and
cmpsb
shl
stos
nop
pop
insl
sub
aad
pcmpeqw
shr
dec
movsb
cmpsb
pushf
out
fsubp
and
std
int3
cmpsb
adc
mov
pop
mov
outsl
mov
imul
movsb
into
icebp
lret
push
dec
mov
cli
sbb
cmp
inc
push
xchg
loop
jae
xor
pop
jmp
mov
mov
aas
mov
cmpsb
push
sarl
out
xor
push
sahf
sbb
mov
js
dec
insl
rcll
fbstp
or
cmp
dec
or
xor
ds
popf
push
arpl
mov
push
sbb
push
lea
pop
sub
cmp
insl
imul
aam
out
inc
jns
sbb
add
inc
mov
rcr
jbe
jg
aas
in
repnz
mov
cld
sbb
sbb
adc
cltd
ret
lea
sbb
add
mov
push
dec
mov
out
pop
les
pop
nop
jge
inc
insb
fildll
or
add
jmp
xchg
pop
cs
repnz
int3
or
dec
xor
testl
sub
or
inc
xchg
test
fsubrl
and
sbb
push
add
inc
xchg
mov
dec
cmc
xchg
loopne
dec
push
in
testb
lret
pop
push
in
shl
push
ret
lcall
jl
dec
int
xchg
and
dec
pop
mov
inc
pushf
movsl
dec
push
loop
lea
sbb
and
mov
ds
add
xchg
sub
mov
push
mov
mov
jg
fisubrs
mov
pop
jl
mov
or
dec
push
cmp
scas
shl
pusha
and
mov
mov
fcmovu
jbe
push
jbe
push
call
fptan
out
push
mov
idivl
pop
sbb
es
or
arpl
lds
mov
loop
dec
in
cmp
fldt
xlat
test
sbb
xchg
movsb
bound
shll
mov
jne
xlat
fmull
cs
mov
out
into
xor
test
mov
push
sub
push
sub
adc
jmp
xchg
imul
xlat
dec
call
jmp
repz
sbb
lock
adc
cmp
nop
mov
adc
xor
stc
fsubrp
fldenv
fwait
add
mov
ret
sbb
mov
sub
imul
jae
xchg
and
stos
in
fs
fisubs
movsl
ljmp
jmp
or
mov
push
push
clc
cmp
pop
push
into
inc
dec
pop
mov
mulb
and
or
pop
mov
cld
cwtl
jl
cltd
mov
addr16
mov
sahf
shlb
inc
notb
cmpsl
push
in
testb
insl
int3
dec
icebp
jmp
in
fimuls
cmp
movb
mov
lods
mov
pop
rorl
out
and
pop
hlt
sti
or
fstps
jg
sarb
xchg
adc
stos
mov
mov
adc
jmp
add
icebp
and
hlt
lret
mov
push
adc
mov
lret
out
aaa
fsubrl
aas
cmp
and
ret
xchg
mov
sub
adc
or
xlat
mov
aad
lods
inc
inc
or
xchg
sbb
popa
mov
popa
loop
jae
mov
cmpsb
sbb
out
xor
push
mov
jnp
or
or
xor
addr16
loop
adc
pop
add
pop
shlw
andb
add
lods
adc
dec
dec
enter
pop
out
stos
aam
popf
pop
cwtl
addl
jle
das
push
aaa
dec
add
mov
dec
fildll
int
lods
data16
inc
lock
out
mov
xor
push
xchg
xchg
cwtl
dec
adc
jle
push
leave
data16
xorl
push
push
imul
mov
or
loopne
dec
sub
sbb
push
pop
cmc
stos
ret
and
add
jnp
loopne
ss
sbb
pusha
add
mov
fwait
sahf
xchg
or
mov
sar
les
cmp
shrl
cmp
rorb
lea
je
in
mov
xchg
mov
ljmp
cld
jge
aas
push
test
aaa
dec
jae
sbb
xchg
mov
js
inc
sub
mov
pusha
ds
xchg
push
in
je
and
push
mov
mov
xchg
push
rcl
adc
add
inc
jl
inc
testb
xchg
js
sbbb
ret
loope
lods
or
orb
add
jae
inc
rorl
push
lahf
ret
pop
and
out
mov
es
fmuls
jns
iret
push
clc
fwait
cmp
hlt
int
inc
popf
inc
pusha
cmp
jl
rorl
adc
fldt
bound
lea
lods
shrd
mov
lods
mov
pop
sbb
daa
mov
mov
aam
push
popf
std
pop
pop
xchg
repnz
jo
jmp
lret
cltd
mov
iret
in
cmpsb
ljmp
pop
insl
inc
mov
dec
rep
rcrb
inc
pop
setns
leave
adc
das
scas
dec
das
sbb
dec
xor
xchg
bound
bound
mov
fwait
bound
add
cmp
in
xchg
fistps
clc
xor
or
mov
add
sub
dec
call
inc
mov
sub
push
mov
icebp
cmp
cli
test
xchg
or
pxor
jg
les
leave
stos
xchg
ret
fsts
sub
mov
jg
mov
xchg
js
mov
rolb
fsubs
sub
data16
andl
adc
repnz
fistpl
add
adc
arpl
jae
or
lret
orl
mov
and
jb
add
mov
mov
adc
mov
sbb
mov
sub
fisttpl
jmp
inc
mov
and
aaa
subl
in
in
inc
sbb
pop
add
out
ds
adc
loopne
or
nop
mov
es
lods
mov
xor
mov
pusha
or
mov
roll
jb
xlat
movsl
dec
xchg
test
jl
js
lcall
xchg
jle
dec
nop
mov
dec
mov
dec
dec
inc
or
mov
and
mov
faddl
add
dec
shrb
popa
xchg
push
in
xor
repz
cld
sub
out
mov
repz
rclb
in
cmp
or
xlat
dec
into
lea
incl
stos
fmuls
xor
fwait
into
ss
cltd
dec
lea
int
xor
enter
jmp
int
pop
imul
rol
mov
mov
stos
pusha
mov
xor
cmpsl
jno
and
mov
mov
mov
push
in
add
sub
lds
jge
and
xchg
push
cmp
aad
sub
dec
xchg
fs
jp
ljmp
stos
outsb
mov
iret
or
fstpt
out
fistps
push
fxch
adc
mov
aam
mov
sbb
int3
dec
cmp
inc
and
lret
repz
and
fwait
mov
test
leave
sub
jo
daa
sti
fistpl
out
insb
push
mov
mov
adc
xchg
adc
jo
jmp
push
outsb
dec
lods
push
mov
mov
in
sub
adc
leave
and
arpl
test
pop
cltd
pop
add
mov
fadds
adc
mov
mov
fcompl
and
out
das
mov
test
test
test
adc
mov
popf
pop
jl
fbld
in
gs
loopne
mov
cmpsb
jnp
cld
and
pusha
mov
pop
push
dec
sub
mov
push
jle
mov
pop
aas
outsb
pop
lds
jmp
xor
lahf
out
mov
mov
lods
jne
cmp
cld
rcrb
addr16
imull
sub
call
ficoml
inc
xchg
inc
out
call
shrl
and
stc
and
and
mov
pushf
mov
jno
into
add
mov
sbb
and
js
test
movnti
into
aad
clc
mov
adc
jmp
cmpsb
push
push
and
shrl
iret
ljmp
cld
pop
enter
movsl
adc
pop
push
jecxz
inc
ret
inc
xchg
rorb
and
in
rcll
push
test
adc
xchg
dec
cld
imulb
mov
mov
clc
sub
jb
fs
xchg
cmp
cmp
imul
mov
imul
cmc
push
mov
mov
insl
cmp
pop
and
sbb
rorb
ficoml
mov
mov
and
push
xchg
call
xor
push
lods
js
std
sbbl
fldcw
mov
mov
loopne
push
ds
dec
and
rorl
out
out
div
or
xor
mov
mov
adc
and
fwait
in
push
daa
iret
das
pop
jae,pt
lcall
aaa
test
in
mov
sbb
add
and
stos
aaa
add
add
jmp
aas
pop
pop
movsl
icebp
inc
sub
addr16
loop
pop
fcomi
push
int3
cmpsl
sub
cmpsl
and
inc
loopne
and
pop
adc
bound
mov
and
lahf
xchg
mov
ror
mov
mov
pop
adc
shrb
push
mov
loop
aas
sbb
loope
out
push
jecxz
dec
in
push
sti
jp
adc
sub
std
in
dec
xor
inc
push
cld
mov
jo
lret
shll
cwtl
mov
ss
mov
cmc
insb
cwtl
gs
xorl
shll
adc
xor
sbb
pop
orl
daa
xor
fdivl
xchg
jno
or
pop
in
xchg
dec
mov
femms
cmpsb
jl
adc
out
xchg
nop
adc
out
insl
in
adc
pop
lods
aas
sarb
outsl
add
fldenv
jecxz
fstpt
test
xor
sub
mov
jne
mov
push
shrb
enter
lods
pusha
pop
dec
leave
mov
mov
fistl
daa
idivl
sub
call
jmp
mov
std
mov
dec
icebp
addr16
adc
ret
or
cmp
xchg
dec
out
out
jns
mov
jmp
pusha
mov
or
jmp
jbe
ror
jle
rorl
push
xchg
jne
dec
or
pop
push
adc
inc
mov
stos
je
gs
outsl
sti
fnstcw
mov
cmpsb
push
pop
jbe
popf
scas
mov
mov
mov
outsl
inc
imul
dec
and
sub
push
jno
lret
das
cmpsl
into
es
scas
fldenv
cmp
jmp
hlt
or
addr16
and
cld
std
lock
mov
mov
inc
push
cmp
mov
mov
rcl
push
popf
ljmp
std
test
loop
mov
mov
and
es
mov
nop
mov
xchg
xor
or
jbe
test
jecxz
repz
xor
mulps
xchg
mov
xor
inc
sbb
sbb
dec
fistpl
mov
jle
lock
sbb
xchg
adc
daa
sbb
mov
sbb
repz
dec
rolb
mov
test
fadds
lea
push
add
fsubrl
mov
push
mov
addb
jmp
xchg
loopne
hlt
sub
pop
add
leave
sub
mov
addr16
rolb
mov
stos
mov
sbb
xlat
mov
pop
or
and
lds
mov
mov
xchg
fsubrl
jmp
scas
mov
dec
iret
and
xor
add
lret
dec
xchg
mov
hlt
mov
adc
sub
inc
xchg
and
addb
inc
push
repnz
leave
lret
sub
fsts
lods
pop
xor
add
mov
push
or
leave
pop
ss
mov
shrb
mov
or
push
test
dec
test
mov
push
outsl
fildl
and
xchg
sub
xchg
push
cld
aaa
add
dec
add
cmpsb
xor
shll
jb
mov
popf
cmpsl
or
fidivrl
lret
pushf
fstpt
xchg
test
out
xor
pop
push
push
inc
sbb
mov
jmp
fcmovnu
push
and
inc
or
mov
mov
icebp
out
inc
or
repz
aad
fwait
lea
enterw
push
dec
jg
sbb
int
mov
xchg
mov
pop
ds
xor
andl
les
cmp
arpl
cmp
loope
lds
mov
jge
jmp
scas
pushf
hlt
std
frstor
in
cs
lret
adc
push
adc
mov
iret
cwtl
xchg
xor
jnp
test
add
rolb
jle
dec
shr
inc
iret
imul
pushf
adc
sub
loopne
movsl
sub
jno
pop
dec
pop
jae
dec
lods
test
push
sub
rcll
mov
cmp
push
mov
outsl
jp
add
roll
push
or
lahf
aaa
add
in
lea
jle
daa
into
pop
movsb
push
cld
das
faddl
shlb
dec
adc
mov
addsubpd
xchg
cmp
cmp
push
pop
push
mov
adc
test
mov
call
xchg
std
pop
enter
adcb
je
mov
mov
clc
popa
pop
xabort
lods
fucomp
dec
mov
mov
mov
mov
sbb
inc
iret
into
mov
ljmp
jno
push
aas
fxch
jl
jge
dec
in
mov
shll
loopne
pop
inc
sub
sbb
idiv
sbb
mov
cmp
xor
mov
sub
mov
inc
gs
leave
sbb
leave
push
std
dec
cmp
sbb
movsb
pop
mov
cmp
add
xor
cwtl
add
mov
fcmovu
dec
fwait
xlat
mov
sub
jbe
movl
xlat
fwait
xor
push
xchg
or
sub
ret
js
lret
fmuls
out
pop
into
int3
mov
daa
call
jae
loop
pop
cmp
mov
add
test
pop
xchg
jmp
pop
les
mov
jb
sbbb
dec
and
sbb
or
sbb
mov
cli
lock
sub
cwtl
or
mov
mov
sub
push
mov
mov
or
adcl
dec
xor
xchg
out
pop
jns
jae
repnz
mov
xor
sub
sbb
je
out
out
sti
pop
addr16
pop
int3
dec
lea
inc
je
pop
icebp
add
fwait
xor
fldl
or
inc
jecxz
pop
jo
in
and
xor
stos
icebp
std
rolb
jae
lods
mov
jbe
outsb
push
lea
movsl
lods
out
mov
push
test
mov
in
rorb
rolb
ss
xor
cmp
jle
iret
aad
mov
int
xor
js
mov
xorb
jnp
sahf
repz
xchg
add
inc
cltd
sti
insb
int3
ss
or
jl
sti
div
loop
inc
and
mov
aas
dec
jecxz
lds
aaa
push
cmp
clc
int3
ficompl
jecxz
sbb
inc
xlat
rorl
cmc
enter
inc
lahf
jg
mov
add
add
sub
pushf
in
lock
sarl
rorb
pusha
je
jbe
insb
ja
gs
out
jecxz
ret
adc
jmp
sahf
xorl
js
pop
jae
imul
add
xchg
popa
into
idivb
mov
iret
mov
adc
shll
js
lods
fdivr
mov
movsl
add
pop
mov
jmp
outsb
jp
icebp
mov
imul
and
mov
adc
mov
or
mov
jbe
sbb
negb
push
mov
gs
adc
inc
adc
mov
dec
in
mov
mov
push
jg
je
push
or
mov
or
or
popa
les
test
mov
mov
cmp
aad
fidivrs
adc
es
pop
jns
cltd
fidivs
or
repz
cmp
repnz
std
fbld
int3
ret
push
jae
mov
add
cmpsb
cmc
test
es
orl
cli
leave
rcll
std
lcall
imul
inc
imul
rorl
sbb
scas
lods
xorl
inc
sbb
cmp
push
or
cs
jp
push
inc
cltd
lahf
loop
outsb
pop
mov
mov
shlb
hlt
jo
pop
inc
test
icebp
mov
lock
test
dec
dec
cmp
or
subb
idivb
dec
js
push
push
sub
jl
lcall
push
into
lea
pop
lret
add
ja
sbb
push
ss
ja
sub
or
xor
cmp
sub
xchg
lcall
rcll
add
jg
test
mov
enter
push
shl
and
outsb
stos
jl
push
idiv
cmp
call
mov
jo
mov
or
leave
xor
add
adc
stos
cmp
xchg
xchg
aaa
mov
pop
outsb
mov
iret
jb
inc
xor
mov
test
cmpsb
inc
mov
ret
mov
scas
and
push
and
cmp
cmpsb
mov
les
push
into
xchg
in
jbe
imul
xchg
mov
pusha
cmp
pop
mov
dec
cmovo
sbb
leave
loopne
and
cwtl
outsl
pop
imul
pop
xchg
jle
mov
sub
jbe
adc
addl
adc
push
jle
add
xchg
dec
lcall
or
stc
push
mov
outsb
ljmp
sbb
clc
cmp
ret
jl
mov
cltd
in
pushf
cwtl
push
pop
mov
fimull
xor
int3
mov
sar
xor
out
in
sbb
push
repz
xchg
decl
pop
pushf
fs
xchg
and
jae
lds
push
lock
xor
and
cli
inc
mov
jg
jns
xchg
mov
mov
mov
je
push
nop
sbb
mov
stc
out
scas
test
stos
jno
add
sub
popa
jmp
pop
cmp
sub
lods
in
jb
outsb
icebp
addr16
jge
inc
fdivp
mov
jl
pop
ss
cmpsl
jne
cmc
into
cmp
negb
aas
xorl
ljmp
ja
insl
mov
aas
mov
dec
xchg
jmp
mov
fldt
sbb
pushf
rorl
sbb
ret
stc
jle
xor
mov
ret
aad
jl
mov
mov
jne
and
scas
mov
fstpl
adc
or
adc
sbb
movsl
jmp
in
xor
xchg
in
add
sbb
loope
std
mov
aam
icebp
add
stos
cli
push
ds
mov
mov
dec
pop
xchg
xorl
add
sub
push
mov
sub
pop
push
mulb
sbbl
adc
jl
inc
lock
and
cwtl
ljmp
out
fmull
sahf
rcll
pop
out
push
lods
and
xchg
cmpsl
pop
popf
push
xlat
mov
lcall
add
jns
add
out
shlb
lods
xlat
cmp
cmp
jo
lods
aam
push
or
lahf
jecxz
dec
insl
lock
lods
sub
lock
sbb
in
lds
test
in
cmpsl
push
cmp
xor
mov
cs
iret
clc
add
rcll
xor
movsb
adc
jbe
mov
mov
push
push
movsb
or
xchg
pop
jnp
jno
loopne
or
fwait
add
xor
adc
lcall
in
jp
pop
sbb
mov
sbb
cmp
ds
inc
stos
sub
mov
dec
jbe
fistps
dec
sbb
imul
jns
lahf
enter
loope
in
stos
test
mov
sarb
test
mov
ja
adc
int3
scas
call
aad
fcoms
mov
dec
daa
jge
aaa
pop
repz
mov
subl
cld
mov
out
leave
pop
xchg
data16
dec
pop
pushf
xchg
adc
call
repz
mov
push
pop
lods
pop
je
in
ljmp
cmpsl
in
ss
xchg
fcoms
imul
pop
mov
lea
js
into
movsl
leave
jge
cmp
std
js
pushf
jns
xor
xchg
lret
push
sbb
and
inc
das
mov
push
lcall
inc
fdivrs
fwait
push
rclb
insb
mov
out
cmpsb
mov
movsb
dec
fbld
shl
and
mov
dec
jecxz
scas
stos
test
jns
subl
inc
hlt
imul
adc
push
cmp
adc
insl
test
pop
pop
mov
loope
or
sub
insb
cmp
pop
popf
push
into
cmp
les
cmpsb
pop
lods
test
adc
fidivs
push
xchg
jmp
cmp
mov
sbb
cmp
cmp
pop
adc
lock
nop
pop
cmp
fbld
inc
dec
jbe
repnz
shlb
js
push
in
sub
push
popa
repz
pop
jp
mov
loop
mov
fwait
add
or
inc
jno
in
add
loop
adc
outsl
push
adc
dec
add
or
in
aad
xchg
xchg
int
xor
sahf
fldt
sarl
cmp
lock
xchg
push
adc
or
xor
lds
std
push
sbb
xchg
mov
cmp
pusha
loopne
lcall
imul
aad
testb
cmc
and
dec
mov
or
nop
ret
xchg
sbb
mov
or
cmpsb
imul
mov
call
arpl
ret
adc
mov
gs
cmp
mov
sahf
cwtl
inc
mov
push
outsb
mov
iret
or
ret
jb
xor
mov
mov
pop
push
cwtl
xchg
inc
xorb
jle
ficoms
xor
stc
cmp
mov
stos
pop
mov
cli
pop
jns
cltd
ret
mov
daa
cmp
out
adcb
push
push
sub
insl
or
in
inc
sub
mov
insb
popf
mov
lret
lret
sub
dec
aam
push
sbb
stos
mov
rorb
aas
jg
faddl
cs
jl
push
jge
mov
push
jo
xor
lahf
mov
mov
sti
stos
cmpxchg
int3
ljmp
rol
xchg
jb
std
mov
rolb
daa
xlat
es
fldl
loop
add
jne
mov
cmp
insl
sub
pop
xchg
push
push
push
cmp
push
ds
pop
sub
pop
xor
mov
gs
mov
pop
add
sub
popa
xchg
sub
out
rcll
cmp
jg
and
mov
or
jno
iret
fcompl
fmull
pop
and
cmp
jo
push
jl
dec
sbb
dec
in
mov
out
stc
pop
fcoms
xchg
mov
gs
mov
addr16
addr16
xor
sti
xchg
push
dec
mov
sub
adc
shrb
rcr
stos
mov
cmp
or
xchg
xor
sub
add
cmpsl
insb
pusha
aam
push
push
xchg
pushf
pop
push
mov
mov
sarb
int3
xchg
xchg
negb
out
push
jbe
dec
sub
mov
adc
test
mov
arpl
arpl
mov
divl
sahf
fdivl
or
pop
xchg
adc
je
mov
sub
add
cmp
lahf
enter
sbb
jecxz
rol
sbbb
cli
dec
pushf
cld
or
add
aaa
cmp
mov
cmpsl
jl
adc
sub
or
insl
jecxz,pn
sti
cmp
movl
push
sub
sbb
rolb
lds
jmp
cld
push
mov
add
pop
pop
bound
cltd
test
mov
mov
inc
dec
xchg
jp
sahf
in
xorb
stos
movb
add
mov
lahf
mov
repz
adc
xor
arpl
cmp
popf
dec
adc
pop
dec
lret
loope
add
lea
xchg
cmp
push
loopne
sub
jnp
inc
or
sbb
lock
in
cmc
ja
int
lds
dec
nop
dec
ret
add
mov
out
xlat
mov
inc
mov
or
push
dec
in
inc
je
inc
mov
inc
insb
cli
mov
sub
lahf
jne
icebp
or
jp
mov
scas
cltd
ja
test
sbb
mov
imul
mov
das
pop
jp
sbb
jbe
insl
faddl
mov
xchg
push
fstps
sbb
arpl
or
and
ljmp
mov
cmpsl
pop
push
ret
xchg
in
mov
mov
or
dec
mov
lock
arpl
push
xchg
gs
inc
lods
jmp
sahf
mov
push
pop
mov
mov
cmp
sub
cmp
push
test
jmp
pop
into
fdivrs
xor
aas
mov
mov
xor
adc
mov
pop
lock
sub
out
gs
add
insb
stos
jl
adc
jp
loop
push
pop
dec
xchg
into
cmp
fisubrs
out
sub
mov
xor
idivb
and
cmc
adc
fcoml
jae
ja
test
and
dec
daa
js
pop
test
xor
xor
add
push
cmpsb
dec
mov
jle
push
fcomps
lods
scas
xorb
fwait
pusha
xor
mov
adc
adc
sub
inc
lcall
faddp
cmp
push
fiaddl
mov
push
div
mov
push
es
inc
or
pop
and
mov
stc
hlt
inc
xchg
insb
sub
les
sbb
cmp
lahf
push
jo
xchg
stos
add
pop
leave
dec
in
jmp
lahf
or
cmp
mov
push
add
enter
loope
dec
fiaddl
enter
pop
jmp
cmpsl
les
test
adc
add
pop
adc
sub
lock
ljmp
in
jnp
dec
lahf
data16
pop
out
push
and
ja
add
mov
out
testb
stc
jae
xchg
adcl
xlat
out
cmp
outsb
shrb
sbb
test
mov
adc
aas
and
scas
fsubrs
pushf
imul
cmp
imul
cmp
jmp
cmp
mov
loope
push
sti
mov
cmpsb
inc
das
adc
and
adc
ja
and
add
jmp
inc
inc
orb
fisubl
popa
fwait
imul
hlt
xchg
mov
mov
and
das
inc
int3
jp
popa
xchg
fnstcw
es
xor
pop
xchg
sbb
mov
aad
das
aam
cltd
jmp
inc
loop
fbld
mov
lea
xor
mov
pop
jne
fdivl
orb
sub
xchg
std
jp
dec
push
or
test
jno
push
mov
jl
and
cmc
mov
in
bound
pop
nop
ljmp
aam
das
pop
inc
shr
and
daa
xlat
sub
mov
popf
and
jmp
mov
cltd
sub
mov
cmpsb
shrl
stos
jecxz
cmpl
add
ret
hlt
mov
mov
add
sbb
in
pop
pop
das
lods
call
jle
fadds
rcl
fildll
ds
xor
das
imul
inc
and
loopne
outsb
or
adc
subl
jno
xlat
icebp
js
and
mov
or
xchg
das
add
stos
mov
daa
ljmp
imul
stos
pop
xor
push
arpl
addr16
sub
push
stos
lock
jns
call
cwtl
out
mov
xchg
outsl
mov
out
push
es
xchg
sbb
jb
jl
leave
shr
push
inc
insb
shll
dec
repz
jecxz
pop
push
cmp
mov
rcr
test
ret
subb
dec
push
xchg
stos
sbb
loope
outsl
jmp
lods
loop
jmp
and
add
jmp
out
push
cmp
sub
sub
int
xchg
jmp
popf
test
adc
jmp
jb
int3
out
sub
cli
dec
mov
mov
out
cmpsb
sub
sub
mov
enter
push
pop
pop
xor
push
push
mov
dec
rcrb
fidivrl
adc
mov
push
lock
dec
mov
pop
pop
icebp
dec
dec
pop
pop
xchg
sub
cmc
push
jl
push
test
clc
test
mov
pop
xchg
mov
das
push
dec
jnp
pop
aad
out
das
push
fs
aam
rcl
mov
sub
xor
cli
pop
sbb
fbstp
push
mov
test
xlat
xor
dec
mov
dec
adc
dec
dec
pop
mov
xchg
incb
nop
push
inc
cwtl
cmpsb
test
add
cmp
add
loope
jnp
push
lahf
mov
jb
dec
pop
adc
fs
outsl
adc
and
in
fcompl
std
insb
cmp
sti
inc
jb
xchg
push
movsb
adc
cmp
ja
mov
in
pop
mov
daa
mov
fiadds
stos
stos
sbb
add
xchg
mov
cwtl
push
pmaxsw
mov
inc
pop
lea
lret
out
xor
popa
add
mov
dec
js
sar
bound
mov
sub
push
je
sahf
imulb
mov
push
aam
xor
pop
mov
cltd
lods
aad
cmp
lock
mov
adc
mov
xor
and
jne
mov
cmp
adc
sbb
add
adc
fldt
add
mov
inc
out
and
xor
inc
mov
fsubs
push
out
xchg
cmp
aas
testb
and
repnz
xor
jge
insb
cld
shrb
cmc
test
out
in
sti
pop
outsl
push
das
stc
out
test
xor
cmpsb
push
or
imul
jl
jne
sahf
add
sub
das
ret
stos
pop
test
inc
jns
out
jmp
mov
xchg
imul
stos
mov
mul
and
inc
rorl
jnp
xchg
enter
call
imul
pop
enter
jl
or
aad
jae
test
mov
adc
adc
pop
and
stos
mov
into
jns
cmc
dec
test
rep
pop
cmc
jle
out
imul
shrb
jg
sub
dec
lahf
cmp
jno
jg
test
mov
lahf
sbb
mov
cmp
jne
xor
std
iret
sahf
jg
xor
sub
push
adc
push
push
adc
fadds
jp
adc
and
lea
adc
lea
mov
jne
cmp
cld
out
mov
insl
fsubs
call
mulb
pusha
mov
gs
ror
cmpsl
out
movsl
jp
sarl
mov
cmp
push
jne
fisttpll
je
mov
bound
stos
insl
ds
push
cwtl
loopne
xchg
pusha
push
testb
ret
mov
and
dec
jae
test
xchg
push
cwtl
push
icebp
out
movsl
rolb
mov
sbb
cmp
bound
dec
sub
lcall
idiv
sbbb
js
and
call
mov
repz
loopne
or
inc
dec
xor
imul
stc
or
push
mov
mov
mov
rorl
int3
out
push
enter
add
outsl
repnz
push
push
insl
sahf
sarb
rorb
xchg
ret
shrb
cmp
loopne
sarl
insl
lods
icebp
push
popa
sbb
leave
cld
or
sub
xor
flds
and
pop
idiv
js
cmpsb
jmp
lods
jmp
xlat
clc
pop
dec
repz
or
ss
xchg
lea
jnp
jb
cmpsb
jae
pop
inc
dec
es
pop
je
inc
fdivrs
push
cmc
cmp
sti
scas
lret
mov
pop
xor
push
hlt
cld
out
movb
mov
shufps
cmc
and
and
lcall
xchg
lods
pop
addb
js
fsts
jae
scas
push
push
cli
js
ret
clc
dec
pusha
pop
jge
xchg
imul
pop
out
clc
sahf
hlt
clc
xchg
arpl
xor
aas
scas
push
mov
push
aad
xor
pop
cli
pop
mov
adc
es
and
test
popa
inc
lret
mov
xor
xchg
push
pop
mov
js
lahf
or
gs
mov
mov
stos
mov
xchg
iret
lods
movsl
push
nop
pop
add
subb
lcall
or
xor
mov
shll
push
iret
cld
cltd
lret
pop
test
sub
imul
mov
rclb
and
sub
or
jmp
dec
insb
push
test
inc
sub
mov
cmp
xor
push
cli
leave
sbbl
mov
ljmp
enter
cmpl
cmpsl
cmp
test
inc
jae
push
imul
and
push
mov
or
xor
imul
in
movsb
xor
push
or
pop
sub
in
push
mov
scas
sbb
mov
push
or
push
cmp
iret
scas
sub
cmp
sbb
sbb
mov
les
dec
inc
ljmp
test
xor
mov
mov
in
inc
ret
loopne
rorl
test
icebp
out
adc
or
ss
sbb
and
cmp
or
movsl
adc
add
repnz
pop
fistpll
ja
in
in
inc
mov
jno
pop
daa
jne
daa
push
mov
mov
pushf
lret
fiadds
mov
mov
dec
fsubrs
xchg
sti
ficoms
dec
jecxz
popf
pop
lods
std
repz
sarb
repnz
jne
sbb
into
jno
pop
mov
xor
jge
ja
pop
lret
aam
mov
cmpsl
neg
push
int
pop
or
in
sahf
rol
adc
pusha
push
fldt
in
fsubr
lahf
and
cmp
es
out
pop
gs
adc
jne
mov
fidivrs
mov
push
sub
cmp
and
sti
add
ret
xlat
divl
or
xchg
movsb
xor
jge
jg
subb
mov
or
dec
push
mov
mov
adc
out
lds
ljmp
sbb
pushl
int3
es
outsl
outsb
movsl
xor
gs
lahf
insl
gs
gs
mov
adc
sub
fdivrs
in
bound
mov
cmp
fstl
clc
cli
outsb
aad
shlb
and
xor
hlt
pop
cltd
les
dec
stos
jo
insb
out
mov
add
push
adc
mov
out
or
mov
mov
sbb
jp
adc
adc
dec
movsl
cmp
nop
adc
aam
lock
xchg
popf
inc
and
push
or
cmp
or
dec
lods
insl
xorb
xchg
dec
fcompl
mov
push
lahf
xor
inc
das
sbb
sub
test
adc
hlt
sbb
sub
adc
lods
push
and
jno
cmc
jno
sub
inc
sbb
in
enter
fidivrl
dec
sbb
or
stos
sahf
loope
sar
or
jo
add
in
mov
out
xlat
gs
sub
inc
inc
gs
js
pop
cmp
mov
mov
jecxz
jl
mov
and
sub
jb
xor
imul
shrb
mov
inc
jl
fsubrs
fsub
stc
push
insl
mov
sub
pop
test
not
and
lods
ficoml
mov
xchg
sbb
scas
mov
ror
or
push
in
test
ret
jp
push
int
mov
xchg
mov
or
int
movsl
pop
subl
pop
jbe
fsubp
iret
and
mov
dec
mov
and
jnp
mov
loope
cmp
test
adc
ss
cmp
scas
mov
cmc
mov
adc
add
loope
jae
addb
pop
jb
stc
pop
icebp
lahf
jecxz
lds
sbb
jl
add
adc
mov
jns
adc
lea
push
inc
dec
mov
ds
shlb
sti
push
fimull
ret
jecxz
fs
sbb
pop
fs
ljmp
push
adc
inc
cmp
in
stc
loopne
adc
gs
cltd
mov
repnz
push
test
roll
xchg
mov
dec
push
mov
arpl
loope
jno
outsb
movsb
pop
repz
push
lret
xchg
xchg
xor
insl
add
jbe
jne
aas
imul
jge
mov
inc
adcl
mov
pop
std
jbe
xchg
add
ja
pop
jmp
repnz
mov
inc
xor
iret
jle
pusha
out
xchg
push
mov
mov
pop
loopne
mov
fucomip
test
jle
push
mov
pop
sbb
into
and
pop
cwtl
in
sbb
js
mov
adc
xchg
sti
jecxz
or
xlat
js
aas
or
and
popa
sub
leave
sbb
ds
adc
or
dec
stc
push
cltd
fbstp
sarb
add
jnp
pop
xor
ret
mov
aas
enter
mov
adc
jae
jae
aaa
popfw
adc
fwait
repz
enter
lods
faddl
in
jae
insl
and
add
int
adc
mov
out
dec
add
je
roll
inc
lcall
into
pop
adcl
and
mov
aam
arpl
push
mov
sub
jns
xchg
jne
adc
stos
aaa
pushf
in
add
mov
dec
mov
cmp
ficoml
mov
sti
iret
xchg
aam
cmp
lods
adcl
arpl
rcll
inc
pop
outsl
pop
xor
jae
push
in
ljmp
xchg
shll
push
jecxz
mov
imul
jne
lods
push
js
jb
push
mov
pop
cwtl
or
orl
add
imul
out
in
ja
orl
insl
push
sub
icebp
jo
push
adc
bound
add
stos
jns
add
push
adc
jl
je
bound
adc
sub
mov
adc
out
dec
mov
jmp
aas
mov
ja
fisubrs
jmp
lcall
sub
xchg
push
mov
dec
pusha
jo
jecxz
imul
je
jmp
pop
push
jle
test
ss
addb
add
or
pushf
xchg
push
jo
test
add
push
push
and
sahf
mov
idivb
mov
lods
in
fld
push
fistps
lahf
add
inc
pop
mov
pop
scas
scas
mov
fstl
icebp
or
push
add
cld
cmp
roll
dec
pop
mov
mov
mov
jnp
push
inc
fldl
fwait
mov
sub
out
add
lea
mov
call
cmpsl
cltd
into
push
repnz
or
xor
mov
sub
jae
repnz
pop
lea
adc
push
dec
lds
je
sub
mov
jo
inc
mov
sbb
jne
syscall
adc
mov
sub
adc
pop
insl
inc
into
mov
jp
jmp
pop
fnstsw
mov
push
xchg
push
pop
mov
mov
mov
rcrl
movsl
dec
inc
xor
rcll
mov
cmp
mov
in
adc
mov
pop
stos
es
jecxz
sub
int
cs
mov
ds
cs
int
lret
add
pop
or
cmp
dec
mov
add
sub
inc
aad
int
add
cwtl
shlb
clc
add
cmp
and
cs
ss
xchg
adc
pop
out
in
push
cmp
xor
xchg
movsb
movlps
sub
repz
clc
mov
subl
fisubrs
popf
adc
lcall
lods
mov
push
add
push
jno
mov
mov
in
roll
enter
test
cmpsb
lcall
mov
js
cmpsb
dec
push
sbb
fildl
pop
stc
jae
ds
xor
jae
jb
push
mov
sub
sub
leave
cli
sti
xchg
pop
fisubl
push
pop
popa
jmp
faddl
jecxz
xchg
aad
idivl
cmp
push
sbb
mov
std
push
daa
mov
subb
ljmp
outsb
cmc
xchg
and
std
adc
in
xchg
push
xor
mov
aad
les
loopne
or
mov
mov
fbld
loopne
movsb
or
mov
mov
pop
jl
fwait
daa
push
addr16
imul
insb
aam
mov
jb
out
pop
int
scas
fcmovbe
enter
int
adc
pop
scas
and
pop
std
lods
movb
pusha
xlat
jo
push
cmp
test
lock
testl
std
dec
in
sbb
sbb
inc
ficomps
leave
ja
and
xor
aas
lcall
lds
pop
sub
lret
les
xor
sbb
ja
cmp
inc
adc
lret
scas
fidivs
xor
jns
aaa
jo
sbb
xchg
xor
je
sbb
dec
stos
repz
cmpsb
and
fucom
test
or
mov
jp
in
mov
pop
hlt
jbe
mov
mov
push
sub
in
pop
sbb
mov
mov
lcall
popf
cmpsb
mulb
xor
cli
push
xor
inc
lea
fcmovnb
jae
and
loope
lods
imul
dec
mov
sahf
mov
push
movsb
xchg
add
sti
jecxz
lea
sub
cld
enter
dec
shll
cmp
int3
mov
rclb
mov
cmp
mov
in
rcr
jne
ja
and
jo
frstor
out
movsb
mov
pop
cmp
jae
mov
and
xor
arpl
mov
xchg
adc
clc
mov
inc
xchg
bswap
dec
or
push
lret
mov
movsb
scas
into
fldt
jg
aaa
adc
out
imul
push
mov
popf
testb
out
push
fistpl
cmp
shrb
xchg
mov
out
jmp
jg
fdivp
adc
or
shlb
inc
pop
mov
fwait
or
addr16
lods
outsb
popa
pusha
iret
push
mov
mov
call
iret
cmpl
stos
lea
sbb
and
in
scas
mov
or
mov
popa
mov
fwait
int
pusha
lcall
sub
fidivrl
js
sbb
ds
insl
sti
or
jnp
sbb
pslld
pop
dec
mov
cmpl
mov
dec
testb
and
insb
adc
mov
add
call
rcrb
lods
cmc
fld
cmp
mov
xor
addr16
xor
mov
inc
mov
ret
daa
aam
in
mov
cmp
fwait
lret
add
push
jbe
sbb
xchg
insl
ds
lods
add
icebp
in
hlt
or
lods
inc
xor
jle
hlt
faddl
in
or
xchg
mov
fmuls
lods
lret
testl
daa
xor
jb
mov
inc
rcl
jnp
fs
adc
clc
xor
jge
pop
cmpl
lock
mov
out
aaa
and
push
les
mov
inc
fdivp
sarl
je
jnp
sbb
pop
push
sbb
in
outsl
fbstp
xor
xor
aaa
test
fs
push
inc
inc
js
in
adc
cltd
fwait
inc
imul
cltd
frstor
xor
push
adc
jo
jle
xlat
sar
or
jae
out
gs
mov
ja
pop
sub
hlt
sbb
jns
push
out
out
cmp
lds
inc
push
lcall
fnsave
add
push
jb
push
outsb
stos
hlt
inc
dec
pop
cmp
jl
out
push
mov
data16
sub
out
cs
jbe
aaa
mov
xchg
test
and
sub
inc
cmp
loopne
dec
inc
ljmp
lret
lds
inc
jmp
out
jmp
cmp
dec
jbe
fstps
nop
and
xchg
and
push
rcrl
sub
shlb
jge
mov
out
in
xchg
fisttps
or
push
scas
insb
das
rorb
inc
dec
imul
mov
test
cmp
push
adc
or
mov
fbld
and
cmpsb
fisubrs
div
mov
lcall
pop
fnstcw
das
dec
adc
mov
push
subb
out
cmp
sbbb
adc
out
rcl
pop
movsl
ret
mov
jno
pop
and
mov
add
inc
iret
mov
inc
push
lods
loop
int
and
xlat
jmp
pop
mov
adc
dec
jae
sub
testb
mov
nop
fwait
add
mov
inc
pop
sbb
cmp
adc
out
add
rorl
xchg
xchg
test
mov
out
loop
sub
mov
mov
jbe
xchg
gs
mov
mov
fisttpll
sub
fwait
jno
mov
mov
and
xchg
je
repnz
mov
adc
mov
pop
xlat
mov
orb
push
jno
testl
loope
xchg
loopne
mov
icebp
pop
sub
jno
mov
pop
add
mov
inc
jbe
stc
imul
std
sub
cmpsb
xchg
jmp
data16
mull
outsl
sbb
mov
or
int3
mov
sbb
into
push
test
or
ss
mov
push
jmp
jb
dec
sbb
mov
pop
and
jg
into
pop
cmp
into
adc
mov
xor
push
and
in
mov
add
pop
mov
pop
pop
ret
lcall
dec
cmp
sub
jmp
imul
add
mov
sbb
ja
fbstp
addr16
xor
pusha
insb
add
xchg
cmp
add
fdiv
cwtl
pop
les
rorb
stc
cmpsb
mov
push
sbb
and
xchg
arpl
ret
out
loope
mov
sbb
lcall
outsl
inc
in
xor
negl
cmc
pop
or
mov
add
out
in
sub
out
add
inc
push
mov
loope
dec
cmp
jle
lea
cmp
les
cmp
pop
pop
outsb
mov
and
push
scas
cwtl
sbb
or
fs
iret
pop
pusha
shl
sbb
sub
sub
and
pop
cs
mov
out
cmp
mov
std
jge
pop
mov
mov
fnsave
xor
daa
or
shrl
stos
push
bound
jns
repz
mov
pop
aad
push
cmp
mov
cs
repz
gs
aad
test
sti
sar
dec
mov
add
int3
clc
std
es
push
rcr
xchg
sub
lods
or
outsl
jno
push
out
adc
pusha
push
sbb
dec
ret
or
imul
in
sub
mov
les
fisttps
ret
js
sbb
lds
pop
lods
jno
mov
xor
loopne
xor
jp
inc
pop
mov
mov
jmp
scas
push
inc
push
ja
pop
andb
insb
xchg
and
mov
cmp
push
pop
xchg
cs
mov
pop
lods
imul
leave
dec
xor
sub
nop
stos
adc
and
add
jmp
jbe
jl
push
mov
lcall
xor
jmp
in
push
inc
jb
fdivl
pop
je
ret
adc
call
cmp
pop
xchg
xchg
loope
shll
out
lret
add
dec
ljmp
fadd
mov
xor
outsb
ja
in
add
jl
fidivl
out
shlb
sbb
sbb
into
jae
aas
fadds
cmp
lods
xor
pop
je
or
jge
sub
jle
adc
popf
dec
dec
insb
pop
outsb
ror
jecxz
je
stc
notl
repnz
insl
aaa
push
int3
ret
clc
hlt
out
cmp
cltd
stc
mov
xor
mov
leave
subl
out
aaa
jmp
sub
mov
cmp
add
pusha
push
adc
mov
push
mov
test
scas
pop
fstpt
jnp
ss
int3
movsb
fwait
mov
icebp
jns
xchg
mov
xor
mov
adc
mov
in
adc
mov
pop
push
push
mov
push
add
sbb
int
xchg
or
or
loop
repz
arpl
inc
and
mov
cmp
xor
adc
out
ret
mov
cwtl
jp
add
push
ret
sbb
jmp
xchg
ret
push
pop
lods
xchg
ds
enter
repnz
push
or
pop
pop
shrb
inc
and
sbb
push
cli
mov
cmp
pop
cmp
adcl
fidivrs
fwait
sub
adc
je
mov
outsb
inc
sti
or
jg
cmpsl
inc
and
mov
adc
out
mov
out
jp
cmpb
adcl
jns
cmp
fstpt
cmpsl
popf
idivb
je
cltd
adc
inc
pop
jne
hlt
scas
and
adc
add
adc
icebp
add
and
lahf
or
int3
scas
ret
push
stos
js
nop
fabs
push
inc
es
xlat
clc
ds
sub
sub
jecxz
cli
dec
sub
lods
jo
gs
imul
lods
loop
or
div
movsl
push
lods
jne
lcall
mov
or
lcall
cmpsb
fbstp
adc
xor
js
shrl
int3
push
sub
xchg
lahf
mov
mov
xchg
cs
mov
leave
aaa
stc
adc
push
mov
insb
icebp
jecxz
pop
mov
ret
fwait
mov
push
jno
push
pop
adc
ds
js
jle
fists
in
pop
add
mov
mov
gs
mov
inc
ja
dec
in
dec
fstpt
jae
pop
jb
in
jnp
mov
lcall
popf
sarb
xor
inc
pop
addl
adc
stos
push
sarb
sub
in
cmp
jmp
cmp
lret
mov
enter
jnp
callw
dec
outsb
cmp
shr
jecxz
aam
mov
xchg
cltd
shll
and
mov
decl
push
aaa
push
fcompl
push
cmp
fnstcw
and
add
xor
dec
mov
btc
ret
dec
push
mov
js
xchg
out
sub
mov
fsubr
les
mov
fs
loope
adc
cmc
mov
idivl
jno
fcmovu
add
add
std
and
pop
cmc
or
insb
pop
inc
hlt
or
adc
xchg
rorb
dec
adc
xchg
inc
test
test
dec
jecxz
add
xor
js
movsl
leave
push
sahf
hlt
adc
add
loope
bswap
sbb
sbb
imul
mov
adc
mov
daa
sahf
cli
lods
xor
jmp
inc
xor
repnz
cmp
pop
int3
lods
imul
jecxz
daa
icebp
in
xchg
scas
lods
aaa
inc
stc
mov
inc
cltd
pop
stos
dec
and
stc
jns
jmp
lods
int
ficompl
dec
jns
cmp
repz
insl
shrb
je
cmpsb
jmp
stc
cmpsb
pushf
xor
dec
push
sub
sub
jmp
popf
jp
cwtl
jns
aam
cmp
mov
in
and
int
stos
fs
inc
xlat
test
jmp
mov
xchg
lret
cltd
es
lahf
sub
mov
ss
inc
add
xchg
xchg
xor
js
aam
enter
jno
mov
pop
sub
cmp
insb
repz
cmp
mov
aas
mov
dec
sub
xchg
shll
sbbl
mov
mov
sahf
insl
lods
lea
jnp
fstpl
shrl
cmp
and
test
iret
imul
push
nop
sub
test
dec
ja
cltd
sbb
movsb
pusha
jns
mov
inc
push
test
insb
sahf
jmp
mov
in
f2xm1
push
xchg
mov
ljmp
fdivrp
loop
mov
mov
lahf
lret
xchg
mulb
or
lcall
js
mov
xchg
mov
fidivl
aad
xor
cmp
stc
sub
loop
cli
sub
leave
sub
aas
jg
mov
sti
adc
leave
fdivrs
mov
xchg
jae
in
and
loopne
or
pop
mov
xchg
and
xlat
xor
fsts
call
enter
cltd
pushf
sub
sbb
mov
lods
or
pop
pushf
stos
stos
sbb
in
push
dec
add
imul
sub
mov
ficompl
pop
into
loop
pop
aaa
push
cmc
rolb
xchg
das
pop
pop
pop
stos
jns
scas
inc
js
jl
and
ljmp
lock
mov
pop
cmp
inc
xchg
rorl
or
push
sbbl
xchg
sbb
in
jp
lret
xor
pusha
sbb
jae
push
jg
aaa
mov
mov
shlb
lock
cmp
int3
test
and
push
lods
sub
xor
insb
lret
sbb
mov
pusha
pop
pop
push
sar
lds
rorl
sub
out
xchg
ljmp
sbb
repz
push
mov
dec
lea
rorl
loope
cs
sub
lcall
xchg
fisttpll
into
mov
shll
mov
jl
std
movl
fnstenv
lock
mov
in
xchg
sbb
bound
fisttpl
dec
sub
das
std
pusha
adc
std
pusha
scas
addr16
loopne
xchg
and
inc
cmp
push
jp
push
scas
xchg
add
sbb
in
and
and
dec
out
sti
cltd
pusha
mov
movsl
dec
mov
popf
mov
push
jo
inc
xor
faddl
int
repz
inc
push
movsb
fwait
ja
jns
pop
das
aad
enter
dec
xchg
mov
into
xor
lret
push
inc
xor
pop
or
jle
jecxz
jge
dec
pop
sbb
xorb
jmp
int3
or
xchg
jl
mov
into
shlb
dec
clc
insl
add
fwait
push
jl
pop
mov
xchg
push
sarb
roll
int3
aam
mov
push
push
xchg
fnstsw
mov
hlt
enter
out
test
sbb
imul
xchg
sbb
out
test
mov
dec
out
ljmp
mov
scas
pop
aad
mov
in
nop
xor
cwtl
incl
jp
push
in
cwtl
cmpsb
push
pop
mov
push
in
sub
aam
mov
mov
sub
push
hlt
loopne
es
stos
dec
pop
pushf
xchg
adc
sar
sbb
add
andl
cmp
call
or
test
sub
test
sub
push
lods
mov
push
push
xor
dec
sti
adc
sub
push
lret
out
daa
adc
pop
ret
leave
dec
or
fistps
pop
xor
ss
mov
mov
rcrl
adc
dec
insb
movsl
nopl
push
es
sbb
into
mov
test
ja
das
xorl
mov
leave
sbb
cmp
jb
push
mov
jne
shl
fcompl
jb
jg
sbbb
push
repnz
divl
cmc
and
pop
hlt
rcl
cmp
lds
mov
and
pop
mov
sti
push
bound
aad
xchg
adc
stos
pusha
inc
shll
fdivrl
xchg
ja
jp
mov
pop
lods
and
ds
sbbl
insb
iret
aaa
xchg
imulb
jns
in
mov
inc
mov
or
aad
movsb
xor
aad
sarl
fxch
scas
add
mov
cmp
loope
inc
sti
sbb
leave
pop
jge
cli
and
dec
stos
jbe
cmp
cmp
sub
or
mov
jb
faddp
pop
pop
add
dec
nop
mov
adc
add
mov
js
sbb
outsl
pusha
cmp
into
adc
out
divb
shlb
shrl
ljmp
sti
mov
das
shlb
mov
mov
cltd
imul
fcompl
adc
stos
cmc
or
or
hlt
ds
mov
ret
dec
repnz
mov
dec
jns
cmp
inc
dec
mov
mov
jecxz
shr
pcmpeqw
pop
dec
ss
lret
fwait
test
fwait
mov
lock
sbb
jge
sbb
outsb
cmovp
cltd
lret
js
pop
xor
xchg
pop
sbb
out
cmp
addl
iret
arpl
hlt
sbb
repnz
gs
ss
insl
loop
rorl
rcrb
fwait
in
mov
das
imull
imul
mov
cltd
lcall
mov
xchg
pop
lea
or
inc
or
aaa
les
int
dec
aam
or
sub
or
fcompl
int3
jle
cmpsb
push
out
xor
shlb
xlat
push
sbb
jae
xor
push
filds
mov
add
push
aaa
pop
adc
insb
enter
or
lea
pop
xchg
xchg
fistpll
cmp
adc
pop
iret
push
inc
mov
cmpsb
int
mov
test
es
loope
fimuls
and
mov
cmc
mov
dec
xor
jl
inc
fucomi
fnstcw
adc
sbb
int3
lahf
test
movsl
jl
dec
xor
or
adc
sbb
xchg
outsl
repnz
jmp
pusha
jecxz
repz
sbb
hlt
rcrb
lret
into
cmp
inc
pop
jecxz
hlt
xchg
push
pop
xchg
ljmp
cmp
enter
out
scas
popa
aaa
push
dec
jno
ror
mov
push
adc
xor
pop
loopne
push
aas
mov
popa
je
scas
or
mov
mov
int3
test
fcoms
in
lea
push
pop
mov
lret
pushf
jle
mov
mov
adc
sub
mov
test
and
adc
jnp
push
cli
pop
mov
std
call
pop
outsl
repz
dec
popa
mov
adc
inc
cld
ficompl
test
cltd
decb
push
testb
aaa
sahf
pop
jae
cwtl
enter
add
xchg
mov
aas
in
pop
ret
arpl
sub
andl
lret
jns
aam
mov
mov
pop
lret
mov
mov
jmp
ret
jge
fildll
insl
mov
sahf
aaa
add
and
out
mov
shl
ss
test
pop
jb
xor
test
scas
cmc
repnz
pop
mov
add
jnp
sbbl
sub
gs
or
hlt
and
dec
cmp
stc
daa
stos
stos
es
mov
sahf
jbe
stos
adc
lds
mov
test
insl
test
jb
fwait
xchg
aas
test
xor
xor
mov
push
cmc
stos
outsb
shlb
cltd
dec
xchg
jg
jo
pusha
outsb
xor
lods
mov
aam
cmpsl
cmp
into
jo
inc
lret
push
mov
xor
outsl
xor
jmp
pop
cmp
mov
adc
push
xchg
mov
pop
lea
fwait
pop
daa
adc
add
dec
or
hlt
push
sub
les
out
pusha
dec
fnstenv
mov
add
imul
sbb
fistpll
inc
mov
jp
jmp
push
sbb
mov
push
cld
push
arpl
cmp
jge
je
cmpsl
decl
or
rorb
loopne
jmp
push
xchg
shlb
nop
dec
adc
out
push
repnz
sbb
inc
sub
push
xor
mov
outsl
pop
sarl
push
xor
data16
sub
jns
dec
mov
sub
pop
stc
pop
lock
cmp
fdivs
pusha
cmp
popf
insb
xchg
out
fs
bound
flds
aam
inc
mov
mov
jg
dec
in
jo
mov
bswap
jmp
aaa
aaa
xchg
mov
out
pushf
loopne
nop
sbb
enter
push
inc
or
test
lock
pop
adc
jge
mov
jnp
inc
sahf
int3
or
cli
jle
lcall
sbb
inc
push
fwait
xor
and
jb
jge
xchg
jmp
push
mov
dec
adc
xor
scas
lods
push
adc
xchg
bound
add
loope
jge
xor
ficomps
mov
imul
addr16
sbb
aam
in
lret
mov
xchg
xor
xor
rolb
bndcu
call
sub
test
pop
cwtl
addl
nop
sbb
stc
or
pusha
jno
ljmp
jmp
rcll
testb
ret
or
stc
in
push
jno
mov
insb
xchg
daa
movsl
dec
mul
push
popa
scas
inc
out
sub
mov
pusha
shll
add
jle
lahf
push
fdivrl
into
adc
cmp
fsubrl
xchg
ss
mov
test
repnz
movsl
jbe
nop
das
mov
adc
sbb
or
aaa
jno
adc
mov
pop
cmp
fists
xchg
mov
and
dec
test
roll
xchg
jg
ss
xor
sbb
inc
mov
add
push
push
sub
mov
sub
mull
add
push
loopne
push
jmp
andl
xor
test
call
pop
gs
arpl
adc
and
pop
bound
leave
in
pop
cmpsl
bound
cmpsb
outsb
test
ss
sbb
int
dec
aas
testb
out
jle
shll
out
cltd
xchg
jbe
sbbl
adc
adcb
push
insl
insl
out
dec
jae
or
insb
cmpl
mov
sbb
lods
jbe
add
adc
inc
and
out
loop
fmul
movl
add
lret
adc
sbb
add
xor
or
sub
gs
std
dec
dec
add
dec
xor
adc
cmc
cmpb
bnd
stos
xor
pop
xor
int3
ss
mov
or
jns
nop
sub
lret
fcompl
xorl
add
add
dec
sub
movsb
dec
jno
sarl
jp
xor
adc
lahf
dec
mov
cmp
cltd
xchg
pop
test
inc
sub
stos
or
xor
sbb
out
jbe
xchg
sarl
mov
in
mov
out
xchg
dec
pop
or
mov
std
sbb
mov
aas
nop
jge
or
add
pop
js
test
dec
push
xchg
lods
sbb
xlat
fistpll
loope
mov
into
push
aaa
repnz
movsb
dec
jle
test
aad
or
fisttps
sbb
push
in
mov
lret
push
push
iret
cs
pusha
mov
lret
aad
rcrb
mov
mov
inc
xor
or
jo
stc
imul
dec
rcrl
mov
enter
mov
mov
add
inc
xlat
sub
bound
out
jmp
or
or
add
mov
xchg
dec
in
into
ror
ss
in
jmp
sbb
or
fcomp
xchg
mov
shlb
fisubrs
inc
ret
add
inc
mov
movsb
pop
cli
xchg
fbstp
mov
xor
inc
mov
lcall
mov
out
mov
jo
inc
xchg
add
push
dec
xchg
push
jge
and
fidivrl
mov
xchg
jmp
inc
xor
or
dec
or
lret
lods
rcll
jb
leave
gs
bound
ret
out
imul
lds
inc
adc
dec
jbe
adc
dec
subb
ss
int3
test
repnz
sahf
es
inc
dec
nop
push
cmp
icebp
dec
xchg
out
out
pushf
xor
push
and
cmp
in
ret
fadds
lret
and
push
lock
lock
loop
xchg
pop
aas
cld
dec
xor
jns
mov
mov
cmp
mov
jecxz
adc
mov
push
add
inc
out
pop
outsb
jb
sub
cmpsb
sbb
addl
push
test
incl
shrb
enter
mov
xchg
repz
leave
and
hlt
lret
daa
jl
xor
and
ss
push
push
pop
testl
popf
lds
push
mov
decb
out
add
mov
out
xor
pop
mov
jns
stos
pop
dec
or
bound
mov
ret
push
sub
lahf
mov
leave
movups
in
add
dec
fdivrl
jmp
and
push
sahf
ror
cltd
push
sbb
mov
or
repnz
scas
mov
push
sbb
and
xchg
lahf
push
and
push
xor
nop
xor
jecxz
aad
ss
scas
add
mov
jb
aad
in
xchg
test
popl
insb
pop
in
mov
mov
jge
xchg
cmovns
aaa
xchg
mov
pop
xlat
sbb
add
mov
push
out
mov
out
adc
push
mov
adc
hlt
cmc
aas
lret
inc
loopne
jae
mov
xchg
adc
dec
jg
pop
out
xlat
popa
arpl
dec
jecxz
movsb
sbb
sub
fwait
popf
mov
mov
inc
mov
push
insl
enter
cmp
jb
testb
push
or
pop
call
dec
push
out
repnz
cli
leave
jae
dec
mov
inc
mov
xchg
cmp
add
cmp
sub
push
mov
mov
or
lret
aam
mov
aam
inc
dec
ja
je
cmp
or
ljmp
or
ljmp
lds
jns
shl
scas
aam
in
mov
stc
lods
mov
stos
test
xor
mov
jmp
xchg
mov
mov
jo
xor
xchg
jle
jge
aaa
pop
out
fwait
stc
xor
lret
push
movsl
icebp
loop
or
out
aas
fwait
mov
call
pop
push
sbb
inc
pop
stc
adc
in
inc
dec
subb
insb
loopne
scas
sarb
lcall
mov
sarl
fdivrs
or
cs
lcall
sbb
jno
or
xor
mov
jns
and
add
or
mov
pop
mov
jmp
push
xchg
xor
adc
movsl
cmp
fbstp
cltd
push
addb
jns
int3
mov
dec
pusha
push
mov
or
stos
int
aam
arpl
rolb
psubusw
adc
inc
xor
dec
adc
jnp
sarb
adc
shr
mov
faddp
mov
dec
jg
dec
and
ds
out
cmp
xorl
lds
and
scas
sub
inc
outsl
lods
sbb
mov
mov
in
gs
xcrypt-cbc
inc
mov
xchg
and
aas
repz
cmc
and
into
ret
arpl
xor
shlb
sbbb
dec
rolb
add
cmp
pushf
lret
xor
pop
xor
pop
arpl
mov
add
andl
fidivs
fidivl
inc
jbe
push
mov
imul
dec
cmpsl
add
arpl
call
pop
imul
orl
lods
scas
dec
cmpsb
xor
jb
out
repz
test
jle
jb
movsl
sbb
add
std
xor
dec
adcb
xor
inc
xor
mov
add
jns
cmpsb
push
ficomps
and
fsubl
test
mov
cs
jbe
jmp
push
xor
stos
lret
test
clc
pop
dec
jecxz
stos
or
divl
neg
das
pop
adc
push
ds
sub
mov
mov
sbb
lds
adc
lds
insl
cmp
out
push
xchg
inc
out
rolb
pop
insb
jno
push
shl
mov
sbb
add
push
pop
fs
fiadds
pusha
sarb
mov
stos
xorl
xchg
jnp
in
sbb
ret
and
cld
int3
add
mov
add
pop
repz
nop
outsl
and
mov
ljmp
mov
push
dec
sub
int3
jecxz
or
minps
rcr
adc
divb
adc
scas
rclb
pop
jb
pop
pop
xor
sbb
and
fwait
in
sti
into
pop
xor
rorw
stos
imul
add
pop
adc
hlt
dec
pop
les
mov
out
mov
cmp
mov
clc
mov
push
daa
mov
xchg
or
add
push
fisttpl
fucomi
stc
jmp
sbb
cltd
add
push
jo
jmp
aam
sub
aad
das
push
movsb
pop
dec
mov
xor
jle
mov
pop
jl
cmp
pop
mov
sbb
fstp
imul
mov
in
jae
cli
nop
ljmp
push
sub
pop
jae
cmp
movsl
push
fcompl
push
ficompl
movsb
mov
sub
jmp
sub
dec
push
ficoms
gs
stc
loope
xor
icebp
or
cmp
insl
or
jmp
out
andl
dec
add
ret
and
aad
xor
repnz
push
pop
and
pop
mov
sarb
adc
or
xchg
jae
in
xor
pusha
loop
and
mov
sub
jl
rcll
std
rcrb
pop
xchg
and
xor
xchg
pop
pop
pop
add
lds
aaa
sbb
mov
xor
jne
int
les
inc
cli
mov
jb
adc
mov
cmp
add
iret
js
sarl
pusha
je
popa
out
xchg
sub
cmp
nop
insb
shrl
cmp
test
ljmp
jns
daa
push
jl
scas
mov
mov
xor
add
xlat
std
jno
pop
in
push
mov
xorl
cmp
loopne
sbb
push
and
and
pop
jne
xor
lcall
pop
bound
popa
ret
ss
fildl
sbbl
xchg
leave
imul
cmc
inc
xchg
or
popa
stc
ss
pop
in
dec
xor
jno
mov
inc
mov
lods
push
gs
lcall
sbb
addr16
aam
mov
mov
enter
cmp
lock
jg
stos
mulb
ret
mov
je
dec
and
jnp
pop
shrb
cmp
popa
cmp
mov
xchg
push
out
mov
loopne
divb
lret
adc
dec
sbb
xchg
cmp
xchg
mov
inc
sti
call
cmp
mov
xchg
in
lahf
fs
jo
lret
push
mov
xor
xchg
sub
sub
sub
fimull
fnsave
sub
mov
out
aad
jmp
int3
push
push
lea
push
adc
idivl
aad
sub
pop
or
ret
adc
aad
cmpsl
ja
je
mov
jge
pop
daa
cs
pop
adc
lock
test
push
push
and
ds
repz
jbe
rcrb
push
xor
test
jge
rsqrtps
sbb
fnstcw
mov
in
pop
test
out
test
xchg
sahf
sbb
mov
les
and
mov
je
mov
int3
pop
std
xlat
mov
cmc
jb
pop
jbe
fidivl
and
popa
mov
int3
in
fwait
inc
mov
inc
cwtl
or
dec
insl
into
pop
adc
push
fdivrs
xor
jg
hlt
repnz
adc
cmp
dec
adc
jecxz
sbb
mov
pop
stos
cmp
je
mov
push
inc
xchg
jmp
cmp
xchg
sbb
cld
lods
xchg
mov
test
hlt
inc
mov
cld
mov
xor
outsb
adc
pop
js
shll
push
je
dec
mov
add
imul
cmc
hlt
enter
cs
inc
push
or
push
int3
lds
cmp
xchg
xor
adc
test
inc
fildl
mov
push
divb
mov
fs
adc
push
popf
fisttpll
adc
mov
outsl
jns
push
sub
fs
rcrl
cltd
or
pop
fbstp
in
imul
insb
das
jb
hlt
xchg
js
xchg
aam
fsub
bound
adc
and
or
dec
fstp
push
test
leave
sub
xchg
mov
mov
sub
adc
ja
jnp
addl
lock
repnz
jecxz
ret
sbbl
outsb
jb
daa
xchg
sub
dec
das
jge
hlt
pop
mov
push
test
mov
jae
in
ret
xchg
imul
in
lods
pop
mov
shl
xchg
jb
pop
sbb
ljmp
dec
es
pop
xchg
andps
out
clc
movsl
push
dec
mov
inc
mov
std
mov
fwait
test
adc
dec
arpl
jecxz
jbe
mov
add
bound
xchg
adc
xor
out
mov
sbb
sbb
and
mov
aad
hlt
pop
push
push
xlat
adc
iret
xor
cmpb
xchg
cli
mov
mov
jae
xlat
adc
xchg
ds
test
jl
mov
push
and
js
fnsave
and
cmp
je
orl
and
int
sbb
add
and
cmpb
mov
inc
sub
neg
jae
mov
mov
sub
jnp
xchg
jnp
mov
lds
lock
fldt
cld
mov
call
inc
lock
sbb
jmp
jle
enter
ror
ss
and
gs
xor
jo
jmp
popa
add
push
mov
das
pop
jge
testl
iret
xor
int3
mov
mov
lcall
inc
inc
js
cli
add
dec
sbb
sahf
ror
out
xchg
mov
mov
frstor
inc
aam
movsb
and
mov
or
sbbb
sbb
mov
aam
jns
out
neg
xchg
xchg
mov
or
clc
pop
dec
add
sub
in
cmc
fisubrl
inc
mov
adc
adc
pop
mov
or
movsl
mov
mov
add
iret
pop
jg
xchg
add
fwait
mov
mov
dec
xchg
xlat
je
mov
and
jns
outsb
adc
or
dec
and
dec
jnp
xchg
fs
mov
stos
sub
out
jmp
loop
and
pop
pop
push
adc
dec
pushf
jnp
dec
pushw
cmp
inc
lods
sub
jne
jo
inc
xchg
jne
inc
aam
sbb
popf
lock
jp
jecxz
push
daa
mov
mov
sbb
pop
push
xchg
xor
sbb
iret
je
ds
sbb
aas
inc
test
inc
jne
clc
ljmp
inc
jns
mov
fldt
movsb
cmp
out
cmp
mov
ljmpw
and
ss
sarl
cli
call
sub
divb
cmp
sub
int
mov
xor
ret
enter
adc
sub
faddl
push
and
mov
outsl
scas
xchg
lock
addr16
ja
gs
call
sarb
shlb
jbe
and
and
scas
in
xchg
mov
fstl
notl
mov
push
push
addr16
in
push
xchg
fdivl
dec
sbb
jg
ss
or
stc
adc
outsb
mov
mov
adc
enter
add
pop
mov
jge
movsb
sahf
shrb
mov
fscale
imulb
sti
push
and
pop
and
ret
xchg
hlt
lcall
mov
jno
pushf
pop
sub
rcrb
jbe
add
cmpsb
int3
xchg
loope
mov
pop
add
shlb
or
cli
inc
insb
add
in
mov
inc
cmpsb
mov
popl
and
add
mov
sti
aas
dec
pusha
sbbl
and
pushf
arpl
shll
jnp
repnz
cmp
cmc
cmp
test
xor
pop
push
test
dec
dec
loopne
ljmp
xchg
test
leave
dec
cmp
stos
xchg
pop
mov
adc
lea
sti
mov
decl
push
rolb
inc
aaa
movsb
push
out
shl
lock
test
jp
and
adc
pop
sbb
mov
mov
xlat
mov
inc
xchg
xorl
sub
xlat
test
xor
cmc
enter
sub
aam
adc
cmp
mov
dec
or
adc
lods
lahf
adc
mov
pop
push
lret
dec
inc
xor
and
lcall
xchg
btr
jecxz
ror
pop
in
pop
fs
sbb
or
pop
cmp
int
movsl
fs
leave
sti
or
mov
or
xchg
ret
mov
mov
lahf
xor
stc
test
pop
and
jl
xchg
push
outsb
push
test
in
in
scas
push
dec
idiv
fmul
mov
cs
sub
pop
mov
sar
ss
outsl
jo
fdivrs
xor
inc
adc
out
push
mov
pop
pop
xchg
add
add
and
loop
daa
pop
lcall
pushf
orl
jp
or
outsl
inc
scas
dec
lds
mov
mov
fidivrs
into
inc
sub
dec
out
pop
jbe
sahf
push
add
lock
sub
sbb
lods
dec
fsubrs
shlb
push
xchg
clc
or
dec
ror
mov
sub
sarl
pop
int3
push
push
mov
iret
mov
adc
fs
pop
mov
faddl
sbb
pop
addb
icebp
outsl
jecxz
ja
dec
fwait
dec
sbb
scas
imul
mov
pushf
shrl
mov
enter
aad
or
insb
mov
stc
xor
sarl
ss
sbb
adc
stos
push
sub
hlt
and
cmp
xchg
or
mov
or
pop
test
enter
jnp
push
arpl
stos
pop
dec
xchg
xchg
rcrb
push
sub
mov
xor
imul
adc
xor
addr16
jmp
call
vcvtps2dq
xor
xchg
and
in
lcall
scas
into
cmc
and
push
je
pop
lods
sub
dec
insl
imul
inc
pop
xor
pushf
mov
sbb
arpl
movsl
mov
fimuls
lods
pop
mov
push
adc
dec
push
insl
fistl
sti
jge
scas
inc
stos
clc
mov
and
adc
push
sub
adc
into
scas
stos
add
cwtl
push
inc
mov
cmp
xchg
stc
and
pop
mov
dec
decb
fcmovnu
jl
mull
ds
xorb
lret
sbbl
into
aam
iret
add
fwait
dec
pop
out
mov
xchg
adc
xor
sub
push
mov
int
dec
out
mov
add
add
pop
sub
sahf
aas
adc
leave
mov
xor
test
shlb
push
imul
out
jae
xor
cmp
sahf
push
mov
mov
mov
adc
ffreep
xor
ljmp
adc
popl
dec
push
jg
clc
fstpt
mov
adc
mov
inc
loop
sahf
lahf
cs
stc
scas
lock
jg
aam
add
daa
mov
lods
pop
loope
adc
lea
xor
inc
int
mov
lock
jnp
fldenv
sbb
shl
int3
mov
leave
cmp
test
cmp
jns
inc
inc
sub
ljmp
push
add
dec
pop
sub
hlt
jbe
push
inc
stc
in
js
outsl
fmull
sbb
scas
jae
sub
insl
inc
test
inc
test
arpl
mov
inc
jns
push
out
aaa
pop
mov
cltd
mov
cs
mov
das
fidivl
repz
or
test
pop
push
iret
loop
cld
shrl
jle
mov
xor
jo
stos
push
and
mov
adc
cmp
icebp
xor
in
in
or
mov
lcall
mov
frstor
ljmp
adc
rorb
push
xchg
jo
xchg
lods
inc
push
jno
cmp
imul
pop
in
mov
pop
mov
hlt
or
imul
xlat
rcl
iret
and
lea
cmp
push
jg
rcr
stos
scas
mov
dec
hlt
xor
popf
jecxz
mov
mov
std
jb
inc
cmp
mov
xchg
ror
mov
imul
in
scas
out
and
push
pop
jmp
inc
add
xor
mov
lret
inc
and
jne
pusha
xchg
sbb
not
adc
incl
loopne
and
lret
mov
push
cli
outsb
xor
js
adcl
jns
movsl
adc
ds
out
gs
cli
arpl
sbb
push
mov
rclb
fmull
daa
insl
repnz
testb
inc
jecxz
or
out
dec
cmpsb
pop
mov
xor
fstl
inc
cld
lock
inc
cmp
aaa
cmp
sbb
test
jecxz
mov
sbb
lock
cmpsl
sahf
push
dec
out
test
ss
jne
insb
sbb
adc
popf
daa
out
rorl
ds
aam
cmpsb
aas
pop
in
cwtl
loope
lret
test
das
sbb
dec
push
fcomip
cs
loop
loopne
movsb
in
mov
lods
into
stc
mov
xchg
ret
std
mov
cmp
ljmp
in
inc
enter
sbb
cmpsl
pop
adc
test
sub
pop
add
add
out
adc
xor
out
loop
aam
in
xor
mov
or
arpl
pop
mov
call
dec
addl
ds
mov
test
movsl
inc
ss
in
pop
sub
xchg
pop
push
and
lret
add
sarb
movsb
mov
leave
or
insb
dec
mov
sbb
dec
orb
cltd
mov
cmc
xor
jge
bound
dec
lcall
data16
ror
dec
inc
mov
xor
pop
mov
in
mov
divb
xlat
pop
je
inc
xchg
fadds
cmp
sub
pop
ret
mov
jae
inc
ret
push
std
mov
mov
data16
imul
jl
in
loop
xchg
movsl
adc
adc
lret
lret
inc
add
push
call
jp
xchg
or
enter
adc
xlat
pusha
dec
loop
push
mov
push
push
adc
ss
loope
cmp
test
movsl
or
dec
cmp
mov
pop
pop
lds
sahf
and
xchg
mov
aad
add
sbb
xchg
into
int
adc
or
outsb
roll
cwtl
call
jmp
push
sahf
mov
cmpsb
jmp
mov
clc
inc
insb
sbb
es
dec
loope
or
mov
jnp
push
lods
mov
cmp
stos
sarl
pop
insl
fsubl
call
ja
test
faddp
mov
outsb
call
mov
fadds
push
jle
adc
inc
aad
jne
sbb
adc
mov
pop
jbe
test
adc
pop
dec
repz
stc
or
lar
ret
test
pop
inc
seto
fsubp
out
xor
push
jmp
int
movsb
outsb
addr16
push
mov
or
pop
gs
dec
push
pushf
fdivrs
insl
inc
les
mov
pusha
xor
dec
rcll
fdivrs
jecxz
cmp
and
add
stos
imul
fnstenv
mov
dec
sbb
daa
or
fistps
adc
mov
das
shr
repz
nop
push
push
scas
pop
cmpsb
pop
mov
lock
jge
pop
dec
sbb
out
lods
flds
mov
xchg
jecxz
lcall
push
jno
or
loope
in
jnp
sbb
lock
cwtl
lret
rolb
stos
loop
aad
arpl
xor
xchg
pop
outsb
dec
add
bswap
lock
lret
push
xor
dec
jg
mov
cwtl
cwtl
and
mov
and
cmp
stos
and
out
cld
sbb
xlat
inc
or
jg
pop
insb
ret
movsb
int
inc
loop
mov
ss
cmp
es
mov
xlat
cmp
pop
pop
scas
cmp
mov
add
push
mov
pop
andl
mov
gs
repz
imul
jecxz
xor
sti
push
decl
adc
in
test
mov
mov
fwait
orb
mov
dec
push
inc
xchg
cltd
repz
cli
mov
add
xchg
add
push
ret
xor
jmp
mov
aam
sti
or
or
fsubrs
lahf
int3
mov
jmp
imul
mov
cmp
fdivrl
ss
push
mov
iret
jmp
jbe
add
push
push
mull
arpl
inc
inc
mov
lods
arpl
lcall
mov
inc
mov
out
xlat
daa
adc
pop
jae
movsb
xor
fadds
xor
aad
xor
inc
and
add
mov
mov
popf
sub
mov
xor
repz
stc
or
call
jle,pn
loop
xchg
mov
mov
in
push
and
and
sbb
sub
pop
jmp
in
jb,pn
imul
lock
insl
xor
aaa
xchg
mov
sub
test
sbb
out
sahf
rol
insl
test
gs
inc
pusha
stos
xchg
imul
adc
lcall
xchg
jp
inc
add
inc
in
add
dec
add
lret
mov
movsb
test
imul
xorl
or
ljmp
mov
outsb
es
lea
inc
jno
xor
pop
cmpl
pop
test
push
jb
push
imul
fsubrl
rorb
test
mov
add
or
jmp
pop
dec
sbb
inc
movsl
sub
dec
lahf
or
imul
mov
and
fwait
xor
xchg
mov
and
sbb
mov
test
cmp
mov
aam
jnp
or
push
push
lret
sti
test
xor
test
or
fcompl
push
mov
je
inc
scas
dec
outsl
scas
inc
bound
call
cltd
insb
pop
shrl
scas
rorl
clc
arpl
and
pop
stos
das
sbb
cmp
fdivrl
sub
pop
xchg
nop
xchg
push
addr16
pushf
ljmp
jg
xchg
adc
mov
xchg
insb
aaa
push
mov
mov
lret
pop
add
daa
push
push
ss
push
mov
in
imul
sub
dec
push
mov
inc
xchg
bound
pop
outsb
push
sarb
mov
sub
jle
pushf
rolb
enter
mov
cli
cmp
popa
add
jge
repnz
push
or
jg
ss
or
inc
sub
lods
fmulp
fmulp
cwtl
inc
aad
aas
sub
dec
pop
ljmp
cmpsl
mov
inc
mov
fnstcw
in
xor
jae
in
gs
jae
stc
pop
lcall
gs
xchg
