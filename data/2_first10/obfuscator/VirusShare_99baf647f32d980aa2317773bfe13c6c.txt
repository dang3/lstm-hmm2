add
add
add
add
xor
add
jo
add
rolb
add
inc
add
addb
add
sub
jge
add
add
add
add
add
add
dec
add
addb
add
sub
jge
add
add
add
add
add
add
pusha
add
add
add
add
pop
jge
add
add
add
pop
add
sldt
mov
sldt
loopne
add
or
add
xor
add
pop
add
cmp
add
addb
addb
add
test
add
sub
jge
add
add
add
add
add
add
rolb
add
mov
add
add
pop
jge
add
add
add
add
add
add
clc
add
add
add
rolb
add
sub
jge
add
add
add
add
add
add
and
add
adc
add
sub
jge
add
add
add
add
add
add
dec
add
add
cltd
add
mov
add
sub
jge
add
add
add
add
add
add
jo
add
mov
add
in
add
sub
jge
add
add
add
add
add
add
cwtl
add
add
add
sub
jge
add
add
add
add
add
add
rolb
add
mov
add
sub
jge
add
add
add
add
addb
xor
add
sbb
add
sub
jge
add
add
add
add
add
add
or
add
mov
add
add
pop
jge
add
add
add
add
add
add
xor
add
mov
add
pushf
add
add
pop
jge
add
add
add
add
cmpsb
add
sbbb
addb
add
sub
jge
add
add
add
add
add
add
jo
add
dec
cmpsb
add
adc
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
int3
fnsave
outsb
gs
imul
roll
rolb
cmp
jmp
mov
in
mov
lea
push
xor
fbld
push
cld
dec
loopne
sarl
adc
ljmp
sbb
shrb
movsb
add
mov
movsb
mov
lds
sub
in
mov
pop
add
ret
xlat
popa
adc
fimull
mov
sub
adc
daa
push
frstor
push
fsubrs
pushf
out
imul
ret
mov
roll
mov
mov
sti
aaa
xor
cmp
into
ret
aam
mov
sbb
mov
incl
cmp
rol
out
cmpl
hlt
push
push
in
mov
data16
repnz
daa
jl
popa
arpl
movsb
fnstenv
lcall
and
mov
push
inc
add
mov
mov
mov
add
push
push
call
popa
rcl
ret
loope
mov
xlat
adc
ror
pop
outsl
ljmp
push
pop
xchg
sbb
test
inc
adcb
insl
sbb
mov
lcall
mov
orb
movsb
add
subb
dec
dec
sbb
sbb
mov
push
sub
push
or
call
enter
pushl
stos
dec
mov
add
mov
stc
mov
mov
lcall
nop
loope
adc
js
push
jo
lods
cltd
mov
pop
sbb
push
push
jbe,pt
pop
push
inc
cmp
and
pusha
hlt
into
sub
and
outsl
das
lock
addr16
pop
repnz
adc
xchg
fs
sub
inc
cltd
mov
out
lahf
jg
es
inc
push
js
push
pushf
hlt
add
mov
loopne
aas
sub
vmovups
movsl
aad
dec
leave
inc
imul
mov
sti
mov
daa
mov
sbb
std
idivb
add
jns
shrl
and
divl
pop
enter
iret
insl
pop
int
repnz
dec
mov
xchg
loopne
or
imul
movsl
leave
pushf
imul
mov
mov
adc
fstpl
testb
loop
push
xchg
mov
xor
sub
divl
jb
mov
daa
mov
adc
rorl
sahf
les
lret
addl
mov
and
repnz
xchg
add
adc
cmpsl
dec
stc
push
out
aaa
popa
mov
xchg
pop
xchg
mov
lods
dec
or
scas
lock
mov
lcall
scas
jle
aaa
xlat
clc
das
fbld
js
pop
inc
dec
jno
sbb
call
jp
add
or
fsubl
sub
pushf
lods
leave
xchg
cwtl
cmpb
scas
lods
aad
adcl
fs
dec
xchg
ja
cmp
push
or
lret
lcall
addr16
mov
jle
mov
pop
outsb
or
sahf
loope
cld
test
sub
add
test
insb
xchg
jae
enter
xchg
aad
xor
mov
jg
rolb
js
scas
sahf
lds
dec
out
cmp
das
add
call
jae
test
mov
sbb
in
jmp
shll
lret
xchg
aad
sbb
pop
pop
add
and
and
popf
and
add
push
add
fstps
fs
imul
lods
dec
cmp
imull
bound
mov
popf
std
jne
andl
lds
ret
rorb
mov
xor
sbb
cmp
pop
inc
aad
scas
add
cs
add
in
dec
loopne
fcom
dec
ljmp
mov
inc
clc
rolb
xor
push
or
pop
cltd
jg
and
xor
aam
xchg
dec
lock
push
fbstp
mov
dec
aad
in
push
jae
jge
mov
push
int3
xor
lods
adc
mov
ret
mov
cmc
rcrb
lods
fnstcw
and
xchg
push
xor
lea
or
dec
mov
test
in
imul
mov
adc
daa
lds
iret
jne
sub
pop
and
push
jae
leave
test
fnsave
outsl
js
out
xchg
fiadds
pop
ds
cmp
outsl
sbb
inc
or
or
or
mov
in
push
sbb
jmp
jae
pop
jno
pop
pop
into
mov
sbb
pushf
add
pop
mov
fdivs
jns
out
insl
test
dec
mov
sbb
and
lea
mov
xor
rorb
push
jnp
pop
pushf
mov
iret
cmpsb
mov
stc
dec
adc
cwtl
xor
fmulp
mov
test
xchg
repnz
cwtl
xor
js
test
movsl
or
inc
mov
lea
mov
ljmp
lcall
dec
mov
cmpsb
les
lcall
inc
adc
es
dec
mov
cld
or
stos
xchg
inc
sbb
loopne
xor
push
shll
mov
pushf
insb
jle
dec
add
fmull
inc
and
gs
cmp
sub
in
hlt
mov
pop
test
daa
pop
xchg
fisubs
movaps
inc
jg
adc
movsb
cmp
or
cs
xchg
jnp
push
mov
mov
in
sub
mov
jno
scas
adc
test
or
clc
test
and
insl
or
sbb
jl
mov
add
sbb
sti
scas
xor
or
or
test
subl
aad
movsb
mov
pop
clc
mov
and
gs
mov
inc
sub
mov
into
pop
es
inc
mov
into
andl
or
pusha
lods
popf
mov
inc
dec
sub
movsl
fs
mov
icebp
xlat
insb
notl
cmpb
int
add
je
dec
jo
lods
dec
adc
aam
cmpsl
insl
fdiv
test
pop
in
dec
cmc
lods
es
push
ret
decl
lea
push
xchg
outsl
inc
inc
jno
push
je
iret
scas
mov
jle
fwait
sub
cli
sub
scas
sti
call
jo
test
cltd
addr16
aas
lods
inc
mov
dec
mov
cmp
mov
mov
out
sbb
cmpsl
mov
test
rorl
adc
sbb
lds
jle
loop
out
scas
dec
in
pop
adc
adc
xor
or
repz
sahf
into
jbe
mov
std
push
loop
push
icebp
xchg
lea
ficoml
mov
xchg
xchg
in
cmp
dec
leave
pop
in
andl
cmp
or
je
mov
push
jmp
in
pop
push
icebp
fwait
pop
push
rolb
or
jno
fnstsw
xchg
das
insb
mulb
xchg
push
sub
xchg
pop
lret
and
add
movsl
and
and
xchg
mov
popa
add
rcll
dec
jecxz
std
cmp
fadds
jo
lods
jnp
pop
xchg
pop
mov
xor
imul
xor
or
inc
in
ja
push
shl
mov
test
add
adcb
jle
lods
push
mov
mov
push
aam
jl
jl
scas
fmull
jg
xchg
lods
adc
mov
sbb
repnz
mov
and
es
cwtl
fldenv
repz
mov
out
int3
mov
mov
lea
inc
jns
sub
inc
aad
sahf
lea
jmp
sbb
pop
stos
and
cld
xor
mov
test
movsb
dec
push
mov
out
out
notb
ljmp
cli
cmc
sti
jno
out
xchg
mov
sbb
cltd
add
inc
add
sub
fildl
out
push
pop
pop
xchg
sub
scas
inc
lret
pop
cmpsl
adc
inc
adc
cmp
popf
loop
pop
adc
aam
daa
or
push
xor
pusha
test
mov
idivb
enter
aam
adc
int
sbb
int
mov
pop
fs
mov
fcomp
lahf
fldenv
mov
mov
data16
pop
shll
clc
sahf
in
cmp
jbe
add
sbb
jo
adc
xchg
mov
out
out
push
adc
inc
lock
stos
push
cmp
pop
mov
stc
mov
push
xchg
sbb
mov
xchg
icebp
inc
das
std
or
inc
movsl
pop
les
mov
inc
jbe
xor
lret
das
xchg
clc
int3
dec
enter
pusha
dec
push
push
sti
cmp
cmp
xor
les
xchg
icebp
orb
subl
mov
out
jns
dec
out
lcall
fwait
and
push
out
push
jl
imul
sub
mov
and
stos
and
and
fwait
nop
xchg
or
sub
push
mov
and
pop
js
lods
xchg
pop
mov
fisttpl
call
sbb
jp
jno
pop
enter
pop
lret
ret
leave
cmp
pop
sub
sub
and
in
repz
mov
cli
jnp
mov
out
jecxz
rcrb
repz
mov
push
test
aam
lahf
out
test
lahf
xlat
in
rcrb
push
imul
outsl
mov
adc
push
in
lret
setno
ficoml
fisttpll
xchg
aas
cmp
insb
sbb
out
test
and
lret
add
fisttps
inc
add
push
xchg
test
js
cmpl
test
jnp
sbb
stos
lock
std
int
pushl
jno
sbb
outsl
dec
inc
jnp
sbb
xlat
aaa
addb
push
inc
loope
fidivl
sbb
fldenv
cmovae
pushf
adc
std
loope
add
cmp
xlat
insl
hlt
xchg
pop
je
dec
xchg
mov
aas
xchg
jmp
pop
in
or
mov
test
dec
aaa
pop
in
jle
pusha
clc
inc
mov
xchg
mov
and
or
scas
cli
mov
xchg
pop
adcl
mov
push
jecxz
pop
cld
fstps
ret
dec
pop
mov
mov
mov
jae
jg
adc
or
sbb
dec
cwtl
sarl
hlt
ds
std
pop
mov
xchg
scas
jg
aaa
testb
jg
push
es
push
and
pop
pop
mov
rolb
out
fcompl
scas
dec
mov
cmpsl
adc
enter
sbb
dec
fadd
xor
adc
cmp
insb
mov
pop
fisttps
fcoms
pop
jecxz
mov
idivb
insb
mov
nop
dec
or
lods
xor
enter
ja
mov
push
jbe
out
and
xlat
adc
dec
aas
andb
xor
sbb
push
jp
or
push
sub
jl
into
jp
jmp
data16
push
pop
in
push
icebp
xchg
gs
je
xchg
or
out
mov
pop
jno
int
mov
outsl
int
pop
push
mov
ja
and
imul
fsubrl
sbb
arpl
insb
pop
hlt
xchg
repnz
adc
lahf
ficoms
dec
adc
jge
adcb
dec
mov
jno
fdivrs
pushf
sbb
mov
fs
pop
out
inc
sub
jo
pop
push
mov
icebp
ja
sahf
call
iret
aas
lods
and
xor
jle
out
stos
jno
jo
loope
mov
cmp
gs
push
adc
and
jge
stos
add
addb
pop
and
mov
jno
cmc
mov
mov
xor
dec
push
dec
sub
lcall
or
fnstsw
dec
out
leave
dec
xor
rcll
xchg
cmp
cmp
mov
sti
pop
ja
sbbl
xchg
or
inc
fistps
push
lock
pop
std
andb
cmp
or
cmc
adc
mov
loop
xor
in
mov
xor
outsl
stc
lods
fidivs
test
lds
pop
test
pop
and
je
in
mov
sub
pop
testl
inc
mov
add
or
mov
lret
clc
pushf
dec
test
cli
ret
mulb
xchg
imul
sbb
cld
push
not
push
push
ljmp
mov
sbbb
and
jecxz
sbb
cmp
subl
leave
sub
lahf
mov
enter
inc
pop
or
fwait
out
mov
out
pop
xchg
jle
aaa
daa
xor
jle
jno
push
imul
sbb
notl
stc
inc
addb
jmp
xor
sar
aaa
daa
jae
adc
lret
push
ljmp
insl
push
xor
orb
jae
dec
shll
in
or
test
shrl
pop
hlt
scas
xor
inc
adc
xchg
not
inc
push
jp
xor
icebp
lea
hlt
cmpsl
mov
sub
aam
lods
inc
inc
pop
frstor
sti
cmpb
out
mov
int
push
pop
ret
mov
cld
sbb
xor
jbe
xchg
adc
push
insb
push
jno
loop
mov
xchg
xlat
mov
sti
outsl
and
mov
pop
int
xor
ss
add
scas
mov
lahf
jmp
or
cwtl
mov
cltd
hlt
jmp
das
mov
cmp
rcrl
dec
xchg
add
in
mov
pop
mov
fcomps
inc
inc
lret
fisttpl
rol
inc
push
out
and
dec
add
mov
cmp
imul
dec
test
adc
push
push
out
shrb
lods
mov
mov
test
rcrb
seto
das
jno
lcall
mov
sbb
xor
icebp
lcall
mov
pushf
js
wrmsr
popf
mov
test
and
mov
iret
aad
ds
movsb
xchg
test
pop
cmpsl
cmpsb
adc
xchg
push
arpl
hlt
push
xor
mov
xchg
and
mov
jp
testl
call
outsl
shrl
jbe
adc
jbe
cld
pop
cmp
imul
shll
pop
mov
mov
pop
mov
lea
inc
inc
mov
sub
cli
add
sub
cmp
mov
es
ror
mov
aaa
add
dec
scas
push
sti
adc
pop
pop
fiadds
mov
ds
jo
and
pop
sarl
rolb
add
cmpl
pop
mov
mov
int
nop
cmp
dec
push
clc
loopne
cld
pop
stc
lahf
pop
idivl
pop
rcrb
pop
jl
push
adc
jo
push
mov
sbb
pminsw
and
test
cmp
cmp
sub
iret
in
or
jmp
push
inc
and
dec
loope
lods
cmp
xor
flds
mov
cs
jbe
jo
mov
inc
cmp
std
fistps
cli
sbb
shll
mov
mov
cli
and
mov
cli
cmp
das
pop
cld
xchg
fwait
into
sub
add
in
lret
mov
scas
mov
das
mov
movsb
repnz
jl
sbb
sub
ja
out
and
hlt
ss
stos
add
scas
cli
mov
pushf
mov
mov
xor
mov
inc
pushf
cltd
lahf
jg
dec
mov
data16
mov
push
rcll
lret
jp
sti
repz
mov
cld
fiadds
inc
cmp
cvtdq2ps
lods
lods
sbb
sbb
xchg
orl
jmp
test
sbb
repnz
adc
inc
dec
hlt
ljmp
into
jmp
push
sbb
pushf
popf
and
hlt
mov
mov
add
xchg
out
testl
fbstp
push
pop
ds
mov
pop
mov
movsb
cmp
int3
rol
div
mov
push
jbe
ficompl
pop
cwtl
test
cmp
sbb
fsts
fwait
and
jae
pop
cli
cmc
pop
cmp
stos
pop
pop
mov
int3
mov
fneni(8087
xchg
push
jle
rcll
loope
ja
gs
pop
and
xor
lcall
sub
mov
and
xor
mov
add
inc
sub
roll
fistps
mov
outsl
sub
push
adc
cmc
cmp
inc
push
add
push
jp
mov
dec
arpl
add
loope
sub
daa
xchg
scas
jmp
sub
inc
mul
je
or
sub
daa
sbb
dec
adc
test
push
cmp
nop
and
daa
mov
jg
cmp
shll
sahf
xor
fcompl
mov
adc
inc
sub
lods
bound
sub
xchg
aam
aad
shll
das
sarl
clc
push
hlt
scas
ffree
dec
sub
adc
inc
or
cmc
repnz
enter
in
mov
daa
xor
lods
nop
daa
fwait
divl
fs
add
clc
pop
pushf
js
push
sbb
xor
js
pop
cli
pop
aaa
mov
imul
loopne
call
sub
js
int
cli
cwtl
insl
mov
fldcw
cwtl
xchg
jnp
inc
test
lods
les
jae
lds
mov
push
add
lret
push
hlt
scas
cmp
push
fists
sub
lea
xchg
inc
mov
sub
scas
dec
pusha
add
or
popf
mov
mov
aas
cmp
or
shll
cmp
dec
push
dec
pop
iret
sub
add
lods
pop
fwait
push
jno
jo
push
pop
in
jge
mov
inc
fxch
scas
jmp
mov
jmp
push
jnp
ss
mov
xor
xchg
xchg
push
aam
mov
pop
mov
jbe
std
dec
clc
in
pushf
rolb
repnz
sbb
addb
add
jge
or
dec
aas
adc
cwtl
fcomip
sahf
mov
inc
push
rclb
outsb
push
popa
push
and
sub
pop
shl
mov
jnp
cli
divl
fsubs
in
mov
xchg
and
shlb
mov
xchg
call
in
push
jns
add
mov
dec
or
sti
push
repnz
es
cmp
rcll
cmpsb
std
add
loope
insl
jo
mov
pushf
pop
xchg
xchg
outsl
outsl
jl
ficoms
popa
shrl
xchg
xchg
add
mov
xchg
subb
hlt
push
test
out
outsl
imul
loope
add
sbb
cmp
add
xchg
cmp
imul
and
push
ss
add
add
cmp
cmp
movsb
sbb
pop
jo
xchg
fdivp
dec
cwtl
ljmp
movsb
sub
dec
movsb
jnp
scas
jns
into
pop
fdivs
shll
push
lods
mov
pop
adc
sti
adc
lock
mov
fistl
xchg
lahf
fldenv
movsb
mov
adc
and
cmc
js
mov
rclb
ffreep
push
test
push
mov
imul
out
xchg
cmpsl
subb
cwtl
loopne
jnp
jns
outsb
stos
repnz
ss
stos
test
inc
xchg
sbb
rcr
cli
sarb
loope
icebp
mov
mov
mov
or
xor
cmpsb
add
stc
and
mov
into
cltd
adc
scas
dec
xor
adc
loop
loopne
inc
sbb
loope
push
dec
mov
xchg
push
popf
popa
test
xor
lret
js
ds
rcl
jle
and
adc
test
and
leave
bound
out
and
mov
imul
outsl
inc
mov
and
out
sbb
pop
pop
and
inc
cmpsl
rorl
in
or
push
sub
in
ja
adc
sbb
sbb
inc
xchg
cmp
push
cmc
in
mov
mov
mov
xor
or
rcll
pop
lods
lcall
cmpsl
lock
inc
push
xchg
or
repz
mov
inc
ss
mov
out
roll
xor
mov
out
sub
sbb
mov
leave
test
aaa
fwait
adc
pop
out
out
inc
or
daa
pushf
mov
adc
scas
aad
sbbl
hlt
outsb
jge
scas
std
xchg
and
insb
cmp
mov
cmpsb
movsl
ljmp
xchg
cs
sbb
xor
and
imul
in
adc
xchg
repnz
scas
bound
pop
jbe
adc
dec
cmpsb
adc
mov
sub
outsw
sub
xor
mov
jb
jp
mov
insb
lcall
in
jmp
cmp
pop
mov
jb
pop
aaa
jle
sub
shlb
scas
loope
push
clc
cmp
subb
mov
insl
dec
cmpsb
movsb
leave
mov
cwtl
jne
cmp
je
and
cmpsb
imul
in
cmc
outsb
cmc
dec
stos
fucomp
ja
ds
int3
and
lds
mov
mov
pusha
dec
iret
pop
mov
pop
push
sub
and
push
jmp
sub
rcrl
pop
dec
xor
outsl
cmpsb
out
xor
pop
push
das
jge
nop
and
and
pop
fdiv
movsb
idivb
jmp
inc
test
jge
sti
mov
scas
add
cmpl
jnp
fadds
mov
mov
xchg
fwait
imul
sbb
ret
lods
cli
push
xor
pushf
dec
les
mov
stc
mov
mov
add
sub
loope
into
jl
mov
xor
lods
repnz
mov
inc
and
dec
outsl
lret
mov
scas
imulb
mov
mov
into
sub
ret
ret
jbe
push
repnz
inc
mov
rcrb
jae
add
shll
jb
les
in
ret
xchg
shll
inc
ret
jo
xor
test
mov
mov
xchg
xlat
lahf
test
push
adc
push
loopne
sbb
lcall
stc
inc
mov
xchg
roll
dec
lcall
fadds
loope
add
pushf
clc
add
add
js
push
in
sub
sbb
xchg
scas
int3
pop
mov
pop
inc
enter
mov
jecxz
scas
mov
daa
jne
scas
iret
faddl
sbb
sbb
add
xor
std
jae
mov
xchg
inc
add
push
iret
out
and
jbe
inc
out
out
jle
jae
xchg
fwait
or
adc
cmpsb
push
out
or
popf
lret
test
shll
jb
icebp
mov
and
add
mov
ja
scas
orb
xchg
or
loopne
std
std
mov
cld
cmp
push
out
enter
push
mov
sbb
mov
mov
push
cld
xchg
xchg
cmpsl
or
xchg
outsl
ss
aaa
dec
fld1
subl
xchg
sub
mov
es
stos
push
mov
loop
push
sub
adc
loope
cmpsb
js
jns
cmp
scas
adc
cmpb
jne
pop
mov
xor
jle
fwait
nop
mov
movsl
adc
test
pop
inc
cmp
adc
pushf
mov
je
add
cmpsl
mov
arpl
jns
les
xchg
lock
pop
ret
adc
mov
arpl
lock
cmp
xor
or
dec
arpl
addb
inc
or
dec
into
test
aas
add
pusha
pop
xor
mov
bound
lcall
mov
push
lods
pushf
in
sub
in
jle
imul
pop
mov
or
xchg
and
xor
mov
adc
fxch
ja
test
popf
mov
es
xchg
pop
mov
or
xor
push
gs
mov
mov
mov
cmp
inc
pop
outsl
fldenv
or
push
mov
leave
xchg
adc
insl
leave
call
popa
mov
test
out
scas
aad
mov
js
dec
and
scas
lahf
cmpsl
pop
sub
ret
movsl
out
jg
push
fldcw
lcall
mov
dec
cmp
inc
pop
roll
cmpsb
out
mov
test
jecxz
xchg
loop
dec
add
stc
data16
mov
into
out
ret
pop
orl
mov
das
sub
loop
dec
ljmp
push
sahf
clc
xor
sub
mov
sub
xchg
xchg
adc
lock
sti
mov
cwtl
xor
arpl
push
subb
and
aam
sub
push
adc
sub
jl
dec
push
mov
shll
cli
add
es
daa
jle
mov
mov
jb
rclb
push
dec
cmp
pop
mov
or
cmp
push
dec
repz
test
sbbb
int
mov
mov
jne
enter
in
insb
jno
mov
lea
sbb
dec
sub
jns
cld
loopne
inc
pop
cmp
xchg
popf
loop
jmp
cmp
outsl
mov
movsb
ret
sahf
lds
mov
test
lret
jge
das
insl
xchg
push
fcompl
mov
popf
push
cmc
sbb
or
arpl
and
daa
lds
push
gs
ret
sar
stos
cwtl
jmp
push
cs
xor
adc
loopne
scas
mov
imul
sbb
repnz
xlat
or
pop
adc
test
xchg
push
stos
cs
or
sub
pushf
sub
scas
cmp
out
inc
outsb
ja
divb
xchg
sbb
ss
mov
arpl
xor
push
dec
fcompl
pop
lcall
ficoms
fsubl
sti
jecxz
lock
fsubp
adc
and
pop
xchg
das
jae
aam
stos
cli
adc
or
cmpsl
daa
cwtl
pop
dec
lret
fstl
and
adc
dec
lcall
xor
fwait
mov
xchg
dec
jmp
stos
andb
mov
lods
scas
xchg
fsubrs
in
int
lcall
js
fs
fs
in
pop
lds
out
aas
cmpsb
inc
sub
jns
pop
sbb
mov
out
jne
xor
ja
stos
mov
mov
test
xchg
xchg
arpl
orl
xchg
push
sub
mov
add
inc
pop
xor
and
mov
rcrb
jge
in
test
cld
fidivs
cwtl
push
add
outsb
mov
andw
push
rclb
pop
mov
sub
arpl
inc
sub
mov
loope
dec
add
sub
fwait
iret
aaa
sbb
gs
xor
or
inc
mov
mov
test
lret
loopne
jnp
popf
xchg
sub
jbe
ljmp
scas
mov
sbbl
pusha
add
movsl
test
mov
mov
enter
sbb
pop
iret
hlt
enter
sub
stos
jns
in
lods
popf
lods
insl
add
xlat
jmp
sarb
bound
push
push
sti
mov
adc
in
lcall
scas
cld
pop
push
inc
je
xor
int
or
pop
fadds
fsubl
push
cmp
jnp
cwtl
aaa
jo
stos
mov
push
or
adc
clc
fdivrs
xchg
push
insl
ss
nop
sbb
or
dec
into
dec
imul
ret
mov
mov
cmp
inc
cmp
popf
jnp
aam
andl
cmp
sub
bound
stc
test
jbe
cli
outsb
sub
mov
xor
mov
sbb
sbb
sub
dec
push
out
out
shrl
pop
fimuls
nop
mov
add
mov
mov
pop
fyl2xp1
iret
adc
in
mov
cmp
mov
fsubl
mov
lret
mov
ror
popa
mov
lea
in
mov
out
imul
test
shl
xchg
fwait
sub
sbb
xor
jecxz
popf
pop
sub
out
mov
lds
or
repnz
sahf
aas
addr16
sbb
add
movsl
inc
loop
inc
bnd
jb
fchs
es
xchg
cmp
dec
nop
or
push
cmp
xchg
pop
pop
sub
sbb
dec
push
pop
lock
mov
and
loop
and
cmp
ljmp
mov
out
xchg
inc
mov
movsl
insb
xchg
aaa
sub
lret
bound
and
mov
and
add
call
icebp
fstl
pop
popa
sub
sub
xor
or
fwait
cmpsb
das
mov
je
push
pop
mov
addr16
push
loope
mov
pop
cmpsb
cmpsl
movl
push
xor
ja
xchg
cld
in
fsts
pusha
cld
shrl
mov
inc
shll
test
sub
lret
test
push
adc
addr16
xor
bndldx
add
pusha
rcll
sbb
lock
cmp
push
sahf
hlt
and
lret
mov
imul
push
ds
push
dec
loope
int3
je
dec
adc
sub
jmp
lds
xchg
mov
xor
icebp
hlt
push
cmc
cmp
sbb
das
jl
out
std
or
loope
sahf
sti
pop
outsb
mov
aaa
mov
sub
mov
inc
popf
stos
jne
cmc
pop
in
xchg
es
sub
lret
jns
int
rorl
push
pop
xlat
mov
mov
push
jl
pop
jmp
sbb
repnz
rorl
call
inc
jge
in
add
je
stc
cmc
icebp
pop
xor
or
out
popa
repnz
sub
sti
adc
insl
ret
sub
xchg
mov
loopne
int3
cmp
rcr
jmp
mov
cwtl
xchg
and
or
inc
add
jno
jl
sub
pop
icebp
test
mov
leave
inc
fcmovu
daa
imul
enter
fbld
arpl
and
or
enter
cmc
sub
pop
fwait
sbb
lock
mov
push
cmp
xchg
arpl
pop
mov
add
jmp
pop
dec
inc
aaa
nop
jp
out
pop
jo
inc
dec
adcl
and
cmpb
inc
jmp
lods
inc
push
clc
add
test
mov
or
nop
inc
movsb
fsubs
cli
jle
xchg
ret
sbbl
out
lock
xor
cmp
sbbl
inc
adc
sbbl
sbb
pop
lret
fisttpll
lret
xor
xchg
iret
inc
inc
in
add
adc
inc
push
mov
mov
and
popf
or
jne
insl
into
out
xchg
push
aam
into
addr16
or
pop
cmc
push
adc
out
and
jl
dec
or
add
xlat
xchg
clc
scas
clc
jmp
inc
shll
cmpsl
orl
fcmovnbe
add
arpl
fcoms
sub
insb
dec
cmp
rcrb
out
clc
call
test
lods
xchg
adc
sub
mov
ja
push
scas
xchg
mov
jne
mov
jo
xchg
sub
inc
adc
inc
enter
cmpsl
scas
fbstp
cltd
jne
and
jns
sub
dec
push
sbb
lret
scas
stos
or
jmp
cli
testl
mov
mov
pop
push
mov
or
push
fisubrs
jbe
out
xchg
push
push
xchg
inc
ret
and
mov
or
ss
jmp
push
fbld
sbb
mov
xlat
shlb
xchg
lea
mov
outsb
mov
das
push
adc
mov
cmp
xor
les
movsl
pop
jmp
inc
mov
or
iret
xor
and
dec
ds
aad
cmp
push
dec
in
dec
jp
add
fucomi
out
gs
ret
dec
and
imul
jae
mov
mov
adcb
cwtl
ljmp
sbb
fwait
push
jmp
rorl
jp
and
sbb
fs
into
push
and
push
dec
jle
fldcw
std
mov
jmp
leave
js
and
mov
stos
push
fsubr
mov
loopne
cmc
push
push
nop
arpl
lods
inc
sub
push
pop
adcl
sbb
mov
pop
leave
sar
repnz
push
xor
and
lahf
jmp
push
filds
movsb
push
shl
subl
sub
cmp
aam
loop
paddsb
jne
mov
mov
lcall
dec
jnp
cmp
push
jl
loop
jl
nop
fstps
or
or
addb
dec
in
inc
jb
pushf
aaa
sbb
and
shrl
xor
jo
sub
inc
rolb
cmp
xor
sbb
jns
stos
xchg
sub
push
and
mov
cmp
push
scas
push
or
cs
ljmp
ja
enter
inc
lcall
adc
pop
mov
pop
mov
pushf
call
out
sbb
lds
test
movsb
xor
loop
push
imul
mov
mov
pop
xor
scas
repnz
test
or
sbb
stos
and
addr16
and
aas
pop
test
sbb
ss
js
mov
imulb
jecxz
add
int3
add
add
out
mov
adc
lret
xchg
xor
roll
cmp
and
cmc
inc
push
pop
dec
sahf
jg
cmp
cld
ss
ud1
push
frstor
mov
lahf
mov
es
mov
mov
jnp
rorb
fcomps
or
push
testl
adc
add
out
leave
lahf
or
push
adc
cli
das
fnstcw
lods
loop
lahf
dec
sub
and
ljmp
call
incl
pop
mov
out
push
push
mov
push
repnz
sbb
loop
inc
jno
in
pop
pop
in
or
loop
jae
add
mov
iret
imul
mov
jmp
arpl
sub
lds
adc
mov
ja
int
in
jg
cmp
mov
adc
jbe
inc
xor
inc
outsl
lods
pop
sbb
pusha
cmpsb
nop
push
dec
sub
aas
push
dec
lahf
pop
cmp
pop
mov
rcll
fwait
jg
fidivs
out
leave
jb
sbb
jns
inc
mov
ljmp
movb
inc
mov
dec
sub
inc
inc
and
sbb
inc
mov
pop
cld
pop
sbb
rcr
fstpl
repz
xchg
and
push
jnp
inc
pop
pop
int
inc
xchg
push
pusha
adc
fisubrs
mov
mov
bound
jnp
in
stc
in
sub
inc
xor
jae
cmp
mov
pushf
fwait
pop
mov
call
inc
inc
fcompl
push
imul
lds
or
push
push
push
out
dec
jle
jne
rcl
std
mov
add
bound
mov
add
sub
cltd
notb
outsl
inc
adc
cmp
inc
std
scas
jge
cmc
out
mov
or
outsb
pushf
notb
push
mov
adc
mov
call
rorb
mov
adcb
pushl
mov
je
xchg
xchg
and
sub
outsl
cmp
sub
arpl
xchg
lahf
pop
ficoms
mov
mov
cli
sahf
and
xchg
jp
cs
add
mov
fdivl
push
outsb
pop
and
sarb
dec
push
jecxz
jp
leave
aad
jge
add
push
call
stc
lea
pop
fstps
xchg
and
testl
into
inc
sarb
pop
cs
jge
and
ret
push
stos
jnp
idivb
adc
xchg
ret
mov
mov
sarb
mov
mov
test
shl
cli
jo
mov
pusha
inc
ss
push
add
lret
pop
mov
jl
or
jb
xchg
outsl
dec
repz
aaa
sbb
cld
movsl
ret
xchg
sub
mov
dec
pop
movsb
push
arpl
add
jno
shlb
jno
mov
lret
in
scas
rorl
cmp
jns
enter
sub
mov
inc
or
or
shlb
cmp
lods
pop
ljmp
adc
pop
mov
pop
rorb
int3
sbb
jp
repz
cmp
lea
pop
and
pop
shr
adcb
sahf
shrl
sbb
adc
outsl
stc
pop
xorb
inc
lds
push
sbb
sbb
push
call
cltd
pop
mov
and
repnz
pop
dec
inc
stos
xchg
loope
and
stos
push
mov
out
outsb
idivb
sub
dec
test
mov
mov
test
outsb
xchg
and
pusha
call
add
ja
les
xchg
push
sahf
dec
fidivrl
xorl
xorl
and
cmpsb
popf
sub
das
das
push
in
xchg
call
inc
ffreep
test
inc
mov
mov
push
cmp
scas
lret
in
ret
cmp
mov
test
int3
int
sub
xor
mov
mov
cld
cmp
arpl
imul
cmp
cli
lcall
pop
mov
inc
sub
imul
lds
inc
xor
fcomi
mov
lds
pop
cmc
dec
popf
stos
pop
cmp
cld
xchg
xor
mov
fs
xlat
scas
mov
mov
lahf
and
jp
fldenv
push
int
lods
inc
push
mov
mov
pop
and
dec
cli
cmc
adc
inc
addb
cli
xchg
ja
fs
mov
cmp
pop
sahf
add
in
jnp
adcl
xchg
leave
ljmp
in
pop
icebp
and
fs
sub
add
and
lds
and
icebp
jns
into
inc
nop
cwtl
or
jmp
jp
mov
movsl
mov
push
sbbl
in
adc
movsl
inc
xchg
push
mov
mov
cwtl
mov
push
push
ss
ds
and
adc
sbb
shlb
jmp
push
mov
jo
mov
rclb
jl
cmp
lea
int3
lods
mov
pop
fptan
and
push
and
iret
add
call
pop
les
popa
dec
lock
aad
pop
mov
add
push
rcll
lcall
out
fwait
mov
insb
stos
xor
push
push
pop
fidivs
jmp
cld
cld
call
jecxz
mov
mov
mov
shll
sub
lahf
in
mov
push
in
dec
mov
test
bound
jmp
inc
enter
js
popf
lea
mov
sbb
mov
inc
pop
cwtl
jne
xlat
jmp
pop
cmovl
mov
mov
fcomip
mov
lods
and
outsl
mov
sbb
mov
mov
mov
dec
inc
adc
mov
das
xor
mov
scas
mov
jns
dec
and
xchg
sub
andl
imul
xchg
pop
das
dec
ljmp
stos
adc
xchg
jno
shrb
out
xor
popa
jp
shll
fimull
int
add
mov
push
or
inc
sub
mov
push
push
lods
sbb
jo
sbb
popf
outsl
sub
mov
mov
push
rcrl
fs
pop
shrb
inc
iret
dec
xchg
pop
movsl
push
movsb
outsl
mov
call
data16
xor
fisubl
pop
jne
outsl
pop
movsl
out
iret
and
pop
repz
fs
movsb
cwtl
fldt
and
pop
pop
jns
mov
testb
xor
dec
mov
mov
shl
fidivl
frstor
lcall
sub
pop
inc
xor
rclb
mov
fdivrs
movsl
xor
cltd
mov
and
inc
bound
lods
test
cmc
insb
add
int
rcrl
dec
cmp
sub
in
cmpsb
das
dec
iret
sub
in
push
pop
mov
arpl
cmpsb
or
cmp
jg
pop
mov
cmp
cmp
adc
movsl
pop
xor
mov
add
adc
insb
sbb
or
insl
lods
movb
in
dec
in
jno
daa
pushf
mov
xchg
xchg
dec
cmpsb
sub
xchg
sbb
std
jecxz
pop
aaa
mov
arpl
inc
mov
push
inc
sbb
pop
das
jb
das
outsl
sbb
in
cmp
adc
jae
fsub
push
adc
jae
jae
dec
cli
sbb
jl
cmp
or
sub
repnz
repz
pop
int3
push
jo
test
xchg
push
adc
jp
inc
in
bound
adc
into
mov
sub
loopne
test
inc
or
inc
stos
pop
imul
or
add
outsb
push
call
adc
fistpll
sub
sbb
xchg
adc
xlat
push
in
popa
jl
cs
xor
mov
scas
aam
or
aas
fstps
scas
and
loopne
jmp
outsb
enter
pusha
xor
xchg
jnp
sbb
dec
sub
daa
nop
lcall
and
jnp
dec
leave
shr
pop
xor
loop
xlat
push
popf
ja
cwtl
cld
fsubp
jg
dec
xor
popl
sub
daa
mov
js
cmp
xchg
mov
fisttpll
cmpl
inc
cmp
or
push
mov
clc
lock
xchg
mulps
movsb
mov
and
ret
icebp
loopne
repnz
mov
leave
push
pop
fbstp
orl
repz
in
pushl
out
mov
adc
outsb
scas
xchg
aad
stos
sub
outsb
cld
adc
sti
jecxz
je
sbb
and
shrb
test
test
inc
out
rorb
inc
add
mov
ljmp
test
js
push
mov
xchg
aam
lea
cmc
push
out
std
push
xlat
xor
mov
mov
daa
das
mov
aad
xchg
dec
mov
dec
cmovl
and
lcall
popa
jnp
sub
insl
mov
fucomip
lock
test
sbb
cmp
mov
xor
add
call
ret
faddl
add
dec
shr
push
dec
adc
insl
scas
repz
into
adc
pop
fsubr
cmc
push
mov
xchg
jnp
aaa
cmp
sar
mov
inc
pop
cltd
cmp
push
pop
dec
pop
push
xchg
insl
fistps
fisubs
dec
pop
imul
fmull
add
mov
pop
nop
out
fstpt
outsb
std
fiaddl
xchg
push
mov
insb
add
shll
fiadds
idivb
xchg
shl
arpl
xor
scas
fisubl
xor
test
shr
inc
cwtl
shl
add
sub
pop
loope
nop
and
cmp
push
shr
into
and
jo
mov
out
int3
dec
dec
pop
and
hlt
cltd
ljmp
test
pop
scas
in
adc
jg
shll
xor
enter
xchg
inc
xor
pop
sub
jb
cmp
fwait
add
or
imul
fists
bound
fwait
shrb
in
mov
pop
cwtl
push
pop
push
loope
fcmovb
and
or
aas
mov
mov
daa
push
cmp
ljmp
mov
pop
adcb
jl
out
xorl
jle
inc
push
or
inc
aaa
inc
and
int
jl
mov
rcrb
mov
mov
pop
pusha
adc
xchg
loope
push
hlt
mov
test
or
hlt
addr16
les
outsb
into
sbb
icebp
pop
stc
add
scas
lcall
mov
sbb
mov
ficompl
dec
adc
ficoms
nop
push
gs
jecxz
leave
xchg
lds
fwait
mov
mov
cmp
xchg
repnz
push
jnp
add
loope
push
mov
test
xor
sbb
aad
testb
or
inc
fisttps
sub
jns
adc
ret
mov
cmp
ficomps
stc
stc
add
dec
in
pushf
fs
inc
pop
sbb
es
mov
pop
cmp
mov
or
loope
call
sub
push
pop
mov
iret
jbe
jmp
xchg
lea
loope
sub
sub
dec
pop
shlb
push
test
pushf
cmp
cmp
aad
pop
repz
repz
in
pusha
jl
pop
fstpl
push
jo
sub
jmp
cmp
cmc
in
imul
xchg
mov
pop
mov
rcrb
mov
insb
pop
shl
outsb
mov
repnz
faddl
adc
mov
rol
js
lock
jb
jo
adc
scas
je
inc
test
or
push
in
inc
in
mov
xchg
lds
sub
mov
dec
xchg
sbb
loope
xchg
sub
mov
sbbl
data16
jns
out
add
daa
sarl
fisttps
fildl
push
inc
dec
pop
outsb
cmpsb
vpaddusw
fisubl
sbb
loope
push
ja
xchg
push
lcall
ljmp
addb
leave
aad
inc
and
mov
xorl
neg
icebp
pop
mov
push
push
jmp
leave
popf
lods
or
mov
pop
cmp
outsl
shlb
cmp
sti
cmp
sbb
addl
mov
push
lcall
mov
push
out
xchg
das
sbb
loopne
xor
adc
add
lods
out
push
std
xchg
push
add
xor
mov
stos
sub
test
jl
in
jno
sbb
daa
dec
rcll
or
sbbl
sub
out
xor
int3
hlt
pop
cmc
dec
pop
jmp
mov
stc
or
add
roll
sbb
stc
test
cltd
outsb
mov
out
inc
outsl
push
test
fnsave
xchg
sub
repnz
popa
adc
or
jl
sbb
push
cs
xor
je
iret
leave
jge
std
pop
mov
out
jp
or
mov
jge
lcall
aaa
imul
pop
shrb
imul
pop
sbb
test
lods
mov
push
sbb
sarl
xchg
imul
aam
ret
cmp
out
sbb
cld
lock
fidivrs
and
xchg
icebp
dec
loope
or
and
and
imul
dec
xchg
sti
push
out
cli
andl
push
icebp
mov
push
and
mov
mov
jle
add
cmc
xor
jne
cmp
in
enter
adc
int3
sbb
lds
jb
loope
ror
das
xlat
mov
mov
outsb
push
sub
insl
shrd
sti
inc
arpl
jae
es
push
notb
out
shrb
inc
repz
in
loope
mov
jnp
jmp
adc
lods
sbbl
inc
xor
aas
xchg
pop
nop
mov
mov
or
fcmovnb
xor
es
jp
div
sahf
dec
ss
movsb
les
push
and
insb
mov
pop
push
mov
out
insb
pop
push
inc
mov
scas
cmp
repnz
xchg
push
pop
lcall
mov
jnp
inc
into
clc
in
jo
mov
mov
or
nop
das
mov
xchg
and
enter
xorb
xchg
pop
test
sub
mov
xor
jg
pushf
pushl
daa
xlat
xchg
jne
pop
gs
pop
rcr
cmpsb
add
or
adc
int
lcall
pushf
add
and
sbb
push
hlt
test
imul
pop
and
call
loop
cli
pop
shlb
ds
inc
push
dec
cmp
ja
push
cld
in
pop
clc
mov
or
push
push
mull
and
adcb
xchg
jae
push
and
jl
mov
push
inc
mov
push
jns
lods
shll
ljmp
je
scas
xlat
xor
jb
jno
fnstenv
mov
das
ret
inc
xor
or
and
mov
aad
mov
es
pop
leave
les
sahf
insl
ret
jnp
cmp
add
sahf
pop
andb
lret
dec
pop
icebp
std
push
stos
lcall
inc
jecxz
xchg
rcrl
mov
jne
insl
pop
out
xchg
mov
mov
push
rorl
roll
mov
in
fnstcw
mov
push
pop
addb
mov
dec
lods
dec
and
je
cmp
xor
mov
push
inc
jne
pop
mov
mov
mov
lahf
or
enter
xchg
ljmp
mov
rcr
js
mov
lock
mov
xor
lds
aaa
mul
xchg
loop
xor
xchg
pushf
stos
mov
mov
mov
add
push
xchg
clc
mov
shl
xchg
lret
jle
bound
repz
mov
add
lock
mov
fstps
pop
mov
cmp
fisubrl
jae
fiadds
or
xor
ja
scas
test
sbb
bt
je
push
dec
pushf
jle
imul
dec
sbb
xor
push
pop
xchg
pop
lea
or
add
jg
sbbl
mov
adc
mov
jno
mov
test
clc
test
cs
lahf
inc
adc
xor
enter
fisttpll
lret
fldl
mov
cmp
and
scas
inc
popa
jne
dec
ss
push
push
jge
or
mov
fsubrp
cmp
inc
aam
dec
fbstp
mov
sarl
sub
jae
insb
jnp
and
pushl
mov
inc
push
sbb
mov
fcomip
mov
jmp
mov
pop
jb
adc
and
inc
mov
stos
sbb
cmpsb
negl
mov
and
data16
movsl
std
jne
xor
ss
insl
mov
jno
pop
idivb
cli
add
pop
xchg
bound
ds
das
xorb
sbb
xor
push
pop
mov
fbstp
ret
inc
mov
push
outsb
lcall
mov
sub
sbb
cmp
insb
cmp
inc
mov
push
test
dec
fisttpll
jae
jno
into
clc
jnp
xchg
xchg
ds
pop
or
jae
inc
in
fwait
sub
loope
ds
jg
pop
stos
fmul
idiv
xchg
push
or
lods
aas
ljmp
xchg
iret
dec
dec
dec
pusha
sbb
push
xor
xor
mov
shlb
out
rcpps
mov
xor
cmp
adc
shlb
add
mov
movsb
lret
adc
xchg
das
loopne
adc
pop
xchg
je
sahf
movsl
push
out
mov
nop
iret
pushf
pop
lea
or
sub
xlat
jp
in
inc
sbb
in
out
push
add
in
and
jmp
mov
jne
pop
push
sbb
jns
cltd
inc
sub
ss
loop
mov
xor
or
cwtl
fsubrs
aad
cmp
dec
insl
inc
xchg
mov
lea
das
jae
popa
cld
or
cmp
scas
xlat
xorl
loopne
cmp
cs
sarb
test
lods
jge
into
cmp
pop
pop
xor
test
test
cwtl
or
testl
adc
lret
xor
out
addl
int3
mov
scas
fcomp
outsl
xor
insb
lds
and
jae
out
fcoml
inc
stos
mov
and
sub
and
dec
inc
popf
out
daa
mov
add
cli
push
xchg
push
jns
jnp
fldenv
loope
sub
das
pop
je
cmpsl
cwtl
call
jno
pop
sbb
bound
fldcw
ja
dec
add
dec
adc
push
mov
out
dec
cmpsb
xchg
rorb
cwtl
in
adc
ss
ficompl
stos
lcall
cmp
inc
jle
int3
dec
pop
mov
push
ljmp
call
cmp
out
out
je
test
hlt
pop
sub
and
lea
or
es
test
push
xchg
gs
xor
xor
outsb
inc
loop
push
pushl
lods
mov
inc
js
xor
or
addr16
mov
aad
dec
sub
outsb
mov
in
jp
mov
shlb
outsb
mov
scas
pusha
in
mov
lds
mov
push
adc
outsb
insb
add
orl
and
xchg
cmp
ja
inc
fistpl
xchg
repnz
mov
insl
repnz
dec
cs
sti
pavgb
aas
push
shll
jge
xchg
imul
ret
sti
ret
pop
addl
xor
shr
pop
popa
xchg
popa
call
jns
ss
cli
rclb
aaa
or
lods
cmp
mov
test
cwtl
pop
shrl
int3
push
les
movsl
dec
ja
dec
test
mov
mov
idiv
mov
inc
jo
jns
xchg
call
jmp
aas
inc
mov
shrl
fistpll
mov
les
cli
sub
sub
jns
sbb
imul
mov
insl
ret
inc
cmpl
movl
cltd
je
int3
popa
jnp
popa
sub
add
or
push
popa
movsl
addl
sbb
dec
shrl
jns
popa
xor
xor
pop
inc
and
cmp
dec
push
sub
in
outsb
pusha
mov
adcb
cld
inc
outsb
cmpsl
ret
sub
pop
out
outsl
add
sub
int3
outsl
insl
mov
mov
xchg
shr
dec
and
rorb
into
int3
and
adc
fidivrs
cmp
add
adc
or
xor
add
outsl
rorl
jg
xor
mov
cmp
adc
into
mov
shll
xchg
in
sbb
shrb
imul
sbb
lar
xor
cltd
leave
addb
sub
repz
push
mov
leave
xor
stos
sbb
dec
mov
sbb
repnz
rcrl
pop
mov
mov
sbb
lods
fidivrs
es
lcall
jns
mov
xor
in
mov
out
or
dec
push
jo
sbb
pop
stc
cltd
mov
ja
ss
pop
cwtl
repz
jb
and
mov
sbbl
ss
jmp
shrb
lahf
popf
ror
jno
cmp
mov
cmpsb
cmp
jle
mov
pop
jae
sahf
ds
sub
mov
imulb
push
mov
fmull
out
mov
addr16
push
adc
sahf
aad
dec
out
inc
or
mov
out
std
jne
adc
mov
ss
call
arpl
dec
push
and
mov
leave
loopne
sub
xorl
mul
push
jbe
out
cmp
mov
les
std
repz
insl
cmp
pop
fstpl
loope
fld
fisubrl
ficoms
mov
jl
jmp
mov
add
mov
cld
rcll
dec
mov
mov
jno
push
fdivs
aas
push
dec
pop
popf
cmp
js
sahf
stos
negl
xchg
adc
and
enter
or
jle
iret
add
fwait
mov
decb
pop
push
inc
in
mov
cmpsb
fs
mov
iret
mov
mov
andb
pop
dec
adc
jne
jecxz
les
ja
push
mov
ficompl
inc
push
mov
cmp
or
xor
pop
jmp
out
data16
mov
push
cmp
fs
iret
test
xor
aad
fisubl
fidivrl
inc
cmpsl
mov
cld
jp
mov
adc
andl
mov
add
jno
cltd
mov
mov
mov
sbb
sub
std
jge
mov
jl
ds
shl
sub
gs
jno
jp
fldt
mov
stos
jne
push
jbe
enter
fiadds
mov
adc
out
mov
add
mov
inc
fwait
pop
in
mov
sub
mov
and
enter
out
pop
jge
jbe
repnz
bound
es
sbb
out
outsb
xor
sbb
mov
fcompl
and
jb
mov
xchg
jno
mov
sarl
cmp
xchg
adcb
iret
jg
sub
jno
clc
xchg
ja
mov
jnp
fimull
cli
rcl
fnstenv
notl
idiv
hlt
roll
xor
mov
lea
sahf
int3
and
fdivrl
rcrl
in
mov
jno
sti
mov
mov
cmp
pop
scas
cmp
pop
fdivrl
jbe
scas
ds
outsb
cmp
jo
push
rcr
push
push
test
outsl
bnd
lea
ds
mov
pop
insb
jb
fcoml
sbb
jns
scas
in
cmp
enter
or
lods
jns
in
pushf
sahf
aam
add
or
pop
test
mov
rclb
mov
push
stos
mov
outsb
mov
aad
xchg
out
xchg
cs
nop
ret
cwtl
leave
and
movsl
push
out
call
call
mov
sbb
sbb
adc
sub
test
ret
idivl
mov
jmp
and
mov
dec
inc
push
lea
pusha
fisubl
rorl
dec
sub
push
sub
adc
xchg
and
sbb
mov
lds
adc
pop
xchg
out
mov
pop
jne
gs
test
mov
dec
push
push
add
pop
andb
jmp
xchg
or
dec
mov
mov
pop
jle
jge
loopne
pop
mov
xor
in
or
cltd
repnz
mov
addr16
lock
cmp
test
fcompl
sub
loopne
jmp
scas
inc
ja
leave
daa
sub
ljmp
push
push
cmp
mov
aaa
outsb
cmp
js
xor
outsb
mov
xlat
ss
mov
jno
lock
insl
xlat
cs
push
inc
push
or
pop
mov
jge
cmc
mov
push
jae
icebp
inc
sub
rcrb
push
jmp
jl
jmp
xor
or
cmpsl
call
nop
xor
fmuls
sub
mov
mov
popf
fidivrl
fwait
in
loopne
push
cld
call
addb
clc
mov
int3
ljmp
xor
idivl
shrb
xchg
inc
inc
jo
xchg
sub
push
leave
jae
test
int
in
mull
in
push
dec
pop
call
push
sub
loope
aaa
cltd
cmc
and
ljmp
fwait
push
loope
mov
cmc
out
adc
xchg
and
push
adcl
dec
hlt
je
xchg
push
push
mov
push
ret
fnstcw
hlt
jmp
ret
mov
fnop
jle
xor
mov
jns
fildll
mul
push
push
shl
out
sub
jmp
sbb
in
arpl
aam
cmpsb
ret
adc
stc
sbb
add
out
and
dec
stc
fisttps
outsb
jae
or
in
push
es
dec
jg
cmp
adc
popf
cmp
jge
pop
testb
mov
sub
pusha
inc
xor
addl
cmp
or
jmp
lret
cmpsb
cmp
xor
rorb
daa
push
and
mov
jb
inc
lods
sbbb
mov
rclb
mov
cwtl
lds
aaa
push
lret
cmp
xchg
outsb
pushf
out
jg
arpl
test
mov
insl
in
ss
cld
lret
xchg
js
xchg
dec
xchg
mov
inc
fs
jge
add
les
in
fisttpll
push
dec
inc
and
mov
jecxz
mov
or
jmp
fs
int3
fcmovnu
lahf
mulb
fdivs
lahf
pop
or
pop
adc
lret
test
cmp
loope
shr
xchg
inc
jle,pt
mov
pop
cld
mov
rcrl
mov
mov
je
inc
xchg
in
outsb
fiadds
push
in
xor
pop
sbbl
lea
mov
dec
and
aas
fcoml
inc
sbb
cmp
inc
xchg
subb
rorl
mov
cmpsb
jmp
arpl
jmp
lcall
ljmp
mov
dec
fstl
jns
xor
jle
inc
fsts
shl
ficoml
fcoml
clc
sub
sbb
data16
je
outsb
push
loope
mov
xchg
cwtl
xchg
in
push
push
mov
aas
pop
loopne
call
or
nop
pop
push
test
xor
arpl
mov
pop
fistps
pop
out
cmp
pop
mov
pusha
sbb
paddb
mov
xor
rcrb
in
movsb
inc
pop
fmulp
loopne
iret
pop
pop
stos
sub
mov
sahf
and
adc
fsubl
arpl
movsb
xor
outsl
xor
cmc
pop
fiaddl
fdivrs
test
movsb
sub
dec
mov
shrb
lods
gs
mov
mov
or
subb
scas
or
or
dec
ja
fs
ljmp
xchg
hlt
cmp
or
out
sbb
mov
gs
sahf
adc
cmp
jne
sub
sbb
xchg
aaa
stos
repnz
mov
cmp
stos
or
dec
add
xchg
cmpsl
mov
push
pusha
mov
sub
fcomps
jle
sub
pop
push
adc
mov
out
add
sub
rolb
into
dec
stos
imul
jp
add
into
jecxz
xor
xor
inc
sub
dec
sti
lods
rcr
xchg
add
cs
mov
sbb
or
and
lret
add
jbe
nop
mov
popa
sbb
jae
or
shl
dec
mov
push
bound
jbe
cmp
push
xchg
je
xor
pop
add
leave
mov
addr16
dec
cmp
in
aad
imul
test
je
outsl
inc
lds
je
pop
sbb
pop
add
dec
lcall
xchg
sbb
cmp
test
mov
loopne
test
inc
add
das
push
fidivrl
imul
repz
hlt
icebp
lahf
jg
cwtl
xchg
jge
and
mov
mov
incb
dec
adc
cs
test
jbe
test
shrl
movsb
sbb
inc
mov
xchg
jnp
arpl
sub
adc
out
xor
pop
aaa
dec
dec
movsb
sub
ss
es
cmp
adc
jbe
outsl
push
mov
std
out
sbb
decb
test
or
inc
les
call
xchg
ljmp
push
and
movsl
arpl
lret
jne
push
and
scas
dec
mov
and
mov
push
sub
fcmove
test
or
aas
xchg
lret
sub
aam
or
scas
movb
insl
mov
push
ret
gs
outsl
repz
adc
add
arpl
int3
int
pop
add
cmp
mov
mov
add
ret
std
lahf
jno
or
cli
gs
mov
in
sahf
mov
sub
out
jae
cwtl
xchg
mov
push
push
or
mov
push
lods
sbb
popa
gs
rorl
rcr
push
xchg
jns
stc
push
jae
adc
jnp
push
testl
test
and
mov
rorl
stos
adc
inc
push
mov
imul
stos
mov
and
data16
int3
jae
inc
xchg
insb
scas
mov
push
push
pop
xchg
cmp
add
clc
std
sub
mov
arpl
dec
pop
imul
push
dec
lea
push
xchg
movsb
sarb
jae
scas
xor
insl
pop
lock
push
or
int3
xchg
lds
call
scas
inc
cmc
dec
pop
lcall
mov
dec
pop
cmpsb
fcmovnb
jmp
and
push
fisttpl
aaa
mulb
lcall
mov
sbb
std
aam
in
mov
cli
fdivl
cmc
fisubrl
xor
pop
jae
rcrl
jp
loopne
lods
int3
mov
add
jmp
pop
frstor
pushf
out
jae
rcrb
hlt
mov
ret
cltd
ret
ret
fdivs
test
fwait
and
lahf
lds
test
add
sar
cmp
mov
xchg
inc
lcall
inc
rolb
xchg
inc
gs
leave
aaa
icebp
jge
cmp
sbb
add
out
mov
incl
mov
mov
cmp
mov
stos
xchg
in
aad
mov
mov
dec
insl
popl
mov
repz
inc
jbe
mov
fistl
mov
sub
fcoml
push
inc
xchg
fdiv
sbb
mov
mov
push
sbb
or
repnz
aam
adc
pop
push
std
mov
out
movsl
stc
adc
pop
stos
and
test
mov
sbb
adc
in
decl
push
push
fisttpll
mov
repnz
jmp
mov
mov
icebp
add
inc
inc
loop
dec
inc
and
xchg
out
sub
sbb
pushf
add
jg
inc
push
lcall
sbbb
ss
cmpsb
repz
jg
dec
hlt
inc
jbe
cmpsb
jmp
pushl
movsl
movl
adc
stc
pop
or
dec
jmp
test
sbb
bound
xchg
shrl
outsb
int
mov
or
push
sahf
fldt
jmp
movsl
pop
das
sub
int3
daa
call
xor
jnp
inc
inc
jne
jecxz
xchg
push
sub
mov
js
fmull
outsl
repnz
mov
lds
push
bnd
add
pop
add
jno
sbb
pop
xor
mov
pop
dec
popf
pop
cmc
stc
into
shlb
or
jge
mov
inc
xor
or
out
lods
inc
mov
mov
shll
daa
pop
fstl
data16
loop
push
rcrb
mov
xchg
scas
push
adc
into
pushf
dec
jns
xor
ljmp
int
outsb
sub
lahf
or
pushf
out
movsb
adc
xor
stc
movsb
test
dec
roll
icebp
xor
dec
add
stc
cmpsl
sbb
mov
hlt
loopne
int
pop
leave
popa
jp
push
adc
cmp
and
popa
pop
push
pusha
pop
xchg
pop
lret
sbb
pop
mull
ficomps
stos
in
add
mov
subb
cmp
cmp
and
pop
or
dec
mov
add
popa
xchg
jmp
fdivrl
in
jb
daa
sbb
sbb
mov
mov
repz
js
into
cmc
and
out
mov
mov
test
cltd
ss
dec
pop
and
xchg
mov
stos
in
sbb
lahf
mov
jecxz
adc
dec
sub
daa
pusha
mov
cmp
mov
dec
sub
inc
enter
cwtl
in
cmpsl
std
mov
push
bound
imul
fadds
addr16
sbb
jle
aas
mov
test
loope
jle
out
xor
jmp
stos
outsl
sub
jl
fisttpll
xchg
add
outsl
mov
xchg
cmovne
ss
fidivs
rol
lea
lahf
setae
hlt
pop
repnz
mov
mov
xchg
mov
daa
cmp
sti
shr
xchg
cmpsl
push
add
out
cwtl
clc
addr16
xor
pop
mov
scas
iret
xor
sti
cmc
push
mov
sub
dec
sub
sbb
bound
aad
sbb
sbb
jo
test
test
jle
subb
imul
test
stc
mov
sub
lret
jle
cli
lret
mov
sbb
xchg
pop
jno
push
pop
or
movsb
fs
mov
sub
rcrb
gs
and
push
outsb
cli
mov
mov
jle
repnz
lcall
mov
adc
je
mov
sbb
mov
adc
sbbb
or
fists
xchg
and
xor
cld
xor
test
sub
pop
ret
js
add
pop
inc
sbb
out
add
mov
xor
cmp
fisttps
ja
movl
std
jae
inc
mov
fbstp
push
jns
outsb
push
call
pop
cwtl
mov
cmpsl
dec
cmp
and
aad
xor
test
xor
int3
fiadds
out
dec
xor
push
jp
pop
push
addr16
sbb
std
sbb
cld
fstl
jb
inc
jae
rcrl
or
int
mov
hlt
push
pop
and
scas
adc
adc
add
out
in
sar
mov
push
daa
jp
xor
inc
dec
es
or
ljmp
push
ljmp
jecxz
jns
aam
adc
lods
pop
sti
sbb
mov
push
lods
mov
pop
cltd
pop
je
mov
pop
repz
fidivrl
or
push
arpl
daa
push
test
out
rcrb
add
mov
inc
dec
jecxz
imul
lods
cmp
outsb
or
cmp
iret
or
cmp
sub
xor
or
hlt
out
cmpsl
cmp
iret
scas
or
pop
aam
cmp
pop
mov
and
daa
mov
arpl
movsl
mov
ds
jecxz
scas
inc
jne
es
testb
adc
test
and
sbb
add
mov
ja
xor
ja
xor
cwtl
aas
cltd
push
pop
cmpsl
xchg
dec
std
add
add
jne
aam
xlat
fs
lea
stc
bound
in
or
addr16
inc
pop
or
sbb
gs
mov
into
add
jmp
mov
xchg
adc
add
cmp
sbb
stos
dec
inc
idivb
in
lahf
pushf
loope
mov
test
in
dec
test
rol
leave
dec
outsb
push
xchg
pushf
ret
mov
jge
lods
cmp
pop
lret
push
int3
jno
imul
jnp
fstpl
xor
pop
sbb
lock
and
inc
dec
pop
mov
xor
adcl
xor
mov
push
mov
mov
jae
mov
orl
cli
iret
fnstenv
mov
push
xchg
and
mov
fidivl
add
cmp
int3
xchg
pop
push
arpl
lret
mov
arpl
loopne
xchg
out
iret
cltd
fnstsw
lcall
sub
mov
sar
mov
inc
test
movsb
or
mov
jb
cs
mov
inc
push
and
sbb
pop
in
imul
pop
mov
mov
xor
imul
mov
aam
rcrb
loope
inc
push
aad
dec
stc
test
push
xchg
mov
jecxz
rcrb
test
push
inc
out
and
lds
js
mov
test
cld
pop
aas
pop
roll
int3
jne
hlt
das
pop
pop
adc
stc
arpl
sub
push
js
subb
xchg
insl
cmp
test
outsl
pop
ret
cmp
notb
add
add
nop
shl
xchg
cmc
lods
test
mov
push
ljmp
daa
mov
or
jnp
jecxz
and
arpl
lds
cmp
jbe
cltd
mov
cmp
cmpsb
lret
negl
sub
jae
inc
lret
mov
imul
fisttps
decl
mov
push
jnp
sbb
push
xchg
fsubr
addr16
jb
in
inc
jb
and
pop
sahf
gs
jbe
mov
xchg
xlat
jecxz
sbb
movsb
inc
jg
push
shrl
xor
jne
leave
outsl
add
test
mov
lods
and
cmp
unpckhps
arpl
hlt
call
shl
jp
je
mov
fsubrs
inc
mov
aad
out
cmp
sbb
mov
outsl
nop
fsubs
mov
in
push
pop
pop
aam
cmp
mov
sub
adc
pop
not
in
das
cmp
fwait
out
in
mov
sar
daa
call
imul
add
icebp
inc
jae
pop
mov
lea
xor
mov
andl
cmp
dec
cmp
jb
scas
mov
sub
addl
inc
mov
adc
mov
sbbl
adc
idiv
sub
sbb
das
clc
xor
add
push
rolb
jge
pop
mov
sarb
hlt
and
scas
xchg
xchg
movsl
xchg
aad
push
adc
daa
xor
add
movq
xlat
mov
jbe
sub
aad
fiaddl
jg
jg
jmp
pop
es
stc
sub
cmpsb
xchg
jg
das
lcall
push
xor
adc
das
shrb
addl
xchg
ja
push
sbb
or
jnp
cmpsb
bound
int3
dec
test
popf
orl
int3
dec
sbb
sahf
stc
cmp
pop
push
mov
lods
xor
gs
in
sti
sti
inc
or
dec
sub
fbld
mov
dec
jge
rolb
xor
xor
jle
jmp
sahf
pop
cmp
lea
jne
sub
adc
call
fcompl
mov
mov
ss
lods
xchg
push
jl
repnz
xchg
mov
push
and
adc
pushf
mov
orl
pop
scas
call
mov
bound
insl
ds
stc
call
test
mov
pop
filds
mov
push
hlt
push
es
bound
dec
add
mov
adc
adc
pop
lods
mov
and
mov
adc
and
divb
das
xchg
xor
jne
sti
bound
and
inc
inc
enter
push
jnp
iret
ja
push
mov
fistps
mov
inc
insl
int3
popf
xchg
push
sub
pop
cli
push
pop
and
pop
xlat
push
dec
addr16
add
rorb
popf
mov
decl
popa
mov
dec
and
fstl
dec
sub
push
xchg
test
pop
std
int3
movsl
add
push
inc
xchg
pop
jmp
inc
jle
fldcw
xor
add
dec
xchg
pop
mov
xchg
addr16
mov
je
repnz
mov
fucomi
adc
scas
or
jecxz
sbb
dec
mov
sbb
dec
jp
jnp
movsl
mov
pop
or
jp
jg
adc
cmp
aas
lods
inc
repnz
in
pop
scas
ret
lods
jle
jmp
roll
cmpsl
pop
outsl
sub
repz
pop
fidivrs
outsl
inc
sbb
lods
scas
cmp
cltd
test
ss
test
into
mov
sarb
mov
pop
and
std
hlt
aas
movsl
or
in
mov
push
dec
inc
mov
cmp
xor
nop
dec
inc
scas
addl
out
sahf
int
jb
rcr
sub
pusha
nop
mov
push
icebp
hlt
cmp
je
xchg
int3
mov
pop
push
pop
pop
push
lcall
push
ret
pop
pop
in
es
mov
mov
mov
sub
sbb
inc
xor
cmc
repnz
or
and
push
add
sbb
mov
sub
sbb
imul
aaa
pop
push
push
idivb
pop
scas
lods
inc
push
jecxz
movl
pusha
test
mov
cmp
pushf
popa
xchg
add
loop
xor
in
stc
inc
dec
in
xchg
int3
daa
incw
or
mov
cs
xlat
ds
in
mov
jle
shlb
jecxz
sub
loop
mov
push
dec
cmpsl
sbb
dec
xlat
repnz
sarb
cmp
lcall
dec
insb
add
push
out
out
rcr
pop
mov
mov
ret
or
and
xchg
cld
repnz
mov
sub
push
mov
sbb
in
or
loopne
mov
sbb
mov
mov
int
sbb
imul
loope
mov
dec
cmpsb
mov
sub
dec
pop
push
mov
sbbb
lods
in
pushf
sub
jnp
out
outsl
jmp
jp
jno
std
jecxz
in
in
pop
test
std
shr
sahf
fisttps
std
inc
dec
jge
mov
aaa
dec
inc
sbb
adc
jl
pop
lods
inc
mov
push
jl
or
stos
fldt
pop
sti
jp
push
mov
lret
repz
mov
les
add
push
inc
je
mov
int
rclb
fwait
stos
mov
and
shrl
int3
dec
adc
add
push
dec
or
sub
lret
inc
test
aad
mov
imul
mov
rcl
jnp
sbb
pop
insl
mov
negl
cli
iret
rolb
and
mov
mov
push
cmp
out
jmp
orb
sub
mov
fwait
insl
loop
xlat
mov
mov
adc
in
inc
lds
cmpsb
mov
into
jmp
sub
movsb
xlat
ljmp
andl
aas
bound
push
into
nop
jne
test
push
push
mov
outsb
outsl
dec
pushf
lahf
nop
jl
pop
lods
jl
pop
cmpb
inc
loope
dec
mov
xchg
pop
mov
dec
pop
adc
sti
add
add
xorl
cmp
mov
ja
pop
mov
jo
aaa
loopne
mov
adc
dec
int3
pop
negl
loopne
out
add
ss
shlb
sbb
and
or
adc
mov
or
lcall
test
xor
aaa
jb
lods
sub
subb
or
data16
pop
cli
and
call
shrl
addr16
jns
inc
mov
inc
jmp
cmp
push
out
and
and
xchg
divl
int
fsts
cmp
or
bound
jg
idivb
fstl
insb
mov
jl
inc
test
sbb
les
aam
inc
clc
movsb
mov
jg
cmp
cwtl
push
aas
jne
mov
xchg
rcl
cltd
iret
mov
lahf
gs
mov
sub
add
mov
push
cmpsl
pop
mov
test
mov
repz
arpl
dec
mov
mov
or
jae
scas
fdivrl
stc
mov
mov
cltd
or
cmp
sbb
roll
inc
cltd
cmpl
and
test
subb
jge
scas
sbb
sbb
lret
mov
add
jnp
addr16
int
lds
pushl
xchg
mov
inc
xchg
push
jecxz
pop
or
test
dec
dec
xor
cmpsl
or
loop
ret
lret
pop
push
or
jno
popa
mov
leave
xchg
mov
jb
push
jmp
fs
jbe
fwait
cmp
xor
xchg
popf
js
jecxz
jb
inc
sub
dec
fisubrs
cmp
repnz
stos
sbb
mov
cmp
ja
inc
sub
addl
gs
subb
ret
movsb
in
mov
jg
mov
xchg
xchg
lret
cmp
mov
insb
adc
cld
dec
jmp
rcll
fwait
test
iret
bound
in
out
int
dec
inc
dec
data16
nop
or
lods
int
mov
mov
dec
cld
mov
jae
data16
jp
sahf
imul
push
xchg
mov
out
bound
scas
arpl
inc
loop
mov
andb
push
popa
sub
int3
lea
aam
mov
in
mov
or
cmp
sbb
mov
stc
cmp
loop
fsub
xchg
repnz
bt
dec
add
xor
add
icebp
leave
pop
stos
icebp
scas
lea
out
add
adc
xor
test
fs
jns
cmp
fidivl
add
sub
or
mov
std
sub
mov
add
ds
cmp
sbb
xchg
out
adc
inc
dec
jmp
jne
mov
dec
mov
cmpsl
sti
mov
ret
pushf
mov
cmp
mov
mov
outsl
mov
js
and
mov
lcall
shr
cmp
enter
push
mov
or
cs
pop
adc
push
sub
pop
cmpsb
sub
cmp
mov
sbb
mov
loope
mov
shr
xor
push
jl
jne
mov
cwtl
neg
ret
dec
xlat
mov
mov
or
push
push
leave
aam
pop
mov
lods
or
aas
or
leave
sub
mov
sub
sarb
pop
xchg
xchg
lahf
cwtl
mov
jecxz
repz
adc
xor
jnp
pop
cmp
add
push
ljmp
mov
jae
or
adc
xchg
shlb
je
mov
je
shll
mov
cmp
mov
movsl
in
xor
fwait
cmpsl
add
cmpsb
out
rcrb
and
orl
fdiv
lock
sbb
outsl
int3
inc
daa
enter
adc
and
push
mov
mov
fisttpl
xor
xchg
movsb
mov
imul
xchg
fstps
pop
cmp
adc
xchg
jg
inc
xlat
aas
dec
cli
jmp
and
sub
jge
fldenv
repnz
leave
movsb
adc
lret
mov
loopne
mov
xchg
or
pushf
jg
mov
sbb
icebp
sbb
and
movsl
or
or
inc
out
pop
popa
mov
xor
shlb
into
insb
out
std
fcmovnbe
mov
adc
iret
test
push
gs
or
xchg
icebp
ficompl
jmp
jb
lea
ficomps
test
dec
out
lock
adc
push
in
test
push
dec
ljmp
sub
and
or
or
mov
repz
add
pop
cmp
add
and
loopne
jmp
jg
fs
mov
fadd
xchg
push
sub
inc
pop
push
fsubrs
jge
or
inc
dec
loopne
ja
xor
in
imul
mov
lcall
add
jns
xchg
lds
lret
loopne,pt
dec
mov
pop
insl
sbb
mov
xchg
imul
mov
mov
jmp
jo
ret
push
out
inc
add
jae
lret
stos
fwait
int3
dec
inc
mov
xor
test
xchg
sub
and
add
xor
xchg
push
sub
pop
pop
push
pop
not
jns
scas
test
shll
pop
fidivs
mov
fdiv
sub
xor
lods
mov
add
loop
in
loop
or
cmp
imul
hlt
and
mov
inc
sbb
adc
xor
sarl
es
test
int
xor
xor
jge
mov
and
xor
jnp
cwtl
add
mov
xor
aaa
sbb
push
jl
xchg
pop
jne
sbb
imul
das
push
sbb
push
ss
mov
mov
inc
xchg
es
out
pop
cmp
nop
sub
lahf
ja
les
sbb
push
ret
adc
inc
cmp
insb
repz
mov
mov
bnd
js
xchg
pop
test
fwait
sbb
rorb
mov
xchg
cmp
jo
mov
jbe
or
xchg
movsl
cld
mov
mov
jecxz
pop
push
mov
sub
mov
rcrb
pop
xchg
cwtl
mov
lret
mov
inc
xor
cmp
xchg
push
popa
sub
inc
in
jno
in
pop
mov
ret
movsb
jo
sub
cld
cmp
vpcomuw
lock
or
imul
fs
aam
in
je
adc
pop
cmp
rclb
push
nop
repnz
iret
sbb
push
mov
jnp
push
xchg
lds
lahf
xlat
aaa
and
pop
xor
mov
fists
mov
xchg
pop
xchg
push
pop
insb
inc
mov
and
mov
push
mov
js
wrmsr
jne
shrb
adc
xchg
inc
in
repnz
dec
cli
mov
cs
rcrb
sub
cli
enter
sti
lods
sub
subl
pop
sbb
js
or
test
repnz
push
jmp
clc
or
dec
callw
pusha
mov
sub
out
cmp
inc
jmp
fildll
or
les
push
and
mov
incb
adc
sbb
and
out
dec
cwtl
js
jge
das
mov
popa
jmp
addl
stc
sarb
aaa
push
pop
xchg
gs
inc
les
mov
inc
lret
adc
popa
enter
jb
outsb
sbb
push
mov
cmp
adc
inc
adc
leave
xchg
jecxz
inc
and
int
xchg
push
and
hlt
jbe
sub
and
or
xchg
push
pop
inc
popf
add
jle
mov
pop
clc
jns
out
and
jnp
cmp
push
mov
sub
add
push
inc
mov
fcomps
sbb
mov
les
push
nop
test
inc
mov
daa
fcompl
pop
jp
add
lahf
out
dec
add
adc
push
mov
das
mov
in
jbe
mov
sub
or
mov
out
icebp
cmp
ss
scas
cmpb
push
aam
jmp
orb
xchg
cmp
mov
shlb
add
dec
or
mov
sbb
mov
cmpsb
scas
fdivl
dec
fs
roll
lea
jbe
ret
mov
xchg
cltd
or
lahf
mov
cmpxchg
into
pop
adc
movsl
mov
xor
add
adc
add
mov
or
out
sub
pop
imul
and
jno
je
neg
popa
data16
pop
lds
iret
mov
xor
fimuls
imul
sub
sub
pop
jmp
fs
stc
popf
icebp
dec
fwait
push
hlt
movsl
fisttps
out
sbb
sarl
push
ficoml
shll
test
mov
push
xchg
inc
and
xchg
push
xchg
cwtl
mov
stos
into
mov
pusha
andb
lret
cmp
lock
call
mov
ror
adc
jp
xchg
push
pusha
lahf
sti
arpl
cli
mov
cwtl
inc
mov
and
cmpsb
notl
rcr
pop
jne
and
sbb
adc
mov
adc
aaa
xchg
sahf
cmp
addl
cmp
cmp
mov
jmp
xchg
insl
lret
pop
ss
push
pop
test
fsub
notl
mov
dec
into
cmp
popa
test
cmpl
test
adc
es
adc
leave
movsb
cmp
xor
test
mov
es
mov
ficoml
pop
gs
out
int
dec
sbb
cmpl
faddl
leave
push
jmp
push
xchg
shrl
out
icebp
je
sbb
dec
mulb
xor
sub
int
ds
scas
out
and
jno
ljmp
arpl
aaa
lret
jmp
jmp
cmc
xchg
pop
mov
xchg
sbb
cmp
jmp
sbb
mov
repz
leave
jge
or
sub
mov
jo
pop
mov
call
add
or
xor
aaa
daa
xlat
mov
div
sbb
clc
add
mov
and
imul
fldcw
adc
fmuls
leave
sar
std
mov
les
sahf
les
push
and
rorl
cltd
imul
push
and
imul
insb
cmp
mov
fnstenv
jb
hlt
rcll
add
xchg
ss
clc
jae
push
inc
daa
out
lahf
std
dec
sbb
mov
sbb
or
cmp
jmp
test
jno
xchg
jbe
push
mov
fwait
push
push
inc
mov
pop
loop
movl
rcll
loopne
fwait
pop
jb
imul
add
into
cmpsl
push
jns
push
add
sarb
ret
sub
insb
out
jno
jle
cs
pop
orl
push
dec
pextrw
push
jno
xlat
rorb
xchg
mov
push
movsb
lods
addr16
or
sub
xor
adc
mov
testb
movsb
push
insb
aam
lret
jb
lods
in
inc
idivl
sbb
push
adcb
adc
push
and
push
rorl
ja
pop
pushf
mov
fbstp
fst
in
sub
sti
stos
mov
jne
push
inc
les
mov
test
aas
or
and
xchg
imul
or
stos
lea
loopne
mov
inc
stos
dec
jmp
loopne
or
jnp
outsb
mov
cmp
movsl
dec
cmp
test
adc
add
adc
push
out
mov
fldl
fstpt
sarb
std
jae
decb
icebp
xor
and
mov
sbb
aas
and
mov
jb
movb
pushl
dec
bnd
movsl
sbb
mov
test
sbb
mov
loop
into
jg
jo
rorl
jno
pushf
push
ss
jb
ret
shlb
add
call
cmpsl
lcall
cmp
fisubs
mov
jb
xorb
in
aad
mov
ja
mov
add
or
arpl
dec
pusha
jns
xor
jle
jbe
aad
cltd
push
xor
sub
imul
pop
sbb
mov
sub
mov
imull
testl
dec
iret
daa
stos
inc
mov
mov
movsl
stos
jge
pop
mov
fisubrs
sub
fs
sbb
add
test
mov
test
inc
mov
fiadds
pop
xor
pushf
jnp
int
xlat
jne
fists
inc
and
push
mov
jp
ljmp
jne
lret
dec
lods
dec
lods
xorb
fldcw
int3
push
and
movsb
add
cli
call
sub
push
sti
repz
push
ret
mov
or
pop
inc
mov
addl
mov
ret
cmp
in
test
rcr
and
loop
cmpsb
push
dec
sahf
repnz
jno
pop
test
xchg
lods
imul
sti
mov
dec
rcrb
cmp
out
pop
and
pushw
jae
jmp
add
leave
pop
leave
sbb
mov
std
insb
mov
xchg
push
fstps
sbb
jb
pop
hlt
inc
mov
imul
mov
out
jmp
pusha
movsb
nop
or
outsl
scas
fldenv
push
mov
xchg
jne
xor
xchg
arpl
int3
cmp
lahf
sti
cltd
outsb
mov
orb
in
orl
stc
out
inc
xor
lahf
mov
sysret
adc
int
jbe
sbb
insb
sub
imul
std
mov
negl
loop
mov
lods
outsl
sbb
sub
dec
or
jno
lret
sbb
imul
je
dec
out
iret
repz
add
and
push
mov
inc
dec
jle
dec
fsubrl
cmp
push
movsl
xchg
sbb
adc
jo
movsb
sbb
imul
insl
shll
sahf
sahf
mov
mov
mov
popf
xor
xchg
icebp
arpl
out
fs
pop
imul
shlb
and
cli
dec
popf
inc
lea
lods
fstpl
cld
popf
shl
ffree
lods
icebp
add
pop
repnz
mov
out
cwtl
iret
aam
cmpsb
lods
dec
pop
out
or
and
sub
and
scas
cmc
mov
pop
scas
int
mov
cld
leave
push
rcr
inc
sbbb
mov
mov
xchg
ret
and
int3
or
shrl
cmp
inc
mov
jb
std
push
test
int
adc
lods
mov
lcall
ss
cmp
icebp
cwtl
sub
test
loope
mov
hlt
xchg
xchg
lgs
pushf
out
pushf
mov
cmp
mov
and
je
sbb
pop
pop
mov
push
dec
lret
lock
xchg
dec
dec
sarb
pop
dec
mov
xlat
repnz
mov
mov
jbe
sub
lahf
out
xchg
or
ret
sub
inc
and
ficoml
sbb
es
mov
pop
emms
out
mov
sbb
add
mov
mov
cmc
and
flds
push
pop
loopne
adc
mov
mov
pop
out
shlb
test
adc
repnz
aaa
and
nop
clc
inc
or
andl
xlat
test
cmp
xor
out
or
sub
xlat
cli
inc
cmpsb
lcall
jae
sub
mov
or
imul
and
fwait
xchg
roll
pop
push
out
or
or
jecxz
mov
xchg
inc
cmc
cmp
ds
popf
out
xchg
faddl
xor
pop
aam
es
mov
test
mov
dec
push
cld
pop
mov
mov
stos
mov
pop
xchg
jne
dec
adc
xlat
push
outsl
xchg
mov
in
mov
fstpl
push
adc
mov
lea
bound
mov
mov
test
pop
sbb
pop
loopne
add
test
sbb
jl
mov
and
push
hlt
xchg
aas
sub
jne
mov
test
dec
xchg
testb
popw
cmpsb
pusha
xchg
mov
cmp
inc
lret
movsl
adc
xlat
pop
lcall
int3
inc
xor
lds
push
daa
movsb
inc
inc
shll
icebp
out
movsb
add
fdivl
adcl
jge
sbb
push
jno
dec
mov
call
or
xor
mulb
leave
jp
stc
mov
xchg
inc
cmp
and
cmpsl
mov
dec
lods
push
jo
mov
inc
xor
jo
mov
std
loope
stos
popl
mov
xor
cwtl
call
cmc
add
pop
fiaddl
inc
arpl
sbb
push
std
aam
cmc
add
cwtl
into
jne
cmp
inc
inc
jns
dec
xor
add
out
fwait
jmp
hlt
push
leave
xchg
cs
fidivrl
adc
lret
cmp
imul
jg
xchg
add
dec
dec
fisubl
bound
pop
sbb
hlt
bound
mov
xchg
sbb
lcall
mov
or
inc
aas
mov
mov
insl
fstpl
mov
xchg
mov
xchg
add
dec
xchg
or
lods
jecxz
out
jb
cmp
popa
lea
in
outsl
pusha
andl
cmp
mov
dec
ss
push
ret
mov
popa
mov
cmp
ljmp
sub
add
scas
and
xchg
fs
lods
aaa
mov
pop
jp
in
stos
cmp
in
and
pop
ret
xor
mov
pop
cmpsl
xchg
xchg
pop
xchg
nop
gs
stos
es
sahf
or
insb
pusha
mov
aas
and
in
push
inc
jns
push
mov
or
add
outsb
xor
and
sti
ljmp
sbb
add
out
mov
lods
inc
inc
sub
or
mov
mov
mov
push
in
push
addl
mov
pmulhw
loop
mov
daa
mov
jbe
cltd
fsts
inc
cmpl
adc
not
pop
adc
stos
mov
popl
add
out
dec
dec
aam
out
push
jp
mov
jge
jns
pop
xor
dec
or
mov
sbb
shlb
jg
jnp
cmpsb
pop
movsl
repz
ja
jnp
sub
push
inc
jge
imul
fisubs
int
add
adc
shrb
sub
push
xor
xor
popf
jns
loopne
push
inc
mov
movsl
ds
movsb
mov
cld
outsb
int
push
scas
push
add
jecxz
sub
add
in
sub
lret
sbb
mull
shr
cmpb
mov
xorb
fistpll
dec
lahf
leave
xchg
adc
xchg
inc
sub
lea
mov
imul
mov
sahf
clc
fs
in
rclb
pop
pop
dec
mov
data16
xchg
ret
stc
fnsave
push
inc
outsl
stc
outsb
xor
xchg
mov
push
cld
arpl
sub
xchg
xlat
inc
mov
popa
jne
cmp
adc
push
sbb
lods
or
test
rol
das
mov
and
aad
les
mov
ss
lahf
xor
push
popf
mov
lea
push
les
push
aad
mull
pop
jo
ds
ja
lea
pop
sbb
cli
in
cmp
mov
enter
push
in
mov
insb
adc
add
xor
jae
ret
cmpsl
push
shll
repz
cmpl
push
mov
mov
xchg
jb
lods
push
mov
lock
sub
enter
or
mov
jge
mov
and
xchg
icebp
test
push
icebp
rcrb
adc
int
cmp
fisubrs
sub
jns
or
inc
out
pop
xor
mov
dec
push
hlt
shll
add
adc
jle
push
lret
push
js
jl
js
mov
ds
cwtl
mov
sbb
inc
pusha
dec
xchg
xor
cwtl
push
mov
xor
rcrl
repnz
lods
mov
or
pop
xchg
jl
jno
mov
jae
push
andb
dec
push
mov
jae
pop
cmp
shlb
scas
jecxz
das
cmp
sbb
sbb
inc
out
int3
push
sub
push
lea
ja
rclb
mov
insl
xor
imul
test
lea
and
fwait
mov
sbb
lea
inc
mov
ja
mov
data16
dec
out
or
imul
out
mov
das
jae
and
push
imul
shll
rcl
xchg
nop
fidivl
add
cmpsb
sub
mov
stos
mov
rorl
inc
inc
leave
dec
aaa
mov
push
xchg
int3
cmpsb
sub
imul
popf
mov
jo
icebp
mov
sahf
jg
push
and
test
gs
insb
mul
mov
jg
and
push
aas
or
or
ljmp
fldt
loopne
movl
xor
cmp
stc
dec
dec
inc
push
arpl
push
mov
es
ret
into
mov
je
and
mov
or
in
test
and
rclb
push
dec
jb
scas
and
pop
adc
sub
data16
addl
and
xchg
push
or
and
add
ja
mov
loop
dec
mov
add
mov
pop
ret
cmp
xor
xor
pop
cmp
push
and
adc
mov
push
pop
jno
aas
xchg
pop
xchg
sub
testb
inc
fbld
xchg
nop
sub
insb
mov
mov
cmpsl
sbb
or
test
scas
popa
daa
sub
push
pop
push
xor
push
push
lcall
je
and
into
sub
loope
or
out
or
arpl
dec
popa
sarb
pop
adc
or
arpl
mov
jno
dec
cwtl
adc
or
fstpl
mov
xchg
and
mov
scas
test
add
adc
fbld
adc
dec
xor
popa
testb
push
mov
cmp
xchg
js
add
and
ja
mov
es
mov
in
stos
lcall
pop
xor
xchg
sbb
or
pop
lods
int3
ss
sub
cmp
lcall
mov
jmp
cwtl
mov
push
out
jecxz
jne
push
sub
test
scas
add
imul
enter
jge
popa
or
addl
xchg
xchg
ds
into
push
sub
xchg
xor
das
mov
and
cmp
xchg
es
sbb
xor
mull
loope
pop
jl
sub
xchg
nop
and
ds
arpl
pop
sbb
int
fimuls
xchg
popf
rcll
loopne
xchg
and
cmp
jp
pop
push
sub
mov
outsb
jno
inc
mov
sbb
arpl
sub
push
test
sub
dec
add
push
int
fnstcw
mov
sbb
inc
shll
ljmp
sbb
mov
bound
fwait
ds
cmp
or
mov
push
orb
mov
js
cmp
arpl
loope
mov
ret
lds
mov
push
stos
fcomi
adc
and
xchg
jle
push
aam
int3
addr16
out
inc
adc
mov
cs
mov
inc
push
push
ss
or
jle
mov
xor
and
pusha
cltd
cmp
mov
cmpsl
addr16
dec
or
adc
pop
iret
sbb
sub
xlat
sbb
inc
push
mov
movsl
adcl
sub
cmp
sbb
pop
sub
incl
lea
cmp
in
fnstcw
push
and
jmp
in
outsl
rorb
pop
out
in
stos
mov
add
xchg
mov
push
xor
or
stc
cmp
loop
jge
sbb
sbb
popl
mov
jae
mov
loopne
inc
jl
add
aad
xor
sbb
mov
rcll
out
dec
cmpsl
push
jge
rcrb
mov
and
mov
pushf
in
ss
out
fdivrs
in
pop
pop
movsb
cmp
lret
sub
pop
test
ret
lds
mov
leave
xchg
cmp
loope
arpl
mov
dec
imul
sub
lods
stc
dec
mov
xchg
xchg
rcrl
popa
andb
gs
mov
gs
addl
repz
cli
cltd
dec
xchg
movsl
mov
fdivrp
or
insb
sbbb
fsubl
jmp
push
push
test
clc
cmp
cmp
xchg
ljmp
jp
lahf
sub
xchg
js
in
mov
push
test
mov
mov
push
test
mov
imul
cltd
push
mov
outsl
hlt
push
mov
add
loopne
xor
add
hlt
mov
mov
jae
push
push
jns
lea
lea
mov
enter
cmpsb
xor
inc
repnz
mov
xor
lea
stos
adc
and
iret
aas
cmpsl
push
add
ret
loope
jns
imul
xchg
jl
cmp
adc
or
lods
and
jp
in
xchg
cmp
pop
mov
inc
xchg
aas
je
mov
push
scas
mov
cmp
pop
ss
or
jo
fdivl
stos
mov
rcl
lcall
aam
cmp
lret
xor
scas
xor
into
mov
fisubl
add
and
adc
push
adc
enter
sub
or
xor
sarb
xor
pop
jg
pop
mov
test
adc
test
push
dec
cli
fistl
lahf
shll
stos
xchg
inc
dec
outsl
fsubrl
xchg
imul
pop
fimull
frstpm(287
hlt
inc
mov
cmc
insb
addr16
pop
jnp
mov
icebp
jle
mov
or
hlt
int
add
mov
outsl
int
in
outsl
sub
sbb
movsl
rcrb
mov
leave
repnz
mov
lcall
mov
lret
dec
negb
push
sub
pop
jb
dec
loope
jecxz
test
inc
or
roll
in
adc
cs
outsb
and
xchg
adc
inc
popl
imull
cs
fnsave
jge
cld
and
mov
dec
sahf
adc
lret
lahf
test
mov
test
xchg
xor
inc
cmp
jb
imul
movsl
sub
mov
mov
sbb
push
repz
inc
outsb
test
push
mov
sub
arpl
clc
cmpsl
cmpl
and
outsl
dec
shll
into
push
std
hlt
inc
xor
mov
cmp
jns
test
in
mov
push
pushf
mov
and
sub
orb
mov
loopne
mov
mov
xchg
inc
mov
popa
shrl
xor
roll
loope
or
sub
adc
cmp
ss
sub
daa
js
and
lret
movsl
pop
sbb
leave
push
fcmovnu
sbbb
mov
xchg
xchg
mov
insl
stos
arpl
xlat
mov
iret
in
fdivs
mov
mov
mov
sbb
mov
bound
xorb
notb
push
pop
mov
sbb
pop
gs
pop
popa
and
push
out
in
into
cmpsb
mov
lret
mov
arpl
pop
ljmp
mov
inc
sbb
push
clc
lock
ja
mov
les
push
mov
lahf
out
inc
int
xchg
fdiv
es
clc
jmp
xchg
xchg
popa
in
mov
bound
jp
inc
pop
imul
loopne
sub
mov
xchg
imul
push
adc
stos
lahf
sbb
cmp
cli
ljmp
mov
in
push
mov
cs
push
and
xchg
imul
popa
pushf
repnz
xchg
adc
sbb
jb
scas
mov
push
gs
in
fbstp
rcrb
bound
sbbb
adc
dec
aam
add
sub
cmpsl
xor
mov
add
jne
movsl
lahf
outsb
mov
xchg
ficoml
stos
mov
notl
cmp
out
test
insb
cld
and
pop
jo
lret
mov
push
daa
or
repnz
fiadds
jb
popa
ficoms
jno
add
movsl
mov
mov
dec
pop
push
xchg
push
xchg
daa
inc
es
dec
cmc
movsl
xor
cmpsb
jbe,pt
xchg
je
aas
pop
jo
imul
cmpb
mov
xchg
jle
sub
sti
mov
andb
pop
movsl
lea
jmp
mov
adc
and
js
cli
mov
dec
dec
xchg
repnz
adc
cmp
adc
xchg
arpl
jge
mov
pop
dec
mov
ret
mov
and
into
imul
xchg
fwait
popf
cmp
push
add
and
xchg
mov
repnz
xchg
ja
fidivrs
pop
dec
inc
inc
jmp
bound
pop
and
xor
jp
xchg
insl
stos
mov
push
cmpsb
adc
cmc
pop
popa
dec
mov
mov
ja
ljmp
push
aas
lret
mov
inc
add
dec
xor
stc
bswap
jo
dec
repz
cmp
mov
rol
out
filds
mov
lock
lock
sbb
xchg
dec
jae
enter
loope
gs
sbb
aad
rcrb
in
dec
xor
out
dec
mov
push
out
pop
insb
jb
movsl
cmp
xchg
jbe
loop
mov
call
adc
ret
dec
sbb
lods
lea
xchg
dec
cmp
sub
ljmp
cmp
inc
jae
pop
fstp
adc
push
insb
mov
loope
push
repz
pop
xor
movsb
out
jg
fimull
xor
pop
lret
jo
adc
cmpsl
sub
movsb
jmp
mov
mov
jle
inc
push
sub
outsb
push
cmp
mov
dec
sbb
xor
js
pop
mov
sub
xchg
lcall
ss
icebp
aad
out
cmp
push
add
cmc
add
sbb
mov
lea
push
mov
push
cmp
push
jns
loopne
mov
pop
and
in
mov
mov
roll
fisubl
adc
movsb
sub
add
push
adc
or
cmp
inc
mov
push
les
xchg
fdivrs
sbb
gs
rcr
cltd
aas
flds
daa
pop
add
inc
sbb
cmpsl
or
cmpsb
xchg
mov
rcll
in
arpl
cltd
add
clc
add
push
mov
ret
bound
push
js
jb
out
mov
xchg
mov
jp
rcl
adc
jmp
insl
ds
dec
repnz
sbbb
mov
mov
pop
inc
xor
es
mov
aam
sub
jne
ret
fldl
imul
in
add
sbb
push
xchg
iret
out
subl
jbe
es
cli
cmp
xor
push
xchg
cmc
outsl
cld
test
cwtl
rol
outsl
dec
hlt
lds
mov
dec
mov
sbb
mov
push
sahf
scas
imul
xchg
imul
pop
jb
mov
adc
ss
mov
out
pop
aas
imull
jge
das
inc
psubsb
mov
mov
pop
out
ds
fnstsw
fistps
add
xor
sarl
pop
xor
es
and
jb
cmp
jnp
cltd
sbb
add
insb
xchg
inc
mov
outsb
add
sub
aaa
outsl
sbb
dec
jl
adc
test
add
jnp
das
push
pop
mov
sub
sub
pop
jno
sub
test
and
xchg
nop
or
inc
mov
jge
andb
sub
push
imul
push
das
mov
rclb
inc
negl
je
and
jle
dec
clc
in
adc
mov
ret
andl
das
push
adc
pop
inc
mov
push
imul
pusha
sbb
inc
adcl
xchg
mov
ret
xor
xchg
lods
jecxz
decb
popf
ds
leave
or
dec
push
mov
loope
sub
sub
jae
pop
nop
cmp
inc
or
xchg
lods
mov
roll
pop
and
shl
lods
inc
ss
xor
insb
mov
xadd
sub
mov
and
xchg
xor
cmp
push
scas
sub
imul
aas
sub
dec
mov
pop
mov
adc
es
jns
xor
dec
sbb
cmp
lea
shl
cmpsb
pop
pop
or
add
lcall
add
cmp
add
pushf
push
cli
add
ror
or
inc
xor
push
scas
shll
dec
mov
pop
xchg
mov
ret
sub
cli
pushf
dec
lcall
cltd
dec
push
jecxz
sbb
add
add
into
ljmp
xor
add
cs
bound
int
cmp
mov
subl
shll
jg
rorb
notl
lahf
or
out
leave
das
add
rcrb
mov
or
insb
popf
cmc
fnsave
xchg
mov
ss
aaa
mov
push
pop
mov
add
push
sbb
clc
out
ror
pusha
mov
sub
lret
lods
xchg
xchg
ret
pusha
pop
fistpll
ficoml
xor
jns
dec
dec
int
adc
lock
push
xchg
jbe
inc
pop
xlat
xor
stos
push
scas
int3
popa
lock
stos
int3
loopne
xlat
ret
push
push
rcr
push
sbb
jns
lret
or
sbb
imulb
aam
lahf
xchg
xchg
xor
loopne
outsl
push
notb
cmp
add
pop
cwtl
icebp
push
stos
push
push
int3
addr16
aas
pop
jg
test
je
pop
fscale
fiaddl
das
cli
adc
mov
in
daa
inc
lock
jns
mov
add
scas
test
aaa
lods
test
mov
insl
repz
jmp
movsl
adc
rcl
ret
shll
sub
mov
push
dec
adc
cmp
mov
xchg
nop
into
and
dec
mov
rcrl
pop
xchg
into
mov
dec
pop
sub
scas
push
out
insl
mov
pop
mov
inc
es
jnp
push
adc
ja
push
pop
insb
mov
xchg
pushf
cli
clc
cs
cmp
in
cmp
push
mov
xor
cmp
js
mov
ds
fimuls
outsb
jl
pop
lahf
rolb
add
xchg
xor
scas
mov
out
sub
jmp
push
inc
inc
jecxz
sub
setg
cltd
clc
push
sbb
mov
fisttpll
xchg
inc
xchg
cwtl
pcmpgtb
jmp
out
mov
jne
lcall
lret
ja
mov
pop
dec
inc
ret
ret
pop
stos
sarb
pop
and
sub
pop
mov
pop
loope,pt
scas
xchg
in
divb
inc
bound
fcmovbe
aam
jp
ds
repz
mov
into
fistps
sub
jno
dec
dec
out
jge
rol
mov
scas
ljmp
pop
mov
cltd
int
pop
xor
aam
je
addr16
aam
adc
sub
cmp
dec
dec
xor
dec
push
xor
stos
inc
mov
mov
scas
mov
into
aaa
cld
jge
arpl
ljmp
push
or
negb
dec
es
adc
sub
ret
push
mov
xadd
sti
orl
pop
repnz
cmp
or
mov
mov
xchg
push
xor
xchg
sub
xor
pop
push
lock
push
loope
loop
adc
mov
jp
arpl
mov
fnstcw
mov
in
jmp
ja
add
pop
outsl
jne
inc
dec
inc
nop
repnz
in
out
and
loop
loopne
inc
mov
sets
enter
jg
and
repnz
push
shll
push
push
pop
lea
clc
cltd
lock
xchg
mov
adc
fdivrl
xchg
je
adc
xchg
xchg
sbb
or
sarb
lock
sub
dec
data16
out
dec
jbe
stos
and
es
sbb
into
adc
adc
aad
gs
js
test
inc
xchg
mov
mov
pop
outsl
pop
movl
mov
dec
mov
sarb
sbb
adc
push
int
add
jbe
andb
ds
popf
icebp
ret
mov
dec
loop
popa
aas
pop
fildll
sub
test
xlat
fisubs
or
in
dec
cmp
inc
sub
shll
icebp
xlat
push
jo
lret
mov
xchg
mov
add
xor
mov
addl
call
mov
std
test
jo
sub
insb
pop
push
jo
insb
inc
loopne
aad
jg
ret
pop
ss
or
jp
push
jnp
sub
jae
scas
stos
sub
jmp
repz
imul
push
sbb
or
dec
cmp
xor
jl
cmpsl
scas
push
in
jecxz
inc
ds
cld
out
sub
divb
inc
push
hlt
dec
imul
sbb
xchg
aad
xchg
test
data16
or
insl
mov
movsl
or
sbb
imul
mov
push
popa
sbb
mov
sbbl
xor
decb
lahf
dec
sub
jmp
mov
cmp
mov
sbb
int
cltd
ljmp
in
push
add
cmp
dec
pop
adc
fsubrl
jg
gs
in
mov
sti
in
shll
lds
mov
test
out
xchg
fnstsw
ljmp
into
jae
shrl
cmpsl
or
sahf
mov
cmp
sub
pusha
in
xchg
lret
imul
aad
fcomps
mov
mov
enter
mov
int3
cwtl
aad
rclb
jae
xor
pop
jbe
in
pop
mov
fdivrl
pop
add
jne
test
enter
dec
je
stos
dec
fnsave
ret
mov
sbb
mov
ss
shl
arpl
cmc
test
lock
minps
pop
jmp
inc
push
mov
in
adc
dec
cmp
mov
ret
imul
daa
sbb
mov
fistps
inc
data16
fs
inc
pop
mov
frstor
cwtl
adc
out
popa
aas
inc
jae
addl
dec
icebp
and
jns
lcall
and
jbe
push
sbb
mov
jle
ret
fsubrs
xorl
aas
push
iret
rcrl
xor
mov
xor
jmp
adc
cmp
pop
sbb
sub
lods
jne
ljmp
sti
pop
or
loopne
stos
push
mov
insl
lret
xor
stos
jp
imul
push
mov
sub
cld
pop
jp
pusha
cmp
daa
addr16
xchg
mov
xchg
ss
pop
add
adc
cmp
jg
mov
mov
lret
div
push
insb
ss
jl
adc
in
fsubs
imul
incl
loope
js
lea
add
js
push
or
out
orl
fwait
jo
imul
jns
icebp
dec
and
or
out
push
ficoms
arpl
or
adc
and
out
jl
push
jno
xor
mov
jne
cmp
dec
add
andb
pushf
mov
loop
cmp
mov
stos
cmp
xor
ljmp
cs
push
push
pop
clc
or
sub
adc
mov
or
jns
aam
imul
sbb
es
gs
lods
div
test
scas
shrb
or
pop
cli
sub
scas
mov
fstps
xchg
jle
jge,pn
clc
stc
and
sbb
add
mov
popa
cmp
movsb
mov
jo
aas
icebp
adc
mov
add
es
fstl
push
cmpsb
insb
cmpsl
lods
xor
xor
add
add
outsb
notl
pop
bound
ljmp
mov
xor
idiv
insl
mov
in
xor
jmp
nop
push
pop
pop
rcrl
sahf
lea
shlb
jmp
and
add
addb
xchg
in
loop
fcoms
inc
movsl
aam
aam
push
jl
imul
mov
out
out
fidivrs
in
lret
adc
pop
int
adc
mov
cwtl
or
cmc
nop
hlt
mov
test
sub
jae
cli
pushf
arpl
sub
mov
jp
lods
jge
jp
xor
ljmp
aaa
hlt
mov
js
pop
out
ret
fsubs
leave
sahf
icebp
push
and
mov
leave
push
mov
pushf
inc
loop
mov
loopne
adc
test
ljmp
addl
divl
pop
inc
and
or
loope
dec
adcb
shlb
adcb
sbb
test
xchg
sahf
andb
fistpl
aad
mov
mov
xor
dec
push
xchg
fmul
ja
mov
sub
aas
add
lret
jp
cwtl
and
or
int3
push
inc
pop
sub
mov
mov
jne
inc
lea
mov
leave
cmp
and
mov
mov
lret
leave
sahf
bound
inc
mov
sub
lods
or
je
imul
test
jecxz
fs
cmpsl
pop
adc
ds
mov
push
dec
lds
mov
sub
in
pusha
inc
mov
nop
mov
and
outsb
mov
mov
jnp
std
sbb
push
js
xchg
shlb
adc
aad
xchg
sbb
add
xchg
gs
push
cmp
add
push
iret
mov
fdivs
fnstsw
adc
test
enter
lret
aas
push
fsubrl
push
xor
out
repz
lock
or
xor
inc
stos
push
lcall
xor
pop
jmp
addl
scas
shlb
pop
mov
jo
icebp
pushf
mov
fstl
adc
cmc
ja
jno,pt
cmp
fldenv
xor
mov
xchg
iret
mov
je
sti
jp
sbb
xchg
and
out
and
mov
clc
rcrl
repnz
hlt
add
dec
jge
sub
hlt
and
dec
outsb
popa
mov
xchg
out
in
pop
dec
popf
mov
sahf
xor
test
xlat
inc
and
lock
add
mov
inc
inc
pop
or
xchg
mov
jecxz
data16
xor
inc
jl
mov
lret
jge
sbb
lret
add
cmp
aas
and
ret
daa
and
pop
or
dec
cmc
pop
sarl
scas
jge
imul
mov
loope
fimuls
inc
fidivrs
lahf
cwtl
mov
dec
sub
jl
out
jle
cmp
mov
or
and
mov
push
outsb
adc
mov
xchg
je
xchg
or
subl
negl
add
xchg
add
add
inc
lret
sub
mov
fidivl
xchg
mov
add
leave
add
sbb
scas
popa
lahf
lds
mov
loope
push
ret
and
cmpsl
loop
mov
jbe
out
and
cmpsb
sub
xor
nop
jp
out
cmc
std
inc
add
adc
lods
pop
in
pushf
or
sub
inc
insl
stos
fs
push
adc
adc
inc
aas
sub
xor
arpl
and
sti
xchg
leave
mov
addr16
jge
inc
imul
cmp
or
repz
shr
xchg
mov
jbe
mov
xchg
pop
faddp
push
xor
pop
std
xchg
jl
xorl
scas
xchg
mov
adc
or
add
stc
pop
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
bound
add
add
add
add
add
add
outsl
bound
add
bound
add
add
jo
add
xor
add
add
add
add
add
xchg
bound
add
bound
add
fs
fs
imul
outsl
add
popa
outsb
