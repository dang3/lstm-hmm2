call
ret
push
mov
add
lea
push
call
push
push
lea
push
push
call
test
je
push
push
push
lea
push
call
test
je
cmp
je
lea
push
call
lea
push
call
jmp
leave
ret
pop
popa
bound
je
je
popa
je
add
in
pushl
pushl
call
call
leave
ret
push
mov
add
push
call
test
je
mov
push
push
call
test
je
mov
push
pushl
call
test
je
mov
push
pushl
call
test
je
mov
movl
mov
mov
push
push
push
call
test
je
push
push
call
test
je
lea
sub
mov
mov
mov
cld
rep
mov
mov
mov
push
mov
mov
add
push
mov
rol
pop
push
mov
rol
pop
add
add
cmp
jb
mov
loop
pop
mov
lods
xor
stos
test
je
pusha
push
call
popa
loop
pushl
pushl
call
add
leave
ret
push
mov
push
call
inc
imul
jne
arpl
add
fs
gs
jne
arpl
push
imul
insb
insb
outsl
arpl
imul
gs
xor
cs
insb
add
in
add
mov
add
push
push
pushl
pushl
call
test
je
mov
push
mov
mov
mov
cld
rep
pop
push
xor
mov
add
mov
add
mov
add
pushl
push
push
call
add
loop
pop
pushl
call
mov
add
call
leave
ret
push
mov
pusha
mov
mov
mov
cld
rep
popa
leave
ret
push
mov
add
pusha
mov
add
mov
add
sub
mov
addl
mov
push
call
test
je
mov
add
push
call
test
je
mov
mov
add
mov
mov
mov
test
je
add
add
push
pushl
call
test
je
mov
mov
addl
jmp
popa
leave
ret
push
mov
pusha
mov
mov
lods
test
jne
loop
mov
jmp
movl
popa
leave
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
sub
add
inc
add
orb
add
pop
add
addb
add
add
add
add
add
add
or
add
mov
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
sub
add
add
incl
add
add
add
add
or
adc
add
add
add
add
jmp
add
inc
add
inc
add
add
jb
outsl
add
add
je
add
or
add
add
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
pop
add
push
or
add
incl
add
add
add
add
add
add
add
add
add
add
push
push
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
pop
push
add
daa
add
add
incl
add
add
add
add
add
add
add
add
add
add
test
or
jmp
incl
add
add
pop
rolb
sbb
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
push
rolb
cmp
dec
add
add
add
add
incl
add
add
add
add
add
add
add
add
push
push
add
jle
or
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
jo
add
je
add
addb
pushf
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
ret
gs
dec
pop
xchg
add
ret
mov
and
add
bound
cs
push
lcall
movl
mov
jp
popf
xor
sti
sbb
mov
and
jb
xor
dec
and
cwtl
mov
std
dec
dec
cld
sub
mov
sub
and
cmpb
pop
dec
sbb
and
sbb
xchg
sarl
imul
push
or
fcomps
sbb
cmp
mov
dec
int3
fsubl
out
loope
bound
enter
and
cmc
sbb
icebp
mov
mov
fdivl
lods
push
mov
aad
mov
fnstsw
ret
mov
inc
lock
sub
push
dec
or
lcall
enter
stos
rcl
mov
fdivr
push
mov
pop
imul
push
bnd
mov
mov
lret
mov
or
jne
and
push
mov
mov
xor
push
hlt
lret
mov
lods
mov
aad
and
lds
lock
and
sbb
add
stc
aaa
fmull
aad
inc
inc
idivl
cmp
repnz
in
dec
repz
or
cltd
imul
xor
mov
aam
fmull
or
push
movsl
xor
fisttps
jo
leave
pushf
or
test
mov
mov
jmp
inc
leave
sbb
out
jno
dec
mov
arpl
leave
mov
popa
adc
xchg
cmp
xchg
mov
adc
dec
test
sub
mov
fisubs
ret
jbe
xchg
adc
cs
mov
test
mov
cmp
test
mov
ret
je
mov
and
movsl
push
cmc
scas
xchg
push
dec
cli
ja
xor
sub
sub
in
loop
pop
ss
ja
mov
fidivrs
pushf
cmc
or
jle
pop
cld
or
or
jecxz
add
ljmp
add
sub
pop
xchg
and
fwait
sub
cmpsb
sbb
sub
frstor
dec
fimull
and
mov
cmc
and
adc
rol
mov
and
rcrl
push
out
xor
dec
out
js
inc
leave
lahf
in
bound
aas
cld
push
sbb
ret
ljmp
ret
loopne
and
sub
arpl
fdivrs
mov
cmc
xor
lahf
icebp
mov
ja
mov
pop
fistpll
push
pop
shll
inc
jnp
cmp
mov
mov
mov
rclb
sbbl
movsl
sub
jmp
xor
pushf
dec
mov
sub
mov
cmp
sbb
mov
jo
pop
icebp
push
mov
push
ficompl
inc
mov
lods
cmc
lret
dec
shrb
lock
push
dec
js
insl
push
push
mov
xchg
add
out
movsl
in
incb
mov
push
push
imul
dec
xlat
mov
fadd
inc
xlat
nop
push
insl
andl
ljmp
in
mov
pop
push
arpl
dec
add
add
sbbb
insl
mov
xchg
cmp
test
mov
add
mov
xchg
nop
inc
adc
inc
xchg
loop
out
sub
int
rcll
mov
push
stos
in
mov
imul
push
jae
xor
in
push
mov
sub
cmpsb
dec
int
lock
loope
nop
and
aaa
stos
mov
ret
or
adc
movsb
es
mov
hlt
dec
sbb
cmp
adc
push
negb
out
xchg
mov
cld
pop
pop
ret
in
movsl
orb
in
psllq
sbb
mov
out
in
sub
xchg
or
gs
or
add
mov
push
xlat
xchg
cmp
lods
out
in
xor
ljmp
bound
xchg
xchg
arpl
xchg
xchg
jecxz
or
out
test
dec
pop
mov
orl
lret
sub
pop
pop
ds
pop
mov
sub
jle
xor
mov
fbld
jae
dec
xchg
sahf
ficomps
add
mov
adc
fiadds
cwtl
mov
test
sbb
dec
and
fwait
push
rclb
aad
add
sub
out
jge
pop
lahf
and
mov
and
fwait
je
jbe
cmpsl
into
mov
call
mov
adc
fdivs
fstl
outsl
loope
out
or
inc
lcall
das
out
cmc
adc
xor
push
pop
or
mov
outsb
and
xchg
mov
scas
in
and
pushf
in
dec
jg
scas
cwtl
or
xchg
jns
push
shlb
movsb
pop
je
adc
cmp
add
cmpsb
cmc
shrb
addr16
xchg
xchg
rorb
cmpsb
sub
mov
cwtl
dec
inc
and
inc
mov
divl
lret
jns
dec
mov
sti
popf
mov
xor
repz
xor
mov
cs
inc
out
popa
inc
stos
inc
jns
fidivl
xchg
and
sbb
or
inc
jnp
jbe
xchg
pop
or
push
xor
notl
ljmp
dec
test
mov
sub
js
push
mov
imul
repz
mov
jmp
sub
add
cli
imul
and
mov
lcall
test
xchg
pop
cmp
test
das
mov
mov
arpl
push
enter
mov
pop
push
push
inc
and
dec
xchg
push
xchg
insl
sahf
je
sub
xlat
ret
enter
aaa
test
jb
out
cli
andl
mov
or
aaa
dec
popf
shll
sbb
cmpsb
arpl
icebp
dec
push
mov
push
test
xchg
stos
or
mov
mov
into
int3
xor
sbb
insl
ficomps
jae
data16
inc
popa
cmp
ffreep
adc
pop
ds
push
ficomps
xchg
adc
in
test
loop
cmpsl
js
mov
pop
cmp
mov
test
cmp
daa
xchg
add
dec
jno
mov
push
daa
loopne
fisttpll
xchg
lcall
stc
hlt
dec
adc
sub
jns
call
iret
sti
loope
mov
sbb
das
xlat
inc
sahf
cmp
std
push
push
mov
arpl
lahf
jge
push
mov
out
add
imulb
jg
xor
std
xchg
xlat
mov
push
addr16
fcomip
ret
push
jle
shr
test
mov
jae
add
movsb
mov
test
jns
push
adc
bnd
mov
jno
stos
pop
popa
dec
pop
inc
xchg
and
mov
jns
cmc
mov
or
adc
cli
dec
inc
lcall
sbb
aad
and
sbb
out
pop
dec
inc
fwait
mov
add
in
cmpsb
lock
frstor
out
push
stos
mov
imul
add
sysexit
dec
test
lret
sbb
and
shl
sub
jecxz
jmp
inc
mov
out
mov
std
mov
lods
pop
sub
inc
repz
mov
adc
push
mov
sahf
sar
sahf
pop
aam
cmpsb
xchg
test
lret
adc
mov
dec
leave
inc
lods
in
imul
xor
ret
ret
icebp
fists
stc
mov
imul
adc
jne
mov
or
pop
adc
xor
pop
xchg
add
mov
sbb
mov
insl
dec
insl
xor
lret
gs
pop
xor
dec
pop
pusha
data16
pop
aad
and
mov
orb
inc
xchg
icebp
mov
data16
jno
mov
fisttpll
mov
xchg
mov
add
je
cmpl
data16
jbe
or
dec
mov
push
cs
mov
pop
or
in
into
or
cmp
push
push
into
push
mov
clc
jle
mov
or
push
jns
lret
aam
cld
lahf
subb
cli
sti
push
mov
lods
push
jp
mov
pop
lret
cmp
je
icebp
ret
cmp
movsb
movzbl
adc
jp
or
std
jmp
fldt
pop
sub
xor
dec
sub
ss
add
lret
fcomip
inc
sbb
aad
mov
jp
cmpsl
inc
in
sub
negl
rorl
or
mov
lods
pop
add
jg,pt
pop
les
xchg
inc
js
test
mov
gs
mov
inc
stc
push
and
aad
jge
sti
inc
inc
popa
dec
push
inc
mov
in
mov
lcall
mov
out
out
pop
jecxz
or
xor
lds
dec
inc
xor
pop
mov
push
jns
xchg
inc
outsb
sub
out
cmp
shrb
fisttpll
mov
sub
adc
xor
mov
jne
lret
sbb
cmp
punpckhbw
rcrl
pop
pusha
popf
cld
cmp
xchg
cltd
loop
stc
pop
aad
push
cmp
cli
or
addl
test
icebp
xchg
pop
pop
out
xchg
mov
rorb
xchg
scas
stos
idivb
jmp
fwait
cmp
testl
es
movsb
lret
cmp
pop
add
xor
push
or
out
inc
adc
fimuls
mov
mov
in
loop
ljmp
or
xor
add
adc
inc
xchg
sar
inc
pop
gs
cmp
mov
adc
insb
lea
mov
cmp
ss
adcb
fstps
lcall
xchg
sarl
mov
mov
shll
ja
mov
mov
mul
cli
pop
cmp
nop
cmp
stos
xchg
arpl
ja
sub
push
jns,pt
cmp
mull
dec
call
mov
stc
push
cltd
fidivs
jno
pop
dec
data16
mov
inc
add
call
in
mov
daa
and
pop
cmpsb
movsb
rcrl
dec
or
xor
out
and
dec
pop
push
mov
push
lods
mov
and
adc
mov
cli
xchg
xchg
cmp
pop
xchg
pop
jnp
test
in
repnz
cmp
inc
mov
dec
jne
sbb
mov
repnz
pop
cli
mov
arpl
push
lea
sarb
push
orb
dec
pop
fdivrs
mov
and
or
repz
push
xchg
mov
jno
add
push
push
ficoms
cmpsb
mov
cmp
adc
and
jnp
out
cmpb
and
stos
adcl
xchg
jp
or
mov
xchg
xor
xorl
stos
cltd
inc
in
mov
or
arpl
push
subl
rcrl
pop
dec
pop
test
gs
add
jno
xchg
inc
aas
jp
adc
xchg
jno
stc
sbb
mov
out
movlps
lds
jmp
cmpl
mov
lret
insb
fsubrs
fadds
mov
repnz
xor
xchg
adcb
scas
aam
jl
mov
out
jmp
adc
lea
int
pusha
dec
js
das
push
jo
mov
lock
int
je,pt
cli
cmp
xchg
lods
dec
lds
push
shrb
loope
dec
fnstsw
imul
inc
jnp
popf
ljmp
popa
dec
dec
jae
lret
add
inc
push
xchg
loop
pop
cmp
ficoml
mov
and
xor
ss
pop
dec
mov
cs
mov
daa
cmpb
pop
mov
sbb
in
jno
not
shr
lea
popa
mulb
jnp
pop
cmc
enter
add
sahf
sbb
pop
fiaddl
sbb
das
lds
test
mov
jo
push
les
lsl
ljmp
divl
mov
stos
pop
ljmp
mov
repnz
adc
push
xor
and
movsl
movsb
sbb
xchg
cmp
push
add
fdivrl
fwait
xlat
dec
mov
fsubl
pop
fmull
outsl
dec
and
movsl
popf
roll
mov
mov
mov
xlat
jns
inc
adc
or
pusha
test
movsl
xor
js
push
call
inc
mov
push
xor
icebp
fbstp
aas
jg
cmp
dec
mov
faddl
mov
jne
add
hlt
stc
and
arpl
scas
out
test
sbb
mov
mov
lds
push
loope
pop
add
push
dec
js
aaa
stos
outsl
push
scas
sub
push
das
dec
push
pop
jmp
sub
and
xor
pop
xchg
cld
xchg
in
pop
iret
out
pop
dec
xor
mov
fwait
add
mov
aad
scas
mov
arpl
aas
mov
pop
mov
ss
mov
sub
add
gs
pusha
and
adc
adc
or
push
scas
xchg
int
lcall
xchg
adc
mov
jl
xchg
mov
xchg
arpl
sbb
dec
jns
iret
pop
loop
or
mov
fsts
ror
jae
es
loope
adc
daa
repnz
mov
xchg
adc
test
mov
mov
jnp
sbb
in
dec
icebp
stc
and
pop
mov
jne
ds
xor
mov
cmc
mov
mov
test
imul
mov
mov
push
xchg
popa
bound
fisttpll
ficoms
lds
push
test
sbb
movsl
dec
xchg
mov
inc
or
lret
jns
loopne
or
push
iret
arpl
mov
clc
inc
cmpsb
pop
cmp
dec
jnp
cmp
sub
add
imul
fwait
xorb
fwait
mov
call
outsl
push
fwait
push
xor
ficomps
in
jecxz
and
xor
jecxz
jmp
push
dec
sti
mov
nopl
pop
testb
adc
inc
por
dec
pop
lcall
mov
dec
sub
sub
imul
inc
movb
xor
test
adc
push
das
inc
adc
sub
outsb
push
leave
xchg
lds
jno
pusha
jle
mov
sub
scas
mov
loopne
push
sub
in
mov
mov
push
and
aam
aad
test
inc
cmp
mov
push
mov
mov
xchg
adc
stc
add
ror
pop
cmc
lret
pop
aaa
pop
xor
cmpsb
pop
insl
jmp
jns
in
cmpsl
sbb
push
xchg
mov
mov
dec
enter
lock
clc
add
xor
ljmp
fmull
repnz
or
outsl
sbb
sub
mov
mov
scas
aad
xchg
pop
xchg
fists
in
sbb
sub
aaa
push
adc
lahf
lahf
pop
add
sub
xchg
out
or
pop
repnz
jbe
xchg
lret
add
and
xchg
xchg
jg
mov
cmp
out
or
imul
push
mov
dec
cli
out
sbb
dec
fmuls
adc
outsb
pop
mov
clc
sub
xchg
mov
adc
push
mov
push
sahf
les
stos
les
mov
ljmp
xor
repz
mov
lock
push
mov
in
or
fstpl
hlt
xchg
dec
xchg
out
jne
cmpsl
mov
jp
adc
xchg
and
jnp
insl
jecxz
fmull
xlat
lods
adc
enter
or
jnp
push
dec
aaa
push
inc
push
roll
incb
out
cwtl
push
dec
ss
xchg
xor
popa
fstpl
cmc
and
test
add
add
inc
mov
sub
cmpsb
lcall
rolb
adc
sbb
fadds
repz
dec
jne
push
ficoms
jp
pop
pop
mov
jb
cmp
sub
jo
jno
sbbb
sahf
mov
or
aas
gs
sti
imul
aam
dec
jle
mov
xchg
out
cmpps
inc
xchg
xchg
cmp
mov
cmc
inc
push
add
leave
add
jle
jmp
sub
ret
adc
xlat
dec
lcall
data16
cmp
test
dec
mov
out
inc
int3
mov
outsb
add
pop
aas
push
js
xor
mov
sarl
and
pushf
pop
xchg
rcrl
xchg
test
and
and
jns
sahf
fwait
outsl
outsl
xchg
lds
inc
push
scas
cmp
pop
sahf
inc
mov
sub
pop
cmp
xor
gs
inc
and
ljmp
loop
aas
or
cmp
mov
add
test
mov
dec
cmp
rcr
xchg
cmp
or
aas
pop
cmp
imul
loopne
cwtl
add
sar
test
xchg
dec
into
xchg
in
in
je
out
cmp
enter
pop
add
lcall
pop
mov
xor
inc
adc
leave
and
and
imul
stos
adc
pop
aaa
or
clc
lcall
mov
push
push
sbb
jne
mov
dec
out
movb
les
fisubs
ret
or
outsb
jno
or
add
or
in
stos
xlat
stc
inc
pusha
test
mov
adc
mov
pop
imul
mov
jp
ffreep
out
pop
jl
ss
sbb
pop
add
jne
dec
rorb
std
mov
xor
nop
xchg
jne
inc
dec
push
cmpsb
fucomp
lret
andl
clc
pop
or
pushf
imul
xor
xchg
ss
xor
pushf
scas
pop
in
adc
stos
xor
sub
sub
movb
xchg
adc
xor
rcrl
cmp
stos
sbb
je
jno
adc
add
in
adc
jnp
mov
dec
movsl
jecxz
mov
in
cmp
imul
test
pusha
clc
sub
neg
jns
ds
mov
inc
mov
sbb
popa
add
sti
sub
das
mov
sub
add
push
call
and
test
cmp
xchg
rcrb
jbe
xchg
mov
imul
xor
lea
shl
rorl
addr16
cltd
or
xchg
push
sarb
lods
or
xor
ja
adc
inc
ret
jne
pop
mov
int3
fs
push
push
movsl
dec
lcall
push
xor
pop
aaa
sbb
jnp
popf
popa
add
scas
es
xchg
fcompl
mov
fimull
pop
push
enter
xor
fidivl
cmp
and
mov
sub
mov
movsb
cli
fistps
push
dec
and
lahf
inc
outsb
add
clc
adc
arpl
test
inc
mov
icebp
daa
repnz
out
jno
pusha
dec
push
sbb
or
fnstcw
sub
push
ffree
mov
sbb
sti
pop
stos
out
je
bound
aaa
mov
leave
cmp
lea
jmp
jne
in
lcall
dec
push
ja
iret
pop
pop
push
ds
push
iret
or
movsb
or
mov
test
xor
xor
int
cmp
cmc
xor
pusha
xchg
popf
jo
sbb
or
insb
lods
sbbl
mov
aad
inc
sbb
out
cmp
push
mov
mov
gs
ja
in
jns
lods
loop
cmpsl
pop
push
inc
int
pop
and
aas
pop
cs
jae
in
dec
les
dec
add
dec
xorb
fists
jbe
and
ret
frstor
and
ja
push
fdivs
mov
mov
sub
insl
cmp
adc
jl
outsb
adc
das
sti
cld
jmp
lret
pop
insl
sub
adc
add
xor
stos
sbb
cmpsb
inc
stc
sbb
test
into
pop
inc
lret
cmp
addr16
test
xchg
xchg
xor
fsub
add
inc
test
sub
arpl
pop
outsb
lret
in
inc
movsb
out
shlb
lret
sbb
push
scas
movsb
out
add
lea
cmpb
push
pop
lods
xor
sbb
mov
lock
cmp
push
fildll
sub
jge
sub
cli
mov
mov
js
pop
fdivrl
adc
pop
sahf
or
stos
jo
daa
mov
push
nop
pop
mov
in
cwtl
mov
and
loope
add
imul
mov
push
mov
shrb
test
shl
mov
mov
inc
cmc
jbe
jne
repnz
jae
insl
loope
mov
and
shl
push
adc
je
dec
mov
push
sbb
pop
push
jno
stos
mov
xor
push
pop
in
xor
dec
sbb
pop
xor
or
sub
and
scas
xor
mov
les
mov
lcall
jno
xchg
dec
and
xlat
jnp
adcl
cli
ret
rol
inc
sbb
pop
std
lret
xchg
add
sbb
mov
dec
push
movsb
shl
mov
popa
testl
xchg
jecxz
inc
repz
ljmp
jo
and
pop
jb
xchg
insl
test
cmp
inc
insl
dec
sub
jecxz
icebp
sub
and
mov
movsb
or
repz
mov
nop
insl
push
sbb
xchg
cmp
sub
cli
and
sbb
arpl
cmc
std
stc
cmp
call
fcoml
xor
push
and
pop
mov
nop
push
test
adc
out
ss
cmpsb
out
sub
js
sub
adcl
push
inc
lcall
xchg
pop
daa
mov
jmp
into
dec
sti
in
or
mov
mov
enter
xor
xchg
push
xor
insl
loope
mov
icebp
mov
hlt
sbb
pusha
inc
inc
cmp
bound
ss
mov
stos
enter
pop
or
push
inc
jbe
cmp
adc
push
sbb
orb
push
push
mov
je
mov
cwtl
fdivrs
dec
mov
rclb
pop
xor
ds
std
inc
xchg
outsl
dec
sub
inc
sti
dec
mov
andb
int3
adc
rolb
decb
lods
xlat
cmp
ds
rcr
pop
add
xlat
ljmp
nop
nop
dec
mov
lea
xor
aam
jno
xor
pushl
leave
fnstsw
push
mov
add
sbb
xlat
cltd
cmp
add
cli
sub
mov
fbstp
inc
xchg
xor
xchg
jno
add
push
stos
push
andb
stos
frstor
xchg
dec
jecxz
in
rcrl
add
mov
ret
sub
inc
xchg
and
jle
pop
add
xchg
sbb
add
ja
ja
jmp
pop
addr16
bound
cwtl
nop
jae
clc
sbb
and
pop
xchg
xchg
gs
push
shlb
cmp
mov
inc
into
pop
pop
imul
cmp
neg
mov
mov
inc
and
dec
or
sub
test
pop
idiv
xchg
mov
push
mov
nop
or
sahf
xchg
jnp
mov
pop
and
xchg
sub
cmp
lods
cld
or
sbb
mov
sbb
orb
mov
fwait
push
ret
jae
push
mov
jl
pushf
lcall
js
cmc
sbb
cmp
jns
or
fcoml
test
rcrb
xchg
and
xor
popa
xchg
pusha
popa
dec
sbb
fiadds
jle
adc
or
les
lods
adc
out
iret
push
inc
pop
loope
lret
fstp
mov
xorl
fucomp
es
pop
int3
dec
test
hlt
xor
xchg
pop
add
call
rorb
or
add
repz
negl
adcl
pop
adc
dec
jnp
rorb
hlt
cmp
cld
sahf
mov
xchg
movsl
xor
fmuls
and
fsubr
push
add
sub
in
adc
popf
pop
sbbl
inc
and
int3
cli
pop
bound
lret
adc
repz
aad
sub
test
mov
push
rcr
add
pop
call
adc
lcall
xor
ja
push
sub
aam
add
and
add
add
pop
sub
inc
mov
cmp
in
inc
bound
adc
sarl
dec
jno
call
cmpsl
dec
sub
outsl
arpl
ja
xor
ja
cmpsl
xlat
test
cld
negl
mov
pop
mov
lret
dec
cltd
orl
mov
mov
test
mov
bound
adc
mov
xchg
testl
cmp
mov
lcall
ss
inc
aam
das
dec
inc
push
int3
adc
and
mov
mov
jne
loopne
adc
adc
add
jg
push
push
cmp
push
inc
stos
jg
bound
out
push
dec
int
mov
xor
rclb
test
ret
shll
xor
das
mov
jne
out
daa
or
mov
xchg
stos
cld
xchg
cmp
scas
sti
repz
out
in
mov
adc
iret
mov
sahf
sub
add
test
xor
call
dec
mov
in
ds
add
jae
sbb
fidivrs
dec
sbbb
std
dec
shrb
xor
in
adc
out
in
rolb
adcb
or
rolb
jb
stos
push
add
fbstp
inc
nop
into
jbe
pop
stos
cmp
sbb
mov
mov
addb
sbb
push
stc
xchg
cmp
inc
sbb
outsb
pop
nop
add
repz
pushf
dec
pop
mov
movsl
sahf
orw
insb
jbe
push
cmp
adc
jl
jg
lods
cmpsl
in
cmp
imul
dec
pop
xor
add
cs
clc
imul
mov
and
and
pop
dec
fnsave
xor
xor
repnz
push
ja
es
mov
dec
jmp
or
mov
rorl
pop
lret
sbb
and
adc
cmp
xchg
mov
aaa
insl
or
inc
adc
mov
in
ffree
push
push
push
popa
shrb
cs
xorl
clc
movsl
mov
insl
dec
push
sbb
cwtl
dec
dec
push
ljmp
push
inc
sbb
mov
xor
xlat
add
adc
xor
and
mov
ljmp
mov
hlt
push
mov
jnp
lcall
lea
cmp
mov
mov
pop
dec
hlt
lods
dec
mov
push
cmp
ja
and
and
mov
xor
jmp
sbb
sbb
mov
int
xor
mov
mov
loope
mov
imul
in
dec
rclb
xchg
sti
cmpsb
pusha
sub
mov
sub
lcall
add
inc
repz
in
test
ror
aas
aam
and
jb
loope
jp
jmp
dec
sti
ret
insl
lds
js
inc
negb
clc
stc
sub
mov
repz
push
mov
pop
dec
jae
clc
mov
dec
adc
mov
jo
loope
sub
scas
adc
ds
into
mov
scas
vpcomub
jmp
js
pushf
aam
jbe
inc
xchg
nop
push
mov
jbe
mov
or
lock
dec
fidivrl
mov
mov
and
xchg
stos
sub
in
mov
xor
pop
leave
insb
repnz
sbb
mov
bnd
add
adc
adcl
cwtl
lods
xchg
jne
cli
adc
sbb
fstpt
int
imul
push
lds
dec
sub
int3
mov
roll
or
jnp
jns
sub
lret
iret
fildl
jge
imul
lret
xor
mov
clc
sub
cmpb
xor
push
cmp
nop
int3
leave
xchg
cmp
adc
nop
adc
or
insl
sub
or
cs
out
xor
or
test
repz
sub
mov
sub
and
lahf
jne
jmp
push
cmp
mov
inc
lret
aad
jb
test
sbb
roll
jecxz
push
xor
and
dec
scas
js
jo
xchg
inc
and
shlb
test
iret
lods
imul
call
mov
mov
aaa
movsb
inc
ret
nop
movsb
int
inc
jp
dec
pop
xor
push
loop
mov
loop
in
xchg
xchg
sarb
pop
xchg
ljmp
and
cmp
repz
fdivl
xchg
cmp
inc
cmpsl
or
outsl
add
dec
call
insl
push
arpl
lret
pusha
jb
in
add
lods
push
inc
jmp
mov
mov
cmp
icebp
mov
fsubl
fstl
sbb
jbe
mov
inc
repnz
xchg
sub
push
test
ja
icebp
pop
xchg
push
and
add
jmp
or
aad
mov
jmp
ljmp
cmp
nop
stos
iret
cmp
popf
cmp
lret
and
xchg
push
inc
fdivrp
push
mov
mov
imul
arpl
add
fwait
add
push
or
fwait
add
sub
mov
cmc
addr16
adc
lea
xorl
in
ss
not
orl
dec
mov
push
sbb
stc
xchg
jmp
lods
dec
adc
adc
cltd
and
enter
adc
add
pop
data16
pop
filds
out
push
stos
repz
xchg
jecxz
test
mov
push
or
out
mov
dec
gs
mov
pop
lcall
xchg
jp
lods
mov
dec
shl
js
push
inc
clc
push
out
or
cltd
push
sahf
stc
mov
xchg
cltd
dec
mov
sahf
shl
mov
adc
aad
mov
push
cwtl
jb
add
jns
xchg
in
sub
mov
cmc
pop
push
add
loop
dec
inc
icebp
inc
lock
lcall
pop
popa
cmp
xchg
and
int3
pop
adc
pop
popf
lods
xor
mov
test
fmuls
mov
inc
push
push
mov
lds
aaa
sub
xchg
jge
jp
mov
adc
and
or
lret
jmp
enter
rolb
adc
dec
xchg
shll
psllw
movsl
sbb
stos
jno
mov
push
repz
fidivs
jns
jmp
imul
popf
aad
loopne
sbb
roll
mov
mov
xchg
cmp
mov
mov
xchg
or
jecxz
jge
icebp
in
fmull
push
and
mov
jb
push
cmp
movsb
push
mov
jae
xor
pushf
test
dec
sbb
dec
test
push
jo
stc
imull
xchg
outsl
inc
leave
sub
mov
inc
xchg
pushf
xlat
lds
and
jnp
inc
mov
dec
cmp
push
inc
andl
mov
jo
push
add
fsubl
pusha
mov
adc
sub
sub
mov
repz
push
pop
ja
fs
mov
sub
gs
jg
sub
popf
mov
sub
in
dec
icebp
or
xorb
ds
mov
repz
sub
imul
push
lcall
pop
loope
or
or
and
sbb
rep
insl
push
pop
sub
push
mulb
in
sub
fildl
push
inc
js
leave
in
and
pop
js
cmc
jp
bound
dec
ret
bnd
xchg
jbe
stos
fmuls
insb
enter
enter
jno
nop
out
imul
daa
cld
xor
ret
xchg
sub
or
cmp
pop
add
jle
jp
jbe
mov
daa
std
leave
out
imul
subb
ds
jo
xchg
cmpsl
or
or
arpl
mov
jl
inc
push
cli
xor
push
cmpb
lds
mov
loopne
pop
fimull
cmp
lods
mov
sbb
dec
inc
jnp
dec
push
pop
and
in
push
or
imul
inc
xor
mov
hlt
popf
cmpsb
mov
push
pop
inc
aad
mov
mov
xor
mov
and
xchg
adc
pop
dec
stos
or
dec
mov
adc
or
sti
enter
pop
xchg
mov
cmc
mov
mov
scas
lock
and
add
adc
cmp
jl
push
sub
lds
xchg
in
ficompl
cmpsb
dec
pushl
jb
sti
xor
cltd
sbb
push
pop
mov
push
lods
jecxz
cld
fisubrl
mov
jmp
lods
sbb
shlb
inc
lods
xchg
push
jb
and
pusha
jg
push
in
dec
jo
push
push
loop
into
mov
and
int
fwait
adc
stos
xchg
push
mov
ss
mov
or
or
movsb
cmc
mov
mov
lds
lret
cmpsb
mov
adc
mov
adc
popf
push
xorb
xchg
jle
in
mov
cmp
or
lds
mov
loop
ret
dec
stc
sub
cmp
xchg
cmp
shrl
shrd
faddl
int
inc
pop
inc
cmpsl
iret
mov
sarl
mov
fxch
ja
rcrb
test
cmp
mov
data16
push
push
sti
pushf
pop
cmpsl
mov
xchg
pop
push
aam
xchg
fcomps
fidivrs
rolb
and
dec
xor
sti
adc
pop
adc
or
loopne
and
adc
movsl
clc
in
je
cmp
adc
jbe
sbb
lods
dec
xchg
mov
push
mov
pushf
inc
mov
sub
scas
sub
test
daa
imul
lea
push
adc
inc
and
test
cmp
jb
mov
scas
lods
aaa
popa
pop
in
mov
insl
adc
popf
inc
sbb
sbb
test
inc
push
insl
ret
jo
mov
mov
shld
fucomi
push
iret
mov
popa
or
loopne
loopne
cmp
mov
aad
test
pop
cltd
rorb
imul
ficoml
and
outsb
jbe
pop
stos
fld
xchg
outsb
or
push
cwtl
sbb
add
xchg
or
loop
orl
cli
push
and
in
mov
push
nop
sbb
loop
and
sub
adc
xor
pop
ret
push
inc
pop
dec
jge
incb
xchg
leave
mov
addr16
fnsave
or
pushf
jl
iret
xor
mov
xchg
aas
sbb
jge
or
cmp
push
mov
pop
push
jne
and
jle
std
xchg
or
ds
dec
repnz
daa
in
push
dec
sbb
mov
mov
fadd
clc
mov
fstl
mov
loopne
enter
aaa
mov
mov
push
pop
push
xchg
inc
scas
cli
rcrl
out
outsl
repz
sbb
or
and
lock
lds
movsl
mov
scas
xor
pop
out
imul
lods
ja
dec
mov
or
adc
test
fsubl
loopne
ss
jl
adc
jno
cmpsl
mov
in
xchg
or
sbb
mov
popf
dec
or
out
or
sbb
data16
int
or
mov
stos
cltd
loopne
inc
test
xchg
mov
mov
cmc
mov
and
adc
cmpl
jb
add
jbe
mov
or
test
and
inc
call
cmpsl
mov
roll
loope
jb
and
mov
adc
in
pop
mov
mov
push
cmc
jecxz
.byte
pushf
.byte
.byte
insb
