push
call
ret
ret
pop
das
cwtl
mov
sti
dec
mov
add
rorl
mov
sar
lcall
mov
out
clc
mov
mov
scas
ret
lret
push
and
pop
dec
add
in
dec
mov
js
hlt
mov
and
xor
push
push
xor
and
mov
fcoms
xchg
jmp
mov
mov
rcrl
test
aad
dec
lods
and
aaa
pop
out
cmp
mov
clc
in
cmc
cs
test
sub
outsl
mov
inc
push
cmp
mov
xor
inc
cwtl
adc
push
cmc
jmp
inc
sub
or
sbb
sub
repz
add
jno
enter
jle
mov
xor
jb
cmp
xchg
incl
xchg
or
pop
xchg
inc
sub
mov
fistl
addr16
movsb
and
mov
xor
pop
rorb
jecxz
ja
test
mov
sbb
popf
pusha
into
es
pop
sbb
xor
outsl
xor
sbb
stos
fists
jl
je
pop
aam
mov
and
dec
outsl
imul
shl
xchg
pop
outsl
clc
lods
mov
lret
cmp
test
mov
insl
dec
mov
clc
jb
dec
dec
xchg
stos
or
ljmp
cmpsb
stc
jno
pop
test
mul
adc
or
outsl
das
lea
cli
mov
xchg
cmpsb
or
dec
imul
mov
negl
push
in
dec
dec
push
mov
sbb
sub
jg
mov
xor
or
pop
dec
scas
call
pop
cmp
adc
stos
scas
test
dec
inc
mov
repz
inc
in
mov
insb
dec
jmp
sub
cmp
outsl
mov
das
cmp
test
or
fwait
hlt
and
sbb
jge
xchg
xchg
cmp
push
pop
sub
ror
fst
mov
cmp
sub
out
outsl
push
xlat
rol
add
sti
sbb
inc
sbb
in
xchg
xchg
aad
mov
test
inc
xchg
pop
clc
push
and
inc
xchg
xchg
push
dec
xchg
pop
add
add
test
fldl
cwtl
or
and
jne
adc
xor
in
push
orl
mov
cli
mov
movsl
fwait
pop
popfw
lahf
movsb
pushf
leave
cli
xchg
push
scas
push
addb
aas
shll
cs
xchg
cmpsl
bnd
lock
test
push
stc
dec
push
push
push
in
addr16
repnz
push
jge
jb
cmpsl
jne
mov
adc
fists
sub
and
sti
in
das
cwtl
es
mov
lcall
xor
mov
push
test
pop
mov
in
fsts
inc
jb
shl
or
outsb
int
xchg
xor
daa
rcr
mov
xchg
and
xchg
pop
pop
and
xor
into
add
xchg
repz
sbb
pop
fisubrl
inc
sub
or
enter
iret
mov
jp
mov
inc
mov
xlat
into
mov
ret
inc
add
cmpb
roll
in
push
sub
xor
mov
imul
test
and
or
push
and
in
sahf
pop
mov
in
sbb
out
xchg
test
jg
data16
jp
mov
mov
mov
sub
inc
inc
imulb
push
jnp
or
push
jne
hlt
data16
loop
sahf
push
shll
jno
mov
cltd
mov
insl
loop
or
imul
nop
shrb
aas
mov
movhps
notb
movsb
cwtl
arpl
les
std
or
ljmp
dec
dec
mov
imul
sub
or
std
aaa
add
xchg
xchg
or
push
mov
out
mov
gs
xchg
sub
aaa
dec
in
fs
push
mov
cld
and
or
jno
dec
fwait
lods
fadds
jecxz
xor
and
jl
std
outsb
fcoms
outsb
mov
push
mov
cs
pop
les
mov
stc
pop
pop
and
scas
lods
jns
add
pop
pop
fisubrl
pop
cwtl
loope
jecxz,pt
fldpi
mov
cmpsb
repnz
lea
and
jae
ror
xchg
rorb
sbb
cmp
adc
and
movsb
mov
or
les
cmp
cmc
roll
mov
and
or
push
addr16
cmp
in
adcl
lahf
push
mov
ret
cmp
sbb
ds
in
mov
sti
mov
push
popf
and
mov
subb
mov
push
xchg
add
xchg
adcl
mov
inc
rolb
add
or
mov
shll
or
cmpsb
xchg
clc
into
sarb
push
dec
pop
push
dec
sub
insb
jne
lds
repz
or
loopne
or
mov
std
add
das
cmp
out
mov
push
mov
jge
add
hlt
add
lods
mov
push
stc
push
dec
out
orl
or
jp
clc
dec
mov
push
mov
cmpsb
xor
insl
jb
push
nop
jle
cli
push
mov
mov
and
fsubs
mov
movsl
sbb
mov
cmpsl
jno
outsl
daa
adc
adc
and
orb
hlt
inc
jnp
mov
stos
push
mov
push
adc
add
xlat
fnsave
xchg
cwtl
xchg
pavgb
or
cltd
aam
push
mov
xchg
mov
sub
pop
mov
mov
or
jp
loop
lcall
pextrw
popf
lea
or
fsubrs
bound
jns
aad
or
push
mov
imul
lret
scas
mov
aas
push
lcall
xor
jno
dec
inc
test
sub
sub
dec
je
pop
sbb
push
and
add
push
in
lods
call
sub
outsl
and
fdivs
push
shrl
stc
popf
loope
jns
leave
shlb
faddl
sbb
mov
js
aam
in
xor
subb
iret
je
xor
xchg
mov
sti
pop
pop
pop
xchg
cwtl
sub
and
push
ret
rcll
ret
lret
dec
inc
dec
xchg
test
arpl
push
leave
sbb
inc
sbb
dec
cwtl
iret
and
test
ret
es
jbe
inc
inc
xchg
and
lcall
xchg
fwait
out
iret
xchg
sbb
xlat
xor
repz
mov
inc
test
dec
add
adc
pusha
xor
pop
std
stc
pop
or
movsl
cld
in
imul
jecxz
paddd
jae
jge
push
lahf
mov
mull
sbb
pusha
add
idivl
das
mov
sbb
or
push
clc
pop
mov
popa
lods
add
jb
inc
pushf
mov
xchg
jnp
jae
stc
stos
in
in
mov
ret
repz
pop
imul
dec
cs
test
xchg
pushf
dec
inc
sub
mov
or
fstpt
push
cmpsb
ds
leave
jle
push
jge
shrb
add
push
in
or
or
dec
gs
add
enter
add
or
push
xlat
out
fstl
rcrb
jo
or
pushl
cmp
inc
sbb
iret
or
cmpl
cmp
jae
push
sub
pop
adcb
jp
sub
and
jbe
ficoml
inc
bound
aad
inc
mov
mov
adc
jbe
sbb
push
push
dec
les
pop
xor
jl
shrb
jle
cwtl
pop
loopne
xlat
pop
push
or
dec
or
xor
jmp
mov
testl
add
insb
mov
mov
imul
xchg
xchg
xchg
mov
and
mov
lcall
pusha
in
fptan
add
in
lea
lea
es
shr
xchg
data16
xlat
pop
mov
outsb
sub
cmpsl
ficomps
inc
push
lods
nop
or
dec
cmp
xchg
mov
sbb
inc
ljmp
lods
fstps
popf
xchg
movsb
or
sbb
dec
jecxz
inc
pop
mov
ret
js
and
imul
jge
pop
scas
cs
push
xchg
in
adc
stos
test
jge
add
aaa
xor
push
or
or
fistps
out
xchg
jecxz
call
adc
or
mov
iret
call
loopne
stos
shlb
outsb
xor
imul
mov
out
shlb
mov
shll
in
and
out
testl
jnp
sbb
leave
and
pop
ja
mov
stos
loop
rol
in
pop
addr16
loope
andl
sarb
pop
mov
in
pop
adc
mov
insb
sub
mov
push
ds
xchg
jb
mov
xchg
and
rorb
dec
scas
mov
arpl
mov
push
lock
das
ljmp
inc
xchg
jecxz
fs
es
mov
daa
cmp
pop
in
addb
shrb
icebp
movsb
mov
and
adc
lahf
ja
adc
xor
and
cltd
outsl
push
pop
sbb
mov
adc
xor
dec
pop
add
xorl
jbe
in
imul
fimull
cli
jb,pt
fisubrl
push
movsl
sub
cmp
xchg
push
das
ja
push
mov
pop
mov
insl
inc
jmp
pop
dec
andl
mov
js
xor
aas
dec
or
and
xchg
imul
insl
fstl
inc
mov
xor
inc
fidivs
out
ss
in
std
jmp
repnz
sbb
and
lock
mov
out
inc
sub
int3
push
js
gs
cmp
testb
fnstsw
mov
cwtl
adc
aad
lods
jne
mov
push
xchg
fwait
mov
mov
mov
ja
lahf
mov
mov
dec
rcrl
mov
dec
adc
add
push
aas
rclb
rcrb
sbb
sbb
cmp
xorb
xchg
push
hlt
xorl
xchg
xchg
xor
pushf
jbe
jecxz
es
shlb
mov
or
into
lcall
xor
les
xor
or
lret
and
pop
jb
aad
pop
cmp
cli
leave
add
push
mov
outsb
pop
popf
cmpsl
pusha
jbe
ss
sub
insl
mov
cmc
cld
insl
mov
rol
fadds
notb
cltd
push
ret
mov
xor
insb
cmp
push
adc
and
cmpsb
andb
push
addl
sbb
jne
adc
jl
insl
dec
xchg
iret
js
in
or
mov
mov
xor
sub
adc
sbbb
xchg
mov
xchg
mov
push
or
inc
xchg
mov
jp
lds
stos
and
or
cmp
sarb
cmp
sbb
inc
dec
push
out
bound
sbb
pop
add
icebp
push
fbld
fsubrs
loop
sub
push
adc
pop
adc
bound
lret
sub
and
gs
aas
mov
das
inc
out
push
das
push
inc
jl
mov
cwtl
sarb
xchg
adc
push
ret
icebp
mov
nop
cmp
pop
xor
imul
mov
movsb
xor
fsubr
pop
cmp
rcll
cwtl
pop
adc
jp
std
in
mov
arpl
lds
xor
insl
in
adc
sub
clc
jae
lcall
jnp
scas
repz
or
loope
jecxz
and
push
inc
stos
pop
rcrb
push
cwtl
addr16
aas
adc
insb
xor
jno
xor
lods
or
mov
jo
out
mov
aaa
pop
xchg
mov
ja
jp
fwait
stos
idiv
jnp
push
stos
xchg
loopne
push
test
inc
cmp
mov
arpl
or
add
mov
daa
inc
cwtl
pop
adc
daa
mov
iret
lds
jb
mov
or
imul
mov
mov
mov
das
mov
insl
adc
jo
mov
mov
jne
lret
sbb
lcall
daa
sbb
out
jg
jnp
lds
repnz
pop
adc
sbb
stos
nop
dec
mov
arpl
lods
aad
loop
mov
icebp
mov
in
lods
es
inc
mov
cmp
mov
out
mov
das
mov
in
fistpl
data16
xchg
mov
out
clc
ss
xchg
stos
adc
cmp
mov
es
clc
ror
mov
push
adc
xchg
add
js
adc
cwtl
bound
inc
jge
cmp
mov
mov
mov
or
mov
pop
sarb
mov
cmp
sbb
notb
and
daa
push
xchg
addr16
nop
mov
mov
push
shlb
xor
xor
mov
inc
in
xor
aam
and
leave
jo
insl
rorl
ret
push
fs
lret
pop
cmp
int
movsl
jns
jle
cmp
ficompl
sub
cmp
cmp
dec
push
inc
dec
inc
and
pusha
push
dec
das
xchg
xchg
push
fisttps
pop
inc
mov
push
fsubrs
jo
dec
and
cld
fildl
cli
push
cmc
sub
cmpsb
xlat
fisttpl
fisubrs
mov
mov
lcall
pop
jo
add
jmp
jns
js
ljmp
js
mov
dec
aas
sbb
repnz
sub
test
mov
in
lcall
adc
jp
inc
sub
int
push
shlb
mov
and
or
xor
fcomps
cmp
and
sub
dec
mov
out
mov
sub
push
cmp
into
lods
in
ret
and
push
inc
mov
iret
sarl
fsubp
cmpsl
addr16
or
fistl
lahf
gs
adc
sar
mov
or
add
cld
jp
mov
fcoml
push
push
or
jecxz
mov
pop
inc
mov
insb
cmp
push
pop
xchg
xchg
pop
xor
sti
jecxz
mov
lret
inc
and
fwait
sub
repnz
gs
leave
mov
dec
push
sub
mov
xchg
mov
push
mov
mov
mov
jno
mov
pop
out
xor
inc
aam
cwtl
xchg
decl
mov
add
das
das
scas
leave
pushf
sub
xchg
sbb
lods
lahf
push
stc
sub
push
pop
or
pusha
push
lods
push
out
sub
push
adc
rcll
insl
aaa
data16
int3
loopne
cmp
jae
inc
fiaddl
pop
add
mov
xor
sti
mov
test
cltd
or
je
xor
mov
adc
dec
and
cmpsb
stc
rolb
inc
cmpsl
sbb
addr16
mov
mov
stc
xchg
mov
nop
jns
cwtl
adc
das
ss
inc
sub
inc
and
dec
lock
in
sbb
out
bound
movsb
insl
jns
xor
sar
pop
in
ds
call
cmpb
add
mov
mov
test
mov
xor
sbb
gs
in
cwtl
fcomps
gs
lahf
pop
mov
mov
pop
adc
push
sbb
lcall
push
test
jnp
pop
movsb
or
add
xchg
sub
test
fidivs
add
cwtl
mov
daa
jmp
shlb
test
pop
cmp
gs
lock
mov
sub
fisubrs
xchg
inc
xor
inc
dec
xor
scas
das
adc
xor
cmp
and
repnz
test
int
addr16
inc
sti
lock
cmc
decl
sahf
jns
cmpsb
sub
loop
fiaddl
adc
push
out
mov
lea
lcall
das
push
xor
idivb
pop
fstps
out
lock
xchg
dec
popa
test
push
and
mov
jg
test
fidivrs
jo
or
rcrl
in
aaa
popa
cwtl
cltd
pop
loopne
negb
js
mov
lahf
fisubs
add
push
mov
nop
dec
fdivl
xchg
cmp
push
insl
fdivrl
and
fwait
jne
mov
test
dec
ljmp
or
add
push
adcb
sub
dec
imul
inc
or
xchg
fistpl
shlb
pusha
stos
aad
add
divb
push
in
ret
ds
push
cli
cmp
movsl
dec
lcall
mov
mov
or
pop
test
jo
sbbl
and
popa
out
fcmovu
xor
lods
gs
repz
or
fists
mov
add
mov
and
push
xchg
popa
jne
outsl
cmp
movsb
dec
lahf
div
stos
mov
ret
repz
jp
test
dec
repz
pop
sub
lods
stos
xor
and
or
mov
fcomps
push
push
ss
sbb
addb
pop
fbld
out
pop
adc
sahf
xor
push
pop
jne
pop
sbbl
dec
int
movsl
mov
out
xlat
jb
xor
push
aam
out
cli
jecxz
dec
jnp
movb
in
call
xor
sti
dec
sahf
jne
cld
mov
mov
xor
clc
imul
ds
repz
sbb
pop
push
fnstsw
movsl
xchg
sbb
lods
and
inc
enter
fs
sbb
add
push
loopne
dec
sbb
leave
or
bound
pop
and
push
jns
test
lods
push
xor
and
jnp
loop
mov
out
pop
push
sbb
bound
xchg
cwtl
add
outsl
imul
gs
insb
mov
push
lret
fisttpl
lea
ret
mov
gs
jge
dec
push
cmp
jl
shll
pop
rcrl
cmp
iret
pop
data16
add
es
inc
add
mov
ljmp
dec
xchg
adc
xchg
mov
mov
leave
fcos
dec
or
add
enter
inc
std
sub
repnz
mov
stos
les
or
clc
out
mov
rcl
dec
sbb
pop
pusha
mov
out
in
mov
xchg
inc
dec
add
sub
sub
lods
or
jmp
mov
cltd
mov
push
xor
xchg
rorb
sbb
sub
mov
sub
aas
fwait
pop
popf
icebp
pop
cmp
and
inc
sbb
pop
pop
fistpl
xchg
push
adc
scas
mov
mov
cmp
movsb
sub
mov
mov
cs
std
push
xor
call
jo
pop
inc
loope
mov
mov
fsubrl
jne
jl
fmuls
test
xchg
jmp
gs
push
inc
xchg
add
lahf
jecxz
mov
pusha
dec
mov
mov
pop
outsl
ja
addr16
jns
outsl
enter
aad
enter
inc
imul
lcall
ret
xchg
sbb
aas
addr16
aam
mov
ret
and
push
sbb
popw
cltd
dec
sahf
and
insl
pop
fdivrs
divl
call
lea
pop
cltd
dec
icebp
jp
ljmp
xor
mov
sbb
fbld
shl
fcoms
loope
mov
loop
lea
dec
add
pop
fcomip
sbb
xchg
jnp
pop
inc
popa
loopne
xchg
xchg
pop
add
add
mov
cmp
dec
pushf
sarb
xchg
lock
xchg
jge
lcall
std
dec
cwtl
insl
dec
pop
inc
pop
hlt
mov
mov
sub
mov
adc
push
inc
js
mov
repz
shrb
es
jle
sar
test
movsl
mov
dec
sahf
shlb
or
loopne
inc
test
aam
lods
jb
dec
pop
push
push
xor
push
push
cmpsb
add
int
shll
movsl
sub
dec
sbb
add
xorb
mov
ffree
into
jno
cwtl
xchg
mov
or
add
and
and
jecxz
mov
and
movsl
ret
cmp
dec
test
fldenv
xchg
inc
xor
inc
and
ljmp
lea
pop
loope
gs
and
dec
and
pop
lock
and
mov
pusha
inc
fildll
add
cmp
xor
or
mov
xlat
adc
daa
rcll
dec
aas
adc
imul
and
sti
sti
mov
cltd
add
add
push
out
cld
in
pop
daa
cltd
xchg
jo
mov
gs
es
test
xchg
jmp
inc
cmpsb
jp
fbstp
push
sbb
or
adc
jge
mov
jo
add
jo
ljmp
lods
mov
mov
sub
sbb
js
jecxz
je
aas
lcall
std
jge
push
adc
push
icebp
pop
pop
fistpll
movsb
xor
idivl
sbb
sbb
push
rclb
mov
fwait
hlt
adc
and
adc
add
movsl
mov
call
pop
mov
mov
pop
ja
addl
jge
addr16
or
pop
sub
mov
cwtl
pushl
aas
pop
ret
stos
and
scas
fcmovnbe
or
adc
popf
pop
and
add
add
mov
push
cmp
dec
std
sub
dec
and
pop
arpl
sbb
enter
cs
adc
mov
loopne
sub
sub
cmp
scas
and
addr16
addr16
lcall
cmp
xor
push
and
ret
adc
mov
fimull
rolb
orb
add
orl
or
aaa
xor
imul
push
clc
repnz
fidivrl
into
insb
mov
xchg
jno
cmp
jecxz
push
lods
lea
adc
icebp
inc
cmp
add
push
lods
decl
or
push
add
xor
pop
fsubrl
pop
fmuls
adc
test
xchg
xchg
iret
jne
inc
cmpsb
fdiv
out
ret
jg
xlat
in
clc
xchg
cli
and
adc
or
mov
cmp
inc
cs
mov
xchg
pusha
loopne
ljmp
lcall
das
out
sub
aam
nopl
mov
xlat
cmp
sub
adc
mov
cmc
out
jbe
adc
addl
pushf
pop
shll
push
in
leave
daa
adc
lds
adc
cmp
mov
push
shll
ljmp
rorb
adc
sub
bts
and
cmp
out
out
xchg
jb
adc
test
iret
jns
pop
subb
adc
imul
xchg
jge
jb
shrb
sbb
push
std
jp
or
stc
icebp
cmp
mov
inc
stos
sbb
mov
sbb
push
lods
pop
out
push
xchg
jl
out
insl
xchg
mov
subl
dec
adc
pusha
movntq
shll
lds
or
xchg
shr
xchg
inc
or
in
sbb
adc
aam
or
mov
inc
repz
inc
xchg
lock
dec
pop
fdivrl
pop
and
popa
mov
test
add
icebp
push
push
sbb
mov
inc
ret
adc
cmpsl
mov
mov
fdivrs
add
xchg
inc
repz
xchg
and
xchg
nop
sub
jg
outsb
pop
sbb
popa
xchg
push
jmp
adc
and
in
rol
push
or
lock
sbb
loope
or
dec
mov
sub
mov
push
sahf
jo
add
or
test
rcll
cmpsl
fisttpl
xor
push
pop
mov
out
pop
mov
call
pop
mov
cmpsb
pop
icebp
stc
jp
mov
push
sub
cmc
lcall
mov
push
sub
insb
aaa
sbb
movsl
mov
inc
adc
in
lahf
orb
xchg
loope
and
pop
insl
mov
cmp
xlat
adc
dec
push
dec
cmp
push
repnz
mov
mov
push
int
inc
pop
mov
or
cmp
push
xchg
sbb
test
out
xchg
enter
loopne
fiadds
or
xor
fwait
push
test
mov
popf
xchg
shl
add
lds
les
mov
adc
lods
cs
mov
xchg
add
jne
mov
xchg
mov
ret
hlt
lret
push
or
out
push
and
call
mov
add
pop
add
rol
xor
inc
push
mov
cli
test
pop
lds
add
pop
mov
pushf
cli
aam
inc
shlb
dec
lods
mov
jg
sub
xchg
jp
in
adc
cmp
int
js
mov
sub
loope
xor
hlt
jo
int
xchg
adc
dec
inc
jnp
xor
mov
mov
cmp
pushf
dec
mov
mov
xor
imul
test
ret
sub
in
adc
xor
mov
aaa
in
fmul
sbb
jne
cmp
mov
or
repnz
inc
inc
inc
fcomp
push
and
out
pop
in
lods
insl
cltd
addr16
pop
hlt
out
mov
inc
clc
imul
adc
aad
push
push
or
ret
scas
xchg
hlt
in
ficompl
fists
dec
adc
in
adc
inc
xchg
mov
popf
or
pop
clc
je
fldt
cmpsl
dec
xchg
adc
dec
and
or
sub
test
hlt
loop
pop
mov
fstl
scas
scas
dec
adc
and
jnp
add
push
jecxz
std
scas
add
int3
mov
cmp
mov
mov
xchg
sub
xor
loopne
loopne
aam
push
pushf
ds
mov
sbb
popa
dec
in
inc
xchg
out
iret
fcmovne
mov
pop
inc
std
loope,pn
cmp
clc
fbstp
iret
shrl
aas
bound
sub
mov
jle
sub
push
testb
xchg
jl
mov
xchg
shrl
sbb
lret
push
call
leave
mov
inc
jae
out
or
fcomip
enter
cmp
add
fnsave
icebp
fs
test
pop
or
mov
jbe
fidivl
stc
shll
ret
xlat
subb
cmp
lret
dec
stos
dec
mov
out
imul
xchg
adc
lods
addb
outsb
cs
push
mov
xchg
shll
fstps
jbe
cwtl
ret
movsl
mov
int
loop
or
test
int
data16
fdivs
mov
mov
cmp
daa
je
std
es
scas
cmp
sbb
call
adc
rorb
mov
popf
mov
or
pop
mov
xchg
xor
and
mov
pop
jecxz
mov
xlat
mov
sahf
jb
mov
in
jno
xchg
adc
mulb
jno
push
xor
sahf
add
jo
cli
push
je
jae
dec
cld
inc
mov
pop
iret
dec
xlat
cmp
jbe
lret
pop
mov
jp
fcmove
mov
sar
mov
pop
in
sub
xor
fsubrs
mov
adc
sub
and
and
ljmp
jecxz
fwait
mov
pushf
mov
add
outsb
test
fwait
lcall
push
sub
out
test
mov
push
pop
inc
jg
dec
dec
imul
jae
aaa
movsl
sub
frstor
iret
fldl
sbb
mov
push
into
lods
leave
or
adc
xor
mov
mov
js
sub
pop
and
push
add
sbb
out
leave
add
pop
test
js
xor
test
test
jge
mov
cmpsb
jo
popa
pop
mov
adc
mov
fmuls
popf
sbb
pop
icebp
stos
xchg
lds
jae
cmp
inc
jp
outsl
inc
out
cmp
outsl
mov
mov
stos
pop
int
dec
rorl
aas
call
outsl
jg
lea
xchg
mov
out
add
notl
loope
call
lret
sbb
popf
pop
ss
std
pop
test
dec
jbe
xchg
js
cmpb
popf
push
mov
mov
adc
es
in
in
mov
xchg
vpminsw
jnp
cmpsb
push
sub
jb
jle
or
ret
jo
fdivl
mov
and
pusha
sbb
jle
jge
or
std
push
cltd
or
pop
popa
sbb
pop
mov
lods
xchg
aad
sbb
sub
imul
or
pop
mov
out
push
jmp
xchg
cmpsb
lds
inc
or
fucomip
in
popf
or
clc
stos
aam
std
jmp
movsb
dec
cli
ja
shrl
in
fbstp
hlt
mov
js
call
push
mov
loope
mov
fs
xorb
arpl
stos
add
pop
sub
dec
in
ds
xchg
call
into
jmp
xchg
pop
clc
insb
jnp
xchg
cli
xchg
jo
add
pop
int3
ja
jae
aas
addr16
cmp
loop
and
call
mov
mov
subl
adc
xchg
fistpll
jg
mov
fxtract
inc
xor
mov
pushf
nop
iret
dec
push
fisubs
scas
or
mov
and
std
or
iret
push
add
push
cmp
sub
imul
cmpsb
cmp
jmp
push
adc
outsl
mov
xlat
xchg
jmp
daa
iret
sub
xchg
imul
data16
in
addr16
or
rcll
loope
xor
dec
hlt
in
push
lret
into
push
shr
mov
loopne
fnstsw
pop
mov
aad
dec
sahf
rep
arpl
cmp
popf
mov
and
dec
cmpsb
dec
cmp
sbb
daa
mov
xchg
jne
lret
bound
lock
adc
mov
sbb
cmp
and
inc
mov
outsl
daa
loopne
cmp
bound
sbbl
call
xlat
jmp
sub
xchg
jo
insl
cmp
pop
icebp
fcom
mov
jo
insb
push
repz
addr16
cld
push
addb
icebp
push
ss
outsl
pop
xor
add
cmp
jecxz
mov
ftst
std
imull
or
cmp
aam
cmp
adc
mov
inc
repnz
dec
and
fwait
aaa
pop
xchg
cwtl
repz
stc
pop
push
or
xlat
mov
fcmovne
std
adc
lahf
add
cmp
outsl
jnp
clc
push
fnstcw
dec
dec
push
cmpsb
orl
test
test
imul
cmp
pop
mov
mov
sub
stos
push
inc
arpl
mov
jge
ret
lock
pop
loop
insl
out
xchg
mov
popf
mov
gs
fiaddl
mov
ss
ja
jmp
stos
inc
cld
mov
lods
and
fimull
push
push
mov
sbb
sub
push
mov
push
pop
adc
inc
out
jb
pop
jl
ret
or
scas
data16
mov
xchg
mov
push
xchg
ss
cwtl
or
mov
ret
pop
pop
and
push
sti
mov
pop
jp
shr
pop
pop
ficoms
pop
mov
cld
mov
imul
pop
fs
sub
push
jmp
cmp
cmpb
mov
cwtl
fistpll
jno
xchg
xlat
inc
lds
mov
out
push
add
or
jecxz
pushl
outsb
sub
mov
xor
stos
cli
clc
sub
enter
ret
je
jge
jbe
icebp
dec
das
pop
inc
scas
iret
push
push
lods
cltd
or
mov
loop
test
pusha
jp
nop
lea
mov
subl
mov
std
pop
mov
sub
inc
and
mov
fsubs
cli
mov
xchg
push
insb
xchg
les
jl
add
xchg
out
rol
and
push
and
pop
fs
jle
clc
subb
mov
push
ss
xor
stc
hlt
dec
mov
sbb
loope
mulb
add
pop
stos
mov
push
jbe
mov
out
push
insb
aas
es
and
push
rorl
test
push
mov
ljmp
div
cmc
scas
push
cmp
aad
or
daa
cmpsb
jl
aas
addr16
and
ljmp
daa
and
xchg
nop
jns
jo
push
fldlg2
popf
out
jbe
repz
lods
loopne
and
mov
jns
arpl
int3
das
aaa
inc
test
add
in
stos
and
dec
xor
hlt
push
daa
push
mov
sub
leave
pop
stc
xor
adc
dec
inc
fwait
clc
push
xor
loope
outsb
push
xor
or
dec
lahf
loope
jno
nop
mov
pop
mov
mov
nop
gs
stc
imulb
adc
sub
pop
dec
jmp
loope
stos
push
fmull
xor
xor
jbe
mov
push
push
adc
leave
xchg
or
enter
push
enter
dec
mov
sti
std
or
xor
scas
outsl
mov
jecxz
mov
imull
inc
out
pop
push
cmpsl
push
notl
cmc
nop
xchg
jno
test
xorb
sbb
xchg
ret
pop
fadds
scas
scas
jae
mov
fldcw
pop
aaa
jge
les
outsl
mov
pop
fldcw
pop
outsl
daa
inc
repnz
dec
push
jl
add
add
faddl
mov
movsl
sub
mov
sub
jnp
pop
decb
pop
sub
pop
cmpsl
jg
jmp
psubd
mov
adc
in
push
scas
lcall
mov
inc
mov
cmp
pop
mov
ret
sbb
sub
fisttpl
mov
mov
jmp
adc
nop
add
cld
fistpl
sahf
cltd
addr16
test
out
inc
pushf
lods
out
jb
cld
push
ret
and
call
cltd
xlat
hlt
shrb
and
iret
repz
inc
adc
mov
cmp
lods
jne
test
inc
dec
int3
jo
push
imul
push
iret
das
push
mov
pop
dec
mov
sub
push
enter
xchg
test
int
shlb
das
repnz
xchg
jle
pop
movsb
add
add
mov
push
mov
and
lret
mov
aas
dec
add
mov
mov
dec
push
push
mov
push
xor
add
pop
orl
je
arpl
jb
pusha
sbb
movl
jae
jne
loop
xor
adc
xor
aad
clc
add
and
or
cli
sub
jmp
lea
mov
and
in
push
cwtl
cmp
dec
pop
lea
xchg
pop
inc
mov
mov
cmpsl
cmp
je
add
xchg
mov
mov
mov
leave
dec
das
or
nop
mov
cmp
add
jmp
lret
loopne
ror
push
daa
dec
pop
push
fiaddl
pop
and
inc
arpl
mov
out
sbbb
or
mov
cs
daa
icebp
aam
test
cmpsl
pop
test
mov
cmpsb
pop
gs
cld
sbb
xlat
addr16
out
sbb
xor
pushf
jo
jp
and
repz
or
push
cmp
cld
jmp
idiv
filds
loop
addr16
xor
cld
imul
fbstp
sbbb
jbe
insl
mov
notb
or
lods
and
pop
test
inc
mov
outsb
xor
hlt
imul
fcompl
int3
pop
les
leave
imul
into
lods
mov
adc
cs
repz
outsb
aam
movsb
sub
addl
push
cld
push
out
mov
sbb
outsl
ds
sbb
into
sub
cmp
mov
push
out
insb
xchg
in
push
xchg
inc
mov
ss
repz
addl
inc
add
std
or
mov
dec
out
cmpsl
popf
and
cmpsb
push
adc
ljmp
lods
cwtl
jp
push
inc
jbe
cltd
jl
test
xor
adc
movsl
popf
outsl
ljmp
cmp
sbb
lret
xchg
ja
dec
cmp
push
dec
cmp
ficoms
and
or
cltd
push
inc
lret
inc
xchg
inc
std
repnz
sbb
out
sub
adc
inc
sbb
dec
inc
pop
xchg
shrb
sub
mov
fiaddl
mov
add
adc
mov
xchg
in
jge
mov
add
jne
ds
dec
das
mov
jge
out
aaa
push
lahf
repz
mov
or
mov
ltr
lret
cwtl
repz
iret
xor
jb
push
ja
add
push
add
jle
push
dec
inc
pop
fs
divb
add
push
fdivs
sbb
inc
and
pop
or
pop
jae
jae
jo
test
inc
fsubl
in
mov
insl
jmp
adc
js
add
adc
xchg
dec
mov
mov
pop
cmp
mov
mov
pop
adc
sub
out
popf
pop
or
repnz
bound
lea
push
rcrl
into
mov
lahf
sarb
jge
inc
xchg
in
jecxz
mov
cld
stos
fldcw
sub
shlb
into
ret
popa
mov
pop
ds
push
fldcw
sub
jl
push
xchg
jl
lock
stc
sub
and
in
sti
sub
xlat
ja
pusha
lea
mov
mov
pop
fwait
inc
test
stc
mov
shlb
mov
jns
sarl
mov
cmpsb
icebp
sub
xor
fs
jg
jecxz
sub
imul
mov
push
leave
jns
xchg
or
out
adc
loope
inc
std
xlat
fimuls
push
or
data16
jmp
cmpsb
repnz
sbb
ficomps
cld
cmc
or
das
xor
inc
test
fstpt
or
push
add
lcall
sub
cmp
pushf
push
subb
mov
mov
jae
inc
jns
sbb
dec
add
cltd
mov
mov
js
mov
out
pop
clc
push
adc
in
ds
xor
cmp
mov
dec
lock
xchg
dec
xchg
push
sbb
or
inc
dec
iret
clc
pop
pop
jl
rolb
xor
dec
adc
push
sbb
or
cmp
jae
cs
and
or
and
adc
and
test
sahf
fsubl
aas
cmpsb
bound
pop
icebp
lods
push
xor
movsb
cmp
inc
push
dec
out
mov
mov
cmpsl
enter
cmpsb
pop
jo
xchg
pop
lods
mov
mov
or
loope
mov
aas
lea
popa
jb
les
sbbb
jl
int3
jle
cltd
sub
sbb
xchg
rol
cld
adc
ret
pop
cld
imul
pop
mov
mov
aas
cmpsb
adc
xchg
test
scas
dec
pop
repz
rolb
hlt
dec
out
sarl
andb
mov
mov
mov
into
aad
dec
ljmp
adc
xchg
movsb
xor
inc
mov
mov
orb
arpl
push
leave
inc
popf
test
xchg
sub
ret
fcmovnu
jl
push
xlat
pop
mov
mov
mov
push
cwtl
xchg
xchg
mov
cli
cmpsl
shl
inc
aam
call
jno
jnp
xor
mov
pop
insb
xchg
adc
pop
in
push
sbb
jae
mov
or
shll
mov
lods
pop
push
int3
lret
fstpl
jp
dec
dec
fiadds
int
push
cwtl
insl
jg
inc
dec
int3
jnp
fs
popa
mov
pop
sbb
test
mov
rcrl
cmc
mov
stos
jg
cmp
jmp
lret
lahf
xchg
ret
sub
add
jp
xor
mov
nop
shrl
jmp
cmp
xor
inc
jecxz
jnp
test
jge
jae
loopne
inc
or
and
icebp
divl
cmpsb
sub
in
lods
dec
test
mov
stos
scas
cmp
pop
inc
cmpsb
repz
loopne
loope
jecxz
mov
test
daa
and
ja
add
add
repz
pop
dec
repnz
packuswb
in
mov
sub
add
enter
mov
rclb
xor
mov
push
mov
pop
adc
adc
xor
adcb
fildll
adc
lret
imull
lods
insl
cmpsb
and
add
mov
xchg
out
mov
lock
leave
xchg
pop
mov
mov
mov
cli
pushf
cli
mov
test
aam
nop
lss
lret
outsl
xchg
loop
pusha
mov
mov
les
add
subl
movsb
dec
fs
inc
loope
test
jo
outsl
or
sbb
cmp
pushf
inc
dec
sub
pushf
fsubs
cmpsl
cwtl
adc
out
out
push
xor
or
imul
lea
hlt
inc
lret
shlb
dec
pop
mov
imul
pop
dec
cmp
sub
xor
add
pushf
pushf
dec
mov
cwtl
pushf
and
lock
mov
sub
dec
pop
popf
push
sbb
imul
push
pusha
pop
inc
js
pop
negl
and
lea
mov
cmp
sub
bound
hlt
inc
in
push
pusha
adc
pop
shll
jecxz
addl
adc
push
inc
popf
notb
xchg
test
insl
mov
jne
push
pusha
add
lea
mov
pop
clc
cltd
xchg
jb
outsb
pusha
mov
loop
and
iret
in
bound
jle
xchg
loop
rorb
repz
fs
mov
jno
mov
pop
cmpsl
sahf
fistl
xor
daa
mov
jmp
xor
popf
jnp
shlb
and
bound
mov
cmp
and
push
movsb
addr16
push
jl
outsb
popa
js
push
mov
sti
pop
int
jecxz
push
cwtl
mov
or
cmpsl
dec
sbbl
push
lret
add
scas
int3
inc
in
and
call
rclb
fs
push
fimull
mov
repnz
lcall
es
mov
sbb
insl
dec
add
jae
pop
pop
es
cmp
ljmp
push
adc
adc
push
xchg
lods
cwtl
cmpsb
add
sub
icebp
push
insl
scas
pop
jl
pusha
fidivs
aad
push
scas
ficomps
sub
daa
sysexit
pop
or
jg
sub
repnz
iret
movsl
loope
dec
mov
call
and
inc
mov
pop
inc
inc
sahf
mov
orl
fists
mov
and
loop
arpl
mov
shlb
scas
out
pop
pop
call
and
dec
push
pop
sub
xor
dec
pop
std
movsb
dec
in
iret
test
jo
sarb
xor
call
cld
push
insl
push
loopne
into
lahf
add
jle
pop
xchg
push
xor
mov
repz
shl
movsl
push
loop
loope
ss
and
sbb
xchg
addr16
js
ja
fistpl
cmp
inc
and
mov
mov
iret
outsb
out
aaa
mov
or
loopne
inc
sahf
sbb
les
push
cmpsb
lock
stos
xor
jae
es
lahf
je
jecxz
loop
bound
andb
inc
test
adc
out
pop
cmp
mov
inc
inc
lret
jmp
or
loope
test
mov
ret
out
adc
pop
int
xor
test
imul
adc
sub
ja
out
test
jb
imul
imul
jp
xchg
shlb
and
fsts
cmc
add
cmp
scas
dec
sub
lea
ljmp
fdivl
cmc
sub
hlt
daa
pushf
and
push
or
or
xchg
push
arpl
sbb
repnz
dec
fs
sahf
dec
sahf
out
dec
cmp
imul
cmp
push
add
ret
adcl
jmp
fmulp
fxch
inc
cwtl
sub
sahf
xor
pop
sbb
out
pop
sub
adc
jns
popl
pop
movsl
sub
mov
movsb
inc
scas
out
jecxz
mov
das
push
fsubl
stos
cli
test
in
insb
and
mov
hlt
and
lret
cli
inc
xorl
popf
insb
arpl
sub
out
inc
or
jmp
arpl
dec
xchg
pushf
pop
popl
push
enter
imul
cmpsb
xor
jl
pop
jmp
mov
adc
ffree
ss
push
daa
popf
or
test
fisttpl
jns
adc
cmp
dec
adc
rol
xchg
ret
das
subl
pop
adc
scas
xchg
movsl
add
or
cmpsb
cwtl
add
mov
inc
loopne
sub
jbe
jg
repz
ds
add
dec
push
inc
mov
sub
insb
push
pop
test
sub
ret
mov
pushf
scas
outsl
xchg
mov
cmp
mov
popa
or
push
sahf
mov
xchg
xchg
icebp
dec
push
and
in
js
jno
scas
jne
inc
xor
ret
fsubs
cmp
ret
cld
scas
push
je
loop
xchg
pop
aad
sub
and
lcall
xlat
mov
int3
pop
loope
imul
dec
lods
popf
inc
mov
xchg
dec
mov
pop
call
or
push
jmp
lea
cmpsl
jo
push
es
mov
mov
lds
inc
add
add
mov
mov
mov
out
add
fdivrl
dec
icebp
sbb
iret
test
ds
push
push
xlat
je
mov
or
xchg
cmc
dec
xor
jle
push
dec
jp
jnp
mov
sbb
adc
jg
dec
gs
mov
enter
lahf
push
xchg
xor
test
mov
pop
inc
scas
mov
das
mov
mov
es
cmp
and
idivl
cs
scas
iret
imul
rcrb
jmp
jge
sub
push
out
xor
lock
scas
scas
cmpsl
mov
es
loop
cwtl
sahf
jne
xlat
je
call
mov
sub
pop
in
cmp
fildll
imul
jno
mov
lods
jmp
adcb
imul
repz
popf
or
out
or
enter
imul
lock
fs
xor
pop
dec
sub
pop
into
loopne
sub
adc
mul
push
inc
es
ret
inc
inc
outsl
sbb
mov
dec
cli
inc
cmpsl
pushf
mov
pop
aam
dec
mov
into
dec
idiv
mov
movsb
ja,pn
test
fwait
rclb
mov
mov
add
mov
fs
pop
iret
sub
xor
popa
ret
mov
addr16
hlt
xchg
dec
imul
int3
or
shrb
jne
pop
das
sbb
fucomp
push
cmc
mov
aad
dec
mov
lcall
jp
sar
aam
xor
inc
sub
add
mov
in
pop
pop
sub
jle
sub
cmp
shll
popa
mov
fdivrl
mov
out
and
cmp
mov
sub
adc
sub
dec
push
enter
sti
mov
das
in
test
xor
sub
hlt
inc
sbb
fwait
mov
push
sbb
loope
add
stos
jmp
push
sbb
packuswb
divb
xchg
fildl
arpl
daa
adc
call
or
notb
les
mov
loop
imul
add
pop
dec
jle
or
in
rcl
dec
mov
enter
inc
or
lds
fildll
add
sub
mov
aam
cmpsb
or
add
scas
loopne
pop
lock
movsb
lea
xchg
imul
adc
pop
mov
fiadds
cmpsl
pusha
les
sub
icebp
inc
jecxz
adc
in
rcll
push
in
stc
addr16
popa
movsl
out
jae
add
xor
ss
or
enter
pop
lods
int
and
ror
inc
ja
inc
push
lahf
frstor
in
pop
int
dec
jle
cmp
ret
repz
dec
mov
xchg
jnp
and
stos
dec
std
imul
addr16
ret
das
sbb
jbe
cmp
cmc
pop
pop
inc
js
jno
xor
jle
jl
fmuls
repz
fld
pop
nop
xor
int3
push
sub
and
call
orb
and
cmpsb
jns
cld
loope
push
inc
loopne
shrl
or
insb
mov
fcmovb
cld
into
aad
jge
ljmp
movsl
pop
imul
je
mov
add
or
das
sub
adc
into
lods
cmp
adc
mov
cld
sahf
int
sub
addr16
jg
xchg
and
inc
xchg
adc
mov
push
jge
icebp
repnz
iret
stos
in
or
inc
push
into
push
mov
sub
leave
mov
cs
add
in
lods
inc
mov
pop
cmc
js
insb
sub
mov
jne
rorb
push
mov
jecxz
cmpsl
pop
inc
mov
push
xor
mov
out
inc
push
testb
xchg
out
and
dec
cmp
mov
pusha
cmpb
aas
sub
dec
cltd
addr16
jae
fisubl
insb
mov
cmp
xchg
mov
adc
ljmp
push
xchg
push
int3
jmp
aad
in
clc
jnp
in
xor
jecxz,pt
mov
cmpb
cmp
repnz
dec
cwtl
push
mov
aaa
push
fcompl
repnz
js
sti
stos
mov
and
js
push
adc
jg
ljmp
sub
and
xor
adc
push
sbb
scas
dec
xor
lea
aad
shlb
xor
push
fisttpl
cmp
andb
adc
fisttpl
sahf
clc
loope
jns
movsb
push
movsl
dec
push
orb
stc
pop
and
fstps
lret
cli
xor
addl
jno
push
fiaddl
popa
jmp
mov
js
sbb
out
lea
iret
mov
jns
mul
icebp
cltd
inc
push
mov
dec
jns
add
ja
lahf
jb
xchg
ss
orl
inc
dec
cwtl
fs
test
push
das
popf
movsl
xor
iret
mov
add
in
ja
pop
cld
push
jo
sti
xor
fldcw
testl
fdivl
loop
into
lret
fcomps
or
daa
adc
xor
jbe
inc
xor
sbb
repz
xchg
sahf
fidivrl
mov
push
loope
xchg
sbb
or
mov
push
pop
fnstcw
aad
imulb
int3
stc
call
repnz
popf
andb
sti
mov
jl
add
scas
arpl
fs
ret
pop
inc
and
push
sbb
mov
out
jp
cmpsl
fstps
inc
cmp
pop
or
pop
enter
std
xchg
xorb
data16
loop
mov
sbb
or
mov
dec
sbb
mov
jge
jo
test
sar
stos
inc
jg
les
cwtl
int
scas
mov
movsb
rolb
into
mov
adc
scas
rclb
push
das
jecxz
orl
sub
xchg
and
mov
pop
test
dec
sbb
inc
push
push
sbb
push
cltd
inc
imull
mov
push
inc
inc
addl
xor
pusha
nop
add
xchg
ror
dec
stc
shlb
cmp
inc
pop
adc
adcb
sti
lock
pop
jo
out
fadd
add
dec
in
call
rcrl
rorl
push
ljmp
push
sub
xchg
dec
lret
xchg
pop
sar
loop
jmp
sub
cmp
xchg
lcall
cmpl
push
repnz
xor
xor
cmp
cmpsb
popa
rorl
mov
std
jne
int3
add
mov
or
jp
xchg
push
pop
dec
push
or
das
mov
ja
lret
cmp
lcall
xchg
mov
push
mov
xchg
pop
daa
jns
mov
fsubs
out
or
jle
jge
xchg
test
int3
pusha
dec
sub
push
fstl
je
icebp
push
out
scas
cmc
mov
mov
mov
notl
in
inc
jle
xor
adc
push
in
sbb
sbb
jg
pop
add
and
test
rcll
dec
jbe
lods
dec
dec
sub
fcmovu
cli
push
sbb
jb
bound
sbb
fsubl
push
inc
dec
mov
xchg
fcom
sti
add
dec
mov
inc
test
adc
push
and
mov
push
js
adc
or
jle
int
stos
cmp
in
out
faddp
cmp
inc
shll
stos
mov
fisubrl
addr16
dec
xchg
std
fcoms
fs
and
enter
in
rsm
pusha
xor
jl
mov
int
jne
xchg
lock
push
flds
push
popf
shll
jge
mov
shrl
aam
xlat
outsb
loop
lahf
add
aaa
xchg
fsubl
outsl
and
clc
cmpl
push
inc
pop
pushf
fnsave
aaa
les
pop
xchg
outsb
inc
out
mov
cmpsl
or
xchg
push
test
inc
xchg
inc
push
and
hlt
ja
cmp
jmp
scas
aas
mov
ficoms
fsubrs
mov
loope
add
sub
notb
sbb
ret
dec
jb
ret
test
add
cwtd
xchg
or
movsl
mov
or
fcmovne
andl
ficoms
mov
dec
xchg
rcr
ja
iret
jle
cmp
sbb
add
sbb
fidivrl
jb
fs
dec
popf
push
insb
leave
ljmp
sub
mov
sub
fmulp
fwait
mov
out
and
mov
in
and
pop
stos
nop
xchg
addr16
ret
sub
mov
outsb
les
pop
cmp
in
mov
pop
outsb
inc
in
xlat
adc
addl
aas
lcall
adc
repz
mov
mov
jg
cmp
push
jne
sti
xor
movhps
cmc
push
mov
stos
fsubrl
mov
jecxz
xchg
xchg
cmp
mov
lahf
clc
inc
jae
mov
rolb
jmp
or
les
imul
cwtl
sbb
ljmp
test
aaa
sbb
popf
jno
xor
leave
push
fxch
jns
add
sub
xchg
cmp
ja
jp
xchg
mov
bound
jns
inc
rcrb
sbb
and
pop
das
push
push
repz
arpl
bswap
les
push
mov
in
movsl
nop
shll
mov
shlb
fucomi
iret
mov
xlat
je
clc
xchg
rorb
xchg
ret
pop
fnstsw
jbe
clc
lods
mov
pop
push
push
int3
add
mov
pop
or
dec
or
fnstsw
adc
lds
jne
shll
mov
rcrb
adc
loopne
jnp
jmp
and
mov
daa
test
mov
aas
sbb
mov
je
pop
adc
inc
idiv
add
cmpsl
inc
mov
clc
cmp
mov
pop
loope
orl
cs
add
aam
xor
in
cmp
aad
pushf
dec
mov
iret
fwait
or
jno
xchg
push
data16
mov
out
aaa
mov
push
test
push
mov
decb
jns
int
stos
xchg
mov
push
xchg
sbb
lods
pop
inc
cld
sarl
push
ljmp
xor
mov
sarl
or
out
pop
leave
xchg
popa
lcall
inc
xchg
cmpsb
xchg
push
test
std
dec
lods
js
jecxz
in
xchg
push
gs
sbb
push
mov
mov
push
int3
gs
xor
je
dec
and
sub
xor
mov
sub
clc
cmpsb
xor
aaa
add
mov
sahf
ret
repz
fstpl
mov
mov
aaa
imul
ja
add
sbb
mov
and
push
repnz
es
and
pop
mov
test
rcrl
sub
ficoml
mov
notl
mov
pop
xchg
pusha
and
cmp
inc
jno
cmp
cmc
xchg
rcrb
xchg
pop
fs
in
jp
test
test
adc
mov
cmp
ljmp
sbb
fildl
dec
lahf
xchg
mov
pop
jle
test
mov
push
iret
jge
mov
lods
fs
sti
pushf
inc
fadds
mov
cmp
sub
out
mov
sub
xor
mov
mov
aam
movsl
lods
mov
adc
sub
aaa
lods
test
insb
mov
inc
das
sti
shlb
mov
dec
pushf
movsb
adc
andb
inc
mov
inc
loopne
jne
xlat
ds
fwait
sub
inc
adc
stos
scas
clc
mov
mov
pop
cli
rcrb
cmp
jle
lret
inc
inc
sbb
ss
add
jbe
pusha
out
mov
repnz
sbb
xor
mov
fcomps
cs
inc
jo
jbe
into
push
sbb
adc
jmp
lods
mov
les
cmp
lods
aaa
fiaddl
rclb
mov
dec
cmp
lds
xor
sbb
sub
sub
xor
incl
int3
in
and
add
xor
fmull
stc
push
movsl
mov
lods
gs
pop
fwait
sub
add
jmp
cmpsl
inc
jbe
cld
scas
fimull
fisttps
or
dec
test
dec
les
in
push
xchg
js
cmp
xchg
mov
pop
sub
mov
dec
pop
cmp
inc
ss
jmp
push
ljmp
fsubrs
mov
sar
icebp
test
test
into
js
push
and
add
pop
mov
xorl
jbe
movsl
and
out
pop
repz
and
inc
dec
jge
stos
andb
add
mov
bound
mov
lods
cltd
mov
add
imul
movsb
xor
rcll
mov
dec
les
mov
or
enter
or
xchg
adc
negb
adc
pusha
sub
aad
int
add
add
insb
push
in
xchg
mov
and
push
dec
movl
mov
or
jl
das
cmp
jg
lea
inc
mov
repnz
xorb
jge
cmp
and
mull
loopne
mov
cmc
imul
xchg
imul
xchg
adc
jmp
pop
pop
movsb
subb
jb
roll
lock
js
repnz
mov
ja
jae
imul
leave
xor
decl
mov
insb
enter
in
add
movsb
pop
inc
sub
mov
xor
fisubs
sar
repnz
jle
jne
sub
lds
insb
jle
jne
lahf
xchg
ror
mov
sub
jl
dec
lahf
fidivrl
push
push
rorb
or
scas
xchg
nop
in
push
push
and
repz
dec
stos
xchg
shl
call
and
jo
je
in
jp
mov
xchg
push
jne
jl
mov
call
dec
movsb
pop
jle
push
push
shl
lods
jge
adc
mov
jne
sub
push
outsb
fimull
sub
inc
out
mov
inc
out
cmpsb
out
lods
inc
cmp
jmp
ljmp
js
mov
jg
xchg
leave
std
and
sub
sbb
ljmp
clc
push
jmp
sub
enter
cmpsb
rcr
and
cld
xchg
and
popf
jbe
adc
pop
imul
adc
mov
pushf
cltd
xchg
and
push
mov
dec
sub
loopne
repz
in
popa
jmp
or
xor
push
adc
pushl
inc
xchg
mov
out
mov
xor
js
or
arpl
lahf
mov
fiadds
dec
or
repnz
pop
ret
ja
push
xlat
add
cmp
stc
pop
pop
xor
fbld
repz
xor
fstps
in
pushf
ljmp
push
xor
shrb
cmp
xchg
loop
adc
rcll
andb
jmp
sbbb
push
lahf
xchg
ss
dec
lret
sub
mov
xor
sub
mov
xlat
cmpsb
jge
ficoml
mov
sub
mov
iret
fdivl
sarb
xor
jns
icebp
inc
pop
lahf
rclb
andb
jns
jno
mov
aaa
call
clc
pop
pop
lret
out
jb
ss
jl
lea
cmpsl
es
mov
sbb
mov
stos
pusha
ja
adc
sbb
xchg
fscale
cld
sbb
inc
pop
mov
push
jl
into
std
outsb
jae
clc
mov
std
insb
cmp
sub
test
ljmp
xchg
add
mov
imul
adc
insl
test
push
lahf
and
jmp
sti
in
ret
stc
push
mov
xor
cld
sbb
cmpsb
arpl
sub
popf
hlt
stc
leave
int
adc
pusha
repz
gs
xor
in
test
aam
mov
mov
sbb
jno
adc
leave
xchg
mov
adc
mov
xchg
mov
xor
and
mov
pop
xlat
add
add
jno
pushf
push
pop
hlt
xor
adc
rclb
in
push
js
or
mov
xchg
fnsave
adc
nop
push
lret
imul
ja
stc
dec
scas
fidivrs
mov
adc
adc
inc
lods
sbb
xlat
data16
gs
push
cmp
test
cmp
fsubr
lods
jb
movsb
fcmovnbe
sub
mov
lods
sub
mov
xchg
andb
cmp
js
ja
xchg
in
roll
xor
jge
ffree
sti
xchg
pop
pop
mov
mov
scas
outsl
into
push
pop
test
fxch
push
cltd
add
loope
dec
notrack
mov
add
pop
mov
jp
or
inc
mov
xchg
inc
test
fistps
or
insb
mov
cmp
dec
mov
jbe
inc
push
cmp
mov
aaa
popa
cld
and
hlt
xchg
vpsrld
mov
sbb
dec
mov
xchg
loop
in
adc
inc
cltd
cwtl
dec
jne
and
fstpl
dec
test
cli
sub
in
js
rcll
addl
scas
popa
cmpb
pop
lds
xchg
add
inc
add
stos
cltd
mov
dec
adc
gs
inc
push
cmc
fsts
inc
shlb
jbe
outsb
ffreep
shll
mov
add
xchg
jb
ret
mov
mov
push
flds
mov
adc
xor
dec
test
sub
push
sbb
movsb
cmp
jnp
jb
out
icebp
mov
insb
call
fdivrs
popl
ret
cmc
xchg
xchg
aaa
out
push
sarb
mov
mov
push
orl
mull
pop
aad
adc
mov
in
xchg
lea
jl
cwtl
lcall
movsl
adc
xchg
inc
enter
mov
pop
fdivrs
lods
pop
push
mov
dec
outsb
mov
hlt
jb
aaa
xlat
ficoms
sahf
in
xchg
mov
in
cmp
inc
shll
xchg
lods
fstpl
das
subl
pop
mov
enter
out
or
outsl
push
fdivs
or
or
dec
sbb
dec
pop
loop
mov
arpl
push
call
dec
pop
repz
lock
lcall
dec
xchg
mov
subb
cmp
arpl
adc
inc
pop
xchg
push
or
push
nop
enter
dec
jo
pusha
inc
addb
inc
addr16
xcrypt-ofb
cmpsl
lods
sbb
daa
mov
sbb
int3
fucom
mov
popf
xlat
push
ja
and
outsl
ds
out
jns
push
jp
cli
paddusw
mov
mov
or
inc
fs
adc
xlat
fcmovne
addl
pop
pop
test
adc
xchg
bswap
pop
mov
push
xchg
mov
adc
cwtl
add
pop
inc
pop
call
addb
movsb
lret
das
push
sub
test
pop
iret
xor
push
cmpsl
push
xor
dec
out
adc
popa
gs
clc
pushf
inc
leave
xchg
adc
fisttpl
stos
stc
sub
repnz
in
pop
ja
fs
pop
out
into
mov
xlat
push
push
ret
jle
inc
call
inc
out
subl
cmp
in
cmp
call
mov
in
jl
outsb
or
scas
mov
adc
push
cmp
fnstcw
je
out
test
scas
icebp
mov
ljmp
push
lret
inc
cmp
arpl
scas
inc
aas
mov
inc
outsb
out
xchg
pop
add
mov
jg
out
ljmp
pop
jne
pushf
dec
fwait
mov
fld
int3
popa
sahf
stos
pop
cmp
call
out
inc
mov
mov
mov
mov
cltd
cmp
mov
and
aad
mov
ds
loop
fdivs
mov
das
movsl
lods
pop
je
jnp
test
add
fdivrp
out
sbb
sub
mov
out
add
fistl
lcall
out
xchg
test
add
mov
inc
aaa
iret
mov
or
stos
xchg
in
cld
jo
dec
push
call
push
adc
cmp
sub
inc
and
ja
and
jno
pop
sbb
data16
jl
push
push
std
vmovsd
or
fisubs
xchg
je
and
movsb
cmp
or
pop
pop
mov
ss
inc
inc
mov
ja
or
jle
orl
push
pop
jle
or
shll
out
bound
sbb
adc
xor
neg
test
xchg
shll
cmp
fidivl
lret
outsl
lock
fsubrl
cld
out
inc
negb
leave
call
mov
inc
inc
icebp
insb
add
shl
nop
mov
aad
jo
cli
cmp
gs
sarb
adc
and
insb
lods
lods
rcll
push
lods
inc
jge
lret
jo
outsb
sbb
jle
movsl
test
cmpsb
fisttpl
jge
dec
repnz
sbb
in
jae
cmc
mov
cltd
or
aam
mov
push
clc
call
sbb
or
icebp
xchg
push
push
sbb
dec
mov
or
adc
cmp
gs
or
sti
repnz
inc
mov
mov
pop
xor
arpl
leave
movsb
or
cs
jo
pop
loope
push
and
mov
mov
mov
cltd
jnp
mov
aam
push
test
cmp
hlt
add
push
push
xchg
js
dec
jge
shll
daa
lock
jg
dec
xor
repz
add
cmpsb
rorl
mov
mov
jp
add
outsb
mov
cmc
dec
cmp
xchg
in
arpl
adc
ljmp
roll
popf
dec
cmp
clc
scas
fisttps
pop
mov
and
cmc
int3
test
fiaddl
mov
adc
insl
lock
ror
imul
daa
cmp
dec
xor
arpl
orb
aas
or
pop
mov
sarl
flds
aaa
cltd
and
push
int3
adc
jg
mov
cltd
pop
pop
hlt
dec
lret
jge
pop
repz
shr
jnp
xchg
push
scas
addr16
mov
and
or
ds
jge
xchg
dec
or
mov
adc
mov
scas
jae
push
jno
int
or
mov
pop
orps
mov
aad
stc
xor
dec
dec
lcall
lds
sub
test
jmp
ljmp
jecxz
scas
repz
jmp
ljmp
out
sub
jmp
mov
and
inc
mov
add
sbb
adc
cmp
push
push
push
jmp
jbe
inc
pop
mov
sub
sbb
push
aad
cmp
pop
cmp
pop
les
sbb
scas
fs
les
mov
mov
jge
filds
and
and
in
pop
jo
adc
jg
jae
adcb
int
add
jg
in
mulb
and
pop
dec
cltd
lret
jl
xchg
inc
push
or
daa
shlb
sahf
jb
outsl
int3
aas
dec
imul
cmpsl
jmp
testl
mov
cmp
data16
mov
jbe
push
loopne
jae
cld
stos
inc
int3
or
out
insb
std
js
mov
jp
sbb
out
cmc
jge
xor
enter
push
fistpll
movsl
mov
in
jmp
pop
and
rorb
mov
fdivp
scas
push
cmp
xchg
js
ds
ds
.byte
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
xchg
aas
jne
push
aas
pop
jns
xchg
push
sbb
inc
pushf
cmp
loop
cmp
andb
lods
and
jge
or
pushf
aaa
mov
je
inc
adc
adc
sub
sub
add
jecxz
dec
and
andl
stc
adc
cmpsb
fnstcw
cmpsl
dec
push
movsl
inc
movsb
xlat
pop
jno
push
in
pop
pop
fnsave
aam
nop
sbb
push
or
arpl
addr16
sbbb
insb
outsl
testb
fdivrl
leave
popf
dec
mov
sbb
les
inc
add
add
cmp
add
add
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
cmp
add
add
add
add
mov
add
addb
add
cmp
add
add
add
or
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
addr16
add
add
add
push
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
cmp
add
add
add
push
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
cmp
add
add
push
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
cmp
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
inc
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
pusha
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
cmp
add
add
add
add
add
add
addb
add
addr16
add
add
add
add
add
add
nop
add
add
cmp
add
add
add
add
add
add
mov
add
add
addr16
add
add
add
add
add
add
mov
add
add
add
cmp
add
add
add
add
add
add
rolb
add
addr16
add
add
add
add
add
add
rolb
add
cmp
add
add
add
add
add
add
loopne
add
add
add
cmp
add
add
add
add
add
add
lock
add
cmp
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
adc
add
add
add
cmp
add
add
add
add
add
add
and
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
add
cmp
add
add
add
add
add
add
inc
push
add
add
add
cmp
add
add
add
add
add
add
push
push
add
add
add
cmp
add
add
add
add
add
add
pusha
push
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
cmp
add
add
add
add
add
add
addb
add
add
add
addr16
add
add
add
add
add
add
nop
push
add
add
add
cmp
add
add
add
add
or
add
add
add
addr16
add
add
add
add
or
add
add
add
addr16
add
add
add
add
or
add
push
add
add
add
cmp
add
add
add
add
or
add
push
add
add
add
cmp
add
add
add
add
or
add
push
add
add
add
cmp
add
add
add
add
or
add
push
add
add
add
cmp
add
add
add
add
or
add
pop
add
add
add
cmp
add
add
add
add
or
add
pop
add
add
add
cmp
add
add
add
add
or
add
pop
add
add
add
cmp
add
add
add
add
or
add
pop
add
add
add
cmp
add
add
add
add
or
add
add
add
add
cmp
add
add
add
add
or
add
add
add
add
cmp
add
add
add
add
or
add
add
add
add
cmp
add
add
add
add
or
add
add
add
add
cmp
add
add
add
add
add
add
addb
add
add
in
add
add
add
clc
mov
add
in
add
add
add
adc
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
cltd
push
add
add
in
add
add
add
mov
add
add
add
add
add
bound
add
add
add
add
add
push
add
add
in
add
add
add
lods
pop
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
dec
push
add
add
in
add
add
add
fmuls
add
add
add
add
add
add
add
dec
push
add
add
in
add
add
add
in
push
add
add
add
add
add
dec
push
add
add
in
add
add
add
clc
dec
push
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
push
leave
imul
flds
mov
xor
int3
inc
cwtl
push
mov
xchg
dec
pop
ret
jne
dec
jge
bound
dec
js
sbb
cmp
push
testb
inc
enter
stc
mov
clc
mov
pop
mov
jo
sub
lods
mov
lods
mov
lcall
mov
mov
or
jle
xor
xor
dec
int
ljmp
push
cld
fs
push
adc
in
push
dec
adc
and
sub
fisttpll
jecxz
popf
inc
mov
lcall
inc
test
and
movsl
mov
add
and
jecxz
lcall
adc
cmp
and
push
cltd
mov
cmc
inc
or
push
repz
outsb
adc
imul
lahf
dec
lret
ret
ror
in
hlt
push
push
rolb
mov
adc
stc
or
push
mov
cs
subb
cltd
ret
dec
pop
lds
sti
leave
lcall
mov
das
mov
lahf
in
lcall
jl
enter
sbb
xchg
mov
test
inc
shlb
pop
cmpb
and
mov
out
xchg
and
mov
sarb
mov
or
pop
push
shrb
mov
mov
mov
cld
scas
push
call
and
test
aam
cmp
lret
sbb
inc
js
push
sbb
pusha
aas
push
jmp
pop
imulb
push
xor
inc
mov
aaa
inc
neg
sahf
ljmp
xchg
in
and
and
out
mov
mov
xor
jle
into
jno
bound
pop
cmp
push
push
lret
inc
push
sbb
movsl
xchg
add
or
push
ljmp
dec
addr16
out
dec
jp
imul
cld
pop
jo
out
mov
cltd
cmp
jge
xor
xchg
jbe
addb
popf
cmp
test
push
cmp
dec
push
leave
das
pop
aas
pop
dec
jmp
fcompl
xchg
ljmp
jp
mov
xchg
xor
movb
sti
mov
xchg
xor
std
ljmp
cmp
cmp
mov
dec
je
popf
xchg
aam
pop
out
aas
or
stos
xor
pop
mov
jbe
cmp
rclb
push
jle
adc
aam
mov
mov
adc
lcall
jge
ss
test
loopne
in
mov
or
insl
sbb
inc
sub
jge
pop
push
inc
outsb
ret
and
cmp
mov
lcall
loopne
xor
subb
pop
add
mov
sbb
rcll
adc
ficomps
sbb
dec
dec
hlt
test
xor
sbb
jp
daa
xchg
inc
leave
inc
sbb
out
sub
outsl
in
adc
cmp
push
adc
arpl
insl
data16
jb
jne
xchg
adc
test
inc
adcb
cmp
pop
and
lods
pop
outsl
and
jp
lahf
cmpl
leave
ret
or
pop
pop
outsb
lret
cli
enter
pop
sbb
xlat
cli
sub
arpl
popw
add
xchg
scas
mov
mov
jmp
sub
xchg
sub
je
aad
gs
and
adc
adc
dec
shlb
pusha
jecxz
insb
add
lds
aam
into
xchg
sub
mov
in
xchg
arpl
jg
sbb
rcrl
cmp
imul
add
orl
mov
bound
aas
pushf
and
mov
in
jo
jecxz
das
js
test
push
push
stos
into
ret
repnz
xchg
scas
aam
fldt
jns
xchg
mov
out
ret
cmc
dec
insl
mov
sti
fidivrs
add
les
pop
adc
cmp
cld
lock
pop
inc
adc
sbb
push
cmp
insb
out
out
mov
mov
cmp
fucomp
inc
call
jnp
add
push
pop
pop
lds
testb
leave
mov
pop
out
xchg
mov
mov
mov
mov
aaa
out
cmp
mov
mov
insl
inc
mov
loop
sbb
inc
pop
push
lcall
adc
mov
out
loope
jle
rcll
fwait
lds
pushf
jmp
out
gs
jns
lods
pop
ljmp
fsubl
mov
sub
jns
or
shlb
out
popa
sbb
cmc
fwait
mov
imul
fistl
aad
test
iret
cld
mov
dec
test
push
cld
add
repnz
xor
in
icebp
adc
push
fists
in
jae
in
lahf
divl
jle
loopne
xchg
mov
addps
or
add
push
xor
out
cmp
sti
dec
stos
js
leave
jbe
repz
pop
push
imul
jne
subl
mov
cmp
sbb
ja
cmp
jg
inc
sub
repz
data16
or
dec
and
dec
lret
fidivl
xchg
jecxz
inc
mov
add
pop
test
push
xor
xor
cmc
movsb
leave
push
aas
pop
addl
aad
pop
pop
ficomps
iret
pop
aam
xchg
fs
push
popf
not
out
test
inc
negb
daa
mull
xchg
int3
bound
shl
out
xor
xor
xchg
cmp
cmp
sub
xor
dec
mov
popf
sbb
or
aas
insl
mov
add
icebp
or
push
mov
push
subl
sbb
mov
addr16
push
ret
mov
repz
adc
test
out
insl
dec
popa
or
cld
popl
add
inc
push
test
ret
popl
cmc
aas
lods
pop
lods
pop
pushf
pusha
pop
or
xor
xchg
iret
dec
xor
sub
jmp
xlat
bound
and
cmp
dec
mov
loop
mov
mov
or
push
jbe
pop
adc
aad
lds
push
mov
push
jae
cmp
in
rorb
xchg
cs
xchg
xor
mov
and
decb
stc
fs
in
data16
pop
push
out
push
insl
adc
cmpsb
scas
xor
fldcw
iret
sti
ja
jge,pn
and
xchg
and
rorb
xchg
idiv
dec
inc
push
out
push
jns
jnp
cmp
or
jecxz
fnsave
movl
sti
in
pop
in
pushf
outsb
lret
nop
dec
sbb
ss
adc
pop
stos
in
sbb
mov
sti
in
aad
xor
pop
bound
ficompl
xchg
lahf
lods
pop
add
aad
movsl
add
xchg
xchg
sbb
fsubrp
mov
pop
sahf
push
fsubp
data16
sub
je
shll
fs
dec
je
xchg
mov
leave
sbb
leave
enter
lret
in
add
imul
jge
push
pop
xlat
imul
push
cmp
repz
add
popf
sub
push
sti
out
fs
push
push
and
gs
inc
adc
es
out
in
stos
mov
xchg
std
push
int
mov
fcomip
fmul
adc
orb
jns
inc
dec
ret
mov
paddd
mull
xor
pop
clc
push
std
mov
popf
mov
jmp
add
lods
ds
loop
jmp
pop
adc
addr16
pop
mov
xor
ret
sbb
aam
cmp
cmp
outsb
or
pop
jg
roll
lods
mov
shll
mov
sbb
dec
jl
dec
lock
jge
add
js
flds
aaa
pop
push
inc
push
leave
fisttpll
in
scas
mov
lds
out
mov
xor
sub
rcl
mov
fimuls
int3
movl
mov
push
jmp
jle
mov
sar
loopne,pt
das
add
test
push
ds
push
and
bound
cmp
scas
aas
fsubrl
mov
pop
in
sub
fidivl
xchg
loopne
sbb
addr16
mov
fcmovnbe
ret
call
jnp
dec
xchg
fstps
mov
stc
sbb
xchg
mov
push
daa
jle
adc
lcall
cltd
cltd
pop
sub
adc
mov
inc
in
and
mov
push
sbb
loopne
shrl
imul
scas
notb
out
inc
mov
ss
sti
inc
sbb
out
out
in
push
inc
dec
adc
and
push
jl
pop
aad
cltd
lock
rcr
arpl
out
lods
or
pop
popa
add
dec
sub
xchg
pushf
movsl
enter
sbb
stos
push
mov
adc
lods
push
sbb
cmp
adcl
aaa
gs
mov
in
adc
or
sub
cmp
mov
xchg
scas
leave
mov
cmp
or
xchg
jmp
sbb
insl
or
xchg
into
add
mov
shll
retw
xchg
dec
daa
push
pop
lock
or
mov
ja
inc
rorb
mov
ja
pop
test
nop
cltd
out
add
inc
unpckhps
adc
cmpsl
push
je
cmp
sub
inc
or
repnz
mov
add
mov
fsts
mov
pop
push
jecxz
jns
es
into
outsb
sbb
addr16
lds
mov
sbb
mov
mov
pop
pop
jno
enter
sti
lret
pop
jle
xor
insb
lock
flds
fnclex
cmp
push
or
fdivr
bound
adc
inc
lods
xchg
or
loop
or
mov
lahf
mov
js
jge
aaa
out
jl
inc
pop
xlat
clc
mov
test
mov
jb
pop
pusha
cmp
mov
cmpsb
add
mov
add
inc
paddw
fsubrp
adc
xor
dec
dec
xchg
dec
adc
stos
stos
sbb
xor
xchg
aaa
xchg
pop
lock
movb
lea
je
popa
sbb
adc
mov
pop
pop
jnp
in
jb
sbb
clc
in
xor
pop
lock
inc
jl
sbb
scas
push
pop
or
jp
mov
mov
push
shlb
jge
push
shl
sbbb
stos
inc
hlt
cmpsb
nop
adc
sbb
lahf
jnp
sub
fidivrl
sti
addl
rcrb
cmp
aad
rolb
aam
popf
cmp
div
mov
scas
jp
stos
fimuls
inc
ss
stc
int3
es
fidivrl
push
imul
lea
flds
jmp
sbb
add
bound
cmp
std
cmpsb
clc
pop
stos
jmp
inc
xor
xchg
hlt
cmp
add
pop
sbb
xchg
les
xor
nop
lods
mov
popa
inc
loope
add
mov
mov
repnz
mov
pop
inc
jns
loope
insl
xchg
in
pop
mov
and
cs
hlt
std
sub
mov
push
sbb
or
mov
test
in
fs
aaa
pusha
je
push
xor
adc
inc
lods
mov
mov
out
int3
cmp
es
or
and
call
pop
adc
scas
mov
pop
inc
mov
jne
dec
add
push
testl
popa
in
fcmovnbe
sbb
aas
sti
xchg
cwtl
sbb
out
sbb
mov
sub
pop
xor
pop
sbb
int3
and
mov
push
and
lret
sub
push
popf
inc
inc
insl
xchg
js
in
ret
mov
dec
inc
outsb
repz
mov
sbb
cwtl
inc
pop
in
repnz
mov
insb
jbe
push
sbbl
enter
mov
outsl
out
push
pop
xor
fwait
loopne
stc
push
mov
jp
sbb
jno
jne
cmpsb
jno
push
cmp
dec
dec
push
inc
cwtl
loope
push
shlb
pop
xchg
mov
es
or
imulb
arpl
ljmp
out
rol
jmp
jnp
sbb
push
mov
jmp
ror
js
ret
into
lock
and
in
fnstsw
int3
test
sub
mov
cmpb
pop
or
xchg
adc
xor
jmp
pop
dec
xor
sbb
mov
sub
icebp
mov
mov
outsl
add
push
ficoml
jb
movsb
xchg
js
out
mov
dec
dec
dec
or
or
testb
xchg
or
mov
loop
adc
xor
cs
pop
repz
out
rorb
daa
cmpsl
pop
cltd
iret
mov
xchg
scas
jno
and
fists
and
aas
pop
in
repnz
dec
shlb
cmp
scas
jp
aas
xlat
adc
sub
fs
cli
outsl
and
pop
adc
int3
adc
fcompl
cmp
das
and
sbb
rorb
and
stos
xlat
fwait
cmp
popf
jnp
stos
test
push
notb
enter
data16
adc
daa
gs
push
fsts
mov
sbbb
mov
sbb
xchg
pushl
pop
je
sub
rorl
jae
outsl
lds
hlt
ljmp
loop
loop
ds
push
outsb
sbb
test
out
subb
movsb
or
inc
iret
lea
and
in
push
push
sbb
movsl
and
shl
mov
mov
out
rolw
inc
push
lret
inc
int
ljmp
dec
sub
mov
sub
lcall
or
lods
sub
pop
mov
xor
ret
aas
xchg
ja
mov
lea
push
pop
inc
cld
xor
pop
xchg
loop
jb
fwait
xchg
add
pop
aaa
xor
or
clc
out
pop
xchg
or
add
cmp
dec
orb
inc
adc
add
jg
cltd
or
ja
sbb
sub
shr
test
cmp
call
aad
sbb
fs
xchg
or
int3
testb
pop
sub
add
lret
sbb
ja
aad
or
dec
sub
ficomps
repz
daa
xchg
cmp
cwtl
jp
fwait
jnp
pop
and
pop
es
fs
mov
sub
add
lcall
mov
test
imul
iret
sub
daa
outsl
push
push
decl
bound
out
fwait
pop
fsubrs
adc
cmp
je
xchg
repz
in
fwait
jne
and
or
push
mov
fmulp
inc
pop
jp
daa
xchg
adc
popa
mov
adc
mov
fsts
addr16
daa
imul
lret
mov
pop
mov
icebp
clc
xlat
aaa
repz
test
mov
lahf
xchg
sub
push
ret
ret
jne
inc
in
outsl
out
jp
cmp
aad
xchg
inc
popa
and
fldl
aam
cmp
dec
shll
test
dec
cwtl
add
jmp
outsb
xchg
ja
jl
sbb
adc
into
fdivs
jl
add
or
cmp
xchg
mov
sbb
xor
pop
loopne
lret
pop
call
call
scas
inc
push
push
cwtl
das
push
push
or
lahf
xchg
mov
fistps
lds
push
pop
jmp
int
sub
xchg
fwait
je
mov
decb
cmp
out
sbb
or
push
mov
mov
xorl
loopne
jcxz
inc
cli
aas
push
jbe
sbb
loop
mov
cs
insb
pop
sbb
sub
push
shlb
rcrl
jb
mov
std
mov
and
push
gs
mov
or
mov
xlat
inc
inc
ret
arpl
and
cmp
pop
dec
ja
xchg
fidivs
adc
fimuls
les
fwait
imul
inc
or
das
inc
adc
jae
fstps
aaa
out
lods
cmc
adc
std
cli
fnstcw
mov
mov
pop
mov
jne
cmovge
or
out
sub
mov
or
mov
push
or
jae
in
outsl
sub
or
sub
std
pshufw
rorb
iret
call
scas
out
mov
out
les
adc
hlt
fwait
adc
fisttpl
push
adc
mov
jmp
lods
dec
jb
inc
mov
add
mov
push
cmp
stos
ja
sarl
pop
mov
movsl
int3
mov
in
inc
inc
xchg
daa
xchg
mov
mov
pop
testl
aas
sbb
je
pop
in
fmulp
call
jg
and
cld
mov
daa
mov
mov
xchg
sbb
jno
pushf
jae
cmp
inc
jnp
ret
cltd
insl
enter
pop
fsubs
inc
ret
sti
inc
sbb
ja
outsl
ja
test
dec
sub
adc
cmp
push
les
xchg
add
dec
outsl
lods
lea
sbb
push
lods
cli
js
lods
push
mov
rcll
pop
mov
ret
mov
arpl
jns
addr16
sti
fistps
jle
push
jge
inc
mov
je
cmp
js
inc
push
fninit
dec
addr16
inc
lods
jae
push
aad
xor
adc
stos
xchg
in
jp
mov
mov
outsl
lcall
cmpsl
jbe
nop
sbb
int3
jne
das
add
sarb
dec
jns
add
inc
sub
clc
jnp
lret
push
adc
fcoml
mov
add
jle
inc
cltd
mov
jle
fwait
mov
dec
pop
lahf
stc
icebp
mov
xor
rcll
push
jb
inc
pop
mov
cvtdq2ps
dec
mov
mov
pop
sub
mov
mov
lock
and
scas
pop
sar
insl
sbb
jmp
xchg
and
rcrb
and
ds
mov
mov
push
stc
add
inc
mov
xchg
outsl
lcall
push
int
sub
movsb
mov
test
cltd
pushf
popf
popf
hlt
adc
xchg
and
jmp
pusha
pop
int
or
and
pop
pop
or
mov
push
sbb
js
les
jg
pop
push
and
sbb
push
stos
in
clc
cltd
mov
or
subb
mov
sbb
cmp
jp
outsl
es
cmpsl
jne
inc
add
mov
test
aaa
icebp
pop
ficomps
jo
or
add
lock
xchg
daa
jbe
enter
call
mov
cli
xchg
or
add
movsl
enter
mov
pop
and
hlt
movsb
movsl
out
ds
ljmp
jno
xchg
inc
repnz
sbb
movsl
pop
inc
jmp
cltd
xchg
aam
mov
jno
je
inc
enter
adc
jno
push
mov
lret
mov
iret
pop
in
and
fmuls
adc
fidivl
mov
mov
ja
push
mov
fnsave
xchg
lea
repz
push
call
inc
divb
shrl
inc
fs
mov
push
pushf
icebp
cmp
scas
jp
lahf
dec
leave
lahf
pop
lds
cmp
sub
aad
int3
popa
and
push
loopne
xor
mov
mov
shlb
data16
sub
daa
test
pop
sti
jns
cmpsb
sub
aad
es
repz
xchg
stc
mov
nop
xchg
incb
xor
xor
push
xchg
adc
xchg
or
shll
notl
jbe
mov
sub
jne
pushl
sbb
shll
out
sti
mov
xor
aas
test
ficompl
clc
ljmp
xchg
sub
nop
mov
scas
aaa
xor
popf
lahf
lods
jge
lret
dec
dec
mov
cltd
mov
cli
cli
shrl
mov
dec
cs
add
xchg
push
je
movsl
repnz
repnz
mov
cld
movsb
mov
shl
mov
in
pop
dec
jb
decl
add
mov
inc
mov
jo
dec
repz
ljmp
shlb
daa
aad
jae
out
insb
push
loop
dec
push
cmpsb
cmp
arpl
int
lret
and
pop
loope
mov
xor
sar
xchg
xchg
jg
cld
add
mov
in
lea
loop
push
cmp
loop
js
mov
call
es
xor
mov
dec
push
fisubrl
jnp
push
inc
inc
das
xor
push
xor
dec
popf
idiv
push
nop
movsb
imul
sti
pop
fstcw
pop
push
push
jae
cwtl
mov
cmp
mov
adc
scas
and
loope
xor
mov
add
adc
fldl
mov
push
sti
stc
cmc
and
leave
or
dec
ss
in
outsl
xlat
fmulp
adcb
fidivs
lret
loope
pop
adc
lea
mov
sub
ljmp
or
xchg
add
outsb
mov
fnsave
xchg
jmp
sahf
jae
sub
enter
out
inc
ss
daa
mov
push
lods
sub
js
jns
leave
icebp
scas
lods
rcrl
xor
jnp
sub
in
and
jecxz
test
or
out
mov
clc
fdivrl
push
push
pusha
mov
outsl
cltd
andl
push
out
icebp
push
stc
xor
push
adc
mov
es
punpcklbw
pop
cmp
or
cs
sbb
imul
inc
loopne
imul
in
fs
mov
add
jmp
push
sub
sbb
clc
aaa
fists
daa
outsb
pop
mov
das
sbb
sub
xor
in
mov
test
adc
inc
inc
sub
sub
test
jle
call
fstpt
sbb
push
dec
xor
adc
mov
test
and
jno
test
stos
shrb
push
fsubrl
cmp
and
rolb
popl
sti
pop
xchg
adc
jne
push
adc
and
repnz
pop
leave
outsl
loope
sbb
loope
push
outsl
and
mov
jae
xlat
jmp
dec
xchg
adc
mov
dec
or
cli
sbb
das
or
repnz
imul
outsb
pop
out
push
jo
xlat
push
xchg
cmp
shrb
jl
sbb
cs
add
push
xlat
jg
push
dec
xchg
mov
mov
in
and
jmp
jp
push
xorl
xlat
nop
arpl
leave
push
loop
lods
xor
faddl
icebp
push
mov
xor
mov
cmpsl
sub
cltd
xor
jno
adc
jl
nop
pop
shlb
dec
out
retw
mov
or
fdivs
cmp
movsb
jge
lahf
shl
leave
jb
inc
sub
std
mov
pop
pop
pop
adc
mov
cwtl
add
jae
push
scas
mov
popl
decb
lods
arpl
jmp
xor
das
pop
add
adc
sbb
enter
lea
mov
das
jbe
in
imul
and
jmp
int3
cmp
cmc
in
in
mov
dec
lahf
mov
sub
jae
adcl
in
mov
inc
jae
lret
bound
aaa
jne
mov
push
sub
das
mov
lcall
xor
std
dec
and
fwait
mov
pop
pop
fdivr
xchg
enter
es
lret
loopne
dec
fcoms
xor
fisubrl
cmp
mov
mov
inc
insl
lahf
xchg
roll
das
insl
cmp
mov
mov
and
inc
jmp
fwait
inc
mov
xchg
js
ja
popa
frstor
in
fwait
in
dec
fildll
cmp
mov
push
rorl
dec
xor
inc
fistl
and
andl
lret
mov
ds
addr16
inc
push
clc
in
aam
pop
imul
cmp
inc
add
ds
sbb
dec
xchg
pop
jb
mov
xchg
aam
lock
adc
push
mov
adc
adc
data16
hlt
jnp
mov
sub
push
mov
mov
mov
mov
outsl
addl
adcb
mov
mov
fs
sbb
setp
loopne
fnsave
rcr
insl
out
pop
inc
push
lea
sbbl
xchg
mov
xor
in
sub
and
mov
sub
movsb
outsb
inc
xchg
je
xchg
ficomps
or
stc
xchg
jge
imul
scas
push
fbstp
or
add
push
roll
pop
dec
lock
add
jae
lods
xchg
inc
jo
dec
push
scas
xor
outsb
jnp
add
fldcw
clc
jae,pn
cld
xlat
fnstenv
nop
imul
or
add
sbb
aad
iret
ljmp
and
push
cmc
adc
in
lret
jmp
leave
mov
nop
lods
jbe
mov
lods
clc
clc
or
xor
and
xchg
inc
ds
nop
pop
pop
and
das
pop
mov
xchg
push
fildl
and
je
test
inc
adc
scas
cmp
add
jnp
mov
bound
in
push
adc
sbb
mov
sub
jno
jmp
sahf
pop
imull
clc
popf
cs
jecxz
jl
add
fwait
mov
dec
and
loope,pt
mov
xchg
mov
fcmovnb
inc
test
push
cmp
test
sub
jmp
cmpl
and
xchg
inc
mov
inc
fiadds
xorl
iret
lcall
sbb
sbb
mov
xor
lods
jge
ror
movsb
push
gs
mov
or
lret
addr16
xchg
sub
add
xor
jle
adc
cmpsl
xorl
das
daa
pop
and
lret
imul
paddd
aad
lcall
push
lret
push
lock
mov
incl
cmpsb
dec
mov
mov
pop
not
pop
loope
and
loop
sbb
adc
les
andl
cmp
mov
xchg
jg
pop
ret
add
and
cmpsl
sub
sbb
insb
movsl
jns
mov
jb
xor
or
lea
push
xchg
add
pushf
lahf
ror
fisttpll
out
adc
pushf
cmpsl
xchg
ja
xchg
sbb
sub
or
xchg
sub
jecxz
iret
mov
xor
mov
lods
fstpt
xor
mov
cmp
cvttps2pi
pop
out
xor
add
clc
sarl
inc
mov
push
pop
push
add
ja
aad
daa
push
pop
lcall
mov
rcrl
stc
push
pop
sub
jg
fwait
lods
cltd
jbe
mov
jno
or
ffree
xchg
jno
cmp
jne
arpl
mov
pop
cmc
aaa
pop
decl
mov
mov
xchg
fadd
mov
mov
imul
addr16
pop
gs
rorb
mov
push
add
movsl
xor
cmp
dec
push
jns
or
add
inc
cs
sbb
cmp
pop
cmc
pusha
adcl
or
outsb
fnstenv
mov
fwait
mov
pushl
jl
inc
sub
mov
inc
lea
add
out
or
push
mov
xchg
adc
mov
mov
fdiv
dec
jo
in
mov
mov
jmp
fistpll
xlat
mov
sbb
inc
repnz
dec
lahf
clc
jo
xor
sbb
sub
add
add
sub
or
xchg
pop
xchg
loope
out
xchg
fs
cmp
lods
xor
jne
sub
scas
sbb
mov
loop
xchg
dec
jno
dec
loopne
mov
dec
movsl
sbb
sar
push
cmpsl
jg
mov
jnp
dec
sbb
sbb
lods
pop
cmp
mov
push
icebp
cmp
dec
push
push
test
add
add
repz
jnp
sti
test
ja
dec
xchg
fmuls
xor
nop
mov
rcrb
jnp
or
pushf
pop
fsubs
mov
inc
inc
fwait
mov
xor
mov
out
je
xor
fldl
popf
lret
xor
aaa
leavew
das
hlt
inc
jns,pn
push
pop
pop
loope
dec
sarl
xchg
cmp
test
mov
repz
mov
sub
bound
mov
arpl
mov
xor
adc
js
adc
cld
stc
loopne
sbb
mov
stc
push
jl
xchg
adc
rorb
int
shlb
imulb
mov
out
xchg
add
pop
jne
int
fs
xchg
xchg
mov
icebp
ss
pop
lds
push
outsl
add
or
ja
inc
jns
sub
fcmovbe
fildl
testb
clc
lcall
sub
lret
adc
lret
jbe
sbb
ja
int3
and
shr
repnz
push
lret
sub
jp
mov
xchg
xor
test
fnsave
std
jge
inc
daa
inc
shll
testb
mov
inc
and
cs
mov
xlat
sbb
and
dec
dec
pop
add
cld
fbstp
shr
and
adc
jmp
rolb
fstl
adcb
and
mov
and
mov
imul
or
mov
mov
xchg
fdivs
mov
mov
loopne
push
xor
and
push
scas
lret
cmp
test
push
cmp
sarl
lcall
hlt
xchg
push
aaa
push
cwtl
lcall
aad
pop
sub
clc
sbb
mov
cmp
hlt
inc
dec
push
pop
push
clc
outsb
cmp
or
fcomps
xchg
xor
and
fldl
and
mov
insb
mov
sub
mov
negl
rcrl
leave
dec
lret
lods
clc
mov
mov
mov
aaa
inc
clc
sbb
cmp
sahf
rolb
mov
lahf
mov
test
fnstsw
ficoml
daa
out
push
rclb
mov
aaa
add
insl
cmpsl
cmp
vprotw
pop
pop
arpl
scas
adc
mov
addr16
gs
in
iret
xor
jbe
pop
mov
xor
ja
inc
xor
pop
dec
xchg
and
imul
jg
das
adc
lds
and
lds
add
in
inc
pop
addr16
in
xor
jb
cltd
jbe
mov
add
xor
dec
sub
pop
jns
add
mov
js
outsl
jae
xchg
xor
int
dec
out
nop
gs
xchg
mov
sahf
mov
insb
cmc
push
mov
xchg
sub
and
packssdw
mov
xlat
std
inc
lcall
and
xor
push
or
sahf
dec
jno
push
cld
mov
inc
lahf
mov
push
bound
outsl
iret
movsl
bound
leave
dec
popa
in
lea
cld
test
pop
jmp
mov
mov
rcr
int
inc
pop
lahf
repnz
inc
mov
push
subl
jmp
in
scas
mov
aaa
aad
dec
cmc
adc
xor
xchg
mov
sub
fldl
enter
repnz
movsb
movsl
sbb
sbb
es
icebp
loope
test
and
movsl
or
orl
dec
int3
mov
call
dec
inc
pop
cmp
push
daa
xor
mov
shr
or
pop
lahf
xor
outsb
pop
mov
sbb
or
push
mov
mov
movsl
sbb
add
push
test
cmc
fidivl
sbb
jno
addr16
xchg
fs
mov
mov
sbb
push
call
sbb
and
sbb
out
xchg
inc
into
jns
sub
sbb
mov
adc
in
mov
push
or
add
loop
mov
inc
adcl
mov
pop
jmp
mov
scas
out
popa
and
stos
sub
sahf
dec
xor
cmpsb
cmp
sub
xchg
inc
ret
je
and
pop
add
imul
push
out
dec
pop
mov
add
jae
mov
test
mov
shlb
pop
dec
xchg
in
push
sbb
inc
mov
movd
push
imul
dec
orb
xor
xchg
out
pop
push
cmp
dec
add
out
xchg
xlat
in
xor
cmc
push
xchg
jecxz
sub
mov
sahf
shll
jo
std
xchg
jae
iret
adc
or
mov
sti
sub
dec
lret
cmpsb
data16
scas
enter
scas
das
bswap
jo
pop
mov
xor
stos
pop
cwtl
mov
mov
dec
lds
cmp
call
sub
sbb
mull
push
je
daa
fsubrs
adc
iret
mov
xorl
jnp
rolb
mov
jnp
add
shrb
addl
sub
ret
xor
mov
cmp
or
cmpb
sbb
xchg
inc
mov
jg
push
sub
dec
dec
xchg
shll
dec
int
mov
into
std
pop
sub
or
jecxz
cmpsl
gs
xchg
xor
test
xchg
popf
les
fists
or
or
xor
lcall
xchg
add
sbb
jmp
push
mov
adc
mov
lret
into
mov
push
stos
pop
xchg
test
mov
inc
mov
insl
dec
xor
lcall
int
jno
jae
jecxz
jno
add
inc
ficompl
int3
int
test
mov
stc
movsl
push
cmp
sbb
mov
sti
jp
js
mov
cli
call
sub
pop
jb
lret
cmc
lret
and
rorl
jge
ret
push
popf
test
fstl
jns
gs
scas
or
mov
icebp
adc
push
dec
shlb
mov
mov
popa
loope
or
jno
std
subl
loop
stos
mov
ss
and
andb
je
lock
imul
mov
cmp
je
nop
cmp
cltd
incb
jle
ret
inc
pop
xchg
hlt
push
mov
out
out
or
repnz
lcall
pop
jno
add
xchg
mov
fwait
or
push
mov
mov
adc
inc
dec
xor
add
jmp
es
ret
push
fisubl
mov
nop
jb
inc
outsl
sbb
lods
xchg
cmp
push
add
clc
mov
aaa
lods
mov
call
sti
test
pusha
add
cli
push
cli
bound
imul
inc
adc
xchg
out
scas
repz
push
push
dec
push
enter
loope
fsubrs
sub
arpl
xchg
and
loopne
push
popa
aaa
inc
pop
mov
xchg
pop
lea
cli
imul
bound
pop
xchg
dec
ret
jecxz
and
xchg
inc
mov
hlt
enter
add
outsb
mov
sub
fistps
lods
ljmp
rcr
and
sti
fmull
sub
mov
dec
cmp
add
push
nop
jo
jbe
adc
add
xor
hlt
test
pop
es
and
or
in
push
dec
jmp
xor
jecxz
cmp
jb
fidivrs
push
pusha
les
das
bound
cmpsl
mov
in
shll
dec
jmp
lea
bt
push
dec
jge
cmc
sahf
cld
add
adc
sti
mov
cmp
xor
enter
loope
lock
push
pop
jbe
mov
sub
ret
inc
pop
pop
jns
imul
dec
nop
lret
les
test
or
mov
in
imul
in
lock
dec
daa
fisubrs
cmp
mov
push
outsb
mov
inc
push
int
je
fstpt
pop
stos
int3
cli
imul
negb
cvtpi2ps
and
sbb
dec
jae
ret
lea
or
out
add
add
loope
out
jg
pop
lock
add
jg
lret
push
cmp
adc
adc
add
mov
movsl
add
add
lods
xor
xchg
mov
enter
lcall
pusha
stos
jl
xlat
out
dec
clc
orl
or
or
lock
insb
mulb
cli
lret
js
mov
jle
adc
jne
lret
add
nop
xor
and
and
rcrl
pushf
stos
push
cli
push
xor
mov
cmc
dec
in
jg
outsl
lret
jmp
testb
dec
js,pt
and
mov
cmp
fisttpl
out
rcl
jns
test
mov
test
adc
int3
add
insl
into
pop
add
ljmp
push
fdivl
add
hlt
ret
mov
cmp
in
mov
cld
xchg
fbld
in
lret
and
push
mov
jg
push
gs
fcomps
jl
int
into
xchg
dec
push
pop
xor
mov
mov
or
jnp
lret
orb
repnz
and
xchg
mov
fildl
aaa
loop
and
and
xchg
xchg
pop
pushf
sub
jg
sahf
call
push
out
sub
and
pop
inc
lret
sbb
fwait
dec
xor
sub
mov
in
sub
sbb
adc
adc
std
je
insl
jle
je
adc
add
push
test
or
adcl
dec
popa
jp
pop
inc
ret
or
jg
jp
xchg
fcmovne
testl
sub
movsl
lods
sti
adc
xor
dec
or
int
jb
fbld
hlt
or
repnz
ud1
cs
push
aam
jmp
nop
pusha
mov
repz
fistpl
cmpsb
pushl
out
push
mov
xor
mov
cmp
and
movsb
sbb
aas
rclb
sarl
xchg
push
lock
mov
or
add
jbe
js
mov
rclb
xchg
out
popa
stos
cltd
roll
sti
mov
mov
inc
push
out
es
jl
pop
call
seta
push
sub
xor
xor
movsb
xchg
loope
push
ret
mov
add
xchg
scas
in
push
rcrl
notl
ljmp
mov
jbe
adc
add
mov
mov
movsl
jae
lds
mov
repnz
push
push
pop
or
ss
divb
xor
xlat
cmpsl
test
pop
pop
jo
cmp
jmp
xor
int3
lds
mov
call
dec
or
jle
andb
shlb
add
and
push
adc
add
mov
inc
imul
xchg
push
cmp
ficompl
out
xor
scas
cmc
lret
gs
fwait
sbb
ljmp
mov
mov
sbb
arpl
and
sub
cmp
ss
shl
sbb
inc
rcrb
in
dec
sbb
mov
mov
imul
loopne
sub
sti
cmp
pop
mov
mov
sub
mov
mov
xor
inc
and
and
int3
xchg
bound
lret
test
loope
hlt
lahf
movsb
xor
adc
jl
aad
mov
mov
sarb
mov
mov
push
cmpsb
cmp
xor
cmpsl
mov
xor
cmpsl
xchg
xchg
pushf
inc
xor
dec
dec
push
push
hlt
fst
outsb
push
fistps
sbb
xchg
adc
imulb
mov
and
xor
cmp
arpl
mov
ljmpw
sti
pop
sub
xchg
inc
jl
iret
add
jae
sarl
notb
test
or
mov
jnp
lcall
jg
cmc
add
test
out
pop
lahf
and
pop
sbb
ret
add
cmpsb
das
jbe
fnstcw
lods
ds
rcll
test
hlt
jb
dec
or
sub
fwait
mov
shl
add
in
sub
jbe
add
add
insl
add
xor
shlb
rcrb
or
jecxz
lods
in
pop
sub
and
fs
nop
ret
dec
add
lret
pop
mov
pop
fwait
sub
cmpsl
cmp
fcoms
jns
jo
pop
fcmovne
xchg
outsl
add
xchg
inc
cmpsl
jg
adc
cld
mov
mov
aaa
or
jg
mov
xor
pop
in
rol
enter
inc
adc
hlt
push
arpl
mov
mov
imul
lahf
call
mov
lahf
shl
adc
lds
push
push
xchg
stc
aas
pmaddwd
cli
repz
mov
push
insl
push
into
out
dec
push
and
jns
jne
lcall
idivb
sbb
imul
or
jmp
pop
sub
jge
xor
in
jae
lock
icebp
sbb
js
cli
rcrb
sbb
loopne
lea
or
es
mov
cs
and
enter
xor
adc
sti
test
pop
mov
sub
jg
nop
divl
clc
mov
testl
rclb
mov
push
dec
std
fwait
or
inc
push
push
xor
mov
fstp
inc
arpl
mov
gs
sahf
dec
fcoms
jbe
in
hlt
pusha
int3
fsubrs
js
sbb
adc
data16
sbb
push
cltd
mov
frstor
jne
int
ljmp
dec
dec
mov
mov
popa
clc
imul
inc
sbb
jecxz
jb
pop
cmpsl
jbe
nop
jp
jmp
stos
sbb
int
push
sti
cli
mov
jne
dec
pop
dec
fistpl
pop
sbb
cwtl
sub
loope
and
insb
jecxz
pop
cmpb
mov
movsb
jl
lret
jbe
fwait
cld
repnz
adc
jmp
inc
addr16
mov
ret
xlat
push
pop
add
mov
insl
jne
push
inc
or
adc
push
and
popa
fwait
pop
pop
js
adc
arpl
ja
out
or
fisttps
add
stos
ficomps
pop
lahf
stos
dec
sub
leave
cs
insb
dec
sbb
stc
rcrl
lret
test
jp
test
jne
int
xchg
in
sbb
lret
xchg
pop
fsts
sahf
stc
xchg
push
test
popa
push
dec
pop
jno
int3
fdivl
repnz
dec
dec
cwtl
icebp
mov
dec
fwait
ja
test
inc
test
mov
xor
aaa
jmp
gs
fnstsw
sbb
stc
or
push
lods
fbstp
mov
loopne
jg
push
dec
ss
xor
int3
xor
dec
adc
sub
enter
es
jae
push
adc
xorb
pushf
xchg
inc
int
and
push
jecxz
and
lods
sub
cwtl
sub
ljmp
mov
clc
inc
into
or
adc
pop
faddl
push
into
xchg
lret
lcall
cld
inc
mov
cmp
and
in
pop
lods
popf
ss
int
fdivl
push
cmp
xorb
cmp
scas
dec
cld
insl
sbb
or
lcall
cli
and
nop
jge
pop
cmp
jns
xor
in
jno
mov
psubusw
jnp
mov
sti
add
push
pop
mov
out
inc
adc
inc
cmp
sarb
decl
dec
jnp
mov
in
in
push
lods
pop
ja
and
out
insb
in
pop
jmp
and
fadds
push
push
adc
push
pop
jno
aas
lods
insb
outsb
lcall
jae
or
or
aas
inc
jp
xor
lret
hlt
dec
stos
out
pushf
aaa
cmpsb
jns
xchg
fimuls
lods
enter
add
mov
aaa
push
and
imull
rolb
sarb
lret
aad
es
cmc
insb
cwtl
xorb
out
mov
test
pop
aam
stos
psubd
jg
movsb
mov
mov
mov
jbe
fcomi
popf
or
outsl
sbb
decl
subl
and
xor
je
in
pop
jg
cli
lds
out
jge
mov
xor
sub
icebp
dec
dec
jecxz
jp
fdivp
xchg
or
loopne
out
fs
pop
inc
bound
sbb
fistpll
and
jle
adc
aad
arpl
xchg
fisubrs
push
jnp
insl
mov
inc
aam
adc
cmc
enter
mov
stos
das
insl
xor
aaa
inc
call
cld
ret
sub
jae
push
test
and
mov
out
xchg
jne
adc
push
inc
cmp
lods
int3
mov
and
ret
cli
aad
and
push
push
cli
shlb
add
test
leave
xchg
lods
leave
jg
test
call
flds
jmp
bound
pop
int3
push
stos
dec
jl
xor
mov
pop
or
push
ret
lods
inc
stos
fs
jl
xchg
xor
add
insl
mov
xchg
pop
push
sub
loope
inc
push
mov
scas
inc
lret
adcl
sbb
scas
das
fcompl
les
add
add
xchg
test
sub
add
cmpsb
push
cmc
icebp
fmull
xchg
aad
adc
add
jns
fnstcw
mov
ss
test
pop
xor
scas
jp
sub
dec
cmp
sub
in
adc
or
xor
dec
fdivrl
pop
mov
sbbb
jl
mov
imul
inc
scas
mov
sbb
ds
das
lcall
or
jo
scas
in
adc
jo
loopne
inc
push
mov
push
sbb
cmp
or
popa
cmp
inc
leave
ss
iret
push
jp
cmp
pop
lods
jo
or
ret
std
out
int
add
adc
loopne
stc
cmc
adc
xor
push
andl
dec
ja
pop
mov
and
loopne
mov
jno
ss
add
stc
pop
jnp
pushf
mov
jae
fbstp
arpl
or
pushf
lea
aad
add
push
pop
mov
mov
dec
mov
and
incl
ret
shrl
mov
sbb
jbe
cld
int
cmc
in
gs
ficoml
push
or
pop
push
mov
hlt
frstor
dec
test
cld
adc
push
mov
push
rcrb
mov
cmc
pop
add
jmp
sub
jo
push
aaa
push
mov
fisubrs
push
add
cld
nop
add
imul
shr
cmp
mov
int
sub
addr16
dec
mov
test
je
adc
sbb
ljmp
test
in
nop
xchg
inc
xchg
push
cmp
call
test
out
mov
jge
and
sti
push
jge
push
mov
lods
pop
push
ljmp
lods
fwait
and
adc
or
xchg
ljmp
add
jg
insb
invd
ja
ret
rol
cwtl
sti
xchg
jmp
out
int3
or
or
dec
sub
pop
jmp
push
loop
aam
mov
enter
inc
inc
pop
test
xchg
sbb
mov
out
inc
sbb
jae
bound
sahf
add
test
mov
xor
mov
popf
mov
aad
pusha
das
int3
repz
add
in
setl
and
cmp
les
xor
sub
lret
ja
dec
notl
movd
lods
jle
mov
data16
xlat
pop
pop
test
mov
sbb
dec
pop
rcl
fldcw
mov
xor
cmpsl
rclb
pop
add
shlb
push
cmp
jecxz
jl
out
aas
mov
ljmp
or
or
jmp
xchg
mov
cs
pop
and
cmp
mov
idivb
mov
out
xlat
jb
mov
pop
test
mov
mov
rolb
and
cmp
cmp
js
push
not
xchg
leave
sub
pushf
out
cmpl
dec
ret
xor
jns
mov
add
icebp
xlat
and
cmpsb
mov
or
inc
imulb
mov
fwait
mov
and
add
or
dec
xor
vdivsd
aad
clc
push
push
xorb
pop
mov
lea
xlat
adc
stos
xor
subb
pop
inc
cmp
cmpsb
pop
in
data16
fs
out
repnz
dec
jne
mov
iret
jmp
adc
shlb
sbb
repnz
mov
stc
sbb
enter
push
ds
flds
imull
sti
inc
cli
jbe
pop
ret
sbb
xchg
enter
js
fwait
arpl
clc
mov
add
shlb
mov
xor
and
addr16
mov
pop
push
pop
aas
mov
pop
call
xchg
sub
fldt
inc
sub
loopne
lcall
movsb
popf
inc
loope
pop
es
sbb
out
jle
pusha
test
sahf
fwait
dec
cmp
into
push
xor
mov
sbb
outsl
lods
lret
cmp
xor
mov
ficoml
jbe
xor
mov
xor
lock
fcompl
adc
and
lods
xchg
xchg
aas
cmc
cmp
or
fmuls
sbb
lock
fwait
add
mov
mov
xchg
gs
dec
xor
dec
mov
repnz
jle
mov
dec
enter
push
mov
sahf
mov
xchg
mov
mov
loopne
loopne
into
ss
cwtl
scas
ret
jle
adc
mov
add
inc
jne
inc
lods
xlat
xchg
sbb
add
lods
or
mov
and
jp
ret
xor
fwait
dec
imul
std
or
inc
mov
ss
xchg
ljmp
div
push
add
pop
jge
stos
iret
mov
xor
loope
push
xor
and
push
cmp
mov
cmp
sub
jno
fwait
icebp
sarl
push
sbb
test
fimuls
inc
test
sbb
push
push
repz
fwait
bound
cmc
xorl
sahf
push
int
adc
inc
adc
mov
jnp
cmpsb
or
mov
mov
inc
and
cld
jo
sub
movsl
cli
mov
and
int3
mov
mulb
jns
jp
cwtl
sbb
xchg
mov
xchg
das
add
mov
fildl
fistpl
popf
push
cld
and
jo
mov
mov
call
ret
js
add
clc
add
push
and
pop
xchg
imul
add
lahf
cmpsl
cwtl
leave
lcall
inc
cmp
lret
cmp
push
push
adc
xchg
xchg
pop
dec
int
push
cs
mov
out
lret
out
rcrl
cmpsb
xchg
insl
or
push
divl
fs
jle
in
cmpsb
xchg
xchg
int3
push
sub
aas
js
orb
imul
add
add
mov
xchg
mov
or
mov
outsb
stc
jl
xor
push
nop
xor
or
fcomps
sub
cmp
xor
js
es
fsubrs
sub
inc
and
lret
or
imul
xchg
cld
jp
pop
loop
das
fs
mov
xor
test
cmp
jo
dec
add
add
mov
rclb
ss
lret
jo
push
xchg
stos
addr16
or
gs
repnz
xor
pop
ret
xor
out
in
ret
adc
repnz
cmp
sbb
lods
loopne
mov
addr16
das
or
push
or
int3
inc
popf
das
ds
mov
or
push
sub
push
popa
or
rol
pop
cmpsl
hlt
sub
call
lods
fcomip
add
sub
pop
cmp
or
pop
pop
add
mov
stos
pop
fidivs
pop
aad
or
div
mov
rorl
or
adc
bound
fstl
lods
xchg
xchg
aaa
repz
jo
mov
div
ja
sub
or
scas
je
cmpl
jne
scas
insb
lahf
add
sub
loopne
mov
cs
test
addr16
call
mov
adc
pop
dec
xchg
out
cld
pop
jne
xchg
subl
and
ljmp
cmpsb
push
je
mov
out
inc
mov
add
pop
cmp
adc
jb
xor
pop
fisttps
sbb
popf
adc
aaa
mov
out
inc
lcall
mov
sbb
push
fisttpll
jns
mov
data16
inc
mov
outsl
mov
hlt
sahf
jp
gs
inc
and
xor
xor
rolb
mov
pop
fwait
pushf
sbb
sahf
out
mov
pop
adc
push
outsl
cld
lret
jb
repz
and
add
jmp
out
push
aam
lcall
arpl
add
sarb
mov
insb
push
test
fs
stos
or
testl
pop
add
adc
scas
test
cmc
sar
daa
add
rcl
and
movsl
sbb
inc
ja
mov
lahf
mov
mov
push
subl
cltd
jecxz
sbb
fidivrl
rcr
and
pop
adc
sub
fcmovne
add
stos
dec
sti
mov
add
xor
pop
fimuls
imul
sbb
push
mov
mov
cmpsb
jae
je
or
push
xor
xchg
in
mov
mov
mov
sub
and
idivl
js
test
adc
xchg
repz
cmp
xlat
in
push
mov
cmp
jmp
mov
xchg
shlb
inc
jge
cmp
call
aas
adc
imul
aam
pop
out
inc
leave
insb
adc
mov
fstpt
lcall
out
push
imul
sub
mov
jp
insb
jnp
or
sub
and
repz
or
sub
xor
xchg
in
test
add
mov
push
inc
rorb
in
add
push
push
dec
cmpl
cs
or
push
fnsave
pop
push
sub
adc
xchg
mov
jl
xchg
adc
mov
inc
pop
jbe
xor
mov
jmp
add
rcrl
addr16
sbb
ds
mov
xor
sbb
sub
filds
mov
mov
jnp
and
jbe
js
lcall
sahf
cltd
xor
jg
sarl
jge
mov
icebp
jb
fxch
xor
push
outsl
pop
aaa
mov
bound
repnz
jno
call
test
in
aaa
stc
lock
sbb
out
fidivs
mov
cmp
dec
mov
testb
add
cli
std
xor
add
jecxz
rol
jmp
inc
bound
frstor
ss
loop
xchg
rcrb
xor
mov
xchg
push
xor
cwtl
mov
mov
push
or
hlt
jle
and
sbb
aaa
pop
imul
push
pop
and
stc
or
movups
mov
fisubs
fmuls
rclb
push
jno
pop
loope
pusha
inc
xchg
or
daa
mov
mov
mov
shlb
pushf
or
adc
les
xor
mov
in
std
adc
jl
add
xchg
fwait
mov
jg
aaa
adc
or
xchg
js
fucom
stos
insb
mov
mov
pop
fs
es
aaa
dec
xchg
jae
add
pop
inc
pop
adc
inc
mov
out
addr16
orb
and
mov
push
pop
popf
xlat
lahf
xchg
es
aaa
mov
loop
or
cmp
push
daa
adc
push
dec
mov
fdivrp
ja
dec
scas
sahf
jne
fwait
cmp
cmpb
testb
subl
cmp
push
cld
mov
js
add
mov
dec
les
dec
in
outsl
jnp
enter
jp
adc
and
fnsave
insl
sub
add
test
lods
xchg
ljmp
xchg
add
cmp
cmp
xlat
or
shrl
xor
inc
adc
out
sti
and
mov
rol
mov
aaa
sbb
sub
mov
jnp
sub
sbb
subl
mov
mov
xor
stc
sbb
mov
cmpsb
jle
lahf
mov
add
adc
lahf
push
mov
aad
fprem
xchg
sbb
add
or
andl
and
cmp
movl
adc
ja
cmpsl
or
cmp
pusha
cmp
lret
in
test
rcrb
cltd
inc
xchg
jmp
jge
lret
sub
jmp
or
rcll
ljmp
je
add
mul
xor
inc
mov
stos
cmpsl
and
addr16
cs
jmp
popa
mov
filds
imul
mov
or
cmc
daa
rcrb
js
lds
xor
sub
xorb
push
add
push
sub
push
add
jl
mov
cmpsl
aaa
lahf
dec
repz
aam
fstl
and
push
pop
adc
fistpl
jle
or
fucomp
xchg
dec
mov
jmp
scas
cwtl
std
pop
pop
fwait
hlt
in
movsl
stos
pop
aad
sub
aas
andb
and
push
stc
in
insb
inc
adc
adc
lock
jno
cmpl
fsubp
sbb
jge
mov
test
push
aaa
pop
or
or
cmp
mov
mov
les
cld
daa
pop
mov
mov
jae
rcr
test
and
sub
inc
ret
mov
jecxz
or
or
cmpsb
jmp
cmc
imul
mov
pushf
inc
lcall
mov
bound
adc
loopne
in
repz
and
jbe
divb
and
dec
push
inc
int
add
dec
mov
and
mov
bnd
inc
arpl
js
fimuls
adc
cmp
push
pop
mov
push
in
jp
test
jo
loopne
xchg
sbb
mov
lret
jmp
xchg
or
jno
stos
sbb
and
jle
insb
dec
xor
dec
dec
sbb
and
fstl
jns
cmp
add
jmp
insl
sub
cmpsb
idivl
in
mov
xchg
jl
dec
fs
movsl
mov
inc
mov
sub
je
test
mov
xor
pop
push
outsl
repz
xchg
push
mov
dec
mov
dec
test
inc
rorb
xor
mov
popf
rcrb
jle
mov
loope
and
jns
sub
or
dec
daa
sbb
arpl
xchg
lea
inc
inc
into
jno
add
sbb
push
lods
fstpl
push
test
and
mov
add
imul
bnd
enter
push
inc
lds
sbb
cmp
push
sbb
in
sub
jno
loop
push
cmp
shrl
out
push
xchg
nop
stos
and
inc
js
push
pop
pusha
or
mov
cmp
popf
out
pop
repnz
nop
and
outsl
leave
mov
lret
ja
inc
and
jge
orl
xor
test
inc
mov
jge
dec
call
ss
add
inc
repnz
mov
insl
xchg
sarb
fsubs
lods
sbb
mov
xor
daa
xor
cmp
into
test
stc
push
sti
xor
push
int3
aad
add
cmc
xchg
sar
dec
jo
cmpsb
sub
test
in
inc
test
stc
ljmp
repnz
xchg
fs
xchg
dec
loope
jne
sbb
int3
fwait
stc
data16
fdivrp
out
push
add
jno
pop
cmp
mov
and
stos
repz
bound
inc
mov
add
pop
fnstcw
push
or
and
push
lret
xchg
xor
aam
stc
adc
mov
scas
xchg
jno
pusha
les
jne
and
jle
dec
jb
mov
rcrl
xor
jo
inc
jbe
fwait
clc
push
and
dec
stc
movsb
fstl
push
dec
add
push
pop
pop
or
movsb
aad
jge
mov
insb
aad
ficoms
scas
pop
test
in
jmp
std
jbe
sti
push
lds
or
mov
push
adc
aas
cltd
sbb
movsl
mov
pop
int3
fsubr
xor
push
iret
iret
test
pushf
in
xchg
and
orl
and
jle
sbb
and
test
fistps
cmp
push
stos
dec
dec
or
aaa
dec
adc
test
or
cmp
call
movsl
test
popf
push
lret
arpl
sbb
leave
test
cmp
mov
sbb
xor
adc
pushf
sub
stos
lock
sub
mov
fiaddl
je
lods
lock
mov
fdiv
int3
dec
clc
push
cmovo
sub
fdivr
xchg
das
mov
push
out
dec
jae
pop
std
mov
dec
and
jno
adc
outsl
xchg
arpl
lea
push
and
push
lock
fisttps
insb
lea
xor
jmp
inc
add
rol
lods
and
fsts
mulb
roll
stos
faddl
jp
pusha
xchg
stos
mov
dec
mov
fildll
aas
push
stos
push
pop
mov
cmp
scas
gs
jecxz
sbb
and
hlt
push
ret
xchg
bound
addr16
add
fisubl
fwait
cmp
mov
dec
lret
fidivrs
or
rol
dec
jbe
daa
test
mov
jp
xchg
js
add
adc
cmp
repz
push
inc
in
bound
call
mov
js
cmp
icebp
lods
push
sub
inc
orl
stos
lcall
divb
outsl
rclb
scas
insb
add
movsb
leave
pop
cmp
or
jmp
pushf
int
test
inc
movsb
sub
outsl
dec
adc
sbb
jg
scas
jo
sbb
std
std
add
lock
and
sub
lods
dec
ret
mov
dec
sbb
mov
std
push
pop
fdivl
mov
adc
lret
dec
cmp
and
scas
mov
loopne
das
scas
into
mov
mov
loope
in
pop
mov
or
leave
sbb
test
pusha
aam
shlb
lock
into
ja
lods
dec
hlt
sbb
mov
inc
xor
pusha
fisttpl
push
mov
or
push
mov
or
cld
mov
add
outsl
mov
mov
sbbl
enter
cwtl
arpl
repnz
push
dec
adc
xor
push
mov
into
sub
mov
out
cmp
push
push
mov
sub
or
orl
mov
adc
pop
xor
stos
jae
jl
int3
dec
repnz
dec
ljmp
ds
push
je
jns
jl
std
and
stos
sbb
inc
or
sbb
jg
pop
mov
js
dec
inc
inc
mov
mov
out
ret
sub
inc
mov
dec
push
mov
loopne
pop
mov
adcl
cltd
daa
aaa
les
pop
stos
into
icebp
das
stos
jae
add
outsb
sti
push
xorb
cld
mov
mov
mov
dec
adc
mov
jnp
add
test
fnsave
sqrtps
and
mov
push
stc
call
sti
loope
je
add
testb
das
pop
and
or
mov
mov
sbb
jae
push
sub
adc
mov
popf
ljmp
mov
imul
int
inc
test
jl
xchg
in
mov
lea
ret
cmp
lds
ljmp
add
mov
push
repnz
imul
repnz
pop
dec
mov
ljmp
jp
sti
jmp
push
push
mov
add
fnstenv
mov
mov
push
xchg
cs
ret
mov
xchg
cmp
sahf
cmc
iret
ljmp
mov
movsb
shl
les
mov
adc
inc
daa
scas
repnz
adc
cmp
mov
outsl
push
and
fdivs
or
sub
movsl
popa
fsubs
pop
cli
mov
ds
push
sub
sub
mov
jge
or
loopne
xor
rolb
fdivl
fcmovbe
adc
xchg
pusha
push
jno
ret
popa
xor
or
shlb
mov
pop
sbb
cs
popf
pop
orl
stc
inc
inc
cmp
dec
repz
mov
sub
push
repz
push
jns
insl
mov
pop
adc
scas
mov
dec
push
and
fstpt
cmp
jg
pop
inc
xchg
or
dec
mov
clc
rorl
stc
fs
inc
ss
mov
push
lock
jmp
mov
out
pusha
nop
cmpsl
enter
fldl
lds
mov
inc
repnz
cltd
test
cmp
fcoml
jp
subl
sub
cmp
ljmp
mov
test
fcomip
jmp
rorl
ja
xchg
pop
rcl
and
jb
add
mov
movsb
mov
cld
call
mov
push
loopne
outsl
mov
mov
cmpsl
nop
stos
add
inc
loope
push
push
aam
add
adc
sahf
int
cmp
or
out
out
jl
push
cltd
in
rcrl
push
lods
ret
and
mov
and
pushf
push
add
ds
dec
rcll
mov
adc
fwait
aad
pop
pop
xor
cld
push
gs
stos
fisttps
movsl
sarl
outsb
movsl
dec
sub
loope
imul
sbb
xor
int3
adc
ja
mov
sti
push
scas
add
dec
mov
adc
xor
movsl
add
mull
pop
cli
jmp
mov
xchg
mov
aas
insl
jecxz
inc
adc
fisubrs
out
sbb
test
inc
loop
dec
pop
popf
loopne
inc
mov
repnz
or
loop
jo
jbe
push
arpl
mov
mov
jno
add
rcll
test
pop
repnz
lcall
lods
xlat
push
sub
rorb
aas
add
subb
loop
mov
cli
arpl
xchg
out
cmp
iret
shlb
cmp
inc
cmp
fs
daa
sbb
sub
mov
sub
cmp
jmp
xor
push
lcall
mov
xchg
cmp
jge
clc
ss
lds
stos
popf
mov
inc
push
sbb
sbb
add
adcl
jne
inc
cli
jne
hlt
pop
ja
cmc
mov
sbb
mov
jb
dec
cmp
or
sub
mov
lret
aam
pop
es
shr
cmp
inc
fidivl
cld
in
dec
and
mov
mov
adc
fdivrs
roll
arpl
fcoms
cmp
pop
imul
push
cmpsl
out
je
in
jp
jge
add
push
gs
sbb
dec
jg
inc
adc
stos
stos
mov
les
das
cmpsb
int3
sub
pusha
shr
rorl
lahf
out
insb
sub
shll
sahf
jecxz
sub
mov
clc
data16
outsb
imul
enter
sub
sub
jbe
mov
pop
mov
gs
adc
repz
mov
in
lods
sub
cmp
pushf
xor
hlt
inc
popl
sarb
cld
or
xchg
adc
jne
incl
inc
xor
lret
jle
imul
out
add
xchg
out
jne
stos
mov
adc
jl
loope,pn
xchg
jp
in
mov
lock
leave
pushf
loope
lock
pop
mov
mov
movsl
or
out
add
mov
mov
inc
pop
pop
mov
push
ret
inc
mov
ret
jbe
xchg
js
cmp
shl
push
cmp
insl
rcll
xchg
lret
lcall
mov
out
inc
xchg
jno
sarb
sub
mov
push
das
jae
push
jge
dec
mov
sbb
jmp
iret
jns
aam
mov
mov
fstpt
pop
cmp
and
stos
or
mov
aam
jp
std
insl
sub
gs
fists
push
into
repnz
jns
rolb
lret
mov
movl
or
fistl
xchg
cmp
pop
pop
add
in
popf
enter
icebp
arpl
fadd
add
shl
pop
out
je
push
and
adc
icebp
jae
or
enter
or
mov
cmp
std
inc
daa
ret
xor
push
fmull
jecxz
fcoml
imul
lahf
cli
hlt
jne
pushf
pop
test
mov
es
into
dec
adcl
mov
rcll
test
mov
out
movsb
inc
push
loope
cmp
or
push
or
add
xchg
xor
aas
mov
pop
sar
xchg
xor
and
push
fnsave
mov
nop
hlt
mov
jmp
pop
sbb
dec
xchg
push
cmp
ja
push
scas
outsb
xor
add
cltd
sub
nop
out
adc
xorl
mov
mov
imul
adc
jl
pop
push
xchg
repnz
rcrl
clc
adc
jnp
cmpsb
outsl
leave
pop
lea
daa
xchg
jg
mov
mov
into
inc
pop
maxps
xor
ret
dec
jle
mov
in
and
pop
mov
dec
shlb
pop
sti
mov
call
jo
adc
or
xchg
cmp
xor
push
nop
mov
repz
jg
mov
cmovnp
sub
pusha
mov
mov
fs
adc
fcmovnb
cmp
push
int
arpl
repnz
fcom
jnp
mov
scas
insl
lcall
mov
xor
int3
stos
push
xchg
and
sarb
inc
jb
cmp
xchg
push
and
xor
xor
sbb
cld
lret
and
out
adc
pop
jnp
fsubrs
mov
clc
inc
mov
sub
rep
push
pop
out
ss
cmp
adc
mov
lcall
jge
pop
outsb
xchg
inc
popf
cmp
nop
stos
and
ss
jge
test
adc
mov
lea
mov
push
jo
ja
mov
in
sbb
mov
lret
adc
lahf
mov
movsb
jae
fsubs
mov
mov
cmp
stos
flds
push
dec
jo
xchg
or
push
sub
imul
adc
add
xchg
test
test
xchg
xchg
les
sbb
enter
repnz
cli
mov
sub
xor
cld
fiaddl
adc
push
mov
or
arpl
jno,pn
outsb
adc
adc
sbb
xor
cmp
xchg
test
popf
fcoms
pop
jg
out
les
stos
pushf
xchg
mov
repnz
repz
mov
sub
enter
sti
cmp
cld
aad
lea
popa
iret
aad
aad
lock
shr
mov
or
sub
dec
pop
sti
inc
jp
je
jns
adc
xchg
inc
addr16
jmp
sti
add
dec
cld
xchg
rcll
mov
lcall
sub
add
ficompl
pusha
test
adc
stc
mov
inc
je
or
adc
f2xm1
in
jecxz
outsb
pop
hlt
in
popf
mov
lock
jle
in
ret
clc
jle
cmp
cli
push
push
push
pop
or
mov
inc
jae
enter
sub
dec
lcall
push
in
adcb
gs
in
movsl
push
cmp
in
cmc
mov
and
mov
jne
mov
mov
dec
dec
int3
dec
cmp
cmp
sbb
adc
lea
adc
mov
add
scas
into
cs
adc
mov
push
cmc
adc
imul
ja
add
fisttpll
push
or
cmpsb
mov
or
scas
pushf
jl
out
test
dec
add
dec
popf
mov
int3
negb
sbbl
xor
mov
test
jne
xchg
or
inc
cmp
ret
icebp
decl
scas
pop
xchg
mov
add
mov
mov
pushf
int
leave
call
mov
pop
ficompl
xor
sbb
pop
adc
inc
jmp
mov
or
lea
dec
jmp
orl
cwtl
shrb
in
fdivrs
xchg
mov
jmp
fcmovnb
inc
inc
outsl
hlt
xchg
mul
sub
aad
xchg
jp
jns
add
mov
aaa
aaa
idiv
idivl
jae
stc
inc
or
int3
pop
jae
jnp
lahf
test
div
and
pop
and
mov
sbb
fstl
sbb
mov
xchg
sarb
jp
ficompl
pop
cld
mov
sub
ret
xor
hlt
into
sbb
leave
sub
pop
rorb
mov
mov
jmp
pusha
adc
pop
push
rorb
lret
sahf
or
into
pop
lret
jne
gs
pop
sti
insb
add
xchg
dec
jmp
nop
pop
jmp
push
xor
mov
out
xor
rcr
insb
notl
call
or
aam
xlat
pop
enter
mov
xor
or
xchg
push
movsb
fs
repz
popa
push
pop
out
sbb
fs
jb
and
stos
lcall
cmp
dec
jae
push
ja
ljmp
push
bound
pop
push
push
add
adcb
pop
daa
in
pop
cmp
add
scas
lcall
inc
pop
mov
inc
sub
lds
push
lea
out
pop
xchg
shl
pop
cmp
xchg
imul
nop
fnstcw
dec
cmpsl
andb
inc
and
addr16
or
js
in
aaa
pop
lea
cmp
daa
popa
mov
ret
into
pop
popa
out
sub
dec
movsb
jae
cmpsl
stc
cmc
in
sbb
dec
mov
adcb
cmpsl
and
imul
mov
jmp
or
mov
xor
dec
mov
jne
jl
xlat
or
rcl
out
mov
lods
sbb
je
test
sub
jmp
mov
hlt
rcl
push
rcr
xchg
jb
int3
loopne
scas
je
in
imul
loop
mov
dec
xchg
jg
push
popf
lret
pop
xchg
outsl
call
sbb
jmp
int3
mov
mov
cltd
into
test
stos
adc
and
js
vphsubwd
out
fbstp
enter
in
mov
das
lea
adcb
addr16
inc
xor
shl
ds
in
and
mov
dec
loopne
outsb
sub
mov
sbb
push
xchg
sahf
bound
sbb
mov
je
sbb
push
rorl
mov
push
jecxz
aam
mov
sarl
pop
dec
pushf
add
pushf
iret
fsub
pop
pop
xlat
mov
xor
lret
pop
xchg
xor
add
cli
out
lods
jl
repz
push
aas
jge
fwait
loop
inc
push
scas
jno
test
pop
shlb
pop
inc
and
xchg
sbb
mov
pop
pop
inc
or
rclb
in
jae
aas
add
jmp
int3
in
mov
dec
adc
fimull
mov
icebp
jmp
pushf
dec
in
mov
ss
or
jb
add
lea
je
sbb
push
jp
and
xor
pop
loop
and
loop
push
fwait
decl
mov
addr16
in
lods
cwtl
inc
pop
jnp
enter
gs
dec
jecxz
fidivs
and
pop
push
sbb
mov
jo
push
lcall
push
xor
xchg
loopne
repz
and
das
in
sarb
adc
sbb
fcomi
test
push
xor
aas
popa
add
fisttpl
pushl
mov
daa
mov
jmp
lcall
rcrl
jb
ss
push
push
pop
mov
int
jge
ds
bound
push
addr16
pushf
adc
inc
xchg
dec
mov
push
sbb
jl
fisubrl
sub
or
adc
cmp
inc
or
lret
out
xchg
mov
inc
xchg
cltd
inc
incl
xchg
dec
mov
test
mov
pop
xlat
inc
sub
xchg
add
outsb
jle
insl
xor
outsl
in
mov
jl
test
cmp
leave
xchg
inc
inc
pop
out
mov
jno
sub
push
sub
daa
repz
xorb
adc
in
cltd
mov
sub
mov
inc
fwait
dec
in
repz
or
adc
jp,pt
lret
sbb
rcl
dec
roll
or
ret
sbb
imul
cmp
add
out
enter
sbb
shl
mov
xchg
mov
inc
add
or
fcoms
pushl
cs
shrb
fisttpll
dec
pop
and
cmpsb
stos
add
stos
cmp
sbb
xchg
xor
push
fldt
sbb
lcall
popf
sbb
into
add
repz
das
and
push
sbb
dec
fiadds
pop
loope
add
cmp
push
ficoml
frstor
aas
repz
jmp
sub
pop
mov
out
incl
movsl
loop
call
jbe,pt
xchg
push
mov
daa
xchg
mov
inc
push
inc
lcall
cmp
and
dec
adc
mov
rorl
je
mov
sarl
data16
cmp
push
insb
ret
and
fistpll
dec
xor
fildl
pop
stos
cmp
shl
fisttps
add
sub
add
fcoms
xor
cmp
sbb
cmp
cmc
push
cmp
mov
rorl
clc
adc
sub
sub
fcomps
loope
ftst
sbb
xor
mov
sbb
mov
out
mov
ret
rolb
pop
pop
in
ret
mov
mov
dec
or
push
push
int3
clc
or
or
pop
cmp
mov
xchg
imul
repnz
orb
les
loop
inc
movsb
loopne
dec
outsb
cmp
je
cwtl
sbb
or
sbb
push
jae
xchg
cmp
add
movsb
int3
fstps
pop
dec
and
jp
and
sahf
sub
lret
test
mov
and
insb
jae
andl
inc
cmp
out
pop
dec
mov
xorl
cs
pusha
cmp
adc
jecxz
jge
andl
add
scas
aam
add
in
out
icebp
cmc
insb
cmp
call
popf
ret
jg
or
push
orb
subl
jmp
adc
iret
mov
imul
mov
mov
call
pusha
jle
movsb
pushf
scas
in
dec
push
pushf
cmpsl
jecxz
xor
sbb
jns
flds
inc
xchg
jmp
inc
gs
mov
nop
xor
sub
or
fldl
in
dec
xor
inc
dec
inc
lret
push
adcb
mov
cmp
pop
jge
ret
inc
push
cmp
jle
notb
aad
es
shlb
rcrl
sbbb
push
ficompl
xor
test
and
mov
out
je
mov
pop
daa
jae
test
pop
ficomps
std
xchg
fsubp
sahf
xchg
and
aad
aas
and
mov
jmp
and
loope
mov
or
and
xchg
xchg
xor
stos
push
inc
xor
ds
push
push
int3
aaa
push
scas
leave
dec
or
xlat
stc
fcompl
cmp
lcall
mov
dec
outsl
mov
mov
aas
add
xor
xor
mov
push
test
push
addl
push
sub
jge
dec
rcrb
sti
mov
xor
roll
in
out
mov
pusha
mul
sub
je
pop
call
inc
xorl
aad
pop
into
pop
out
test
sub
push
movsl
mov
jb
incl
jge
mov
and
xchg
nop
popf
ficoml
sub
pusha
pop
jns
adc
and
aas
sub
push
mov
xor
cmc
and
repnz
inc
out
push
cmpsl
or
dec
lds
mov
adc
sbb
push
sub
xchg
xchg
pop
ss
dec
or
push
outsl
addps
faddl
in
inc
push
test
sbb
ds
cmc
dec
jb
in
jbe
rcrb
inc
mov
inc
or
scas
sbb
pop
arpl
fldt
inc
ja
lds
cmpl
mov
test
push
mov
ret
xchg
inc
mov
dec
mov
pop
add
repnz
cmp
hlt
cmp
xchg
pusha
inc
sti
sbb
out
add
xlat
mov
shrd
and
mov
push
add
and
lds
mov
shlb
mov
jne
enter
fld
movsl
sbb
jb
mov
or
adc
push
icebp
xor
test
pop
scas
stos
icebp
repz
xor
nop
adc
fstl
cmp
mov
xchg
adc
xor
cltd
add
push
pop
cmp
mov
push
adc
decl
jecxz
pop
sub
mov
loopne
push
push
icebp
mov
das
sub
jo
lds
xchg
mov
sqrtps
es
divl
inc
pop
inc
mov
mov
adc
mov
movsb
call
outsb
adc
iret
jnp
mov
sub
pop
jnp
jae
sub
movsl
mov
xor
jg
out
loop
mov
adc
jns
leave
nop
pop
arpl
push
scas
pop
jnp
and
sub
dec
scas
cmp
mov
not
divb
pop
add
jae
ljmp
iret
sub
mov
xchg
mov
sbb
out
call
inc
punpckhwd
clc
aas
cmp
mov
ficoms
mov
mov
xor
or
loopne
xor
fwait
rclb
rcrl
and
js
rep
hlt
xchg
js
mov
fidivrs
mov
ss
out
xorl
dec
mov
cmc
popa
stos
sbb
sti
stos
ja
test
jmp
pop
or
cs
int3
scas
sbb
gs
lcall
mov
lcall
testb
mov
mov
inc
cltd
call
js
gs
cs
imul
jno
leave
es
insl
dec
jmp
cwtl
mov
dec
jg
jl
in
lods
in
inc
inc
push
leave
dec
dec
pop
lret
subb
movsl
sub
lcall
out
inc
sbb
push
pop
pop
xor
push
jo
imul
cmp
mov
add
ret
aad
cli
push
mov
mov
mov
daa
popf
in
into
das
sarl
lret
jno
es
fdivrl
lcall
jae
mov
nop
fdivrl
mov
mov
mov
push
enter
add
push
xchg
push
sub
mov
push
insb
push
sub
stos
cmp
sbb
orl
inc
icebp
test
sbb
pop
pusha
inc
adc
test
push
push
xchg
cmp
je
mov
sti
cmc
sub
pop
jae
xlat
bound
xor
aas
mov
arpl
mov
pop
xchg
or
mov
jo
ja
pop
push
mov
loop
adc
das
fsubrl
push
dec
mov
jge
push
xchg
ljmp
push
inc
ret
enter
xorl
ret
ljmp
sbb
test
xchg
lea
int
ljmp
sub
cmp
imul
fstpl
xchg
mov
push
xor
inc
add
sbb
andb
sahf
js
scas
lret
jo
int3
jecxz
out
xchg
and
lahf
xlat
mov
icebp
stos
pusha
mov
sar
outsl
pusha
xchg
xor
pop
ss
lret
jbe
jbe
mov
lret
mov
xchg
fdivrp
inc
loope
xchg
pop
sub
mov
mov
sub
jbe
aas
mov
mov
sbb
pop
push
sub
xchg
sub
int
sbb
cwtl
mov
xor
cmpsb
jns
testl
jp
roll
mov
jl
test
pop
mov
lods
sub
incb
fwait
pop
push
cwtl
mov
fisubrs
sub
jo
sub
xor
sub
test
rorb
xor
dec
cmp
sbb
dec
xchg
cmp
out
mov
sub
imul
cmp
addr16
in
outsb
push
inc
dec
dec
pop
loopne
sbb
jbe
stos
jp
je
fcmovbe
xchg
push
out
ljmp
sub
std
xor
xchg
xchg
out
adc
lahf
push
lds
data16
push
testb
push
mov
push
push
mov
sub
lcall
in
sbb
cli
inc
movsl
mov
in
ljmp
sbb
std
sub
insb
sbb
xor
in
imul
js
mov
push
loop
mov
add
mov
and
adc
xor
jmp
xchg
mov
movsl
xor
dec
jmp
adc
sahf
shll
enter
mov
mov
adc
adc
jno
aas
cmp
int
xlat
sbb
scas
sub
adc
cmp
cmp
inc
adc
cmc
les
loopne
mov
fidivl
aad
repnz
dec
xchg
bound
jmp
xchg
pop
into
add
sbb
ss
ficompl
sbb
add
cmc
js
mov
xchg
nop
mov
lret
jne
mov
or
insl
decl
hlt
jbe
adc
dec
dec
out
test
shrl
xchg
jg
push
mov
mov
mov
jnp
imul
add
loope
cmpsb
ss
xor
fwait
add
sub
push
ljmp
xor
xchg
aam
sahf
inc
xlat
cmp
lods
fwait
sbb
adc
insb
pop
daa
fsubrl
in
jbe
inc
or
and
inc
fnstenv
cmp
lret
jl
fadds
loop
in
bound
push
dec
adc
sub
add
inc
mov
mov
push
xchg
pop
std
add
or
mov
cwtl
xlat
mov
sbb
jb
jl
addr16
or
stos
cmp
or
rorl
push
jnp
adc
es
movsl
cmc
out
mov
and
mov
inc
xor
icebp
jp
pop
aad
inc
cld
or
sub
in
cmc
shrb
scas
or
loope
adc
inc
fstpl
cwtl
add
pop
cwtl
xchg
dec
in
push
fistpl
addr16
jnp
push
pop
insb
jns
bound
push
xchg
icebp
aad
push
push
jnp
mov
je
mov
xor
aad
jmp
dec
movsl
inc
push
push
test
negb
in
popf
xchg
or
xchg
pop
dec
sbb
popf
rorb
dec
adc
or
cltd
fisttpl
cmp
outsb
popa
int3
nop
and
jecxz
adc
pop
dec
mov
xchg
mov
loopne
sub
decl
dec
jg
mov
repz
dec
push
sub
cmp
pop
cmpsl
add
mov
insl
repnz
negb
orl
add
stos
call
negl
test
pusha
xchg
mov
push
push
pop
mov
sub
xor
push
hlt
fidivs
cmp
data16
lds
or
inc
mov
pop
clc
xchg
seto
notb
adc
xorl
cmpsl
loopne
push
arpl
xor
je
push
push
scas
fsts
andb
outsl
dec
nop
dec
mov
jns
popf
pop
inc
mov
pop
add
subl
mov
mov
mov
cmp
cld
mov
test
adc
stc
adc
push
mov
rcrl
out
mov
jl
cmp
cli
mov
lahf
enter
movsl
popl
inc
outsl
sub
push
inc
jne
inc
xor
outsb
test
popf
out
xchg
jge
mov
mov
cs
aam
add
enter
roll
test
orl
lret
or
pop
inc
xor
sub
dec
push
shrl
mov
mov
push
xchg
idivb
lods
dec
cs
mull
orb
sub
rcrb
mov
add
insb
cli
icebp
mov
push
popa
pop
sub
scas
lods
notb
jae
sbb
icebp
xor
xchg
test
fstl
gs
or
fs
fs
and
dec
or
hlt
xchg
lahf
dec
test
test
sbb
arpl
jbe
xchg
dec
xorb
inc
and
mov
test
mov
lret
lahf
push
cwtl
xchg
sub
inc
test
sbb
mov
push
aam
stos
xchg
movsl
into
and
pop
jp
add
jp
or
scas
scas
sub
jno
pusha
push
jb
or
fimuls
add
repz
push
rolb
int3
ret
cli
testb
or
in
enter
movsl
mov
les
jl
xor
xchg
out
je
xchg
shlb
movsb
lods
cli
lods
and
push
sub
repnz
jo
mov
sbbb
lea
addb
addb
gs
cs
stc
fmull
fistpl
stos
and
imul
fldl
int
hlt
or
cmp
adc
xor
xor
xchg
inc
push
mov
test
cmp
sbb
sarb
mov
xor
inc
sub
mov
xchg
jle
ror
movsb
in
or
lock
pop
out
popa
pop
icebp
fldl
cmp
sti
ja
add
es
add
xor
mov
xchg
pop
mov
outsl
mov
inc
insl
lahf
icebp
mov
lret
aam
das
mov
dec
out
popa
aaa
pusha
cwtl
pop
mov
iret
stos
sahf
add
cmpsl
mov
sub
mov
sbb
mov
xchg
aad
popf
xor
loopne
or
push
test
movsb
mov
inc
loopne
mov
jae
jle
xor
test
jge
adc
sti
sbb
mov
mov
sub
push
cmp
cmpsl
push
adc
mov
icebp
mov
test
xlat
pop
or
pop
inc
cwtl
pop
out
jbe
out
stc
fdivp
scas
scas
xor
jae
iret
jecxz
push
xchg
imul
in
pop
lcall
stos
xor
movsb
add
xlat
and
pop
jbe
insl
mov
bound
arpl
push
xchg
pop
pop
filds
xchg
scas
je
adc
stc
add
fildll
fistps
das
mov
pop
popf
in
outsb
push
clc
out
sbb
ret
mov
jl
outsl
in
sub
lds
ds
jbe
jmp
mov
je
inc
ds
xchg
out
or
sbb
xchg
add
sub
out
mov
add
cmpsl
mov
adc
or
fs
jae
xor
cwtl
fwait
xchg
cmp
cmc
jns
pop
lcall
jbe
mov
ret
rcrb
pushf
sub
sbb
cs
movsl
sbb
mov
cld
xchg
adc
pop
pop
notl
xchg
int3
pop
popf
stos
mov
inc
fdivl
push
divb
xchg
mov
daa
mov
out
xor
mov
push
jns
das
mov
mov
sub
mov
or
or
lcall
jb
xchg
out
int
inc
push
push
into
sub
cmp
xchg
adc
jae
sub
sub
lock
in
add
dec
in
clc
inc
xor
popf
xchg
inc
bnd
mov
pop
cmp
jle
xor
fstl
std
dec
cli
mov
xorb
bound
sbb
int
mov
sbb
cmc
xchg
sub
rclb
or
movsb
mov
push
gs
pop
push
dec
cmp
loopne
jns
sbb
shlb
mov
or
cmp
scas
loop
push
mov
inc
loop
xor
das
pop
adc
xor
in
lcall
mov
rcrb
scas
adc
push
add
xor
addr16
data16
inc
pop
shrb
inc
inc
js
dec
mov
fisubrl
sbb
daa
mov
dec
ret
lds
xor
pop
push
inc
xchg
adc
pop
add
and
pcmpeqb
mov
jp
lret
pusha
test
ss
push
cltd
cld
pop
add
lret
xchg
gs
and
sub
fs
dec
rsqrtps
loop
movsb
mov
jecxz
ret
jp
dec
negb
xchg
std
fistpll
arpl
add
adc
xor
or
aad
dec
jne
and
mov
push
push
mov
shrl
cmpsb
shrl
ds
mov
repnz
test
or
aas
gs
mov
cmp
mov
sub
cs
lods
dec
jns
adc
lret
xchg
lret
out
jl
fcoms
jmp
enter
mov
dec
roll
jge
jecxz
mov
popf
fwait
pop
int3
loop
sbbl
mov
lahf
mov
pop
cmc
hlt
jo
pop
pop
xor
push
or
mov
lods
insl
adcl
sbb
cmp
arpl
mov
popl
pop
mov
dec
inc
ret
or
lahf
sbb
sub
popa
sub
cltd
adc
insb
repz
xchg
call
cwtl
sahf
pushf
leave
daa
xchg
adc
xor
lock
push
addr16
repnz
stos
sub
and
jmp
sub
fstps
xchg
lcall
pop
dec
cli
arpl
js
es
sbb
mov
dec
repnz
cmp
dec
outsb
mulb
dec
pop
jmp
fcom
test
xchg
fnstcw
push
sub
or
mov
mov
mov
jge
cmpsb
mov
mov
jae
push
xchg
jg
mov
test
mov
mov
add
mov
gs
out
adc
xchg
and
popf
sbb
sbb
clc
sbb
cmc
dec
inc
mov
pop
jmp
pop
test
xchg
shrb
les
mov
lahf
fmuls
mov
or
mov
mov
pop
and
inc
inc
push
lea
sbb
fisubrl
fucom
jno
inc
add
test
ret
mov
mov
dec
dec
lock
jg
scas
sub
mov
or
pop
inc
xor
or
push
mov
fsts
push
xlat
mov
addl
in
cmpsl
and
outsb
repnz
testl
or
sti
out
sub
rcr
popf
repz
mov
sar
pop
int
cmp
mov
fisttpl
es
mov
pop
ss
sahf
mov
push
out
mov
inc
leave
es
adc
bnd
aaa
sbb
aad
cmp
xor
mov
mov
add
or
mov
or
dec
sub
xor
adc
and
pushf
jbe
xor
movsb
xchg
push
out
or
popa
jo
mov
pop
ja
xlat
insl
pop
pop
mov
sub
out
loope
and
dec
roll
mov
and
testl
sbb
hlt
insl
out
cmp
xlat
mov
add
dec
imul
sbb
mov
leave
mov
dec
jnp
xchg
aad
add
lock
out
xchg
or
pop
stos
jp
mov
sbb
pop
sbb
sti
or
shrb
insl
ficompl
mov
push
out
fldl
xor
adc
es
pusha
sub
or
leave
fcmovu
aaa
imul
in
test
dec
stos
ljmp
cwtl
call
lock
movsl
gs
shlb
cltd
inc
popf
sub
sub
in
mov
loope
sub
mov
es
bound
mov
cmp
mov
ret
pop
repnz
into
pop
add
add
lock
and
mov
rorl
dec
jns
insl
push
rcr
addr16
jne
enter
mov
push
icebp
mov
aad
les
and
out
mov
movsb
jge
fwait
inc
inc
rorl
out
jne
sub
aaa
loop
outsb
push
cmc
push
stos
inc
or
in
add
jle
xor
ret
push
sub
sahf
rclb
push
cltd
in
out
addb
jge
mov
inc
clc
dec
arpl
mov
outsb
pop
lret
xchg
jp
cs
roll
xor
pop
call
mov
stc
jmp
push
aad
adc
int
mov
mov
push
and
jle
cmpsl
daa
lret
hlt
add
adc
dec
mov
xchg
rorb
adc
mov
aaa
movsl
adc
add
xor
pop
in
mov
xor
lea
add
sti
and
or
imul
mov
loop
sub
cwtl
mov
leave
shrb
and
xor
ret
sub
push
sti
jno
mov
mov
int3
adc
fsubl
jns
fsts
sahf
mov
lods
lods
adc
js
loop
dec
mov
pop
popf
stos
fwait
sbb
jno
ret
or
lods
call
adc
std
inc
icebp
inc
sbb
daa
push
inc
jg
ret
cmp
test
int3
mov
jle
sti
loope
popa
test
xor
and
cmp
imul
adc
push
add
loope
in
sub
mov
inc
add
int3
fisttps
jb
xor
adc
mov
test
dec
ror
jp
movsb
mov
and
dec
call
fdiv
fstpl
push
pop
cmp
sbb
fs
pop
pop
fistps
ds
jne
add
out
stos
mov
negl
mov
js
jmp
aad
add
push
pop
ret
xchg
mov
sbb
mov
inc
or
jecxz
xor
xor
jp
xchg
inc
pop
push
popf
mull
add
cmp
xchg
add
dec
pop
insb
out
jl
shlb
imul
or
in
sub
add
fdivrl
mov
pop
xchg
mov
fsubs
mov
mov
xchg
movsb
push
stos
jl
mov
jns
fs
imul
mov
into
mov
jg
dec
jge
sbb
cmp
cmc
mov
psubsb
pop
dec
push
push
cld
ret
mov
in
outsb
pop
cmpsb
or
cmp
and
hlt
sub
lock
mov
xor
xor
mov
mov
pop
and
push
adc
nop
mov
ss
push
ljmp
daa
fs
lret
mov
fisubs
sub
push
es
cmp
sahf
nop
push
dec
jmp
push
cld
out
ss
fldl
add
sbbl
scas
loope
jae
xchg
jo
mov
das
sub
dec
insb
and
negb
pusha
inc
sub
out
adc
mov
inc
adc
rorb
push
add
out
fildll
push
add
fisubs
pop
lcall
jnp
arpl
hlt
pop
sbb
loopne
cltd
mov
rorl
or
lret
ss
adc
xchg
mov
cmpsb
repnz
jo
pop
add
push
cmp
push
inc
stc
lds
xor
bound
mov
decb
xchg
aas
inc
out
add
pushf
repnz
data16
mov
pop
sbb
addr16
adc
push
lods
popa
jb
add
or
sub
and
xor
jo
ja
icebp
repnz
sbb
sub
xlat
dec
adc
sub
pop
je
sub
test
adc
and
int
aaa
ja
xor
dec
sbb
push
fsts
push
cmp
lock
js
or
mov
cmp
adc
aad
es
adc
shll
push
pusha
lods
mov
adc
fwait
and
xor
jne
cmpsb
addl
add
pusha
das
in
std
push
or
in
pop
xchg
add
jbe
sub
push
jns
cmp
adc
sbb
xchg
jno
int
loop
add
mov
push
push
xor
shll
ds
pusha
sar
mov
sbb
call
mov
inc
pop
pop
daa
out
in
imul
jg
or
popa
mov
and
xchg
add
test
cmp
popf
shll
gs
cmpsl
ja
inc
cmp
pop
fmul
stos
pop
ss
clc
repz
sbb
mov
cltd
mov
dec
mov
push
jp
adc
inc
add
fcmovne
sarb
icebp
xor
rcrl
jg
int3
cs
popf
xchg
mov
das
mov
stos
mov
sub
jno
xor
mov
out
out
dec
adc
sbb
jbe
out
adc
call
mov
pop
jle
adc
inc
mov
test
ja
xlat
push
stos
lret
scas
imul
fcoms
push
insb
popf
stos
aad
aas
inc
inc
mov
mov
pop
dec
jmp
lds
ja
adc
insb
loop
ror
push
adc
or
stos
into
lret
stos
xor
push
movsb
cmp
jg
stos
dec
and
mov
sti
dec
ljmp
lret
sahf
inc
lret
and
jnp
mov
in
enter
dec
test
cmpsb
or
imul
jecxz
fidivrl
pusha
and
pop
gs
adc
test
sarb
mov
orb
add
or
or
outsl
xor
out
pop
push
xchg
mov
mov
push
cwtl
jle
mov
mov
ds
or
lods
daa
ds
adc
xchg
test
dec
test
fisubl
mov
movl
aad
pushf
mov
enter
pushf
sahf
or
adc
clc
xchg
nop
and
jns
mov
fs
out
sahf
adc
jns
repnz
adc
inc
add
pop
jmp
fabs
mov
cmpsb
mov
daa
leave
sbb
mov
and
cmp
vpsadbw
scas
jo
add
call
xor
ret
cltd
cwtl
sahf
sub
dec
mov
jp
popf
pop
inc
mov
std
aaa
lret
aam
jnp
add
std
pop
lret
jmp
outsb
push
std
or
and
jns
jecxz
sub
xor
and
push
andl
inc
nop
aas
aas
add
das
ret
imul
pop
mov
ret
lods
push
mov
loopne
jg
inc
push
scas
jmp
scas
hlt
xor
ja
mov
and
movsl
je
hlt
pop
sahf
xor
in
icebp
loope
sbb
adc
inc
aam
jmp
xor
mov
add
fisttpll
nop
pop
aad
test
popa
mov
push
aad
lahf
xchg
xor
or
mov
jo
cmp
lds
int
mov
ja
cltd
popw
xor
xor
test
mov
ja
or
clts
pusha
pop
dec
dec
cmp
jne
push
sbb
pop
sarl
aam
jae
pop
inc
ret
jmp
es
mov
lea
inc
mov
test
dec
jg
jno
in
or
mov
lds
sub
or
push
outsb
jmp
jecxz
dec
lea
data16
divl
xchg
mov
imul
fisubl
mov
sub
push
fistps
popf
mov
test
and
mov
sbb
push
pop
mov
inc
ret
pushf
sbb
inc
cltd
add
push
pop
arpl
rcr
or
pop
or
mov
xchg
mov
repnz
sahf
xor
xchg
jnp
xchg
je
sub
int3
paddsb
mov
loopne
add
push
mov
aas
popa
adcl
jp
mov
mov
outsb
iret
fsubrl
and
xchg
test
push
xor
test
clc
jmp
mov
add
mov
inc
sbb
ror
sbb
insb
mov
lea
mov
sbb
frstor
subb
pop
fcompl
mov
sub
inc
sub
icebp
in
popf
jle
xchg
xchg
repz
or
fxch
mov
jno
test
mulb
jns
test
pusha
pop
out
inc
dec
sub
and
mov
mov
xchg
push
mov
aaa
ror
pop
sub
fldt
mov
mov
cld
mov
mov
push
pushf
or
mov
iret
das
jl
aam
mov
cmc
punpckhdq
jo
bound
and
xchg
sbb
pop
mov
cltd
ljmp
scas
popf
call
aam
pop
jne
repnz
sub
pop
aas
xor
insb
popa
pop
les
sub
mov
cmp
push
mov
xor
sbb
push
jl
xchg
hlt
or
pop
cmp
lock
or
and
push
fisttpl
arpl
aad
cmpsb
addl
jmp
push
out
inc
sub
lcall
cmpsb
call
push
xor
push
dec
jno
pop
ret
xchg
push
jb
jmp
xor
jle
cmpsl
es
pushf
ret
inc
add
add
stos
xorb
jmp
iret
in
out
and
jle
sub
sub
fnstenv
in
pop
in
cmp
dec
bound
inc
mov
dec
hlt
mov
xchg
into
dec
mov
stc
mov
adc
test
adc
pop
lcall
test
cmp
xchg
ljmp
cmp
and
cmp
sbbl
rolb
scas
cltd
inc
out
inc
mov
cmpsb
cmc
fstpt
bound
jecxz
sbb
fisubrl
ret
lret
cmp
adc
adc
sub
stc
int3
fisubl
inc
push
mov
negb
cmp
dec
dec
ja
or
lock
sbb
in
cmp
or
or
mov
insb
sti
and
sbb
mov
or
lcall
ljmp
call
jne
stos
es
dec
ss
movsb
push
lds
add
pop
lret
dec
jmp
leave
fs
xchg
mov
stos
and
rol
out
pushf
jnp
out
inc
adc
adc
sti
push
sbb
cmp
test
in
jge
hlt
pusha
sbb
fiaddl
xor
pusha
popf
jns
jno
aad
daa
adc
and
mov
cmp
mov
negb
sbb
mov
jp
mov
cmpb
pop
stos
xor
cmp
stos
sbb
aam
jp
mov
jno
shr
icebp
loope
pop
xchg
push
lds
push
in
mulb
jge
jo
mov
test
ds
add
gs
std
rcrb
mov
add
mov
loopne
gs
dec
cmp
ja
xchg
sti
int
xchg
daa
fwait
in
dec
ret
jb
push
push
xor
xchg
enter
fsub
lret
sti
jp
fcompl
fcoml
or
jecxz
inc
push
mov
icebp
mov
sub
popl
mov
sti
pop
add
fst
add
push
mov
dec
cld
xor
ret
hlt
hlt
out
mov
sti
sbb
out
popf
fld1
lahf
jo
cmp
pop
sub
xchg
sub
dec
lds
scas
push
pop
jmp
and
adc
out
pop
pop
leave
cmp
mov
push
push
push
add
sub
mov
adc
jb
pop
andb
jne
sub
add
inc
or
test
lea
inc
je
fisubrs
add
sarb
pop
loope
xchg
leave
mov
jnp
jo
add
stos
faddl
cmp
je
inc
stos
xor
jg
and
aaa
daa
and
imul
xchg
xchg
xchg
fisubl
sub
cmc
icebp
pmaxub
add
jnp
fiaddl
pop
xor
rcrl
cmp
sub
mov
and
pop
and
xchg
dec
push
out
add
xchg
imul
fistpll
stos
sbb
std
movsb
jb
std
jne
aam
inc
fucom
inc
divb
pop
inc
or
xchg
xor
sahf
and
leave
push
icebp
pop
mov
mov
xchg
pusha
jmp
adc
or
or
cld
pop
add
cld
jecxz
pop
mov
lods
sub
add
jge
movsl
dec
and
inc
dec
mov
adc
mov
lods
js
xor
stc
mov
pop
sahf
jge
jae
mulb
mov
bound
loop
push
aaa
push
mov
inc
jmp
jle
dec
mov
add
xchg
mov
inc
scas
rorb
push
dec
stos
push
das
pop
jb
lret
lock
repnz
inc
dec
cmpsl
push
es
adc
cmp
out
lods
lret
sub
in
cmp
sbb
pop
rcrl
loop
ja
add
fsts
push
nop
notb
int
ja
push
xor
stos
dec
mov
dec
jp
xchg
and
lock
push
rolb
mov
add
mov
adc
mov
mov
sbb
test
test
jl
mov
add
jp
push
ljmp
out
in
sbb
fpatan
push
adc
leave
jge
pop
arpl
cmp
sbb
mov
rcrb
jge
sub
sub
addr16
add
push
mov
ja
push
fs
cmp
sub
dec
lock
clc
and
mov
cmp
mov
imul
fdiv
and
out
xchg
cmp
inc
fmulp
fidivs
fldenv
addl
int
shl
or
mov
sahf
mov
icebp
mov
je
sub
out
clc
mov
gs
jbe
sbb
cmp
data16
mov
cwtl
loopne
call
pusha
clc
mov
sbb
dec
xchg
mov
push
scas
add
lret
jmp
dec
ljmp
loopne
fidivrl
lret
mov
xchg
cs
int3
popa
popf
and
inc
scas
test
gs
enter
leave
cmp
or
xchg
xor
xchg
and
pop
jns
cmp
pop
jl
test
mov
push
cmc
pop
f2xm1
jno
pop
div
mov
je
adc
cmp
pop
dec
dec
mov
mov
jne
sbb
jp
jmp
and
jo
and
and
pop
fsubl
test
inc
cmp
push
mov
add
lcall
popf
dec
sbb
push
in
aam
aas
xchg
clc
rcr
dec
out
inc
je
add
repnz
lret
in
daa
lods
push
std
pop
adc
inc
adc
movhps
xor
sub
pop
mov
lds
aas
jp
add
dec
xchg
fs
cmp
jno
ljmp
std
cmc
call
pop
test
pop
sub
lahf
aam
andl
jno
mov
movsb
fs
push
scas
mov
mov
ljmp
lret
pop
pushf
scas
mov
dec
xchg
push
out
outsb
xor
push
insl
inc
sbb
mov
or
cmp
int3
lcall
pushf
outsb
xor
jns
push
dec
and
incb
andb
int
cmpsb
repnz
inc
dec
int
mov
sbb
push
out
mov
sub
es
sahf
cmp
inc
nop
fidivrs
pop
into
pusha
mov
mulb
push
test
ret
push
dec
mov
sbb
stc
into
add
push
test
push
and
pop
sbb
out
dec
fs
inc
mov
sbb
fcoml
mov
mulb
das
popa
adc
lea
ret
dec
cmc
inc
out
jne
jnp
mov
dec
or
xlat
outsl
test
cmp
lret
inc
nop
add
push
out
mov
aad
mov
iret
andb
ret
adc
ret
into
mov
adc
dec
filds
mov
sbb
shrb
scas
dec
clc
mov
enter
aad
xor
inc
sarl
std
and
pop
sbbl
mov
call
cmp
sub
inc
or
in
cmc
mov
adc
addb
add
adc
mov
sbb
push
jl
js
divl
pop
lcall
stos
adc
pop
or
leave
inc
aaa
sahf
int3
leave
jecxz
repz
inc
push
jmp
clc
fisubrl
dec
es
lea
cltd
push
imul
lods
cmp
fstp
inc
xchg
mul
ljmp
std
inc
stc
pop
fldt
ljmp
push
ds
dec
push
ja
mov
mov
mov
jae
adc
and
mov
and
icebp
aam
push
jmp
xchg
sbb
fwait
sub
insb
out
and
push
pop
js
ret
fst
out
adc
mov
cmc
xchg
mov
inc
push
outsl
nop
sub
or
test
xor
insl
push
es
cmp
jae
xchg
out
es
iret
insl
in
int
inc
repz
dec
notl
dec
add
cmpsl
lock
bound
das
hlt
push
mov
negl
sbb
or
jmp
and
dec
daa
shrl
sub
jg
ds
lcall
into
mov
pushf
sub
popf
sti
pushf
std
inc
push
and
fdivp
xor
jne
dec
je
rcrl
rcl
dec
sbb
cmpsb
pushf
adc
and
add
jne
shl
sbb
mov
aad
loope
or
xchg
sbb
and
popa
pusha
icebp
rcrb
xchg
pop
cltd
jmp
cmpsb
shll
jecxz
stos
mov
pop
inc
push
sub
and
fnsave
mov
xor
data16
and
adc
addl
push
inc
les
fs
sub
dec
xchg
cmp
jle
in
mov
leave
stc
lea
les
push
lret
pop
sub
xchg
negb
dec
push
push
jl
inc
add
aas
es
lea
decb
dec
sbb
test
ds
mov
jbe
pop
inc
jo
jecxz
cltd
ror
ret
mov
cmc
lods
push
sarb
or
cmp
mov
dec
and
lret
dec
scas
mov
movsb
dec
mov
mov
push
les
mov
repz
mov
ret
lret
adc
dec
mov
les
sbb
dec
jl
dec
cmp
insb
and
scas
iret
mov
and
lret
xchg
or
xchg
add
pop
or
or
and
push
fs
cmpl
outsb
xor
mov
jbe
push
movsl
bnd
imul
je
scas
jp
inc
sbb
bound
call
mov
push
ret
sarl
xorb
sbb
into
test
les
xor
test
loop
jge
lods
arpl
test
dec
cli
loope
test
lret
fisubrl
addr16
js
xchg
dec
push
cld
loop
stos
dec
jb
fimuls
bound
mov
xor
fucomip
mov
mov
add
cltd
jp
push
or
pop
outsb
hlt
iret
lret
xchg
push
xchg
mov
stos
aad
call
inc
pop
mov
dec
arpl
push
sub
imul
fsubl
sbb
push
sbb
ljmp
gs
dec
and
call
and
inc
inc
ret
js
cmpb
addr16
rcrl
inc
mov
push
fwait
test
aam
iret
sahf
scas
mov
out
ret
xlat
xchg
dec
aaa
mov
lret
mov
adc
lock
test
pop
mov
fstps
sub
sub
sub
cmp
hlt
int
mov
xchg
in
bound
pop
clc
ficomps
mov
mov
pop
aaa
add
scas
sbb
pop
icebp
cmp
lea
stos
dec
cli
xchg
subb
push
add
decb
or
int3
xchg
addr16
mov
lcall
push
xor
stc
jle
push
mov
in
gs
jecxz
dec
pop
dec
in
xor
lds
pop
aaa
xchg
push
bound
insb
ds
pusha
adc
mov
rorb
mov
pop
repnz
icebp
adc
ja
and
mov
sub
inc
je
lret
xchg
loope
mov
inc
push
das
or
adc
call
pushf
in
ret
sub
cmp
ret
je
lret
pop
mov
cld
mov
les
jmp
cmp
mov
dec
mov
add
je
pop
jno
mov
in
rcr
andb
call
xchg
inc
jbe
inc
sbb
fnsave
and
std
and
xchg
dec
inc
xor
rolb
adcl
ljmp
jge
in
mov
fisubl
sbb
mov
inc
mov
sbb
jg
mov
jmp
dec
mov
sbb
push
in
sbb
xchg
jbe
push
add
in
test
cmp
mov
arpl
jbe
int
dec
mov
jbe
inc
inc
or
sahf
iret
or
std
jnp
and
fists
pop
xor
xor
enter
pop
mov
dec
loopne
leave
clc
lock
stc
adc
outsb
inc
enter
fwait
xchg
or
into
pop
inc
sti
in
nop
pop
rorb
sub
sbb
dec
test
mov
push
lods
les
scas
loop
cs
test
ret
inc
outsl
add
insb
std
pop
mov
pop
je,pn
insl
push
push
mov
sbb
leave
pushf
ja
sub
iret
mov
sub
inc
push
out
pusha
pop
jp
aas
mov
repz
out
push
xor
cld
lods
daa
lahf
mov
loopne
addr16
xchg
fstl
clc
je
xor
adc
sub
les
cmp
lock
pop
add
adc
sub
in
xor
mov
mov
loop
or
pop
movsl
sub
jnp
push
aaa
push
lods
pop
sub
xor
imul
xchg
stos
cmp
dec
fidivrs
lretw
mov
xor
mov
std
sub
fldl
lret
sbb
shlb
js
inc
pusha
pop
push
xor
dec
lcall
lret
xor
data16
jl
stc
cmp
ljmp
rorb
sbb
cltd
lcall
rorb
pop
add
lcall
push
inc
cmc
cmp
ljmp
mov
and
pop
sbb
jne
pop
dec
jg
filds
out
push
cmp
sbb
fbstp
mov
mov
out
das
adc
push
jne
stos
mov
movsl
push
xor
cli
sbb
mov
stos
push
out
push
mov
jl
mov
push
inc
or
std
aas
fiaddl
popf
adc
in
and
loopne
or
jne
insl
shl
jbe
mov
cmc
push
and
insb
jecxz
fwait
movsb
je
jbe
cmp
cld
jb
xchg
popf
pop
test
fisttps
fisubl
inc
rorb
jge,pn
inc
cmp
dec
mov
add
ffreep
mov
dec
outsl
imul
mov
fcmovnu
sbb
int
mov
int
fiaddl
mov
pop
int
sbb
in
jmp
fwait
repnz
inc
adc
push
fwait
bound
sub
xchg
out
fcoml
mov
adc
adc
fldcw
enter
push
pushf
rorl
inc
test
int
inc
mov
adc
cmc
push
enter
hlt
cs
lcall
push
ss
cmp
pop
sub
sahf
dec
cld
mov
add
insl
inc
sti
cmp
sbb
int3
std
pop
dec
jbe
call
push
test
cmpsl
icebp
aad
mov
push
popf
bndldx
outsl
jmp
test
ret
jne
fld
int
scas
xchg
jecxz
fcmove
and
outsb
dec
and
adc
mov
push
scas
jmp
inc
and
test
lods
repz
daa
sbbl
aam
clc
or
jnp
sbb
inc
or
scas
or
out
scas
or
adc
aaa
xor
mov
stc
sub
gs
sbb
andb
addl
push
imul
cmpsb
pop
scas
lret
mov
fldcw
cli
and
xorb
and
testl
xchg
ret
out
sub
popa
or
mov
lret
cmp
jns
hlt
mov
loope
jg
out
pop
inc
add
dec
adc
jbe
jae
mov
jnp
pushf
out
arpl
dec
and
sub
divb
jne
xchg
bnd
mov
xor
sub
in
mov
arpl
das
pop
or
mov
push
add
add
call
mov
pop
inc
ljmp
inc
inc
mov
fisubrl
adc
pop
ja
loopne
mov
jmp
inc
push
jbe
test
enter
pop
hlt
dec
dec
fdivr
and
lods
push
mov
fcomip
mov
rcr
xor
dec
repz
cld
gs
sbb
sub
mov
sbb
fwait
pop
sbb
decb
nop
mov
leave
sbb
loope
test
pop
test
push
xchg
jmp
mov
aam
movsb
cmp
loop
add
mov
pop
or
icebp
fsubrs
pop
popa
stos
pusha
push
xchg
sub
xor
addl
enter
and
jbe
mov
jb
loopne
ret
push
push
out
aas
add
jle
or
repnz
mov
pop
fsts
mov
cmpsb
xor
jbe
clc
std
outsl
lret
sti
into
aad
jno
fwait
aaa
lock
and
cmp
mov
dec
mov
adc
mov
sarl
sbbb
sub
lock
or
aas
jl
sbb
xor
movsb
xchg
insb
lahf
cmp
or
imul
movsb
fistpll
test
nop
add
lods
test
dec
cwtl
fstl
mov
jp
push
push
testb
and
xchg
lock
cwtl
add
ss
sbb
into
cmp
cmp
clc
inc
scas
ss
cmp
mov
test
mov
dec
insl
push
inc
mov
mov
push
pop
xchg
and
je
adc
rorl
mov
rorb
fstps
outsb
pop
mov
mov
jmp
jno
or
sbb
jmp
pop
rolb
inc
adc
fldcw
sub
repnz
pop
fcom
mov
push
shl
mov
jmp
add
sbb
lret
sti
jmp
and
adc
mov
aad
bound
fisttpll
or
mov
sub
mov
sbb
add
sub
jmp
popf
or
xlat
dec
pop
scas
test
repnz
adcl
add
lea
pop
aam
adc
pop
pop
lret
mov
lds
jcxz
sub
shlb
js
sbb
cltd
xchg
push
jbe
pop
addr16
add
cmc
pop
add
pop
jns
mov
mov
mov
leave
push
mov
psubq
sub
jo
ljmp
pusha
ficomps
sub
loop
cli
and
sbb
push
int3
sti
aas
outsl
or
pop
inc
mov
adc
jg
pop
jp
bnd
cltd
ffreep
inc
and
push
cmp
cld
adc
ljmp
into
push
outsb
iret
lea
imul
lahf
pop
xchg
mov
aas
push
insb
mov
orl
push
inc
xlat
sub
inc
aaa
jno
sub
bswap
or
out
rolb
test
mov
jns
xor
lret
movsl
inc
pop
mov
pop
cmpb
shlb
stos
iret
mov
push
mov
inc
cmp
test
imul
test
mov
bound
mov
out
ljmp
shl
aam
adc
dec
loop
add
sub
cld
loope
push
out
xchg
sub
int
in
filds
jae
cltd
or
pop
xor
outsb
mov
pop
data16
test
mov
jl
inc
inc
dec
cwtl
pushf
arpl
out
mov
icebp
cld
xchg
mov
popf
jge
inc
xor
out
xchg
iret
cmpsb
mov
insl
xchg
cmp
adc
fwait
mov
out
or
pop
fs
jbe
loop
filds
inc
imul
jnp
pop
xlat
cmp
dec
adc
shlb
call
mov
out
std
cltd
test
add
imul
mov
out
addr16
jge
scas
or
clc
xchg
push
dec
inc
cs
sbb
push
mov
test
loopne
inc
cwtl
or
aam
xchg
jae
js
inc
mov
and
in
aaa
push
or
mov
jmp
dec
push
pop
jbe
push
inc
push
js
pushf
mov
cmp
ret
mov
and
ljmp
gs
out
cmp
movb
cmp
test
rclb
or
adc
faddl
push
pop
test
pop
or
sub
aaa
mov
xchg
lds
addr16
jg
jecxz
jnp
sahf
daa
push
lahf
xchg
repnz
scas
adc
adc
bsr
stos
loop
data16
mov
jl
pop
stos
ret
and
ds
or
sysexit
addr16
xchg
mov
lcall
mov
lret
add
pop
call
pop
leave
adc
popf
xlat
je
mov
xor
mov
xor
pop
ret
and
in
rolb
int
jmp
sub
xor
fs
xchg
repz
push
xchg
ret
outsb
lock
in
scas
push
ficoms
popa
clc
xchg
out
cltd
loope
mov
jmp
adc
sub
jb
ja
ficoms
lret
sbb
mov
sbb
out
push
push
mov
lret
sub
lret
pop
cs
jg
inc
and
inc
pop
pop
mov
mov
push
pop
mov
mov
ljmp
adc
int
push
test
imul
add
sub
adc
fdivs
xor
int
jp
sbb
out
outsb
or
mov
sub
pop
sbb
out
xchg
mov
sar
add
testl
or
movsl
push
mov
add
cmp
insb
or
outsl
nop
or
addb
orb
scas
dec
aaa
rcrb
rorl
stos
sahf
mov
jp
jns
adc
sbb
lret
clc
cmp
jmp
data16
aaa
aad
cmp
loopne
aam
cwtl
xor
jns
roll
aas
cs
cld
inc
inc
test
add
adc
mov
int
movsb
out
pop
pop
jmp
xor
rol
ret
insl
fcoml
outsl
loopne
push
dec
insl
lock
jo
mov
pop
mov
ds
pop
int
loope
loop
cmp
mov
in
fnstenv
pop
je
xchg
ds
add
cmpsl
jb,pn
xor
sub
les
outsb
outsb
mov
xor
or
nop
mov
push
sbb
mov
dec
shl
test
mov
mov
mov
jbe
mov
cmpsl
in
or
ja
add
pop
int3
pushf
mov
inc
aaa
and
pusha
cwtl
sbb
dec
mov
ja
testl
test
xchg
lea
cwtl
and
push
mov
mov
sbb
adc
das
or
xchg
fdivrs
xchg
dec
mov
int
mov
out
push
sbb
pop
xchg
jp
jns
in
sub
pusha
dec
cmpsl
out
jne
or
sub
sub
daa
cmp
in
cmp
shrb
jo
cltd
cltd
mov
lock
adcl
jg
mov
pop
fisttpll
movsb
les
repz
shll
sbb
arpl
data16
pop
add
fildl
rclb
aam
mov
aam
pop
mov
push
or
xor
pop
mov
filds
sub
jmp
cmp
mov
and
push
cvttps2pi
push
push
movsl
sub
lea
pop
jl
sub
into
adc
arpl
xor
dec
or
pop
lcall
ret
pop
popf
or
jp
daa
mov
js
and
aad
loope
jae
sar
push
in
lret
sub
inc
sbb
add
cmp
movsl
add
sahf
out
adc
je
stos
mov
xor
scas
ja
cmpsb
shll
inc
adc
ret
sti
test
mov
dec
aad
mov
xchg
and
call
loop
mov
out
xchg
ja
sbbb
jmp
cwtl
jle
mov
aas
or
adc
fnsave
pop
test
xchg
xor
cmp
push
jg
cmp
xor
imul
xor
ret
push
push
imul
xor
dec
inc
adc
adc
sub
pop
addr16
and
jl
sar
xor
les
mov
lea
bound
mov
insl
jo
loope
sub
rorl
rcl
dec
testl
pop
pop
cmpsl
pop
inc
pop
test
sub
push
pop
cmp
test
push
and
cmp
int
add
jb
nop
lods
divb
lock
imul
imul
sbbb
cmc
sub
into
in
xchg
sbb
mov
std
xchg
bswap
jmp
leave
add
xchg
out
inc
inc
out
test
addr16
xchg
popf
add
pushf
in
xlat
aaa
mov
xchg
push
js
arpl
cmc
aam
sub
push
andl
mov
sbb
push
push
add
pop
inc
outsl
jmp
pushf
iret
loopne
add
push
pop
jp
out
xor
and
and
xchg
loope
out
std
adc
rol
mov
mov
inc
xchg
mov
outsl
mov
push
push
arpl
mov
sbb
adc
pop
stos
or
das
pushl
and
arpl
mov
arpl
sahf
negl
repnz
scas
add
idivb
in
test
xchg
test
inc
pop
rep
mov
sbb
cmp
loop
bound
xor
fsubl
jecxz
fistl
dec
push
jle
mov
outsb
add
sub
lods
outsl
dec
mov
mov
fwait
inc
gs
std
xor
incb
insb
popf
sahf
push
xlat
jl
push
cmc
icebp
ret
pop
daa
popf
cmp
mov
sub
in
fwait
xor
clc
lds
push
cmp
sbb
popa
lods
stos
mov
sbb
hlt
inc
mov
dec
cmp
sti
sarl
cwtl
test
popa
or
xor
sbb
imulb
cvtpi2ps
hlt
dec
xchg
cmpsl
jns
outsl
out
fnsave
leave
out
clc
divb
pop
sbb
dec
fisubs
repnz
filds
jbe
push
sbb
pop
negl
sahf
out
push
adc
add
pusha
stc
push
adc
inc
inc
out
jle
aad
aaa
adc
testb
or
push
and
jge
stos
out
in
ja
imull
mov
mov
xor
dec
add
pop
leave
clc
add
inc
lret
sbb
clc
loopne
cmovl
dec
mov
scas
fs
aam
jb
jbe
jmp
test
xchg
in
es
aad
mov
jne
out
jg
fs
or
ret
xlat
test
mov
xchg
xchg
aas
cmpsb
cwtl
jnp
imul
and
inc
pop
jp
adc
lods
jp
test
ljmp
dec
or
sub
add
call
adc
and
dec
pop
pop
shlb
mov
jae
cmp
loop
adc
push
leave
aas
addr16
sub
cmpsb
inc
jae
ja
adcl
mov
mov
inc
cmp
dec
cmp
icebp
sbb
das
leave
xor
push
clc
pusha
rol
into
pop
push
xchg
adc
repz
xor
cmp
in
dec
mov
push
fucomi
stos
stos
int3
xor
xchg
mov
xchg
inc
push
inc
icebp
popf
dec
pop
adc
inc
pushf
push
and
push
push
mov
push
sub
es
mov
loope
scas
jne
movsb
jmp
and
test
mov
or
cmc
dec
loope
add
mov
stos
xchg
andb
cmp
add
dec
std
xor
fisttpll
loopne
test
xchg
fadds
hlt
pusha
and
fstl
adc
add
ljmp
pop
cmpb
in
cltd
jmp
push
out
fcomi
and
test
xchg
pop
sarl
add
dec
divb
mov
inc
scas
jns
shlb
inc
aam
or
cmc
in
mov
dec
lcall
mov
in
daa
mov
xor
lods
outsl
jmp
xor
pushf
dec
iret
mov
aam
inc
pop
or
and
add
fs
jmp
xchg
pop
aad
cld
sbb
fs
roll
adc
lret
sbb
aaa
jne
cmp
les
mov
out
ds
enter
fsubrl
and
jb
aad
cmp
mulb
push
in
push
mov
inc
mov
cmp
loope
mov
rcrl
daa
or
xor
jmp
lods
mov
cmpsl
add
mov
inc
stc
inc
push
shrb
xchg
adc
jge
ret
jnp
lret
fdecstp
add
sub
icebp
ljmp
or
ficompl
adc
fisttpll
xchg
in
idivb
dec
out
movsl
ja,pt
mov
sti
stc
push
scas
cmp
in
fsubrs
lds
pushf
std
pop
add
iret
xor
arpl
cmp
std
mov
testl
sahf
jmp
jae
jne
sub
jb
add
adc
jecxz
invd
shlb
jp
jle
sub
mov
popf
pop
ret
push
push
cmp
mov
pop
xor
dec
xchg
sub
icebp
ljmp
and
cld
orl
jno
xor
cmpsb
mov
les
and
mov
pop
fucomi
jne
mov
mov
das
mov
cmp
cmpsl
addr16
dec
inc
and
imul
outsl
jbe,pt
inc
in
xchg
xchg
test
stc
fmull
leave
rorl
xor
cmpsb
in
cld
push
fcompl
outsb
add
cmp
movsb
sbb
xchg
fdivrl
mov
cltd
js
sti
mov
mov
mov
cmp
popf
pop
pusha
mov
mov
lahf
cmc
mov
jbe
mov
mov
add
mov
fst
imul
add
dec
repz
aaa
pop
cmp
or
xchg
push
push
in
pop
pushf
lods
push
and
add
cmp
dec
xchg
or
dec
fadds
cmp
dec
sbb
loopne
pusha
adc
xor
jnp
popa
fcomp
inc
jmp
add
push
lods
inc
sar
jae
ror
push
jns
or
into
add
das
ljmp
in
repz
sti
mulb
jp
mov
mov
outsl
sahf
imul
cld
mov
sarb
sub
and
xchg
jb,pn
stos
sub
repz
outsl
jg
in
in
jle
mov
adcl
push
dec
cli
jp
insb
mov
mov
mov
pop
outsl
push
enter
mov
out
xor
lcall
push
push
add
loop
add
ret
cmpsb
cmp
push
aas
mov
mov
fsubrs
std
sub
test
push
add
pop
and
jl
fxam
daa
arpl
icebp
hlt
sbb
push
push
jae
out
and
xor
stos
adc
push
inc
xchg
mov
test
repz
pop
mov
out
jmp
inc
sahf
jnp
sub
cmp
pop
add
shr
mov
pop
rolb
mov
test
clc
flds
push
push
or
iret
pop
lret
ja
call
lods
sti
fsts
scas
ja
mov
lods
stos
pop
movsl
imul
dec
cld
dec
dec
sbb
pop
add
roll
lret
insb
xchg
inc
test
ljmp
dec
xchg
dec
outsb
mov
mov
fnstsw
dec
scas
insl
and
cwtl
fs
in
sahf
mov
xchg
mov
sti
push
iret
and
fnstcw
mulb
dec
cmp
arpl
jne
push
loop
dec
addr16
add
jbe
xchg
xchg
and
rclb
mov
pop
sub
adc
hlt
fcmovbe
cwtl
jbe
gs
rolb
mov
push
mov
scas
mov
inc
xor
push
or
arpl
mov
pop
or
fildll
mov
mov
test
mov
xor
lds
inc
cmpsb
mov
into
jne
dec
out
cmp
ds
jmp
jb
cmp
cmp
cmp
cmp
xchg
mov
cmpsl
out
push
pop
inc
mov
insl
mov
in
xchg
sub
aas
xor
or
sbb
int3
and
pop
sub
ja
insl
aaa
out
fsubs
cltd
push
outsb
sbb
mov
les
jno
push
pop
pop
arpl
repz
and
adc
and
inc
loopne
ja
sbb
mov
mov
fstl
mov
popa
es
mov
xchg
jnp
push
dec
cmc
push
sub
cmpsb
rcll
xchg
cmpsb
mov
mov
or
pop
nop
stos
lretw
push
inc
call
mov
jg
das
xor
lcall
jl
ret
xor
or
fwait
add
xchg
jno
ds
mov
aad
pop
add
xor
lock
cmp
pcmpgtd
leave
shll
mov
mov
into
clc
inc
clc
fmuls
ret
sub
jo
pop
mov
inc
rcrb
xchg
mov
push
jp
fwait
movsb
xchg
ds
mov
cmc
add
push
cmovne
icebp
es
insl
hlt
xchg
int3
int
inc
sub
popf
into
sub
stc
pushf
test
stc
mov
sub
push
pushf
popa
cmc
sbbb
lds
xchg
lahf
ret
int3
push
jl
mov
jne
fbstp
mov
pushf
xchg
or
jno
mov
jne
data16
jbe
dec
add
mov
mov
scas
xchg
jb
inc
jns
aad
pop
push
insb
add
cmpl
pop
sub
jecxz
push
filds
or
xor
lods
loope
lock
mov
loope
push
stos
imul
stos
adc
iret
rol
lret
fiadds
aam
inc
sti
fisttps
sqrtps
popa
or
mov
fnstcw
xlat
rorl
mov
insb
movsb
dec
cwtl
adc
fs
sti
jl
stc
ficompl
jecxz
pop
xlat
pop
insl
gs
lahf
test
push
inc
push
add
pop
bound
js
negl
inc
and
testl
push
add
ficomps
add
sub
jp
test
icebp
fbstp
outsl
negb
cwtl
jns
push
sbbb
sub
nop
negl
push
clc
fiaddl
pop
pop
mov
stos
push
add
aad
ret
mov
xchg
movsb
pushf
mov
mov
push
stc
movsl
xor
and
cld
cmc
pop
test
mov
je
sub
adc
adc
jle
cmc
push
outsl
pop
sti
into
loopne
or
or
and
adc
pop
mov
xchg
out
ret
lods
addr16
movsl
push
xchg
das
leave
sub
pop
mov
out
sub
out
into
cwtl
call
cmp
adc
std
mov
int
loope
add
sbb
sub
push
cmpsb
push
popa
xchg
inc
aas
nop
psrld
push
jecxz
xor
sub
xor
inc
mov
adc
cmp
adc
and
push
cmpsb
mov
scas
pop
mov
lahf
sbb
shrl
aam
jp
sti
jb
and
adc
nop
push
pusha
repz
mov
in
mov
or
les
outsl
roll
mov
push
loop
cmp
jge
pop
xchg
xlat
or
pop
es
jg
cld
lds
adcl
pop
push
enter
aas
cmp
fldl
jg
mov
mov
sbb
pop
push
les
sub
cli
repz
lods
mov
push
test
fdivrl
lret
out
xorl
xlat
jb
es
push
data16
or
mov
in
insl
shrb
lock
testl
mov
test
iret
sti
mov
movsl
ja
loop
inc
cmp
jne
inc
dec
jno
ret
rcll
decl
push
push
cmp
add
push
lahf
dec
mov
mov
jne
cmp
test
push
adc
xchg
mov
ret
sbb
std
decb
es
add
jecxz
mov
cld
pop
out
mov
push
sahf
pusha
sbb
pop
inc
add
add
lret
xor
sysret
xlat
push
std
test
sub
mov
jp
jns
push
sbb
lock
lcall
scas
movsb
dec
sahf
cmp
inc
repz
xchg
push
pop
mov
cltd
or
roll
add
les
scas
aas
iret
jge
mov
int3
mov
mov
push
neg
dec
mov
push
fwait
fwait
enter
sti
xlat
mov
cmpsb
and
dec
ljmp
xchg
cmpsl
cs
pusha
sahf
pop
or
pop
lretw
repz
mov
loope
xchg
int3
cmpsl
inc
add
push
or
loope
mov
shr
bound
gs
and
pop
add
mov
insl
ret
cltd
cmp
repz
dec
je
test
push
mov
adc
jno
scas
enterw
test
ret
call
faddl
repnz
xchg
push
nop
inc
lcall
js
aam
cmp
out
mov
xor
and
loopne
mov
xor
test
adc
mov
fldt
jl
sub
inc
pop
mov
sbb
inc
nop
lcall
mov
and
cmp
test
insb
jmp
jno
inc
sub
sahf
ljmp
ljmp
cmpsb
push
cmp
push
add
orb
jne
lods
or
sahf
sub
fwait
inc
adc
jno
lret
lret
add
adc
das
mov
ret
lods
mov
loop
imul
das
sub
xchg
das
pop
cmpsb
adcb
mov
mov
imul
mov
xor
jae
or
push
ja
pop
or
stc
jg
jae
pop
adc
ds
adc
dec
jo
les
sahf
cs
in
imul
in
or
sub
cmp
jecxz
cwtl
jnp
adc
jae
outsl
imul
mov
bound
and
sub
inc
adc
pop
and
nop
out
filds
add
jecxz
cmp
add
les
lock
testb
fldl
lock
or
push
fldcw
repz
xchg
sub
xchg
mov
mov
lods
sub
jge
icebp
cld
sub
push
cmp
pop
enter
mov
fisubs
addr16
lods
lcall
inc
jp
lret
inc
jbe
mov
push
push
mov
and
out
xlat
xchg
dec
xor
mov
insl
in
xorl
insb
mov
rcl
pop
push
pop
mov
fs
clc
mov
sub
inc
inc
or
cmpsl
xchg
push
inc
out
gs
and
lahf
ret
push
mov
sub
inc
lods
mov
xor
subl
jg
push
inc
shl
pop
mov
pop
aam
leave
inc
lods
xor
lcall
cmpsb
mov
shll
lret
xchg
and
jne
adc
add
adc
cli
out
inc
in
cmc
pop
stos
add
jg
aaa
dec
fwait
loope
sbb
lahf
shl
pop
int
fistl
and
movsb
ret
icebp
sbb
and
adc
out
xchg
das
sub
pusha
mov
icebp
cmp
rcrb
enter
daa
pop
pop
mov
ret
sbb
pop
mov
pusha
sub
add
dec
mov
xchg
imul
test
outsl
addr16
in
add
cmp
jno
fwait
xchg
lahf
fsubl
cmp
xchg
loop
adc
adc
insb
ljmp
lcall
mov
pop
sub
inc
mov
mov
pop
enter
lret
dec
gs
fcompl
ficompl
ja
mov
hlt
decl
outsl
subl
push
out
add
lds
cmp
xchg
and
ljmp
xchg
pop
pop
jo
pop
lds
mov
jl
push
add
and
push
fsubrl
sbb
sub
mov
inc
in
add
xlat
mov
xor
lock
cmp
mov
xor
pusha
sahf
dec
dec
jne
and
in
imul
lea
sub
js
mov
mov
data16
int3
es
enter
mov
cltd
push
icebp
cmc
mov
mov
mov
xchg
jbe
sbb
or
lahf
ficomps
pop
adc
stos
int
fildl
adc
mov
or
pop
lds
and
and
cwtl
int
sub
popa
enter
adc
test
movb
lret
or
outsb
add
not
gs
inc
das
sbb
jne
mov
mov
mov
movsl
cli
push
or
sub
ja
jo
into
ja
xchg
xor
mov
pop
int
sahf
adc
pop
pop
stc
push
loop
mov
nop
sub
enter
stos
daa
movsb
or
iret
jae
loop
xor
pushf
seto
fiaddl
sbb
mov
inc
push
push
sub
lcall
data16
call
mov
sub
dec
stos
or
pop
cmc
cmp
in
jp
sub
vmovntps
bnd
xchg
jae
pop
add
mov
out
ja
insb
mov
mov
mov
and
jl
fnstsw
das
xor
imul
adc
gs
aam
push
xor
out
mov
xchg
add
pushf
push
lcall
mov
sbb
xor
xchg
jns
rcl
push
fistps
sub
test
add
push
xor
dec
addb
sub
adc
pop
fidivs
or
cmp
lods
or
ds
mov
sub
bnd
es
pusha
outsl
push
push
jnp
sbb
fimull
pop
mov
test
int3
ret
cmp
push
sbb
ja
jnp
sub
sub
and
mov
mov
cmpsb
dec
outsb
jo
push
jno
jl
xchg
fwait
sti
int
jmp
xchg
adc
sub
push
pop
call
in
testl
loope
fidivrs
xlat
push
add
or
test
fs
leave
in
and
jne
inc
jnp
mov
jnp
pop
mov
int3
jg
dec
push
cmp
and
add
sar
cmc
loop
lea
sub
dec
cltd
insl
ja
rcrb
out
popl
inc
in
fucom
pop
push
pop
adcl
pop
pop
add
jp
xor
orl
pusha
inc
inc
xchg
mov
roll
jl
dec
outsl
pop
add
iret
cmpsb
out
push
adc
dec
jmp
jl
mov
xchg
jnp
lret
ret
inc
call
outsb
int
inc
adc
jmp
sbb
sti
shll
icebp
mov
and
add
jo
push
cmpsl
and
stc
xchg
les
pop
loope
sbb
out
mov
mov
popa
inc
mov
xchg
adc
mov
aaa
push
mov
push
mov
jecxz
mov
mov
lea
lret
fstp
or
insl
test
sub
jge
pop
xchg
inc
cmpl
sbbl
jg
inc
fidivl
sbb
inc
outsb
sbb
mov
sub
jae
or
loopne
out
jae
push
xchg
cs
fbstp
jmp
shl
shr
cmc
inc
xor
shll
scas
clc
hlt
pop
and
or
push
int3
dec
push
push
data16
cwtl
or
mov
test
das
fs
aaa
cmp
mov
pop
sbb
cmpsl
test
push
cmpsl
xchg
xor
xor
dec
push
rorb
mov
cmpsl
xchg
notl
sbb
pushf
ljmp
outsl
push
push
xor
lahf
lea
adc
imul
iret
dec
cmp
insl
inc
hlt
out
out
mov
lret
scas
aas
push
pop
bound
inc
pop
jp
neg
popf
int3
insb
jg
lods
and
xchg
cli
mov
or
or
notl
out
fdivs
inc
arpl
and
hlt
std
adc
push
sbb
cmp
xchg
addb
push
ja
int
mov
gs
out
mov
lret
popa
cwtl
mov
xor
lret
pop
fs
sti
add
pusha
sbb
enter
mov
dec
out
pop
jae
mov
or
pop
mov
lock
dec
jmpw
outsl
popf
test
xchg
hlt
sbb
notl
xor
sahf
call
xor
jp
arpl
add
cmp
cmp
push
and
jae
sbb
mov
lcall
dec
jb
jne
lds
mov
dec
out
daa
push
int3
sbb
mov
je
stos
mov
and
cmp
cmpsl
sub
enter
lods
inc
addb
in
pop
das
ja
lcall
mov
lret
dec
cltd
dec
stos
stc
mov
mov
add
in
dec
mov
out
push
adc
enter
lcall
shlb
add
add
sar
repnz
iret
and
dec
outsl
sub
xchg
xor
daa
lret
mov
push
lret
inc
popa
xchg
lret
cld
mov
test
enter
push
add
into
xor
les
cmpsb
hlt
clc
mov
sbb
fiaddl
bound
adc
jmp
jp
scas
lock
idiv
cmp
cld
enter
and
jne
pop
daa
notl
push
addr16
add
jnp
nop
ret
lret
xor
insb
jmp
lahf
sbbl
mov
mov
xchg
sbb
in
sub
sbb
lret
push
jge
add
sub
call
daa
in
lea
ret
out
jno
test
jp
leave
adc
sub
pop
dec
push
rolb
or
bound
outsb
push
cli
adcb
xor
lock
pop
xor
daa
iret
mov
jb
xor
js
mov
jle
fcom
mov
xlat
inc
mov
cmpsb
dec
jecxz
mov
hlt
jae
xor
cmp
mov
adc
pusha
clc
inc
lahf
xor
iret
sahf
int3
aaa
sbb
aad
iret
cmp
push
call
rolb
xchg
scas
mov
xchg
mov
out
jae
pop
stos
pop
push
sbb
je
cmpsb
add
and
add
jne
inc
xchg
add
pop
push
sub
mov
push
cmp
push
roll
add
jl
pop
pushf
loope
adc
inc
enter
cmp
sub
pop
call
inc
pop
adc
test
push
pusha
push
or
in
adc
and
push
mov
scas
testb
ss
jmp
aam
stos
popa
fld
les
or
mov
jle
sub
inc
in
popa
cmp
sbb
fimuls
lods
jno
jb
movsb
jge
int
mov
inc
jns
sbb
jae
push
xorl
scas
hlt
mov
sub
jmp
xchg
cmp
xor
ljmp
mov
addl
cmc
mov
xor
stos
inc
sub
popa
cmp
or
adc
jecxz
or
jbe
pop
mov
test
ja
add
jno
push
mov
cltd
or
pop
inc
inc
cmp
popa
sbb
sbb
aas
push
arpl
mov
dec
push
mov
mov
sub
out
sbb
loope
lret
test
sbb
push
out
jge
in
scas
adc
fmuls
cmp
pop
test
push
add
aam
out
movsl
outsb
sbb
jge
mov
and
pop
jo
mov
in
pop
sub
shlb
and
jl
fisubrs
adc
pop
test
mov
mov
fs
sbb
dec
inc
cmpsl
mov
int3
push
imul
test
and
inc
add
sarb
out
inc
arpl
jle
ficompl
sarl
jp
popa
ret
adc
or
mov
stos
lcall
pop
push
sbb
xor
adc
pop
sbb
and
cmp
fcoml
or
cmp
sub
test
mov
adc
adc
int
outsb
je,pt
fidivrl
xchg
xlat
andb
sub
jo
or
mov
jecxz
pop
aaa
rcrl
xchg
cmpsb
mov
sti
mov
dec
fs
inc
cmp
outsl
insl
imul
pop
adc
les
pushw
insl
dec
stos
lret
dec
jl
imul
mov
wbinvd
adc
jle
out
push
int
mov
or
roll
jmp
pop
sub
or
in
int
push
push
test
inc
lds
adcl
fiaddl
inc
pop
test
daa
push
push
popf
or
inc
xlat
push
cmp
xor
call
scas
pop
imul
fmuls
sub
lret
xchg
or
or
popa
frstor
xorb
loop
jne
arpl
cmp
ficoml
or
adc
jecxz
rclb
mov
mov
push
icebp
scas
mov
sub
and
cwtl
xchg
cld
lea
movsl
rolb
mov
std
shlb
inc
dec
popa
cmp
aaa
adc
jl
adc
jae
jmp
jb
adc
movsb
mov
dec
ds
mov
inc
jnp
adc
and
mov
sub
mov
cs
dec
out
stc
push
dec
dec
mov
cmp
jp
dec
stc
scas
icebp
mov
pop
xchg
adc
pushf
ret
loope
stc
cwtl
test
cmpsl
push
pop
hlt
add
das
in
arpl
test
cmpsl
lahf
sbb
mov
sahf
mov
and
movb
mov
lock
sbb
jno
xchg
cwtl
cmpsb
adc
xchg
push
sbb
stc
mov
fs
xchg
faddl
scas
xlat
int
jecxz
testb
jmp
pop
inc
lcall
sti
enter
icebp
or
pop
aam
stc
movsl
clc
addr16
and
dec
hlt
xlat
mov
mov
adc
out
pop
repz
pushf
stos
mov
jg
xor
push
aaa
sti
inc
push
sbb
push
fsubr
testl
pop
lock
ja
mov
adc
or
cmp
in
ret
aam
loop
or
inc
aam
lock
fnsave
cmpl
mov
imul
arpl
jp
jbe
pushf
sbb
mov
inc
sbbb
test
shlb
and
dec
xor
inc
xlat
lock
aaa
pop
or
xor
pop
lds
sti
sub
mov
arpl
es
sbb
mov
jmp
push
xor
cmp
es
shrb
adc
inc
mov
call
call
inc
enter
in
dec
jae
sbb
arpl
mov
and
or
add
int3
lods
inc
mov
xchg
lea
stos
add
add
mov
loop
icebp
mov
loopne
pop
adc
mov
push
inc
and
popa
sub
dec
dec
sub
cmpsl
dec
mov
cmp
xor
imul
les
cmpsl
mov
fcos
inc
insl
or
fildl
sub
enter
aas
js
xchg
mov
and
cli
fstl
neg
test
adc
sub
sbb
daa
hlt
pop
in
jmp
pop
cmp
pop
push
mov
mov
or
jmpw
push
pop
aad
loop
mov
dec
mov
xchg
or
xchg
stc
test
cs
clc
push
stos
push
mov
test
subb
jp
lahf
dec
or
push
adc
test
js
orl
add
adc
movsl
cmp
aad
fildl
ret
inc
bound
xchg
nop
int3
imul
cmp
xchg
push
enter
nop
cwtl
or
icebp
pop
push
repnz
xchg
jle
jge
sbb
sub
add
xchg
mov
sbb
cld
push
movb
lcall
clc
in
lret
fnsetpm(287
fwait
loop
in
jecxz
jmp
popa
fcoml
btc
or
ja
push
loop
inc
cmp
lcall
mov
ja
and
lret
mov
imul
ljmp
push
sbb
push
popa
movsl
add
or
stos
and
data16
push
out
sub
pop
in
adc
aas
out
ljmp
cmpb
pop
rcl
mov
sub
gs
or
add
test
lahf
les
push
add
sbbb
and
push
sbb
jmp
inc
lcall
mov
daa
stos
rcl
add
or
sbb
add
or
es
xchg
mov
xor
xchg
in
das
daa
jo
sub
cwtl
loop
jp
mov
or
ficompl
ret
jbe
in
push
adc
mov
mov
lcall
insl
mov
cmp
dec
dec
fistps
lret
lods
xor
ja
adc
sub
andl
xor
inc
sbb
jne
mov
lods
mov
loope
aam
imul
pop
xor
cmp
pusha
inc
jmp
inc
xchg
insl
test
mov
mov
mov
iret
xor
dec
sbb
lret
adc
mov
push
shl
inc
ja
aaa
in
aad
iret
push
out
sahf
pop
fs
mov
or
stos
in
push
sbb
push
mov
mov
aaa
rcl
arpl
orl
filds
xor
scas
je
inc
mov
sbb
mov
mov
dec
or
scas
out
ljmp
call
sub
mov
pop
inc
scas
aas
outsl
mov
inc
orb
neg
jg
mov
pushl
xchg
popf
sub
rolb
or
test
sti
pop
dec
pop
pop
dec
stos
add
out
addb
sub
xor
clc
push
testb
xchg
xchg
sub
cmpsb
or
xchg
sbb
jecxz
sti
fistl
mov
push
ljmp
fidivrl
je
ds
xchg
out
ss
jb
adc
aad
aaa
into
jle
orl
adc
imul
fs
std
dec
add
ljmp
cmc
mov
rolb
inc
or
cs
fimull
sub
stc
sti
jns
mov
jno
pop
sbb
sub
push
cld
pop
mov
fcompl
into
aad
mov
iret
fadd
ret
mov
int
out
inc
adc
cli
sbb
push
fs
add
pop
sti
out
stc
dec
xchg
pushf
xchg
jne
push
flds
jecxz
lret
xor
cli
adcl
arpl
repnz
xchg
cmp
jns
mov
outsb
push
arpl
or
rclb
adc
mov
mov
mov
cld
call
lcall
scas
movsl
call
int
mov
std
or
and
xor
jg
fstps
cmp
pop
loope
outsb
cmp
testl
jl
and
jecxz
add
mov
cmp
push
sbbl
sub
jae
jmp
sbb
jno
mov
mov
bound
movl
push
aaa
mov
dec
iret
sub
or
ror
xor
stos
in
xor
jecxz
lcall
das
jl
jle
clc
push
and
xchg
sub
or
in
ja
xchg
cltd
xor
push
shlb
repnz
int
xchg
mov
lahf
ret
jnp
mov
test
data16
mov
popf
xchg
and
fxtract
or
mov
mov
mov
lcall
inc
push
sub
mov
mov
xchg
arpl
xchg
insl
xchg
sub
loop
mov
loope
fsubrp
dec
xchg
sub
aad
xchg
push
jbe
add
jo
inc
icebp
cld
popa
outsl
lcall
fs
push
outsb
sbbl
mov
leave
fwait
dec
push
pop
out
frstpm(287
pop
ljmp
add
out
or
jo
jo
call
sbb
out
in
jnp
cmpsb
mov
xor
mov
enter
outsb
cmc
shlb
and
loope
xchg
mov
jno
sub
sub
dec
pop
cmp
mov
push
add
or
pop
inc
cmpsb
cmp
sub
add
sub
mov
pop
hlt
gs
push
pop
std
leave
or
clc
dec
xor
ja
mov
push
jnp
jnp
cmp
stos
ret
xchg
jns
inc
jo
nop
and
movsl
jns
js
pop
loopne
cli
scas
in
in
lcall
cmpsb
ljmp
xchg
mov
fucomip
mov
sbbl
sbb
xchg
cmp
sbb
lods
aaa
push
or
rcr
sub
jae
movsl
cmp
mov
push
add
std
sub
pop
jle
xor
movb
in
movsl
dec
lea
iret
fldenv
dec
adc
data16
xor
repnz
mov
or
psubq
xchg
adc
push
and
subl
pop
cmc
adcl
push
ljmp
lea
mov
sarb
int3
outsl
sub
jp
dec
push
adc
fidivrs
pop
xchg
mov
cmpsb
les
inc
xor
lret
pop
or
inc
sahf
and
sub
pop
imul
mov
leave
test
add
adc
shl
inc
inc
cmp
out
ljmp
lods
in
push
cltd
mov
sub
fs
mov
inc
sbb
mov
sti
stc
cmp
ja
subb
jb
hlt
pop
repnz
mov
mov
adc
or
push
jne
mov
mov
xor
imul
jae
xchg
jbe
mov
lret
sub
incl
cmpsb
loopne
xchg
jle
add
or
ljmp
test
incl
push
pop
cmp
push
ja
push
bound
dec
cmpsl
push
int3
shrl
lret
adc
jge
pop
repz
repz
neg
mov
inc
test
outsb
or
mov
test
xor
js
add
xor
cmp
inc
cmc
pushf
mov
xchg
mov
xchg
sbb
xor
gs
mov
mov
pop
test
xchg
sub
pop
std
or
jno
xlat
or
jno
int
stos
test
mov
mov
fsts
rolb
iret
test
fisubl
xor
scas
fwait
push
mov
aaa
adc
ficoml
fdiv
les
pop
fistl
fwait
lods
adc
imul
fwait
jle
push
call
loop
xor
mov
call
mov
test
mov
dec
mov
jae
cmp
movl
or
dec
inc
add
clc
test
nop
push
pop
lret
jb
js
ds
fstps
sub
fsubr
or
mov
imul
add
out
xor
repnz
add
sbb
adcb
sub
sbb
outsb
lods
cmp
arpl
mov
mov
test
inc
jo
add
push
mov
adc
cmp
lcall
mov
jp
ret
push
jecxz
adc
or
xchg
and
fistl
mov
adc
shr
sub
xchg
insb
les
lds
pop
xlat
mov
jb
in
adc
cmp
dec
push
mov
aas
push
in
and
mov
pop
out
jmp
sbb
mov
and
fcomi
pop
push
lret
rcr
mov
pop
dec
adc
dec
cmpb
loope
int
xor
mov
mov
je
dec
clc
orl
adc
pusha
pop
imul
cltd
gs
cltd
shl
fnsave
fisubl
sub
call
jl
mov
cmp
xchg
mov
adc
not
jne
jp
mov
pushf
dec
not
dec
fisttpll
pop
mov
fdiv
jae
adc
push
and
jno
pop
xor
ja
xchg
out
mov
adc
or
add
pop
pushf
xor
mov
pop
aas
test
ja
mov
fstpl
and
lcall
test
shrl
add
jmp
ret
mov
sti
pop
aas
xlat
sbbb
sarb
pop
test
lret
adc
dec
gs
enter
push
jb
mov
icebp
mov
dec
lock
and
pop
out
imul
xchg
insl
jae
in
sbb
out
notb
int
or
cmpsb
arpl
mov
pop
mov
mov
pop
dec
js
pushf
sti
xor
shrb
pop
movsl
xor
test
mov
mov
mov
leave
mov
xchg
mov
xorb
inc
mov
jbe
and
push
push
cmp
outsl
ret
dec
arpl
addl
pushf
or
and
dec
adc
mov
lret
dec
rcr
cmpsl
mov
test
sarb
or
movsl
push
sub
fstpl
orb
xchg
arpl
push
xchg
jne
call
call
in
gs
push
xlat
jo
sub
stos
xor
cmc
ucomiss
int
cmp
ljmp
jns
cs
mov
push
push
out
addr16
shlb
push
adc
iret
enter
xchg
inc
jecxz
add
push
jne
popf
adc
pushf
insl
jmp
stos
inc
es
inc
mov
or
xor
test
pop
into
sbb
xchg
dec
mov
test
mov
jg
testl
loopne
push
mov
mov
test
cmp
out
mov
or
add
stos
add
add
xchg
fsubrl
jns
mov
inc
loop
push
or
push
sub
jo
mov
in
mov
dec
lock
in
in
xor
pop
inc
out
cmc
jne
push
inc
and
sbb
cmc
fcmovnb
mov
add
movswl
in
pop
mov
adc
lret
mov
adc
rcrl
fsubs
inc
jmp
jmp
sbb
sbb
jns
iret
scas
divps
and
sbbl
mov
mov
jle
out
lret
cwtl
xor
iret
push
insl
mov
mov
push
mov
adc
pop
xchg
rcrl
out
inc
or
and
add
inc
jns
adc
cmc
mov
jne
fmuls
adc
dec
xor
cmp
jo
clc
jge
mov
adc
xchg
mov
dec
lret
inc
xchg
lcall
cs
and
scas
mov
loopne
dec
mov
aad
stos
clc
push
jmp
xchg
cmp
or
aas
aas
or
stos
ret
rol
int
mov
mov
xchg
jne
lods
ficompl
adc
mov
cmp
mov
and
insl
mov
pop
rorb
xchg
lock
and
mov
out
push
mov
into
stos
sar
mov
inc
lods
cmpsl
jno
test
and
or
sub
push
push
filds
sub
and
pop
push
fstpt
out
dec
repz
inc
push
cmp
outsl
lods
xchg
adc
mov
ja
or
push
test
cld
lods
test
and
push
addb
pushf
ja
mov
lods
mov
pop
dec
dec
mov
push
push
sub
push
push
cmpsl
rol
aaa
into
fdivs
jmp
mov
push
out
movsl
fs
mov
int
and
flds
pop
push
mov
push
or
pushf
lret
dec
imul
aas
or
cld
aaa
mov
add
rcll
arpl
xor
repz
and
cmpsb
dec
xchg
je
aad
dec
jecxz
imul
inc
jge
add
leave
jle
ret
mov
bnd
data16
mov
std
push
dec
dec
dec
dec
cld
jmp
or
mov
addr16
xchg
mov
lret
cmpsb
mov
jp
es
mov
sbb
movsb
xchg
xchg
pop
sbb
xor
cmpsl
incl
pop
fs
enter
mov
dec
mov
inc
xchg
add
psubq
test
xor
leave
cmpsl
int3
mov
xchg
inc
xchg
out
sbb
push
notb
inc
and
add
sbb
xor
mov
cmpsl
clc
push
jmp
add
xchg
jne
in
in
mov
popf
xchg
jecxz,pt
mov
jge
add
cs
adc
sbb
jnp
pushf
jnp
pop
sub
xor
lret
jbe
add
fdivp
push
sub
dec
mov
mov
cmpsb
lock
out
mov
das
cmp
xor
adc
mov
xor
cmp
ljmp
jmp
or
pop
inc
movsb
cltd
jo
addr16
test
out
das
jp
out
je
out
sbb
adc
jmp
xchg
lcall
in
mov
out
pop
mov
push
cmp
call
rcrb
jmp
sti
pop
int
shrl
push
push
cmpsb
mov
call
jp
movsb
pop
cmpsl
out
pop
push
and
mov
adc
js
mov
sbb
pop
js
push
std
jb
ja
sti
movsl
insl
pop
dec
cmp
adc
pop
hlt
rolb
iret
gs
mov
insl
in
xor
loope
push
sub
cmp
mov
in
jnp
dec
jno
scas
jno
pop
les
mov
mov
sbb
mov
push
test
ljmp
or
jns
xor
stos
mov
jns
xchg
roll
lds
cmp
inc
inc
js
fadds
mov
stos
lahf
pop
xor
lock
sbb
cli
cmp
cmc
mov
ret
sbb
pop
dec
jp
iret
out
int3
xlat
aas
mov
imul
mov
push
mov
or
jg
repz
adc
cmp
mov
or
mov
add
pop
ds
sti
inc
dec
jmp
cmpsb
iret
in
loope
dec
subl
sahf
pop
dec
fcmovne
popf
repz
mov
ret
cmpsl
lahf
mov
jle
sub
pop
mov
mov
mov
cltd
jp
sub
adc
sbb
pop
scas
add
data16
adc
push
mov
mov
mov
inc
inc
movsl
add
push
fldcw
and
add
pop
ret
ljmp
test
inc
rclb
mov
jns
push
mov
xchg
add
cmp
aaa
lods
adc
xor
imul
iret
ficomps
das
or
aas
sbb
popf
fs
mov
mov
xchg
in
insl
cli
scas
adc
mov
xchg
fiaddl
fstpl
xlat
and
xchg
mov
mov
adc
adc
xchg
dec
push
dec
aaa
adc
lahf
add
sub
sbb
xchg
data16
lods
push
fdivs
loop
pushf
mov
xchg
dec
aaa
and
rcl
notb
and
stos
cltd
insl
xlat
jl
fidivrs
sbb
sub
js
push
pop
jmp
lock
pop
pop
sub
jecxz
mov
insl
cwtl
ljmp
jno
push
rcr
mov
cwtl
pop
cmp
addl
jp
mov
lds
mov
push
cmp
ds
add
insl
leave
ss
add
xchg
sub
mov
or
fsubl
xor
mov
notl
sub
cld
jle
inc
stos
jno
xchg
aas
add
lds
sub
cvtpi2ps
out
jle
ljmp
scas
cmc
cmp
out
sub
cmp
mov
lds
ret
xor
lods
jno
sub
sahf
lret
xor
fcomp
aam
stc
or
mov
int
mov
in
push
add
sahf
out
inc
outsb
and
xchg
jbe
push
or
fidivrs
pop
inc
lret
push
fmuls
push
out
cli
pushf
insb
mov
add
lock
ret
or
fsts
or
mov
xor
fnstcw
inc
sbb
inc
es
push
push
movsl
lds
or
jecxz
cmp
outsb
mov
push
adc
dec
rcrl
and
pushf
push
loopne
lods
hlt
mov
nop
sub
test
xchg
loop
xor
and
enter
cltd
pop
in
bound
fisttpl
fsubr
lret
inc
test
shl
cmp
push
mov
jl
imul
fidivs
test
in
cltd
fbld
mov
inc
xchg
std
scas
add
mov
adc
ljmp
pusha
sbb
repnz
dec
mov
jns
loope
dec
movsl
movsl
pop
fs
stos
push
in
in
insb
pop
in
mov
scas
das
enter
cli
ja
adc
push
add
loope
fwait
jbe
out
loopne
cmp
xchg
xchg
push
push
mov
outsl
push
test
adc
in
push
mov
inc
out
dec
jl
das
and
sbb
xor
pop
xor
jl
inc
dec
sbb
mov
mov
sub
movsb
mov
add
xlat
fwait
ja
and
enter
inc
outsl
imul
test
dec
in
pop
inc
imul
mov
or
dec
fsubrl
int
sbbl
xchg
loope
in
test
dec
xchg
loope
fstl
dec
test
pop
add
pop
push
push
cli
dec
nop
and
xchg
xor
sub
and
sub
and
fisubl
adc
idivl
mov
je
jo
jecxz
or
loopne
mov
mov
mov
xor
cld
add
jmp
push
stc
out
pusha
add
jl
cmp
mov
push
js
popf
std
movsl
cmpsl
loope
mov
icebp
sbb
ud2
add
bound
pop
cmc
sub
dec
insl
push
sti
sub
cmp
fiadds
cmc
sub
mov
and
mov
sbb
outsb
mov
mov
lahf
dec
arpl
ds
jl
orl
neg
fistpl
int
jb
das
add
dec
mov
push
in
dec
sub
movsl
lds
adc
insl
loop
fucomp
push
sub
pusha
popf
mov
pop
mov
xor
pop
sub
sub
out
adc
stos
add
pop
lock
mov
cmp
into
jae
mov
pop
cli
jmp
cltd
xchg
mov
insl
jle
mov
xchg
xchg
add
out
fdivp
mov
xor
jle
mov
adc
pop
sahf
add
and
and
pop
and
ja
test
mov
aam
loope
xchg
gs
jp
arpl
sbb
popa
add
sbb
loope
inc
and
mov
je
jns
popf
loope
cmpsl
jb
scas
popf
sahf
xchg
inc
das
jno
mov
int
bound
jnp
mov
sti
xor
ret
je
mov
xchg
je
or
cmp
lods
xchg
or
push
xchg
inc
jno
das
out
jne
hlt
or
add
jle
xchg
push
out
daa
fdivl
xorl
mov
fnclex
and
mov
mov
mov
push
pop
call
pushf
jae
add
add
pop
cmpsb
jge
test
insl
scas
or
pop
ret
push
sti
add
mov
out
lods
aam
fcoms
mov
push
out
adc
inc
jbe
daa
lds
shlb
and
mov
xlat
xchg
mov
sub
mov
mov
rol
jmp
push
sbb
sbb
sbb
mov
xor
scas
sbb
mov
pop
pusha
in
dec
mov
pop
mov
mov
popf
push
jae
loopne
call
pop
pusha
stc
flds
adc
jae
scas
repnz
mov
mov
mov
dec
or
rcrb
mov
xor
loope
push
dec
xor
xorl
fcmove
dec
xchg
shrb
in
insl
ss
dec
in
sarl
or
mov
ja
imul
sti
aas
mov
dec
ss
xor
imul
sub
sbb
pop
inc
sbb
push
lock
sub
cwtl
movsl
add
sub
mov
jmp
mov
dec
fwait
xchg
or
jle
jmp
or
fnsetpm(287
add
inc
icebp
mov
mov
mov
notb
xor
adc
sbb
jg
subb
sub
sub
aas
push
cmpsb
bound
nop
ds
js
cmc
or
fcoml
loope
xor
push
rorl
xchg
fs
aas
jl
xor
and
mov
sti
mov
dec
test
nop
xor
sbb
pop
adc
dec
sbb
jbe
inc
pop
mov
lea
mov
stc
stos
adc
pop
pop
push
cmp
dec
ret
mov
in
lods
or
jae
loop
push
cmc
adc
sbb
add
sarl
in
xor
iretw
imul
dec
outsb
mov
mov
jnp
imul
add
das
fs
mov
push
cmp
cmp
jp
and
xor
push
cmp
and
add
dec
jecxz
adcl
lds
pop
outsb
ficoms
pop
lds
imul
testl
fisttps
and
mov
lea
xorl
sbb
rol
push
mov
xor
test
sub
outsl
outsl
add
mov
xor
cmpsb
push
ret
ret
or
push
jmp
and
jns
adc
fsubl
xchg
and
mov
pop
bound
stos
or
sahf
sbb
dec
testl
cli
add
mov
mov
incb
roll
and
fwait
outsb
mov
rol
pop
jnp
inc
jno
pop
movb
pop
mov
popl
push
ss
sbb
data16
cmpsl
mov
mov
add
aam
adc
or
das
out
or
enter
jp
dec
jmp
sbb
jg
add
sahf
and
cmpsb
out
aam
in
jmp
leave
dec
insb
mov
mov
dec
ljmp
inc
cmp
shl
out
js
dec
lahf
fdivrp
aaa
shl
ljmp
js
lret
aas
adc
adc
rol
filds
shl
add
pusha
ret
test
sbb
imul
or
lods
test
scas
aas
xchg
mov
sbb
dec
jmp
xchg
xor
inc
sbb
xor
push
dec
lret
sbb
and
inc
repnz
dec
sub
inc
mov
push
add
test
sbb
pop
aas
fidivrs
shlb
sti
fldcw
std
out
ret
pop
and
sub
aas
pop
ret
fucomi
dec
jle
test
lcallw
push
xchg
sub
mov
pop
cmp
dec
cmp
pop
stc
xor
add
outsb
push
sarb
leave
pushf
xor
das
xchg
sbb
and
leave
ret
mov
jb
xor
icebp
jns
push
imul
xchg
rolb
sub
jl
sbb
iret
dec
cli
push
dec
add
fcoml
sti
in
jb
sub
jnp
outsl
push
inc
and
cmp
cwtl
aaa
cmp
adc
inc
cmp
aam
xchg
cs
xchg
das
mov
inc
enter
and
lock
insb
popf
jecxz
cmp
sub
mov
xchg
inc
leave
mov
int
enter
fstps
jp
add
in
jge
out
adc
iret
fcomps
sub
push
insl
jbe
pop
negl
sarb
jnp
fnstcw
cmp
roll
stos
xchg
and
or
out
in
jno
lea
dec
fs
aad
adc
adc
lcall
fwait
mov
sub
push
sti
mov
rorb
push
xchg
sub
inc
or
int
lods
lods
xchg
aad
or
std
add
jbe
inc
outsb
sub
movsl
sub
and
inc
adc
icebp
mov
pop
cmp
xchg
and
xor
cmp
add
xchg
es
lods
dec
xchg
cmp
es
stos
pop
rolb
sbb
in
sbb
jae
cli
cs
mov
mull
jbe
stos
jo
lock
mov
lret
dec
mov
stc
test
mov
mov
xchg
test
pop
mov
lock
sbb
xor
xlat
mov
mov
cltd
dec
sbb
mov
mov
pop
fistl
mov
imul
ret
mov
add
or
sbb
mov
xor
xchg
mov
out
or
inc
jns
mov
ror
sub
mov
jb
push
aad
jno
adc
ja
mov
xchg
sub
hlt
sti
mov
dec
adc
int
add
out
push
fbld
cltd
cmpsl
inc
push
ret
push
movsl
fwait
push
lcall
mov
scas
out
dec
mov
mov
rclb
aaa
xchg
dec
sbb
pop
push
inc
int
mov
fcmovnbe
je
xlat
out
lsl
adc
out
outsb
xchg
jmp
js
jo
cmc
pop
jno
call
aad
test
jne
push
insl
cltd
sbb
out
pop
pop
mov
mov
ds
stos
sahf
mov
and
mov
or
push
repnz
cmp
fmull
dec
pop
and
xchg
hlt
mov
sarl
adc
fmull
pop
mov
xchg
pop
push
sbb
popf
leave
scas
xchg
mov
add
clc
lret
sbb
cs
xchg
xor
lahf
aas
stc
imul
pushf
ret
adc
das
test
fs
inc
ljmp
xor
push
and
sub
mov
scas
jne
fabs
lods
imul
sbb
pop
xchg
nop
or
pop
lea
jecxz
cmp
fistps
adcl
mov
in
mov
xchg
push
sbb
cmp
sbb
mov
push
out
das
inc
jge
daa
mov
push
or
lcall
cld
enter
pop
movl
movsb
xor
inc
movsl
cmpsl
cmp
nop
pop
loope
dec
xchg
and
repz
xchg
cmp
mov
xchg
inc
icebp
fsubp
mov
gs
test
add
mov
in
sub
int3
xor
out
xchg
inc
dec
xchg
jae
mov
aas
sahf
xor
add
scas
add
or
and
je
fisttps
xchg
jbe
roll
xor
xlat
aad
push
std
js
pusha
lock
mov
jp
mov
ljmp
and
lret
xchg
mov
in
js
lds
sub
mov
sbbb
in
sbb
jp
sbb
cmp
cmp
int3
lods
dec
mov
mov
and
js
pop
imul
test
not
sahf
cmp
pop
sbb
mov
popf
adc
jle
mov
int3
popf
mov
je
hlt
push
sub
push
jl
mov
pop
adc
and
insb
xchg
pop
pop
scas
push
jne
cmp
xchg
inc
jl
push
inc
cmpsl
addr16
insb
and
adc
fcmovu
ret
jge
pop
ljmp
std
xchg
jb
mov
xor
ret
jb
adcl
repnz
test
aaa
gs
cli
fldcw
xor
pop
add
pusha
cs
mov
add
add
les
sbb
and
lock
xchg
xchg
jmp
aad
inc
ror
sub
ss
jg
inc
mov
aad
xchg
xchg
pop
inc
push
jg
out
pop
cs
dec
fsubs
sub
les
fdivrl
jo
in
rolb
pop
std
xchg
adc
lds
cmp
pusha
inc
mov
or
lret
pop
mov
xor
mov
push
cli
les
xchg
sub
insl
jl
xorl
lea
gs
cmp
movsb
out
jno
fwait
cmpsb
cli
push
push
scas
or
test
stos
mov
cmpsb
outsl
adc
outsl
mov
jne
cli
imul
push
ret
in
xchg
inc
addr16
sub
add
adcl
xchg
imul
add
sbb
stc
and
ja,pt
fcmovb
ret
daa
mov
aaa
adc
push
mov
jns
xchg
xchg
fidivrs
mov
js
inc
adc
push
out
push
dec
iret
xchg
and
sub
push
or
stos
dec
mov
fdivl
mov
lcall
insb
jl
loope
dec
inc
aam
pop
sub
addl
rolb
int
jl
repz
mov
push
orps
push
cmp
mov
mov
clc
imul
push
pop
ljmp
pop
jecxz
clc
fildl
dec
jmp
shrl
sbb
popf
or
jns
data16
lret
pop
push
stc
jno
xor
lea
xor
sbb
out
enterw
cmpb
push
adc
adc
xchg
push
sahf
test
dec
inc
leave
dec
push
jle
mov
fnstsw
mov
mov
lea
les
mov
test
and
stos
jp
cmp
stos
mov
or
int3
mov
test
pop
mov
call
jmp
lods
ret
fnsetpm(287
fistpl
aaa
jge
fs
and
ret
outsb
stos
outsl
pushf
ret
psrlq
mov
xor
leave
cmp
lea
or
or
mov
ret
jae,pn
mov
stos
push
cld
fs
adc
xor
dec
inc
inc
js
mov
lock
repz
imul
fisttps
sbb
sub
insl
lahf
stos
add
addb
ficoml
mov
mov
test
mov
or
dec
inc
mov
mov
scas
ss
repnz
and
push
add
ret
mov
popa
dec
dec
ja
cmc
sahf
adc
stc
testl
add
lret
data16
insb
xchg
adc
pop
addr16
lcall
add
jp
mov
rcl
inc
adcl
push
lods
cld
mov
int
or
ficoml
push
movhps
push
aas
ss
push
mov
mov
cmp
and
xor
and
pinsrw
icebp
sbb
repz
nop
fwait
lcall
push
enter
push
fisttps
fidivrs
jg
push
loope
movsb
shl
rcll
or
xchg
sub
cmc
mov
sbb
je
jne
jne
jg
in
jp
pop
dec
xor
cmpsl
or
mov
iret
or
push
cmpl
rcl
push
mov
push
mov
push
ljmp
aas
jb
cmp
movsb
inc
dec
jno
pop
mov
add
bound
or
mov
repz
int
aas
dec
daa
loope
and
sub
imul
ret
lea
shlb
push
fistps
std
push
cmp
push
mov
daa
mov
je
fldenv
xor
xchg
lret
rcrb
jae
data16
lods
aad
mov
jnp
inc
xchg
push
mov
cld
jecxz
std
sti
fidivl
stc
jge
mov
xchg
cmp
dec
in
mov
movsl
fidivrs
ficoms
pop
pop
or
int
jae
lock
mov
int
mov
xor
nop
mov
jg
aas
es
push
cmpsl
and
imul
pop
jle
xor
fs
add
jp
and
sbb
pushf
dec
aad
xchg
push
dec
inc
push
pusha
mov
scas
jne
mov
mov
xor
out
test
fldenv
add
loope
adc
leave
aaa
sbb
dec
fs
push
shlb
out
stos
add
or
pop
pop
add
inc
mov
xor
xchg
jg
or
sarb
xchg
cmp
sbb
aaa
sti
popa
cs
dec
stos
aas
push
es
mov
test
jmp
mov
push
adc
or
stc
lea
mov
sub
rolb
sub
les
mov
leave
sbb
push
add
jno
jb
das
sub
je
or
frstor
pushf
or
cwtl
shlb
jge
adc
popf
out
mov
add
stc
sub
xchg
pop
int
stc
ljmp
mov
dec
xor
cli
mov
inc
jbe
xor
mov
bound
jp
mov
and
mov
jg
and
pop
ja,pn
lock
xor
ja
test
notl
dec
es
mov
inc
jmp
xor
push
sub
cmpsb
in
pop
ficoms
xchg
daa
lcall
pusha
sub
dec
sub
aad
mov
xor
shrl
mov
int
push
mov
sub
and
fwait
shll
pop
xor
mov
sarl
jbe
add
sbb
jne
lock
cmc
pusha
lcall
dec
insl
in
out
fisubrs
inc
fnstcw
in
clc
inc
stc
xor
loop
mov
inc
sbb
jbe
add
dec
jbe
mov
inc
sub
xchg
cltd
fiaddl
mov
jmp
gs
and
das
test
filds
jecxz
xor
jb
ret
and
push
pop
jnp
mov
jo
pop
data16
imull
pop
inc
mov
jbe
addr16
insl
add
xchg
inc
mov
or
cmc
push
imul
aam
mov
or
scas
jne
ss
rcrl
daa
push
push
and
rcll
ss
in
pop
nop
xor
incl
push
inc
imul
out
xor
push
loopne
out
xchg
pop
inc
repz
adcl
jge
jp
mov
ret
das
push
jb
rorb
push
sub
lods
jb
aam
int3
add
jb
add
test
cs
sub
push
cmp
mul
into
mov
xchg
test
cs
xchg
mov
notb
sub
sub
sub
mov
inc
push
mov
inc
loop
les
and
xchg
mov
and
sahf
cltd
mov
lea
stos
fldt
shrb
jle
dec
les
rclb
jnp
shrb
sbb
repz
pop
mov
cwtl
push
push
push
adc
imulb
cli
adc
push
push
fisubs
jns
lods
mov
testl
push
push
rcrl
ret
jns
je
dec
dec
sbb
jp
cmp
dec
add
pop
mov
xor
mov
cltd
mov
loop
adc
lds
xor
ljmp
fninit
pop
fcoml
out
adc
or
hlt
enter
fisttpl
insl
xor
dec
mov
daa
pop
sbb
imul
sub
xchg
adc
cmp
mov
adc
mov
cmp
xchg
pop
mov
call
lahf
xor
iret
jns
fs
clc
loopne
add
jno,pn
mov
test
xchg
ret
scas
sahf
cwtl
mov
mov
clc
test
sbb
jmp
loope
lods
mov
mov
jge
testl
mov
inc
popf
sub
lret
mov
ror
push
fcmovb
jmp
adc
adc
scas
xor
adc
nop
sub
outsl
cld
add
push
inc
insb
int
add
inc
pop
mov
mov
xchg
aam
rorl
mov
or
sub
inc
inc
push
insb
inc
mov
adc
int
pop
inc
mov
sbb
or
loop
lds
push
pop
or
adc
or
rcll
dec
xchg
dec
mov
aad
and
dec
imul
mov
sbb
mov
add
iret
mov
adc
dec
pop
push
push
imul
mov
sub
cwtl
fbld
daa
push
fmull
iret
cmp
cmc
lock
pusha
inc
les
or
xchg
shll
xlat
loop
notb
mov
dec
fisubs
mov
mov
mov
mov
xchg
push
jle
leave
ljmp
lock
arpl
xor
pop
xchg
bt
and
sbb
cld
je
pop
jne
insl
pop
out
out
xor
xchg
cmc
xchg
scas
sub
inc
rorl
jl
imul
fidivl
pop
pop
mov
mov
jbe
mov
inc
xor
jne
in
xchg
fwait
movsb
pop
inc
mov
and
jl
sbb
push
es
insb
sbb
mov
mov
cmpsb
push
sub
mov
mov
fwait
stos
sub
fisubrs
or
dec
or
mov
lahf
pusha
fs
and
and
or
add
mov
fimuls
jecxz
adc
lock
je
outsb
lcall
shlb
int
dec
test
dec
ret
js
call
pop
or
xchg
movntq
out
add
call
out
ss
mov
xor
mov
add
divb
jmp
jb
cmp
and
xor
adc
cli
add
mov
cmpsb
mov
mov
pop
in
xor
lret
sbb
in
out
js
jae
xchg
ss
les
mov
xor
scas
and
pushf
movsl
fnclex
jns
ja
insl
iret
cmpl
loope
jge
insb
hlt
mov
sbb
inc
push
adc
mov
aas
testb
in
call
add
and
repnz
loopne
cmp
test
js
or
iret
in
sub
popa
hlt
aad
or
loopne
pop
sbb
add
repz
ss
shll
adc
jge
push
xor
dec
push
jnp
sbb
lds
out
cmpsl
shlb
mov
mov
mov
popl
insb
lcall
push
xor
daa
pop
in
fists
push
loop
and
push
cmc
movsb
aam
sub
jne
and
or
push
and
pop
push
aad
push
ret
xchg
dec
jle
xchg
inc
fs
adc
add
jnp
xor
mov
adc
enter
xchg
arpl
popf
adc
movsl
push
xor
jle
inc
jae
cli
add
js
fs
ss
aaa
push
shrl
js
cmp
jno
insb
int3
pushf
pop
mov
adc
imul
inc
bound
ficomps
icebp
cmp
repnz
mov
and
inc
insl
hlt
rorl
mov
mov
adc
enter
leave
xchg
sbb
xor
shl
inc
call
or
mov
xchg
shl
cwtl
sub
into
sub
popa
movd
addr16
cmp
adc
mov
jo
maxps
fabs
fmuls
sbb
cmp
dec
add
and
add
stos
jl
imul
mov
in
mov
push
xor
pop
xchg
cmpsb
lods
loope
cmp
lret
adc
cmp
out
or
or
sbb
jns
lcall
stos
inc
test
add
inc
call
adcb
ret
loope
sahf
sbb
rorb
inc
inc
mov
cmp
cmp
repnz
mov
cli
insb
int
in
push
xchg
adcl
add
stc
mov
pop
in
mov
xchg
mov
int3
sub
ret
data16
push
into
pop
cmc
push
lret
add
vcvttps2dq
icebp
outsl
sub
xor
js
or
outsb
pop
fstps
int3
adc
cmp
xchg
mov
pop
push
cmp
popa
dec
adc
xchg
into
add
call
push
cmp
sbb
outsl
sub
dec
test
fimuls
orb
xchg
xchg
sub
in
jne
and
pop
div
pop
add
jmp
push
mov
inc
fcos
popf
stos
or
std
adc
push
xchg
aad
outsb
sub
xchg
push
pop
shll
cli
mov
movsl
cmp
xchg
outsb
mov
stos
push
les
ss
rcrl
pop
mov
test
rclb
inc
idivl
mov
cli
mov
sarb
push
lret
sbb
shll
xchg
outsb
loope
addr16
test
fsubrp
mov
adc
sub
cltd
out
mov
or
pushf
lret
ret
test
aad
mov
in
leave
loop
stc
stos
scas
xor
and
popf
dec
aad
push
or
mov
es
and
sub
test
and
cmp
or
mov
jl
push
or
faddl
mov
in
cmc
pop
fldl
aas
push
filds
cs
pop
pop
pushf
adc
jle
ror
jnp
addr16
out
add
ljmp
fwait
packssdw
es
jno
mov
lahf
mov
mov
inc
pop
push
repnz
fwait
js
int
sarb
pop
jle
cmpsl
add
shlb
inc
fs
je
inc
sbb
mov
push
es
dec
fcompl
popa
fcoms
xchg
nop
mov
subb
imul
pop
sbb
mov
mov
cmp
aam
and
jle
inc
fcmovne
push
and
arpl
push
mov
call
pop
imul
sbb
mov
out
push
shll
seta
rclb
out
inc
jnp
rcll
and
dec
sti
insb
cwtl
dec
jge
test
insb
pop
jo
scas
inc
xor
sub
adc
dec
pop
add
mov
mov
int
ja
sub
add
jmp
int3
cltd
or
outsb
xor
test
and
ficoms
adc
enter
je
icebp
data16
ds
pop
nop
push
sub
sti
jnp
add
js
adcb
push
xor
aas
and
cmc
mov
inc
jg
push
mov
xchg
mov
lcall
or
xor
adc
mov
sahf
pop
pusha
jns
dec
pushf
imul
gs
popl
adc
aad
and
push
aaa
loope
push
cltd
cmp
mov
add
ljmp
movsl
add
mov
mov
aaa
sub
cmc
lods
cld
dec
enter
in
xlat
into
jns
fsub
roll
fistl
dec
and
repz
pusha
enter
and
mov
lret
sbb
xchg
sar
mov
rolb
enter
xor
movsl
xchg
xchg
shlb
loope
fcomps
mov
lds
lea
data16
repnz
fmulp
jmp
mov
cltd
pop
mov
pop
loope
mov
mov
push
push
je
scas
shrl
out
jp
into
push
inc
mov
shll
jne
mov
ja
aam
push
gs
loope
filds
add
jl
leave
lea
psadbw
mov
and
hlt
push
daa
add
mov
xor
push
pop
dec
xor
hlt
push
lcall
push
in
les
inc
enter
loopne
sub
gs
testl
add
jp
push
or
dec
jp
sbb
mov
mov
dec
mov
sub
dec
pop
subl
and
add
lret
xor
pop
cmp
ror
mov
rcrl
test
popa
bound
int3
je
lods
push
imul
loopne
in
les
and
sarb
push
loope
push
cmp
mov
mov
xorl
ror
add
jo
stos
jl
sub
mov
lock
rol
cli
xor
shlb
cmpsb
mov
subb
xor
in
pop
xchg
mov
mov
inc
lea
push
in
mov
scas
cmp
mov
mov
xorb
jmp
push
cmpsb
or
aaa
cmp
scas
mov
cmpsb
push
adc
sbb
sbb
xor
jle
incb
jp
push
mov
flds
xchg
jo
xchg
adc
adcb
add
mov
mov
cli
test
sub
dec
mov
dec
cmpsl
dec
add
call
mov
cwtl
pop
xor
xor
push
push
or
cmpsl
add
cmc
repnz
and
fsub
mov
push
jmp
sbb
and
cli
imul
xor
dec
daa
popf
dec
xlat
xor
mov
cwtl
je
rclb
push
pop
das
cmc
jno
idiv
dec
mov
xlat
ret
pop
aas
nop
add
jnp
mov
push
lret
cltd
xor
fldcw
push
jbe
cmpsl
fcmovne
ss
xor
cmpsb
imulb
pop
pop
sti
lods
flds
lods
sar
lods
test
mov
jae
addr16
cmpb
cwtl
jg
jg
jne
in
xor
sbb
loopne
loopne
shrb
cmpsl
xor
lret
xor
insb
and
xor
out
mov
dec
shll
cmpb
icebp
in
jge
cwtl
push
push
loop
jbe
in
push
or
mov
cmp
mov
push
out
data16
cmp
loope
xor
imul
pop
xchg
and
jl
addr16
jb
xor
dec
sti
fmuls
mov
dec
pop
jmp
ja
mov
je
mov
cmp
pusha
int3
jns
mov
jge
cmpsb
cmc
push
les
adc
sbb
rcll
mov
pop
fs
or
in
jp
cmpsb
pmulhw
les
bound
pop
xchg
sub
jnp
das
push
das
xchg
mov
dec
sub
paddb
or
dec
adc
movsl
jmp
jmp
jb
jns
mov
mov
push
shrb
jns
in
cmp
imul
daa
xor
mov
out
cltd
scas
sti
cld
stc
mov
mov
add
pop
or
add
std
imul
pushf
xor
std
gs
flds
dec
mov
pop
in
xor
xchg
arpl
push
ljmp
push
lods
iret
mov
mov
xor
pop
cltd
cmp
mov
popa
mulb
sbb
inc
mov
shl
push
adc
xor
shlb
cmc
lods
outsl
mov
in
xor
dec
ss
sub
lcall
cmp
mov
xchg
xchg
pop
jge
lret
hlt
mov
rolb
je
in
popa
pop
mov
in
and
subl
adc
add
add
stc
mov
xchg
sbb
and
xchg
sbb
inc
mov
push
xchg
gs
cmp
dec
ds
fs
movsl
fcomps
push
arpl
dec
mov
and
jno
inc
int3
xor
push
in
push
sbb
in
loope
mov
push
pop
push
mov
dec
std
lret
inc
jbe
test
frstor
xor
inc
stos
xlat
cmp
inc
hlt
push
incl
insb
jg
xor
stos
mov
in
enter
sub
call
push
xlat
jae
test
and
mov
fisttpl
cwtl
jmp
subl
add
mov
pop
sahf
stos
ret
lods
mov
adc
mov
in
stos
dec
push
sub
mov
mov
cmp
lret
inc
add
push
fwait
js
jg
subl
or
lds
jmp
inc
roll
dec
and
leave
gs
add
push
mov
cmp
sti
enter
push
ret
dec
adc
scas
ret
shlb
xor
inc
sbb
cwtl
xor
or
lret
pop
cltd
adc
inc
or
inc
gs
cld
ja
cmp
cld
aad
pop
insl
sbb
xchg
dec
push
popa
push
mov
lods
in
sub
dec
sbb
outsb
mov
and
loope
cli
rcrb
jbe
jl
int
cmp
or
lea
test
pause
aaa
dec
movsl
aam
push
sbbl
out
jmp
jno
mov
and
das
xchg
mov
xor
jnp
push
mov
push
inc
sbb
rcl
fldt
int
arpl
xlat
add
iret
jp
mov
xor
add
fiaddl
xchg
insb
sbb
leave
aam
inc
insb
sbbl
cltd
jns
out
adc
cltd
xor
jl
adc
popa
add
in
repz
xchg
add
pop
mov
icebp
repz
es
fisttps
fwait
pop
daa
pop
sub
rcll
js
mov
adc
or
jns
add
ret
ret
std
push
xchg
sbb
andl
mov
cmp
jne
push
jbe
xchg
pop
cmc
push
and
jp
inc
out
inc
mov
mov
mov
or
mov
pop
dec
lretw
xor
jnp
out
or
xlat
mov
sub
adc
pop
cmpb
ja
repnz
rol
decl
lea
cmpb
cmc
das
imul
pop
js
ret
mov
add
mov
mov
insl
stos
mov
mov
cmp
pop
sahf
outsb
sbbb
jb
test
popf
mov
mov
stc
stos
mov
and
jecxz
lods
cli
gs
jge,pn
mov
lods
nop
xor
in
lret
mov
jle
adc
mov
scas
push
jmp
and
dec
call
mov
aas
rcrl
in
fsts
mov
mov
shll
sbb
xlat
fiadds
leave
jecxz
cmp
cmp
adc
shlb
sbb
sub
idiv
mov
xor
xchg
or
pop
leave
sub
stos
leave
mov
jb
lods
xor
mov
xor
jmp
cmp
xchg
test
daa
jp
mov
repz
imul
rcrb
mov
int3
or
ret
lea
out
push
les
mov
jae
and
sbb
dec
push
xchg
push
pushf
mov
cmp
cs
gs
mov
adc
decb
inc
mov
jae
adc
sub
pop
jne
popf
jmp
cs
dec
push
inc
fisttpl
rcll
xchg
inc
mov
jo
out
divl
stos
jno
cmp
mov
mov
adc
push
or
cltd
jnp
mov
pop
cld
cmp
loope
or
stos
xor
mov
loopne
lahf
inc
pinsrw
jecxz
mov
aam
xor
jmp
and
add
cmp
repnz
lock
adcb
lods
sub
orb
iret
cmp
into
int3
push
notl
sub
les
mov
test
stc
cmp
and
cmpsl
sti
insb
pop
into
stc
enter
aaa
dec
divl
mov
nop
jnp
das
mov
mov
testb
adc
mov
idivl
loope
mov
adc
xor
mov
pop
pop
adc
cld
std
xlat
jns
daa
pop
sbb
adc
mov
lods
movl
pop
loope
aas
mov
lea
sahf
repnz
lods
push
jmp
movl
ss
frstor
hlt
mov
push
mov
clc
add
mov
xchg
add
sti
scas
es
pop
inc
or
xor
xchg
mov
or
aad
cs
lret
cmp
out
pop
pop
orb
adc
dec
and
in
stos
sbb
jg
inc
insb
rcl
or
aad
xchg
jl
ror
mov
pop
out
shlb
pop
js
pop
ss
inc
dec
fs
mov
lret
dec
ja
adc
jnp
push
and
sahf
pop
jb
das
cmp
cs
add
test
jg
xlat
pop
lret
addr16
jne
mov
mov
or
mov
hlt
test
jle
lahf
push
loope
in
add
js
lds
insb
xchg
push
push
sbb
nop
hlt
fsts
xchg
xorb
insl
jbe
xor
cld
adc
cwtl
mov
das
aad
push
jg
dec
push
pop
mov
xor
lret
out
pop
sbb
adc
pushf
fstps
jle
dec
fisttpll
push
int
pop
lods
pop
push
hlt
adcl
fcmovb
cli
push
pop
fimull
adcl
mov
ret
cli
cltd
sahf
mov
cs
js
jg
test
xor
xchg
les
mov
add
out
sub
fadds
mov
add
add
cltd
mov
sbb
mov
push
jno
push
in
int
negb
mov
iret
in
mov
sbb
dec
xchg
or
mov
mov
mov
pop
inc
ror
out
jo,pt
push
lock
dec
fisubrl
lods
fcomip
outsb
les
popa
or
ja
mov
inc
jbe
icebp
call
mov
into
outsl
inc
mov
dec
in
mov
xlat
jp
imul
mov
pop
push
fnstsw
outsl
add
stc
fiaddl
adc
fsts
or
cmp
fwait
out
push
push
movsl
cmpsb
push
shll
adc
ficoms
enter
insl
popf
js
enter
or
fwait
lods
leave
push
testb
mov
inc
push
enter
test
xor
jae
in
fdivr
mov
push
dec
mov
in
enter
fldl
adc
mov
jbe
mov
insl
sub
pusha
or
sbb
push
mov
add
cmpsl
xchg
insb
sbb
mov
dec
stc
or
push
subl
dec
mov
xchg
pop
cwtl
js
das
cmp
mov
sti
sbb
push
jo
loop
xchg
pop
dec
das
ret
mov
das
push
mov
fildll
push
sub
fs
fcom
push
in
les
xchg
jo
clc
mov
sbb
lods
push
xor
mov
push
pop
loopne
inc
jg
mov
inc
and
out
int
add
in
push
repz
rolb
xchg
xchg
or
xor
sbb
push
add
push
add
push
stos
xchg
cmp
loopne
and
fwait
inc
mov
mov
test
mov
mov
psllq
push
test
idivl
jl
xchg
sbbb
shl
fsubs
in
xchg
stc
sbb
lds
or
and
mov
scas
leave
icebp
repnz
shll
imul
lods
lcall
xorl
es
cmpsb
outsl
xchg
and
pop
mov
mov
test
or
jnp
mov
loopne
shl
mov
or
rolb
cmp
sbb
fmulp
jnp
ljmp
push
loop
xorb
sub
push
shrb
divl
out
test
jo
cld
lahf
pop
popf
adc
sbbb
adc
lea
xchg
jne
push
mov
push
sub
daa
and
test
roll
jo
jae
daa
push
push
pop
jns
mov
std
ret
pop
ror
mov
or
push
add
sti
mov
pop
xor
ss
loop
fidivl
pop
clc
enter
outsl
sbb
or
ja
aaa
cmp
daa
fs
inc
jecxz
cmp
push
jle
inc
jne
sbbl
negl
lock
in
je
jp
mov
mov
pop
adc
into
inc
dec
sub
cmpsb
repz
jae
mov
inc
mov
jno
nop
adc
mov
add
movsl
mov
add
mov
mov
or
sbb
sbb
loop
and
add
cmpsb
adc
dec
insl
js
cmc
adc
leave
cwtl
mov
xor
repz
mov
cmc
xor
pop
repnz
cmp
movsb
cmp
addr16
loop
iret
and
push
test
fwait
mov
fcmovbe
mov
cmc
rolb
in
inc
adcb
sub
test
mov
jle
fcomps
xor
sub
fdivrl
out
pop
enter
add
sbb
mov
mov
jge
mov
mov
xchg
mov
xor
ret
sbb
rorl
mov
cmp
xor
imul
mov
mov
mov
pusha
popa
loopne
shll
lock
jecxz
test
fstps
add
adc
fiaddl
mov
jecxz
scas
add
lods
inc
bt
les
in
cwtl
jbe
adc
scas
test
mov
push
daa
inc
insb
mov
mov
push
adc
or
call
add
in
mul
push
out
or
mov
xchg
sbb
pop
add
jae
pop
nop
addr16
jo
jmp
push
mov
clc
scas
sub
or
hlt
mov
movsb
cmp
xchg
jmp
fnstcw
shll
lods
jl
xchg
sub
jne
ret
fidivl
cmp
xlat
imul
ja
mov
xchg
push
xchg
adc
test
mov
arpl
arpl
and
cmc
shl
push
aam
int
sub
subl
mov
push
inc
popf
jne
xchg
cmpsl
icebp
jns
psrlw
lock
outsl
std
mov
push
mov
lcall
jl
xchg
xchg
or
repz
lret
repz
push
mov
cmc
sub
dec
les
lahf
xor
je
imul
add
gs
pop
jp
aam
cmp
enter
mov
jbe
lds
ljmp
mov
jmp
cmpsb
mov
push
cmc
sbb
lea
punpckhdq
mov
add
cmp
int
mov
push
pushf
inc
pushf
cmp
shlb
dec
loope
outsb
stos
in
aas
xor
push
aaa
push
rorl
icebp
ja
mov
jnp
cmp
out
rcl
mov
arpl
pop
or
adc
adc
sub
int3
test
sbb
dec
fildll
rol
pop
dec
cmp
data16
add
aas
mov
incl
mov
lock
popa
cmp
inc
fwait
mov
pop
lds
incl
add
test
ds
cmpsl
hlt
mov
scas
stos
xchg
xlat
pop
push
pop
dec
mov
xor
add
inc
pusha
mov
adc
pusha
sbb
sbb
push
sub
mov
aas
movsl
sti
mov
shll
mov
inc
add
add
push
jns
rclb
and
sbb
xchg
iret
and
inc
push
push
cmpb
icebp
xor
gs
xor
mov
loopne
in
test
shl
xchg
cmpsb
mov
dec
push
pusha
mov
xchg
ljmp
adc
fcoms
jle,pn
cli
cmp
pop
adc
loope
paddsw
jo
es
dec
push
data16
xor
mov
jno
mov
cmp
subl
dec
pop
pop
lcall
adc
popw
xor
push
adc
pop
sti
add
nop
push
jb
out
daa
xchg
lret
xlat
sti
loop
sub
add
jno
iret
in
and
xchg
inc
xor
fidivrl
push
ret
cmp
sbb
mov
inc
nop
arpl
inc
jbe
test
test
dec
daa
lret
fsubrp
sahf
in
pushf
push
cmp
cmp
sti
dec
mov
mov
xchg
mov
or
dec
adc
mov
lret
xchg
pop
bound
leave
pop
fwait
cld
in
pushl
test
js
inc
push
xchg
sub
xor
insl
out
bound
outsl
fucomip
pop
popa
gs
pop
sbb
pop
or
xchg
add
addr16
inc
or
aam
mov
icebp
cmp
idivb
clc
adc
jno
ds
push
mov
in
add
mov
mov
orb
fildl
mov
adc
sbb
iret
adc
stc
or
lds
and
push
into
repnz
cmc
into
sub
push
sub
outsl
jbe
jmp
sub
or
cmp
dec
and
pop
cs
loope
mov
dec
mov
jge
scas
push
and
std
xchg
inc
aaa
jne
addb
pushf
inc
lcall
or
inc
sbb
push
call
cmovs
mov
pop
sahf
test
inc
push
pop
lods
smsw
orb
adc
hlt
vsqrtsd
push
sbbl
out
push
add
fcoms
push
push
push
or
mov
fs
jne
lock
ja
loop
lcall
rol
push
ds
adc
in
test
jl
fistps
pop
sti
cltd
pushw
cmp
dec
imul
shlb
shrb
loopne
xchg
fisubrs
das
lret
adc
mov
jle
dec
rolb
adc
jb
adc
xor
pusha
push
js
out
hlt
add
and
dec
jne
sub
pop
lea
sar
add
cmp
dec
mov
mov
imul
jecxz
lret
loope
inc
adc
push
ja
repz
inc
mov
fidivrs
or
pop
mov
enter
insl
and
aad
stos
addr16
iret
and
add
mov
in
loopne
divb
mov
mov
pop
lock
sti
lcall
mov
jns
lea
mov
inc
jae
outsl
fsubrs
dec
add
bound
add
fisubrs
push
mov
jle
xor
push
cmp
test
sub
jnp
sub
divb
xchg
lahf
mov
sahf
hlt
push
mov
mov
test
mov
aam
xor
insb
xchg
cwtl
dec
push
mov
push
test
into
in
stc
mov
icebp
stc
or
cli
fs
arpl
push
xchg
jns
sahf
jae
lahf
jp
iret
or
jb
push
sbb
jecxz
xor
xor
cmc
mov
inc
icebp
gs
dec
hlt
push
mov
test
setbe
mov
loope
cmpsb
and
cmp
mov
adc
fldt
mov
add
mov
add
xchg
push
push
push
adc
or
inc
repz
insl
lods
push
push
pop
jmp
sub
sti
or
mov
scas
imul
arpl
or
jns
xchg
dec
call
sbb
cmc
out
add
or
clc
lea
test
pop
outsb
pushf
bound
xchg
daa
add
mov
insb
jge
clc
mov
pushf
insl
shlb
sbb
mov
cld
inc
add
mov
cmpb
sbbb
and
mov
in
inc
and
mov
sub
dec
imulb
repz
adcl
add
call
pop
pop
ja
xorb
xchg
push
shr
cltd
jle
sub
mov
dec
popl
or
pusha
sarl
mov
insl
push
pop
push
mov
enter
in
mov
mov
mov
daa
or
jmp
aaa
fs
out
iret
or
pusha
es
clc
push
es
aam
in
test
and
jo
cmpsb
ficompl
mov
adc
sbb
pusha
push
ljmp
xor
fbld
fsubs
cmpsb
dec
std
jmp
mov
inc
jmp
sub
inc
int
inc
xchg
xchg
mov
repz
stc
in
inc
and
stc
arpl
lods
jno
push
sub
jle
hlt
pop
jae
insl
mov
mov
int
fs
imull
out
sub
out
push
pop
cld
and
xor
add
xor
cmpsb
sub
repnz
xor
fsubs
sbb
cs
xlat
sub
sub
mov
neg
shl
cltd
mov
dec
mov
mov
push
add
mov
clc
jp
rorb
stc
aaa
pop
fstpl
insl
aad
xor
or
imul
lock
adc
into
mov
arpl
leave
xlat
jno
fisttps
add
mov
add
xchg
shrl
mov
mov
cmp
outsl
in
sub
and
jp
les
movsl
pop
sub
cmp
jne
dec
in
fcompl
stos
mov
test
cmpsl
pushf
add
mov
mov
push
sti
sbbb
daa
cmc
aas
lret
xor
or
repz
push
cmp
push
mov
subl
scas
hlt
jg
je
aas
int3
popf
adc
inc
subb
add
fimuls
iret
scas
ja
jl
inc
mov
push
lret
test
lret
mov
sub
push
dec
je
add
dec
icebp
outsb
adc
dec
std
dec
push
jge
mov
mov
dec
lret
shlb
cmpsl
mov
inc
sti
push
adc
dec
pop
jae
insb
stos
mov
dec
shl
loop
inc
aad
xchg
fnsave
or
lock
cs
test
fists
shl
inc
out
outsb
lret
popf
pop
adc
addr16
sbb
dec
xor
sar
ljmp
jae
jmp
or
sbb
ret
out
push
push
xor
mov
push
loope
mov
dec
movsl
push
nop
or
movl
int3
pop
sbb
comiss
addr16
in
mov
scas
push
mov
les
cwtl
adc
add
mov
mov
push
cmp
stc
dec
iret
test
jne
or
or
mov
rclb
repz
ror
and
adc
jbe
enter
nop
shrl
shlb
lods
jp
pusha
pusha
xchg
int
arpl
cmpsl
das
lods
mov
dec
jo
xor
sbb
jmp
loope
inc
loop
mov
inc
and
mov
mov
xor
jnp
popa
add
add
lods
sub
xchg
jle
add
push
mov
es
lret
push
frstor
or
shrl
mov
adc
popf
or
sub
inc
lcall
roll
pop
xor
imul
popf
js
int
imul
jge
shll
lcall
pop
sbb
or
mov
cmp
lods
in
xor
in
into
jle
xor
sbb
inc
das
pop
lods
pop
call
aas
es
pop
sub
jb
addr16
mov
mov
rolb
es
sbb
mov
xchg
push
mov
push
xchg
cmpl
mov
mov
popf
sub
dec
subl
or
pop
fbld
pop
xor
cwtl
mov
repnz
cmpsb
into
lods
arpl
xor
mov
int3
add
cmp
fs
scas
xchg
shlb
pusha
fucomi
jmp
lret
jle
xchg
imul
out
sub
mov
cmc
imul
repz
les
mov
test
sbb
dec
or
xorl
scas
gs
das
add
jmp
add
jne
mov
ret
jno
xchg
cmpsl
adc
mov
in
inc
jle
loopne
aaa
add
jg
mov
fidivs
ret
repz
sbb
sub
lahf
outsl
or
ret
mov
sub
adc
lahf
out
fs
jo
call
lods
sbb
fwait
rorb
adc
inc
jb
push
dec
jle
and
cmp
int
and
enter
sub
xor
push
out
mov
xlat
test
fimuls
mov
int3
mov
inc
outsb
sub
mov
and
in
repz
test
mov
adc
pop
pop
adc
jno
sub
cmc
stos
adc
fs
push
int3
xor
scas
xor
loope
xlat
pop
xor
je
mov
andb
sub
fs
push
mov
xlat
inc
and
xlat
inc
jne
std
dec
test
sbb
and
and
cmpsb
cld
lret
fsubs
imul
mov
std
rorb
movsb
dec
mov
cmpsl
clc
dec
outsb
pop
lcall
push
xor
es
push
shrb
mov
push
and
test
addr16
iret
xchg
mov
adc
sbb
adc
adc
lcall
out
cmc
mov
xorl
lret
sbb
or
pushf
push
fnsave
jae
dec
lcall
pop
cltd
je
out
in
add
sbb
lock
cmc
mov
popf
jbe
jno
add
adc
dec
xchg
lahf
add
jnp
cmp
push
cwtl
iret
pop
sub
and
adc
xor
test
xor
fnsave
mov
add
xor
or
mov
mov
ret
sub
push
lea
lods
and
lods
jo
jne
xor
dec
cmpsb
sub
shll
scas
jne
scas
inc
inc
cmp
add
das
data16
test
pop
inc
push
out
mov
pop
fsts
rolb
pop
xchg
outsb
jg
inc
mov
and
sti
pusha
testl
pop
sbb
inc
dec
push
fsincos
int3
jns
add
ret
pop
test
fidivl
insb
pop
cmp
pop
jne
pop
arpl
test
aad
popl
call
add
fsts
and
push
gs
scas
pop
mov
push
lods
lea
icebp
fmul
or
and
movsb
and
clc
pminub
iret
pop
inc
adc
jecxz
inc
jb
icebp
adc
call
push
int
in
xor
in
and
adc
mov
mov
or
fcom
adc
je
inc
jge
cmp
pop
push
mov
lods
arpl
pushf
xchg
cmp
cmovae
mov
fbld
pop
in
call
pushf
adc
arpl
xchg
popl
test
or
imul
xor
out
sbb
xchg
lahf
adc
adc
repnz
ds
pop
mov
movsb
fldt
pop
out
movsl
add
mov
jmp
pushf
shll
outsl
mov
jmp
stc
or
lds
mov
lods
ja
call
imul
add
dec
repz
cmp
adc
clc
sbb
lret
setnp
sbb
fucomi
mov
mov
and
cmc
sbb
and
fldl
out
xchg
sbb
in
rolb
fisubrs
jns
pop
imul
sub
adc
scas
clc
ljmp
rclb
or
fwait
push
cwtl
gs
pop
cmp
cmp
sbb
push
push
jae
ljmp
push
das
or
and
imul
sub
jo
sub
cwtl
mov
mov
cmc
andb
loopne
mov
bnd
call
das
push
sub
out
jae
jae
sbb
or
inc
pop
and
jle
push
jbe
hlt
stos
xabort
repnz
dec
push
mov
dec
mov
dec
add
mov
jae
sbb
sub
sub
xchg
inc
mov
cld
adc
pop
test
mov
test
add
add
bnd
daa
rcrl
add
fdivs
in
pop
bound
lret
mov
dec
stos
jns,pt
pop
or
add
add
and
push
dec
sbb
adc
call
mov
lods
stos
xor
mov
sbb
pop
sub
sub
iret
daa
pop
ret
popa
xchg
fsubrl
jle
ret
sub
sub
cmc
setns
mov
add
testb
dec
in
mov
fwait
int
into
push
into
insb
test
or
pusha
cmp
movsl
and
add
jno
sahf
jle
in
or
lahf
testb
mov
aas
xchg
mov
outsb
pop
into
sub
cmc
xchg
repnz
das
insl
in
addr16
test
or
ja
orb
xchg
rcll
and
xchg
add
mov
mov
je
mov
fistl
jo
add
jl
xor
cwtl
lcall
pop
nop
call
nop
shr
adc
popa
aas
cmp
jo
andb
test
sbb
jg
dec
push
fwait
mov
cmc
lret
ret
repz
jp
test
pushf
pop
leave
clc
xchg
iret
data16
or
sub
insb
pop
shrb
aam
push
daa
sub
shlb
sub
mov
xor
loop
dec
or
ss
adc
mov
flds
push
loope
jge
sti
daa
xchg
lahf
mov
push
or
jno
cmp
jno
das
xchg
lods
pushf
leave
push
push
mov
jnp
xor
mov
sub
push
push
lret
jae
or
cmp
mov
hlt
adc
lcall
pop
out
add
shll
mov
enter
mov
jg
mov
imul
outsl
in
mov
sub
jmp
push
shrb
and
iret
sahf
mov
addr16
inc
mov
loope
fbld
jne
add
lcall
sahf
mov
shr
lret
mov
lods
dec
in
fcomps
js
jnp
sub
pop
ficompl
jp
mov
push
dec
iret
insl
ret
push
lahf
cld
push
cmp
inc
pushl
nop
add
stc
fildl
sarb
push
in
insl
xchg
and
xchg
shrl
push
inc
fdiv
repnz
std
xor
aaa
sarb
fiadds
adcl
add
gs
adcl
je
nop
into
inc
and
push
push
add
or
jecxz
push
pop
les
mov
pop
out
enter
popa
lds
sbb
cltd
in
push
jbe
sarl
out
ret
int
rcl
daa
push
adc
xchg
dec
mov
lret
mov
and
lahf
mov
fcoml
into
das
mov
jge
sbb
mov
aam
push
lret
add
negl
cmp
add
xor
sbb
or
adc
test
imull
jbe
jbe
bound
rclb
jo
push
gs
push
fmul
and
mov
sub
pop
dec
lret
dec
xor
rcrb
push
inc
inc
jge
in
push
int
xor
jmp
add
pushf
mov
sub
sar
cmp
sbb
movsl
xor
sub
add
pop
jbe
inc
or
dec
xchg
inc
out
je
rolb
repnz
int
andb
mov
daa
cmp
das
shl
mov
jae
mov
bound
and
mov
push
addr16
std
add
or
mov
in
addb
ja
mov
std
cmpsl
add
mov
js
popa
pop
and
in
lahf
sahf
addl
adc
test
fnstenv
in
icebp
add
push
and
roll
ljmp
test
out
and
dec
or
rorl
ja
xorl
mov
das
fsubrl
jnp
jns
xchg
cwtl
in
movmskps
xor
clc
pop
or
pop
les
sarl
jp
xchg
fs
or
jmp
imul
popf
test
jmp
enter
fildll
cmp
cmp
adc
inc
mov
dec
ret
lret
push
inc
sbb
and
push
sbb
lods
pop
loope
aaa
loopne
add
fwait
jp
add
mov
mov
outsl
lret
pop
decl
jns
cltd
or
cmp
mov
inc
push
data16
add
mov
mov
mov
sub
xor
sahf
cmp
dec
mov
test
adc
xor
mov
rcll
jle
mov
push
add
push
bound
nop
jmp
lret
shll
jecxz
sbb
push
mov
pop
xchg
push
adc
iret
jb
pop
fdivl
sbb
pushf
inc
jb
movsl
movsl
scas
rcr
or
lock
jge
mov
jmp
pushl
adc
outsl
dec
and
xchg
das
dec
or
jmp
lock
mov
sub
jae
ljmp
lods
lahf
test
icebp
pop
adc
mov
and
in
mov
inc
inc
adc
sbb
test
aam
push
out
dec
jp
jg
roll
arpl
shrb
sti
pop
imul
xchg
outsl
cmpsb
jns
mov
add
lret
sbb
in
mov
cmp
mov
mov
xor
lret
mov
scas
ja
cltd
or
jmp
out
mov
xor
jl
out
jg
push
pop
jg
jl
mov
xor
sub
aaa
clc
pop
stos
test
push
mov
dec
imul
fstpt
filds
ret
shlb
fildll
lret
cmp
in
inc
pop
and
aam
and
shrl
dec
adc
outsl
push
cli
push
jne
pop
scas
inc
and
sub
ja
dec
sub
aaa
sti
sbbl
das
test
sub
push
js
push
orb
xor
xchg
rcl
jbe
enter
in
add
sarb
fdivl
imul
xor
adc
fisttpl
dec
jle
lods
push
lahf
cmp
mov
lods
ss
dec
adc
fnstsw
mov
mov
cmp
addr16
push
shrl
shll
mov
jne
cwtl
sahf
inc
or
pop
mov
lcall
sub
mov
mov
inc
or
or
lret
cwtl
js
xchg
test
adc
and
mov
mov
arpl
mov
ss
rcr
sbb
push
sahf
adc
push
bnd
sbb
inc
dec
adc
mov
call
aad
xor
xor
pop
push
pop
or
push
das
and
xchg
ficompl
xchg
sbb
sbb
jl
cs
in
push
xchg
stos
scas
lret
in
sub
inc
mov
int
in
push
mov
mov
pop
jno
in
or
dec
push
mov
mov
push
rclb
fbstp
mov
xchg
jle
push
push
stos
jmp
mov
test
stos
popa
pushf
mov
jge
test
jnp
rcll
pop
and
xchg
scas
dec
xchg
imul
sub
xchg
fst
cwtl
fbstp
aam
call
sub
shrb
sub
ja
sbbb
push
enter
mov
lea
leave
setne
insl
push
sub
pop
stos
cmpsb
adc
lds
mov
jno
mov
add
pop
mov
int3
sbb
pop
push
sbb
fadds
and
inc
inc
add
push
sbb
xor
sbb
mov
ret
xchg
outsb
mov
in
inc
cld
mov
add
les
dec
sub
scas
icebp
jno
xchg
mov
es
addr16
dec
mov
divb
outsb
xor
aaa
int3
add
into
inc
pusha
test
movsb
scas
mov
sbb
aam
mov
out
addr16
aad
not
pop
mov
mov
pop
inc
adcb
in
les
pop
loop
mov
sbb
mov
js
repz
xchg
stos
jbe
pop
inc
add
bound
mov
dec
pop
mov
lea
mov
xchg
outsl
dec
shrl
xchg
mov
aas
insb
dec
lods
aad
icebp
xor
lahf
jg
bound
in
stos
sbb
rcrl
pop
adc
fcompl
jg
push
ljmp
push
data16
test
push
sbb
outsl
push
roll
xchg
jnp
pushf
jae
bound
sub
idiv
sbb
jnp
add
mov
aam
movl
fs
in
fsubs
cwtl
sbb
pop
insb
mov
xor
cmp
mov
insl
cmpsl
pusha
lret
insb
xchg
stos
fildll
or
inc
xchg
imul
mov
orb
mov
enter
js
mov
jg
jnp
lahf
push
xor
add
es
sbb
adc
inc
outsb
push
mov
icebp
add
lret
arpl
mov
lds
daa
mov
movsl
js
filds
xor
loopne
push
test
pop
aam
popf
xchg
dec
xchg
cmpsl
shl
ss
out
pop
jno
mov
jns
jecxz
int3
cmpsl
cmp
fistpl
sbb
rclb
cmp
mov
cmc
loop
enter
push
ja
push
push
adc
jae
push
xchg
outsl
pushf
gs
mov
pushf
jnp
shlb
push
push
push
xchg
dec
pop
mov
push
dec
jae
xor
sbb
cmp
notb
dec
ret
mov
xchg
lcall
xor
dec
sbb
sub
ljmp
iret
rcll
pop
inc
leave
mov
xchg
push
popa
inc
xor
xchg
leave
adc
mov
pop
ret
lret
pop
stc
mov
aaa
icebp
test
xor
int
mov
xlat
xchg
mov
fwait
xchg
push
bound
int
div
mov
fcmovu
enter
xor
popw
mov
sbb
or
rcrb
movsl
pop
lock
mov
add
sbb
sub
mov
aam
mov
stos
in
or
std
mov
pop
sbb
roll
push
adc
mov
mov
adc
mov
pop
sub
xor
pop
aad
push
bound
in
gs
push
dec
lret
xchg
or
mov
cmp
push
add
mov
mov
jge
cmp
fwait
js
or
push
in
fists
repnz
arpl
jmp
dec
int3
out
inc
inc
negl
sti
ja
and
out
xchg
aam
test
fcoms
test
out
mov
mov
cmp
xor
in
and
sub
sbb
pop
and
addr16
jae
aaa
jecxz
in
loope
mov
loope
dec
int3
sbb
dec
loopne
mov
mov
adc
roll
das
inc
out
inc
cmc
pop
ja
in
lods
popa
repnz
jg
gs
sub
nop
mov
or
jnp
icebp
pop
imul
mov
dec
pushf
movzwl
sub
fcmovnu
or
lods
mov
in
adc
shlb
ret
popa
pop
adcb
xchg
push
lock
jge
stc
mov
push
stc
cmp
sbb
insb
iret
jmp
mov
fisubrl
decl
dec
sbb
stos
mov
mov
aas
xlat
mov
popf
inc
in
js
lea
adc
push
aaa
add
xchg
xor
mov
mov
xor
lods
mov
out
popl
jecxz
insb
leave
ja,pn
icebp
repnz
lods
or
cs
jns
stos
cmp
int3
inc
jp
dec
sar
imul
iret
sti
cmp
mov
ja
sbbb
mov
lods
jmp
jns
stos
out
frstpm(287
inc
jno
repz
mov
sbbb
mov
xchg
popa
icebp
inc
fwait
inc
sbb
inc
xchg
fucomi
jl
and
hlt
insb
push
mov
cmpsb
jbe
cmp
sub
or
popf
sbb
inc
scas
push
inc
mov
lcall
subb
mov
jbe
mov
test
sub
or
incb
cmp
inc
push
cmpsb
dec
jb
pop
mov
and
sub
ret
daa
test
cltd
cmp
dec
lods
mov
iret
sbb
pushf
adc
inc
inc
xor
loop
arpl
mov
xchg
adc
adc
imul
sub
push
xchg
movsb
ja
push
int
scas
mov
inc
pushl
adc
out
js
movsl
dec
scas
nop
cld
xchg
imul
push
dec
pop
into
andb
or
jmp
or
jns
stos
adc
negb
mov
cld
jmp
xchg
negb
adc
mov
add
shlb
in
movsl
sarl
lea
data16
arpl
pop
push
xchg
enter
lret
mov
sbb
adc
js
imul
leave
movsl
xchg
lods
adcl
hlt
lahf
add
std
dec
jne
int3
jne
stc
in
cmpsl
adcl
js,pn
int
jne
std
enter
and
outsb
mov
aas
inc
lret
stos
or
mov
cli
ret
adcl
insl
sub
mov
sahf
pop
cwtl
mov
jecxz
mov
notb
shll
add
adcl
adc
lret
and
jne
dec
out
imul
sbb
mov
push
cmp
js
das
dec
es
lods
and
and
fisttps
aam
add
adc
cmp
fmull
sbb
pop
jb
mov
jnp
adc
add
scas
sti
mov
inc
lcall
jl
test
test
rcr
pop
fstps
cmp
js
inc
das
int
std
xchg
or
mov
add
or
dec
adc
mov
dec
in
cmp
popf
mov
das
dec
inc
int
add
loope
cmpl
push
mov
xorb
leave
rclb
lahf
and
sbb
cmp
cmpsl
dec
add
loope
and
pop
inc
add
bswap
and
mov
es
fwait
loop
int3
jecxz
and
bound
jne
cld
sbb
fs
out
mov
clc
and
imul
lret
and
pop
xchg
xchg
push
ret
adc
pop
sbb
mov
mov
and
jne
jg
and
mov
add
pop
pop
add
mov
adc
in
sub
sahf
cltd
repz
xlat
mov
ljmp
jno
stos
sub
repnz
adc
mov
ffreep
add
jnp
or
ss
or
xlat
xor
out
iret
or
mov
mov
int3
sbb
daa
out
push
cmpsb
and
xor
aas
add
pusha
in
shr
loop
mov
xchg
cmp
cmc
pop
sub
stos
pop
and
insl
sbb
addb
insl
adcb
sub
pushf
ss
jmp
sub
xchg
aaa
push
mov
stos
push
into
cmpsl
fsubrl
dec
das
inc
mov
inc
jno
mov
lret
ficoms
push
cmp
das
fldt
aaa
and
or
adc
int
pop
xchg
repz
imull
inc
scas
add
repnz
jecxz
ljmp
and
lods
pop
iret
mov
push
nop
popf
sub
or
orl
ss
fists
mov
leave
repz
xor
xor
in
sbb
or
subb
mov
jb
lcall
idivb
mov
sub
dec
cmpsb
test
or
fidivs
mov
xchg
imul
sahf
cmp
out
into
es
enter
xor
test
sti
push
fdiv
hlt
adc
ja
aad
add
sbb
fcomp
lahf
mov
mov
stc
sub
mov
xchg
dec
pop
sbb
fists
pushf
jne
sbb
inc
ret
in
cltd
or
jnp
or
push
fnstcw
jmp
xchg
push
dec
inc
dec
mov
mov
inc
or
pop
mov
push
sahf
jmp
and
mov
pop
imulb
mov
imul
push
movsl
adc
cmp
mov
or
rcrl
addr16
xchg
push
inc
out
jecxz
inc
jle
std
in
enter
adc
jb
mov
int3
mov
adc
cld
fcmovnu
stos
xchg
adc
repnz
imul
pop
cmp
dec
pop
cld
hlt
jge
shrl
enter
sub
jle
mov
jmp
sbb
cmp
call
pop
loopne
mov
out
ret
dec
lcall
sbb
aas
mov
fisttpll
aam
jne
popf
xchg
out
lea
mov
fstl
pop
sbb
lret
jmp
sub
data16
cmp
es
dec
inc
xchg
jbe
int3
nop
fcompp
cmpl
pop
testb
in
push
leave
xchg
ficoms
pop
dec
rolb
and
jl
mov
test
enter
adc
dec
or
mov
rcl
lret
sub
dec
mov
sbb
sbb
rorb
lds
push
jp
or
out
xchg
in
and
cmp
fdivrl
insb
jle
cmp
bound
fs
iret
dec
cmp
repz
jns
sbb
pop
test
fldt
jno
iret
neg
aad
push
dec
insl
push
imul
dec
int3
adc
arpl
in
rcrl
or
dec
mov
dec
enter
arpl
test
test
daa
icebp
js
test
fisttpll
fcmovbe
inc
inc
sub
inc
mov
adcb
daa
cltd
inc
mov
xor
insb
iret
lods
cli
in
xchg
inc
into
sub
jo
adc
or
mov
mov
dec
cmp
pusha
ficoms
stos
mov
pusha
xor
mov
mov
mov
jns
popa
aaa
add
mov
mov
mov
sbb
sub
cmpsl
mov
daa
mov
mov
lret
sub
sub
jle
leave
and
mov
seto
jbe
ljmp
pusha
xchg
je
scas
rcr
fwait
outsl
mov
mov
aam
adc
shlb
imul
popa
add
test
xor
fsubs
inc
xor
cmpsb
push
lret
rcrl
mov
cs
in
negb
icebp
or
add
hlt
fnstcw
in
jne
dec
mov
pop
mov
cwtl
mov
mov
push
stos
out
orl
outsl
test
jb
jmp
movsb
daa
sub
test
dec
hlt
mov
push
mulb
clc
sub
dec
jmp
cmp
mov
xchg
dec
mov
mov
movsb
xchg
shll
jle
cmp
outsl
mov
dec
call
inc
repz
jo
idivl
xchg
or
mov
pop
notb
js
jne
stos
jecxz
stos
jmp
pop
cmp
push
dec
insl
jl
xor
push
pushf
leave
sub
out
mov
add
dec
xor
cmp
and
out
lahf
jle
roll
sbb
xchg
out
loope
mov
pop
test
hlt
cld
lcall
test
lret
rorl
ss
scas
mov
mov
lods
imul
xchg
and
shr
and
ja
cmc
mov
rcl
pop
pop
ret
inc
stos
pusha
sub
pop
mov
sbb
pop
xchg
fdivrl
xchg
sub
daa
insb
pop
and
lret
and
pusha
add
push
add
leave
inc
in
xor
or
data16
adc
xchg
mov
stos
mov
mov
nop
inc
movb
rcrl
and
test
inc
cmc
sub
and
subl
mov
dec
ljmp
add
addr16
cmp
jp
and
jo
xor
stc
loop
out
sarb
jae
jecxz
aaa
mov
and
push
cmovl
xchg
cmc
mov
mov
xor
jb
shr
adc
dec
in
insb
stos
fdivrl
xchg
or
mov
adcb
mov
call
or
popf
bound
lret
mov
pusha
and
cs
dec
je
fcomip
stos
mov
sub
bnd
cmp
out
mov
sbb
jbe
enter
mov
sti
testb
stos
adc
jl
xchg
jno
xchg
xchg
or
scas
and
jns
dec
jno
cmc
arpl
cmp
ret
lcall
sbb
pop
jecxz
or
xchg
loopne
jecxz
sbb
pop
adc
inc
xlat
test
mov
adc
in
in
add
mov
lods
xor
push
or
xor
js
add
and
je
adc
stos
and
repnz
xor
sbb
xchg
sub
adcb
push
mulb
inc
in
and
xor
xchg
adc
dec
pop
stos
push
xor
add
xor
cmp
and
out
mov
in
pop
aas
lahf
and
popf
inc
test
imul
mov
loopne
xor
stc
sti
adc
shrb
inc
push
ljmp
xor
jmp
cmpsl
aas
xchg
iret
mov
sub
push
pop
and
push
ss
inc
and
dec
and
sbb
pop
lea
mov
in
xchg
and
inc
or
or
sbb
addl
les
add
jecxz
cmp
lea
leave
scas
shlb
or
mov
pop
jo
mov
cltd
in
push
xor
mov
rcrl
outsb
inc
jmp
pusha
testl
ljmp
test
sub
or
inc
push
ja
ficoml
add
rcll
out
subl
into
lds
ljmp
cli
insb
fistpl
mov
jge
mov
pop
ja
sbbb
dec
push
dec
insl
fimuls
daa
adc
dec
mov
and
scas
loopne
es
mov
and
cli
sbb
nop
ds
or
pop
push
repnz
cli
loope
jno
decb
cmpsl
or
mov
xchg
shr
sbb
stc
iret
loope
outsl
sub
adc
ret
sub
inc
add
or
dec
in
mov
cli
out
ljmp
mov
sub
mov
jbe
mov
fwait
add
jne
aaa
adc
call
ss
jns
pop
pop
sbb
js
sti
adc
or
push
cmc
sahf
xchg
scas
sub
pop
mov
mov
cmpsl
sub
mov
notb
je
icebp
addb
xor
add
lock
mov
mov
in
jb
dec
in
push
ljmp
insb
in
inc
incb
xlat
pop
leave
cmp
mov
push
cltd
mov
xchg
jg
shl
jb
int3
mov
into
and
push
cli
rol
sub
shll
add
in
cli
sbb
mov
icebp
inc
in
sub
cmpb
add
popf
adc
push
ljmp
xlat
lds
mov
loopne
std
pop
xchg
sbb
cmc
fiadds
loope
repz
sbb
inc
and
xchg
enter
jne
test
cmc
in
cld
icebp
pop
insl
sub
pop
push
lret
mov
je
movb
push
xor
xchg
jnp
pop
jb
lret
jl
cli
sbb
repz
push
out
sbb
mov
add
ljmp
push
stos
lcall
xchg
in
pusha
and
jg
orb
and
xchg
outsl
dec
mov
fcmovu
jmp
dec
aad
fstpl
nop
arpl
lock
inc
mov
pushf
or
cmpsl
pushf
popa
push
and
int3
xor
xor
ret
sti
mov
dec
cmpsl
pop
loop
stc
scas
mov
push
insb
cmp
push
cmp
mov
stos
jmp
push
push
or
fistps
and
push
cltd
and
xchg
add
adc
xor
inc
out
ljmp
jmp
mov
add
and
aad
push
pop
aam
addr16
fsubrl
or
loope
mov
xchg
adc
inc
les
mov
or
testl
mov
out
int
mov
jp
or
pop
and
jmp
loope
ud0
loopne
into
outsl
inc
dec
cmp
mov
push
aam
cmc
out
outsl
dec
sahf
adcb
adc
push
ret
add
out
mov
repnz
xchg
mov
adc
scas
and
ss
jp
adc
cmp
mov
insb
dec
rcrl
bound
adc
lret
push
add
jecxz
xor
inc
dec
loop
xchg
inc
into
mov
pop
dec
lods
pop
xchg
hlt
sbb
sub
push
fisttps
in
lock
ret
add
and
inc
in
cs
das
or
loopne
enter
ror
xchg
mov
pop
in
outsl
mov
jo
jbe
mov
xchg
fistps
testb
jp
jb
outsl
adc
mov
cmc
and
jo
mov
test
stos
cmp
cwtl
imul
add
add
inc
div
cli
push
jns
lret
jp
jg
sub
and
fxtract
jnp
sub
xor
pushf
xlat
shll
rcll
xchg
adc
ficompl
xlat
pop
int
negl
hlt
push
lahf
ja
jnp
push
jmp
push
push
inc
scas
pop
daa
adc
jno
jp
nop
sahf
sub
and
cmp
cmp
jge
push
mov
adc
xor
aaa
dec
cmp
or
xor
adc
and
cwtl
lods
ficoms
mov
or
sub
xchg
lret
roll
mov
inc
aam
add
fsub
mov
jl
sbb
mov
xchg
or
outsb
sbb
outsb
mov
scas
adc
xchg
cli
push
dec
ja
mov
mov
push
pusha
loopne
inc
push
stos
shll
mov
shrl
ds
out
push
pop
enter
lods
push
lea
pop
adc
sub
sbb
loop
rcll
sub
imul
or
xchg
sub
push
jne
mov
fucomi
es
pop
cmovl
cs
jp
xchg
or
xchg
mov
test
scas
or
adc
out
lds
push
inc
rcl
inc
mov
insb
xor
cltd
push
sub
jno
test
shrb
dec
out
gs
and
ja
xchg
dec
jno
or
push
mov
jg
repnz
jae
jle
movsb
mov
and
push
jmp
and
pushf
xadd
push
dec
jecxz
int3
adc
xor
loope
mov
or
and
into
adc
fisttps
push
int
push
shll
hlt
movsl
ljmp
rcr
in
lea
adc
jae
mov
mov
insb
inc
decb
rcl
lret
inc
cwtl
pop
add
out
shll
and
pop
xchg
xchg
mov
inc
aam
lcall
lret
push
jge
js
or
adc
jg
enter
cwtl
leave
push
mov
inc
xor
lock
fnsave
sahf
mov
cltd
leave
subb
sub
mov
div
or
pop
push
mov
mov
push
add
addr16
cmp
mov
leave
aas
movsl
mull
iret
mov
inc
jg
xchg
or
push
loope
dec
mov
sub
mov
and
adc
pushf
push
lahf
dec
insl
int
movsl
mov
stos
push
add
pop
es
loope
mov
xchg
in
sbb
pop
xor
adc
or
or
push
sub
repz
adc
lahf
cmp
push
out
fsubs
xor
imul
lods
xchg
lret
nop
inc
xchg
jecxz
adc
imul
inc
cmp
out
fiaddl
mov
xchg
jne
jl
cmp
dec
mov
mov
push
inc
or
jne
inc
or
sub
jno
add
das
in
pop
inc
and
sub
mov
add
or
jg
jle
jnp
out
dec
adc
xchg
inc
cmp
js
shlb
imul
inc
mov
jle
daa
xor
mov
mov
dec
scas
jb
jl
cwtl
jp
ljmp
add
mov
out
jecxz
int3
popf
push
inc
or
scas
pop
sub
arpl
aaa
inc
int3
sahf
cmp
loope
sbb
sti
pop
shr
fists
fisttps
sub
mov
push
aad
lods
xchg
lea
or
scas
jg
push
pop
fcompl
cmp
push
jl
hlt
notb
jecxz
and
or
mov
sbb
popa
dec
ficoms
in
and
add
frstor
jmp
push
mov
cmp
pop
test
mov
out
lahf
dec
xchg
mov
daa
lods
adc
out
xchg
repnz
fidivrl
out
mov
sub
aaa
lret
fs
repz
lret
pop
inc
xchg
and
sub
fists
mov
and
or
ja
sbb
xchg
mov
aaa
xchg
cli
mov
imul
das
js
pushf
outsl
fcoms
inc
mov
cmp
cmp
lret
inc
popf
push
mov
aas
jne
adc
lods
mov
and
cmp
mov
call
xchg
push
push
ds
jno
jge
testl
mov
orl
adc
push
out
push
push
js
xchg
dec
rorb
in
lods
xchg
jbe
fs
lock
ficomps
imul
add
imul
dec
dec
add
mov
xorb
aas
scas
dec
aaa
inc
cmp
into
mov
mov
xchg
data16
jb
mov
fwait
sub
arpl
shrb
lods
cld
add
daa
mov
enter
and
or
inc
fildll
insl
push
or
xchg
pop
lods
mov
and
inc
in
dec
data16
inc
mov
in
fnstenv
pop
mov
pop
aaa
sub
mov
repz
sbb
fs
nop
pop
cs
cmp
jecxz
cld
ljmp
sbb
jle
push
aas
fsubp
sbb
adc
adc
cmp
cmp
push
or
cmpsl
push
mov
sbb
inc
pop
cmp
pop
in
jl
pop
sarl
add
lahf
mov
rolb
lods
push
out
fsubrl
lods
xchg
adc
icebp
lret
cmp
jnp
or
inc
xchg
int3
mov
lds
push
hlt
js
mov
clc
popf
out
mov
fisubrl
mov
sbb
inc
shll
repz
xorb
mov
sbb
cltd
lret
dec
mov
scas
jp
ss
mov
xlat
cltd
stos
lea
and
xor
aaa
test
mulb
popa
mov
addr16
add
icebp
jae
das
test
out
lods
xchg
std
leave
imul
adc
testl
or
jle
test
sub
and
cmp
mov
rcr
pushf
jns
pop
dec
sbb
js
shrl
lds
sbb
cli
and
jmp
inc
das
push
sahf
pop
mov
scas
xchg
adcl
call
push
xchg
xchg
pop
push
cld
shlb
push
jne
inc
data16
cmp
ds
lock
popa
popf
push
xchg
loopne
add
mov
flds
add
mov
and
shlb
jg
rclb
ret
loopne
cmp
mov
mull
lea
dec
jl
js
ss
push
out
cwtl
out
popa
jae
lcall
cmpsl
push
cmp
sub
shrl
sub
xor
lods
pop
jg
mov
std
jno
movsb
lods
hlt
shlb
mov
sub
jo
fidivs
sub
cmpsl
push
cmpsl
pop
gs
movsb
dec
out
call
arpl
call
inc
lret
pop
xor
pop
pop
mov
mov
xchg
imul
ds
lahf
mov
inc
inc
adc
loope
mov
push
in
ret
inc
in
ficomps
cmp
insl
or
push
mov
xor
sti
sub
add
mov
subl
stos
or
sub
aaa
fmul
mov
add
bound
es
push
mov
in
mov
dec
pop
and
inc
and
sub
das
aaa
sahf
mov
push
scas
cmp
or
jl
mov
inc
hlt
jge
rep
xchg
mov
cmp
into
or
pop
add
and
pop
mov
pop
sub
mov
ds
cwtl
sti
pusha
icebp
cmp
outsb
xor
sbb
dec
lahf
mov
mov
push
push
sub
in
scas
jecxz
repnz
push
int
mov
call
insl
bound
ds
int3
inc
jl
rclb
add
mov
pop
mov
hlt
sbb
cmp
aad
xchg
xlat
movsb
orb
xor
or
mov
dec
add
lds
hlt
lods
std
cmc
out
test
inc
jbe
jae
lods
adc
inc
xchg
lock
mov
dec
dec
outsl
mov
cmc
sarb
adc
push
mov
hlt
xor
test
pop
push
pop
inc
stc
popf
xchg
mov
cmp
adc
and
aam
push
pop
add
movsl
fcoms
jae
push
mov
cmpsl
mov
push
push
popf
and
out
jecxz
jo
jl
fstpl
aaa
push
cli
jg
mov
cmp
jne
popa
insb
sub
lcall
fs
mov
adc
pop
inc
and
insb
adcl
pop
push
pusha
mov
ljmp
mov
scas
and
popa
dec
lock
mov
repnz
or
inc
clc
paddb
outsl
sar
mov
or
cmp
cmp
xchg
or
jle
in
push
iret
mov
into
or
and
movsl
sub
aam
ror
in
cmc
mov
dec
lcall
int3
in
lods
mov
cmp
dec
lahf
jnp
pop
sub
sub
inc
out
sbbb
xor
jbe
add
je
fidivl
push
mov
aad
jae
jbe
out
jae
jecxz
leave
dec
or
es
inc
inc
std
shl
repz
dec
add
into
dec
dec
daa
shrb
cmp
jge
xchg
sbb
xlat
jp
cltd
xchg
lods
inc
or
mov
scas
into
enter
test
inc
neg
jno
sbb
sub
sbb
repnz
leave
xchg
mov
rorb
or
adc
stc
divl
shll
mov
into
js
mov
out
jbe
jg
popa
adc
repnz
mov
sub
pushf
xchg
clc
ljmp
jnp
xorb
fstps
rcrl
lcall
xchg
inc
jle
adc
sub
mov
cltd
sbb
cmc
popf
or
jle
mov
sub
cmp
movsb
push
aad
push
jne
mov
ds
out
fs
scas
repz
pop
cmp
sub
stc
sahf
scas
mov
test
lods
xor
popf
push
pop
and
mov
adc
cwtl
and
bound
xchg
pushw
add
cmp
fdivr
ret
mov
mov
pop
insl
ret
sub
pop
adc
push
in
addl
push
jg
lock
adc
jl
adc
lock
pop
jge
test
shr
adc
daa
lret
lds
dec
lea
inc
adc
pusha
add
adc
dec
xor
pop
mov
mov
add
lock
movsl
in
mov
cmp
movsb
outsb
lods
inc
jg
pusha
xor
loop
insl
es
push
push
mov
leave
xorb
hlt
xchg
insb
xchg
cmp
pusha
stos
iret
in
adc
ss
lods
xchg
insb
shll
outsb
jns
push
subl
aad
mov
js
cmp
ret
jae
and
mov
and
test
imul
andb
setbe
decb
push
iret
out
pop
rorb
mov
lret
in
push
cmp
and
out
xor
add
jb
lock
arpl
popf
xchg
lea
outsb
xchg
aam
or
cld
xor
inc
pop
mov
mull
push
ds
cmp
mov
fwait
popa
scas
int3
jle
xchg
and
fisttpll
push
cwtl
or
push
cmp
sqrtps
sahf
insb
ret
cmp
inc
dec
iret
call
mov
fs
cmpsl
mov
hlt
enter
xor
xor
daa
adc
sbb
sbb
mov
pop
and
stc
jp
mov
cmp
insb
test
push
pop
xor
sub
push
into
mov
pop
mov
inc
and
xchg
mov
js
pop
call
aaa
in
xor
lcall
loop
jmp
sbb
mov
pushw
shlb
nop
test
mov
jno
sbb
jno
xor
inc
jp
or
aam
xchg
nop
lea
cli
pop
or
stc
lcall
pop
sub
sbb
stos
mov
adc
pop
iret
xor
iret
std
push
cmp
push
cbtw
mov
adc
dec
sbb
lea
es
popa
test
imul
mov
dec
jmp
jns
in
or
arpl
jmp
in
and
dec
dec
xchg
dec
mov
in
pop
jo
or
faddl
inc
push
inc
ret
sbb
and
inc
mov
and
sbb
or
mov
fdivl
push
je
or
jp
test
add
cmpsl
fnstsw
push
in
adc
mov
aas
ret
fsubs
aaa
cmc
adc
mov
dec
jno
ja
or
shll
mov
loopne
cmp
pop
mov
ljmp
clc
push
sbb
popa
mov
mov
je
ret
outsl
sbb
movb
sbb
js
std
in
xor
mov
cmp
xor
ljmp
addb
push
enter
xor
mov
add
and
adc
pop
fistpl
popa
rorl
int3
and
leave
pop
sbb
stos
push
adc
inc
shrl
xchg
sbb
inc
mov
push
pop
bound
test
mov
das
cmp
sub
je
clc
pop
xchg
flds
pushf
jle
xchg
push
out
outsl
insb
pop
and
cld
insb
sub
or
lcall
cltd
loop
push
movsb
lods
test
hlt
imul
jo
dec
int3
jnp
rolb
mov
ret
scas
lds
dec
aas
dec
push
out
in
js
mov
movsl
clc
fbstp
add
cmp
int3
mov
add
push
mov
cmpl
ret
mov
neg
xchg
mov
mov
jecxz
std
lcall
pop
sbbb
push
push
mov
pop
and
jecxz
mov
ljmp
ret
pop
lds
mov
mov
outsb
xor
mov
lea
lcall
lea
mov
shrb
push
nop
push
cld
xor
push
sub
adc
test
cltd
clc
lock
leave
jle
mov
imulb
push
sbb
nop
ficoml
test
dec
adc
bound
sbb
cmp
dec
ret
iret
mov
pcmpeqd
mov
mov
clc
adc
xor
add
sbb
mov
setg
sub
fs
test
dec
lea
xor
repnz
ljmp
mov
das
inc
fs
daa
mov
and
xchg
loope
mov
xchg
pop
inc
fiaddl
dec
xchg
cmp
lret
or
push
xchg
mov
cmp
lock
adc
xor
in
mov
or
ret
xchg
int3
inc
push
outsb
xor
out
icebp
test
or
clc
gs
aas
sub
popf
dec
jg
mov
rorl
stc
int3
mov
dec
loop
sbb
lret
mov
mov
mov
add
je
dec
mov
add
dec
sbb
stc
or
repnz
fmuls
and
cmp
scas
pop
xor
xor
dec
movsb
movsl
xchg
std
adc
cmpsl
mov
cltd
rcrl
inc
fbstp
push
insb
inc
cmc
cld
mov
or
jno
inc
sbb
addl
cld
loop
push
push
imul
inc
jecxz
jl
cmp
lcall
je
xlat
les
jmp
ss
shrl
jo
inc
jge
and
fwait
cmp
lods
mov
icebp
dec
fnstcw
fldln2
xor
mov
ja
das
ret
clc
pushf
cltd
dec
mov
stos
jl
add
add
out
outsb
and
ret
mov
cli
out
jmp
enter
call
rorb
ds
call
sbb
in
mov
pop
mov
mov
adc
inc
in
cld
jle
xor
dec
xor
scas
out
pop
jae
dec
jns
mov
sbb
mov
mov
dec
push
pop
jb
sub
push
dec
leave
adc
mov
fisubs
push
xor
mov
mov
stc
sub
fdiv
xchg
jp
mov
sub
lret
sub
jmp
add
fistl
mov
add
add
outsb
mov
and
push
sbb
pop
inc
jno
pop
int3
fsub
jp
insl
dec
pop
jne
arpl
ljmp
aaa
flds
loop
hlt
inc
pusha
scas
xchg
shlb
add
cmc
adc
xchg
icebp
out
and
dec
and
sbb
dec
loop
outsb
xor
dec
cmp
cmp
packssdw
cmc
mov
and
js
into
fldenv
mov
lret
out
jp
inc
loop
cltd
gs
mov
out
sahf
repnz
in
adc
mov
aam
inc
mov
jle
dec
jmp
jl
pop
mov
out
xchg
pusha
outsl
mov
xor
xchg
add
sub
cmp
push
xchg
aas
rorl
xor
mov
loope
and
inc
and
test
mov
lret
jo
mov
push
inc
pop
jecxz
fstl
fwait
insl
ror
jmp
addb
push
fadd
mov
fldenv
sbb
dec
in
loope
sub
data16
push
test
adc
enter
fildll
test
push
in
stos
xchg
push
pop
stos
jb,pn
pop
aas
and
xchg
in
frstor
nop
sahf
push
jo
mov
adc
mov
lret
push
mov
shrl
outsl
push
enter
filds
icebp
int3
lds
push
xor
sbb
in
sbb
xchg
dec
insb
inc
jmp
and
push
push
packssdw
inc
sub
cmp
sbb
mov
add
mov
loope
mov
push
cld
adc
and
jae
vminpd
push
xchg
adc
imul
inc
lds
data16
or
outsl
lcall
popa
xor
int
push
lahf
filds
jp
test
js
push
sahf
lds
add
es
js
sahf
add
mov
mov
shlb
out
sbb
push
das
cmp
andb
mov
enter
xchg
xchg
mov
daa
imulb
inc
es
mov
sub
les
cmp
ds
pusha
lret
lret
mov
scas
popa
imul
mov
loop
sbb
xor
out
cmp
xor
cmp
push
test
cld
mov
lret
fstps
xlat
imul
and
imul
jbe
xchg
out
lret
pop
outsb
add
push
daa
idivl
es
scas
jb
lahf
dec
movsl
cltd
lea
mov
popfw
sub
or
adc
jmp
stos
dec
leave
leave
adc
xchg
add
outsb
pop
xchg
incb
pop
scas
hlt
movsl
dec
fcompl
enter
lock
iret
into
inc
aaa
jmp
ret
xlat
cltd
fisubrl
xor
cmpsb
and
adc
dec
imul
jne
popf
mov
add
inc
call
jle
xor
mov
fnstcw
lea
icebp
gs
sbb
push
in
fsubl
lock
decl
bound
je
lods
xor
shlb
pop
dec
xchg
cmp
xchg
dec
sbb
mov
sbb
popf
popf
push
testl
insb
mov
je
xchg
or
les
jbe
nop
hlt
and
dec
icebp
sub
jo
xor
rcrb
cmc
pop
mov
je
xchg
cltd
sbb
arpl
jle
inc
and
movsl
mov
outsl
mov
jbe
xor
addl
xor
test
adc
std
imul
dec
lods
out
jns
cli
fsts
int
pushf
sbb
push
inc
fst
movsb
xor
lods
mov
into
xchg
xchg
decl
or
dec
lods
stc
push
movsl
inc
pop
pop
sbb
mov
xor
jo
mov
lods
test
and
rcrb
add
push
pop
mov
xchg
pusha
mov
jle
sub
add
mov
rolb
sbb
jnp
adc
add
mov
cmpsb
sbb
dec
mov
mov
cltd
shl
inc
dec
test
cs
mov
insl
cmpb
xor
idivl
lds
movsl
aam
or
cmp
stc
fs
imul
imul
fisubrl
dec
icebp
ret
icebp
out
mov
sti
imul
loope
fucomip
fs
jp
sub
mov
movsl
icebp
and
cmpsl
iret
sub
popa
sarb
jge
lods
or
mov
or
pushf
call
mov
mov
sub
je
nop
adc
mov
add
xchg
and
aam
mov
hlt
adc
mov
add
movaps
xlat
push
inc
xchg
inc
cmc
div
mov
sub
mov
aad
mov
push
popf
cli
out
ret
popf
popa
lahf
xchg
sbb
sarb
lahf
ficomps
mov
dec
jp
test
or
fwait
mov
std
mov
aam
std
sbb
into
popa
fst
ss
ret
nop
xchg
sub
js
pop
mov
xor
pop
shll
adcb
lahf
sbbl
sbbl
cltd
dec
out
aad
dec
lods
dec
sub
jmp
inc
jle
cli
inc
push
fbstp
xchg
fs
mov
xchg
mov
cli
daa
add
adc
inc
out
gs
xchg
pushf
mov
sub
call
ret
xchg
adc
xor
jae
pushf
mov
mov
ljmp
dec
add
or
pusha
jne
sbb
fucomi
out
es
mov
cmc
xchg
jo
mov
cs
andl
cmc
push
pushf
push
bound
fdiv
pop
icebp
push
mov
test
sbb
xchg
and
cmp
push
pusha
jo
testl
jne
mov
sbb
movsb
mov
lods
std
sub
repnz
adc
add
pop
mov
iret
fwait
int3
imul
lock
dec
sbb
cmp
adc
sti
jns
iret
fcoms
mov
ljmp
stc
lods
inc
or
pop
pop
mov
ja
inc
xorl
mov
push
psrlw
mov
pop
stc
test
in
aad
adc
dec
mov
mov
daa
adc
or
sahf
popa
xchg
inc
fadds
xor
dec
lret
scas
mov
arpl
repz
in
gs
mov
test
lock
or
push
call
fbstp
testb
out
adc
xor
clc
xchg
outsl
movsl
pop
xchg
repz
imul
sub
lea
push
push
and
mov
or
xchg
pop
hlt
or
outsb
jmp
push
xchg
mov
push
fmul
js
daa
add
je
stos
inc
push
sbb
int3
ficoms
xor
cwtl
dec
insl
fldl
test
icebp
push
jle
mov
or
mov
pop
repnz
mov
lods
int
adc
push
mov
pusha
cmp
fsubrs
stc
mov
arpl
loope
test
cs
adc
shrb
icebp
cmpsb
fidivl
aad
dec
ret
cs
popl
rcl
jg
mov
fcomps
notb
jbe
addr16
xchg
push
xchg
aaa
out
iret
stos
mov
adc
mov
cmpsb
mov
adc
imul
lahf
fs
adc
popf
movl
jbe
sub
stc
ja
jmp
movsl
lods
xchg
mov
pop
cmp
xchg
stos
fwait
dec
or
mov
sub
icebp
sub
jmp
addb
test
pop
mov
cmpsl
mov
mov
sub
rorb
fisubl
ss
push
cmc
idivb
inc
add
fisubrl
cld
adc
pop
call
mov
leave
aas
adc
mov
sub
adc
pop
add
mov
and
jne
xchg
lea
push
xchg
mov
in
stos
mov
je
sbb
into
test
push
test
or
cmp
push
lods
xor
jmp
jns
lods
clc
pop
int
test
adc
jl
dec
lods
lcall
mov
adc
jmp
movd
roll
orl
push
lods
enter
jle
mov
mov
test
dec
mov
inc
fdivp
sub
lahf
scas
cmp
shlb
jae
mov
sbb
rorb
push
sub
mov
xchg
popa
pop
jg
inc
push
push
leave
lret
mov
and
decb
xchg
sbb
xchg
cmc
out
xchg
sub
repz
clc
nop
push
pop
test
pop
pop
into
or
out
outsl
lods
inc
xchg
adc
test
outsb
sbb
mov
lods
add
inc
and
xchg
call
pop
pop
outsb
scas
or
adc
adc
out
sbb
in
repz
in
cs
popa
nop
in
call
js
scas
add
pop
jle
imul
mov
push
insl
ror
loopne
and
dec
mov
or
or
scas
in
push
dec
cmp
xchg
int3
jg
std
movsb
or
fmuls
loope
ret
add
fwait
das
mov
arpl
sahf
dec
push
or
test
cmp
inc
in
xchg
xchg
popf
mov
mov
test
out
jl
jp
ret
adc
adc
fdivrs
mov
arpl
sbb
adc
fisubrl
test
test
sub
jmp
scas
mov
ret
lds
aad
call
cmp
out
mov
adc
rcl
dec
ja
xchg
xor
xchg
and
test
mov
sti
pop
add
test
lahf
push
pop
cmp
fs
push
clc
dec
jecxz
js
mov
push
into
stc
push
sbb
out
xchg
mov
int3
int
jmp
or
mov
xor
andb
in
out
lret
xchg
push
loop
jb
sbb
fs
ja
sub
inc
mov
inc
fcompl
push
int3
xor
sbb
pop
mov
test
cwtl
mov
test
push
ds
ret
ret
jle
jl
out
lods
cmp
lods
psubsw
sub
leave
lods
adc
xchg
repz
enter
sub
out
int
xor
push
stos
fwait
imul
xchg
cmpsl
in
shll
pusha
pop
lcall
lock
movnti
mov
shlb
lods
cs
xor
lret
jb
sub
jg
movsl
sub
fidivl
in
cmp
push
test
icebp
aam
push
push
sbb
xorl
outsl
cmp
cmpsb
sbb
and
call
mov
pop
pop
sub
and
dec
aas
mov
imul
out
mov
addb
mov
mov
jmp
cli
lods
addr16
push
shlb
cmpsl
xor
outsl
mov
repnz
dec
ja
rolb
les
daa
jae
shlb
cmpl
or
aaa
imul
ljmp
mov
or
dec
push
in
pop
int
mov
cld
sub
jg
add
inc
pop
adc
ljmp
push
mov
scas
sbbb
std
cltd
xchg
jg
ljmp
push
movsb
sti
and
cmpl
mov
xchg
jae
fbstp
jns
ja
pushf
lods
cs
xrelease
lcall
cli
es
jle
mov
scas
dec
mov
sti
add
mov
dec
push
lods
pop
int3
fldt
test
aad
loop
clc
sbb
jmp
icebp
push
mov
data16
es
and
imul
loop
and
nop
int
sbb
in
inc
push
jnp
mov
sbb
xchg
or
sub
leave
lock
add
mov
mov
push
loop
or
scas
out
fwait
imul
jle
pop
subl
jb
idivb
aas
xchg
pop
ja
in
dec
test
mov
andl
fldcw
pusha
mov
cld
call
inc
mov
mov
xor
mov
pop
xchg
xor
jecxz
inc
lock
and
jl
sub
sub
push
movsl
jmp
and
push
pushf
mov
int3
lcall
js
aas
mov
xchg
shll
movb
push
cmpsb
insb
adc
mov
push
addr16
es
mov
sub
leave
mov
push
sub
adc
cmp
adcl
mov
jno
or
imul
mov
cmpsl
in
sti
shll
adc
lods
push
xlat
inc
jns
push
pop
sbb
out
cld
out
or
push
inc
lods
sahf
cmp
fsubrl
xchg
dec
sbb
fimull
js
aas
mov
mov
lcall
xchg
das
add
jle
add
aad
jns
into
or
sbb
xor
in
jbe
sbb
aad
xchg
push
or
stos
mov
imul
dec
fcomp
bound
sub
mov
mov
dec
pusha
repnz
out
fcoms
mov
in
call
or
sbb
pushf
pop
inc
sarb
xor
jmp
mov
dec
lods
popf
dec
fmul
jmp
ds
cmp
shlb
or
mov
push
inc
xchg
imul
and
imull
pop
lods
cmp
mov
push
sahf
inc
xor
push
es
loopne
repnz
ljmp
pop
dec
sub
lcall
and
add
shr
das
adc
cmp
cmpb
mov
mov
cmp
loop
or
pop
sub
xchg
xchg
insb
test
aas
aam
into
pop
subl
stos
faddl
push
stc
shl
cmp
sbb
sbb
xchg
jb
fildl
shl
jo
adc
js
xor
sub
and
subb
pop
outsb
xchg
inc
and
iret
pop
in
inc
push
add
dec
out
push
xor
loop
cltd
mov
out
lcall
loope
aad
popa
push
or
mov
or
cmp
clc
sbb
mov
pusha
push
xorl
or
mov
push
mov
jnp
xchg
cmc
jo
lds
test
dec
into
cmc
push
das
push
leave
xor
bound
jmp
pop
or
mov
data16
faddl
rolb
mov
in
push
mov
xchg
decb
or
int3
mov
fdivp
xchg
mov
sbb
pop
push
xorb
or
mov
mov
mov
adc
xchg
dec
test
movsl
out
scas
iret
mov
in
lock
loopne
mov
enter
inc
push
mov
xchg
movsl
push
or
shrb
dec
xor
fs
xchg
cltd
inc
adc
add
sub
sub
xchg
pop
je
inc
ja
sub
pop
scas
cmc
jle
das
ja
inc
jns
test
jbe
movsl
jbe
ss
jns
mov
pop
test
movsb
mov
subl
lods
push
mov
pop
inc
das
stos
negl
and
mov
inc
mov
test
or
jbe
orl
fsubrs
std
fdivs
cltd
sahf
mov
hlt
mov
xchg
and
cmp
aad
stc
shr
sbb
and
je
icebp
ljmp
in
bound
inc
divl
jo
enter
lock
or
pop
cmp
pop
mov
lock
stc
cmc
sti
outsl
rclb
add
loopne
test
and
push
or
inc
lea
sbb
push
mov
clc
add
or
push
iret
pop
popf
cmc
fisubl
in
sub
aad
addr16
scas
jmp
mov
lea
out
cmp
movsl
jp
or
fdiv
orl
bnd
dec
jle
fimull
rolb
fcompl
fmuls
sub
out
mov
pop
call
addb
sbbb
scas
shr
ds
dec
jae
idiv
js
aas
je
xchg
mov
mov
sub
cmc
xchg
cmp
icebp
cmpsl
addr16
pusha
jmp
lahf
cs
mov
pop
fwait
pop
mov
rorb
mov
lret
cmp
dec
lds
xor
stc
mov
out
mov
fstl
testb
adc
pop
ja
aas
ret
arpl
sbb
bound
aad
cmp
movsb
add
add
or
mov
leave
jp
inc
mov
stc
jbe
jl
pop
pushf
cmc
rolb
xor
or
add
incb
scas
add
outsb
xorb
jbe
cmp
test
rorb
jp
movl
insl
test
cwtl
mov
ljmp
out
popa
inc
sub
iret
pushl
fs
jno
lds
repz
pop
inc
push
lods
adc
jp
xor
xor
adc
stc
rorl
fwait
insl
loope
out
push
pop
outsb
or
popf
test
out
mov
outsl
jmp
xchg
sbb
mov
test
mov
mov
push
add
xchg
xorb
nop
lods
cltd
out
sub
outsl
ja
mov
or
sbb
xlat
cwtl
enter
inc
ret
pop
jnp
in
jle
sbb
fwait
sbb
lods
sub
out
das
icebp
cld
jbe
pushf
cmp
and
outsl
adc
mov
sbb
xchg
lds
cwtl
lock
push
std
scas
iret
stos
xor
test
xchg
pop
fst
jge
ja
jmp
lret
cwtl
jle
in
andb
inc
adc
sub
xchg
insl
movsl
mov
jle
jecxz
lds
ret
and
leave
inc
and
xor
data16
icebp
pop
insb
xor
pop
addb
or
pop
scas
and
mov
test
push
into
in
das
sub
stc
cwtl
stc
clc
sbb
push
outsb
mov
ret
inc
ds
and
loop
dec
xor
mov
sahf
out
dec
loopne
mov
lahf
ficompl
dec
jae
push
cli
es
and
iret
mov
sub
lcall
pop
fucomp
push
sbb
mov
in
jmp
push
std
cmp
push
movsb
out
and
cmp
cmp
pop
xchg
movsb
cmp
or
enter
adc
jns
mov
lret
loopne
pop
adc
add
test
stos
adc
cld
ret
jbe
ret
mov
cwtl
clc
jg
ja
in
aas
xor
sub
jmp
insb
loopne
clc
pop
dec
xor
sti
in
or
outsl
pop
shll
test
pop
mov
push
sbb
mov
adc
scas
sbb
arpl
fadds
sub
jge
adcb
stos
xchg
pop
mov
cld
fsubrl
sub
repz
mov
fwait
enter
jmp
incl
cmp
push
jg
iret
add
test
scas
pop
and
or
loop
jp
fs
mov
in
cmpsb
or
fisubrs
xchg
call
push
cmp
xor
lea
or
pop
mov
jnp
mov
jno
out
lods
daa
add
inc
rorl
ret
sbb
fidivrs
dec
ss
pushf
dec
sahf
jmp
mov
scas
xor
insb
stc
adc
loopne
lcall
outsb
cmp
test
mov
ss
dec
addr16
sub
rorb
add
lret
mov
rol
mov
lods
pop
in
mov
pop
out
lea
sbb
jbe
fs
dec
add
pop
dec
inc
sbb
out
ja
stos
js
iret
cmp
adc
dec
lods
push
or
stc
scas
inc
mov
jp
mov
dec
xchg
orl
scas
cmp
and
stc
and
push
push
adc
xchg
mov
inc
sbb
int3
leave
push
arpl
leave
test
daa
adc
lock
push
push
xchg
and
popa
rolb
ss
in
aaa
pop
in
or
push
mov
dec
push
sbbl
mov
mov
inc
sub
ret
pop
cmp
xor
aam
sub
cli
insb
xor
jno
mov
imul
test
test
xchg
call
scas
icebp
test
inc
test
add
cmpsb
push
sti
movsl
mov
xor
ret
rolb
orb
and
jcxz
mov
outsl
icebp
dec
inc
jecxz
call
ret
mov
out
mov
pop
inc
push
clc
sbb
push
sti
pop
std
je
adc
insl
cmp
je
sub
cmp
and
add
and
add
push
mov
mov
jae
insb
ficoms
insb
cltd
test
lret
add
mov
aad
mov
jns
xchg
ja
and
fsubrs
push
adc
jp
leave
pushf
cmp
jnp
dec
hlt
xchg
lret
fwait
por
push
jne
push
mov
scas
movsl
movsl
fnsave
nop
mov
cmpsb
jg
add
lcall
repz
push
push
dec
enter
daa
enter
xchg
fnsave
fists
add
mov
fcmovnbe
test
sub
int
mov
or
push
dec
iret
icebp
inc
pop
das
pop
in
idiv
in
call
xor
dec
cltd
ja
jae
fucom
sub
lock
std
les
popf
push
fdivl
xchg
adc
mov
mov
mov
lcall
xlat
mov
fs
in
pusha
pushf
and
test
pop
stc
mov
sub
push
enter
pop
and
jno
fwait
push
es
lods
add
pop
aam
addr16
jg
mov
adc
cmp
xchg
adc
pusha
mov
sub
push
mov
xor
loope
push
sbb
xchg
add
mov
cmp
scas
pop
mov
cwtl
sarb
out
idivb
aaa
clc
in
fidivrl
mov
push
and
cmp
xchg
sbb
sbb
mov
into
fwait
int3
arpl
cld
idiv
cmpsl
and
jno
mov
loope
add
loop
xchg
adc
pop
cmpsb
adc
loope
fdiv
neg
aas
fstl
pop
mov
sbb
pop
imul
push
mov
inc
jmp
scas
sbb
aaa
sahf
lods
mov
in
sar
mov
dec
sub
or
hlt
mov
andb
stos
mov
lods
scas
lods
xchg
test
pusha
data16
push
stos
test
idivl
js
hlt
clc
mov
arpl
fsubrs
mov
and
inc
aad
or
dec
xor
adc
in
clc
jbe
pop
push
jnp
enter
das
cmp
rclb
bound
ljmp
out
pop
push
stos
pusha
hlt
je
pop
fs
jmp
sub
mov
jne
mov
or
and
into
push
cmpsl
xor
mov
mov
inc
lret
and
shlb
cmp
jno
cmp
fdivl
rolb
mov
cmp
dec
in
jmp
mov
and
cmp
mov
sub
xor
or
inc
pusha
scas
jecxz
mov
shll
lcall
stos
mov
pop
out
ja
adc
inc
notl
jnp
cmp
pop
dec
pushf
stc
mul
xor
aaa
repz
shll
std
jno
into
mov
nop
inc
xor
or
push
sbb
or
popa
popf
jg
add
repz
out
push
rol
adc
or
jmp
fisubrs
inc
bound
mov
scas
std
inc
xor
daa
jb
loop
into
push
pop
or
cmc
push
adc
mov
ret
mov
lea
lea
arpl
fdivrl
cmpsl
mov
nop
push
repz
iret
or
movsl
adc
mov
sub
add
mov
xchg
xchg
mov
inc
test
push
mov
insl
cmpsb
cld
push
rcll
mov
xlat
inc
out
insb
and
sub
divl
aam
pop
int3
pop
call
popa
das
inc
call
push
pop
ljmp
sti
rclb
sahf
nop
test
iret
mov
fwait
popf
js
jl
or
stos
cmp
add
mov
cmp
outsl
jb
and
fsubl
mov
jne
das
xor
jbe
sarl
sbb
inc
sbb
pop
imul
sbb
xchg
push
repnz
pop
subl
sbb
cltd
dec
lods
sub
mov
and
js
ja
imull
rol
adc
popf
sbbb
lods
cmp
repnz
push
lock
fsubl
test
arpl
scas
jge
test
dec
fld
rcrl
std
or
adc
push
enter
adc
repz
repnz
jbe
mov
fnstcw
lret
push
out
push
stos
cmpsb
xor
inc
repnz
mov
jne
or
xchg
adc
cli
xor
pop
xor
es
out
rcr
add
pop
pop
mov
cmp
mov
lahf
ret
dec
jo
add
xor
inc
or
lods
mov
add
es
and
xor
xor
inc
je
push
jb
es
aam
loope
jl
mov
xchg
jp
xor
outsl
pushf
jmp
shr
sbb
jae
int3
jb
dec
lods
xlat
dec
lea
mov
sub
out
mov
sar
pop
dec
roll
aas
jb
es
mov
xchg
cmp
xchg
imul
stos
add
shlb
xchg
jecxz
lahf
jge
je
push
push
pop
mov
and
jne
adc
addr16
jecxz
aam
or
aad
cmp
stos
push
sti
fnstenv
fs
mov
out
mov
sub
push
fimuls
dec
dec
pop
enter
mov
jns
out
out
dec
mov
add
je
jns
cld
mov
enter
stos
mov
jg
jle
bound
mov
jo
cs
and
pushf
fldenv
cmp
out
mov
movsl
fadds
int3
push
and
and
lcall
mov
lods
stos
scas
mov
adc
inc
scas
fnstcw
cli
imul
xor
jl
inc
push
sbb
xlat
and
movsb
aam
in
outsl
andl
and
cmp
aaa
fwait
or
push
lret
ror
fsubs
add
inc
cmp
test
scas
imul
cmp
dec
push
cmpl
mov
xchg
fwait
xor
pop
add
pop
bound
or
jne
cwtl
ja
cmp
inc
sahf
scas
mov
into
imul
xor
jge
stc
lea
in
jg
sbb
rolb
xor
jg
xchg
sbb
xor
dec
pop
ljmp
lret
ret
cmpb
inc
inc
mov
in
mov
adc
adc
mov
test
js
out
jge
add
push
stos
jmp
out
rolb
pop
into
mov
les
mov
jnp
dec
sub
int3
mov
in
in
in
lahf
test
sbb
fsubr
daa
adc
xor
js
jne
add
insl
jne
mov
xchg
inc
imul
xchg
push
in
adcl
and
push
and
mov
xchg
in
cmpsl
cmp
ds
pop
packuswb
push
lahf
js
jbe
insl
fdivrp
pop
cmp
pop
adc
test
jns
insl
mov
andl
fadd
mov
aad
popa
outsl
sbb
mov
cmpsl
in
jle
inc
add
push
pop
push
xchg
sub
loop
pop
es
aas
sub
xor
cmp
jne
and
push
add
pop
mov
lcall
orl
xchg
test
sbb
sbb
sub
pop
pop
mov
jmp
inc
add
pop
out
dec
repnz
test
js
or
out
sarb
out
cmp
add
inc
cmc
jg
mov
mov
insb
push
mov
nop
dec
mov
inc
scas
nop
icebp
cmp
push
add
pusha
mov
out
add
mov
cmp
pusha
movsl
cld
mov
into
std
pop
aam
add
mov
andb
or
add
mov
fistps
nop
xchg
test
es
push
jo
add
push
stos
bound
inc
aas
aas
mov
sti
mov
rclb
rcl
or
roll
fnsave
imul
dec
aam
outsb
dec
xor
jne
fcoml
test
adc
lcall
test
ja
je
shlb
inc
xchg
loop
xchg
mov
in
sub
pop
bound
push
pushf
dec
push
mov
cld
inc
ja
mov
aad
inc
stos
icebp
mov
ss
testb
aaa
aad
hlt
aad
xor
pop
xor
gs
xchg
imul
cld
in
fsubrp
add
sbb
push
xchg
mov
cmpsl
aaa
mov
and
mov
leave
inc
es
jns
mov
ret
and
outsl
xchg
push
stc
scas
les
cmpsb
int3
out
jns
pop
pop
stos
out
insb
or
test
test
pop
pop
push
push
cmpsb
leave
mov
dec
inc
cmpsl
ficomps
jle
xor
sub
mov
cmc
clc
popf
cld
rorb
jl
push
push
sbb
repz
imul
xchg
aas
dec
in
icebp
repz
inc
pusha
inc
aaa
xlat
push
pop
and
jbe
mov
inc
sbb
addl
imul
pusha
cmovno
popa
es
jl
mov
xor
mov
jno
int
ss
fxch
mov
cmpsl
outsl
rcrb
jo
mov
sbb
cwtl
push
push
or
aaa
pop
xchg
mov
jno
ret
or
leave
mov
aaa
adc
loope
popa
jg
push
fs
test
mov
scas
cmp
jne
mov
ljmp
leave
ret
jae
cmc
and
mov
adc
mov
dec
cmp
je
das
ljmp
imul
sarb
fcomps
outsb
push
inc
shrl
cltd
add
sbb
pop
stos
pop
mov
and
mov
jge
test
dec
xchg
add
xchg
add
cmp
ds
gs
dec
js
jle
push
sub
jbe
adc
dec
cmp
sbb
xchg
in
push
and
cmpsl
cmc
or
push
sub
loop
adc
mov
aam
jnp
mov
aaa
cli
mov
or
mov
ds
lock
mov
inc
pusha
clc
and
pusha
movsb
jmp
push
daa
cmc
sub
scas
xchg
in
aas
add
jl
mov
xor
lcall
aas
pop
xor
jo
fstps
cli
loope
fmull
jns
xchg
ret
pushf
pop
or
call
std
push
push
push
shll
lahf
fsts
nop
jno
mov
loop
cmpsb
mov
and
data16
hlt
lea
mov
push
das
fcmovnu
pop
ret
outsb
stos
dec
out
mov
arpl
or
out
adc
or
ret
out
out
push
arpl
insl
imulb
mov
subl
pop
cmp
sahf
xor
cmp
xchg
int3
jo
inc
jno
adc
push
push
jl
pusha
dec
mov
bound
mov
xor
mov
pop
lock
and
stc
push
add
lret
and
fdivl
in
mov
xchg
pop
sarl
cmp
push
popf
mov
xor
pop
and
in
pop
scas
or
add
jmp
fldcw
and
mov
lret
in
mov
xchg
cld
inc
push
sbb
xchg
scas
inc
and
mov
adc
std
pop
in
insl
jmp
das
ret
adc
xchg
add
cltd
sub
xchg
xor
fadds
sti
mov
arpl
data16
push
pushf
pop
or
lock
jno
xchg
cmpsb
sbb
mov
mov
cwtl
push
cmc
push
dec
xor
repnz
xor
sub
jnp
or
fiadds
and
sub
cmpsb
jp
nop
mov
loopne
push
sarl
adc
aaa
mov
test
or
lock
arpl
insl
in
sbb
push
xchg
push
jge
push
pop
loop
mov
outsb
sub
inc
leave
fcmovnbe
lds
push
test
int
fmull
cmp
xchg
cmc
mov
js
mov
mov
push
fwait
mov
pusha
dec
xchg
scas
dec
dec
cli
dec
sarb
mov
pop
jge
jb
and
leave
xchg
mov
xchg
out
xchg
cmp
sub
mov
ret
push
or
push
shl
mov
pop
gs
dec
push
loop
xchg
adc
jge
cmp
dec
push
les
fiadds
insb
mov
jno
stos
fwait
in
sub
sbb
outsb
iret
movsl
mov
dec
and
lret
push
jp
xor
cmp
lock
adc
and
sti
scas
jmp
icebp
inc
lret
daa
xchg
xor
hlt
xor
mov
dec
dec
imul
and
cmp
pop
std
into
movsl
sbb
mov
enter
rcrl
pop
jae
test
add
icebp
cs
mov
xchg
sub
add
ljmp
shl
pop
adc
arpl
mov
lcall
jb
lods
out
push
xchg
fwait
int3
push
hlt
xchg
cmc
pop
das
mov
fdivs
push
inc
mov
fisubrl
shll
scas
sub
repz
pushf
lea
cli
fdivrs
cwtl
cmp
mov
jle
push
es
in
jp
jmp
adc
sbb
lret
movsb
movsb
clc
or
or
dec
jnp
xchg
cmp
sarl
movsl
mov
nop
loop
sub
pop
push
ljmp
stos
rcr
sbb
jmp
iret
push
movsb
push
sbb
lds
mov
jmp
push
ds
cmp
call
xor
daa
call
ficoml
jns
push
leave
sbb
je
mov
add
mov
push
cmp
fisttps
scas
jb
mov
in
and
jge
jnp
jmp
popf
mov
hlt
pop
int
lcall
in
mov
mov
cmp
ss
sti
xchg
pusha
cltd
je
jo
lahf
and
fiadds
sbb
shlb
out
xchg
imul
and
in
xchg
int3
stos
nop
lahf
inc
and
int3
fnstsw
mov
xchg
or
push
pop
lret
cmc
outsb
xchg
push
or
inc
push
cmp
fs
in
mov
inc
push
adc
push
xor
stc
push
int3
xorb
adc
ret
movsl
loop
cld
imul
mov
out
leave
jae
aaa
sub
jne
pop
mov
mov
ret
pusha
cmp
divl
push
xchg
mov
test
cs
cmp
inc
push
movsl
pop
and
inc
dec
fists
push
iret
cli
andb
xchg
nop
shl
cwtl
and
rcl
sahf
push
nop
xor
pop
inc
fs
fsubrl
lcall
and
pusha
mov
adc
cmpsb
aas
mov
inc
cmp
pop
adc
mov
ret
ljmp
faddl
adc
mov
or
add
mov
je
je
popa
clc
mov
arpl
pop
mov
jl
aas
lahf
cmp
jmp
sbb
sbb
jae
xor
ret
sub
jne
mov
and
adc
call
jp
push
lea
jns
mov
jmp
clc
jbe
sub
inc
dec
imul
idivl
mov
lock
lret
push
xchg
verr
mov
in
mov
dec
push
mov
mov
in
call
jno
sbb
dec
aad
mov
cs
fidivs
into
jno
in
div
mov
pop
jb
hlt
das
test
sbb
mov
pop
imul
jbe
mov
adc
pop
push
popf
push
repz
xchg
adc
cmpl
adc
popa
fisubrs
movsb
xor
add
mov
movsl
mov
cmp
sbb
decb
jnp
data16
lock
dec
lcall
sub
pushf
out
js
loopne
idivb
dec
pop
jne
sub
loop
loope
jge
xchg
jns
fs
ja
mov
sub
cmpsb
fwait
into
and
outsb
leave
sbb
stos
icebp
dec
outsb
sub
ret
mov
cmp
inc
pop
adc
lock
sarb
jge
inc
push
popa
insb
ja
sub
push
fdivr
cmc
ja
fs
push
cmp
sbb
xor
or
bound
sarb
cwtl
and
imull
push
dec
iret
mov
push
xchg
push
add
adc
fldl
lods
cwtl
in
dec
nop
cmc
aam
ret
and
in
sbbl
aaa
leave
mov
xor
lods
and
or
jge
ret
cmp
aas
test
es
pop
cmc
or
cwtl
repz
insl
push
sub
or
adc
sbb
imul
fiadds
pop
mov
hlt
push
out
aas
xchg
adc
mov
xchg
dec
inc
sbb
xor
popa
jne
add
lock
add
jo
imul
lret
add
imul
push
cld
pop
rcll
xchg
pop
dec
inc
adc
je
bound
outsl
and
andl
gs
xchg
push
jg
mov
mov
jb
aad
notl
push
push
dec
jno
inc
insb
xchg
dec
mov
sbb
adc
lcall
adc
outsb
mov
daa
sbbl
adc
xchg
popa
sbb
in
scas
cli
add
insb
xor
lods
xor
dec
stos
dec
and
dec
or
jg
leave
cmp
mov
aaa
mov
adcl
mov
jge
push
inc
jbe
jmp
xor
add
flds
shrl
sbb
in
xor
push
in
pop
adc
and
xor
fidivs
rol
mov
les
mov
xchg
movsb
push
xchg
mov
inc
pop
movsb
pop
jl
lcall
or
sbb
mov
dec
pushf
fs
jne
movsl
sti
ficoms
gs
loop
loopne
pop
pop
roll
mov
clc
shlb
inc
sbb
xchg
ljmp
test
jbe
pop
int
leave
daa
cld
dec
fs
push
cmpsl
sti
dec
popa
stos
popf
xchg
pshufw
mov
jne
push
and
and
or
sbb
data16
lea
mov
roll
cmc
bound
jns
sub
ret
jge
push
inc
mov
sub
xor
dec
inc
pop
mov
je
pop
xor
sbb
mov
adc
aaa
movsb
xor
mov
pop
cld
cmpsl
cmp
push
mov
cli
and
in
xor
sbbl
lods
lret
punpcklbw
or
mov
shll
sbb
cld
pop
or
sub
popf
loop
ret
xor
sub
mov
cmc
mov
pop
test
ror
sbb
outsl
cmp
icebp
mov
enter
test
cld
mov
fadds
push
rclb
mov
repnz
mov
cmp
sahf
popa
xlat
sbb
repnz
jg
sarb
cld
shll
push
in
cmpsl
xchg
lea
arpl
add
fcompl
push
ja
mov
fists
mov
js
data16
mov
mov
cltd
pop
mov
or
dec
call
loope
pop
test
leave
cltd
stos
iret
loop
pop
shlb
lcall
sub
loopne
fsubl
fidivs
inc
je
shl
mov
cmp
xchg
mov
cmpsb
mov
inc
ds
cs
sub
jp
adc
jle
adc
mov
pusha
scas
lcall
mov
into
ror
ret
jmp
adc
adc
mov
mov
fldcw
fwait
mov
xchg
arpl
mov
sub
mov
jmp
scas
jmp
std
aam
dec
ret
lret
hlt
imul
inc
push
cmp
mov
pop
outsb
sbb
sbb
aaa
pop
loopne
or
stc
jbe
fsub
cwtl
mov
das
jmp
sub
clc
jmp
fimuls
fxch
les
andb
xchg
js
iret
cld
adc
xorb
xchg
popa
or
add
jge
mov
xor
sbb
hlt
sub
push
pop
cmp
repz
dec
scas
xor
mov
icebp
dec
xchg
push
ficompl
adc
cmp
mov
lods
jp
inc
subb
cld
xor
stos
sbb
dec
call
movsb
bound
out
fists
xchg
xchg
pop
pushf
test
call
loop
aam
or
leave
dec
fwait
cld
push
insb
dec
add
jp
sub
hlt
insl
and
cld
imul
push
shrl
pop
inc
lock
jmp
dec
xchg
xor
clc
mov
inc
push
xchg
inc
int3
mov
and
mov
arpl
cmpsl
fs
or
jmp
nop
movsl
push
dec
sub
pop
xchg
sbb
mov
jecxz
pop
inc
add
add
dec
adc
iret
cmp
push
jge
or
cltd
xchg
sub
push
leave
cli
and
aaa
lea
sub
aam
sub
inc
mov
loope
dec
fdivl
pushl
lods
push
push
mov
push
jbe
pop
pop
mov
sbb
arpl
cmp
mov
imul
mov
xchg
lock
rolb
mov
inc
out
xor
dec
out
push
sub
in
mov
cmp
insb
cmp
lret
pop
xchg
arpl
loop
push
push
in
pop
and
dec
inc
mov
out
push
jno
les
outsb
sub
fidivs
cmpxchg8b
jne
mov
mov
jecxz
sub
sbb
pop
push
mov
js
push
cmpb
sarb
mov
mov
fdivs
jge
ss
jp
jmp
jns
pushf
or
mov
in
inc
call
das
out
sbb
inc
push
stc
je
cld
dec
cmp
adc
mov
mov
adc
dec
xchg
in
loop
outsb
add
cmp
mov
ss
testb
mov
adc
out
repnz
rcll
push
inc
fmull
scas
popa
xlat
icebp
mov
xor
lahf
cli
icebp
stc
ret
add
sbb
je
in
xchg
test
das
js
jl
out
add
mov
movsb
or
inc
ret
mov
in
test
lret
sub
sbb
xlat
mov
jnp
pop
xor
imul
clc
xchg
jns
test
daa
int3
in
pop
bound
push
rolb
xor
in
loop
jbe
js
leave
gs
xchg
in
dec
movsb
push
shll
lods
ljmp
sahf
xlat
out
les
and
jbe
hlt
fsubrs
shrb
mov
or
dec
lret
cmp
dec
sub
cmp
xchg
bound
and
and
mov
or
cmp
clc
movq
mov
xchg
or
mov
pop
cltd
and
mov
jle
adc
insb
pop
xchg
dec
outsb
xor
sbbb
or
pushf
mov
mov
js
push
lds
cmp
aam
adc
pop
repz
mov
xchg
je
sbb
jo
stos
mov
jae
sub
mov
pop
lods
and
cmp
js
test
xchg
xor
fldenv
rcrb
ret
and
cmp
cmp
mov
lea
xlat
addb
inc
sti
mov
in
or
mov
in
addr16
xor
inc
cld
mov
out
adc
and
pop
aad
push
out
lock
stos
mov
shll
xchg
psadbw
shll
push
call
pushf
stc
js
xchg
mov
mov
and
jno
xchg
lock
sub
mov
int
pop
loope
jg
outsl
icebp
xchg
or
xchg
bswap
mov
inc
das
subl
dec
adc
sarb
mov
ficomps
ds
xchg
stc
lret
popf
pop
js
xor
dec
notb
loope
jo
mov
sarl
pop
sti
jns
dec
cmp
fiadds
dec
sahf
js
lahf
clc
mov
scas
cli
push
mov
aas
imul
jno
mov
cmp
sahf
dec
frstor
jo
or
fisubrl
mov
and
icebp
xchg
in
int3
stos
iret
xor
pop
div
addr16
jnp
arpl
xor
sub
cld
fdiv
hlt
pop
adc
pop
out
shrl
xchg
jae,pt
scas
sub
cs
adc
int
lea
sbb
cmp
or
incb
pushf
adc
jb
insl
inc
mov
inc
xchg
jo
pushf
adc
sub
icebp
mov
and
or
mov
enter
jecxz
in
jno
push
lret
add
cltd
xor
std
jns
dec
xor
or
jg
subb
int3
and
addr16
xor
loop
xor
or
sbb
xor
mov
mov
pop
adc
fisubrs
insl
lock
xchg
loopne,pn
stos
stc
and
or
pop
sub
sub
bound
push
and
jmp
push
mov
cmp
jnp
dec
les
lahf
mov
cli
test
pop
arpl
dec
lea
ja
jle
dec
push
dec
mov
iret
pop
pop
loope
ret
sub
push
mov
inc
into
and
mov
jmp
divps
shrl
insb
int
mov
imul
mov
ret
mov
xchg
cmpsl
imul
pop
outsb
ljmp
lcall
lahf
popf
push
jae
pop
sti
aas
adc
adc
ds
mov
popa
pop
sub
xchg
fistpll
lahf
mov
shrb
cmc
sub
jne
xchg
xlat
sub
adc
clc
aad
cltd
ljmp
out
loop
mov
lods
sysret
pop
jnp
mov
dec
sbb
dec
lods
pop
sub
daa
cmp
ret
mov
sbb
cwtl
pop
pop
das
cmc
sbb
dec
adc
mov
push
imul
aam
jl
jge
jns
rcrb
negb
add
icebp
jne
push
pushf
push
test
jg
add
cltd
push
mov
mov
mov
sbb
xor
inc
pop
repnz
clc
gs
jmp
jae
ds
xchg
incb
outsb
or
and
call
mov
lcall
jo
inc
cli
inc
lods
push
imul
call
mov
roll
jb
mov
imul
imul
andb
jnp
jbe
mov
testl
adc
xor
ljmp
xor
bound
inc
mov
mov
xchg
jne
roll
jecxz
pop
shlb
jle
js
dec
adc
mov
iret
insl
addl
repnz
orl
and
notl
out
sub
cmp
cmpsl
lea
adc
cmc
ja
xor
std
lods
cli
aad
push
popa
stc
lea
shlb
xor
push
ret
out
loop
loope
int3
nop
insb
xlat
pop
gs
rorb
shlb
arpl
xchg
pop
int
sahf
rcr
inc
jl
cwtl
inc
gs
ljmp
adc
xchg
cmpsb
adc
rclb
xchg
pop
filds
mov
cmpl
xorl
mov
test
cmp
data16
outsl
neg
orb
push
cmp
mov
ss
repnz
andl
cmp
int
jnp
push
mov
pusha
repnz
cmp
mov
data16
es
xor
mov
and
cmp
lds
jl
jge
mov
lods
xchg
insl
inc
pcmpgtw
sub
jnp
xchg
lods
or
in
push
mov
mov
cmpsl
and
jae
cltd
xor
outsl
jae
popf
and
pop
ficoms
xor
mov
add
rclb
and
insl
jge
loope
adc
icebp
dec
sahf
int
mov
and
ret
sbb
lcall
sub
pop
daa
imul
outsb
push
pusha
xchg
adc
fsub
sub
inc
cmp
mov
cs
call
shrl
ja
orl
ds
lock
xor
outsl
ret
and
sar
cwtl
jb
push
mov
cmp
in
xor
into
idivl
jo
cmpsb
jp
pop
inc
or
pop
and
push
movsl
das
rolb
push
roll
sti
lods
rcrb
inc
lods
and
xor
jne
mov
cltd
add
dec
xchg
popf
adc
fcoml
xor
aam
and
adc
inc
shrl
dec
out
sub
test
sahf
push
sbb
sbb
xor
xchg
mov
pushf
pusha
xlat
ret
mov
xchg
mov
xor
xor
enter
sbb
lds
ret
movsb
inc
dec
fdiv
js
in
lock
pop
loopne
sub
push
dec
mov
inc
sub
push
or
pop
and
or
sbbl
shl
lock
hlt
adc
mov
movsl
dec
pop
inc
pushf
mov
aad
lock
enter
int
fwait
jmp
push
mov
incb
aaa
in
in
in
jns
rorb
push
cmp
movsb
inc
xchg
xor
jmp
ret
psubw
mov
adc
in
dec
xchg
push
add
mov
push
adc
cmp
xchg
push
ja
cmp
pop
bound
loope
push
cli
clc
pop
cmp
aad
scas
mov
push
sub
inc
ss
push
adc
pusha
stos
jge
xchg
icebp
or
adc
nop
sbb
cmp
jo
pop
add
loop
jl
cli
mov
and
es
xlat
mov
push
lock
pop
sbb
rol
insb
repnz
lret
and
or
mov
inc
and
outsb
mov
adc
jge
mov
mov
xchg
mov
mov
mov
push
and
pop
jno
sbb
lds
aas
cmp
int
add
dec
popa
pop
fwait
lret
subl
dec
mov
adc
sub
sub
ds
or
lock
aad
cmc
and
test
mov
cmp
mov
mov
adc
jbe
icebp
filds
repnz
hlt
aam
imul
mov
cmp
test
pushf
add
push
repnz
add
inc
sub
and
mov
push
ficompl
cmp
inc
fmulp
jmp
push
xchg
vmread
dec
xlat
or
ja
xchg
xor
loope
aam
outsl
mov
jne
icebp
popf
cmp
test
mull
adc
jl
dec
jbe
jno
out
xor
ret
mov
mov
cmp
shl
stos
jecxz
sub
lods
in
pop
outsl
xchg
xchg
or
aam
pop
dec
cmpsl
mov
push
xor
push
pop
mov
neg
lock
nop
xlat
add
mov
ljmp
xchg
jb
or
sbb
icebp
mov
adc
cmp
adcb
jno
orb
push
outsb
mov
pop
xor
lahf
pusha
mov
xchg
mov
in
jp
inc
pop
mov
imul
xlat
xchg
dec
lea
sbb
pop
fcomps
test
sahf
jno
fisttpl
repnz
inc
ljmp
shr
lcall
shr
sbb
sbb
inc
cmp
outsb
aaa
mov
mov
push
testl
push
mov
fwait
aam
addl
ja
push
addr16
xchg
push
into
add
xchg
mov
cmp
les
jae
stos
and
push
addr16
and
jne
outsb
lock
addr16
pop
stos
icebp
inc
gs
sub
sbb
xlat
hlt
outsb
fldenv
push
cmp
in
pop
sub
iret
aaa
sub
test
jecxz
loopne
xchg
or
pop
mov
jp
outsb
pop
mov
sti
cmp
adc
cli
pop
in
jp
jnp
les
xchg
scas
mov
cltd
adc
fnstsw
into
jb
int3
cmp
push
dec
mov
adc
cli
cli
pop
dec
mov
mov
jp
in
jg
push
xchg
rcr
dec
xlat
mov
js
sbb
xor
lret
adc
pusha
adc
enter
push
test
or
sub
cmp
outsb
push
shr
lahf
arpl
dec
or
xchg
aam
cmpsl
jnp
and
cmp
call
test
stc
and
dec
jno
aam
mov
push
add
lds
mov
pop
push
sbb
xchg
xchg
mov
lock
repnz
xor
sbb
jbe
push
movsb
arpl
out
cmp
shlb
add
into
or
imul
and
jl
in
movsb
sub
push
test
xor
push
sub
add
andl
mov
or
xor
push
aaa
aad
outsb
mov
out
dec
pushf
ret
movsb
test
mov
xchg
add
idivb
cmc
lds
jo
push
cmpsb
cmpsl
clc
cmp
xor
pusha
pop
pop
fnstenv
or
xor
xor
mov
gs
shll
push
lret
sti
xchg
hlt
call
xchg
and
pminub
push
cwtl
aam
and
int
sub
and
lret
add
xchg
loope
loope
cmpsb
push
bound
mov
int3
loop
mov
popa
leave
gs
mov
clc
mov
test
bound
cmp
mov
orl
mov
xchg
xor
lcall
sbb
push
cltd
lods
xchg
and
xchg
and
ja
push
dec
std
push
cmp
es
aaa
lret
sbb
lret
outsb
movsl
imul
mov
push
movsl
mov
jnp
shr
xor
bnd
adc
pop
mov
ja
cmp
and
arpl
je
fnstsw
cmpsl
imul
shll
and
and
sbb
leave
shll
xor
aam
push
lea
cmp
rclb
in
outsb
cmc
xchg
sub
push
out
lret
into
xor
adcl
icebp
imul
adc
and
inc
add
ret
adc
lods
pusha
xor
popf
mov
jae
divl
pop
inc
test
rol
sub
ds
andb
xchg
inc
lret
mov
stos
cmp
nop
xor
mov
lret
popa
sbb
lahf
lods
out
rclb
ljmp
mov
pop
jno
sbb
ljmp
sub
cmc
fidivrs
adc
ljmp
xchg
lock
fsubr
lods
xchg
add
jb
sub
xor
dec
or
mov
jl
xor
sbb
roll
je
sahf
ja
in
mov
jnp
cmp
xor
faddl
stos
fcoml
mov
mov
mov
or
cmp
mov
xchg
cmp
lret
fcompl
nop
stos
inc
insl
jmp
movsl
cwtl
addr16
and
jb
jl
popf
scas
xorl
setg
or
fwait
cmpsl
bound
push
pop
lods
ja
loop
stc
pop
push
push
enter
jmp
out
and
inc
sahf
insl
push
mov
mov
jbe
xlat
or
inc
xchg
jbe
cmpsb
pop
jle
dec
xchg
popf
sti
les
rcrl
outsb
inc
sbb
push
jmp
xor
ret
in
jnp
test
ljmp
fbstp
mov
push
mov
push
pop
popa
in
scas
pop
sbb
in
loope
push
jg
inc
fwait
xchg
push
stos
xchg
push
adc
icebp
in
or
mov
mov
push
jmp
aam
in
push
pop
cmp
xor
les
mov
push
stos
movsl
cmp
mov
test
jecxz
adc
pop
jne
movsb
rcrl
aad
xor
in
daa
inc
arpl
cs
mov
mov
pop
pop
push
in
add
dec
je
ret
jp
call
or
pushf
std
call
sahf
pushf
jge
lret
sbb
scas
div
add
ds
pop
ret
jns
mov
pop
dec
outsl
inc
daa
push
out
jle
bound
stos
icebp
or
add
jecxz
dec
sub
cli
push
push
lcall
xor
jmp
mov
push
jb
daa
and
push
pop
inc
idivb
iret
xchg
sub
dec
cmp
sub
sub
es
xchg
popf
cld
jns
lds
mov
cmpsb
fwait
xchg
call
fcmovbe
jb
in
dec
testb
xlat
js
shlb
arpl
rorl
mov
je
push
mov
mov
adc
or
jge
add
lods
negl
out
and
ljmp
subl
aas
add
arpl
sbb
cmp
adc
movsl
xchg
lcall
cmp
loop
in
pop
mov
push
jbe
sub
popa
jg
fsubrl
jle
xlat
outsb
xor
test
scas
loope
inc
leave
cmp
lods
or
rcrl
jge
jle
jne
pusha
pushf
adc
cmp
push
sub
xchg
inc
xlat
xor
lea
push
test
movd
mov
push
arpl
hlt
in
jns
stos
incl
sbb
fiadds
mov
inc
scas
mov
dec
shl
and
cmpsl
sub
jle
fnstsw
jl
in
xchg
push
push
addb
mov
stc
imul
jo
shlb
ds
test
cmpsl
mov
psubusw
shlb
jg
lock
popf
inc
jo
cmc
push
inc
dec
mov
test
and
cmp
les
dec
mov
xor
mov
iret
int3
jb
out
lea
jne
mov
inc
sti
loope
pop
out
adc
lods
mov
inc
fdivrl
ss
mov
xor
fsub
add
sarb
setnp
aam
stos
dec
setae
clc
scas
xor
jno
lds
cmp
push
adc
jmp
mov
push
push
pop
lret
sub
ret
lods
mov
ret
push
out
push
sbb
es
lock
jl
insb
dec
pop
test
mov
jg
push
jne
movsb
dec
jle
adc
sahf
lret
cmp
add
ror
cmpsl
mov
imul
mov
lcall
pop
inc
addr16
mov
ret
jg
popa
pop
mov
jecxz
sub
cltd
sbb
push
pop
add
fimuls
push
daa
add
sub
fidivrs
mov
ss
pop
cld
jge
sti
adcl
lahf
pop
loope
sub
shll
nop
mov
into
push
push
lret
lcall
shll
stc
je
or
shll
push
xor
gs
adc
push
out
shl
xchg
imul
adc
test
xchg
test
mov
in
mov
inc
sbb
insl
dec
mov
fucomi
test
pop
and
jg
add
xchg
jbe
jae
cmp
cmp
lcall
xchg
pop
mov
adc
jecxz
mov
jb
sub
cs
jne
and
ds
cmpsl
dec
movsl
sahf
sbbb
mov
out
push
in
int3
lods
mov
dec
xchg
scas
lret
or
pop
sub
mov
add
xor
xchg
movsb
and
mov
mov
push
mov
push
mov
xor
leave
xchg
and
movsl
mov
repz
add
ret
loopne
push
inc
push
nop
push
mov
push
push
add
dec
pushf
sbb
mov
jg
mov
add
push
adc
test
lahf
mov
mov
mov
push
adc
push
jns
xor
xchg
xorl
adc
pop
add
mov
sub
mov
sub
cs
sbb
sbb
dec
add
sahf
sub
mov
inc
cmp
adc
in
rol
sub
repnz
roll
aaa
aam
popa
mov
jno
cmpsl
hlt
test
dec
repz
enter
mov
hlt
mov
push
icebp
jb
mov
xchg
add
outsb
orb
cmp
imul
dec
mov
aad
stos
mov
push
cmpsb
pop
xchg
adc
stc
or
das
out
mov
inc
loopne
and
mov
or
jb
iret
repz
adc
mov
sbb
sbb
mov
and
cmp
sub
cmpsb
pop
fistpll
mov
add
pop
imul
aas
lret
dec
jl
xor
mov
test
incl
and
and
adc
jp
mov
iret
xlat
popl
cmovbe
and
cmp
loopne
test
pop
faddl
mov
popf
xor
jmp
jle
insb
aaa
adc
cmp
push
mov
pusha
cmp
shr
pop
fsubs
jl
cmpsl
lds
add
sti
cld
outsb
ret
scas
outsl
ret
add
repnz
clc
mov
jno
mov
inc
into
or
xlat
ret
sub
xorl
sbb
pop
cwtl
jb
testb
sub
cmc
scas
push
and
xor
int3
xchg
sbb
ljmp
fincstp
cmp
dec
lcall
loop
mulb
mov
je
cmp
push
push
mov
sbbb
sbb
mov
inc
fists
shll
std
shlb
imul
cli
gs
ret
iret
rcl
rcrl
adc
push
in
jge
pop
fs
pop
movb
movsl
popa
pop
add
repnz
mov
push
dec
or
jbe
std
mov
cld
mov
jae
jg
xchg
test
pushf
mov
insb
jge
xchg
push
stos
xchg
and
lcall
aaa
repz
fdivrs
inc
pop
mov
add
fisubl
rclb
gs
jne
dec
push
mov
call
push
mov
les
filds
jne
lods
or
push
test
ret
daa
or
or
imull
jp
or
push
adc
add
mov
sub
cmc
dec
or
mov
dec
mov
cmc
mov
mov
pop
and
movsb
xor
sub
into
pusha
jecxz
cmp
loopne
incl
arpl
or
filds
loope
push
sub
pop
inc
cwtl
jbe
cli
mov
inc
outsb
into
shrl
and
jmp
dec
out
fwait
aam
mov
mov
dec
dec
mov
nop
cltd
jmp
data16
adc
movsb
fcmovb
jno
pushf
aas
pusha
shlb
pusha
orb
shlb
aad
fdivp
cmpsb
xor
adc
sbb
je
movsb
push
pop
inc
int
in
aad
add
jmp
loopne
ljmp
pushf
dec
jge
mov
push
and
mov
sbb
bound
sbb
cmpsl
xchg
test
inc
leave
insl
cmp
adc
cmp
lods
inc
fs
imul
push
cmp
pop
push
jp
or
xor
arpl
jnp
insb
pop
daa
mov
mov
jp
fsubrs
cwtl
cmpsl
xlat
fsubl
orl
cmp
or
jl
in
jnp
fs
int3
xor
xor
daa
out
pop
jno
xchg
jbe
push
icebp
sub
xchg
add
cmc
dec
sti
icebp
mov
fdivrl
fucomip
ss
xor
enter
cwtl
adc
test
push
pusha
xchg
push
and
or
mov
or
in
mov
bound
in
arpl
ja
push
xor
dec
aaa
push
mov
daa
inc
testl
cmp
movb
mov
ret
fisubl
ret
push
and
sbb
add
jae
pop
mov
and
add
cmp
sbb
cmc
test
js
call
insl
jns
and
xor
daa
fidivl
fbstp
lods
mov
aad
xchg
ret
lahf
repz
jb
jae
movsl
pop
cmp
data16
jno
xor
jp
stos
xor
mov
jecxz
adc
or
xchg
scas
lock
pop
mov
mov
sbb
sub
test
dec
jb
int
sbb
pushf
sbb
adc
stos
jno
icebp
cmc
shl
mov
mov
add
and
out
adc
add
cld
ljmp
lods
xor
or
in
sbb
movsl
pop
shll
sbb
scas
sub
ret
or
jb
ja
xchg
fs
adc
xor
into
push
jb
ret
mov
mov
inc
mov
xor
dec
cmp
lods
jge
jge
xchg
sahf
lahf
dec
jl
outsl
lret
mov
xchg
sti
lods
xor
jmp
daa
cwtl
inc
scas
fiaddl
push
and
jno
sub
inc
adc
or
pop
das
jo
enter
das
dec
push
gs
xor
xchg
movsb
push
leave
ljmp
cmp
lock
adc
aad
out
xchg
xchg
mov
hlt
iret
and
sub
aam
imul
mov
dec
ljmp
jns
cmpl
mov
insb
xor
and
mov
shl
adc
enter
and
rol
cld
pop
jbe
push
lret
ds
sbb
stos
mov
lods
push
popf
cmp
sbb
fldl
adc
fs
arpl
in
hlt
orl
xchg
cmpsl
enter
stos
lds
or
movsb
dec
mov
adc
mov
mov
and
lock
stos
sbb
addr16
add
leave
sub
add
scas
dec
dec
js
xor
mov
stc
fscale
adc
xchg
adc
jbe
ds
jl
dec
jo
cmp
arpl
mov
pop
test
mov
mov
fbld
mov
or
cltd
sahf
sti
mov
pop
push
jb
lock
and
dec
stc
cs
push
int
icebp
pop
lret
shll
or
sbb
adc
les
lcall
and
ss
clc
sbb
in
mov
push
ljmp
mov
sub
adc
sub
push
fs
jmp
push
mov
inc
inc
int
sub
jmp
mov
aad
stos
dec
lock
sbb
push
xor
in
aad
out
xchg
add
mov
mov
loop
test
xchg
jns
sub
dec
lcall
pop
dec
inc
nop
icebp
js
ja
les
dec
dec
inc
into
popf
inc
or
push
ret
repnz
jae
cmp
sbb
jp
out
xchg
mov
popf
int
push
dec
jl
lret
movsl
movsb
out
pop
pop
mov
xchg
daa
test
cmpsb
xchg
lods
aam
ss
jle
mov
push
lds
mov
sahf
pop
add
mov
pop
fs
cmp
daa
cmp
and
sbb
aas
rcl
push
daa
mov
lods
ja
push
stc
test
mov
psrad
pop
dec
addr16
or
inc
xchg
addr16
push
aad
bound
aas
clc
cmp
jge
mov
sbb
ja
test
clc
jbe
and
mov
stc
xor
rclb
mov
mov
movsl
xor
addb
mov
mov
out
mov
cmpsl
pop
int3
or
push
dec
popa
and
cmp
mov
mov
popf
js
insb
movsl
leave
or
xor
pop
jno
xor
jne
ret
fwait
roll
xchg
jecxz
cmpl
orl
imul
and
inc
loope
mov
mov
test
popf
ret
mov
or
pop
sahf
cmp
loopne
aaa
je
cmpsl
add
mov
je
sub
out
or
sarb
ljmp
cwtl
inc
bound
xchg
and
bound
nop
or
in
sbb
jne
je
stos
xor
loope
test
cmpl
fs
or
pop
xor
xor
jmp
mov
sbb
int
iret
loop
jbe
pop
call
and
xor
jg
or
sbb
xor
sub
mov
clc
mov
jo
jge
mov
xchg
popf
inc
int
mov
inc
sbb
fninit
adc
jne
cltd
jb
hlt
sbb
cld
mov
mov
add
xchg
popa
mov
mov
orb
push
loopne
pop
jb
outsb
lea
and
push
shl
dec
push
sub
scas
mov
fucomi
push
push
rcl
xchg
xchg
int
int
iret
fnstcw
jne
repz
sub
dec
movsb
jns
loopne
jne
daa
push
pop
sub
mov
cmp
stos
je
in
js
mov
fiadds
mov
in
fs
dec
stos
mov
in
xor
cmp
movsb
push
push
loopne
or
mov
ja
inc
ss
mov
mov
ds
data16
push
jle
jmp
outsl
mov
enter
sbb
repnz
rorb
sbb
out
add
sub
jno
lock
in
sahf
int
adc
sbb
pop
jmp
and
aas
iret
popf
imul
into
lods
daa
imul
cs
sub
aam
in
inc
fidivs
xchg
pop
notl
inc
xchg
mov
cmc
dec
push
push
mov
pop
cld
and
das
in
mov
das
roll
stos
pop
lods
sbb
imul
mov
xchg
je
mov
and
inc
movb
jmp
pop
enter
sbb
stos
mov
stc
mov
movsl
jle
mov
pop
filds
imul
xor
incl
aam
jns
rclb
test
iret
jbe
push
mov
inc
sbb
xchg
xchg
lret
push
cli
lret
cmp
loope
clc
xlat
xor
aam
ljmp
inc
aad
loopne
cmp
adc
fisubs
push
rolb
push
call
xchg
les
sbb
sub
lahf
loop
mov
and
pusha
sub
xchg
repz
lods
push
sarl
sbb
or
pop
rorb
jns
adc
outsb
out
mov
cld
cmp
psubusw
push
shlb
data16
rcll
clc
mov
mov
cmpsl
outsb
jae
out
scas
inc
mov
fmuls
pop
add
pusha
fcoml
in
mov
push
or
js
outsb
cmp
popa
xchg
push
pushf
sub
icebp
mov
xor
sub
aad
cwtl
xchg
mov
aas
aam
push
jmp
decl
jbe
test
orl
mov
dec
roll
mov
sub
push
pop
pop
popa
lret
xchg
xchg
outsl
push
or
repnz
mov
mov
leave
inc
and
daa
dec
lds
inc
jp
dec
ja
addr16
dec
arpl
dec
movsb
stos
inc
cs
fwait
cmp
out
in
mov
mov
mov
sahf
fcomi
add
repnz
jns
or
xchg
or
testb
sbb
mov
shll
movhps
sbb
movsb
xlat
in
fnstsw
popa
push
mov
sbb
jo
mov
sbb
push
pop
cmp
xor
popf
jo
add
lods
push
sub
or
push
xlat
and
insl
popf
jb
push
std
xchg
aas
pop
repnz
aad
xchg
sbb
sub
and
fmuls
out
and
in
dec
sub
ljmp
lds
int3
cmp
mov
pop
push
stos
js
inc
addb
jnp
icebp
js
mov
lds
jns
jbe
adc
mov
in
das
cmp
rorl
pop
mov
fisttpll
dec
xor
mov
je
mov
xlat
cmp
test
dec
cs
mov
addr16
push
test
sub
mov
push
int3
mov
sbb
clc
scas
jmp
or
cmpsl
push
aas
mov
sub
xchg
leave
cltd
dec
mov
cmp
or
ret
stos
jle
mov
das
inc
jne
insl
mov
popf
inc
push
gs
add
int3
int3
jb
rorl
mov
out
insl
mov
addr16
clc
jns
and
scas
pop
or
mov
ljmp
mov
cli
sarl
sub
xor
ljmp
arpl
push
and
test
test
bound
je
push
pop
js
xchg
xchg
or
xchg
fucomp
add
jmp
int3
dec
lea
dec
fwait
in
xchg
fnstsw
mov
mov
ja
dec
mul
pop
incl
inc
stc
dec
lods
hlt
mov
cmp
inc
pop
cmp
pop
nop
aas
cmp
or
imul
pop
outsl
arpl
cmc
push
cmpl
pop
xor
sbb
sbb
clc
and
dec
lock
enter
inc
dec
xchg
dec
loop
pop
out
mov
inc
popf
cmp
into
and
mov
jl
int
in
fcomip
jae
repz
mov
loopne
or
movsl
jl
jmp
leave
lods
add
cmpsb
popf
nop
test
int
mov
mov
jecxz
aaa
sub
fisttpll
es
sbb
icebp
movsb
add
xchg
push
jno
inc
clc
aas
leave
mov
jmp
aas
nop
mov
aaa
int
xor
testl
ret
mov
repnz
jmp
je
add
outsl
shll
push
aaa
test
icebp
mov
aad
xchg
bound
sub
sahf
jge
or
mull
in
cmpsb
adc
mov
jno
inc
sub
ret
inc
imul
lods
fs
pop
std
leave
add
leave
mov
mov
sub
push
js
lock
push
mov
mov
mov
sbb
dec
sbb
pop
jg
mov
push
stc
push
mov
push
mov
sub
loope
leave
int3
pop
push
or
ss
mov
and
inc
dec
mov
inc
mov
cmpsl
adc
dec
mov
andb
inc
or
out
push
adc
pop
pushf
popa
sbb
cmp
fldt
hlt
shlb
fisttpl
addl
cmp
cli
inc
xchg
mov
jecxz
fimuls
sarl
sbb
jge
andb
pushf
jns
push
inc
inc
out
ljmp
inc
imul
pop
mov
nop
cwtl
mov
xor
inc
xor
mov
sbb
sub
push
out
xchg
les
pop
icebp
movsl
jbe
lahf
lea
cld
mov
jp
out
add
sub
mov
ret
xchg
repnz
movsl
and
mov
add
adc
int3
inc
out
fisubs
in
fxtract
ror
daa
loope
push
inc
rclb
les
lret
test
popa
xchg
pushf
lcall
fs
mov
scas
cmc
outsl
int3
and
jecxz
fistl
push
jmp
dec
js
cld
stos
andl
loop
inc
call
sbb
adc
in
shlb
cmp
push
bound
push
sbb
fadd
adc
inc
and
int
int
jns
cmpsb
mov
outsl
and
and
sub
icebp
or
inc
cmp
pushf
sub
sub
enter
sub
inc
stc
dec
scas
xchg
fs
inc
shlb
sti
mov
xchg
iret
jmp
daa
and
inc
sarl
push
adc
adc
add
fisttps
jle
jno
outsb
cmp
pop
or
repz
fistps
or
pop
and
ds
and
sub
push
mov
or
inc
push
inc
js
test
sbb
int
popa
bound
adc
mov
enter
pop
dec
and
dec
dec
or
or
dec
and
scas
leave
ljmp
addr16
cld
add
xchg
xchg
in
lods
sub
or
and
mov
imul
test
cltd
bound
add
ja
xor
adc
sbb
ja
pop
xchg
xchg
mov
mov
or
outsb
ljmp
popa
add
repz
pusha
arpl
aas
in
pop
inc
mov
pushf
mov
lcall
jnp
std
stc
inc
mov
xchg
lcall
scas
test
mov
jnp
fldl
jb
fstps
mov
ja
mov
outsl
clc
adc
pushf
dec
push
xchg
arpl
aam
jne
push
fcomi
sub
xchg
adc
pushw
out
pop
add
fldcw
outsl
outsl
je
jl
mov
cmp
cmp
stos
cmp
imul
arpl
mov
aad
rorl
stos
mov
push
xor
into
into
mov
mov
jp
popa
test
push
hlt
mov
sub
adc
pop
out
push
xchg
in
subl
sub
xor
mov
sti
mov
ljmp
xchg
cmc
and
pop
mov
lock
cltd
inc
xchg
inc
or
out
cltd
jae
rorl
ret
mov
jo
pushw
jnp
inc
cmc
xchg
or
icebp
lahf
subb
sbb
pop
dec
adc
negl
fdivrs
jne
adc
cmp
adc
dec
mov
cmp
cltd
push
xchg
ds
jno
and
stos
subl
pushf
jne
bnd
add
and
xorb
or
add
jl
repz
cmp
popl
fisttpll
add
pushl
daa
rolb
xchg
and
les
rclb
out
jo
pop
test
sbbl
xchg
in
sbb
adc
scas
xchg
movsb
cmp
jns
jns
lret
shrb
aad
fs
mov
sub
subl
cli
stc
jbe
test
rorb
xchg
xchg
jbe
sub
jb
or
ss
jbe
shrl
xchg
mov
imul
lods
dec
jge
push
loope
and
test
shrb
dec
jge
adc
jl
dec
mov
les
adc
jecxz
adc
cmp
xchg
lock
xchg
mov
aam
int3
mov
push
cwtl
inc
jnp
or
roll
cmp
aaa
push
pop
or
and
xorl
lcall
or
sbb
dec
pop
jno
les
ja
outsl
in
add
push
enter
pop
clc
ds
ljmp
jmp
and
ljmp
lret
iret
pusha
push
loope
js
push
out
dec
lahf
push
pop
aaa
int
nop
leave
and
mov
pushf
push
mov
jge
lods
lahf
or
sbb
rcl
aad
adc
adc
xchg
xor
inc
hlt
in
jo
mov
movsb
addl
rolb
sahf
mov
stos
mov
jp
pop
movsl
jge
push
test
dec
icebp
add
pop
mov
f2xm1
pop
mov
push
arpl
into
lcall
bswap
bound
cmpsl
pop
mov
int3
pusha
pop
dec
adc
mov
testb
dec
or
mov
addr16
lret
ret
mov
push
mov
out
mov
push
adc
mov
jle
inc
cmp
jle
sbb
scas
in
and
xor
push
or
enter
clc
jmp
jo
cmpsb
test
xchg
mov
mov
xor
lret
mov
and
adc
es
xchg
sbb
out
dec
adc
out
adc
cmp
or
add
clc
cmpsl
fsubrs
fistpl
outsb
cmpl
xor
xorb
outsl
push
jge
dec
inc
rcl
add
js
xor
nop
mov
shr
push
mov
xchg
popf
sub
jnp
out
adc
sub
movsbl
ljmp
sbbb
in
mov
push
jge
shlb
ja
insb
pop
inc
sub
or
pop
push
lret
in
insb
roll
adc
mov
shll
out
rol
cmp
xor
leave
repz
xchg
arpl
sub
push
add
pop
jno
xor
mov
lods
jnp
or
push
test
fmulp
xchg
xchg
ficompl
movhps
bound
jb
movb
cmp
push
push
mov
lahf
lahf
inc
icebp
pusha
inc
xchg
adc
push
stos
jb
push
mov
cs
int
jecxz
jmp
push
insl
sbb
call
pop
cmpsl
dec
push
mov
ret
ret
pop
sbb
dec
jmp
mov
aaa
cltd
jge
jl
je
idivl
add
lods
push
pop
cld
mov
or
je
loope
inc
mov
push
jae
or
int
jne
adc
nop
cmpsb
adc
adc
mov
push
mov
movsl
ss
or
jle
cmp
fucom
and
leave
xchg
rcrl
ljmp
pusha
add
mov
hlt
jbe
mov
adc
into
push
flds
pop
sub
or
cmp
sbb
int
aam
dec
add
jae
add
jns
loop
xchg
into
xchg
pop
pop
sbb
test
inc
and
pop
push
sub
xlat
sub
addl
xor
adc
stc
sbb
or
xchg
jns
outsl
mov
jno
mov
mov
and
mov
or
js
imul
pop
adcb
sbb
data16
jae
mov
popa
xor
sahf
xorb
pop
sbb
jbe
mov
jg
dec
jno
or
cs
icebp
into
mov
fnstsw
mov
dec
push
adc
out
mov
sub
nop
adc
repz
inc
mov
cmp
cmc
in
jnp
decl
push
dec
clc
inc
popf
jmp
in
jnp
test
mov
mov
rsqrtps
addr16
arpl
sub
xlat
push
mov
cwtl
push
push
adc
pop
xchg
pop
mov
jae
outsb
mov
dec
xchg
or
or
aam
aam
ljmpw
inc
adcl
push
xchg
sub
jmp
popf
or
push
inc
andb
cmp
sbb
ss
insl
imul
int3
xor
mov
cli
cld
mov
loopne
mov
in
int3
call
lds
sub
insl
cld
fcmovne
dec
repz
xchg
dec
xchg
movsb
jge
mov
fstps
es
shl
icebp
stos
mov
sbb
jb
adcb
popa
push
leave
adcb
rorb
stc
sahf
cmp
xchg
jbe
sbb
cmp
xchg
inc
sahf
fadds
mov
fcmovne
sbb
mov
ds
xor
pushf
adc
sbb
lds
add
imul
mov
and
pop
sahf
in
cmp
into
jmp
imul
pushf
ficoml
loopne
mov
add
ja
xlat
dec
call
mov
push
hlt
jg
cltd
lods
add
fdivs
jne
pushf
pop
stos
dec
imul
fs
xor
jge
sbb
or
pop
insb
mov
dec
neg
xor
gs
repnz
inc
push
hlt
jecxz
imul
and
loope
ror
testb
lods
push
lea
add
mov
fwait
pop
pop
pusha
je
bound
stc
scas
leave
sub
out
dec
jno
push
mov
js
in
fsin
ljmp
sahf
jg
push
ljmp
fimuls
cmp
push
icebp
gs
sbb
pop
in
mov
imul
xor
xchg
daa
dec
je
jns
add
aaa
pop
or
adc
and
mov
nop
cmpsb
lds
inc
xlat
inc
shll
jae
inc
pop
lds
push
sub
insl
xchg
pop
or
inc
mov
push
repnz
lcall
stos
cmp
xor
mov
xchg
add
cmpsb
bnd
mov
test
inc
mov
scas
fstpl
clc
xor
imul
shlb
cmp
nop
sub
into
pop
and
aad
sub
push
out
call
cmp
in
jne
int
rep
clc
xchg
inc
in
push
xchg
outsb
xor
mov
fsts
clc
pusha
cld
iret
hlt
mov
mov
out
inc
push
popf
movsb
jl
out
sti
mov
cmp
sbb
jnp
pop
test
into
jmp
mov
inc
sti
or
scas
les
cwtl
dec
in
mov
and
xchg
test
push
out
adc
inc
mov
inc
ret
or
jbe
or
test
or
mov
aas
push
leave
sbb
notb
inc
loope
fiaddl
mov
in
loope
cmp
ret
inc
inc
xor
jo
flds
adc
jo
cs
jge
cmp
push
xor
xchg
sub
fldl
mov
iret
popa
iret
lds
stos
or
xchg
mov
mov
jo
aas
lahf
les
jne
pop
jb
adc
jl
mov
cmc
sti
xchg
mov
sub
add
xor
rorb
les
sub
rolb
aam
sbb
sub
pop
mov
es
xor
and
jp
stos
or
fdivrs
add
pop
mov
sub
test
shl
cmc
aaa
ret
jne
cmp
mov
das
loope
es
inc
mov
scas
test
fmuls
lock
xor
fimuls
sahf
jge
cwtl
add
mov
bound
clts
mov
or
iret
pop
aas
mov
loope
lock
test
mov
test
in
outsb
in
dec
and
push
ljmp
iret
mov
ljmp
push
es
sbb
cmpsb
push
jg
push
cs
cmc
and
mov
xor
xchg
arpl
ret
pop
xchg
lods
jle
push
push
in
mov
imul
pop
aaa
sub
inc
and
lea
mov
pop
xchg
arpl
mov
mov
stos
in
outsl
push
xor
out
sbb
leave
jno
jle
jle
fadds
addr16
arpl
addl
push
rorl
arpl
mov
sbb
push
adc
mov
into
mov
or
mov
mov
outsb
sbbl
add
outsl
mov
andb
pop
sbb
mov
xchg
and
pop
inc
add
xchg
outsb
lds
sarb
lock
mov
xchg
push
adc
shlb
push
test
popa
add
jl
je
pop
sub
jno
stos
je
jp
mov
je
lahf
lahf
push
gs
pop
leave
push
cld
shlb
push
pop
and
jl
stos
out
cmpsl
xlat
cwtl
mov
mov
lret
sub
mov
dec
dec
repnz
mov
adc
add
insl
xor
add
mov
add
push
testb
notl
jecxz
sub
add
inc
dec
cmp
insb
cwtl
inc
rorb
scas
xchg
and
loop
cli
pushf
fisttpll
clc
inc
sbb
fwait
sbbb
bound
adc
repz
daa
mov
xchg
jl
test
push
mov
mov
mov
push
xlat
and
hlt
cmpsb
jmp
test
movsb
cmpsb
add
xor
jmp
jns
enter
out
cmpsl
mov
cmp
pop
leave
enter
sbb
push
pop
rcrl
cmp
inc
adc
cwtl
pop
ja
stos
lock
cmc
sub
stos
and
aad
js
sub
xchg
jmp
add
xor
and
xor
pop
pop
pop
loop
ret
lahf
xor
hlt
loope
xor
sub
dec
lcall
iret
leave
fdivs
rcrl
rclb
pop
dec
stc
pushf
cmpsl
arpl
cmp
add
jo
inc
je
push
scas
fsubrl
popf
jae
test
scas
scas
outsl
mov
or
ds
xchg
movsb
lods
andl
jp
stc
mov
call
pop
adcb
pop
out
gs
addr16
out
or
adc
pop
mov
mov
xchg
dec
mov
jb
push
sub
and
addr16
addl
in
inc
mov
lret
adc
add
nop
into
xor
inc
xor
aaa
cmpsl
ret
add
data16
loop
test
popa
adc
call
xor
les
push
icebp
xor
mov
popf
mov
hlt
jno
fistl
jl
mov
int
cmp
clc
icebp
lret
mov
mov
jno
outsb
ret
call
pop
xlat
mov
pop
mov
cmp
cmp
mov
das
jo
loop
in
sbb
sbb
sahf
jecxz
adc
in
stos
imul
or
mov
push
cmp
pop
in
ljmp
add
mov
jl
scas
out
in
jge
inc
jnp
cli
jno
nop
aas
lret
inc
fsubr
cltd
icebp
cli
mov
ret
xor
mov
mov
xchg
push
adc
pop
sub
pop
fsts
mov
dec
pop
ss
add
jnp
repz
adc
or
dec
sub
out
pop
mov
and
adc
data16
or
jnp
or
call
ja
arpl
into
mov
imull
test
imul
add
aas
push
lea
cs
mov
adcb
lret
mov
sti
enter
popa
push
rcll
cmp
xchg
lret
mov
cli
dec
iret
fstl
cmpsl
mov
pop
cwtl
cmpsl
test
aas
outsl
das
andb
or
pop
jmp
lds
loope
lds
inc
mov
inc
xor
jo
adc
cli
out
ficomps
icebp
and
pop
sub
fnop
or
sbb
insl
cmpsb
fisttpll
call
sub
dec
enter
sbb
sarb
inc
mov
mov
pushf
xchg
adc
mov
sahf
and
pop
out
out
mov
cmp
fistl
xchg
fnstcw
int3
mov
icebp
and
mov
lcall
aam
push
lret
leave
dec
or
sbb
in
pusha
addb
psllq
push
dec
cmpsb
loop
dec
popa
outsb
aas
mov
or
and
mov
mov
jecxz
ret
sub
repnz
xor
xor
jecxz
lcall
rorl
jo
clc
sbb
inc
lds
sbb
ror
sub
in
adc
sbb
and
cmp
movsl
mov
mov
dec
cli
neg
inc
or
sbb
jne
or
in
xchg
sbb
xchg
push
inc
push
fs
clc
out
push
jb
sti
cmpsl
push
out
lahf
xchg
rcr
mov
sahf
mov
fidivrl
loope
adcl
adc
xchg
andb
call
xchg
and
ret
push
shrb
je
adc
jnp
iret
in
dec
jne
cwtl
cltd
mov
sbb
shll
pop
mov
jl
dec
jae
jl
in
mov
call
pusha
das
jmp
add
inc
inc
sbb
adc
jge
ret
mov
scas
push
xor
dec
sub
sbb
das
xlat
xor
or
fwait
test
and
xor
jo
sahf
sbb
xlat
bound
or
ret
test
cld
aaa
rolb
jecxz
es
mov
les
or
int
inc
inc
in
out
push
sub
dec
jne
stos
cmp
cmc
mov
mov
cmp
mov
imul
in
xchg
sbb
cli
jns
outsl
adcb
push
xchg
clc
add
fs
in
adc
lds
jle
push
pop
push
jae
imul
adc
das
or
sahf
pusha
jo
aas
mov
out
pop
scas
lret
sub
insb
xchg
pop
sub
ret
sbb
inc
rcr
pop
arpl
jmp
je
mov
dec
add
movsl
and
repz
shll
pop
outsl
cli
jnp
xorb
jns
add
xchg
pop
lods
dec
dec
insb
addr16
and
lods
xchg
outsl
push
cmpl
push
rcr
pop
pop
cmp
mov
adc
fidivl
push
fcomp
sub
lcall
in
adc
xchg
mov
bound
iret
arpl
inc
xor
test
mulb
sahf
icebp
rclb
sbb
jno
dec
xchg
out
adc
rorb
das
incb
shrl
pop
jnp
nop
cltd
mov
and
adc
push
sub
test
stc
xor
cmp
rcrl
pop
inc
cmpl
adc
pop
mov
mov
stos
cltd
adc
inc
adc
movsl
push
or
inc
dec
and
ret
and
adc
fbld
adc
ljmp
into
clc
lret
xlat
cmpl
push
inc
stos
loopne
or
sbb
jge
mov
dec
sti
pop
add
inc
xchg
les
xchg
negb
sarb
sbb
scas
in
mov
outsb
test
jb
mov
mov
mov
xchg
mov
mov
and
sbb
push
push
insl
dec
cli
adc
aas
jbe
mov
jmp
shrl
loopne
js
fists
mov
lea
jg
jae
jno
lcall
fwait
pop
fdivrl
mov
gs
jb
and
add
cwtl
repnz
adc
sbb
jecxz
js
fs
and
divl
or
mov
lods
stos
mov
rol
mov
and
aam
daa
cmpsb
cmp
mov
loope
xchg
jl
decb
inc
pop
gs
push
sub
jmp
lret
sub
lahf
mov
int3
scas
mov
mov
sub
fstl
cwtl
inc
xorb
mov
jp
std
xchg
push
aas
cs
push
lret
push
sub
add
lret
enter
mov
dec
fmul
mov
test
or
insl
call
mov
imul
shlb
mov
mov
dec
adc
cmp
adc
lahf
inc
ds
pusha
scas
mov
movsl
push
stos
sub
push
jnp
ljmp
or
call
int
push
jmp
lock
jge
inc
pop
cmpsb
or
call
les
cmp
sub
add
xchg
jecxz
bound
fcmovnbe
fdivs
faddl
out
sub
mull
shll
lret
inc
out
push
xlat
mov
mov
adc
aas
shll
sysexit
push
test
jns
mov
sbb
fs
outsl
xorl
jecxz
cmp
test
fisubl
mov
movsl
shll
pop
lret
inc
jae
push
or
fidivrs
inc
cld
jno
or
sub
es
xorb
cwtl
addb
test
dec
insl
mov
in
sub
mov
imul
sti
cmp
dec
lret
jge
xor
in
sub
rorb
inc
adcb
jmp
fcoml
lds
mov
sbb
jne
lahf
mov
or
ret
mov
out
sub
les
adc
repz
mov
jmp
les
cmp
jmp
lcall
cltd
sub
scas
pop
in
mov
pop
mov
loope
jbe
mov
rclb
sub
xchg
fidivl
mov
mov
clc
int3
insl
dec
mov
lods
xor
xchg
call
cmp
ds
adc
mov
stc
mov
into
fwait
jl
mov
mov
cltd
insb
adc
push
mov
sbb
andl
fcoml
mov
mov
stc
rorl
mov
or
test
fld
pushf
pop
jo
aaa
imul
mov
adcl
test
cmc
das
mov
mov
mov
jl
jb
add
into
shrl
mov
outsl
xor
cwtl
inc
mov
jnp
adc
addr16
cmp
sbb
mov
xchg
mov
xchg
mov
std
in
cmp
out
pop
test
dec
jge
push
xchg
sbb
insl
pop
mov
cmp
lret
lret
std
add
jbe,pn
xchg
xor
aaa
inc
ret
lds
vpaddsw
call
stc
pusha
jmp
enter
setnp
lret
xlat
mov
push
and
adc
je
in
adc
dec
add
out
add
cmpsb
lods
mov
out
jle
stos
xchg
mov
pop
cld
lock
pop
xchg
icebp
cltd
mov
and
add
stc
dec
push
or
int
jecxz
pop
popf
or
int3
out
inc
mov
stos
mov
outsb
outsl
jg
in
xchg
inc
push
pop
dec
addb
icebp
lds
and
sbb
mov
aas
xchg
call
inc
loop
jge
mov
aas
mov
int3
aaa
sbb
out
rclb
jmp
fwait
push
and
iret
ret
and
negb
fsubrs
in
and
add
call
mov
int3
mov
aam
int
jl
add
xchg
mov
adc
or
jae
push
mov
sbb
dec
out
mov
out
cltd
cmpsb
lods
iret
pop
dec
jae
add
push
aaa
or
nop
dec
addb
fidivrs
lret
fwait
cmp
aad
movsb
pop
test
adc
sbb
idiv
pop
or
mov
xor
add
scas
pop
loopne
adc
es
or
lret
lcall
cmp
jbe
insb
jnp
cltd
jae
pop
icebp
jmp
dec
js
cmp
mov
andb
sub
pop
pop
mov
jge
cmpsl
jae
hlt
inc
pop
sub
push
mov
sub
push
adc
out
or
repnz
fwait
xchg
jl
pop
pop
es
fistl
adc
adc
enter
push
jge
fdivrs
xchg
pop
leave
bound
mov
dec
pop
lcall
pop
into
test
jns,pn
push
and
cmpsl
adc
push
adc
lcall
push
cmp
sarl
faddp
pop
test
push
aaa
mov
les
jp
pop
clc
add
imul
xchg
nop
pop
lods
hlt
scas
mov
lock
adc
inc
scas
cmp
xchg
jp
push
push
adc
mov
adc
mov
addl
dec
dec
orb
push
mov
in
stos
outsl
shlb
or
inc
push
mov
mov
push
stos
xor
sub
dec
lcall
sub
aad
sub
dec
sbb
rcl
or
stos
out
mov
mov
sub
sub
pop
xchg
xchg
mov
test
scas
in
fcoms
jmp
aaa
negl
sub
std
mov
scas
or
adc
es
lret
pusha
loopne
inc
lods
xchg
fsubs
imul
jo
pop
cmpsb
ljmp
shll
push
repnz
dec
or
daa
jle
out
fnstsw
das
jle
ss
jp
xor
addl
test
sbb
jns
and
test
int
cwtl
cmp
dec
repnz
xor
inc
shlb
andb
mov
dec
dec
lods
mov
jno
inc
lods
mov
jbe
ja,pt
addr16
lds
call
fcompl
outsl
int3
push
mov
dec
out
or
cmp
fsts
jb
dec
rcrb
ret
mov
sti
push
fdivs
sub
sbb
aam
stc
xchg
mov
lss
and
mov
dec
shrl
xor
and
xchg
lahf
lea
js
aaa
mov
mov
popf
das
inc
jnp
and
fucompp
jb
cmp
lcall
add
add
lahf
pushf
cmpsl
xchg
repz
cmp
pop
sbb
jo
call
fdivs
xor
adc
xor
inc
push
shlb
sub
inc
add
mov
cld
hlt
push
scas
xchg
les
sub
mov
imul
mov
fisubl
inc
rcl
ret
aam
add
xchg
pop
aaa
mov
sahf
outsb
jmp
sbb
test
push
mov
cmp
scas
sub
insb
js
jnp
into
jge
fistl
pop
loop
adcl
mov
sbb
js
cld
andb
sub
push
jbe
addr16
cli
pushl
sub
in
sub
rcrb
mov
sbb
dec
mov
sbb
jae
push
es
loop
xchg
or
nop
jnp
repz
scas
aam
test
inc
cmp
test
mov
jae
cmpsl
aam
daa
cmp
xchg
jle
and
inc
sub
mov
jne
fcoml
add
fsts
push
inc
mov
fistl
pop
sbb
dec
mov
pop
bound
mov
dec
mov
fsubrl
xchg
repz
jg
fisttps
insl
xchg
iret
mov
mov
xor
push
test
jb
in
push
fst
dec
xor
mov
cmp
lods
mov
enter
sbbb
sub
adc
dec
sbb
cmpl
mov
test
enter
popf
xchg
pop
out
ds
sub
imull
mov
push
shlb
mov
cmp
pop
sub
nop
popf
repz
sbb
mov
je
cmp
arpl
dec
push
lds
nop
cmpsb
test
mov
mov
mov
ficomps
sbb
sahf
insb
mov
cmpsl
scas
daa
inc
lahf
test
mov
popa
jle
cltd
cmpsb
lea
pushf
jbe
xchg
sbb
xor
imul
xor
outsb
xor
push
xchg
sar
aaa
push
stos
xchg
sbb
dec
xchg
cmp
adc
adc
lods
xorl
mov
xor
mov
les
mov
loopne
sbb
inc
lret
pop
or
mov
divb
dec
dec
pop
jne
nop
iret
push
pusha
adc
mov
insl
mov
and
cmpsl
pop
insb
mov
cmp
daa
xor
lret
pop
arpl
fs
ljmp
sbb
jbe
mov
inc
mov
and
out
pop
sbb
jmp
xor
push
mov
cmp
add
iret
add
lds
pop
pop
sahf
ja
pop
cltd
jae
arpl
adc
xchg
popf
insl
ljmp
fidivrl
inc
cmpsb
and
es
mov
sub
dec
mov
pop
test
fcmovnb
repnz
lock
mov
rcrl
cmpb
sti
pop
push
xlat
xchg
bound
int3
push
xor
sar
movb
mov
xchg
das
scas
arpl
sub
test
xor
pop
mov
or
sbb
sbb
inc
cmp
jle
jmp
sub
mov
hlt
rol
jecxz
mov
stos
xchg
cmp
mov
mov
lea
xchg
clc
pop
mov
mov
dec
test
jge
cwtl
arpl
rcr
movsl
inc
cwtl
jge
adc
xor
cmpsl
pop
add
lods
lods
lret
in
ljmp
imul
mov
dec
xchg
imul
imul
arpl
inc
jl
enter
jae
lds
pop
xor
sub
repz
xor
in
decb
dec
mov
inc
arpl
or
and
sub
popf
shll
in
mov
xor
pop
xor
sbb
cmpsl
popf
fadds
xchg
mulb
cmc
daa
sub
xchg
cmp
jg
mov
xchg
mov
dec
jge
add
pop
mov
or
stos
sbb
xor
aad
push
mov
std
insl
enter
sbb
bound
xchg
les
push
dec
ret
fsub
push
shr
jns
in
mov
enter
jg
ret
sub
xor
jmp
jle
add
mov
out
fsubrp
sub
push
lahf
iret
push
push
push
add
jnp
inc
cs
inc
sbb
mov
pop
adc
movsl
cmp
xor
out
xor
aaa
lods
sub
jno
movsl
into
add
cltd
dec
mov
xchg
push
outsb
lret
add
fidivrs
xor
popa
xchg
out
ret
adc
adc
clc
std
clc
cmp
sub
dec
lds
fiaddl
xchg
das
hlt
push
jno
xchg
jb
data16
sbb
xchg
pop
rcll
push
add
xchg
mov
mov
and
or
fidivrs
in
incb
cmp
mov
out
dec
clc
and
adc
dec
in
test
xlat
enter
push
call
aam
pop
xchg
insb
lahf
xchg
ja
pop
lods
or
cmpsb
inc
cmp
test
mov
dec
vdivss
nop
xchg
push
ljmp
xchg
mov
mov
cmp
inc
les
sbb
dec
xchg
xchg
mov
imul
pop
and
pop
div
or
lahf
xor
fstsw
dec
mov
adc
out
int3
add
jne
dec
xchg
push
push
cwtl
stc
int3
in
cld
ja
cmp
sahf
adc
inc
mov
out
adc
fsave
roll
jmp
arpl
call
cmc
fisubl
cli
sti
lret
cmc
adc
cli
and
scas
mov
fnstsw
adc
test
shlb
push
mov
push
loop
bound
lods
xchg
cwtl
and
mov
jmp
or
adc
xor
lcall
test
mov
cli
std
movsb
dec
arpl
insb
and
xchg
cmp
mov
mov
gs
xor
test
and
adc
arpl
out
cmp
in
push
jnp
stc
mov
mov
jle
aaa
icebp
xrelease
jb
add
cmp
inc
or
aad
xchg
fsubrl
mov
xchg
xchg
rcrl
jecxz
fwait
inc
test
mov
xchg
outsl
push
popa
pop
dec
cltd
cmp
jle
xchg
xor
mov
cmp
jbe
mov
adc
or
insl
jnp
testb
std
imull
lds
das
inc
push
scas
aad
ret
jle
das
or
daa
insl
adc
mov
adc
es
out
mov
int
xchg
ret
mov
test
push
mov
jnp
ror
cmc
mov
ud2
and
mulb
xor
test
shlb
das
test
dec
adc
ljmp
fs
adc
dec
inc
lds
cmove
jg
js
adc
aam
cmp
outsl
unpcklps
mov
mov
imul
cmp
ja
std
or
stc
mov
in
icebp
lods
jo
xchg
jb
adc
aad
mov
push
sti
aaa
inc
mov
push
push
cmpsl
mov
push
or
outsl
xchg
int3
jne
aaa
enter
jno
lahf
xor
xor
mov
loopne
inc
xchg
lock
das
jmp
mov
or
add
inc
pop
daa
and
push
mov
adc
inc
mov
lret
fimull
xor
roll
into
incl
aad
scas
mov
pop
mov
bound
bound
xchg
popa
jo
xchg
push
mov
imul
insl
pop
pusha
dec
pushf
shl
cmc
sub
data16
cld
push
inc
aam
adcb
icebp
mov
and
dec
pop
sub
push
inc
cmpsl
fisttps
adc
dec
pop
sbb
push
cmp
jmp
mov
fldcw
pop
mov
pop
xor
mov
je
pop
and
pop
in
jno
sbb
ljmp
jle
addr16
and
icebp
in
or
jg
push
pop
fs
clc
jmp
iret
addr16
and
loope
lret
xor
sub
call
sbb
dec
inc
dec
and
idivl
or
inc
push
cwtl
mov
or
and
mov
shlb
mov
loopne
test
es
stos
pop
out
jo
fs
jo
test
rcl
push
addr16
jle
mov
and
and
cmp
gs
pop
packssdw
jg
ret
mov
jecxz
jbe
arpl
add
ficompl
aaa
test
mov
cwtl
sbb
fmuls
mov
sub
int
pop
dec
push
inc
aas
mov
dec
fisttpll
out
adc
bound
int
out
addr16
inc
repz
sbb
lret
rolb
iret
not
ret
sarl
mov
popf
in
and
mov
aam
sbb
or
iret
and
fdivrs
fiaddl
and
popf
pop
mov
aam
xor
inc
stc
pushf
stos
cmp
mov
repnz
pop
es
cltd
xchg
mov
push
mov
mov
jo
push
iret
jg
mov
or
int
mov
dec
add
out
xor
popa
xor
loop
in
sub
mov
in
dec
daa
es
dec
out
jmp
pop
fstpt
in
jmp
or
sub
inc
iret
fldt
imul
mov
loope
ss
add
jo
and
pusha
es
rcl
inc
shrl
idivl
dec
mov
fldl
pop
xchg
inc
or
xor
inc
and
shrb
inc
loop
ljmp
dec
leave
push
mul
mov
xor
sub
push
fs
nop
dec
aas
push
addl
and
lods
push
dec
imul
cmpsl
add
andb
mov
pop
mov
push
add
xor
xor
ljmp
jge
fwait
lds
mov
fstpl
cmp
mov
test
cmpsl
pop
test
call
mov
push
mov
xchg
int
inc
pop
ret
das
and
or
push
repz
inc
ret
mov
pop
push
or
jns
inc
ljmp
int3
aaa
leave
enter
das
fiaddl
and
stos
mov
in
pop
pop
push
mov
xlat
mov
cmp
call
mov
mov
mov
add
sbb
insl
sub
dec
es
imul
jnp
mov
inc
out
out
shll
ret
je
xor
inc
pusha
daa
fs
jg
lods
daa
cmp
xor
lahf
lds
shl
add
sbb
fisubrs
das
sarl
ljmp
stc
int3
pop
addb
or
das
inc
cld
mov
fdiv
or
lret
aam
insl
ret
mov
jmp
mov
sub
aad
shll
mov
jae
leave
cwtl
mov
jle
mov
push
jle
lods
add
mov
mov
insl
jg
fldl
jge
mov
movl
lock
scas
dec
lods
lods
scas
sub
cli
mov
sbb
clc
sub
pop
mov
cmpsb
sti
xchg
cmp
je
rclb
das
add
int3
push
movsb
cmpsl
loop
add
lret
dec
mov
jne
push
jb
lret
or
mov
cmp
xlat
dec
rcll
sti
mov
xor
sarb
stos
out
jle
adc
push
push
mov
xchg
sub
loop
cmpsl
out
jo
stos
test
push
out
scas
ds
inc
push
insb
shll
jae
bound
pushf
fildll
and
add
adc
mov
cmpsb
mov
jmp
imul
pop
push
fdiv
fs
xchg
jle
mov
std
movaps
loopne
dec
mov
scas
cs
pusha
jne
dec
ljmp
loopne
out
popf
inc
cmpsb
imul
jmp
push
xor
mov
push
and
rcrl
fsubp
ret
xchg
sarb
pop
test
outsl
test
ficomps
outsl
lock
ret
or
pop
jae
stos
push
fs
cmp
iret
stos
inc
or
mov
das
test
fiadds
shl
int
pop
xchg
lods
sbb
or
mov
into
mov
mov
cmpsl
in
pushf
sub
inc
sub
std
dec
mov
dec
stos
lea
sbb
mov
push
push
and
insl
test
mov
call
in
push
inc
inc
outsl
loop
sbb
hlt
sub
jl
arpl
sbb
arpl
jle
cmp
or
dec
out
fs
scas
stos
ja
dec
js
ror
pop
fldcw
mov
cmp
lea
add
jmp
cmc
es
psubw
movb
mov
mov
inc
cmpsl
outsl
aaa
pop
jmp
push
jnp
popf
push
sahf
out
aad
in
les
subb
sub
pop
pop
push
jne
jl
dec
and
or
sub
push
popf
lds
mov
jnp
lret
fsubs
jg
cmp
mov
mov
dec
inc
xchg
andb
push
ljmp
stos
adcb
jae
sbb
xor
test
sbb
mov
cmpsb
lret
mov
mov
mov
mov
or
test
daa
mov
int
push
cmp
fistl
inc
call
outsl
push
les
cld
mov
xchg
fisubrs
dec
fs
in
rcrl
hlt
jbe
mov
add
add
sysenter
or
cmc
cmpsb
mov
mov
dec
jae
arpl
pop
es
pop
jg
dec
add
mov
je
lret
mov
cld
pop
or
hlt
sar
repnz
jae
ja
jo
es
jnp
arpl
and
movsb
repnz
shr
xchg
adc
mov
lods
mov
mov
fstps
test
sub
pop
xor
mov
pushf
inc
sahf
repnz
sbb
or
into
popa
sub
jl
xor
xchg
data16
xchg
xchg
imul
dec
lret
jno
fldt
push
call
push
outsl
push
adc
loopne
inc
push
mov
nop
cmp
pop
sub
sahf
xchg
or
mov
push
popa
stos
jl
cmp
test
hlt
rorl
lret
pop
ja
sub
in
dec
xchg
imul
push
cmp
movl
dec
dec
fsub
push
sub
fldl
push
sub
insb
xchg
mov
cmp
cs
mov
mov
and
or
sub
mov
inc
xchg
icebp
in
aam
out
jp
loop
push
cs
loope
jns
cwtl
lea
and
xchg
mov
push
jne
pusha
shll
in
fcmovnu
out
out
cmp
xorl
xchg
push
xlat
and
orl
scas
and
sarb
out
jmp
ljmp
adc
out
ljmp
xor
push
jge
mov
insl
pop
mov
mov
mov
sarb
mov
or
add
xor
mov
or
stc
ds
push
mov
dec
rcrl
xchg
push
mov
pop
sbb
sbb
imul
lcall
xor
cs
or
dec
push
in
jnp
mov
jmp
cmc
xchg
push
push
dec
xor
or
shr
add
and
push
pop
or
sbb
fs
cmpsb
lods
data16
and
xor
cmp
sbb
mov
pop
jl
xor
lds
push
add
aad
out
sub
mov
adc
stos
cmpsl
sbb
enter
pop
call
movsl
or
lock
fistl
inc
movsb
bound
and
sub
stos
lock
adc
outsb
jmp
xor
loop
add
sbb
xor
add
aaa
movsl
mov
mov
push
add
sub
test
xlat
inc
push
ja
mov
add
daa
or
jg
push
ret
jae
and
mov
daa
xchg
mull
and
jo
jl
out
loope
addl
pop
mov
cmp
pusha
jp
ljmp
inc
insl
daa
cs
inc
cmp
inc
call
xchg
incl
in
mov
scas
cmp
out
xchg
mov
mov
aaa
adc
stc
and
mov
iret
mov
mov
scas
jl
in
sub
mov
decl
inc
lods
int3
andl
repz
or
cmp
add
dec
mov
aas
pushf
cltd
test
shrb
push
aas
fmuls
cmpb
ljmp
inc
push
popa
ret
sbb
add
pushf
ret
cli
mov
loop
mov
inc
daa
mov
stos
or
cmp
stos
daa
sahf
movl
lcall
mov
mov
les
adc
dec
fisubl
aas
sub
clc
or
xor
push
cmpsb
sub
push
rol
ja
shlb
push
shlb
icebp
ds
sbb
push
insb
and
add
jecxz
stos
into
lods
or
sub
ficoms
cmp
cwtl
mov
fisubs
sti
add
mov
scas
pusha
mov
popf
mov
ret
and
mov
inc
mov
jns
mov
mov
sbb
jp
push
mov
sub
cwtl
sarb
add
cmp
mov
jno
lods
add
sbb
xchg
in
inc
aam
pop
mov
push
sub
push
addr16
hlt
out
enter
mov
sub
add
pop
push
mov
out
pop
jae
mov
xlat
stos
dec
fwait
xor
mov
pop
decl
popf
mov
jae
loop
repnz
xchg
dec
jmp
and
xchg
mov
inc
pusha
ret
pop
cmpl
push
xchg
cmpsb
lea
cmp
jg
jecxz
aam
or
je
popf
push
add
je
rorb
push
jge
mov
popa
mov
add
fwait
sub
pop
cmp
sub
arpl
xchg
pop
lret
in
shlb
loop
ss
jns
cs
pop
out
nop
aam
movsb
or
pop
push
sbb
push
mov
add
adc
ficompl
or
sbb
xor
and
notb
xchg
nop
push
ffree
xor
push
into
mov
loopne
movsl
movl
jmp
std
sub
scas
roll
jns
stos
mov
scas
inc
loop
in
inc
in
add
xor
xchg
nop
pop
dec
cld
cwtl
mov
lods
enter
lcall
roll
fdivrs
addr16
jge
mov
cwtl
bound
js
cmpl
jnp
out
stos
cmp
ret
add
pop
pop
mov
fbstp
mov
pop
in
addr16
or
dec
and
xor
cmp
add
inc
pop
lds
leave
mov
or
sti
add
mov
fimull
inc
lea
or
daa
jnp
sti
hlt
cld
mov
xchg
js
divb
pop
dec
jge
adc
fs
pop
inc
fadds
repnz
lret
push
add
adc
push
jae
shlb
mov
jne
test
loop
notb
movl
xor
pop
data16
pushw
add
inc
stos
xlat
loopne
push
pop
pop
cmp
or
adcb
aam
mov
dec
int
pop
inc
ret
repnz
inc
popf
sbb
push
aaa
add
rol
mov
push
inc
sbb
lds
jge
adc
pop
inc
std
push
shll
adc
mov
push
or
mov
cmp
paddsb
je
call
mov
mov
in
xchg
cmpsl
push
and
sub
outsl
dec
sub
hlt
xchg
xor
or
clc
ret
mov
sbb
dec
sub
push
cwtl
jns
mov
leave
mov
mov
cmpsl
out
pop
inc
repz
dec
or
repz
sbb
push
jle
call
ljmp
add
shll
out
dec
and
or
and
test
push
jno
aaa
outsb
xchg
jl,pt
push
dec
cmpsl
into
inc
dec
jp
sub
push
imul
outsb
and
sbb
and
xor
popf
fneni(8087
scas
outsb
testl
je
mov
js
mov
sub
lods
repz
or
out
loop
aam
push
jne
jmp
std
or
sbb
pop
mov
testb
pop
fdiv
ljmp
xorl
xchg
xlat
jnp
leave
dec
mov
or
push
or
jmp
dec
out
sahf
jns
push
dec
jbe
orb
test
enter
mov
outsb
je
cmp
es
push
add
or
inc
sbb
std
test
jmp
out
inc
and
inc
sbb
mov
xor
and
cmp
nop
es
incb
xor
into
sub
jns
jge
psubsb
push
lock
sbb
mov
les
and
sub
subb
xlat
adc
jmp
mov
adcl
movsl
dec
out
test
jno
cli
dec
ds
fs
cmp
and
or
call
xchg
cmp
addb
push
adc
pop
push
sbb
insb
out
arpl
loop
iret
les
fisubrl
movsl
pusha
and
mov
popf
bound
int
mov
jnp
call
xor
in
in
adc
fistpl
decb
xchg
cli
clc
adc
pop
sbb
and
and
mov
push
inc
lock
pusha
jmp
xchg
test
add
ret
cs
inc
push
cmp
ja
sub
cmp
lcall
xor
xor
inc
das
rcll
mov
cmp
ficoml
xchg
into
or
jne
mull
and
adc
dec
sti
mov
aas
imul
rolb
cld
test
mov
fistps
lret
mov
mov
int3
sub
loopne
rolb
fwait
add
xchg
mov
mov
out
push
pop
mov
mov
pop
sbb
mov
fsubl
dec
movb
repz
jno
jne
cli
fstpt
push
and
inc
add
insb
mov
pop
xor
aad
cmp
xchg
cld
andb
sbb
add
adc
and
pop
scas
lods
roll
mov
lret
sarl
negl
mov
cmp
iret
pop
imulb
adc
and
sarb
test
lret
lock
inc
cltd
test
push
jp
lods
loope
dec
and
inc
xor
sbb
xor
shll
ficoms
jecxz
lahf
stc
inc
pusha
push
cs
push
mov
xchg
mov
int3
xor
xchg
rcr
incl
leave
dec
dec
sub
and
or
ljmp
push
in
xchg
scas
je
aam
sbb
arpl
xor
aaa
mov
pop
lret
or
fimull
lcall
aaa
mov
lds
pop
push
lods
inc
sbb
dec
jmp
inc
call
cmc
sub
push
cwtl
imul
mov
jg
nop
adc
std
outsb
xchg
push
jb
mov
xor
xchg
mov
icebp
pusha
pop
adc
sub
xchg
bound
dec
pop
sbbb
cmp
or
pop
imul
aad
or
ja
stc
mov
xchg
xor
pusha
daa
in
add
sbb
les
dec
pop
aas
dec
mov
stc
sahf
popl
mov
xor
jb
or
mov
sub
rep
cmp
or
dec
movsb
movsb
lea
nop
mov
dec
daa
jns
sbb
or
aam
int3
mov
dec
pop
push
lock
xorl
or
cmp
push
je
stc
sbb
test
sbb
inc
lods
repz
pop
aaa
mov
and
lret
or
bound
bswap
enter
xchg
lret
adc
dec
cs
daa
repz
fdivl
xor
xor
cmp
mov
mov
loop
imull
adc
dec
into
jo
dec
push
inc
push
jae
jo
movsb
xchg
roll
inc
pop
adc
dec
iret
daa
push
xchg
lods
lds
inc
pop
fldenv
sarl
lea
or
lods
es
cmp
stc
mov
xor
je
mov
mov
fidivs
mov
out
xchg
divl
mov
mov
mov
push
test
out
sub
mov
mov
in
mov
mov
icebp
dec
in
mov
sbb
dec
scas
cltd
xchg
xchg
stos
push
setge
mov
mov
movsb
iret
push
mov
push
movsb
xchg
mov
std
push
pop
mov
fstpl
push
sub
ljmp
fcmovnbe
jno
mov
mov
pop
ret
lea
inc
add
sbb
dec
mov
clc
inc
ja
xchg
out
pop
cwtl
inc
push
mov
outsb
inc
sarl
jle
in
and
inc
test
cmp
adc
xchg
dec
push
nop
push
daa
cmp
jge
xor
sub
stos
mov
arpl
aaa
cmp
add
xor
pusha
cmpsl
adc
or
lret
popa
sub
cmp
sahf
test
sub
orl
in
push
sub
sbb
mov
mov
jmp
dec
mov
or
hlt
dec
xchg
stos
leave
push
dec
js
inc
shll
jmp
pushf
loop
test
xlat
std
inc
xchg
stos
neg
xor
adc
dec
call
enter
push
aaa
pop
adc
imul
pop
add
mov
or
inc
fnstenv
sub
sub
das
scas
sub
inc
mov
repnz
shll
ja
mov
mov
aam
scas
jp
sub
dec
inc
jmp
fbstp
sub
xchg
jne
jae
addr16
pop
or
fsubr
jae
cs
push
scas
adc
inc
adc
outsl
cld
addr16
jl
shll
cbtw
movsl
sarl
and
cmp
test
and
addr16
sbb
pop
pop
xor
stc
dec
ss
push
ljmp
sbb
jl
inc
out
lds
ja
stos
lret
icebp
jno
imul
ljmp
rcl
bound
sbb
repnz
mov
push
imul
or
inc
mov
int
cmp
nop
fmuls
lahf
cmp
adc
inc
daa
cmc
pushf
push
ret
test
stos
mov
outsl
adc
add
lret
cmc
xor
rorb
inc
xchg
enter
push
in
xor
or
cmc
dec
fbstp
iret
fwait
push
loope
add
pop
push
jge
and
jo
and
ret
cmp
push
mov
jb
mov
enter
push
sbb
stc
xor
js
fwait
add
inc
mov
dec
push
je
inc
pop
or
cmp
xor
and
xchg
fwait
imul
shlb
jg
aas
loope
clc
jmp
mov
sub
lds
or
push
fimuls
cmpsb
je
sub
shl
jle
pop
pop
cld
mov
jns
call
xchg
das
xchg
jg
ds
pop
xor
jb
mov
daa
pop
push
cld
push
add
jmp
jp
pop
mov
mov
jns
test
mov
in
stos
divl
data16
sub
cmp
mov
jp
cs
xor
out
out
mov
negb
add
inc
movsb
and
mov
fdivrs
iret
pusha
push
lret
add
fsubrp
ds
and
adc
test
mov
xchg
loop
inc
mov
daa
fldl
aas
gs
in
in
insb
data16
cmp
add
mov
sbb
cmp
mov
repz
pop
lahf
push
loopew
cmc
pushf
inc
loope
lods
cltd
or
lds
cmp
notb
or
or
mov
sbb
dec
repz
scas
xor
test
pop
xchg
enter
ljmp
mov
inc
in
loop
jle
jge
mov
test
cmpsb
inc
test
mov
add
push
in
push
xchg
sbb
add
sub
cmp
mov
pushf
adc
int
dec
movsl
push
or
daa
out
lds
inc
lds
sub
or
dec
frstor
jb
dec
adc
sub
enter
das
insl
and
test
aad
inc
imul
mov
int
out
jg
add
fmul
sbb
pop
popf
js
dec
scas
sbb
or
mov
das
mov
xor
xchg
or
xchg
les
scas
int3
jg
negb
or
lcall
dec
mov
jae
repz
push
movsb
insb
js
push
in
out
or
insb
in
pop
push
lods
out
fistl
or
jne
pop
jmp
stos
cmc
enter
mov
inc
fnsave
mov
mov
aaa
xor
dec
scas
and
mov
ret
xlat
jge
lret
adc
sbb
add
les
pop
push
jmp
xlat
mov
ret
sbb
add
imul
jae
jl
icebp
mov
xadd
sbb
out
movsb
pop
cmp
ficoml
xchg
les
push
jge
in
in
loopne
stos
stc
add
pop
jne
adc
movsb
dec
mov
jecxz
outsb
mov
adc
sbbb
adc
mov
mov
sahf
fwait
test
mov
mov
loop
imul
jae
or
adc
xor
add
fs
xchg
push
dec
sahf
mov
adc
movsl
nop
push
add
inc
decl
push
add
cmpb
jbe
cs
cmpsl
clc
jle
sbb
clc
add
jle
fistpl
std
outsl
insb
and
sbb
xchg
jecxz
mov
repz
inc
out
lods
lret
pop
loope
adc
xchg
and
loop
sti
leave
push
cmc
inc
inc
cmp
mov
mov
mov
fs
inc
aaa
adc
iret
xor
mov
sub
cld
add
rol
cmc
cmp
les
push
push
mov
ret
jbe
mov
pmaxsw
push
jne
stos
adc
fiaddl
pop
fldenv
pop
out
outsl
mov
aam
scas
inc
shll
rorl
cmc
mov
inc
addb
out
jo
fstpt
pop
in
jge,pn
or
dec
popa
call
aam
in
cmp
jl
push
jne
dec
inc
inc
mov
adc
lods
stos
mov
fcomps
inc
or
xchg
int3
ss
sub
imul
sarb
mov
ret
out
loop
push
lret
test
mov
je
and
xchg
insb
xor
shlb
cmpsl
sti
mov
adc
imul
lret
xchg
sbb
mov
addl
es
and
inc
gs
or
dec
cmc
cwtl
insb
outsl
jne
leave
cmp
mov
jmp
ud1
add
mov
xchg
pop
pop
dec
sub
jns
enter
scas
mov
adc
scas
mov
jb
dec
shr
js
imul
fdivrl
je
xchg
pusha
lock
xorb
cmp
push
push
jle
sbb
repz
sbb
and
scas
sarl
test
add
jb
cmpsb
mov
push
in
sub
jecxz
dec
inc
push
in
xchg
pop
in
push
test
add
lcall
out
jno
pop
xchg
enter
sub
xor
lret
lret
in
fwait
call
mov
mov
mov
andl
shll
stc
daa
jg
jmp
mov
test
jmp
fnstcw
cmp
aad
clc
es
sub
dec
xchg
sub
lret
pop
mov
dec
lret
test
fs
push
shrl
adc
daa
cltd
mov
rclb
cmp
ja
lods
lahf
shll
addr16
clc
cmp
mov
jle
js
movsb
out
fldcw
jo
sub
and
std
lret
jae
sbb
xchg
xchg
xchg
sar
mov
jle
ss
pop
shl
lods
test
inc
shll
add
out
repz
repnz
xchg
push
jnp
pop
and
std
push
adc
cmpsl
loop
rep
push
lret
pop
lcall
ljmp
xor
mov
and
jnp
test
pop
adc
xor
push
dec
cmpl
mov
or
iret
ret
sub
xchg
add
fdivp
cmp
pushf
xchg
and
mov
rcl
xchg
repnz
cli
test
lods
xor
jnp
out
adc
push
xchg
jmp
mov
sete
and
aaa
jnp
aaa
cmp
xor
push
outsl
or
ret
jbe
cltd
sarl
inc
in
xchg
ror
scas
out
jno
lea
jg
mov
mov
lahf
or
mov
test
pop
call
xor
and
out
jmp
sub
mov
xor
std
jl
jnp
cli
iret
mov
test
loop
xchg
adc
out
rclb
adc
push
icebp
mov
mov
rclb
mov
and
push
xchg
pop
lds
inc
rcl
addr16
shlb
fwait
cmp
insl
mov
mov
dec
and
incl
jle
jb
in
pop
imul
stos
xor
andl
rorb
add
pop
ret
mov
cmp
adc
mov
sub
mov
xor
mov
lods
mov
gs
xchg
cli
xchg
int
mov
adc
jge
add
int3
pushf
fdivrl
xchg
daa
add
cmpsb
nop
cs
leavew
repz
fimuls
repnz
repnz
push
push
pop
adc
lods
ret
cli
mov
inc
stos
inc
pop
out
popl
das
cmpsb
nop
call
xchg
mov
fdivs
imul
mov
jle
lods
stos
or
cs
xchg
lret
negl
add
popf
rorl
sub
jnp
xor
loope
jno
ret
lods
dec
sbb
popa
inc
xor
in
xchg
out
insb
mov
sbb
insb
adc
imul
mov
dec
inc
sub
cmc
jbe
sbb
mov
push
dec
inc
inc
das
adc
mov
xchg
sbb
fildll
cmp
out
mov
in
shl
or
lcall
das
and
cmovle
jb
inc
imul
enter
sub
push
sbb
xchg
push
xchg
pusha
fldenv
inc
adc
push
add
sub
stc
push
shld
enter
mov
shlb
aad
fistpl
flds
iret
adc
add
mov
or
push
fsubrs
dec
add
sti
cltd
lods
xchg
pop
test
push
in
mov
leave
mov
ljmp
shrl
imul
out
inc
push
xchg
and
push
xor
int
out
jns
push
icebp
inc
xchg
add
sbb
stc
cli
loop
xor
push
outsb
imul
out
mov
cltd
dec
and
aas
iret
push
in
lds
push
mov
aas
das
rorb
push
mov
and
daa
mov
jmp
pop
mov
push
or
jge
sub
pop
sbb
adc
jl
inc
xchg
mov
repz
push
ret
imul
call
sarl
aad
daa
roll
cli
inc
aaa
inc
and
sub
xchg
neg
repnz
lret
mov
inc
mov
inc
int
rclb
sub
pushf
insl
movsb
je
insb
sbb
call
mov
xchg
mov
aad
xor
pop
inc
sbb
push
pushf
int
loope
sbb
out
dec
sbb
cmp
xchg
pop
ffreep
and
les
push
insl
cmpsl
pop
push
push
test
dec
ljmp
pop
jo
imul
mov
mov
int3
xchg
jno
inc
pop
inc
inc
sub
xchg
jne
jb
push
fadds
rorb
mov
cmpl
loopne
dec
push
pop
in
cmp
or
call
jmp
push
mov
movsb
xchg
sti
jmp
imul
lods
xchg
pop
popf
and
pop
pop
pop
aas
sub
dec
pop
add
push
or
aam
ret
pusha
sar
les
or
push
sti
popa
mov
out
hlt
popf
xchg
add
inc
add
sbb
pop
shl
and
ret
add
xor
add
mov
pop
push
mov
mov
leave
les
sub
push
mov
aas
pop
mov
xchg
into
sti
cld
cli
cs
mov
jo
xchg
fisttps
test
cld
xor
xchg
mov
aas
outsb
cwtl
pop
movsb
lock
mov
imul
xchg
mov
jb
sti
push
jge
fidivrl
jl
jns
arpl
pop
or
mov
adc
dec
pop
stc
pushf
je
ret
inc
js
mov
loop
loope
stos
es
mull
insl
cmc
lds
dec
inc
dec
ficompl
jns
adc
xchg
mov
jnp
or
out
pop
sub
ja
or
mov
mov
add
cmc
xor
ds
in
push
add
inc
aam
cmc
add
sub
jmp
jns
repz
cmp
and
test
sbb
pop
out
hlt
cwtl
xchg
sub
inc
pop
sbb
test
jne
cmpsb
mov
adc
pop
enter
mov
push
adc
pop
jecxz
adc
cmp
jl
lock
mov
out
cmc
mov
nop
inc
aaa
add
call
add
sub
clc
out
sbb
sub
pushf
js
sbb
push
aaa
add
clc
push
sar
out
cmp
test
out
adc
dec
dec
lahf
shlb
push
shlb
jae
iret
adc
xchg
mov
xor
cwtl
inc
inc
int
mov
xor
cld
ja
sti
test
jmp
int
imul
pop
imul
clc
jp
ret
sub
js
sub
sti
repz
push
data16
mov
sub
xchg
jle
sub
addb
pop
shrb
adc
pop
jecxz
lcall
dec
shll
push
ja
in
inc
and
outsb
test
lss
cwtl
rcll
test
outsb
or
xchg
insl
jb
pop
fsubrl
movsl
lds
sbb
sbb
push
push
stos
xlat
fstpl
xchg
xlat
inc
std
push
and
fsubs
push
add
fcmovbe
arpl
lods
outsb
cmp
inc
dec
lahf
jne
icebp
jb
scas
pop
stc
mov
cld
notb
push
xchg
outsl
jbe
jle
adc
daa
push
mov
std
push
cmp
pop
sahf
inc
bound
dec
sbb
out
hlt
sub
sbb
dec
cmpsl
xor
stc
dec
aas
icebp
add
xchg
aas
scas
mov
je
in
clc
dec
jl
ret
cltd
in
push
jmp
mov
lea
addr16
inc
mov
repnz
ss
jbe
xchg
xchg
loopne
mov
xor
cmp
jnp
dec
lret
enter
leave
jl
and
sub
loope
mov
xchg
adc
and
call
gs
xchg
sub
inc
in
jl
adc
jo
dec
divb
sarb
adc
movsl
mov
pop
pop
pop
push
testb
lods
push
imul
sub
push
inc
div
or
pusha
stos
aam
inc
xchg
mov
lret
jmp
xor
lret
jae
scas
jle
ret
and
inc
inc
dec
repz
push
insl
dec
xor
sbbb
testl
sub
jae
mov
dec
jmp
cli
ljmp
rorb
test
adc
push
inc
mov
mov
inc
call
jg
mov
lea
pop
sbb
sub
xchg
cmp
neg
cld
in
cmp
paddsb
cmpsl
fstps
lret
mov
iret
dec
arpl
push
jo
test
aam
gs
push
loopne
add
out
dec
jno
xchg
dec
sbb
fidivrs
mov
mov
lea
add
or
movsl
mov
and
cmp
mov
push
stos
dec
jmp
mov
into
loop
mov
aam
xchg
push
add
dec
jno
xor
popa
and
push
mov
push
fiaddl
pop
cmp
lods
pusha
in
jecxz
adc
jnp
jns
sbb
push
inc
add
jmp
mov
xor
push
push
cwtl
and
sub
mov
cwtl
test
bound
stos
xchg
stos
ds
cmp
fmull
fsubs
jmp
jmp
repz
sbb
das
scas
imul
je
sbb
aas
add
out
jle
cmpxchg
push
iret
sbb
sub
aaa
cwtl
fsubs
scas
les
int3
in
sub
fnstsw
das
add
xchg
sub
addr16
mov
je
in
jns
int
cltd
jg
lock
pop
rclb
adc
enter
mov
inc
inc
pushf
iret
pusha
mov
dec
test
jbe
outsl
in
adc
pop
aas
xor
test
dec
inc
xchg
sti
xchg
popl
jge
or
jne
xchg
xchg
xchg
jl
pop
jne
push
loopne
mov
mov
jmp
and
mov
jb
and
lahf
data16
lret
jbe
sub
out
dec
and
mov
lds
sub
mov
cli
xchg
dec
xor
push
mov
enter
clc
pop
cs
cmp
popa
inc
pop
sti
adc
in
test
jge
mov
imul
lea
and
int3
loopne
cmc
push
add
test
xchg
lock
jmp
inc
test
hlt
fcmove
mov
sbb
aam
xchg
rcl
adc
inc
das
in
daa
ljmp
mov
test
adc
pop
incb
sbb
push
jae
lcall
mov
push
fimull
arpl
push
sbbb
es
enter
jae
xor
mov
popf
int
jbe
outsb
push
xchg
ja
test
mov
xor
adc
scas
je
jl
pop
adc
sub
sub
mov
lds
mov
or
dec
cmp
roll
push
inc
mov
push
int3
adc
or
adc
loop
add
inc
jae
icebp
and
xor
lcall
stos
scas
int
test
enter
mov
hlt
sbb
sbb
inc
jle
stc
push
in
mov
movl
jg
out
out
cli
jg
jno
mov
xchg
fcoml
jbe
mov
jl
or
or
xchg
dec
cmpsb
inc
add
dec
nop
xor
jne
xchg
mov
fstpl
insb
push
jb
int
cwtl
lahf
loop
adc
or
cmp
pop
lret
push
outsl
mov
mov
mov
jo
loopne
dec
test
jbe
adc
stos
add
fwait
repz
repnz
in
pop
dec
mov
insl
out
jg
or
sbb
loope
xchg
aas
add
aaa
inc
adc
xor
test
mov
pop
shlb
adc
aaa
mov
mov
sbb
dec
mov
fistpll
push
hlt
mov
imul
das
dec
das
jecxz
out
mov
mov
jbe
mov
and
repnz
cmp
ljmp
jno
in
dec
pop
nop
jo
cmpl
inc
ds
or
dec
out
shrb
jge
dec
dec
fcmove
jns
mov
and
test
mov
shrl
mov
sbb
movmskps
and
and
xor
insl
mov
add
or
or
dec
cmpsb
sbb
mov
sarb
fidivl
mov
ret
sub
idivl
in
xchg
stos
test
push
jae
xchg
add
mov
dec
adc
test
pusha
mov
mov
cmp
js
and
aad
inc
fildl
scas
test
mov
jg
sub
mov
jge
das
testb
jge
xchg
lahf
adc
movsl
in
pusha
cmp
test
sbb
xor
pop
jnp
pop
pop
xchg
outsl
lods
lea
das
xchg
inc
dec
lcall
insl
mov
lret
in
mov
inc
in
inc
addr16
outsl
pop
cmp
and
adc
and
inc
out
adc
repnz
repz
lds
inc
or
jo
repz
popf
movsb
ret
or
or
testb
or
xor
jle
adc
scas
in
das
nop
jbe
or
std
js
xchg
cmp
sub
dec
lods
decl
pop
adc
jl
mul
lret
mov
cmp
and
insl
push
icebp
mov
dec
xor
loop
jb
jg
jp
or
lahf
test
gs
xlat
dec
jb
mov
into
test
and
or
test
sub
cld
mov
pop
lret
push
mov
imul
cmc
and
popa
fstpl
aas
and
xor
pop
data16
sbb
hlt
addr16
dec
adc
fidivrs
sbb
pop
xor
inc
dec
frstor
shll
rorb
loopne
pop
or
cmpb
inc
repnz
adc
pop
push
mov
or
mov
xchg
mov
push
fistpll
mov
mov
cmp
jae
xor
push
rcrl
push
push
pop
loope
inc
lret
sbb
popf
or
dec
dec
loope
xchg
mov
dec
adc
aas
mov
sarl
push
mov
push
fldcw
or
rclb
arpl
push
mov
pop
fidivl
mov
int3
cmp
fdivrs
jns
dec
fadd
stos
inc
les
dec
jecxz
jmp
inc
imul
sahf
hlt
rolb
call
add
out
mov
loopne
cmp
imul
int
test
mov
inc
pop
aas
int
aaa
jmp
mov
clc
icebp
in
push
jns
clc
jmp
aas
fsubr
ret
push
push
pop
xchg
aad
xchg
adc
loopne
icebp
mov
dec
ror
lret
rolb
inc
jecxz
or
out
hlt
inc
das
and
or
mov
pop
aad
lcall
mov
dec
jae
popf
inc
dec
shlb
pop
stos
or
stos
mov
fnstenv
pushf
xor
add
lea
mov
pusha
cmp
fsubrs
fcmovnu
sub
push
jg
xor
ljmp
outsl
xchg
ja
xchg
icebp
fwait
rcr
aas
ja
mov
and
in
call
mov
dec
adc
and
mov
lock
jmp
cld
orb
movsl
jnp
add
adc
icebp
jns
and
mov
call
adc
bound
loope
data16
repnz
std
cmp
mov
and
aad
filds
and
lock
jne
aaa
scas
xchg
iret
mov
push
dec
or
add
xchg
mov
dec
aas
cmp
fwait
cs
xchg
push
imul
pop
call
insl
pop
arpl
sub
push
sbb
idivb
jecxz
orl
ret
fldenv
sub
pop
imul
jl
sti
sub
out
iret
pop
fwait
mov
mov
mov
mov
ja
adc
jl
bound
addr16
pop
fucom
addl
push
jnp
mov
dec
sahf
pushf
test
cld
dec
add
pop
adc
xor
sahf
xor
cmp
mov
out
xchg
inc
shl
sub
cmpsl
fldenv
cld
xor
jbe
pop
jae
pop
fldl
mov
adc
lods
xchg
sbb
and
xchg
jo
je
pop
push
push
mov
pop
mov
out
mov
xchg
sub
out
jl
mov
sub
ja
sbb
xchg
imul
adc
push
ljmp
adc
mov
je
add
fstpt
dec
lods
push
push
repz
sbb
inc
inc
dec
cmp
jg
popa
adc
xlat
hlt
repnz
rorb
popf
out
out
add
cmp
movsb
faddl
xor
cld
movsl
lcall
sbb
cmp
and
push
push
sub
mov
sub
lret
mov
imul
loopne
int
fs
jne
loopne
shll
add
mov
int3
xchg
push
xchg
loopne
cmp
adc
add
das
push
cmp
or
push
arpl
or
pop
xor
add
mov
lahf
cmp
das
mov
into
mov
decb
mov
mov
or
pop
sub
dec
aam
mov
les
dec
aam
gs
loopne
iret
and
inc
data16
int3
or
fdivr
leave
mov
xor
bound
pop
mov
add
inc
add
mov
cwtl
scas
in
xchg
test
loop
xor
andb
and
mov
cld
adc
xchg
testb
dec
dec
inc
pop
out
and
xorb
imul
in
jmp
mov
cli
int
xor
test
mov
sarb
xor
lcall
cmp
rcr
inc
icebp
bnd
xor
hlt
mov
dec
and
mov
dec
xor
in
mov
mov
shrl
in
push
push
sub
ja
jmp
push
lahf
jnp
sbb
fcompp
xchg
pop
roll
pop
inc
outsb
adc
lea
adc
aam
sub
and
mov
mov
lret
xchg
mov
rcrb
jnp
dec
xchg
jno
divb
shrl
and
leave
lock
cmpsl
call
ret
andb
arpl
lea
cli
sub
xor
dec
icebp
add
jg
sahf
aad
xchg
arpl
add
sbb
addb
dec
xchg
add
hlt
cmpsb
imul
xchg
xchg
pop
or
and
ja
push
sub
popf
lret
dec
jl
or
adc
lds
push
dec
ret
add
fcom
pop
repnz
sbb
in
stos
daa
sbb
ljmp
lahf
mov
pusha
std
pop
daa
xor
cmpsl
test
adc
mov
push
inc
mov
fnstcw
pop
and
xchg
bound
xor
scas
add
sahf
mov
psubq
pop
sub
mov
adc
inc
sub
lock
in
cmp
or
lea
mov
or
enter
or
xchg
pusha
xor
das
xor
and
jne
mov
insl
dec
jl,pt
mov
in
and
or
in
ljmp
jns
add
add
das
ljmp
pop
sbb
and
mov
sbb
jg
leave
mov
fistpl
in
sbbb
sbb
mov
cvtdq2ps
ficomps
mov
push
gs
inc
movsb
js
lea
sbb
leave
fdivrl
ljmp
nop
dec
sub
pop
and
sbb
and
sarb
dec
dec
or
lret
je
jmp
and
jmp
and
pushf
cmp
outsb
fsubrl
xor
xchg
loope
jmp
imul
sub
cmpsl
das
sbb
add
and
pop
arpl
test
xchg
sbb
xor
rclb
les
add
popa
push
add
js
pop
ret
mul
stos
jp
icebp
cld
movsl
or
sbb
or
adc
fdivp
pop
xor
cs
xor
stos
dec
and
test
mov
inc
push
inc
cmc
clc
faddl
sbb
ja
fisubl
fiadds
xlat
lahf
lock
ficomps
in
sbb
jae
inc
sub
inc
bound
clc
jnp
push
cmp
xor
repnz
popa
pusha
cmpsl
int3
fistpll
push
jle
cltd
mov
lcall
repz
xor
cmp
cltd
ret
inc
cs
and
dec
scas
test
xchg
std
mov
subb
jl
in
mov
jo
or
pop
mov
fsubs
push
or
xor
jbe
jb
andl
dec
add
mov
push
inc
mov
jnp
push
dec
mov
mov
mov
fwait
divb
add
std
fisttpll
push
jg
es
fnstenv
mov
xor
xlat
enter
cmpsl
repz
mov
pop
jne
cmp
mov
jno
jl
repnz
out
call
pop
gs
aaa
xor
ds
out
notb
cmp
mov
mov
pop
je
fisttpll
shll
xchg
add
xchg
pusha
dec
xor
sti
imul
sbb
add
mov
sub
int3
cmp
inc
pop
xor
jmp
dec
adcl
movsl
das
inc
clc
in
sub
sbb
lds
ret
jbe
or
in
dec
jle
push
icebp
arpl
test
xor
and
sbb
cmc
stos
lret
stc
and
loope
fistps
mov
push
adc
test
push
imul
movsb
cmc
xchg
jno
loope
fmul
fsubr
test
jecxz
repnz
sbb
fisttps
sbb
outsb
mov
cwtl
fstpt
cmp
fstl
cmpsl
adc
sub
cmp
sar
jb
scas
enter
inc
mov
or
xchg
add
pop
mov
scas
xchg
popf
sbb
pop
ror
inc
scas
push
xlat
pusha
lods
out
leave
push
pop
pop
mov
repz
xchg
add
or
jno
pop
mov
sbb
stos
cwtl
xchg
cmp
out
inc
xor
xlat
dec
push
cmpsl
aaa
mov
cs
gs
shll
aam
pop
pop
xor
jno
fiadds
test
add
sbb
stc
lcall
push
fstl
pop
fmul
pop
pushf
daa
pop
adc
jp
ds
xchg
cmp
and
inc
insb
push
xor
sub
push
orl
sbb
fistps
fldt
push
hlt
dec
std
pushf
inc
out
jb
dec
sub
loope
add
mulb
cltd
cli
fiaddl
push
cmp
ret
cmp
test
cld
sub
addr16
stos
cmp
pop
pop
push
cli
dec
dec
sub
arpl
xor
aad
in
gs
call
sbb
pop
jecxz
sub
push
jnp
aam
jne
bnd
mov
mov
add
sub
repnz
incl
fsts
repnz
lret
xchg
rcrb
mov
fisttpll
push
mov
sbb
pushf
pop
cmp
out
cmpb
or
data16
stos
and
fs
xchg
shll
xorl
nop
sub
scas
sbb
xor
xchg
jge
jecxz
pop
pop
lret
cs
and
jg
enter
mov
adc
mov
and
lods
xchg
call
fists
cmp
enter
aaa
xchg
ljmp
xchg
fcompl
push
cmp
lods
cmp
nop
lods
cmc
dec
icebp
fbstp
inc
cli
and
mov
xchg
popa
sahf
lock
out
mov
ss
shll
mov
loopne
xchg
jb
ja
sar
int
pop
xor
push
mov
push
push
lret
andl
fwait
lcall
mov
les
outsb
jp
and
loop
scas
inc
imul
cmp
mov
sbb
divl
insl
xlat
push
dec
mov
or
pop
mov
movsl
popf
and
xchg
js
sub
pusha
lods
pop
stos
sbb
out
xchg
hlt
mov
jg
jl
scas
xchg
adc
ljmp
iret
inc
enter
lret
and
rclb
mov
aad
pop
push
loopne
push
out
mov
ljmp
gs
mov
xor
and
movsb
js
out
aaa
and
in
nop
rcrl
movsb
imul
jge
dec
ljmp
ret
daa
inc
sahf
xchg
out
movsl
test
lods
in
divl
negl
pop
sub
fsubrs
jns
mov
jne
cs
paddw
lahf
mov
out
scas
sbb
jg
aam
inc
in
test
adc
mov
mov
unpckhps
in
inc
xor
stos
push
std
push
mov
in
cld
iret
pop
or
push
leave
jp
push
lret
push
sbbl
stc
punpckldq
mov
test
sbb
js
dec
imul
sbb
inc
add
jle
pop
jae
cld
dec
pop
sub
fists
sbb
rcrl
aad
ds
mov
mov
fstp
in
into
push
inc
sub
fmul
push
jg
xchg
loope
sub
adc
mov
pop
xchg
testb
dec
mov
insl
hlt
loope
pop
aad
out
adc
insb
xor
data16
jno
stos
ds
fisttps
mov
aam
lock
pop
cmpsb
sub
jl
or
fcmovnb
insl
fs
mov
cmp
xor
daa
sub
jle
push
jno
sbb
adc
seto
outsb
movsb
jo
mov
popa
lahf
mov
cmc
gs
jno
push
test
add
push
fildll
jne
pop
in
push
jmp
rcrb
fsubrs
shl
mov
mov
pop
jnp
stc
mov
and
pop
mov
fsubl
sbb
jp
popf
dec
cs
lret
pop
nop
and
mov
lcall
scas
in
mov
int3
push
fldenv
ret
adc
arpl
sub
test
jle
cmp
movsl
out
test
inc
fildl
jmp
imul
push
aam
cwtl
dec
addr16
xor
int
dec
add
add
dec
out
call
add
jns
sub
daa
and
jle
xor
push
outsb
cmpsb
pop
popa
mov
xor
sub
dec
mov
and
xor
push
xchg
xchg
adcl
clc
sbb
xchg
push
sbb
jbe
int
xchg
sub
dec
ja
mov
shl
sub
cmp
call
jns
or
add
cmc
pop
cmc
pop
and
leave
mov
cmp
iret
push
or
inc
roll
ret
pop
push
mov
adc
loop
jno
mov
fs
lcall
xchg
mov
test
shr
sbb
mov
test
inc
mov
inc
das
pop
or
jno
jbe
jb
xchg
sub
xchg
pop
lret
inc
ljmp
gs
loopne
mov
xor
call
rolb
mov
add
repnz
mov
pop
jp
sbb
cmc
jecxz
mov
rclb
push
push
das
cltd
popa
scas
jl
ja
mov
mov
sahf
ret
loop
and
popf
rorb
repnz
and
fwait
mov
in
mov
add
lret
push
je
cmpb
in
jecxz
inc
jecxz
into
nop
test
dec
xor
hlt
nop
out
inc
push
or
les
mov
pop
and
mov
push
and
inc
sbb
xchg
push
idivb
push
jns
fwait
cltd
adc
or
adc
ss
aaa
xchg
cmp
inc
andb
scas
jecxz
stos
lock
insb
dec
or
push
mov
dec
movb
fimull
inc
outsl
add
sub
cmc
cmpsl
movsl
inc
call
movsb
mov
or
je
loopne
or
lods
ret
fs
data16
aaa
vmovq
mov
pop
out
pop
xchg
insl
int
dec
push
sub
xchg
mov
jnp
cmc
xor
inc
mov
inc
cmp
mov
stc
scas
es
sar
sub
ds
or
pop
mov
xchg
sub
inc
or
nop
lahf
loopne
insb
in
jae
dec
dec
mov
jg
rorb
mov
pop
clc
stos
mov
repnz
xchg
add
ret
call
dec
cmp
or
hlt
xchg
outsl
mov
mov
test
aas
inc
mov
imul
sbb
sub
stos
xchg
pop
adc
pop
imul
pop
jl
fdivrs
stc
dec
mov
fwait
mov
into
icebp
dec
xchg
push
or
fisttpll
jo
jmp
and
add
mov
xlat
mov
mov
xchg
call
cmc
aam
xor
adc
mov
xor
lods
adc
out
push
and
fnsave
popf
fnstenv
or
xchg
mov
dec
jmp
mov
inc
pop
shl
pusha
inc
inc
in
jbe
test
cmp
ds
xor
xchg
xor
fwait
popa
mov
divl
mov
out
adcb
inc
in
push
insb
fisttpl
mov
andl
push
pusha
ljmp
ret
xchg
movsl
xchg
push
popf
cmpsb
es
out
jne
je
sub
jno
inc
inc
jo
dec
mov
dec
pop
xor
jl
shll
adc
leave
cwtl
lea
popf
mov
or
and
inc
inc
push
push
lret
xchg
adcl
mov
int3
sbb
fcmovnu
test
mov
je
fildl
or
imul
pop
jg
cmpsl
cs
and
push
and
sbb
addr16
negl
mov
jo
jo
and
lahf
cltd
xchg
xchg
or
or
xchg
imul
and
xor
xor
push
xor
cld
scas
int
mov
les
jge
out
sbb
fisttpl
push
js
jb
adc
test
xchg
adc
fwait
mov
inc
mov
mov
sub
imul
cmp
mov
add
imul
inc
ljmp
lret
sbb
cmc
sub
les
shll
ja
int3
in
jg
sti
jo
cmc
test
jae
or
pop
lahf
lcall
or
pop
pop
out
mov
ja
and
lret
jb
xchg
lds
test
in
push
jnp
pop
insl
xchg
dec
fnsave
jge,pn
inc
sbb
fwait
gs
out
push
sbb
addl
loopne
out
add
lret
adc
pop
daa
mov
xchg
insl
movsb
pushf
fidivs
js
jb
sub
cmpsl
pop
aam
in
fstpt
adc
popf
out
push
push
pusha
xchg
idivl
pop
sub
loope
ret
push
in
lea
push
popa
in
jecxz
mov
mov
cmp
adc
ffree
and
mov
ret
push
or
dec
sub
mov
icebp
lds
dec
xchg
ljmp
icebp
repnz
outsl
mov
clc
sub
sub
popf
fwait
jnp
xor
loope
add
push
push
stc
enter
inc
and
cwtl
ret
cmpsb
ret
adc
and
mulb
push
jg
push
sub
imulb
daa
pop
lcall
sub
scas
mov
mov
test
aaa
pushf
or
fisttpl
jnp
mov
push
loope
inc
sti
pop
mov
ss
fs
scas
ret
inc
or
and
pop
notb
sar
add
mov
daa
das
pop
loope
adc
mov
or
fcoml
out
cs
push
mov
mov
loopne
sub
in
jmp
out
pop
icebp
push
es
mov
adc
push
sub
fistps
and
cmp
pop
fbstp
ja
adcl
and
repz
push
popa
inc
pushw
jo
push
xor
pusha
add
addr16
fmul
mov
xchg
push
push
pop
jns
jg
or
jo
dec
imul
sub
arpl
xlat
fmulp
inc
push
dec
flds
imulb
pop
dec
sub
xchg
iret
adcb
shrb
out
dec
fstpt
enter
test
scas
pop
aaa
xor
mov
andb
scas
jp
adc
push
adc
enter
cmp
push
sbb
mov
les
lock
pop
test
mov
sbb
lea
mov
popf
push
jge
mov
push
push
dec
loope
pop
sbb
or
inc
xchg
lock
pushf
js
mov
add
mov
add
xchg
jle
pop
stc
push
mov
xchg
adc
pop
push
fistpl
xchg
inc
fsubrs
fistpl
xchg
scas
in
std
cli
je
xchg
add
mul
add
loope
repz
pushf
test
ljmp
inc
mov
roll
cmp
xor
mov
adc
test
sbb
mov
lds
push
mov
leave
in
jecxz
pop
fwait
and
mov
dec
hlt
cmp
ds
aad
adc
xchg
dec
arpl
inc
mov
ret
fsubl
sub
pop
xor
ficompl
xor
cmp
mov
je
sbb
lahf
jp
mov
ret
fwait
cmp
iret
push
lds
clc
addr16
lahf
bnd
popf
cli
dec
push
ret
push
fbstp
into
mov
test
inc
cwtl
outsl
rolb
je
push
adc
xor
ljmp
stc
sbb
insb
add
mov
jae
dec
imul
loopne
cmp
add
ja
pop
sub
movsl
mov
in
gs
inc
stos
cld
add
js
insb
mov
push
dec
repz
sub
out
aam
mov
cwtl
loop
mov
push
test
lret
mov
push
js
sti
out
sub
rolb
lods
std
or
inc
adcb
adc
adc
mov
or
popf
int3
pop
sarl
movsb
mov
scas
mov
sbb
cmpsb
xor
test
sbb
pop
repnz
xchg
mov
adc
pop
mov
pop
inc
sub
and
xorl
pop
es
les
xchg
mov
ret
outsl
lock
enter
dec
dec
xchg
push
add
das
js
dec
stc
sbb
les
cmp
mov
or
xor
and
mov
dec
out
stc
lock
leave
push
mov
sub
cmpsl
test
jbe
cmp
pop
pop
test
rcl
add
push
fs
sub
fidivs
mov
int
jp
movsl
jmp
popf
mov
mov
mov
lret
leave
jl
dec
aas
add
inc
cli
repnz
push
test
mov
mov
addb
push
xlat
repnz
test
sar
lds
mov
inc
inc
sahf
repnz
test
adc
xchg
test
fisttps
mov
mov
roll
mov
mov
inc
xchg
push
aam
subb
fisttpl
in
inc
pop
ret
dec
insl
int3
stos
add
fimull
daa
xchg
imul
dec
push
out
popf
push
jl
xor
ret
add
inc
or
insl
addr16
pop
and
pop
jg
clc
sarb
fcomps
jne
push
into
cmp
daa
in
or
push
ss
jg
pop
xor
insb
sub
stos
lcall
out
dec
jne
imul
int
mov
call
icebp
sbb
cltd
xor
popf
cltd
lea
out
data16
int3
jl
mov
push
sbb
fsubl
xchg
lods
xchg
stos
push
jecxz
jl
movsb
call
push
xor
or
test
cmp
cmp
mov
addb
dec
stc
xlat
cmp
cwtl
imulb
inc
add
sbb
repz
cltd
hlt
stos
inc
or
mov
xchg
pop
addr16
cltd
push
aaa
data16
jle
dec
and
mov
lret
xchg
ffree
inc
xor
cmp
aam
daa
arpl
lret
cltd
dec
icebp
pop
xchg
test
gs
mov
xchg
inc
addl
fnstsw
inc
and
in
aad
cmp
test
dec
xchg
add
shr
cmp
test
xchg
rolb
jae
das
inc
popf
ja
fiadds
fstps
sbb
jge
arpl
movb
jbe
stos
cmp
jmp
cmp
jecxz
out
sub
ja
in
iret
pop
xchg
fcompl
scas
dec
sub
sbb
lret
or
inc
hlt
pop
imul
pextrw
mov
dec
fcomip
enter
roll
pushf
mov
jnp
push
sub
mov
add
ljmp
gs
inc
pop
std
in
enter
sub
mov
pop
or
pushf
cmpsb
loop
adc
test
sbb
lcall
dec
mov
pop
mov
lods
lcall
rcrl
insb
rcll
fiaddl
dec
xchg
sub
das
inc
pop
negl
repz
push
sbb
sbb
xor
mov
inc
insb
fnstenv
std
adc
jp
adc
bound
adc
ss
lods
adc
nop
int
pop
xor
call
sbb
pop
mov
cld
xor
lds
int
ficoml
push
push
lock
enter
adc
sbb
cmc
push
inc
jg
push
icebp
mov
arpl
imul
lock
cli
xchg
pop
leave
pop
cmp
jbe
mov
in
lods
dec
inc
jmp
js
adc
icebp
fdivrs
ss
ret
iret
xchg
cmp
enter
pusha
sbb
mov
mov
push
mov
aad
push
mov
in
std
xchg
xchg
lahf
adc
xlat
leave
lea
daa
mov
divb
jo
enter
dec
popa
dec
dec
push
sbbb
xchg
fwait
dec
jbe
sbb
sti
stc
sti
push
loop
mov
xorl
loope
sbb
addl
pop
imul
jecxz
mov
fimull
int
rcrb
test
xchg
std
push
jl
xlat
lock
pushf
aaa
dec
lea
daa
mov
fwait
xchg
ficoml
repnz
lcall
mov
repz
adc
lcall
pop
xchg
in
or
cmpsl
jecxz
insb
push
pop
pop
imul
sbb
cs
adc
ljmp
das
jns
cltd
and
lcall
fwait
rclb
test
sub
decl
mov
sbb
sbb
test
inc
out
rorb
cltd
pop
lret
cmpsl
push
mov
adc
filds
std
mov
in
mov
or
les
push
dec
imul
pop
mov
cld
mov
pop
fwait
pop
cli
xor
or
movsb
je
js
nop
les
mov
cmpsb
lcall
inc
clc
xchg
out
or
ja
negb
rolb
ror
inc
or
xchg
std
pop
or
arpl
xor
lods
adc
xor
xor
push
lcall
movb
or
lods
push
mov
adc
ret
je
push
adc
clc
sub
fldenv
call
into
sub
loope
cwtl
nop
sub
jl
std
lahf
dec
mov
sbb
ret
add
orl
dec
pop
mov
rcrl
daa
cmp
adc
jle
xor
in
aam
ret
inc
xchg
and
insb
mov
cmp
mov
mov
push
push
js
aaa
cwtl
ret
or
push
push
out
jbe
inc
pop
or
push
stos
pop
lds
fisubs
jno
das
add
mov
stos
inc
out
sbb
jae
sub
mov
push
add
fmuls
mov
add
cli
or
adcb
shlb
lods
push
or
push
sub
scas
sub
movswl
das
sahf
or
adc
mov
popf
jb
aas
xor
mov
jnp
in
fistl
jne
mov
mov
test
in
adc
in
cmp
negl
lods
sbb
int
fiadds
data16
scas
cmp
jmp
xor
popa
lods
add
jp
fwait
addr16
test
jl
mov
add
mov
adc
push
jbe
jae
mov
out
adc
mov
fldt
xchg
and
inc
or
push
into
dec
lret
adc
adc
jl
in
xchg
jl
jle
and
or
cmc
xor
pop
dec
xor
cwtl
sbb
mov
jge
aad
and
jl
mov
xchg
dec
out
adc
jbe
xchg
mov
testl
lcall
stos
call
daa
sub
fcmovbe
lods
enter
ja
sbb
cmc
cmp
jl
rcrb
loope
sbb
mov
enter
cld
xor
out
adc
repz
mov
lods
cmp
cmp
cmpsb
inc
push
les
sbb
scas
stc
and
xor
pop
jns
sti
iret
sbb
push
mov
outsl
inc
mov
push
inc
imul
mov
mov
xor
gs
dec
and
stos
adc
test
out
rorb
gs
repz
and
iret
push
lret
mov
cmp
pop
lahf
dec
jge
data16
cltd
push
xchg
add
inc
add
xor
xor
push
shll
push
cld
pop
dec
out
jecxz
sbb
xlat
jmp
or
hlt
push
shll
nop
mov
shll
sbb
call
adc
xor
sub
mov
mov
aad
push
call
int
out
shl
stc
mov
dec
arpl
mov
jmp
popf
jnp
imul
flds
testb
adc
mov
push
push
iret
cmpsb
or
in
push
jbe
add
adc
pop
adc
idiv
cs
push
in
xchg
add
mov
pusha
or
xor
fwait
or
pop
jbe
or
pop
mov
scas
stc
fs
outsl
jb
and
mov
pop
icebp
ret
sbb
mov
pop
ret
imul
push
jp
fiadds
ja
fsubrl
aam
cmp
into
xchg
pop
icebp
pop
push
rcrl
dec
mov
imul
xor
adc
mov
mov
daa
jne
int3
leave
sub
xchg
sub
cmp
loope
insl
adc
inc
push
stc
repnz
movsl
inc
gs
or
mov
or
aaa
lahf
mov
jno
mov
cwtl
mov
ret
jl
jle
dec
clc
inc
lret
iret
and
gs
mov
xor
push
stc
test
cmp
dec
mov
int3
jle
lcall
or
shll
and
mov
dec
test
cmp
cmpsl
jmp
popa
insl
fmull
pop
movsb
push
pushf
jbe
jb
pop
cmpsl
or
bound
xchg
fsubl
push
call
cmpsb
xchg
xor
addb
dec
add
dec
orb
jne
pop
lods
lock
clc
xor
imul
movsl
test
loope
sahf
inc
icebp
push
andl
xchg
inc
mov
mov
jp
or
add
test
cmp
in
pop
enter
stos
dec
mov
pop
adc
dec
pusha
repnz
cld
mov
pop
xchg
push
and
mov
shlb
jne
mov
inc
mov
sub
push
push
push
jnp
mov
jo
enter
mov
or
inc
cmpsb
lcall
sti
in
rorb
mov
outsb
add
movb
cmp
das
out
dec
jmp
xor
stc
push
or
xor
outsb
in
js
mov
dec
pop
or
shll
subl
or
add
xchg
sbb
pop
adc
pop
dec
cmp
pusha
inc
adc
jmp
fstpt
jb
addr16
jno
xor
mov
lret
mov
out
lahf
rclb
rclb
push
aas
mov
xchg
fisubrs
pop
sbb
pop
outsb
mov
sbb
add
in
fldenv
inc
sub
dec
add
cld
push
cld
es
jb
out
in
fucom
pop
push
imul
mov
rcrl
and
pop
cltd
jge
lahf
and
sbb
int
pmulhuw
testb
mov
sub
xor
push
fcoms
incb
mov
adc
cmpb
xchg
jo
xor
je
add
xor
push
movsl
jno
lods
mov
adcl
pop
aam
notb
arpl
or
mov
xor
outsl
sub
in
hlt
mov
arpl
call
ljmp
or
aaa
cwtl
push
dec
aad
mov
imul
xchg
dec
sub
mov
cmpsl
call
aad
out
pop
dec
dec
lcall
adc
in
in
ss
in
xchg
xorl
fldenv
jg
sbb
jmp
or
pop
shll
sub
shll
dec
cmp
enter
push
out
and
xor
les
arpl
jae
je
jns
sbb
sbb
jg
cmp
fadd
mov
xchg
test
jnp
nop
cmp
cmp
aaa
fisttpl
or
in
mov
xchg
jecxz
das
add
jecxz
xchg
frstor
lds
xor
outsl
in
jp
cmp
push
pushf
mov
push
or
lea
in
sti
mov
pop
lcall
pop
cli
mov
test
lods
pop
leave
popa
or
stos
jb
mov
cmp
fwait
outsl
sti
jg
imul
outsl
stos
and
aad
out
mov
popf
sub
int3
jno
cs
clc
lock
clc
bound
fwait
sbb
insb
enter
add
bound
inc
mov
arpl
fwait
out
ret
imul
fcoml
cmp
and
jge
das
jmp
add
pop
mov
jae
push
mov
jnp
gs
lods
adc
mov
sub
lea
in
out
ret
push
stos
aam
int
cmpsb
dec
cwtl
clc
out
out
outsb
call
jno
sub
xlat
in
lret
inc
mov
mov
add
fdivl
xchg
xchg
jns
or
mov
emms
jbe
mov
sub
inc
fdivr
scas
faddl
xor
xor
pushf
inc
leave
sub
adc
sub
mov
movhps
test
mov
xor
hlt
add
addb
scas
ret
insl
add
pop
test
je
pop
mov
pusha
scas
in
inc
aam
sub
ret
jns
sti
ret
shrb
es
jns
dec
repz
mov
mov
pop
outsb
dec
inc
or
subl
push
popa
int3
cmpl
clc
or
mov
aas
lcall
lea
xchg
lds
dec
mov
movsl
sarb
xor
test
js
xchg
fadds
lea
push
movb
leave
arpl
add
inc
ret
inc
ds
lret
xchg
lea
flds
inc
in
frstor
add
gs
xor
test
imulb
add
adcl
fidivs
dec
sub
dec
das
js
add
pop
fidivrl
fdivrl
xchg
int3
xor
testl
flds
add
lods
in
rorb
addr16
jge
add
scas
sbb
ljmp
insb
push
push
inc
mov
sbb
cmp
mov
aas
pop
add
cmp
ja
pushf
fisttpl
lret
mov
mov
fstps
or
xor
and
int
pushf
insl
push
fstp
mulb
sub
test
push
inc
pop
or
or
mov
out
mov
mov
xor
outsb
hlt
mov
push
push
fcoms
out
push
ja
adc
cmc
pop
loop
lcall
jns
adc
loopne
jbe
retw
cld
test
test
cmp
sahf
sbb
push
or
mov
xchg
inc
jmp
mov
imul
leave
mov
add
test
jbe
jl
decl
and
cld
mov
cli
mov
stc
shld
nop
int
fstl
mov
add
mov
data16
add
jecxz
or
xchg
cmpsl
jmp
inc
stos
mov
jne
in
jmp
dec
push
mov
push
mov
in
jnp
inc
test
hlt
sbb
push
cmp
pop
jb
adc
daa
test
and
out
fildl
push
pop
mov
jmp
in
gs
movsl
test
ja
push
bound
adc
ret
sahf
nop
icebp
sub
cmp
mov
mov
pop
in
inc
mov
jo
nop
push
leave
inc
inc
xchg
out
subl
push
pop
sbb
cmc
dec
nop
aas
lods
adc
cld
in
adc
push
jno
cwtl
sbb
ja
xor
mov
fxch
test
gs
xor
jge
ja
insl
dec
pushf
cmpsl
and
test
arpl
xor
shl
or
arpl
dec
clc
addb
stos
dec
scas
sbb
push
push
dec
movsb
sbb
sti
in
jle
xchg
push
mov
jno
xor
xchg
adc
adc
movb
adc
pop
pop
and
pop
dec
and
pop
cwtl
and
xchg
inc
enter
mov
fs
aaa
stos
addr16
push
xchg
mov
scas
sbb
jnp
inc
xor
pop
loopne
popf
repz
cmp
add
dec
xor
stos
lea
movsl
mov
inc
adc
bound
mov
cmp
adc
ret
pusha
sbbl
shll
sbb
ss
jne
movsl
inc
out
mov
jno
stos
push
int
add
inc
pop
rcr
sahf
add
stos
ret
mov
inc
insb
test
pop
xor
popf
jecxz
mov
jb
sarl
xchg
sti
jecxz
or
rorl
xor
push
jae
or
sub
dec
mov
add
cwtl
sub
jl,pt
cwtl
jae
or
stc
shlb
or
add
inc
loope
or
cmpsb
arpl
cmp
add
fcomps
dec
stos
aad
int
and
rcl
xor
stos
mov
fcmove
mov
push
sti
cltd
js
outsl
scas
negb
adc
xor
daa
leave
lods
mov
mov
call
cmp
scas
sbb
xor
mov
and
scas
mov
push
leave
push
inc
dec
nop
fdivrl
dec
jns
dec
cmp
inc
dec
fs
sarl
xorb
jecxz
and
pop
cmpsl
push
and
sub
mov
sub
sbb
xchg
jmp
dec
cli
mov
mov
cmpsl
cld
xchg
or
pop
ret
add
mov
shr
jbe
ljmp
cmp
and
pusha
test
pop
loop
cmpsb
insb
imul
add
cmp
dec
je
sub
and
stos
push
pop
ds
jae
xor
sbb
cmpb
ret
push
inc
push
mov
xor
sbb
inc
adc
xchg
push
jne
dec
xchg
test
idivl
jne
mov
stos
mov
push
sub
adc
inc
fisttpll
lcall
ret
dec
stos
inc
mov
fld
inc
out
int3
xor
mov
sahf
mov
scas
outsl
cltd
cmp
pop
push
jno
imul
mov
fnstenv
jg
or
jp
sbb
inc
mov
pop
mov
movsl
pop
lret
in
shrl
sub
cli
aad
std
repz
mov
cmp
cld
or
cmp
mov
pop
jb
shl
les
push
mov
sub
add
lret
jno
in
andl
xchg
pop
adc
cmc
leave
jmp
xchg
arpl
or
cmp
mov
rcll
cmp
add
push
lock
arpl
in
jno
ret
frstor
or
paddd
scas
lret
and
movsb
gs
mov
pop
pop
and
cmp
or
jo
mov
push
sub
jl
jne
and
or
inc
nop
mov
cmpl
mov
into
jns
repnz
jo
jmp
inc
push
sahf
lods
mov
add
cli
scas
fiaddl
imul
or
or
push
xor
leave
mov
cmp
clc
jp
mov
or
int
mov
mov
int3
xlat
std
dec
cwtl
mov
shr
jl
pop
jae
adc
loopne
cmp
sub
dec
pop
rcrb
sbb
inc
dec
push
out
sbb
cmpsb
in
jl
outsb
inc
fcompl
js
out
sti
mov
cmp
das
mov
mov
sbb
shll
xor
rcrl
and
ror
push
adc
aas
mov
sub
divb
ret
push
mov
lahf
mov
outsl
into
cmpb
jne
mov
nop
jmp
inc
adc
inc
xchg
cwtl
loop
enter
mov
out
pop
mov
je
add
mov
repz
stos
jp
mov
mov
arpl
cmp
dec
in
ret
add
push
mull
lret
adc
aas
cli
sbb
in
and
scas
mov
sub
push
xchg
xchg
cld
data16
xchg
xlat
sti
daa
inc
fsubr
or
pop
jg
in
jp
mov
leave
and
dec
xchg
repnz
in
stos
sbb
push
jnp
cmp
lcall
pushf
mov
nop
push
jp
push
fldcw
ret
inc
outsl
movsl
lret
pop
and
jg
imul
aaa
mov
xor
xchg
imul
inc
in
out
mov
loopne
das
loop
aam
inc
push
xor
cli
fbstp
sahf
sbb
mov
xor
and
cli
sbb
addr16
sub
xchg
ret
pop
xchg
sub
aaa
add
hlt
ret
jmp
push
sub
xchg
pop
and
sub
jae
cmp
inc
imul
imul
mov
jns
int
or
pop
jb
mov
push
and
adc
sub
adc
je
fldcw
sbb
jae
inc
fwait
mov
out
test
adc
adc
jnp
fwait
xorb
sti
cmp
andl
dec
insb
shl
sub
adcl
and
out
nop
test
aad
dec
popf
jns
adc
xchg
arpl
cwtl
je
adc
jns
or
xor
out
push
sbb
subb
dec
push
cwtl
pop
lcall
push
jb
jo
leave
loop
pop
push
inc
mov
push
call
scas
daa
xorb
push
sahf
mov
scas
xor
jne
stos
xchg
or
xacquire
sahf
out
rorb
xchg
sbb
or
cmp
xor
leave
cs
push
cmp
bound
loopne
cmp
push
pop
jb
lds
rorl
inc
mov
inc
xor
test
iret
or
jmp
movsl
pop
mov
in
pop
dec
jne
mov
mov
and
je
movsb
adc
adc
icebp
lods
popa
pop
hlt
std
xchg
std
and
js
jns
add
xchg
xchg
dec
add
mov
fs
out
icebp
mov
clc
addl
mov
cltd
sbb
mov
jae
loop
testb
push
xor
adc
jnp
xor
add
shl
push
cld
mov
loop
mov
push
mov
fnstenv
inc
push
in
into
xchg
aad
sub
add
insb
les
cwtl
lcall
jge
or
jmp
pop
rorb
stos
adc
outsb
and
into
std
push
mov
test
mov
cmp
push
into
push
xchg
cltd
pushf
imulb
addr16
icebp
pop
mov
scas
dec
dec
test
jmp
mov
cmpsb
sub
adc
mov
inc
pop
lret
arpl
jmp
xor
sbbl
sub
xchg
jecxz
insb
xchg
ljmp
pop
in
mov
imul
out
gs
mov
mov
movsb
mov
adc
cmpsb
and
bswap
xchg
dec
fstpl
pop
jns
insb
ret
aaa
mov
or
or
mov
cmp
and
inc
shll
adc
pop
and
sbb
jne
loope
fwait
mov
dec
mov
and
ficoms
icebp
add
mov
mov
inc
cmc
adc
fiadds
call
inc
mov
fmulp
xor
mov
sbb
div
enter
ljmp
test
fs
inc
cmp
xchg
cld
xchg
jno
mov
cmp
jecxz
arpl
sub
testb
mov
xchg
pop
mov
sub
cmpsl
dec
adc
push
pop
or
xchg
iret
call
mov
pop
pop
sti
jl
hlt
adc
lret
dec
je
lea
mov
mov
test
repz
stos
ds
cli
pop
call
mov
in
fstl
icebp
clc
sub
pop
fwait
mov
rcrb
pop
daa
sbb
test
shlb
dec
addr16
in
dec
jb
xchg
fptan
ret
or
pop
in
adc
dec
add
inc
and
dec
jmp
mov
clc
push
sbb
outsb
xchg
mov
loope
inc
xchg
shll
fsubrl
dec
iret
int3
leave
fs
mov
shlb
in
xchg
xchg
lahf
add
leave
das
fldenv
mov
jb
daa
mov
jb
jne
cltd
push
int
inc
mov
imul
fistpll
testb
mov
add
jge
sub
rolb
push
inc
mov
ror
xchg
cs
stc
daa
jns
cmp
add
not
push
jecxz
aas
loopne
les
int3
pop
xor
movsl
repnz
and
mov
xchg
push
std
adcl
push
in
dec
cmpl
call
xchg
adcb
push
pusha
xor
out
and
repz
cmc
out
pop
push
popf
sbb
cmp
cmp
fstps
aaa
insl
sbb
or
dec
dec
inc
push
inc
lock
xor
mov
sbb
xchg
popf
sub
mov
xor
pop
cmp
test
nopl
ljmp
ja
xchg
dec
mov
push
mov
idivl
sub
cmp
or
inc
sub
push
push
xchg
mov
jbe
adc
out
cmp
std
xchg
adc
andb
jmp
mov
pop
fadds
dec
xchg
aad
push
jo
shlb
xchg
and
dec
jno
add
pop
cmp
es
inc
fnsave
jle
ror
xchg
adc
and
pushf
sbb
lea
fdivr
icebp
pop
push
or
jae
aam
lods
mov
sbb
and
mov
pop
loope
adc
mov
lahf
ljmp
mov
inc
fwait
xor
cmp
adc
shll
adc
add
lret
scas
cmpsb
xchg
dec
inc
mov
cmp
inc
cmc
mov
sbb
movsl
stos
testl
imul
mov
push
push
cmp
mov
push
out
pushf
cmp
jp
inc
dec
or
insb
xor
mov
ss
xlat
jg
dec
add
out
cmp
loope
ret
sbb
test
jle
in
adc
inc
shrb
loopne
shr
nop
cmpsb
and
mov
in
test
add
sarl
pop
jle
fbld
add
jge
push
add
xor
pmulhw
or
dec
sub
sbb
movsl
ss
test
inc
push
pop
loopne
mov
je
imul
jne
addr16
mov
hlt
push
test
mov
sbb
mov
add
and
xor
mov
push
mov
pop
xor
insb
imul
flds
stc
test
imul
mov
dec
dec
ja
or
xor
lods
int
stc
js
out
imul
pushf
cmp
sarb
daa
arpl
xchg
inc
dec
imul
or
push
daa
es
pop
les
ret
popa
mov
inc
push
add
jecxz
mov
jl
mov
clc
cmp
push
das
or
sbb
xchg
and
insl
mov
add
popf
mov
sti
push
enter
inc
mov
ds
data16
inc
lret
inc
dec
pop
sbb
aas
cs
fidivl
loop
fcoms
mov
das
pop
cmpb
jmp
xor
adc
push
outsl
or
scas
adc
adc
cmpb
inc
cmp
sub
jnp
in
outsb
push
ss
jmp
ds
addr16
lods
int
fs
sub
popf
inc
fstp
xchg
xchg
sub
fbstp
andl
add
jns
out
mov
loope
sbb
push
enter
aaa
out
stc
xchg
loop
hlt
jns
jno
shrl
add
les
shlb
cmp
cmc
int3
cmpsb
pop
inc
outsb
push
shl
inc
stc
cmpsb
aaa
cmp
imul
add
shll
cmc
in
icebp
mov
pop
gs
sub
fwait
jns
mov
mov
js
add
div
pop
sub
dec
icebp
add
in
push
cmc
insb
mov
adc
repnz
and
adc
xchg
adc
pop
jge
lods
push
lods
and
scas
out
dec
repz
xor
insb
lock
addr16
xchg
imul
mov
jns
in
daa
dec
addr16
sub
shr
push
push
cmp
cmp
xchg
mov
xchg
sub
jl
ret
mov
sub
iret
fisubrs
add
sarl
icebp
sti
fwait
repnz
cmpsl
dec
sbb
sub
sub
loop
or
xchg
test
and
ds
jne
mov
jge
outsb
push
lock
rcl
jbe
mov
dec
les
jle
sub
push
sti
pop
enter
outsb
or
aad
shl
inc
arpl
xchg
pushf
and
movsl
mov
push
lret
mov
cmp
push
lods
dec
xchg
sub
dec
mov
arpl
les
fdivrs
sti
mov
lcall
or
sbb
push
popa
push
sub
pop
xchg
cwtl
or
ret
mov
dec
or
pop
les
jae
loope
js
sub
push
iret
lock
inc
into
push
sub
aam
jae
in
xor
popa
jge
pop
inc
mov
leave
cmp
jns
vmwrite
push
sub
aaa
js
iret
pop
call
inc
cwtl
adc
sub
dec
mov
push
sysret
xchg
rcrl
dec
push
mov
sbb
roll
ret
fcomi
rorb
stos
push
sbb
xor
imul
aam
or
dec
fmuls
and
adc
andb
ret
xor
or
and
ret
dec
push
or
push
push
pushf
cmpsl
arpl
jne
pop
lds
sub
repz
xchg
lcall
sbb
fcomps
mov
shl
cmp
outsb
pop
mov
cmp
jp
lret
push
les
jo
xlat
or
test
adc
push
stc
sub
dec
andb
jle
cmpsl
pop
lret
and
mov
iret
sbb
loopne
into
packuswb
dec
add
cmpsb
les
xchg
xchg
in
sub
in
xor
adc
push
test
inc
mov
lret
and
out
loop
pop
sbb
idivb
ss
stos
rcll
mov
push
notb
lcall
lahf
out
fwait
lods
inc
mulb
adcl
aam
imul
xlat
xor
mov
mov
subb
cmpsl
shll
out
aaa
push
dec
mov
mov
push
lds
sub
imul
push
es
loopne
sbb
outsl
add
and
aad
push
les
xor
xchg
rorb
mov
mov
inc
inc
cmp
and
sub
jg
or
stos
push
and
mov
sub
fldenv
push
cmp
and
shrb
sub
nop
lds
push
adc
adc
dec
fwait
mov
jns
xchg
jecxz
mov
mov
sub
shlb
arpl
inc
jno
jle
movsl
mov
mov
mov
in
sbb
jp
test
cmpsb
or
int
shll
lea
loop
rolb
stos
js
pop
out
cmpsb
out
mov
mov
fcmovnbe
push
cmpsb
add
mov
cmp
fwait
aad
int3
inc
cmpsl
xchg
cwtl
cmpsb
dec
fwait
adc
adc
mov
int
inc
inc
inc
push
mov
into
mov
mov
scas
jecxz
jecxz
jnp
cwtl
push
dec
add
mov
jae
mov
in
sub
jnp
push
sub
arpl
jno
cmpsb
es
dec
sbb
loop
mov
jbe
int3
cmp
cli
mov
push
or
mov
cmc
fwait
sub
inc
inc
pop
popa
dec
imul
push
popa
pop
or
test
les
pop
mov
jnp
and
sub
push
jne
cli
lret
push
push
mov
mov
loopne
call
jmp
dec
lret
lret
or
lock
int
inc
mov
nop
mov
sbb
ret
int
sub
xchg
mov
gs
sbb
pop
pop
in
loopne
push
in
or
push
decl
jg
ds
push
or
sahf
add
mov
fdivrl
sbbl
mov
scas
dec
jo
jno
in
lcall
pusha
push
pusha
fmull
pop
test
loope
frstor
adc
fisubrs
inc
cld
and
sub
or
adc
push
mov
cld
shr
es
push
stc
mov
cmp
xlat
jbe
push
xchg
push
insb
xchg
push
lods
mov
mov
or
jmp
cmp
vmread
inc
clc
add
adc
pop
call
and
rcl
bound
into
lods
mov
data16
push
cld
sarb
adc
adc
test
mov
shrb
rcrb
jns
sbb
popa
clc
daa
popf
xchg
lods
xor
cmp
mov
xchg
jl
fisttpl
lods
cld
es
pop
or
insl
dec
xor
or
sahf
stc
push
scas
out
loop
orl
mov
add
jno
fisubs
xor
xchg
aad
fistl
push
fs
sub
mov
and
aas
das
inc
aad
xor
ret
sub
popf
bound
adc
add
out
pop
sahf
mov
fcoms
addr16
cmp
and
mov
cs
fstl
bnd
jge
mov
call
dec
sbb
jo
and
cmp
sbb
cmpsb
adc
test
and
xchg
xchg
sbb
mov
dec
jmp
loopne
notb
add
push
loope
sbb
xor
dec
push
sbb
pop
inc
mov
mov
mov
add
adc
sub
outsl
fimuls
mov
sub
sahf
cmpsl
lcall
fmulp
clc
out
xor
cmp
repnz
nop
mov
xor
adc
push
push
ds
fisubs
data16
sahf
cmpsl
mov
jbe
xchg
push
xlat
xlat
cmp
cmp
sbb
xor
mov
out
in
xor
test
adc
ss
daa
daa
lea
addb
ja
sahf
jbe
dec
clc
pop
pusha
mov
adc
adc
stc
mov
out
sbb
lcall
insl
inc
cmpsb
jo
in
xor
and
fsts
in
sarb
cltd
call
in
lret
mov
xchg
cmpl
pop
rcll
cli
mov
xchg
insl
inc
and
pusha
jl
test
sbb
dec
out
aad
mov
pop
jb
es
xchg
les
insb
jns
xlat
push
or
sbb
mov
in
add
gs
jno
adc
imul
lcall
sbb
jle
clc
fisttpl
jns
push
lcall
adc
xor
enter
inc
imul
or
inc
jne
popf
xlat
scas
push
pop
adc
lahf
mov
sub
mov
xchg
inc
mov
daa
divl
out
pop
leave
xchg
xchg
imull
ja
or
aam
int
jl
push
sub
jle
xlat
jp
mov
movsl
jg
scas
inc
aam
icebp
pusha
mov
fs
stos
stos
inc
mov
clc
xchg
push
pop
icebp
scas
dec
fwait
ss
vshufps
xor
cmp
out
fstl
in
add
rcr
sbbb
mov
pop
mov
leave
push
dec
add
lret
inc
imul
mov
scas
xchg
mov
cmpsl
test
std
mov
push
jle
pop
pop
in
in
dec
cmp
pop
sbb
movsl
jecxz
inc
push
add
das
shll
sahf
and
call
mov
mov
testb
jle
lahf
pushf
cmp
push
mov
mov
xor
cltd
scas
icebp
jne
and
scas
daa
cmpsb
push
shlb
and
sub
jns
jl
mov
mov
adc
fidivl
xchg
popl
and
push
sbb
scas
mov
and
dec
sub
jns
mov
outsl
xorl
test
or
cmc
jbe
inc
adcl
push
aam
inc
cs
xor
popf
jne
jge
ss
dec
push
sahf
ficoms
int3
dec
cmp
int3
push
adc
xchg
pop
jmp
add
std
adc
pusha
fidivrs
mov
add
mov
mov
mov
aad
dec
xor
mulps
nop
push
or
jmp
push
xchg
arpl
shr
jns
adc
or
and
fnstenv
mov
lods
xor
sahf
outsb
clc
pusha
sub
addr16
xchg
sub
inc
add
call
scas
jp
xor
pop
xchg
sahf
jns
push
mov
imul
dec
js
dec
mov
into
das
pop
mov
cmpsb
pop
or
push
dec
xchg
xchg
test
enter
popa
imul
inc
inc
mov
pop
pmaddwd
int
xchg
es
test
push
ret
loopne
xchg
int
sti
dec
xchg
or
add
jecxz
addr16
ja
sbb
push
push
hlt
loope
xchg
sub
push
dec
insl
mov
push
call
lret
mov
subb
add
stos
mov
fisubs
jge
mov
sub
punpcklbw
iret
fnstsw
ret
cmp
je
mov
sub
jbe
xchg
fcmovu
cmp
ss
xor
imul
mov
je
xor
aas
cmp
dec
jae
std
pop
cmp
adc
add
sbb
inc
arpl
incl
xchg
inc
dec
pop
bound
aas
jp
xchg
jle
icebp
mov
mov
and
movsb
sti
daa
pop
inc
cmp
je
jecxz
dec
out
jns
dec
jbe
xchg
popf
mov
lcall
jecxz
jae
fsubrl
jg
sub
sbb
dec
shll
push
mov
sbb
push
adc
test
pop
out
fisttps
int
iret
shll
out
and
and
std
jae
lahf
xor
mov
mov
movsl
cmp
shlb
cli
js
dec
and
shll
sub
fnsave
insb
das
cmc
ret
xchg
arpl
push
mov
fwait
data16
inc
repnz
cmp
mov
stos
ja
mov
stos
fcoml
daa
jno
fsubs
xchg
push
sbbw
jb
test
mov
cmpsl
mov
notb
cmp
and
sbb
inc
or
add
sbb
cmp
push
sti
jae
gs
cmp
xor
mov
inc
mov
mov
push
jae
adc
add
push
outsl
mov
mov
pusha
mov
roll
inc
ret
or
rorl
in
mov
mov
in
outsl
decl
movsb
push
and
test
hlt
mov
sub
cmp
adcb
andps
in
or
leave
pop
jecxz
xchg
pop
fldt
xor
and
mov
paddsw
mov
pusha
mov
shrl
and
dec
and
test
sub
pop
cmc
scas
popa
xor
jg
dec
insb
aas
or
mov
push
cmp
repnz
scas
xor
dec
jo
pop
ds
ds
or
cs
pop
push
xchg
mov
mov
test
in
jge
or
push
aas
adc
mov
add
mov
pop
aas
pop
add
dec
imull
mov
ds
cmp
out
mov
adc
jno
adc
pop
jo
movsb
mov
outsl
cltd
and
pusha
aaa
cmpsb
sbb
pop
imul
xor
or
and
ss
lock
shlb
adc
gs
push
sbb
pop
imul
jmp
je
push
test
scas
push
xor
scas
aad
sub
jecxz
adc
jl
stos
xchg
pop
shll
aas
jl
jmp
out
decb
jge
and
lods
daa
in
in
popf
add
pop
loop
fisubrl
mov
pop
cmp
jns
or
inc
and
push
and
mov
je
call
mov
sbb
or
mov
or
cmp
cld
push
clc
ljmp
dec
data16
aaa
out
fxch
ja
mov
xor
or
cmp
mov
adc
and
sbb
lds
nop
xlat
aad
iret
push
pop
rclb
cmpsl
shrb
inc
adc
add
inc
cmp
sub
sub
xchg
dec
xor
lods
icebp
jle
mov
arpl
fs
ds
mov
daa
cmp
xor
jnp
xor
je
and
test
mov
xchg
rcrl
stos
int
out
xchg
pop
arpl
dec
lret
fnstenv
dec
push
xlat
imul
mov
or
cmp
sub
mov
das
adc
std
inc
add
xchg
test
clc
cld
sub
insl
cmp
std
fistpl
pop
dec
fiadds
test
push
sbb
ret
das
jecxz
out
aas
lret
sbb
cmpl
dec
jne
flds
in
cmp
and
lret
mov
in
add
repnz
iret
and
sub
mov
mov
xchg
fisubs
adc
rol
jno
loop
mov
js
pop
sbb
in
lret
or
rcll
das
imul
xchg
mov
sub
fneni(8087
or
ljmp
rcrl
jge
pop
shlb
mov
insb
loope
push
push
hlt
lock
sti
inc
mov
movsb
xchg
sbb
out
pusha
jno
shrb
or
inc
int3
xchg
xchg
xor
fwait
ret
cli
pop
sbb
cmp
popa
add
and
insb
and
xchg
aaa
out
xchg
xchg
fbstp
gs
adc
outsb
in
addr16
mov
jnp
in
push
je
popa
jo
mov
cmpsb
push
xchg
mov
adc
icebp
fiaddl
jp
idiv
mov
je
aaa
lahf
outsl
hlt
stos
and
and
cs
dec
adc
sbb
sbb
sbb
in
push
mov
pop
repnz
bound
dec
xchg
xchg
sub
push
pop
push
adc
mov
int3
jmp
sbb
out
xchg
and
pop
sbb
xchg
xchg
adc
dec
shrb
xchg
fwait
pop
cmp
mov
and
frstor
icebp
sub
pop
hlt
add
mov
fs
add
repnz
mov
push
push
fs
cmp
mov
add
pushl
pop
lea
movsl
in
cli
or
mov
aas
xor
roll
lcall
mov
mov
cmpl
pusha
into
or
jno
ljmp
int
stos
lods
dec
adc
stos
jnp
xchg
xchg
rcr
pop
mov
mov
std
lock
mov
cs
add
mov
dec
adc
repz
mov
test
push
adc
mov
xchg
xchg
cmp
fisubrs
mov
mov
or
data16
mov
sbb
fnstenv
mov
jns
dec
xlat
pop
adc
jg
xchg
cmp
clc
cmc
addl
lret
stos
shlb
add
pop
dec
and
mov
test
in
int
pop
adcl
push
cmc
sbb
in
push
xlat
lahf
lods
push
fnstcw
mov
pop
adc
out
xchg
leave
das
icebp
fnstenv
and
mov
push
cmp
es
js
xor
outsb
test
into
mov
add
and
lahf
xor
ret
arpl
test
leave
xchg
notl
adc
mov
lea
xchg
sbb
data16
mov
popf
addl
dec
mov
mov
xchg
mov
iret
mov
leave
and
inc
xor
dec
aas
pop
sbb
or
xchg
cmc
stc
xor
imul
xor
pop
pushf
adc
bound
ret
xchg
sub
call
xor
hlt
pop
push
mov
rcr
cs
sbb
inc
clc
popf
sbb
sbb
push
nop
stc
xchg
decb
and
or
mov
add
shll
xor
test
in
mov
fisubs
inc
push
xchg
rcr
in
dec
adc
dec
int3
mov
iret
and
jae
dec
sbb
jle
pushf
sub
std
subb
sub
inc
xchg
cli
testb
movsb
data16
xchg
xchg
cmp
or
dec
out
or
stos
pusha
sbb
rorl
mov
jle
mov
js
lcall
aaa
decl
iret
mov
lcall
jno
jle
mov
jae
jp
aad
ret
or
ja
xor
dec
in
xor
in
test
lea
add
lods
jo
adc
or
test
pop
out
sub
xchg
fcomi
ja
and
sbb
mov
and
mov
sbb
pop
movsb
mov
sbb
push
out
sbb
xchg
or
scas
sub
stc
loope
outsb
xchg
mov
cwtl
and
mov
cmp
mov
sub
add
ds
xchg
lahf
cwtl
adc
xor
jg
je
dec
and
sbb
into
push
movsl
xchg
daa
dec
insl
xchg
bound
gs
shrl
cmpl
push
pushf
or
mov
call
jg
test
insb
jecxz
fadds
pop
mov
dec
jecxz
push
test
stos
stc
jle
dec
sbb
inc
jg
push
fisubrl
xchg
shll
jg
and
push
add
pop
sbb
mov
icebp
dec
sub
mov
aam
dec
push
jo
aad
mov
outsl
adc
mov
sub
and
cmpsb
push
jmp
leave
pop
in
push
rol
cmp
movsb
ret
xchg
js
cmp
dec
in
pop
cli
push
test
push
push
addr16
mov
lods
mov
shl
mov
xchg
insb
cmpsb
cmp
push
adc
out
fwait
mov
xor
mov
and
out
cld
pop
fcomps
adc
mov
js
sub
orb
adc
rol
outsl
imul
cs
shrl
mov
test
int
mov
cmp
and
jae
push
fmulp
std
clc
mov
stc
mov
cmp
cmp
call
cmpb
mov
or
xor
gs
push
mov
lock
daa
pop
sub
lock
adc
xor
lea
and
and
inc
adcl
dec
ss
sbb
sahf
call
test
repnz
mov
and
inc
enter
xchg
out
jb
push
mov
mov
std
pop
jg
call
in
and
pop
add
test
dec
jl
lahf
add
fs
test
fldcw
inc
stos
xor
xlat
dec
and
jne
push
add
nop
inc
add
shlb
mov
mov
xchg
lcall
mov
inc
cwtl
shlb
jno
hlt
ret
insl
cwtl
lret
inc
add
pop
xchg
stos
inc
pop
add
mov
in
stos
dec
mov
sti
jns
mov
add
pop
in
or
add
inc
imul
jns
xor
repnz
ds
fstl
inc
mov
jns
dec
fistpll
sahf
sbb
jmp
push
add
out
xor
inc
xor
int3
jmp
rolb
jns
xlat
mov
in
shrb
ret
aas
pop
scas
nopl
xchg
sub
pop
call
mov
lods
iret
and
xor
jbe
push
popa
scas
push
mov
les
mov
clc
inc
mov
adc
out
xchg
dec
sbb
addr16
jnp
cwtl
mov
insl
dec
xchg
cmp
jg
pop
dec
insb
lahf
popa
mov
adc
sub
inc
xchg
scas
push
nop
cmpb
into
outsb
insl
insb
pushf
jmp
push
cs
ss
jne
pop
push
cltd
jo
xor
inc
fstpl
push
mov
fucomi
loop
sub
sub
in
popf
das
dec
jo
xchg
xor
sub
dec
cmp
js
cwtl
xchg
cmpsl
mov
jbe
int3
adc
xchg
push
scas
cmc
aam
mov
mov
jno
cmp
jo
iret
divl
insb
sahf
push
jecxz
roll
dec
stos
sub
xor
int3
pop
jmp
xchg
mov
leave
iret
cmp
insb
das
jo
inc
arpl
jnp
xor
addb
aad
in
lahf
testl
loope
shll
sub
pop
cmc
mov
dec
cld
jecxz
cmp
mov
mov
xchg
arpl
jmp
ret
adc
adc
pop
scas
and
aad
cmp
fadd
imul
iret
cmp
adc
push
add
mov
pop
push
in
and
testb
jbe
loope
add
pop
or
popf
push
fisttpl
pop
add
dec
scas
mov
xor
adc
xchg
mov
ss
adc
stc
add
in
sarl
add
mov
mov
idiv
inc
mov
push
sbb
adc
mov
pop
mov
pop
push
movsb
fcompl
inc
lds
adc
ljmp
jle,pn
push
sub
pop
test
xchg
adc
fmul
iret
push
test
xchg
idiv
fnstenv
pushf
xor
fadds
dec
scas
and
mov
pushf
and
xchg
icebp
daa
fdivr
pop
sahf
daa
xchg
lds
popf
inc
inc
inc
lret
call
inc
adc
and
inc
dec
out
sbb
in
or
cmpsl
ja
mov
and
fsubrp
scas
das
loopne
pop
lods
imul
mov
xor
fwait
enter
dec
fwait
mov
jle
sbb
aas
int
pop
out
sbb
test
xor
jmp
xchg
les
mov
jns
mov
cmp
or
and
ljmp
dec
mov
arpl
stc
movsl
mov
aad
sub
lcall
jo
mov
cli
sub
push
cmp
push
xchg
sub
cs
or
mov
mov
in
sbb
adc
mov
insb
push
mov
or
les
pop
push
jnp
cwtl
jno
xor
js
out
jns
js
jg
lods
push
hlt
sub
jns
mov
adc
clc
movsb
es
fcoml
sbb
dec
cs
dec
movsl
out
inc
cmp
in
or
ss
dec
push
xchg
je
inc
lret
mov
mov
mov
leave
rcll
insl
out
loop
loop
test
jb
pop
sbb
in
jp
cmc
xchg
mov
repz
movsb
inc
xchg
adc
dec
ret
mov
sub
xchg
out
mov
pop
ss
xchg
pop
pop
mov
jl
push
leave
push
idivb
jno
dec
sbb
pop
subl
and
dec
and
xor
fsubl
mov
sbb
or
and
dec
das
scas
inc
xorb
pop
ret
push
pushf
shl
xor
out
adc
mov
les
dec
inc
cmp
sbb
insb
and
rorl
cltd
push
lea
and
cmpsl
andl
cmp
jge
ret
xchg
sbb
jo
pop
dec
scas
iret
sub
sbb
jl
test
sbb
cmp
fs
adc
inc
call
movsb
push
cmpsl
clc
and
mov
data16
ds
xchg
test
mov
and
adc
mov
dec
nop
gs
sbb
xchg
xchg
mov
mov
movsb
sbbl
cmp
sbbb
in
push
das
inc
scas
jl
hlt
inc
and
arpl
dec
pusha
push
out
and
call
push
arpl
mov
sub
inc
or
push
adc
pusha
lea
cwtl
mov
loop
dec
pop
xor
push
pop
cltd
sbb
out
scas
pop
xchg
xchg
push
clc
cmp
repnz
push
xor
in
rorb
sub
daa
cs
add
les
shrb
push
and
lret
mov
push
shlb
in
lea
and
push
repnz
xchg
push
ret
cmp
jmp
inc
test
sbb
out
repz
mov
insl
adcl
jmp
setno
je
fistpl
lret
sub
scas
dec
cmpl
flds
add
addr16
fwait
pushf
sbb
arpl
mov
shrl
daa
pop
mov
add
call
pop
int
push
fimuls
daa
sub
rcrb
push
jle
push
xchg
push
ret
mov
fsubs
repnz
js
stc
jbe
push
xorl
jmp
into
mov
out
int
dec
adc
dec
cmp
arpl
int
jecxz
test
outsb
lcall
outsl
gs
pop
cld
dec
lods
cltd
lock
mov
repnz
stc
sbb
out
sahf
fdivp
icebp
adc
fnsave
iret
or
fmul
dec
test
ret
in
jns
lds
adc
icebp
adc
movsb
out
add
push
je
pusha
pop
mov
sbb
and
mov
fadd
mov
or
mov
ds
pop
add
and
loopne
mov
jecxz
ret
bound
and
popa
fsubl
subb
lock
mov
addb
movsb
inc
push
sbb
push
repnz
sbb
es
sbb
and
or
sbb
mov
in
push
or
mov
add
je
dec
es
push
and
imul
in
sub
js
in
out
xlat
sbb
repnz
in
jp
cmp
cmp
add
or
popa
pop
and
push
or
push
fcomps
mov
popa
adc
movsb
jnp
out
rol
test
dec
out
mov
jnp
xchg
out
or
pop
movsl
sbbl
decl
test
sub
push
dec
inc
cld
push
outsl
push
ds
std
mov
shll
inc
out
add
xor
cmc
xchg
xor
out
mov
jmp
dec
mov
jmp
pop
dec
addr16
sbb
je
lds
pop
test
popa
jecxz
push
mov
les
push
test
out
sbb
iret
shll
cmpsl
fisttpl
subb
push
xchg
lret
rep
sub
adc
adc
aas
pop
dec
add
imul
xor
mov
sub
dec
scas
push
push
mov
mov
jns
pop
shlb
push
rcrl
sbb
sbb
fdivs
mov
lahf
sahf
mov
sbb
test
rclb
test
out
enter
push
adc
cld
shr
shr
shlb
push
sbb
mov
pop
fidivrl
sbbb
adc
into
push
movsb
mov
cmc
push
inc
cmp
int
cli
sbb
iret
fcompl
fdiv
inc
mov
sbb
pushf
js
adc
arpl
aad
push
pop
nop
arpl
inc
sti
and
jnp
jo
mov
adc
aas
rorl
flds
data16
xchg
mov
jle
mov
leave
fstl
in
jae
pop
xor
mov
ds
stos
out
adc
lret
int
adc
or
out
test
icebp
in
jbe
inc
pushf
mov
into
je
out
sti
lcall
into
in
fcom
or
in
and
arpl
or
dec
hlt
popl
cs
aam
ret
dec
jp
addr16
push
mov
mov
jl
push
shrb
inc
jge
fisubrs
mov
and
adc
test
xor
adc
sahf
arpl
lret
push
sbb
push
mov
ret
pop
xlat
inc
jmp
scas
push
mov
mov
sti
dec
pop
mov
hlt
pop
jecxz
in
mov
mov
xchg
cmp
sub
mov
pop
out
dec
pop
cli
mov
das
int3
cmp
outsb
imul
mov
cmp
ret
xchg
and
push
fcoms
sbb
or
hlt
sahf
xor
sub
movl
cmp
cmp
mov
insl
sbb
mov
fldl
mov
xor
stos
and
inc
jge
and
cli
push
aam
loope
in
push
pop
jmp
mov
push
popa
xor
das
inc
jl
cmp
mov
std
shlb
push
outsl
or
or
xlat
pop
push
pop
sbbb
sbb
cmpsb
mov
xlat
mov
sub
mov
xor
in
and
and
test
jnp
add
push
dec
mov
cmpsl
leave
xor
jae
test
in
push
pop
xchg
sub
jbe
mov
jp
pop
xor
scas
pop
repz
mov
cltd
push
xor
push
gs
sub
xorb
cltd
out
movsl
push
inc
cmp
addr16
fs
and
int3
or
insb
push
dec
and
jmp
jnp
mov
sub
inc
mov
imull
add
mov
gs
lods
pop
jp
mov
movsb
pop
or
hlt
mov
fimuls
stos
clc
mov
cmp
adc
addr16
fbstp
mov
xor
test
lock
rorl
adc
xchg
inc
push
out
aad
ss
mov
ss
fidivrl
popf
xchg
dec
push
rcr
stos
stos
mov
pop
out
sub
and
les
fs
inc
std
mov
ret
mov
lcall
xor
daa
iret
and
xor
fisubrs
js
sbb
cltd
jg
adc
lods
les
test
sbb
mov
popf
lds
or
lret
fadd
sub
jg
imul
adc
lret
arpl
mov
lret
adc
dec
pop
adcl
repnz
into
xchg
lret
pop
shlb
inc
lret
cmp
xchg
adc
dec
sbb
aad
xor
or
aam
mov
mov
mov
dec
sti
pop
sarl
insl
loop
outsw
sbb
cmp
rcl
push
lds
lahf
jne
enter
push
scas
xlat
or
mov
sbb
mov
jecxz
and
adc
test
pop
pop
cmp
loopne
adc
inc
scas
fnstcw
fisubs
fdivrs
push
movsl
dec
pop
or
fidivl
cltd
cld
imul
sbb
lret
out
loop
fisubl
cmp
pushf
inc
xor
mov
fildll
das
xchg
mov
mov
mov
sbb
jns
dec
stos
out
clc
xorb
jne
mov
ljmp
dec
cmpsl
push
push
cli
bound
push
call
inc
push
sub
inc
push
pop
aas
xchg
cld
pop
or
push
pushf
arpl
aad
fistpll
jnp
icebp
repz
adc
cmp
mov
pop
sbb
ds
loop
in
sbb
out
mov
psubusw
cmc
leave
mov
les
mov
mov
lds
sub
pop
data16
xor
aas
jmp
push
push
fdivs
ss
ja
adc
jecxz
enter
sub
add
mov
pop
divb
and
jle
scas
push
add
mov
fcomip
jne
aaa
lcall
pop
jge
push
push
push
jo
ds
cltd
sarb
sbb
push
pop
enter
aas
mov
mov
pop
xlat
dec
flds
jb
dec
fildll
xchg
pushf
divl
popf
imul
in
sti
std
das
shr
rolb
out
popf
gs
xor
jo
mov
aaa
xchg
push
inc
loop
inc
mov
std
mov
pop
outsb
jle
xorb
popf
dec
cwtl
lds
add
jno
mov
cmp
jg
popa
int
fadds
loope
aaa
test
leave
xor
xchg
lcall
call
mov
aaa
pop
out
pop
jmp
dec
fnstcw
pop
scas
xor
aad
inc
in
imul
lds
and
mov
int3
fildl
jo
sub
fwait
std
imul
xchg
pop
imul
or
and
out
fsub
pop
xor
dec
dec
mov
push
push
xchg
loopne
and
or
ss
xor
push
popf
mov
xchg
and
xlat
inc
ss
outsl
xlat
mov
lods
cmpsl
sahf
mov
scas
adc
pop
test
int3
add
pop
mov
push
lock
and
push
popf
imul
int
frstor
js
call
loop
mov
mov
lret
push
push
and
ffreep
cmpsb
out
sarl
sarb
mov
fsubl
push
ficoml
ret
adc
dec
push
mov
mov
cs
dec
xor
outsb
mov
jg
adc
shl
pushf
int3
mov
mov
mov
shl
arpl
int3
pushf
and
lds
adc
daa
lods
std
in
dec
fiadds
les
outsl
dec
iret
cmp
jmp
shlb
popa
dec
xor
sti
movsb
cmp
inc
xchg
push
repz
je
pop
push
xor
adc
rcrl
cmpsl
sub
xchg
add
mov
rcrl
das
iret
aad
sub
clc
add
mov
dec
or
cmpsl
jnp
push
ds
xchg
jmp
and
cmp
jb
out
repnz
subb
ja
jno
stos
iret
inc
xor
cmp
bound
mov
les
jae
sbb
pop
pop
enter
xchg
sahf
aad
inc
loopne
cmp
ret
lock
jp
incb
pop
add
push
test
jns
sub
xchg
icebp
ss
insl
sbbb
mov
outsb
call
inc
fcoms
adc
cmp
add
sub
cwtl
xor
push
cli
push
lds
xchg
add
xor
mov
out
scas
mov
ret
int
xor
mov
js
add
andb
mov
mov
add
loope
ret
fcmovnu
lcall
rcrl
into
inc
ret
std
stc
jmp
cmp
int
fwait
mov
inc
cld
out
mov
enter
arpl
into
push
pop
xchg
or
mov
shll
sahf
mov
xor
daa
outsl
adc
or
sub
sbb
imul
mov
or
or
add
lock
cmp
jns
inc
mov
lds
lds
mov
mov
inc
jle
jae
push
outsb
jge
pop
inc
std
lods
xchg
mov
outsl
mov
aam
xchg
jae
adc
fisubl
std
add
mov
mov
das
shll
inc
push
notb
in
push
jecxz
jmp
fcmovnbe
xchg
mov
and
loopne
mov
jle
loop
test
pop
and
addr16
ljmp
cmp
fimull
inc
cmp
sbb
xchg
ja
cld
adc
fnstsw
pop
jns
pushf
xchg
dec
in
jbe
aaa
nop
push
sbb
sbb
dec
mov
sbb
adc
popa
lods
jb
inc
mov
std
mov
std
add
out
jb
fsubr
ljmp
mov
dec
mov
cmp
and
sbb
ljmp
push
cmpsl
mov
push
iret
dec
inc
negb
mov
and
in
sub
inc
push
cltd
xchg
cwtl
jl
dec
jp
call
cmc
add
faddl
aaa
xor
pop
dec
push
adc
shll
mov
outsb
and
adc
in
loop
movsl
jmp
stc
mov
fbld
xchg
add
push
push
sbb
push
and
cmp
pop
out
sbb
lock
and
or
das
or
inc
or
fs
fs
aam
imulb
adc
stos
jb
xchg
jae
mov
dec
aad
inc
mov
in
and
test
mov
push
stos
mov
cmp
push
fnstcw
xchg
clc
or
dec
mov
je
inc
add
cltd
in
jmp
jg
cmp
sub
cmp
in
es
xchg
loope
dec
fisubrs
inc
lock
insl
je
dec
cmp
aad
or
mov
ret
scas
scas
push
adc
cmp
lds
scas
lret
push
test
int
sti
add
pop
popa
or
pop
adc
xchg
pop
or
jle
cmp
xor
mov
pop
cwtl
lods
jecxz
in
shr
sarb
loopne
pop
mov
xor
inc
mov
and
and
xor
sbb
out
nop
stos
pop
movsl
mov
xor
in
and
gs
mov
mov
xchg
movsl
gs
bound
mov
andb
inc
outsl
push
test
adc
sbb
imul
repz
mov
jo
imull
imul
lret
jg
pop
cmp
and
enter
xor
push
mov
push
mov
pop
repnz
cld
das
sti
and
dec
loop
je
std
je
in
outsl
adc
push
mov
shl
mov
dec
dec
aad
push
lret
sbb
shr
aas
out
loopne
mov
bnd
iret
stc
mov
in
mov
sub
cmpsl
divl
adc
movsl
xor
xor
dec
cld
test
sbb
xor
xchg
or
push
popf
or
and
pop
pop
loopne
lret
loopne
lahf
or
push
cmpsl
mov
test
push
cmpsl
adc
sahf
iret
cmp
dec
add
loope
inc
clc
xchg
xchg
out
sbb
movsb
pop
out
cmp
push
adcb
iret
scas
out
ljmp
push
dec
push
pop
bound
pop
daa
mov
jecxz
push
xchg
pop
pop
lods
or
xor
inc
rcrl
lea
jae
mov
and
xchg
adc
sahf
xor
sub
xor
cmpsb
fiadds
je
jge
ret
inc
es
das
xor
in
call
xchg
add
fisubl
mov
and
imul
cmp
pop
int3
divb
or
adc
in
ret
or
adc
sub
sahf
push
xchg
movsb
sbb
lea
shlb
push
outsb
jae
aas
sbb
adc
pusha
sbb
lcall
mov
mov
xchg
sbb
mov
call
outsb
arpl
lock
xchg
lock
call
mov
loop
sbb
mov
lds
mov
test
cld
outsb
inc
mov
sbb
das
cmp
dec
fsts
mov
addl
hlt
rcrb
ret
sbb
dec
or
push
adc
fs
in
jae
mov
out
push
add
out
cmp
test
inc
into
aad
in
in
add
cmp
push
jnp
sbb
pop
sbb
lcall
and
cmp
cmp
movsb
mov
cmp
fnstsw
aad
adc
cmp
cld
fstpl
mov
fwait
cmp
fwait
and
jb
fs
or
test
xchg
insl
sub
out
call
or
mov
rcrl
add
push
ficomps
addr16
arpl
xchg
aam
icebp
cli
and
outsb
cmp
cmp
mov
loope
or
mov
fldcw
outsl
pop
lcall
xlat
andl
insl
add
xor
test
fs
dec
inc
cmp
pop
adc
lret
repz
call
ret
mov
mov
divl
enter
push
movsl
sbb
or
lahf
ds
dec
test
sbb
sbb
ja
ljmp
cmp
inc
daa
add
mov
mov
add
pushl
gs
cltd
in
sbb
popa
pop
leave
add
sub
xor
daa
push
stos
aaa
in
lahf
jmp
push
inc
sub
xchg
ljmp
and
xchg
loopne
pop
mov
lods
xchg
fwait
add
jp
or
ret
popf
fcoms
ret
test
and
push
test
enter
adc
aaa
xchg
push
or
mov
push
pop
sbb
mov
fimull
push
push
les
dec
lods
loope
mov
insl
sub
stc
mov
pushf
stc
rolb
iret
or
notb
fsubl
xchg
jecxz
cs
fisubrs
scas
gs
neg
mov
or
pop
dec
in
jnp
adc
sub
inc
std
add
int3
pop
inc
inc
cld
add
imul
mov
fwait
or
and
mov
lahf
inc
xor
rolb
or
pop
lods
pop
dec
cli
pop
or
xchg
sahf
mov
sbb
cmp
or
test
jo
fs
in
out
inc
outsb
data16
mov
les
pop
ja
popf
rolb
or
dec
in
jmp
rcll
mov
les
mov
shll
jle
test
stc
stc
insb
negb
mov
inc
adc
jno
clc
fiaddl
mov
mov
pushf
or
clc
les
mulb
dec
aas
idiv
add
xchg
or
std
fistpl
inc
xchg
push
jbe
in
mov
or
fwait
daa
inc
aam
inc
or
mov
push
lods
adc
push
stc
push
or
ret
xor
mov
fsubs
push
mov
movsl
xchg
sbb
mov
div
das
cmc
xchg
filds
stos
scas
cmpsl
jmp
jmp
test
pusha
sbb
orb
adc
outsl
fidivs
inc
add
adc
inc
and
pushl
xchg
xor
pop
stos
int3
sarb
imul
into
mov
sti
sub
push
leave
leave
push
and
rcll
sub
mov
mov
icebp
xchg
mov
fildll
inc
out
push
lahf
inc
sarl
scas
jmp
ret
lds
dec
notb
and
ret
xchg
aam
test
mov
adc
rcl
subb
ss
pushf
inc
pop
sub
fsincos
rolb
pop
sahf
cs
iret
dec
lea
int3
lock
lcall
mov
push
push
push
mov
push
push
stos
cmpsl
scas
mov
stos
aad
cmp
adc
lock
fidivs
jmp
iret
test
push
xorb
lcall
fisttpll
push
sar
not
lret
xchg
jle
pop
xchg
out
insl
orl
je
push
mov
xchg
outsl
push
in
add
je
bound
fsin
insl
inc
test
fucomip
insb
pusha
fbld
data16
leave
pop
aad
dec
add
add
out
inc
sub
fwait
mov
pop
cs
pop
pop
out
out
jmp
int
je
cwtl
je
cmp
jl
out
nop
jp
mov
punpcklbw
outsl
fldenv
notl
fildll
mov
add
cltd
xlat
mov
in
adc
das
xor
out
loope
lret
push
stos
xlat
scas
outsb
and
outsb
pop
sub
xchg
mov
jle
pop
mov
out
sbb
xchg
adc
dec
jmp
int
in
pop
lock
sub
adc
xchg
xor
stc
push
add
push
mov
inc
sub
push
shrl
into
int3
aaa
outsl
push
icebp
pop
aad
push
aad
clc
popa
mov
mov
or
mov
out
aaa
jo
das
fs
push
inc
fucom
sub
je
ss
lods
inc
xchg
int3
notb
aad
test
xchg
jmp
icebp
outsb
divb
aam
xchg
cmpsb
mov
fsubs
test
inc
xor
mov
std
test
dec
iret
stos
push
jmp
fistpll
gs
popf
ret
xchg
loope
ja
xor
adc
adc
lods
push
jo
xchg
mov
fcmovb
dec
into
dec
xchg
push
lahf
jmp
iret
rclb
cs
mov
push
into
and
add
dec
cs
pusha
cltd
lods
pop
cmc
lret
iret
loop
and
mov
xchg
pop
std
add
xchg
pop
xchg
inc
notb
or
xor
mov
clc
imul
or
stc
movl
add
add
add
pushf
std
pop
cmp
adcl
push
addr16
insb
and
lahf
ljmp
mov
mov
xor
out
mov
jg
loope
in
enter
loop
sub
fs
inc
fidivs
shlb
push
fisubrl
cmp
daa
dec
and
push
mov
jns
gs
jbe
push
adc
or
xchg
gs
rol
dec
adcb
dec
mov
xchg
lcall
pop
sbb
adc
lret
cmc
je
mov
jo
inc
call
sahf
sbb
popa
int3
and
xor
out
mov
dec
sti
out
cwtl
adc
pop
out
xchg
inc
sbb
xchg
and
pop
sbb
push
leave
xor
gs
cli
in
jb
push
bnd
loopne
xchg
push
or
in
inc
sub
adc
push
xchg
lods
jne
sti
test
xchg
ljmp
pop
fbld
aas
punpckldq
dec
add
cltd
dec
ss
add
popa
adc
loopne
addr16
leave
adcl
push
shl
and
mov
stos
push
cmpsb
movsl
and
xchg
insb
jg
push
iret
pop
mov
in
inc
stos
pop
jmp
mov
std
loopne
mov
jb
xchg
or
sub
in
jbe,pt
and
imul
inc
sbb
in
jmp
pusha
dec
aad
push
sbb
pusha
int
xchg
xchg
mov
cmc
dec
push
mov
fiaddl
jmp
or
add
shr
mov
lret
in
test
add
or
hlt
ret
scas
xor
xchg
mov
inc
mov
scas
jp
adc
mov
dec
xor
jne
cmp
cmp
inc
jae
ja
sbb
pop
fistl
notl
icebp
push
push
jb
xor
int
arpl
and
xchg
and
push
loopne
lret
cmc
push
ss
dec
cmp
addr16
lods
shrb
inc
subl
cmp
lods
inc
testb
mov
fstpl
sbb
pushf
fidivrs
ja
xchg
sbb
jl
outsl
fisubl
ficomps
push
sarl
in
ja
sbb
loop
pop
adc
lods
jbe
jecxz
push
xchg
jne
inc
pop
jne
test
sub
in
jb
mov
mov
xchg
arpl
lea
cmp
cmpsl
scas
xchg
mov
xchg
push
mov
fidivrl
int3
push
ja
jmp
inc
sub
sahf
mov
cmp
push
lcall
or
cmpb
or
jp
pop
xchg
outsb
mov
sahf
jb
fisttpll
dec
int3
push
movl
aas
jno
fstpl
pushf
ficompl
inc
lods
fwait
mov
jbe
jae
into
xchg
jo
enter
pop
adc
ds
pushf
add
movsl
xor
xchg
test
sti
test
mov
dec
fdivl
pop
mov
or
xor
cltd
or
xchg
jecxz
pop
repnz
jp
or
outsb
movl
test
mov
outsl
int
jp
sbb
add
pop
jo
mov
mov
inc
sub
mov
daa
inc
scas
inc
mov
es
mov
in
fsubrl
mov
dec
andl
lods
push
xchg
cld
fmul
mov
cmp
out
mov
cmp
mov
fiadds
out
xor
dec
push
push
stos
xor
movsl
inc
pusha
sub
in
mov
test
xor
sub
adcb
fdivrl
sbb
lret
gs
xor
push
adc
push
pushf
add
sbb
mov
jns
jne
ja
sbb
fisubs
push
jnp
or
pop
dec
rcrb
pop
jbe
test
dec
das
cltd
mov
dec
aaa
push
das
mov
test
andl
divl
inc
popa
mov
xchg
xchg
dec
out
mov
and
add
mov
scas
gs
push
cmpsb
imul
lock
ficomps
mov
int
push
cmp
and
mov
mov
mov
jecxz
iret
push
dec
cltd
sbb
leave
rcrl
or
cmp
add
test
pop
adc
dec
push
mov
test
inc
shl
dec
adc
jbe
jns
pop
xchg
jne
adc
jl
ja
jo
out
mov
cld
mov
mov
xor
cmc
xchg
sahf
pop
insl
cmc
gs
out
js
stos
fwait
xor
mov
adcb
push
faddl
mov
mov
js
or
popf
mov
cmp
cli
jno
pusha
push
in
sub
in
jg
js
cmpsb
adcb
in
cmpsb
pop
ja
int3
cs
pop
cltd
out
sbbb
dec
mov
mov
add
dec
inc
clc
shll
add
mov
jmp
lcall
mov
out
fsubr
mov
or
xchg
aad
cld
dec
inc
pop
push
fs
dec
aam
inc
sub
xor
push
mov
les
jg
mov
mov
lcall
sti
xor
movsl
jg
jns
push
jmp
iret
lds
dec
fs
or
jg
cmp
aaa
in
es
pop
sti
lahf
enter
pop
fwait
ret
push
orl
and
mov
ljmp
cmp
adc
fucom
and
fstpl
push
adc
or
sub
pop
fldl
cwtl
andl
jb
dec
mov
nop
cmp
lock
js
or
mov
or
icebp
inc
aad
sub
repnz
add
lret
repz
cs
or
dec
mov
les
mov
loope
subb
leave
mov
xchg
daa
movsb
std
jmp
ljmp
int3
paddb
sub
jecxz
pop
lahf
mov
or
arpl
sub
push
inc
nop
ljmp
add
icebp
adc
push
jns
jbe
dec
int3
sbb
lcall
popf
adc
sbb
lret
jnp
cmpb
dec
call
loope,pn
sub
push
popf
adc
repz
or
arpl
inc
pop
addr16
and
inc
sbb
mov
nop
mov
test
adcb
adcl
mov
push
data16
fisubl
pusha
testb
rolb
jg
mov
inc
test
stos
push
push
jb
lahf
imul
rcrl
dec
mov
mov
roll
pop
and
pop
sti
sub
add
popa
in
inc
jbe
test
fmul
inc
aad
iret
daa
iret
jb
mov
or
inc
test
rcrb
jg
stc
data16
jp
imul
cli
ror
push
push
push
sub
dec
and
test
lock
bound
popa
sbb
jecxz
dec
ljmp
push
adc
push
jnp
les
cmp
lahf
jl
cltd
in
inc
lcall
in
add
mov
xchg
cmp
adc
cmpsb
sti
pop
jnp
xor
sarl
scas
fwait
sub
pop
dec
adcl
or
mov
adc
pop
iret
pusha
jmp
call
mov
test
aam
dec
sub
xor
sbb
nop
lcall
or
push
cmp
mov
mov
out
mov
lds
push
and
cmp
ljmp
je
pop
jge
xorb
mov
add
jo
cmpb
bound
jne
int
add
xor
data16
xchg
dec
or
mov
in
mov
notl
jle
pop
out
outsl
xor
xchg
lcall
xchg
and
imul
or
sbb
shrl
sbb
inc
rclb
push
sahf
ret
dec
cmpsb
sbb
jno
jo
imul
dec
loope
mov
test
xor
rcrl
cmp
cmp
test
jb
sbb
mov
inc
jl
cmp
ss
negl
pop
add
scas
outsl
mov
xor
out
mov
or
jbe
cmpsb
in
mov
test
inc
add
push
repnz
fdiv
mov
ja
add
mov
test
xchg
or
fmuls
and
pop
or
inc
adc
in
je
and
pop
sub
and
and
inc
aaa
push
pop
outsl
mov
or
subb
int3
sti
pop
jle
adcl
testl
add
xor
cmp
jns
mov
push
dec
ss
out
mov
ficompl
push
insb
pop
repnz
dec
or
scas
iret
sbb
add
fldenv
add
xor
repnz
xor
push
and
cmp
mov
pop
cmpsb
and
outsb
mov
mov
jno
mov
pop
outsb
std
jo
stos
fsubrs
mov
es
add
inc
xor
push
in
lods
lret
cmp
jbe
push
pop
movhps
fsubrl
outsl
mov
cli
shrl
dec
cmp
outsb
nop
lret
adc
loopne
into
push
pusha
mov
or
lret
arpl
dec
outsl
push
adc
es
sub
adc
mov
push
lock
loope
fcmovnu
push
addl
inc
inc
xchg
std
pop
cmp
and
xchg
js
push
inc
xor
add
fld
rol
cld
push
lods
xlat
addl
and
pop
and
mov
pop
jb
sub
adc
cwtl
mov
push
hlt
test
sub
mov
lods
sub
xor
push
test
jae
adc
loopne
inc
push
pop
daa
pop
xchg
mov
lds
int
aad
lret
in
int3
enter
cmp
jmp
out
mov
jp
test
mov
leave
cmp
in
and
mov
fucomip
mov
add
iret
das
dec
xchg
cmpsb
insl
fmuls
adcl
into
push
test
jnp,pn
sbb
xor
sbb
into
xchg
jne
sub
mov
push
pop
mov
jmp
sub
into
inc
iret
stos
mov
iret
push
dec
cmp
jecxz
sbb
or
lahf
es
mov
mov
dec
mov
add
in
ds
hlt
cmp
mov
mov
adc
jbe
or
mov
jae
or
push
push
cmp
mov
shrl
popa
cmpsl
mov
jae
and
inc
mov
dec
fucomip
pop
outsb
shrl
push
idivb
out
adcb
push
cmp
cli
and
rcll
ja
subb
cmc
mov
push
lret
jl
push
adc
dec
mov
rcr
fistpll
mull
adc
ljmp
xchg
cld
jp
sub
loope,pt
cld
pop
xchg
sub
in
fbstp
mov
pop
ret
lds
jl
stos
sbb
lret
adcl
lret
repz
sub
pop
mov
lds
jmp
enter
xor
jl
xor
dec
dec
popa
stos
cs
push
jbe
push
jge
gs
push
jmp
loope
jo
scas
cmp
push
andb
out
xchg
je
sbb
mov
xlat
gs
sub
sub
std
in
inc
cwtl
adc
clc
mov
ret
andl
aaa
lock
push
xor
push
iret
andl
mov
lret
cltd
shrb
lret
mov
stos
lods
pop
daa
test
add
jo
mov
xor
dec
jb
aam
imul
pop
sbb
xchg
xlat
add
popa
and
cmp
or
mov
lea
mov
lret
insb
stos
or
out
arpl
adc
push
push
scas
adc
aas
mov
cmp
sarb
movsl
add
add
loop
rcl
clc
mov
lahf
sbb
mov
and
cmp
push
push
add
xor
outsl
mov
pushf
pushl
pushf
cmp
xor
pusha
mov
dec
xchg
cmpsb
inc
or
aas
int3
add
jb
mov
adc
inc
push
in
in
hlt
je
bound
repnz
cmp
inc
mov
push
fmull
cmp
movsb
je
cmp
cmp
push
pop
jno
xchg
or
xchg
add
mov
and
clc
dec
xchg
cmpsb
mov
loope
sub
inc
xchg
cld
lock
mov
push
ss
push
adc
inc
cmp
hlt
xchg
add
pop
push
in
imul
push
repnz
cs
aam
jno
notb
cs
mov
sbb
cmpl
push
sbb
jo
pop
mov
xchg
add
cmp
cltd
jbe
adc
hlt
movsb
sti
dec
and
imul
std
repnz
pop
sbb
pop
xor
or
es
jle
mov
js
adc
lds
cmpsb
pop
pusha
adc
stos
stos
je
mov
repnz
enter
lods
push
jnp
in
mov
mov
or
xor
cmp
js
leave
mov
insl
notl
jns
xorl
imul
jg
outsb
lret
pushf
gs
insb
es
cmp
and
sbb
rorb
pop
lds
ret
and
mov
add
and
push
and
shlb
movsb
popa
inc
lock
cmp
test
in
stos
and
mov
xor
and
in
cltd
icebp
outsl
mov
add
cltd
aas
add
mov
inc
and
ds
mov
xchg
int3
nop
mov
ret
dec
cmpsl
popf
or
xor
xor
loope
mov
fstpl
dec
xor
cmp
jge
rclb
repz
sub
test
in
lahf
mov
jmp
mov
jo
push
push
xchg
jecxz
sahf
mov
add
inc
nop
ret
fldt
mov
jp
fadd
mov
mov
jg
gs
push
leave
add
cli
add
add
mov
out
inc
cmp
mov
ds
daa
call
xor
inc
mov
aad
pop
mov
imul
mov
cmpsl
int
mov
clc
cmpsl
testb
sbb
inc
jo
lret
cmc
fnstcw
int3
imul
sub
sub
mov
fstp
push
mov
data16
sub
outsb
out
je
and
dec
icebp
xor
sub
aam
jne
xor
jmp
pop
data16
mov
mov
js
cmp
push
jno
pop
cld
jmp
clc
jne
adc
pop
les
stos
clc
rolb
rep
nop
xor
mov
dec
push
das
jle
mov
scas
fdivrl
xchg
xchg
mov
push
out
mov
lods
xlat
or
push
adc
sub
jp
sub
dec
adc
fidivrl
mov
mov
add
insb
push
push
sbb
in
xchg
daa
add
cld
in
shl
xor
idivl
mov
pusha
sar
sub
cmp
cwtl
mov
arpl
js
aas
jae
pushf
enter
push
add
dec
xor
in
push
movsl
xlat
sub
test
mov
mov
lcall
mov
add
jle
popf
cwtl
ret
movsl
add
je
mov
mov
or
sbb
frstor
xchg
adcl
out
jnp
ja
aas
cmp
int3
jg
jae
dec
orl
cwtl
test
dec
in
sub
pop
out
negl
icebp
and
cmp
push
mov
je
mov
and
mov
dec
rol
cwtl
cmp
scas
xchg
insl
cmpsb
push
xchg
lock
and
add
call
xchg
sbb
cmc
mov
mov
push
jae
call
pushf
cwtl
jne
pop
push
out
stc
xchg
test
popf
dec
test
inc
in
mov
pop
movsb
jecxz
in
int
add
jb
mov
pop
adc
bound
ret
mov
and
dec
jl
push
adc
inc
jg
jl
jecxz
xchg
sbb
int
and
bound
add
sbb
xchg
mov
adc
lcall
call
lods
call
or
in
aad
sbb
in
and
mov
xchg
pushf
mov
stc
cld
rcll
or
push
inc
insl
cmp
cmpsl
fs
ljmp
pusha
scas
or
movsl
in
sbb
pop
add
dec
xor
lret
sub
mov
rcrl
les
sti
push
jbe
mov
mov
loop
aam
faddl
cmpsl
imulb
les
push
mov
pop
xor
push
imul
xlat
cld
add
in
jge
jns
jecxz
daa
push
push
dec
pop
mov
inc
xchg
test
dec
ret
pop
inc
outsb
daa
dec
cwtl
ja
dec
add
mov
inc
ret
lret
out
popa
popa
push
lods
ret
xchg
xchg
daa
xor
or
inc
jnp
mov
push
out
xorb
in
cmp
aad
out
nop
mov
jae
jns
jg
test
in
and
adc
jg
aas
mov
xchg
test
push
ss
andb
iret
repz
fisttpl
jmp
fisttpll
das
pop
inc
and
fcmovnu
cmc
repnz
dec
bound
xor
inc
add
sbb
adc
push
inc
pop
fidivrs
cmp
jp
xchg
xor
mov
inc
mov
sub
cmp
nop
xchg
jecxz
notl
mov
stc
in
je
ljmp
mov
mov
or
pushf
adc
scas
mov
cmpsl
int
inc
movsb
repnz
jg
lods
ds
mov
push
push
imul
jns
cwtl
xchg
fstpt
mov
push
mov
ret
iret
test
aaa
sahf
inc
scas
add
xchg
outsl
cwtl
ret
insl
mov
and
stc
faddl
enter
mov
test
lods
jb
push
jl
xor
repnz
inc
pop
pop
xor
scas
in
shll
dec
mov
out
in
mov
mov
jo
mov
ror
dec
jp
ret
rcrb
aas
movsl
fbld
mov
cmc
daa
imul
xchg
xchg
jo
jle
leave
in
jae
fiaddl
sbb
pop
push
xchg
xor
adc
mov
pusha
je
cmp
mulb
and
mov
mov
add
sub
lea
dec
stc
je
cwtl
mov
fidivl
adc
scas
sti
push
movsb
int
setle
mov
fcoml
daa
inc
xor
jg
pop
lock
push
sbb
cmp
loopne
adc
rclb
movsb
sti
xor
hlt
push
stos
sub
add
fisubl
rorb
js
sbb
imul
and
leave
push
push
js
ret
aaa
test
andb
test
in
sub
inc
in
in
xchg
fnstcw
lock
repnz
addr16
xor
inc
xlat
mov
loopne
loop
dec
das
pop
cmpsl
cmp
lcall
jg
sub
sahf
sbb
lods
fwait
sti
fs
xor
jo
sub
lods
mov
arpl
outsl
test
adc
lods
push
jbe
mov
add
jge
add
lock
sub
lea
or
std
sbb
ret
pop
mulb
fs
xchg
imul
inc
sbb
out
add
repz
and
dec
mov
inc
mov
scas
lock
rclb
jbe
mov
sub
icebp
decb
lods
mov
pop
mov
add
pop
aam
fadd
ja
ret
dec
insb
sbb
popa
out
jne
push
stos
js
mov
mov
xchg
hlt
push
mov
rcll
pusha
mov
xchg
in
push
cmc
add
pop
mov
or
ret
lea
add
pop
sarb
out
cmp
movsl
fld
bound
mov
shll
test
inc
mov
mov
std
lods
out
mov
cmpsb
mov
fisubl
mov
or
and
fldt
jg
xchg
fcmovnb
or
sub
loop
adc
xor
add
jge
dec
jnp
sarb
add
mov
ficoms
arpl
push
mov
mov
mov
mov
pop
lcall
mov
test
ficoml
sub
lahf
gs
lock
jne
xor
sub
dec
call
stos
push
in
add
rcrl
ret
adc
popa
inc
into
or
pop
xlat
leave
inc
test
and
loopne
mov
in
push
ja
insl
pop
jmp
sahf
mov
sbb
aam
std
js
rep
adc
arpl
push
adc
lea
jle
gs
test
cmp
shrl
cld
lods
jne
jg
js
into
sub
movb
pop
dec
inc
inc
arpl
mov
out
insl
push
negl
lret
movzwl
leave
push
out
dec
jecxz
adc
sub
xchg
sti
add
cltd
clc
scas
sub
jmp
dec
and
push
cltd
add
orb
imul
cltd
dec
and
ss
out
int
push
cmp
jge
loop
stos
out
cwtl
lahf
dec
mov
mov
sub
inc
xchg
int
dec
ljmp
adc
rcl
jnp
fistpl
icebp
pop
enter
ret
cmpsl
loope
popl
subb
stc
in
adc
movl
xchg
scas
lgs
jbe
movsb
push
jg
or
mov
ss
and
inc
sub
scas
mov
lods
out
lret
dec
fs
jle
jge
pushf
into
vandnpd
jne
mov
inc
ljmp
pop
jnp
lds
mov
test
pop
sbb
pusha
data16
mov
cmp
mov
sbb
mov
inc
add
inc
inc
fldcw
or
xchg
mov
sub
pop
int3
xor
inc
rol
inc
or
popa
sub
xor
lcall
fdivl
in
lret
into
scas
cmp
loop
mov
lods
rcl
lods
and
xor
mov
gs
mov
in
mov
scas
mov
mov
shrb
scas
xlat
or
push
in
add
and
push
push
sarb
verw
cmp
pop
jge
pop
fwait
jecxz
or
pop
jge
lock
push
dec
cmp
pop
xchg
xor
sub
or
add
das
cltd
aam
lods
push
pop
or
insb
jnp
jecxz
xor
xchg
iret
xlat
test
mov
pushf
sahf
dec
jg
sub
lea
push
adc
shr
cmp
cmp
xchg
outsb
mov
int
std
into
cli
lds
dec
jge
jnp
cmpsb
jbe
repnz
lret
dec
testb
mov
dec
jns
add
lret
rorl
jmp
imul
mov
insb
ret
cltd
xor
jge
in
notl
out
fdivs
mov
pop
push
xor
arpl
inc
les
pop
and
hlt
call
sysexit
cli
cmp
push
shrb
ds
lea
pop
mov
scas
popf
lret
repnz
dec
outsb
test
and
adc
outsl
lds
cld
sbb
fldt
mov
nop
sbb
repnz
mov
cmp
xor
dec
jmp
rorl
or
loope
push
je
les
orl
jns
clc
add
xlat
cmc
mov
dec
cmp
dec
shll
push
cmp
push
fcomip
mov
jecxz
mov
cmc
loopne
test
ljmp
mov
insl
loopne
add
cltd
and
out
dec
xchg
xor
cmp
mov
sub
push
int3
sbb
icebp
loopne
adc
lahf
sbb
xchg
aas
mov
cmp
decl
scas
sub
pop
xchg
daa
and
pusha
add
out
nop
les
adc
mov
xchg
push
loopne
mov
shlb
jno
cli
rorl
cs
test
js
inc
cmp
outsb
repz
shll
stc
and
pop
imul
or
sub
mov
or
push
mov
js
push
or
loop
outsl
cmpsb
xor
test
sbb
cmp
pop
subl
repnz
ret
vorps
pushf
push
add
dec
mov
lds
jns
cmpb
cmpsl
jmp
xor
dec
out
inc
and
test
push
bnd
lret
loope
or
xchg
and
inc
cs
mov
pop
jbe
mov
jae
cmp
sub
cmp
fsubp
jne
push
mov
fsubrp
pop
mov
pop
ja
loopne
outsl
jns
loopne
js
std
dec
mov
fsubs
int
sahf
shl
jne
addr16
neg
dec
aas
call
cmpsl
bound
out
repnz
outsl
ret
dec
stc
repnz
jo
mov
sub
sub
sti
jnp
push
and
fisubl
xchg
sub
xchg
roll
jle
mov
jo
dec
jle
filds
shlb
mov
loope
mov
popf
fcompl
lock
push
mov
mov
imul
xor
cmc
xchg
dec
or
ss
cmp
inc
sbb
test
cli
jp
in
sub
pop
loopne
lods
dec
icebp
inc
pop
sbb
mov
movb
cli
adc
mov
jno
pop
push
inc
jno
cmp
xlat
add
mov
aas
jae
lret
jns
aas
xor
into
jb
divl
insl
outsl
add
push
out
inc
ja
inc
je
into
mov
cmp
repnz
data16
lret
ja
mov
add
decb
mov
mov
js
pop
mov
andl
fnsave
jno
inc
mov
nop
cmp
mov
and
fdivl
mov
xor
and
push
xchg
sahf
push
inc
and
pop
jno
dec
sub
push
clc
roll
out
popa
inc
jns
mov
jge
mov
leave
sahf
shlb
mov
mov
fcomps
leave
pop
ss
jge
loop
xor
mov
and
and
or
cli
cmp
jp
mov
jecxz
add
je
clc
test
lahf
inc
loope
loopne
mov
inc
sbb
movsl
and
scas
movsl
mov
adc
out
and
pop
mov
cmp
push
mov
mov
int3
xorl
xchg
dec
jg
in
add
testl
ja
movsl
sarb
sub
mov
out
xchg
cli
flds
insb
clc
xchg
ja
jne,pt
js
nop
inc
int
push
mov
mov
mov
mov
mov
inc
ss
pop
or
mov
mov
jge
out
mov
lret
and
testl
xor
push
and
xchg
push
movsb
and
mov
or
enter
sub
dec
adc
push
jg
sub
cltd
jmp
jmp
pusha
jne
adc
or
xchg
icebp
or
pop
ja
ds
filds
stos
pop
gs
aas
mov
fcmovne
int3
pop
mov
fcomps
insb
push
in
lea
int
mov
sub
mov
and
mov
add
js
push
int
xchg
fadds
jno
sub
sub
adc
sub
test
ss
xchg
rcrb
in
shlb
dec
call
addb
mov
push
outsl
out
cmp
cli
pop
xor
push
mov
or
cs
ret
jbe
jnp
mov
gs
jmp
dec
xor
hlt
popa
arpl
aas
push
ret
inc
push
cmp
add
pushf
ret
xchg
pop
aaa
scas
mov
sub
jl
and
pop
xor
jnp
xchg
repz
add
pop
add
pop
dec
pop
ror
jg
xchg
or
pop
xchg
out
cmp
lock
inc
cwtl
out
mov
repnz
das
rorl
lock
sub
stos
pop
adc
sbb
jecxz
bound
popa
mov
leave
into
cmp
icebp
add
dec
and
or
fldenv
jp
in
bound
adc
xor
rcrb
ftst
push
mov
in
lahf
hlt
jg
es
out
dec
mov
mov
xchg
cli
add
cs
addb
or
mov
sti
inc
out
aam
in
add
imul
test
clc
ret
jp
fdivs
or
fsubrs
hlt
cli
fidivs
xchg
xchg
cltd
add
jo
jne
push
sbb
jl
dec
cli
mov
iret
mov
sbb
insl
shlb
xor
in
push
jno
inc
sub
or
int3
fstpt
insb
mov
add
mov
int3
arpl
mov
ljmp
sahf
fisubl
lods
fmuls
cmp
lods
repz
pop
jge
pushf
cmc
fldcw
lods
negb
fiadds
negl
jge
popa
int3
push
adc
lods
movsb
push
nop
aam
add
cs
loopne
mov
pop
add
test
and
xor
add
mov
push
cltd
ret
rol
sub
sbb
mov
push
int
or
fs
pop
ds
mov
cmp
dec
push
loop
push
in
aas
push
lret
mov
dec
into
or
or
aam
jo
ss
push
movsl
dec
jmp
or
xor
ljmp
xor
sub
cmp
out
sub
adcb
jne
or
in
add
mov
push
nop
fisubrs
inc
pusha
sbb
inc
mov
test
inc
jno
scas
lock
daa
ja
pusha
add
pusha
and
jg
add
mov
iret
dec
xchg
daa
lret
push
shl
stos
push
gs
and
jno
dec
insl
aaa
xchg
jo
pop
cmc
popf
sub
in
push
add
rcll
hlt
inc
hlt
je
mov
insl
sub
stc
loopne
sub
add
out
jno
cmp
sbb
fistpll
out
ja
in
bound
mov
xchg
cli
pop
add
shlb
testl
leave
nop
out
push
insb
mov
rclb
jns
push
shrl
mov
aam
jae
add
or
xchg
sbb
jno
xchg
test
outsl
subb
adc
popa
sub
mov
and
xor
xor
inc
loopne
push
jecxz
insb
bound
xor
dec
push
inc
aas
sbbb
push
mov
cmp
das
or
sti
cmp
inc
pop
cltd
out
orl
jge
sbb
mov
cmp
cmpsb
dec
dec
fnsave
or
jnp
out
sbb
and
push
pop
xor
or
imul
jg
sbb
jbe
fnsave
rolb
pop
shlb
enter
inc
mov
xchg
sbb
daa
or
sarl
push
nop
aam
cld
in
mov
leave
pop
adc
sub
sahf
out
xlat
jge
mov
push
cmp
jo
pop
fldenv
mov
mov
shrl
test
fists
gs
shrb
bound
shlb
push
into
cmp
aas
orl
sbb
or
jb
pop
dec
push
mov
add
push
js
inc
or
ret
mov
out
mov
lahf
mov
dec
pop
daa
lock
dec
and
sbb
loopne
cld
decl
push
fs
stos
fidivs
mulb
lea
dec
mov
icebp
loopne
repz
mov
cmpsl
dec
jo
lock
cli
insb
stc
xchg
xor
shlb
cs
cmp
scas
sbbl
cmp
jge
pop
loopne
aad
mov
xchg
pop
repz
xchg
flds
lods
mulb
addr16
push
cmc
sbb
movsb
xchg
stos
mov
bound
push
jecxz
mov
std
aaa
xchg
enter
pop
pop
jno
jb
or
cs
mov
push
add
sarl
mov
ljmp
mov
cmpsb
mov
jbe
ss
rcll
imull
add
icebp
sbb
fcmovu
aas
mov
pop
push
pop
inc
test
pop
loopne
daa
sub
ss
and
push
mov
pcmpeqd
shlb
mov
xchg
mov
push
xchg
hlt
mov
ret
push
xchg
dec
dec
stos
jo
cmc
xchg
cmp
scas
call
sub
incl
mov
pop
cvtps2pd
ds
and
sub
cmp
std
imul
inc
fisttps
dec
cmp
mov
iret
loope
push
push
adc
adc
xchg
in
jne
and
imul
mov
push
daa
negl
notb
stc
out
in
jecxz
push
xor
rcrb
inc
leave
cmp
jl
pop
jmp
sub
jl
sbb
lea
xchg
mov
into
fucomp
add
sti
sbb
pop
insl
jl
inc
push
aad
call
mov
inc
pop
and
mov
dec
and
fcompl
fiadds
out
fildll
xor
lock
push
test
cli
mov
test
cmp
inc
xlat
mov
mov
pop
lea
or
pusha
sbb
pop
cmpsl
scas
sub
daa
sbbb
popf
mov
pop
lock
or
pop
gs
dec
xabort
adc
faddp
fidivs
mov
add
pop
test
push
add
add
jecxz
in
jbe
call
push
lret
orb
xor
sbb
cmp
dec
jp
jbe
stos
cmp
test
fs
pop
mov
push
or
mov
call
outsl
or
cmp
das
inc
ss
movsl
ss
push
xchg
insl
ja
nop
daa
inc
sub
jnp
push
mov
ret
sbb
je
js
push
jbe
lods
ja
addr16
or
cltd
xorl
test
aas
xor
int
enter
xor
movsb
aad
and
pop
sbb
jns
shl
mov
movsl
dec
aam
icebp
aaa
shrl
pop
movsl
mov
and
orl
add
sub
enter
ljmp
cmpl
xlat
or
xor
add
out
mov
jb
mov
gs
mov
lock
pop
mov
les
push
daa
pushf
dec
dec
out
jp
in
jbe
or
repnz
adc
mov
sub
xchg
dec
imul
in
mov
push
xchg
cld
sahf
insl
mov
subl
mov
dec
adc
sahf
inc
outsl
les
jp
movsl
fidivl
inc
andl
mov
pop
add
arpl
fcmovnbe
mov
das
sub
mov
pop
sub
dec
push
pop
or
lods
inc
cmp
pop
push
dec
cwtl
sub
stos
stos
cmp
xlat
cmp
outsb
dec
and
aas
add
mov
inc
shrb
xor
sub
xor
push
stc
xchg
mov
pop
mov
mov
cli
push
int
pop
emms
push
mov
iret
xor
push
ja
dec
repz
and
sbb
push
lahf
xor
lret
lods
add
cmp
sub
imul
gs
mov
push
cld
add
mov
or
int
lret
out
ds
daa
sar
cmpsl
or
iret
xor
loop
das
dec
stos
enter
or
jns
aam
or
xchg
mov
arpl
dec
xchg
inc
inc
xchg
test
test
adc
push
jmp
testl
cltd
in
or
add
in
cmp
popa
push
rolb
or
insb
mov
gs
dec
cmp
mov
pop
push
das
rorb
shlb
mov
adc
jmp
xor
dec
scas
jne
out
insl
mov
mov
xchg
and
push
xor
pcmpeqd
and
rcrb
and
lods
dec
push
pop
repnz
jmp
cmp
sahf
jge
sti
mov
mull
adc
sub
cld
jae
mov
inc
aas
jbe
popa
xlat
jle
jno
in
test
scas
jb
js
inc
nop
sbb
aad
out
out
mov
fistpl
mov
or
pop
dec
data16
push
lret
sub
jmp
pop
fstps
es
adc
inc
adc
repnz
in
and
mov
and
out
mov
lods
hlt
and
xchg
fmull
leave
sbb
stos
imul
adc
cli
and
xor
lret
cmp
jmp
sbb
popf
mov
mov
sbb
xor
aam
int3
subl
enter
or
mov
jbe
fisttpll
int
and
xchg
shlb
or
insl
xchg
sbb
jbe
cltd
iret
adc
adc
jge
push
lds
push
cli
out
mov
ds
xlat
xor
in
loop
push
repz
inc
sbb
add
das
dec
inc
negl
rcr
push
ds
rep
cltd
icebp
jge
outsb
out
je
lret
mov
or
enter
cmpsl
cli
fimull
cs
adc
out
xchg
mov
mov
sarb
insb
mov
icebp
clc
xor
inc
push
daa
inc
xchg
out
sbb
mov
cld
sbb
inc
inc
lahf
scas
push
in
mov
push
addr16
jo
inc
ja
cmp
test
loope
imul
pop
and
orl
lods
add
ucomiss
ljmp
inc
fcomps
mov
jb
dec
mov
sti
loop
xor
dec
dec
mov
ret
push
or
mov
xchg
pop
sub
inc
jne
lock
xchg
adc
stc
cmp
xor
ficomps
push
push
pop
sub
roll
push
stos
insl
scas
pop
enter
push
int
inc
or
push
popa
rcrl
jo
cld
mov
xchg
pusha
mov
dec
cmp
xchg
pop
xchg
ret
xor
mov
and
sbb
aaa
mov
jo
in
imul
es
andl
push
test
ljmp
pushf
dec
mov
shrl
loop
or
das
jo
icebp
push
mov
jbe
xor
sub
fisubrl
mov
js
add
or
and
imul
aaa
pushf
lret
daa
or
sub
pop
push
fmull
jmp
cmpsl
stos
adc
inc
testl
fmuls
adc
cmc
dec
jae
cld
movsl
int
pop
adcl
xor
into
pop
outsl
out
leave
rcrl
rclb
mov
push
mov
and
leave
fwait
mov
cmpsl
xor
cli
xchg
nop
push
sbbl
mov
movsb
mov
out
lahf
pop
pop
mov
shlb
aas
fxch
mov
nop
inc
or
and
cmp
or
cli
xchg
xorl
dec
imul
gs
add
fldt
in
mov
std
and
jo
jo
loope,pn
gs
dec
add
mov
cwtl
popa
outsl
cmp
xor
pop
mov
bound
or
add
out
test
add
mov
jecxz
mov
mov
mov
adc
and
fdivrl
lret
int
scas
sub
push
lods
jmp
movl
test
test
fdivl
xchg
faddl
jge
jle
cltd
stos
das
sbb
xlat
xor
pushf
cltd
push
jecxz
popf
dec
ss
dec
xor
inc
fcmove
or
pop
nop
sbb
add
xchg
mov
xchg
push
mov
cmp
gs
push
shrb
hlt
mov
loop
sarl
scas
or
xor
cmp
daa
ds
jmp
lock
out
mov
int
push
ret
insb
xchg
std
mov
jle
outsl
mov
push
insb
lcall
fwait
or
mov
sub
mov
out
inc
sub
sub
icebp
insb
mov
xorl
add
in
sub
stos
mov
es
push
inc
mov
jecxz
aad
push
pop
mov
aas
popl
mov
sub
add
cmp
cmpsl
js
mov
pushf
outsl
pop
xor
sbb
jp
and
jne
xchg
xor
add
push
orl
and
jnp
or
mov
iret
bound
stos
mov
loope
ljmp
ds
sub
mov
sub
lret
cmp
bswap
jmp
sub
mov
add
or
shrb
mov
in
test
xor
fcmove
andb
mov
add
mov
mov
aam
jle
adc
dec
sub
jmp
cmp
mov
lds
add
arpl
test
pop
inc
inc
pop
mov
pushf
repnz
adc
or
inc
and
dec
pop
repz
clc
push
fldcw
jl
jae
and
sbb
add
fwait
xchg
lahf
mov
adc
ficomps
inc
dec
push
out
test
fwait
sbb
lcall
inc
and
andb
and
jns
cld
cwtl
xchg
inc
hlt
mov
mov
sub
shll
loope
inc
aad
push
xor
sbb
xor
iret
adc
fdivrs
aas
hlt
arpl
lods
cli
dec
and
add
inc
sub
aaa
cmpsb
sbb
sub
push
or
movb
leave
jmp
push
sahf
aaa
fwait
es
cmp
rcrl
sub
push
pop
int3
sarb
mov
mov
mov
daa
cmp
in
xor
adc
jge
mov
out
mov
mov
mov
dec
pop
pop
test
mov
mov
ss
pushf
xor
pop
gs
sysenter
out
test
xor
mov
or
repz
mov
push
jle
int3
add
pop
fcoms
dec
arpl
bound
inc
lea
cmp
xlat
daa
mov
dec
sub
push
add
or
xor
mov
sub
sbbl
mov
adc
cmp
rcll
sub
and
cmp
jne
enter
inc
jle
jns
das
fidivl
and
inc
rcrl
fadds
ljmp
jl
jecxz
jnp
rorl
add
or
mov
xchg
xchg
fs
cwtl
mov
enter
fucomip
outsl
pop
andb
inc
fs
inc
sbb
jge
daa
push
daa
arpl
fs
fimull
scas
int3
inc
mov
sbb
lea
jae
xlat
pop
xchg
and
mov
fbstp
rcll
push
xor
pusha
pushf
push
fwait
inc
out
mov
mov
lret
test
lcall
cmp
cmp
fisubrl
test
and
pop
orb
cmp
adc
xchg
xchg
adc
dec
mov
pxor
mov
int
jmp
test
popl
or
test
sbb
push
les
call
sub
mov
mov
pushw
or
data16
sub
lret
out
lret
pop
pop
dec
test
fcmove
xchg
sub
call
mov
test
jecxz
mov
ja
mov
jbe
loopne
pop
loopne
push
fidivs
jl
mov
and
push
mov
test
imul
xorb
fs
pop
call
data16
jmp
dec
pop
jl
push
dec
lock
cld
rcll
mov
inc
out
out
adc
into
and
mov
outsl
cmp
xchg
int
lods
xchg
push
mov
push
repz
jbe
xorb
int3
xchg
ror
jg
xor
xchg
pop
push
adc
in
push
fdivl
popf
lods
fstps
int3
ret
sbb
inc
mov
repnz
pop
xchg
adc
testb
shl
add
add
sar
mov
in
pop
ficompl
dec
cmpsb
jl
or
pop
jae
mov
xlat
daa
aam
pop
jo
xor
out
xchg
or
out
dec
and
jle
mov
js
inc
lret
lds
adc
mov
mov
xor
fldl
pop
inc
mov
lret
xchg
int3
je
pushf
xchg
xorb
mulb
lods
xor
inc
cwtl
mov
adc
int3
cmp
xchg
fadds
adc
loopne
push
jae
adc
jl
cmp
subl
lret
jno
es
cltd
xor
dec
xchg
sti
pop
test
loopne
xlat
dec
adc
insb
push
test
ds
lret
cmp
lcall
adcb
lahf
dec
pop
cmp
scas
outsl
jb
lock
movsb
sbb
jl
out
cltd
andb
call
or
cli
adc
aas
pop
imul
mov
sub
out
pop
push
and
imul
push
sbb
push
adc
push
out
out
fwait
aas
pushf
int
cmp
mov
and
inc
bound
ljmp
ret
adc
push
xchg
mov
add
jo
push
pop
push
or
pop
sbbl
inc
push
aad
adc
sbb
movsl
mov
mov
loop
push
into
xor
fdiv
movsb
aas
es
jb
in
push
icebp
repz
nop
movsb
mov
sub
sbb
sti
xlat
jno
jbe
getsec
mov
es
xchg
lock
movsb
sti
ret
ret
je
fimuls
sub
xchg
gs
push
clc
test
inc
sbb
sub
or
ret
and
hlt
mulb
sub
cs
aas
sti
dec
lds
in
stos
adc
push
das
xchg
in
fstpt
push
popa
out
fs
outsb
push
cld
xchg
or
mov
fbstp
inc
mov
jmp
cmp
sub
es
out
fildll
out
xor
fs
add
movb
int3
add
cltd
mov
xchg
shrb
int
push
inc
jge
gs
push
scas
pop
aas
in
outsl
repnz
xchg
mov
mov
stos
jno
popf
mov
nop
or
xchg
popl
test
jmp
out
clc
inc
or
movsbl
into
mov
std
inc
ret
push
popa
pop
popa
sub
jg
std
orl
andb
icebp
divb
jmp
xchg
scas
in
test
push
push
ror
filds
das
fxtract
repnz
in
inc
xor
dec
adc
sbb
inc
and
add
loope
mov
jmp
add
pusha
adc
push
cli
xorb
cmp
sahf
add
sbb
stc
aad
loope
jnp
xor
loopne
cmp
pop
test
lods
pop
cmpsl
push
sub
lock
dec
scas
mov
aad
outsb
mov
gs
and
dec
mov
push
pushf
xor
or
xchg
mov
add
adc
jmp
je
cmpsl
and
jno
xchg
add
fnstenv
aas
jmp
inc
or
imul
nop
sbb
jb
jo
das
ret
icebp
xchg
sahf
nop
pop
lcall
dec
jle
out
jns
and
pop
or
pop
ret
sub
cmpl
sbb
fldcw
inc
push
mov
jge
push
jge
xchg
sbb
test
or
cmp
sbb
mov
sarl
sbb
jg
mov
jle
push
sbb
popf
repnz
daa
sbb
adc
sbb
and
mov
lock
gs
pop
clc
ljmp
addr16
idivl
out
out
sbb
rorl
loopne
fidivrs
roll
scas
adc
adc
test
xor
in
lock
cs
xchg
xchg
or
fildl
jb
leave
sbb
insb
cmp
out
mov
sti
enter
cmp
pop
aas
lret
in
jbe
jbe
sub
xchg
adc
push
sbb
fildll
leave
out
sarl
and
bound
mov
aaa
fwait
pop
loopne
push
stc
sarb
filds
xchg
hlt
mov
or
or
std
dec
test
fnstsw
mov
xchg
fisubl
ret
pushfw
jae
fdivs
jp
ja
pop
mov
sbb
add
cmc
mov
fdivrp
cmp
mov
pushf
lret
test
dec
sbb
leave
add
lcall
lret
push
lods
aad
xor
rcrb
and
stos
out
jecxz
add
jl
fmul
jg
pop
xchg
mov
cmpsb
jg
movsb
xor
repz
pop
mov
mov
pop
add
fiaddl
aam
cmpsb
mov
mov
push
cmp
popf
and
ret
mov
cmpl
js
mov
jae
mov
pop
and
enter
leave
popl
and
xchg
andl
jo
cld
repnz
jp
imul
stos
mov
xor
into
js
pop
test
imul
div
pop
mov
roll
dec
clc
jle
fiadds
jmp
daa
mov
inc
and
fisttpll
xchg
xchg
icebp
imul
movsb
and
cmp
frstor
sbb
sub
popf
xorl
sbb
bound
xchg
out
test
test
mov
ss
jecxz
lods
adc
jl
les
icebp
and
into
pop
pusha
xor
xchg
inc
xor
adc
fisubrl
ficomps
sbb
push
aaa
mov
or
out
inc
and
ficompl
cmp
cs
iret
mov
cmpb
cmp
iret
push
mov
jmp
call
pop
je
inc
mov
sub
push
mov
cmc
sub
ds
ss
xchg
mov
add
sbb
dec
push
loopne
push
dec
ret
addr16
mov
jae
and
andb
lahf
movsb
filds
jbe
jnp
test
adc
fbld
xchg
pop
lret
adc
push
cmp
pop
xor
mov
fcomp
dec
mov
fldt
mov
sbb
or
or
fwait
xchg
xchg
aas
xlat
dec
xor
mov
jno
sbb
jno
xchg
in
gs
aaa
notb
pop
into
call
movsb
xor
cmp
pusha
in
shrl
add
fisttpl
mov
call
sub
mov
xchg
rcrl
std
out
mov
jmp
ss
int
lods
pop
nop
mov
jg
pop
jne
icebp
imul
cwtl
mov
hlt
fiadds
fsubrs
les
sub
adc
addb
sub
adc
lret
push
jmp
jmp
xor
in
dec
aad
bound
and
mov
adc
xor
ss
sbb
fdivs
into
inc
popf
jnp
fs
mov
aaa
jecxz
repnz
add
and
out
rcll
out
ret
mov
popa
inc
shlb
movsbl
cmp
imul
outsb
xor
and
xchg
dec
and
aad
imul
loopne
cli
add
mov
inc
leave
shll
cmp
test
ds
aam
andb
and
cmpsl
pop
xchg
or
xchg
bound
test
jb
sbb
xor
mov
inc
mov
ret
cli
sub
and
push
cmp
sti
out
push
popf
gs
push
sub
fs
inc
cmp
push
sbb
or
aas
insb
or
roll
jmp
jnp
inc
imul
hlt
lods
cltd
xor
mov
jl
xlat
es
movsl
push
mov
add
shl
jns
inc
xchg
jecxz
in
mov
shlb
cmp
xchg
push
int
dec
mov
fwait
daa
inc
push
cmp
or
pop
mov
add
leave
mov
adc
cmpsb
push
iret
movsl
insl
mov
xor
mulb
inc
cld
xchg
xlat
adc
cmp
ret
add
addr16
dec
divl
xchg
lds
add
or
fdivl
xor
add
stc
lods
or
out
pop
out
mov
or
sbb
cmp
mov
dec
sub
mov
xchg
pop
js
sub
pop
mov
add
add
dec
pop
inc
push
movb
mov
fstpl
xor
sub
jmp
or
push
jmp
sbb
jecxz
push
stos
loope
mov
mov
cld
mov
loop
pop
shll
pop
bound
add
ds
jg
mov
rcr
or
pop
cmc
mov
fs
rcll
or
adc
aaa
jns
iret
pop
cmp
scas
fwait
test
fucomip
cmpsb
cld
aas
filds
and
sbbl
clc
popf
scas
mov
insl
cld
xor
int3
lods
mov
mov
ljmp
jle
adc
scas
in
pop
xchg
add
xor
push
jns
pop
push
add
test
lahf
in
pop
test
sar
js
loope
insl
mov
pushf
test
jae
push
or
lock
dec
pop
outsb
mov
cmp
pop
mov
lods
jo
push
shl
mov
dec
test
mov
data16
mov
push
jp
pop
fwait
pop
clc
cmp
cmp
test
outsw
mov
or
fidivrs
adcl
xchg
lock
jne
jmp
les
and
insl
jecxz
ret
divl
xchg
xchg
ret
aam
shll
aas
loop
jns
jg
mulb
loope
hlt
push
cmp
insb
cmpsb
mov
cmpsb
aas
mov
cmpsb
jne
stos
adc
jmp
sub
xchg
jl
lret
sub
dec
pop
mov
xchg
flds
or
jne
push
push
inc
pop
or
lods
call
jnp
fsubl
fistpl
and
mov
add
add
imul
xor
nop
or
stc
dec
ljmp
cmp
push
pop
add
test
sub
cwtl
pop
jne
call
mov
rol
lcall
adc
cltd
push
pop
dec
push
xor
xor
sbb
jle
fbstp
inc
loop
adc
fistps
test
inc
sbb
add
mov
lcall
ficomps
ljmp
pop
cli
addr16
sub
shlb
inc
test
mov
xor
lods
lret
sbb
into
jns
roll
cli
movsb
cwtl
andb
or
out
mov
jnp
sbb
icebp
inc
cmp
push
sbb
rcl
mov
adc
in
sub
popf
mov
push
sub
lods
dec
cli
in
cs
negl
add
cmpsb
push
js
sub
mov
sub
cmp
stc
push
sub
xchg
je
enter
jne
dec
xchg
mov
inc
icebp
push
jo
xchg
ret
int3
inc
pop
mov
mov
lods
and
out
lods
sub
push
xor
mov
mov
inc
xor
int3
mov
lcall
daa
test
dec
aaa
or
pop
loope
add
dec
mov
imul
cmc
cmp
and
ja
in
mov
push
xchg
les
ret
inc
push
push
push
add
sbb
daa
fmul
dec
sti
pop
sahf
loope
jbe
jge
ror
outsb
jmp
dec
hlt
dec
pop
xor
inc
les
test
cli
dec
das
sub
hlt
and
pop
xor
cld
jb
xchg
std
inc
popf
pmuludq
lret
popf
imulb
cwtl
inc
pop
test
push
sbb
dec
or
push
ficoml
ficoml
aad
stos
lods
shlb
push
fildll
mov
imul
pop
jo
mov
aad
popl
and
fwait
jne
int
ret
or
int
sub
fwait
jo
mov
jns
mov
and
or
mov
mov
ljmp
aad
das
aad
push
adc
xchg
jb
enterw
mov
push
pop
pop
lds
out
adc
xor
add
out
inc
sbb
pop
pop
and
jmp
fisubs
and
jne
add
ss
test
cltd
xor
cwtl
sub
mov
cli
cmp
dec
shlb
pop
cmp
cmp
or
adc
int
xchg
ret
ljmp
add
cli
xchg
js
lods
push
ljmp
jecxz
jae
pop
inc
add
mov
jae
enter
in
pop
xlat
inc
jae
sub
ret
inc
mov
insl
xor
icebp
mov
cmpsb
ret
stos
bound
fsubrs
pop
sbb
pop
movsb
sbb
jno
add
inc
sub
in
aas
pushl
xchg
leave
inc
pop
mov
mov
movsl
or
mov
or
in
dec
cmp
stos
pop
add
daa
inc
cmc
cmp
orl
xchg
movsl
cmovs
ficoml
adc
and
add
mov
xchg
or
mov
sbbl
int
dec
push
mov
jno
or
mov
add
ljmp
or
pop
inc
mov
xor
xchg
pop
icebp
mov
imul
loop
dec
das
cmp
add
xlat
cmpsb
jge
jnp
sub
lahf
sub
mov
pop
ljmp
or
dec
mov
dec
or
xor
mov
inc
push
in
sub
jecxz
sub
xchg
xchg
inc
cmc
cwtl
hlt
and
mov
out
mov
adc
inc
mov
imul
js
sbbb
test
mov
or
iret
js
jle
jns
mov
aaa
mov
xchg
and
lcall
mov
in
cmp
jnp
out
rol
loopne
inc
jns
jp
inc
mov
out
adc
daa
xorl
movsb
pop
pop
gs
cwtl
aaa
pop
popf
loop
sbb
mov
cli
cmc
dec
xor
cmp
xor
test
pop
xchg
sahf
scas
push
dec
data16
clc
jmp
xchg
fisubrs
adc
add
scas
and
loop
jne
cmpsb
mov
cmpb
pop
inc
test
jle
cmpsl
xchg
jns
sub
or
inc
adc
in
or
cli
push
xor
xchg
stos
idivw
or
in
mov
push
and
push
fnsave
dec
ret
or
inc
jne
faddp
and
push
dec
jnp
adc
sub
lock
xor
and
xor
pop
call
sti
pusha
test
push
lcall
xchg
popf
testb
cs
movsb
pop
pop
clc
or
mov
popf
shrb
sbb
fcoms
jmp
push
push
mov
mov
inc
idivb
lcall
rcrb
lret
out
xchg
mov
pop
clc
inc
push
mov
fildll
mov
mov
mov
faddl
lds
dec
ret
jns
inc
lret
adc
daa
pop
faddl
mov
sti
lret
rcrb
and
mov
dec
mov
aam
push
cmp
pop
sub
or
fldt
out
jae
lahf
mov
adc
and
iret
scas
outsl
outsl
push
insb
cmp
adc
jae
inc
push
push
stos
inc
sub
add
push
aaa
sbb
clc
stos
jmp
in
and
fcmovu
outsb
in
inc
sub
fcomp
or
pop
fcoms
aas
ss
fistpl
push
insb
add
push
sbb
adc
hlt
std
sti
sub
push
addr16
shl
ret
mov
test
jnp
in
daa
adcl
mov
enter
mov
and
inc
data16
xlat
sti
mov
sbb
push
mov
hlt
stc
lods
mov
inc
mov
push
rorb
stos
cmc
sub
in
dec
mov
add
add
test
adc
sbb
push
bound
ds
fstpl
inc
sbb
fcoms
not
sbb
adc
dec
sti
adc
sbb
mov
push
fs
pop
pop
dec
push
pop
outsb
insl
lret
clc
sub
lcall
addr16
sbb
ret
scas
cmpsb
mov
xor
pushf
lcall
in
cmp
leave
cmp
jnp
xlat
ss
lock
popa
mov
xor
cltd
lcall
pop
adc
jg
xor
adc
icebp
lcall
mov
movsl
inc
cmp
jo
sahf
xor
push
daa
mov
cmp
arpl
lret
xchg
movsb
mov
ret
add
jns
adc
jb
lret
adc
pop
stos
lcall
sti
aas
insl
cmp
mov
mov
add
cltd
iret
mov
jns
rol
sbb
or
out
subb
dec
daa
adc
and
adc
fcomps
rcr
ret
fwait
pop
pop
fsubp
push
mov
fwait
iret
inc
xor
stos
ja
jp
ds
imul
jbe
xchg
dec
xor
fnstcw
loope
daa
push
aaa
push
das
out
dec
xchg
test
jecxz
js
jecxz
testl
mov
cwtl
mov
mov
adc
fucomi
cli
popw
lea
dec
sarb
cmp
out
dec
sbb
jmp
leave
test
sub
inc
xchg
push
jle
xchg
es
nop
loope
lods
or
adc
ja
je
pusha
jo
lcall
mov
jmp
scas
inc
pusha
push
cs
jne
sbb
mov
inc
pop
loop
fs
lea
mov
orl
mov
inc
mov
push
lret
dec
lods
pop
faddl
daa
popf
jecxz
aaa
jo
into
repz
mov
cmp
mov
dec
clc
mov
out
enter
addr16
ja
and
mov
mov
mov
xchg
sub
cmc
fcmovb
jno
pop
lret
or
mov
adc
or
sub
iret
adc
adc
mov
jo
pop
cli
in
lret
inc
jo
scas
inc
cli
data16
jg
sub
adc
xor
icebp
std
fldl2t
adc
push
mov
push
mov
cmp
stos
lret
xor
push
and
fstl
or
cs
arpl
jle
aaa
jnp
jbe
dec
xor
xor
movsl
push
int
jp
dec
mov
aas
fcompl
mov
das
arpl
xchg
or
dec
sbb
push
aas
loope
mov
enter
lods
mov
push
add
rclb
stos
add
test
sub
xchg
mov
or
pop
or
xchg
das
jge
push
mov
loopne
repnz
shll
mov
mov
shlb
in
adc
shrb
mov
xor
mov
mov
mov
ffree
out
sarb
or
add
icebp
fnsave
aaa
ret
imul
mov
lcall
int3
or
repnz
popa
ret
ljmp
movsl
xor
xchg
js
xchg
test
scas
add
dec
ljmp
dec
gs
mov
pop
outsb
je
or
mov
movsl
or
jecxz
lret
xchg
outsb
addb
jb
mov
sbb
pop
jle
or
lock
jl
sbb
dec
cli
xor
pop
xor
int
nop
xor
sbb
dec
dec
stos
cmpsb
jecxz
mov
rolb
outsb
scas
jmp
negl
rcrb
sub
aad
test
insb
jno
sbb
scas
cmp
int
pop
push
mov
cld
gs
mov
xor
cmpsb
mov
dec
fiadds
mov
add
sarl
or
jg
fcompl
lcall
jge
or
jno
jmp
jg
cld
pop
cmpsb
jmp
call
pop
addr16
test
stos
ss
or
aaa
es
dec
lcall
dec
add
pop
insl
mov
lods
aaa
stos
dec
and
testl
push
mov
xchg
in
jle
mov
xor
or
sbb
push
xchg
test
pop
das
repz
enter
jnp
je
sub
loopne
cmp
add
xor
popf
push
push
adc
or
ficomps
sbb
mov
lods
lcall
outsb
adcl
push
or
repnz
scas
xor
cmp
sbb
jne
mov
inc
mov
push
loope
mov
jns
xchg
xor
in
jl
cmpsb
add
dec
mov
and
hlt
xchg
bound
ja
cmp
and
push
test
iret
es
ja
out
adcb
sti
mov
jne
aad
or
mov
mov
mov
xor
push
mov
movsb
inc
xor
out
hlt
leave
sub
xor
adc
dec
cmpsb
sbb
adc
xchg
out
mov
mov
lods
xchg
sbb
mov
cs
or
push
mov
fnstsw
das
xchg
arpl
jno
xor
adc
dec
rcll
jecxz
lahf
and
lret
xor
aas
into
jbe
pushl
aaa
lahf
mov
fwait
ret
leave
movsb
jmp
jg
bound
adc
mov
xchg
ds
popf
gs
lds
mov
mov
xchg
lret
test
or
test
and
shl
rcr
fsubrs
push
adc
pop
cmp
insb
cmp
jbe
and
sbb
stos
xor
test
pop
hlt
into
mov
das
fldenv
lods
pop
pop
add
and
scas
sbb
je
xchg
in
cld
cwtl
and
add
push
hlt
or
lret
jmp
fcomi
xchg
sub
pop
mov
frstor
repnz
loop
xchg
dec
movsl
rcrb
fld
pminub
jne
adc
mov
mov
inc
jb
cmc
ljmp
xor
es
lahf
pusha
sbb
mov
inc
xchg
inc
popf
xchg
repz
rcl
roll
mov
sbb
push
mov
inc
mov
pop
scas
inc
cltd
in
mov
cmp
lds
imul
pop
pop
lea
or
xchg
fnstenv
sbb
cltd
inc
imul
inc
rcrl
data16
stos
mov
pop
push
stos
aas
mov
mov
stc
hlt
adc
movsl
push
add
cmp
push
data16
rclb
mov
ljmp
add
sbb
lods
pop
pop
cltd
mov
dec
push
lcall
mov
sub
lea
push
mov
jb
in
and
int3
xchg
fidivs
gs
lret
jle
imul
loope
bound
cmp
cmc
adc
mov
xchg
xlat
ljmp
sub
adc
mov
imul
rep
sub
hlt
add
jnp
jb
inc
ljmp
pop
pop
cli
mov
mov
jbe
mov
daa
out
mov
or
adc
cmp
pop
dec
add
fisttpl
and
clc
cmp
xchg
mov
into
jg
scas
iret
mov
dec
inc
fs
xchg
xchg
shr
jecxz
or
and
cmp
adc
loopne
and
push
into
jne
mov
call
enter
mov
mov
ds
jb
adc
orl
sub
fcmovnb
lcall
add
repz
xchg
pop
das
sbb
stc
jl
xchg
sub
gs
roll
sbb
xchg
or
sbb
es
push
ljmp
xchg
movsb
ds
sub
fisttpll
pop
rclb
daa
push
sbb
fstpt
push
adc
cli
aas
rcl
arpl
or
pop
jae
cmpsb
in
mov
rorl
add
lahf
xlat
and
mov
dec
or
jl
popf
cmpsb
xchg
push
rcrl
ja
push
and
mov
out
add
jmp
int
mov
jbe
outsb
mov
scas
mov
mov
cmpsb
leave
test
mov
cwtl
lds
arpl
mov
sarb
mov
das
clc
insl
jnp
jl
pop
and
stos
sbb
or
xor
gs
repz
add
movsb
cmp
xorb
inc
xchg
adc
add
ja
bound
mov
fwait
into
cld
test
mov
sar
mov
xchg
test
pop
dec
loop
mov
push
loopne
insb
lahf
fildll
add
cmpsl
fisubl
jns
pop
pop
repz
insb
xor
jmp
xchg
and
aas
and
cmc
lcall
xor
test
xchg
cmp
sub
and
jae
push
dec
push
test
adc
fistpl
in
call
loopne
add
mov
lahf
cmp
ret
shl
cs
loope
inc
shufps
mov
ja
cs
push
pop
mov
rcrb
jno
xor
sbb
xor
cli
pop
data16
sub
and
ljmp
ds
ret
rcll
push
push
cmp
pusha
mov
aad
cmpsb
push
out
sub
ja
scas
inc
pop
fcmovnb
pop
test
or
inc
jl
in
xchg
les
pop
data16
inc
or
cmp
repz
jg
mov
xor
push
loopne
icebp
and
sbb
addr16
push
dec
xor
add
sub
mov
xlat
cli
adc
aaa
jne
mov
pop
jo
mov
andl
add
adc
ficoms
pop
lcall
es
add
stos
loopne
mov
std
les
adc
cmp
imulb
dec
les
loop
inc
xchg
loopne
das
outsl
sahf
cmp
scas
and
sarl
test
dec
sbbb
pop
pop
mov
mov
imull
shlb
pop
rorl
int
gs
mov
jnp
shl
cld
push
pushf
repnz
outsb
dec
sbb
sbb
pushf
push
in
and
fisubrs
shlb
mov
out
xchg
adc
sub
int
clc
stos
dec
in
sarb
std
repz
fadds
push
sub
movsb
add
sarl
ret
ljmp
xchg
scas
lods
hlt
inc
xorb
cmpb
call
pop
pusha
mov
cli
outsl
je
xchg
sbb
or
pop
inc
and
sub
jns
loopne
dec
clc
pop
pop
addb
mov
and
std
out
pop
xlat
ficomps
pop
faddl
sti
fisttpl
aad
pop
iret
insb
mov
mov
cmp
and
outsb
mov
mov
cwtl
aaa
xor
push
pop
scas
mov
dec
stos
or
cmp
mov
mov
adcl
and
jge
lcall
cmpl
lds
cmpsb
test
fs
ret
test
xor
jl
inc
cmp
fs
jns
push
repnz
lahf
inc
cmpsl
loope
bound
jge
rorb
jp
loop
mov
pop
mov
and
enter
sbb
cmc
cli
ret
adc
inc
and
test
jae
stos
mov
cmc
pop
fists
lahf
ss
and
add
rcrl
jmp
add
or
jbe
insl
pop
js
cmp
mov
pop
xchg
dec
insl
fidivl
push
mov
push
aaa
sti
loopne
std
fs
pop
xchg
mov
xchg
cmp
mov
int
and
data16
dec
or
scas
xchg
fiaddl
dec
pop
xor
jmp
mov
test
sti
push
sahf
fstpl
ficomps
sub
mov
loopne
adc
cmpsb
adc
ljmp
sub
push
sbb
mov
pop
xor
inc
sub
mov
jl
and
lret
movsb
rol
sbb
push
fidivrl
add
and
imull
lea
jmp
fimull
ret
ds
or
call
std
pop
out
xorb
lahf
test
pop
push
push
cmp
inc
cmp
les
ficoms
loopne
sbb
jg
mov
test
add
mov
arpl
dec
xor
cmp
pop
xlat
pusha
cmp
and
add
ss
xchg
into
adc
xor
fidivrl
negl
xchg
call
xchg
popa
pusha
dec
add
mov
insb
add
mov
stc
in
push
test
add
mov
add
inc
es
mov
adc
mov
cltd
sub
pushf
idivl
testb
push
roll
hlt
jge
insb
cmp
andl
fimull
or
cmpsb
fs
out
arpl
cmp
jb
fdivp
xchg
mov
addr16
cwtl
dec
pusha
adc
ja
bound
xor
xor
xchg
xchg
int3
inc
aad
ljmp
scas
and
fwait
loope
mov
adc
or
cs
into
jbe
and
iret
enter
cltd
repz
push
xor
mov
adc
cmpsb
int
in
dec
mov
sbb
in
mov
rcl
out
pop
push
imul
ret
xchg
out
jbe
bound
sbb
inc
mov
mov
int
ljmp
inc
insb
xchg
mov
xor
or
push
das
xor
scas
push
pop
cwtl
ds
stc
jno
cmp
xor
sub
lods
lret
sbb
movsl
xchg
fsubr
lret
outsl
or
mov
mov
lea
repz
loopne
gs
outsb
mov
data16
lods
sub
dec
andl
cld
lahf
out
jbe
inc
dec
or
ljmp
sbb
aam
add
jp
sub
mov
sub
xchg
sbb
mov
scas
mov
lahf
mov
jg
bound
push
xor
into
scas
mov
or
loop
push
mov
dec
jmp
test
push
cmp
sarb
aas
inc
mov
jle,pn
add
sub
aas
cmp
repz
andb
cmp
rcrb
cmp
sbb
popf
cmp
cmp
pushfw
and
fmul
sub
jecxz
add
mov
push
mov
push
pop
call
xor
inc
xchg
or
pop
fnstcw
arpl
inc
int
and
dec
cmp
stos
loop
adc
nop
add
je
pop
inc
popf
sbb
cmp
sbb
push
xor
and
add
dec
insl
xchg
cmpb
inc
outsb
fldcw
pushf
imul
daa
or
add
adc
cmpb
loopne
adc
pop
cmc
insb
outsb
xor
out
cmp
add
lret
ss
push
add
lret
and
sarb
ss
and
insb
xor
jns
cli
scas
mov
cmp
and
cmp
jno
adc
pop
mov
cmpsl
rcrb
data16
hlt
nop
bound
mov
dec
adc
mov
mov
xchg
out
cmp
add
fmuls
jne
aam
sbb
and
incb
mov
outsl
xchg
jne
mov
mov
hlt
cld
test
and
or
cmpl
enter
insb
clc
iret
gs
fnstcw
lret
movsb
cmp
iret
imul
and
int
dec
lret
mov
push
jge
mov
movsb
or
or
xor
lret
fsubr
mov
loopne
dec
popa
notl
popf
mov
mov
test
roll
jbe
push
mov
adc
in
les
flds
push
mov
push
fildll
adc
and
mov
imull
xchg
push
fs
sahf
imul
dec
jo
cmp
inc
push
mov
test
test
xchg
push
sbb
cli
pop
fstpl
rcrl
xchg
dec
rcrl
push
notl
cmp
mov
xlat
lcall
stos
fldt
pop
inc
stos
add
push
lret
or
sub
add
jecxz
push
lds
mov
xor
pop
scas
jl
enter
or
adcb
mov
stc
pushl
lahf
es
outsb
gs
test
sbb
scas
push
add
jge
push
jb
adcl
lea
adc
into
xor
or
ret
adc
cs
gs
cld
cmpsb
xor
mul
call
in
jp
push
mov
xor
fidivrs
mov
lret
arpl
es
jecxz
and
mov
push
imul
test
mov
mov
rorb
mov
cmp
mov
mov
sub
cmc
push
test
lret
out
pusha
jb
aam
push
inc
shr
inc
jge
lds
pop
shrl
aas
pop
adcl
cmp
sbb
pop
rolb
xchg
adc
daa
outsb
hlt
icebp
cmp
in
les
fmul
inc
jno
in
mov
sbb
pop
into
jp
mov
lret
nop
shlb
rcll
les
insl
pushl
insl
lret
ficompl
pop
inc
call
idivb
cs
xchg
mov
ljmp
mov
dec
in
lds
in
es
pop
mov
pop
jecxz
imul
sbb
aam
sahf
subl
xchg
adc
mov
lds
xor
sub
jae
mov
dec
call
push
cmpsb
push
call
adc
pmaxub
or
out
sbb
bnd
cld
mov
sarb
arpl
daa
cmp
or
sub
cmp
pop
jmp
mov
fstpl
fmull
xchg
scas
jo
imull
test
insl
mov
fs
pop
out
jl
adc
test
add
int3
fs
jl
inc
ficomps
jmp
adc
jae
sahf
scas
les
inc
inc
pop
push
fs
cmpsb
std
push
xor
faddl
cltd
push
xor
add
xor
ja
ss
shl
popa
aad
arpl
pop
inc
dec
xor
or
mov
jae
aam
sub
enter
inc
push
mov
push
lea
popa
pop
xchg
lods
jmp
mov
jb
mov
xor
ror
jle
sbbb
xchg
dec
dec
lret
cmp
push
pop
pop
mov
daa
or
xlat
adc
inc
lret
jge
fstpt
add
and
xchg
test
les
jge
mov
sti
jp
push
movsl
xor
pusha
mov
orl
std
bound
testb
jnp
jecxz
mov
sub
call
or
fs
and
pop
push
std
and
adc
xchg
loop
dec
jns
sbbb
aas
cli
ret
in
mov
popf
or
and
push
out
jle
out
ror
gs
lret
pop
or
cmp
fs
fstpt
int
nop
aam
pop
cltd
fisttpll
push
inc
repz
lock
or
jnp
inc
sarl
outsb
fscale
jb
pop
lahf
in
jmp
movsb
jbe
or
fwait
dec
fistpll
mov
mov
repnz
sbb
jle
adc
cmp
xchg
int3
aaa
mov
pop
xlat
lods
mov
lock
dec
arpl
imul
mov
arpl
aam
and
inc
sub
pop
mov
dec
mov
sbb
cmp
iret
adc
jmp
mov
lahf
loopne
lock
mov
int
cmc
fcmovnb
mov
lock
lods
pop
push
add
into
cmc
sarl
push
sub
jae
xchg
push
mov
fnsave
push
push
xorl
jb
mov
push
aas
add
push
and
out
and
cmpsl
pop
pop
cwtl
jbe
pop
jmp
and
addr16
aas
mov
stc
or
popa
dec
mov
mov
mov
xchg
lods
dec
push
inc
add
das
push
xor
mov
add
pop
pop
rol
leave
mov
push
sub
lods
ret
in
lret
repz
pusha
or
sbb
xchg
xor
mov
rcrb
int3
inc
dec
mov
cmp
pushf
mov
sbb
fmull
gs
inc
es
jae
jae
push
sbb
sub
sbb
repnz
lret
push
mov
fldt
fwait
mov
jmp
fidivrs
jo
loope
mov
int
adc
ret
loopne
cltd
fwait
add
xor
test
stc
aaa
insb
xchg
add
xchg
shrb
pop
fistpl
mov
repz
sarb
mov
mov
fs
sub
mov
pop
cli
sbb
das
xchg
xor
push
jb
lods
ss
mov
pop
in
cli
mov
pop
sub
popf
pop
lret
fcompl
rol
mov
add
mov
mov
dec
pop
out
add
sbb
dec
xchg
adc
inc
adc
lcall
mov
jg
icebp
push
inc
ja
ret
ffreep
sub
jae
aas
cmp
pop
cmp
and
lret
sbb
mov
aad
and
or
sbb
dec
sub
jo
je
xchg
xor
bnd
jp
push
test
cmc
dec
xor
jle
pop
mov
ror
in
and
repz
sub
cmp
fists
sar
mov
stos
fidivrl
mov
and
sbb
mov
jmp
in
adcl
add
jle
int3
push
popf
pop
lahf
test
jne
pop
rorb
xchg
mov
fwait
push
sbb
mov
mov
out
and
or
mov
mov
leave
icebp
cmpb
sub
jecxz
test
cs
mov
cwtl
inc
mov
push
push
push
iret
shll
leave
cmp
cltd
dec
sbb
mov
pop
out
pop
pushf
rolb
push
pop
and
sub
flds
loope
xor
gs
mull
mov
lret
push
es
xchg
adcb
hlt
out
xor
les
and
push
inc
ss
pusha
nop
push
call
sbb
les
mov
cmp
sahf
xchg
and
hlt
orl
lea
mov
jno
sub
sub
sub
mov
mov
in
ja
dec
push
arpl
cmp
test
rcrl
mov
adc
leave
sub
inc
add
jo
add
mov
mov
mov
or
xlat
jmp
in
push
push
xor
and
push
imul
xor
insl
jns
jns
jle
xchg
popa
mov
jae
cmp
xchg
cmp
pop
in
ret
xchg
xor
lock
pusha
fimull
jne
cmp
xchg
movsl
lock
add
popa
push
pop
sarb
outsl
mov
push
divb
add
cld
sbb
dec
sub
cli
push
ds
movsl
cmc
push
adc
sub
stos
pop
mov
push
int
xchg
addr16
stc
dec
scas
mov
mov
push
jg,pn
pop
enter
push
icebp
mov
lods
outsl
push
xchg
pop
cmpl
out
jp
stos
and
cmpsb
or
mov
lods
cld
loopne
inc
test
cltd
adc
bound
aas
sbb
pusha
jp
or
insb
xchg
inc
imul
xor
xor
cmp
insb
dec
cmpsl
jmp
out
sbb
mov
mov
add
sahf
jnp
mov
lods
adc
cld
push
lods
dec
cmp
mov
xor
in
enter
adc
add
sbbl
repnz
jb
ror
mov
cmpsb
ficompl
fcoml
lcall
push
out
mov
jno
mov
adc
nop
in
pop
fisubrs
mov
lods
pop
cmp
aam
rolb
mov
call
mov
imul
mov
icebp
and
mov
jo
or
cmp
mov
bound
lods
pop
fcomps
sub
shlb
cmp
les
int
loop
or
shll
or
mov
inc
imull
add
daa
dec
cmp
dec
loopne
xor
mov
repz
sbb
mov
dec
sub
pop
loope
sbb
inc
adc
gs
popf
lock
adc
mull
mov
into
mov
mov
mov
decb
jb
lahf
pushf
push
movsl
fwait
inc
es
xor
sahf
dec
push
movsb
fwait
sub
pop
fildl
xor
and
ds
loopne
test
in
jae
insl
gs
arpl
sbb
push
pushf
mov
xlat
nop
test
adc
push
add
push
adc
add
mov
dec
rclb
enter
cwtl
movsl
add
jae
mov
push
push
dec
arpl
into
jecxz
mov
data16
int3
xchg
and
lret
xor
popa
sbb
xchg
pop
xchg
js
add
mov
repz
mov
mov
mov
cmpsb
xor
or
inc
and
iret
fmull
jo
mov
and
jmp
icebp
jge
shl
lock
leave
mov
adc
xchg
xchg
testb
call
in
lret
push
sbb
or
xor
cmp
dec
xchg
aam
shrl
lds
pop
push
and
jle
mov
mov
pop
mov
ss
jb
add
sbb
int
in
push
decl
cmpsl
and
packsswb
fs
mov
icebp
je
ljmp
jns
xor
pushl
iret
outsb
mov
mov
nop
add
sti
out
mov
xor
pop
leave
pop
dec
xchg
push
jmp
adc
aas
fcmovb
divb
daa
sbb
fbld
xchg
adc
nop
xchg
roll
push
movsl
inc
mov
mov
lahf
sti
add
push
loope
mov
arpl
fcoms
dec
fldenv
daa
or
sbb
dec
into
test
lds
das
mov
imul
lods
call
push
fistpl
lods
or
jbe
or
mov
push
xchg
sbb
dec
outsl
leave
out
add
pop
loop
hlt
mov
jp
out
xor
movsb
aas
adc
add
mov
mov
cmp
xchg
and
push
hlt
test
dec
sub
daa
dec
mov
sub
jge
mov
pop
and
add
out
inc
push
add
sahf
or
inc
out
inc
fimuls
lea
jl
movsl
add
mov
or
cmp
add
ret
and
cltd
pop
out
xchg
pusha
in
mov
sbb
xchg
orb
and
cmpsl
xlat
jnp
loop
mov
imul
das
jns
popf
mov
and
dec
jbe
in
push
xchg
push
fnstcw
popf
fs
mov
cmpsl
roll
dec
lret
js
mov
push
adc
mov
adc
mov
std
push
or
sub
out
rcrl
div
mov
mov
pop
jl
push
sti
ds
dec
jbe
iret
stos
out
and
sub
stos
xchg
out
adc
mov
sbb
scas
enter
pop
mov
rol
adc
mov
lea
adc
push
inc
cmp
or
jns
cli
and
movsl
jge
inc
jp
cltd
in
adc
shl
or
sarb
imul
adc
xor
rcrb
out
lods
test
daa
test
stos
push
mov
push
ja
fistpll
mov
cs
jno
sub
sbb
pop
test
mov
xchg
imul
jae
dec
mov
and
mov
sbb
xchg
and
sbb
movsb
add
and
lea
ss
sqrtps
inc
loop
lods
sub
fstpt
imul
inc
xor
loope
bound
cmp
nop
cmc
ljmp
hlt
jo
and
cs
in
popa
adc
lock
sahf
sahf
mov
stc
lds
or
roll
ficoms
fwait
mov
jb
xor
lret
xchg
push
mov
or
add
es
fstpl
pop
adc
dec
ficoml
addr16
shlb
popf
outsb
mov
mov
test
mov
cmp
dec
iret
nop
push
lret
inc
inc
mov
mov
and
mov
xlat
adc
inc
dec
and
cmp
aas
outsl
cltd
and
mov
mov
test
adc
and
gs
adc
dec
mov
lods
ljmp
pop
dec
sub
es
cld
dec
shlb
fld
add
pop
dec
xchg
dec
dec
add
fstpt
mov
jnp
pop
fidivl
rcrl
sub
and
inc
mov
fldenv
cmpsb
pop
and
xorl
sarb
fs
jne
enter
daa
lret
sub
int
fisubrs
clc
mov
pop
mov
hlt
shlb
jae
fmulp
out
jmp
adc
sub
stos
subl
sub
dec
fldcw
cmpsl
cmp
push
inc
jnp
or
mov
out
cld
pop
push
sub
xlat
cmpsl
push
loopne
ja
inc
jno
pop
addr16
push
inc
test
fisttpl
arpl
jmp
popa
jg
xor
pop
push
or
xchg
and
arpl
pop
xchg
dec
mov
mov
add
iret
push
push
jns
fdivrs
int3
call
scas
xor
pop
adc
add
mov
and
inc
jnp
adc
lock
pop
ja
cmp
push
imul
aad
rcl
push
xor
adc
pop
arpl
jmp
rolb
sbb
ret
out
xchg
jae
enter
mov
outsb
std
mov
dec
test
fidivrs
lods
lea
imul
sbb
jmp
xchg
out
xchg
bound
jg
in
sbb
mov
icebp
sbb
call
pop
sbb
lock
or
imul
sbb
fiadds
sbbb
fists
xor
fistpll
lret
sub
sbb
cltd
mov
cld
push
mov
jno
je
pop
sub
cmp
dec
mov
mov
and
cmp
sbb
std
shl
enter
test
xor
dec
imul
test
js
dec
mov
test
mov
adc
mov
daa
pusha
push
or
jg
or
cmp
or
bound
mov
repnz
enter
rclb
js
add
sub
xchg
mov
adc
or
push
adc
ficompl
pop
xchg
cltd
cmp
inc
cwtl
rcr
dec
jg
ss
stos
sub
mov
dec
aam
lret
jmp
dec
lret
jnp
outsl
dec
fistps
mov
add
sarb
rcr
loope
sub
push
lret
xlat
pop
push
idiv
jnp
sbbb
jmp
dec
pop
lods
xchg
mov
cli
movsb
mov
add
cmp
mov
add
cmp
sub
sahf
gs
adc
aam
xlat
pop
adc
mov
xchg
push
mov
jmp
dec
mov
mov
mov
jge
hlt
js
cwtl
out
or
ss
stc
or
push
popf
call
adc
push
mov
iret
cmp
jl
loope
and
ret
cwtl
das
data16
cmp
rorb
fstpt
mov
pushf
fcmovu
bnd
gs
dec
adc
push
xchg
sbb
adc
int
lods
into
je
sahf
pop
xor
les
std
rorb
aas
popl
cmpsb
jnp
sub
mov
dec
icebp
jae
ror
sbb
and
test
jb
add
mov
pushf
pop
mov
mov
sbb
int3
mov
inc
mov
adc
inc
jb
fldl
cmp
in
push
fdivr
dec
in
xor
push
addb
push
movsl
xchg
stos
sub
mov
push
ja
cmc
mov
pop
inc
mov
out
mov
mov
inc
div
ss
shr
in
mov
push
xor
cmp
or
mov
push
sbb
test
jle
cmp
jno
mov
mov
loopne
dec
mov
shlb
xlat
fisttps
sub
inc
push
ss
xor
js
sti
mov
mov
cmp
sub
mov
addr16
mov
arpl
inc
addl
adc
inc
arpl
dec
push
jle
repz
sub
and
xchg
dec
mov
shlb
sbb
add
icebp
ds
add
fwait
outsl
sbb
sub
cmp
jne
sub
repnz
dec
add
ljmp
lock
sub
sbb
js
push
shrb
adcb
mov
jne
loop
xchg
pop
into
add
sbb
mov
adc
inc
pop
dec
repz
addl
jno
ffree
shll
fs
fadd
in
pop
jl
cwtl
arpl
push
sbb
adc
nop
sbb
test
mov
jbe
mov
mov
mov
mov
subb
jecxz
in
dec
pusha
mov
push
ret
sti
das
adc
cmp
dec
add
adc
or
cs
or
std
xchg
lods
loope
push
and
arpl
add
pop
aad
xlat
icebp
xchg
shlb
pop
mov
adc
pop
xchg
in
lahf
push
das
dec
insb
leave
sbb
sarb
sahf
inc
dec
pop
inc
flds
inc
test
rcll
je
xorb
dec
into
je
into
in
dec
inc
push
push
pop
fstpt
insb
lcall
xor
lds
ror
out
gs
notb
popl
test
or
or
and
and
sub
push
cmp
xchg
dec
xor
or
mov
in
cmp
ja
sbb
sti
fwait
cmp
aam
js
cmp
clc
jp
rcr
and
mov
rcll
loope
ret
xor
mov
xor
pop
fcmove
add
test
loopne
loop
xchg
xchg
and
test
push
inc
in
xor
xorps
push
incl
scas
push
hlt
mov
adc
jnp
mov
cwtl
cli
sub
nop
popa
mov
add
or
push
cmp
ds
call
pop
aas
xchg
enter
adc
xchg
mov
and
std
pop
adc
sub
shrl
cltd
xchg
fildl
sahf
aam
sbb
sub
dec
je
or
int3
add
movsb
dec
imul
mov
push
pop
xor
aaa
add
xor
or
mov
push
or
pop
pop
hlt
sbbl
pop
lods
xor
xchg
leave
push
pushw
pushf
nop
pop
jnp
jne
adcb
dec
cwtl
testb
enter
negl
cwtl
jnp
xor
es
push
imul
push
iret
lret
scas
test
gs
fildl
and
jge
std
inc
mov
outsl
push
push
loop
inc
addb
mov
rol
scas
or
dec
xor
loopne
mov
shrl
mov
std
jecxz
scas
imul
cmp
cmc
icebp
or
cwtl
xchg
push
xchg
xchg
add
das
mov
into
orb
pop
dec
add
rcrb
cwtl
hlt
scas
je
mov
dec
xchg
cmp
hlt
fcoms
testl
sarl
loope
int3
mov
psrld
das
xchg
jae,pn
jb
ds
jle
addr16
dec
add
mov
sahf
sbb
repnz
xchg
cmpsw
cmp
sbb
cli
push
mov
fildl
xchg
push
loopne
out
cmp
insb
sub
inc
inc
andl
jle
pop
cwtl
pop
out
jbe
sub
clc
fs
mov
cmp
push
sub
loopne
stos
mov
dec
adc
int
mov
fiaddl
pop
mov
stc
ret
ds
imul
jge
or
sbb
cmp
cwtl
lret
mov
xor
mov
pop
push
pop
std
fcomp
jle
roll
dec
pushf
out
lock
sbb
cmpsb
outsl
adc
add
and
out
mov
cs
inc
push
sarb
and
shl
adc
jb
mov
popa
sub
sub
repz
add
add
imul
push
xor
xchg
fmull
dec
and
lahf
xor
fadds
cs
jmp
pop
out
lds
adc
int3
jns
ret
add
in
lds
movsl
icebp
push
out
add
popf
jo
js
mov
xor
fimull
clc
xor
ds
out
mov
loopne
mov
xchg
fwait
mov
testb
lds
jne
jbe
xor
scas
lea
cltd
inc
icebp
cmp
mov
leave
push
movsb
enter
test
repnz
roll
cmc
sub
push
pusha
inc
in
mov
sbb
cmp
push
jle
das
dec
aas
js
mov
outsb
cmp
jo
pusha
sub
frstor
mov
adc
or
imul
call
push
test
jge
into
into
fmuls
fwait
repnz
daa
loop
daa
scas
add
sub
mov
inc
aas
xchg
cmp
jle
in
xchg
movsb
mov
mov
lea
jo
xchg
dec
dec
and
adc
mov
adcb
and
int3
cmp
pop
jno
mov
jo
push
push
mov
cmpsb
pop
shlb
lcall
lock
sub
and
insb
aam
xor
push
ljmp
lret
jns
xlat
jmp
in
sub
clc
iret
mov
aam
adc
mov
sahf
xchg
cld
push
dec
fstpt
inc
hlt
dec
add
in
pop
mov
dec
sbb
ficoms
push
pop
sbbl
ret
jae
push
rcrl
jl
fisubl
xorb
dec
mov
leave
xchg
pusha
and
int
jmp
jmp
sub
mov
sub
test
adc
xchg
bound
mov
jmp
stos
jle
jne
xchg
mov
dec
add
js
mov
jg
pop
cmp
mov
loopne
in
sub
je
xchg
cltd
add
mov
popf
les
push
or
in
push
pop
push
pop
scas
push
jne
push
sub
pop
mov
aas
or
mov
lock
dec
push
add
repnz
out
pop
mov
pop
xor
or
arpl
sub
or
and
ret
pushf
call
lock
ljmp
jno
bnd
stc
rol
sbb
jns
mov
add
test
inc
into
loope
and
outsb
cmpsl
add
jns
mov
stc
pop
sbb
popa
and
faddp
ror
xchg
cmp
lods
dec
dec
push
add
int3
cmp
mov
pop
stc
adc
cld
aad
pop
test
test
pop
xchg
fcmovbe
out
dec
or
rcll
mov
call
test
xchg
sub
add
aad
loop
jge
sbb
xchg
inc
xor
pop
jmp
and
jnp
je
arpl
xchg
jbe
adc
push
mov
push
dec
push
fnstenv
sub
dec
lahf
mov
jae
cld
dec
jcxz
inc
inc
aam
mov
movb
in
shll
rclb
push
shl
and
jmp
lea
inc
pop
cmp
scas
aam
stc
and
xchg
mov
mov
int3
jb
inc
and
imul
mov
clc
jnp
inc
dec
inc
xchg
imul
cmp
cmp
push
int3
pop
push
icebp
jg
pushw
ficoml
int
mov
cmp
and
leave
es
int3
ret
loope
cmc
icebp
fcmovnb
xchg
mov
repnz
cmpsl
mov
xor
lret
add
cltd
cmp
popf
dec
test
jb
sbb
dec
push
push
cmpsb
jp
enter
or
xchg
mov
ss
fistpll
pop
jge
mov
sbb
mov
test
xor
dec
cmp
insl
add
sbb
fsts
movsl
cmpsl
lods
fistps
add
test
adc
ret
xor
xchg
mov
mov
xor
in
test
out
ja
cld
out
mov
aam
sbb
adc
cmpsb
sub
std
xlat
outsb
bound
lret
cli
insl
cli
loop
xchg
inc
outsb
addl
sbb
cmpsb
mov
sub
insl
in
cli
xor
push
mov
and
idivb
jge
jb
jge
sub
mov
test
cmp
cmp
push
insl
popf
sub
int3
dec
nopl
jnp
add
stc
pop
idivl
ljmp
fcomps
adc
cmpsl
or
insb
jno
fcoms
inc
out
mov
imul
popf
mov
jle
xor
int3
inc
jbe
movsb
push
aaa
add
jo
mov
add
inc
pop
fwait
lods
out
gs
mov
xor
sahf
call
add
jb
sarl
iret
adc
dec
xchg
ss
xor
out
mov
push
dec
xor
xor
sti
or
movsl
loope
add
adc
rol
inc
ds
aas
sub
adc
shll
jecxz
ja
repnz
lods
call
adc
cmpb
hlt
cs
sti
push
cmp
xchg
ljmp
and
out
jmp
jl
js
sub
std
aaa
pop
out
stc
inc
jmp
jp
cltd
mov
dec
cmp
sub
ljmp
call
adc
into
adc
ret
aas
insb
jnp
jmp
inc
fistpll
push
inc
stc
mov
mov
pushf
mov
push
das
mov
jbe
xor
mov
push
jb
cs
push
mov
sbbb
add
scas
insb
test
ret
add
int
xchg
dec
and
outsl
cmp
movsb
fstl
ja
dec
into
push
mov
out
daa
gs
adc
fs
xchg
addr16
xor
pop
mov
sub
gs
add
fcomip
out
and
aaa
std
mov
inc
aaa
push
ror
cmc
sub
jg
stos
sub
adcl
sub
movsl
push
jp
pop
and
mov
add
mov
int
ror
jno
adc
xor
lahf
push
or
sahf
movsl
sbb
orl
and
mov
xchg
pop
popf
cmp
add
in
inc
cmp
or
data16
add
test
fistl
adc
inc
clc
cmp
sbbb
lock
push
mov
sar
fwait
mov
push
leave
shrb
mov
sub
js
mov
nop
mov
les
aad
ss
push
jmp
lock
loope
inc
mov
mov
xor
inc
xor
jae
add
shrb
repz
shll
bound
in
sbb
jne
dec
loope
sahf
push
sub
cmp
fists
les
aaa
mov
pop
jne
insl
ja
or
pop
push
insb
lock
xor
and
mov
pop
inc
or
cmp
adc
xchg
addr16
js
dec
stos
lcall
add
jno
fisubl
enter
shl
icebp
pushf
dec
rcr
scas
push
pop
dec
hlt
inc
ret
lcall
and
and
pop
jge
sbb
mov
dec
ja
mov
or
add
adc
fbld
jne
mov
inc
and
test
adc
fldcw
loop
pop
mov
insl
out
add
add
rorl
loop
xor
or
pop
mov
test
jp
mov
fbld
or
insl
push
pop
imul
pop
leave
jmp
scas
jns
cmp
fincstp
sbb
mov
stos
out
xor
shl
sbb
out
popf
ss
mov
cmc
adc
jp
insl
aaa
lock
sbb
jns
mov
jp
inc
jnp
movsb
push
and
dec
and
inc
add
fdivs
out
je
enter
aam
dec
add
push
push
push
arpl
cmc
aas
movsb
xor
loopne
dec
mov
add
cld
cmp
jnp
mov
popf
inc
pop
ss
push
pop
scas
jle
cmp
or
inc
sbb
jg
stc
or
mov
outsl
push
jle
fisubrl
mov
pop
stc
in
bnd
sub
mov
in
rclb
or
ret
dec
shl
cmpsl
adc
pushf
pop
pop
cld
cmp
clc
stc
mov
aad
movsb
out
jbe
shlb
pop
in
inc
out
pop
inc
mov
adc
jb
sbb
clc
movsl
sub
imul
jmp
aas
insl
cmpsl
xlat
repnz
loopne
fcomip
sti
jecxz
xchg
ds
popf
xchg
scas
mov
scas
repnz
cmp
mov
pop
data16
cmp
hlt
mov
icebp
loopne
dec
or
cmp
rol
jmp
ss
mov
icebp
inc
dec
add
or
or
jb
jnp
outsb
xor
mov
std
addl
das
pop
insl
cmp
or
mov
je
movsb
mov
mov
push
scas
push
sub
fisubrl
faddl
add
in
out
notb
enter
mov
lcall
sbb
enter
out
in
adc
hlt
sbb
xchg
scas
fucomip
jmp
mov
sbb
lods
add
push
dec
pop
mov
scas
sahf
xor
jmp
pop
fsubrl
xchg
orl
cmp
cmpsl
mov
pop
mov
stc
lods
and
ud0
mov
call
incl
es
dec
lods
loop
xchg
sbb
in
daa
or
xor
push
fucom
ljmp
shl
loop
movb
xor
add
shrb
add
iret
movups
je
fisttpl
das
xchg
ret
lret
xchg
rcrl
or
fwait
cmc
dec
or
sti
or
or
insl
pop
mov
flds
push
push
mov
push
sub
add
xchg
inc
jle
sub
ds
xorb
mov
mov
stc
sub
outsb
loopne
or
stc
mov
mov
insb
leave
movsl
xchg
xchg
aam
mov
loop
loop
xor
xor
add
leave
repnz
loopne
popf
jnp
push
mov
rcrl
popa
jne
mov
cmp
adc
out
adc
arpl
and
ret
dec
mov
idivl
and
inc
lods
nop
shll
push
loope
aaa
mov
sub
iret
sarb
pop
movsl
out
ret
je
jns
int3
pop
jo
sbb
mov
aaa
and
insl
insl
nop
popa
scas
popa
push
gs
dec
inc
subl
shlb
fstp
push
jmp
dec
mov
jbe
mov
lods
cmp
cmp
mov
stc
rorb
pop
xchg
pop
iret
pop
and
adc
iret
inc
sbb
inc
mov
out
mov
push
mov
jle
push
outsl
call
sub
mov
and
pop
xor
adc
mov
adc
xlat
lcall
adc
roll
stc
and
sub
pusha
outsl
in
dec
jnp
pop
stos
in
ficoms
cmpsb
and
cmpl
xchg
cltd
mov
loop
into
aas
push
add
cltd
push
add
fsub
lock
notl
nop
outsb
push
fdiv
mov
imul
int3
xchg
fwait
xchg
fists
lods
sub
sub
int3
les
lcall
dec
mov
sub
mov
int3
fnstcw
mov
inc
add
fwait
pop
stos
data16
adc
fnstenv
xor
lea
add
arpl
cmp
enter
rol
mov
mov
mov
cli
lea
xor
lret
lret
test
cli
out
nop
mov
xor
dec
jle
pop
lret
out
mov
popf
sbb
shlb
scas
pusha
ret
push
add
mov
sub
aas
mov
inc
mov
cmpsl
jp
les
jmp
and
mov
movsl
mul
gs
out
in
popa
test
ds
pop
sar
adc
jbe
test
mov
out
int3
fisttps
lea
fildl
pop
inc
adc
push
sub
mov
mov
and
test
popa
insl
pusha
ja
cmp
xor
jns
insl
push
push
cmp
mov
dec
adc
loopne
add
mov
sbb
jl
push
je
push
mov
aaa
mov
adcl
push
inc
insb
adc
xchg
sbb
rcrb
loopne
lods
ret
dec
iret
xor
jl,pt
ds
jmp
xor
mov
ret
rolb
movsb
pop
cmp
subl
repnz
push
jnp
sub
mov
movhlps
or
lret
push
xchg
out
xor
iret
cld
sbb
cmc
jno
inc
add
int3
cmp
xor
or
jecxz
sti
rorl
movsb
data16
sub
aad
addr16
inc
cmpsb
lret
aad
fcomip
xchg
scas
rorl
xor
ss
bound
jmp
inc
cmpsb
lock
mov
jns
dec
push
aad
push
add
and
les
pop
jne
sub
xchg
das
ss
mov
xchg
leave
enter
xchg
cmc
scas
push
movsl
lds
mov
lods
xor
aaa
clc
js
adc
pop
xchg
ret
fimuls
mov
hlt
or
sbb
sub
cmc
sub
movsl
xor
pop
push
fnstsw
and
scas
insb
add
sub
stos
daa
push
push
lods
inc
decb
jmp
sti
xor
add
mov
jns
mov
mov
adc
dec
dec
pop
iret
xlat
in
add
sbb
xor
fistl
ss
loop
aad
scas
int3
inc
sbb
cmp
in
jno
sbb
cld
mov
jle
ss
adc
mov
inc
mov
outsb
mov
bound
inc
adc
or
mov
subb
repnz
mov
ja
mov
add
lcall
stc
fdivs
loop
push
repnz
pop
push
cld
dec
inc
mov
out
mov
fcmovnu
add
fildl
in
fisttpll
dec
sub
ret
std
pop
mov
into
inc
imul
out
lahf
push
mov
dec
std
pop
xor
push
sub
pop
std
mov
stos
inc
jecxz
emms
jo
push
cmpsb
sbb
rolb
mov
ret
fsubl
out
xor
mov
dec
mov
and
ret
jp
imul
mov
push
mov
cmp
sub
repnz
xor
icebp
push
push
jecxz
out
or
movsb
addr16
pop
sub
aam
loop
mov
fistps
pop
push
inc
or
or
xor
data16
mov
mov
or
adc
mov
out
dec
dec
sbb
mov
in
inc
xor
cwtl
ss
pop
enter
icebp
add
push
add
aam
fiadds
movsb
jecxz
test
sbb
out
push
cltd
jns
pop
mov
rcrb
xchg
loope
mov
stos
inc
jp
insl
nop
enter
cld
adc
and
push
xchg
mov
mov
jmp
test
jl
pop
xor
dec
scas
cmpl
int3
fwait
and
sbb
sub
out
mov
pop
add
lahf
loopne
ljmp
and
lret
cmpsl
and
sub
and
sub
push
addl
push
dec
jp
mov
mov
cwtl
jo
pusha
lds
inc
and
push
mov
mov
sti
int3
dec
inc
shll
gs
add
xor
cli
test
int3
xor
in
or
stos
iret
data16
mov
jnp
sub
enter
or
sbb
scas
mov
sbb
push
pop
xchg
add
ja
push
xlat
jne
pop
das
neg
inc
cmpsl
aad
jl
cmpb
cmp
clc
ret
dec
adc
push
inc
lret
add
or
xchg
xor
mov
inc
mov
clc
and
jb
repz
sbb
pop
nop
out
ret
push
push
imul
jmp
mov
jae
scas
stos
les
lret
pop
xor
test
in
ljmpw
icebp
repz
shr
xor
cmp
inc
mov
adc
mov
push
jae
dec
jno
test
cmp
mov
les
mov
or
xlat
mov
test
dec
cs
pop
mov
outsl
jb
and
ret
and
clc
leave
scas
push
xor
mov
dec
lock
mov
in
int3
push
cld
pop
mov
insb
adc
sarb
mov
ja
jne
dec
pop
std
test
test
insl
jo
cld
fcmovb
loop
adc
mov
jnp
sbb
sbb
jl
loope
repz
inc
sub
jl
fcompl
dec
and
movsl
cmp
mov
mov
xor
xor
jns
pop
ljmp
xor
cmp
cmp
dec
and
nop
inc
pop
ljmp
xor
mov
ret
sbb
popf
fstps
insb
and
jge
mov
push
xor
pop
icebp
inc
movsb
pop
jge
ret
push
shrb
mov
mov
outsb
das
fmull
jp
in
out
xor
leave
fmull
xlat
xor
jl
xor
pop
xchg
pop
inc
pop
xchg
cmp
and
daa
add
xor
cmp
adc
adc
mov
cli
fistpll
xchg
stos
js
push
int
das
xor
add
pop
mov
fldt
pop
add
add
pushf
push
inc
imul
mov
mov
dec
testb
mov
sbb
stc
leave
jl
add
or
ja
call
xchg
mulb
sbb
stc
sbb
rorb
jle
mov
or
jae
not
ja
std
xchg
jge
aad
push
out
in
insl
out
std
mov
jge
inc
ljmp
int
push
insl
or
dec
out
xchg
clc
mov
cmp
xor
jb
aas
aam
out
push
and
mov
pop
xchg
sub
movsb
pushf
jbe
loope
or
mov
arpl
cwtl
dec
pushf
cltd
mov
xchg
out
mov
out
lret
or
adc
outsl
inc
clc
dec
dec
rclb
movsl
push
and
stos
sbb
nop
sti
in
daa
fnstenv
fistl
xor
ja
pop
rcrb
cs
je
ror
mov
mov
cs
aaa
mov
sbb
leave
jmp
out
sub
test
push
add
je
jp
xchg
sbb
push
mov
iret
xchg
rcrl
xlat
jmp
movsl
ret
into
mov
imul
xchg
ds
nop
cmp
or
adc
dec
adc
test
sbb
popa
jle
dec
cmp
jl
lds
inc
inc
in
stc
pop
mov
aaa
and
ss
shll
dec
frstor
sbb
daa
out
daa
stos
push
mov
mov
and
rorb
xchg
leave
jo
jle
sbb
xchg
and
mov
jmp
dec
fsubs
repnz
aam
inc
clc
dec
add
mov
jecxz
cmpl
pop
lods
aaa
out
sti
adc
divb
hlt
fldt
bound
adc
int3
in
mov
pop
popl
das
ss
js
dec
mov
mov
add
movq
out
inc
inc
jne
jp
push
dec
jnp
popa
cmp
mov
sbbb
and
jl
xchg
mov
pop
nop
pop
or
or
and
arpl
int
lret
xchg
cmp
cmp
adc
cmp
push
imul
dec
xchg
scas
fsts
or
mov
jmp
sbb
in
mov
leave
sub
or
insb
lret
rsm
sbb
ror
in
scas
pop
mov
dec
int
mov
in
hlt
shll
outsb
or
retw
stos
sbb
mov
jns
mov
push
mov
incl
fildll
call
gs
daa
push
scas
shrl
leave
jns
or
testl
inc
sbb
loop
cmp
sahf
imul
pusha
push
int3
popf
ret
add
test
testl
pop
sub
xor
sub
fdivs
lret
or
mov
ljmp
pop
arpl
sub
out
leave
loope
cwtl
ss
aam
fildl
inc
xchg
js
loopne
adc
or
mov
inc
loopne
fldt
jae
push
repz
xchg
lcall
adc
repz
xorb
xchg
dec
mov
adcb
ss
inc
push
ret
adcl
add
in
mov
in
or
int3
jns
lret
fcompl
cmp
ss
sarb
in
xchg
jl
adc
mov
cmp
into
jle
xchg
xchg
xlat
and
stc
xor
xchg
stos
adc
cmpsb
cmp
push
adc
pushf
pop
cmpsb
pop
inc
jp,pt
lcall
inc
xchg
inc
movsb
fmull
jb
fwait
jb
mov
mov
stos
iret
gs
insl
xor
ljmp
rcr
xchg
jb
or
push
je
enter
shl
lret
mov
mov
aas
nop
jecxz
lret
adc
and
adc
std
jae
rcrb
xor
std
pop
pop
icebp
xor
mov
mov
cld
das
push
lcall
rcrb
and
sub
popf
adc
rcll
dec
inc
sub
pop
shll
int3
adc
enter
or
add
jb
push
mov
or
dec
shrb
cmpsb
jp
pop
das
cs
scas
sti
adc
dec
jp
pop
flds
test
pop
xlat
mov
sub
cmp
mov
in
stos
xchg
sub
sarb
dec
aam
loope
dec
cli
pop
mov
xor
xchg
add
sub
imul
push
inc
jnp
pop
loopne
and
imul
mov
inc
scas
pop
mov
pop
mov
inc
hlt
jmp
jl
mov
mov
or
inc
dec
adc
aad
call
lret
and
dec
xchg
jge
inc
repnz
jmp
call
dec
push
dec
xchg
or
sbb
lds
outsb
gs
daa
div
idivl
jmp
push
inc
push
rclb
jle
jp
xorb
lcall
aas
xchg
mov
hlt
in
pop
or
mov
sbb
test
shlb
sbb
xchg
sbb
lret
and
xor
mov
mov
xor
pop
in
insb
lahf
clc
dec
add
rcll
dec
or
dec
and
insl
push
or
add
push
add
ljmp
sbb
lock
sub
and
punpckldq
inc
push
icebp
cmp
iret
aad
xor
jns
js
add
das
push
push
cmc
das
adc
and
rclb
pop
and
inc
cmp
xchg
cli
jnp
fisttpl
aaa
imul
ljmp
decb
pop
adc
cld
ret
mov
fstl
inc
mov
jno,pt
dec
xor
popa
push
jg
ds
jp
test
mov
jl
incl
rol
fisubrs
test
rcrb
adc
ds
pop
pop
movsl
daa
jno
add
push
cmc
andl
add
rcrb
fisubrl
xor
and
xchg
mov
pusha
xchg
xor
cli
enter
fcomps
mov
loopne
jo
rcrl
pusha
xchg
in
fwait
push
aad
cmp
mov
sbb
or
pushf
in
cmp
aaa
adc
dec
loopne
mov
xor
adc
and
adc
in
cmpsl
and
and
scas
push
iret
mov
mov
sbb
cmp
jne
rol
cs
out
call
subb
jae
out
pusha
pop
jmp
nop
mov
mov
mov
mov
jp
cmpsl
dec
sbb
push
mov
dec
mov
inc
or
and
inc
or
aas
push
jne
aaa
and
scas
jno
sub
and
cwtl
sbb
push
hlt
mov
sub
mov
add
es
pop
add
shll
adc
sub
or
std
arpl
pop
aam
aam
enter
faddl
xor
cmp
inc
pop
out
pop
pusha
adcl
out
sub
in
mov
sar
in
scas
jne
aaa
outsb
lea
aas
out
mov
dec
xor
and
orl
pusha
jo
cmp
std
push
enter
push
loope
or
enter
arpl
sbb
or
in
mov
dec
cltd
pop
in
in
std
adc
mov
lods
cmp
jae
lahf
xchg
inc
fwait
inc
pop
out
js
and
sahf
out
add
rcrb
fcoml
mov
xor
lods
mov
mov
or
lods
mov
cmp
mov
shll
fscale
test
test
lods
cmp
out
cmpsb
int3
sub
cmp
jle
test
inc
insb
cli
xor
sbb
push
cmp
cmp
bound
sbb
sbb
mov
pusha
pop
sbb
fiadds
dec
sti
dec
maxps
cld
or
negl
jg
xchg
cli
push
mov
negl
cmp
inc
inc
shlb
jne
test
in
in
arpl
dec
inc
lds
cwtl
pop
jmp
movsb
adc
or
in
test
pop
inc
xchg
pop
leave
jbe
movsb
xchg
xchg
cs
lods
popf
add
push
adc
or
repnz
movsl
or
int
imul
inc
test
mov
outsl
sbb
inc
mov
sub
pop
movsb
and
fcompl
cmp
add
shl
lcall
insb
test
dec
add
xor
jns
out
fcoms
or
dec
in
test
and
loop
add
adc
inc
adc
xor
movsb
or
or
adc
cmp
sti
insl
push
jne
mov
out
call
test
sbb
fdiv
test
fisubrl
jne
movb
fwait
add
aaa
imull
mov
jbe
mov
sti
add
mov
adc
mov
xor
inc
inc
movsb
mov
mov
pop
sbb
adcb
xor
into
je
movsb
ja
iret
xor
les
pushl
mov
test
push
out
mov
mov
cmp
jge
pop
dec
mov
push
scas
repnz
jns
pop
icebp
fisttpll
lods
pop
inc
sbb
insb
das
call
scas
ficompl
jb
or
sti
jnp
enter
popf
mov
popf
cld
mov
inc
shrl
mov
xchg
cmpsb
adc
mov
and
xchg
fildl
jge
lock
mov
pop
dec
push
call
ret
test
push
les
and
ja
or
out
shlb
outsb
ret
cwtl
xchg
sti
mov
sbbb
movsb
cmp
xor
js
aas
or
push
push
jo
xchg
xor
push
les
add
out
in
dec
mov
nop
and
in
je
cmpsb
jge
jno
les
xchg
lret
xchg
test
pop
jp
fs
das
pop
icebp
xchg
mov
and
xchg
dec
and
mov
pop
js
or
mov
test
pop
mov
or
cli
pop
adc
sub
aas
dec
sub
testb
xchg
int3
pop
fadds
push
and
sbb
cmp
mov
mov
add
mov
arpl
xorb
les
popf
jle
mov
sbb
sbb
loopne
dec
mov
xchg
mov
add
cs
push
pop
jmp
nop
mov
fmulp
out
addr16
fs
sub
scas
mov
pop
sub
movsb
mov
sbb
cmpsl
jge
inc
testb
cmpsb
and
mov
cmp
jns
sbb
inc
std
test
lcall
lds
addr16
ds
outsb
push
dec
call
sarl
cltd
test
push
out
mov
cmp
inc
mov
ret
popa
es
es
pop
push
push
cmp
add
das
pop
imul
addr16
sub
pusha
shll
daa
xor
movsb
xor
mov
pop
jp
imul
xchg
daa
sub
xlat
jb
mov
test
inc
jmp
leave
add
mov
data16
xor
inc
jo
jg
fwait
xchg
adc
inc
add
stc
adc
lds
js
fwait
in
add
fs
lret
es
in
sub
push
inc
xor
mov
pop
add
rol
dec
sarb
sbb
loop
jnp
push
jno
rcrb
int
push
sub
fstl
jp
shrb
imul
shrl
aaa
test
mov
jae
jns
adcb
jle
ja
pusha
inc
imul
pop
loope
fsubrl
imul
cmc
and
sbb
rol
es
addr16
sub
jns
hlt
mov
mov
xor
push
xrelease
xor
sub
mov
cwtl
xchg
lods
in
js
and
ret
add
sar
test
and
lods
dec
test
cmp
out
pop
xor
cmc
jae
lods
jne
mov
out
pop
shrb
mov
inc
adc
popf
jecxz
rcll
outsb
fsubs
ds
fadds
push
sub
loop
out
mov
or
aas
cwtl
call
inc
xor
mov
and
inc
cmp
jb
cs
movsb
rcrb
das
in
daa
adc
mov
xchg
iret
push
pop
js
sbbl
js
or
roll
dec
push
shrb
in
xor
xchg
and
leave
les
cmc
popa
mov
and
add
cmp
int
mov
scas
jne
addr16
jae
aam
pusha
outsl
jae
ret
int3
jge
ljmp
fistl
ja
inc
dec
inc
or
push
dec
mov
pop
jno
cmp
fnstcw
xchg
imul
cmp
xchg
mov
add
jo
xchg
add
mov
xchg
lock
out
push
ret
xchg
orl
idivb
lods
and
imul
popa
cmpsl
aaa
enter
js
loopne
fidivs
pushl
mov
mov
mov
xchg
mov
fadd
scas
sub
jg
mov
pop
or
mov
cli
xchg
pop
cmp
push
jne
push
jno
fs
out
mov
pop
aas
popf
xlat
cli
or
pop
inc
ret
outsl
outsb
call
xor
jo,pn
incb
mov
mov
lock
mov
lret
xchg
sbb
add
shlb
mov
jno
leave
in
jg
jmp
mov
lret
shll
mov
push
push
ret
imul
aaa
or
sbb
xchg
mov
jecxz
xchg
test
out
mul
mov
push
jg
pop
add
xchg
jmp
loop
std
movsl
xor
icebp
pop
ljmp
in
mov
and
testb
xchg
dec
jbe
in
cmpsb
or
mov
std
and
outsl
xchg
ret
sarb
or
dec
sbb
mov
pop
add
sarl
push
sub
fiadds
sub
scas
dec
mov
sbb
jnp
or
jecxz
popa
inc
mov
lds
aaa
mov
mov
out
mov
mov
pushf
mov
xchg
rorb
int
sbb
and
cmp
or
mov
cmp
aam
es
sub
mov
dec
inc
loopne
inc
pop
ljmp
into
xor
inc
cmp
mov
add
and
int3
or
mov
and
xor
xlat
lea
mov
cmp
adc
jno
vcomiss
push
insb
in
sbb
add
dec
sarb
jo
imul
insb
mov
outsl
insb
inc
in
das
mov
aas
adc
inc
dec
pop
hlt
int
je
insb
adc
dec
subb
mov
loopne
or
push
loop
pop
jb
add
sahf
es
imul
mov
scas
mov
insl
addr16
nop
imul
pop
arpl
mov
cmc
push
mov
test
pop
jge
mov
pushf
xor
sbb
and
out
jmp
jecxz
cmpl
pop
cmp
xchg
addr16
push
clc
push
popf
fistpll
es
sub
jle
std
jg
cltd
test
scas
xchg
inc
inc
jmp
gs
fcoms
iret
es
out
push
cli
sahf
xor
mov
aas
jns
leave
push
mov
fcmovbe
shrl
inc
and
enter
mov
ljmp
jge,pn
repnz
insl
fcompl
sbb
push
out
mov
sbb
sub
shlb
cwtl
shrl
xchg
in
sub
ja
ficoml
jg
ds
dec
mov
outsb
addr16
pop
fcmove
mov
push
cwtl
mov
fisttpl
call
cmc
xchg
mov
pusha
in
mov
mov
sub
mov
xchg
mov
mov
pusha
jecxz
adc
je
repz
sbb
mov
fstpl
add
mov
stos
fnsave
loopne
mov
ret
adc
inc
jb
jbe
or
out
cmpsb
daa
mov
ljmp
stos
or
mov
jp
rcrb
add
xor
std
cld
pusha
cmp
inc
scas
insl
pop
xlat
push
out
scas
arpl
and
jmp
call
and
push
data16
and
ret
ret
inc
push
cmp
sbb
dec
pop
xor
pop
push
jne
jl
movsl
pop
sub
cwtl
sahf
and
outsl
jo
aam
inc
pop
mov
mov
subb
push
xchg
ljmp
ds
in
mov
jno
mov
push
ds
out
scas
jne
sub
pusha
xor
mov
mov
mov
inc
jmp
sbb
daa
bound
push
aam
inc
and
and
sahf
std
xor
and
scas
daa
movl
scas
scas
xchg
xchg
sti
daa
cs
loop
aam
jl
fdivrp
sub
mov
xor
orl
adc
add
sub
adc
fs
push
push
push
packsswb
mov
sbbb
xorb
mov
aas
bound
aas
add
sbb
out
add
or
lods
mov
xor
es
scas
xchg
js
fdiv
cld
inc
cmc
leave
or
neg
mov
adc
loop
pop
inc
sti
aaa
sbb
cmp
adc
test
mov
dec
rcrb
decl
cmp
cmpsl
lea
mov
in
int
mov
outsl
xchg
cmp
popa
ljmp
into
fs
mov
nop
cwtl
adc
add
add
and
fldcw
dec
insl
cmp
scas
sbb
jnp
xor
and
das
divl
xchg
xor
xchg
push
cmp
loop
js
push
movsl
lods
push
out
and
test
fucomi
mov
dec
rorb
cmp
pop
add
jnp
clc
dec
out
lret
ret
int3
mov
psubsb
dec
cmp
dec
sbb
push
cmp
mov
and
adc
lcall
out
fs
adc
jg
add
call
fmuls
inc
dec
mov
ds
ud0
and
aaa
mov
inc
dec
sub
push
repnz
cli
movsl
and
in
fstp
cmp
jne
popa
and
push
ret
adc
movsl
adc
in
push
jns
push
arpl
scas
and
jmp
pop
ljmp
push
shr
out
in
js
dec
mov
outsl
repz
cmpsl
inc
mov
es
dec
out
jl
adc
pop
sub
inc
nop
jae
test
insb
pop
fdivl
pushf
sub
xchg
inc
cwtl
pop
mov
push
leave
es
jb
and
fcompl
hlt
daa
jno
cmp
xor
lods
xor
dec
or
and
pusha
adc
lea
das
mov
test
cli
jg
pop
test
imul
popl
cs
popa
pop
push
xchg
fidivs
xchg
sbb
cmp
and
add
adc
jmp
outsb
dec
shl
mov
xchg
mov
mov
adc
pop
movsb
adc
xor
mov
jle
sub
adc
mov
imul
bound
xchg
lret
sub
push
gs
pop
gs
pop
jbe
int
mov
loope
xchg
jo
mov
push
jg
mov
inc
pop
shrb
adc
or
scas
iret
pop
push
stos
cli
mov
and
in
xor
test
pop
jmp
cltd
jmp
clc
movsb
jmp
push
adc
jl
scas
sti
imul
and
dec
fidivl
das
data16
lods
push
fsubrl
add
vcvttps2dq
shl
scas
jb
roll
xor
scas
pushf
mov
jg
sub
pop
test
xor
xor
into
jbe
push
adc
xorl
mov
xchg
fisttpll
adc
jns
out
test
sub
lods
ds
mov
mov
idivl
xchg
cwtl
mov
rcrb
ja
test
jmp
or
aas
outsl
divb
add
loopne
addr16
cmpsb
fimuls
sbb
lcall
ja
neg
popa
sti
and
shlb
push
lds
imul
or
adc
mov
sbb
push
and
stos
daa
sbb
mov
pop
aam
dec
mov
pop
cld
clc
jne
cmp
mov
and
inc
orl
push
pop
add
inc
dec
pop
inc
xchg
sbb
cltd
cmpsb
arpl
mov
lret
cmpsb
iret
cltd
mov
inc
pop
insl
xchg
loopne
adc
inc
leave
js
cmp
imul
mov
adc
push
lret
pop
xchg
sub
cwtl
adc
cmp
jle
pop
or
into
daa
sub
call
mov
xchg
loop
add
push
inc
jecxz
add
bound
in
aaa
cwtl
push
cwtl
mov
sub
mov
hlt
int3
jnp
jge
add
fimull
or
push
and
push
xor
xor
setno
mov
or
push
enter
cmp
lds
xorb
rolb
mov
movsw
shr
or
mov
rclb
ficompl
out
sub
xlat
mov
and
pop
neg
ja
out
stc
dec
xor
dec
add
add
and
out
pop
cmp
add
pushf
jne
sbb
cmp
jno
sub
std
sub
loop
dec
leave
xchg
stos
sarl
cmp
adc
fdivs
std
hlt
enter
repnz
push
daa
xor
out
int3
pop
mov
jp
jg
adc
iret
outsl
stos
inc
mov
ret
and
sbb
mov
enter
lods
add
xor
mov
and
push
imul
outsb
data16
int3
or
out
push
mov
push
iret
mov
fdivrl
pusha
push
sbb
aam
push
push
cmp
aaa
xchg
andb
leave
clc
std
incl
arpl
mov
aam
fucomip
in
add
clc
and
jne
cli
mov
fwait
jns
adc
jno
in
and
pop
dec
jae
lret
nop
cs
mov
iret
daa
aaa
int
pop
or
mov
push
fildll
pop
aam
mov
out
sub
mov
xlat
mov
push
jno
das
mov
stos
pop
test
insb
xchg
dec
clc
hlt
inc
and
es
sti
sbb
xor
dec
test
mov
dec
jecxz
test
je
jl
addb
in
xor
out
jp
dec
push
jg
lcall
ja
pop
jns
jnp
mov
cmp
nop
inc
cli
imul
jo
repz
mov
jo
int3
cmp
jnp
loop
sti
and
add
jg
int
je
scas
pop
out
std
jnp
js
or
ret
mov
in
xor
clc
jne
lock
out
out
hlt
imul
call
dec
fidivl
adc
ja
mov
and
jb
or
arpl
jp
mov
test
push
aam
pop
movsl
jle
jnp
jb
mov
out
xchg
nop
jp
lods
mov
lock
outsb
int3
or
sub
adc
adcl
js
sub
xor
mov
sahf
les
lods
pusha
fldenv
cld
lahf
jg
push
out
movsl
xor
enter
nop
sbb
imul
je
and
cmc
test
mov
cltd
mov
scas
mov
stc
es
mov
add
pop
iret
shlb
mov
dec
sbb
xchg
in
cmpsl
in
jne
or
push
jo
stc
inc
or
dec
jl
call
fnsave
mov
add
out
lcall
jmp
fdivs
out
jge
mov
inc
mov
xchg
pusha
dec
pusha
scas
mov
mov
xchg
lock
in
pop
imul
cld
and
sbb
rclb
xchg
sarl
cmpsb
popf
jp
or
shll
xchg
cmp
out
mov
lret
mov
adc
mov
inc
out
pushf
aam
mov
xor
cmc
ss
sbb
cmc
nop
repnz
call
cmp
jo
fadd
push
loop
adc
push
mov
ret
adcb
arpl
mov
repz
out
call
add
mov
icebp
out
fs
and
icebp
jno
cmp
call
pop
test
push
notl
push
adc
dec
subb
inc
cmp
lret
ret
pop
jne
inc
ss
jnp
mov
cmpb
mov
add
or
adc
dec
in
sub
gs
repz
sbb
test
push
jg
add
loope
xchg
and
cmp
xchg
or
fbstp
xchg
mov
lahf
mov
xlat
leave
aad
sub
cmp
ret
fdivrs
push
inc
fwait
jmp
call
test
sbb
cmpl
outsl
out
lds
add
jle
int3
mov
cltd
and
mov
les
add
pop
lds
jae
iret
cli
ret
das
sti
mov
flds
repz
cmpsb
jecxz
lret
nop
in
fsts
or
scas
pop
lret
ror
shll
std
add
xchg
pop
sub
pusha
aad
pusha
repz
and
sub
push
jmp
ret
cmpsb
rcl
or
inc
cltd
and
sub
scas
mov
iret
mov
cmpsb
adc
mov
pop
lret
add
pop
ds
or
in
rorb
sub
enter
pop
call
push
jo
paddw
in
ds
test
and
cwtl
mov
xor
xlat
mov
nop
aam
mov
jno
mov
xchg
adc
pop
leave
sar
cmpsb
mov
adc
insb
or
sub
mov
gs
cmp
sub
dec
cmp
ds
jne
mov
arpl
nop
ret
push
lret
cli
sahf
jnp
dec
rorb
push
dec
and
mov
sbb
in
lds
in
ljmp
lods
stos
mov
xchg
dec
and
or
enter
outsl
fcompl
sarb
enter
mov
out
clc
fildl
jnp
mov
pusha
cltd
dec
jno
or
call
lret
mov
mov
out
cld
scas
fwait
adc
add
adc
int
xor
pop
ss
lret
aas
pop
test
jb
and
xor
nop
xchg
lret
int3
xor
imul
add
inc
in
mov
dec
jno
andl
or
fs
mov
jl
push
lods
xor
lods
push
fnstsw
pusha
stc
popf
into
mov
gs
outsb
sbb
sbb
sbb
jecxz
jno
stos
movsl
call
mov
sbb
subl
adc
gs
cmp
adc
movsl
or
rclb
and
int
jae
ficompl
stc
lods
gs
mov
sbb
ret
sbb
fwait
adcl
or
dec
mov
psrad
xor
cmp
pop
and
pop
push
cmp
xor
push
dec
sub
adc
leave
sbb
push
fildl
push
mov
scas
pushf
repnz
daa
pop
xor
add
add
cmpsl
and
mov
cmp
int3
dec
or
shlb
xor
cmp
call
xor
xchg
jns
shrb
jmp
jg
lahf
cmp
jnp
jge
lcall
out
in
jge
jmp
ret
cwtl
pusha
clc
inc
xor
inc
push
cmp
ret
out
and
cli
sbb
mov
ja
shl
fstl
add
push
mov
xor
fisubs
mov
pop
dec
or
cmp
ret
pop
sbb
ja
jmp
mov
jge
aad
mov
inc
stc
add
sar
cli
cmpsw
adc
push
jbe
fcomps
push
movsl
jnp
sub
cs
push
push
mov
addr16
dec
fldz
ljmp
cltd
adc
jmp
jecxz
sbb
adc
add
mov
jl
je
rcl
repnz
sbb
jecxz
es
shlb
test
out
xchg
and
ja
sub
leave
xchg
loope
dec
adc
jbe
daa
fstl
mov
mov
ret
ljmp
xchg
jp
stos
daa
rolb
mov
add
testb
scas
xor
pop
ficomps
aas
mov
xchg
lea
rorb
fs
jmp
nop
hlt
add
insb
sub
add
leave
mov
jb
dec
mov
dec
jmp
mov
jae
pop
xlat
shl
iret
and
mov
call
jne
xchg
mov
mov
aad
lods
rorb
sbb
xchg
dec
push
sub
and
xacquire
dec
dec
aaa
dec
cmpsb
jle
into
in
and
mov
push
lods
inc
scas
out
popa
push
cltd
test
cbtw
inc
insb
call
testb
andl
into
addb
shrb
imul
cmp
das
mov
js
data16
jmp
std
cltd
mov
movsl
cmp
sahf
inc
mov
mov
and
lcall
sahf
jl
dec
aad
inc
pop
xor
mov
xchg
mov
clc
xor
mov
dec
xchg
sti
cs
test
cmpb
fildl
pop
inc
out
jb
xor
cmpl
pop
jmp
in
jne
data16
mov
out
std
push
or
mov
mov
scas
sbb
pusha
pop
aam
rorl
mov
cmp
icebp
mov
push
aad
xor
xorl
pop
test
addr16
clc
shll
outsl
mov
popf
in
fsubrp
xor
aam
jnp
sub
adc
sub
xchg
jae
dec
or
aam
cs
sub
sub
sub
test
jns
mov
lret
mov
dec
in
addr16
js
sub
dec
and
std
out
jae
ffreep
call
addb
leave
xchg
or
rep
and
mov
cwtl
mov
jmp
sub
gs
push
sub
ljmp
cmpsl
enter
pop
pop
jmp
lds
cmpsb
out
xchg
jns
mov
sbb
insb
inc
dec
lret
incl
mov
push
add
xchg
mov
out
jno
push
int
mov
jno
popa
sub
cld
data16
sbb
mov
or
or
xchg
sbb
cmc
xchg
lods
mov
xor
xchg
xor
jne
ret
sbb
test
jp
inc
sub
mov
inc
imul
in
jns
add
out
movsl
imul
mov
add
push
and
jno
movsl
push
sub
push
or
or
cmpsl
or
sub
xor
cmp
js
push
or
or
jmp
jmp
add
or
testl
jno
dec
lds
fcoms
sbb
sub
lcall
jb
mov
xchg
incl
jmp
mov
xchg
mov
int
cmp
mov
adc
sahf
fimull
js
cmp
mov
cmpsb
imul
mov
enter
cwtl
ret
mov
and
insl
ret
jnp
or
push
push
cmp
mov
std
mov
test
jl
sti
sar
repz
dec
sub
iret
in
xchg
imul
aas
xchg
decl
jl
mov
add
leave
add
pop
in
sub
test
jo
gs
outsb
fwait
mov
fs
cmpl
scas
mov
jge
mov
fldt
push
jmp
std
sahf
int
xchg
cmp
dec
xchg
cs
test
aad
es
loop
ss
push
push
xchg
cmpsl
push
test
out
mov
xor
dec
inc
sbb
in
push
push
loop
sbb
sbb
sbbl
shrb
dec
les
lods
dec
gs
mov
and
cwtl
pop
lret
jb
xor
rcr
sub
xor
or
mov
sbbb
aam
inc
std
mov
fiaddl
lret
data16
sbb
out
push
adc
sarb
enter
push
add
xchg
popa
and
int
xor
cltd
insl
jmp
ljmp
jo
or
cli
pop
pushl
ret
or
aam
nop
push
scas
mov
cmc
loop
pop
sub
adc
mov
sbb
leave
jge
xor
lcall
out
and
out
jb
jbe
jp
test
outsb
sti
bound
sub
push
pusha
mov
rcll
inc
sbb
mov
clc
or
lcall
cmp
or
out
inc
adc
shr
jbe
jecxz
xchg
cmp
jno
lea
cli
sub
insl
out
pop
int3
jmp
xchg
inc
inc
movsl
sbb
negl
pushf
push
pop
jge
push
shlb
popf
cltd
jp
lea
ret
and
cltd
rclb
xor
dec
adc
fwait
adc
pop
sbb
cs
nop
and
mov
inc
movlps
lret
push
xchg
xor
ds
xchg
lods
cmp
add
imul
lock
cmp
mov
or
mov
push
cmpsl
push
or
mov
lods
cmpsb
add
jae
and
ljmp
cmp
bound
pusha
and
xchg
mov
inc
movsb
adc
mov
lcall
inc
push
mov
xchg
add
rcrb
cli
fcoms
dec
inc
fldenv
shrl
push
pop
ror
insl
pop
pop
bound
shlb
jg
xchg
rorb
or
popa
or
sub
call
jnp
and
jle
xchg
add
pop
adc
lods
inc
mov
call
cli
inc
pop
loope
xlat
ja
sbb
sub
fwait
jmp
cmp
lds
pop
fildl
cltd
bound
inc
sbb
push
jle,pn
pop
pusha
test
pop
in
mov
in
sahf
das
push
iret
xchg
pop
inc
dec
cwtl
lcall
jae
fldt
xchg
jbe
or
test
xchg
xchg
aam
loopw
call
repnz
lds
fiaddl
pop
push
into
and
push
mov
or
andb
and
gs
loop
shll
and
xorl
sti
mov
mov
cwtl
rclb
jmp
outsb
cmc
lock
pop
sbb
or
bnd
shl
sub
jg
test
xchg
dec
js
add
andl
and
je
mov
scas
mov
lret
mov
and
push
xor
xchg
fildll
adc
mov
inc
pop
xorb
fucomi
test
inc
sub
mov
xor
xor
daa
fisttpl
mov
add
add
test
movsl
push
aam
and
push
call
sbb
mov
enter
mov
fnstenv
mov
je
push
pop
das
fwait
insl
mov
fldt
jmp
push
fstpt
test
sbb
mov
cmp
push
mov
cmp
das
cli
dec
push
sbb
lea
xchg
inc
mov
out
int3
dec
sti
notl
int
sti
inc
inc
cmp
in
outsl
out
pop
mulb
idiv
jmp
scas
scas
inc
sbb
test
inc
inc
divb
or
pop
add
in
faddl
cmp
jle
mov
mov
not
cmc
mov
icebp
mov
sub
leave
lock
iret
pop
add
xchg
loope
pusha
mov
loopne
shl
inc
cltd
cmp
jmp
out
push
push
jns
pop
xlat
in
repnz
lods
loopne
inc
dec
popf
cmp
adc
bound
xchg
or
cmp
addl
push
pushf
cmp
lret
hlt
cmc
mov
cmp
in
out
add
fwait
sbb
repz
adc
adc
mov
pop
cmp
jge
mov
cld
ret
jmp
lods
ds
mov
movsb
push
mov
inc
fmuls
jnp
pop
mov
xor
xor
mov
dec
mov
lret
jmp
lret
pusha
lcall
mov
or
bound
subl
call
into
inc
dec
adc
or
data16
and
scas
lahf
daa
outsb
popa
push
lret
ret
jmp
ds
mov
ljmp
jge
lods
push
jb
cmc
lret
dec
sbb
imul
leave
jp
outsl
lahf
jmp
pop
sahf
dec
adc
cmp
add
cmp
flds
adc
or
lahf
sti
fldenv
jae
lods
fcmovne
leave
lahf
lret
arpl
xlat
sbb
sbb
aad
rcrl
mov
mov
ja
cmpsb
cmpb
mov
inc
pop
pushf
jb
lock
inc
add
cld
lds
leave
bound
jbe
mov
js
push
dec
sub
and
xchg
outsl
mov
and
jb
pop
jnp
movsl
dec
dec
jp
pushf
xor
loopne
popa
mov
xor
add
cs
cmpsl
xor
test
and
data16
into
xchg
push
mov
mov
das
iret
adc
mov
mov
sarl
push
fs
fisttpll
pop
fdivrl
lods
and
mov
xlat
popf
jle
loop
mov
stc
mov
ret
loope
sbb
stos
jnp
and
ja
vsubps
clc
pop
loopne
sub
insl
pop
gs
cmpsb
loop
js
xchg
push
adc
pop
mov
lea
mov
fidivrl
lods
sbbl
lret
dec
and
inc
hlt
repnz
fxch
rcl
pop
aad
xchg
mov
adc
cmc
mov
mov
push
fsubs
push
xor
pop
lods
or
js
adcl
shll
insl
mov
mov
xor
jl
mov
pop
rclb
or
inc
les
add
subl
mov
loop
js
lahf
sbb
xor
or
aad
repnz
repnz
shlb
outsl
ja
sub
aaa
je
fisubl
pop
les
and
cltd
mov
dec
xchg
ja
mulb
test
test
je
lret
mov
sub
loopne
and
pop
push
cmp
sbb
xor
dec
insl
and
not
cltd
out
call
jnp
ret
into
and
add
and
leave
jp
jb
imul
fucomp
add
mov
or
pop
repz
or
pop
jle
mull
mov
add
mov
jbe
loop
xchg
test
xchg
dec
mov
jo
test
mov
fnstcw
mov
cmp
mov
popa
popa
push
scas
adc
lcall
cs
loop
xchg
lret
add
cmp
cmpsb
inc
adc
ljmp
and
sub
imul
pop
icebp
lret
in
pop
enter
dec
movsb
push
ja
sub
push
daa
pop
dec
jae
dec
rcll
stc
jbe
lods
jg
pop
stos
imul
lret
popa
xor
fdivs
or
pop
cmp
aad
jo
mov
cmp
cmpsl
out
sub
pop
enter
lock
loopne
loop
xlat
std
push
pop
adc
mov
jae
fidivl
dec
pushf
inc
test
adc
inc
dec
push
add
push
loope
cmp
clc
bound
subb
pop
stos
mov
add
jo
sub
enter
lods
xor
or
or
std
jae
jae
push
mov
pop
or
cs
mov
enter
mov
xchg
push
pop
push
sarl
std
push
arpl
xchg
dec
aad
cwtl
adc
arpl
jae
adc
ret
push
je
dec
mov
or
xchg
mov
sbbb
xor
dec
sarl
cmpsb
mov
xchg
jecxz
jns
adc
push
pushf
lods
loope
pushf
cwtl
pushf
sti
push
push
pop
in
xchg
sub
bound
fadd
scas
cltd
cmp
subb
in
and
jmp
mov
nop
xor
jge
std
fiadds
add
adc
cmp
repz
lock
mov
idivb
lea
adc
repz
out
popf
cmp
sbb
adc
mov
add
leave
cmp
xor
lea
push
and
subb
outsl
test
sahf
mov
mov
sbb
loopne
push
out
and
dec
push
mov
or
fs
test
xor
popf
shrl
fists
sbb
add
into
adc
js
lahf
cmp
and
push
call
cmp
push
stos
add
cltd
lds
mov
les
add
js
decb
xchg
scas
jno
pop
dec
and
adc
int
add
cmpsb
je
add
ja
xorl
mov
adc
mov
inc
ret
mov
and
push
jle
pop
xchg
xchg
mov
mov
mov
rcrb
xor
popa
cmc
call
fdivp
dec
mov
mov
sbb
fnsave
or
fistpl
xchg
popf
add
shll
rolb
loopne
push
push
andb
dec
and
push
push
push
stos
xchg
xchg
mov
fistpll
and
add
pop
fidivrl
mov
cli
or
mov
xchg
test
fisubl
and
in
iret
mov
jbe
out
cld
fwait
mov
fmul
inc
xchg
sbb
jb
daa
mov
push
jbe
mov
mov
inc
mov
jge,pn
push
aas
popl
ds
push
icebp
imulb
mov
in
xor
mov
push
insl
cmp
subps
aad
mov
mov
out
ja
or
push
hlt
jo
sbb
ljmp
pushf
adc
fs
leave
or
mov
aad
jmp
and
mov
mov
dec
sub
mov
out
adc
and
cmp
mov
std
icebp
rcll
dec
int3
mov
cwtl
cwtl
inc
daa
lea
imull
aad
call
and
ja
xor
icebp
scas
mov
cmp
cmpsb
pusha
nop
mull
sbb
mov
mov
ds
iret
int
mov
mov
std
out
jg,pn
cmp
out
int
sbb
jmp
lock
sahf
lock
xor
jo
lret
mov
pop
dec
test
pop
xor
hlt
cwtl
sub
xchg
xchg
adc
cmp
stos
xor
cmp
xor
adc
lahf
push
lds
sbb
adc
bound
xor
and
in
fdivrl
inc
mov
dec
mov
fucomp
mov
inc
sbb
adc
rcrl
in
mov
mov
jp
cmp
add
ljmp
xchg
dec
mov
lods
inc
mov
repz
mov
repz
std
jb
sub
and
out
jbe
push
mov
jg
bound
in
adc
frstor
add
enter
shrb
pop
es
dec
cmp
dec
inc
xchg
insl
pop
sbb
dec
mov
nop
js
outsl
out
push
cmp
outsb
hlt
ljmp
loopne
jbe
xorb
sbb
aad
xchg
xchg
cmp
out
stc
push
adc
ret
mov
and
ljmp
aad
lcall
push
test
xchg
bound
jb,pt
mov
mov
rcrb
push
int
les
and
mov
imul
jle
sbb
pop
icebp
jno
add
mov
xor
lcall
loop
sub
in
cli
rorb
pop
sbb
test
nop
and
mov
mov
cmpb
test
add
pop
sbb
cmp
aas
pop
dec
inc
les
jae
ja
jl
arpl
jns
popa
xchg
clc
and
ret
pushf
insl
loop
jecxz
pop
or
daa
test
cli
push
xchg
xchg
stos
rolb
std
dec
in
and
pop
js
or
push
lods
mov
aaa
dec
data16
mov
dec
out
ja
roll
std
jbe
cs
pop
nop
cmp
cltd
js
cmpsl
pop
sbb
cltd
stos
dec
jne
add
xchg
adc
ret
in
jne
cmp
add
dec
mov
bound
jp
jle
xchg
sti
dec
test
divb
or
shll
pop
or
hlt
add
pop
outsl
leave
es
push
sbb
push
mov
sub
mov
shll
sbb
sub
sub
adc
aad
lods
bnd
lods
inc
or
cmp
push
loopne
xchg
pop
mov
or
cld
idivl
add
movsl
xchg
add
flds
xchg
sub
gs
mov
mov
js
mov
adc
pop
adc
mov
fs
sbb
pop
xchg
pop
jg
mov
cltd
stc
imul
testl
fcoms
sub
jmp
push
pop
mov
fwait
xor
push
icebp
sti
icebp
and
insl
inc
out
imul
add
jno
or
mov
dec
sbb
sub
lahf
into
or
popa
and
lahf
mov
aaa
aam
cmp
int3
ds
imul
xchg
mov
data16
mov
idivl
lods
sub
fldcw
lds
adc
cmpsl
icebp
fxch
test
popf
push
mov
dec
nop
outsl
ret
inc
pop
test
cmp
movsl
sub
adc
push
imul
in
popa
rol
bound
insb
dec
push
jge
xor
scas
jg
rcll
pop
cmp
jmp
and
pop
cwtl
cli
dec
cli
push
test
pop
ds
push
out
loopne
shrl
xchg
cmp
mov
es
lds
mov
dec
enter
push
inc
orb
insb
pop
adc
dec
pop
popf
mov
dec
jb
xor
ret
js
negl
cmp
mov
jmp
lea
push
adc
dec
sub
mov
mov
xor
ds
nop
mov
or
addl
jp
jmp
jae
inc
pop
xchg
cmp
cmc
inc
movb
inc
fsubl
mov
xor
and
aas
lds
or
stc
cltd
shrl
out
pop
or
push
aaa
outsl
les
mov
scas
sub
mov
and
inc
push
test
sub
test
inc
mov
jmp
push
cmp
mov
push
and
out
pop
pusha
add
rcrb
or
movsb
imul
aad
rclb
cmpsl
push
fldenv
sub
aad
out
dec
sbb
cld
in
fistps
ljmp
pop
insb
mov
add
adc
leave
loop
subl
xchg
orb
dec
sub
and
mov
push
or
add
rorb
lock
jns
jb
cli
sub
push
pop
sahf
in
jno
xor
mov
aam
jnp
leave
fildl
arpl
movsl
push
and
inc
bound
sti
orb
xchg
push
pop
pusha
and
add
jl
mov
xor
sbb
ret
scas
inc
mov
sarb
add
pop
mov
pop
pop
cmp
xor
push
daa
setb
fcoml
mov
aas
pop
push
adc
lret
iret
xor
and
mov
or
popf
push
or
mov
add
hlt
jle
loope
pavgw
ljmp
popa
mov
test
fisubrl
mov
test
cltd
and
xor
das
outsl
aad
dec
lods
cli
jae
xchg
int3
popf
out
xor
fldcw
enter
push
and
pop
add
sbb
adc
sbb
je
mov
sarb
stos
test
out
mov
es
xchg
out
fisubrl
mov
jb
and
cli
or
adc
push
scas
sub
lea
incb
je
rolb
inc
jl
mov
push
cs
xor
sbb
ds
jl
mov
add
mov
inc
mov
lods
std
aaa
pop
in
shl
mov
jle
push
push
loop
repnz
jge
mov
and
hlt
push
movsl
jg
xchg
mov
dec
je
repz
lret
fistps
jmp
pop
ret
pusha
inc
sub
mov
mul
jle
cmp
mov
xor
les
mov
scas
aad
movsb
lds
fiaddl
inc
cmp
rcrb
lea
lods
loopne
mov
test
outsl
mulb
std
xchg
pop
loope
inc
add
mov
mulb
cmpsb
cs
inc
sub
cmpsl
mov
mov
stos
cmp
adc
mov
push
ss
imul
sahf
call
es
call
stc
hlt
push
imul
mov
inc
inc
lds
xchg
push
stos
sbb
stos
mov
loopne
or
sub
xor
sbb
outsl
dec
je
and
enter
and
int
xchg
cmp
es
sbb
sbb
cmp
and
repz
jae
test
or
mov
dec
mov
ret
int3
and
mov
in
lods
sub
xor
mov
mov
daa
mov
mov
flds
lret
iret
lock
cltd
pop
mov
insl
sarb
hlt
cmp
icebp
xchg
ja
in
popa
dec
adc
ror
mov
sub
pusha
cld
setl
mov
int
dec
sbb
cli
mov
clc
fcmove
mov
dec
push
cwtl
mov
pusha
lock
push
lods
mov
imul
or
xchg
adc
pop
sbb
xchg
jae
jno
sbb
inc
push
test
mov
adc
cmp
dec
xor
or
mov
stos
mov
push
sahf
js
bound
dec
js
adc
incl
stc
inc
inc
push
add
xor
sub
fldl
clc
add
mov
arpl
cmc
add
out
std
aad
adc
sbb
inc
sbb
mov
jmp
mov
fisttps
jmp
outsb
jg
pop
and
repnz
lret
xor
lcall
lret
mov
ss
and
decb
repnz
xchg
xchg
jno
xchg
mov
push
jmp
out
jno
hlt
xchg
add
adc
cmp
cmp
scas
sub
adc
jo
fs
push
ficoms
cwtl
sti
lods
in
adcb
insb
sbb
popf
and
aam
scas
push
or
cltd
push
or
xchg
sbb
lods
add
dec
aas
iret
push
fwait
dec
sub
rcll
iret
or
mov
lret
mov
int
ret
jnp
out
or
lret
lcall
outsb
inc
jmp
mov
lock
lea
jb
adc
jp
mov
adc
xor
scas
mov
xor
out
mov
in
sub
pop
jae
mov
and
inc
sbb
scas
sbb
sub
push
fs
dec
push
repz
adc
mov
sarb
ja
ret
call
iret
jge
push
or
dec
sahf
movsl
paddq
dec
and
push
out
inc
mov
imul
cltd
and
sub
ljmp
push
adc
rolb
loopne
cmp
inc
push
mulb
cmp
sbb
lcall
mov
or
sub
fwait
sbb
mov
jno
lcall
in
xor
mov
divl
pusha
adc
mov
mov
iret
cltd
in
pop
imul
xchg
insl
hlt
repz
mov
hlt
imul
mov
xchg
and
and
jns
mov
lahf
mov
enter
jb
aam
jae
sbb
test
mov
mov
shlb
pop
sbb
mov
mov
test
jb
mov
jecxz
pop
call
mov
ss
mov
dec
mov
fldcw
push
mov
push
in
adc
int
cs
cmpsb
or
sub
dec
add
cmpsb
arpl
dec
es
sbb
sub
mov
sbb
mov
test
adc
jnp
test
cwtl
fisttps
mov
jne
inc
lds
imul
aad
int3
fsubrs
mov
adc
fldl
push
sti
loope
dec
sti
mov
mov
pusha
dec
in
les
mov
jmp
pop
lret
dec
adc
xchg
jp
lock
imul
das
test
stos
mov
inc
or
xchg
mov
fidivrl
dec
mov
pop
mov
xor
divl
add
jl
out
into
fldenv
stos
push
sub
pop
add
fwait
out
mov
jl
mov
rclb
cmp
mov
jge
aaa
lcall
mov
mov
ret
jo
mov
mov
sub
sbb
scas
and
inc
mov
shrb
mov
pop
test
xchg
mov
xor
jge
ret
ficoml
mov
addl
and
xchg
push
jl
jmp
add
aam
pop
sub
jns
sbb
scas
pop
push
mov
mul
adc
pop
test
das
das
in
push
mov
sbb
pusha
inc
adc
mov
test
out
ficompl
pop
or
push
ja
test
das
fisttps
repz
adc
lea
mov
repz
iret
pop
div
or
lcall
repz
cmp
xor
pop
int
xchg
push
ja
call
lods
pop
ficoms
aam
push
push
mov
imul
push
scas
sub
jle
mov
push
jle
inc
xchg
xchg
mov
je
sbb
imul
sbb
gs
jo
repnz
mov
in
lods
fildl
inc
shll
bound
xchg
dec
push
lea
and
or
les
cmp
fadd
xbegin
add
shl
pop
test
cmc
cmp
dec
mov
into
xchg
ret
pushf
leave
mov
pop
cmpl
mov
dec
in
sub
movsl
mov
mov
arpl
outsl
push
pop
mov
into
jae
nop
lock
icebp
leave
aad
fstl
sub
or
outsl
pop
cmp
mov
ja
push
dec
out
mov
add
mov
test
dec
adc
xchg
fildll
push
pop
bound
mov
xor
jl
jae
negb
shrl
pop
pop
cltd
lock
inc
xchg
mov
pusha
fs
rol
inc
ja
insb
lods
and
test
add
stc
int3
into
test
aam
add
xlat
je
loopne
aas
out
push
loopne
dec
scas
dec
push
or
maxps
xchg
push
test
insl
cmp
mov
xlat
rorl
mov
pop
cmpsl
jecxz
std
jecxz
sahf
fdivrp
mov
orl
pop
mov
sahf
icebp
lds
filds
inc
jns
sub
adc
cmp
xchg
stos
or
loope
negb
mov
push
arpl
sbb
xor
ss
into
ljmp
sbb
rolb
sub
mov
pusha
in
jno
xchg
xlat
les
and
sbb
out
mov
adc
dec
add
cmp
jno
jmp
jmp
fistpl
mov
sbb
in
ljmp
repnz
and
repnz
loop
inc
ror
xchg
outsb
push
gs
fiaddl
imul
lcall
sbb
cmp
lock
popf
in
mov
mov
fs
dec
inc
shrl
push
dec
outsb
shrl
push
push
pop
fsubs
mov
shrl
cld
pop
loop
xchg
out
jne
fcomi
jnp
or
dec
dec
cmp
jae
test
repnz
loopne
mov
push
cld
inc
xchg
mov
scas
mov
mov
out
push
mov
clc
cli
mov
or
out
xchg
mov
sbb
jecxz
cmpsl
mov
xchg
test
jb
lcall
sbb
repnz
mov
pop
sbb
and
push
or
arpl
iret
cmp
jbe
adc
jnp
push
xchg
test
jno
xor
test
inc
scas
cmpl
xor
mov
aaa
pop
or
adc
push
loope
pop
push
xchg
inc
test
pop
inc
mov
fsubl
fwait
xor
test
cmp
and
xlat
adc
xor
push
aam
subb
addb
out
scas
xor
mov
xchg
xor
mov
aaa
sbb
lods
in
fists
leave
lods
push
stc
jecxz
inc
call
jg,pt
mov
loope
sbb
dec
pop
sbb
popa
shll
adc
sarl
testb
xlat
out
xchg
xor
stc
outsb
or
jmp
sahf
rcll
loopne
mov
mov
insl
adc
cmp
cmp
sbb
mov
and
loopne
xor
xor
or
fsubl
xchg
sbb
test
push
add
push
pushl
mov
int3
in
loope
sub
insb
push
push
icebp
or
and
movsb
cmpsl
pop
xor
call
adc
aam
add
or
sub
push
inc
aas
arpl
adc
dec
sbb
cmp
push
xor
inc
pop
pop
cmp
sahf
call
or
out
into
cli
arpl
cmp
nop
jg
lds
or
mov
add
pop
pop
dec
dec
rcll
mov
mov
dec
or
fadds
test
inc
sub
mov
or
das
ds
int
sahf
lock
cmp
inc
or
aas
test
mov
ljmp
outsb
push
cmp
je
cmc
xchg
jbe
xor
xor
jecxz
inc
je
fnsave
lcall
repnz
adc
mov
movsl
and
jge
cmp
mov
iret
mov
jp
adc
and
pop
dec
xchg
pop
leave
movsb
sub
loopne
jmp
imul
mov
daa
lahf
outsl
sub
cmp
and
data16
mulb
mov
xlat
arpl
stc
sub
mov
in
push
insb
adc
out
mov
fwait
cmpsb
mov
xchg
lea
sub
and
dec
pop
xor
mov
xor
clc
push
cmpsl
outsl
movsl
jns
pop
popf
insl
sbb
pop
inc
rclb
mov
xor
mov
pop
inc
incb
stos
mov
pusha
xchg
pop
jbe
movl
lcall
outsb
sbb
jmp
add
add
dec
fwait
mov
mov
dec
mov
adc
mov
lock
in
idivl
add
cmp
aad
int3
sub
push
ljmp
dec
adc
or
cmc
mov
xlat
inc
cmp
inc
adc
movsl
rolb
std
test
and
lods
adc
or
popf
fisubs
lret
fstpl
clc
xlat
pop
std
fwait
enter
mov
pop
or
lods
sti
mov
lds
stos
stc
pop
push
int
add
mov
xor
in
insb
mov
mov
shll
mov
mov
stos
or
mov
adc
mov
mov
fmuls
adc
pusha
jbe
flds
adc
xchg
jo
lods
pop
in
inc
mov
lahf
pop
xor
cltd
push
sub
cli
adc
daa
xchg
arpl
nop
lcall
fcompl
out
mov
or
test
inc
adc
fs
and
into
mov
xchg
scas
pusha
push
adc
das
and
xchg
popf
lahf
pop
xchg
pop
std
fdivl
sbb
mov
insl
jmp
mov
cwtl
ret
flds
fs
cmpsb
ss
test
push
fbld
and
dec
shlb
dec
mov
in
and
sbb
jl
mov
mov
das
lods
sbbb
lcall
das
and
jge
mov
dec
or
dec
dec
popa
std
cmc
push
adcb
std
jo
adc
fisubrl
stos
fsubrl
and
rorl
and
in
mov
mov
sub
mov
jo
clc
add
arpl
popa
sahf
int
dec
xchg
lods
in
jb
les
mov
push
push
int
xchg
dec
testb
fmuls
movsb
sti
sub
dec
sbb
mov
daa
xor
pop
es
out
popa
jg
or
mov
rclb
pusha
xchg
mov
out
push
cmp
push
jns
dec
outsb
loop
stc
push
jbe
fcomps
cmpsb
iret
adc
stos
push
push
pop
scas
jo
pop
mov
repnz
lret
mov
clc
ss
lods
or
push
push
int
stos
push
push
mov
cmp
loopne
rcll
xor
jno
cmpsb
test
jl
xchg
into
mov
in
into
pop
in
fsubrp
push
es
aaa
lret
rep
lds
pop
xchg
jno
mov
in
adc
sub
pinsrw
sub
lret
pop
stc
sti
inc
or
jbe
sub
popa
xchg
or
push
pushf
ret
sbb
adc
dec
daa
popf
mov
test
jmp
rorl
repnz
test
sbb
leave
add
fsubl
pop
cmp
xchg
loope
es
gs
mov
mov
insl
ds
sub
testl
repz
vpaddq
fwait
sub
inc
cmp
sahf
push
lret
cmp
fwait
sbb
and
popa
push
out
sbb
jmp
or
mov
mov
ret
sti
loope
adc
sbb
insl
fsubrs
je
jbe
cmp
outsl
jl
fdivr
push
and
shrl
jne
jmp
jb
mov
push
jle
outsl
pop
addb
xchg
outsl
jne
mov
lcall
leave
mov
sbb
sbb
fldenv
mov
mov
add
mov
pop
cmp
loope
push
pop
xchg
jae
add
mov
mov
data16
iret
or
mov
and
in
ss
pop
js
and
jl
ss
xor
divb
mov
ljmp
fidivrl
push
movsb
test
xor
cld
xor
test
or
add
or
lcall
arpl
add
mov
push
mov
pop
mov
fnstenv
xchg
aas
and
push
pop
or
push
shlb
fsubrs
mov
dec
inc
sbb
imul
sub
sub
and
add
xor
pop
or
cmp
sbb
jp
idivb
sub
and
mov
fucomp
mov
lcall
mov
mov
lea
dec
popf
aas
incl
aas
test
mov
push
cmp
popf
in
fnsave
mov
inc
mov
fistpll
in
pop
sub
fldcw
inc
sub
mov
mov
jnp
addr16
jae
cmp
cld
lret
cli
jle
stc
sub
adc
ljmp
mov
cli
imul
es
fmull
mov
hlt
mov
lahf
inc
push
lods
add
mov
cmp
imul
out
enter
nop
and
jne
jne
push
mov
or
lret
adc
xlat
stc
roll
int
es
rorb
fs
std
das
int3
mov
mov
cwtl
xchg
fdivr
mov
inc
stos
jno
cmp
cmp
lret
pop
cli
dec
loope
imul
sub
push
adc
adc
js
dec
arpl
sbb
add
jo
imull
mov
movsb
fmul
jg
fbstp
pop
push
loope
stos
ds
dec
test
cmpb
scas
dec
push
cltd
jnp
pop
scas
pop
cmpsl
push
out
mov
xor
aaa
cli
jmp
ljmp
push
mov
fistl
xchg
xor
mov
in
and
nop
lock
sbb
or
inc
call
xor
push
dec
dec
ja
mov
lret
fidivrs
fcoms
mov
xor
repnz
arpl
aaa
inc
xchg
push
sub
jg
xor
bound
mov
aam
mov
arpl
mov
add
cmp
scas
ret
jl
mov
xor
jo
mov
push
push
aad
sbb
and
pop
call
out
mov
stc
mov
imulb
cwtl
add
jmp
xor
cmp
or
pop
leave
stc
push
and
jmp
into
xchg
or
in
adc
xor
xchg
inc
aaa
daa
push
lods
cwtl
dec
out
mov
adc
cli
adc
sub
push
popa
xchg
xchg
aaa
nop
xchg
push
fstpt
xchg
out
popa
fstp
test
xor
jp
iret
jle
sbb
loopew
xchg
add
sub
pop
rdpmc
xlat
cmpsb
sbb
sbb
mov
cmp
push
popf
into
lahf
pusha
aam
fwait
xlat
sbb
dec
push
dec
lock
pop
dec
cmp
cmp
push
xchg
bound
ljmp
dec
mov
mov
pop
pop
repz
test
leave
lock
pop
dec
mov
cmp
adc
push
lahf
ret
mov
mov
sub
sahf
jbe
cmp
cs
aam
orl
fcmovnb
repz
aas
push
aaa
pop
in
enter
pop
dec
test
cmp
sbb
jge
out
gs
pop
fidivs
dec
stc
xor
jg
fdivrl
jmp
sahf
push
iret
idiv
lea
iret
sub
pop
in
cs
inc
dec
fisubs
std
fs
addb
jns
cmpsb
mov
add
jns
mov
inc
dec
sub
cltd
jo
lea
mov
mov
loop
jo
popf
mov
adc
lods
sbb
add
shlb
lods
ds
push
addl
fwait
stc
xchg
inc
jg
fnstenv
adc
or
mov
test
and
lahf
mov
mov
adc
or
add
scas
or
push
or
or
mov
mov
aam
fnsave
xchg
or
add
or
hlt
inc
rcr
mov
fs
in
cmpsb
mov
inc
sub
push
lcall
ficomps
adc
das
inc
lcall
aad
ja
sbb
stc
xor
andl
add
push
push
test
in
pop
or
sbb
mov
insb
aam
std
mov
incl
in
cli
mov
es
mov
and
and
xor
add
jl
clc
sub
mov
push
push
push
dec
push
dec
mov
sbb
es
xchg
mov
frstor
ds
push
insb
xor
popa
movsl
js
adc
imul
mov
xchg
cltd
inc
dec
in
arpl
xchg
mov
mov
push
fadds
mov
enter
jne
or
sbb
nop
rorl
inc
inc
adc
cmpsl
sbb
or
sub
push
pop
pop
xlat
sbb
and
lods
push
mov
sbbl
add
mov
sub
jns
mov
push
pop
js
xchg
in
stos
pop
pop
cli
jle
xchg
je
or
push
xchg
fsub
mov
popf
jne
xchg
mov
or
sub
arpl
ret
push
orl
sbb
fidivrl
rdmsr
dec
dec
adc
in
jns
push
dec
pop
lds
stos
int3
inc
aad
enter
pop
inc
rclb
popf
mov
iret
mov
into
aas
mov
push
cld
les
aam
inc
sub
xor
xor
jbe
mov
fsubrs
stos
jmp
repz
pop
ret
dec
mov
fiaddl
cs
push
movsl
jge
pop
into
mov
or
es
icebp
fistps
add
mov
mov
mov
notb
pop
outsl
je
les
loopne
mov
sbbl
scas
cmpsl
lahf
std
dec
dec
out
dec
call
pop
lods
push
mul
push
dec
sub
aaa
or
push
pop
jecxz
mov
je
int3
cli
push
fwait
jnp
and
xchg
pop
push
add
mov
pusha
sub
leave
sub
fistpl
in
je
in
out
mov
adc
jne
enter
fs
cld
ret
jp
push
xorb
mov
mov
pop
out
sub
add
mov
xchg
mov
xor
mov
cmp
out
pop
jbe
fnstenv
cmp
ljmp
push
enter
pop
sbb
or
pop
mov
loop
insb
cmp
loop
pop
adc
mov
loope
cmc
pop
cwtl
push
in
sbb
xor
pop
out
ja
dec
ret
or
cmp
inc
stos
pop
out
inc
pop
mov
jne
dec
daa
int
iret
out
xor
stos
mov
test
mov
adc
popf
idivl
jmp
pop
xchg
fs
sbb
mov
mov
jecxz
cltd
stos
enter
jae
fwait
mov
shrl
insb
addr16
ret
lea
jae
mov
ret
xor
and
mov
clc
jecxz
sub
sbb
ljmp
xchg
sahf
aas
add
mov
mov
pop
fbld
mov
fs
loop
ss
jl
xor
scas
decl
outsb
ret
sub
mov
mov
scas
repz
test
cmp
xor
add
mov
fcoml
mov
inc
mov
andl
cmp
cmp
dec
adcb
out
in
scas
sarb
daa
sub
pop
jl
js
std
fdivrl
scas
bound
cs
jo
sbb
mov
es
aas
mov
loopne
mov
mov
lret
dec
out
sbb
push
add
ds
inc
movsl
cmp
push
gs
data16
and
mov
push
sub
roll
mov
outsl
push
dec
fistpll
mov
dec
out
fwait
mov
out
imul
in
jbe
iret
iret
add
xchg
xchg
cs
out
mov
mov
mov
mov
aaa
jmp
filds
sahf
xchg
stos
faddl
dec
mov
xchg
and
fsubrs
lcall
push
xor
dec
lea
sbb
mov
jmp
pop
js
pop
xchg
sbb
lret
popl
mov
lret
mov
inc
out
inc
in
jnp
ror
add
lods
sbb
cwtl
stos
mov
outsl
xor
cmpsb
sarl
jae
fcoml
mov
lret
sbb
push
sbb
push
push
mov
rcrl
or
inc
pop
pop
mov
dec
sbb
ret
adc
jbe
fstps
jo
push
pop
test
leave
jne
ljmp
mov
jg
shrl
adc
mov
fwait
xchg
popf
dec
test
cmpb
cmp
inc
mov
jmp
nop
imul
mov
test
push
push
stos
cmpsl
cli
mov
in
pop
aad
ljmp
ror
test
shrl
mov
outsb
leave
jg
addr16
das
pop
xor
lods
mov
aaa
lret
aam
outsb
cmp
std
aad
outsb
in
add
pusha
add
mov
push
push
loop
add
sbb
loope
pop
icebp
jmp
mov
dec
jb
dec
xchg
sbbl
aad
scas
xchg
pop
xchg
dec
lea
call
clc
into
xor
insb
cwtl
mov
mov
pop
dec
dec
inc
call
fisttps
push
push
out
mov
dec
and
lods
stc
and
mov
add
inc
cwtl
loop
fnstenv
mov
daa
add
inc
or
jl
mov
and
inc
adc
fucom
out
sbbb
enter
cmp
mov
jno
repnz
clc
and
fistpl
out
cmp
imul
fisubrl
fcmovu
fidivl
frstor
scas
inc
cmc
lret
hlt
xchg
aas
data16
enter
addb
xchg
inc
jmp
lods
sub
aad
cmp
pop
pop
stos
mov
push
and
insl
int3
ret
and
xlat
insb
fildl
loop
pop
std
dec
mov
xchg
push
orl
addr16
sbb
xor
inc
mov
dec
sbb
in
inc
adc
jne
jb
jg
loop
fcomps
fists
sub
push
pop
mov
icebp
int3
or
mov
jge
push
pop
lods
fsts
stos
dec
daa
rcll
adc
mov
arpl
xchg
das
dec
pop
imul
cmp
lock
sbb
fidivl
cmp
fdivs
xorb
adc
aam
sbb
addb
imul
je
jmp
pop
rcrl
mov
call
out
aaa
call
and
pop
lcall
popa
dec
xchg
xchg
mov
mov
pusha
and
dec
popa
loope
out
sbbb
xchg
fadd
xchg
cmc
jle
scas
stos
mov
cmpsl
or
ss
nop
dec
sbb
test
add
jb
repz
push
out
push
pop
add
and
cmpsb
mov
les
adc
out
jp
idivb
popf
cmp
mov
cmp
lods
jp
jge
or
jl
add
dec
adc
mov
jg
sahf
fnsave
or
jecxz
lock
addb
xor
loope
inc
lea
cld
stos
mov
int3
ret
cld
inc
js
and
cmp
ss
or
xor
push
ljmp
pop
cs
and
mov
dec
in
movsl
cmpsl
sub
inc
xchg
movsl
rcrl
and
add
data16
cld
cmp
push
cmp
lods
sbb
mov
inc
jp
pushl
fistpll
mov
aam
add
or
pop
pop
loop
cmp
insb
addl
mov
xor
adc
rcrl
pop
mov
insb
jbe
xor
sti
je
aad
pop
inc
inc
lahf
rcl
sub
mov
adc
cmpsl
ja
cmp
movsl
xchg
mov
pusha
in
sub
fwait
inc
inc
insb
das
add
jecxz
push
sbb
jmp
shlb
inc
adc
cwtl
mov
push
or
out
cmp
mov
daa
dec
sbb
test
inc
cmp
dec
mov
imul
inc
sub
ss
js
jp
cmp
cwtl
movsl
pusha
jle
inc
or
sub
mov
push
loope
ret
and
aam
push
pop
loop
mov
xlat
subb
sbb
ret
cmpsb
jl
mov
cmp
out
sub
arpl
push
fs
lock
xor
dec
xchg
nop
in
xchg
mov
adc
insl
lds
push
sar
repz
into
in
sbb
fdivrl
fidivs
xchg
xchg
jg
mov
mov
mov
sub
test
mov
dec
inc
lret
inc
loopne
lock
jmp
popa
dec
call
iret
mov
xchg
sub
into
pusha
add
lret
push
inc
sub
fimuls
sub
out
mov
lahf
jnp
jo
loope
jp
dec
and
idivb
pop
stc
sub
and
xor
jge
scas
xchg
fs
mov
dec
sbb
movsb
dec
jle
shl
movl
or
faddp
lds
addr16
jnp
cmpsb
lock
pop
pop
lahf
push
xor
test
mov
fnsave
inc
ja
adc
jp
and
mov
cmp
inc
inc
mov
pop
outsl
push
add
jmp
mov
jl
xor
xlat
mul
stos
cmp
or
mov
xor
jne
xor
push
fs
jmp
inc
ljmp
dec
sbb
adc
inc
dec
out
pop
scas
test
push
adc
std
jle
push
fs
mov
sti
xchg
dec
js
lret
mov
clc
addr16
cmpsb
cwtl
in
pop
pushl
movsb
sbb
iret
lcall
mov
xor
add
sbb
jl
add
push
clc
cmp
sahf
inc
jle
jmp
cmp
iret
pop
mov
cmpsl
push
xor
and
popl
mov
sub
cwtl
mov
mov
jg
adc
pop
or
mov
mov
sub
hlt
fs
out
pop
xchg
inc
mov
imul
add
cmp
cmp
sbb
les
xorl
out
cmpsl
out
das
cld
sbb
std
sub
jbe
arpl
ljmp
xchg
jl
rclb
ret
push
andb
es
xchg
mov
push
jns
leave
mov
dec
mov
mov
and
xchg
push
call
ja
or
jae
dec
sub
lea
test
pop
rcrb
add
filds
roll
pop
mov
aad
and
cmpsl
add
dec
pop
mov
push
mov
loope
jge
push
sub
je
xchg
cmp
cltd
je
sbb
es
lahf
or
inc
xchg
adc
push
and
outsb
testb
push
jmp
and
lods
inc
push
idivl
or
lahf
orl
leave
mov
push
and
jb
fadds
xchg
sbb
push
push
dec
std
sub
sbb
pop
cmpsl
pop
orl
stos
enter
xchg
xorb
fxch
jns
std
outsl
scas
or
into
jns
and
sbb
lods
mov
inc
scas
inc
lock
xchg
mov
fs
pop
bound
in
sahf
subb
mov
mov
lods
pusha
mov
fstp
cmp
into
lods
aaa
push
xor
jg
sbb
movsb
ror
push
push
dec
mov
cmp
and
adc
lret
not
xor
test
push
sbb
mov
pop
jo
negb
bound
fidivrl
or
pop
jae
movsb
test
fdivrs
aam
push
das
pop
pop
cmpsl
jl
ficomps
stc
jne
sbb
mov
dec
xchg
push
jmp
inc
add
pop
jge
jne
nop
ljmp
rorb
xchg
push
mov
pop
jae
mov
sbb
ss
inc
or
jmp
nop
inc
xor
es
xor
inc
data16
adc
and
mov
jo
jecxz
int
popa
or
jmp
mov
sub
call
adc
mov
movsb
cmc
xchg
mov
call
cs
imul
stos
cmp
ror
xor
add
jp
or
andl
jbe
or
jp
xchg
sbb
in
push
xor
xchg
adc
lea
notb
mov
movsb
xor
adc
xchg
decl
test
mov
mov
iret
fs
fmuls
jne
nop
mov
gs
ljmp
in
hlt
adc
cli
and
int
cmp
aad
call
inc
imull
scas
sbb
jbe
jnp
ss
adc
xchg
or
arpl
mov
push
aaa
dec
mov
xor
int3
mov
inc
pusha
scas
pushf
or
mov
jb
pushl
loopne
mov
push
cli
icebp
ret
jne
lret
stos
test
mov
add
outsb
ds
push
jl
ss
in
xchg
mov
inc
xor
sbb
in
pushf
cmp
test
xor
xchg
pop
ss
rorb
rcr
mov
divl
addr16
pop
movsl
push
pop
mov
jns
dec
xlat
scas
cmp
icebp
or
je
or
aam
jg
push
push
xchg
sbb
lods
mov
push
mov
mov
adc
xor
jbe
ret
insb
mov
pushf
push
cmp
push
fidivs
sub
test
xchg
mov
push
cmp
pop
loope
lcall
aaa
fdivr
pop
lahf
add
jmp
mov
call
mov
pop
andb
push
ret
sub
xor
popl
idivl
lea
inc
xlat
xchg
cltd
push
gs
xlat
out
bound
pop
je
xor
jno
icebp
cltd
mov
jnp
mov
inc
mov
add
mov
cmp
or
adc
pop
outsl
jnp
sub
jne
lods
loopne
or
fiadds
xor
ret
out
repnz
ss
aad
iret
cmp
adc
xor
mov
pop
clc
and
pop
aam
clc
jl
mov
xor
out
inc
adcl
or
test
sbb
imul
in
sbb
pop
mov
mov
lods
xor
inc
pop
pop
js
sub
stc
xchg
jno
xor
xchg
push
cmp
mov
out
push
xchg
rcll
push
pop
test
sub
repz
into
insb
lcall
push
ss
xor
sahf
mov
dec
je
lea
pop
push
daa
xchg
jns
jnp
mov
sub
mov
adc
fadd
xchg
dec
ficoms
mov
or
shll
adc
cmp
pop
mov
jle
push
je
shrb
and
in
or
pop
je
jnp
or
ss
xor
movsb
jg
sahf
pusha
pop
jge
xchg
aas
mov
xor
cmp
ret
lea
sbb
push
dec
cmp
fsubr
xor
shrl
lret
mov
ret
sbb
push
inc
jp
sbb
sbb
xchg
lds
jl
out
fmuls
mov
add
mov
ret
jne
adc
movb
xchg
push
or
mov
rorl
sbb
mov
fucomp
in
scas
popf
pop
mov
sbb
scas
dec
xor
repnz
sbb
shlb
jne
pop
out
ljmp
ret
cmp
push
adc
dec
xchg
cli
mov
in
sbb
add
jo
loopne
sti
cmpsl
fistl
jne
add
pop
mov
xor
call
mov
ljmp
insl
mov
jl
lds
daa
jb
testl
cli
dec
jne
scas
scas
jl
cmp
cmpsl
adc
shr
pop
mov
movsl
pop
loope
mov
je
add
push
addr16
lret
mov
xchg
int3
test
pop
pop
mov
ss
push
idivb
out
cwtl
insl
fldl
sarb
loope
lock
repnz
push
mov
imul
cmc
out
stos
rolb
sbb
imul
sti
fstpt
xor
and
lret
jge
scas
fistpl
adc
push
icebp
mov
stos
push
xchg
sub
movb
dec
out
scas
pop
test
sbbb
popa
ja
xchg
aam
js
or
jmp
dec
divb
push
dec
jecxz
rclb
mov
imul
adcl
sbb
xchg
mov
sub
pop
xchg
xchg
ja
xchg
das
cmp
jnp
sbb
sub
mov
mov
mov
mov
mull
sbb
add
mov
fcomps
lea
lret
or
mov
aas
stos
mov
addr16
add
pop
sbb
test
scas
imul
jp
movsl
add
in
setl
mov
xor
leave
push
mov
xor
jno
jle
rcl
cwtd
repnz
cmp
int
lods
xor
sub
jp
sub
sbb
push
in
dec
imul
js
out
cmp
test
xchg
cld
sub
xchg
inc
jo
mov
jnp
pop
cmpsl
cmp
out
push
mov
and
and
dec
mov
sbb
inc
xchg
push
jmp
fbstp
mov
pop
jle
cmp
out
sbb
lods
jg
or
jo
xor
jns
mov
imul
xor
mov
lock
jno
and
add
inc
je
xor
dec
inc
pop
cmp
add
aaa
stos
mov
cmpsl
inc
sub
pusha
movsb
in
in
pusha
pusha
arpl
fs
cmp
jl
mov
jns
mov
wbinvd
loope
sub
stc
inc
fdivl
xchg
add
mov
or
mov
jnp
xchg
test
pop
push
std
xchg
in
xchg
sarl
test
iret
jae
mov
clc
jns
xchg
cmp
mov
in
jns
sub
in
pop
xchg
sbb
repz
sub
inc
or
mov
lods
dec
cmp
xor
call
and
cmp
and
mov
mov
je
clc
movsl
or
mov
lock
inc
btr
lea
ficomps
or
pusha
mov
fistpl
popf
or
test
fwait
mov
mov
ret
push
push
outsb
orb
inc
mov
pop
jae
push
jne
cmpl
jae
test
adc
and
into
nop
lret
and
nop
ljmp
inc
xor
bound
mov
jecxz
and
repz
push
cltd
subl
xor
xchg
adc
mov
cli
test
push
pop
cmp
incl
das
or
mov
dec
loopne
test
cmpsl
js
movsl
les
andb
dec
mov
pop
inc
fildl
xchg
mov
icebp
pop
mov
pop
jmp
insb
lea
add
lds
xor
fcoml
xchg
mov
push
mov
mov
inc
pop
shr
jb
sbb
imul
pop
dec
adc
insl
ds
cli
hlt
int
out
jmp
loope
adc
cmp
jmp
adc
jae
mov
xchg
sub
sbb
push
fxch
fsubl
int
sbb
inc
addr16
mov
pushf
test
in
jne
cwtl
sbb
pop
lea
jecxz
pusha
loopne
mov
aaa
and
push
mov
lret
out
rcr
ret
cld
mov
push
cmp
adc
jecxz
in
pop
lods
fwait
cmp
pusha
outsl
ror
leave
push
clc
and
xor
ficoms
in
or
pusha
xchg
sti
pop
adc
sub
mov
test
mov
and
mov
mov
jbe
inc
inc
mov
add
push
jae
cld
adc
mov
mov
dec
mov
mov
fisttpl
add
and
push
out
aad
sahf
inc
or
push
ja
jle
aam
pop
cld
push
orl
adc
xor
fmuls
fistpl
and
pop
mov
int
push
imul
stos
lods
xchg
call
adc
test
insb
jle
loope
mov
ret
jg
shll
loopne
jbe
clc
out
fwait
xchg
jo
cmpsl
pop
pusha
xor
fsubs
xchg
lods
hlt
cltd
sti
das
push
or
pusha
push
jle
std
cmp
pop
sbb
jle
ss
dec
lods
pushf
jmp
ret
cmp
add
sahf
push
xor
add
rorb
xchg
test
leave
sub
faddl
xchg
mov
cmp
lret
push
mov
fiadds
pop
dec
mov
add
out
std
inc
jno
pop
stc
test
xor
and
lods
ja
push
push
or
insb
imul
mov
out
dec
jno
and
shll
inc
sub
movsl
fs
insl
int3
push
xlat
nop
pushf
fsubrs
xchg
adcb
outsl
push
inc
inc
inc
out
mov
cs
test
lahf
pop
out
stos
dec
aas
test
in
cwtl
add
leave
bound
jmp
jnp
fcoms
fdivs
pop
aas
sbb
outsl
push
hlt
xchg
sub
addr16
xor
jmp
pop
push
xchg
jp
pushf
dec
sahf
jb
clc
or
inc
sbbb
adc
pop
mov
or
xor
adc
repnz
out
fwait
arpl
andl
out
ss
por
out
and
xchg
sub
movsl
jb
push
lahf
lea
das
pop
cld
aaa
div
push
cli
imul
rcrl
dec
push
rcll
pop
cmovge
adc
inc
or
jnp
or
enter
imul
cmc
mov
filds
mov
sub
iret
inc
cmp
jb
adc
xor
and
inc
pop
int3
add
pop
adc
inc
xor
aad
andl
stos
inc
push
les
pop
nop
mov
xor
fnsave
les
cmpl
lret
jecxz
push
jae
pop
out
adc
jne
jne
jg
mov
popf
push
mov
outsb
pop
repz
icebp
or
pop
adc
aad
verr
inc
and
lcall
pop
cmp
xchg
cs
or
xor
mov
out
inc
nop
sbb
lcall
incl
rcll
imul
sub
out
cmp
dec
js
adc
int
sbbb
rcll
mov
in
pushf
adc
lock
rorb
xor
jb
adc
out
aaa
xchg
mov
xchg
xlat
test
mulb
mov
xchg
and
cmp
push
dec
sbb
dec
xorb
ss
lcall
in
or
notb
lret
or
mov
sbb
cmpsl
or
je
aaa
jb
sahf
xchg
add
data16
pop
incl
mov
xchg
fiaddl
inc
bound
cmp
aam
adc
or
inc
cmp
jnp
adc
movsb
sub
xor
pop
mov
xor
aas
in
cmp
daa
xchg
add
pop
mov
push
sub
je
mulb
std
adc
in
pop
das
and
fwait
dec
xchg
jecxz
jecxz
jno
dec
mov
pop
add
ret
adc
inc
ret
in
mov
inc
fs
cltd
jns
add
das
ret
sbb
out
adc
pop
fistpll
mov
push
xchg
push
cld
sbb
adc
adc
xlat
jl
pushf
fdivr
shll
lahf
rorb
jp
test
es
dec
push
pop
data16
push
into
dec
push
mov
mov
xchg
xchg
mov
dec
jg
mov
xchg
nop
sbb
das
imul
mov
and
pop
rclb
test
movsb
xchg
ficoms
out
push
pop
xlat
jp
pop
movsl
shll
sbb
cmc
stos
sub
repz
leave
cmp
push
mov
scas
mov
test
movsb
psubd
lret
lret
sub
inc
mov
add
clc
xchg
sti
int
das
bound
imul
das
insl
mov
repnz
mov
outsb
pop
enter
adc
popf
push
stos
push
mov
mul
loop
cmpsb
sbb
scas
xchg
fists
imul
in
push
pop
popf
sarl
xor
push
xor
jae
fistps
mov
dec
imul
mov
xchg
outsl
js
imul
fsts
call
loopne
and
sub
fnstenv
icebp
scas
jmp
push
push
add
cwtl
ret
jecxz
push
mov
ffree
jo
push
rolb
sahf
test
jae
shrb
sub
sub
in
push
adc
cmp
mov
xchg
cmp
jne
mov
fstpl
daa
movsb
xchg
sarb
imul
pop
fcoml
iret
xchg
jae
pushf
jns
stos
and
inc
jle
inc
sahf
jnp
cmp
cs
pop
inc
rcrb
jge
pusha
js
xchg
arpl
dec
cmpsl
sti
aas
jnp
dec
push
icebp
icebp
mov
mov
or
into
mov
out
push
push
xor
sbb
push
mov
mov
xor
iret
add
jl
sbb
or
add
xchg
mov
and
sbb
in
sub
inc
fdivr
sarl
push
pop
pop
bound
push
jnp
test
and
jne
sti
pop
imul
dec
dec
je
add
and
cwtl
adc
lcall
push
aas
mov
cmp
push
shlb
push
xchg
adc
inc
jns
inc
sbb
sahf
movsl
dec
das
cmp
out
pop
xlat
xchg
mov
mov
sarb
add
cmc
pop
dec
je
in
mov
aad
mov
push
xor
dec
cmp
cwtl
imul
xchg
clc
mov
jecxz
inc
gs
ret
repnz
dec
jmp
hlt
pop
sub
loope
ret
das
push
inc
inc
in
imul
dec
ret
xchg
popf
push
ljmp
xor
pop
pop
test
enter
fcoms
cld
aam
dec
mov
pushl
rorb
mov
scas
cmpsb
testb
mov
or
and
sarb
inc
roll
lds
mov
push
aaa
ja
lret
jg
aad
fsubrp
ret
sbb
mov
mov
xor
lahf
sbb
and
and
int
add
push
inc
sub
scas
clc
rcll
lcall
call
add
or
mov
fistps
cmp
xchg
aad
pop
iret
jl
popf
addr16
sahf
add
sub
and
lcall
repnz
daa
das
imul
xchg
lds
mov
sub
inc
repz
push
mov
sub
push
rcrl
fsubs
test
mov
dec
cmc
fadds
ss
xchg
leave
and
cmp
and
gs
dec
lock
shlb
pop
icebp
sub
sbb
adc
sbb
jmp
adc
mov
daa
sbb
mov
sbb
movsb
fnsave
cld
xchg
les
loope
xlat
dec
sbb
xchg
stos
sarl
inc
add
mov
mov
popa
jo
inc
push
jne
stos
or
fwait
fs
cli
addl
cmc
pop
dec
mov
mov
xor
pop
push
xchg
aam
getsec
icebp
mov
std
movsl
sahf
add
ja
cmp
or
mov
cltd
mov
nop
jg
mov
out
sahf
test
outsl
test
and
mov
sbbb
mov
subb
leave
add
jmp
cmp
into
pop
popa
mov
sbbl
pop
mov
adcl
dec
sahf
ss
adc
addr16
mov
jmp
scas
outsl
pop
in
push
jne
inc
sub
adc
mov
stos
pop
and
push
mov
sti
mov
pop
sbb
add
adc
mov
adc
out
inc
add
fcomip
dec
pop
xor
cld
xor
cmp
enter
inc
iret
jne
out
xchg
mov
xor
out
scas
aad
lods
loopne
sub
or
and
aam
ljmp
fprem1
push
in
inc
xor
icebp
leave
push
js
aam
movsl
add
xor
pop
push
jle
and
cmp
fisubrs
mov
pop
mov
add
fwait
sbb
add
incb
movsb
mov
lods
inc
inc
or
cwtl
push
and
inc
ss
insl
mov
stos
sbb
mov
adc
je
xchg
mov
mov
in
fcmovnb
adc
mov
loopne
sbb
mov
mov
pop
xor
sub
inc
xchg
and
sub
lcall
inc
fcmovnu
lahf
jge
lock
loope
aam
dec
out
push
push
add
pop
popf
push
sub
not
push
fwait
jo,pn
cmp
stos
ret
dec
mov
push
mov
loope
test
inc
pop
cmc
clc
pusha
ljmp
imul
cwtl
push
mov
adc
mov
add
outsb
addr16
shll
pop
mul
ljmp
mov
lock
ja
push
adc
pop
sbb
adc
mov
int3
or
iret
xchg
addr16
xchg
mov
es
pop
xor
push
mov
movsb
movsl
lods
jno
push
adc
jnp
inc
sbb
repz
mov
xchg
adc
xchg
lahf
movsb
ss
cmpsl
shll
clc
test
lret
cli
push
xor
dec
ret
or
jae
loopne
xchg
xchg
ffreep
jmp
ljmp
rclb
and
dec
xchg
pusha
and
jecxz
arpl
push
mov
mov
mov
and
cmp
pop
push
xor
push
add
in
mov
les
mov
xchg
arpl
sub
add
sbb
and
sub
int
rcrb
add
jnp
fwait
jecxz
xor
jecxz
cmp
jno
andl
mov
dec
jae
aas
jp
push
rolb
push
cmp
adc
cmp
xor
stos
dec
stc
cli
out
aam
daa
or
stos
jge
out
pop
out
loope
imulb
dec
test
stc
mov
jnp
mov
or
pop
or
fs
mov
pushf
pop
add
es
dec
mov
xor
mov
inc
out
in
cmc
cltd
gs
push
or
call
mov
xchg
iret
out
cmp
dec
cmp
add
pushf
test
in
xchg
ds
pop
aaa
push
dec
sub
test
mov
xor
imul
cmp
arpl
ja
add
mov
pop
jmp
lea
ja
mov
jl
jnp
repz
and
in
in
fstl
das
ds
mov
lret
lds
or
cwtl
sti
ja
andl
nop
insl
inc
jne
and
js
xchg
pushl
imul
mov
addr16
sbb
push
xchg
imul
pushf
dec
cmpl
sub
sbb
xor
mov
lods
fldt
test
pushl
push
dec
push
lds
cmpsl
add
out
test
jmp
hlt
sub
sahf
mov
lea
push
sti
aad
xor
aaa
cwtl
mov
cmp
mov
dec
jg
ja
add
jo
adc
test
xchg
call
movsl
sub
xor
fstp
push
das
in
or
xor
loop
jge
add
mov
stc
mov
inc
inc
ret
lods
int
xchg
mov
and
mov
xchg
popf
shll
mov
xor
scas
ljmp
aaa
xor
inc
fidivl
cltd
mov
xchg
jo
jo
fisubs
jmp
ds
cwtl
loope
nop
popf
fdivrs
lds
mov
dec
imul
ljmp
mov
pop
xchg
mov
add
je
sbb
sub
mov
jle
out
or
fisubl
jmp
dec
mov
les
sahf
lea
mov
inc
gs
pop
imul
mov
negl
push
sbb
cmc
sub
push
sbb
and
shll
mov
push
mov
fsubrl
jo
and
pushf
fcoml
dec
push
insb
int
dec
sbbl
jnp
sub
es
sbb
jne
in
lock
mov
cmpsl
and
and
jb
inc
xchg
pop
or
xorb
pop
cmp
outsl
adc
mov
scas
inc
xchg
add
jno
xchg
test
imul
add
fidivs
xchg
lods
mov
mov
dec
mov
sbb
loope
push
clc
inc
icebp
clc
push
push
enter
jg
mov
in
inc
jg
lret
sub
hlt
dec
xchg
loop
mov
sbb
mov
in
jle
div
or
cli
repnz
push
test
jbe
data16
int3
aam
xchg
sti
pop
pushw
or
loop
ret
test
mov
dec
clc
out
and
int3
mov
into
in
or
mov
jle
shlb
push
lcall
add
shlb
xchg
ss
xor
push
add
jae
cmp
lods
jge
mov
dec
paddw
lret
jae
imul
push
mov
cmpsb
mov
sbb
push
cmp
mov
out
push
pop
clc
adc
cmpsb
sub
push
dec
mov
mov
ss
jb
push
adc
fld
nop
or
pop
pop
sbb
fildll
les
test
cmpsb
pop
test
mov
hlt
inc
fisubl
pop
clc
addr16
repz
stc
std
cltd
dec
movsb
aas
push
das
sbb
add
mov
mov
insl
pushf
lods
aam
out
dec
inc
stos
scas
enter
mov
jns
sub
lea
fisttpll
sti
xor
daa
test
gs
pop
xchg
and
sahf
inc
cmp
push
jns
add
mov
and
in
imul
push
rcl
insb
push
movsb
fsub
jge
into
jmp
jnp
lret
xor
adc
loope
cmpsl
cmpsl
cmp
arpl
push
push
int
sub
ficoml
mov
xor
mov
mov
adc
sub
shl
int3
leave
xor
mov
cmp
mov
jg
mov
andb
fcoms
jae
mov
mov
bound
jp
inc
xchg
push
adc
mov
stos
insl
sbb
ret
lds
test
cmp
hlt
jnp
mov
jne
in
out
pop
mov
mov
lods
loope
push
rclb
icebp
adc
push
aas
enter
aam
sarb
cmp
adc
in
es
xchg
addr16
or
pop
jae
add
mov
adc
pop
sbb
or
popa
in
es
aaa
outsb
lea
pop
pusha
mov
mov
lea
pop
addr16
push
stc
mov
adc
and
pop
jl
sbb
addl
cmp
mov
call
adc
adc
jae
shrb
stc
adc
push
aam
pushf
outsb
push
pop
ficompl
stos
repnz
leave
inc
cwtl
push
xor
jge
sbb
or
mov
cltd
mov
inc
inc
je
add
lcall
out
pusha
and
popl
adcb
mov
outsl
sub
addr16
xor
roll
jmp
call
mov
cmp
dec
lahf
dec
and
inc
mov
sbb
mov
arpl
sub
push
mov
push
into
and
lret
adc
xchg
and
icebp
decb
jle
jecxz
xchg
clc
out
add
xor
ds
lods
xor
inc
loope
xor
dec
clc
cli
cmpsb
cmp
jg
popa
inc
xlat
xor
and
push
pop
imul
or
cmp
or
push
mov
push
xchg
inc
or
movsl
jae
cs
adc
pop
mov
daa
mov
and
into
iret
or
lret
xor
sbb
shr
jecxz
int3
inc
lret
dec
daa
pop
sub
sbb
xchg
dec
jmp
out
dec
int3
mov
xchg
mov
das
aad
lock
out
adc
pop
xchg
mov
mov
mov
int3
sbb
sub
mov
xchg
add
adc
xchg
test
dec
and
mov
sub
xchg
cli
sbb
fs
mov
adc
clc
xchg
repz
lds
stos
jge
push
in
pop
out
cld
jmp
and
adc
and
pushf
dec
push
test
mov
jns
mov
negl
sub
call
lret
stos
jo
xor
push
out
ss
rcrl
push
fs
icebp
add
jle
les
daa
daa
push
jb
or
sub
in
sub
pusha
fsubrl
jae
mov
bound
jl
dec
mov
lea
sahf
hlt
je
mov
shrb
mov
ret
inc
ja
xchg
sahf
xor
sub
call
sahf
dec
pusha
xchg
lds
jge
pop
xchg
leave
lret
ja
pop
in
or
ret
mov
out
daa
dec
pop
sbb
mov
hlt
lods
mov
stos
mov
cld
les
mov
or
mov
pop
xchg
ss
loope
repz
and
mov
xchg
xlat
xor
popa
shlb
bound
mov
mov
adc
jne
pop
xchg
cmpsl
incl
add
popa
add
addr16
stos
cltd
or
int
loop
call
es
push
int
test
inc
mov
aam
fisttps
sahf
dec
xchg
js
lea
adc
jle
xchg
nop
jbe
push
pop
rolb
adc
test
cmp
in
pop
loope
push
add
stc
xor
lret
and
hlt
test
test
movsb
stc
push
jnp
fldln2
mov
mov
inc
sbb
mov
cmp
pop
aas
stos
int3
sub
jl
in
cmpsb
add
scas
mov
in
xchg
repz
fidivs
repnz
pop
into
xchg
cltd
stos
fstpt
rol
repnz
outsb
jbe
fidivl
push
lds
adc
dec
lret
fwait
stc
sbb
daa
adc
mov
les
stos
out
lret
cmp
jno
into
xchg
clc
or
push
xor
adc
std
cmp
enter
cmpsb
inc
sahf
fdivrs
int3
fdivrs
xlat
nop
xchg
jp
mov
adc
push
icebp
int3
mov
add
adc
or
icebp
adc
stos
cwtl
jecxz
shrb
adc
push
cmp
jae
mov
popa
mov
nop
lock
in
dec
repz
cmp
cmp
push
imul
push
cmp
mov
cld
negb
sub
cmp
jle
inc
imul
jo
xor
hlt
shll
mov
adc
jecxz
sub
stos
push
out
popf
pop
das
adc
pop
in
fwait
ret
xor
and
mov
adc
mov
in
setne
fwait
jle
lcall
push
popf
js
pop
je
mov
ret
inc
stos
jp
out
mov
xchg
daa
daa
imul
loop
lea
push
fimuls
xchg
pop
fdivrp
push
out
mov
enter
and
push
push
sbb
data16
fnstcw
dec
push
imul
mov
in
xchg
cmpb
or
iret
nop
sub
dec
jns
popf
mov
call
xlat
lahf
lods
pop
lds
jg
mov
mov
push
sub
cltd
cmpb
lods
pop
movsb
insb
jmp
pushf
test
in
adc
cwtl
xchg
daa
xor
fisttpll
test
sbb
jp
test
xlat
mov
ret
cmp
fldcw
dec
pop
pusha
outsl
cmp
lock
ret
pop
lret
sbb
mov
jae
push
and
pop
mov
imul
add
pop
sub
sbb
in
adc
leave
push
adc
das
call
pop
add
pop
fucomip
scas
mov
inc
inc
inc
and
cmp
mov
mov
xchg
mov
add
sbb
push
shr
sbb
jl
add
sbb
in
ds
add
mulb
notb
mov
pop
jl
sahf
andl
mov
fwait
sub
pop
subl
sbb
adc
push
mov
push
test
aad
adc
daa
add
sbb
ljmp
stos
ficoms
in
movl
inc
into
mov
xor
push
cli
lcall
sub
mov
or
sbb
daa
push
ret
shr
nop
jne
movsb
xchg
es
mov
out
rcl
rorb
in
push
jns
sub
mov
iret
in
fdivp
pop
aas
mov
popf
sub
lock
jp
add
ret
jnp
stos
je
and
jno
mov
inc
popa
jp
in
popf
nop
add
dec
adcb
pop
cmp
outsb
cmpsb
xor
repnz
cld
mov
shll
aad
mov
jle
or
ljmp
xor
xchg
es
pop
inc
push
repz
fcomps
dec
imul
mov
push
jb
and
pushf
push
adc
lock
dec
pop
ret
sbb
mov
xchg
je
cmp
subl
fsubs
int
in
subb
stos
divl
shll
sbb
arpl
inc
es
xchg
adc
xchg
push
in
addr16
aad
sahf
xor
sub
ret
or
repz
pop
fsubp
ror
into
fstl
jno
jbe
icebp
push
clc
int
test
sbb
xor
data16
push
dec
sbb
cmc
fidivrs
xchg
inc
add
mov
adc
pop
xor
call
pop
clc
fisubl
inc
inc
jb
jb
inc
inc
stc
shll
jp
adc
das
xchg
lds
and
ja
addl
push
ja
cli
sub
cmp
test
or
fs
push
mov
inc
mov
fstps
xor
stc
xchg
insb
stc
mov
popa
sbbl
jno
sub
sbb
mov
repnz
test
inc
xor
arpl
imul
xchg
mov
sub
xor
sub
mov
andb
ret
mov
mov
and
es
push
sti
jp
and
jecxz
je
xor
fisubl
in
dec
mov
outsb
aas
pushf
adcl
repnz
aas
js
cmpsb
xchg
sbb
push
ficomps
jmp
cmpsb
jp
cmpsb
repz
loopne
mov
inc
jp
je
outsb
jnp
pop
je
notb
out
mov
mov
nop
or
cltd
icebp
scas
sti
jns
repz
xor
jb
or
sub
sub
mov
and
inc
repz
lcall
sub
loop
rolb
insb
iret
push
dec
pop
adc
test
inc
add
push
arpl
les
int3
test
popa
xchg
fmuls
test
lods
inc
add
loope
xchg
nop
aaa
nop
ret
jo
cmp
dec
lea
push
in
add
mov
jl
mov
lods
pop
sub
stos
mov
cmp
je
cwtl
xor
dec
sbb
data16
hlt
jb
test
pop
fwait
test
ret
mov
pop
hlt
inc
repnz
mov
loopne
cmp
sahf
dec
xchg
push
jg
imul
dec
push
out
mov
xor
imul
jnp
jge
test
das
lds
daa
jp
into
insb
jge
leave
icebp
out
push
pop
inc
pop
sbb
push
and
adc
js
push
cmp
aas
xchg
repz
mov
push
dec
inc
mov
lods
stc
or
add
in
xor
inc
push
cmp
push
mov
sbb
mov
jg
xor
fidivl
inc
jle
rcrl
scas
xchg
sbb
xlat
fwait
ja
adc
call
ret
lret
adc
imul
add
adc
mov
sub
addr16
fstpt
pop
jns
mov
inc
pop
int
pop
mov
mov
jg
movsb
mov
mov
in
and
adc
test
in
popf
dec
pop
je
sbb
and
fidivrs
lret
mov
cmc
inc
ja
ja
jbe
mov
cmp
sub
call
pop
incb
outsl
arpl
sbb
mov
and
lods
mov
inc
add
in
cltd
je
dec
jmp
cmp
xorl
mov
jg
sbb
jb
jne
es
sub
rolb
sub
and
fisubrl
pushf
sti
fmull
mov
dec
mov
scas
imul
inc
xor
cmpsl
aas
lods
xchg
push
fmul
pop
xor
stc
cmp
cli
sti
or
push
xchg
ret
int
das
mov
jp
or
push
and
push
xchg
or
cmp
in
scas
and
fwait
xor
jae
inc
dec
fistpll
test
mov
jns
mov
repnz
xorl
sub
mov
adc
sub
jp
cmp
shld
lock
mov
push
bound
rcll
mov
inc
js
das
aad
xchg
fmull
int3
subl
outsl
loope
cmpsl
jp
int
sarb
or
add
rcrb
int3
rorb
bound
xchg
or
pop
sbb
dec
sbb
mov
add
xchg
pop
or
ja
add
addr16
mov
sbbb
mov
mov
cmp
dec
pop
stc
or
or
adc
fldl
gs
inc
jno
fcompl
adc
cmp
jmp
andl
mov
mov
dec
pop
pop
popa
jo
lret
add
jne
jmp
xchg
adc
xchg
pushf
push
inc
sbb
jne,pn
mov
shr
addb
jae
cltd
mov
inc
sbb
movsl
xchg
xchg
icebp
sub
sub
sub
iret
idivl
push
push
xchg
fwait
rcr
push
mov
mov
sbb
mov
inc
xor
and
push
aam
fldt
lea
mov
bswap
push
add
mov
gs
cmp
adc
mov
sub
inc
cltd
jmp
add
adc
ret
or
loopne
mov
adc
cmp
xor
jns
cs
xor
mov
mov
imul
and
mov
orb
mov
fdivs
mov
pop
push
jae
fldt
jl
jge
xchg
sub
cli
cltd
push
in
sbb
sar
addr16
mov
adc
ret
cmp
inc
mov
mov
pop
cmp
ret
and
std
mov
movsb
in
lret
dec
push
sub
push
mov
adc
xor
insl
hlt
in
loopne
out
push
test
movsl
push
xor
cmpsb
push
jbe
pushf
arpl
pop
mov
fnstcw
jae
add
cmp
dec
sbb
or
mov
mov
leave
ret
mov
or
test
add
fwait
dec
xchg
std
adc
jns
and
test
add
add
fstpl
cmp
sbb
mov
jbe
mov
pop
int3
roll
adc
push
fildl
dec
test
mov
adc
and
in
lea
lcall
mov
mov
push
lods
mov
mov
mov
dec
cmc
xlat
daa
mov
mov
push
data16
nop
add
xchg
jg
and
sbb
shlb
shlb
out
mov
into
leave
dec
sbb
sbb
movsb
mov
xlat
lds
les
mov
loope
jns
mov
pop
lret
lods
cli
push
and
add
xchg
xchg
sbb
ds
das
sub
pop
cli
push
loop
pop
mov
test
push
dec
in
sarl
xor
adc
dec
mov
xorl
outsb
add
mov
lea
out
sbb
lea
pop
cltd
int3
xor
dec
push
jns
fsubp
inc
lahf
cltd
stc
xchg
mov
inc
pushf
inc
insb
xchg
int3
add
push
leave
push
xchg
xor
ja
cmp
pop
jo
mov
leave
mov
push
shll
movsb
lods
inc
and
hlt
adc
lret
lods
mov
jecxz
jl
fwait
jle
add
dec
mov
fistps
fs
hlt
or
and
in
mov
push
jns
xchg
iret
inc
or
aad
clc
xor
stc
xlat
push
push
sbb
mov
or
push
cli
ret
sub
ljmp
xor
shr
call
xchg
or
inc
xchg
inc
jmp
iret
repnz
inc
adc
mov
mov
daa
add
xchg
int3
pushf
rorb
push
xlat
das
mov
in
dec
fucomi
inc
mov
in
stc
push
adc
cmp
cmp
loopne
inc
jl
push
sub
data16
cmp
cmp
mov
mov
cmpsb
mov
pop
cmpl
ficomps
pop
mov
sbb
fs
push
lods
rorl
mov
dec
or
push
mov
cmp
sbb
cmp
or
cmp
iret
pushf
lea
lcall
xchg
pop
mov
ret
das
pop
jle
pop
ja
rorb
pop
push
sub
into
sub
xchg
loope
jae
mov
rol
dec
xor
mulb
imul
inc
popa
jp
lret
jecxz
cmp
in
mov
loop
cmpsb
mov
adc
sub
mov
mov
adc
cmpsb
jmp
ret
hlt
dec
mov
popa
mov
addr16
in
das
or
adc
fists
sub
mov
pop
out
sub
mov
jl
and
inc
mov
cmp
jecxz
add
stos
mov
push
dec
movsb
dec
outsl
ja
adc
sub
mov
int
jnp
mov
xor
js
and
push
inc
out
mov
mov
in
fwait
xchg
cltd
cltd
mov
mov
mov
and
push
lods
pushf
mov
push
add
outsl
cmp
rcrb
out
xor
iret
mov
mov
sbbb
push
fs
xchg
cmp
int
cli
not
push
shlb
jne
arpl
movsb
lret
xlat
jo
or
push
add
jae
mov
push
mov
and
hlt
add
popf
cwtl
cmpl
sub
xor
xchg
sub
mov
cmp
arpl
xchg
mulb
jp
mov
movsb
jb
cmpsl
mov
mov
mov
inc
sahf
dec
bound
scas
pop
je
subb
add
fisttpll
and
pop
test
push
ret
mov
push
jmp
xchg
push
or
cwtl
cmp
dec
inc
lea
sarb
mov
mov
dec
push
mov
sbb
out
push
push
ljmp
cmp
incb
je
pop
cld
test
or
lods
loop
lods
cmp
xchg
movsl
mov
punpckldq
and
sub
inc
sbb
outsb
mov
std
mov
xchg
adc
test
push
hlt
mov
jge
lahf
in
cmp
clc
into
cmpsl
fdivr
movsb
push
mov
out
pop
dec
pop
ficoms
sub
jg
int
scas
mov
popa
pop
push
cmpsl
daa
shll
loop
es
jbe
mov
and
or
and
sbb
enter
cmp
push
lods
rclb
stos
out
add
jle
frstor
aas
sub
stc
lock
pop
mov
mov
dec
mov
faddl
sub
add
aad
repnz
repnz
packssdw
pop
fiadds
mov
mov
nop
popf
dec
lcall
out
into
or
cmp
ret
rorb
sbb
mov
test
adc
pop
loop
scas
dec
pop
jns
ret
mov
int3
push
mov
push
mov
imul
lods
xor
roll
inc
dec
pop
xchg
inc
es
bound
cmpsl
outsl
jg
orl
int3
push
cld
push
bound
xor
out
mov
ret
and
adc
lods
adc
xor
cmc
int3
ljmp
stc
jbe
cmp
sarb
mov
mov
sbb
mov
jge
xchg
xlat
aam
scas
mov
and
movsl
lea
mov
dec
push
nop
cltd
iret
js
inc
clc
sahf
mov
or
inc
jecxz
ret
cwtl
jg
mov
fmull
test
push
jae
sub
and
insl
aad
or
jb
aam
pop
in
pop
push
mov
ficoms
adc
pusha
jmp
mov
daa
dec
add
adc
cld
pushf
mov
dec
pop
mov
pusha
cmp
in
lahf
std
arpl
push
les
sub
push
adc
popf
addr16
stos
insl
inc
in
in
jl
sbb
and
and
pop
inc
mov
imul
pop
jecxz
leave
push
mov
imul
jecxz
repz
xchg
inc
inc
add
push
xchg
das
rcr
movsl
insl
orb
or
jns
pop
popf
clc
ret
mov
mov
fnstenv
push
outsb
repnz
int3
push
xchg
xlat
mov
scas
xor
insb
pop
das
shlb
mov
roll
jnp
enter
lods
fildl
popa
xor
pushl
or
rorb
fdivrp
cmpsl
aas
xchg
outsb
lea
cmp
sbb
aam
pop
add
ja
sub
ficomps
in
lock
xorb
repnz
jmp
push
mov
lods
or
lds
enter
xchg
jbe
mov
mov
sahf
xor
fstpl
ror
dec
pusha
jl
mov
jo
insl
push
xchg
jmp
pop
out
aam
sub
into
js
les
mov
mov
xchg
fpatan
dec
jb
mov
and
ds
lods
and
mov
movsl
in
xchg
dec
mov
sub
push
aaa
push
repnz
jnp
sub
mov
ss
iret
mov
pop
push
mov
push
int3
stos
fldpi
stos
dec
inc
jae
adc
mov
in
int3
jmp
sub
rol
pop
ss
xor
sbb
jnp
inc
pusha
test
mov
push
idivl
push
shlb
lds
inc
call
scas
push
inc
jmp
popl
and
and
mov
inc
fsubrl
mov
jae
fldt
cmc
repz
jns
pop
jno
outsl
fs
push
push
stos
mov
test
mov
lds
and
aas
loop
inc
xchg
clc
mov
cmc
mov
mov
shrl
fwait
cmp
pop
iret
inc
into
lds
fdivr
or
mov
out
cmp
fcmovnbe
fwait
loop
and
mov
into
test
imul
mov
outsb
xor
arpl
daa
lcall
mov
pusha
adc
jns
inc
aas
or
in
mov
xchg
nop
rcl
xchg
loopne
ret
sub
jge
cs
mov
cmp
mov
stc
imul
loop
sbb
in
xor
xchg
mov
cld
fistpll
adc
repz
ret
xor
and
cmp
fdivrl
cld
mov
mov
ja
adc
movsb
dec
sub
ljmp
aaa
fnstcw
and
subl
xchg
jle
jle
xorb
cld
shll
ss
into
sarb
fwait
pop
out
push
repz
xor
pop
pop
sahf
push
arpl
lds
fisubl
or
mov
sbb
fcom
sub
sub
push
push
and
insb
popf
loope
ss
ret
jo
mov
clc
inc
je
ret
in
movsl
inc
shlb
test
jne
jge
test
jge
mov
inc
xchg
and
cmp
mov
fwait
cmpl
repnz
sub
push
sti
xchg
aas
arpl
mov
or
or
lret
ficoml
pushf
mov
dec
mov
aaa
sbb
pop
sbb
movsl
cwtl
xor
aaa
loop
in
test
jmp
lcall
pop
mov
cs
fdivrl
mov
push
xchg
adc
sub
xchg
daa
or
repz
xor
push
jo
cwtl
pop
add
je
ret
mov
xchg
nopl
inc
mov
jno
pop
pushf
pop
cld
mov
jmp
adc
pop
dec
outsl
lock
fadd
cltd
shl
aas
sub
or
sub
xchg
mov
popl
and
das
fists
mov
bound
jbe
fistpl
scas
cmp
popa
nop
fadds
cmp
sub
stos
fists
mov
xor
cli
sub
addr16
cltd
data16
dec
ret
pop
ds
adc
adc
cmc
aad
add
and
mov
popf
mov
bound
test
push
in
insb
scas
outsl
jo
pop
das
outsb
cwtl
mov
popa
fsubr
pop
jbe
mov
rclb
xchg
mov
into
loope
stos
loope
dec
movsb
xor
icebp
pusha
arpl
pusha
or
and
scas
data16
pop
shl
loopne
test
int3
leave
xchg
cwtl
mov
mov
sbb
cltd
and
cmpb
pop
pop
je
add
fdiv
push
mov
push
push
push
in
lret
mov
mov
xchg
mov
mov
testl
add
push
pop
not
dec
add
fidivl
sub
inc
cwtl
jno
ss
ja
into
inc
cmpsl
sbb
je
or
out
aaa
lds
xchg
inc
popf
adc
xchg
cwtl
xchg
out
pushf
jg
loop
mov
and
lret
mov
push
out
lods
in
pusha
popf
mov
and
fsts
jge
ja
jp
in
push
outsb
jp
and
mov
cmp
pop
mov
push
inc
inc
ret
or
pop
add
fsubrs
out
sbb
dec
rolb
add
sbb
add
inc
push
mov
xchg
fildl
adc
inc
fwait
movsb
inc
leave
repnz
ja
or
sbb
hlt
scas
imul
aas
pop
xor
bnd
mov
add
out
cli
cmp
sub
fsubl
mov
jecxz
repz
loope
push
mov
ljmp
jge
mov
sbb
enter
jg
subb
fisttpll
cmpsl
in
jne
push
and
adc
scas
ds
cmp
cltd
jne
push
xchg
jp
mov
inc
adc
push
xchg
inc
sbb
jb
inc
adc
fistl
push
aam
inc
orb
jns
push
inc
ret
dec
sub
adc
xorl
sub
jb
sbb
or
ds
shrl
xor
cld
ret
fisubs
inc
adc
addr16
push
xchg
pop
and
nop
mull
cmp
jnp
jle
lahf
jg
mov
add
in
in
push
inc
cmp
fwait
pop
hlt
in
ds
call
fwait
jp
dec
ljmp
push
ret
mov
fs
sarl
jecxz
loopew
sbb
pop
stos
sub
xor
push
mov
or
sar
and
xor
test
push
jle
lcall
bound
or
sbb
daa
sarl
jle
xchg
inc
test
movsl
fdivr
aaa
add
sti
ret
cmpsb
xchg
lret
leave
inc
fstpt
sub
mov
ret
inc
lahf
cmpsl
pusha
dec
scas
or
in
stos
cmp
push
dec
iret
adc
sbb
rcl
sarl
push
inc
mov
aad
cmp
pusha
mov
inc
lods
data16
in
fwait
add
mull
xor
lea
ja
pop
lods
jns
lret
push
arpl
add
mov
cmp
add
icebp
and
mov
fildll
cmc
xchg
std
sbb
fistpl
test
add
repnz
sbb
hlt
or
andb
out
dec
fdivl
cmpsl
stos
mov
mov
add
or
mov
mov
xor
hlt
sbb
adc
xor
lcall
in
test
xor
mov
rolb
push
dec
cmp
mov
adc
xchg
jp
out
sub
loop
scas
xor
mov
aam
cwtl
popa
inc
sti
dec
jecxz
adc
fimull
addr16
xor
and
push
push
in
in
add
inc
cld
push
add
mov
pushf
mov
mov
mov
push
fiadds
dec
jo
inc
pop
cmp
jnp
or
movsb
repnz
shr
mov
inc
push
or
sarb
push
sahf
mov
movsb
mov
or
nop
mov
mov
incb
adc
and
ret
fistps
xor
adc
xor
in
inc
jmp
xor
ja
cmpsl
shr
cmp
adc
xchg
and
push
push
lods
in
push
push
mov
pop
jmp
pop
clc
lods
in
and
out
scas
aam
and
out
mov
pop
fs
cmpsb
sti
xchg
jno
mov
ljmp
jl
jae
ret
fdivs
mov
dec
pop
sub
sti
loope
inc
scas
ret
xchg
fdivp
ljmp
lea
or
xor
xchg
push
push
enter
push
sub
cld
lcall
push
scas
shl
lcall
xchg
push
mov
cld
adc
stc
inc
xchg
adc
aam
mov
movsl
int3
mov
jecxz
subb
mov
dec
in
push
and
and
mov
pop
inc
ret
cmp
sahf
or
loopne
cmpsb
scas
sbb
sub
push
outsl
inc
xchg
fidivrs
imul
cmpb
mov
xor
adc
add
popl
pop
push
int3
js
push
add
fwait
push
fldl
jbe
mov
mov
jecxz
test
pop
mov
outsl
or
mov
setle
dec
cmp
inc
mov
cmp
stos
jecxz
adc
mov
xor
xchg
pusha
ret
sti
sti
adc
outsb
enter
push
push
adc
and
dec
or
adcb
or
out
insl
test
test
sbb
push
inc
mov
mov
fidivl
push
andb
and
cltd
adc
jp
scas
clc
mov
stos
inc
adc
ljmp
jnp
pop
adc
add
adc
mov
mov
xchg
in
in
mul
pusha
out
or
lahf
popa
pushf
aas
inc
cmp
mov
xor
xchg
je
mov
mov
mov
inc
and
fildll
cmp
lcall
pusha
mov
out
pop
idivl
test
adc
mov
pop
pushf
push
or
les
dec
or
sub
ja
insl
es
or
jns
es
lahf
out
inc
test
inc
in
sub
filds
and
sbb
outsl
lods
ds
inc
xor
lock
sbb
dec
jno
jo
mov
mov
pop
xchg
mov
cmp
ljmp
aas
jle
jns
pop
out
cmpxchg
inc
mov
inc
movsl
pusha
push
mov
enter
pop
cmp
sub
jne
int
iret
mov
repz
repz
pushf
rcrb
sbb
xchg
adc
mov
mov
jnp
out
or
xchg
sbb
in
cld
clc
xor
dec
ret
stos
cmp
in
sub
push
sbb
fldt
dec
jnp
in
test
out
loopne
add
push
nop
mov
jmp
mov
mov
loop
loopne
pop
mov
xchg
inc
push
cwtl
aam
cwtl
sbb
inc
daa
xchg
loopne
push
out
dec
mov
pop
sti
sbb
lahf
aaa
add
test
popf
faddp
aas
mov
mov
xchg
xor
out
push
xor
xchg
sub
mov
adc
sahf
mov
stos
dec
jmp
lods
sbbl
cmpsl
in
jae
ljmp
xchg
add
insl
movsl
and
outsl
jge
sarl
movsl
pop
dec
aam
cmc
dec
inc
mov
push
inc
pusha
loope
int
cvtps2pi
repnz
and
xchg
mov
push
xchg
mov
xor
mov
push
jns
jne
lods
inc
dec
roll
clc
adc
enter
pop
mov
xor
and
imul
sub
stos
enter
sarb
mov
add
xchg
push
cmp
ss
out
xchg
pop
push
mov
mov
or
adc
sbb
cmpsl
pusha
sahf
adc
fisubrs
adc
shlb
or
jl
xor
xor
stc
adc
shll
pusha
jmp
sbb
shlb
and
push
mov
or
dec
ljmp
mov
lret
cli
cld
sti
stos
cli
pop
fcompl
mov
adc
mov
hlt
mov
xor
notw
xor
sub
int3
sbb
cmc
xchg
xor
sub
out
xlat
dec
idiv
xor
and
out
fs
and
jp
das
push
loop
push
popa
or
mov
jo,pt
jo
sarb
aas
leave
test
push
dec
sbb
or
mov
ja
jo
loope
jno
rep
icebp
pop
or
mov
xor
pop
xchg
pop
lret
out
or
cs
and
lcall
xchg
bound
xchg
mov
fldcw
fbstp
xchg
ja
mov
jmp
push
out
fisttpl
pushf
xor
orb
cmp
lcall
lret
xor
add
inc
fnstsw
test
and
add
jle
pop
push
pop
in
call
adc
jo
pop
dec
mov
pop
pop
in
lret
pop
addr16
jge
call
push
jecxz
mov
jmp
sbb
leave
ret
xchg
cltd
lcall
xor
adc
push
sub
jmp
movsl
loopne
aad
imul
fwait
sub
outsb
mov
sbb
mov
mov
mov
jle
dec
movsl
fsubrl
push
in
mov
xchg
sub
mulb
mov
push
popa
std
mov
pop
test
xchg
mov
daa
jne
call
leave
xlat
or
icebp
test
adc
mov
mov
andb
and
addb
cmc
inc
adc
das
out
jns
add
xchg
or
push
xor
call
xor
xor
jmp
adc
aas
jge
sbb
mov
jb
leave
cmp
xchg
sub
dec
jne
dec
pop
jno
adc
add
mov
and
sub
and
adc
xlat
pop
sub
into
sbb
loopne
xchg
pop
dec
rclb
out
sub
daa
je
cli
imul
or
hlt
rclb
test
aas
dec
fcmovne
mov
or
mov
mov
shrl
ret
inc
sbb
movsl
mov
cmc
sub
insl
cmp
mov
mov
mov
push
sub
je
test
jo
js
jo
fsubr
icebp
push
in
adc
leave
imul
push
adc
aas
mov
aas
jg
stos
sti
xor
mov
mov
out
out
lcall
cmpsl
sbb
sub
push
inc
add
or
je
icebp
pop
pushf
xchg
and
sub
mov
dec
or
pop
jmp
sbb
test
icebp
sbb
mov
bound
add
mov
mov
arpl
gs
inc
or
jae
out
push
xchg
bndldx
and
inc
frstor
jl
call
repnz
fmuls
cmpsl
cmp
jnp
lods
test
xchg
mov
mov
adc
push
mov
cld
shll
call
push
fstpt
mov
ljmp
adc
jno
inc
int
pop
xchg
mov
cmpsl
cmp
int
pop
or
test
mov
pop
ds
push
sub
out
mov
sbb
inc
xchg
into
push
pop
fmull
jo
into
imull
sub
add
mov
cmp
ret
subl
inc
pop
push
ja
mov
inc
popa
std
push
aam
cltd
pop
iret
pop
xor
sub
jno
xlat
sbb
hlt
stos
dec
xor
out
aam
imul
pop
xor
movsb
and
adc
lods
test
jne
out
ficomps
ljmp
jge
mov
sbb
xchg
imul
adc
xchg
pop
sbbl
mov
pop
enter
pop
icebp
xchg
adc
js
sahf
fistpl
inc
xchg
outsb
inc
xor
sub
orb
cmc
sub
dec
cld
dec
daa
or
fdivrl
jmp
shrb
das
stos
sti
push
jge
or
push
outsb
inc
pusha
mov
add
cmp
xor
mul
xor
incl
and
push
or
fcompl
mov
cmp
data16
lock
in
iret
push
mov
in
or
mov
add
sub
shll
mov
push
mov
nop
cmp
or
lahf
rcr
or
dec
movsl
jb
inc
repnz
mov
mov
pop
mov
test
xchg
sbb
mov
in
cs
ja
jg
sub
lock
inc
loope
dec
js
jo
notl
loopne
insb
adc
bound
je
popf
cli
aad
bound
or
mov
push
add
mov
sbbl
les
sub
roll
push
dec
sub
mov
inc
mov
push
popa
jg
int3
aad
dec
lahf
add
sbbb
mov
in
mov
pop
sub
stos
adc
lock
lea
loop
dec
mov
das
gs
sbb
les
or
lods
imul
and
fsubl
mov
xchg
cli
icebp
xchg
and
in
jbe
lods
cs
dec
movsb
jge
mov
and
ret
shlb
shr
xchg
mov
shll
mov
insl
or
outsl
or
or
adc
pop
cs
out
test
popa
mov
mov
idivl
cmpsl
lds
jae
and
xor
ljmp
adc
cmc
inc
mov
in
mov
mov
push
lds
insl
jo
sub
inc
mov
cmp
shl
mov
in
ljmp
inc
notb
or
or
cmpl
sbb
sarb
inc
xchg
dec
fmull
test
andl
loop
jnp
adc
jb
lcall
mov
fs
cmp
pop
mov
in
mov
movsb
mov
inc
cld
push
adc
mov
mov
nop
adc
int3
mov
fsubr
sbb
pop
pop
js
test
imul
enter
add
clc
jae
sbbb
cmp
jo
cmp
les
sar
bound
andb
jp
mov
shll
mov
sbb
jno
cmp
xor
int
mov
add
fistpll
jle
popf
cld
mov
pop
cmc
pop
dec
rdtsc
dec
in
and
sahf
or
mov
call
leave
insb
xchg
cmpsb
pop
scas
cmp
outsl
xor
sub
lahf
cmp
lahf
arpl
mov
into
add
xchg
mov
xor
lods
inc
mov
jno
in
leave
arpl
inc
inc
xchg
mov
cmp
enter
xchg
push
sub
std
lods
xor
lret
and
push
and
ret
sti
jae
scas
loop
and
add
dec
loop
loopne
adc
sbb
inc
jno
adc
pop
push
iret
dec
xchg
subb
loope
push
xchg
push
roll
mov
into
mov
xchg
in
jb
sub
cmp
enter
imul
mov
inc
addr16
mov
jmp
jp
push
dec
fbld
dec
xor
mov
repz
fxch
jnp
sub
pop
sub
mov
mov
pop
pop
stc
mul
xor
fisubrl
rorl
das
fst
pop
imul
imul
dec
icebp
adc
dec
cmp
out
xor
fistl
iretw
adcl
psubw
xor
cld
sbb
mov
arpl
xor
nop
inc
and
cmp
loop
jl
jno
in
mov
shll
xchg
xor
dec
adc
leave
mov
adc
mov
les
shrb
stos
xor
ds
cmp
lcall
or
and
fdivr
loopne
sbb
out
inc
add
adc
pop
sahf
push
mov
leave
add
mov
inc
aam
dec
popf
insl
xchg
fisubrl
mov
iret
xor
dec
inc
mov
pop
jmp
xlat
sbb
pusha
or
shl
sub
lock
jg
xor
ds
inc
out
push
arpl
mov
testl
mov
dec
fldl
stos
jl
pop
mov
fcompl
push
adc
cmc
and
dec
mov
xorl
adc
xchg
movsb
loopne
jecxz
filds
mov
in
je
daa
divb
aam
sbb
sbb
mov
mov
popf
push
cmp
pop
mov
jmp
add
pop
add
xchg
repnz
aad
adc
hlt
sbb
aas
mov
push
dec
movups
dec
push
xchg
iret
sbb
mov
adc
inc
in
popf
lret
mov
notl
sub
and
mov
lods
mov
push
popa
jae
inc
add
cmpsl
rolb
daa
scas
inc
mov
push
subl
fcom
cltd
fwait
ss
mov
cltd
pop
add
add
popf
cwtd
cltd
in
bound
sub
pop
and
test
add
movsl
jl
sbb
cwtl
push
dec
out
faddl
testb
scas
lret
test
sbb
and
lret
add
mov
push
add
aam
loopne
cmc
aad
daa
nop
fwait
xor
cld
call
mov
insb
in
fstl
xchg
inc
push
test
iret
popf
daa
push
mov
xchg
das
mov
or
xor
xchg
push
stc
cs
xchg
jmp
sbb
adc
cmp
mov
jl
and
fsubrp
mov
arpl
clc
gs
mov
int3
jmp
pop
jmp
sbb
shrl
push
xchg
fistps
and
xchg
push
test
jnp
mov
jns
std
jns
andb
xchg
outsb
adc
mov
push
fsubrs
lahf
cld
cmp
jmp
push
ljmp
std
mov
movsl
in
jge
mov
aad
iret
jge
mov
fstpt
mov
ss
sti
add
cld
pop
cwtl
imul
jecxz
lods
cmp
cmc
cwtl
fsub
orb
or
jle
xchg
dec
mov
mov
dec
sub
push
jb
mov
out
fs
sbb
and
push
pop
imul
xor
mov
xor
jne
or
mov
pusha
int3
inc
mov
jae
idivl
call
mov
decl
mov
fs
mov
xor
in
push
cmp
push
cmp
adc
cld
pop
jne
jnp
cmp
fisttpl
xchg
rcl
cmc
repnz
jns
cli
mov
inc
bound
or
sbb
sti
std
push
push
push
dec
jo
icebp
or
jl
pop
jecxz
xor
rolb
pop
sub
cmp
mov
outsl
add
hlt
cmp
test
pop
lods
ds
inc
shl
cmp
xlat
or
lahf
cmp
stos
mov
fstl
popa
xchg
add
out
js
cmpl
or
pop
popa
rcll
scas
inc
sub
pushf
mov
add
add
push
push
hlt
or
je
aaa
dec
in
and
out
jbe
repnz
sub
je
jmp
in
mov
adc
sahf
popf
outsl
es
add
mov
fmull
push
and
rol
in
and
sti
call
lret
clc
mov
xchg
adc
push
scas
sbb
xchg
push
mov
add
adc
popa
dec
sub
imul
mov
or
pusha
int
mov
js
inc
mov
loopne
add
movsb
mov
push
aas
xchg
mov
stc
jmp
or
or
clc
mov
clc
nop
push
jb
fsubrl
ret
sarl
cmc
xor
adc
jne
popf
cs
jmp
les
inc
mov
add
movsb
cmp
mov
ss
sar
lret
mov
aas
sbb
jbe
pop
xchg
adc
movsl
cmp
dec
rcrl
cmp
cmp
stc
jb
mov
cmp
ret
cltd
pop
mov
inc
jle
adc
or
mov
fucomi
loop
inc
push
std
cmpl
jle
cli
in
dec
ret
add
push
fwait
divb
push
jnp
jne
movsl
xor
xchg
rcrl
add
inc
lahf
mov
lock
insb
pop
lret
test
cwtl
lret
cmp
fistpll
shll
rol
or
add
ror
add
sub
cmp
push
mov
test
mov
stos
jo
xchg
xchg
jge
sub
mov
movsl
add
leave
sbb
mov
sub
scas
aaa
lods
movsb
int
int
fnstsw
fisubrl
in
sti
jns
and
iret
mov
jne
jle
push
xchg
addr16
stos
xchg
mov
cltd
jns
stos
sbb
push
xlat
jb
xchg
inc
inc
dec
and
repnz
rolb
mov
mov
lcall
or
stos
mov
mov
out
popl
mov
rclb
test
mov
imul
and
mov
or
aaa
cmpsl
jnp
mov
mov
aas
rcr
jmp
add
sub
fidivs
imul
ret
inc
cli
inc
and
mov
xchg
pop
mov
in
inc
addr16
fldt
fstl
xchg
call
xor
data16
sub
mov
into
jbe
sbbl
adc
loop
mov
roll
xor
mov
icebp
or
out
lret
xchg
or
fnsave
push
js
lcall
cmp
dec
addr16
fnstcw
sub
or
je
cmc
movsl
xchg
adc
leave
shl
mov
dec
xchg
pushl
mov
cli
jmp
mov
xor
push
mov
jge
dec
jbe
mov
test
rcrl
andb
in
xchg
or
into
jp
ds
xchg
lods
sbb
push
fsubrs
lret
pop
adcb
push
cmpsl
mov
mov
imul
fiadds
pushf
loopne
aas
mov
mov
into
add
clc
add
jbe
jno
mov
cmpsl
lds
adc
ret
stc
movsb
xchg
scas
rcrb
jns
ss
xchg
jecxz
test
enter
adc
out
mov
sbb
adc
scas
inc
cltd
roll
test
sbb
loop
in
imul
subb
and
jo
xor
jecxz,pn
in
imul
sahf
icebp
clc
lods
js
nop
mov
adc
orb
fwait
aaa
lods
inc
dec
and
jo
dec
cmp
xchg
dec
push
aas
jo
jecxz
cwtl
in
cmp
sahf
mov
xlat
pop
jno
and
aas
ljmp
es
popf
mov
inc
data16
dec
hlt
je
movsl
lock
jb
lods
cld
fisttpll
sub
push
dec
mov
push
call
mov
fbld
pushl
dec
adc
aad
mov
jbe
jl
cmc
mov
sbb
cmpsb
and
pop
and
xchg
jno
aas
jg
cld
push
and
sahf
in
mov
loope
mov
dec
movsl
pop
or
shlb
inc
pop
sub
add
mov
xchg
xchg
jae
or
insb
popa
and
mov
mov
adc
sbb
sbb
cli
out
arpl
cli
stos
mov
clc
icebp
and
pop
sti
inc
testb
sbb
pop
sub
shll
push
rcrl
mov
mov
xchg
rorl
mov
lret
loop
xchg
ficomps
jecxz
lahf
sub
sub
into
js
jecxz
mov
or
cmp
lcall
mov
mov
roll
push
lcall
insl
dec
ret
jecxz
cmp
cli
or
std
dec
imull
out
pushw
xchg
mov
aaa
push
or
shrl
pop
add
add
mov
add
fisubrs
or
push
movsl
mov
sub
mov
inc
cmc
rcrl
jnp
mov
jp
cmpsl
add
push
xchg
and
lea
or
mov
push
lret
pop
aam
inc
sti
xchg
inc
pop
sub
sarl
arpl
sub
shr
sub
adc
sub
cs
pop
inc
loop
or
cmc
dec
nop
std
jl
pop
movsl
ss
lea
faddl
xchg
dec
sbb
arpl
fld1
and
and
loopne
and
cli
out
sahf
or
insl
stc
lods
mov
dec
cmp
push
cmp
sbb
adc
loope
test
jge
cmc
pop
dec
push
test
mov
pop
cmpsb
or
sbb
push
leave
xchg
mov
cmp
test
repz
pusha
rorb
add
cmp
mov
pop
mov
adc
cmpsb
clc
xor
incb
or
cli
xor
cwtl
decb
push
cmc
mov
lods
pop
inc
and
and
lea
sub
push
mov
sbb
data16
lds
inc
dec
jnp
or
mov
xchg
xorl
mov
inc
push
xor
ret
cli
mov
fdivs
not
testl
shlb
mov
out
xchg
mov
es
xor
inc
popf
ja
pusha
cmp
dec
and
out
ljmp
loop
jmp
cmp
add
arpl
iret
xchg
xlat
mov
insl
xchg
ja
sbb
lcall
xlat
or
fmul
push
jge
fisttpll
std
pushf
xor
pop
jmp
idivb
push
stc
rcll
into
sub
or
jno
cmp
sti
clc
cmp
add
scas
mov
repz
xchg
and
mov
outsl
add
push
stos
mov
fistpl
notb
cwtl
ljmp
push
mov
xlat
sbb
out
jmp
cmp
sbb
mov
sbb
dec
stos
gs
and
sub
jae
inc
loopne
jge
or
insb
inc
cmp
jne
sbb
cmp
fisubrl
sub
stc
shl
icebp
sahf
cmpsb
inc
or
mov
push
outsb
ret
xrelease
or
icebp
pop
push
dec
pusha
mov
ss
inc
jnp
adc
sub
inc
xchg
adc
scas
mov
xor
pop
ss
inc
mov
sub
mov
push
jle
push
mov
out
mov
js
movsb
or
loopne
pop
pop
cmc
cmpsb
insl
and
xchg
mov
out
xlat
cmp
inc
pop
and
cltd
mov
sub
pushf
mov
imul
rorl
xchg
inc
cmp
outsb
or
mov
or
mov
push
dec
pop
jecxz
dec
jnp
sbb
pop
mov
inc
iret
repnz
popl
xor
stc
mov
fsubrs
loopne
sub
mov
aaa
scas
add
cmc
rep
or
jne
int
gs
push
or
mov
int3
aam
inc
les
ja
push
xlat
leave
into
test
jp
xor
mov
adc
cltd
inc
inc
push
aad
popf
mov
sub
fimull
lea
insb
fwait
nop
and
enter
pop
arpl
xor
mov
xchg
orl
and
call
repz
pushf
push
cmp
clc
mov
inc
mov
pop
cmpsb
push
sub
andb
mov
jmp
dec
repz
mov
sub
push
add
add
jae
mov
jnp
push
inc
pusha
loop
leave
inc
bound
sbb
cmc
ljmp
pop
ret
cmp
stos
pop
pop
or
pop
fwait
out
push
mov
cmp
test
imul
fisttpl
lock
xchg
stos
push
enter
and
mov
cld
loopne
lcall
mov
cmp
test
push
cli
cmc
xor
jl
hlt
data16
fsubrs
adc
fsts
adc
xchg
dec
xor
out
in
or
add
jmp
fstps
andb
add
cmp
popa
push
mov
mov
mov
mov
in
lds
mov
cmc
lret
mov
insl
xchg
stos
insb
and
sahf
lea
sub
and
push
jecxz
xor
sbb
mov
cmp
rep
stos
cmc
js
insb
sahf
jae
aam
mov
jbe
pop
pop
inc
ret
adc
mov
xchg
mov
ja
add
cmp
jge
out
call
xchg
push
icebp
xor
aad
sub
in
mov
mov
jmp
cmp
push
jns
stos
push
divps
imulb
adc
cmpsl
and
lods
addb
mov
pop
je
mov
push
jp
cld
lock
in
adc
jg
adc
push
or
addr16
nop
mov
cmp
test
fists
xchg
adc
inc
rcl
xchg
inc
sub
mov
nop
xchg
idivb
pop
xorl
lahf
and
mov
pushl
scas
sbb
out
dec
mov
mov
push
mov
jle
mov
fsub
and
sarb
cmc
push
loop
rol
das
inc
push
std
xchg
xlat
aam
sbb
cmpsb
scas
inc
inc
test
pusha
cli
push
dec
sbb
subl
and
adc
ja
pop
pop
lods
sti
add
inc
mov
mov
xor
aas
xchg
sahf
pop
sbb
push
ror
leave
inc
fisubrs
icebp
rcrb
std
aaa
and
sub
push
insl
aaa
fsubrp
insl
push
mov
ljmp
out
fists
jge
mov
sti
jo
add
es
mov
push
test
cmpsl
iret
xlat
or
dec
sti
mov
movsb
cltd
jp
sarl
mov
ljmp
stos
cmc
sbb
and
es
push
dec
mov
loopne
push
out
mov
jbe
out
dec
out
enter
mov
push
cmp
push
sahf
push
pusha
int3
sbb
mov
or
ljmp
loope
mov
mov
pop
adc
cwtl
sbb
sahf
je
mov
push
pop
push
mov
fcoms
xchg
ljmp
add
sub
and
mov
add
outsl
mov
mov
pop
div
adc
aad
xor
frstor
ret
cmp
fisttps
outsl
xchg
hlt
fnstenv
outsl
sub
sbb
pusha
cltd
test
jl
and
scas
push
pop
les
leave
inc
dec
inc
fnstcw
adc
fucomp
pushf
adc
or
add
pop
fidivl
mov
xchg
pusha
xor
add
cmc
imul
enter
cwtl
sbb
cwtl
or
cmp
pushf
push
mov
mov
enter
adc
imul
dec
scas
jge
lret
in
add
rcrb
jecxz
hlt
inc
and
mov
gs
xor
into
pop
fildll
push
mov
rcrl
movl
adc
std
xchg
mov
cwtl
push
mov
jecxz
lods
mov
icebp
ds
xchg
test
xchg
in
fmull
leave
pop
sbb
mov
xor
adc
jmp
test
jo
shlb
cmp
push
dec
stc
call
push
fiaddl
int3
push
aam
fwait
xor
cmp
mov
cld
pop
dec
and
add
pop
nop
push
imul
repz
sahf
ret
out
jmp
notl
into
xchg
vmovaps
pop
stc
fwait
cld
rcrb
rcr
xor
push
pop
dec
daa
bound
fs
mov
ljmp
sbb
outsb
xchg
movsb
and
test
mov
xchg
scas
outsl
sbb
xchg
jnp
mov
cmc
jae
repz
mov
popf
mov
jbe
mov
scas
and
icebp
stos
jb
icebp
push
inc
outsl
pop
dec
push
add
dec
out
sub
xchg
mov
jecxz
sub
mov
jb
sub
sub
movsl
sub
cmp
pushf
pop
out
fyl2x
lea
xor
pop
xchg
mov
pop
rorb
jg
pop
jecxz
popf
mulb
push
sti
or
push
jae
mov
inc
mov
or
je
mov
sub
xchg
lds
xchg
adcb
scas
std
int
leave
stos
out
lea
mov
aam
mov
add
imul
adc
addb
std
sbb
lahf
mov
xchg
sbb
addb
sti
sbb
sub
clc
inc
mov
out
dec
and
xor
sub
jb
add
or
jecxz
aaa
test
ffreep
mov
adc
cmpsb
jo
xlat
test
sub
pop
in
cli
sub
pop
inc
cmp
outsb
das
js
sbb
mov
dec
jle
or
lock
pop
fdivrs
and
mov
push
ret
icebp
push
popa
cmc
xchg
cmpb
adc
jo
mov
push
push
fdivs
add
in
add
mov
mov
xchg
mov
sub
into
test
lds
jg
xchg
fisttpl
xchg
dec
pop
popa
xchg
mov
in
sub
out
mov
pop
sbb
adc
pop
mov
stos
pop
aas
rolb
icebp
lahf
les
cmp
adc
lods
xchg
push
mov
xchg
xchg
inc
dec
scas
or
rolb
cmp
mov
stc
xchg
pop
and
inc
push
enter
lret
daa
jno
dec
orb
jae
lcall
mov
add
aad
sbb
xchg
or
aas
jle
rorl
pop
mov
rolb
out
mov
fdivs
sub
dec
inc
dec
and
push
sub
ret
push
sub
aaa
sub
shrl
std
push
mov
dec
xchg
sub
lock
not
mov
pusha
pop
sbb
or
cmpsl
add
inc
sub
mov
inc
stos
cmp
inc
lods
add
add
adc
mov
mov
mov
incb
popf
dec
popf
ds
movl
lahf
subb
fstpt
mov
push
pop
or
xchg
or
push
clc
leave
jecxz
in
add
and
mov
jmp
dec
nop
fistps
xor
xchg
cmp
add
arpl
xlat
push
aas
cltd
les
jmp
cmp
pop
xor
xor
pop
dec
dec
icebp
cmp
addr16
jns
into
lahf
stos
push
movb
inc
or
negb
cli
adc
mov
in
xchg
jne
adc
fldt
mov
sbb
daa
lret
add
sbb
stos
insb
add
and
mov
loop
mov
xor
aam
or
and
popa
sbb
mov
pop
cld
icebp
shl
xchg
cltd
std
jo
adc
popf
cmc
pop
dec
push
lea
push
jo
loopne
and
jle
sub
cli
nop
push
out
shll
mov
cmp
push
iret
xor
and
bswap
xchg
push
sub
aam
inc
adcl
enter
cmp
mov
adc
inc
sbb
test
mov
lds
cmp
sbb
jno
nop
orb
mov
pop
insl
dec
mov
fs
mov
cmp
adc
lods
arpl
push
sbb
repz
and
push
mov
and
mov
dec
xor
xchg
test
jmp
je
pmovmskb
pop
popa
dec
test
test
data16
sbb
jb
mov
adc
push
pop
out
xor
lahf
xchg
inc
xor
add
test
gs
cmp
insb
jne
mov
insb
push
sbb
enter
xor
iret
xor
insb
stos
pop
fcoml
mov
jnp
stos
pop
popa
adc
xchg
push
sbb
jnp
bound
loope
loope
push
or
push
sbbl
imul
cwtl
dec
mov
sub
xchg
call
shl
xor
je
lods
jmp
push
bound
fdivrs
dec
or
mov
jbe
mov
outsb
cmpsb
pop
xlat
cmp
pop
mov
test
cs
pop
mov
sbb
sub
jg
sbb
iret
outsb
jae
je
xlat
adc
call
sbb
das
jns
mov
out
and
mov
jecxz
jmp
and
sbb
mov
mov
or
out
mov
push
and
shlb
fcmovb
mov
les
in
scas
lds
push
lods
std
jp
xchg
rcrl
mov
repnz
loop
inc
and
test
lods
stos
cs
fisubrl
inc
inc
aas
pop
xlat
add
add
mov
pusha
sbb
mov
out
push
dec
call
xor
mov
sbb
sti
cmpsl
roll
insb
pop
into
pop
clc
xchg
addr16
in
test
call
sub
cli
out
mov
jbe
or
add
dec
leave
lahf
mov
or
das
rcll
sbb
sub
inc
inc
loopne
cwtl
cmpsb
shrb
icebp
sarl
mov
push
add
sbb
lock
mov
xor
inc
movsl
mov
jmp
popf
rorb
mov
loop
or
mov
call
xchg
adc
cli
imul
push
aad
sti
jecxz
sbb
mov
mov
fstps
dec
rclb
pop
sub
inc
test
aaa
mov
out
push
iret
cmp
jae
lea
cmp
adc
sbb
push
std
xor
xor
daa
addr16
push
sbb
jp
cltd
jle
in
rorb
jae
imul
sti
or
add
mov
and
test
add
inc
je
enter
das
fwait
mov
cmp
repz
in
inc
in
mov
push
adc
pop
shlb
sub
loope
jmp
pusha
clc
insl
enter
inc
add
sbbb
dec
cltd
adc
push
mov
pop
dec
sbbl
scas
mov
test
sbb
stos
dec
xor
and
icebp
mov
push
jge
mov
and
jg
sti
std
jns
jmp
push
popf
push
movsb
in
pop
add
pop
push
pop
add
sub
repz
push
pop
sarb
cmovnp
jmp
mov
data16
imul
dec
dec
inc
fimull
xor
ja
mov
nop
test
mov
dec
jno
mov
cmp
stc
push
sti
pop
out
sbb
divb
sbb
fwait
into
mov
mov
pusha
mov
sahf
jmp
out
push
cmp
xlat
pop
jge
cmc
add
jle
and
pop
andl
in
testl
pop
stos
fwait
lock
clc
and
mov
sbb
adc
xor
push
nop
or
cmp
popf
es
lock
jmp
or
xchg
lea
cwtl
dec
ljmp
mov
out
sub
mov
xchg
jecxz
fadds
jo
add
lods
jo
shl
dec
push
fldl
or
xor
and
or
ljmp
movl
jmp
dec
pop
sub
xor
gs
mov
push
out
pop
clc
or
aaa
outsl
mov
addr16
jmp
adc
pop
popf
in
and
ret
add
jnp
loope
bound
ret
cmpsl
pusha
nop
arpl
jo
cwtl
sbb
lods
xor
lods
adc
adc
test
mov
sub
mov
sub
xlat
mov
add
pop
test
and
loop
dec
aad
cmpsb
ficompl
add
pop
inc
and
jbe
sbb
lret
xor
pop
xchg
loope
filds
dec
js
mov
movl
cmpl
mov
jle
jle
add
cmp
stos
dec
adc
loopne
popa
inc
or
clc
mov
test
aad
push
inc
xchg
pop
mov
mov
lahf
int
insl
jle
scas
jge
mov
jb
adc
inc
mov
inc
add
xorl
rclb
xchg
dec
add
outsl
or
jl
shl
or
lcall
call
xor
mov
inc
lds
push
aaa
stc
loopne
hlt
test
in
sbb
js
fldt
jle
inc
jecxz
cs
js
incb
or
test
std
shl
aas
aam
pop
mov
pop
mov
jns
test
pop
xor
mov
in
xchg
out
clc
push
test
out
xchg
mov
ss
or
iret
lods
sbb
out
or
add
cmp
xor
dec
outsl
pop
sub
pop
mov
das
subl
add
shl
dec
pop
std
dec
popl
aaa
rcrb
cltd
imul
cmpsb
push
pop
pop
testw
insb
inc
inc
stos
in
fimull
orb
mov
mov
xchg
sbb
add
lock
push
rolb
gs
pop
fiadds
xor
sbb
mov
pop
js
lock
jbe
shlb
test
fsub
popf
insl
movsb
mov
dec
xor
leave
dec
jmp
mov
sahf
cli
mov
mov
jnp
inc
lods
lea
xor
fdivl
adc
dec
sbb
xlat
repz
fwait
test
xchg
sbb
sub
adc
mov
aaa
add
imul
out
push
shll
mov
xor
push
aam
mov
dec
mov
push
in
scas
in
scas
sbb
pop
scas
into
push
lret
dec
loop
jmp
lds
lcall
jmp
mov
jmp
xchg
xor
mov
and
popf
jecxz
mov
mov
mov
popa
inc
fistps
push
lcall
insl
mov
jge
test
adc
inc
sub
or
push
repnz
ja
add
mov
jbe
imul
popa
add
pop
into
sbb
jl
dec
xor
sub
jno
xor
daa
cmpsl
aas
xor
data16
psllw
pop
mov
stos
cmp
int
insl
lret
lcall
cmpsb
pop
repz
scas
insb
out
cmp
stc
lahf
jle
outsb
std
cmp
or
inc
mov
push
outsb
outsb
ficompl
xchg
subw
dec
je
add
sbb
jg
into
push
shl
cmpsl
dec
mov
push
lods
adc
daa
jg
out
sbb
outsb
iret
rclb
inc
sub
jmp
js
jmp
cld
call
adc
cmp
push
sub
mov
xchg
xor
popaw
cmp
sbb
pop
fsubs
add
mov
ret
rcr
inc
int3
mov
stos
xchg
cmp
in
imul
dec
mov
cmpsl
adc
xor
inc
das
rolb
lret
mov
nop
mov
les
addr16
sub
loopne
pop
cs
add
in
lret
pop
pop
mov
sub
or
and
mov
jns
aad
cltd
repz
xchg
out
mov
lret
mov
imul
cmc
sahf
sbb
pop
dec
adc
mov
or
cmp
inc
mov
shl
xor
test
stos
lcall
dec
xor
lock
cmc
mov
pop
pop
jns
sub
js
bound
out
dec
or
xchg
dec
repnz
repz
sbb
arpl
lods
mov
jo
outsl
ja
not
and
sbb
xor
sti
push
mov
repnz
mov
nop
lods
adc
xor
decb
ret
xor
inc
ds
jmp
loopne
stc
xchg
hlt
leave
and
mov
pusha
pop
adc
push
xchg
sbb
sarl
mov
or
dec
outsw
test
divb
lods
dec
jns
xchg
jl
stos
xor
xlat
stos
dec
mov
xor
test
xchg
sbb
jmp
loope
cmp
pop
loopne
pop
sar
mov
mov
inc
mov
ret
in
push
cwtl
and
in
cmp
fxch
and
cmp
and
sbb
repz
cs
mov
leave
add
and
xchg
sub
jo
in
jbe
sti
pop
pop
popf
cmpsb
pop
and
mov
adc
xchg
outsl
into
or
test
pop
cmp
dec
fs
mov
mov
adc
les
inc
mov
hlt
lds
xor
enter
lret
call
push
xlat
cmp
adc
sub
dec
push
mov
push
sub
add
scas
jecxz
inc
jg
adc
insl
idivl
icebp
sub
mov
loopne
jmp
lea
and
or
bound
jbe
rorb
push
mov
pop
gs
push
movl
rcr
xchg
xor
add
ljmp
fsubp
stos
dec
xchg
dec
adc
pop
cs
xor
sbbl
faddl
rorl
pop
pop
xchg
push
iret
xchg
push
ss
push
sub
mov
xchg
cmc
mov
cwtl
dec
cltd
mov
out
xor
scas
loopne
dec
es
out
test
or
sub
xor
jo
xor
sbb
push
fs
or
loopw
mov
fsubrl
fbstp
enter
xchg
sub
out
cmpsb
das
fdivl
icebp
pop
cmp
fs
cmp
push
and
or
pop
adcl
adc
sbb
sub
and
push
outsb
push
ret
inc
insl
aaa
outsb
stc
jbe
insl
aas
fmuls
nop
adc
sub
jo
pop
adc
das
push
cmpsb
mov
movb
add
mov
outsb
movsl
movsb
sbb
inc
xchg
repnz
adc
stos
in
popl
mov
pop
cmpb
push
sub
push
out
mov
mov
mov
ds
jae
mov
dec
xlat
pop
or
cltd
xor
mov
dec
lret
push
inc
loop
pop
int
lret
fdivrs
lcall
push
js
nop
arpl
sub
inc
and
stos
xor
dec
rcr
fwait
adc
scas
pop
push
mov
sarl
cmp
or
sbb
sbb
addr16
adc
jp
inc
mov
subl
jle
jl
fcmovnb
adc
mov
or
int3
or
into
cli
insl
ficoms
mov
ret
loopne
xor
add
test
loop
adc
cs
lods
jp
mov
xor
push
xchg
xor
pop
mov
xchg
pop
sub
or
lds
sbb
xor
mov
test
fldcw
lea
mov
sar
mov
sbb
std
jg
push
adcl
aaa
in
std
xchg
stc
sbb
jl
int3
outsl
sub
mov
cmc
jp
bswap
ret
lea
inc
data16
or
js
testb
mov
mov
inc
test
pop
sarl
bound
jno
loop
push
pmaxsw
clc
push
test
imul
mov
jnp
std
cmp
jno
bound
adc
loopne
push
push
sbb
test
pop
xchg
das
push
sub
ljmp
loopne
sbb
lret
sbb
ret
xchg
mov
jp
sub
std
jnp
loope
adc
push
out
vunpcklps
flds
xor
lahf
icebp
xor
sub
mov
int3
and
xchg
dec
ja
fiadds
lret
xchg
test
push
clc
lock
xchg
ds
fs
mov
jp
sbb
hlt
daa
or
andl
jp
and
fs
mov
inc
ljmp
inc
call
jb
and
nop
adc
jl
jmp
pop
aam
push
add
add
dec
repnz
insl
mov
xchg
sbb
hlt
jecxz
lods
imul
dec
ds
mov
cs
int3
sub
or
arpl
mov
or
mov
xor
shrb
cmp
popl
jae
push
fadd
int3
jns
pop
pop
xchg
xchg
add
movsl
dec
pushf
in
mov
mov
lcall
jnp
mov
andl
mov
push
sub
mov
push
adc
mov
cmpsl
and
shll
mov
test
or
xchg
aam
bound
ficompl
dec
lahf
psrlw
mov
adc
out
aas
stos
pop
hlt
or
xor
lods
inc
inc
cmp
pop
ds
push
rcll
or
mov
imul
add
mov
popa
jmp
adc
mov
lret
fs
mov
test
mov
aam
jne
mov
out
jge
add
les
xor
repnz
mov
inc
jge
adcl
push
ficoml
aad
pop
cmpsb
and
sbb
stos
jp
fwait
mov
dec
mov
push
and
push
sbb
imul
js
test
or
push
xor
repnz
rcrb
inc
xchg
pop
dec
jp
or
int
in
inc
mov
mov
std
push
pop
mov
out
outsb
cmp
imul
jle
stc
ljmp
mov
pop
test
sbbl
xchg
cmp
call
scas
dec
xchg
xlat
jl
lret
addr16
pop
ffreep
idivl
pusha
push
dec
mov
jbe
jb
iret
jb
repz
mov
dec
rolb
out
in
ror
xor
pop
mov
call
dec
dec
leave
pop
xchg
push
or
sbb
dec
scas
mov
cmpsl
sbb
sets
ja
mov
std
dec
test
xchg
jecxz
mov
rcr
jo
pusha
mov
sbb
outsl
sahf
cmpsb
pop
cs
mov
adcl
adc
test
mov
mov
repnz
insb
lahf
push
inc
popf
or
pusha
sbb
cld
mov
jmp
adc
inc
mov
decl
xchg
mov
dec
leave
sahf
mov
pusha
movsb
call
xor
mov
inc
jle
jo
mov
cmp
or
fcmovbe
loop
xlat
mov
adc
fstpl
dec
repnz
sub
or
or
xor
leave
mov
and
adc
lcall
lret
fwait
xor
pop
psubsb
sbb
test
jne
sti
jge
and
movsb
adc
mov
dec
or
test
pop
scas
or
loopne
decl
jnp
aam
enter
or
std
inc
cmpsl
icebp
mov
scas
xchg
lds
ss
mov
testb
jne
test
int
xor
jo
aad
popf
inc
push
movsl
xchg
dec
mov
je
and
inc
jb
and
ljmp
adc
cmp
adc
add
mov
stc
push
stc
push
sub
mov
mov
xchg
mov
and
and
ret
jl
std
sub
flds
ja
pusha
cli
xchg
pop
in
into
adc
xadd
lret
bound
add
mov
gs
out
dec
jno
add
pop
in
sbb
push
fcompp
ret
es
stos
and
mov
hlt
aaa
inc
addr16
cmpsb
stos
sbb
clc
fucom
sbb
pop
ljmp
lea
jecxz
mov
gs
mov
xchg
push
mov
jmp
add
shlb
sbb
adc
mov
xor
mov
mov
sbb
popf
into
mov
sbb
jg
jbe
pop
pop
inc
sahf
sbb
test
imul
lahf
not
stos
jbe
jb
stos
shr
push
and
ss
int
sub
push
lods
add
xchg
push
stos
les
es
push
and
sbb
push
loopne
sub
jmp
xchg
mov
fistpll
cmp
fs
xchg
out
test
imul
adc
scas
pop
push
pop
mov
adc
cmp
jge
xlat
out
cmpsb
add
call
xchg
jno
jl
mov
jmp
fstps
lret
fstp
mov
frstor
gs
ret
mov
xchg
pop
sbb
shll
push
fiadds
rorb
sbb
pop
stos
jo
scas
rcrb
jmp
iret
insl
sbb
push
cmp
push
mov
ss
cwtl
sub
sub
push
pop
mov
mov
cmp
cmp
stc
movsb
and
imul
cmp
push
rclb
bound
and
jle
push
push
movsb
xchg
cmc
inc
bound
push
mov
fldenv
xchg
decb
push
xor
cli
jecxz
mov
dec
psubw
aam
stos
mov
cmp
sti
push
push
aas
push
in
lock
cmc
aad
cmp
data16
loop
lock
cmp
pop
and
imul
gs
dec
dec
xchg
push
mov
or
sahf
fstps
jns
jl
aaa
sub
xor
push
fucomi
cli
xchg
pushf
xchg
popf
inc
int3
into
push
in
addr16
mov
cli
sbb
sarl
aaa
inc
enter
das
or
enter
in
add
push
and
sti
addr16
jmp
mov
adc
add
mov
dec
arpl
jmp
cli
in
std
or
dec
and
jnp
inc
sbb
inc
push
adc
movsl
push
dec
jle
gs
add
fs
ss
shlb
push
outsb
adc
push
addl
sbb
cld
xchg
sti
jae
jecxz
cld
push
into
clc
push
test
dec
adc
leave
jl
jmp
cmpsl
xor
mov
scas
ja
cltd
test
fcmovnbe
push
adc
add
ficoml
jne
xlat
fcompl
adcb
mov
adc
xor
inc
hlt
xlat
push
lahf
sarb
mov
dec
scas
and
cmpsb
mov
dec
push
add
sbb
test
xchg
mov
dec
dec
into
fldl
cld
xchg
push
rcl
aad
cld
sub
cli
in
popa
lcall
adc
out
jp
cmpsb
test
outsb
mov
ja
dec
inc
sub
cmp
stc
shrl
add
sbb
mov
test
sbb
xchg
mov
sub
movsb
dec
pop
jb
cmp
inc
jns
xchg
sbb
jno
ret
lods
nop
push
int3
jmp
test
inc
and
ja
mov
subl
or
mov
mov
jle
sbb
lock
jmp
xchg
aaa
push
sahf
sub
dec
scas
jecxz
mov
dec
push
adc
xor
push
addr16
decb
cmc
lods
pop
out
adc
lahf
inc
ds
outsl
aaa
sbb
stos
scas
sti
sahf
je
or
pop
cmp
ja
adc
mov
adc
mov
sbb
repz
lock
pop
adc
jne
add
sub
js
push
cmp
cmp
fbld
add
gs
leave
movsb
mull
dec
js
scas
das
pop
add
mov
mov
adcl
xor
fisubrl
sub
inc
lea
shl
sub
flds
sar
mov
mov
std
mov
xchg
faddl
les
mov
rorb
mov
mov
in
iret
and
outsl
add
adc
mov
mov
pop
jmp
inc
sbb
repnz
or
arpl
or
mov
into
sahf
fisttpl
mov
lea
out
sbb
mov
addr16
cmp
mov
dec
mov
push
xchg
out
xor
inc
cmpsb
push
jge
ja
insb
out
jle
ficompl
add
xor
adc
pop
add
push
adc
ds
aaa
cld
popa
cld
mov
sahf
out
jl
push
stos
xchg
cmp
and
cmpsb
and
xchg
stos
and
in
sub
mov
js
or
hlt
stos
in
jmp
sahf
add
inc
push
mov
ret
sti
insl
push
mov
fldenv
adc
es
sbb
mov
nop
popa
loopne
jle
jae
sub
test
out
xchg
sub
mov
aad
lock
das
pusha
sbb
aaa
cmp
mov
cmp
repnz
mov
jp
cmp
push
loop
enter
xchg
es
mov
std
jne
in
sub
xchg
sbb
inc
pop
popa
push
mov
test
cmpb
sbb
mov
test
mov
ret
stos
in
pop
out
pop
fstl
and
cmp
ss
sbb
and
mov
adc
testl
inc
pop
or
sbb
mov
inc
jle
push
xchg
ret
mov
dec
pop
pop
mov
add
lahf
dec
jbe,pn
stc
xchg
cmpsb
stos
mov
js
adc
fmull
push
out
shrl
cmp
push
sub
push
test
dec
loop
jp
add
dec
xchg
dec
in
por
out
dec
jp
roll
push
pushl
xchg
add
shl
in
aad
aam
lahf
fldl
and
adc
cwtl
xchg
sar
lret
inc
or
jmp
inc
mov
shrl
mov
sbb
mov
xor
ja
mov
shll
jo
in
out
imul
ds
lods
mov
push
or
and
xor
test
push
push
loopne
adc
pop
inc
std
lods
xchg
loop
xor
rclb
xor
jne
repnz
xchg
mov
cwtl
xchg
test
pop
outsl
xor
pop
push
lea
insb
ret
dec
int
popa
lods
mov
in
stc
jb
enter
sub
cmpsb
enter
idivl
cs
incl
aas
jecxz
sub
lcall
inc
mov
fld
cmp
lret
push
xor
pop
sbb
or
in
outsl
in
xchg
outsl
mov
jl
addb
insb
out
rorb
nop
enter
popf
mov
movsl
push
clc
sbb
fucomi
mov
xor
jae
sbb
push
cmp
cmp
arpl
cmpsb
dec
inc
addb
xchg
rorb
outsb
clc
mov
jl
mov
fs
imul
subb
cld
mov
cmp
dec
cmp
mov
movb
into
rorb
jmp
cmp
jnp
imul
dec
add
dec
int3
data16
in
inc
jmp
mov
sbb
daa
clc
out
xor
xchg
sub
fistpll
cwtl
js
leave
sbb
lock
test
aas
pop
stos
jmp
mov
inc
mov
fsubrl
jno
or
shll
pop
mov
arpl
js
or
pop
fdivs
pop
dec
adc
fmul
movsl
inc
mov
mov
rcll
cmp
cmp
push
sub
and
xor
push
xchg
test
mov
sbb
push
cmpsl
push
mov
dec
inc
inc
nop
pop
pushf
filds
cmp
lea
and
cs
pop
xchg
cmp
dec
adc
mov
sbb
test
mov
xor
xchg
or
test
xor
mov
pushf
jmp
push
jge
loopne
outsl
aad
xor
sbb
cmpsb
cmc
aas
or
mov
jne
stc
add
cld
mov
xchg
sub
or
jmp
cmp
sub
xchg
out
and
and
sbb
pop
arpl
mov
cmp
xchg
adc
push
xor
add
pop
push
fwait
jne
loopne
mov
addr16
pushf
push
mov
mov
arpl
push
xchg
mov
mov
jns
mov
test
mov
rorb
test
jbe
in
pop
outsl
pop
in
repnz
or
add
insl
cmp
sbb
sub
push
add
out
mov
ret
jmp
stos
arpl
out
movb
xchg
mov
out
out
mov
push
push
inc
in
add
enter
lods
popa
filds
aad
call
aad
cmp
cmpsb
mov
mov
movsb
les
xor
jmp
js
push
push
xor
pop
adc
push
repz
add
pusha
into
sub
arpl
jmp
enter
mov
outsl
andb
das
jmp
xor
gs
ds
ss
jg
inc
aad
add
lock
popf
jb
addr16
adc
push
inc
jge
xchg
sbb
out
cmp
fiadds
push
lea
mov
jg
icebp
xor
leave
call
cs
jb
adcb
push
out
push
and
addr16
jnp
stos
in
lahf
sbb
fs
out
mov
jno
sbb
ret
sbb
push
and
lods
jnp
popf
icebp
in
pushf
hlt
or
aad
mov
faddl
fistl
inc
pop
imul
cmp
xorb
mov
sub
pop
shlb
sarl
mov
and
inc
loop
adc
cmp
lds
lahf
in
mov
cmpb
xchg
push
xor
add
mov
scas
cmp
pop
fcomp
dec
xor
xor
das
inc
xchg
cltd
adc
xchg
imul
cmp
fistl
xor
push
daa
call
lret
or
orb
jecxz
test
mov
popf
test
loope
lods
faddl
push
sahf
push
xor
xor
push
xor
inc
je
icebp
fwait
adc
aad
mov
and
jno
orb
cwtl
cld
scas
jle
xchg
rcrb
dec
ljmp
inc
dec
inc
push
loopne
fimull
pop
cmpsb
fucom
cmp
inc
mov
inc
ja
insb
push
sub
andb
addl
out
jecxz
xor
sbb
rclb
jne
repz
xchg
xor
pop
add
enter
call
loope
cld
and
mov
fadd
jno
push
pop
outsl
dec
daa
push
pop
sub
mov
cmp
or
scas
test
pushf
push
push
call
push
cwtl
dec
iret
xor
lret
neg
mov
jbe
push
jb
test
pushf
dec
cmp
mov
arpl
sbbl
repz
fisubl
adc
ljmp
fidivs
mov
das
incl
and
lock
in
fcmovnu
orl
cltd
mov
push
sahf
negl
bound
mov
add
mov
sbb
pop
cmp
inc
cmp
xchg
aas
jl
mov
les
mov
jecxz
and
daa
test
push
xor
mov
sbb
xchg
std
adc
push
pop
push
daa
cmp
sub
cmpl
out
shll
daa
xor
in
xor
loope
outsb
cmpsb
jecxz
in
out
cmc
lds
outsl
pop
fsubl
jp
mov
adc
adc
dec
pop
cmpsb
jo
jl
bound
xor
dec
sti
sbb
sbb
xchg
scas
loop
mov
sarl
sti
cmp
xor
or
stos
or
nop
rcrl
dec
and
jae
xlat
pop
sub
flds
mov
inc
inc
cmp
das
ljmp
icebp
data16
aad
test
sahf
data16
cmp
xlat
adc
cltd
xor
fldt
fbld
xor
repnz
adc
mov
push
inc
mov
cmp
sbb
sbb
lods
and
fdivl
or
xchg
out
lcall
call
xor
shl
push
or
sbb
xchg
push
fildll
pop
lahf
sbb
push
jae
test
insb
mov
cli
divl
jbe
sbb
sbb
inc
xor
jmp
popl
lret
sbb
cli
pop
les
je
mov
jg
sub
enter
movsl
xor
dec
fstpl
mov
inc
shrb
test
in
in
negb
mov
mov
iret
xor
mov
mov
or
adc
movsl
mov
xchg
out
mov
xor
sub
xchg
xor
ret
ret
aad
jb
jg
jmp
mov
neg
ja
sbb
mov
add
scas
daa
pop
mov
cli
cmp
push
shl
insl
push
sbb
mov
fwait
mov
out
shll
std
mov
inc
inc
cmp
aas
pop
or
jp
idivb
fadd
dec
rcll
lock
pop
jno
loopne
and
jno
cmpsl
fcoml
pop
cmp
ds
cmp
mov
cmp
and
hlt
icebp
loop
xchg
test
iret
sarb
mov
mov
pop
push
scas
push
or
pop
int3
xchg
dec
mov
push
das
out
jno
lds
cld
xchg
adc
shlb
inc
jns
daa
sub
stc
add
or
fsub
aad
pop
xlat
jno
push
loopne
aam
loope
xchg
jb
dec
sub
cmova
mov
aas
sub
out
test
test
lcall
pushf
pop
mov
inc
loopne
cmp
jnp
sbb
cmp
mov
mov
xchg
sbb
xor
inc
pop
stc
dec
pop
ja
push
hlt
int3
aam
mov
mov
mov
jne
cwtl
pop
mov
jbe
cmp
jl
mov
xor
ficompl
cltd
dec
mov
xor
sub
cli
xlat
adc
pushf
out
addb
jle
xor
ret
xor
and
sub
push
and
add
ljmp
mov
faddl
data16
and
cmpl
push
mov
out
xor
in
sub
subl
mov
addr16
int
xchg
mov
lods
xchg
insb
cli
sbb
shrb
add
xlat
and
sahf
call
in
repnz
mov
aam
mov
sbb
jno
test
cmpsl
fs
inc
mov
js
imul
out
loop
jb
jp
mov
mov
push
sbb
jae
repz
pop
mov
fsubrs
out
mov
ja
js
pop
mov
xor
lock
into
cli
push
adc
sarb
xor
pop
adc
cmp
xchg
pop
xchg
xchg
movsl
aad
sub
mov
cli
or
sub
fwait
test
add
dec
pop
inc
sub
test
push
inc
cltd
stc
push
or
clc
leave
leave
pop
loop
adc
inc
in
xchg
ds
push
ret
xlat
or
rcl
cmp
idivb
cmc
jno
rcl
or
outsb
xor
aam
data16
jg
inc
sbbl
out
lods
icebp
inc
mov
xchg
aas
sti
sub
xchg
gs
or
mov
stos
xorl
call
xchg
ss
pop
stos
cmpsb
in
inc
les
or
test
aas
jo
cmp
xor
out
pop
sbbb
fadds
repnz
aas
sbb
mov
icebp
sbb
or
mov
add
adc
loope
mulb
enter
mov
iret
xor
fcompl
sub
cmpsb
in
push
push
into
cld
lahf
mov
in
xor
ret
in
mul
cmc
or
xchg
popf
or
mov
les
int3
add
push
cmc
mov
je
cs
aam
pop
or
push
push
jp
fistpll
jge
int3
movsb
jmp
fidivrl
outsl
lcall
cli
or
arpl
xchg
jb
leave
das
mov
scas
imul
push
int3
negl
cmp
mov
cs
lret
scas
fnstcw
or
fnsetpm(287
push
sahf
cmp
cmp
loopne
push
test
cli
mov
or
add
or
jne
jle
xchg
sub
pop
aaa
and
inc
or
and
mov
out
mov
push
push
call
xor
jmp
and
test
es
mov
aaa
jbe
imul
hlt
stos
sarl
push
inc
cmpsb
montmul
cmpsb
orb
and
push
xchg
pop
push
cmp
push
rorb
rorb
clc
je
ds
stc
mov
jp
lock
rcl
push
push
xor
rol
cmp
std
xor
xor
call
add
test
dec
and
dec
aad
dec
addb
lret
mov
cltd
push
mov
sbb
inc
sarl
fisubl
lret
arpl
aaa
jmp
mov
inc
movsl
in
and
test
mov
test
fucomp
loopne
and
aas
daa
push
mov
inc
arpl
aad
add
cmpsb
xchg
les
or
cli
inc
lcall
adc
loope
lahf
clc
dec
lahf
ss
out
dec
ss
push
jae
mov
mov
dec
push
adc
scas
filds
and
pop
aad
mov
push
or
cld
lods
es
in
pop
or
aas
outsl
sti
ret
add
incb
lock
dec
pop
inc
out
repz
fistpll
imul
fsubr
cs
push
arpl
push
fdivrl
out
loop
or
iret
shrb
pop
mov
ss
cld
mov
pusha
pop
and
xchg
addl
gs
jne
xchg
cmp
fstpt
mov
and
imul
pop
dec
adc
sub
ret
adcb
adc
clc
add
js
fbld
mov
mov
and
mov
pop
xchg
adc
push
cld
ljmp
fcmovne
inc
jae
xchg
jle
and
and
fcomi
inc
and
popf
pop
popf
pop
cmp
dec
jecxz
mov
push
dec
in
outsb
ss
rorb
jae
xchg
inc
addb
jns
loopne
or
je
arpl
sub
shr
sub
lret
sbb
xor
adc
cmp
nop
call
xlat
pop
lock
mov
sub
fcoms
lret
jne
jne
add
jecxz
mov
call
out
pop
fildl
mov
lock
loopne
addl
repz
pop
sub
xchg
add
mov
inc
pop
jecxz
arpl
mov
sbb
mov
pop
loop
in
push
mov
sub
mov
mov
cwtl
sbb
mov
fisubrs
imul
ljmp
mov
shl
mov
in
test
data16
imul
push
lods
jbe
jle
jns
cmpsb
imulb
outsl
lods
xlat
cs
mov
aad
mov
roll
leave
ret
pop
sbb
jmp
leave
in
sub
xchg
icebp
data16
inc
mov
roll
mov
imul
mov
pop
test
and
inc
sbb
push
mov
rcll
jbe
xchg
repz
add
push
mov
mov
sbb
push
rcrb
stos
pop
or
lret
fidivs
lock
pop
das
jmp
fldcw
mov
imul
insl
push
and
pop
div
jnp
lds
push
lods
cli
lcall
cmp
sub
inc
test
jne
shrb
adc
lods
mov
adc
dec
or
cli
cmpsb
es
inc
jbe
xor
lret
sub
xchg
ficoms
or
pop
jno
xchg
aad
into
mov
dec
aam
push
dec
dec
mov
push
pop
arpl
pusha
mov
bound
push
mov
xchg
jns
leave
xor
mov
jmp
xchg
and
scas
xlat
push
add
into
sub
dec
xchg
int3
mov
jnp
cmpsb
jp
sbb
pop
test
pop
add
jb
cwtl
into
adc
jne
pop
sbb
movsl
test
cmpsb
and
inc
adc
cmp
popf
hlt
repz
sbb
scas
das
cs
push
jge
shrl
jmp
add
push
push
push
repz
into
std
or
repnz
rcl
pop
testb
xchg
das
jo
arpl
fidivs
or
ja
xchg
rcll
in
lods
push
and
mov
dec
sahf
xchg
out
lret
pushf
jl
ss
ljmp
xor
les
outsl
ret
jno
hlt
mov
jne
daa
fucom
mov
icebp
shll
or
pop
arpl
dec
mov
xchg
les
xlat
push
bound
jnp
xchg
mov
mov
push
arpl
repz
inc
push
shll
cmpsl
inc
pop
or
inc
pusha
mov
sarl
mov
sub
xchg
jge
rcr
cmp
popf
movsl
cmp
pop
sub
or
fneni(8087
outsb
jmp
xchg
or
aaa
sbb
or
xlat
nop
and
in
mov
pop
dec
mov
add
popf
imul
xchg
or
lcall
xor
lahf
mov
push
lods
cmp
push
xchg
ds
aam
fdivrl
les
dec
adc
fidivs
fs
fwait
shll
sbb
jbe
dec
sti
movsl
mov
mov
push
sub
xchg
das
stos
fldt
mov
outsb
scas
jl
xchg
hlt
sbb
add
subl
xorb
push
mov
outsb
xor
fcompl
ja
fwait
repnz
xor
pop
jmp
xor
lret
jmp
out
cmp
adc
fs
xchg
inc
mov
mov
lods
leave
repnz
scas
in
out
push
inc
sub
sub
fdivrl
lds
popf
out
mov
sahf
push
rcrl
sub
inc
sub
inc
mov
mov
rolb
imul
pop
dec
shl
pop
ror
mov
lahf
push
lds
loope
std
and
cmp
xchg
clc
das
xchg
loop
aas
test
int
sbb
or
jmp
dec
cmp
sarl
adc
sub
insl
outsl
xor
gs
inc
jne
push
adc
mov
sarl
sub
popf
lret
mov
enter
cmp
inc
xor
jb
fs
xchg
ficompl
sbbb
pop
jnp
or
sbb
mov
js
jne
fcmovnb
popf
dec
adc
sbb
mov
xchg
dec
add
inc
call
pusha
lea
leave
and
sar
dec
pop
mov
test
cmpsb
xchg
add
sbb
adc
mov
mov
loop
pop
mov
jle
lods
pusha
sbb
or
rcrb
dec
aas
fs
cmp
rcrl
mov
dec
inc
sbb
pop
jp
mov
cwtl
hlt
mov
push
xchg
scas
add
in
or
xchg
cltd
faddl
sbb
gs
lcall
arpl
sub
paddb
sbb
cmpsb
cmpsb
cmp
stc
je
lret
mov
aam
pop
jns
adc
sub
and
loop
pusha
mov
aam
cmpsb
mov
es
std
or
and
mov
dec
cmp
lds
mov
mov
bound
push
mov
xor
je
mov
lcall
lcall
sub
xchg
jo
sbb
and
mov
iret
in
adc
data16
popf
or
sbb
jb
popf
out
jne
addr16
sbb
jnp
cmp
add
pushf
xor
imul
sub
loop
clc
stos
jae
sti
sarb
adc
mull
mov
outsb
xorl
xchg
sar
add
jmp
dec
cltd
ret
sbb
sti
into
clc
psubb
test
push
sub
add
adcl
push
and
scas
rol
std
cs
sub
dec
add
sbb
jo
pop
in
out
hlt
loope
sub
pop
movsl
movsb
je
ficompl
mov
test
cmc
jmp
ljmp
mov
adc
ja
lret
and
sbb
fxch
out
shll
out
inc
jle
and
lods
mov
iret
mov
mov
cmp
outsb
inc
test
jecxz
pusha
or
xchg
das
cmp
push
cmp
xor
push
push
xor
rcr
negb
pop
cmp
int3
and
cmpsl
int
decl
cmpsl
out
xor
adc
arpl
sub
aam
jo
jecxz
jbe
inc
xor
sahf
mov
mov
xorl
pop
loop
sub
jg
scas
insl
into
mov
jp
dec
insl
test
nop
or
ds
jmp
push
stos
lods
movsb
out
scas
inc
push
jae
add
sub
jae
fistl
lock
add
cld
xchg
add
rclb
mov
mov
mov
testl
lret
mov
push
push
adc
imul
cmp
imul
mov
fiaddl
sti
pushf
dec
test
dec
pop
add
cmpsl
pop
adc
data16
in
inc
outsb
enter
rcrl
loopne,pt
push
jl
or
fwait
sbb
mov
mov
push
pop
scas
push
movsb
pop
cmp
dec
push
push
out
inc
lret
xor
mov
enter
jl
sub
imul
xchg
arpl
xlat
sahf
xor
add
adc
ja
xchg
cmp
and
inc
imul
xchg
jae
popl
xor
add
lahf
pop
sbb
stc
xchg
pop
lds
out
bound
stc
and
jno
xchg
sahf
push
aas
adc
test
inc
pop
movsb
mov
in
or
fsubr
and
and
push
jns
ret
dec
aas
mov
jno
fstp
int3
xor
repz
mov
fldcw
push
mov
addr16
mov
or
cwtl
push
and
pushl
inc
ja
sbb
outsb
in
shll
cmp
sarl
and
or
add
pusha
inc
rorl
jmp
arpl
dec
xor
icebp
stos
pop
push
jne
stc
mov
push
xchg
and
mov
xor
lea
pop
insb
loope
mov
mov
aaa
insl
mov
loope
or
stc
jge
shl
js
mov
fstpt
movsb
xlat
int
stc
push
jbe
in
cwtl
pop
popa
jl
and
andb
push
inc
adc
orl
jmp
addl
mov
notl
dec
sub
fisubl
int
leave
xor
lds
adc
dec
cmpsl
and
in
inc
inc
icebp
xchg
push
mov
inc
xchg
fildl
push
and
cmp
mov
repz
xchg
jge
mov
pop
mov
movsl
jp
lretw
pushf
sbb
mov
int
cmpsb
jmp
int3
push
push
xchg
and
es
int3
pop
mov
leave
mov
mov
outsb
ljmp
jp
test
xor
out
xchg
xorl
sub
aaa
iret
lcall
inc
out
leave
lahf
pop
xor
rolb
adc
imul
sbb
pop
jle
into
jnp
leave
sub
and
and
jl
je
dec
clc
pop
jns
inc
mov
dec
adc
mov
inc
inc
adc
sub
sbb
or
loope
xor
xor
or
mov
xor
pushf
insb
xchg
idivl
adc
jne
cmpsl
push
ja
data16
cmp
nop
lock
cmp
test
loopne
mov
mov
cltd
and
sbb
push
rorl
jae
or
dec
icebp
outsl
testl
mov
cld
mov
jmp
mov
ret
jns
sarl
orl
add
popa
mov
jge
mov
xor
fsubs
mov
jne
idivl
xchg
cltd
popa
dec
sti
loopne
add
xchg
nop
pop
out
repz
adc
scas
inc
mov
xchg
std
or
ds
mov
push
pop
sub
nop
mov
in
sti
cmp
inc
fstl
mov
push
lds
fidivrl
push
xchg
fwait
cmpsl
pop
into
xchg
bound
or
dec
sub
push
sub
adc
add
adc
loopne
data16
adc
in
popa
andb
outsb
dec
or
jmp
imul
adc
mov
add
pop
into
inc
inc
xchg
and
pop
mov
mov
mov
test
subl
pushf
xchg
out
xchg
adc
insl
aad
imul
dec
inc
dec
dec
push
cld
or
inc
shlb
xor
je
mov
cmpsb
test
xchg
imul
out
jle
rcll
push
shlb
add
stc
add
imul
in
pop
adc
and
jg
cmp
dec
cmp
sbb
mov
aaa
push
and
imul
xchg
mov
ljmp
mov
mov
pop
xor
mov
or
add
outsl
mov
add
inc
jp
stos
aaa
jl
xchg
inc
pmulhuw
test
push
or
dec
cld
adc
dec
fs
insl
cmp
lret
add
dec
cli
and
cmp
ss
scas
sbb
push
nop
pop
or
jo
out
lret
cmp
or
aaa
xchg
out
loopne
push
sub
and
jb
push
xchg
cld
mov
lcall
repnz
dec
inc
fsubs
or
add
jmp
sti
lock
cltd
loop
scas
xchg
fcmovne
loope
out
pop
adc
fisttps
in
adc
mov
loop
dec
rclb
xchg
lds
orl
jno
cmc
sub
dec
imul
xlat
inc
cwtl
or
adc
outsl
out
and
out
mov
outsb
add
lods
push
into
xor
jle
mov
cld
adc
in
scas
addb
push
pop
cmp
int
or
setg
inc
fucomp
add
sbb
cmpsl
jnp
mov
stos
scas
mov
aaa
ljmp
push
jae
mov
jne
xchg
xor
sub
aas
jo
sbb
adc
fiaddl
dec
fisttpl
cs
cli
xor
mov
idivb
and
out
dec
jns
push
jg
jns
out
inc
sbb
adc
push
inc
jb
test
out
push
fdivrs
testl
aad
mov
lret
cltd
fstl
mov
cmp
mov
mov
push
stc
dec
mov
or
cmp
shll
je
arpl
imul
imul
inc
mov
dec
cmc
mov
adc
stc
mov
out
sar
fcoml
movsb
incl
pop
aas
mov
push
push
or
sub
inc
add
mul
shll
adc
int
push
push
cld
jge
out
leave
fisubrl
and
scas
aad
xchg
mov
daa
loop
loope
or
insl
xlat
lea
fistpll
push
hlt
mov
es
push
or
popa
xor
mov
pop
scas
stos
rcr
inc
fnstcw
xchg
mov
sbb
jl
mov
push
ficoms
sub
jecxz
xchg
insl
ljmp
fdivrs
leave
ss
cmp
mov
fldt
mov
pop
sub
dec
inc
imul
adc
lock
mulb
sub
cmpsl
mov
js
lcall
mov
test
sub
jge
and
mov
test
stos
ds
cmp
mov
xor
sub
inc
pop
out
popa
pop
lcall
es
mov
aad
bound
aam
mov
jbe
lcall
push
xor
sbb
pop
cmpb
xor
jg
test
test
aad
push
mov
dec
in
xor
push
aad
jp
imul
call
rol
js
pop
lods
dec
sub
sbbb
jns
cmp
test
in
into
flds
add
mov
dec
mov
imul
mov
idivb
outsb
in
lret
out
adc
in
popf
push
rorb
sub
test
scas
sbb
mov
iret
jns
loop
adc
inc
mov
pop
xor
xorb
xor
push
mov
add
xchg
push
cmp
in
insl
lret
lret
aaa
jg
mov
ljmp
data16
lds
push
cs
movsb
push
push
popa
fsubrl
mov
xorb
popa
adc
jae
scas
imul
imul
adc
lret
mov
lods
pop
rcll
ds
loope
stos
mov
push
pop
mov
jbe
repnz
fwait
mov
adc
xchg
fisttpll
insb
cmc
and
or
sub
and
fbstp
fnstsw
outsb
nop
xchg
repnz
test
mov
xchg
out
arpl
stos
mov
cltd
mov
mov
sub
add
test
pop
lea
pusha
fcompl
push
adc
lods
add
leave
lds
jns
movsb
jecxz
ss
push
pop
xor
std
inc
mov
xchg
and
add
loopne
je
mov
push
pop
pop
shr
add
sbb
mov
adc
imul
mov
rclb
cld
and
sub
je
mov
or
in
or
aam
xchg
push
pop
mov
dec
or
adc
push
pusha
dec
idivl
test
jmp
ud0
pop
mov
test
xchg
jo
das
aaa
jl
xchg
jne
pop
loopne
jbe
jl
dec
pop
dec
push
js
repnz
mov
mov
or
sbb
ds
addb
adc
mov
fwait
lods
hlt
jge
xlat
stos
mov
shll
or
cmp
or
stc
xor
movsb
je
aad
and
pop
ret
xchg
and
adc
jl
mov
mov
scas
lods
push
mov
ds
or
mov
and
dec
cvtps2pi
in
stc
xchg
cltd
xor
in
jno
or
push
push
sahf
addr16
or
out
push
stc
test
addr16
dec
fldenv
orl
enter
mov
pop
sbb
mov
ds
out
jae
cli
fstl
fs
test
shlb
out
lods
xchg
cmp
mov
jge
js
mov
sbb
xchg
ret
mov
xor
mov
dec
cmp
fiaddl
pop
js
inc
mov
rol
mov
or
test
push
inc
sbb
inc
sysexit
jecxz
jmp
add
data16
add
or
stos
mov
push
popa
mov
push
leave
out
mov
sbb
dec
ljmp
jl
push
push
jo
in
subb
dec
stos
dec
lcall
repnz
test
ljmp
loope
pop
lret
jb
ret
mov
aam
push
xchg
jae
pop
fisttpl
or
push
xchg
out
and
lock
sbb
imul
popa
psubusw
pop
or
aam
dec
dec
movsl
adc
cmp
jns
mov
jne
xchg
mov
repz
popf
inc
fnstenv
push
jo
cmp
aam
imul
xchg
and
push
movsl
sub
aam
orl
rolb
mov
fsubrl
ret
shl
sbb
cmc
add
dec
inc
idivl
dec
xchg
fnsetpm(287
mov
cmc
cmpb
jmp
addr16
adc
xchg
xor
mov
imul
sub
xchg
push
add
and
mov
push
xor
out
push
push
stos
in
insb
dec
rolb
jg
int3
dec
mov
iret
sub
lea
int
dec
nop
mov
xchg
orb
fcomi
adc
out
je
pop
repnz
add
aas
adc
lods
nop
adc
cmpsb
jo
jne
pop
shll
sbb
mov
sbb
or
sbb
insb
imul
outsb
mov
adc
xchg
dec
or
jg
cmp
sbb
xchg
addr16
sub
daa
insb
xchg
mov
mov
out
je
std
ficoml
sbb
jbe
hlt
mov
pop
xchg
pop
popa
push
pop
mov
and
push
jae
mov
mov
sub
enter
loopne
mov
xchg
out
and
popa
push
sbb
movsl
je
inc
and
out
shr
lcall
addb
or
dec
cmpsl
decl
cmc
loop
popf
cmpsl
shr
outsl
in
testb
ja
mov
repnz
mov
cmp
rorb
pop
test
xorl
pop
pop
dec
in
push
and
cld
and
out
mov
or
lds
fistl
mov
pop
sbb
sbb
and
sub
xor
mov
stos
js
clc
lea
mov
inc
aas
aam
mov
fdivrp
frstor
test
cmp
sti
push
add
mov
out
int
dec
fsubrl
jmp
cmc
jb
jbe
push
test
pop
adc
and
fcomps
adc
xlat
rcrb
insl
subb
popa
jnp
jmp
jns
push
mov
pushf
xchg
mov
push
stos
shl
jl
addr16
cwtl
lahf
cmp
cmp
add
add
mov
mov
dec
adc
std
xchg
loope
mov
js
out
adc
sbb
xchg
mov
in
fidivrs
gs
int3
test
cmp
pop
push
xor
and
fs
mov
mov
inc
call
mov
mov
pop
sbb
cli
inc
aad
lds
ror
test
or
lea
pop
test
xor
loope
aas
jecxz
ret
jle
fidivrl
add
scas
xor
mov
fdiv
cmp
repnz
or
cwtl
sti
push
lret
add
rcll
lea
jbe
adc
loope
push
sub
lods
icebp
insb
sub
aam
popa
out
xor
movsb
sub
fdivl
sub
popf
jecxz
mov
scas
sbb
pop
mov
test
shlb
jae
fs
int
ja
and
fwait
xor
mov
xor
cmp
jecxz
push
sub
cmpsb
push
test
gs
sub
mov
xchg
out
jp
js
push
push
ss
sub
and
sbb
shlb
or
mov
inc
out
les
mov
lcall
sub
outsl
mov
add
xchg
cli
push
push
scas
mov
mov
arpl
rcrb
push
hlt
inc
imul
gs
testl
sub
rcl
test
test
inc
dec
inc
inc
lock
or
add
xor
movsl
cli
repnz
sub
pop
push
imul
in
push
mov
enter
inc
loopne
outsl
mov
fildl
std
inc
and
pop
pop
add
sbb
fcomps
adc
mov
nop
mov
push
scas
or
push
pop
in
lcall
sahf
loop
jecxz
xor
or
out
fsubrp
scas
repnz
or
inc
inc
inc
cli
and
in
pop
pop
gs
mov
js
iret
cwtl
scas
imul
cmp
xchg
lret
cmc
idiv
sahf
cli
xor
mov
shll
jge
dec
scas
mov
test
cmpsb
and
mov
gs
mov
cmp
ds
outsb
ja
adc
cmp
ljmp
filds
sbb
push
xorb
aam
push
mov
or
out
imul
xor
mov
cld
in
cmpsl
dec
mov
fists
test
addr16
js
mov
ja
es
pushf
and
ss
cmpsl
lahf
sbb
shll
push
dec
push
push
lea
movsb
mov
xorb
jge
lods
js
mov
ss
fwait
adc
outsb
mov
sbb
cmc
insb
enter
out
and
cmpsl
adc
pop
pop
xor
jo
jp
imul
push
jns
pop
cmp
xor
cmp
add
mov
push
add
ds
sub
and
cli
mov
xchg
movsb
jnp
xlat
sub
sbb
adc
data16
aaa
rclb
daa
push
mov
ljmp
adc
clc
xor
lods
cmp
jle
mov
stos
inc
push
inc
mov
inc
enter
jae
or
ja
ret
in
sub
bound
jg
pop
fldcw
cs
loop
push
jno
nop
jmp
mulb
sbb
or
enter
or
dec
test
add
pusha
cmp
in
stos
push
pop
or
int3
cmp
pushf
pop
stos
jo
inc
repnz
pop
sti
je
xor
repnz
adcl
jg
enter
addb
into
sti
jnp
bound
add
ret
mov
mov
inc
ljmp
sbb
dec
addb
add
fisttpl
stc
cmp
xchg
cmp
out
daa
movsl
cmp
loopne
bound
sub
dec
test
cltd
pop
xchg
aad
jge
inc
sub
sti
cld
dec
xor
aas
jnp
sbb
sti
aas
mov
cwtl
out
adc
fldenv
out
hlt
mov
inc
sub
enter
arpl
jl
mov
or
fwait
sahf
insb
popa
cmpsb
or
jecxz
pop
fcmovb
jg
test
xor
mov
outsl
outsb
xchg
mov
and
addb
lock
sub
shlb
clc
adc
mov
scas
push
sub
fimull
loop
cmpsl
xchg
dec
push
cmp
jns
ret
xchg
pusha
test
adc
mov
imul
pop
dec
push
mov
jl,pt
outsl
testb
arpl
or
push
sbb
cmc
cmpsb
xchg
xor
sahf
sbb
daa
cmp
push
mov
enter
aaa
popf
test
mov
dec
mov
stc
jecxz
lea
call
xchg
fwait
cmc
push
sbb
mov
divl
sahf
adc
xchg
cmpsl
movsb
das
stos
jp
push
rcll
xchg
add
cmp
add
mov
cmpsb
lds
aaa
cmp
sahf
push
inc
jge
adc
aad
xchg
push
mov
or
shrb
xlat
mov
or
aad
ds
xor
push
xchg
jne
lcall
scas
xlat
pusha
mov
inc
sahf
ror
mov
jo
mov
xchg
subb
leave
rcll
fisubs
out
push
or
sbb
insb
xchg
or
in
icebp
dec
sbb
stc
dec
mov
dec
inc
movsbl
ljmp
lods
ss
jo
aam
mov
mov
je
jnp
mov
or
repz
fs
cs
lods
mov
into
fcmovnb
arpl
dec
dec
cs
adc
dec
jge
pop
sub
and
jl
and
cs
sti
push
clc
or
xorl
cltd
je
push
ds
adc
loope
jbe
mov
xchg
imul
adc
mov
cmp
jg
addr16
aaa
mov
xchg
lret
push
aad
push
xchg
int3
cmp
sahf
std
xor
ja
push
bound
shlb
xor
outsb
sti
scas
aas
out
mov
xchg
add
faddp
mov
aas
test
add
in
pop
push
push
loop
icebp
repnz
inc
mov
mov
mov
mov
and
out
stos
push
mov
ret
fdivs
cmp
int3
aas
sub
daa
rorb
in
ret
jb
mov
jl
inc
out
test
xchg
add
rol
mov
pop
std
outsl
jb
xor
lret
mov
outsb
hlt
mov
adc
pop
and
sbbb
xchg
mov
cmp
cld
and
lods
cld
sti
adc
ret
cmp
cli
xchg
pop
sti
stos
dec
sbb
bound
imul
pop
add
insl
xor
cmp
jmp
xor
das
mov
cld
adc
test
lret
pop
int3
movsl
push
test
inc
gs
mov
mov
mov
insb
cmp
pop
push
inc
cmp
test
jmp
push
push
fiadds
in
scas
adc
inc
push
cmpsb
mov
outsb
jb
das
cmp
scas
xchg
movsl
mov
xor
and
jp
shlb
ret
mov
pop
shl
jmp
jge
mov
cmp
lret
sub
jl
mov
lea
add
repz
ret
je
outsb
push
pop
sub
pop
movl
cmp
aas
xor
imul
push
repnz
addl
fisubs
int3
mov
pop
pop
push
xor
stos
fwait
adc
mov
mov
and
out
fs
imulb
jbe
out
movsb
pop
jl
sbb
leave
loop
or
in
lock
pop
mov
pop
nop
in
subb
fstpl
repnz
cwtl
cmp
cmp
scas
js
addb
sbb
jns
cmp
xor
leave
imul
inc
insl
imul
fisttpll
adc
sbb
xchg
popa
test
insl
mov
xchg
dec
mov
or
test
popa
dec
jo
lret
mov
dec
pop
xchg
in
es
xor
and
repnz
scas
lock
sbb
mov
mov
jae
dec
pop
jg
fidivrs
out
ja
stos
les
jmp
xchg
xor
mov
xchg
adc
imul
xor
es
ja
push
cmc
mov
es
adc
das
jle
mov
imulb
pop
xor
dec
xchg
repz
adc
mov
test
cld
insb
sar
jmp
leave
push
data16
popf
clc
sarl
dec
fistl
sahf
pop
mov
bound
mov
lock
mov
mov
test
push
add
xchg
scas
cmpsl
test
ljmp
loope
repz
nop
in
sub
or
sbb
add
dec
leave
or
mov
jae
les
cli
sub
push
mov
roll
pop
adc
das
jns
adc
dec
mov
test
pop
push
pop
mov
cmp
jo
sub
outsl
jns
shlb
jnp
inc
sub
pusha
jno
test
fidivrl
lret
push
loope
mov
aaa
cmpsl
mov
cmp
cmp
mov
push
movsl
jae
pusha
jo
jle
or
dec
lds
pop
cmc
or
rcr
jno
or
popa
cld
lock
pop
xor
mov
pusha
mov
pop
sbbl
movsl
ss
mov
push
les
subb
sbb
cmp
fsubrp
xchg
test
cs
arpl
xor
out
ss
jmp
add
imul
test
imul
ret
leave
sbb
out
out
pop
mov
mulb
aaa
push
ret
mov
mov
iret
or
sbb
je
push
mov
mov
sahf
jb
js
fmull
mov
fisubrs
in
les
sbb
repnz
xor
mov
push
stc
cmc
nop
cmp
jb
xor
pop
sahf
xor
pop
cmp
pop
cmp
add
xor
std
mov
shrl
push
sahf
sti
xchg
mov
insl
nop
dec
out
cmp
jge
xlat
or
sub
movd
mov
mov
cwtl
stos
add
mov
scas
push
adc
mov
sub
xchg
into
xlat
mov
shlb
xlat
mov
pop
jns
shr
dec
ds
in
lcall
lock
sub
add
dec
ficoml
mov
and
mov
add
test
mov
dec
pop
push
in
add
jp
mov
sbb
and
mov
mov
push
inc
addr16
fsts
xor
loop
pusha
jo
push
sahf
xor
xchg
or
jb
mov
mov
dec
push
sub
insb
xor
cmp
mov
fdivl
cltd
inc
xorb
sub
push
mov
push
or
lcall
fdivrs
pop
jns
stos
cmpsb
andl
fdivr
mov
repnz
sti
fisubrs
lods
mov
inc
fbld
add
xor
xor
adc
lea
mov
nop
aaa
cmp
mov
cld
pusha
in
adcb
nop
pop
jb
push
mov
jmp
insl
cmp
jmp
fwait
lahf
out
ss
xchg
sti
das
xor
inc
xchg
push
leave
shll
add
ret
out
sub
dec
jb
push
adc
mov
lcall
mov
xchg
mov
ficoml
in
movsl
scas
aad
sub
addr16
or
lock
insl
in
xor
cltd
iret
test
adc
mov
or
push
mov
mov
adc
or
cmp
mov
lock
daa
scas
std
inc
sub
in
cmc
push
push
push
test
mov
mov
fiadds
int3
pusha
xor
lods
ret
and
leave
dec
mov
shr
and
and
adc
imull
notb
stc
imul
mov
pop
ficoml
repnz
jns
sub
jg
or
mov
fcmovnbe
jns
cmp
or
imul
fcmovb
mov
lahf
pushf
imul
mov
dec
scas
or
daa
cli
sbb
lods
mov
add
into
mov
stc
pop
in
mov
add
or
or
pop
pop
or
mov
out
mov
mov
or
cmc
mov
shlb
sbb
dec
adc
testb
out
cmc
xchg
mov
iret
lret
cmp
xchg
imul
ret
aad
clc
hlt
sbb
add
pop
push
gs
or
sub
test
jl
or
inc
mov
addl
push
mov
int
sbb
cli
mull
xchg
shl
xchg
ljmp
outsb
or
jecxz
stc
fcompl
mov
and
push
sub
push
dec
imul
int3
sub
lods
add
pop
pusha
lret
mov
scas
push
test
sbb
adc
push
jae
mov
test
inc
push
les
popf
lock
cmc
sbb
leave
dec
xchg
ret
test
or
aam
push
mov
sub
loope
iret
repnz
inc
cmpsb
mov
push
pop
push
sbb
out
and
jns
mov
and
cmp
aas
and
jb
jae
pop
arpl
enter
sub
xor
mov
mov
mov
shll
aaa
in
aas
pop
pop
mov
test
jno
loopne
jl
rclb
lea
clc
or
jl
and
jns
cmp
stos
xor
cmp
ljmp
xlat
push
into
out
sbb
cwtl
sbb
movsl
lock
jecxz
stos
xchg
fnsave
and
ja
pop
and
sbb
or
imull
call
test
jno
add
jnp
inc
cmp
dec
test
and
push
sub
in
cmpsb
shrb
rclb
mov
push
mov
lods
dec
inc
inc
negl
repz
cmp
pop
mov
cmp
fldcw
lret
fs
xor
inc
out
std
sbb
cwtl
stos
lods
das
iret
lods
inc
imul
in
andb
mov
and
testb
in
clc
stos
in
mov
sub
xlat
stos
jne
data16
sub
adc
jg
push
aam
lock
jge
jg,pt
xchg
mov
in
fldcw
cmp
mov
out
mov
cld
mov
pop
ss
sbbb
xor
shll
std
sti
mov
mov
into
pop
das
cmp
fwait
lcall
data16
push
cmpsb
xor
jae
int3
add
test
cs
mov
adc
imul
leave
xor
jle
or
int
ds
lahf
clc
xor
pop
and
push
outsb
cmp
mov
jmp
idivb
mov
pop
lods
cld
repnz
popa
dec
lahf
push
jns
pop
jno
or
or
leave
sbb
push
lcall
ret
jmp
dec
fldl
mov
and
fsts
jg
pop
mov
and
cli
jl
stos
insl
xor
mov
cmp
inc
cld
out
inc
addr16
jle
jp
fisubl
jle
arpl
ss
jmp
repz
mov
or
pop
dec
lret
repnz
xchg
lret
loope
mov
push
and
std
pusha
pop
test
sub
sub
sub
xchg
jmp
daa
cmpb
shlb
cmp
mov
xlat
dec
jo
mov
sub
int
xchg
js
cs
adc
or
or
insl
cltd
lcall
addl
jns
mov
out
shrb
or
sbb
jnp
mov
jp
gs
sub
bnd
push
test
and
xor
dec
outsb
fidivrs
mov
inc
jmp
sahf
inc
sub
std
clc
cmc
add
push
and
jmp
aad
xchg
ss
sti
aad
into
idivb
dec
lcall
data16
mov
sbb
cmpb
cli
rcr
sti
in
and
push
add
notb
test
sbb
xchg
mov
hlt
fwait
adc
pop
add
xorb
cmp
cltd
test
pop
pop
movhps
sbb
js
test
repnz
rol
lcall
fnstcw
lock
test
sub
jg
lock
push
sub
sahf
mov
mov
ret
xchg
fs
jp
inc
pop
and
and
fisubs
icebp
and
je
mov
icebp
scas
add
scas
aad
and
xor
sahf
fldcw
outsb
js
insl
mov
loopne
mov
mov
es
push
or
adc
or
out
iret
popf
bound
push
addr16
iret
mov
jmp
bound
icebp
test
push
or
push
pop
inc
mov
add
inc
stos
xchg
jnp
int
jle
lods
insl
add
imul
lods
addr16
insl
push
loop
leave
insl
aas
push
pop
dec
pop
or
fistpll
or
add
jle
pop
cmpsb
sbb
paddsb
mov
outsl
inc
jp
pop
push
cmp
add
push
outsl
jb
mov
inc
jg
adc
adc
sbb
jb
sbb
mov
cwtl
loop
in
mov
or
dec
test
shll
rorl
jl
repnz
std
mov
test
push
dec
pop
push
xchg
push
in
test
loop
andb
jg
or
inc
imul
movsl
addr16
push
clc
scas
xchg
pop
sti
jns
mov
xor
cld
pop
xor
xchg
xor
mov
arpl
xchg
shrb
arpl
sahf
int
cld
push
aad
xor
jno
dec
decb
sub
add
out
in
loope
sbb
sbb
jae
mov
lcall
aam
call
sub
ss
sarb
addb
push
stc
ret
jge
push
loop
lcall
inc
rorb
jo
fistpll
mov
stos
insl
jmp
out
dec
dec
mov
aad
ret
jb
mulb
lods
push
and
arpl
subl
add
shl
xchg
xchg
vcvtdq2ps
xchg
iret
sub
outsl
mov
popa
jnp
pusha
xchg
sarb
mov
xchg
xor
daa
leave
scas
jp
adc
xchg
sub
mov
adc
pushf
aam
dec
pop
test
inc
jns
cmpsb
pop
outsb
push
roll
in
mov
repnz
in
icebp
push
ret
mov
repz
xor
jo
loopne
test
add
sahf
addb
add
xchg
jmp
testb
fld
mov
and
out
xor
inc
and
pop
xor
adc
popf
jecxz
mov
jle
jnp
mov
rcll
push
popl
call
fs
xchg
xchg
pop
pop
push
jnp
clc
pop
mov
jecxz
int
xchg
call
shrl
mov
cmp
dec
adc
lock
xor
icebp
xchg
aad
sub
movsl
xchg
adc
xchg
out
test
mov
imul
out
insb
in
rcrb
andl
int
ljmp
xchg
lock
sti
inc
xlat
into
push
and
cmovge
loop
inc
jmp
aaa
stos
and
add
jge
stos
cwtl
fdivrp
adc
rorb
out
xchg
mov
sarb
pop
dec
push
sub
add
outsb
push
gs
lds
push
mov
jno
xchg
ret
or
jne
cmc
jl
dec
mov
cmp
mov
xor
popf
addr16
jecxz
cltd
mov
jnp
jecxz
mov
inc
dec
lret
dec
out
sbb
push
pop
xchg
ret
cmpsl
pop
cli
jp
xchg
push
ja
push
stos
push
mov
mov
sbb
fiadds
and
jle
adc
jl
mov
sbb
dec
movsl
test
add
daa
mov
aad
inc
push
out
xor
mov
clc
cmpsb
imul
cmp
pop
xchg
add
fidivl
lods
pop
push
mov
test
into
fcmovb
sbb
cmpsl
loope
outsl
xchg
lahf
or
clc
mov
or
pop
std
loop
dec
sbb
je
cs
fiadds
stos
shrl
xor
cltd
int
adc
push
xor
push
cld
arpl
sbb
lods
dec
dec
sub
dec
test
cmp
ljmp
xchg
cmp
lods
mov
push
ljmp
sahf
lea
adc
xchg
rcrb
inc
fbld
movsl
mov
test
sarb
push
or
push
lcall
dec
mov
sbb
aaa
ss
dec
lea
std
xchg
push
and
xlat
notl
mov
jl
mov
and
inc
dec
and
add
out
mov
jle
inc
add
jecxz
mov
data16
outsb
jbe
in
mov
fidivl
and
icebp
xchg
imul
sub
mov
xchg
pop
cmp
add
cld
jns
or
and
cmp
or
push
sbbb
aaa
xor
ljmp
sbb
mov
pop
test
jo
and
inc
mov
pop
lcall
cltd
imul
aaa
sarl
fmull
pop
sbb
es
int3
sub
xor
push
shll
jbe
jecxz
mov
pop
mov
sub
mov
mov
mov
push
add
cld
xchg
jns
lea
add
inc
mov
mov
jns
sbb
cmp
cmpsl
repz
lret
notb
test
dec
js
div
bound
mov
push
movsl
ljmp
arpl
xchg
push
out
mov
ret
sub
sub
ret
dec
jmp
mov
pop
dec
add
fnstenv
inc
aaa
mov
jge
xor
mov
jns
arpl
fwait
pop
xchg
cmp
mov
rep
insl
loope
pop
movsb
push
addr16
or
adc
mov
stos
xor
test
insl
mov
mov
add
pop
clc
rolb
pop
aaa
in
je
mov
jl
jle
rorb
jge
das
cmp
popa
push
mov
jnp
movsl
incl
mov
push
cmc
mov
cmpsl
xchg
xchg
add
adc
subl
add
rcll
lahf
sarl
sub
stos
sahf
and
lds
rcrl
or
ret
test
shrl
mov
les
test
stos
jp
test
jae
imul
mov
test
ja
lds
lcall
adc
adc
leave
push
lods
dec
insl
mov
loope
emms
cmpsl
cltd
adcl
stos
push
filds
mov
sbb
scas
jns
testb
and
loop
int3
adc
mov
lods
sbb
and
clc
call
mov
outsb
iret
clc
fidivl
pop
es
lds
jno
ljmp
jbe
dec
sti
idivb
adc
dec
mov
mov
dec
sub
ljmp
je
repz
das
xchg
popa
push
sub
xorl
lods
stc
sbb
push
fcmovnbe
pop
jg
mov
push
push
pop
subl
int
mov
inc
jecxz
dec
jne
jno
pop
sbb
mov
dec
rol
jecxz
push
xchg
roll
daa
jl
inc
xorl
lods
pop
cmc
lods
cmp
jge
xor
lret
push
cmpsl
push
mov
test
sahf
lahf
mov
fimull
pushf
jb
aaa
jmp
sbb
repz
jns,pt
faddl
push
test
bound
ficompl
pop
pop
test
pushf
add
xor
adc
test
dec
fdivl
hlt
and
loop
ja
stos
movsl
gs
lock
gs
outsl
lret
ja
data16
lods
insb
imul
out
add
daa
sbb
lcall
xchg
xchg
jne
sbb
lds
cmp
dec
sbb
loop
mov
add
mov
daa
ret
or
sahf
test
inc
das
movl
push
add
xchg
lods
in
lret
xchg
ret
sub
sarb
push
inc
roll
lcall
xchg
pop
cmpsb
stos
xchg
pusha
ja
inc
dec
or
xchg
mov
mov
push
or
imul
ss
test
adc
repnz
xor
or
dec
mov
aaa
xchg
pop
jno
xchg
fs
mov
jg
and
in
fdiv
cmp
gs
mov
mov
cmp
and
inc
bound
adc
mov
mov
lea
pop
pop
jp
mov
xchg
addl
xchg
loopne
enter
push
mov
dec
inc
push
xchg
aaa
cmc
cmpsb
sub
ja
stc
mov
das
push
adc
mov
push
jmp
shrb
push
push
int3
out
pop
dec
xchg
clc
xor
mov
lahf
mov
rcrl
mov
xchg
lret
push
fistpl
and
pop
mov
jmp
cwtl
outsl
cmpsl
jb
adc
dec
mov
test
push
or
mov
int
les
add
xor
and
add
test
mov
popa
mov
push
dec
sahf
mov
leave
mov
mov
fs
mov
das
sbb
push
sbb
or
pop
scas
inc
push
push
andl
xor
xchg
xorb
lar
aad
xor
mov
add
stos
movsl
cmp
dec
push
jno
shr
addr16
pop
xchg
mov
jle
dec
enter
and
fcomps
adcl
subl
loop
cmp
or
xchg
sbb
xor
pop
jp
cs
xor
idivb
adcb
ror
clc
test
and
adc
inc
push
popf
notl
cmp
int3
adc
inc
js
addr16
arpl
jg
or
test
dec
mov
jmp
pushf
rorb
daa
jp
push
in
and
or
imul
in
lret
mov
nop
inc
stos
outsl
fimull
jmp
sahf
dec
test
test
adc
adc
sub
mov
fcompl
iret
ret
rol
and
jge
rcll
cmp
and
push
fnstenv
sahf
mov
fwait
push
popf
out
jl
ds
repnz
inc
scas
dec
jle
mov
pop
pop
add
enter
xchg
into
movsb
test
adc
jno
push
fxch
sbb
mov
or
jle
add
in
adc
pop
sbb
adc
aad
mov
pusha
sbb
adc
das
inc
lock
or
movsb
nop
sub
and
ljmp
xchg
aaa
cltd
xor
mov
sub
movsb
sbb
add
stos
imul
cmp
negb
adc
rclb
push
push
mov
ja
test
jmp
ljmp
add
push
xor
and
mov
inc
in
fmuls
or
mov
cs
add
jne
inc
inc
mov
cli
sub
shll
lods
jnp
mov
lret
ret
js
icebp
lods
inc
insb
mov
iret
mov
push
add
enter
and
mov
fsubrs
bound
stc
and
std
mov
inc
in
adc
loopne
fwait
les
arpl
es
jbe
mov
ds
in
xor
repz
repz
or
call
push
lods
mov
test
mov
popa
dec
arpl
fcomip
loopne
and
sub
push
and
pop
lds
enter
insb
or
mov
imul
sub
je
cli
xor
ds
sub
imul
mov
sub
mov
adc
rolb
iret
orl
cmp
es
xchg
xchg
cmpl
sbbl
and
fs
call
test
lea
add
gs
cmpsb
mov
pop
xchg
ja
jno
nop
adc
push
add
jb
in
stos
aad
es
gs
aad
mov
mov
scas
int
out
mov
sub
and
insb
dec
fisttps
cmp
cmp
pop
ret
in
sbb
or
sbbb
xor
enter
sub
aad
adc
adc
xchg
cwtl
sbb
xor
imul
pushf
pop
test
aam
loop
lods
cmp
adc
lahf
push
xchg
imul
prefetchwt1
or
sbb
in
sub
add
mov
and
push
fldt
dec
fs
repnz
xor
ljmp
push
imul
inc
pop
movsl
and
sub
rorb
fcmovnu
pusha
jae
xchg
add
or
jmp
lret
jg,pt
out
jno
mov
sbb
dec
inc
ficoml
movsb
into
enter
mov
rol
xor
jp
lods
pop
notb
lret
jne
sbb
bound
mov
imul
out
mov
movsb
or
adc
jle
cmp
fscale
and
cmp
mov
stc
dec
ss
pusha
out
dec
test
icebp
inc
adc
mov
inc
data16
xchg
popf
pop
gs
push
and
and
fbld
cmp
ds
mov
and
into
cvtdq2ps
test
movsl
shll
movsl
sub
outsb
ret
stos
push
orps
xor
out
adc
dec
rcll
je
xor
insb
fdivl
dec
in
mov
mov
jle
sbb
pop
or
js
gs
imul
push
pop
xchg
push
or
aad
xor
sub
or
cli
andb
out
lds
es
sbb
stos
ficoml
sar
cmp
pop
addr16
inc
mov
fsub
sbb
pop
push
sbb
data16
add
or
stos
sbb
push
sbb
cmp
pop
imul
dec
lea
and
call
in
popl
andb
cmp
inc
cmp
xchg
std
xchg
fisttpll
std
cmp
jb
mov
xor
das
cli
mov
bnd
inc
pop
sbb
bound
cmp
fdivl
add
mov
mov
mov
jne
sbb
xchg
js
xchg
jnp
in
adc
push
pop
stos
out
push
cmp
lea
sti
sub
lods
xchg
sbb
mov
jb
mov
int
stos
pop
mov
jge
xchg
xor
nop
dec
or
pop
cmp
mov
mov
aam
repz
add
adc
in
scas
pop
dec
jno
cmp
sub
hlt
int
jg
adc
imul
dec
std
push
insb
int
outsl
dec
leave
xor
inc
out
subl
int3
mov
lock
jmp
scas
push
mov
fwait
pop
push
in
mov
jp
cmc
icebp
xchg
or
dec
fcmovu
jle
inc
mov
push
push
out
push
cmc
lea
xchg
mov
sub
add
dec
adc
fstpl
jnp
cmp
in
sub
mov
add
mov
mov
lahf
popf
out
cwtl
mov
out
mov
out
mov
sub
nop
fsts
int
dec
inc
loope
push
psubsw
jge
xchg
and
sbb
lcall
jno
aam
or
or
push
cmp
arpl
test
sbb
add
daa
fistpl
or
cmp
out
inc
dec
cmp
dec
out
les
cmp
mov
mov
xor
jmp
dec
xchg
out
imul
imul
popa
in
addb
shrb
cwtl
into
into
ljmp
xchg
je
pop
and
or
xchg
gs
out
inc
ret
into
sti
inc
fnsave
arpl
sub
mov
sub
xor
push
add
fs
pop
jb
test
lea
and
sbb
popf
dec
or
push
cmc
xor
xchg
stos
movl
movsb
fsubrs
add
fmul
xchg
subl
mov
insl
jo
dec
mov
fnstsw
lds
or
push
xor
push
jae
mov
xor
cmpsl
fstl
jno
sbb
jl
bound
or
outsl
inc
mov
pop
call
push
fwait
das
or
roll
int3
fstl
jae
cmp
js
pop
and
pushf
stos
jge
ja
insb
fcomps
cli
inc
cwtl
cld
sahf
sbb
shlb
dec
testl
jb
mov
insb
mov
cli
adc
adc
adc
fistpl
rcrb
or
ret
jp
push
mov
in
cmc
cmp
out
add
imul
xor
cld
test
add
fnsave
scas
mov
dec
mov
or
jno
cmc
push
pushf
sub
cld
push
and
lret
arpl
xor
add
testb
cs
inc
shl
pop
fsub
repnz
add
cmp
mov
ja
leave
cwtl
xor
js
add
xlat
mov
xchg
int
les
push
sbb
pop
cli
xchg
mov
cli
into
sbb
mov
pop
sahf
les
dec
or
push
inc
mov
mov
jb
cmp
popf
cmpb
ds
in
or
sub
out
cmpsl
arpl
cli
mov
mov
sub
jmp
sarl
lret
and
sub
mov
fisttps
shrb
jmp
add
dec
add
or
xchg
roll
lds
dec
popf
into
outsb
mov
jno
cmp
mov
in
jbe
xchg
or
adc
ja
sbb
das
add
insl
push
pop
cmp
or
daa
sbb
pop
adc
out
jns
adc
lret
clc
push
mov
push
das
jl
inc
lods
adc
jne,pt
pusha
lret
inc
jle
and
in
jle
mov
movsb
adc
mov
test
sbb
sbb
jne
enter
mov
and
test
mov
lret
aam
mov
sbb
pop
out
mov
std
rcll
xchg
push
imul
and
sbb
sbb
jge
cmp
in
xor
mov
push
or
addr16
adc
shr
sub
and
enter
sub
fucomp
xor
sub
add
sub
mov
mov
movsb
adcl
je
sbb
ret
xchg
inc
sub
mov
imul
test
push
mov
push
lahf
mov
sbb
push
addl
mov
push
push
das
scas
inc
inc
aam
or
add
das
and
and
imul
cmp
push
out
inc
mov
pop
push
in
xchg
stc
dec
stos
pusha
cli
loope
test
cmp
inc
lock
pushl
mov
je
inc
mov
test
push
or
cmpsb
jo
push
into
xorb
out
inc
les
add
inc
rol
and
stc
push
push
push
push
push
dec
xor
iret
inc
in
cmp
jl
mov
je
cmp
adc
out
test
fnsave
arpl
pop
push
out
fadd
ja
mov
lahf
movsl
test
sub
out
or
cmp
mov
daa
or
fs
nop
mov
dec
jo
inc
es
std
and
xchg
leave
icebp
outsb
mov
ds
js
popa
shrb
ret
cmp
pushf
cltd
dec
cmpsl
lcall
xchg
lock
mov
outsl
push
std
cmc
and
es
in
dec
pop
jp
inc
cmp
add
rorl
in
cmp
ret
mov
ret
out
inc
cs
ds
mov
and
mov
xchg
push
ficoms
dec
cmp
sub
add
jns
repnz
aam
int3
sbb
scas
ret
loope
xor
mov
dec
lea
rcrb
stc
outsl
inc
test
xor
aad
adc
loope
sub
call
cs
push
mov
aas
fstps
ffreep
aaa
ret
outsb
xchg
jb
movb
and
jo
jecxz
jns
or
notb
adc
mov
mov
dec
data16
mov
bound
mov
push
cmp
aaa
clc
cmp
or
adc
rcll
and
fwait
dec
xchg
mov
pushf
or
mov
lret
out
fnstenv
and
aaa
lock
test
xchg
ficomps
sbb
xor
inc
mov
mov
inc
dec
or
sbb
lds
fldt
mov
sub
or
sub
cs
cmp
pop
xor
jns
mov
pop
push
cmp
or
es
cmpsb
cltd
inc
mov
cmp
mov
mov
cwtl
nop
gs
xchg
aas
push
sahf
pop
cmp
in
jns
xor
and
cmp
xchg
mov
popf
enter
dec
push
jae
inc
sub
sbb
retw
sahf
addr16
sahf
dec
or
in
adcb
repnz
cmp
push
pop
push
and
imul
dec
sbb
insl
aas
sti
pop
lock
jg
cmpsb
xor
xor
hlt
xchg
out
inc
test
sub
xchg
out
ljmp
fwait
push
stos
lea
jbe
in
bound
dec
mov
call
cli
xor
inc
add
int3
add
fs
inc
dec
mov
lods
cmpsb
insb
shll
mov
faddp
stos
popf
or
mov
int
pop
xor
dec
mov
insl
cmp
inc
push
xchg
addr16
insb
xchg
in
and
mov
mov
stos
addr16
out
mov
icebp
loopne
push
into
mov
aad
sub
sub
dec
inc
jbe
or
adc
pop
adc
cld
xor
lret
js
imul
out
dec
push
sahf
pop
insl
clc
adc
adcl
cmp
int3
loope
pop
pop
inc
popf
push
xor
jb
mov
in
lret
inc
jp
jmp
pushf
dec
fdiv
jbe
lock
sti
les
cmpsl
cmp
ljmp
push
dec
lret
leave
push
cmpsb
mov
xor
or
aas
pop
jbe
loopne
daa
stos
popf
mov
adc
add
loop
fisttps
negb
cmpsl
ss
dec
cs
decl
mov
pop
cltd
mov
adc
insb
enter
mov
into
call
or
addr16
aaa
mov
adc
jnp
pop
outsb
rclb
dec
dec
sbb
ja
xorb
in
repnz
popf
or
ljmp
lret
add
jb
pop
dec
mov
lahf
sub
mov
cmp
cmp
sbb
pop
pop
add
jne
sub
xor
jnp
add
ficoms
hlt
jne
inc
jae
xchg
ret
in
jmp
or
movsl
inc
rcl
sbb
xchg
paddsw
cs
pop
cld
pusha
pop
jno
mov
das
pop
jns
fidivs
xchg
push
jae
pop
icebp
xchg
outsb
int
push
bound
in
sub
stos
call
repnz
add
sahf
inc
sub
decb
scas
jecxz
push
jmp
rcl
mov
nop
repz
into
adc
adc
stc
xor
loopne
aas
cmpsl
mov
paddw
mov
jnp
pop
pusha
cmp
aas
in
mov
pop
outsl
popf
xchg
adc
outsl
jno
stc
aas
into
fadds
pop
roll
mov
mov
dec
dec
aaa
test
mov
pop
paddb
add
inc
lahf
icebp
and
inc
imul
xor
jno
gs
pusha
daa
push
fwait
xor
es
enter
add
inc
or
ljmp
ljmp
or
sbb
push
mov
mov
test
mov
pop
frstor
aaa
imul
test
adc
clc
je
lods
push
outsb
stos
insl
icebp
lds
shll
push
test
push
jecxz
mov
sub
cs
and
pop
cmp
xchg
sbb
pop
add
and
lcall
xchg
cmp
xor
lcall
insb
dec
jne
mov
or
or
imul
push
xchg
cmp
loope
dec
shlb
cld
sub
out
sub
adc
aad
outsb
mov
pop
or
outsb
pop
inc
sbb
sti
jbe
or
jno
add
adc
ja
fmulp
popa
mov
xor
lock
push
dec
cmp
mov
push
test
cmc
push
push
pusha
cmp
pop
or
dec
jne
lock
mov
sahf
dec
mov
cmp
sub
lret
mov
outsb
sarl
or
adc
jg
push
stos
push
cs
cmp
jne
pop
inc
sti
stos
loope
xlat
dec
das
adc
cltd
jecxz
mov
push
adc
adc
mov
enter
adc
shlb
cwtl
jecxz
fistpl
jle
orl
mov
fxch
icebp
fsubrs
repnz
mov
shl
cmpsb
insl
divl
or
mov
add
ljmp
pop
insl
cmpsl
cmp
cli
ja
mov
bound
pop
pop
push
loope
fsubrl
dec
insl
mov
fbstp
xchg
push
xchg
jbe
add
loope
sub
stc
fcoml
xlat
push
rolb
and
test
push
xchg
xchg
xchg
sub
je
jo
xor
add
adc
test
adc
pop
xchg
cmc
inc
cmp
fisttps
add
popa
push
mov
sbb
fiaddl
enter
imul
push
lret
ficoms
addb
push
cmpsb
sbb
fsubrs
lods
lock
mov
ss
mov
jnp
xchg
xor
das
mov
cmpsl
pop
loop
inc
or
jno
fcomps
sub
out
ja
fnstsw
mov
fistpll
pop
mov
fdiv
imul
incl
add
pop
popa
cmp
lods
xor
mov
jl
ja
jge
dec
push
dec
sbb
movsl
mov
and
gs
pushf
add
shrb
push
mov
sub
int
push
int3
movsb
jp
fimuls
mov
js
test
pop
rcrb
jb
movsb
jno
mov
aas
xor
jmp
out
xchg
adc
das
jbe
aam
arpl
jbe
sub
sub
jbe
fnstenv
pop
push
push
push
lods
pop
out
out
imul
xchg
xorl
mov
cli
jne
lcall
sub
in
mov
movsl
mov
loopne
bound
testb
mov
mov
in
cmp
jb
arpl
pop
or
cwtl
xchg
arpl
ret
js
shlb
jns
jns
test
jbe
jb
iret
pop
cs
sub
pop
push
dec
icebp
iret
xchg
cmp
imul
lock
mov
leave
jmp
gs
push
pop
xchg
dec
int
into
fildll
mov
ret
das
xor
mov
mov
sbb
pusha
sub
add
push
aam
jge
fistl
outsb
adc
jb
xchg
into
lds
ljmp
shll
add
inc
adc
jle
and
push
movsl
sub
shrb
fimull
iret
mov
pop
test
push
in
test
test
mov
dec
and
fcmove
sbb
dec
inc
neg
mov
roll
stos
cmp
call
push
dec
xlat
scas
mov
cmc
sub
fstpl
ds
pop
loope
pop
xchg
push
jns
dec
dec
ficoms
xchg
and
fidivs
and
add
mov
aam
xchg
cmpsl
xchg
shlb
pop
push
nop
fsubl
rorb
in
cmp
fldt
pop
add
icebp
lods
imulb
jnp
sub
xchg
sub
sti
hlt
jb
leave
pop
pop
popa
loop
mov
in
in
aaa
cwtl
mov
lahf
nop
jge
or
dec
outsb
cmp
push
jge
push
mov
xchg
inc
push
loop
idivl
pop
sub
cmpsb
xor
jle
dec
sbb
test
push
mov
fldcw
or
leave
jg
and
lret
cmp
inc
inc
std
adc
jmp
mov
mov
cli
rorl
xor
or
outsl
les
cmp
mov
lea
or
xor
enter
sbb
adc
aad
jmp
push
jg
cmp
mov
xor
pop
sar
ficoml
cmp
lret
or
and
push
clc
mov
lea
sbb
icebp
pop
mov
fcmovnbe
aas
xchg
test
ja
pusha
lock
insl
jno
jno
mov
nop
inc
dec
inc
xor
mov
fsubs
shl
push
sbb
pop
inc
mov
or
push
jae
mov
mov
lcall
neg
pop
daa
lock
sbb
jecxz
xor
out
out
adc
push
mov
pop
add
bound
jnp
js
test
loopne
xchg
push
lret
pop
xchg
or
test
add
or
xchg
push
loope
stos
out
sbb
and
lcall
pusha
dec
mov
nop
inc
inc
inc
movsb
push
sub
pop
jp
sar
flds
push
lods
fistps
dec
jp
iret
int3
rolb
pusha
js
outsb
xor
push
cwtl
aam
loop
int3
bound
dec
push
cmpb
inc
jecxz
les
mov
pushf
shll
scas
cmpsl
push
dec
and
addl
mov
jg
cmpsb
mov
les
rcr
or
mov
loope
mov
mov
shlb
xor
mov
add
imulb
sbb
push
fmul
fdivrl
xchg
lahf
fmull
subl
cmp
xchg
adc
loope
lret
filds
pusha
scas
dec
sub
test
add
mov
call
xor
aam
jo
and
rcll
sub
cli
xlat
and
mov
push
xchg
push
push
orb
xchg
mov
sbb
bound
jmp
xlat
inc
dec
or
iret
insl
sbb
into
pusha
adc
call
sbb
add
or
cwtl
sahf
xor
mov
jns
cmp
adc
mov
or
lods
fldt
push
shlb
push
arpl
mov
mov
movsb
movsb
out
lcall
mov
inc
imul
rcll
cmpsl
mov
mov
pop
push
xchg
loop
sbb
pop
adc
test
inc
pop
sbb
and
loop
stc
pushf
bound
lods
lock
lahf
jae
icebp
out
push
sub
in
fisubrs
mov
cmpsb
xchg
jb
mov
ja
ret
push
into
cmovs
in
push
fsts
jne
xlat
es
sbb
jne
mov
pop
ret
sbb
int3
lods
stos
cwtl
mov
int
es
push
pop
jmp
mov
loopne
aam
ficomps
cmp
lods
mov
jns
stos
inc
xlat
dec
adc
outsl
mov
call
fisttpl
inc
push
mov
mov
dec
cmp
jns
in
and
and
popf
popa
das
jl
pop
inc
dec
mov
test
movsb
cmp
add
bound
sub
or
sbb
stos
bound
lret
jnp
xchg
push
dec
mov
mov
cld
push
aaa
and
sbb
das
mov
push
test
push
xorb
or
mov
add
fbstp
pop
dec
jge
pminsw
push
push
push
adc
pushf
jle
fs
cmp
adc
rorb
int
or
repz
pushf
or
popf
cmp
jl
cmp
faddl
jle
mov
cwtl
test
add
push
xor
ja
aas
add
mov
sbb
jnp
ret
xchg
outsl
fiaddl
and
pop
mov
sub
jle
pop
mov
add
icebp
ret
inc
inc
push
cwtl
jle
divl
inc
adc
mov
xchg
pop
mov
imul
out
and
pop
push
call
and
sahf
pop
pop
inc
rclb
idivb
xchg
stos
and
imul
frstor
aad
adc
jbe
jmp
or
lea
or
add
sbb
lret
out
mov
aas
aaa
mov
fs
push
fisttpll
pop
xchg
shrb
push
fldcw
dec
and
ds
sbb
mov
mov
xor
int
sbb
cltd
ljmp
out
sbb
dec
xor
loopne
push
fldcw
cmpsb
xchg
pop
lret
int
mov
pop
cld
into
mov
push
in
dec
cmp
adc
movsl
lock
stos
in
sbb
das
sbb
jmp
dec
jno
mov
mov
mov
jle
add
inc
sbb
out
xchg
or
aad
xchg
js
test
mov
insb
cs
lea
aad
test
mov
sub
jb
xchg
mov
add
test
pop
je
pop
ret
arpl
int
add
xchg
movsb
repnz
and
sub
mov
or
out
mov
lods
pop
or
or
xor
dec
jbe
adcb
push
mov
fildl
push
jecxz
mov
mov
sbb
xor
jl
mov
push
aaa
xor
lock
sahf
and
sti
pop
and
add
mov
cli
popf
inc
imulb
jae
sbb
in
sbb
adc
rclb
cld
sbb
mov
jle
fcomps
jns
jno
repnz
jge
sbb
inc
xchg
outsl
dec
jg
mov
rclb
add
xchg
cld
jmp
cmp
dec
xor
mov
or
sub
fistl
mov
dec
push
pop
dec
cmp
lret
inc
call
push
cmpb
sub
prefetch
or
adc
ret
imul
pop
int3
jle
es
mov
xchg
rclb
sbb
xchg
pop
adc
push
pop
push
pop
mov
adc
add
and
xchg
cmpsb
add
mov
imul
in
pop
push
xchg
sahf
inc
enter
shrl
gs
fldenv
inc
xchg
and
ljmp
add
push
pop
lret
pop
lock
addr16
sahf
das
dec
scas
fnstenv
adc
add
imul
es
outsb
or
cmpsb
ret
popf
jno
xchg
pop
pop
push
nop
mov
or
rolb
jbe
jns
test
sarl
andb
lea
xchg
scas
inc
leave
cli
leave
pop
adc
and
test
pushl
ljmp
jbe
jp
push
imul
pop
subb
rclb
inc
add
stos
sbb
daa
test
cwtl
mov
rcll
int3
ret
dec
mov
cltd
inc
ret
adc
idivl
push
popa
test
and
and
inc
jae
inc
mov
ljmp
call
out
add
popa
cmp
pop
ficoms
push
or
or
sub
mov
icebp
mov
aad
out
jnp
dec
push
add
jmp
and
in
sar
call
pop
lods
xchg
das
scas
call
loopne
push
arpl
icebp
xchg
jl
xchg
stos
push
dec
scas
xchg
xchg
jbe
xor
jbe
pushf
shrb
xchg
jmp
repz
loop
enter
insl
add
push
mov
and
mov
sub
dec
sbb
or
rcrb
rcrl
jle
in
pop
pop
aas
cmpsb
and
mov
jp
sbb
adc
inc
dec
mov
mov
mov
test
nop
aaa
xchg
jbe
xor
clc
adc
loope
and
and
pop
lds
pop
adcb
sbb
ljmp
xor
push
sub
jns
or
push
inc
push
mov
or
pop
jmp
pop
daa
and
dec
xchg
mov
fwait
test
iret
push
lods
jno
lds
cmp
jge
push
cmp
ss
fisubl
pushf
inc
cmp
cmp
pop
jp
mov
out
lret
test
and
xchg
movsl
fcoms
jo
lods
adc
movsb
fmull
push
lock
xchg
push
mov
lcall
xor
js
imul
cmc
fisttpl
push
xchg
adc
nop
movl
outsl
outsb
jecxz
stc
push
xchg
popf
imul
or
push
sub
cmpsb
cwtl
cli
mov
pop
xchg
add
and
dec
mov
push
rorb
ss
test
repnz
cld
movsb
cmpsb
xchg
push
sahf
movsb
dec
push
into
add
fs
outsl
push
rcrl
xor
xchg
xlat
insb
inc
aad
adc
adc
xchg
mov
loop
std
sub
rorb
cmp
xor
or
push
hlt
mov
jnp
or
lods
pop
xlat
inc
sub
into
aaa
test
stos
add
xchg
ja
mov
ds
or
push
and
js
in
jns
lods
and
cmp
lea
loope
xor
pop
out
ljmp
mov
es
rcll
lods
cmc
mov
jp
test
leave
sti
jecxz
xor
mov
shrb
xchg
sbb
repnz
sub
mov
jp
into
jb
add
jl
in
pop
movsl
repz
add
adc
cmc
lea
or
or
cmpsl
push
aaa
mov
push
dec
mov
jl
add
mov
lods
dec
cltd
xor
xor
cmpsb
sub
gs
lods
test
mov
mov
mov
jbe
or
mov
and
adc
stc
loope
mov
icebp
push
xlat
jge
push
test
pop
inc
outsb
jne
je
mov
pushf
mov
jp
test
cli
dec
sbb
or
mov
pop
or
pushf
mov
fldl
lods
stc
xchg
cmp
add
lods
test
insb
mov
int3
fstps
add
sub
mov
movsb
and
sbb
push
ret
or
xor
in
inc
test
frstpm(287
popa
sub
jecxz
lret
out
sub
push
scas
jb
orl
mov
mov
fisttps
repz
popf
mov
push
insl
push
jb
outsl
adc
aam
push
ds
fwait
push
xor
add
movsb
fadds
in
inc
insb
jae
and
insl
xchg
insl
mov
ss
xor
push
out
jno
data16
dec
inc
xchg
and
rcrb
mov
cld
mov
lods
in
mov
and
out
mov
xchg
int3
sub
test
sub
add
mov
jns
add
add
mov
add
pop
xor
inc
int
cwtl
sub
daa
add
shrl
data16
sub
rcrl
fldenv
int3
popa
pop
and
mov
lret
mov
ret
xchg
xor
push
in
push
aad
fisttps
push
inc
pop
das
nop
movsl
mov
mov
xchg
cmp
insl
jl
pusha
mov
jnp
imul
xor
xchg
xor
out
mov
dec
aaa
mov
pop
ds
mov
xchg
sbb
mov
out
add
jb
pop
insb
cltd
sti
in
shrl
xlat
push
jb
sub
in
mov
inc
stc
push
clc
loopne
sub
xor
push
out
inc
cld
sbb
sub
int
scas
pop
add
icebp
fs
int3
mov
xchg
icebp
bound
rol
ja
xor
shl
les
inc
fsub
and
xchg
jp
nop
xchg
and
mov
cmc
mov
xchg
sbb
loopne
or
push
rol
psrlw
lock
addr16
data16
mov
popf
jae
sub
mov
es
fucomp
aam
test
imul
jecxz
aas
lods
ret
fstps
ret
mov
jmp
mov
jnp
xchg
ja
xchg
adc
xchg
jmp
dec
jecxz
js
in
loope
arpl
push
push
and
int
std
xor
sahf
lahf
popa
push
pop
nop/reserved
dec
cmp
cmc
sarl
jmp
push
add
add
cli
xchg
cs
popf
pop
js
xchg
jle
inc
dec
mov
int3
nop
fsubrp
outsb
mov
not
push
pop
mov
sub
popl
jg
test
mov
pusha
push
mov
ja
out
loopne
mov
imul
aam
lock
xor
cltd
lock
xchg
sbb
xchg
xchg
sub
out
mov
cmp
into
or
jmp
pop
sahf
sbb
sub
jl
push
arpl
add
dec
imul
inc
and
adc
add
jg
hlt
inc
xor
and
push
cltd
mulb
shlb
mov
imul
add
movsb
xacquire
mov
mov
xchg
stos
cs
adc
adc
jno
je
and
lcall
or
sbb
clc
sub
adc
repz
push
int3
js
pop
out
mov
sahf
adc
add
add
fwait
gs
fcoml
mov
inc
inc
jbe
ret
sar
jnp
adc
sub
jno
jno
sub
adc
or
mov
cmp
jae
sub
gs
lsl
push
mov
push
addr16
cwtd
jle
jo
mov
outsl
jl
shrb
jae
cltd
fstl
or
add
rcr
fbld
push
inc
pop
jbe
xchg
lcall
gs
fisttpll
pop
int
dec
mov
mov
dec
cmpsb
ret
jle
shlb
xor
aas
xchg
mov
loopne
cmpb
jo
fwait
rolb
clc
pop
loope
pop
jl
popf
adc
lahf
pop
push
lock
fistps
insb
jle
inc
xchg
pushf
cltd
cmp
aam
imul
inc
mov
mov
leave
adc
jo
stc
adc
sub
pop
ds
xchg
insb
xchg
notb
repnz
xchg
rorb
lret
ret
icebp
in
or
insl
pop
inc
or
stos
ffreep
aam
arpl
outsl
loope
ss
int3
sub
adc
or
push
cli
fdivs
sub
sahf
lods
adc
push
sub
pop
adc
lds
sbb
ss
or
std
fidivrl
aas
in
jns
fldcw
push
fimull
sarl
ljmp
sbb
pop
push
xchg
cmp
jmp
push
adc
test
pop
inc
push
push
jae
fcmovu
cs
xor
dec
add
jne
pop
nop
out
jg
inc
les
out
jecxz
orps
xor
repz
add
push
ret
jp
pushf
mov
push
imul
pop
dec
scas
subl
scas
sbb
in
hlt
into
mov
push
movb
cmc
inc
cmpl
inc
out
rolb
inc
mov
loopne
in
ljmp
mov
inc
test
sub
push
inc
lahf
dec
jle
pushf
mov
loopne
push
mov
push
ss
dec
aam
movups
negl
clc
mov
movsb
adcl
jmp
das
sbb
popa
jge
je
cld
xchg
adc
pop
in
imul
sub
daa
fwait
adc
cmpsl
dec
fyl2x
gs
leave
cs
in
out
call
outsb
sti
mov
lock
mov
daa
leave
int
cmp
sti
mov
orb
cmc
adc
fisubs
pop
dec
in
add
lods
out
fdivrl
out
aam
cld
mov
shr
add
shrb
dec
xchg
mov
insl
add
mov
and
mov
aas
mov
push
inc
pop
test
push
out
xor
dec
scas
pop
sub
testb
arpl
test
in
mov
imul
pop
or
and
cli
jne
jecxz
mov
pop
stos
cmc
push
adc
push
lcall
add
sbb
andl
imul
push
test
gs
jno
sub
jl
and
push
int
mov
jo
xchg
sub
add
pusha
andl
dec
xchg
xchg
cmpsl
cmp
push
jge
not
stc
dec
adc
jg
sbb
and
adc
jno
adc
fsubs
mov
mov
xchg
fisubl
sbb
ds
inc
pop
lret
mov
lock
mov
mov
and
in
insb
cmp
fistl
xor
in
nop
cmp
mov
sub
psadbw
cli
jnp
jne
jl
negb
adc
jne
adc
xchg
lahf
div
incb
push
pushf
cmc
cmp
mov
sbb
cwtl
negb
mov
hlt
cld
inc
mov
pop
popa
lahf
xchg
cmp
mov
ret
iret
sbb
mov
jmp
mov
xlat
xor
fildll
std
sub
les
xchg
sbb
movsl
in
sub
lds
aam
cmp
xor
pop
in
jmp
xor
sti
push
pop
jns
xlat
xor
jl
aad
std
mov
mov
cmp
stos
xor
xchg
and
cmc
sbb
cmp
xchg
and
shlb
cmp
in
push
pop
cmp
adc
cld
loope
jno
xor
mov
xor
sub
xchg
mov
leave
inc
lods
movsb
push
inc
fldl
shll
ss
cld
mov
testl
push
in
xor
sub
dec
in
movsl
leave
push
fsubrl
iret
nop
add
int3
adc
test
ss
les
inc
pop
into
enter
out
test
xchg
push
and
inc
lret
push
cmp
nop
add
adc
jmp
adc
sbb
clc
and
cmp
jp
pop
dec
xchg
imul
mull
cwtl
jmp
pop
add
mov
cmpsb
xchg
xchg
ja
pop
mov
jp
lock
and
cltd
in
scas
hlt
xchg
lcall
add
push
mov
mov
insb
ror
ja
stos
xor
cmp
cmp
daa
jecxz
mov
or
aaa
push
test
pop
dec
and
fisubrs
jbe
mov
xorl
lods
mov
mov
adc
lea
repz
addr16
push
mov
outsl
jg
out
cmc
mov
cmpsb
add
cmp
fs
cmp
push
cld
jnp
cmpsl
dec
xorb
mov
in
scas
sub
test
push
jbe
insb
pop
mov
xlat
inc
daa
imul
fmuls
outsl
fiadds
pop
cmc
sub
cmpb
aas
ljmp
inc
shlb
pop
ret
stos
repz
ja
aam
adc
or
es
jl
ja
pushf
cltd
xor
sub
sub
incl
jmp
loope
sbb
cmpsb
scas
fs
cld
xor
inc
out
pop
dec
pop
in
inc
loopne
push
jp
fldt
adc
andb
adc
sub
xor
arpl
iret
mov
xor
xchg
sbb
xchg
aaa
adc
rorl
pop
loopne
pop
or
inc
dec
ret
cld
lahf
lea
pop
cli
aad
mov
xchg
mov
mov
pop
iret
sub
inc
sbb
jns
in
fadd
jecxz
inc
mov
in
mov
ja
jns
flds
outsl
into
mov
loop
mov
movsb
mov
sbb
push
jo
repz
jne
repz
jge
leave
mov
fcmovnu
or
int3
xchg
movsb
pop
cmp
les
mov
mov
fwait
roll
mov
dec
xor
or
clc
test
fmuls
inc
sub
adc
sbb
lcall
jo
cmc
lods
jmp
loope,pt
add
cltd
pop
in
mov
fimull
in
cmpsb
es
pusha
movsl
aam
repnz
xchg
lds
mov
ljmp
push
jmp
add
inc
call
sub
pop
cwtl
ror
xorl
push
xchg
jns
add
mov
std
dec
push
fildll
hlt
test
inc
or
clc
fnstsw
movsb
mov
mov
repnz
and
cmp
xlat
imul
pop
aad
dec
ret
scas
jae
pop
jp
mov
push
add
js
mov
stos
cmp
adc
lock
sbb
mov
add
cmpsl
mov
int3
ljmp
inc
psrad
lret
lock
adc
adcl
in
insb
or
ljmp
xlat
jnp
xchg
rorl
loope
pop
into
imul
jp
ret
inc
mov
adc
movsb
mov
dec
outsb
and
or
outsl
xor
sbb
dec
fstps
mov
mov
pop
mov
inc
es
xchg
push
int
mov
dec
mov
mov
int3
xchg
mov
in
inc
sub
adc
enter
sbb
sub
idivb
xchg
in
xor
xchg
xor
shl
mov
cmpsb
inc
jmp
jmp
sbb
lret
sbb
sub
in
cmpsl
push
out
stos
mov
ss
sub
test
fstl
in
adc
out
dec
mov
mov
push
and
aas
cltd
fs
cmpsl
shl
pushf
lahf
mov
sub
xor
in
xlat
xor
mov
sbb
cmp
rorl
shrb
pop
cli
xor
in
fucom
popa
cwtl
mov
pop
clc
or
inc
push
sbb
cmpsb
rcrl
in
mov
push
sbb
adc
fdivs
imul
xor
lds
adc
xchg
mov
iret
cmp
mov
push
aas
and
xchg
imul
testb
sti
adc
into
in
ficoml
xchg
push
push
sarb
mov
cmpsl
add
pop
xchg
sub
mov
cmp
cmpsb
pop
dec
subb
call
push
sbb
inc
loop
xor
jb
cwtl
in
out
rclb
jmp
imul
fcmovnu
out
cmc
cltd
xor
lock
es
fisubl
mov
and
jns
repnz
mov
add
mov
js
sub
movb
cmp
scas
test
mov
xchg
lcall
gs
jmp
cs
mov
insl
pop
fucom
mov
inc
pusha
lea
icebp
or
scas
xorb
fnstsw
lods
mov
jae
xlat
adc
inc
xchg
pop
jle
movl
fwait
pop
js
movsb
imul
or
push
leave
cltd
sbb
movsb
fwait
add
cmp
push
mov
xor
add
sbb
dec
fs
mov
ret
mov
les
cwtl
out
outsl
addr16
int3
test
and
pop
xchg
mov
dec
sbbb
pop
pop
mov
dec
cmp
js
cmp
jle
dec
push
jno
mov
nop
mov
xchg
out
orl
aaa
movsb
mov
into
sbb
fistps
test
and
mov
out
mov
push
mov
add
sbb
xchg
pusha
lret
outsb
mov
in
rol
cwtl
pop
frstor
insb
mov
sub
inc
or
sub
sub
fnsave
push
test
xchg
shll
inc
push
pop
insl
in
pusha
push
cmpsl
xchg
xor
das
xchg
and
pop
mov
ja
sub
pop
stos
jae
aam
out
add
inc
std
xchg
sbb
lock
xor
jge,pn
daa
addl
orl
clc
leave
lcall
lods
int
or
scas
out
push
pop
pop
imul
shl
xor
push
mov
mov
sar
stc
xchg
and
pop
pop
add
inc
lret
jne
or
cs
repz
in
ljmp
inc
scas
fistl
inc
cld
sar
cltd
xchg
push
in
repz
test
sub
inc
mov
pop
push
cld
dec
ja
cmp
adc
cld
outsb
inc
and
les
jne
dec
cmpsb
cli
out
arpl
sarb
cmpsl
imul
lds
push
out
adc
mov
repnz
or
add
jge
pushl
xchg
mov
add
xchg
lcall
lds
lea
out
adc
and
mov
outsb
xchg
xchg
inc
ja
aaa
mov
shlb
xor
addr16
mov
inc
mov
or
cmp
xchg
fisubs
xor
repnz
fsub
sbb
jns
sub
loope
sahf
and
jmp
xchg
mov
enter
out
aam
pop
sbb
iret
xchg
roll
pop
clc
mov
sub
ljmp
xlat
mov
xchg
adc
popa
mov
lret
lret
lahf
mov
sub
call
scas
hlt
inc
sbb
xor
and
fadds
and
aad
fst
call
or
int3
pushf
jl
pop
push
pop
lds
add
pop
das
adcb
repz
xlat
mov
mov
nop
sub
mov
mov
je
push
mov
aam
adc
push
add
jge
loope
mov
mov
cmpsl
out
sub
test
adcb
sub
xchg
jb
lret
xchg
sbb
dec
push
enter
cmpsl
rorl
out
loopne
dec
jae
lret
insl
sar
call
insb
add
jae
je
xchg
popf
xchg
push
jns
jl
and
mov
mov
ljmp
xchg
mov
and
cmc
fstpt
inc
icebp
xlat
mov
xchg
and
sbb
xchg
mov
in
sub
dec
test
mov
jb
sub
mov
jle
inc
scas
addl
xchg
int
xchg
ret
pop
mov
push
jp
xchg
repnz
jns
push
stos
adc
cmpsl
mov
lds
in
popf
movsl
sbb
inc
push
sti
rorl
outsb
pop
scas
pop
in
and
mov
fistpl
xchg
xlat
cmpsb
cs
fisubs
dec
repnz
dec
stos
cmpsb
leave
cmpsb
movsb
in
jle
dec
and
sub
ss
xchg
sub
mov
mov
lea
pop
jmp
adc
and
fcompl
dec
cwtl
push
cmp
ficomps
int3
jge
jne
outsl
std
cmp
test
xchg
cmp
stc
xor
sti
test
mov
int
pop
cmp
lods
out
subl
out
outsl
nop
pop
push
mov
cmp
sub
push
xor
xchg
mov
iret
fwait
scas
fsubrs
jecxz
lret
push
pop
stos
sbb
data16
leave
xchg
imull
mov
movsb
leave
insb
test
jne
mov
xchg
fbld
xlat
sbb
pushf
out
into
in
and
stc
push
jecxz
loop
add
push
jle
mov
das
or
dec
or
adcb
dec
cmp
cmp
xor
xchg
cmpsb
jp
std
cmp
sub
mov
aaa
jl
lcall
and
add
jle
and
mov
mov
insb
enter
sub
test
pop
scas
jg
data16
xchg
add
push
add
pop
jmp
lods
cs
cmpsl
stos
test
xchg
mov
nop
xor
cmp
stos
jmp
sbb
mov
clc
xchg
sbb
cmp
pushf
xorl
icebp
or
ret
mov
stc
xchg
and
das
repnz
pop
loope
fimuls
or
cmp
xchg
mov
adc
imul
sub
pop
mov
mov
pop
std
fwait
shll
lods
aas
lock
cltd
decl
popa
push
or
adc
mov
shrb
stos
push
dec
insl
inc
rolb
dec
pop
inc
mov
rcr
dec
mov
fwait
adc
xor
mov
arpl
ss
js
mov
outsb
fadds
add
jno
mov
push
lret
ret
mov
sbb
pop
push
push
mov
out
and
inc
subb
lahf
adc
push
fisubrl
icebp
daa
push
call
sub
inc
lock
push
outsl
push
nop
or
cmp
popf
and
cmp
jb
in
jecxz
sub
out
xchg
mov
aad
movsl
jp
dec
sbb
xor
mov
nop
aas
les
in
popf
cld
aam
sbbb
jl
and
daa
das
out
inc
fsubs
cmpsb
sbb
push
inc
xor
js
xor
bound
incl
sub
mov
mov
cmp
cmp
pop
in
pop
int3
sbb
dec
xor
mov
cmp
and
mov
mov
inc
inc
jmp
jno
hlt
nop
data16
aad
xor
jle
imul
xchg
in
cmp
inc
out
jno
xchg
pop
rclb
add
mov
in
cld
sti
arpl
cmp
es
repnz
cmp
mov
rolb
cmpsb
std
imul
push
pop
dec
jle
mov
fs
mov
mov
sti
cmpsl
pop
fnstenv
es
sbb
pop
mov
lods
addl
sti
mov
push
out
je
push
jo
pop
popa
push
jge
and
mov
cmp
divl
das
dec
fidivs
and
mov
out
mov
cmpsb
dec
subb
add
into
xchg
in
js
xor
ret
fnstcw
out
mov
aad
inc
mov
and
xchg
or
pop
pop
lods
xor
hlt
lea
sar
mov
arpl
ljmp
not
xchg
jno
rolb
adc
in
ja
cmpb
jecxz
inc
xchg
sbb
lods
cmp
xchg
jecxz
adc
ja
lea
test
lret
ret
and
mov
inc
sbb
stc
out
xchg
or
outsb
sbb
mov
xchg
stc
push
imul
imul
mov
jbe
stc
xchg
jl
xor
dec
jae
aaa
imul
clc
push
sbb
sbb
mov
flds
jmp
jno
test
jecxz
test
cs
flds
pop
lahf
repz
xchg
cmp
int
mov
repz
cmpsl
scas
jns
cmp
cmp
gs
subb
xchg
pop
mov
mov
cld
mov
and
adc
sub
je
add
fstp
mov
seta
mov
loope
push
mov
jge
mov
rcll
sarb
movsb
mov
cltd
out
add
lock
int3
mov
js
lods
iret
xor
rcl
in
jmp
jbe
sarb
ds
nop
or
pop
ss
jo
in
push
les
imul
push
cmp
stos
test
pop
sbb
pushf
mov
cmpsb
shl
push
fs
inc
repnz
sbb
sub
int3
sarl
loop
jp
std
mov
mov
icebp
mov
aam
jb
mov
adc
das
insl
jne
call
call
cmp
cmp
push
movl
dec
sbb
jno
stos
pop
mov
dec
xchg
xor
ret
aad
cld
hlt
js
int3
push
loope
test
mov
out
mov
pushf
xchg
push
sub
outsb
inc
fisubs
cltd
cmpsl
mov
dec
jge
arpl
mov
lret
dec
popa
inc
jmp
jbe
mov
fnsave
cmp
sbb
cmp
jge
in
dec
cmpl
test
pop
and
inc
inc
shlb
adcb
sub
adc
add
clc
in
sbb
jne
xor
cwtl
adc
mov
jno
outsl
adcl
dec
popa
pop
sbb
mov
rcrb
int3
scas
es
xchg
lods
ds
addr16
scas
testl
sbb
inc
cltd
xchg
or
movsl
jae
in
jle
stos
inc
jle
or
mov
data16
mov
lods
call
add
or
int3
and
push
adc
in
push
push
and
and
xchg
dec
push
inc
pop
jmp
push
mov
mov
imul
adcl
cs
mov
xchg
xor
push
addr16
arpl
add
sbb
push
fnstenv
out
and
pop
jle
push
fidivs
stc
xchg
jmp
shl
and
int3
pop
icebp
adc
jecxz
fsts
je
mov
adc
lahf
imul
or
jle
rolb
xor
sub
or
popf
das
repz
fistpl
push
mov
adcl
pop
imul
into
arpl
mov
flds
jae
xlat
mov
sub
pop
into
jg
fsubp
shrl
xchg
jecxz
loopne
lock
cmp
adc
or
ljmp
fs
fisubs
iret
popa
loopne
inc
imul
mov
cld
stc
lcall
push
insb
test
out
repz
testb
xor
fsubp
sahf
sub
xchg
bound
adc
push
adc
sbb
mov
xor
mov
mov
loop
xor
adc
pop
aaa
mov
inc
cmp
mov
sbb
jbe
cmp
faddp
sub
out
lahf
fdivs
jne
sahf
movsb
cmpsb
das
pop
rolb
jae
mov
mov
movsl
mov
ficoml
movsl
idivb
in
jl
pop
add
scas
test
cmp
into
sbb
imul
push
js
mov
hlt
fcmovne
stc
or
into
sub
outsb
and
mov
xchg
push
and
clc
loope
lret
mov
and
and
xchg
mov
jne
cmp
xor
adc
mov
mov
scas
clc
inc
mov
push
jmp
or
push
into
leave
and
das
popa
dec
outsb
int
push
jge
ficomps
and
divl
cmp
js
mov
aam
pop
dec
or
mov
xchg
fwait
popf
fnstsw
stos
sbb
shll
arpl
mov
jbe
add
jmp
test
loope
stos
sub
sarb
cmpb
movsb
lods
or
ret
fmul
into
dec
jp
shrb
push
sbb
aaa
lods
push
and
push
pop
lcall
adc
cmpsb
xlat
and
lahf
cli
hlt
pop
fistpll
sub
jmp
jmp
shlb
das
sbb
icebp
add
mov
sub
in
repnz
clc
sbb
repz
mov
jno
add
aaa
push
mov
enter
ss
add
in
js
jge
cmpb
sar
fwait
jmp
in
xchg
mov
inc
fldl
rorl
enter
sbb
lods
jbe
sbb
fcmovu
popf
adc
xorl
test
rcrb
jl
dec
icebp
jbe
loopne
lock
inc
mov
ja
sub
mov
pop
fs
xor
pushf
jp
sbb
mov
xchg
fucom
out
and
adc
ror
push
push
mov
push
jge
pop
pusha
jo
push
add
pop
push
cmp
out
mov
push
daa
add
jge
rcrb
lret
dec
sub
add
sbb
or
mov
mov
push
nop
iret
mov
add
insl
jge
push
push
pop
push
fists
cmp
mov
out
sti
add
sbbb
cmp
jbe
xchg
pop
pop
fdiv
lret
mov
jne
adc
sub
ret
clc
jns
push
mov
repnz
mov
jbe
lods
and
ret
cmp
xchg
jp
dec
xchg
sti
out
lods
add
mov
lret
insb
sti
negb
push
xor
inc
mov
push
pop
fwait
dec
int
lods
sub
mov
test
sub
lret
enter
add
cmp
cmpsl
sahf
xchg
in
adc
lret
xor
nop
add
mov
pop
xlat
xor
stc
fists
pushf
jp
ja
pop
inc
jno
inc
out
jns
dec
outsl
jb
movsb
in
into
cltd
add
adc
adc
shlb
adc
cmpsb
jae
sti
xor
cmp
cwtl
lods
mov
mov
cwtl
mov
cmp
inc
gs
cmp
sub
ds
fnstcw
out
outsb
pop
xchg
popf
xchg
test
and
cmpsb
inc
out
cmc
pop
adc
cli
cltd
mov
xchg
inc
add
sbb
push
mov
xor
repnz
or
gs
mov
addr16
lcall
rep
loopne
xchg
pop
push
push
stos
fdiv
rolb
xchg
and
das
jno
outsb
stos
and
cmpsl
mov
push
loop
aas
pop
jg
cmp
push
pop
jmp
out
pushf
test
cmp
sub
lea
test
ret
iret
es
mov
mov
cmp
movsb
sbb
ret
mov
push
xor
in
rolb
inc
ret
inc
cli
add
jle
xchg
incl
mov
xor
pop
daa
inc
popf
inc
movsl
xchg
pop
xor
adc
mov
out
mov
popa
mov
add
xor
ret
xchg
pop
inc
rcll
mov
mov
lock
arpl
dec
sbb
jmp
pop
xorb
lahf
loop
jg
addr16
pop
shll
aam
add
in
or
xchg
xchg
popa
and
jge
movsb
cmp
mov
into
add
faddl
imul
fcomip
iret
gs
sbb
nop
dec
or
repnz
mov
add
imul
jae
jbe
aas
pop
xchg
add
xor
ja
ja
dec
xor
enter
pushf
in
lret
push
sbb
fdivrs
or
dec
cmp
or
push
test
mov
push
aam
in
jnp
fnstenv
call
lock
scas
xchg
mov
add
shlb
sub
stos
je
push
cmp
lret
add
cmp
xchg
adc
sahf
lods
icebp
adc
insb
outsl
and
inc
shrl
mov
cmpsl
inc
jo
push
inc
hlt
pop
xor
cmp
push
sbb
sub
std
popf
pop
add
pop
icebp
gs
testl
jl
mov
cmp
popf
cmp
jmp
cltd
clc
in
icebp
leave
push
lds
lret
xchg
or
mov
xlat
adc
bound
int3
and
mov
pop
inc
aam
sub
in
jecxz
jbe
inc
or
mov
mov
stos
jmp
jns
cmc
sub
mov
fwait
idivb
test
int
mov
lcall
or
imulb
test
adc
inc
jno
out
sub
clc
jge
sarl
sub
sub
push
pop
aam
test
jle
jns
push
xchg
lahf
xchg
pop
hlt
or
push
jbe
js
imul
jnp
dec
sub
out
in
lahf
jp
scas
sbb
inc
xor
xchg
add
js
mov
repnz
or
fmul
push
inc
pop
mov
aas
pop
shr
xchg
mov
sbb
dec
scas
sbbl
xor
cs
mov
jecxz
push
nop
mov
mov
jg
notb
mov
add
bound
pop
jp
in
jbe
lahf
push
mov
push
xchg
or
sbb
mov
xchg
add
fs
ja
inc
lods
scas
icebp
es
fcomps
mov
sub
cmc
mov
inc
cs
pop
pushf
adc
repz
mov
pop
cwtl
or
dec
mov
cmp
sbb
push
xor
push
sub
dec
push
aad
pop
mov
loop
xchg
shll
jmp
les
mov
out
hlt
nop
inc
mov
xchg
push
pavgw
dec
cmp
movsl
dec
jmp
mov
dec
mov
cmc
adc
mov
out
das
cmp
jmp
loopne
sbb
inc
push
loope
pop
and
mov
stc
stc
paddsb
jg
jo
inc
or
add
push
jns
xor
cli
xchg
adc
lods
leave
lods
jb
jbe
lahf
mov
subb
xor
lock
fiaddl
push
hlt
mov
inc
jne
pusha
out
sbb
aad
lret
sub
lret
xchg
lret
ja
es
sub
icebp
mov
cmp
popl
mov
out
test
rorl
loope
fisubs
push
push
sbb
pop
or
ljmp
fmull
mov
repz
xchg
xchg
push
or
iret
mov
lcall
clc
dec
loopne
inc
jb
je
xlat
shll
pushf
push
loopne
repnz
cmp
push
fs
xchg
push
inc
call
and
test
fcmovne
sub
lds
pop
popf
cli
cmpsb
out
add
inc
adc
fs
xlat
cwtl
test
or
movsl
sub
das
jb
sbb
ja
icebp
push
mov
mov
and
add
arpl
cmp
repz
jmp
xchg
or
insl
pop
leave
mov
mov
adc
iret
add
add
or
mov
pushf
jnp
std
push
dec
cmpsb
es
mov
mov
cli
insb
cmpsb
xchg
sbb
pop
loope
sub
mov
dec
cmp
imul
xor
arpl
int3
jge
repnz
movsl
lret
fcoms
or
cmp
repnz
add
loope
adc
das
mov
pop
adc
xorl
pop
lret
fs
push
pop
cvtps2pi
inc
jae
cmpsb
cmp
insb
mov
jmp
pop
fst
in
lock
das
cld
dec
mov
mov
test
insl
dec
dec
ja
shll
lods
scas
jne
jge
les
pop
adcb
ds
pop
inc
movd
in
xor
cs
push
pop
icebp
push
std
mov
adc
and
jb
dec
stc
in
call
push
adcl
imul
and
push
insb
jecxz,pt
enter
cmpsl
cmp
sub
movsb
jp
xchg
shlb
lock
jno
and
mov
lret
fstpt
inc
jnp
loop
lcall
mov
into
push
leave
fisubrs
popf
cltd
cwtl
add
stos
pop
push
jmp
jbe
cmp
or
mov
mov
std
jl
in
fwait
jge
pop
pusha
cmp
fadd
mov
xchg
call
push
and
jle
pop
outsl
sub
leave
incl
mov
stc
push
inc
push
test
clc
loopne
jne
or
or
sahf
lcall
mov
subl
mov
xchg
xchg
inc
push
leave
mov
fsts
test
inc
jbe
sub
mov
pop
ss
cmpsb
aad
leave
adc
sub
add
daa
add
pop
fs
mov
push
mov
ffree
or
jge
les
movsb
test
push
push
add
pop
pop
sbb
cmp
test
jmp
pop
insb
jg
jne
arpl
leave
into
test
sbb
enter
pop
jae
cmc
ret
nop
data16
scas
cltd
into
pop
or
cmp
xchg
cmp
xchg
mov
sbb
xchg
loop
rorl
mov
fdivrl
mov
sbb
popf
hlt
push
xchg
lea
push
sbb
inc
ss
shrd
cli
addr16
outsl
jg
mov
stos
call
inc
scas
push
fnstsw
adc
outsb
jp
loope
pop
std
out
leave
push
sbb
pop
in
mov
bound
inc
sarb
add
shl
lret
pop
jnp
sub
jns
aas
subl
rcl
negb
mov
push
ss
jmp
test
std
test
test
scas
or
stos
mov
leave
pop
inc
cwtl
jl
int
daa
ljmp
les
xchg
roll
mov
jmp
adc
sub
pop
xchg
sar
outsl
sub
sub
or
xlat
int
pop
iret
mov
stos
imul
inc
inc
inc
pop
dec
or
xchg
dec
aam
imul
test
sbb
iret
std
pop
jb
stc
adc
roll
stc
mov
outsl
xor
roll
mov
cmp
insb
push
push
cmpl
pop
gs
out
mov
pop
jo
lods
inc
mov
cmp
or
movsb
dec
cmc
mov
ss
movsb
and
loopne
test
pop
lret
loop
jl
loop
jmp
sbb
rcrb
in
mov
ss
fnstenv
cmp
mov
and
mov
addr16
push
add
push
rcll
pop
das
jge
and
fs
inc
js
jge
jp
lea
xor
sub
add
mov
pusha
and
inc
stc
jnp
das
clc
jp
jmp
sahf
mov
mov
cwtl
sar
add
test
cmp
xor
bound
cmp
stos
mov
or
mov
xor
sub
rclb
test
out
inc
std
outsb
jle
push
mov
insl
in
lcall
mov
cwtl
notl
lock
jmp
mov
mov
cmp
jl
scas
sbb
cmp
mov
sub
loop
jmp
push
enter
mov
mov
cmc
nop
leave
adc
cmp
out
xchg
je
sbb
mov
mov
push
aas
dec
pushf
inc
pushf
pop
mov
ljmp
jo
jno
fsts
ret
xchg
xor
adc
dec
cltd
sub
vmwrite
sub
dec
repnz
outsb
pop
xor
out
jnp
add
and
pushf
in
movsb
jnp
fsubl
fcompl
aad
dec
push
test
movb
adc
push
add
rcl
shlb
fisubrl
test
dec
addb
mov
insb
loop
push
jae
jae
ss
scas
cmp
scas
push
lods
or
dec
xchg
fcoml
testb
sub
cmp
mov
jg
xchg
mov
jb
sarl
push
call
mov
mov
xor
outsl
cmc
out
sbb
inc
stc
divb
enter
int3
sbb
sbbl
add
mov
mov
fiadds
pushf
mov
fdivl
push
mov
adc
push
jo
stc
mov
adc
mov
jno,pt
xor
sbb
popf
push
cwtl
das
in
stc
inc
filds
sub
mov
repnz
xchg
and
add
inc
jp
or
mov
mov
xchg
lahf
das
hlt
xchg
jp
cmp
out
addr16
pop
ret
or
xchg
inc
push
sub
sarb
sub
sbb
bound
push
push
call
pop
inc
adc
pop
sbb
mov
jmp
mov
stos
mov
jl
cmp
push
pop
sbb
aaa
imul
das
lods
xor
push
cmpsb
xor
pop
adc
pop
sub
fsubrl
icebp
add
cli
movsl
sahf
xchg
in
cld
call
and
jecxz
mov
add
jnp
mov
mov
daa
mov
test
ja
or
jl
xor
popf
dec
pop
push
daa
dec
mov
mov
mov
inc
mov
stc
cmp
mov
pop
cmpsl
or
inc
test
shlb
mov
stos
xlat
pop
stos
mov
rcr
rcr
jbe
lds
cmp
das
mov
pushl
mov
xor
cmpsl
leave
push
cmp
inc
gs
fsubl
cmovae
adc
cmp
xchg
mov
jbe
lahf
addr16
sbb
addr16
scas
push
imulb
jbe
aas
cmp
mov
jb
out
je
imul
jb
pushf
in
ret
mov
inc
pop
enter
sbb
int
add
stos
imul
sub
leave
in
lock
dec
mov
xchg
cmp
xlat
icebp
and
jo
ljmp
push
repnz
das
mov
sub
jp
aad
lds
push
mov
ds
iret
xchg
les
sub
mov
inc
push
addr16
jmp
pop
jge
push
mov
add
rcl
inc
push
and
das
ss
je
data16
nop
adc
notb
shl
int
sbb
mov
je
fwait
jecxz
adc
sbb
cli
das
lret
das
nop
push
leave
mov
push
or
xchg
shll
mov
or
xor
and
or
out
push
sub
popl
mov
sbb
jne
dec
fisttps
push
dec
mov
ss
pop
mov
cmpsl
aad
ret
pop
mov
sub
in
aad
jge
mov
and
mov
sbb
sar
int3
or
shr
lock
fwait
or
mov
inc
push
mov
cmp
mov
xor
or
test
mov
jp
sti
adc
fcoml
pop
inc
cs
stc
aad
loop
jg
push
nop
lcall
jg
jp
repz
ret
mov
xchg
dec
xchg
and
mov
aam
mov
pop
fwait
push
adc
dec
or
ret
inc
mov
adc
mov
test
pop
pop
xorl
jno
and
scas
xchg
loop
push
loopne
ret
pop
add
mov
loopne
in
push
icebp
and
insb
sub
inc
mov
push
cli
out
cmp
add
and
adc
pop
aaa
adc
inc
decl
mov
mov
repz
push
push
imul
mov
push
xchg
mov
loope
and
pop
aam
pushf
adc
test
pusha
sahf
pop
pop
and
xsaves
sbb
cld
imul
mull
jge
fwait
test
push
pop
cmp
icebp
jg
cli
out
push
mov
xor
mov
sbb
cmp
mov
test
out
mov
and
outsl
adc
data16
sub
ds
push
sbb
mov
arpl
fucomp
mov
push
ficompl
out
lahf
add
outsl
sub
cmp
pop
xorb
mov
ja
pop
call
mov
rcll
push
jmp
lea
pop
pop
sbb
adc
aam
pop
push
push
xchg
push
jge
rorb
pop
stc
xchg
xor
fisttps
inc
and
xor
scas
xor
mov
fsubr
xchg
mov
pushf
lds
cltd
insb
movsb
leave
rcrb
dec
and
test
jae
jecxz
jns
pop
add
pop
repnz
aad
xchg
push
jns
mov
imul
addb
scas
jge
mov
sub
xchg
es
xchg
dec
mov
ret
add
xor
xor
jle
push
cwtl
sbb
jae
popf
cwtl
pop
adc
dec
and
xor
iret
push
push
adc
add
les
ljmp
ficoml
adcb
xor
outsl
pop
loopne
mov
jg
jb
bound
out
xor
lds
push
idivl
scas
cmp
xchg
xchg
cmc
xlat
loopne
cmpsl
or
xor
push
lods
jnp
jne
and
or
pop
cltd
andl
sbb
push
pop
cmp
mov
dec
jge
loop
lds
jl
cmp
cmp
xchg
enter
push
sbb
fxam
jl
idiv
push
jmp
fs
mov
jmp
jbe
mov
mov
add
mov
push
ljmp
cmp
xchg
push
mov
jle
or
lods
int3
stos
mov
add
push
mov
mov
or
lock
cmp
movsb
mov
enter
cmp
jo
lcall
sub
lcall
repnz
sub
movsb
xchg
in
jecxz
lret
pop
xchg
cmp
mov
stos
mov
bound
mov
aaa
js
ficomps
outsb
adc
pop
sub
icebp
xchg
icebp
arpl
cmpb
xchg
clc
ret
pop
shll
push
xchg
cmc
mov
test
hlt
mov
aad
push
pop
xor
aaa
nop
cmp
sbb
xchg
jge
movsb
mov
mov
mov
sbb
daa
jge,pt
testl
out
add
xchg
jp
into
imul
jo
stc
mov
push
fmull
lret
jns
sbb
mov
shlb
call
loope
rorb
movl
push
pop
repz
dec
filds
sbb
push
cmp
pop
inc
cld
mov
cmp
inc
push
and
dec
fiadds
xor
inc
aas
cmp
jae
dec
push
lods
fidivrl
mov
push
jo
mov
mov
or
sub
in
stos
repnz
jno
inc
call
gs
cmp
sub
mov
mov
xor
fimuls
mov
pop
std
add
inc
mov
in
sbb
mov
stos
fists
push
or
and
movsl
cmpsl
and
out
and
arpl
nop
imul
inc
adc
sbb
sub
movsl
stc
jl
sbb
xchg
aam
and
das
mov
inc
sahf
aaa
sahf
xchg
sbb
pop
xor
sbb
icebp
in
cmp
sub
fnstcw
xor
shlb
cmp
repz
push
xor
or
push
sahf
out
inc
ss
pop
ret
push
in
xchg
fiaddl
xor
push
sti
cmp
cmpsb
adc
xchg
stos
dec
xor
and
push
pushf
xchg
repz
xchg
leave
scas
mov
ss
jl
std
gs
xor
bnd
and
or
repz
out
rorb
mov
addr16
lahf
call
xchg
in
cmp
out
in
push
outsb
and
jb
xchg
inc
les
clc
mov
add
clc
add
rcrb
shlb
pop
je
fisubrl
sbb
imul
test
jp
pop
ror
add
fdivrs
rclb
jb
sar
insl
jne
divb
pop
add
jp
sub
sub
mov
jae
mov
sbb
xor
pop
sbb
pop
xchg
dec
dec
fidivs
mov
mov
enter
data16
push
pop
adc
in
or
std
insb
pop
ret
dec
daa
lcall
dec
sbb
out
dec
test
mov
das
rorb
inc
sti
mov
hlt
loope
xor
mov
int
test
jmp
and
inc
adc
jae
cltd
cmp
or
stos
sub
pop
aad
adcl
mov
mov
or
lcall
fcom
jno
adc
dec
inc
cmp
fldl
lcall
popf
popf
daa
ljmp
lock
mov
or
dec
push
push
push
lods
inc
xor
jne
push
scas
pop
lock
fcomp
insl
sbbl
or
or
jecxz
loopne
mov
sub
dec
cld
or
cs
outsb
push
jno
ret
pop
xor
pushf
and
mov
pop
cld
push
cmp
sbb
cmc
inc
repnz
pop
pop
inc
lret
mov
and
cltd
xor
dec
xlat
sub
pop
adc
cmp
mov
inc
cmp
pop
sbb
stos
fwait
shl
lods
cld
xor
nop
fwait
push
shl
addr16
push
mov
dec
xor
inc
push
loopne
xor
pusha
pop
and
dec
fistpll
fwait
inc
jns
jae
mov
int3
add
sahf
adc
js
rcll
insb
ret
lret
add
arpl
pop
jge
sub
mov
xchg
cmp
push
adc
sub
cmp
fidivs
icebp
mov
jecxz
fidivs
cmpsl
fnstcw
hlt
inc
ljmp
in
push
and
rclb
push
and
xor
push
cmp
jae,pn
sti
js
mov
call
pop
add
in
out
mov
xor
xchg
dec
mov
out
addl
xor
lret
add
sahf
pop
or
cmp
clc
xor
add
push
mov
ds
pusha
or
bswap
xchg
inc
popa
repnz
adc
out
push
loop
xor
xchg
dec
ljmp
ja
fsubrl
xor
add
shl
sarb
rorb
inc
out
sbb
leave
push
pop
dec
negl
repnz
ljmp
popf
jne
roll
mov
sub
and
pop
push
loop
add
pop
ss
in
add
fs
daa
xchg
sti
stc
dec
inc
shrb
sub
cld
push
sbb
jle
cld
xlat
add
inc
push
xor
sbb
aaa
mov
ja
nop
or
dec
aad
and
in
jo
mov
or
jae
xchg
aas
cmp
pop
sub
sbbb
mov
js
adc
sub
int3
dec
sbb
cmp
aad
in
mov
int3
loop
mov
jl
sbbl
cmpl
ds
add
mov
pop
mov
dec
std
adc
adc
sbb
dec
pop
xchg
cwtl
or
and
push
or
xchg
sti
pop
hlt
mov
push
into
notl
inc
pushf
scas
sub
in
xchg
cmc
cmp
xchg
sub
jge
mov
fistl
add
mov
jecxz
push
and
rcrb
jmp
add
mov
inc
stos
fimuls
mov
dec
push
dec
mov
out
push
mov
or
mov
ss
sub
xor
jb
sub
inc
xchg
adc
into
mov
sub
mov
cmc
mov
shll
gs
adc
adc
fistps
jmp
sub
ja
push
cmpsl
adc
inc
jbe
mov
xchg
sub
jp
sahf
push
xchg
pusha
adc
popf
sub
lret
mov
icebp
mov
cmp
sbb
in
test
nop
push
sub
icebp
in
shll
aaa
xor
mov
pop
lods
ss
sahf
xchg
and
xchg
ret
das
cs
mov
add
push
ljmp
sub
mov
gs
dec
mov
pop
sti
add
out
sbb
sahf
pop
loopne
and
in
mov
dec
lret
sbb
mov
scas
cmp
pop
test
repz
mov
fwait
punpckldq
pop
xchg
addl
rcrl
mov
xchg
test
jge
shrl
pop
or
xor
inc
jmp
shlb
dec
loop
or
test
les
jp
sahf
xor
mov
mov
mov
cmc
mov
mov
jo
mov
cmp
mov
fsts
sbb
popf
cmp
jb
ds
inc
dec
adc
int
outsb
jbe
cmp
fs
pop
rcrb
lods
add
xor
or
xlat
jecxz
add
inc
frstor
pop
inc
mov
stos
int
and
push
pop
jecxz
sub
daa
jl
mov
data16
and
push
dec
pop
ret
repnz
jl
push
lea
pop
ja
pusha
mov
and
aas
and
pop
cld
in
pop
sbb
call
ret
push
jno
push
cmp
or
shlb
inc
movsl
dec
inc
dec
sbb
ret
dec
or
std
or
fdivrs
test
xchg
xor
xchg
jmp
push
inc
cmc
mov
sbb
sub
mov
insb
negb
xchg
jnp
jbe
clc
mov
inc
adc
jno
xchg
xchg
jnp
ds
bound
dec
mov
ljmp
mov
outsl
cwtl
repnz
sbb
xor
jne
scas
jg
pop
jb
inc
mov
in
push
mov
repnz
lea
ret
or
xchg
mov
add
adc
mov
inc
hlt
pop
int3
imul
push
sti
push
pop
push
jmp
outsl
adcb
mov
fidivs
sbb
jecxz
sub
cmp
push
data16
sti
cmovb
sahf
mov
out
push
xchg
sub
iret
outsb
add
mov
je
pop
xchg
pop
push
push
lcall
push
adc
out
scas
arpl
dec
add
rol
cli
cmp
dec
lock
fistpl
int
jg
sbb
ss
rcrb
jno
enter
and
cs
ffreep
sarb
xor
dec
mov
inc
cmp
gs
fs
sub
adc
in
mov
iret
in
aaa
fwait
jge
jmp
inc
jbe
loopne,pt
xchg
pop
sbb
push
insb
outsb
sbbb
jp
jmp
div
cltd
adc
cmc
ss
and
add
and
out
ja
cmc
ds
cmc
aas
xchg
push
pop
or
imul
sub
or
dec
fdivrl
inc
add
lret
clc
lea
std
fimuls
add
data16
in
sub
add
inc
sbb
mov
and
sbb
dec
rorb
outsl
adc
out
pop
ficoms
push
out
pop
pop
loop
and
jne
jae
or
or
adc
and
pop
decl
sbb
aaa
fsubr
popa
lret
mov
decl
sub
push
xor
lret
ss
repz
ficomps
inc
pop
shr
push
pop
ja
xor
cmp
arpl
push
jmp
scas
repnz
jnp
lods
cmpb
adc
push
mov
pop
outsl
out
jp
jo
fwait
pop
pop
jp
out
leave
lods
xchg
sarb
loopne
dec
aaa
dec
ret
int
sbb
int
jb
mov
ret
inc
inc
jmp
leave
in
jp
inc
jns
sub
push
fwait
jb
sbb
cmpsl
jno
stos
mov
leave
int
in
jno
popf
test
push
cmp
pop
ss
leave
jae
xchg
into
stc
mov
jno
mov
xor
sbb
and
mov
jns
clc
xor
mov
xor
mov
fimull
movsl
xchg
dec
js
pop
lea
stc
arpl
and
mov
test
ror
cmp
test
fs
push
cld
negb
and
sbb
jge
and
pushf
and
jo
test
icebp
mov
pop
inc
stos
cmp
out
cmp
xor
sub
out
jmp
bound
sub
cmp
mov
jmp
loope
pavgb
xor
hlt
shll
jle
xor
cmp
scas
xchg
mov
pop
aaa
mov
std
adc
adc
jge
sbb
and
ja
lods
jmp
shlb
cmp
int
xor
sub
mov
push
push
fldenv
dec
mov
mov
dec
pushf
icebp
jg
inc
xchg
and
cmpsb
pop
fwait
ret
inc
popa
xor
mov
sbb
pop
push
scas
stc
ret
and
pop
nop
push
mov
and
pop
fcmovnbe
xor
jl
push
pop
and
adc
ds
shrb
fldt
lcall
rolb
push
test
or
arpl
jecxz
in
loope
call
sahf
lcall
insb
mov
pop
clc
pop
fdivr
dec
push
shlb
dec
adc
xchg
pop
ljmp
aaa
sahf
jne
xchg
pushf
xchg
xchg
inc
mov
xchg
push
ja
xor
mov
push
pop
dec
pop
adc
cld
xor
jns
fisttpll
push
push
sahf
cmp
sti
sbb
inc
push
inc
or
fbstp
mov
int
sbb
add
in
data16
inc
stc
fwait
or
adc
cmp
pop
pop
cmpl
dec
mov
sarl
std
hlt
mov
adc
adc
pop
in
insl
pop
push
sti
and
fmuls
mov
int
sbb
cmpsb
call
aam
inc
sahf
cmp
pusha
mov
adc
movsb
mov
push
nop
dec
rolb
pop
sub
jl
mov
fwait
insl
lea
xlat
sbb
hlt
pop
xchg
scas
dec
inc
adc
pop
arpl
test
xor
mov
inc
imul
jg
lds
jnp
mov
lcall
fstl
inc
outsl
sbbb
xchg
mov
dec
mov
insb
or
pop
mov
loopne
or
sti
xchg
or
cli
stos
shlb
sti
sbb
sahf
scas
pop
inc
sarb
test
lods
mov
lea
xor
sbb
int
cld
inc
jae
leave
mull
inc
or
mov
lds
out
les
and
cmpsl
mov
and
imul
sbb
lds
fimuls
int
mov
fldl
adc
cmpsb
mov
mov
lea
inc
aad
lret
fwait
xor
mov
daa
roll
cmpsb
jne
pop
scas
xchg
xor
push
leave
or
lret
lods
sub
xorb
cmpsb
popl
cmp
mov
xchg
jae
mov
mov
sahf
mov
cbtw
lock
add
mov
ret
das
fisubrl
inc
add
test
scas
adc
inc
fs
sbb
pop
pop
xchg
push
call
leave
and
insl
jae
dec
ljmp
mov
pop
inc
in
cli
sbb
int3
push
std
xor
add
pop
mov
rcrl
push
push
loopne
sti
sbb
xchg
lock
cld
clc
sbb
or
mov
and
outsb
push
lods
jl
mov
rorb
sbb
xor
arpl
and
in
jae
xor
and
sbb
out
or
push
cmp
cmp
xor
mov
mov
or
xchg
fs
and
pop
lcall
nopl
or
or
cmc
sbb
out
pop
mov
push
xor
xor
cmp
sub
add
addr16
or
jmp
adcb
cmp
stos
outsl
cmp
ja
in
jmp
cld
mov
or
add
sbb
sti
push
jge
sbb
shlb
shr
fnstcw
test
push
outsl
mov
lods
or
mov
out
sbb
mov
mov
ret
imul
aaa
cli
push
push
stos
rclb
iret
leave
gs
add
xor
cmp
push
cmp
or
cli
mov
sbb
dec
and
or
pop
out
stc
lret
xchg
cmp
cmp
mov
pop
adc
or
xchg
jne
cmpsb
jno
mov
loope
fwait
stos
sahf
test
adc
cmpsl
daa
in
loopne
push
pop
fwait
mov
fwait
xchg
fidivs
sbb
lcall
add
out
sub
mov
xor
addb
into
int3
adc
pop
push
aam
jp
sub
adc
or
ja
adc
cmpsl
test
ret
push
movsb
repnz
ljmp
or
push
sbb
push
arpl
push
sub
mov
sbb
je
sub
xorb
pop
cltd
cld
jl
dec
ret
popa
adc
mov
les
call
sahf
mov
out
pop
roll
add
mov
jae
and
dec
cmc
mov
int3
insl
push
int3
movq
insb
jp
adc
jl
popa
lods
out
gs
outsl
imul
sub
inc
in
sbb
pop
mov
icebp
sub
test
or
into
clc
xorb
es
sbb
inc
repz
imul
xlat
mov
jge
jmp
aam
scas
inc
or
sbb
inc
stos
in
push
daa
mov
mov
popf
dec
pop
mov
and
or
inc
jb
ret
sub
inc
into
in
test
in
ljmp
bound
xchg
bound
and
inc
test
cmpsl
inc
xchg
inc
inc
dec
inc
mov
jae
xor
out
std
push
push
je
pop
fnstenv
repz
cmp
mov
andb
adcl
aam
or
jae
in
loop
sbb
stc
pop
rcrl
hlt
cmc
xor
inc
in
fldenv
frndint
lcall
mov
or
cmc
hlt
fs
nop
ror
loopne
outsb
iret
mov
push
dec
push
sbb
out
mov
mov
sbb
mov
fnsave
aas
cli
icebp
fisttps
fisubrs
loope
adc
lret
inc
add
mov
mov
adc
out
hlt
or
lock
xchg
idivl
int
sub
or
outsb
and
out
pushf
addb
les
out
jg
mov
or
mov
outsb
call
data16
fcmovb
ret
cs
ret
cmp
stos
jp
lods
int3
ds
jp
or
fs
push
xchg
push
adc
psraw
pminsw
das
sarb
and
jns
lds
adc
xchg
aam
loop
and
sbb
inc
mov
sbb
dec
ss
dec
bswap
fcoms
mov
nop
pop
mov
add
aaa
aaa
and
loope
in
jnp
inc
ljmp
cmc
pop
push
and
dec
and
mov
in
fisubrl
cmp
inc
subb
xor
pop
scas
clc
cmp
lds
popa
inc
es
mov
push
and
xchg
std
jle
and
jo
sub
dec
cmp
mov
adc
pushf
lret
and
leave
xchg
popa
rclb
inc
push
in
pop
adc
sarl
pushf
xchg
inc
push
or
and
or
push
cmp
sub
loope
or
mov
subb
pusha
scas
iret
insl
in
sar
repz
or
mov
ret
sub
mov
negl
xchg
mov
add
movsl
icebp
or
scas
mov
fisttpll
dec
or
hlt
cld
xor
fcompl
fs
test
xor
adc
das
and
int3
dec
push
stc
xchg
xor
jl
xchg
sbb
mov
push
cmp
sbb
mov
sub
xlat
dec
les
mov
nop
add
out
mov
or
push
add
ja
adc
pop
inc
dec
test
rorb
and
aaa
mov
mov
rcr
shlb
jge
inc
enter
cmp
jle
lret
and
insb
push
cs
cmpsb
jecxz
cmp
lock
mov
cs
popa
insb
hlt
insb
mov
lcall
in
lods
scas
sahf
lods
push
cmp
push
cmp
loop
sbb
aad
fsubrl
jg
inc
inc
and
push
rolb
sbb
ret
jmp
pop
movsb
fcoml
lret
loop
loope
or
clc
inc
jnp
xor
test
xchg
adc
stos
push
mov
mov
addr16
repz
test
scas
leave
xchg
fistpll
movsl
fidivrl
mov
andb
inc
sbb
fidivrl
lahf
fs
lcall
leave
icebp
lea
push
ljmp
sarb
loope
sub
and
dec
test
mov
mov
pop
test
pop
xchg
test
push
jae
mov
dec
pushf
and
lcall
mov
sbbl
gs
mov
scas
or
test
aaa
jae
sub
xchg
xchg
insl
rcll
das
out
xchg
shr
pop
scas
popa
test
int3
pop
push
out
scas
mov
cmpsl
stos
ds
mov
pop
sub
sbb
sahf
cmp
out
push
cli
sahf
and
insl
lock
fstpt
mov
ja
sbb
xor
movsl
mov
inc
add
nop
jmp
loop
push
pop
in
cmp
cli
iret
dec
popf
jmp
or
pop
xor
repz
pusha
repnz
jle
xlat
jo
popa
aas
das
xlat
add
divl
pop
xchg
scas
popf
dec
jae
mov
rcll
xchg
and
jno
mov
notl
rep
imul
scas
fsubrp
jae
insb
jge
and
or
dec
xchg
ret
out
mov
push
add
adc
leave
inc
aaa
lret
sub
dec
popa
mov
cmp
fwait
dec
int
in
xchg
imul
xchg
xchg
lcall
or
lret
lcall
sub
xchg
pop
dec
jo
movb
adc
ja
ds
bound
in
xchg
es
cmpsb
mov
subb
jle
adc
test
add
int3
push
in
sub
out
cs
sbb
ss
movsb
addb
popl
inc
cmp
stos
in
jno
int
aaa
cli
mov
lahf
popl
rorl
pusha
or
cmpl
sub
ret
nop
btr
pop
xchg
pop
fists
pop
sahf
or
repz
mov
jbe
and
sbb
insb
mov
fimuls
and
mov
xchg
shlb
cld
pop
leave
aad
iret
push
fisubl
pop
test
cs
fimull
push
stos
sahf
pop
icebp
imul
jne
iret
subb
jge
pop
out
mov
es
mov
pop
sbb
mov
xchg
shrb
arpl
sbb
jno
mov
sbb
orl
jmp
dec
ret
push
into
repnz
mov
leave
mov
push
sbb
xchg
jno
inc
mov
std
jge
fcomi
add
push
lock
dec
sti
sub
push
mov
cmp
and
testb
jle
jecxz
rolb
cmc
adc
in
sbb
push
out
and
pop
mov
adc
push
push
inc
lahf
ret
xlat
and
jbe
test
mov
pop
loop
lcall
bound
xchg
add
stos
cmp
xchg
push
outsb
or
jbe
cmc
fisubrl
sub
movsl
sbb
ss
dec
mov
dec
imul
xor
and
imul
push
dec
clc
xchg
mov
mov
xchg
push
mov
mov
inc
cltd
clc
push
stos
mov
mov
jge
inc
jnp
jl
ja
aaa
rorb
iret
add
leave
out
addr16
sbb
push
std
fnstenv
jne
bound
loop
pop
xchg
adc
stos
jge
gs
mov
dec
adc
test
push
lds
pop
adc
xchg
or
pop
add
add
xchg
cmc
adc
punpcklbw
cmp
aaa
pop
push
sub
jge
dec
pop
pop
addr16
jne
negl
and
xlat
pop
inc
push
loope
movb
test
push
inc
sahf
push
scas
sub
xlat
cmpsb
adc
rorl
vpcmpeqd
mov
push
add
adc
adc
mov
pop
fs
call
mov
adc
xchg
xor
adc
xchg
inc
xchg
xchg
icebp
cs
es
cmp
jle
pop
ljmp
add
jne
inc
and
sub
cmp
push
jns
icebp
dec
scas
push
gs
testl
pusha
dec
enter
jge
cmpl
mov
cwtl
jmp
in
jecxz
loope
mov
ret
cmpsb
ret
xchg
sbb
mov
mov
es
xlat
or
mov
aas
mov
push
xchg
sub
inc
scas
inc
mov
sarb
mov
mov
int3
lcall
mov
ja
into
pop
cltd
jne
mov
hlt
data16
fstpl
pop
sub
jno
push
loop
or
mov
push
stc
jno
mov
push
add
aad
push
cmpsb
mov
jge
pop
test
inc
rcll
cs
ljmp
cmp
pop
and
ret
lods
repnz
jb
cltd
and
cmpsb
dec
daa
cmp
pusha
xlat
push
lea
mov
outsl
outsl
or
in
jmp
push
icebp
jmp
add
shrb
jns
mov
int3
xor
mov
xor
cs
aaa
movsl
mov
push
insb
clc
mov
mov
pop
in
in
jns
fsubrs
imul
pop
cmp
cmp
add
pop
loopne
fldcw
pusha
lock
fucomp
push
xor
outsl
mov
lret
sub
push
cmpb
and
imul
clc
shll
faddp
or
mov
sub
lret
in
inc
cmp
loope
push
sbb
adc
cmp
ds
xor
pusha
mov
ja
sahf
add
mov
shrb
jno
rcll
sbb
adc
in
mov
and
jg
jo
pop
mov
repz
push
mov
call
stos
jb
fadd
mov
in
dec
add
dec
call
push
dec
xlat
fdivrl
test
out
sbb
xchg
mov
push
ss
enter
push
aad
cmp
or
int3
jmp
fisubl
sub
out
loopne
fstpl
iret
outsl
addl
xchg
test
pop
cli
aam
out
push
mov
mov
xchg
lds
fstps
lea
ret
push
inc
xchg
popa
adc
pop
adc
add
lods
mov
outsb
jge
mov
addr16
inc
cwtl
cltd
fsubrl
inc
cmp
jno
inc
int
adc
je
mov
popf
pop
jne
lods
sbb
inc
and
ja
xchg
pop
mov
and
enter
test
lcallw
inc
dec
xchg
test
xor
add
inc
xchg
and
lret
push
jne
std
cli
sbb
loop
mov
xor
int3
test
push
or
sbb
cmp
lret
xchg
adc
es
icebp
or
cmpsl
pop
ret
sub
cli
in
push
sub
outsl
dec
das
fs
adc
pop
add
inc
cmpsb
or
nop
in
std
fisubl
popa
mov
mov
test
xor
add
bound
outsl
xchg
pop
dec
shrl
pop
stc
rcrb
mov
xor
fwait
mov
loopne
sub
in
push
fs
and
adc
or
ret
cmp
rorb
outsl
or
dec
push
mov
xchg
ds
mov
aaa
in
sub
imul
adc
sbb
and
adc
out
cmp
repz
ret
add
divl
test
mov
add
jns
inc
pop
jne
aas
ss
sbb
loop
mov
popf
js
imul
fsts
movsb
in
rcl
sub
xchg
js
jno
stos
sub
shrb
adc
sarl
add
lret
js
sti
jp
mov
jo
sarb
out
cwtl
sahf
jne
add
jl
fcompl
test
and
ret
jnp
jmp
clc
std
lods
push
cmp
movsb
fildl
sahf
loopne
pop
push
gs
int
mov
xchg
adc
sti
mov
jle
xorl
or
mov
insb
js
pop
sbb
and
pop
xor
cmp
imul
mov
stos
sahf
pop
adc
jae
jno
jle
ds
adc
scas
sar
sti
mov
cltd
flds
out
gs
fs
mov
push
push
jbe
sbb
inc
inc
movsl
dec
fnstenv
lods
test
adcl
enter
into
xchg
mov
add
ds
pop
mov
adc
cmp
or
and
xchg
sarl
pop
pop
aaa
mov
add
sbbl
push
mov
movsl
sub
icebp
movsb
jl
pushf
mov
sahf
mov
aaa
or
adc
sti
push
mov
adc
scas
inc
push
popf
mov
cmp
test
cld
dec
into
testb
decb
lods
in
repnz
hlt
adc
stos
dec
push
cmc
mov
outsb
mov
aaa
xchg
mov
gs
xor
into
dec
inc
jbe
pop
jmp
mov
std
adc
and
and
add
repnz
push
xchg
sbb
cwtl
cmp
mov
sub
mov
scas
pop
mov
mov
mov
xor
popa
int3
movsl
jecxz
ljmp
bound
and
sub
test
sbb
jp
ret
mov
pop
inc
jbe
or
or
dec
lret
add
das
jae
aad
data16
aas
jge
clc
out
out
je
and
test
iret
xchg
sbb
in
int3
mov
movsb
xchg
sbb
fsubs
cmp
mov
movsb
mov
add
jecxz
addb
rol
das
into
xchg
inc
and
and
jae
and
dec
mov
jnp
mov
sbb
sub
adc
jmp
mov
sub
arpl
xchg
repz
mov
mov
mov
fidivl
mov
call
pop
mov
or
icebp
aas
dec
sti
sub
pop
les
scas
test
test
xor
in
jno
orl
iret
ljmp
push
lahf
sub
cmpsb
xor
outsl
push
sbb
cmpsb
or
jae
insl
pop
les
pop
out
jae
in
xorb
xchg
daa
sahf
data16
sub
pop
out
shl
lock
cmp
notl
xchg
pop
shl
outsl
ret
adc
cmp
mov
andl
mov
pop
daa
jnp
lret
xlat
pusha
xchg
outsb
dec
sti
int3
cmp
repz
mulb
mov
fstps
mov
add
dec
or
rclb
out
add
scas
lahf
std
xchg
pop
xchg
pusha
pop
push
mov
adc
mov
scas
mov
or
insb
call
fldenv
dec
sahf
mov
pop
inc
sbbl
xchg
cwtl
mov
push
or
ret
add
xor
xchg
dec
jle
dec
shll
fwait
jae
sarb
lods
into
mov
xor
movsl
movsl
jnp
jns
push
mov
mov
sahf
fcoml
xor
cli
arpl
ljmp
mov
mov
fisubl
jp
fistl
cmpsb
jb
xchg
out
or
cwtl
and
lcall
iret
call
sbb
or
faddl
test
lea
jmp
cmpl
loop
jb
jne
xchg
sti
jecxz
fistl
pop
or
loopne
xor
xchg
pushf
in
pop
adcb
jnp
jo
shll
mov
arpl
inc
and
out
push
repnz
adc
cmp
sub
xor
sub
stc
dec
cltd
mov
jecxz
sbb
mov
fnstcw
hlt
cmp
shll
mov
or
mov
fcmovnbe
les
xor
inc
inc
imul
incb
lea
fcom
xchg
clc
in
in
sub
sbb
pop
cwtl
jbe
jnp
ss
dec
data16
repz
xchg
lock
aas
hlt
mov
lods
roll
xor
aas
popa
push
loope
fsts
mov
mov
rorb
jno
inc
cmc
adc
mov
clc
int
push
es
outsb
push
dec
or
loop
lock
push
fs
repz
push
pop
sti
pop
imul
addl
jmp
aad
test
dec
sbb
jb
xor
mov
std
cmp
mov
xchg
jns
push
js
inc
and
push
testl
mov
dec
fldt
aad
mov
ds
pushf
cs
mov
sub
int3
add
dec
notl
es
add
xor
clc
inc
fdivrs
mov
jle
sub
mov
adc
sbb
fsts
pushf
out
mov
jne
jl
add
and
sbb
ret
sbb
je
pop
pushf
leave
xchg
pop
mov
pop
mov
jmp
and
stos
scas
es
fucomip
mov
mov
lods
gs
std
xlat
or
sti
add
mov
push
mov
hlt
xchg
lods
shlb
add
inc
test
test
pop
scas
sbb
or
or
sub
push
mov
push
test
mov
in
loopne
xor
cmpsb
xchg
shrl
out
in
lret
repnz
js
push
xchg
xor
andb
mov
sbb
std
popf
xchg
jecxz
jecxz
sbb
xchg
pusha
push
xchg
mov
cmpsb
add
add
fcmovnbe
mov
adc
pop
mov
mov
ret
ja,pt
subl
push
or
mov
xor
jle
add
cmp
movsl
fdivs
mov
jl
cmpsb
enter
and
icebp
cli
lea
cmp
jecxz
in
add
test
dec
lock
and
jmp
je
pusha
test
xlat
sbb
sarl
push
mov
mov
sahf
je
addb
lcall
int
outsb
aad
push
and
inc
jp,pt
mov
test
faddp
movsl
sahf
sbbl
cmp
popf
and
push
sbb
lea
lret
fsubl
dec
inc
outsb
jmp
mov
imul
aam
jl
jl
jg
stc
xlat
push
hlt
dec
cmp
in
xchg
hlt
pop
ja
jns
pop
bound
push
push
int
pop
vmread
xor
cli
push
inc
jb
mov
xor
call
jg
sbb
or
mov
pop
loopne
das
cmc
iret
bound
daa
jp
or
xchg
sbb
inc
add
cli
imul
mov
js
push
push
aas
scas
xorl
inc
inc
in
mov
shrb
test
inc
mov
out
pop
movsb
jge
push
jle
arpl
mov
and
lock
mov
and
cld
adc
repz
inc
mov
icebp
sub
pop
adc
int
mov
inc
loope
inc
xor
add
xchg
xlat
push
sbb
and
mov
jmp
pop
push
push
push
pop
jecxz
adc
stos
lret
out
cmp
dec
sbb
cmp
call
adc
les
addr16
das
ret
push
fnstcw
or
push
adc
xchg
std
push
std
xchg
mov
or
dec
repnz
rorb
addb
xor
dec
cmp
movsl
sub
sub
lods
cmp
adc
outsb
lret
mov
lods
sbb
jl
daa
bswap
frstor
addl
ret
cmpsb
mov
sbb
aad
loop
aas
push
movsb
sub
div
movsl
shll
adc
sbb
pop
imul
in
mov
rcll
shll
out
mov
and
das
xchg
loope
dec
pusha
add
das
cmp
push
fld
rcll
lahf
das
out
call
add
xor
add
sahf
jne
jge
gs
out
sarb
sbb
out
dec
rorl
cwtl
jae
lods
int
hlt
rol
pop
ficompl
cld
in
out
jle
xchg
popa
cmp
dec
lds
push
es
push
xchg
cmp
jne
insl
ja
push
push
movsl
xchg
inc
hlt
dec
sbbl
outsb
mov
adc
fstpt
xchg
in
ljmp
cmp
adc
pop
js
xchg
pop
mov
pop
arpl
popa
pusha
nop
push
sarb
xor
in
jb
jne
pop
mov
pop
ljmp
out
jno
fucomi
je
and
inc
jns
adc
insl
or
pop
xor
xchg
out
cmp
jecxz
leave
add
leave
pop
jp
jmp
pop
popf
mov
mov
int
rep
dec
adc
cmp
loope
aaa
add
adc
frstor
adc
and
aad
insb
jb
pop
cmp
lods
mov
or
or
in
adc
jmp
sub
dec
jno
or
cwtl
ficompl
add
repz
int3
arpl
xlat
call
out
jg
subl
xor
adc
mov
sbb
ss
scas
int3
lods
add
lea
jns
sub
stc
xor
jns
dec
je
in
out
or
mov
sub
adc
inc
clc
repz
pop
and
push
cmp
or
xor
pop
dec
fildl
or
dec
ss
cmp
rolb
and
push
dec
out
or
or
fldenv
into
sub
in
call
cmp
rolb
mov
jb
adc
cmp
xor
sbb
push
mov
or
shll
or
mov
lods
add
orl
scas
inc
out
pop
xor
jmp
inc
adcl
lods
jb,pt
push
adc
mov
aam
lret
and
test
dec
lock
les
inc
lret
inc
shlb
call
push
sub
imul
pushf
or
fdivrs
xor
mov
push
cwtl
mov
ljmp
mov
je
dec
jle
aad
mov
adc
mov
ret
mov
pop
push
inc
sahf
jnp
mov
je
sarb
lods
mov
sti
scas
mov
jo
cmp
das
push
sbb
popf
mov
mov
cmc
adc
push
push
cmp
jl
sbb
fs
lea
cmp
subb
stos
jae
insl
pop
andl
sbb
inc
rcl
jo
push
adc
pop
mov
enter
pop
push
cli
push
out
or
jecxz
cmpsl
xlat
pop
and
xorb
sub
and
push
lods
into
pusha
and
and
sub
sbb
stos
repnz
cmp
cmpsl
sbb
movsl
cmpsb
mov
mov
push
and
add
fistps
pop
ljmp
add
lock
notl
in
push
hlt
cmpsl
jp
cmc
pop
fwait
mov
aam
lret
loop
adc
push
lds
and
shll
dec
cltd
leave
inc
insb
popa
or
jbe
push
subb
mov
pusha
idivb
cli
add
inc
push
pop
mov
push
aas
cmpsl
or
leave
ss
outsb
sbb
sub
dec
stos
push
or
mov
gs
enter
push
xchg
sbb
lods
nop
push
push
xchg
jg
fimuls
rorl
rcrl
inc
cltd
xchg
test
jle
ds
out
mov
bound
movsb
idiv
or
cltd
push
stos
test
loopne
into
push
addr16
lods
sbb
jmp
cltd
inc
sbb
sub
into
std
xor
mov
push
adc
push
out
insb
imul
in
ret
insl
insb
xchg
in
ss
jg
insb
icebp
fisubrl
add
mov
mov
add
push
in
jp
pop
nop
or
ret
int3
pop
lock
movsl
or
inc
pop
jo
divl
sub
test
leave
mov
mov
jecxz
push
inc
jo
sub
sbb
in
adc
hlt
popw
ret
mov
stc
out
ds
in
popa
pop
and
jo
in
insl
hlt
adc
ja
jmp
popl
or
push
addr16
aas
jo
test
mov
jecxz
stc
int3
out
mov
sbb
stc
js
and
dec
push
cltd
mov
xchg
cwtl
ja
jne
xorb
xor
mov
insl
in
sub
mov
adc
adcl
jge
lods
jno
cltd
and
and
ss
pop
decb
adc
sub
mov
xor
in
das
rcll
pop
inc
fwait
dec
fadds
pusha
inc
dec
push
jae
push
xchg
sub
testb
pop
icebp
pushfw
pop
pushf
pop
sbb
int
iret
in
pop
jns
in
xchg
xor
or
push
mov
xchg
test
aam
and
xchg
aad
xorl
mov
adc
in
pop
sbb
jle
loop
out
jecxz
add
jb
arpl
leave
imul
fsubrs
daa
ljmp
data16
push
and
movsb
add
jns
jne
lods
pop
cld
fsubrs
testl
sub
imul
push
xor
and
push
push
lcall
push
stos
xor
test
mov
adc
mov
add
ret
stc
ret
aas
scas
mov
lea
sti
push
cmp
test
aad
adc
outsl
xchg
mov
out
outsl
dec
movsl
sub
ret
cmp
xorb
sti
mov
mov
push
xchg
mov
idivl
pushf
sbb
push
repnz
push
cmpsl
xor
mov
inc
out
js
and
push
sub
cmpsb
xchg
xor
int3
mov
lret
lcall
mov
or
inc
inc
sbb
out
rcll
fnstsw
mov
and
pop
pop
into
loop
cmp
add
aad
xor
mov
mov
ds
or
cmc
push
mov
jae
mov
adc
je
xchg
mov
out
pop
cmp
xorl
mov
xor
mov
sub
push
sar
in
inc
jl
inc
add
push
notl
enter
lret
push
jne
sti
fwait
mov
shl
mov
cli
and
icebp
pop
pop
rolb
insl
sub
jecxz
aaa
int3
pop
test
or
loopne
or
shl
repnz
inc
addr16
lods
jo
inc
xor
cmpsl
xchg
push
cli
dec
imulb
test
xlat
pop
pop
or
cmp
dec
adc
jo
push
lahf
mov
xor
movsb
in
jns
fisttpll
mov
mov
inc
std
lret
mov
jbe
pop
inc
lock
int
test
fiaddl
add
dec
inc
cmovne
jb
sbb
mov
mov
xchg
mov
aaa
inc
mov
in
adc
sub
adc
in
xor
jmp
jne
dec
sub
cmc
mov
add
inc
cwtl
xor
mov
out
add
xor
sub
mov
outsb
mov
xchg
dec
and
jmp
push
add
mov
adc
jecxz
or
mov
fcomps
data16
cmp
sub
lods
popf
out
jmp
pop
inc
sbb
stc
mov
add
cmc
sbb
test
js
out
pop
jno
je
push
movnti
cmp
inc
add
xchg
out
mov
mov
lret
dec
mov
test
cmpsb
testb
lock
pop
jle
lods
inc
jbe
lret
icebp
mov
cmc
jne
les
mov
jecxz
je
mov
push
incb
pop
and
mov
cmp
add
xchg
cmc
daa
aad
imul
or
out
or
inc
jle
ljmp
or
jl
sbb
cwtl
inc
push
and
mov
cmp
ds
cld
je
push
popa
test
xchg
sbb
lods
iret
int3
aam
cmc
jnp
data16
mov
push
aam
cli
and
jb
in
or
sub
in
aad
sbb
leave
outsb
dec
push
or
pop
inc
pop
add
adc
std
fwait
js
test
repnz
pop
insb
and
xor
lret
ja
cmp
xor
jmp
xor
in
loope
push
decl
dec
mov
pop
loope
daa
push
stos
stos
rorb
jbe
imulb
pushf
mov
aaa
fsts
pusha
add
das
call
push
xchg
cmp
push
data16
loop
jno
jnp
add
cmp
mov
and
and
iret
mov
add
cmp
outsb
mov
in
sub
dec
call
shrb
jecxz
jns
xor
lcall
loopne
add
insb
jb
or
and
xchg
ja
xchg
pop
sbb
std
sbb
rcl
cwtl
add
cmp
push
xchg
dec
jp
xchg
imul
or
xchg
mov
dec
jle
in
arpl
lods
dec
xor
or
pop
sbb
insl
rcrb
idivb
push
sahf
inc
mov
shrb
push
in
mov
inc
mov
jno
je
cmp
movsl
xor
jecxz
sub
push
push
xlat
and
data16
xlat
mov
fwait
jae
into
mov
sbb
shr
xor
xorb
cmp
or
jb
scas
sub
ret
pusha
divb
sahf
lret
mov
mov
jns
aad
xor
pop
loopne
fwait
add
push
das
lahf
mov
loopne
push
movl
mov
cltd
loopne
ds
pop
fstl
sahf
int
pop
pop
into
out
xchg
sarb
test
fdivrs
outsl
mov
xchg
or
pop
xor
sahf
add
clc
cmc
adcb
pushf
dec
pop
xlat
dec
jle
xchg
sub
pop
stos
fdiv
cltd
ds
mov
adc
or
inc
aam
jb
in
mov
std
and
jp
and
js
and
pushf
xor
push
mov
pop
loopne
pusha
bound
xchg
lods
jge
in
push
movsl
push
xchg
push
mov
and
adc
insb
fidivrs
push
sbb
lds
or
pop
mov
pop
repnz
aaa
lret
insl
push
adc
outsb
and
jle
mov
mov
jb
sbb
flds
mov
out
outsl
jb
xor
test
test
outsb
sbb
mov
dec
test
push
xor
test
inc
cltd
shll
es
mov
mov
cs
aad
cmc
aas
jbe
insl
push
mov
push
cmc
or
das
jbe
push
mov
fstpl
mov
push
adcl
dec
dec
xlat
add
or
jl
cmp
pop
fisubl
cmp
mull
add
adc
data16
pop
jecxz
sbb
xor
pop
cld
mov
mov
fcmovu
add
pop
dec
xchg
testb
fidivs
and
xor
ret
ds
cmp
bound
add
ljmp
dec
xchg
push
pushl
or
pusha
aad
xor
notb
cli
out
xor
jae
xor
push
push
xor
pop
jb
cmp
cld
add
cli
mov
xchg
mov
rcrl
call
mov
or
subl
xchg
cmp
add
jmp
mov
int3
iret
lock
std
mov
int
rclw
adc
stc
mov
pusha
pop
jno
fidivrl
mov
inc
and
push
inc
arpl
pop
mov
pop
mov
add
out
stos
inc
sbb
cmp
daa
shll
push
sub
and
rclb
lcall
push
popa
mov
mov
dec
ds
mov
add
addr16
add
cs
out
test
ljmp
push
enter
lock
insl
cmp
test
inc
push
loop
push
insb
jg
loope
test
cltd
add
and
test
pop
test
loope
rorb
mov
inc
loopne
pop
test
repnz
data16
loope
sbb
pop
test
loope
int3
call
jg
push
pusha
push
shr
xchg
xor
ror
cli
inc
mov
imul
or
sub
in
mov
xchg
jecxz
cmp
jp
jb
add
adc
pusha
insl
xor
lods
inc
adc
lahf
push
popa
mov
xor
pminub
jnp
iret
lcall
inc
add
stos
add
sarb
in
inc
add
sbb
mov
rclb
mov
jns
mov
jp
ret
pop
test
incl
scas
data16
rcrl
les
lcall
push
lods
popf
sbb
cs
mov
or
sub
call
push
cli
sbb
sbb
xchg
mov
push
or
jp
in
lahf
imulb
in
nop
lcall
pop
jmp
movb
or
mov
lahf
cmc
jg
push
fldl
adc
insb
xor
test
adc
sub
xorb
lds
dec
ljmp
xor
mov
pop
sbb
gs
or
sub
cltd
or
insl
in
pop
loop
cld
pop
les
std
xor
lods
xchg
mov
ret
mov
fcmovnbe
mov
insb
outsl
cltd
loop
jg
fmul
movb
push
aas
push
dec
or
fs
jmp
sub
mov
adc
data16
mov
mov
mov
pushf
insb
lret
repnz
faddl
lock
jo
mov
pop
push
pop
stc
lods
sub
dec
lods
sahf
xor
pop
fsubrp
cmp
jp
or
ss
jecxz
test
mov
sti
dec
ret
es
iret
scas
shll
in
stos
ljmp
ret
push
push
std
inc
mov
ja
pushf
xchg
addr16
imul
adc
mov
lea
fcomps
xchg
dec
pop
push
aas
into
pop
fistps
std
and
sarl
repnz
and
inc
and
aaa
xor
in
xor
adc
push
pushf
addr16
dec
sbb
sub
mov
adc
xlat
sbb
orl
cli
aad
jmp
or
and
loop
dec
inc
mov
sbb
daa
rcl
or
pop
std
or
xchg
push
ja
fwait
jb
push
call
aad
enter
sub
pop
imul
loop
inc
push
add
stc
pop
dec
or
cmpb
mov
movsl
and
notl
xor
popf
insb
mov
xchg
cli
scas
in
mov
ljmp
les
and
roll
jo
sbb
xor
inc
aad
pop
xor
addr16
xor
adc
mov
arpl
mov
push
in
sbb
inc
icebp
cmp
xlat
push
inc
mov
xor
jo
xchg
ja
adcb
lret
mov
int3
outsb
pushf
cmpsl
js
iret
cmp
pop
mov
arpl
sub
popf
push
or
gs
mov
inc
xor
pop
fsubrp
lret
mov
mov
aam
mov
sti
into
add
cmc
jge
mov
repz
neg
pushf
push
sbb
cmpsl
fisttpl
or
dec
fimull
popa
scas
clc
shrl
cltd
sbb
mov
jbe
adc
in
sub
ret
daa
nop
jmp
in
adc
icebp
inc
sbb
das
test
pop
jno
scas
adc
arpl
aad
push
jle
mov
pop
adc
and
pop
or
and
lock
dec
mov
imul
mov
sbb
mov
insl
jl
push
clc
dec
call
xchg
fadds
sbb
mov
dec
loop
inc
mov
sub
leave
cli
mov
adc
push
scas
pop
adc
outsb
adc
push
push
add
into
xchg
jg
test
jmp
mov
or
push
jne
inc
sahf
inc
sbb
inc
daa
and
fmuls
das
cmpsb
xor
inc
inc
popa
cld
and
idivb
pop
fisttps
cltd
inc
adc
in
push
ljmp
pop
jl
mov
fsubp
or
or
or
mov
ja
mov
and
incb
jle
xor
fisttpl
andb
into
bound
into
out
mov
out
outsb
scas
das
fisttpl
movsl
fadds
jecxz
mov
test
sbb
mov
enter
js
sbb
aam
jbe
imul
cmc
sub
adc
sarb
clc
aad
xchg
add
stos
jnp
and
lret
push
movl
addr16
lret
xchg
ret
inc
shlb
xlat
fsubr
mov
pushf
cmpsb
cmp
inc
mov
cld
inc
psllw
dec
adc
cmp
sub
dec
lret
and
jo
sti
cmp
add
dec
or
fnstcw
leave
popa
das
pop
lret
jns
jne
mov
adc
jns
mov
je
push
mov
and
sub
bound
jp
push
and
js
push
jb
mov
mov
adc
outsl
std
in
dec
xor
jbe
repz
jge
and
pop
and
lahf
inc
pop
adc
adc
jno
fistpl
pop
sub
sub
in
test
sti
aas
ljmp
roll
adc
in
add
mov
jnp
sahf
add
scas
pop
xor
jg
ds
mov
in
xchg
stc
cmpsb
dec
jns
mov
int
cli
adc
aam
push
hlt
mov
out
int
std
mov
ljmp
mov
out
iret
jmp
out
jns
leave
pop
repnz
adc
adc
jp
not
pop
push
jmp
cmp
dec
enter
mov
sbb
mov
ja
push
out
jbe
dec
mov
ucomiss
mov
insl
imul
push
adc
mov
mov
push
adc
dec
cld
cmpsl
loopnew
stos
jo
call
dec
lahf
test
or
idivl
dec
push
mov
sar
testl
lcall
ret
ljmp
jmp
adc
rcrl
mov
inc
pop
jbe
insb
push
xor
jmp
ucomiss
sub
movsb
xor
cmp
cmp
mov
ss
add
pusha
or
sbb
adc
xchg
and
dec
es
xchg
enter
addr16
mov
push
mov
iret
push
sbbl
mov
xchg
imul
push
add
inc
das
ret
cltd
mov
iret
xor
fisttpll
out
repnz
xor
divb
push
lea
jl
adc
jbe
mov
cmpsb
iret
ds
insb
cmp
aaa
pop
cld
cltd
pushl
inc
cmp
jnp
aad
mov
mov
popa
cltd
cltd
call
mov
mov
inc
add
cmp
mov
cld
ds
cld
and
cmp
lods
test
mov
sbb
popa
mov
pusha
ljmp
mov
dec
mov
push
push
jmp
or
or
cmp
mov
or
fisttpl
call
or
xchg
sbb
outsl
in
pop
add
xchg
out
filds
pop
mov
stos
push
cmpsl
fnsave
mov
outsl
shll
cltd
mov
int3
or
add
mov
pop
aas
cmpsb
cmp
mov
shl
mov
es
imul
nop
and
ficomps
fdivl
adc
subl
xor
xor
fdivs
push
loope
movsb
popf
dec
mov
mov
jb
cmp
dec
cmpsl
cmpsb
insb
pop
push
sahf
push
lcall
xchg
sub
aam
sub
mov
lret
add
push
mov
sbb
enter
push
mov
mov
sub
test
add
out
pop
push
inc
cs
cmp
cs
xchg
je
and
pop
and
mov
sub
push
lret
mov
pop
mov
arpl
jne
pop
cwtl
jmp
adc
shll
or
mov
adc
adc
mov
test
xchg
or
cmpsl
movsl
mov
stos
or
cmp
xor
idivb
add
push
inc
cmpl
mov
sahf
mov
pop
fucomp
adc
stos
dec
inc
mov
jl
ja
sub
gs
stos
repnz
stos
mov
mov
rclb
repz
cld
push
lahf
add
cli
push
mov
add
cmc
cmp
lds
sahf
lret
mov
mov
clc
adc
sub
jbe
int3
lcall
fwait
cltd
xlat
pop
fbstp
and
inc
daa
and
lcall
outsb
icebp
push
dec
push
xchg
mov
hlt
fwait
or
pop
bound
fwait
or
sub
mov
mov
scas
xor
fdivr
shlb
jne
shlb
fs
mov
sbb
push
or
or
mov
jmp
bound
test
nop
jns
push
into
dec
push
fistpl
outsb
rorb
mov
mov
jge
jecxz
add
pop
in
ret
fnstcw
lds
loopne
out
sub
rcl
pop
call
xor
add
xor
and
les
int3
test
jb
jmp
jne
mov
shrl
add
dec
enter
or
mov
mov
jl
xor
inc
rolb
push
int
inc
jbe
mulb
imul
test
xor
stos
and
cmp
push
add
test
ret
pop
add
fwait
repz
pop
scas
into
in
lods
aam
daa
das
int
lcall
dec
js
imul
cli
sbb
xchg
mov
pop
loope
sub
xor
push
xlat
ja,pn
pop
xor
or
daa
jle
sbb
xchg
jae
bound
adc
inc
fscale
sbb
enter
sbbl
jmp
mov
mov
negb
inc
pop
and
mov
insb
adc
sub
out
mov
and
js
jae
in
mov
xchg
scas
push
sarb
ret
lock
mov
lods
sti
sbb
push
subl
imul
cmpsb
fsubrs
mov
xor
or
pop
js
hlt
dec
adc
or
jge
mov
or
sbb
add
mov
int3
dec
dec
in
imul
pusha
xor
outsb
repz
fstl
adc
or
mov
repnz
imul
mov
xchg
lahf
inc
and
push
add
xchg
add
xor
popl
mov
out
or
cmpsl
push
jp
or
pop
push
hlt
sub
popa
add
out
inc
out
bound
mov
add
fldcw
jae
pop
ljmp
iret
push
ficomps
xor
repnz
mov
inc
fmull
and
lea
repnz
push
jmp
addb
stc
mov
fbld
ds
mov
mov
shrl
jbe
jg
in
in
jge
pop
xchg
mov
and
inc
mov
mov
fwait
mov
mov
jle
jg
xchg
xor
leave
sbb
jae
fcoms
movsb
mov
jno
out
xor
jl
divb
popa
or
andl
pusha
mov
push
stc
pop
bound
data16
ret
cmovnp
sub
push
sub
adc
or
std
js
or
mov
cmpsb
lret
inc
mov
outsb
fs
or
arpl
ja
out
bound
and
xor
iret
stc
pushl
adcl
pushf
dec
ljmp
push
sbb
fidivl
sahf
push
movl
mov
mov
ss
xchg
enter
and
cli
cmp
pop
or
push
mov
scas
sub
xchg
push
or
mov
push
xor
fcompl
add
icebp
insb
in
dec
arpl
adc
push
scas
je
mov
mov
and
jmp
iret
jl
lock
out
fstpl
fistps
adc
jp
ljmp
mov
movsb
iret
xchg
lock
cmpsl
push
pushf
mov
mov
mov
aaa
out
jno
mov
add
test
sub
inc
pop
int
jl
fcompl
data16
push
or
movb
push
shll
adc
xor
cli
mov
xor
adc
sbb
rclb
daa
xchg
clc
cmp
scas
jns
lahf
mov
rcrb
punpckhbw
or
and
cmpsb
sti
test
int
push
dec
mov
pop
inc
int
push
fdivrs
xor
mov
aam
mov
das
or
in
imulb
in
mov
xchg
push
pop
xor
fistpl
and
lahf
fwait
in
aas
cmp
push
ret
testb
sbb
pop
push
xor
jmp
das
cwtl
inc
out
imul
jecxz
jecxz
test
clc
repz
add
scas
mov
push
pop
push
lcall
and
cmp
ljmp
adc
int
cltd
xchg
and
fwait
lcall
stc
aaa
adc
xchg
sub
movsb
adc
xchg
mov
scas
fs
out
xchg
pop
movsb
es
xchg
flds
hlt
sub
add
iret
xor
sbb
xchg
lret
lret
xlat
xchg
add
or
movsl
int3
negl
call
dec
in
cmp
loop
int3
nop
push
fstpl
outsb
inc
and
scas
aad
xchg
and
cmp
push
fcomps
sbb
loope,pn
pop
push
clc
mov
add
ss
mov
push
lock
scas
xchg
push
mov
xchg
cmpsl
movsl
mov
addl
idiv
push
mov
mov
lret
mov
and
mov
mov
xchg
pop
mov
or
dec
dec
xchg
aad
sbb
sub
ret
cmp
lahf
in
push
inc
dec
xor
fildl
adc
dec
into
mov
pop
mov
xchg
xchg
mov
sbb
clc
mulb
adc
sbb
mov
call
xor
dec
cmp
cmc
movsl
sub
cld
daa
lret
out
inc
pop
jmp
loop
push
pop
dec
xor
mov
adc
call
add
inc
jno
popf
xchg
xlat
xor
sbb
cltd
pop
pop
xor
ficomps
adc
jle
aaa
aad
vmread
std
xchg
mov
mov
push
mov
push
or
push
ret
jns
jb
cltd
jl
push
mov
push
push
jmp
jmp
dec
mov
in
rcl
pop
cs
or
inc
movsl
je
fnstcw
and
xchg
inc
and
mov
js
cmp
nop
ljmp
aaa
cmp
sbb
pusha
insl
fcmove
add
iret
sahf
or
fs
pop
jne
dec
jp
data16
push
xor
mov
sub
loop
std
dec
mov
pop
test
add
inc
test
jl
dec
mov
pushf
data16
add
nop
enter
push
fimuls
bound
xchg
in
repz
std
and
jb
inc
mov
xor
pop
negl
sbb
xor
imul
push
inc
aad
mov
mov
mov
xchg
cltd
sub
bound
push
and
ja
fdiv
mov
mov
xchg
int
pop
nop
jbe
test
xchg
push
leave
sub
fs
jnp
lcall
lret
mov
aaa
hlt
movsb
lds
insb
mov
ja
hlt
xchg
jle
test
ds
mov
mov
lcall
fcmovnu
xchg
fnstenv
lds
int3
pop
negl
add
cmc
insb
bound
mov
sarb
dec
push
lret
mov
ja
nop
or
mov
int
frstor
std
xchg
or
pop
and
lahf
add
mov
jle
ud0
add
in
out
inc
enter
cli
lahf
pusha
fcoms
es
movsb
rorl
cmp
movsl
movb
mov
aad
or
xchg
movsl
fists
push
jmp
push
jge
xchg
or
inc
rcll
js
ds
xchg
into
mov
jmp
cmpsl
xchg
mov
pop
stos
jae
xor
sahf
andl
movsl
jne
div
mov
es
xchg
mov
dec
adc
mov
xchg
lods
xor
jbe
rcrl
lods
ror
scas
dec
push
xor
mov
cli
push
mov
mov
and
leave
mov
repnz
idiv
mov
push
jae
sar
or
inc
pop
push
gs
int
and
imul
add
test
scas
popl
xor
mov
jecxz
xchg
xchg
dec
incb
push
insl
arpl
dec
sbb
rorl
cmp
ret
pop
daa
jb
mov
dec
jp
sbb
fsub
das
cmp
mov
testb
mov
cld
jae
xor
loope
jg
or
leave
jp
out
mov
test
and
push
sub
jp
shr
sbbb
sub
pop
adc
adc
sbb
and
fbstp
in
adc
mov
testl
aad
adc
test
sti
pop
cmpsb
or
movzbl
outsl
xor
mov
mov
fildll
nop
dec
cs
jl
mov
add
add
std
mov
gs
es
xchg
out
xlat
or
pop
mov
adc
pop
daa
lock
add
jl
leave
popa
test
lret
inc
inc
icebp
call
fildll
inc
or
dec
in
and
and
sar
ljmp
add
test
or
jecxz
lods
adc
mov
stc
cwtl
out
or
sub
xor
sub
inc
lcall
aad
mov
inc
pop
inc
pop
std
movsl
inc
and
pop
jg
mov
inc
in
sbb
icebp
and
push
sub
test
loope
fwait
fwait
or
imul
adc
adc
loope
mov
jp
les
mov
ret
cmp
inc
lds
stc
call
mov
cmpsl
enter
bound
add
push
gs
lods
adc
popa
push
mov
dec
mov
xor
push
jl
out
pop
ret
mov
in
enter
xchg
ss
lahf
xchg
xor
hlt
lods
stc
mov
loop
jmp
sub
or
jbe
cmp
repz
add
mov
add
sbbl
stos
jmp
jle
jae
adc
hlt
out
sbb
pop
push
ret
ret
iret
insb
push
jecxz
bound
movsl
out
insl
hlt
mov
adc
push
cmp
movsl
dec
inc
xor
xchg
mov
adcl
fisubs
andl
bswap
push
or
lret
or
outsl
popf
out
xor
push
loop
sbb
jl
lahf
or
mov
int3
int3
fs
dec
pushf
cltd
xchg
mov
daa
lret
dec
stc
lret
inc
daa
mov
pop
test
scas
push
mov
je
test
mulb
mov
jp
into
dec
cmp
fucomp
push
popf
xor
xchg
call
fldt
mov
or
imul
mov
fwait
jb
dec
in
pop
push
adc
xor
outsb
fcmovu
pop
jl
stos
push
popa
and
add
ret
and
xor
jmp
into
jns
dec
rcrb
cmp
movsl
mov
les
gs
scas
shr
inc
inc
bound
cltd
std
repnz
push
jmp
lods
pop
dec
lea
fisttpl
jnp
dec
mov
in
dec
add
fsubrp
push
hlt
pop
mov
icebp
pop
shrb
int3
cltd
shll
gs
std
jecxz
mov
push
je
out
sub
jae
jecxz
mov
fldl
sbb
push
pop
mov
mov
and
or
mov
mov
mov
int
iret
stc
mov
push
fisttpll
xchg
lahf
adcb
data16
stos
das
ja
jne
pop
cmp
and
mov
loopne
stc
jmp
std
push
adc
jge
outsb
outsb
xor
mov
imul
jl
test
pushf
or
add
cmp
mov
push
xor
xchg
jecxz
test
fadds
in
lock
pop
mov
xor
mov
pop
in
sarl
mov
inc
ret
xchg
add
sub
pop
or
test
icebp
adc
ret
lods
in
test
ljmp
shr
xchg
mov
lret
inc
mov
pop
lret
sub
adc
jo
je
jmp
add
mov
rolb
add
inc
mov
inc
xchg
mov
mov
mov
mov
movsb
cmp
movaps
xor
mov
pop
mov
stc
adc
adc
or
inc
dec
lahf
cmp
mov
mov
repz
sub
jg
and
repz
push
push
mull
lret
sbb
push
js
daa
xor
insl
in
mov
subb
and
jmp
les
mov
cs
dec
ljmp
iret
mov
mov
movsb
adc
repnz
into
fwait
or
pop
xor
int3
jg
adc
fwait
mov
jmp
jecxz
pop
and
mov
jb
cmc
andb
or
or
or
add
cld
stos
sub
testl
flds
xchg
mov
sub
pop
aaa
push
pop
movsl
mov
das
pop
push
sbb
fimull
sti
mov
xor
icebp
add
sub
divl
pop
sbb
dec
or
mov
scas
xchg
scas
mov
dec
push
fisttpl
add
mov
mov
mov
fldenv
push
pop
dec
mov
cmp
iret
mov
jno
xchg
jp
popf
sub
or
test
outsb
iret
pop
repz
jo
inc
pushf
mov
imul
push
xor
dec
push
jnp
sbb
mov
mov
test
mov
outsb
cltd
cwtl
sub
lds
fwait
add
cmp
add
sbb
aaa
ret
not
cs
adc
popa
daa
cwtl
push
xor
push
shrb
cmp
jne
loope
mov
cmp
inc
mov
inc
xor
push
push
movsb
xchg
mov
aaa
mov
jns
sbb
pop
pop
jne
fdivr
lret
enter
ja
adc
outsl
push
sub
int3
push
loopne
or
loop
cmp
push
xor
cwtl
xchg
and
pop
jmp
lock
cmpsl
out
pop
adc
stos
inc
scas
sti
repnz
pop
mov
ficoms
xor
nop
cltd
cli
dec
inc
jo
cmc
mull
adc
addl
lcall
pop
fucomip
mov
and
sub
pop
fs
outsb
adc
push
pop
shll
arpl
push
inc
lods
les
lret
xor
sti
loopne
mov
hlt
fs
push
pop
pop
ficomps
cmp
add
dec
adcb
sub
or
cmpsl
mov
ficoms
aad
jne
stc
pop
pop
sarl
pop
mov
stos
das
daa
lock
js
jo
inc
enter
add
and
mov
movl
cmp
jge
jg
fs
push
fwait
bound
jae
push
add
or
lret
add
jg,pt
adc
mov
movsl
mov
jp
loope
xchg
outsb
aas
shlb
jmp
inc
xchg
inc
push
ror
mov
insl
mov
mov
fcomp
or
xchg
sti
arpl
es
mov
imul
adc
xchg
insl
data16
outsb
jmp
mov
inc
movsb
or
jge
pushf
and
loop
mov
rorl
mov
push
jmp
pop
pop
jns
push
mov
or
in
test
fsubrs
mov
jmp
mov
test
arpl
lret
push
mov
aad
sarb
cmpsl
stos
stc
xor
cmpsl
cs
push
cmpsb
inc
es
xchg
rcrl
imul
lahf
add
or
add
xchg
push
inc
movsb
xor
dec
jle
add
hlt
repnz
in
ja
repnz
fs
std
adc
pop
hlt
add
fmuls
sbb
pusha
ljmp
or
cs
mov
test
ds
xchg
push
movsl
xor
dec
test
pushf
pop
gs
cmp
jle
jmp
inc
shl
jns
sarb
inc
jnp
xchg
sub
sub
lds
outsb
in
jg
leave
pop
leave
icebp
sub
xchg
das
mov
mov
bound
cltd
incb
sub
sub
mov
dec
and
push
cmpsl
lock
loopne
sbb
test
jo,pn
iret
cmpsb
inc
decb
mov
je
divb
adc
mov
test
sub
mov
dec
idiv
mov
push
arpl
arpl
addr16
sbb
inc
mov
imul
mov
pop
sbb
movsb
cmpsl
inc
inc
cli
and
stc
xor
or
mov
scas
pop
inc
sub
stos
sub
ret
fstpt
sbb
cmp
adc
or
inc
ljmp
jne
jae
or
push
mov
sbb
jae
loopne
sbb
addr16
mov
and
and
mov
or
cltd
in
enter
xchg
or
lcall
xchg
stos
in
scas
mov
xorl
dec
mov
push
pop
mov
fsubrs
ljmp
lods
mov
pop
mov
imul
adc
outsb
mov
pop
and
stc
add
in
adcb
mov
les
xor
push
popa
cmp
cmp
adcl
negl
or
jl
ret
aaa
xchg
test
mov
inc
shll
dec
sti
dec
test
xor
test
or
scas
lea
je
sub
push
outsb
sbb
or
push
lahf
push
or
fdivrl
push
adc
dec
jle
out
mov
popa
cltd
mov
pushf
fs
mov
inc
es
jne
sti
dec
push
mov
and
xor
test
push
push
arpl
rcl
mov
xchg
sbb
ret
add
sbb
or
push
into
test
mov
imul
adc
push
nop
sbb
jl
jg
js
mov
lahf
cmp
or
add
mov
nop
popf
and
and
aas
loopne
jp
das
leave
jns
cld
push
mov
cmp
leave
xor
cmp
aas
call
push
or
xchg
sub
mov
iret
fwait
les
stc
mov
popa
sarb
cmp
std
mov
int
sti
xchg
cltd
sti
ja
and
dec
stos
inc
jge
les
aas
jns
stos
inc
cwtl
mov
bswap
test
fwait
into
in
push
pop
xchg
xor
rcrb
push
jne
xchg
jmp
lock
push
das
bound
adcl
inc
mov
out
cmpsl
inc
push
outsl
add
inc
jne
pop
es
es
xchg
lods
je,pn
sbb
cltd
dec
outsb
jmp
push
dec
lock
jns
jns
lret
push
insb
test
and
sbb
shrl
push
and
mov
cs
pop
add
jno
stos
xchg
repz
mov
xchg
out
jne
sub
inc
scas
insb
jb
and
xor
adc
jmp
cmpb
adc
pusha
movaps
sub
inc
mov
in
sahf
xchg
mov
xor
addb
inc
test
jle
addl
dec
leave
mov
pop
adc
cmp
push
int3
lea
fistpl
test
fwait
gs
inc
loope
xchg
dec
les
dec
push
pop
xlat
stos
leave
std
dec
dec
das
lock
hlt
lret
stos
adc
js
dec
incb
mov
insb
xor
roll
pop
insl
aas
pushf
lock
cmpsl
out
test
cwtl
jb
arpl
leave
roll
fcompl
icebp
sub
xchg
sub
sbb
and
sub
sub
loop
movsl
imul
cmp
sbb
adc
xchg
cmp
mov
mov
loop
adc
fidivrl
add
cmp
cli
lahf
and
mov
lahf
push
xchg
cld
dec
mov
mov
scas
sti
pop
or
jne
jne
inc
xchg
jo
ljmp
sbb
cwtl
push
stc
cmp
mov
out
cmp
add
xchg
cwtl
xor
inc
push
movb
lock
mov
in
subb
xchg
aaa
fiadds
jo
jo
paddw
test
mov
mov
jo
mov
lock
ret
outsl
insb
jno
xchg
cld
mov
inc
imul
mov
or
mov
sbb
inc
or
xchg
adc
dec
xchg
pop
rclb
jb
push
push
inc
adc
lret
mov
arpl
pop
addr16
sub
int3
jg
rorl
in
cmp
xor
cmp
jno
pop
arpl
dec
push
push
xor
mov
loop
or
test
mov
adc
ret
mov
pop
pop
dec
xchg
jl
out
cwtl
aas
ja
lods
outsb
adc
pop
icebp
cmp
ljmp
and
incb
sub
jmp
jb
shl
mov
fucom
or
mov
sub
adc
js
scas
rolb
rcr
bnd
jns
das
cmp
fmul
je
push
inc
pop
sarl
scas
mov
mov
mov
mov
test
orl
sub
cwtl
cld
jnp
jno
sahf
inc
push
inc
lahf
sbb
cmp
xor
imul
xchg
jge
gs
data16
filds
inc
pop
jne
mov
lods
dec
bound
sub
dec
cmp
or
xchg
mov
pop
in
jg
sbb
in
push
and
cli
push
in
fstpl
cmp
fs
adc
mov
cmpb
sbb
sbb
mov
sub
sbb
add
rclb
sub
ficoml
aad
push
xchg
sar
aad
pop
iret
xchg
pop
mov
scas
mov
cmp
in
cmpsb
ror
fwait
add
rep
pop
jg
sbb
or
mov
push
imul
icebp
out
inc
fwait
lods
sbb
and
cli
mov
mov
lahf
outsb
sbb
repz
in
btsl
aam
mov
lret
out
mov
pop
fistpl
das
leave
popf
xchg
add
inc
mov
cld
mov
sti
push
repnz
clc
lods
xchg
jae
es
mov
dec
jle
insb
rcrb
imul
js
aam
dec
pop
pop
sbb
or
and
gs
popa
push
rcrl
test
dec
sub
cmpsl
inc
sbb
or
jne
inc
mov
rcll
loope
cwtl
cwtl
mov
ret
sub
ja
push
xchg
je
cld
fld
add
aaa
push
pop
pop
sbb
sbb
add
je
insb
pop
mov
mov
mov
mov
or
xchg
dec
shll
aam
cmpsb
repz
clc
and
sub
push
cltd
xor
or
scas
js
push
ljmp
inc
add
ficomps
push
shrl
mov
out
mov
add
xchg
jb
call
loopne
mov
and
test
pop
movsl
iret
cmp
iret
scas
xchg
fdivl
aaa
dec
icebp
decb
fwait
outsb
mov
add
push
mov
repz
push
lahf
lea
out
frstor
scas
jns
les
adc
daa
icebp
sbb
les
sbb
ja
fisttps
in
loopne
mov
push
ja
mov
ja
push
jmp
xchg
movsl
jb
adc
xchg
out
gs
stos
loope
addr16
push
pop
sub
fs
sub
out
dec
jle
sub
mov
add
xor
pop
mov
pop
in
pusha
je
add
pop
xchg
inc
sub
call
aas
adc
lret
hlt
pop
pusha
sarl
in
cmpsb
mov
lods
jb
and
stc
cmc
popf
sub
inc
test
insb
inc
pop
loopne
popf
sub
jmp
push
adc
add
cwtl
jne
pop
inc
sub
dec
bound
ss
pushf
mov
rcrb
push
cmp
xor
lahf
es
mov
sub
mov
pop
xor
jns
in
xchg
out
sub
mov
inc
kunpckwd
cmp
mov
cmp
jnp
inc
pop
jb
or
cmp
mov
mov
mov
fcoms
dec
mov
xor
lods
inc
mov
pop
fwait
std
xchg
addr16
outsb
lahf
add
adc
push
in
in
xchg
jno
ja
aaa
dec
int3
xchg
or
insl
inc
or
fidivs
xchg
jae
test
fsts
dec
int
ja
inc
dec
and
xor
adc
add
pop
ret
outsb
icebp
test
ss
dec
push
addr16
imul
push
data16
aad
and
push
lea
in
cmp
add
outsb
ss
fs
gs
mov
push
jg
iret
jne
pop
gs
pop
xchg
push
pop
cmc
jmp
es
aas
fstl
ljmp
or
sahf
in
dec
sti
loopne
dec
test
xchg
mov
aas
dec
push
aas
lods
pusha
in
int3
or
fldt
sbb
rcrb
fmull
jge
xor
aas
outsl
push
movsb
addr16
sub
cli
jns
jge
mov
dec
inc
dec
pmulhw
jl
jp
ficomps
or
and
aad
popf
pop
outsb
inc
mov
cwtl
fisttpll
int3
push
cwtl
cld
push
popa
rcl
inc
pop
fdivr
xor
cltd
mov
inc
insl
jno
mov
jge
adc
pop
sub
or
sub
mov
imul
pop
pop
and
pusha
fbstp
out
sbb
xchg
mov
and
push
out
fldcw
inc
sbb
or
test
xchg
and
mov
pop
pop
lds
pop
cwtl
lock
lret
xchg
stos
cmp
mov
mov
in
cmc
push
mov
loopne
inc
mov
pop
push
jnp
sar
jo
mov
mov
dec
xor
hlt
and
jge
rolb
or
fdivl
mov
sub
add
jno
ljmp
loopne
sbbb
dec
or
sbb
fs
pusha
push
sub
jg
mov
stos
scas
cmp
xchg
jo
rcl
sbb
and
xchg
mov
cmpl
inc
pop
mov
xchg
mov
aaa
psrld
jg
sub
sub
imul
push
pop
sbb
and
xlat
xchg
xor
sub
lods
cli
push
pushf
sub
cli
pop
jmp
daa
dec
push
loopne
rorb
call
outsb
xlat
sbb
inc
or
or
fwait
xchg
loope
jb
fwait
addr16
push
dec
addr16
sub
or
dec
jmp
call
xchg
push
sub
jge
pop
pop
adc
add
mov
outsb
lds
out
push
jecxz
mov
ss
popf
mov
xorb
mov
push
jg
ret
lds
popf
push
jb
sbb
movsb
dec
jb
test
enter
sbb
and
in
movsl
int3
clc
xor
in
mov
mov
add
scas
in
iret
push
cmc
movsl
loopne
ret
add
cmpsl
int3
mov
lcall
data16
imul
mov
push
pop
jbe
sbb
das
cmp
in
ret
loopne
pop
jp
xchg
sbb
jge
mov
fnsave
pushf
xor
push
das
ja
mov
push
push
xlat
or
out
jmp
mov
out
mov
testb
iret
jg
daa
int3
icebp
add
cld
aad
xor
aam
add
in
xchg
imul
insl
call
pushf
mov
mov
imul
xor
pop
fcompl
or
add
out
fbld
push
or
out
cmpsl
ret
lock
inc
or
mov
sub
dec
and
mov
clc
adc
xchg
xchg
popf
pop
dec
jb
mov
inc
inc
scas
arpl
repnz
xor
les
sub
idivb
pusha
push
pushf
xor
or
sbb
test
jg
pop
mov
popf
test
movsl
lock
xchg
dec
repz
imul
popf
inc
and
test
test
or
xchg
std
loop
or
nop
nop
outsb
mov
xchg
jae
pop
and
mov
mov
xchg
jmp
xor
inc
loope
and
or
mov
inc
out
inc
repnz
in
adc
arpl
jecxz
cmpsl
mov
nop
sbb
pusha
xchg
cld
xor
sbb
dec
xchg
ja
incb
stos
jp
cltd
rcrl
rclb
loop
sbb
xchg
lret
bnd
subl
mov
add
in
mov
jmp
icebp
repnz
lret
fcmovbe
push
nop
push
adc
cwtl
sbb
or
mov
repnz
mov
test
mov
sub
nop
lret
outsb
pusha
mov
out
cmpsb
ss
inc
inc
call
gs
xchg
cltd
or
je
scas
jne
add
push
mov
sti
inc
mov
dec
scas
sbb
adc
sahf
adc
mov
test
jecxz
lods
scas
xchg
out
push
jmp
or
fidivs
jecxz
cmp
ss
mov
adc
and
xchg
inc
shrb
dec
and
dec
mov
fstpt
sub
js
adc
jle
mov
cmp
and
sub
sub
lods
test
xor
in
lock
scas
sub
fidivrl
and
cmp
pop
cmp
jle
xor
ffreep
inc
or
out
push
fbld
xchg
insl
mov
dec
jns
cmp
jmp
xchg
dec
gs
cmp
pop
je
adcb
mov
push
addr16
mov
xchg
out
jo
jg
or
out
cmpsl
test
fcmove
sub
std
sti
cmp
mov
pop
js
inc
sub
adc
xchg
int3
push
rorl
icebp
mov
jecxz
pushf
mov
cltd
inc
push
xchg
repz
sbb
mov
cwtl
pop
test
cmp
shlb
sub
push
sbb
pop
rcll
out
cmp
ds
sbb
dec
cmp
push
lods
adc
cmp
sub
mov
les
dec
int
add
inc
push
push
or
xchg
sbb
or
insl
sbbl
inc
mov
jl
pop
jle
fisubl
aaa
xor
dec
add
add
test
dec
jp
sbb
sub
push
imul
pop
mov
sbb
lods
mov
fsub
xchg
jle
cltd
and
pop
loopne
mov
das
aaa
mov
test
pop
mov
daa
dec
mov
pop
dec
cld
testb
push
sbb
or
push
or
mov
test
jp
xchg
pop
mov
cmpsb
mov
mov
fisttps
push
sub
inc
pop
vxorpd
push
or
or
mov
imul
ja
jbe
or
push
dec
jecxz
xchg
inc
xchg
mov
mov
data16
mov
pop
add
fs
mov
mov
push
mov
mov
in
notb
fstps
add
cmc
lea
mov
and
fldl
into
lret
push
pop
clc
stos
fdivl
into
sbb
stos
jns
cld
sahf
das
in
dec
xor
loopne
jmp
jbe
xor
mov
ret
add
cmpsl
add
in
sub
cwtl
pop
jmp
push
fcoml
xchg
in
cmp
les
test
nop
jo
pushf
insb
dec
pop
sarl
pop
sarb
cmp
cmpsl
scas
lahf
pop
ret
jp
xor
push
lods
jge
aad
cmpsl
jbe
movsb
xchg
jb
pop
xorb
nop
mov
dec
push
hlt
nop
repz
ret
pop
inc
orl
sub
rcrl
push
jmp
clc
fiaddl
push
add
mov
cltd
adc
loopne
pusha
ljmp
int
pop
lods
popf
add
xchg
mov
mov
ljmp
adc
in
pop
shrb
adc
test
ret
inc
notl
jb
outsl
repnz
mov
movsl
mov
dec
fiaddl
incl
dec
loope
jno
loopne
insl
jl
insl
out
es
push
lret
or
inc
push
adc
cmpsl
push
jle
in
scas
cmpsl
jns
push
daa
cmp
sbb
push
pop
dec
xchg
js
aaa
mov
call
testl
sbb
cli
dec
cmc
lods
divb
lea
popf
add
add
or
jle
mov
fildll
fdivs
lods
lret
lret
imul
sbb
pushf
cmp
dec
and
xor
aas
clc
pop
push
xchg
and
nop
shl
mov
scas
ds
mov
pop
xchg
mov
mov
outsb
mov
cs
scas
inc
in
sub
imul
imul
out
pop
sbb
mov
imul
cmp
dec
sti
pop
pop
add
imulb
mov
dec
dec
and
sub
mov
repnz
dec
stos
data16
mov
adc
and
std
mov
je
sbb
pop
mov
jmp
mov
aam
int3
add
aam
pop
in
scas
mov
add
icebp
into
ljmp
dec
mov
add
bound
push
jae
add
movsl
in
inc
inc
push
in
mov
data16
mov
push
sti
mov
dec
leave
hlt
lret
fldcw
xchg
andb
mov
aas
push
xchg
and
sbb
adc
data16
sub
mov
scas
sub
in
add
push
daa
les
int
cmp
andb
pop
inc
mov
mov
dec
and
mov
lock
dec
inc
adc
shlb
out
mov
xchg
aaa
mov
inc
dec
inc
jp
je
mov
jns
jbe
call
es
inc
movsb
sbb
adc
adc
and
aad
sub
cmp
push
mov
mov
mov
mov
mov
scas
xor
movsb
sub
sbb
cmp
mov
or
hlt
push
dec
sbb
xchg
xchg
sub
or
loopne
push
jns
push
lock
mov
subl
repnz
add
test
test
in
js
test
lea
cs
and
xchg
call
mov
daa
xchg
in
out
ss
sbb
mov
insb
cmp
push
je
movsb
leave
dec
test
lcall
sti
stos
and
je
aam
inc
jge
sti
xor
mov
mov
xor
add
push
ljmp
data16
inc
movsb
cmp
jg
imul
in
cs
push
jl
ljmp
adc
push
fwait
lret
rcrb
jmp
xchg
and
xor
aas
movsl
aas
mov
es
fadds
jmp
sbb
sub
stos
xchg
sub
js
outsb
leave
push
aaa
mov
xor
and
sub
mov
inc
mov
jno
mov
orb
repnz
mov
and
jl
icebp
shlb
inc
xchg
icebp
jnp
mov
lods
ja
addb
sub
call
or
xchg
mov
insl
jae,pn
cmp
mov
lcall
dec
mov
add
pop
pushf
into
inc
xchg
cmp
pop
test
repnz
push
adc
pop
clc
sahf
add
cmpsb
xchg
lods
xor
ret
in
mov
sbb
test
xchg
xor
scas
pop
rorl
inc
jns
loope
arpl
mov
aaa
int3
scas
push
nop
jnp
in
aaa
inc
add
jecxz
mov
adc
cmp
push
cld
and
in
sub
popf
push
adc
cmp
ret
or
ret
js
dec
mov
test
imul
leave
cmp
adc
xor
outsb
fisttpl
push
pop
dec
mov
lds
adc
imul
cmp
mov
dec
dec
mov
jns
shr
mov
adc
sub
mov
leave
adc
fwait
repnz
adc
xor
xor
or
shrb
sub
out
lret
dec
mov
lods
dec
mov
cmp
mov
loop
jne
xchg
mov
xchg
and
cmp
xor
fwait
jo
adc
sub
adc
aaa
adc
cs
jo
adc
xchg
fwait
xchg
xchg
xchg
jg
push
fs
pop
insl
mov
xchg
inc
push
ret
stos
ss
shll
fstl
and
call
jge
push
repnz
loope
rcll
adc
lods
out
gs
clc
in
jnp
mov
jmp
orl
sbb
cs
ss
icebp
aaa
movsb
push
inc
lret
pop
roll
cmp
in
add
mov
mov
sarb
cmp
repz
adc
lods
or
xchg
xor
sbb
imulb
std
shll
int3
int
adc
loop
ds
xchg
sub
in
ret
xchg
orl
rclb
aad
rclb
jo
int3
loope
xorl
ljmp
add
sarb
orl
invd
outsl
sbb
sahf
int3
adc
add
test
xor
jecxz
pop
nop
pop
out
pop
push
repz
and
xor
pop
push
stos
int3
rcrb
add
gs
rorl
lret
les
outsb
aaa
jmp
or
in
cmc
jno
data16
outsb
mov
pop
ss
cld
sbb
inc
ror
cmp
stc
ret
lret
mov
mov
ud2
push
or
pusha
repz
je
subb
pop
fisubs
cli
dec
mov
cmp
mov
or
dec
int
fisttps
adc
lock
sbb
adc
sbb
fdivrs
xor
sub
xor
stos
roll
dec
cld
shrb
inc
lahf
rcrl
sub
aas
iret
pop
nop
mov
test
leave
ficompl
xchg
out
pop
lcall
pop
pushf
xchg
sarl
mov
sbb
inc
popf
into
mov
fwait
dec
nop
rcl
jmp
aad
dec
dec
fimull
rcl
aad
addr16
xchg
sub
cli
nop
lret
add
sbb
xchg
and
push
xor
jl
and
jl
sbb
fdiv
xor
add
pop
inc
dec
mov
pushf
adc
in
mov
jmp
out
xor
jnp
cmp
pop
lret
push
addr16
sarb
or
xor
ret
test
lcall
xchg
xchg
inc
subb
or
or
jb
mov
mov
push
adc
inc
and
fs
mov
enter
xchg
cld
sahf
push
ds
sub
push
mov
and
faddl
repz
xor
sbb
in
push
xchg
mov
push
fldl
lds
cmpsb
xor
mov
loop
jp
xchg
insb
push
pop
fildll
cmp
xor
xchg
negl
adc
nop
mov
push
cli
and
cmp
jne
sti
adc
mov
cmp
add
pop
mov
adc
int
bound
jl
aam
stc
inc
push
test
lock
jl
mov
cltd
int
into
fildll
aam
lds
gs
fwait
ret
adc
sarl
leave
adcb
icebp
mov
dec
mov
and
hlt
shrb
jae
inc
push
stos
adc
ljmp
aam
dec
xor
mov
or
and
es
mov
jnp
into
pop
mov
subb
shr
movsb
sbb
cmpsb
pop
into
cli
adc
adc
or
insl
cmp
roll
stos
xchg
mov
std
push
and
and
adc
test
sbb
inc
leave
imul
pop
xchg
daa
lds
add
stc
movsb
fs
xor
pop
inc
and
mov
bound
ss
mov
movsbl
adc
inc
and
xchg
out
add
outsl
in
and
shrl
orb
lret
dec
cmpsb
rclb
push
cli
mov
mov
cmpsb
insl
hlt
sahf
push
sbb
mov
ss
scas
fsubs
sbbl
ret
ret
sbb
dec
imul
lds
or
sbb
mov
dec
mov
rol
inc
mov
jmp
pushl
das
sbb
xor
lret
xor
jmp
and
adc
xlat
add
add
adc
cld
cmpsl
std
mov
das
inc
dec
mov
sti
sbb
xchg
jnp
cmp
lea
rolb
sbb
add
jne
mov
or
icebp
stos
in
cmpsb
rorl
jne
int
jmp
sahf
sbb
cmp
fsts
jle
mov
inc
jmp
out
je
and
cmp
inc
scas
jmp
add
sub
xor
rclb
lds
imul
jl
push
int3
stc
mov
lods
insl
addl
test
push
fs
dec
outsb
sbb
bound
cmp
shlb
data16
jge
xlat
aam
mov
repnz
test
inc
in
mov
popf
xchg
and
outsb
aaa
in
addr16
ds
mov
out
pop
popa
loope
inc
in
arpl
xchg
enter
lahf
std
rcll
cmp
inc
shrl
pop
outsb
rorl
out
test
outsb
cmp
push
cmp
fmull
push
inc
xchg
pop
sbb
adc
addl
jo
jle
lods
xchg
sbb
je
faddl
jno
les
out
jmp
jecxz
jmp
icebp
pusha
mov
clc
push
nop
sub
mov
cmp
sub
mov
add
loopne
nop
lahf
jle
dec
or
repnz
test
js
shll
fiaddl
inc
add
jp
mov
xchg
sub
xor
xor
orl
pop
mov
and
mov
das
stc
or
subl
push
lret
cmp
test
test
daa
mov
dec
xchg
lds
mov
inc
in
stos
sbb
sbb
insl
test
faddl
adc
decb
inc
aad
mov
pushl
fs
push
cltd
xor
xor
cli
or
sti
shll
negb
xor
test
and
lahf
jne
and
cli
mov
push
in
je
cmpb
out
xchg
call
or
aam
aad
jecxz
pop
std
test
shrl
xor
jl
and
mov
dec
push
iret
xchg
es
sub
mov
leave
cli
and
push
lcall
jmp
sub
add
pop
xor
movsl
shlb
inc
pop
sahf
mov
pop
adc
pop
lret
mov
pop
cmp
xchg
rcll
inc
mov
xor
jnp
addr16
mov
dec
or
push
mov
or
ffree
sbb
std
xchg
and
ljmp
push
push
dec
adc
jb
lods
ss
lds
cmc
adc
lret
cltd
ret
negb
fbld
mov
mov
jecxz
flds
in
xchg
push
push
nop
lock
cmc
pop
shlb
nop
xor
mov
push
cmpl
bnd
mov
out
cmc
pop
int
clc
test
add
sub
ret
ficomps
aad
sar
addr16
dec
push
xor
jl
insl
sarl
xchg
mov
mov
push
lret
aam
jns
incb
adc
jg
fimull
cmp
jne
push
aaa
jno
in
pop
fs
iret
ja
std
fiaddl
addb
dec
repnz
sahf
stos
movsl
stc
ljmp
out
mov
push
xchg
imul
and
mov
stos
into
repz
xor
sbb
sahf
pop
fs
fdivrs
inc
jo
jge
icebp
or
inc
std
je
ror
insb
les
pop
enter
or
mov
addr16
mov
cmp
jmp
push
inc
leave
std
mov
lods
pop
cld
cmp
xchg
mov
mov
cld
mov
lea
jmp
imul
adc
push
rcll
sarb
push
adcl
pop
pop
xor
add
stos
arpl
jns
cmp
mov
jmp
or
mov
cmpb
add
push
addr16
pop
js
dec
mov
sbb
adc
lds
and
rcll
or
cld
jmp
fildl
sbb
cmpsl
inc
ret
dec
mov
lods
ljmp
mov
push
aaa
shrb
pop
or
jne
imul
mov
cmpsl
adc
fidivrl
scas
and
adc
mov
inc
push
mov
cmp
lcall
mov
aam
repz
into
mov
in
xchg
xor
pop
dec
sar
pop
loopne
pushf
insl
aaa
adc
enter
int3
push
aam
push
aad
cmp
mov
rolb
sbb
and
enter
pop
scas
sbb
mov
fdivrs
pop
jns
lcall
or
push
arpl
in
sbb
mov
xor
loope
test
test
xchg
add
movsb
into
mov
xchg
mov
fsubl
cltd
cmp
and
int3
iret
jg
jno
stos
push
adcb
sbb
xchg
cmp
aas
stos
add
push
fs
lret
dec
cs
sbb
jae
ss
cmpsb
aad
sbb
call
inc
xchg
sbb
ja
rcrb
fs
add
mov
fisttpll
mov
xor
int
and
dec
shll
cmp
push
adc
xchg
add
pop
push
xchg
pop
dec
pop
inc
test
xlat
xor
ljmp
dec
and
imul
int
ss
cmc
stos
adc
pop
cmp
jmp
inc
mov
sahf
out
mov
lods
repnz
inc
pop
push
sti
es
sbb
dec
mull
stos
adc
inc
orl
add
aam
inc
addr16
pop
imul
outsb
test
fucomi
cmp
add
mov
cs
push
mov
mov
adc
cld
inc
inc
add
mov
imul
mov
or
sbb
scas
add
mov
xchg
lods
mov
sub
test
push
data16
push
bound
std
or
repz
int
pop
cmp
sbb
adc
cltd
fnstenv
mov
inc
outsl
cwtl
cmc
shrl
cmp
movsb
jmp
xchg
jno
popa
cmc
cmp
in
movsl
jecxz
cs
adc
fincstp
mov
inc
cmp
jb
mov
adc
xor
jo
jo
add
add
enter
jmp
and
jmp
sbb
or
pop
daa
popf
mov
rorb
xchg
sub
arpl
out
imul
flds
stos
inc
popf
jle
in
frstor
push
in
cmpsb
fs
push
leave
adc
or
into
inc
push
cmpsl
push
jle
call
dec
fcomps
rcrb
jg
pop
negb
add
roll
cmp
aas
jb
clc
inc
data16
loop
aam
js
sbb
sbb
lret
adc
mov
dec
jo
fsubl
sbb
imul
sarb
test
or
daa
mov
sahf
sub
dec
xor
adc
xchg
incb
push
add
stc
popf
and
in
outsb
shlb
sbbb
int
mov
xor
mov
in
fdivrs
jbe
mov
pop
xchg
in
rorl
das
and
int3
ss
in
jnp
movsl
sbbl
xchg
lds
and
es
mov
or
outsl
xor
push
aas
filds
mov
test
icebp
sbb
add
dec
fdivr
into
add
sbb
nop
dec
xor
xor
fldenv
push
jbe
in
jne
loop
cmp
addb
rorb
iret
int3
nop
mov
sub
mov
xor
dec
dec
xchg
in
lret
lea
push
ds
fidivrl
aas
fldcw
xor
jno
add
mov
int3
dec
jnp
xor
addr16
mov
mov
mov
push
jb
push
lds
push
shl
jle
sbb
pop
jae
add
cmpsl
mov
xchg
jo
add
mov
cltd
sub
sbb
mov
iret
std
lock
mov
pop
loop
mov
or
jae
ss
mov
xchg
and
mov
xchg
adc
lret
mov
stc
sbb
fs
push
push
lods
sub
and
fwait
test
jmp
mov
sbb
test
mov
push
adc
popf
push
xchg
dec
dec
insl
cmp
sbb
push
cwtl
mov
jl
pop
xchg
mov
nop
lahf
repnz
orb
xlat
jle
adc
dec
mov
adc
dec
push
push
clc
or
xchg
push
jle
fwait
pop
ret
jge
adcl
shll
xor
jnp
add
ss
dec
mov
fadds
insl
aad
jo
mov
mov
fisubs
adc
mov
inc
faddl
push
add
jbe
out
arpl
daa
les
cmp
ret
or
pop
add
movhps
lret
or
pusha
fwait
cmc
insb
and
or
test
pop
inc
repnz
mov
lock
mov
repnz
mov
loop
enter
inc
shlb
insb
ret
jne
aam
rcr
xchg
xor
jno
and
xor
cwtl
sbb
xchg
lods
mov
or
loope
xchg
add
pop
jl
in
negl
not
outsb
adc
rclb
xchg
xor
pop
dec
and
out
sahf
sbb
jecxz
sub
adc
add
mov
dec
push
push
ja
jp
ret
xchg
roll
sbb
pop
out
xchg
lods
mov
or
jne
cmp
jbe
popa
test
cltd
pop
out
sbb
push
in
add
icebp
pushf
dec
and
jae
lea
mov
jge
or
stos
sarb
and
jo
test
popf
xchg
daa
jae
in
repnz
imul
insb
shll
pusha
cmp
cmc
push
int3
fdivs
imull
lea
inc
ja
out
scas
push
inc
imull
mov
adc
mov
fs
out
out
mov
lret
and
pop
cwtl
outsb
ljmp
outsl
mov
movsb
out
pop
sahf
pushf
ds
inc
add
call
push
lret
inc
repnz
clc
imul
arpl
add
dec
add
repnz
adc
cmp
jmp
mov
and
push
lret
shll
js
adcl
jae
movsl
mov
adc
cwtl
fadds
scas
ret
ret
dec
dec
mov
cmpsb
mov
insb
ret
pop
or
push
sbb
sbb
mov
fisubs
push
dec
xor
xor
pusha
stos
cmp
inc
inc
cmp
sbb
push
int
push
push
std
js
push
hlt
movq
leave
shll
pop
sbbb
dec
loope
shrl
mov
fiaddl
push
cld
pushf
dec
cmp
jne
cwtl
mov
or
cmp
mov
test
pushf
pop
outsl
getsec
and
shlb
or
add
mov
dec
xchg
fucomip
mov
ss
push
out
xchg
jecxz
fs
lret
lds
call
roll
cmp
popf
push
mov
mov
adc
dec
mov
mov
bound
jl
out
fwait
loop
mov
xchg
adc
icebp
sub
notl
nop
fbld
or
dec
frstor
add
or
dec
inc
loopne
notl
xchg
stos
and
push
int
pusha
enter
inc
jb
xchg
dec
adc
lock
outsl
pop
push
lea
fs
rcr
mov
cmp
push
dec
push
jno
jno
aaa
lea
push
cli
xchg
rolb
or
sub
shlb
fsubs
jns
mov
mov
cmpsb
xchg
or
dec
or
fwait
inc
mov
cmp
and
mov
out
mov
or
cwtl
mul
fwait
ljmp
les
cmpsl
push
movl
xchg
add
mov
in
and
mov
es
xor
or
rcrl
dec
nop
xor
pop
cmp
dec
xchg
pushf
aaa
imul
arpl
adc
outsl
adc
iret
test
stc
les
loop
es
sbb
pop
in
jl
mov
mov
out
fcoms
jmp
sub
xor
loope
dec
in
cmpsl
inc
jb
ror
sbb
and
int3
adc
ret
outsl
and
add
cli
adc
cld
icebp
add
add
add
lock
stos
in
shll
pop
fwait
fs
js
pop
nop
xchg
rorl
inc
mov
and
addr16
mov
lds
or
push
out
inc
jg
adc
sub
push
pop
int3
push
mov
cmp
cmp
xor
xchg
out
mov
pop
mov
inc
jecxz
out
mov
mov
cmpsb
shl
mov
ljmp
popf
jbe
in
out
in
outsl
sbb
pop
sbb
jo
add
ror
js
sahf
js
xor
dec
popf
cmp
arpl
cltd
ss
inc
test
int3
mov
in
pop
movsb
bound
xchg
int3
xor
loope
mov
pop
outsb
dec
int
mov
push
cmpsl
jg
arpl
imulb
jmp
js
mov
mov
pop
out
insl
sti
pop
jb
xor
jmp
push
test
rcll
imul
sub
push
and
inc
mov
inc
mov
gs
add
dec
cld
divb
test
and
mov
pop
mov
adc
and
fsubrp
mov
int
sbb
jle
mov
in
sub
cmp
jae
gs
sbb
pop
pop
push
fidivrl
and
sbb
std
icebp
ja
mov
pop
pop
sbb
dec
mov
icebp
pop
inc
sbb
mov
fdivrl
cs
xchg
js
mov
dec
jae
push
decl
sahf
cld
jle
aad
lahf
and
loopne
push
sbb
and
out
fcmovne
mov
mov
leave
pop
mov
fcmovbe
cmp
or
adc
loope
fcmovne
push
je
push
addr16
push
ret
mov
notb
mov
scas
xchg
repnz
sbb
mov
jbe
dec
mov
push
lret
test
jl
ucomiss
add
jno
popf
call
mov
data16
mov
cmp
inc
push
mov
inc
adc
imul
jp
push
inc
das
or
cmc
pop
sub
sub
outsb
arpl
aaa
shl
jb
mov
inc
sbb
xchg
mov
clc
mov
mov
ret
out
subb
cmp
cmpsl
xor
xchg
mov
and
add
xchg
loopne
gs
outsl
push
mov
inc
add
pop
int
fldcw
stos
xchg
movsb
outsb
sti
jb
lea
loope
outsl
and
dec
or
add
fsubrs
dec
adc
in
aam
mov
and
sbb
pop
popf
xchg
sbb
pop
sbb
push
xchg
out
adc
arpl
call
xchg
mov
pusha
imul
push
int3
fs
mov
shrb
lahf
ds
push
scas
jg
add
fs
addr16
aas
inc
cmpsl
call
ja
lds
jns
pop
sub
aad
sahf
mov
push
scas
out
add
jb
sbb
and
daa
aam
adc
andl
cltd
addl
cmp
mov
shlb
shrl
das
pop
rcrb
mov
aas
call
inc
shlb
push
mov
repnz
push
pop
fstl
lcall
mov
mov
call
rolb
xchg
ljmp
imul
les
es
out
adc
push
fcoml
sub
sbb
cmp
mov
xor
sbb
sbb
dec
cmpsb
xor
addr16
fistl
adc
fists
mov
sub
movsl
out
lock
outsb
int
lock
push
stc
inc
mov
clc
daa
scas
mov
jns
jmp
sbb
xchg
add
mov
adc
sub
inc
test
push
pushf
jne
mov
lds
adc
dec
cltd
sbb
repz
jne
sub
and
gs
fcomps
push
push
js
mov
or
fcompl
testl
fs
das
mov
shrl
adc
sub
xchg
lahf
daa
jne
test
les
clc
pop
jle
and
cmc
xor
icebp
mov
inc
sarl
lods
xchg
cmpsl
fdivrl
jnp
aas
push
inc
fcmovne
or
lret
dec
leave
iret
dec
sub
or
stc
in
dec
test
lock
xchg
xor
popa
adc
int3
pusha
outsb
rolb
aam
in
jg
xor
adc
cmp
hlt
xchg
ffreep
shrb
testb
fldenv
ds
mov
insb
arpl
add
or
hlt
jp
sub
push
inc
pop
clc
adc
push
xchg
xchg
xchg
or
dec
jmp
pop
xor
mov
inc
hlt
push
add
in
cltd
outsl
or
or
mov
sahf
pusha
pop
sbb
xor
rcll
clc
inc
out
jb
stc
cltd
mov
fnstsw
cmp
mov
fldl
cmp
mov
sbb
and
mov
adc
loope
mov
scas
jmp
fcomps
outsl
pop
ds
push
sarb
test
aad
addl
scas
push
outsl
xor
js
jno
js
mov
cwtl
pushf
sbb
sahf
cmp
sar
adc
xlat
aas
or
mov
mov
jp
imul
sahf
stos
lcall
shrd
xor
repnz
cld
sbb
dec
fwait
mov
scas
add
mov
lods
outsl
inc
jg
call
pop
jl
mov
clc
dec
movsl
scas
xor
jo
cmpsb
pusha
xchg
xorb
aaa
out
je
adc
jbe
and
mov
inc
sbb
push
daa
push
cmp
das
or
sub
jnp
jo
call
mov
les
mov
inc
and
lods
inc
and
sbb
push
push
pusha
sarl
dec
icebp
inc
in
cmp
jg
mov
jns
cwtl
insb
pop
mov
pushf
push
cmp
scas
mov
jl
aam
push
and
add
ret
je
loopne
pop
dec
hlt
push
sti
add
out
inc
xchg
fdivrs
mov
pop
push
cmp
mov
or
sbb
pop
mov
mov
pop
or
inc
jmp
mov
bound
jb
lods
aam
adc
push
jno
xor
in
sub
lods
add
sbb
adc
fcomi
xor
sti
sbb
imul
lret
les
or
pushf
pushf
int
push
test
sahf
cmp
repz
andl
or
pop
subl
mov
iret
aad
dec
mov
adc
lock
mov
jmp
adc
mov
sarl
jecxz
in
jp
aad
pop
call
sbb
mov
cld
outsl
xor
dec
jg
jns
and
cmc
push
inc
pop
pop
mov
cld
jo
loop
xchg
xor
shrb
push
push
or
push
xor
dec
xchg
int3
add
dec
dec
addr16
add
adc
loop
pushw
adc
loop
loop
mov
ficoms
jnp
jne
movsl
cltd
jo
movsb
sbb
or
jmp
jb
xorl
sti
pop
loopne
xchg
sbb
cmpsl
pop
or
imul
add
sub
jno
mov
out
sbb
inc
jno
sub
imul
cmp
cwtl
or
outsl
movsl
mov
xor
xchg
xor
mov
arpl
adc
sbb
out
add
mov
pushf
in
ljmp
call
cwtl
movsb
aaa
frstor
cmp
sbb
shrl
lds
push
and
push
adc
push
movaps
or
jnp
loopne
mov
inc
and
xor
pusha
std
ret
fsubl
stos
pop
test
gs
imul
add
push
fdiv
pusha
insl
lahf
ds
adc
pop
mov
xor
cmp
or
pop
adc
jo
ret
jle
inc
hlt
aad
lahf
pop
lea
repnz
dec
shlb
popa
faddl
shl
adc
pop
lahf
jne
sub
test
mov
ss
out
out
inc
push
test
mov
sbb
cs
xor
pop
pop
cwtl
sbb
pop
in
loope
xchg
faddl
fmulp
cmp
cmp
aaa
dec
fcmovne
push
dec
insb
jg
xor
test
jge
pop
sbb
push
int
and
mov
fidivs
xlat
jne
sub
sbb
adc
lret
or
flds
inc
xor
test
test
push
notb
cmc
arpl
pop
or
xchg
adc
mov
lahf
mov
stc
imul
mov
xchg
xchg
adc
outsl
adc
mov
fldcw
add
cli
lods
hlt
add
das
mov
sub
imul
orb
pop
xchg
sub
adc
mov
test
dec
clc
test
fsubl
add
imul
pop
ficompl
sbb
fnsave
stc
adc
das
pop
repz
out
push
sub
fwait
les
adc
mov
push
xchg
push
xor
add
and
rolb
lds
imulb
movsb
daa
sub
jg
mov
adc
and
push
dec
icebp
pushf
mov
cs
cmpsl
sbb
aad
xor
add
sub
mov
jae
jp
xor
pop
out
fstl
fsubl
fimull
mov
add
push
sub
subl
xchg
je
push
pop
dec
xor
jge
add
in
je
or
outsl
in
push
sti
cwtl
mov
hlt
xor
or
mov
jmp
inc
push
mov
into
sub
adc
aam
mov
cmp
rcll
or
mov
ds
pandn
in
mov
lret
loope
jge
int
push
daa
pop
mov
in
adc
sub
or
fs
outsl
dec
jmp
lock
mov
push
out
sbb
pop
dec
dec
sub
lods
gs
cmp
ja
movsl
shlb
cmpb
rcll
int
repz
and
ret
xchg
iret
jmp
testl
lcall
test
cmc
sbb
outsl
xchg
or
mov
push
addr16
xor
inc
inc
add
mov
cmp
sbb
dec
scas
mov
shll
repz
jno
lods
cmpsb
arpl
rcr
cmp
in
and
aaa
xor
pop
adc
pop
lock
mov
mov
or
rol
scas
outsb
jno
push
pop
sti
dec
mov
inc
and
inc
int
pop
orb
inc
in
push
or
stc
cmp
in
ret
andb
mov
das
mov
cmp
out
out
ja
xor
adc
je
fs
cli
dec
xchg
xchg
adc
mov
add
sbb
inc
mov
fwait
int
outsb
cwtl
sbb
add
orl
jg
push
fwait
mov
ficoml
xchg
loop
fs
or
call
sbb
insl
aam
lcall
mov
xchg
mov
mov
mov
jo
aad
push
jnp
pop
aaa
lods
pop
mov
mov
jo
testb
fistpl
mov
jmp
cmp
fstpt
or
aas
fwait
iret
fldenv
das
push
leave
rcr
or
and
sub
adc
pusha
sub
mov
jl
xchg
das
popf
cs
xor
cmp
icebp
test
inc
lods
adc
or
mov
das
mov
sub
mov
or
sub
dec
dec
mov
add
mov
aas
call
cmp
mov
dec
and
cltd
loope
mov
push
leave
std
fstpl
clc
rcrl
test
dec
dec
push
ror
test
lcall
test
lds
in
test
shlb
pop
xlat
mov
aad
mov
addr16
popa
stc
cwtl
or
leave
mov
xor
outsl
in
pop
push
dec
add
and
jae
ror
sbb
cmpsl
shlb
ljmp
pop
xchg
mov
pop
rclb
jg
mov
in
push
xlat
inc
sub
jp
mov
adc
xor
inc
push
fidivs
and
lods
mov
imul
or
addr16
cmp
sbb
les
sarl
imul
mov
jmp
pop
lea
xchg
repnz
push
xor
xchg
sub
xlat
mov
mov
dec
pushf
dec
dec
lret
lret
fcmovu
mov
xchg
jge
push
lahf
es
jno
shr
jl
xchg
data16
fdiv
pop
sub
and
lock
shlb
mov
popf
out
push
cmp
sub
and
pop
ficomps
cmp
aas
cltd
xchg
sbb
jp
push
pop
or
mov
fwait
cmp
cld
adc
xchg
stos
mov
test
cmp
sarl
sbb
add
fpatan
scas
js
leave
mov
add
xor
daa
lods
ficomps
cmpsl
insb
mov
jbe
mov
push
in
mov
push
mov
andb
or
inc
inc
fcoml
add
pop
mov
loop
pop
adc
mov
ficomps
jns
add
jg
mov
cmpsb
lret
nop
inc
outsl
lahf
hlt
pushf
icebp
jne
dec
mov
out
out
ret
jge
gs
mov
aam
jmp
xor
cmp
mov
jnp
push
sti
out
jge
out
xchg
out
in
pop
adc
into
pop
fistps
and
imul
mov
mulb
or
filds
cmp
iret
or
movsl
popf
hlt
mov
sahf
xchg
or
push
xor
not
testl
fwait
icebp
jmp
in
jmp
inc
pop
mov
idivl
sbbl
pushf
pop
loopne
cmc
scas
and
or
stc
or
jbe
loopne
mov
pop
test
and
imul
mov
fisttpll
mov
mov
pushf
adc
lds
jmp
adc
mov
cld
cmp
ret
inc
arpl
sar
xchg
jg
add
cmpsl
jae
or
cld
mov
xchg
xor
subb
add
data16
mov
lods
shll
push
mov
and
imul
fstpt
clc
rolb
push
lds
outsl
sbb
jg
aam
jl
and
inc
mov
mov
mov
pushf
sbb
mull
pop
sbb
adc
rcrl
imul
lods
inc
repnz
test
pop
test
lahf
mov
sbb
sbb
stos
lods
es
shrl
repz
mov
mov
cmp
sub
stos
insl
in
add
mov
xchg
hlt
cld
rorl
insb
rol
push
test
and
and
mov
aas
jge
xchg
mov
xchg
xchg
xor
lea
push
pop
mov
mov
loop
sbbl
push
notl
mov
decb
in
movsb
mov
in
es
sub
and
add
ret
pop
mov
dec
scas
push
mov
lock
sti
int
push
sub
in
test
adc
shlb
pop
sbb
orb
divb
or
fwait
aaa
lret
xchg
pop
imul
pop
lahf
enter
outsl
sahf
push
sbb
pop
mov
jno
cmp
ret
in
sub
mov
aad
xor
cmpsl
mov
adc
lods
call
jmp
inc
scas
and
mov
repnz
bnd
add
or
sbb
push
lods
loope
sar
orb
aad
mov
jecxz
jne
jo
xchg
cmpl
push
mov
cltd
rcrl
call
clc
lcall
adc
sbb
xchg
mov
cmp
jo
insl
xchg
adc
mov
out
insb
cmp
clc
mov
cmp
ss
sbb
push
xor
inc
mov
sbb
jl
insb
sbb
ja
push
add
push
xor
and
cmp
push
call
mov
test
xchg
pop
cmpl
xchg
jl
gs
repnz
dec
and
stc
inc
and
repz
jmp
fbld
sbb
xchg
sub
jle
mov
loope
dec
sahf
pushf
fxam
ret
or
inc
fmulp
lahf
in
shlb
adc
inc
mov
imul
sbb
aad
arpl
adc
gs
pop
cs
or
cmc
cltd
or
sbb
pushf
mov
xchg
push
outsl
cmp
jae
cmp
ds
adc
jg
pop
mov
push
pushf
inc
outsb
xchg
push
jnp
stc
push
scas
leave
mov
mov
and
out
mov
jae
ret
rcrb
ret
in
push
push
imul
aaa
nop
or
cmp
arpl
int
cmp
pushf
enter
xchg
hlt
repz
std
xchg
cmp
ljmp
inc
push
shll
dec
stc
repz
ja
int
fisubrs
out
movsl
sub
dec
shl
call
std
push
xor
lahf
jp
test
inc
scas
mov
dec
and
lods
les
cmpsl
dec
ja
js
sarb
out
push
cli
pop
and
mov
mov
cld
pop
sbb
out
in
std
ljmp
stos
pop
fbstp
mov
in
andl
in
push
push
and
flds
mov
add
sbb
mov
int
or
dec
mov
fstl
jmp
popa
das
sti
mov
or
in
mov
sub
pushf
test
bound
stos
add
js
ja
ffreep
aad
cld
jne
xchg
decb
call
cli
pushw
fcomi
push
dec
jo
mov
stc
lea
pop
sub
sbb
insb
xor
call
test
pop
mov
pop
mov
push
xor
jnp
sarl
inc
adc
dec
xor
and
mov
out
mov
loop
stos
and
mov
sbb
in
movsb
mov
insl
fs
cmp
pop
push
rolb
data16
push
or
ljmp
aas
stc
in
sub
xchg
sub
jae
cwtl
adcb
mov
push
sub
filds
das
outsb
addl
dec
out
pop
inc
adc
test
popf
rclb
push
das
loop
inc
xlat
fnstcw
mov
or
dec
cltd
sahf
mov
dec
fsubp
adc
or
rcll
outsb
int3
cmp
xor
out
ror
sbb
loopne
pop
ds
dec
addr16
jns
mov
scas
imul
cmp
leave
mov
test
fwait
cltd
dec
inc
imul
add
lea
pop
aad
lret
outsl
adc
push
add
and
stc
sbb
popf
inc
mov
adc
in
subl
out
add
fcoml
aas
cmp
movb
inc
in
cmp
clc
lahf
aad
sar
push
cmp
inc
mov
xor
ja
lea
push
out
shll
in
ds
out
add
je
js
jge
popa
pusha
cmp
jp
imul
loopne
mov
test
les
dec
sahf
fistps
imul
std
pop
pop
les
bound
cmp
or
pop
gs
inc
push
cld
mov
clc
cmpsb
pop
into
mov
sub
mov
sbb
imul
dec
dec
sbb
fbstp
in
pop
mov
mov
popa
nop
cmp
and
adc
cltd
inc
sti
imul
cmp
dec
sbb
pop
aam
loopne
mov
data16
or
xchg
dec
fcomps
or
mov
or
sub
lock
xchg
pushf
dec
popf
lahf
popf
ret
cmp
xorb
les
stc
ret
cli
nop
bound
jmp
mov
inc
dec
imul
pop
orb
cmp
cmp
xor
in
xor
pop
sbb
lea
push
in
cmpsb
xor
pop
add
movsb
cltd
or
add
dec
jno
enter
mov
cmp
mov
aam
arpl
sub
xchg
sub
add
pop
mov
lods
mov
mov
scas
jmp
test
loope
dec
decb
pop
ftst
bound
push
pop
add
lret
push
jnp
imul
cmpl
mov
js
test
fstpl
push
pop
mov
mov
lcall
sbb
aaa
out
in
sub
push
lock
inc
cld
push
adc
sbb
hlt
push
mov
mov
push
pop
mov
adc
jge
jbe
stos
inc
je
popf
xor
mov
lcall
xor
xchg
sub
popa
loope
mov
cwtl
sti
scas
dec
mov
ficoms
push
dec
adc
stos
sbb
sub
xchg
pop
xchg
and
inc
pop
add
cmp
cli
inc
add
shlb
jg
cld
mov
dec
mov
cmp
adc
clc
aaa
iret
stc
les
fmul
pop
stc
outsb
call
hlt
mov
fucomp
cmp
into
fidivrs
mov
mov
call
sbb
fldenv
sub
loope
push
push
add
or
cmp
rcr
pop
and
cwtl
mov
call
dec
pusha
add
imul
leave
das
cmpsb
mov
dec
out
jle
jmp
ss
repz
xchg
add
icebp
cs
dec
pop
rcrl
sub
repz
adcl
lds
clc
xchg
lea
push
test
rcll
and
ficoms
xor
dec
popf
inc
out
shll
insl
cmp
and
stos
lcall
pop
push
int3
cmp
call
add
mov
outsb
push
scas
cmpsl
fstp
mov
aaa
es
ja
pop
in
push
lods
out
lret
sub
fldl
lret
add
or
adc
mov
push
adc
mov
mov
gs
scas
push
sub
push
xchg
insb
cmp
loope
movsb
movsb
sahf
mov
ss
push
adcb
cmp
inc
or
and
test
add
xchg
ss
pop
in
or
inc
js
mov
leave
jns
ljmp
push
add
inc
popa
xor
daa
pop
mov
jne
insl
dec
or
pusha
mov
mov
sub
scas
add
les
ja
xchg
and
mov
sbbl
roll
mov
lods
push
shl
shr
ds
xchg
int
or
mov
or
pop
xlat
push
nop/reserved
roll
outsl
jns
aam
xor
sub
loop
mov
lahf
cmpsl
std
or
jle
dec
xchg
xor
int
bound
mov
jne
xchg
dec
or
dec
cmp
xlat
repz
lret
pop
test
loopne
out
adc
movsb
xlat
mov
add
adc
jmp
mov
mov
sarb
nop
insl
xlat
xchg
jne
push
nop
or
adcb
fisttpll
aad
mov
mov
inc
fwait
sbb
fnstsw
xor
ds
dec
addr16
pop
cmp
pushf
mov
cmp
jae
leave
cmp
popf
shll
mov
pushf
dec
cld
xor
aad
test
lods
inc
push
insl
daa
jge
add
and
or
dec
xchg
sub
arpl
xchg
lds
lods
push
sub
mov
or
inc
ret
outsb
add
pop
or
mov
or
loop
insl
mov
push
out
in
pop
stos
or
in
out
xlat
adc
xchg
sbb
mov
mov
jp
clc
push
push
dec
rclb
popf
in
pop
mov
ret
inc
loope
pop
push
je
fs
inc
loope
sbbb
or
adc
dec
rcrb
adc
rclb
fisubrs
fsubp
out
loopne
test
xchg
xchg
test
adc
pop
fisttps
dec
cmp
mov
repnz
or
cltd
scas
sbb
addr16
les
xchg
pushf
mov
arpl
insb
xlat
hlt
adc
mov
mov
push
sub
mov
test
jb
push
xor
addr16
inc
jae
addr16
ja
mov
pop
push
mov
add
xor
das
add
or
xor
call
cli
xchg
aad
cmc
cmp
mov
jno
in
and
or
or
adc
sub
cmp
inc
push
cs
sbb
clc
fs
in
push
cld
mov
jge
inc
int3
cli
inc
cmpsb
and
int
loopne
out
stc
fstpl
mov
sub
xor
shrb
loopne
data16
add
aad
jl
fnstenv
ret
xchg
test
jmp
xorb
xor
cmc
out
lcall
sub
outsl
xchg
imul
adc
mov
mov
sub
xchg
sarl
scas
pop
bswap
mov
mov
ljmp
shll
push
adc
sti
mov
in
cli
cmp
icebp
je
in
jb
out
bound
jg
cmpl
add
xchg
sbb
mov
or
lea
sub
test
push
and
stos
cmp
lods
mov
test
mov
cmpsl
jno
push
popa
sub
jg
sub
idiv
ret
stos
dec
mov
sbbb
xorl
cli
ja
mov
pop
cmp
sti
loop
xor
lods
dec
lcall
lods
fmul
push
inc
pop
sbb
mov
nop
addr16
clc
mov
aaa
ss
and
outsb
ret
adc
sub
mov
jl
out
and
es
dec
stc
xchg
jge
in
mov
sub
push
xor
xchg
repz
inc
push
stos
mov
sarb
dec
sbb
adcl
mov
sbb
fmuls
insl
fidivs
and
push
cld
xchg
and
cmpsb
nop
in
inc
mov
push
mov
push
call
int3
cld
xchg
aam
add
dec
pop
out
pop
mov
insb
je
mov
xor
scas
testl
mov
pop
mov
outsl
mov
inc
loope
stos
lds
inc
jp
out
add
js
mov
dec
mov
add
mov
push
icebp
jg
pop
cmp
out
daa
jae
jbe
es
cmpsb
mov
mov
jns
in
popf
cld
adc
add
lods
pop
sbb
mov
push
mov
mov
cwtl
or
subl
pusha
push
pop
mov
sti
mov
push
mov
jo
add
subb
lock
bound
cld
xchg
jp
dec
push
xchg
mov
inc
push
or
int
es
push
shr
xchg
repnz
int
fsqrt
call
mov
push
dec
in
lahf
aaa
push
push
and
and
ret
jge
pop
adc
jne
mov
addr16
out
in
sbb
dec
cltd
adc
les
subl
das
push
adc
mov
es
shll
pop
shrl
lcall
xchg
mov
dec
xor
out
mov
shrl
inc
xchg
pop
aad
or
sbb
fmul
outsl
jbe
add
clc
pop
outsl
notl
jb
cmp
sub
lret
cmp
xor
aam
aas
outsb
xor
add
sarl
outsb
dec
pop
int
cmp
sti
aaa
stc
or
imul
xchg
or
ret
xchg
xchg
or
pop
pushf
andl
ljmp
aas
popa
mov
push
cwtl
mov
test
sbb
out
inc
xor
xchg
imul
insb
xchg
dec
jle
rcpps
in
mov
icebp
mov
mov
and
jne
jge
mull
add
imul
shrb
add
sbb
cmp
or
sbb
adc
lahf
imul
mov
xorb
aam
movsb
mov
lahf
in
leave
orb
int3
jmp
push
shll
rorb
cmp
daa
int
sbb
lds
mov
mov
and
xchg
pop
das
lods
test
fwait
stos
fisubrl
adc
jb
fisttpl
divb
sbb
cmp
jae
adc
cmpsb
mov
int
adc
and
lods
cwtl
jns
dec
lahf
mov
sub
jo
jne
dec
jmp
negb
iret
pop
sarb
call
test
mov
rcr
sarb
xchg
sti
xchg
jmp
stos
cmp
fstpt
xchg
outsl
and
xchg
pop
mov
pushf
inc
hlt
bnd
mov
sbb
lret
sub
das
cmp
xchg
and
mov
jno
sbb
repz
cmp
cli
push
ss
imul
mov
mov
xor
and
cs
out
mov
and
call
xor
fcom
adc
sub
dec
outsl
into
fnsave
lock
push
cmp
fcmove
adc
and
bound
jge
fs
jg
jmp
and
mov
add
rorb
ret
mov
inc
pusha
mov
xchg
xor
sub
dec
imul
pop
incb
push
xor
fistpll
mov
insb
mov
loopw
adc
cmp
jnp
loopne
in
lret
mov
push
sbb
xchg
hlt
mov
and
bound
push
mov
arpl
sar
bound
xchg
push
ret
lds
cmpsb
out
call
jne
out
pop
stc
or
xor
mov
push
lock
xchg
mov
xor
xchg
sbb
adc
imul
mov
dec
sub
mov
adc
sahf
adc
mov
popf
push
je
ljmp
xor
out
fdivp
sbb
shlb
fidivrl
idivb
sbb
roll
je
popf
or
enter
pop
aas
jo
hlt
aaa
mov
mov
iret
mov
mov
xor
cmp
adcb
dec
mov
and
jbe
jp
es
lret
outsl
sbb
dec
sbb
mov
fidivs
adc
mov
aaa
or
cld
cmp
repz
jle
sub
add
xchg
push
pop
push
mov
shll
or
adc
mov
adc
push
nop
fistps
push
aad
lret
and
pop
push
cmp
adc
xor
insl
testb
data16
adc
out
sbb
cmpsl
testl
ds
push
push
popf
mov
ja
sbb
add
dec
jo
fxch
and
int3
rep
aas
pop
in
fidivs
in
pushf
ds
ja
or
sub
cmp
fisttpl
dec
dec
mov
insb
cmp
inc
stc
mov
ljmp
pop
addr16
int3
into
std
mov
int
addl
or
cmp
push
and
ficomps
int3
dec
xchg
cwtl
rcr
lret
lods
jbe
push
dec
mov
test
enter
xor
pop
mov
push
adc
xor
ret
sbb
jno
sub
push
jmp
xchg
js
jo
test
mov
stos
int3
cmp
cld
pusha
icebp
jmp
fs
mov
aas
aam
inc
or
outsl
mov
out
mov
addb
shll
or
sbb
cmpl
pop
and
jb
jne
bound
out
sub
push
pusha
inc
orb
push
xchg
adc
jno
out
cmpsb
sbb
cmp
rcrl
pop
xchg
insb
out
out
mov
dec
push
mov
pop
dec
sbb
mov
xchg
xchg
adc
es
xor
dec
aad
sarl
testl
inc
ds
xor
fcomip
rclb
add
mov
jmp
mov
arpl
cmp
loop
imul
sbb
test
fbld
les
inc
movsb
pop
push
add
push
pop
pop
testb
cmp
in
lcall
shufps
xor
mov
xor
fadds
add
and
int
leave
bound
sarl
shrb
mov
jle
push
dec
mov
inc
xorl
push
call
xor
pop
in
je
loope
icebp
push
jnp
xchg
xchg
xor
adc
data16
outsl
cli
jne
sbb
xchg
dec
fs
in
cmp
mov
jmp
jecxz
arpl
fcmovb
or
xchg
fwait
test
jb
test
mov
fdivrl
in
ljmp
fcoml
mov
mov
xchg
bound
mov
jae
xor
pop
and
pusha
cmp
pop
mov
jp
pop
and
inc
add
xchg
decb
jecxz
in
inc
mov
xlat
sub
inc
adc
hlt
cmpsl
xor
add
out
pop
add
jle
add
add
pop
lds
mov
inc
shr
lret
fisubs
mov
dec
repnz
xchg
jns
mov
add
pushf
cltd
notl
ds
add
fistl
adc
inc
mov
jnp
mov
mov
cs
xor
movsb
test
sbb
xchg
add
imul
popf
in
pushf
lock
cmpsb
data16
push
out
stos
cmp
jnp
pushf
xor
je
lods
cs
test
lock
outsl
frstor
clc
cmpsl
sahf
dec
jne
cmp
addl
jne
les
sub
fldcw
test
xchg
mov
xchg
cmp
jmp
je
test
jg
xchg
xlat
pop
subl
jb
or
adc
iret
pushf
pop
lret
rclb
xor
test
inc
pop
stos
test
xchg
into
mov
cmpsb
movsb
repz
adc
popf
sub
adc
addr16
dec
shlb
sub
pop
insb
xchg
mov
push
dec
call
int
mov
cli
jnp
add
xchg
adc
js
push
mov
aaa
sub
cwtl
or
sub
rolb
fwait
push
xchg
mov
push
js
in
rcll
clc
addl
mov
and
ds
push
popf
push
jnp
push
in
fildl
nop
sar
pushf
push
cmpb
cltd
in
in
sbb
sub
mov
inc
scas
push
notl
mov
cld
cltd
xchg
lds
shlb
mov
dec
sti
das
lret
fnstsw
or
cmpsb
iret
mov
dec
insl
and
mov
cmp
shr
or
cmpsb
xchg
je
dec
popf
xchg
xchg
lcall
adc
cmp
ret
in
jb
cmp
fwait
xchg
outsl
adc
out
out
pop
cmpsl
aas
and
gs
test
add
divl
out
xchg
mov
arpl
hlt
adc
lock
in
mov
dec
aas
je
pop
push
in
cltd
shll
enter
push
popf
jbe
mov
and
xorl
pop
ljmp
push
mov
and
ret
in
xchg
sub
adc
push
icebp
popa
fiadds
fstl
sub
sbb
je
movsl
and
sbb
sti
hlt
loop
add
cwtl
sbb
arpl
mov
lret
in
test
fldt
test
add
push
add
shll
pop
negl
mov
popf
insb
iret
mov
adc
imul
sub
js
pop
repnz
shll
std
sbb
adc
push
sub
ret
xchg
push
aaa
add
push
sub
pop
push
scas
sbb
lahf
enter
or
and
pop
outsb
aam
orb
jge
stos
int
fwait
xor
scas
pusha
cs
xchg
xchg
jne
mov
xor
gs
dec
test
jle
fists
orl
xchg
push
sbb
xor
xor
sbb
cmp
fucomip
fcmovnb
jecxz
nop
rclb
iret
stc
jp
jno
cwtl
movsb
add
jns
stos
adc
cmp
jmp
pop
stc
ds
testl
inc
sub
add
out
ss
outsb
pushf
test
jp
das
inc
fisttpl
dec
negl
jmp
jb
je
push
leave
cmc
cld
push
insl
mov
insb
fnstcw
sbb
lahf
xchg
loop
ret
push
adc
iret
pop
inc
movl
stc
divb
xor
fadds
imul
std
sahf
daa
push
jp
ret
cmp
sbb
push
or
out
sub
test
ret
pop
push
hlt
test
mov
push
rorl
stos
jnp
push
fwait
pusha
push
adc
lcall
ret
data16
mov
lret
push
out
test
ss
fiadds
and
pop
mov
pop
and
push
sbb
pusha
pop
push
imul
int
mov
xlat
das
je
jecxz
cmp
popf
pop
int
fidivrs
lea
adc
in
push
cmpsl
sub
lods
mov
es
xor
icebp
test
sub
jl
sub
loopne
imul
mov
lods
divb
rolb
mov
shlb
pushf
or
mov
rol
gs
push
lds
hlt
fisubs
scas
pusha
repnz
add
mov
mov
mov
pop
or
outsl
int3
jo
loop
aaa
inc
cmp
leave
dec
and
push
les
push
movsl
shll
inc
iret
cmpsl
cli
addr16
mov
cmp
mov
pop
mov
subl
icebp
xchg
data16
pop
ds
push
sbb
in
pop
add
and
movsb
rorl
push
arpl
add
inc
adcl
pop
cmpsl
jmp
lods
popa
xchg
int3
inc
dec
mov
mov
xchg
js
adc
das
cld
aas
sub
jbe
pop
or
adcb
repz
cmp
popa
dec
or
popa
jne
mov
pusha
icebp
pop
out
shll
fsub
pop
sbb
pop
fs
idivl
repz
call
push
push
pop
and
add
orb
int3
mov
and
loop
loop
xchg
insl
fdivp
add
inc
jle
cld
jmp
push
insb
jbe
adc
scas
mov
dec
in
push
mov
fcom
xchg
or
pop
pop
mov
popf
cmp
incb
dec
lret
gs
divb
cmpsb
sub
push
ja
adc
mov
cmp
stc
push
or
jne
push
shlb
pushf
arpl
pushf
jne
mov
xchg
or
and
pop
lcall
in
adc
and
mov
gs
pop
stos
jecxz
inc
cltd
es
sbb
sbb
cmpsb
add
leave
mov
lret
jp
adc
cmp
in
pop
and
cmp
gs
or
mov
pop
sahf
cli
mov
adc
fbld
xor
test
pop
clc
fbstp
fmuls
inc
add
xchg
scas
or
dec
scas
fwait
fs
div
jbe
scas
pop
jge
mov
cld
mov
lret
test
stc
push
xchg
mov
lods
outsl
sub
inc
je
fiaddl
add
lods
daa
movsb
xchg
insl
and
pop
and
je
mov
popl
sub
das
nop
es
inc
mov
jo
into
into
xchg
out
mov
scas
ret
or
icebp
cmc
jg
push
test
cmp
out
popa
cltd
pop
addr16
xchg
sbb
and
lods
mov
jae
out
xchg
inc
shlb
dec
dec
fimull
fsubrl
xchg
mov
scas
test
test
fsubrp
fsubr
mov
xchg
fldl
lcall
sub
mull
in
daa
icebp
jmp
mov
ds
roll
cmpsb
aam
and
pushl
pop
push
xor
rcll
cld
dec
pop
mov
jne
lahf
call
or
rcl
and
jnp
cwtl
jp
imul
and
cmc
jnp
call
test
lcall
shll
pop
loop
mov
and
cmpsl
sarl
xlat
or
mov
sbbb
insb
mov
lods
mov
cmp
or
jno
or
mov
int
push
movsl
lea
mov
push
mov
enter
sbb
pop
flds
pusha
mov
sbb
push
sub
imulb
mov
cli
loop
or
out
daa
test
dec
jne
arpl
rcrl
bound
sets
mov
mov
or
into
ror
dec
or
jae
jb
loope
sti
lods
setb
mov
imul
inc
cmp
lea
loope
movsb
test
jmp
lock
xchg
and
sbb
push
ret
movsb
mov
hlt
rorb
mov
sub
push
lea
inc
hlt
pop
jbe
orb
xor
enter
push
or
sbb
stos
cltd
dec
or
adc
leave
stos
push
push
xor
stos
scas
mov
push
sbb
cmp
and
dec
fwait
adc
jmp
pop
jecxz
xor
sahf
adc
xchg
into
sarl
ja
push
sbb
sti
ret
xchg
xlat
leave
or
xchg
and
jp
dec
aaa
push
rcll
fbld
and
loopne
jno
rorb
hlt
out
jle
rcll
call
add
mov
shrl
movsl
pop
mov
pop
shrb
repnz
aaa
jg
stc
mov
xchg
lcall
and
in
les
inc
out
mov
fs
fbstp
dec
push
mov
add
dec
xor
xchg
test
pop
push
jp
jno
push
mov
out
sub
push
xchg
sti
fldl
shr
daa
xchg
xor
dec
sbb
cltd
mov
pxor
iret
push
outsb
fisttpl
test
sub
ljmp
add
sbb
hlt
pop
sbb
aad
and
lea
jno
and
gs
add
scas
and
ds
fnstcw
sar
pop
rcrl
sbb
push
out
movb
aas
das
inc
xchg
imul
xor
gs
sti
fwait
dec
jnp
mov
or
jnp
imul
rorl
ret
movsl
out
fisubl
push
add
lock
std
sbb
sbb
cmp
fidivrs
imul
xor
xchg
nop
dec
xor
or
mov
push
mov
push
in
xor
mov
sbb
jnp
lock
jmp
sbb
lods
cwtl
or
xor
sbb
lahf
mov
xchg
push
nopl
jecxz
rcrb
pop
push
jmp
push
add
insl
pop
pop
divb
push
pop
inc
push
sbb
pop
loop
loope
pop
sbb
dec
into
push
call
rcrb
inc
dec
jp
negl
ja
sahf
ja
push
adc
in
add
sub
xlat
sub
inc
or
mov
mov
jmp
or
jb
lods
cmpsl
lds
lock
lds
mov
push
nop
inc
inc
mov
push
mov
mov
ja
cmp
adcl
push
arpl
mov
xchg
es
fnstenv
mov
int
xchg
mov
cwtl
les
xor
fwait
sbb
jl
push
push
pop
sbb
fucomp
loope
leave
loopne
clc
insl
jbe
push
pop
and
mov
sbb
rcrl
scas
lods
pop
mov
mov
subl
es
sub
xchg
fsubrs
or
fistpl
cmp
cltd
das
rcll
sub
xor
sahf
mov
shll
jg
sub
data16
and
dec
mov
xchg
pushf
cmp
in
pop
mov
addr16
or
mov
aam
icebp
cmc
cmp
cmp
mov
mov
sbb
in
stc
in
hlt
stos
pop
in
mov
cmp
mov
jb
std
rolb
pushf
inc
iret
call
inc
fiaddl
mov
into
xchg
out
sbb
gs
push
sub
adc
fisubs
jo
arpl
lds
dec
jnp
and
mov
pop
fabs
rcrl
ret
xlat
dec
mov
xor
aad
cmp
mov
shll
outsl
and
jle
xchg
xor
fs
mov
repz
cld
mov
shl
xchg
jno
sarl
aad
rcr
mov
mov
pusha
int3
adc
inc
mov
sub
cmp
int3
sbbb
lds
pop
push
ja
ja
xorb
lods
arpl
pop
adc
jp
popw
js
jo
sub
push
sub
add
mov
dec
jg
sbb
jae
ficomps
stos
xchg
in
jne
push
shl
lock
and
jmp
cmc
mov
xor
add
imul
push
adc
out
cld
xorb
roll
add
cmp
cli
in
cmovg
or
test
push
stos
in
aas
call
mov
dec
mov
xchg
or
pop
xor
daa
aad
insb
push
scas
cwtl
in
jbe
int
icebp
les
rol
fimuls
scas
push
js
adc
pop
jecxz
xor
push
test
addr16
sbb
imulb
mov
repz
sbb
pop
arpl
cmp
es
int3
adc
int3
xchg
pop
cltd
mov
jns
or
inc
rolb
push
stos
shlb
out
imul
pop
inc
pop
ret
into
push
mov
clc
and
ror
and
add
das
sub
cmp
jns
jns
mov
mov
and
mov
push
icebp
mov
scas
ret
jg
scas
inc
sub
push
xchg
test
lcall
and
in
stc
xchg
in
jle
pop
cmp
push
dec
fs
cmp
sbb
push
add
xor
fidivs
out
stos
negl
cmc
mov
pop
cs
cmpsl
push
jno
jge
dec
cmp
jle
inc
add
push
loope
sub
dec
icebp
and
xchg
xchg
inc
mov
and
notb
cltd
repnz
js
adc
js
nop
and
in
fcoms
loopne
adc
xchg
out
sbb
sub
loop
sti
or
sub
mov
les
cs
subb
sub
mov
mov
jae
imul
sub
insb
cltd
sahf
pop
xor
dec
outsl
adc
xor
mov
mov
inc
dec
mov
mov
js
mov
insl
xchg
fidivrl
jae
mov
cmp
inc
pushf
pop
into
adc
jb
and
or
decl
mov
lds
cmp
or
aad
divb
pop
rcll
stos
adc
add
es
je
xchg
xor
add
icebp
mov
mov
scas
bound
jp
ffree
flds
sahf
or
jl
xchg
daa
xchg
pop
push
mov
mov
jle
les
xchg
hlt
sahf
loop
sbb
cmp
cld
push
inc
inc
andb
out
and
adc
mov
out
xchg
dec
sti
push
xchg
loop
pop
mov
and
jb
sbb
inc
es
loope
leave
jbe
lock
or
mov
jmp
mov
pop
xchg
fcmovnbe
mov
cwtl
mov
out
out
cwtl
lods
in
adc
xor
or
fdivrp
jp
mov
cmp
sbb
lret
fcoms
fwait
rcr
outsl
xor
adc
lahf
jg
adc
and
cmp
inc
ret
repz
rcl
inc
add
inc
or
std
iret
jns
leave
sbb
in
add
out
ror
rcll
mov
pop
aad
scas
xor
int
xor
cmpb
inc
and
adc
mov
imul
mov
lds
lret
stos
push
cs
pop
jnp
or
mov
dec
pop
jl
ret
or
cwtl
bound
outsb
lcall
lock
adc
dec
fldl
int3
cld
stc
test
les
into
dec
popa
shlb
mov
sub
shlb
mov
mov
add
js
add
xchg
push
cltd
out
sub
and
jne
insb
xor
leave
sbb
call
push
add
mov
aaa
mov
test
sub
mov
add
or
sbb
jge
out
push
push
lahf
int
test
sub
and
and
dec
enter
aas
pop
pop
shll
rcl
jg
sbb
aas
cmp
add
xchg
mov
sbb
das
out
bound
pop
inc
inc
enter
mov
lret
xor
fmull
jnp
lock
adc
xchg
adc
lods
inc
lretw
idivl
loope
or
jb
loopne
jb
out
cmpsl
lock
mov
mov
xor
cmc
cmp
push
test
dec
jno
scas
cli
mov
jecxz
xchg
mov
dec
inc
ret
fisttps
xor
popf
aas
inc
fidivl
adc
out
xchg
pusha
pop
out
pop
inc
jae
repz
imul
dec
xor
add
loope
xor
sbb
fdivrs
mov
mov
or
pop
xchg
dec
aad
mov
jo
push
jmp
sahf
adc
jp
jmp
inc
ficoms
push
cmp
aas
nop
out
xchg
nop
scas
dec
push
pop
aad
scas
popa
xchg
cmp
insl
lock
inc
mov
pop
push
mov
ja
add
dec
pushf
cmpsl
fstpt
daa
je
xchg
call
mov
push
push
mov
pop
andb
sub
test
mov
rclb
add
jl
and
imul
mov
scas
cmp
mov
push
mov
pop
hlt
scas
fs
popf
lret
sub
sbb
filds
add
xor
rcrb
dec
popa
repz
std
shl
xlat
testb
xor
je
xor
inc
fs
out
fidivl
int
ret
loop
in
aaa
push
and
mov
mov
xor
int
rol
xorb
pop
sub
and
leave
xchg
fcomps
stc
orl
dec
cltd
lods
inc
ficoml
loopne
idivb
xchg
addr16
out
les
push
mov
push
jmp
mov
divps
pushf
cli
test
mov
and
adc
cli
test
mov
xchg
scas
push
sbb
rcll
dec
data16
sub
or
int
roll
cmp
sub
mov
int3
dec
aad
clc
gs
stos
jle
mov
leave
xchg
mov
cmp
inc
stc
out
xchg
dec
mov
enter
mov
inc
js
repnz
xchg
lahf
fs
test
push
push
addr16
fists
jbe
je
adc
sub
inc
gs
ja
jno
inc
movsb
ljmp
sub
out
jo
repnz
push
fnsave
hlt
xchg
jb
push
into
in
xchg
icebp
test
test
mov
cmp
jnp
jno
inc
rcrl
pop
loopne
out
ss
add
inc
fists
dec
mov
imul
xchg
mov
in
mov
scas
mov
in
arpl
mov
cli
dec
xchg
pop
pop
cmp
pushf
or
ds
pop
xchg
es
jns
aaa
pop
lcall
xlat
pop
sarb
jno
sub
dec
sub
popf
xchg
push
pop
in
out
sarb
jecxz
les
xor
adc
outsl
popf
lret
fcomp
or
leave
popf
dec
repz
clc
mov
pop
cltd
hlt
pop
int3
cbtw
inc
mov
dec
sub
out
roll
sbb
xchg
stos
add
xchg
and
divb
fldenv
mov
sbb
aad
or
jnp
dec
rolb
xchg
cli
mov
jge
inc
je
push
jmp
rcll
and
add
lds
sbb
and
mov
je
cmp
mov
in
inc
xor
pusha
nop
cmp
jge
in
mov
jne
mov
in
add
push
and
xor
push
sbb
push
mov
mov
jmp
pushl
loop
fadds
shrb
stos
mov
jo
dec
addr16
movsl
adc
add
adcl
jb
xchg
push
clc
jae
movb
jb
push
push
add
sbb
int
and
dec
mov
cmpl
roll
inc
jl
and
add
adc
je
insl
incb
dec
jbe
dec
mov
idivl
and
movd
xor
sahf
nop
jecxz
adc
inc
add
jns
xor
mov
mov
dec
fwait
lock
ja
mov
inc
xchg
popa
jne
mov
int
div
jns
rclb
rcr
mov
push
lock
sub
mov
push
xchg
cmp
adcb
mov
cmpsb
pushf
dec
shlb
inc
add
lods
pop
iret
push
adc
lods
je
adc
cmpsb
jae
popf
ljmp
aam
iret
push
xor
or
jmp
cld
nop
mov
rcll
loopne
xor
dec
out
sub
mov
inc
mov
push
sbbb
mull
add
sbb
dec
sub
lahf
into
add
insl
push
inc
stos
loope
mov
lret
leave
loope
mov
insb
loopne
mov
sbb
mov
push
in
push
sahf
jge
iret
ss
pop
bound
push
mov
xchg
ret
push
sbb
inc
mov
jns
xchg
pop
add
cmp
pop
jge
pop
pusha
mov
dec
push
flds
sub
xchg
xchg
jg
addr16
inc
sbb
jecxz
fnstenv
pop
add
sahf
jb
outsb
leave
pop
cmp
in
aam
jge
xchg
pushf
orl
imul
lods
call
and
mov
xor
inc
leave
jmp
outsb
clc
mov
lea
pop
orl
ds
jle
shlb
sahf
and
mov
in
inc
push
sub
xchg
dec
inc
xchg
xor
push
pop
or
dec
pop
cmp
mov
adc
push
imul
jns
dec
lret
popf
leave
imul
push
aam
cmpsb
ss
add
cmp
add
loopne
sbb
addr16
jecxz
lods
mov
mov
jb
test
lds
pop
leave
xchg
pop
jo,pn
mov
stc
jle
or
mov
imul
pop
ljmp
and
shll
nop
fwait
jecxz
incl
dec
and
shlb
test
add
orps
xor
adcb
popa
popa
test
pop
jbe
jg
jge
inc
sbb
dec
loope
lcall
inc
das
clc
mov
shrb
in
or
mov
mov
inc
and
jne
xchg
adc
stos
and
out
and
cmp
addr16
lock
sbb
fiaddl
sbb
inc
sbb
jno
add
push
stos
or
cmc
dec
shlb
testl
es
shrl
insb
je
jbe
es
lahf
add
rolb
cmpsl
lret
push
push
pop
loop
cmp
add
inc
mov
xchg
add
cli
dec
pop
das
push
sub
nop
mov
inc
mov
mov
sbb
mov
test
jle
push
fabs
xchg
sub
xor
shll
ret
inc
dec
jno
adc
stos
mov
mov
addr16
pop
dec
loop
pop
sbb
fldl2t
in
xor
sbb
adc
add
and
mov
sbb
popf
lret
jne
jl
sbb
aaa
push
mov
jg
in
cmp
pop
movsl
mov
cld
sti
xor
adcl
sbb
mov
mov
dec
out
or
dec
scas
std
adc
das
xor
mov
and
jmp
or
ret
roll
dec
mov
sbb
sbb
jmp
or
cltd
jge
inc
dec
in
mov
xor
mov
adc
jbe
mov
shlb
dec
mov
xchg
push
jp
inc
push
xor
cmpsl
push
cwtl
and
inc
stos
mov
int
mov
push
pop
iret
jnp
mov
inc
int
insb
arpl
add
push
and
subb
pop
mov
cmp
xor
and
bound
pop
iret
mov
adc
pop
inc
cmc
jno
cmpsb
ret
movsl
fs
cmpsl
and
clc
adc
cmp
sub
rcrl
popf
mov
dec
xchg
ret
push
cli
dec
pop
out
xor
sbb
in
or
mov
enter
push
bound
inc
push
jno
push
pop
pop
pop
loope
or
sub
in
xor
fwait
rcll
jb
sbb
xchg
add
xchg
mov
dec
adc
pop
mov
stos
mov
decb
idiv
call
pop
push
xor
mov
and
xchg
sbb
pop
cld
sahf
inc
mov
add
in
leave
lea
shlb
mov
gs
xchg
mov
addr16
sub
repnz
in
lret
mov
sub
sti
mov
mov
dec
lcall
jl
scas
out
movsl
js
mov
out
mov
mov
outsl
inc
stos
ja
out
scas
mov
push
stos
inc
mov
sarl
int3
mov
jp
mov
jno
adc
jmp
xor
sub
test
jle
bnd
or
lods
or
xchg
pusha
add
xchg
test
lahf
call
pop
mov
pusha
sarl
and
nop
stos
outsl
add
add
or
mov
loope
push
dec
addr16
mov
xchg
xor
xor
mov
js
int
cli
mov
decl
add
mov
lods
push
mov
mov
test
out
test
enter
dec
cmp
push
add
out
xchg
gs
into
in
test
mul
mov
adc
mov
cltd
repz
sbb
push
je
aam
loope
adc
ficomps
xchg
pop
jge
cmc
mov
pop
je
stos
les
pop
dec
sbb
shr
and
scas
pop
fistpll
pop
outsl
dec
xor
mov
mov
mulb
sar
xchg
lahf
int
loope
xor
dec
mov
jo
decl
popf
stos
hlt
dec
jp
push
fcomi
out
sti
adc
dec
xor
adc
adc
loope
shlb
int
add
mov
dec
adc
pop
jmp
mov
xor
mov
push
dec
daa
mov
pop
aaa
push
ret
pop
repz
cmp
sub
push
or
fstps
inc
or
dec
mov
in
in
push
popl
adc
xchg
sub
adc
addr16
adc
orb
aaa
xchg
jg
cmp
movsl
ljmp
rcll
lea
cmp
ljmp
out
cmp
jl
pop
mov
dec
pop
sub
lock
push
push
push
sahf
xor
rcrb
dec
add
jge
lahf
dec
aaa
lea
adc
cmc
fldl
dec
or
mov
lret
mov
cmp
sub
xchg
xchg
push
inc
fsubs
add
and
testl
lea
pushf
jb
push
icebp
pop
popl
mov
pop
mov
push
fisubrs
clc
lea
imul
out
bound
popa
sbb
push
push
dec
leave
fsubrp
mov
or
jmp
cmp
fisttps
adc
mov
jp
inc
jp
xchg
in
mov
ss
idivl
sbb
pop
jns
sbb
or
loope
xor
out
in
adc
push
les
cld
dec
add
pop
icebp
mov
pop
pop
mov
cmovb
pushf
adc
iret
fidivl
mov
mov
jb
fisubrs
addr16
pop
or
mov
test
outsb
jp
nop
sbb
and
or
cmpsl
push
pop
mov
addr16
fistpl
sbb
rcl
xor
test
dec
sbb
xchg
adcl
frstor
dec
imul
lods
sbb
ss
cmpsb
cs
adcl
repnz
xchg
dec
inc
inc
fwait
dec
test
cld
lea
sbb
add
out
jp
fildll
daa
mov
push
pushf
pusha
mov
dec
sub
or
or
push
sbb
stos
movl
stos
cmp
aad
in
sub
or
jp
xchg
inc
imul
xchg
stos
rorb
test
adc
in
push
dec
stos
jbe
push
adc
sub
sub
iret
repnz
dec
mov
inc
mov
sbb
sub
mov
dec
sub
inc
xor
mov
int3
aas
add
cmp
adc
lcall
mov
stos
ret
cmp
xchg
sbb
and
and
add
dec
movsl
inc
cmp
push
sti
pusha
outsb
repz
xchg
cli
mov
xchg
clc
outsb
dec
mov
jo
add
inc
repz
mov
inc
sbb
mov
cmp
stc
pop
mov
decb
nop
mull
pushf
jo
push
cmp
ds
mov
jle
mov
lods
sbb
mov
and
sub
jmp
cmpsl
dec
push
mov
loop
mov
fwait
scas
push
sub
inc
xchg
ret
clc
sbb
mov
pop
cmp
jl
dec
jge
jnp
mov
arpl
gs
inc
iret
mov
xor
out
fwait
cs
ja
call
push
and
stc
enter
push
mov
out
cli
add
lock
mov
mov
lods
or
sbb
data16
sub
cmp
xor
test
popl
jb
or
adc
push
pop
test
adc
std
xchg
daa
cmp
dec
pusha
fwait
jne
sbb
imul
js
hlt
cmpsb
loopne
repnz
movsl
dec
lods
push
adc
jmp
in
jp
test
cmc
mov
xchg
sbb
xorl
jae
mov
pop
aad
dec
test
xor
inc
out
cmp
sbb
aaa
push
xor
pop
fists
lds
clc
xor
loopne
xchg
lods
in
dec
sub
insl
roll
dec
je
fsub
js
lret
lret
pop
icebp
pop
repz
and
popa
ss
cltd
xchg
lods
pop
cmp
pusha
dec
mov
inc
xlat
mov
mov
mov
cmp
into
pop
mov
mov
arpl
andl
fimuls
les
in
fwait
popf
ja
out
cmpsl
and
mov
xor
aad
pop
cmpsl
push
ljmp
sahf
dec
and
sbb
sti
and
cli
fisubs
jbe
jne
cmp
test
fisubrl
ret
jg
loope
test
inc
inc
dec
mov
lds
dec
sub
dec
mov
pop
in
or
int
ret
push
inc
clc
cmpb
sub
sbb
lcall
movsb
push
pop
loopne
pop
jp
jecxz
pusha
lock
push
mov
dec
sbb
xchg
rcrl
sbb
insb
xchg
movsl
lahf
test
mov
cmp
sbb
incl
mov
mov
dec
mov
js
sub
inc
sbbl
and
xchg
jle
adc
addr16
fistpll
cmp
xor
aas
data16
and
or
mov
xchg
pop
jae
fimuls
cmp
push
cld
add
xchg
pop
mov
or
adc
sub
aas
int3
scas
jno
jge
inc
xchg
jge
jmp
mov
test
aad
inc
aad
adc
das
pop
xor
jns
ds
sub
cld
clc
push
test
push
jne
or
fstps
pop
mov
in
xchg
out
adc
cltd
xchg
pop
push
inc
inc
xchg
movsl
pop
xchg
addr16
push
fsubrs
out
je
dec
arpl
mov
fbld
inc
ja
imul
jge
mov
loope
sub
insl
xchg
loopne
mov
loop
xchg
dec
sti
iret
add
sbb
out
mov
mov
dec
aam
js
scas
mov
jmp
xor
sarb
sar
pop
mov
xor
ljmp
adc
call
mov
cmp
xchg
or
jg
daa
or
mov
fsub
jle
push
repnz
cmp
ficoml
inc
mov
stos
sub
xchg
mov
dec
cmpl
add
cld
std
xlat
les
or
push
mov
xor
outsb
cmc
das
cwtl
cmpl
dec
pop
rolb
xchg
pop
adc
dec
dec
outsb
outsl
or
jge
mov
aas
arpl
push
cli
test
ret
sti
xchg
in
neg
mov
daa
adc
enter
and
sarb
inc
cmpsb
out
nop
sub
push
fcmovnbe
cwtl
sahf
andb
jne
imul
jbe
add
mov
lds
sub
push
fwait
or
in
sub
inc
jnp
adc
divl
loope
pop
inc
add
xchg
jnp
xorl
mov
push
xor
add
mov
fldz
xchg
iret
xlat
loope,pn
jb
rolb
xor
xlat
and
loop
jo
imul
imul
or
sbb
push
ds
cmp
jb
call
insl
out
je
cs
dec
out
jmp
hlt
cmp
adc
cwtl
je
push
cli
popf
or
clc
and
out
pop
jmp
ss
stc
push
sbb
xchg
cmp
add
sarl
sub
lret
into
jp
iret
psadbw
lods
inc
in
test
lahf
lret
cs
into
add
fstpl
inc
sub
lods
aad
jmp
fistpll
xor
aas
stc
dec
adc
xchg
ffree
add
loope
pop
mov
jle
lret
ljmp
mov
jmp
sbb
aaa
xchg
push
repnz
mov
or
sub
jbe
xor
in
ret
lds
lds
lea
sbb
mov
dec
xor
bound
es
pop
or
std
and
or
cmp
xchg
sbb
loopne
fs
aaa
aaa
cwtl
xchg
mov
in
push
rcll
test
xchg
cltd
lret
mov
std
xor
cmpb
stos
jle
dec
xchg
mov
push
add
xchg
inc
loope
fwait
jnp,pt
callw
jecxz
enter
lods
cmp
pop
xlat
mov
sarb
jecxz
das
mov
inc
sahf
stos
xchg
xlat
push
xor
stc
xchg
cmp
je
pop
xchg
pop
jno
dec
scas
xor
xchg
sbb
or
jmp
xchg
inc
xor
out
cmp
stc
pop
sbb
aad
daa
xor
jne
fwait
dec
mov
das
loopne
mov
cltd
xor
or
dec
fwait
mov
insb
mov
fwait
sub
mov
push
sub
push
jg
push
and
push
and
xchg
bound
cli
mov
sub
dec
mov
int
mov
jg
aad
jle
test
jl
add
jl
adc
bound
mov
into
xor
imul
shrb
jne
mov
pop
out
clc
dec
loopne
ljmp
add
push
aas
xchg
xchg
fcomps
out
es
addr16
push
dec
dec
das
adc
imulb
cmp
mov
mov
leave
or
outsb
ljmp
cmc
movsb
and
mov
rcr
loope
sub
daa
addl
je
ret
jle
or
lret
pop
xchg
or
cmp
xchg
inc
push
jmp
fstps
lock
adc
ficoms
daa
push
dec
pop
cmp
sbb
stc
lock
dec
pop
popa
pop
xor
mov
lods
iret
cmp
xchg
sbbl
push
test
mov
jae
mov
mov
test
push
ljmp
jno
mov
cmpsl
icebp
mov
push
inc
jmp
mov
xchg
jp
into
icebp
jmp
lcall
movsl
mull
sti
imul
jmp
sub
pop
repnz
xchg
push
stos
outsb
dec
je
setns
test
jmp
xor
es
into
cmpsl
mov
test
push
or
pop
iret
hlt
mov
fistpll
sbb
xchg
lds
cmp
xor
mov
data16
popa
js
jecxz
jge
adc
scas
jmp
in
mov
cmp
or
push
aam
ss
push
push
jno
std
out
mov
int
ss
imul
mov
dec
push
daa
adc
sbbl
pop
bound
call
xlat
mov
scas
pop
inc
rcrb
push
out
out
in
dec
cmp
lret
pop
mov
and
dec
xchg
xor
push
rcrl
push
ret
repnz
lods
dec
lahf
aad
btr
dec
lock
lods
dec
or
insb
fwait
mov
cwtl
test
xor
sbb
pop
jbe
mov
into
addb
cmc
ja
jns
xchg
xchg
int
xor
clc
inc
push
fsubrs
or
mov
sbb
xchg
xor
dec
pop
repz
push
unpckhps
push
jns
dec
mov
or
mov
pop
cmc
pop
mov
sub
mov
inc
ljmp
xchg
pop
mov
xor
mov
dec
mov
jno
sub
mov
je
adc
pop
fsubr
mov
in
pop
sub
fcoms
iret
jl
cmp
cmp
inc
in
loopne
jmp
pop
in
leave
inc
mov
jo
mov
cmpsb
sub
cltd
mov
movsl
pushf
jp
or
scas
fsts
or
push
and
stc
int
mov
popa
imul
scas
push
addr16
clc
outsb
mov
or
sub
cmp
in
out
aaa
fstl
hlt
loopne
daa
xor
pop
dec
xor
leave
jne
rorb
pop
int3
sbb
test
cmp
dec
daa
cmc
sbb
filds
fisubrl
mov
aaa
in
sti
sbb
pop
sbb
and
mov
adc
or
leave
je
mov
fcomi
cs
stc
jb
mov
fldl
lret
mov
cmp
popa
mov
lcall
xchg
out
jle
cli
dec
fabs
lret
or
test
stos
dec
out
push
xor
xor
inc
pusha
in
mov
pusha
pop
insb
addl
mov
or
fdiv
pop
inc
mov
stc
inc
adc
cmp
add
jle
movsl
icebp
in
enter
lods
movsb
outsl
pop
lds
pusha
or
test
push
cmp
mov
mov
enter
mov
pop
pop
inc
into
fs
test
sub
inc
xchg
xchg
gs
fcompl
out
fwait
dec
test
jnp
lcall
lret
mov
push
push
movsl
aam
loopne
jmp
sbb
scas
mov
lds
push
out
mov
sahf
stc
popa
mov
gs
xorb
jge
or
xorb
test
and
psadbw
mov
pop
adc
and
xor
sub
mov
cmp
pop
or
mov
aas
jbe
out
imul
lds
js
add
xor
jno
adc
jl
add
xor
mov
sbb
clc
pop
shlb
ljmp
fwait
cli
push
mov
inc
mov
sub
pop
xchg
pushf
stos
pop
add
gs
int3
ds
mov
stc
cli
repz
ljmp
pushf
mov
pop
jge
hlt
and
sbb
or
push
jbe
rcll
lock
push
test
adc
mov
dec
pushf
xchg
mov
xchg
je
sub
pop
mov
sub
je
aaa
flds
cmp
add
insl
subb
adc
pushf
xlat
mov
pop
in
push
insl
aad
sahf
in
jecxz
cmp
mov
mov
ja
adc
cmp
dec
xchg
aas
jo
leave
jg
push
cmp
rolb
xchg
loop
fsubrs
mov
pop
arpl
jae
and
fcmovnu
mov
mov
das
inc
arpl
mov
jnp
fstps
or
sbb
mov
aaa
fimuls
inc
dec
xchg
and
nop
sbb
repnz
fldl
outsb
push
fwait
in
test
jne
jo
xor
stc
xchg
imul
dec
ret
dec
jle
loop
xchg
std
inc
or
aad
loope,pt
in
sbb
sub
scas
add
cmpsl
js
cmp
out
jp
shl
sub
in
mov
popf
or
fcomps
inc
add
pop
scas
or
jnp
rorb
push
push
je
scas
ret
ret
sub
inc
mov
mov
sub
in
lods
popf
fsubrs
push
loopne
mov
into
jb
imulb
fistpll
fs
cs
push
push
int
les
adc
subl
sub
jnp
int
lret
pop
bound
mov
xlat
inc
popa
movsl
push
dec
fsubl
orl
mov
adc
mov
lock
jbe
sbb
aam
rcl
ficompl
jne
mov
mov
cmp
leave
jge
add
int
and
jae
push
dec
add
clc
pop
xorl
sahf
fs
cs
pop
rcrl
mov
repnz
loop
inc
leave
mov
enter
mov
ret
mov
shll
and
mov
jb
fnstsw
sbb
in
jnp
pop
mov
int3
int3
jle
inc
jl
adc
dec
into
sbb
or
test
mov
int3
int3
cli
cld
sar
je
inc
mov
cmp
in
icebp
jmp
daa
mov
loopne
andb
lret
mov
inc
shl
popa
jbe
jo
inc
in
mov
sbb
mov
insl
mov
adc
cli
mov
mov
sub
mov
ret
out
daa
cltd
inc
push
gs
xchg
mov
pop
sub
or
xor
mov
dec
mov
push
mov
xchg
ret
ja
dec
adc
or
push
cwtl
pop
sar
xor
dec
pop
push
mov
mov
and
xor
inc
sti
movsb
test
imul
mov
and
xchg
ret
fadds
mov
or
dec
rcrl
out
imul
xchg
sub
jb
popf
dec
xchg
xchg
cs
xor
adc
fildll
out
jmp
sub
inc
sub
ja
loope
test
pop
or
pop
int
and
lret
mov
shll
fs
out
sbbl
push
cmp
test
jl
inc
pop
push
mov
jl
adc
xchg
repnz
out
int
cli
mov
mov
mov
pushf
xor
enter
repnz
faddp
inc
xchg
mov
mov
jbe
fs
out
pop
pop
int
jnp
daa
icebp
mov
mov
idivl
lea
jmp
scas
cmp
out
nop
xchg
mov
sbbl
outsb
loopne
cmp
inc
leave
aam
cltd
inc
data16
cmpsl
push
sub
shrb
bnd
cltd
mov
push
ret
sarl
notb
push
dec
mov
dec
sahf
fiaddl
inc
sti
mov
ss
sti
xchg
xor
cmp
bndldx
mov
pop
movsb
xchg
lods
sbb
hlt
scas
pop
out
imul
lds
dec
into
loop
jmp
cmc
movsl
movsl
cmp
ljmp
and
sub
movsb
gs
mov
cmpsb
and
fdivr
ljmp
add
cmp
mov
mov
call
aad
lea
loope
les
sbb
mov
fsubr
and
fcmovnbe
out
cmp
scas
jo
push
imul
mov
xchg
push
outsl
mov
inc
inc
cltd
shll
dec
cmp
hlt
in
mov
adc
push
insl
loopne
loope
das
xchg
jbe
ljmp
cwtl
bswap
and
aas
xchg
mov
in
jae
xor
negb
pop
xor
out
pop
sub
jle
xcrypt-ctr
cmpsl
pop
or
loopne
mov
lret
dec
push
lret
pop
push
sbb
inc
bound
mov
pop
xchg
cli
cmp
mov
loope
mov
rolb
adc
sti
out
mov
idiv
mov
mov
sub
clc
xlat
pop
enter
popa
sbbb
addb
out
cmpsl
add
in
iret
imul
jae
dec
lea
pop
pushf
sub
sub
lcall
fldl
mov
mov
sub
repnz
mov
dec
jnp
imul
cmpsl
jno
mov
mov
inc
dec
mov
xchg
push
jae
dec
sbb
clc
daa
add
or
je
mov
das
push
aam
aas
jge
outsb
in
in
pop
mov
fnstcw
cmp
insb
cmp
das
out
jle
sar
rcrb
pop
and
lret
sub
movsb
scas
cmp
hlt
rcll
jge
sub
sub
push
inc
inc
sbb
not
std
jge
mov
xchg
jno
int
jne
sbb
enter
lods
dec
std
lods
dec
mov
xor
xor
stc
or
push
rcr
fxsave
rolb
mov
and
dec
ljmp
loopne
pop
scas
pop
sbbb
fstps
lahf
xchg
xor
cltd
iret
xchg
xchg
xchg
or
mov
rcll
clc
cld
nop
frstor
scas
sub
mov
ljmp
cltd
movsl
je
cmpsb
mov
mov
push
loop
jne
enter
pop
lods
ljmp
sub
push
mov
pop
mov
mov
mov
enter
mov
stos
pop
jno
lods
inc
sub
jle
scas
frstor
adc
jmp
imul
push
orb
lods
shlb
xor
mov
in
push
mov
pf2id
mov
inc
xchg
mov
or
mov
cltd
adc
insl
push
jns
dec
roll
test
jne
fnsave
and
adc
stos
notl
push
inc
dec
repz
xor
jbe
add
jmp
sbb
jg
cmp
xchg
pop
sub
fwait
inc
jbe
add
pop
popf
sbb
push
pop
repz
pop
fisttps
and
bound
sub
in
jg
adcb
popf
cmp
lcall
xor
xchg
xchg
fs
mov
arpl
xor
test
sbb
jmp
fisubrs
sub
push
push
jo
shl
hlt
stos
add
sub
cmp
call
ja
push
jg
dec
mov
fcom
jge
push
adc
jne
xlat
lret
lea
push
leave
xor
negl
cwtl
icebp
xchg
xchg
hlt
repz
mov
mov
push
inc
or
cmp
imul
mov
sbb
sarl
repnz
sub
jle
out
adcb
or
ret
dec
dec
jno
inc
lds
cmpb
aas
cmc
xchg
jnp
push
mov
mov
jno
lods
jl
lds
lods
jle
dec
and
mov
mov
and
iret
dec
and
repz
jbe
adc
jp
fisttps
sub
push
lds
push
sahf
cmp
jecxz
push
dec
mov
lds
jle
mov
add
jl
int3
jno
les
fcoml
mov
push
fsts
sahf
jns
add
test
mov
push
mov
in
cs
test
push
pop
subb
lea
adc
ret
andb
inc
insl
jp
dec
sar
mov
clc
pop
std
test
adc
dec
ljmp
mov
mov
pop
sbb
mov
inc
adc
aam
mov
loopne
out
.byte
movsl
inc
and
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
xchg
ror
into
out
cld
test
or
cmpsb
out
cmp
jle
sub
adc
pop
pop
mov
add
mov
adc
mov
push
call
mov
js
mov
and
inc
push
nop
mov
or
cmpsw
push
std
repnz
sar
lahf
in
mov
pop
pop
xor
movzwl
sub
mov
sub
and
push
popl
push
push
adc
pop
pop
sub
jmp
cmpb
jnp
cli
push
idiv
decl
test
pushl
cltd
pop
mov
mov
leave
and
pop
frstor
adc
jns
loop
scas
jne
push
nop
icebp
inc
aad
jmp
adc
pop
stc
stos
or
pop
mov
js
dec
sbb
mov
enter
iret
lds
and
data16
popa
into
dec
sub
cmp
sarb
mov
xchg
cmp
or
and
push
push
sub
aad
in
ss
fnstsw
mov
shll
sarb
inc
aam
js
dec
pop
mov
mov
mov
test
xor
inc
dec
xor
dec
lcall
jo
xor
jnp
dec
or
fdivrp
mov
add
in
mov
sbb
jno
add
mov
xchg
pop
test
and
lock
jo
sbb
and
inc
lods
sbb
jnp
adc
mov
cli
in
je
cli
dec
xor
or
dec
push
inc
add
pop
testl
jne
mov
dec
xchg
mov
mov
or
jns
movsb
mov
and
test
add
in
mov
and
in
mov
jbe
sti
push
cmp
pop
and
cmp
push
xor
bnd
sub
sti
addr16
push
lock
jnp
ss
fildll
rorb
sbb
cmp
xchg
jnp
ss
add
dec
jg
in
xchg
ja
inc
inc
add
ss
jp
or
outsb
inc
repz
in
lahf
xchg
sahf
xor
pop
dec
mov
xchg
or
lret
mov
sbb
xor
mov
sub
je
sti
push
popf
imul
ja
push
filds
inc
push
push
push
inc
ss
in
inc
mov
inc
ss
xor
mov
test
xor
push
xlat
outsb
cltd
dec
jge
jae
test
fadd
lret
mov
test
xchg
jp
mov
mov
jnp
mov
cmpsl
xchg
sti
mov
jns
test
add
mov
scas
cld
rorb
dec
pop
mov
bound
xchg
or
jp
sbb
mov
or
adc
adc
lahf
push
cwtl
jnp
pop
push
icebp
test
and
mov
mov
test
push
movb
xchg
imul
lods
sub
pop
mov
mov
aam
cmp
jno
movsl
cwtl
dec
out
hlt
dec
cmp
mov
mov
adc
inc
hlt
ljmp
mov
hlt
push
cmp
pop
or
jae
popf
push
mov
jns
cmp
inc
push
cmp
pop
or
std
push
cmp
fists
in
fists
dec
outsb
icebp
push
inc
fwait
lods
mov
out
in
pop
cmp
imul
loopne
push
cmp
addr16
pusha
rclb
aad
mov
in
xor
lcall
orl
enter
or
rol
aaa
in
push
xor
push
and
push
dec
rclb
out
sbb
in
data16
aaa
push
fmull
iret
add
outsb
nop
or
jl
push
xor
dec
cmp
lds
mov
cwtl
int3
cli
insl
rclb
out
dec
push
cmp
mov
or
mov
rcll
popf
test
cmp
cwtl
pop
mov
out
cmp
cwtl
popf
xor
in
ffreep
ja
cltd
popf
xor
sub
rclb
push
data16
push
cmp
popw
xor
jae
push
xchg
jl
adc
test
sbb
adc
aad
shl
sub
mov
sbb
in
iret
ljmp
push
pop
fisubs
xchg
rclb
gs
rclb
movsl
aam
mov
ficoms
mov
xchg
xor
rcl
push
cmp
adc
in
cwtl
popf
int
mov
fistpll
and
lds
adc
adc
fs
aaa
in
lds
stc
inc
pushf
ds
fisttps
cmp
fists
adc
push
cmp
fists
jg
sbb
sbb
popf
in
inc
popf
pushf
push
shlb
push
dec
sbb
mov
mov
outsl
data16
movsl
dec
inc
ds
cltd
push
cmpsb
mov
aaa
mov
mov
es
movsl
adc
push
jmp
movsl
dec
inc
ds
cltd
ja
pop
fwait
adc
ljmp
fldl
jne
dec
ret
dec
sbb
mov
mov
es
bound
xchg
mov
xchg
mov
fstl
in
fldl
jne
dec
ret
dec
sbb
mov
mov
es
mov
mov
fldl
jne
dec
ret
dec
sbb
mov
mov
es
daa
popf
and
inc
aad
subl
loope
mov
push
push
fwait
adc
ljmp
fldl
jne
dec
in
mov
in
outsb
inc
js
aam
cmp
popf
daa
popf
and
inc
aad
subl
pop
adc
jb
sahf
fsubr
das
pop
jmp
jae
stc
gs
ja
and
xchg
movsb
int
cmp
js
sahf
fsubr
das
pop
jmp
popa
xor
int3
lret
cltd
adc
inc
stc
sbb
cmp
data16
aad
lock
cmp
push
cmp
rclb
in
fistps
inc
pop
mov
sbb
ffreep
cmpsl
lahf
pop
push
jns
ficompl
ds
pop
and
push
cmp
lods
outsl
ds
ffreep
test
fisttps
push
in
dec
mov
inc
dec
repz
neg
dec
cmp
data16
fsubs
ljmp
fists
jp
or
adc
std
push
xchg
cmp
cmpsl
scas
xor
shll
pop
ds
or
adcl
scas
cmp
pop
or
mov
cmp
orb
inc
jne
bound
mov
jb
aas
les
mov
lods
add
notb
imul
add
in
fists
in
fists
in
fists
in
fists
in
fists
in
fists
in
fists
in
mov
pop
cmp
lahf
dec
cmp
fists
in
fists
adc
push
cmp
fists
in
fists
in
jmp
aaa
in
fists
in
fists
in
fists
in
fists
in
test
mov
fs
sub
xchg
push
enter
jmp
push
push
pop
fsts
sbb
push
movsb
adc
xchg
popa
lea
push
ss
hlt
dec
xor
push
push
ja
inc
push
lcall
mov
test
xchg
popf
pop
jecxz
xchg
call
push
mov
or
push
sbb
mov
xor
push
imul
cld
ljmp
std
jns
mov
icebp
loop
dec
inc
ds
inc
or
jl
repnz
ja
adc
shll
sbb
pop
iret
mov
ljmp
jg
cld
add
xchg
xchg
std
ds
sub
leave
sub
mov
xchg
sbb
repz
inc
das
cwtl
rclb
or
lods
iret
sub
mov
insl
stos
inc
sub
sar
aaa
imul
and
inc
mov
sahf
pop
and
sub
xchg
xchg
push
repz
add
mov
repz
out
cmp
mov
daa
repz
loope
flds
shrb
pop
dec
sbb
nop
mov
insl
push
test
xchg
sbb
add
jmp
fnstenv
xor
mov
clc
pop
addr16
pop
inc
fwait
out
and
lret
pop
ljmp
adc
in
jnp
mov
mov
mov
sbbb
dec
lret
daa
add
sub
pop
mov
pop
sahf
addr16
push
push
in
mov
dec
ss
imul
in
ret
dec
fcomps
add
into
test
lods
lock
aaa
pushf
mov
fdivrl
xchg
push
clc
jge
mov
add
fiadds
sbb
lds
ret
andl
in
fadd
aaa
in
fucomip
aaa
in
ljmp
and
in
push
xchg
push
repz
outsl
mov
lock
mov
sahf
addr16
mov
iret
pop
sti
stos
rclb
cmp
sub
imul
fsubp
js
cmpl
es
loopne
shrb
push
push
fistpll
jecxz
int3
lret
call
mov
loopne
lock
xchg
fisttpll
in
ss
xor
or
pop
insl
cli
ret
fsubl
xor
sbb
pop
push
dec
jle,pt
adc
fsts
repnz
xchg
jbe
jae
jle
sbbb
xchg
repz
cmp
stos
in
and
jl
or
and
je
pop
sbb
aad
sub
lea
js
sarl
es
mov
lret
decb
and
add
add
add
pop
push
add
pop
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
pop
push
add
add
add
pop
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
xchg
jb
mov
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
mov
in
repnz
push
daa
es
inc
or
rolb
outsb
jno
loope
fucom
sti
in
orl
sub
mov
fs
jnp
hlt
outsb
or
repz
jns
inc
or
mov
push
cli
sarl
popa
push
shll
add
repz
test
push
mov
test
daa
pop
iret
adc
xor
cmp
std
mull
add
xchg
pop
pop
loop
insl
xchg
jge
cmpsl
icebp
sbb
fcoms
stos
lods
or
les
or
aaa
pop
adcl
fwait
nop
push
dec
mov
outsl
inc
dec
hlt
insb
dec
loope
inc
pop
xchg
nop
sbb
add
push
xor
loope
outsl
outsl
in
scas
aaa
pop
gs
jg
ret
xor
cmp
cmp
jbe
loop
insb
push
fdivs
in
inc
xchg
loopne
mov
frstor
dec
scas
xor
adc
and
and
mov
mov
mov
push
cmp
dec
mov
mov
fdivs
lods
lock
add
lahf
sbb
ljmp
fsubl
inc
mov
jae
lret
mov
fs
pop
gs
jle
or
lock
sub
pushf
stos
fisttpl
mov
xor
call
sbb
lods
push
imul
out
call
lcall
dec
mov
ja
test
xchg
fs
negb
fldenv
aaa
testl
mov
mov
leave
xchg
loope
pushf
xchg
dec
jle
mov
rclb
adc
and
sbb
dec
sbb
push
and
adc
jp
or
or
adcb
cmpsl
mov
push
popa
out
jecxz
orl
les
sbb
dec
popa
ficoms
movsb
sbb
mov
call
std
fsincos
cmp
les
pop
int3
cmp
sub
test
jbe
push
xor
popl
int3
cmp
inc
jmp
inc
out
cwtl
push
jg
test
jecxz
inc
jecxz
pop
adcl
mov
imul
stos
aam
es
out
jl
pop
sub
cmpsb
jno
popa
lods
adc
xchg
mul
neg
sub
mov
inc
and
push
xor
push
push
push
scas
and
aas
mov
and
xchg
or
js
pop
pop
out
int
cwtl
fdivs
add
xchg
imul
ds
cli
sub
call
push
call
dec
movsl
mov
cmc
inc
arpl
inc
push
mov
and
addb
mov
shll
sub
mov
lea
nopl
jecxz
mov
dec
gs
mov
dec
sub
pmaddwd
data16
inc
nopl
fsub
ja
jae
xchg
or
push
push
pusha
repz
cmpsl
mov
fidivl
sub
fdivrl
xlat
and
xor
sbb
add
imul
fbld
enter
filds
mov
imul
push
imul
pop
push
adc
add
sbb
test
jge
push
movsl
lahf
stos
out
push
ss
orl
sub
add
mov
push
inc
ljmp
enter
sub
in
adc
fwait
adc
fsubrl
clc
je
dec
test
in
stc
bound
mov
xchg
into
sbb
push
mov
push
shr
pop
fisubs
popf
dec
cmp
clc
mov
cmp
ret
mov
fwait
cmc
cmpsb
xchg
aam
xorl
mov
xor
push
mov
fsubs
inc
push
dec
icebp
push
mov
xchg
pop
hlt
pop
mov
ret
jmp
jae
call
push
add
enter
xlat
and
cmp
stos
int3
mov
stos
ror
sub
dec
mov
and
in
lods
pop
cld
repz
sub
xor
cmc
call
in
out
mov
popf
test
cmp
cmp
pop
les
mov
jl
scas
ret
and
pop
into
nop
out
mov
outsb
iret
mov
push
xchg
aad
aad
lss
pop
mov
insb
test
insb
push
fistpll
adc
mov
jmp
das
loop
xchg
and
cli
and
mov
sbb
sub
scas
sbb
dec
rcr
mov
in
aam
icebp
je
arpl
xchg
lock
inc
nop
in
aam
mov
fdivr
lea
call
cmp
call
push
xlat
negb
jo
xchg
mov
mov
xchg
mov
lods
sub
test
xor
mov
mov
adc
imul
cmc
xor
and
mov
arpl
stos
cmp
mov
aad
and
into
aas
rclb
and
mov
fs
lock
in
popf
or
inc
mov
rclb
adcl
push
out
clc
sbb
or
sub
xchg
push
xchg
push
es
push
fcom
shrl
jns
cmp
shll
repnz
cmp
mov
divb
in
pop
mov
mov
daa
pop
cmpsb
mov
pop
mov
jo
cmpsl
out
xor
cmp
stc
mov
xor
push
mov
std
inc
or
lret
ljmp
sbbl
stos
sub
jne
push
jge
fs
or
test
xchg
xor
push
mov
inc
mov
jnp
or
xchg
jo
push
aad
cmpsb
inc
fst
jmp
sbb
mov
dec
and
sub
pushf
push
cmp
mov
int3
xchg
ret
push
or
adc
or
lock
push
call
dec
cmp
dec
sbb
cmp
fstpt
jne
dec
pop
dec
lahf
inc
mov
jae
mov
mov
int3
aaa
fwait
mov
cmp
or
add
hlt
mov
cmp
jnp
pop
adc
cmp
insb
out
cmp
add
cmpb
xor
clc
fwait
push
scas
or
pop
push
dec
subb
and
mov
xchg
sti
xlat
and
mov
xchg
dec
or
mov
cwtl
flds
cmp
dec
nop
inc
jns
daa
mov
jl
or
sahf
push
xorb
push
pop
loop
mov
adc
push
sbb
sub
push
lods
mov
inc
shl
into
call
cltd
fidivrl
scas
aam
push
loop
xchg
jo
mov
lahf
pop
into
jns
hlt
inc
mov
out
mov
ret
mov
imul
in
mov
push
stos
stos
lcall
test
fsubrs
mov
xchg
cmp
je
jp
lcall
mov
fwait
sahf
adc
out
pop
stc
les
stc
xchg
xor
jp
gs
test
mov
mov
shrl
in
test
sbb
pop
test
sub
sahf
pop
orl
pop
lret
or
adc
movsl
sub
mov
mov
xor
add
dec
add
aad
jle
xchg
test
inc
jb
rcrl
sbb
jmp
stos
repnz
lret
xchg
fcoms
ss
pop
xor
sbb
dec
cmp
jl
push
and
or
xchg
adc
push
je
inc
cmc
in
inc
cli
arpl
fwait
sbb
pop
xchg
lds
and
test
daa
fnstenv
mov
push
jnp
rep
adc
push
mov
cmp
sub
dec
push
dec
and
rol
pop
insb
gs
cmp
icebp
sub
and
dec
and
xchg
cmp
sbbl
jb
and
loope
pusha
mov
xchg
or
das
movsb
jae
js
pop
xchg
in
jp
cmpl
pop
xor
std
inc
jno
or
mov
mov
scas
sbb
xchg
pop
mov
and
dec
divb
ljmp
stc
ja
scas
mov
sahf
cmp
lds
and
aaa
and
mov
jle
pop
out
call
jne
sbb
cwtl
cld
sub
xor
dec
pop
push
popa
ret
aam
push
mov
mov
mov
adc
insb
lods
xchg
jp
rcrl
test
mov
xchg
inc
inc
pop
inc
aas
and
loopne
stos
test
hlt
push
jg
das
faddl
movsb
sahf
sbb
or
les
dec
adc
sete
mov
mov
adc
fidivs
mov
ja
mov
lret
les
pop
dec
push
add
sbb
add
imul
fsubr
stos
ret
adc
sub
out
notb
fsts
loop
pop
mov
sub
jmp
test
call
xchg
mov
mov
lock
frstor
sub
std
mov
jb
push
aas
xchg
fcoml
or
movsl
mov
pop
nop
xor
cmpl
push
jne
dec
sub
adc
shll
pop
adc
popf
shll
add
xor
sub
je
inc
lahf
aaa
inc
xlat
daa
fistl
push
movsl
mov
xchg
push
add
cltd
push
or
pusha
and
insb
imul
pop
mov
aad
jp
push
jbe
repz
lods
xchg
clc
xor
or
adc
sub
andb
sbb
insb
xchg
add
popf
loop
jns
lock
add
int
mov
test
mov
sahf
mov
aas
and
shlb
push
adc
pop
mov
rclb
scas
int3
fwait
std
xor
loope
inc
daa
test
cwtl
xchg
cmp
mov
es
rorb
outsl
fdivs
mov
cmpsl
sub
in
push
add
inc
cmp
xlat
cmp
fcomps
cmp
jp
ret
mov
in
inc
test
lretw
sub
xchg
scas
dec
test
push
xor
fsubl
adc
jle
int3
xlat
lcall
sub
jno
sbb
cwtl
int
cmp
mov
mov
and
les
lret
iret
sbb
das
sub
sub
outsl
lods
jb
in
imul
pop
int3
dec
lahf
and
das
bsr
and
fiadds
cmp
or
or
test
sbbb
repz
or
inc
adc
sbb
test
push
add
or
rolb
imul
sub
mov
sub
imul
outsl
dec
adc
xor
push
mov
loope
inc
aas
add
adc
lods
pop
sub
sbb
inc
roll
lret
sub
or
in
movsb
js
lcall
add
aam
lods
scas
jmp
leave
adc
push
in
sub
push
jl
icebp
loope
mov
mov
xchg
dec
out
into
mov
push
insl
add
je
mov
fsubs
idivb
cmpsl
and
pop
mov
mov
ret
out
mov
std
fimull
mov
adc
inc
cmpsb
ss
fldcw
push
pop
and
mov
data16
loope
push
and
mov
test
mov
push
call
push
iret
and
movsb
mov
scas
imul
adcb
pop
inc
cmpsb
je
rcrl
bound
push
jg
out
test
sarl
pop
and
adc
pusha
sbb
pop
cmp
adc
pop
dec
inc
pop
and
mov
lret
sub
iret
inc
popf
rcll
mov
dec
rdpmc
xchg
lret
in
cmc
aaa
fidivs
movsl
pop
mov
xor
aaa
push
inc
mov
scas
add
mov
push
jns
push
sti
pop
mov
push
bound
sub
frstor
in
jg
ljmp
inc
lods
or
ret
rcll
jg
or
jle
mov
aad
enter
dec
jecxz
mov
xlat
and
jnp
dec
pop
arpl
push
add
lock
xchg
and
or
mov
adc
imul
mov
jmp
mov
push
loopne
std
divl
jns
inc
jp
mov
lods
stos
push
inc
test
loopne
aam
mov
clc
test
fs
enter
iret
aam
dec
andl
and
testb
jl
pusha
add
negb
outsb
sub
add
sbb
pop
sub
jbe
xchg
add
dec
js
push
sahf
sub
jecxz
or
sbb
outsl
add
fwait
test
cltd
and
sub
sbb
scas
in
mov
push
xor
mov
sarb
fistl
push
jnp
iret
pop
inc
and
cmp
inc
push
push
idivb
loop
mov
push
dec
pop
pop
pop
dec
pop
xor
push
pop
and
sub
das
mov
and
ss
aas
jne
add
mov
cmc
jno
shl
mov
mov
cwtl
pushl
je
pop
int3
and
sahf
jp
sbb
lock
roll
enter
xchg
int3
cli
mov
repnz
lret
push
mov
aaa
push
hlt
arpl
jae
and
dec
notl
push
rcrl
fldenv
fucomi
ss
dec
xor
add
sbb
faddl
xchg
cmpsb
pusha
fidivs
and
in
push
mov
das
cmp
aam
mov
call
mov
sahf
jae
sub
stc
xor
lahf
je
mov
push
fs
jp
pop
mov
mov
push
fdivp
ror
fdivs
adc
jbe
push
aad
aas
lods
xor
test
imul
bnd
inc
inc
jle
pop
fadds
lea
mov
es
pop
adc
fisubs
dec
les
ja
aad
sbb
xor
mov
pop
fnstcw
pop
in
xchg
movsb
stc
out
and
adc
and
push
scas
sahf
and
rcr
mov
addl
adc
out
in
ljmp
push
stos
mov
test
fidivrl
cmp
ret
xchg
cmp
scas
xchg
inc
sub
cwtl
sub
ds
lcall
outsl
mov
in
cmp
cltd
pop
push
stos
ja
iret
stc
scas
popa
push
mov
or
pushf
mov
out
push
lret
push
xor
ret
fists
push
pop
std
xchg
adc
pop
xor
pop
xchg
jae
lret
jmp
dec
jp
dec
sbb
out
mov
mov
xor
jbe
insl
mov
ljmp
fs
cld
push
sub
ror
dec
sub
xor
add
mov
shll
daa
stos
les
fstpt
addr16
test
push
ret
fdivrs
aaa
lahf
loopne
out
pop
push
lods
xchg
arpl
sbb
xor
jns
xchg
mov
sub
dec
addr16
out
enter
out
push
sbb
in
movl
shl
daa
sbb
fstpt
xor
sub
test
lahf
mov
std
add
xor
mov
add
sub
enter
imul
cmp
fildl
mov
icebp
data16
and
fldl2t
push
mov
or
outsl
add
js
int
stos
cmp
pop
stc
mov
sbb
into
ficompl
mov
jge
push
inc
and
cmp
into
push
shlb
cmp
mov
mov
test
mov
dec
fstl
popf
push
push
loopne
xor
or
sbb
jp
mov
sti
loope
mov
mov
jg
call
fimull
xor
std
sbb
jp
incb
aad
enter
push
fldt
sub
leave
sbb
add
and
out
xor
out
add
stc
outsb
in
add
pop
std
sbb
insl
xor
test
cltd
xor
addr16
ret
out
mov
xor
movsb
inc
adc
inc
mov
notb
xor
dec
hlt
jmp
icebp
mov
inc
loop
xor
imul
push
or
mov
fistl
xchg
jge
pop
inc
lret
sub
lret
add
mov
push
cmpsb
dec
shlb
andl
test
loop
test
cld
push
test
push
das
fwait
xchg
shl
adc
aam
lods
loop
test
test
and
adc
fisttps
dec
jo
outsb
cli
adc
ljmp
dec
cli
adc
push
inc
in
push
adc
call
xor
adc
out
or
and
add
clc
sbb
mov
sbb
int3
adc
xor
jecxz
repz
stos
int
push
dec
lea
dec
xlat
lock
leave
fwait
push
rcll
ljmp
insb
sub
popa
loop
ficoml
insl
pop
jge
lods
sahf
jl
mov
mov
notl
and
dec
filds
dec
fisubs
mov
add
inc
les
add
xchg
js
popf
pop
imul
cli
cmpl
mov
pushf
cmpsb
dec
or
fsubr
xor
in
stos
decl
jg
and
fidivrs
aas
jle
push
dec
sbb
push
jo
lret
outsl
xchg
adc
add
jns
mov
adc
add
insl
jbe
cmpsl
push
or
pop
ds
sub
sahf
push
pop
jg
xchg
jl
mov
cmp
adc
push
mov
mov
sarl
fwait
addb
popf
std
fcompl
sub
push
add
fsubl
push
pushl
adc
sbb
cmp
outsb
jne
popw
jo
add
pop
clc
outsb
dec
mov
sbb
xor
sub
in
mov
xchg
cmp
sub
lcall
cld
out
fiadds
mov
cli
aam
push
movsl
push
in
negb
sbb
popaw
xor
adc
out
mov
test
rclb
dec
jns
push
lock
push
xchg
sbb
mov
mov
jp
fmull
test
mov
and
lods
fbld
and
sbb
repz
clc
cmp
jo
test
subl
lahf
daa
xchg
dec
cmp
sbb
push
xchg
pop
in
divb
in
call
scas
je
sub
xlat
add
pop
xchg
fs
pop
jnp
sub
negl
or
lods
frstor
mov
pop
and
outsl
out
mov
lods
iret
outsb
fcomp
mov
hlt
jmp
aad
mov
pop
cmovg
mov
mov
fsts
data16
pop
lods
xor
push
ret
xlat
mov
jle
push
or
sbb
mov
xchg
cmp
dec
cmpb
push
dec
xor
dec
ljmp
outsb
mov
movsl
ret
sub
cs
mov
mov
roll
inc
pop
lods
jmp
jecxz
addr16
adc
cmc
js
or
aam
pop
sub
aas
push
bound
jnp
stos
mov
rol
pop
shll
jmp
push
daa
or
into
jno
jns
cmpsl
xor
fdivrl
mov
mov
ror
scas
inc
dec
fstl
and
mov
stc
xchg
lcall
repnz
lds
lahf
imulb
jle
cs
scas
pop
inc
ror
mov
and
and
ficomps
mov
imul
faddl
cmpsl
mov
pop
dec
inc
jbe
lods
xchg
gs
fisubl
pusha
fcoml
xchg
imul
pop
aaa
xor
fwait
daa
imul
ljmp
xchg
and
cmpsl
aas
xor
sbb
or
stos
out
fnstsw
sahf
cmp
xchg
and
xchg
out
jns
mov
mov
sbb
cmovb
ret
add
dec
icebp
xlat
push
sub
repz
cmc
sub
mov
popa
mov
pop
jecxz
std
push
sbb
out
mov
sbb
addr16
jl
cmp
gs
jp
or
and
jo
mov
cld
mov
mov
xchg
inc
fistl
inc
xlat
movsb
add
jb
xor
add
mov
popf
mov
and
mov
addl
movsb
fcmovnu
sub
mov
inc
push
in
jle
lods
imul
sub
cmp
push
inc
stos
sbb
loopne
sub
mov
or
outsb
cmpsl
std
aaa
rolb
push
mov
arpl
pusha
mov
inc
sahf
or
icebp
cmp
or
les
push
mov
or
sahf
pop
push
inc
icebp
enter
and
leave
jbe
sub
stos
and
xchg
mov
ljmp
mov
shll
into
aam
inc
dec
sub
ljmp
sbb
inc
xor
sbb
push
sub
jp
xor
cmp
popa
add
ret
pop
dec
inc
mov
xchg
xor
jo
mov
add
sti
mov
or
or
sub
pop
dec
jnp
mul
insl
imul
adc
sbb
mov
mov
sub
fs
mov
pop
insb
ss
mov
fldt
movsb
xor
loopne
gs
pop
nop
jp
push
and
ds
fcomps
add
pop
mov
repz
mov
clc
ljmp
sets
sub
js
inc
jae
fwait
adc
cmpl
add
xor
xchg
int3
sub
stos
fwait
cmp
mov
aam
ret
inc
fldcw
add
movl
sub
mov
cli
frstor
fildl
xchg
and
stos
cmp
sahf
outsl
imul
jge
lods
cmp
icebp
xor
adc
iret
and
mov
ret
mov
jnp
pop
xor
pop
stos
fisubrs
ret
mov
or
ljmp
sbb
push
cmp
push
pop
jbe
nop
cmpsb
enter
mov
fcoml
jo
adc
inc
outsb
fildll
decl
mull
mov
jmp
fwait
je
sub
mov
mov
add
xlat
jl
xchg
xchg
movsb
lret
inc
mov
mov
aad
inc
addr16
fadd
in
cmpsl
mov
loopne
jne
es
jmp
xor
fs
call
fisubs
cmpsb
in
lahf
scas
fisubs
adc
shl
mov
dec
adc
mov
dec
jno
imul
jb
adc
loope
xor
cmp
cmp
dec
pop
sub
movhps
inc
mov
cmp
dec
rol
pusha
push
in
add
les
adc
mov
adc
mov
mov
movsb
push
cmp
xor
mov
mov
ret
lcall
mov
or
idiv
movsb
inc
dec
sarl
jl
enter
ljmp
push
out
xor
push
add
lret
fisttpl
mov
lahf
test
sbb
sbbl
xlat
mov
inc
inc
mov
jno
call
pop
in
les
clc
sbb
stc
scas
jnp
and
in
daa
mov
scas
lret
push
fwait
test
mov
out
dec
inc
pop
cli
fistl
loopne
push
movsl
push
jbe
or
mov
and
loop
dec
mov
std
mov
aad
dec
aad
in
lcall
out
enter
dec
sarl
pop
jg
out
and
xchg
mov
in
loopne
or
pushf
lods
mov
mov
int3
dec
nop
cmp
je
iret
cld
adc
xor
adc
cld
shlb
shlb
or
cli
inc
aaa
stos
push
je
lret
insb
pop
mov
adc
repz
lea
loope
xor
shlb
jmp
xchg
movsl
popf
push
mov
xchg
mov
scas
push
loope
add
scas
mov
inc
jns
orl
imul
mov
cwtl
push
dec
leave
dec
pop
cmp
int3
mov
sub
pop
pop
rclb
movsl
inc
pop
rcl
xchg
cmpsl
mov
fisttpl
je
jnp
and
cmp
inc
ret
test
sbb
pop
ret
cmp
mov
or
mov
xor
jb
scas
pop
add
popa
xlat
int
push
sub
cwtl
fldl
sub
movsl
mov
rcrl
enter
mov
mov
mov
adc
adc
das
jge
cltd
xchg
jno
in
mov
int
iret
inc
jecxz
mov
pop
mov
sbb
daa
pusha
pop
insb
cmpsb
jns
add
sbb
lock
icebp
fwait
mov
xor
aaa
rcl
mov
fs
dec
mov
adc
or
lods
add
jecxz
pop
cmp
pop
push
sbb
mov
add
movsl
mov
mov
sti
lods
and
in
mov
pushf
loop
add
pop
pop
gs
sub
cmp
mov
jg
jg
scas
jle
and
js
dec
fcoms
mov
fimull
lock
sti
mov
push
test
inc
fidivl
cmpsb
gs
push
movsb
or
xchg
or
or
scas
xchg
mov
add
pop
pop
lods
movsl
or
push
mov
pop
les
stos
mov
jne
mov
mov
aas
popa
stc
jg
xchg
jns
add
mov
test
xchg
inc
fnstsw
das
idivb
aaa
std
mov
int
mov
sub
mov
scas
add
mov
pop
mov
sahf
scas
add
xlat
pop
mov
enter
xorl
clc
inc
ljmp
data16
adcl
dec
cmp
leave
fcomp
pop
or
and
pushw
leave
adc
push
sti
fldl
fcompl
push
mov
pop
sub
test
dec
mov
cmp
cld
sub
xor
inc
in
insl
fldcw
cli
inc
pop
icebp
mov
pusha
jne
sub
pop
adc
test
pop
ja
push
jl
insb
or
jae
dec
dec
fxch
dec
imul
cmpsl
test
push
adc
jae
sub
mov
adc
push
add
daa
inc
pop
cmp
gs
adc
cltd
dec
sub
inc
push
adc
mov
mov
popf
les
sub
mov
sti
lahf
aas
pop
mov
jmp
mov
or
fadd
inc
in
mov
cld
add
in
shll
push
ljmp
mov
ret
loopne
push
or
aad
cwtl
aam
pop
lds
sub
cs
xchg
push
pop
sbb
andl
sbb
ja
mov
orb
dec
data16
aaa
pop
lea
pop
fcoml
mov
dec
ficompl
ljmp
mov
imul
cmc
hlt
sub
mov
cmp
pop
cmp
hlt
and
cmp
lea
pop
or
mov
ret
adc
cs
js
adc
cmp
popa
sbb
xchg
xchg
in
sub
sub
sbb
inc
bound
or
or
mov
or
push
nop
leave
or
in
push
mov
mulb
cmc
or
fdivp
int3
shlb
adc
mov
jmp
mov
loope
es
fs
repz
dec
aad
and
jmp
add
dec
pop
mov
cs
movsl
lcall
clc
mov
sahf
dec
mov
inc
adc
push
jne
dec
fadds
xor
pop
pop
test
and
push
into
xor
lret
mov
imul
fwait
subb
addb
out
pushf
cli
fdivs
inc
aad
jb
call
aaa
imul
hlt
and
jo
lcall
out
lahf
sub
outsb
stos
push
rol
mov
fisubrs
out
pop
idiv
sti
enter
lret
stc
mov
insl
stos
in
xlat
mov
outsb
in
scas
dec
leave
jmp
lea
push
call
or
imul
jb
dec
jmp
jne
sbb
lcall
cmp
add
dec
dec
jbe
and
fistpl
mov
and
fadd
lods
add
and
imul
filds
add
scas
mov
inc
icebp
int
loop
pop
xor
imul
mov
inc
pop
lret
cwtl
pop
jmp
jnp
sti
mov
inc
sub
jae
jl
test
inc
sub
dec
cld
sbb
gs
add
cmpsl
inc
in
leave
mov
loope
loop
mov
in
xchg
lret
aad
adcl
scas
dec
and
cmp
xchg
notb
inc
inc
xchg
xchg
mov
hlt
daa
mov
clc
xor
xor
mov
ret
loop
filds
lds
sub
fisttpl
mov
shr
add
jl
push
js
cltd
das
aad
les
jmp
jne
int
mov
inc
cmp
mov
cmp
insb
mov
pushf
push
and
or
and
out
sub
test
je
out
dec
cmp
stos
jne
insb
sbb
cltd
divb
adc
pusha
inc
popa
test
jne
push
jmp
mov
repnz
aaa
incb
lock
mov
cmp
mov
cmpsb
and
andl
loop
xchg
loope
dec
das
jle
cmp
insb
xor
call
cltd
fimull
mov
jl
add
cli
lcall
lods
xchg
ds
pop
dec
inc
int
hlt
test
loope
add
sub
test
loopne
loopne
icebp
or
aaa
adc
dec
arpl
sub
push
shll
sub
call
lcall
inc
push
push
add
and
mov
pop
fnstcw
and
xchg
out
dec
or
sahf
test
add
sub
sub
add
pop
cmp
sbb
sbb
sbb
add
xor
rclb
push
add
mov
sub
stos
lret
loope
sar
cmpsb
or
mov
sub
mov
adc
and
lea
xchg
out
cmp
push
cmp
jns
mov
add
popa
test
sbb
int
mov
cs
jp
out
push
sahf
inc
jnp
push
gs
test
sbb
add
loope
imul
fs
stc
out
xchg
fsubp
adc
jbe
xor
inc
bound
nop
mov
jp
dec
xchg
jg
scas
pop
fisttps
out
cwtl
imul
sahf
bound
and
sub
inc
sti
xchg
testl
sbb
pop
je
inc
jns
cmp
cli
mov
mov
xor
mov
push
dec
mov
adc
js
mov
inc
loopne
shrb
aad
popf
aad
mov
fstps
pop
lret
insb
out
and
xchg
loop
xlat
insb
lret
testb
dec
push
stc
fsub
shll
sbb
lcall
in
lcall
cli
addr16
xchg
dec
or
pop
push
sbb
sahf
in
insb
aad
and
dec
aas
sbb
andb
lahf
ljmp
jmp
pop
xchg
adcl
mov
filds
rcrl
adc
push
icebp
movsb
push
ficoms
inc
fsubl
shl
es
xor
aad
pop
xor
push
outsb
clc
mov
mov
call
popf
adc
jecxz
fldz
lret
inc
rclb
jno
call
and
add
jecxz
jb
sarl
rol
inc
pop
setg
out
cld
pop
sti
or
movsl
and
push
fcmove
xchg
popa
shrl
pop
jo
ds
xor
data16
jmp
push
sub
pop
and
out
mov
adc
mov
popf
jbe
xchg
or
mov
mov
iret
push
addl
push
add
mov
pop
adc
mov
mov
mov
pop
mov
cs
xchg
sti
arpl
adc
movsb
stos
inc
dec
sub
int
pop
les
icebp
addl
jae
rcrb
repnz
lods
add
repz
jno
imul
inc
insb
or
dec
jl
mov
ficomps
fwait
inc
dec
mov
jmp
in
outsb
mov
out
mov
shl
test
fdivs
fwait
lods
outsl
sbb
sbb
outsl
mov
les
lods
call
aad
push
pop
lds
aas
or
in
es
imul
fiaddl
jmp
xchg
ljmp
es
call
ss
inc
ljmp
sub
mov
push
and
mov
mov
stos
lock
jecxz
lods
inc
dec
sbb
call
nop
pop
push
addr16
in
add
adc
testl
inc
ficoml
call
jl
subl
add
movsb
int
mov
lods
js
ret
bound
lahf
jno
dec
mov
rcll
ret
loopne
jnp
xorb
push
add
pushf
push
cmp
out
sahf
and
jae
pop
push
sub
add
outsb
dec
icebp
out
pop
jl
and
jnp
push
inc
roll
test
mov
test
dec
sbb
sbbb
cmp
bound
pusha
pop
shl
out
push
clc
mov
daa
and
cmp
jg
sub
aad
xor
ljmp
xchg
pop
push
das
out
push
cld
adc
mov
xchg
xchg
mov
loopne
nop
inc
or
enter
pusha
pop
dec
sub
adc
dec
ds
mov
or
popf
aam
ljmp
addl
pop
outsl
pop
xchg
faddl
xor
pop
inc
add
lods
xchg
adc
cld
add
or
cld
adc
lds
pop
xchg
push
aas
ja
push
cmpsl
sar
loope
loop
xchg
mov
test
xchg
insb
stos
mov
xor
jp
ja
jg
jnp
adc
push
add
xchg
dec
dec
ja
jl
std
addr16
imulb
sbb
or
ds
xchg
sti
add
lret
arpl
lods
sbb
ja
push
push
bnd
pop
adc
and
lods
push
in
roll
jl
mov
stos
push
pop
and
pop
dec
mov
xchg
es
lds
dec
cld
imul
push
xchg
fwait
shll
mov
cmp
inc
xchg
iret
and
push
xchg
int
ds
or
dec
dec
and
sti
leave
pop
or
push
pop
add
adc
sti
int
mov
or
scas
inc
mov
leave
sahf
int
and
sbb
jno
aad
sub
or
xchg
push
or
iret
xchg
mov
jae
clc
rorb
jp
add
rcrb
jne
dec
pop
jp
cmc
xor
mov
add
es
jl
inc
pop
cs
dec
movsl
push
add
insb
cli
xchg
sbb
decb
jle
pop
daa
test
outsl
dec
sub
imul
mov
jae
enter
add
js
or
mov
shr
add
inc
cmp
push
lods
sub
or
leave
xor
jbe
cmp
stc
out
call
jbe
xchg
xor
testl
sahf
cmpsl
stc
insl
imul
add
push
cmp
fiadds
and
into
ljmp
mov
cs
xlat
lahf
cmp
clc
mov
ret
lret
pop
in
xchg
aas
add
lret
dec
bound
cmp
dec
push
in
inc
mov
mov
sbb
int
lods
mov
imul
dec
leave
dec
sarb
out
repz
lea
div
mov
sbb
sbb
pop
or
pushf
data16
clc
mov
stos
mov
pop
in
out
lock
dec
loopne
arpl
clc
lahf
pop
mov
mov
cmp
lods
mov
xor
inc
aad
test
lods
rcrb
fadd
and
mov
xchg
cmp
pop
stos
lods
inc
nop
rolb
stc
cmp
aaa
mov
add
dec
push
icebp
adc
cmp
xchg
aad
ret
adc
scas
lahf
cmp
in
and
inc
int3
fmuls
xor
cmpsl
pop
sahf
adc
insb
jae
shl
dec
xor
lret
cs
cmp
insb
pushf
push
and
insl
push
outsb
leave
shlb
clc
sub
lock
subb
push
adc
sar
mov
jp
mov
lds
inc
xchg
stos
mov
fsts
or
cmp
xor
push
mov
mov
enter
out
gs
icebp
adc
les
inc
adc
push
cmp
mov
es
roll
arpl
mov
insb
aaa
xor
dec
and
inc
hlt
sub
enter
aad
adc
call
xchg
dec
mov
rclb
push
push
jnp
notb
push
dec
dec
jp
das
or
cld
in
loopne
mov
inc
jne
cmpsl
pop
dec
jmp
std
pop
pop
xchg
add
xor
dec
dec
xchg
jecxz
arpl
addl
mov
fcomps
sbbl
imul
movsb
lods
jbe
push
mov
cs
fstps
mov
jle
lcall
dec
ret
les
add
cmp
xchg
inc
sbb
incl
outsb
movsb
pop
push
mov
lods
sbb
std
dec
loopne
loop
pop
scas
mov
xor
cmp
pop
jecxz
pop
push
jg
xor
sub
out
xor
mov
jnp
stos
std
mov
arpl
jae
rolb
mov
std
jecxz
xchg
inc
rolb
sbb
jmp
mov
das
icebp
push
popa
jge
hlt
pop
xchg
lahf
mov
insl
xchg
jmp
inc
movsb
adc
test
cmp
mov
push
loop
sbb
ljmp
xchg
cmp
aas
push
adc
push
dec
xchg
packsswb
pop
rorl
fisubrl
and
test
rorb
sbb
mov
pop
mov
sar
pop
sub
es
push
mov
mov
pop
out
add
inc
dec
aas
dec
filds
mov
rcl
dec
call
insl
cmp
cs
push
test
jl
shrb
cmpsb
xchg
js
nop
pop
ret
ret
call
mov
xor
add
fsubs
xor
lods
xchg
movsb
out
and
inc
or
imul
out
insb
cmp
mov
push
push
pop
mov
aad
leave
push
jge
fwait
or
enter
xchg
test
dec
shrb
push
insl
sub
lock
lock
jecxz
decl
lahf
mov
cmp
test
push
rolb
daa
dec
imul
and
mov
push
or
dec
push
adc
sub
mov
cmc
and
or
mov
and
outsb
out
addr16
dec
adc
and
jge
pop
jno
and
dec
sub
cmc
shlb
incl
mov
ja
movsl
lea
xor
and
xchg
cmpsb
pop
jne
dec
sbb
hlt
js
push
add
in
or
xlat
ret
fs
add
addl
lods
lea
movsl
lret
push
inc
dec
pop
ret
push
aaa
adc
push
push
xor
push
cmpsb
xchg
mov
dec
cs
push
mov
dec
adc
jb
out
cli
and
mov
ds
int
gs
movsl
outsl
ja
mov
test
ds
outsb
pop
lock
cwtl
data16
imul
imul
adcl
ljmp
sub
ficompl
push
daa
fidivl
xchg
lock
test
test
push
push
add
mov
inc
rol
hlt
sahf
imul
and
aas
jnp
jl
cltd
popa
rorl
pop
loope
pop
add
jmp
sub
into
xor
sub
pop
outsl
inc
xor
out
daa
mov
add
push
mov
mov
add
add
in
cmpsl
in
popa
push
push
add
xchg
jp
popa
call
cmp
sub
cmp
sahf
or
mov
jns
rorl
hlt
inc
inc
mov
jp
js
mov
fsubrl
testl
ret
shr
lret
cmp
cmp
adc
mov
cmp
fcoms
fnstcw
mov
pop
enter
clc
xchg
shll
sbb
mov
sarl
pop
cmpl
outsl
mov
imul
push
xor
adc
xor
ret
sti
into
test
jns
mov
aam
cwtl
xor
in
lret
push
push
pop
jb
scas
add
jmp
dec
inc
sub
or
fcomip
cltd
mov
filds
xor
push
mov
and
outsl
mov
imul
cmp
mulb
test
jmp
jg
scas
in
lods
lcall
ret
data16
inc
aam
fistpll
stos
xor
cwtl
dec
das
ficoms
pop
push
mov
xor
shll
popf
mov
mov
jecxz
xchg
packssdw
loope
or
jnp
lcall
fwait
aad
jmp
cmp
pop
loope
mov
xor
and
cltd
mov
dec
push
mov
dec
push
push
sbb
mov
insb
insl
jb
add
movsb
cmp
sbb
mov
popa
push
jnp
arpl
sbbl
outsl
sbb
xchg
stos
and
push
dec
or
les
pop
bound
test
pop
popf
arpl
mov
or
repz
pop
popa
fstp
adcb
dec
bound
daa
mov
lods
mov
insl
popf
nop
pop
push
xor
pop
cltd
cs
loopne
test
xchg
insb
icebp
cmpsb
jmp
dec
outsl
inc
push
aaa
icebp
iret
sarl
mov
and
lahf
add
mov
pop
sbb
jg,pt
sub
loopne
push
cmc
sti
sub
mov
clc
movsl
pop
pop
mov
sub
xor
out
sbb
bnd
xchg
leave
stos
out
xor
aas
loopne
fs
push
jb
push
xchg
xor
out
fbstp
mov
adc
iret
je
cmp
int3
pop
sbbl
addr16
rcrl
lods
inc
push
in
pop
add
mov
xor
adc
int
inc
xchg
data16
std
jg
loop
hlt
sahf
xor
xor
cltd
leave
inc
adc
xlat
fistpll
icebp
aad
mov
mov
jae
icebp
push
mov
and
push
loope
xchg
scas
push
loop
cmc
cmc
push
test
cld
add
sbb
pop
inc
xlat
sbb
dec
repz
ret
or
es
cmp
bnd
cs
data16
rclb
repnz
jne
pop
jns
cmpsl
cltd
and
dec
or
pop
in
lahf
out
enter
cs
jo
arpl
push
push
dec
fmul
aam
lcall
inc
fs
pop
push
dec
jg
mov
shr
mov
adc
daa
popa
out
adc
and
or
ljmp
scas
mov
mov
outsb
mov
testb
sbb
rcl
imul
mov
adc
rorl
xchg
xchg
xlat
jmp
call
iret
je
jp
xor
lret
push
test
mov
mov
in
mov
inc
out
outsl
sbb
ljmpw
notl
sbb
mov
test
loop
fwait
inc
or
lds
xchg
lcall
mov
sbb
inc
sub
into
loop
mov
mov
jg
ss
mov
or
repnz
adc
andl
dec
cmpsb
stos
sbb
out
nop
stc
jle
sbb
cmp
aaa
or
hlt
sub
fisttpll
jb
es
hlt
or
jo
cwtl
jmp
inc
in
add
scas
pop
bound
fcompl
xchg
sub
pop
xor
jbe
jmp
shll
adcb
jo
dec
test
mov
cmp
push
push
sbb
jecxz
jae
adc
dec
cld
lock
xor
sub
out
jbe
jo
jne
sar
test
lret
sahf
test
and
dec
adc
sbb
xchg
mov
push
lfs
jns
sub
pop
mov
jge
insl
adc
mov
xchg
fcompl
rolb
jo
dec
sarl
rcrl
dec
sub
or
dec
pop
pop
std
popa
push
jmp
pop
and
in
cmp
push
adc
push
fwait
hlt
xchg
push
or
ret
imul
mov
ret
test
lea
in
adc
lods
inc
bound
fimuls
mov
fwait
or
xchg
outsb
out
adc
xchg
mov
cmp
iret
testb
cmp
daa
imul
stos
pop
enter
xchg
leave
int3
xchg
pop
mov
xchg
cmp
subl
stc
adc
test
add
aaa
imul
mov
jae
mov
ds
jb
inc
mov
cld
fdiv
add
xchg
pop
mov
mov
sub
out
in
adc
stos
mov
mov
mov
cmc
dec
pop
inc
shlb
push
xchg
jno
insb
into
mov
popa
cmpsl
arpl
xchg
pop
mov
nopl
test
addr16
add
insb
jg
adc
mov
out
addr16
xor
and
sbb
jno
rol
outsb
mov
cmpl
mov
pop
push
or
aas
jle,pt
mov
and
jno
inc
cmp
addr16
push
mov
mov
cmpsl
mov
pushf
jno
or
add
xchg
and
xchg
push
mov
retw
mov
sub
mov
mov
adc
lock
and
cmp
mov
mov
lods
sahf
ds
movsl
inc
bound
mov
or
dec
mov
test
mov
push
sub
icebp
cwtl
gs
cmc
hlt
or
pop
in
and
xlat
pop
dec
add
lds
or
mov
and
push
andl
xchg
xor
fisttpll
jno
mov
in
icebp
pop
and
or
cmc
cmp
mov
sub
repz
pop
fisubs
push
test
sbb
push
rcll
or
sub
stos
repz
lea
aaa
into
jecxz
dec
xchg
sbb
mov
mov
aas
dec
subl
mov
packsswb
push
push
notb
xor
scas
fwait
js
push
sarb
mov
mov
dec
incl
dec
fisubs
jg
notl
iret
xor
mov
mov
lret
sahf
adc
in
xor
push
cli
sub
rol
fs
or
mov
sahf
call
sbb
adc
mov
push
dec
loop
add
add
inc
add
sti
add
cmp
cs
shlb
and
notl
cs
pop
sub
aas
fdivr
xor
sbb
pop
jp
hlt
enter
cmp
lock
lea
pop
in
outsl
enter
mov
lret
rcrl
popf
adc
popa
loop
sub
xchg
ljmp
mov
add
push
repnz
popf
sub
sar
mov
or
gs
adc
lret
and
or
push
push
ret
fadd
in
jb
and
mull
out
sbbl
dec
mov
sbb
test
cmp
xchg
arpl
dec
lahf
xchg
in
loope
imul
dec
clc
jge
mov
pushf
sub
fnstcw
xor
adc
pop
mov
movsb
sub
cmp
xor
or
dec
in
jo
ja
movsl
imul
sub
hlt
inc
mov
add
repnz
cmp
cmp
and
pop
sahf
test
ds
and
cmp
inc
xor
rcl
nop
dec
in
jnp
cld
gs
clc
dec
pop
test
es
xor
dec
mov
rolb
add
or
je
clc
insb
xchg
push
jo
push
cld
call
sub
loope
pop
lahf
and
mov
cmpsb
adc
mov
aam
xor
in
ss
movsl
cmp
call
inc
in
insl
or
push
inc
sub
xchg
push
pop
pushf
ljmp
and
cs
icebp
and
mov
vunpcklps
pop
add
fs
clc
sbb
mov
jge
mov
sub
mov
fcomi
ds
adc
lock
lret
inc
dec
sarb
iret
mov
sarl
rorb
add
lock
mov
fsts
sub
mov
stos
int3
cmpsl
andb
lods
loope
cmovo
and
js
jmp
mov
fldt
lea
in
mov
mov
ds
xor
stc
popf
rorl
loope
inc
movsb
or
sbb
xchg
pop
cmc
cltd
sbb
xchg
add
jg
xor
test
sbb
cmp
inc
adc
fdivrl
clc
les
push
call
xchg
inc
shrb
orb
ss
ss
pop
popa
mov
jg
adc
imul
inc
test
xchg
and
ss
pop
cmp
jmp
orb
push
aad
xchg
add
mov
pop
xchg
stc
insl
ss
orl
push
mov
mov
iret
dec
cmp
push
fadd
xchg
int
test
daa
push
call
cmp
cmpsb
dec
and
push
adc
sbb
or
and
add
cmp
xchg
mov
mov
repz
xor
xchg
adc
clc
xor
js,pt
pop
mov
loopne
sti
cmpl
xor
pop
adc
adc
jno
mov
jg
jmp
sti
cmpsb
xchg
mov
out
jnp
jge
or
stc
popl
push
les
fstpl
jns
divl
jp
mov
xchg
inc
jge
adc
xchg
dec
andl
xor
and
mov
test
inc
rcl
xchg
movsb
pop
mov
inc
cmpsl
inc
nop
mov
stc
adc
mov
repnz
fst
bound
push
test
sarl
gs
jl
sub
dec
xchg
dec
hlt
iret
fwait
jne
sub
cmp
repz
lds
aad
and
pop
insl
fs
stos
jle
cmp
cmp
pop
xor
inc
mov
movsb
insb
push
aad
sahf
or
adc
loopne
ret
push
sbb
xchg
addb
ljmp
or
pop
xchg
mov
lock
mov
aaa
test
push
fwait
push
mov
stos
mov
fstpl
jmp
in
and
add
cmp
and
ss
mov
lock
iret
pop
jnp
call
or
lock
jae
xchg
test
sub
bound
mov
inc
jo
sub
pop
iret
and
aam
lods
or
push
es
mov
je
cmp
or
cmpsw
mov
adc
mov
std
shrd
lock
xchg
sahf
mov
add
cli
mov
mov
xor
jb
loope
add
mov
loope
cmc
and
jne
dec
out
popa
mov
jl
pop
fldenv
sarl
push
movsl
in
mov
cli
and
mov
mov
add
add
stos
xchg
sti
push
xchg
jo
jns
push
xor
xchg
int
mov
lock
jl
out
data16
mov
jbe
lcall
sti
and
jg
testl
mov
mov
outsb
cmp
rcr
jmp
pop
jge
mov
mov
mov
.byte
