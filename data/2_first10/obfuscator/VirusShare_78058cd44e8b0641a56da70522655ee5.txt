push
call
ret
ret
pop
inc
aam
fbld
jae
aad
mov
push
mov
pop
int3
clc
xor
clc
add
pop
sbb
leave
clc
sbb
addw
iret
cs
inc
mov
adcb
cltd
xchg
dec
repz
dec
and
or
cmp
mov
scas
pop
mov
pop
sbb
mov
add
lea
popf
cmp
in
inc
and
imul
jae
rcrb
inc
push
test
mov
bound
lea
mov
mov
push
mov
das
dec
jg
fdivrp
pop
cwtl
sub
sbb
shrb
mov
scas
cld
imul
and
cltd
out
sub
mov
dec
popa
movsl
xor
sub
add
shl
ljmp
repz
out
jle
popa
jnp
mov
lock
repnz
jbe
pushf
pop
adc
mov
ror
popa
fistl
movsb
push
mov
cld
lea
ffreep
rcrb
fcom
rcrl
icebp
stos
inc
xchg
icebp
push
dec
mov
jmp
daa
add
popf
sub
int
popa
rclb
ljmp
pop
incl
cmp
xor
xchg
pusha
cmc
test
hlt
ljmp
sbb
lods
inc
mov
jns
imul
mov
aad
inc
aas
lret
lahf
addr16
pop
outsl
fists
ja
jecxz
xchg
cli
pop
mov
insb
inc
cmc
or
inc
or
lahf
cmpb
aad
add
lcall
incl
or
rcl
rorl
js
push
mov
sbb
repnz
cmp
psllq
dec
push
adc
adcb
pop
cmp
ljmp
jo
notl
leave
testb
xchg
mov
shrl
inc
push
iret
in
pop
xchg
add
xchg
dec
mov
sahf
add
fidivl
es
dec
rcrb
inc
mulb
cmp
nop
xlat
mov
cmpsl
stc
lock
int
push
jle
addr16
pop
fcoml
push
div
movlhps
push
push
adc
inc
jp
mov
inc
test
xchg
jp
sub
adc
push
mov
and
sub
movl
push
ljmp
lods
sbb
xchg
sbb
cmp
in
popf
js
je
pop
mov
push
mulb
jns
and
ret
sbb
sub
fwait
mov
aad
xchg
mov
aaa
je
pusha
repnz
outsl
jge
and
daa
fnstsw
dec
mov
shrl
jnp
arpl
into
xor
inc
jmp
sbb
clc
fdivl
push
arpl
mov
fadd
sub
lods
push
inc
pop
out
icebp
loop
add
and
mov
ja
stc
pop
inc
or
ret
fisubrl
orb
imul
notl
sbb
ror
xchg
nop
dec
call
xor
popa
leave
jmp
into
dec
mov
jb
popa
pavgw
jnp
orl
shll
add
popl
xchg
mov
adcl
adc
pop
popf
rolb
mov
lret
jb
jb
lcall
adc
insl
push
mov
aaa
movl
pop
in
jne
test
icebp
ret
sbb
loop
popa
cmp
mov
adc
xchg
inc
cld
cmp
dec
js
jnp
lret
sahf
out
imul
xchg
outsb
inc
faddp
pop
pusha
test
sahf
inc
inc
add
jge
add
jmp
mov
rcll
sbb
adc
mov
push
gs
cmc
pop
out
movsl
jno
adc
sbb
test
xor
or
pop
rep
pop
cmp
xchg
xchg
dec
mov
lcall
div
in
jno
or
push
xlat
fdivs
popa
test
jnp
push
sarb
fstpt
sbb
loop
int3
insb
inc
bound
cli
push
js
mov
cli
daa
or
xor
lods
cltd
ljmp
ja
jnp
xchg
mov
test
nop
clc
hlt
xor
sbb
sbb
dec
sti
and
add
ret
or
sub
sub
push
sub
add
lahf
xor
push
stc
pusha
xor
out
add
xchg
imul
mov
sub
xor
ret
aaa
or
adc
ffree
jne
out
jo
push
outsb
jecxz
pop
popf
sub
pushf
jle
imul
dec
and
xchg
fwait
pop
repnz
fisubs
jg
lret
mov
jne
sbb
or
mov
jns
xchg
icebp
out
mov
inc
insl
cmp
imul
add
into
push
ret
gs
movsb
cmp
and
sub
lahf
mov
cli
push
push
push
dec
jmp
mov
or
adc
ret
cmp
icebp
pop
outsb
mov
push
add
movsb
push
imul
sbb
cltd
pop
sysret
fs
int
xchg
mov
xor
je
xchg
lods
fld
fwait
mov
aad
inc
je
push
mov
mov
adc
fwait
lret
xchg
push
pop
ljmp
dec
add
js
push
aad
or
dec
mov
cli
ss
in
mov
int
jmp
insl
pop
cmp
jno
icebp
nop
mov
aad
cmp
xchg
stos
adc
jmp
outsb
enter
rorb
sub
and
fwait
xchg
pop
mov
add
dec
das
fisttps
repnz
shlb
and
shr
dec
push
mov
xor
fadd
data16
fs
cli
fists
loop
imul
daa
cltd
xchg
push
xlat
sbb
mov
movsl
std
sahf
ja
lcall
cltd
dec
je
fisttpll
add
add
daa
or
sbb
jnp
push
add
sbb
sbb
fs
jnp
jmp
call
shl
movsb
cmpsl
in
xor
test
jne
mov
in
test
shlb
mov
sahf
dec
pop
stos
cs
jmp
je
ljmp
jg
push
sbbb
xchg
rol
sub
lea
adc
or
lahf
mov
enter
mull
mov
push
mov
sub
leave
loope
push
in
notl
mov
nop
iret
repz
mov
sbb
dec
lock
aaa
cmp
cmp
imul
lret
aas
push
sbb
movsl
mov
inc
push
or
lods
sbb
push
cli
jl
cwtl
mov
insb
sub
mov
imul
data16
faddl
lret
scas
imul
jge
movsb
cmp
bound
jecxz
adc
jbe
mov
xlat
dec
and
jne
lea
pop
dec
je
inc
sub
push
mov
cmc
mov
xor
sub
mov
notl
pushf
arpl
add
es
pop
ja
mov
in
sbb
loop
es
lock
pop
push
leave
gs
push
fimuls
pop
stos
dec
idivb
cld
push
rcl
repnz
repz
pushf
das
pop
dec
push
push
and
mov
js
and
sbb
add
inc
fidivrs
mov
add
jns
mov
lds
lahf
mov
in
mov
jmp
mov
test
dec
lods
xchg
mov
testb
jno,pn
xchg
xor
stc
repnz
rcl
lret
dec
xor
jge
add
pop
ret
sub
jecxz
aaa
xor
in
cmp
rolb
pushf
mov
out
pop
and
jns
mov
adc
scas
hlt
dec
pop
loope
fs
or
dec
fists
pop
cmp
xor
cld
xchg
add
push
cli
loopne
or
jmp
pushf
add
or
dec
or
les
std
or
das
pop
subb
out
scas
push
lcall
cs
mov
cwtl
fisubl
fwait
mov
inc
and
leave
fwait
push
int
std
sbb
cli
fcom
push
dec
xchg
or
add
cmpsb
jne
mov
insb
stos
or
scas
psubw
xchg
pop
in
aaa
in
pusha
cld
dec
rcll
sbbb
leave
adc
add
cwtl
dec
adc
sbb
or
mov
xchg
hlt
arpl
sub
in
fmul
lret
inc
add
xlat
mov
fmull
xor
lea
add
cmpsb
fwait
mov
sbb
out
sbbl
insl
add
outsl
push
sub
test
inc
sbbb
movsb
inc
stos
leave
rcrl
xor
mov
movsl
xor
sub
add
mov
push
lahf
repz
shrl
cltd
inc
lock
lcall
pop
xor
js
bound
aam
addl
arpl
stos
sbb
xlat
jne
cmp
lret
cltd
mov
cmpsb
into
ret
add
arpl
pop
mov
rorl
xor
out
mov
sbb
leave
dec
rcrl
pusha
cmp
mov
jecxz
in
dec
jl
mov
inc
aam
adc
aas
ljmp
cmp
pop
ret
mov
or
sahf
cmp
dec
adc
out
leave
arpl
in
cli
test
aam
cmc
and
or
cmc
lods
pop
push
add
xor
adc
and
push
outsl
test
adc
arpl
scas
inc
lods
cwtl
pop
push
jns
or
mov
fisttpll
repnz
push
repz
jecxz
adc
mov
repnz
inc
adc
hlt
xorb
mov
int
loop
adc
mov
loop
insl
adc
cmp
pop
rcrb
jle
iret
ljmp
mov
je
cmpsb
push
xchg
mov
cmp
data16
dec
imul
jnp
xchg
les
insb
inc
inc
mov
xchg
sbb
dec
test
les
push
and
arpl
sbb
pop
popl
push
imul
or
fstps
int
loopne
add
sbb
mul
xchg
mov
popa
outsl
xchg
mov
pop
jmp
pop
jno
jle
pusha
mov
ss
fnstsw
in
cmc
sub
and
add
loopne
and
push
insb
ds
fs
rorl
movsl
mov
xlat
lahf
insl
ja
push
daa
in
push
xchg
gs
std
add
lea
lock
imul
add
mov
add
mov
xchg
leave
xchg
aaa
jae
dec
push
orl
sbb
std
push
push
clc
add
cmp
pop
push
sub
or
ja
dec
inc
out
jl
mov
es
stos
insb
decb
cmp
scas
pop
xorb
scas
movsl
mov
loopne
jae
fstpt
xchg
movzwl
jo
ljmp
jp
out
jge
xor
sbb
lds
or
cld
mov
movsb
push
cmp
lods
mov
in
xchg
xchg
in
push
pop
lods
arpl
mov
mov
std
pusha
dec
ret
pop
in
xor
xor
in
inc
and
push
mov
js
rep
sarb
stos
and
imul
addr16
aam
mov
repz
ljmp
xchg
push
enter
and
fbstp
and
sub
dec
cmp
mov
mov
push
sbb
push
lds
sub
and
dec
sub
andb
fsub
mov
jl
xor
and
cmp
iret
in
cwtl
add
icebp
xor
mov
jb
in
push
cltd
mov
xchg
insb
and
aad
cmp
data16
ret
sub
cmp
aad
rolb
sub
jbe
xchg
mov
cmp
and
fnstsw
in
loope
inc
mov
mov
divb
outsl
pop
dec
int3
xchg
adc
and
cli
xor
repz
mov
jne
ds
fmull
xchg
sub
lods
xchg
test
mov
mov
pop
notl
adc
jo
mov
cmp
andl
xchg
out
dec
iret
pop
add
and
adc
xchg
outsb
in
jne
fists
int3
insl
repnz
fst
arpl
test
call
jmp
dec
roll
movsb
add
lahf
imul
rcrb
fstps
mov
out
push
fwait
out
pushf
lods
dec
fisubs
stos
movb
dec
aas
icebp
daa
sub
pop
xor
movzbl
mov
ret
and
jnp
mov
xchg
and
jnp
stos
ret
lods
sahf
insl
cmp
call
mov
push
iret
xlat
lods
clc
jns
jo
cs
je
cmpsb
std
dec
and
lea
sar
jne
mov
fistpll
test
insb
insl
xorb
test
cmpl
loopne
push
ds
bnd
int3
outsb
or
dec
add
sub
fcoml
leave
add
mov
sarl
outsl
sbb
pushf
sub
pop
xor
dec
shlb
arpl
fsubp
add
stc
enter
cmpsb
xchg
outsb
rcrb
daa
loopne
bound
xchg
mov
aam
cmpsl
cmp
repz
add
icebp
push
xchg
sub
xchg
stc
dec
mov
aad
mov
call
sbb
icebp
add
stos
dec
push
fidivl
call
cli
inc
int
mov
inc
mov
xor
js
jp
mov
in
into
ljmp
test
shll
jle
ret
in
sbb
mov
fimull
decl
mov
push
adc
in
test
mov
mov
rcrl
jae
out
dec
dec
or
fsubs
aam
andl
jb
mov
inc
lret
sbb
or
and
leave
xchg
fwait
and
inc
aaa
and
inc
andl
rclb
mov
mov
fs
enter
xchg
or
inc
push
xchg
adc
in
xor
nop
stos
fmull
push
rolb
sub
inc
push
repz
mov
or
jo,pt
push
xor
inc
insb
in
fidivrl
mov
cmp
daa
loopne
sbbb
push
lods
inc
mov
sbb
mov
lret
fwait
lods
pop
mov
xchg
rcrb
pop
inc
pop
cmp
fbstp
xchg
mov
pop
iret
mov
imul
mov
loop
mov
push
insb
mov
push
pushf
jg
hlt
sbb
bound
movsb
pop
out
sbb
sbb
fdivp
shrb
popf
jno
negl
pop
push
xor
dec
dec
push
fisubrs
mov
mov
pcmpgtd
cmp
mov
insb
pop
fadds
sbb
mov
cmp
lahf
insl
mov
or
rdtsc
fcmovb
mov
loopne
add
xor
cmpsl
xor
cmp
inc
mov
sub
mov
jecxz
shll
or
xor
test
mov
mov
xchg
loop
mov
or
inc
cli
and
xchg
scas
sub
call
xor
aaa
gs
sbb
adc
inc
das
out
lret
aam
add
add
mov
pop
jg
push
push
push
mov
decb
cmpsb
int3
jmp
sahf
xchg
out
jle
sbb
sub
mov
and
pop
push
fnstsw
push
sbb
sbb
or
inc
sub
mov
pop
jno
xor
mov
and
int3
sbb
mov
call
cmp
mov
scas
add
or
add
in
imul
jbe
xchg
lods
sub
mov
pop
lret
movsl
push
push
iret
jae
lods
in
xor
fidivrl
sbb
cmc
ficoml
xchg
xor
hlt
adcl
mov
xchg
fsubrs
andl
push
cmp
hlt
aam
sub
lds
and
add
shl
clc
jecxz
pop
sub
add
xor
insb
or
cmp
sahf
in
shlb
xchg
adc
and
add
scas
js
inc
xor
and
or
call
sub
out
stos
orl
addr16
add
or
shrl
lods
sbb
add
lret
or
shlb
scas
add
scas
jae
mov
and
lock
dec
pop
adc
adc
sahf
xor
pop
cli
sub
push
sahf
adc
decb
pop
mov
jp
add
xchg
fimull
xor
repnz
aaa
je
inc
clc
push
sbb
rcll
in
mov
enter
push
cwtl
mov
fwait
outsb
jmp
sub
inc
aaa
pop
cmp
pop
test
aas
scas
rcr
cmp
and
mov
ja
inc
cmp
pop
and
and
dec
cld
insb
cld
hlt
gs
cmp
inc
pusha
lds
push
xor
popa
push
jbe
mov
jo
dec
mov
or
dec
inc
fs
icebp
stos
push
ret
cmpb
mov
dec
add
adc
jbe
xor
lcall
addb
addr16
add
jl
and
iret
ffreep
out
pop
mov
shl
pop
ja
aad
pop
jmp
adc
sti
cmc
push
jge
xorb
dec
jmp
aad
jmp
mov
mov
addr16
test
aas
add
add
jns
in
xlat
cmc
data16
sub
out
mov
scas
cltd
adc
sahf
gs
adc
lret
adc
and
outsb
cmp
sahf
mull
lds
shlb
data16
inc
xor
push
pop
cmp
jmp
mov
jno
cmp
push
cmp
pop
rorb
inc
andl
adc
and
faddl
mov
jecxz
test
lea
sub
jecxz
cli
sub
mov
rorl
sub
mov
aam
xchg
arpl
mov
ror
jl
adc
mov
push
popf
mov
fs
int
mov
addr16
nop
adc
loopne
jno
mov
jg
or
in
movups
xchg
push
bnd
movsl
push
fidivl
mov
inc
cmp
ljmp
jle
movsl
push
addr16
rcl
cwtl
jnp
adc
fcmovnu
pop
sub
add
testb
dec
cmp
loop
inc
xor
les
insl
mov
out
mov
into
ret
mov
cmc
dec
sub
add
testl
nop
and
adc
inc
jp
sahf
jmp
fwait
mov
std
dec
repz
jp
call
stc
and
shrb
sub
inc
loope
adc
jno
test
sbb
dec
xor
push
or
pop
add
mov
or
mov
fildll
test
es
mov
mov
pop
hlt
mov
lcall
xor
out
lcall
cmp
aad
aaa
add
adc
dec
sahf
pop
out
cmp
inc
lahf
ficoms
xchg
imul
pop
outsl
or
popf
sub
bound
dec
jns
pop
or
scas
dec
xchg
fadd
adc
jl
in
mov
jecxz,pn
call
sub
enter
jnp
push
xchg
bound
outsb
addr16
cmp
call
pop
inc
clc
jp
loope
adc
lahf
je
mov
shlb
in
mov
jg
pop
scas
sbb
cli
xor
ret
fldcw
cli
mov
cmp
mov
das
mov
sub
imul
dec
in
adc
xchg
imul
mov
dec
repz
ret
dec
cmp
add
stos
shrb
repnz
mov
sti
lds
inc
fs
stc
aam
mov
xorb
xchg
mov
mov
fstl
jle
jae
lcall
or
js
dec
lret
mov
sbbb
xchg
fcom
xor
scas
faddl
xorl
sbb
push
jl
push
nop
mov
addl
sub
ja
sbb
mov
aam
sub
and
push
push
jo
in
shrl
add
int
jnp
out
es
out
lea
sub
xor
loop
aas
jge
movsl
cwtl
add
lahf
jle
dec
jo
imul
jb
and
je
and
and
aas
jmp
xlat
add
test
and
dec
adc
mov
inc
les
adc
pop
stos
adc
adc
cmpsl
xor
shrb
adc
fldl
and
sbb
jmp
mov
cmp
gs
fmuls
jb
or
push
sub
push
inc
rcr
into
cmp
jge
jbe
inc
loop
lods
in
jne
mov
pop
sub
mov
inc
mov
dec
push
cltd
dec
fidivrs
js
mov
mov
outsb
repz
cmp
and
psrlw
xchg
xchg
xor
imul
fildl
hlt
bound
outsl
jecxz
cmc
rorl
pop
insl
xor
loopne
outsb
aad
lahf
ja
loop
push
aad
mov
push
negb
lea
xchg
jg
es
sbb
les
mov
mov
leave
fsubl
xchg
and
inc
ss
sbb
sbb
push
inc
dec
fisttpl
pop
mov
cli
jne
negl
xor
movsl
dec
dec
loop
mov
cmp
out
loope
movsb
inc
fildl
call
xchg
out
and
mov
xchg
jecxz
ret
add
and
adc
mov
adc
and
push
cmp
mov
push
jmp
ror
push
adc
loopne
push
rorl
and
js
rclb
xchg
mov
push
add
mov
cwtl
xchg
mov
cmpsb
scas
sarl
aaa
outsl
popf
add
sub
mov
cli
outsb
mov
adc
ds
push
inc
xchg
inc
mov
insl
dec
xor
ret
data16
out
xor
adc
xchg
dec
cmp
or
dec
mov
mov
add
fistpll
cwtl
xor
rol
mov
callw
int3
inc
mov
test
pushf
icebp
and
in
mov
jmp
shl
lcall
mov
cmc
sub
fcom
dec
inc
jno
sti
ret
jo
adcl
cmp
xor
ucomiss
jmp
fstl
mov
xor
xchg
cmpsl
inc
cwtl
add
inc
bnd
test
aas
ljmp
cmc
xor
loopne
dec
in
lock
mov
dec
clc
mov
xor
neg
sbb
cmp
in
xor
jnp
cltd
mov
cltd
rclb
push
shr
push
les
jecxz
xchg
cmp
pop
sbb
mov
lock
lcall
je
outsb
test
push
mov
fwait
aas
push
xor
mov
popf
rorl
mov
or
dec
jne
cmp
xor
push
adc
sub
rcrl
das
fs
call
xchg
cwtl
lock
mov
dec
js
push
add
dec
dec
dec
jmp
add
xor
adcl
push
add
sbb
mov
jne
std
int
out
popa
loope
in
inc
adc
lahf
into
imul
mov
jmp
jns
adc
lods
push
sbb
mov
xor
sub
sbb
cmp
cmp
test
adc
push
lahf
mov
mov
jne
lods
sub
jmp
outsb
insb
add
cld
negb
jp,pt
lock
addr16
mov
fidivrl
add
mov
and
mov
test
shll
jmp
ret
sub
or
insb
or
jae
int
xchg
lds
inc
push
adc
adc
ds
push
mov
cmpsb
sub
das
ljmp
or
leave
cmp
addr16
dec
sbb
sub
into
push
inc
mov
daa
or
mov
xor
loop
mov
jmp
adc
push
pop
push
push
adc
mov
dec
or
lcall
cmp
loope
add
loope
mov
xchg
sbb
sub
int3
inc
shll
cld
mov
imul
sub
scas
leave
mov
arpl
add
push
xor
rcl
or
rolb
xlat
je
pop
clc
cltd
push
push
fcmovbe
mov
scas
cld
xor
xchg
in
lret
cmp
fadds
adc
fisubrl
inc
test
cmpsl
scas
fcmovu
adc
mov
lret
xchg
mov
std
inc
in
mov
lock
scas
xchg
mov
mov
add
popf
mov
out
xchg
adc
pop
je
push
inc
mov
jp
sbb
sbbb
push
add
sti
adc
push
imul
div
lcall
xchg
sbbl
enter
enter
mov
pushf
and
pop
xchg
cmp
xlat
in
jae
jbe
mov
rcll
add
xor
xor
iret
push
inc
into
cmp
jno
mov
int
dec
adc
int3
mov
add
je
js
cwtl
or
dec
and
imul
jnp
loop
push
lea
adcl
lods
push
cmp
cwtl
xchg
cmp
lgdtl
fsts
add
dec
push
xor
stos
push
loope
jbe
mov
add
ret
hlt
dec
push
movsl
daa
push
scas
and
rol
fs
lea
inc
pop
or
out
xchg
push
add
xor
enter
scas
mov
iret
inc
shr
dec
mov
cwtl
xchg
xchg
daa
sbb
xchg
mov
lret
lcall
je
inc
sbb
add
aaa
xchg
xchg
out
fld1
xor
pop
mov
stos
imul
cli
ret
push
fsubrl
testl
dec
fldl
mov
cmp
sarb
stos
cmpsl
orl
xchg
and
loope
jle
jnp
push
inc
or
and
xchg
rclb
in
ret
dec
add
insl
fsubs
dec
pop
or
xor
movsb
add
adc
rolb
xor
xchg
jne
aaa
pusha
cmp
xchg
adc
iret
cld
add
jmp
imul
imul
fsubr
cmpsb
aad
aas
cmp
inc
rcrb
aam
leave
mov
mov
ret
xchg
inc
xchg
jp
insb
insl
xor
out
fwait
in
sub
ljmp
mov
push
int
sbb
in
jo
mov
mov
pop
aad
lea
or
and
sub
imul
mov
loop
shlb
lods
sbb
push
icebp
mov
ja
fucomip
scas
xchg
ljmp
mov
fistl
dec
add
push
cmp
sbb
sub
insb
sub
pop
or
adc
outsl
jbe
adc
pushf
testl
insb
bound
xchg
shrb
stos
cmp
bound
movsl
cmp
fisttpl
cmp
cmc
xchg
pushf
ret
push
add
mov
mov
cmp
sbb
imul
xchg
or
cmpsl
push
fisttps
lret
mov
shl
data16
adc
dec
cmp
lret
xchg
mov
js
divb
enter
ljmp
pushw
mov
pop
jbe
inc
out
push
and
mov
inc
cmp
jbe
dec
lea
xchg
data16
xchg
sub
jl
dec
fstl
pop
xor
imul
jns
adc
mov
push
xchg
je
dec
fisubrs
mov
lock
cmp
in
notl
dec
cld
cld
call
and
cmpsb
cli
and
or
jl
pop
jbe
mov
push
cld
xchg
rorb
cmp
sub
ljmp
je
mov
loope
fucompp
sub
call
nop
pop
jbe
cmp
push
ss
int
mov
cli
jb
jp
inc
push
out
in
adc
decb
in
rcll
pop
xorl
fcoms
or
add
jp
pop
cmp
loop
xchg
push
mov
je
mov
xor
pop
popf
shrl
lcall
and
xchg
imul
jge
or
sbb
les
xchg
inc
cli
jmp
mov
dec
popa
scas
push
fs
cmp
dec
jns
cmc
add
adc
clc
or
outsl
mov
sahf
push
adc
jl
and
push
jl
and
xchg
fistl
xor
or
xlat
mov
dec
inc
push
dec
add
or
test
dec
out
imul
iret
push
mov
rcr
mov
insl
add
push
mov
cli
xchg
cmp
outsl
sbb
idivb
sbb
sti
daa
mov
fwait
pop
in
dec
int
ljmp
leave
sub
je
mov
jge
cmc
mov
out
inc
cltd
mov
mov
mov
add
sbb
dec
dec
rclb
popf
mov
xchg
lahf
aaa
and
popa
push
cmp
jnp
cmc
jge
ret
mov
cmc
dec
push
jge
loopne
sub
hlt
mov
dec
jns
cli
fsub
aam
mov
cmc
ret
dec
bsf
push
xchg
jl
ret
int3
dec
push
or
jno
pop
mov
jne
adc
inc
aam
movsb
xor
xor
icebp
sub
sub
jnp
mov
cltd
jns
dec
lods
out
xorl
js
int
adcb
not
mov
mov
icebp
es
and
imul
fcoms
or
adc
loope
and
sbb
sbb
cmp
mov
cmp
enter
aam
loop
jl
xor
pop
je
enter
mov
push
je
sub
lds
lea
cmc
mov
pop
ljmp
aas
aad
fxch
sub
testb
mov
jmp
std
mov
arpl
dec
insb
scas
popf
fidivs
add
pop
adc
pop
xchg
repz
jle
inc
dec
int
mov
std
dec
cmpsb
gs
ds
sbb
dec
mov
out
sub
sbb
xchg
push
roll
jae
mov
cmpsb
jo
mov
mov
test
cmc
push
bound
outsl
outsb
leave
imul
lea
bnd
popf
outsl
imul
mov
lds
sbb
rcr
sarl
call
roll
xchg
frstor
mov
aas
jge
jp
or
adc
inc
xchg
jmp
bound
jb
jae
mov
imul
shlb
xchg
rcll
sbb
xchg
andb
add
frstor
test
in
pop
icebp
xchg
mov
adc
shll
loop
lds
lds
in
inc
push
fidivrl
int
push
cmp
cmpsb
push
gs
pop
mov
iret
or
adc
in
push
inc
jns
mov
loope
jecxz
shlb
fwait
out
mov
iret
xor
int3
fnsave
fmull
inc
push
cmp
mov
dec
orb
outsl
adc
inc
pop
push
or
clc
outsl
jae
fdiv
mov
repnz
rorb
xlat
pop
mov
enter
add
hlt
aad
dec
sbb
jp
xchg
xchg
cmp
jmp
inc
test
or
jmp
movsl
add
sbb
push
xor
sub
or
add
sub
in
jp
stos
jl
divb
repz
arpl
jns
adc
sbb
mov
xor
inc
xchg
jnp
mov
es
add
f2xm1
iret
adc
out
mov
nop
xchg
cmp
cltd
lods
and
sbb
jo
insl
cmpsb
inc
add
cmp
add
add
pop
or
int
cmp
pop
cmp
mov
mov
fs
movsb
sbbl
xor
dec
call
outsl
aad
es
scas
scas
imul
test
mov
or
sahf
das
jp
inc
test
or
ss
ja
mov
stos
jo
mov
idiv
mov
popf
jno
out
jl
fwait
pop
jmp
jl
aaa
pop
mov
test
sub
das
bound
adc
push
xchg
mov
inc
jecxz
outsb
das
jb
ja
and
or
or
jae
dec
adc
hlt
stc
adc
lret
jmp
scas
pushl
mov
mov
xchg
mov
ss
adc
pop
test
and
xor
sti
jb
mov
stos
inc
loope
jge
rcl
xlat
push
jo
daa
cmp
das
stos
xor
int3
in
cmp
pop
sub
jp
iret
mov
shll
nop
out
pop
movsb
rclb
mull
xchg
inc
adc
jg
scas
aam
je
xor
orb
sbb
test
inc
sbb
pop
mov
rclb
push
test
insl
jl
or
mov
mov
mov
xor
sub
stos
rcrl
dec
dec
mov
mov
push
std
mov
adc
push
into
jmp
js
in
push
adc
adc
add
mov
aam
into
ja
rolb
call
push
cmpsb
cld
adc
dec
cs
jo
scas
jb
cmp
fsts
sub
pop
cmp
je
fistl
les
add
mov
leave
inc
je
mov
or
mov
jnp
mov
scas
out
andb
in
dec
mov
pop
fsubr
in
xor
pop
xchg
push
cmp
xchg
mov
mov
in
inc
out
sub
sbb
fcoml
in
fdivrs
in
adc
push
test
push
inc
cmp
iret
mov
enter
jmp
outsl
sub
mov
sub
cmp
or
mov
outsb
mov
push
jle
aad
mov
xchg
adc
mov
call
cmp
pusha
jne
mov
outsl
insl
lea
aaa
cld
test
sbb
cmp
inc
dec
jmp
adc
mov
rcr
dec
test
aaa
into
stos
jle
xor
inc
jbe
jbe
xchg
jg
jns
imul
cmp
mov
mov
mov
unpcklps
je
fsubrs
jg
xchg
aaa
and
or
push
adc
mov
imul
movsl
orb
subb
push
mov
roll
inc
mov
ficomps
mov
xchg
inc
mov
or
xor
imul
mov
dec
sub
adc
cmp
sbb
adc
add
les
repz
mov
cmp
xchg
cs
jl
jmp
stc
mov
mov
mov
mov
push
mov
ret
dec
pop
or
adc
dec
scas
cmpsl
sbb
sahf
push
ret
xchg
push
adc
add
nop
dec
mov
aaa
mov
sarb
mov
pop
cli
inc
sub
adc
add
lret
mov
data16
hlt
push
dec
jbe
sbb
inc
adc
int
call
mov
sbb
call
int3
or
in
movsl
scas
filds
sbb
mov
fisubrs
dec
inc
in
lret
lock
add
and
scas
dec
sbb
dec
aad
xor
pop
mul
pop
dec
fs
cmp
into
call
pop
aam
cmp
inc
shlb
inc
cmpsb
repnz
mov
std
data16
push
push
loop
shr
mov
inc
movsb
repnz
or
out
jae
jnp
aaa
mov
push
mov
in
xchg
sar
and
dec
jecxz
mov
leave
mov
mov
jne
jno
lret
pop
lret
daa
xchg
jg
jmp
outsb
outsb
xor
xor
add
and
cmp
inc
out
cmpl
dec
fnstenv
pop
adc
movsl
and
mov
pop
hlt
push
inc
mov
lcall
xor
test
push
cltd
imul
fldenv
pop
popf
sub
mov
pop
jo
lret
pushf
jb
lock
add
xchg
daa
std
sbbl
fidivl
sti
insb
aaa
out
stos
in
xor
sub
movsb
int3
mov
mov
and
fndisi(8087
xor
pop
push
repnz
roll
mov
pop
cmp
push
add
mov
mov
jnp
and
sbb
addr16
jns
adc
dec
ficoml
jae
cmpsb
mov
sahf
pop
lods
jmp
enter
sbb
clc
and
mov
and
mov
mov
push
ss
movsl
hlt
add
movsb
cmp
push
or
mov
mov
and
enter
setno
or
mov
mov
movsb
mov
xor
pop
adc
cmp
pop
jae
pop
or
fmull
pop
movl
pop
or
xchg
cmp
xor
mov
cs
or
mov
ret
push
std
xchg
imul
adc
clc
iret
call
inc
xlat
fwait
sti
mov
pushf
ficompl
sbb
pop
rclb
imul
add
push
xchg
lods
mov
jnp
rorb
lock
test
jl
sbb
ss
aad
bswap
cmp
cmp
pop
sbb
push
popa
or
mov
add
imul
push
lods
addr16
dec
or
ret
cmp
dec
in
dec
shlb
push
pop
mov
stc
lcall
mov
push
push
shll
lret
rcrl
sbb
clc
movsb
cs
mov
and
jbe
outsb
lds
mov
mov
ljmp
negb
jl
push
cmp
stos
cld
cltd
aad
nop
popf
mov
push
daa
or
jb
inc
xchg
sub
pop
mov
xchg
aas
xlat
ficompl
insl
lock
js
and
int3
adc
lea
xchg
pushf
push
sete
xor
adc
and
push
lret
out
xor
inc
push
arpl
or
outsl
testb
or
icebp
adc
arpl
imul
mov
pop
pop
mov
jle
fld
xchg
or
cmp
push
dec
pop
push
jae
and
push
add
sti
push
ret
icebp
ror
push
lret
dec
rorb
outsl
imul
out
xchg
add
inc
sbb
ljmp
outsl
lods
push
fiadds
bound
bnd
mull
xchg
cli
sbb
add
xchg
or
add
and
lahf
mov
stos
sahf
pop
shrb
js
testb
mov
cltd
cmpb
cltd
notb
push
mov
push
faddp
mov
sbb
add
sbb
pop
or
jae
and
shlb
ret
jmp
pop
inc
in
cmc
sub
cmp
loopne
ds
int3
mov
imul
jle
jb
xchg
add
stos
call
test
aad
es
clc
js
cmp
sub
pop
and
shlb
mov
testl
sti
jno
or
shrl
js
xchg
bound
loopne
dec
les
jns
mov
xchg
adc
pop
mov
xor
mov
ss
push
add
pop
push
add
jmp
xlat
push
enter
push
sub
aaa
loopne
push
cltd
ret
test
in
call
imul
push
subb
fistps
and
or
dec
xor
cs
xor
xor
and
dec
cmp
add
mov
pop
jg
lahf
push
sub
xor
clc
inc
mov
lahf
mov
xor
jmp
inc
ljmp
mov
ja
test
push
xchg
gs
inc
clc
ds
pop
dec
fucomi
xlat
shlb
loop
sub
shrl
lock
pop
jle
imul
nop
xchg
lock
mov
jg
lahf
clc
jno
sub
xchg
cmp
cmp
jp
rol
loope
inc
pop
pop
mov
cld
jb,pt
pop
loop
sarl
leave
addb
mov
adc
push
xor
cmp
andl
es
and
shll
xchg
mov
pop
mov
and
aad
inc
loope
negl
movsl
mov
imul
jb
dec
fsubl
dec
cmc
nop
dec
add
inc
add
les
std
push
jbe
push
das
push
data16
lods
bound
add
mov
pushf
sub
or
std
les
je
je
mov
dec
test
imul
and
mov
sub
int
jb
xor
mov
sub
addl
or
mov
dec
and
adc
jae
std
movsb
bound
xchg
add
and
lods
adc
in
mov
push
int3
pop
ficoml
push
sbb
inc
test
out
es
xor
mov
push
inc
add
push
cs
rcll
mov
mov
adc
mov
xchg
pushf
icebp
pop
and
jns
idivl
lock
out
lods
clc
ljmp
inc
mov
ret
mov
fmuls
sub
add
loop
sub
mov
lret
outsb
cmp
jo
add
inc
cs
dec
mov
mov
cmp
add
ror
aam
mov
or
fisubs
mov
pop
loope
mov
inc
ds
inc
cmp
sub
rdpmc
xchg
pop
scas
addr16
aad
cltd
aaa
pop
aad
out
push
jmp
dec
sti
dec
mov
cld
clc
outsb
loop
mov
div
adc
fcmovnu
cmc
xor
into
movsl
jo
sub
loope
mov
imul
mov
inc
addr16
ljmp
cmp
outsb
inc
hlt
mov
cld
dec
adc
enter
or
stos
movsb
dec
mov
cmp
sub
or
test
pop
sbb
sbb
sti
lock
push
std
lahf
pop
sub
repz
pop
adc
stos
ret
enter
push
lret
pop
or
pop
jmp
add
jb
dec
pusha
and
or
hlt
outsl
pusha
mov
lcall
negb
fs
dec
or
pop
sub
insl
inc
xor
gs
push
cwtl
scas
or
lcall
mov
mov
push
lea
cltd
ret
cmc
sbb
cmpsl
sub
xchg
repz
xor
cmp
scas
mov
ss
push
mov
inc
test
into
cmp
lods
and
loopne
nop
int
pop
lods
arpl
mov
outsl
jmp
xchg
xchg
jge
mov
push
adc
cwtl
stos
insl
add
cltd
mov
push
mov
bound
cs
cli
and
and
sub
and
fisttpll
xchg
test
stc
mov
xor
dec
mov
jg
mov
jnp
jge
ret
jge
fadd
or
mov
mov
jg
and
in
push
adc
sub
pop
cmpsl
jne
push
sarb
orb
aaa
stos
cmp
testl
mov
jl
pop
mov
push
sub
sbb
push
test
jl
das
repz
enter
adc
dec
xor
pop
std
and
not
mov
data16
dec
inc
push
paddusw
and
push
popa
pop
cld
in
add
sub
xchg
cltd
dec
mov
xchg
add
jno
sbb
test
and
outsl
mov
mov
cltd
inc
pop
cwtl
adc
sbb
adc
enter
jl
inc
icebp
lret
cmpsb
mov
jns
add
adc
adc
mov
fnstsw
and
repz
add
outsb
push
xor
pop
push
iret
dec
ret
mov
xchg
fcos
out
jmp
xor
cld
cwtl
xchg
aaa
push
pop
xor
gs
and
inc
insb
ds
adc
loopne
adcl
ror
jge
inc
or
inc
mov
insl
sub
add
stos
loopne
lods
sub
das
jo
int
push
mov
jne
mov
mov
movsb
xchg
xor
ret
dec
pushf
js
mov
mov
push
and
bound
in
dec
stos
out
roll
cmp
psubsb
orl
mov
stos
test
rclb
jnp
push
push
in
ret
mov
mov
loopne
cltd
cmp
pop
dec
movsl
push
mov
cmp
mov
hlt
fsin
pop
cmp
push
pop
inc
jae
xor
pop
jl
xchg
insb
xchg
xchg
jbe
sbbb
sub
push
cmp
in
cmpsb
pop
in
sahf
mov
ja
adc
in
in
mov
cmp
mov
dec
inc
sbbl
pop
sarl
ljmp
leave
pop
test
ror
dec
mov
mov
aad
jge
addr16
cmp
lahf
aas
xor
rclb
sbb
sbb
inc
adc
pop
push
fimuls
push
dec
cmpsl
cmpsb
inc
mov
ljmp
jnp
in
xchg
cmp
lds
jecxz
pop
sbb
inc
adc
cmp
js
stc
mov
inc
lret
lcall
popf
test
fidivs
jbe
out
mov
inc
imul
ljmp
sub
mov
out
icebp
insb
sub
inc
dec
and
sub
addl
pop
nop
jb
icebp
jo
pop
push
bound
lret
and
dec
sbb
jl
mov
or
adc
adc
or
je
dec
inc
stos
push
mov
aad
repz
cld
adc
xchg
mov
jbe
outsb
sbb
les
xchg
ljmp
stos
imul
mov
lea
add
mov
pop
xchg
sbb
arpl
dec
dec
aad
fdivrs
pop
jnp
fsubrs
test
loope
in
imul
out
inc
jp
mov
stos
sbb
lcall
fst
xchg
jno
push
cmp
arpl
and
xor
mov
scas
lea
push
pushf
pushf
xor
js,pn
sbb
adc
jne
push
shr
mov
gs
push
jl
mov
cmpsb
cmp
jo
mov
lahf
lret
lcall
lcall
xchg
sbb
loope
xchg
sub
sbb
push
lea
xchg
es
out
and
arpl
aaa
mov
push
fldcw
nop
lock
dec
pop
adc
sub
mov
rsqrtps
jp
xor
andb
xor
and
fdivrl
fmul
lret
or
jge
sbb
sub
movsb
int
add
shll
push
sub
adc
mov
les
inc
out
int3
dec
into
mov
test
sub
or
mov
sub
push
push
xor
int3
cs
or
sbb
fnstcw
divl
pop
daa
mov
xchg
loope
mov
fs
mov
add
inc
repz
and
sbb
pop
data16
xchg
pop
idivb
mov
cmp
int3
rcrb
fs
sbb
mov
loopne
test
dec
cltd
pop
and
dec
jo
sub
out
lock
adc
or
shrl
pop
jp
test
xor
fnsave
hlt
iret
push
mov
mov
orb
iret
in
or
or
das
loope
and
ds
fbstp
in
sub
mov
pop
mov
sub
adc
mov
mov
add
or
je
pusha
sbb
popa
and
pop
push
mov
xor
insb
mov
pop
xlat
aaa
scas
jmp
or
adc
sbb
out
lds
inc
jl
sti
lock
dec
jecxz
xor
cmp
imul
adc
dec
jg
pop
pop
repnz
lea
xlat
and
dec
rolb
ret
pushf
fwait
push
sub
pushf
out
mov
sahf
jl
xchg
mov
pop
mov
mov
xchg
jecxz
out
push
popf
pop
lcall
sub
sbb
pop
in
setle
mov
pop
mov
mov
push
jp
xchg
cmp
hlt
stos
jecxz
mov
push
sbb
inc
sub
in
jmp
lcall
push
insb
es
inc
rorl
mov
push
fs
movsb
sti
xchg
dec
and
sub
incl
sub
lock
push
and
arpl
loopne
fnstenv
jecxz
scas
cmpsb
push
cmc
popa
mov
aaa
scas
cmp
ficoml
mov
cld
inc
mov
adc
or
mov
lock
lcall
adcl
ljmp
nop
loopne
mov
das
pop
in
dec
cmp
mov
imull
or
lods
and
ds
loopne
mov
leave
cmp
lret
mov
jo
scas
jo
cmp
stos
jl
xchg
sahf
lods
mov
inc
adc
test
es
mov
shrl
inc
push
push
lret
rcrb
imul
neg
jns
into
and
cld
mov
pusha
popf
jmp
repz
lahf
fisubs
jmp
push
sbb
fs
add
inc
mov
push
xor
aas
aas
or
fcomp
sub
push
addr16
pop
jnp
sub
fcoms
xchg
mov
pop
pop
xor
sbb
std
leave
scas
sbb
shlb
mov
jae
stos
aas
jo
push
nop
sub
fucomi
sbb
fstl
pop
mov
test
xor
jo
mov
xchg
mov
scas
fdivs
dec
sbb
aad
or
xor
andb
xchg
icebp
movsl
lret
cmp
das
cld
xor
scas
adc
roll
fsubr
adc
mov
mov
lahf
xchg
les
and
mov
inc
imul
cmp
pop
aam
pop
jbe
orb
movsl
mov
dec
fwait
sar
icebp
cmp
scas
xlat
pop
xor
loope
adc
mov
inc
or
sbb
or
mov
add
xchg
cli
push
les
les
pop
xchg
adc
xchg
push
cld
int
xor
adc
add
cmp
daa
xorl
and
adc
out
or
sub
negb
adc
sbbl
cld
fidivs
testl
mov
nop
pop
fisttpll
push
inc
lods
push
je
adc
pop
xor
es
sbb
daa
fidivl
pop
fwait
js
sbb
popf
rorb
sbb
shlb
add
outsl
movsb
mov
mov
loop
subb
insl
repnz
add
jae
je
and
out
sbb
aaa
out
xchg
scas
mov
mov
mov
push
imul
or
int3
and
mov
rcl
in
scas
push
data16
adc
or
cmpsl
xchg
shrl
cmp
mov
ficomps
push
push
xor
int
push
je
adc
or
sahf
icebp
lcall
sub
sbb
pop
dec
mov
jnp
movsl
out
or
int3
push
xor
ja
mov
mov
gs
call
cltd
in
push
test
sub
xchg
add
mov
jns
test
movsb
jo
jnp
or
adc
js
xor
fdivrs
adc
push
fwait
repz
mov
sbb
sti
rorb
push
test
mov
popa
sub
dec
outsl
ds
jle
adc
and
andl
into
scas
cmpsl
xor
sbb
push
push
mov
push
cltd
mov
jnp
fldcw
add
pop
jae
aaa
lret
pop
dec
lds
sub
adc
push
rol
pop
inc
xchg
imul
adc
mov
fwait
call
sbb
aad
xchg
jae
lds
inc
jle
sbb
inc
or
push
ror
loop
jb
mov
cwtl
mov
jae
lahf
fsub
sti
inc
rcrb
out
jo
pop
int
lea
mov
leave
pop
add
adc
xchg
jmp
cld
data16
sub
sub
ja
xchg
les
add
jbe
mov
sub
pop
dec
jle
jno
cmp
pop
in
xlat
jg
xchg
sbb
ss
ljmp
insb
lock
push
insl
add
inc
lcall
shl
and
mov
jmp
insb
into
and
and
xchg
pop
dec
mov
nop
pop
mov
notl
fldl
sub
pop
dec
mov
lods
mov
or
dec
aam
js
cmp
fiadds
cmp
add
inc
std
mov
jmp
mov
inc
addl
rcll
lock
push
movd
cli
dec
cmpsw
push
mov
jno
fsubrs
push
sub
lret
inc
out
lds
xchg
cwtl
jge
stc
popa
fsubp
pusha
call
or
ljmp
adc
insl
inc
and
outsl
insl
shlb
fld
xchg
jno
add
adc
dec
mov
xchg
pop
sbb
mov
inc
addr16
jne
lock
dec
lods
xor
cltd
repnz
imul
inc
inc
je
pop
in
xchg
rorl
cld
in
enter
arpl
test
mov
insl
xor
scas
ss
cmp
into
adc
fildl
sub
insb
loopne
fcomi
push
cbtw
ja
xor
and
cli
sahf
mov
adcl
es
pop
jmp
flds
cmp
xchg
inc
jg
ret
mov
mov
pop
xor
adc
xor
jecxz
push
and
outsl
pusha
lea
ja
mov
mov
adc
jecxz
loopne
dec
scas
sbb
inc
pop
sarl
adc
and
or
mov
mov
ret
out
gs
addr16
mov
inc
scas
fildl
push
gs
popa
sub
or
mov
stos
ret
pop
sbb
repnz
gs
mov
stos
test
cmp
lret
mov
sbbl
mov
sub
pop
mov
je
cmp
mov
add
jge
scas
adc
add
mov
inc
mov
inc
outsl
push
xlat
popf
shlb
ljmp
mov
or
pop
in
imul
inc
and
and
popa
outsl
sti
xchg
pushf
inc
mov
sti
inc
dec
lahf
jno
std
or
in
mov
stos
xchg
es
cmp
mov
inc
cmpsl
out
sub
je
fcmovnu
xor
mov
jecxz
jecxz
mov
inc
hlt
adc
pop
enter
sti
xchg
or
iret
xchg
loopne
inc
or
cmp
mov
adc
popa
add
push
dec
sbb
xchg
xor
add
insl
push
xchg
out
pop
shlb
xor
mov
aam
mov
popf
sub
outsl
das
xorl
cmc
ss
cmpsl
inc
insb
xchg
repz
or
divl
mov
mov
cmp
cld
fucomp
jb
test
cmpb
jnp
lcall
lcall
jge
and
mov
add
sti
cmpsl
mov
sub
imul
test
adc
push
stos
jp
stc
push
outsl
fwait
ds
xor
mov
inc
xchg
jecxz
decb
adc
add
aad
mov
and
xchg
dec
in
ret
cmpsb
aam
pop
lds
out
adc
xor
sub
popa
push
jg
pop
sub
test
decl
jecxz
fisttps
pop
sbb
sub
cmp
jle
cs
rcrl
jo
cmp
pop
pop
fstps
das
fs
ljmp
popl
in
mov
scas
inc
cmpsl
or
mov
mov
stos
lahf
jne
cmpsb
ret
es
mov
push
rolb
inc
ret
pop
lcall
push
mov
push
into
dec
jne
mov
push
push
xorb
scas
scas
movl
das
pushf
cmc
and
jmp
push
lahf
xchg
sbb
in
cmpsb
shl
adc
xchg
stc
fnsave
in
imul
xchg
lahf
bound
sbb
cmp
pop
mov
and
cmp
sub
push
jl
test
insb
sub
enter
insl
shlb
sub
cmp
sbb
add
into
xchg
adcb
xor
xchg
out
mov
and
mov
loope
and
cmp
pop
test
jne
mov
pop
pop
adc
or
iret
or
xchg
push
jne
lods
cmp
sbb
xorb
cmp
out
inc
jae
cmp
cld
ret
mov
and
sub
orb
add
xor
test
jge
inc
imul
fisttpl
dec
pop
and
insl
sub
push
pop
inc
daa
fldcw
push
movsb
push
popf
pop
rcl
and
push
dec
stc
out
lcall
dec
cmpsb
into
clc
xor
xchg
ss
nop
push
dec
cmp
sahf
inc
jb
pop
out
mov
sbb
popa
jae
mov
push
stc
int3
cmp
xchg
test
jecxz
scas
je
jno
mov
pop
and
out
fsub
sbb
add
mov
jmp
push
std
imul
cmp
push
jg
push
xor
js
push
jge
mov
sbb
jno
or
dec
hlt
shrl
ljmp
mov
pop
xor
cmc
ret
fisubl
into
es
adc
addr16
mov
je
fdivrl
pushf
pop
das
paddq
mov
sbb
lods
mov
add
pop
outsl
sbb
aam
xchg
or
aad
sub
imul
insl
pop
je
mov
outsl
jnp
inc
dec
xchg
add
fdivr
pop
mov
jmp
insb
mov
inc
jge
sti
lret
jb
push
aad
and
inc
mov
mov
sbb
aam
push
cwtl
arpl
loopne
jmp
and
adc
xchg
icebp
sbb
iret
pop
dec
ljmp
jle
xchg
stos
insl
pop
mov
pop
std
scas
lds
jmp
in
repz
push
sub
sub
into
xchg
push
xlat
and
lcall
xchg
inc
mov
and
xor
rcr
in
push
mov
out
push
inc
stos
mov
pop
stc
fidivrl
data16
xchg
enter
lds
pusha
repnz
lret
addr16
jle
cmp
pusha
imulb
int
mov
shlb
in
jmp
mov
and
js
into
lock
add
push
ret
rcrl
lea
orb
mov
rcrl
outsb
add
pusha
ljmp
aas
mov
lcall
scas
out
and
mov
xchg
mov
sti
aaa
push
mov
sub
sub
bound
outsb
mov
and
xor
pop
mov
cltd
loopne
cs
out
xor
push
popf
lods
mov
add
and
aam
aas
les
mov
stos
loop
subb
sbb
mov
mov
or
and
stos
sub
movsb
cmpsl
push
clc
scas
jle
imul
xlat
sbb
int
mov
push
xchg
mov
pop
push
pop
sub
mov
shrl
in
push
lahf
push
pop
stos
lods
and
enter
jno
dec
test
push
jb
jo
and
sti
add
ljmp
sub
shll
aam
movsb
inc
scas
mov
cmpl
lret
adc
shrb
sub
add
daa
test
jl
cmpsl
lock
ja
outsb
or
mov
ljmp
push
out
ljmp
mov
xor
clc
test
mov
and
mov
cltd
lds
insb
sub
stc
dec
pop
ja
mov
mov
mov
in
sub
sub
pop
cld
imull
or
dec
push
imul
xchg
sti
insb
dec
ret
mov
sbb
or
mov
push
fdivrl
sub
in
jae
fdivl
pop
jne
pop
or
addr16
icebp
mov
fisubrl
inc
push
jmp
mov
xchg
add
rcrb
imul
testb
in
xlat
leave
lods
scas
push
test
lods
sub
xor
jl
jbe
popa
dec
in
fsubrl
sbb
scas
xchg
mov
inc
xor
loopne
or
cmpsb
sub
xor
mov
out
mov
test
test
lcall
mov
stos
shl
fwait
adc
mov
xor
inc
mov
shll
repnz
or
add
dec
push
fcompl
mov
xchg
enter
and
in
inc
add
rorb
jmp
lds
inc
xor
rorl
sbb
fwait
xor
lods
in
mov
addr16
pop
filds
test
aam
push
xchg
mov
imul
inc
jae
mov
lcall
jmp
and
mov
lds
push
clc
mov
add
out
scas
cmp
push
sbb
jl
pop
ljmp
fbld
int
jo
cmc
inc
scas
icebp
cli
cmp
addb
lea
cmp
movsb
mov
out
mov
jmp
push
push
mov
out
push
adc
lods
int3
mov
mov
jg
dec
icebp
test
es
pushf
cmp
mov
sahf
jns
sbb
or
pop
push
pop
dec
push
jnp
imul
push
sub
sub
xchg
fucomip
lret
roll
pushf
xchg
sti
cmp
inc
ja
je
fs
enter
mov
aam
mov
pushf
cmp
sbb
fidivs
lret
arpl
add
rolb
pop
jl
fwait
mov
pop
addb
cmp
fcom
outsb
jbe
cld
jecxz
xchg
mov
inc
push
scas
les
cmpsb
add
getsec
fsts
jns
mov
mov
xchg
pop
jmp
int3
pop
dec
jbe
loopne
xlat
add
mov
fistps
jb
imul
outsb
flds
jnp
dec
push
mov
dec
imul
insb
mov
mov
into
pop
sbb
das
out
fs
adc
ja
adc
std
jns
push
mov
add
mov
cmp
pop
jecxz
dec
mov
pop
pop
adc
push
insl
mov
xor
push
fs
dec
and
in
pushl
mov
xor
bound
push
cmp
aam
mov
bound
fisttpl
add
shr
std
pop
arpl
loop
cmp
dec
imul
xchg
mov
jecxz
pop
mov
pusha
sub
fwait
mov
ret
bound
cltd
fildll
and
push
jne
push
sub
pop
into
incl
inc
pushf
cmp
into
popf
inc
sbb
cmp
hlt
mov
mov
imul
js
adc
push
int
test
js
cwtl
push
test
lds
adc
repnz
roll
repnz
test
push
icebp
cmp
sti
pop
sbb
or
fnstenv
daa
out
addl
addr16
and
repz
subl
fcom
mov
test
lcall
push
mov
ror
add
out
and
shl
test
mov
and
xor
or
sub
roll
jb
push
cmc
rclb
fucom
or
pop
ds
in
and
add
or
push
stos
cwtl
mov
in
push
sub
jl
sub
mov
inc
dec
sbb
cs
inc
leave
out
cwtl
xor
ja
xlat
testb
jge
mov
pop
xchg
fstl
xor
clc
out
shrl
sbb
testl
xor
mov
enter
sub
int
mov
into
pop
leave
cmc
add
add
mov
out
sbb
xor
or
into
dec
xorb
xor
jmp
push
inc
dec
add
imul
lahf
fcmovnb
add
pushf
xchg
insl
and
js
dec
mov
das
lods
es
test
lods
dec
pushf
fdivr
imul
mov
lahf
hlt
lds
adc
rcl
mov
jnp
roll
add
loope
faddl
fldcw
jl
shll
mov
dec
bound
inc
das
scas
mov
adc
xchg
data16
pop
cwtl
in
pop
lds
call
sbb
and
jb
fidivrl
or
and
rcl
aad
pop
scas
mov
out
sbb
push
shr
mov
mov
call
mov
popa
xor
out
out
mov
gs
ljmp
adc
sti
pop
cmc
sbb
cmp
xor
stos
int3
cmc
sub
and
popf
and
or
andb
stos
sbb
add
out
in
inc
lods
insl
mov
lds
sub
sbb
mov
enter
sbb
jecxz
aas
xor
xchg
repnz
fnstenv
dec
scas
jmp
inc
pop
stos
aad
or
push
outsl
or
mov
stc
xchg
inc
adc
inc
jno
push
insl
inc
out
or
or
pop
jno
jge
enter
or
dec
adc
add
pop
aaa
sub
mov
or
int3
adc
mov
sbb
mov
or
push
cwtl
movsl
std
outsl
adc
cld
sbb
cmc
lock
imul
cwtl
in
loopne
dec
cmp
fcomps
stos
pop
adc
mov
sbb
mov
fidivl
jge
adc
adc
add
int3
mov
cmp
and
shrl
ljmp
js
mov
inc
lods
ljmp
daa
add
mov
jae
andb
add
lds
test
loopne
mov
inc
pop
movsb
test
and
dec
cld
push
xchg
adc
loopne
pusha
lret
loop
outsb
inc
mov
add
jl
scas
mov
dec
out
fbld
xchg
lods
jo
int
add
and
mov
lret
cli
lods
adc
xlat
fisttpl
ljmp
popf
adc
xchg
ret
js
fiadds
xchg
push
nop
sbb
subb
mov
rorl
sbb
hlt
cmp
mov
xchg
clc
in
dec
mov
ja
inc
sahf
stos
push
xchg
push
out
fs
cmc
iret
xchg
mov
xor
sti
cmp
push
out
icebp
and
or
pushf
stc
cwtl
mov
push
xor
or
je
mov
jmp
aad
push
dec
push
test
mov
sbb
ljmp
push
lret
and
xchg
cmpl
lds
je
outsb
mov
cmp
jl
dec
mov
fnstsw
out
mov
fcompl
addr16
nop
cmp
aaa
sub
decb
gs
inc
mov
inc
add
cmp
mov
cmp
sbb
inc
dec
fcmovbe
popa
scas
jg
xor
xor
aam
jg
movsl
push
or
insl
fsubr
aam
adc
mov
les
jae
jle
sar
jle
test
jecxz
push
rol
add
mov
inc
hlt
orl
inc
push
sbb
pushf
or
push
pop
inc
stc
push
add
fisubs
das
and
sbb
nop
add
data16
shrb
adc
or
inc
or
sbb
cli
jae
adc
mov
jle
lcall
sti
scas
pop
test
fwait
and
test
dec
dec
clc
cmp
jne
fwait
mov
inc
mov
stos
mov
packssdw
std
pop
sub
icebp
testb
lret
fnstsw
mov
lahf
inc
sbb
pop
lcall
outsb
aas
adc
sub
cmpb
daa
and
or
jp
rorl
adc
out
mov
jle
pop
outsl
sub
push
lea
dec
sbb
std
inc
mov
mov
pop
push
lret
mov
xchg
push
mov
sub
and
add
stos
pop
mov
fnstcw
cmp
sbb
enter
add
mov
push
ljmp
cmp
bound
imul
in
add
jno
cmp
test
mov
sub
mov
xchg
pop
movsb
inc
mov
scas
add
fidivl
int3
cmp
cmp
insl
inc
ja
push
enter
mov
sbb
mov
xor
inc
aaa
pop
and
inc
aaa
test
push
scas
inc
cmp
mov
mov
bound
mov
aad
aas
inc
xlat
test
outsb
sub
pop
dec
out
loopne
pushf
mov
sbb
cmp
push
popf
sbb
cmc
mov
mov
daa
push
jmp
pop
jl
sbb
mov
ds
pop
test
ret
lea
inc
leave
pop
cmp
daa
mov
pop
dec
or
lret
sub
xchg
cmpl
adc
push
add
xlat
repnz
outsl
xor
hlt
ret
std
insl
decl
push
loope
in
fsubr
out
cmp
fdivl
adc
lahf
push
mov
or
push
inc
jns
push
pop
hlt
aas
cmp
fstpt
inc
cmp
repz
cmc
sbb
insl
repz
add
mov
pop
pop
push
cmp
mov
inc
ret
or
outsl
mov
xchg
cli
mov
sub
mov
jno
rcrl
sbb
les
jnp
mov
add
push
inc
rcr
jecxz
sub
mov
cmpsl
insl
and
sub
imul
adc
jns
add
jmp
shrb
lock
mov
inc
pop
fistpll
rol
fildll
adc
gs
inc
loopne
in
in
add
test
add
.byte
adc
add
addl
cmp
xchg
sbb
sarb
push
cltd
repnz
repnz
ljmp
hlt
addr16
lds
loop
dec
jecxz
sbb
cmp
je
mov
inc
push
mov
pop
xchg
mov
mov
jge
lods
sub
push
test
mov
add
cli
hlt
cmp
loopne
inc
scas
cwtl
sbb
add
pop
xor
jb
popa
xlat
cmp
xchg
les
cltd
xchg
sbb
lods
adc
in
push
les
repz
sub
shlb
adc
pop
aaa
inc
mov
mov
jno
jo
pop
mov
movsb
std
xlat
shll
ret
sbb
idivb
sarb
and
int3
rcr
pop
lret
adcl
aad
arpl
pop
out
cmp
fcoml
in
mov
pavgb
inc
daa
fs
fldenv
push
cmp
push
das
xchg
jo
ret
mov
icebp
std
add
xchg
inc
rclb
dec
pusha
push
mov
or
mov
ficomps
mov
leave
arpl
add
pop
ljmp
jle
popf
shlb
ja
sub
shlb
or
daa
mov
or
pusha
out
nop
std
pusha
rcrb
shr
sbb
fiaddl
and
jns
je
aam
pop
mov
mov
jae
pop
xor
jp
jmp
out
in
inc
and
xchg
sub
pop
lahf
dec
push
fidivrl
shr
not
xchg
iret
les
pop
or
xlat
fwait
addl
fwait
jp
jge
mov
or
shrl
jl
cmp
mov
cmp
jns
cs
xchg
add
or
xchg
in
jae
mov
push
jp
dec
into
dec
mov
int
.byte
.byte
add
add
sub
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
sub
add
add
add
mov
add
addb
add
sub
add
add
add
add
add
enter
add
add
loopne
add
sub
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
sub
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
sub
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
sub
add
add
add
mov
add
addb
add
sub
add
add
add
add
add
addb
add
add
sub
add
add
add
add
add
cwtl
add
add
add
add
xchg
add
add
add
add
add
add
test
add
add
add
sub
add
add
add
add
add
mov
add
add
xchg
add
add
add
add
add
add
enter
add
add
sub
add
add
add
add
add
fadds
add
add
add
xchg
add
add
add
add
add
add
call
add
add
xchg
add
add
add
add
add
add
clc
add
add
add
add
xchg
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
sbb
add
sub
add
add
add
add
add
sub
add
sub
add
add
add
add
add
cmp
add
sub
add
add
add
add
add
dec
add
add
sub
add
add
add
add
add
pop
add
add
sub
add
add
add
add
add
push
add
add
xchg
add
add
add
add
add
add
js
add
add
add
sub
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
or
add
add
add
sub
add
add
add
or
add
add
add
sub
add
add
add
or
add
add
add
sub
add
add
add
or
add
add
add
sub
add
add
add
or
add
push
add
add
add
sub
add
add
add
or
add
push
add
add
add
sub
add
add
add
or
add
push
add
add
add
sub
add
add
add
or
add
push
add
add
add
sub
add
add
add
or
add
add
add
add
sub
add
add
add
or
add
add
add
add
sub
add
add
add
add
add
push
add
add
xchg
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
dec
pop
add
mov
add
in
add
add
add
cld
or
add
add
in
add
add
add
xor
add
pop
add
add
add
add
add
add
or
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
enter
pop
add
add
add
add
add
add
ljmp
in
add
add
add
fsubr
add
add
add
add
add
add
ljmp
in
add
add
add
in
add
add
add
add
add
add
ljmp
in
add
add
add
clc
ljmp
in
add
add
add
cld
ljmp
in
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
or
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
xor
sub
jp
pop
fldt
fbld
mov
popf
jmp
popa
xchg
xlat
mov
inc
sub
sbb
call
leave
cs
mov
sahf
inc
push
data16
mov
dec
xchg
std
jmp
fdivs
cmc
insb
ljmp
lds
ljmp
sbb
cmp
add
das
and
dec
xor
push
xchg
aaa
mov
mov
sbb
icebp
xlat
ficoml
sbbb
je
lret
inc
xchg
rcr
aam
bound
inc
jns
addb
sub
push
int
dec
int
addr16
pop
pop
loop
in
enter
movsl
pop
cmove
imul
inc
popf
jae
sbb
jp
cmpsl
popa
sub
mov
inc
inc
pop
in
push
push
rcrb
mov
and
inc
mov
das
cmpsb
clc
push
xchg
loop
es
addb
mov
xor
sub
mov
or
mov
lds
lds
out
add
mov
sub
lock
andb
sub
push
mov
dec
sub
int
les
jl
add
test
mov
stos
aaa
cmpsl
cmpsb
sub
xchg
lea
aam
adc
push
mov
adc
repnz
push
pop
xor
mov
jae
fstl
aad
in
dec
aaa
int3
add
jae
fldt
sahf
and
and
stos
aaa
iret
sbb
mov
lret
hlt
test
mov
push
outsb
xor
mov
add
in
in
adcb
sub
ret
addb
nop
push
ds
sarl
dec
push
push
leave
xchg
xchg
pop
jne
mov
inc
mov
or
int
mov
push
ds
leave
dec
mov
aad
aam
fadd
jns
inc
movsb
imul
movsb
inc
mov
dec
test
xchg
loop
gs
xor
mov
push
jb
push
mov
push
imul
ss
add
pushf
jp
loope
movsb
cmp
test
loop
pop
push
loope
cmp
xor
aaa
add
stos
rcr
pop
dec
popf
mov
jae
or
aaa
mov
adc
xchg
mov
and
and
ret
ror
xlat
lret
pop
jns
loopne
ds
sbb
imul
sarl
mov
aad
bound
subl
setge
fsub
fwait
push
add
outsl
sti
adc
mov
xchg
inc
pushf
jo
aaa
sbb
sti
fisubrs
lds
gs
jle
shll
iret
jo
jmp
fsubrs
aas
sbb
fcompl
add
aas
gs
adc
dec
sti
into
daa
fwait
cmp
fmulp
loop
mov
cltd
push
mov
adc
xor
ljmp
pusha
push
ficomps
fisubs
test
pop
mov
jo
jns
test
aad
pop
cmp
aam
dec
pop
das
fbstp
push
adc
inc
enter
dec
or
fcoms
and
jmp
push
mov
dec
ljmp
stos
mov
dec
rorl
adc
push
incl
out
aas
adc
dec
mov
pop
das
jge
jecxz
xchg
cmp
mov
xor
mov
pop
xchg
mov
jns
mov
lret
xchg
or
cmp
xor
daa
imul
fs
lret
inc
fsubrl
xchg
inc
daa
xor
jb
clc
cmp
adc
cmp
popf
ficoms
insb
sub
inc
or
cwtl
push
outsb
mov
push
add
dec
cmpsb
data16
or
ja
inc
fwait
insb
inc
rolb
add
loope
push
or
push
daa
jae
in
ret
out
nop
lret
push
jnp
testw
repnz
imull
cwtl
mov
dec
pop
and
push
and
into
xor
sahf
popa
negb
inc
cld
adc
and
lret
call
btc
mov
mov
imul
test
ret
ljmp
decl
mov
adc
dec
and
or
addr16
pusha
and
mov
pop
test
cmc
loopne
push
xchg
xor
fs
out
pop
into
push
sbb
jge
pop
lcall
mov
pop
lahf
mov
add
fidivrs
xor
jp
ss
mov
jb
sahf
into
and
dec
mov
popa
jl
pop
cmp
push
mul
dec
mov
sbb
inc
push
or
mov
divb
insl
cmc
mov
out
lods
or
mov
sub
xchg
mov
mov
aas
out
adc
gs
in
andb
push
les
mov
adc
dec
sbb
jno
in
add
roll
push
adc
xchg
adc
adc
pop
lcall
adc
xchg
cli
fildl
or
fistps
divb
repz
es
popa
mov
sahf
push
dec
stos
jae
xchg
dec
or
sbbb
adc
cwtl
je
mov
pop
and
lret
mov
shll
pop
mov
fidivrl
pushf
and
bound
fdivs
clc
mov
sbb
test
in
ret
arpl
cmp
push
test
enter
mov
ret
enter
out
or
jmp
inc
mov
jecxz
sbb
xchg
das
loope
sub
dec
pusha
mov
inc
jnp
clc
mov
fucomp
mov
inc
fisttps
or
call
test
rcr
inc
fidivrl
or
cmp
xchg
repnz
jb
movsl
dec
sub
push
fs
sbb
cmpsl
mov
nop
in
dec
mov
std
shrb
or
mov
and
loope
lds
push
or
pop
scas
leave
and
stos
cli
cmpsl
jecxz
mov
or
ret
push
in
mov
mov
scas
push
into
or
and
movsl
sub
cmp
repz
dec
addr16
dec
fisubrl
stc
mov
cs
in
adc
loop
shr
push
pop
sahf
fadd
or
pop
arpl
cmc
sbb
cmpsl
into
dec
paddusb
rclb
lcall
jns
push
addb
adc
lock
in
outsb
sti
out
movsl
shl
bound
mov
daa
imul
fildl
xchg
mov
js
test
mov
fwait
ds
std
add
cs
mov
xor
imul
cltd
adc
pop
sub
out
call
mov
xchg
insb
repnz
inc
cli
pusha
fiadds
cwtl
sbb
inc
arpl
pop
xlat
popa
popf
sub
test
popf
sub
cltd
fiadds
repnz
mull
push
sti
test
pop
pop
stos
xchg
nop
loope
scas
adc
pop
es
addr16
mov
scas
fcmove
leave
aam
testl
push
aam
test
imul
adc
shrb
and
fisubrl
mov
mov
cwtl
das
mov
pop
ss
xor
shll
mov
jmp
les
fucomp
mov
je
dec
aad
js
outsl
inc
flds
outsb
sub
stos
push
push
mov
std
xchg
loop
or
mov
mov
xchg
adc
data16
mov
adc
add
xor
int3
repnz
pop
pushfw
xchg
inc
mov
jno
sub
mov
push
es
inc
mov
popa
in
sarl
lcall
cmp
test
icebp
ja
push
jp
adc
jb
push
sbb
pop
fcompl
fistps
cmp
lods
gs
xchg
jo
das
jns
inc
out
mov
cs
cwtl
sbb
test
jg
xor
js
daa
mov
lret
rorb
add
mov
arpl
mov
fdivs
pop
ret
xor
ficomps
clc
in
out
dec
mov
lods
push
aad
test
ret
pushf
pop
es
mov
cmp
jns
jb
inc
inc
jno
and
or
mov
je
xchg
sbb
pop
fwait
int3
add
mov
adc
sbb
jg
dec
mov
cmp
push
mov
clc
lock
adc
pop
xlat
push
in
pushf
lret
mov
xchg
mov
sbb
pop
jge
pop
cmpsl
gs
lea
cli
test
xchg
mov
imul
or
xlat
mov
jno
or
ret
sbb
movsl
xlat
adc
vpshuflw
pop
sbb
andb
and
sarl
or
je
push
stc
pop
icebp
or
jne
pop
cmp
and
jne
in
lcall
or
into
scas
pop
jl
in
pop
das
stc
mov
inc
daa
xor
xchg
cli
cmp
dec
pop
jecxz
mov
xor
jo
mov
test
mov
inc
stos
mov
pusha
in
mov
mov
rolb
scas
sub
pop
ficoms
lock
or
das
push
rolb
lcall
mov
mov
int
push
lahf
xchg
xor
ljmp
add
xor
shll
stos
push
repnz
and
push
outsl
dec
xchg
add
jo
adc
sti
roll
mov
cltd
imul
xlat
lds
dec
xor
mov
fnstenv
cmp
dec
aaa
nop
std
add
cmp
lcall
dec
hlt
cmpsb
push
ja
int
rolb
xchg
outsb
arpl
inc
repz
in
dec
mov
arpl
loope
scas
call
fimull
cmp
sub
mov
sub
push
lods
outsb
xchg
les
mov
fidivrl
add
cmpsl
stos
lods
push
sub
out
inc
mov
popf
xchg
test
or
xor
mov
mov
aad
aad
adc
mov
mov
pop
mov
sbb
xor
mov
std
inc
sbb
dec
adc
outsb
fstpt
push
bound
mov
or
lock
rcl
in
negb
lods
mov
dec
cmp
inc
bound
xor
pushf
xchg
and
mov
test
sbb
fimull
adc
xchg
jmp
movsb
mov
pop
jmp
jp
jge
out
mov
inc
shrl
or
jo
lock
mov
or
sahf
inc
mov
int3
jecxz
leave
ss
mov
mov
sbb
repnz
lds
adc
mov
pop
mov
mov
xor
mov
jl
xor
stos
or
testl
sbb
adc
pop
hlt
push
stc
js
in
cli
in
les
push
and
cld
arpl
lods
xorb
sbb
pop
jnp
ss
leave
mov
notl
pop
fwait
sbb
xor
jge
push
fwait
xchg
sbb
jg
test
outsl
sar
faddp
mov
xchg
adc
out
or
clc
sub
dec
jp
xchg
jp
loopne
pop
xchg
or
xchg
jp
cld
je
pop
push
push
ja
dec
cmp
pusha
mov
jge
mov
push
outsb
nop
add
bound
popf
aaa
repz
and
unpckhps
sbb
sbb
aas
pop
cmp
adc
icebp
push
push
stos
pop
sti
pop
pop
scas
loop
addl
inc
xor
add
sbb
lret
int
cmp
jnp
mov
fmuls
call
sub
insb
in
push
int3
sarb
jge
and
inc
aaa
adcb
cld
xchg
lea
cwtl
sbb
xor
mov
adc
test
leave
cmpsl
jle
test
and
adc
sub
sub
mov
outsl
xchg
ljmp
outsl
aas
sbbl
out
sahf
adc
mov
out
inc
push
mov
lock
roll
leave
xchg
stos
mov
adc
out
push
pop
push
je
inc
mov
mov
enter
xchg
adc
inc
aas
jl
shll
leave
jge
ds
pop
jmp
ds
jns
push
das
std
scas
test
inc
cli
or
jmp
icebp
and
and
or
loopne
pop
inc
jmp
out
lret
std
insl
push
mov
movsl
in
test
or
jl
push
mov
test
pop
inc
int3
xchg
lea
cmp
mov
roll
push
jne
sbb
es
xor
shl
or
loop
sbbb
dec
shlb
xchg
int3
adc
fstpl
cs
xchg
addr16
xchg
pop
shrl
ffreep
pop
push
mov
adc
sub
mov
inc
ljmp
ret
lret
or
jns
addl
in
cmp
jmp
xchg
fidivs
sti
aas
sbb
test
dec
adc
loope
fidivrl
lret
push
punpckhbw
gs
subb
movsl
jmp
push
loope
shlb
ja
imul
or
inc
fsubrs
push
adc
mov
cmpsl
fcmovnb
pop
int3
mov
lds
pop
fldl
gs
cmpsl
stos
push
sbb
adc
ljmp
xchg
inc
pusha
add
repnz
dec
pop
cs
addb
dec
fiadds
jp
xchg
adcl
mov
inc
push
mov
pushf
rolb
cmp
sub
mov
inc
daa
mov
inc
das
jecxz
and
cmp
out
imul
icebp
pop
push
icebp
testb
adcl
push
ret
call
mov
cmp
pop
push
xor
xchg
push
iret
lods
inc
int3
mov
js
cwtl
mov
pop
imul
mov
sbb
and
mov
mov
or
jbe
in
xlat
jl
adc
pop
jae
ds
mov
pushl
in
sub
outsb
xor
movsl
mov
pop
dec
int3
test
mov
inc
add
mov
mov
repnz
lea
and
clc
pusha
mov
ds
aas
stc
pusha
cli
pop
xchg
mov
scas
daa
sbb
mov
dec
pop
ret
mov
jbe
jns
call
fwait
das
int3
addr16
repz
sbb
out
add
dec
sbb
jns
loope
jp
mov
mov
call
adcl
ja
or
sbb
and
fisttps
jns
push
mov
int
xchg
popa
fstl
xchg
jle
adc
loopne
cmp
enter
and
pop
jae
mov
mov
cmpsl
imul
fsubrs
roll
imul
add
fisttpl
fdivs
ljmp
data16
insb
mov
daa
and
cli
jecxz
fstl
imul
sbb
jns
pop
sbb
push
arpl
mov
push
insl
jne
sub
mov
jo
ljmp
mov
stos
out
inc
adc
or
aaa
pusha
mov
cmp
or
pop
xchg
sbb
mov
shlb
add
in
inc
movsb
adc
std
dec
mov
xor
hlt
stc
sbb
lods
and
fsubs
scas
out
fdivp
in
in
pop
dec
mov
cld
adc
lods
cs
inc
ss
cmp
mov
sub
sub
scas
rolb
push
pop
sub
pop
dec
inc
adc
mov
and
push
cwtl
mov
jp
popf
lcall
ljmp
mov
or
push
pop
cmp
xor
in
shl
lock
std
and
mov
push
xlat
loope
mov
imul
cmp
dec
stc
aas
xor
pop
pop
daa
dec
ja
mov
sub
adc
cmp
std
test
lea
fs
insb
xor
sub
mov
dec
add
rcl
xor
sub
lahf
out
xlat
cwtl
arpl
lock
mov
mov
lea
push
cld
lods
mov
ficompl
dec
xchg
xlat
daa
fimuls
and
in
pusha
add
ficoml
add
into
jg
dec
inc
sub
hlt
xchg
mov
shll
inc
mov
xor
add
xchg
push
test
dec
inc
mov
jp
test
stc
sbb
dec
push
cmc
pop
xchg
dec
out
ret
jecxz
jns
fidivrl
xchg
gs
int
xchg
in
sbb
shlb
mov
pushw
lret
inc
jae
imul
js
jecxz
xchg
adc
sahf
add
sbb
or
imul
jne
aad
lret
sahf
sbb
clc
test
iret
pop
mov
adcb
and
filds
imul
arpl
sahf
push
sub
lock
inc
in
inc
mov
cmpsl
lock
push
jmp
arpl
mov
xor
loope
addr16
flds
fisubrs
out
test
mov
sub
inc
mov
loope
aaa
in
mov
inc
sahf
add
ret
mov
xchg
outsb
mov
sub
test
cmpsb
mov
pop
pop
mov
negb
fldpi
int
aam
inc
xor
les
xor
inc
sti
sub
or
aad
push
pushf
push
push
pop
fbld
adc
mov
mov
sub
jns
mov
and
push
stos
dec
scas
shlb
or
xchg
lds
or
out
aaa
xchg
add
and
icebp
inc
pop
or
out
mov
sbbl
xor
sub
shl
mov
lret
das
push
adc
mov
das
cmp
scas
jge
add
cld
in
mov
sub
mov
popa
in
in
iret
pop
mov
sbb
xchg
fsubl
ds
and
and
in
inc
into
cli
fs
lea
xorl
mov
rcrb
inc
inc
jg
jns
sub
mov
xchg
adc
lahf
pop
sub
jecxz
mov
or
pushl
mov
lea
adc
mov
mov
fstl
jns
daa
jno
mov
and
nop
add
jle
notb
cmp
fwait
pop
push
dec
push
int3
mov
add
jg
push
adc
popa
cld
pop
push
adc
xchg
mov
cmp
inc
mov
xchg
outsl
jno
enter
pusha
out
xchg
and
mov
mov
xchg
xor
or
cmp
fs
dec
repnz
shlb
out
sahf
hlt
push
xor
sub
cmp
inc
iret
ljmp
inc
add
in
xchg
jne
xchg
mov
and
inc
sub
pop
popa
scas
aaa
add
pop
push
in
mov
sub
dec
cmpsb
xchg
mov
cmp
cmp
pop
cmpsb
mov
aad
pop
jl
mov
xor
pushf
ret
rcrb
sub
adc
out
shll
jo
add
xchg
icebp
cli
cli
into
add
push
enter
aam
push
addb
loop
stos
xor
xor
jp
sbb
loopne
insb
mov
in
xchg
pop
sub
and
ret
cld
rorl
sub
ja
add
loopne
out
mov
jg
iret
enter
aad
mov
mov
scas
fidivs
mov
xor
dec
test
rcr
adc
popa
das
mov
push
dec
pop
rol
and
cmp
hlt
jnp
jl
pushf
dec
ljmp
mov
jle
jno
popf
lock
daa
mov
xchg
lea
xchg
js
jb
popf
xchg
adc
out
jmp
fldl
aad
outsl
xor
out
cmpl
mov
fsubrs
adc
aas
pop
loopne
gs
insl
repz
ja
pop
ret
mov
mov
repnz
adc
cmp
cmp
sub
lods
xor
push
push
into
movl
mov
dec
in
out
insb
into
push
xchg
test
lret
in
xor
and
loopne
pop
adc
jp
insb
pop
pop
jnp
or
in
rcl
or
es
adc
pop
pop
and
mov
push
or
xchg
and
xor
mov
xor
lret
pusha
fdivl
sub
jmp
and
add
and
fimull
subb
cmp
movsl
es
xchg
dec
adc
lds
inc
push
adc
adcl
and
mov
cmp
xchg
aas
inc
popa
rorb
lods
mov
cli
dec
lods
aad
lods
xor
mov
repz
stc
pop
mov
cmp
cmp
out
repnz
mov
inc
pop
inc
sub
jge
clc
outsl
dec
pusha
rcrb
xchg
mov
scas
es
mov
daa
mov
xor
pushf
rcll
push
pushf
ficoml
or
outsb
and
push
into
or
nop
into
lret
lret
out
mov
or
out
cmc
icebp
adcb
js
xchg
mov
cmpsl
push
xor
and
scas
fstpl
dec
mov
imul
out
cmpsl
add
insb
cs
jg
jae
pop
enter
scas
push
mov
aas
mov
inc
fisubrl
cmp
cmp
pop
imul
scas
int
pop
out
xor
sub
jb
test
enter
sub
inc
icebp
sbb
decl
mov
lea
sti
cld
imul
mov
scas
or
cmpl
fisubl
pop
mov
pop
jecxz
add
popa
inc
fcoml
lret
jo
test
jle
in
or
pop
sahf
dec
movsl
out
and
imull
pop
lods
lcall
es
lret
mov
stc
jmp
add
outsl
popf
push
flds
leave
mov
xchg
insb
mov
test
ret
sbb
push
das
jmp
xchg
popa
pushf
popa
outsl
movsl
push
or
push
ret
jp
cli
pop
mov
mov
dec
xlat
jle
push
inc
push
mov
mov
adc
sbb
push
and
adc
popa
xchg
hlt
dec
dec
je
mov
ja
lods
fs
mov
roll
jge
cltd
inc
and
dec
fdivr
movsb
xorl
push
out
arpl
cld
ret
pusha
lods
mul
inc
pop
in
repz
adc
mov
dec
stos
or
sbb
push
aam
insl
or
mov
imul
enter
in
outsl
dec
repnz
xchg
cmp
imul
popf
shr
in
mov
inc
gs
push
push
stos
mov
mul
cmp
push
sub
jg
test
push
loopne
int3
aad
push
daa
sub
jne
adcl
mov
es
inc
hlt
pop
orb
stos
or
in
add
test
xchg
ja
in
test
adc
push
push
xchg
int
ja
je
int
adc
add
or
sahf
test
xchg
adc
popf
xchg
aaa
mov
cmp
lock
imul
jmp
dec
mov
nopl
popa
sub
jle
movsb
jno
inc
jl
into
ljmp
cwtl
push
fwait
mov
iret
xchg
jb
xorl
stos
mov
sub
cmp
icebp
loope
daa
call
cmp
mov
sub
mov
stos
cli
cli
in
dec
popf
xor
and
lods
cli
sar
sub
sub
montmul
cmpsb
add
mov
dec
pusha
popa
xchg
or
pop
xchg
mov
adc
outsl
movsb
jecxz
push
iret
les
jno
test
imul
adc
aas
cmc
xchg
in
into
jmp
les
xor
cmc
movsb
mov
aad
jo
nop
push
cmc
into
ss
loopne
dec
pop
nopl
out
pusha
rorl
loop
outsl
aaa
mov
into
andl
sbb
add
shll
popa
pop
addr16
fistpl
std
pop
mov
add
insb
sbb
or
dec
ret
cmp
jg
pop
rcr
sar
adc
sub
push
sbb
js
xor
in
ds
dec
int3
adc
xchg
stc
rcrl
xchg
cs
in
adc
into
pop
mov
push
fdivs
dec
clc
jl
jnp
cmpsb
arpl
mov
ljmp
testb
sbbl
push
xchg
mov
dec
bnd
mov
lods
cmp
lods
jge
mov
dec
jns
adc
lret
arpl
fdivrl
test
lods
cs
dec
pop
cmc
test
dec
daa
test
and
dec
or
sahf
cmpsl
inc
mov
pusha
in
dec
pop
pop
add
dec
into
scas
cmp
fidivs
out
imul
add
jne
sub
sahf
loopne
sub
mov
ficomps
mov
pop
sbb
leave
cmpl
test
mov
movsl
cmp
push
adc
inc
xor
es
subl
add
lcall
jnp
pushf
sub
mov
add
movsb
pop
data16
xor
ret
imul
sbb
and
dec
sub
daa
sti
push
enter
jnp
lods
out
cmp
fiadds
inc
ss
xorps
stos
arpl
add
xchg
movsl
mov
aam
jge
roll
bound
jmp
rcr
jno
imul
scas
inc
xchg
repnz
mov
lcall
dec
or
push
shrl
ds
nop
push
mov
dec
fsub
and
ud1
push
outsb
or
gs
dec
outsl
jb
loop
loopne
mov
mov
jo
or
ljmp
leave
ffreep
mov
and
cmp
shrb
jg
inc
xlat
mov
cld
dec
dec
shl
cli
movsb
fs
push
jno
sbb
push
in
add
or
adc
adc
int3
stos
jno
and
lahf
fnsave
xchg
shlb
aam
jbe
test
sbb
js
sub
xchg
sbb
imul
outsl
insb
dec
sbb
push
cmp
testb
fidivl
fcmovnu
pushf
and
fmuls
into
sbb
dec
ret
sub
cmp
sbb
jmp
sub
in
scas
jnp
mov
inc
enter
movsb
ljmp
push
push
lods
mov
shll
incl
stc
add
aad
push
jae
push
inc
jbe
mov
add
push
xor
scas
clc
xchg
in
push
lret
cs
cld
scas
mov
repnz
bnd
dec
inc
aaa
inc
pop
and
push
scas
dec
mov
add
jle
mov
xchg
roll
and
les
lcall
out
out
call
or
ss
movsl
xchg
fistpll
cltd
test
or
in
add
nop
cli
imul
push
test
aaa
cmp
mov
sbb
test
and
mov
pop
test
cmp
sbb
adc
add
dec
add
push
in
or
inc
in
movb
dec
sub
push
push
fistpl
inc
dec
xlat
in
cmp
cmpsb
out
push
movsl
jge
sbb
cli
arpl
or
mov
jge
cltd
push
cltd
mov
sbb
fistl
cmp
adc
mov
push
push
rcll
dec
push
push
nop
test
push
push
add
pop
cmpl
cmp
stos
iret
dec
std
and
xchg
xchg
mov
lahf
out
popf
sbb
outsb
push
dec
imul
push
sti
sub
mov
aam
fimuls
mov
dec
cmp
test
das
outsl
inc
pushl
mov
mov
push
in
pop
xchg
sbb
dec
jle
xor
cmp
xor
jbe
popa
jno
out
vpsraw
out
and
mov
cmp
out
orb
xor
jge
cld
mov
adc
xchg
push
jnp
jae
sbb
push
fwait
push
and
mov
inc
icebp
cmpsl
leave
in
xlat
or
add
inc
popf
fdivrs
and
or
int
mov
xchg
or
mov
and
js
cmp
lret
aam
jle
scas
cwtl
bound
testl
and
ret
push
cmp
int3
out
movl
fiaddl
shl
fsubl
cwtl
adc
cmp
mov
add
es
les
pop
out
push
ficoms
in
and
lock
add
out
movsb
adc
ret
jecxz
stc
add
sub
popf
fistpl
les
jnp,pt
sbb
sarl
push
push
push
sbb
push
insl
cmpsb
std
movsl
js
int3
jge
push
enter
ret
arpl
and
jge
add
push
adc
arpl
pop
mov
push
sub
sub
jp
ljmp
dec
pop
xchg
icebp
je
pop
mov
xchg
hlt
fidivl
popf
mov
shlb
std
push
cwtl
mov
mov
insb
xchg
xchg
and
nop
repz
pop
mov
push
jmp
dec
inc
cmp
call
aas
xchg
mov
or
popf
sub
cli
out
xor
test
jb
jle
lea
adc
rcll
or
cmpsb
push
push
jo
ret
push
push
repz
or
cmpsb
mov
scas
cmpsl
fs
fsubrl
xchg
dec
xchg
insl
ficoml
loope
cmp
xchg
stos
adc
sbb
add
and
xchg
mov
jns
xor
ffreep
pop
mov
push
jl
and
xor
mov
icebp
and
dec
lret
shlb
out
or
sub
sarb
movsb
pop
and
test
loope
call
lret
pop
sub
xor
push
and
pusha
jns
ds
pop
call
push
mov
mov
mov
pop
das
dec
jp
push
lahf
jno
leave
cs
loop
ja
or
xlat
ret
dec
icebp
xor
mov
lahf
and
lret
jnp
cmc
dec
or
repnz
lea
popa
jmp
pop
into
lea
xlat
fnstcw
ret
pop
and
sbb
mov
fistps
sub
lds
arpl
std
call
mov
add
sbb
or
or
inc
adc
jbe
lcall
jae
jp
pop
addr16
mov
outsb
pop
mov
xor
adc
lock
inc
outsb
enter
cmp
mov
sub
sarl
dec
sbb
subb
push
stos
xor
xchg
shll
in
out
lahf
icebp
nop
and
arpl
jae
add
call
jnp
mov
mov
jne
lret
jo
cmp
push
out
nop
stos
dec
lock
int
jbe
je
xchg
or
lcall
sub
inc
mov
push
fcomps
lods
jno
push
ds
adc
dec
or
ljmp
or
pop
mov
push
xor
mov
mov
call
js
out
cmp
and
cs
cmpsl
sbb
cli
popa
lds
popf
mov
movsb
scas
jo
pop
pop
mov
bound
cwtl
pusha
je
sarb
jl
jno
pop
pusha
fcoms
test
xlat
cwtl
dec
push
ss
jmp
adc
mov
dec
xchg
popf
lret
or
rcrl
dec
mov
mov
and
lods
push
inc
adc
stc
dec
out
sub
orl
or
sub
mov
cwtl
jb
cmp
add
aad
out
inc
scas
nop
mov
mov
pop
int
xor
pushf
movb
loopne
clc
add
xchg
inc
les
push
push
cwtl
xlat
icebp
xor
pop
cmp
aad
fcoml
push
insl
cmp
jge
lcall
sub
adc
fistpl
mov
xor
aam
daa
mov
jmp
mov
cli
xor
mov
dec
and
adc
pop
cmc
js
rorb
movsl
into
stos
leave
in
pop
out
insb
or
mov
fcom
in
pop
sbb
inc
fildl
inc
cltd
mov
rcl
fidivrs
cmp
subl
xchg
mov
nop
xor
push
and
inc
fbstp
sub
enter
repz
pop
in
call
fistl
or
mov
push
sub
or
repz
lcall
out
call
lcall
int
scas
jbe
jle
inc
adcl
fs
jp
ss
das
int3
lds
mov
in
rcll
ror
or
insb
orl
lea
mov
sub
das
adc
inc
dec
adc
outsl
repnz
add
test
cmp
mov
into
in
dec
std
bound
stos
jne
repnz
push
bound
or
lret
call
nop
mov
in
inc
aam
jnp
enter
movsl
test
fwait
cmp
lds
mov
lods
test
clc
cmpsb
mov
push
jb
movsl
idivl
cld
fadd
aaa
jb
and
les
jp
andl
out
hlt
dec
xorl
pop
enter
repz
outsb
inc
aad
popf
fldcw
push
cmpsl
es
or
dec
adc
dec
dec
add
shll
outsb
push
call
aas
inc
push
cmpsl
sub
into
pshufw
or
mov
leave
xchg
push
repnz
scas
mov
mov
mov
cmp
shl
mov
enter
mov
cmc
adc
insb
fisubrl
mov
lock
jnp
imul
into
sbbl
sbb
js
push
stos
xchg
xor
xor
dec
jmp
dec
cmpxchg
or
int
insb
add
sub
jge
jns
imul
sub
xor
pop
mov
jl
nop
pop
popf
stos
push
loope
sbb
hlt
pop
leave
pusha
mov
cmp
sahf
dec
scas
sub
and
in
ficompl
std
loope
cmpsb
push
mov
push
cwtl
dec
outsb
lret
pop
mov
xchg
idiv
int3
int
cwtl
jle
xor
jb
fs
dec
nop
xchg
dec
push
xor
push
movsb
popf
sbb
sbb
test
gs
jne
xor
cmp
pop
sbb
mov
cs
mov
jecxz
aaa
pop
dec
cld
push
scas
iret
loop
cs
dec
repz
inc
imul
rclb
add
jecxz
pop
ret
inc
popa
arpl
mov
pop
aam
sbbl
out
dec
movsl
push
adc
sub
arpl
cmp
jle
rolb
cltd
aam
imul
adc
test
pop
out
or
jg
lretw
cmp
scas
fwait
mov
xchg
inc
mov
orb
dec
xorl
and
adc
stc
sbb
mov
cmp
and
add
leave
lahf
push
sti
mov
or
cmp
stos
ss
iret
jp
int3
add
jae
pusha
das
and
adc
sbb
cld
lret
pop
jo
imul
icebp
jnp
or
iret
outsl
xorb
mov
test
xchg
add
jno
rcll
pop
enter
push
xchg
pop
sbb
movsb
and
push
into
repz
push
xchg
in
dec
ret
adc
cmpsl
pop
jns
jle
repz
cmp
hlt
mov
and
aas
stos
outsb
mov
das
xchg
test
lods
jle
sbb
dec
cmp
popf
push
push
sbb
test
sub
push
repz
ficoml
aaa
add
int3
mov
hlt
cmp
movsl
enter
outsl
and
mov
test
test
push
xchg
cmpsl
mov
mov
insl
or
add
imul
mov
and
stos
out
popf
add
das
cmp
xchg
mov
rorl
xchg
test
dec
sub
cmp
mov
mov
rcrb
inc
add
or
lea
outsb
leave
cmp
fstps
dec
dec
mov
xchg
pushf
daa
dec
pop
outsl
rcr
test
dec
jne
andps
jbe
and
or
pop
jae
xor
or
in
mov
js
data16
lea
adc
add
cmpsl
cmpb
js
dec
push
pop
add
loope
inc
adc
or
pop
call
jne
xor
stos
int
pusha
mulb
lods
mov
cltd
mov
into
movsb
popf
jo
mov
gs
cmp
js
ds
pop
loopne
cmc
inc
icebp
lock
pop
or
push
pop
sbb
lds
sub
daa
les
popl
dec
cmp
es
sub
mov
jecxz
cmpsl
sbb
and
sub
mov
into
xchg
dec
fadds
stc
and
ljmp
movsl
rcrb
mov
mov
push
int3
pop
leave
pop
pmulhuw
pusha
xor
xchg
pop
jo
cmp
mov
lretw
jecxz
lret
sbb
pop
pop
sub
lret
std
das
mov
mov
xchg
pop
popa
push
dec
push
gs
lods
aaa
cmc
clc
repnz
or
test
movsl
lods
mov
cmp
jle
mov
cmp
sub
es
mov
and
outsl
dec
dec
jne
dec
popa
sahf
aas
rcrb
add
sbb
ret
or
insb
into
push
rorl
sub
orb
in
sar
adc
loopne
xorb
out
je
data16
or
xor
mov
sahf
push
mov
in
inc
std
adc
xchg
insl
xlat
and
aad
stc
pusha
sub
mov
in
pop
imul
and
call
or
orb
out
dec
mov
nop
mov
sbb
ja
int
or
stos
pop
shrb
out
pop
add
xchg
scas
adc
out
outsb
jge
sbb
shlb
push
loope
fsubrl
test
fwait
or
pop
scas
fs
js
std
dec
or
jo
dec
add
loop
and
outsb
loopne
jno
mov
arpl
outsl
pop
movsl
mov
xlat
cld
sub
xchg
movsl
lea
fildl
insl
in
add
jne
inc
fs
dec
cmp
cmpsb
aad
daa
pop
xchg
xchg
loope
cmp
dec
shll
inc
xchg
xlat
fwait
inc
lods
lahf
cmp
pop
lret
loop
cmp
popa
jle
stc
mov
mul
xchg
imul
mov
jle
pusha
sbb
mov
icebp
sahf
mov
scas
mov
sarl
jecxz
stos
mov
and
sbb
sub
inc
or
sub
rcl
test
inc
fdivs
mov
and
xlat
jns
adc
shrb
lahf
jge
ss
mov
sbb
jns
or
fmull
dec
aas
icebp
pusha
mov
xchg
cli
clc
jbe
nop
inc
inc
hlt
add
xchg
jae
adc
andb
jge
fadds
jg
adcl
js
loop
repz
call
leave
icebp
and
push
xlat
repnz
outsb
xchg
mov
sub
sub
xchg
xor
mov
lods
push
mov
push
adc
jno
fiaddl
mov
repz
jbe
pop
loope
ljmp
push
push
mov
cmp
mov
gs
mov
jb
sahf
sbb
mulb
out
aas
push
jbe
inc
mov
test
pop
add
xlat
jmp
andl
lods
imul
xor
imul
jb
cld
std
sub
lahf
xchg
cmc
dec
shll
lods
lods
xchg
xchg
int
cmp
or
int
ror
popa
jbe
push
fwait
scas
pop
lret
jbe
popa
scas
outsl
or
sub
sub
and
dec
scas
and
inc
std
mov
loop
mov
jecxz
cmp
cmp
push
out
add
lds
movsl
cmp
les
imul
sarl
push
mov
mov
jne
popa
ret
rcrl
cld
adcl
pop
cld
into
jb
aam
xchg
ss
lret
mov
shll
or
mov
sbb
jno
xchg
cmp
lea
inc
scas
xchg
into
xor
fistps
loopne
add
pop
push
imul
jae
mov
dec
push
enter
icebp
es
sarl
push
lret
shll
popf
in
cmpsl
sbb
ja
shlb
setge
sbb
mov
or
xor
mov
mov
test
mov
sub
fsin
lock
aaa
xor
sbb
iret
cld
jecxz
or
cli
mul
ss
push
jle
dec
xorb
sbb
xchg
dec
loopne
mov
jg
xchg
faddl
pop
inc
mov
ret
pop
iret
int
call
and
mov
clc
insl
iret
jnp
mov
push
cs
pop
push
mov
sbb
ret
inc
inc
xchg
xor
dec
and
mov
pushf
mov
push
jle
packsswb
imul
cmp
xchg
sub
pop
mov
lods
and
mov
dec
cmp
jge
frstor
inc
cltd
mov
xchg
xchg
imul
scas
je
pop
jns
mov
push
mov
fstpl
add
xor
les
test
aaa
push
xor
dec
mov
into
mov
jbe
push
les
adc
cwtl
loopne
inc
cmpsl
jbe
mov
cmp
fdivrl
xchg
fldcw
sahf
pop
jae
cmpsl
mov
pop
mov
sti
mov
repz
outsl
cmpsb
pop
into
and
mov
mov
mov
pop
and
cld
ds
ret
cltd
aad
adc
fmul
nop
pop
adc
adc
cmp
cmpsb
in
mov
cwtl
jge
sub
movsl
dec
mov
add
mov
pop
cwtl
cmp
ss
scas
add
and
sub
std
xchg
pop
mov
mov
push
dec
mov
aad
sahf
enter
pop
ror
scas
das
dec
inc
mov
subb
sbb
cmpsb
roll
pushf
ljmp
inc
aaa
sub
pop
cmp
in
adc
pusha
xor
adc
insl
shll
xchg
stos
sub
cs
sub
dec
movsb
push
rorl
aad
int
xor
sbb
xor
inc
lods
mov
and
lret
test
fs
aaa
cmpsb
mov
out
aas
dec
xor
push
movsb
shll
sbb
jns
cli
lds
sbbl
pop
cld
inc
inc
loope
scas
in
punpckhdq
cmp
xchg
leave
push
lcall
or
cmc
adc
cmp
adc
mov
mov
sbb
xor
adc
push
add
xchg
aad
pushf
adc
int3
aas
push
mov
mov
fadds
in
dec
and
nop
iret
hlt
inc
lret
cmp
aad
insb
into
add
cmp
xchg
mov
cld
je
or
and
popa
xorl
fdivrp
out
and
scas
cld
scas
fistps
add
xchg
fbld
dec
and
leave
mov
cmp
pop
adc
push
aas
js
mov
test
aad
cltd
mov
rcll
inc
pop
push
adc
mov
sbb
and
std
test
mul
imul
gs
jo
push
sub
and
sti
adc
sbb
popaw
mov
sbb
push
add
loop
sbb
push
in
push
inc
adc
pop
int3
lods
jbe
or
add
cmpsl
movsl
outsb
shl
je
jns
rolb
push
repz
jno
adc
pusha
mov
jl
stc
insl
mov
dec
mov
aam
xor
sub
js
xchg
mov
das
cmc
mov
pop
mov
mov
in
hlt
or
mov
lcall
pop
and
mov
lods
aaa
lods
ficoms
ret
dec
les
pushl
sarb
push
lods
shrb
mov
xlat
dec
cmp
xor
sbb
cli
xchg
xchg
nop
jo
les
arpl
sbb
nop
das
in
dec
sub
jp
js
jbe
mov
xchg
inc
cli
aaa
imul
inc
in
jge
cmp
mov
stc
xchg
aaa
sbb
sbb
push
dec
mov
pop
dec
andb
jmp
out
push
lods
jmp
loop
cmp
sbbl
add
sub
jo
xchg
dec
decb
pop
mov
jns
sbb
add
or
icebp
popa
cmpsb
nop
push
std
aas
out
lods
cmpsl
mov
jbe
push
xor
test
pop
push
push
cmpsl
sub
pop
cmpsb
push
lahf
mov
dec
out
loope
mov
movsb
aad
fdivl
mov
jae
stc
xchg
inc
std
inc
ds
mov
je
stos
aam
rclb
rsqrtps
mov
inc
add
ret
mov
movsb
pushf
popa
xor
cmp
notl
push
push
popa
rcrl
roll
inc
xorl
push
call
and
clc
pop
add
push
dec
jnp
js
pop
adc
mov
lods
cmp
jmp
hlt
xor
test
iret
push
nop
mov
xor
stc
and
mov
into
adc
mov
fstps
call
push
in
sub
pop
mov
mov
mov
frstor
in
leave
cmp
nop
pop
add
aas
imul
fnstsw
cmp
dec
pop
cmc
stc
pop
and
fucom
lret
ljmp
xchg
cli
xor
dec
sti
jne
add
pop
adc
sub
lds
fists
and
inc
xor
cmpsb
andb
push
jns
push
stos
mov
in
push
cmpsl
inc
clts
test
jnp
adc
sub
mov
sub
enter
push
add
cmc
cmp
dec
mov
sarb
and
fs
pop
jne
mov
test
cmp
push
lods
or
xlat
push
jbe
insl
xchg
xchg
add
xor
lea
pop
arpl
insb
sub
rcll
es
sub
mov
sbb
sub
jo
bnd
setb
mov
stos
imul
or
or
xlat
sbb
fs
dec
sub
mov
int
dec
ret
adc
jnp
in
adc
and
add
mov
fstp
repnz
popa
imul
incl
lcall
cmpb
stos
dec
cld
push
cwtl
pushf
imul
rclb
jp
mov
inc
sar
pop
outsb
fbld
jp
inc
rcr
cs
loopne
aaa
loope
call
pop
pop
push
or
lret
sti
push
shrl
xchg
jge
xor
cmp
jo
xor
cmp
jmp
mov
iret
sub
addr16
xor
divb
int3
mov
clc
mov
rcll
es
scas
cmp
mov
scas
cmpsl
inc
add
push
xchg
jns
cmp
out
in
je
sub
sbb
cli
jno
jns
fildl
fisttpl
adc
push
in
test
int3
dec
imul
lcall
stos
cmp
jp
jg
dec
or
jle
sbb
and
test
dec
in
ficomps
enter
sub
inc
inc
mov
out
popf
or
outsb
cmp
int3
stos
mov
inc
cltd
repz
push
mov
inc
adc
add
or
call
pop
rol
push
xorb
ja
fsubrs
push
aas
adc
ja
adc
sbbl
sarl
mov
ficoms
dec
mov
testl
xor
xor
sar
pop
adc
je
mov
rol
pop
mov
fdiv
pop
xor
ja
dec
add
and
push
sub
xchg
out
aam
pushfw
movsl
in
ss
and
inc
inc
inc
and
cmpsl
ret
repz
xor
mov
jns
daa
enter
xor
xor
mov
sbb
iret
aad
inc
cmpsb
test
jae
mov
cmpsb
hlt
xchg
lock
loope
stc
mov
mov
pop
scas
lret
cmp
sub
hlt
in
in
movsb
adc
xchg
cmpsl
aam
jle
inc
dec
cmp
dec
lods
rolb
out
cwtl
arpl
test
les
shrb
and
stos
fs
out
fcompl
add
pushf
sti
mov
fdivrp
jns
test
pop
push
in
in
lret
pop
jge
mov
mov
sbb
std
xacquire
fnstcw
cmp
pop
addr16
incl
xchg
dec
cmp
or
lahf
dec
mov
xchg
jbe
movsb
sti
jne
add
lock
cmp
flds
lcall
fisubs
into
jle
push
idivl
mov
insb
and
pop
pushf
mov
notb
xchg
enter
aaa
pusha
inc
popa
clc
pop
xor
add
dec
push
movsl
xor
push
inc
mov
mov
mov
jl
cs
xor
loopne
cltd
fimuls
ja
lahf
push
add
cld
iret
sub
cwtl
cmp
and
xchg
sub
pop
sub
mov
into
sahf
hlt
cli
xlat
adc
push
xchg
dec
add
shlb
cmpsb
sbb
mov
and
push
pop
pop
xchg
pop
repz
mov
cmpsl
mov
nop
outsb
jmp
sbb
in
xor
mov
aaa
sub
pop
andl
fldenv
bound
adc
cmp
leave
jmp
push
xchg
stos
adc
and
vmovntps
jg
xor
lock
sub
mov
adc
mov
push
push
pop
dec
arpl
repnz
push
cwtl
mov
xorl
mov
bound
mov
fdivr
shll
xor
jnp
loop
out
sbb
aaa
test
lea
sub
rcrb
push
adc
stc
fsubrs
and
iret
xor
mov
js
and
hlt
filds
xlat
adc
push
arpl
test
inc
outsb
pop
mov
pusha
or
add
and
xor
psubusb
ret
loope
or
adc
je
sbb
mov
repz
mov
lock
pusha
cmc
lea
adc
jmp
test
movsl
cmp
push
jne
push
sbb
lahf
push
mov
mov
push
arpl
xor
jae
aaa
out
xchg
loope
fwait
test
jmp
or
and
pushw
cmpsl
into
incb
cs
mov
push
pushf
mov
and
shlb
xchg
popf
flds
movsb
inc
test
push
or
ret
mov
mov
pop
clc
clc
aas
pop
cmp
sbb
push
mov
or
mov
in
adc
dec
xchg
or
mov
leave
sbb
add
outsl
nop
stc
sub
push
repnz
and
loopne
lcall
jae
loopne
sarb
ror
shrb
shrl
lods
adc
sbb
gs
jmp
cmp
sti
fisttps
jl
mov
ffreep
jo
sbb
loop
add
pop
mov
cmp
fmul
jmp
jb
jle
pop
push
inc
xchg
inc
dec
inc
cmc
add
and
xchg
psadbw
movsl
daa
out
or
test
cli
jle
jp
mov
sbb
adc
push
mov
addr16
loopne
stc
js
lods
cmp
orl
stc
push
inc
nop
clc
negl
ljmp
out
inc
add
xor
jp
xor
shlb
inc
daa
mov
xor
lock
outsl
mov
xor
shl
jnp
jnp
cli
js
mov
jno
and
cmpl
js
scas
ja
aam
into
xchg
push
sahf
andb
imul
stos
xor
fstl
das
out
fwait
in
xor
dec
outsb
push
adc
dec
cmp
mov
shrb
cmpsb
xchg
call
mov
xor
in
loopne
jnp
mov
xorb
jge
cwtl
in
xchg
in
out
psllw
add
ss
in
dec
pop
mov
bound
iret
fisubl
xchg
arpl
ret
mov
or
pop
fidivs
jb
inc
jne
subl
out
sahf
ret
movups
mov
mov
xlat
sub
rcl
fistl
xor
stos
out
sub
popa
dec
imulb
dec
adc
popf
in
inc
dec
inc
push
stc
fs
out
in
pop
je
insb
imul
loop
dec
mov
fdivs
outsb
push
push
sub
gs
cmp
addr16
icebp
dec
cmovl
mov
dec
in
repz
loope
inc
jg
movsl
pop
das
push
popa
aad
dec
push
add
out
repz
pop
movsb
inc
sbb
jg
push
jg
sub
jle
outsb
xor
mov
into
insl
xor
lea
cmpsl
pusha
loopne
sub
mov
jle
jne
daa
in
lcall
das
xor
add
jge
lret
scas
adc
dec
and
rorb
cs
dec
jae
mov
std
out
dec
int3
into
jmp
and
insb
mov
outsb
fistps
cmp
popa
js
dec
and
push
xor
sbb
dec
or
sbb
mov
push
inc
mulb
mov
and
repnz
cmp
loop
and
xchg
push
xor
cmp
adc
aas
jnp
jg
ss
sti
jne
and
inc
dec
jl
sbb
mov
dec
ret
outsb
mov
inc
xchg
test
jns
imull
jns
int3
in
ljmp
ret
push
pushl
mov
mov
jae
inc
das
shl
jge
rcl
xorb
push
mov
scas
cmp
xor
shlb
fsubrp
in
shrl
mov
pop
movsl
cmp
shlb
mov
sbb
pushf
enter
mov
inc
cmpsb
addb
cmc
lock
fnsave
inc
inc
lds
lret
dec
mov
sahf
ljmp
xchg
mov
fisubrl
cmp
das
pop
stc
ljmp
adc
xor
jecxz
in
divb
loope
push
test
ljmp
loope
leave
shrb
sbb
mov
rep
and
sub
jl
outsb
movsl
cmp
les
pop
fstps
sbb
pop
out
in
lcall
or
adc
sbb
xchg
push
loope
lods
outsb
loop
dec
inc
fildl
fbstp
adc
push
mov
popf
fstps
imull
mov
sbb
pop
push
ret
sub
leave
or
cld
inc
stos
test
push
xor
jmp
jo,pn
pop
xlat
and
arpl
out
cmpsb
adc
insl
aam
sti
mov
mov
pushf
ds
loope
pop
popa
dec
cs
std
in
loopne
dec
mov
out
outsl
cmp
jb
jge
xchg
iret
ret
push
int
lock
jp
inc
outsl
mov
cld
pop
pop
fdivrp
xchg
mov
dec
mov
inc
loope
ret
xchg
les
jge
cmp
mov
jno
nop
leave
adc
andb
inc
adc
xchg
sbb
ret
cmp
xchg
iret
xor
add
mov
sti
adc
sbb
mov
shrb
add
xor
pushf
add
inc
pop
lahf
mov
cmpsl
push
mov
jl
icebp
addb
scas
dec
add
jmp
cmp
jo
lcall
xchg
cmp
leave
movsb
flds
and
inc
arpl
orl
in
xchg
mov
mov
push
les
sarl
cmpsl
cmp
and
das
cmpsl
popa
xor
cmp
mov
fists
jne
mov
mov
push
xor
and
and
jb
repnz
xchg
out
bound
fwait
xchg
mov
aad
xchg
hlt
scas
out
subb
cli
jo
xchg
push
inc
mov
jbe
xor
repz
push
fsubrp
pop
jecxz
dec
mov
sbb
arpl
icebp
dec
jl
rcrl
fmull
adc
cmc
fcompl
lahf
or
lods
out
xor
scas
push
mov
adc
ljmp
fwait
sub
jne
or
add
cmpb
testb
lcall
and
jge
cwtl
push
mov
mov
jbe
push
inc
or
fbld
popa
je
subl
sti
enter
and
in
push
push
in
jle
push
inc
sbb
imul
stos
dec
xor
dec
shll
jge
rolb
mov
dec
into
aad
sahf
es
cld
mov
add
push
shll
subb
enter
inc
int3
jbe
pop
test
iret
aam
mov
ss
push
push
or
sub
mov
ljmp
mov
mov
sbb
mov
repnz
cmp
data16
insb
inc
dec
loopne
mov
ljmp
aam
popa
mov
sub
movsl
mov
or
mov
fcomip
pop
ja
mov
mov
dec
mov
pusha
and
mov
sub
push
cmp
movsb
pop
xchg
pop
jo
add
je
fsts
jp
lds
cmp
loopne
mov
adc
pop
xlat
gs
cmp
mov
jl
or
jnp
pop
mov
test
mov
sbb
push
cli
jp
std
repz
call
sbb
aam
xchg
sbb
pop
inc
add
and
mov
lret
jmp
or
dec
in
add
arpl
frstor
mov
mov
mov
mov
push
or
or
pusha
pusha
add
test
pop
scas
or
ds
sbb
push
push
int3
fbstp
fidivl
dec
cmpsl
cmpsl
sbb
aad
adc
ds
les
in
les
or
xor
mov
lcall
call
xchg
xlat
testl
ja
in
push
xchg
lock
pop
dec
push
xor
movsl
insb
rolb
iret
xor
movsl
mov
sub
add
jns
push
lret
test
hlt
mov
mov
dec
mov
in
out
dec
inc
dec
xor
pop
aam
mov
mov
loopne
out
adc
aas
sbb
xchg
outsl
cwtl
fsubl
imul
push
aam
or
jg
in
aad
int
loop
mov
inc
push
js
sbb
fimull
mov
int3
fnsave
mov
push
aad
xchg
insb
jnp
mov
push
inc
fists
int
xchg
pop
ja
sbbl
ljmp
cld
aad
mov
jmp
in
hlt
sbb
add
and
jo
ror
and
ds
pushf
push
xor
fwait
addr16
jne
xor
adc
js
sbb
adc
sub
xchg
jle
push
sub
dec
xchg
cmpsb
cs
mov
inc
xlat
lret
jb
mov
xor
or
frstor
cmp
in
lcall
outsb
ret
insb
insl
mov
dec
fwait
addr16
in
push
fsts
dec
in
call
div
outsb
or
inc
xor
and
add
xlat
rclb
inc
cli
cwtl
xor
mov
or
or
inc
fwait
stos
jl
xor
or
xchg
add
sbb
icebp
xchg
mov
jle
or
inc
mov
jge
ret
push
into
aam
jp
mov
cmp
insl
xor
dec
push
out
pushw
inc
fidivs
cmp
mov
xor
jns
cmp
mov
dec
test
and
in
aam
mul
jno
mov
cmpsb
fwait
mov
sbb
xchg
and
cs
fsqrt
pop
jo
hlt
mov
in
repz
mulb
cltd
cmp
adc
xchg
subb
xchg
hlt
xchg
jae
jmp
in
adcb
inc
cmp
cmp
hlt
xor
sub
or
movzwl
js
pop
ret
cmc
sbb
pop
cmpsl
mov
loopne
test
fadds
test
or
sub
dec
sub
sbb
mov
sbb
pop
jns
pop
popa
mov
mov
fwait
pop
cmp
fimull
xor
cld
aas
mov
sbb
dec
pop
jle
xorl
cmp
or
sbb
leave
jne
xchg
xlat
iret
orl
aaa
jl
cli
push
test
lret
loop
adc
mov
jmp
xchg
or
repnz
adc
imul
pop
sub
adc
negb
cld
inc
mov
cmp
sbb
adc
pop
add
inc
rclb
jp
fwait
mov
inc
sbb
and
dec
push
out
xor
test
imul
push
fldcw
pop
pop
xor
push
hlt
popa
mov
fwait
pop
cld
add
jge
push
stos
sbb
nop
adc
scas
push
jl,pt
inc
fsubs
xor
pop
mov
jo
test
mov
dec
adc
xor
int
jge
movsl
daa
xorl
lahf
les
mov
jmp
lret
outsb
popf
ror
jecxz
sbb
fs
sbb
into
dec
pop
call
mov
lods
lods
xchg
adc
int
dec
sahf
loop
and
and
out
mov
int
negb
movsb
push
inc
loope
test
mov
fcompl
in
xor
stos
add
cld
es
repz
lods
cmpsl
add
test
fstps
mov
xchg
lods
insb
bound
loop
icebp
cmpb
insl
jmp
pop
cmp
xor
hlt
mov
out
mov
mov
in
lahf
push
mov
loop
and
notl
loope
das
shll
inc
push
push
clc
cmc
ss
nopl
stos
push
cwtl
mov
sbb
xor
lock
stos
mov
jle
mov
mov
sarl
pushf
imul
add
cltd
cmp
inc
mov
dec
push
and
pop
and
dec
push
dec
mov
inc
fidivs
imull
fisttpl
sahf
dec
test
shlb
dec
mov
cmp
jb
pop
push
scas
push
xchg
pop
jmp
xor
popa
and
xchg
movsl
adc
xor
add
cmp
mov
sti
mov
mov
imul
jbe
lret
out
and
mov
push
and
mov
mov
or
cmp
out
test
sub
cli
fisubrs
lret
adc
inc
push
stc
and
adc
adc
in
stos
dec
imul
cmp
loope
pop
rorb
adc
mov
mov
pop
shll
mov
pop
push
xor
or
mov
fs
rcrb
mov
cvtps2pi
pop
inc
test
sub
pushf
cs
cwtl
ja
push
addr16
xchg
jl
jmp
lock
add
jmp
mov
mov
test
hlt
icebp
arpl
test
and
punpckhdq
popa
shrb
outsb
fimull
xor
cmp
gs
jmp
fwait
popa
inc
cmp
test
aaa
dec
adc
xchg
loopne
cmp
dec
jmp
testb
dec
in
fwait
mov
and
repz
stc
adcb
es
sbb
in
ret
ds
movsl
dec
es
sarl
lahf
test
pusha
xor
jge
scas
mov
cmpsb
and
data16
pop
cli
ffree
cmp
dec
or
fs
call
adc
mov
adc
in
mov
jge
push
lods
sub
lahf
std
jne
scas
mov
insb
out
mov
imul
jg
outsl
loopne
jmp
lea
mov
lea
dec
mov
enter
jp
lods
out
fisubs
pop
adc
push
push
sub
sarl
mov
in
lcall
int
xor
jb
fidivs
pop
gs
inc
or
xchg
pop
std
push
or
sbb
sub
out
pop
push
mov
sti
push
jge
lock
aad
adc
sbb
fsubrl
cmp
rcll
xor
and
add
arpl
push
inc
idiv
stos
dec
outsl
mov
jns
cmp
jmp
pushf
xor
outsb
fnstenv
pop
cmpsl
cmp
rcrl
mov
mov
adc
jecxz
mov
adc
pop
add
and
jne
ljmp
bound
mov
cmp
sub
xchg
mov
mov
inc
bound
fisubrs
sbb
inc
hlt
xchg
mul
sbb
push
ljmp
cmp
stos
clc
sub
aad
dec
dec
fsubrs
mov
shrl
js
add
incb
adc
repz
pusha
shlb
xor
lcall
in
inc
mov
push
add
insl
icebp
negl
and
dec
pushl
scas
cmpb
orb
popa
les
out
je
xor
inc
outsb
sahf
add
dec
adc
xor
cmpsl
in
pop
cmpsl
enter
popa
inc
es
popa
inc
out
push
lret
aam
xchg
aaa
inc
inc
fisubs
jb
mov
mov
out
add
aad
xchg
push
pop
xor
or
sub
pop
loop
out
insl
xchg
fmuls
gs
adc
scas
popa
movsl
enter
xor
inc
add
pop
push
pop
add
enter
rcrl
out
mull
repz
hlt
scas
stos
push
leave
data16
cltd
mov
or
jno
dec
cli
sbbb
mov
fsubrl
icebp
cmp
cmp
jmp
fisubs
pop
negl
sub
or
sub
xchg
aam
sti
fwait
push
xchg
push
iret
out
mov
or
jne
sub
lds
push
out
xor
dec
pop
bound
or
push
call
aad
xchg
stos
mov
mov
xchg
gs
dec
hlt
xchg
fmulp
inc
jbe
push
dec
pop
aaa
test
aaa
jge
dec
dec
aaa
shrb
pop
xchg
cmpsb
test
shrb
cmp
in
push
pop
dec
loope
mov
stc
pop
jns
xor
sub
lcall
dec
add
sub
jle
sbb
or
adc
test
sub
adc
push
xor
ret
add
xlat
and
and
ds
scas
lock
pop
std
hlt
movsb
gs
ss
jmp
inc
and
jecxz
cmpsb
xor
xor
sbb
cmp
adc
into
add
add
test
dec
inc
dec
or
icebp
scas
mov
pop
sbb
sti
in
mov
mov
andl
jle
pop
and
jno
adc
or
jae
scas
ljmp
sbb
xor
cmp
cs
pop
repnz
push
pop
pop
jg
fmuls
fmull
sbb
mov
cli
dec
rorl
mov
xchg
add
jmp
push
sub
sub
sub
mov
cmp
loop
pop
cmp
jecxz
cmp
xor
inc
ss
mov
and
lock
subl
mov
mov
xor
push
pop
fwait
lret
fcomi
xchg
sbb
add
mov
cmc
mov
dec
popa
bound
enter
lds
xchg
int3
pop
arpl
push
mov
fnstenv
roll
xchg
sbb
in
push
add
fcompl
sbb
cli
jp
xor
scas
pop
sarb
adc
loop
pop
fldenv
rclb
jo
js
sbbb
insb
lret
jmp
or
inc
pop
xchg
jo
lret
adc
inc
loopne
sti
adc
and
mov
std
sahf
mov
lods
xor
outsb
add
mov
int3
jecxz
decl
es
dec
pop
mov
mov
fnstcw
or
mov
cmp
enter
cli
mov
lea
adc
aas
outsb
insb
mov
sbb
movsb
cltd
jp
mov
mov
mov
mov
stos
and
cmpsl
sbb
and
outsl
jmp
dec
pop
loopne
stc
pop
jg
shrl
mov
inc
cli
cmp
shll
mov
arpl
mov
add
inc
xchg
lds
push
xor
loope
out
adc
xchg
pop
sub
pop
xchg
mov
les
outsl
or
jmp
out
push
inc
jge
pop
imul
xchg
pop
jecxz
add
mov
lret
jl
filds
movsb
jge
out
cmpsb
pop
rcrl
repz
adc
push
aaa
pop
pop
std
addr16
aad
pop
xchg
fdivs
jg
add
xchg
js
sbb
jecxz
les
jp
cltd
inc
sbbb
je
int3
add
out
loopne
mov
movsl
jecxz
jecxz
sub
ror
call
push
test
dec
repz
mov
icebp
decb
out
cwtl
push
jns
clc
mov
adc
sub
test
xchg
sbb
xor
mov
inc
sti
js
pop
inc
out
push
mov
mov
push
dec
push
and
ja
pop
dec
shlb
add
jmp
loope
jno
shr
shll
mov
jle
test
inc
sbb
xchg
inc
mov
jb
ret
xlat
sarl
xlat
scas
xchg
jmp
test
loop
pop
sub
pop
lahf
or
sub
inc
cmp
pusha
clc
in
and
js
and
inc
jo
inc
or
das
aas
lock
repnz
test
jo
dec
add
imul
subl
mov
push
je
fcoms
je
mov
or
jmp
cmpl
dec
mov
push
enter
or
xchg
out
fistpl
xlat
fbstp
lret
sbb
adc
push
jle
sub
jb
adc
cwtl
ror
incb
mov
in
jae
lret
cmp
inc
mov
lret
fcomip
mov
sti
loop
in
lahf
adc
or
cmc
insb
aad
pop
and
shrl
sub
lret
xchg
xchg
sbb
pop
fisubrs
mov
sub
push
jge
sti
sub
add
pushf
fstl
push
sbb
std
mov
xchg
sbb
pusha
out
scas
push
rcr
push
sbb
outsb
push
push
jge
popf
lcall
lea
inc
inc
push
mov
dec
rolb
jg
in
inc
mov
nop
fbld
aad
dec
lods
xchg
ficoms
cmp
dec
cmp
shll
in
call
jg
push
xchg
loopne
rol
fcmovnb
adc
out
adc
xchg
dec
cwtl
push
push
sub
stos
mov
in
aaa
adc
stos
sub
negb
jmp
cmc
inc
outsb
pop
dec
into
testl
out
and
inc
nop
stos
jg
in
cmpsb
jae
repnz
sub
mov
out
faddl
add
enter
cld
iret
sub
pop
fwait
adc
shl
es
jecxz
in
aaa
and
push
push
jbe
xor
scas
jno
push
data16
imul
push
pop
or
inc
imul
pop
pop
sbb
push
cmpsl
movsb
xor
icebp
xor
mov
jae
pop
enter
adc
push
mov
push
push
test
xchg
adc
jmp
int
shll
adc
fisttpl
int3
xor
sbb
mov
cmc
lahf
pop
pop
cli
test
ds
in
mov
xor
xchg
lods
jg
lea
push
sbb
dec
xor
icebp
ss
sbb
jle
movsb
xchg
xchg
pop
aas
cmpsb
addr16
cwtl
and
or
les
cld
insb
int
repz
aad
aas
jecxz
jg
or
fimuls
xor
aas
push
or
jle
mov
adc
and
mov
xchg
and
jge
cmpsb
cmpb
mov
or
adc
jo
fmull
mov
addl
mov
push
testb
add
jno
pop
dec
out
rolb
in
popa
das
pop
adcb
adc
xor
dec
cmc
rcrl
mov
pop
jo
jge
sbbl
mov
into
sub
pop
dec
xchg
xchg
xor
js
pop
pushf
std
popaw
pop
fidivrl
sar
or
cmp
xor
pop
mov
fimuls
hlt
xchg
and
clc
mov
cmp
adc
repz
xchg
imul
xorb
clc
sbb
mov
mov
and
dec
int3
jo,pt
mov
aas
xchg
xor
xlat
gs
jge
jl
test
mov
test
outsl
jl
mov
hlt
int3
ljmp
pop
aad
lcall
imulb
imul
out
pop
inc
jmp
jnp
adc
ds
fbstp
movsb
aas
mov
mov
in
inc
pop
or
jp
sub
mov
mov
push
insl
mov
push
out
cmp
mov
testl
jb
pop
out
xchg
sbb
fildll
stos
push
sbb
or
shlb
cmpsl
divb
sub
adc
inc
shrl
sti
add
pop
stos
sahf
xchg
push
mov
mov
aas
ds
pop
pop
jo
nop
lock
imul
jbe
sub
push
or
pop
push
outsb
repnz
xchg
xor
pop
cs
mov
hlt
dec
hlt
mov
dec
adc
xor
xor
jns
scas
cmpsb
xchg
sti
mov
scas
jg
jg
negb
fcmovne
mov
xorl
jnp
pop
clc
scas
mov
scas
daa
repnz
in
sbb
jnp
lock
jl
and
stos
push
cmpsb
movsl
sbbl
daa
rorl
push
sub
das
in
inc
and
rcrl
dec
adc
xchg
fisubrs
aam
sbb
xchg
icebp
leave
sbb
mov
add
out
repz
sub
mov
std
push
ss
mov
idivl
aad
icebp
icebp
mov
lods
loop
adc
in
ret
cmpsb
imul
ret
pop
pop
iret
imul
add
cmc
in
or
dec
out
rcll
inc
xor
mov
imul
test
test
popa
lds
sahf
les
xchg
lret
mov
sbb
mov
cmp
adc
jmp
sbb
scas
insl
gs
xchg
fstps
fwait
js
and
lcall
mov
out
rolb
dec
pop
adc
sbb
popl
scas
enter
out
mov
repz
addr16
sbbb
cmp
jecxz,pn
ss
and
sbbb
ljmp
je
in
out
xor
push
mov
push
das
mov
jle
adc
in
dec
repnz
incb
mov
testb
mov
lcall
and
inc
in
loope
stos
out
push
jg
inc
scas
movsb
mov
pop
mov
xchg
sub
xor
inc
pop
mov
stc
mov
add
jmp
aam
popf
outsl
mov
mov
scas
or
cmp
rcrl
xchg
loopne
iret
jp
inc
cmp
imul
mov
repz
or
and
mov
sub
fstps
add
mov
sub
lahf
out
idivl
add
sti
scas
popa
rorb
dec
and
icebp
in
das
sbb
xor
push
push
testb
enter
xor
sub
mov
mov
in
cmp
imul
dec
xchg
cmpsl
fwait
add
sbbl
into
loope
movb
hlt
mov
lahf
repnz
ret
jmp
pop
mov
hlt
add
movsb
sahf
mov
push
loopne
stos
int
out
insl
pop
call
adc
and
and
out
cmpsb
mov
shl
and
mov
ja
movsl
outsb
loope
jo
aam
jns
icebp
inc
insl
cld
stc
int
jns
mov
push
testl
pop
imul
xchg
movsl
loopne
mov
sub
mov
sbbl
jns
test
stc
mov
fcoms
fsubrs
bswap
mov
movsl
addl
and
add
lods
pop
lret
ja
xor
lret
lret
jno
pushf
ds
lret
fisubs
xlat
aaa
jb
pop
stc
sar
jns
fs
mov
xchg
jmp
pop
icebp
fcomip
sbb
cld
rclb
cmp
add
and
and
mov
adc
inc
inc
sbb
decl
mov
rclb
xchg
fstpt
ds
idivl
xor
fsubrs
notrack
push
pusha
mov
inc
push
ds
call
xchg
sbb
and
jae
and
xor
ljmp
jmp
clc
shll
jns
daa
mov
xchg
popa
add
xchg
out
xor
mov
xor
inc
push
or
data16
pusha
mov
iret
sub
and
pop
inc
add
jp
lret
daa
pop
push
mov
push
es
cwtl
les
fdivrs
inc
inc
lea
inc
ja
mov
popf
xchg
add
loop
mov
push
call
lds
in
insb
outsl
out
or
fldenv
sahf
mov
xor
rol
lds
sub
jo
stos
mov
jae
dec
or
lret
sbb
bound
pop
sahf
sub
leave
mov
popf
outsb
sbb
push
mov
cwtl
fs
addr16
cmp
test
cmp
push
outsb
fidivs
call
rcll
dec
push
cmpsl
jl
mov
daa
mov
mov
pusha
testl
mov
push
cli
bound
je
mov
fst
push
cs
icebp
push
xor
sub
cltd
fadd
out
jnp
and
sti
cmp
in
int3
mov
cmpsl
mov
test
in
add
sub
push
ss
fadds
push
outsb
dec
sahf
jo
shlb
pop
insl
cwtl
xor
repnz
jb
outsb
inc
jae
mov
shr
xorb
or
jb
js
cmc
xchg
add
in
jge
jmp
and
pop
lahf
out
push
inc
mov
dec
mov
mov
sbb
data16
pop
test
mov
in
mov
adc
loopne
dec
mov
mov
adc
fiaddl
jnp
or
popa
jmp
push
push
out
fistpl
xchg
daa
xor
ret
sub
sub
mov
or
cwtl
sub
jmp
sub
push
cli
pop
and
movb
sbb
loope
pop
cmpb
dec
movsl
inc
cmp
ret
mov
mov
sub
orl
mov
mov
jno
repz
daa
pusha
or
pushl
test
ljmp
out
cmp
into
cmpsb
clc
pop
loopne
or
and
pop
outsb
imul
out
adc
jge
cmp
inc
xor
pop
lods
jge
fsts
stos
xchg
push
push
push
pop
movb
aaa
ret
fistps
and
jmp
fnsave
sarb
or
inc
mov
cltd
push
inc
test
adc
jb
pop
adc
sub
rolb
xchg
cli
xor
fistps
test
mov
addr16
data16
add
jnp
push
jecxz
cld
mov
pop
mov
cmpsb
ljmp
les
inc
sbb
mov
out
cmp
dec
or
add
ret
arpl
scas
test
fnsave
repnz
jp
and
inc
imul
push
orb
xor
add
dec
inc
mov
outsl
xor
jmp
icebp
jecxz
gs
push
cld
jmp
fildl
lods
mov
daa
add
sbb
push
cmpsl
xchg
fs
je
dec
jbe
mov
call
test
rcll
jle,pt
jbe
pushf
push
xchg
and
insl
loop
andb
ds
outsb
and
adc
mov
out
dec
cs
jbe
push
push
mov
decb
rcrl
roll
cltd
pop
push
sahf
pop
adcb
lcall
cld
adc
jb
dec
mov
notl
mov
xchg
pop
dec
jns
mov
or
inc
push
mov
mov
pop
testl
fadd
jae
loopne
out
sbb
and
test
jnp
mov
jb
test
inc
cmp
push
xchg
cmp
aam
mov
mov
jbe
test
je
popf
insl
sbb
dec
dec
ret
shrl
fsubl
sbb
hlt
xor
or
sbb
stos
inc
and
mov
test
clc
pushf
fistps
push
push
or
test
lods
scas
enter
pop
sbb
xchg
in
xor
push
adc
cmpb
jmp
testl
xchg
stos
mov
add
ret
repnz
sbb
mov
stc
arpl
jbe
sub
and
mov
push
orl
xchg
aad
cltd
icebp
adc
mov
and
loope
adc
sub
xchg
and
push
aaa
aas
das
xor
and
push
push
shlb
nop
std
xlat
push
mov
add
adc
xchg
inc
and
sub
inc
ficompl
call
mov
add
pop
jbe
out
mov
rorl
pop
scas
push
or
sti
cmp
out
lods
in
xchg
rorb
or
shll
ret
xchg
iret
and
fidivl
fnstenv
mov
jno
xor
roll
push
ds
xchg
iret
cmpsb
in
jmp
push
dec
sub
push
std
xchg
movsl
push
push
ja
push
jecxz
mov
cmpsb
mov
out
insl
and
fisubs
jae
jo
mov
cwtl
add
lea
xchg
jae
xchg
push
in
scas
mov
mov
mov
mov
iret
sahf
rclb
jl
pop
daa
imul
rorl
loop
test
mov
gs
insb
sbb
fwait
mov
fsubl
ljmp
popf
rcll
adc
fstpt
ja
lods
sbb
pop
push
add
negl
inc
out
push
xchg
mov
lods
xchg
push
cmpsb
pop
fstpl
shlb
ficomps
fistpll
mov
leave
test
test
push
loopne
scas
test
xor
mov
repz
aam
fcompl
xor
cmp
ljmp
pop
xchg
push
cmpsb
in
xchg
fmull
jge
notl
adc
loopne
xlat
xchg
xor
pop
mov
repnz
inc
sub
or
not
jmp
lcall
mov
test
mov
addr16
jmp
pop
imul
testb
ret
cmp
iret
cs
jmp
inc
pop
clc
and
mov
add
rcrb
or
aaa
popf
imul
lods
call
lock
jle
mov
sbb
push
push
pop
pop
jb
pop
iret
hlt
popa
or
out
scas
and
icebp
sahf
sub
cmp
into
inc
mov
push
les
adcl
lods
push
adc
movsb
or
or
push
fs
popl
jo
lea
push
mov
mov
fwait
push
dec
outsl
adc
scas
mov
mov
xchg
imul
flds
push
rorl
mov
shl
repz
sub
adc
jle
mov
xchg
cs
cmp
cmp
dec
cmp
sarl
mov
ja
jns
cld
rolb
leave
pop
out
lods
in
jmp
push
lcall
scas
inc
aas
jbe
dec
inc
jl
sbb
mov
fnstcw
xchg
test
dec
fists
jbe
outsl
lret
mov
dec
jno
pop
push
fs
dec
popa
call
out
inc
aam
cmp
lret
lock
cli
jno
leave
inc
inc
mov
stc
aaa
dec
or
in
fadd
adc
mov
dec
push
dec
mov
and
dec
xor
cmp
fdiv
adc
mov
out
gs
lahf
cld
adc
daa
pop
fidivs
sbb
mov
xchg
cmp
mov
lock
dec
aaa
mov
popa
and
rolb
fucom
jns
adc
cltd
jno
inc
lock
aam
out
jo
mov
and
mov
pusha
push
sub
mov
sbb
jle
pop
push
loopne
mov
imul
or
cmpb
jge
jbe
mov
out
clc
add
jnp
iret
jo
test
pop
mov
inc
mov
adc
add
nop
or
hlt
jbe
fldenv
mov
cld
and
lods
sbb
pop
pushf
and
pop
jp
daa
mov
add
sahf
lret
in
pop
loop
sbb
ljmp
pop
xlat
testl
push
andb
push
mov
sahf
mov
dec
push
imul
dec
or
aam
outsb
lds
sbb
je
xchg
add
jmp
mulb
jns
push
push
fadds
xchg
xchg
dec
fs
sahf
push
push
cmpb
notl
test
inc
je
jg
aas
dec
xor
mov
jp
ljmp
aas
pop
jo
je
mov
xchg
xchg
test
loop
adc
and
outsb
mov
loop
mov
or
jle
push
in
pop
in
loop
jnp
btc
and
xorl
ret
xchg
sbb
inc
rcrb
test
in
push
incl
or
mov
test
mov
jb
fucom
mov
xlat
in
mov
popa
sbb
inc
out
sub
call
aam
inc
mov
and
test
loopew
out
push
outsl
subb
nop
or
sbb
xchg
out
dec
or
cltd
xchg
imul
and
mov
into
out
jg
push
xor
scas
fnsave
mov
sub
ja
sub
or
jns
pop
push
sub
pop
rorb
cli
in
jge
mov
pushf
jle
faddl
or
outsl
xor
pushf
pop
fwait
scas
cmp
mov
xchg
mov
cld
or
lcall
adc
or
adc
cs
test
adc
in
or
es
and
xor
outsb
sahf
pop
or
aad
mov
dec
sbb
add
xchg
mov
dec
stos
lcall
aad
cmp
jmp
or
das
ret
test
ja
adc
les
fwait
jmp
movsl
and
cli
pop
imul
cmp
pusha
sbb
fnsave
xchg
aam
lret
test
test
fs
push
dec
das
insb
sarl
imul
push
in
icebp
je
incl
mov
daa
jmp
inc
add
add
call
shr
sbb
sbb
loopne
call
cmp
sbb
mov
pop
fstps
xchg
lds
add
adc
xchg
pop
pop
xor
push
cmp
adc
in
jle
xor
mov
jns
or
pop
xchg
imul
std
dec
fiaddl
scas
loop
add
movsbl
dec
push
push
aad
mov
mov
pop
push
addr16
in
loopne
nop
shll
mov
enter
pop
sbb
add
mov
sbbl
cli
mov
in
das
xor
or
cs
je
sbb
fadds
scas
jmp
clc
gs
pop
out
sbb
pop
xchg
out
les
jp
scas
push
and
shrl
idivb
cmp
jg
cli
or
and
jns
add
and
enter
cmc
xchg
or
les
bound
and
fsubrs
jl
mov
dec
sbb
icebp
and
pop
pop
ljmp
mov
std
loopne
push
add
les
aad
imul
jbe
test
sarl
jmp
jge
mov
stos
lret
scas
sahf
fmuls
arpl
xchg
xor
sub
mov
lcall
mull
xchg
pop
aad
mov
inc
jle
lcall
in
pop
dec
inc
sbb
bound
movsl
add
mov
fistpl
out
nop
int
adc
sbbb
cmp
or
dec
lcall
popa
and
imul
rolb
xchg
sub
mov
pushf
stos
movl
cmp
je
jo
xchg
inc
imul
push
in
repz
push
std
adc
mov
jbe
cmp
and
je
fisubl
out
out
and
or
adc
jns
jns
push
popf
xchg
roll
xlat
loopne
loop
addr16
cld
leave
mov
cld
xchg
lea
jo
dec
stos
adc
or
or
xchg
fsubl
jb
and
pop
out
sub
jg
add
mov
cwtl
out
int3
sbb
sbb
jbe
pop
out
mov
push
xlat
adc
sbb
inc
push
ljmp
push
xchg
lret
adc
push
mov
nop
lahf
xor
push
sahf
dec
push
jae
jge
ret
xchg
add
cmp
lea
jo
add
lods
int3
mov
sahf
or
dec
cmp
hlt
pusha
shlb
ret
push
mov
mov
fs
xor
repnz
shlb
mov
scas
fadd
and
add
jmp
shrl
add
je
mov
fldcw
sbb
inc
mov
sbb
sub
movsl
mov
int
jmp
jno
mov
xor
mov
xor
sbb
jge
dec
inc
test
inc
movsl
mov
out
adc
lahf
in
sbb
sub
lret
jg
popl
push
test
push
lock
xor
decl
ja
mov
cmc
scas
xor
out
xchg
jmp
mov
or
icebp
addb
adc
or
push
push
test
xchg
dec
scas
pop
aaa
inc
stos
mov
jae
mov
mov
and
pop
scas
mov
mov
and
clc
mov
cmp
jl
mov
cmp
jl
mov
xchg
pop
add
inc
aaa
pop
adc
jae
xchg
in
xorl
mov
mov
das
scas
loop
or
bound
jge
es
mov
adc
int
sub
stc
test
jmp
test
mov
dec
hlt
push
mov
sub
ljmp
sbb
mov
gs
lock
in
imul
push
aaa
mov
xor
fcomp
rolb
inc
fisubl
cli
xchg
scas
imul
cld
inc
ljmp
loope
scas
or
sbb
inc
mov
loop
pushf
cwtl
icebp
stos
cmp
mov
pop
aas
adc
mov
pop
xchg
mov
je
add
push
in
adc
imul
sub
imul
insl
or
subl
fistpll
aas
mov
mov
inc
add
inc
sbb
gs
in
fs
int3
mov
test
jo
repz
cmp
dec
jecxz
push
ret
inc
shlb
jp
mov
xorb
add
mov
jbe
jae
inc
push
in
lret
xchg
xchg
mov
xlat
jl
test
mov
rorb
js
mov
outsb
push
cmpsl
sub
mov
jle
xlat
ja
lock
in
mov
jp
shl
xchg
aam
mov
clc
stc
xchg
ja
mov
loop
aad
int3
das
sub
insl
rclb
cmc
addr16
je
enter
ret
mov
inc
mov
out
mov
rorl
or
aas
data16
lahf
lahf
ret
inc
ds
into
fdivr
loopne
mov
mov
mov
stos
jbe
aas
movsb
pusha
rcll
outsl
sti
xor
cld
das
idivl
sarb
lods
and
jmp
dec
xchg
cmp
dec
cwtl
xchg
adc
push
shll
push
cmp
int
cwtl
in
stos
in
mov
cmp
inc
mov
lcall
sub
pop
sub
xchg
ljmp
fdivrp
cmp
pop
mov
mov
movsb
jb
xor
mov
xor
dec
inc
or
jns
adcl
cltd
lcall
adc
lods
and
xchg
jno
imul
mov
outsb
inc
les
leave
les
pusha
sbb
xchg
mov
mov
outsb
ss
bound
pushf
mov
iret
nop
jne
sbb
pop
lret
popf
aaa
xchg
adc
cld
loop
xchg
shll
mov
movsb
lea
xor
jecxz
or
dec
mov
xchg
sub
pusha
outsb
stos
lds
or
and
addr16
rcll
add
add
mov
lret
rolb
inc
aas
addr16
jmp
xchg
ljmp
inc
repz
inc
mov
ret
cmpsl
cli
js,pn
dec
addr16
ret
push
stos
dec
and
add
movl
xchg
push
dec
lods
repnz
negb
cmp
ffreep
mov
mov
daa
pop
ljmp
fsubl
leave
dec
inc
jb
sub
cwtl
mov
int3
movsb
ljmp
test
inc
mov
int
mov
out
ljmp
leave
lahf
gs
into
inc
or
xchg
out
call
loop
and
push
xor
push
aaa
andl
pushf
testb
pusha
lahf
or
notl
loope
push
ljmp
test
and
cmpsl
aad
insb
fwait
inc
aaa
pushf
xchg
int3
orl
mov
movsl
xchg
jl
or
mov
sub
imul
movsl
xchg
jb
rcrl
mov
sbb
sub
outsb
ja
test
fmulp
inc
loope
push
and
pop
scas
nop
xor
and
bnd
lret
adc
popf
and
jp
test
int
mov
adc
test
jp
iret
sarl
hlt
add
loope
arpl
cmpsb
out
cltd
loopne
test
xchg
scas
fwait
fs
pop
jae
in
test
sbb
sub
nop
or
mov
adc
test
test
pusha
out
cmp
xchg
push
aad
cmp
dec
xlat
ret
mov
dec
shlb
adc
push
xor
sbb
sub
subl
das
dec
sbb
out
xor
cmp
sbb
or
gs
and
mov
push
or
pop
loopne
jnp
insb
subb
in
dec
ds
mov
int3
inc
xchg
fcoml
movsb
flds
insl
mov
inc
nop
lahf
sahf
push
cld
pop
sub
push
push
subl
push
bound
lds
popa
cmp
rclb
mov
inc
fcomps
shll
fisttpll
stc
or
pop
inc
xor
mov
std
mov
and
mov
frstor
scas
subb
mull
mov
in
push
fisubs
xor
or
enter
xor
fwait
out
rorl
jo
push
push
push
mov
mov
mov
stos
or
push
jbe
loopne
js
scas
shrl
add
add
test
xchg
sarl
sbb
clc
aad
das
in
sub
ret
mov
cmc
ds
test
mov
inc
mov
cwtl
mov
test
jge
mov
daa
pop
movsl
pop
ret
push
rclb
imul
sub
jb
add
icebp
sbb
push
movsl
aas
mul
pusha
in
dec
sub
cs
cli
in
adc
out
mov
sub
xor
jno
cld
movsb
pop
or
mov
pop
cltd
leave
ds
push
jmp
cmp
clc
pop
push
fcoml
adc
cmpl
in
rolb
dec
jle
int
or
jle
lods
inc
lcall
and
adc
mov
mov
int3
roll
pop
inc
imulb
jae
jo
popf
add
push
rclb
out
push
fisubs
push
mov
cs
and
movsb
int
lods
mov
mov
sub
stos
xor
jo
xchg
xor
cmp
dec
mov
call
lret
pushf
loope
arpl
jp
sti
loope
jecxz
pop
test
mov
push
sti
inc
enter
add
movsb
stc
jnp
add
jno
push
lret
shll
xchg
dec
xchg
repz
push
jg
and
bound
or
sub
mov
inc
pop
pop
ds
pop
cmpsl
dec
in
js
imul
sarl
lock
jb
adc
shlb
imul
jmp
cltd
xchg
mov
mov
pop
cwtl
xchg
test
test
mov
out
loopne
cmp
xchg
xchg
pop
add
jo
xor
mov
js
add
test
mov
sbb
sbb
and
in
cli
jmp
mov
add
flds
mov
je
and
add
clc
pop
mov
cmp
popa
xchg
push
mov
sub
xchg
hlt
jb
insb
shr
or
cltd
es
cli
popa
dec
sbb
and
testb
mov
rorl
mov
movsl
cwtl
sbb
sbb
inc
adc
dec
cmp
push
subb
sub
gs
xchg
push
add
nop
pop
mov
inc
je
lcall
daa
ljmp
jge
add
xchg
add
push
data16
idivl
jne
loope
decl
lea
lods
sti
and
leave
inc
jge
adcb
xor
inc
stc
or
or
imul
fiaddl
cwtl
push
rcl
ljmp
testl
sub
adc
xor
adc
sbb
add
mov
outsl
add
fsubp
mov
andb
xor
dec
ja
or
xor
mov
fisubs
mov
jecxz
jl
cmpsb
test
sub
sbb
rcll
xchg
iret
fcmovnu
in
cmpsb
div
push
cmp
dec
pop
hlt
mov
in
test
cmpsl
lcall
fiaddl
push
dec
xchg
repz
jle
pusha
or
stos
jg
jge
sub
mov
push
push
negb
out
loope
rorb
lods
add
cld
scas
and
out
mov
imul
mov
xchg
xor
push
ljmp
cs
cmp
cltd
js
xor
movsb
js
add
fdivs
outsb
sbb
mov
insl
add
enter
or
lcall
imul
inc
rcrl
fcom
jb
pop
dec
es
je
fmul
push
mov
jecxz
cltd
out
adc
clc
mov
sbb
mov
sub
dec
in
dec
and
mov
into
and
and
outsb
or
cmpl
cmp
adc
shl
dec
add
es
ret
mov
lcall
in
fdivrl
fcompl
mov
int3
pop
mov
mov
hlt
or
push
xor
test
mov
jecxz
push
jo
addr16
push
imul
dec
pop
mov
in
in
inc
push
xor
fmul
xchg
repz
xchg
or
push
test
mov
pop
inc
out
loopne
je
fwait
lret
mov
shl
inc
je
lcall
pop
rorl
lods
ret
dec
cwtl
in
aaa
ss
push
bound
pop
dec
cmpsb
das
stos
mov
mov
xchg
loopne
call
mov
push
and
ret
sub
int
test
in
add
adc
repz
sub
and
mov
cmpsb
stc
fbld
xor
push
cmc
push
movsb
jecxz
add
xchg
sbb
xchg
in
dec
and
test
cwtl
lcall
ljmp
pushf
subb
or
imull
divb
jns
pop
mov
lock
icebp
loop
adc
lahf
rcrb
xchg
enter
fldt
xor
jno
stos
in
adc
jno
push
push
adc
repz
sar
cmpsb
xor
out
mov
arpl
mov
dec
jle
lea
daa
push
mulb
ud1
add
push
sub
lahf
out
out
jmp
enter
insl
add
cmp
mov
loop
add
pusha
stc
pop
jmp
inc
mov
repz
lods
sbb
arpl
and
sbb
insb
jo
pop
add
sahf
std
push
or
jno
or
push
xchg
shrb
leave
bound
int3
mov
je
mov
mov
dec
vpabsd
push
xor
pop
lret
inc
adc
leave
dec
in
pop
sbb
popf
xchg
mov
mov
or
xlat
lcall
leave
movsl
rcl
jg
fwait
sbb
fldenv
mov
push
mov
pop
xchg
aas
jmp
inc
aaa
sahf
mov
mov
sti
inc
lock
sub
and
stos
cmp
inc
and
mov
jecxz
incl
push
hlt
jne
and
outsb
aam
aaa
mov
call
std
test
adc
or
daa
hlt
xchg
lods
inc
pop
pop
dec
inc
push
pop
jg
addr16
ss
mov
jnp
into
cwtl
mov
push
sarb
cmp
in
iret
out
mov
inc
push
pop
or
push
or
sbb
mov
pop
and
arpl
aas
mov
jecxz
sahf
sbb
divl
pop
push
push
and
xor
push
jle
mov
fsubrl
jp
fbstp
jbe
add
push
aad
mov
adc
add
int
cli
int
push
in
lock
or
jge
mov
inc
mov
orb
mov
js
xchg
lcall
fs
pushf
pop
mov
mov
shl
push
aad
leave
inc
jecxz
sub
dec
scas
add
dec
push
pop
lret
imul
orl
ds
int
shlb
in
scas
sahf
icebp
xchg
mov
les
mov
cs
jns
and
adc
inc
mov
ret
pop
cmp
shl
dec
out
test
or
lods
xor
fldenv
std
push
dec
mov
movsb
loope
xchg
push
mov
popa
std
mov
inc
jmp
aaa
mov
je
mov
xchg
mov
call
movaps
iret
inc
test
pop
cs
adc
sbb
clc
jne
cltd
scas
and
xor
jae
insl
icebp
add
push
cmp
outsl
loope
icebp
add
popf
dec
jo
or
cmp
into
mov
lods
sbbb
sbb
fs
push
movsl
sub
xchg
aam
inc
add
repz
out
int
adc
rcr
xchg
jno
cwtl
ret
out
dec
scas
stos
movsb
mov
pop
mov
pop
push
xor
cmc
fldenv
out
pop
push
fsubp
rorl
mov
or
lods
push
cld
test
popf
pusha
add
movsb
gs
add
and
arpl
sbb
or
mov
test
jne
push
add
stos
adc
mov
bound
into
incl
jle
jno
jae
mov
mov
aas
sbb
jae
mov
aas
ficomps
pushf
sub
xlat
pop
pop
cmp
dec
dec
jp
cld
adc
cmp
pop
ss
in
dec
dec
test
rcrb
mov
pushw
sub
jmp
push
lret
sbb
rorb
movsb
cmp
aaa
aaa
push
and
repnz
sbb
push
outsl
insb
jge
add
jns
outsb
enter
es
dec
mov
and
add
mov
mov
imul
inc
call
scas
shlb
in
or
insl
cmp
jecxz
mov
and
cwtl
sbb
outsb
ds
pop
or
mov
mov
clc
rcrl
sbb
aam
lock
xchg
dec
mov
mov
in
aas
aad
add
pop
dec
mov
daa
dec
push
and
mov
lea
das
push
jbe
dec
cmp
push
jnp
mov
fbstp
imul
mov
mov
jge
pop
pop
jo
fsubrs
or
mov
mov
pop
ss
inc
inc
sbb
adc
sub
int3
lods
xchg
inc
mov
loope
in
xchg
jge
push
jle
mov
fldt
mov
xor
icebp
mov
leave
aas
lods
sbb
adc
adc
adcb
xchg
loope
and
pop
mov
or
inc
mov
divl
mov
jecxz
dec
jno
push
sub
push
call
test
iret
inc
mov
pusha
adcb
imul
jns
sbb
lds
xor
push
xchg
xchg
cmpsl
fwait
das
pop
push
and
inc
jns
cmp
adc
inc
mov
pop
lea
clc
sub
test
repnz
fs
loopne
stc
andb
out
mov
fldenv
nop
jle
add
out
bound
sbb
mov
sub
jp
sub
jb
push
test
push
pop
in
pop
or
scas
mov
push
sahf
insb
mov
arpl
jle
and
mov
shlb
data16
popa
out
aas
popf
and
and
pop
and
xchg
aaa
push
bnd
pop
out
mov
shl
push
push
inc
leave
inc
xchg
das
jle
cmp
add
addr16
gs
lods
or
cld
and
dec
pminsw
push
clc
and
addr16
lret
or
or
pop
dec
outsl
adc
mov
cli
push
test
insl
mov
push
pop
fld
arpl
roll
addr16
jg
dec
aam
clc
cmp
jl
enter
jg
lret
ret
les
mov
mov
mov
or
inc
cmpsb
sub
das
dec
mov
inc
push
in
xlat
dec
shrb
sbb
xor
jl
sub
push
mov
sub
jmp
mull
repz
jmp
iret
movsl
pop
xlat
xchg
mov
push
and
mov
add
mov
iret
inc
or
push
pushf
cmpsl
idiv
shll
dec
fs
jp
mov
jp
jnp
push
mov
mov
cmp
push
mov
loope
cmpsl
jmp
nop
popf
cli
xor
aam
inc
or
push
pop
imul
mov
and
out
bound
jb
out
sbb
call
call
stc
xor
mov
call
cmp
mov
xchg
inc
ja
cmp
test
cwtl
pop
lahf
jmp
ret
test
cmp
push
int
dec
sub
lcall
cltd
xor
stos
mov
scas
push
xchg
aas
stc
mov
popf
call
out
inc
push
cmp
inc
ret
inc
sbb
or
inc
lcall
ret
fmuls
fldcw
add
test
adc
mov
mov
int
mov
cmp
hlt
leave
outsl
push
hlt
xor
test
popa
insl
lods
adc
sarb
mov
sahf
inc
out
sbb
sarb
jo
lock
dec
sub
mov
adc
sbb
add
cmp
pop
outsl
dec
cld
scas
and
xchg
js
rorb
sti
and
mov
mov
fisubrl
lods
in
or
pop
mov
or
xor
xor
mov
jg
in
mov
xor
frstor
mov
push
xorb
and
cmp
push
push
xor
dec
sub
lahf
mov
jo
xor
arpl
inc
popa
repz
dec
dec
jp
lret
jecxz
icebp
sub
pop
mov
mull
xchg
sbb
xchg
jle
sbb
sti
or
fadd
adc
mov
cmp
fists
test
dec
std
mov
mov
mov
ss
adc
lea
imul
adc
mov
jno
lods
or
xor
xor
mov
push
test
test
jb
mov
ret
cmpsb
fcomps
aas
and
cld
xchg
mov
lret
xchg
fiaddl
mov
inc
addr16
jmp
roll
mov
xchg
cltd
dec
mov
hlt
imul
lcall
shl
gs
ret
dec
dec
js
js
mov
cmpb
pusha
insl
mov
das
dec
mov
pop
inc
xchg
clc
xor
jne
testl
test
dec
cmp
sbb
sbb
fisubrl
pop
in
xchg
xor
repz
pop
fsubr
dec
dec
jne
sarl
addr16
mov
out
xorb
lret
mov
sbb
gs
adc
mov
mov
movsl
or
iret
and
jbe
andl
jmp
popf
cmp
call
sbb
movsl
fistps
and
push
popa
imul
sub
fwait
dec
aas
sub
clc
std
es
cmp
or
and
bound
mov
inc
addr16
shll
xor
lret
mov
add
sbb
sbb
je
inc
mov
hlt
sahf
jmp
or
outsl
or
call
mov
push
xor
clc
dec
in
pop
dec
mov
mov
inc
test
lret
mov
fmuls
or
stos
mov
into
mov
xchg
sarl
adc
loope
sub
pop
cltd
jmp
jo
adcl
out
jo
cmp
push
jp
lret
mov
negb
jle
and
cltd
insl
arpl
and
enter
xchg
sub
pop
call
arpl
push
jecxz
leave
loop
and
sbb
shll
aad
in
fildll
xchg
jg
add
test
pop
jl
pop
inc
hlt
rcll
xor
mov
movsb
lret
dec
popw
aam
int
fstpl
rclb
inc
aas
sbb
push
xchg
xor
and
xchg
les
dec
dec
aaa
add
imul
pop
mov
in
es
popf
xor
mov
lds
sbb
dec
stos
test
aam
jp
add
mov
pop
icebp
mov
sti
sarl
cli
push
push
jbe
fs
pop
jecxz
pop
push
sbb
and
pop
mov
adc
mov
xor
test
out
push
loop
jge
push
add
mov
loopne
jl
xchg
ds
inc
inc
aas
addb
dec
mov
mov
xorb
mov
push
add
ucomiss
inc
dec
pushf
pop
repnz
sub
xorb
test
lds
andb
add
adc
fcmovnb
push
push
push
fsub
xchg
dec
mov
imul
imul
or
or
mov
int
subl
fdiv
sbb
and
cmpsl
sub
xchg
aad
sub
mov
xchg
imulb
loopne
iret
pop
jl
cmpsb
ds
dec
xchg
push
hlt
stos
scas
mov
cmc
and
xchg
jmp
adc
push
ret
jmp
cmc
push
ljmp
and
shlb
es
cmp
lds
in
push
les
mov
int3
out
shlb
in
mov
xchg
out
in
das
mov
mov
in
push
imul
loopne
jp
aam
out
lds
jnp
mov
cmp
pop
repz
inc
inc
idivl
data16
iret
test
cmp
imul
test
out
cwtl
mov
push
push
cld
mov
push
push
les
xchg
test
mov
add
push
ljmp
dec
pop
pop
xor
pop
or
adc
jns
pop
in
xorl
mov
mov
adc
pop
out
add
sub
loope
lret
loope
jbe
mov
lods
inc
clc
cmp
arpl
aad
mulb
fistpl
mov
in
mov
jae
adc
mov
sbb
mov
xchg
out
inc
sub
and
out
mov
inc
pop
xchg
cmp
out
mov
mov
add
stos
xor
sbb
das
sub
lods
int3
stos
int
ja
je
xchg
fs
rolb
pushf
sbb
cmp
pop
mov
aaa
mov
cmp
pop
lcall
push
das
clc
and
push
incl
push
leave
push
push
mov
cs
mov
pop
aam
push
adc
jae
add
int
inc
shl
push
es
leave
popf
dec
bound
xchg
jecxz
cltd
pop
sub
mov
outsl
xchg
or
or
ret
push
lea
mov
push
cmpsb
push
cltd
mov
cmp
adc
cli
filds
push
int
pop
or
insb
mov
push
inc
add
xacquire
fnstsw
sub
pop
into
stc
js
dec
xor
cltd
js
add
adc
pushf
pop
push
out
fwait
mov
sahf
sub
mov
mov
dec
pusha
push
add
adc
pop
mov
out
mov
pop
int
lahf
sbb
adc
aad
push
mov
and
ret
sub
stc
jecxz
flds
xchg
cmp
shrl
pop
arpl
in
sbb
sub
xor
sarb
js
dec
mov
mov
sbb
pop
adc
lcall
mov
xchg
cmp
xorb
pop
cmp
mov
mov
sub
mov
sub
scas
jns
ss
sbb
aam
mov
cmp
inc
out
mov
icebp
fisttpll
xlat
pop
ljmp
clc
into
add
and
pop
dec
jno
and
sbb
int3
adc
mov
jmp
in
push
sbb
push
je
ljmp
push
enter
dec
xchg
cmp
mov
pop
and
jg
cmp
add
or
notl
andb
xorl
sub
xlat
mov
fsubs
mov
pop
mov
push
enterw
jo
adc
outsb
gs
cmp
push
repz
shlb
mov
dec
test
rcrl
test
mov
adc
in
inc
sub
xchg
inc
push
popf
stos
add
outsb
fcoml
out
outsb
or
daa
lods
sti
in
and
xchg
mov
jb
fistpl
outsb
inc
or
or
mov
and
inc
pop
and
adc
xlat
jmp
lahf
aad
stos
shrl
pop
push
aas
ret
notl
mov
lock
roll
arpl
into
and
negb
xchg
stc
mov
int
add
mov
jle
outsl
rcll
pop
or
and
fdivs
jmp
jmp
subl
adc
sbbb
mov
sbb
or
cmp
enter
push
mov
fstps
in
sub
inc
add
mov
cmp
jp
add
pop
ret
js
sub
pop
jge
iret
nop
or
dec
sub
pushf
inc
or
imul
mov
dec
jno
xor
shrb
inc
jg
mov
ja
lds
and
int
out
into
insl
and
and
cmp
inc
mov
std
mov
push
jle
inc
pusha
ljmp
and
xchg
test
and
lahf
jbe
mov
shlb
jle
fldcw
lods
cltd
cmp
sti
enter
cmp
clc
mov
cmpb
xchg
push
je
xchg
fisubrs
xorl
and
movsl
pop
xchg
cmp
lock
lcall
sub
pop
movsb
push
lahf
cmp
icebp
ret
in
push
adc
jle
adc
call
pop
sub
repz
es
mull
je
hlt
cmp
or
adc
push
xchg
cmp
pop
test
or
push
sub
outsl
mov
or
jae
imul
out
lcall
das
lret
adc
add
xor
add
popf
stc
out
cmp
sbb
out
jo
xor
test
inc
pusha
mov
es
sbb
sbbb
stos
or
loopne
jg
outsl
mov
mov
pop
mov
divl
outsl
movsb
xor
push
sahf
adc
arpl
repz
cmp
sbb
enter
cs
dec
into
je
xor
and
jb
jns
scas
scas
repnz
movsl
out
jmp
sub
push
fiadds
jp
loop
ret
mov
mov
inc
sub
push
clc
mov
mov
ss
stos
xchg
inc
xchg
mov
fstpl
fcmovu
cmp
jge
xor
pop
mov
jle
mov
add
stos
mov
inc
adc
xchg
insb
out
xlat
adc
add
movsl
and
sub
xchg
mov
popa
mov
int
test
in
dec
pusha
xchg
out
inc
shll
aad
arpl
addr16
push
pop
xchg
pop
push
pop
xor
nop
je
jnp
jno
int
add
sub
into
or
xor
mov
out
lcall
mov
cs
add
cmp
cli
adcl
scas
jl
jg
xor
mov
xor
cmc
mov
cmp
mov
dec
push
sub
rcrl
movsb
dec
in
js
and
outsl
icebp
mov
add
mov
sbb
push
jo
lret
xlat
gs
sub
lcall
imul
jo
nop
mov
lret
enter
add
pop
cmpsb
out
js
xchg
scas
pusha
rcrl
pop
sarb
sbb
mov
subl
xchg
xchg
rolb
cltd
mov
cmp
pushf
dec
cmp
jo
loop
pusha
mov
mov
fidivl
push
mov
push
xor
or
out
out
mov
lret
adc
pusha
cmc
std
fldenv
lea
shr
scas
fiadds
sbb
pop
jmp
sti
adc
hlt
aad
iret
mov
push
shrb
cwtl
cmc
cmpsl
add
jmp
inc
push
stc
dec
xchg
sarl
sub
ljmp
mov
and
pop
arpl
rclb
jne
mov
in
les
pop
enter
shr
sbb
daa
adc
mov
jp
data16
cmpsb
fbstp
mov
sbb
fldcw
xor
sbb
and
outsb
dec
inc
push
movsb
push
scas
mov
sub
es
push
mov
in
call
mov
adc
ss
js
pop
lods
xor
sub
add
adc
gs
outsl
icebp
stos
push
insl
insl
jbe
test
mov
add
mov
movsb
jb
add
out
mov
hlt
in
xor
mov
inc
add
fisubrs
outsb
push
mov
aad
push
sbb
pop
mov
push
dec
loopne
clc
jb
push
out
dec
ja
adc
inc
mov
mov
jbe
xchg
lret
nop
test
sub
imul
mov
pusha
dec
add
xor
pop
inc
mov
fistl
fistl
stc
aad
cmp
mov
adc
test
scas
jmp
iret
push
movsb
jbe
sub
jl
add
fsubs
and
adc
mov
fistl
mov
pop
or
insl
mov
sbb
cwtl
xlat
mov
and
xor
loop
repz
pop
jg
adc
outsb
scas
lock
out
or
lods
dec
je
adc
popf
and
pop
mov
mov
cld
je
mov
push
test
add
xchg
rcll
outsl
mov
daa
in
out
and
dec
jnp
fistps
sub
fistpll
push
push
mov
push
cli
orl
imul
mov
mov
mov
cmp
fisubs
push
jno
test
jbe
sarb
or
aas
pop
dec
inc
mov
dec
cmp
or
xchg
jle
xchg
inc
mov
push
cmpsl
mov
jg
xchg
inc
mov
jecxz
cli
loop
xchg
mov
daa
sub
jge
addr16
mov
sbb
dec
and
mov
jns
cwtl
loop
lret
inc
repz
out
cmp
push
sbb
shrb
xchg
in
push
jne
mov
or
cmpb
push
mov
shl
ds
adc
into
jmp
fwait
mov
test
xchg
insb
push
imul
adc
mov
inc
push
mov
dec
lret
pop
popa
xor
in
xor
mov
sbb
fwait
pop
mov
or
pop
xchg
enter
jg
add
add
sar
inc
shrb
out
shrl
cmp
adc
inc
cs
movsb
mov
popa
stc
inc
xor
sub
cmpsl
lret
ja
dec
mov
ret
xchg
fistpll
mov
ret
and
add
movsl
in
insl
test
xchg
sahf
addl
out
scas
into
sbb
sbb
mov
outsl
pop
lods
mov
fcoml
shr
and
mov
dec
and
dec
fldenv
jns
leave
lahf
sbb
add
pop
repz
xchg
movsb
fwait
sub
lea
adc
call
lods
rcrb
shlb
xchg
call
pop
push
fldcw
push
std
xor
cmp
cmp
push
xor
push
gs
xchg
mov
or
mov
xor
inc
jg
inc
rcr
lods
or
mov
xor
xor
cmpsl
sbb
push
inc
adcl
push
or
scas
mov
jecxz
pop
js
fmul
in
pop
add
mov
mov
push
sahf
fnstsw
sti
adc
out
jle
aad
test
int
push
inc
fs
lock
fstps
inc
cmp
adc
and
js
xor
or
xchg
inc
sbb
and
call
add
and
and
mov
xor
outsl
sub
xchg
adc
push
loopne
lods
sub
xchg
popf
out
mov
and
pushl
and
adc
outsb
cs
mov
pop
jns
pop
popa
dec
mov
jno
sub
addr16
shld
iret
loopne
inc
add
pop
adc
lahf
sbb
pop
ud2
pop
pop
or
mov
hlt
jp
adc
dec
jmp
jb
dec
jnp
mov
rorl
adc
push
dec
mov
les
faddl
xchg
aas
scas
pop
xor
xor
rolb
sti
mov
pop
adc
ja
push
or
xchg
in
lahf
lds
enter
sbb
stos
mov
leave
inc
xor
rclb
mov
into
pop
movsb
aaa
sub
xchg
dec
xor
aam
mov
nop
sbb
lea
daa
add
lods
inc
lods
lea
push
cld
negl
mov
scas
sub
hlt
ret
pop
mov
fiaddl
call
push
lods
sbb
pushf
inc
pop
adc
mov
rcll
push
insl
inc
mov
fsubrs
outsl
dec
popf
mov
add
ds
xchg
or
repnz
jecxz
imul
lcall
decb
in
dec
addl
mov
popa
inc
sbb
out
inc
add
adc
adc
outsb
hlt
movsl
add
push
pop
aam
push
adc
js
adc
aas
data16
stos
add
sub
loop
insb
mov
mov
dec
pop
clc
mov
out
sbb
movsb
repnz
in
sbb
inc
add
sbb
shl
add
leave
flds
or
fwait
pop
jmp
cmp
dec
add
and
in
xor
jne
or
xor
pushf
or
pop
xchg
mov
aad
sub
outsb
pop
loop
xchg
mov
scas
movsl
in
mov
jp
jmp
pop
hlt
into
add
ret
aas
or
daa
mulb
arpl
push
push
adc
sub
insl
in
push
loopne
push
jbe
xlat
inc
push
rcr
mov
push
orl
add
mov
mov
xchg
ret
outsb
jle
add
fisttpl
hlt
push
sbb
fidivl
sub
jae
adc
aaa
test
rclb
das
sahf
das
mov
push
push
daa
adc
or
outsb
inc
insl
femms
aaa
out
or
mov
adcb
or
insb
adc
sub
fsubrl
push
rclb
loopne
mov
mov
xor
fcmovb
adc
cmp
sbb
ljmp
pop
icebp
sbb
ret
int
inc
or
sbbl
and
add
push
mov
outsb
shll
sub
ret
jecxz
add
xchg
cltd
adc
fistl
lods
aam
jg
mov
sbb
enter
ret
leave
jnp
mov
jo
sub
clc
dec
aam
out
push
pop
repz
scas
iret
sub
popa
mov
push
scas
mov
jp
fnstenv
stos
in
fistps
addl
test
fwait
stos
call
sbb
xor
mov
fildl
ja
dec
repnz
adc
ja
test
sub
arpl
lahf
xor
insl
xor
push
dec
mov
fs
cwtl
fnstcw
dec
sti
int
rorl
mov
clc
xor
push
mov
pop
loop
sbb
cmp
cmp
lods
jmp
push
arpl
data16
jb
add
jp
ljmp
jl
or
mov
lds
cmp
test
scas
mov
push
add
nop
cmp
je
push
jne
pop
lods
xchg
dec
mov
or
add
mov
mov
push
lds
je
mov
mov
pop
mov
dec
pop
pop
xchg
sarl
jne
dec
test
dec
repz
sub
add
sbb
fnstenv
inc
pxor
sbb
push
leave
push
jmp
jnp
lahf
mov
jnp
fmull
loop
sub
push
call
dec
iret
scas
or
js
mov
pop
gs
insl
inc
stos
or
hlt
aam
ds
sub
ror
movaps
push
fistl
inc
fdivrs
gs
cmpsb
xchg
jle
in
fs
sbb
into
test
xchg
pushf
or
jge
inc
jmp
test
loopne
repnz
out
insl
jge
cwtl
mov
dec
pop
xor
fcompl
xor
fidivl
cwtl
aaa
jle
and
sbb
subb
add
add
jns
test
movsl
xor
outsb
inc
jbe
lods
jnp
xor
cli
aas
ret
movsb
sub
push
push
loopne
les
sbb
pop
into
push
sub
pusha
lret
adc
and
daa
outsb
inc
mov
add
cmp
insl
inc
cmp
test
inc
iret
cmp
mov
loop
outsb
rcll
ja
jg
mov
and
cltd
into
mov
xchg
lds
int
mov
adc
jg
sub
jg
xor
shrb
mov
mov
mov
inc
push
add
enter
sbb
push
daa
mov
out
ja
jmp
cwtl
or
mov
inc
mov
cmp
lcall
mov
ret
xchg
jne
pop
push
out
pop
aaa
jmp
xor
lds
lock
sbb
jns
test
mov
cmp
push
sub
sahf
mov
adc
stc
scas
xchg
sbb
xchg
ja
dec
dec
jno
outsl
pop
mov
test
popa
xor
leave
add
jae
jg
aad
lock
les
or
jae
mov
add
gs
pop
push
icebp
adc
mov
dec
dec
xchg
jle
shrl
cltd
mov
int3
fisubrl
lods
insl
mov
dec
push
pop
ljmp
das
aam
adc
adc
fsts
insl
push
mov
jbe
outsl
jmp
inc
jne
cltd
push
aas
clc
mov
pop
push
sbb
xor
lock
sub
add
pop
mov
dec
pop
popa
or
jo
cs
push
std
inc
aas
jno
shlb
xor
sub
cmc
and
sbb
pop
fists
jl
add
sub
mov
aad
add
ljmp
js
and
xchg
push
dec
sbb
dec
insb
mov
leave
jbe
jg
sub
inc
stos
pop
popa
cmp
xor
fwait
sahf
test
arpl
jbe
cmpsl
push
jne
aaa
or
loop
cs
xchg
pop
adc
xchg
mov
push
and
xchg
aas
xchg
sbb
lock
pusha
int3
sbb
gs
mov
rcrl
aad
in
push
cmpsl
movsb
jb
test
stos
repz
lods
ss
cwtl
aas
push
loop
jbe
cmp
sub
mov
mov
ljmp
std
push
push
in
aam
gs
pushf
push
loopne
push
cmp
lock
or
jo
mov
sbbb
rorl
pop
loop
out
shr
cmp
lret
pop
in
add
addr16
and
jno
add
jae
shll
loop
xchg
in
fstl
cmpl
xchg
xor
mov
hlt
or
sti
pop
jp
fcom
js
sbb
cmp
and
fcmovnu
sub
xor
mov
test
cmp
inc
dec
movsb
xchg
pop
lods
cmp
ret
fidivl
pop
push
sahf
clc
xor
movsl
push
cmpsl
add
repz
xor
sti
stos
loope
mov
outsl
shlb
fldenv
cmp
jg
je
dec
inc
push
jne
jmp
ljmp
imul
popf
outsb
subb
mul
mov
aad
sbb
ds
pop
mov
mov
out
pop
or
dec
sahf
pop
out
mov
loope
pop
and
push
sub
aas
push
ret
pop
cwtl
scas
int
lds
mov
sti
add
mov
ljmp
mov
mov
push
lcall
lods
out
repnz
sti
jae
inc
aaa
int3
or
into
fwait
xorb
loopne
or
xchg
aaa
aam
dec
push
pop
cmp
cmpsl
aaa
test
and
lret
in
aas
or
data16
rorb
cmp
mov
fistpl
into
xlat
add
add
into
xchg
stc
sbb
into
jae
xchg
aad
and
mov
cwtl
sbb
or
jnp
dec
loop
lcall
cmpsb
ret
mov
mov
lret
popa
jne
lds
adc
adc
and
and
push
in
aad
sub
push
pushf
addl
loopne
cltd
jnp
xor
jnp
movsb
pop
fisttpll
pop
jo
cltd
mov
xor
adc
mov
dec
inc
outsl
testb
mov
xor
inc
testb
sub
fmull
mov
shll
insb
out
dec
jae
jns
mov
pop
frstor
adc
rorl
adcb
fdivs
add
lea
dec
adc
xchg
in
push
les
call
sub
cmp
stos
flds
ret
in
out
sti
jecxz
test
sahf
jb
xchg
jo
cmp
mov
cmp
arpl
andb
mov
mov
icebp
pmaddwd
invd
mov
decl
in
test
jb
xor
push
inc
popa
pop
sbb
insb
loope
push
jno
inc
jle
inc
pushf
mov
out
ss
mov
add
add
popf
pop
pop
adc
cmpsl
and
out
das
imul
push
pushfw
adc
mov
insl
pop
xor
sbb
leave
sub
pop
outsb
pushf
in
push
adc
jmp
mov
fisubl
out
out
rcrb
xchg
xchg
icebp
aas
pusha
in
and
aad
inc
cltd
popa
aaa
aad
lret
lahf
out
addr16
in
jmp
test
popf
leave
in
fisubrs
or
jo
mov
fsts
in
jnp
adc
aad
mov
rcrl
cmp
mov
movsl
dec
pop
pop
push
nop
sub
lea
pusha
les
into
sbb
xchg
ret
cmp
test
dec
arpl
inc
call
push
dec
fildll
jo
gs
cld
rcrl
test
add
fidivrl
xchg
inc
hlt
movsb
jb
cmpsb
repnz
shl
dec
div
sbb
testb
mov
jns
xchg
je
dec
popa
fisttpl
jne
aaa
mov
leave
je
add
cmpsb
aam
push
adc
pop
sub
ret
movsb
jl
lds
adc
fnsave
add
mov
loope
je
int3
push
dec
popf
inc
sub
inc
hlt
add
mov
or
out
bound
std
xchg
pop
sbb
mov
insl
inc
fcoms
insl
sbb
fadds
test
js
dec
adc
and
cmp
mov
stos
xchg
rcrl
ds
sti
pop
cmp
cli
je
push
sub
pushf
jp
fisubrl
cmpsl
add
adcb
shlb
vminsd
cmpsb
in
cltd
popa
fists
xorb
jge
addr16
lsl
rcr
sti
mov
orb
cmpsb
fidivs
cmp
sub
lock
xchg
das
loop
lock
sti
int
cmp
adc
sub
push
data16
movsl
push
into
addr16
jmp
mov
or
ficoms
push
in
out
leave
mov
cmp
insl
imul
pop
add
je
addb
test
ds
sbb
call
pop
test
mov
add
cmp
sbb
push
addr16
into
test
shlb
iret
pushf
adc
icebp
or
mov
daa
xor
jp
std
jae
dec
lret
mov
adc
stc
mov
ficompl
push
or
jbe
into
out
lret
pop
lods
out
in
mov
movsl
jmp
bnd
pop
into
js
std
in
sbb
jb
subb
mov
cmp
and
ret
xchg
mov
and
dec
mov
adc
pushf
jmp
mov
push
loopne
popa
push
sbb
jno
out
pop
icebp
fdivr
sbb
lcall
enter
cvttps2pi
lods
pop
inc
cld
arpl
push
adc
ja
push
aam
pusha
cmp
lret
and
xchg
push
fcmovnbe
lds
push
call
rolb
xor
fmul
repz
sbb
aam
pusha
clc
int3
xlat
shrb
aaa
repz
fsubl
into
jno
int
cmp
add
inc
sub
addr16
jmp
sub
mov
lock
fwait
mov
decl
cmp
cmp
cli
shlb
xor
inc
enter
mov
rol
sub
push
mov
fdivrl
and
push
or
dec
dec
push
insl
jl
cmp
js
mov
and
push
xlat
not
negl
jl
loop
jae
lds
push
and
add
pop
int3
sti
cmp
xchg
stos
mov
sub
xchg
add
mov
sub
push
aad
lcall
or
divl
jne
xchg
pop
inc
shr
insb
outsl
repnz
loop
setle
pusha
mov
leave
scas
test
fisttps
cmpsb
jmp
rcll
or
jge
sub
jne
jns
test
push
add
mov
enter
mov
addr16
xchg
jg
inc
loopne
sbb
pop
xchg
out
cmp
xor
test
popl
movsl
mov
xor
shrb
jg
push
inc
mov
in
cmp
dec
stos
shrl
fstl
fildll
pop
jno
sbb
add
ret
mov
dec
es
jg
push
pop
jb
stos
mov
pushf
rcrl
sub
push
jnp
jo
pop
mov
aas
xor
es
out
pop
dec
xchg
jno
push
inc
lock
adc
cmp
enter
jge
sbb
shr
mov
pop
cmp
jle
push
daa
iret
out
dec
or
pop
cmp
in
mov
sub
stos
movsl
test
add
in
add
adc
and
mov
mov
pop
xor
cmp
bnd
stc
in
shl
sbb
pop
cs
push
sbb
rcrb
outsb
sbb
aam
bound
in
sub
xchg
lods
xor
daa
hlt
pop
cmp
and
gs
je
jmpw
sbb
in
push
test
jle
cmpsl
pop
movsl
addr16
mov
ret
push
outsl
les
pop
mov
dec
and
or
sub
sbb
cmpl
pop
in
mov
push
aad
mov
test
mov
imul
adc
stc
shlb
push
sahf
mov
cmp
add
les
cs
repnz
mov
pop
pop
sarb
iret
js
or
mov
lods
mov
xchg
push
push
push
sbb
fists
pop
xor
sahf
idivb
add
push
shll
sub
andb
push
mov
cmp
int3
cmp
jnp
fwait
out
push
pop
pop
arpl
aam
xchg
movsb
dec
mov
outsb
cs
shll
fistpll
in
lock
pop
clc
fwait
and
lcall
in
mov
lods
stc
loop
js
out
mov
push
dec
js
shl
push
inc
lea
cli
adc
mov
clc
neg
movsl
or
adc
and
stos
lahf
lea
int
fidivl
lods
mov
mov
stos
int
out
xchg
xchg
out
fmull
hlt
cmp
xchg
adc
and
or
mov
adc
mov
mov
imul
imul
push
loope,pt
mov
sbb
popf
fdivrl
dec
xchg
mov
push
insl
xor
sarb
data16
js
sbb
rcrb
and
mov
mov
push
xchg
clc
mov
test
and
jb
sarb
aam
pop
push
test
outsb
jge
sarb
push
fbld
mov
adc
aas
aam
imul
jl
mov
cmc
daa
call
shll
xchg
cmp
cltd
inc
mov
es
inc
sbb
mov
repz
jo
and
jg
mov
notb
mov
jle
xor
mov
sub
push
sub
fwait
inc
dec
call
mov
jg
push
xor
jl
pop
cmpsb
or
jmp
in
gs
nop
lods
daa
cmp
incb
push
mov
out
dec
shrb
jns
push
jno
pusha
lods
stos
scas
mov
add
mov
sbb
and
rcl
ror
rcrb
sub
pop
call
cs
xor
add
xor
add
sbb
cmpsl
mov
scas
mov
xor
icebp
and
jecxz
jg
jo
pusha
test
lret
aas
adc
xor
xor
loopne
or
ss
lods
jno
scas
fcoms
sbb
add
pusha
pop
cmp
inc
loop
mov
or
stc
imul
fimuls
fstps
sbb
lds
adc
push
inc
lods
aam
enter
divb
mov
popf
cmp
mov
sub
and
sub
pop
sarb
mov
cmp
push
add
jl
cmp
add
or
sahf
mov
movsl
pop
push
or
insl
lret
test
test
aaa
into
adc
xchg
fdivrl
imul
lods
cmpsl
dec
push
mov
mov
rol
insl
arpl
cmc
mov
loopne
out
nop
inc
or
jmp
xchg
mov
into
test
adc
cmpsl
xchg
sbb
cmpsb
arpl
pop
sub
xor
add
sbb
mov
cmpb
lods
push
stc
rclb
push
inc
inc
repz
enter
cmpsb
xchg
xchg
stos
insl
push
inc
loopne
insl
insb
test
mov
mov
lret
cmp
imul
je
in
sti
negl
mov
imul
in
push
gs
mov
sub
ds
in
lret
sbb
out
and
mov
stos
and
xor
pusha
mov
cmp
add
jne
mov
mov
pop
lods
roll
bound
dec
dec
imul
mov
stc
pop
ficompl
jbe
jp
sub
enter
jns
mov
xchg
leave
mov
sbb
aad
adc
cmc
inc
jbe
fwait
cmp
stos
mov
jbe
cmpsb
stos
pop
pop
mov
inc
shll
insl
lds
pop
mov
xor
and
push
inc
push
mov
or
out
cs
push
jbe
inc
leave
jno
inc
jae
sbb
aam
or
arpl
xchg
add
lahf
dec
dec
lea
mov
lret
js
push
divb
jge
push
sub
jmp
inc
loope
and
sub
scas
stos
test
scas
adc
fisubrl
cmp
lods
pop
fdivrl
sbbb
xchg
loop
sub
mov
out
rcrl
mov
sbb
aad
sbbl
outsb
ljmp
dec
lcall
dec
insl
out
sub
testb
lret
sti
addr16
or
ret
jle
test
sbb
jne
mov
rorb
subb
add
xchg
repnz
sub
fcmovnbe
cld
or
test
std
adc
test
pop
ja
sbb
jg
das
add
sub
push
push
ljmp
lret
xlat
add
divl
hlt
sbb
pop
add
dec
cmp
lcall
sub
add
fidivs
mov
push
lock
jmp
push
lock
adc
lret
bound
ja
pop
cmp
dec
cmc
push
push
icebp
fsubl
add
into
push
jp
int
aas
mov
cmp
adc
xchg
jg
dec
xchg
movlps
adc
notl
push
loopne
fwait
in
das
lret
jmp
mov
push
shll
popf
sarl
lods
in
lods
cmp
adc
into
sub
xor
rcll
fists
mov
mov
lret
pop
sbb
ret
mov
scas
push
repnz
cmpsl
jmp
jmp
fwait
mov
add
or
sub
push
sbb
pusha
dec
into
xchg
mov
xchg
movsl
ret
jmp
or
adc
outsb
pushf
lret
xchg
roll
test
jbe
cmp
jmp
loop
test
rclb
or
in
add
cltd
pop
clc
xchg
mov
inc
pop
adc
fiaddl
out
sub
pop
mov
xor
push
or
push
mov
stc
push
rorl
push
sub
pop
insl
ljmp
fnstsw
stc
loope
lret
and
pushf
mov
mov
addr16
aas
cmp
xchg
mov
mov
mov
xchg
xor
int3
stos
cmpsb
cmpsl
xchg
stc
js
and
ror
loopne
xchg
xchg
add
dec
and
or
mov
daa
mov
mov
xchg
mov
and
jno
int3
sub
jecxz
add
jnp
fndisi(8087
or
push
rorb
add
ljmp
adc
xchg
mov
std
xchg
sub
add
push
inc
mov
sub
or
add
or
add
mov
mov
cmp
xchg
lret
push
sbb
jae
arpl
pop
aaa
loopne
loopne
sub
sar
js
mov
and
jecxz
in
inc
aas
sbbb
jmp
in
xchg
in
or
loop
sub
cli
idivb
mov
add
sub
in
xchg
jne
stc
ss
inc
push
cmp
out
bound
in
ret
jae
mov
stos
ret
sahf
add
subb
call
sti
mov
push
pop
fildl
cmp
xor
enter
insl
xchg
xor
cmpb
sahf
jg
lea
dec
out
js
jecxz
xchg
ret
lods
jno
mov
jns
test
cmp
and
jmp
movsb
in
stc
mov
call
mov
mov
sbb
data16
dec
lods
pusha
in
sbb
cmc
cmp
sub
fmuls
addps
push
ficomps
sub
ds
xchg
bound
xchg
imul
iret
out
out
inc
rcll
pop
push
arpl
loopne
mov
xchg
jnp
lds
inc
popf
fwait
out
pop
inc
ljmp
dec
mov
mov
mov
cmpsl
xchg
xchg
das
xlat
and
push
ss
test
shlb
xchg
and
push
jo
out
cmpsl
dec
std
sub
test
mov
push
xchg
mov
cmpsl
cmp
bound
ror
cmp
mov
add
add
stos
dec
xchg
andl
arpl
lods
cmc
in
scas
test
push
test
loop
jecxz
pop
ljmp
lods
cmpsl
jle
xchg
das
test
pushf
cwtl
cmp
add
cli
in
pop
aas
test
push
lcall
stc
jnp
dec
out
rolb
xor
orb
sub
or
fxch
popf
loope
sub
dec
add
pop
aaa
ror
dec
aad
shll
mov
lret
adc
scas
getsec
cmp
sbb
push
jmp
lds
push
scas
push
sbb
stos
jb
inc
mov
int
add
cmp
les
jne
lds
jecxz
xchg
fists
loope
cmpsl
sbb
in
jmp
xchg
add
pop
jb
jb
stc
insb
adc
inc
push
orb
adc
sub
cmp
and
cmp
les
jmp
repnz
data16
loop
js
jge
push
and
in
xchg
pop
sbb
inc
inc
stos
push
cmp
out
fsubs
lods
icebp
cmc
sbb
push
sbb
in
mov
and
mov
in
test
xchg
or
adc
and
inc
cmp
mov
or
lahf
je
in
push
sbb
inc
jb
push
jle
pushf
mov
or
sbb
push
loopne
ja
test
aam
push
xor
das
or
hlt
and
cltd
mov
pop
mov
sub
pop
sbb
jp
fs
dec
push
movsl
sub
push
adc
inc
inc
mov
pop
and
xchg
mov
pop
push
cmpsl
icebp
cmpl
int3
in
pushf
dec
or
xchg
stos
pop
in
push
cmpb
outsl
pushf
pop
mov
ret
push
jg
loop
dec
cltd
testl
mov
and
outsb
insl
sbb
repz
adc
stos
dec
xchg
mov
icebp
cmp
jg
pop
add
cli
push
iret
dec
aas
js
cmp
ret
sbb
adc
jecxz
xchg
jp
inc
jbe
outsb
or
mov
and
mov
jne
dec
mov
xor
mov
or
push
in
out
mov
jae
enter
leave
cmp
shrb
inc
sub
movb
dec
add
sub
pop
xor
mov
mov
gs
ja
push
sub
pop
mov
mov
jl
xorb
repz
xor
imul
sub
mov
xchg
mov
jno
mov
dec
mov
lea
fsubrs
inc
pop
popa
add
push
les
fisubrs
test
scas
xor
movsb
pusha
adc
mov
sbb
cs
je
jne
jae
lret
xchg
sub
in
mov
xchg
dec
dec
sbb
add
cltd
add
int
jl
jno
popf
cmp
xchg
cmp
loop
aad
jns
loope
sbb
push
rcl
shlb
mov
stos
rcrb
sub
popf
fs
and
in
add
xchg
je
dec
mov
and
mov
push
cmp
out
js
mov
sahf
and
adc
mov
movsl
cs
das
add
jecxz
mov
stos
lods
cltd
xchg
mov
mov
jge
jecxz
push
mov
js
jo
and
sub
aaa
cli
repz
sbbb
lcall
mov
testl
mov
pop
mov
and
jg
adc
clc
and
pop
out
sahf
subl
adc
jge
testb
xor
mov
ds
mov
and
xorl
jb
fcoms
xor
movsl
loop
jnp
je
movntq
imul
movsb
faddl
jmp
shr
scas
add
push
int
mov
dec
les
cmp
in
or
pop
shrl
cld
loopne
data16
mov
cmpsb
add
sub
aam
fisubl
in
subl
fmul
loop
ljmp
mov
push
xor
mov
lahf
movb
mov
adc
sbb
xor
adc
cltd
sub
mov
fimuls
outsl
jnp
push
xchg
jmp
and
repnz
sub
lds
jno
and
and
pop
jecxz
les
in
mov
ret
fisttpl
inc
inc
ret
add
outsb
lea
push
or
push
jmp
lret
enter
test
xor
gs
fstpl
mov
shrl
push
lds
xor
or
xchg
outsl
push
xchg
cmp
cld
dec
std
stc
xor
mov
or
mov
int
in
jns
sti
lret
ljmp
sbb
jno
xor
adc
push
mov
inc
in
push
mov
jnp,pn
in
xchg
mov
mov
push
jne
jmp
cmp
add
add
xchg
add
cld
pop
test
jg
xchg
jnp
pop
and
jne
fsts
fdivrs
scas
outsl
stc
adc
sti
call
movsl
je
scas
and
jmp
jo
std
pop
lret
jl
xchg
cmpsb
cs
shll
adc
xor
jae
push
xor
mov
push
jo
sti
stc
mov
inc
sub
pop
repnz
xchg
mov
xlat
adc
insl
mov
pop
ja
xor
mov
or
xchg
in
imul
rolb
jbe
push
and
mov
ret
push
bound
push
pop
aas
xlat
mov
test
iret
and
mov
mov
loope
lods
pop
sbb
sub
loope
repnz
pop
add
xchg
mov
pusha
add
daa
mov
outsb
scas
xchg
test
addb
push
insb
xor
stos
push
add
push
rorl
fsubrs
stos
sti
mov
aam
std
pusha
cmp
push
mov
sahf
or
mov
mov
jbe
nop
or
mov
stc
movsl
xor
or
jl
sbb
cmc
aam
mov
sub
mov
push
fsub
pop
iret
shlb
pop
xor
mov
movsl
pop
fnstsw
in
xor
mov
pop
add
aam
fs
mov
adc
out
add
cmpb
jns
lea
pop
cltd
and
cmp
out
and
adc
adc
mov
je
aas
in
ds
push
xor
dec
imul
push
andl
pop
push
call
pusha
lahf
pop
xor
sti
std
outsl
mov
mov
cmpsl
ret
dec
push
lock
in
dec
jae
or
jno
sbb
dec
dec
out
fsts
mov
das
push
lcall
or
sahf
repz
lahf
lcall
mov
add
das
insb
adc
outsl
mov
mov
mov
and
test
adc
pop
and
or
lcall
daa
test
fdivl
roll
ficomps
sahf
stos
fcmovnbe
in
mov
mov
fadd
stc
stc
push
xor
cmc
out
cmpsl
or
jb
jp
inc
sbb
enter
mov
xchg
mov
cli
xchg
pushf
aas
int
ljmp
mov
or
jnp
fcoml
cmc
scas
repnz
xchg
lret
insl
push
xchg
dec
fdivrs
enter
sbb
or
ret
sbbb
rolb
add
out
in
cmpsb
mov
or
cmc
lret
jns
jbe
pop
push
mov
xchg
loope
cwtl
push
dec
loop
adc
ficoml
push
insl
mov
imul
mov
inc
cld
int3
push
mov
loopne
popf
int
push
repz
push
iret
and
mov
lret
jne
shll
add
dec
dec
or
mov
and
icebp
sub
stos
mov
rolb
mov
adc
mov
jo
ds
mov
fdivrl
das
sahf
mov
xchg
fcmovb
dec
jp
and
sbb
adc
jl
mov
aaa
ret
data16
sbb
jle
xchg
add
push
pop
add
leave
sbb
into
jne
pusha
mov
movsb
outsb
adc
mov
out
je
dec
pop
mov
sbb
xchg
jmp
ficoms
and
fistpl
xor
loopne
jl
negl
cmpsl
int
sbb
lcall
out
push
fwait
sub
call
inc
out
les
jp
shl
cmpsl
fdivrl
xchg
fcmovnbe
add
cmp
push
cmp
push
scas
fnstsw
scas
idivb
inc
out
jp
cmp
sahf
call
jb
xor
or
out
test
and
inc
add
dec
dec
dec
adc
lahf
into
push
dec
dec
mov
add
in
mov
sbb
cmp
xchg
add
in
mov
add
cs
dec
lea
cmpsl
cld
mov
mov
adc
or
sub
stc
dec
aaa
push
push
ret
lods
mov
mov
lock
mov
repnz
frstor
jge
ficomps
inc
lods
mov
ja
xor
push
in
sbb
pop
das
in
hlt
mov
pop
pop
insb
add
roll
stos
stc
ficoml
outsb
test
xadd
int
xor
jnp
jb
je
or
jnp
ljmp
add
icebp
lods
imulb
inc
aas
adc
mov
ret
rcl
add
hlt
dec
or
mov
dec
mov
xor
pop
lods
xlat
mov
lret
movsb
sbb
mov
push
dec
pop
rdtsc
xor
div
and
cmpsl
or
pop
loope
fdivr
mov
sub
pop
sub
push
xor
repnz
lret
lea
jns
test
fwait
adc
fisttps
sub
lahf
int
and
sub
test
push
cmp
out
xor
or
inc
push
je
inc
clc
sar
jge
jb
test
jnp
xchg
negb
mov
rorl
sbb
jecxz
inc
mov
arpl
jmp
pushl
cmpsl
icebp
mov
xor
popf
inc
mov
add
mov
sbb
sub
xchg
add
and
pop
icebp
dec
jmp
jl
or
jl
int3
popa
adcl
cmp
xor
pop
dec
and
mov
xchg
jmp
push
cmp
sub
bound
and
jmp
rcrl
fwait
stos
mov
inc
arpl
data16
xor
mov
int3
ret
ljmp
xchg
dec
sub
icebp
inc
aas
add
lcall
rolb
jge
enter
test
mov
lods
sbb
insl
jnp
push
push
push
cld
push
add
movb
icebp
fcmovu
inc
jne
jns
mov
mov
fwait
jmp
daa
mov
ret
daa
addr16
cld
out
inc
in
cwtl
les
mov
pop
mov
insb
dec
push
loopne
aad
push
mov
jb
cmp
xor
hlt
jb
movsl
bnd
out
xchg
shll
test
inc
mov
aaa
bound
fwait
xchg
jl
arpl
stos
cmp
xchg
cwtl
xchg
fistl
jnp
jns
roll
push
jb
rcrl
scas
popa
or
fwait
into
push
jne
jb
cmpsb
pop
out
pop
adc
dec
mov
in
jecxz
mov
dec
add
xchg
sbb
fwait
out
adc
test
push
xor
xchg
and
pop
jmp
sbb
ret
pop
scas
mov
lods
pop
ret
pop
stos
shrb
adc
pop
test
mov
cmp
movsl
in
daa
or
pop
mov
in
outsb
ja
mov
push
sti
sub
xor
mov
mov
pop
imul
bndstx
or
and
int3
imull
or
fdivrs
in
mov
js
adc
pop
icebp
and
int
dec
xchg
fimuls
push
or
stc
fldl
mov
and
das
add
push
cmp
inc
mov
or
or
loop
mov
xchg
xor
mov
fcompl
divb
movsl
xchg
aas
imul
lods
push
popa
fbld
adc
ja
dec
add
add
fisttpll
and
dec
int3
cmp
cmpsb
mov
arpl
dec
cmpsl
data16
jle
jae
or
cmp
xor
push
cltd
jb
nopl
xchg
rorb
xchg
mov
xor
mov
inc
mov
lahf
add
push
add
push
fcmovnbe
mov
sbb
fmuls
aad
lods
fisubrl
dec
pop
bound
js
rcr
outsb
fscale
add
ret
je
mov
neg
adc
daa
mov
es
mov
inc
dec
mov
out
rorb
mov
jns
call
out
addr16
insl
cmc
fwait
jp
ror
shrb
ficomps
mov
int3
leave
xchg
inc
in
aas
mov
mulb
or
cmp
cmp
inc
dec
lods
lcall
das
ret
arpl
jae
jne
dec
xchg
popf
outsl
scas
mov
sbb
xchg
xor
cmc
mov
adc
out
pop
lahf
pop
mov
repz
dec
xor
jae
mov
mov
mov
std
xlat
imul
lods
jne
xor
jecxz
incb
sub
inc
inc
sub
jmp
inc
sub
mov
jo
jl
test
mov
push
cltd
adc
test
sbb
push
dec
jge
inc
ret
and
mov
insb
dec
mov
fisubl
dec
lret
xchg
fcoms
cli
cmc
cmc
dec
mov
popf
xchg
les
pop
stc
inc
out
sub
adc
imul
scas
adc
xor
stos
push
fwait
popf
roll
fs
push
xchg
je
scas
mov
mov
imul
int3
jne
and
adc
inc
fisttpl
sahf
jae,pt
ret
je
frstor
cmc
mov
jno
inc
jnp
fistps
fistpll
mov
dec
mov
inc
cmp
jl
cmp
lret
leave
mov
push
jns
cmp
push
scas
insl
cs
divl
addr16
hlt
sbb
lret
shr
mov
lret
lret
mov
pop
test
loopne
scas
push
xchg
inc
jno
pusha
ret
sbb
fsubrl
dec
and
push
scas
in
dec
push
dec
push
cmp
cmp
mov
inc
out
das
arpl
rol
out
incb
dec
jle
sub
les
mov
imul
les
js
inc
xor
shr
shr
dec
xchg
inc
or
dec
mov
push
je
or
test
pop
into
jg
jg
add
pushf
push
inc
and
cmp
cmp
cli
scas
call
les
clc
movsl
push
stos
sub
hlt
jle
jns
cmp
movsl
push
scas
dec
ret
in
sub
lretw
dec
dec
lahf
movsb
sub
mov
inc
xor
mov
add
dec
mov
push
cmp
ds
xchg
push
cmp
rol
fs
ds
in
cmp
test
xlat
mov
mov
sbb
adc
mov
mov
leave
cmovae
dec
enter
jns
fwait
inc
xor
sbb
lcall
pop
mov
jo
je
push
ficompl
in
lea
inc
hlt
adc
lock
or
andl
cmp
outsb
imul
adc
je
mov
or
mov
sub
mov
arpl
jle
sub
icebp
dec
pop
fldt
xchg
cltd
push
adc
push
scas
jno
or
xchg
xchg
leave
arpl
rcrl
mov
add
pop
loop
adc
dec
dec
rcrb
mov
cmp
sar
jne
xchg
push
push
lret
aas
mov
jmp
test
mov
pop
pop
pop
cmc
ret
inc
je
push
push
mov
xchg
pop
jecxz
stos
scas
scas
dec
push
pop
mov
sahf
ret
mov
mov
inc
mov
ss
inc
shrl
pusha
jmp
pop
push
xchg
cmpsl
fiadds
out
popa
mov
jmp
test
sub
dec
das
mov
xor
jae
mov
stos
inc
sub
mov
loopne
out
mov
mov
mov
shll
cmp
and
fdivrl
aaa
mov
jle
into
lods
sub
inc
or
std
vcmpps
push
adcb
int3
mov
adcb
sbb
and
cmp
test
leave
push
mov
aaa
push
enter
hlt
sub
adc
cmp
pop
mov
xchg
loop
shrb
test
scas
mov
and
pop
cwtl
or
mov
jno
movsb
inc
or
push
mov
ds
loopne
test
lret
into
enter
in
outsl
mov
lds
add
pop
push
test
jecxz
popl
jmp
xlat
int
aas
subl
out
imul
aam
cmpsb
outsl
pop
cmp
pop
and
pop
rolb
or
jle
pop
inc
icebp
ds
or
sbb
inc
lcall
mov
push
jp
ds
fistpll
repnz
in
jg
jae
rcl
cmp
adc
arpl
flds
xor
out
fdiv
mov
js
call
dec
mov
jle
dec
neg
push
jp
dec
dec
xchg
push
test
js
inc
xorl
gs
lods
out
dec
imul
inc
push
push
lahf
push
clc
and
push
popf
popa
insl
lods
xlat
loopne
shrb
cmpsl
lret
std
jg
jno
inc
imul
dec
jmp
adc
clc
lcall
inc
aas
pop
or
lahf
daa
nop
jle
nop
jno
jecxz
movsl
mov
fnstenv
fsubs
mov
push
cli
in
pop
in
push
aaa
out
stos
lods
or
sub
or
mov
sti
add
mov
clc
push
mov
dec
sbb
adc
cld
aad
jb
adc
jecxz
adc
call
mov
popa
dec
sarb
out
dec
movl
mov
cmp
xchg
in
popf
push
jecxz
das
aas
adc
push
sub
sub
mov
xchg
mov
cli
mov
or
div
mov
bound
push
mov
js
lret
mov
xor
in
clc
cmc
outsb
lds
xchg
cmpsb
adc
or
push
jmp
dec
push
mov
xor
and
jne
cmp
xchg
mov
xchg
pop
cmc
or
sbb
in
xchg
sub
call
lahf
insb
mov
cwtl
shrb
or
test
cmp
push
es
sahf
sub
loop
inc
xchg
inc
dec
sahf
xchg
mov
xor
mov
cmp
mov
int
cmpb
in
aaa
fdivrs
sahf
fdivrs
imul
cmp
inc
mov
sahf
pop
out
dec
lcall
xor
jecxz
adc
cs
loop
push
or
push
or
xchg
jecxz
cmp
daa
inc
and
adc
aad
xchg
mov
in
lret
xchg
lods
stos
loopne
add
sar
jecxz
into
and
mov
jae
jbe
dec
adc
sti
stc
mov
rcr
jp
stos
dec
mov
jl
jno
xchg
outsl
test
cmp
mov
pop
sbb
push
subb
adc
arpl
or
out
outsl
ss
ficomps
push
xchg
jmp
jge
sbb
hlt
mov
cmp
in
and
pop
jge
mov
ja
inc
lock
insb
ret
inc
mov
js
dec
mov
mov
fstpt
push
mov
xchg
add
pop
fidivl
cmp
loope
rcll
push
jmp
subb
ja
push
dec
icebp
cmc
dec
inc
pop
dec
sbbl
pushl
push
nop
sbb
inc
arpl
outsb
pop
inc
inc
dec
push
in
or
mov
fidivl
or
adc
dec
movsl
mov
push
push
add
subb
imul
or
xor
aaa
add
mov
inc
ret
stos
cmc
dec
and
inc
out
cmp
mov
call
fstpl
nop
aaa
pop
sbb
cmp
adc
cmp
xchg
fwait
movsb
jno
mov
les
out
or
push
pop
push
cmp
sbb
xchg
push
mov
mov
xchg
mov
or
loopne
int3
xor
pop
jnp
and
push
mov
mov
pop
fwait
or
mov
stos
or
fmull
mov
rcrb
out
test
cmp
or
andw
adc
jne
mov
pop
pop
xor
inc
test
mov
call
fwait
push
mov
fistpll
jmp
push
and
daa
fmulp
pop
js
add
xchg
or
scas
and
scas
push
into
mov
les
sub
adc
out
dec
mov
push
inc
mov
insb
popl
inc
lret
aad
mov
call
das
lret
jae
jmp
dec
jbe
les
dec
fs
js
repnz
or
imul
ret
adc
pop
lea
pop
fcoms
ja
mov
ret
rcll
dec
mov
pusha
dec
add
inc
xor
lret
sbb
aaa
cmp
mov
in
mov
lods
gs
out
iret
sbbb
test
xchg
lret
arpl
push
popa
cmp
inc
test
pop
ret
mov
pop
jbe
sbb
lahf
mov
xchg
pop
fsubrl
cmp
push
inc
jns
push
xchg
ficomps
jmp
mov
pop
repz
in
out
fsubrl
or
addr16
mov
insl
lock
and
mov
add
ret
fldt
mov
mov
pop
sahf
pop
out
jo
rcrl
aas
inc
fdivrs
out
jnp
jecxz
mov
scas
cmpsl
jg
lods
loop
repnz
fidivs
xor
inc
mov
outsl
cmp
push
sti
enter
pushf
cltd
in
push
add
adc
jb
cmp
jle
mov
daa
pop
movsl
jge
pusha
xchg
in
pop
mov
mov
inc
lods
mov
popa
inc
in
in
jg
lahf
popw
pop
dec
xor
pop
inc
xor
inc
icebp
in
cli
xor
dec
jo
lret
shl
out
or
clc
mov
jmp
popf
jecxz
nop
sbb
cs
loopne
ss
hlt
fildl
pop
and
and
es
jnp
pop
lods
rol
loopne
hlt
pushf
aaa
mov
clc
lahf
add
testb
roll
xor
test
dec
ror
rolb
and
loope
cmpl
pop
or
aad
insl
js
out
mov
std
adc
push
jmp
xor
push
cmp
sti
sub
fs
rol
dec
aaa
xor
jp
cltd
jl
cmp
mov
and
out
sub
xchg
pop
loopne
jno
mov
jg
sti
mov
out
mov
sbb
mov
sbbb
xor
leave
sahf
jns
mov
or
lcall
clc
or
mov
fistpll
das
orb
orb
pusha
mov
adc
pop
pop
push
sbb
and
xor
and
jb
cmp
and
inc
push
repz
fs
cmc
mov
jno
cmp
add
in
pop
in
rclb
lods
into
jg
movsb
loop
sub
sbb
sbb
shr
and
push
xrelease
sub
push
in
js
ffreep
xchg
loop
sti
imul
mov
fiaddl
out
push
mov
mov
mov
or
mov
adc
push
loop
mov
push
mov
shr
loopne
decb
je
enter
adc
js
pop
pop
fstp
pop
pop
adc
icebp
xor
lret
pop
adc
jns
aam
mov
cs
mov
es
out
dec
mov
jb
xchg
arpl
mov
sahf
adc
jnp
insl
movsb
push
add
enter
js
mov
xchg
push
mov
push
inc
mov
in
and
test
lret
cmp
add
sub
das
jo
std
sub
loopne
jo
sub
ffreep
in
inc
stos
push
aaa
imul
push
out
mov
xor
incb
pop
repz
ja
mov
jle
mov
sub
sbb
pop
xor
xchg
popf
xchg
mov
sbb
frstor
psubusb
bound
pop
add
sbb
inc
pop
scas
imul
xor
cmc
stos
fldt
cltd
mov
push
lock
flds
push
clc
mov
movsl
jne
lds
pop
out
xchg
dec
std
dec
inc
xor
fsub
xor
cld
adc
push
push
outsb
decb
pop
mov
sbb
call
pusha
psubusw
data16
push
imul
dec
shl
fsubr
in
jno
addb
inc
cwtl
dec
mov
nop
push
cmpsl
xchg
push
bound
iret
imul
iret
cmp
lock
ret
or
dec
aaa
test
jae
xor
cli
call
xchg
insl
mov
jle
and
sub
hlt
cmp
and
movsl
mov
clc
xorl
xchg
adc
icebp
scas
cwtl
dec
fmul
add
pusha
push
jp
fldl
cmpsb
fmuls
pop
mov
lret
fs
xor
sub
mov
xchg
push
xchg
ret
insb
push
jmp
sbb
ja
jl
jno
stc
es
or
test
push
sbb
xor
dec
xor
icebp
loope
dec
imul
stos
or
adc
into
inc
or
scas
cmp
pushf
push
ljmp
xor
mov
cmc
sub
xlat
rcrb
pop
add
xchg
mov
arpl
test
fldcw
jns
je
sbb
mov
ror
pop
add
fisubl
lods
shll
imul
fdivl
loope
cli
neg
into
inc
mov
mov
icebp
or
push
jp
in
fisttpl
subb
out
dec
out
cmc
inc
loope
outsb
int
dec
shrl
push
inc
fwait
push
or
cmp
andl
sbb
not
push
sub
xchg
rclb
add
sub
push
add
add
repnz
loopne
imul
int
and
xor
iret
lock
jge
jns
inc
pop
lods
fcoms
rol
out
sahf
xchg
jbe
mov
sahf
andb
aaa
cmpsl
icebp
xchg
jnp
ss
lret
lock
ret
mov
push
and
test
jl
dec
lea
inc
mov
gs
and
sbb
jp
adc
std
inc
sub
pop
adc
mov
mov
std
cmpsb
inc
nop
enter
iret
cwtl
adc
test
pop
adc
mov
out
leave
jae
adc
cmp
lea
mov
adc
sbb
out
imul
adc
xor
or
enter
inc
dec
jnp
pop
cmpsb
hlt
or
dec
pop
int
mov
push
sahf
xor
aad
push
iret
dec
or
push
movsl
xchg
and
jae
inc
push
pop
push
js
jmp
aad
test
xchg
mov
jl
add
ret
sub
adc
loopne
add
std
jae
mov
pop
cltd
mov
ret
pushf
lds
jbe
adc
fsts
dec
in
aam
or
ret
dec
xor
jl
mov
sbb
and
inc
test
sbb
clc
push
outsl
lret
inc
sub
or
insl
mov
jo
test
addr16
fistpll
ja
or
in
out
or
pushf
xchg
adc
aas
dec
test
mov
pusha
mov
jmp
add
or
out
or
adc
loop
out
mov
dec
lds
push
xor
push
subb
xchg
in
mov
jno
mov
jnp
in
bound
pop
xor
mov
scas
dec
cld
xchg
sbbl
inc
adc
popf
nop
pop
insb
dec
xchg
push
cmpsb
xchg
cmpsb
movsl
push
imul
lahf
imul
sbb
out
pop
mov
push
out
sbb
pop
std
xor
fbstp
inc
aad
add
out
cli
push
arpl
in
jns
xor
push
mov
lock
push
cmpsl
mov
movsb
negb
add
or
mov
lods
clc
jae
test
enter
and
lock
push
cmpsb
sub
inc
inc
popf
or
jg
xchg
jno
mov
mov
sub
notl
mov
mov
fucomp
loope
ficompl
cmpsb
popa
fs
mov
das
sub
into
sub
clc
cmpsb
sub
lcall
lock
cs
push
mov
mulb
or
xor
loopne
xor
jl
pop
sbb
mov
mov
cmpsl
rolb
pop
test
jge
aas
int3
push
pop
lcall
and
adc
mov
lcall
xor
jb
xlat
mov
aaa
inc
cltd
movsl
or
jecxz
cmp
jg
ret
pop
mov
outsl
in
or
pop
imul
fcoms
sbb
int
mov
xor
roll
push
adc
pop
cli
inc
call
jle
pop
aad
pushf
aam
lret
inc
fsubl
cmp
pop
inc
cmp
cmp
fwait
jbe
divb
ret
or
adc
loopne
add
sbb
bound
movsl
jo
lods
add
int3
ss
cli
daa
loopne,pt
popf
add
mov
test
arpl
out
adc
ljmp
leave
rcrb
es
push
clc
add
add
dec
mov
xchg
dec
jb
cmpsb
sbb
fs
stc
shlb
inc
in
stc
inc
adc
movsb
lods
inc
mov
shr
inc
mov
add
inc
popf
dec
dec
mov
lret
add
lods
xor
pop
ds
mov
inc
bnd
pusha
loopne
sbb
cmp
imul
mov
xchg
adc
pop
jb
nop
xorl
cmp
jecxz
out
mov
fistpll
xor
jge
jg
inc
stos
movsb
mov
mov
mov
inc
stc
fwait
test
pop
scas
and
mov
pop
cld
mov
fimull
xor
xor
into
in
cmp
inc
iret
add
aaa
add
call
test
mov
fidivrs
aam
mov
push
insb
inc
cltd
add
pushf
lret
or
pop
sub
lcall
mov
xor
arpl
or
cli
imul
add
inc
mov
sub
jp
mov
ss
cmpsb
xchg
test
xchg
push
sbbl
jns
mov
push
dec
mov
mov
add
test
fdivrs
push
iret
push
push
and
jmp
hlt
mov
xor
sarl
mov
sub
xchg
mov
push
lock
sbb
popf
insl
xlat
ficompl
sbb
je
lret
ljmp
shl
lods
or
jne
and
push
and
mov
jb
sub
adc
iret
and
hlt
lds
push
cmc
sbb
mov
in
jge
push
movsl
xchg
cld
push
and
fisttpll
stc
lcall
inc
sub
gs
mov
into
mov
pop
inc
test
dec
dec
das
sarl
mov
or
dec
mov
es
sub
daa
test
stos
rclb
movl
sahf
inc
jle
movsb
lods
fbstp
test
pop
fsub
pop
xchg
push
pop
inc
insl
idivl
mov
xchg
cmp
inc
std
xor
adc
test
mov
loope
xor
inc
loopne
xchg
sub
adc
mov
out
out
out
adc
dec
or
cmpsl
cmc
clc
cmp
data16
scas
mov
data16
test
cmpsl
dec
insb
roll
std
movsb
mov
jno
sub
jbe
add
je
addr16
inc
xorl
cmp
push
lds
daa
ficompl
int
bound
cltd
dec
sbb
push
shll
cmc
jg
in
fldenv
ljmp
push
movsb
push
enter
les
and
loop
aam
mov
jb
fmul
push
sub
sub
fnstenv
xor
jg
pushf
cwtl
ret
mov
outsl
outsb
cmp
push
imul
lcall
or
or
fldenv
lea
pop
and
lcall
pusha
push
mov
mulb
and
push
pop
dec
ja,pt
or
ret
inc
cmp
dec
lods
fimuls
xchg
data16
insb
repnz
mov
and
sbb
fcmove
mov
jg
mov
adc
mov
fcmove
pop
push
outsl
clc
out
xchg
mov
inc
mov
aad
mov
mov
aaa
mov
repz
dec
cld
outsl
lahf
adc
idiv
repz
rolb
mov
mov
outsb
flds
adc
mov
push
fistpll
adc
push
in
clc
and
mov
lcall
fnstenv
inc
pop
in
dec
jmp
nop
jl
fcompl
push
dec
scas
inc
sarl
jmp
cmp
add
and
fnsave
pop
dec
push
push
cmc
adc
or
mov
mov
or
mov
les
dec
rcl
jle
or
int
cmp
cmp
pop
lea
jg
shll
inc
popf
dec
repz
dec
and
fadd
cmpb
popf
cmp
dec
and
cs
xchg
loope
gs
push
pusha
jecxz
xchg
inc
pop
scas
fcomip
pop
in
hlt
sbb
ret
cmc
xor
popa
mov
pop
gs
in
cmp
lods
in
xchg
bound
shlb
pop
in
sti
in
pop
popl
dec
repz
out
sub
dec
mov
xchg
xchg
and
js
sbb
xchg
subl
pop
pop
jb
icebp
arpl
leave
adc
rclb
pop
push
or
sub
or
cltd
push
push
popf
out
in
scas
jns
pop
repz
or
sbb
mov
pop
out
pusha
sbb
mov
mov
cmp
xorb
lret
aas
add
lods
pop
inc
jle
in
lcall
lcall
iret
lcall
cmp
data16
xor
clc
aad
js
mov
mov
rcr
jae
lds
sub
or
lods
test
sbb
jno
shlb
je
jb
jae
fdivs
jg
lea
add
repz
push
mov
sub
mov
shrb
xchg
xchg
andb
xor
pop
out
cs
aad
add
pushw
repz
cld
mov
mov
or
sbb
push
sub
repnz
sarb
sbb
mov
cmpsb
leave
dec
in
xchg
or
fsubs
aaa
in
xor
cmpsb
cmc
add
mov
mov
sahf
orl
pusha
xchg
pop
mov
in
xor
cmp
xor
cmp
arpl
add
ret
push
shll
adc
test
lods
popf
sti
shrb
add
int3
icebp
add
arpl
arpl
test
push
xor
notl
and
fcmove
movsl
add
push
fs
inc
jp
pop
adc
je
xor
lahf
lock
mov
xchg
lea
jnp
jp
shrl
leave
mov
lret
idivl
jmp
fldl
mov
jle
inc
leave
das
push
stc
and
mov
imul
jne
push
ds
leave
adc
mov
xor
out
mull
add
stc
pop
lods
lahf
xlat
xchg
ljmp
dec
cwtl
jmp
xor
jne
dec
push
scas
iret
inc
movsb
test
push
sbb
jl
shl
fisubs
cmp
mov
sub
push
and
pop
mov
loop
xchg
mov
loopne
mov
fidivs
loop
pop
iret
cli
push
rcr
cld
jecxz
mov
out
jp
test
pop
add
sarb
mov
sbb
adc
mov
lock
bound
jmp
mov
xchg
les
divb
dec
ret
arpl
cmp
mov
push
push
xor
mov
sub
hlt
shrb
add
out
lret
and
jns
into
dec
or
push
mov
pop
sub
jl
cmp
aaa
int3
push
lahf
out
lods
dec
ljmp
in
sbb
fldl
aad
call
sbb
push
test
mov
add
push
cmp
push
cmp
xchg
mov
das
sub
lock
push
mov
jbe
mov
dec
insl
and
data16
out
mov
xor
mov
les
in
and
andps
mov
jecxz
cmp
fcmovnbe
jo
mov
jae
inc
or
mov
cld
arpl
cmc
jnp
arpl
fisttpl
xchg
cli
loop
fdivrs
sbb
xor
data16
test
cmp
popf
out
sub
cli
inc
mov
pop
mov
orb
add
jl
or
inc
jo
xor
adc
faddl
sbb
les
pop
push
lock
mov
sar
iret
outsb
daa
fs
xchg
push
adc
test
cwtl
push
mul
fmull
mov
push
xchg
inc
daa
in
sti
scas
orb
inc
mov
adc
push
cwtl
or
mov
push
push
dec
mov
push
int3
sbbl
push
pop
pop
push
jbe
pop
js
sbb
test
stos
test
rclb
dec
dec
xlat
sub
aas
fwait
cltd
push
add
jmp
in
inc
sub
pushf
mov
andb
or
out
xchg
xchg
lahf
dec
pop
xor
test
inc
mov
xchg
inc
mov
cmpsl
sbb
out
pop
dec
test
pop
xchg
mov
dec
cli
jge
outsl
movsb
mov
stc
xchg
dec
xchg
sub
mov
cltd
jb
push
fdivrl
rorl
cwtl
mov
cmp
mov
push
loop
ja
jb
movsb
lcall
push
loope
iret
ror
test
sub
call
cmp
rorl
dec
xchg
pop
aaa
mov
push
mov
jg
dec
jbe
gs
push
cmp
add
test
and
ds
dec
popl
sub
pop
inc
or
out
mov
les
aaa
xchg
sbbl
push
ror
adc
pop
sub
rolb
add
test
push
xchg
movsb
jae
sbb
xchg
or
idivl
sub
stc
loope
adc
sbb
stc
mov
mov
bound
adc
das
imul
ja
test
loop
xor
add
sbb
cmp
cli
mov
es
bound
mov
movsl
xor
clc
fs
leave
js
and
cld
sub
mov
es
sub
iret
xchg
inc
sbb
aaa
mov
jo
out
jl
cmp
pop
js
sbb
xchg
rol
or
iret
repnz
xchg
testb
xchg
push
ret
cwtl
out
lahf
sub
repz
add
xchg
mov
ljmp
push
or
or
enter
iret
dec
and
loop
jae
jnp
and
in
dec
pop
mov
cli
dec
mov
fidivrl
sub
pusha
movsb
repnz
sub
movsl
enter
stos
lock
stos
jecxz
fcoms
adc
daa
and
inc
and
cs
mov
xchg
and
jb
lock
push
in
leave
push
mov
xor
cmp
idivl
shll
iret
cmp
sbb
ljmp
pop
in
push
lret
xchg
inc
stos
xor
fwait
stc
fdivs
imul
add
les
decb
mov
fwait
mov
decl
xchg
call
push
and
cmc
xchg
std
adc
mull
sti
mull
loop
or
in
mov
or
fimull
adc
mov
roll
sub
jmp
inc
fnsave
dec
adc
inc
hlt
cs
mov
sub
stos
or
lret
sbb
lcall
xchg
fbstp
repz
pop
xchg
or
iret
mov
dec
cli
je
shll
aad
xor
adc
sbb
fldcw
add
mov
fwait
add
xor
jecxz
std
jle
mov
dec
stos
cmp
jmp
aam
mov
adc
aas
scas
lds
nop
cmp
dec
aaa
lods
cltd
in
fdivrs
stos
cmc
jle
test
dec
mov
sbb
jmp
out
iret
push
cmp
orb
mov
jp
lret
inc
out
push
mov
ret
cmp
daa
jnp
mov
dec
dec
push
or
add
push
xchg
movsb
movsb
mov
adc
movb
mov
sahf
ret
sbb
sahf
hlt
mov
or
and
xor
cmp
and
or
sub
scas
xchg
scas
adc
insb
lret
ror
add
popf
movsb
js
std
daa
out
int3
sub
insl
xchg
shl
jnp
rcll
push
dec
and
int
es
add
cmp
cli
outsb
and
ret
shll
jecxz
notb
neg
mov
stc
mov
jg
pop
xchg
lret
cmpsl
jns
add
cmp
loopne
jae
mov
addb
sbb
or
dec
xor
fsub
inc
sub
outsl
push
add
cmp
jno
bound
popa
call
jno
repnz
mov
mov
mov
push
pop
hlt
add
gs
lfs
imul
cmp
repnz
pop
add
loope
xor
int
xor
test
add
and
adc
sub
xchg
or
ljmp
sbb
lahf
mov
out
pop
enter
repnz
inc
and
add
addr16
mov
ljmp
jae
shl
pop
push
fwait
jg
repz
mov
add
pop
mov
mov
add
mov
mov
mov
repnz
addr16
xor
cmp
pop
daa
adcl
fs
or
jge
add
faddp
das
mov
enter
inc
rorb
cld
into
shll
xchg
sti
test
and
cmp
pop
sbb
call
mov
outsl
jp
sub
imul
aad
inc
mov
jne
push
pusha
sbb
aam
loopne
lcall
lret
outsb
jne
dec
iret
jl
and
adcb
les
rcrl
adc
bound
pushf
loope
aaa
lret
dec
add
push
mov
mov
ja
cmp
cmpsb
and
dec
or
mov
or
jge
mul
pop
or
dec
xchg
ljmp
fsubrl
xchg
or
xor
dec
sbb
sahf
sbb
roll
imul
inc
xor
inc
push
movsl
lds
fwait
cmc
shll
dec
sbb
jmp
dec
pop
and
inc
std
mov
jmp
sbb
ss
push
xchg
jbe
cld
dec
scas
mov
pushf
pusha
loopne
sbb
cli
mov
and
shrl
std
loop
lds
and
jb
push
ja
and
push
les
sub
cmp
push
sbb
push
subl
cli
lock
aas
dec
push
mov
scas
sub
mov
mov
jp
pop
pop
mov
mov
lock
in
mov
aaa
arpl
mov
push
sbb
rorl
lea
flds
mov
push
inc
test
js
inc
sub
stos
pop
xor
cltd
imul
pop
xchg
call
shr
jb
daa
imul
cli
adc
and
lret
cmp
aas
and
popf
jo
ret
ds
out
sub
adcl
xor
sub
xchg
les
insb
cli
jb
and
sbb
out
aad
or
pop
jge
push
fistpl
imul
or
push
stos
or
and
pushf
rcrb
stc
or
adc
inc
jbe
xor
outsb
test
nop
sub
inc
cmp
mov
dec
mov
outsb
arpl
xor
cmpb
daa
inc
test
push
jp
sub
shll
es
push
xor
or
push
sbbb
add
out
out
mov
jle
xchg
fists
or
in
cmpsb
test
dec
movntq
inc
insb
jne
sub
xchg
out
fstpl
inc
mov
add
cmpsl
push
pop
pop
pusha
add
add
mov
push
ret
movsl
out
fs
sub
mov
sbb
xor
out
lcall
push
bound
lret
push
xlat
cli
mov
pop
sbb
std
dec
inc
add
test
inc
insl
xchg
fiadds
ljmp
inc
xor
ret
jb
adc
and
in
lods
insl
imul
sub
inc
pop
fidivrs
cmp
inc
dec
aad
cmc
jl
dec
repz
mov
out
cltd
je
mov
daa
inc
jb
xchg
subb
mov
not
pushf
cmp
loop
adc
cmp
mov
cmp
xchg
je
pop
xchg
sahf
or
pop
in
leave
sbb
push
movsb
cltd
push
dec
aaa
sbb
jmp
ffree
adc
int3
int
sub
arpl
xchg
cmp
xor
cmpsl
rorl
dec
sub
mov
inc
faddl
mov
lds
movsb
int
jmp
aam
ret
xchg
in
add
rcll
push
imul
roll
icebp
jb
dec
mov
idivl
mov
aam
sbbl
jmp
inc
je
mov
xor
push
inc
pushf
cli
jle
and
add
mov
push
cld
dec
pop
mov
icebp
or
fldcw
ss
aam
pop
push
dec
jl
stos
jno
daa
iret
es
outsl
imul
pop
and
bound
dec
push
pop
les
xchg
cli
jbe
loop
icebp
mov
int3
pusha
xor
or
imul
jbe
jnp
xor
cmp
addr16
cmc
in
rolb
push
mov
xor
popa
sbb
jno
lcall
sbb
pop
scas
adc
cmp
mov
call
mov
clc
pop
in
fincstp
outsl
loope
ret
jle
xchg
leave
jge
push
int3
gs
aas
mov
addr16
je
xlat
clc
rclb
daa
fs
mov
pop
push
jge
mov
xor
mov
push
adc
enter
jnp
aam
add
xor
push
add
ds
and
shlb
clc
inc
push
nop
xlat
sbb
in
xlat
aad
call
std
dec
shl
nop
or
pop
sbb
inc
push
add
jo
rcl
jo
inc
xor
inc
pop
or
mov
xchg
mov
push
jne
sub
addr16
mov
mov
jae
cmp
enter
ss
imul
push
int3
pop
cmp
icebp
sub
divl
sti
push
push
lret
incl
insb
loopne
imul
bound
xchg
int
fdivs
mov
ljmp
out
lods
push
push
mov
dec
and
jmp
pop
xchg
sbb
fsubrs
sar
cld
xchg
arpl
addr16
scas
leave
fisttps
fs
bound
cmp
inc
stos
test
and
jg
cld
call
into
push
mov
je
jg
cmc
scas
dec
dec
sbb
ret
aad
sbb
xchg
add
ss
xor
stos
adc
or
and
cmp
mov
lock
or
pop
je
hlt
fidivrl
and
push
stc
push
repz
sbb
xor
jmp
and
int3
or
lahf
lds
cld
stc
cmc
and
scas
jo
jns
pop
mov
sti
lret
add
or
test
or
push
pop
lcall
nop
std
jg
sbb
mov
pushf
sub
addl
mov
pop
lret
ss
jb
xchg
ffree
aad
sahf
shrb
cmp
out
adc
sbb
fidivrl
sub
add
xor
pop
fldcw
enter
fcoms
push
cltd
cmp
inc
xor
ret
fcompl
push
xor
int
or
xchg
pop
fmul
sarl
pop
ds
dec
cs
test
mov
jp
pop
cwtl
inc
jecxz
jns
addl
data16
mov
aad
test
adc
cmp
out
xchg
iret
pop
cmpsl
int
adc
pop
fcom
aad
fbld
fstpl
movsl
in
aad
adc
loop
cs
sbb
or
lret
jmp
mov
push
sti
fwait
or
insb
pop
pop
rcll
mov
push
dec
push
push
pop
pop
pop
fwait
mov
jo
mov
lds
or
out
or
bound
daa
push
inc
push
lods
stos
mulb
lret
pushf
inc
sbb
addr16
add
pusha
pop
fsubrl
mov
xlat
sbbl
outsl
in
scas
adc
xor
out
xchg
add
jb
pop
lret
fldcw
mov
sub
movsb
cld
imul
xor
mov
clc
xchg
addr16
lret
loope
xchg
lods
icebp
inc
in
inc
adc
outsb
lret
mov
mov
loop
xor
fidivrl
mov
and
es
stos
pop
push
ja
xlat
jns
push
pop
mov
xchg
faddl
xor
js
inc
xor
push
out
ds
xor
mov
push
movsb
int3
out
fs
and
and
std
das
sub
out
sub
jg
mov
ds
xchg
loop
adc
mov
xchg
sbb
fisubrs
mov
jno
jae
movsb
aas
enter
lods
in
or
aas
scas
push
jl
sub
mov
insb
imul
xchg
call
adc
push
and
lds
cld
inc
jecxz
aam
pop
scas
dec
mov
nop
insb
mov
mov
ficomps
cmp
pop
imul
dec
jo
loop
fs
rcrb
sarb
sbb
adc
cmp
xor
pop
dec
mov
adc
add
push
dec
lea
push
sub
pushl
adcb
in
adcl
xchg
insb
std
pop
out
cmc
loope
lea
dec
inc
out
xor
dec
jmp
adc
jo
inc
jmp
loopne
in
pop
test
jg
xor
imul
sub
pushf
sbb
xchg
pop
lds
or
out
pop
cmp
mov
adc
or
jae
push
and
mov
or
rcrl
push
push
psubd
imul
add
int3
roll
cmp
shll
xchg
jle
jp
mov
jmp
or
inc
xchg
pop
mov
xchg
inc
mov
jne
xor
mov
xor
lret
rolb
iret
sub
daa
out
scas
push
lcall
imul
mov
ljmp
sbb
pusha
push
pushf
enter
jo
pop
inc
in
insb
mov
and
sbb
xor
xor
pop
and
xor
das
mov
iret
sbb
fwait
fs
loop
loope
insb
outsb
mov
mov
push
scas
shrl
dec
or
cmpsb
cmp
push
sub
add
or
sub
jmp
sbb
dec
xchg
jne
jo
dec
std
sahf
add
pop
cwtl
xor
adc
popf
pushf
or
pop
and
int
test
sub
fdivs
cmpb
xchg
cmp
mov
add
xor
test
arpl
pop
mov
mov
mov
psubusw
mov
das
pop
mov
ror
mov
mov
push
xlat
addr16
ret
adc
out
dec
fsts
jmp
dec
mov
xor
enter
lretw
cld
loopne
push
inc
lods
lcall
and
outsb
mov
jmp
ret
pop
jge
loop
cwtl
xor
stos
jb
cwtl
or
in
pop
push
jnp
popf
iret
inc
incl
cmp
push
lcall
jbe
arpl
loop
xlat
pushf
das
ret
sub
push
mov
pop
mov
sbbb
cmpsb
hlt
lret
push
lahf
mov
mov
test
xchg
cmp
push
pop
pinsrw
sub
sbb
cmp
mov
sbb
sub
rcr
jmp
jmp
cld
pop
xor
mov
negl
decl
xorb
imul
mov
sub
decb
sub
cmc
push
cmp
callw
rcrb
add
dec
std
lods
xor
sbb
cmpsb
mov
and
das
mov
daa
jp
mov
jg
pop
ds
imul
aaa
test
xchg
mov
fxch
add
push
out
enter
notl
xor
cmpsl
fwait
or
and
mov
addl
sbb
jnp
mov
test
nop
int3
scas
pop
addl
mov
ret
cmc
out
mov
aad
pusha
mov
scas
push
stos
pop
jnp
ljmp
in
call
outsl
inc
pop
and
test
rcrb
add
in
movsb
pop
xlat
fadd
out
outsb
add
sti
test
aas
filds
cmc
xor
sub
in
pop
lret
adc
unpcklps
inc
call
cli
testl
add
imul
orl
dec
sub
xchg
mov
pop
into
outsl
lret
dec
xor
es
test
in
fs
sbb
sbb
out
xor
sub
dec
addr16
in
hlt
cmp
sbb
mov
and
nop
test
xor
or
clc
sub
imul
xchg
fdivl
ja
xchg
or
popa
aad
jnp
lds
sub
cmp
int
ljmp
mov
push
pop
int3
outsb
cwtl
cmp
repz
jl
and
push
push
jbe
add
dec
fdivs
and
cmp
in
iret
nop
pop
cld
dec
cli
mov
jmp
clc
aam
xor
mov
sahf
fs
pop
sub
adc
lea
arpl
dec
rcr
adc
lods
fsubrs
cli
or
out
cwtl
mov
mov
push
call
jnp
sub
adc
mov
imul
sbb
mov
mov
pusha
mov
fcmovnu
scas
xor
pop
mov
in
sub
mov
xchg
stos
cli
fsubr
mov
jns
adc
pop
xchg
scas
xor
pop
mov
scas
loopne
lret
or
xchg
or
repnz
push
std
xlat
sub
and
jo
sbb
sbb
mov
lock
test
sub
lret
loope
aad
enter
fsubrs
sbb
xchg
fsincos
rol
je
movsl
dec
xchg
lahf
jl
mov
or
js
mov
dec
das
in
mov
or
sub
aas
adc
insl
inc
adc
add
loopne
movsl
mov
out
mov
repz
repz
jae
or
imulb
sbb
les
data16
mov
push
cltd
and
in
aam
nop
push
or
loopne
push
add
jmp
xlat
cmp
add
fbld
xchg
push
mov
mov
jo
pop
cmp
stos
test
mov
xor
outsl
inc
cmp
dec
mov
out
es
cmp
das
add
ret
jo
or
sub
adc
push
int3
out
mov
pop
pop
push
push
pop
inc
fsubl
std
cmp
test
rcl
aas
dec
cs
imul
inc
fld
or
mov
cmp
fwait
std
sbb
jge
push
lahf
lret
sbb
jl
test
adc
pop
out
insb
mov
jns
decl
sub
push
cmp
dec
push
lock
test
rolb
scas
jmp
enter
xor
cmpsl
cltd
dec
aam
loope
icebp
adc
add
imul
adc
mov
enter
loope
orl
adc
mov
inc
pop
inc
enter
insb
jo
pop
sbb
lds
dec
push
repz
add
push
and
or
cmp
gs
pop
popf
sub
ljmp
inc
outsl
les
cltd
and
iret
setae
adc
lret
mov
rol
inc
stos
mov
dec
mov
and
add
insb
push
daa
cmpsl
ds
icebp
jmp
xor
jo
mov
mov
in
pop
sub
out
mov
sub
dec
in
stos
push
mov
enter
in
sbb
xor
ret
pushf
pop
dec
pushf
dec
out
cmpsl
pusha
in
mov
jecxz
push
push
dec
sub
xchg
dec
leave
cmpsl
push
test
sbb
rorb
adc
xor
and
mov
xor
and
shrl
adc
dec
push
sbb
cmp
xchg
cmpsl
roll
and
push
punpckhbw
sarl
mov
ret
xor
das
inc
jmp
notb
es
cltd
and
gs
mov
add
mov
cmp
cmpsl
xchg
loopne
in
dec
mov
or
setl
shl
push
mov
dec
sti
stos
imul
out
cmc
mov
mov
loopne
push
in
loope
imul
cmpsl
mov
adc
into
in
sbb
xchg
movsb
xchg
pushf
cmpsl
xchg
scas
mov
inc
jl
dec
cwtl
mov
arpl
in
or
popf
jle
lods
jmp
stos
adc
xchg
imul
arpl
cmpsb
test
dec
dec
adc
mov
and
inc
adcl
inc
das
pushf
lcall
test
test
or
dec
mov
fucom
gs
dec
sbb
ss
jle
out
aam
ficoml
adc
orl
fsubrp
mov
sbb
pop
dec
mov
jb
mov
popf
push
pop
and
pop
bound
test
adc
lahf
sbb
jmp
scas
dec
sub
cli
dec
sub
pop
cmpb
add
jge
imul
jb
popa
mov
notl
dec
push
jp
in
jmp
cli
mov
das
fistpll
xor
and
cwtl
test
or
fldl
fidivrs
or
cwtl
aad
andl
and
addr16
and
cmp
stos
int
cmc
fstpl
adc
ja
pop
in
lds
jle
mov
lret
adc
sbb
pop
push
cmpxchg8b
mov
jg
or
xlat
mov
out
mov
mov
or
mov
mov
int
repz
xchg
popa
imul
xor
or
and
in
test
push
mov
scas
add
adc
cmpsl
out
xchg
xrelease
and
mov
cld
addb
lock
mov
movsl
filds
clc
daa
scas
sbb
push
mov
jl
fiaddl
pop
mov
jg
fimull
inc
mov
out
addl
aas
sbb
sti
mov
aam
cs
inc
dec
out
stos
and
movsb
es
mov
or
sbb
iret
popf
mov
xor
js
aam
out
jo
dec
loop
imul
aam
and
dec
mov
sahf
xchg
push
hlt
jge
or
mov
fnstsw
cs
mov
lock
push
bound
aam
push
movsl
jge
gs
or
dec
lret
sbb
movsb
fisubrl
cli
in
mov
xchg
xchg
data16
nop
repz
scas
ret
fdivs
jbe
loopne
pop
xchg
push
push
sub
ja
jbe
testl
mov
aad
adc
es
jmp
movsl
mov
mov
repnz
jno
add
mov
js,pn
in
sbb
sub
mov
pop
push
aas
lock
mov
inc
ds
aam
clc
inc
xchg
jb
or
jge
ret
pop
push
and
xor
xor
inc
loopne
mov
mov
bound
cmp
rcl
lods
adc
insb
or
cmp
addl
sub
pop
out
sbb
fadds
jae
and
push
and
scas
sbb
daa
xor
jg
clc
jnp
mov
aas
bound
lods
mov
add
lret
das
icebp
pop
cld
ffree
idivl
add
mov
dec
cmpsb
mov
mov
in
inc
adc
xchg
inc
sbb
sbb
outsb
mov
mov
data16
jne
xchg
or
pop
xor
aad
subl
mov
pop
mov
xchg
jge
or
cwtl
fdivl
push
std
lods
ljmp
mov
inc
aaa
pushf
add
push
les
pushf
jno
inc
xlat
xchg
aam
push
push
add
imul
inc
in
fstl
adc
dec
mov
stos
outsb
push
out
add
pop
inc
aad
pop
adc
filds
xchg
sahf
daa
xchg
push
push
sub
and
cmp
movsl
loope
lahf
and
lock
fdiv
fsubrl
cmpb
jmp
inc
dec
loopne
pop
mov
inc
jo
ss
in
xchg
dec
repnz
jmp
in
pop
cmp
scas
and
imul
xor
cmp
mov
inc
movsb
stc
mov
dec
mov
xchg
nop
cmp
sub
stc
jle
jmp
jo
ret
sbb
jns
mov
imul
mov
adc
lods
js
pushl
icebp
orl
leave
adc
loope
stos
stc
and
aas
outsb
or
sbb
mov
adc
jge
push
imul
gs
push
cmpsl
bound
mov
add
adc
loope
jmp
call
xchg
jp
int3
das
jno
sti
jmp
push
sti
scas
gs
lret
cli
movsb
jae
xchg
lods
mov
call
out
jnp
popa
cmpsb
add
inc
int
inc
stc
sbb
fisubl
call
outsl
sub
mov
stos
sub
testb
jp
fstps
push
inc
jge
jno
mov
inc
insb
test
addr16
adc
fstl
mov
jge
in
lret
xchg
sarb
cwtd
and
and
add
cmp
lds
ret
dec
test
jge
mov
mov
movsl
subb
subb
iret
dec
aam
mov
test
dec
rorl
push
jbe
adc
int3
xor
repz
xchg
stos
or
std
jl
jno
maskmovq
testl
xchg
out
js
fcomps
dec
sbb
sbb
pop
arpl
jmp
jp
adc
decl
loop
mulb
in
les
ret
pop
inc
shlb
sub
fldl
fldenv
jle
jle
ds
xor
jb
inc
aaa
and
cmp
xchg
xchg
in
mov
div
xchg
movb
into
mov
aad
test
notb
sarb
test
movsb
pop
jo
jno
fdivl
push
rolb
pop
mov
dec
movsl
jnp
mov
mov
jg
push
sbb
shll
cld
mov
cmc
std
jg
xor
icebp
sub
cmpsl
iret
inc
stos
mov
mov
xchg
mov
rcr
pop
xchg
dec
add
mov
push
test
or
ds
inc
pushf
popf
ds
stc
dec
dec
xchg
dec
ret
add
es
cmpsb
or
loopnew
dec
sbb
dec
into
inc
movsl
mov
xor
or
sub
cmp
push
dec
adc
adc
xchg
push
aam
cmp
test
mov
rcr
rcrl
sub
pusha
mov
adc
mov
push
shlb
mov
aad
addr16
shll
in
stos
xor
int3
hlt
daa
jg
loopne
mov
add
int
jmp
and
lock
xor
fs
jmp
adc
push
test
or
push
in
pop
sahf
adc
stos
loope
cmpsl
imul
mov
sbb
mov
jbe
mov
rorb
faddp
jae
mov
scas
fidivrs
pushf
sbb
iret
mov
mov
push
push
dec
xadd
cmp
leave
outsb
mov
test
int3
movsl
lds
cld
popf
sbb
cmpsb
xchg
xor
or
push
cs
cmc
test
pop
fwait
jl
cmp
adc
mov
dec
cmpsl
jle
inc
lret
mov
and
test
mov
enter
sbb
rolb
mov
bnd
push
mov
insl
jg
push
out
add
mov
cwtl
and
leave
pushf
mov
subl
imul
cmpb
std
frstor
cmp
or
xor
outsl
sar
lock
mov
mov
xor
loope
cmp
xorb
aad
mov
or
xor
mov
stc
pop
icebp
sub
lret
stos
sbb
aad
imul
and
iret
inc
ja
daa
dec
scas
and
pop
push
mov
ret
pop
cmp
push
pop
xorb
neg
lea
pushf
mov
and
mov
out
inc
imul
push
sbb
aam
jl
pop
ret
dec
nop
je
ss
cmp
pop
stc
mov
cmp
lods
or
mov
add
inc
icebp
sbb
faddp
out
shlb
repnz
fstps
mov
xor
sub
or
add
imul
mov
jbe
xor
pusha
or
fildl
pop
cltd
fcomip
mov
in
dec
in
insl
cmpsl
and
aas
inc
cmp
ror
loop
loope
sub
push
add
pop
adc
sub
mov
mov
icebp
shlb
mov
xor
mov
in
fdivrs
lds
push
lret
js
jmp
push
addr16
lock
in
lea
out
ss
inc
test
push
icebp
leave
cmc
imul
in
js
lret
divl
mov
cwtl
stos
and
inc
add
add
in
lret
jnp
mov
test
jae
pop
cmp
push
loop
aaa
shll
aam
inc
bound
cmp
add
jns
cmp
xor
out
and
loopne
sub
call
mov
out
iret
mov
cmc
push
lahf
test
inc
fmuls
inc
lahf
pop
cmpsb
mov
out
push
or
xchg
mov
aas
inc
jecxz
mov
aad
xchg
mov
fldl
insb
jmp
repnz
daa
dec
push
mov
mov
into
mov
call
cmp
mov
mov
mov
out
jl
adc
push
loopne
mov
xchg
add
pop
xor
or
lret
cmc
pop
clc
jge
popa
mov
shlb
lods
dec
xor
ud1
cmp
jne
xchg
inc
and
pop
ja
push
inc
or
popf
decb
dec
ja
push
mov
repz
enter
lret
leave
pop
sub
fs
insl
shlb
pop
jns
mov
insl
add
outsl
imul
fists
mov
in
push
inc
mov
icebp
nop
lahf
and
jmp
dec
mov
inc
inc
dec
mov
jmp
push
call
and
mov
in
cli
daa
cs
inc
pop
leave
test
fimull
or
or
xor
lock
pop
push
adc
dec
xor
in
addr16
int3
jbe
out
imul
loopne
pop
mov
add
mov
sbb
add
push
popa
push
inc
in
ds
cmp
push
push
fwait
out
push
jae
test
test
and
dec
dec
add
mov
mov
jns
adc
adc
dec
cmp
push
outsl
xchg
std
mov
jbe
int
mov
mov
lcall
cli
fdivl
in
and
sahf
cmc
add
scas
rcrb
movsb
dec
pop
stc
xchg
loop
lods
cmp
daa
fisubrl
xchg
push
mov
out
enter
outsb
xor
dec
loop
lahf
ret
pop
push
data16
cmp
jb
push
insb
add
lahf
lahf
fistpll
mov
cld
jno
test
adc
mov
imull
cmp
enter
stos
mov
adc
push
popf
int3
jmp
and
sarb
or
clc
or
pop
shrb
sub
lret
aam
fs
enter
shll
mov
pop
mov
mov
push
shl
xor
fdivs
into
lock
movsl
mov
jmp
adc
jl
cmpsl
es
pop
loop
push
setno
mov
in
jbe
leave
pop
mov
sub
lds
movsl
out
shll
add
fisubl
jo
xorl
sub
dec
movsl
shl
imul
pop
xchg
dec
flds
push
cmp
jne
dec
or
leave
je
mov
dec
xchg
fsubrl
cmc
inc
cmc
lret
cmp
scas
int
fwait
cmpsb
sub
add
dec
mov
cwtl
or
loopne
cwtl
movsl
pop
cmp
rol
out
roll
cltd
cmp
je
adc
inc
das
mov
paddusb
mov
inc
mov
adc
pop
xor
sbb
out
cli
shr
imul
mov
mov
xor
mov
inc
push
mov
into
xchg
dec
cmc
outsl
jle
jmp
push
dec
pusha
repnz
inc
and
sbb
inc
rcrl
or
adc
jle
pushf
push
push
stos
lods
std
cmp
in
mov
int
fs
adc
aaa
and
popf
int3
mov
in
int3
push
icebp
dec
and
cmp
ja
dec
cmp
inc
mov
mov
dec
movsb
popf
mov
mov
pop
pop
xchg
dec
and
xor
jbe
cli
gs
ljmp
out
mov
fs
cmp
dec
mov
ja
gs
jp
push
int3
xlat
push
dec
les
cmp
insb
adc
xchg
mov
stos
cmp
pop
or
adc
outsl
testl
push
lods
dec
out
addl
cli
jo
daa
into
into
or
jmp
cmc
or
push
mov
push
xor
mov
xchg
sub
call
cmp
dec
jne
push
std
mov
adc
pushf
mov
jecxz
loopne
movsb
mov
lods
mov
xor
ljmp
mov
mov
xchg
test
inc
jl
scas
out
xor
addr16
ret
xchg
aas
xor
shrb
pusha
incb
mov
lods
fisttpl
push
imul
outsl
in
fidivrl
sub
clc
mov
std
ret
lea
rcll
pop
jle
aad
pop
cmp
mov
or
addr16
in
mov
enter
dec
lock
mul
daa
mov
ss
loopne
test
sbb
lret
into
fs
cmp
popa
fstp
in
leave
fnstenv
cmpsb
cwtl
sbb
pop
cmpl
lret
pop
jg
iret
outsb
int3
lcall
enter
ret
jecxz
mov
iret
push
div
inc
dec
jno
test
pop
push
sub
sub
dec
mov
insl
rcrl
insb
mov
rorb
js
push
in
cmc
inc
push
jp
gs
or
push
add
orb
jge
inc
fs
and
scas
mov
jl
in
out
sub
scas
add
mov
cmp
stos
test
xchg
or
popa
mov
cs
sub
jae
out
ljmp
jge
dec
cmp
inc
sbb
clc
gs
inc
and
in
test
sub
pop
push
push
xlat
pop
and
hlt
inc
test
push
in
stos
sbb
bound
movsb
cmp
cld
cwtl
dec
cmpsb
bswap
add
mov
inc
mov
push
lds
jecxz
xor
inc
mov
cmp
adc
shll
insl
mov
cmp
xor
hlt
jg
leave
xchg
lret
cmpsl
hlt
inc
cmpsb
test
cmovae
inc
movsb
aas
cmpb
push
pop
insl
popl
mov
mov
xchg
push
add
xor
movsb
std
out
out
push
cmpsl
out
bound
adc
icebp
shr
xor
pop
inc
push
mov
int3
pop
out
lock
fiaddl
lret
cmp
jg
stc
mov
pop
idivl
call
add
cmpsb
push
push
jbe
test
dec
dec
adc
add
inc
fwait
pushf
inc
xchg
test
xor
mov
inc
mov
lret
lea
mov
sbb
xor
adc
int
sahf
inc
insl
xor
out
push
decb
test
psubq
add
int3
arpl
out
int
cmpsb
loopne
fistpl
adc
pop
gs
sub
shl
xchg
xor
insb
inc
into
pop
ljmp
lret
sub
pop
pop
jg
test
lea
push
es
fimuls
inc
ljmp
fimuls
pop
dec
mov
filds
insb
cmp
in
and
loop
pop
int
out
cmp
jbe
leave
sahf
or
xor
std
jb
xchg
mov
leave
cld
adc
xchg
sub
and
inc
lea
lods
popf
mov
or
scas
xor
ja
shrb
mov
andb
lea
mov
fcmovne
aas
xor
gs
popf
add
stos
ljmp
jbe
ret
cs
shll
pushf
xor
xchg
loop
cld
sbb
add
daa
push
jg
cmpsb
dec
repz
push
cmpsl
out
loop
cmp
pop
xchg
push
loop
ret
sub
shll
leave
shrb
lret
xchg
in
jnp
out
xchg
pop
frstor
in
bound
mov
inc
jbe
aas
ja
cmp
push
pushf
shll
ljmp
and
pop
mov
lcall
adc
cmp
and
and
sete
xor
rclb
xchg
dec
lock
jg
cld
mov
test
je
mov
aas
fsincos
in
push
push
sbb
add
cmp
cmp
lret
mov
jns
dec
rol
push
test
inc
popf
cld
enter
sbb
jnp
pop
popf
mov
sbb
in
insb
test
cld
iret
lret
test
add
sti
mov
int3
js
push
sti
mov
and
dec
sarl
xchg
loop
jp
xchg
aaa
mov
test
idiv
dec
sub
adc
push
xlat
jae
push
shrb
shlb
jo
add
pop
sbb
and
xor
lahf
adc
loope
xchg
in
cmpsl
cmp
add
mov
les
sub
fwait
mov
movsb
inc
xchg
mov
push
cmp
cmp
in
xchg
enter
adc
lcall
jae
subb
inc
dec
sbb
push
xchg
jp
ror
mov
or
pop
xchg
mov
stos
xchg
xchg
cmp
sti
add
stos
loop
and
fwait
inc
shrl
xor
mov
cmpsb
mov
mov
loope
jl
rorl
or
in
jo
jno
sub
sbb
loop
sarl
xlat
outsb
lds
xor
xchg
pop
or
clc
icebp
nop
and
push
mov
lock
jmp
mov
clc
inc
and
jmp
pop
sbb
add
in
lahf
cwtl
dec
addl
lcall
jb
stos
dec
fimull
adc
jp
and
insl
xor
adc
shr
xlat
cmp
ss
cmpsb
adc
jne
into
nop
cltd
sbb
mov
pop
adc
lods
pop
lods
or
mov
mov
sahf
jbe
mov
std
and
mov
repnz
jg
push
imul
mov
int3
pop
lea
sub
xchg
mov
shrl
sbb
sub
ljmp
into
mov
sbb
cmp
cmpsb
jecxz
rorb
cmp
out
dec
gs
shll
loop
mov
mov
sahf
nop
sbb
fs
clc
mov
iret
outsb
mov
sbbl
icebp
jle
stc
mov
cmp
mov
and
xchg
pop
js
mov
push
cmc
xchg
xchg
cwtl
xor
push
dec
and
js
pop
in
in
xchg
bswap
mov
jle
add
xchg
loopne
imul
xchg
or
mov
add
iret
shll
xor
mov
jnp
mov
shrb
cltd
shrl
out
sti
fiaddl
push
pusha
in
pop
lds
sub
ss
outsl
xchg
arpl
mov
mov
cs
pop
mov
insl
push
aaa
mov
out
cs
xorl
int3
add
test
mov
aam
in
ds
sbb
mov
je
inc
popa
lds
dec
jnp
fidivl
bound
jle
arpl
imul
int
shrb
pop
call
cmpsl
sbbl
dec
push
mov
movsl
xor
mov
mov
daa
jmp
in
call
xchg
and
imul
mov
mov
int
pop
xlat
dec
jl
jo
std
sti
sub
mov
xor
rcrl
push
icebp
outsl
outsl
mov
fbstp
or
add
scas
das
scas
pop
mov
pop
pop
adc
push
pop
in
cmp
stos
ds
cltd
jmp
test
xor
and
aaa
aam
jl
mov
mov
decl
orl
fiaddl
mov
je
in
insb
adc
or
cmp
xchg
nop
mov
in
aam
pop
test
leave
cmpl
pop
movsl
push
dec
mov
outsl
mov
movsl
cmp
jbe
push
enter
xchg
xchg
or
js
gs
loop
fucomi
pop
and
mov
ljmp
out
cmp
enter
xchg
je
inc
loopne
ljmp
add
call
jge
mov
out
adc
jbe
or
jb
divl
iret
adc
add
and
jge
aad
jbe
std
push
mov
out
jmp
push
not
add
pop
inc
pop
adc
bound
cmp
mov
and
or
pop
push
lods
fimuls
sbb
repnz
out
pushf
mov
jno
fimuls
push
outsl
push
jge
add
cmovp
xor
or
push
dec
ror
cmc
mov
jne
fisubrs
mov
rcll
sahf
or
xchg
mov
fisubl
test
stc
das
add
int
jb
pop
rorb
cld
mov
jmp
pusha
insl
stos
xor
sbb
fldl
jns
sahf
movsl
dec
fimull
xchg
mov
push
int
lret
shll
cld
mov
fistl
sbb
vucomiss
mov
ljmp
and
push
sub
and
loop
imul
clc
dec
pop
sbb
cltd
adc
roll
lds
out
pop
sbb
ljmp
xor
push
dec
push
mov
adc
out
fmuls
incl
pushf
inc
fldt
ret
xor
add
ja
pop
and
loope
xchg
rolb
int
frstor
fs
pop
adc
int3
ss
sub
aas
lea
xor
push
test
cs
jecxz
xchg
fwait
mov
sbb
mov
add
repnz
dec
jecxz
insl
outsb
loop
loop
lahf
xchg
ret
in
test
call
pop
mov
push
inc
pop
ja
out
pop
pop
data16
pop
xchg
cmpsb
mov
jmp
fiadds
pushf
mov
xchg
mov
push
mov
ss
sahf
add
jecxz
insl
add
mov
inc
add
cmp
or
jne
sbb
jle
mov
rcrb
xchg
enter
xorb
xor
jmp
insb
xchg
xchg
mov
xchg
cltd
xchg
sub
mov
inc
hlt
rcr
push
imul
rcrb
mov
mov
and
in
test
cwtl
fs
sub
sbb
je
pop
lods
jecxz
decb
inc
xchg
adc
lods
cld
out
rclb
push
jmp
pop
push
outsl
adc
cmp
inc
add
ljmp
test
fldcw
mov
dec
inc
mov
mov
push
daa
adc
pushf
cmp
shlb
insb
mov
repnz
jbe
cmp
xlat
pop
inc
push
sbb
sub
hlt
out
daa
jae
xchg
imul
in
mov
jmp
cvtdq2ps
jge
pop
jp
dec
mov
cltd
dec
fistps
mov
mov
mov
cmp
xor
inc
push
inc
inc
xchg
aad
push
iret
fcoml
sub
jg
es
push
adc
sbb
jbe
xor
arpl
inc
or
inc
fdiv
sarb
mov
sbb
aas
lods
shlb
icebp
cmp
call
xchg
sti
cmp
mov
or
test
sbb
mov
or
fadds
jbe
inc
and
cmc
repnz
in
stc
imul
sbb
lret
push
fistl
leave
cmp
sbb
adc
xchg
inc
movsl
xchg
sbb
push
jns
xor
inc
lcall
mov
out
cmp
gs
and
xor
mov
aas
fcmovb
lahf
cmp
sbb
xor
imul
mov
out
je
mov
xor
cmp
fdiv
pop
in
mov
sub
mov
mov
adc
mov
sub
aas
jp
stc
sbb
mov
inc
lret
inc
test
sahf
cmpsb
repz
bound
inc
shl
fwait
test
data16
lahf
inc
lds
leave
int3
and
xor
jbe
sbb
pop
cmp
or
test
rolb
push
and
es
into
pop
es
and
lock
pop
addl
pop
xchg
jb
mov
add
pop
nop
push
add
push
adc
or
lea
dec
push
cltd
jle
jmp
repnz
xor
dec
push
push
leave
xchg
sub
clc
pop
inc
mov
jl
pop
jle
repz
pop
pop
push
sbb
in
inc
repz
js
out
pop
iret
or
out
cmp
sbb
jmp
xor
stc
decb
inc
sbb
sbb
sbb
je
mov
jg
fdivl
leave
js
mov
dec
jns
mov
out
sbb
push
pop
xor
add
adc
in
sub
in
mov
test
fnstenv
fsubl
mov
sbb
icebp
hlt
xorb
push
xor
xchg
jmp
push
mov
xor
add
jb
jbe
jge
inc
inc
pushf
jb
aam
xor
xor
lock
xor
sub
les
xchg
xchg
inc
jge
mov
aaa
jo
pop
dec
mov
daa
mov
mov
sub
int
mov
aas
outsb
push
inc
rclb
cmp
jne
pop
or
jno
cmpsl
mov
lcall
adc
fdivs
mov
pop
sbb
jae
push
and
cld
add
dec
mov
aam
loop
mov
pusha
dec
lea
push
iret
std
sbb
dec
dec
scas
rcrl
cmpsl
cli
stos
pop
adc
mov
pop
xchg
push
aad
les
nop
addr16
arpl
in
mov
adc
enter
cmp
pop
fidivrs
sbb
dec
push
clc
test
popf
mov
jne
pop
ss
cs
pop
sub
or
les
lcall
cmp
in
mov
test
or
std
mov
jle
js
scas
stc
jge
out
fidivrl
add
sahf
push
xor
mov
loope
or
or
lock
mov
imul
std
mov
mov
ja
xor
or
mov
sub
jno
popf
cltd
cmpsw
pop
repz
push
shl
push
pop
js,pn
arpl
lahf
push
sub
adc
mov
mov
idiv
imul
jp
aad
scas
andl
xchg
ja
movsl
mov
cmpsl
xchg
scas
inc
sub
sub
or
cltd
loopne
rcl
push
jge
xor
sbb
les
pop
in
xor
in
repnz
mov
sbb
lahf
xor
je
push
jne
in
sub
cmp
repnz
inc
loopne
adc
add
cs
cmpb
cwtl
je
fucomip
popa
lahf
js
cmp
pop
dec
in
or
test
arpl
filds
mov
xchg
sahf
aad
imul
decb
lock
faddl
addb
mov
cs
mov
xchg
insb
xor
les
xorps
mov
std
adc
mov
xor
lcall
loopne
pop
repnz
pop
cmc
ss
aam
mov
insb
mov
pusha
mov
cs
pop
add
add
ret
xchg
mov
jno
jle
test
mov
mov
push
mov
cmpb
in
mov
mov
sub
xchg
ljmp
xchg
xchg
mov
and
or
rolb
out
pusha
jp
addr16
dec
stc
cld
cwtl
notl
jp
jne
stos
inc
stos
fisubl
test
cmpsl
scas
jns
jmp
add
lret
or
sub
inc
xor
nop
add
lods
mov
add
xchg
mov
sub
push
jl
inc
push
in
mov
cmovae
and
mov
add
mov
mov
lock
xchg
dec
jmp
mov
fcomip
cs
out
pop
mov
int
loope
stos
dec
push
jbe
inc
call
cmp
sahf
jle
cmpsl
push
xor
push
dec
push
or
jmp
push
xorb
and
cmc
adc
into
mov
pusha
outsl
andl
es
xchg
xor
jmp
out
pop
push
ret
dec
mov
fs
jmp
insl
icebp
xor
push
rolb
loope
xlat
pop
add
push
dec
sbb
xchg
bound
ss
das
pop
dec
aaa
mov
mov
dec
es
pop
jmp
addl
jnp
jg
push
dec
jo
sbb
sub
add
in
mov
lods
test
sub
outsl
mov
and
out
fwait
jb
out
repz
or
pusha
xlat
in
adc
lcall
arpl
mov
mov
jle
arpl
cltd
pop
inc
add
fdivrl
add
mov
lret
lods
jge
adc
lahf
in
mov
cmp
or
xor
dec
pop
inc
fstl
ror
xchg
dec
or
xchg
xchg
and
or
data16
and
mov
gs
out
cmpsl
sub
pop
dec
sbb
clc
dec
xchg
lret
push
cmp
jbe
mov
dec
fbstp
mov
int
lock
dec
cmp
fildll
or
mov
fsubrl
dec
cmp
cmc
fcmovne
xor
imul
push
ret
mov
dec
mov
mov
into
dec
pop
test
mov
in
and
or
adc
inc
or
jae
je
xor
mov
subl
rorl
cmp
xlat
mov
add
jge
ja
out
imul
xor
idivb
cwtl
pop
sub
cmp
ja
test
xchg
pop
cmp
pop
pop
sub
sarl
iret
push
add
pop
mov
imul
mov
loopne
ljmp
add
adcl
test
std
mov
mov
cwtl
test
push
mov
cmp
mov
mov
subb
out
les
pop
jl
cmpsb
neg
cli
lds
je
inc
jecxz
pushf
vorps
cmp
mov
xor
sub
pop
adcl
xor
inc
dec
sub
sahf
aaa
mov
iret
xor
dec
insl
jo
pop
sbb
dec
cmp
dec
mov
jmp
clc
inc
mov
xchg
clc
cmp
xchg
xchg
and
jmp
in
movsb
mov
addr16
movsl
cli
lcall
push
pop
data16
adc
mov
jge
lahf
popf
rcl
xchg
loopne
movsb
cmpsb
into
outsb
dec
mov
iret
js
inc
adc
stc
jg
test
push
ret
and
inc
jns
addr16
push
mov
fbstp
cmp
fwait
test
or
dec
mov
sub
cltd
movsb
ffreep
sarl
cmp
mov
pop
xchg
or
sub
in
fcomp
push
lock
pop
shll
arpl
or
inc
lcall
imul
ds
fcmovu
cs
ds
push
clc
sub
lock
shlb
cmp
movsb
and
and
cmp
pop
sub
lods
mov
loope
xchg
in
sti
stos
js
xchg
push
std
mov
es
in
in
lret
iret
inc
pop
loop
mov
xor
hlt
test
xchg
xor
or
sbb
je
loope
sbb
stos
mov
icebp
push
repz
mov
jmp
loopne
das
andl
iret
and
fisubl
ffree
aam
test
lock
inc
or
mov
sbb
jp
pop
sub
dec
xchg
and
pmulhuw
xrelease
pop
imul
push
flds
mov
xchg
cltd
shlb
sbb
mov
mov
add
sar
jns
test
imul
fst
push
ja
out
adc
pop
test
cmp
xorw
sub
test
test
imul
dec
dec
aaa
dec
sub
sub
or
ljmp
pusha
lock
scas
lret
sub
iret
or
dec
push
jne
aas
rcrb
inc
int3
outsl
push
imul
adc
jle
arpl
repz
insl
dec
push
xlat
jmp
xor
fimull
popf
mov
inc
cmc
dec
inc
bound
insl
js
xchg
int
lods
xor
fcoml
imul
mov
mov
divl
out
cmp
pop
lods
mov
push
mov
xor
cmp
imul
insl
stos
inc
sbb
inc
pop
movsb
lret
popw
push
cmpsb
movsl
mov
clc
xchg
data16
cmp
push
mov
jmp
push
cmp
addr16
or
xchg
mov
ss
aaa
pop
or
das
xor
push
adc
and
daa
jg
pop
mov
mov
add
jae
xchg
push
rclb
mov
sbb
sub
popf
inc
sbb
fidivl
lods
ss
lcall
mov
subb
sub
les
fwait
cmp
mov
popa
js
imul
pop
int3
dec
sahf
cltd
mov
cmpsb
in
inc
cwtl
cmp
scas
insb
fadds
fwait
cmp
ret
dec
lea
jae
sbb
lret
jb
stc
sbb
fldl
jne
adc
add
in
rcrl
or
fwait
jns
pop
mov
jge
cli
loopne
rol
mov
jmp
or
hlt
jbe
adc
xchg
mov
iret
les
pop
jne
sbb
cmc
inc
fidivrl
add
lods
jne
dec
xchg
jle
mov
cltd
adc
mov
sub
mov
add
push
outsl
jae
adc
adc
icebp
stos
push
mov
jl
inc
or
and
ja
inc
and
add
or
xorl
cmpsl
mov
pushf
loope
movsb
mov
pop
outsl
adc
adc
or
add
push
fisubrl
out
cmp
addr16
inc
mov
aaa
sbb
pop
xor
dec
fsts
data16
aaa
adc
lds
pop
mov
cmpb
adc
fwait
in
in
jns
push
icebp
aas
sub
mov
cltd
fisubrl
pop
push
sub
sbb
lods
bound
jno
addr16
pop
leave
jecxz
or
call
mulb
ss
mov
enter
adc
test
fdivr
jg
mov
icebp
push
sahf
add
out
ljmp
ret
mov
outsb
lds
jo
pop
dec
and
mov
fidivl
pop
repnz
insb
pushf
xor
cs
mov
inc
xchg
divl
cmp
mov
xchg
push
cmpl
xorb
inc
std
cmpl
mov
or
inc
xchg
mov
movb
mov
dec
pop
pusha
cwtl
push
mov
pushf
cmpsl
int
mov
or
insb
sar
push
adc
roll
adc
xor
xor
adc
leave
xchg
sbb
pusha
sub
test
jnp
mov
mov
mov
jnp
push
push
sub
cmpsb
jno
hlt
test
cmc
xchg
call
daa
pusha
pop
add
jl
sub
imul
sub
je
pop
add
cmp
mov
out
xchg
mov
add
mov
loop
xchg
jnp
mov
test
adc
jns
ds
test
dec
pusha
mov
mov
pop
mov
ret
aaa
and
jmp
push
cmp
adc
mov
mov
js
jns
sub
test
jg
in
pop
and
mov
loop
popa
mov
pop
dec
cmp
mov
pop
test
fildll
imul
int
popf
dec
mov
jecxz
lahf
aam
add
or
dec
mov
psrld
pop
jo
in
sarb
jno
adc
or
insl
mov
or
icebp
lahf
push
test
add
imul
popa
mov
jnp
sub
sbb
inc
fmuls
jne
xor
into
pop
xor
faddl
imul
movsb
mov
xor
pop
pop
dec
push
sbb
aad
sbb
or
mov
mov
sbb
jbe
insb
je
push
or
sbb
xchg
jnp
mov
add
and
daa
jnp
fs
in
pop
fbstp
fmuls
dec
push
sbb
andl
out
popf
mov
mov
jl
and
push
sti
movntq
push
lahf
fcomi
pop
jo
lret
push
mov
cltd
push
xchg
sbb
outsl
test
shll
fildl
out
testb
mov
cmp
out
jns
jle
testb
arpl
icebp
loope
imul
cltd
das
out
test
push
mov
rclb
inc
ret
inc
jle
pusha
stos
or
cltd
ss
push
lret
inc
inc
add
push
movsl
mov
mov
rol
into
mov
mov
jno
subb
pop
inc
hlt
dec
js
push
xchg
pop
adc
jns
or
cld
adc
xchg
lret
dec
jbe
in
adc
fdivr
lock
lret
movsl
push
cs
xor
out
mov
dec
movsl
mov
hlt
push
and
test
adc
push
stc
inc
out
shr
pop
mov
lods
fisubrl
nop
imul
push
imul
jne
push
orb
and
in
mov
and
xor
push
xchg
lds
or
and
push
add
lds
outsb
aad
cpuid
insb
scas
clc
inc
adc
fldt
stos
pop
xor
cli
popf
cmp
cwtl
pop
fnstcw
shrl
test
inc
or
xchg
ret
lods
sub
xchg
sub
addb
xchg
lret
mov
xor
sbb
inc
loopne
sbb
fwait
popf
xlat
xchg
rcrb
inc
push
lea
jno
mov
arpl
lea
dec
pop
pop
lods
push
adc
pop
ljmp
adc
push
sbbl
aam
sbb
imul
push
mov
scas
jns
es
cmp
adc
jp
jecxz
jg
das
lahf
sbb
xor
adc
pop
lods
divl
pushf
cltd
popf
cmpsb
scas
mov
mov
pop
stos
add
cmp
mov
jmp
fmull
out
mov
adc
add
enter
pushf
cmpsl
mov
and
cmpsb
dec
lea
sbb
movsb
sbb
shlb
aad
movl
mov
pop
inc
nop
aad
cmp
add
loope
movsl
jecxz
adc
pop
das
jmp
xchg
xchg
ja
test
adc
lahf
test
and
insl
jno
sbb
inc
push
jno
pop
xchg
cmp
js
lea
pop
ss
movb
test
and
int
mov
push
rorb
mov
push
sub
bound
sbb
sub
stos
xchg
push
dec
jae
mov
rcrl
adc
xchg
sarb
stc
lret
sub
outsb
test
insb
or
sbb
mov
shlb
arpl
pop
xchg
inc
or
add
jge
testl
mov
out
sbb
push
push
cmovnp
jl
int
xchg
mov
mov
dec
xor
push
stos
sub
mov
lods
or
cmc
lock
adc
sub
and
ret
pop
in
test
xor
push
xchg
enter
adc
add
adc
shrl
arpl
notl
mov
pop
push
xchg
lret
add
idivl
stos
movsl
mov
rorb
add
push
and
in
pop
jg
dec
dec
dec
in
cmovp
mov
aam
sub
and
push
sbb
dec
icebp
cmp
fwait
std
lea
outsb
imul
sahf
inc
aam
push
dec
test
dec
data16
jbe
dec
fprem
shlb
jnp
mov
fcom
cmp
mov
pop
fucom
pop
dec
pop
mov
inc
sub
or
dec
xor
xchg
mull
or
adc
cltd
xchg
js
push
mov
jne
imul
stos
jmp
lret
sub
jecxz
repnz
jo
imul
lea
add
sti
test
in
or
xor
xchg
push
roll
lods
leave
test
mov
mov
and
push
xor
call
add
xchg
xchg
loopne
xor
jg
xchg
gs
cwtl
push
fidivs
cli
push
lcall
ret
repnz
and
leave
aam
xchg
arpl
sbb
icebp
xlat
arpl
stos
outsl
subl
push
test
sahf
fwait
sbb
lahf
inc
leave
rcll
xor
push
pop
mov
fdivrl
mov
sbb
ret
mov
pop
xchg
mov
adc
gs
pushf
in
or
adc
cld
inc
and
pop
xor
jae
popa
mov
lcall
leave
xor
xor
sbb
sbb
incl
jl
dec
pop
and
popf
das
jo
jns
add
cmp
out
fiaddl
push
jae
pop
into
cmovns
cmp
xor
sbb
mov
or
mov
scas
inc
sbb
jmp
pop
inc
movsl
adc
lret
out
popa
aam
les
repnz
push
int
stos
mov
xlat
in
xor
addr16
aaa
loopne
lcall
aam
jns
dec
dec
pop
mov
pop
xchg
sub
adc
vrcp28sd
loopne
sub
sub
inc
adc
lds
lods
daa
aas
sahf
paddq
pushf
jne
add
xchg
mov
xor
xchg
iret
pusha
dec
fisubs
jo
push
and
into
in
add
in
mov
xchg
scas
jno
ds
sti
test
and
mov
cld
cmpsb
jle
leave
dec
adc
and
sbb
push
test
dec
shlb
int
repnz
pushf
cmc
lods
insl
lods
imul
dec
jne
jae
rorl
pop
and
mov
rcrb
cmp
int
ds
or
leave
and
cltd
shl
mov
es
jp
dec
in
jecxz
xlat
mov
adc
push
icebp
push
ss
shll
adc
int
cs
cmp
inc
or
mov
pop
sbb
fsts
fsub
xchg
jp
cmpsb
mov
push
push
push
loope
and
push
in
in
insl
je
jne
pop
xchg
sbb
add
cmp
mov
fwait
scas
adc
mov
fs
ja
and
jmp
or
push
mov
mov
xor
lock
ja
push
dec
xor
add
in
xchg
xor
add
cli
pushf
mov
dec
pop
jbe
incb
out
addr16
xchg
lods
dec
test
push
fdivp
fwait
dec
sub
or
test
lods
sbb
inc
push
sarb
popf
adc
adc
in
push
pop
xchg
cmpsl
sub
je
pop
mov
sbb
mov
ret
jno
test
inc
xchg
add
les
mov
shlb
mov
into
mov
inc
pop
jp
mov
insb
xchg
pushf
mov
mov
cmp
push
fcompl
call
bound
pusha
jg,pn
jb
push
scas
fstl
call
xor
xor
je
aam
pop
lret
pop
push
lock
stos
or
mov
test
into
or
test
imul
aaa
sbb
fcmovbe
jbe
and
pop
mov
jp
and
dec
movsb
xchg
jl
adc
fimull
lock
rol
jl
mov
fucomi
cwtd
cld
mov
or
jbe
out
scas
bound
jnp
adc
pop
pop
inc
aad
inc
cltd
jmp
xadd
jno
cs
fsubrp
jbe
fnstcw
shlb
mov
outsb
fists
lret
mov
mov
fdivrl
movsb
mov
push
mov
and
add
out
xchg
insl
loope
push
test
imul
cld
call
inc
adc
gs
and
or
int3
sbb
fdivr
js
stos
mov
pop
xchg
inc
dec
pushf
mov
dec
pop
arpl
nop
sbb
lahf
cmp
addr16
ss
jge
pop
movsb
in
insl
jle
fs
cs
hlt
nop
cmpsb
scas
mov
shl
xlat
dec
push
loopne
loope
int
and
mov
std
lret
test
mov
mov
and
jmp
push
pop
pop
mov
stc
ja
and
mov
and
push
cmp
xchg
clc
sbb
and
pop
mov
adc
pushf
sahf
fcomps
popf
iret
movsb
lods
pusha
jmp
les
frstor
aas
fdivs
outsb
push
xchg
jo
icebp
mov
pop
bound
or
add
and
and
cmpsl
ja
mov
fdivl
jmp
fstp
leave
lret
xchg
aam
es
imul
xor
add
fldt
scas
sbb
inc
and
inc
adc
in
jg
xor
fistl
adc
xor
push
imul
mov
out
jnp
mov
sbb
aam
inc
test
inc
pop
daa
pop
stos
scas
mov
mov
imul
cmp
mov
dec
call
sbb
jge
sbb
inc
adc
dec
mov
out
loope
in
aam
jo
push
addb
adc
out
pop
or
mov
cs
mov
das
pop
or
inc
adc
call
mov
inc
cmp
cmp
loopne
jbe
cmp
aas
add
mov
xchg
mov
loope
lds
and
in
jno
mov
mov
xchg
popa
push
adc
fisubrl
test
aam
popf
sub
test
js
leave
mov
iret
mov
dec
sbb
hlt
sti
test
xchg
cmpsb
or
je
test
pushf
cmpsl
jecxz
loop
dec
imul
sub
pop
push
push
pop
cmp
pop
jle
das
pop
cld
sti
shrb
lret
testb
push
leave
push
fldt
test
out
adc
std
add
xchg
cltd
xor
ljmp
lret
nop
rol
mov
cmpsl
shll
push
push
rclb
stos
adc
sub
mov
cmpsb
js
scas
cmp
cmpsb
xchg
or
xchg
fnstenv
cmp
movsl
lret
inc
pop
xchg
lds
mov
mov
add
mov
mull
mov
out
sti
jle
ret
jne
fadds
sbb
scas
testl
iret
dec
testb
jle
lret
pop
or
outsl
cmp
add
mov
add
cmpsl
or
mov
dec
fsubp
add
mov
jne
sub
fdivp
jmp
fisubs
fadd
jecxz
jg
cmc
adc
sbb
xor
mov
jae
inc
stos
cltd
gs
pop
mov
sbb
adc
mov
imul
push
sbb
adc
xchg
mov
shlb
or
pop
loop
xchg
push
cs
and
out
xchg
jp
test
movsl
mov
jo
aad
into
int
pop
xor
adc
ret
call
mov
rclb
add
outsb
dec
orb
and
ret
add
jge
ljmp
and
push
stos
sahf
xor
lret
dec
cmpb
out
sub
or
fcmovbe
push
cmp
pop
push
cltd
or
mov
push
dec
adc
sbb
int
adc
aam
mov
das
andb
jl
xor
cld
push
stos
scas
xorl
mov
popf
and
add
lods
fwait
outsb
push
jo
int
out
sbb
dec
fisttpl
or
outsb
les
jno
xor
dec
and
movsl
cmc
dec
lret
cmp
jle
andl
aad
push
xor
mov
shrl
dec
dec
xchg
lret
xchg
scas
cmp
lahf
mov
mov
nop
jmp
and
rclb
loope
xor
pop
movsl
pop
popf
test
ss
xlat
clc
push
ja
inc
stos
mov
cmp
aas
mov
dec
or
ficomps
sbb
xchg
mov
aad
xchg
cs
sbb
scas
out
dec
pushf
rcrb
xchg
push
sbb
lds
jns
jge
push
inc
lahf
pop
sahf
mov
pop
cmp
xor
shlb
push
mov
mov
fcmovne
mov
into
fld
xor
test
movsb
ja
dec
jmp
push
sub
lods
jp
iret
fs
and
mov
mov
add
xchg
lret
cmp
cli
mov
cmpsl
shlb
cmp
jbe
mov
dec
and
cmp
dec
into
icebp
jmp
mov
and
cmpb
test
dec
push
int
jne
adc
push
into
rcrb
out
outsb
movsb
gs
fiaddl
inc
pop
mov
push
cltd
rclb
iret
out
add
push
stos
mov
js
dec
sbb
mov
xor
dec
xchg
loope
and
rol
loop
cltd
mov
jle
in
mov
mov
jns
fcmovu
repz
inc
insb
cmp
lods
iret
repnz
push
dec
lea
and
stos
mov
adcl
or
outsl
sub
fadds
pop
cmpb
push
rcrl
sbb
jge
sahf
inc
jne
insb
and
outsb
scas
lea
inc
test
cmc
imul
inc
mov
dec
fnsave
mov
gs
push
aas
xchg
aam
mov
dec
xchg
push
shl
mov
sub
fnclex
ret
loope
add
pop
xor
shrl
xor
in
add
loopne
daa
das
push
xchg
nop
fldt
addr16
sarb
mov
pop
jge
outsb
ja
cmc
mulb
adc
cmc
cmp
cli
lcall
loopne
dec
mov
jae
test
scas
push
aam
sub
mov
mov
outsb
jle
lods
pop
mov
lods
sti
add
pop
dec
mov
roll
div
or
fildl
adc
lds
jmp
push
in
push
leave
pop
sarb
cwtl
cmp
loope
mov
dec
std
xchg
pusha
xchg
ds
adc
repz
hlt
aad
js
rcll
mov
aad
fisubl
sub
scas
xchg
adc
sahf
and
in
inc
xor
movsb
or
xor
enter
orb
and
mov
and
jecxz
pushl
cld
and
decb
stc
adc
cmp
or
mov
cwtl
adc
sbbb
cmpb
fsubl
or
cmp
gs
dec
jl
and
scas
xlat
mov
or
popf
aaa
hlt
mov
rcrl
sarl
test
cmpsl
fsubrs
sub
sbb
or
stos
inc
hlt
cmpsl
jb
or
pusha
cmc
mov
aad
out
mov
testb
mov
jmp
lods
or
xchg
pop
das
repnz
cwtl
mov
jmp
and
push
sbb
pop
and
in
ficomps
dec
add
into
sbb
in
addl
xchg
sbb
or
aad
sti
mov
stos
jno
lock
push
mov
popa
pop
sbb
pushf
idivb
mov
jbe
xchg
mov
add
mov
sti
clc
jg
insb
movb
mov
or
stos
or
ljmp
mov
sbb
push
push
ja
enter
in
push
test
insb
or
inc
cmp
iret
mov
popf
xor
jb
jmp
incl
adc
fpatan
and
cmc
gs
push
inc
out
xchg
lcall
movsb
push
push
out
pop
pop
ficoml
mov
je
inc
fistpl
cwtl
inc
in
mov
stos
inc
sub
cmp
mov
test
movsb
cmp
sahf
xchg
stc
enter
out
jle
jnp
test
movsl
xor
sti
xchg
adc
sub
inc
les
iret
stc
cld
jns
lods
ljmp
push
push
lds
lods
dec
inc
popf
cmc
arpl
fs
jnp
adc
lds
sahf
push
andl
push
bound
leave
mov
shr
lods
jle
test
cs
and
outsl
int3
push
jno
xchg
jb
dec
rolb
jbe
and
sub
add
push
stos
fptan
js
jbe
jmp
adc
push
pop
jae
push
xchg
sbb
stos
mov
inc
shl
jl
cmp
insl
mov
xchg
xchg
and
sbb
sub
sub
sar
add
pop
jle
inc
sbb
ficoms
repz
mov
leave
cld
pop
in
loop
push
mov
mov
gs
sbb
data16
sub
sti
or
push
aaa
fwait
add
pop
data16
xchg
jns
push
jp
popa
std
stos
addl
ret
pop
and
jno
mov
lods
pop
adc
push
mov
ds
and
into
mov
cwtl
pop
mov
scas
mov
outsb
adc
xor
test
xor
push
jno
loop
in
cmpsl
and
pop
push
jnp
and
pop
movsb
scas
xor
je
sub
and
sbb
cmc
cmc
leave
inc
roll
sub
cmp
cmpsl
cmpl
iret
in
fisubrl
loopne
jmp
mov
mov
test
jecxz
sub
xchg
xor
dec
std
clc
push
iret
fs
cmp
or
xchg
data16
mov
lahf
lock
out
and
jmp
fcom
ja
cmpsl
and
jnp
sub
xchg
mov
cmpl
ds
iret
aad
pop
jecxz
mov
xchg
out
aas
and
inc
inc
aaa
mov
mov
in
insb
icebp
inc
jp
cmpsl
push
inc
out
add
inc
loopne
idivb
loopne
stos
push
jns
cmc
fstl
les
push
sub
dec
mov
nop
popf
pop
stos
mov
ficoms
mov
stc
cmp
fidivrl
jb
lret
scas
ret
hlt
ljmp
jl
xchg
cld
or
or
sub
dec
jp
cmpsb
cmpb
push
rol
bound
sub
leave
pop
pusha
mov
dec
cld
pusha
stos
repnz
sub
xor
lret
fwait
stos
lods
outsl
and
lret
scas
or
mov
cmpsl
icebp
repnz
lahf
push
pop
sar
pop
cmp
xchg
cld
ss
in
popf
cs
enter
fisttpll
mov
lahf
rcll
test
addr16
and
cmp
shrb
mov
dec
xchg
xchg
flds
test
lcall
jne
popa
hlt
scas
cld
add
lahf
insb
add
int
push
popa
sbb
jnp
mov
jo
sub
mov
mov
lahf
lods
or
shrb
dec
roll
rcl
lds
push
dec
mov
es
and
scas
in
imul
outsl
push
sti
es
pop
cpuid
ljmp
ret
pop
int3
mov
mov
sub
test
shll
movsb
mov
fcoml
or
adc
jl
xchg
jno
pop
outsl
xor
cmpsb
sub
lret
sti
stos
arpl
ljmp
push
jmp
arpl
or
sub
sahf
xor
cmp
mov
mov
push
cmp
add
mov
loopne
test
adc
test
sbb
inc
mov
push
xchg
cmp
xor
sbbl
mov
lea
cmp
addr16
or
add
and
imull
cltd
lods
mov
pop
repz
test
sub
inc
adc
adc
mov
push
adc
pop
fistpl
insl
pop
xor
inc
lret
add
orb
dec
outsb
int
and
test
jno
cmp
mov
out
and
xchg
cmp
cmp
fdivrl
fidivs
ljmp
into
lods
jg
mov
cmpsb
jle
add
outsb
add
xor
mov
bound
inc
daa
add
mov
mov
clc
jg
sub
insl
test
test
sbb
jge
lcall
in
jle
les
adc
sbb
jle
sahf
stos
cld
fadds
mov
add
or
out
cli
sbb
movsl
ljmp
call
arpl
sar
add
ficoml
pusha
rcrb
lret
shll
xchg
cmp
or
pop
ret
pop
xchg
movzwl
dec
pop
adc
dec
mov
inc
inc
frstor
das
push
inc
xchg
ret
sbb
add
mov
adc
bound
dec
lret
movsl
jns
dec
mov
pop
mov
inc
out
xlat
lret
push
gs
icebp
rclb
cld
cmp
cli
repnz
or
and
jb
mov
call
mov
clc
movsb
scas
stc
leave
mov
dec
js
fldcw
mov
xchg
mov
mov
out
out
jl
sub
in
mov
mov
mov
xchg
test
ds
pop
fwait
dec
out
pop
jl
lds
das
add
push
std
jbe
mov
mov
mov
add
jbe
cs
outsl
sahf
lahf
adcl
push
jno
or
int
mov
lahf
push
scas
adc
lahf
test
xor
mov
outsb
push
das
sbb
aam
outsb
and
xlat
rcrb
in
cwtl
mov
f2xm1
pop
pop
out
inc
mov
ret
shl
sbb
test
xor
idivb
pop
ljmp
cmp
jne
bound
sbbb
fcoms
or
lcall
js
sbb
xchg
adc
sbb
xchg
imul
movsl
jnp
or
or
lret
stos
loop
dec
inc
xor
call
xchg
pop
in
pushf
sub
pop
or
gs
mov
ljmp
repnz
mov
add
in
pop
mov
icebp
xor
fdivrl
shlb
pop
inc
mov
inc
aad
cmp
or
std
idivl
push
ss
out
push
enter
and
ret
cs
shlb
arpl
mov
idiv
fs
inc
cmp
xchg
xor
jns
loopne
xor
iret
clc
popa
and
xlat
out
xor
cmp
lcall
adc
pop
add
lahf
sar
int
sbb
loope
fmuls
push
jbe
jl
int
ljmp
fsqrt
in
push
and
pop
pop
vcomisd
mov
mov
ret
loopne
pop
mov
fadd
scas
add
sti
push
xlat
jge
rcl
push
jne
xchg
inc
dec
iret
jo
xor
mov
icebp
int3
dec
and
and
sti
mov
mov
fs
flds
pusha
aad
mov
xchg
xlat
adc
mov
test
aas
mov
loop
push
out
adc
dec
loope
mov
push
push
jno
out
sbb
or
jo
pop
push
nop
and
mov
aaa
pop
mov
dec
fimuls
mov
addl
push
or
into
jp
pusha
jns,pt
and
testb
xchg
pop
inc
mov
movsb
fidivrs
fdivrl
xchg
arpl
and
ds
insl
scas
cmc
push
jmp
push
or
je
adc
push
out
std
mov
stos
ja
loope
push
dec
mov
shrl
jge
aas
pushf
icebp
mov
mov
movsl
mov
inc
jae
pop
jp
push
sahf
sub
fidivrl
mov
das
lahf
insb
lea
push
lahf
ds
cltd
xor
xchg
lock
out
jne
orb
lret
das
mov
push
out
cwtl
iret
repnz
dec
mov
mov
fnstenv
jle
aaa
push
mov
fnstenv
and
out
cmp
jb
or
loopne
xchg
jecxz
jp
ljmp
subl
cwtl
xchg
pop
mov
sub
jbe
sbb
cmova
add
jmp
dec
xor
sub
add
ljmp
xor
jp
push
mov
sub
ficoms
add
ja
pop
xchg
push
cmp
dec
mov
sbb
repnz
inc
out
cwtl
into
cmpsl
mov
enter
sbb
jo
cltd
mov
sub
in
sub
xor
lahf
adcl
push
push
fistpl
or
mov
mov
mov
scas
pop
jns
sub
sbb
mov
add
fsts
xchg
imul
insb
je,pn
inc
mov
pop
xchg
dec
inc
jae
jno
into
repz
pushf
mov
arpl
or
shl
cli
pop
adc
push
aam
dec
shl
cmp
jp
aaa
jle
xchg
mov
sbb
rcll
mov
out
sub
and
psraw
shl
xlat
fucomi
out
and
jno
cmp
imul
pop
fildl
cmc
fs
mov
sub
sarb
sbb
cmp
aas
out
pop
mov
adc
lcall
or
lods
call
lcall
fsubrl
dec
fucom
int
mov
mov
inc
lods
hlt
pslld
xor
jo
das
or
mov
dec
out
or
or
es
jmp
push
mov
sub
jg
data16
das
bound
gs
add
les
inc
into
pop
lret
sbb
push
repnz
mov
aam
xchg
clc
sub
scas
movsl
or
pop
mov
mov
into
loope
es
mov
mov
mov
push
sub
int
rcrl
loop
clc
mov
ljmp
fidivrs
cmp
pop
or
sbb
clc
ret
cltd
sbb
pop
cld
jmp
fsubrs
sets
dec
andb
add
das
xchg
add
pop
jmp
icebp
xchg
stos
add
sub
js
and
mov
scas
adc
cmp
pusha
mov
dec
rcrb
inc
and
sbb
sbb
add
mov
mov
fmul
repz
fsts
stos
or
or
add
hlt
push
cld
pop
and
add
jns
sti
and
fsubl
mov
imul
repnz
push
mov
xchg
test
lock
xchg
repz
aad
xchg
cld
pusha
jae
and
test
cmp
mov
aam
aas
ja
loopne
push
cmp
out
aaa
cmp
push
xchg
add
in
adc
sbb
sbb
in
xchg
adc
dec
subl
sbb
mov
add
movsl
adc
fisttps
jbe
dec
ja
pop
inc
adc
inc
daa
mov
cmp
jg
bound
sbb
mov
cmp
pop
xchg
mov
stos
cmp
jp
lock
jecxz
fs
fisttps
icebp
jb
jp,pt
mov
mov
les
pushf
cmpsl
or
cpuid
mov
stos
test
xchg
mov
cmpb
and
pop
xchg
jecxz
push
jmp
data16
cmpsl
outsl
lcall
shl
cli
repz
inc
in
dec
cmc
popa
sbb
xchg
lods
adc
jae
inc
popa
jl
push
and
sbb
iret
es
test
cs
scas
bound
and
adc
dec
xchg
and
ret
rcll
punpckhbw
out
aad
andl
sub
aam
sbb
mov
lret
loop
mulb
mov
pushf
enter
sub
xor
cmp
loop
jno
xchg
xor
mov
jmp
mov
mov
xor
cwtl
sbb
and
jecxz
cmp
push
xor
aad
xchg
mov
imul
aam
and
loopne
mov
mov
cmp
cli
into
lods
into
dec
and
mov
ret
push
clc
push
jo
hlt
mov
inc
cmp
fistps
into
data16
pop
scas
loop
and
sti
out
mov
mov
jo
xlat
add
and
stc
or
adc
insb
sbb
push
add
outsl
dec
inc
rcr
xchg
xor
or
popf
push
mov
test
insb
fnstenv
pavgw
push
out
movsb
sub
outsl
sti
push
pop
xchg
mov
and
out
mov
ljmp
out
add
jno
lret
scas
repnz
lret
test
clc
sbb
add
add
mov
push
test
jmp
scas
push
test
inc
sbb
push
notb
inc
cmp
fists
cs
xchg
es
mov
aas
test
scas
mov
inc
bound
mov
xchg
iret
cmc
xchg
jo
adc
pop
test
jl
cmpsl
xchg
or
push
xor
xchg
pop
test
add
add
fisttpll
subl
add
mov
test
mov
pusha
out
xchg
sbb
mov
xchg
cmp
je
das
test
movsl
ret
pushf
sbb
es
push
dec
data16
adc
leave
nop
aaa
adc
mov
dec
pop
outsb
repnz
cli
jns
jb
stc
pop
aas
sbb
adc
xchg
dec
cmp
outsb
adc
xor
addl
jge
sub
cli
cmpl
and
mov
fwait
std
xchg
inc
aaa
sub
sbb
push
mov
fcoms
lods
and
sti
sbb
cmp
mov
lods
fucomp
mov
sbb
ja
mov
xchg
pop
mov
bnd
ficompl
test
push
aam
in
mull
inc
inc
dec
mov
ret
xchg
jge
jnp
jnp
movsl
aam
aam
push
xchg
pop
fisttpl
lcall
jecxz
fwait
mov
decl
push
fstps
sahf
cmpsb
cmpsl
cmp
inc
cltd
push
xchg
xchg
mov
jbe
cmp
in
sahf
arpl
add
loopne
les
fistpl
std
add
outsb
dec
mov
sub
and
cmp
imul
arpl
dec
xor
sub
jecxz
xchg
shrl
in
mov
shlb
arpl
jmp
es
push
loope
dec
in
xchg
addl
clc
fidivrs
into
jecxz
mov
jp
sub
mov
push
stos
shll
inc
pop
mov
dec
adcb
adc
dec
cld
add
xor
mov
mov
mov
data16
sub
scas
cld
jge
mov
push
push
push
push
sub
xor
xor
pop
pop
mov
fs
jno
jg
xchg
push
cwtl
lahf
rclb
mov
cmp
cmc
data16
bound
test
sbb
or
cli
mov
inc
fwait
sbb
inc
xchg
jo
dec
xchg
mov
inc
jo
ja
mov
jne
pop
shlb
sub
dec
loopne
push
in
add
jle
mov
mov
ds
mov
or
mov
cmpl
pop
dec
mov
mov
popa
mov
ja
inc
lods
adcb
xor
loop
mov
je
jmp
xor
stos
and
inc
push
jnp
cmp
pop
js
scas
add
fadds
aas
jg
pop
xchg
testb
mov
add
sbb
sbb
int
sub
leave
sub
mov
jo
out
mov
adc
repnz
icebp
addl
inc
or
cwtl
stc
mov
cmp
mov
cmpsl
jae
fwait
dec
inc
ljmp
cld
iret
out
ljmp
or
inc
pop
pop
scas
jb
jl
shrb
inc
loopne
testb
or
fsts
popa
dec
int
sbbl
mov
call
and
ret
fdivp
mov
cmp
mov
inc
test
js
sbb
nop
mov
cwtl
push
lds
dec
xor
add
sub
mov
jecxz
scas
imull
notb
xor
lods
hlt
jl
popf
lret
mov
cltd
sbb
nop
shlb
in
inc
lret
mov
mov
push
stos
mov
ret
mov
aas
jl
adc
in
rorb
pop
mov
lock
shrl
xchg
dec
lret
mov
jns
out
js
xchg
lret
std
out
fsubrl
inc
shll
scas
jne
push
inc
xor
clc
cmpsl
test
mov
inc
mov
imul
lds
je
scas
nop
shl
sbb
loop
mov
lods
and
mov
or
ret
push
jae
stos
stos
sub
sbb
adc
in
lcall
fcompl
or
jl
adc
push
cmp
das
lock
push
rolb
or
imul
xchg
xchg
push
aam
and
mov
adc
out
xchg
lahf
aas
popa
jmp
aam
test
pop
xchg
lea
dec
scas
fwait
inc
xchg
dec
sbb
loop
in
rcl
sbb
lret
dec
mov
fstl
mov
imul
cmp
push
jge
es
inc
rcll
dec
mov
jle
cmp
repnz
push
stos
test
dec
inc
dec
xchg
ret
add
jge
mov
and
xchg
ljmp
movsb
or
pop
push
roll
mov
repz
xchg
insl
xchg
adc
ljmp
lahf
sub
es
mov
sbbl
pop
ds
adc
dec
shll
cmpsb
fwait
sbb
sbb
addr16
xchg
cltd
dec
inc
dec
test
sub
dec
je
xorb
xchg
lods
sbb
lahf
mull
call
push
mov
jg
adc
pusha
add
cmp
sbb
push
jnp
test
mov
lea
lods
imul
lock
cmp
loope
loope
add
movsb
jg
add
sti
mov
mov
or
xchg
dec
adc
sbb
push
sub
push
repnz
xchg
imul
mull
cmc
int
xchg
std
pop
ficompl
nop
js
out
dec
push
xchg
popf
mov
test
bound
ret
fiaddl
jb
std
nop
icebp
arpl
jno
mov
and
jb
bound
push
leave
icebp
inc
aam
dec
fcompl
push
dec
adc
pop
divl
les
inc
cltd
add
dec
lcall
fldenv
jae
mov
jnp
mov
xor
xor
mov
cmp
imul
mov
push
jp
jne
mov
and
faddl
xchg
pop
test
bound
inc
and
and
into
pop
xor
dec
or
dec
push
aaa
addr16
jo
xor
push
dec
ljmp
push
push
mov
lret
push
jbe
outsl
cmpsl
jl
add
push
sbb
sbb
jns
pusha
test
ljmp
pushf
js
ret
mov
dec
fimuls
dec
mov
push
sbb
inc
rolb
testb
jecxz
jbe
push
mov
je
mov
add
cltd
sbb
jns
sbb
push
xchg
sub
dec
imul
es
dec
mov
mov
pop
loope
mov
movsl
adc
ja
bound
or
cmpsl
popf
add
jp
push
hlt
sbb
mov
xchg
and
or
sub
insb
push
jl
mov
shll
es
xchg
loop
icebp
dec
inc
sub
test
mov
out
sub
inc
ret
bound
sub
lahf
rcrb
push
sahf
dec
hlt
and
fs
push
fdivrl
outsb
pop
and
inc
and
dec
jo
xor
les
shrb
ja
dec
mov
jae
test
int
scas
or
dec
test
lock
adcb
dec
and
jp
push
aaa
movsl
pop
test
stc
jo
nop
ret
xlat
outsb
mul
dec
add
add
xor
addb
stc
mov
testb
mov
cmc
jnp
rcrb
stos
sbb
lahf
sub
fcomi
rcll
nop
scas
push
dec
inc
mov
xor
dec
outsb
mov
pop
add
xchg
or
push
mov
in
xchg
pop
cld
inc
sub
dec
dec
push
jo
rcrb
push
ljmp
pusha
subb
cmp
push
lcall
adc
scas
ljmp
incb
pop
fs
xchg
sbb
seta
sbb
xor
mov
pop
iret
bswap
ds
test
movsb
cwtl
push
xchg
repnz
mov
lds
xchg
pusha
loope
lock
mov
push
rcl
mov
pusha
or
pushw
dec
leave
mov
pushl
adc
sub
jae
jp
movsl
popa
add
lret
sbb
cli
pop
jo
inc
rorl
mov
lret
cs
xchg
mov
dec
ss
in
push
mov
imul
aas
in
jl
push
enter
ja
arpl
int3
lods
jg
ljmp
pop
orb
decb
cli
mov
sbb
xchg
mov
mov
mov
mov
cltd
in
or
pop
sub
xor
cmp
push
mov
sar
arpl
sub
mov
inc
popf
mov
in
xchg
popa
imul
scas
push
and
out
jge
dec
popf
xlat
shrl
jp
ss
and
mov
jmp
xor
pop
sub
es
call
add
cli
lock
push
xchg
inc
pop
ds
adc
repnz
je
lods
mov
sbb
test
out
add
or
fidivrs
pop
lods
dec
outsb
xor
inc
jp
cmc
mulw
xor
mov
adc
adc
jp
decb
stc
sub
xchg
iret
push
fiadds
and
dec
inc
outsb
xchg
je
lods
cmpsl
mov
cs
sahf
fists
push
jne
lea
push
imul
mov
test
cltd
sub
or
xchg
adc
mov
sub
xor
mov
cltd
ss
mov
int
push
sbb
adc
sti
cltd
xchg
xchg
sub
aam
mov
cs
test
fimull
mov
das
shll
popf
daa
cwtl
js
je
add
dec
dec
cmp
das
add
mov
xorb
jg
add
fisttpl
mov
mov
mov
cmp
shl
cli
cmp
fcomps
xor
clc
cmpb
pop
push
ret
xchg
add
xchg
mov
in
inc
dec
cld
insb
pop
aam
cmp
in
enter
cltd
scas
mov
dec
stos
pop
jmp
dec
add
mov
data16
bound
fs
sbb
cmc
daa
mov
mov
or
fldl
xchg
fsubrs
pop
mov
mov
sbb
jge
rolb
dec
pusha
pop
outsb
inc
adc
out
pusha
sbb
xchg
add
cld
aam
out
js
popf
and
rorb
adc
fwait
mov
pop
xchg
jns
xor
cmpsb
mov
aad
sub
jno
stos
frstor
dec
jno
push
jmp
inc
in
mov
and
push
imulb
popf
xor
dec
lcall
xchg
les
movsl
roll
or
fcmovnbe
xor
loope
stos
outsl
push
fxch
add
pop
clc
adc
sbb
nop
dec
aad
mov
mov
add
ds
inc
mov
sub
push
in
sbb
sbb
pop
fnstcw
es
jp
fsubrp
xchg
sub
cmp
pushf
push
das
lds
mov
xchg
xor
daa
mov
repz
mov
out
jle
pop
out
in
ret
or
fldt
js
xchg
lock
inc
clc
movsl
daa
test
fwait
shrl
lds
push
cltd
xchg
cmp
mov
f2xm1
jge
cmc
jnp
lret
shll
cmp
mov
pop
jnp
shl
mulb
outsb
dec
xchg
stos
push
dec
jnp
push
xchg
andl
stos
dec
sbb
mov
lret
xchg
cld
sbb
in
add
sub
jns
lds
mov
movsb
or
push
push
es
jmp
xchg
bound
rolb
pop
xor
arpl
adc
mov
push
fistl
dec
or
aas
adc
pop
mov
movsb
ror
shlb
mov
scas
das
dec
inc
inc
lahf
adc
lea
push
hlt
arpl
cmp
popf
adc
movsb
push
or
cltd
push
sti
and
pop
fnstcw
cmp
cltd
in
pop
mov
in
pop
imul
test
lods
mov
xlat
out
xchg
mov
jle
xor
mov
ret
cmc
inc
jb
lock
hlt
sbb
loope
cmp
inc
xchg
rorb
cmp
xor
push
jle
shlb
shl
adc
dec
xor
in
popf
out
loope
lcall
int
repnz
xor
cmp
or
dec
xchg
lods
lods
pop
sbb
mov
fs
in
in
cmpsb
or
daa
mov
mov
push
fldenv
mov
in
push
sbb
es
sbb
sahf
inc
and
mov
or
iret
push
mov
nop
or
cltd
addr16
push
fwait
je
ror
xor
fmull
cmp
sbbb
mov
and
lods
or
idivb
sub
lds
icebp
rclb
xorl
fwait
pop
imul
inc
mov
mov
ret
ret
sbb
mov
arpl
jb
jecxz
and
lret
test
ss
push
mov
or
adc
dec
stc
mov
movsb
dec
fwait
mov
pop
sahf
inc
test
jno
mov
sub
mov
ja
js
sbb
push
scas
add
cmp
lock
cmp
sub
push
outsb
call
in
pop
fucomip
ljmp
sti
cmpb
rorb
pusha
mov
inc
push
out
fwait
inc
repnz
push
std
dec
push
pop
ret
js
imul
enter
lock
push
test
enter
js
xchg
dec
hlt
and
jnp
or
out
fldl
shll
mov
in
pop
ljmp
repz
and
daa
fsubp
push
in
mov
inc
mov
cmp
push
in
lods
hlt
inc
test
in
and
pop
cmp
enter
es
sub
mov
xor
test
push
or
stc
mov
xchg
push
mov
xlat
mov
das
xchg
les
cmc
xchg
push
movsb
sahf
xchg
xchg
xchg
sub
sub
push
cli
sub
xor
je
rcrb
sbb
pop
outsb
in
shr
add
or
jmp
push
mov
bound
ror
mov
insb
or
shlb
shll
imul
cmc
jl
push
sub
add
js
mov
xor
and
jmp
lods
xchg
rsm
cmp
addr16
mov
das
dec
cli
loope
mov
aad
imul
test
shlb
push
jb
jae
or
mov
xchg
xor
inc
dec
fwait
stos
inc
scas
sbb
rorl
sub
arpl
or
shr
mov
or
xlat
pop
loopne
out
js
push
cmp
mov
sarl
xchg
out
popa
sub
inc
pop
out
mov
adc
push
pop
inc
jnp
add
stos
and
jg
add
mov
cli
mov
dec
scas
out
inc
pop
mov
inc
divl
daa
ret
cltd
jle
sub
movnti
mov
leave
mov
testb
inc
fisttpll
jle
sbb
and
outsl
loop
mov
and
iret
jnp,pt
je
aam
loopne
sub
das
aam
sahf
inc
jl
push
jno
pop
out
les
out
cmc
lret
adc
in
xchg
enter
mov
sahf
inc
pop
dec
outsl
jne
mov
or
ds
mov
mov
xor
daa
pop
push
push
xchg
pop
insb
sub
shrl
xchg
push
call
lahf
call
lret
ret
imul
add
adc
pop
jl
push
cmp
fsubrs
bswap
stos
inc
xor
enter
cmp
test
push
test
iret
out
outsl
leave
icebp
dec
adc
xor
mov
mov
in
movsl
fadds
ss
push
cmpsb
push
pop
shrb
and
cmp
rcrb
mov
sahf
xchg
pop
or
loope
mov
fcmovnu
sbb
pop
js
ret
push
cs
imul
and
call
cld
add
push
stos
pop
bound
adc
dec
test
sbb
sbb
pop
push
xchg
or
add
xchg
clc
shrb
sbb
lcall
pop
sbb
out
push
cmp
out
fldl
sbb
cmpsl
jo
repnz
pop
lods
lock
mov
iret
in
fildll
xchg
xchg
ret
inc
jmp
sbb
test
add
xchg
push
sub
lret
je
adc
jbe
lock
pop
in
xchg
adc
enter
cwtl
dec
mov
xor
sbb
sub
test
dec
sub
jle
cs
clc
xor
andl
stc
or
test
iret
mov
into
and
sub
mov
push
ja
loope
push
ja
lret
cli
or
movsb
jg
outsb
xchg
addl
mov
addr16
cltd
xchg
lods
cmpb
mov
outsl
loop
push
adc
mov
pop
inc
push
out
or
iret
mov
pop
insb
sub
loop
mov
jo
std
jae
mov
inc
stos
shrb
mov
ret
cmp
mov
inc
nop
push
pop
rcrl
divl
insl
dec
cld
pushl
out
mov
stos
movsl
aaa
jns
sahf
pop
rcl
xchg
insl
pop
mov
adc
out
stc
loop
or
shll
cmp
out
mov
iret
in
mov
insb
gs
mov
fstps
pop
dec
sub
jnp,pn
mov
stc
ja
cld
or
rcr
sub
jne
fadd
sub
xchg
pusha
cltd
xlat
js
aas
sbb
popa
push
xchg
hlt
cmp
mov
arpl
mov
ja
or
inc
dec
mov
pop
adc
sub
mov
cmpsb
mov
mov
cli
js
inc
sbb
mov
sub
xchg
mov
pop
pop
xchg
js
add
cmp
dec
stc
pop
jae
outsl
or
sbb
sahf
adc
cmp
repz
sbb
call
fsin
pop
push
inc
mov
test
or
add
daa
add
inc
push
mov
xchg
jle
adc
es
add
ficoml
push
cli
aad
mov
dec
test
xor
in
cmpsb
sub
ror
shlb
test
mov
inc
push
xor
mov
jmp
cmp
mov
adc
test
fildl
jmp
ljmp
daa
shll
jb
push
popa
or
inc
das
add
int3
jno
jbe
sub
out
push
int
and
xchg
xorl
dec
pop
inc
adc
adc
jae
add
jg
stos
bound
inc
mov
jecxz
add
test
sti
and
lds
rorl
mov
ljmp
inc
test
lret
dec
xor
into
int
or
fwait
mov
push
pause
cmp
xchg
push
loop
adc
pop
mov
test
push
sub
lcall
stos
push
sbb
iret
jge
and
or
add
test
or
mov
sti
inc
xor
mov
cld
jns
lods
enter
iret
mov
or
enter
ror
mov
outsb
xor
scas
sub
js
push
sbb
mov
xor
jge
and
mov
xor
jl
jne
repnz
pop
lods
adc
mov
pop
fincstp
adc
xchg
inc
cltd
scas
xchg
push
lds
mov
sub
cltd
sti
fdivs
lret
mov
sub
rcll
or
loopne
ds
lods
pop
adc
pop
sub
xchg
lods
push
mov
jae
add
movsl
je
test
xor
dec
imul
lea
mov
pop
out
adcb
pop
iret
sets
mov
loop
divl
loope
fisubrs
push
fnstcw
mov
jge
clc
cli
push
push
sbb
mov
jb
ret
scas
fwait
les
aaa
pop
inc
nop
inc
fucomp
shlb
cmp
pop
pop
stc
push
inc
xchg
pop
pop
mov
repz
fsubrs
aaa
add
cmp
pop
sub
add
push
lea
mov
pusha
inc
mov
add
in
jg
mov
lcall
push
iret
xor
lods
cmp
jns
sarl
cli
jne
mov
fstps
mov
bound
jg
gs
adc
cmp
in
outsl
or
int3
arpl
push
jp
jb
or
movsl
enter
inc
jne
sub
xor
sub
call
add
pinsrw
cwtl
jno
sbb
xor
xor
cmc
jbe
adc
cs
test
cmp
mov
fwait
ljmp
jl
scas
cmp
icebp
fmull
lret
mov
jle
sbb
pop
sbb
xor
outsb
xor
xchg
sub
in
int
subb
lea
mov
das
pop
loope
std
mov
jp
mov
adc
and
xchg
sub
pop
mov
sbb
jmp
loop
out
push
cli
and
xor
sub
xor
and
cmp
cmp
jns
mov
in
imul
fists
xchg
jne
jecxz
data16
aam
or
notb
aaa
iret
push
mov
lock
stos
and
push
xchg
in
dec
cld
mov
mov
sub
add
pop
js
test
fcoml
outsl
pop
jecxz
dec
out
xor
ret
imul
dec
fisubs
das
in
lods
adcb
sub
jl
add
and
sbb
sahf
sbbb
repz
cld
sbb
test
add
mov
dec
mov
and
or
je
push
dec
add
push
dec
nop
mov
aam
aas
mov
sub
xlat
jecxz
adc
cmpsb
hlt
ja
and
mov
pop
pop
mov
hlt
jno
bound
pop
lock
insl
in
xchg
or
or
jo
or
pop
insl
les
out
sub
dec
xchg
bound
xor
sbb
ds
lahf
imul
pusha
and
add
cltd
enter
sarl
stos
pop
pop
dec
and
cmp
lds
xor
adc
fcoml
dec
xchg
push
jo
xchg
icebp
sub
stc
mov
lea
push
cmp
pop
jecxz
das
push
cld
pop
repnz
jl
es
pop
and
ja
mov
aam
push
adc
and
clc
add
loope
pop
cmp
or
dec
roll
mov
fimuls
out
jnp
add
jo
aad
ficomps
add
sbb
out
pop
daa
arpl
idiv
cs
in
mov
jecxz
into
push
shll
jecxz
pop
add
movsl
dec
dec
pushf
rcr
arpl
add
lods
mov
mov
scas
dec
stos
xchg
stos
inc
xor
mov
mov
loop
dec
in
ret
fwait
xor
or
call
add
cmp
push
pop
pop
cs
ja
bound
dec
fidivs
mov
sbb
les
test
jb
or
sbb
jp
sti
cs
and
xchg
mov
js
fsubl
mov
icebp
dec
lea
inc
test
push
add
jmp
jne
addr16
outsb
xlat
out
dec
fxam
mov
inc
and
inc
adc
dec
cmpsb
jl
mov
and
xor
xor
popf
push
cmp
push
into
mov
mov
outsl
es
push
cmpsb
xor
dec
add
loopne
lock
pop
testl
lret
xor
into
nop
dec
outsb
xor
jge
mov
fnstenv
lds
fwait
or
lcall
jbe
mov
leave
and
stc
pop
fsub
and
sti
push
negl
mov
or
fldln2
test
sahf
int3
loopne
loopne
add
cmp
push
sbb
sti
xlat
pop
test
aad
popf
loop
jnp
xchg
dec
pop
push
pop
shll
int3
add
pop
xorl
imul
jns
sub
sub
repnz
mov
out
andnps
cs
test
push
scas
enter
dec
verr
xchg
sub
mov
test
sub
popf
mov
ljmp
shlb
sbb
jmp
nop
push
jecxz
cmpxchg
adc
mov
outsb
ja
orb
xor
pushf
pop
pop
adc
fisubrl
inc
cmp
mov
lods
adc
jmp
push
test
mov
push
cmp
aad
push
cld
cmp
xor
aaa
bound
sub
pop
or
pop
lods
cmp
jae
mov
incl
loope
inc
adc
sarb
pop
cmpsb
fs
lock
in
test
sub
cld
sar
addb
cmp
add
jl
nop
jmp
aad
ret
dec
push
mov
call
push
inc
fisubs
sar
cltd
and
insb
mov
test
jle
hlt
xor
mull
imul
test
mov
fwait
jg
gs
arpl
jae
sbb
inc
mov
jno
lret
push
inc
add
pusha
loopne
ds
stc
sub
iret
jle
pop
out
fnsave
inc
jecxz
cmp
sub
cmp
xchg
addb
stos
mov
adc
pop
or
shlb
rclb
xor
dec
insl
and
or
jmp
mov
stc
lret
lds
cs
jecxz
and
pop
push
push
arpl
pop
loop
mov
add
out
stos
mov
push
imul
pop
mov
cmp
into
jge
sub
or
xlat
sbbl
movsl
pusha
pop
pop
inc
inc
lret
loop
mov
mov
adc
adc
cmp
in
aam
and
add
sahf
jge
popf
dec
fcmovu
push
sbb
add
lock
pop
inc
mov
or
jge
movsb
cld
fistpll
jne
xor
inc
enter
out
out
xchg
loop
pop
sahf
inc
mov
push
sub
popa
fistl
lahf
lcall
xchg
adc
lret
xor
lahf
mov
cld
ret
mov
cld
and
test
dec
mov
call
jl
or
shr
sub
adc
loopne
sbb
xchg
ds
clc
shll
add
in
out
mov
push
pop
inc
mov
daa
mov
pop
and
das
cmp
sbb
outsb
xchg
insb
jmp
pop
gs
lds
jmp
or
scas
rorl
push
xor
jo
sar
dec
gs
dec
push
loopne
scas
or
cltd
cld
addr16
inc
sub
mov
movsl
ficoml
pop
pop
sarl
jmp
ret
das
jae
push
ja
add
aaa
mov
out
and
xchg
pop
or
fucomip
cmp
mov
nop
sbb
jo
popa
insl
mov
in
leave
imul
and
negb
enter
popf
stos
fs
outsl
push
cld
repz
push
insb
mov
sarb
mov
ds
cltd
imul
stos
lea
stos
dec
mov
pop
jmp
imul
orb
mov
loopne
jp
mov
pop
stos
dec
rolb
add
cld
xchg
pushf
scas
lods
jecxz
ret
xchg
movsb
xchg
inc
lods
gs
mov
pop
fs
into
mov
adcl
mov
rorl
xor
stos
pop
sahf
adc
repz
mov
or
mov
or
out
jg
mov
fstpt
push
jbe
iret
pop
stos
lret
hlt
jmp
pop
rcr
test
std
in
xor
outsb
mov
out
aas
xor
or
into
popf
jae
cmp
test
push
mov
cmp
adc
pop
sysret
and
aad
or
aas
icebp
ljmp
lea
dec
jmp
leave
sbbb
or
xchg
xchg
or
add
movsb
fmul
mov
repnz
push
sub
aas
pop
popf
sbb
stos
dec
or
inc
push
sub
inc
xchg
in
cld
cmp
into
mov
xlat
xchg
sbb
jecxz
insb
data16
cmp
mov
adc
loop
dec
mov
jo
mov
negl
pop
out
add
loope
inc
sub
jp
cmpl
adc
scas
insb
inc
out
imul
repnz
push
sbb
jl
inc
cltd
lret
jbe
rcll
ljmp
and
and
dec
xchg
in
jmp
outsl
sahf
je
mov
cmpsb
das
hlt
xor
fimuls
add
test
in
ljmp
sbb
mov
xor
pusha
std
push
sbb
mov
or
add
mov
xor
arpl
jp
cmp
xchg
jae,pn
arpl
jg
xchg
loop
cmp
adcl
lret
call
add
sub
aas
test
mov
bound
inc
push
inc
lds
inc
xor
gs
fcmovnu
aas
inc
clc
pop
fcompl
sub
pop
testl
js
in
out
lods
fwait
mov
and
outsl
mov
inc
enter
pop
cmp
add
rcr
xchg
fisttps
xor
lea
xor
lods
jle
insb
mov
fcompl
mov
jl
je
and
adc
jl
mov
mov
jbe
or
mov
mov
mov
adc
lods
js
mov
test
test
adc
push
mov
and
cmc
imul
fsubrl
inc
inc
push
mov
mov
mov
les
aam
lds
mov
pop
xchg
shr
cmpsl
in
sbb
repnz
sub
inc
push
nop
ret
das
and
mov
pop
subl
cmp
mov
jo
xchg
sbb
jge
ret
sub
or
inc
inc
arpl
jbe
repnz
dec
push
rclb
popf
cld
fldt
in
xlat
sub
or
sti
test
xor
shr
pop
in
jne
mov
test
xchg
dec
inc
mov
push
imull
lahf
outsl
cmpsl
cli
shll
push
fcoms
lea
xchg
clc
out
dec
test
stos
xchg
movsb
jnp
insl
fadd
and
jbe
jnp
outsb
fmulp
int
loope
aad
mov
sbb
adc
push
out
cmpsl
push
int3
pop
dec
sahf
push
xchg
cmp
mov
in
lret
stos
out
jb
jmp
inc
cmp
pop
jle
mov
xlat
mov
mov
bndstx
std
sbb
mov
xchg
mov
jno
lahf
mov
cmp
sti
jmp
sti
and
push
icebp
mov
fdivr
frstor
and
sahf
arpl
int
std
test
inc
pop
movsb
or
int3
lcall
scas
sub
lret
sbb
into
pop
or
je
xchg
xor
negl
sar
incb
inc
je
in
outsb
inc
loope
jbe
lock
mov
out
addl
lret
sbb
sbb
stos
and
pushf
loop
pop
pop
push
das
cmpsb
jno
add
in
bound
lret
mov
out
loope
jno
sub
inc
rorl
sahf
xchg
cs
in
lods
mov
scas
nop
add
pop
in
loopne
in
cmpsb
mov
rorb
mov
cmpb
cmp
push
rclb
push
lds
add
or
ret
jmp
jg
insl
pop
lds
dec
and
cli
xchg
jmp
in
push
push
add
sbb
icebp
cmp
inc
dec
xor
mov
jnp
cmp
push
out
popa
leave
mov
pop
outsb
and
sub
add
mov
iret
lods
out
mov
call
xchg
fdivrl
push
shrl
push
cld
mov
fs
or
cmp
mov
sub
mov
push
in
insb
cltd
ja
pop
popfw
mov
inc
imul
dec
insb
mov
daa
out
dec
fstpt
mov
out
xchg
movsb
movsl
daa
in
push
jl
aad
xchg
pop
fsubrs
aad
mov
cmp
inc
or
push
addr16
dec
andb
xchg
add
popf
cmp
sub
bndldx
sti
in
cli
adc
jb
popf
mov
call
outsl
movsb
mov
mov
ret
mov
sbb
sbb
sub
clc
popf
call
lret
or
lods
jle
jne
fnstcw
bound
push
add
mov
pop
jecxz
push
aas
or
push
pop
mov
test
mov
stos
lds
mov
cli
mov
add
or
insl
mov
out
aad
insl
std
fsts
fcmovnb
jecxz
inc
out
int3
and
or
or
ss
dec
ffreep
add
inc
mov
fwait
jne
or
mov
sbb
cmp
sub
mov
mov
and
fs
jmp
pusha
sub
cltd
sub
inc
push
popf
inc
aaa
adc
sbb
mov
push
cld
mov
in
jmp
mov
jg
cmpsb
jg
iret
mov
das
fildll
pushf
dec
in
mov
arpl
push
or
int
out
cltd
loope
int
cli
addr16
mov
sub
ret
or
xor
xor
ret
lods
fildl
jnp
cmpb
outsb
hlt
rcrl
les
push
xchg
lret
pop
adc
pop
insl
scas
mov
and
fcompl
inc
imul
cmp
fldl
dec
sbb
xchg
pmulhuw
mov
jecxz
push
in
outsb
rcr
xchg
dec
fnsave
cmp
dec
idivl
mov
sti
scas
mov
aad
popf
mov
xchg
xorl
push
lahf
shr
lahf
cmp
icebp
xchg
adc
stos
inc
jae
outsl
adc
outsl
inc
out
mov
clc
fucomip
sbb
mov
pop
xchg
aas
pop
out
cmpsl
movsb
xor
pusha
cmp
daa
pop
fisttpl
xor
scas
cmp
dec
idivb
fistpll
mov
jge
into
mov
and
int3
mov
mov
cmp
pop
pop
and
cmpsl
imul
loopne
lods
dec
add
add
push
jne
roll
jecxz
jmp
orb
test
or
lcall
push
adc
cmp
movl
pop
lock
outsb
cmp
jmp
sti
outsb
mov
movsl
adc
sbb
ja
in
pusha
sub
loope
add
adc
adc
mov
and
jns
lcall
pop
push
repz
imul
sahf
push
pushf
jo
xor
imul
clc
mov
ds
cmpsl
pop
cmpsl
or
leave
rcrb
popf
lret
pop
sub
ret
js
fwait
dec
xchg
or
shrb
dec
lds
xchg
test
je
call
mov
in
jnp
sbb
in
rcrb
cmc
lds
leave
lret
nop
mov
nop
iret
mov
push
popf
aas
imulb
xorb
jg
jb
dec
push
sub
shl
pop
cli
loopne
or
xor
outsl
inc
enter
cld
xchg
jns
push
push
xlat
faddp
fisubs
jg
insb
sbb
push
test
jl
in
sbb
dec
sub
push
shlb
dec
dec
addb
fbld
cmc
test
repnz
lds
ds
mov
pop
inc
push
sbb
in
imul
cmp
jb
mov
pop
ficoml
out
bound
mov
lea
and
clc
xchg
inc
xchg
test
pop
inc
or
fnstsw
test
fs
pop
popa
inc
test
sbb
jl
test
lea
inc
mov
adc
shrl
test
mov
xchg
stos
push
or
cmpsl
sub
outsb
mov
lds
loope
call
jbe
gs
int
jno
add
and
pop
cli
pop
pop
cld
jmp
mov
cltd
adc
mov
movsb
movsl
cli
cmpsl
jae
jb
pop
jle
in
adc
xchg
mov
stos
mov
and
ljmp
insb
xchg
test
in
into
cmp
mov
imul
pop
lcall
pop
and
dec
into
sub
jae
leave
loopne
inc
jno
xchg
or
inc
in
fwait
cli
and
ds
and
add
xchg
jbe
dec
xchg
jbe
mov
pop
jle
mov
in
jns
push
push
shl
mov
adc
scas
pop
xor
insl
imul
lahf
add
mov
pop
or
lcall
mov
fmuls
fwait
adc
or
mov
subl
lret
call
arpl
mov
mov
dec
and
in
shrl
cmpsl
push
xchg
aam
scas
xchg
lods
sbb
mov
add
cwtl
push
sbb
dec
dec
or
movsb
sub
inc
xor
and
mov
lds
pop
mov
dec
cmp
iret
push
jl
cmp
and
adc
fsubr
mov
jle
sub
xchg
sti
sbb
mov
stos
add
push
daa
shr
xchg
xchg
loope
mov
mov
sarl
xchg
xor
mov
gs
xchg
fwait
mov
mov
nop
cvtps2pd
call
aad
lea
push
xor
lock
cltd
jbe
aam
pop
stos
pop
or
add
lahf
jl
imul
mov
pop
adc
xor
inc
xor
inc
lahf
call
cwtl
test
sub
cltd
xchg
enter
push
popa
sbb
scas
xchg
ja
dec
pop
popa
adc
lock
push
imul
jge
roll
xchg
cmpb
mov
mov
or
push
xorb
shl
mov
cmp
dec
jne
lcall
fs
shrl
sbb
fldt
mov
and
sub
sbb
repnz
sub
cmp
adc
rorb
ss
sub
xchg
test
or
pop
mov
shl
or
inc
push
iret
das
test
jmp
jg
test
in
in
scas
mov
call
jl
inc
jo
mov
ret
mov
loope
add
push
push
sbbb
push
insl
push
push
mov
jge
ja
lods
dec
sahf
pop
dec
in
rclb
shl
xchg
and
push
dec
jp
jbe
stos
jp
jo
inc
sub
mov
mov
xor
xchg
addr16
sub
or
sbb
repnz
adc
dec
repz
push
gs
sbb
cli
loope
dec
mov
adc
iret
dec
inc
insl
sysenter
sub
jle
loop
push
pop
pushf
mov
ljmp
mov
arpl
inc
dec
bound
mov
xor
pop
or
fcomp
pop
rcl
test
and
fstsw
cs
xor
loope
rcrb
or
dec
and
stos
jnp
rorb
or
movsb
cmp
jmp
enter
fldl
pop
cs
push
out
jns
and
xchg
xlat
outsl
shll
xchg
fstl
leave
loopne
mulb
std
xchg
pop
pusha
pop
push
test
jnp
outsb
out
gs
movsl
add
orb
pop
mov
repnz
and
sbb
stos
dec
sbb
jne
lds
pop
and
cmp
scas
cmp
clc
loope
add
mov
pop
xor
test
insl
cmpl
orl
addl
push
mov
mov
pop
jle
cmp
out
loop
lahf
mov
inc
movsl
in
iret
cmc
dec
jae
in
in
std
mov
dec
fdiv
sbb
sbb
and
in
js,pt
pop
pop
cli
inc
xor
jge
dec
pop
push
int3
dec
jmp
adc
xchg
lahf
mov
lcall
lods
sub
or
adc
mov
pop
jno
lds
aam
gs
xchg
xchg
test
stc
adc
imul
std
pusha
mov
int3
pop
dec
in
mov
mov
movsl
xchg
pop
out
je
movsb
mov
mov
loopne
nop
fs
sbb
and
inc
data16
call
mov
mov
dec
jbe
xor
add
test
aam
push
addr16
stos
adc
nop
stos
clc
mov
rorb
imul
es
insb
pushf
repz
shrb
push
call
aam
or
enter
mov
adc
mov
js
xchg
rcrl
push
ret
jmp
cs
lea
dec
shl
cmpsl
mov
daa
push
mov
adc
fwait
cmp
sub
rorl
daa
mov
or
scas
sbb
enter
mov
mov
jb
sub
mov
andl
sub
lcall
pushf
stos
insl
sarl
fcomip
push
push
lods
add
jecxz
daa
mov
out
fdivrs
inc
arpl
in
xor
inc
dec
scas
mov
jae
inc
jb
mov
cmpl
fcoms
les
ret
adc
lahf
mov
adc
rcpps
cmpsl
ja
scas
lods
push
inc
divl
loope
sub
cmc
daa
icebp
fbstp
sub
or
mov
nop
push
jno
repz
dec
mov
sub
aad
or
adc
adc
cmp
scas
rorl
int
psubsw
fisttpl
ficoml
cmc
push
lea
dec
mov
aaa
outsl
fstpt
ds
notb
sahf
and
dec
pop
leave
or
loop
push
jns
repz
ret
aam
pop
and
repnz
adc
pop
inc
ds
data16
lods
lock
mov
sub
jo
add
or
mov
inc
lea
fldenv
add
cltd
aad
pop
gs
pop
stc
sbb
adc
dec
lods
fidivl
fidivl
jb
or
push
hlt
mov
add
push
sbb
dec
dec
adc
in
es
jecxz
jecxz
hlt
insb
mov
sbb
outsb
xchg
mov
mov
adc
push
push
sbb
imul
shll
xor
jo
cmp
jge
pop
aaa
adc
lods
pop
mov
jnp
sbb
lock
aam
xor
push
mov
mov
xchg
xlat
sti
mov
push
enter
imul
jg
xchg
xchg
cmp
jae
ficomps
add
mov
xchg
popf
xchg
xchg
adc
mov
pop
mov
dec
mov
mov
out
enter
mov
jne
sbb
push
sub
push
cld
jmp
lock
leave
ljmp
lret
stos
shll
loop
mov
jbe
and
out
jl
add
dec
sbb
push
neg
pop
sbb
mov
and
hlt
and
stc
loop
push
out
and
cwtl
call
sub
dec
sbbl
mov
outsl
lret
sub
clc
adc
outsl
into
or
and
addb
loopne
cmc
pop
lods
outsb
sub
cmpsb
xor
pop
jbe
mov
or
cmpsl
test
imul
dec
rorl
imul
sbb
adc
movsb
push
jp
nop
dec
les
mov
outsl
in
xchg
orl
rcrb
out
test
add
push
fmull
pushl
pop
jae
push
adc
push
pushf
negl
cltd
dec
xchg
testl
mov
out
jb
pushf
insl
sub
push
pop
test
ret
fistl
add
js
shll
ret
mov
xor
std
add
jo
arpl
adc
mov
mov
sti
xchg
sub
pop
xor
test
jle
lret
jno
inc
jecxz
data16
in
adc
mov
and
lahf
or
fs
cmp
gs
rorl
adc
jns
aas
out
push
daa
test
notb
in
xchg
repz
mov
bound
dec
into
rcll
sub
pop
out
lods
add
cwtl
mov
pop
in
mov
sub
out
lret
ffreep
ss
push
jbe
xchg
add
jb
in
fwait
or
xor
int3
das
rcr
stos
lock
xor
add
adc
mov
cmp
push
into
mov
inc
addr16
mov
mov
int3
stos
jo
cmp
xchg
lods
xlat
sti
xchg
jae
loopne
subb
ja
shr
mov
inc
insb
sbb
shrb
loopne
cmpb
enter
pop
add
sarl
call
stc
add
js
adc
movsl
into
add
lock
ret
std
sbb
xlat
inc
out
xchg
sub
cmpb
in
shll
lret
add
mov
adc
adc
xchg
fs
xor
cs
movsb
sbbl
push
mov
fmuls
out
lret
test
inc
std
test
mov
xor
cmc
jne
movsl
dec
data16
pop
dec
cltd
push
jle
shrl
scas
dec
out
or
pushf
adcb
xor
nop
sub
test
xlat
call
fisubrl
lea
lahf
or
loop
stc
or
stos
out
movb
jne
push
push
loopne
sub
dec
sub
fs
dec
add
in
loope
pop
leave
movsb
inc
aad
sub
fsubrs
push
test
sub
push
scas
aad
das
scas
mov
arpl
lret
sub
icebp
scas
js
cmpsb
fwait
mov
or
ret
mov
in
imul
push
outsl
pushl
out
pop
jb
mov
cs
hlt
lahf
xor
adcl
sub
add
int
lds
push
dec
scas
testl
dec
popl
subl
sbb
rolb
cli
inc
push
push
mov
xor
insl
cmpsb
mov
test
in
fdivl
mov
add
inc
into
dec
pop
dec
inc
clc
cmp
loop
xor
repnz
sub
inc
aaa
clc
mov
mov
add
push
sarl
cmp
push
int3
ret
xchg
sbb
mov
cmc
sub
cwtl
sbb
add
xor
cmpsl
or
lock
negl
dec
push
jecxz
inc
test
and
js
in
sub
mov
out
and
les
add
sub
cmp
fcmovnb
rcll
es
pop
push
loop
cwtl
and
mov
cltd
repnz
mov
pop
mov
addl
lods
xchg
and
sub
int3
sbb
cmp
fcompl
bnd
inc
jmp
cmpsb
fmull
xchg
js
inc
sbb
mov
mov
fdivrl
pop
leave
adc
lret
dec
cmp
lahf
in
fldl
lret
and
sbb
xlat
cmp
add
fistl
rolb
lcall
sbb
jmp
sbb
cmpsl
jp
lcall
dec
std
lock
mov
ret
jnp
cmp
jmp
pusha
mov
sti
adc
or
sub
jge
lock
in
push
stos
sub
fisubrl
xor
and
jns
mov
mov
mov
sbb
sahf
cmp
jb
stos
scas
mov
push
popf
push
lock
mov
mov
cmpsl
jecxz
loopne
push
cmpb
push
sbb
arpl
mov
aas
fstl
cmc
cmpsb
add
ss
jl
in
pop
addl
dec
and
aas
push
in
ret
cld
ljmp
mov
adc
jne
cmc
arpl
xor
sti
fmull
lods
rolb
sub
cmp
mov
mov
and
loope
inc
mov
mov
iret
pop
int3
fbld
enter
sti
sub
inc
and
rorl
pusha
pushf
pushf
aaa
push
ret
dec
in
out
mov
mov
add
cmc
cmp
add
jae
xchg
lret
sub
andb
adc
imulb
pusha
hlt
and
int
int
or
push
mov
sarb
pop
inc
sti
cld
jnp
jge
inc
mov
mov
xchg
aam
in
xchg
aam
cwtl
loope
repnz
mov
xor
mov
mov
mov
sbb
hlt
sarl
mov
loop
cltd
xor
sbb
dec
mov
pop
cmp
mov
inc
imul
lods
ja
push
mov
cmp
addr16
pop
inc
mov
xor
test
jae
loopne
mov
fucom
pushl
inc
cmp
test
sbb
js
jae
dec
call
mov
in
cmp
shlb
cwtl
iret
inc
push
push
cli
cmp
repz
push
mov
or
loop
mov
inc
cmp
notl
push
out
lret
push
xchg
cmp
btr
clc
pop
shl
aad
fsubrs
fldl
cmpsl
cwtl
les
add
pop
popa
sahf
aas
mov
sbb
inc
push
popf
fisubrl
and
pop
repz
cmp
lods
aaa
fidivrs
cmp
mov
mov
xor
xchg
rcr
adc
cmpsl
or
rol
xor
and
movsb
in
jl
mov
adc
icebp
out
sub
gs
add
pop
mov
sbb
sahf
jns
and
dec
push
add
outsl
sub
div
notl
std
sub
sub
cld
fadd
mov
and
and
xor
mov
jnp
mov
imul
je
sub
or
mov
dec
xchg
push
sti
idivb
repnz
inc
sub
sub
dec
out
movsb
jne
cs
into
data16
or
loop
repnz
pop
push
out
add
mov
loopne
repnz
mov
fwait
mov
int3
xor
movsl
dec
and
cs
jno
mov
inc
sar
jecxz
adc
push
pop
add
cmp
sbb
inc
jp
lcall
andb
xor
add
stos
popa
xchg
dec
push
out
push
push
sarl
pop
lcall
fstps
mov
pop
and
ret
inc
lret
push
mov
pop
sub
push
push
lds
bound
inc
ljmp
inc
imul
aas
imulb
enter
add
fbstp
imul
add
mov
push
sbb
and
mov
mov
lret
pop
dec
xlat
loope
ficomps
loopne
pusha
push
jb
push
adc
ja
cld
inc
xor
xchg
setg
xchg
insb
add
xchg
mov
shlb
cs
and
into
pop
xor
mov
xchg
dec
bound
and
jg
mov
lret
jb
pop
lods
cmp
mov
and
mov
cltd
ret
ja
testl
push
lock
es
jns
sahf
xor
aaa
adc
enter
jmp
into
cmp
aad
and
popf
cmp
fsubs
lahf
dec
push
mov
jae
jl
xor
jno
jae
repnz
out
inc
inc
fiaddl
and
std
push
shll
dec
mov
inc
jne
push
pop
or
das
mov
xchg
sub
mov
or
jp
add
push
ljmp
outsl
add
mov
out
subl
rcrb
in
dec
push
mov
daa
aam
sbb
negb
xchg
push
lock
jle
mov
sti
mov
cmp
adc
lahf
fsts
push
enter
in
pop
lds
cmpsb
jnp
mov
in
in
cli
lock
negl
das
into
or
xor
aad
loopne
out
int
das
mov
ja
xor
lods
cmp
jge
mov
outsb
xchg
xchg
adc
mov
add
les
fmull
cmp
adc
cld
mov
mov
std
jnp
add
mov
imul
arpl
add
daa
test
in
flds
or
aaa
jg
loop
push
inc
mov
add
or
stos
test
inc
and
loop
and
inc
iret
sbb
movsl
iret
movsb
cwtl
xor
and
push
sarl
dec
cmp
mov
ss
in
jb
pop
jmp
and
daa
adc
sub
int
mov
insl
cmp
dec
mov
mov
sub
dec
xchg
dec
jnp
cmc
stc
jns
add
repz
int3
es
cmpsl
push
cmc
push
fs
xor
or
pop
nop
pop
inc
or
push
pushf
xor
aad
inc
insl
gs
adc
xchg
jbe
xchg
and
or
ret
sarl
mov
shr
cltd
fisubrl
add
jbe
xor
pop
cmp
sbb
fs
imul
loope
sbb
push
arpl
aaa
xlat
dec
fadds
jg
pop
loop
mov
or
jae
std
inc
fbstp
sub
xor
pop
and
push
push
push
push
pop
idivb
push
cli
push
mov
loope
js
xchg
test
mov
mov
repz
psubq
mov
rcrl
push
jl
cmc
out
dec
mulb
dec
lods
lcall
lods
lea
leave
mov
jmp
aas
jle
cmovle
enter
adc
shrl
inc
push
xor
mov
pop
rsm
cmp
nop
push
mov
inc
xchg
aam
push
xchg
xchg
aaa
sysenter
or
stc
scas
leave
jae
sub
push
mov
jp
movsl
in
cmpsb
xor
sub
xor
std
cmp
imul
xchg
push
add
sbb
subb
aam
and
popa
pop
shrb
scas
jnp
push
aaa
adc
lcall
sbb
push
adc
loop
orl
repnz
sub
mov
sub
clc
stos
mov
frstor
cwtl
xlat
ljmp
dec
sub
movsl
cmc
lahf
loope
mov
in
lea
popf
jecxz
mov
outsl
xchg
mov
hlt
mov
cmp
dec
stos
adc
scas
bound
sbb
jbe
inc
sbb
pop
sbb
jbe
pop
inc
and
std
imul
loope
push
sarl
and
cwtl
and
mov
mov
add
test
std
stc
jecxz
jbe
jmp
add
mov
cli
das
jp
push
in
int3
add
add
mov
imul
adc
jno
cmp
pop
xchg
mov
arpl
xchg
sti
dec
andl
andl
inc
jno
cmpsl
fwait
mov
add
or
repz
out
or
pop
aaa
lcall
or
and
shl
push
mov
inc
add
popf
jb
pop
scas
xchg
mov
sub
dec
sub
and
ljmp
push
add
sub
out
or
add
push
add
jnp
insb
fcomps
ja
test
sbb
mov
sarl
aas
test
mov
sub
notb
fwait
test
mov
aaa
xor
cmp
es
dec
mov
xchg
cs
jecxz
test
clc
daa
jg
pop
and
cmc
lcall
test
or
and
sbb
lods
mov
jns
sub
and
pop
jno
jo
xor
mov
std
pop
not
push
jno
sbb
pushf
sbb
sub
negl
xor
scas
inc
ret
popf
mov
jae
jnp
cmp
sub
movsl
adc
mov
push
cwtl
movsb
push
loopne
fdivs
rcrb
dec
mov
ficomps
jb
push
fists
mov
xchg
fisttps
dec
mov
imull
add
xor
mov
jno
loope
inc
rcrl
push
and
lods
or
inc
in
push
pop
negb
sti
mov
pop
or
jecxz
daa
add
icebp
jl
loop
pop
mov
dec
cmp
mov
and
push
adc
movsl
repnz
sbb
push
jne
mov
popf
jns
xchg
xchg
jno
out
push
pop
adc
or
mov
fsubr
mov
ret
sahf
pop
xchg
xchg
or
sub
mov
mov
adc
sub
mov
cli
in
out
and
push
sbb
sub
xor
dec
jge
cmp
mov
inc
xor
test
aaa
insb
adcl
xchg
sub
lods
sbb
or
sbb
lcall
pop
sbb
xchg
adc
jbe
xorb
jbe
mov
fcoml
cmpsl
out
xchg
negb
add
ret
sub
outsb
daa
xchg
inc
jb
loope
or
push
cmc
ret
decb
nop
xchg
sub
pusha
mov
adc
pop
jg
push
inc
ret
dec
mov
push
push
sbb
jg
jno
in
and
add
imul
daa
aas
mov
xor
notb
add
push
add
adc
cmp
jg
rorl
push
push
pusha
out
cmc
ljmp
and
mov
flds
adc
fistps
movsl
fnstsw
imul
inc
cmp
xchg
xchg
cli
dec
cli
xchg
xchg
jmp
sbb
inc
jbe
pop
cmp
mov
adc
xchg
popf
shr
pop
enter
lret
pusha
rclb
xor
cmp
mov
mov
pushf
fistpll
push
stos
sub
loop
cmc
or
mov
sub
pusha
inc
xchg
pushl
test
les
jp
inc
lea
repz
or
push
fs
outsb
mov
jns
ljmp
dec
int
ljmp
sar
mov
stc
inc
int3
imul
js
push
pushf
fisttpl
jmp
sti
adc
mov
mov
fdivrp
jg
fcoms
or
ljmp
cmpsb
push
jae
into
dec
aaa
lahf
jbe
pusha
cmpsb
addr16
mov
leave
mov
push
push
sbb
add
pop
add
mov
data16
dec
lods
stos
repz
xchg
scas
pop
out
mov
test
push
outsb
shr
aam
push
pop
out
sbb
pop
les
mov
mov
jne
adc
add
jp
fsubrl
mov
je
cmp
stc
cmp
xor
shll
dec
js
mov
lahf
mov
stos
mov
scas
dec
sub
add
cmp
imul
psubusw
jg
and
mov
mov
fwait
pop
jno
cli
and
mov
sbb
fadds
icebp
cmpsb
dec
shlb
inc
icebp
out
in
out
add
adc
pop
mov
mov
rolb
shll
mov
sub
mov
pushf
fcompl
sbb
xor
das
loopne
testl
and
sbb
sub
jb
sahf
lods
xor
mov
ficoms
call
test
mov
repnz
fistl
incb
mov
inc
xor
scas
test
sti
push
pop
push
add
aas
pop
lock
lds
sbb
cs
pop
or
xor
mov
xor
jg
mov
movsb
xchg
sub
ror
arpl
add
out
rolb
imul
int
or
int
insl
jae
lret
notb
mov
cmpsb
xor
push
mov
std
in
mov
aam
or
or
cld
adc
push
imulb
shll
and
push
push
loop
subl
sub
adc
xchg
pop
rcrl
shll
imul
pop
jno
je
mov
mov
dec
mov
pushf
jg
out
xchg
arpl
mov
push
cs
sti
inc
aad
inc
xlat
fcoms
mov
dec
aas
les
mov
sbb
aaa
sbb
add
or
mov
jbe
push
or
popl
mov
xor
jns
outsl
mov
mov
test
mov
push
sbb
pop
int3
dec
dec
xchg
cmp
mov
in
lds
rcrl
mov
xor
movsb
or
jmp
xor
enter
adc
pop
jp
mov
jno
xor
mov
and
aaa
outsl
mov
scas
dec
arpl
fdivs
adc
lds
idivl
dec
ss
clc
jl
inc
insl
movsb
jl
mov
dec
mov
push
push
jg
into
fs
xor
mov
ret
repz
fiaddl
negb
outsb
xor
xchg
rcl
and
push
pop
out
stc
popw
bound
pop
out
adc
ljmp
mov
fmulp
push
or
movsl
test
adc
arpl
xchg
push
or
inc
sub
data16
out
popa
dec
cltd
cmp
mov
or
dec
add
test
push
sub
mov
movsl
mov
sbb
jbe
adc
lock
sbb
inc
hlt
mov
icebp
sahf
dec
cmp
lret
mull
dec
dec
outsb
jns
lock
pop
outsb
sub
dec
cmp
scas
pop
adc
shl
xchg
test
pop
sahf
ret
jecxz
push
push
xor
adc
cmp
jns
add
fcompl
mov
insb
fistl
mul
call
aaa
jl,pn
or
mov
jb
mov
push
hlt
pop
mov
fwait
movsl
add
mov
loopne
sub
cmc
push
imul
inc
test
and
je
ror
test
dec
imul
int
fs
add
mov
fstl
add
or
mov
cwtl
push
andl
sub
lea
pop
jb
ljmp
or
mov
mov
enter
loope
mov
int
or
sub
jecxz
sub
faddl
popa
add
pop
lds
inc
les
cmpsl
mov
push
daa
mov
test
sbb
jecxz
jge
jmp
test
cli
xchg
push
or
lret
or
cmp
xor
and
out
dec
aad
stc
jmp
xchg
jmp
iret
icebp
aas
rol
jle
lods
pop
mov
jne
in
sub
nop
and
arpl
int
push
dec
cmpsl
mov
and
adc
dec
inc
or
ret
sbb
xchg
cmp
loope
and
andb
into
stc
cmc
xlat
stos
ret
sub
mov
cli
insl
mov
movsb
adc
fildll
in
add
aas
dec
fdiv
xlat
sub
pop
outsl
subl
decl
leave
mov
jns
push
ss
cmp
loop
sbb
std
xorb
dec
xchg
outsl
push
test
ficoml
push
add
aam
ret
inc
inc
cwtl
bound
cli
mov
jg
mov
popa
scas
lea
cwtl
jl
popa
inc
pop
and
pop
sbb
dec
push
pop
fcmovbe
faddl
push
cmp
push
xchg
pushl
aas
das
fdivl
hlt
scas
push
and
pop
mov
into
repnz
lods
xlat
pop
aas
repnz
scas
hlt
jmp
push
in
jns
xor
ss
cmc
push
jl
xor
cmp
int3
dec
out
push
or
pop
pop
jg
add
cld
ror
xor
dec
and
lods
cmpsl
mov
xchg
inc
xchg
mov
xlat
push
xor
jecxz
mov
mov
or
in
xchg
clc
repz
testb
mov
and
and
lahf
repnz
and
sarl
mov
dec
mov
loope
adc
cli
dec
cmp
xchg
xor
mov
pop
jmp
lret
addr16
mov
call
mov
in
xchg
mull
and
dec
xor
in
sarl
cmpb
sub
and
push
xchg
adc
jb
sub
pop
xor
mov
mov
iret
sub
test
and
push
lahf
and
xchg
orl
xor
mov
in
repnz
in
sbb
fwait
cwtl
in
jne
xor
shrb
std
xor
or
sbb
jge
xchg
ret
and
mov
jg
lds
call
stos
cs
stc
inc
jmp
jmp
dec
or
cmp
lea
repz
dec
je
leave
inc
pop
jbe
inc
ljmp
mov
jle
sbb
mov
cmp
aad
jbe
outsl
inc
inc
pop
mov
sbbl
daa
sbb
xchg
or
imul
shlb
ljmp
dec
cld
sarb
clc
jns
and
dec
sbb
in
mov
es
add
clc
pushl
cmp
and
lcall
adc
add
enter
out
push
movsl
into
mov
divb
test
addr16
pop
out
sbb
ljmp
sarb
sbb
lods
cmpsl
rol
mov
dec
mov
popf
pop
push
mov
es
xchg
jp
pop
push
mov
xchg
pop
lods
cmp
lcall
adc
mov
or
call
decl
sbb
sub
out
jb
fwait
add
addr16
fisttpl
xchg
fs
test
mov
mov
rclb
dec
fs
push
inc
mov
mov
xor
cmpsb
xor
lock
fwait
pop
aam
aad
add
imul
sbb
cmp
lret
arpl
xor
jecxz
ds
popf
les
sub
add
or
xchg
ds
mov
mov
add
add
daa
icebp
xchg
mov
ja
insb
shlb
pop
push
xchg
pusha
das
je
jns
jbe
pop
mov
insb
dec
and
movsl
ss
jle
jo
push
addr16
out
xchg
iret
jno
test
aaa
jnp
int3
add
or
ret
outsb
pop
and
xor
outsl
out
mov
add
ficoml
imul
pop
mov
mov
push
cmp
das
aad
aad
mov
call
xor
xor
inc
cmp
aaa
adc
xchg
stos
jecxz
push
mov
faddp
lock
out
icebp
jmp
adc
testb
test
cld
in
mov
nop
hlt
insb
cmpsb
outsb
pop
add
shll
das
adc
sbb
sbb
cmpsl
int3
cmp
jns
sub
inc
lods
in
out
and
sbb
mov
pop
fldcw
pop
pop
aaa
rolb
es
jb
js
sbb
ss
movsl
pushf
sub
adcl
subb
pop
xchg
movsbl
add
imul
test
lea
mov
shlb
xchg
stos
jmp
xchg
jno
ret
dec
xchg
pop
push
test
xchg
add
lret
adc
jo
stos
lcall
dec
enter
cwtl
shr
popa
mov
clc
or
ret
daa
inc
cmpsb
int
push
dec
ljmp
adc
inc
test
cmp
sub
icebp
lods
jo
cwtl
sub
sbb
out
loopne
and
shll
insl
sti
cmp
lea
daa
sub
jge
sbb
jnp
mov
inc
std
sub
cmc
lret
iret
cmp
sbb
cmp
cmpsb
or
stc
pop
sbb
mov
fcmovne
xor
xor
xchg
andb
lods
push
push
sbb
xchg
jle
shrl
and
inc
sbb
daa
fnstcw
shrl
jae
sub
ret
fists
pop
fstpt
mov
lret
ret
jo
mov
cs
fisttpll
adc
push
pop
jb
mov
stos
pop
pop
push
cmpsb
shrl
scas
rcrb
iret
jne
mov
fistl
or
bound
mov
lds
jo
or
repnz
mov
add
push
jne
pop
orb
xchg
in
mov
bound
sahf
shrl
mov
or
fsubs
or
lock
fldenv
pushf
mov
pop
movsl
xor
dec
pop
movsb
cli
bound
adc
inc
lds
mov
sti
lods
mov
or
mov
stc
repnz
fnstcw
sbb
adc
mov
mov
mov
pop
je
stc
mov
push
jbe
jbe
sub
loop
mov
or
aam
push
xchg
cmpsb
mov
xlat
inc
mov
out
jbe
pop
ret
stc
dec
cmc
fidivrl
mov
sbb
mov
arpl
mov
aam
outsl
push
adc
imul
adc
cld
xchg
sti
sub
inc
inc
sub
cld
cmc
shrb
mov
sub
neg
addr16
fsubrs
push
mov
mov
push
adc
cs
movsb
out
pusha
fs
jb
pop
add
mov
or
push
lcall
jae
pushfw
jmp
call
cli
mov
cmc
sbb
cli
xchg
sbb
jge
sbb
lock
add
std
test
cs
pop
dec
lahf
cwtl
out
das
mov
cwtl
xchg
dec
test
xor
adc
pop
imul
ja
mov
add
cmp
jge
mov
sbb
adc
in
dec
jne
and
sub
in
push
outsl
jmp
push
add
das
shl
fdivrl
push
imul
ds
sarl
cltd
imul
aas
test
mov
cmp
cmp
movsb
aam
add
jl
mov
bound
in
mov
xor
mov
xchg
mov
dec
movsb
shlb
mov
sub
fmuls
dec
jl
cs
jo
out
jnp
stos
adc
lcall
xlat
adc
inc
push
lds
cmpsl
mov
test
idivl
jnp
lods
mov
fistl
sbb
pcmpgtw
jecxz
adc
call
or
or
dec
jmp
push
das
in
lcall
cmpsl
test
rcrl
jb
inc
sbb
xor
rorb
and
stos
cmpsl
stos
cs
std
les
rcr
pop
mov
int
mov
pop
pop
stos
jmp
dec
insl
mov
daa
pop
fiaddl
and
add
aad
fs
lea
dec
sbb
fnstenv
fsubp
lds
lcall
mov
sub
pop
fidivl
mov
psrlw
push
jecxz
cwtl
cmp
inc
das
int3
mov
pop
mov
cmp
test
sub
ja
pop
ljmp
dec
push
mov
lret
sbb
or
ret
ror
xor
pop
push
mov
xorb
jl
shl
sbb
jg
ret
xchg
mov
aam
cld
sub
stc
push
inc
std
loop
fimull
jo
loope
imul
jp
fnstcw
outsb
aam
hlt
mov
sub
stos
push
adc
jge
out
ret
jmp
pushf
pop
adc
insb
out
fildll
mov
xchg
jl
add
je
lret
xor
xor
and
xchg
sub
sub
bound
cs
out
mov
mov
mov
mov
outsb
roll
push
shrl
xchg
xor
loopne
dec
aam
pop
push
add
xor
fimuls
lock
in
push
dec
leave
popf
outsb
mov
inc
rcll
negb
rol
lock
test
sahf
mov
jmp
dec
push
fwait
inc
sahf
nop
and
mov
mov
xchg
out
in
lods
sbb
mov
inc
mov
mov
dec
mov
jae
mov
bound
sub
mov
inc
aad
sti
int
push
mov
mov
adc
rcrb
sub
add
out
push
mov
out
cltd
cltd
sub
jg
lods
nop
dec
clc
sar
lds
nop
mov
jbe
xor
bound
popf
inc
and
out
push
jle
jbe
cli
xor
out
and
or
out
fldt
xlat
sbb
jmp
icebp
push
pop
inc
or
mov
pop
mov
xchg
mov
shl
lea
andl
shlb
sahf
push
pop
pushf
js
iret
and
inc
lds
sti
pushf
sub
imul
lods
adc
jle
bound
dec
mov
imul
int3
pop
mov
movsl
dec
ret
addr16
mov
test
dec
data16
sbb
cmp
or
and
pop
dec
and
lahf
jmp
test
lds
lea
loop
cmpsl
adcl
cmp
xchg
repnz
add
rcr
mov
xor
stos
mov
pop
pop
lds
aaa
jecxz
dec
xor
adcl
fsts
pop
cwtl
adc
pop
sti
jo,pt
sbb
jb
push
cld
adc
insb
mov
and
flds
add
test
int3
test
or
xchg
in
dec
mov
mov
mov
push
mov
or
xchg
mov
roll
cli
jecxz
jo
mov
adc
or
mov
pop
mov
cld
jg
das
cs
adc
sub
jb
and
stc
xchg
in
xor
out
repz
push
xchg
clc
mov
pusha
push
in
sbb
mov
adc
jbe
lahf
inc
adcb
loope
cmp
xor
pop
inc
andb
jnp
shll
mov
je
mov
inc
mov
lock
imul
pop
push
push
aam
test
mov
xchg
add
jmp
shl
jecxz
test
aas
icebp
jo
test
test
pop
mov
in
push
xor
jae
xchg
testb
dec
lods
int3
insb
out
std
add
pop
push
sti
xchg
gs
dec
jle
icebp
inc
not
imul
stc
and
ret
push
or
in
call
sbb
adc
mov
push
xchg
sbb
popw
dec
leave
lock
sarb
dec
mov
cmp
cld
mov
add
and
cmp
push
and
fdivrs
mov
inc
lcall
out
dec
dec
pop
jge
decl
fadds
insb
pushl
shl
out
mov
dec
aaa
shrb
inc
mov
out
cmp
out
mov
inc
xchg
popf
imul
das
push
movsl
rol
cltd
shll
mov
sbb
or
sbb
pusha
jno
movsb
mov
xlat
mov
push
ret
les
in
aas
or
icebp
lea
push
cli
imul
sbb
mov
in
dec
push
adc
and
cmp
test
jns
aam
xchg
popa
rorb
mov
jne
xchg
outsb
cmp
orl
sbb
daa
test
es
jo
cmp
sub
mov
lods
ljmp
and
nop
loopne,pt
out
andl
test
push
cltd
lahf
pop
lahf
movsl
push
in
js
or
inc
ljmp
adcb
add
mov
pop
leave
sub
hlt
lds
sbb
subb
insl
sbb
ja
adc
loope
ret
jae
test
xor
inc
inc
xor
push
add
mov
in
ja
push
cmpb
das
repz
aaa
xor
push
xor
sbb
popl
inc
arpl
in
sbb
and
jns
push
lods
cs
pop
dec
rclb
test
int3
stos
mov
jge
jmp
xor
mov
mov
test
sub
dec
xor
aad
xor
popf
sbb
cmc
daa
push
sahf
insb
rcrl
sub
push
push
or
jo
add
push
add
inc
cmp
inc
es
fistpl
lock
xor
cltd
adc
push
ds
jl
xchg
mov
stc
cmpl
lods
xor
pop
jmp
mov
or
rcll
jecxz
cli
loopne
adc
adc
fs
xchg
adc
adc
fwait
lret
push
ret
data16
inc
mov
outsl
fmul
mov
and
jmp
hlt
sub
movsl
cltd
inc
mov
mov
lea
fildll
mov
outsb
cmp
sti
and
and
incl
lahf
lret
adc
aaa
popa
jp
dec
cs
loop
popf
ret
add
and
pop
xor
or
mov
sar
iret
lret
aad
lods
pop
xchg
and
add
jecxz
mov
xchg
jne
mov
lahf
or
xchg
mov
flds
add
xor
mov
lock
dec
push
and
out
test
loope
outsl
imul
mov
jmp
in
mov
sbb
mov
jns
jecxz
nop
pop
pop
xchg
push
cmp
inc
orb
out
in
mov
cmp
sbb
mov
push
into
mov
or
xchg
repz
out
mov
fiaddl
ficoml
lret
aam
mov
ja
xchg
rol
loope
fisubrs
leave
lahf
cmpsl
xor
cs
loop
sub
pop
mov
jns
shlb
scas
mov
orl
inc
sub
repz
sub
push
stc
orl
pop
ds
sbb
shll
cld
out
ljmp
pop
lock
fwait
xor
addr16
sbb
out
pop
mov
or
lock
xchg
nop
les
stc
stos
repz
cmpsb
lods
pop
xor
leave
push
dec
lahf
xorb
jnp
jbe
and
decl
inc
ret
test
xorl
int
loope
push
mov
or
mov
push
xchg
out
pop
std
add
addr16
push
jle
repz
pop
cmp
xor
sahf
cmc
mov
xchg
dec
test
sbb
ja
pop
mov
cmpsl
cli
cltd
cmp
push
jno
jmp
les
ds
fs
rolb
pop
jp
dec
xchg
jp
mov
popa
bound
lods
inc
aad
repz
repnz
cwtl
cmp
xchg
xchg
in
cmp
push
cmpb
pusha
pop
mov
lods
stos
jne
inc
xor
jg
lods
sbb
cmpsl
push
cmp
jl
stos
sub
add
mov
xchg
jbe
aaa
addl
sub
lods
in
dec
jo
cld
mov
add
and
sub
nop
cltd
add
jge
mov
popf
jbe
nop
adc
test
mov
sub
mov
fildl
mov
scas
stc
push
lcall
fsubs
enter
add
pop
jmp
test
dec
mov
mov
mov
mov
aad
es
stos
cmp
cmp
push
push
and
jmp
rcrb
pop
hlt
inc
fcmovb
les
rcrl
push
mov
dec
fbstp
adc
adc
ljmp
sbb
add
push
out
pop
and
mov
outsl
cld
add
cmpsb
jb
popf
sbb
mov
mov
pop
ja
add
jbe
scas
jmp
outsb
mov
mov
inc
adc
inc
leave
fs
xchg
push
mov
xchg
push
enter
pop
enter
cs
cmp
push
mov
stc
add
xchg
and
jge
adcl
sub
mov
sub
pop
imul
rol
lds
dec
lret
int
cmp
jmp
cli
fildl
lret
out
aaa
fstpt
or
pop
push
in
aaa
repz
dec
cmp
fs
xchg
enter
repnz
mov
mov
cmp
int
push
lret
imul
jle
push
les
pushf
sbb
pop
add
imul
cli
ret
and
xchg
in
pop
jg
int
pusha
jmp
imul
jg
int
or
or
insl
fstpl
rcr
hlt
mov
popa
fcoms
adcl
or
in
push
mov
adc
jmp
mov
pop
cmp
mov
cmpsl
adc
adc
xor
cmpsl
hlt
fsts
inc
stos
jp
ds
minps
test
xor
jnp
pushf
lahf
cmp
mov
push
rcl
adc
or
lds
add
pop
mov
insb
pop
adcb
mov
push
mov
push
dec
or
ss
std
and
jnp
js
fwait
mov
xor
paddsb
adc
js
jns
xchg
dec
mov
bswap
or
rclb
push
ret
loope
icebp
arpl
orl
xor
int3
mov
mov
nop
and
mov
imul
pop
jb
push
stos
mov
lahf
cmp
loope
jae
loope
stos
cmp
divb
xor
or
mov
or
pop
sbb
or
xchg
sbb
mov
xchg
inc
stos
mov
xor
mov
loop
test
xchg
mov
cmc
mov
nop
pop
cmp
loop
push
in
add
lcall
rcr
and
movsl
jns
lea
pop
insl
lret
and
xchg
sbb
xor
pushf
add
insl
inc
xchg
outsl
dec
lret
popa
adc
faddl
jne
scas
sbb
cmp
outsb
in
lds
ret
xchg
mov
sahf
pop
mov
ljmp
ror
cmp
aaa
push
cltd
scas
mov
and
mov
sub
mov
xchg
inc
negb
movsb
xchg
pop
mov
pop
ret
adc
cmp
push
movsb
test
xor
push
pop
push
test
adc
lcall
ljmp
cld
daa
mov
movsb
xchg
push
xor
sub
jl
jmp
sbb
shl
fnsave
pop
inc
add
out
xor
insl
mov
pop
pusha
cwtl
jno
xchg
lahf
mov
push
sub
cmp
in
jo
mov
or
in
pushf
push
mov
pusha
push
adc
xlat
sbb
cmp
sbb
movsb
ljmp
pop
icebp
dec
add
jmp
shlb
dec
xchg
es
push
rcrb
jmp
add
cli
outsb
sti
stos
and
add
and
insb
inc
dec
lcall
aad
test
scas
sub
outsl
xor
adc
imul
xchg
leave
and
movb
adc
mov
mov
pop
jmp
fsts
in
dec
aad
lods
push
test
push
pop
mov
andl
pop
adc
inc
xor
inc
dec
negb
cltd
jae
mov
inc
and
xor
dec
sub
cmp
or
push
jbe
ds
pop
sbb
cmpsl
pop
pop
clc
or
xchg
dec
dec
lret
fsubrs
lods
daa
int
mov
add
imul
jp
adc
pop
mov
int
out
dec
xor
mov
inc
ljmp
js
fimuls
pop
lret
push
and
adc
mov
push
rcrl
add
int3
jg
xchg
dec
movsl
dec
add
loopne
adc
mov
pop
xor
push
call
icebp
cmpsb
sbb
mov
push
cmpsb
mov
xchg
sbb
pop
and
mov
sbb
jno
shll
pop
aas
and
fcmovnu
dec
daa
ljmp
lds
pop
inc
movsl
lea
mov
inc
cs
push
sub
jnp
sbb
ds
movsb
cld
stc
mov
adc
dec
stos
add
adc
fs
sub
sub
jecxz
xor
mov
inc
or
mov
or
int
fcmovbe
push
adc
cwtl
testl
cmp
xor
js
lret
cmp
ja
pop
mov
test
adc
inc
scas
jb
mov
or
xor
push
sub
xchg
and
xor
push
mov
jecxz
lods
or
mov
adc
pop
sub
roll
fdivr
mov
ret
jne
subb
jp
xlat
insl
nop
sarl
pop
sbb
cs
add
fucom
popa
sbb
add
xor
jecxz
mov
js
and
inc
mov
std
dec
jns
in
xchg
xchg
and
rclb
pop
outsl
test
mov
iret
xor
cld
pushf
mov
fstpt
xor
loopne
fadd
xchg
in
sahf
push
sbb
jns
mov
arpl
pop
lea
pop
pop
or
ds
bound
pushf
inc
sub
hlt
shrl
popa
mov
and
iret
sub
subl
or
ljmp
pop
stos
repz
pop
pop
pop
dec
cmp
or
xchg
mov
fadd
fadds
dec
mov
dec
es
jle
mov
add
sub
test
inc
add
in
jge
ret
inc
je
pop
jmp
fnstcw
cwtl
mov
sbb
sbb
in
mov
push
xchg
mov
mov
sbb
sbb
pop
push
pop
loope
loope
pop
je
lods
test
push
out
sub
data16
inc
push
cmp
ret
bound
filds
ds
cwtl
mov
out
xchg
xchg
inc
mov
push
aad
in
pop
mov
push
push
push
out
mov
mov
xor
arpl
mov
mov
hlt
popa
sbb
lods
repz
gs
lret
gs
imul
lods
push
es
adc
pop
sti
sub
fidivl
notb
repz
mov
stos
mov
push
call
mov
jb
cmpsl
hlt
mov
xor
pop
shr
fcmovnb
negb
outsb
mov
adc
sbb
inc
popa
mov
jp
add
nop
jne
lea
pop
mov
mov
or
fmull
push
cmp
jnp
lods
ss
aad
adc
inc
loope
in
jge
xor
adc
push
jmp
sti
inc
sbb
test
dec
xor
je
in
popf
popf
loope
mov
pop
loop
add
and
stos
pop
hlt
ret
mov
out
sahf
xor
out
pop
cmp
cmp
fnstcw
mov
add
dec
out
les
mov
psraw
mov
push
popa
inc
es
call
xchg
pop
inc
data16
int
ja
or
mov
or
push
inc
arpl
lea
jl
jne
and
rolb
int
call
mov
add
mov
repnz
dec
add
dec
jno
push
push
add
cltd
ficoml
test
les
sarb
push
rcrb
cwtl
cmp
sbb
mov
fwait
xor
cli
repz
sar
jnp
push
call
mov
stos
jns
xchg
bound
int3
movsl
or
inc
ret
jge
in
xor
and
lds
pop
test
je
sti
or
mov
jmp
negl
popf
es
ds
or
push
jecxz
loopne
cwtl
and
sub
or
repz
into
pusha
out
xchg
subl
push
jmp
repnz
lds
pop
or
ret
mov
imul
inc
into
and
push
mov
cmp
test
mov
into
xor
repnz
mov
pusha
pop
sbb
aaa
push
fiaddl
fsub
and
add
stos
or
jmp
lock
lock
cmpsl
cmp
pop
xchg
cmovb
xor
pop
int
and
imul
mov
lahf
stos
and
test
lock
inc
sbb
cmpsb
mov
ss
push
arpl
dec
mov
push
push
jae
mov
sahf
or
xlat
xor
push
xor
popf
mov
iret
idivb
std
cmp
push
xor
jmp
and
call
cmp
andl
inc
outsb
insb
push
sub
bound
inc
xor
stc
push
sub
xchg
int3
mov
inc
aaa
mov
or
call
outsb
pop
cmpl
lcall
out
scas
sbb
fnsave
inc
xlat
inc
cs
lahf
fildl
sub
ja
xchg
add
fldenv
adc
xor
xchg
mov
cltd
mov
push
js
stos
jl
xchg
pop
pop
int
mov
inc
cwtl
mov
lea
fimuls
daa
jp
and
push
jle
xchg
mov
inc
repnz
sbb
and
jbe
xorl
sub
jmp
mov
cwtl
xchg
sbb
push
test
xchg
sbb
shr
cwtl
cmp
ret
mov
dec
jmp
inc
dec
jae
stos
adcb
mov
xchg
xchg
shll
mov
sti
lret
jp
adc
cmpsb
std
pop
rorl
das
enter
adc
xor
dec
stos
iret
adc
movsl
inc
dec
xchg
popf
sbb
mov
std
push
and
popf
sub
sub
add
mov
nop
push
jle
xchg
pop
movsl
xchg
aad
mov
xor
add
or
adc
adc
les
jp
cmp
add
xor
xor
push
pop
out
ljmp
jbe
mov
out
pushf
out
sub
ret
jecxz
movl
stos
adc
rcll
lods
sbbl
mov
fwait
rolb
and
or
pop
cld
rcrl
push
cmp
mov
lods
inc
call
loopne
popf
pop
daa
push
cli
inc
fiaddl
xor
sub
dec
sub
adc
cmp
mov
cld
pop
mov
aad
mov
inc
aad
or
add
pop
cmpsb
out
sti
xchg
mov
cwtl
cmp
inc
and
inc
or
sbb
adc
je
hlt
rol
cmc
inc
addr16
das
xor
xchg
rcrl
and
xchg
dec
jns
jbe
fsubrs
jge
or
sti
jp
mov
jg,pn
and
push
mov
xor
movsb
mov
jecxz
or
mov
inc
sbb
mov
pop
mov
cmc
mov
mov
jg
rolb
clc
jno
jmp
rcr
test
mov
jno
cmp
xchg
jge
inc
mov
mov
movsl
dec
fldcw
cs
sub
adc
xchg
das
inc
andl
call
and
and
cmp
mov
stc
cli
pusha
sahf
fsubrl
daa
jl
xchg
xlat
clc
stos
sbb
cmc
sub
daa
pop
pop
ja
je
mov
pop
in
pushf
mov
mov
hlt
pop
stos
mul
xchg
mov
scas
stc
pop
or
jmp
mov
add
mov
stc
add
add
and
int
add
stc
js
scas
jp
rcrl
push
inc
mov
pushf
push
pop
and
das
lea
inc
push
jp
loop
arpl
stos
jmp
ljmp
aam
jle
sti
pop
call
lock
in
in
ds
dec
aad
xchg
pushf
insb
outsl
js
popf
aad
pushf
mov
xor
push
frstor
sti
lods
test
xchg
data16
leave
dec
stos
sbb
adc
repnz
mov
mov
in
or
cmc
mov
push
push
out
add
imul
xor
icebp
fwait
inc
inc
test
decl
dec
push
jle
pushl
lods
inc
cs
fs
ret
pop
jle
test
or
jmp
cmc
cmp
mov
ret
call
and
jl
pop
cmp
jns
and
js
mov
push
jmp
push
inc
lds
cmp
dec
scas
push
mov
add
ljmp
add
bound
unpcklps
pop
inc
and
jge
es
or
or
lret
or
sbb
loop
adc
jbe
mov
sbb
stos
sub
jbe
leave
sub
mov
ja
fiaddl
adcb
inc
test
adc
mov
xchg
cmpsb
mov
pop
gs
outsb
ja
sahf
jmp
inc
mov
mov
int
repnz
sbb
inc
inc
sbb
cs
and
and
fnstcw
mov
in
int
mov
call
add
aaa
pop
mov
sub
mull
jne
arpl
dec
pop
daa
out
cmpsl
cmp
test
mov
pusha
lret
outsl
sbb
push
xor
int3
pop
pop
push
sub
lahf
cmp
inc
pop
popa
in
jecxz
push
cmpsb
bnd
pop
mov
jnp
add
sbb
cmp
xchg
jp
mov
xlat
mov
jp
stos
fwait
clc
xchg
nop
lret
repz
rcr
test
pop
sbb
sbb
sub
lds
push
or
xor
and
les
xor
mov
int
testb
out
cmp
leave
jo
jnp
add
jnp
cmp
jns
test
jp
aam
mov
aas
mulb
push
icebp
and
pusha
mov
test
and
dec
cmc
int3
imul
in
xchg
xor
insb
xor
ret
stc
or
adc
inc
ds
jl
adc
out
rclb
das
mov
sbb
mov
je
and
inc
pop
rcl
outsl
cwtl
iret
call
jb
arpl
mov
adc
clc
orl
mov
inc
sub
out
or
add
pop
inc
data16
add
lcall
iret
sahf
test
push
sub
pushf
movsl
mov
call
lret
inc
lods
push
and
arpl
js
mov
jl
pop
notb
popf
add
push
ret
out
xchg
sub
popa
push
mull
xchg
push
int3
xchg
push
push
out
add
std
sub
push
dec
gs
mov
movsl
jnp
repnz
jp
sub
mov
rcll
xlat
jns
pop
mov
in
inc
mov
arpl
add
jle
add
roll
pop
loope
test
dec
ror
ja
cmpsl
mov
add
out
pushf
mulb
push
adc
xor
test
fs
fsubp
cmp
cmp
outsb
inc
add
jg
call
mov
rclb
divl
leave
ljmp
push
loope
and
push
xor
adc
mov
jecxz
adcl
mov
mov
cmp
jb
xchg
fiadds
pop
push
inc
shrb
pop
jl
hlt
pop
xchg
mov
in
out
sub
or
iret
lcall
jl
pop
imul
leave
sub
adc
push
cmp
inc
push
and
or
mov
xor
mull
insb
mov
push
clc
adc
and
in
movsb
mov
and
out
movsb
push
daa
xlat
cmc
xor
or
out
mov
andl
push
jl
add
dec
xchg
aam
push
clc
and
data16
push
push
mov
insb
in
lock
jo
icebp
inc
movsb
jge
aam
cwtl
push
mov
jle
mov
gs
and
cmp
and
push
adc
daa
fcmovb
lods
ss
in
fwait
jecxz
test
sti
out
popf
loopne
mov
mov
or
lahf
stc
mov
sub
sar
add
sbb
sbbb
mov
mov
cmp
or
xchg
pop
or
push
lahf
test
jae
je
aad
and
data16
jno
inc
pop
test
push
mov
ljmp
or
pop
xchg
cmp
push
sbb
or
add
outsb
rcrl
adc
lods
jb
out
icebp
sub
cltd
sbb
push
mov
mov
fidivs
mov
fsts
pop
xor
test
cmp
mov
lret
xchg
ret
std
inc
ljmp
adc
sub
xchg
sbbl
into
adc
popf
pushw
inc
jmp
std
lcall
mov
jnp
mov
mov
aas
and
jbe
imul
mov
lcall
jb
pop
repnz
mov
mov
aaa
or
flds
rolb
call
xchg
or
lret
sub
xchg
mov
mov
clc
imull
out
sub
add
xchg
rcr
std
xor
push
enter
hlt
jb
das
cltd
mov
out
mov
loop
adc
das
sub
test
shlb
mov
sub
mov
das
sub
jl
daa
mov
mov
sahf
xor
iret
out
movsb
lods
add
inc
jmp
push
roll
xor
cmp
test
cmp
rcrb
lods
dec
push
lods
add
cmp
enter
sub
cmp
mov
sub
inc
aaa
lods
dec
add
dec
arpl
push
ror
jno
mov
push
mov
in
push
pop
out
adcb
cs
sbb
adc
in
and
mov
lahf
sarb
movsl
push
mov
push
cmp
mov
fnstcw
mov
xlat
js
test
test
cmp
lds
or
scas
cmc
xchg
iret
inc
nop
xorl
mov
scas
jno
mov
lret
sub
scas
push
xchg
punpckhwd
in
inc
adc
pushl
xchg
xchg
hlt
repz
mov
mov
mov
cli
cmc
gs
add
mov
and
in
bound
cwtl
inc
inc
or
pop
inc
mov
cli
jmp
jge
jg
mov
lds
pop
mov
adc
cmp
jbe
push
dec
shl
scas
les
xchg
into
lds
arpl
xchg
push
imul
jo
loopne
test
rorb
sarl
out
jmp
cmp
or
bound
mov
pop
push
roll
push
rorb
insb
sahf
repz
test
pop
cmpsl
dec
sbb
push
dec
push
mov
in
mov
je
aad
imul
jo
jg
pop
inc
sbb
xor
push
cmp
data16
mov
add
xchg
mov
sbb
mov
or
inc
pop
fwait
xchg
addl
add
pop
dec
push
outsb
xchg
push
jge
test
inc
dec
out
jge
es
or
imul
sub
and
insb
cmp
imul
jmp
xor
in
push
out
or
stos
sub
sbbl
mov
push
lea
cld
les
je
mov
jp
add
jl
push
jns
lret
add
repz
outsl
adc
rorl
cs
ljmp
lods
cmc
syscall
fmul
pop
int
jns
pushl
sbb
xchg
test
push
sub
cmp
xchg
fwait
movsl
mov
mov
sub
dec
aam
pop
les
loop
fadd
sarl
scas
xlat
movsb
and
and
insb
or
frstor
sub
cmpsb
mov
add
test
negl
xor
out
pop
jb
xlat
mov
aam
push
inc
mov
and
sub
push
mov
fbstp
mov
mov
xor
lock
adc
scas
sbb
fbstp
loopne
sbbl
jns
lods
mov
ret
inc
xchg
mov
cwtl
mov
mov
add
cmpsb
xchg
jg
sub
fsubrl
sarb
daa
daa
mov
rol
movsb
aaa
incl
or
movsb
sti
adc
inc
scas
aas
add
pop
sahf
in
ja
adc
ljmp
data16
xchg
iret
rolb
loop
xchg
mov
xchg
movsb
cwtl
inc
fldenv
sahf
jns
add
add
adc
inc
xchg
sub
imul
mov
xchg
sub
es
inc
push
cmpl
in
std
es
jb
sbb
pop
pop
mov
popf
test
jno
loopne
divl
test
loopne
cmp
mov
shrl
or
and
test
test
lret
insb
sti
pushf
clc
jmp
xchg
idivl
jp
pop
push
xchg
adc
lret
cltd
xchg
loop
leave
dec
or
and
rcl
or
jb
outsl
imul
fbstp
adc
mov
aaa
adcl
scas
pop
xchg
scas
lock
repz
xor
sub
scas
cs
mov
mov
dec
xchg
adc
push
cmpsl
pop
jmp
inc
cmp
lods
add
out
adc
outsl
jle
mov
imul
adc
adc
pop
push
or
cs
fnstsw
dec
jne
stc
ficoms
add
xchg
loopne
lds
pop
subb
mov
loop
mov
imul
lock
mov
pop
test
test
mov
cmc
adc
mov
add
add
dec
repnz
add
pop
jg
jle
or
cmp
dec
pop
mov
add
jb
push
fstp
fists
movsb
xchg
push
pop
adcb
idivl
mov
dec
testb
sub
xor
clc
divl
fnsave
js
push
outsl
cltd
sti
cmp
int
or
jg
and
adc
mov
add
lods
or
xchg
test
jg
mov
dec
jbe
and
repnz
sbb
test
notb
repnz
sub
test
sub
inc
inc
int3
sub
mov
ljmp
cli
adc
test
jp
cmp
jecxz
push
data16
jmp
pop
stos
lds
mov
or
add
pushf
adc
scas
rcrb
lcall
or
mov
pop
and
sbb
pusha
in
fwait
mov
and
ds
call
dec
loope
ror
pusha
popa
jns
outsl
mov
push
mov
je
insl
xor
call
cs
cmp
or
xchg
inc
pop
add
pop
push
loop
push
xor
lret
xchg
hlt
mov
imul
test
rol
inc
sbb
adc
mov
mov
mov
arpl
dec
sbb
push
mov
bound
ja
ljmp
mov
jne
sub
leave
cmp
out
push
ljmp
jmp
jg
clc
int
add
pop
in
and
gs
adc
xlat
inc
sub
xor
jb
roll
dec
mov
xchg
cs
jns
movb
xchg
or
pop
mov
lahf
jle
mov
mov
mov
push
pop
in
push
lret
out
pop
xchg
call
loop
lret
sub
or
jno
fucom
daa
lea
sarb
adc
mov
pop
xor
hlt
adc
stc
pop
sahf
and
adc
cmp
test
fidivrs
xchg
out
js
loope
ror
sub
std
inc
popf
fdiv
subl
js
lods
call
push
ljmp
out
pop
sub
frstor
mov
aad
mov
out
sbb
hlt
xchg
fsubrs
and
xor
dec
fbld
mov
les
or
loope
mov
dec
and
repz
cmp
iret
push
xchg
stos
jnp
mov
sub
sbb
adc
fildll
popa
scas
inc
aad
push
lea
aam
sbbb
mov
cmc
fimull
or
cmpsl
bound
xchg
enter
add
decl
in
lds
inc
pop
test
stos
test
mov
fs
xchg
inc
sbb
mov
rcll
or
add
dec
sub
popa
shrb
ljmp
js
push
dec
out
mov
xchg
push
cmp
lods
add
pop
repnz
test
lods
mov
lahf
jmp
mov
jmp
test
test
insb
add
icebp
xchg
dec
sti
dec
test
xchg
and
jnp
inc
in
faddp
fists
cmpb
in
pop
iret
push
icebp
inc
ret
cmp
lock
fildl
insl
fcoml
sub
mov
repz
stc
mov
and
call
jl
ja
sbb
dec
cmpsl
dec
arpl
int
repnz
dec
push
ret
mov
pusha
movsb
push
icebp
or
jmp
ja
xchg
xchg
sbb
push
vcmpss
in
sub
cmp
divb
mov
jle
scas
inc
movl
pop
addr16
fiaddl
lcall
lds
call
sbb
or
adc
das
pop
ja
fldlg2
mov
pop
adc
movsl
mov
scas
icebp
daa
jecxz
jmp
call
sbb
stc
mov
roll
test
xlat
loop
in
jp
and
mov
int
inc
in
mov
dec
int
add
jo
movsb
inc
int3
jmp
aad
ret
mov
xor
es
jp
js
pop
jl
int
hlt
test
jecxz
mov
or
pushf
cmpb
and
mov
in
jns
lods
xchg
adc
fisttpll
mov
push
insl
lds
gs
pusha
icebp
sbb
leave
add
repz
int
xor
stc
mov
adc
mov
xchg
jmp
push
mov
sub
ret
jb
jle
out
pop
adc
aad
mov
jae
pop
arpl
mov
xchg
jae
aad
sbb
jno
pop
adc
cmp
cmp
xchg
jle
push
sbb
dec
xor
dec
push
aas
and
push
lds
xor
fwait
and
aad
xchg
pop
mov
mulb
pop
push
push
int
inc
ret
nop
mov
cmp
roll
mov
fsubrl
popf
mov
or
imul
adc
sar
dec
jo
jo
push
lods
pop
imul
sbb
cmp
fbld
pop
cmpsl
outsl
ret
ficoms
add
or
and
jb
mov
mov
addr16
dec
notl
and
jb
sbb
aad
mov
jno
mov
adc
es
cmp
cmpsb
jg
mov
push
pop
xlat
mov
loopne
sub
xchg
jle
xchg
and
mov
xlat
mov
mov
inc
and
pop
mov
sbb
jne
dec
fsubs
mov
push
jo
pop
stos
punpcklbw
enter
dec
cmp
pop
dec
and
xchg
fsubp
sahf
gs
jp
lret
sbb
mov
mov
pop
nop
mov
pop
adc
fbld
and
inc
mov
fbld
mov
mov
dec
fldenv
stos
in
xor
vpsubsw
mov
stc
cs
bound
jecxz
cmp
nop
push
jbe
sbb
divl
rcrb
lods
arpl
mov
les
fldl
out
push
xchg
in
out
mov
cld
add
xor
movsl
pop
mov
orb
pop
into
ljmp
mov
mov
lahf
and
add
pusha
lcall
aam
fidivl
je
sarl
js
jbe
scas
daa
cmp
daa
icebp
xor
fdivr
fistpll
loope
cli
repnz
xor
and
int3
push
in
pop
test
push
pop
iret
push
inc
lea
sub
out
cmc
and
jg
fldl
repnz
and
fcmovb
ret
into
test
rcr
sbb
push
gs
lret
fsubr
cmc
and
rcr
pusha
ja
xor
xor
cmp
mov
sbb
xchg
ja
inc
jecxz
push
sub
int3
rol
xchg
fdivrl
push
dec
adc
in
xor
outsl
leave
pop
addr16
adc
add
pusha
outsb
faddl
mov
std
lods
and
xchg
pop
jb
popa
das
or
lea
sbb
ss
cwtl
push
cmp
cmp
cmp
sub
jno
into
test
loope
loop
push
mov
xchg
loop
icebp
dec
pop
shlb
lock
imul
or
test
xor
inc
jg
int3
pop
mov
fnsave
mov
imul
pop
shll
fstps
shll
xor
dec
test
aas
aad
movsl
cmp
insb
sub
and
or
push
mov
idivl
or
lret
sub
xchg
add
out
sbb
and
sbb
add
outsb
adc
sti
data16
mov
adc
sub
arpl
std
pop
jns
rclb
mov
sbb
mov
test
add
scas
add
mov
int3
stos
jnp
stos
adc
pop
ret
out
sar
sub
fdivrl
sbbb
ljmp
or
push
fstpl
xchg
or
mov
pop
cwtl
cmp
gs
lret
jne
ss
jg
jecxz
pusha
mov
mov
inc
loope
dec
sbb
jp
xor
cmp
pop
sub
scas
icebp
scas
jmp
mov
gs
mov
jmp
pop
and
loopne
lcall
shll
sub
inc
mov
jns
out
pop
mov
cmp
sub
mov
sbb
arpl
push
push
stos
push
popa
mov
cli
pop
cltd
xor
les
xor
pop
in
iret
jo
add
fabs
xchg
outsl
sahf
xchg
dec
cs
xor
mov
dec
xchg
ja
mov
mov
nop
dec
fsubs
movsb
adc
mov
cltd
jge
and
call
dec
mov
in
xchg
sbb
lcall
mov
loop
les
mov
into
bound
sbb
lcall
jge
std
inc
jp
fnstsw
arpl
ljmp
in
jge
pop
les
cmp
and
jg
jbe
mov
sbb
add
jb
out
jmp
stos
jmp
andb
test
mov
daa
xor
and
out
cmp
cmp
rclb
in
cmp
jecxz
mov
xor
sar
out
xlat
fcompl
imul
mov
sub
or
rol
adc
cmp
pop
or
or
std
mov
and
inc
shl
dec
push
sub
ljmp
pop
xor
enter
add
std
and
sbb
cmp
ret
mov
popa
sub
popf
xor
std
mov
lock
cmp
sub
inc
stos
aad
jmp
lret
pop
es
ret
adc
mov
push
std
add
cmc
pop
xchg
and
xchg
pop
cmc
addr16
loop
sbb
jns
repz
ljmp
jae
jo
adc
pop
jmp
cli
ret
flds
popf
sbb
mov
sbb
cs
mov
adc
jb
adc
je
pop
mov
pushf
xor
push
pop
dec
mov
div
push
cmpl
add
sbb
push
and
scas
jns
sbb
mov
pop
les
inc
xor
mov
test
imul
fdivs
dec
mov
xchg
pushf
sarl
movsl
pop
xor
or
loop
dec
lds
cmp
cs
mov
into
cwtl
aam
push
in
cmp
cmp
xor
sub
mov
or
xchg
inc
jnp
cltd
rorl
dec
add
pop
in
jl
fidivs
nop
inc
int3
push
mov
adc
aam
xor
jo
adc
or
bound
jne,pn
pushf
dec
and
scas
addr16
data16
fst
jo
jle
pop
ds
mov
insb
or
xor
mov
mov
cld
sahf
xor
ss
stos
cmp
mov
ficompl
sbb
repz
jnp
jb
std
or
idivb
dec
fimuls
push
add
sbb
cli
icebp
and
aaa
js
mov
aam
cmp
js
sbbl
xchg
dec
rorl
cmp
push
and
mov
mov
push
cmc
es
pop
cmpsb
xlat
sbb
fcom
pop
sahf
incl
and
and
je
pop
inc
cltd
mov
in
lods
mov
popf
add
rcll
xchg
je
dec
loope
xor
adc
adc
das
outsl
adc
daa
add
sub
ljmp
adc
pop
jle
sub
inc
repz
xor
sbb
rorb
pushl
leave
xor
push
outsb
in
out
repz
sti
pop
popa
icebp
push
dec
pop
pop
orl
jg
sub
add
sbb
jg
out
pop
in
int
movb
in
loop
xor
jae
xchg
addr16
movsb
sbb
cmpsb
add
lcall
ret
xlat
jl
mov
outsl
xor
popf
cmp
dec
pop
sbb
mov
inc
fdivrl
gs
shlb
jae
sahf
fisubrl
add
add
push
cmp
sub
dec
pop
xchg
call
cmp
movsl
ljmp
jne
sti
jae
mov
sbb
xchg
pop
xchg
cld
pop
mov
out
dec
jns
test
enter
call
pop
pushf
push
daa
push
push
dec
cmp
jmp
add
imul
arpl
enter
loopne
add
sti
int
adc
les
sahf
push
or
xchg
push
or
leave
mov
xchg
insb
shll
and
lret
dec
pop
xor
aas
inc
out
push
fdivr
jmp
pusha
outsl
fidivs
and
jnp
lods
dec
loopne
inc
in
stc
mov
ficoml
outsl
and
cmp
bound
icebp
sub
mov
cmp
cmp
outsl
add
fwait
adc
or
mov
sub
lods
orb
jmp
jbe
inc
je
ljmp
mov
mov
inc
jmp
pop
cmp
pop
jl
xchg
ror
or
into
je
loopne
mov
adc
imul
add
or
ds
pop
fs
push
ficoms
push
repnz
shll
xchg
in
orb
nop
add
addb
rclb
xchg
out
loop
loopne
add
rol
add
and
cmpsb
pusha
ret
jle
pop
imul
adcl
movsb
push
pop
and
push
push
dec
xchg
or
ror
push
aas
daa
mov
punpckhbw
or
ss
movsb
stos
andb
repnz
pop
in
ret
data16
add
mov
push
gs
xchg
sub
lods
test
ja
arpl
roll
repnz
test
cli
inc
xor
xchg
arpl
outsb
inc
mov
cmp
and
cltd
mov
lds
je
shr
pop
adc
arpl
divb
pop
jns
inc
sbb
dec
sub
call
test
xor
push
mov
dec
popa
pop
in
mov
jg
fadds
pop
std
dec
iret
in
jo
arpl
dec
pop
std
sbb
loope
imul
jmp
out
cmp
sbb
push
movsl
push
sbb
into
pop
inc
pop
add
mov
sub
shl
mov
sbb
sub
sti
popa
bound
jl
adc
xor
add
adc
or
out
js
fxch
rolb
jge
out
pushf
fldl
adcb
push
mov
inc
stc
sub
ror
aam
push
cmp
mov
xchg
into
push
add
push
mov
aaa
outsb
push
cmp
pop
lea
push
and
stc
int3
or
addb
test
std
or
inc
movsl
ds
cwtl
jecxz
mov
sub
sbb
add
cmp
dec
scas
push
loope
inc
xchg
cmp
mov
mov
inc
ds
pop
and
push
stos
sub
cmc
add
pop
cli
popf
dec
ret
xor
sbb
jnp
sub
rcrb
mov
rorb
adc
push
inc
stos
gs
es
pop
dec
test
pop
adc
lcall
std
push
sub
test
das
and
out
lock
push
adcb
xor
jno
test
pop
in
stos
inc
ljmp
xorb
popa
adc
rol
outsb
data16
sub
stos
xchg
paddsw
pop
jmp
movsb
cmpsl
fcomps
repz
sub
or
in
mov
out
in
sub
inc
in
pop
fwait
popa
adc
mov
lock
cwtl
call
inc
popa
ljmp
push
pop
mov
lea
push
test
pushf
cmp
cmp
shrb
mov
jbe
lods
adc
xor
dec
mov
push
push
repnz
xor
xor
loope,pt
push
movsl
repnz
jmp
sbb
pusha
jle
sbb
xchg
icebp
mov
addr16
sbb
sbb
pop
dec
notl
sub
loop
loop
jp
test
xchg
adc
test
std
loopne
pop
loopne
cmp
push
dec
call
cmp
or
dec
call
out
or
das
mov
and
lea
or
jae
aad
mov
xlat
icebp
in
inc
pushf
mov
mov
push
fnstcw
ds
lret
test
stc
xchg
mov
xchg
int3
cs
and
movsb
lahf
mov
mov
xchg
pop
mov
enter
ret
or
call
jnp
fisttpll
adcl
cmp
clc
into
lcall
dec
inc
sub
ds
xchg
adc
and
fiaddl
outsb
aad
push
jnp
jmp
roll
scas
pusha
jns
and
leave
mov
xor
repnz
sub
cs
mov
cmp
jbe
sub
mov
dec
jecxz
movsl
jle
sbb
in
pop
sub
inc
xlat
push
or
jge
cs
das
les
mov
fmuls
das
sub
xor
xchg
fscale
lods
rcll
aaa
into
fucom
into
inc
push
sarb
popa
xor
xchg
insb
aaa
ljmp
sbb
push
cmpsl
scas
sbb
inc
je
jnp
mov
and
ljmp
pop
pop
out
mov
adc
je
icebp
or
incb
ljmp
addr16
or
push
cmpsl
pop
into
pushf
jno
mov
jno
loope
mov
push
sbb
sub
cmp
flds
sbb
lahf
mov
pop
xor
pop
inc
pop
stos
mov
jne
push
in
fcomps
movsb
xchg
cmp
out
test
rclb
mov
mov
clc
cmp
mov
mov
aam
xchg
adc
jecxz
sarb
inc
mov
mov
fnsave
xchg
push
mov
lcall
mov
push
and
lea
sbb
lea
arpl
jl
xor
sub
ds
mov
mov
or
push
dec
insb
leave
jb
sub
addr16
fisubs
sbb
mov
pop
lods
aad
pop
cmc
inc
sti
clc
in
adc
arpl
sbb
arpl
and
test
xchg
xor
aad
cmpsb
xor
pusha
jmp
cld
icebp
push
adcl
pop
bnd
pop
test
xor
push
fimuls
std
mov
push
mov
jge
mov
jb
or
fistl
dec
std
inc
push
movsl
push
and
jns
test
cmp
cmp
movsb
add
mov
mov
mov
in
ret
xchg
and
lds
inc
jbe
jbe
shll
sbb
mov
jns
adc
aam
inc
inc
out
mov
lds
repz
push
and
add
mov
lods
fcoml
aaa
vblendmpd
fwait
sbb
mov
mov
mov
lret
ds
stos
int
outsb
popf
mov
mov
inc
fldcw
xor
mov
xor
cmpsb
pop
push
pushf
loopne
sbb
insb
mov
testb
stos
inc
fwait
adcl
out
push
shrl
mov
hlt
xchg
aad
call
js
gs
out
xchg
bound
jbe
je
daa
pushf
aas
sbb
adc
sbb
sub
cmp
fstpl
outsb
test
sbb
adc
sahf
data16
jo
testl
xchg
ds
add
rclb
scas
mov
dec
mov
popa
sub
or
insb
aam
aam
lods
fdivp
cmpsb
inc
cli
cltd
jl
aad
aaa
fists
pop
ljmp
sub
lcall
test
add
std
add
leave
push
roll
in
adc
aaa
call
jmp
jbe
mov
pop
ret
xor
push
push
incb
pop
xchg
popa
sub
cmc
addr16
movsb
popa
push
mov
mov
iret
xchg
inc
negb
mov
mov
out
cs
dec
mov
pop
mov
clc
mov
push
es
shlb
ss
cmc
jmp
push
adcb
inc
inc
leave
xlat
data16
jl
push
scas
cmp
xor
mov
push
leave
stc
xchg
in
adc
lods
cwtl
push
inc
inc
movsb
jle
sbb
in
jbe
movlps
js
jnp
sub
pop
xchg
adc
mov
push
push
movsl
outsb
test
int
push
aas
jae
xor
sub
loop
outsl
into
ljmp
sub
add
loop
dec
jg
clc
jo
push
lds
sub
loope
int
ja
mov
inc
cld
mov
addr16
js
xchg
test
xchg
xchg
movsb
xlat
rclb
lret
lret
dec
das
pop
mov
dec
call
and
mov
pop
ja
imul
add
sahf
inc
cli
scas
xchg
pop
cmp
cmpsb
xor
xor
dec
loope
xchg
push
and
ja
xor
push
sbb
movsb
stos
rclb
mov
mov
in
cmp
stos
js
cmp
daa
ds
add
xor
mov
cli
repnz
shlb
neg
scas
push
fnstsw
dec
mov
cwtl
mov
xchg
mov
call
into
mov
loope
add
and
pop
cmpsb
mov
iret
inc
sub
mov
inc
inc
aam
mov
lret
and
mov
out
arpl
and
outsl
mov
icebp
aaa
push
je
and
stc
or
movsb
add
out
imul
fwait
mov
jne
sbb
popa
or
mov
pop
stos
pushf
dec
dec
dec
mov
popf
adc
pop
adc
inc
les
fiadds
push
or
in
mov
jns
subb
mov
mov
fs
mull
pop
mov
bnd
or
pop
js
sarb
dec
das
xor
xlat
push
or
xlat
daa
pop
pop
adc
mov
push
arpl
cmp
in
jl
add
test
lods
push
sbb
and
xor
cmpsb
cmc
negl
adc
in
test
pop
jbe
jecxz
sbb
xor
js
bound
aad
mov
outsl
cmpsb
dec
mov
ss
push
xor
in
push
push
cmp
mov
cmp
sti
in
dec
mov
add
testl
mov
adc
pop
mov
cmp
xchg
mov
inc
adc
leave
sub
mov
jbe
jns
pop
dec
ror
and
or
fmul
sbb
and
jge
and
adc
jne
decl
mov
scas
inc
push
pop
dec
int3
fisttpll
mov
lahf
mov
mov
mov
adc
leave
add
imull
push
or
cmpl
jl
xchg
push
insl
stos
out
xchg
les
lret
jb
dec
out
inc
leave
mov
call
outsl
mov
mov
enter
ficoml
fbstp
es
in
and
xchg
fcmovne
add
lds
enter
aad
pop
cli
icebp
nop
bound
add
lods
inc
jo
mov
pop
push
flds
insl
jg
ret
push
push
and
pop
repnz
xor
inc
mull
or
adc
sbb
notl
and
loop
mov
out
addb
outsl
loope
jae
add
pop
cli
adc
ret
xchg
add
pop
cmp
and
jo
bound
lock
rclb
std
mov
in
out
adc
dec
fidivl
cmp
jne,pt
arpl
pushf
cli
xchg
mov
push
sarb
xchg
mov
push
sbb
or
mov
mov
mov
bound
or
fsubl
jle
jo
sbb
push
int
push
mov
mov
ss
lcall
out
shlb
cmp
mov
adc
lods
lret
push
shll
adc
shll
pop
cmpsl
sti
push
ljmp
hlt
dec
sahf
and
mov
jge
in
in
jmp
into
and
std
inc
xor
mov
inc
push
jns
mov
insl
pop
adc
stc
pop
popa
pop
cmpsl
andl
cmp
in
mov
loope
push
sub
add
mov
dec
sarl
add
mov
adc
fdivl
adc
mov
fsub
movsl
popf
ret
pop
cs
outsl
adc
adc
push
rorl
pop
stos
js
fildl
mov
jg
xor
das
insl
xchg
icebp
or
dec
or
inc
in
cmp
jg
push
and
xchg
fsubrs
adc
or
cmp
fbld
daa
rcrl
shll
dec
divl
lds
adc
iret
imul
call
clc
incb
inc
aas
shll
or
hlt
sbb
daa
sbb
push
push
or
mov
sub
daa
imul
ds
repz
mov
jp
sbb
jbe
cmpsb
push
push
aas
pop
test
pop
jne
jge
out
mov
cwtl
insb
out
stos
insb
mov
sti
aaa
jp,pt
les
xor
leave
xchg
int
or
cmpl
adcl
jo
cmc
sbbb
gs
and
das
clc
pop
test
fistpll
mov
jbe
popa
lcall
fildll
and
icebp
nop
pop
cmc
js
push
out
add
enter
xchg
movsl
jge
cmpsl
outsb
xor
aaa
dec
orb
cmp
mov
aad
bound
adc
push
clc
push
push
pop
sbb
daa
pop
jp
pop
inc
sarb
mov
mov
or
sarb
inc
xchg
ret
inc
mov
rol
jo
mov
dec
std
stc
mov
push
pop
xor
pop
cltd
push
xchg
in
fclex
punpckhbw
enter
gs
mov
inc
sbb
mov
sarb
mov
mov
sub
pop
into
jmp
inc
jmp
adc
cmpsb
pop
les
xchg
sbb
ret
or
inc
push
push
mov
sti
andl
lods
in
lods
mov
pop
pop
sub
paddb
ljmp
xchg
outsl
sub
cmp
lcall
jmp
outsb
xor
cwtl
push
insl
idiv
jnp
call
jle
sbb
into
or
mov
imul
xchg
mov
test
fstpl
ret
add
je
mov
push
fwait
or
fists
jg
sbb
push
adc
sub
pushf
lock
dec
and
and
test
lds
pop
sahf
mov
popf
add
pop
sbbb
enter
fsin
pop
jecxz
pop
inc
sbb
jp
shl
push
popa
arpl
pop
adc
cmpsl
test
in
sahf
popf
mov
ljmp
jnp
add
mov
enter
test
jl
push
daa
fnstenv
inc
xchg
dec
dec
mov
sti
leave
das
jo
iret
cmpsl
clc
mov
mov
inc
pop
dec
push
mov
sub
dec
dec
xchg
cmp
jle
mov
xchg
inc
test
pop
loop
std
rorb
and
leave
rorl
jb
jmp
loope
sub
mov
mov
push
sti
sbb
js
dec
cmp
roll
lock
ret
push
pop
mov
mov
cmp
mov
fwait
mov
add
mov
sbb
cmpsl
mov
xchg
sbb
sub
mov
into
pop
js
push
jae
mov
cmp
in
loop
dec
std
icebp
sbb
xchg
sub
outsb
test
shrl
mov
jae
cmp
das
pop
mov
fwait
cltd
in
push
ljmp
pushf
repnz
dec
dec
cmpsb
add
outsl
daa
add
jge
insl
mov
loope
test
xor
sbb
adc
xor
loope
inc
jbe
sar
mov
fildl
xlat
cmp
das
mov
dec
rcrl
in
mov
or
aad
fwait
and
push
adc
data16
cmp
lahf
dec
and
out
push
sbb
hlt
popf
test
pop
nop
push
adc
daa
adc
jae
jae
stos
in
mov
jge
push
sub
gs
inc
and
stc
dec
data16
or
fwait
jb
push
cmp
pop
mov
movsb
mov
call
xchg
data16
out
dec
test
xor
cmpsb
in
mov
std
lret
add
lock
lahf
loopne
jle
jnp
push
mov
mov
inc
orb
outsl
cmpl
pop
xchg
xchg
lock
in
mov
nop
lods
rclb
jle
adc
push
outsl
jne
jnp
into
shrl
aam
add
jbe
add
divl
add
sbb
pop
sbb
mov
jns
das
pop
stos
idiv
push
stos
cmp
fnstenv
jecxz
ds
aam
outsb
and
xchg
mov
cmp
cmpsl
jbe
or
dec
or
push
in
pop
pop
scas
loope
push
cmp
popa
jne
sbb
lcall
pop
loop
xchg
lcall
pop
stos
jo
jmp
mov
or
inc
jmp
sbb
jl
adc
call
inc
jnp
mov
or
push
mov
shr
inc
stc
push
dec
xlat
xchg
stos
jae
or
xlat
iret
push
push
testb
int3
push
test
dec
aad
in
dec
iret
inc
ret
cltd
fcompl
cmp
lahf
lock
daa
ret
in
repnz
xor
xchg
xor
mov
aaa
fimuls
mov
cmc
and
cli
stc
mov
inc
imul
or
clc
and
mov
pop
jnp
ljmp
stc
xchg
mov
sbb
add
jne
pop
and
out
xchg
xorl
sub
adc
or
jle
outsl
jmp
imul
adc
cmpsl
pop
leave
push
push
jnp
inc
and
hlt
cwtl
ret
and
insl
mov
imul
test
push
insb
pop
loope
arpl
add
hlt
xor
sarl
mov
push
or
nop
arpl
lret
aas
fwait
adc
push
cli
push
add
adc
stos
mov
bound
test
jnp
mov
sbb
sbb
push
add
in
adcl
ret
nop
cmp
shrl
mov
jl
mov
jns
adc
pop
dec
cmp
sbb
add
orb
jbe
push
pop
fwait
mov
sbb
and
and
or
fst
inc
jle
xchg
xor
lods
push
mov
xchg
dec
insb
ja
cmpsl
repz
mov
js
push
gs
movsb
daa
les
iret
fsub
lds
xchg
mov
and
ret
add
cmp
daa
imul
outsl
popf
push
xchg
xchg
push
mov
mull
push
mov
pop
jno
fidivrs
push
mov
lcall
and
push
daa
test
pop
loopne
or
iret
mov
in
rol
push
insb
rcrb
loop
movsb
dec
std
xchg
mov
repz
aad
aam
cmp
and
dec
add
jmp
mov
push
test
lods
fcompl
sahf
cmp
jns
jmp
jge
push
repnz
insb
lcall
fstps
mov
cmpl
mov
fiadds
pop
add
imul
xor
test
mov
gs
push
cmp
clc
xchg
add
inc
pop
sub
add
push
pop
pop
ret
imul
icebp
adc
jbe
xchg
push
fidivrs
sub
cmpb
xlat
hlt
sub
lahf
es
call
mov
cld
shlb
mov
outsl
jp
dec
scas
call
fisttpl
cmp
xchg
jns
jle
out
and
pop
rcrb
adc
dec
mulb
xor
mov
in
xor
cmp
mov
imul
es
outsb
mov
icebp
out
cld
mov
push
mov
aaa
loopne
xor
pop
sti
pop
dec
fmull
je
push
shll
std
xchg
movsb
enter
sarl
movsl
ljmp
insl
jns
adc
xchg
lahf
shlb
out
pop
xchg
in
lods
push
mov
rorw
adc
inc
dec
dec
adc
adc
in
dec
add
cmp
inc
inc
xchg
daa
repz
push
lods
push
scas
xchg
pop
stos
imul
addl
bound
adc
aaa
ja
imul
cmpsl
imul
and
ret
mov
orb
cld
fs
int
jns
push
into
clc
jmp
dec
dec
cmc
xchg
jl
pop
cmp
ret
insl
int
scas
mov
lahf
or
pop
rcll
fiaddl
push
out
aad
sub
lret
scas
lods
fimuls
dec
bt
xchg
ror
and
out
pop
in
je,pt
mov
int
in
mov
rol
mov
pop
mov
push
fimull
jns
push
sub
pop
nop
scas
sbb
jb
out
je
or
or
sbb
fldcw
out
aas
cmp
and
and
cmp
aaa
mov
jp
je
cmpsb
xchg
mov
imul
push
sbb
xlat
enter
negl
xor
clc
mov
sub
dec
cmpsl
mov
ret
sub
int3
sub
sarl
push
mov
inc
dec
out
add
pop
mov
mov
fcompl
fists
mov
mov
adc
aam
add
mov
pop
adc
xchg
insl
loop
shlb
fidivs
data16
je
and
test
rcll
push
push
mov
jae
inc
mov
jae
push
jge
add
xchg
rcrb
xchg
push
icebp
cs
jg
in
movsb
pop
rcrl
mov
and
mov
mov
ja
cli
push
or
aad
shll
pop
mov
mov
pop
das
pop
sub
addl
imul
inc
repnz
xchg
mov
jecxz
cli
bound
cmc
sarl
add
xor
pop
ret
and
jo
inc
popa
jecxz
mov
out
inc
mov
pop
sbb
hlt
psubsb
fisubl
mov
loopne
stc
ljmp
aas
leave
ds
add
stos
mov
pop
mov
jnp
insb
mov
inc
xchg
sub
andb
aaa
stos
xchg
ja
pop
pop
pop
mov
xchg
add
push
xchg
sarl
cwtl
mov
decb
addl
inc
fcomi
scas
cmp
sub
pushf
and
cli
jmp
cld
pop
in
fucom
ds
and
sub
push
fimull
xor
sub
rorb
ficomps
call
out
clc
push
mov
jo
in
sarb
adc
sbb
pop
sti
inc
push
outsb
adc
lcall
int
aad
jo
movsb
out
nop
or
sbbb
shrb
sbbl
push
jge
je
nop
iret
pop
cmp
add
repz
orl
or
stos
clc
cmp
scas
lods
popf
lahf
mov
ret
sarl
pop
pop
pop
xchg
pusha
shlb
and
scas
push
sbb
cli
out
cmpsb
sbb
add
jl
xchg
mov
xchg
test
xchg
lods
adc
mov
dec
pop
cs
stos
push
repz
aad
or
mov
sub
shlb
insb
test
fldcw
xor
stos
ja
addr16
popf
rorl
sarl
and
mov
inc
xchg
fisttps
lcall
push
pusha
lahf
mov
sbb
or
adc
gs
add
leave
xlat
jge
inc
mov
push
sbb
or
fimuls
xchg
in
sahf
lcall
stos
lcall
mov
push
mov
ss
stos
in
jns
cwtl
or
dec
lret
mov
mov
repz
repnz
shlb
stos
and
out
jle
stos
mov
mov
loopne
jmp
lods
push
fimull
shl
mov
popf
sbb
ficoml
jbe
inc
dec
dec
fcmovu
vpmullw
and
sub
push
pop
mov
pop
sti
or
xchg
pop
push
add
stos
in
dec
inc
adc
dec
fmull
ss
ds
lock
mov
lock
cmp
xchg
adc
push
xchg
iret
sub
jo
aad
mov
sub
xchg
jmp
cmp
insb
push
or
mov
inc
sahf
idivb
insb
pop
popa
bound
movsl
fimull
mov
adc
jo
push
add
adc
dec
outsb
scas
dec
inc
shrl
ret
test
add
clc
dec
push
sbb
out
icebp
fisubrs
sbb
rol
adc
mov
repnz
push
mov
into
mov
gs
jno
sub
add
nopl
jmp
repnz
adc
xchg
stos
push
jle
mov
push
mov
jo,pn
xor
pop
push
aas
cmpsb
mov
jo
enter
cmp
hlt
mov
data16
add
push
and
pop
popa
and
pop
push
or
in
pop
test
cltd
insb
stc
lea
push
mov
sbb
mov
lret
icebp
das
loop
jnp
and
in
ret
ljmp
popa
mov
mov
lcall
inc
adc
mov
jl
mov
add
jns
xorb
es
lahf
lds
pop
pop
cmc
mov
punpcklwd
push
loope
xchg
mov
nop
inc
arpl
sub
pop
xchg
arpl
scas
out
loope
out
jle
cmp
dec
shll
inc
push
sbb
jb
mov
xchg
sbb
enter
mov
lret
idivl
cwtl
pop
in
sub
mov
sti
push
cmpsb
jo
ret
sbb
xchg
ljmp
push
push
mov
mov
in
jno
jmp
cwtl
jae
data16
out
cltd
sbb
shrb
xor
fstpt
les
mov
and
call
pop
dec
mov
jae
out
inc
xchg
cld
mov
add
test
aaa
int3
inc
push
mov
mov
xlat
cli
in
lods
imul
mov
cmpsb
inc
lods
pop
sar
mov
xlat
inc
cmp
lea
shrl
sub
and
adc
inc
cwtl
ljmp
sarl
inc
test
lods
inc
mov
jns
enter
push
push
out
js
ret
xor
loop
push
mov
aad
lock
inc
clc
xlat
ljmp
push
loopne
or
mov
fadds
sub
cmc
fcomps
mov
mov
dec
enter
add
stc
xlat
pop
adc
into
inc
push
sar
xor
loop
cwtl
ficoml
cmpb
pop
mov
mov
outsl
xor
jne,pn
mov
push
enter
sbbl
jo
push
inc
push
arpl
xchg
sbb
add
inc
es
aaa
mov
and
sahf
rolb
pop
mov
inc
aaa
repz
fidivrl
inc
enter
data16
add
adc
fs
aaa
mov
push
cmc
jbe
orb
sub
popa
or
out
ds
repnz
out
push
jae
stos
das
cmp
test
mov
inc
data16
dec
sub
and
ljmp
sub
pushf
sub
add
cltd
adc
test
das
sbb
jno
clts
adc
rcr
stos
push
jp
insl
loopne
les
std
popf
push
std
bswap
dec
fsubrl
sarl
push
pop
repz
mov
jb
roll
jnp
adc
loopne
add
rcrl
sub
adc
aas
cmp
push
nop
shl
rcrl
cmp
jns
jl
xor
ret
movsb
mov
jbe
pushf
fdiv
sbbl
ret
sahf
imul
outsl
dec
incl
lds
or
xlat
lret
push
imul
test
popf
es
push
cmpsb
movsl
data16
imul
ds
or
insl
cli
test
and
les
cmc
lea
leave
fwait
sbb
pushf
test
add
mov
hlt
sbb
repz
jmp
pop
into
enter
inc
not
jecxz
js
and
stos
rcrl
pop
pop
stos
or
bnd
mov
mov
xchg
cmp
pushf
or
in
pushf
mov
dec
inc
je
and
pop
fcom
mov
add
testb
loop
gs
inc
and
push
fs
out
mov
dec
fdivrl
adc
lea
ss
jmp
or
xchg
jae
stos
fwait
scas
cmpsb
das
pop
xor
adc
out
outsb
add
jne
scas
add
jne
xor
jmp
pop
shll
mov
addr16
mov
pop
lret
in
dec
sub
mov
lods
ds
iret
ja
lods
push
pop
out
fwait
pusha
mov
clc
mov
mov
push
pusha
dec
mov
test
and
fsubs
pushf
je
mov
xchg
mov
ss
or
shrb
test
pop
mov
xor
or
call
sub
ss
nop
adc
movsl
adc
scas
inc
fldl
push
xor
out
into
decl
mov
mov
sarl
mov
pop
mov
adc
inc
xor
in
icebp
xchg
mov
test
sbb
test
sub
mov
mov
xchg
imulb
stos
pushf
rcll
sbb
cmp
lcall
inc
and
pop
jo
cmpl
les
fiadds
cmpsl
push
push
imul
movsb
imul
adc
adc
fsubr
ds
jle
bound
mov
fists
pop
orl
sub
pop
pop
bnd
xor
dec
lahf
sti
fdiv
add
es
add
fidivrl
hlt
das
push
sub
jle
xchg
cmp
jnp
mov
xor
mov
in
cli
jp
push
adc
outsl
xor
add
shll
mov
fcoml
lock
lods
pop
mov
sbb
jge
es
sbb
mov
loopne
push
or
call
mov
lods
push
shlb
dec
lods
aas
mov
popf
cmp
pop
push
outsb
push
push
clc
push
out
xchg
mov
pop
sbb
dec
js
ss
ds
cmp
in
outsl
in
fmulp
xchg
jecxz
std
push
push
and
add
dec
jno
inc
pop
dec
ljmp
test
mov
dec
bound
pop
ljmp
leave
repnz
mov
adcb
cmc
nop
into
cmp
stc
or
xchg
xchg
xor
cmpsb
pop
test
and
mov
jo
mov
in
ror
bound
dec
ljmp
stos
mov
xchg
jecxz
push
je
and
cmp
cmpsl
mov
pusha
add
pushf
cmp
js
outsb
push
and
fists
cli
sarl
mov
mov
lods
inc
mov
aas
inc
rcrb
cld
pop
mov
inc
in
push
mov
outsl
inc
dec
xchg
adc
pop
xchg
pusha
pop
xor
bound
push
nop
lock
jae
pop
daa
adc
push
stos
pushf
mov
pushf
push
ds
mov
shll
adc
popf
cmpsb
sub
mov
push
test
cmp
insl
stos
jp
lods
jbe
add
xchg
pop
push
xor
test
movsb
roll
jno
sti
aad
movsbl
outsl
into
test
cmp
xchg
cwtl
in
mov
cs
adc
sub
or
mov
cmpsl
ja
dec
push
jne
subb
js
inc
loope
mov
mov
dec
jmp
xchg
leave
pop
mov
daa
jecxz
xchg
out
cld
jno
enter
shll
sbb
insl
stc
or
mov
inc
pop
mov
push
cltd
inc
lret
lock
and
xchg
add
xchg
insl
jecxz
mov
daa
adc
inc
xchg
jne
pop
and
insb
pop
add
sub
les
dec
mov
push
dec
out
ret
testl
int
push
add
lds
stc
sbb
ficoml
dec
add
pusha
xor
xor
xchg
mov
negl
jge
mov
cwtl
sub
rcr
jge
adc
sbb
popa
ljmp
movsl
in
push
lods
aaa
gs
fldcw
mov
mov
push
movsb
sbb
icebp
inc
inc
mov
push
mov
xor
das
addl
fdiv
mov
cmpsb
lods
mov
fidivs
fmull
inc
shll
jne
cmc
rcl
xor
cmpsl
cmp
xchg
pop
xor
icebp
in
jl
int
or
das
mov
idivb
outsb
cli
ljmp
add
stos
out
xchg
xor
inc
mov
pop
inc
add
dec
pop
push
shr
add
stc
xchg
ja
les
add
in
xchg
push
icebp
mov
push
pop
sbb
loope
or
xchg
mov
pop
cmc
xor
xor
cmpb
add
and
loope
shll
jae
lcall
jae
xor
je
mov
in
sbb
xchg
sub
inc
les
fucomi
aaa
inc
pop
mov
sbb
xchg
adc
push
adc
cmpsb
jne
cmp
add
cli
popf
call
stc
mov
ficoms
xor
or
mov
hlt
popf
cwtl
or
and
shlb
xchg
or
cmp
lret
pop
pusha
scas
jge
mov
dec
jge
xchg
push
sti
and
and
cmp
adc
shrb
aad
int
sbbl
adc
leave
imul
test
xor
and
das
inc
dec
sub
dec
mov
push
inc
push
icebp
stos
call
xor
jo
cld
mov
shll
aam
lods
jbe
adc
orw
xor
cltd
out
ja
rolb
stos
addl
mov
adc
mov
das
mov
pushf
call
ret
fnstsw
add
int
out
leave
cmp
mov
loope
aaa
mov
cwtl
je
insb
push
sbb
rorl
inc
mov
push
imul
push
mov
out
mov
jp
mov
dec
test
mov
jne
mov
insl
pop
sbb
test
bound
cltd
mov
add
jl
fwait
sub
pop
inc
sbb
scas
and
or
lahf
mov
add
mov
into
popf
mov
inc
mov
jns
xor
fildll
repz
cmpsl
inc
xor
aam
mov
in
orb
inc
lds
add
outsl
roll
lret
lcall
shll
int
mov
xor
sub
fwait
loopne
nop
insl
jmp
arpl
movsl
sbb
mov
mov
addb
rorb
jl
or
jb
call
ljmp
cmc
mov
xchg
fcmovnu
mov
shlb
pop
jae
mov
pop
sub
sub
push
dec
lcall
add
lea
mov
jbe
sub
mov
mov
xor
data16
lret
lahf
pop
adc
xchg
mov
je
xchg
mov
or
dec
sbb
pop
mov
xor
insl
pusha
mov
inc
sub
add
imul
ljmp
mov
push
inc
fsubr
mov
jl
add
rclb
jb
mov
in
sbb
addl
xor
jg
outsb
pop
insl
push
imul
cmp
or
mov
leave
inc
ds
sbb
jg
xor
sub
adc
mov
scas
sbb
out
shlb
sub
dec
push
dec
push
stc
leave
popl
add
xor
ljmp
xchg
in
dec
mov
pop
je
ss
pop
mov
repnz
inc
push
xor
aam
pop
mov
add
mov
jmp
rolb
cmp
inc
dec
cmp
xchg
stos
xlat
xor
pop
inc
pop
gs
mov
xor
inc
pop
cmpl
pop
xor
add
jbe
xchg
dec
test
mov
out
ds
push
dec
lahf
pushf
add
sbb
mov
jmp
inc
mov
xlat
sbbb
notl
mov
cmpsb
jno
adc
pop
enter
mov
movsb
notb
xchg
je
push
pop
imul
dec
mov
xchg
adc
std
enter
inc
pop
les
xor
push
ret
sbb
mov
sub
cld
jns
cs
loopne
cmpl
lea
inc
sbb
nop
dec
pop
xor
jg
cli
test
jp
into
or
jl
push
or
or
pop
push
icebp
jecxz
lcall
xchg
test
fimull
faddl
and
lret
cmp
sub
and
xchg
xchg
std
push
sub
cwtl
mov
and
inc
stos
call
and
add
push
scas
dec
clc
adc
cld
mov
andb
pop
xor
mov
add
scas
data16
mov
add
xchg
setne
aam
or
add
pusha
mov
rcl
cld
push
dec
inc
jae
xchg
push
lock
fstp
idiv
mov
or
push
pushf
cmp
push
pop
push
sub
insl
jo
rclb
pop
arpl
shr
dec
std
or
jns
daa
fs
xor
pushf
inc
fdivs
mov
pop
xchg
js
lods
inc
test
outsb
mov
sub
push
dec
shl
or
xor
je
cwtl
cmpb
mov
pop
and
lret
pop
in
or
in
mov
xchg
pop
pop
inc
inc
ds
call
xlat
lods
mov
sub
movsb
stos
test
sbb
xchg
loopne
cli
test
xor
mov
bound
xor
jp
xor
sarl
and
in
mov
pop
cltd
cmc
cli
fdivs
push
fwait
std
jns
and
mov
out
pop
cmp
jne
inc
xlat
xchg
divb
call
adc
pusha
outsl
in
outsl
sbb
icebp
push
mov
mov
mov
sti
adc
sub
cmp
jl
dec
jns
xlat
or
idivb
std
pop
cmp
xor
push
lcall
xchg
call
jae
adc
loopne
in
or
mov
cld
or
cmp
cmp
roll
pop
adc
sbb
xor
sub
loop
inc
xor
inc
and
or
loope
sbb
mov
add
jbe
push
fs
inc
xlat
lds
mov
add
sete
push
cmp
or
push
and
push
in
clc
scas
xlat
dec
mov
or
outsl
sahf
add
insl
aad
call
ror
inc
push
mov
pop
rorl
sbb
pop
sub
sbb
scas
fisubrl
add
xchg
stos
xchg
mov
mov
jmp
outsl
add
or
fidivrs
sub
jb
mov
enter
pop
ja
in
inc
pop
push
test
or
lods
push
jmp
cmp
pop
test
adc
adc
shlb
int3
jnp
sub
popa
jle
and
inc
xchg
or
push
shll
mov
jnp
add
rorb
jo
loope
add
push
cmp
mov
mov
add
lods
ljmp
frstor
add
add
iret
insl
sub
mov
pop
loop
mov
push
jbe
or
pop
mov
leave
push
or
add
fiaddl
inc
rorb
mov
andb
fidivrs
and
xor
pop
test
sub
sbb
mov
mov
mov
cld
cmpsb
cmpsl
jg
mov
nop
push
out
pop
mov
sub
lds
std
dec
outsl
jb
sub
insb
test
inc
iret
push
inc
jmp
rolb
movsl
mov
dec
imul
xchg
cld
stc
mov
xor
dec
int
cmc
mov
push
and
int
cwtl
mov
fimuls
adc
shrb
mov
cmc
in
cli
xchg
xorl
and
and
cmp
fdivrl
push
mov
mov
and
movsb
popf
jnp
push
inc
dec
mov
lods
ret
in
xchg
cmpsb
xorb
aaa
sbb
outsb
mov
jbe,pt
xchg
add
cli
jns
dec
and
loope
mov
ss
or
outsl
outsb
mov
adc
or
xor
sar
popa
loope
push
dec
int3
loopne
push
mov
sub
nop
in
imul
add
mov
inc
adc
mov
cltd
inc
cmc
pop
push
lods
call
or
inc
cmp
cmp
mov
mov
jle
inc
andb
mov
push
xor
dec
mov
mov
jge
sub
push
sub
aaa
js
outsl
lret
out
jmp
or
jmp
movsl
clc
xchg
loope
xlat
push
sahf
and
popa
cmp
pcmpeqd
add
cmp
push
lea
fistpll
xor
mov
outsl
mov
dec
jmp
data16
data16
and
mov
mov
or
popa
dec
iret
adc
adc
push
mov
inc
fsubr
adc
lahf
aad
lds
aam
pop
inc
sbb
cmp
fdiv
jns
cmp
mov
jp
int
xor
les
je
lret
pop
push
stos
pop
inc
inc
xor
lods
iret
in
mov
pop
cli
mov
std
sub
adc
xchg
iret
mov
ljmp
addr16
fwait
int
sbb
mov
jge
inc
sub
mov
testb
add
jne
or
daa
scas
push
pop
imul
hlt
addr16
addr16
or
mov
repz
jnp
ficomps
aam
mov
aam
fmul
mov
mov
mov
pop
sbbl
call
outsl
test
jbe
clc
inc
push
push
shll
fcmovne
std
mov
jecxz
xor
in
rcrl
jp
in
mov
mov
leave
push
mov
sub
ja
xchg
mov
dec
sti
jae
fcompl
pusha
mov
or
mov
xor
or
neg
in
lret
stos
js
icebp
insl
cmp
cmp
test
fistpl
mov
xchg
inc
fstpl
iret
push
inc
rclb
adc
out
adc
cmp
in
jno
add
aas
shlb
repz
dec
pop
popf
jbe
lock
push
xchg
insb
and
stos
cwtl
cmp
push
movsl
aaa
icebp
mov
and
pop
shl
add
std
nop
loopne
loop
jmp
mov
lods
mov
js
mov
jg
neg
outsl
adc
jnp
add
fldl
push
push
btc
cmpsb
clc
pop
or
lcallw
and
rolb
sahf
repz
cs
fsubrp
cmpsl
cld
add
fwait
mov
adc
es
rcr
push
pop
xchg
pop
mov
mulb
stos
push
mov
cwtl
pop
test
imul
push
dec
ret
in
xchg
movsl
cld
das
jo
sbbb
push
mov
dec
xchg
sbb
stos
sar
dec
xlat
jecxz
cli
xchg
inc
std
ds
jp
mov
sub
push
mov
lods
jb
and
inc
stc
inc
push
mov
add
js
mov
mov
iret
mov
pop
mov
add
jle
testb
dec
mov
stos
mov
jmp
mov
adc
repz
lret
and
mov
cmc
insb
arpl
shl
call
mov
fisubrl
das
shl
xorl
popa
mov
cmpsl
push
jmp
xchg
sub
cmpl
je
testl
out
aas
mov
cld
push
dec
push
pop
mov
add
sbb
jne
sub
add
jne
sub
xor
out
jge
jo
cs
jno
inc
call
pushf
repnz
das
daa
sbb
mov
push
cwtl
stos
stos
mov
pusha
xor
or
push
jle
and
sub
sbbl
push
jmp
stos
ror
fsin
dec
fsubp
and
or
lods
inc
push
xchg
pop
sub
sub
es
in
fistps
adc
rcl
adc
xor
repnz
and
push
fiaddl
xchg
mov
inc
mov
out
aad
cmpb
xor
mov
jno
sub
push
and
pop
push
xor
add
pop
jae
xor
xchg
std
ds
iret
pop
iret
aas
imul
lret
dec
inc
js
xor
ret
dec
ret
mov
jge
dec
dec
and
cmp
cmpsb
jecxz
or
xchg
inc
mov
mov
into
push
lcall
cmp
jecxz
lock
xor
mov
leave
pop
divb
push
and
into
push
shrl
push
push
xchg
das
cmp
pop
push
inc
cld
scas
xchg
mov
add
clc
cmc
aas
ljmp
push
mov
ja
test
jns
and
lock
std
je
pop
and
jp
stos
mov
xor
les
xor
dec
int3
dec
repnz
or
orl
mov
dec
test
adc
testb
cmp
mull
sub
cmp
imul
pop
sbb
orb
bnd
iret
inc
mov
xchg
or
mov
fistpll
mov
jno
push
xchg
xchg
js
jno
insl
adc
in
ret
pop
ja
fs
andnps
daa
ss
repnz
in
shl
and
sbb
mov
jnp
les
inc
dec
cmp
pusha
sbb
pop
push
xor
test
xchg
nop
loopne
jo
out
sti
gs
push
jne
pop
stos
add
xlat
fcomip
jnp
int3
add
fidivrs
push
dec
pop
jae
add
dec
ss
push
jae
inc
test
push
int3
sbb
ror
xor
cmp
lods
and
add
clc
popa
fcomps
dec
mov
jne
loopne
das
sub
dec
imul
add
pop
aaa
mov
add
xchg
out
cmp
ss
mov
fdiv
orb
cmp
lds
lds
lret
nop
daa
stc
icebp
lods
pop
test
xchg
cmp
lock
adcl
adc
js
jb
jmp
cmp
dec
or
in
mov
data16
stc
mov
lock
push
pop
sub
push
test
inc
mov
mov
inc
mov
dec
xsha256
cmp
hlt
jge
mov
ds
cltd
mov
push
inc
mov
test
jg
dec
sbb
in
add
jecxz
cmp
and
fcmovbe
fcoms
sub
push
and
nop
popa
pop
je
push
xchg
je
jo
aam
and
sbb
outsl
je
mov
imul
sub
mov
xlat
ja
out
lods
loope
test
cwtl
hlt
or
or
sahf
mov
lods
xor
nop
sbb
mov
sub
xchg
cmp
rolb
mov
jp
cmc
clc
fnstenv
scas
mov
mov
mov
sbb
mov
push
xchg
mov
sbb
push
jp
popa
inc
outsl
movsb
add
cs
shrb
xchg
push
inc
out
into
mov
insl
or
pop
push
jmp
sub
outsb
scas
or
fmull
sub
mov
in
cmp
movsb
inc
icebp
mov
adc
arpl
icebp
cmp
cmpsb
addb
sti
inc
hlt
push
in
cmp
call
sub
in
lahf
cld
pop
dec
sub
aaa
lods
inc
jp
aas
sub
scas
out
or
into
cmpsb
dec
adc
loope
jecxz
es
cmp
dec
xchg
test
pop
jo
out
addr16
insl
jmp
subl
pop
dec
cwtl
int3
shrb
or
cmp
xchg
add
sub
jb
mov
mov
into
inc
cmp
xor
and
xlat
sbb
fnsave
clc
jge
or
das
sub
inc
mov
inc
jno
pop
inc
dec
cmp
fnstenv
fs
scas
pop
aaa
adc
jl
sbb
push
push
add
pop
scas
out
nop
imul
icebp
mov
daa
mov
push
cmp
push
or
xor
push
or
dec
iret
xchg
rep
mov
push
sbb
aam
fdivrs
push
outsb
js
aaa
sbb
or
jae
lahf
out
jl
xor
cmp
xor
xor
mov
add
dec
mov
mov
cltd
bound
push
push
sub
mov
lds
or
ljmp
into
cmp
lahf
push
hlt
push
gs
sub
xchg
sub
outsl
fldl
pop
jno
mov
stos
push
push
xchg
dec
or
cmpl
loopne
fucomi
lock
mov
lret
jae
js
mov
inc
adc
test
jle
adc
inc
and
pop
subb
mov
nop
push
push
mov
jno
andb
push
xchg
xchg
arpl
xchg
mov
test
lods
or
add
aad
js
imul
fidivs
mov
mov
popf
out
jae
jp
mov
jle
sbb
sbbl
nop
jo
xchg
jle
in
sub
or
std
push
test
push
shl
xor
icebp
fimuls
outsb
lahf
rorl
and
push
mov
adc
push
mov
xor
loopne
lret
jns
xorb
jnp
jl
add
mov
aaa
or
xor
je
orb
stc
imul
dec
outsb
adc
inc
nop
outsl
out
loope
xor
push
pop
jp
fcoms
popf
mov
jecxz
cmp
scas
into
lret
and
nop
dec
sbb
pop
pop
jae
fs
lods
je
cli
in
or
daa
cmp
xor
arpl
icebp
insb
sub
and
call
dec
xchg
aaa
stos
arpl
movsb
negb
pusha
and
adc
adc
scas
test
in
inc
mov
or
pop
add
adc
mov
xor
js
scas
mov
lock
inc
sbb
add
inc
or
mov
jg
inc
sbb
jecxz
es
rorb
mov
xor
pop
push
pop
sub
and
mov
insl
sbb
xor
fsubrl
pop
cmp
lock
int3
iret
xlat
push
push
mov
adc
mov
or
cld
pop
mov
call
stos
mov
jne
add
xchg
mov
ja
mov
dec
mov
jecxz
inc
xchg
adc
xor
jnp
jbe
xor
xchg
adc
xor
jno
sub
cmc
ds
sub
cmpsb
adc
jbe
mov
adc
mov
repz
jg
ds
cmp
cltd
sbb
pop
mov
push
adc
mov
push
int
add
daa
adc
adc
repz
jne
ja
fisubrl
in
aaa
in
mov
repnz
push
test
lcall
std
into
pop
jl
push
or
pop
sbb
cltd
out
or
mov
loop
push
jb,pt
or
mov
arpl
nop
fldenv
and
push
mov
shlb
pop
or
inc
inc
xchg
sbb
jmp
sub
mov
xchg
jo
test
pop
loop
cmc
stc
cmp
iret
orl
cwtl
mov
or
gs
pop
cmpsl
mov
inc
pushf
nop
packssdw
mov
pop
imul
xchg
cli
sbb
dec
rcrl
mov
dec
dec
das
xor
push
aad
sub
adc
jmp
std
bound
sub
test
fucom
jo
test
inc
lcall
pop
lahf
or
push
fs
arpl
xchg
imul
decb
fnstenv
fnsave
mov
rolb
pop
inc
jne
xor
arpl
jmp
cmp
jns
movsl
movsl
dec
imul
push
cmp
fsubs
dec
fmuls
outsb
xor
sub
inc
lods
xchg
and
adc
adc
ljmp
xchg
jl
leave
das
inc
mulb
jo
aad
rolb
sbb
sub
rcrb
shrl
jl
add
ja
daa
fildl
mov
aad
ficompl
mov
fsubr
imul
lods
gs
sbb
fwait
rcll
add
xchg
outsb
lock
and
xor
out
movsb
push
nop
sbb
dec
imul
fs
sub
cmp
imulb
jns
inc
movq
and
imul
inc
dec
mov
rorl
roll
mov
repz
ljmp
push
stos
push
xor
cwtl
popf
out
in
dec
and
adc
cmp
mov
mov
nop
adc
outsl
push
addr16
adc
push
hlt
jb
pop
shlb
push
add
dec
cmp
test
out
sub
les
orl
dec
aas
andb
inc
loopne
mov
out
ds
dec
ja
repnz
push
mov
nop
add
dec
and
mov
mov
sub
jb
cmp
mov
xchg
stc
dec
xchg
jle
adc
xchg
movsb
pop
fisubl
bound
add
mov
push
jle
es
sbb
in
cmp
mov
xchg
pop
test
cmp
adc
mov
jb
adc
int
into
out
sti
loopne
adc
jae
xchg
adcb
sbb
jb
ret
pushf
push
sti
cmpsb
cltd
das
push
dec
sub
mov
insb
fbld
mov
pop
mov
stos
add
jne
out
out
out
data16
lret
mov
sbb
xor
cmp
cmpl
pop
test
es
nop
scas
mov
addr16
orl
fst
mov
dec
fbstp
cmp
fld
xor
aam
mov
call
and
sbb
push
xchg
sahf
sti
je
sahf
jne
imul
stos
mov
fstcw
push
mov
inc
pop
dec
pop
mov
out
shl
mov
enter
sbb
ljmp
sbb
mov
das
pop
sbb
mov
push
ret
iret
outsl
fcoml
test
mov
and
sub
push
mov
movb
push
mov
les
adc
jmp
aam
addr16
sbb
lcall
stos
jecxz
push
adc
adc
xorb
cmp
sarl
sbb
push
out
icebp
jl
mov
mov
sbb
inc
xchg
imul
xchg
sahf
mov
jo
out
lea
mov
mov
lahf
cmp
sahf
ret
cmp
mov
mov
mov
fdivrl
lret
mov
int
aam
lahf
xchg
mov
ret
ss
push
mov
cmp
cltd
inc
mov
jmp
push
jg
rol
mov
jo
daa
orl
stos
sahf
mov
loopne
xor
or
jl
add
and
mov
imul
mov
push
cmp
out
test
inc
out
push
dec
mov
testb
jae
rolb
test
dec
icebp
sub
pushw
push
add
sbb
pop
stos
mov
stos
cld
imul
rcrb
push
mov
es
sub
dec
adc
fcoms
dec
and
insl
add
repz
xor
out
add
test
mov
push
jb
add
sub
sub
jecxz
icebp
jecxz
xor
ss
std
in
cmp
mov
nop
xlat
pop
fnstcw
mov
sarb
sub
test
fiadds
mov
adc
sub
fcomp
add
fcompl
sti
cmpb
dec
cmpl
xor
xchg
lock
pop
loop
xor
ss
fldt
mov
inc
test
push
jmp
gs
adc
inc
xchg
push
rcll
iret
add
imul
lds
pop
clc
fdivrl
fwait
in
sbb
mov
xor
ret
push
adc
mov
rcl
lahf
out
out
jo
aad
pop
rcl
into
mov
shlb
lret
fidivl
xor
icebp
imul
sti
cmp
xlat
xor
sub
imul
pop
ja
ret
ss
sbb
mov
add
int3
mov
cli
decb
xchg
sub
pop
pushf
into
adc
pop
out
vunpcklps
push
dec
push
out
jg
lret
out
push
jae
mov
stos
fs
inc
mov
add
adc
xchg
js
mov
cltd
add
cld
inc
mov
cmc
lock
in
fistl
into
push
jmp
subb
lds
leave
cs
sub
outsl
std
mov
and
xorl
hlt
adc
or
inc
mov
pop
pop
add
repz
cmp
lock
pop
loopne
push
iret
test
xor
xchg
sub
out
dec
adc
pushfw
clc
jbe,pn
xchg
lahf
cmpsb
mulb
jnp
rorl
xchg
xorl
jmp
jle
or
jg
add
jns
imul
in
sti
dec
jmp
cmp
les
mov
and
xchg
xor
leave
mov
mov
mov
aad
shll
hlt
pop
mov
sub
mov
popa
sub
xor
push
mov
mov
cmpsb
cld
sbb
subl
pop
dec
jne
gs
iret
add
inc
nop
out
popa
repnz
icebp
stc
jge
mov
dec
xor
sbb
jg
cmpsl
or
cmc
xchg
inc
scas
out
ret
shl
jl
add
clc
aad
cld
add
adc
cmp
imul
pop
stos
lods
sti
mov
ds
shlb
sbb
jne
into
daa
int
push
pop
cmp
cwtl
jp
or
sbb
xchg
and
mov
xchg
aam
testl
dec
jmp
push
xor
daa
fstpl
xchg
loopne
inc
pop
sysret
fs
test
jge
test
scas
aad
outsl
mov
and
mov
cmp
sbb
or
mov
push
mov
mov
inc
in
aad
sub
jb
repnz
mov
and
cmp
inc
into
adc
je
ror
mov
inc
mov
xor
hlt
jnp
in
shlb
jge
pop
add
test
cs
rcr
out
cli
leave
ljmp
cmpsb
cld
fistl
sbbb
sub
cmp
cmpsb
jae
stc
sbb
mov
in
shlb
or
sbb
dec
add
nop
movsl
adc
sub
pop
and
push
add
mov
ljmp
scas
stc
stos
ljmp
cmc
jecxz
pop
jb
es
lods
xchg
mov
pop
mov
test
flds
add
sbb
adc
cli
cmpsb
pop
mov
imul
jnp
insl
xchg
cwtl
les
pop
xchg
mov
xor
movsb
adc
popa
mov
scas
mov
dec
or
inc
ds
pop
sub
inc
sbb
repz
xor
daa
xchg
nop
mov
or
aas
xor
inc
out
fs
cs
outsb
pop
lds
dec
arpl
into
nop
shl
lahf
sub
daa
sub
daa
mov
push
popa
jecxz
call
and
mov
out
enter
jp
mov
stc
xor
jp
outsb
fsubrl
dec
dec
inc
insl
lock
ljmp
aas
movsb
std
movsb
stos
repz
dec
out
sub
add
aas
rep
xchg
xchg
std
sbb
inc
lcall
gs
mov
fistpll
push
int
and
xchg
jo
insl
add
lret
push
jno
sbb
xchg
js
fwait
mov
cli
in
fdivrl
inc
insl
in
cmc
out
jo
in
pop
addr16
add
xlat
jge
insb
jns
or
ret
push
add
imul
call
inc
dec
jne
add
clc
cli
lds
xorl
lods
xor
ret
jecxz
in
mov
push
or
pushf
gs
cmpsb
jge
mov
daa
mov
pop
sub
ret
sbb
daa
jbe
ss
lcall
inc
add
push
aaa
movsb
mov
xchg
test
adc
push
dec
imul
inc
jmp
shll
lret
push
mov
dec
inc
addb
mov
pop
daa
xchg
adc
and
bound
cwtl
cmc
lods
mov
mov
iret
outsb
xor
push
pop
nop
out
xor
sahf
sar
fstpl
xlat
out
cld
pop
lcall
xchg
aad
mov
adc
jecxz
inc
jbe
mov
jae
jl
dec
imul
fs
mov
mov
push
ljmp
test
aad
cmp
je
mov
dec
aaa
rcr
sbb
xchg
imul
jne
daa
sahf
pop
push
mov
stc
jecxz
not
inc
inc
scas
mov
add
pop
ja
mov
aam
mov
push
sub
dec
pop
xchg
divl
push
je
test
movsb
sahf
fldl
std
sub
sbb
push
mov
pslld
lcall
add
lock
jae
inc
out
fbstp
arpl
xor
fld
jo
lock
ja
repnz
dec
dec
lock
stos
dec
int3
lds
jno
int
fsubl
std
cmp
aas
jmp
fs
lahf
xchg
mov
push
loop
mov
rclb
xor
xlat
xor
icebp
xchg
lods
cmp
pop
mov
dec
jl
aas
das
js
or
iret
sbb
leave
sub
out
dec
sbb
pop
into
fisubl
lds
sbb
addr16
adc
aaa
lcall
iret
jns
pop
adc
adc
sub
fs
in
and
sub
jmp
sahf
mov
jnp
dec
mov
int
sub
outsb
push
clc
dec
dec
leave
pop
stos
rcll
pop
xchg
add
jae
adc
push
popf
int3
jmp
pop
rolb
dec
mov
sub
or
enter
mov
rcl
std
push
xchg
inc
mov
inc
pop
cs
es
aam
sarl
push
int3
orb
imul
roll
ds
push
adc
test
movsl
popl
jns
sahf
outsl
xor
orl
lea
sub
mov
jae
fsubl
rcrb
cmp
sbb
ret
jb
gs
adc
fdivrl
je
inc
sub
gs
pop
push
cmp
or
mov
ljmp
cmp
addl
cli
orl
pop
sbb
shrl
adc
lahf
dec
aad
jne
ret
lods
insl
add
xchg
rclb
or
call
pop
sbb
fwait
add
test
stc
xchg
rcl
fstps
mov
cwtl
je
out
jle
repz
jecxz
sbb
lahf
outsb
popf
out
push
jno
stos
push
push
cmc
xor
mov
xorb
je
add
mov
mov
not
pop
rcr
push
mov
and
add
sub
push
mov
inc
sbb
clc
int
imul
pcmpeqb
imul
cli
adc
ja
inc
mov
mov
adc
movsl
sbb
stc
adc
mov
ljmp
add
lret
or
mov
jmp
mov
mov
loopne
pop
in
sub
inc
movsl
fistps
lret
or
xor
jg
sub
mov
addr16
scas
std
roll
rcrl
out
sbb
add
fwait
jo
mov
add
mov
sarb
inc
push
pmaddwd
vmovntdq
loop
adc
and
out
and
dec
pop
shlb
mov
mov
and
push
or
mov
or
jo
dec
div
xchg
sbb
bound
dec
sub
and
mov
jecxz
lods
testl
loop
sbb
jecxz
inc
xor
loopne
out
push
out
pop
loopne
dec
cmpsl
cmpsl
inc
scas
insb
jl
mov
lcall
fs
bound
cmp
stos
and
lahf
repz
sub
enter
insb
aaa
xchg
inc
test
jle
dec
clc
sbb
dec
add
push
test
mov
sarl
fsub
xchg
or
adc
out
sub
mov
cmpsl
cli
mov
mov
lret
xor
and
aas
add
mov
inc
in
rorl
in
mov
test
mov
arpl
push
cli
mov
jbe
enter
pop
push
stos
adc
pop
pop
pop
sub
or
ja
call
xchg
int3
dec
std
add
jo
movsb
roll
inc
mov
call
mov
dec
andl
movsl
fisttpll
jecxz
lret
imul
cwtl
push
or
shl
repz
aad
imul
out
pop
lods
pop
loop
cld
jne
inc
or
imul
movsl
mov
ja
sbb
push
sbb
aam
loop
rcr
pop
lret
xor
cli
and
cmp
cld
sub
arpl
xchg
or
sbb
adc
pop
movsb
inc
xor
mov
fwait
insl
shrl
nop
fldl2e
mov
mov
fmull
adc
xchg
xor
add
add
es
lahf
sbb
adc
sti
cs
popa
movsb
push
and
add
mov
inc
dec
outsb
mov
imul
pop
gs
inc
push
dec
js
inc
dec
outsb
test
xor
jno
lahf
and
add
shl
outsb
out
lods
sbb
aas
mov
jge
inc
sahf
push
jb
jae
ficomps
out
push
push
mov
nop
insl
inc
jae
loope
add
sbb
stos
fisubl
pop
cld
xor
sbb
jnp
or
testl
pop
leave
int
sarb
enter
sub
popf
out
xchg
clc
in
in
mov
xchg
mov
push
xor
cli
insl
mov
xchg
adc
adc
rep
sbb
push
nop
adc
out
mov
testb
add
out
jp
or
out
shlb
daa
mov
sti
or
adc
lret
adcb
or
cli
push
call
out
jle
inc
and
std
xchg
shll
xchg
xchg
xor
aam
aad
xchg
adc
leave
es
das
xchg
mov
addr16
fldpi
jge
test
cwtl
ret
lea
pushf
pop
jecxz
ja
dec
xor
jb
cwtl
leave
aad
shll
js
mov
push
cmpsb
aad
leave
sbb
pop
popf
lds
pop
pop
pop
inc
push
fisttps
inc
dec
jmp
gs
mov
mov
out
mov
pop
adcb
hlt
pop
adc
xchg
add
dec
jbe
adc
pop
cwtl
orb
pusha
in
iret
iret
and
lods
fsubrl
xchg
push
js
cmp
or
outsb
mov
dec
jae
fsubrl
ss
sub
aaa
aam
mov
push
sahf
cmp
sbb
cmpl
cwtl
out
sub
stos
lods
movsl
pop
jnp
dec
mov
cld
push
mov
mul
inc
mov
mov
adc
in
movsb
xlat
daa
mov
cli
fwait
dec
push
xchg
sahf
jmp
inc
test
daa
push
les
mov
imul
scas
push
mov
pop
test
in
jmp
or
inc
outsl
std
pop
mov
inc
or
aam
xchg
add
cli
mov
dec
jne
sarl
ret
mov
popf
orl
addr16
scas
pop
js
adc
lea
pop
rcrl
sub
sub
rorl
repnz
lahf
cld
dec
jbe
xchg
add
fwait
test
in
lret
repnz
add
add
mov
mov
or
movsb
jge
cmpsb
ja
push
daa
cwtl
adc
in
sub
data16
popf
int3
xor
je
mov
fcom
les
mov
xor
or
cmp
aam
add
push
jnp
mov
outsl
cbtw
pop
xchg
xchg
stos
and
jecxz
aaa
jmp
add
mov
mov
inc
loope
pop
push
dec
flds
xchg
xchg
mov
cmp
icebp
mov
int3
mov
add
fsubrs
clc
aaa
xchg
mov
frstpm(287
mov
sbb
clc
mov
xchg
add
inc
sbb
leave
lcall
inc
neg
and
add
add
or
sbb
sti
mov
int3
aaa
and
pop
cmp
sbb
adc
pop
push
subl
js
adc
lahf
repz
aaa
mov
mov
gs
mov
out
jmp
mov
icebp
gs
cmpsl
imul
pop
or
popf
test
mov
inc
mov
add
or
loop
neg
xacquire
adc
stos
sarl
add
xor
xchg
jb
inc
leave
jg
push
vorps
pop
push
enter
cmp
js
mov
cmp
popf
test
cs
int3
jp
push
and
mov
jecxz
or
push
int3
in
cmpsl
stos
popf
pop
sbb
in
and
cmp
mov
mov
push
add
mov
xor
std
rorl
mov
out
xchg
xlat
xchg
xchg
cld
int
cmp
adc
xorb
jae
sub
sbb
divb
mov
mov
fldenv
call
mov
xchg
popf
int
inc
dec
dec
movsb
js
sbb
cld
mov
test
int
cltd
pop
les
inc
pop
pop
sub
inc
ljmp
and
mov
xchg
push
and
cmp
out
add
xlat
cmpsl
xchg
inc
test
mov
sbb
dec
adc
out
xchg
mov
or
outsb
push
xor
mov
pushf
mov
test
xor
inc
pop
jl
dec
les
jle
and
and
xchg
cmp
dec
movsl
push
pop
imul
pop
jmp
jne
add
ds
sub
or
inc
fstl
add
add
lret
inc
cmpsb
and
pop
and
loope
scas
scas
add
fcoml
xor
xor
movsl
stos
sbb
sub
push
adc
in
cli
in
cmc
jp
jbe
divl
mov
sub
sbb
sub
dec
pushf
push
ret
ja
jb
bound
pop
mov
and
xor
ret
add
les
and
jnp
daa
notl
repnz
mov
jmp
mov
cmc
mov
lea
les
mov
inc
adc
xchg
mov
cmp
popl
xchg
push
jo
xor
leave
inc
sbb
movsb
dec
outsl
sub
inc
daa
fcomps
inc
mov
cmpsb
inc
lret
test
in
gs
das
and
js
dec
sbb
lcall
xchg
xchg
push
inc
jmp
cmc
mov
fistpl
inc
push
add
mov
pushf
pop
adc
jo
out
jle
int
mov
mov
and
dec
add
bound
cmc
ds
dec
xchg
aas
fstl
andl
push
xlat
xchg
pop
call
gs
push
inc
adc
lock
sti
into
jns
cmp
add
fmuls
push
rcrb
mov
shrb
xchg
inc
andl
mov
xchg
enter
pushf
pop
out
pop
fbld
inc
mov
add
push
jg
cmp
imul
test
divb
je
push
repz
jle
in
sub
sbb
sub
loop
outsl
dec
xor
cmpb
sub
or
or
sbbl
in
cltd
xorl
out
and
popl
and
ffree
add
adc
fisttpl
jle
ds
or
dec
cmp
iret
sub
cmp
and
outsb
ret
pushf
outsl
fistpll
jg
fstpt
pop
xchg
test
sub
dec
out
mov
rcll
or
ret
aaa
into
movsb
aas
adc
mul
loop
dec
stos
push
gs
jae
xchg
push
leave
xor
adc
mov
pop
cmp
jno
mov
jg
pushf
les
adc
pop
icebp
or
xor
repnz
xor
pop
cmp
push
adc
push
dec
lods
in
cltd
mov
dec
dec
rorb
cmc
mov
jb
cs
cld
jb
out
xor
jge
jnp
mov
fcmovnu
jp
xchg
insb
sbb
or
xchg
ret
shl
xchg
pushf
fcoms
jle
mov
adc
fistpll
sub
into
cmp
pusha
aaa
jns
and
insb
jecxz
rcrl
cmpsb
in
or
adc
faddl
lahf
cwtl
out
xchg
xchg
push
cld
inc
fadds
mov
test
cmpl
cli
push
mov
mov
and
pop
jbe
fiadds
xlat
and
and
imull
and
clc
cmp
xor
negb
and
negb
in
mov
add
sbb
pushf
xchg
jmp
fisttpl
lods
data16
in
gs
imul
scas
xchg
popa
dec
cmp
lcall
cmp
das
mov
push
add
adc
test
lret
inc
sti
or
fs
fisubrl
movsb
pop
push
int3
mov
xor
pop
sub
pop
rcrb
pusha
cwtl
mov
mov
xor
sbb
xchg
add
and
in
notb
repz
add
das
loope
sbb
xor
out
add
insb
fiaddl
add
or
out
mov
shll
xchg
bound
pop
iret
jl
mov
pop
repz
mov
call
jge
dec
pop
loope
push
cmp
lods
dec
aas
pop
pop
pop
hlt
inc
scas
jbe
push
lods
aaa
push
movsb
rcrl
fs
mov
mov
xchg
leave
mov
mov
ret
aam
mov
bound
adc
pushf
popf
jecxz
out
call
jg
std
cmpsl
repnz
xchg
pushf
jl
mov
inc
inc
sub
or
dec
cmp
mov
add
xor
ret
hlt
cmp
sarb
pop
dec
btr
dec
fimull
arpl
push
xchg
sub
addr16
xchg
sbb
lahf
push
in
xor
cli
dec
popf
cmp
lahf
push
jb
jl
pop
enter
aad
hlt
fs
lahf
test
mov
xchg
add
iret
imul
dec
cmp
push
loope
sub
sar
std
out
andl
xor
test
stc
cmp
mov
mov
jp
inc
pop
jo
pop
xor
jge
ds
inc
into
in
pop
pop
and
push
push
lahf
jae
cmp
jmp
push
jnp
push
cmp
mov
psubusw
ficompl
shrl
lret
mov
out
lahf
or
loopne
jmp
pop
dec
repz
mov
ja
and
inc
loope
add
shlb
fdivr
xor
into
push
shrb
sti
jp
js
ss
dec
or
in
inc
push
dec
sub
sbb
pop
ret
out
gs
push
out
addr16
jge
int
cmpsl
add
nopl
shrb
and
mov
or
fdivl
adc
int
cmp
je
xor
aad
lcall
add
inc
stc
test
out
jns
cmp
ds
cmp
mov
js
mov
dec
sub
sbb
push
xor
sbb
pop
and
je
dec
jecxz
cmc
stc
adc
jbe
pop
or
push
outsb
fists
pop
test
mov
arpl
mov
leave
stc
and
je
xchg
mov
mov
pop
jnp
jno
js
mov
mov
test
push
adc
fiadds
or
pusha
adc
lret
push
ljmp
or
adc
lods
aas
adc
mov
orb
dec
fildll
cmp
insb
xor
into
pop
repnz
mov
inc
lret
mov
or
push
cmpb
lods
lock
jmp
mov
add
data16
mov
mov
into
aam
leave
push
fidivs
xor
cmc
sub
out
or
arpl
cmp
mov
jp
sub
xor
mov
fldenv
xor
mov
jae
in
lahf
push
lret
cmovbe
pop
ja
and
cmc
push
gs
shlb
test
into
push
dec
push
fstpl
mov
add
mov
fs
mull
hlt
jle
stos
in
sub
mov
jp
fsub
add
dec
push
sbb
sub
data16
or
repnz
mov
fiadds
or
aam
dec
cmpsl
stc
mov
push
add
mov
push
xchg
ffreep
sysret
mov
inc
shrl
ss
add
fwait
or
daa
mov
pop
repnz
imul
pop
dec
cmpsl
mov
sbb
cmp
xchg
pop
sub
cmc
ljmp
loop
dec
stos
bound
mov
xchg
lcall
xchg
in
push
add
adc
sti
cmpsb
push
lea
sbb
mov
add
adc
out
jns
inc
nop
xchg
lret
lods
adc
mov
stc
and
cmp
icebp
sub
bound
mov
stc
push
bnd
jmp
fs
out
clc
nop
push
loop
fidivrs
mov
dec
mov
and
jno
pusha
hlt
sub
dec
inc
adc
aaa
pop
dec
or
dec
enter
icebp
dec
jo
jle
cmc
or
cs
fnsave
push
cmp
inc
xchg
or
xlat
pop
jns
cmc
adc
add
adc
js
leave
orb
xchg
sarl
and
enter
pop
sub
cld
sub
aad
insb
xorb
es
xchg
clc
add
lret
cmp
into
sub
mov
xor
xchg
adc
mov
cld
xchg
das
jl
sbb
shlb
mov
sbb
lret
enter
in
push
out
mov
pushf
add
dec
inc
pop
outsl
ljmp
jge
push
gs
push
pop
scas
out
xlat
scas
mov
pop
lret
aam
pop
sub
dec
iret
rorl
fmuls
xchg
scas
outsl
cmp
aaa
outsl
leave
stos
pop
xchg
jo
hlt
dec
lods
add
cmp
inc
adc
lcall
sub
orl
fistl
push
call
es
adc
insl
sahf
fucom
jb
stos
cltd
pop
mov
movsb
mov
and
dec
push
lret
mov
xor
add
jbe
mov
or
push
testl
int
xchg
ja
push
inc
sub
rcl
adc
sub
lods
std
and
pusha
lods
xchg
jmp
clc
cmc
mov
jle
xchg
dec
pushf
xor
and
mov
push
sbb
inc
push
inc
lret
push
cwtl
or
sub
push
sub
repnz
push
push
mov
repnz
push
inc
dec
push
sti
mov
or
cmp
aam
adc
and
push
popf
sub
popf
and
mov
mov
cmp
pusha
jo
cmp
cltd
mov
ljmp
pop
adc
test
scas
fwait
add
lret
cmp
out
pushf
xchg
mov
dec
cmp
cli
sub
push
cmp
pop
out
jae
sbb
pop
xor
lea
lret
xlat
out
sub
push
mov
xchg
and
out
ljmp
test
cmc
lahf
pop
out
and
addb
dec
hlt
cli
push
add
loope
adc
xchg
bound
xor
inc
mov
dec
dec
xor
xchg
mov
out
jmp
ror
gs
pop
xchg
sbb
test
cmp
call
mov
out
and
mov
push
insb
lock
mov
out
xchg
mov
cmp
inc
jne
jg
pop
or
mov
cltd
push
inc
adc
lea
inc
outsl
shlb
sarb
fs
iret
dec
data16
loop
ret
add
sbb
sahf
cmp
mov
cmp
mov
jle
push
mov
push
xchg
pop
mov
pop
xchg
xlat
adc
loopne
jnp
cmc
mov
out
jp
pop
lods
fisttps
add
add
fimuls
add
xchg
dec
cmp
out
cmp
push
mov
scas
pop
ret
cmpsb
add
in
adc
stos
sub
mov
mov
sub
notl
lods
cld
insb
fwait
xchg
inc
out
popa
push
add
jge
mov
dec
inc
neg
clc
mov
fnstenv
inc
inc
push
sbb
sbb
sarb
push
repnz
icebp
lcall
push
negb
add
je
sub
in
xchg
or
enter
dec
lods
sbb
cld
test
sub
insb
loop
adc
call
fstp
popa
dec
cmpsb
pop
xchg
ja
xchg
sbb
mov
insb
sub
fstpl
je
jmp
xchg
iret
insb
sbb
aas
aam
add
mov
mov
pop
lcall
and
and
ss
icebp
pop
icebp
xchg
bound
adc
mov
xorl
add
repnz
mov
in
and
ds
rclb
pushf
xchg
daa
daa
adc
pushf
jno
shrl
or
mov
je
sub
jl
rol
aad
push
cld
mov
jecxz
nop
sub
outsl
xchg
rcrl
xchg
in
mov
movl
aam
add
pop
and
adc
fsubs
add
fldenv
test
fisubrl
xchg
pop
push
xor
pop
cmp
aad
adc
pushf
push
inc
jmp
loopne
add
loope
cmp
lea
cwtl
stos
mov
cli
mov
cmp
movsl
in
gs
pop
enter
mov
notb
dec
adc
dec
enter
dec
ret
pop
pop
or
adc
xchg
push
stos
cmp
jnp
rcr
inc
pop
stos
aad
jle
dec
jge
cmp
call
dec
lds
mov
pop
or
fiaddl
fs
adc
out
or
mov
cmpsl
fs
lcall
sub
sub
fmul
sbb
out
mov
in
negb
xor
pop
jb
cltd
xor
mov
push
test
inc
add
sbb
fidivl
xchg
in
jb
lahf
pop
push
stc
arpl
addr16
mov
pop
inc
adc
mov
or
rorl
push
lods
lea
and
fadds
rorb
sbb
lods
stos
mov
xchg
out
aaa
sti
outsb
idiv
add
imulb
insl
push
push
cmpsb
lahf
xchg
aad
inc
addr16
leave
push
jecxz
ret
imul
mov
push
or
pop
adc
div
popa
dec
adc
loopne
sbb
rorl
movsb
iret
xchg
xchg
push
sub
lahf
mov
js
mov
jmp
lcall
hlt
mov
mov
xor
mov
adc
shll
stos
lea
cmpsl
filds
adc
lods
aas
jb
inc
sub
push
inc
sbb
inc
dec
fadds
aaa
push
daa
sbb
and
jle
mov
push
mov
xchg
mov
and
mov
mov
sahf
dec
loope
jecxz
aas
insl
sub
ror
icebp
js
xor
call
mov
cmp
cmp
rol
inc
and
adc
pop
shlb
or
scas
lret
fbld
addb
cmc
mov
mov
out
jmp
repnz
ret
dec
hlt
sub
rcr
je
cld
sub
inc
dec
in
notb
pop
push
icebp
xchg
pop
push
cmp
xchg
mov
xor
es
lods
es
push
inc
cmp
inc
xchg
aaa
lods
lods
sub
xchg
jae
sbb
int3
ret
mov
ljmp
xchg
stos
pop
cmp
or
aas
xlat
ret
dec
mov
data16
inc
add
mov
jecxz
jns
cmc
ds
aam
mov
lock
dec
dec
add
fdivrl
pusha
std
rorl
cmp
push
divl
fdivs
push
sbb
addr16
dec
mov
je
inc
sub
stos
mov
push
lahf
sarb
dec
dec
push
call
jns
fs
pop
shrb
lods
adc
sub
adc
and
pop
sarl
clc
sahf
jmp
mov
out
mov
sbb
popf
xorl
fwait
cmp
add
int
push
push
pop
lea
adc
push
jl
mov
fidivrl
push
movsl
add
nop
mov
or
pusha
xchg
or
xor
pop
loope
cpuid
cmpsl
add
jb
fstl
shll
sub
or
mov
jp
lods
icebp
out
mov
fiadds
cmp
incb
aad
dec
xchg
je
fsubrl
jo
or
lret
mov
insb
mov
pop
les
lret
push
outsb
aaa
dec
cmpsb
and
mov
jo
inc
in
imul
and
cmp
jl
xchg
repz
loopne
add
repz
xor
push
add
jns
mov
pop
sar
jb
cmp
pop
sbb
pop
mov
push
lds
mov
mov
jb
clc
sbb
aaa
mov
mov
push
es
push
and
xor
adc
call
fimuls
sahf
outsb
movsl
sbb
ljmp
int
push
cltd
mov
outsl
outsl
enter
fdivs
ds
jp
stos
sub
dec
push
xor
inc
pop
pusha
cmp
popf
or
repnz
cmp
les
cmp
push
jecxz
pusha
aad
inc
mov
xchg
sub
pop
orb
inc
xchg
loope
gs
pop
out
adc
enter
stos
mov
insb
es
mov
adc
cli
out
sti
fiaddl
push
test
and
sbb
sbb
int
xchg
out
xchg
xor
incl
pop
repnz
pop
mov
popa
sub
loope
cmp
bound
sahf
add
rolb
mov
test
sub
mov
call
notl
push
loope
movsb
out
cmp
ss
cld
dec
sub
jns
dec
mov
adc
fildll
xchg
imul
jl,pn
add
xchg
leave
lock
inc
out
mov
out
jbe
inc
and
pop
gs
mov
cmp
inc
dec
mov
xchg
push
inc
jb
lea
and
cmp
jmp
les
jae,pt
iret
add
pop
sbb
lahf
in
mov
out
nop
mov
and
clc
ja
xor
pop
call
mov
mov
sbb
cltd
enter
sbb
push
sbb
ficomps
xchg
xor
mov
mov
out
icebp
ds
xchg
lock
cmp
cmc
call
pop
jle
int
mov
iret
scas
mov
aas
cmc
jmp
dec
jns
lahf
nop
jns
repnz
aam
or
out
xor
jne
jmp
mov
inc
dec
xchg
add
lds
ss
or
add
adc
mov
mov
mov
dec
test
dec
xlat
or
push
add
into
or
hlt
dec
mov
add
and
and
mov
call
mov
sarl
mov
mov
jb
outsb
xchg
leave
add
outsb
push
xlat
xor
movb
cmc
out
push
int
push
popa
js
cmp
adc
xchg
ret
xchg
cwtl
pop
mov
lds
inc
shr
dec
arpl
xor
dec
sar
adc
push
js
addl
mul
xchg
ljmp
fildll
out
les
loope
sbbb
cltd
das
sub
xor
ss
jge
nop
int3
stc
adc
or
push
pusha
sbb
shr
cld
xchg
cmp
push
scas
outsb
cld
cmpl
mov
jle
popa
imulb
inc
out
data16
inc
iret
mov
inc
lock
fsubs
fsubr
cmp
ret
xchg
lcall
adc
pop
pop
and
in
mov
and
enter
in
lahf
add
pop
sbb
fistpll
jnp
jno
hlt
jecxz
dec
fwait
aad
sbb
xor
pop
mov
loopne
in
push
mov
aam
xchg
leave
sbb
ja
xchg
jl
xchg
inc
stos
pop
push
xor
mov
adc
addl
lret
sahf
test
mov
add
xlat
sub
or
mov
and
pop
or
dec
mov
pop
into
mov
add
sbb
icebp
pop
cwtl
pop
int
int
jecxz
add
push
pushf
jns
jo
fbstp
lods
inc
test
xchg
lahf
push
or
call
fstpt
inc
into
fucom
jne
in
les
sbb
mov
gs
xchg
xchg
outsl
rorl
sbb
loope
std
ss
cli
outsb
sbb
loop
pop
jae
lock
div
push
repz
cmp
cs
inc
int
aaa
mov
jnp
popf
ss
ja
cs
xchg
stc
or
repz
inc
insl
out
push
fadd
insb
outsb
leave
jle
sub
mov
cli
sbb
xchg
fbld
or
pop
mov
js
fcomip
mov
mov
clc
cmp
pop
fisubrl
xor
push
mov
or
ja
xchg
aad
aam
mov
inc
adc
in
or
mov
lcall
rolb
call
jge
mov
xor
jns
int
subl
push
sti
imul
add
aad
sbb
fsubrs
mov
dec
xchg
popa
sbb
sti
push
stos
jecxz
xchg
push
out
xchg
and
cmp
cld
lahf
jnp
lcall
sub
pushf
sub
mov
jl
or
jo
loope
cmpsl
inc
xor
xor
inc
clc
jno
popa
xchg
sub
lods
push
ja
inc
dec
jecxz
push
and
scas
cmpsl
xchg
clc
cmpsb
push
cld
adc
cmp
and
cwtl
enter
mov
out
mov
fcmovu
fidivrs
xchg
mov
mov
fs
and
and
int
pop
xlat
mov
cltd
mov
dec
jmp
sub
enter
aad
sub
movsl
lds
ret
mov
icebp
mov
sub
inc
test
push
dec
leave
les
dec
int
shll
xchg
jecxz
mov
jo
mov
movsb
or
imul
lahf
shrl
loope
or
pcmpgtd
stos
xchg
push
adc
or
adc
leave
in
arpl
inc
aad
mov
enter
push
push
mov
or
xor
mov
aas
mov
cmp
hlt
push
adc
cmpsl
sub
jno
and
adc
xlat
test
xor
mov
cmp
and
int
lcall
sbb
rcl
lods
or
mulb
mov
fists
adc
in
cmpsl
lods
daa
cmp
push
shll
aas
push
hlt
out
daa
inc
clc
cmp
xchg
xchg
iret
je
pop
xchg
sub
fsubrl
pop
or
pop
mov
sub
iret
xor
stos
outsl
jno
les
dec
and
bound
loop
sub
ficoms
xchg
scas
fnstsw
sub
mov
setge
in
pop
cmp
inc
add
icebp
xchg
push
cld
pop
pusha
and
xor
bound
mov
fst
loope
mov
dec
inc
xor
add
sub
sub
xor
orl
clc
out
fcomps
mov
push
and
pop
addr16
mov
jb
mov
jmp
cmpsb
sbb
repz
mov
xchg
xchg
inc
dec
outsl
jp
xor
test
jno,pt
mov
dec
push
sti
cmp
lds
out
mov
sbb
push
pushf
dec
mov
in
orl
cmc
lods
mov
in
and
xchg
xor
jnp
pushf
cwtl
xor
pushf
aam
add
lock
dec
call
fistpll
mov
pushf
inc
cs
push
mov
pop
inc
jno
outsb
cmp
in
pop
dec
sbb
cmovl
test
cmpb
push
sbb
inc
cwtl
negl
cmpsl
insl
cmpsb
or
or
rorb
xchg
testl
inc
inc
push
inc
lods
arpl
sbb
cli
pop
ret
cmpsl
xchg
xchg
xor
outsl
scas
add
xor
in
and
rcrb
pop
sti
outsb
cmc
pop
repnz
mov
aam
jecxz
mov
stos
dec
stc
jge
dec
test
push
jo
cmc
pop
icebp
jno
imul
out
aam
int3
xchg
and
mov
loopne
xor
pop
inc
lea
out
and
dec
andb
es
pop
aad
shrb
loopne
lcall
clc
sarl
mov
and
mov
push
dec
mov
jne
jbe
adc
push
or
jns
mov
jecxz
adc
pop
jae
dec
pop
movsb
adc
lahf
dec
jne
inc
jmp
rolb
mov
adc
cmp
shrb
adc
arpl
js
xchg
cltd
or
lret
faddl
xchg
push
push
into
cmp
popa
jo
dec
mov
add
repz
push
cmp
inc
das
cmp
fiaddl
enter
es
enter
fnstenv
fs
icebp
fdivrs
and
cmp
fldl
pusha
lcall
mov
popa
mov
xchg
mov
mov
pop
jno
sbb
cmpsl
adc
mov
xor
std
sub
and
insl
pop
scas
mov
insb
ss
cmc
push
mov
push
jl
leave
notl
sub
xlat
sub
loope
jae
xchg
cs
inc
popf
movsb
fcmovb
lock
jmp
jb
or
jae
iret
or
in
xchg
popl
jmp
pop
mov
push
mov
dec
sub
sbb
mov
dec
adc
repz
mov
push
loope
stos
and
xchg
xchg
mov
shl
mov
repnz
hlt
ret
mov
sub
dec
flds
xchg
or
pop
and
cmp
push
sub
xor
stos
inc
push
xor
jne
push
mov
adc
fidivrs
mov
out
add
repnz
ret
xor
push
daa
pop
mov
fldl
ficoml
pushf
mov
sbb
iret
insb
push
xorb
and
pushf
or
and
mov
mov
push
cs
push
jns
jmp
shr
icebp
mov
lods
pop
cmpsb
add
add
out
sub
aam
xlat
out
push
sub
xchg
push
call
out
scas
xchg
andb
jns
outsl
in
adc
fcmovne
mov
mov
cmc
cli
cld
fnstenv
dec
cmp
ljmp
frstor
out
and
or
ss
fstl
ja
insl
sub
arpl
out
fwait
jnp
test
xchg
or
dec
popf
push
or
lock
pusha
push
mov
sub
pop
in
int3
or
inc
in
jl
insl
push
ret
jno
inc
jbe
xchg
ss
jmp
mov
push
mov
xor
bound
cmc
pushf
sub
mov
jae
call
sbb
mov
mov
mov
test
negb
cmp
push
add
mov
push
jne
sbbl
ljmp
cmpsl
pop
jecxz
and
inc
mov
xor
adc
loop
out
inc
mov
adc
push
xchg
test
mov
mov
fldenv
or
push
jae
into
add
push
push
and
sub
lret
dec
xchg
les
add
xchg
shlb
or
mov
cmp
sbb
mov
stc
imul
in
add
call
js
mov
sub
data16
sbb
repnz
cmpsl
repz
pop
dec
or
std
je
data16
mov
mov
cmpsb
sbb
mov
jl
inc
xor
adc
sbb
add
jns
add
xlat
pushf
push
sbb
adc
pop
push
mov
mov
xlat
loopne
dec
mov
mov
out
movsl
mov
add
test
dec
stos
ficompl
lret
roll
les
push
jg
push
scas
leave
pop
mov
xorb
mov
mov
clc
rorb
lds
push
sbb
lcall
sub
dec
and
daa
fwait
inc
sbb
pop
lret
jge
js
cld
pop
or
and
pop
or
je
cmp
push
mov
and
movsl
imul
xchg
lock
fbld
push
je
xchg
scas
jno
lods
fs
and
cmp
movsl
push
cwtl
mov
test
outsb
into
pop
push
repnz
push
mov
push
mov
sbb
das
lods
jb
push
inc
pop
mov
push
ret
jb
sub
push
out
pop
hlt
js
aad
mov
sahf
or
ja
ror
cmpsb
dec
or
xchg
mov
pop
mov
push
mov
es
pmullw
sbb
divl
or
mov
popa
push
dec
lds
dec
adc
pop
cmc
pop
push
sbb
pusha
aad
out
or
les
ja
stc
imulb
or
fstpl
sbb
xchg
sub
and
in
mov
sahf
out
lahf
out
push
jb
mov
sbb
dec
jnp
filds
out
jl
pop
inc
repnz
sub
and
in
insl
movsb
divb
dec
xor
sbb
imul
int3
fwait
loop
mull
or
jge
inc
cli
in
repz
and
mov
repz
dec
mov
jp
cmc
pusha
and
sub
cli
adc
cmc
int
and
inc
jmp
imul
repz
cmp
pushf
js
add
adc
mov
ja
inc
inc
jo
and
sub
xchg
lods
cld
aas
mov
xor
fs
inc
push
mov
pop
mov
mov
mov
sub
fsts
cltd
outsl
pop
adc
adc
in
stc
lock
push
cmpsb
dec
fs
lods
jnp
xor
xchg
leave
andl
dec
jmp
pop
enter
add
repz
je
stos
hlt
rcrb
mov
cmc
addr16
add
sbb
sub
lods
sub
and
bound
xor
and
scas
test
or
sbb
mov
adc
mov
mov
dec
popf
add
in
adc
pop
cmc
mov
jmp
xchg
lea
cmpsb
fnsave
push
xchg
xchg
xchg
cmpsb
ss
in
ljmp
dec
push
push
and
and
leave
ja
xor
data16
xchg
popf
jnp
xor
scas
xlat
adc
pop
test
inc
mov
push
adc
mov
nop
imul
inc
and
daa
push
mov
cmpsb
setb
inc
ja
addr16
insl
pop
jle,pn
cmp
stos
jmp
jne
shll
and
xchg
push
loope
lds
xorl
out
cld
fwait
mov
je
xchg
pop
jmp
ret
imul
fadds
aas
push
cmpb
repnz
insl
idivl
int
inc
es
pusha
rcl
into
leave
pushf
xchg
imul
add
add
dec
mov
or
mov
pusha
cmp
imul
sti
push
out
out
fmul
bound
jnp
cld
adc
sub
sub
cs
cmp
sar
rol
repz
repz
enter
std
dec
pop
sub
loop
aad
aam
adc
subb
fsub
sar
mov
dec
aam
jae
adc
xchg
out
mov
faddl
mov
mov
mov
push
sub
jno
push
xchg
notb
sbb
pop
jle
xchg
stc
and
addr16
pop
mov
mov
scas
insb
outsl
fucomi
ljmp
push
jmp
sbb
scas
jp
or
xchg
insl
cli
xchg
pushf
jb
xchg
test
adc
mov
mov
xor
inc
xchg
jno
jae
ss
bound
stos
dec
into
jb
iret
test
push
je
fadd
ret
cmpsb
lock
mov
mov
inc
out
std
imul
cmp
pop
shll
aaa
test
repnz
or
push
mov
leave
xor
mov
push
lret
xor
pusha
fs
add
adc
cmp
push
dec
outsl
jno
mov
negl
lods
mov
je
dec
xor
push
mov
push
sbb
nop
out
ret
inc
mov
gs
mov
fcompl
pop
std
mov
mov
sahf
pop
out
cmp
mov
dec
push
cmp
pop
cmp
mov
ljmp
pop
mov
dec
xchg
jnp
push
fisubrl
jo
sbb
sti
jg
xor
jecxz
xchg
or
cmp
inc
push
rclb
fiadds
cmp
cld
call
sbbl
sbb
push
insl
jnp
in
mov
jns
sub
les
int3
leave
popa
movsl
flds
lds
push
dec
test
pusha
xor
icebp
cmp
outsl
lds
popa
and
cmpl
pusha
cmpsb
cmp
pop
dec
dec
jbe
or
xchg
cltd
stc
cmp
xor
xor
sbb
sbb
mov
pop
ja
pushf
addb
fcomps
dec
mov
mov
outsb
push
jmp
scas
in
cmpsb
jmp
sub
xor
push
jno
lea
push
xchg
es
fwait
jo
cltd
aaa
mov
sbbl
roll
aas
lret
js
dec
popf
adc
xchg
pop
cmp
or
xor
sub
sbb
stc
lahf
loop
mov
pop
jle
clc
mov
aad
lcall
lods
mov
test
mov
sub
in
mov
sub
xor
cmp
jb
sbb
or
sbb
out
mov
xor
cmp
xor
leave
cmpl
cmp
cmc
loope
sub
push
or
inc
data16
jl
sbb
pop
sti
or
add
add
icebp
cmc
leave
lods
ja
lret
adc
aaa
xor
push
jp
outsl
mov
repnz
out
out
sbb
into
jl
mov
pop
js
xchg
mov
dec
xor
cmp
outsl
xchg
imul
or
inc
nop
movsb
fldt
add
push
adc
push
cmc
in
add
push
repnz
ret
imul
inc
es
cmp
jl
test
imul
jae
jg
xor
lods
push
cmp
push
pushf
jmp
fldln2
int3
xchg
test
inc
aaa
aad
cwtl
jne
adc
les
xor
and
mov
mov
or
bound
xor
aad
imul
loopne
xlat
popa
or
xor
lahf
and
push
push
jb
loop
jle
cmc
and
imul
push
ja
pop
mov
adc
inc
sub
add
cmc
push
cmpsl
pop
push
dec
cmp
ss
movsb
enter
mov
and
mov
arpl
xor
fsubrs
hlt
inc
push
and
or
mov
jns
adc
inc
xchg
in
mov
jb
gs
out
xor
stos
into
mov
insb
mov
fwait
xchg
cmp
pop
shlb
fidivl
add
test
sbb
out
inc
orl
subl
frstor
fsubrl
cmp
rcl
and
sbb
sbb
xchg
int3
mov
pusha
dec
mov
jne
loop
sbb
shll
xlat
and
or
jle
insl
dec
fs
js
sahf
sub
call
rorb
cs
xor
loopne
repz
sbbb
data16
sub
pop
mov
and
lret
push
push
pop
cmpsb
jmp
movsb
add
xorl
fmull
and
daa
cmp
jb
xchg
mov
mov
fcompl
push
out
push
idivl
lcall
xlat
addb
push
mov
stos
loopne
push
mov
jmp
test
daa
jmp
mov
mov
or
lods
fistpll
push
es
cmp
jae
xchg
inc
xchg
cltd
push
subb
mov
sbb
sbb
cmpsl
mov
jmp
cmp
ljmp
sub
sbb
les
fistpll
xchg
in
push
cmp
sbbl
sbb
dec
das
dec
and
cmp
lea
imul
pop
xchg
add
pop
mov
dec
cmpb
imul
enter
mov
popa
shll
ljmp
dec
dec
cmpl
punpckldq
sbb
testb
insl
mov
pop
aas
mov
adc
jl
sbb
fiaddl
in
xchg
out
jl
out
and
push
cwtl
and
jge
cmp
xor
in
or
push
sbb
shll
lcall
adc
shlb
inc
inc
movsb
outsb
add
push
dec
push
add
out
mov
adc
jae
xchg
sbbb
and
ja
fimuls
aad
aaa
fsubs
sbb
ret
bound
mov
adc
shll
aaa
add
mov
out
cli
add
xor
xor
lds
dec
and
shll
xor
mov
or
and
jp
fldl
dec
lret
cld
lods
xchg
shrl
add
bswap
jecxz
gs
jmp
xchg
push
nop
int
outsl
mov
xchg
fisttps
nop
repnz
jp
add
adc
js
neg
cmp
ror
cli
and
mov
pop
loope
adc
cli
sbb
pop
call
and
xchg
sub
push
fwait
jg
scas
inc
flds
cld
dec
aas
push
push
and
movsb
call
and
sub
mov
xchg
inc
fisttpll
fwait
outsl
loope
adc
mov
inc
inc
push
daa
mov
loope
outsb
adc
gs
xchg
lock
mov
mov
lods
jne
or
popa
lock
sbb
lss
sub
jl
or
sbb
xlat
in
dec
jb
xor
pop
std
pop
mov
in
out
adc
and
sbb
xchg
add
fisubrl
rorl
jmp
sbb
imul
insb
pop
xchg
fdivrs
jnp
repz
adc
shlb
adc
sbb
stos
adc
ja
mov
rcrl
lcall
push
mov
xchg
test
std
push
fcmovnbe
dec
fldcw
fdivs
sahf
lods
mov
repz
out
movsb
sbb
pop
jb
push
fdivs
das
inc
rcll
adc
sbb
stc
sub
or
sarl
or
scas
ficompl
jl
fiaddl
test
and
pop
sbb
pop
inc
sbbb
xchg
enter
mov
test
jbe
movntq
push
push
and
or
mov
hlt
dec
mov
or
ficomps
lock
push
or
rcl
arpl
js
flds
and
out
outsb
repnz
scas
xchg
jnp
mov
int3
dec
test
and
inc
sub
scas
stc
enter
sbb
int3
pop
ror
add
jmp
pop
sub
mov
repz
cmp
fisttps
repnz
idiv
incl
jge
sub
mov
lcall
aam
flds
out
lcall
mull
shl
cmp
leave
cmp
push
mov
gs
jmp
fisubrs
sbb
sbb
mov
jne
je
and
sbbl
aaa
inc
adc
jle
clc
cs
pop
fildl
stc
outsl
shrl
pop
add
movb
and
mov
mov
daa
pop
cwtl
rol
mov
outsl
data16
lcall
or
or
scas
inc
cmp
cmp
jno
das
addr16
mov
cwtl
xchg
pop
dec
cmp
mov
lods
mov
test
add
ss
sub
xor
fwait
cmp
sahf
jp
pop
sarl
jg
scas
and
insl
jne
bound
jmp
hlt
enter
and
adc
js
xchg
pop
adc
cmc
in
add
lcall
movb
push
mov
mov
cmp
jmp
mov
icebp
lea
jecxz
fnstenv
out
leave
xor
loope
xor
test
adc
aaa
mov
sahf
insb
daa
test
fisubl
mull
scas
sbb
mov
out
movsb
clc
mov
jmp
mov
and
mov
scas
xchg
lods
std
into
mov
xorl
loope
push
icebp
push
push
or
lahf
lea
push
mov
mov
mov
inc
mov
xchg
adc
xor
fisubrl
inc
inc
inc
dec
dec
icebp
add
ds
stos
xchg
push
mov
idivb
mov
loope
divb
pop
xor
jne
xorl
cs
adc
test
jmp
addr16
loop
pop
fldl
out
xor
push
xchg
mov
pop
mov
ja
popa
push
jmp
pop
adc
test
lock
aas
cmpl
jno
sbb
mov
dec
xor
cmpsl
popf
mov
push
fmul
sub
mov
fmul
xor
aaa
push
fstl
and
push
sbb
outsb
cs
int
jle
cmp
push
mov
cmpsb
leave
dec
lcall
int3
sti
mov
mov
sarl
and
fcompl
pushf
pop
dec
test
scas
insb
inc
xlat
push
out
in
and
lret
in
pop
xchg
dec
dec
fldenv
pop
je
cwtl
push
push
mov
jle
push
push
jno
xchg
test
jne
cmp
mov
aam
rcl
nop
adc
mov
sbb
xor
daa
jmp
mulb
lahf
popf
mov
testl
sbb
mov
ja
sbb
lret
loopne
mov
into
xor
adc
out
mov
bound
lds
cltd
mov
test
in
in
adc
pop
sti
cmpxchg
es
bound
stos
lahf
mov
hlt
rol
ljmp
loope
test
pop
into
xchg
jecxz
call
mov
jb
jae
xchg
insl
adc
inc
and
lret
adc
out
xchg
push
rorl
mov
out
inc
outsl
pop
sbb
jbe
inc
xor
ja
insb
cmp
adc
lcall
fstps
dec
call
or
hlt
repnz
and
adcb
push
pop
mov
and
ret
data16
dec
test
cmp
push
jp
xchg
mov
cmp
sbb
or
ficompl
mov
pushf
xor
mov
rcl
xchg
push
div
cmp
push
jp
mov
sti
sbb
push
mov
cmpl
mov
aad
adc
dec
pusha
fisubs
and
sbbl
inc
jge
js
icebp
cmp
add
dec
xchg
mov
adc
fninit
mov
popf
leave
test
jmp
add
loopne
mov
or
jl
xor
lods
aad
xor
in
jge
aad
insl
mov
dec
fidivrl
mov
jmp
or
add
xor
sbb
fisubl
out
sbb
mov
xor
add
push
std
mov
pop
outsb
mov
aas
cmpsl
lret
xchg
shrl
cli
dec
outsb
push
add
ficompl
fldt
popa
pusha
fists
repnz
xor
and
repnz
add
push
inc
adc
add
das
inc
loop
pop
jp
pop
xchg
enter
cs
frstor
mov
dec
xchg
adc
adc
xor
mov
cmpsl
ficoms
pop
imul
fistps
add
add
sbb
jns
das
stos
fidivl
js
inc
pop
dec
mov
int3
es
lahf
mov
mov
in
dec
scas
push
cmp
pop
inc
loop
into
out
int3
xor
es
test
sub
gs
daa
decb
loope
dec
mov
xchg
add
test
lock
dec
dec
jge
rcl
lret
xlat
jmp
xchg
jb
in
add
mov
imul
rorb
sub
in
fdivl
fcmovu
jle
lret
fidivs
or
lods
sbb
aam
jle
dec
in
pop
and
dec
sub
sub
jg
and
inc
sbb
dec
push
mov
call
mov
pop
xchg
pop
sub
sbb
cmp
repz
xor
lret
jbe
int3
cwtl
das
dec
int3
ficoml
adc
js
push
sti
jle
cli
or
sbb
or
cmp
mov
testl
int3
mov
loop
cmp
mov
push
ja
sbb
lds
stos
xor
test
in
add
mov
dec
and
push
sub
sarl
mov
in
xchg
sbb
add
xchg
cs
pop
pop
mov
sbb
pop
jp
aaa
push
add
jp
adc
scas
sbb
es
test
data16
pop
mov
add
daa
out
add
pop
adc
movsl
rcrb
out
jae
jmp
and
sbb
push
dec
jp
xor
push
adc
das
dec
jbe
sbb
jl
mov
lds
leave
je
or
push
int
addl
mov
movsb
push
inc
dec
cmp
jmp
cmpsl
loope
fwait
add
xchg
sti
cli
push
cmp
out
sbb
xor
fisttps
loope
or
xor
addr16
repz
or
mov
or
mov
shrb
pushf
inc
xchg
scas
xchg
xor
ret
xchg
js
dec
inc
out
bound
push
push
mov
stc
das
jno
mov
jmp
loop
mov
xor
aaa
mov
jle
mov
pop
shl
in
bound
neg
push
dec
sub
jecxz
les
dec
push
adc
sbb
imul
and
mov
mov
add
stos
pmulhw
dec
cmp
mov
sbb
insb
and
sbb
ret
adc
lods
dec
addr16
dec
imul
pop
fdivrl
xchg
lods
add
add
mov
into
loope
push
sub
in
push
jo
in
dec
lea
jp
movsb
shrl
sub
push
add
pop
cwtl
in
jns
sbb
out
cmp
test
cltd
push
stos
shl
in
jge
lret
arpl
add
cmp
pop
xchg
mov
xor
push
ss
in
push
mov
and
clc
repz
jecxz
jecxz
pop
jg
sbb
cmp
add
sub
and
mov
lcall
push
repnz
sbb
mov
popf
pushf
or
cmp
dec
push
push
mov
or
cmp
enter
rcr
jge
inc
sub
jle
jnp
dec
aas
xchg
dec
and
push
xlat
add
mov
movsl
gs
xor
or
sahf
scas
dec
in
mov
jp
cmpl
push
into
xchg
subb
dec
hlt
xchg
lret
js
xor
ds
stc
cmp
and
dec
ds
jns
xchg
lahf
repz
int
mov
mov
je
xor
jmp
outsl
sbbl
ljmp
in
rcrl
pop
pop
out
dec
test
xchg
movsb
mov
xchg
or
popa
or
xlat
dec
or
sub
and
mov
mov
shlb
mov
or
pop
shrb
xchg
dec
jns
mov
jg
iret
mov
cwtl
push
fldt
cltd
lods
push
loopne
jae
bound
stos
cwtl
mov
addr16
aam
xchg
jnp
movsl
xlat
jns
jae
cmpsl
loopne
sub
inc
fsubr
lea
and
ret
in
test
sub
adc
push
mov
aad
out
call
ss
dec
mov
inc
repnz
sub
add
cmp
ds
push
fs
adc
cmpsl
dec
add
mov
popa
pushf
xlat
jg
fldt
outsb
sar
scas
push
pop
into
or
shrl
addr16
mov
pop
jb
push
pop
bound
insb
hlt
cmp
pop
addb
gs
mov
enter
mov
data16
pop
mov
inc
xchg
inc
dec
push
or
shrb
fs
aad
sbb
jns
xor
iret
xchg
mov
sbb
filds
cld
xchg
jge
fldcw
cs
lods
icebp
jbe
insb
sbb
push
int3
pop
and
and
ja
pop
jnp
push
adc
push
lock
mov
stos
aad
fcomps
push
aas
into
cmp
and
inc
ljmp
cmp
sub
dec
enter
ret
adc
sbb
aas
js
sub
cmp
pusha
andb
enter
jmp
call
fcoms
push
cmpsl
mov
pop
es
xchg
xchg
xchg
orb
jnp
sub
jae
adc
jbe
cwtl
test
das
xchg
jne
xor
jmp
mov
inc
lds
fwait
sub
sub
sbb
xchg
icebp
jge
jnp
mov
cmpb
fbstp
push
mov
bound
notb
in
pop
pop
test
or
adc
movsb
pop
mov
js
stc
inc
mov
test
push
mov
into
std
or
fcomps
cmp
int3
sbb
js
mov
xchg
shrl
sbb
out
xor
ss
cmc
adc
cmpsl
scas
xor
jl
insb
xor
popl
xor
dec
hlt
cs
or
fxch
divb
xchg
popa
push
lock
pop
push
lcall
push
xchg
std
jbe
xchg
jbe
ret
xchg
mov
cmp
or
sbb
fcomi
mov
imul
call
gs
adc
daa
mov
pushf
cmpsl
push
pushf
pop
xlat
pusha
add
or
push
mov
inc
jecxz
mov
cli
sbb
ljmp
sbb
xorl
decl
or
hlt
push
or
rclb
imul
inc
lret
jmp
cmp
subb
inc
dec
push
or
pop
popa
or
leave
mov
sbb
or
roll
cmpsl
dec
lods
call
scas
mov
loop
sahf
or
adc
pop
mov
outsb
cmp
mov
sbb
insb
aas
or
pop
insb
imul
int3
or
mov
pop
sbb
add
ret
xlat
cld
iret
lret
nop
dec
dec
insb
mov
test
clc
jmp
mov
aad
jne
and
cwtl
stos
inc
sbb
jle
repnz
xchg
outsl
out
cmp
mov
xchg
push
jne
dec
insl
jecxz
sahf
sub
test
int
xor
fisubs
cmp
push
push
xor
fldenv
test
dec
mov
mov
ss
mov
mov
enter
jge
add
and
and
movsl
mov
clc
fsubs
arpl
pop
mov
inc
mov
and
movups
aam
mov
loop
push
stc
cmc
pop
lods
add
pushl
inc
mov
mov
sahf
mov
pop
and
xchg
cwtl
xchg
sub
loop
fdiv
test
jnp
daa
in
dec
pop
int3
pop
xor
stos
jmp
imul
es
and
shlb
insb
fcmovnu
cli
cs
mov
xor
mov
test
cmp
orl
outsb
lcall
fadd
add
lret
nop
popa
call
inc
push
loopne
fdivs
adc
xchg
pusha
or
mov
into
rcrl
or
adc
cmpsl
sbb
insb
scas
loope
xor
push
test
clc
dec
ficoms
xchg
inc
aas
pop
outsl
sbb
enter
enter
icebp
add
mov
cmp
dec
in
int
xchg
aas
out
into
jo
repz
shll
mov
sbb
mov
xor
clc
inc
jne
and
pop
inc
stos
ljmp
mov
sub
pop
insb
hlt
xchg
outsl
cmp
jge
pop
pop
lcall
cltd
icebp
sbb
push
xor
je
push
loop
mov
in
pop
leave
imul
test
fstpl
mov
cmp
dec
out
enter
outsl
sahf
jo
or
jno
pop
cmpl
ud1
out
lret
in
lret
sub
adc
shrb
or
in
mov
dec
cmc
scas
pop
mov
mov
sahf
dec
mov
mov
not
loopne
clc
lock
mov
inc
jnp
loope
ficomps
rcll
cmp
shrb
outsb
cmc
cmp
xor
js
pop
push
aaa
push
fstp
movsl
push
std
jmp
popf
clc
jmp
ss
pop
xor
cmpsb
idivb
lahf
dec
inc
sub
jne
repnz
les
out
cli
xchg
sub
and
jnp
out
fs
dec
test
sub
xchg
repnz
push
dec
fbld
adc
xchg
push
in
dec
jle
ja
insl
neg
movsb
or
sub
or
mov
in
lods
enter
movsb
lds
popf
sbb
imul
test
jnp
imul
repnz
cmp
repnz
pushf
cwtl
es
and
push
imul
dec
fwait
scas
enter
insb
adc
hlt
leave
cmp
cmpsl
loope
insb
mov
iret
push
jp
mov
pop
leave
sub
or
imul
sub
arpl
xor
xchg
pop
sti
jns
pop
cltd
dec
sub
add
xlat
adc
aas
rclb
mov
push
popf
mov
inc
fwait
add
inc
jl
cmpsl
mov
and
or
mov
icebp
pop
sbb
mov
jns
andb
pop
adc
test
fisubrl
repz
pop
sbb
jb
xor
outsb
out
ds
ss
lret
adc
jne
sbb
ror
into
add
repnz
sbb
xchg
enter
cmp
idivb
xor
lods
imulb
sbb
inc
clc
sbb
push
mov
jb
inc
les
arpl
lahf
mov
out
fwait
iret
fsubs
imul
and
xor
inc
xlat
jmp
popa
jne
rcr
fmul
inc
aad
loope
jl
add
in
mov
fwait
leave
ja
or
les
xor
mov
movsb
pushf
imul
ja
dec
cltd
or
popa
cmp
and
sbb
in
jp
nop
out
out
mov
pop
and
push
mov
stos
pop
pop
in
je
inc
add
cmpsl
jns
jmp
cmp
xor
jge
mov
xlat
xor
mov
and
push
int
mov
ss
mov
decb
repnz
dec
call
jl
push
ljmp
mov
jne
pusha
stc
rcll
lahf
dec
mov
cmp
cltd
rcrl
jmp
xor
arpl
mov
pusha
and
inc
lcall
cmc
push
outsl
rclb
add
cmpsb
push
ret
stos
neg
jo
nop
fsubrl
inc
das
xor
test
jle
repnz
jmp
ja
xor
movsl
jmp
cmp
enter
scas
lds
mov
xchg
add
or
pop
mov
ja
aam
gs
inc
mov
xchg
mov
jecxz
jns
cmpsb
cmp
xor
jns
imul
dec
xor
sub
mov
mov
insb
cmpl
mov
adc
jp
cs
jmp
mov
mov
pop
fdivrl
loopne
aas
push
insb
or
add
push
and
movsl
adc
inc
les
loop
lods
xor
dec
sub
leave
dec
test
inc
pop
aam
pop
into
je
push
cmpsb
lods
pushf
push
repnz
mov
fmull
jae
es
cwtl
stos
jmp
mov
mov
cwtl
cmp
iret
in
ret
dec
jbe
cmp
sbb
out
push
cltd
jl
paddsw
sbb
stc
repnz
dec
addr16
push
aaa
sub
je
sbb
scas
cmp
sahf
jb
push
ror
cmp
sub
and
aaa
jne
mov
push
xor
fcmovbe
repz
mov
nop
mov
add
xor
scas
add
dec
popa
mov
test
out
adc
xchg
adc
movsb
icebp
inc
dec
jmp
cmpsb
sub
int3
add
xchg
push
int
mov
jp
mov
pop
je
adc
cltd
mov
push
mov
popf
xor
dec
lret
roll
stos
push
mov
adc
push
xor
push
and
es
inc
jae
popa
adc
mov
mov
jno
inc
sbb
fldenv
nop
dec
popa
sti
test
fnstsw
data16
lret
out
js
adc
push
arpl
adc
xchg
jb
data16
sbb
hlt
push
stc
jg
sti
imul
inc
push
cwtl
out
inc
pop
adc
mov
outsl
icebp
lods
jl
nopl
mov
lahf
out
inc
add
mov
mov
cmp
add
fcoms
sti
jbe
cwtl
sbb
or
mov
les
jns
mov
imul
in
mov
dec
pop
cmpsl
loope
sbb
and
out
push
jle
or
nop
sbb
mov
jne
iret
mov
add
xlat
js
mov
xor
shlb
sub
mov
mov
inc
and
pop
sti
or
pop
sub
cmc
ret
outsb
test
arpl
mov
inc
ja
clc
xor
push
xor
bound
and
dec
inc
enter
pop
sub
and
xchg
xor
aad
and
pop
lods
inc
and
outsl
sbbb
push
int
adc
mov
mov
push
mov
in
lret
lods
bndldx
iret
outsl
push
or
test
lret
and
mov
int3
lock
scas
in
insl
testl
dec
mov
mov
idivb
ret
loope
lea
inc
js
lea
loop
pop
das
sub
mov
jb
fs
adc
jecxz
arpl
repnz
mov
add
sub
addr16
clc
popa
repz
cwtl
adc
enter
dec
sarb
nop
mov
mov
je
adc
push
je
push
or
or
sti
jnp
sub
movsb
inc
mov
mov
stos
xchg
fists
cmpsb
push
mov
scas
mov
jo
lahf
fdivrl
mov
insl
pop
cmp
lahf
fcompl
sar
push
cmpl
mov
sbb
jmp
jns
pop
data16
jns
scas
inc
imul
js
jp
clc
aam
jae
dec
dec
pop
mov
pop
add
mov
ret
xor
lods
gs
xor
jecxz
cmpl
fmulp
adc
in
gs
add
inc
nop
outsl
out
mov
jae
ret
inc
mov
dec
mov
add
leave
sbb
mov
lods
repz
aam
ror
xlat
shl
push
push
xor
xchg
dec
pusha
ja
inc
pop
xchg
xor
sbb
jae
jge
push
iret
out
mov
rcrb
sub
pop
js
popa
push
sub
aam
sbbl
ljmp
push
sbb
xchg
fidivl
pop
adc
adc
cmc
lret
xrelease
popf
or
aas
adc
movsb
jg
outsb
test
fisubrs
insb
sub
cmp
jle
pop
pmovmskb
test
out
lods
sbb
xchg
add
pop
and
hlt
inc
adc
cld
popf
xchg
xchg
push
adc
push
insl
and
ds
loopne
out
add
push
cmc
sub
mov
movsb
add
orl
data16
jg
mov
push
pop
in
push
stos
mov
pop
xchg
das
pop
mov
push
std
mov
inc
stos
sub
mov
jp
stc
stos
outsb
in
outsb
repnz
jle
jae
pop
cmpsb
stos
sbb
or
insb
mov
into
std
loope
and
mov
shrb
and
xor
leave
jecxz
xor
out
mov
clc
xchg
rolb
sbb
jbe
mov
sbb
sub
int
lds
jb
inc
push
mov
mov
push
mov
mov
je
or
and
dec
sub
xchg
dec
mov
push
push
cmp
cld
mov
push
leave
pop
mov
lea
jne
shlb
push
sub
ret
pop
mov
mov
jp
leave
es
xchg
out
testb
dec
sbb
imul
nop
testl
into
fmull
xchg
mov
fsubr
pop
sbbb
jp
mov
jne
push
out
out
mulb
push
dec
mov
subb
popf
dec
or
test
jp
shlb
inc
inc
cmp
mov
sub
push
inc
lcall
mov
fidivrs
cld
mov
lds
and
cmp
mov
in
aad
cmc
adc
das
and
pop
adc
sub
push
add
movsb
inc
loop
cwtl
pop
stos
dec
mov
mov
mov
int
pop
int
shl
subl
add
fucom
in
push
jecxz
pop
or
arpl
xchg
in
scas
mov
sub
imul
int
inc
cmp
cmc
push
out
out
in
sub
addr16
or
bnd
jl
insb
js
mov
mov
mov
fisubrl
ljmp
push
add
sub
mov
mov
les
push
sbbb
mov
addl
mov
js
sub
das
int
cli
mov
stos
cmp
push
pop
mov
in
repnz
sbb
cs
xchg
mov
inc
stos
jb
xlat
cmp
dec
sub
scas
push
cmp
fidivrl
mov
cmp
jmp
lea
xchg
aaa
arpl
test
xlat
mov
rorl
rcl
mov
pop
xchg
cmp
mov
inc
mov
rclb
test
inc
iret
jno
fisubrs
movsl
and
jecxz
xlat
loopne
stc
loope
adc
mov
pop
mov
lret
xchg
jbe
mov
jbe
xchg
and
xlat
mov
sub
inc
jo
mov
test
repz
push
sub
lahf
fisttpl
pop
in
or
pop
dec
jmp
shlb
leave
stos
pusha
mov
clc
jo
test
sbb
jae
xchg
neg
jnp
scas
enter
test
std
jo
mov
jo
popa
ss
sbb
fs
mov
xor
cltd
int
in
pop
enter
mov
xchg
and
mov
or
mov
insw
les
jae
push
dec
icebp
push
xor
inc
adc
sub
jnp
sbb
and
ret
mov
rcrl
xchg
add
in
insb
dec
fwait
ja
jle
fidivrl
cmp
push
or
ret
incl
aad
clc
out
data16
bound
aad
test
insl
mov
mov
flds
mov
sbb
in
lock
mov
test
pop
push
fwait
dec
scas
popf
outsb
sbb
push
sub
aad
xchg
ja
sbb
ja
js
arpl
cmpsb
test
dec
xchg
hlt
or
out
xchg
sbb
pop
xchg
xlat
sarb
sti
nop
add
or
aad
add
push
jo
sbbb
or
cmp
ljmp
adcb
loop
js
int
push
fsts
cmp
sarl
mov
jnp
rcll
inc
pop
sub
and
mov
xchg
add
jae
pop
and
fnsave
push
addb
xor
xchg
pusha
inc
dec
out
push
push
loope
lock
in
jg
les
sbb
xchg
jmp
mov
outsl
loop,pt
add
push
push
and
pop
pop
xchg
test
and
aam
mov
pushf
xor
mov
in
push
mov
mov
rclb
push
roll
loop
outsl
dec
lea
testb
sub
decl
adc
int
cltd
xchg
cs
bswap
jb
mov
ss
lds
push
adc
and
movsb
xchg
dec
mov
enter
inc
lret
mov
lea
test
add
jnp
add
scas
test
push
jmp
inc
sbb
fsts
mov
sub
jne
sbb
xchg
and
dec
imul
scas
test
adcb
inc
les
fists
stos
and
and
fcmove
cmp
out
pop
fmuls
push
mov
lea
xchg
rcll
stos
pop
pop
xor
out
mov
pushf
dec
mov
dec
adc
stos
lret
dec
mov
and
xor
and
or
stos
push
mov
adc
into
scas
lea
xchg
pop
jo
xor
pop
fsubs
aad
rorb
sti
jnp
lock
out
dec
mov
and
fsubl
sub
mov
cmc
mov
incl
push
out
jns
and
les
adc
sahf
jmp
xor
fidivrl
pop
xchg
popf
pop
setnp
adc
shr
push
addr16
adc
push
imul
int
loop
cmp
out
inc
jl
mov
mov
mov
jae
xchg
pop
dec
push
fildll
cmp
or
pop
cltd
sbb
sub
fdiv
mov
xchg
fists
sahf
loope
test
cmp
cltd
insl
push
repz
movsb
bound
adc
mov
jmp
icebp
add
jb
scas
push
pop
sub
lea
inc
xchg
xchg
insl
inc
inc
mov
mov
dec
push
adc
inc
mov
stc
inc
pop
fwait
inc
stos
xchg
inc
ret
pop
xor
gs
xchg
adc
aam
push
and
in
add
lds
jns
sar
mov
sbbl
aad
mov
dec
loope
inc
sbb
mov
pop
add
sarb
mov
in
mov
inc
loopne
adc
inc
sbb
xchg
pushl
nop
divl
jmpw
lds
repnz
sub
call
dec
std
mov
hlt
aad
repnz
push
dec
stos
jmp
sbb
mov
and
jno
ficompl
in
jnp
inc
rorb
push
add
jle
sbb
xchg
pop
pop
pop
es
call
imul
xchg
adc
and
cltd
fnsave
jl
jl
aam
cld
or
cmp
dec
shlb
fs
sub
sub
jp
or
js
pop
jecxz
mov
pop
jl
enter
mov
mov
add
das
mov
sub
jl
jae
or
shrl
xchg
rorl
insb
xchg
add
xchg
sub
add
cmc
aam
int
scas
leave
push
rcrb
fldt
or
dec
adc
mov
shlb
mov
sbb
fdivl
pusha
push
mov
mov
and
adc
insb
nop
in
xchg
and
jne
mov
loop
xchg
add
out
std
pop
outsb
ret
or
or
insl
xor
das
les
adc
pop
out
push
xor
and
mov
and
pop
je
fisubrs
cmp
mov
lret
cwtl
mov
iret
push
in
push
push
je
jg
xchg
shrb
xor
mov
les
push
in
add
cs
mov
ds
inc
jnp
sbb
jecxz
and
jne
mov
cmpsl
jnp
inc
orb
int
lea
movsl
or
je
imul
push
insl
inc
push
jne
je
imul
insb
popa
icebp
sub
push
shlb
xor
fwait
xchg
pop
stc
imul
lods
mov
mov
mov
pop
es
push
movsl
cmp
sarl
mov
sbb
in
je
xchg
je
cmp
imul
es
push
pop
ficoml
mov
sbb
clc
call
jecxz
aaa
push
arpl
lds
loope
and
jmp
jmp
jno
inc
xor
inc
fidivl
imul
test
mov
lret
pop
lock
insb
mov
mov
mov
dec
mov
neg
xor
fdivrp
inc
jb
or
ljmp
or
push
jp
in
icebp
sarb
out
popa
rorl
dec
mov
jle
loop
cmp
jb
adc
cld
call
push
nop
popf
dec
or
xchg
mov
push
sbb
jmp
jb
std
push
in
sahf
mov
out
add
cmp
jp
sti
xchg
xor
jno
fmull
add
pop
push
mov
jle
insl
addb
pop
cmp
xor
mov
iret
cwtl
nop
fnstenv
xchg
cmpsl
cmp
ret
enter
scas
dec
cmpsl
in
xor
xchg
imul
rclb
jp
push
cmp
xchg
stos
cmpsl
inc
add
outsb
out
std
mov
cmp
test
jp
stos
adc
test
cmpsl
dec
and
pop
aad
popf
mov
xchg
popf
jecxz
mov
mov
and
ss
test
mov
or
cmc
sbb
int3
cwtl
push
inc
aaa
fwait
lret
mov
lret
shll
lods
loope
aas
inc
fucom
daa
clc
ja
and
movsb
repnz
dec
cld
pop
aas
in
push
ficoms
or
xbegin
cmp
aas
lds
cmp
mov
cmp
addl
lret
aad
cmp
les
lods
dec
divb
jb
int3
push
and
popa
mov
flds
pop
jle
xor
cld
mov
push
inc
or
mov
imul
ret
das
lcall
dec
inc
movsl
dec
pop
jmp
sti
int3
inc
lea
pop
adc
push
cmc
jge
fs
inc
or
in
ljmp
popa
popl
pop
rorl
and
lret
fistl
push
mov
jns
cmpsl
jmp
fsub
mov
adc
cld
pop
repz
jg
ss
hlt
inc
mov
add
mov
inc
sbb
mov
inc
push
dec
outsb
hlt
jmp
lods
xchg
jmp
or
lret
adc
sub
sahf
std
mov
cmp
hlt
push
cltd
cmc
mov
imul
add
mov
lods
jge
bound
add
jle
ja
jno
pop
nop
mov
testb
inc
mov
mov
push
mov
pop
je
loopne
loope
outsb
sbb
xchg
add
adc
push
lret
ljmp
jo
xchg
xchg
imul
addr16
sbb
popf
lahf
and
sub
pop
cwtl
out
mov
add
arpl
push
mov
cmpl
ds
jmp
jo
adc
std
mov
mov
fimull
push
push
es
mov
pop
inc
dec
bound
add
out
dec
arpl
arpl
sub
add
repnz
pop
and
movsl
mov
movsb
arpl
pusha
cli
sub
add
pop
inc
jns
or
cmp
pop
jb
inc
or
xchg
pop
scas
out
xchg
jno
ss
dec
and
pop
out
mov
xchg
scas
sbb
push
add
shlb
pop
ret
push
scas
add
popa
icebp
jg
les
and
inc
jmp
pop
xchg
xchg
adc
and
scas
shlb
mov
flds
flds
pop
inc
sub
out
cmp
sbb
xchg
dec
xor
adc
mov
inc
pop
sub
fstpt
js
outsl
pop
or
mov
lahf
xor
lcall
add
inc
pop
inc
mov
pop
jnp
xor
in
jo
out
cmp
cmpsb
dec
sub
je
and
pop
cltd
inc
mov
clc
push
imul
cmp
mov
cs
mov
mov
aam
jecxz
mov
add
mov
or
into
scas
inc
dec
mov
stc
and
je
lds
mov
es
clc
cltd
and
mov
jl
mov
push
loope
mov
mov
add
mov
outsl
adc
mov
je
xchg
and
fadd
add
pop
in
xchg
sar
in
aaa
std
pop
xchg
or
jno
ror
test
and
cmp
adc
pop
out
arpl
cs
jbe
dec
mov
cld
in
pop
shlb
shll
pop
push
cwtl
insl
mov
push
aaa
cltd
mov
fcoml
cmpsb
mov
movsl
add
repnz
push
xchg
xchg
scas
lods
jmp
push
push
stc
pop
xchg
aas
ljmp
mov
loope
out
sbb
sbb
mov
cmp
mov
sbb
lock
inc
adc
pop
cld
inc
in
push
nop
push
repz
test
clc
mov
sub
pop
imul
push
push
dec
push
or
mov
stos
int3
fwait
enter
testb
hlt
adc
pop
push
lds
dec
xor
and
or
mov
fsubrs
inc
orl
or
pop
lahf
cmp
js
dec
mov
mov
mov
xor
aam
sub
mov
inc
xor
inc
leave
and
mov
dec
adcb
test
jecxz
sub
mov
repnz
push
inc
add
fcompl
pop
stc
mov
jne
mov
scas
jns
dec
mov
or
subb
dec
and
aam
ret
mov
in
andl
leave
lods
cmp
pop
inc
lahf
push
int
cmpsl
push
inc
sahf
mov
xchg
mov
mov
inc
adcl
movsb
cmp
pop
cmpsl
push
inc
mov
aad
jmp
sti
test
gs
jnp
pop
fistl
out
add
addb
fdivrs
inc
mov
call
aam
pop
pop
lods
sbb
je
pushf
or
ret
push
std
icebp
stos
push
add
lock
push
mul
add
cmp
pop
inc
pusha
inc
lods
es
bound
inc
std
jae
xchg
cmp
pop
imul
pop
popa
cmovge
and
mov
xor
cmc
inc
int3
lret
fidivs
dec
adc
jg
arpl
sub
fwait
jecxz
cmc
mov
gs
or
nop
add
ja
dec
sbb
xchg
lcall
addr16
xor
cmpsl
add
cli
sarl
pop
fnstcw
sahf
jae
lods
dec
jg
xorl
add
or
mov
sbb
mov
fsubs
mov
and
bound
enter
and
stos
inc
je
outsl
mov
xchg
bound
push
rclb
push
fwait
push
iret
pusha
popa
jg
cld
push
out
inc
insl
sub
adc
and
testb
add
enter
lds
stc
insb
pop
jp
jecxz
sbb
xchg
jmp
rolb
cmp
sub
aad
enter
inc
les
int3
xor
add
std
subb
fimull
in
fsubs
jb
inc
sbb
sbb
fcoml
ss
popa
xchg
mov
pop
cmpsb
add
add
jecxz
out
cltd
jmp
mov
int3
jbe
mov
adc
add
call
ss
push
loopne
cld
pop
fsubp
mov
mov
daa
aas
jbe
mov
sar
inc
imul
jnp
push
lods
sub
subb
sbb
sbb
lods
roll
lds
mov
adc
xor
inc
mov
fdivl
cmpsl
dec
inc
mov
insl
adc
test
xor
xor
mov
sbb
cmpsb
fists
es
adc
clc
icebp
aaa
fldcw
add
add
int
fs
cmp
inc
pop
pusha
jmp
and
pop
nop
daa
fxam
in
fbld
repnz
lods
inc
push
test
push
jb
dec
test
mov
cltd
repz
mov
loope
int
xor
ljmp
push
and
mov
adc
push
ja
inc
inc
out
mov
and
xchg
dec
pop
mov
jp
ret
arpl
lret
outsl
xor
mov
xchg
nop
or
push
test
sub
jnp
mov
xor
xor
dec
jo
mov
push
push
adc
jne,pn
loopne
cmc
rcrb
gs
pop
outsl
int
mov
cmc
xchg
in
jecxz
inc
notl
pop
pop
add
xor
dec
mov
add
cmp
sub
jecxz
add
mov
push
outsl
cmpsl
sub
lret
out
stos
mov
rorb
and
mov
out
scas
leave
pop
pop
aam
test
sbb
lds
add
push
scas
imul
les
jo
xchg
out
daa
add
lahf
rorb
int
mov
jmp
xchg
decb
rclb
fs
mov
in
cmp
push
xor
addr16
jnp
mov
enter
push
add
and
add
mov
lds
pop
pusha
add
cwtl
jle
cmpsl
or
cmp
xor
add
lea
adc
shll
push
pop
xor
hlt
lods
insb
aaa
push
pushf
imul
fstpt
mov
sub
out
outsb
fistl
stos
or
movsl
outsl
pop
rolb
nop
ljmp
cwtl
int3
cmpsl
jle
cmp
pop
popf
jns
test
into
das
loop
jo
xchg
orb
sub
jae
add
add
xor
pop
xorb
fs
push
jae
icebp
stos
pop
in
mov
push
mov
dec
fcompl
cmpsl
js
sbb
cs
xchg
lods
dec
push
sub
jno
dec
and
out
int3
hlt
lret
inc
push
lock
jecxz
mov
arpl
iret
or
adc
dec
das
mov
inc
mov
inc
pop
and
mov
inc
outsl
out
dec
fdivr
push
mov
aas
mov
cmp
js
int
mov
jno
ds
shlb
les
add
int3
insl
xchg
lret
xlat
pop
int
xchg
inc
mov
xor
lock
cmpsl
shlb
cltd
shlb
dec
cmp
mov
inc
inc
in
pop
ss
push
call
cmpsl
xor
jp
mov
cli
decb
popf
jle
cmpsl
inc
cmp
or
jne
lods
mov
push
push
sub
and
xor
iret
call
es
dec
adc
mov
icebp
and
mov
push
push
sbb
inc
mov
enter
daa
gs
jge
hlt
dec
and
jp
pop
je
xchg
or
mov
add
and
xlat
and
add
inc
loop
jno
sub
jb
mov
out
leave
repnz
sbb
inc
sti
and
arpl
and
pushf
inc
jmp
aaa
and
xchg
data16
fistpl
sub
inc
add
lds
divb
ljmp
cmp
bound
daa
pop
stos
inc
inc
mov
and
push
jbe
dec
lret
or
mov
sbb
jbe
and
pop
jecxz
or
pop
or
leave
es
or
sbb
repz
push
push
push
es
mov
lret
mov
inc
pop
mov
mov
das
andb
leave
inc
movb
ret
je
pop
roll
xorl
mov
or
test
imul
lock
cmp
test
or
jge
add
into
scas
dec
add
mov
jnp
xchg
loop
jge
jl
movb
loopne
mov
or
cmp
adc
mov
lcall
and
mov
adc
cmp
fisubrs
fists
jp
adc
mov
mov
pop
mov
lds
mov
adc
int
cmp
in
loopne
pop
stos
stos
mov
sub
xor
aaa
sub
int
scas
call
mov
subb
dec
or
inc
xchg
inc
divl
mov
jbe,pn
mov
mov
fst
jecxz
pop
push
inc
xchg
cld
lcall
test
clc
inc
insl
popa
aas
ret
push
lea
movsb
jns
and
mov
out
std
inc
sub
loopne
xor
dec
cmp
push
xor
lret
xchg
push
into
inc
cmp
mov
xor
cmpsl
pushf
sbb
fmulp
push
bound
mov
add
aaa
sbb
xor
sub
sub
mov
pusha
pop
mov
test
dec
shlb
mov
or
in
jmp
out
push
shrb
and
or
aaa
sub
xor
lcall
and
repz
mov
jb
test
imul
fistpl
popf
xchg
jo
sub
shrl
jecxz
sub
jo
jmp
mov
add
sub
sbb
or
mov
sbb
rclb
mov
shll
mov
test
lret
xchg
inc
jge
sbb
rclb
xor
mov
pushf
adc
es
push
je
fwait
pop
jl
test
inc
add
lods
daa
pusha
adcb
cmpl
push
push
add
shll
add
sahf
stc
xchg
leave
aad
out
sub
push
xor
jge
jg
pop
ret
fwait
out
shll
dec
lret
inc
jmp
mov
pop
xor
inc
ljmp
add
dec
fdivrl
push
ljmp
mov
push
shll
mov
call
loopne
jno
mov
scas
adc
out
sub
pop
adc
add
cltd
dec
lods
pushf
pop
out
shll
sbb
mov
mov
and
sbb
sub
adc
add
cmpsl
popf
push
fwait
sti
out
jp
push
mov
or
adc
mov
pop
stos
addb
mov
add
cltd
aad
movl
out
sti
or
or
call
xlat
cmp
std
roll
mov
mov
cs
mov
cmp
cltd
xchg
jne
push
adc
jp
inc
add
addb
xor
dec
push
aam
and
inc
pop
insl
dec
mov
sarl
sub
adc
lea
stos
movsb
push
and
push
jmp
stc
mov
addb
sub
icebp
xor
and
adc
push
frstor
push
pop
out
shl
mov
test
push
cltd
pop
fwait
add
adc
dec
sbb
js
or
xchg
loopne
add
or
sti
add
xor
sahf
sub
or
repz
sti
fiadds
mov
call
mov
lsl
cmp
xchg
jae
fwait
inc
lods
out
and
mov
das
sbb
mov
lods
fdivrs
fnstsw
jecxz
push
adc
jne
outsb
sbb
mov
mulb
rorb
pop
add
fiaddl
bound
ljmp
js
repnz
fdivrs
push
jge,pt
movsww
idivl
dec
jb
or
cmp
pop
aad
mov
or
addr16
jle
cmpsl
sub
add
and
add
mov
daa
mov
aad
outsl
lahf
sub
sbb
inc
cmpsb
cmpsl
push
je
mov
out
nop
dec
dec
das
mov
sbb
mov
or
mov
mov
xchg
mov
add
das
daa
push
out
pop
sub
add
jmp
imul
xor
xchg
ja
js
rcrb
int3
lock
dec
push
gs
mov
out
scas
daa
adc
fimull
push
xor
push
or
ror
rcrb
popa
jmp
push
dec
and
fidivrl
dec
jb
jns
into
push
js
bound
shll
push
test
push
xchg
cli
mov
js
xchg
mov
inc
imul
jle
sbb
push
andb
push
sbb
dec
pop
jbe
out
fwait
adc
sub
imul
aaa
xor
inc
jmp
outsl
loopne
dec
push
rcrl
lahf
sbb
mov
xchg
push
cltd
xor
jp
repnz
mov
dec
pop
test
mov
stos
je
inc
and
dec
mov
ror
call
ja
sarb
aas
cmp
sub
mov
cmp
test
cli
daa
mov
nop
daa
jp
mov
mov
or
out
bound
pop
test
mov
fisttps
mov
lcall
sti
cmp
jge
popf
add
push
fwait
loope
int3
nop
test
subl
inc
xor
outsl
aam
dec
ret
jl
mov
loop
dec
stc
rol
or
mov
sub
jl
or
dec
cld
aad
and
push
jns
iret
xlat
enter
mov
aam
inc
shlb
out
in
pop
jbe
cli
xchg
mov
sbb
push
cmp
mov
push
dec
lcall
aam
pushf
jno
xor
aas
or
cs
mov
loopne
nop
and
fadd
movsb
aad
testb
mov
fstpt
xor
dec
insl
jle
adc
test
xor
lea
inc
insl
jp
mov
adcb
mov
repnz
fsts
stos
popa
xchg
mov
push
jae
jecxz
pop
aam
je
sbbb
mov
push
push
sub
sub
arpl
sarb
push
sub
xor
push
fs
cs
out
fwait
push
out
stos
xor
loopne
jb
xchg
popa
data16
arpl
jns
adc
ds
ss
movsb
cmp
sbb
shl
adc
jns
inc
mov
stos
and
push
rorb
outsb
jns
enter
notl
out
movsb
lock
dec
add
fisubrl
or
in
push
rorl
in
call
sti
in
lea
pop
stos
sbb
and
addr16
sbb
add
rorl
das
xchg
loopne
das
int
icebp
sbb
sarb
pop
rcrb
dec
pushf
adc
aam
fwait
mov
jo
decl
add
push
fsubrl
into
std
ret
in
cltd
push
fdiv
pop
or
outsb
je
lea
pusha
mov
in
adc
add
loope
mov
mov
cmpsb
xlat
xchg
sub
jno
pop
loopne
andl
loop
clc
iret
out
clc
sbb
mov
jle
jbe
mov
cmp
adcb
loope
mov
pop
je
ds
mov
cs
insb
push
fnsave
addr16
add
cs
pop
and
sub
sub
and
push
push
lcall
pop
and
cmp
arpl
add
in
mov
jnp
in
and
xor
dec
pop
mov
mov
jmp
dec
in
lods
aaa
lret
push
addl
sub
mov
add
xlat
clc
aaa
mov
mov
in
mov
dec
mov
jp
sarl
jno
imul
in
fimuls
xchg
ror
and
call
adc
jg
setbe
push
out
gs
xor
popf
loop
sbb
insl
dec
and
cmp
push
pop
lret
mov
inc
jecxz
sbb
or
faddl
sub
mov
dec
sbb
das
sti
or
mov
js
pop
xchg
insb
push
xor
out
scas
cld
pop
mov
jo
lds
sub
cmpsb
bound
scas
cmp
pop
add
mov
rcrl
insb
dec
test
xchg
sbb
test
xchg
inc
sub
stos
dec
cmpsb
shr
mov
addr16
pop
or
imul
ja
dec
push
jp
into
dec
push
or
repnz
aas
in
insl
xor
aaa
sub
mov
or
sti
sar
fs
aas
mov
sub
icebp
gs
or
sub
pop
dec
test
jle
lcall
mov
repz
mov
mov
xchg
and
lret
mov
inc
fnstsw
xchg
call
lahf
push
mov
hlt
fisubl
out
cmp
cmp
icebp
negb
dec
dec
xor
mov
pop
cmp
inc
in
mov
shl
push
mov
lods
mov
dec
cmc
jg
adc
jae,pt
rcrl
sub
mov
xchg
scas
push
xchg
stos
repnz
vmovshdup
inc
cli
fucomi
add
loope
push
pop
vmread
pop
dec
adc
rorb
pushf
mov
dec
scas
xchg
roll
cltd
lods
test
pushf
push
ja
loopne
ret
cmpsl
in
mov
push
out
xchg
cmpsl
inc
pop
int3
out
rclb
in
jo
lret
cmp
ficompl
loope
or
cltd
pop
adc
imulb
leave
mov
or
adc
cwtl
xlat
es
xchg
jecxz
insb
shlb
cmp
ds
lock
push
inc
sbb
pop
ljmp
repz
xchg
pop
xor
clts
mov
iret
bound
jmp
out
int
and
mov
insb
imul
call
cltd
pop
sbb
roll
test
int
adc
dec
ror
push
daa
bound
or
pop
stc
mov
stos
lods
mov
scas
or
jns
adc
dec
rclb
jns
mov
es
xor
sarb
cmp
lret
lahf
pop
repz
fistps
in
xchg
iret
les
lret
and
pop
pop
jo
pop
enter
out
sbb
jb
sub
dec
pop
daa
stos
jle
scas
xor
aad
fnstsw
aam
addr16
hlt
mov
jl
xchg
push
add
jne
pusha
xor
and
test
dec
add
sbb
xchg
fwait
push
outsb
mov
or
xor
movsl
lret
xor
scas
sbb
movsb
adc
movsb
stos
std
cmp
ret
xchg
shlb
cmp
and
push
xlat
stos
add
xor
jg
invd
inc
add
xor
mov
pushf
jmp
por
push
lods
jmp
mov
push
mov
ds
xchg
test
xchg
rcll
pop
cmpsb
out
aas
jle
jno
cmpsb
jo
sarb
arpl
mov
jl
inc
jno
outsb
xchg
mov
dec
add
int3
cltd
in
push
lods
andl
xchg
ret
mov
cmp
scas
jb
js
jno
ret
pushf
cmp
movsb
adc
pop
and
outsb
xchg
rol
push
push
mov
mov
lea
into
add
sbb
push
or
clc
out
test
mov
cltd
and
mov
mov
in
inc
adc
add
dec
imul
sub
mov
repz
lds
pop
and
ja
push
push
mov
rol
popf
mov
inc
and
testl
enter
rcrb
jmp
cs
das
push
adc
pushf
mov
pop
sahf
outsb
aad
dec
leave
cli
imul
insl
and
repz
cs
repz
jmp
push
aad
outsl
xor
push
and
rcrl
xchg
xchg
or
jmp
and
out
dec
sub
mov
test
jb
jae
jo
jne
mov
xchg
inc
and
and
pop
popf
ja
arpl
mov
adc
sub
mov
sub
out
fsubs
and
push
pop
stos
jae
shll
int
push
je
mov
mov
push
add
lahf
dec
xchg
cmp
xchg
jp
fnstenv
jge
xchg
lahf
fldenv
mov
iret
dec
inc
je
jno
fcmovu
test
shlb
dec
les
into
jb
pushf
cmp
enter
daa
cmp
sub
add
cmp
pushf
lds
das
fwait
icebp
loope
popf
sbb
aad
sti
js
cmp
jp
dec
mov
and
mov
incl
push
add
das
sbb
arpl
xchg
mov
pop
ret
xchg
or
mov
pop
out
mov
outsb
aad
adc
jno
ja
jbe
out
arpl
add
ss
aas
mov
add
mov
lods
push
cmp
mov
mov
stos
test
dec
scas
adc
popa
push
jl
jbe
push
outsb
mov
sub
outsl
leave
pop
dec
sahf
mov
xlat
or
mov
ja
repz
scas
jecxz
jno
pop
and
jp
push
les
dec
pop
xlat
lock
test
mov
fldenv
jne
mov
xor
fsts
leave
out
or
fwait
je
mov
arpl
pop
int3
push
mov
call
repz
push
add
dec
inc
data16
push
dec
push
addr16
push
adc
outsl
or
push
mov
mov
hlt
sub
popf
nop
xchg
xchg
adc
test
pop
roll
cmp
mull
lret
hlt
popa
mov
enter
add
lahf
push
std
pop
mov
pop
pop
in
dec
inc
nop
adc
dec
rclb
fwait
test
mov
movsbl
test
fistpll
sbb
test
imul
and
or
or
jns
push
ficoml
nop
clc
push
daa
mov
cmp
mov
ret
push
lret
dec
jle
sub
pop
pushf
pop
jo
repz
es
and
cwtl
pusha
xchg
sub
pop
negl
jne
push
inc
inc
sbb
test
push
xchg
lret
lock
pop
cmp
jbe
xor
cld
dec
xchg
out
pop
xchg
sbb
cmpsl
cmpsb
push
lods
cli
lahf
fisubs
add
sti
test
rcl
ss
push
dec
cmp
imul
add
push
fstpl
cmp
out
mov
ret
jp
std
leave
lcall
fistpl
decl
fs
lods
xor
repnz
adcl
scas
das
sub
push
jne
adc
aad
jns
or
jp
and
pop
cwtl
pusha
xchg
sbb
sete
sub
mov
cmp
sbb
fnstcw
or
inc
jno
faddl
lahf
mov
xchg
sbb
and
xor
inc
clc
push
divl
jb
adc
pop
cmp
mov
arpl
rorb
or
bound
sub
pushf
dec
or
push
jae
cltd
movsb
cmp
sti
out
push
stc
push
xchg
lcall
xor
out
popa
mov
sub
lock
cmp
pop
in
mov
push
xor
mov
and
fsubr
roll
push
xorb
aad
cmp
add
in
movsb
adc
in
mov
cmp
jmp
sti
cmp
lods
imul
xor
mov
adc
lods
xchg
cmp
movsb
jb
and
sub
mov
cmp
inc
arpl
mov
sub
push
lea
shr
int
xchg
loope
xchg
test
push
je
in
cmpsb
pop
cwtl
sti
push
aam
add
lahf
orl
mov
scas
loope
sti
sub
cltd
cltd
aaa
fisubl
xorl
daa
lret
pop
mov
jnp
scas
mov
pop
push
call
test
bound
icebp
imul
add
gs
mov
xchg
ss
stos
lods
and
fisttpl
fldl
pop
lods
cmp
xchg
outsl
inc
jle
xchg
cwtl
bound
jmp
icebp
jle
sub
pop
jp
sub
lods
pop
sahf
mov
cmpsb
les
sbb
mov
fsubrp
jne
mov
mov
jae
insb
add
mov
xchg
cmp
adc
xor
in
sub
fs
cs
js
insb
mov
xlat
push
jbe
aas
pop
lahf
or
jecxz
xor
iret
mov
sub
mulb
sub
xchg
call
fsubrs
inc
fcoms
xor
or
popf
das
xlat
popf
test
aad
mov
gs
test
mov
mov
test
inc
in
xchg
push
imul
nop
dec
or
dec
repnz
mov
xchg
aam
push
jae
xchg
in
mov
push
subl
and
rorb
iret
insl
ror
ds
mov
fsubl
cli
outsb
and
mov
pop
mov
adc
xchg
mov
jmp
mov
mov
insb
cmp
pop
fistpl
adc
mov
ret
or
lds
int
in
jmp
dec
and
mov
stos
outsl
shrl
gs
cld
daa
mov
test
jno
cmp
ret
fcomps
and
xor
leave
ret
scas
in
pop
sbb
jp
in
clc
cmp
lret
loopne
into
add
add
pusha
icebp
push
frstor
cmp
bound
dec
mov
adc
movsb
aam
push
ss
push
xor
pop
stos
mov
out
std
mov
in
adc
loop
out
orl
and
push
push
mov
call
mov
and
xor
fstp
arpl
inc
fwait
sub
in
faddl
lds
sbb
mov
shl
xor
js
add
lds
aas
dec
pop
jne
push
cmp
arpl
lods
jge
mov
mov
adc
imul
repnz
daa
leave
bound
mov
xchg
movsb
mov
adc
insl
dec
sar
fiaddl
in
jbe
leave
dec
in
scas
xchg
jp
add
ds
int3
and
xor
pop
xchg
in
hlt
cmovno
fildll
dec
fnclex
push
outsl
fisubrs
dec
js
dec
xor
sbb
popf
arpl
mov
push
andl
btc
adc
jmp
sub
lds
jge
pop
add
mov
mov
int3
add
dec
mov
xor
mulb
xchg
nop
xchg
mov
adc
push
push
xor
push
mov
mov
test
stc
mov
jns
pop
insl
pop
pop
mov
jae
push
out
mov
add
frstor
int3
add
in
jae
mov
insl
xchg
cs
imul
clc
lds
ret
jmp
mov
test
add
cld
std
cwtl
ret
xor
mov
xchg
mov
mov
jnp
and
rcll
jmp
into
clc
dec
jne
inc
aas
adc
inc
mov
jo
pop
dec
dec
insb
adc
push
imul
jmp
add
dec
pop
sub
lret
push
mov
lods
sbb
out
mov
ss
arpl
iret
sbb
dec
fistps
imul
ljmp
and
into
test
out
inc
cmc
js
jno
inc
loopne
xchg
sub
mov
dec
out
out
jae
addr16
or
pop
out
scas
insb
pop
pop
test
js
push
enter
sub
sbb
out
repz
xor
pop
pop
mov
into
adc
or
lds
mov
flds
or
mov
push
popa
pop
or
sbbb
jnp
xchg
and
out
push
xchg
dec
sahf
pusha
xor
or
inc
je
pop
xchg
lods
cmc
dec
pop
sahf
or
adc
out
pop
inc
cmp
dec
pusha
pop
push
and
dec
pop
lods
inc
mov
adc
push
int
add
cmp
out
ja
loopne
insl
inc
leave
shrb
aas
push
ds
xchg
out
xchg
xor
sub
push
out
lret
jl
pusha
shl
inc
xchg
movsl
mov
nopl
cltd
and
clc
mov
enter
mull
pop
sub
test
dec
mov
xchg
lret
push
les
inc
dec
in
sub
stc
loope
loope
loopne
fcomps
inc
lods
jge
xor
jnp
add
xchg
mov
sahf
sub
xor
jl
cltd
jb
shll
mov
movsl
fldt
int
mov
mov
or
adc
movsl
mov
pop
push
je
arpl
jg
pop
mov
fs
pop
imul
dec
inc
das
ja
xchg
sub
repnz
test
jmp
cmp
dec
int3
addr16
mov
hlt
clc
xchg
mov
nop
popa
lods
pop
lcall
loop
add
cmc
fimuls
ljmp
sub
scas
add
mov
enter
icebp
movsl
push
pusha
mov
pushf
pop
addr16
xchg
jg
movsb
enter
fstpt
inc
or
jle
jbe
inc
xor
cmp
bound
mov
outsl
xchg
sbb
dec
sbb
movsl
pop
push
sub
cs
push
mov
leave
lahf
push
pop
sbb
xor
mov
rcll
mov
call
push
jle
loope
mov
movsl
orb
ret
push
or
mov
inc
and
push
mov
pushf
adc
adc
push
stos
mov
xchg
xchg
popa
mov
mov
inc
or
jne
loopne
int3
mov
ljmp
xchg
xchg
call
jnp
sahf
adc
aas
les
xchg
sbb
inc
mov
popf
insl
outsl
dec
loop
rolb
mov
jmp
and
outsb
lods
jo
lret
push
push
push
loope
xchg
outsb
pop
insl
nop
cmpsb
out
stos
aad
jg
xor
pop
jmp
jge
mov
pop
push
xchg
into
fwait
pop
fistpll
fisubrs
nop
push
daa
or
ret
ss
push
and
imul
pop
cmp
and
jb
mov
push
pop
sahf
sub
mov
mov
cmc
mov
lods
pusha
cmp
and
xchg
shlb
add
punpckhdq
mov
mov
out
arpl
sub
jg
sub
pop
repz
fidivl
sahf
cmp
mov
dec
mov
or
add
in
cmp
dec
daa
repnz
loop
scas
sarl
movsb
popf
xchg
fucomp
cmpsb
out
sbbb
cmp
sub
mov
in
loope
or
pop
insl
test
jns
push
mov
test
xor
bound
mov
cs
xchg
inc
imul
loope
pop
inc
lahf
scas
shlb
add
outsb
jbe
fildll
enter
ja
xchg
cmp
dec
jge
sbbl
inc
aad
xor
jle
pop
cld
aas
inc
cmp
or
dec
lods
mov
add
rcrb
pop
int
daa
xchg
inc
enter
jle
jg
push
call
mov
inc
sbb
adc
ss
stos
ret
push
fcomps
mov
fucomip
add
cli
scas
cmp
mov
fs
in
inc
push
into
sub
ds
popa
and
inc
mov
fadd
lock
out
mov
into
out
movsl
or
cmp
mov
cmp
mul
lock
lea
mov
ret
cli
cmpsb
scas
xchg
dec
mov
out
xor
xor
movsl
fisubrs
mov
ret
inc
push
xchg
outsb
movsl
fyl2xp1
int3
faddl
push
shrl
jb
test
in
out
cld
mov
or
lret
test
or
les
and
dec
or
xchg
rorl
push
jnp
daa
je
fcomi
pop
xchg
lods
add
sbb
out
mov
popf
cmp
loopne
orb
cmp
popf
icebp
ljmp
mov
scas
mov
xchg
cmpsl
mov
out
mov
fsubs
dec
orl
pop
sub
mov
dec
sahf
cmp
loopne
push
add
mov
out
cmp
adc
push
add
sub
out
hlt
push
in
mov
inc
and
adc
adc
push
call
sbb
dec
push
mov
sahf
arpl
fidivl
or
rorl
in
dec
int
xrelease
or
fsts
lods
imul
in
inc
jmp
dec
mov
cmpsl
aad
out
dec
addr16
mov
ss
or
outsb
dec
pop
loop
and
into
push
pop
jno
aaa
pushf
outsb
xchg
inc
xchg
or
negb
lret
sub
jne
mov
or
adc
jae
inc
addb
ret
cltd
ja
add
out
sub
sbb
fwait
sub
insb
jns
sbb
add
adc
cltd
xor
xchg
outsl
lock
xchg
repz
ret
std
je
bound
insl
or
aas
jg
or
push
je
sbb
or
jnp
push
subb
repz
outsl
mov
dec
daa
sub
leave
push
call
mov
fwait
push
push
cld
in
in
in
test
movsb
cwtl
sub
add
mov
pop
aas
mov
or
push
test
pop
add
push
push
orl
add
pop
pop
call
ret
xchg
sub
dec
enter
cld
ret
push
mov
xor
dec
jne
mov
add
sbb
dec
jl
mov
pusha
fildll
test
cld
pop
inc
ja
jb
loopne
and
sub
push
and
dec
mov
jno
pop
cmp
ret
jae
xchg
leave
test
add
cmp
cwtl
pop
push
cmp
ret
lcall
adc
fidivrs
ficomps
daa
sbb
loopne
int3
pop
daa
aaa
xchg
sub
cmp
inc
inc
push
lcall
mov
mov
int
fdivrl
dec
inc
add
xchg
inc
out
push
cmpsb
ljmp
push
pop
das
inc
clc
mov
pop
inc
out
jle
in
lea
lcall
dec
outsl
and
cwtl
cmp
aaa
repnz
idivl
mov
mov
out
sub
pusha
lods
pop
fcomps
into
xor
jle
ds
xor
inc
adcb
sub
lret
es
lods
clc
outsl
mov
push
adc
adc
adc
adc
mov
ret
cmpsb
rorl
push
cmp
xchg
cwtl
inc
scas
ss
xchg
loopne
loop
mov
and
jge
imul
adcb
ds
jb
cs
push
push
sbb
push
cmp
jbe
loopne
inc
aas
jb
frstor
jae
mov
push
into
sbb
ret
dec
jmp
adc
push
mov
pusha
inc
push
imul
inc
or
pop
rcll
outsb
repz
lea
jecxz
test
mov
mov
mov
mov
pop
lret
jmp
loop
rorl
mov
push
jge
addl
xor
shll
sub
push
jnp
mov
sti
dec
shr
pop
lods
in
dec
fnstenv
dec
loop
add
add
sbb
xor
jns
scas
lods
mov
xor
dec
xchg
aad
aad
xor
adc
pop
sub
push
xor
shlb
fs
or
rol
dec
pop
gs
jmp
cld
xor
pop
push
sbb
movsb
mov
stos
xor
das
and
push
jmp
ret
in
sbb
push
fdivrs
pusha
movsb
xchg
lahf
mov
mov
or
dec
push
addr16
aad
push
lea
jo
jp
ss
lcall
shlb
mov
daa
lea
inc
lods
sub
loope
aad
and
jmp
inc
nop
das
loopne
in
js
mov
out
mov
fdivrl
fdivr
jbe
mov
addl
repz
mov
push
shrb
xchg
lret
pop
arpl
xor
cmp
or
add
stos
adc
icebp
in
cmp
fadds
mov
call
lret
jne
xchg
sub
or
cs
bound
dec
jmp
jae
pop
xor
aas
outsl
fnstsw
outsl
ja
popa
sbb
inc
shl
in
pop
leave
test
ficompl
jo
out
dec
test
add
push
xchg
aaa
cld
mov
nop
aas
xchg
sbb
sbb
mov
cmp
mov
cmc
mov
mov
loope
jmp
adc
inc
mov
enter
test
xchg
pop
fnstcw
push
pop
daa
leave
adc
popf
repnz
loope
mov
jge
fs
insb
iret
sbb
xchg
aaa
sbb
dec
subb
and
addl
sub
adc
in
lods
push
and
cmp
mov
mov
in
mov
addl
and
jmp
xor
pop
pop
pop
fisubl
scas
insb
or
mov
push
divl
jne
mov
rclb
pop
sbb
mov
dec
and
aas
mov
mov
xchg
inc
orl
mov
in
mov
xor
sub
adc
les
cmc
std
pop
std
fst
mov
imul
daa
and
leave
xor
dec
mov
addb
shrb
dec
xlat
mov
cwtl
cmpsl
stos
sub
inc
gs
xchg
xor
jae
jae
sbb
stc
xchg
push
push
sub
arpl
mov
cmp
repnz
sahf
push
sbb
push
aad
dec
test
lds
mov
cmc
add
xor
nop
out
dec
dec
pop
popf
mov
sahf
cwtl
lahf
stos
mov
out
cmc
dec
inc
pop
and
pop
lea
xchg
in
imul
stos
dec
movsl
ljmp
push
adc
xor
lea
inc
aaa
stos
in
lods
sahf
and
inc
push
je
mov
rclb
sub
xlat
pop
or
jbe
in
xchg
aaa
pop
pop
out
jno
out
cmp
testb
mov
addr16
aaa
in
rolw
mov
rclb
lds
scas
repz
cmp
and
push
add
ficoms
outsb
decb
outsb
repnz
mov
mov
pop
rol
lret
es
sub
fwait
dec
mov
bound
mov
shr
pop
sbb
popf
test
xor
xchg
outsl
xchg
inc
repnz
fdivrl
mov
sub
xchg
out
scas
mov
in
sub
xor
sbb
mov
cmp
sbb
and
test
aaa
jbe
sub
ss
pop
pop
jbe
or
and
push
in
mov
xchg
hlt
pop
rcrl
push
cmp
leave
out
adc
cmpsl
sahf
cmpsl
pop
ja
jns
inc
inc
idivl
pop
add
add
dec
in
cmp
mov
insl
xlat
mov
cli
fs
jne,pn
sbb
cmp
sbb
das
or
aas
xor
int3
add
cmp
inc
mov
cmp
push
std
int
adc
jge
mov
dec
or
das
push
mov
xor
xchg
leave
cli
push
fmuls
mov
flds
in
iret
pop
das
lock
icebp
jne
push
fmuls
sbb
mov
mov
xor
jae
jl
cmpsb
pop
adc
les
fwait
out
cmp
xlat
cmp
cmp
mov
mov
jge
adc
repz
xchg
xchg
dec
or
enter
int
ds
jmp
mov
mov
xor
or
pop
cmc
lods
inc
lea
xor
mov
mov
aas
ret
pop
lea
cwtl
sub
cmp
sti
pop
xor
into
mov
rcr
cltd
in
or
imul
xorb
xor
xor
push
cmp
lods
mov
lods
mov
add
cmp
arpl
mov
bound
test
add
mov
bound
lea
gs
mov
mov
mov
stos
mov
lods
cmc
mov
mov
jne
pop
jne
test
gs
imul
loop
enter
xchg
call
sahf
add
or
mov
sti
inc
fsubrl
dec
xchg
mov
cltd
and
pop
mov
ja
mov
and
cmc
push
pop
and
mov
or
inc
xchg
push
mov
es
dec
shll
push
xlat
inc
arpl
lds
fs
mov
jg
pop
lods
sahf
imul
mov
fs
jbe
adc
in
or
or
lods
in
mov
sbb
push
rol
out
shrb
jbe
sti
jl
addb
mov
pop
and
dec
mov
jae
push
out
mov
pop
cltd
aad
xchg
stc
mov
jns
sti
mov
push
cs
xchg
xchg
xchg
daa
pop
jge
test
test
sub
aas
or
adc
xchg
out
pop
fsub
int
push
inc
add
ja
mov
mov
adc
ret
lret
mov
dec
and
push
xchg
or
mov
adc
imul
mov
sarl
push
cmp
dec
ljmp
adc
xchg
outsl
loop
gs
push
mov
cmp
mov
in
sarb
and
ss
mov
push
xor
adcb
adc
xchg
insl
cmp
sti
out
lret
decb
xor
shlb
movsb
mov
inc
out
jnp
in
dec
stos
iret
scas
xchg
jmp
add
mov
scas
hlt
cmp
sub
inc
add
cs
aad
leave
rep
fsubrs
sbb
adc
cli
dec
mov
mov
mov
ficoms
cmp
test
into
xchg
jb
pop
mov
stos
je
fmull
test
daa
sbb
or
xchg
mov
dec
and
movsl
xlat
adc
aas
pushf
test
in
cmp
pushf
out
enter
cs
into
inc
jg
adc
arpl
jns
mov
popf
int3
pop
sub
das
push
push
add
xor
sbb
pop
adc
xor
cmpb
cmc
mov
aaa
jb
ss
jmp
arpl
lahf
mov
imull
iret
pop
add
sti
das
pop
ret
xchg
mov
arpl
out
scas
nop
inc
pop
push
loop
cmpb
adc
out
call
xchg
mov
add
sub
daa
mov
mov
mov
xchg
mov
lea
fwait
add
pop
xor
shll
push
inc
push
imul
mov
sbb
mov
sub
popf
data16
pop
mov
xchg
stos
jnp
roll
cmp
addr16
out
adc
mov
shrb
fildll
mov
mov
sbb
pop
sub
add
or
addl
gs
inc
push
push
sub
add
arpl
cwtl
or
push
pop
and
in
cmp
push
rclb
add
imul
gs
pop
outsb
loopne
mov
mov
jb
pop
sbb
mov
inc
in
stc
loope
fidivs
push
ja
pop
mov
cmpb
sbbl
test
dec
mov
mov
jle
jge
arpl
dec
and
popf
jp
sub
bnd
in
cld
test
inc
loopne
aam
imul
lcall
xor
test
in
xor
pop
test
jl
jne
arpl
mov
xchg
pop
or
jbe
mov
stos
adc
fcmovnbe
pushf
xchg
add
xchg
xor
aad
inc
xchg
fwait
in
jle
mov
inc
cmp
xor
xchg
adc
jmp
hlt
sbb
xlat
push
shll
sub
and
xor
into
push
sub
roll
sti
movl
les
int3
les
push
into
fisubrl
aad
pop
or
push
int3
dec
mov
dec
sahf
mov
xchg
pop
sbb
adc
repnz
push
push
dec
in
cmpsl
lret
mov
loope
mov
jb
pop
cli
adc
pop
push
or
mov
or
or
or
dec
push
or
inc
xlat
cmp
or
xchg
mov
mov
lods
jae
std
outsb
aas
aam
ds
ss
roll
loope
adc
and
cmpsb
lahf
mov
mov
filds
scas
popa
mov
mov
pop
loope
push
test
std
cwtl
ds
in
addr16
repnz
pop
ljmp
jmp
int
inc
repz
dec
movsb
jle
mov
inc
cli
stc
in
jno
cmp
mov
aad
xchg
push
sbb
or
add
clc
push
lea
cmp
mov
hlt
lahf
loopne
push
and
sub
jge
and
iret
push
call
sahf
cltd
and
out
adc
add
mov
or
lds
add
jecxz
add
lahf
ds
sub
jbe
mov
adc
mov
xchg
sub
hlt
jp
push
das
mov
decl
out
adc
data16
ficoms
and
dec
mov
cmp
or
dec
adc
sarb
lods
in
test
dec
push
sbb
xor
push
xor
or
xchg
sub
jmp
adc
sbb
jne
daa
add
das
mov
lods
adc
dec
xor
insl
pushf
xor
ss
ret
push
mov
outsl
lods
mov
iret
cltd
jns
inc
lods
mov
hlt
lods
xchg
mov
repnz
aad
push
arpl
lods
shrb
andb
jp
insl
mov
push
jns
or
cmp
inc
inc
in
sbb
mov
xor
push
add
daa
push
pop
adc
xor
aad
adc
cmc
into
mov
and
pop
fcompl
mov
aam
push
scas
jl
xchg
sub
shl
jno
sarb
shrb
test
jge
dec
or
mov
aam
in
adc
push
or
sub
andl
ljmp
enter
xor
clc
jns
and
aad
aas
rolb
adc
sti
into
and
lea
jne
sub
nop
xchg
jb
sub
push
int3
cmpsl
sbb
cmpsl
pop
stos
int
das
insb
mov
scas
pop
les
rcrl
cli
push
push
mov
popa
gs
adc
xor
and
push
mov
decb
push
dec
mov
cmp
insb
dec
inc
in
mov
and
pop
mov
pop
adc
mov
mov
out
pop
lock
out
push
movsb
loope
pop
mov
or
add
xor
nop
adc
dec
xchg
lret
xor
call
enter
pop
dec
mov
push
mov
pop
lcall
mov
jns
cli
pop
dec
loop
and
rcrb
fsubrs
push
pop
imul
fcompl
in
fisubs
clc
mov
sbb
fldpi
fstpl
ds
and
adc
cmp
divb
out
jl
test
jecxz
adc
out
inc
adc
rorl
sbb
in
popa
iret
jmp
cmc
mov
mov
mov
sub
in
daa
jno
xchg
dec
inc
inc
mov
jno
out
cmp
and
pushf
rol
loopne
add
pushf
push
xor
jno
xchg
or
test
cmc
data16
lods
xchg
shll
cmpsl
xlat
inc
xor
stos
mov
fsubrs
test
mov
adc
pushf
outsb
xor
sbb
sbb
xor
data16
ss
icebp
pop
xchg
xor
mov
or
jo
dec
aad
jl
fsubl
jno
ja
sbb
into
out
leave
pop
in
add
and
jno
aam
and
and
inc
insb
aam
lock
sbb
in
pop
loope
shrb
cs
mov
cmpsb
and
or
mov
nop
das
cwtl
les
clc
sbbl
cld
imulb
rorl
cmc
fisttpl
inc
das
pop
loopne
lcall
andb
jno
dec
mov
negb
lock
adc
shrl
das
insl
pusha
mov
nop
scas
into
pop
inc
daa
f2xm1
lcall
mov
test
lods
cmpsb
push
ret
popa
sub
sbb
cmp
movsb
push
in
aas
rcl
mov
jnp
xchg
jmp
rolb
mov
aas
repnz
mov
les
icebp
mov
cmp
or
fmull
js
rcll
pop
mov
aam
stos
arpl
sub
out
cli
enter
popa
fisttps
nop
lcall
pusha
cmp
add
and
mov
fsubrs
mov
push
shlb
stos
repz
test
sbbb
jmp
cld
pop
lcall
and
sbb
push
dec
push
push
lea
hlt
jle
and
filds
fidivrl
icebp
cltd
adc
ds
push
add
xor
xchg
lahf
dec
cmc
xor
movsb
shl
adc
mov
push
cld
repnz
cwtl
in
out
mov
cwtl
sub
mov
arpl
mov
push
stc
repz
cmpsl
int
xor
mov
pusha
push
mov
pop
add
cmp
out
mov
pop
fwait
mov
movsb
pop
jp
mov
mov
cmp
dec
dec
push
testb
cwtl
mov
add
sbb
ss
xchg
jle
sbb
adc
sub
jg
cs
aam
imul
inc
cmp
mov
jne
ljmp
pop
and
ja
aad
test
fstpl
ds
mov
pop
push
sbb
inc
mov
aaa
jge
mov
int3
dec
and
pop
mov
scas
ficompl
sti
cmpb
outsb
and
jg
pop
faddl
das
in
sub
add
lcall
cli
push
mov
pop
mov
stos
enter
mov
cmp
test
movsb
out
push
push
dec
lahf
leave
ret
fwait
cmp
pushf
leave
lret
shll
dec
dec
cmp
lcall
mov
div
pop
lahf
sub
or
inc
cmp
xchg
add
loop
push
adc
popa
pop
pop
imul
loop
scas
arpl
xor
jno
inc
shl
adc
shl
call
fnstsw
pop
std
cs
stos
xchg
insl
and
sub
pop
lea
data16
outsl
mov
push
mov
stos
into
dec
call
mov
push
pop
stc
dec
shll
mov
lahf
fs
addb
jg
insb
imulb
bound
mov
loop
sbbb
pusha
lret
cmp
sbb
loopne
fldenv
dec
into
inc
std
test
sti
mov
outsb
sti
popa
dec
adc
push
lcall
xchg
fs
fidivrl
lret
cli
arpl
push
mov
jp
xor
mov
dec
fisubs
sub
mov
jmp
xchg
xor
test
and
jp
and
push
fstpt
lret
fcomps
push
push
add
pop
add
test
mov
adc
push
jle
cwtl
cmp
stos
test
jne
orl
push
pop
or
mov
bound
push
mov
dec
aas
cmp
xor
clc
sbb
fadds
mov
dec
iret
in
pop
sbb
imul
out
xor
add
jge
push
dec
roll
xor
test
roll
or
lcall
arpl
dec
lods
mov
cmp
xorb
loop
mov
hlt
rcl
xchg
mov
orb
xlat
xlat
push
inc
sub
ja,pn
lcall
push
loop
cmp
pop
ljmp
sub
sti
fdivs
popa
and
mov
xor
ficompl
inc
push
pop
xchg
stos
fidivs
mov
jl
test
lods
xor
fwait
popf
jg
mov
or
xchg
test
mov
cmc
cmc
js
lret
imul
popf
cwtl
fidivrl
mov
loope
mov
sub
inc
dec
add
fiaddl
xchg
sarb
mov
cmpsb
or
sub
cs
cwtl
fisubrl
xchg
mov
xchg
dec
mov
ja
aam
xor
in
sub
jmp
cmp
je
imul
int3
mov
cmp
lods
aad
pop
pop
sbb
fstps
pusha
adc
pop
jp
jecxz
adc
sub
and
les
fcompl
lods
jmp
jns
out
test
adc
shrl
icebp
lret
ljmp
cltd
xor
shr
test
mov
xchg
sbb
add
xchg
adc
mov
jbe
sub
adc
pop
inc
dec
fwait
leave
dec
mov
enter
and
loopne
outsb
or
ja
popf
xchg
cmp
rclb
and
pop
bound
mov
repz
insl
sub
fisubrl
xchg
dec
inc
xchg
jne
cmpsl
dec
and
mov
aas
push
dec
add
jle
inc
xchg
call
jne
mov
push
and
mov
cmp
sbb
int
sbb
je
sub
sub
enter
xchg
mov
push
push
loope
loopne
in
lcall
sbb
dec
jge
lea
subb
out
sub
pop
or
push
pop
ss
mov
xchg
scas
mov
cmpsl
push
cwtl
es
lcall
out
inc
orl
jno
jns
dec
and
ljmp
test
sti
cmp
dec
push
fdivs
subl
add
movsb
rorb
inc
push
les
adc
sarb
cmp
stc
data16
inc
mov
div
dec
mov
pop
lock
fsub
mov
push
xor
mov
dec
enter
loopne
fstpl
push
lods
notl
pop
lds
sbb
jl
mov
jg
das
push
or
idiv
arpl
inc
inc
arpl
pop
test
dec
push
mov
fisubrl
out
mov
mov
test
movsl
xchg
jl
test
mov
ja
daa
mov
movsb
xchg
jo
out
movsb
xor
fcomp
mov
inc
cmp
mov
and
nop
jb
cwtl
subb
into
pop
imul
bound
fwait
push
clc
cmp
js
sarl
shrl
or
sbb
cmp
mov
xchg
popf
mov
ljmp
lcall
adc
jo
mov
lret
xor
cs
fidivrs
mov
push
jno
mov
enter
sti
js
das
pop
sar
aam
push
mov
jb
ret
ss
and
inc
aam
mov
jle
insl
add
mov
test
mov
aaa
das
dec
or
sub
or
xor
shll
sbbb
cwtl
lods
dec
cld
mov
sbb
scas
lds
mov
adcl
pop
pop
pop
idivb
imul
inc
dec
mov
repnz
pop
out
lods
ja
jne
decb
add
mov
mov
push
xlat
hlt
sbb
xchg
inc
into
test
imul
fbld
adc
int3
xor
inc
sbb
aad
fbld
pop
stc
sbbb
adcb
inc
std
test
push
in
movsl
pusha
push
subb
sub
jle
add
mov
mov
jg
dec
rol
aaa
mov
pop
faddl
dec
xor
adc
or
jecxz
pop
fbld
or
add
xlat
pop
jecxz
lock
sti
notl
fdivrs
push
pusha
stos
or
dec
dec
inc
xchg
xor
jg
push
ret
test
add
pop
scas
pop
cmpb
test
dec
push
inc
lods
notl
stc
inc
insb
adc
mov
inc
push
movsb
cmpsl
push
mov
mov
frstor
jno
jl
jb
outsl
movsl
push
into
bound
clc
mov
fimull
fs
call
and
stc
dec
dec
lret
cld
sbbl
insl
movsb
lcall
loop
mov
inc
ret
mov
fisubs
jg
mov
lods
or
leave
jb
ja
cmp
inc
mov
iret
inc
lds
jmp
scas
pusha
rorb
in
mov
std
fs
cmp
jmp
xor
imul
jle
adc
movsb
xor
cmpsl
jp
test
repz
insl
shll
push
cld
push
mov
js
mov
negb
out
in
jg
shll
insl
cli
repnz
jbe
or
ss
mov
mov
outsl
xchg
jo
enter
mov
cmp
dec
lret
and
fs
test
xchg
mov
mov
and
pushf
jmp
subl
fistps
js
inc
sbb
cmc
jno
jp
xlat
ret
lcall
subb
cltd
repz
xchg
mov
or
insl
mov
dec
and
aas
push
pop
lahf
paddusb
and
hlt
call
fdivs
sub
inc
dec
cld
push
enter
cmp
addb
or
mov
cmpsb
or
push
pop
daa
xchg
test
test
dec
insb
das
xlat
mov
push
cmpsl
xor
daa
cwtl
movsl
sub
sub
ret
dec
in
mov
rcr
jne
pop
xor
sarb
push
movsl
xor
sbb
nop
mov
or
xorl
testb
pop
mov
sbb
add
cmpsb
scas
imul
fwait
adc
sbb
xchg
jl
cs
jae
cmpsl
push
sahf
std
and
sbb
jl
aam
lock
dec
mov
sbb
movsl
mov
jnp
push
neg
inc
ficompl
jl
push
xchg
push
xchg
neg
pop
out
hlt
cmp
inc
mov
test
push
aaa
xor
mov
xlat
mov
xchg
pop
inc
es
mov
mov
xor
int
xchg
je
sub
inc
dec
lcall
dec
pop
sbb
fldl2t
call
repz
in
fdivrp
lock
adc
sbb
jp
int
sbb
in
aas
push
cmp
sbb
scas
enter
sbb
js
hlt
sub
lods
xlat
or
orb
stos
xchg
sub
and
cmp
into
repnz
movsl
lods
mov
and
pop
not
mov
int3
dec
push
test
xor
and
scas
lret
mov
dec
pusha
popa
daa
bound
lods
mov
pop
jmp
imulb
movsb
xchg
orl
pop
shll
cmp
int
push
push
cli
aam
sub
enter
stc
stc
mov
sub
cmp
aam
pop
std
sub
sbbb
and
nop
ds
shlb
mov
adc
pop
cmp
ret
xchg
in
ret
lock
fdivs
orl
mov
les
jmp
clc
in
or
fstps
pop
xor
xor
mov
mov
pop
cmp
jecxz
rcl
or
cmpsb
xor
pop
adc
lods
daa
inc
jmp
popf
inc
push
or
std
cmp
jle
pop
sub
repz
jmp
ds
shrb
addb
push
push
mulb
xchg
mov
push
cmc
das
iret
mov
add
inc
or
sbb
repz
mov
push
outsb
or
js
pop
xchg
test
adc
xor
mov
imull
sahf
scas
aad
push
sub
xor
push
sbb
out
aas
addb
push
xor
ret
mov
insl
mov
cmp
pop
sti
clc
aam
lcall
popa
lods
outsb
aaa
dec
xchg
mov
pop
or
rolb
jno
lret
jge
cmp
add
add
xchg
push
movsb
push
xchg
sbb
out
xorl
es
std
sbb
int
rcrb
cmp
mov
jle
mov
add
test
out
and
incb
mov
rorb
pusha
test
push
daa
mov
in
punpckhdq
mov
jmp
push
adc
add
and
fsubs
lret
push
popa
in
push
pop
cmpl
in
aaa
xor
inc
inc
mov
jo
dec
fisubrl
pop
cmpsb
push
mov
xor
hlt
call
xchg
push
out
fstpt
or
andl
mov
sbb
addr16
ret
xchg
xchg
xor
cmpsl
inc
xchg
xchg
sti
insb
xchg
xchg
push
xchg
mov
jno
ja
push
jmp
jmp
rorb
pop
xchg
out
mov
stos
and
and
xor
fs
sub
xchg
jmp
inc
lods
pushf
add
bnd
add
adc
add
hlt
or
dec
or
ret
mov
cwtl
test
sbb
pop
mov
loope
jmp
add
push
scas
xchg
nop
lea
adc
sbb
inc
cli
push
add
and
add
sbb
vsubpd
jle
jns
mov
adc
out
out
jns
push
mov
cmc
inc
lcall
or
and
jno
ja
cld
cs
cmp
mov
mov
outsb
and
cs
ja
aas
cmp
jmp
dec
jae
das
adc
cmp
xchg
arpl
mov
insl
ss
pop
pusha
addr16
mov
xchg
loopne
mov
and
sarl
push
jecxz
pop
fs
jp
ret
push
pop
arpl
test
or
andb
add
addb
mov
xchg
je
repz
rorl
or
push
insb
lods
ret
push
stc
aaa
inc
pop
push
add
icebp
mov
pop
jne
addr16
jo
mov
pop
add
mov
loopne
je
push
mov
jns
ss
shlb
cmp
cmp
pop
push
push
addr16
cmp
push
xchg
repnz
in
sub
dec
inc
sahf
sub
sub
frstor
sarl
test
push
bswap
xchg
js
iret
dec
pop
lret
fstl
sub
sub
mov
jl
stos
and
and
or
mov
mov
jge
sub
cmp
push
mov
movsl
sbb
jmp
imul
fwait
rolb
inc
insb
push
push
sub
inc
les
sbb
hlt
jo
sti
push
fcmovb
mov
sbb
sahf
xor
fldenv
sub
cltd
mov
inc
sub
sub
xchg
adc
enter
call
pop
sub
add
or
shll
rcll
sbb
and
mov
imul
mov
lret
dec
inc
test
xlat
les
mov
cmp
pop
fwait
scas
inc
xchg
push
popf
jl
lahf
jl
cmpsl
jns
test
outsb
test
xchg
push
lret
outsl
adc
repnz
fistpl
or
mov
lcall
xor
test
jmp
pop
sahf
xor
je
inc
jge
mov
cld
pop
pop
aad
movsb
daa
inc
pop
pop
add
pushf
mov
shlb
mov
xor
ret
mov
cltd
dec
sti
push
add
imul
or
insl
das
mov
xor
push
adc
fsubrl
scas
jle
xchg
or
fildl
mov
adcb
test
in
lret
xlat
ss
idivb
iret
push
jno
das
repnz
push
loope
das
popa
sbb
daa
stc
outsl
xchg
adc
sbb
adc
les
out
pop
jae
jbe
ret
lods
mulb
sbb
jmp
fnstsw
popf
test
nop
xor
aaa
jns
imul
pusha
sbb
add
xor
jp
sahf
jo
mov
jl
sbb
adc
adc
sbb
into
cmp
push
insl
ret
adc
sahf
addl
jo
je
stos
call
jmp
jecxz
lret
adc
mov
cmp
testl
pop
mov
cmp
sbb
lahf
lret
pop
stc
fiadds
dec
fnstcw
pop
jae
cmpsb
mov
pop
inc
popf
les
xchg
divl
cli
scas
into
sahf
pop
rclb
push
lds
cmpsl
cmp
in
cmp
mov
mov
add
repnz
mov
shlb
push
test
fdivrs
cld
xchg
jmp
aad
mov
or
xchg
mov
mov
dec
es
popa
jle
push
jno
lea
lcall
inc
mov
sbb
popf
mov
pop
fbld
ds
cmp
scas
or
mov
data16
jl
out
sub
cmpsb
xor
inc
add
cwtl
les
fisttpl
std
dec
mov
dec
push
and
xor
ljmp
mov
mov
ljmp
in
call
jmp
sub
add
pop
popl
movb
lock
mov
aad
aaa
stc
adc
mov
or
or
daa
loop
rcrb
push
into
fs
stc
in
cmp
bound
xchg
bound
stc
fdivrl
cmpsl
cmp
lock
inc
ret
jle
int3
stc
cmp
fwait
mov
cld
pop
pop
jmp
push
dec
jecxz
cmp
mov
into
test
cmp
pusha
xchg
pop
mov
jno
pop
pop
and
out
fisubl
rcrb
aad
lret
loopne
je
das
negb
xor
inc
repnz
stos
mov
test
ret
push
add
int3
mov
nop
in
fucom
fwait
xchg
lret
dec
cmpsl
popl
adc
fwait
push
test
mov
pushf
outsb
inc
or
or
cwtl
jns
inc
rcll
cs
addr16
mov
pop
js
aaa
cmp
push
mov
dec
adc
mov
mov
pushf
pop
xchg
xchg
movsl
clc
xchg
js
dec
adc
jl
jg
ljmp
pop
pop
inc
movsl
push
pop
leave
mov
imul
test
xchg
add
sub
int
ds
xchg
sub
or
data16
pushf
std
sbbl
fwait
jns
ret
imul
das
mov
aas
mov
mov
repz
fistpl
adc
sbb
std
pusha
pop
flds
stos
cmp
push
pop
push
dec
xchg
imul
mov
mov
pop
aad
out
xor
jmp
ret
push
lea
aad
cmp
jle
push
dec
cmp
mov
mov
xchg
lret
ds
or
insl
lock
cmc
das
aaa
pop
mov
imul
mov
push
insl
xchg
fsubl
mov
cmpsb
push
jno
xor
ss
inc
adc
adc
push
mov
sahf
inc
pusha
sbb
outsb
shrl
test
or
sbb
sbb
add
cmp
xorb
push
in
addl
sar
popa
jns
xchg
fcomps
repnz
cs
pusha
dec
lock
or
and
out
cmp
add
jl
cmpsb
leave
lock
sbb
out
or
shlb
jnp
jle
mov
stos
lret
mov
out
pop
push
mov
pop
jl
and
daa
add
or
or
jmp
adc
pop
mov
outsl
sbb
sub
shlb
stos
popl
mov
cmp
hlt
xchg
fs
dec
push
dec
lret
lods
xchg
fsts
in
cmc
lds
in
dec
add
mov
ret
dec
loope
cld
sub
test
out
push
jle
rorl
enter
cmp
mov
jg
cmpsb
mov
lock
xchg
test
shll
test
loopne
mov
add
in
push
loopne
shrb
push
cmp
xor
in
and
add
repz
xchg
sbb
xorb
pushl
jnp
adc
mov
dec
xchg
dec
adc
loope
cld
int
push
xchg
mov
dec
xor
xchg
daa
lea
jo
pop
aam
ja
clc
cli
sub
cwtl
add
cmpsb
lcall
test
arpl
outsl
out
shl
jb
icebp
daa
mov
pop
scas
sub
scas
ss
outsb
int
pusha
mov
adc
or
or
add
inc
jge
jge
iret
cs
pop
push
fcmove
sbb
in
es
mov
imul
jns
or
xor
and
data16
push
repnz
lret
adc
xor
jo
lds
jne
sub
inc
dec
mov
push
dec
sub
xchg
dec
xor
pop
dec
jp
out
int
xchg
xchg
cmp
popf
lds
lahf
cmc
psraw
pop
push
sbb
adcb
imul
call
dec
aaa
adc
sbb
rcll
xchg
lea
fs
adcb
shrb
lret
movsl
mov
int3
mov
xor
pop
inc
add
pop
dec
movsb
xor
jb
cmp
xor
mov
fs
ficomps
jecxz
xor
fwait
cmp
xchg
mov
or
xchg
ret
mov
jge
push
shrb
sbb
sub
nop
sbb
mov
pop
xchg
jg
cli
dec
and
lods
mov
mov
push
sbb
mulb
sub
ret
xor
adc
sub
fnstcw
push
je
or
ljmp
lods
mov
test
xor
outsb
setge
cmp
dec
loope
pop
pusha
adc
push
loopne
int3
add
push
cmpb
pop
iret
inc
ljmp
cli
ret
inc
pop
cli
inc
jge
clc
fstpt
lret
pop
fwait
lret
in
cwtl
loope
mov
inc
icebp
jle
lcall
inc
fcoms
pop
js
fisubs
mov
ret
and
pop
ret
mov
stos
and
add
iret
inc
data16
ret
pusha
mov
clc
test
pop
pop
jne
pop
rorl
pop
cwtl
iret
js
push
imul
into
xchg
lock
sub
lds
gs
cmp
int
mov
mov
lea
pop
stos
pushf
sub
mov
stc
mov
push
xor
stc
in
push
lea
fildl
and
scas
out
pop
jl
cs
enter
sub
fidivl
inc
aaa
pop
cwtl
cmpsb
mov
fmull
flds
mov
pop
movsl
jl
imul
mov
cmc
data16
sub
add
or
mov
jbe
cmp
pop
std
lds
jl
outsb
cwtl
jno
add
push
imul
sbb
xchg
ss
pop
cmp
daa
xor
cmp
dec
imul
adc
xchg
and
push
ret
test
mov
sub
sub
cwtl
test
pop
pusha
add
in
rclb
jg
notl
mov
sbb
movsl
stos
iret
sbb
iret
mov
mov
mov
mov
aad
sub
rclb
into
lcall
outsl
cmpsb
ret
sbb
xor
sbb
sti
dec
dec
fists
push
out
data16
je
fsubl
sub
fwait
loope
aam
sub
shl
xchg
aam
mov
or
rclb
sbb
test
push
and
cltd
fistpll
jno
ds
fidivrl
sbb
cmp
add
push
lret
in
sub
jno
inc
fidivrs
push
lods
cmp
cmp
and
call
cmp
ds
and
mov
and
mov
scas
lds
hlt
inc
inc
rcrl
cmp
xchg
cmpsb
push
sbb
popa
aas
xchg
lock
lcall
adc
dec
inc
xor
xchg
xor
mov
pop
stos
mov
and
cmp
rclb
xchg
dec
xchg
out
inc
or
shl
inc
hlt
sub
jl
nop
lods
mov
cmp
xchg
mov
sarb
xor
in
dec
mov
push
test
and
adc
fidivl
js
xchg
aam
xchg
call
fdivs
adc
fcmovnbe
dec
or
loopne
cmpsl
jo
xchg
adc
std
cmpsl
cmp
leave
clc
lods
gs
xor
ljmp
add
shlb
or
and
sti
sbb
sti
or
push
jecxz
in
jge
push
scas
int3
pop
sub
or
iret
test
jp
pop
cs
imul
adc
sti
mov
arpl
imul
lods
cmp
and
test
push
sahf
sti
repz
imul
push
jg
sbbl
aaa
cltd
test
cmp
pop
outsl
rcll
gs
adc
mov
dec
or
mov
cs
nop
fsts
sub
mov
sbb
rcl
shlb
xchg
dec
fstl
lret
sbb
test
or
mov
rorb
cmp
adc
add
rolb
jnp
js
nop
orl
lock
cs
mov
jo
stos
mov
filds
mov
inc
cmp
mov
arpl
sub
repnz
ljmp
xchg
mov
pop
cwtl
push
cs
push
scas
lret
xor
mov
ret
sub
scas
testl
add
xor
and
mov
arpl
xchg
inc
jo
mov
mov
sbb
aas
mov
mov
push
stos
fs
lcall
mov
xorl
mov
mov
push
ret
pop
dec
jmp
sub
jae
aam
pop
xchg
fs
stos
pop
mov
jle
xchg
cmp
fxch
cmp
xchg
cwtl
scas
sub
xchg
jne
xchg
fildll
insb
or
aad
cltd
mov
out
or
cmp
cmp
je
pushl
add
mov
js
push
outsl
dec
or
fs
adc
sub
arpl
dec
ss
js
mov
xor
pop
jo
push
out
mov
aaa
mov
das
mov
cmp
and
jmp
nop
rcrb
out
scas
fidivl
fs
divb
add
or
out
inc
mov
jns
ja
pop
fnstenv
mov
int
sub
xchg
push
jg
mov
gs
sub
popf
xchg
and
mov
iret
adc
pop
xchg
imul
fcoms
arpl
movsb
jbe
and
lahf
pop
fsts
loop
mov
mov
aad
leave
lds
dec
mov
cs
pop
lahf
mov
outsl
daa
ret
mov
ret
enter
dec
dec
sub
add
sub
and
sbb
sub
inc
xchg
and
adcb
push
xchg
adc
xchg
cwtl
sub
outsl
and
jecxz
stc
jne
pusha
dec
add
jg
daa
sub
dec
push
pop
mov
repz
push
je
sbb
add
data16
add
sbb
mov
loop
fnstenv
push
sbb
sub
jnp
inc
ret
adc
test
les
xchg
jle
mov
aas
jne
dec
xchg
je
push
testl
sub
mov
test
mov
mov
xor
out
inc
push
dec
fidivrl
and
adc
xchg
iret
popa
xchg
and
adc
push
loop
xor
or
outsb
adc
aad
test
hlt
push
daa
mov
lds
push
add
icebp
into
rolb
fldl
ret
xchg
in
push
add
les
mov
jns
ret
dec
lds
sbb
cmp
mov
stos
lcall
push
or
fstpl
sub
jnp
aas
dec
add
xchg
mov
cltd
push
mov
push
shr
test
mov
lcall
pop
xor
mov
sub
or
jmp
jl
ljmp
or
leave
or
or
cmp
inc
or
jp
pop
jb
add
loope
aam
mul
and
push
sahf
mov
xlat
mov
inc
jl
jne
and
popfw
repz
les
inc
sbb
pop
mov
lea
flds
cmpsb
shlb
sub
sub
shlb
mov
lcall
jge
inc
je
decl
jecxz
jle
push
in
dec
ficoms
movsl
notb
jmp
movsl
mov
pop
and
xchg
js
daa
in
mov
mov
inc
mov
popf
cmp
push
insl
test
xor
rdtsc
insb
xor
leave
sahf
into
add
jne
scas
cmp
adc
daa
js
std
xchg
scas
pop
xchg
lret
aaa
shr
mov
in
inc
out
dec
dec
dec
sbb
sub
fs
sub
pushf
dec
popf
push
jns
cltd
dec
adc
mov
stos
push
dec
add
inc
sub
jmp
sbb
fstpt
adc
add
jnp
movsb
mov
nop
push
push
insl
inc
add
or
iret
ja
leave
push
pop
xchg
negb
or
fld
xor
inc
lcall
lock
sbb
loopne
add
pushf
cvtpi2ps
push
xor
add
push
push
into
lea
cwtl
in
es
mov
popf
out
into
cwtl
outsl
dec
inc
mov
repnz
in
dec
lods
in
sti
ljmp
mov
outsb
inc
push
adc
jp
sarb
fnsave
fimull
ja
repz
adc
scas
pop
stos
lahf
jae
fsubl
cs
mov
jae
test
mov
inc
cmpsl
xchg
push
gs
ss
xlat
dec
or
adc
xor
lahf
daa
bound
inc
ret
arpl
mov
inc
roll
fsubr
shll
mov
or
xor
negl
jbe
inc
xchg
cmp
mov
icebp
push
sub
mov
fisttps
aad
mov
mov
aad
sti
and
inc
repnz
sub
push
imul
add
popf
inc
xchg
inc
pop
loope
leave
jns
pop
pushf
sti
adc
sbb
clc
sbb
sbb
loope
mov
and
pushf
insb
icebp
xchg
getsec
push
loope
cld
mov
push
pop
mov
mov
pop
adc
sbb
sub
xchg
scas
push
lret
test
or
jae
jg
js
call
or
adc
dec
jmp
xor
int
ljmp
int
dec
mov
mov
ret
fimull
xchg
ljmp
jmp
jns
pop
test
push
into
jl
xor
dec
out
lea
xchg
iret
int3
mov
inc
inc
jecxz
jns
loop
add
movsl
inc
pop
cltd
pop
or
lods
cld
jno
mov
sbb
xor
int3
cmp
stos
rorl
add
inc
stc
fnstcw
addr16
add
mov
lcall
js
lcall
dec
jbe
or
movsb
lods
mov
popf
es
push
or
daa
in
dec
push
lret
add
dec
cmp
sub
mov
push
imul
inc
sbb
loope
jae
cmp
rcrl
push
scas
cli
mov
sbb
frstor
out
ja
adc
pop
lock
inc
hlt
adc
push
sbb
aam
pusha
sbb
in
mov
jle
and
popa
cmp
dec
lea
jg
xchg
sub
arpl
outsb
stc
fsubs
lea
sbb
mov
mov
mov
sbbb
cmp
cmp
inc
or
ret
cmc
inc
iret
mov
push
popf
mov
push
pop
adc
loop
mov
xchg
xchg
mov
je
add
jb
pop
orb
iret
call
mov
jbe
sub
fcmove
mov
mov
cmp
test
mov
pop
dec
pop
out
outsb
mov
cmp
ds
inc
sbb
adc
jne
mov
pop
clc
addr16
ret
adc
jo
cltd
mov
lods
push
sbb
shl
arpl
inc
test
jmp
dec
cli
add
mov
push
in
dec
cmp
jno
push
aas
push
pop
test
push
push
mov
jbe
xor
test
jecxz
cmpsb
pop
decl
daa
lods
out
xchg
in
mov
in
and
push
sbb
iret
dec
and
iret
imul
inc
scas
emms
jg
lods
push
inc
in
jo
push
sub
or
sbb
stc
lea
outsl
ret
lcall
inc
xchg
add
test
call
popa
inc
cld
pop
dec
add
outsl
and
ret
mov
lret
andb
dec
cmp
push
cmpsl
clc
mov
imul
and
lret
sbb
out
cmp
test
pop
in
push
push
fwait
jns
sub
mov
and
imul
sub
loop
mov
mov
adc
adc
jecxz
add
sbb
jl
stos
test
push
xchg
cmpsb
lret
xchg
aaa
aam
test
mov
mov
in
sub
and
and
fisubl
dec
jbe
mov
lret
dec
pop
fdivs
ds
push
fsubl
jl
jo
xchg
lods
and
cmp
and
adc
lret
or
arpl
lods
mov
pop
mov
inc
mov
daa
insl
or
movsb
sub
mov
and
cmc
dec
pop
pop
or
and
sbb
shrl
aaa
xchg
es
cmp
cmp
xchg
or
lret
aas
js
xor
fsubl
shl
leave
aaa
jmp
mov
sbb
popa
movsl
cld
jmp
int3
in
xlat
scas
mov
pop
sbb
fs
pop
push
lds
jbe
mov
add
adc
sub
mov
lods
push
jb
mov
mov
cmp
ret
adc
xchg
jbe
loopne
pop
out
pop
pop
push
jle
inc
leave
lock
sbb
cmp
imul
into
mov
xchg
stos
lods
push
mov
outsl
sub
sbb
jl
or
dec
and
cwtl
sarb
jns
mov
ret
sbb
jae
std
mov
jecxz
cmpsl
dec
shll
ja
ret
mov
or
dec
or
movsl
pop
add
mov
mov
push
mov
out
inc
std
xchg
out
cmp
dec
aaa
test
lods
push
xor
xchg
sbb
gs
test
adc
xchg
es
shlb
jns
push
mov
jge
push
xor
ljmp
imul
aam
lea
jno
cld
mov
inc
inc
mov
inc
pop
sub
movsl
mov
ss
push
nop
adc
int3
push
push
dec
adc
ja
cmp
xor
push
jne
push
dec
jge
sub
fmuls
out
sbb
xor
adc
fldl
iret
loop
arpl
dec
push
jg
dec
pop
inc
lret
sub
jg
hlt
jg
aad
cmp
testl
sbb
rcll
mov
jae
popf
inc
loop
inc
push
push
cmp
clc
adc
fbld
xchg
mov
adcb
fistpl
out
dec
je
subl
out
jecxz
rcll
dec
scas
cmpsb
inc
cmc
or
pushf
mov
mov
mov
lret
xor
les
push
inc
jnp
cmpsl
scas
sbb
cld
lods
shll
jae
adc
loope
cld
jle
cmp
in
sub
idivb
or
fwait
les
mov
push
jle
sbb
outsb
push
shrl
push
and
add
cs
sbb
and
pop
and
mov
movsl
xor
inc
sub
inc
xchg
push
xor
mov
popa
mov
das
mov
pop
or
jo
fisubs
or
mov
decb
pop
loop
mov
test
jmp
xorl
xor
dec
in
pop
aas
push
popa
mov
sbb
jnp
add
repnz
jne
imul
ss
out
xchg
cmp
stc
stos
fidivs
jne
icebp
out
cld
mov
pop
imul
mov
mov
xchg
mov
mov
push
push
scas
jae
dec
or
xor
lock
leave
cmpsl
int
cli
cmovne
mov
xlat
jns
inc
mov
push
nop
mov
addb
incl
xor
push
push
jecxz
gs
sahf
cmp
icebp
je
add
adc
pusha
imul
call
pop
imulb
int3
lods
cmp
sub
mov
mov
aad
fcomip
sbb
stc
add
in
setp
dec
loope
push
loope
xchg
cmp
adc
mov
push
jns
cs
test
in
mov
cmpsl
xchg
or
fs
mov
and
jbe
pushf
pusha
sahf
pop
xor
inc
mov
repz
sub
sbb
inc
in
mov
add
cmp
daa
sti
test
cltd
jns
popf
adc
sub
add
incb
cmp
arpl
dec
xchg
cmp
cmp
int
hlt
sub
outsb
add
mov
cmp
sbb
cli
pushf
xchg
sbb
cwtl
aaa
xchg
xor
mov
push
jne
xchg
cmp
cmp
fnstsw
lret
inc
lock
add
add
aaa
mov
xor
dec
sub
and
pop
dec
pop
in
fmulp
icebp
dec
inc
jle
and
mov
sbb
adc
loop
fidivs
xor
mov
rol
stc
and
incb
jle
out
stos
call
xor
and
cwtl
xchg
push
iret
mov
arpl
sub
rclb
fcmovu
fists
sub
lahf
fstl
in
out
out
call
jecxz
aad
dec
sahf
fcomps
mov
xchg
dec
push
cmp
adc
push
cmpsl
outsl
out
pop
repz
andl
fisttpll
fbld
add
sbb
xor
xchg
scas
outsl
jmp
pop
and
lret
stc
and
sub
push
shl
gs
xor
cs
int3
int3
cmp
add
loopne
pop
scas
pop
test
sub
cmp
adc
dec
dec
sub
lret
jecxz
push
shrl
aas
loopne
addr16
roll
sub
mov
imul
add
imul
sub
mov
jmp
subb
sub
js
das
leave
cli
call
lret
movsb
mov
adc
shlb
sbb
cmp
push
mov
xor
inc
fcoms
add
dec
or
ja
insb
out
daa
cmp
loop
mov
into
cmp
pop
fisttpll
call
mov
test
adc
jo
cmc
sahf
adcl
mov
mov
and
ret
push
test
fldt
cli
insl
into
repz
inc
lret
xchg
mov
stos
shr
mov
mov
cli
adc
inc
sbb
jg
mov
xchg
es
mov
add
loop
popa
into
add
cmp
adc
sbb
xchg
adc
fidivrs
mov
imul
mov
lcall
roll
or
or
pop
popa
repz
ss
scas
adc
xchg
and
and
xchg
sbb
std
and
out
mov
cltd
cmp
dec
jge
enter
xor
loopne
pop
sub
sbb
pop
icebp
jo
cwtl
mov
or
mov
aaa
pop
call
inc
imul
sub
inc
jbe
pop
icebp
jno
lods
sub
jge
sti
test
fsubrs
pop
mov
push
pop
lret
call
mov
shl
and
cmp
icebp
sbb
fimull
repz
push
dec
out
data16
mov
add
jmp
ret
cmpsl
ficoml
popf
scas
xchg
cmp
inc
fidivl
enter
std
push
cltd
push
leave
std
add
sub
mov
rolb
sti
fstpl
or
lock
stc
sbb
push
shlb
adc
mov
cmc
or
jge
pop
iret
lds
pushf
hlt
sbb
fisubrl
addr16
shl
mov
sbb
jbe
sub
sahf
xchg
repz
aam
test
pop
inc
or
dec
nop
ja
insl
cmpsb
and
add
jg
loope
adc
test
inc
lret
cs
mov
inc
or
pop
lods
fmull
sub
popf
sub
sahf
ret
mov
in
arpl
adc
pusha
adc
xchg
das
push
push
pop
hlt
sbb
popf
out
test
jbe
fistpll
cmp
pushf
stc
mov
loop
test
mov
mov
dec
lret
test
xor
mov
or
push
mov
sbb
pop
jl
test
popf
rorb
addr16
stos
stos
inc
les
inc
inc
push
jo
pop
jne
lods
mov
cmp
scas
xor
jp
pop
sub
imul
or
daa
fsubl
pop
or
leave
dec
sub
jbe
divl
inc
xor
sarb
pop
inc
insb
xor
push
adc
and
cld
addr16
jl
add
in
rolb
inc
push
lock
divl
sti
aad
jmp
sti
adc
dec
sbb
rolb
push
popa
xor
shll
subb
into
xchg
xchg
ss
pop
xchg
or
fnclex
pop
xchg
cmpsb
xor
lcall
cmp
enter
fiadds
jo
inc
cltd
cmp
mov
sahf
scas
jg
shr
xchg
pusha
int3
sbb
pop
aas
pop
fwait
stc
sub
les
mov
cmp
mov
loop
nop
out
add
jl
pop
push
sub
and
lcall
arpl
repz
mov
mov
call
pop
arpl
sbb
rcll
shll
fucomp
mov
pop
daa
aad
inc
rcr
stc
push
xchg
xchg
int3
cmpsb
pop
jns
adc
sti
xchg
lds
ss
loop
ret
mov
das
mov
aaa
jb
jg
cld
int
xor
pushf
adc
dec
xchg
sub
lods
and
scas
and
lea
in
mov
pushf
dec
add
dec
jae
push
in
js
jecxz
and
cmpsl
jp
js
dec
mov
cli
push
insl
jmp
push
jge
adc
cmp
adc
and
or
push
sbbl
daa
dec
jl
sbb
sahf
jnp
dec
ss
and
mov
js
lock
fucomp
rcr
sub
ljmp
lret
pop
push
mov
test
test
fwait
aaa
inc
xor
in
adc
shll
jge
cmp
inc
call
sbb
test
add
lock
aam
into
and
fadds
icebp
in
sub
dec
fisubs
fnstcw
sbb
push
jno
in
and
push
cmp
dec
cmpsb
push
sahf
roll
push
mov
inc
dec
mov
test
mov
hlt
rol
sub
xchg
mov
pop
repnz
jge
pop
aas
in
push
stc
cli
lea
int3
fdiv
cmp
leave
ds
cmp
mov
inc
pop
repz
call
das
mov
jae
out
cmp
push
rorb
xor
pop
cmp
mov
cmp
xor
fs
rcll
movsl
sub
sbb
int
inc
jo
enter
jae
mov
repnz
mov
dec
cld
call
sub
mov
jbe
divb
or
mov
gs
xchg
js
in
xor
out
jae
pop
outsb
jns
sbb
mov
cli
imul
push
add
jmp
outsb
lcall
addr16
xor
push
insb
mov
aaa
mov
testb
jbe
and
lods
ret
mov
cmp
cld
inc
sub
hlt
loope
pop
sub
sahf
xchg
dec
xchg
out
test
mov
xor
icebp
mov
sbbl
fmul
pop
push
lea
pop
or
jle
aad
or
dec
jmp
daa
adc
mov
xchg
push
out
xchg
mov
mov
pop
test
add
xchg
jmp
xchg
test
retw
or
mov
ror
jl
sbb
lret
js
out
cmpsb
xor
repnz
pusha
push
mov
das
jo
fmuls
addb
int3
sub
jle
movsb
mov
data16
adcb
mov
nop
fsubp
ss
cmp
jae
mov
scas
pop
jl
pop
sarl
in
fsubrs
and
xchg
inc
jmp
adc
dec
aaa
loopne
ret
cmpsb
xchg
dec
pop
loope
sbb
das
mov
dec
shll
rolb
ret
xor
inc
push
insb
xchg
sbb
fsubrl
jb
popa
fs
cmpsb
repz
ds
decl
mov
mov
push
cmp
out
ret
cmp
insb
hlt
or
adc
shll
fs
lret
loop
in
sbb
cltd
xor
or
mov
jbe
xor
mov
or
mov
mov
adc
sbb
add
xor
cld
cmp
and
dec
xchg
jl
ficompl
jns
dec
jo
pop
push
fdiv
rolb
cmp
cmp
add
add
add
test
jmp
add
jg
xor
js
out
sbb
mov
imul
movsl
fildl
push
or
sbb
push
add
cmp
es
aam
insb
jl
repnz
ljmp
orl
in
xor
mov
pop
xchg
xchg
lcall
and
and
jbe
dec
push
scas
iret
fcoml
xor
clc
movsl
sbb
lods
push
shlb
ud1
sub
lods
sub
xchg
movl
popa
cmpsl
pushf
cmp
jo
fwait
add
and
dec
mov
mov
dec
cmp
hlt
sbb
cmp
cmp
dec
les
dec
stc
aas
cmp
popf
loop
out
cmp
cs
nop
sahf
gs
das
sub
fprem
rcr
sub
fstps
cmpsb
fidivs
ret
hlt
outsl
imul
xlat
jmp
into
dec
shrb
sar
adc
in
push
dec
imul
lods
push
nop
or
dec
rorb
sub
jg
adc
mov
les
aam
test
movsb
mov
shll
sub
movl
test
dec
data16
pop
stos
fwait
cltd
xor
imul
mov
icebp
rcrl
lahf
repnz
pop
neg
outsb
fs
js
movsl
stos
dec
loope
lret
mov
pop
xor
shlb
inc
and
int3
pushf
out
fsubl
test
mov
negb
sub
jne
cmp
fcomps
and
mov
sub
dec
push
das
inc
insl
cmpsb
pop
leave
mov
xor
jns
jb
arpl
sbb
jg
push
and
fcomip
mov
dec
push
dec
mov
loope
es
lock
and
jp
push
rolb
aaa
and
mov
pop
clc
cli
test
inc
in
sbb
inc
add
mov
in
loop
insl
pop
cmp
lea
in
push
out
sub
and
std
aam
je
pop
cmp
dec
pop
or
addr16
adcb
sahf
pop
loopne
dec
fsts
test
in
nop
dec
es
imul
int
push
cmpsb
pop
mov
enter
pop
iret
scas
in
int
or
pushf
or
or
cld
in
insb
popl
ss
pop
add
push
xor
pop
jmp
jmp
aad
dec
in
dec
popf
mov
jge
hlt
push
jb
test
sub
fs
ljmp
push
mov
sarl
movsl
aad
fdivs
xchg
xchg
mov
dec
cli
incl
mov
repnz
push
cli
fwait
loop
stos
inc
jmp
ret
cld
adc
adc
enter
jo
or
test
hlt
cltd
scas
jne
mov
shrb
cmp
mov
mov
inc
jae
out
jle
fmull
xor
pop
lahf
adc
dec
inc
pop
pop
lds
iret
mov
ss
rclb
insb
push
push
test
aam
clc
fs
inc
xor
or
pop
mov
cmpsb
lcall
addr16
in
lock
xor
out
sbb
mov
jmp
mov
cs
mov
lret
sbb
insb
adc
cmpsl
or
enter
and
shl
sub
das
je
mov
mov
lret
mov
push
in
out
imul
das
call
mov
add
cltd
and
xor
pop
arpl
dec
inc
xchg
cmpl
mov
repz
sbb
inc
pop
xchg
frstor
pop
lcall
daa
jbe
dec
sbb
jecxz
pop
into
push
mov
and
test
je
add
xchg
and
cmc
shl
movsb
dec
rol
adc
bound
hlt
pop
xchg
dec
mov
enter
movsb
fiaddl
out
or
mov
jae
ljmp
insb
subl
in
popf
sub
push
jb
cs
jno
adc
mov
inc
popf
mov
in
and
aam
pusha
push
add
jp
std
add
xor
push
lea
push
jo
shlb
sub
xchg
aad
or
test
pop
jae
mov
leave
ficoml
dec
cmp
xor
or
cli
pop
mov
rcll
or
jg
mov
daa
add
or
leave
into
cwtl
sarl
and
cmpsl
push
sub
xchg
loope
mov
jns
and
push
mov
push
dec
data16
add
sti
rcl
in
fidivs
dec
pop
loop
jecxz
pushf
vcvtsi2ssl
shlb
std
jnp
adc
outsb
mov
cmpb
mov
lock
mov
push
sbb
mov
cmp
out
fcom
mov
dec
notl
movsb
mulb
pop
sbb
jle
lcall
rcrl
mov
shlb
cld
and
in
rcll
iret
or
xchg
ja
test
mov
cmc
adc
ret
lcall
shll
xchg
dec
or
push
and
mov
lods
loopne
pop
jno
adc
lods
jne
test
scas
mov
inc
xor
adc
lods
pop
jno
ds
jecxz
sub
inc
jo
cmp
inc
mov
pop
negb
cmp
xchg
add
and
xor
jge
sbb
cld
xor
in
push
pop
push
scas
shr
clc
sti
test
fabs
mov
flds
ret
push
inc
mov
sub
xchg
sbb
cmc
inc
loopne
push
lret
push
insb
push
inc
out
fwait
sbb
add
push
jae
sahf
ljmp
fs
insl
mov
pop
and
lahf
cwtl
nop
pop
idivb
rcrb
xor
ret
xchg
cmc
xor
lock
idivl
adc
adc
mov
mov
enter
xchg
out
push
push
pop
or
call
or
pop
call
fbld
nop
sbb
mov
push
out
sahf
repnz
int3
aas
jne
movsb
insl
iret
enter
repnz
test
push
int3
packsswb
lock
inc
into
mov
jge
lahf
sub
call
std
inc
pusha
filds
jno
ficoml
xor
mov
insb
popa
push
sbb
sub
mull
stos
adc
xor
pop
outsb
jno
dec
bnd
or
sbb
pushf
mov
fidivrs
mov
movsb
push
mov
push
push
cmpsb
fs
sti
push
push
xorb
fwait
push
mov
pop
or
adcl
fs
mov
sbb
lock
pop
jno
jne
lret
roll
sub
mov
jno
scas
inc
or
cmp
lods
inc
push
es
push
cmc
in
loopne
sahf
test
hlt
xor
paddd
addr16
mov
sub
fcomps
jge
mov
lret
fildl
dec
ss
daa
cmpsb
pop
call
sub
xlat
pop
lds
cmp
scas
pusha
pop
jb
mov
and
lock
aad
xor
sbb
mov
xor
xchg
mul
mov
loop
in
push
movsb
ds
out
arpl
lds
jecxz
inc
lock
add
mov
cwtl
in
fimull
mov
or
mov
jno
scas
sub
xlat
cmp
mov
insl
push
xor
jo
orl
mov
inc
xor
mov
aaa
push
cwtl
jnp
into
std
xor
jno
shll
rorl
mov
add
pop
adc
dec
push
popw
sbb
jno
testb
fisttps
inc
cmpsl
jle
inc
aad
addr16
jbe
pop
mov
and
pusha
clc
sub
mov
xor
nop
sbb
inc
or
std
xor
jg
inc
mov
add
les
daa
sub
in
xchg
ljmp
rcll
in
push
mov
fisttpll
pop
mov
cmp
addl
in
ds
flds
push
fcmovne
dec
xlat
xor
je
ret
shll
lret
adc
imul
mov
add
gs
or
jp
mov
or
test
push
add
rorb
arpl
xchg
xor
std
into
fisttps
xchg
dec
or
lea
and
mov
dec
sarl
test
or
aas
inc
xchg
test
add
mov
mov
cwtl
les
jo
jb
xchg
mov
or
dec
and
jo
cmc
or
jae
or
mov
test
pop
out
mov
int3
adc
clts
setno
and
popf
pop
movsl
add
cmp
ja
movsb
roll
push
xchg
sbb
mov
push
inc
adc
ret
adc
loopne
fistpl
in
mov
push
cmp
mov
xor
jo
dec
and
in
xchg
mov
push
or
pop
jl
call
sub
xchg
adc
push
cld
lock
or
fsub
jno
inc
shl
lret
out
cmc
xchg
or
push
mov
pusha
mov
das
aam
jb
xchg
cmp
push
lahf
roll
fbstp
aas
mov
addr16
and
mov
or
hlt
shrb
jp
ljmp
xchg
std
cmpsb
pop
dec
mov
clc
subl
mov
sbb
cmp
mov
std
sbb
pop
fnstenv
lea
es
adc
test
jle
and
and
mov
sub
xchg
sub
xor
ret
pop
in
add
lea
inc
mov
popf
lods
xchg
sahf
push
push
lcall
out
mov
xchg
cmp
mov
cmp
lea
adc
push
fldenv
movsl
das
dec
fbld
daa
inc
xchg
in
mov
mov
mov
pop
popf
push
dec
insb
fsubr
or
aam
mov
lods
hlt
in
test
js
repz
call
insl
sbbl
sbb
aaa
push
fimuls
push
push
movsl
call
push
or
pop
repnz
in
loopne
addr16
inc
mov
hlt
outsl
ss
pop
mov
jg
aam
or
pusha
insl
scas
mov
mov
push
inc
mov
sbb
lcall
sub
inc
add
lcall
push
fildll
sarl
xchg
iret
xor
jp
pop
mov
xchg
and
lds
push
aaa
lds
dec
pop
arpl
shlb
lds
leave
rcr
dec
sub
mov
sbb
pop
xor
mov
add
mov
repnz
push
aas
xor
dec
pop
fstpl
mov
jbe
in
in
xor
dec
push
or
pushl
inc
rcrl
push
dec
out
push
adc
dec
sbb
sub
mov
js
sub
call
gs
and
jl
inc
dec
stos
jbe
jbe
aas
dec
push
rclb
jb
adc
mov
iret
shlb
jl
int3
mov
jo
fnsave
adc
fwait
negl
fldcw
add
cmpb
and
pop
sbbl
loopne
mov
mov
leave
mov
repz
xlat
pop
xor
jge
scas
aas
push
cld
jmp
inc
mov
jnp
inc
mov
std
or
daa
inc
ret
jbe
mov
pop
push
mov
arpl
xor
add
xchg
pop
pop
jl
bound
mov
fists
mov
xor
pop
dec
dec
inc
inc
pop
mov
fcmovnb
xchg
sti
push
mov
push
out
insb
sarl
fdivrp
popf
aaa
mov
nopl
xchg
iret
mov
loop
neg
or
and
stc
pop
mov
xchg
dec
mov
xchg
insl
mul
cmp
adc
mov
nop
jbe
pop
mov
pop
pop
mov
and
dec
jnp
push
lea
sub
roll
pop
inc
cmp
jnp
int3
xorl
mov
fistl
pop
sahf
bound
add
stos
or
fisttpl
cltd
push
insb
call
aam
ds
stos
test
mov
fs
jno
push
dec
insl
jl
test
loopne
mov
cmpsb
mov
push
cwtl
jle
xchg
mov
mov
xor
xor
cmpsb
sub
cmp
push
mov
lahf
push
insb
mov
jmp
xor
in
js
ss
cltd
cmp
jge
add
ret
fdivs
jo
in
add
ret
or
in
jno
mov
scas
and
push
lds
sbb
sub
inc
iret
sub
ss
popf
cmp
shld
inc
enter
call
or
std
fistpll
mov
mov
and
aam
leave
sub
pushl
xchg
js
inc
pop
out
int3
adc
sahf
mov
or
gs
xchg
inc
cmpsb
mov
or
sub
and
das
adc
pop
push
loop
lock
sbb
into
repz
out
pop
jo
mov
dec
cs
ds
repnz
cmpsb
pop
cmp
insl
xchg
fcompp
inc
jae
add
int3
ficomps
push
sbb
cmpsb
and
arpl
int3
inc
stos
loopne
ret
jnp
int
mov
dec
cmp
dec
push
dec
push
and
leave
rclb
dec
movsl
add
mov
stos
pop
adc
addl
xor
ja
aam
cmp
test
xchg
and
adc
rol
rorl
pop
fiadds
insl
pusha
xchg
cli
cmpsb
fsubrl
enter
inc
adc
push
in
dec
jae
scas
loopne
mov
repz
mov
push
sahf
mov
mov
jp
sbb
adc
sti
test
jle
cmp
es
inc
jo
push
mov
inc
fsubrs
jne
out
adc
loopne,pn
sub
mov
inc
cmc
int
idivb
jbe
sub
ljmp
push
jp
dec
lahf
bound
dec
cltd
sahf
jo
vpsubq
jb
jmp
adc
outsb
cmp
jb
lahf
push
cmpsl
inc
xlat
jecxz
lods
xchg
inc
pop
mov
jns
std
cmc
jp
xchg
out
lods
nop
pushf
or
mov
push
push
inc
cmpsl
cmp
mov
lahf
cmpb
mov
jg
ss
fisttpll
out
dec
rolb
jle
outsl
mov
pop
xor
mov
insb
frstor
or
cs
jns
pop
inc
mov
sub
mov
xchg
push
scas
addr16
sbb
notl
xor
ret
adc
pop
ret
inc
adc
xor
icebp
push
jns
in
push
aam
repz
rcpps
jl
jp
aaa
in
mov
xchg
cmpsl
outsb
mov
outsl
jnp
pop
push
leave
push
lock
xor
jbe
iret
mov
mov
hlt
ds
dec
mov
les
xchg
fcompl
mov
mov
js
sbb
lods
je
addl
dec
xor
sbb
adc
sub
or
xor
jns
and
adc
jg
mov
ljmp
lods
jns
fcompl
outsl
movsb
jge
sub
mov
cmpsb
jbe
fnsave
adc
dec
aas
add
fnstcw
or
inc
add
imul
lret
popa
in
sti
enter
fmulp
iret
sub
cmp
in
sbb
ret
add
dec
mov
jle
jne
push
inc
cs
cmc
adc
aad
gs
jle
ljmp
inc
call
or
fidivs
xchg
in
mov
jp
subb
adc
outsb
mov
in
mov
jp
loope
xor
fsts
inc
push
outsb
push
in
mov
pop
cmp
push
mov
and
test
jmp
pop
push
rclb
shrb
mov
fldenv
pop
lock
jb
push
inc
rcll
pop
ret
nop
lcall
cmp
mov
sbb
dec
outsb
adc
mov
int
ret
imull
addr16
mov
fwait
dec
jecxz
cld
inc
pop
mov
xchg
ds
push
dec
lock
cmc
sub
and
or
and
jge
mov
cld
push
push
lds
cmc
add
repnz
adc
loop
scas
cmpsl
push
idivl
mov
sub
daa
fimull
inc
jg
mov
cmp
icebp
jbe
and
mov
movsb
stos
pop
adc
dec
xor
push
ljmp
movsb
daa
cmp
arpl
jmp
sub
sub
call
inc
arpl
jae
fbld
add
inc
ror
jbe
stos
cld
add
cmp
xlat
insb
xor
scas
sbb
push
aaa
dec
inc
sbb
xchg
dec
jle
cmp
je
dec
lret
sub
icebp
fnstcw
pop
mov
in
stos
inc
or
cmpsb
cmc
adc
aas
ss
cmp
int
js
movsb
loope
into
push
mov
xor
into
inc
mov
xchg
icebp
rclb
ret
xor
clc
dec
jmp
inc
dec
out
or
mov
int3
mov
lea
loope,pt
mov
push
je
in
sbb
fildl
dec
adc
test
sub
addl
lret
push
pushf
push
in
lods
dec
cld
xchg
or
or
sbb
int
or
inc
add
or
mov
test
mov
call
push
jge
sbb
test
pop
mov
dec
int
add
and
lret
scas
sbb
push
push
mov
test
enter
dec
add
jo
push
sbb
or
out
jecxz
scas
or
fsubp
scas
jecxz
sbb
ljmp
fstpt
push
mov
push
test
mov
cmp
pushl
pop
fcoml
std
xlat
mov
cltd
inc
mov
sbb
stc
lds
add
sahf
int3
fstps
pop
rolb
fwait
les
pop
add
jbe
jp
sbb
lods
loop
popa
pushf
fidivrl
xchg
loopne
cltd
arpl
je
movsl
imulb
leave
mov
xchg
pop
pusha
cmp
lods
dec
mov
lcall
mov
cmp
xor
scas
gs
mov
cmp
adc
mov
call
push
inc
ret
imul
fldt
adc
das
es
adc
jnp
pop
sbb
adc
cmpsl
lock
mov
push
mov
neg
push
adc
adc
xor
cmc
pushl
xchg
or
sbb
push
inc
ret
sbb
mov
cmp
sahf
sbb
bound
scas
mov
xlat
and
repnz
fdivl
and
sbb
sub
push
cmpsl
testb
test
mov
and
or
addl
inc
sbb
out
xor
pop
addps
mov
je
push
inc
ljmp
pop
jno
pop
shlb
add
dec
insl
push
fidivrs
jecxz
dec
mov
push
push
mov
aam
push
cmp
cmp
aad
aas
lcall
lret
dec
negb
or
fstpt
mov
mov
jnp
dec
inc
add
inc
test
pop
and
lock
jns
jecxz
idivb
and
jnp
mov
insl
loope
loop
mov
fisubl
jb
ficoms
scas
inc
int3
ja
sbb
mov
ss
xchg
or
lea
mov
sbb
or
dec
inc
mov
fwait
mov
pop
push
pop
enter
push
or
xor
inc
aaa
lock
mov
and
mov
inc
jne
out
sub
or
push
ficoms
push
pop
mov
jnp
xor
in
adcl
or
inc
inc
and
or
add
scas
stc
inc
push
hlt
push
ljmp
dec
cmp
pop
xor
in
popa
cli
push
cmp
mov
int
push
sub
pop
xor
push
mov
add
or
daa
ret
lret
pop
ret
add
insb
leave
mov
inc
sbb
sub
loope
enter
into
out
adc
xchg
mov
fwait
add
cmp
inc
and
jp
jg
jg
mov
sbb
repnz
jmp
cs
lret
scas
cli
jnp
mov
xchg
push
subl
lahf
cmp
cmp
aam
fidivrl
xor
cmp
dec
ds
push
inc
dec
outsl
adc
movsb
rcll
jg
and
jp
enter
aad
test
fdivs
pop
rol
nop
fs
mov
mov
je
subb
and
push
or
popf
xchg
rcrb
nop
mov
mov
jb
lea
scas
mov
jne
js
inc
test
les
outsb
rcrl
or
inc
mov
pop
inc
push
inc
mov
mulb
popf
or
add
or
aaa
cltd
sub
rcrl
xchg
mov
push
mov
lret
cmp
and
cmp
dec
xor
inc
jmp
lds
cmc
inc
inc
and
fmull
mov
pop
pop
loope
dec
testl
pop
pop
pop
dec
je
aad
cmp
pop
push
pop
mov
leave
push
mov
fnstsw
and
les
jmp
sub
xlat
rclb
imul
das
push
sub
mov
les
imul
sub
repz
loope
scas
cld
cmp
mov
mov
ljmp
dec
xchg
add
mov
cmp
stos
sbb
pop
pop
pop
ja
mov
jp
xor
mov
inc
icebp
xchg
push
mov
sub
nop
or
imul
ss
dec
daa
lock
ljmp
inc
or
loop
adc
aaa
pop
pusha
jno
cli
es
or
lret
test
adc
adc
lret
in
movsb
add
inc
fwait
test
movb
filds
mov
stos
stos
cmc
inc
bound
cmc
notb
pop
nop
arpl
pusha
test
sub
dec
add
fdiv
out
into
mov
pop
add
hlt
dec
arpl
jne
push
pop
cmp
add
mov
mov
inc
cmp
insb
fsubrp
cmpsl
adc
push
lahf
mov
fsub
xor
push
cld
push
push
cmp
pop
push
inc
pop
or
mov
mov
mov
mov
jmp
loope
jo
sbb
mov
adc
pop
push
pop
cmpl
fildl
aad
jno
push
out
dec
inc
jo
cmc
or
adc
lds
enter
daa
jecxz
mov
xor
shll
xchg
jmp
outsb
lds
subl
mov
sbb
mov
ret
add
cmp
inc
sub
gs
mov
mov
push
pushf
jmp
jp
sub
ja
lods
mov
mov
xor
das
push
stos
mov
dec
mov
clc
xchg
mov
rolb
xchg
loop
das
sbb
mull
ret
xchg
lcall
test
scas
xchg
adc
fs
cmpsb
in
push
repnz
xor
inc
cld
into
ss
jecxz
pop
repz
in
adc
lea
shrl
pop
data16
inc
roll
sbb
push
dec
sub
push
mov
fdivs
inc
lret
ljmp
mov
and
fistpl
xchg
sub
dec
pushf
jge
adc
cli
adc
sbb
mov
clc
fst
push
push
enter
pop
sbb
call
not
jno
fildl
int
and
adc
and
cmc
js
dec
inc
push
cli
push
mov
mov
cltd
inc
insb
xlat
mov
outsl
lds
jle
jo
aam
rolb
pop
cmpsl
jns
mov
jno
insb
inc
mov
mov
clc
daa
rcl
cmp
imul
mov
cmc
ds
sub
cli
loope
ljmp
cld
cli
mov
adc
dec
jne
test
arpl
mov
dec
mov
xlat
sbb
pop
adc
fildl
dec
xchg
fbld
rolb
mov
dec
movsb
fwait
lret
cld
insl
dec
popf
jl
and
and
sub
inc
fists
xorl
addr16
int
movsb
loopne
mov
push
push
add
stc
bound
out
mov
xor
and
mov
popa
in
imul
scas
pushl
hlt
mov
fsubr
lds
out
test
mov
scas
sub
cmpsl
add
add
hlt
movsb
out
pop
ret
and
mov
test
mov
mov
mov
xor
ss
clc
cmp
out
xchg
adc
and
fdivs
cltd
fmul
xor
int
out
test
mov
cmp
pop
adc
in
xchg
nop
ret
insb
mov
int3
xchg
stos
inc
cmp
fs
aas
dec
icebp
inc
or
jge
fmull
test
loopne
push
inc
ret
pop
in
roll
pop
sub
lds
jbe
out
test
outsb
pop
fwait
jg
mov
filds
leave
iret
mov
shlb
mov
shl
mov
mov
mov
push
add
or
test
movsl
imulb
jns
push
lods
idivb
leave
adc
push
xchg
sbb
xchg
loopne
iret
out
outsb
test
aam
clc
dec
psrlw
lret
in
xor
andl
xor
lret
xchg
inc
xchg
sbb
rep
jno
xchg
push
lcall
addl
movsb
arpl
arpl
es
insl
sbb
xchg
fildll
ljmp
repz
xchg
sub
call
mov
rclb
aas
pop
cmpsb
fwait
popa
movsl
sbbl
daa
cwtl
add
jecxz
push
test
xchg
repz
cmp
loop
xchg
fidivrs
lret
inc
sub
mov
nop
pop
ret
test
test
out
es
insb
roll
sbb
sub
sbb
pusha
xor
lcall
cltd
js
and
popf
fcmovb
ret
and
jnp
addr16
fs
push
push
jl
xor
xchg
repz
mov
push
mov
pop
or
lret
fmul
or
cmp
inc
repz
fimuls
je
or
jecxz
rcll
daa
sbb
lea
arpl
xor
xor
push
cltd
push
or
add
aam
xor
add
lret
ret
mov
xor
shrb
and
sbb
cmp
clc
cmp
push
push
repz
pop
test
sbb
js
cs
cld
jnp
sub
arpl
pop
ret
or
jno
and
jnp
loope
leave
fdivs
in
mov
xchg
fs
sub
cmpsb
jle
cs
mov
insb
jns
mov
cli
jp
jo
mov
sbb
out
lahf
mov
xor
int
and
push
in
cmp
dec
or
dec
adc
sbb
mov
cltd
lock
and
push
pop
push
sbb
inc
jmp
or
aad
fbld
imul
aam
decb
cli
movsl
sbb
pop
movsl
repnz
add
pushf
aaa
or
cmp
jno
imul
fbstp
inc
mov
rclb
xchg
push
ljmp
int
rcll
mov
lahf
pop
mov
insb
loopne
loope
or
in
mov
and
or
mov
jecxz
inc
inc
outsl
xor
fnsave
sub
pop
icebp
pop
mov
stos
pusha
and
jle
fsub
sub
dec
cmp
movsl
in
sub
adc
pop
xor
xchg
xchg
rorl
or
test
ficoml
xchg
fmuls
mulb
stc
out
testl
mov
mov
sbb
pop
inc
hlt
xchg
push
dec
aad
stos
std
push
pop
popa
cmp
push
gs
cmp
mov
inc
js
and
out
inc
inc
mov
mov
aad
push
out
mul
xchg
repz
mov
xchg
cmpl
xchg
repnz
stos
jnp
sub
dec
xchg
arpl
mov
add
jp
mov
pop
sub
cmpsb
mov
iret
orb
divl
jno
sahf
and
mov
aad
out
xchg
push
mov
mov
notl
inc
jl
dec
adc
mov
ja
mov
inc
mov
call
xchg
or
ret
mov
outsl
int3
pop
arpl
sbb
dec
add
push
xchg
aam
hlt
pop
cld
cmp
ret
xchg
jge
mov
pop
test
daa
aam
loope
mov
sahf
jge
faddl
enter
mov
stos
push
addr16
mov
push
adc
mov
push
fwait
imul
mov
mov
jno
and
sub
int3
pusha
and
pop
fildl
lock
mov
sub
xchg
shr
adc
xor
add
dec
pop
push
jp
pop
jnp
icebp
xchg
pop
stos
jno
jno
xor
icebp
add
or
mov
cltd
popa
gs
scas
push
mov
shl
bound
shll
mov
lahf
add
jmp
dec
aas
sbb
cmp
ljmp
jb
mov
dec
stos
out
ret
inc
loop
push
and
pop
xor
pusha
stos
cmc
pop
xchg
push
dec
adc
mov
stos
add
cmp
bound
pop
fnstcw
lea
mov
xor
jmp
jmp
add
push
pop
sub
call
sahf
and
xchg
divl
ljmp
cmpsb
add
mov
das
mov
fcompl
cmp
stos
cmpsl
movsl
iret
mov
or
sbb
cmpsl
stos
cli
insb
xchg
pop
xlat
and
xor
lahf
xchg
lcall
les
sbb
stos
push
pushf
stos
inc
jb
iret
lock
lock
mov
fstpl
cmp
fistl
xchg
loope
and
dec
ret
mov
add
das
sbb
roll
insb
add
movsl
rorl
fwait
mov
pop
xor
xchg
pop
jne
sbb
jge
icebp
clc
pop
cmp
xor
adc
mov
shl
push
test
aaa
or
jecxz
mov
or
lock
sbb
into
jb
cmp
out
fsubp
insb
fs
pop
out
in
in
cltd
mov
jbe
stc
dec
arpl
ficoms
data16
jg
or
in
xchg
adcb
push
xor
scas
movsb
cmp
cli
shlb
movsb
sbb
push
xchg
repz
cmp
xlat
xchg
jecxz
out
subl
imul
bnd
pop
mov
cmp
inc
push
notb
shlb
jb
rclb
pop
adc
pop
lret
jl
loopne
mov
mov
pop
pop
mov
mov
movl
in
adc
pop
mov
mov
lods
lock
lock
adc
pop
or
popf
sahf
push
stc
pop
mov
add
call
or
and
pop
lods
mov
out
cltd
pushl
test
add
mov
ja
xor
and
jge
ret
cmc
inc
jae
adc
rcr
adcl
insl
xor
in
je
cmp
out
xor
fbstp
or
aad
cltd
xor
inc
mov
and
pop
cltd
dec
dec
push
jp
cwtl
cwtl
cmp
jns
ds
mov
or
rorb
push
or
xor
pop
inc
stc
cmp
stc
push
andl
in
and
ret
pop
lods
xchg
cwtl
sahf
sbb
jne
xchg
cmp
adc
in
jge
lcall
shll
out
mov
mov
inc
testl
cmpsl
push
inc
fcomps
inc
fs
out
adc
test
sub
mov
cmp
mov
rolb
sub
insb
mov
cltd
inc
movsl
sbb
jbe
cmpsl
xor
mov
mov
inc
pop
or
mov
push
add
push
daa
mov
xchg
mov
scas
push
shrl
movsb
mov
jns
leave
lcall
mov
in
sub
mov
lahf
cmp
outsl
lods
cmc
adc
cs
int3
pushf
iret
xchg
jmp
push
sbb
or
mov
lods
push
aam
repz
lods
call
in
cli
or
push
xchg
jae
scas
fs
ss
or
loope
lock
imul
xor
mov
mov
and
adc
shrd
adc
enter
adc
loope
enter
insb
hlt
cmpsl
push
and
mov
fimuls
ss
test
mov
xchg
fiaddl
aaa
adc
xor
inc
in
sbb
rcrl
or
adc
inc
sub
pusha
into
fisubrs
loop
or
push
xor
pop
out
xor
leave
adcb
scas
stos
test
lea
jp
cmpsb
aad
xor
cmp
bound
sbb
adc
rcrb
js
imul
jb
jmp
lcall
pusha
les
or
sarl
loope
cmpsb
arpl
enter
sbb
or
stos
xor
pushf
jnp
outsb
lods
fsub
into
xchg
dec
cmpsl
inc
fnstsw
orb
sub
into
shll
fidivl
je
pop
add
mov
pop
rcrb
clc
enter
mov
jo
iret
ds
repnz
xorl
sahf
arpl
es
call
lock
push
or
hlt
pop
mov
maxps
in
mov
push
lods
mov
test
jmp
ret
je
ljmp
or
gs
mov
popf
cmc
repz
pop
push
loopne
xchg
add
mov
or
and
add
push
sbb
sbb
cltd
enter
shrb
jmp
rorl
inc
test
rorb
push
out
repnz
rcll
imul
movsb
lock
jge
lret
loop
loope
mov
in
test
pop
es
jno
fcmovb
gs
xlat
or
in
lods
push
dec
pop
sbb
pop
out
cmp
and
dec
pushf
enter
inc
push
jns
mov
cmc
mov
or
in
inc
push
mov
lods
notl
cltd
mov
out
sub
sbb
sub
jecxz
dec
xor
test
in
jns
enter
add
mov
push
mov
cltd
sahf
adc
jge
or
lret
dec
xchg
adc
fdivr
mov
data16
scas
mov
dec
int3
repz
dec
adc
lret
push
pop
sub
jmp
fldt
cmc
dec
dec
mov
paddw
fisubrs
or
cwtl
mov
test
xchg
jl
jne,pt
orb
jne
or
in
fisttpl
add
ret
pop
daa
andl
hlt
add
mov
sbb
movsb
loop
rcl
or
pushf
sub
pop
loop
adc
pop
sub
je
push
outsl
fnstenv
popf
fnstenv
mov
pop
outsl
sub
movsb
int
xor
aad
and
mov
dec
out
sub
dec
xchg
pavgb
push
test
fidivrl
insl
scas
cld
pop
fistps
jmp
push
sbb
mov
xchg
popf
xchg
inc
pop
xlat
loope
inc
aam
cmp
int3
xlat
je
mov
adc
int
mov
inc
out
mov
mov
test
in
fdivrl
fimull
xchg
aas
scas
out
cmp
sbb
sbb
adc
gs
or
jne
inc
push
mov
mov
in
cmc
outsb
sbb
inc
jmp
or
ret
xchg
sbb
inc
dec
shrl
cmpsb
ffree
lock
call
add
mov
cli
paddsb
sub
ficompl
push
xchg
push
adcb
cmpsl
xchg
aam
and
punpckldq
inc
out
ljmp
ja
icebp
negl
faddl
xor
dec
cli
addr16
aad
push
mov
xchg
sbb
and
scas
or
mov
stc
mov
stos
dec
or
push
and
lret
insb
pushf
hlt
in
sarl
add
cmp
bound
sbbl
and
lods
mov
xchg
cmp
loop
sbb
mov
push
rorb
push
shrb
popa
outsl
jno
les
mov
sti
cld
pop
or
or
xor
push
dec
adc
outsb
dec
add
test
mov
faddl
frstor
arpl
or
jne,pn
and
xor
rclb
xor
paddusb
inc
mov
sbb
mov
cltd
cmp
xor
fcmovu
adc
ss
insl
xchg
mov
cld
fists
loop
dec
pop
mov
cmc
cmpsb
lods
repz
or
outsb
shrl
movsl
xlat
scas
mov
je
push
ret
test
sbb
insb
nop
and
or
jmp
and
in
js
mov
sub
les
jae
sbb
cmp
xor
adc
pop
sbbl
cmp
or
jno
xchg
rorl
or
xor
mov
stos
sti
je
call
out
repz
ja
inc
out
insb
push
mov
sbb
repz
ja
sarl
pop
pop
into
jae
sahf
xchg
je
stos
pop
dec
mov
mov
push
fwait
jmp
jp
inc
mov
cmp
jbe
das
out
xchg
jnp
mov
mov
aaa
cld
mov
std
scas
lret
mov
xor
movsl
bound
adc
cpuid
aaa
push
sub
aam
xchg
and
insl
xchg
cmp
sahf
jge
sbb
add
fisttps
xlat
cmp
fidivrl
push
push
insb
imul
jle
pop
mov
mov
jg
xchg
shr
test
push
clc
pop
orl
sbb
inc
mov
xchg
aam
and
das
pusha
xor
jge
xchg
pop
rclb
mov
mov
xchg
dec
dec
mov
jle
loope
ror
xchg
ds
in
xchg
push
mov
stos
mov
dec
sub
inc
test
adcl
stos
xchg
mov
xor
mov
push
cmp
clc
out
loopne
lea
outsb
mov
andl
fidivs
mov
mov
std
add
mov
cmpl
mov
inc
pop
pop
imul
jmp
mov
inc
pop
rcr
sub
xchg
lahf
pop
iret
nop
mov
call
vmaxps
push
cmp
filds
xchg
jno
adc
mov
or
roll
out
mov
mov
xor
bound
xchg
stos
sbb
out
test
sub
dec
insb
xchg
push
cs
xchg
ss
inc
stos
inc
test
bound
push
push
pmuludq
add
fimull
scas
sub
sub
imul
andl
sub
adc
clc
std
outsb
xchg
mov
xor
js
ret
adc
ja
movsl
sbb
ud0
xlat
sub
nop
mov
outsb
xor
push
jmp
dec
pushf
stc
xor
lahf
shll
push
jnp
aas
call
inc
jmp
scas
loopne
out
ret
xchg
sahf
xor
insb
xchg
adc
jae
iret
mov
cmp
fcom
cli
cmp
stos
clc
xchg
imul
pop
dec
sbb
in
je
inc
insb
lods
xchg
push
push
xchg
xchg
out
push
cmp
lea
pop
sbb
mov
mov
mov
xor
and
and
inc
leave
push
push
mov
mov
lret
stos
dec
xor
inc
and
out
test
rclb
iret
flds
cwtl
inc
in
loopne
mov
mov
icebp
cmc
loopne
ret
dec
cmovle
gs
adc
dec
push
shlb
push
popf
xorb
push
les
imul
ds
sahf
or
dec
dec
xchg
pop
jo
lahf
out
movsb
sbb
iret
pop
fldt
repnz
clc
cmp
mov
rep
ret
pop
mov
imul
push
pushf
mov
xor
imul
das
jg
lods
mov
pop
shll
and
adc
test
cs
pop
jmp
inc
pop
iret
rorl
push
call
inc
fdivrs
dec
fdivrp
xchg
insb
loop
xor
test
aas
out
addb
or
mov
lods
outsb
mov
jae
mov
push
inc
mov
and
lea
loopne
jb
call
stc
out
in
pop
movsl
ljmp
jg
dec
data16
dec
outsb
pop
inc
or
push
popf
lds
mov
mov
inc
int3
jle
mov
movsb
test
xor
xchg
js
pushf
insl
fadd
jmp
pusha
sbbl
call
mov
pop
nop
adc
popa
adc
cltd
mov
push
mov
mov
mov
inc
mov
mov
push
sbb
inc
stc
adc
mov
scas
push
fs
sub
cltd
fst
and
jo,pn
add
cmp
jg
clc
cmpsl
dec
in
icebp
mov
mov
xchg
pop
cmp
mov
pop
gs
or
cmp
and
mov
and
pop
pop
popf
cmc
jbe
mov
and
in
sbb
xor
repnz
inc
test
jge
repz
stc
push
push
test
repnz
pop
xchg
int3
fsubrs
dec
imul
ja
lret
xor
lahf
lods
sbb
rcr
inc
xor
jne
dec
xchg
inc
push
idivl
xchg
gs
aaa
sarl
ds
sarb
sub
add
xchg
and
pop
loopne
call
repz
sub
testl
cmpsl
movsb
movsl
stos
div
add
pop
jle
into
sbb
out
xor
xchg
or
lods
xchg
cmp
outsl
imul
mov
jecxz
mov
xchg
cltd
daa
push
add
pop
js
movsb
and
adc
cwtl
add
popf
pushf
ficoml
inc
xor
daa
push
ror
inc
loop
popf
jno
mov
pop
xchg
hlt
inc
inc
mov
mov
pop
or
fmuls
mov
mov
cltd
xlat
mov
add
ja
inc
jnp
sbb
jg
mov
add
in
js
xlat
aad
out
test
push
or
inc
test
imul
mov
mov
repnz
fcomps
xlat
je
gs
stos
outsl
or
cmp
stos
inc
sub
pusha
pop
lods
mov
sti
and
xor
mov
popf
pop
aam
lahf
add
andl
out
sub
mov
mov
enter
sbb
dec
rcrl
and
nop
ljmp
jns
jge
pop
loopne
out
xchg
or
repnz
int
aaa
push
pop
xchg
imul
sahf
sbb
push
jbe
adc
jne
sbb
xor
stos
xchg
or
mov
fists
mov
repnz
and
fwait
xchg
sti
dec
iret
fcmovu
or
inc
adc
rcrl
xchg
fists
push
cmpsl
loopne
daa
jo
dec
cmp
ja
fwait
xchg
dec
add
popf
jl
push
lods
pop
movsl
ret
jmp
pop
mov
movsl
adc
loope
adc
mov
xor
push
sub
xchg
cmp
int3
sub
lea
xchg
inc
mov
arpl
push
nop
shll
icebp
fsts
hlt
xchg
dec
cmp
repnz
cmpsl
test
sahf
addr16
lcall
fistl
pop
jge
inc
insl
test
mov
xor
xor
mov
adc
xchg
stos
sahf
xor
clc
inc
mov
movsl
add
push
pop
fiadds
nop
rcl
shlb
mov
ret
and
fstl
orl
or
andb
aam
xor
add
jb
mov
sbb
nop
stos
ds
adc
in
cmp
xchg
mov
and
lods
loope
cmp
imul
addb
ss
imul
cs
cs
test
push
xor
or
js
cmp
fiadds
add
push
pop
mov
mov
add
and
loop
xor
push
xlat
aad
mov
and
shrl
pop
inc
or
pop
lds
push
aad
xor
jmp
popf
inc
pop
shrl
sbb
and
sti
mov
xchg
sub
pop
inc
pop
jg
call
xchg
es
ljmp
add
rolb
cmp
ds
mov
xchg
leave
fsubrs
xlat
std
xchg
lret
clc
xchg
sti
ds
mov
dec
in
xlat
xorb
inc
push
adc
add
and
mov
push
xor
inc
push
mov
fisubrs
dec
stos
sahf
add
jno
fisttpll
sarl
scas
inc
cs
nop
mov
sbb
cmp
insl
jecxz
inc
cmp
adc
das
xorl
repnz
sub
dec
sbb
jno
add
daa
jl
add
mov
in
shll
lds
sbb
enter
jae
pop
push
sti
out
or
sbb
jo
xor
inc
fnstsw
mov
roll
xor
repz
inc
cld
push
js
lock
jle
xchg
mov
sub
sub
cmp
es
ret
je
fmuls
mov
sub
and
mov
or
add
pop
rorb
stc
leave
or
icebp
adc
loop
mov
imul
pop
or
inc
inc
jns
and
xchg
popa
add
cs
push
arpl
out
int3
mov
xchg
inc
jmp
hlt
sti
testb
ret
push
jns
insb
inc
xchg
lea
dec
lock
fisttpll
loope
repz
fistps
mov
lahf
xor
xor
rcpps
inc
add
icebp
out
aam
and
dec
test
jge
data16
clc
mov
push
test
inc
adc
cli
jl
fwait
jge
mov
and
push
xchg
enter
mov
in
adc
jmp
dec
mov
sti
adcl
daa
data16
mov
mov
mov
xchg
sub
cmp
dec
cs
xor
or
sub
fisubs
hlt
ss
imul
std
pop
push
pop
xchg
push
pop
dec
fs
mov
fisubrs
and
jle
push
sbb
or
mov
push
das
jmp
aas
in
aam
jge
mov
and
push
xchg
mov
pop
mov
jecxz
jmp
fwait
xor
rol
movsl
sahf
mov
push
sti
ficomps
and
arpl
pushf
enter
data16
cmpsb
and
sbb
jle
mov
in
imull
push
les
xchg
inc
cmp
jns
mov
pop
jno
mulb
cmp
and
insl
push
or
jno
rcll
pop
mov
inc
cli
enter
pop
fcomps
mov
add
test
nop
or
pushf
mov
inc
cmp
mov
pop
push
push
pop
in
test
adc
xchg
out
pusha
inc
out
ficompl
dec
sti
frstor
adc
aaa
cmpsb
fildll
dec
test
lcall
stos
sub
in
xchg
adc
mov
adc
sahf
jo
dec
sub
cmp
lret
addr16
adc
add
mov
cwtl
push
sarl
jns
inc
pop
pop
mov
jb
lret
or
sti
pop
loop
sbb
jecxz
ficoms
push
popa
xchg
mov
fidivs
into
cmc
fstcw
cmpsb
mov
mov
xchg
pop
std
push
repnz
sbbb
lret
ljmp
jno
out
lea
inc
xor
dec
add
jno
jmp
xchg
lds
jge
cmp
bound
aam
es
bnd
cmp
pop
pop
dec
enter
ret
pop
std
aad
xchg
arpl
loop
add
adc
jl
clc
popa
sbb
or
xor
scas
mov
call
pop
aas
test
jecxz
mov
clc
stc
out
je
cmp
movsl
inc
sub
dec
xchg
ficompl
loope
jb
pop
mov
stos
sub
push
call
addb
fnstsw
insl
shll
mov
pop
push
ljmp
jb
adc
subl
fisubrl
mov
jo
jle
xchg
push
iret
test
loopne
xor
nop
call
cltd
xchg
icebp
les
jns
xchg
fsubrs
dec
inc
rorb
fidivrl
jl
mov
clc
loope
push
push
xor
in
xchg
pusha
sbb
in
cmp
push
icebp
lock
sbb
pop
fcomip
push
insl
lret
shlb
loop
sub
lea
xchg
pop
int3
sbbb
je
mov
adc
dec
and
mov
adcl
daa
movsb
mov
sbb
arpl
imull
clc
scas
aas
lock
mov
sub
dec
rorb
push
mov
movsb
outsb
sbb
mov
xchg
fldl
addr16
adc
adc
pop
dec
test
std
cmp
movsl
and
add
pop
in
push
sub
aam
in
pop
pop
mov
xor
cmpsb
mov
mov
inc
out
or
add
mov
dec
iret
mov
into
jge
jle
mov
insl
pusha
pop
push
inc
push
aaa
inc
add
cmp
dec
jg
icebp
sti
test
xor
add
in
lods
jb
mov
movsb
push
jl
or
lcall
xor
fimuls
push
popf
adc
mov
adcb
jp
xchg
xchg
ljmp
cmp
into
inc
and
shrl
movsl
movsl
stos
jnp
jbe
aam
push
bound
fadds
adc
sub
pushf
ss
popf
xor
sarb
in
push
cmp
fsts
data16
jnp
xchg
xchg
leave
add
in
and
mov
jo
xor
dec
xor
das
mov
jecxz
ja
adcb
cli
xor
cld
xchg
das
and
dec
jbe
sbb
sbb
adc
popa
push
dec
jl
imul
adc
and
leave
mov
and
lret
test
push
call
lret
xchg
test
add
pop
pop
fdivrl
arpl
add
cwtl
aaa
test
sbb
pop
mov
testb
repz
mov
nop
arpl
pop
cmp
mov
jl
inc
test
or
into
dec
and
push
stos
in
mov
scas
icebp
pop
ljmp
popa
mov
fsubrs
outsb
cli
pop
push
aad
sub
mov
dec
ss
lret
jge
jle
push
fstpt
dec
and
stc
pop
and
xor
out
xlat
imul
and
cmpsb
push
sub
push
dec
lods
hlt
xchg
je
shrl
call
add
outsl
adc
push
cli
cmpsl
pop
add
clc
test
stc
mov
cld
mov
movsb
sti
sub
adc
push
cmp
clc
or
pop
imul
lds
lods
adc
stos
xorl
push
mov
mov
sti
std
enter
adcb
addr16
hlt
aad
sub
xchg
dec
xchg
mov
xlat
sti
adc
repz
pop
scas
add
jo
lods
cltd
pusha
adc
jns
adc
sbb
ret
test
cld
test
insb
add
fcompl
ljmp
in
jmp
dec
je
gs
punpcklbw
cmpsb
push
inc
pop
popa
lock
sbb
push
enter
lds
and
xor
xchg
ss
arpl
xor
ljmp
out
aam
or
adc
repz
scas
into
out
jle
les
inc
jo
mov
sbb
adc
loopne
fistl
insl
inc
jns
dec
je
fbstp
add
add
orb
mov
mov
stos
addr16
out
pop
cld
push
push
test
push
sti
push
lock
jo
enter
loop
jg
jle
push
in
mov
dec
ret
pop
ret
xchg
mov
adc
push
jl
cmp
ds
add
aas
imul
ss
dec
ss
jbe
aaa
imul
rcll
mov
jnp
xor
mov
xchg
pop
outsl
add
mov
test
fistpl
pop
test
push
and
xor
leave
imul
popf
test
inc
pop
les
mov
mov
mov
jle
mov
pop
mov
neg
xor
mov
ret
mov
pop
or
inc
add
daa
pop
adc
xchg
in
int
pushf
cmp
out
mov
sbb
or
pusha
sub
sbb
out
test
xchg
gs
in
jle
sub
add
hlt
lods
out
aaa
test
mov
aas
mov
cmp
fdivrl
loopne
push
andb
mov
push
lcall
pop
shll
jnp
xchg
xchg
push
jns
pushf
pusha
fildl
mov
lods
loope
test
clc
les
pop
sub
jge
add
adc
ljmp
ja
xchg
xchg
in
fcom
inc
into
xchg
xor
xchg
aad
out
push
test
sbb
pop
mov
inc
adc
add
jae
orl
addb
or
jne
call
icebp
mov
push
xchg
loop
add
xor
cmpsb
ficoms
jl
dec
sti
xor
mov
jge
lahf
stos
cld
xlat
sub
lods
test
loopne
ficoml
scas
cmp
rcrb
fmul
pop
ja
das
addr16
std
cmpsl
pushf
lods
sahf
fiaddl
popa
pop
mov
add
and
ret
or
bound
xchg
popf
pop
pop
pop
or
cmp
dec
push
notb
sbb
xchg
or
cmp
adc
mov
mov
mov
sbbl
cs
sub
or
cmp
inc
dec
cwtl
jg
icebp
hlt
pop
and
xor
sub
arpl
cltd
adc
adc
pusha
adc
mov
mov
mov
xchg
jg
add
push
dec
adc
mov
xchg
xchg
loop
imul
jmp
jo
push
jge
and
scas
rclb
out
stos
and
or
fdivp
jle
dec
out
js
insl
xor
stos
mov
mov
cmp
mov
dec
and
mov
inc
xlat
mov
lods
push
stos
lcall
jge
xor
js
mov
pop
push
enter
test
push
mov
xchg
push
inc
inc
cmp
sbb
cld
outsb
push
pop
mov
fsubs
ja
mov
push
and
icebp
in
inc
push
adc
xchg
adc
repnz
mov
test
inc
out
rcrb
cmp
pop
push
sub
fstps
cwtl
pop
adc
xchg
stos
xorb
ret
jb
insl
dec
jnp
js
test
aas
aad
jp
add
xor
dec
mov
or
shl
ss
das
adc
jb
push
loopne
loopne
out
in
scas
jnp
dec
in
xlat
xor
mov
or
or
or
out
cmp
and
cmpsb
push
dec
mov
mov
aaa
dec
mov
pop
pop
push
jg
xor
jns
pop
sbb
insl
pop
pop
or
into
movl
xor
test
push
jo
fstps
mov
dec
mov
loope
rorb
mov
sbb
dec
leave
ret
lock
inc
cld
mov
mov
fisubrs
punpcklwd
sub
jg
add
out
icebp
ja
cmp
dec
xchg
inc
imul
jno
jae
fcmovb
push
mov
into
mov
cmpsl
xor
dec
outsl
push
push
sar
enter
dec
mov
lret
insl
ds
push
lret
out
inc
pop
cmp
mov
mov
mov
sarb
dec
xchg
push
std
scas
aaa
pushf
fisubs
iret
mov
rcrl
setne
sub
movsb
sbb
sbb
dec
jae
push
in
sub
or
stc
inc
jb
out
inc
fdivl
jbe
mov
clc
movl
or
push
and
pop
iret
stos
mov
mov
outsl
jp
ret
sahf
add
in
out
add
inc
cmpsb
ja
ja
mov
cwtl
mov
mov
shlb
cli
clc
xchg
jecxz
xchg
inc
int3
fxch
loopne
mov
aam
dec
cmp
outsl
cmp
push
ss
fidivs
data16
jns
xchg
and
sahf
xor
pop
jb
addr16
jg
sti
fildl
push
bound
sbb
pop
lahf
adc
insl
sbb
xor
mov
pushw
bound
outsb
sbb
sar
jno
aad
adc
aam
jb
jo
adc
jne
arpl
and
jmp
shlb
dec
mov
addr16
fildl
inc
int3
insb
jnp
inc
cmp
clc
cmpsl
rorl
lods
mov
aad
lds
mov
lret
bound
sahf
and
mov
jne
inc
sahf
sbb
lea
ret
outsl
das
xlat
fistl
cli
call
rcrb
lahf
aas
push
mov
rol
cmpsl
ja
or
hlt
mov
jne
inc
sti
xor
jne
stos
or
arpl
xlat
inc
int
stos
jmp
sbb
and
inc
outsl
leave
psubsw
inc
jbe
jecxz
pop
pop
lods
xchg
cltd
push
ret
imul
push
add
orb
in
pop
mov
lret
inc
stos
and
loope
outsb
mov
fnstcw
shll
pop
lret
aas
aas
int
mov
inc
or
inc
or
shll
jge
mov
sbb
push
inc
test
aaa
push
rclb
mov
xchg
dec
or
pop
inc
in
pop
xchg
fcompl
jmp
mov
scas
and
push
xchg
aam
aam
movsb
lret
cmp
pop
and
push
subl
in
push
mov
sbb
xlat
xchg
sub
cmp
xchg
ja
pushf
mov
push
in
subb
shrb
xchg
cltd
enter
loop
jecxz
or
jne
shrb
xor
addb
sbbb
jl
xacquire
insl
mov
aad
into
pop
mov
test
mov
pop
dec
idivw
lea
sbb
or
pop
xchg
cmc
fidivrs
int3
in
add
bsr
cmp
jne
and
sub
pop
push
mov
push
out
and
iret
mov
mov
or
insl
ss
mov
orl
pop
clc
out
cmp
stos
or
add
or
mov
lret
fucom
add
mov
jp
aad
mov
and
das
cwtl
popa
add
sbb
jae
addr16
test
ja
test
mov
mov
adc
add
scas
or
fsubr
insb
push
adc
sahf
sub
push
and
mov
fmulp
and
xchg
mov
add
cmp
push
mov
in
xor
sbb
dec
inc
cli
mov
lea
ret
cmp
add
xchg
mov
pop
arpl
je
movl
inc
test
xchg
cmp
xchg
push
xlat
js
leave
and
cwtl
inc
aam
xchg
cli
test
addr16
mov
cli
cs
aam
mov
adc
stos
outsb
sub
pop
int3
dec
in
cmpsl
ljmp
imul
adc
dec
aam
cmpb
roll
cmp
xchg
push
dec
or
cld
arpl
fsubp
sbb
call
dec
or
daa
movsb
div
movsb
sahf
movsb
dec
cmc
jae
mov
rorb
push
add
arpl
gs
inc
sbb
lds
fcmovb
inc
test
sbb
cmpsl
xor
aaa
movsl
sub
stc
mov
cld
sbb
mov
or
pusha
xchg
sahf
fcoms
lret
test
xlat
push
dec
bound
adc
pop
or
cmp
shl
ret
scas
test
xchg
add
ljmp
outsl
mov
adc
inc
in
movl
xchg
fsubrl
dec
ret
mov
cmp
outsb
fwait
loopne
cmpl
inc
loopne
mov
loope
inc
sub
sub
icebp
xchg
jbe
mov
mov
out
inc
loopne
in
test
xchg
mov
repnz
dec
loope
rolb
cld
sub
push
xchg
xchg
aaa
xchg
jge
sbb
cmpsl
jno
mov
insb
daa
mov
xor
stos
dec
int
add
xor
dec
inc
push
push
pop
dec
mov
push
push
dec
fwait
sti
pop
fdivp
pop
int
in
mov
xor
adc
xor
lcall
in
jnp
sub
cwtl
test
stc
xlat
rol
xor
adc
sti
bound
clc
test
sub
mov
add
rorb
push
push
sahf
jno
jmp
or
ret
test
mov
arpl
sqrtps
adc
xor
adc
jbe
jno
out
mov
or
fisubl
int3
test
mov
xlat
sahf
xor
lret
shr
in
enter
push
and
fld
scas
mov
or
pop
adc
jl
mov
imul
inc
push
jbe
mov
cmp
xor
pop
outsb
rcrl
xchg
sub
pop
push
sub
hlt
stos
mov
lcall
dec
je
jne
or
aam
mov
cmp
ret
pushf
mov
scas
loopne
xchg
cli
push
adc
pop
insb
add
xchg
pop
rclb
mov
shrl
sbb
movsb
push
mov
jge
push
mov
imul
shll
mov
cmc
push
adc
cli
imul
add
xchg
xchg
stc
add
ja
xchg
push
in
lcall
or
jbe
in
rcll
push
add
xchg
pushf
lahf
enter
orb
into
aam
xchg
inc
jbe
movsb
sti
std
movsb
pop
jge
je
leave
aad
and
or
xor
mov
mov
roll
and
iret
fwait
or
xchg
xchg
in
xchg
popw
mov
adc
pop
iret
dec
cltd
dec
pop
das
popa
add
push
or
cli
cwtl
bound
mov
adc
aaa
icebp
cld
leave
jae
in
jbe
aad
out
xlat
divb
loop
and
fwait
push
or
cmpsb
out
rclb
imul
jmp
lcall
inc
push
push
imul
mov
bound
cmp
xchg
stc
jnp
pushf
mull
sub
push
push
or
jb
adc
push
cld
xor
jns
push
loope
xor
jmp
jecxz
inc
fsubr
bound
addb
rcr
dec
ja
inc
pop
xor
popf
pop
mov
or
inc
fdivr
shlb
push
in
jp
push
cmc
push
or
jb
push
inc
cmp
adc
cli
fnstcw
std
popf
into
inc
dec
dec
fimull
cmp
andl
xchg
inc
test
out
std
mov
xchg
xor
aam
outsl
xchg
das
orl
rclb
push
pop
mov
lds
gs
jns
sbb
dec
pop
lahf
and
rorb
in
cmp
mov
mov
shl
rolb
dec
sub
and
dec
mov
xchg
sbb
xchg
ljmp
movsb
fstp
popf
cli
inc
rorl
fwait
clc
nop
mov
cmc
xor
mov
cmp
lods
jo
and
insb
or
push
fwait
mov
dec
fsubrs
iret
push
or
fimuls
push
in
movsl
lcall
pop
or
sub
push
out
pop
and
or
cltd
sbb
inc
out
push
mov
mov
pop
cmpsb
cmp
pop
and
lret
push
adc
dec
add
fmulp
stc
dec
aam
mov
dec
aaa
orb
std
xor
mov
cmp
xor
jge
repz
mov
fsubl
push
aas
push
sbb
fisubrl
dec
testb
cwtl
imul
iret
xchg
add
inc
add
fnstsw
daa
in
sub
pop
sbb
pusha
fcoml
clc
leave
fucomi
xchg
inc
mov
xor
insl
lret
scas
scas
sahf
or
daa
mov
jae
mov
fstps
xor
ds
jae
rcr
iret
inc
popa
or
xchg
mull
and
mov
outsb
fdiv
aad
icebp
lock
popa
mov
add
and
mov
push
leave
push
xor
mov
stc
pop
xor
jl
adc
incl
cli
push
dec
in
mov
notl
inc
fildll
out
ds
loop
mov
sbb
sbb
scas
jnp
sbbl
inc
mov
mov
notb
and
out
sti
int
test
cmp
pop
subb
pop
cwtl
arpl
inc
mov
outsl
daa
iret
jge
stc
fisttpll
imul
sysret
mov
movsb
mov
in
clc
enter
js
and
jg
mov
jp
pop
filds
dec
inc
js
xor
decb
fists
fbld
push
xchg
pop
dec
sbb
loop
xchg
sub
cmp
push
push
lret
lea
sub
outsb
jge
fnsave
xchg
inc
pop
sti
push
stc
sbb
and
jae
roll
mov
ret
mov
mov
xchg
or
loop
insl
mov
push
pop
iret
push
mov
lahf
dec
ljmp
and
xchg
mov
mov
dec
mov
sahf
clc
icebp
call
push
xchg
mov
push
xchg
orb
mov
loopne
sbb
mov
jl
fcmovb
repnz
push
sub
test
sub
mov
jb
enter
mov
repz
dec
out
push
pop
add
aas
cwtl
or
out
pusha
mov
ljmp
and
subl
mov
daa
or
iret
fsubp
ret
mov
adc
out
outsb
loop
jbe
movzwl
sbb
xchg
and
mov
mov
lret
dec
mov
fdivl
mov
mov
cmc
xor
aad
mov
stos
fs
xchg
mov
cmp
mov
xor
inc
ds
dec
cwtl
loopne
push
fld
cmp
stos
dec
and
out
lret
data16
xorb
jne
cmp
mov
cmpsl
fbstp
outsb
push
dec
sarb
cli
test
int3
push
push
pusha
lods
mov
cmp
lahf
repnz
lock
test
inc
fstpt
aam
cmp
shrl
mov
mov
jle
loopne
stos
push
fiadds
push
cld
mov
push
mov
xorl
jge
sti
ljmp
jbe
jnp
cmp
pop
jmp
lods
movsb
sbb
fmul
pop
lods
jg
xchg
mov
and
lret
into
dec
std
or
shlb
loopne
jmp
xchg
or
out
aas
dec
test
dec
das
inc
or
je
xchg
jb
and
cmp
sbb
xor
mov
sti
outsb
scas
adc
cld
jge
std
lds
cwtl
and
lcall
pop
in
cmp
mov
xchg
mov
pushf
scas
adc
out
cmp
mov
es
repnz
icebp
push
roll
test
mov
jmp
jg
adc
pop
xor
movsb
fwait
jmp
sbb
in
fstl
ljmp
ss
mov
sti
lods
xchg
in
hlt
pop
inc
push
fidivrl
mov
push
inc
pop
pop
mov
xchg
sbb
mov
call
fistps
jmp
aas
pop
mov
add
mov
rorl
sbb
in
xchg
insl
outsb
mov
nop
test
fs
mov
xor
xor
bound
shrl
insl
and
aam
and
gs
mov
pop
xchg
pop
or
pop
mov
jp
call
xor
aas
cmpsl
fsts
in
leave
xor
pop
cmp
pop
mov
push
adc
orl
arpl
mov
jae
mov
jl
cs
sbb
inc
push
test
mov
pop
dec
data16
jl
xchg
test
dec
add
sarl
add
xchg
sarl
sti
push
movsl
aas
pushf
rclb
shr
push
addr16
fdivrs
scas
pop
sub
fldt
sub
andb
add
jnp
mov
loop
inc
jae
push
icebp
out
mov
cltd
inc
push
cli
sbb
mov
xor
push
xor
ss
cli
xchg
push
push
sub
push
sbb
imull
inc
jnp
sub
mov
inc
out
pop
or
push
push
xor
scas
mov
stos
mov
push
rorb
outsl
mov
ds
pop
sub
stc
aaa
fldt
ret
addr16
scas
mov
dec
int
pusha
sti
loope
mov
pushf
cld
test
es
imul
jge
cmp
int
lods
jg
mov
mov
adc
ret
mov
xor
arpl
cmp
fcomps
fnstsw
mov
push
xor
testb
or
test
inc
sub
rorl
adc
decb
neg
adc
inc
cmp
cmp
xchg
pop
pop
or
push
jl
jnp
rol
movsl
lds
xor
sub
push
cmp
pop
adc
in
and
jbe
pop
repz
into
jp
out
jp
push
pop
push
sub
jl
add
rolb
mov
loop
mov
mov
push
mov
xchg
in
mov
sbb
fdivs
adc
fidivs
test
dec
ret
dec
pusha
dec
int
mov
push
outsl
test
imul
fwait
dec
lock
push
rolb
test
test
sbb
add
push
cli
stos
aaa
and
pushf
sti
nop
fidivrl
dec
or
fwait
out
sub
rcrb
xchg
stos
jae
es
jnp
xchg
iret
push
std
mov
fs
leave
clc
lahf
adc
xchg
inc
mov
and
jp
adc
outsl
sbb
and
sbbb
daa
je
scas
pop
jo
inc
xchg
inc
pop
push
repz
mov
xchg
idivb
push
mov
jg
xchg
push
cmp
sub
sarl
mov
in
lds
xor
adc
fisubl
test
inc
mov
add
shr
jmp
mov
insl
xor
les
adc
mov
or
bnd
xchg
cmp
dec
add
mov
data16
pop
loope
adc
repz
fldcw
bound
push
jmp
mov
xchg
sub
mov
fstps
lods
ret
test
loope
sub
mov
jg
data16
jbe
in
and
sub
cmp
cwtl
xchg
xchg
or
pop
sub
movsl
pop
pop
lea
in
jne
daa
mov
push
outsb
sti
and
xchg
push
adc
lea
addl
sbb
ficoml
pop
int3
cmp
insb
cmp
mov
jns
or
xchg
in
or
arpl
pop
mov
sti
out
adc
loop
sub
adcl
lods
je
lcall
xor
push
int3
xchg
mov
jo
into
cld
int3
mov
add
int
fists
subl
cmpsl
inc
loopne
aam
dec
jecxz
outsb
cltd
adc
or
push
mov
add
cwtl
inc
daa
addr16
adc
cmp
inc
bswap
add
push
js
aad
add
sbb
into
cltd
push
jo
pop
fsubs
into
gs
mov
das
push
aaa
neg
inc
insl
shl
mov
xchg
cmpsl
pop
clc
jp
int3
popa
xchg
test
inc
pop
cmp
jnp
cmp
js
je
push
jo
dec
pusha
movsl
arpl
push
add
std
loopne
xchg
xor
xchg
inc
cli
loope
shrb
mov
cli
int
jno
imul
cmc
xor
lock
loope
push
push
mov
pushf
int
nop
imul
xchg
sbb
adc
mov
xchg
push
arpl
mov
pop
outsl
and
and
adc
dec
push
and
xorb
sbb
dec
shll
icebp
dec
mov
sbb
sbb
lahf
xchg
fs
mov
test
hlt
sbb
into
sub
icebp
out
xchg
filds
xor
xorl
loop
xchg
in
jne
pop
stos
xchg
sub
outsl
pop
xchg
mov
dec
in
clc
adc
rcr
sub
push
int3
pop
addb
pop
shlb
sbb
inc
aam
push
adc
sar
fs
fnstcw
push
mov
or
pusha
pop
dec
aas
insl
or
cs
sub
lods
shrl
add
out
or
jecxz
xchg
fwait
mov
jne
xchg
out
sbb
jne
add
jg
add
outsb
fwait
dec
sarb
cli
xor
sbb
movsb
pop
dec
outsl
sbb
mov
or
jbe
cmpl
push
lock
lret
sahf
test
dec
ja
mov
test
dec
lret
or
call
jmp
fwait
jmp
insl
lret
stos
out
stos
sub
mov
shll
test
jl
and
lret
je
inc
mov
arpl
cmp
pop
enter
hlt
pop
adc
xchg
xchg
mov
xor
fnstenv
dec
and
sbb
dec
icebp
hlt
sub
es
inc
pusha
pop
dec
cli
or
jp
jns
aaa
xor
adc
cmc
popa
imul
stos
ret
dec
out
or
test
sbb
leave
add
mov
adcb
inc
or
xchg
pop
repz
cmp
in
cli
hlt
movsl
add
enter
aad
mov
rcrb
mov
scas
add
out
xor
cli
mov
pop
loopne
jge
pop
xor
and
and
sub
lcall
in
xchg
dec
jne
enter
cmp
adc
mov
arpl
mov
loopne
mov
mov
dec
mov
xor
repnz
xor
sub
shrl
sbb
cmp
pop
sbb
nop
adc
test
xchg
fwait
gs
push
add
js
lret
sub
arpl
leave
and
add
lods
cmc
les
aad
fdivrp
loop
dec
xor
pop
mov
fcom
in
daa
bound
sub
bsr
sbb
cmp
adc
push
out
jmp
shr
rorl
dec
add
iret
ljmp
pop
mov
dec
leave
enter
inc
jle
mov
fisttpl
outsb
ja
pop
sbbb
stos
sub
repnz
inc
insl
scas
enter
flds
push
push
xchg
std
hlt
and
xor
cmp
mov
mov
ret
je
sbb
xchg
mov
fdivrs
fstpl
push
data16
xchg
dec
popf
mov
mov
sub
add
in
xchg
cmpsl
mov
loop
aaa
mov
xrelease
dec
daa
les
lods
sub
call
sbb
leave
iret
xchg
sbb
stos
pop
in
pop
fcoml
xchg
movsb
sar
in
in
gs
xchg
outsl
nop
fwait
cmova
adc
repz
inc
stos
and
int
push
mov
insl
or
mov
scas
mov
pusha
jnp
dec
sub
mov
cltd
cmpsl
pop
push
add
mov
repz
subl
mov
add
iret
ds
lods
inc
call
pusha
outsb
mov
mov
repnz
or
push
mov
push
dec
ss
fidivs
xchg
push
inc
imul
cmp
test
fmull
sub
leave
loop
xchg
push
xor
pop
shrl
pop
jb
mov
jb
out
dec
jg
mov
dec
xchg
or
cwtl
popf
mov
int3
and
in
in
mov
addr16
or
int
cli
jb
inc
leave
fwait
loop
add
or
sti
jg
mov
jno
lret
mov
adc
in
ret
mov
lock
fcmove
pop
enter
push
outsl
lret
jl
adc
imul
adc
test
pushf
cmp
jo
mov
pop
in
pop
out
shll
enter
stos
fisttpl
insl
push
sbb
add
and
test
sub
jle
cmc
jecxz
into
scas
push
icebp
push
imul
push
push
cmpb
shrl
and
push
adc
add
lret
aas
lcall
cmc
cmp
pushf
out
xchg
dec
mov
add
push
ljmp
mov
into
pop
jecxz
inc
mov
xor
add
cmp
ss
mov
sahf
out
int3
ret
jnp
sbb
xchg
adc
push
push
sti
dec
popa
lods
and
jmp
adc
inc
movsl
ja
sub
jnp
aas
dec
dec
jns
les
testb
sub
int
or
adc
xor
cltd
push
outsb
or
mov
bound
scas
fcmovnbe
nop
and
fdivr
insl
mov
clc
ljmp
or
sbb
sbb
xchg
rorl
adcb
or
dec
lods
mov
cmp
in
mov
outsb
ret
and
fnstsw
ret
jne
subb
mov
adc
andb
xor
sub
jns
dec
add
cwtl
sbb
jg
inc
cmp
mov
mov
out
sub
imul
test
push
out
or
pop
mov
les
test
icebp
ds
jo
push
sub
in
jecxz
je
loopne
pop
or
dec
or
ljmp
xor
xlat
stc
stos
sub
movsl
and
pushf
adc
sub
fwait
out
or
lcall
mov
or
add
cli
jp
cmp
fcmove
lea
nop
in
call
mov
sub
cmpsl
jge
push
cs
pop
scas
cmpsb
aam
iret
dec
push
dec
out
dec
add
mov
mov
xor
pop
sbb
lahf
repz
into
ds
jecxz
enter
data16
notl
xchg
xchg
or
ret
loop
push
icebp
and
xor
outsb
imul
ja
sub
addl
mov
int
inc
in
sarl
jmp
mov
movsl
mov
xchg
fwait
comiss
pop
aas
xchg
mov
sub
test
or
mov
pop
jb
push
pop
dec
mov
test
enter
mov
and
push
mov
lahf
push
pop
xor
mov
subl
loop
inc
aas
mov
icebp
rolb
into
imul
xchg
stos
and
cmpsl
fiadds
fstps
insl
out
rorl
sar
pusha
jl
rolb
xchg
icebp
xchg
ja
rclb
cmpsl
shll
je
insl
cmpb
shlb
add
jp
xchg
hlt
jp
fs
and
jnp
mov
or
mov
xchg
dec
mov
mull
jo
jns
pop
test
add
icebp
mov
mov
daa
je
jns
mov
adc
mov
mov
adcb
add
mov
out
mov
arpl
or
je
ja
xchg
cltd
loope
lds
or
cmpsl
jnp
push
pop
cmp
cmp
add
in
and
pop
clc
test
vmptrst
pop
fisubrl
aam
mov
fsubrl
sbb
loopne
lret
mov
dec
mov
fdivrs
dec
cmpsb
jle
mov
lret
iret
mul
xchg
js
inc
fnsave
fbstp
xlat
jl
mov
leave
inc
jne
leave
sbb
pop
jp
xchg
lock
rcrl
shlb
cli
mov
mov
mov
ficompl
jmp
mov
stos
sbbb
pop
add
test
test
xchg
mov
cmp
cmp
sti
std
and
jle
je
jge
es
mov
imul
push
test
mov
mov
flds
xchg
adc
mov
xchg
jecxz
addr16
lea
cmp
cmp
xchg
stos
and
iret
mov
xchg
push
mov
mov
mov
popa
jb
xor
mov
sbb
filds
cmpsl
inc
xor
pop
xchg
dec
cmp
dec
xchg
or
mov
lcall
lret
cmp
mov
push
aad
aam
push
xchg
test
sbb
jle
dec
xor
pop
cmp
scas
lock
shll
adc
mov
icebp
daa
fisttps
out
stc
fcmovu
icebp
or
inc
std
push
hlt
add
daa
mov
fldenv
sbb
in
into
mov
daa
lods
or
divb
mov
hlt
sti
incb
dec
push
pushf
pop
arpl
jae
pusha
icebp
pop
inc
daa
mov
pop
popf
daa
xchg
stos
mov
hlt
adc
inc
mov
mov
adc
fwait
inc
adc
lret
sub
aas
into
jp
lret
outsl
push
in
jno
dec
push
cmp
cmpsl
cmp
lock
xchg
mov
xchg
inc
xor
pusha
add
jnp
dec
or
mov
jno
enter
dec
inc
inc
lods
add
mov
iret
imul
xchg
pop
loope
mov
mov
arpl
enter
aam
in
enter
inc
sahf
in
je
xlat
lahf
fildl
icebp
jecxz
jecxz
hlt
jp
outsl
jmp
fidivs
jg
in
cwtl
clc
rolb
scas
xchg
and
cmp
bound
sbbb
ss
fmull
pop
inc
imul
mov
repz
inc
mov
stos
cwtl
leave
pop
jmp
test
shlb
sbb
and
insl
hlt
xor
mov
add
mov
ret
sbb
das
xor
imul
pop
inc
inc
imul
push
cmpsb
jmp
lcall
aaa
add
add
inc
xor
sbb
jae
mov
mov
and
xchg
nop
gs
bound
add
mov
je
sbb
sub
mov
xor
pusha
gs
pop
and
jbe,pt
fdivl
into
shlb
aad
subl
fs
mov
leave
stos
scas
add
scas
out
insl
rep
xchg
dec
add
leave
adcl
es
nop
xor
ss
loopne
mov
lock
imul
mov
xchg
mov
push
call
mov
sbb
cs
or
sbb
or
jge
sub
sbb
repnz
inc
sbb
imul
pushf
sbb
or
jnp
cmpl
cmp
into
mov
repz
jge
cld
popa
je
cwtl
repz
add
or
mov
ss
push
daa
dec
outsl
clc
push
sub
aam
ret
fimuls
jae
sbb
das
xchg
fcmovne
sub
out
cwtl
outsb
sbbl
pop
sbb
lock
stos
out
loope
xor
rorl
ficoml
mov
pop
mov
test
sbb
jo
out
rcrl
mov
sub
push
or
push
sub
scas
ror
push
dec
mov
cltd
fs
and
add
enter
sub
subb
mov
bound
repz
fimuls
push
xor
cmp
lods
cmpb
pop
mov
mov
pop
in
in
loope
mov
sub
mov
call
dec
jne
push
jp
dec
fistps
in
dec
adc
cmp
loop
adcb
inc
sbb
cwtl
lods
cltd
mov
test
cmp
mov
and
scas
ret
adc
scas
in
fs
push
xor
push
xchg
call
jb
or
aam
jle
pop
aad
lods
cmpsl
rcr
js
js
aas
fiadds
insb
fimuls
aas
push
imul
xor
punpckldq
pop
jnp
push
xchg
out
stos
lods
repz
pop
jo
add
jo
add
daa
leave
mov
xchg
add
js
xchg
jbe
std
cwtl
add
daa
lret
xchg
shlb
xchg
sbbb
popf
popf
dec
fisubrl
pop
mov
rcll
push
jle
inc
xor
add
and
xlat
ret
inc
nop
cmp
mov
inc
xchg
in
rorb
ret
cld
sub
pop
data16
pop
mov
dec
lods
xor
outsl
test
pop
xchg
pop
les
dec
sarl
jmp
push
outsl
pop
xor
xor
mov
cbtw
shr
into
js
mov
pop
sbb
div
push
adc
dec
jg
scas
stc
adc
ja
sarl
pinsrw
push
test
into
jge
xchg
inc
jge
dec
add
and
movd
pusha
inc
lods
xchg
test
jmp
jbe
jne
lret
cmp
lahf
mov
xchg
push
jp
stos
fcmovu
in
clc
add
sbb
ret
push
push
dec
dec
jns
inc
push
dec
add
mov
orl
pop
iret
cltd
or
ret
or
pop
xchg
mov
cmp
test
fisubl
mov
arpl
xchg
inc
imul
pop
mov
rorl
cld
push
aas
or
fbstp
out
add
repz
cmp
movsb
daa
add
cmc
mov
add
ret
pop
cmp
in
gs
pop
or
cmp
scas
xchg
mov
ljmp
jo
jne
ficoml
lock
mov
decb
or
sub
and
inc
push
add
ss
and
jae
pop
cmpsb
sbb
xor
adc
loop
fadds
movsl
pop
inc
fwait
lahf
add
pop
pop
push
push
pop
aas
pusha
cltd
movsl
push
cld
dec
pop
jle
les
test
mov
xchg
inc
or
xchg
out
rcrb
mov
adc
leave
jle
jmp
mov
arpl
inc
lret
xlat
mov
int3
in
mov
and
cmp
int3
mov
sub
xchg
mov
mov
mov
adc
lods
cwtl
cmp
mov
pop
xchg
inc
mov
or
inc
fst
dec
mov
push
jne
pop
aam
cmc
dec
pop
movsl
in
cmc
cmp
sbb
push
sbb
inc
arpl
mov
ljmp
lock
loopne
xchg
jno
push
push
inc
call
dec
mov
mov
stos
jp,pt
loope
inc
inc
adc
push
mov
xor
in
add
mov
lahf
arpl
popa
jns
xchg
mov
mov
lods
inc
push
xchg
sub
lods
aaa
add
popf
cli
into
gs
in
sub
add
movsl
in
shrb
pop
push
sbb
cmp
xchg
jo
scas
push
aaa
sub
or
fdiv
imul
sub
popa
movl
je
imul
sbb
xchg
aad
shll
cmp
adc
mov
clc
or
or
scas
or
testb
fucomip
or
pusha
mov
jecxz
stos
sub
testl
jns
ja
xchg
mov
scas
pop
xor
lret
add
push
insb
sub
out
outsb
stos
icebp
popf
mov
push
add
fcom
sahf
or
jne
sarl
jg
mov
pop
dec
in
js
xchg
xor
sbb
mov
jb
mov
fcmovb
mov
push
mov
sbb
or
loope
xlat
cmpsb
lret
mov
mov
jnp
sbb
and
or
xchg
stos
adc
mov
add
fwait
rorl
daa
sbb
cmc
pop
in
outsb
and
call
dec
push
gs
and
or
sub
or
test
test
idiv
outsb
inc
aas
loope
in
jnp
xor
in
fistpll
sarb
shll
add
aad
cmp
fwait
arpl
stos
in
pop
mov
aam
lahf
arpl
cwtl
int
sub
sbb
nop
ret
add
pop
repz
sub
and
mov
shrb
rcl
cwtl
sub
push
mov
nop
arpl
mov
leave
daa
rcrl
and
outsb
cwtl
or
std
cmc
or
mov
test
pop
sbb
pop
xchg
nop
enter
add
call
decl
mov
fldln2
inc
add
push
fwait
popf
lods
xchg
out
enter
xchg
push
cmpsl
mov
jle
ds
xor
pop
pusha
pop
cmpsl
adc
dec
xchg
add
cld
nop
int
mov
es
iret
mov
inc
sbb
cmp
mov
ret
jge
fninit
mov
vmread
inc
imul
and
xchg
fwait
pop
int
popf
cmp
arpl
in
loopne
push
jbe
stos
cmp
call
cmpsb
push
dec
jge
fiadds
inc
pop
out
in
mov
mov
out
scas
mov
mov
ror
push
xor
repz
and
out
pushf
jmp
test
adc
dec
mov
idiv
mov
addb
inc
test
cmp
int
loopne
test
sub
mov
fmulp
xor
and
or
mov
xor
fildll
loopne
jle
cmc
gs
mov
inc
add
sbb
inc
int
je
cmpsb
dec
xor
outsb
inc
mov
or
movl
les
decb
or
jnp
jl
mov
lea
jle
xchg
push
ja
movsb
adc
push
stos
and
lret
adc
shll
in
mov
std
scas
mov
outsl
or
scas
dec
pop
mov
cmp
idivb
mov
sbb
jle
sub
imul
mov
pop
xchg
lds
sub
cwtl
xchg
fdivrl
or
sahf
inc
mov
call
push
mov
cmp
ljmp
add
scas
or
daa
outsb
int
and
cld
sub
mov
add
dec
jo
cmp
jmp
mov
cli
dec
adc
xor
out
loopne
xor
in
sbb
test
xor
jb
jp
imul
jp
adc
inc
insb
imul
mov
addr16
push
xor
xchg
jg
test
add
clc
xlat
call
cmpsb
in
outsb
ficompl
lds
pop
sub
cltd
xchg
push
test
xor
cmpsl
dec
loopne
das
sbb
pusha
add
shll
adc
sub
into
test
mov
cmp
cmp
cmp
fnstsw
sub
test
push
stos
in
js
sub
sub
and
pop
cmp
movsl
cmpsb
xor
cmp
and
and
scas
and
int3
mov
out
push
xchg
cs
mov
add
cs
fsubl
lea
mov
hlt
sbb
xor
push
dec
or
sbb
mov
scas
test
mov
mov
movntq
out
adc
aas
mov
mov
js
sub
inc
mov
mov
dec
leave
gs
leave
les
mov
mov
outsb
sbb
push
cwtl
loop
push
jle
jae
cmc
mov
popa
xor
push
shlb
xlat
mov
jno
sbb
jp
fisubs
pop
inc
fsts
push
pusha
push
clc
mov
movsb
lods
ljmp
iret
jb
or
loopne
dec
aas
mov
xchg
scas
adc
xchg
pop
push
fmull
gs
outsl
cmp
inc
xchg
fsubl
es
add
movsb
cwtl
iret
jnp
jns
cmp
inc
into
push
inc
daa
add
iret
cmpsl
xchg
imul
popf
in
call
iret
es
test
f2xm1
sbb
ret
imul
sbb
add
dec
negl
je
pop
int
mov
jns
jmp
push
mov
leave
enter
out
sbb
sbb
frstor
aad
sbb
cmc
out
insb
in
dec
sbb
push
mov
push
lods
insl
add
imul
mov
fsubrl
pop
add
flds
mov
jmp
insl
test
loop
mov
fsubs
ljmp
mov
ret
movsl
stos
fisttps
dec
dec
push
dec
push
jle
dec
xchg
inc
adc
out
cmp
dec
fisubrs
cmpsl
call
mov
vpmacsdql
aam
jne
orb
pop
aad
xchg
or
adc
das
out
cwtl
sub
inc
mov
js
out
pop
pop
add
sbb
xor
popf
pusha
and
in
inc
popf
mov
fstpl
jbe
shlb
dec
mov
mov
fidivrs
lds
jo
push
cltd
popf
and
xchg
rorb
jbe
call
dec
mov
aas
sarl
mov
in
mov
lea
loop
loopne
stos
mov
ss
loop
out
in
es
into
pop
inc
push
ja
les
test
mov
adc
iret
repnz
lcall
sbbl
loope
add
fwait
and
nop
pop
sub
xlat
and
rcrl
and
pop
rcl
and
push
sbb
addr16
jmp
jb
pop
mov
jb
jmp
dec
sahf
or
mulb
inc
loope
popf
inc
adc
cwtl
jmp
lds
or
clc
xchg
dec
add
test
add
mov
rcrb
pushf
or
mov
aas
mov
xchg
insb
or
nop
out
sarb
roll
aam
jmp
mov
sub
cmp
mov
jo
iret
idiv
or
sbb
xchg
test
outsb
int3
or
pop
add
push
xor
add
dec
xlat
dec
fucom
rcrb
cmp
sbb
lea
jo
dec
gs
or
aam
stc
add
inc
mov
jle
mov
adc
adc
testl
mov
sbb
int
movsl
inc
outsl
lret
xor
cmp
fldlg2
sub
dec
aaa
xlat
lcall
mov
fnsave
mov
mov
jb
xchg
or
cmp
xor
lcall
ss
iret
or
stos
aaa
jnp
xor
mov
mov
fmulp
cmp
add
pop
xor
inc
sub
mov
mov
jnp
cmpsb
andb
sbb
iret
insl
adc
jmp
inc
inc
mov
lret
rcl
pop
data16
in
push
dec
jo
sbb
stos
lret
in
dec
loop
and
xor
data16
insl
pop
rcr
add
dec
shl
test
outsl
mov
lret
addr16
jge
loop
test
pop
dec
fisubrl
push
shlb
orb
jl
mov
cmp
jl
rcrb
push
add
movsl
cs
das
popf
int3
add
mov
xor
shll
mov
cmp
xor
cmp
int3
fs
xlat
jo
in
pushf
fs
cli
loop
dec
sub
xchg
jl
push
adc
sbb
jg
mov
adc
andb
and
xor
pop
or
jo
dec
mov
rol
mov
leave
ja
push
jmp
addr16
jecxz
daa
in
sub
jno
std
push
mov
inc
ja
fisubs
pop
sub
mov
add
pusha
fldcw
aas
adc
mov
sbb
mov
mov
in
lods
xorb
mov
mov
adc
xor
mov
jmp
test
mov
mov
pop
xchg
dec
and
jbe
cmc
mov
iret
inc
push
in
mov
lds
push
enter
dec
pop
push
sti
int
popa
and
stos
and
or
into
add
xor
and
les
xchg
or
pop
out
loope
push
cltd
test
dec
pushf
mov
ss
dec
inc
jmp
dec
xlat
movsl
mov
aam
mov
pusha
aam
aam
jo
out
and
lea
sbb
fldt
arpl
cmp
outsl
jp
aaa
sub
sub
stc
les
dec
filds
or
loop
or
daa
scas
sbb
and
jg
stc
xchg
mov
test
stos
les
cltd
lods
fnstsw
add
ljmp
and
repz
or
jmp
scas
fiadds
mov
fsts
pop
movsl
imul
sub
dec
xchg
xchg
arpl
mov
addr16
push
xor
int3
gs
aaa
cld
stos
pop
std
test
cmp
test
cmp
xchg
sub
mov
jne
and
jecxz
xor
ret
push
test
inc
fisubl
push
sub
or
cmp
sbb
sbb
cmp
call
and
mov
shll
xorb
loope
jne
mov
inc
add
or
jecxz
subb
icebp
lret
adc
in
fdivs
ss
scas
cmp
mov
ss
rorb
xchg
js
xchg
leave
jp
mov
cld
iret
leave
fstpl
lds
mov
dec
dec
xchg
pop
and
jno
daa
dec
sub
test
test
repnz
nop
push
cmp
xor
jge
and
xchg
mov
mov
push
in
mov
cli
inc
stos
rep
lods
sbb
dec
pop
cltd
inc
mov
pop
adc
lcall
ja
inc
xor
ficompl
inc
into
movsb
sub
dec
faddl
or
mov
dec
fldcw
sbb
cltd
sahf
cmc
pop
mov
ror
xor
jb
inc
loopne
and
sbb
aas
fcompl
push
pop
jo
aad
fucomp
out
addr16
les
xchg
push
mov
push
rcl
mov
das
rcrl
mov
enter
ficomps
mov
dec
in
xor
iret
cli
mov
sbb
xchg
nop
and
sbb
jnp
mov
mov
inc
out
je
pop
jl
xchg
mov
cmp
pop
out
mov
pop
lods
pop
stc
add
movsl
test
es
mov
adc
imul
jns
push
in
pop
mov
es
mov
add
adc
mov
xor
cmp
mov
xchg
cltd
enter
pop
jb
sub
aam
nop
push
dec
or
fadds
mov
jbe
outsb
leave
lret
ljmp
sbb
popa
lret
xor
leave
dec
mov
mov
push
add
ljmp
push
mov
movb
push
cmp
arpl
push
mov
sbb
pop
adc
scas
adc
rcrb
mov
ror
fucomp
je
bound
stos
je
ja
pop
sub
mov
inc
dec
adcb
sbb
test
cli
cmpsb
xchg
bound
and
or
xor
sub
test
outsb
inc
je
arpl
xor
outsb
inc
sti
and
mov
mov
jle
fstpl
mov
jbe
gs
cld
mov
leave
ret
hlt
pop
xor
cmc
cmpsb
mov
ds
flds
ja
pop
addr16
add
inc
adc
pop
lahf
repz
xor
add
rorl
mov
inc
push
and
adc
mov
cmpsl
jns
add
cmp
jo
fidivrl
fimull
jo
out
jo
xchg
stc
fwait
shrl
call
sub
inc
mov
add
adc
fiadds
or
fs
jbe
add
repz
cmpsl
and
xor
push
movsb
sbb
mov
dec
movsb
push
mov
ss
fwait
repnz
xor
inc
mov
xchg
nop
test
xchg
jbe
out
data16
lds
aam
test
subl
or
jae
js
lods
int3
mov
mov
xchg
xchg
xor
lret
jge
jecxz
pop
jae
cmp
dec
subb
jb
pop
enter
xchg
icebp
fsubl
mov
jmp
mov
mov
daa
clc
fdivr
js
lret
add
ret
sub
or
xchg
xor
pop
aam
cmp
addr16
rorl
push
xor
sub
fnstsw
test
cmpsb
test
jb
rdmsr
outsb
mov
aaa
push
shr
js
cmp
loopne
int
xlat
cmp
scas
sub
popf
push
xchg
loope,pn
fdivr
xchg
pop
cmc
aam
pushf
mov
cmpsb
cmc
push
popf
inc
fsubrs
pop
mov
sub
mulb
pop
jp
insl
sahf
xor
sub
andb
pusha
fs
arpl
add
mov
sbb
and
jb
and
and
fcompl
insb
sbb
push
jmp
out
imul
je
add
cmc
popa
aad
mov
test
mov
push
jle
pop
cmp
mov
jg
int
or
shll
pop
pop
rorb
out
xor
jns
jb
push
xor
dec
cmp
xor
dec
mov
xchg
lea
or
in
or
mov
mov
gs
loop
lcall
pushf
xor
cltd
push
adc
cmp
xchg
mov
ljmp
adc
push
xchg
icebp
pop
and
jnp
xchg
in
jb
lahf
xor
jo
nop
add
test
and
movsb
out
test
sub
rcrl
aas
mov
jns
dec
int
inc
lods
xlat
push
daa
xchg
cs
adc
hlt
xchg
aam
jae
pop
icebp
mov
inc
cmpsb
orb
popa
jns
int
jmp
scas
pusha
jae
cmp
dec
sbb
mov
cmpsl
loopne
test
loop
mov
mov
es
ds
lock
and
scas
pushf
jmp
add
movsb
mov
cmp
jg
mov
xlat
into
pop
loop
call
add
push
push
ret
cmpsl
imul
fstpl
sbbb
xor
vcvttsd2si
dec
xor
add
dec
xor
clc
in
mov
xchg
inc
shrl
adc
addl
in
xchg
jge
and
imul
cld
add
jnp
out
outsl
push
push
movsl
pop
sbb
xchg
pushf
rolb
cmpsb
mov
ljmp
push
dec
lret
sub
imul
out
in
rorl
in
jmp
imul
enter
jnp
inc
std
and
cli
pop
mov
jge
test
loopne
adc
mov
or
test
movsl
add
xchg
js
je
jecxz
test
pop
sub
hlt
adc
or
add
repnz
inc
mov
fld
loope
fld
adc
test
js
movsl
inc
stc
leave
fdivr
fcomps
sub
push
addr16
loopne
sub
mov
loop
scas
nop
adc
fstps
push
test
jo
es
aam
lods
push
imul
cmp
ja
push
in
xor
ljmp
jnp
xchg
outsl
jbe
cld
clc
or
lcall
push
ret
js
add
loopne
jne
scas
addr16
mov
ret
fsubl
jno
lods
cwtl
xchg
and
inc
mov
clc
stos
push
iret
sbb
outsb
mull
outsl
sbb
pushf
adc
pop
xchg
or
loope
dec
bnd
or
daa
iret
xor
out
or
cltd
pop
mov
lcall
pop
jnp
sbb
fsubs
inc
cmpsb
ljmp
xor
stos
cmp
or
lods
jle
lret
mov
xor
add
cmp
mov
mov
cmc
push
adc
ret
rol
inc
and
icebp
sahf
testl
xchg
push
shlb
fimull
iret
xor
mov
mov
cmp
mov
xor
gs
pop
add
mov
out
dec
sub
jae
je
add
test
mov
cwtl
imul
cmpsb
in
mov
int
outsb
or
popa
pop
out
pop
or
in
mov
sbb
cmc
or
sbb
dec
sub
cmpsb
loop
xor
fstpl
lretw
xor
adc
mov
xchg
pusha
jo
jne
push
cld
mov
mov
inc
jl
je,pn
enter
inc
jg
rorl
push
sti
mov
push
stos
mov
cvtps2pd
push
xor
adc
call
or
adc
or
push
and
mov
pushf
out
xor
call
mov
shll
mov
repnz
lods
ds
iret
test
imul
or
daa
popf
pop
cmpb
cltd
cltd
mov
xchg
mov
mov
and
ds
sbb
out
ret
and
push
xor
adc
mov
mov
mov
nop
mov
cwtl
out
fsubrs
hlt
pop
int
xor
pxor
dec
outsl
movsb
jae
es
add
mov
scas
sti
xor
fildl
mov
jge
inc
clc
aad
xchg
fnsave
cltd
pop
inc
push
into
add
in
sub
mov
fstp
mov
test
jb
lret
ja
pop
xor
push
and
mov
mov
les
scas
test
stos
xchg
jo
out
and
clc
mov
rol
lods
in
jecxz
pop
jnp
dec
test
outsl
aas
cmp
call
mov
and
xchg
je
jecxz
stos
mov
jp
jl
xor
jo
ja
cmp
xchg
sbb
cmp
pop
lret
scas
mov
ret
scas
jae
popa
aam
popf
inc
xchg
sub
mov
sub
out
jae
pop
and
jbe
lods
ds
jmp
add
push
mov
cmc
in
out
fdiv
xor
scas
lea
jne
sbb
dec
mov
push
icebp
js
fiadds
cmpsl
insl
testl
push
repnz
lret
icebp
sarl
inc
jo
arpl
inc
data16
push
mov
pop
and
in
repnz
hlt
cs
push
and
aad
sub
icebp
mov
push
add
mov
adc
inc
mov
ljmp
push
test
jl
lock
inc
xchg
sub
cmpb
cwtl
mov
daa
rcrb
test
mov
cld
test
loope
test
mov
cmpsb
sub
inc
test
xchg
lahf
rclb
xor
sahf
out
in
ljmp
cltd
dec
les
cli
mov
xor
cmp
xorl
pop
dec
push
aaa
mov
sub
push
sub
mov
mov
mov
jmp
adc
adc
arpl
mov
fcmovbe
cmp
fildll
fwait
loopne
push
mov
popf
fbld
push
repnz
mov
or
and
xor
les
sub
je
sub
arpl
int3
push
out
das
shr
sbb
rcrb
bsf
jmp
pusha
notl
inc
sbb
test
mov
loopne
sub
test
mov
sub
sbb
cli
mul
subb
jo
js
scas
jb
rclb
push
push
subb
push
out
fiaddl
add
mov
add
or
fsubr
cmp
loop
fists
pusha
push
sub
jmp
mov
ret
dec
sbb
push
jmp
fldlg2
sahf
or
mov
shll
mov
mov
mov
fmull
or
repz
scas
mov
sti
lcall
jg
lahf
scas
cltd
mov
rorb
andb
push
xchg
in
sbb
xor
mov
sub
cltd
mov
test
push
out
push
jge
bndldx
call
and
mov
mov
push
adc
pushf
in
dec
mov
jo
idivl
inc
cltd
pusha
loope
inc
int3
jnp
and
xchg
movsb
inc
nop
mov
mov
inc
mov
sub
mov
fimull
in
shrl
jge
xchg
insl
sbbb
adc
insl
scas
jecxz
sub
cmpsl
inc
jo
stos
push
pop
fsubrl
xchg
pop
loop
cs
stc
mull
cmp
scas
in
insl
add
cli
sub
jge
or
sub
hlt
pop
sbb
out
and
inc
sbb
sub
fisubl
popf
inc
adc
fisubl
out
loope
sub
push
mov
inc
dec
mov
mov
or
cmp
cltd
cmpsb
stos
fiaddl
call
cltd
xchg
push
push
stos
xor
mov
push
pop
ss
loope
mov
in
xadd
jmp
addl
jo
popl
subb
popa
xchg
scas
add
addr16
repz
inc
data16
bound
mov
jge
add
push
ret
xchg
xchg
pop
cld
dec
xor
push
mov
push
mov
or
pop
dec
jp
push
push
sbb
push
mov
popf
je
mov
insb
xor
mov
test
mov
or
popa
les
lret
loope
dec
xchg
push
fs
dec
testb
fimuls
mov
shll
cmp
or
jbe
in
sub
in
mov
pusha
pop
adc
mov
push
push
icebp
test
xchg
add
mov
cmp
push
cli
xchg
into
adc
fmull
xor
adcb
xchg
insl
sub
fstl
call
mov
fstpl
out
mov
xchg
iret
add
jns
xor
repz
outsb
sbb
xchg
lret
inc
adc
jecxz
nop
cmc
xchg
push
xchg
cs
lock
leave
outsb
jl
add
sbb
lods
dec
fistpll
mov
sbb
mov
das
mov
in
push
outsl
adc
ret
push
jecxz
lods
out
mov
push
test
test
fsts
data16
div
mov
mov
push
icebp
daa
imul
out
nop
add
sahf
adc
mov
lds
push
dec
icebp
imul
and
or
cmpsb
and
inc
push
jg
pusha
enter
or
ljmp
pop
sub
mov
cmpsb
dec
mov
fisubl
pusha
push
dec
jmp
loope
nopl
aas
mov
mov
jl
fdivrp
jb
push
aas
mov
mov
or
push
sub
adc
xorl
int
data16
push
sub
loope
sub
pop
cmp
xor
sahf
mov
les
test
subl
cmp
add
mov
inc
into
ss
mov
xor
fadd
jmp
pop
jmp
inc
arpl
insl
shll
loop
pushw
out
jo
xor
xchg
aam
sbb
mulb
testl
fsubl
jns
sar
push
pop
out
lcall
jae
sti
aam
jbe
jmp
adc
shlb
jnp
and
das
mov
pushf
pusha
popa
add
les
mov
inc
xchg
inc
rclb
xchg
cmp
push
nop
lcall
mov
mov
and
mov
sbb
xor
lods
adc
mov
cwtl
or
cmpsl
ret
movsb
mov
pop
in
xor
push
aad
in
insl
mov
dec
pushf
mov
mov
outsb
add
sbb
std
and
sarl
pop
sbb
xchg
cltd
daa
jmp
nop
mov
dec
scas
fists
mov
push
xchg
xchg
repz
cmp
hlt
inc
xchg
mov
pusha
cmpb
cmp
subl
mov
mov
jno
push
dec
adc
adc
push
arpl
adc
cld
mov
cmp
dec
xchg
outsb
add
cld
cmp
ret
outsb
xor
sub
xchg
popl
xlat
mov
les
cmp
push
xor
dec
jb
cmp
out
fwait
sbb
cmp
repnz
sahf
jp
repz
lock
sub
xlat
push
sub
inc
sbb
mov
mov
jb
cltd
adc
out
push
pop
inc
fld1
addl
mov
mov
inc
add
and
sbb
stos
ret
lahf
inc
loopne
mov
cmp
stos
or
int3
js
jae
or
daa
jge
xchg
or
adc
mov
in
push
clc
lods
mov
jmp
dec
das
sub
lods
mov
shl
dec
cmp
mov
push
movsl
mov
dec
jge
into
les
cmpsb
jge
insb
les
idiv
das
mov
daa
mov
lods
xor
mov
das
adc
addl
fsubl
mov
or
ljmp
mov
ljmp
scas
mov
andl
sbb
out
je
xchg
cmp
out
outsb
insb
or
mov
mov
addr16
stc
loop
ret
jge
mov
scas
imul
cli
mov
fwait
xlat
push
cmp
pop
jne
xchg
jbe
mov
jg
sub
sti
ja
push
sub
sbb
imul
jmp
imul
leave
scas
mov
pop
sub
add
loopne
arpl
jns
pusha
dec
mov
aad
mov
xor
mov
incb
clc
push
jle
or
int
incb
and
xchg
mov
lret
inc
cwtl
test
sub
mov
imul
lods
int
fiadds
sbb
jno
sti
mov
cld
inc
gs
mov
nop
popf
lahf
xchg
call
insl
data16
mov
add
jmp
imul
jo
iret
or
sbb
lahf
aaa
dec
push
arpl
jle
repnz
push
test
std
push
add
push
iret
dec
push
mul
incb
mov
mov
cmpb
add
adc
jp
out
jl
or
jns
stc
and
xchg
ret
aam
inc
push
inc
es
dec
pop
pop
daa
and
xor
jne
jmp
lahf
cli
lods
or
adc
ret
or
imul
shll
imul
push
dec
leave
movsl
imul
pop
stos
jle
xchg
in
in
mov
mov
xchg
xchg
pop
daa
ljmp
add
or
dec
cmp
jne
add
mov
xor
pop
addl
push
jo
scas
inc
jbe
adc
push
push
filds
cmp
rcrb
mov
cmp
mov
and
ret
in
mov
xlat
das
mov
jg
mov
neg
add
jge
mov
cmpsb
mov
pop
dec
inc
xchg
aas
aad
iret
pop
test
idivb
sbb
push
push
pop
lods
lods
ja
fwait
or
lea
xchg
lods
dec
loopne
mov
stc
mov
fwait
push
jp
fistps
dec
cmp
push
mov
fisttps
xor
sbb
ss
movsl
clc
sub
movsl
mov
or
popa
pop
inc
mov
jb
arpl
xlat
push
or
jne
add
imul
scas
cmp
pop
repz
push
gs
js
jno
or
pop
xchg
int
or
ret
aas
call
dec
and
push
push
or
test
jne
cmp
push
xchg
cwtl
sbb
pop
jo
jle
xchg
and
dec
les
mov
adc
cmpsb
loopne
icebp
xchg
lock
pop
dec
inc
pop
dec
mov
ds
lea
fldl
cmpb
pop
fildl
xchg
add
fimull
push
dec
fistpll
rorb
push
popa
stc
push
fimuls
xlat
js
loopne
adc
iret
test
movsl
fcoml
out
outsl
scas
rcr
popa
xchg
cmp
fstps
and
jp
ljmp
sbb
int
loopne
sub
dec
std
xor
mov
pusha
clc
andl
xchg
and
sub
add
mov
and
jb
fsubs
dec
inc
mov
cmc
cmp
daa
push
jp
xor
jmp
notl
mov
das
cltd
xor
sub
adc
xchg
out
mov
xor
sbb
inc
cld
insl
sub
lahf
mov
and
sbb
push
adc
sub
test
xchg
arpl
mov
stc
adcl
fidivs
fists
stos
dec
into
xor
divb
mov
mov
in
mov
imul
loopne
in
gs
or
cmp
fstpt
push
pop
add
and
fldenv
mov
mov
loop
fimuls
sbb
jge
xor
aad
movsl
shl
cmp
mov
lahf
stc
test
lahf
cmp
pop
iret
jge
or
jo
dec
jno
mov
and
fidivl
jo
in
cmpsl
lods
movsl
and
jmp
fucom
fsubr
mov
xchg
into
add
bound
imul
lahf
mov
leave
xchg
sub
lods
push
dec
pop
loope
push
adc
mov
jecxz
cmp
rcr
jmp
bound
aam
adc
push
iret
out
add
int3
adc
push
pop
scas
sbb
dec
or
lahf
insl
pop
fmull
push
movsl
sub
mov
fcomps
in
jecxz
adc
enter
mov
popf
mov
lret
xor
dec
pop
ja
inc
inc
mov
into
clc
lcall
hlt
das
popa
or
ret
dec
aam
lock
and
imul
mov
jge
jecxz
fimull
je
out
and
in
mov
push
repnz
mov
jmp
clc
ja
xchg
jns
mov
pushf
cli
push
fwait
or
sub
xor
push
inc
add
je
push
jl
sub
and
pop
push
loop
jge
jb
sbb
dec
gs
leave
js
ds
jg
loop
pop
jg
jl
xchg
cmp
inc
pop
mov
lret
mov
pop
icebp
mov
push
rcll
xor
and
jmp
mov
mov
xchg
mov
xchg
jne
xchg
fsubs
mov
xchg
lea
jmp
sbb
sub
xchg
dec
dec
stos
mov
stc
int3
lock
pushf
ja
inc
cwtl
push
popf
and
push
mov
jbe
pop
adc
jae
add
xchg
fdivl
sbb
lea
mov
or
adc
iret
add
mov
cmpb
pop
push
pop
roll
sub
ljmp
or
mov
pop
push
movsb
mov
rcll
jo
es
in
fildl
outsb
call
ficomps
insl
cld
aaa
cmp
adc
add
in
or
push
lret
sti
loopne
push
mov
and
xchg
ffree
add
fimuls
outsb
clc
jmp
arpl
mov
test
je
xchg
sub
mov
mov
je
jecxz
divb
pop
inc
jg
imul
scas
push
in
das
and
add
mov
inc
inc
aad
or
repz
xchg
dec
mov
test
dec
mov
frstor
test
jp
cwtl
dec
jae
test
rcll
leave
pop
sbb
outsl
xor
xlat
sub
mov
xchg
mov
mov
fildl
xor
or
or
popa
and
rcrb
and
popf
jnp
sti
inc
mov
mov
int3
mov
cld
sub
movsb
test
add
loopne
popf
jne
enter
gs
pop
mov
mov
or
adc
mov
pop
adc
incl
inc
add
mov
idivb
orb
mov
inc
mov
jnp
add
testb
icebp
movsb
and
hlt
dec
aas
pusha
dec
lods
mov
mov
in
test
and
lea
mov
ret
test
or
xchg
jns
or
jmp
stos
or
popa
xlat
mov
scas
xor
cmc
xor
js
cmp
lds
pop
addr16
neg
lret
pushf
or
add
mov
push
and
dec
loop
xlat
bound
adc
hlt
jnp
fnstcw
mov
or
loope
mov
sbb
js
inc
mov
pusha
push
jnp
lret
adc
adc
inc
lds
pusha
jge
mov
std
mov
mov
cld
int3
jae
xlat
xchg
loop
fidivs
adc
pop
repnz
cmp
std
mov
xor
sub
icebp
cmpsb
outsb
aad
pop
fadd
aas
repnz
cmc
inc
push
sbb
sbb
pop
addr16
lock
dec
or
and
pop
cmp
test
mov
dec
push
or
dec
je
or
test
cmpsl
out
inc
jl
jae
test
sbb
nop
clc
mov
xchg
xchg
sub
ss
sbb
std
mov
jle
nop
in
lods
cwtl
mov
fwait
out
add
jmp
or
adc
cmp
and
sub
xchg
mov
jnp
sbb
es
mov
test
or
ja
hlt
mov
icebp
xchg
dec
lcall
adc
addr16
mov
sub
cmp
mov
adc
dec
adc
stc
mov
mov
xlat
cld
insb
sub
fcomip
jbe
mov
fwait
imul
adcb
fwait
das
add
jge
sub
cmc
xor
pop
xor
and
push
in
aas
arpl
cwtl
fs
icebp
cltd
adc
xor
lcall
outsl
add
sbb
std
add
pusha
pop
dec
add
pop
loope
addr16
and
mov
jl
in
jbe
bound
sbb
sub
push
mov
cld
dec
or
int3
pop
dec
icebp
leave
repz
fbld
adc
mov
ret
ja
xor
sub
lea
cmc
jno
and
lods
jl
adc
jmp
sub
adc
mov
xchg
sbb
sub
and
mov
push
jb
xchg
out
mov
subl
xchg
ret
inc
inc
or
sub
push
push
test
std
nop
cmpsb
push
push
stos
out
pop
sbb
lret
jbe
call
sahf
fs
dec
mov
std
outsb
xchg
imul
mov
inc
jecxz
jnp
insb
ljmp
sub
and
sub
fcoml
lcall
iret
ss
scas
inc
adc
mov
in
mov
mov
dec
pushf
nop
fs
das
jp
ljmp
rcr
movsb
gs
xorl
inc
out
jns
xchg
rcll
sub
add
rcrl
adc
mov
into
lret
push
iret
es
dec
nop
push
insl
pop
out
cmpl
std
cwtl
xchg
shlb
mov
inc
lahf
imul
add
aas
clc
lret
mov
insb
es
mov
or
dec
sbb
in
fdivrl
ret
outsl
stos
rclb
dec
jp
out
out
in
mov
sbb
push
add
and
pop
out
cld
imul
popa
incb
lods
or
and
mov
mov
push
fisubrs
push
test
sub
mov
pushf
sahf
subb
notb
int3
in
add
adc
lcall
pop
xlat
push
push
loopne
cltd
jp,pn
movsb
les
sahf
repnz
addr16
adc
jbe
jl
insb
out
xlat
adc
inc
xchg
mov
clc
dec
mov
push
in
imulb
push
push
rcrb
jp
sahf
mov
loope
mov
and
or
jmp
adc
iret
mov
sbb
sub
xor
jmp
jb
scas
icebp
xchg
pusha
arpl
into
ret
outsb
pop
fisubrs
fcomip
iret
popa
fcoms
js
add
push
xchg
mov
mov
lea
insl
lahf
pushf
inc
fs
aad
cmp
xchg
or
and
je
fstps
ds
out
jb
popf
dec
icebp
arpl
shll
insb
sahf
xor
negb
fadd
scas
inc
dec
das
xchg
sbb
and
ss
out
cmp
cmpsb
popa
call
jne
cmp
pop
lds
in
push
aaa
dec
rcll
xchg
push
mov
lds
dec
xor
addr16
js
pop
or
sarb
dec
dec
es
aad
mov
dec
iret
jns
mov
cld
out
pop
out
adc
mov
jne
inc
imul
es
jl
push
pop
xchg
insl
lret
test
inc
push
sbb
test
mov
std
cmp
and
jmp
xchg
dec
loopne
or
push
cmp
je
lods
imul
mov
pop
push
sub
push
daa
subb
xor
mov
in
movsl
xor
mov
loop
adc
inc
aad
push
fsubl
jg
movsl
movsl
inc
cltd
mov
xor
mov
testl
out
cld
mov
iret
call
pop
test
push
mov
stos
in
cli
sbb
fisttpl
shlb
outsl
jnp
mov
xor
xor
jl
add
data16
mov
call
loope
js
push
sahf
mov
dec
adc
dec
cmpsl
mov
fisubl
mov
xlat
dec
aas
mov
dec
xor
cltd
push
add
xchg
add
mov
xchg
jbe
xchg
jnp
lcall
test
sarb
fdivrl
push
fwait
enter
and
xor
add
mov
clc
iret
into
ret
je
fcoml
mov
push
js
mov
ret
arpl
jne
adc
jbe
push
sub
scas
dec
adc
fucomip
scas
cmp
mov
pusha
das
shrl
sub
loope
push
pusha
xchg
sti
mov
test
test
dec
add
jns
pop
das
mov
sub
jge
rcll
mov
sbb
cltd
push
add
push
loop
orl
test
fidivs
loope
dec
xchg
cmp
mov
stos
jle
push
xor
add
out
cmc
mov
mov
cli
xchg
fsts
rcl
cmpsb
lret
stos
pop
dec
mov
lret
icebp
test
fwait
cwtl
sub
mov
outsl
sub
scas
sbb
icebp
mov
cmp
sub
xor
out
orb
pop
aaa
out
into
loope
lret
ficompl
int
jo
addr16
test
inc
rcl
sbb
lds
push
and
jae
stos
pop
fs
mov
mul
outsb
sub
and
psubw
xor
push
rcrb
push
mov
fstpl
addb
push
adc
iret
push
dec
lcall
mov
xchg
cli
jle
cmpsb
stos
dec
jl
aam
push
mov
inc
cmp
iret
or
or
loop
lds
push
xchg
and
or
pop
xor
sbb
pop
dec
repnz
pop
mov
or
mov
aad
je
push
mov
or
inc
test
cmp
adcl
inc
ds
leave
dec
cltd
xchg
arpl
lock
mov
xchg
xchg
or
rclb
mov
clc
shll
fs
jg
pop
dec
push
popa
sub
fistl
cmp
hlt
rol
mov
cmp
pusha
pop
lods
sarl
sub
gs
sbb
fiadds
aam
pop
mov
loope
out
shlb
pop
jle
sub
ljmp
out
nop
cmp
paddusw
jne
addr16
ljmp
test
cmp
andl
sbb
push
cli
and
stos
lahf
negb
lods
fucomip
int
icebp
mov
mov
daa
adc
jmp
cmp
mov
push
mov
mov
arpl
das
fdecstp
ljmp
adc
pop
insl
cmp
mov
mov
add
aas
addr16
pop
cmc
jbe
ss
mov
in
push
mov
out
fwait
cmp
mov
aaa
je
jno
rcrl
ret
sub
stc
xor
xchg
mov
scas
push
pop
adc
andl
les
and
fildl
mov
adc
cmpsl
sub
xchg
mov
mov
dec
daa
lea
xchg
fs
xor
sub
sub
sub
stos
lahf
hlt
leave
push
or
push
adc
xchg
pop
hlt
inc
cmp
stc
jne
jo
data16
sub
lock
idivb
aam
cmp
inc
andb
mov
icebp
enter
cs
pop
cmp
xchg
push
xchg
out
jle
mov
lret
sbb
jne
nop
lcall
push
jg
mov
mull
jmp
or
xor
ret
xchg
test
call
imul
push
and
xchg
inc
ljmp
cmp
cmp
test
dec
xlat
popa
pop
out
cmp
inc
mov
push
pop
push
daa
shll
aad
mov
push
mov
cmp
mov
loop
cmp
pusha
and
roll
inc
cli
or
sahf
push
xor
mov
mov
and
lea
shrb
pop
mov
sarb
cwtl
lea
gs
inc
mov
mov
sbb
add
add
out
push
pop
out
outsl
dec
mov
scas
fldcw
lret
pop
out
xchg
mov
adc
stos
push
or
mov
xchg
in
test
sbb
test
lods
clc
inc
cmp
addl
xchg
jnp
sub
add
sbb
cmp
in
insb
xorb
pop
lds
daa
mov
sub
adc
cld
cmpsl
push
xchg
insl
sbb
push
loope
test
push
mov
xor
sub
aaa
cld
orl
mov
and
xchg
jge
bswap
stos
or
xchg
push
add
cmpsl
lcall
cltd
xchg
loopne
jmp
add
inc
lds
out
dec
mul
ret
pop
jns
mov
rclb
ss
cld
cltd
fiadds
inc
std
jmp
cwtl
fisttps
push
or
leave
jns
push
bnd
cltd
in
orl
aad
fs
adc
cs
cmc
cltd
jmp
push
in
and
sbb
lods
nop
test
insb
jnp
faddl
mov
ljmp
jp
xor
lock
xor
adc
pop
lret
mov
out
or
pop
outsl
fstl
pop
cmc
dec
push
decb
out
testl
or
out
lret
pop
roll
mov
sahf
or
int
loop
ret
sub
into
cmp
das
xchg
mov
insb
jae
mov
popa
jle
jle
negb
lods
and
divl
add
and
movmskps
jl
in
jne
daa
and
add
adc
add
sub
dec
and
jb
xchg
loopne
xchg
jae
pop
sub
pop
xchg
jecxz
stos
xchg
jg
fisttpl
pop
lods
cmp
mov
mov
vpalignr
aam
lret
outsl
add
mov
aad
rorb
mov
ss
cmpsb
or
jecxz
xor
mov
ljmp
jl
imull
and
iret
xor
fnsetpm(287
arpl
lds
sbb
stos
std
mov
scas
xor
push
pop
add
lods
push
push
push
mov
scas
or
sub
add
add
sbbw
cmp
popa
in
in
fs
imul
mov
xor
or
out
pushl
add
cmp
jae
push
mov
jge
pop
add
mov
inc
xlat
ret
push
or
gs
xor
loope
or
sbb
add
dec
mov
and
cmpsl
push
jbe
bound
xchg
pop
sbb
int
or
loop
popa
cmp
outsl
pop
test
sub
mov
loop
lds
movsl
arpl
daa
jnp
lods
sti
insl
in
mov
adc
dec
fstpt
mov
mov
xor
rorl
push
js
push
mov
cmp
ret
xchg
cmp
aas
xchg
enter
push
pop
push
ds
jp
xchg
insb
jg
imul
dec
inc
cmpsl
pop
fs
push
cmp
out
xchg
pop
or
mov
cmp
popf
push
cwtl
or
test
icebp
mov
add
add
bound
in
xlat
mov
in
or
fwait
loopne
push
push
loop
push
pop
pop
push
pop
dec
dec
jmp
mov
mov
push
pop
cmp
xor
pop
mov
cmp
es
outsl
inc
lcall
inc
ja
enter
inc
pushf
cmp
add
aad
repnz
push
rcrl
mov
insl
jmp
sub
js
push
mov
into
cmp
decl
xchg
loope
mov
popl
push
fdivl
call
repz
push
cli
push
insl
rolb
sbb
inc
mov
dec
cld
bound
loope
das
enter
pushf
inc
jp
inc
add
pop
dec
iret
jecxz
jno
push
mov
enter
pusha
or
pop
dec
push
push
sub
mov
out
hlt
gs
or
mov
subb
mov
pop
xorl
lret
dec
push
loopne
push
lret
nop
pop
and
jo
test
cli
inc
gs
or
push
in
inc
insl
sub
jl
push
mov
aad
adc
mov
inc
add
adc
xor
xor
dec
andl
lahf
pop
pusha
sti
and
cwtl
or
popa
and
cmc
mov
add
lea
or
imul
mov
add
add
mov
mov
lods
and
mov
scas
xchg
data16
fcmove
je
out
and
es
icebp
js
add
push
and
push
mov
imul
dec
mov
pop
movsl
jl
xchg
lea
jo
dec
cli
loope
mov
cmc
adc
xor
out
inc
mov
push
sbb
fadds
jbe
cli
jecxz
cmpsl
mov
push
lock
jns
xorb
sub
mov
lea
notb
or
sub
xlat
sub
pop
inc
push
arpl
imul
shlb
aam
in
push
push
fisttpl
xchg
jae
cmp
fistpll
and
test
into
inc
outsl
mov
ss
add
jb
add
ds
rolb
test
inc
lds
inc
cs
imul
jno
push
daa
arpl
mov
jbe
clc
mov
mov
and
fildll
dec
xor
enter
push
pop
stos
test
cmpsb
out
ret
cmp
pushw
notl
or
aas
int
and
pop
mov
xorl
add
push
adc
push
in
mov
das
gs
mov
mov
idiv
sahf
cmp
mov
stc
jp
fs
fists
dec
mov
mov
gs
push
add
enter
lahf
test
jmp
sbb
repnz
push
adc
adc
and
out
fsubs
bswap
mov
sbb
shlb
stc
mov
movsl
sbb
and
dec
punpckldq
sbb
shr
push
cmpsb
lock
ja
add
jns
std
sub
lret
les
dec
cmp
je
test
mull
dec
push
movsl
mov
dec
sub
frstor
dec
lahf
in
je
out
aam
movsb
adc
ret
mov
lock
cld
stos
sbb
sbb
mov
adc
push
fdivrp
sub
mov
jecxz
inc
mov
test
xor
jbe
aaa
fwait
push
ficoml
test
test
cmc
sbbl
je
adc
out
movsb
pushf
pop
mov
jns
ss
insb
outsl
xchg
in
mov
jnp
mov
push
lea
mov
xor
mov
fidivs
data16
cmpb
xchg
addl
mov
sti
push
push
loope
inc
mov
inc
into
imul
fildll
ja
mov
movsb
loop
cmp
push
int
mov
testb
mov
pop
in
add
add
sbbl
push
imul
pop
mov
push
ficompl
inc
mov
repz
sahf
je
mov
insl
fnstenv
mov
jae
aas
lods
pop
enter
std
nop
mov
shrl
out
jae
mov
or
pop
adc
fcoms
pop
cmc
sbb
outsl
mov
mov
rclb
les
lock
push
xchg
and
cmpsl
pop
jl
add
adc
ja
sar
mov
mov
dec
xor
adc
adc
mov
test
je
lret
inc
inc
push
xor
xor
sub
pop
or
int
cmpsb
aam
aam
sahf
push
setb
popa
jmp
pop
jl
or
lea
and
sbb
test
dec
adc
stos
push
fsub
cmp
daa
dec
ror
sbb
mov
scas
mov
jo
push
cmpsb
clc
sarb
xor
cmp
ret
pop
testb
mov
cld
fists
cmp
cmp
jmp
inc
inc
aaa
push
lcall
pop
jno
out
mov
enter
pop
inc
dec
in
and
loope
out
lock
lock
cmp
roll
xor
rcr
jno
or
inc
and
xor
clts
sbb
mov
cltd
in
dec
cmp
pop
sar
inc
test
in
push
add
jb
adc
out
pushf
es
call
testl
cmp
incl
mov
mov
mov
call
dec
mov
mov
inc
adc
push
push
add
mov
pop
sub
imul
or
adc
cmc
loope
ret
imul
mov
std
push
adc
out
add
push
sub
jae
cmp
cmpb
ss
arpl
shrl
rclb
pop
cld
push
pop
out
sub
pusha
ljmp
sbb
xor
mov
mov
iret
cltd
mov
sbb
daa
jnp
pop
sbb
xchg
test
mov
ror
pusha
xchg
mov
or
mov
and
ret
jnp
push
mov
repnz
in
xor
std
sub
rol
and
inc
adc
or
pop
mov
or
jecxz
push
adc
inc
mov
frstor
mov
xor
imul
inc
lods
pop
clc
jp
cmp
mov
adc
ljmp
add
int3
lods
movsl
ret
insb
jo
js
and
cmp
pop
inc
jg
dec
das
mov
mov
in
imul
cmc
out
pushf
enter
push
dec
negb
mov
push
sbb
adc
rcpps
inc
mov
cmp
aam
xchg
mov
inc
push
pop
nop
dec
shll
and
inc
jl
jle
mov
adc
sbb
jbe
adc
idivl
jae
bound
xor
fisubs
jbe
les
lock
sarb
fstpl
xor
int
lods
jp
ret
xchg
jnp
pop
pop
jge
xlat
xchg
inc
pop
bound
sysret
pop
andb
idiv
es
cmc
jae
mov
icebp
outsb
jno
xchg
test
dec
and
xchg
jg
negb
test
andl
xchg
ljmp
pop
xchg
ljmp
lods
or
fimull
in
dec
jae
arpl
scas
jne
and
add
test
enter
xorb
push
test
arpl
xor
out
bnd
inc
jnp
or
mov
cmpsb
xor
adc
ja
imul
lea
cmpl
scas
icebp
push
xchg
add
mov
mov
cmp
js
mov
fwait
or
daa
out
out
mov
repnz
xchg
cmp
push
push
cmp
xchg
in
jmp
and
pop
pop
call
stc
mov
sbbb
mov
xor
xlat
mov
es
addl
lds
fdiv
adc
jle
icebp
cwtl
popf
add
and
call
sti
mov
inc
mov
dec
adc
jo
mov
adc
ss
and
scas
lea
pop
testl
lods
pop
daa
aaa
ret
or
test
jno
push
cmp
dec
xchg
push
mov
pop
or
daa
out
lcall
adc
dec
mov
iret
cld
cli
xchg
lahf
lods
inc
iret
or
dec
negb
adc
push
arpl
lods
cmpsl
add
sub
mov
fistl
xchg
mov
arpl
pop
cmp
or
dec
insl
roll
mov
lcall
jmp
xchg
ja
lods
scas
loop
rclb
popa
lock
stos
mov
dec
insb
jns
loop
cmp
sub
sbb
sti
lods
cmp
lods
in
jge
sbb
and
sbb
xor
arpl
xchg
adc
xchg
inc
ja
adc
ret
push
xor
and
out
data16
cli
loop
cmp
add
adc
mov
pop
pop
in
popf
xlat
call
jle
testb
test
test
cmp
sub
mov
insb
shr
mov
mulb
mov
xchg
sbb
insl
pop
mov
loopne
cmpsb
ficoml
out
adc
ljmp
in
mov
sub
cmc
mov
push
cmp
rcl
leave
lock
iret
daa
insl
rclb
lds
xor
insb
lods
les
push
outsb
popf
jns
cmp
pop
pop
push
cli
mov
aam
fwait
scas
dec
dec
jns
add
inc
ljmp
rclb
mov
mov
or
mov
out
inc
lret
icebp
xchg
push
jp
xor
fsubr
jle
in
dec
int3
mov
lahf
mov
sub
into
cltd
sub
mov
dec
popf
int
push
scas
jp
mov
cwtl
in
dec
adcb
aaa
call
lcall
mov
jmp
arpl
insl
inc
fists
mov
lret
xchg
aaa
icebp
daa
fiadds
inc
cltd
or
shll
mov
push
jle
push
mov
rolb
dec
xchg
adc
adc
insb
lds
push
aaa
sub
push
inc
add
or
inc
mov
dec
add
mov
leave
leave
sbb
cli
mov
mov
jae
cli
inc
pop
or
cmpsb
lret
xchg
outsl
sti
test
push
cli
popa
loopne
loop
movsb
push
sbb
popa
push
or
stos
adc
ret
xor
add
sub
js
mov
mov
pusha
cld
dec
jl
fmul
in
sahf
in
pusha
inc
call
sub
push
test
add
push
ficoml
cmp
arpl
mov
push
stc
push
or
dec
mov
leave
ds
xchg
in
shr
jae
inc
cmc
int
sbb
jge
dec
jbe
les
cmp
push
mov
ret
clc
xchg
sti
sbb
fadds
fcoms
mov
cltd
xchg
jne
push
sbb
icebp
sbb
or
mov
mov
cmc
and
in
lcall
loope
cmp
add
jae
shlb
test
outsb
dec
sbb
xor
jmp
fcmovnu
add
mov
cmpsl
in
and
fiadds
enter
aam
jo
add
inc
xor
stc
push
rcl
jae
inc
shrd
sub
cmc
sahf
mov
jno
pop
cmp
jne
pop
jl
std
fs
xor
adc
jnp
cmp
xchg
repnz
std
dec
mov
mov
mov
faddl
push
aad
xchg
pop
xor
lods
cmpsb
inc
ret
xor
lret
and
hlt
cmp
dec
mov
jl
pop
pusha
add
or
loopne
cli
sbb
sbb
mov
mov
push
add
sub
into
xchg
mov
rcrb
jae
mov
in
pop
loopne
push
and
cmpsl
push
sbb
lahf
mov
cmp
or
dec
jb
pop
inc
add
sub
mov
sub
mov
imul
jp
stos
stc
push
outsb
dec
add
jbe
pop
in
loope
pop
inc
test
push
dec
popa
cmp
loopne
push
cmp
outsl
repnz
sbb
mov
pop
test
out
dec
fwait
jno
or
push
mov
xchg
test
sbb
les
mov
cmp
xchg
rcll
dec
jno
pop
cmpsb
mov
mov
adc
push
clc
or
push
dec
std
cmc
and
pop
sbb
loopne
fcoms
out
sub
aad
xchg
xor
cwtl
adc
pop
jnp
jb
cmpsw
rorl
fwait
call
mov
push
and
lds
add
in
inc
jo
adc
jl
out
mov
scas
ja
sbbl
decl
popa
mov
or
fldcw
xlat
movsb
push
mov
cmpsl
test
nop
mov
in
mov
lods
arpl
rcll
test
loop
xchg
scas
jae
jb
xchg
movsl
and
mov
adc
pop
outsb
scas
dec
mov
aas
mov
cmp
loope
aad
lock
sbb
adc
inc
mov
pop
mov
lret
in
fstp
xchg
mov
call
xor
stos
loope
lahf
insb
test
lea
subb
mov
mov
out
inc
in
add
dec
scas
int3
loopne
loopne
inc
popa
and
push
out
jo
hlt
and
add
or
test
mov
cltd
xchg
rcl
cmp
pop
sub
nop
fcmovne
in
add
dec
fidivs
mov
hlt
rcl
jg
adc
mov
push
push
fbld
nop
push
and
ds
cmp
aas
sbb
cmpsb
pop
mov
movsl
cmp
adc
loope
and
mov
lret
fdivrl
push
stos
mov
push
rcrl
cmp
fnstcw
call
out
movsl
in
push
lret
add
mov
push
icebp
inc
sbb
mov
cmp
stos
aaa
adc
enter
inc
pop
sbb
adc
iret
lret
test
ret
mov
cwtl
or
sub
add
in
dec
hlt
xchg
hlt
mov
cwtl
pop
adc
sub
xchg
aas
aam
stos
test
aaa
pop
outsl
fs
add
push
cltd
outsl
or
and
fwait
jb
loope
dec
call
imul
jmp
mov
inc
mulb
add
repnz
mov
push
pop
ja
push
mov
setg
psubd
cmp
incb
cmp
fimull
stos
popa
pop
dec
popa
out
pop
repz
or
pop
jo
xchg
push
js
sub
pushl
jg
mov
dec
adc
stc
xor
mov
cli
mov
jg
xor
decl
es
mov
adc
in
push
xchg
jno
std
stos
sbb
pop
xor
inc
mov
or
dec
pop
jg
shrl
xchg
sbb
or
add
sarl
cltd
xlat
mov
xchg
scas
jb
sbb
aad
js
pop
movsl
mov
xorl
push
pop
pop
xor
xchg
pop
sahf
or
fs
insl
or
pop
sbb
mov
adc
outsb
fwait
iret
inc
add
inc
pop
push
xchg
fnstenv
cmp
mov
mov
xchg
jbe
push
xor
jmp
or
cmp
and
cmp
fisubl
mov
mov
icebp
shlb
inc
jmp
das
dec
cmpsb
adc
leave
inc
lahf
cmpsl
ret
inc
sbb
and
fsubrs
popf
scas
andl
lods
mov
mov
and
lahf
push
jmp
and
call
sti
xor
stc
inc
add
lret
xchg
adc
mov
loopne
hlt
or
sti
out
jle
push
or
out
sub
out
pop
mov
mov
rcll
xchg
stos
or
mov
push
int3
sti
nop
lds
add
loop
push
jbe
int
aas
sub
in
jo
js
insl
in
xor
jmp
or
add
lcall
jnp
jmp
adc
cmp
mov
mov
mov
icebp
pop
jb
pop
or
es
sbb
pop
pop
scas
enter
leave
out
sti
lock
stc
roll
inc
mov
enter
mov
push
loop
popf
pop
pop
mov
lea
testl
out
xchg
ljmp
cmp
lock
inc
dec
add
sub
shl
filds
mov
das
jl
jne
sti
and
add
add
int3
sbb
inc
int3
push
push
stc
mov
pop
pop
sbb
nop
lret
andl
nop
and
dec
nop
sbb
aam
cmp
test
sub
adc
add
jmp
hlt
push
add
push
xorl
adc
stc
pop
add
mov
adc
mov
mov
mov
dec
or
xor
pop
pushf
pop
and
cmp
cmp
mov
add
in
xchg
mov
lock
or
add
sbb
lahf
mulb
sahf
jge
jns
jb
push
lock
ret
adc
jae
pop
loopne
popf
mov
xor
mov
sbb
scas
int
repnz
pop
aam
outsl
les
imul
outsb
test
sub
orb
ljmp
scas
ss
cmovle
in
scas
je
or
mov
jmp
push
dec
shrl
pop
jmp
divb
es
inc
add
pop
loopne
negl
inc
inc
push
outsb
sbb
or
arpl
mov
mov
add
cmpsb
stos
mov
and
std
add
iret
mov
stos
test
lea
mov
je
mov
inc
mov
leave
int
fiadds
cmp
push
jns
sbb
test
pop
fildll
jo
scas
mov
mov
les
fnstenv
push
mov
xchg
fmuls
lahf
repnz
mov
inc
mov
cmp
dec
lret
dec
pop
shlb
mov
or
dec
fistl
mov
or
mov
lcall
test
push
sbb
push
inc
aam
idivl
movsb
repz
lret
call
or
inc
cmp
mov
pop
and
lods
cmp
insb
mov
insb
mov
mov
cmpsl
loop
roll
fcomps
mov
xor
out
push
pop
idivl
fs
sub
std
imul
sbb
jecxz
sahf
cltd
in
sub
xor
dec
push
mov
jmp
dec
das
jl
or
xchg
add
idivb
ret
jno
int
bound
dec
fwait
sti
int
pushf
sbb
ret
sub
pop
jnp
mov
push
push
pop
mov
repz
inc
add
mov
movsb
pop
cs
xchg
stc
pop
loope
leave
hlt
stos
push
mov
cld
popf
and
sahf
jno
adcb
inc
jg
cmp
fimuls
cwtl
pop
inc
jp
xchg
push
xor
idivl
fdivr
ljmp
hlt
fistpll
or
daa
jg
xor
xchg
sub
push
mov
xor
andl
in
xorb
fwait
sti
js
rcl
push
and
add
pop
shl
mov
test
cltd
mov
cmp
mov
ret
fsubl
ljmp
orps
icebp
lcall
push
pop
cmp
pusha
add
cmpsl
rcll
sbb
imul
scas
mov
iret
cmp
sysenter
int
inc
les
sbb
push
inc
adc
repz
rolb
and
mull
clc
repz
fidivrl
fldcw
inc
das
int
hlt
icebp
test
mov
mov
in
sbbl
jmp
mov
icebp
xorb
add
dec
or
mov
inc
rcrl
inc
pop
mov
ljmp
dec
mov
jb
movsl
mov
xchg
mov
adc
mov
dec
es
cmpsl
jmp
into
xor
pop
jo
xchg
push
insb
cmpsb
or
push
clc
mov
rorl
pop
movsb
mov
decl
mov
jnp
jb
push
jbe
dec
add
adc
hlt
mov
cld
je
add
sub
inc
stc
aaa
xlat
mov
stos
popf
adc
mov
aaa
push
xor
add
mov
mov
cmp
push
lods
adc
int
inc
adc
fnstsw
mov
adc
jle
mov
pop
or
jp
icebp
in
popf
jecxz
pop
xchg
in
sbb
cli
rorl
and
xchg
popa
gs
push
add
test
mov
ja
xor
es
and
mov
inc
mov
push
fldenv
and
xchg
insb
decl
add
les
stc
xor
cmp
int3
lret
enter
imul
sbbl
rcl
push
inc
mov
inc
adc
jno
mov
xchg
add
and
push
into
push
sbb
mov
repnz
stos
loopne
jb
and
add
cli
push
insb
and
mov
push
dec
popf
shrl
stos
sbb
mov
imul
add
dec
adc
int3
jecxz
pop
movsb
pcmpgtd
mov
cmp
bound
aam
pushf
fcoml
pop
das
shll
out
xor
mov
insb
dec
xchg
stos
popf
andb
sub
clc
jb
lea
enter
movsl
inc
movsb
sbb
dec
rcll
nop
xlat
mov
icebp
ja
push
hlt
enter
add
test
inc
dec
cld
mov
cld
mov
fisubrs
outsl
shll
mov
dec
dec
rcl
int3
mov
je
shl
xchg
stos
adc
repz
pop
popf
adc
fwait
ret
add
sbb
das
mov
inc
jb
lea
mov
out
inc
xor
dec
out
xchg
or
aas
or
insb
push
insb
jecxz
outsl
cmp
aaa
testb
pop
cwtl
dec
ficoml
movsb
mov
push
inc
pop
and
sub
das
pop
inc
inc
loop
out
and
ret
xchg
jo
inc
je
jl
xchg
out
fiadds
adc
negl
cmp
arpl
cmp
cli
mov
sub
jl
mov
push
push
sub
cmp
cmp
sbb
mov
loop
je
xchg
sub
ret
mov
jecxz
and
pop
sbb
dec
cmp
dec
and
mov
js
out
fwait
sub
jae
ljmp
int3
or
pop
and
outsb
pop
jns
cmp
pop
push
xchg
fdivrl
xor
cli
xchg
adc
xchg
jbe
push
and
stc
out
sbb
lret
inc
cld
mov
cli
sbb
or
cld
decl
dec
imul
loop
shll
cmp
sbb
outsl
mov
mov
daa
mov
dec
dec
addr16
cmp
push
mov
icebp
pop
inc
xor
push
mov
aaa
rcrb
pop
adc
sub
pop
lcall
mov
out
fcmovnu
hlt
cmp
cmpb
sbb
lock
gs
orl
push
or
cmp
imul
add
dec
mov
aad
popf
mov
rclb
cmp
add
clc
dec
pop
cltd
xor
mov
icebp
add
fs
sub
out
push
fdivrs
cs
mov
jmp
out
pop
filds
cwtl
test
cmpsb
mov
adc
mov
imul
popa
or
or
call
bnd
add
mov
mov
cmp
test
aas
xchg
loopne
adc
in
pop
adc
fisubl
gs
test
stos
adc
mov
rcrb
mov
push
or
adc
popf
jns
aam
str
or
cmp
inc
popf
out
inc
adc
jbe
dec
lret
shr
sub
inc
into
shll
dec
mull
addb
dec
add
out
and
clc
push
mov
lea
push
je
int3
inc
cmp
aam
fadd
movsb
cmp
lret
push
pop
in
cld
adc
pop
std
scas
mov
into
mov
outsl
rcr
pop
out
pop
test
repnz
dec
xor
xchg
stos
out
lret
andb
flds
and
or
sub
xor
int3
idivb
lcall
push
pushf
mov
and
xchg
fimuls
sub
mov
jg
fdivrl
jbe
add
push
jns
and
jns
lea
outsb
xor
jb
repz
inc
scas
popa
clc
arpl
xchg
jns
inc
push
daa
mov
lret
pop
cli
addl
jp
push
jecxz
cmp
insb
test
jmp
dec
and
fbld
shl
inc
je
inc
sbb
sub
leave
dec
test
clc
out
dec
push
jbe
adc
sub
aaa
rcrb
imul
mov
movb
push
cwtl
fwait
movsl
in
in
or
push
add
addr16
push
pusha
push
rolb
dec
adc
roll
pop
rcrl
sbb
mov
rcl
ret
shlb
out
pop
bound
aad
aad
cwtl
out
jo
mov
mov
cltd
icebp
jle
or
mov
pop
push
mov
es
rolb
dec
push
decb
orb
popf
xchg
fidivrl
int3
js
cld
les
and
and
or
aam
push
pop
int
out
inc
push
sub
or
dec
fisubrl
jge
out
and
mull
insl
cmp
sbb
adc
js
stos
add
ljmp
out
gs
cmp
cmp
or
daa
dec
or
popa
sub
adc
repz
into
jle
shll
adc
jg
inc
rolb
pop
out
xchg
mov
or
aas
pusha
cmp
sbbl
cmpsl
mov
out
aad
insb
dec
and
sbb
push
pop
pop
jp
cmpsl
mov
jb
sbb
push
inc
jl
bound
ficoml
movsb
lea
insl
inc
js
lds
jae
stos
call
xchg
push
mov
mov
stc
ror
cmpsl
fisttpl
inc
fsubrs
push
sbb
icebp
or
arpl
sub
mov
addl
outsb
mov
stos
push
dec
jae
push
push
or
xchg
es
nop
pop
jo
pushf
orb
scas
mov
test
xorl
adc
ret
decb
cmp
push
fstl
adc
iret
out
push
cmp
cld
xlat
repnz
inc
int3
nop
or
rcrb
xor
scas
inc
outsb
sbb
cmpsl
and
and
sahf
mov
inc
mov
xor
insl
nop
shrl
or
cld
call
push
mov
mov
jle
push
test
and
pop
aad
push
push
fdivs
mov
dec
mov
xchg
scas
jo
cmpsb
dec
je
push
and
hlt
sbb
push
fwait
aaa
jp
xor
int3
test
in
stos
jae
dec
jl
mov
cmpsb
or
enter
sahf
ret
bound
cmc
pop
mov
shl
fs
imul
mov
mov
aam
ret
repz
outsb
add
sbb
jge
jecxz
daa
push
mov
les
das
inc
imul
stos
std
mov
ret
stos
or
pop
xor
jbe
inc
loope
frstpm(287
hlt
je
loope
sti
cmpsl
xor
std
sbb
push
inc
xchg
pop
imulb
cmp
insb
inc
jp
xlat
iret
inc
push
mov
aam
pop
das
dec
push
xor
jmp
push
sbb
mov
loopne
push
inc
xchg
lods
div
mov
xchg
mov
test
jno
ret
cmpsb
shlb
add
or
daa
repnz
or
and
mov
push
out
xor
repz
rolb
ret
sub
fisubrl
push
gs
std
xor
in
insb
add
jbe
mov
repnz
fistps
xchg
jae
cmpsl
xor
xlat
mov
fs
outsl
inc
sbb
xchg
push
or
xor
sbb
xchg
das
or
arpl
shlb
push
adc
roll
add
push
xchg
and
cli
sarl
push
gs
sahf
and
stos
scas
add
cmp
mov
sbb
push
in
call
je
adc
sbb
fldt
dec
sbb
cmp
mov
shrb
inc
das
adc
decb
xor
jno
js
nop
addl
jno
stc
testl
movsb
cs
xchg
loope
in
int3
outsl
mov
push
cmpsb
cmp
dec
cmpsl
mov
pop
fwait
ljmp
leave
sbb
jg
dec
sub
add
imul
jb
fs
repnz
lods
imul
and
popf
jo
insl
icebp
and
sbb
stos
testb
popl
push
mov
lret
add
mov
lret
cmp
lods
mov
jnp
push
in
rcrb
bound
inc
in
hlt
push
ds
sub
adc
fs
xor
scas
into
jge
push
jg
cmp
add
jmp
jne
add
mov
scas
shll
int
cmp
inc
pop
xchg
and
arpl
pop
sub
xchg
mov
sarl
jbe
cmp
sahf
xchg
in
mov
out
jbe
cmp
push
jb
inc
addl
xchg
enter
mov
and
insl
mov
sub
mov
pop
gs
mov
sahf
psraw
out
nop
pop
push
inc
aam
cli
adc
fidivl
add
clc
cmp
repnz
aaa
xchg
insb
cmc
movsl
adc
pop
dec
sbb
inc
out
in
jo
inc
and
xchg
hlt
out
mov
xor
jmp
xor
or
cmp
cltd
js
and
push
fisttpl
outsb
cmc
sbb
cmp
bound
sbb
mov
in
cli
xchg
aaa
movsb
lret
pop
out
fmul
or
lahf
adc
in
nop/reserved
std
dec
scas
in
cmp
and
sbbl
sbb
out
sub
notl
lds
xchg
adc
hlt
mov
ret
loope
mov
xor
xchg
cwtl
sti
pop
cmc
mov
push
shrb
sub
or
jecxz
mov
sbb
fcom
sub
dec
adc
les
xlat
repz
push
idivl
lret
mov
jmp
inc
jg
in
push
adcl
mov
lea
jl
fldenvs
cltd
in
jecxz
add
jp
add
or
jae
adc
lods
pop
pop
cmc
mov
pushf
int3
push
in
cltd
int3
mov
jl
js
test
push
xor
movsb
es
xlat
pop
scas
xor
xchg
out
lea
mov
xlat
mov
add
les
hlt
divb
es
inc
mov
in
cmp
orb
sbb
jg
mov
fadds
cmp
fisttpl
push
out
sub
jo
mov
aam
sbb
push
dec
mov
leave
pop
out
pop
ret
lret
adc
xchg
cwtl
cli
sbb
jmp
clc
mov
adc
int3
mov
cltd
xchg
fcoms
sti
out
mov
mov
dec
jne
cmp
mov
mov
fwait
xchg
adc
ret
jge
pop
aaa
int3
mov
inc
fbstp
xchg
xchg
dec
repnz
and
test
fistps
ja
add
int3
and
or
add
sbb
fldcw
scas
add
push
aaa
fmull
out
or
cmp
mov
insl
mov
in
fldenv
test
std
ljmp
dec
pop
dec
jnp
test
into
pop
fnsave
aam
imul
or
mov
or
cmp
mov
outsb
out
sub
out
lahf
loop
psubusw
ds
dec
in
inc
mov
add
mov
divb
in
push
imul
sbb
mov
pop
jo
int3
pop
xor
lock
cmp
arpl
cld
loopne
xchg
and
inc
cmpsl
fsubs
inc
push
mov
and
insl
cmp
jle
ds
mov
xor
lds
push
sub
push
or
xchg
icebp
loopne
clc
lahf
and
rol
pop
push
mov
sti
scas
pop
dec
adc
mov
pop
jae
enter
ja
mov
cmp
daa
jo
out
dec
jb
fdivrs
and
inc
push
aam
int3
fisttpl
js
scas
unpcklps
push
mov
jnp
jne
mov
loopne
rdseed
es
pusha
pop
mov
ret
mov
mov
sub
pop
outsb
mov
jge
jge
cmpl
pop
pop
test
jle
inc
cmp
or
sub
or
subl
cmpsb
xor
dec
mov
cld
int
adc
pop
or
jecxz
notl
aam
popa
sub
dec
into
test
imul
push
sbb
lcall
dec
adc
mov
cmp
or
loop
cmp
pop
inc
jmp
cmpsb
loop
stc
cmp
stc
in
dec
idivl
lret
fstps
xor
incb
push
inc
mov
stos
fisubrl
jbe
inc
inc
pop
into
movsb
or
and
leave
aad
sbb
popa
sbb
popa
fcom
fcom
bound
into
push
pop
push
jl
hlt
add
nop
or
clc
fwait
and
jg
mov
pop
jno
icebp
rcl
mov
mov
scas
lret
inc
mov
dec
jmp
or
jb
push
scas
jbe
jp
jno
in
dec
adc
bnd
jb
cmpsl
sbb
lret
mov
out
test
add
dec
push
inc
out
mov
push
push
shll
nop
arpl
cld
out
ljmp
lret
movsb
popa
lds
jle
flds
cmpb
add
mov
xchg
pop
jno
mov
into
imul
int3
or
sti
inc
jmp
aaa
ss
mov
add
xchg
aam
daa
mov
clc
enter
adc
fmull
xchg
jne
in
and
mov
aam
mov
push
push
cmp
fwait
cmp
iret
shlb
out
idivl
add
lods
push
mov
add
mov
add
mov
clc
mov
scas
imulb
sbb
mov
pop
aad
pop
sub
mov
sbb
add
fldl
xor
shll
loop
fmuls
xor
xor
dec
pop
mov
addr16
jae
shrb
test
jg
mov
xor
dec
out
bound
cltd
aam
iret
cmp
xor
ljmp
inc
xor
sahf
jmp
sub
cwtl
dec
push
shrb
movsl
ror
xchg
and
rorl
jo
push
stos
mov
icebp
adc
push
fwait
adc
jg
push
lahf
xchg
xchg
divl
adc
add
mov
cmp
mov
or
sub
jbe
mov
shrl
fmul
jmp
jp
adc
mov
xor
fcoml
sbb
les
pop
frstor
subb
loope
sbb
fwait
outsb
repnz
xor
inc
and
decb
fs
sub
aad
ss
mov
push
xor
mov
icebp
pop
pop
jne
sbb
dec
xor
pop
mov
repz
sub
pusha
jecxz
sbb
fdivl
cmp
ja
sub
leave
testl
push
mov
adc
mov
fiaddl
adc
jmp
lcall
mov
shrb
je
jno
loopne
mov
clc
scas
pusha
lret
mov
dec
jle
mov
and
pop
insl
mov
cld
mov
dec
jmp
xchg
cmp
andb
fcompl
movsl
lods
add
pop
out
adc
data16
test
xchg
dec
sarl
cmpsb
add
xchg
sub
xor
inc
dec
dec
sbb
sbb
xor
mov
add
dec
mov
das
mov
das
dec
shll
push
icebp
mov
cmp
std
fisubs
push
idivl
push
jo
xor
hlt
lods
clc
jns
scas
pop
xchg
push
jle
fcmove
mov
add
add
inc
inc
mull
sahf
jecxz
cltd
mov
cli
jg
cmp
out
cmp
mov
sti
add
pop
repz
jnp
test
xchg
adc
out
into
or
aaa
imul
jns
and
popa
sbb
in
inc
scas
jmp
mov
and
and
insb
sbb
jns
inc
add
call
cmp
mov
pop
popf
or
cmp
arpl
sbb
cmp
outsb
dec
mov
jp
cmc
cs
mov
out
outsb
icebp
sbb
test
lds
cld
push
pop
fdivrl
sbb
jp
das
inc
fcom
dec
mov
mov
fdivr
cmp
sbb
lods
idiv
aas
divl
fchs
lahf
popa
aad
and
sbb
ljmp
mov
aad
xchg
adc
lcall
sarb
cmpsl
ja
sbb
pop
mov
pop
repnz
sub
mov
mov
movsl
adc
push
xchg
jl
sti
popa
or
das
in
aam
fidivrl
testl
sbb
filds
loope
imul
call
mov
sbb
mov
subb
test
mov
sbb
rol
lds
or
sahf
sbb
inc
adc
enter
or
bound
push
mov
into
out
fisubrl
sbb
rclb
adc
mov
xchg
mov
gs
adc
push
pop
adc
icebp
dec
and
daa
cmp
mov
mov
sub
and
call
mov
mov
dec
mov
cmp
pop
xchg
mov
and
cmpsb
cmp
lret
mov
stc
mov
les
adc
mov
xor
ret
pop
into
jns
inc
int
aas
lods
cli
mov
loope,pt
jb
dec
cmpsl
sub
aaa
lods
mov
sub
pop
scas
cs
mov
mov
jp
das
movsl
movsl
mov
aaa
mov
out
shll
lret
cmp
cmpl
repnz
lods
fstps
push
xchg
mov
call
fstps
mov
je
push
loope
inc
dec
xchg
hlt
or
test
push
jnp
mov
outsb
mov
insb
mov
mov
nop
dec
sbb
cmc
ret
test
dec
and
decb
xchg
adc
sbb
lahf
and
les
cmpsl
jbe
scas
stos
scas
cmp
pop
pop
loopne
imul
and
push
sarl
cs
jns
psubsb
rcrl
and
push
xor
jmp
outsl
orl
jge
insb
imul
leave
les
pop
cs
movsl
inc
lea
pusha
mov
insl
inc
and
sbb
push
add
dec
call
jecxz
out
ljmp
js
jnp
movsb
fwait
ss
sbb
push
leave
sahf
jg
or
rol
xchg
sub
es
dec
movsl
pop
imul
mov
mov
jb
xor
pop
xchg
jnp
cmpsl
xchg
jb
push
push
and
mov
dec
sbb
test
js
cmp
add
inc
bound
sbb
xor
lods
xor
mov
ret
es
jge
push
das
dec
lret
cltd
push
sbb
xchg
test
jo
inc
sbbl
and
out
push
mov
outsb
sbb
pusha
flds
cs
mov
dec
and
mov
dec
jge
jle
shrl
in
xor
lcall
sub
xchg
dec
pusha
inc
call
mov
addl
add
mov
mov
mov
mov
cmp
inc
mov
mov
into
pop
jbe
push
jl
mov
fidivl
xor
push
addb
loope
pop
repz
jbe
jge
lret
dec
pop
cwtl
out
push
popa
pop
sbb
push
int3
es
int3
subb
mov
sbb
dec
rclb
cld
dec
sub
mov
dec
gs
adc
add
sbb
add
shr
xor
lods
cmpl
aaa
int3
cmpsb
rorl
mov
sub
pop
push
fsubrs
subb
mov
cmp
movsl
pop
jle
mov
loopne
dec
push
adc
jecxz
bound
test
and
pop
sbb
jno
fcmovnbe
mov
aaa
push
jbe
ljmp
adc
xabort
xor
cmp
mov
mov
ljmp
ss
loope
call
xchg
inc
repnz
stc
inc
mov
and
into
lcall
push
sbbb
xchg
stos
xchg
cmpsb
lahf
sbb
pop
mov
lock
out
add
mov
inc
mov
xchg
inc
lcall
sahf
ljmp
mov
add
push
enter
ljmp
nop
test
jmp
xchg
jmp
cmp
fwait
lret
xchg
and
call
daa
insl
sbb
fdivl
cli
sbb
mov
daa
sbb
push
shrb
int
pop
gs
add
add
gs
out
xchg
sub
fwait
loope
pop
aad
xchg
dec
imul
into
jg
sbb
jge
cli
mov
dec
lret
push
loope
or
and
sahf
jle
fcmovu
fidivs
mov
in
push
jle
xchg
repz
sbb
in
aam
pop
lea
pushf
fs
cmp
mov
sti
icebp
addr16
xor
sub
sbb
out
lods
and
add
pusha
js
cmp
sarb
notl
mov
sub
shl
jb
aas
dec
push
bound
into
pop
dec
lcall
fdivs
mov
inc
cmp
js,pt
and
mov
ds
sub
fcomps
cld
lods
icebp
or
sbb
sub
pop
pop
jne
in
cmp
in
fidivrs
lds
nop
mov
jns
pop
push
aaa
dec
fbstp
pop
incb
adc
pop
xrelease
push
nop
mov
cld
sub
cmp
jae
dec
xor
outsb
pop
adc
fdivrs
jg
outsl
hlt
popl
imul
sub
gs
pop
je
hlt
rorl
and
aam
cwtl
sbb
fstpt
fidivrs
xchg
cltd
in
aaa
in
push
ds
inc
insl
inc
repz
xchg
pop
xchg
dec
and
pusha
out
pop
mov
daa
jp
adc
mov
movsb
jb
lcall
movsl
and
add
sbb
stos
xor
pop
add
stos
cmc
dec
test
xorl
mov
jp
jne
mov
iret
cmp
inc
out
push
cmp
mov
nop
insb
scas
ret
cmp
pop
loope
arpl
int3
in
xchg
ret
jo
les
adc
inc
mov
stos
jns
fnstsw
pop
das
es
mov
jg
mov
push
or
popf
push
pop
sbb
aad
dec
test
push
lahf
clc
sub
pop
dec
add
xor
mov
dec
xchg
dec
mov
push
sbb
jmp
cmp
movsb
mov
andb
xchg
outsb
pop
outsb
adcl
xchg
add
mov
pop
sub
in
cld
sbb
cs
xor
cmpsb
jmp
scas
mov
jp
insl
xchg
pop
cmpsb
jo
inc
pop
inc
dec
jo
push
out
out
insb
xor
imul
pop
jg
push
xor
inc
mov
xchg
xchg
stc
stos
add
cwtl
mov
les
xlat
pusha
xor
mov
aaa
mov
mov
ds
jae
rcrb
mov
fucomi
xor
lods
or
dec
cltd
aaa
mov
mov
fidivs
out
sti
pop
fs
hlt
pop
fistpll
in
shll
or
lods
or
scas
test
fs
in
jl
lods
inc
pop
xor
cld
and
xchg
hlt
push
mov
mov
sbb
push
addr16
jne
cli
jmp
lock
mov
push
fadds
inc
push
fstps
inc
dec
punpckhwd
push
adc
ss
lods
inc
scas
mov
test
movb
jae
dec
jbe
hlt
loope
std
mulb
notl
les
mov
push
pushf
movsb
loope
jmp
push
adc
outsl
outsb
cmpsl
idivb
sti
sbb
jmp
mov
arpl
mov
mov
adc
dec
sbb
imul
es
adc
pop
and
mov
sub
call
jbe
mov
lcall
cmp
jecxz
int
mov
rorb
nop
jae
inc
mov
sbb
orb
cmp
daa
xlat
mov
jle
lods
push
ret
xor
pop
ss
xorb
ret
jns
movsl
sbb
gs
lret
inc
fildl
fwait
fnsave
mov
push
push
mov
sbb
push
pop
or
fimuls
lret
loopne
xchg
add
push
shll
mov
dec
fwait
and
mov
lret
loope
jnp
mov
xchg
sbb
or
lods
push
adc
adc
or
or
iret
mov
in
pop
mov
fimull
leave
pop
push
pop
cmp
cld
shlb
xchg
add
or
mov
aas
cmp
out
xchg
fcomip
or
xor
cmc
pop
scas
gs
popa
xchg
lods
mov
cs
xchg
sub
dec
out
sub
in
add
xorl
inc
sbb
mov
in
das
loopne
movsb
jnp
icebp
sub
xor
adc
andb
mov
mov
dec
adc
sahf
adc
inc
mov
rclb
dec
push
ja
adc
mov
test
sbbl
jg
sarl
jns
cld
cs
out
push
cmpb
xchg
shll
nop
lret
mov
and
inc
push
shlb
jns
mov
xchg
jg
adc
add
cltd
sub
int3
clc
lret
stc
cmp
and
sbb
push
pop
dec
adcb
movsb
and
fs
or
inc
stos
adc
fwait
sub
notl
xor
test
lods
mov
mov
cmp
and
and
es
ljmp
into
das
mov
mov
popf
insb
lret
sub
imul
daa
push
arpl
sub
cltd
push
pop
loope
out
ds
xchg
sbb
add
inc
je
imul
cmc
jmp
movb
lret
mov
pop
pusha
jno
mov
js
icebp
nop
mov
std
push
mov
fmuls
cld
jae
inc
and
les
add
add
cmp
lods
cmp
orb
mov
jnp
lea
cmp
out
lret
mov
jg
cmp
jb
dec
xor
adc
push
ucomiss
mov
pop
shlb
mov
icebp
std
jg
lret
enter
inc
sbb
sbb
push
pop
or
cs
add
xchg
mov
mov
repnz
add
mov
inc
mov
inc
rclb
mov
add
push
lds
scas
cmp
jno
es
mov
adcl
dec
and
jne
xchg
test
pop
or
add
stos
loop
push
sbb
lret
in
test
popa
jae
movsl
cltd
adc
dec
pop
jecxz
ret
ficoms
and
int3
mov
jecxz,pt
jmp
adc
mov
negb
aas
fiadds
and
inc
js
mov
inc
or
inc
inc
lahf
lea
mov
jg
xor
in
cmp
xlat
sbb
scas
sarl
ret
cwtl
mov
and
sarb
xchg
dec
adc
pop
dec
mov
out
cmp
push
mov
rcll
outsb
sarb
outsb
sub
aam
pop
outsl
ss
test
sub
lahf
cmpsl
push
roll
jp,pt
adc
insl
jae
negl
mov
xor
inc
jbe
mov
push
cld
pop
mov
das
fildll
jne
xor
scas
fiadds
call
or
mov
pop
lods
ret
js
rclb
into
stos
add
pop
push
insl
clc
imul
xchg
xor
sub
out
outsb
daa
lcall
mov
pop
mov
and
aam
dec
in
test
negb
out
mov
mov
inc
imul
xlat
and
pop
mov
test
jge
xchg
cmp
inc
inc
pop
cltd
dec
cmp
inc
scas
es
rorb
cmc
in
ret
cwtl
add
xchg
cmpsl
out
dec
gs
cmp
cmp
cli
dec
dec
pop
ffree
pop
add
stc
and
outsb
testl
push
fisttps
inc
xchg
fmull
xor
push
lcall
jbe
xchg
sarb
stc
fimull
push
xor
dec
loopne
pop
xor
inc
and
ret
sub
xchg
dec
stc
out
movsl
int
addr16
cmp
or
mov
pop
rolb
add
scas
cmp
jno
lea
jb
bound
ds
jecxz
xor
adc
shrl
jmp
xchg
inc
sbb
fdiv
xor
int
test
mov
loop
mov
add
in
mov
shll
and
mull
dec
out
jbe
icebp
outsb
and
push
mov
dec
lcall
pop
sub
mov
push
imul
xchg
gs
xchg
push
xorl
or
xchg
inc
test
dec
push
inc
push
cmp
ret
aad
repnz
fsubrs
repnz
sbb
xchg
add
out
pop
mov
cltd
add
dec
rcl
repz
pusha
sub
mov
mov
movsl
mov
int3
imul
cmp
test
loop
sub
leave
adc
es
fcmovne
push
int
add
mov
mov
fistl
mov
sub
insl
pop
rcll
fidivs
icebp
int
movsl
addb
sbb
les
push
lret
xchg
es
push
mov
mov
cwtl
js
sti
add
out
xor
jns
and
or
add
mov
jo
mov
popa
repz
jle
jmp
scas
push
scas
pop
pop
es
pop
pop
push
mov
push
cmp
mov
cld
jbe
or
daa
or
cmp
xchg
sbb
sahf
mov
and
test
mov
pushf
cs
repz
sub
sbb
lock
push
mov
sub
jge
aam
test
imul
xor
clc
ja
mov
mov
les
sub
jge
mov
jo
or
es
adc
scas
and
mov
or
shll
es
inc
or
rcr
xor
scas
dec
and
xchg
and
xor
push
mov
sbb
call
pop
daa
repz
ja
add
sub
lods
mov
ror
nop
sub
js
sbbb
sti
int
ficompl
jno
mov
mov
fdivs
scas
pop
movsl
xor
mov
daa
xor
stos
cwtl
sub
stos
adc
mov
fst
movb
lods
inc
stos
pop
ja
fisubs
mov
addl
cmp
and
pop
insl
jle
inc
je
mov
shl
pop
mov
in
test
fcmovb
push
sub
cwtl
cmpsl
aam
imul
inc
xlat
dec
outsb
out
push
pop
jecxz
enter
cli
cld
lods
std
add
mov
fwait
cs
or
jbe
enter
mov
inc
loop
pop
test
xchg
add
mov
sub
xchg
cli
cltd
jecxz
or
stos
mov
and
andl
insb
roll
sbb
scas
fsubrl
xor
mov
idiv
andl
pop
sbb
inc
sbb
faddl
cmp
sub
push
inc
inc
sbb
pop
cmpsl
cmpb
test
xor
inc
mov
dec
adc
inc
test
mov
call
je
leave
outsl
movsl
gs
mov
mov
dec
dec
out
mov
pop
cmpsb
sub
sti
add
push
xchg
pop
scas
mov
inc
das
ret
outsb
jne
daa
into
rcr
outsb
notb
mov
inc
fmuls
in
pop
mov
cmp
shl
mov
or
gs
pop
pop
push
and
pop
ds
aas
test
mov
das
scas
add
repnz
loope
out
mov
fsubs
push
cmp
dec
xchg
repnz
sbb
dec
push
mov
mov
pushf
daa
ret
inc
cmp
pusha
pop
hlt
or
dec
in
inc
fcoms
pusha
xorl
mov
or
sub
dec
lods
pop
cmp
inc
dec
out
lods
xchg
dec
stc
clc
mov
and
jge
int3
sbb
push
add
fisubrl
int3
adc
andnpd
std
jg
cmp
inc
jle
in
push
cmp
cmp
mov
shrb
mov
xchg
incb
fldt
repnz
jecxz
mov
add
mov
inc
add
dec
lret
test
nop
fisttpll
js
cld
mov
and
subb
inc
add
mov
orb
fs
mull
aam
daa
push
ds
mov
lds
fscale
ret
loop
cmc
gs
movsl
pop
ficomps
fsubl
xchg
in
out
loop
call
in
cmp
sbb
insb
ds
aad
push
mov
sbb
lret
je
hlt
in
daa
idivl
incl
inc
imul
repz
inc
sub
sub
test
loopne
adc
rorb
push
loop
pop
in
jo
insb
shrb
cmp
fstpl
fldpi
fs
or
dec
out
ficoml
jbe
cmpl
negb
mov
pop
sub
or
lods
and
lock
adc
movsl
inc
push
pusha
cltd
mov
popf
aas
pushf
jmp
bound
pushf
dec
nop
lret
rorl
jmp
rcrb
sti
mov
jp
dec
sbb
loop
addb
cmpb
imul
xor
xchg
ja
data16
mov
inc
cmp
and
insl
add
into
fs
sub
clc
cli
stos
insl
inc
pop
adc
inc
in
lahf
insl
fldenv
ret
into
cwtl
test
pop
sbb
int
rorb
sub
sbb
sub
mov
pop
in
push
sub
dec
das
mov
or
mov
rcll
sub
inc
hlt
inc
jl
fidivrl
push
mov
outsl
fidivl
scas
repz
ret
repnz
push
jmp
ret
lret
and
arpl
cmp
call
jp
cmp
negb
dec
fstl
jno
out
mov
or
imul
jle
int3
test
xor
fsubrl
cwtl
cmp
imul
cmp
stos
and
adc
or
call
add
sbb
push
arpl
inc
mov
xchg
addr16
push
dec
sahf
out
jo
fcmovb
push
test
mov
lods
pusha
and
sahf
or
and
fwait
ret
pushf
fsubs
mov
pop
xor
loopne
out
mov
push
cmc
xchg
inc
mov
dec
addr16
stos
inc
adc
lods
cmp
xchg
aam
adc
ret
pop
xchg
dec
sub
aaa
stc
testl
int3
mov
mov
pop
out
js
lret
out
gs
inc
dec
test
and
push
ret
inc
lock
xor
sldt
adc
push
push
add
lds
hlt
lahf
and
xchg
bound
or
ret
incl
repz
sbb
mov
shrl
inc
lods
dec
stos
cmp
xchg
jb
add
out
cwtl
xor
xchg
add
ficoml
leave
fcoms
ret
mov
and
jbe
mov
or
mov
aam
pop
xchg
dec
jnp
mov
inc
adc
push
mov
sti
hlt
sbb
test
mov
ja
imul
fincstp
adc
jno
pop
in
int
divb
lock
xchg
loope
jne
cltd
shlb
push
popf
push
stc
jecxz
mov
push
xchg
push
pop
push
and
xchg
adcl
push
mov
mov
bound
mov
or
das
push
sub
insb
repnz
outsb
popa
jl
ret
or
xor
sahf
gs
cmp
sub
cmpsb
aas
push
inc
mov
fs
pop
lock
out
cmp
pop
jecxz
test
dec
jno
push
data16
in
add
push
pushf
out
andb
pop
mov
lcall
mov
sti
lret
mov
loopne
in
sbb
push
and
dec
xlat
loopne
iret
mov
mov
test
scas
lahf
cmp
mov
mov
fdivs
subb
mov
fistps
sbb
repnz
neg
bound
jmp
mov
popa
shrl
jge
rorl
popa
add
adcb
movsb
cmp
mov
sub
inc
popa
std
out
fidivrl
pop
xor
and
push
mov
bound
pop
cmpsl
shlb
adc
loop
test
ret
js
sub
sub
jbe
movsb
dec
add
mov
in
jo
js
arpl
mov
arpl
inc
dec
fidivrs
hlt
addl
sub
cs
add
mov
roll
sbb
ljmp
lods
mov
call
and
xchg
add
add
das
ss
shrb
cltd
rcrl
cmpsl
jmp
testl
dec
movb
sub
add
ret
test
mov
sub
test
out
mov
ljmp
lahf
insb
add
ljmp
jne
sub
jns
fisttpll
cmpb
mov
cmp
inc
dec
pop
cmp
cwtl
pop
cmpsb
xor
dec
sbbl
inc
or
fildl
inc
lahf
js
sbb
sbb
aaa
push
repz
les
addr16
fld
xchg
pop
jb
jmp
inc
inc
mov
insl
stc
sub
aam
movsb
xor
test
and
cs
lea
xchg
imul
imul
mov
icebp
push
bound
pop
sbb
jl
mov
call
mov
dec
dec
adc
cltd
sbb
mov
xchg
ljmp
test
shlb
push
test
das
dec
lds
mov
or
arpl
lcall
cmp
in
mov
xor
jne
adc
xchg
leave
jg
push
ds
je
or
adc
pop
addr16
cs
ds
push
or
xchg
sahf
xchg
mov
mov
mov
pop
jbe
mov
or
pop
xor
imul
ret
mov
fadds
fwait
add
adc
jle
mov
sbb
dec
cmpl
pavgb
out
mov
das
xchg
xlat
pop
movsb
iret
add
xchg
or
daa
insb
jecxz
fcoml
insl
lret
sbb
xchg
inc
cmpsb
mov
mov
sub
mov
adcl
xchg
rorl
mov
and
or
mov
je
hlt
lcall
stc
push
mov
and
push
ss
push
push
mov
cld
sub
repz
or
out
dec
clc
int3
repz
mov
mov
xchg
and
aad
lret
and
dec
or
fiaddl
jb
push
in
sub
inc
and
mov
jno
cmpsb
test
jecxz
jnp
add
in
dec
pop
insb
xchg
popf
cld
push
or
xor
mov
dec
fsubr
rclb
pop
or
shll
int3
add
clc
dec
sarl
lahf
mov
sbb
jno
mov
lds
divb
aad
aas
jge
icebp
inc
cmp
iret
push
xor
pusha
jae
jnp
rorl
jno
inc
jecxz
push
jae
pop
dec
and
xchg
sbb
and
dec
inc
mov
mov
inc
dec
or
jmp
mov
push
mov
outsb
andl
out
pop
inc
and
sub
pop
push
test
iret
xchg
and
out
and
loope
scas
dec
mov
fiadds
inc
jmp
push
xchg
pop
les
add
push
adc
inc
mov
arpl
subl
lahf
xchg
addr16
test
add
mov
mov
push
add
pop
loopne
mov
sbb
or
std
cmp
fmull
adc
rcrl
gs
adc
add
fwait
xchg
mov
fnstcw
clc
leave
cwtl
sahf
xor
pusha
movsl
push
and
out
jle
mov
test
mov
and
adc
into
aas
inc
xor
repnz
xchg
or
cli
or
and
outsb
and
js
outsl
test
xchg
roll
mov
out
rolb
cmc
xlat
pop
cmp
xchg
out
sti
dec
cmp
rclb
movsb
sbb
nop
repz
add
push
adc
and
sbb
sub
mov
inc
jo
inc
push
and
mov
pop
cmpsl
pop
sbb
mov
add
xor
lea
xchg
scas
mov
icebp
sbb
mov
xor
mov
mov
leave
scas
inc
cmpsb
cld
or
lea
cs
fldenv
cli
push
outsl
add
push
mov
jmp
cmpsb
and
movsb
stos
mov
mov
mov
mov
insl
cmp
test
dec
xchg
xchg
or
test
inc
and
mov
cmc
enter
xchg
pop
loope
test
cs
mov
jbe
aad
xchg
push
data16
jns
cwtl
push
mov
jo
dec
push
push
sti
fcomp
out
fwait
in
dec
es
adc
int
xchg
jl
adc
or
push
xchg
sbb
out
adc
mov
outsb
jmp
push
sti
inc
xchg
rclb
shlb
dec
cli
addr16
xchg
ljmp
xchg
std
mov
aam
mov
ret
fisttpll
jb
xchg
stos
mov
mull
hlt
in
xor
pop
aaa
push
ljmp
sub
dec
ret
inc
loopne
mov
mov
dec
jne
mov
out
and
repz
fidivs
mov
mov
cs
add
sbb
pop
cmc
jae
cltd
xchg
xchg
jmp
popa
lods
nop
jb
movl
inc
adc
mov
cmp
lea
mov
out
ret
adc
jmp
shlb
sbb
lret
dec
inc
xor
pop
mov
cs
pop
mov
jns
jl
nop
pop
inc
mov
in
add
int
dec
adc
dec
or
jecxz
push
andl
push
mov
xor
push
pop
mov
or
or
les
sbb
loope
mov
xchg
loop
xchg
pop
mov
inc
and
mov
lds
mov
into
mov
fmull
pop
in
push
lret
cmp
add
mov
js
or
popa
out
out
adc
orl
xor
mov
loopne
mov
lds
xchg
mov
repnz
pushf
and
push
je
imul
jl
outsl
xlat
cmp
fwait
xchg
push
xchg
mov
jp
insl
cmc
ret
or
test
xor
inc
mull
or
pop
fdiv
outsl
inc
cmp
in
push
aas
cmp
cli
imul
jle
and
lods
xchg
xor
jle
test
aas
inc
push
mov
adc
pusha
mov
dec
sbb
pop
mov
nop
out
aad
lods
push
inc
mov
cltd
pusha
jle
jp
addr16
or
adc
xor
push
adc
sub
outsl
das
jbe
or
jb
std
push
pop
lds
addr16
outsb
sahf
iret
mov
xchg
push
loope
mov
dec
sbb
jae
xlat
and
int
dec
lret
pop
xlat
mov
subl
xchg
push
push
pop
mov
lcall
fwait
out
stos
mov
and
shlb
cmpsl
mov
dec
xor
jno
mov
sbb
insl
shlb
mov
daa
shlb
sbb
adcb
mov
test
push
push
rcrl
xor
pop
lret
lock
cmp
or
iret
push
mov
das
mov
pop
pusha
ja
pop
leave
adc
hlt
aam
movsl
mov
aad
inc
push
mov
pop
or
adc
xorb
dec
fwait
popa
leave
and
leave
jns
xchg
cs
xchg
sbb
mov
pminub
add
mov
lretw
and
cmpl
in
ret
scas
and
inc
test
mov
xlat
nop
mov
mov
neg
in
xchg
push
or
xor
int3
mov
mov
iret
adc
push
xchg
sub
mov
lds
inc
arpl
test
pop
adc
pop
dec
ljmp
push
and
icebp
xor
and
enter
mov
lret
pop
inc
jmp
aaa
aam
cld
xorl
lret
outsb
push
fldenv
pop
lcall
cwtl
mov
jmp
push
dec
push
fistps
sbb
js
loop
jbe
fstl
data16
rcrb
loope
das
shrb
test
or
clc
repnz
lahf
push
inc
pop
or
sub
or
lods
cmpl
mov
push
sbb
mov
pop
loop
fcmovb
aas
je
test
xchg
push
xchg
fmull
mov
pop
subb
push
push
dec
sbb
sti
bound
or
cmc
push
subb
stos
pop
push
mov
ss
mov
sahf
insl
dec
dec
es
push
sub
loop
mov
repnz
push
cmc
xor
pop
stc
mov
pop
and
cmp
inc
xor
out
scas
jbe
dec
loop
negl
sbb
test
sarb
xor
jmp
je
imul
pop
xchg
mov
push
xchg
xorb
incb
aad
jae
xchg
das
pop
xor
jbe
pop
stc
bound
pop
mov
inc
jp
loope
mov
es
loop
adc
dec
gs
out
movsb
mov
dec
in
push
cmc
mov
int3
add
or
mov
push
xor
lahf
mov
xchg
jne
jmp
ret
sub
and
outsl
in
neg
mov
jmp
je
fwait
jo
jge
push
dec
sbb
insb
xchg
nop
jg
dec
imul
aam
lcall
adc
into
scas
mov
jbe
push
js
adc
push
test
xor
sbb
repz
pop
aam
ss
cmpl
inc
ret
lcall
ret
inc
pop
stc
rclb
dec
and
pop
xchg
xor
sub
stc
rolb
jg
leave
xor
jb
and
xor
jecxz
dec
ljmp
sub
jmp
fsubrl
mov
adc
nop
xorb
jo
mov
adc
imul
out
jp
cli
ret
outsl
mov
std
sbb
subb
adc
ds
inc
imul
xchg
outsl
les
jecxz
dec
fistpl
hlt
lret
mov
sahf
xchg
and
mov
adc
inc
js
jmp
pop
pop
inc
js
add
push
fsubl
movsl
ficomps
filds
and
popa
shrl
inc
mov
mov
pop
and
mov
aad
push
pop
lcall
pop
or
dec
fisttpl
xor
ja
subl
fimull
adc
shr
cltd
outsb
rolb
pushl
xor
sub
popa
pop
xlat
mov
clc
push
cwtl
and
push
idiv
pop
sarb
xchg
ja
repz
pop
mov
jecxz
cmp
mov
stc
ret
inc
icebp
mov
or
ss
cmp
rorl
push
dec
mov
push
in
xchg
ret
mov
aaa
pushl
mov
mov
xor
jp
xchg
pop
nop
xchg
jmp
cmp
mov
or
addl
add
movups
lods
xchg
inc
lods
std
push
rcrl
or
out
mov
inc
jne
sbb
and
mov
mov
es
jns
cmp
bound
fstpt
ficoml
loope
es
jnp
sbb
dec
sbb
aas
fwait
out
mov
add
mov
outsl
adc
mov
orb
lcall
xor
adc
rep
aas
jb
iret
cmp
scas
cmp
xchg
xchg
push
popf
cmp
jnp
and
or
jno
imul
rolb
pop
or
out
or
xor
lcall
scas
fsubl
cmp
or
jnp
icebp
fstp
xchg
int
data16
in
mov
xchg
loope
sub
cmp
movsb
int
mov
imul
iret
leave
xlat
pushf
inc
fmul
data16
xchg
mov
jo
cmp
ss
or
mov
dec
and
sub
pop
inc
sub
mov
ds
xchg
out
and
sub
sar
out
inc
cmp
pop
add
cmp
out
stos
ret
jmp
aaa
int
lret
sti
xor
rcrl
dec
leave
sub
in
adc
sbb
imul
cmp
xor
leave
daa
jns
loope
lret
repnz
orl
add
cmp
xlat
lea
stc
les
xor
fld
loope
push
and
mov
lea
jb
xor
cmp
or
loopne
sarb
pop
jb
mov
movsb
out
lods
mov
leave
jp
pop
jge
push
xor
test
mov
dec
pop
jo
aad
es
lret
test
jmp
test
dec
ja
dec
sbb
sbbb
imul
frstor
lret
std
cs
sub
nop
iret
cmp
mov
lock
out
arpl
xor
adc
jo
push
add
testl
icebp
xorl
sub
inc
mov
wbinvd
loope
loop
push
push
leave
mov
mov
xor
mov
testl
sahf
mov
xchg
les
test
cmpsb
repz
adc
mov
stos
inc
lock
add
sub
int3
sbb
add
mov
icebp
inc
das
ret
imul
gs
stos
lret
dec
ss
jp
sub
jmp
adc
adc
outsl
ret
and
sub
into
iret
icebp
and
mov
xor
cmc
jo
cmp
fdivrp
add
pop
loop
adc
cmp
adc
push
fcomps
insb
loopne
fbstp
scas
scas
mov
dec
test
and
out
add
scas
iret
out
hlt
ds
scas
mov
lods
mov
cmpsl
mov
jb
xchg
in
pop
xor
or
pop
adc
pop
mov
test
int
xchg
lock
mov
out
push
test
mov
in
dec
dec
mov
jle
xorb
xchg
and
aam
outsb
mov
jge
xchg
pop
aas
int3
loope
in
xorl
clc
sbb
mov
xchg
popf
and
icebp
or
adc
stos
dec
rcr
pop
jae
fadds
imul
pushf
inc
scas
xchg
adc
inc
pop
mov
sub
shll
jbe
sub
dec
std
clc
or
sub
bound
in
xchg
cmp
pop
cmc
aam
out
sub
sbb
fstps
stos
pusha
icebp
sbb
mov
mov
in
add
std
scas
or
xchg
sbb
pop
rcrb
jecxz
pop
xor
adc
mov
out
lock
jl
xor
jmp
dec
jae,pn
wrmsr
inc
mov
sub
loope
sbbb
mov
fimull
sbb
inc
xor
fcomp
sbb
scas
mov
cmp
jo
leave
rcr
adc
push
pop
lcall
ret
lock
test
popa
pcmpeqw
js
inc
lods
push
inc
clc
cmp
aaa
test
jnp
and
xchg
imul
mov
push
sti
push
cmp
out
int
repz
clc
push
mov
or
mov
push
pop
dec
fmuls
jnp
and
sub
jae
mov
in
mov
fists
addb
ficoml
dec
aam
xor
lret
add
adc
pop
shrb
cmp
and
insb
cmpsl
test
sbb
jge
xchg
mov
and
inc
enter
int3
adc
and
mov
sbb
fists
notl
inc
jmp
add
push
jl
and
cmpsl
jbe
pop
lahf
and
jge
out
jbe
inc
lods
ficompl
jb
lods
shl
cmp
jl
mov
xor
int3
push
add
lds
and
xor
jae
mov
cmpsb
js
add
sub
mov
pushf
or
sti
mov
ret
sub
sbb
dec
call
dec
lds
mov
or
mov
pop
push
dec
mov
mov
mov
jae
mov
daa
inc
in
divl
adc
jmp
popf
ljmp
dec
or
ret
int
ss
adc
not
xchg
sbb
and
xchg
xchg
push
orb
or
fdivrs
sub
lds
xchg
jb
sub
adc
xchg
in
out
xor
hlt
pop
mov
dec
xor
cmp
ja
scas
sarb
dec
sahf
inc
mov
sub
je
in
pop
jbe
sub
es
bound
inc
jb
sbb
shl
jge
out
dec
fwait
lock
movsb
adc
je
ss
subl
jmp
adc
cmc
xchg
enter
mov
enter
sub
sub
jne
lret
mov
andb
and
mov
insl
jb
mov
jne
adc
out
inc
push
or
insb
icebp
notl
cmpsb
daa
add
inc
or
fwait
scas
loop
in
js,pn
and
xchg
dec
jg
add
rol
or
push
mov
jg
jns
sub
dec
adc
inc
xchg
test
pop
mov
jbe
sbb
sub
inc
mov
xor
push
fstpl
fadd
sub
mov
adcb
ret
test
shlb
rolb
push
jmp
xor
dec
shll
test
cli
pop
dec
jmp
pop
fwait
or
inc
mov
cmovl
mov
cmpb
mov
out
sub
dec
sub
in
sahf
aad
repnz
pop
xor
repz
movsb
call
fwait
dec
cmp
sbbl
nop
rorb
icebp
xchg
push
lahf
and
mov
mov
lahf
test
rcrb
mov
lods
mov
pop
adc
fbstp
ss
sbb
push
dec
push
outsl
xor
cmpsb
fnstsw
push
insl
inc
adc
mov
jno
rclb
sbb
jo
lds
iret
mov
adc
incl
je
cmp
add
test
fsubs
xchg
fcoml
lahf
jp
sbb
inc
mov
movsl
ljmp
scas
cwtl
xchg
mov
jge
xor
in
mov
int3
xchg
jp
add
inc
push
pop
dec
neg
faddl
fcomi
fistpll
jl
fildll
dec
or
dec
cmc
clc
dec
mov
iret
jbe
jae
push
dec
jb
xchg
mov
fdivl
inc
xchg
das
xor
mov
cmp
loopne
movhps
js
adc
push
pop
call
mov
push
gs
test
dec
cs
iret
or
movsl
icebp
xor
out
xchg
adcl
aaa
add
or
jle
dec
call
lock
fnsave
nop
icebp
add
jmp
xchg
enter
es
iret
sbb
les
and
pusha
sub
call
add
inc
mov
and
scas
aam
and
xchg
sub
jno
fdivl
dec
enter
adc
mov
loop
lahf
fdivr
jns
dec
pop
sbbl
dec
lahf
mov
icebp
adc
fwait
cmp
je
xor
out
jne
in
sub
insb
ja
aaa
pusha
adcb
cmp
in
sub
push
bswap
roll
jmp
out
jp
mov
xchg
lret
push
dec
adc
arpl
pusha
arpl
sbb
jns
ja
inc
push
sahf
andb
je
jne
mov
jae
push
mov
dec
jp
mov
cld
cmp
shlb
ret
dec
pop
sbb
adc
mov
test
data16
or
lods
imul
aas
loop
push
stc
sbb
outsb
sbb
add
sub
cmp
stos
mov
mov
mov
lods
ficoms
add
sarl
fcomps
pop
lods
sub
or
push
jne
fidivs
sar
fnstenv
shll
scas
ds
loopne
add
and
addb
lahf
pusha
rcll
sbbb
lret
lret
fimull
dec
mov
mov
popa
pop
lods
sbb
inc
lods
xchg
mov
sbb
repz
in
shr
sub
jae
movsl
test
or
push
push
mov
jge
cmpl
inc
mov
scas
cli
loop
xor
add
xor
mov
cs
aam
rcrb
cs
ds
push
int
add
xchg
aad
lods
or
jge
test
and
add
mov
and
and
jl
negl
cmp
mov
xchg
add
out
inc
xchg
inc
or
into
ret
daa
jb
cmpxchg
test
idivl
fcompl
cmp
sbb
and
mov
sub
inc
inc
enter
gs
iret
push
xor
mov
data16
xor
inc
xor
jno
sub
stos
fldl
adc
pop
hlt
xchg
or
cwtl
ret
cld
ror
adc
mov
sbb
sbb
push
pop
shlb
test
xchg
inc
jnp
repz
cmp
negl
insb
xchg
jmp
xlat
jo
test
fcmovb
mov
out
adc
fnstsw
xor
add
int
inc
and
cmp
stc
orl
in
cmp
repz
or
mov
or
sbb
mov
adc
cmp
add
test
pusha
punpckhwd
jl
enter
mov
xor
cs
das
bound
sub
lahf
subb
clc
mov
insl
lods
inc
push
pop
int
popa
jge
lret
shll
xor
cltd
fbld
xchg
push
testb
or
xor
loope
cmpsb
movsl
inc
sub
xchg
mov
dec
xorl
jno
adc
int3
ja
push
mov
lods
data16
fdivs
jae
fwait
sbb
mov
adc
rcrl
dec
movsl
cmp
jb
ja
add
sbb
push
ja
enter
xor
jg
enter
mov
fmul
pop
movsl
or
lock
adc
push
loope
or
leave
subb
dec
rolb
mov
lods
stc
fcomip
sahf
pop
test
sub
sub
jp
adc
adc
inc
ret
add
sbb
lea
in
repz
or
stc
lahf
data16
sub
loope
jmp
xchg
bound
test
sub
adc
inc
push
lods
test
mov
push
push
inc
jl
sbb
in
shrb
divb
cmc
std
inc
aam
iret
cld
imul
js
enter
das
and
jb
cli
or
int
outsl
iret
pop
aam
insb
mov
xor
jmp
incb
pop
push
inc
sbb
pushf
dec
adcb
add
inc
cli
jno
fisubs
testb
push
movsl
push
test
sub
imul
push
cmp
stos
xchg
push
adc
mov
mov
cmc
mov
or
lcall
movsb
push
negb
mov
sub
pop
fidivrl
pop
ss
inc
push
insb
push
ss
shrl
negb
insl
xchg
test
mov
cwtl
add
test
mov
adc
push
mov
mov
std
cwtl
push
fisubrs
xor
cltd
loop
scas
fs
aaa
mov
push
ficoml
cmpsb
add
popf
call
cmp
cmc
xlat
xchg
test
push
ficompl
xor
cmpsb
xchg
cmp
cli
aam
addr16
xchg
icebp
inc
xorl
cs
negb
jmp
xchg
ja
jl
fdivl
xor
inc
pushf
inc
ss
lods
popa
pop
jg
movsb
test
dec
xchg
push
ss
and
movsb
xchg
aad
mov
loope
lcall
repnz
sbb
fnop
mov
mov
dec
mov
pminub
adc
sbb
adc
sbb
sbb
fistps
sti
loopne
inc
jbe
mov
or
fdivrl
mov
setle
add
fwait
mov
out
sub
mov
scas
test
sbbb
addr16
es
ds
cmp
call
arpl
stos
cmp
std
pop
sarl
sbb
lds
movsb
mov
xor
in
sti
add
and
cmp
xor
in
and
sub
out
pushf
or
cli
push
mov
popf
fldl
or
ja
stos
fs
mov
imul
or
mov
in
or
and
inc
sbb
push
xchg
jne
and
cs
or
inc
push
sbb
imul
fsubrl
addr16
dec
xchg
aaa
int
sbb
aaa
rolb
jg
imul
lret
pop
mov
and
or
jecxz
or
xlat
adc
fwait
mov
xchg
adc
push
lret
adc
icebp
int
ja
loopne
push
xor
add
jp
pushf
pop
push
inc
xorl
inc
or
adc
cmp
xor
cmpsb
push
data16
dec
popf
cmp
stos
dec
cmp
sbb
jp
jp
sbb
aaa
lahf
push
mov
mov
movsl
mov
inc
jns
cmp
jl
outsb
in
stos
ret
xchg
mov
js
cmp
jne
jge
xchg
pushf
sub
xor
movsb
jmp
cmp
mov
stos
pushf
lods
in
subb
icebp
xlat
dec
add
inc
out
jmp
jnp
jl
je
mov
pop
cmp
sbb
out
sahf
dec
cmc
repz
mov
xchg
fildll
outsl
pushf
enter
and
popa
sbb
ret
adc
mov
add
xor
pop
sub
cmp
push
adc
mov
test
imul
jns
mov
cli
mov
xlat
mov
loope
mov
cmpsl
subl
dec
push
pusha
mov
fdivl
aam
test
cmc
imul
jne
adc
inc
xchg
or
sbb
fidivl
lods
in
xchg
dec
dec
scas
int
push
inc
imul
xchg
ss
pop
arpl
incb
push
ja
in
xchg
or
add
cs
icebp
loopne
into
aam
adc
xor
lock
ljmp
cs
aad
sub
popa
negl
mov
xchg
mov
cmpsb
les
into
stos
and
or
ret
push
push
aaa
ret
or
ljmp
idiv
inc
push
int
sub
imul
cmp
dec
pop
or
or
js
lret
fcoms
push
pop
adc
cmpsb
pop
push
sub
mov
mov
jmp
loop
pop
idivl
xor
add
cmpsb
aas
dec
dec
fwait
adc
popa
cwtl
fcomps
and
rcpps
mov
sub
sbb
jge
out
dec
mov
mov
sub
jp
loope
pop
icebp
adc
add
mov
xchg
add
jno
xchg
stos
inc
mov
out
bound
push
or
jnp
fsubs
push
out
negl
sbb
test
movsb
out
jmp
ss
mov
pop
adc
addr16
mov
sub
test
mov
mov
mov
mov
insl
mov
dec
aam
inc
xchg
xchg
push
inc
xchg
and
fldl
or
sbb
je
daa
and
cmp
pop
cmp
mov
add
push
cwtl
sar
scas
dec
pop
lock
movsl
mov
fdiv
int
repz
andl
das
inc
in
ret
cwtl
mov
inc
loope
inc
into
and
xor
or
adc
add
mov
add
adc
adc
mov
cs
out
mov
movsl
std
aas
out
pusha
popf
in
jae
pop
xlat
pop
into
and
push
daa
mov
push
cmpsb
psubsb
lods
push
jp
insl
pop
and
jb
or
sbb
out
enterw
push
scas
dec
cltd
scas
cltd
mov
into
pop
add
add
ret
cmp
mov
sub
pop
enter
xchg
repnz
mov
popa
inc
mov
arpl
inc
mov
out
lret
js
xchg
add
mov
aas
pop
fistpl
jbe
cmpb
jo
dec
or
sar
xchg
fisubs
mov
inc
pop
push
mov
pminub
xchg
leave
push
mov
mov
push
add
insb
adc
dec
lret
mov
js
inc
xor
jp
idivl
subb
out
and
xchg
imul
pushf
adc
add
or
shrl
jbe
out
sub
stos
ss
rcrl
mov
mov
sbb
fimull
cli
mov
push
sub
pop
mov
lods
rcll
inc
scas
test
aad
enter
repnz
pop
imul
pop
out
subb
jmp
pop
insb
mov
jge
stc
and
arpl
cs
push
jmp
sub
mov
jns
out
xchg
add
inc
mov
sbb
or
lods
adc
mov
fwait
jb
imul
sbbl
adc
xorl
sub
pop
ret
adc
mov
in
dec
xor
add
jmp
stos
bound
fisttpl
sbb
fiadds
adc
push
pop
cs
pop
test
leave
test
xchg
pusha
repnz
shl
cmc
fyl2x
jno
add
fsubr
insl
daa
xchg
iret
and
mov
xchg
mov
dec
popa
push
scas
scas
xlat
sbb
dec
mov
dec
loop
insl
mov
xchg
push
adc
gs
sbbl
fdivp
cmp
arpl
in
push
mov
inc
icebp
jl
inc
sub
loopne
mov
add
dec
mov
iret
xor
mov
test
pop
cld
mov
int3
xchg
and
cvtps2pi
movsb
pop
or
mov
inc
fisubrl
jbe
loop
dec
sub
mov
and
out
fdiv
subb
int
push
fmull
push
icebp
mov
mov
pop
addr16
into
stos
mov
fwait
jmp
ja
daa
push
push
fcomps
and
xchg
jae
addr16
fists
push
jo
xchg
mov
xor
xor
aas
jmp
mov
pop
dec
add
push
push
inc
pminub
lock
xor
xlat
push
mov
sub
jbe
inc
push
je
je
mov
xor
jo
dec
inc
jg
sbb
push
sub
test
stos
inc
inc
pop
push
or
in
jle
out
leave
roll
inc
jo
pop
arpl
adc
lahf
mov
loope
hlt
scas
add
std
dec
aaa
push
lahf
xchg
sbb
lods
fnstenv
xor
sbb
add
jg
movl
pop
repz
ffree
int
out
hlt
or
stos
or
push
mov
and
push
sub
loope
xor
or
jecxz
shrl
int
mov
mov
aas
mov
test
add
test
push
cltd
mov
sub
jbe
inc
mov
fs
jp
es
insl
adc
fs
ljmp
mov
popa
aam
sahf
jnp
inc
cmp
pushf
data16
sub
push
nop
cltd
andl
add
mov
inc
mov
pop
dec
dec
lods
shrl
inc
cli
pop
jmp
adc
hlt
imul
pop
jnp
mov
fimuls
lds
das
dec
mov
in
inc
cld
movsl
daa
mov
push
shl
and
xchg
inc
and
lcall
aas
popf
es
xchg
call
xor
mov
mov
xor
lea
das
xor
dec
lcall
xor
cmpsl
push
data16
faddp
mov
pop
stos
lods
inc
push
sub
mov
aas
cld
mov
rclb
cmp
stos
leave
or
xor
add
xchg
loope
xlat
cmpsl
lods
mov
xchg
push
fcomip
add
fwait
out
and
sbb
in
xchg
clc
ljmp
gs
hlt
addl
dec
mov
add
or
es
mov
les
mov
lods
out
cmp
inc
sbb
xor
inc
push
xchg
js
or
push
mov
cld
mov
dec
fsubs
pop
lea
sub
mov
pop
jge
dec
or
inc
dec
inc
hlt
daa
xchg
je
jno
mov
and
movsl
xor
xchg
mov
fsubs
jge
and
jb
mov
mov
xchg
mov
mov
inc
jmp
pushl
or
scas
fisubs
jmp
inc
or
out
lock
adc
pop
mov
in
and
mov
rorl
fldenv
gs
scas
mov
fwait
pop
fidivrs
pushf
sahf
jmp
sbb
test
ret
xor
movsl
ljmp
or
nop
or
mov
iret
mov
inc
mov
dec
lds
rcl
or
or
sti
adc
repz
scas
into
fst
das
fcoms
and
jae
into
dec
cmp
popf
jmp
sbb
adc
xor
movsb
aam
inc
mov
into
mov
fisubrl
mov
into
int3
mov
wrmsr
cmp
xchg
outsb
mov
jo
jbe
sub
aam
outsb
daa
sub
mov
inc
add
loop
dec
xor
js
call
popa
jecxz
loopne
in
scas
dec
popf
shlb
xchg
push
ja
imul
dec
mov
fcmovne
mov
mov
aas
jno
or
mov
cmp
test
das
pop
adc
rolb
pushf
adcb
rcr
mov
inc
stos
pop
cs
sub
jae
in
testl
rcrb
push
idivb
stos
cmp
push
jno
inc
push
hlt
push
dec
sbb
push
xlat
mov
call
mov
xchg
jge
or
pop
mov
ret
jge
inc
add
int3
scas
xlat
cmp
sub
popa
jge
push
ss
ja
jnp
aas
sbb
xor
into
cli
stc
fwait
cld
adc
cwtl
arpl
sub
rcr
bnd
roll
out
loopne
push
call
push
xor
jne
in
dec
lret
and
sub
incl
mov
mov
pop
dec
jae
stos
ds
and
push
sbb
pop
sbb
mov
or
aaa
movsl
xchg
lcall
mov
stos
inc
mov
daa
push
lods
mov
insb
dec
lret
mov
sbb
or
repz
sar
stc
push
inc
jl
pop
ret
cmc
mov
and
pop
xchg
ss
sahf
inc
xor
pop
jnp
enter
sub
pop
shrb
cli
jno
sub
cmp
inc
jno
lock
roll
scas
fists
cld
mov
cmp
xchg
cli
inc
aad
sarl
je
push
fidivrs
or
mov
mov
leave
and
xchg
xchg
repz
repnz
adc
movsl
mov
push
mov
mov
xor
push
xchg
enter
inc
shll
xor
data16
sub
mov
xor
mov
mov
xchg
xor
or
push
and
and
lds
mov
jbe
outsb
pop
cs
bound
mov
shr
dec
ret
dec
cmp
dec
push
jle
sarb
ja
xor
or
adc
sub
xchg
imull
or
mov
cmp
iret
popa
sbb
imul
aas
std
test
and
jg
insl
ss
dec
aas
rorl
inc
or
inc
out
int3
mov
or
sub
sub
inc
add
sarl
addl
aad
fsubs
mov
pop
add
lcall
cmpsb
ss
mov
sbb
xor
push
dec
sub
sub
addr16
sub
cs
mov
inc
ss
mov
xchg
cli
leave
iret
js
imul
divb
xor
pop
xor
sub
cmp
sub
dec
sarb
je
aaa
jae
mov
mov
incb
fdivrl
push
lods
xor
imul
sbb
add
jl
popf
aas
in
mov
mov
push
dec
mov
in
lret
push
rorl
sub
push
fnsave
or
sub
jecxz
push
nop
cmp
call
test
inc
cmpsl
push
cmpsl
and
adc
aas
in
fisttps
fprem1
mov
adc
xor
in
push
jnp
jle
push
loope
addr16
xchg
cmp
test
and
das
shll
cltd
fcmovb
jne
sub
dec
sub
je
rcrl
dec
fadd
jl
push
add
imul
pop
jl
and
dec
aaa
jns
gs
xor
mov
lock
mov
xlat
mov
mov
cmp
pop
mov
mov
sub
push
jmp
lret
jo
push
add
ret
dec
cmpb
es
std
push
cli
iret
in
cld
pop
loope
fnsave
sbb
out
pusha
xor
jbe
jb
pop
incb
push
cwtl
cli
cmpsb
aad
and
roll
in
aam
loope
dec
mov
fsub
fimuls
fsts
and
stos
mov
push
cmp
jo
sub
movsb
daa
and
outsb
jle
shlb
mov
in
push
mov
data16
les
xor
stos
cmp
shrl
test
xchg
xchg
jae
in
cmp
dec
fstps
xor
clc
mov
jp
push
mov
stos
sar
sbb
xchg
jo
jmp
pop
cmp
scas
fidivl
adc
ficompl
shlb
aas
imul
rcrb
pop
xchg
inc
sub
mov
lret
stc
lods
dec
jmp
ja
pop
lock
pop
lock
jle
insb
jnp
adc
sbb
insb
divb
xchg
mov
fwait
sbb
mov
movsb
mov
fnsave
cmp
inc
insl
fwait
sbb
mov
loope
push
andl
cmp
xchg
push
aas
push
aam
pop
and
ss
mov
sub
mov
cmp
push
clc
stos
push
dec
lock
std
cmpsl
iret
fiaddl
pushf
jecxz
call
jne
xor
jne
mov
addr16
leave
mov
call
ret
xchg
add
or
je
mov
fs
pop
fiadds
jae
mov
pop
xchg
mov
jne
movsb
inc
fimull
mov
xor
inc
je
mov
sub
lret
testb
mov
push
mov
jg
lret
inc
push
cmp
xchg
lcall
ret
jnp
lods
add
pop
cmpsl
jbe
sbb
mov
jl
xor
xchg
and
stc
and
mov
mov
loopne
lods
mov
push
dec
cli
enter
rorl
pop
imul
int
pop
xchg
ffreep
out
sub
and
pop
fcoml
or
daa
xchg
outsb
loope
out
mov
lret
jns
mov
rorl
ret
fisttpll
sub
test
xor
xchg
dec
out
mov
mov
and
sbb
insb
ljmp
jns
leave
jnp
in
inc
jae
jp
cld
pop
push
into
jmp
ret
and
scas
shll
repz
aad
ss
xor
call
sti
xchg
mov
xor
and
mov
cltd
xor
mov
add
mov
sbb
call
rclb
mov
fnstcw
jp
mov
and
push
lahf
pop
push
das
inc
mov
mov
sub
adc
iret
stos
loop
ja
ficoms
fld
and
adc
push
dec
xchg
dec
je
flds
xchg
aas
jecxz
jno
ret
push
push
cltd
fxch
fwait
mov
add
adc
addr16
movsl
aaa
out
addr16
mov
mov
xchg
mov
add
and
jge
sbb
and
filds
xchg
xor
bound
xor
adc
cmpsb
dec
arpl
jle
dec
inc
or
stc
inc
cmpsb
insl
fnstcw
adc
insl
xchg
icebp
in
cli
out
mov
les
cmpsb
pop
shll
mov
adc
mov
adc
cwtl
loope
sub
lock
stos
pop
dec
adcb
inc
mov
add
pop
shl
ds
cmpsl
and
int
and
cmc
sub
jge
adc
iret
aam
aas
aam
cmp
mov
adc
jl
add
movsl
aam
pop
mov
inc
push
dec
subl
fwait
add
and
lock
lds
mov
inc
fidivrs
insl
jl
mov
aas
push
pop
loope
aaa
inc
mov
nop
fs
int3
aad
or
daa
sti
jo
pusha
jmp
call
lcall
and
adc
xlat
mov
ljmp
in
mov
xchg
inc
stos
cmp
ja
out
adc
and
pop
cmp
add
inc
sub
lret
cmpb
mov
in
lods
mov
test
dec
lods
sub
or
jae
mov
sbbl
dec
into
push
jne
push
inc
imul
cmp
stos
xchg
or
mov
jnp
mov
ja
dec
xchg
xchg
pop
jle
cltd
jnp
pop
dec
mov
loope
enter
movsl
inc
repz
cli
sub
popa
jno
clc
dec
mov
out
test
arpl
pop
xchg
js
leave
add
xchg
and
roll
inc
in
lahf
push
subl
imul
repz
adc
pop
test
ss
add
push
jmp
aaa
mov
bnd
aad
lods
push
stos
dec
out
push
sahf
leave
lock
call
xor
out
push
repnz
inc
cmp
cmc
bound
sub
dec
lahf
mov
das
inc
call
and
push
mov
lods
mov
jo
add
loopne
cmc
je
inc
testl
enter
sti
and
cmc
dec
cmpsb
out
ror
cmpsb
lcall
popa
jne
add
add
dec
add
mov
ret
sar
jno
and
ficoms
jb
je
pop
adc
cmpsb
out
sti
cmp
je
or
and
add
pop
mov
or
lea
dec
ret
xchg
xor
push
and
into
lret
fldt
cmc
rorl
movsb
xor
shrl
mov
icebp
mov
fisubrl
pop
iret
mov
xor
push
shlb
mov
cmp
jmp
repnz
xchg
orl
pop
mov
and
dec
fwait
mov
loope
cli
jbe
and
shll
cmp
mov
mov
js
sbb
punpckhwd
int
mov
sub
ss
pop
test
jp
sahf
loope
fwait
mov
arpl
mov
lgs
dec
xor
fs
stc
mov
out
mov
hlt
dec
push
cltd
dec
addr16
lcall
icebp
sub
push
push
imul
shll
push
lock
out
mov
leave
fsubrl
out
pop
fidivrs
mov
or
fs
pop
mov
flds
scas
rcll
mov
mov
inc
push
sub
mov
sbb
pusha
ds
mov
or
nop
mov
mov
rorb
sti
sbb
ljmp
inc
and
jmp
imul
idivl
mov
add
jl
add
pop
xor
clc
or
and
mov
xchg
sti
push
xchg
mov
cmp
cld
cmp
mov
cli
fld
fiaddl
scas
push
dec
dec
push
and
and
aas
push
jg
adc
hlt
sbb
mov
push
xor
cmp
cmp
push
cmpsl
in
xchg
adcl
or
add
mov
sbb
push
push
or
sub
in
push
xor
ret
mov
push
inc
add
jg
mov
lea
movsl
and
loope
movsl
push
push
lods
lock
push
fsts
outsb
dec
mov
sbb
dec
pop
sub
adcb
push
jnp
add
mov
outsl
pop
push
cmp
xorl
leave
clc
pop
pushf
push
mov
jb
sarl
or
sahf
mov
pop
xor
sbbb
sbb
ret
pop
in
mov
and
xchg
sub
bswap
xchg
push
lcall
dec
pushf
push
shlb
pop
sub
fdivp
cli
fiaddl
pop
std
loop
rcrl
dec
push
dec
xorl
sbb
movl
test
xchg
out
and
mov
loop
std
inc
inc
push
jb
aaa
push
in
jp
jne
cmp
mov
data16
mov
fisttpll
sub
inc
jbe
jecxz
add
pop
daa
sti
pop
mov
xchg
jecxz
mov
dec
aad
mov
inc
lods
fcomps
xchg
iret
repnz
sub
mov
jae
cmp
sbb
xchg
pop
test
mov
push
add
imull
aam
jae
mov
outsb
std
in
and
and
dec
iret
adc
xchg
lds
fimuls
or
sahf
adc
xor
sti
and
or
cmp
and
cmpsl
ljmp
ds
insb
jge
dec
inc
dec
sti
iret
and
popf
js
loope
cwtl
jecxz
notb
mov
or
sahf
shll
outsl
ficomps
pop
in
ret
imul
jp
rorb
out
repnz
rolb
push
jno
jmp
or
mov
jg
jne
inc
loop
lods
push
in
adc
xor
mov
lock
out
je,pn
inc
pop
push
push
jp
ret
fcoml
mov
dec
call
ja
shll
cmp
or
repz
popf
push
adc
push
fisubs
add
sbb
outsl
fidivrl
adc
call
xor
jnp
insb
ret
nop
jecxz
lds
fisubs
mov
xorl
out
mov
or
rcrb
std
stos
and
jp
fadds
mov
test
outsl
aas
dec
addb
mov
lcall
jl
mov
fdivp
mov
xor
imul
movsl
add
sbb
or
daa
orb
push
adc
jmp
xlat
cld
jae
test
mov
mov
repz
pushf
cli
pushf
adc
pop
shrb
jl
in
rcll
and
stc
pop
cwtl
ret
dec
mov
out
jns
subb
lods
add
add
ret
mov
outsw
fnstcw
rcrl
leave
sub
and
cmp
mov
pop
sbb
mov
dec
cmp
addr16
sub
or
push
push
inc
leave
adc
std
adc
mov
jae
cmp
into
test
call
and
pusha
push
pop
int
sarl
sti
movsl
stos
cwtl
xor
sub
scas
je
push
sbb
sar
mov
test
pop
jmp
jmp
xchg
jp
mov
cmp
xor
lret
mov
jg
std
sti
insb
dec
cmpsl
xor
outsb
jo
fwait
aam
in
aas
mov
dec
mov
push
adc
bound
or
mov
and
fidivs
lods
es
jecxz
xor
jns
or
mov
fsts
xlat
xor
push
out
das
xchg
inc
jg
lock
test
lds
test
in
cld
ds
aaa
divb
sbb
mov
mov
insl
xor
push
je
fdivrl
sti
stc
mov
xor
js
inc
push
in
adc
sub
insl
in
hlt
mov
jge
jmp
hlt
mov
dec
mov
and
lret
jmp
or
rorl
pop
pop
sbb
testb
cmp
pop
cmpsb
mov
cltd
xchg
sbb
rcl
pop
sub
push
mov
nop
nop
decb
cmpsl
sahf
mov
push
pop
xchg
and
hlt
and
mov
rcll
fwait
icebp
cmp
lds
inc
js
sbb
push
add
nop
in
in
cltd
xchg
pop
and
jae
jg
mov
pop
mov
mov
or
push
cmp
mov
cli
insl
test
cmc
mov
movsb
shlb
mov
pop
and
inc
jno
sbb
adc
js
mov
aaa
cmp
fsts
aam
in
jo
popa
pop
das
out
das
push
jle
sub
xor
cld
pop
jne,pn
ja
lock
xchg
rolb
fwait
popa
xor
enter
and
cmc
cmp
sub
mov
sub
xor
loop
subl
adc
insl
subl
repnz
mov
adc
ja
mov
pop
aas
and
sub
and
inc
or
in
add
mov
push
push
out
sub
cmp
rcl
push
pop
jp
mov
sahf
mov
mov
sbb
test
mov
jno
pop
out
add
fwait
js
imul
adc
push
xor
mov
pop
mov
dec
cmpsb
pop
push
not
pop
mov
cld
stos
clc
imul
insb
popf
or
ja
mov
inc
xchg
xor
cmp
daa
outsb
mov
iret
adc
outsl
mov
aas
lret
es
inc
mov
fldl
lret
or
ret
fadd
dec
mov
ja
shlb
js
add
cmp
xor
or
xchg
fcoms
sbb
add
addb
xor
push
repnz
adcb
fildl
imul
push
add
daa
pop
sbb
stc
fwait
enter
mov
out
sbbl
imul
test
mov
dec
shl
add
test
das
push
outsl
dec
inc
and
or
out
xlat
data16
pop
mov
dec
loope
std
adc
repz
loopne
in
dec
stos
mov
dec
dec
test
fwait
ret
cltd
popl
sahf
mov
or
mov
mov
pop
pop
mov
cmp
push
in
pop
inc
push
js
jl
xor
pop
adc
push
gs
int
xor
cmp
cmp
cmp
idivb
into
mov
xor
out
mov
mov
inc
mov
fwait
pop
adc
ret
in
sbb
sarb
sub
lea
xchg
add
cmpsb
sbb
cs
outsl
in
repnz
pop
fmulp
jecxz
pushf
int
in
mov
int
sub
fnsave
push
mov
pop
xchg
sbb
cmp
add
xchg
adc
jmp
std
jns
sbb
add
cmp
push
addl
mov
pop
cmp
mov
cmp
flds
test
sub
mov
sbb
mul
dec
fidivrl
ja
call
clc
cwtl
pop
out
outsb
dec
cltd
push
andl
mov
test
adc
add
fs
je
xor
xor
pop
pop
es
loopne
push
mov
out
scas
mov
scas
out
sbb
push
int
cmp
mov
xor
sbb
in
fucomp
rcrl
and
pop
repz
pop
push
mov
xor
mov
xor
inc
outsb
lret
stos
mov
fcmove
insl
lcall
lcall
sahf
lahf
and
mov
xor
lea
sub
sbb
push
push
xchg
inc
cmp
push
xchg
mov
gs
imul
jne
fdivrl
lcall
mov
pop
sub
es
and
jne
xchg
mov
mov
daa
ret
nop
in
orb
lods
mov
lret
mov
and
test
xor
loop
inc
test
lret
jl
das
jnp
popf
pop
fsubrl
cs
xorb
test
in
dec
pop
push
mov
stos
add
sbb
mull
mov
push
repz
dec
cmp
mov
jnp
push
stc
adc
push
pop
xor
fcoml
inc
or
xchg
call
xchg
popf
xchg
test
and
push
dec
or
xchg
cwtl
popa
aas
xor
popa
push
inc
sbb
push
mov
adc
jbe
ficomps
push
jne
and
pusha
idivb
ds
gs
notb
mov
repnz
loope
lods
inc
sahf
push
xor
xor
rcrb
xchg
lds
out
je
mov
cli
out
and
out
push
insb
jno
add
test
cmp
mov
stos
mov
addr16
lods
fnstcw
arpl
cmp
cmp
fs
cli
in
pushf
sbb
and
iret
push
jne
cmp
loope
pusha
pop
push
frstor
rcll
dec
lcallw
xor
icebp
lods
push
loop
cmp
inc
xchg
cltd
sbb
pop
mov
xchg
es
mov
bound
loop
ljmp
push
sahf
test
fistl
mov
cmpsl
ret
xlat
repnz
gs
pop
in
fmul
and
and
dec
sub
pop
dec
add
out
ds
sub
dec
and
popa
insb
jle
sbb
jge
fisubrs
jnp
jne
fwait
inc
cmp
push
cmp
pushf
mov
cmc
adcb
mov
pop
add
ljmp
mov
bound
outsl
dec
adc
xchg
inc
cmc
mov
xchg
or
jo
mov
jnp
enter
mov
cmp
hlt
mov
push
sbb
mov
dec
movsb
and
lea
xor
jno
and
pop
pop
jno
push
in
cli
and
mov
adc
int
push
inc
dec
sahf
pop
insb
rorl
cmpsl
lea
movsl
out
mov
lret
jb
in
lea
pusha
lods
sti
cmp
lret
push
sub
adc
fimull
insb
mov
mov
bound
jmp
dec
lret
dec
pop
int
jp
fisttps
loopne
fs
cmp
pop
cmp
sbb
daa
sub
add
dec
negl
sub
test
cmp
xor
lock
inc
add
subl
psubsw
push
or
mov
jns
xchg
ret
ficomps
mov
mov
mov
dec
xorl
add
pop
pusha
dec
insl
addb
jb
rclb
push
sbb
xchg
repnz
push
jp
sbb
lahf
pop
inc
jnp
lods
mov
adc
mov
push
sbbb
ret
clc
add
ret
fisttpll
dec
test
jns
mov
mov
lcall
xor
pop
repz
xchg
mov
push
pop
lods
test
or
mov
and
rorl
or
in
mov
rcrb
sub
inc
shr
and
and
lea
xchg
call
shlb
or
shlb
sbb
call
push
sub
dec
cld
test
xor
xor
sbb
icebp
in
pop
into
lcall
jne
loop
mov
adc
adc
sub
sub
inc
arpl
in
and
stos
pop
jge
pop
imul
mov
sbb
mov
subb
out
xchg
es
sbb
in
out
mov
xchg
mov
xlat
cmp
adc
movsb
dec
repnz
es
dec
movsl
movsl
mov
in
jno
pop
rcrb
lods
lods
pop
out
je
aad
mov
inc
cmpsl
mov
andb
cmpsl
aas
lock
dec
test
gs
push
xchg
mov
loop
daa
and
movsb
dec
xorb
ds
addl
mov
and
fistpll
outsl
push
push
mov
aas
fldenv
mov
out
and
and
cmp
sahf
mov
sub
test
mov
fucomip
jge
aad
aam
dec
cmp
out
pop
sbb
push
pusha
mov
cmpsl
aam
cmpsl
es
out
adcl
arpl
je
inc
jnp
mov
cmp
stos
scas
fisttps
inc
pop
out
scas
and
lods
xchg
pop
inc
rcrl
xchg
gs
insb
xor
aas
jns
mov
dec
cmp
add
mov
or
cmp
aaa
dec
icebp
repnz
pusha
or
fisttps
push
add
iret
cmpsl
sub
mov
fcoms
sbb
jo
and
loop
clc
incb
pop
cltd
cmpsl
mov
cmp
in
lret
in
or
pushf
mov
or
notl
daa
inc
ss
jbe
insb
stos
imul
cmpsb
mov
ret
sti
or
push
cwtl
or
push
nop
std
mov
cmc
mov
jmp
cmp
outsl
inc
add
stc
dec
cmp
mov
test
mov
rorl
mov
cmp
xchg
jae
add
xor
adc
cmp
rcrb
xchg
idivb
call
cmpsl
mov
or
insb
dec
andb
and
cmp
je
insl
mov
out
icebp
or
pop
lds
push
je
inc
hlt
popa
dec
push
dec
mov
pop
dec
pop
decb
fbstp
fnstsw
into
push
push
sub
sbb
mov
sub
aas
data16
mov
ss
cs
mov
pop
add
cmpsl
pop
lahf
xchg
jb
mov
and
pop
pusha
or
test
sar
jle
xor
dec
sti
cs
lods
xchg
mov
hlt
or
push
pop
mov
mov
add
add
popf
imull
push
out
clc
arpl
pop
outsb
push
aaa
jnp
shll
sahf
cmp
pop
inc
das
sbb
push
xchg
jb
jl
push
gs
sbb
lret
add
mov
sahf
sub
or
lods
aad
adc
mov
ljmp
push
cmp
inc
jp
and
adc
push
mov
sbb
push
fisubs
stc
sub
adc
xlat
outsl
aaa
or
arpl
pop
test
push
outsl
push
out
clc
out
xor
mov
mov
jmp
lods
jmp
enter
fsts
xor
add
hlt
adc
ffreep
movhps
stc
cmc
pop
push
and
xchg
imul
stos
out
scas
xchg
in
int3
in
inc
jns
adc
out
lods
cmp
adc
jnp
lcall
lahf
movsl
jg
sahf
dec
pusha
les
es
lret
add
pop
xor
nop
lock
push
lahf
sbb
adc
inc
mov
data16
push
sbb
rcrl
jl
xchg
fildll
sbb
cmp
and
sti
jle
cld
xor
addb
mov
in
sbb
inc
pop
iret
pop
add
xlat
push
and
xchg
push
push
inc
rcrl
dec
adc
add
out
test
adc
mull
mov
fwait
sub
push
mov
jns
hlt
pop
sub
inc
jecxz
mov
jmp
or
jle
jmp
lcall
js
mov
sub
pushf
ljmp
xchg
sarl
push
testb
gs
adc
cmp
fld
into
shll
dec
xor
push
or
mov
mov
cwtl
push
cmp
or
sbb
xorb
inc
xchg
lods
mov
jno
popa
push
ds
jl
jno
ret
push
dec
lods
mov
leave
movsb
scas
xchg
je
mov
sbb
bound
jno
jl
mov
xchg
xchg
jmp
push
hlt
test
sbb
and
fdiv
push
cli
nop
or
xor
cs
frstor
out
mov
and
jo
out
add
aaa
shrl
sub
insl
cmp
jmp
mov
or
adc
dec
mov
inc
mov
outsb
loope
cmp
pushf
rcl
nop
jne
sub
lcall
xchg
dec
loopne
enter
popa
inc
push
dec
loope
testl
or
adc
jo
xor
jo
leave
add
xchg
or
pop
lods
pop
sub
sbb
sbb
pop
rorb
test
jnp
js
or
inc
imul
ficoml
outsl
pop
fistpl
in
adc
or
inc
mov
cmp
jne
pop
mov
and
dec
add
loopne
call
scas
loopne
or
daa
sub
xchg
cmp
dec
loop
push
adc
xchg
add
and
dec
lahf
mov
movb
add
std
ret
fimull
aam
cs
jecxz
ljmp
outsb
xchg
into
mov
mov
orb
lret
nop
out
adc
std
mov
inc
sahf
pushl
fcoml
imul
aaa
mov
and
add
xor
sbb
and
mov
cs
mov
xchg
into
jns
push
icebp
fwait
jo
adc
bound
ds
push
pop
jl
ds
sub
lods
xor
out
jno
inc
and
sub
mov
mov
xchg
arpl
mov
fwait
ds
mov
mov
adc
xor
or
and
test
push
inc
inc
sbbl
jp
ss
mov
lcall
pushf
pop
cwtl
scas
out
or
imul
aas
xor
sub
in
jmp
test
in
fsubl
mov
and
mov
mov
mov
dec
leave
aas
addr16
outsl
loop
dec
pop
mov
andl
test
mov
loop
dec
js
xchg
ja
sbb
cwtl
rcr
inc
shlb
mov
push
cmp
mov
mov
push
ret
test
clc
lret
sbb
and
adc
jg
mov
adc
hlt
mov
enter
push
sub
push
jg
xlat
int3
subl
xchg
pop
xchg
shll
jecxz
fwait
dec
xchg
mov
add
mov
shlb
mov
enter
push
pop
or
jb
das
push
sub
xor
out
mov
daa
add
shll
mov
adc
mov
paddd
and
push
push
xchg
ss
or
push
lock
fcomps
test
psubusw
sub
add
xor
lcall
in
xchg
push
scas
mov
enter
add
sub
aas
es
call
daa
mov
add
fs
jae
js
mov
jnp
push
mov
dec
addr16
mov
lea
call
int
add
fadds
or
sbb
out
xchg
mov
lret
shlb
movsl
mov
lcall
push
lods
xchg
adc
popa
dec
inc
cmp
lret
mov
push
and
and
and
cmpsb
xchg
lahf
test
stos
inc
sub
xchg
test
xor
movsb
lahf
add
adcl
jae
cmp
pop
sub
add
bound
pushf
push
mov
add
roll
loop
mov
mov
ret
or
or
lock
outsb
js
jmp
popa
xchg
mov
jp
mov
lret
dec
gs
pusha
mov
fldcw
pusha
aad
cli
xor
addb
cmpsl
mov
mov
mov
addr16
push
das
mov
pop
inc
mov
das
pushf
mov
xor
mov
jne
push
lea
jmp
mov
les
mov
cmp
and
sub
lea
outsb
sbb
sbb
jle
subb
pushf
jge
xor
int
les
pop
inc
sbb
dec
sbb
pop
mov
shl
aaa
pop
ja
pop
and
cmp
sub
hlt
stc
push
cmp
inc
popa
lds
lcall
lcall
lcall
je
cmp
mov
ds
jne
mov
les
cs
xchg
jne
add
jecxz
push
fs
clc
sbb
adc
outsl
int
fnsave
jg
fs
ss
jecxz
push
fldl
int3
outsb
pop
xor
mov
subb
in
xor
push
xchg
inc
mov
xor
iret
xor
cmc
imul
popf
bound
dec
sub
xor
test
scas
scas
pop
mov
sbb
pop
jmp
aas
pop
jmp
or
add
cltd
or
mov
movhps
push
pop
enter
jp
rcrl
mov
push
push
mov
cmpsl
pushf
ret
jp
in
sbb
jmp
push
add
xchg
insl
and
cltd
xchg
psrad
sub
adc
jns
mov
decl
xorl
mov
fiaddl
sbb
jg
fldl
xor
loop
mov
cmp
mov
mov
sahf
pop
test
clc
in
dec
mov
loop
cld
fdivr
inc
adc
pop
adc
cmp
fdivr
cmp
in
mov
xor
dec
aam
mov
aad
or
mov
mov
insl
adc
inc
pop
addr16
clc
sbb
fwait
mov
dec
adc
scas
inc
and
push
cmp
cmpsl
fiaddl
jae
dec
jns
loop
arpl
add
mov
popa
xlat
push
nop
pop
fistps
xor
scas
outsb
das
mov
push
es
aam
pop
std
add
inc
pop
imul
pushf
push
ds
fs
jl
or
push
rcrl
cld
mov
cmc
data16
sti
ljmp
xor
sbb
leave
mov
jbe
xchg
imul
xchg
dec
jno
movsl
rorl
jne
jns
adc
lret
cmp
cltd
xor
sub
arpl
arpl
sbb
jo
iret
sahf
out
inc
int3
xchg
test
mov
sub
xchg
jnp
cmpsl
jge
jne
pop
dec
xor
mov
fisttpll
jns
mov
add
mov
sbb
xor
dec
enter
push
xchg
cld
repz
inc
xchg
movsb
xchg
or
jnp
mov
mov
icebp
das
add
push
dec
dec
dec
jle
mov
xor
mov
scas
stos
mov
cli
mov
mov
mov
sbb
push
out
or
mov
cmpsl
and
push
sub
pop
das
daa
jb
clc
das
mov
scas
rorl
outsl
aam
or
js
pop
lahf
dec
xchg
sub
fistpll
xchg
sub
lret
and
mov
popf
dec
and
mov
adc
mov
mov
adc
ja
pop
outsb
jns
inc
cld
cs
cmpsl
cmp
mov
cs
icebp
imul
push
cmp
fwait
adc
mov
scas
bound
loop
xchg
dec
movsl
or
in
xor
fwait
xor
aam
scas
pop
pop
cmp
insb
pop
and
pop
dec
sub
jnp
push
mov
push
inc
xchg
frstor
mov
outsl
jns
cmpsl
andb
aaa
and
adc
loop
jge
jle
test
mov
leave
and
pusha
or
xor
es
jl
rolb
outsb
cli
sbb
dec
push
call
call
mov
and
or
fwait
lret
xchg
pop
data16
xor
shll
mov
push
js
daa
sub
jmp
les
imul
mov
xchg
pusha
dec
fists
cmp
pushf
arpl
pop
cltd
pop
xchg
xor
cltd
or
cli
vmovapd
loopne
mov
insl
arpl
add
hlt
or
mov
mov
xor
insl
aam
lds
xchg
xchg
push
sbb
mov
mov
loop
sarb
stos
in
inc
es
or
hlt
lea
enter
loopne,pt
dec
sub
adc
clc
xor
mov
call
icebp
ret
mov
scas
push
and
mov
out
pop
imul
sbb
fdivrs
std
push
or
stos
in
cmp
push
mov
pop
stc
jp
pop
insb
pushf
and
icebp
lcall
push
addr16
negl
popa
mov
bnd
jle
pop
or
xorb
pop
add
in
xchg
ror
inc
sti
andb
jo
loopne
movsl
fucomp
ljmp
nop
std
fwait
out
ficomps
cmp
sub
jg
inc
or
dec
jmp
int3
movsl
mov
loop
mov
dec
add
int3
mov
or
jns
adc
pop
je
insb
dec
xchg
cmp
xchg
lret
dec
pop
hlt
add
pop
out
xor
mov
das
fs
out
sub
and
scas
pop
pop
jg
imul
xor
mov
icebp
add
xor
in
test
jge
mov
into
xlat
jnp
and
mov
ds
test
push
or
push
das
mov
test
xor
mov
mov
mov
jp
imul
repnz
addr16
xchg
pusha
adc
dec
xchg
int3
adc
popf
lods
lea
mov
jp
mov
ljmp
jl
jecxz
out
jns
jo
nop
ss
fs
aad
xlat
je
scas
xor
push
sbbb
aaa
lahf
mov
insl
adc
cmp
dec
and
and
sbb
jecxz
jno
xchg
test
or
stc
pop
mov
daa
jg
push
cmp
mov
lcall
xchg
add
pop
insl
pushf
mov
ljmp
push
popl
stc
orb
jp
xor
out
scas
dec
xor
inc
xor
mov
adc
pop
xchg
fnstcw
xchg
cmp
dec
sbb
xchg
jae
scas
aad
push
icebp
jle
fincstp
insb
aas
add
or
icebp
sub
pop
xchg
frstor
imul
jno
mov
mov
sti
popf
xorb
and
outsb
icebp
shl
roll
dec
mov
adc
xor
out
dec
push
incl
sbb
js
or
clc
jge
dec
xchg
xor
cmpsl
insl
adc
hlt
insb
mov
stc
inc
mov
aaa
sub
xor
push
and
dec
stos
sub
fldl
add
jnp
xchg
bndstx
ret
ror
scas
lods
cwtl
pushl
jl
sbb
ljmp
aam
inc
or
lret
push
sbb
vpunpcklqdq
push
jmp
rcrl
icebp
xorl
icebp
inc
sbb
dec
fnsave
mov
test
sbb
push
subl
shll
les
js
mov
pop
std
cli
inc
ret
pushf
iret
decb
add
pop
leave
int
ret
dec
and
mov
je
sti
ret
jecxz
or
sub
das
fwait
pop
fsubrp
jp
and
jl
rclb
pop
rcrb
out
push
sti
lahf
shrb
mov
out
jle
sbb
push
mov
test
call
and
push
inc
std
sbb
push
xchg
pop
ret
xchg
ss
mov
push
inc
insb
lahf
lcall
sub
leave
sti
push
sub
xlat
mov
dec
ret
push
pop
pop
mov
add
aaa
fiaddl
test
ja
mov
xor
xchg
push
clc
call
sub
jns
jge
pusha
lret
call
insb
sti
adcb
push
shll
xchg
idivb
sub
lock
mov
pop
scas
loopne
outsl
iret
cmp
add
cmc
rcll
adc
scas
das
sbb
mov
aam
outsl
cmp
mov
mov
mov
jbe
out
movsl
pop
mov
ds
inc
and
leave
dec
xor
fisubl
add
test
mov
or
lds
jne
dec
pop
icebp
in
fsts
and
jbe
aad
mov
in
pop
clc
xchg
and
insb
inc
fmulp
jae
mov
cmp
cmp
or
dec
and
ret
icebp
arpl
out
into
push
lret
or
xchg
jl
inc
or
jo
jg
es
cwtl
pop
push
and
fwait
mov
mov
mul
push
jno
jecxz
or
add
jmp
mov
int
scas
mov
aaa
les
dec
shll
sbb
data16
mov
mov
dec
mov
gs
xor
loope
aam
loop
lret
dec
in
and
test
ds
test
ret
dec
push
pop
xor
push
pop
dec
nop
pop
pusha
clc
fmuls
adc
aad
and
fwait
jmp
fwait
rol
dec
ret
push
ror
mov
and
pushf
pop
push
imul
out
and
lods
mov
ja
clc
outsb
pop
fildll
inc
insl
jnp
fwait
xchg
lods
out
mov
fwait
int3
xchg
or
jbe
jbe
ret
fmul
jl
cmp
fiaddl
pop
xchg
pop
int
add
in
push
test
inc
int
mov
adc
push
into
pop
sbb
push
ret
xor
mov
and
and
mov
and
cld
call
pop
aad
lret
ja
movsl
js
div
out
push
adc
mov
lds
test
sbb
lret
ja
dec
adc
mov
push
mov
gs
xor
lea
inc
in
add
mov
cmpsl
cli
in
outsb
adc
mov
and
pop
sub
mov
out
in
dec
into
sbb
pop
flds
cmc
push
mov
mov
push
pop
movsb
pop
push
or
iret
mov
mov
sbb
push
scas
stos
movsb
rcrl
xchg
insb
ljmp
sub
mov
push
loopne
push
dec
loopne
ficompl
shrl
cwtl
push
in
popf
repz
test
fistpll
daa
inc
jae
inc
mov
fninit
add
fisubl
and
sbb
and
add
mov
pop
imul
mov
mov
mov
outsb
pop
jecxz
push
andb
sub
mov
lods
stos
fldl
adc
push
test
cld
mov
xor
jp
aam
pop
mov
movsl
ljmp
inc
sub
cmc
ds
sbb
loop
pop
loopne
shlb
adc
inc
test
mov
sbb
jns
add
rclb
mov
in
lcall
pushf
ds
inc
add
push
mov
int
ret
adc
insb
fcompl
mov
xor
push
inc
push
dec
lock
les
mov
fcomps
mov
lds
ss
mov
or
aad
repnz
xor
aad
inc
test
out
out
sub
jb
popf
call
dec
jae
sub
or
pusha
ds
movsl
nop
pop
push
pop
imull
mov
cwtl
sub
dec
mov
push
cmp
aas
sahf
xchg
aaa
sarl
pop
hlt
push
mov
jns,pn
test
xor
stos
cmp
loope
xchg
push
out
push
or
add
or
cmc
fadds
mov
xor
pop
adc
mov
and
xor
push
test
push
testb
add
jbe
jmp
enter
or
sbb
lret
push
xchg
hlt
adc
fwait
pop
pusha
mov
aad
pop
push
sbb
and
je
mov
out
or
hlt
add
dec
xchg
jmp
push
fbld
mov
push
pop
or
mov
ret
dec
or
mov
in
pushf
stc
lock
outsb
test
or
pop
fnstsw
inc
rorb
adc
stos
lds
dec
cmp
jmp
stc
out
imul
xlat
pushf
xlat
in
push
mov
mov
jl
negl
mov
js
and
adc
pop
movsl
das
nop
mov
cmp
out
pop
leave
or
cltd
push
cltd
lahf
scas
mov
mov
pop
cs
leave
in
mov
inc
push
jns
mov
dec
adc
pop
dec
xchg
sar
xchg
xchg
xchg
jbe
or
add
cmp
repnz
push
push
fdivr
test
adc
fiadds
sbbb
push
ja
jns
pop
int3
lods
mov
jns
out
and
sbb
frstor
push
out
pop
cmp
test
sub
sbb
scas
sbb
iret
fstpt
or
cmp
mov
gs
aaa
add
xchg
xchg
sub
lods
jne
imul
mov
pop
cmpsb
or
xchg
roll
mov
jmp
or
sub
or
adcb
nop
in
mov
push
in
jg
iret
mov
lock
fisttpll
ret
mov
add
xchg
movsb
xchg
lcall
popf
pop
jns
imul
mov
xchg
sbb
mov
add
mov
pop
pushf
cmp
jmp
inc
mov
xchg
dec
pop
in
out
lret
dec
adc
jnp
stos
jo
shl
pop
leave
daa
in
jbe
sbb
ret
inc
jp
cmp
sbb
or
out
lret
je
adc
jne
fs
mov
mov
adc
jno
mov
push
sbb
adc
push
mov
insb
inc
or
shll
and
push
dec
sub
xlat
pop
xchg
lods
push
fs
clc
loope
and
push
ja
cmpsb
pop
lret
dec
mov
adc
shr
mov
adc
xchg
or
xor
out
std
and
repz
in
mov
sbb
adc
push
cmp
mov
repnz
cld
fsubl
push
mov
outsb
pop
inc
lds
out
sti
xor
scas
sbb
xor
loopne
sub
in
push
jno
aad
jns
sar
bound
test
adc
cmpb
cmpsb
ret
dec
jle
inc
or
inc
sbb
and
dec
adc
or
insb
int
jo
popa
mov
and
add
std
jle
les
inc
mov
xchg
jge
push
mov
divb
cmp
sub
lcall
call
sbb
dec
jmp
movsb
mov
pushf
lods
pop
int3
imul
dec
sub
xor
jns
inc
xor
mov
mov
cmp
add
adc
icebp
int3
xchg
in
sarb
mov
mov
mov
sub
loope
xchg
jle
stos
cmpsb
and
add
mov
mov
outsb
leave
pop
cs
sbb
pop
popa
je
pop
jo
rcrb
int
std
dec
sub
rcll
cli
scas
sbb
xchg
push
and
xor
les
ljmp
add
sti
sbb
int
gs
cmc
dec
mov
loopne
cmp
push
jl
aas
sti
pop
not
and
sbb
xchg
std
push
cmp
add
jb
xor
dec
push
sbb
int3
push
inc
add
jbe
iret
out
bound
pop
rclb
testb
aam
je
repz
lock
sbb
xchg
int
dec
push
js
ds
movsb
pop
in
xor
das
mov
dec
repz
add
in
ret
mov
mov
rclb
in
mov
or
imul
xlat
mov
inc
lods
enter
pushl
repz
sub
cmp
ror
rclb
fnsave
cmp
mov
pusha
cmp
adc
and
leave
pop
rorb
cmp
data16
aas
and
xchg
rcrl
hlt
aaa
sarb
xor
push
xchg
mov
or
push
shll
xor
push
mov
repz
ror
stos
out
rorl
pop
hlt
test
xchg
clc
stos
jno
mov
and
daa
pop
cmp
jl
hlt
or
dec
ret
inc
bound
sbb
sub
hlt
mov
jmp
pop
fsubr
adc
xchg
lcall
cmp
mov
shll
data16
mov
cmpsb
clc
sub
push
jle
std
dec
hlt
movsb
aaa
clc
push
ss
out
xlat
sub
xchg
popa
push
pop
in
movsb
sbb
add
sbb
popf
lds
or
rcrl
push
adc
jo
pop
sub
xchg
mov
push
push
jo
test
push
jmp
fmull
lea
les
inc
cmpsb
ss
inc
rcl
fisttpl
loop
sub
jns
icebp
push
into
add
js
push
out
fimull
mov
inc
dec
out
popl
xorl
jge
daa
add
add
arpl
pop
pop
data16
sbb
mov
mov
js
insl
sarl
jno
out
ljmp
xchg
std
push
mov
jp
fs
out
xchg
addr16
xchg
decb
mov
inc
xchg
shll
std
repz
sarb
mov
scas
add
cmp
fiadds
lcall
cmp
cmpsb
cmp
mov
inc
cmpsl
cmp
jl
fmull
scas
test
inc
cmp
pop
scas
repnz
in
mov
mov
movb
in
inc
fcmovnb
adc
in
addr16
andl
add
or
sar
xor
sub
inc
dec
push
loopne
aad
jg
pop
cmp
in
adc
and
enter
jns
cmpsb
pop
insl
xchg
mov
aas
mov
sarb
fistpl
mov
jns
insb
lock
jno
adc
cmp
fimull
cmc
fadd
test
mov
shlb
xchg
pop
stc
push
jbe
dec
adc
xchg
ljmp
cmpsb
xor
lret
or
sahf
sahf
or
sbb
mov
pusha
push
mov
scas
mov
push
fcomps
mov
loope
loopne
sub
out
and
lcall
mov
jecxz
cli
or
xlat
or
sub
stos
xor
sub
xor
fwait
pusha
imul
nop
cs
push
mov
rcrl
cmp
xchg
dec
dec
mov
mov
dec
sahf
xor
add
push
adc
adc
xor
mov
rcrl
dec
in
cmp
dec
cmp
mov
cmp
and
pop
dec
jecxz
jne
ds
pop
outsb
sahf
push
aas
out
lea
or
jle
or
mov
lcall
frndint
push
push
xor
popa
imul
or
jne
fisubrs
hlt
inc
sbb
into
rcll
sbb
or
jae
jecxz
mov
cmp
sub
pop
adc
pop
mov
sti
cmpl
sub
or
push
mov
add
js
mov
lods
and
inc
pop
lods
out
hlt
cwtl
sbb
push
fnstsw
mov
gs
mov
push
testb
push
inc
cmpsb
repnz
dec
cli
mov
push
test
nop
push
sub
ret
mov
lahf
mov
push
out
push
push
pop
popa
push
not
jno
inc
pop
xchg
fistpl
inc
mov
mov
ljmp
negl
or
push
dec
sbb
ret
cmpsl
xchg
mov
les
iret
dec
pop
push
cmp
mov
aaa
adc
pop
ja
leave
or
daa
jo
aad
push
xchg
xor
les
sbb
cmp
cs
and
sub
jb
insb
add
xchg
pop
inc
inc
jmp
mov
add
dec
out
pop
test
testb
sbb
fimuls
cmp
outsl
icebp
outsb
xchg
push
movsl
sub
or
jne
fimuls
test
and
push
adc
sub
pusha
jmp
and
outsb
sub
sub
sub
lods
jae
adc
inc
and
aaa
xor
mov
scas
mov
push
push
xor
adc
int
dec
popf
add
and
push
jo
and
inc
lods
cmp
xchg
nop
add
and
leave
cmp
jnp
lds
das
pop
cmp
aad
jne
xor
cmp
into
sbb
mov
sub
adc
pop
pop
in
xchg
sahf
xchg
jecxz
pop
movsb
movsb
pop
push
xchg
pop
cmp
xor
push
int
lcall
inc
scas
lret
cwtl
or
mov
pop
out
pushl
push
inc
clc
mov
sub
das
and
sub
mov
or
jge
pushf
imul
scas
iret
jl
faddl
lcall
in
xlat
movsl
fdivl
cwtl
fildll
xchg
cmp
sub
mov
xchg
mov
aaa
add
pop
out
fists
push
and
ljmp
mov
stc
cmp
cmp
mov
mov
cmp
push
fstpt
jg
sbb
xorb
mov
and
aam
ljmp
arpl
in
dec
jns
insl
add
cmp
stc
mov
sub
mov
xchg
mulb
sbb
xchg
repz
into
lock
pop
push
cs
stos
daa
out
xchg
adc
lahf
sub
movsl
push
add
pop
enter
xor
in
jp
xchg
test
cmpsb
sbb
xchg
in
loop
sbb
lret
mov
jp
or
out
mov
mov
push
faddl
in
out
xchg
mov
pop
mov
pop
sub
adc
movsb
mov
cwtl
xchg
scas
xchg
mov
xor
and
shll
push
test
cmp
mov
into
dec
or
mov
faddl
cmpsl
out
fstps
jbe
mov
add
and
push
add
push
mov
mov
aam
dec
jmp
or
mov
sub
ret
test
inc
sbb
mov
lret
add
and
imul
inc
popf
mov
mov
add
push
add
mov
jae
sub
jl
fstps
sub
dec
outsl
into
mov
ret
movsb
shll
and
movsb
insl
mov
jecxz
shrb
aad
adc
pop
mov
mov
leave
icebp
das
sbb
stc
lods
fwait
sbb
mov
jb
data16
sahf
test
push
cmpb
xlat
jno
adc
xchg
add
insl
jecxz
xchg
sarl
mov
lods
xor
daa
inc
loopne
test
inc
mov
jne
popf
movsb
data16
push
jp
popf
cli
jno
xor
cltd
jmp
jmp
call
test
add
pop
pushw
fimull
stc
sbb
ficoml
jnp
mov
cli
push
cmp
pop
xor
push
int
pop
sbb
mov
adc
out
xor
pushf
pusha
add
xor
in
lods
sub
jge
pop
int3
cmp
mov
inc
or
add
xchg
sub
dec
iret
jmp
push
and
cmpsl
nop
lods
jmp
mov
add
jo
mov
mov
pusha
push
pop
decl
loope
sub
adcl
push
pop
or
arpl
dec
jae
cmpsl
lahf
sbb
test
pop
dec
inc
int
cmp
pushl
xchg
push
or
cmp
adc
into
or
add
xchg
test
fstpt
and
and
out
mov
or
lahf
jno
mov
sub
scas
jne
fildl
xchg
xor
and
lahf
jle
mov
push
imul
rclb
cs
popa
repnz
jge
negl
xor
inc
fwait
sbb
cwtl
push
push
adc
cmp
insl
rcll
lock
push
mov
xchg
lret
mov
jo
jnp
sub
add
jp
das
cmpsl
mov
enter
and
test
insb
iret
out
pop
cld
or
xchg
mov
or
pop
cmpsb
mov
pushf
mov
push
dec
jo
mov
ja
inc
xchg
fwait
dec
cmp
sub
mov
push
cmpsb
mov
rorl
int
sbb
das
push
sub
mov
lret
js
sbb
mov
data16
or
jnp
mov
and
jmp
inc
and
arpl
mov
dec
inc
mov
xchg
imul
sub
out
or
outsl
out
in
loope
mov
mov
movb
test
out
pop
fidivl
out
sahf
scas
fisubrl
imul
jge
nop
loope
dec
push
push
or
sarl
pushf
imul
xchg
negb
psrlw
lret
mov
out
std
add
or
add
call
lcall
test
out
push
jmp
pop
fidivrl
lcall
push
adc
jp
leave
add
mov
rcrl
les
repnz
sub
push
or
cmc
out
das
or
fisttpll
inc
mov
inc
enter
xor
sahf
pop
inc
cwtl
mov
mov
sbb
js
clc
cmp
cmc
bound
lods
and
popa
sub
cltd
dec
insl
fstpl
push
and
mov
sbb
and
or
aas
adc
add
inc
mov
enter
push
or
mov
sbb
jns
xor
insb
iret
outsb
pop
sbbl
inc
ja
mov
test
in
filds
sub
push
movsl
jp
push
call
mov
cs
stos
lahf
sub
stos
rcrl
inc
dec
add
mov
xchg
pop
push
pop
inc
adc
std
pop
or
push
inc
cld
sub
loop
push
adc
fisubs
ffree
mov
int3
out
dec
pop
aad
enter
xor
cmc
lahf
or
mov
fldt
fwait
and
xchg
stc
jp
cli
cmpsl
bound
inc
push
scas
push
cltd
inc
fcmove
cmpsl
sub
loop
scas
dec
and
or
dec
aam
in
int3
pop
cltd
ret
adc
and
inc
mov
cmp
pushf
mov
popf
fidivs
imul
cli
je
and
dec
outsb
lcall
ljmp
dec
push
xor
ja
push
iret
mov
rcr
lock
insb
push
sub
push
jmp
fdivrs
push
sbb
cmp
sbb
jns
push
xchg
jmp
jae
movsl
mov
pop
repnz
mov
scas
adc
je
sahf
jle
xchg
and
cwtl
and
lds
in
fsub
aad
cwtl
notl
out
out
sbb
js
sbb
mov
sub
adc
pop
testl
sbb
add
aad
sbb
sbb
xchg
fstl
mov
sub
add
imul
sub
mov
pushf
sbb
fisttpll
xor
mov
mov
nop
and
in
mov
dec
push
ds
fildl
dec
xchg
push
add
sbb
mov
pop
daa
movl
shlb
push
scas
push
and
dec
out
leave
mov
sbb
in
dec
push
sub
iret
andb
mov
push
xor
bound
push
jg
cltd
cmpl
out
mov
sub
ss
cmc
lock
add
jnp
sbb
test
dec
adc
lods
in
rolb
push
idiv
fs
shr
dec
fstp
mov
pop
test
test
dec
fidivrs
cmp
push
pop
rolb
mov
in
xor
stos
ss
jae
es
xor
sub
push
lea
fwait
ja
mov
pop
dec
mov
vmwrite
stos
mov
js
je
mov
imul
inc
xchg
xchg
or
insl
sahf
mov
and
popa
inc
cmpsl
mov
andb
mov
stos
jp
lret
aas
and
out
sub
cmp
ja
out
jo
mov
sti
mov
adc
bswap
shrb
int3
rcll
push
daa
sub
lock
loop
xchg
aaa
test
test
in
pop
in
adc
jecxz
out
xor
ja
dec
data16
dec
out
testb
adc
dec
clc
jo
lock
lock
xchg
sbb
push
pop
sbb
cmp
and
sub
inc
cmp
jge
push
icebp
mov
pop
lret
lcall
cltd
inc
and
xor
add
je
xchg
lret
rcrb
or
cmp
or
add
into
lods
icebp
add
add
or
clc
dec
xchg
mov
aas
mov
pushf
stos
jge
mov
js
sub
dec
inc
test
gs
push
iret
ja
bound
hlt
icebp
and
in
ret
sub
jno
dec
shll
and
ret
adcl
push
add
push
clc
pop
inc
inc
inc
or
pusha
jmp
pop
mov
out
fiadds
jmp
hlt
in
outsl
pushf
cli
xor
push
loopne
dec
cmp
ror
push
stc
sub
pop
adc
xchg
mov
fnstcw
cmp
fistps
add
scas
mov
iret
cmp
out
repnz
out
sahf
scas
movsb
push
cltd
xchg
outsb
jno
dec
lea
mov
mov
dec
push
sahf
cmp
mov
xchg
shll
call
les
js
sub
cli
sbb
sbbb
iret
jbe
mov
jne
cli
add
sbb
gs
pop
fisubs
out
inc
cli
arpl
aam
push
or
loope
push
add
cltd
cli
imul
dec
cmp
gs
mov
sbb
in
inc
jo
rolb
das
iret
and
es
and
pop
cmpsb
dec
stc
mov
pop
or
imull
push
das
lods
push
stos
mov
inc
pop
cmp
ljmp
in
in
fucomi
mov
mov
pextrw
test
xlat
mov
jnp
pop
sub
aam
push
hlt
in
or
mov
mov
inc
jo
shr
add
push
xchg
jle
pop
arpl
lock
push
or
jnp
faddl
jns
add
out
mov
dec
clc
inc
movsl
loopne
cmp
jge
outsl
add
mov
popl
jns
sbb
xor
xchg
mov
fcomps
lds
lods
mov
data16
enter
dec
fs
adc
movsl
jb
dec
fildll
popf
ja
xchg
jg
test
adc
jns
fstpl
pusha
xchg
ljmp
or
inc
pop
push
cmp
adc
dec
mov
xor
call
sbb
mov
mov
xlat
ljmp
pop
jle
dec
aad
aam
pop
iret
ror
mov
mov
in
jmp
mov
rcrl
or
adc
out
cmpsb
dec
xchg
cltd
mov
dec
mov
inc
repz
cmpsl
lcall
and
mov
roll
ljmp
in
sub
and
adc
sub
aaa
and
pop
nop
sub
stc
dec
fldenv
push
cwtl
test
or
mov
mov
mov
mov
sub
sarl
and
incb
shrb
lret
cltd
sub
or
jecxz
pusha
mov
fidivs
or
pop
fsubrs
mov
and
sub
cmpsb
daa
push
insl
push
shl
jno
loopne
lret
cmp
jne
daa
xlat
push
mov
test
testl
hlt
adc
mov
inc
inc
push
frstor
or
mov
and
jns
sub
or
daa
jns
rclb
sub
cltd
insl
mov
lahf
pop
inc
cmp
push
push
lret
jb
movd
adc
mov
push
lcall
dec
inc
test
popa
push
sub
fwait
xor
sbb
sub
adc
sub
push
and
cmp
out
test
and
scas
jge
xlat
cmp
pop
adc
in
imul
ret
int
mov
sbb
ja
movsb
incb
scas
jae
mov
adc
movsb
jbe
xor
jnp
dec
sub
lcall
mov
lock
pop
lods
mov
sarl
jp
adc
out
dec
loope
lods
shl
icebp
test
shrb
pop
out
and
cli
insb
add
jl
sub
mov
dec
cs
test
int3
ret
jbe
fidivrs
sti
mov
adc
sbb
clc
dec
sbb
cmp
shrl
cmpl
jge
and
test
dec
test
imul
dec
aaa
jno
push
test
push
and
and
cltd
scas
jno
dec
inc
insb
inc
js
add
mov
lods
sub
adc
aam
popf
sub
out
repz
ds
cmp
es
fsubs
sbb
jle
or
fucomi
or
dec
andl
das
adc
movsl
jg
add
sub
inc
cli
mov
outsb
pop
das
push
adc
or
insb
mov
jns
mov
xor
jg
sub
mov
jbe
fstp
pop
mov
push
test
sbb
fstl
stos
push
loopne
sub
lea
insl
ds
mov
stos
out
xchg
cld
mov
loopne
xor
mov
into
test
mov
xor
cmp
ret
sbb
insl
sysret
testl
mov
pop
sub
fnstcw
mov
add
cmc
or
pop
and
sbb
sub
fdivrl
cmp
mov
mov
cltd
rcll
inc
push
or
xchg
lds
mov
sub
and
xor
pop
jle
jns
test
sbb
jl
aam
mov
mov
inc
je
xchg
stos
or
mov
xchg
xchg
aam
sub
insb
cltd
pmulhuw
in
in
dec
mov
mov
test
xor
mov
mov
sub
xchg
lcall
jl
jae
xor
mov
push
shlb
sub
or
stc
or
inc
pop
lods
lods
mov
and
pop
dec
cs
add
gs
ja
lret
enter
jecxz
in
mov
rcrl
sbb
imulb
pusha
and
sbb
test
lods
into
ss
pop
mov
fcmovnb
xchg
stc
mov
dec
fnsave
in
js
lcall
jecxz
inc
outsb
jecxz
adc
push
daa
push
fstpt
sbb
insb
outsb
and
ja
int3
movsl
scas
cwtl
ret
jp
test
clc
popf
mov
xchg
rcl
xchg
enter
pop
jno
rcll
shrb
addb
mov
sbb
mov
pop
addr16
jg
pop
mov
add
and
sbb
popa
out
lcall
negb
jecxz
lret
sbbb
cmp
jno
testl
test
aaa
jle
add
pop
addb
jle
call
mov
xchg
clc
add
lea
shlb
cmp
sbbl
sub
pop
int3
pushf
lret
pop
lock
rorb
jns
or
fidivs
mul
dec
xchg
xor
xorl
xor
cmc
ljmp
sub
gs
fimuls
and
rolb
lock
outsb
inc
and
rcrl
mov
and
aam
or
sbb
and
imul
xchg
adc
jo
arpl
and
mov
mov
dec
mov
into
xchg
icebp
stc
ret
cmc
xchg
in
test
lods
lea
xor
pop
cwtl
test
and
jp
push
stos
enter
mov
pop
adc
pusha
or
add
fwait
enter
lahf
clc
int
jae
leave
pop
scas
and
addb
adc
add
xchg
fisubrl
popa
movsl
push
pop
push
inc
mov
adc
outsb
and
dec
adc
int3
int
es
movsb
into
pop
mov
jo
push
ret
arpl
mov
orb
sahf
xor
cmp
or
js
call
repz
out
lock
sbb
les
fcomps
outsl
push
cmp
pop
int
fincstp
xchg
push
dec
aas
ror
and
add
popa
fistpll
aas
push
push
hlt
add
xchg
pop
scas
popa
pop
scas
je
dec
xchg
jge
lea
fistpll
mov
std
xchg
je
add
pop
pop
cwtl
ret
divb
sysret
lea
mov
gs
arpl
mov
mov
adc
mov
mov
xlat
mov
fs
cmp
add
or
xlat
push
nop
inc
inc
shlb
mov
adcl
add
or
ficoms
inc
jb
mov
or
hlt
push
mov
iret
lret
pushf
ret
xchg
sahf
cmp
inc
mov
pop
dec
loope
pop
cmp
cmc
dec
jmp
sbb
test
lcall
repnz
lahf
inc
dec
pushf
xor
cmp
insl
mov
out
ja
xchg
iret
cwtl
jmp
fwait
pushf
pop
enter
add
jns
call
iret
push
xchg
hlt
imull
push
mov
popf
cli
cmp
jns
popa
jns
xlat
mov
mov
add
std
mov
dec
movsb
dec
xor
ret
dec
ja
push
xor
sub
scas
out
xchg
mov
aaa
cltd
mov
cmc
jns
mov
ljmp
or
cmp
cmp
jb
adc
adc
cmp
mov
insb
cltd
xchg
in
xor
push
ret
ficoms
sbb
adc
sub
mov
cmp
fnstsw
cwtl
cld
mov
movq
adc
mov
insb
stc
nopl
cltd
and
mov
movsb
cmp
adc
mov
mov
and
fistps
xchg
sub
mov
xor
jle
mov
in
lods
out
daa
cmc
adc
mov
push
insl
add
pop
jmp
mov
pop
mov
sbb
jb
sbb
arpl
jno
xchg
movsb
loope
mov
inc
sbb
test
insb
popf
add
fs
aad
or
icebp
loope
leave
test
in
inc
cmp
arpl
call
pop
push
or
jnp
mov
push
mov
sti
jecxz
and
sbb
in
fmuls
lods
mov
sub
and
cmc
pop
inc
push
add
jb
pushf
ret
mov
call
inc
scas
adc
ja
cmp
es
in
imul
or
sbb
ret
fidivrl
cmp
sbb
frstor
pop
jg
mov
cmp
mov
cltd
sub
dec
jmp
or
testl
jmp
or
mov
xlat
std
mov
popf
push
stos
test
test
out
mov
push
jb
sti
mov
je
or
and
popf
inc
sbb
sbb
pusha
loopne
jae
push
div
fsubrs
inc
xrelease
xchg
ljmp
add
push
inc
mov
xor
fcom
pop
mov
or
sub
aas
push
popa
mov
push
lds
les
out
repz
sub
push
mov
lret
imul
addr16
out
jno
add
mov
imul
sub
mov
and
bound
dec
mull
outsl
je
cltd
sbb
lock
andl
out
dec
jg
mov
ja
jae
and
sub
popa
pop
into
add
ss
imul
mov
push
push
cmp
pop
lahf
adc
in
pop
movsb
sub
iret
add
mov
arpl
jmp
lcall
ds
inc
xchg
sbb
adc
icebp
mov
decb
fwait
loop
sahf
lret
lea
xor
jbe
dec
mov
ja,pn
xor
jns
inc
add
fisttps
in
jg
adc
aas
adc
call
mov
and
cmp
adc
sub
decl
add
in
push
pop
adc
out
cmc
cmp
mov
xchg
xchg
fadds
xor
rolb
mov
cmp
mov
jecxz
adc
cs
test
cli
es
mov
and
in
pop
test
push
pop
jo
loopne
clc
push
movsl
aam
jp
adcb
cmp
push
xchg
push
xor
fnsave
cmp
adc
rcrl
loop
pop
lock
aam
stos
bound
mov
rcr
cmp
jno
mov
add
stos
push
rorl
idivb
mov
jle
outsl
dec
pop
cmpsl
scas
jecxz
add
shld
push
or
nop
pop
fwait
jg
aas
sbb
out
and
xchg
cmpsb
sbb
dec
sub
mov
dec
sti
or
inc
mov
fwait
es
push
xchg
mov
or
test
inc
adc
inc
xchg
and
sbb
inc
add
sbb
fs
jnp
ds
ja
jb
std
ret
jb
dec
add
iret
xor
out
scas
xor
sub
jb
dec
and
xorb
push
aas
mov
mov
mov
ret
dec
nop
xchg
adc
int
inc
push
repz
add
jno
mov
sub
adc
xchg
adc
mov
icebp
mov
cmp
das
call
aaa
insb
fbld
add
lods
mov
into
in
ret
xor
pop
lock
ret
dec
mov
movsb
vpshuflw
movsb
xchg
hlt
dec
mov
fwait
dec
xlat
scas
lods
cmpl
ret
cmpb
xorl
lret
test
inc
and
inc
aad
fldl
push
adc
fildll
mov
jns
push
pop
rorl
out
cmp
xor
rcll
arpl
cmp
outsl
jecxz
fsubs
repnz
pop
xor
jl
dec
outsb
jge
decl
hlt
stc
jns
and
xchg
pusha
cmp
iret
stc
lods
jno
mov
in
int3
adc
fadds
pop
bnd
outsb
push
imul
mov
and
push
dec
mov
lds
push
ja
popa
call
fwait
xor
repnz
jmp
fsubrl
dec
pushl
dec
mov
in
pop
lods
daa
in
stc
pop
loop
iret
cld
ret
or
pop
inc
mov
cmp
mov
dec
lret
shl
and
dec
push
sub
mov
xor
xchg
cmc
ds
xor
xchg
adc
je
lock
and
pop
sbb
movsl
in
stos
dec
inc
test
nop
push
outsl
pop
sbb
jbe
sub
adc
jecxz
push
daa
xchg
and
aam
adc
lock
inc
add
mov
or
mov
testl
aam
push
into
xchg
ret
sub
insb
test
or
testb
cmp
xchg
jbe
ljmp
dec
xchg
out
and
int3
lds
mov
lods
gs
mov
addr16
das
scas
cmp
fsubp
xchg
out
ret
and
jne
aad
in
dec
popa
xchg
dec
out
cli
add
icebp
push
scas
outsb
inc
out
push
sbbl
popa
test
push
addr16
dec
cmp
mov
or
mov
leave
push
mov
mov
shlb
add
scas
aam
outsl
fistpl
xchg
dec
jmp
mov
sahf
vhaddpd
jne
dec
addb
mov
cld
mov
cmp
push
aad
mov
loope
sub
popa
stos
je
sub
inc
add
aas
add
pop
cwtl
ret
xchg
int
or
lret
cs
into
dec
andl
jne
dec
not
or
mov
mov
cli
inc
fstps
fdivr
out
pop
fs
cli
inc
mov
out
repnz
scas
dec
iret
dec
pop
pop
pop
xchg
and
push
into
js
mov
or
jbe
and
dec
fcomp
rcl
movsl
lds
mov
xchg
cmp
sub
lds
cmp
jle
mov
arpl
hlt
jo
add
je
lret
sbb
sub
js
add
and
inc
add
mov
xlat
es
sarb
aas
sbb
hlt
cli
fsin
bound
push
inc
decl
xlat
lods
mov
mov
and
sub
in
sti
sub
pop
inc
stc
mov
dec
popa
adc
xchg
pushf
mov
ds
int
out
movsl
cmp
insl
inc
jb
ret
and
fdivl
cmp
mov
into
mov
icebp
or
or
push
mov
int
jnp
mov
jno
mov
sub
loop
inc
jge
sub
dec
out
sarl
mov
mov
push
mov
jno
pushf
inc
add
add
es
negb
jbe
andl
jp
fsubrl
dec
inc
jo
sahf
stc
jl
outsl
jg
call
xchg
int
imul
mov
inc
lods
inc
cmp
in
enter
aas
mov
dec
dec
sub
adc
mov
sub
scas
shll
into
iret
dec
add
adcl
sahf
adc
push
push
int3
bound
out
dec
sbbb
repz
nop
js
jp
jmp
mov
mov
ljmp
or
hlt
cmp
test
stos
pushl
add
ret
add
or
inc
mov
cmp
mov
sbbb
bound
lahf
jl
cmp
fnstcw
dec
ret
jp
fistl
jb
aam
lods
scas
adc
jbe
scas
ds
push
sti
or
adc
dec
popf
inc
sahf
in
xor
inc
fisttpll
and
jmp
pop
mov
loopne
add
inc
sub
jecxz
or
mul
cmovle
clc
fidivrl
lret
addl
add
sub
incl
add
push
jae
pop
jae
pop
outsb
rcll
adc
jmp
rclb
icebp
and
pop
add
rolb
mov
pop
gs
inc
add
sub
sbb
jnp
jo
ja
sbb
inc
rorb
jmp
xor
mov
ficoms
adc
xchg
pop
jo
loop
icebp
push
cmp
pop
xor
mov
lods
js
sub
je
mov
rcll
ss
outsb
push
xchg
inc
lahf
mov
add
sbb
push
push
and
sbb
jge
or
xchg
arpl
aaa
lds
xor
or
imul
dec
into
loope
mov
add
push
cli
fs
sub
cmp
fs
sub
jne
sbb
xchg
not
and
dec
call
cltd
fwait
das
leave
nop
or
or
adc
lea
mov
sbb
lea
xlat
aad
sbb
sub
ljmp
pop
loope
xor
push
sbb
fwait
or
ljmp
mov
loop
adc
inc
inc
ljmp
mov
hlt
aad
mov
jp
push
mov
or
aas
add
aas
stos
addr16
cmp
adcl
push
sub
mov
ljmp
loop
imul
inc
sub
outsb
and
ret
push
dec
lods
pop
popf
mov
adc
fdivp
mov
inc
pop
inc
adc
and
clc
sbb
imul
loop
popf
ficoms
or
mov
icebp
out
dec
xchg
js
int3
int3
jbe
mov
fsubs
imul
loopne
cmp
mov
xchg
mov
sbb
std
push
mov
fbstp
bound
dec
inc
dec
cwtl
mov
das
fcmovnb
and
lret
in
ficompl
jl
mov
pop
jge
pop
adc
arpl
arpl
ficoms
movsb
xchg
ds
or
sbb
xlat
inc
popa
mov
jo
loopne
subl
arpl
dec
xlat
mov
cmp
pop
ret
adc
gs
test
data16
dec
fwait
push
cmpsl
adc
fcomps
test
cwtl
out
pop
mov
mov
jmp
jge
xchg
mov
sbb
sub
mov
mov
pop
loope
lea
scas
xor
lret
cmpsb
mov
add
xor
or
call
xchg
outsl
mov
jg
in
xchg
and
adc
push
sarb
into
cmp
fdivrl
fldln2
aas
bnd
pop
cltd
or
aad
xchg
push
xchg
movsb
outsl
shlb
mov
sbb
push
add
push
and
xorl
xchg
shll
aam
mov
out
or
loop
add
cmpsl
js
mov
xchg
mov
dec
fcoml
pop
orb
or
mov
aam
fs
dec
push
and
jp
in
aad
je
inc
lods
dec
mov
dec
sarb
and
psllw
xchg
pop
in
in
scas
popf
sub
mov
xchg
adcb
or
lds
imul
out
pop
and
mov
xchg
test
push
push
mov
mov
jbe
or
sub
fldl2t
jle
sub
add
fsubr
cmp
jmp
ret
mov
adc
lods
pop
mov
push
adc
add
lret
in
mov
lret
adc
push
fstps
jns
fsubrl
ja
mov
ja
sub
testb
xchg
out
scas
pusha
add
inc
frstor
or
inc
scas
out
bound
js
inc
in
pop
mov
into
pop
insl
fildl
fs
int
fwait
inc
xchg
and
test
out
xor
ret
scas
lock
push
mov
jns
mov
fisubl
mov
lahf
test
or
sub
imul
jnp
js
dec
imul
daa
pusha
fdivs
lea
lret
aam
jne
lock
mov
das
dec
lock
fdivr
pop
lock
inc
shlb
cmpsb
popa
mov
xchg
rol
add
jp
sbb
cmpsl
push
outsb
push
mov
mov
push
pop
mov
jo
pop
xor
mov
add
repz
sbb
cli
inc
add
mov
decl
fnstcw
or
sti
mov
sahf
cli
pop
inc
xchg
adc
xchg
out
dec
lods
jp
jno
movsb
xchg
adc
fiadds
mov
das
mov
mov
xchg
mov
sub
pop
and
mov
adcl
sub
arpl
iret
push
dec
push
add
testb
inc
sbb
js
mov
ds
xor
inc
inc
popa
inc
mov
adc
xchg
adc
inc
rcl
push
xor
pop
sbb
jbe
movsl
jl
clc
jns
inc
ljmp
aaa
into
shll
shll
gs
cmp
sub
fildl
pop
add
das
rcl
scas
xor
dec
sbb
xchg
aam
mov
cli
jae
pop
cmpsl
popf
ljmp
mov
je
mov
sbb
cmc
icebp
mov
ret
xchg
sti
push
jl
movsb
mov
jle
adc
outsb
sbb
inc
fmull
push
aad
mov
add
pop
add
lock
jp,pt
dec
push
ficoml
xor
cmp
pushf
jg
in
add
sbb
fucomi
lea
xchg
hlt
add
fsubl
ficoml
xor
ficoms
adc
loopne
dec
iret
les
out
mov
pop
cmp
dec
or
xlat
outsb
in
sarb
call
mov
aaa
iret
call
push
mov
xchg
cmpsb
dec
psllw
call
addr16
sbb
jno
aaa
adc
lock
int
and
data16
mov
ds
cmp
mov
mov
pop
xor
data16
jo
add
loopne
pop
dec
cmp
adc
fidivrl
das
dec
adc
push
xchg
les
lcall
sub
mov
aaa
mov
or
mov
sub
adc
and
out
cwtl
shrb
dec
sub
sbb
icebp
daa
loopne
xor
scas
cmp
in
add
movsl
cmp
xor
pusha
arpl
sub
jo
jno
nop
loop
ret
pushf
les
sar
jo
shrl
frstor
test
xor
xor
push
sarl
inc
xor
andb
sub
mov
test
daa
pop
xor
xchg
or
inc
out
dec
adc
lcall
dec
sub
jg
or
dec
cli
dec
cmp
leave
mov
xor
xorb
dec
dec
sbb
add
cmp
pop
or
sbb
call
adc
fiadds
jbe
add
in
adc
and
xchg
sbb
pop
ss
push
es
fisttpl
rolb
testb
arpl
push
sub
mov
inc
push
je
xchg
stos
addr16
push
mov
mov
jecxz
push
mov
popl
sub
jne
cli
cli
dec
je
push
enter
insl
movsl
test
mov
lret
jge,pt
mov
divb
lret
negb
enter
push
ljmp
cwtl
pop
adc
mov
js
mov
jg,pn
inc
mov
pop
mov
adc
les
fnsave
dec
adc
inc
pop
out
xchg
pushf
adc
sbb
adc
cmp
lret
xchg
test
push
addl
xor
lods
jno
sbb
sub
adc
sub
shlb
cmpsb
adc
dec
lea
jg
idivl
loopne
sub
pushf
test
sbb
xchg
xor
adc
sub
aaa
call
inc
test
cmp
push
lret
js
ret
jg
push
lret
les
int
in
sti
xchg
jg
insl
mov
dec
es
das
jmp
testb
data16
std
mov
mov
push
mov
pop
outsl
inc
push
je
pop
and
pop
adc
or
loop
fsubrp
push
xlat
add
imul
das
lods
fisttpl
mov
mov
dec
add
dec
and
cmp
fdivr
data16
dec
loope
iret
aaa
sbb
adc
push
enter
or
das
aam
jp
push
pop
xchg
cmp
pushl
push
inc
gs
in
call
dec
fistl
lcall
movl
adc
jl
dec
and
inc
scas
xor
mov
std
lahf
mov
loope
or
cmp
in
cmp
aaa
ret
and
shlb
and
inc
outsl
jae
and
dec
adc
rcl
sbb
or
mov
and
pusha
test
pop
pop
jns
les
cmp
cwtl
jne
addl
inc
scas
pop
dec
add
jge
mov
inc
imulb
cld
aaa
mov
bound
xor
jbe
mov
mov
sub
cmp
loopne
mov
loope
popa
mov
lea
loope
lret
sub
mov
lock
sahf
jp
insl
push
aaa
mov
xchg
out
fldcw
fwait
pop
mov
inc
popf
xchg
out
loope
mov
out
clc
mov
lea
dec
cld
popf
sbb
jbe
adc
cltd
fidivl
jne
xor
daa
loopne
std
clc
testl
arpl
hlt
insb
mov
into
mov
mov
push
or
je
or
mov
test
int
clc
sub
into
aad
sti
pslld
ss
adc
icebp
gs
adc
dec
jp
cmp
mov
mov
adc
push
loop
and
ss
sbb
int
outsb
mulb
xchg
pop
pop
stos
sarb
jbe
push
jl
xor
sub
ss
scas
std
push
cmc
cmp
iret
dec
aaa
test
push
ja
pusha
mov
xor
popf
xor
push
jge
ret
or
pop
dec
fidivs
xchg
push
push
loop
add
mov
fs
outsl
push
adcl
mov
sbb
repnz
or
cld
jecxz
xchg
icebp
add
enter
mov
adc
lods
lcall
js
gs
in
js
fidivl
int
ljmp
jge
push
inc
mov
xchg
cwtl
pusha
mov
jno
mov
jmp
test
sbb
adc
xchg
arpl
or
cmpsl
sbb
addb
mov
mov
mov
push
or
clc
mov
sub
fwait
push
mov
mov
xchg
adc
xchg
or
sarl
cwtl
mov
mov
mov
mov
fsubp
jns
pushl
cs
pop
insb
sbb
imul
in
aad
cmpsl
xor
xor
add
and
xor
hlt
cwtl
stc
xor
adc
add
in
xchg
sub
push
lret
mov
push
push
push
lods
mov
jle
movsb
cmp
ss
shrl
loope
cmp
out
test
sub
push
jg
and
enter
fmul
in
pop
dec
aam
push
aad
ljmp
mov
cmp
iret
imul
sub
aad
inc
ss
imul
jle
testl
cmp
adc
jge
cltd
pop
sbb
mov
pop
call
mov
jb
sbb
jno
mov
cmp
xlat
mov
inc
xchg
aaa
pushf
cltd
fdivrp
mov
data16
inc
clc
xchg
push
loopne
outsl
cmpsl
insl
cmp
stos
push
flds
inc
pop
hlt
enter
push
xor
movsl
out
push
sahf
decl
push
xchg
inc
sti
out
jb
mov
jg
loope
jg
scas
push
mov
xchg
inc
jmp
outsl
data16
mov
ja
xchg
sbb
enter
sbb
ds
pop
ja
into
testl
add
ror
sub
xchg
dec
xchg
xchg
adc
std
aad
arpl
in
xchg
and
cmp
add
in
mov
jge
and
and
add
xor
mov
inc
imul
push
xchg
test
xchg
mov
xchg
xchg
dec
jmp
test
repnz
jb
popf
clc
add
cmp
sub
sbb
pop
jecxz
dec
scas
push
hlt
adc
pushf
cmpb
jns
das
lea
cmp
pusha
fstp
leave
iret
rcrl
jge
cmpsb
fs
fcompl
inc
mov
adc
loopne
pop
repz
pop
mov
sbb
jl
xchg
rcrl
in
adc
movb
sub
inc
movsl
sbb
cmpsl
or
add
imul
xchg
ja
enter
cmp
xor
push
fwait
mov
pushf
shl
sbb
mov
xor
pop
pop
out
outsb
lock
movsl
dec
adc
gs
cli
sub
shr
dec
ficomps
pop
pop
and
jl
push
or
addps
icebp
sbb
cmp
jae
notb
cmp
xchg
out
fcomps
movsl
mov
popl
xor
xorl
push
insl
call
lods
data16
es
add
xchg
ret
cli
outsl
xchg
sbb
cmpsb
lods
cwtl
lods
add
and
imul
push
sub
cli
scas
inc
scas
shll
mov
fs
dec
or
xor
jae
mov
cmp
mov
push
mov
in
insb
jbe
sti
jmp
or
iret
popa
mov
inc
add
ss
push
adc
lods
roll
loopne
sti
inc
gs
addr16
jle
out
pextrw
push
scas
and
or
sub
push
cmpsl
pop
lcall
lcall
test
mov
pop
mov
cmc
add
pop
shlb
sbb
push
mov
out
insb
cmp
adc
xchg
inc
cli
xchg
ja
subb
dec
sahf
imul
ds
jmp
test
imul
popa
mov
fdivs
sti
or
inc
inc
dec
ljmp
mov
mov
inc
repz
and
and
das
xchg
out
xor
loopne
xor
lret
push
adc
pop
pop
mov
add
push
push
enter
imul
cmp
dec
pop
sub
pop
push
add
jmp
mov
mov
xchg
push
loopne
stos
adc
dec
insb
pop
scas
jne
or
sbb
shrb
and
mov
addr16
cmp
cmp
mov
pop
lret
xor
daa
iret
pop
lods
xchg
pusha
fisubl
xlat
push
cmp
mov
dec
cmpsl
pusha
xchg
xchg
xchg
mov
sub
daa
dec
push
pop
sub
daa
js
inc
fstpt
lock
xchg
mov
xlat
mov
ljmp
test
mov
shl
aad
mov
xchg
mov
mov
jge
pop
mov
xchg
xchg
mov
jge
mov
and
mov
push
movsb
idivb
or
repz
jge
sahf
stos
pop
mov
push
in
push
mov
or
sbb
add
ss
lcall
fwait
mov
je
xchg
out
jnp
pushf
xchg
push
dec
mov
fisubrs
push
addr16
push
mov
arpl
push
or
push
add
ljmp
mov
pop
xchg
and
insl
nop
inc
mov
fbld
add
xchg
test
mov
push
mov
mov
mov
mov
dec
mov
sahf
popf
std
pop
sbb
pop
mov
add
push
mov
aad
adc
es
push
jae
jo,pt
insl
mov
dec
out
mov
inc
add
or
mov
imul
push
in
mov
jg
pop
dec
cltd
cwtl
insl
mov
ljmp
testb
insb
pop
loope
repnz
xor
mov
jo
xchg
ss
fisubs
sbb
insb
xchg
pushf
les
jne
fistpll
gs
inc
jo
adc
jge
nop
int
push
mov
fwait
enter
jp
into
cmp
mov
outsb
aas
add
push
xchg
cwtl
or
xor
pop
sahf
arpl
insl
push
fdivs
mov
cmp
ljmp
shl
shlb
and
cmp
imul
orb
mov
hlt
cmp
in
pushf
fistpl
in
inc
arpl
inc
push
movsb
fs
scas
leave
insb
fsubl
or
rorl
lret
call
push
test
stos
lcall
scas
cwtl
pop
orl
fisubs
lret
jns
cmp
popa
pop
push
mov
divl
mov
pop
sub
xor
pop
xor
cmc
cmpb
sub
or
mov
data16
xchg
pop
cmp
icebp
cmp
push
popa
cli
xchg
cmc
lcall
mov
xor
incb
inc
rorl
push
pop
xchg
ja
and
xchg
mov
add
sub
or
mov
jne
in
inc
cltd
ret
mov
jmp
in
andb
pop
jnp
add
or
gs
rcl
scas
shll
add
fmuls
jg
mov
mov
add
out
rcr
outsb
stos
pusha
dec
sbb
test
push
or
and
and
cltd
cmpsl
mov
push
icebp
inc
lock
inc
pop
push
imul
and
or
pmulhuw
mov
cmc
adc
cmc
inc
mov
stos
int
pop
or
scas
cmpsb
xchg
outsl
sbb
rcrb
sbb
call
mul
shr
inc
rep
adc
dec
push
test
leave
jnp
popf
cmpsb
shll
pop
xor
mov
mov
decb
fidivrl
xor
cmpsl
das
inc
out
lret
repz
das
sbbl
mov
in
push
push
shll
icebp
jne
push
or
sub
xor
test
lods
hlt
add
shll
jp
jns
test
dec
push
jg
shrl
mov
lcall
dec
repnz
mov
xorb
iret
out
xchg
xchg
mov
jge
jg
imul
cmp
les
lock
outsl
pop
sub
xchg
mov
mov
jg
push
aas
stos
mov
out
xor
sub
mov
cltd
hlt
mov
add
ret
and
in
sub
xchg
xchg
lret
adc
sbb
shlb
lods
jb
ja
mov
pusha
nop
bound
sub
mov
xor
inc
jge
cld
xchg
xlat
pop
mov
sahf
dec
nop
loopne
lahf
cmp
xlat
sub
sub
je
mov
or
cmpsl
fs
and
add
mov
push
mov
pop
jno
add
xor
pop
out
dec
fisttps
jecxz
out
mov
and
in
in
push
test
mov
inc
in
mov
xlat
or
repnz
cmp
jecxz
jecxz
xorb
cmp
fwait
popf
xorl
and
pop
jb
mov
pop
mov
xor
out
lods
inc
and
mov
and
push
adc
mov
xor
je
mov
adc
pop
out
mov
xor
inc
or
mov
push
jns
mov
jb
jb
adc
push
test
scas
xchg
inc
scas
aas
dec
mov
scas
xchg
jno
int
test
and
adc
cmp
xor
adc
cmpsl
inc
mov
xlat
mov
push
or
dec
xchg
test
push
push
add
fnstsw
xchg
xor
xor
pusha
and
lahf
adc
scas
mov
test
mov
cld
stos
aad
xor
cli
aas
pop
adc
fldt
sbb
xchg
sub
push
lods
insl
xor
iret
xlat
rorb
cs
div
sub
pusha
fldenv
jns
lock
mov
or
cld
or
xor
cmpsb
out
mov
xlat
cld
mov
ds
ja
insl
mov
into
dec
add
gs
sbb
pop
dec
jle
jnp
jecxz
xchg
mov
mov
add
ja
xor
sbb
push
addr16
mov
iret
adc
ss
and
dec
cmp
dec
aad
imul
mov
test
test
sub
cmp
push
mov
lods
lea
jmp
jne
mov
cmc
push
dec
jecxz
jmp
ja
mov
adc
mov
je
outsl
push
out
and
and
mov
cld
cli
sbb
fnop
adc
in
ss
mov
sub
data16
jge
sbbb
pushf
test
dec
cmpsl
outsl
push
mov
dec
mov
pop
xchg
aam
sub
cmp
or
sub
mov
adc
imul
inc
inc
xchg
mov
inc
push
mov
push
and
out
sub
fcompl
xchg
dec
jbe
cmp
out
repz
mov
lods
jmp
dec
push
outsb
inc
nop
lds
inc
sbb
push
lcall
mov
cmp
call
loop
aam
inc
mov
xchg
mov
mov
fiadds
movsl
mov
jno
in
dec
in
hlt
aas
jge
arpl
jg
mov
pop
xchg
adc
cmp
popa
and
clc
ja
dec
in
das
and
iret
pop
add
loopne
insb
call
scas
or
fstl
enter
pop
xor
mov
dec
test
adc
jnp
add
cmpsl
mov
outsb
daa
push
movsl
popf
push
lret
mov
xor
adc
in
pop
aaa
repnz
inc
pop
xchg
out
dec
cmpsl
enter
adc
jg
sbb
add
cld
int
mov
mov
in
loopne
es
fwait
sbb
nop
ja
adc
mov
add
call
mov
ds
xlat
scas
add
xchg
inc
jb
idiv
sub
xchg
fcoms
push
pop
adc
rcrl
lds
imul
pop
xor
push
aas
or
push
inc
test
imul
lods
test
add
cmp
jb
in
rorl
inc
cmp
jo
push
pop
inc
mov
clc
addr16
pop
sarl
movsb
fcmovu
ret
addr16
inc
movsl
adc
notl
dec
pop
scas
scas
out
in
ja
pop
cmp
jge
imul
imul
popa
leave
inc
nop
push
xor
cmpsl
bound
sbb
test
sbb
in
and
pop
dec
cmc
mov
loop
sbb
push
xchg
nop
or
mov
or
mov
sub
add
lret
mov
into
mov
push
jp
inc
dec
repz
sub
push
out
xchg
dec
frstor
adc
push
mov
dec
xor
je
addr16
jbe
add
sti
and
sti
mov
mov
xorl
mov
mov
sbb
into
cld
fstps
mov
test
fmuls
es
dec
subl
add
xchg
fwait
scas
sahf
cs
inc
push
lods
je
mov
xchg
aaa
in
in
movsl
pslld
sbb
in
cmpsl
lahf
lret
or
dec
and
xchg
sbb
jb
and
bound
sub
mov
xor
jg
cmp
jl
inc
cmp
orb
jo
add
cmp
xchg
mov
cmp
hlt
inc
loop
adc
out
jbe
inc
imul
loope
cwtl
mov
int
sahf
jle
test
cmp
push
pop
insl
dec
inc
leave
or
popa
jge
mov
sbb
xorb
loopne
xor
scas
jp
lret
sahf
in
imulb
xchg
inc
sbb
xlat
dec
mov
cs
rcll
push
movsb
dec
and
fidivrs
jo
pop
ds
std
sbb
mov
mov
push
int
ret
fcmovbe
into
pop
lods
xchg
test
or
es
push
sub
or
sarb
fsubrl
aad
push
cmpsb
xchg
sub
test
imul
inc
stos
mov
lods
lods
xchg
lret
bound
aas
push
cmc
xchg
cmp
bound
pop
pop
jmp
add
xchg
mov
adc
inc
inc
or
aad
xor
cltd
jecxz
dec
fwait
pop
xor
dec
scas
push
aam
push
ja
push
scas
push
mov
imul
mov
pop
fwait
sbb
adc
push
mov
jnp
loop
sbb
enter
pop
mov
out
fistps
pop
fcmovu
insl
sbb
test
cmpsl
fmul
bound
mov
popa
aas
inc
daa
lahf
mov
sub
int
daa
imul
or
xor
rclb
mov
push
rol
push
push
stos
jb
dec
mov
mov
sbb
push
inc
popf
bound
and
mov
push
sbb
mov
dec
pop
loop
lock
mov
ds
add
push
pop
xchg
cmp
inc
add
das
add
mov
push
xchg
add
jp
push
and
out
push
rol
out
mov
shl
add
mov
push
shll
mov
jle
mov
mov
add
aam
imul
mov
add
or
test
pop
rolb
aam
pop
mov
sbb
xlat
and
pusha
stos
mov
shll
jg
outsl
loopne
jmp
gs
mov
or
sbb
mov
mov
push
push
ror
sarl
lcall
mov
inc
fs
lods
pop
jmp
loopne
les
fstp
or
les
lods
pop
sbb
out
repnz
adc
imul
test
mov
lods
xor
pushf
scas
xchg
movsb
cmpsb
bound
ljmp
mov
jle
neg
decb
ficomps
push
popf
adc
pop
sbb
and
sti
dec
les
xor
lock
into
imul
shll
in
mov
rcrl
cld
jns
gs
outsb
dec
fwait
pop
cmp
insl
imul
popf
jp
stc
push
push
dec
pop
rolb
imul
mov
dec
mov
ds
enter
dec
lea
cmp
sbb
insb
stos
mov
into
adc
js
cs
jb
mov
mov
and
mov
in
dec
inc
cmp
test
pop
je
push
mov
xchg
mov
cmp
cltd
std
add
push
pop
loope
nop
mov
pop
out
mov
es
jecxz
imul
or
push
xor
mov
adc
dec
mov
ret
xchg
pop
xchg
aad
stos
dec
test
pop
mov
popa
ss
jge
hlt
pop
data16
pop
pop
and
ret
cmp
and
fstpt
jo
mov
leave
mov
insl
push
push
repz
out
and
std
fidivrl
test
pop
pusha
mov
leave
mov
pop
stos
inc
std
test
jle
add
lahf
pushf
rcrb
pop
xor
push
fldt
mov
outsl
leave
mov
sahf
subb
or
mov
sub
pop
xchg
cmpl
sarb
sub
xor
ss
repz
sbb
xchg
aaa
mov
pop
mov
rcl
pop
push
inc
cwtl
mov
das
or
clc
rcrl
sbbl
sti
insb
inc
mov
push
adc
icebp
fldl
sub
add
adc
mov
in
popf
push
xor
xor
mov
scas
push
sub
in
inc
pop
mov
push
xor
clc
imul
ja
pop
in
imul
jns
dec
sbb
pop
dec
inc
dec
pop
add
mov
mov
add
mov
sub
jmp
jo
sub
push
jo
adc
fisttpl
xor
mov
adc
dec
aas
adc
pop
mov
dec
push
pop
in
stc
mov
or
call
or
je
jle
movsb
movb
lret
jo
jp
cmp
fs
cmp
add
dec
lfence
pop
pop
mov
lcall
add
fisubrl
loope
pushf
dec
stc
stos
push
aad
movsl
mov
aad
leave
pop
sbb
mov
mov
mov
push
pop
push
scas
mov
cld
push
dec
pushf
lea
enter
aaa
test
add
pusha
xlat
adc
sbb
mov
and
add
sub
xor
inc
and
xchg
inc
sub
xchg
sbb
jp
mov
xor
fimull
pop
js
jp
mov
and
popa
xor
test
orb
bound
sar
iret
mov
nop
mov
movsb
jne
das
hlt
int3
daa
insb
shrb
out
std
in
es
pop
add
and
mov
inc
fdivrl
das
cltd
lods
mov
in
xor
sub
mov
mov
xlat
hlt
dec
fiaddl
imul
loopne
call
mov
fstpt
mov
xor
xor
and
lret
dec
jl
xor
and
js
inc
mov
xchg
arpl
cmp
int3
sub
adc
mov
inc
fstl
imul
insl
inc
jmp
sbb
add
mov
mov
iret
dec
sbb
iret
sub
lahf
sbb
pusha
imul
into
jno
into
pop
rcll
add
rorl
sub
push
pop
sarl
mov
notl
jp
jl
inc
dec
out
or
sbb
cmpsl
add
orb
pop
imul
inc
daa
arpl
mov
lahf
in
fsubrl
pusha
fbld
ljmp
ds
loope
push
pop
ja
test
inc
lods
int
or
shll
sarb
and
popa
in
inc
sti
jl
pop
push
popf
in
jp
aam
jmp
sbb
add
fildl
xchg
xor
fmul
test
std
fwait
xchg
in
and
out
push
pusha
add
pushf
xchg
cmp
imul
fmull
add
xchg
xor
add
xor
addr16
jnp
cli
popf
sbb
rcrb
daa
sti
sbb
jbe
xlat
sbb
sbb
sbb
shlb
cmovl
cltd
cmp
popf
imul
out
mov
mov
loope
jle
push
lcall
mov
adc
sbb
lret
sbb
xchg
mov
mov
nop
xor
shll
mov
es
mov
push
xchg
hlt
xorb
pop
cmp
std
jecxz
movl
inc
call
cltd
add
pabsd
fidivrl
sbb
dec
lret
mov
xchg
loop
sbb
xor
sub
adc
mov
push
mov
jmp
stos
int
cmp
inc
or
cli
sti
mov
xchg
lock
int3
mov
push
mov
push
fs
es
les
faddl
mov
cmpsb
lods
inc
test
test
popf
jnp
movsb
out
aaa
les
jo
std
sbb
icebp
pop
lea
out
jmp
xchg
hlt
dec
movsl
imul
and
ret
test
cltd
jecxz
hlt
xlat
ja
or
mov
mov
fisubs
lret
enter
push
add
sub
fmull
shrl
test
cmpb
sahf
jno
mov
pop
push
jmp
stc
lahf
mov
cmc
mov
loopne
lods
mov
mov
inc
mov
pop
sbb
aad
and
dec
xchg
push
mov
mov
fs
xchg
in
sub
cltd
mov
fisubs
mov
rclb
and
aad
add
mov
jb
dec
and
and
xor
scas
in
cmp
and
xor
aad
mov
popa
arpl
ljmp
and
bound
push
mov
shlb
insb
rol
xor
pop
les
push
mov
adc
mov
mov
and
dec
fbstp
in
push
fldcw
jl
or
add
pop
xchg
test
add
stc
xchg
mov
push
imul
outsl
jl
jae,pt
xor
cld
fildl
push
cmp
pop
leave
jle
pop
mov
inc
mulb
daa
push
and
push
lcall
adc
push
xchg
xor
mov
jne
dec
push
insl
daa
push
data16
jmp
das
fldl
in
push
or
lds
adc
sbb
ret
mov
mov
jno
mov
mov
inc
dec
inc
dec
fstpt
mov
out
lahf
pop
dec
dec
or
sbb
aam
mov
jmp
sub
dec
push
daa
mov
jno,pn
xor
push
sti
daa
push
mov
mov
mov
inc
jo
mov
adc
cmp
xor
mov
scas
sbb
fs
icebp
xchg
adc
sahf
out
adc
mov
jnp
jmp
ret
jne
cli
insl
in
cwtl
or
dec
adc
rorl
push
push
push
cmp
xor
push
xchg
jl
jg
psrlq
xor
push
nopl
cmp
add
push
cli
mov
aad
jne
mov
insb
mov
cmp
fdivrl
xchg
cmp
add
mov
mov
popa
mov
popa
cmp
lret
jae
fwait
ljmp
sbb
mov
ljmp
enter
and
xor
push
pop
push
std
xor
std
shll
add
lea
jg
scas
jbe
dec
add
aas
push
aad
mov
push
mov
jne
jge
sub
into
mov
ljmp
dec
sbb
mov
sar
std
and
sub
rclb
pop
sub
xchg
out
xchg
sub
ds
add
sbb
stos
scas
mov
mov
pop
sub
lds
add
push
lret
loope
aaa
mov
inc
sub
mov
mov
pop
sub
fcom
divb
push
dec
ret
shrl
dec
adc
shrl
xchg
cmp
movsl
mov
cmpsb
ljmp
fnstenv
mov
enter
mov
lds
jle
ja
nop
rolb
and
pop
out
aad
inc
push
or
jbe
hlt
adc
cltd
movsl
ss
cmp
jle
mov
pop
ja
cmp
aaa
xchg
iret
and
adc
andl
jne
out
es
cmp
xchg
add
sarb
lret
sub
cwtl
stos
dec
fdivrs
test
push
inc
lret
xchg
loop
xchg
enter
pop
jb
or
and
les
outsl
dec
or
push
fdivl
aaa
outsl
dec
xor
add
jno
aam
cmp
sub
or
push
pop
jns
push
iret
cld
mov
pop
fists
xor
xchg
idivb
push
pusha
or
mov
mov
loop
dec
je
dec
insb
cmp
cmp
mov
gs
iret
xor
pop
push
jp
pop
pop
and
cmp
fisubrs
sbb
push
pusha
jo
sti
mov
mov
or
and
push
cmp
xor
in
jl
je
cmp
dec
test
scas
cmp
arpl
xchg
jl
sub
inc
pop
sbb
xor
call
xor
loopne
cmp
mov
fimull
iret
or
imul
pop
aas
data16
jge
jo
fs
jle
jnp
mov
adc
jmp
out
mov
xchg
stos
cmp
lret
mov
les
jbe
ss
adc
lahf
stos
ljmp
decb
test
jmp
icebp
rcll
cmc
and
inc
aad
shlb
inc
or
push
mov
jge
arpl
pop
pushf
mov
fwait
inc
xchg
mov
adc
sbb
imul
out
lock
sti
in
add
xchg
inc
mov
hlt
add
push
pop
mov
movsb
pop
mov
sub
ret
fs
jecxz
add
shrl
lea
insb
sub
mov
pop
push
js
ja
lcall
repnz
mov
adc
dec
ja
pushf
sbb
repz
sbb
and
repz
andb
fcompl
mov
aaa
insb
add
sub
add
nop
mov
jge
jns
jecxz
aam
bound
in
arpl
popa
jl
add
movl
stc
xor
inc
xchg
push
aas
add
sub
mov
cmp
xlat
cli
xor
bound
cltd
xchg
jns
cmpsb
call
pop
pop
cmpsl
out
push
xorl
push
sbb
mov
sbb
cs
or
aaa
insb
push
or
or
das
inc
movsl
sub
cmp
cwtl
fs
dec
dec
rol
pushf
jb
xchg
push
js
sbb
cmpsb
cmpsl
mov
sbb
mov
js
sbb
cltd
cmp
insb
xor
xor
cmp
lahf
insl
les
push
sbbb
insb
xchg
jp
shll
mov
sti
out
inc
jnp
inc
mov
in
mov
ficompl
stos
jb
pop
rorb
leave
or
lods
pop
insb
xchg
addr16
mov
std
push
addb
and
mov
pop
shlb
repz
dec
pop
lahf
lcall
cmp
sbb
sbb
loope
add
inc
cmp
xchg
mov
dec
sub
or
pop
push
xchg
enter
mov
sub
pop
push
into
and
adc
out
insb
inc
popf
or
mov
std
in
lret
jp
inc
push
mov
xor
xchg
jo
jmp
cmp
push
cmp
scas
insb
push
xorb
sub
xlat
xor
xchg
test
pushf
rdmsr
mov
pop
dec
jo
xchg
jle
ljmp
insl
xchg
dec
xchg
lods
sbb
xchg
fs
pop
xchg
add
adc
les
pop
adc
in
pop
test
adc
fdivl
mov
test
orb
out
repz
ror
adc
mov
push
sahf
rclb
sbb
jmp
pop
out
xchg
jne
cmc
jb
jge
push
mov
dec
mov
xchg
hlt
add
push
inc
sub
jge
sub
mov
outsb
lock
add
pop
mov
out
sub
mov
jnp
pop
sbb
fists
lret
pop
pop
call
out
cs
je
add
adc
dec
scas
push
xor
cmova
jno
test
xor
mov
jns
dec
insb
adc
fcmove
loope
std
popf
xchg
sbb
jecxz
xchg
stos
mov
adc
paddd
movl
xor
push
mov
inc
or
movsb
fstps
push
mov
cli
xor
dec
call
push
cmp
test
jne
lds
scas
ret
jle
dec
pop
subb
data16
mov
int
pusha
fildl
rclb
inc
dec
pop
roll
clc
mov
push
movsl
adc
cmc
loopne
mov
mov
push
push
insl
xor
mov
cli
mov
popf
mov
push
incb
and
aad
adc
int
mov
notl
in
scas
push
mov
fbld
mov
in
xor
mov
mov
out
adc
jl
stos
mov
adc
pop
shll
inc
cmp
out
mov
mov
neg
test
loopne
push
outsl
pop
dec
imul
xchg
or
sub
mov
test
rclb
fucomi
in
fmul
addb
jnp
sarl
lahf
movsl
popf
add
das
xchg
out
xor
cltd
lcall
mov
stos
test
cmp
mov
aad
pushf
jno
dec
sahf
or
pusha
jb
dec
pop
push
aas
sbb
test
sbb
shll
sbb
pop
jmp
push
jbe
adc
dec
push
fcomi
loop
sahf
sbb
or
std
xchg
popa
jne
stos
xchg
push
test
in
gs
data16
or
pop
or
hlt
ds
sti
or
pop
pop
filds
mov
shll
shr
dec
or
loopne
and
pop
push
scas
push
inc
scas
and
outsb
in
dec
mov
sub
xor
lods
inc
sahf
ja
repz
or
shll
and
lret
adc
cmp
mov
mov
repnz
mov
push
fsubrs
xor
nopl
clc
int3
pop
leave
test
imul
bound
or
iret
fcmove
mov
pop
mov
fisubl
and
pusha
ret
push
jecxz
popf
pop
sub
push
sbb
and
mov
inc
imul
lahf
adc
cs
mov
outsb
push
mov
fsubs
jnp
sarl
fadds
xchg
inc
movsb
hlt
in
mov
pusha
mov
jl
push
inc
das
xchg
dec
jb
ret
call
pop
div
fdivrs
mov
stos
or
sbb
mov
add
sbb
mov
dec
popf
sbb
inc
insl
xchg
inc
inc
inc
addb
xchg
cs
push
daa
rcrl
xchg
aas
mov
repnz
cmp
inc
or
pop
es
and
xor
xor
dec
stc
mov
mov
mov
out
sbb
adc
add
jl
int3
xchg
adc
mov
repnz
jno
and
les
inc
js
mov
or
sahf
adc
pusha
fstp
movsb
pusha
daa
jbe
sbb
pop
mov
ss
cmp
orb
adc
dec
rcll
scas
mov
mov
dec
push
cltd
scas
jl
repz
xchg
out
stos
fstps
gs
mov
xor
inc
int
jbe
sbb
and
pusha
push
notl
inc
outsb
and
or
lods
push
out
sbb
aaa
sub
icebp
in
push
ds
std
lret
dec
iret
aam
sub
addr16
inc
jle
mov
and
push
mov
mov
cltd
out
sub
sub
or
push
call
pop
cmp
orl
addb
cmp
in
aas
movsl
int
jno
or
movsb
dec
arpl
add
fldenv
cld
inc
mov
xor
ds
fiadds
or
jno
ds
aaa
int
fistl
fadds
hlt
js
xlat
mov
xlat
repnz
out
repz
fistpll
push
test
mov
divl
lds
push
aad
fwait
shrl
addr16
int3
rcr
mov
sub
jmp
add
std
nop
dec
mov
movsl
test
sbb
dec
cmp
xor
xor
or
cmp
jnp
iret
out
shrl
lret
mov
mov
jae
movsl
icebp
push
leave
cmpsb
xchg
jae
out
jmp
and
fs
lret
mov
cmpsb
jmp
addr16
pop
ret
pop
mov
cmpsb
sbb
add
and
std
inc
out
mov
push
pop
mov
outsl
fdivr
sub
sti
sti
jmp
mov
out
jnp
popa
mov
icebp
push
lahf
xor
bound
jl
and
and
xchg
inc
sbb
call
aaa
jns
xchg
fiadds
je
add
loop
out
lock
data16
stos
pop
mov
jle
push
es
lcall
bound
jg
push
das
adc
js
scas
inc
loop
mov
cli
and
xor
dec
jp
push
js
sub
mov
popa
test
aam
xchg
mov
insl
and
or
inc
movsb
mov
cmp
dec
lods
shr
push
lret
dec
or
pop
jno
or
enter
jg
sahf
fistps
shll
cmp
popf
fidivrl
lods
and
or
aaa
in
add
pusha
adc
push
cltd
mov
adcb
push
mov
cmp
or
sarl
jno
aam
mov
pushf
sbb
inc
lahf
outsl
jg
aaa
sub
cmpsl
fdivrl
repnz
hlt
test
movsb
mov
outsb
lcall
or
repnz
jae
add
xchg
or
adc
and
sbb
aaa
mov
or
aad
aad
fadds
fisubs
cmp
jb
add
adc
mov
and
test
stos
ret
movsl
inc
ljmp
xor
mov
cmp
cmp
or
push
test
sti
push
andl
mov
sti
dec
xchg
dec
push
push
ret
mov
mov
adc
movsl
out
out
insb
or
idivl
js
mov
shrb
jecxz
push
mov
in
in
stc
cld
mov
jg
cmp
xor
cmp
mov
and
icebp
cmp
hlt
jnp
inc
scas
dec
inc
xor
cmpsl
imul
or
or
adc
imul
test
das
mov
jl
adc
test
outsl
push
rdtsc
inc
xor
pop
xchg
test
or
aam
adcl
lods
into
push
aad
pop
loope
clc
stc
inc
ret
in
xor
int
adc
jo
mov
stc
add
sub
inc
push
xchg
jne
movsl
popl
jle
testl
pop
in
data16
push
lcall
push
test
sbb
data16
add
leave
and
std
ja
lret
dec
xor
and
jl
pusha
xchg
stos
jmp
sub
xchg
push
jns
jmp
and
jnp
xchg
std
ss
push
call
into
xchg
sbb
pop
je
sti
add
sbb
mov
fs
cld
pop
mov
fs
shrb
lds
cmp
int3
inc
mov
test
or
sbb
lret
sub
int3
add
add
imul
sub
or
cltd
or
mov
adc
cmp
sub
mov
rorl
ret
or
je
add
xchg
and
out
fisubs
arpl
adc
test
call
fstpt
and
pushf
adc
iret
sti
cmpb
pop
es
jno
cmp
pop
sbb
sbb
mov
rcl
cmp
add
mov
lods
cmp
inc
sbb
in
push
test
fs
pop
xor
xlat
int3
and
and
sub
sbb
dec
lock
cmc
add
sahf
add
stc
lret
jno
ret
and
repz
push
in
pop
pop
mov
xor
or
iret
jae
mov
push
cmc
dec
popl
sub
push
cmp
mov
push
rcrb
lods
scas
outsb
int3
lret
js
cli
jno
jae
into
je
aaa
pop
hlt
rol
fstl
cmp
sub
hlt
jns
or
inc
push
lds
cltd
pop
inc
jg
sahf
dec
cmpsb
nop
insb
cmp
cmp
sti
aam
and
mov
outsb
xchg
repnz
gs
mov
pop
lods
or
pusha
ljmp
ror
push
divb
fsubl
bound
aad
mov
mov
in
sub
filds
cmp
pop
cmp
jecxz
add
xchg
scas
ss
xor
mov
mov
mov
in
pop
stc
cmp
out
enter
cmpsl
fstps
push
sbb
cmpsl
loop
out
mov
adc
jne
pop
sbb
sbb
pop
mov
lock
enter
mov
popa
or
xchg
fadds
mov
mov
fmuls
scas
fstps
mov
lds
or
mov
es
mov
xor
pop
jge
addb
adc
cmp
fdiv
les
push
ja
pop
jns
outsl
cmpsb
mov
jnp
cwtl
pop
adc
dec
nop
repnz
mov
fbstp
jmp
cmp
sbb
popa
sbb
add
cmpl
jbe
movsl
jge
push
adc
movsl
mov
lcall
lahf
inc
adc
mov
sbb
adc
faddl
test
inc
loopne
ret
test
jecxz
jns
mov
ljmp
add
in
loope
cmpsl
sub
inc
fbld
inc
fiadds
frstor
aad
pop
rcrl
adc
mov
test
and
cmpsl
incb
je
jo
push
ss
ljmp
int
gs
aaa
popf
lds
cld
or
aad
mov
inc
pop
mov
cmpsb
out
mov
iret
add
in
scas
cwtl
pop
inc
mov
in
jmp
xor
leave
inc
mov
adc
cmp
add
and
inc
pop
clc
and
xchg
adc
mov
ret
int3
pop
test
ds
hlt
lcall
scas
iret
pop
ja
xrelease
xor
pop
inc
outsl
jns
jno
add
int
mov
mov
inc
add
jge
dec
mov
cmpsb
jmp
in
cmpsb
xlat
sbbb
fildll
dec
repnz
jns
rcll
fnstsw
cmp
add
mov
dec
cmc
sbb
mov
adc
push
into
lods
cmp
or
jno
xor
adc
lea
popf
push
inc
push
mov
pop
stc
jb
leave
roll
inc
jne
imul
mov
pop
add
rolb
xor
in
pushf
loopne
test
int
lock
xchg
dec
sub
repnz
ljmp
decb
or
jnp
or
cmpsl
mov
pop
push
and
movb
jb
sbb
ds
sbb
imul
test
mov
lcall
push
sti
xor
daa
test
imul
push
push
inc
aas
push
inc
test
sub
mov
mov
sub
xchg
jge
test
imul
cs
stc
repnz
loope
inc
mov
aad
dec
dec
loope
jno
jl
subl
rclb
adc
cmp
jbe
xchg
fwait
add
add
test
push
arpl
mov
sbbb
xchg
xorb
pop
add
push
xor
jo
popa
jle
jmp
xor
rcrl
sub
xor
outsb
pop
xor
cld
aaa
dec
lret
xor
in
popa
sti
scas
jnp
sarb
push
shlb
pop
clc
sub
xlat
roll
or
repnz
pop
ds
cmp
pop
inc
sbb
test
gs
push
add
es
cmp
jp
mov
stc
scas
aaa
addps
lea
pop
insl
and
addb
je
jnp
je
push
popa
dec
dec
xor
js
mov
push
and
stos
xchg
leave
ret
or
sti
inc
mov
mov
inc
push
rcl
xchg
scas
and
cli
mov
sti
xchg
cmpsl
lret
cwtl
movsl
out
movsb
lahf
xlat
in
loop
test
out
in
mov
pop
cmpsl
xor
push
fisubrl
out
mov
xchg
jb
inc
sub
out
mov
aaa
jne
mov
cli
lcall
sbb
jge
cltd
addr16
test
xchg
aas
mov
inc
jg
xchg
and
lock
xor
sbb
sub
pop
scas
xchg
ljmp
mov
aaa
insb
repnz
leave
xor
stc
inc
push
pop
in
sbb
repnz
fstps
xchg
mov
inc
push
jns
sbb
xor
insb
dec
jae
in
cmpsl
ljmp
xchg
or
add
lods
pushf
roll
loopne
sbb
xor
mov
aaa
sub
ret
sbb
dec
lahf
dec
pop
decb
ret
adc
aaa
andb
aam
notl
call
and
push
cltd
xchg
int3
in
dec
mov
int
in
and
sbb
aam
adc
sub
push
insl
sbb
orl
xchg
loopne
and
inc
pop
jmp
mov
sub
nop
das
mov
repz
xchg
lock
mov
add
jge
lods
scas
movsl
and
test
call
gs
popa
sub
pop
add
pusha
add
pop
xlat
cld
xorb
out
stc
imul
jle
inc
cmp
inc
jb
daa
enter
lret
dec
mov
dec
rcrb
rcrl
mov
mov
sub
es
mov
lea
ljmp
inc
or
fwait
loop
inc
xor
inc
add
cs
sbb
scas
pop
push
arpl
add
fisubrs
push
lahf
addr16
xchg
pop
das
or
and
fneni(8087
mov
bound
stos
mov
outsw
aas
and
and
shlb
and
cs
sub
and
popa
inc
clc
xchg
sarb
jbe
xchg
mov
jle
adc
cmp
push
in
pop
add
pop
movsl
xchg
jnp
subl
xor
leave
dec
imull
or
xchg
out
jne
call
dec
and
fnsave
fsts
sti
outsb
addr16
xor
data16
and
aaa
aad
or
fidivrs
pop
dec
ficomps
cmpsb
or
push
jmp
daa
xlat
pushf
insl
dec
repnz
in
pop
adc
mov
inc
arpl
gs
mov
push
outsl
dec
jl
pushf
lods
loope
das
outsb
inc
aad
xrelease
xchg
lret
cmp
mov
mov
and
push
dec
add
cmp
clc
in
xchg
mov
pop
mov
and
lret
mov
fcompl
xchg
in
clc
mov
scas
inc
or
push
cwtl
out
shrl
lret
mov
push
ror
jg
push
xor
pop
push
inc
enter
jp
mov
push
lcall
lret
xchg
ficoml
inc
addl
lods
pop
lret
aas
and
cs
mov
inc
pop
call
mov
inc
loop
lret
adc
sbb
sub
fcomps
ljmp
inc
dec
movsb
cs
cmovs
add
rcrb
adc
mov
cmc
or
push
in
aaa
out
and
sub
mov
xchg
lret
das
sbb
adc
aad
jl,pt
dec
pop
xchg
movsb
ja
jae
xchg
mov
cmp
and
cmp
inc
int
jbe
push
popa
dec
mov
imul
sarl
inc
or
je
xor
dec
sub
sbb
shrl
stos
enter
sub
and
cmp
xchg
xchg
xor
inc
cmp
cmpsl
pushf
xlat
sub
mov
test
outsl
mov
sbb
sbb
mov
pop
popa
ficoms
fndisi(8087
aad
addr16
dec
out
outsl
jmp
shll
xor
jo
inc
pop
mov
xor
cmp
jl
je
rcl
leave
enter
mov
adc
ds
cmp
hlt
ficoml
mov
pop
cwtl
nop
mov
inc
cmp
cltd
jne
cmp
ret
mov
ss
mov
sub
fildl
call
stc
sbb
bound
sub
push
add
dec
outsb
lahf
lcall
pusha
lock
pop
inc
add
fsubrp
inc
pop
aas
imul
cmp
or
xchg
popf
jmp
push
bound
roll
in
les
jae
push
or
mov
stc
clc
in
add
pushf
ret
fldl
pop
lret
sbb
cmp
inc
mov
fwait
mov
dec
adc
mov
cmpb
rorb
lds
cmp
std
cmp
mov
xlat
lahf
and
jns
cwtl
xchg
xchg
mov
jbe
pop
xor
mov
enter
inc
lods
inc
test
lret
je
dec
out
cs
xor
mov
pop
fidivrs
sahf
xorl
lahf
out
mov
or
jmp
popf
xor
mov
push
fs
ret
out
call
enter
leave
lcall
hlt
mov
mov
mov
sbb
xor
fprem1
xchg
imul
xchg
faddl
ret
mov
inc
mov
sti
sbb
fsubrs
into
ljmp
ret
mov
cmpsl
out
test
test
mov
lock
dec
jp
stc
loop
ficomps
jecxz
mov
mov
sbb
daa
js
aas
pop
sub
pop
adc
xchg
mov
iret
and
in
adc
mov
and
cmpsl
ljmp
ret
xchg
sub
sbb
in
jle
lcall
push
cmc
ret
es
mov
jp
jb
push
cmpsb
std
mov
push
and
popa
push
push
sub
lret
lret
fnsave
jmp
sub
mov
outsb
popf
and
adc
xlat
jg
cmp
cmp
pop
gs
adc
stos
jae
dec
pop
dec
bound
pop
pop
iret
push
in
cmpsb
cmpsl
enter
xorb
in
pop
add
in
inc
jl
jl
push
sbb
mov
ret
aad
lds
add
mov
iret
fwait
pop
pop
mov
mov
cmpsl
je
xchg
cs
and
and
adc
jp
push
insl
jg
shrl
ret
inc
in
stc
push
in
sti
sbb
jns
fldenv
inc
mov
sub
cwtl
das
pusha
syscall
mov
inc
js
push
cmp
jbe
xlat
repz
and
out
stos
add
hlt
pop
loopne
and
test
lea
bound
cli
xor
mov
sarb
insl
pop
je
push
or
fisubrl
mov
cs
add
or
push
xchg
or
xchg
test
mov
inc
jle
divl
mov
ja
out
nop
sahf
bound
or
adc
js
cmpsb
in
loop
gs
pop
mov
mov
nop
idivb
mov
cs
cmp
xchg
sti
aad
sbb
push
fcoms
xchg
ss
repnz
or
fs
push
aaa
jl
sti
sbb
fidivrl
xlat
repz
repz
lea
mov
xchg
nop
nop
adc
jo
out
ds
xchg
enter
daa
mov
mov
jp
sahf
das
das
or
xchg
xchg
shll
jmp
mov
andl
divl
movsl
dec
jmp
xchg
xchg
inc
lods
lcall
jns
imul
dec
push
mov
sbb
push
dec
insl
inc
jae
add
hlt
and
fs
out
xchg
sbb
add
cmpsl
lds
out
sbb
js
add
xchg
into
insb
icebp
pop
pop
jae
hlt
insb
pop
adcb
pop
arpl
cwtl
cmp
cmc
mov
jmp
push
cmpsb
xchg
mull
add
ja
rcll
lock
mov
push
adc
push
mov
jmp
pop
pop
dec
cmpsl
jp
mov
jb
insb
push
daa
sub
cmc
popf
daa
stos
notb
fnstenv
mov
xchg
push
push
add
rcr
xchg
xlat
mov
fwait
andb
sub
fs
rolb
pusha
es
push
or
pop
aaa
scas
jo
pop
sub
rorb
aam
and
and
push
sti
and
es
lcall
les
sahf
push
pop
iret
push
sti
xchg
stos
mov
xlat
push
adc
dec
push
mov
or
sub
das
adc
pop
je
pop
xor
pop
and
andb
cwtl
and
adc
sbb
mov
pop
pop
lds
jl
xchg
push
jge
shl
add
mov
mov
dec
add
ja
and
daa
rcrl
inc
adc
rcr
xor
or
push
jge
or
mov
pop
push
add
fidivrs
xor
hlt
sbb
xor
xor
cld
les
out
dec
ja
aas
xchg
test
into
sahf
or
ja
das
in
mov
icebp
ljmp
inc
cmc
xchg
jp
adc
dec
aas
js
out
call
xchg
aam
cmp
fidivs
cltd
pusha
cmc
push
mov
mov
popa
insl
sub
aas
repnz
clc
aam
test
sub
fmul
mov
rcrb
mov
std
lods
cwtl
jp
jecxz
xor
das
add
cmpsl
sbb
test
popf
std
sbb
dec
js
sub
mov
jp
xor
push
or
inc
add
jo
jbe,pt
std
lcall
popf
xor
sub
xorl
lea
xchg
ljmp
aaa
mov
pop
push
mov
stc
xor
fbstp
in
push
imul
and
ja
aam
xor
ja
adc
int3
mov
stc
arpl
add
pop
xor
test
leave
fucom
push
pop
mov
outsl
xchg
pop
ja
adc
mov
mov
daa
lcall
and
jle
mov
add
rcrb
pop
adc
mov
sub
ret
nop
ret
dec
jns
xchg
and
ret
imul
aad
jo
cmpsb
inc
fbstp
or
cmc
sbb
cmp
xchg
cwtl
pop
mov
inc
movsl
dec
and
add
cmp
xorb
clc
xor
scas
and
dec
test
addr16
pop
add
pop
or
or
mov
imul
test
push
jae
aaa
sub
or
mov
mov
xchg
mov
rol
inc
in
nop
push
xchg
div
pop
pop
mov
mov
rol
and
push
xlat
lock
pop
and
int
pop
adc
pop
fidivrs
in
inc
mov
adc
shll
push
clc
ficoms
sbb
std
in
mov
orb
inc
clc
sahf
js
sbb
or
cld
inc
es
adc
cltd
ja
scas
je
clc
cmp
ss
pop
sub
adc
xchg
xor
and
test
stos
movsl
fistpl
gs
pop
xchg
in
dec
xor
and
ret
or
dec
mov
fldt
and
mov
inc
shrb
pop
dec
idiv
dec
in
sub
xchg
incl
repnz
ljmp
jl
int
or
push
inc
push
andl
or
aas
adc
lea
shll
fldl
push
mov
and
int
mov
faddl
mov
jnp
mov
shlb
movsb
adc
dec
jno
mov
sbb
mov
out
pop
not
inc
popa
fstl
push
lods
xchg
sbb
add
add
pop
pop
ss
xor
xchg
dec
ret
mov
flds
jns
xchg
or
push
shrb
inc
loope
popf
mov
mov
insl
jne
dec
aas
sbb
clc
lret
cmp
and
out
or
popa
add
push
mov
loope
sub
enter
mov
dec
test
leave
dec
lahf
js
dec
xchg
cmp
cmp
sub
push
and
inc
pop
sub
push
xlat
sub
sarb
ja
pushf
lock
or
add
cli
push
push
mov
addb
push
pop
out
mov
popf
stos
aad
add
dec
xchg
test
repnz
add
mov
arpl
xchg
mov
jo
inc
loope
pop
adc
lret
mov
decl
jp
and
adc
cmpsb
out
rcl
xor
jmp
int
pop
add
out
ret
push
dec
mov
cwtl
jge
jp
or
sarl
mov
or
mov
xor
push
and
notl
call
pop
pop
imul
push
sahf
jmp
and
hlt
xchg
psubb
lret
mul
aas
es
inc
stc
icebp
adc
jmp
ret
das
loope
outsb
xchg
mov
aas
daa
shll
in
inc
xor
insl
dec
push
or
ja
rcrb
js
mov
inc
mov
ret
mov
scas
push
and
sbb
mov
inc
dec
shlb
repnz
imul
dec
xchg
or
inc
and
loop
push
cwtl
adc
fs
imul
fsub
int3
cld
xchg
xlat
inc
pushf
ds
repnz
jl
sbb
jnp,pn
jmp
sahf
repz
xchg
idivl
adc
mov
mov
or
enter
in
sbb
ljmp
cmp
lret
inc
xchg
or
xchg
jns
int
pop
push
cmpsb
xor
fdivrl
mov
imul
insl
jl
inc
imul
fsubrs
mov
adc
mov
add
in
das
stos
insb
fs
add
jge
ja
enter
insl
cmp
test
cmp
call
cs
loop
es
test
pop
push
cwtl
stos
stc
jge
mov
add
mov
and
xor
mov
adc
pop
sarb
dec
loop
test
mov
or
testl
sbb
es
daa
bound
vmovsd
arpl
mov
mov
or
or
sub
xchg
fwait
sar
cltd
sbb
or
and
outsl
adc
pushf
in
test
fadd
jp
mov
jb
std
sbb
into
mov
test
scas
push
aad
rolb
pop
xlat
stos
mov
ret
adc
mov
pop
repnz
push
and
fldt
mov
imul
sahf
mov
arpl
add
icebp
cmp
fcom
loopne
pop
scas
mov
xor
dec
ficomps
mov
ljmp
orb
or
xor
xor
call
outsl
addl
inc
and
xchg
jo
mov
pop
hlt
aas
leave
repnz
xor
mov
adc
mov
push
pop
js
jp
sbb
cli
and
push
sbb
push
push
or
mov
push
jo
mov
xor
add
jmp
mov
stc
mov
jns
pop
outsb
pusha
pop
adc
add
pop
mov
jns
jne
pop
lahf
and
aad
adc
mov
aaa
mov
mov
fwait
sbb
xor
adc
sbbl
xor
or
xlat
loope
ljmp
shll
dec
add
add
movsl
mov
repnz
stos
cwtl
arpl
lods
jge
bound
fdivs
pop
pushl
sbb
aam
mov
lcall
jb
xchg
ljmp
stc
adc
loop
das
adcb
xor
mov
lds
pushf
negl
jno
outsl
cli
cmc
cltd
scas
call
sub
mov
daa
mov
iret
push
dec
ljmp
push
xor
stos
addr16
test
out
jge
outsl
jge
dec
insb
cmc
jmp
in
fisttpll
sbb
stc
popf
mov
test
dec
push
mov
sbb
test
aas
push
cmp
dec
mov
nop
testl
jo
int3
enter
or
adc
cli
cli
sub
pop
xchg
out
add
pop
xor
push
in
pop
mov
leave
ffreep
and
call
or
aas
dec
shll
cmc
push
pop
cmp
or
add
mov
mov
push
pop
sbb
mov
adc
add
fwait
add
data16
sub
aas
jns
pop
xor
pop
imul
xchg
sbb
and
adc
pop
pop
xchg
les
inc
and
mov
push
jecxz
popa
mov
or
imul
jno
lods
fnstenv
mov
aam
mov
jno
pop
push
fstl
divps
xchg
enter
cli
jmp
cwtl
push
addr16
sbb
data16
or
xchg
fs
outsb
dec
lahf
dec
xor
rorb
mov
int3
lods
psadbw
dec
jp
enter
adc
mov
xlat
mov
pushf
test
pop
clc
mov
ja
mov
cmp
sti
ss
daa
popa
imul
sub
pop
les
cmpsb
fdivr
popf
pusha
fisttps
jl
out
imul
ljmp
pop
fisubl
aas
jne
pop
popf
adc
inc
pop
movsb
cld
leave
or
movsl
cmp
fisubs
pop
lret
hlt
mov
shlb
pusha
movl
test
xchg
pop
cmpsb
jg
adc
aas
mov
mov
loop
pop
inc
add
aas
dec
fmull
adc
mov
add
cmp
scas
mov
jle
push
enter
stos
clc
cs
mul
adc
sub
adc
and
fstpt
mov
add
sar
pop
loop
jmp
movsl
mov
inc
scas
push
roll
fsts
sti
les
mov
dec
aam
lret
cmp
sbb
or
test
lea
iret
into
rclb
shlb
sub
int
ss
cmp
jns
and
in
xchg
xor
movsb
mov
scas
sahf
jmp
pop
jbe
xchg
jo
cmovo
sub
gs
mov
loope
dec
leave
and
loop
int
adc
cld
and
testl
mov
imul
es
adcb
in
mov
loope
sbb
insb
test
and
lea
jne
cvtps2pd
inc
fs
popf
icebp
ret
ds
mov
mov
movsb
je
les
xlat
lcall
mov
cli
push
dec
add
test
or
push
inc
cmp
adc
mov
cmp
push
or
dec
dec
xor
sub
hlt
mov
mov
stos
dec
testb
pop
les
hlt
gs
pop
cli
nop
and
hlt
andb
mov
add
xor
popa
lret
lret
sub
jbe
jge
xchg
mov
dec
xor
cmpsb
mov
aas
push
sahf
lock
adc
push
lods
xchg
push
pop
inc
loop
add
sti
call
sub
repnz
jnp
inc
cmc
mov
jmp
add
shlb
dec
stos
enter
mov
xor
mov
xchg
out
xor
jl
jns
or
mov
jp
xchg
repnz
lret
popa
xor
popa
cld
mov
stos
mov
jnp
sub
stos
sub
mulb
or
mov
mov
cwtl
push
mov
je
repnz
pushf
mov
add
pop
adcl
stos
xchg
out
pop
pop
pop
push
adcb
aad
ja
pop
push
push
mov
or
add
ds
out
pop
sub
pushf
sbbl
scas
std
movsl
imul
xor
movsb
jge
sbb
xchg
ficompl
mov
push
cld
pop
stc
dec
push
lcall
inc
cmp
fsts
cmp
pop
push
add
inc
call
icebp
push
sbbb
xchg
cmp
in
mov
or
sbb
inc
and
mov
cmp
mov
out
jo
and
inc
mov
cmp
shr
pop
stos
andl
ret
fwait
mov
push
and
in
sbbb
xchg
popf
mov
xchg
jecxz
and
and
movsb
mov
xor
pop
mov
insl
add
sub
and
rclb
sti
add
fstp
jp
jns
mov
cmp
add
sarb
sbb
icebp
sub
push
mov
xchg
js
leave
cld
cmp
into
cmc
inc
in
mov
mov
jecxz
or
repz
mov
sbb
sbb
xchg
adcl
adc
hlt
cwtl
cli
add
sarl
andl
test
int
add
mov
jne
outsb
dec
mov
inc
ror
std
mov
mov
sub
lods
fdivrs
pop
mov
sahf
xchg
repnz
sbb
cmp
cmp
sub
dec
fwait
dec
mov
pop
in
mov
lret
scas
daa
dec
cltd
scas
xchg
pop
mov
enter
inc
mov
push
add
mov
arpl
adc
vsqrtps
mov
sub
pop
xchg
aas
or
jo
sbb
mov
ds
xchg
xchg
push
mov
push
xchg
lock
subl
fcmove
sbbb
rolb
hlt
dec
or
loope
pand
xor
aad
orl
dec
mov
sub
in
xor
paddsb
mov
jecxz
ds
jl
push
jns
loop
subb
sbb
and
mov
stc
iret
xor
std
sub
orl
cltd
jne
adc
cmp
fsub
outsl
push
ljmp
mov
shrl
aaa
decl
nop
cmp
inc
push
ja
cli
out
outsl
mov
pop
ret
or
mov
pop
mov
jmp
sub
addr16
or
or
das
jp
mov
mov
pop
lds
mov
xor
mov
push
push
dec
xlat
xchg
hlt
movsb
add
add
push
xor
das
addb
int3
gs
fdivl
jno
aam
jg
ret
sbb
pushw
jae
push
push
stos
rcr
test
jno
pop
xor
out
xorl
stos
mov
out
xorb
ljmp
inc
negb
or
xor
add
jmp
aad
data16
clc
hlt
add
cmp
sar
mov
sbb
mov
orb
dec
js
stos
stc
xor
inc
mov
jo
mov
insb
xchg
inc
mov
negl
dec
xchg
out
sbb
lods
jmp
test
nop
fwait
xchg
pop
xchg
push
push
mov
testb
jle
popf
mov
std
push
mov
aad
in
mov
add
lcall
push
movsl
dec
xor
das
pop
sub
mov
xchg
or
scas
nop
adc
std
frstpm(287
sbb
cwtl
ficoml
es
or
and
lret
or
dec
cld
sbb
lcall
mov
lods
stos
inc
icebp
stos
mov
fldl
into
sub
dec
sbb
icebp
or
xchg
cwtl
sbb
push
ret
mov
inc
dec
jns
pop
test
push
mov
push
sub
mov
cmp
das
push
fstps
mov
mov
cwtl
movsb
push
lret
push
movsb
cld
push
outsl
push
pop
stos
insb
dec
ss
js
in
scas
mov
stos
cmpl
ss
add
out
pop
in
test
arpl
fistps
das
push
lahf
xchg
xor
rcr
mov
mov
out
dec
movsb
rcl
leave
in
rorb
clc
xchg
xor
pop
add
xor
scas
mov
and
in
adc
push
sub
jnp
insl
mov
fmull
push
insl
sub
aam
add
je
dec
lock
stos
mov
pop
mov
ljmp
in
mov
pop
push
lods
in
mov
jmp
lock
inc
popf
jg
xlat
stos
push
xorb
lock
fwait
pop
divl
mov
cmp
in
add
push
paddd
or
shll
or
cld
test
int3
jb
mov
mov
push
lcall
xchg
arpl
jo
xchg
jle
imul
lds
mov
inc
cmp
mov
pusha
lea
cmp
lods
jecxz
std
jecxz
add
mov
mov
inc
arpl
mov
mov
lods
sub
pop
les
mov
xchg
mov
sub
push
mov
test
testb
scas
insl
mov
lds
xor
pop
dec
mov
mov
xor
loopne
dec
std
push
xor
loop
into
lock
jl
add
addb
mov
jno
xchg
sbb
push
mov
mov
or
dec
pop
les
repz
ljmp
movsb
mov
sbb
push
push
pushf
sbb
mov
movb
in
cli
jmp
jmp
dec
mov
scas
or
aas
push
cs
adc
popa
mov
jecxz
pop
lahf
subl
imul
daa
fildl
xchg
adc
mov
push
inc
shrb
outsl
shlb
pop
sub
call
lahf
fistps
push
push
ja
mov
das
fcoml
adcl
and
imul
lods
sbb
shr
cmpsl
sbb
xchg
addb
call
push
mov
aas
outsb
sbb
lods
icebp
add
mov
call
dec
xor
aaa
mov
dec
shr
arpl
lret
lods
mov
add
pushf
xor
lods
xchg
dec
and
dec
mov
adc
push
cli
mov
or
cmp
jnp
or
mov
sbb
sub
daa
jecxz
cmp
xor
mov
loop
mov
ja
pushl
bound
lret
mov
jecxz
jno
pop
sub
sub
dec
cmp
sub
popa
shl
lret
fstpt
sub
push
push
cltd
sub
fisubrs
cld
std
jbe
jb
xor
push
sbbl
dec
aad
mov
push
sub
psrlq
cmp
xor
add
leave
mov
insl
jmp
aam
sarl
rcr
jle
add
cmp
mov
jmp
push
rcrl
fdivrs
inc
jnp
lret
jmp
out
and
jge
jbe
jne
mov
pop
pop
loop
mov
add
call
ret
add
adc
cmc
fnstenv
jg
jbe
xchg
scas
push
mulb
jmp
rorb
in
dec
jno
push
sti
arpl
xchg
dec
shll
in
call
mov
negb
addr16
testl
pop
mov
das
leave
adc
loopne
nop
xchg
lods
enter
pop
andb
pop
nop
fs
xchg
int
nop
sbb
in
and
in
pop
out
sbb
repz
xchg
sub
insl
ljmp
std
cwtl
xchg
into
iret
sbb
sarl
jb
and
inc
jne
lret
xchg
xor
and
xchg
aas
je
in
pusha
xchg
negl
aam
mov
dec
push
das
addr16
cmc
pop
sbbl
scas
push
jecxz
jbe
mov
sbb
mov
js
fildll
scas
js
sub
sahf
jg
pushf
and
scas
pop
pop
adc
pushf
pop
rcl
movsb
inc
sub
inc
pop
loop
sti
jno
aaa
sahf
push
sub
lds
sub
inc
mov
cmp
loope
mov
sar
pop
push
call
add
fdivl
push
imul
push
and
mov
popa
sti
das
xor
xchg
outsl
imull
cmpsb
flds
sahf
outsl
insl
pushf
jnp
imull
dec
mov
mov
daa
lret
mov
in
in
jns
lock
dec
add
add
in
push
lods
lret
leave
arpl
outsl
add
divl
adc
jne
or
push
xor
xchg
and
dec
cmp
scas
jns
pop
in
sub
add
jnp
outsl
ficompl
and
enter
das
sbb
mov
xor
lcall
divl
outsb
pop
cld
jp
jecxz
xchg
into
aas
mov
leave
aam
fwait
xchg
mov
movsb
lahf
out
push
jle
jae
cld
xor
outsl
xchg
pop
push
mov
fld
mov
mov
inc
lahf
adc
lret
outsb
pop
ret
sbb
inc
add
push
dec
aas
cwtl
ljmp
aas
push
mov
shrl
and
inc
jmp
adc
mov
xor
and
les
fmulp
and
out
jbe
mov
sbb
jl
mov
dec
inc
ljmp
enter
sub
inc
pop
add
pop
aas
rcll
mov
mov
fwait
mov
in
bound
rcrb
loopne
xor
arpl
pushfw
sbb
mov
jmp
adc
popf
lea
fmuls
mov
sub
iret
sti
adc
stos
lahf
sub
mov
in
addr16
rol
ljmp
jae
repnz
xor
mov
mov
shrb
sub
mov
xorb
outsb
lcall
outsb
sub
add
and
in
adc
sbb
mov
push
ror
and
cmc
push
push
in
jge
loopne
rcl
cli
mov
fdiv
rol
pop
sti
push
inc
int
adc
ficompl
aad
sub
and
ret
or
inc
push
std
xchg
lea
loopne
push
adc
adc
mov
scas
push
jmp
stc
add
mov
andb
push
cmp
pop
repnz
and
xchg
imull
xchg
jae
rcrl
aaa
mov
data16
mov
jne
in
fldt
inc
dec
jae
movsl
mov
test
in
xchg
test
dec
cwtl
fsubl
mov
mov
sahf
sbb
ret
sbb
sbb
xor
stos
andb
sarl
push
xor
sbb
iret
sbb
sarb
mov
outsb
xchg
fists
mov
cmpsb
push
pop
out
dec
stc
std
or
inc
push
dec
out
pop
push
lcall
js
leave
arpl
sub
ja
xchg
nop
and
popa
popa
loop
repz
mov
adc
mov
mov
xor
nop
mov
jmp
test
bound
or
cld
sbb
iret
xor
cmpsb
mov
push
lret
mov
and
negl
lods
inc
push
into
xchg
sarl
iret
int3
pop
sti
sbb
out
mov
inc
pop
sub
xlat
xor
loopne
into
cmpsb
xlat
leave
imul
mul
stc
and
cwtl
clc
ja
jmp
jo
adc
es
negb
push
aad
dec
add
dec
push
lahf
push
sub
pusha
sub
pop
out
mov
mov
shr
call
push
jno
and
pop
stc
stos
xor
fists
dec
xor
cmp
cld
jbe
fs
aas
mov
imull
jno
jmp
cmpsb
jecxz
rcl
jmp
sti
xor
add
shlb
lds
jnp
inc
jmp
imul
xor
ljmp
dec
inc
or
add
repnz
cmc
inc
jg
mov
aad
jg
lea
adc
out
lock
mov
les
sub
cld
dec
add
xor
or
aaa
into
mov
inc
mov
jae
enter
dec
dec
sub
jns
lods
inc
cmp
iret
pop
and
fisubrs
aam
adc
shlb
cmp
mov
ficompl
cmpl
mov
or
lods
sbb
jno
insl
xor
lods
es
mov
lock
cmp
dec
or
fistpl
cmp
and
inc
test
cmpsl
or
jmp
aaa
cmpsb
jg
push
test
sub
dec
and
test
in
dec
in
push
xor
mov
loopne
cmp
mov
pusha
jne
pop
lods
lods
fidivl
push
pop
inc
fsubrl
outsl
aas
out
mov
xor
dec
sbb
mov
pop
sub
out
mov
test
sub
iret
ss
mov
add
mov
arpl
into
clc
mov
int
lahf
push
inc
out
pop
rolb
in
ret
sub
pop
test
test
cwtl
or
push
icebp
mov
jns
push
jb
push
jge
pop
or
cld
dec
xor
jl
mov
fadd
ss
gs
xor
xchg
sub
xchg
test
out
scas
sti
std
pop
mov
push
push
test
out
dec
ret
pop
sub
mov
push
xor
scas
jp
dec
test
outsb
popf
fldl
shl
aaa
outsb
dec
lods
xchg
pusha
push
call
loop
mov
cmp
fwait
notl
push
mov
mov
addl
mov
fwait
dec
xchg
imul
notl
push
in
shl
push
mov
sti
dec
dec
cmc
mov
in
in
lea
test
notb
dec
jbe
push
fwait
mov
icebp
push
and
sbb
mov
add
and
add
fdiv
and
imul
sbb
xchg
je
and
jecxz
xor
pop
enter
xor
push
push
add
xlat
in
and
fcmovnu
stc
xor
mov
aad
jg
mov
or
mov
lds
cmpsl
pop
dec
xor
mov
dec
pop
ja
jnp
sbb
aam
pop
shrl
adc
pop
xor
nop
enter
movsb
call
lds
imul
sahf
shrb
mov
adcl
shll
ret
mov
adc
pop
clc
or
mov
mov
lcall
lret
push
mov
add
ret
jo
mov
dec
scas
inc
dec
sbb
pop
mov
adc
push
prefetcht0
scas
bsr
jmp
gs
xchg
dec
or
divb
pop
mov
cmp
lods
sub
nop
xchg
bound
push
cmp
adc
pushf
rcll
rclb
xlat
out
push
xchg
jb
sarl
add
adc
mov
lods
leave
dec
nop
in
outsl
clc
add
sbb
sub
test
push
xor
test
into
push
pop
shlb
sbb
dec
mov
mov
cmpsl
out
aad
add
fildl
fstps
icebp
push
in
pop
fstpl
push
subb
bound
ret
jmp
fcmovnb
mov
sbb
lock
xchg
lods
sbb
pop
ljmp
sub
and
cmp
outsb
xor
adc
scas
out
cmp
add
rcr
leave
xchg
add
nop
adc
jmp
adc
sahf
in
and
add
pop
aas
ret
xorb
and
jo
cld
pushl
iret
jecxz
lahf
dec
mov
jg
icebp
push
and
mov
stos
and
sub
aaa
mov
in
jge
mov
cmc
adc
fnstcw
loope
lcall
scas
sbb
nop
lahf
shl
cmpsl
cli
adc
pop
or
mov
xor
mov
lds
aas
mov
jecxz
xor
ffreep
push
jl
dec
cmp
nop
jp
jno
addr16
in
sub
jo
adc
jae
in
nop
xchg
or
clc
mov
jns
push
loop
adcb
cmp
fdiv
pop
adc
mov
mov
cmpsl
dec
sbb
dec
cwtl
les
data16
pop
jne
mov
roll
dec
inc
mov
cmp
adc
insb
xchg
mov
leave
dec
jae
aam
xchg
in
outsb
jb
jno
push
lret
arpl
fidivs
addb
sub
push
push
lods
sub
rolb
add
add
aas
nop
inc
and
xchg
pop
cmp
push
adc
push
xchg
inc
and
fadds
adc
and
aaa
sbb
std
jge
mov
shrb
pop
sbb
es
dec
shrl
xor
xchg
cs
add
pop
dec
cmc
mov
or
mov
xchg
shl
loopne
dec
or
daa
aam
and
mov
popa
fbld
xor
dec
repz
mov
pop
test
fcomi
push
jle
or
push
mov
negb
mov
pop
jmp
jb
popf
fcomps
jne
int3
notb
pop
divb
sbb
rcl
inc
insb
cmpsb
int
mov
stos
rep
lds
daa
and
fs
xor
mov
mov
mov
sub
pop
xchg
out
in
xor
fdivrs
rcr
dec
mov
and
lcall
jmp
fsubl
dec
movsb
jns
add
xchg
jecxz
jns
movsb
inc
mov
rorl
mov
jb
popl
push
jp
mov
pop
sbb
push
cmp
mov
jecxz
inc
fisubl
pop
loopne
dec
inc
mov
arpl
popf
inc
mov
add
in
fstps
jb
pop
mov
mov
adc
stos
out
push
mov
xchg
bound
xorl
inc
outsb
fistl
in
pop
xchg
in
mov
rolb
mov
insl
push
adc
sbb
outsl
clc
cmpsl
jmp
shlb
pop
mov
scas
in
iret
xchg
aam
aaa
and
sub
in
adc
dec
mov
or
and
imul
jle
imul
xor
gs
push
cwtl
test
cmp
daa
adc
add
dec
sub
dec
sub
cmp
mov
push
aam
rorl
mov
movb
xchg
repz
push
mov
push
mov
jmp
add
int3
jecxz
sub
js
cmp
mov
xchg
cs
push
out
add
mov
dec
fcoms
popa
sbb
or
xor
mov
or
inc
loop
cltd
out
test
mov
xchg
dec
inc
push
out
and
or
js
leave
pop
test
dec
pop
mov
ss
adc
dec
mov
cwtl
add
inc
cmp
mov
insb
cld
shlb
pop
xchg
cmp
push
inc
and
lock
xchg
into
xchg
jp
mov
add
jecxz
sarb
mov
pop
cmc
in
xor
jle
xchg
ljmp
jbe
in
aad
sarb
cld
mov
xor
pop
mov
stos
shlb
and
cmpb
mov
jle
add
lock
cmp
insl
fmull
xchg
jo
xchg
cmc
push
inc
fwait
insb
jmp
pop
sub
decb
sub
cld
or
dec
xlat
mov
adc
into
mov
mov
pop
nop
stc
loope
cmp
mov
outsb
dec
jno
call
fwait
or
mov
adc
sbbb
ret
lahf
fldenv
mov
mov
jae
cltd
in
or
or
out
loop
popf
movsb
push
int
dec
icebp
aaa
or
adc
sbb
enter
enter
negb
int
out
add
dec
mov
xchg
mov
mov
in
dec
in
lods
jnp
mov
mov
test
iret
sbb
out
lock
sbb
inc
xor
sub
gs
mov
mov
lock
and
int
aam
aam
sub
shrl
shlb
mov
pop
repz
call
icebp
add
dec
and
movsl
popa
mov
data16
sub
stos
lods
push
xor
rcr
mov
ss
xchg
cli
in
nop
sarb
fstps
loope
stos
and
mov
fdivr
test
leave
inc
outsb
push
fwait
es
rol
mov
adcb
xchg
and
shrb
loopne
fsubs
sub
es
xchg
fiadds
mov
and
lock
hlt
push
push
leave
repz
sub
mov
mov
adc
les
xlat
cltd
jae
xor
hlt
fistpll
addr16
loop
jmp
and
mov
stc
and
adc
es
aam
xchg
pop
js
enter
sub
push
sub
int3
push
mov
dec
je
xor
rcrb
mov
movsb
repz
daa
sub
imul
xor
and
add
xor
mov
mov
repz
stc
and
mov
push
fucom
cmp
enter
adc
xchg
pusha
loope
add
or
jns
fistpll
hlt
or
sub
fcomps
scas
test
repz
pop
int
or
imul
mov
xorl
mov
test
push
adc
aam
pusha
mov
jne
mov
adc
and
enter
js
pop
mov
pop
dec
fildll
js
xchg
push
cmpb
inc
xlat
ljmp
movsl
push
addr16
push
cmp
cmp
in
es
out
addr16
dec
mov
das
or
daa
test
inc
or
inc
dec
sub
subl
in
inc
jg
xchg
daa
mov
adc
jg
repz
into
adc
mov
ljmp
push
sahf
loop
xchg
mov
xchg
inc
sub
shll
ljmp
push
xchg
ljmp
jns
xor
pushl
inc
push
test
xchg
or
cmp
mov
arpl
jmp
sbb
ficomps
xlat
sti
fcomps
loopne
popa
scas
inc
je
sub
gs
xchg
cmp
imul
jne
mov
pop
mov
ret
aam
adc
mov
enter
and
scas
push
test
iret
push
outsb
lret
sub
push
push
and
mov
movsl
shr
outsl
aas
inc
cli
pop
jmp
add
jo
ja
mov
fdivrs
fdivs
jg
loop
xchg
adc
mov
sbb
mov
ret
in
add
xor
mov
sub
enter
mov
sub
sub
pusha
xchg
cltd
aam
mov
sub
aaa
xchg
sti
test
int3
xor
mov
mov
fdivl
es
mov
jnp
addb
jp
sbb
cwtl
xchg
add
mov
shrb
sub
adc
je
rclb
inc
lahf
ss
popf
icebp
inc
insl
sbb
or
test
sti
fsubs
pop
mov
mov
mov
repnz
pop
stc
jmp
ret
add
dec
imul
test
adc
jmp
push
push
jno
pop
push
mov
sub
and
insl
std
dec
jne
lock
rclb
dec
inc
nop
pop
mov
outsb
fcoms
in
repnz
fwait
sbb
adc
or
pushf
pop
pop
dec
hlt
rol
and
out
std
lcall
push
insb
aas
mov
cmpb
pop
dec
xchg
push
mov
xchg
sbb
or
stos
mov
push
add
lea
aaa
loopne
push
mull
jl
in
add
xchg
faddl
call
mov
dec
in
mov
fistl
dec
mov
cmc
cmc
mov
sbb
pop
mov
lock
in
daa
sbb
mov
stos
fbstp
add
cwtl
mov
dec
mov
aaa
clc
out
sub
out
stc
insb
cmpb
cmpsb
fmull
ss
roll
aaa
jecxz
repz
jle
lds
ret
adc
fsubrs
mov
pop
sbb
iret
leave
les
push
das
imul
orl
dec
sbb
cmp
sbb
outsb
hlt
inc
adc
aaa
popa
jl
inc
pop
cmp
cmp
cmp
movq
and
push
fisubrs
shlb
pusha
fisubrs
fnsave
inc
sbb
xor
loope
inc
cmp
scas
dec
pop
ss
sbb
cwtl
pop
insb
cld
sub
dec
jnp
pop
sbb
ss
sub
aam
push
int3
lods
lods
push
jns
nop
add
fnstcw
cmp
movsl
jns
popf
pusha
stos
rcrl
mov
ficoms
jo
aad
jb
adc
nop
das
sub
fs
ficomps
jle
sarb
lea
xor
jl
mov
adc
sub
push
popa
pop
push
outsl
xchg
and
mov
fimull
mov
mov
cmc
fwait
jns
mov
cli
in
repnz
daa
rclb
ja
jecxz
xchg
mov
leave
inc
jl
mov
xor
fcomps
scas
or
negl
xchg
lret
jbe
push
adc
fcomps
push
popa
mov
sub
fwait
aam
fldenv
pop
pop
mov
arpl
sub
cmp
dec
mov
stos
aam
imul
pop
jp
int3
cmc
dec
xlat
cli
pop
mov
jne
in
outsb
ss
mov
iret
xchg
xor
jne
mov
sub
inc
inc
cwtl
lret
jae
xlat
in
mov
mov
xor
lods
aad
inc
jecxz
sbb
mov
into
mov
test
push
jmp
sbb
arpl
insb
sahf
scas
les
lret
xchg
lret
je
int
or
ja
mov
push
mov
inc
dec
lods
das
nop
lret
sub
adc
out
and
and
push
pop
mov
outsl
or
aaa
pop
mov
dec
mov
adc
aam
inc
fstpl
dec
cmp
add
cmp
xor
repz
xchg
sub
hlt
out
js
inc
sbb
stos
sub
cmpsl
insb
mov
cli
mov
cmp
adc
scas
cmp
lahf
aam
bound
jmp
mov
jmp
scas
fldt
daa
adc
sbb
mov
icebp
sahf
dec
imull
add
adc
les
popf
fs
popa
test
call
mov
add
inc
repnz
ds
pop
mov
cmp
pusha
inc
dec
lods
jns
cwtl
lods
test
lods
data16
mov
xchg
inc
les
out
jne
das
mov
mov
sub
fmull
xchg
sbb
adc
jg
mov
pop
cwtl
js
sub
mov
sub
cwtl
push
andl
xor
mov
lock
test
pop
stc
sub
cmpsl
jge,pn
mov
xchg
imul
arpl
das
mov
inc
mov
flds
sbb
xchg
or
pusha
testl
je
fcomps
add
jl
imul
loope
jnp
insl
out
stos
xchg
inc
test
mov
andl
push
movsl
das
dec
lcall
lcall
xchg
inc
xchg
inc
or
mov
jno
mov
push
movsb
std
mov
mov
adc
cmpsb
push
lret
jnp
jp
int
out
xor
xchg
cmp
lahf
pop
fsubp
cmpsb
push
call
push
int3
inc
mov
mov
loop
nop
int3
sub
and
cltd
inc
aaa
fstpt
pop
xor
rolb
jmp
cmpl
inc
pop
int3
fbld
push
jae
fidivl
stos
add
sahf
add
xor
out
out
das
fwait
inc
jecxz
push
test
loop
imul
jge
pusha
lahf
or
dec
lds
xor
test
nop
sbb
pop
test
or
popf
mov
push
mov
aas
int3
mov
sbb
mov
fnstsw
mov
jmp
add
dec
insl
rclb
lock
jb
repnz
jae
push
rclb
stos
popa
bound
test
mov
cs
and
lcall
jecxz
movsb
data16
les
aas
lret
or
add
dec
mov
stos
mov
pop
mov
jmp
fnstsw
dec
sbb
xchg
adc
push
movsl
adc
mov
adc
fs
cmp
shrb
pushf
xor
sub
into
adcb
inc
ret
ljmp
hlt
mov
adc
aam
mov
aaa
aas
dec
loop
test
adc
sub
or
jo
lods
lods
stos
jl
push
idivl
int
adc
sbb
sub
pop
pop
lock
or
mov
lahf
ljmp
stos
hlt
mov
sbb
adc
or
xor
or
cwtl
sbb
mov
cltd
out
rcrb
sbb
aaa
lret
pop
push
fbld
xchg
pop
arpl
out
mov
ret
movsb
inc
call
mov
fistpl
pop
push
or
fisubs
add
outsl
xlat
inc
movb
pop
add
pop
sarb
std
arpl
pop
in
je
jg
lahf
clc
insb
in
test
js
or
insb
pop
xchg
and
sbb
mov
ret
xchg
jg
daa
scas
or
add
aas
sub
mov
andb
xor
mov
and
jns
ss
push
and
int3
mov
iret
aas
mov
outsl
pop
lea
ja
divb
ficomps
stos
repnz
fwait
pop
jmp
adc
aad
xchg
mov
push
fisttpl
js
roll
insl
hlt
jl
xorb
sti
xor
addr16
push
pcmpeqd
aas
sub
push
dec
sub
jge
or
imul
sub
cmp
cld
and
cld
pop
jp
mov
cmpsl
movsb
sbb
cmp
aad
mov
test
pop
lock
call
push
cmp
gs
push
mov
sbb
inc
pop
lods
mov
jg
adc
lahf
mov
or
push
jle
xor
in
daa
ret
mov
ficomps
test
call
daa
loopne
xor
sub
and
roll
cmc
jb
mov
push
pop
adc
inc
mov
add
std
dec
insb
pop
int3
aam
ficompl
test
push
sub
push
es
xor
dec
mov
jmp
sahf
imul
inc
push
cwtl
clc
cltd
fistpll
bound
aad
jns
xor
xchg
fdivrl
popf
mov
ljmp
sub
inc
mov
adc
repnz
sub
test
xchg
cmp
fadds
stc
pop
ja
pop
aam
rclb
sub
inc
sub
xor
adc
sbb
scas
mov
xchg
pop
loopne
sub
aaa
jl
and
mov
lcall
test
fsts
adc
pop
cli
stos
xchg
sbb
addl
push
jne
sar
push
mov
movsl
std
mov
outsl
cmp
scas
loope
jg
xchg
icebp
pop
pop
in
iret
xchg
clc
xchg
add
dec
dec
xchg
xor
jne
test
and
les
cmp
jmp
repz
aaa
stos
movsb
insl
or
les
mov
push
lret
js
ja
enter
sub
adc
stos
or
sbb
outsl
fwait
scas
jno
pusha
sbb
cmp
pop
cmpsb
adc
or
cmp
lea
inc
test
add
fnstsw
btc
fbstp
outsl
shrl
sub
mov
dec
aam
test
add
cs
xor
push
adc
jmp
pushf
jmp
orb
pop
out
push
or
idivl
mov
fcmovnu
gs
push
fcomps
mov
in
stos
sbb
pop
lret
push
push
jle
insb
lret
xchg
and
xor
out
push
mov
out
mov
xchg
addr16
mov
icebp
arpl
fs
or
lock
push
xchg
gs
cmp
fcomp
insl
lret
mov
inc
lea
das
out
mov
adc
es
stc
jne
cltd
push
stos
mov
cmp
stos
dec
mov
inc
popa
sub
mov
jmp
pushf
dec
mov
xchg
orb
dec
rorl
stos
pop
or
rol
into
sub
adc
and
lock
sbb
nop
mov
jno
fcompl
cmp
test
push
jl
fdivrp
cmp
add
and
outsl
xchg
xchg
inc
adc
hlt
stos
fs
sbb
je
das
out
arpl
movsb
in
push
lret
xor
hlt
lock
dec
xor
sub
xlat
lods
test
fldt
sub
add
notl
mov
fcompl
xchg
fs
push
scas
mov
inc
inc
lcall
adc
dec
mov
aad
icebp
js
push
dec
int3
or
sbb
sbb
div
adc
scas
mov
jl
sarl
sti
sbb
jmp
scas
call
xchg
and
popa
sbb
je
jae
imul
imul
sahf
adc
jns
clc
into
adc
or
mov
push
or
nop
cmp
mov
jl
fmul
orl
notb
pop
mov
inc
inc
mov
jge
mov
jmp
sub
das
pop
push
and
jl
or
inc
scas
sbb
push
mov
aaa
outsb
das
out
push
pop
mov
fstpt
leave
add
push
out
ljmp
scas
or
mov
addr16
cmc
les
xchg
test
jae
push
sub
pushl
gs
loope
mov
xchg
int
pop
or
push
les
xchg
cs
jle
adc
js
push
fxch
inc
popf
mov
lcall
sub
aaa
leave
cld
xor
ficoms
or
test
xchg
fsubrs
pusha
add
popf
insl
jnp
test
jns
out
es
mov
inc
push
xor
daa
test
add
sub
scas
sbb
fsubr
mov
sbb
imul
pop
int3
pop
dec
xchg
mov
roll
push
idivb
shrb
cwtl
xchg
push
enter
out
push
and
fcmovnb
stos
cmp
pop
pop
lock
push
adc
mov
sub
rcrl
popf
inc
pop
push
pushf
inc
xchg
movsb
stos
hlt
or
push
inc
pop
pop
fwait
gs
inc
mov
lods
mov
cs
mov
cld
pop
add
fcomip
lock
cmp
or
mov
imul
dec
push
adc
pop
lods
insb
fistps
inc
adc
sub
lock
dec
push
sti
inc
in
repnz
sub
xor
mov
mov
xor
pop
aad
xor
out
iret
popf
mov
pusha
jbe
arpl
or
and
xchg
in
je
cwtl
dec
pushf
push
jge
idivl
xchg
cmc
repz
fcoms
pusha
xchg
xor
js
sbb
xor
in
adc
lret
inc
leave
sbb
push
js
xchg
jnp
mov
mov
add
insb
roll
mov
jp
dec
xlat
push
cltd
jns
mov
arpl
subb
xor
sbb
jle
push
sbb
and
xor
imulb
lds
add
push
je
mov
out
mov
mov
lea
jbe
sub
mov
cltd
nop
daa
inc
xor
fdivs
dec
jno
enter
or
ljmp
mov
pop
popf
mov
shll
ret
adc
in
in
dec
shrl
sub
dec
les
cmc
ss
test
divl
pop
sub
std
and
jmp
push
jnp
push
out
cmpsl
xchg
mov
mov
mov
loop
cmpsb
mov
xchg
mov
xchg
repz
dec
adc
mov
rolb
adc
negl
insb
adcl
mov
add
xchg
push
xor
out
popa
and
push
call
addr16
push
push
leave
xor
daa
imul
or
jbe
dec
dec
sub
jp
adc
js,pn
stc
shll
xchg
jg
mov
sbb
ficomps
and
movsl
jp
hlt
cmpsl
inc
cli
inc
ds
and
imul
add
add
std
push
dec
cmc
xchg
fwait
push
mov
cmpsl
add
xor
sahf
xor
das
push
jo
or
adc
adc
inc
or
mov
mov
stos
daa
dec
jp
cmp
lret
xor
push
repnz
xor
dec
sub
sbb
mov
sub
cld
iret
test
mov
int
jle
subl
in
aaa
add
shrb
mov
jecxz
jae
addl
adcb
es
in
add
add
jle
hlt
sub
lods
loope
sbb
adc
and
xchg
push
aas
inc
add
xor
cs
rcrl
cwtl
push
pushf
or
rcll
mov
cmp
aaa
dec
loope
inc
sub
pop
lcall
lods
shlb
or
or
in
ret
mov
mov
mov
mov
mov
ret
dec
jecxz
shl
sbb
dec
je
sbb
sbb
mov
sub
adc
cmpsl
xchg
leave
xchg
aam
mov
stos
hlt
dec
enter
pop
cmp
stc
xor
or
sarl
mov
mov
mov
movsb
in
dec
hlt
xor
sti
xchg
fs
xor
jne
movsl
cld
in
lds
pop
xchg
sbb
repnz
decb
cmpsb
cmpsl
lcall
xchg
add
icebp
push
je
adc
scas
loopne
xor
jo
mov
jnp
int3
or
in
insb
orl
lods
jg
or
mov
call
or
lods
out
loop
pop
int
cmp
jno
into
and
out
movsb
lock
mov
dec
clc
into
adc
out
jl
push
rorl
in
mov
data16
cmp
sub
aad
dec
add
xchg
js
rcr
aam
insl
cwtl
inc
jno
loope
gs
mov
adcb
out
or
mov
shll
mov
inc
sub
cmpsl
or
mov
cld
leave
pop
pop
out
insb
aam
scas
xchg
sbbl
jecxz
shl
mov
xor
imul
ret
popf
cltd
or
cmp
xor
nop
pop
and
jne
push
rorl
push
loopne
and
sti
push
jo
lahf
mov
aad
jb
add
cltd
js
in
add
push
call
jge
jo
lret
xor
insb
xchg
dec
lock
out
and
sti
xchg
int
jle
mov
ljmp
aad
push
sbb
fsub
mov
inc
fnstcw
hlt
cmpsl
aas
out
xchg
xor
inc
mov
sub
loopne
xchg
xchg
inc
outsl
adc
sbb
mov
out
inc
xchg
es
push
mov
inc
mull
addl
mov
imul
popl
pop
es
add
sbb
cld
nop
inc
mov
sub
xchg
add
in
jl
adc
xor
mov
push
xor
fmuls
push
mov
cmc
pop
xchg
cmp
data16
dec
stos
mov
jl
outsl
lahf
lods
jb
and
pop
add
pop
in
mov
dec
dec
test
mov
adc
xchg
scas
fsubs
iret
cwtl
and
mov
sbb
imul
xor
xor
jae
je
inc
andb
movsl
outsl
xchg
push
fstpt
cs
jno
je
sahf
mov
mov
das
xlat
call
push
stos
and
sub
sbb
mov
sub
call
adc
push
out
sub
fstpt
out
ljmp
adc
jl
das
ss
ljmp
push
sbb
movsl
jno
fimull
loop
push
lret
dec
loope
mov
enter
cmp
or
test
and
xor
pop
sbb
lahf
mov
repz
lret
lcall
pop
fyl2xp1
push
xchg
xchg
jo
mov
lods
insl
cmp
jo
leave
jecxz
fdivrp
testb
or
cmp
dec
loope
sbb
loop
cmp
retw
sarb
je
mov
mov
xor
aam
mov
mov
push
adc
or
pop
aas
cs
es
stos
ret
gs
or
xchg
adc
mov
jae
sarl
sbb
out
fistps
push
shlb
stos
ja
les
push
inc
lret
lods
dec
push
sbb
push
inc
jg
arpl
xchg
shl
shll
push
mov
sahf
dec
adc
xchg
cs
leave
popf
pop
cmp
and
push
iret
mov
or
cmpsl
sub
test
sbbb
mov
jae
dec
jl
loopne
jb
mov
adc
fadds
enter
aam
cmpsl
incb
sbb
push
inc
jp
fsubl
adc
pop
test
aad
sub
scas
add
out
push
mov
fcomp
jle
mov
mov
sbb
add
xchg
and
sbb
sub
cmpsb
das
lods
std
sbb
cmp
jl
xchg
jp
test
inc
mov
xchg
cmp
jecxz
mov
outsl
adc
push
repz
clc
dec
add
jae
xchg
das
adc
inc
fsts
dec
sahf
out
push
popf
stos
inc
mov
test
ljmp
sahf
loop
adc
jge
repnz
cltd
mov
stos
add
push
divb
pushf
push
jmp
jg
fisttps
cwtl
mov
sub
xchg
insl
std
js
sub
pop
out
jae
mov
enter
sbb
sbb
sub
in
xchg
daa
push
pop
xchg
add
imul
push
stos
push
xchg
roll
loop
pop
adc
jno
das
jp
cli
loop
push
cltd
xchg
and
aas
sub
xchg
sbb
outsb
imul
in
adc
enter
fldenv
push
mov
add
insb
les
push
out
arpl
mov
cwtl
adc
dec
dec
push
xchg
cmp
jmp
mov
cmp
sub
cwtl
add
cmpsb
xor
lcall
mov
repz
sar
push
testb
popf
xchg
test
xor
ret
xorb
sti
jmp
ljmp
xchg
adc
dec
adc
inc
jge
dec
adcb
in
je
les
lods
mov
sbbl
lds
data16
add
pop
pop
lds
add
cli
add
jmp
loop
popf
and
push
mov
in
or
inc
repz
xchg
cmp
push
push
cltd
inc
test
add
push
stc
xchg
push
jecxz
pop
clc
roll
inc
pop
and
sahf
ficomps
call
and
xchg
jae
sbb
mov
add
and
scas
push
ds
sub
mov
enter
push
pop
inc
fstpl
stos
push
push
jae
sub
sbb
test
dec
push
sub
aam
mov
or
lock
rcrb
push
xchg
test
lock
sub
insl
pop
add
cmp
out
mov
pushf
mov
fisttpll
sbb
jae
imulb
lret
repz
nop
xchg
into
mov
ss
xchg
jp
or
and
push
cmp
xor
loop
subl
sub
xchg
xchg
call
jo
push
mov
pop
nop
lahf
jmp
pushf
mov
xchg
cmp
shl
cmp
loop
loopne
inc
lods
aaa
scas
xor
mov
out
push
popf
add
mov
stos
adc
test
fs
and
test
mov
cmp
cwtl
inc
cmpsl
jecxz
and
push
mov
cmp
lods
push
sbb
mov
mov
xchg
lcall
or
sti
jg
into
mov
repz
subb
inc
sbb
loope
and
add
leave
loope
mov
out
jb
sbb
add
mov
outsl
in
push
or
aas
rcr
aad
sahf
xor
or
popa
lods
inc
pusha
fdivrl
mov
mov
inc
push
pop
jle
mov
dec
insl
jmp
cs
dec
insl
add
outsl
outsb
gs
lret
movsb
int
pop
inc
sub
sahf
les
leave
sub
in
shlb
and
rcr
or
pop
lret
or
popf
mov
cwtl
push
push
dec
cmp
sub
cmp
jne
push
xlat
mov
jne
inc
push
js
scas
sbb
jbe
das
lahf
xchg
fcomps
push
xchg
push
subl
and
dec
or
test
jl
cmp
scas
xorb
mov
adc
xor
pop
mov
cmp
out
pop
push
test
inc
jmp
inc
mov
in
out
add
insl
pop
shrb
mov
pop
dec
xor
dec
daa
pop
push
shlb
mov
sbb
aaa
subb
shll
call
lds
cltd
pop
dec
mov
mov
mov
out
lds
xlat
movsl
mov
jecxz
shll
cmpl
fldt
mov
fs
icebp
addr16
jp
shrb
sti
pusha
int3
mov
inc
adc
mov
pusha
iret
jno
incb
in
addr16
and
inc
stos
mov
and
push
cmpsb
mov
or
cltd
jne
xor
sbb
jb
jle
bnd
mov
ljmp
pop
sbb
fdivr
jae
or
mov
and
stos
movsb
add
mov
enter
adc
es
and
pop
in
jb
push
lds
clc
jb
jge
mov
imul
movzwl
inc
mov
pop
inc
lcall
xchg
in
adc
fistps
dec
cmc
rcrl
mov
jecxz
sub
rol
cmc
out
and
or
xor
xchg
xchg
frstpm(287
push
xor
outsl
mov
decl
clc
jp
fisubrs
or
fs
pop
sub
sub
imul
fbstp
outsb
vsubpd
jno
mov
int
push
jg
inc
pushf
add
inc
call
mov
sub
adc
fstps
int3
hlt
cli
js
adc
lods
imul
stos
orb
pop
sbb
mov
mov
into
into
push
dec
aad
test
xchg
hlt
adc
fwait
test
fwait
push
in
mov
sub
in
jecxz
imul
mov
aad
or
mov
or
jnp
mov
popa
cld
push
sti
in
les
sbb
jge
jbe
ret
mov
lods
xchg
imul
add
mov
mov
and
gs
jnp
mov
and
fdivl
push
shrb
testb
loopne
jecxz
and
jecxz
mov
out
push
inc
sahf
in
push
xchg
hlt
in
jecxz
sub
daa
fld
mov
bound
xlat
daa
popa
mov
outsb
pushl
movsb
and
push
movl
fsubr
sarl
mov
xor
cmp
clc
adc
pop
rcrl
test
cmp
xchg
cli
mov
jne
in
and
push
sub
movsb
adc
out
and
cld
mov
jge
movsb
xchg
div
jne
sub
push
ret
fldcw
mov
and
xlat
xor
addr16
nop
nop
lock
mov
add
jmp
xor
jg
test
and
jecxz
lcall
popa
mov
idivb
cs
ss
push
xor
int3
lcall
add
and
lods
push
les
cli
cmp
adc
daa
push
cwtl
push
pusha
sub
std
or
mov
inc
sub
movsb
jae
add
pop
and
mov
pop
push
imul
js
xorl
fnstsw
and
mov
sbb
imul
insb
or
mov
mov
and
clc
dec
pop
je
xor
icebp
enter
xor
sbb
xchg
pop
dec
imulb
sahf
nop
daa
test
sti
pop
shrl
xor
pop
lahf
xor
lea
lret
outsb
pop
int3
imul
leave
mov
dec
loop
fbstp
jns
mov
and
jecxz
sbb
dec
dec
cmpsl
lock
and
fistpll
fmuls
adc
mov
mov
push
pop
loop
xor
lds
cmp
fildll
test
int
and
push
inc
stos
lods
mov
xchg
testl
ja
movsb
out
call
and
cmpsb
notl
sbb
pop
fwait
and
outsl
sub
mov
push
inc
xlat
bound
cs
xchg
jecxz
push
jmp
jle
pushf
push
out
popf
daa
imulb
ss
mov
rcrl
out
out
xchg
lret
subb
addl
movsb
mov
xor
aas
les
inc
pop
mov
adc
ss
fstps
fisubl
push
out
leave
jg
pop
pop
sahf
dec
in
fsub
or
push
aas
push
fimuls
push
push
hlt
pop
in
int3
push
loopne
or
es
push
and
mov
jo
push
mov
dec
enter
push
enter
lea
xor
fcompl
xchg
sub
jne
sub
fucom
addr16
add
pop
sbb
cmp
add
rorl
in
and
int3
or
lea
xor
into
fsub
pop
imul
lret
adc
pushf
and
popf
mov
pop
sbb
ret
xchg
imul
mov
fdivs
mov
lods
ss
lea
sbb
pusha
sbb
sahf
lea
fsubp
test
pop
push
xchg
ret
ja
xor
inc
pop
jg
test
outsb
jae
pop
xor
fmull
inc
cmp
nop
fldcw
jle
sub
arpl
sbb
cmpsw
addb
add
cmc
cmpb
fldt
fwait
in
imul
js
int
push
cmp
add
add
mov
pop
daa
test
mov
xchg
scas
pop
and
dec
cltd
int3
in
pop
jmp
ss
sub
out
mov
cltd
or
fisubs
insb
and
testb
sti
cmp
jg
and
xor
leave
les
lahf
cwtl
add
in
ja
cmp
outsl
mov
cli
mov
push
lock
popa
shrl
push
negb
and
sub
addr16
inc
fimull
and
mov
xchg
ret
data16
xchg
fisttps
xchg
hlt
outsb
xor
inc
xchg
inc
fs
mov
mov
pop
pop
cmp
jp
sub
mov
mov
mov
mov
out
xchg
pusha
outsb
nop
data16
mov
fs
cmpb
es
and
push
push
cmp
repnz
in
aas
ljmp
add
cmpsb
les
into
jnp
sarl
outsb
sbb
xchg
and
dec
jnp
icebp
in
imul
mov
ja
js
adc
lds
shrb
pop
das
push
cmp
adc
aam
mov
jne
push
or
sbb
fisubl
mov
jno
and
inc
aad
test
loop,pt
out
push
repz
out
inc
rorl
test
decl
test
jp
lea
ss
jae
add
movsl
jl,pt
xchg
ljmp
sbb
out
js
push
push
add
roll
mov
sbbb
jo
jbe
repz
nop
and
jmp
aad
cmpsb
lahf
sbbl
in
sub
fcmovnu
inc
add
adc
dec
inc
push
insb
imul
pop
enter
sub
sub
shlb
cs
fildll
shll
enter
test
jno
sub
pmaxub
mov
pop
fisttps
jno
push
jle
push
sub
jo
add
xchg
push
lods
mov
scas
sahf
mov
mov
xor
xor
daa
xchg
xor
push
mov
insl
dec
aad
or
test
leave
scas
pop
imulb
and
pop
add
adc
inc
push
mov
rolb
inc
ficoms
pop
adc
nop
lret
xlat
mov
adc
jae
ficoms
hlt
lret
pop
dec
pop
arpl
lods
xor
add
mov
ret
rcl
hlt
mov
stos
outsb
add
xchg
xchg
jge
lret
enter
push
ficoml
in
outsl
pop
fdivrl
cmpsl
incb
imul
scas
xor
adcb
stc
xor
hlt
test
inc
fcompl
jl
jmp
dec
dec
push
in
lods
pop
sub
mov
and
mov
cs
popf
mov
sub
cwtl
adc
mov
xchg
jnp
push
xlat
jmp
push
jecxz
daa
push
mov
and
and
jnp
xchg
in
xchg
ss
rolb
lret
xchg
sbbl
push
sahf
dec
jmp
or
jecxz
add
fcom
mov
mov
xor
xchg
jmp
mov
dec
pusha
or
jmp
stos
jge
jmp
cmpsl
mov
fimull
lret
inc
stos
inc
sub
mov
stc
fisttpl
outsl
loope
call
divl
shll
ss
xor
shl
sub
test
pop
mov
data16
sbb
ljmp
xor
in
rcrb
xorl
push
stc
sub
or
adc
daa
xor
scas
stos
stos
iret
aam
mov
clc
cmp
ds
and
stos
jno
push
lcall
mov
loopne
or
outsl
mov
and
cmp
in
and
xchg
adc
mov
push
in
jo
cmp
movsb
dec
push
jo
mov
nop
es
dec
jb
inc
push
lret
loopne
icebp
faddl
fldz
jnp
mov
int3
movsl
imul
mov
int
mov
xor
fwait
shll
setge
call
stc
dec
aam
lcall
mov
cmpsb
push
push
and
fmull
outsb
out
sbb
sbb
enter
ret
or
sbbb
cmpsl
xchg
push
cmp
adc
push
push
pop
adc
inc
mov
xor
int3
xchg
push
stos
push
pop
lock
ret
in
push
in
adc
subb
sub
nop
sub
mov
iret
sbb
call
outsb
cmp
icebp
adc
xor
add
mov
fsqrt
into
add
inc
out
push
fstl
sub
cmp
roll
mov
addr16
and
stc
lret
xchg
or
push
imul
push
mov
xor
sbb
jp
inc
jo
sub
cmp
jg
dec
rcrb
into
mov
fdivr
fsubrl
lea
fstpt
mov
or
in
push
adc
pop
lcall
dec
shrl
push
pop
pusha
dec
inc
rcll
addb
sbb
in
mov
dec
mov
pop
les
in
shll
loope
lahf
and
int
add
cmpsb
mov
push
xor
push
lea
in
cmp
cmc
popa
sbb
inc
ja
pop
or
cli
cmp
in
bound
cmp
cwtl
inc
push
scas
pop
push
addl
pushf
dec
push
push
insb
fstpt
mov
jmp
adc
or
outsb
xlat
jnp
xchg
aad
and
jge
mov
xchg
inc
pop
mov
cmpsb
inc
test
call
in
test
in
enter
sbbl
and
outsb
fsubrl
cmpsb
inc
inc
mov
cwtl
lock
jmp
cmp
xchg
adc
sub
jge
or
ss
cmp
repnz
cmp
pop
xor
mov
or
pusha
sti
outsb
inc
sbb
xchg
scas
mov
xor
popa
lret
nop
or
push
mov
or
addr16
cmp
sbb
push
lret
or
pop
out
sbb
sbb
xchg
lds
pop
movsb
es
fnstsw
out
scas
test
sbb
or
inc
and
push
or
sbb
jnp
lahf
imul
add
bound
std
cmpsb
jnp
sarl
fldt
and
jg
mov
inc
rcrl
jo
mov
cmp
shl
adc
jmp
lret
or
movsl
pop
push
cli
jge
push
lock
cwtl
aad
dec
mov
fsubrs
loope
inc
enter
inc
out
fmuls
lret
scas
add
or
pop
push
jge
lods
fldl
mov
roll
out
and
xchg
mov
inc
adc
jns
lret
aaa
push
popf
mov
mov
xorl
rcrb
sub
xor
sbb
add
stos
push
jb
push
inc
xchg
jae
mov
push
scas
in
inc
test
int3
sti
es
icebp
adc
int
pop
stc
or
rolb
movsb
add
pop
aas
inc
mov
cmp
fdivl
cmp
dec
fisubrl
dec
sbbl
inc
sub
lret
xchg
popa
into
xor
mov
enter
or
xchg
js
push
inc
gs
ret
adc
and
adc
mov
push
fwait
mov
loope
xchg
mov
cwtl
push
inc
pop
jns
movsl
jp
mov
dec
fsubl
fcmovnb
and
sub
inc
out
cmp
enter
xchg
outsb
sub
scas
fldenv
push
out
and
pop
jne
xchg
or
pop
dec
or
cmpsl
xor
and
sbb
jmp
cmp
aad
addr16
or
dec
cmpsb
call
cmp
jno
loope
lea
popf
outsl
pop
inc
pop
mov
and
out
jl
or
dec
psubw
ja
imull
pop
mov
mov
mov
xchg
adcl
repz
jbe
shll
fdivrs
cmp
adc
in
out
imul
adc
cltd
inc
mov
sarl
add
ljmp
xchg
bound
cmp
xchg
cmp
ficompl
das
sbb
outsl
sub
xchg
mov
inc
pusha
das
add
cmp
outsl
sub
push
jnp
aas
int3
pop
xor
mov
and
lods
and
sub
pop
and
pop
jmp
push
lds
xchg
iret
pop
jg
xchg
or
inc
jg
mov
jno
push
push
dec
repnz
rcll
xor
push
dec
into
pop
xor
fmul
xor
ret
add
imul
stos
aad
xchg
insl
pop
adc
scas
push
xor
pop
and
mov
incb
sbb
xchg
or
cmp
cmpsb
movsl
jge
jne
dec
rcll
loop
movl
xchg
mov
pop
into
adc
imul
je
push
hlt
gs
pop
and
push
inc
mov
sub
fldcw
lock
adc
mov
cmpsb
clc
push
out
and
rcll
flds
adc
pushl
jne
sahf
sbb
leave
push
push
movsb
mov
test
adc
or
mov
je
add
dec
shl
repz
mov
or
insl
cmp
mov
lret
out
fnstenv
xchg
daa
sub
in
fidivl
xor
cmc
in
jne
fidivs
jmp
lock
mov
cwtl
roll
mov
insl
pop
mov
sarb
icebp
out
fimuls
jecxz
mov
clc
mov
scas
popa
add
mov
pop
shrb
adc
xor
sub
or
push
and
ret
scas
loope
dec
sub
adc
data16
jge
push
and
sbb
test
jo
movsl
mov
cmp
adc
imulb
mov
add
lret
gs
push
cmp
and
push
ret
push
pop
or
adc
mov
pusha
mov
ds
imul
fimull
in
out
cmp
lcall
xchg
lds
lret
data16
faddp
and
aas
cmp
ss
jg
in
mov
aaa
xchg
leave
dec
lods
imul
mov
lock
inc
adc
push
push
pop
inc
fsts
add
ss
rorb
jge
or
aas
mov
pop
push
addr16
lcall
mov
cmp
or
roll
fstps
outsb
enter
shrl
adc
mov
in
mov
jb
popf
out
cmp
mov
iretw
push
shrl
fwait
dec
mov
stc
out
inc
and
bound
aad
mov
mov
enter
mov
lea
inc
mov
mov
scas
mov
dec
cmpsl
push
xlat
rolb
dec
push
daa
ret
jg
mov
cltd
pop
mov
mov
cs
test
mov
inc
loop
in
repz
aam
xor
jle
fs
and
xchg
stos
dec
mov
inc
push
out
push
mov
sahf
cmp
dec
hlt
mov
ss
movsb
cld
fldenv
mov
pop
jle
ficomps
popa
pop
outsb
arpl
in
mov
adc
pop
dec
cmp
jmp
sbb
dec
bound
in
push
mov
notl
cmp
stos
sti
test
sub
rcl
add
sti
cmp
sub
mov
and
inc
rorb
dec
insb
outsl
std
lods
mov
inc
push
arpl
xchg
push
xor
movsl
mov
pop
inc
fcmovbe
ljmp
in
jecxz
loopne
cmpsb
ljmp
xor
sbb
cmp
sub
push
outsb
xchg
stc
dec
hlt
mov
in
xchg
adc
pop
out
loop
bound
mov
jle
adc
and
loope
outsl
jp
jecxz
mov
sub
cmpsb
repz
jno
cmp
or
add
lret
dec
aad
mov
iret
shll
xchg
xchg
mov
adc
jge
sbb
push
addb
push
fdivr
jno
cmpsb
bound
fwait
pop
xchg
scas
dec
hlt
or
dec
jno
add
shll
push
fldenv
jg
adc
enter
sarb
mov
and
in
mov
add
adc
fmuls
test
mov
cmpsb
into
jb
inc
cmp
insb
mov
frstor
cmpsl
xchg
scas
inc
add
cmp
adc
mov
xchg
shl
lret
sub
stos
dec
mov
or
test
imul
or
mov
push
les
mov
in
popf
mov
flds
test
je
int
nop
aas
stc
xchg
popf
imul
and
xchg
sub
inc
mov
in
sar
hlt
fbstp
sub
push
mov
int3
inc
mov
sar
pusha
xor
hlt
xor
push
jmp
add
dec
inc
push
add
test
inc
and
test
cmpsl
repnz
daa
mov
mov
shll
aam
out
outsl
xor
into
push
push
pushf
adc
movsb
mov
jl
inc
imulb
jo
outsl
es
mov
dec
add
mov
mov
inc
lret
ficomps
out
rcll
lahf
sahf
stc
xor
mov
aaa
cmp
dec
rorb
mov
and
daa
stos
and
push
mov
fisttpll
ficoml
imul
xchg
clc
fmul
shlb
xor
or
jl
xchg
in
sbb
fldt
xor
jnp
hlt
or
add
pop
mov
pushf
imul
iret
outsb
push
rolb
inc
lcall
into
xor
cmp
inc
dec
into
aaa
stc
icebp
out
mov
push
lcall
jmp
jne
or
and
ljmp
clc
insl
cmpsl
xchg
mov
dec
aad
rcrb
mov
push
adc
push
cs
jle
and
testb
daa
push
nop
stos
arpl
xchg
test
mov
leave
iret
imul
pop
xchg
add
and
and
cli
les
pop
and
call
ret
mov
test
lods
insb
jge
mov
mov
pusha
xor
lods
notl
push
mov
sbb
jmp
dec
push
fcompl
push
pop
orb
test
dec
fs
repnz
xor
lods
in
adc
fwait
es
inc
push
out
dec
sub
insl
jno
call
pop
sub
jmp
loopne
mov
in
mov
mov
xor
shlb
inc
in
push
push
andl
jp
push
pop
and
insb
rorb
test
lcall
jge
scas
outsl
cmp
adc
mov
stc
or
sbb
jl
push
cs
push
ret
push
cmp
cmc
aad
adc
pushf
aaa
mov
in
rcrl
jecxz
pop
adc
sahf
jecxz
adc
dec
cmp
fs
pop
cli
jg
fidivrs
aaa
jbe
lcall
cmp
fcomps
cmc
jbe
mov
outsl
sbb
mov
cmpl
subb
mov
out
jno
pop
icebp
dec
mov
inc
stos
pop
and
push
and
loopne
mov
jl
mov
adc
lock
lea
pop
mov
xchg
negl
jl
cmp
pop
cmp
fistl
ret
mov
sbb
xchg
fdivrl
les
dec
sahf
push
mov
sbb
mov
cmpsb
xchg
call
popf
adc
mov
lock
add
and
push
mov
fistpll
xor
fists
mov
xchg
movsb
stos
mov
ja
and
pop
mov
sarl
out
mov
faddl
sti
repnz
or
into
cmpl
sbbl
das
or
jge
stos
sti
in
sub
popa
xchg
aad
push
shlb
xchg
iret
fdivrs
dec
push
sbb
ret
or
pushl
mov
fidivrs
push
cmc
xchg
imul
ret
and
sub
add
daa
or
es
xor
out
push
addr16
subl
jl
test
xor
pop
mov
pop
xor
sbb
jbe
iret
adcb
inc
or
mov
bound
insl
imul
aad
pushf
sahf
xchg
insl
arpl
sbb
pop
cmpsb
inc
and
cmp
mov
sar
mov
push
shlb
pop
repz
lods
xor
arpl
mov
popa
mov
push
and
lock
dec
and
loop
addr16
faddp
repnz
test
sti
loopne
pushl
dec
push
adc
dec
test
mov
stc
push
xor
xor
int
hlt
sarb
cmc
ret
jb
iret
push
jno
sbb
pop
test
push
and
xchg
imul
add
sub
adc
ss
cmp
mov
shrl
call
aad
fistps
int3
mov
adc
test
jne
push
dec
repz
and
or
aad
leave
mov
sahf
orl
sahf
jge
stc
ljmp
mov
jle
stc
imul
lret
fistpl
aaa
cmp
pop
dec
dec
sbb
push
mov
sbb
stos
pop
adc
sbb
mov
push
test
add
pop
sti
pusha
sbb
js
loopne
cwtl
ret
inc
movsb
or
mov
cmp
cmp
shrl
shll
jns
lods
stos
es
outsb
leave
or
and
scas
xchg
fmull
inc
pusha
rclb
xor
mov
xor
push
mov
add
out
hlt
cmp
xchg
cli
fisttps
or
dec
mov
dec
dec
xchg
stos
mov
push
xchg
lcall
cmpsb
insb
dec
mov
add
fbld
pop
lods
and
ja
dec
lahf
pop
sbb
scas
sti
cld
ficoml
mov
inc
cmpl
repz
sti
lcall
dec
loope
push
cli
stos
push
lods
pop
cwtl
cwtl
scas
daa
stos
ljmp
xor
or
pop
adc
lods
fwait
cwtl
repz
or
lea
cmp
and
fdiv
mov
lds
pop
outsb
jne
sub
sbb
lcall
or
out
sub
add
mov
lahf
dec
divb
in
xlat
push
in
aad
or
outsb
shr
mov
jnp
fs
stos
xchg
cmp
mov
dec
in
nop
xchg
cmp
jg
or
fdivl
dec
and
call
push
push
and
and
lret
mov
nop
popf
cmpl
iret
and
jl
adc
cmpsb
xchg
or
or
es
ljmp
movsb
ret
or
add
cmc
or
jno
ss
push
sbb
je
push
or
pop
addr16
lods
push
adc
fsubrs
insb
dec
mov
lahf
adc
xor
hlt
push
test
mov
addl
lods
push
push
cmp
insb
pop
push
and
inc
repnz
pop
out
loop
and
mov
xchg
mov
sbbl
out
xchg
push
out
jno
cmp
and
mov
icebp
vmptrld
jno
dec
sub
insb
xor
sbb
mov
into
xor
push
xchg
inc
icebp
or
fildll
push
push
test
movsb
in
mov
dec
mov
mov
jbe
pop
pusha
mov
imul
mov
and
mov
inc
jmp
pop
jo
adc
mov
or
int
jno
dec
addl
aad
dec
call
pop
movl
loopne
push
and
js
out
and
pop
xor
jmp
cmp
xchg
sbb
push
popa
movsl
popa
mov
mov
mov
out
adc
pushf
xchg
out
mov
pop
mov
dec
aas
sub
fwait
in
mov
subb
es
add
or
clc
dec
fs
add
outsl
fs
in
mov
js
shrl
ja
xor
cmp
test
out
ss
mov
jo
sub
mov
and
fisttpll
pushf
push
cmc
or
scas
cmpsl
inc
lods
sub
push
mov
mov
ja
xchg
xor
gs
jbe
in
pop
aam
sbb
adc
cmp
mov
jmp
ljmp
stc
push
mov
pushl
adc
into
jge
mov
xchg
add
push
xchg
jge
fcoms
and
das
or
push
mov
call
jecxz
lcall
add
mov
dec
adc
inc
adc
fldln2
icebp
xor
mov
int3
inc
or
add
scas
mov
add
adc
test
int3
repnz
add
jmp
mov
xor
mov
dec
add
inc
jae
stc
or
sub
lea
leave
push
push
push
pop
shlb
movsl
pop
clc
lea
lds
and
insl
and
cmpsb
sub
or
mov
push
inc
std
aam
out
jno
jo
cmp
bndstx
pusha
leave
jb
ror
outsb
sbb
mov
xchg
dec
inc
icebp
jbe
lock
in
jns
shl
jmp
or
cmp
loope
cmpsb
pop
mov
add
es
xor
jl
pop
movsl
jle
call
psubsw
add
xchg
jne
inc
push
cmpsl
xchg
fs
and
inc
sbb
cmp
hlt
in
outsb
insb
dec
push
adc
lret
lret
jo
outsl
cmp
or
pop
cmp
call
push
in
push
subl
std
lcall
pop
lret
popf
lods
push
loop
cmpsl
adc
f2xm1
pop
nop
xchg
push
pop
addr16
jg
aad
cltd
aas
lods
ret
cmp
lcall
shl
dec
test
sub
or
xlat
hlt
mov
lret
mov
test
fwait
pushf
outsb
int
rcrl
sti
in
mov
jg
or
inc
push
cli
jns
pop
xchg
add
xor
js
cmp
sub
mov
push
movsl
cmpsl
pop
repz
mov
std
and
inc
pop
insl
jp
inc
ret
sub
pop
jno
popa
sbb
mov
adc
push
imul
mov
mov
addb
xchg
xchg
dec
outsb
lcall
sbb
push
test
out
fadd
dec
repnz
mov
orl
inc
mov
or
inc
mov
cmp
hlt
jmp
iret
shlb
mov
dec
xchg
add
fsubrl
loope
ds
xor
dec
jae
dec
xchg
cmc
mov
pushf
mov
rcll
pop
xor
mov
sbb
adc
cwtl
or
fwait
inc
test
xorb
xor
cld
dec
fstl
push
mov
stc
dec
pusha
jb
or
jbe
add
pop
or
dec
mull
mov
mov
lret
push
dec
lds
push
ds
jnp
stos
popa
xchg
fisubrs
xorl
ret
lock
fdiv
or
xchg
cltd
pop
and
inc
repnz
add
icebp
mov
inc
dec
incl
xor
loopne
sar
in
and
imul
cmp
sub
mov
lret
sub
stos
js
jo
xchg
cwtl
pop
cmc
jmp
push
cwtl
ds
sbb
cld
mov
jge
xchg
icebp
adcb
jmp
mov
push
adc
xchg
mov
fmul
jb
ror
mov
mov
pop
and
fs
cmp
int3
and
orl
cmp
fmul
adcb
jl
pop
xchg
push
sti
or
mov
inc
mov
pop
push
fwait
xor
sbb
adc
or
cli
xor
insb
movsl
push
pop
in
push
imul
xor
in
mov
out
add
inc
aas
imul
fcoml
dec
and
outsl
aam
sub
loopne
mov
dec
rcll
inc
negb
mov
mov
lds
and
and
flds
cmp
ljmp
mov
jge
enter
pop
mov
in
push
mov
pusha
arpl
shll
cmp
mov
xor
jbe
mov
add
addl
or
jno
adc
test
js
jl
sbb
dec
popl
jle
pop
push
jmp
mov
mov
das
mov
mov
fdivr
cmpsl
call
leave
loopne
dec
into
in
sub
cmpsb
loope
aas
mov
mov
mov
jg
dec
cmp
inc
daa
cwtl
out
sarb
sub
jno
mov
test
push
xor
sahf
inc
jbe
movsl
js,pn
xor
mov
jecxz
bswap
mov
xchg
add
adc
xchg
lock
dec
pop
lret
xchg
xchg
subb
mov
mov
mov
jl
lret
popa
lods
jb
inc
rcll
xchg
mov
mov
bound
and
imul
xchg
subl
and
sub
jb
call
mov
stc
scas
or
mov
rolb
jle
xchg
pop
mov
je
das
cmp
into
xchg
and
ja
or
insl
or
pop
jo
pushf
sbb
insb
stos
pop
arpl
mov
adc
pop
or
jp
xchg
rorl
cwtl
loop
fnsave
sar
adc
out
cli
clc
fldl
addr16
dec
call
jae
int3
les
cmp
inc
or
testl
cli
jo
cltd
sub
mov
xchg
in
femms
sbb
inc
push
jno
xor
inc
dec
push
inc
fcmovbe
int3
mov
inc
adc
in
dec
push
fdiv
inc
popa
out
mov
xor
dec
mov
sahf
adc
pusha
ret
xchg
lods
adc
cli
out
mov
into
aas
inc
mov
adcl
add
stos
dec
scas
enter
cmp
mov
sub
mov
loope
dec
lods
mov
cltd
lret
ficompl
push
sarb
hlt
fcompl
int3
and
aam
mov
mov
mov
insl
incb
jg
jle
jl
lret
mov
xchg
lds
pop
lock
fldenvs
mov
rcr
in
sbb
mov
icebp
out
addb
je
xor
jbe
pusha
jecxz
ljmp
mov
xchg
or
mov
cwtl
les
xlat
or
daa
jmp
pop
sbb
and
rcll
mov
xorb
sub
jmp
int
adc
clc
and
jmp
das
pop
aaa
jmp
ljmp
outsl
ds
inc
or
inc
sub
clc
jge
push
lock
sbb
mov
mov
aaa
daa
std
xor
push
xchg
out
xor
fcmovu
jo
insb
push
cmpsl
fnstenv
xor
mov
cmpsb
mov
mov
ljmp
mov
fcmovnb
in
das
push
hlt
mov
dec
sahf
mov
mov
pop
das
decb
xor
pop
push
mov
loope
mov
push
lds
push
sar
jge
jle
mov
xchg
cmp
cld
push
push
shlb
sarb
enter
push
in
pop
jnp
push
inc
mov
ds
lahf
sub
stos
sub
lcall
mov
in
and
xlat
mov
push
and
fistpl
inc
leave
and
sbb
xor
fmulp
add
iret
imul
ds
out
pop
outsb
or
in
js
out
sbb
arpl
push
stc
xor
cmpsl
roll
lret
adc
mov
add
jmp
xchg
pop
nop
popa
push
jg
sub
dec
dec
pop
inc
add
test
pop
incb
adc
jl
fs
pop
mov
dec
add
pop
xchg
ret
fwait
leave
or
inc
add
iret
mov
sbb
mov
negb
jge
cmp
pop
fists
pop
pop
dec
fistps
mov
push
pop
fnstenv
sahf
push
xchg
outsl
xlat
push
push
xchg
sbb
cmp
inc
hlt
out
inc
fstl
sub
in
test
sbb
lods
sbb
cmp
inc
fwait
into
dec
add
mov
cmp
cmpsl
and
scas
push
xchg
out
imul
xlat
pop
or
mov
and
lcall
dec
pop
sbb
cmp
dec
das
sbb
popa
notl
xchg
push
daa
mov
fsubs
idivb
or
inc
mov
pop
fsts
lock
cmc
or
insl
xchg
mov
mov
les
jmp
mov
sbbl
mov
jb
shlb
pop
cs
stos
mov
stc
sbb
and
mov
lods
pusha
mov
cmp
pop
and
lahf
xlat
dec
js
inc
leave
loop
cld
pop
mov
in
sbb
inc
push
dec
cmp
call
mov
adc
cld
push
ror
add
test
push
dec
push
inc
sub
sub
adc
add
xor
mov
pop
and
mov
std
std
ja
out
cs
pop
test
xchg
xorb
mov
pusha
lods
je
stos
mov
dec
xor
call
dec
adc
mov
mov
mov
mov
ja
push
jl
scas
fucomi
jmp
adc
xor
xchg
xchg
dec
mov
inc
sarb
cmpsb
cmp
je
cmpsl
popf
pop
insl
icebp
cmp
xor
sbb
insl
adc
jae
insl
notb
stc
xchg
inc
stos
ljmp
and
jae
movsl
inc
data16
in
cmpsl
gs
sarb
xacquire
ljmp
scas
xlat
mov
fcoms
lcall
mov
unpckhps
pushf
pop
fdivrp
sub
inc
bound
das
aad
sbbb
inc
sub
imul
ja
xor
sbb
ret
arpl
xor
pop
push
popf
pop
in
sbb
popf
sbb
ds
mov
xchg
adc
jle
add
mov
insb
add
fdivp
out
mov
push
dec
push
push
mov
pop
movsl
aad
or
sub
or
fsubs
arpl
add
push
mov
inc
imull
or
and
rcrb
outsl
ja
cwtl
nop
or
or
or
push
rcrl
push
outsl
shrb
and
loopne
cmpsl
unpcklps
lret
dec
repz
xor
mov
jmp
jecxz
push
cmp
sub
jne
mov
ljmp
sub
pushf
sbb
jo
or
leave
out
cmpsb
push
movsl
xchg
call
aas
sbb
les
adc
jp
sti
imul
fdivrp
sub
pop
pop
icebp
cmpb
xchg
jbe
lds
pushf
and
bound
mov
adc
sbb
cmp
pusha
sbb
sbb
pushw
jl
dec
and
and
and
into
mov
and
clc
mov
bswap
outsl
sub
scas
bound
roll
aaa
cs
xor
xor
jb
pop
and
or
dec
mov
gs
lds
xchg
daa
and
lcall
mov
xor
int
mov
lret
fsts
repnz
xor
jp
in
das
mov
rol
dec
lcall
test
rolb
lahf
pop
lea
dec
stos
pop
icebp
insl
hlt
fwait
sbb
out
push
xchg
pushl
fcoml
jecxz
das
pop
rcr
mov
push
dec
pop
lret
rol
jae
cmc
lcall
xor
and
outsb
push
sub
xor
sahf
mov
xor
fstpl
mov
idivb
inc
cmpl
test
push
cmpsb
dec
repnz
rcr
jb
in
sub
out
dec
add
mov
pop
jbe
repnz
leave
js
fwait
inc
leave
pusha
sbb
push
or
arpl
subb
mov
pop
jge
insb
inc
xchg
jmp
inc
mov
add
ja
mov
xchg
int3
inc
stos
cmp
stos
lret
inc
pop
push
addr16
pop
mov
int
sub
and
xor
inc
ja
pop
pop
mov
xchg
aam
imul
dec
and
clc
or
pop
jne
push
mov
repnz
dec
jecxz
mov
mov
mov
pop
mov
cmpsb
test
cmp
jmp
orl
dec
loop
nop
inc
mov
xchg
pop
mov
mov
aas
pop
popa
je
addr16
mov
or
pop
push
pop
ficoml
insb
mov
xchg
push
insb
pop
data16
mov
add
push
pusha
out
mov
sbb
mov
jmp
xchg
pop
cmp
fisubrl
cmpsb
lret
add
incl
pop
ret
outsl
int
rorl
xchg
or
xchg
repz
insl
int3
adc
mov
xchg
out
lods
jns
fists
mov
cmp
and
push
add
add
mov
pop
ss
fisubrl
pop
xorl
mov
push
push
lea
stos
pop
push
or
lret
mov
cmp
pop
es
inc
cmc
repz
pop
xor
out
mov
inc
dec
jns
into
and
ljmp
adc
push
jb
pop
addl
pusha
cs
in
call
push
imul
sar
mov
pop
or
ret
mov
lock
inc
scas
or
mov
das
mov
cmp
mov
add
mov
xchg
outsl
dec
out
cmp
shlb
rol
icebp
mov
cli
in
leave
cmp
fcmovb
push
dec
lods
adc
sti
mov
subb
dec
out
push
mov
add
lds
fisttpll
mov
ja
out
sbb
sub
inc
jecxz
call
cmpsb
cmp
mov
mov
popa
jle
dec
adc
dec
inc
subb
xlat
dec
or
lods
mov
xchg
cwtl
mov
les
fnsave
or
loope
data16
mov
jl
cmp
jmp
xchg
mov
push
xor
push
inc
jl
notb
mov
icebp
cmp
fsubrp
mov
jp
jbe
pop
xor
jecxz
jp
aaa
bound
or
cmp
loopne
pop
fwait
aam
and
adc
mov
xchg
dec
and
jo
jge
jb
dec
loope
inc
xor
xchg
fisubl
mov
push
icebp
pop
hlt
and
fcoms
cwtl
ja
movsl
dec
mov
cltd
lea
repnz
das
in
cwtl
inc
xor
lret
adc
aas
xor
test
and
xchg
imul
daa
mov
clc
push
mulb
js
and
push
movsl
sbb
aad
mov
cmpsb
sti
icebp
mov
adc
adc
call
sbb
mov
sub
stos
movsl
lods
jno
iret
cmpsl
jb
sub
or
cli
xchg
xor
rclb
sbb
xor
xor
jnp
or
cli
out
push
jae
add
daa
xchg
lods
and
pop
movsl
xchg
mov
dec
sbb
lcall
adc
bound
pop
lcall
arpl
movsl
adc
xchg
sbb
lcall
inc
lret
jmp
push
mov
jl
jns
mov
jo
fdivs
nop
in
adc
push
outsb
es
jecxz
in
andl
cmp
push
fadd
pop
jns
cmp
push
xor
add
into
mov
push
pusha
test
jns
cltd
lret
inc
adc
cmp
loope
cltd
stos
push
inc
dec
jno
sbb
cmp
add
and
pop
jmp
inc
in
and
mov
pop
jp
loopne
dec
jns
sti
lahf
inc
sub
jecxz
sbb
mov
insb
neg
ljmp
mov
mov
mov
jnp
stc
mov
mov
mov
mov
push
test
icebp
sti
cs
cmp
dec
test
clc
test
testb
clc
loope
mov
movsb
lret
repnz
add
mov
inc
or
adc
int
fdivrl
xor
adc
je
test
subb
inc
icebp
aam
mov
repz
dec
xchg
dec
divl
inc
cli
add
push
cmp
dec
lods
mov
mov
mov
roll
cmp
repnz
cmp
mov
stc
push
inc
imul
outsl
test
sub
sahf
mov
xchg
sahf
lock
jbe
test
mov
jmp
xor
cmc
icebp
aas
outsb
push
loopne
and
fiaddl
subl
pop
movsl
dec
mov
or
cmp
fs
adc
xchg
shlb
sbb
mov
fwait
lret
pop
mov
xchg
push
popa
hlt
jp
jb
pop
jns
jns
and
mov
rorl
jns
adc
test
adc
mov
lret
jo
push
pop
clc
ror
inc
inc
mov
pop
imul
xchg
pop
mov
push
push
cmp
insl
push
push
dec
cmp
mov
mov
imul
jge
jl
and
push
pop
adc
mov
inc
lea
mov
out
sub
mov
inc
das
mov
xor
jecxz
cmp
push
dec
xor
xchg
lock
clc
cmpsl
movsl
lret
sbb
out
mov
cmpsb
mov
xchg
pop
mov
sub
pushf
out
push
outsb
mov
cmc
mov
sub
das
sbb
inc
push
push
xor
pop
je
push
leave
xor
inc
std
mov
mov
out
fldenv
push
rclb
leave
mov
mov
sub
sub
mov
cmp
mov
andl
fucomp
frstor
lods
popa
hlt
jns
mov
pop
pop
xchg
inc
inc
cmc
xlat
xchg
inc
scas
shll
pushf
lds
jmp
dec
cvtps2pd
sbb
loope
adc
imul
pop
aam
sub
sbb
in
dec
outsb
fs
dec
jno
enter
in
in
xchg
in
pop
xor
movsb
sbbb
xchg
push
or
hlt
xor
lock
mulb
aaa
popf
dec
pop
sub
dec
cmp
cs
cmc
mov
ds
aaa
rcrb
fldl
nop
jmp
mov
add
lret
movsl
cmpsb
dec
in
ja
pop
dec
or
fists
rolb
pop
inc
daa
sarl
push
xor
adc
mov
adc
cmp
add
pushl
nop
add
sbb
enter
bound
xchg
mov
inc
cwtl
ja
stos
out
push
fstpl
mov
mov
loopne
and
adc
mov
mov
lret
jge
adc
mov
xchg
sbbb
test
adc
dec
xchg
fisttps
iret
arpl
dec
pop
test
xchg
shl
push
mov
mov
loopne
movl
repz
es
andl
aaa
push
jb
xor
insl
shll
mov
popf
fs
mov
icebp
test
mov
mov
or
popa
insl
push
xlat
push
xor
sbb
jp
lds
addr16
pop
xchg
sbb
ret
xor
inc
pop
mov
dec
jo
ds
mov
xor
hlt
mov
js
insl
lods
xor
aam
iret
adc
adc
in
sbbb
dec
jmp
xor
lret
dec
outsb
stos
lret
mov
incl
imul
int
gs
mov
mov
push
inc
sub
std
push
ret
cmpsb
mov
or
xor
int3
pop
fdivr
icebp
mov
cmc
mov
and
cmp
mov
inc
repnz
jb
adc
pusha
mov
gs
add
mov
mov
sbb
sub
test
clc
lret
das
push
and
lods
das
dec
pop
enter
push
icebp
rclb
sar
add
jmp
and
xorb
rorl
insl
xlat
scas
loop
xchg
jg
or
sbb
inc
lods
roll
out
cmp
mov
mov
sub
sbb
imul
xor
xlat
fistpl
xchg
or
aas
mov
mov
leave
xchg
sarb
xchg
adcb
pop
int
dec
pop
jmp
mov
cmp
leave
sti
mov
cld
aam
mov
ret
sarb
mov
mov
shlb
mov
in
add
addr16
pop
enter
scas
sbb
mov
lock
xchg
push
fwait
adc
xor
sti
push
jge
fwait
cmp
mov
out
adc
or
sub
test
pop
std
add
test
inc
test
xchg
shll
push
jb
cmpsl
fisttpll
scas
sbb
push
adc
pushl
les
mov
outsl
sub
sahf
push
ja
mov
stos
shl
or
aaa
shr
scas
jnp
pop
aas
sbbb
or
dec
and
mov
js
lcall
jle
inc
lret
scas
mov
outsb
daa
aam
lea
or
cmpsb
shl
mov
xlat
mov
gs
lret
aam
jmp
jno
pop
roll
mov
cli
xchg
dec
and
in
lock
mov
mov
adc
shrl
addr16
adc
mov
aam
inc
jg
fs
pop
enter
cwtl
mov
add
or
cwtl
mov
bound
pop
jp
jle
pop
pop
adc
sub
push
sub
jno
imul
call
pop
cmpsl
roll
xor
out
xor
in
js
loope
movsb
addr16
negl
lods
rcrb
sub
add
sbb
dec
loopne
cwtl
inc
insb
jbe
mov
mov
sub
fs
decb
xchg
les
add
xchg
cmp
xor
aas
icebp
shl
rcrl
lret
cmp
sub
cld
call
mov
push
repnz
loop
xchg
lock
jo
filds
fucomp
out
call
mov
sbb
clc
fst
xlat
add
sbb
and
enter
bswap
gs
iret
xor
das
mov
mov
lods
mov
popa
dec
sub
repnz
outsl
fwait
sub
hlt
das
xchg
mov
popa
movl
rclb
rcrb
jo
lock
ljmp
add
pop
out
arpl
push
imul
mov
adc
inc
mov
cmp
mov
lock
jo
push
dec
nop
ja
mov
xlat
jbe
or
cmp
aad
movsl
xor
fistpl
push
cmp
ja
jbe
les
loopne
pushf
scas
cmp
xor
insb
mov
adc
movsb
sub
aaa
sub
in
mov
cmp
ljmp
mov
fwait
cwtl
mov
inc
mov
repz
mov
icebp
negl
add
test
decl
or
pop
cwtl
jno
lret
and
shll
jne
sbb
pop
sub
arpl
out
mov
push
pop
push
repz
inc
scas
lods
pop
data16
cltd
sahf
xor
push
daa
mov
mov
nop
dec
pop
or
in
or
sub
mov
xchg
push
pop
jns
push
jae
into
dec
push
cmp
xor
sbb
lds
in
addr16
out
dec
jl
addr16
jb
xchg
adc
lods
mov
inc
lahf
es
and
pop
inc
mov
inc
and
in
cmpsb
mov
in
rolb
in
or
mov
cli
jbe
dec
jo
sub
in
popa
std
in
jle
pop
mov
sbb
xor
inc
jae
push
adc
push
ret
jg
adc
test
daa
cs
jmp
je
or
cwtl
hlt
aas
cmp
push
shrb
or
jp
cmp
repnz
cmp
mov
mov
pop
scas
pop
inc
mov
sbb
in
scas
imul
fwait
lahf
loop
stc
push
adc
jmp
inc
ja
daa
scas
xchg
inc
cmp
push
fistpll
addr16
sbb
jns
shrb
inc
xor
sbb
sbb
inc
cmp
ficoms
jnp
leave
jp
mov
scas
aaa
pop
fcmovnb
scas
addl
lds
fstp
je
sbb
mov
adc
js
sbb
in
ljmp
loop
push
jl
cmpsb
fimuls
mov
dec
mov
mov
add
mulb
test
push
stos
sbb
xor
mov
addl
ret
xchg
cmc
les
jl
mov
pusha
pop
inc
add
sbb
insb
jns
mov
adc
rclb
or
icebp
test
cmp
jbe
and
push
sbb
sub
call
mov
repnz
sahf
push
lahf
and
sub
push
dec
lahf
jbe
dec
pop
lea
and
adc
push
das
mov
lahf
sbb
outsl
push
movsb
popf
cltd
xchg
cmc
cli
inc
cwtl
pop
jne
mov
push
sbb
loope
adc
scas
mov
inc
in
jp
les
inc
push
cmp
pop
fneni(8087
ds
jg
sbb
add
mov
or
iret
dec
cmp
mov
outsl
lea
xchg
pop
mov
xor
lods
imul
subb
push
sbb
aaa
add
mov
orl
dec
push
mov
add
out
test
stos
imul
mov
push
mov
mov
mov
arpl
xchg
fcomip
leave
bnd
mov
cltd
dec
imul
rcll
mov
xor
add
adc
cltd
iret
sub
inc
repnz
in
push
pop
iret
push
jmp
loop
and
lds
add
xchg
fadds
or
movsb
xlat
add
es
xchg
aas
mov
lret
pop
in
icebp
jno
jge
sub
iret
ja
adc
xchg
call
cmc
jge
lahf
mov
xor
nop
mov
fucomp
mov
jg
mov
mov
mov
add
mov
push
jge
inc
jecxz
xor
sahf
inc
stos
inc
mov
adc
fisubrl
and
sbb
ret
xlat
sub
mov
push
fmull
pop
jae
test
scas
int
in
into
dec
in
mov
daa
and
pop
lds
sub
mov
rcrb
leave
loop
jg
in
xor
mov
rol
fimuls
push
dec
and
or
mov
lea
xlat
push
xchg
push
jmp
add
cmp
cltd
fwait
mov
mov
adc
mov
and
inc
in
vmovaps
addr16
ja
sub
cs
dec
jnp
jmp
pop
cmpsb
and
and
in
xorl
imul
shlb
and
jnp
push
jp
pop
push
popf
dec
fcom
adc
cmp
add
shrb
cmpsb
repnz
insl
stos
and
sbb
adc
pop
incl
mov
data16
rcl
lods
cmp
xlat
and
aam
cmpsl
adc
lds
mov
cmpl
xor
pop
std
lods
inc
push
test
mov
cld
or
xor
pop
and
and
push
fisubl
push
decb
js
int
fwait
aaa
iret
cltd
mov
iret
inc
popf
sbb
pusha
xchg
jbe
stos
lock
dec
testl
in
cmp
insl
or
fdiv
testb
daa
pop
add
mov
aam
xchg
xchg
and
dec
cmp
push
fdivp
mov
jecxz
push
pop
inc
negl
movsl
loopne
jl
adc
inc
push
jb
daa
out
xor
loope
test
dec
dec
mov
ret
je
push
jae
dec
add
sbb
or
xor
cltd
cmpsb
stos
add
sbb
shrd
mov
add
and
xor
xchg
dec
or
sahf
pop
push
inc
arpl
fnstcw
or
mov
das
call
pop
insl
dec
lock
lock
outsb
cmc
das
mov
out
out
loop
orl
pop
mov
sbb
ret
daa
pop
js
cmp
dec
cs
lds
xchg
test
fdivrl
insl
xchg
cmp
dec
in
mov
hlt
sbb
loop
rcl
mov
inc
bound
movsb
push
cmp
inc
mov
jbe
push
add
add
jecxz
repz
lea
xorl
cmpsb
adcb
test
jecxz
fstl
ds
scas
les
mov
add
ds
pop
jmp
sbb
je
dec
mov
jl
cli
push
xor
inc
mov
or
xchg
jb
add
dec
test
jnp
xor
adc
mov
mov
nop
mov
mov
mov
sub
mov
jb
adc
dec
mov
stos
fs
ss
in
daa
lcall
add
leave
add
mov
testb
xchg
mov
sbb
and
shlb
mov
sahf
or
pop
in
data16
addr16
adc
push
inc
or
xchg
or
test
or
inc
sub
testl
popf
pop
outsb
aam
xlat
mov
or
xchg
stos
cmpsb
ret
aas
pop
sarb
jle
test
and
jle
sbb
test
fldcw
mov
sub
icebp
ss
repnz
incb
xchg
or
js
scas
repz
sbb
jns
inc
adc
sub
jbe
and
adc
icebp
ret
stos
push
dec
cmp
dec
and
sbb
loope
sahf
mov
sbb
je
sub
add
movsb
sti
inc
xchg
add
xchg
fidivl
rcrl
push
mov
out
loopne
stos
mov
and
jmp
sbb
cmp
sti
arpl
sub
inc
pushl
jb
dec
dec
mov
pop
pop
fdivrl
data16
pushf
mov
cli
dec
nop/reserved
xor
inc
scas
scas
adc
ljmp
add
xor
loopne
or
inc
popa
jge
dec
jo
test
aas
pop
in
outsl
sbb
pop
shl
push
dec
jnp
push
add
lods
sbb
das
xchg
mov
inc
xchg
ss
pop
inc
lahf
xchg
cs
adc
xchg
aaa
ds
jns
and
xchg
add
mov
loopne
pusha
dec
out
xchg
push
jp
inc
mov
pop
mov
icebp
mov
out
add
imul
mov
push
or
testb
cmp
mov
fwait
pop
inc
std
jns
int
ret
notl
sub
push
les
mov
cmp
jbe
sahf
sub
int
adc
adc
out
and
sub
jle
mov
movsl
pop
mov
popf
inc
stos
lods
jbe
lcall
mov
cld
xor
or
clc
daa
cmp
aaa
mov
mov
std
movsb
addr16
push
cmp
sbb
call
xchg
loope
xchg
jbe
xchg
sbb
fbstp
pop
mov
test
and
add
aad
pop
push
adc
mov
insb
xor
xor
cmpsl
rorl
push
stc
cltd
bound
repz
mov
adc
sub
add
lods
aas
xlat
jae
hlt
out
cli
aas
enter
in
sub
cmp
push
jp
idivl
test
std
in
mov
dec
lods
insl
outsl
in
and
push
insb
inc
jmp
mov
cmp
incl
fwait
mov
ss
pop
inc
ds
jno
xor
sahf
dec
push
mov
add
jns
arpl
stos
xchg
adc
mov
fildl
fisttpll
mov
xchg
stc
or
das
jg
mov
push
and
pop
fstpt
fmull
pop
mov
jbe
aas
orb
mov
push
add
dec
imul
cmp
sbb
mov
inc
pop
in
movsl
decl
cld
pop
or
jno
xchg
dec
add
jnp
cmpsb
mov
icebp
adc
int
mov
icebp
divl
filds
jae
xor
jnp
add
stos
int3
pop
sbb
dec
ljmp
decl
fcomps
aad
ljmp
insb
jmp
cmc
repnz
out
add
lret
inc
insb
orb
ret
pop
decl
cwtl
in
les
push
cli
sbb
loopne
jmp
ja
out
mov
fscale
jp
jb
pop
add
xor
scas
inc
fcmovbe
lods
int
jno
call
ffree
jnp
or
or
ss
adcb
cwtl
jbe
ss
mov
mov
paddw
roll
nop
mov
je
push
push
pop
or
es
cmpsl
adc
inc
sub
pop
xchg
mov
dec
push
sbb
adc
leave
stos
xchg
pusha
inc
pop
add
ret
out
insl
repnz
jle
lods
cwtl
mov
mov
and
jae
in
and
mov
mov
cltd
xor
loopne
push
xor
dec
xchg
loope
pushf
jnp
xchg
inc
mov
jle
add
jecxz
rol
jecxz
push
xlat
sub
sub
cmc
js
pop
dec
cs
xchg
adc
sub
cwtl
fsubrp
push
and
lahf
cli
mov
iret
jecxz
mov
push
mov
stos
or
mul
jp
and
nop
pop
or
pop
or
insl
and
fwait
call
mov
imul
sbb
fs
in
repnz
jbe
sub
insl
mov
mov
push
push
loop
adc
add
stos
mov
xchg
dec
dec
scas
data16
stos
adc
ja
int
inc
popa
add
jbe
jbe
test
inc
insl
loopne
jle
daa
bound
pushf
ret
jbe
ror
sub
aaa
inc
xchg
and
in
xchg
jp
add
cld
stos
incb
mov
xchg
outsb
mov
gs
iret
mov
sbb
push
xchg
subb
iret
jge
daa
cld
or
sub
xchg
push
add
sub
hlt
push
lds
mov
cli
and
scas
sub
push
jo
push
sub
subb
adc
test
movsb
shr
mov
stos
pop
imul
dec
mov
fwait
sbb
and
lahf
push
inc
pop
popfw
jle
rcl
ja
cmp
mov
dec
mov
lahf
sti
mov
out
fdiv
and
data16
mov
ret
hlt
mov
mov
inc
notb
mov
sbb
xlat
xor
test
cmpsl
fdivrl
das
inc
repz
in
xor
mov
cmp
add
lods
xor
mov
in
es
mov
inc
cmpsl
jecxz
xlat
ret
lock
aaa
imul
call
sbb
jge
cmpsl
adc
std
push
scas
cltd
aad
les
aas
popf
shrl
add
xchg
cltd
jp
xor
rol
std
icebp
xor
stos
sbb
dec
loope
adc
pop
test
pop
lea
comiss
ret
mov
rolb
pop
pop
das
clc
arpl
push
les
ljmp
xchg
xbegin
int
popa
ficoml
mov
int3
pop
int
imul
jl
and
mov
dec
fs
or
inc
nop
jbe
mov
jp
sub
push
dec
cmp
dec
dec
sbb
sub
js
jl
mov
ret
fs
stos
push
jo
stos
push
sbb
ss
fsubrp
jae
scas
jl
mov
sbb
ds
scas
pop
pop
popf
arpl
bound
je
ret
cmpl
cmp
inc
outsb
add
out
push
and
push
dec
or
mov
imul
addr16
push
cwtl
mov
popf
cmp
cmp
lea
subl
mov
notb
dec
mov
jg
mov
mov
pop
insb
ret
lds
lock
outsb
gs
adc
or
test
stos
mov
iret
gs
les
lcall
adc
pop
pop
and
adc
lea
fcmovne
push
adc
ror
xchg
inc
sub
pop
icebp
inc
xchg
xchg
or
imul
mov
dec
add
mov
xchg
push
call
mov
xor
xor
pop
dec
adc
int
cmpsl
mov
push
iret
mov
rcrb
mov
pushf
mov
loopne
sbb
xor
fldcw
repz
dec
sub
scas
adc
and
adc
cld
movsl
inc
jb
out
cmp
cmp
cmp
je
jecxz
aam
jne
shl
fldenv
xor
movsl
aaa
lds
aas
push
inc
js
cwtl
push
cmpsb
daa
fildll
ja
sub
dec
leave
pop
lret
aaa
jae
cmpsb
scas
add
pop
and
popf
je
lds
test
das
push
sub
xchg
inc
outsb
or
inc
mov
lcall
stc
push
lret
jae
filds
mov
rolb
or
jge
loop
ja
xchg
mov
fisttpll
test
pop
je
cmpsl
and
rclb
sub
xchg
cmpsl
pop
fstp
pusha
imulb
add
rorl
out
testb
rcrl
jnp
mov
sahf
push
std
mov
push
aam
jne
pop
pop
cltd
mov
push
mov
jle
jno
mov
notl
sahf
mov
mov
rclb
xchg
mov
cmp
mov
push
ds
sbb
inc
sbb
inc
ret
cli
repz
loopne
add
je
popf
push
mov
dec
jecxz
test
ds
es
pop
adc
pop
inc
and
mov
imul
call
mov
pop
outsb
and
outsb
mov
push
lds
xchg
aas
mov
popa
into
jns
jge
sarl
into
cld
mov
adc
mov
std
test
shlb
pop
push
push
popf
add
pop
pushf
jae
cltd
mov
icebp
add
or
and
mov
add
cmp
sub
or
or
pop
add
cs
int
pop
pop
and
pop
jo
or
pop
sbb
xorl
xchg
mov
mov
sbb
testl
in
adc
jecxz
in
adc
adc
adc
shr
adc
fstps
dec
xchg
add
mov
out
rcrl
inc
or
and
mov
push
orb
hlt
xchg
aas
or
pushf
fstpl
imul
arpl
or
xchg
mov
add
adc
stos
push
inc
jecxz
daa
jecxz
mov
cmp
add
popf
jae
fcmovne
repnz
repz
nop
fisubrl
xchg
inc
loopne
jge
mov
in
nop
addr16
add
sub
call
inc
nop
adc
dec
shl
xchg
sbb
or
outsl
sbb
test
xchg
cmp
mov
fstpt
mov
popa
ret
jge
stos
mov
inc
jo
movsl
mov
gs
mov
xchg
and
add
sbb
sbbl
xchg
sub
xchg
add
mov
jg
lds
push
cli
aaa
stc
push
xchg
sub
test
xor
mov
push
pop
mov
sub
or
hlt
and
inc
call
adcb
pop
inc
dec
xchg
sub
fstpt
cmp
and
sub
pop
adc
outsb
sbb
fisttps
out
push
xor
and
or
push
aas
xor
test
sbb
imul
mov
das
push
jbe
xchg
stc
cwtl
mov
mov
fadds
ja
sub
testl
cmp
in
push
inc
jne
test
pop
repz
or
mov
ficompl
fwait
jl
std
jne
sbb
js
aam
les
ret
or
xchg
sub
cmp
scas
out
int3
dec
outsl
dec
mov
sub
or
xchg
pop
push
loope
pop
add
add
xor
pusha
push
pop
xor
xchg
and
popl
mov
push
push
dec
or
adc
ret
lret
cmpsb
stos
fldt
je
push
dec
xchg
and
outsb
fs
cmp
pop
add
test
jns
or
xchg
rclb
sub
sub
sub
adc
fiadds
dec
sub
aam
sbb
and
aad
js
jo
test
inc
cmp
shrl
std
mov
cmpsb
frstor
fiadds
repz
jecxz
int
fs
fxch
mov
repz
mov
mov
or
pop
js
and
out
sarl
mov
in
push
neg
loop
mov
ret
inc
test
jl
sub
jl
fnstsw
out
cld
dec
fdiv
daa
jle
mov
sbb
aaa
test
test
xor
dec
xchg
movsl
fsubrl
es
movsb
fnsetpm(287
mov
lock
into
popa
loop
test
cmp
adc
dec
cld
inc
mov
mov
xchg
xchg
push
push
mov
mov
addr16
test
repnz
movsb
fsubl
andl
cli
cli
xorl
or
pop
stos
add
fstpl
out
movsl
stc
lea
add
bound
xor
int3
and
xchg
incb
jo
jnp
popa
inc
in
push
dec
jbe
test
cld
push
adcl
stos
aam
mov
sbb
icebp
jge
mov
movsl
xchg
and
xlat
push
cwtl
jl
mov
sbb
mov
outsl
cmpsb
or
daa
nop
dec
pushl
xchg
jb
jp
sub
or
in
mov
shrl
xor
inc
arpl
push
stc
scas
clc
pop
scas
mov
pop
cmp
sbb
or
insl
mov
mov
xor
scas
lods
mov
movsb
aam
gs
cmc
icebp
or
into
sti
cs
aad
test
aaa
call
leave
sbbb
jle
out
sbb
and
mov
shll
mov
es
mov
movsl
mov
lods
inc
jno
adcb
adc
test
ja
andl
fisttpl
sbb
icebp
nop
bound
int3
adc
loope
cs
dec
inc
dec
mov
pop
pop
fldt
sbb
pop
mov
xchg
mov
mov
push
insb
in
xchg
pop
and
jb,pt
daa
pop
jnp
inc
sahf
outsb
jge
add
push
mov
push
mov
nop
xchg
and
ljmp
mov
ret
cmp
mov
cmp
fimuls
mov
jno
adcl
stc
repnz
sbb
les
cli
popf
dec
data16
xchg
mov
iret
andl
push
mov
lods
lods
adc
aaa
cmp
rol
pop
out
stos
dec
jg
mov
cmpsb
push
push
fcomps
xchg
cltd
into
pusha
mov
in
adc
popa
inc
mov
fwait
sbb
nop
lahf
cmp
int3
mov
fnsave
pop
push
test
pop
orb
testb
sbb
dec
fbld
mov
jno
xchg
rclb
cltd
cltd
or
xlat
jg
loope
pop
cmpsb
fstps
push
jbe
mov
inc
push
push
ret
cmpsl
adc
or
shr
jb
jbe
push
jle
sub
mov
jecxz
mov
and
mov
dec
sahf
cs
leave
xor
push
lcall
lret
or
psllq
lcall
inc
push
testl
std
jne
sbb
mov
pusha
mov
jae
inc
mov
xor
test
arpl
outsb
and
movsb
arpl
xchg
xor
lock
pushf
sbb
add
sti
clc
mov
dec
mov
fidivrs
dec
xchg
ror
mov
push
jmp
mov
bound
xchg
mov
adc
and
dec
fdivrl
pop
add
cmpsb
mov
jno
cmc
cmpsl
and
cmp
mov
adc
fcomps
jge
jmp
sub
push
pop
orb
int3
jnp
jmp
fnstsw
sbb
or
or
mov
aam
cmp
add
xchg
push
movsb
test
push
and
call
daa
stos
pop
and
addr16
mov
push
lahf
and
xor
mov
fdivl
adc
jo
fwait
aaa
inc
in
xlat
dec
xor
cld
dec
dec
cmp
sub
fcoml
ss
cltd
fnstenv
add
dec
pop
sbb
pushf
cmp
jne
mov
mul
and
cs
mov
or
dec
arpl
jp
mov
pusha
imul
clc
fdivs
inc
fidivs
mov
jne
test
xor
sub
jns
mov
sub
js
mov
mov
pop
sbb
push
jmp
inc
cli
jge
in
pop
add
and
inc
cmp
lods
add
mov
clc
mov
mov
mov
out
loope
mov
cli
sbb
push
cmp
push
push
push
xor
and
xchg
inc
cmc
jnp
mov
add
in
cmp
add
jne
test
out
mov
cmpsb
fsubs
enter
pop
loope
das
sub
push
ja
xchg
xchg
in
orl
ss
add
jle
xor
cmp
into
leave
pop
jg
and
add
push
xorb
mov
repz
jl
out
and
call
cmp
xor
int3
stos
xlat
or
sti
cmp
inc
jnp
sub
mov
lock
aaa
fsubs
sub
mov
out
gs
fisubrs
push
push
push
dec
xor
jle
xchg
in
sub
cmp
mov
pop
shll
inc
or
add
adcb
mov
ror
pop
jg
hlt
xor
sbb
insb
ds
je
fstpl
push
in
push
and
out
jne
pop
cmp
mov
insb
iret
xchg
sub
std
int
lea
mov
mov
test
cmp
ficoms
xor
je
adc
sub
pop
pop
cmp
mov
mov
push
dec
mov
mov
push
push
outsb
sti
fwait
arpl
pusha
subl
xor
and
enter
ds
xorb
and
sub
testb
in
jecxz
sti
imul
ljmp
pop
jo
cmc
add
mov
cmp
rclb
cwtl
sbb
sti
movsl
xchg
sbb
js
js
ds
scas
out
pushf
lds
cmp
imul
test
pop
or
mov
scas
pop
ss
push
xor
xchg
lret
loop
push
jae
xor
data16
mov
add
add
adc
ret
ljmp
mov
ljmp
sbb
adc
mov
or
lcall
movsl
push
stc
mov
dec
sarb
jno
sahf
inc
pushf
add
mov
movsl
shll
mov
lea
push
into
pop
out
jp
mov
jp
in
cmp
loop
repz
and
inc
xlat
pop
mov
repnz
cmp
dec
aam
and
sbb
repnz
mov
fwait
stos
popf
inc
xchg
jb
repnz
adc
push
mov
cs
int3
xor
loopne
sbb
sub
xchg
mov
sahf
shl
inc
cs
xlat
xchg
sti
lea
int
mov
shlb
add
jne
das
pop
mov
ret
lcall
push
addr16
mov
popa
or
pop
pop
xor
and
xchg
pop
cmp
testb
mov
and
mov
and
iret
popf
iret
lods
sahf
add
xlat
sbb
call
insb
movsb
adc
fbstp
fcoms
add
pop
jg
sbbb
sub
jmp
sbb
dec
xchg
push
roll
sbb
test
shlb
inc
in
jle
push
ret
imul
sti
mov
into
js
cmp
add
pop
dec
add
mov
mov
ret
dec
dec
in
xchg
mov
out
pop
out
sub
in
idivb
faddp
xchg
out
push
xor
test
or
lods
loopne
push
loopne
jp
xlat
shlb
sbb
inc
outsb
sbb
xor
imul
gs
xchg
pop
and
popa
shlb
xor
jg
xchg
mov
popa
sub
add
dec
add
jne
mov
dec
in
sub
xor
aad
icebp
cwtl
jbe
stos
insb
mov
mov
outsb
or
ds
call
sub
jbe
pop
mov
jo
inc
sbb
xor
movsl
imul
lds
jbe
aad
in
out
mov
mov
sub
insl
jno
sar
lods
mov
and
push
mov
pop
outsb
int3
mov
and
jl
mov
sbb
sub
rcll
iret
lds
es
arpl
adc
in
cmpsb
cs
mov
xchg
sbb
xlat
push
outsl
ljmp
repnz
mov
sub
cmp
int3
xor
orb
rorb
out
movsb
dec
outsl
xchg
xor
jnp
mov
in
xor
cli
cmpb
lret
sbb
xor
hlt
add
jno
cmpsl
mov
enter
and
inc
arpl
xor
inc
sbb
icebp
test
mov
sbb
ljmp
push
andb
push
pop
adc
pop
ds
pop
popf
fwait
test
cld
scas
push
jb
enter
xchg
mov
cmc
movsb
mov
adc
lock
outsb
ljmp
pop
dec
fwait
movsl
into
divl
pop
cmpsl
mov
mov
movsb
xchg
dec
ljmp
or
loope
aad
jp
cmp
imul
adc
xchg
lods
je
and
sub
lret
ljmp
adc
je
out
mov
sub
mov
mov
in
adc
add
out
test
jns
rcr
lods
xchg
stos
adc
mov
xchg
push
dec
addr16
inc
aas
ljmp
loopne
push
cmpsl
jmp
adc
jle
cmp
outsb
imul
add
insb
cmpsl
xchg
xorl
and
bound
fcompl
in
in
insl
push
add
aam
cmp
pop
outsl
hlt
push
dec
xchg
in
inc
pop
sbb
mull
shl
loope
insb
adc
xchg
sub
pushf
push
push
pop
cmc
sub
pop
pop
jo
inc
scas
add
fnstcw
sbb
inc
mov
lock
jno
pop
loop
loop
lods
call
xchg
xchg
iret
daa
out
mov
sub
push
std
dec
lods
and
sub
cmp
push
mull
out
mov
les
jl
inc
das
inc
pop
cmp
popf
test
sub
popa
mov
push
push
fimull
dec
test
jp
inc
mov
jb
enter
repz
test
xchg
cmp
mov
icebp
sbb
sbb
add
lret
xchg
scas
mov
sarw
add
ja
mov
mov
or
insb
cli
pop
mov
sub
addr16
xor
jb
mov
adc
lret
push
cmp
inc
xor
call
dec
ja
addr16
mulb
sub
dec
sub
outsl
adc
pop
std
jg
loopne
jecxz
scas
repnz
mov
ficoml
lret
out
loop
push
pop
insb
or
xor
outsb
push
mov
xchg
data16
sbb
lods
cmc
lods
cmp
lea
push
cmpsl
push
rcll
mov
sahf
sbb
push
aad
pop
test
or
aaa
out
test
addr16
icebp
mov
pop
xor
mov
xchg
cmp
xchg
cmp
or
mull
sarb
jg
pop
dec
pop
bound
outsb
cmp
cmc
mov
dec
ds
pop
jne
push
add
inc
lahf
jmp
dec
lock
lcall
js
mov
mov
movsl
cmp
mov
std
inc
pop
xchg
outsl
pop
cmp
pusha
jmp
pop
repnz
pop
shrb
adc
insl
jmp
rcrl
adc
jb
scas
into
decl
or
pop
jbe
das
lds
lea
mov
sbb
repz
into
mov
pusha
mov
js
insl
fs
aam
lods
clc
es
rorb
and
push
pop
inc
and
aam
jne
sub
mov
sbb
out
dec
and
ja
add
aam
roll
adc
push
out
rolb
add
cmp
mov
ret
or
movhps
inc
rcll
mov
lahf
clc
in
cmp
imul
and
in
add
inc
push
mov
add
outsl
ret
mov
xchg
incl
jae
mov
add
mov
or
cltd
clc
sbb
pop
in
jp
js
jno
inc
cmp
xchg
out
and
fsubl
adc
into
xchg
lock
lahf
dec
ljmp
nop
and
add
sbb
jge
dec
or
fwait
sub
adc
in
add
add
pop
sbb
mov
daa
into
hlt
loope
xchg
je
or
push
xor
mov
or
add
xchg
xlat
inc
pop
mov
mov
jae
inc
int
xchg
cli
sub
push
cmp
mov
pushf
jbe
loop
jb
push
popa
cmp
sub
leave
stos
mov
pop
mov
inc
cmp
out
add
cmp
cmpsl
sub
aas
outsl
mov
int3
fmuls
nop
rcl
cld
xchg
repz
mov
loope
mull
push
lea
cmpb
dec
dec
adcl
lcall
sub
mov
outsl
jne
cmp
xchg
jne
and
fwait
dec
push
inc
sub
imul
or
in
mov
inc
out
repnz
push
mov
cmc
jecxz
lret
sub
xor
inc
psrlw
rcrb
and
mov
jbe
sbb
scas
enter
imul
or
hlt
mov
jns
mov
xor
insl
stos
negb
pop
push
inc
mov
inc
rcrb
pop
test
inc
out
add
ja
dec
or
add
mov
dec
pop
je
pop
mov
cltd
push
fistpll
sbb
or
or
leave
lret
jmp
or
jge
inc
cli
sbb
inc
xchg
cli
into
ljmp
push
cmpsl
jg
lret
add
push
cmpl
out
in
nop
fdivrp
lahf
inc
loopne
addr16
ja
sbb
insb
das
push
sub
and
testb
dec
mov
add
shll
pop
sub
outsl
pop
movl
iret
jo
popa
ret
pop
roll
subl
inc
jbe
scas
sarb
jecxz
and
aad
lcall
iret
dec
jle
mov
and
cmp
add
jp
xorl
into
sbb
jle
lcall
or
cwtl
pop
leave
aas
les
mov
scas
stos
xchg
stos
xor
out
or
sbb
lds
sbb
loopne
jmp
jns
xchg
and
fsubs
add
fcmovnu
dec
add
scas
out
lret
in
inc
inc
cmc
fisttpl
repnz
inc
inc
das
arpl
in
mov
fchs
push
das
sub
in
mov
das
roll
pop
inc
push
popa
lahf
xchg
call
stc
cmp
xor
sub
sbb
push
pop
push
lods
das
stos
adc
arpl
outsb
ja
mov
testb
adc
mov
in
fnstenv
inc
jp
xchg
mov
andb
and
out
pop
aad
sub
pavgw
addl
pop
mov
mov
xor
push
inc
in
mov
cmp
fdivrl
mov
cli
mov
dec
in
pop
dec
add
add
push
mov
jbe
mov
lods
cmpsl
push
fdivrs
cmpsl
jno
mov
loope
cs
ja
pop
dec
stos
mov
aad
arpl
movsb
in
sarl
js
mov
mov
lea
mov
dec
lret
mov
jno
xor
push
push
inc
push
adc
cltd
xor
adcb
dec
adc
sub
in
lds
nop
test
jb
lret
mov
jle
lea
clc
clc
ss
push
addr16
xchg
mov
jl
cmp
push
sub
aam
cmp
mov
decb
push
ret
or
aad
nop
adc
xor
pop
mov
dec
cmp
adc
dec
add
mov
dec
inc
and
lret
int3
inc
fisubrl
push
mov
mov
in
mov
call
imul
pop
dec
fildl
mov
pop
mov
daa
ljmp
popf
push
into
mov
or
sub
mov
pop
dec
jg
lcall
iret
call
in
test
ret
insb
xor
cmpsl
push
icebp
xor
xlat
je
aam
mov
push
adc
push
xchg
cmp
pop
push
outsl
cld
adcl
jns
fld
sub
add
icebp
int3
or
cmpsl
scas
pop
cmp
dec
adc
or
lret
pop
adc
repz
inc
mov
mov
add
jns
pop
and
mov
imul
mov
test
pop
out
or
aad
xchg
mov
cmpsb
inc
ds
aam
adc
ret
pop
ja
mov
inc
mov
sbb
push
stos
outsl
jbe
in
cmp
xor
xchg
cwtl
pop
mov
out
das
mov
cld
push
enter
push
out
repnz
in
js
pop
repnz
scas
sub
adc
loope
inc
add
repnz
adc
pop
pop
mov
or
lods
jae
or
fisttpll
mov
imul
push
scas
subl
das
mov
icebp
sbb
shll
in
out
aas
test
inc
inc
lret
cmp
iret
out
imul
fwait
shrl
inc
inc
mov
pop
pushf
sbb
repnz
adc
pop
pop
outsb
jae
imulb
pop
dec
repz
xor
rcll
inc
jg
enter
pusha
lret
cltd
inc
int
jle
xchg
pop
inc
nop
out
decl
sub
jmp
sarl
sbb
iret
mov
movsl
test
enter
arpl
int
insl
ljmp
addr16
imul
cwtl
sub
and
loope
sbb
or
push
popa
fldcw
mov
sbb
pop
std
movb
pop
push
cmp
or
sub
mov
cmp
mov
jg
ds
or
pop
and
in
in
dec
push
shrb
push
fs
cmpsb
jmp
push
xchg
iret
mov
pop
or
jb
xchg
adc
pop
inc
cli
pop
pushf
es
test
adc
lea
stos
adc
mov
xor
lahf
mov
xchg
jmp
mov
add
fidivrl
fsts
fxtract
mov
js
outsb
mov
push
mov
outsl
daa
push
mov
dec
push
sbb
jbe
insl
clc
mov
sbb
pop
popf
lcall
mov
add
pop
jbe
mov
nop
xchg
ret
out
ret
pop
jnp
mov
pop
fstps
int
fdivr
jp
push
mov
addr16
shrb
jge
pop
mov
xor
mov
add
sbb
jle
jbe
sbb
push
xchg
mov
leave
push
push
or
dec
jmp
mov
jb
xor
jmp
sbb
cmp
imul
push
push
mov
in
xchg
rcl
jae
cmp
push
fdivr
sub
ja
lahf
fisubs
dec
and
out
inc
icebp
mov
xor
mov
jp
jno
inc
and
pop
fdivr
jbe
repz
inc
outsb
adc
lods
rcr
mov
push
jns
sub
imul
enter
sbbb
sti
testb
cmc
inc
push
cmp
xchg
xor
test
outsl
fmuls
cwtl
cmc
sbb
std
cmpsb
scas
sbb
inc
shl
sbb
xchg
dec
movsl
pop
jp
cmp
jg
stos
add
rolb
lods
xor
mov
shlb
or
lods
add
pop
fstl
pop
leave
cmp
je
adc
lods
and
mov
add
pop
aas
leave
xchg
push
dec
pop
jmp
fsubrl
mov
movsb
mov
push
enter
stos
mov
rcll
mov
add
cmc
sub
aas
jmp
xor
fnstsw
mov
and
cld
pop
cmpsb
lods
push
adc
pushf
and
inc
adc
jmp
jno
shll
mov
mov
inc
and
pusha
dec
aad
xor
jne
or
imul
arpl
xor
std
movsb
sahf
sub
subb
inc
dec
mov
mov
mov
mov
inc
test
xchg
dec
jg
imul
sbbl
out
mov
cli
mov
mov
push
and
js
cmp
push
test
jmp
jge
int3
stos
mov
loopne
mov
jno
insl
aas
xlat
jne
sbb
bound
scas
jg
xlat
icebp
pop
lea
mov
dec
add
pushf
jae
mov
cmpsl
insl
mov
cmpsl
repz
jl
push
hlt
popf
xchg
push
sub
jbe
cwtl
push
adc
mov
dec
pop
insb
pop
ljmp
or
ljmp
fcoms
cmp
jecxz
pop
or
xchg
dec
les
aas
xchg
in
cmpl
jp
jge
ret
add
test
pop
dec
pop
push
mov
and
clc
in
dec
test
insb
push
add
adc
dec
pop
jbe
loope
sti
pop
mov
shlb
push
fs
inc
push
mov
adc
stos
dec
jnp
jl
outsb
imull
xor
push
dec
mov
cmc
xchg
dec
call
add
out
adc
xchg
inc
ret
iret
pop
cmp
pop
dec
imul
addb
outsl
push
lcall
push
fcomip
inc
aad
inc
dec
stos
inc
out
cmpsl
mov
and
in
sti
xor
push
push
ficoms
fstl
xchg
imul
adc
adc
push
cwtl
xchg
inc
or
mov
les
push
add
xchg
ja
das
jnp
push
mov
push
push
out
xor
or
lea
xor
ss
sti
jp
mov
mov
jl
inc
andl
jmp
xchg
sbb
outsl
cmp
shll
out
pop
stos
adc
and
sub
call
sub
mov
pop
iret
subl
fistpl
mull
xor
rorl
into
loopne
ljmp
aaa
scas
dec
in
loope
xchg
dec
cmpsb
sbb
popf
cmp
aas
sub
dec
mov
mov
inc
cmp
das
jnp
jmp
cmp
repz
inc
cmp
jl
push
es
xor
sbbl
divl
stos
stc
in
push
sbb
jns
repz
enter
xchg
mov
fistpll
adc
stc
jno
pop
inc
mov
pop
sub
jp
fldcw
cli
shlb
pop
fidivs
xor
pop
cmp
xchg
xchg
xor
in
mov
ret
cmp
adc
jle
push
adc
mov
xchg
xor
xchg
int
fldl
mov
pop
xor
ret
inc
cmp
test
mov
leave
pop
aad
mov
test
icebp
data16
vmread
mov
xor
es
lret
in
clc
sbb
ret
sti
popf
add
inc
clc
jg
nop
ss
scas
push
enter
pop
je
movsb
jne
cmpsb
hlt
repz
add
add
movsl
and
cwtl
adc
pop
test
xor
shrl
jne
jmp
es
jmp
jbe
cmp
pop
adc
nop
ret
call
cwtl
pushf
fmul
adc
cmpb
add
lods
sub
es
inc
sbb
add
lret
or
mov
cli
sub
xlat
fcmovb
arpl
dec
add
ss
jae
xchg
mov
andb
and
roll
lret
call
pop
lods
fs
nop
loopew
ret
negl
sti
sbb
jg
mov
lods
xlat
loope
loop
and
fwait
fs
rolb
pop
sub
push
inc
push
mov
loopne
int3
test
out
sub
es
test
mov
dec
popf
ljmp
int
adcb
addr16
cmp
testl
pop
and
test
sti
aaa
enter
out
push
out
inc
fiadds
xchg
or
idivl
sub
imul
jbe
jg
sbb
jp
das
mov
mov
jns
xchg
jecxz
fildl
mov
push
cmpsb
adc
stos
mov
call
nop
mov
loop
or
and
repz
sub
.byte
movsl
.byte
.byte
.byte
adc
mov
add
testb
dec
mov
ret
mov
ret
pushaw
jnp
in
mov
test
movl
fsubl
lcall
dec
call
push
cmp
cmp
add
mov
xor
ss
into
push
jo
repz
add
rorl
inc
rcrl
sbb
pop
aas
push
cmp
insl
mov
popf
mov
bswap
and
xor
call
push
movsb
cmp
mov
lret
lahf
test
imul
mov
fdivs
add
rclb
or
adc
shlb
push
loopne
mov
mov
push
sbb
add
cmp
inc
add
mov
adc
mov
aas
sub
xchg
inc
leave
pop
push
sbb
push
orb
adc
mov
in
add
sbb
popf
xor
dec
sub
pushf
and
test
xchg
das
cltd
cmp
push
cmp
inc
arpl
sbb
xchg
dec
fnstcw
mov
sbbl
cmp
push
mov
scas
lret
dec
xchg
je
and
rcr
iret
fwait
data16
cwtl
xlat
adc
xor
add
cli
pop
lret
test
stos
std
jmp
sbb
xchg
cmpsl
mov
add
enter
mov
jge
je
mov
int
in
cltd
and
xchg
in
xchg
mov
and
xchg
arpl
adc
jmp
js
xchg
out
jl
sbb
jb
cld
dec
inc
lods
mov
test
sub
aaa
mov
nop
dec
jp
mov
or
aaa
xlat
jbe
xchg
push
cmpsl
imul
push
rorl
dec
and
jg
sbb
cmpsb
jbe
pop
or
xchg
cmp
lods
pop
bound
jecxz
inc
in
imul
mov
mov
fcmovnu
and
fmul
lret
bound
or
lcall
stc
cmc
jl
mov
cmp
gs
adc
pop
inc
xor
dec
inc
mov
je
push
leave
mov
push
or
shlb
popl
pop
adc
mov
and
repz
pop
mov
in
cmpsb
nop
daa
dec
out
shrl
mov
inc
mov
lds
cmpsl
fldt
mov
cmp
in
andb
pop
xor
push
cmp
and
rclb
add
out
mov
cmp
clc
cmp
andb
test
ret
dec
mov
mov
loope
loop
stos
das
int3
dec
cmp
mov
adc
or
and
adc
push
lods
adc
mov
movsl
aad
gs
test
in
imul
mov
ss
xchg
lods
lahf
inc
lret
clc
aas
pop
cmp
pop
pop
add
inc
ret
lret
or
leave
insb
xor
stc
inc
pop
fisubrl
fwait
inc
lds
push
mov
pop
in
pop
mov
jo
push
mov
mov
lret
cmpb
iret
cmpsl
fwait
out
icebp
and
popa
jns
add
je
rcrl
lret
sbb
jge
lret
sbb
repnz
sbb
addb
fiadds
dec
lahf
inc
and
or
jecxz
mov
cmc
sub
mov
das
pop
jle
ja
lea
es
and
inc
push
dec
scas
mov
js
sub
pop
loope
das
imul
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
mov
pop
call
xchg
popf
adc
adc
pop
add
add
mov
push
xor
pop
call
sub
daa
aam
jb
inc
jns
pop
insb
xor
in
mov
pushl
jp
sbb
pop
push
pop
sub
mov
sub
mov
sub
mov
mov
mov
mov
sub
call
sti
sbb
xlat
les
cs
pop
gs
call
hlt
sbb
fidivrs
pop
pop
pop
dec
dec
mov
cmp
jne
xlat
inc
call
jno
jle
xor
cmp
lret
jg
les
enter
jae
push
mov
mov
ljmp
sub
lods
cmp
jno
xlat
cmp
sub
shrl
insb
aas
push
enter
inc
in
xchg
stos
jb
lret
ret
mov
and
xor
jmp
dec
lock
je
mov
pop
sub
leave
orb
inc
dec
out
sbb
fistps
shrl
out
sbbl
sub
sbb
jno
sub
xlat
inc
sbb
add
xchg
push
movsl
ret
sarb
push
test
in
icebp
push
xor
push
insb
cs
ljmp
popf
xchg
sbb
loope
mov
std
icebp
push
xor
int
dec
and
leave
jl
mov
mov
add
sub
icebp
push
int3
fldl
mov
pop
lock
xor
cmp
icebp
push
out
movsl
jb
stos
mov
pop
sub
jae
cmp
icebp
push
xor
push
push
mov
dec
adc
notb
jae
ja
push
jge
mov
jae
int3
mov
ficoms
add
add
lret
movb
push
xor
mov
sahf
xchg
pop
add
aad
jns
xchg
dec
mov
addb
jns
mov
outsl
push
test
xchg
sbb
loope
movsb
inc
lock
add
pop
xor
push
push
pop
adcl
loope
mov
add
repnz
mov
pop
pop
xor
icebp
loop
std
addb
sub
bndstx
daa
or
ljmp
lahf
mov
xchg
sub
inc
test
js
std
mov
stc
fs
jge
xchg
shl
roll
lahf
dec
sub
cmp
lret
pop
sub
xchg
mov
xor
cmp
inc
test
pop
jmp
sbb
out
push
or
adc
cmpsl
jmp
pop
mov
xchg
xchg
ds
decb
xchg
stos
inc
in
ss
or
test
movsl
cmp
adc
adc
sbb
rorl
xor
fldln2
mov
stos
mov
mov
in
inc
mov
lods
cmp
ljmp
push
repz
mov
mov
inc
mov
popf
pop
shlb
pop
xorb
fsubrs
std
adc
jmp
xchg
jne
pusha
jmp
pop
ret
loope
adc
pop
pop
std
xor
sub
mov
mov
add
mov
fnstenv
mov
int
leave
xchg
mov
mov
or
mov
inc
jne
mov
mov
in
pop
and
ja
mov
pop
jle
jl
jbe
jl
mov
xchg
arpl
xor
or
lret
jecxz
idiv
pop
inc
sar
pop
pop
ret
mov
xchg
ljmp
pop
inc
mov
sti
ljmp
mov
in
jno
stc
and
mov
add
adc
bound
mov
pop
inc
mov
std
mov
fdiv
mov
ds
pop
sbb
std
pop
inc
mov
cmpsl
into
mov
pop
out
popf
and
aaa
sbb
arpl
js
dec
inc
andb
aad
pusha
inc
scas
fsubp
stc
pop
sub
ja
dec
inc
mov
push
cmpsb
mov
pop
inc
jno
push
dec
mov
cld
dec
jno
outsl
dec
mov
jecxz
pop
add
inc
sbb
arpl
jg
pop
inc
ret
push
mov
pop
mov
mov
pop
in
lcall
cmp
pop
lds
jg
dec
mov
jecxz
inc
add
inc
fldcw
insb
xchg
arpl
cmpsl
fst
inc
add
inc
sbb
aam
lcall
sbb
pop
add
mov
pop
test
inc
xor
pop
push
inc
inc
mov
and
sbb
arpl
andl
add
std
pop
inc
sbb
bound
cmp
mov
fstpl
push
insb
and
mov
inc
fst
pop
add
inc
ret
std
xchg
arpl
sbb
jg
dec
mov
jecxz
sbb
arpl
mov
arpl
aad
stc
ja
inc
inc
push
pop
jl
cli
xchg
arpl
cmpsl
fst
pop
add
inc
sbb
iret
js
inc
mov
clc
dec
cmp
cld
dec
test
inc
xor
inc
cmp
adc
outsl
inc
inc
mov
pop
inc
mov
test
arpl
mov
pop
xchg
out
push
enter
loopne
jl
xchg
sbb
icebp
inc
and
push
shrl
stc
push
push
fs
or
fdivrs
fmuls
sahf
push
and
push
shrl
stc
cmpb
mov
fs
or
fdivrs
fmuls
nop
movsl
xchg
jne
xchg
fs
jne
xchg
dec
out
sbb
sbb
and
sahf
push
and
push
shrl
stc
data16
push
test
ret
fsts
shlb
dec
out
sbb
sbb
and
sahf
push
and
push
shrl
stc
add
lock
dec
out
sbb
sbb
and
mov
shrl
stc
add
xchg
addr16
js
xorl
pop
xorb
les
add
inc
mov
nop
movsl
xchg
jne
xchg
fs
jne
xchg
dec
out
sbb
sbb
and
js
mov
pop
inc
add
arpl
andb
js
xorl
bound
mov
add
and
sbb
and
and
add
dec
push
aam
clc
xchg
jbe
insb
sbb
and
and
xchg
filds
out
test
mov
pop
inc
sbb
arpl
mov
pop
inc
mov
das
dec
mov
pop
mov
stos
pop
outsb
cli
rclb
inc
inc
mov
pop
sub
push
push
xchg
lret
out
iret
js
inc
mov
mov
into
das
pop
inc
inc
mov
pop
ret
inc
inc
mov
pop
inc
mov
mov
push
mov
js
push
ret
fnstsw
xor
pop
push
test
mov
cltd
xchg
test
push
pop
pop
out
push
shlb
jge
pushl
cmp
xchg
orl
inc
add
incb
outsb
std
cwtl
fwait
cwtl
rcr
push
stos
push
int
mov
cmpsb
shl
pushf
and
cmp
xor
push
xor
push
jnp
inc
add
xor
sbb
lds
sbb
cmp
imul
or
aaa
and
arpl
mov
pop
inc
mov
pop
inc
mov
pop
inc
mov
pop
inc
mov
pop
inc
mov
pop
inc
lcall
add
xlat
std
pop
inc
repnz
mov
pop
inc
mov
pop
dec
mov
pop
inc
mov
pop
inc
mov
pop
inc
insl
insl
push
inc
mov
pop
inc
mov
pop
inc
mov
pop
inc
mov
pop
inc
cmpsl
adc
sub
fsub
and
decl
hlt
sbb
inc
push
int3
push
shr
dec
adc
pushf
jno
jl
add
pop
jbe
mov
mov
iret
mov
test
pop
mov
xor
ja
inc
arpl
stos
lcall
xlat
or
sbb
jg
roll
cmpsl
push
outsl
mov
push
fldcw
xchg
cmp
jb
fistpll
cmpsl
inc
cmpsl
adc
push
aad
add
dec
cli
enter
addr16
movsb
data16
pushf
in
mov
pop
or
jb
add
xchg
mov
cmp
fiadds
and
scas
pop
pushf
push
loope
dec
and
xor
cmc
in
mov
push
cltd
mov
ret
lea
fwait
mov
mov
sub
jp
test
stos
or
icebp
dec
mov
notl
pop
jns
fstpl
pop
movsl
xlat
sub
mov
subb
pop
insl
dec
cs
cmp
int3
into
imul
dec
and
push
xor
test
inc
out
popf
gs
push
dec
sbb
xor
jmp
inc
inc
call
ror
lret
cwtl
jle
inc
mov
cmp
ret
insb
cmpsb
ja
or
inc
daa
pop
arpl
fnstcw
inc
repz
fsts
pop
aam
push
cmp
add
cmp
xchg
jmp
faddl
cmp
fwait
xorl
xchg
and
mov
mov
in
mov
push
iret
loop
subb
js
pop
xchg
xchg
pop
insl
sbb
cwtl
mul
cwtl
pushf
repz
push
lods
add
scas
test
jmp
inc
inc
sahf
push
lock
insl
xor
scas
fbstp
aaa
popf
cmp
fisttpl
lea
or
mov
pop
inc
mov
pop
inc
sbb
adc
test
js
mov
ljmp
mov
ret
lahf
addr16
fisubs
icebp
outsl
popf
jns
or
std
iret
push
shr
addb
inc
pop
cwtl
push
pop
and
add
sub
jmp
mov
orb
dec
lcall
add
xor
sub
or
nop
bound
fisubrs
jle
add
jg
sbb
mov
jecxz
cmp
push
ja
data16
or
cwtl
cmp
or
pop
test
sub
pop
ret
test
loopne
add
push
adc
sub
sarl
push
movsb
fs
das
leave
push
or
mov
cmp
cmc
lcall
arpl
add
add
add
or
add
adc
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
push
add
or
add
or
add
or
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
add
or
add
add
add
or
add
add
ja
jo
imul
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
push
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
aas
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
jg
das
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
pop
fildll
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lea
add
scas
inc
lret
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
dec
xchg
clc
cmpsb
push
in
sbb
fs
mov
pop
flds
adc
repnz
movl
sarb
lcall
mov
pop
ret
or
xchg
popa
roll
aam
pop
sub
add
lret
xor
sti
pop
inc
cmpsb
insl
pop
inc
sub
in
pop
inc
mov
mov
ret
jl
push
test
shlb
xchg
pusha
xor
jae
inc
push
pushf
test
jp
je
pop
bound
mov
fsts
dec
pop
dec
addr16
test
enter
pop
fs
int
jp
jbe
push
mov
push
jecxz
popa
and
sar
ret
fisubs
orl
loope
nop
scas
push
push
or
dec
loop
xor
mov
sub
lods
stc
jge
sub
pusha
int
xchg
pop
and
movsl
adc
fisttps
dec
pop
mov
dec
and
out
cld
push
mov
cmp
sbb
dec
adc
fmull
stos
jmp
pop
mov
mov
mov
cmc
stc
std
pop
in
syscall
sbb
call
cmp
daa
and
js,pn
lods
inc
sti
test
inc
cmp
adc
and
movsb
fs
mov
into
xor
repz
scas
test
sahf
push
pop
imul
adc
mov
mov
add
or
add
mov
cmp
cltd
aaa
mov
insl
inc
push
test
sti
sub
inc
rcrl
jle
out
scas
jmp
fwait
gs
jne
mov
sub
sbb
inc
fbld
insb
mov
pop
and
ret
xchg
inc
dec
dec
inc
xchg
fwait
sub
mov
clc
mov
lds
sbb
mov
or
aas
scas
popf
jmp
mov
or
mov
sub
mov
lods
cmc
pop
adc
mov
sarl
fidivrl
sub
enter
sahf
or
mov
ret
dec
sbb
pop
add
sub
decl
jp
or
popa
in
xchg
sbb
add
or
aad
mov
mov
mov
xlat
push
rcll
outsl
push
sub
inc
movsl
mov
adc
inc
and
mov
dec
xchg
sbb
jle
sti
scas
add
push
dec
add
xchg
dec
cwtl
gs
add
mov
inc
xchg
inc
sbb
sbbl
fs
push
sbb
mov
les
lea
mov
loope
stos
imul
lods
inc
fnstenv
mov
fwait
xor
sbb
inc
push
or
jecxz
mov
in
cmpsl
inc
cmp
cmpsb
xchg
dec
mov
jmp
fwait
sub
cmpsl
add
movsl
bswap
fdivrl
adc
adc
loope
xor
inc
xor
mov
and
out
cld
mov
sbb
fsubrs
xchg
jno
xchg
in
jo
pop
pop
push
dec
jb
mov
insl
outsl
push
inc
sar
push
xchg
xor
cmovo
xor
mov
jb
repnz
aas
adc
mov
inc
lods
inc
enter
pop
xchg
dec
pop
pop
clc
pop
sub
fisubrs
arpl
mov
push
int3
aad
push
or
lahf
adc
iret
push
mov
bound
xor
mov
shrb
insb
mov
push
aas
and
adc
pop
nop
lods
pop
arpl
int3
mov
dec
imul
js
jmp
pop
xchg
icebp
aaa
push
add
jne
jg
or
sbb
mov
lock
xlat
adc
stos
mov
or
out
mov
icebp
scas
rclb
jl
adc
jns
mov
cmp
movsb
mov
inc
iret
xchg
movsb
dec
mov
cmpsb
cwtl
mov
pop
movsl
daa
sbb
mov
es
pop
mov
insl
pop
test
insl
mov
inc
fwait
insl
cwtl
stos
or
repnz
or
enter
cmpb
in
mov
xchg
push
aam
es
shlb
lea
fwait
dec
lret
in
sbb
aaa
dec
or
mov
sbb
adc
or
ds
xchg
push
std
insl
bound
test
adc
push
insl
push
pop
mov
add
andl
aad
sahf
jg
data16
sbb
and
out
repnz
or
and
or
jo
lahf
std
xchg
lds
leave
nop
in
xor
sub
dec
mov
int3
cmp
xor
xchg
lock
pop
nop
mov
mov
xchg
inc
add
pop
push
aaa
add
and
ljmp
xchg
adc
xorb
test
inc
mov
lcall
clc
gs
pop
icebp
xor
inc
mov
in
test
cmpsl
add
arpl
sar
adc
ret
dec
cwtl
cmp
sbb
jo
mov
push
dec
mov
push
shl
pop
cmp
fwait
into
push
inc
add
inc
out
dec
daa
cli
rorl
scas
repz
stc
xchg
andb
cmpsb
cmp
and
ret
sub
test
das
in
ss
pop
lds
mov
je
push
lods
jno
pop
mov
movsl
pop
mov
fs
xor
xor
cwtl
aas
push
pop
or
jecxz
and
cmp
add
call
out
not
mov
dec
psrad
int3
cmpsl
ja
fs
daa
dec
pop
loop
cs
mov
iret
adcb
push
daa
mov
repz
popa
lcall
adc
aam
sub
mov
jmp
outsb
jle
clc
cmp
mov
inc
pushf
mov
xor
pop
push
sub
fildll
dec
jl
jmp
dec
loopne
scas
xchg
mov
mov
push
ss
jne
fwait
cmp
xor
mov
les
adc
and
xchg
push
pop
aaa
lock
enter
lods
push
sub
mov
dec
orl
mov
push
ja
pop
xchg
daa
out
shll
testb
loop
dec
bound
call
mov
int3
sbb
lods
sub
icebp
pushf
cmp
sub
scas
add
shl
aaa
pop
push
repnz
rorl
push
sbb
lcall
out
fcoml
or
enter
xchg
adc
fmul
mov
inc
outsl
jae
bound
or
rorb
test
shrb
push
xchg
dec
cltd
fldcw
xor
mov
mov
loopne
and
and
jp
loop
pop
nop
adc
mov
pop
pushf
push
inc
lea
xchg
aas
lods
add
xor
jbe
push
push
stos
push
fstps
or
icebp
mov
cmp
insb
jle
enter
sub
sbb
xor
mov
mov
mov
sbb
cs
sub
sub
sub
test
xchg
inc
or
arpl
test
inc
out
test
mov
in
push
gs
ja
cmpsl
or
es
into
mov
or
cmc
lcall
shl
in
loopne
lods
popf
shl
jmp
popf
lret
insb
pop
in
pusha
sbb
aad
out
mov
cmp
dec
iret
fisttpll
dec
mov
lahf
and
or
jle
push
rorl
mov
in
mov
or
push
test
adc
jmp
pop
mov
sub
fs
cmp
xchg
flds
into
lods
loopne
jnp
pop
jp
or
add
mov
ret
loopne
fimull
mov
out
fimuls
push
mov
rclb
dec
pop
or
imul
mov
cmp
and
jp
mov
std
xor
dec
comiss
adc
xchg
insb
loopne
inc
jns
aad
stos
enter
pop
mov
push
or
sbb
dec
loopne
loopne
les
mov
fnsave
fsubs
mov
pop
add
cmpsb
cs
movsb
mov
popf
ficoml
mov
fwait
and
xchg
scas
add
incb
or
inc
jno
das
jae
sub
pop
mov
sub
cli
ret
adc
insl
leave
loope
cmp
and
lods
imul
lret
mov
sbb
sbb
out
outsl
loope
pusha
std
mov
lret
sub
js
out
popa
cmp
movsb
mov
andps
std
dec
xchg
into
mov
pop
fmuls
in
je
sub
mov
push
mov
movl
test
fdivrl
outsl
scas
sahf
mov
frstor
rorl
fwait
rol
add
out
leave
xchg
imul
mov
add
xor
hlt
dec
jnp
push
mov
js
movsl
dec
mov
ds
repnz
jae
or
push
imul
mov
dec
jmp
adc
and
out
pop
mov
add
dec
dec
lock
imul
lock
loopne
and
adc
imul
and
lret
push
mov
jl
test
mov
xor
dec
jecxz
stos
lds
leave
rol
mov
xorl
adc
mov
addr16
cmp
or
imul
stos
dec
jl
int3
subb
imul
js
sub
jmp
ja
pop
cld
imul
jae
sub
push
mov
ficompl
lods
push
out
stc
fnstsw
insl
filds
inc
fcompl
int
iret
